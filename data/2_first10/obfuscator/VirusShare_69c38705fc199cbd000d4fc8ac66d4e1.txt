mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
push
mov
call
mov
movl
movl
movl
mov
pop
mov
add
ret
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
mov
movl
call
mov
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
jmp
nop
nop
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
push
call
pop
ret
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
mov
push
call
add
mov
call
push
lea
call
lea
movl
lea
mov
call
mov
lea
mov
mov
lea
mov
call
lea
movb
call
lea
movb
call
lea
movb
call
lea
movb
call
lea
movb
call
lea
movb
call
lea
movb
call
lea
movl
call
mov
xor
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
mov
mov
mov
lea
mov
mov
mov
call
lea
movb
call
lea
movb
call
lea
movb
call
lea
movb
call
lea
movb
call
lea
movb
call
lea
movb
call
mov
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
mov
movl
call
mov
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
push
mov
push
mov
call
push
push
push
mov
movl
mov
xor
lea
rep
push
push
push
push
push
push
call
mov
push
push
push
push
mov
push
push
push
call
mov
lea
push
push
lea
push
push
call
push
neg
sbb
neg
mov
push
push
call
mov
movb
or
mov
lea
push
lea
call
movl
mov
push
push
call
add
test
sete
mov
lea
call
test
mov
jne
lea
mov
mov
pop
pop
pop
mov
pop
ret
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
push
push
mov
call
mov
movl
movl
movl
mov
pop
mov
add
ret
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
mov
movl
call
mov
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
mov
push
push
mov
push
push
mov
call
lea
movl
mov
mov
call
movb
movl
lea
movb
mov
mov
call
movb
movl
lea
movb
mov
mov
call
movb
movl
lea
movb
mov
mov
call
movb
movl
lea
movb
mov
mov
call
movb
movl
lea
movb
mov
mov
call
movb
movl
lea
movb
mov
mov
call
movb
movl
lea
movb
mov
mov
call
movb
movl
movb
movl
call
call
mov
push
push
push
call
mov
mov
movl
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
push
push
push
mov
push
mov
push
mov
push
push
push
call
ret
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
mov
push
mov
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
add
push
push
push
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
mov
sub
push
push
push
push
mov
call
mov
push
push
push
call
push
call
mov
test
je
mov
mov
push
lea
movl
call
mov
mov
test
je
mov
pop
call
push
push
push
push
call
mov
mov
push
push
push
push
call
lea
movl
call
mov
mov
push
call
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
call
mov
push
push
call
mov
push
push
call
mov
xor
mov
mov
mov
push
call
rep
stos
push
push
stos
call
mov
or
xor
repnz
not
sub
mov
mov
mov
or
repnz
mov
dec
shr
rep
mov
and
rep
mov
lea
rep
stos
stos
lea
push
push
call
mov
or
xor
lea
repnz
not
sub
mov
mov
mov
or
repnz
dec
mov
shr
rep
mov
lea
and
push
rep
push
call
outsl
push
call
and
inc
add
push
push
push
mov
call
push
call
mov
xor
lea
push
call
rep
stos
lea
push
push
stos
call
mov
or
xor
lea
repnz
not
sub
push
mov
mov
mov
or
repnz
mov
dec
shr
rep
mov
lea
and
push
rep
push
push
call
mov
xor
lea
rep
stos
lea
push
push
stos
call
mov
or
xor
lea
repnz
not
sub
push
mov
mov
mov
or
repnz
mov
dec
shr
rep
mov
and
rep
mov
lea
rep
stos
stos
lea
push
call
mov
or
xor
lea
repnz
not
sub
mov
mov
mov
or
push
repnz
mov
dec
shr
rep
mov
lea
and
push
rep
lea
push
push
call
mov
xor
lea
lea
rep
mov
lea
rep
stos
push
push
stos
call
mov
or
xor
lea
repnz
not
sub
push
mov
mov
mov
or
repnz
mov
dec
shr
rep
mov
lea
and
push
rep
call
mov
add
test
je
push
push
lea
push
push
call
push
call
add
mov
lea
push
push
push
call
jae
mov
add
add
pop
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
mov
push
push
push
mov
mov
and
sub
cmp
jne
lea
call
lea
movl
call
lea
movl
call
mov
mov
add
ret
call
mov
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
mov
sub
push
mov
mov
push
push
call
test
je
push
push
push
lea
call
mov
lea
mov
push
neg
sbb
movl
and
push
push
push
call
lds
xlat
jnp
add
call
push
mov
call
mov
mov
lea
push
push
call
mov
mov
sub
mov
sub
mov
inc
push
cltd
sub
mov
mov
sub
sub
sar
inc
cltd
sub
sar
push
push
mov
push
call
xchg
lea
movl
call
pop
pop
pop
mov
mov
add
ret
mov
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
mov
push
push
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
mov
call
lea
push
call
add
lea
push
push
mov
call
push
jmp
push
mov
movw
push
repz
popl
pusha
lea
jmp
push
dec
push
lea
call
mov
pop
call
push
push
push
push
call
mov
push
push
push
push
call
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
mov
push
jmp
pusha
pushl
popl
pushf
pushf
lea
jmp
jmp
mov
pusha
lea
jmp
and
pusha
jmp
call
pushl
popf
push
pushf
lea
jmp
jmp
pushf
mov
pushf
lea
jno
push
lea
jne
movsbw
shl
bswap
mov
pusha
mov
and
bt
test
test
pushf
cmp
call
jmp
push
call
pusha
mov
pushl
jmp
sub
cmc
shl
mov
setnp
xor
pusha
sub
add
call
inc
push
bsr
sbb
add
not
jmp
pushl
mov
pusha
lea
jmp
pushf
lea
jp
pusha
mov
pushl
push
mov
pushl
pushf
lea
jmp
call
jmp
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
lea
push
push
push
movl
call
xchg
mov
mov
neg
push
push
lea
push
sbb
push
and
push
push
mov
push
call
call
dec
neg
sbb
inc
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
push
push
jmp
test
mov
shl
movzww
bt
call
pushl
mov
mov
push
movw
mov
movb
pushf
popl
call
push
mov
pusha
pushl
repz
popl
pushf
movl
push
movb
lea
jmp
stc
not
mov
jmp
add
jmp
repz
popl
pusha
pusha
pushl
movb
lea
jmp
pushf
push
mov
movw
push
pusha
mov
lea
jmp
adc
mov
clc
bt
bt
stc
add
pushf
pusha
lea
jmp
push
mov
pusha
pusha
repz
popl
pushl
movb
push
lea
jmp
mov
pusha
pushl
ret
pushf
pushf
popl
pusha
call
sub
clc
mov
call
call
pusha
pushl
popl
pushf
push
mov
pushf
lea
jmp
bt
sub
mov
shl
pushf
call
cmc
call
jl
insl
lea
movb
call
lea
movl
call
mov
pop
xor
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
push
mov
sub
push
push
push
mov
mov
mov
push
jmp
cld
xchg
movzbw
mov
jmp
push
mov
mov
pusha
lea
jmp
clc
add
std
pushf
call
repz
popl
movb
mov
pushf
push
lea
jmp
cmc
clc
aaa
mov
bt
bt
sub
push
cmp
add
lea
jbe
pushf
call
mov
pushl
call
pushf
pushf
pushf
mov
mov
pusha
movl
lea
jmp
btr
btr
mov
pushf
pushf
call
clc
stc
stc
shl
call
pushl
popl
push
pushf
pushf
lea
jmp
mov
pushf
pushf
lea
jmp
pushf
sets
mov
test
test
push
push
sub
pusha
push
cmc
clc
add
call
mov
pushf
lea
jp
pushf
pusha
pushf
popl
mov
jmp
xor
jmp
pushf
call
mov
ret
mov
pusha
push
mov
pusha
pushf
lea
jmp
rcr
adc
xor
mov
bts
shrd
mov
clc
cmp
push
add
mov
call
mov
cmc
jmp
push
mov
pusha
pusha
pushf
popl
movw
lea
jnp
popl
pusha
movb
lea
jmp
pushf
pushl
pushl
popl
pusha
movb
movb
mov
lea
jmp
push
mov
pushl
lea
jmp
or
test
ror
mov
pushf
jmp
mov
push
pushl
lea
jmp
add
pushf
pusha
pushf
inc
clc
cmc
not
clc
call
shrd
mov
pushf
bt
sub
cmp
call
pusha
sub
jmp
call
bt
call
neg
shr
mov
stc
mov
push
stc
pushl
sub
jmp
pushf
pushl
mov
push
repz
popl
pushf
pushl
pusha
lea
jmp
cwtl
push
not
movzbw
mov
mov
pushf
pushf
movzbw
mov
push
pushf
call
lea
jne
bsr
xorb
jmp
mov
shl
bsf
shl
bt
not
test
add
add
bts
sub
stc
shl
not
shld
bswap
pusha
rcr
xadd
add
lea
inc
and
pop
sub
cmp
sar
jmp
movb
mov
call
pushf
mov
pushl
popl
mov
lea
jmp
push
mov
lea
jne
shr
shl
btc
shl
mov
cmc
and
push
clc
push
cmp
pusha
jmp
shl
pusha
xor
sub
sbb
movzbw
sar
mov
cmc
pushf
shl
test
pusha
stc
mov
shr
pusha
or
jmp
stc
push
ror
clc
cmc
add
mov
inc
push
clc
test
bt
mov
jmp
iret
stos
and
inc
cld
decl
xlat
add
mov
mov
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
push
mov
push
jmp
lea
jl
push
push
inc
movb
lea
jnp
pushf
decl
push
jmp
bt
push
cmp
push
pusha
movb
call
repz
popl
movb
lea
jmp
inc
cmp
not
pusha
xor
movw
add
call
jmp
mov
inc
mov
jmp
sar
sbb
mov
stc
cmp
add
pushf
push
movb
call
jmp
jmp
std
fimuls
test
add
add
call
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
push
mov
sub
push
push
push
mov
mov
mov
push
jmp
lahf
mov
shld
mov
jmp
mov
mov
pushl
pushf
movl
push
lea
jmp
pusha
jmp
mov
movb
lea
jmp
movsbl
bt
add
mov
jmp
movb
mov
mov
pusha
pushf
lea
jmp
rcr
ror
mov
pushf
mov
push
bt
not
bt
pusha
jmp
pusha
jmp
jmp
setg
mov
sbb
not
xchg
mov
test
setge
mov
cmp
cmp
add
test
stc
shrd
call
mov
jmp
mov
push
mov
pusha
call
dec
not
inc
not
inc
or
shl
sub
test
adc
movzbl
push
mov
push
call
inc
btc
clc
stc
test
mov
clc
bt
push
bswap
pushf
jmp
cmp
cmp
add
call
mov
pushf
call
call
lea
ja
pusha
inc
call
call
jmp
movsbw
sbb
shl
bsr
movzbl
pusha
sbb
sub
setb
inc
inc
rcl
bswap
movzbw
not
rol
jmp
jmp
scas
mov
ret
mov
movl
lea
jmp
pushf
mov
call
pushl
inc
lea
js
pushf
push
pushf
mov
push
push
pusha
lea
jmp
inc
shr
mov
shrd
shl
mov
stc
pushf
cmc
not
jmp
pusha
stc
mul
push
mov
push
push
lea
jge
pusha
mov
call
add
pushf
jmp
pusha
pushl
mov
jmp
not
mov
jmp
mov
mov
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
call
ret
nop
push
mov
push
push
mov
push
mov
sub
push
push
push
mov
mov
mov
push
jmp
stc
xor
pushl
dec
lea
and
add
pusha
movsbw
mov
bt
mov
pushf
sub
push
movb
mov
mov
lea
jmp
repz
popl
pusha
lea
jmp
dec
pushf
call
rol
btc
btc
rcl
movzbl
and
adc
add
dec
pusha
inc
inc
pusha
not
push
lea
call
cwtl
cmc
mov
sar
or
mov
cmc
add
pushf
pushf
movw
mov
push
pusha
pushl
pushf
lea
jmp
call
jle
pusha
mov
movb
call
push
add
mov
pusha
jmp
not
cmc
stc
cmc
and
pusha
push
call
pusha
mov
call
not
rcl
bt
mov
sub
cmp
mov
pushf
add
call
add
pushf
sub
pushf
mov
pushf
mov
movb
mov
lea
jmp
bsr
mov
movzbw
shr
and
sub
rcl
rcl
not
rol
neg
push
movsbw
add
push
jmp
add
add
mov
ret
mov
pushl
popl
pushf
lea
jmp
pushf
push
push
pushf
popl
pushf
pushl
popl
mov
pushf
pushl
lea
jmp
pusha
lea
jle
pusha
mov
push
movw
pushf
popl
mov
pushf
jmp
jmp
jmp
push
pusha
push
mov
push
push
mov
repz
popl
movw
mov
push
lea
jmp
call
call
pushf
popl
mov
jmp
and
push
test
rol
mov
dec
push
bt
rcr
mov
cmc
stc
sub
jmp
mov
seta
jmp
pusha
add
jmp
sub
pushl
mov
movw
movl
lea
jmp
mov
jmp
mov
pushf
pushf
pushl
lea
jmp
mov
mov
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
push
push
push
push
push
mov
push
push
push
lea
call
lea
movl
call
mov
xor
lea
push
rep
stos
stos
lea
push
call
adc
add
lea
repnz
not
sub
mov
mov
mov
or
repnz
mov
dec
shr
rep
mov
lea
and
push
rep
push
call
lea
push
push
call
add
lea
lea
mov
push
call
mov
lea
push
lea
movb
call
mov
or
xor
push
repnz
not
dec
push
push
push
movb
call
add
movb
lea
call
lea
movb
call
push
call
add
lea
push
lea
call
mov
mov
push
push
push
movb
push
call
lea
movb
call
lea
movl
call
lea
movl
call
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
mov
lea
movl
call
mov
movl
call
mov
pop
mov
add
ret
nop
push
push
mov
mov
cmp
jne
push
call
and
adcl
sbb
mov
push
push
push
mov
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
call
ret
nop
nop
nop
mov
push
push
call
ret
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
mov
movl
call
mov
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
mov
xor
cmp
je
or
xor
repnz
not
dec
xor
mov
mov
cmp
mov
jne
add
mov
adc
mov
call
add
push
adc
push
push
push
call
mov
pop
pop
pop
mov
mov
add
ret
mov
push
xor
cmp
jb
ja
cmp
jbe
mov
inc
mov
mov
cltd
mov
add
cmp
jb
ja
mov
cmp
jb
xor
cmp
jb
ja
cmp
jbe
mov
mov
mov
call
mov
mov
and
lea
mov
mov
movsbl
sub
cltd
shl
call
mov
or
mov
mov
or
add
adc
mov
cmp
jb
ja
cmp
jb
mov
lea
mov
cltd
mov
mov
mov
mov
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
mov
mov
and
and
xor
xor
add
mov
adc
mov
and
and
add
mov
adc
and
add
pop
adc
xor
and
or
pop
or
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
xor
jmp
nop
push
mov
push
push
mov
mov
sub
mov
sbb
mov
push
mov
push
push
push
push
call
mov
add
mov
mov
mov
mov
mov
call
mov
or
pop
or
mov
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
push
test
push
ja
jb
cmp
jae
mov
mov
mov
mov
mov
mov
not
not
and
mov
and
mov
and
and
or
or
pop
pop
pop
ret
test
ja
jb
cmp
jb
test
ja
jb
cmp
jae
mov
mov
mov
mov
mov
push
mov
or
mov
and
mov
or
and
and
and
or
pop
or
pop
pop
pop
ret
mov
mov
mov
mov
mov
mov
xor
xor
xor
pop
pop
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
test
ja
jb
cmp
jae
mov
cltd
ret
test
ja
jb
cmp
jae
mov
cltd
ret
test
ja
jb
cmp
jae
mov
cltd
ret
mov
cltd
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
test
je
cmpl
jl
mov
push
xor
lea
push
mov
push
push
movb
mov
call
lea
or
xor
add
repnz
not
dec
mov
mov
sub
js
cmp
jg
lea
push
mov
push
mov
mov
shr
rep
mov
and
rep
mov
lea
mov
lea
shr
rep
mov
mov
and
rep
pop
pop
pop
pop
add
ret
mov
mov
mov
mov
mov
pop
pop
add
ret
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
mov
xor
cmp
jne
mov
pop
pop
add
ret
lea
mov
push
push
push
mov
call
mov
lea
push
call
add
cmp
mov
jne
mov
pop
pop
add
ret
push
lea
push
push
push
push
call
mov
xor
lea
mov
mov
add
rep
mov
or
cmp
movl
mov
mov
mov
mov
movl
mov
movl
mov
mov
mov
jb
ja
cmp
jbe
jmp
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
test
ja
jb
cmp
jae
mov
lea
mov
mov
mov
mov
mov
jmp
mov
mov
mov
xor
mov
push
xor
mov
xor
mov
xor
mov
xor
mov
xor
push
push
push
call
mov
add
mov
mov
push
push
call
mov
add
push
mov
push
mov
push
mov
push
push
push
call
add
push
push
call
mov
add
push
mov
push
mov
push
mov
push
push
push
push
push
push
push
call
mov
add
push
push
mov
push
push
push
push
call
add
push
push
call
add
push
push
call
mov
push
mov
mov
mov
mov
push
push
push
mov
mov
mov
mov
call
mov
mov
mov
add
mov
mov
add
mov
mov
mov
adc
mov
mov
jne
cmp
jb
mov
push
mov
push
push
push
call
mov
mov
mov
mov
push
push
push
push
call
mov
mov
mov
mov
mov
push
push
push
push
call
mov
mov
mov
mov
mov
push
mov
push
push
push
call
mov
add
mov
mov
mov
mov
push
mov
push
push
push
call
mov
mov
add
mov
mov
add
adc
mov
cmp
mov
mov
jb
ja
mov
mov
cmp
jb
mov
mov
mov
mov
push
push
push
push
call
mov
lea
add
push
push
push
push
call
mov
mov
lea
lea
push
push
push
push
call
mov
lea
lea
push
mov
push
push
push
call
mov
mov
add
add
lea
push
push
push
push
call
mov
push
call
add
mov
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
movl
xor
push
lea
push
push
call
add
lea
push
push
push
push
push
push
push
call
cmp
je
mov
xor
lea
lea
rep
push
push
lea
push
push
push
push
push
push
movl
call
mov
test
jbe
mov
lea
shr
mov
and
neg
sbb
and
add
mov
xor
rep
mov
mov
rep
mov
lea
stos
push
push
stos
push
lea
push
push
push
call
add
test
je
lea
mov
xor
add
mov
add
mov
cmp
jl
lea
push
push
call
add
movl
push
push
call
inc
cmp
jl
mov
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
push
xor
push
mov
mov
push
lea
push
push
call
add
lea
push
push
push
push
push
push
push
call
add
je
mov
xor
lea
lea
rep
push
push
lea
push
push
push
push
push
push
movl
call
test
je
push
call
add
lea
mov
push
push
push
push
push
push
push
movb
push
movl
call
test
je
lea
lea
mov
xor
add
mov
add
mov
dec
jne
mov
lea
push
push
call
add
movl
push
call
pop
push
call
mov
add
inc
cmp
mov
jl
mov
pop
pop
pop
pop
add
ret
nop
nop
nop
mov
push
mov
test
movb
jg
mov
pop
ret
mov
push
push
push
xor
add
movb
movb
mov
mov
mov
test
je
movsbl
push
call
mov
movsbl
push
call
add
test
je
mov
mov
mov
inc
shl
mov
cmp
mov
mov
jl
cmp
jg
sub
jmp
cmp
jl
cmp
jg
sub
or
mov
cmp
mov
jne
mov
test
je
movsbl
push
call
add
test
je
inc
movb
movb
inc
jmp
mov
xor
mov
test
je
movsbl
push
call
add
test
je
mov
inc
inc
jmp
xor
mov
movb
test
je
test
jle
or
lea
sub
mov
mov
mov
mov
add
lea
cmp
jl
mov
or
or
xor
test
je
movsbl
push
call
add
test
jne
test
jge
mov
mov
mov
inc
test
jne
test
jl
test
jl
cmp
mov
jg
mov
test
je
mov
sub
inc
cmp
mov
jle
sub
movb
pop
pop
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
mov
call
push
mov
push
push
push
xor
xor
mov
mov
push
lea
push
push
call
add
lea
push
push
push
push
push
push
push
call
and
je
xor
mov
xor
lea
mov
push
rep
lea
mov
push
lea
mov
push
push
lea
push
push
push
push
mov
mov
mov
call
test
je
mov
lea
push
push
lea
push
push
call
mov
lea
push
push
lea
push
push
call
mov
lea
push
push
lea
push
push
call
mov
lea
push
push
lea
push
push
call
mov
add
test
jne
movsbl
push
call
add
test
jne
movsbl
push
call
add
test
je
lea
or
xor
movl
repnz
not
sub
mov
mov
mov
shr
rep
mov
and
rep
lea
or
repnz
not
sub
mov
mov
mov
shr
rep
mov
and
rep
xor
mov
xor
lea
push
rep
lea
lea
push
push
push
push
push
push
push
call
jmp
push
call
push
push
call
mov
inc
cmp
mov
jl
mov
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
mov
mov
push
mov
and
xor
or
mov
mov
mov
mov
mov
shl
push
mov
push
mov
mov
push
push
push
movb
mov
movl
push
mov
push
push
call
pop
ret
nop
nop
nop
nop
nop
mov
call
push
push
push
call
push
push
xor
push
mov
call
push
call
sub
push
push
push
mov
xor
lea
push
push
push
rep
call
insb
mov
cmp
je
lea
push
push
lea
push
push
push
push
push
push
call
push
call
sub
adc
push
push
push
call
xor
lea
mov
test
je
mov
shr
mov
test
je
lea
mov
mov
xor
add
mov
add
mov
dec
jne
lea
push
push
call
add
mov
inc
add
cmp
jb
push
call
push
push
call
pop
pop
mov
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
mov
push
push
xor
mov
mov
push
lea
push
push
call
add
lea
push
push
push
push
push
push
push
call
push
mov
cmp
je
xor
mov
xor
lea
push
lea
push
rep
push
movl
movl
movl
movl
call
add
lea
lea
lea
push
push
push
push
push
push
push
push
movb
mov
call
test
je
mov
test
je
lea
lea
mov
xor
add
mov
add
mov
dec
jne
mov
lea
push
lea
push
call
add
movl
inc
cmp
jl
push
push
call
mov
inc
cmp
mov
jl
mov
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
call
push
mov
lea
push
push
push
push
push
call
lea
push
push
push
push
call
lea
push
push
push
push
call
mov
add
shl
push
lea
push
push
call
mov
add
test
jne
movsbl
push
call
add
test
jne
movsbl
push
call
add
test
je
push
lea
or
xor
repnz
not
sub
mov
mov
mov
shr
rep
mov
and
rep
lea
or
repnz
not
sub
mov
mov
mov
shr
rep
mov
and
rep
pop
mov
lea
push
push
push
call
lea
lea
push
push
call
add
lea
push
push
push
call
lea
lea
push
push
call
add
lea
push
push
push
call
lea
lea
push
push
call
add
lea
push
push
push
call
lea
lea
push
push
call
add
lea
push
push
push
call
mov
add
test
pop
pop
je
lea
push
push
call
add
add
ret
test
je
lea
push
push
call
add
add
ret
lea
push
push
call
add
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
push
mov
xor
cmp
jg
mov
sub
inc
lea
mov
mov
add
shr
mov
mov
inc
mov
inc
dec
jne
lea
movb
test
jle
movsbl
push
call
add
test
je
movb
dec
test
jg
mov
pop
pop
ret
push
push
mov
push
mov
sub
push
push
push
push
mov
or
xor
xor
xor
mov
repnz
not
sub
mov
mov
mov
shr
rep
mov
xor
and
rep
mov
lea
rep
lea
movl
push
push
call
cmpl
jne
call
call
call
call
jmp
xor
mov
test
jne
mov
test
jne
call
inc
mov
cmp
jl
mov
test
jle
mov
push
push
call
push
push
push
call
add
test
jne
mov
test
je
mov
test
je
cmp
je
push
push
push
push
call
mov
mov
movsbl
add
cmp
ja
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
adc
inc
jne
push
push
call
add
test
jne
push
push
call
add
test
jne
push
push
call
add
test
jne
push
push
call
add
push
lea
call
mov
push
lea
movl
call
mov
push
lea
movb
call
push
lea
push
push
movb
call
push
push
lea
movb
push
call
lea
movb
call
lea
movb
call
lea
movb
call
lea
movb
call
push
push
lea
call
push
lea
call
mov
xor
lea
push
rep
lea
push
push
lea
call
push
call
add
lea
lea
push
call
push
lea
movb
call
lea
movb
push
push
lea
push
call
push
lea
movb
call
lea
movb
call
lea
movb
call
lea
call
push
lea
call
mov
mov
mov
xor
mov
rep
stos
stos
mov
or
xor
repnz
not
sub
mov
mov
mov
shr
rep
mov
and
rep
lea
movb
call
lea
movl
call
mov
pop
pop
mov
pop
pop
mov
add
ret
nop
sti
inc
inc
add
inc
inc
add
inc
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
add
inc
add
inc
inc
add
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
add
inc
add
inc
inc
add
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
push
mov
push
mov
push
push
push
call
mov
add
mov
test
movl
je
mov
call
movb
movl
movb
mov
movl
pop
mov
mov
add
ret
mov
movl
xor
pop
mov
add
ret
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
mov
push
mov
push
mov
push
push
push
push
push
push
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
call
pop
ret
nop
nop
call
test
je
mov
mov
call
ret
xor
ret
ret
mov
jmp
mov
jmp
push
xor
cmp
push
push
je
xor
cmp
setne
jmp
push
call
testb
push
call
push
push
call
cmp
mov
je
push
push
call
cmp
mov
je
push
push
call
cmp
mov
je
push
push
call
cmp
mov
je
push
push
call
cmp
mov
je
push
push
call
cmp
mov
je
push
pop
mov
jmp
mov
mov
mov
mov
mov
mov
movl
xor
pop
pop
pop
ret
push
push
call
test
je
pushl
pushl
call
jmp
testb
jne
mov
xor
cmp
jle
cmp
jle
call
adc
push
jge
push
call
cmp
jl
xor
jmp
mov
pop
pop
ret
push
mov
sub
call
test
je
pushl
pushl
call
jmp
testb
je
mov
jmp
pushl
push
call
test
je
lea
push
pushl
call
inc
jmp
lea
push
pushl
call
push
test
je
pushl
lea
push
call
jmp
xor
leave
ret
push
mov
sub
push
push
call
test
je
pushl
pushl
call
jmp
cmpl
jne
mov
xor
cmp
je
cmpl
jb
lea
push
push
push
push
call
inc
test
je
push
mov
mov
push
push
call
call
push
mov
call
lea
lea
movsl
movsl
movsl
cmpl
push
movsl
pop
mov
mov
pop
jb
add
push
push
push
call
mov
jmp
xor
pop
pop
leave
ret
mov
test
jne
pushl
call
push
call
ret
call
mov
jmp
call
jmp
ret
push
call
pop
ret
mov
jmp
jmp
push
mov
test
jne
push
mov
call
mov
call
mov
pop
ret
mov
xor
push
push
cmpw
mov
sete
test
je
mov
lea
jmp
lea
mov
push
cmp
pop
jne
add
mov
cmp
jne
add
jmp
add
test
je
mov
jmp
add
test
je
mov
jmp
mov
add
test
jne
test
je
neg
sbb
and
inc
lea
mov
add
test
jne
add
pop
and
pop
ret
cmpl
mov
je
add
jmp
add
mov
push
cmp
pop
jne
add
mov
cmp
jne
add
movzwl
lea
and
ret
add
test
je
mov
jmp
add
test
je
mov
jmp
pushl
mov
pushl
pushl
call
ret
mov
call
push
push
call
pop
mov
mov
xor
cmp
mov
je
pushl
call
mov
mov
leave
ret
mov
call
push
push
call
pop
mov
mov
xor
cmp
mov
je
pushl
call
mov
mov
leave
ret
push
push
push
mov
mov
cmpw
lea
je
lea
movzwl
lea
push
call
mov
pop
test
mov
je
mov
push
push
mov
call
test
mov
jne
mov
pop
pop
pop
ret
push
mov
mov
test
je
push
push
call
mov
test
je
push
call
pop
pop
ret
push
mov
sub
push
push
mov
push
push
call
mov
mov
mov
sub
xor
cmp
sete
cmp
mov
mov
lea
je
lea
movzwl
andl
mov
test
mov
jle
mov
pushl
push
call
cmpl
lea
jne
lea
cmpw
jne
movl
jmp
mov
sub
add
dec
mov
jne
cmpl
jne
mov
orl
xor
jmp
pushl
push
push
call
push
mov
pushl
mov
push
call
add
add
cmpw
mov
lea
je
lea
andw
mov
mov
mov
mov
mov
pushl
push
call
cmpl
mov
mov
lea
jne
lea
cmpw
jne
mov
mov
jmp
sub
push
push
pushl
call
add
add
cmpw
lea
je
lea
incw
mov
andl
addl
decl
mov
jne
mov
mov
orl
mov
pop
pop
pop
leave
ret
push
push
push
xor
cmp
mov
je
call
mov
push
pushl
push
call
loop
shlb
call
sti
test
je
push
push
call
mov
push
test
pop
je
pushl
mov
mov
push
pushl
call
pop
pop
pop
ret
push
mov
sub
mov
push
mov
xor
mov
cmp
jne
push
pop
jmp
push
mov
cmp
push
jne
mov
jmp
mov
mov
mov
xor
cmpw
movl
sete
cmp
mov
je
mov
mov
mov
mov
jmp
mov
cmp
je
inc
inc
mov
inc
inc
mov
mov
add
cmp
mov
je
cmp
je
cmp
je
cmp
je
cmp
jne
mov
mov
inc
cmp
mov
jne
lea
cmp
je
cmpl
jne
push
pushl
jmp
push
pushl
call
inc
mov
incl
add
mov
test
je
mov
cmp
je
pushl
mov
push
push
push
pushl
pushl
pushl
call
mov
test
je
cmpl
je
pushl
push
push
call
push
call
cmp
jne
mov
jmp
andl
add
xor
cmp
jne
cmp
je
mov
mov
cmp
je
push
call
mov
push
call
mov
pop
pop
pop
leave
ret
push
mov
push
push
push
mov
mov
test
je
mov
neg
sbb
test
mov
je
push
mov
lea
push
lea
push
lea
push
add
call
mov
mov
test
je
pushl
mov
call
mov
test
je
movzwl
push
mov
call
pushl
mov
call
mov
mov
call
mov
jmp
mov
mov
test
je
movzwl
push
mov
call
mov
mov
mov
call
mov
mov
push
mov
mov
pushl
mov
mov
call
cmpl
jne
pop
mov
mov
neg
sbb
test
mov
je
mov
lea
push
lea
push
lea
push
add
call
mov
mov
test
je
mov
call
cmpl
jne
pop
leave
ret
mov
call
sub
push
push
mov
xor
cmp
lea
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
mov
movswl
movswl
movswl
add
push
movswl
mov
lea
push
mov
add
mov
pushl
mov
mov
call
out
jge
add
jne
mov
jb
mov
subl
add
test
jbe
push
push
push
call
add
mov
add
sub
xor
mov
mov
mov
cmpw
mov
mov
mov
mov
je
cmpw
jne
mov
add
mov
lea
cmp
mov
jbe
mov
mov
subl
add
inc
mov
inc
cmp
jne
mov
add
mov
lea
mov
add
push
mov
call
mov
push
pop
mov
mov
sub
add
lea
jmp
push
call
pop
mov
test
movb
je
push
mov
pushl
pushl
call
jmp
xor
andb
mov
cmpl
ja
mov
xor
sub
addl
mov
lea
push
push
cmpw
jne
push
call
jmp
push
call
push
lea
pushl
mov
push
call
mov
lea
sub
movb
neg
sbb
mov
and
cmp
jl
mov
call
test
je
lea
push
xor
cmpw
pushl
sete
push
push
movzwl
push
lea
push
lea
pushl
push
push
mov
push
mov
call
test
je
mov
push
call
mov
push
push
push
push
push
pushl
pushl
call
stos
mov
mov
mov
lea
push
mov
lea
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
pop
je
pushl
call
mov
cmp
je
mov
andb
lea
call
orl
lea
call
mov
mov
pop
pop
mov
leave
ret
push
call
test
je
movl
ret
xor
ret
push
mov
call
testb
je
push
call
mov
pop
ret
push
mov
sub
push
lea
pushl
mov
push
push
call
pushl
mov
mov
mov
pushl
sub
mov
lea
pushl
mov
mov
mov
pushl
sub
mov
mov
pushl
push
lea
push
pushl
pushl
pushl
call
pop
leave
ret
push
mov
push
mov
push
mov
test
je
mov
call
test
je
push
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
push
call
jmp
xor
pop
pop
pop
ret
mov
call
sub
andl
push
push
push
mov
mov
mov
cmpl
jne
call
mov
push
mov
call
mov
jmp
mov
call
mov
ret
mov
orl
cmpl
je
test
mov
je
mov
test
jne
pushl
or
call
push
call
mov
test
je
mov
push
push
call
lret
add
inc
je
test
jne
mov
xor
cmp
pop
pop
mov
setne
pop
leave
ret
mov
ret
mov
ret
mov
call
push
push
mov
mov
call
mov
andl
push
lea
mov
call
orl
orl
andl
andl
mov
movl
movl
movl
mov
pop
mov
leave
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
mov
call
sub
push
mov
push
mov
movl
mov
movl
neg
sbb
test
mov
je
lea
lea
mov
push
lea
push
lea
push
call
mov
cmpl
jne
pushl
mov
call
mov
test
je
mov
push
call
cmpl
jne
mov
neg
sbb
test
mov
je
lea
lea
mov
push
lea
push
lea
push
call
mov
test
je
mov
push
call
cmpl
jne
lea
mov
call
lea
push
call
andb
mov
call
orl
mov
call
mov
pop
pop
mov
leave
ret
push
mov
sub
push
lea
pushl
mov
push
call
mov
dec
loopne
inc
call
jne
sub
mov
lea
pushl
mov
mov
mov
pushl
sub
mov
mov
pushl
push
lea
push
pushl
pushl
pushl
pushl
call
pop
leave
ret
mov
call
sub
andl
andl
push
push
push
mov
mov
call
mov
pushl
mov
call
mov
jmp
mov
call
mov
ret
mov
orl
test
jne
xor
jmp
pushl
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
xor
test
setge
mov
test
je
mov
pushl
lea
call
mov
mov
test
je
mov
jmp
mov
push
mov
call
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
sub
mov
push
neg
sbb
test
mov
je
lea
lea
mov
push
lea
push
lea
push
call
mov
call
cmp
je
cmpl
jne
xor
pop
leave
ret
mov
jmp
mov
call
sub
push
push
mov
mov
lea
cmp
ja
jmp
mov
orw
movw
jmp
mov
andw
movw
jmp
mov
xor
movw
cmp
jne
call
cmp
jne
mov
jmp
movw
jmp
cmpl
jne
pushl
lea
call
mov
mov
push
pushl
push
push
call
mov
jne
call
pushl
mov
push
call
lea
mov
call
mov
cmp
movw
jne
mov
jmp
mov
mov
jmp
xor
cmp
jne
mov
call
push
mov
call
cmp
je
mov
movw
mov
push
mov
call
mov
mov
jmp
mov
mov
movw
call
neg
sbb
mov
jmp
mov
movw
push
call
mov
jmp
mov
mov
mov
andl
lea
movw
call
orl
mov
lea
jmp
mov
mov
push
lea
movl
call
mov
lea
movw
call
orl
mov
lea
call
push
pop
jmp
xor
mov
pop
pop
mov
leave
ret
push
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
inc
add
inc
add
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
add
pop
inc
add
inc
add
mov
inc
add
jne
add
sub
push
push
mov
xor
push
mov
mov
movl
mov
mov
cmp
je
cmp
jne
call
fldt
call
cmp
mov
jne
push
call
cmp
mov
jne
mov
movl
movl
jmp
lea
lea
push
push
pushl
call
popf
lea
movl
test
jne
mov
jmp
lea
push
call
mov
inc
lea
add
and
call
mov
push
push
lea
push
push
push
push
mov
call
mov
mov
mov
mov
movzbw
mov
movzbl
mov
movzbl
mov
movzbl
mov
mov
cmp
mov
jge
neg
mov
pushl
lea
call
push
movb
pushl
call
std
mov
mov
imul
cltd
idiv
add
mov
push
mov
call
push
lea
push
push
call
cmp
push
lea
mov
call
movl
movl
lea
call
mov
lea
mov
pop
pop
pop
leave
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
mov
call
push
mov
movl
andl
call
mov
mov
leave
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
mov
call
push
mov
movl
andl
call
mov
mov
leave
ret
push
mov
sub
mov
neg
sbb
test
mov
je
push
lea
lea
mov
push
lea
push
lea
push
call
pushl
mov
call
cmpl
jne
pop
leave
ret
push
mov
sub
mov
neg
sbb
test
mov
je
push
lea
lea
mov
push
lea
push
lea
push
call
pushl
mov
add
pushl
push
call
test
push
add
push
push
mov
push
call
cmpl
jne
pop
leave
ret
push
mov
mov
test
je
mov
push
mov
call
mov
mov
pop
ret
mov
cmp
jne
andl
ret
mov
pushl
call
test
je
mov
test
jne
push
pushl
push
pushl
call
imul
adc
je
or
add
push
insb
add
ret
push
mov
push
mov
cmp
jg
mov
xor
cmp
sete
push
push
mov
call
inc
jmp
pop
pop
ret
push
mov
mov
lea
push
pushl
call
pushl
call
pop
ret
push
mov
push
mov
test
je
mov
pushl
push
push
call
mov
test
jne
mov
pushl
mov
call
test
je
mov
mov
mov
pop
pop
ret
push
mov
sub
mov
lea
push
push
pushl
call
test
jne
mov
test
je
andl
xor
jmp
movsbl
push
push
push
lea
call
mov
pop
test
je
push
call
mov
movsbl
push
call
test
pop
jne
mov
cmp
je
cmp
jne
push
call
mov
movsbl
push
call
pop
pop
mov
pop
test
je
mov
test
je
cmpl
push
lea
push
push
je
call
jmp
call
add
leave
ret
mov
pushl
call
test
je
pushl
mov
pushl
call
ret
mov
pushl
call
test
je
pushl
pushl
pushl
pushl
push
call
ret
push
mov
sub
cmpl
push
lea
push
push
mov
pushl
je
call
jmp
call
mov
add
lea
push
mov
pushl
call
pop
leave
ret
mov
pushl
call
test
je
pushl
mov
call
ret
mov
call
push
push
mov
push
push
push
mov
pushl
call
xor
cmp
jne
xor
jmp
cmp
jne
push
push
push
pushl
push
call
jmp
lea
mov
push
push
push
mov
call
mov
cmp
jne
push
pop
mov
pop
pop
mov
pop
leave
ret
mov
call
andl
mov
ret
pushl
mov
pushl
lea
call
ret
mov
add
push
push
call
ret
mov
lea
call
ret
mov
mov
mov
mov
mov
xor
ret
push
mov
push
mov
test
je
mov
push
mov
test
je
mov
push
call
mov
test
mov
pop
je
mov
push
call
pop
xor
pop
ret
xor
ret
mov
ret
mov
call
push
push
push
mov
push
mov
movl
xor
cmp
mov
jne
cmp
mov
jbe
mov
push
mov
call
inc
add
cmp
jb
orl
mov
call
mov
pop
pop
pop
mov
leave
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
mov
push
call
test
je
mov
push
mov
call
push
pop
pop
ret
pushl
mov
pushl
lea
call
ret
mov
lea
call
ret
mov
add
push
call
mov
add
mov
ret
mov
call
sub
mov
push
push
mov
push
xor
testb
mov
mov
mov
mov
mov
mov
mov
je
mov
mov
shl
push
call
mov
mov
xor
pop
neg
sbb
mov
cmp
je
lea
lea
push
lea
push
lea
push
call
mov
mov
push
mov
call
mov
mov
mov
mov
mov
inc
jmp
push
call
mov
pop
mov
cmp
movb
je
push
mov
pushl
pushl
push
call
movl
jmp
xor
jmp
movl
mov
ret
mov
xor
orl
cmp
jl
mov
add
mov
jmp
mov
cmp
je
mov
cmp
jbe
mov
push
mov
call
add
dec
jne
mov
mov
pop
pop
mov
pop
leave
ret
push
push
push
pushl
call
rclb
rolb
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
mov
call
push
mov
movl
andl
call
mov
mov
leave
ret
push
mov
pushl
call
mov
andl
andl
mov
movl
mov
pop
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
movl
ret
push
mov
pushl
call
mov
andl
andl
mov
movl
mov
pop
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
movl
ret
pushl
pushl
pushl
push
call
ret
pushl
pushl
push
call
ret
pushl
pushl
pushl
pushl
pushl
call
jne
adc
push
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
push
pop
ret
push
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
js
dec
or
mov
movswl
mov
mov
mov
pop
ret
pushl
pushl
pushl
pushl
pushl
call
sbb
adc
push
mov
mov
test
je
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
push
pushl
call
outsl
pop
ret
pushl
pushl
pushl
pushl
pushl
call
enter
push
mov
pushl
call
mov
andl
andl
mov
movl
mov
pop
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
movl
ret
push
mov
pushl
call
mov
andl
andl
mov
movl
mov
pop
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
movl
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
mov
call
push
push
mov
mov
movl
movl
call
andb
lea
call
orl
lea
call
mov
pop
mov
leave
ret
mov
push
mov
andl
andl
mov
mov
mov
lea
push
call
outsb
mov
pop
ret
push
mov
call
add
push
call
mov
ret
push
mov
push
lea
push
call
pushf
mov
call
andl
andl
push
push
call
pop
pop
ret
mov
call
sub
push
push
mov
push
mov
mov
lea
push
push
call
cmpl
jne
pushl
andl
lea
pushl
push
call
mov
dec
mov
imul
test
lea
jl
inc
mov
mov
mov
sub
dec
jne
mov
push
mov
mov
call
sbb
pop
pop
mov
pop
leave
ret
mov
add
push
push
call
push
push
call
push
push
mov
mov
test
je
push
lea
push
push
call
mov
push
mov
mov
call
rcrb
ret
mov
call
sub
push
push
push
mov
andl
orl
mov
push
pushl
mov
push
call
mov
xor
cmp
jne
xor
jmp
mov
cmp
je
mov
mov
cmp
jl
cmp
jle
cmp
jne
mov
jmp
mov
mov
xor
cmp
setne
mov
jmp
mov
xor
cmpl
mov
mov
setne
sub
mov
je
dec
je
dec
je
dec
jne
mov
lea
push
cmp
pushl
movl
pushl
je
pushl
mov
call
jmp
mov
call
mov
xor
cmp
jmp
mov
cmp
je
pushl
mov
call
jmp
mov
call
andl
mov
jmp
mov
lea
cmp
movl
push
je
pushl
mov
call
jmp
mov
call
mov
xor
cmp
sete
mov
jmp
lea
push
call
andl
cmpl
je
push
lea
pushl
push
call
mov
inc
mov
shl
push
call
mov
add
add
mov
shl
push
mov
pushl
push
call
mov
mov
add
shl
lea
mov
movw
mov
lea
jmp
mov
lea
push
push
lea
mov
push
push
push
call
cmpl
mov
movswl
mov
je
pushl
call
pop
jmp
mov
mov
test
je
pushl
push
call
mov
call
movl
mov
ret
mov
cmpl
jge
mov
test
je
mov
cmp
je
mov
mov
mov
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
push
push
mov
call
mov
mov
xor
cmp
setne
test
mov
je
mov
mov
cmpl
je
mov
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
cmp
je
jmp
cmp
ja
cmp
jbe
add
cmpl
jne
mov
test
jne
xor
pop
pop
pop
ret
mov
ret
mov
call
push
push
push
mov
push
mov
call
mov
orl
xor
lea
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
movl
movl
movl
movl
movl
movl
lea
push
movl
push
movl
push
movl
call
mov
add
mov
mov
pop
pop
pop
mov
leave
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
mov
call
push
push
push
mov
push
mov
movl
mov
xor
cmp
movl
je
mov
call
push
call
pop
mov
call
pushl
lea
mov
push
call
pushl
mov
push
call
pushl
mov
push
call
mov
cmp
je
mov
push
call
mov
push
mov
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
push
call
mov
push
push
mov
call
mov
push
mov
call
mov
lea
push
call
push
push
mov
call
cmp
je
mov
cmp
je
mov
cmp
je
mov
push
push
call
lea
movb
call
lea
mov
call
orl
mov
call
mov
pop
pop
pop
mov
leave
ret
mov
call
sub
push
mov
push
push
mov
mov
sub
sub
mov
lea
mov
call
andl
lea
push
lea
call
mov
lea
push
push
mov
push
call
mov
test
jl
mov
lea
push
push
mov
push
call
test
jl
lea
lea
push
call
mov
add
mov
mov
add
mov
xor
lea
test
setge
orl
mov
call
mov
mov
pop
pop
mov
leave
ret
mov
call
sub
mov
push
push
mov
xor
cmp
mov
je
mov
mov
call
cmp
jne
call
test
jne
mov
jmp
push
mov
pushl
pushl
pushl
pushl
call
cmp
mov
jl
mov
mov
mov
cmp
jne
push
lea
call
mov
lea
push
push
mov
push
mov
call
lea
lea
push
call
mov
mov
lea
lea
mov
mov
mov
add
mov
mov
add
mov
mov
orl
movsl
movsl
movsl
lea
movsl
call
jmp
mov
mov
mov
lea
mov
mov
add
add
mov
lea
mov
mov
mov
movsl
movsl
movsl
movsl
mov
movl
test
je
movl
test
je
andb
mov
and
cmpl
mov
je
lea
mov
push
lea
push
call
mov
lea
push
push
mov
call
mov
lea
mov
push
push
call
mov
mov
call
mov
lea
push
push
mov
push
call
xor
mov
cmp
jl
testb
je
mov
push
push
mov
call
mov
jmp
pop
call
mov
push
push
lea
push
call
mov
push
push
mov
call
test
mov
jl
mov
push
push
mov
call
test
mov
jl
mov
push
push
lea
push
call
mov
lea
push
push
mov
push
call
mov
xor
cmp
jl
mov
call
jmp
xor
mov
cmp
je
mov
push
call
mov
pushl
lea
mov
push
call
pushl
mov
push
call
pushl
mov
push
call
mov
mov
mov
mov
mov
push
call
cmp
mov
jl
mov
call
cmp
je
mov
pushl
mov
call
mov
mov
and
push
or
mov
push
push
call
mov
pop
mov
pop
pop
mov
leave
ret
push
mov
mov
pushl
add
call
mov
push
mov
call
test
je
mov
push
mov
call
push
pop
pop
ret
push
mov
push
push
push
xor
cmp
jne
lea
mov
push
push
push
pushl
pushl
call
cs
cmp
jl
pushl
mov
pushl
mov
pushl
push
call
mov
mov
jmp
lea
mov
push
push
push
pushl
pushl
call
in
mov
cmp
jl
pushl
mov
pushl
mov
pushl
push
pushl
push
call
mov
mov
mov
push
call
mov
pop
pop
leave
ret
mov
call
sub
push
push
mov
xor
lea
mov
mov
push
push
push
mov
mov
call
test
jl
lea
push
mov
lea
mov
lea
mov
lea
push
movl
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
lea
push
mov
pushl
push
call
cmpw
je
mov
or
add
cmp
jb
mov
lea
push
push
push
mov
call
mov
lea
mov
mov
push
push
push
mov
call
mov
lea
mov
mov
push
push
push
mov
call
movswl
lea
mov
mov
push
push
push
mov
call
mov
lea
mov
mov
push
push
push
mov
call
mov
lea
push
push
mov
push
call
test
pop
jge
andl
mov
lea
push
lea
movl
mov
push
push
call
test
jl
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
call
mov
test
je
mov
push
call
lea
push
call
mov
mov
pop
pop
mov
leave
ret
mov
call
sub
push
push
push
mov
pushl
xor
lea
mov
push
push
push
push
pushl
call
cmp
mov
jl
lea
mov
push
mov
mov
mov
call
mov
mov
call
cmp
mov
jne
mov
lea
push
push
mov
push
call
testb
je
mov
add
push
push
mov
call
cmp
mov
jl
mov
cmp
je
cmp
jne
mov
lea
push
push
mov
push
call
test
jl
mov
push
push
push
push
mov
call
test
je
mov
lea
push
lea
push
push
push
mov
mov
call
mov
push
pushl
mov
push
call
mov
mov
push
mov
call
mov
jmp
cmp
jne
mov
lea
push
push
mov
push
call
test
jl
cmp
jne
mov
push
mov
call
mov
jmp
push
push
push
push
lea
call
lea
lea
push
mov
call
mov
lea
push
push
mov
call
orl
lea
mov
call
mov
jmp
mov
lea
push
push
mov
push
call
test
jl
cmp
jne
lea
mov
push
push
push
call
idivb
ret
mov
jl
lea
mov
push
push
push
pushl
call
mov
ret
mov
jl
mov
pushl
mov
push
call
mov
mov
push
mov
call
mov
mov
push
call
jmp
cmp
je
mov
mov
call
push
push
mov
call
test
ret
mov
je
push
call
cmp
je
pushl
mov
mov
push
call
pushl
call
push
jmp
movl
mov
cmp
mov
je
lea
push
push
pushl
push
call
cmp
mov
jl
lea
mov
push
push
push
push
push
pushl
push
call
cmp
mov
jl
mov
pushl
mov
push
call
mov
mov
push
mov
call
mov
jmp
movl
mov
mov
push
call
cmp
jl
cmp
jne
mov
testb
jne
mov
add
push
push
mov
call
mov
cmp
jge
mov
cmp
je
mov
push
push
call
mov
push
mov
call
mov
mov
cmp
je
mov
push
call
cmp
je
cmp
jl
movl
mov
mov
pop
pop
pop
mov
leave
ret
push
lea
mov
push
mov
add
mov
mov
pushl
push
push
pushl
pushl
push
call
pop
ret
testb
je
push
pop
test
jne
xor
ret
testb
je
mov
and
neg
sbb
and
add
ret
xor
ret
push
mov
testb
je
mov
mov
and
cmp
je
andl
xor
mov
mov
lea
mov
push
push
push
call
test
jl
mov
push
push
mov
call
mov
push
mov
call
pop
ret
push
mov
sub
mov
test
je
mov
lea
push
push
push
call
test
jl
mov
andl
andl
lea
mov
push
pushl
push
call
test
jl
mov
lea
push
pushl
mov
push
call
mov
push
mov
call
mov
push
mov
call
mov
jmp
xor
leave
ret
push
mov
push
push
cmpl
je
mov
test
je
mov
lea
push
push
push
call
test
jl
mov
andl
lea
mov
push
pushl
push
call
test
jl
mov
pushl
mov
push
call
mov
push
mov
call
mov
push
mov
call
leave
ret
push
mov
sub
push
push
push
mov
mov
mov
movsl
movsl
movsl
movsl
mov
xor
lea
mov
mov
push
push
push
call
test
jl
mov
pushl
mov
push
push
call
mov
push
mov
call
push
push
pushl
mov
call
add
test
jne
mov
lea
push
push
mov
push
call
test
jl
mov
lea
mov
push
mov
push
call
test
jl
mov
lea
push
push
mov
call
test
jl
mov
xor
cmp
jbe
mov
lea
push
push
mov
push
call
test
jl
mov
and
cmp
je
mov
inc
movzwl
cmp
jb
jmp
mov
lea
mov
push
mov
push
push
call
test
jl
mov
lea
push
pushl
mov
push
call
test
jl
mov
lea
push
push
mov
call
test
jl
mov
mov
movsl
movsl
mov
pushl
movsl
movsl
mov
push
call
mov
push
mov
call
mov
pushl
mov
push
call
mov
push
mov
call
mov
push
mov
call
push
push
pushl
call
add
neg
sbb
pop
pop
pop
neg
leave
ret
push
mov
push
push
push
mov
push
push
lea
push
call
mov
andl
add
lea
movl
mov
push
push
push
call
test
jl
mov
push
push
mov
call
mov
push
mov
call
pop
pop
leave
ret
push
mov
push
push
push
push
mov
xor
mov
cmp
je
cmp
je
movzwl
push
lea
shl
push
call
mov
pop
movzwl
push
push
pushl
call
inc
cmp
mov
mov
jle
mov
mov
mov
cmp
jne
movl
jmp
andl
movzbl
and
cmp
jne
mov
cmp
je
incl
add
cmp
jl
jmp
movl
push
call
mov
pop
pop
jmp
xor
pop
pop
leave
ret
push
mov
push
push
mov
testb
jne
mov
call
mov
andl
lea
mov
push
push
push
call
test
pop
jl
mov
pushl
mov
push
call
mov
push
mov
call
leave
ret
push
mov
push
mov
andl
lea
mov
push
push
push
call
test
jl
mov
pushl
mov
push
call
mov
push
mov
call
leave
ret
push
mov
push
andl
push
mov
lea
push
mov
push
mov
call
test
jl
mov
cmp
je
mov
mov
test
je
push
call
mov
mov
pop
leave
ret
push
mov
mov
andl
test
je
cmpl
je
mov
push
call
mov
mov
pushl
call
in
test
je
cmpl
je
mov
call
mov
call
pop
mov
andl
pop
ret
push
mov
mov
test
je
mov
push
pushl
push
pushl
call
test
je
push
pop
jmp
mov
push
pushl
mov
push
mov
pushl
call
pop
ret
push
mov
push
cmpl
push
lea
jne
mov
test
je
mov
lea
push
push
push
call
test
jl
push
mov
pushl
call
cmpl
je
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
leave
ret
push
mov
mov
test
je
and
or
push
pop
cmp
jne
push
pop
test
je
and
jmp
xor
cmp
setne
dec
and
add
push
push
pushl
mov
mov
lea
xor
push
push
push
push
mov
pushl
call
pop
pop
pop
ret
push
mov
lea
mov
push
pushl
mov
pushl
pushl
pushl
pushl
call
pop
ret
push
mov
pushl
pushl
push
pushl
push
call
add
ret
mov
lea
push
pushl
mov
pushl
call
ret
mov
call
push
push
mov
push
push
push
mov
lea
mov
andl
push
pushl
pushl
call
movl
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
andl
mov
ret
mov
call
sub
push
push
push
mov
mov
push
pushl
mov
call
dec
andl
mov
mov
and
or
lea
push
push
push
mov
mov
movl
call
cmpl
jne
or
mov
jmp
mov
call
mov
ret
mov
mov
andl
push
lea
pop
push
push
push
mov
mov
call
cmpw
jne
orb
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
mov
ret
mov
call
sub
push
push
push
mov
mov
push
pushl
push
call
andl
andl
lea
mov
mov
push
push
push
mov
call
cmpw
jne
orb
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
mov
ret
push
mov
push
mov
mov
push
mov
not
and
or
and
mov
mov
test
jne
test
je
mov
mov
not
and
push
push
push
push
call
add
test
je
mov
and
and
mov
test
jne
test
je
mov
mov
and
push
push
push
push
call
add
test
je
mov
and
and
pushl
push
push
pushl
call
pop
pop
pop
ret
push
mov
mov
push
test
push
mov
mov
jne
test
je
mov
mov
and
push
push
push
push
call
add
test
je
mov
and
and
pushl
push
pushl
pushl
call
pop
pop
pop
ret
push
mov
pushl
mov
push
push
push
call
add
test
jne
pushl
mov
push
push
push
call
add
pop
ret
mov
call
sub
push
mov
push
push
andl
mov
pushl
mov
push
push
call
mov
pop
pop
mov
pop
leave
ret
mov
mov
call
mov
pushl
movb
mov
push
push
call
mov
ret
mov
call
mov
ret
mov
call
push
mov
push
mov
mov
andl
lea
push
call
pushl
pushl
pushl
call
pushl
call
orl
lea
mov
call
mov
mov
pop
mov
leave
ret
mov
call
push
mov
push
mov
mov
andl
lea
push
call
mov
orl
lea
mov
call
mov
mov
pop
mov
leave
ret
mov
ret
mov
mov
mov
ret
push
mov
sub
push
push
lea
push
mov
lea
movsl
movsl
mov
mov
movsl
mov
movsl
mov
pop
call
add
push
mov
add
push
push
push
push
call
mov
call
test
je
mov
sub
add
push
mov
sub
add
push
push
pushl
push
call
mov
push
push
mov
push
mov
call
jmp
lea
mov
movsl
movsl
movsl
movsl
pop
pop
pop
leave
ret
push
mov
push
push
mov
push
mov
test
je
mov
push
call
mov
and
cmp
je
test
je
mov
mov
mov
jmp
mov
mov
mov
test
mov
je
mov
mov
sub
sub
jmp
mov
mov
push
mov
not
shr
and
mov
push
push
push
mov
pushl
pushl
call
pop
test
je
mov
push
mov
call
mov
and
or
test
je
mov
push
pushl
pushl
pushl
pushl
push
pushl
push
call
pop
pop
leave
ret
push
mov
push
pushl
call
test
clc
mov
test
je
cmp
je
cmp
jle
cmp
jg
or
jmp
push
pop
mov
push
push
mov
call
mov
pop
pop
ret
mov
call
sub
mov
push
andl
push
push
lea
mov
push
push
push
movl
call
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
mov
ret
mov
call
sub
push
push
andl
mov
push
lea
mov
mov
push
mov
push
push
mov
call
pushl
mov
push
push
push
call
add
mov
xor
cmp
pop
pop
mov
sete
pop
leave
ret
mov
call
movl
mov
ret
push
mov
testb
je
pushl
call
mov
add
pop
ret
push
call
rcll
push
add
mov
mov
push
push
mov
call
mov
pop
pop
ret
mov
call
push
push
mov
cmpl
jne
push
call
pop
mov
mov
andl
test
je
push
call
jmp
xor
orl
mov
mov
call
mov
pop
mov
leave
ret
push
mov
push
mov
test
je
mov
push
push
mov
call
mov
mov
mov
call
andl
mov
test
je
mov
mov
call
mov
pushl
mov
mov
mov
lea
movzwl
mov
call
mov
push
push
mov
mov
call
mov
test
je
mov
mov
call
pop
pop
ret
mov
call
push
push
push
push
mov
xor
mov
cmp
je
cmpl
je
push
call
pop
mov
mov
cmp
mov
je
push
pushl
pushl
call
jmp
xor
mov
mov
mov
mov
orl
mov
mov
mov
mov
call
mov
push
push
mov
mov
mov
call
jmp
mov
mov
cmp
je
mov
call
mov
mov
cmp
je
cmp
jne
mov
test
je
mov
cmp
jne
mov
test
je
mov
jmp
mov
mov
test
je
mov
test
je
mov
push
push
call
test
je
push
call
pop
mov
test
je
call
mov
test
mov
jne
mov
pop
pop
pop
mov
leave
ret
mov
add
push
push
call
ret
mov
lea
call
ret
pushl
mov
pushl
lea
call
ret
pushl
mov
mov
push
call
ret
mov
lea
call
xor
ret
mov
add
push
call
dec
ret
mov
lea
call
ret
pushl
mov
pushl
lea
call
ret
mov
mov
mov
test
je
mov
mov
mov
neg
sbb
and
add
ret
mov
add
push
mov
mov
call
xor
ret
push
mov
mov
push
push
mov
test
je
andl
pushl
mov
lea
push
call
test
jge
mov
jmp
mov
add
push
pushl
mov
call
pop
pushl
pushl
push
call
mov
andl
test
je
mov
andl
andl
mov
xor
pop
pop
pop
ret
push
pop
ret
mov
add
push
mov
mov
call
xor
ret
mov
lea
call
xor
ret
mov
mov
push
mov
call
xor
ret
push
mov
sub
push
mov
push
lea
push
push
mov
mov
pushl
push
call
pushl
lea
push
call
int3
lea
lea
mov
mov
movsl
movsl
movsl
lea
movsl
mov
push
push
push
call
pop
pop
pop
leave
ret
mov
add
push
push
call
ret
mov
lea
call
ret
pushl
mov
pushl
lea
call
ret
mov
lea
call
xor
ret
mov
ret
push
mov
sub
mov
push
push
push
pushl
xor
mov
push
call
mov
push
push
push
call
mov
mov
test
mov
je
mov
push
mov
mov
mov
lea
push
push
mov
call
pop
test
je
mov
mov
sub
sub
mov
mov
fildl
mov
fstps
fildl
jmp
test
je
fildl
mov
fstps
fildl
fstps
jmp
test
je
mov
flds
call
flds
mov
call
mov
lea
push
push
push
push
call
test
je
mov
mov
sub
mov
mov
sub
jmp
test
je
mov
mov
mov
mov
mov
jmp
movl
mov
push
pushl
push
call
mov
pop
pop
pop
leave
ret
mov
ret
mov
ret
mov
add
push
call
xchg
ret
mov
lea
call
ret
pushl
mov
pushl
lea
call
ret
mov
ret
mov
ret
mov
pushl
add
pushl
mov
push
mov
mov
call
neg
sbb
and
add
ret
push
push
pushl
call
add
test
je
push
push
pushl
call
add
test
je
mov
jmp
mov
mov
push
mov
mov
call
xor
ret
push
pop
ret
push
mov
sub
mov
push
push
push
lea
xor
cmp
jne
cmp
mov
jne
lea
mov
push
movl
mov
mov
mov
mov
mov
mov
mov
call
mov
cmp
jne
cmp
jne
lea
push
call
mov
lea
mov
push
mov
push
push
call
test
jl
push
lea
push
push
call
push
lea
push
push
call
add
lea
mov
push
lea
push
lea
mov
push
lea
push
push
push
push
push
push
call
cmp
mov
mov
je
pushl
call
cmp
je
pushl
call
cmp
je
pushl
call
mov
push
mov
call
cmp
jl
movl
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
push
xor
cmp
lea
jne
cmp
jne
mov
movl
mov
lea
push
mov
mov
mov
mov
mov
mov
call
mov
cmp
jne
xor
pop
leave
ret
push
mov
push
push
push
pushl
call
mov
add
test
je
push
push
pushl
call
add
test
je
lea
push
push
pushl
call
add
test
je
mov
jmp
mov
push
mov
mov
call
xor
pop
pop
ret
push
mov
sub
mov
push
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
xor
lea
mov
mov
mov
mov
call
cmp
pop
je
pushl
call
mov
leave
ret
mov
push
mov
push
xor
push
lea
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
pop
pop
ret
mov
call
sub
push
push
mov
mov
movl
xor
cmp
mov
je
mov
cmp
je
mov
lea
push
push
mov
push
call
test
jl
mov
lea
mov
push
mov
push
push
call
test
jl
mov
pushl
mov
push
call
mov
push
mov
call
mov
push
mov
call
push
cmp
je
mov
push
mov
mov
pushl
mov
call
mov
mov
jmp
lea
mov
call
cmp
je
xor
cmp
jle
mov
add
push
call
inc
add
cmp
jl
xor
cmp
je
pushl
call
pushl
call
pop
pop
mov
cmp
je
mov
push
call
mov
cmp
je
mov
push
call
cmp
je
cmp
mov
jle
xor
mov
mov
mov
cmp
je
mov
mov
mov
mov
jmp
mov
mov
call
mov
mov
cmp
je
mov
push
call
incl
add
mov
cmp
jl
pushl
push
call
mov
cmp
je
push
call
decb
je
mov
pushl
call
mov
call
mov
cmp
je
mov
call
push
call
pop
mov
cmp
je
mov
call
push
call
pop
mov
pop
cmp
je
mov
push
call
mov
cmp
je
mov
push
call
mov
orl
call
mov
pop
pop
mov
leave
ret
mov
call
push
push
push
push
mov
xor
mov
cmp
jbe
push
mov
mov
lea
push
push
mov
push
mov
call
cmp
mov
jl
xor
cmp
jbe
mov
mov
push
pushl
mov
push
call
inc
cmp
jb
pushl
mov
call
mov
orl
pop
cmp
mov
pop
je
mov
push
call
mov
mov
pop
pop
mov
leave
ret
mov
call
push
push
mov
mov
movl
call
mov
andb
test
je
mov
push
call
mov
orl
test
je
mov
push
call
mov
pop
mov
leave
ret
push
mov
cmpl
je
call
mov
test
je
andl
mov
push
call
mov
test
je
andl
mov
push
call
pop
ret
push
push
lea
xor
xor
cmp
je
mov
push
push
push
mov
push
push
push
call
mov
pop
pop
ret
push
mov
push
push
call
mov
test
je
push
call
andl
mov
test
je
push
call
andl
pushl
call
andl
andl
pop
pop
pop
ret
push
mov
sub
push
push
mov
push
mov
mov
call
mov
mov
pushl
call
cmp
fcomps
shrb
pop
mov
je
call
jp
call
lea
push
pushl
push
call
lea
push
pushl
push
call
mov
push
sub
push
push
mov
cltd
sub
sar
push
mov
sub
cltd
sub
sar
push
call
push
mov
call
mov
lea
push
push
mov
push
mov
call
test
jl
mov
lea
push
push
mov
push
push
call
cmp
mov
jne
movl
cmp
jge
cmp
je
mov
push
sub
mov
push
mov
sub
push
pushl
pushl
call
mov
push
call
mov
jmp
mov
lea
push
push
mov
push
mov
call
cmp
jl
mov
lea
push
push
mov
call
mov
push
mov
call
mov
cmp
jne
mov
jmp
mov
lea
push
push
push
call
mov
mov
push
mov
call
mov
cmp
jl
mov
lea
push
push
mov
push
call
mov
call
cmp
mov
je
mov
push
sub
mov
push
mov
sub
push
pushl
pushl
call
mov
push
call
mov
pop
pop
pop
leave
ret
push
mov
push
push
mov
test
je
mov
neg
sbb
and
leave
ret
mov
test
jne
mov
lea
push
push
mov
push
mov
call
test
jl
mov
lea
push
push
mov
call
mov
push
mov
call
jmp
mov
lea
push
push
push
call
test
jl
mov
leave
ret
xor
leave
ret
mov
call
sub
push
push
mov
push
xor
mov
cmp
mov
mov
mov
je
mov
lea
push
push
mov
push
call
cmp
mov
jl
mov
lea
push
push
mov
push
call
test
jl
mov
lea
mov
push
mov
push
push
call
test
jl
mov
lea
push
mov
mov
add
push
push
call
mov
push
mov
call
mov
push
mov
call
push
call
pop
mov
cmp
mov
je
pushl
mov
call
jmp
xor
orl
mov
mov
push
mov
call
mov
call
push
call
cmp
pop
je
mov
mov
mov
mov
mov
mov
jmp
xor
mov
mov
pushl
mov
call
mov
mov
mov
mov
mov
mov
lea
shl
push
push
call
mov
mov
lea
shl
push
push
push
call
mov
add
call
mov
call
jmp
mov
cmp
jne
xor
jmp
mov
lea
push
lea
push
push
push
call
cmp
jl
lea
push
push
mov
call
orl
lea
push
push
mov
mov
mov
movl
mov
movl
call
mov
orl
push
lea
push
movl
mov
movl
mov
movl
mov
push
push
push
call
mov
cmp
jge
mov
push
mov
call
mov
jmp
mov
lea
mov
mov
xor
push
movl
mov
mov
mov
mov
push
push
push
call
cmp
mov
jge
mov
push
mov
call
jmp
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
call
cmp
mov
jle
xor
push
call
pop
mov
cmp
movl
je
push
mov
call
jmp
xor
mov
orl
incl
mov
mov
add
cmp
jl
mov
cmp
je
mov
cmp
jle
add
mov
mov
mov
mov
mov
cmp
je
mov
mov
mov
push
pushl
mov
call
jmp
mov
mov
call
mov
mov
cmp
je
mov
push
call
addl
decl
jne
pushl
call
orb
pop
pop
pop
mov
leave
ret
mov
call
sub
push
push
mov
xor
mov
mov
mov
mov
pushl
movb
push
call
lea
mov
mov
mov
mov
call
mov
mov
pop
pop
mov
leave
ret
push
mov
call
mov
push
push
mov
call
test
jl
push
push
mov
call
pop
ret
push
mov
push
push
andl
push
mov
call
lea
lea
push
lea
push
mov
neg
sbb
mov
mov
and
dec
mov
push
pushl
push
push
call
test
jne
push
mov
call
mov
test
jge
mov
call
mov
pop
pop
leave
ret
push
push
mov
push
xor
xor
mov
mov
test
jbe
mov
mov
cmpb
je
push
mov
call
test
jl
inc
cmp
jb
pop
pop
pop
ret
mov
push
mov
push
mov
mov
push
mov
mov
push
pushl
mov
push
call
pop
pop
ret
mov
test
je
mov
add
push
push
push
call
ret
mov
call
sub
push
push
push
mov
xor
mov
mov
mov
mov
lea
push
push
mov
push
mov
call
cmp
mov
jge
mov
orl
cmp
je
mov
push
call
mov
jmp
cmpl
mov
lea
jne
andl
mov
lea
push
push
push
movb
call
mov
test
jge
mov
andb
test
je
mov
push
call
jmp
mov
lea
push
lea
mov
push
push
push
call
mov
test
jl
mov
andb
andb
test
je
mov
push
call
jmp
movb
mov
andl
imul
push
movb
call
pop
mov
jmp
mov
ret
mov
mov
xor
cmp
mov
jne
mov
orl
cmp
jmp
mov
mov
cmp
jae
mov
lea
shl
add
cmpl
ja
cmpw
je
xor
jmp
andl
push
movb
call
pop
mov
jmp
mov
ret
mov
mov
andl
test
je
andl
lea
mov
movsl
movsl
movsl
movsl
mov
mov
lea
shl
movw
mov
movl
mov
add
mov
cmp
je
cmp
jne
incl
mov
push
add
mov
mov
and
add
add
lea
push
push
pushl
mov
push
push
mov
push
mov
pushl
push
pushl
pushl
call
mov
addl
mov
add
add
incl
mov
mov
mov
jmp
cmpl
jne
push
mov
call
mov
test
jge
pushl
call
pop
jmp
mov
movb
pushl
andl
movb
call
pop
mov
jmp
mov
ret
mov
andl
cmpl
jne
pushl
call
pop
mov
orl
test
je
mov
push
call
mov
jmp
pushl
pushl
pushl
pushl
pushl
call
pushl
mov
call
add
mov
orl
test
je
mov
push
call
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
push
push
mov
push
push
andl
mov
push
mov
mov
andl
mov
shl
push
call
pop
mov
jmp
mov
ret
mov
mov
mov
neg
sbb
pop
and
pop
add
mov
pop
leave
ret
push
mov
push
push
mov
push
mov
mov
mov
push
pushl
mov
neg
pushl
sbb
and
push
inc
push
inc
push
push
call
test
mov
jle
add
pushl
call
add
dec
pop
jne
pop
mov
pop
pop
pop
ret
push
mov
mov
mov
push
push
xor
push
test
pop
je
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
cmp
mov
mov
mov
mov
mov
pop
je
movl
mov
mov
cmp
je
orl
mov
pop
ret
mov
push
mov
push
push
mov
mov
mov
sub
je
dec
je
dec
je
jmp
mov
mov
movsl
movsl
movsl
movsl
mov
mov
jmp
mov
mov
movsl
movsl
movsl
movsl
pushl
call
pop
lea
push
call
aaa
mov
test
mov
je
pushl
push
call
pop
pop
push
pop
pop
pop
pop
ret
push
mov
push
push
push
push
mov
xor
cmp
push
mov
je
push
pushl
call
cmp
je
xor
cmp
jle
mov
lea
mov
mov
lea
mov
push
call
test
je
mov
mov
lea
shl
mov
jmp
xor
push
lea
call
mov
pushl
mov
push
call
mov
pop
neg
pop
sbb
lea
inc
call
test
jne
mov
cmp
jl
mov
andl
jmp
xor
cmp
jle
mov
mov
test
je
mov
push
mov
push
call
pop
test
pop
je
inc
add
cmp
jl
jmp
mov
pushl
lea
mov
call
jmp
mov
call
mov
xor
cmp
mov
jle
mov
lea
jmp
xor
mov
mov
cmp
je
mov
mov
mov
mov
cmp
je
test
jne
inc
add
cmp
jl
jmp
lea
push
mov
call
pop
pop
pop
leave
ret
cmpb
push
push
je
mov
xor
test
jbe
mov
mov
add
mov
cmp
je
inc
add
cmp
jb
xor
jmp
mov
jmp
mov
mov
mov
mov
mov
lea
cmp
ja
sub
mov
mov
pop
pop
ret
cmpl
push
mov
mov
je
push
pushl
call
pushl
lea
call
jmp
mov
call
push
add
pushl
mov
call
test
je
push
mov
call
pop
ret
push
mov
sub
push
push
mov
xor
cmp
je
call
mov
mov
call
jmp
cmp
push
je
cmp
jle
xor
mov
add
push
call
inc
add
cmp
jl
cmpl
jle
pushl
call
pushl
call
pop
pop
xor
mov
mov
mov
cmp
jle
mov
add
mov
add
mov
add
dec
jne
mov
cmp
jle
lea
shl
push
call
pop
mov
xor
cmp
mov
mov
jle
mov
mov
mov
mov
mov
test
je
lea
shl
mov
mov
mov
mov
mov
mov
add
push
mov
add
push
call
mov
mov
shl
mov
mov
mov
andl
mov
orl
mov
orl
mov
incl
movl
mov
mov
mov
add
test
jne
mov
incl
addl
mov
cmp
jl
mov
mov
mov
push
mov
shl
push
pushl
push
push
call
mov
xor
cmp
je
shl
push
call
pop
mov
xor
cmp
jle
mov
push
add
push
push
call
mov
add
andw
inc
add
cmp
jl
mov
call
mov
mov
call
pop
pop
pop
leave
ret
push
mov
sub
xor
cmp
je
mov
cmp
je
cmp
je
call
leave
ret
cmp
jne
xor
leave
ret
mov
push
mov
push
push
push
mov
pop
lea
xor
push
push
push
mov
mov
mov
mov
mov
push
push
push
call
pop
pop
pop
leave
ret
mov
call
sub
andl
push
push
lea
push
mov
push
call
mov
mov
andl
lea
push
push
call
cmpl
je
mov
lea
push
mov
mov
call
test
je
mov
mov
mov
lea
shl
mov
mov
movzwl
cmp
jg
cmp
je
cmp
jg
je
dec
dec
je
dec
je
dec
je
dec
je
dec
je
dec
jne
mov
lea
push
mov
mov
call
test
je
mov
mov
lea
shl
mov
add
jmp
mov
lea
push
call
lea
push
call
jmp
xor
fldl
movw
fstpl
lea
lea
push
movb
call
andb
lea
jmp
mov
lea
push
mov
mov
call
test
je
mov
mov
lea
shl
mov
add
jmp
xor
mov
mov
movw
mov
mov
lea
lea
push
movb
call
andb
lea
jmp
mov
lea
push
mov
mov
call
test
je
mov
mov
lea
shl
mov
add
jmp
xor
fldl
movw
fstpl
lea
lea
push
movb
call
andb
lea
jmp
mov
lea
push
mov
mov
call
test
je
mov
mov
lea
shl
mov
add
jmp
xor
flds
movw
fstps
lea
lea
push
movb
call
andb
lea
jmp
cmp
je
cmp
je
cmp
jle
cmp
jle
cmp
je
cmp
jne
mov
lea
push
mov
mov
call
test
je
mov
mov
lea
shl
mov
add
jmp
xor
push
lea
pushl
call
push
lea
movb
call
andb
lea
jmp
mov
lea
push
mov
mov
call
test
je
mov
mov
lea
shl
mov
add
jmp
xor
mov
push
push
lea
call
push
lea
movb
call
andb
lea
jmp
mov
lea
push
mov
mov
call
test
je
mov
mov
lea
shl
mov
add
jmp
xor
mov
movw
mov
lea
lea
push
movb
call
andb
lea
jmp
mov
lea
push
mov
mov
call
test
je
mov
mov
lea
shl
mov
add
jmp
xor
push
lea
call
push
lea
movb
call
andb
lea
jmp
mov
lea
push
mov
mov
call
test
je
mov
mov
lea
shl
mov
add
jmp
xor
mov
push
push
lea
call
push
lea
movb
call
andb
lea
jmp
mov
lea
push
mov
mov
call
test
je
mov
mov
lea
shl
mov
add
jmp
xor
push
lea
call
mov
push
push
lea
movb
call
push
lea
movb
call
lea
push
call
andb
lea
jmp
sub
je
dec
je
dec
dec
je
dec
je
dec
jne
mov
lea
push
mov
mov
call
test
je
mov
mov
lea
lea
shl
mov
add
mov
movsl
movsl
movsl
movsl
movzwl
movzwl
movzwl
movzwl
movswl
push
push
movzwl
push
push
push
push
lea
call
fldl
movw
fstpl
lea
lea
push
movb
call
andb
lea
push
call
jmp
mov
lea
push
mov
mov
call
test
je
mov
mov
lea
andl
lea
shl
fldz
mov
add
fstpl
mov
movsl
movsw
movzwl
movzwl
movzwl
push
push
push
push
push
push
lea
call
fldl
movw
fstpl
lea
lea
push
movb
call
andb
lea
jmp
mov
lea
push
mov
mov
call
test
je
pushl
mov
call
mov
lea
movsl
fldz
fstpl
movsw
movzwl
movzwl
movswl
xor
push
push
push
push
push
push
lea
mov
call
fldl
movw
fstpl
lea
lea
push
movb
call
andb
lea
jmp
mov
lea
push
mov
mov
call
test
je
pushl
mov
call
mov
lea
movsl
movsl
movsl
movsl
movsw
movsb
fildll
mov
mov
dec
test
jbe
fld
fmull
fstp
jmp
cmpb
jne
fld
fchs
fstp
fstpl
movw
lea
lea
push
movb
call
andb
lea
jmp
mov
lea
push
mov
mov
call
test
je
mov
mov
lea
shl
mov
add
jmp
xor
push
lea
call
mov
push
push
lea
movb
call
push
lea
movb
call
lea
push
call
andb
lea
call
mov
lea
push
call
lea
push
call
mov
mov
pop
pop
pop
mov
leave
ret
lea
push
mov
push
call
test
je
mov
mov
lea
shl
add
mov
mov
mov
and
add
add
mov
mov
mov
mov
jmp
xor
pop
ret
mov
mov
lea
shl
mov
add
ret
mov
call
sub
push
mov
xor
cmp
movl
mov
mov
jle
push
mov
push
mov
lea
mov
mov
test
je
mov
shl
mov
jmp
mov
mov
mov
push
lea
push
push
mov
movl
call
add
lea
push
call
andl
cmpl
je
mov
mov
inc
push
lea
push
call
push
lea
movb
call
andb
lea
push
call
lea
jmp
mov
add
mov
lea
push
mov
pop
mov
mov
mov
mov
test
je
mov
lea
push
push
push
call
test
jl
lea
mov
push
lea
push
lea
mov
push
push
push
push
push
pushl
push
call
mov
push
mov
call
andl
cmpl
je
pushl
call
cmpl
je
pushl
call
cmpl
je
pushl
call
lea
push
call
incl
addl
orl
lea
push
call
cmpl
jne
mov
inc
cmp
mov
jl
pop
pop
mov
andl
xor
pop
mov
leave
ret
mov
call
sub
push
push
push
mov
xor
cmp
mov
mov
je
cmp
je
push
pop
cmp
mov
jl
movl
movl
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
cmp
lea
je
incl
push
pop
mov
cmp
jne
mov
lea
lea
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
movb
mov
mov
call
test
je
mov
mov
mov
lea
shl
mov
add
jmp
xor
mov
mov
mov
pushl
lea
push
push
call
mov
lea
push
mov
mov
call
test
je
mov
lea
mov
shl
mov
mov
add
jmp
xor
mov
mov
push
push
mov
push
add
pushl
mov
push
lea
pushl
call
mov
lea
pushl
call
mov
lea
push
mov
mov
call
test
je
mov
mov
mov
lea
shl
mov
mov
movzwl
mov
cmp
jg
je
cmp
jg
je
dec
dec
je
dec
je
dec
je
dec
je
dec
je
dec
jne
push
push
lea
call
mov
lea
push
mov
mov
call
test
je
mov
mov
lea
shl
mov
fldl
mov
add
fstpl
jmp
push
push
lea
call
mov
lea
push
mov
mov
call
test
je
mov
mov
mov
lea
shl
mov
add
jmp
xor
mov
mov
mov
mov
jmp
push
push
lea
call
mov
lea
push
mov
mov
call
test
je
mov
mov
lea
shl
jmp
push
push
lea
call
mov
lea
push
mov
mov
call
test
je
mov
mov
lea
shl
jmp
push
push
lea
call
mov
lea
push
mov
mov
call
test
je
mov
mov
lea
shl
jmp
push
push
lea
call
mov
lea
push
mov
mov
call
test
je
mov
mov
lea
shl
jmp
sub
je
sub
je
dec
dec
je
dec
je
dec
je
dec
jne
push
push
lea
call
mov
lea
push
mov
mov
call
test
je
mov
mov
lea
shl
mov
mov
add
mov
mov
jmp
push
push
lea
call
mov
lea
push
mov
mov
call
test
je
mov
mov
lea
shl
mov
mov
add
mov
mov
jmp
push
push
lea
call
mov
lea
push
mov
mov
call
test
je
mov
mov
mov
lea
shl
mov
add
mov
jmp
push
push
lea
call
mov
mov
mov
lea
push
mov
mov
call
test
je
mov
mov
mov
lea
shl
mov
add
mov
mov
jmp
push
push
lea
call
mov
lea
push
mov
mov
call
test
je
lea
lea
mov
mov
movsl
mov
lea
movsl
movsl
shl
movsl
mov
lea
add
jmp
push
push
lea
call
mov
lea
push
mov
mov
call
test
je
mov
mov
lea
shl
jmp
push
push
lea
call
mov
lea
push
mov
mov
call
test
je
mov
mov
mov
lea
shl
mov
add
jmp
xor
mov
mov
push
push
mov
pushl
push
push
pushl
push
push
push
call
jmp
sub
je
sub
jne
push
push
lea
call
push
lea
push
push
call
fldl
add
lea
push
push
push
fstpl
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movzwl
cltd
idiv
mov
mov
mov
lea
push
call
test
je
lea
lea
mov
mov
movsl
mov
lea
movsl
movsl
shl
movsl
mov
lea
add
mov
movsl
movsl
movsl
movsl
mov
xor
jmp
push
push
lea
call
mov
lea
push
mov
mov
call
test
je
mov
mov
mov
lea
shl
mov
add
jmp
xor
mov
mov
mov
pushl
pushl
push
call
add
mov
lea
mov
mov
call
mov
mov
pushl
mov
call
andb
lea
call
orl
lea
push
call
mov
incl
jmp
addl
addl
inc
cmp
mov
jle
cmp
jle
mov
xor
mov
pop
pop
pop
mov
leave
ret
cmp
lea
jne
mov
push
push
push
mov
call
cmp
jl
cmp
mov
jle
mov
mov
mov
mov
mov
cmp
je
mov
lea
shl
mov
mov
mov
mov
mov
mov
add
cmp
je
incl
push
pop
mov
cmp
jne
mov
lea
push
push
mov
call
cmp
jl
cmp
jne
mov
push
push
mov
call
cmp
jl
mov
push
lea
pop
push
call
mov
movl
lea
mov
movzwl
cmp
jl
cmp
jle
cmp
je
cmp
je
jmp
mov
mov
cmp
jne
or
jmp
or
push
lea
call
mov
mov
add
mov
movl
mov
mov
mov
lea
mov
mov
lea
mov
mov
push
push
push
call
pushl
mov
call
orl
lea
push
call
mov
mov
incl
add
cmp
mov
jne
incl
addl
mov
cmp
jl
mov
cmp
mov
je
mov
mov
mov
mov
mov
mov
cmp
je
mov
lea
push
push
push
call
test
jl
mov
pushl
mov
push
call
test
jne
incl
push
pop
cmp
jne
mov
lea
push
push
mov
call
cmp
jl
cmp
jne
mov
push
push
mov
call
cmp
jl
mov
mov
push
mov
call
cmp
jne
cmp
jle
mov
push
push
push
mov
push
call
mov
mov
cmp
jge
mov
mov
call
mov
jmp
push
push
mov
push
xor
xor
mov
mov
test
jbe
push
mov
call
test
jl
inc
cmp
jb
pop
pop
pop
ret
mov
test
je
mov
push
push
mov
mov
mov
push
mov
mov
push
pushl
push
call
pop
pop
jmp
mov
ret
push
mov
pushl
call
pushl
call
pop
pop
pop
ret
mov
call
push
push
mov
push
push
mov
push
mov
mov
pushl
mov
mov
xor
mov
mov
mov
mov
call
imul
push
mov
mov
call
pop
mov
pop
jmp
mov
ret
mov
mov
mov
neg
sbb
pop
and
pop
add
mov
pop
leave
ret
push
mov
mov
xor
push
cmp
mov
je
sub
jmp
xor
mov
cmp
je
sub
jmp
xor
push
push
mov
push
sub
push
mov
imul
push
push
push
add
pushl
pushl
pushl
push
call
add
incl
pop
pop
ret
mov
call
push
andl
push
push
mov
mov
andl
lea
mov
push
push
push
call
mov
test
jl
cmpl
jne
push
mov
call
mov
test
jge
mov
orl
test
je
mov
push
call
mov
jmp
mov
movb
pushl
pushl
pushl
pushl
pushl
call
orl
mov
mov
add
test
je
mov
push
call
mov
mov
pop
pop
mov
leave
ret
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
ret
mov
mov
ret
mov
cmp
je
mov
call
ret
mov
ret
push
mov
push
push
mov
cmpl
je
mov
test
je
mov
lea
push
push
mov
push
call
test
jl
lea
mov
push
xor
cmp
mov
setne
push
pushl
push
call
mov
push
mov
call
jmp
mov
call
test
je
mov
push
pop
cmpl
je
mov
mov
push
push
push
pushl
mov
push
call
add
pop
pop
leave
ret
push
mov
mov
test
jne
xor
pop
ret
mov
call
mov
push
push
mov
mov
call
mov
mov
mov
call
pop
ret
mov
test
je
andl
mov
test
je
mov
cmp
je
call
mov
jmp
call
mov
mov
xor
ret
mov
lea
call
ret
mov
lea
call
ret
pushl
mov
pushl
lea
call
ret
pushl
mov
pushl
lea
pushl
call
ret
push
push
pushl
call
add
test
je
push
push
pushl
call
add
test
je
mov
jmp
mov
mov
push
mov
mov
call
xor
ret
push
mov
push
mov
push
mov
push
push
pushl
mov
pushl
call
test
jl
mov
cmp
je
cmp
je
cmp
je
mov
and
jne
cmp
je
cmp
jne
mov
test
je
test
je
mov
call
jmp
xor
pop
pop
pop
ret
push
mov
pushl
pushl
pushl
call
test
jl
xor
ret
push
mov
push
mov
push
mov
push
push
pushl
mov
pushl
call
test
jl
mov
cmp
je
cmp
je
cmp
jne
mov
test
je
testb
je
mov
call
xor
pop
pop
pop
ret
push
mov
pushl
pushl
pushl
call
test
jl
xor
ret
push
mov
pushl
pushl
pushl
call
test
jl
xor
ret
push
mov
push
mov
push
mov
push
push
pushl
mov
pushl
call
test
jl
mov
mov
test
je
cmpl
jne
cmp
je
cmp
je
testb
je
cmp
je
cmp
je
mov
movl
call
mov
andl
mov
call
xor
pop
pop
pop
ret
push
mov
push
mov
push
mov
pushl
pushl
pushl
call
test
jl
mov
test
je
testb
je
push
mov
mov
movl
call
mov
mov
mov
call
pop
xor
pop
pop
ret
push
mov
sub
testb
push
push
lea
je
xor
cmp
jbe
mov
mov
dec
cmp
ja
movzbl
jmp
inc
add
cmp
jae
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
pop
lea
push
call
mov
mov
mov
lea
push
mov
call
mov
jmp
xor
pop
pop
leave
ret
outsl
mov
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
pop
pop
add
add
add
add
pop
add
pop
pop
add
add
add
pop
push
xor
ret
push
push
pushl
call
add
test
je
push
push
pushl
call
add
test
je
mov
jmp
mov
mov
push
mov
mov
call
xor
ret
push
mov
sub
mov
push
push
push
lea
mov
xor
sub
je
dec
je
dec
je
dec
je
dec
jne
mov
push
test
pop
jne
xor
jmp
push
jmp
push
jmp
push
pop
jmp
push
jmp
cmpl
jne
mov
movl
call
mov
andl
mov
call
push
lea
call
lea
mov
push
mov
movl
call
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
push
push
push
push
lea
mov
pop
xor
push
sub
mov
mov
pop
je
dec
je
dec
je
dec
je
dec
jne
mov
jmp
movl
jmp
movl
jmp
mov
jmp
movl
mov
push
sub
pop
je
sub
je
sub
je
sub
jne
mov
jmp
push
pop
jmp
push
jmp
mov
mov
test
je
cmp
jne
cmp
jne
mov
mov
call
jmp
cmp
jne
cmpl
je
cmpl
jne
cmp
jne
mov
mov
call
mov
mov
mov
mov
mov
mov
movl
call
test
mov
jne
mov
mov
call
test
je
push
lea
call
mov
mov
mov
lea
push
mov
call
mov
test
jl
xor
pop
pop
pop
leave
ret
cmpl
push
jne
mov
mov
test
je
mov
mov
pushl
call
mov
call
mov
mov
pushl
call
mov
mov
cmp
je
pushl
mov
call
orl
shl
push
call
cwtl
mov
mov
lea
shl
push
push
push
call
add
xor
pop
ret
mov
test
je
mov
push
call
ret
push
push
mov
test
je
mov
push
call
mov
mov
test
je
mov
push
call
mov
mov
pop
pop
ret
jmp
push
call
ret
mov
mov
orl
mov
xor
mov
mov
mov
mov
mov
mov
ret
pushl
add
call
ret
mov
test
jne
xor
jmp
mov
test
jne
xor
jmp
mov
push
push
push
pushl
push
call
ret
push
mov
push
push
call
test
je
push
push
push
pushl
call
pop
mov
call
pop
ret
push
push
mov
xor
test
push
je
push
call
push
pushl
call
and
cmp
jne
cmp
je
pushl
mov
call
push
call
mov
push
pushl
call
test
jne
test
jne
pop
mov
pop
pop
ret
push
push
mov
push
test
je
mov
call
add
push
call
push
call
test
mov
jne
pushl
call
push
call
push
push
call
mov
test
je
cmp
je
mov
push
push
call
push
call
test
je
mov
push
push
call
push
call
mov
push
push
pushl
call
xchg
test
je
mov
test
je
pushl
push
call
test
je
test
je
mov
call
test
jne
push
push
push
jmp
mov
pushl
call
mov
jne
add
mov
test
jne
mov
jmp
push
push
push
call
mov
mov
pop
pop
pop
pop
ret
mov
mov
test
je
pushl
call
test
je
push
pop
ret
xor
ret
push
mov
push
push
push
mov
pushl
xor
push
call
mov
test
je
mov
push
push
pushl
call
jge
call
mov
test
je
inc
cmp
je
cmp
jg
pushl
push
call
pop
test
pop
je
mov
pop
pop
pop
pop
ret
pushl
push
call
mov
mov
push
push
push
call
pushl
mov
push
call
pop
test
pop
jne
cmp
jne
jmp
push
mov
mov
call
test
je
mov
test
je
testb
je
push
pop
pop
ret
xor
pop
ret
push
mov
push
push
push
mov
xor
push
mov
mov
pushl
push
push
call
mov
test
je
push
call
test
pop
je
push
pushl
pushl
call
mov
dec
sbb
add
and
add
test
jne
cmp
je
test
jne
mov
incl
cmpl
jl
xor
pop
pop
pop
leave
ret
mov
jmp
push
mov
push
push
test
je
mov
xor
mov
test
jne
mov
test
jne
pushl
call
push
call
test
jne
test
je
test
jne
mov
mov
call
push
call
push
call
cmp
je
mov
call
pop
pop
pop
ret
push
mov
test
push
je
pushl
push
call
test
je
pushl
mov
call
push
call
test
je
mov
test
jne
pushl
jmp
mov
test
je
pushl
call
test
je
mov
cmp
je
test
je
pushl
pushl
push
call
test
jne
mov
push
mov
call
pop
pop
ret
push
mov
push
push
pushl
mov
call
test
jne
push
push
push
call
mov
cmp
je
mov
mov
call
cmp
je
push
push
push
call
mov
test
je
cmp
je
mov
jmp
mov
jmp
xor
pop
pop
pop
ret
push
mov
mov
test
je
pushl
call
pop
ret
push
push
call
mov
neg
sbb
and
add
test
je
xor
push
cmp
setne
push
push
pushl
push
call
pop
ret
mov
test
jne
ret
mov
test
je
jmp
push
push
call
and
ret
push
mov
test
push
je
push
pushl
push
call
test
jne
push
pushl
call
jmp
push
push
pushl
call
mov
test
je
mov
push
push
call
pop
pop
push
push
pushl
call
mov
test
je
cmp
jne
pop
pop
ret
mov
push
push
push
pushl
push
call
mov
shr
cmp
jne
movzwl
jmp
push
pop
ret
push
mov
push
andl
push
push
push
mov
test
jne
xor
jmp
mov
mov
push
pushl
call
mov
rorb
mov
pushl
in
pushl
call
sub
jne
push
call
pop
mov
mov
cmp
jne
testb
je
test
je
push
call
push
push
call
mov
test
je
cmp
je
push
call
test
pop
je
push
jmp
test
je
push
call
test
pop
jne
test
je
cmpl
je
push
push
call
testb
je
push
push
jmp
push
call
push
push
call
mov
push
call
test
pop
je
mov
call
test
je
push
push
call
pop
pop
pop
pop
pop
leave
ret
mov
call
sub
push
push
push
mov
call
push
add
test
mov
jne
and
jmp
mov
mov
mov
test
jne
and
jmp
mov
mov
mov
mov
cmp
mov
jb
cmp
jbe
cmp
jb
cmp
ja
test
mov
je
mov
cmpl
jne
pushl
call
push
call
cmp
je
pushl
call
push
call
mov
test
jne
test
je
mov
test
je
mov
test
je
pushl
mov
push
call
test
je
cmp
je
cmp
je
cmp
jne
test
je
mov
test
je
mov
mov
cmp
jne
testb
jne
cmp
jne
testb
je
xor
jmp
mov
pushl
call
mov
mov
xor
push
sub
mov
pop
je
sub
je
sub
jne
cmp
jne
push
push
call
test
jge
mov
cmpw
je
jmp
mov
cmp
je
push
push
call
cmpl
jne
test
jne
mov
cmp
jne
test
jne
cmp
jne
push
pop
jmp
push
push
pushl
call
test
je
mov
test
je
push
mov
call
jmp
pushl
push
call
mov
movzwl
cmp
jg
je
cmp
je
cmp
je
cmp
je
pushl
mov
pushl
push
call
mov
test
je
call
push
call
cmp
je
call
push
call
push
call
pop
pushl
call
push
call
test
je
push
call
call
push
call
push
pushl
call
pop
pop
pushl
call
test
je
call
push
call
push
pushl
pushl
call
mov
mov
pop
pop
mov
pop
leave
ret
test
jne
push
call
lea
leave
test
setl
test
mov
je
mov
push
mov
push
pushl
push
call
push
call
mov
test
je
push
call
push
pushl
call
pop
pop
jmp
cmp
jl
cmp
jle
cmp
jle
cmp
jne
pushl
call
test
pop
je
mov
mov
call
jmp
pushl
call
test
mov
jne
push
pushl
call
mov
test
je
mov
call
test
jne
push
call
mov
incl
test
rclb
push
push
push
mov
call
add
orl
push
pop
jmp
mov
call
mov
ret
movl
pushl
pushl
call
test
jne
mov
test
je
mov
pushl
push
mov
pushl
push
call
push
call
test
je
cmpl
je
push
call
jmp
push
mov
call
testb
je
push
call
pop
mov
pop
ret
mov
call
push
mov
movl
andl
add
call
mov
mov
leave
ret
mov
test
jge
cmp
jne
call
jmp
push
call
ret
push
mov
push
call
pushl
push
push
call
push
call
mov
pop
ret
push
mov
push
push
mov
push
mov
andl
movw
test
je
cmpw
push
jne
call
push
push
call
dec
jmp
call
mov
inc
lea
add
and
call
mov
push
push
push
pushl
xor
mov
push
push
call
push
push
call
test
mov
jne
call
lea
mov
pop
pop
pop
pop
ret
cmpw
mov
jne
cmpw
movw
jne
andw
jmp
orw
jmp
mov
movw
mov
ret
push
mov
cmpw
mov
jne
movw
jmp
cmpw
jne
cmpl
movw
jne
andw
jmp
orw
jmp
movw
mov
mov
pop
ret
mov
test
jne
mov
mov
cmp
jne
cmp
je
push
push
push
push
call
xor
cmpsb
inc
or
push
mov
pushl
push
call
cmc
push
call
mov
pop
ret
push
push
pushl
call
add
ret
push
mov
push
cmpw
push
push
push
ja
mov
push
pop
cmp
jb
cmp
ja
testb
jne
movzwl
mov
push
cltd
pop
idiv
test
jne
mov
mov
cltd
idiv
test
jne
cmpw
mov
jne
cmp
jne
mov
jmp
andl
xor
cmp
jb
movzwl
mov
movzwl
lea
sub
mov
add
cmp
jg
cmpw
ja
cmpw
ja
cmpw
ja
movzwl
mov
mov
cltd
idiv
mov
push
shr
add
mov
imul
add
mov
cltd
pop
idiv
sub
add
add
cmpw
ja
cmpl
je
dec
movzwl
movzwl
imul
add
sub
movzwl
imul
add
mov
mov
fildl
test
fmull
jge
fchs
fildl
mov
push
fadd
fstpl
pop
fstp
jmp
xor
pop
pop
pop
leave
ret
push
mov
push
mov
push
pushl
pushl
pushl
pushl
pushl
pushl
call
neg
sbb
inc
mov
pop
pop
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
movl
ret
push
push
call
push
mov
call
lea
mov
test
je
push
mov
call
test
je
mov
push
mov
call
jmp
push
call
pop
pop
ret
push
mov
push
push
push
push
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
jmp
pop
pop
pop
leave
ret
pop
pop
xchg
jmp
pop
pop
xchg
jmp
push
mov
push
push
push
push
push
mov
mov
movl
push
pushl
pushl
pushl
call
mov
mov
and
mov
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
push
push
push
cld
mov
xor
push
push
push
pushl
pushl
pushl
pushl
pushl
call
add
mov
pop
pop
pop
mov
mov
pop
ret
push
mov
sub
mov
andl
mov
mov
mov
movl
inc
mov
mov
mov
mov
lea
mov
pushl
push
pushl
call
mov
mov
mov
mov
leave
ret
push
mov
cld
mov
push
push
pushl
pushl
push
pushl
pushl
pushl
call
add
pop
ret
push
mov
sub
push
push
push
andl
movl
mov
mov
mov
mov
mov
mov
mov
mov
andl
andl
andl
andl
movl
mov
mov
mov
mov
lea
mov
movl
mov
mov
mov
mov
lea
push
mov
pushl
call
call
pop
pop
andl
cmpl
je
mov
mov
mov
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
push
push
push
cld
mov
mov
and
test
je
mov
movl
push
pop
jmp
push
mov
pushl
mov
pushl
mov
pushl
push
pushl
mov
pushl
pushl
call
add
mov
cmpl
jne
pushl
pushl
call
mov
mov
mov
jmp
push
pop
pop
pop
pop
pop
ret
push
mov
push
push
push
cmpl
push
mov
mov
mov
mov
mov
mov
jl
cmp
jne
call
mov
dec
lea
cmp
lea
jge
cmp
jle
cmp
jne
mov
decl
mov
mov
cmpl
jge
mov
mov
inc
mov
mov
mov
cmp
ja
cmp
jbe
call
lea
pop
pop
lea
pop
leave
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
push
call
pushl
call
mov
pop
mov
mov
sub
add
cmp
jae
push
call
add
push
pushl
call
add
test
jne
xor
jmp
mov
sub
mov
sar
lea
mov
mov
mov
addl
mov
call
mov
pop
ret
pushl
call
neg
sbb
pop
neg
dec
ret
push
call
test
pop
mov
jne
push
call
mov
pop
andl
mov
mov
ret
push
mov
cmpl
push
push
push
jne
pushl
pushl
call
pop
pop
jmp
push
call
mov
mov
pop
movzbw
movzbl
inc
mov
testb
je
mov
test
jne
andl
jmp
xor
inc
mov
mov
mov
movzbw
movzbl
inc
testb
je
mov
test
jne
xor
jmp
xor
inc
mov
mov
mov
cmp
jne
cmpw
je
jmp
push
call
cmp
pop
sbb
and
dec
jmp
push
call
pop
xor
pop
pop
pop
pop
ret
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
mov
push
or
testb
je
andl
jmp
push
call
push
call
push
mov
call
add
mov
pop
pop
ret
push
mov
push
or
testb
je
push
call
push
mov
call
pushl
call
add
test
jge
or
jmp
mov
test
je
push
call
andl
pop
andl
mov
pop
pop
ret
push
mov
push
pushl
call
pushl
pushl
pushl
pushl
call
pushl
mov
call
add
mov
pop
pop
ret
push
mov
push
push
push
push
mov
imul
mov
mov
test
mov
mov
jne
xor
jmp
mov
testw
je
mov
mov
jmp
movl
jmp
mov
testw
je
mov
test
je
cmp
mov
jb
mov
push
pushl
push
call
sub
sub
add
add
add
mov
jmp
cmp
jb
cmpl
mov
je
xor
divl
mov
sub
push
push
pushl
call
add
test
je
cmp
je
sub
add
jmp
push
call
cmp
pop
je
mov
mov
inc
decl
mov
cmpl
jne
mov
pop
pop
pop
leave
ret
orl
jmp
orl
mov
xor
sub
divl
jmp
push
call
mov
test
jne
pop
ret
push
push
pushl
pushl
pushl
call
push
mov
call
add
mov
pop
pop
ret
push
pushl
pushl
call
add
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
call
push
pop
cmp
jne
pushl
push
call
push
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
je
call
pop
ret
pushl
mov
push
call
pop
ret
push
call
pop
ret
push
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
pushl
pushl
pushl
pushl
call
pushl
mov
call
add
mov
pop
pop
ret
push
mov
push
push
push
push
mov
imul
mov
mov
test
mov
mov
jne
xor
jmp
mov
testw
je
mov
mov
jmp
movl
mov
and
je
mov
test
je
cmp
mov
jb
mov
push
pushl
pushl
call
sub
add
add
sub
add
jmp
cmp
jb
test
je
push
call
test
pop
jne
cmpl
je
mov
xor
divl
mov
sub
jmp
mov
push
pushl
pushl
call
add
cmp
je
add
sub
cmp
jb
mov
jmp
mov
push
movsbl
push
call
pop
cmp
pop
je
incl
mov
dec
mov
test
jg
movl
test
jne
mov
pop
pop
pop
leave
ret
orl
mov
jmp
mov
sub
xor
divl
jmp
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
cmp
jne
mov
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
je
jmp
push
call
pop
ret
cmp
jne
mov
test
je
lea
and
jmp
push
pop
mov
cmp
ja
push
call
pop
movl
mov
shr
push
call
pop
mov
orl
call
mov
test
jne
push
jmp
mov
push
call
pop
ret
mov
test
jne
push
pop
add
and
push
push
pushl
call
cmp
or
pop
pop
pop
leave
ret
call
call
mov
call
fnclex
ret
ret
mov
movl
mov
movl
movl
movl
mov
ret
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
cmp
jae
shld
shl
ret
mov
xor
and
shl
ret
xor
xor
ret
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
cmp
jae
shrd
shr
ret
mov
xor
and
shr
ret
xor
xor
ret
push
mov
sub
mov
push
mov
mov
lea
movl
push
lea
pushl
movl
push
call
add
decl
mov
js
mov
andb
jmp
lea
push
push
call
pop
pop
mov
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
test
je
mov
cmp
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jmp
push
call
pop
ret
cmp
jne
push
call
pop
movl
lea
push
lea
push
push
call
add
mov
test
je
push
pushl
pushl
call
add
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
push
call
mov
mov
pop
pop
pop
leave
ret
cmpl
jle
push
pushl
call
pop
pop
ret
mov
mov
mov
and
ret
cmpl
jle
push
pushl
call
pop
pop
ret
mov
mov
mov
and
ret
cmpl
jle
push
pushl
call
pop
pop
ret
mov
mov
mov
and
ret
push
xor
cmp
jne
mov
cmp
jl
cmp
jg
add
pop
ret
push
mov
push
push
call
je
sbb
pop
call
je
push
call
push
call
pop
push
pop
pushl
call
test
pop
mov
je
push
call
pop
jmp
push
call
mov
pop
pop
pop
ret
push
mov
push
cmpl
push
push
push
jne
mov
cmp
jl
cmp
jg
add
jmp
mov
mov
push
cmp
pop
jge
cmp
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
jne
mov
jmp
mov
mov
sar
movzbl
testb
je
andb
push
mov
mov
pop
jmp
andb
mov
mov
push
push
lea
push
push
push
lea
push
push
pushl
call
add
test
je
cmp
jne
movzbl
jmp
movzbl
movzbl
shl
or
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
mov
push
push
push
mov
mov
test
je
mov
test
je
mov
mov
mov
inc
cmp
je
test
je
mov
inc
cmp
je
test
jne
pop
pop
pop
xor
ret
mov
inc
cmp
jne
lea
mov
test
je
mov
add
cmp
jne
mov
test
je
mov
add
cmp
je
jmp
xor
pop
pop
pop
mov
jmp
lea
pop
pop
pop
ret
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
dec
dec
not
mov
pop
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
mov
cmp
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
push
pop
mov
add
and
mov
push
push
pushl
push
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
push
pop
add
and
mov
push
push
push
pushl
push
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
mov
mov
xor
push
call
pop
ret
cmp
jne
cmp
ja
cmp
jbe
add
and
jmp
push
pop
mov
mov
cmp
ja
push
call
pop
movl
lea
push
lea
push
push
call
add
mov
mov
test
je
cmp
jae
mov
shr
push
push
pushl
pushl
call
add
test
je
mov
mov
jmp
push
call
pop
mov
test
je
movzbl
shl
mov
cmp
jb
mov
push
pushl
pushl
call
push
pushl
pushl
call
add
mov
cmpl
jne
push
push
pushl
push
call
mov
test
je
movzbl
shl
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
pushl
call
add
jmp
push
push
push
pushl
push
call
mov
orl
call
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
mov
mov
push
call
pop
xor
ret
xor
cmp
ja
cmp
jne
push
pop
add
and
push
push
push
pushl
call
int3
cmp
jne
cmp
je
push
call
pop
test
jne
xor
mov
mov
pop
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
push
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
xor
mov
call
push
call
mov
call
mov
call
call
call
mov
lea
push
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
mov
add
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
push
call
ret
push
mov
push
movl
call
mov
pop
test
je
push
call
pop
push
call
pop
pop
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
int3
int3
int3
push
push
mov
push
mov
mov
mov
lea
push
ret
push
mov
test
je
push
call
inc
push
call
pop
test
pop
je
push
push
call
pop
pop
pop
ret
xor
pop
ret
int3
int3
int3
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
inc
inc
dec
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
dec
je
cmp
jne
dec
je
and
and
cmp
jne
dec
pop
pop
ret
push
mov
sub
mov
push
push
push
pop
mov
lea
rep
mov
mov
mov
lea
push
pushl
pushl
pushl
call
jno
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
mov
fiaddl
lock
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
outsl
fildl
pop
fildl
push
fildl
dec
fildl
inc
fildl
cmp
inc
add
inc
add
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
inc
add
fildl
mov
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
sub
inc
add
inc
add
inc
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
faddl
int3
faddl
aam
inc
add
faddl
in
inc
add
faddl
hlt
faddl
pop
fldl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
and
inc
add
fldl
cmp
inc
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
mov
cmpw
lea
je
mov
inc
inc
test
jne
sub
sar
dec
ret
push
mov
cmpl
push
push
jne
pushl
pushl
call
pop
pop
jmp
push
call
mov
pop
movzbw
test
je
movzbl
testb
je
mov
inc
test
je
movzwl
movzbl
shl
or
cmp
je
jmp
movzwl
cmp
je
inc
jmp
push
call
pop
xor
jmp
push
call
pop
lea
jmp
push
call
mov
pop
movzwl
sub
neg
sbb
not
and
pop
pop
pop
ret
push
mov
push
push
push
call
mov
pop
mov
cmpb
je
movzbl
mov
test
je
push
lea
pushl
push
push
push
push
push
pushl
call
add
test
je
mov
cmp
mov
jle
inc
mov
jmp
and
cmp
jne
movzbl
mov
inc
cmpb
jne
push
call
pop
mov
pop
pop
pop
ret
push
call
pop
xor
jmp
push
pushl
pushl
pushl
call
add
ret
push
mov
sub
push
andl
push
push
mov
mov
lea
mov
cmpl
jle
movzbl
push
push
call
pop
pop
jmp
mov
movzbl
mov
and
test
je
mov
inc
jmp
cmp
mov
jne
orl
jmp
cmp
jne
mov
inc
mov
mov
test
jl
cmp
je
cmp
jg
push
test
pop
jne
cmp
je
movl
jmp
mov
cmp
je
cmp
je
movl
jmp
mov
cmp
jne
cmp
jne
mov
cmp
je
cmp
jne
mov
inc
inc
mov
or
xor
divl
mov
mov
cmpl
movzbl
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
je
movsbl
sub
jmp
cmpl
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
je
movsbl
push
call
pop
mov
sub
cmp
jae
mov
orl
cmp
jb
jne
or
xor
divl
cmp
jbe
orl
jmp
imul
add
mov
mov
incl
mov
jmp
mov
decl
mov
test
jne
test
je
mov
mov
andl
jmp
test
mov
jne
test
jne
and
je
cmpl
ja
test
jne
cmp
jbe
call
testb
movl
je
orl
jmp
mov
and
neg
sbb
neg
add
mov
test
je
mov
mov
testb
je
mov
neg
mov
mov
jmp
mov
test
je
mov
xor
pop
pop
pop
leave
ret
push
pushl
pushl
pushl
call
add
ret
push
mov
push
mov
cmp
jbe
andw
push
xor
lea
stos
mov
mov
shr
cmpl
mov
pop
jne
xor
leave
ret
push
lea
pushl
pushl
push
lea
push
push
push
call
add
test
je
cmpw
jne
testb
je
push
pop
leave
ret
cmpl
jle
push
push
call
pop
pop
leave
ret
mov
mov
and
leave
ret
push
mov
push
mov
cmp
jbe
andw
push
xor
lea
stos
mov
mov
shr
cmpl
mov
pop
jne
xor
leave
ret
push
lea
pushl
pushl
push
lea
push
push
push
call
add
test
je
cmpw
jne
testb
je
push
pop
leave
ret
cmpl
jle
push
push
call
pop
pop
leave
ret
mov
mov
and
leave
ret
push
mov
cmpl
mov
push
push
push
je
mov
movb
inc
neg
jmp
mov
mov
mov
xor
divl
mov
mov
xor
divl
cmp
mov
jbe
add
jmp
add
mov
inc
test
ja
andb
dec
mov
mov
mov
mov
dec
inc
cmp
jb
pop
pop
pop
pop
ret
push
mov
xor
cmpl
jne
cmp
jge
push
pop
push
pushl
pushl
pushl
call
mov
add
pop
ret
push
pushl
pushl
pushl
call
mov
add
ret
mov
test
jge
neg
ret
mov
movzbl
mov
and
inc
test
je
inc
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
inc
add
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
jmp
inc
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sbb
inc
add
in
add
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
in
add
in
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
push
in
add
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
inc
add
in
add
in
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
xor
cmp
push
push
jne
pushl
pushl
call
pop
pop
jmp
pushl
mov
call
mov
push
sub
call
pop
add
pop
cmp
je
cmp
ja
cmp
mov
je
mov
sub
mov
cmp
je
cmp
jne
inc
cmp
jne
cmp
je
push
call
pop
mov
jmp
mov
jmp
xor
pop
pop
pop
pop
ret
push
mov
push
xor
cmp
jne
pushl
pushl
call
pop
pop
jmp
push
push
call
pop
mov
mov
movzbl
movzbl
testb
je
mov
inc
test
je
movzbl
shl
or
cmp
jne
lea
jmp
test
jmp
cmp
jne
mov
inc
test
jne
push
call
pop
mov
pop
pop
pop
ret
push
mov
sub
mov
push
pushl
mov
mov
lea
pushl
movl
movl
push
call
add
decl
mov
js
mov
andb
jmp
lea
push
push
call
pop
pop
mov
pop
leave
ret
mov
push
movzbl
testb
pop
setne
inc
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
xor
cmp
push
push
je
cmp
jne
pushl
pushl
pushl
call
add
jmp
push
call
decl
mov
mov
pop
movzbw
movzbl
inc
mov
testb
je
cmp
jne
movzbl
mov
testb
jne
mov
jmp
mov
test
jne
mov
jmp
xor
inc
mov
mov
mov
movzbw
movzbl
inc
testb
je
cmpl
je
mov
decl
test
jne
xor
jmp
xor
inc
mov
mov
mov
cmp
jne
cmpw
je
mov
decl
test
je
xor
jmp
push
call
cmp
pop
sbb
and
dec
jmp
push
call
pop
xor
pop
pop
pop
pop
ret
push
push
push
push
mov
cmpl
jle
movzbl
push
push
call
pop
pop
jmp
movzbl
mov
mov
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmpl
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
je
lea
lea
movzbl
inc
jmp
cmp
mov
jne
neg
pop
pop
pop
pop
ret
pushl
call
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
cmp
jbe
xor
jmp
mov
cmp
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
andl
cmp
ja
push
push
push
call
add
test
je
mov
orl
call
cmpl
jne
jmp
mov
push
call
pop
ret
cmp
jne
test
jne
push
pop
add
and
mov
push
call
pop
movl
lea
push
lea
push
mov
push
call
add
mov
test
je
andl
cmp
ja
shr
push
push
pushl
pushl
call
add
test
je
mov
push
lea
push
call
pop
pop
jmp
orl
call
cmpl
jne
jmp
mov
push
call
pop
ret
test
jne
push
pop
add
and
push
pushl
push
pushl
push
call
mov
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
cmp
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jmp
mov
push
call
pop
ret
cmp
jne
push
call
pop
movl
lea
push
lea
push
pushl
call
add
mov
test
je
movzbl
shl
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
mov
pop
pop
pop
leave
ret
mov
push
call
pop
ret
push
mov
sub
push
push
push
push
call
pushl
call
mov
pop
cmp
pop
mov
jne
xor
jmp
test
je
xor
mov
cmp
je
add
inc
cmp
jb
lea
push
push
call
push
add
jne
push
andl
pop
xor
mov
cmp
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
andl
push
pop
xor
mov
lea
rep
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
mov
orb
inc
cmp
jb
push
call
pop
mov
mov
jmp
andl
xor
mov
stos
stos
stos
jmp
cmpl
je
call
call
jmp
or
push
call
pop
mov
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
call
adc
movl
call
adc
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
push
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
mov
mov
push
mov
lea
mov
inc
inc
test
je
mov
mov
inc
inc
jmp
pop
ret
mov
push
push
mov
test
mov
je
mov
mov
mov
inc
inc
inc
inc
test
je
dec
jne
test
je
dec
je
xor
shr
rep
adc
rep
mov
pop
pop
ret
push
mov
push
mov
cmpl
jge
xor
jmp
call
mov
cmp
jle
cmp
jge
sub
mov
lea
push
call
cmpl
pop
mov
je
push
call
test
pop
je
mov
sub
lea
push
call
mov
pop
movl
jmp
push
call
mov
push
call
pop
test
mov
pop
je
sub
sub
push
push
mov
pop
cltd
mov
idiv
test
mov
jge
add
mov
sub
mov
mov
cltd
idiv
add
mov
cltd
idiv
pop
test
mov
jge
add
mov
sub
mov
push
cltd
idiv
pop
add
mov
cltd
idiv
test
mov
jge
add
mov
sub
mov
push
cltd
pop
idiv
mov
test
mov
jle
mov
push
add
pop
cltd
idiv
mov
mov
add
mov
add
mov
pop
pop
ret
jge
mov
push
lea
pop
cltd
idiv
mov
mov
add
mov
test
jg
add
decl
mov
movl
movl
jmp
push
call
mov
xor
mov
mov
cmp
je
add
inc
cmp
jb
cmp
jb
cmp
ja
call
movl
pop
ret
call
mov
pop
mov
ret
cmp
jb
cmp
ja
call
movl
pop
ret
call
movl
pop
ret
call
add
ret
call
add
ret
push
pushl
call
pop
pop
ret
push
mov
push
push
mov
mov
cmp
jl
cmp
jg
mov
test
jl
cmp
jle
push
mov
push
cltd
pop
idiv
push
add
mov
cltd
pop
pop
idiv
test
mov
jge
add
dec
mov
cmp
jl
cmp
jg
mov
test
mov
jne
cmp
jle
inc
lea
imul
sar
add
lea
mov
test
lea
jl
test
jl
test
jl
jmp
test
jge
test
jge
lea
shl
test
je
mov
cltd
idiv
xor
cmp
setne
mov
jmp
xor
test
jne
mov
test
lea
jl
test
jl
test
jl
jmp
test
jge
test
jge
mov
imul
test
je
mov
cltd
idiv
xor
cmp
setne
mov
jmp
xor
test
jne
mov
test
lea
jl
test
jl
test
jl
jmp
test
jge
test
jge
mov
imul
test
je
mov
cltd
idiv
xor
cmp
setne
mov
jmp
xor
test
jne
mov
test
lea
mov
jl
test
jl
test
jl
jmp
test
jge
test
jge
cmpl
je
call
mov
add
lea
push
call
test
pop
je
mov
test
jg
jge
cmpl
jle
mov
add
lea
push
call
pop
jmp
lea
push
call
test
pop
je
push
mov
mov
pop
rep
jmp
or
pop
pop
pop
ret
mov
push
push
push
mov
xor
call
test
mov
jge
xor
jmp
cmpl
jne
push
call
pop
mov
test
mov
je
mov
mov
mov
cltd
idiv
mov
imul
add
lea
mov
cmp
jl
sub
inc
cmp
jl
sub
mov
inc
cmp
jl
inc
sub
jmp
push
pop
mov
mov
cltd
mov
idiv
mov
mov
imul
add
test
jne
mov
mov
push
pop
lea
cmp
jge
inc
add
jmp
mov
dec
mov
push
sub
mov
mov
mov
mov
cltd
idiv
pop
push
add
cltd
idiv
mov
mov
mov
cltd
idiv
pop
mov
imul
add
mov
cltd
idiv
mov
imul
sub
andl
mov
mov
pop
pop
pop
ret
push
mov
push
mov
push
mov
cmp
je
call
mov
testb
je
cmpl
je
cmpl
jne
push
push
pushl
pushl
call
add
jmp
cmpl
je
cmpl
jne
cmp
jbe
mov
mov
test
je
movzbl
push
pushl
pushl
push
pushl
pushl
pushl
push
call
add
jmp
pushl
pushl
pushl
push
pushl
pushl
pushl
push
call
add
push
pop
pop
pop
pop
ret
push
mov
sub
mov
andb
mov
cmp
mov
jl
mov
cmp
jl
call
push
push
mov
mov
push
mov
cmp
jne
cmpl
jne
cmp
jne
cmpl
jne
call
cmpl
je
call
mov
call
mov
push
push
mov
movb
call
pop
test
pop
jne
call
cmp
jne
cmpl
jne
cmp
jne
cmpl
jne
call
cmp
jne
cmpl
jne
cmp
jne
mov
lea
push
lea
push
push
pushl
pushl
call
add
mov
mov
cmp
jae
cmp
jg
cmp
jg
mov
mov
mov
test
mov
jle
mov
mov
lea
mov
test
mov
jle
pushl
pushl
pushl
call
add
test
jne
decl
add
cmp
jg
decl
addl
cmpl
jg
jmp
pushl
pushl
pushl
push
pushl
pushl
pushl
pushl
pushl
pushl
push
call
add
mov
incl
add
jmp
cmpb
je
push
push
call
pop
pop
pop
pop
pop
leave
ret
cmpb
jne
pushl
pushl
pushl
pushl
pushl
pushl
pushl
push
call
add
jmp
jmp
push
mov
push
push
push
push
call
cmpl
je
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
add
test
jne
mov
lea
push
lea
push
push
pushl
pushl
call
add
mov
mov
cmp
jae
cmp
jl
cmp
jg
mov
mov
shl
add
mov
test
je
cmpb
jne
push
add
pushl
pushl
push
push
push
pushl
pushl
pushl
pushl
pushl
call
add
incl
add
jmp
pop
pop
leave
ret
push
push
mov
mov
test
je
cmpb
lea
je
mov
mov
cmp
je
add
push
push
call
pop
test
pop
jne
testb
je
testb
je
mov
mov
test
je
testb
je
test
je
testb
jne
xor
jmp
push
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
mov
cmp
je
cmp
jle
cmp
jl
call
andl
mov
mov
test
je
push
push
push
call
orl
jmp
pushl
call
pop
ret
mov
orl
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
cmpl
je
xor
ret
jmp
push
mov
cmpl
push
mov
push
push
mov
je
pushl
push
push
pushl
call
add
cmpl
pushl
jne
push
jmp
pushl
call
mov
pushl
pushl
pushl
push
call
mov
push
pushl
inc
mov
pushl
pushl
pushl
push
pushl
call
add
test
je
push
push
call
pop
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
mov
andl
mov
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
andl
movl
pushl
pushl
push
pushl
push
call
add
mov
andl
orl
call
mov
mov
mov
pop
pop
pop
leave
ret
pushl
call
pop
ret
mov
andl
push
lea
push
call
pop
pop
xor
jmp
mov
mov
mov
mov
call
mov
mov
call
mov
mov
cmpl
jne
cmpl
jne
cmpl
jne
cmpl
jne
cmpl
je
call
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
cmpl
jne
cmpl
jne
cmpl
jne
push
pop
ret
xor
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
mov
test
je
cmpb
je
mov
test
je
mov
lea
andl
testb
je
mov
push
pushl
call
pop
pop
test
je
push
push
call
pop
pop
test
je
mov
mov
mov
add
push
push
call
pop
pop
mov
jmp
mov
testb
je
mov
push
pushl
call
pop
pop
test
je
push
push
call
pop
pop
test
je
pushl
pushl
push
call
add
cmpl
jne
mov
test
je
add
push
jmp
cmpl
mov
push
pushl
jne
call
pop
pop
test
je
push
push
call
pop
pop
test
je
pushl
add
push
pushl
call
pop
pop
push
push
call
add
jmp
call
pop
pop
test
je
push
push
call
pop
pop
test
je
pushl
call
pop
test
je
testb
je
push
lea
push
pushl
call
pop
pop
push
pushl
push
call
jmp
lea
push
pushl
call
pop
pop
push
pushl
push
call
jmp
call
orl
mov
mov
pop
pop
pop
leave
ret
push
pop
ret
mov
jmp
push
mov
push
push
push
mov
push
mov
push
push
push
push
push
mov
mov
test
je
mov
mov
test
je
andl
push
pushl
call
orl
mov
mov
pop
pop
pop
leave
ret
xor
cmp
setne
ret
mov
jmp
mov
push
mov
mov
mov
add
test
jl
mov
mov
mov
add
add
pop
ret
push
mov
sub
push
push
mov
add
mov
mov
push
pushl
mov
mov
call
push
push
call
pop
pop
mov
pop
mov
push
mov
cmp
jne
mov
push
call
pop
pop
pop
leave
ret
push
call
call
ss
mov
je
push
push
call
mov
pop
test
pop
je
push
pushl
call
imul
add
call
orl
push
mov
pop
pop
ret
xor
pop
ret
mov
movl
movl
ret
push
push
push
call
pushl
mov
push
call
mov
test
jne
push
push
call
mov
pop
test
pop
je
push
pushl
push
call
test
je
push
call
pop
call
jle
dec
add
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
push
mov
push
push
push
mov
push
mov
push
push
push
push
push
mov
xor
mov
call
cmp
je
movl
call
call
mov
jmp
push
pop
ret
mov
andl
orl
call
jmp
push
mov
push
push
push
mov
push
mov
push
push
push
push
push
mov
andl
mov
test
je
movl
call
jmp
push
pop
ret
mov
andl
orl
call
jmp
push
pop
call
pushl
call
pushl
call
pushl
call
pushl
call
pop
ret
push
mov
mov
push
cmpl
lea
jne
push
push
call
mov
pop
test
jne
push
call
pop
push
call
cmpl
pop
push
jne
call
mov
jmp
call
pop
push
call
pop
pop
pushl
push
call
pop
pop
ret
push
mov
mov
pushl
call
sbb
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
inc
ret
mov
test
je
mov
inc
cmp
jne
inc
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
mov
push
push
test
pop
jne
mov
jmp
cmp
jge
mov
mov
push
push
call
pop
mov
test
pop
jne
push
push
mov
call
pop
mov
test
pop
jne
push
call
pop
xor
mov
mov
mov
add
add
cmp
jl
xor
mov
mov
mov
sar
and
mov
lea
mov
cmp
je
test
jne
orl
add
inc
cmp
jl
pop
ret
call
cmpb
je
jmp
ret
mov
mov
cmp
jb
cmp
ja
sub
sar
add
push
call
pop
ret
add
push
push
call
ret
mov
cmp
jge
add
push
call
pop
ret
mov
add
push
push
call
ret
mov
mov
cmp
jb
cmp
ja
sub
sar
add
push
call
pop
ret
add
push
push
call
ret
mov
cmp
jge
add
push
call
pop
ret
mov
add
push
call
or
push
mov
cmp
jae
mov
mov
sar
and
mov
lea
testb
je
push
push
call
push
call
push
mov
call
add
mov
pop
pop
ret
call
movl
call
andl
or
pop
ret
push
mov
push
push
call
cmp
pop
je
cmp
je
cmp
jne
push
call
push
mov
call
pop
cmp
pop
je
push
call
pop
push
push
call
test
jne
push
call
mov
jmp
xor
push
call
mov
and
sar
pop
mov
lea
andb
test
je
push
call
pop
or
jmp
xor
pop
pop
ret
push
mov
mov
test
je
test
je
pushl
call
andw
xor
pop
mov
mov
mov
pop
ret
push
mov
push
call
test
pop
je
or
pop
ret
testb
je
pushl
call
neg
pop
pop
sbb
ret
xor
pop
ret
push
push
mov
xor
push
mov
mov
and
cmp
jne
test
je
mov
mov
sub
test
jle
push
push
pushl
call
add
cmp
jne
mov
test
je
and
mov
jmp
orl
or
mov
andl
mov
pop
mov
pop
pop
ret
push
call
pop
ret
push
push
push
push
xor
xor
call
xor
pop
cmp
jle
mov
mov
test
je
testb
je
push
push
call
mov
pop
pop
mov
mov
test
je
cmpl
jne
push
call
cmp
pop
je
inc
jmp
cmpl
jne
test
je
push
call
cmp
pop
jne
or
mov
pushl
push
call
pop
pop
inc
cmp
jl
push
call
cmpl
pop
mov
je
mov
pop
pop
pop
ret
push
mov
mov
test
je
test
jne
test
je
or
mov
jmp
or
test
mov
jne
push
call
pop
jmp
mov
mov
pushl
pushl
pushl
call
add
mov
test
je
cmp
je
mov
test
jne
mov
push
cmp
je
mov
sar
and
mov
lea
lea
jmp
mov
mov
pop
and
cmp
jne
or
mov
cmpl
jne
mov
test
je
test
jne
movl
mov
dec
mov
movzbl
inc
mov
pop
ret
neg
sbb
and
add
or
andl
or
pop
ret
push
mov
cmp
jae
mov
mov
sar
and
mov
lea
testb
je
push
push
call
pushl
pushl
push
call
push
mov
call
add
mov
pop
pop
ret
call
movl
call
andl
or
pop
ret
push
mov
sub
andl
cmpl
push
mov
push
push
mov
je
mov
mov
and
sar
lea
mov
lea
shl
add
mov
test
jne
test
je
mov
cmp
je
decl
mov
mov
lea
movl
movb
lea
push
push
mov
pushl
push
pushl
push
call
test
jne
call
push
push
pop
cmp
jne
call
movl
call
mov
jmp
cmp
je
push
call
pop
or
jmp
mov
mov
add
lea
mov
test
je
test
je
cmpb
jne
or
jmp
and
mov
mov
mov
mov
add
cmp
mov
jae
mov
mov
cmp
je
cmp
je
mov
inc
incl
jmp
dec
cmp
jae
mov
inc
cmpb
jne
addl
jmp
movb
inc
mov
jmp
lea
push
push
incl
lea
push
push
mov
pushl
call
push
test
jne
call
movsl
test
jne
cmpl
je
mov
testb
je
mov
cmp
je
movb
mov
inc
mov
jmp
cmp
jne
cmpb
jne
movb
jmp
push
push
pushl
call
add
cmpb
je
movb
inc
mov
cmp
jb
jmp
mov
lea
mov
test
jne
or
mov
sub
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
push
push
push
push
mov
push
mov
xor
mov
mov
mov
cmp
je
cmp
je
cmp
jne
mov
jmp
xor
or
jmp
mov
or
push
pop
mov
inc
cmp
je
cmp
je
movsbl
cmp
jg
je
sub
je
sub
je
sub
je
dec
jne
cmp
jne
movl
or
jmp
cmp
jne
movl
or
jmp
test
jne
or
jmp
test
jne
and
and
or
or
jmp
mov
test
jne
or
jmp
sub
je
dec
je
sub
je
sub
jne
test
jne
or
jmp
cmp
jne
movl
and
jmp
cmp
jne
movl
or
jmp
test
je
xor
jmp
or
jmp
push
pushl
push
pushl
call
mov
add
cmp
jge
xor
jmp
mov
incl
mov
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
push
push
push
push
xor
xor
call
xor
cmp
pop
jle
mov
mov
cmp
je
testb
jne
push
push
call
pop
pop
mov
mov
testb
je
push
push
call
pop
pop
inc
cmp
jl
jmp
mov
jmp
push
shl
call
pop
mov
mov
mov
mov
cmp
je
add
push
push
call
mov
mov
add
push
push
call
mov
mov
cmp
je
orl
mov
mov
mov
mov
mov
push
call
pop
mov
pop
pop
pop
ret
push
mov
push
push
mov
mov
mov
test
je
test
jne
test
je
andl
test
je
mov
and
mov
mov
mov
andl
andl
and
or
test
mov
jne
cmp
je
cmp
jne
push
call
test
pop
jne
push
call
pop
testw
push
je
mov
mov
sub
lea
mov
mov
dec
test
mov
jle
push
push
push
call
add
mov
jmp
cmp
je
mov
mov
sar
and
mov
lea
lea
jmp
mov
testb
je
push
push
push
call
add
mov
mov
mov
jmp
push
lea
pop
push
push
push
call
add
mov
cmp
pop
je
orl
jmp
mov
and
jmp
or
mov
or
pop
pop
pop
ret
push
mov
cmp
jae
mov
mov
sar
and
mov
lea
testb
je
push
push
call
pushl
pushl
push
call
push
mov
call
add
mov
pop
pop
ret
call
movl
call
andl
or
pop
ret
push
mov
sub
push
push
push
xor
cmp
mov
mov
jne
xor
jmp
mov
sar
lea
mov
and
lea
mov
shl
testb
je
push
push
pushl
call
add
mov
add
testb
je
mov
cmp
mov
mov
jbe
lea
mov
sub
cmp
jae
mov
incl
mov
cmp
jne
incl
movb
inc
mov
inc
mov
lea
sub
cmp
jl
mov
lea
sub
lea
push
push
lea
push
push
mov
pushl
call
out
test
je
mov
add
cmp
jl
mov
sub
cmp
jb
xor
mov
cmp
jne
cmp
je
push
pop
cmp
jne
call
movl
call
mov
jmp
push
call
mov
jmp
lea
push
push
pushl
pushl
pushl
push
call
test
je
mov
mov
mov
jmp
push
call
mov
jmp
pushl
call
pop
or
jmp
mov
testb
je
mov
cmpb
je
call
movl
call
mov
jmp
sub
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
push
mov
push
andl
call
jmp
cmp
jne
mov
test
je
add
mov
mov
mov
mov
pop
ret
push
mov
mov
call
lea
push
push
movl
call
nop
test
je
cmpl
jne
cmpl
jb
push
pop
jmp
lea
push
push
push
call
rolb
add
add
fisttpl
cmp
je
mov
cmp
jl
cmp
jg
sub
mov
inc
cmp
jne
lea
push
push
push
call
add
test
jne
lea
jmp
lea
push
push
push
call
std
cmp
lea
je
mov
cmp
jl
cmp
jg
sub
mov
inc
cmp
jne
lea
push
lea
push
call
pop
pop
cmp
je
push
push
call
pop
cmp
pop
je
inc
mov
cmp
je
cmpb
jne
mov
jmp
inc
cmp
jne
push
push
push
call
add
cmp
je
cmp
je
cmp
je
lea
push
call
cmpb
pop
sbb
add
pop
leave
ret
xor
push
cmp
push
sete
push
call
testl
call
cmp
mov
jne
push
call
pop
jmp
cmp
jne
call
test
jne
pushl
call
xor
rol
add
push
push
pushl
push
call
test
mov
jne
ret
mov
andl
andl
push
mov
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
push
push
mov
mov
push
mov
add
sub
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
mov
lea
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
jae
mov
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
mov
shr
lea
not
and
decb
jne
mov
and
mov
mov
jmp
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
jae
mov
mov
shr
not
and
decb
jne
mov
and
jmp
lea
mov
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
call
outsl
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
adc
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
lds
je
addl
mov
mov
mov
push
push
lea
pushl
lea
push
call
cmp
mov
je
push
push
push
push
call
sbb
mov
jne
pushl
push
pushl
push
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
push
mov
mov
lea
sub
mov
and
shr
mov
imul
lea
mov
mov
dec
cmp
mov
mov
lea
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
jae
mov
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
lea
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
mov
sar
dec
mov
cmp
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
jae
mov
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
mov
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
push
pop
pop
pop
pop
leave
ret
cmpl
push
push
push
push
jne
mov
jmp
push
push
pushl
push
call
mov
test
je
pop
call
push
push
push
push
call
mov
test
je
push
mov
push
push
push
call
test
je
mov
cmp
jne
cmpl
jne
mov
cmpl
jne
mov
jmp
mov
mov
mov
mov
mov
mov
lea
lea
mov
lea
mov
mov
mov
xor
mov
xor
cmp
setge
dec
and
dec
inc
mov
mov
add
cmp
jl
push
push
push
call
add
mov
add
cmp
jae
orb
lea
mov
movl
add
jmp
mov
jmp
push
push
push
push
call
cmp
je
push
push
pushl
push
call
xor
pop
pop
pop
pop
ret
push
mov
push
push
pushl
call
call
inc
add
mov
mov
cmp
je
mov
mov
push
push
mov
mov
mov
mov
pushl
push
call
pop
ret
orl
pop
ret
push
mov
push
push
push
mov
push
cmpl
je
andl
lea
mov
cmpl
jne
mov
push
add
push
push
call
jns
shlb
decl
mov
test
je
cmp
jbe
mov
incl
decl
je
sub
sub
test
jge
cmpl
mov
mov
je
cmpl
jne
push
lea
pop
cmpl
jne
inc
add
cmp
jl
cmp
jne
push
call
pop
cmp
je
cmpl
jg
pop
pop
pop
leave
ret
mov
mov
push
mov
cmp
jbe
cmp
jb
mov
cmp
je
jmp
test
jne
mov
mov
and
cmp
jb
mov
mov
mov
mov
and
sub
mov
sub
pop
sar
lea
ret
xor
pop
ret
mov
mov
sub
sar
lea
mov
movzbl
add
andb
cmpl
movl
jne
incl
cmpl
jne
push
call
pop
ret
push
mov
push
push
push
push
mov
push
mov
cmp
je
mov
lea
mov
sub
sub
sar
shl
add
cmp
mov
jae
mov
mov
cmp
jl
cmp
jbe
push
push
push
call
add
test
jne
mov
mov
add
lea
add
cmp
mov
jb
jmp
mov
mov
mov
lea
mov
cmp
mov
jae
mov
cmp
jl
cmp
jbe
push
push
pushl
call
add
test
jne
mov
addl
add
cmp
jb
jmp
mov
mov
cmp
je
jmp
mov
sub
mov
jmp
mov
mov
cmpl
je
cmpl
jne
mov
cmp
je
jmp
mov
andl
mov
mov
sub
sub
sar
shl
add
cmpl
jne
cmpl
jge
add
incl
cmpl
je
mov
push
shl
push
push
push
mov
push
call
cmp
jne
push
pushl
push
call
mov
add
test
mov
jle
lea
mov
orb
lea
mov
mov
mov
mov
movl
add
add
decl
jne
mov
lea
cmp
jae
cmpl
je
add
jmp
cmp
sbb
and
mov
mov
mov
mov
sub
sub
lea
lea
mov
jmp
call
test
je
mov
mov
lea
mov
mov
mov
sub
mov
movzbl
sub
lea
jmp
xor
pop
pop
pop
leave
ret
push
mov
push
mov
mov
push
push
mov
push
mov
lea
cmp
mov
mov
mov
jb
lea
mov
cmp
jae
add
sub
jmp
andl
lea
mov
lea
jmp
add
cmpb
je
mov
lea
cmp
jae
mov
test
jne
push
lea
pop
cmpb
jne
inc
inc
jmp
cmp
jae
cmp
jne
mov
jmp
sub
cmp
jb
mov
mov
jmp
movzbl
add
lea
cmp
jb
lea
cmp
jae
lea
cmp
jae
mov
test
jne
push
lea
pop
cmpb
jne
inc
inc
jmp
lea
cmp
jae
sub
mov
mov
jmp
andl
lea
mov
mov
add
jmp
cmp
jae
sub
cmp
jb
mov
jmp
movzbl
add
jmp
lea
cmp
jae
sub
mov
mov
jmp
andl
lea
mov
mov
lea
imul
shl
sub
jmp
xor
pop
pop
pop
leave
ret
push
mov
push
mov
push
mov
push
movzbl
push
mov
andl
mov
sub
sar
cmp
lea
jbe
mov
sub
mov
add
movl
jmp
jae
mov
lea
lea
cmp
ja
lea
cmp
jae
cmpb
jne
inc
jmp
cmp
jne
mov
mov
mov
cmp
ja
cmp
jbe
lea
cmp
jae
xor
mov
cmp
jne
inc
cmpb
je
mov
jmp
andl
lea
mov
sub
add
movl
mov
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
push
push
call
pop
pop
ret
push
mov
sub
fldl
fstpl
fldl
fstpl
fldl
fdivl
fmull
fsubrl
fstpl
fldl
fcompl
fnstsw
sahf
jbe
push
pop
leave
ret
xor
leave
ret
push
call
cmp
sbb
inc
dec
add
dec
test
je
push
call
ret
jmp
push
mov
movsbl
push
call
cmp
pop
je
inc
cmpl
jle
movsbl
push
push
call
pop
pop
jmp
movsbl
mov
mov
and
test
jne
mov
mov
mov
inc
mov
mov
mov
mov
inc
test
jne
pop
ret
mov
mov
mov
test
je
cmp
je
mov
inc
test
jne
mov
inc
test
je
mov
test
je
cmp
je
cmp
je
inc
jmp
mov
dec
cmpb
je
cmp
jne
dec
mov
inc
inc
test
mov
jne
ret
mov
fldl
fcompl
fnstsw
sahf
jb
push
pop
ret
xor
ret
push
mov
push
push
cmpl
pushl
je
lea
push
call
mov
pop
pop
mov
mov
mov
mov
leave
ret
lea
push
call
mov
pop
pop
mov
mov
leave
ret
push
mov
sub
lea
push
push
lea
push
mov
push
push
fldl
fstpl
call
mov
lea
push
mov
lea
push
xor
cmpl
sete
xor
test
setg
add
add
push
call
lea
push
push
pushl
push
pushl
call
mov
add
pop
leave
ret
push
mov
push
xor
cmp
push
mov
push
mov
je
xor
cmp
setg
push
xor
cmpl
sete
add
push
call
pop
pop
cmpl
mov
jne
movb
lea
cmp
jle
mov
lea
mov
mov
mov
mov
xor
cmp
push
sete
add
add
push
call
cmp
pop
pop
mov
je
movb
mov
inc
cmpb
je
mov
dec
jns
neg
movb
inc
cmp
jl
mov
push
cltd
pop
idiv
add
mov
cltd
idiv
mov
inc
cmp
jl
mov
push
cltd
pop
idiv
add
mov
cltd
idiv
mov
add
mov
pop
pop
pop
pop
ret
push
mov
sub
lea
push
push
lea
push
mov
push
push
fldl
fstpl
call
mov
lea
push
mov
add
push
xor
cmpl
sete
add
push
call
lea
push
push
push
pushl
call
mov
add
pop
leave
ret
push
mov
push
push
mov
mov
push
mov
dec
cmpb
je
cmp
jne
xor
cmpl
sete
add
add
mov
movb
andb
cmpl
mov
jne
movb
lea
mov
test
jg
push
push
call
pop
movb
pop
inc
jmp
add
cmpl
jle
push
push
call
mov
pop
mov
mov
inc
pop
test
jge
cmpb
je
neg
jmp
neg
cmp
jl
mov
pushl
push
call
pushl
push
push
call
add
pop
mov
pop
pop
pop
ret
push
mov
sub
push
push
lea
push
push
lea
push
mov
push
push
fldl
fstpl
call
mov
mov
lea
xor
cmpl
sete
add
mov
lea
push
push
push
call
mov
add
dec
cmp
setl
cmp
jl
cmp
jge
test
je
mov
inc
test
jne
and
lea
push
push
push
pushl
call
add
jmp
lea
push
push
pushl
push
pushl
call
add
pop
pop
pop
leave
ret
push
mov
cmpl
je
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
add
pop
ret
pushl
pushl
pushl
pushl
call
jmp
pushl
pushl
pushl
pushl
call
add
pop
ret
push
mov
test
je
push
mov
push
call
inc
push
push
add
push
call
add
pop
pop
ret
push
mov
sub
push
push
mov
xor
push
mov
mov
inc
test
mov
mov
mov
je
mov
mov
jmp
mov
mov
mov
cmpl
jl
cmp
jl
cmp
jg
movsbl
mov
and
jmp
xor
movsbl
sar
cmp
mov
ja
jmp
xor
orl
mov
mov
mov
mov
mov
mov
jmp
movsbl
sub
je
sub
je
sub
je
dec
dec
je
sub
jne
orl
jmp
orl
jmp
orl
jmp
orb
jmp
orl
jmp
cmp
jne
lea
push
call
test
pop
mov
jge
orl
neg
mov
jmp
mov
movsbl
lea
lea
jmp
andl
jmp
cmp
jne
lea
push
call
test
pop
mov
jge
orl
jmp
mov
movsbl
lea
lea
mov
jmp
cmp
je
cmp
je
cmp
je
cmp
jne
or
jmp
orl
jmp
orl
jmp
cmpb
jne
cmpb
jne
inc
inc
orb
mov
jmp
andl
mov
andl
movzbl
testb
je
lea
push
pushl
movsbl
push
call
mov
add
inc
mov
lea
push
pushl
movsbl
push
call
add
jmp
movsbl
cmp
jg
cmp
jge
cmp
jg
je
sub
je
dec
dec
je
dec
dec
je
sub
jne
testw
jne
or
cmpl
mov
je
mov
lea
push
call
testw
pop
mov
mov
je
test
jne
mov
mov
movl
mov
mov
dec
test
je
cmpw
je
inc
inc
jmp
movl
add
orl
cmpl
lea
mov
jge
movl
jmp
testw
jne
or
testw
lea
push
je
call
push
lea
push
call
add
mov
test
jge
movl
jmp
sub
je
sub
je
dec
je
jmp
call
pop
mov
movl
lea
mov
jmp
lea
push
call
test
pop
je
mov
test
je
test
je
movswl
shr
mov
mov
movl
jmp
andl
mov
movswl
jmp
mov
mov
push
jmp
jne
cmp
jne
movl
jmp
cmp
jle
mov
cmpl
jle
mov
add
push
call
test
pop
mov
je
mov
mov
jmp
movl
mov
pushl
add
mov
pushl
mov
mov
mov
mov
movsbl
push
lea
push
push
call
mov
add
and
je
cmpl
jne
push
call
pop
cmp
jne
test
jne
push
call
pop
cmpb
jne
orb
inc
mov
push
call
pop
jmp
sub
je
sub
je
dec
je
dec
je
sub
je
dec
dec
je
sub
jne
movl
jmp
sub
sar
jmp
test
jne
mov
mov
mov
mov
dec
test
je
cmpb
je
inc
jmp
sub
jmp
movl
movl
testb
movl
je
mov
movb
add
movl
mov
jmp
testb
movl
je
or
jmp
lea
push
call
testb
pop
je
mov
mov
jmp
mov
mov
movl
jmp
orl
movl
testb
je
lea
push
call
pop
jmp
testb
je
testb
lea
push
je
call
pop
movswl
cltd
jmp
call
pop
movzwl
jmp
testb
lea
push
je
call
pop
jmp
call
pop
xor
testb
je
test
jg
jl
test
jae
neg
adc
mov
neg
orb
mov
jmp
mov
mov
testb
jne
andl
cmpl
jge
movl
jmp
andl
mov
cmp
jle
mov
mov
or
jne
andl
lea
mov
mov
decl
test
jg
mov
or
je
mov
cltd
mov
mov
push
push
pushl
pushl
call
push
push
pushl
mov
add
pushl
call
cmp
mov
mov
jle
add
mov
decl
mov
jmp
lea
sub
incl
testb
mov
je
mov
cmpb
jne
test
jne
decl
inc
mov
movb
mov
cmpl
jne
mov
test
je
test
je
movb
jmp
test
je
movb
jmp
test
je
movb
movl
mov
sub
sub
test
jne
lea
push
pushl
push
push
call
add
lea
push
lea
pushl
pushl
push
call
add
test
je
test
jne
lea
push
pushl
push
push
call
add
cmpl
je
cmpl
jle
mov
mov
lea
mov
inc
push
lea
push
inc
call
pop
test
pop
jle
lea
push
pushl
push
lea
push
call
add
mov
dec
test
jne
jmp
lea
push
pushl
pushl
pushl
call
add
testb
je
lea
push
pushl
push
push
call
add
cmpl
je
pushl
call
andl
pop
mov
mov
inc
test
mov
jne
mov
pop
pop
pop
leave
ret
push
daa
inc
add
and
inc
add
inc
add
es
add
es
add
inc
add
in
mov
decl
js
mov
mov
mov
incl
movzbl
jmp
push
pushl
call
pop
pop
cmp
mov
jne
orl
pop
ret
incl
pop
ret
push
push
mov
mov
dec
test
jle
mov
push
pushl
pushl
call
add
cmpl
je
mov
dec
test
jg
pop
pop
ret
push
mov
mov
dec
push
push
test
jle
mov
mov
movsbl
push
inc
pushl
push
call
add
cmpl
je
mov
dec
test
jg
pop
pop
pop
ret
mov
addl
mov
mov
ret
mov
addl
mov
mov
mov
ret
mov
addl
mov
mov
ret
push
mov
push
mov
lea
cmp
ja
mov
movzwl
jmp
mov
push
mov
sar
movzbl
testb
pop
je
andb
mov
mov
push
jmp
andb
mov
push
pop
lea
push
push
push
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
xor
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
push
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
filds
jge
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
xchg
test
decl
decl
inc
and
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
inc
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
push
mov
push
push
push
call
mov
pushl
pushl
call
pop
test
pop
je
mov
test
mov
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
shl
mov
add
andl
mov
mov
inc
add
cmp
jl
mov
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
xor
leave
ret
mov
mov
push
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
lea
cmp
jae
cmp
je
xor
pop
pop
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
or
add
add
add
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
call
dec
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
sbb
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
call
ss
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
insb
mov
jmp
cmp
jne
cmp
jne
call
cmp
cmp
pop
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
push
mov
sub
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
andl
movb
mov
add
add
jmp
lea
push
call
shll
jge
add
test
add
add
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
andl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
hlt
test
je
mov
mov
sar
and
mov
lea
lea
mov
mov
mov
mov
mov
addl
inc
inc
cmp
jl
xor
mov
lea
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
push
call
mov
cmp
je
push
call
pop
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
push
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jb
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
testl
ljmp
mov
add
iret
add
add
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
sub
call
pop
leave
ret
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
imul
mov
mov
cmp
ja
xor
cmp
jne
push
pop
add
and
mov
jmp
xor
mov
cmp
ja
mov
cmp
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
orl
call
cmp
je
pushl
jmp
xor
mov
push
call
pop
ret
cmp
jne
cmp
ja
push
call
pop
movl
mov
shr
push
call
pop
mov
orl
call
cmp
je
push
push
pushl
call
add
cmp
jne
push
push
pushl
push
call
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
push
call
pop
ret
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
mov
cmpl
jne
cmpl
jne
cmpl
jne
jmp
mov
test
je
push
call
test
pop
je
push
call
jmp
xor
pop
ret
push
push
call
mov
ret
pushl
push
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
inc
bts
jmp
mov
mov
or
je
inc
bt
jae
lea
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
xor
or
repnz
cmp
je
dec
dec
cmp
jae
mov
mov
mov
mov
inc
dec
jmp
mov
pop
pop
leave
ret
push
xor
cmp
jne
mov
cmp
jl
cmp
jg
sub
pop
ret
push
mov
push
push
push
call
cmp
push
call
je
push
call
push
call
pop
push
pop
pushl
call
test
pop
mov
je
push
call
pop
jmp
push
call
mov
pop
pop
pop
ret
push
mov
push
cmpl
push
jne
mov
cmp
jl
cmp
jg
sub
jmp
mov
cmp
jge
cmpl
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
jne
mov
jmp
mov
mov
sar
movzbl
testb
je
andb
mov
mov
push
jmp
andb
mov
push
pop
lea
push
push
push
push
push
lea
push
push
pushl
call
add
test
je
cmp
jne
movzbl
jmp
movzbl
movzbl
shl
or
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
sbb
shlb
jmp
lea
push
push
push
push
push
call
leave
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
fucomp
add
rorb
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
div
mov
xor
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
xchg
mull
add
jb
cmp
ja
jb
cmp
jbe
sub
sbb
sub
sbb
neg
neg
sbb
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
inc
bts
jmp
mov
or
nop
inc
mov
or
je
inc
bt
jb
mov
add
pop
leave
ret
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
inc
bts
jmp
mov
or
nop
inc
mov
or
je
inc
bt
jae
mov
add
pop
leave
ret
int3
int3
push
mov
push
mov
xor
or
repnz
inc
neg
dec
mov
std
repnz
inc
cmp
je
xor
jmp
mov
cld
pop
leave
ret
cmpl
jne
push
call
cmpl
pop
jne
call
incl
push
call
pop
ret
push
mov
push
push
push
push
push
push
pop
xor
push
mov
call
orl
orl
mov
movl
call
mov
pop
cmp
jne
push
call
movl
call
mov
clc
decl
test
push
xchg
inc
add
add
cmp
cmp
push
pop
mov
mov
je
mov
imul
add
mov
cmp
je
mov
cmp
je
sub
mov
imul
mov
jmp
mov
mov
lea
call
push
push
push
push
mov
pushl
push
push
push
pushl
call
test
je
cmp
jne
mov
andb
jmp
mov
andb
lea
push
push
push
pushl
push
push
push
pushl
call
test
je
cmp
jne
mov
andb
jmp
cmpb
je
mov
cmp
je
push
push
call
pop
test
pop
je
pushl
call
push
call
inc
push
call
add
cmp
mov
je
push
push
call
push
call
push
push
pushl
call
mov
add
add
andb
cmpb
jne
movl
inc
push
call
pop
mov
mov
imul
mov
mov
cmp
je
cmp
jl
cmp
jg
inc
jmp
cmpb
jne
inc
push
call
imul
pop
mov
add
mov
mov
cmp
jl
cmp
jg
inc
jmp
cmpb
jne
inc
push
call
pop
mov
add
mov
mov
cmp
jl
cmp
jg
inc
jmp
cmpl
je
neg
mov
movsbl
test
mov
je
push
push
pushl
call
mov
add
andb
jmp
mov
andb
jmp
push
call
pop
pop
pop
pop
leave
ret
push
push
call
pushl
call
push
mov
call
add
mov
pop
ret
push
push
push
xor
cmp
jne
xor
jmp
mov
push
pop
mov
cmp
jne
cmp
je
cmp
je
movzwl
push
cmp
movzwl
push
movzwl
push
movzwl
push
jne
movzwl
push
push
movzwl
push
movzwl
push
push
push
jmp
movzwl
push
push
movzwl
push
push
push
push
push
call
movzwl
add
cmp
push
movzwl
push
movzwl
push
movzwl
push
jne
movzwl
push
push
movzwl
push
movzwl
push
pushl
push
push
call
add
jmp
movzwl
push
push
movzwl
push
push
pushl
push
jmp
push
push
push
push
push
push
push
push
push
push
push
call
push
push
push
push
push
push
push
push
pushl
push
push
call
add
mov
mov
mov
cmp
jge
cmp
jl
cmp
jg
cmp
jle
cmp
jge
mov
pop
pop
pop
ret
cmp
jl
cmp
jg
cmp
jle
cmp
jl
mov
imul
add
imul
add
imul
cmp
jne
xor
cmp
setge
mov
jmp
xor
cmp
setl
jmp
push
mov
cmpl
push
mov
push
jne
mov
mov
andl
mov
jne
shl
mov
jmp
shl
mov
mov
lea
imul
lea
push
sar
mov
push
add
lea
pop
cltd
idiv
mov
pop
cmp
jg
imul
sub
add
lea
jmp
imul
sub
add
add
cmpl
jne
cmpl
jne
mov
jmp
mov
cmp
jle
sub
jmp
mov
test
jne
mov
jmp
mov
add
cmpl
jne
mov
mov
imul
add
mov
imul
add
imul
add
mov
jmp
mov
mov
imul
add
imul
add
add
imul
add
mov
jns
add
dec
mov
jmp
mov
cmp
jl
sub
inc
mov
mov
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
lea
cmpl
jne
mov
mov
or
je
mov
inc
mov
inc
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
jmp
lock
cmpl
jg
push
jmp
lock
push
call
movl
mov
xor
nop
or
je
mov
inc
mov
inc
cmp
je
push
push
call
mov
add
call
add
cmp
je
sbb
sbb
mov
pop
or
jne
lock
jmp
push
call
add
mov
pop
pop
pop
leave
ret
push
push
pop
pushl
pushl
call
sbb
testb
add
je
or
je
or
call
test
je
xor
mov
pop
ret
push
push
pop
pushl
push
call
test
je
xor
mov
pop
ret
push
call
push
call
pop
pop
push
call
push
push
push
xor
call
pop
push
pop
cmp
jle
push
mov
mov
shl
mov
test
je
testb
je
push
call
cmp
pop
je
inc
cmp
jl
mov
mov
add
push
push
call
mov
pushl
call
mov
pop
andl
inc
cmp
jl
pop
push
call
pop
mov
pop
pop
ret
push
push
push
push
push
push
push
or
call
xor
pop
mov
mov
mov
mov
test
je
lea
cmp
jae
testb
jne
cmpl
jne
push
call
cmpl
pop
jne
lea
push
push
call
incl
push
call
pop
lea
push
push
call
testb
je
push
call
and
inc
add
add
add
movsl
orl
mov
sub
push
pop
cltd
idiv
mov
add
cmp
jne
mov
addl
add
inc
cmp
mov
jl
jmp
mov
push
call
test
pop
je
addl
lea
lea
mov
cmp
jae
andb
orl
andl
movb
mov
add
add
jmp
shl
mov
push
call
pop
push
call
pop
mov
pop
pop
pop
pop
pop
pop
ret
mov
push
cmp
push
jae
mov
sar
lea
mov
and
lea
mov
shl
cmpl
jne
cmpl
push
mov
jne
sub
je
dec
je
dec
jne
push
push
jmp
push
push
jmp
push
push
push
call
mov
mov
xor
pop
jmp
call
movl
call
andl
or
pop
pop
ret
mov
push
cmp
push
jae
mov
sar
lea
mov
and
lea
mov
shl
add
testb
je
cmpl
je
cmpl
jne
xor
sub
je
dec
je
dec
jne
push
push
jmp
push
push
jmp
push
push
call
jle
pop
orl
xor
jmp
call
movl
call
andl
or
pop
pop
ret
mov
cmp
jae
mov
and
sar
lea
mov
testb
lea
je
mov
ret
call
movl
call
andl
or
ret
mov
push
mov
and
sar
push
push
mov
lea
lea
shl
add
cmpl
jne
push
call
cmpl
pop
jne
lea
push
push
call
incl
push
call
pop
mov
lea
push
call
fistps
pop
ret
mov
mov
and
sar
lea
mov
lea
push
call
push
ret
push
mov
cmp
push
push
jae
mov
sar
lea
mov
and
lea
mov
shl
testb
je
push
call
mov
pop
testb
je
push
call
pop
push
push
call
test
jne
push
call
mov
jmp
xor
test
je
call
mov
call
movl
or
push
call
pop
mov
jmp
call
movl
or
pop
pop
pop
ret
incl
push
call
pop
mov
test
mov
je
orl
movl
jmp
orl
lea
mov
movl
mov
andl
mov
ret
push
mov
cmp
jae
mov
mov
sar
and
mov
lea
testb
je
push
push
call
pushl
pushl
push
call
push
mov
call
add
mov
pop
pop
ret
call
movl
call
andl
or
pop
ret
push
mov
push
push
call
cmp
pop
jne
call
movl
jmp
pushl
push
pushl
push
call
cld
mov
cmp
jne
push
call
jmp
xor
test
je
push
call
pop
or
jmp
mov
and
sar
mov
mov
lea
andb
lea
mov
pop
pop
ret
push
mov
sub
mov
push
xor
push
test
push
movl
mov
je
mov
movb
jmp
andb
movl
mov
test
jne
test
jne
cmp
je
orb
push
mov
pop
and
sub
je
dec
je
dec
jne
movl
jmp
movl
jmp
movl
mov
cmp
je
cmp
je
cmp
je
cmp
jne
mov
jmp
movl
jmp
movl
jmp
mov
mov
mov
and
mov
cmp
jg
je
cmp
je
cmp
je
cmp
je
cmp
jne
movl
jmp
movl
jmp
mov
jmp
cmp
je
cmp
je
cmp
je
call
movl
call
mov
or
jmp
movl
jmp
movl
mov
mov
test
je
mov
not
and
test
jne
push
pop
test
je
or
orb
test
je
or
test
je
or
jmp
test
je
or
call
mov
or
cmp
jne
call
movl
call
andl
mov
jmp
push
push
pushl
lea
push
pushl
pushl
pushl
push
call
mov
cmp
jne
push
call
push
call
pop
mov
jmp
push
call
mov
call
lahf
jmp
cmp
jne
orb
jmp
cmp
jne
orb
push
push
call
mov
pop
sar
pop
mov
lea
mov
or
and
mov
lea
mov
shl
andb
mov
jne
test
je
testb
je
push
push
push
call
add
cmp
mov
jne
call
cmpl
je
push
call
pop
or
jmp
andb
lea
push
push
push
call
add
test
jne
cmpb
jne
pushl
push
call
pop
cmp
pop
je
push
push
push
call
add
cmp
je
cmpb
jne
testb
je
mov
orb
lea
mov
push
call
pop
mov
pop
pop
pop
leave
ret
mov
cmp
jb
xor
ret
mov
and
sar
lea
mov
mov
and
ret
push
mov
push
push
fstcw
pushl
call
mov
mov
not
and
mov
and
or
push
call
pop
mov
pop
fldcw
mov
pop
leave
ret
mov
and
push
pushl
call
pop
pop
ret
push
mov
xor
push
test
push
je
push
pop
test
je
or
test
je
or
test
je
or
test
je
or
test
je
or
movzwl
push
mov
mov
mov
and
mov
je
cmp
je
cmp
je
cmp
jne
or
jmp
or
jmp
or
and
pop
je
cmp
jne
or
jmp
or
pop
pop
test
pop
je
or
ret
push
mov
xor
push
test
je
push
pop
test
je
or
test
je
or
test
je
or
test
je
or
test
je
or
mov
mov
and
mov
je
cmp
je
cmp
je
cmp
jne
or
jmp
or
jmp
or
mov
and
je
cmp
jne
or
jmp
or
pop
test
pop
je
or
ret
mov
push
push
cltd
pop
idiv
push
mov
mov
cltd
idiv
pop
mov
sub
or
shl
not
test
jne
inc
cmp
jge
lea
cmpl
jne
inc
add
cmp
jl
push
pop
pop
ret
xor
pop
ret
mov
push
push
push
push
mov
cltd
pop
idiv
mov
mov
cltd
idiv
lea
push
push
pop
push
pop
sub
shl
push
pushl
call
add
dec
js
lea
test
je
push
push
pushl
call
add
dec
sub
test
jge
pop
pop
pop
ret
push
mov
push
push
mov
push
push
push
lea
push
pop
andl
lea
push
mov
pop
cltd
idiv
push
mov
mov
cltd
idiv
mov
pop
push
mov
lea
mov
sub
pop
mov
shl
test
je
inc
push
pushl
call
pop
test
pop
jne
push
pushl
call
pop
mov
pop
mov
or
mov
shl
push
pop
and
mov
inc
cmp
jge
mov
sub
lea
xor
rep
mov
pop
pop
pop
leave
ret
mov
mov
push
push
sub
pop
mov
mov
add
dec
jne
pop
ret
push
mov
xor
stos
stos
stos
pop
ret
mov
xor
cmpl
jne
inc
add
cmp
jl
push
pop
ret
xor
ret
push
mov
sub
mov
push
push
push
push
mov
pop
or
cltd
mov
movl
idiv
mov
mov
cltd
idiv
andl
mov
shl
sub
not
mov
mov
and
mov
mov
shr
or
mov
mov
mov
add
shl
decl
mov
jne
mov
push
pop
mov
push
pop
shl
cmp
jl
mov
mov
sub
mov
mov
jmp
mov
andl
dec
sub
jns
pop
pop
pop
leave
ret
push
mov
sub
mov
push
push
push
movzwl
mov
and
mov
mov
mov
mov
movzwl
mov
and
sub
mov
shl
cmp
mov
jne
lea
xor
push
call
test
pop
jne
lea
push
call
pop
push
pop
jmp
lea
push
lea
push
call
pushl
lea
push
call
add
test
je
inc
mov
mov
sub
cmp
jge
lea
push
call
pop
jmp
cmp
jg
sub
mov
lea
push
lea
push
call
lea
push
push
call
pushl
lea
push
call
mov
inc
push
lea
push
call
add
xor
jmp
cmp
jl
lea
push
call
pushl
orb
lea
push
call
mov
add
add
push
jmp
pushl
mov
andb
lea
push
add
call
pop
pop
xor
push
pop
sub
mov
shl
mov
neg
sbb
and
or
or
cmp
jne
mov
mov
mov
mov
jmp
cmp
jne
mov
mov
pop
pop
pop
leave
ret
push
pushl
pushl
call
add
ret
push
pushl
pushl
call
add
ret
push
mov
sub
xor
push
push
push
push
pushl
lea
push
lea
push
call
pushl
lea
push
call
add
leave
ret
push
mov
sub
xor
push
push
push
push
pushl
lea
push
lea
push
call
pushl
lea
push
call
add
leave
ret
push
mov
mov
push
mov
push
mov
mov
push
lea
movb
test
mov
jle
mov
xor
mov
test
je
movsbl
inc
jmp
push
pop
mov
inc
decl
jne
mov
andb
test
jl
cmpb
jl
dec
cmpb
jne
movb
jmp
incb
cmpb
jne
incl
jmp
push
call
inc
push
push
push
call
add
pop
pop
pop
pop
ret
push
mov
sub
push
lea
push
push
lea
push
call
pop
lea
pop
lea
push
push
push
sub
mov
movsl
movsl
movsw
call
mov
mov
mov
movsbl
mov
movswl
mov
lea
push
push
call
add
mov
mov
pop
pop
leave
ret
push
mov
push
mov
push
push
push
mov
mov
mov
and
shr
and
mov
mov
mov
movzwl
mov
and
test
mov
je
cmp
je
lea
jmp
mov
jmp
xor
cmp
jne
cmp
jne
mov
mov
mov
mov
jmp
lea
mov
mov
shr
shl
or
mov
or
shl
mov
mov
test
jne
mov
add
mov
shr
or
lea
mov
mov
add
mov
jmp
mov
or
mov
pop
pop
pop
leave
ret
push
call
pop
ret
push
mov
push
push
mov
push
push
push
call
pop
call
xor
cmp
je
push
call
push
call
pop
push
pop
pushl
pushl
call
pop
mov
test
pop
je
push
call
pop
jmp
push
call
mov
pop
pop
pop
pop
ret
push
mov
mov
test
jne
pop
ret
cmpl
jne
mov
cmp
ja
push
mov
pop
pop
ret
lea
andl
push
push
pushl
push
lea
push
push
push
pushl
call
nop
test
je
cmpl
je
call
movl
or
pop
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
xor
cmp
push
push
jne
push
call
fmull
addr16
call
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
cmpl
push
push
mov
push
je
test
jne
cmp
je
call
test
jne
mov
test
je
mov
test
je
push
call
pop
mov
mov
test
je
push
call
cmp
pop
jbe
mov
cmpb
jne
push
push
push
call
add
test
je
add
jmp
mov
lea
jmp
xor
pop
pop
pop
ret
push
mov
sub
mov
andl
dec
push
push
dec
push
je
dec
dec
je
sub
je
sub
je
sub
je
sub
je
dec
je
or
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
jmp
call
mov
pushl
pushl
call
mov
pop
add
pop
mov
jmp
mov
mov
push
movl
call
mov
pop
cmp
jne
cmpl
je
push
call
pop
jmp
xor
cmp
jne
cmp
je
push
call
pop
push
call
mov
cmp
je
cmp
je
cmp
jne
mov
cmp
mov
mov
jne
mov
movl
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
add
andl
mov
mov
inc
add
cmp
jl
jmp
mov
cmpl
je
push
call
pop
cmpl
jne
pushl
push
call
pop
pop
jmp
pushl
call
cmpl
pop
je
cmpl
jne
mov
cmpl
mov
jne
mov
mov
xor
pop
pop
pop
leave
ret
mov
mov
push
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
lea
cmp
jae
cmp
je
xor
pop
pop
ret
push
mov
mov
call
push
push
xor
push
push
pushl
call
or
add
cmp
mov
je
push
push
pushl
call
add
cmp
je
push
mov
sub
test
jle
mov
lea
push
push
push
call
push
pushl
call
add
mov
cmp
mov
jge
mov
push
lea
push
pushl
call
add
cmp
je
sub
test
jle
jmp
call
cmpl
jne
call
movl
or
pushl
pushl
call
pop
pop
jmp
jge
push
pushl
pushl
call
pushl
call
add
push
push
call
mov
neg
sbb
neg
dec
cmp
jne
call
movl
call
cmp
decl
jne
pushl
call
add
mov
pop
jmp
mov
pop
pop
leave
ret
mov
push
mov
xor
lea
cmp
jb
cmp
jae
push
pop
mov
pop
mov
ret
push
mov
push
mov
push
pushl
pushl
call
add
test
je
lea
push
push
pushl
call
add
test
je
incl
lea
push
pushl
pushl
call
add
test
je
incl
lea
push
pushl
pushl
call
add
pop
pop
ret
mov
push
push
mov
mov
mov
add
mov
lea
shr
or
mov
mov
mov
shr
shl
or
pop
mov
pop
ret
mov
push
push
mov
mov
mov
mov
shl
shr
or
mov
mov
shl
shr
shr
or
pop
mov
mov
pop
ret
push
mov
sub
mov
push
mov
xor
cmp
push
movl
mov
mov
mov
jbe
push
mov
mov
lea
movsl
movsl
push
movsl
call
push
call
lea
push
push
call
push
call
mov
andl
andl
movsbl
mov
lea
push
push
call
add
incl
decl
jne
xor
pop
cmp
jne
mov
mov
shr
mov
mov
mov
shr
shl
or
shl
addl
mov
mov
jmp
mov
test
jne
push
call
addl
pop
jmp
mov
pop
mov
pop
leave
ret
push
mov
sub
push
push
push
mov
lea
push
mov
xor
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
cmp
je
cmp
je
cmp
jne
inc
jmp
push
pop
mov
inc
cmp
ja
jmp
cmp
jl
cmp
jg
push
jmp
cmp
jne
push
jmp
movsbl
sub
je
dec
dec
je
sub
jne
jmp
push
movl
pop
jmp
andl
push
pop
jmp
cmp
mov
jl
cmp
jle
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jle
cmp
jle
cmp
jle
cmp
jg
push
jmp
dec
push
jmp
cmp
jl
cmp
jle
cmp
je
cmp
jne
mov
jmp
mov
cmp
jle
movzbl
push
push
call
pop
pop
push
pop
jmp
mov
movzbl
mov
and
test
je
cmpl
jae
mov
incl
sub
incl
mov
jmp
incl
mov
inc
jmp
cmp
jne
mov
jmp
cmpl
mov
mov
jne
cmp
jne
decl
mov
inc
jmp
cmp
jle
movzbl
push
push
call
pop
pop
push
pop
jmp
mov
movzbl
mov
and
test
je
cmpl
jae
mov
incl
sub
incl
decl
mov
mov
inc
jmp
cmp
je
cmp
je
jmp
cmp
mov
jle
movzbl
push
push
call
pop
pop
push
pop
jmp
mov
movzbl
mov
and
test
je
mov
jmp
lea
cmp
mov
jl
cmp
jle
movsbl
sub
je
dec
dec
je
sub
jne
push
jmp
mov
cmp
jne
mov
inc
jmp
cmp
jl
cmp
jg
jmp
cmp
jl
cmp
jg
push
pop
dec
jmp
cmp
jne
jmp
cmpl
je
movsbl
lea
sub
mov
je
dec
dec
jne
orl
push
pop
jmp
push
pop
jmp
push
dec
pop
cmp
je
jmp
mov
jmp
movl
xor
cmpl
jle
movzbl
push
push
call
pop
pop
jmp
mov
movzbl
mov
and
test
je
movsbl
lea
lea
cmp
jg
mov
inc
jmp
mov
mov
cmpl
jle
movzbl
push
push
call
pop
pop
jmp
mov
movzbl
mov
and
test
je
mov
inc
jmp
dec
jmp
mov
mov
cmpl
mov
je
push
pop
cmp
jbe
cmpb
jl
incb
mov
mov
dec
incl
jmp
mov
cmpl
jbe
dec
cmpb
jne
decl
incl
jmp
lea
push
lea
pushl
push
call
mov
xor
add
cmp
jge
neg
add
cmp
jne
add
cmp
jne
sub
cmp
jle
movl
mov
mov
mov
mov
cmpl
je
xor
mov
mov
xor
movl
jmp
cmp
jge
movl
jmp
pushl
push
lea
push
call
mov
mov
mov
mov
add
jmp
xor
xor
xor
xor
jmp
xor
xor
xor
xor
movl
jmp
cmpl
je
xor
xor
xor
xor
movl
mov
or
pop
mov
mov
mov
mov
pop
mov
pop
leave
ret
int
inc
add
inc
add
inc
add
pop
inc
add
inc
add
pusha
inc
add
pusha
inc
add
inc
add
popa
inc
add
in
sub
mov
push
mov
push
mov
mov
and
and
test
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movl
mov
je
movb
jmp
movb
mov
test
jne
test
jne
cmp
jne
andw
movb
movb
movb
jmp
cmp
jne
mov
movw
cmp
jne
cmpl
je
test
jne
push
jmp
test
je
cmp
jne
cmpl
jne
push
jmp
cmp
jne
cmpl
jne
push
lea
push
call
pop
movb
pop
andl
jmp
push
lea
push
call
pop
movb
pop
jmp
movzwl
mov
mov
shr
imul
shr
andw
push
lea
mov
imul
mov
lea
mov
sar
mov
movswl
neg
push
lea
push
call
add
cmpw
jb
lea
inc
push
lea
push
call
pop
pop
testb
mov
je
mov
movswl
add
test
jg
jmp
mov
cmp
jle
push
pop
movzwl
sub
andw
movl
lea
push
call
decl
pop
jne
test
jge
neg
and
jle
lea
push
call
dec
pop
jne
lea
lea
test
mov
jle
mov
lea
lea
movsl
movsl
lea
push
movsl
call
lea
push
call
lea
push
lea
push
call
lea
push
call
mov
mov
andb
add
add
incl
decl
mov
jne
mov
mov
dec
dec
cmp
lea
jl
cmp
jb
cmpb
jne
movb
dec
jmp
cmp
jae
inc
incw
incb
sub
sub
mov
movsbl
andb
mov
pop
pop
pop
leave
ret
cmp
jb
cmpb
jne
dec
jmp
cmp
jae
andw
movb
movb
movb
andb
push
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
lea
cmpl
jne
mov
mov
mov
lea
mov
or
mov
je
or
je
inc
inc
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
dec
jne
xor
cmp
je
mov
jb
neg
jmp
lock
cmpl
jg
push
jmp
lock
mov
push
call
movl
mov
xor
xor
mov
mov
or
mov
je
or
je
inc
inc
push
push
push
call
mov
add
call
add
pop
cmp
jne
dec
jne
xor
cmp
je
mov
jb
neg
pop
or
jne
lock
jmp
mov
push
call
add
mov
mov
pop
pop
pop
leave
ret
push
mov
cmpl
jne
xor
pop
ret
pushl
pushl
pushl
pushl
pushl
push
pushl
call
add
test
jne
mov
pop
ret
add
pop
ret
push
push
push
push
mov
push
xor
mov
cmp
je
pop
call
push
push
push
push
push
push
push
push
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
push
pushl
push
push
call
test
je
push
pushl
call
mov
add
pop
cmp
pop
jne
xor
pop
pop
pop
pop
pop
ret
or
jmp
mov
push
mov
and
sar
lea
mov
mov
lea
mov
mov
and
cmp
jne
and
jmp
cmpl
jne
or
neg
sbb
mov
and
add
pop
ret
call
movl
or
pop
ret
push
mov
sub
push
mov
push
mov
mov
xor
push
mov
mov
mov
mov
mov
mov
mov
xor
and
and
and
cmp
lea
mov
jae
cmp
jae
cmp
ja
cmp
ja
xor
jmp
test
mov
jne
incl
test
jne
xor
cmp
jne
cmp
jne
jmp
xor
cmp
jne
incl
test
jne
cmp
jne
cmp
jne
mov
mov
mov
jmp
mov
lea
mov
movl
mov
add
cmpl
jle
add
lea
mov
mov
mov
mov
mov
mov
movzwl
movzwl
imul
mov
add
push
push
pushl
call
add
test
je
mov
incw
addl
subl
decl
jne
addl
incl
decl
cmpl
jg
addl
cmpw
jle
testb
jne
lea
push
call
addl
pop
cmpw
jg
cmpw
jg
addl
cmpw
jge
movswl
neg
add
mov
testb
je
incl
lea
push
call
dec
pop
jne
cmpl
je
orb
cmpw
ja
mov
and
cmp
jne
cmpl
jne
andl
cmpl
jne
andl
cmpw
jne
incl
movw
jmp
incw
jmp
incl
jmp
incl
mov
cmp
jae
mov
or
mov
mov
mov
mov
mov
mov
jmp
neg
sbb
andl
and
add
andl
mov
pop
pop
pop
leave
ret
push
mov
sub
push
mov
xor
sub
cmp
je
jge
mov
mov
neg
mov
sub
cmp
jne
mov
mov
cmp
je
push
push
mov
add
sarl
and
cmp
je
lea
cmpw
lea
jb
lea
movsl
movsl
movsl
decl
lea
push
pushl
call
pop
pop
xor
cmp
jne
pop
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
push
pop
jne
push
mov
push
push
push
push
push
call
outsb
test
je
mov
jmp
push
mov
push
push
push
push
push
push
call
test
je
movl
mov
cmp
jle
push
pushl
call
pop
pop
mov
mov
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
push
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
cmp
je
cmp
jne
cmp
jne
push
pop
jmp
cmp
jle
mov
jmp
cmp
jg
lea
push
pushl
push
call
test
je
cmp
jle
cmpl
jb
lea
cmp
je
mov
cmp
je
mov
mov
cmp
jb
cmp
jbe
inc
inc
cmp
jne
push
jmp
cmp
jle
cmpl
jb
lea
cmp
je
mov
cmp
je
mov
mov
cmp
jb
cmp
jbe
inc
inc
cmp
jne
jmp
push
push
push
pushl
push
pushl
call
mov
cmp
je
mov
add
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
push
pop
cmp
je
pushl
pushl
push
pushl
push
pushl
mov
call
test
je
push
push
pushl
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
push
pushl
call
test
je
push
push
pushl
pushl
pushl
pushl
push
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
je
push
pushl
call
mov
pop
cmp
pop
mov
je
cmp
je
mov
xor
cmp
sete
cmp
jne
push
call
pop
mov
cmp
jne
cmp
je
cmp
je
call
test
je
or
pop
pop
pop
leave
ret
cmp
jne
push
call
cmp
pop
mov
je
mov
cmp
jne
push
call
cmp
pop
mov
je
mov
sub
mov
mov
push
pushl
call
mov
pop
test
pop
jl
cmpl
je
test
je
pushl
lea
call
pop
cmpl
je
mov
inc
mov
add
jmp
mov
shl
push
pushl
call
pop
test
pop
je
jmp
mov
mov
jmp
test
jne
test
jge
neg
lea
push
push
call
pop
test
pop
je
mov
mov
andl
mov
cmpl
je
pushl
call
inc
inc
push
call
mov
pop
test
pop
je
pushl
push
call
mov
pop
sub
pop
add
andb
inc
neg
sbb
not
and
push
push
push
call
push
call
pop
xor
jmp
push
mov
push
mov
test
je
mov
push
push
pushl
call
add
test
jne
mov
mov
cmp
je
test
je
mov
add
test
jne
mov
sub
sar
neg
pop
pop
ret
mov
sub
sar
jmp
push
mov
xor
test
jne
xor
pop
ret
cmpl
lea
je
mov
inc
add
test
jne
push
push
lea
push
push
call
mov
pop
test
mov
jne
push
call
pop
mov
mov
test
je
push
add
call
mov
mov
pop
add
jmp
andl
mov
pop
pop
pop
pop
ret
call
jbe
jns
add
inc
push
call
call
push
push
call
call
shr
inc
jae
add
dec
out
pop
add
int3
int3
mov
test
jne
xor
ret
xor
mov
push
push
push
call
ret
int3
int3
int3
push
push
mov
push
call
add
mov
test
jne
mov
cmp
jne
mov
jmp
lea
mov
push
xor
mov
push
push
call
out
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
xor
mov
push
mov
push
push
call
xor
xlat
test
jne
xor
mov
push
push
call
test
jne
xor
mov
push
push
call
test
jne
xor
mov
push
push
call
test
jne
xor
mov
push
push
call
test
jne
xor
mov
push
push
call
test
jne
push
call
add
test
jne
cmpb
je
push
push
call
test
jne
lea
push
push
push
call
push
lea
push
push
call
xor
and
cld
push
call
push
xor
mov
push
push
call
cld
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
mov
push
mov
push
push
mov
push
push
push
call
lret
mov
mov
cmp
jne
mov
push
call
int
cmpl
push
mov
push
call
nop
movl
test
jne
movl
lea
mov
push
push
push
push
call
mov
je
mov
mov
push
push
call
add
xor
mov
mov
mov
mov
pop
pop
add
ret
int3
mov
mov
mov
mov
call
dec
push
mov
push
push
push
call
ret
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
push
push
mov
push
push
call
mov
mov
mov
add
push
push
push
push
push
call
push
mov
mov
xor
mov
push
push
call
xor
mov
push
push
call
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
test
je
push
call
or
push
add
add
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
push
call
add
add
cmp
jb
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
mov
push
push
mov
mov
mov
sub
mov
push
sub
mov
push
push
push
push
call
and
int3
int3
int3
int3
int3
int3
mov
sub
and
push
push
push
push
mov
mov
push
push
push
call
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
test
mov
je
lea
push
push
push
push
push
push
push
push
push
call
mov
mov
mov
inc
test
mov
je
lea
push
push
push
push
push
push
push
push
push
call
mov
cmp
je
movzwl
mov
push
push
push
call
mov
mov
dec
test
mov
je
lea
push
push
push
push
push
push
push
push
call
bound
lds
add
add
inc
and
dec
test
mov
je
subl
lea
push
push
push
push
push
push
push
push
call
scas
push
push
push
call
pop
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
lea
push
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
and
mov
push
push
push
push
push
call
decl
decl
lea
incl
incl
add
push
push
push
push
push
call
add
pop
pop
add
ret
int3
mov
sub
lea
push
push
call
mov
push
and
mov
push
mov
push
mov
push
push
push
call
sub
les
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
push
cmpb
push
push
lea
je
mov
xor
mov
cmp
jne
inc
cmp
jne
jmp
cmp
je
cmp
jne
inc
cmp
jne
jmp
cmp
je
cmp
jne
inc
cmp
je
push
call
jmp
mov
inc
mov
inc
cmp
jne
lea
lea
push
movb
push
call
lea
push
mov
push
push
push
call
mov
mov
mov
mov
mov
pop
pop
pop
mov
add
ret
int3
int3
int3
int3
push
push
call
fsubrl
stos
inc
add
daa
repz
push
incl
call
sub
cmp
add
mov
push
push
push
call
add
call
jmp
mov
call
test
je
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
push
xor
call
orl
cmp
pop
add
sub
jle
lea
cmp
lea
jne
mov
dec
mov
je
mov
cmp
jne
mov
push
push
call
decl
cmp
jge
lea
lea
mov
mov
inc
rep
mov
cmp
jl
inc
cmp
jl
push
decl
push
call
cmpl
jne
call
mov
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
push
call
ret
int3
cmpw
push
push
jae
xor
pop
pop
ret
cmpl
jne
xor
pop
pop
ret
mov
or
test
je
and
push
call
dec
cmpl
je
call
call
cmp
jle
mov
cmp
je
add
inc
cmp
jl
push
mov
push
push
push
call
in
test
je
mov
mov
shl
mov
mov
shl
mov
mov
shl
mov
mov
shl
movl
mov
shl
mov
mov
mov
mov
incl
push
push
call
mov
pop
pop
ret
shl
incl
jmp
push
call
adc
rcrb
or
int3
int3
int3
int3
int3
int3
int3
push
call
xor
cmp
jle
mov
cmp
je
add
inc
cmp
jl
xor
ret
mov
ret
int3
int3
push
push
push
push
xor
call
sbb
stos
inc
add
loop
add
stos
inc
add
lea
cmp
lea
jne
mov
dec
mov
jne
mov
push
push
call
decl
cmp
jge
lea
lea
mov
mov
inc
rep
mov
cmp
jl
inc
cmp
jl
push
call
js
add
add
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
cmpl
jne
xor
ret
mov
push
push
push
push
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmpl
push
push
push
push
jne
xor
pop
pop
pop
pop
ret
mov
push
push
call
in
xor
mov
mov
lea
cmp
jne
push
push
call
add
mov
xor
mov
push
push
call
push
push
push
call
xor
mov
inc
cmp
jl
jne
cmp
jne
push
push
call
add
mov
xor
mov
push
push
call
push
push
push
call
jmp
xor
pop
call
mov
push
push
call
test
jne
xor
mov
push
push
call
test
jne
xor
mov
push
push
call
test
je
push
xor
mov
push
push
call
sub
push
pop
call
call
mov
test
je
push
call
push
push
call
mov
test
jne
mov
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmpl
push
push
push
jne
xor
pop
pop
pop
ret
mov
test
jl
cmp
jg
mov
push
call
add
test
je
xor
pop
pop
pop
ret
push
push
call
mov
fcoms
adc
push
push
push
mov
shl
push
push
call
add
cmp
jne
lea
mov
push
push
call
add
mov
pop
pop
pop
ret
xor
pop
pop
pop
ret
sub
push
push
mov
push
push
call
add
test
jne
mov
mov
push
push
push
push
call
add
pop
pop
pop
add
ret
xor
mov
push
push
push
call
test
jne
lea
push
call
movl
push
push
push
push
call
cmpl
jne
push
push
push
push
call
cmpl
jne
xor
mov
push
push
call
mov
mov
push
push
push
push
call
add
pop
pop
pop
add
ret
cmpl
push
push
push
push
jne
xor
pop
pop
pop
pop
ret
mov
push
push
pop
call
call
mov
test
je
mov
push
push
push
call
add
push
push
call
mov
test
je
push
push
push
call
add
push
push
call
mov
test
jne
push
push
call
mov
test
jne
mov
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmpl
push
push
push
push
jne
xor
pop
pop
pop
pop
ret
mov
push
push
pop
call
call
mov
test
je
mov
push
push
push
push
call
add
push
push
call
mov
test
jne
push
push
call
add
mov
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmpl
push
je
mov
cmp
jb
cmp
je
cmp
jne
cmpw
jae
mov
push
push
push
call
test
je
push
push
push
call
and
cmp
jne
xor
pop
ret
mov
mov
push
push
call
pop
mov
push
push
push
call
mov
pop
ret
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
call
push
call
add
mov
push
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
cmpl
push
push
push
push
je
xor
mov
jmp
mov
push
push
call
add
mov
test
push
je
mov
mov
push
push
push
push
push
call
jmp
mov
mov
push
push
push
call
cmpl
mov
jne
mov
pop
pop
pop
pop
add
ret
push
push
call
test
je
mov
pop
pop
pop
pop
add
ret
movl
lea
push
push
push
push
call
mov
push
call
push
call
cmpl
je
mov
and
cmp
jne
and
mov
sub
cmp
push
sbb
neg
cmp
sbb
inc
sub
push
call
mov
lea
push
push
push
call
mov
mov
sub
push
lea
push
sub
push
movl
movl
push
push
call
lea
add
push
push
push
call
push
lea
push
push
push
push
push
call
lea
add
push
push
push
push
call
mov
push
push
call
lcall
and
lea
mov
mov
mov
mov
mov
mov
push
push
mov
mov
mov
add
mov
call
mov
lea
sub
add
sub
push
push
push
push
call
lea
push
push
call
mov
add
add
mov
mov
sub
lea
mov
push
mov
push
add
mov
call
add
test
je
mov
lea
lea
mov
add
mov
mov
mov
mov
mov
mov
push
add
push
push
mov
lea
mov
mov
push
push
call
add
mov
lea
sub
push
sub
push
add
mov
add
mov
call
mov
add
push
push
push
call
push
push
call
jo
inc
and
pop
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
cmpb
push
push
je
push
push
call
lea
push
push
pop
call
movb
push
push
push
call
lea
push
push
call
or
xlat
test
jne
movb
lea
push
push
push
push
push
call
lea
push
push
call
test
jne
movb
push
call
push
pop
pop
add
ret
int3
sub
push
push
push
push
push
call
push
push
call
mov
push
push
push
call
call
mov
push
push
call
imul
mov
cmp
jge
xor
push
push
call
mov
call
cmp
jne
push
call
cmp
jne
movl
push
push
push
call
cmpl
je
push
pop
call
call
mov
test
jne
movl
push
push
call
mov
pop
pop
pop
add
ret
push
call
mov
test
je
push
call
mov
push
call
cmpw
mov
je
test
je
push
call
mov
push
call
cmpw
mov
je
test
je
push
call
mov
test
je
push
call
mov
call
push
call
add
test
je
mov
mov
push
call
mov
lea
mov
lea
push
add
push
add
push
call
mov
cmp
mov
jb
lea
push
push
push
call
test
je
mov
mov
jmp
mov
mov
jmp
xor
pop
movl
pop
pop
add
ret
xor
pop
movl
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
call
clc
mov
cmpl
je
movl
add
cmp
jb
call
cmpw
je
mov
call
notb
jmp
pop
call
cmpw
je
mov
push
call
cmpw
je
mov
push
call
cmpw
je
mov
push
call
cmpw
je
mov
push
call
cmpw
je
mov
push
call
cmpw
je
mov
push
call
movl
push
call
mov
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
cmpl
push
push
push
jne
xor
pop
pop
pop
add
ret
xor
push
call
movzwl
inc
xor
mov
push
call
cmp
mov
jb
cmpw
jne
movl
cmpl
je
mov
cmp
jne
cmpl
movl
je
movl
cmpl
jne
mov
lea
mov
repz
jne
mov
pop
pop
pop
add
ret
mov
mov
mov
push
mov
push
mov
push
mov
push
push
mov
xor
push
push
push
call
push
call
mov
movzwl
inc
mov
lea
push
call
cmp
mov
jb
xor
xor
movzwl
cmp
je
inc
cmp
jb
cmpl
je
call
mov
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
rep
mov
pop
pop
mov
mov
pop
add
ret
xor
movzwl
inc
lea
push
call
add
cmp
jb
lea
push
call
add
xor
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
sub
push
push
push
push
mov
cmp
jne
mov
push
mov
push
mov
push
push
push
call
add
pop
pop
pop
pop
add
ret
xor
mov
mov
push
push
call
lahf
test
je
mov
mov
push
push
push
push
push
push
call
add
push
call
movsb
pop
pop
pop
pop
add
ret
cmp
ja
cmp
jae
cmp
je
mov
mov
push
push
push
push
push
push
call
add
push
call
sub
pop
pop
add
ret
cmp
ja
cmp
jae
cmp
je
jmp
cmp
jb
cmp
jbe
jmp
cmpw
jae
push
call
ss
jne
mov
push
mov
push
push
push
push
call
pop
pop
pop
pop
add
ret
mov
mov
push
push
push
push
push
push
call
add
push
push
call
pop
pop
pop
pop
add
ret
push
push
call
mov
add
cmpw
jb
push
push
call
rol
inc
and
add
add
test
jne
movl
lea
push
push
push
push
push
call
cmpl
jne
push
call
mov
mov
mov
push
push
push
push
push
call
sub
pop
pop
add
ret
mov
mov
mov
push
push
push
push
push
push
call
cmpw
mov
jb
push
push
push
call
test
jne
push
push
call
mov
pop
pop
pop
pop
add
ret
lea
push
push
push
push
call
lea
push
push
call
mov
shlb
and
mov
push
lea
push
push
push
push
push
call
add
push
push
call
test
je
cmp
jne
jmp
push
push
push
call
test
jne
mov
mov
push
jmp
cmp
jbe
cmpw
ja
mov
mov
push
lea
push
push
push
push
push
call
add
push
push
call
test
je
cmp
jne
jmp
mov
mov
push
push
push
push
push
call
mov
clc
add
push
lea
push
push
push
push
push
call
add
push
push
call
test
je
cmp
jne
push
push
push
call
test
je
pop
pop
pop
pop
add
ret
mov
mov
movl
pop
pop
pop
pop
add
ret
push
mov
push
call
add
test
jne
xor
pop
ret
cmpw
jb
push
push
call
jle
add
add
rcrb
add
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
sub
push
push
push
push
call
push
mov
push
call
sub
xor
je
xor
cmp
jge
mov
cmp
je
add
inc
cmp
jl
jmp
mov
mov
cmp
jne
push
call
add
inc
and
mov
push
push
push
push
call
dec
pop
pop
pop
pop
add
ret
mov
push
call
and
je
sbb
incb
jne
mov
cmpl
jne
cmpw
jne
cmpw
jb
mov
push
push
call
sti
call
movl
test
jne
movl
mov
lea
push
push
push
push
push
call
cmpl
je
push
push
call
add
jmp
mov
push
push
call
add
jmp
lea
testb
je
mov
push
call
add
test
jne
mov
test
je
cmpw
je
push
call
push
call
add
test
je
mov
mov
push
push
push
push
call
add
shl
push
mov
mov
push
push
push
call
test
pop
pop
add
ret
int3
int3
cmpw
jb
xor
ret
mov
and
cmp
ja
mov
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
cmpw
jb
mov
test
je
lea
push
push
push
call
add
pop
mov
cwtl
pop
pop
add
rolb
add
add
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmpw
jb
xor
ret
cmpw
jne
mov
push
push
push
call
and
cmp
je
cmp
je
mov
ret
xor
ret
mov
ret
int3
cmpw
push
push
push
push
jb
xor
pop
pop
pop
pop
ret
mov
and
cmp
jne
mov
cmp
jne
xor
pop
pop
pop
pop
ret
mov
push
push
call
inc
test
je
push
push
push
push
call
add
mov
pop
pop
pop
pop
ret
cmp
jne
mov
pop
pop
pop
pop
ret
mov
cmp
jne
mov
pop
pop
pop
pop
ret
mov
push
push
call
imul
in
je
push
push
push
push
call
add
push
push
call
test
je
push
push
push
push
call
add
mov
pop
pop
pop
pop
ret
xor
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
mov
and
movzwl
cmp
je
mov
test
je
cmp
jle
cmp
je
test
je
cmp
jl
cmp
jle
cmpw
jae
cmp
jl
cmp
jg
mov
ret
xor
ret
int3
sub
push
push
mov
push
push
push
call
add
test
je
xor
pop
pop
pop
pop
add
ret
lea
push
push
xor
push
mov
call
sahf
mov
test
je
lea
lea
push
push
push
call
test
je
add
inc
cmp
jb
xor
pop
pop
pop
pop
add
ret
push
push
push
call
mov
mov
push
push
push
push
push
mov
shl
call
add
mov
cmp
jne
cmp
jne
cmpw
jne
lea
mov
push
push
call
add
cmp
sbb
pop
inc
pop
pop
pop
add
ret
lea
mov
push
push
call
add
cmp
sbb
pop
inc
pop
pop
pop
add
ret
int3
int3
int3
int3
sub
lea
push
push
push
mov
push
push
call
pop
push
push
push
call
test
mov
je
mov
test
je
mov
test
jne
test
je
test
jne
and
cmp
jne
mov
sub
cmp
jne
mov
mov
sub
cmp
jl
inc
add
lea
push
push
push
push
call
push
call
mov
call
add
push
call
lea
push
push
call
test
je
incl
lea
push
push
push
call
stos
pop
pop
pop
add
ret
int3
int3
sub
push
push
push
push
mov
push
push
call
mov
lea
push
push
push
call
lea
push
push
push
call
adc
call
mov
push
call
lea
push
push
call
lea
push
push
call
test
je
incl
lea
push
push
call
pop
pop
pop
pop
add
ret
int3
int3
sub
lea
push
push
push
mov
push
mov
mov
mov
push
push
mov
mov
push
mov
push
push
mov
mov
mov
call
lea
add
push
push
push
push
call
cmpw
jne
mov
push
call
sub
inc
and
push
push
push
push
push
call
lea
add
push
push
push
push
call
push
mov
push
mov
push
push
push
push
call
call
add
mov
push
dec
push
push
push
call
inc
push
mov
push
dec
push
mov
push
push
push
push
call
push
mov
push
dec
push
push
mov
dec
push
push
call
aam
jl
dec
add
fcomi
fildl
jl
dec
add
lods
stos
inc
add
add
add
call
mov
and
lock
inc
and
mov
sub
push
push
push
push
push
push
call
mov
push
sub
push
mov
push
mov
push
push
push
call
aaa
cmpl
jne
mov
xor
push
push
call
pop
decl
decl
test
jle
mov
push
sub
push
inc
mov
mov
push
push
push
push
push
call
mov
push
sub
mov
mov
push
push
push
push
push
push
call
lea
cmp
jle
lea
push
push
push
push
call
inc
cmp
jg
mov
incl
incl
push
push
push
call
mov
push
sub
mov
mov
push
mov
sub
push
push
push
push
push
call
mov
push
call
clc
test
jne
mov
push
push
push
call
lea
lea
mov
push
push
push
push
call
mov
sub
sub
add
cltd
sub
sar
add
mov
sub
sub
mov
cltd
sub
sar
add
mov
add
cmp
jl
mov
mov
mov
mov
add
cmp
jl
mov
cmpl
mov
je
lea
push
push
pop
call
push
call
mov
mov
sub
cmp
jl
mov
mov
mov
mov
sub
cmp
jl
mov
mov
lea
push
mov
push
push
push
push
push
call
pop
call
call
cmp
jne
lea
push
push
push
push
call
lea
push
push
lea
push
call
pushf
lea
push
push
push
call
cmpl
je
mov
push
push
call
jge
pop
pop
pop
add
ret
int3
sub
push
push
push
push
mov
push
push
push
call
mov
push
and
and
mov
mov
call
mov
push
mov
push
call
stos
lea
call
aas
push
push
call
mov
lea
lea
mov
push
push
push
mov
mov
push
mov
mov
mov
mov
call
jp
inc
and
test
je
push
push
call
testb
pop
call
call
push
push
call
movsb
push
call
push
push
call
popf
mov
push
push
push
push
push
call
push
push
call
lret
and
mov
mov
mov
push
push
call
mov
push
push
push
push
call
mov
test
je
cmp
je
mov
push
sub
mov
mov
push
mov
sub
push
push
push
push
call
sbb
adc
or
pop
mov
push
push
push
push
push
call
movl
mov
and
mov
cmp
sbb
and
inc
mov
sar
or
mov
shl
sub
add
cmpl
mov
jne
add
mov
shl
sub
mov
lea
mov
test
jne
test
je
cmp
jne
lea
push
push
push
push
call
mov
cmp
ja
jmp
mov
mov
lea
push
lea
push
push
push
push
push
push
call
add
jmp
movl
test
je
push
push
call
mov
test
je
mov
push
push
push
call
mov
test
je
mov
push
mov
push
mov
push
cmpl
push
push
push
je
sub
mov
sub
cltd
sub
sar
add
mov
push
sub
jmp
cmpl
jne
movl
jmp
test
je
lea
lea
lea
push
push
push
push
call
add
cmpl
jne
lea
lea
push
push
push
push
call
add
addl
mov
add
add
mov
mov
add
test
mov
je
mov
mov
lea
lea
mov
mov
mov
mov
push
push
pop
call
mov
mov
mov
mov
call
lea
push
push
call
lea
mov
push
pop
call
push
call
lea
mov
push
push
call
lea
push
mov
push
push
push
call
pop
pop
pop
pop
add
ret
mov
decl
decl
push
cltd
sub
push
sar
push
add
lea
push
push
call
lea
add
push
push
push
push
call
lea
push
push
push
push
push
call
add
cmpl
jne
mov
push
push
push
call
lea
push
mov
push
lea
push
push
push
call
fsubr
and
add
sub
mov
sub
cltd
sub
sar
add
mov
push
push
push
call
pop
push
push
call
adc
call
test
je
cmpl
je
mov
sub
mov
jmp
mov
add
mov
cmpl
jne
mov
push
push
call
add
inc
and
push
mov
push
lea
push
push
push
push
call
test
je
lea
lea
lea
push
push
push
push
call
mov
sub
sub
add
cltd
sub
sar
mov
mov
add
cmpl
mov
mov
je
subl
mov
jmp
add
mov
mov
push
add
push
lea
mov
push
call
lea
lea
push
push
lea
push
call
xchg
lea
push
push
call
push
mov
push
push
call
push
cmpl
je
mov
push
push
call
cmp
pop
pop
add
ret
nop
xchg
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
inc
add
xchg
inc
add
int3
int3
int3
sub
push
push
push
push
mov
cmp
jne
mov
push
mov
push
mov
push
push
push
call
add
pop
pop
pop
pop
add
ret
xor
mov
mov
push
push
call
add
mov
mov
push
push
push
push
push
push
call
add
push
call
push
call
pop
pop
pop
pop
add
ret
cmp
mov
ja
je
sub
cmp
ja
jmp
cmp
je
cmp
jb
cmp
jbe
mov
mov
push
push
push
push
push
push
call
add
push
call
push
call
pop
pop
pop
pop
add
ret
mov
jmp
push
push
push
call
and
cmp
jne
push
push
push
push
push
call
xor
jmp
mov
jmp
push
push
call
ss
je
and
cmp
jne
mov
jmp
mov
jmp
push
push
push
push
push
call
mov
mov
mov
test
jne
lea
pop
call
push
push
call
mov
push
push
call
dec
test
je
and
or
push
push
push
call
add
test
jne
lea
push
push
call
push
xor
pop
pop
pop
pop
add
ret
mov
push
push
push
push
call
lock
push
push
call
jo
add
add
je
cmp
je
and
push
push
push
call
mov
mov
push
push
push
push
push
push
call
add
push
push
call
mov
cmp
je
push
push
call
inc
or
push
push
push
call
push
push
push
push
push
call
mov
cmp
je
cmp
jne
cmp
je
push
call
mov
clc
test
je
xor
test
je
or
push
and
push
or
push
call
push
push
push
call
add
push
push
call
inc
mov
pop
pop
pop
pop
add
ret
mov
pop
pop
pop
pop
movl
mov
add
ret
mov
call
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
inc
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
push
push
push
push
call
stc
mov
test
je
cmpl
jne
and
cmp
jne
push
push
push
push
call
cs
jne
cmpl
je
push
push
call
lea
push
push
call
cmp
adc
mov
call
jge
inc
and
push
push
call
lea
mov
push
push
call
push
call
scas
mov
mov
and
mov
je
mov
mov
and
mov
je
and
push
push
call
sub
enter
cld
decl
test
add
movl
lea
push
push
push
push
call
faddl
add
add
pop
lea
push
push
push
push
call
lahf
mov
lea
push
push
push
push
call
lea
push
push
push
call
test
je
cmpl
jne
cmpl
jne
push
call
mov
push
lea
mov
push
push
push
push
call
push
push
push
call
mov
push
call
lcall
fmuls
test
push
push
call
and
cmp
je
cmp
je
and
push
push
push
call
lea
push
push
push
call
mov
push
sub
lea
add
push
push
call
mov
sub
add
add
jmp
push
push
push
push
call
adc
inc
and
push
push
call
push
call
ljmp
inc
ret
and
incl
mov
lea
push
push
push
call
add
cmpl
jne
mov
and
cmp
jne
mov
push
call
imulb
call
and
push
mov
push
push
push
call
add
push
call
add
jmp
cmpl
je
lea
push
incl
push
push
push
push
call
mov
decl
mov
mov
add
push
push
call
sub
push
lea
push
mov
push
push
push
call
mov
mov
add
cmpl
je
lea
push
incl
push
push
push
push
call
decl
add
mov
push
call
cwtl
sub
push
lea
push
mov
push
push
push
call
add
push
push
push
call
cmpl
je
push
call
fwait
pop
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
push
push
mov
cmp
jne
mov
mov
mov
push
mov
push
push
push
push
call
add
pop
pop
pop
pop
add
ret
xor
mov
mov
push
push
call
and
insb
and
test
mov
push
mov
push
push
push
push
push
je
call
add
push
call
push
call
pop
pop
pop
pop
add
ret
call
add
push
call
adc
sti
add
push
push
push
call
mov
and
cmp
jne
mov
pop
pop
pop
pop
add
ret
mov
cmp
ja
je
cmp
je
mov
pop
pop
pop
pop
add
ret
cmp
je
cmp
jb
cmp
jbe
jmp
cmp
jne
and
cmp
je
cmp
jne
push
push
push
call
add
jmp
cmpw
jae
cmpl
jne
push
push
call
add
jmp
cmpw
jb
push
push
call
add
jmp
mov
movl
pop
pop
pop
pop
add
ret
int3
mov
push
mov
push
mov
push
mov
push
push
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
push
cmp
jne
mov
mov
mov
push
mov
push
push
push
push
call
add
pop
pop
pop
add
ret
xor
mov
mov
push
push
call
sub
mov
mov
mov
push
push
push
push
push
push
call
add
push
call
dec
pop
pop
pop
add
ret
cmp
ja
je
cmp
je
mov
mov
mov
push
push
push
push
push
push
call
add
push
call
mov
les
ret
cmp
ja
je
cmp
je
jmp
cmp
jb
cmp
jbe
jmp
mov
mov
mov
push
push
push
push
push
push
call
add
push
push
call
mov
push
push
push
call
add
mov
pop
pop
pop
add
ret
cmpw
jae
cmpl
jne
push
push
call
add
jmp
cmpw
jb
mov
push
push
call
add
jmp
cmpw
jae
lea
push
push
push
call
mov
mov
mov
push
push
push
push
push
push
call
add
push
call
int3
mov
mov
lea
mov
mov
push
push
mov
mov
mov
mov
mov
mov
lea
push
call
jns
dec
and
cmp
jge
mov
push
inc
mov
lea
mov
call
mov
push
call
lea
push
push
call
lea
push
push
call
lea
push
push
push
call
sub
add
ret
mov
pop
pop
pop
movl
mov
add
ret
int3
int3
mov
push
mov
push
mov
push
mov
push
push
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
cmp
jb
cmp
jbe
mov
push
mov
push
push
push
mov
push
call
add
ret
mov
movl
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
mov
push
mov
mov
mov
sub
push
mov
sub
push
push
push
mov
push
push
call
mov
push
call
dec
mov
lea
add
and
call
mov
cmpl
je
add
mov
push
push
push
call
gs
je
mov
mov
mov
and
cmp
je
mov
and
or
test
je
or
and
je
mov
mov
push
push
push
call
mov
mov
mov
movzwl
push
push
push
push
push
call
js
pushl
inc
clc
mov
push
push
call
or
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
push
push
push
push
call
mov
test
je
lea
push
push
push
call
mov
and
cmp
ja
xor
mov
jmp
push
pop
call
push
push
push
call
mov
test
je
mov
push
push
push
call
mov
jmp
mov
push
push
call
xchg
push
push
push
push
call
push
call
mov
test
je
push
push
push
call
mov
mov
lea
push
push
push
push
call
add
test
je
push
push
push
call
test
je
push
push
call
imul
adc
lea
push
mov
push
push
push
push
call
add
pop
pop
pop
pop
add
ret
lea
push
mov
push
incl
push
incl
push
push
call
lea
add
push
push
push
call
punpckhdq
push
push
push
call
add
pop
pop
pop
pop
add
ret
lea
push
mov
push
push
push
push
call
add
pop
pop
pop
pop
add
ret
sahf
mov
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
add
or
or
or
int3
sub
push
push
push
mov
cmp
jne
mov
push
mov
push
mov
push
push
push
call
add
pop
pop
pop
add
ret
xor
mov
mov
push
push
push
call
test
je
mov
mov
push
push
push
push
push
push
call
add
push
call
fistpl
pop
add
ret
cmp
ja
je
cmp
je
jmp
cmp
jb
cmp
jbe
mov
mov
push
push
push
push
push
push
call
add
push
call
pop
pop
pop
add
ret
push
call
push
mov
push
call
add
push
push
call
add
push
push
push
call
xor
pop
pop
pop
add
ret
mov
mov
test
jne
lea
push
push
push
call
push
mov
push
call
add
push
push
call
add
test
jne
lea
push
push
call
lcall
les
adc
mov
pop
pop
pop
movl
mov
add
ret
int3
int3
int3
int3
sub
cmpl
push
jne
push
call
push
push
push
call
mov
mov
test
je
push
call
push
call
cmpsl
mov
mov
call
mov
movzbl
shl
movzbw
or
test
mov
je
movw
cmp
jb
movw
push
push
call
call
dec
push
mov
call
dec
push
mov
call
push
mov
call
push
mov
push
call
mov
pop
add
ret
int3
int3
int3
int3
int3
mov
sub
push
push
mov
push
push
push
push
push
push
call
mov
test
jne
xor
pop
pop
pop
pop
add
ret
push
push
call
sti
mov
push
push
push
call
mov
test
jne
xor
pop
pop
pop
pop
add
ret
push
push
call
sahf
mov
test
jne
xor
pop
pop
pop
pop
add
ret
mov
mov
shr
rep
mov
and
rep
mov
xor
mov
mov
movl
shl
shr
mov
xor
or
mov
shl
mov
or
mov
shr
mov
movl
xor
mov
mov
xor
shl
mov
shl
or
or
mov
mov
mov
shr
xor
movl
mov
mov
shl
xor
or
mov
shl
mov
or
xor
mov
mov
shl
xor
mov
shl
shr
or
xor
mov
mov
or
xor
mov
mov
shl
xor
mov
shl
shr
or
xor
mov
mov
or
xor
mov
mov
shl
xor
mov
shl
push
shr
or
xor
mov
or
mov
push
call
mov
push
push
lea
push
push
push
push
push
call
mov
push
push
push
call
push
call
xlat
mov
pop
pop
pop
pop
add
ret
pushl
pushl
pushl
pushl
call
ret
call
mov
test
mov
jne
push
call
pop
push
pop
ret
push
push
call
call
jmp
jmp
push
push
call
push
call
pop
mov
ret
push
mov
sub
push
push
push
xor
cmp
mov
mov
je
pushl
mov
call
cmp
mov
jne
xor
jmp
cmp
jne
mov
jmp
pushl
call
mov
mov
mov
mov
add
cmp
jae
pushl
push
call
pop
test
pop
je
mov
incl
lea
jmp
push
call
lea
cmp
jb
cmpl
jle
mov
call
mov
mov
sub
mov
imul
add
mov
cmp
mov
jl
cmpl
jle
lea
push
mov
mov
call
mov
pushl
push
pushl
call
add
pushl
call
mov
mov
add
cmp
mov
jae
pushl
push
call
mov
pop
test
pop
je
mov
mov
mov
mov
sub
lea
sub
add
add
push
push
push
call
pushl
pushl
push
call
mov
pushl
sub
andb
push
add
call
mov
add
test
jne
mov
push
call
lea
cmp
jb
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
call
push
mov
andl
test
jge
xor
mov
cmp
jl
push
mov
call
mov
jmp
mov
push
mov
push
pop
push
push
push
lea
push
mov
call
mov
lea
push
call
andb
lea
mov
call
mov
pop
mov
mov
leave
ret
push
pushl
call
ret
push
mov
mov
mov
cmp
jg
pushl
add
push
call
pop
test
pop
jne
or
jmp
sub
pop
ret
push
mov
sub
mov
andl
push
push
push
mov
mov
mov
cmpb
je
cmpb
jne
push
call
mov
pop
mov
cmp
je
xor
test
mov
je
cmp
jne
addl
jmp
cmp
jne
addl
mov
mov
mov
jmp
cmp
je
cmp
je
cmp
je
cmp
jne
push
call
mov
pop
mov
test
jne
cmp
jne
push
call
pop
mov
mov
test
je
movsbl
push
call
test
pop
je
push
call
pop
mov
jmp
xor
cmpb
jne
push
call
mov
pop
cmpb
jne
addl
push
mov
mov
call
pop
mov
andl
push
push
push
call
add
test
jne
add
movl
jmp
push
call
pop
mov
mov
test
je
movsbl
push
call
test
pop
je
push
call
pop
mov
jmp
movsbl
sub
je
sub
je
dec
dec
je
sub
je
sub
jne
movl
jmp
movl
push
call
pop
mov
movsbl
or
mov
cmp
jg
je
sub
je
push
pop
sub
je
sub
je
sub
je
sub
je
sub
je
movsbl
cmp
jg
je
sub
je
sub
je
sub
je
dec
je
dec
je
dec
je
jmp
sub
je
sub
je
sub
je
sub
je
sub
jne
addl
mov
mov
test
je
push
call
pop
jmp
addl
push
pop
jmp
addl
mov
mov
test
jne
push
pop
jmp
push
call
mov
cmp
jge
push
pop
test
je
test
je
cmp
jl
mov
cmp
jg
mov
jmp
lea
cmp
jle
mov
add
and
call
addl
mov
mov
push
push
add
fldl
fstpl
push
pushl
push
push
call
push
call
add
jmp
addl
mov
jmp
sub
je
dec
je
dec
je
sub
je
sub
je
jmp
addl
push
pop
mov
add
cmp
jl
mov
jmp
testb
je
addl
jmp
addl
add
jmp
push
call
add
pop
push
call
pop
mov
jmp
mov
pushl
mov
call
pushl
pushl
pushl
call
add
mov
push
call
lea
pop
pop
pop
leave
ret
mov
lea
push
pushl
call
ret
mov
call
push
push
push
push
xor
pushl
mov
mov
push
call
mov
mov
mov
lea
push
push
push
movb
movl
call
mov
add
mov
lea
neg
sbb
lea
add
mov
mov
mov
mov
mov
or
mov
or
mov
movl
mov
movl
mov
movl
cmp
jne
call
test
je
orl
cmp
je
orb
call
mov
mov
cmp
movl
je
push
pushl
push
call
dec
cmp
je
pushl
lea
mov
call
push
mov
call
push
push
call
pop
cmp
pop
je
mov
push
inc
jmp
mov
mov
mov
mov
pop
pop
pop
mov
leave
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
push
push
push
mov
push
pushl
call
mov
inc
sub
add
push
push
push
call
add
call
addr16
mov
xor
call
mov
call
mov
mov
test
je
push
push
call
test
je
push
pop
push
pushl
call
push
call
testb
mov
je
mov
jmp
push
call
cmpl
lea
push
je
call
jmp
call
andl
mov
test
pop
je
push
pushl
call
pushl
push
call
test
je
pushl
push
call
mov
call
mov
pop
pop
pop
test
jne
push
pop
pop
pop
ret
mov
call
push
push
andl
push
testb
push
push
mov
je
mov
test
je
mov
mov
mov
andl
push
call
push
call
mov
lea
push
mov
call
push
push
push
pushl
call
into
call
test
jge
lea
call
jmp
push
lea
call
mov
cmpl
je
mov
pushl
call
push
call
push
lea
mov
call
push
push
push
pushl
call
test
jge
lea
call
orl
lea
call
mov
pushl
mov
call
mov
mov
pop
pop
pop
mov
leave
ret
push
lea
call
mov
lea
push
call
orl
lea
call
jmp
xor
ret
xor
ret
ret
pushl
call
push
call
push
mov
call
ret
ret
push
mov
push
push
mov
push
push
mov
pushl
call
test
jne
mov
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
xor
jmp
mov
mov
call
jmp
mov
mov
call
jmp
mov
mov
call
jmp
mov
pushl
mov
call
mov
jmp
push
call
xor
push
push
push
pushl
call
test
jne
push
push
push
pushl
call
jmp
mov
mov
call
jmp
mov
mov
call
push
pop
pop
pop
pop
ret
push
mov
push
lea
movl
push
pushl
call
neg
sbb
neg
mov
pop
ret
mov
push
test
mov
je
andl
cmpl
jne
mov
call
cmpl
je
pushl
lea
push
pushl
push
call
jmp
mov
andb
mov
pop
ret
push
mov
push
lea
push
push
movl
call
push
mov
push
lea
push
push
movl
call
mov
ret
push
mov
push
push
push
xor
cmp
je
push
mov
call
mov
cmp
je
pushl
call
test
jne
pushl
mov
call
mov
mov
mov
cmp
jne
call
nop
push
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
pushl
mov
pushl
push
pushl
call
jmp
cmp
mov
je
cmp
jne
cmpw
je
cmp
jb
pushl
call
mov
push
mov
call
test
je
testb
jne
cmp
jne
mov
pushl
mov
call
jmp
cmp
jne
cmpl
je
mov
mov
mov
mov
call
andl
jmp
cmp
jne
mov
mov
shr
push
movzwl
push
mov
pushl
call
xor
jmp
cmp
jne
mov
mov
call
jmp
push
push
push
pushl
push
call
push
pop
pop
pop
pop
pop
ret
push
mov
push
call
test
je
mov
call
pop
ret
jmp
call
ret
push
mov
sub
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
dec
mov
mov
mov
add
mov
mov
mov
lea
push
call
mov
pop
mov
pop
leave
ret
push
mov
mov
push
mov
mov
cmp
jae
andl
jmp
movzwl
pushl
push
movzwl
push
movzwl
push
movzwl
movzwl
push
push
movzwl
push
lea
call
mov
mov
mov
pop
pop
ret
push
mov
sub
lea
push
push
mov
pushl
push
call
test
je
lea
push
lea
push
push
call
test
jne
andl
jmp
pushl
lea
lea
push
call
mov
mov
mov
pop
leave
ret
mov
mov
movl
mov
ret
push
pop
ret
xor
ret
push
push
pushl
call
add
test
je
push
push
pushl
call
add
test
je
mov
jmp
mov
mov
mov
xor
ret
mov
call
push
push
mov
push
push
push
mov
andl
mov
pushl
pushl
call
mov
test
je
mov
xor
jmp
mov
call
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
push
push
mov
push
push
mov
mov
andl
push
mov
push
pushl
call
mov
test
je
mov
xor
jmp
mov
call
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
push
push
push
push
xor
cmp
mov
je
cmpl
jne
cmp
jge
mov
mov
mov
cmp
jne
mov
jmp
call
pushl
mov
mov
mov
pushl
call
mov
cmp
je
mov
mov
xor
jmp
mov
call
mov
ret
mov
mov
pop
pop
mov
pop
leave
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
xor
mov
mov
mov
mov
mov
mov
movl
mov
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
mov
push
xor
mov
mov
mov
mov
mov
call
mov
pop
pop
ret
mov
call
push
mov
movl
andl
call
mov
mov
leave
ret
push
mov
cmpl
jne
push
lea
pushl
push
call
mov
add
lea
dec
test
lea
jl
inc
mov
mov
mov
sub
dec
jne
mov
mov
mov
mov
mov
mov
mov
incl
andl
pop
ret
mov
mov
mov
decl
mov
jne
call
ret
push
mov
push
pushl
call
mov
mov
mov
test
je
mov
jmp
mov
mov
pop
ret
mov
push
mov
mov
test
mov
je
andl
jmp
andl
push
call
mov
pop
ret
mov
push
cmp
jne
mov
mov
jmp
mov
mov
mov
cmp
jne
mov
mov
jmp
mov
mov
mov
push
call
pop
ret
mov
test
jne
mov
jmp
mov
test
je
mov
cmp
jne
jmp
xor
ret
mov
imul
add
push
call
pop
mov
mov
mov
mov
ret
test
je
push
mov
push
call
pop
test
mov
jne
pop
ret
mov
xor
mov
mov
mov
mov
mov
movl
movl
mov
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
push
mov
mov
test
je
push
call
andl
pop
cmpl
mov
je
push
mov
shl
push
call
push
push
push
mov
call
add
pop
mov
pop
pop
ret
push
mov
mov
test
je
push
call
andl
pop
mov
andl
andl
call
andl
pop
ret
mov
call
push
mov
movl
andl
call
mov
mov
leave
ret
push
mov
cmpl
jne
push
lea
pushl
push
call
mov
add
lea
dec
test
lea
jl
inc
mov
mov
mov
sub
dec
jne
mov
mov
incl
mov
andl
andl
pop
ret
mov
mov
mov
decl
mov
jne
call
ret
push
mov
mov
xor
shr
divl
mov
mov
mov
test
je
mov
test
je
cmp
je
mov
jmp
xor
pop
ret
push
mov
test
push
je
mov
xor
mov
shr
divl
mov
test
je
cmp
je
mov
jmp
mov
jmp
xor
pop
pop
ret
push
mov
push
push
mov
lea
push
mov
push
call
test
jne
cmp
jne
push
mov
pushl
call
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
pop
add
pop
pop
ret
push
mov
test
push
je
mov
xor
mov
shr
divl
mov
lea
test
je
cmp
je
mov
mov
jmp
mov
push
mov
call
push
pop
jmp
xor
pop
pop
ret
mov
push
push
mov
cmp
jne
mov
xor
test
jbe
mov
mov
test
jne
inc
add
cmp
jb
mov
test
jne
mov
push
mov
xor
shr
div
inc
cmp
jae
mov
lea
mov
test
jne
inc
add
cmp
jb
pop
mov
mov
mov
mov
mov
mov
mov
pop
mov
pop
ret
mov
ret
push
mov
cmpl
jne
call
test
je
push
call
mov
call
pop
ret
push
push
mov
call
mov
xor
push
push
push
mov
pushl
push
call
pushl
mov
mov
pushl
call
pop
pop
ret
mov
push
mov
mov
dec
je
sub
je
push
xor
push
cmp
mov
jne
cmp
jne
inc
push
pop
mov
push
mov
call
test
je
mov
push
push
jmp
push
mov
call
test
jne
mov
push
push
mov
call
mov
pop
pop
jmp
push
pushl
call
pop
ret
push
mov
push
push
mov
mov
test
jg
push
call
mov
andl
test
je
mov
call
test
mov
je
mov
lea
push
mov
call
mov
mov
call
cmpl
jne
jmp
cmp
jne
push
mov
call
xor
cmp
pop
pop
setl
pop
ret
push
mov
push
push
push
mov
push
xor
mov
cmp
je
mov
push
call
movzwl
pushl
add
push
call
loopne
shlb
inc
cld
push
push
pushl
call
test
je
mov
cmp
je
push
call
push
push
push
pushl
pushl
push
call
push
push
push
call
push
mov
call
push
push
push
pushl
pushl
push
call
cmp
je
pushl
call
mov
pushl
call
pop
pop
pop
leave
ret
call
mov
test
jne
call
mov
ret
call
cmpb
jne
push
call
mov
push
call
push
push
push
push
call
xor
cmp
mov
mov
call
mov
cmpl
je
call
pushl
call
push
mov
call
pop
ret
cmpl
je
test
je
mov
push
call
ret
push
push
push
push
push
push
xor
mov
pop
mov
cmp
je
lea
push
push
push
push
push
call
test
shlb
inc
and
mov
incl
push
mov
call
test
jne
xor
cmp
jne
mov
mov
call
test
je
mov
lea
push
mov
call
test
je
push
mov
pop
push
push
push
push
push
push
call
test
jne
jmp
mov
mov
call
pop
pop
pop
pop
pop
ret
mov
push
push
mov
cmp
je
cmp
je
cmp
je
cmp
jne
xor
jmp
mov
mov
cmp
jne
cmp
jne
cmp
je
mov
mov
mov
mov
mov
mov
push
pop
pop
pop
ret
mov
ret
push
push
xor
push
cmp
push
jg
mov
mov
cmp
je
mov
cmp
je
push
push
call
test
je
push
push
pop
push
push
pushl
push
call
push
push
push
push
push
pushl
call
call
add
push
mov
call
mov
cmp
je
cmp
je
cmp
je
cmp
jne
push
mov
call
pushl
push
call
test
jne
cmp
jl
push
push
push
pushl
push
call
push
push
push
push
push
pushl
call
mov
cmp
jle
push
mov
call
orl
mov
jmp
call
add
push
mov
call
cmp
jne
call
push
call
xor
cmp
pop
pop
pop
pop
setl
ret
push
mov
push
push
push
push
mov
call
mov
xor
cmp
je
mov
mov
mov
cmp
jae
push
push
push
pushl
call
cmp
jne
mov
cmp
jne
jmp
mov
push
push
push
push
call
cmp
je
mov
mov
cmp
je
push
push
push
add
jmp
pushl
mov
pushl
call
push
pop
jmp
xor
pop
pop
pop
pop
pop
ret
push
push
mov
cmpl
jne
push
call
test
jne
call
mov
test
je
mov
push
push
call
test
je
push
pop
jmp
test
je
pushl
call
mov
call
cmp
je
mov
push
mov
call
jmp
xor
pop
pop
ret
mov
mov
cmp
jne
or
jmp
cmp
jne
push
pushl
call
lods
xor
ret
push
call
cmpb
mov
jne
test
jge
cmp
jne
call
test
je
pushl
mov
mov
push
call
jmp
push
mov
call
pushl
pushl
push
pushl
call
enter
add
cmpl
jne
cmpl
jne
mov
shr
test
jne
pop
call
push
call
test
jl
push
call
test
jl
push
call
test
jl
push
pop
jmp
xor
pop
ret
push
mov
sub
push
push
mov
xor
cmp
push
mov
je
mov
sub
je
dec
dec
je
sub
jmp
pushl
call
cmp
je
mov
call
mov
cmp
je
mov
call
test
je
cmp
je
call
mov
cmp
je
mov
cmp
jne
cmpl
je
cmp
jne
push
push
push
pushl
call
shr
add
add
jo
incl
add
add
add
sti
je
push
call
test
je
push
push
push
pushl
jmp
cmp
jne
mov
cmp
je
mov
cmp
jb
cmp
ja
push
mov
call
mov
cmpl
jne
push
lea
pop
movl
rep
mov
mov
call
test
je
mov
lea
push
mov
call
test
je
andl
push
pop
jmp
andl
xor
pop
pop
pop
leave
ret
mov
test
jne
mov
test
jne
push
call
push
call
ret
push
mov
xor
push
push
lea
push
push
push
push
call
test
je
cmpl
je
mov
push
mov
call
test
jne
push
push
call
push
push
call
push
pop
pop
pop
ret
mov
push
pop
xor
mov
mov
mov
mov
mov
mov
ret
mov
call
push
mov
mov
andl
add
test
je
call
mov
mov
leave
ret
push
mov
mov
push
push
push
test
pop
je
mov
mov
mov
mov
jmp
mov
cmp
ja
je
dec
dec
je
sub
je
dec
je
sub
je
sub
je
dec
jne
mov
mov
pushl
pushl
call
jmp
mov
mov
pushl
pushl
call
jmp
mov
call
jmp
pushl
jmp
mov
call
jmp
pushl
jmp
mov
mov
pushl
pushl
pushl
call
jmp
sub
je
sub
je
dec
je
dec
je
dec
je
xor
jmp
pushl
mov
call
jmp
pushl
mov
call
jmp
pushl
mov
mov
push
call
xor
cmp
sete
andl
jmp
mov
mov
push
call
jmp
mov
mov
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
ret
push
mov
mov
push
push
push
cmp
mov
jne
call
pushl
mov
mov
pushl
mov
pushl
push
call
jmp
cmp
jne
mov
andl
mov
mov
mov
mov
call
mov
test
je
cmpl
jne
mov
mov
test
je
cmpl
je
cmpl
jne
cmp
jne
cmpl
jne
cmpl
je
jmp
mov
test
je
push
push
pushl
call
add
test
jne
mov
movl
mov
add
jmp
mov
jmp
mov
jmp
cmp
je
mov
movzwl
shr
mov
jne
mov
mov
mov
call
mov
test
je
pushl
pushl
push
pushl
call
test
jne
mov
jmp
pushl
pushl
pushl
pushl
pushl
pushl
push
call
jmp
xor
pop
pop
pop
pop
ret
push
pop
ret
mov
ret
call
mov
push
mov
mov
call
ret
call
mov
push
mov
mov
call
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
mov
push
call
mov
mov
call
test
je
mov
call
push
call
test
je
mov
push
mov
call
pop
ret
push
pop
ret
mov
ret
mov
ret
mov
xor
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
push
mov
mov
test
je
cmpl
jne
mov
neg
sbb
and
add
or
push
pushl
pushl
call
cmp
and
add
inc
mov
call
cmpsb
cmp
jne
pushl
call
push
call
mov
test
je
mov
push
push
pushl
push
call
push
call
mov
call
pushl
mov
call
pop
movl
pop
ret
push
mov
push
mov
test
je
cmpl
jne
mov
neg
sbb
and
or
push
pushl
pushl
push
call
jmp
mov
push
call
push
push
push
pushl
call
test
je
mov
push
pushl
push
pushl
call
pop
pop
ret
push
push
mov
xor
xor
cmp
mov
setne
push
mov
call
cmp
je
cmp
jne
cmp
jne
call
cmp
je
pushl
mov
push
push
pushl
pushl
call
ficompl
ret
push
mov
mov
test
je
cmpl
jne
mov
push
mov
push
push
pushl
push
call
pushl
and
or
pushl
push
mov
pushl
pushl
call
lea
ud0
mov
pushl
call
pop
ret
call
xor
ret
mov
mov
mov
ret
push
push
mov
push
call
mov
pop
test
jne
mov
test
je
push
call
test
pop
jne
mov
pop
pop
ret
pushl
call
pop
ret
cmpl
jne
pushl
call
push
push
call
pop
test
pop
je
mov
mov
call
jmp
push
pop
jmp
xor
ret
mov
ret
push
push
mov
mov
push
call
test
jne
mov
call
test
je
cmpl
je
xor
jmp
cmpl
jne
mov
cmp
je
cmp
jne
push
pushl
call
lds
pop
mov
pushl
call
test
je
push
pushl
push
call
test
je
push
call
int3
test
je
push
push
push
pushl
push
call
push
pop
jmp
push
mov
call
pop
pop
ret
push
mov
push
push
mov
push
pushl
mov
mov
pushl
push
push
call
test
jne
test
je
cmp
jne
test
je
cmp
jae
pushl
call
push
call
test
je
pushl
mov
mov
pushl
push
push
call
test
jne
call
test
je
pushl
mov
mov
pushl
push
push
call
test
je
push
pop
jmp
xor
pop
pop
pop
pop
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
mov
call
push
push
mov
mov
movl
andl
cmpl
je
call
orl
mov
call
mov
pop
mov
leave
ret
mov
call
sub
push
push
xor
push
cmp
mov
mov
mov
jne
call
mov
mov
call
mov
push
mov
mov
mov
mov
call
push
call
cmp
je
mov
lea
push
mov
call
cmp
jne
xor
jmp
pushl
mov
lea
push
mov
call
mov
cmp
je
mov
mov
lea
movb
push
lea
push
mov
pushl
call
add
xor
cmp
sete
mov
cmp
jne
push
push
call
test
je
push
pushl
call
pop
test
pop
je
push
pushl
call
pop
test
pop
je
push
pushl
call
pop
test
pop
jne
cmpw
jne
mov
pushl
lea
call
pushl
lea
movb
call
lea
call
lea
mov
movb
call
cmp
je
pushl
call
mov
orl
orl
push
call
mov
cmp
jne
xor
jmp
mov
push
push
push
pushl
pushl
call
mov
call
cld
xor
add
sbb
add
add
sub
mov
ret
mov
mov
xor
orl
cmp
je
mov
lea
push
mov
call
cmp
je
mov
push
mov
call
call
test
jne
mov
mov
call
cmp
je
testb
jne
pushl
call
sub
in
je
pushl
push
call
pushl
push
call
xor
cmp
setne
mov
pop
pop
mov
pop
leave
ret
mov
push
mov
pop
ret
push
push
mov
call
lea
push
push
push
movl
call
mov
add
mov
mov
movzwl
mov
mov
mov
pop
pop
ret
push
push
mov
call
mov
test
je
push
mov
call
mov
test
je
mov
lea
push
push
call
push
mov
call
mov
pop
pop
ret
push
mov
call
mov
call
pushl
push
call
test
je
push
pushl
call
andl
call
mov
pop
test
je
push
mov
call
ret
mov
call
sub
push
push
mov
push
mov
mov
mov
mov
mov
call
cmpl
mov
je
call
mov
push
pushl
push
call
pop
push
push
push
call
mov
test
je
push
call
xor
call
enter
add
add
decl
or
cmp
mov
je
pushl
call
addb
jne
call
movl
push
mov
call
pushl
call
push
push
pushl
mov
call
cmp
je
testb
je
push
mov
pop
call
test
je
push
pop
push
mov
call
cmp
je
push
push
push
push
push
push
mov
call
jmp
mov
call
mov
orl
mov
ret
mov
xor
orl
cmp
je
push
pushl
call
cmp
je
call
into
cmp
jne
pushl
push
call
mov
mov
call
mov
call
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
testb
je
mov
pushl
call
pushl
pushl
push
call
pop
ret
push
push
pushl
mov
mov
call
push
mov
call
mov
call
pop
pop
ret
push
mov
push
mov
call
call
mov
test
je
mov
test
je
mov
test
je
mov
push
push
push
call
jmp
mov
push
pushl
push
call
test
jne
push
mov
call
xor
jmp
mov
call
mov
test
je
testb
je
push
push
pushl
call
rclb
or
add
test
je
mov
call
xor
mov
pop
pop
ret
push
mov
push
push
push
push
call
xor
cmp
jne
xor
jmp
call
cmp
mov
je
mov
lea
push
push
push
push
mov
call
test
je
push
pop
jmp
call
mov
lea
push
push
mov
push
push
mov
call
pop
pop
leave
ret
push
mov
mov
test
je
push
call
jmp
pushl
mov
call
test
je
push
mov
call
test
jne
push
mov
call
xor
pop
ret
push
mov
call
mov
test
je
call
neg
sbb
mov
and
push
call
push
pop
pop
ret
push
mov
push
call
test
je
push
mov
call
pop
ret
push
call
ret
push
push
mov
cmpl
mov
mov
je
push
call
mov
push
pushl
push
push
call
push
push
call
leave
pop
test
je
push
call
cld
mov
push
test
pop
je
cmpw
mov
jne
mov
mov
mov
jmp
mov
mov
test
jne
test
jne
test
jne
push
pop
jmp
xor
pop
pop
ret
pushl
pushl
pushl
call
ret
push
mov
test
jne
mov
test
je
lea
test
je
call
mov
test
je
mov
push
push
mov
call
push
pop
jmp
xor
pop
ret
mov
test
je
add
jmp
xor
ret
jmp
push
call
cmp
cld
mov
ret
call
jmp
push
mov
call
ret
push
call
pop
ret
testb
jne
orb
mov
jmp
ret
call
jmp
push
mov
call
ret
push
call
pop
ret
testb
jne
orb
mov
jmp
ret
call
jmp
push
mov
call
ret
push
call
pop
ret
testb
jne
orb
mov
jmp
ret
call
jmp
push
mov
call
ret
push
call
pop
ret
testb
jne
orb
mov
jmp
ret
push
mov
call
push
lea
push
push
movl
call
add
mov
pop
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
push
mov
call
lea
push
push
push
movl
call
mov
add
mov
mov
pop
pop
ret
push
mov
pushl
pushl
push
call
mov
not
and
or
cmp
jne
xor
jmp
push
pushl
pushl
call
mov
xor
cmp
je
or
push
push
push
push
push
push
pushl
push
call
push
pop
pop
ret
pushl
pushl
pushl
push
pushl
call
ret
pushl
pushl
pushl
push
pushl
call
ret
push
mov
pushl
pushl
call
stc
mov
call
mov
pop
mov
ret
push
mov
sub
testb
push
jne
mov
mov
call
test
jne
lea
push
pushl
push
call
mov
mov
cmp
jne
mov
cmp
jne
push
pushl
call
push
add
test
je
mov
call
test
jne
mov
mov
call
test
je
push
mov
call
pop
leave
ret
push
mov
push
push
push
push
mov
push
mov
call
test
jne
mov
call
mov
mov
mov
call
cmp
je
mov
test
mov
jne
and
jmp
mov
mov
lea
push
pushl
push
pushl
push
call
pop
pop
pop
leave
ret
push
mov
cmpl
push
jne
cmpl
je
cmpl
je
cmpl
jne
mov
call
test
je
pushl
call
in
push
call
mov
test
je
push
call
push
call
cmp
je
mov
call
test
je
pushl
push
call
push
pop
jmp
xor
pop
pop
ret
mov
call
sub
push
push
push
mov
mov
push
call
mov
push
pop
lea
lea
andl
mov
mov
rep
mov
mov
mov
mov
mov
cmp
mov
mov
mov
mov
jne
mov
test
je
mov
push
call
andl
cmp
jne
lea
push
lea
push
push
call
pushl
mov
mov
pushl
push
call
cmp
mov
jne
pushl
lea
push
push
call
jmp
call
test
je
mov
mov
add
push
mov
pushl
call
mov
jmp
andl
mov
call
mov
ret
mov
push
mov
lea
pop
lea
rep
mov
pop
pop
mov
pop
leave
ret
push
push
mov
call
mov
call
lods
mov
call
jnp
mov
movswl
mov
mov
lea
pop
ret
push
mov
push
mov
call
pushl
mov
mov
pushl
pushl
call
pop
ret
mov
call
push
call
mov
cmpl
jne
cmpl
je
push
push
call
push
mov
call
pop
mov
mov
andl
test
je
push
push
push
call
jmp
xor
orl
push
mov
call
pop
mov
mov
pop
mov
leave
ret
push
push
push
call
mov
pushl
mov
call
mov
push
mov
call
mov
pop
pop
ret
push
call
mov
xor
test
je
pushl
add
call
ret
push
mov
push
mov
test
jne
xor
jmp
push
push
call
mov
push
mov
lea
call
push
mov
mov
call
push
pop
pop
pop
pop
ret
push
mov
push
mov
test
je
push
call
test
je
pushl
lea
call
andl
andl
mov
pop
pop
ret
ret
push
mov
cmpl
push
jne
push
pop
jmp
mov
push
call
test
je
cmp
jne
pushl
pushl
pushl
push
push
call
jmp
pushl
pushl
pushl
push
call
pop
pop
ret
mov
ret
mov
call
sub
push
push
push
mov
mov
mov
push
push
push
call
andl
andl
mov
mov
push
sub
pop
je
sub
je
sub
je
sub
jne
push
call
mov
lea
push
lea
push
push
call
pushl
pushl
push
push
pushl
call
mov
jne
mov
lea
push
push
call
mov
mov
pop
pop
mov
pop
leave
ret
pushl
push
push
call
push
push
call
push
call
jbe
push
call
jmp
push
call
mov
shr
push
movswl
push
push
call
xor
test
sete
jmp
pushl
call
push
mov
call
push
pushl
push
call
test
je
pushl
pushl
pushl
push
pushl
call
and
outsb
decl
mov
inc
or
inc
mov
inc
mov
inc
shr
in
decl
push
mov
pushl
call
mov
mov
call
mov
ret
push
mov
push
push
push
mov
call
mov
mov
mov
test
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
pushl
push
lea
push
pushl
pushl
call
test
je
mov
jmp
pushl
pushl
push
pushl
call
pop
pop
pop
ret
push
mov
sub
push
mov
call
cmpl
mov
je
pushl
pushl
pushl
pushl
call
icebp
jmp
mov
push
push
mov
push
mov
call
movzbl
mov
mov
test
jne
testb
jne
test
jne
cmpl
je
push
push
call
sub
jne
mov
mov
shr
test
jne
and
lea
push
push
mov
push
call
sbb
rclb
loop
push
add
add
add
add
add
into
call
mov
mov
call
mov
mov
call
cmpl
mov
jne
cmpl
jne
mov
test
je
cmpl
je
push
push
push
push
push
call
test
mov
je
call
push
push
mov
push
call
pushl
mov
sub
push
neg
sbb
inc
call
test
jne
pushl
push
push
call
jmp
call
mov
push
push
push
call
cmp
je
mov
mov
mov
andl
jmp
push
push
push
call
test
mov
je
push
call
mov
push
push
call
test
jne
pushl
push
push
push
call
push
push
call
cmp
jne
push
call
and
sub
mov
jne
mov
push
push
push
call
mov
pushl
push
push
pushl
push
call
cmpl
mov
je
pushl
call
xlat
andl
mov
pop
pop
pop
leave
ret
push
push
push
mov
call
mov
mov
cmp
je
cmpl
jne
call
aad
push
push
push
call
sbb
rorb
adc
decl
ret
push
push
mov
call
mov
call
cmpb
je
mov
test
je
push
push
call
andl
cmpl
je
andl
xor
pop
ret
push
pop
pop
ret
push
mov
sub
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
mov
mov
mov
mov
push
mov
call
test
jne
mov
mov
call
xor
jmp
push
push
call
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
push
call
mov
call
test
jne
mov
mov
call
xor
test
setne
pop
pop
leave
ret
push
mov
cmpl
jne
push
call
movl
push
pop
pop
ret
push
mov
mov
push
test
push
jne
xor
jmp
mov
pushl
mov
pushl
mov
mov
push
mov
mov
sub
sub
push
push
mov
push
or
push
push
pushl
pushl
push
call
pop
pop
pop
ret
mov
call
push
push
mov
mov
movl
andl
cmpl
je
cmp
je
cmp
je
cmp
je
cmp
je
call
mov
test
je
mov
push
call
mov
test
je
cmp
jne
andl
orl
mov
call
mov
pop
mov
leave
ret
push
mov
mov
test
je
mov
push
call
andl
mov
call
pop
ret
push
mov
sub
push
push
push
mov
call
mov
xor
cmp
je
cmp
jne
call
cmp
jne
call
cmp
jne
call
test
je
push
call
mov
cmp
jne
mov
mov
cmp
je
mov
call
mov
mov
push
test
pop
je
mov
push
call
andl
test
je
call
mov
test
je
cmpl
je
push
lea
push
push
call
mov
add
mov
mov
lea
movl
push
push
push
mov
pushl
call
leave
call
lods
push
pushl
call
mov
mov
call
push
pushl
call
cmp
jne
mov
mov
call
mov
test
je
push
push
pushl
call
mov
call
mov
mov
call
pop
pop
pop
leave
ret
cmpl
mov
je
jmp
jmp
push
mov
cmpl
jne
xor
pop
ret
push
push
push
call
pushl
lea
call
mov
mov
test
jne
pushl
call
dec
jmp
mov
call
test
mov
jne
mov
call
mov
pop
pop
pop
ret
push
mov
push
mov
mov
test
jne
mov
call
mov
test
jne
pushl
pushl
pushl
pushl
call
jmp
pushl
pushl
pushl
pushl
push
push
call
pop
pop
ret
lea
ret
push
mov
call
mov
test
je
push
pushl
call
xor
pop
ret
push
call
mov
mov
test
je
mov
test
je
push
push
push
push
call
push
jl
or
mov
je
test
je
push
call
into
test
jl
mov
push
mov
call
pop
ret
push
mov
push
push
pushl
mov
pushl
pushl
call
mov
test
je
push
push
push
call
mov
movzwl
test
mov
je
cmpl
jb
mov
orl
orl
push
push
push
push
mov
mov
push
call
test
jne
orl
mov
pop
jmp
or
pop
pop
pop
ret
push
mov
push
mov
cmpl
jne
pushl
call
test
je
mov
push
mov
call
jmp
push
pushl
call
test
jne
mov
call
pop
pop
ret
push
mov
lea
push
push
mov
mov
pushl
call
test
je
mov
jmp
mov
call
pop
pop
ret
mov
push
push
mov
pushl
call
test
jne
mov
call
pop
ret
push
mov
push
mov
mov
test
je
lea
push
call
test
je
mov
jmp
mov
call
pop
pop
ret
push
push
mov
push
pushl
call
cmp
fstpt
push
pushl
call
movmskps
enter
test
je
pushl
push
call
test
jne
jmp
push
pushl
call
jnp
inc
and
je
inc
cmp
jl
xor
pop
pop
pop
ret
pushl
call
jmp
push
mov
push
mov
cmpl
jne
push
mov
call
mov
cmp
jne
pushl
jmp
push
call
in
call
pushl
push
call
test
je
mov
push
mov
call
jmp
mov
push
push
pushl
call
test
je
push
mov
call
test
jne
mov
call
pop
pop
ret
mov
call
sub
push
push
mov
push
lea
mov
push
pushl
pushl
push
call
test
jne
push
push
call
test
jne
xor
jmp
call
xor
cmp
je
push
call
mov
call
pushl
push
call
lea
push
call
lea
movb
push
push
mov
call
orl
push
call
push
pop
mov
pop
pop
mov
pop
leave
ret
push
call
xor
push
push
call
push
mov
sub
mov
push
mov
mov
mov
push
mov
mov
call
mov
lea
sub
push
mov
mov
push
push
mov
call
pop
leave
ret
mov
call
push
push
push
mov
call
mov
mov
call
mov
call
mov
xor
mov
mov
call
test
je
mov
mov
call
push
call
ficoms
push
pushl
call
push
push
push
push
push
pushl
call
mov
call
push
mov
push
push
pushl
call
push
push
push
push
push
pushl
call
push
call
cmp
je
push
push
push
push
call
pushl
mov
pushl
pushl
pushl
push
call
test
pop
jne
push
push
push
call
orl
call
mov
call
mov
pop
pop
mov
leave
ret
mov
ret
push
mov
push
mov
mov
mov
mov
cmpl
je
cmp
je
add
jmp
cmp
jne
cmp
jb
cmp
ja
mov
jmp
xor
mov
mov
pop
pop
ret
push
mov
push
push
mov
lea
andl
mov
push
pushl
mov
pushl
pushl
call
test
jne
pushl
mov
mov
pushl
pushl
call
mov
mov
pop
leave
ret
mov
call
sub
andl
push
mov
push
push
cmp
mov
jne
pushl
mov
pushl
call
test
je
jmp
cmp
jne
mov
cmpl
je
mov
lea
push
push
pushl
mov
call
test
jne
jmp
mov
cmp
jne
push
call
push
pushl
push
call
cmp
jne
mov
shr
push
movswl
push
push
call
test
jne
mov
mov
call
mov
mov
mov
mov
and
and
push
xor
call
mov
lea
cmp
lea
mov
jne
cmp
jne
mov
push
mov
call
test
je
cmpl
jb
jmp
test
mov
mov
je
jmp
mov
mov
mov
cmp
jae
push
push
push
pushl
call
test
mov
jne
jmp
mov
push
push
push
push
call
test
mov
je
jmp
mov
mov
mov
cmp
je
push
push
add
push
push
call
test
mov
jne
mov
mov
test
mov
jne
andl
push
call
xor
mov
pop
pop
pop
mov
leave
ret
push
mov
call
mov
mov
mov
cmpl
mov
jne
call
js
dec
adc
sbb
and
add
dec
cmp
ja
jmp
pushl
call
push
jmp
pushl
jmp
mov
shr
push
movswl
push
pushl
call
jmp
push
pushl
call
jmp
lea
call
mov
andl
lea
mov
call
mov
mov
push
movb
mov
call
test
jne
mov
test
je
pushl
lea
call
test
je
mov
lea
push
push
lea
mov
push
call
andl
andl
andb
lea
mov
call
orl
lea
jmp
lea
call
mov
pushl
mov
lea
push
mov
movl
call
andl
orl
mov
lea
call
jmp
mov
shr
push
push
call
jmp
mov
shr
push
movzwl
jmp
push
mov
call
jmp
push
call
push
mov
shr
push
movzwl
push
mov
call
jmp
mov
call
jmp
pushl
jmp
mov
shr
movswl
push
movswl
push
jmp
mov
shr
push
movzwl
jmp
pushl
call
push
push
call
push
xor
cmp
sete
push
jmp
pushl
call
push
jmp
pushl
call
jmp
mov
shr
push
movzwl
push
pushl
call
jmp
pushl
jmp
push
call
jmp
mov
shr
push
movzwl
jmp
movswl
shr
movswl
push
push
pushl
call
jmp
push
pushl
call
jmp
push
call
push
jmp
mov
shr
push
push
call
jmp
mov
movswl
shr
cmpl
mov
movswl
mov
jne
push
call
push
pushl
pushl
jmp
push
push
jmp
push
pushl
mov
call
jmp
movswl
shr
movswl
push
push
jmp
mov
call
jmp
push
mov
call
jmp
mov
push
shr
push
movzwl
jmp
movswl
shr
movswl
push
push
pushl
mov
call
jmp
push
mov
pushl
call
movl
jmp
movzwl
shr
push
push
mov
mov
shr
push
movzwl
push
call
mov
jmp
push
mov
call
mov
mov
push
pushl
mov
call
mov
mov
test
je
mov
mov
push
pop
jmp
xor
inc
add
inc
add
inc
add
inc
add
in
add
in
add
in
add
inc
add
in
add
out
add
add
inc
add
inc
add
inc
add
inc
add
in
add
inc
add
in
add
in
add
in
add
in
add
in
add
out
add
out
add
out
add
out
add
out
add
inc
add
out
add
inc
add
inc
add
inc
add
inc
add
out
add
out
add
out
add
out
add
in
add
in
add
inc
add
out
add
out
add
icebp
call
movl
movl
mov
pop
ret
mov
movl
mov
ret
push
mov
sub
mov
push
push
push
movzwl
xor
mov
shr
cmp
mov
jne
cmp
je
lea
call
mov
lea
push
push
push
push
mov
mov
call
cmp
je
mov
mov
push
push
mov
pushl
push
call
pop
pop
pop
leave
ret
push
mov
call
mov
cmp
je
push
pushl
call
test
je
push
pop
jmp
cmp
jne
xor
jmp
push
mov
sub
push
push
mov
push
mov
mov
push
push
call
movzwl
mov
mov
push
mov
mov
call
mov
cmp
je
pushl
push
call
test
je
push
pop
jmp
mov
lea
push
push
movzwl
or
mov
mov
push
pushl
mov
mov
call
pop
pop
pop
leave
ret
push
push
test
je
mov
test
je
mov
push
call
push
call
mov
test
je
mov
mov
call
test
jne
pushl
jmp
mov
jmp
xor
pop
pop
ret
push
mov
push
call
test
je
mov
call
test
je
mov
jmp
push
push
push
call
test
je
push
call
jmp
push
push
push
call
pop
ret
test
je
mov
test
jne
xor
ret
push
mov
push
call
test
je
mov
push
jmp
push
call
pop
ret
push
mov
test
je
cmpl
jne
xor
pop
ret
mov
mov
call
test
jne
mov
call
mov
test
je
mov
call
test
je
mov
mov
jmp
mov
pop
ret
mov
push
test
mov
jne
call
mov
test
jne
xor
jmp
mov
pushl
push
pushl
push
call
pop
ret
push
mov
push
push
pushl
pushl
push
call
call
mov
test
je
push
call
test
je
pushl
pushl
push
call
test
jne
cmpl
push
jne
call
jmp
call
test
jne
pushl
call
mov
test
je
pushl
pushl
push
call
test
jne
push
push
call
pop
jmp
xor
pop
pop
pop
ret
push
mov
push
push
pushl
push
call
call
mov
test
je
cmpl
je
push
call
test
je
pushl
pushl
pushl
pushl
push
call
jmp
pushl
pushl
pushl
push
push
call
cmpl
je
push
call
test
je
pushl
pushl
pushl
pushl
pushl
push
call
push
push
call
pusha
jmp
pop
pop
pop
ret
xor
ret
push
mov
call
cmpl
jne
and
push
push
mov
call
push
pushl
push
call
pop
ret
push
push
mov
mov
test
je
push
call
test
je
mov
push
mov
call
test
jne
cmp
je
push
call
mov
jmp
push
pop
jmp
xor
pop
pop
ret
push
mov
push
mov
call
pushl
mov
mov
pushl
pushl
pushl
call
pop
ret
mov
call
sub
push
push
push
call
test
je
mov
lea
push
mov
call
test
jne
push
call
push
mov
call
test
je
mov
test
je
push
lea
call
mov
test
je
push
lea
call
pushl
andl
lea
mov
call
andl
orl
lea
mov
call
mov
jmp
xor
jmp
pushl
mov
call
mov
pop
pop
mov
leave
ret
push
mov
cmpl
push
je
pushl
mov
pushl
lea
push
pushl
push
call
cmp
jb
cmp
ja
test
je
mov
test
je
mov
push
pop
jmp
pushl
pushl
pushl
pushl
call
pop
pop
ret
push
mov
sub
mov
mov
cmp
push
ja
je
cmp
jb
cmp
jbe
cmp
je
cmp
jne
mov
mov
mov
mov
mov
xor
lea
push
push
movzwl
or
push
push
call
jmp
mov
xor
shr
push
or
push
push
push
call
test
je
mov
push
cmp
pop
je
mov
jmp
cmp
jb
cmp
jbe
cmp
jne
pushl
add
pushl
pushl
push
call
jmp
cmp
jb
cmp
ja
mov
add
push
mov
mov
lea
push
xor
push
push
push
mov
call
cmp
pop
jne
xor
pop
leave
ret
cmpw
push
mov
je
cmpw
jne
push
pushl
call
test
jne
mov
call
pop
ret
cmpw
jne
call
testb
jne
push
call
xor
ret
push
mov
call
mov
test
je
cmp
jne
mov
call
call
cmpb
jne
call
test
je
call
cmp
jne
push
mov
call
mov
test
je
call
mov
call
test
jne
push
push
push
push
push
pushl
call
mov
call
pop
ret
push
push
mov
call
cmpb
jne
push
mov
call
mov
call
test
je
call
cmp
jne
mov
test
je
call
andl
push
push
mov
call
pop
pop
ret
push
mov
call
mov
test
je
cmp
jne
pushl
mov
call
mov
call
test
jne
call
push
push
pushl
pushl
pushl
pushl
call
pop
ret
push
push
push
mov
call
test
jne
call
mov
test
je
pop
call
push
call
test
jl
push
call
test
jl
push
call
test
jl
push
push
push
pushl
call
mov
add
pop
mov
call
pop
pop
pop
ret
push
mov
call
cmp
jne
mov
call
mov
call
test
jne
call
push
push
pushl
pushl
pushl
pushl
call
mov
call
pop
ret
push
mov
lea
push
push
mov
mov
pushl
call
test
je
mov
jmp
mov
call
pop
pop
ret
push
mov
mov
test
je
push
call
test
jne
mov
call
pop
ret
push
mov
sub
push
push
push
push
call
mov
push
push
push
lea
push
mov
push
call
test
je
lea
push
call
imull
push
push
lea
push
push
jmp
mov
call
pop
pop
pop
leave
ret
push
mov
push
mov
mov
lea
push
call
test
je
mov
jmp
mov
call
pop
pop
ret
push
mov
push
push
push
mov
mov
lea
push
mov
call
test
je
mov
jmp
push
mov
call
test
mov
je
mov
pushl
mov
pushl
pushl
push
pushl
call
test
jne
mov
call
jmp
mov
pop
pop
pop
pop
ret
push
mov
sub
cmpl
je
cmpl
je
mov
cmp
je
test
je
cmp
je
cmp
jne
push
pushl
call
test
je
lea
push
push
pushl
call
inc
pushl
pushl
call
fwait
mov
cmp
jne
push
call
xchg
push
pushl
call
and
pop
jmp
xor
leave
ret
mov
ret
mov
call
sub
push
push
push
mov
mov
pushl
lea
push
call
call
mov
andl
andl
mov
mov
lea
mov
mov
mov
mov
lea
push
mov
call
movl
jmp
mov
ret
mov
push
push
mov
mov
call
mov
call
mov
ret
mov
mov
mov
mov
mov
pop
pop
mov
pop
leave
ret
mov
mov
andl
mov
mov
mov
ret
push
mov
sub
push
push
mov
push
mov
call
mov
mov
test
je
mov
jmp
testb
je
pushl
call
jmp
push
pushl
push
call
mov
test
je
push
push
push
push
call
pop
test
je
mov
call
sti
lea
push
pushl
call
testb
jne
test
je
push
push
push
call
test
je
test
je
xor
test
movl
jne
call
test
je
mov
lea
push
push
push
call
push
call
call
add
inc
enter
lea
push
lea
push
call
jmp
lea
push
push
call
lea
push
push
push
call
push
call
lea
push
lea
push
push
call
jmp
pushl
call
call
adc
push
push
call
lea
push
push
call
lea
push
push
push
push
push
call
mov
mov
mov
add
sub
mov
cltd
sub
sub
mov
mov
cltd
sub
mov
sar
sar
sub
mov
add
cltd
sub
mov
mov
cltd
sub
sar
sar
sub
cmp
jge
mov
jmp
mov
add
cmp
jle
sub
add
mov
cmp
jge
mov
jmp
add
cmp
jle
mov
sub
add
push
push
push
push
push
mov
push
call
pop
pop
pop
leave
ret
push
push
push
xor
cmp
mov
je
call
mov
push
pushl
push
call
or
je
push
push
call
ret
cmp
jne
xor
jmp
push
call
mov
clc
push
mov
call
pop
pop
pop
ret
push
mov
sub
push
push
mov
mov
test
movl
je
push
call
mov
test
je
inc
inc
mov
inc
inc
mov
add
cmp
mov
je
cmp
jne
mov
jmp
cmp
jne
mov
cmp
jne
orl
lea
push
push
movl
mov
push
jmp
cmp
je
cmp
jne
movzwl
push
push
push
movzwl
push
pushl
call
cmp
jne
andl
add
cmpl
jne
cmpl
pop
je
xor
push
push
push
push
push
pushl
call
mov
pop
pop
leave
ret
mov
mov
cmp
jb
cmp
jbe
cmp
jb
cmp
ja
push
call
jmp
xor
ret
sub
push
push
push
push
push
xor
testb
pop
mov
mov
mov
je
call
test
mov
je
mov
pushl
call
orl
mov
call
mov
mov
add
cmp
je
push
push
push
push
push
call
pop
test
jne
cmp
je
push
mov
call
pushl
call
mov
testb
jne
cmp
je
cmp
jne
pushl
push
push
pushl
call
outsb
testb
jne
mov
incl
push
push
push
pushl
call
sbb
mov
jmp
call
mov
mov
call
test
je
cmp
je
mov
cmp
je
cmp
jne
push
mov
call
pushl
call
mov
mov
mov
call
test
je
call
mov
push
mov
call
test
je
movl
mov
push
push
push
push
push
push
call
test
jne
jmp
push
call
or
jmp
andl
mov
pop
pop
pop
pop
add
ret
mov
and
ret
mov
mov
mov
test
je
and
mov
xor
push
push
push
pushl
push
call
ret
mov
push
mov
push
mov
call
movzwl
mov
call
jns
push
call
test
mov
jne
push
push
call
mov
push
call
pop
pop
ret
push
push
mov
push
push
call
push
push
mov
call
mov
fadds
fcoms
notb
daa
fwait
or
test
jne
mov
mov
and
cmp
jne
call
ret
jmp
pushl
call
test
je
mov
test
jne
call
outsl
or
push
push
call
mov
pop
pop
pop
ret
push
mov
sub
call
mov
mov
not
and
jne
push
pop
jmp
push
push
push
xor
push
lea
push
push
xor
call
mov
add
mov
call
mov
push
testb
mov
mov
pop
mov
mov
je
lea
movl
push
movl
call
test
je
push
pop
testb
je
orb
lea
push
movl
call
test
je
or
testb
je
lea
mov
push
movl
movl
call
test
je
or
testb
je
push
lea
push
push
mov
mov
call
test
je
or
test
je
push
lea
push
push
movl
movl
call
test
je
or
testb
je
lea
push
push
movl
call
or
andw
testb
je
lea
push
push
movl
call
or
testb
je
lea
push
push
movl
call
or
mov
test
je
push
lea
push
mov
call
or
mov
test
je
push
lea
push
movl
call
or
mov
test
je
lea
push
push
movl
call
or
mov
test
je
lea
push
push
movl
call
or
mov
test
je
push
lea
push
movl
call
or
mov
test
je
push
lea
push
movl
call
or
mov
test
je
push
lea
push
mov
call
or
mov
test
je
push
lea
push
mov
call
or
mov
test
je
push
lea
push
movl
call
or
mov
test
je
push
lea
push
movl
call
or
mov
mov
or
mov
mov
and
cmp
jne
or
or
mov
mov
pop
and
pop
pop
sub
neg
sbb
inc
leave
ret
xor
ret
mov
test
je
cmp
je
cmp
je
push
pop
ret
xor
ret
push
mov
pushl
call
test
je
mov
mov
call
mov
mov
call
mov
call
push
push
pushl
call
cmpl
jne
mov
push
pop
pop
ret
push
mov
push
mov
call
mov
pushl
push
pushl
call
andl
mov
call
pop
pop
ret
pushl
mov
call
ret
push
mov
mov
mov
cmpl
jl
mov
add
push
push
call
jmp
mov
mov
pushl
mov
call
mov
pop
ret
call
jmp
push
push
mov
call
ret
push
call
pop
ret
mov
jmp
call
jmp
push
push
mov
call
ret
push
call
pop
ret
mov
jmp
call
jmp
push
push
mov
call
ret
push
call
pop
ret
mov
jmp
call
jmp
push
push
mov
call
ret
push
call
pop
ret
mov
jmp
push
push
mov
mov
test
jne
mov
mov
jmp
push
push
pop
cmp
jg
mov
call
mov
jmp
mov
cmp
jg
mov
jmp
mov
cmp
jg
mov
jmp
mov
cmp
jg
mov
jmp
lea
push
call
pop
mov
movl
andb
mov
add
mov
pop
pop
pop
ret
mov
cmp
jne
push
mov
call
ret
cmp
jne
push
mov
jmp
cmp
jne
push
mov
jmp
cmp
push
jne
mov
jmp
call
pop
ret
push
mov
mov
lea
cmp
je
add
push
call
push
test
jg
mov
sub
call
mov
mov
pop
ret
push
mov
cmp
je
push
push
call
test
jg
mov
call
pop
ret
mov
cmpl
je
cmpl
jl
jmp
push
call
ret
push
push
mov
mov
cmpl
jle
call
pushl
mov
call
mov
inc
push
push
pushl
call
add
pop
pop
ret
push
mov
push
mov
mov
cmpl
jg
cmp
jle
mov
call
push
mov
call
pop
pop
ret
push
mov
mov
lea
cmp
je
add
push
push
call
test
jg
mov
sub
call
pop
ret
push
mov
mov
push
mov
push
add
mov
test
jne
mov
mov
mov
jmp
push
mov
push
mov
call
mov
push
add
push
pushl
call
add
pop
pop
pop
pop
ret
mov
push
mov
push
mov
push
test
mov
je
mov
shr
test
jne
movzwl
push
call
jmp
push
call
mov
test
je
push
mov
call
push
push
pushl
call
add
mov
pop
pop
pop
ret
mov
push
mov
push
mov
test
mov
je
push
call
pop
jmp
xor
test
je
push
lea
push
mov
call
inc
push
push
pushl
call
add
mov
push
call
pop
mov
pop
pop
ret
push
push
mov
mov
push
call
push
pushl
pushl
call
mov
add
mov
mov
andb
pop
pop
ret
push
push
mov
mov
mov
mov
cmp
je
cmpl
jge
add
cmp
jne
cmpl
jge
push
mov
pushl
call
jmp
mov
call
mov
mov
add
push
call
testb
add
mov
mov
test
jne
xor
jmp
push
call
push
push
mov
call
mov
pop
pop
ret
push
mov
push
push
test
mov
je
push
call
pop
jmp
xor
lea
mov
push
call
inc
push
push
pushl
call
add
mov
push
call
mov
pop
pop
pop
ret
push
mov
push
push
mov
mov
lea
test
je
push
call
push
pushl
pushl
call
mov
push
pushl
add
push
call
add
pop
pop
pop
ret
mov
call
push
push
mov
andl
push
mov
mov
mov
push
mov
mov
pop
push
mov
pushl
push
pushl
lea
call
mov
lea
push
call
mov
andb
lea
call
mov
mov
pop
mov
leave
ret
push
push
mov
mov
mov
cmpl
lea
jg
cmp
jle
push
mov
cmp
jge
mov
push
mov
call
lea
push
lea
push
pushl
call
mov
add
push
mov
call
pop
mov
pop
pop
ret
push
mov
call
mov
cmp
jne
pushl
call
mov
mov
mov
pop
andb
ret
push
push
mov
mov
push
call
mov
mov
mov
andb
mov
pop
pop
ret
push
mov
call
pushl
call
pop
pop
ret
push
xor
cmp
push
mov
jne
cmp
je
xor
jmp
push
push
pushl
push
push
pushl
push
push
call
mov
ret
jle
mov
pop
pop
ret
pushl
mov
pushl
mov
pushl
call
ret
mov
test
jne
pushl
pushl
push
call
push
call
jmp
mov
pushl
mov
call
ret
mov
test
jne
pushl
pushl
push
call
mov
mov
jmp
pushl
mov
mov
pushl
call
ret
mov
test
jne
pushl
pushl
pushl
push
call
jmp
pushl
mov
mov
pushl
call
ret
push
mov
testb
je
call
mov
pushl
mov
mov
push
call
jmp
pushl
pushl
call
out
ret
mov
test
jne
push
pushl
call
cmp
mov
mov
jmp
mov
test
jne
push
pushl
call
inc
ret
mov
mov
jmp
mov
test
jne
pushl
pushl
push
call
jmp
mov
pushl
mov
call
ret
mov
test
jne
pushl
pushl
pushl
call
jnp
adc
je
or
je
or
xchg
test
add
ret
mov
test
jne
pushl
push
call
ret
mov
mov
jmp
push
mov
mov
test
jne
pushl
pushl
pushl
pushl
pushl
pushl
push
call
jmp
pushl
mov
mov
pushl
pushl
pushl
pushl
call
pop
ret
push
mov
mov
test
jne
mov
test
je
mov
pushl
pushl
pushl
pushl
pushl
push
pushl
call
cli
jmp
pushl
mov
mov
pushl
pushl
pushl
pushl
pushl
call
pop
ret
mov
test
jne
pushl
pushl
push
call
jmp
mov
pushl
mov
call
ret
mov
test
jne
pushl
push
call
ret
mov
mov
jmp
mov
test
jne
pushl
pushl
call
jmp
mov
pushl
mov
call
ret
mov
test
jne
pushl
push
call
push
call
ret
mov
mov
jmp
push
mov
mov
mov
test
je
lea
mov
push
pushl
pushl
pushl
pushl
pushl
call
pop
ret
cmpl
je
push
pushl
pushl
push
pushl
push
call
add
ret
push
mov
test
je
cmpl
jne
pushl
call
push
mov
lea
call
test
je
mov
test
je
mov
push
mov
call
pop
ret
cmpl
jne
mov
mov
test
je
mov
push
mov
call
ret
push
mov
add
pushl
call
test
je
mov
test
je
cmp
jne
andl
mov
mov
pop
ret
push
mov
sub
push
mov
push
lea
push
push
pushl
mov
call
mov
mov
sub
cmp
jbe
mov
lea
push
call
xor
test
setg
jmp
push
mov
mov
add
push
lea
push
call
push
pushl
call
mov
mov
sub
cmp
jle
mov
push
call
xor
test
setg
pop
pop
pop
leave
ret
push
call
pushl
mov
mov
push
pushl
push
call
xchg
test
jne
and
pop
ret
mov
call
push
call
mov
cmpl
jne
cmpl
je
push
push
call
push
mov
call
pop
mov
mov
andl
test
je
push
push
push
call
jmp
xor
orl
push
mov
call
pop
mov
mov
pop
mov
leave
ret
push
call
mov
pushl
call
ret
push
call
mov
xor
test
je
pushl
add
call
ret
push
mov
push
mov
test
je
push
call
test
je
pushl
lea
call
andl
mov
pop
pop
ret
cmpl
jne
xor
ret
call
push
call
adc
ret
mov
call
pushl
mov
call
ret
cmpl
je
pushl
mov
call
test
je
mov
ret
xor
ret
mov
call
sub
push
push
xor
push
cmp
mov
je
mov
mov
call
mov
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
mov
ret
test
je
cmp
je
mov
jmp
push
pop
jmp
xor
ret
mov
movl
ret
mov
mov
mov
ret
cmpl
jle
test
je
mov
push
call
ret
push
mov
sub
mov
lea
push
lea
push
push
call
test
je
pushl
lea
pushl
push
call
jmp
cmpl
jne
movl
pushl
pushl
pushl
call
leave
ret
push
push
push
call
mov
push
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
push
call
push
mov
call
push
mov
call
mov
pop
pop
ret
push
push
push
pop
call
mov
push
call
push
mov
call
cmpl
mov
je
call
jmp
call
push
call
or
dec
mov
push
push
call
push
push
mov
call
push
push
mov
push
call
pop
pop
pop
ret
call
incl
ret
push
mov
push
push
push
call
mov
xor
mov
cmp
je
dec
cmp
mov
jne
cmp
je
cmpl
je
call
cmp
je
mov
cmp
je
push
push
call
mov
call
mov
call
mov
call
mov
call
mov
call
call
mov
push
mov
call
test
mov
je
mov
test
je
push
call
cmp
pop
jae
cmpl
je
mov
andl
test
je
push
call
pushl
mov
call
pop
pop
pushl
call
test
pop
mov
jne
cmp
je
pushl
call
pop
mov
xor
pop
cmp
pop
pop
setne
pop
ret
mov
call
push
push
mov
push
push
lea
mov
call
andl
lea
push
mov
call
push
push
mov
movb
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
mov
leave
ret
mov
call
push
push
push
push
push
mov
test
mov
mov
jne
xor
mov
pop
pop
mov
pop
leave
ret
push
lea
call
test
jne
lea
push
call
test
je
mov
mov
add
cmpl
jne
mov
jmp
push
call
mov
andl
mov
call
mov
test
jne
call
push
lea
call
pushl
orl
mov
call
mov
mov
add
cmpl
jne
mov
mov
jmp
pushl
call
push
push
call
push
mov
sub
push
mov
test
je
mov
neg
sbb
test
mov
je
push
lea
lea
mov
push
lea
push
lea
push
call
mov
add
andl
cmpl
jne
andl
mov
test
je
mov
push
call
cmpl
jne
pop
lea
call
pop
leave
ret
push
push
mov
xor
cmp
mov
jne
mov
mov
mov
jmp
push
call
pop
push
push
mov
call
mov
pop
pop
ret
mov
push
mov
mov
add
push
push
push
call
test
mov
je
push
push
call
pushl
mov
pushl
push
call
add
cmpw
jne
mov
jmp
mov
pushl
not
shr
and
mov
call
xlat
push
pop
pop
pop
ret
mov
test
je
push
call
add
and
ret
mov
cmpw
jne
add
jmp
add
mov
push
cmp
pop
jne
add
mov
cmp
jne
add
jmp
add
test
je
mov
jmp
add
test
je
mov
jmp
mov
add
test
jne
ret
push
mov
xor
push
cmpw
push
sete
mov
call
cmpw
pop
jne
mov
jmp
mov
test
je
mov
push
neg
sbb
and
inc
lea
push
call
pop
lea
pop
test
je
mov
jmp
mov
test
jbe
neg
sbb
and
add
movzwl
add
and
add
mov
cmp
jne
add
mov
cmp
jne
add
jmp
add
test
je
mov
inc
inc
jmp
add
test
je
mov
inc
inc
jmp
movzwl
dec
lea
jne
sub
pop
pop
ret
push
mov
cmpw
jne
mov
jmp
mov
test
jne
xor
pop
ret
push
call
mov
pop
mov
push
mov
xor
cmpw
push
push
push
setne
dec
and
inc
lea
mov
call
push
push
push
push
push
call
aaa
mov
push
call
push
pop
pop
ret
push
mov
sub
push
xor
cmp
mov
jne
xor
jmp
push
push
pushl
call
mov
xor
mov
cmp
sete
cmp
mov
jne
mov
jmp
mov
mov
and
neg
sbb
mov
and
inc
shl
cmp
je
orl
jmp
orl
lea
push
push
push
pushl
push
push
call
lea
push
mov
call
pop
mov
xor
mov
cmp
je
lea
push
call
pop
lea
mov
lea
and
lea
mov
and
cmpl
je
mov
jmp
mov
cmp
je
test
jbe
mov
sub
add
push
push
push
call
add
mov
mov
mov
sub
push
mov
lea
add
push
push
call
mov
sub
add
pushl
add
push
call
andl
push
pop
pop
pop
pop
leave
ret
push
mov
sub
push
push
call
sub
or
xchg
mov
call
test
jne
push
call
test
je
lea
push
push
push
call
pusha
test
je
push
lea
push
call
mov
mov
test
jge
neg
mov
push
push
call
fists
dec
pushl
call
inc
push
push
mov
push
call
cmpw
jne
mov
pushl
mov
push
call
pop
pop
pop
leave
ret
mov
mov
mov
orl
andl
movl
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
mov
mov
mov
mov
andl
movl
mov
ret
mov
call
push
push
mov
mov
movl
cmpl
movl
je
cmpl
je
call
andb
lea
call
mov
pop
mov
leave
ret
push
mov
push
push
push
mov
push
call
test
pop
je
push
mov
call
mov
jmp
xor
push
push
call
push
push
lea
push
push
call
push
pushl
call
push
push
call
test
pop
jne
test
je
mov
push
mov
call
push
call
les
aaa
pop
add
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
push
push
mov
push
mov
andl
orl
lea
and
mov
call
pushl
lea
push
call
lea
mov
push
call
mov
xor
and
sub
je
dec
je
dec
jne
mov
jmp
mov
jmp
mov
mov
push
and
pop
je
cmp
je
cmp
je
cmp
je
cmp
jne
push
pop
jmp
push
jmp
mov
jmp
xor
andl
mov
not
shr
and
movl
test
mov
je
and
neg
sbb
and
inc
inc
jmp
push
pop
push
push
lea
push
push
push
push
pushl
push
call
cmp
jne
mov
test
je
call
pop
push
mov
call
pushl
lea
mov
call
xor
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
cmpl
jne
xor
jmp
lea
push
push
pushl
pushl
pushl
push
call
test
jne
push
call
add
aad
add
mov
pop
ret
push
mov
push
push
mov
mov
test
je
lea
push
push
push
pushl
pushl
call
mov
pushl
push
call
push
call
cmp
je
pushl
push
push
call
pop
pop
pop
ret
push
pushl
push
pushl
pushl
push
call
mov
cmp
jne
push
push
call
push
call
mov
pop
ret
push
push
push
push
pushl
push
call
mov
cmp
jne
push
push
call
push
call
mov
pop
ret
mov
cmp
je
push
call
loopne
shlb
call
adc
or
mov
push
xor
mov
cmp
je
push
push
call
mov
neg
sbb
inc
orl
andl
lea
call
test
pop
pop
je
push
push
call
push
call
ret
push
mov
mov
cmp
je
push
call
add
dec
or
xchg
jmp
lcall
push
pushl
push
pushl
pushl
call
adc
call
and
addl
ret
push
pushl
push
pushl
pushl
call
les
call
insl
push
call
ret
push
mov
push
mov
pushl
call
pushl
push
call
test
pop
jne
push
call
jns
call
ret
push
push
mov
push
push
push
mov
call
mov
mov
push
push
mov
call
mov
mov
push
push
mov
call
pop
mov
pop
pop
ret
xor
ret
mov
call
sub
push
push
mov
lea
push
mov
push
push
pushl
push
call
test
jne
push
pushl
push
call
inc
xor
jmp
mov
mov
lea
xor
push
push
mov
call
push
lea
push
push
lea
push
push
push
push
pushl
push
call
test
je
testb
jne
push
call
out
testb
jne
lea
push
pushl
push
call
cmp
je
push
call
mov
call
jne
push
call
push
pop
orl
lea
call
mov
mov
pop
pop
mov
leave
ret
mov
push
push
mov
push
push
call
xor
mov
push
push
push
call
add
push
pushl
push
push
call
mov
mov
cmp
je
cmp
je
cmp
jne
mov
cmp
je
cmp
je
push
call
pop
mov
jmp
cmp
je
inc
inc
mov
cmp
je
cmp
je
cmp
je
push
call
pop
jmp
cmp
je
push
call
pop
mov
cmp
je
cmp
je
cmp
jne
cmp
je
mov
mov
push
call
pop
pop
pop
ret
mov
mov
cmp
je
cmp
je
cmp
je
push
call
pop
mov
jmp
push
mov
sub
push
push
mov
test
mov
jne
lea
movl
pushl
push
pushl
call
test
je
pushl
push
pushl
call
jmp
test
jne
push
call
inc
jmp
xor
pop
pop
leave
ret
mov
call
sub
andl
lea
push
push
call
mov
mov
push
mov
pop
lea
push
push
mov
call
push
lea
push
call
push
lea
call
mov
lea
push
call
mov
andb
lea
call
mov
mov
pop
mov
leave
ret
mov
call
sub
andl
lea
push
push
call
mov
mov
push
mov
pop
lea
push
push
mov
call
push
lea
push
call
push
lea
call
mov
lea
push
call
mov
andb
lea
call
mov
mov
pop
mov
leave
ret
push
mov
sub
andl
lea
push
call
mov
lea
push
call
mov
leave
ret
push
mov
sub
push
push
mov
push
push
push
mov
push
call
add
lea
push
pushl
push
push
call
mov
or
cmp
je
lea
push
lea
push
lea
push
push
call
xchg
add
ja
call
cmp
mov
jne
xor
jmp
mov
cmpl
jne
andb
jmp
push
call
adc
ret
je
mov
lea
push
push
lea
call
mov
push
mov
lea
push
lea
call
mov
push
mov
lea
push
lea
call
mov
mov
cmpl
jne
mov
cmpl
jne
mov
mov
push
pop
pop
pop
pop
leave
ret
cmpl
je
pushl
pushl
pushl
call
push
call
ret
mov
call
push
mov
push
push
mov
test
mov
je
mov
add
mov
mov
mov
andl
lea
push
lea
call
mov
movb
cmpl
jne
push
lea
call
mov
pushl
add
push
lea
push
call
pushl
pushl
pushl
call
xlat
andb
lea
call
orl
lea
call
mov
push
pop
pop
pop
mov
leave
ret
mov
call
push
push
push
push
call
mov
pop
mov
andl
test
je
mov
call
mov
lea
mov
mov
pushl
mov
mov
movb
movl
mov
call
jmp
xor
orl
lea
push
push
mov
call
pop
mov
mov
cmp
ja
je
cmp
ja
je
cmp
ja
je
cmp
ja
jmp
xor
jmp
push
jmp
push
jmp
cmp
ja
je
cmp
ja
je
sub
je
dec
je
dec
dec
je
dec
jne
push
jmp
push
jmp
sub
je
dec
je
dec
dec
je
dec
dec
jne
push
jmp
add
cmp
ja
jmp
push
jmp
push
jmp
cmp
ja
je
cmp
ja
je
sub
je
dec
je
dec
je
dec
je
dec
je
jmp
sub
je
dec
dec
je
sub
je
dec
je
dec
dec
jne
push
pop
ret
push
jmp
mov
cmp
ja
je
cmp
ja
je
sub
je
sub
je
dec
je
dec
je
dec
jne
push
jmp
push
jmp
sub
je
dec
je
dec
je
sub
je
jmp
mov
cmp
ja
je
sub
je
sub
je
sub
je
sub
je
sub
jne
jmp
push
jmp
push
jmp
sub
je
sub
je
dec
dec
je
sub
je
dec
dec
jne
jmp
sub
je
dec
je
dec
je
dec
dec
je
push
jmp
xor
inc
add
sbb
ds
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
sbb
loop
inc
add
sbb
loop
inc
add
sbb
clc
pop
inc
add
sbb
loop
inc
add
sbb
test
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
inc
add
pop
inc
add
pop
inc
add
sbb
repnz
inc
add
pop
inc
add
pop
inc
add
sbb
push
push
push
or
call
mov
call
pushl
mov
pushl
pushl
pushl
call
test
je
test
je
mov
mov
call
test
je
mov
mov
call
test
jne
mov
test
je
mov
call
mov
mov
call
jmp
mov
mov
call
mov
call
pop
mov
pop
pop
ret
mov
push
push
push
pushl
call
ret
mov
xor
movl
mov
mov
mov
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
mov
call
push
call
mov
cmpl
jne
cmpl
je
push
push
call
push
mov
call
pop
mov
mov
andl
test
je
push
push
push
call
jmp
xor
orl
push
mov
call
pop
mov
mov
pop
mov
leave
ret
push
call
mov
pushl
call
ret
push
push
mov
mov
test
jne
xor
jmp
push
call
push
lea
mov
call
mov
mov
pushl
mov
call
push
pop
pop
pop
ret
push
mov
push
mov
test
je
push
call
test
je
pushl
lea
call
mov
mov
call
andl
mov
pop
pop
ret
mov
call
push
mov
movl
andl
cmpl
je
call
push
push
call
mov
mov
leave
ret
mov
mov
ret
mov
mov
ret
andl
ret
andl
ret
push
push
mov
xor
push
pop
call
mov
test
je
push
call
mov
mov
cmp
je
push
call
test
je
or
pop
mov
pop
pop
ret
push
mov
push
push
call
mov
push
cmp
pop
je
pushl
push
call
mov
test
je
test
je
pushl
push
call
test
je
push
pop
jmp
xor
pop
pop
ret
push
push
push
mov
pushl
call
fisttps
pop
or
add
dec
or
push
call
mov
test
je
push
push
call
push
call
pop
pop
pop
ret
push
mov
push
mov
xor
push
mov
call
das
cmp
je
test
je
mov
push
push
call
mov
test
je
test
jne
xor
jmp
mov
push
push
call
push
call
pop
pop
pop
ret
push
mov
or
push
mov
push
call
cmp
je
pushl
push
call
mov
test
je
pushl
push
call
pop
pop
ret
push
mov
or
push
mov
call
mov
dec
or
je
or
call
mov
test
je
pushl
push
call
pop
pop
ret
push
mov
xor
push
mov
pop
call
cmp
je
pushl
push
call
mov
test
je
pushl
push
call
pop
pop
ret
push
mov
push
push
push
mov
push
pop
call
mov
cmp
je
lea
push
pushl
pushl
push
call
mov
test
je
lea
push
pushl
pushl
push
call
mov
mov
pop
pop
mov
mov
mov
leave
ret
push
mov
push
push
push
mov
push
push
call
mov
cmp
je
lea
push
pushl
pushl
push
call
mov
test
je
lea
push
pushl
pushl
push
call
mov
mov
pop
pop
mov
mov
mov
leave
ret
push
mov
push
push
push
mov
push
pop
call
mov
cmp
je
lea
push
pushl
pushl
push
call
mov
test
je
lea
push
pushl
pushl
push
call
mov
mov
pop
pop
mov
mov
mov
leave
ret
push
mov
push
push
push
mov
push
call
xor
or
dec
clc
push
pushl
pushl
pushl
pushl
push
call
mov
test
je
lea
push
pushl
pushl
pushl
pushl
push
call
mov
mov
pop
pop
mov
mov
mov
leave
ret
push
mov
push
push
push
mov
push
pop
call
mov
cmp
je
lea
push
pushl
pushl
push
call
mov
test
je
lea
push
pushl
pushl
push
call
mov
mov
pop
pop
mov
mov
mov
leave
ret
push
mov
push
push
push
mov
push
call
pushf
mov
cmp
je
lea
push
pushl
pushl
pushl
pushl
push
call
mov
test
je
lea
push
pushl
pushl
pushl
pushl
push
call
mov
mov
pop
pop
mov
mov
mov
leave
ret
pushl
pushl
push
call
ret
push
mov
sub
push
lea
push
mov
push
pushl
call
loope
inc
lock
pushl
call
cmp
clc
call
pop
push
pushl
call
mov
call
and
pushl
call
pushl
mov
call
pop
push
pushl
call
pop
push
pushl
call
mov
pop
pop
leave
ret
push
mov
sub
push
lea
push
mov
push
pushl
push
call
lea
push
pushl
call
sub
jne
call
pop
push
pushl
call
mov
push
call
pop
push
pushl
call
pushl
mov
call
pop
push
pushl
call
pop
push
pushl
call
mov
pop
pop
leave
ret
mov
call
push
push
mov
mov
call
mov
andl
test
movl
je
mov
push
mov
push
call
push
mov
call
test
jne
call
mov
mov
pop
mov
leave
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
mov
call
push
push
mov
mov
movl
andl
call
push
pushl
call
lock
mov
call
mov
pop
mov
leave
ret
mov
call
push
push
mov
mov
call
mov
andl
test
movl
je
mov
push
mov
call
mov
adc
shlb
out
add
add
pop
mov
leave
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
mov
call
push
push
mov
mov
movl
andl
call
push
pushl
push
call
orl
mov
call
mov
pop
mov
leave
ret
mov
call
push
push
mov
mov
call
mov
andl
movl
lea
mov
push
push
mov
push
call
push
mov
call
test
jne
call
mov
mov
pop
mov
leave
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
mov
call
push
push
mov
mov
movl
andl
lea
push
pushl
push
call
mov
call
orl
mov
call
mov
pop
mov
leave
ret
mov
call
push
call
mov
cmpl
jne
cmpl
je
push
push
call
push
mov
call
pop
mov
mov
andl
test
je
push
push
push
call
jmp
xor
orl
push
mov
call
pop
mov
mov
pop
mov
leave
ret
push
call
mov
pushl
call
ret
push
mov
push
mov
test
je
push
call
test
je
pushl
lea
call
andl
mov
pop
pop
ret
cmpl
jne
xor
ret
call
push
push
call
ret
push
mov
push
lea
push
push
movl
call
push
mov
sub
cmpl
je
push
pushl
push
call
and
cmp
je
xor
jmp
lea
push
push
pushl
call
mov
pushf
lahf
inc
add
inc
jp
add
fcomps
rolb
or
push
mov
sub
lea
push
push
pushl
call
sti
pushl
lea
push
call
popa
neg
sbb
inc
leave
ret
push
mov
sub
push
lea
push
push
pushl
call
pop
call
push
pushl
call
mov
test
je
push
push
call
cmp
je
push
push
push
call
test
je
lea
push
push
call
jbe
jne
lea
pushl
push
call
add
add
mov
jmp
xor
pop
pop
leave
ret
push
mov
sub
push
pushl
call
mov
mov
cmp
ja
push
lea
push
pushl
push
call
cmp
jne
pushl
lea
push
call
inc
test
je
pushl
pushl
call
fwait
pop
leave
ret
push
mov
mov
test
je
push
push
call
andl
pop
ret
push
mov
test
je
push
push
call
and
mov
dec
test
je
push
lea
push
call
xchg
dec
jne
pop
push
call
inc
pop
ret
push
call
mov
test
je
mov
test
je
push
call
pop
mov
lea
cmp
ja
pushl
call
andl
pop
jmp
sub
sub
push
pushl
call
pop
pop
push
pop
pop
ret
call
xor
pop
ret
mov
call
push
push
mov
push
mov
mov
push
lea
mov
push
mov
call
mov
orl
push
mov
pop
xor
not
test
mov
mov
mov
mov
mov
mov
je
movl
jmp
movl
mov
mov
mov
mov
mov
movl
cmp
mov
jge
mov
mov
jmp
mov
mov
cmp
mov
jne
mov
push
push
push
push
mov
call
cmp
mov
jne
pushl
call
pop
mov
mov
jmp
mov
mov
mov
add
testb
mov
je
mov
mov
mov
mov
pop
pop
pop
mov
leave
ret
mov
call
push
push
mov
mov
andl
cmpl
je
testb
jne
call
mov
call
orl
lea
call
mov
pop
mov
leave
ret
push
push
mov
xor
cmp
mov
jne
pushl
call
pop
mov
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
pop
pop
ret
push
mov
call
andl
pop
ret
push
mov
push
push
push
mov
push
mov
test
jne
xor
jmp
mov
push
mov
sub
cmp
jae
mov
push
push
pushl
call
add
add
add
sub
je
mov
xor
divl
mov
sub
andl
mov
mov
pushl
mov
pushl
call
add
add
sub
test
jbe
cmpl
ja
sub
cmp
jne
xor
cmp
jne
mov
mov
cmp
ja
mov
mov
mov
mov
pushl
mov
pushl
call
add
sub
add
test
jbe
cmpl
jbe
cmp
jb
mov
mov
lea
mov
jmp
mov
lea
lea
push
mov
push
pushl
push
call
mov
mov
mov
sub
cmp
jae
mov
push
push
pushl
call
add
add
sub
mov
pop
sub
pop
pop
leave
ret
push
mov
push
mov
push
push
test
mov
je
mov
mov
sub
cmp
jae
mov
push
pushl
push
call
add
add
add
sub
je
mov
call
mov
xor
divl
mov
mov
mov
sub
push
pushl
call
add
sub
cmpl
je
mov
lea
lea
push
mov
push
pushl
push
call
mov
mov
push
pushl
pushl
call
add
add
pop
pop
pop
pop
ret
push
mov
push
testb
je
mov
mov
cmp
je
mov
sub
push
push
mov
call
mov
mov
jmp
mov
mov
push
xor
cmp
lea
jne
cmp
je
mov
sub
push
push
mov
call
jmp
cmp
je
mov
push
push
sub
mov
push
push
push
call
pop
mov
lea
push
push
pushl
mov
push
call
mov
pop
mov
pop
pop
ret
mov
push
test
je
cmp
je
mov
push
push
call
pop
ret
call
mov
mov
mov
call
test
mov
jne
call
pop
ret
call
pop
ret
push
push
mov
push
call
mov
add
mov
test
jle
pushl
call
ret
jle
cmpl
jne
mov
jmp
pushl
andl
push
call
push
call
pop
pop
ret
mov
test
je
mov
jmp
push
pop
ret
mov
test
je
mov
pushl
call
ret
mov
pushl
mov
call
ret
mov
test
jne
mov
push
mov
call
jmp
mov
pushl
call
ret
mov
test
je
mov
pushl
call
jmp
xor
ret
mov
push
lea
push
lea
mov
mov
mov
mov
push
call
test
jne
mov
push
mov
call
push
pop
pop
pop
ret
push
call
mov
test
je
mov
mov
call
test
je
mov
test
je
mov
pushl
call
pop
ret
push
mov
sub
push
push
push
xor
mov
push
mov
call
lea
push
push
call
xor
cmp
mov
je
push
push
push
pushl
push
call
cmp
je
mov
jmp
cmp
je
lea
cmp
mov
je
mov
mov
mov
cmp
je
add
mov
mov
test
jne
mov
and
cmp
jbe
cmp
jbe
cmp
ja
or
test
je
mov
jmp
lea
push
push
push
lea
call
in
push
push
pushl
pushl
call
test
mov
je
mov
mov
cmpl
je
push
pushl
call
mov
push
call
mov
pop
pop
pop
leave
ret
push
mov
call
mov
test
je
pushl
mov
mov
pushl
pushl
call
jmp
pushl
xor
pushl
pushl
call
pop
ret
mov
call
push
mov
mov
pushl
andl
lea
call
mov
cmp
jne
mov
push
push
pushl
pushl
call
orl
lea
mov
call
mov
mov
pop
mov
leave
ret
push
mov
push
mov
push
push
test
mov
jne
call
test
jne
call
test
jne
xor
test
mov
mov
je
push
mov
call
test
jne
test
jne
test
je
push
call
push
and
test
je
test
je
push
call
mov
je
push
push
mov
call
jmp
mov
test
je
push
push
call
lret
test
je
push
call
mov
jmp
andl
mov
pop
pop
pop
pop
ret
call
mov
ret
push
mov
lea
push
mov
push
pushl
mov
call
cmpl
jne
call
mov
andl
mov
pop
pop
ret
push
push
mov
cmpl
jne
mov
pushl
mov
call
push
mov
call
test
jne
call
jmp
pushl
mov
call
cmp
je
push
mov
call
pop
pop
ret
push
push
push
push
push
mov
call
add
or
mov
xor
mov
cmp
je
push
push
push
push
call
test
jne
push
call
mov
cmp
jne
push
call
mov
cmp
je
push
push
push
push
call
test
jne
push
call
jmp
mov
call
cmp
jne
xor
jmp
mov
push
push
call
mov
push
cmp
je
push
push
push
call
test
jne
push
call
jmp
mov
push
push
pushl
call
pop
pop
pop
pop
pop
ret
push
mov
mov
test
je
cmp
je
call
mov
push
pushl
mov
mov
call
pop
ret
mov
call
pop
ret
push
mov
sub
push
mov
cmpl
je
pushl
call
mov
test
je
push
lea
push
push
push
push
pushl
push
call
jne
mov
call
jo
rolb
jmp
pushl
lea
push
push
push
call
add
lea
pushl
push
pushl
pushl
call
jecxz
leave
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
mov
call
mov
andl
mov
mov
neg
sbb
andl
not
and
movl
mov
mov
mov
mov
mov
pop
ret
mov
call
push
push
mov
push
mov
movl
xor
cmp
mov
je
call
orl
mov
mov
mov
mov
mov
call
mov
pop
pop
mov
leave
ret
pushl
call
pop
ret
pushl
pushl
call
pop
pop
ret
mov
push
mov
push
mov
mov
mov
shr
rep
mov
mov
and
rep
pop
pop
ret
pushl
call
pop
ret
mov
ret
push
mov
push
mov
push
mov
cmp
jbe
cmpl
jne
call
cmp
jae
mov
add
cmp
jb
mov
test
jne
mov
push
mov
call
jmp
mov
push
push
mov
call
mov
test
jne
call
mov
mov
pop
pop
pop
ret
push
push
mov
mov
cmp
jbe
mov
push
call
cmp
jae
mov
mov
pop
pop
ret
push
push
mov
mov
test
je
mov
mov
cmp
jbe
xor
jmp
lea
cmp
jbe
sub
mov
mov
mov
add
push
push
mov
pushl
call
add
mov
pop
pop
ret
push
push
mov
mov
test
je
mov
add
cmp
jbe
mov
push
call
mov
mov
add
push
pushl
push
mov
call
add
mov
cmp
jbe
mov
pop
pop
ret
push
mov
cmpl
push
push
mov
mov
jne
mov
jmp
cmpl
je
cmpl
jne
mov
add
test
jge
push
push
push
call
mov
mov
jmp
or
pop
pop
pop
ret
ret
push
mov
push
xor
mov
mov
cmp
mov
mov
mov
je
cmp
je
mov
push
call
mov
pop
pop
ret
mov
jmp
call
ret
call
xor
ret
push
mov
push
mov
push
cmp
mov
jne
push
pop
jmp
cmp
jne
mov
add
mov
cmp
jbe
mov
xor
jmp
push
mov
cmp
jne
mov
add
cmp
jbe
mov
push
mov
call
mov
mov
add
cmp
mov
jne
mov
mov
add
cmp
jae
mov
add
mov
mov
jmp
cmp
jne
mov
sub
mov
mov
add
cmp
jae
mov
mov
add
mov
mov
sub
add
mov
pop
sub
pop
pop
pop
ret
push
mov
sub
lea
push
push
pushl
call
test
je
pushl
lea
pushl
push
pushl
call
leave
ret
push
mov
push
push
mov
xor
push
mov
cmp
je
mov
cmp
jne
mov
cmp
jl
cmp
jle
cmp
jl
cmp
jg
cmp
jle
movsbl
sub
jmp
movsbl
sub
inc
inc
cmp
jge
mov
mov
test
je
push
call
add
jmp
movzbl
testb
je
inc
inc
inc
inc
cmpb
jne
push
mov
mov
call
mov
cmpb
je
mov
cmp
jne
mov
cmp
jl
cmp
jle
cmp
jl
cmp
jg
cmp
jle
movsbl
sub
jmp
movsbl
sub
inc
inc
cmp
jl
movb
inc
jmp
mov
mov
test
je
push
push
push
call
push
call
add
jmp
movzbl
testb
je
mov
inc
inc
mov
mov
inc
inc
jmp
sub
mov
push
call
pop
pop
pop
pop
ret
lea
push
push
pushl
pushl
call
ret
mov
call
push
push
mov
mov
movl
andl
call
orl
mov
call
mov
pop
mov
leave
ret
push
mov
cmpl
je
pushl
pushl
pushl
pushl
call
jmp
mov
pushl
call
push
pop
pop
ret
mov
call
push
push
mov
mov
movl
andl
call
orl
mov
call
mov
pop
mov
leave
ret
xor
ret
ret
push
mov
mov
sub
je
dec
je
dec
je
sub
je
pushl
pushl
pushl
pushl
call
jmp
mov
pushl
call
mov
mov
jmp
mov
pushl
call
jmp
mov
pushl
call
jmp
mov
pushl
call
push
pop
pop
ret
mov
call
push
push
mov
mov
movl
andl
call
orl
mov
call
mov
pop
mov
leave
ret
call
xor
cmp
sete
mov
ret
call
mov
ret
jmp
andl
andl
mov
mov
mov
ret
jmp
push
push
call
push
call
mov
test
je
call
cmp
je
call
test
jne
call
cmp
jne
push
push
call
mov
jmp
andl
pop
pop
ret
push
call
ret
jmp
push
call
pop
mov
ret
push
mov
push
push
push
mov
push
test
je
pushl
call
lods
mov
cmp
jge
cmp
je
mov
push
mov
call
pushl
mov
call
mov
push
mov
call
jmp
push
call
push
pushl
call
push
mov
pushl
call
jmp
mov
mov
mov
pop
call
push
mov
push
mov
pushl
call
pushl
mov
push
pushl
call
mov
pop
pop
pop
leave
ret
push
mov
push
push
push
mov
push
test
je
pushl
call
stc
mov
cmp
jge
cmp
je
mov
push
mov
call
pushl
mov
call
mov
push
mov
call
jmp
call
push
pushl
call
push
mov
pushl
call
jmp
mov
mov
mov
mov
push
push
pushl
push
call
mov
call
push
mov
pushl
pushl
call
mov
pop
pop
pop
leave
ret
mov
movl
ret
push
mov
call
testb
je
push
call
mov
pop
ret
mov
call
push
push
push
mov
push
mov
call
xor
movl
cmp
mov
je
pushl
call
pop
mov
jmp
mov
call
mov
push
lea
call
mov
call
in
inc
sub
dec
fisttpll
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
pop
pop
pop
mov
leave
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
mov
test
je
cmpl
lea
jne
mov
andl
mov
test
je
mov
push
call
jmp
andl
push
pop
ret
push
pop
ret
mov
call
push
push
push
mov
mov
movl
mov
xor
cmp
mov
je
mov
push
call
mov
cmp
je
mov
push
call
call
cmp
jne
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
push
call
mov
cmp
je
push
call
mov
push
push
call
cmp
je
push
call
mov
cmp
je
push
call
mov
pop
cmp
je
mov
push
call
call
mov
cmp
jne
mov
cmp
jne
mov
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
orl
add
mov
mov
call
mov
pop
pop
mov
leave
ret
push
mov
mov
test
je
mov
call
mov
test
je
push
push
push
mov
call
pop
ret
push
mov
mov
test
je
cmpl
je
call
cmpb
jne
mov
call
mov
test
je
call
mov
pop
ret
mov
ret
call
jmp
ret
push
call
pop
ret
mov
jmp
jmp
mov
call
push
push
call
mov
mov
xor
cmp
mov
je
call
mov
mov
leave
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
mov
call
push
push
mov
mov
call
xor
mov
mov
movl
mov
mov
call
mov
mov
pop
mov
leave
ret
push
mov
push
xor
lea
mov
push
mov
mov
mov
mov
mov
push
call
mov
mov
movl
pop
pop
ret
mov
ret
mov
call
push
push
call
mov
mov
xor
cmp
mov
je
call
mov
mov
leave
ret
push
call
test
je
movl
ret
xor
ret
push
call
test
je
movl
ret
xor
ret
push
mov
call
testb
je
push
call
mov
pop
ret
push
mov
call
testb
je
push
call
mov
pop
ret
push
mov
sub
push
push
push
push
call
movswl
shr
movswl
cmp
mov
jle
push
pop
lea
lea
cltd
sub
sar
mov
mov
sar
shl
add
sub
cmp
jle
push
pop
push
pop
cmp
jle
mov
push
lea
push
push
call
mov
add
add
movl
sar
imul
add
movl
lea
mov
mov
movzbw
shl
incl
xor
not
mov
mov
mov
add
decl
jne
lea
push
push
push
pushl
push
call
clc
pop
pop
test
mov
pop
jne
push
push
push
call
mov
leave
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
call
push
push
call
pop
mov
mov
xor
cmp
mov
je
call
mov
mov
leave
ret
mov
ret
mov
call
push
push
mov
call
mov
mov
xor
cmp
mov
je
mov
call
movl
mov
mov
pop
mov
leave
ret
push
mov
call
testb
je
push
mov
call
mov
pop
ret
jmp
mov
ret
call
jmp
push
push
mov
call
ret
push
call
pop
ret
testb
jne
orb
mov
jmp
ret
mov
call
push
push
call
mov
mov
xor
cmp
mov
je
call
mov
mov
leave
ret
push
push
xor
cmp
je
push
pop
jmp
push
mov
call
mov
cmp
jne
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
pushl
call
test
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
cmp
jne
xor
jmp
call
pushl
call
pop
pop
ret
mov
orl
orl
movl
ret
push
mov
call
testb
je
push
call
mov
pop
ret
mov
call
push
push
mov
push
mov
movl
mov
andl
lea
test
je
mov
call
mov
test
je
mov
push
call
mov
pop
call
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
pop
mov
pop
pop
mov
leave
ret
push
mov
call
ret
call
jmp
ret
push
call
pop
ret
mov
jmp
mov
xor
lea
mov
mov
mov
mov
mov
mov
orl
lea
mov
mov
mov
mov
movl
movl
movl
mov
mov
movl
movl
ret
push
mov
call
testb
je
push
call
mov
pop
ret
mov
call
push
push
mov
push
mov
movl
mov
movl
test
je
mov
push
call
mov
lea
test
je
mov
lea
push
call
mov
test
je
mov
push
call
andb
lea
call
mov
pop
pop
mov
leave
ret
jmp
mov
andl
andl
movl
movl
movl
ret
push
mov
call
testb
je
push
call
mov
pop
ret
mov
call
push
push
push
mov
mov
movl
mov
andl
push
test
pop
je
mov
push
call
mov
test
je
mov
push
call
mov
test
je
mov
push
call
mov
test
je
mov
push
call
mov
test
je
mov
push
call
mov
test
je
cmpl
je
call
push
call
pop
mov
jmp
mov
test
je
mov
push
call
mov
test
je
mov
push
call
mov
test
je
mov
push
call
mov
pop
pop
mov
leave
ret
call
jmp
ret
push
call
pop
ret
mov
jmp
push
mov
call
mov
test
jne
push
mov
call
ret
call
add
push
mov
call
ret
push
mov
lea
push
call
mov
mov
test
je
mov
push
call
andl
mov
test
je
mov
push
call
andl
pop
ret
push
push
call
mov
test
je
push
mov
call
movl
mov
pop
ret
xor
pop
ret
push
mov
call
testb
je
push
call
mov
pop
ret
jmp
push
call
test
pop
je
movl
andl
ret
xor
ret
mov
ret
mov
call
test
je
andl
movl
ret
xor
ret
push
mov
call
testb
je
push
mov
call
mov
pop
ret
mov
call
push
mov
movl
andl
call
mov
mov
leave
ret
mov
ret
call
jmp
push
push
mov
call
ret
push
call
pop
ret
testb
jne
orb
mov
jmp
ret
mov
ret
call
jmp
push
push
mov
call
ret
push
call
pop
ret
mov
jmp
mov
ret
call
jmp
push
push
mov
call
ret
push
call
pop
ret
mov
jmp
push
call
test
pop
je
mov
call
ret
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
call
test
pop
je
movl
andl
ret
xor
ret
mov
ret
mov
ret
push
mov
call
mov
test
je
mov
call
movl
mov
pop
ret
xor
pop
ret
push
mov
call
testb
je
push
mov
call
mov
pop
ret
jmp
mov
ret
mov
call
test
je
andl
movl
ret
xor
ret
push
mov
call
testb
je
push
mov
call
mov
pop
ret
mov
call
push
mov
movl
andl
call
mov
mov
leave
ret
mov
ret
call
jmp
push
push
mov
call
ret
push
call
pop
ret
testb
jne
orb
mov
jmp
ret
call
jmp
push
push
mov
call
ret
push
call
pop
ret
testb
jne
orb
mov
jmp
ret
mov
ret
mov
mov
push
mov
mov
mov
pop
ret
mov
test
jne
xor
jmp
push
mov
xor
cmp
jne
mov
mov
mov
jmp
test
je
mov
push
mov
cmp
je
mov
test
jne
test
pop
je
mov
mov
push
pop
pop
ret
push
pushl
push
push
call
mov
test
jne
call
mov
pop
ret
cmpl
je
pushl
call
mov
add
icebp
xor
mov
mov
movl
mov
movl
mov
mov
call
inc
cmp
mov
jne
call
lea
push
push
call
mov
pop
ret
push
mov
push
mov
cmp
je
push
call
jne
inc
adc
shlb
add
add
into
call
test
mov
jne
mov
test
je
push
push
call
mov
push
call
js
call
cmp
push
call
pop
pop
ret
push
push
push
push
mov
push
lea
push
mov
push
call
mov
mov
cmp
jge
mov
testb
je
push
pop
cmp
jle
mov
add
testb
je
inc
add
cmp
jl
cmp
jl
mov
add
test
push
jne
mov
shl
push
push
push
call
jmp
push
call
loope
fcoms
call
mov
push
shl
push
push
call
popf
mov
mov
test
jne
pushl
push
call
push
call
pushl
call
jmp
pushl
call
mov
mov
mov
imul
add
lea
shl
push
push
push
call
add
mov
mov
pop
cmp
jl
lea
mov
mov
orl
pushl
lea
lea
mov
call
push
mov
pop
pop
pop
pop
pop
ret
push
mov
push
push
push
push
mov
lea
push
mov
call
fimuls
or
pop
or
mov
mov
test
je
mov
push
call
mov
andl
mov
test
jne
mov
pushl
andl
lea
push
call
pop
pop
pop
leave
ret
push
mov
push
push
push
mov
push
pushl
call
es
test
je
mov
lea
cmp
jl
cmpl
je
jmp
push
call
test
je
movl
mov
jmp
xor
andl
andl
lea
lea
push
mov
call
push
push
lea
call
lea
push
call
inc
mov
test
jne
mov
shl
push
push
call
jae
adc
shl
push
push
push
call
test
mov
jne
call
mov
mov
imul
add
shl
push
mov
push
lea
push
call
mov
add
mov
push
pushl
push
call
mov
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
call
testb
je
push
call
mov
pop
ret
ret
push
mov
push
push
push
mov
push
push
mov
pop
cmp
mov
jle
mov
test
je
mov
cmp
je
mov
cmpl
je
andl
jmp
mov
mov
test
je
mov
push
call
mov
andl
inc
cmp
jl
cmpl
je
lea
push
push
call
push
lea
call
push
push
call
pushl
call
aas
test
je
mov
push
mov
call
push
pushl
push
call
pop
pop
pop
leave
ret
push
push
mov
lea
push
push
call
cmpl
jne
pushl
push
call
test
je
pushl
mov
push
call
jmp
mov
test
je
push
pushl
mov
mov
push
call
test
mov
jne
pop
push
call
jl
pop
ret
push
push
mov
cmpl
jne
mov
test
jne
mov
mov
test
je
call
mov
jmp
xor
mov
call
mov
mov
mov
pushl
call
loope
shlb
or
mov
mov
jmp
xor
test
jne
call
mov
mov
push
pushl
call
mov
pop
pop
ret
push
mov
mov
test
je
mov
test
je
push
call
andl
pop
ret
mov
call
push
push
push
push
push
mov
xor
mov
cmp
jne
push
call
mov
cmp
jne
call
mov
orl
push
call
mov
mov
pop
pop
mov
pop
leave
ret
push
call
xor
push
push
call
push
mov
push
cmpl
je
mov
mov
mov
mov
cmpl
je
mov
mov
push
call
leave
ret
mov
test
je
pushl
pushl
call
ret
cmpl
je
decl
jne
mov
test
je
call
andl
ret
push
mov
sub
push
push
lea
push
mov
xor
push
push
push
mov
push
push
mov
mov
mov
mov
push
call
test
jne
lea
push
lea
push
push
push
push
push
push
pushl
pop
call
pushl
call
test
jne
lea
push
lea
push
mov
push
push
push
push
push
pushl
pushl
call
cmp
pop
call
je
pushl
call
cmp
je
pushl
call
mov
pop
pop
pop
leave
ret
push
mov
push
push
push
xor
push
mov
call
mov
cmp
jne
xor
jmp
lea
push
lea
push
push
push
push
push
push
pushl
push
push
call
push
push
call
mov
pop
pop
leave
ret
mov
ret
call
jmp
push
push
mov
call
ret
push
call
pop
ret
mov
jmp
mov
ret
call
jmp
push
push
mov
call
ret
push
call
pop
ret
mov
jmp
cmpl
push
jne
push
pop
mov
push
call
cmp
jae
test
je
mov
jmp
andl
push
call
ret
mov
pop
ret
cmpl
je
decl
cmpl
jne
push
push
push
push
call
push
call
mov
mov
cmpl
je
push
call
decl
add
add
cmp
jl
pop
pop
pop
ret
push
xor
cmp
jne
call
cmp
jne
push
push
mov
cmp
call
enter
clc
popl
jne
push
mov
push
call
cmpl
jne
lea
lea
push
push
call
incl
push
push
call
pop
lea
lea
push
call
pop
pop
pop
ret
cmpl
jne
mov
lea
lea
push
call
pop
ret
call
jmp
mov
jmp
push
call
pop
ret
mov
jmp
cmpl
je
push
call
cmc
push
call
inc
push
mov
call
inc
movl
mov
pop
ret
push
call
lret
call
push
mov
call
andl
mov
pop
ret
push
push
push
mov
call
mov
mov
movzbl
movzbl
shl
add
mov
mov
shr
cmp
mov
sbb
pop
inc
xor
sub
cmp
mov
mov
mov
mov
je
push
push
call
cmp
sbb
inc
mov
mov
call
mov
mov
call
pop
call
push
push
call
push
push
mov
call
mov
xor
cmp
mov
mov
pop
setne
inc
mov
mov
mov
pop
pop
ret
mov
call
push
push
mov
mov
movl
mov
andl
test
je
push
call
mov
test
je
push
push
call
mov
pop
mov
leave
ret
mov
call
push
mov
movl
mov
andl
test
je
mov
test
je
call
mov
mov
leave
ret
push
mov
call
ret
call
jmp
ret
push
call
pop
ret
mov
jmp
call
jmp
ret
push
call
pop
ret
mov
jmp
mov
ret
push
mov
sub
lea
push
push
call
push
call
mov
inc
in
sbb
neg
leave
ret
jmp
call
mov
ret
mov
ret
mov
ret
mov
ret
push
pop
call
push
call
or
push
call
call
mov
mov
mov
call
mov
test
je
mov
mov
mov
mov
mov
mov
mov
mov
call
call
cmpb
pop
jne
call
push
pop
ret
push
mov
sub
push
push
push
mov
call
mov
mov
mov
mov
mov
mov
lea
push
push
pushl
push
call
lea
push
push
call
andb
pop
pop
mov
lea
push
push
lea
push
call
xor
cmp
jne
lea
push
call
pop
mov
cmp
jne
lea
push
push
push
call
test
je
lea
push
jmp
pushl
call
pop
mov
mov
mov
cmp
lea
jne
mov
push
push
call
lea
push
call
mov
andb
pop
cmpl
jne
lea
push
push
call
dec
lea
push
call
pop
mov
pop
pop
pop
leave
ret
push
mov
push
mov
cmpb
je
mov
cmp
je
cmp
je
cmp
jne
push
call
pop
mov
push
call
pop
mov
jmp
cmpl
jne
push
call
inc
jmp
pushl
push
pushl
call
fnstenv
rcrb
or
mov
ret
jmp
mov
jmp
push
push
call
stos
mov
push
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
mov
mov
pop
pop
ret
mov
call
push
push
push
call
mov
call
xor
cmp
je
orl
jmp
push
call
and
ret
jge
push
call
xor
jmp
movl
call
mov
cmp
movl
jne
push
call
pop
mov
mov
cmp
mov
je
call
jmp
xor
orl
mov
call
mov
call
push
pop
mov
pop
pop
mov
leave
ret
push
call
call
call
cmpl
jne
call
mov
test
je
mov
test
je
mov
push
call
andl
call
cmpl
lea
jne
push
call
push
call
andl
pop
ret
cmpl
push
je
pushl
call
jmp
cmpl
call
push
or
mov
movsb
xor
call
sub
cmp
jbe
call
push
call
mov
pop
ret
mov
ret
push
mov
push
push
push
push
push
call
xor
call
lock
push
mov
push
push
push
push
push
push
call
push
mov
mov
call
push
push
pushl
push
push
push
push
push
call
pop
pop
pop
pop
ret
push
push
mov
push
push
push
push
call
loope
imul
negb
push
mov
push
push
push
push
push
push
call
push
push
mov
call
lods
push
push
pushl
mov
push
push
push
push
push
call
pop
pop
mov
pop
pop
pop
ret
mov
ret
push
mov
call
push
movl
pop
xor
mov
mov
movl
mov
movl
movl
movl
mov
mov
mov
pop
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
mov
push
lea
push
call
jmp
shlb
add
inc
sbb
ret
xor
pop
ret
mov
ret
mov
movl
ret
push
mov
call
testb
je
push
call
mov
pop
ret
movl
ret
call
jmp
ret
push
call
pop
ret
mov
jmp
push
mov
mov
test
je
mov
push
call
andl
jmp
xor
pop
ret
mov
test
je
mov
push
call
ret
add
push
push
call
ret
push
mov
cmpl
lea
jne
xor
pop
ret
push
push
push
call
mov
test
jne
mov
mov
call
mov
pop
pop
ret
mov
test
je
mov
push
call
ret
jmp
push
mov
push
mov
mov
push
push
call
test
jne
mov
mov
call
mov
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
xor
cmp
je
mov
add
cmp
jne
add
jmp
mov
cmp
jne
jmp
mov
mov
test
je
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
cmpl
jne
add
jmp
mov
test
jne
xor
pop
pop
pop
ret
push
mov
push
push
mov
push
push
mov
call
mov
mov
cmpl
je
add
jmp
lea
cmpl
je
mov
mov
mov
test
je
mov
andl
lea
push
pushl
push
call
test
jne
mov
test
jne
add
jmp
mov
test
jne
xor
pop
pop
leave
ret
push
push
pushl
mov
call
mov
test
mov
je
mov
call
xor
jmp
pushl
mov
call
mov
neg
sbb
and
add
pop
pop
ret
mov
test
je
pushl
mov
pushl
push
call
jmp
pushl
pushl
call
ret
mov
call
push
push
push
call
mov
pop
mov
andl
test
je
mov
call
andl
movl
jmp
xor
mov
orl
mov
lea
push
push
mov
call
pop
push
mov
mov
push
xor
cmp
je
mov
push
lea
push
push
push
pushl
push
push
push
call
test
jne
mov
mov
xor
jmp
pushl
pushl
pushl
call
jne
call
jae
add
pop
ret
push
mov
mov
cmp
jne
pushl
pushl
push
pushl
call
jmp
mov
cmp
jne
cmpw
jne
push
push
push
pushl
push
call
push
pop
jmp
xor
pop
ret
push
mov
pushl
push
call
orl
mov
pop
ret
mov
cmp
mov
je
xor
cmp
setne
dec
and
dec
mov
ret
push
push
pushl
mov
call
lea
push
push
push
movl
call
mov
add
cmpl
movl
mov
je
or
mov
mov
movl
mov
mov
pop
pop
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
movl
jmp
push
mov
push
push
mov
push
mov
test
je
mov
lea
push
push
call
push
mov
call
lea
push
call
mov
call
mov
call
cmpl
je
push
pushl
call
push
pop
cmp
je
cmp
jne
movl
jmp
cmp
je
cmp
jne
movl
jmp
push
mov
call
mov
push
pop
pop
pop
leave
ret
push
mov
call
mov
movl
mov
mov
andl
andl
mov
mov
mov
mov
mov
movl
mov
pop
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
mov
call
push
push
mov
mov
movl
mov
andl
test
je
call
cmpl
je
pushl
call
pop
orl
mov
call
mov
pop
mov
leave
ret
push
mov
mov
cmp
jb
xor
jmp
mov
push
imul
add
push
pushl
call
add
incl
push
pop
pop
ret
mov
mov
cmp
jb
xor
ret
inc
cmp
mov
sbb
neg
ret
andl
ret
mov
call
push
push
mov
push
call
pop
mov
mov
xor
cmp
mov
je
push
pushl
pushl
pushl
call
mov
pop
mov
mov
mov
leave
ret
mov
lea
call
ret
mov
lea
call
ret
pushl
mov
pushl
lea
call
ret
mov
call
push
mov
push
push
push
lea
mov
test
mov
je
andl
mov
mov
andl
mov
movl
cmpl
je
mov
push
mov
call
test
je
add
decl
jmp
mov
call
mov
ret
mov
test
je
sub
mov
xor
cmp
setne
mov
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
push
mov
andl
push
push
lea
mov
push
mov
mov
cmpl
je
mov
mov
call
test
je
decl
jmp
mov
call
mov
ret
mov
xor
cmp
pop
pop
mov
setne
pop
leave
ret
mov
lea
mov
call
xor
ret
mov
call
push
mov
andl
push
mov
push
lea
andl
push
mov
mov
mov
movl
call
mov
mov
test
je
mov
jmp
mov
mov
add
push
push
call
add
andl
mov
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
mov
ret
call
test
je
call
adc
pop
inc
add
call
mov
mov
test
je
push
call
push
push
call
test
je
andl
xor
pop
ret
mov
pop
ret
mov
call
push
push
call
mov
mov
xor
cmp
mov
je
call
mov
mov
leave
ret
incl
ret
mov
test
je
dec
mov
ret
push
mov
sub
push
push
push
call
push
xor
push
push
lea
push
push
call
test
je
push
pop
lea
push
push
call
push
push
push
lea
push
push
call
test
jne
mov
pop
pop
leave
ret
push
mov
sub
push
mov
mov
push
push
push
lea
push
push
push
call
test
je
cmpl
je
cmpl
jne
mov
shr
test
je
add
cmp
jb
xor
pop
leave
ret
push
pop
jmp
mov
call
sub
push
push
push
xor
mov
push
push
push
pushl
lea
call
orl
mov
lea
movb
call
cmp
jne
mov
mov
orl
lea
call
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
mov
ret
mov
call
sub
push
push
push
xor
mov
push
push
push
pushl
lea
call
orl
mov
lea
movb
call
cmp
jne
mov
mov
orl
lea
call
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
mov
ret
mov
ret
mov
lea
call
ret
mov
lea
call
ret
pushl
mov
pushl
lea
call
ret
push
mov
sub
mov
push
xor
cmp
jne
cmpl
push
je
cmpl
jne
mov
push
push
push
lea
push
push
push
call
test
jne
push
push
push
call
ret
push
call
dec
xor
pop
jmp
cmpl
je
cmpl
je
xor
jmp
mov
pop
leave
ret
mov
cmpl
push
lea
je
mov
cmp
jbe
cmpl
je
mov
pushl
mov
call
cmp
je
cmp
jne
xor
jmp
or
jmp
mov
pop
ret
push
mov
sub
mov
push
push
lea
mov
cmp
jbe
xor
cmp
jne
mov
lea
push
mov
call
test
je
cmp
je
push
push
mov
push
push
lea
push
push
call
movl
push
call
test
push
je
push
push
lea
push
push
jmp
push
mov
push
lea
push
push
call
test
je
push
push
jmp
mov
pushl
mov
call
andl
push
pop
pop
jmp
xor
cmp
je
push
jmp
push
push
push
lea
push
push
push
call
test
je
mov
lea
push
mov
call
push
pop
pop
pop
leave
ret
mov
andl
movl
ret
push
mov
call
mov
mov
mov
mov
pop
ret
push
mov
mov
test
je
cmpl
je
mov
push
call
andl
pop
ret
mov
call
sub
push
mov
push
push
cmpl
mov
je
push
lea
push
push
call
mov
add
test
je
push
call
mov
jmp
mov
testb
movl
je
lea
movl
mov
test
je
shl
push
call
mov
mov
shl
push
push
push
mov
call
mov
add
shl
cmpb
mov
lea
mov
je
mov
add
push
mov
lea
add
mov
pop
mov
mov
movzbw
test
mov
je
and
or
mov
movzwl
mov
cmp
jg
je
add
cmp
ja
jmp
add
mov
add
mov
jmp
add
mov
add
mov
jmp
addl
add
mov
fldl
fstps
jmp
addl
add
mov
fldl
fstpl
jmp
add
mov
add
mov
mov
mov
mov
jmp
mov
add
add
push
mov
push
call
cmpl
mov
je
test
jne
call
jmp
mov
add
add
mov
test
je
pushl
call
inc
mov
add
add
and
call
mov
pushl
xor
mov
push
push
pushl
mov
push
push
call
mov
push
call
or
push
je
test
jne
call
mov
movw
jmp
mov
add
add
neg
sbb
jmp
addl
mov
mov
add
movsl
movsl
movsl
movsl
mov
push
pop
jmp
add
cmp
ja
jmp
mov
add
add
mov
neg
sbb
and
mov
jmp
add
mov
add
mov
subl
sub
incl
mov
mov
cmpb
jne
mov
mov
lea
xor
push
call
cmp
je
lea
push
lea
push
push
call
add
lea
mov
orl
push
lea
push
lea
push
push
pushl
mov
push
push
pushl
push
call
mov
mov
test
je
mov
mov
shl
cmpb
lea
je
mov
cmp
je
cmp
jne
push
call
sub
inc
cmpb
jne
pushl
call
xor
pop
cmp
jge
lea
push
call
cmpl
je
pushl
call
cmp
je
lea
push
call
push
call
pop
mov
cmp
mov
je
pushl
mov
push
push
call
mov
jmp
xor
orl
cmp
mov
je
pushl
lea
call
pushl
call
cmp
je
pushl
lea
call
pushl
call
cmp
je
pushl
lea
call
pushl
call
mov
push
mov
mov
mov
lea
push
mov
call
mov
cmp
je
cmp
je
push
lea
push
push
lea
push
call
pop
mov
cmp
jge
lea
push
call
push
call
movzwl
add
cmp
ja
jmp
mov
mov
mov
jmp
mov
mov
mov
jmp
mov
mov
mov
mov
mov
jmp
pushl
pushl
call
pushl
call
jmp
mov
xor
cmp
setne
mov
jmp
mov
lea
movsl
movsl
movsl
movsl
jmp
mov
mov
mov
mov
lea
mov
pop
pop
pop
leave
ret
addr16
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
inc
add
inc
add
pop
inc
add
pop
inc
add
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
popa
inc
add
popa
inc
add
inc
add
inc
add
inc
add
inc
add
popa
inc
add
popa
inc
add
popa
inc
add
popa
inc
add
inc
add
push
push
mov
xor
push
mov
push
mov
push
pushl
push
push
push
call
push
push
mov
call
xchg
mov
cmp
jne
call
pushl
mov
push
pushl
push
push
push
call
pop
pop
mov
pop
pop
pop
ret
movzwl
mov
mov
mov
add
test
je
push
cmp
je
test
mov
jne
mov
movzbl
and
add
mov
inc
test
jne
pop
ret
push
mov
sub
push
push
push
mov
push
pop
mov
add
cmpw
je
cmpw
jne
mov
mov
add
mov
andl
mov
mov
mov
mov
mov
mov
mov
mov
cmpb
je
mov
decl
movzbw
mov
mov
cmp
je
test
je
and
or
mov
mov
cmp
jl
cmp
je
mov
mov
shl
add
cmp
je
mov
cmp
je
mov
movl
add
cmp
je
mov
cmp
je
pushl
push
push
push
call
cmp
add
add
stc
push
jne
mov
cmp
je
mov
push
call
push
mov
call
jmp
pushl
call
mov
movw
movl
mov
push
mov
pop
mov
movzwl
cmp
jg
je
add
cmp
ja
jmp
movswl
jmp
cmp
jne
mov
andl
mov
movl
jmp
cmpl
jne
cmp
jne
movw
movl
mov
jmp
fldl
fstpl
jmp
mov
mov
mov
mov
add
jmp
xor
cmp
setne
jmp
mov
jmp
movzbl
jmp
add
cmp
ja
jmp
mov
mov
add
incl
mov
jmp
cmpl
jle
mov
mov
mov
mov
jmp
mov
cmpb
je
mov
mov
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
fs
add
fs
add
fs
add
fs
add
fs
add
fs
add
fs
add
fs
add
fs
add
fs
add
fs
add
fs
add
fs
add
fs
add
fs
add
fs
add
fs
add
fs
add
fs
add
fs
add
fs
add
fs
add
fs
add
fs
add
fs
add
fs
add
call
sub
andb
push
mov
push
push
mov
mov
mov
test
mov
jne
lea
mov
pushl
call
testb
mov
mov
mov
mov
mov
je
lea
add
and
call
mov
push
pushl
push
call
mov
add
cmp
mov
jne
push
pop
orb
inc
mov
andb
mov
andl
mov
mov
mov
shl
mov
add
and
call
mov
test
mov
je
push
push
push
call
add
pushl
pushl
call
mov
lea
add
and
call
mov
test
jne
mov
jmp
push
mov
pushl
lea
pushl
pushl
push
pushl
push
call
xor
mov
test
jne
movzwl
and
sub
je
dec
je
dec
push
push
dec
pushl
je
call
mov
jmp
call
fstl
fstpl
jmp
push
push
pushl
call
fstl
jmp
push
push
pushl
call
fstps
mov
mov
orl
mov
xor
cmp
jbe
mov
mov
pushl
call
addl
inc
cmp
jb
mov
test
jne
mov
test
je
mov
mov
movzwl
add
cmp
ja
jmp
mov
jmp
mov
xor
cmp
jbe
mov
push
call
inc
add
cmp
jb
push
push
call
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
jmp
fldl
fstpl
jmp
neg
sbb
mov
jmp
lea
mov
movsl
movsl
movsl
movsl
jmp
movzwl
sub
je
dec
je
sub
je
dec
je
jmp
lea
push
call
jmp
test
je
mov
push
call
jmp
test
je
push
call
xor
mov
lea
mov
pop
pop
pop
leave
ret
xchg
addr16
add
inc
add
add
addr16
add
addr16
add
inc
add
inc
add
addr16
add
inc
add
addr16
add
addr16
add
addr16
add
addr16
add
inc
add
call
push
push
mov
mov
movl
lea
movl
call
lea
movb
call
andb
lea
call
mov
pop
mov
leave
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
mov
sub
push
push
push
xor
push
push
pushl
call
mov
add
lea
push
mov
call
mov
mov
test
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
cmp
jne
xor
jmp
push
call
inc
mov
add
add
and
call
mov
pushl
mov
push
push
pushl
mov
push
push
call
mov
push
call
lods
mov
mov
mov
mov
mov
cmp
je
cmp
jne
xor
jmp
push
call
inc
mov
add
add
and
call
mov
pushl
mov
push
push
pushl
mov
push
push
call
mov
push
push
call
mov
mov
jmp
mov
push
call
test
lea
push
push
je
push
call
mov
movw
jmp
push
call
mov
movw
cmp
jne
xor
jmp
pushl
call
inc
mov
add
add
and
call
mov
pushl
mov
push
push
pushl
mov
push
push
call
mov
push
push
call
mov
cmp
mov
jne
call
mov
cmp
mov
jne
xor
jmp
push
call
inc
mov
add
add
and
call
mov
pushl
mov
push
push
pushl
mov
push
push
call
mov
push
call
mov
inc
add
jno
jne
cmp
je
call
mov
mov
cmp
mov
je
push
call
mov
inc
lea
add
and
call
mov
push
push
push
pushl
mov
mov
push
push
call
mov
push
push
call
mov
mov
lea
pop
pop
pop
leave
ret
mov
call
push
push
mov
push
mov
call
mov
andl
lea
mov
mov
mov
mov
mov
mov
mov
mov
add
neg
sbb
movb
and
cmpl
movl
mov
mov
je
pushl
call
neg
mov
mov
sbb
and
add
mov
pop
pop
mov
leave
ret
mov
test
je
andl
pushl
pushl
pushl
call
jns
add
or
pop
pop
pop
add
mov
sub
mov
pop
call
ret
mov
call
push
mov
movl
andl
add
push
call
mov
mov
leave
ret
call
test
je
mov
test
je
push
push
call
pushl
call
mov
fdivl
add
cwtl
insb
call
mov
mov
movl
mov
andl
test
je
push
call
scas
call
cmp
jne
andl
orl
mov
call
mov
pop
mov
leave
ret
add
push
call
ret
mov
call
push
push
mov
mov
movl
andl
call
orl
mov
call
mov
pop
mov
leave
ret
push
mov
cmpl
je
push
push
call
jne
data16
pop
ret
push
mov
cmpb
je
mov
test
je
push
call
mov
andb
pop
ret
push
call
push
mov
call
mov
test
je
mov
call
mov
jmp
push
call
pop
ret
push
push
push
push
call
push
mov
call
add
xor
mov
cmp
je
push
push
call
pop
mov
pop
mov
call
pushl
push
call
mov
push
mov
call
call
mov
cmp
je
mov
cmp
je
push
push
call
call
mov
mov
lea
cmp
je
mov
call
test
je
mov
call
cmp
jne
mov
pop
call
cmp
je
push
call
mov
mov
cmp
je
push
call
mov
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
mov
jmp
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
mov
add
jmp
mov
jmp
mov
add
jmp
mov
jmp
mov
add
jmp
mov
jmp
mov
add
jmp
mov
jmp
mov
add
jmp
mov
jmp
mov
add
jmp
mov
jmp
mov
add
jmp
mov
jmp
mov
add
jmp
mov
jmp
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
int3
int3
int3
int3
int3
int3
mov
jmp
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
ret
mov
jmp
mov
jmp
mov
jmp
mov
jmp
int3
int3
mov
jmp
mov
jmp
int3
int3
mov
jmp
mov
jmp
int3
int3
pushl
call
ret
mov
jmp
int3
lea
jmp
mov
jmp
int3
int3
mov
jmp
mov
jmp
int3
int3
mov
jmp
mov
jmp
int3
int3
pushl
call
ret
mov
jmp
int3
mov
jmp
mov
jmp
int3
int3
mov
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
mov
jmp
int3
int3
mov
jmp
mov
jmp
int3
int3
mov
jmp
mov
jmp
int3
int3
mov
jmp
mov
jmp
int3
int3
mov
jmp
int3
int3
pushl
call
pop
ret
mov
jmp
mov
jmp
int3
int3
mov
jmp
mov
jmp
int3
int3
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
mov
jmp
int3
int3
pushl
call
ret
mov
jmp
int3
pushl
call
pop
ret
mov
jmp
pushl
call
ret
mov
jmp
int3
pushl
call
ret
mov
jmp
int3
pushl
call
ret
mov
jmp
int3
lea
jmp
pushl
call
pop
ret
lea
jmp
mov
jmp
int3
lea
jmp
mov
and
test
je
mov
jmp
ret
mov
jmp
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
mov
jmp
mov
jmp
int3
int3
mov
jmp
int3
int3
mov
jmp
mov
jmp
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
mov
jmp
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
mov
jmp
mov
jmp
int3
int3
mov
jmp
mov
jmp
int3
int3
mov
jmp
int3
int3
mov
jmp
mov
jmp
int3
int3
pushl
call
ret
mov
jmp
int3
pushl
call
pop
ret
mov
jmp
mov
jmp
mov
jmp
int3
int3
mov
jmp
mov
jmp
int3
int3
pushl
call
pop
ret
mov
jmp
mov
jmp
mov
jmp
int3
int3
mov
jmp
mov
jmp
int3
int3
mov
jmp
mov
jmp
int3
int3
mov
jmp
mov
jmp
int3
int3
mov
jmp
mov
jmp
int3
int3
mov
jmp
mov
jmp
int3
int3
mov
jmp
mov
jmp
int3
int3
pushl
call
pop
ret
mov
jmp
mov
jmp
mov
jmp
int3
int3
mov
and
test
je
mov
jmp
ret
lea
jmp
mov
jmp
int3
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
lea
jmp
mov
jmp
int3
int3
mov
jmp
int3
int3
mov
jmp
int3
int3
mov
jmp
mov
jmp
int3
int3
mov
jmp
mov
jmp
int3
int3
mov
add
jmp
mov
add
jmp
mov
jmp
mov
jmp
int3
int3
mov
add
jmp
mov
add
jmp
mov
jmp
mov
jmp
mov
jmp
int3
int3
mov
jmp
int3
int3
mov
jmp
int3
int3
mov
jmp
mov
jmp
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
lea
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
mov
jmp
int3
int3
mov
jmp
int3
int3
mov
jmp
int3
int3
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
mov
jmp
int3
int3
mov
jmp
int3
int3
pushl
call
pop
ret
mov
jmp
pushl
call
pop
ret
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
pushl
call
pop
ret
pushl
call
ret
mov
jmp
int3
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
mov
jmp
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
mov
jmp
mov
jmp
int3
int3
mov
jmp
int3
int3
mov
jmp
mov
jmp
int3
int3
pushl
call
ret
mov
jmp
int3
mov
jmp
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
mov
jmp
mov
jmp
int3
int3
pushl
call
ret
mov
jmp
int3
mov
jmp
int3
int3
mov
jmp
int3
int3
mov
jmp
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
mov
jmp
mov
jmp
int3
int3
pushl
call
ret
mov
jmp
int3
mov
add
jmp
mov
jmp
int3
int3
int3
mov
add
jmp
mov
jmp
int3
int3
int3
mov
jmp
int3
int3
mov
jmp
int3
int3
mov
jmp
int3
int3
lea
jmp
mov
and
test
je
mov
jmp
ret
mov
jmp
int3
int3
int3
lea
jmp
mov
and
test
je
mov
jmp
ret
mov
jmp
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
pushl
call
ret
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
pushl
call
ret
mov
jmp
int3
mov
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
pushl
call
ret
mov
jmp
mov
movw
lea
jmp
jmp
jmp
jmp
pushl
mov
pusha
movl
pushf
push
lea
jmp
bt
sub
jmp
jmp
sbb
jmp
movb
call
movb
movb
pushl
popl
push
movw
lea
jmp
stc
shr
pushf
pushl
jmp
pushl
popl
pusha
lea
jmp
cwtl
lahf
pushf
mov
rcr
cmp
inc
movzbw
mov
bt
or
pushl
mov
pusha
clc
clc
pushl
add
call
pushf
popl
jmp
lea
mov
pusha
movb
movb
lea
jmp
pushf
pushf
pusha
mov
pushl
call
pushl
popl
movl
mov
push
lea
jmp
push
pushl
add
jmp
jmp
jmp
mov
cld
pusha
pusha
rep
call
inc
jmp
mov
push
push
pushf
pushf
lea
jmp
call
pusha
jmp
pushf
popl
pusha
call
call
and
mov
bt
add
pushf
jmp
push
pusha
pushf
popl
call
pushf
pushl
popl
mov
lea
jmp
jmp
inc
clc
rol
cmc
not
pushf
sub
pusha
jmp
pushf
movw
pushl
popl
movb
push
mov
lea
jmp
add
test
call
not
jmp
push
push
push
pushl
popl
pusha
push
mov
movw
lea
jmp
mov
not
mov
movw
pusha
call
pushf
pushf
pushf
xor
push
pusha
movb
cmc
xchg
jmp
pushl
mov
push
pushl
mov
lea
jmp
pushf
pushf
pusha
push
mov
jmp
push
pushl
pusha
repz
popl
pushf
pushf
movw
mov
lea
jmp
mov
pushf
jmp
mov
jmp
call
pushl
popl
stc
sub
jb
cmp
add
jmp
pushf
pushl
push
pushl
popl
pushl
pushf
pushf
lea
jmp
ror
add
not
mov
call
or
mov
test
rcl
mov
test
pushf
cmp
call
pushf
or
jmp
push
pushf
mov
mov
pushl
lea
jmp
jmp
push
pushf
call
mov
movzbw
or
jmp
call
jmp
add
add
jns
inc
pop
movl
inc
gs
add
add
sbb
add
xor
inc
sub
add
add
add
add
add
add
add
add
add
out
inc
arpl
inc
pop
sub
add
data16
out
inc
pusha
fldl
inc
sub
add
add
xor
inc
pop
or
inc
popa
push
add
add
into
add
add
add
xlat
add
add
add
add
cltd
add
add
add
into
add
in
inc
pusha
adc
inc
fs
inc
push
into
add
add
add
movb
push
into
add
add
add
add
into
add
lret
pusha
adc
inc
and
add
into
add
data16
add
xor
inc
push
into
add
add
add
sbb
add
add
add
mov
add
add
add
add
into
add
movl
inc
gs
add
into
add
add
add
mov
inc
push
into
add
add
add
add
into
add
adc
inc
pusha
adc
inc
arpl
add
into
add
add
add
movl
inc
push
dec
add
add
stos
add
into
add
add
add
testl
inc
push
std
add
add
into
add
add
add
add
lret
pop
in
inc
pusha
push
add
ja
inc
sub
add
add
add
add
movl
inc
es
sbb
add
xor
inc
sub
add
add
add
add
add
movb
sub
add
add
add
add
add
xor
inc
movb
pop
add
inc
and
add
add
add
mov
inc
pop
add
add
add
add
add
jb
inc
sub
inc
fs
add
cltd
add
adc
inc
and
inc
push
cmp
inc
popa
push
add
add
add
add
add
add
jb
inc
pusha
cld
add
add
add
adc
inc
es
ja
inc
push
dec
add
add
cltd
add
add
out
inc
push
dec
add
add
mov
inc
arpl
inc
pop
add
add
add
add
into
add
add
fildl
inc
arpl
add
mov
inc
daa
data16
fildl
inc
movb
es
add
add
xor
inc
pop
lcall
gs
add
add
add
xor
inc
and
add
add
movb
sub
add
add
add
mov
add
movl
inc
sub
add
add
movl
inc
pop
add
add
add
add
add
add
add
stos
add
add
add
add
mov
inc
and
add
add
stos
add
add
add
out
inc
pusha
fldl
inc
and
add
add
add
in
inc
sub
add
add
add
add
add
add
testl
inc
popa
mov
add
out
inc
fs
inc
push
mov
inc
daa
adc
inc
pop
add
add
add
add
push
shld
lea
jle
pusha
mov
jmp
push
pushl
dec
mov
bt
stc
stc
not
mov
add
stc
xchg
cmc
cmc
movb
pushf
add
stc
pushl
add
jno
stc
cwtl
call
pushf
pusha
lea
jne
call
pushl
lea
jne
call
push
push
pushl
popf
movw
pusha
mov
lea
jmp
pushf
mov
mov
pushf
pushf
pusha
lea
jmp
mov
bt
clc
sub
pushf
mov
push
div
pushl
pusha
pushf
call
call
push
call
pushf
pushf
pushl
popl
push
pushf
lea
jmp
and
stc
sub
movsbw
mov
lea
mov
lea
lea
pushf
std
mov
std
push
not
mov
movsbl
lea
lea
lea
push
call
mov
mov
mov
pushf
movb
lea
jmp
pushl
call
movb
pushf
movb
pushl
popl
pushf
pushl
pushf
pushf
lea
jmp
pushf
mov
pusha
repz
popl
pushf
pushf
lea
jmp
rol
mov
sar
push
aas
jmp
btc
cmp
mov
mov
sar
cmc
mov
pushf
push
mov
test
sub
call
pusha
mov
mov
mov
mov
pushf
pushl
lea
jmp
pusha
cld
cmc
pushl
popf
movb
push
lea
jmp
sub
lea
jnp
pushf
pushf
pusha
mov
push
lea
jmp
mov
push
pushl
push
lea
jmp
mov
jmp
xor
jmp
pushl
mov
push
push
pushf
popl
lea
jge
popl
push
pusha
pushf
lea
jmp
call
mov
pushf
pushf
pushl
popl
mov
lea
jmp
pusha
mov
movw
pushf
lea
jmp
push
divl
pusha
jmp
pop
pop
mov
push
pushl
ret
add
jmp
call
rcl
bswap
mov
ror
jns
add
push
lea
jp
mov
pusha
pushf
pusha
pushf
mov
mov
pushf
movw
mov
lea
jmp
pushf
mov
call
call
jmp
pushl
pushf
popl
jmp
movb
pushf
pushf
mov
pushf
mov
pusha
mov
pushf
movl
push
lea
jmp
cwtl
stc
pushf
sub
pushf
call
call
repz
popl
push
lea
jmp
push
movw
call
mov
pushl
mov
push
mov
pushf
pushf
lea
jmp
mov
mov
pushf
lea
jmp
bts
pushl
lea
ja
not
shl
rcl
xor
bts
sub
not
pushf
bsr
mov
test
jmp
mov
pusha
movb
pushf
repz
popl
pushf
pusha
pushf
lea
jmp
jmp
cmc
mov
dec
shl
jmp
pusha
mov
movb
pusha
lea
jmp
cmp
sub
call
mov
lea
rcr
rcl
mov
cmc
cmc
add
jae
popf
pushf
pushf
lea
jmp
lea
cpuid
jmp
repz
popl
sub
neg
shrd
cmp
xor
push
bt
cmp
shrd
push
inc
shrd
mov
push
cmp
cmc
shld
setle
push
xadd
sub
test
push
xadd
clc
push
inc
btr
shld
adc
push
cmp
pusha
ror
pushl
popl
btc
clc
movl
pushf
call
repz
popl
mov
pushl
lea
jmp
neg
movzww
push
test
cmp
add
pusha
jmp
mov
neg
call
mov
pusha
push
lea
jmp
movb
pushf
mov
call
pusha
lea
je
push
pushf
movb
repz
popl
push
lea
jmp
mov
cmc
sub
test
cmc
clc
clc
sub
jmp
pusha
decl
movw
pushf
mov
movw
lea
jne
jmp
movb
pushf
pusha
repz
popl
push
lea
jmp
mov
movb
pushf
lea
jmp
pusha
movw
movw
pushl
popl
pushf
pushf
movb
lea
jmp
ror
cmc
rcl
add
shrd
cmc
dec
mov
cmp
bt
cmc
jmp
lea
je
push
pushf
popl
jmp
call
mov
pusha
pusha
repz
popl
movw
push
lea
jmp
pusha
mov
push
movw
push
movl
lea
jmp
pusha
sub
pushl
clc
cmpl
call
jmp
pusha
call
rol
mov
jmp
add
call
pushf
call
mov
pusha
pushl
popl
mov
push
pushf
lea
jmp
call
pushf
pusha
pushf
push
pushf
popl
call
clc
call
test
call
ror
bts
or
mov
jmp
mov
call
neg
push
das
mov
test
add
pushf
pushf
popl
lea
jne
push
pushl
popl
pushf
pusha
push
push
lea
jmp
dec
rcr
mov
test
add
push
lea
jmp
call
not
cmc
sub
sbb
sub
add
mov
call
lea
ja
and
rcl
bswap
mov
shl
lea
add
bt
sub
dec
sub
btr
lea
jmp
sub
shld
sar
lea
jmp
xchg
push
movl
push
call
pusha
test
shr
push
pushf
mov
lea
jbe
push
push
pushf
popl
call
add
jmp
pushf
popl
pushf
push
push
pushl
popl
pushf
lea
jmp
pusha
movb
decl
jmp
not
rcr
mov
btc
shr
sar
mov
mov
test
pusha
mov
add
jmp
movzbw
bswap
not
pop
push
pushf
push
lea
jmp
call
rcl
mov
cmp
bt
stc
sub
call
bsr
cltd
shrd
xor
rdtsc
cmp
cmp
sub
call
lea
jg
pushf
call
mov
call
shl
cmc
bsf
sub
add
and
rcl
cmp
xor
movzbw
setbe
dec
btc
and
adc
movsbw
mov
push
pusha
add
call
lahf
push
notl
jmp
lea
ja
mov
pusha
pusha
lea
jmp
and
mov
push
push
cmp
mov
bt
sub
call
mov
pushf
lea
jmp
jmp
not
pushf
sub
bt
test
mov
pushl
sub
lea
jo
pusha
movb
movb
mov
movb
movb
lea
jmp
cwtl
mov
push
mov
pushl
push
mov
mov
pushl
jmp
btc
aaa
aaa
mov
clc
jmp
test
pusha
sub
jmp
jmp
shl
mov
pusha
test
ror
mov
jmp
push
call
mov
mov
pusha
xor
clc
cmc
add
pushf
jmp
clc
stc
cmp
xor
jmp
cmc
add
lea
je
pusha
pusha
push
mov
pushl
pushf
pushf
mov
pushl
ret
jmp
call
pushf
pushl
popl
movb
movl
lea
jmp
pusha
mov
pushl
push
call
call
sbb
shl
aas
sub
mov
and
mov
test
call
pusha
not
stc
call
call
call
mov
pushl
pushf
popl
lea
js
push
movw
pusha
pushl
popl
movl
lea
jmp
sub
test
bt
mov
pushl
cbtw
clc
bt
jmp
pushl
mov
pusha
call
pushf
push
not
pusha
lea
jnp
inc
stc
stc
not
test
jmp
jmp
mov
jmp
pusha
pushf
repz
popl
pusha
mov
push
push
lea
jmp
pushl
popl
mov
pusha
lea
jmp
pushl
mov
lea
js
pusha
pushf
popl
push
pushf
pusha
pushl
popl
mov
movb
pushf
pushf
lea
jmp
mov
call
pushl
shr
jmp
mov
pusha
pusha
mov
call
push
pusha
jmp
pushf
clc
sub
jmp
cmc
bsf
or
xor
mov
cmp
rcl
add
lea
call
push
call
pushf
lea
jne
btr
xorb
seta
bswap
not
pop
pusha
push
lea
jmp
sbb
btc
mov
shl
ror
sar
rcr
mov
jmp
jmp
cld
jmp
push
mov
movb
pushf
lea
jmp
pusha
pushf
popl
pusha
call
jmp
cwtl
stc
sub
pushf
mov
mov
lea
jmp
jmp
repz
popl
movw
mov
lea
jmp
mov
mov
pusha
mov
movb
pushl
ret
lea
jno
pusha
repz
popl
mov
pushf
lea
jmp
jmp
mov
pushl
mov
pushf
popl
jmp
movb
call
test
sub
pushf
and
pushf
pushf
call
pusha
movb
mov
pushf
lea
jmp
mov
repz
popl
movw
pushf
mov
movb
lea
jmp
cwtl
mov
lahf
mov
pushf
call
lahf
not
sbb
clc
mov
call
stc
pusha
sub
push
pushf
pushf
call
pushf
call
pusha
pushf
pushf
pushf
pushf
popl
call
movzbw
movsbl
shrd
daa
mov
bts
sub
stc
pusha
mov
aad
lea
mov
rcl
shrd
shrd
xadd
mov
bsf
pop
mov
neg
sar
rcl
pushf
mov
sbb
sbb
inc
shr
mov
inc
mov
shld
shl
bsr
cwtl
mov
aaa
cwtl
mov
inc
bt
btr
cmp
pushl
popf
pop
jmp
bt
not
pushl
xchg
cmp
call
pusha
pushl
push
mov
pusha
repz
popl
push
movb
pushf
lea
jmp
pushf
call
cmc
aad
mov
cmc
rcr
not
bt
mov
stc
push
cmc
add
lea
jg
push
mov
pusha
pushf
pushf
mov
lea
jmp
movzbw
bswap
jmp
jmp
pusha
call
pusha
pushf
push
pushf
popl
jmp
pushf
mov
push
lea
jmp
pushl
popl
pushl
pushf
lea
jmp
test
pushf
push
sub
push
mov
pushf
pushf
pushl
lea
jmp
jmp
pushf
pusha
lea
je
call
mov
movb
lea
jmp
aaa
pusha
rcl
mov
clc
pushl
ror
mov
call
call
mov
movw
jmp
movb
pushl
popl
mov
pushf
mov
movb
lea
jmp
jmp
inc
pushf
jmp
pushf
push
pushf
popl
call
lea
jne
bt
sub
call
mov
rcr
lea
xadd
ror
add
movzbw
mov
lea
rol
stc
and
add
inc
mov
lea
not
movzbw
inc
bts
mov
clc
ror
test
btr
rol
add
push
inc
movzbl
call
call
sub
clc
clc
shl
push
pusha
jmp
cmc
add
call
pushf
mov
mov
call
push
cmc
sub
stc
push
stc
rol
mov
add
mov
add
test
call
push
movb
pushl
popl
movb
movb
lea
jmp
dec
addr16
sbbb
xchg
dec
andb
push
scas
push
lahf
dec
orb
lds
dec
cmpb
imul
orb
das
dec
xorb
lahf
dec
andb
sub
shlb
dec
addb
mov
cmpsb
rolb
inc
push
xchg
ja
inc
ss
dec
dec
xchg
adcl
dec
xchg
or
dec
mov
pop
in
iret
push
rorl
inc
pop
loope
jo
dec
xchg
data16
movsl
pop
sti
dec
xchg
incl
testl
cmc
pusha
out
dec
xchg
cli
xor
inc
xlat
dec
xchg
testl
dec
xchg
cli
ja
pop
shrb
ljmp
in
mov
adc
clc
mov
repz
xchg
clc
xor
scas
dec
xchg
ljmp
stos
dec
xchg
sbb
fcompl
adc
mov
cs
addr16
xchg
clc
mov
dec
je
inc
dec
xchg
cli
inc
je
jge
das
dec
xchg
lcall
sub
mull
mov
daa
pop
dec
xchg
cli
arpl
leave
nop
sub
dec
xchg
stc
inc
test
xchg
negb
shrb
dec
xchg
cli
jl
inc
gs
dec
xchg
cli
pusha
cltd
jnp
cmp
xchg
sti
cmpsb
aas
jg
ds
xchg
cli
mov
mov
cmp
push
sub
dec
cmp
xchg
xchg
and
dec
cmp
lret
pop
out
cmp
jecxz
imul
xor
frstor
mulps
dec
cmp
adc
cmp
adc
dec
cmp
adcl
lock
mov
pusha
xchg
mov
mov
push
push
movsbw
mov
pushl
pushl
call
movsbw
mov
movsbw
lea
call
bswap
call
call
jmp
mov
mov
pushf
mov
pusha
movb
lea
call
lea
pushl
pushf
xchg
mov
movb
push
pushl
ret
jmp
xchg
lods
sar
mov
orl
in
adc
cmp
xor
test
not
xor
dec
fcompl
mov
mov
dec
mov
push
adc
add
xchg
and
mov
lods
pop
addr16
mov
popf
jp
lret
cltd
rcrb
outsl
or
negb
rcrl
loopne
or
xchg
data16
or
mov
aad
std
insl
addr16
les
loop
mov
pop
movl
cmp
dec
mov
sub
add
fdiv
sbb
fsubrl
icebp
mov
push
add
rcr
aad
std
nop
fscale
sub
lock
lods
push
outsl
push
cmp
dec
mov
sub
add
loop
push
xlat
push
dec
test
mov
jo
push
inc
call
nop
scas
fdecstp
addr16
dec
popa
sub
jp
sbb
cmp
ss
movsb
dec
xchg
adc
cs
outsl
scas
rolb
lds
int
sbb
mov
fstpl
xchg
sub
inc
aam
lods
or
imul
lret
aad
out
lea
mov
sbb
jne
stos
outsb
pop
pushf
repnz
in
orb
xchg
cmp
sub
sbb
dec
jg
jp
mov
lret
hlt
dec
or
adc
xor
jg
mov
roll
in
xor
xor
xchg
lods
frstpm(287
and
jle
cmpsb
xor
mov
xor
pop
inc
jb
adc
sub
sub
mov
push
add
popa
repnz
ja
leave
xor
shlb
jo
in
xlat
int
stos
mov
mov
push
test
testb
pop
dec
push
mov
int3
sarl
popl
or
sahf
hlt
push
dec
xchg
mov
pop
pop
xchg
push
inc
ja
dec
hlt
test
out
push
lret
repz
sar
jmp
pop
sbb
xchg
mov
rcl
xor
fimull
xchg
cmp
add
push
cli
js
aad
mov
addr16
xchg
jle
std
xchg
iret
pop
mov
test
sti
pop
mov
and
mov
jb
movsb
inc
std
cmp
adc
data16
cld
pop
daa
cltd
mov
cld
lods
sub
clc
jnp
addb
sbbb
fxch
ret
int3
pop
aas
jg
or
test
push
pushf
dec
fimuls
sub
jb
and
sub
nop
jmp
mov
repnz
add
add
nop
and
movsb
test
popa
std
xchg
and
dec
sbb
jnp
int3
sbb
in
mov
push
lock
mov
pushf
in
inc
mov
sahf
push
push
lods
xor
jl
scas
lods
ljmp
subb
cld
dec
aam
aad
xchg
jno
ja
xchg
imul
or
adc
cmp
popf
inc
inc
mov
xor
add
cmp
iret
loopne
push
mov
insl
sbb
loop
jno
cli
jo
sub
inc
inc
mov
push
cmp
xchg
cmp
es
sub
push
dec
shll
adc
cmpsl
jge
dec
jmp
mov
sahf
or
or
test
jl
test
mov
jmp
jne
and
dec
mov
mov
fdivrl
xor
sub
cmpsb
gs
fisubs
pop
ret
out
xchg
add
pop
mov
std
adc
sbb
sbb
jp
lcall
movsl
mov
pop
xor
in
inc
xchg
cmp
je
pop
cmp
fisubs
fdiv
adc
push
jmp
mov
jo
stos
cmpb
scas
pop
fists
int
adc
dec
pusha
mov
inc
adc
lock
adc
or
subl
adc
mov
pushf
jmp
int
sti
rcl
std
jo
loopne
lods
mov
in
in
jnp
loopne
orl
lock
or
mov
pop
cmpsl
mov
sbb
push
push
movsl
jmp
mov
orb
xchg
jmp
aam
outsb
data16
rcrb
dec
fstpt
jbe
iret
push
or
cmp
cmp
pushf
shl
pop
and
shlb
popa
das
cli
cmp
out
jns
cmp
xchg
jp
inc
push
sar
and
and
ss
imul
fcmovnbe
push
push
sbb
lret
add
add
sbb
outsl
mov
or
sbb
rcl
std
inc
xchg
pop
lahf
mov
xor
cmp
addb
xor
out
fldl
cs
jne
sahf
add
int3
and
jp
lods
outsl
jge
pop
clc
xchg
ljmp
in
fldcw
push
xchg
push
leave
add
leave
insl
jo
dec
pop
lock
xchg
in
pop
js
sbb
js
loop
push
sub
jg
or
repnz
pop
sbb
es
inc
or
fs
cmp
mov
lods
addr16
mov
xchg
xchg
pop
xchg
inc
mov
js
shl
inc
pop
and
pushf
adc
scas
jne
pop
xchg
mov
fldt
cld
mov
fcomi
push
mov
movsl
xor
cmp
adc
cmp
pop
das
testb
and
pop
jge
sbbb
add
mov
stc
mov
iret
xchg
dec
mov
enter
lods
mov
add
adc
and
rcr
sbb
mov
pop
fwait
imul
leave
lods
ja
sbb
lahf
lcall
rolb
aaa
in
push
lods
lahf
std
jnp
sub
pop
push
mov
fldcw
push
cmp
inc
daa
pop
sub
xchg
iret
sar
rcrl
inc
mov
lcall
sbb
stc
xlat
jecxz
xor
inc
dec
lds
xor
add
out
mov
xor
push
jp
pop
jle
inc
add
out
std
cmpsl
icebp
pusha
push
cltd
shl
sbb
dec
pop
cmpsb
lea
sbb
jg
sbb
repnz
jmp
sub
aad
cmp
dec
xchg
repnz
out
add
jbe
pop
mov
xorl
lcall
xor
and
jle
adc
mov
mov
dec
add
or
dec
fld1
mov
mov
push
or
inc
sbb
mov
mov
lret
pop
mov
out
cmp
movsb
or
push
mov
add
clc
inc
fidivs
sbb
leave
sub
cmp
xchg
push
or
jae
xor
call
jmp
insb
ss
ret
data16
jl
inc
enter
fnstsw
int
or
ljmp
push
xchg
jo
sub
sbb
adc
lea
out
subl
push
mov
add
dec
cmpl
rcll
xchg
ljmp
mov
repnz
pusha
ja
fst
sbb
je
pop
cmpsb
pop
push
lahf
and
movl
les
jmp
pop
fldenv
sbbb
int
adc
jb
out
les
inc
mov
cmp
fcomi
push
ljmp
cmpsb
xchg
lcall
lret
sbb
cmc
out
pop
sub
ret
sahf
ficoms
popf
ss
mov
mov
mov
push
dec
ds
outsl
addr16
inc
sub
add
mov
cwtl
and
mov
xor
movsb
imul
mov
int
cmc
rcll
sbb
xlat
pop
xor
adc
jb
pop
or
jne
ret
ja
lock
int3
les
test
movzbl
movzbl
mov
pushl
jmp
jae
push
pushf
nop
call
nop
movw
push
pushf
pushl
xchg
call
mov
jmp
call
jmp
xchg
pushl
mov
mov
pusha
movb
lea
jmp
lea
jmp
call
pushf
xchg
call
jmp
movzbl
not
push
not
nop
pushf
lea
mov
push
mov
jmp
jmp
pushf
xor
cmp
push
xorl
cmc
pushl
popf
movl
pushl
ret
mov
jmp
pushf
xchg
not
lea
cwtl
call
pusha
pusha
jmp
jmp
xchg
lea
jle
movsbw
movzbw
push
push
mov
xchg
movw
mov
movzbw
movsbl
call
mov
jmp
pusha
mov
call
movb
movl
xchg
mov
movl
pushl
ret
movsbw
bswap
pusha
nop
push
mov
mov
mov
mov
lea
jp
pushf
lea
pushl
mov
call
pushf
pushf
movb
pushf
xchg
pushl
movsbw
setnp
pushf
mov
call
jmp
mov
call
mov
pushf
mov
jmp
call
jmp
mov
call
jmp
call
jmp
lea
pushf
jmp
pusha
mov
mov
pusha
pushl
call
jmp
push
pusha
nop
pushf
xchg
pop
mov
call
mov
xchg
mov
mov
pusha
mov
pushl
ret
call
pushf
movb
jmp
push
xchg
movb
movb
pushl
ret
push
movw
mov
movl
push
movw
pushf
lea
movb
xchg
mov
mov
pushl
ret
xchg
jg
lahf
pushf
pushl
xchg
mov
pushl
pop
bswap
mov
pusha
movw
call
xchg
movw
mov
movl
movb
pushl
ret
push
mov
not
mov
pushf
pushl
ret
not
pusha
call
pusha
lea
pushf
mov
jmp
pushf
pusha
pushf
jmp
not
pushf
call
mov
jmp
movb
pushl
mov
jmp
mov
mov
pushl
movw
mov
lea
movb
jmp
call
xchg
pushf
movb
mov
pushl
ret
jmp
insl
pop
les
lea
not
mov
call
xchg
movb
jmp
call
push
lea
jmp
mov
pushf
jmp
lea
movw
xchg
push
movb
movw
movb
pushl
ret
lea
pushf
mov
lea
jno
pushf
mov
call
pusha
mov
mov
pusha
lea
pushf
pushl
mov
xchg
pushf
mov
pushl
ret
pusha
pushf
jmp
push
pusha
movl
movl
movl
pusha
pushl
pushf
pushf
lea
jmp
jmp
lea
js
pushf
pusha
mov
jmp
pushf
mov
jmp
mov
pushf
jmp
lea
pushf
pushf
xchg
pushf
pushl
ret
jmp
pusha
pusha
jmp
pushf
push
mov
push
lea
call
lea
jmp
pushf
mov
pushf
movzbw
call
lds
mov
add
push
pushf
jmp
movsbw
seto
nop
mov
movsbw
pop
jmp
jmp
pushf
xchg
jmp
pop
mov
call
push
mov
jmp
jmp
jmp
pushf
call
mov
call
movb
xchg
movb
pushl
ret
lea
call
pushf
mov
movw
mov
call
call
jmp
mov
pushf
lea
movzbl
mov
mov
call
xchg
jmp
call
mov
pop
movzbw
mov
call
jmp
sti
jae
mov
and
call
pushl
lea
jmp
lea
pushf
pushf
pushl
ret
call
jmp
mov
not
pusha
pop
pop
mov
pushl
jmp
push
pushf
popl
bt
xor
stc
xor
cmp
xor
test
xor
cmp
cmc
xor
cmc
pusha
xorl
bt
cmp
xor
pusha
clc
xor
test
cmp
pushl
popf
pushf
pushl
ret
mov
call
mov
pusha
call
lea
jbe
lea
jmp
pushf
xchg
mov
pushl
ret
xchg
push
mov
xchg
jmp
xchg
call
mov
jmp
call
pushf
mov
mov
call
pushf
lea
jne
nop
call
mov
call
jmp
movb
call
jmp
xchg
pushl
pushl
ret
pushf
pushf
push
xchg
call
mov
movb
nop
call
lea
call
pushf
lea
jne
lea
jmp
pushf
lea
pushf
xchg
movl
movb
pushl
ret
jmp
push
lea
push
push
pushl
ret
xchg
movw
pushl
ret
mov
movsbw
not
movzbl
mov
movw
movsbw
movsbw
movsbw
lea
call
pushf
movsbl
nop
setno
lea
mov
pusha
jmp
lea
call
call
call
pusha
mov
jmp
adc
or
and
sbb
xchg
push
mov
push
sbb
data16
sbb
cmp
add
aam
out
push
or
jp
cmp
mov
jbe
xlat
fwait
test
hlt
sarl
adc
lcall
or
aad
add
sub
cmp
mov
popa
outsb
push
lcall
mov
inc
or
xorl
adc
out
jmp
ret
xchg
and
mov
sub
xor
fnstenv
aaa
inc
adc
push
push
xor
rcll
inc
sar
push
cld
loopne
xchg
add
pop
or
imul
sub
insl
rcrb
popf
xchg
jmp
push
nop
add
xchg
jne
icebp
cmp
add
mov
mov
int3
call
mov
into
stos
sbb
pop
es
stos
sti
cmp
and
add
add
cmpsl
bound
cmp
add
dec
ficompl
mov
test
xchg
js
xor
add
sub
ret
xor
lahf
xchg
jg
mov
mov
enter
push
mov
aas
cmovbe
inc
mov
xchg
icebp
add
mov
lock
pusha
push
sbb
pop
sbb
add
adc
jbe
xor
xchg
pusha
jge
dec
shlb
lret
or
add
dec
ds
testb
adc
sbb
mov
jle
clc
cli
inc
test
jb
daa
cld
leave
mov
cmp
lahf
jmp
ja
inc
xchg
test
shll
cli
cwtl
push
dec
stos
je
xor
in
cmp
xchg
jge
ds
repnz
dec
shl
sarb
leave
out
and
xchg
gs
sar
in
sub
lock
in
jae
dec
fisubrs
jbe
test
mov
dec
imul
inc
push
es
aaa
cmp
mov
xor
push
jnp
mov
add
jne
mov
sbbl
pusha
mov
and
xchg
push
roll
push
inc
xchg
insb
and
fs
test
mov
or
sar
pop
and
adc
or
aam
mov
je
dec
push
loop
in
cs
clc
mov
loop
sbb
inc
arpl
movaps
jmp
aam
or
mov
push
aad
push
push
or
adc
add
jbe
jbe
push
aam
cmp
pop
xchg
fisubrs
push
lock
cmpsl
xor
mov
xchg
sbb
xchg
and
xor
add
mov
push
pop
cmpsb
outsb
scas
dec
xchg
scas
aam
or
cmp
xchg
icebp
add
sub
iret
cmc
dec
xchg
inc
sti
arpl
cmp
dec
add
in
mov
xchg
push
inc
dec
mov
clc
inc
sbb
dec
repnz
roll
cwtl
and
imul
inc
push
cmp
mov
ja
test
imul
out
sub
mov
xchg
fs
lods
ljmp
inc
jmp
push
push
das
xor
scas
xor
bnd
pop
mov
add
cwtl
sbb
popa
xor
sub
jbe
movsb
mov
mov
sub
aad
sub
adc
ret
aam
ja
adc
mov
mov
or
push
call
or
cmp
xor
daa
jbe
dec
repnz
movsl
repnz
jae
dec
pushf
loope
and
or
je
fwait
sbb
repnz
xor
adc
imull
pop
imul
mov
mov
dec
aaa
add
mov
and
lods
sbb
je
scas
movl
repnz
jmp
ja
mov
and
and
push
cmpb
imul
mov
mov
jecxz
pop
push
and
inc
dec
jae
cmc
push
cwtl
pop
jne
scas
cli
push
inc
testl
xchg
xor
out
or
and
mov
xor
out
mov
mov
cs
jmp
lret
mov
mov
ss
or
movsb
cmp
dec
out
cmp
mov
cli
and
ja
cmp
xchg
xchg
mov
sbb
jl
andb
or
pusha
lods
shll
je
pop
push
mov
adc
ret
js
push
sub
rcrl
add
enter
push
inc
mov
mov
jle
pop
mov
jnp
or
flds
jg
pop
pop
sbb
idivl
cmp
cli
les
dec
push
pop
mov
das
and
jmp
lcall
pop
mov
stos
push
repnz
push
xlat
jmp
mov
repz
jbe
sub
jbe
cmc
xor
js
or
lahf
ret
inc
mov
sbb
xchg
sub
push
bswap
jmp
mov
jmp
xchg
movb
bswap
call
push
xchg
call
pusha
lea
push
push
call
xchg
pushf
pushl
ret
mov
jmp
mov
pushf
pusha
lea
call
lea
movw
xchg
movw
mov
mov
pushl
ret
jmp
jno
and
mov
and
pushf
pushf
pushf
pushl
ret
or
loope
add
push
pushl
lea
call
lea
pushf
xchg
pushf
mov
pusha
pushf
pushl
ret
xchg
pushf
movl
pushf
movb
pushl
ret
das
nop
cli
ds
outsl
mov
fistps
xchg
cmp
and
add
shrl
xor
adc
mov
xor
pop
push
test
out
adc
repz
fwait
in
dec
mov
icebp
and
dec
stos
inc
mov
adc
fbld
mov
mov
iret
cwtl
rclb
jne
ds
cmpsl
stos
in
xor
jmp
sbb
inc
mov
fldl
lods
mov
stos
xorb
add
mov
sbb
pop
sbb
test
ljmp
mulb
or
ja
and
imul
inc
les
cli
sbb
mov
xchg
mov
call
sub
inc
sub
fwait
or
mov
xchg
push
cmp
jbe
mov
int3
insl
or
mov
sbb
sti
aad
jo
shrl
sbb
loope
clc
lahf
inc
and
dec
mov
dec
cld
add
push
shll
inc
cs
adc
add
scas
xor
pop
push
imul
or
or
dec
mov
or
mov
pop
add
sub
rcl
test
pop
xchg
shl
rcr
xor
in
sub
pop
cli
imul
xor
incl
fidivrs
cli
scas
test
mov
pop
stos
loopne
adc
int3
mov
rclb
psubusw
orl
aam
xchg
cmp
movsb
jne
outsl
mov
sbb
xor
push
test
test
aad
ss
popa
addr16
push
fdivs
pop
mov
lret
sbb
dec
sbb
xchg
gs
sbb
mov
adc
cmp
add
not
jne
mov
pop
lods
sti
test
pop
fs
inc
fs
cmp
int
loop
test
xlat
mov
fstpl
andb
jae
adc
imul
lds
jns
cltd
dec
add
add
mov
jae
ds
into
jae
cmp
lret
jbe
out
dec
scas
mov
mov
lods
push
pop
daa
sbb
mov
mov
push
xchg
popa
mov
sub
jle
or
rcrb
dec
or
push
out
daa
pushf
pushf
decl
jl
and
inc
or
mov
or
mov
mov
pop
ja
sub
mov
mov
push
adc
sbb
mov
mov
nop
push
fs
lods
pusha
push
mov
or
mov
aas
lods
aam
xchg
fdivl
sbb
xor
inc
insl
mov
mov
and
mov
push
jnp
int3
ret
sbb
mov
sbb
fisubs
push
je
pop
inc
mov
popa
pop
mov
cmp
sti
loopne
fxch
lcall
dec
push
xchg
daa
cmpsl
scas
dec
xchg
sbb
rol
pusha
ja
dec
adc
cmpsl
outsb
jnp
arpl
cs
stos
cmpl
mov
xchg
xchg
rorb
mov
imul
or
aam
clc
hlt
pop
repnz
scas
stc
sub
inc
mov
push
add
and
and
cs
xchg
jbe
mov
stos
pop
lcall
popf
push
aad
push
cmc
mov
cmp
pop
and
outsl
dec
mov
ljmp
out
nop
mov
add
pop
cwtl
mov
addl
mov
mov
push
pusha
or
aam
push
out
test
jb
cmp
testb
or
cmp
add
cmpsb
dec
outsl
rclb
mov
xlat
adc
xor
jg
xchg
mov
push
aaa
jg
mov
pop
adc
fildll
push
mov
jmp
into
xor
mov
movb
sarb
dec
xor
lods
jne
or
out
mov
ret
mov
aas
jmp
test
test
pop
cmpsl
mov
dec
mov
rorb
sbb
jecxz
mov
fstpt
dec
or
out
nop
pop
and
xchg
jmp
mov
mov
mov
and
das
aam
imul
popf
add
ficoms
jg
xor
pop
repz
das
jb
pop
daa
test
fsubs
pop
int3
xchg
dec
pop
or
aad
imul
push
dec
xchg
jmp
aam
sbb
insb
and
out
popa
test
dec
pop
jmp
in
pop
int3
cltd
xchg
sub
adc
fbld
push
iret
xchg
xor
pop
in
add
dec
adc
push
cmp
inc
sub
sbb
xor
jp
push
fistpl
xor
lahf
mov
aam
push
imul
in
add
stos
imul
int
int3
sub
sbb
add
inc
push
lods
je
leave
icebp
cs
pop
aam
out
cmp
and
jle
xchg
mov
jge
outsl
sub
pop
fs
sub
mov
pop
push
or
ss
lods
cltd
pop
xchg
or
cmpsb
dec
adc
mov
cmp
adc
push
sbb
fldcw
int
orl
dec
test
cs
jnp
das
shl
add
scas
dec
mov
xchg
adc
or
lret
mov
add
stos
or
jbe
daa
push
sub
cmp
je
imul
and
add
gs
popf
pushf
fwait
pushf
stos
lcall
cwtl
movsb
loope
dec
shlb
les
test
jecxz
pop
js
jmp
sub
leave
testl
sbb
mov
cmp
ds
mov
shlb
popa
xlat
pop
popf
add
and
outsl
clc
repnz
dec
mov
pop
lahf
cmp
pop
int
imul
sbb
cmp
or
and
inc
insl
push
jge
ret
lea
in
jmp
jbe
stos
popa
insb
pushf
mov
push
shl
sbb
lret
cli
adc
sub
je
mov
out
ljmp
lret
push
hlt
cmp
out
outsb
pop
cmc
sub
iret
mov
js
mov
sbb
mov
gs
mov
push
inc
lret
jl
popf
adc
in
mov
daa
outsl
mov
dec
push
andb
and
jo
cmpsb
jnp
nop
and
mov
sub
or
xchg
cmpsl
cmp
dec
popa
mov
xor
cmpl
leave
fisubrl
ljmp
gs
addr16
int
jbe
repnz
add
pmullw
insb
xor
push
shrl
lahf
or
lret
add
lods
je
mov
add
insl
dec
iret
sub
bound
lock
mov
in
jmp
xchg
lcall
xor
or
movsb
sub
cmpsl
xchg
mov
imul
and
pop
testl
mov
stc
stos
xchg
stos
mov
jg
jno
into
cmpsl
mov
aam
jb,pt
xor
xorb
mov
aas
adc
sbb
ds
cmp
push
mov
push
test
jp
aad
out
mov
in
out
cmp
mov
and
cmp
gs
cmp
sub
incl
inc
mov
repz
dec
cli
clc
pop
inc
push
mov
es
pop
or
movsb
inc
mov
lods
into
push
xchg
push
pushl
ret
not
push
mov
pushf
pushf
mov
xchg
call
jmp
nop
mov
jmp
movsbw
mov
push
pushf
nop
movzbw
setae
mov
movb
pusha
xchg
push
pushl
jmp
das
clc
adc
sar
push
cmpsb
stc
inc
jp
hlt
cmpsl
jnp
insb
add
pop
xchg
lret
jp
sti
adc
add
sub
lea
enter
outsl
aaa
mov
test
fwait
cmp
mov
cmp
repz
dec
xlat
ljmp
and
test
push
pop
test
adcl
push
sub
cmp
xchg
int
cmp
xor
cmpsb
testl
and
sbb
in
jle
xor
pop
scas
xor
imul
pop
in
mov
push
lcall
cld
lahf
aam
lea
ja
les
cli
mov
repnz
testl
test
sar
ret
mov
add
shll
js
push
pop
push
ss
jg
inc
es
mov
mov
add
sub
jne
outsb
jne
mov
cli
dec
iret
mov
adc
mov
push
lea
out
jnp
adc
test
mov
lret
lret
scas
aad
aam
push
out
jmp
stos
add
xor
aad
sub
aaa
cmp
call
xchg
stc
ret
push
fdivrs
enter
popf
ficoml
in
sub
pop
stos
hlt
scas
loopne
push
ljmp
add
jle
sbb
inc
xchg
cs
call
and
fcmovnu
xchg
cmpsl
mov
stos
cmp
inc
push
xchg
imul
out
shlb
or
fiadds
or
nop
loop
cmpl
sbb
out
inc
mov
lock
dec
inc
popa
sbb
test
cmp
daa
mov
xchg
mov
xor
adcl
xchg
stos
inc
out
in
push
imul
rorl
jp
xchg
xorb
popa
enter
fwait
jae
adc
adc
dec
fcompl
push
inc
fdivl
arpl
mov
dec
lahf
push
sysexit
aaa
sarb
lods
out
int3
mov
mov
and
pop
xor
lret
inc
fidivrs
mov
jbe
je
cwtl
and
sbb
je
xchg
jg
mov
ja
adc
mov
out
rol
leave
mov
out
mov
je
sub
mov
int
xor
shll
mov
aas
cmp
jle
pop
fildl
dec
add
fimuls
dec
xchg
jp
xchg
pushf
sub
ret
lea
mov
sti
jmp
je
fwait
mov
adc
cs
lret
adc
ret
adcb
push
mov
mov
mov
pop
jecxz
lret
gs
adc
add
add
push
mov
push
mov
dec
cmp
int
inc
mov
out
inc
insl
test
lds
jl
push
call
popa
push
repnz
or
fimull
int3
cmc
cmpsb
dec
dec
shrb
sti
into
mov
or
pop
and
stc
dec
jb
push
inc
mov
dec
and
scas
notb
imul
les
push
mull
int
pop
mov
inc
mov
mov
sti
sub
rcr
pop
test
sub
fistl
and
pop
out
fsubrs
and
imul
fidivrl
ret
sub
pusha
int
into
insl
xchg
out
mov
ss
fs
or
sub
sub
mov
inc
int
sbb
cwtl
mov
leave
aad
lock
clc
inc
aam
and
dec
cmp
mov
and
mov
test
fsubs
int
lcall
mov
push
mov
xor
sti
and
mov
pop
sti
repz
movsb
jge
push
adc
pop
pop
and
lds
ja
lcall
mov
mov
ds
adc
test
push
cmp
sub
pop
addr16
ja
es
sbb
ss
inc
or
inc
or
and
mov
testb
sub
mov
xor
or
sbb
mov
out
in
rcrb
add
pop
rolb
mov
and
repz
fdivs
pop
add
push
scas
sub
shll
repnz
mov
xor
push
out
mov
pop
inc
add
xchg
mov
pop
cld
or
mov
xchg
jge
jle
loopne
add
mov
jmp
add
xchg
pop
pop
stos
cmp
stos
imul
dec
not
push
mov
dec
mov
cmp
add
add
xor
iret
pop
pop
add
cmpsb
add
stos
ss
int3
push
dec
xchg
or
mov
bound
das
pop
cmp
imul
push
pushf
into
mov
shl
jnp
out
dec
int
shrb
lret
into
shlb
or
cwtl
roll
xchg
pop
or
inc
mov
adc
add
inc
lea
push
push
xchg
pushf
pushf
pushl
ret
call
mov
xchg
movb
jmp
push
pushf
call
push
push
push
mov
push
mov
jmp
movb
movw
pushl
lea
push
call
pusha
lea
jmp
call
movb
mov
jmp
pushf
movl
pushf
pushf
push
lea
jmp
jmp
jmp
call
jmp
push
push
jmp
pushl
call
jmp
pusha
mov
mov
lea
call
mov
movzbl
pop
pushf
push
call
xchg
mov
mov
pushl
ret
push
pushf
pushl
xchg
pusha
call
sbb
ret
xchg
add
sarb
add
push
cmp
enter
add
sbb
sar
je
adc
sbb
xchg
pop
mov
pushl
push
pushf
mov
pushf
jmp
mov
pop
movsbw
mov
call
push
lea
jmp
call
pushf
pushf
not
not
nop
lea
lea
js
pop
call
lea
pushf
mov
call
xchg
mov
mov
push
pushf
pushl
ret
lea
pushf
jmp
pushl
jmp
lea
jmp
enter
sar
fwait
out
push
jnp
inc
push
add
ss
std
jnp
pop
shrl
add
mov
call
jbe
pop
push
mov
test
ja
mov
jl
call
pop
fwait
cmp
push
fildl
sbb
mov
out
mov
out
and
cli
jl
loop
mov
cmp
or
scas
pop
add
dec
mov
bnd
pop
into
push
xchg
inc
xchg
pop
cld
xchg
lret
fimuls
into
mov
sub
and
out
jge
dec
cli
pop
hlt
sbb
mov
lock
mov
cli
es
movsb
stos
xchg
add
popf
push
inc
in
imul
dec
jg
mov
ret
sti
les
jno
dec
jno
scas
cld
xchg
mov
mov
inc
gs
gs
xchg
movsb
or
movsb
mov
stc
shrb
add
inc
lds
xlat
leave
xchg
inc
add
loope
sar
xchg
mov
and
sbb
pop
stos
adc
pop
imul
shrb
add
leave
dec
sti
into
xchg
cmp
push
push
xchg
jnp
xlat
movb
mov
adc
sbb
jne
faddl
aas
xchg
mov
ss
jns
pop
je
test
xor
daa
orb
gs
or
cmpsb
pop
xor
mov
int
xor
xchg
into
lcall
cmpsb
inc
push
mov
test
sub
mov
daa
cld
enter
scas
add
add
daa
enter
pop
cmpsb
test
cs
mov
cmp
add
mov
sti
sbb
and
pop
aaa
push
lcall
dec
insb
mov
jecxz
mov
in
pushf
cltd
xchg
or
lods
jae
pop
adc
mov
sti
xchg
test
fstpt
jns
mov
and
mov
xchg
cld
in
lds
aaa
mov
aam
jnp
adc
pop
nop
fsubs
ret
jo
addr16
jp
sub
negb
nop
cli
sub
std
outsl
cmp
jbe
sub
xlat
ret
sub
mov
cmp
shrl
add
xor
ret
xchg
or
or
ja
fildll
mov
test
pop
rcll
nop
adc
and
add
sarb
xor
nop
adc
std
cmpsl
incl
xchg
pop
in
pop
fmuls
es
leave
adc
std
cmp
add
stc
ret
popa
pusha
loope,pn
cmp
in
xchg
xor
loope
xchg
bnd
test
rcll
sub
pop
mov
sbb
push
jne
fadd
jp
mov
ljmp
rcll
mov
rcrl
mov
cmp
cmp
mov
ja
mov
arpl
loop
mov
daa
mov
stc
int3
xlat
fldt
movsl
mov
enter
fdivr
dec
jns
into
cmp
inc
aas
or
out
movsb
push
inc
call
add
cld
jmp
pop
mov
inc
push
push
add
imul
fildll
mov
repz
pop
daa
out
imul
sub
cmpsl
and
icebp
mov
ss
pusha
addl
push
mov
adc
ds
and
lcall
repnz
cmp
sbb
imul
fdivrl
cmpsb
jo
jle
cltd
aas
fisttpll
mov
sarl
cmp
gs
sbb
mov
pop
clc
dec
js
insl
xor
mov
mov
test
mov
cmp
mov
pop
and
fxch
movsb
out
mov
fisttps
in
sub
mov
push
and
cmp
cmp
mov
mov
mov
arpl
scas
cmpsl
hlt
xor
out
jmp
test
test
mov
inc
adc
gs
dec
fstpt
insl
cmp
inc
bswap
pop
iret
dec
sub
cmc
add
ds
inc
leave
xor
push
arpl
out
and
icebp
fmuls
ja
jne
jne
andl
cld
cs
out
push
or
xchg
jne
cmp
fistpll
push
je
stos
mov
push
fstp
movsl
cmp
fistpl
fsts
dec
jne
mov
cltd
cwtl
sub
scas
call
pusha
jmp
xchg
mov
pushl
ret
call
movb
xchg
pushl
movzbl
lea
mov
pusha
lea
pushf
call
mov
call
not
mov
movzbl
pushl
pusha
mov
jmp
xchg
pushf
call
cmc
xor
jmp
call
pushf
push
pusha
nop
pushf
push
pushf
mov
xchg
bswap
not
mov
jmp
mov
mov
call
xor
pushl
xor
jmp
pusha
pushl
jmp
pushf
pushl
xchg
bswap
movzbw
mov
call
pushf
mov
lea
jmp
pusha
nop
pusha
xchg
not
mov
call
xchg
pushf
movl
pushl
ret
xchg
pushf
pushf
mov
pushl
ret
pushf
pusha
nop
pushf
movw
push
pushl
xchg
pushf
mov
jmp
xchg
pushl
pushl
mov
jmp
daa
mov
ret
mov
pusha
jmp
lea
lea
jne
pusha
mov
push
xchg
movw
pushf
push
pushl
ret
lea
movb
jmp
call
mov
pushf
lea
mov
pushl
xchg
pushl
pushl
ret
mov
mov
jmp
jmp
mov
mov
mov
push
mov
jmp
pushf
lea
pushf
xchg
movb
movw
pushl
ret
call
nop
call
pushf
lea
movb
lea
jg
pusha
pushf
xchg
pusha
pushl
ret
jmp
jmp
pushf
pushf
mov
pushf
jmp
pop
mov
fisubrs
push
push
lds
mov
inc
cmp
mov
imul
add
jp
adc
imul
add
adc
repnz
sub
mov
jnp
jb
leave
mov
nop
pop
out
pop
sti
pop
inc
add
call
cmp
sub
mov
dec
decl
mov
dec
push
test
es
sahf
inc
imul
aaa
jmp
int
sbb
je
jle
dec
dec
jb
fidivrs
xor
fldcw
add
ret
inc
add
mov
es
mov
mov
clc
jle
jo
cmp
fldcw
icebp
sbb
add
pop
imull
icebp
stos
push
hlt
mov
movsb
mov
add
in
mov
cmp
lods
subl
dec
mov
addl
movsl
push
fwait
clc
add
fwait
xor
sub
mov
ja
xor
mov
sub
cmp
jecxz
jmp
jbe
sbb
out
cmp
inc
inc
aas
add
lds
dec
sbb
dec
cltd
and
dec
xchg
or
into
insl
mov
add
pop
adc
in
push
mov
sbb
in
cmp
and
sbb
xor
outsl
or
and
cmpsl
push
pushf
sbb
inc
add
mov
jle
in
or
jmp
fsubr
pop
mov
mov
rcll
mov
pop
fcompl
sub
movsl
in
bnd
ja
je
lret
xchg
xlat
jo
in
shl
mov
daa
mov
ljmpw
cmp
call
and
out
push
pushf
bound
fwait
mov
cmp
int
fwait
jb
and
leave
icebp
mov
popa
sbb
cmp
lret
fisubrl
add
dec
push
add
mov
ret
pop
repz
aaa
inc
repz
lahf
arpl
mov
pushf
add
dec
aad
cmp
adc
lret
scas
cli
push
sub
js
inc
rorb
mov
adc
or
cmp
lods
pop
enter
jg
aam
pusha
xchg
fimull
lods
lcall
inc
stos
cmpsl
pop
cmp
outsb
mov
fs
fsubr
inc
mov
dec
dec
push
and
sbb
push
jecxz
jmp
mov
lcall
sbb
in
mov
or
dec
cli
lods
notl
stc
inc
or
mov
cmp
imul
or
mov
lods
add
sbb
je
xchg
sbb
pop
inc
xchg
sbb
sbb
ret
push
ret
xchg
xor
lcall
pop
xchg
cmp
push
jecxz
jne
test
xor
out
mov
call
mov
in
jb
in
add
fs
ret
sbb
out
mov
mov
push
into
push
ret
mov
ja
lock
icebp
xchg
xchg
lods
sbb
push
pop
jg
andl
mov
cmc
inc
les
pop
add
out
shll
lds
inc
pop
mov
iret
fdivrl
in
movsl
in
cmc
aam
sub
push
cmpl
or
or
inc
stc
nop
xor
arpl
inc
mov
fdivl
cmp
sub
sbb
test
dec
lods
and
or
cmpsl
mov
jb
adc
mov
mov
sarl
lret
sub
arpl
adc
cmp
enter
leave
mov
pop
and
mov
mov
lea
jo
push
pushf
pusha
xchg
pushl
pushf
movsbw
not
mov
pushl
call
mov
call
call
pusha
movw
mov
bswap
call
pusha
movb
mov
push
pushf
lea
push
jmp
movl
pushf
call
jmp
xchg
movb
pushf
pushf
pushf
pushl
ret
jmp
std
pop
addr16
int3
push
xchg
mov
lea
movb
pushl
ret
xchg
push
mov
pushl
ret
sbb
stc
pushl
xchg
push
push
pushl
ret
pusha
call
pushf
lea
jmp
mov
mov
jmp
push
lea
jmp
xchg
movzbw
jmp
xchg
mov
nop
jnp
push
pushl
pusha
mov
movzbl
pop
call
xchg
movl
movl
push
pushl
ret
pusha
lahf
lea
nop
seta
jmp
mov
mov
lea
setns
mov
mov
pushf
pushf
pushf
mov
push
pushf
lea
jbe
pusha
lea
pusha
pushf
xchg
movb
pushl
ret
pushf
lea
pushl
mov
mov
mov
xchg
pushf
pushf
pushl
ret
jmp
xchg
movb
push
pushl
ret
jae
nop
lea
lea
mov
pushf
mov
push
xchg
mov
movb
pusha
jmp
xchg
pusha
mov
bswap
setge
mov
mov
mov
jmp
lea
je
pushf
xchg
pushf
pushf
pushl
ret
pusha
mov
pushf
lea
jmp
mov
mov
lea
movw
pushf
push
pushl
ret
jp
or
sar
pop
and
jle
xor
in
pop
iret
push
fstps
add
mov
ljmp
out
fistps
stc
ss
ljmp
jae
inc
lea
add
inc
push
popa
and
jne
pop
lock
mov
dec
or
rol
ret
cmp
call
sub
mov
fisttpll
mov
ficoms
push
test
leave
mov
icebp
sub
shrb
push
and
mov
and
xor
shll
push
mov
mov
cmpsl
mov
xchg
sub
cli
lahf
push
pop
movsl
jo
pop
repnz
sbb
lock
mov
imul
mov
sahf
adc
addl
inc
add
xchg
cmc
cmc
neg
and
std
mov
mov
movsb
inc
inc
inc
int
pop
mov
inc
dec
test
add
fwait
dec
or
sub
cmc
adc
call
cmp
sub
or
lret
push
repz
std
lods
jns
xor
sub
and
enter
sbb
clc
mov
cs
js
dec
jp
cmpsb
pop
pop
jnp
dec
and
inc
rclb
cmpsb
cmp
xor
mov
sub
inc
pop
rolb
cs
test
push
rolb
enter
data16
xchg
ret
push
pop
scas
pop
xor
into
arpl
imul
mov
test
mov
pushf
enter
push
loop
call
mov
test
add
mov
sub
fdivl
pop
dec
aaa
stos
adc
shrb
movsl
stc
sar
jae
dec
in
scas
pop
xchg
add
enter
add
roll
repnz
xchg
and
loope
sahf
jns
dec
idiv
cmpsb
push
sbb
inc
pop
cmpsb
lock
push
cmp
or
jl
int3
mov
fldl
fnstcw
push
add
mov
push
add
cmp
or
stos
jno
sub
fsubs
rclb
mov
pusha
mov
pop
icebp
mov
mov
cmp
mov
mov
cmp
js
insl
shr
mov
daa
rcrl
or
shlb
dec
hlt
outsl
xchg
jl
jns
mov
xor
mov
xor
and
ja
sbbl
and
imul
cmp
testb
inc
cli
pop
and
in
fcomi
or
sub
push
jno
cmp
xchg
jg
lahf
stos
jbe
inc
nop
push
push
sbb
movsb
sbb
sbb
ss
mov
rcrb
mov
rcll
out
xlat
nop
sbb
xor
filds
inc
pop
movsl
setae
inc
nop
outsl
ds
adc
pusha
pusha
decl
ret
mov
add
stc
lret
movsl
cltd
mov
outsl
cld
psllq
lds
jne
cli
inc
xchg
mov
inc
lods
jg
popa
lods
out
xor
int
cwtl
loopne
into
xlat
cmp
lods
sub
xchg
mov
cmp
push
sub
dec
cmp
pop
lret
fisttpll
int3
adc
pushf
push
addr16
adc
ret
cmpsl
jmp
sub
fsubrs
inc
arpl
dec
sbb
jg
mov
addr16
sbb
sbbb
dec
sub
fwait
xor
sbb
mov
dec
mov
sub
xor
mov
jl
gs
mov
dec
adcl
fwait
out
clc
pop
out
jbe
jge
ret
fisttpl
fidivs
or
popa
movsb
int3
in
mov
pop
shlb
cmp
push
jl
inc
cmp
push
lods
nop
cmp
aaa
mov
mov
gs
adc
push
popa
mov
orl
jnp
xchg
pop
jmp
int
mov
sub
xchg
mov
mov
divl
sarb
gs
dec
mov
sti
outsb
push
or
mov
and
mov
fmuls
nop
out
mov
push
out
add
movq
xchg
sti
jecxz
mov
inc
movsb
or
cmp
adc
or
test
jle
loop
mov
mov
repz
out
adc
adc
adc
adc
push
sahf
fdivrs
cmp
fidivs
daa
cmp
sbb
das
lods
dec
stos
testb
in
mov
daa
jne
fmul
pop
sbb
jae
mov
pop
pushf
mov
push
mov
mov
not
jmp
jmp
jmp
lea
push
call
call
movb
movb
mov
call
push
nop
mov
call
jmp
xchg
nop
movsbl
xchg
pop
movsbw
xchg
not
not
push
bswap
movsbw
pusha
mov
push
mov
push
not
lea
call
lea
mov
pushf
pushf
pushf
pushf
mov
mov
movb
pushl
ret
call
lea
lea
js
xchg
pusha
pushl
ret
mov
push
pushf
movsbw
bswap
mov
push
call
jmp
jmp
insl
and
call
and
xchg
mov
pushf
movb
push
pushl
ret
call
lea
jle
mov
push
mov
jmp
pusha
push
pushf
nop
pushf
mov
xchg
pop
lahf
mov
call
nop
pushl
movb
call
jmp
call
xchg
movb
pushl
ret
jmp
mov
movzbw
not
lahf
mov
pusha
mov
push
pushf
lea
pushl
mov
xchg
movb
movb
mov
movl
pushl
ret
xor
jmp
xchg
pusha
not
movsbl
call
mov
jmp
push
mov
mov
pusha
movzbw
movzbw
jmp
push
mov
call
movw
lea
jnp
lea
pusha
xchg
pushf
push
pushf
pushl
ret
pushf
pushf
lea
pushl
pushf
push
xchg
movb
movb
push
pushl
ret
jmp
not
lea
not
call
xchg
movw
push
mov
call
call
call
movb
movb
mov
call
call
stc
xor
call
lea
call
movb
xchg
mov
movb
mov
pushl
ret
jmp
pusha
lea
call
jmp
push
pusha
pushf
movl
mov
pop
movzbl
pop
call
jmp
xchg
call
scas
dec
int3
stc
pusha
nop
pushf
mov
push
movsbw
jmp
call
lea
jmp
movw
mov
not
mov
pushf
mov
lea
ja
pushf
pushf
pusha
lea
mov
xchg
pushf
pushl
ret
pushf
call
call
mov
pushf
pushf
not
mov
mov
call
mov
jmp
call
pushf
call
mov
movsbw
jmp
call
xchg
pushl
push
movl
pushl
ret
jmp
lea
jmp
call
mov
aam
add
mov
call
mov
call
call
xchg
mov
movb
movb
mov
pushl
ret
push
mov
mov
pushf
lea
movb
xchg
pushf
movb
pushf
pushf
pushl
ret
movsbl
movsbw
jmp
pushf
call
mov
xchg
push
pushl
movw
push
pushl
ret
mov
movzbw
not
mov
jmp
mov
lea
call
call
push
movw
pushl
lea
push
jmp
mov
mov
call
mov
call
lea
lea
jns
pusha
push
xchg
pushf
movb
pushl
movl
pushl
ret
xchg
pop
sbb
call
lea
mov
pushf
push
xchg
push
pushl
ret
movb
pushf
xchg
pushf
mov
pushl
ret
lea
jne
mov
jmp
lea
call
mov
mov
lea
movb
call
not
mov
mov
jmp
xchg
push
pusha
push
pushf
pushl
ret
pushf
movl
call
mov
movzbl
mov
jmp
not
pusha
lea
xchg
not
not
xchg
pusha
mov
lea
lea
mov
movzbl
movsbw
bswap
lea
call
call
movw
jmp
xorl
cld
pushl
popf
pushl
mov
pushl
ret
pushf
lea
movb
pushf
mov
not
mov
jmp
push
mov
pushf
jmp
pusha
jmp
pusha
pushf
lea
call
xchg
movb
pushl
ret
mov
movb
lea
jge
pusha
mov
mov
pushf
movb
lea
pusha
mov
mov
xchg
pushf
pushl
pushl
ret
xchg
mov
not
bswap
pusha
mov
pushf
movsbw
bswap
lea
pop
jmp
leave
cltd
cmc
adc
std
jb
push
in
fsubrl
push
mov
adc
or
pusha
cmp
std
mov
xchg
inc
and
or
or
jmp
clc
inc
mov
in
dec
mov
loope
mov
fwait
out
xlat
out
iret
insl
push
push
xlat
mov
add
int3
fists
cmp
mov
or
daa
lock
js
pop
outsb
xchg
sbb
lret
push
test
adc
test
dec
test
mov
sbb
sbb
mov
cmp
add
cld
mov
cs
adc
dec
in
imul
cmp
loop
fcoms
and
xorb
push
mov
sub
ja
push
dec
jl
int
and
mov
lcall
pop
adc
xlat
aad
pop
lahf
loop
dec
imulb
mov
jbe
fs
sbb
adc
lahf
mov
sbb
or
push
imul
movsb
push
pop
repnz
add
movsb
push
and
call
test
rcrb
movsb
insb
add
cmp
fcmovnu
pushf
jp
and
in
movsl
push
and
mov
mov
testb
xchg
adcl
push
adcb
aaa
sbb
ret
mov
or
xor
scas
cmp
push
out
adc
movsb
loope
test
pop
add
aam
out
aaa
es
decl
mov
push
out
xchg
inc
lods
ret
sbb
mov
in
es
add
lret
and
insl
aad
daa
aam
lret
xchg
jae
xor
cmp
loop
pop
lcall
in
aaa
ss
mov
push
xor
lcall
das
and
jmp
cltd
addl
unpcklps
pop
int3
mov
inc
pop
jo
jmp
add
jne
push
cltd
popf
test
in
leave
xchg
fisubl
test
cmp
pop
addr16
stc
mov
cmp
jns
mov
and
addr16
hlt
std
inc
push
mov
mov
or
clc
add
mov
dec
cli
push
or
xor
out
in
sarl
fwait
xchg
pushf
xchg
rcrl
dec
adc
lea
sbb
xor
xchg
stos
push
ret
insb
pop
push
pop
out
add
push
popa
jnp
idivb
jmp
xchg
loop
cltd
pusha
and
stos
adc
inc
jbe
clc
jp
mov
inc
stos
jb
lock
das
sub
int
jge
jmp
xchg
js
mov
pop
rol
jl
push
cmp
out
sub
test
lahf
out
jge
and
lret
pop
data16
loopne
dec
push
jmp
pushf
cmp
ds
sub
inc
pop
out
in
mov
movsb
dec
push
fcompl
mov
movsl
push
lret
arpl
inc
or
sbb
inc
push
push
inc
inc
or
ret
inc
inc
cmp
fistpl
adc
mov
xor
insl
jno
sub
dec
gs
pop
das
mov
sub
sub
cltd
inc
addr16
js
test
xor
pop
lea
cltd
jne
sub
xor
xor
mov
jl
std
inc
aaa
pop
and
js
cmc
ret
iret
stos
cli
xorl
out
mov
stos
mov
imul
lcall
fidivrl
popf
adc
sbb
or
mov
mov
in
xor
and
mov
xchg
xchg
cmp
or
es
mov
inc
xor
data16
out
shrl
sub
push
fisubl
cmpsb
call
mov
test
int3
dec
adc
add
arpl
inc
sbb
or
jno
mov
jo
into
std
mov
loope
imul
cltd
mov
shrb
iret
push
xchg
or
mov
pop
loop
add
popf
or
arpl
hlt
cmp
or
mov
roll
cmp
push
and
popf
mul
ret
lahf
jae
push
or
sahf
add
ret
les
cmpsl
adc
insb
stos
cmp
inc
inc
pop
test
out
js
or
push
pop
icebp
addb
mov
or
add
jnp
inc
cmc
inc
rcr
xor
xchg
push
mov
fildll
roll
add
mov
mov
sbb
mov
mov
int3
addr16
cld
push
cmc
mov
sub
mov
push
lahf
xor
stc
ljmp
cmp
adc
cmc
out
lea
mov
cmp
addr16
out
or
hlt
ret
mov
stos
and
pushf
ljmp
xor
rorl
xor
mov
pop
ffree
bound
push
push
push
loop
das
xor
lods
aam
movsl
mov
negb
pop
jmp
in
lret
rolb
cld
out
mov
int3
dec
sub
inc
clc
jle
repz
push
rorb
repnz
add
or
lods
ja
jnp
outsl
mov
push
ja
cld
rcrl
mov
arpl
mov
mov
popa
sub
test
dec
mov
cmp
mov
icebp
shrb
andl
jge
pop
mov
xor
and
xor
gs
ja
nop
xchg
mov
lret
or
repz
test
and
das
dec
lret
imul
repnz
xor
imul
test
in
sub
cmp
xor
movsb
add
cltd
int3
sti
outsb
out
adc
ret
mov
adc
cmp
cmp
or
sti
popa
fsubs
cltd
xchg
or
cmp
jl
ds
jp
sahf
out
or
mov
mov
mov
and
test
mov
pop
add
iret
push
mov
ja
test
xor
add
jns
cld
pop
jecxz
aam
js
rol
mov
imul
pusha
push
pop
loop
xor
stos
xor
mov
or
dec
mov
fistpll
mov
fidivs
iret
loopne
ss
repnz
rcrb
dec
faddl
mov
pop
jb
inc
mov
push
stc
inc
add
push
push
data16
xchg
fisubs
mov
push
xor
push
mov
xchg
addl
pop
and
int3
ret
loop
mov
cltd
dec
adc
fisubrl
mov
insb
cs
dec
push
insl
sub
push
mov
jae
push
and
data16
mov
lret
movlps
lods
xchg
xchg
adc
sub
loope
push
scas
popf
outsl
jo
sub
fldenv
sbb
pop
test
mov
in
push
inc
lock
adc
fisubrs
iret
jae
add
dec
int
dec
jne
dec
fisubrs
rclb
xlat
lahf
aas
jae
or
inc
cmp
xor
sub
push
in
mov
xchg
popf
jg
sub
loopne
pop
mov
in
xchg
mov
out
in
lret
rcr
into
shll
mov
popf
cli
and
icebp
push
xchg
add
push
cmp
scas
jnp
add
push
cmpsb
icebp
mov
lahf
and
ljmp
sub
pop
aas
dec
stos
ss
push
pop
pop
push
jg
inc
popf
adc
fs
mov
jle
xor
pop
inc
mov
test
insb
adc
sub
and
ja
arpl
mov
fnstenv
cmp
adc
dec
data16
xor
or
or
addr16
add
push
pop
push
push
scas
test
sbbl
hlt
push
insl
mov
stos
stc
dec
xor
mov
xchg
loop
sbb
mov
jnp
mov
lods
scas
outsl
insb
mov
ljmp
test
imul
push
pushl
mov
call
not
sete
mov
call
movsbl
movsbw
lea
call
push
mov
mov
push
mov
movb
mov
movw
mov
lea
call
xchg
push
pusha
jmp
mov
pop
bswap
mov
push
mov
jmp
xchg
push
movb
pushl
ret
cwtl
lahf
jl
pusha
mov
call
pusha
pushf
xchg
pushf
pushf
movl
pushl
ret
push
pop
pushf
nop
bswap
movw
pushf
call
mov
call
not
mov
push
pushf
xchg
movb
lea
jb
pushf
mov
xchg
call
nop
pushf
pushf
push
xchg
movzbl
mov
pusha
jmp
mov
lea
mov
movzbw
pushf
not
call
lea
jp
pushf
pusha
xchg
bswap
call
jmp
not
lahf
bswap
mov
lea
ja
push
pushl
mov
pushf
jmp
movzbw
mov
pushf
pushf
jmp
xchg
movb
mov
pushl
ret
push
jmp
mov
pushf
mov
movb
pusha
movl
lea
jmp
mov
lea
je
push
movb
pusha
mov
pushf
call
pushf
mov
xchg
bswap
jmp
jmp
xchg
pop
pushf
pushf
pop
mov
movw
lea
jae
lea
push
mov
movzbw
mov
push
mov
pushl
pushf
pushf
call
pusha
pushf
pushf
popl
jmp
lea
pushf
mov
mov
movzbw
mov
push
pushf
mov
push
pushf
movw
call
lea
mov
pushf
pusha
xchg
movw
pushl
pushl
ret
movw
pushf
mov
mov
mov
mov
jmp
pushf
xchg
mov
pushl
ret
jmp
xchg
movzbw
pusha
call
pop
mov
mov
jmp
call
jmp
pushf
call
pushf
mov
lea
call
lea
jg
pushf
mov
mov
seto
push
push
mov
mov
push
mov
push
pushl
call
xchg
pushf
movb
mov
pushf
pushf
mov
pushf
pushf
pushf
call
bswap
lea
mov
call
push
push
lea
call
mov
jmp
mov
jmp
nop
pushl
mov
movl
pushl
xchg
pusha
mov
jmp
mov
mov
push
jmp
pushl
mov
jmp
pusha
jmp
jmp
movb
mov
jmp
pusha
push
pushf
mov
nop
pushl
pushf
pushf
mov
xchg
bswap
not
pushf
mov
mov
mov
mov
call
lea
jp
pushf
xchg
pushf
pushl
ret
mov
jmp
nop
jmp
xchg
movb
movb
mov
mov
pushl
ret
mov
pushl
jmp
xchg
pusha
mov
movw
pushl
ret
lea
jmp
mov
pusha
lea
pushf
mov
xchg
pushl
pushl
ret
mov
mov
bswap
jmp
jmp
lea
lahf
cwtl
nop
movzbw
sets
cwtl
lahf
pop
call
movl
jmp
lea
not
nop
mov
pusha
pop
mov
jmp
call
lea
jmp
mov
call
mov
pushf
mov
mov
pushf
mov
lea
jmp
call
xchg
lea
jns
pusha
push
xchg
movsbw
lea
setnp
mov
push
lea
js
pushf
mov
pushf
pusha
lea
pushf
mov
xchg
mov
pushl
ret
pusha
xchg
mov
mov
pushl
movb
pushl
ret
mov
pusha
lea
js
push
pusha
lea
call
push
xchg
pushl
movsbw
mov
push
pushf
mov
pushl
lea
je
lea
pushf
jmp
call
xchg
push
pushf
pushl
pushl
ret
jbe
mov
notb
test
jecxz
jb
inc
inc
xorb
cs
in
lret
and
adc
in
push
jne
cli
lods
insl
insb
adc
stos
pop
jmp
lock
jne
and
mov
pop
jne
xlat
bound
dec
jp
sti
ljmp
xchg
mov
sbb
adc
sbb
mov
pop
sub
dec
mov
pop
mov
js
xchg
add
jae
ja
testl
rorb
ljmp
movsb
stos
subl
jbe
mov
repz
jno
out
sbb
sar
ja
jmp
pop
fdivs
xor
cmp
lcall
pop
xor
gs
cs
jge
mov
add
sti
pop
push
cmc
jmp
inc
add
setp
addb
inc
daa
leave
pop
fistpll
daa
ret
cmp
jl
jmp
add
and
ficoml
cmp
mov
adc
mov
inc
insb
push
sub
aas
inc
pushf
mov
inc
xchg
hlt
jp,pn
adc
je
xor
push
add
out
pop
cmc
shl
mov
test
stc
jno
je
popf
fnstenv
add
pop
xor
mov
inc
and
jecxz
jns,pn
xor
lods
inc
repnz
sbb
push
pop
aas
push
je
pop
xchg
jmp
push
inc
push
sbb
inc
std
sar
loopne
jo
sahf
stos
jge
lcall
popf
fcomip
pop
sub
fists
pusha
xor
lret
mov
mov
jne
inc
ja
shrb
scas
cmpsb
test
sbbb
pop
lahf
or
filds
xor
test
lods
mov
aad
push
jl
push
cs
xchg
popa
jnp,pn
cmp
sub
xlat
mov
leave
push
ds
add
ljmp
shll
ret
and
push
and
sbb
sbb
std
in
arpl
jne
test
push
push
lahf
lock
xchg
xlat
mov
leave
lods
ja
adc
rcl
add
std
push
negl
gs
fidivrl
lds
addl
add
cwtl
sbb
and
jp
jne
out
shlb
jmp
into
ss
mov
sbb
clc
mov
pop
push
ja
outsb
add
mov
sub
cmpsl
mov
adc
mov
pop
add
lret
pop
arpl
xchg
mov
sub
leave
sub
out
mov
mov
sbb
adc
sub
mov
clc
data16
cmc
das
ja
cmp
jecxz
loop
sub
dec
in
add
jne
out
test
adc
jne
mov
pop
inc
pop
lods
in
dec
jl
int
sub
xlat
inc
push
jae
stc
lods
push
sub
je
fidivs
add
xchg
xchg
push
sarb
inc
loope
inc
mov
mov
call
xchg
jmp
pop
icebp
xchg
push
das
js
or
ds
rcll
lahf
mov
inc
push
pop
mov
and
insl
adc
xchg
dec
cmp
decl
rolb
pop
aam
sub
jp
sbb
mov
push
fbld
adc
daa
pminub
adc
imul
shrl
pop
inc
mov
mov
insl
lret
aas
lods
cmc
cmp
mov
mov
jnp
cmp
or
adc
das
test
cmp
xchg
add
xchg
movl
mov
in
das
jnp
mov
popf
sbb
sub
cmp
or
mov
adc
xchg
ss
pop
ficoml
cmp
les
mov
mov
mov
sub
jge
add
xchg
loope
dec
sbb
test
jmp
push
push
add
in
loop
cltd
repz
pusha
aad
or
ror
push
adc
js
xchg
icebp
psubsw
not
lea
nop
movsbl
pop
pusha
bswap
lea
mov
xchg
push
push
bswap
push
xchg
bswap
not
bswap
mov
movzbw
movzbw
pushf
mov
not
lea
pushf
mov
jmp
pushf
nop
movzbw
mov
mov
lea
jo
xchg
pushf
mov
push
movsbw
pushf
mov
pushl
movb
jmp
jmp
push
pushf
lea
jmp
push
pushf
popl
push
xor
push
xor
jmp
pusha
jmp
push
pusha
movb
mov
push
mov
lea
push
pushl
push
jmp
xchg
setns
mov
pushf
movw
lea
jne
lea
push
call
movzbw
nop
mov
call
call
bswap
movzbl
bswap
mov
push
movb
mov
movb
call
push
xchg
pusha
xchg
lea
mov
call
mov
mov
lea
movb
xchg
pushf
push
pushl
ret
mov
jg
std
out
jo
xchg
pop
mov
fcmovbe
mov
dec
movsb
into
push
push
js
subb
bound
mov
xor
inc
or
ret
std
push
pop
mov
out
out
mov
repz
mov
gs
sbb
lret
jecxz
roll
add
in
sbb
add
cltd
out
mov
scas
in
push
fcmovb
jle
xchg
nop
in
es
inc
push
imul
adc
mov
cwtl
mov
in
pop
loop
inc
in
fstpl
or
jne
mov
inc
add
sub
std
inc
pop
and
aas
fcompl
cmpsl
outsl
in
xor
adc
mov
inc
rolb
add
sub
xor
fdivl
movl
xchg
cmc
fistpl
rolb
les
mov
in
or
addb
push
mov
imul
test
push
test
inc
lods
cmp
lea
pop
pop
jp
inc
sbb
movsl
ljmp
jo
sbb
and
rcll
or
mov
inc
stos
push
in
mov
stos
or
xor
sub
inc
and
sub
loop
addl
stos
rolb
xlat
dec
adc
pop
pop
outsl
or
or
mov
xchg
pop
dec
faddl
inc
jl
push
lds
dec
or
push
mov
idivb
and
cmp
cmp
sub
adc
sub
mov
and
xchg
sbb
aam
dec
pop
xchg
pusha
mov
jo
jl
bound
outsl
stc
in
jecxz
add
and
call
ljmp
subl
and
test
cmc
cmp
xchg
lret
sarl
stos
jge
std
mov
mov
repz
and
fsts
in
jno
mov
add
cmp
jp
pop
push
call
mov
movsb
test
loop
dec
gs
mov
pop
jmp
xchg
pusha
inc
push
xchg
repz
xchg
arpl
inc
xchg
xchg
lret
jecxz
jg
fldcw
push
into
testl
fbld
pop
movsb
out
add
and
sahf
cmp
dec
jbe
test
popf
sub
jmp
xchg
nop
cmp
loop
subl
sbb
sbb
mov
and
aad
nop
lret
and
xchg
inc
lea
jb
shl
pop
add
daa
jnp
sub
ds
dec
adc
xchg
jns
sub
out
mov
and
push
sti
lods
decb
scas
popf
jb
popf
mov
or
icebp
adc
add
lret
cli
jmp
test
fs
xor
fisttpl
mov
lcall
or
ljmp
shrb
pushf
jnp
or
lods
mov
inc
xor
int
pop
mov
outsl
fimull
loopne
add
iret
pushf
imulb
imulb
cmpb
and
fidivrs
mov
mov
and
rorb
les
outsb
mov
imul
inc
imul
mov
idivb
cmc
inc
scas
cld
or
flds
inc
adc
xchg
cmp
lea
sbb
mov
dec
adc
mov
mov
jb
sbb
nop
lea
inc
cwtl
adc
push
push
in
jne
stc
mov
jmp
pop
clc
push
xchg
adc
or
lock
negl
dec
add
insb
cmpsl
nop
ror
out
inc
push
sbb
lock
add
xchg
bswap
pusha
mov
call
pusha
pushf
popl
pushl
stc
xor
test
xorl
pushf
xor
clc
xor
test
xor
push
xor
push
xor
pushf
xor
pushl
pushl
popf
push
push
pushl
ret
call
pushf
mov
call
jmp
mov
lea
jmp
mov
xchg
pusha
mov
pushf
pushf
lea
jg
pushf
mov
jmp
push
lea
jmp
push
pushf
pusha
mov
movzbw
not
mov
mov
mov
lea
js
pushf
push
lea
call
xchg
push
jmp
pushf
jmp
pusha
lea
pusha
movw
pushf
mov
mov
bswap
mov
jmp
lea
jmp
cwtl
jmp
not
xchg
not
mov
bswap
xchg
jmp
bswap
lea
nop
call
mov
lea
ja
push
push
xchg
mov
pushf
xchg
setns
lea
pop
mov
mov
movb
lea
jp
push
pushf
mov
pusha
mov
lea
lea
jbe
xchg
push
movb
pushl
ret
call
call
nop
jmp
jmp
gs
xchg
pushl
pushl
ret
jmp
jmp
bswap
mov
lea
jg
push
pusha
lea
pusha
pushf
mov
bswap
pushl
call
not
movsbl
setp
mov
jmp
or
mov
mov
jmp
jp
push
pusha
pusha
nop
mov
push
call
mov
movw
call
mov
setbe
call
xchg
movw
mov
mov
movb
pushl
ret
push
lea
movw
mov
pushl
ret
jmp
and
std
outsb
ss
cltd
out
jp
and
test
sarb
inc
xlat
movb
sbb
sti
mov
mov
scas
mov
inc
mov
sbb
mov
jmp
push
lahf
add
sbb
fists
ds
and
adc
xchg
jmp
fldenv
pop
jae
shll
loope
sbb
sarb
into
ja
ljmp
dec
mov
and
test
jge
in
push
mov
jl
cltd
jae
push
push
lcall
jl
fcmovb
dec
cmc
std
sbb
fidivs
std
mov
sub
into
or
loop
fdivrs
dec
cmp
inc
inc
leave
mov
pop
mov
mov
add
faddl
and
adc
xor
les
cmp
shl
mov
lods
cmpxchg
inc
inc
push
mov
das
jns
add
mov
mov
mov
into
lea
inc
xor
or
cmp
bound
mov
jle
lods
fdivl
jecxz
jle
pusha
pop
cmp
insb
insb
cmp
xchg
fcmovbe
orl
mov
outsl
imul
xchg
jle
pop
orb
lea
push
pop
jns
adc
jb
push
gs
in
pop
jo
pop
jb
jmp
mov
jae
enter
in
lock
mov
stos
loope
pushf
and
mov
arpl
bound
xlat
and
add
push
aam
push
push
popf
xlat
mov
subb
pop
adcl
pop
adc
fisttpll
aad
scas
jnp
addr16
jne
enter
mov
add
inc
sub
rorl
push
jl
inc
jecxz
mov
xor
mov
ds
fdivrs
push
hlt
cmp
jbe
and
sub
jecxz
pop
clc
dec
stos
or
lds
bound
pop
jg
rorb
xchg
jecxz
jae
pop
fildl
stos
cs
daa
and
loop
xor
addr16
mov
dec
adc
lods
cmc
cmp
mov
enter
jno
fistl
cmp
popa
jbe
std
push
rclb
ret
push
or
or
push
stos
shlb
mov
add
hlt
pop
frstor
ficomps
xchg
sub
add
push
es
popf
jge
std
and
cmp
pop
cmp
ss
sbb
sbb
inc
jle
xor
data16
pusha
mov
mov
mov
cld
outsb
jae
imul
inc
aas
or
add
fwait
adc
or
dec
adc
xchg
clc
mov
aas
or
xlat
xor
or
leave
push
dec
sbb
shl
mov
test
fldcw
aad
xchg
mov
addr16
stos
pop
push
and
stos
gs
sahf
idivl
adc
xor
outsl
loopne
icebp
mov
aad
fwait
xchg
inc
inc
in
add
mov
pop
and
loopne
nop
push
mov
lcall
pop
xor
push
mov
xor
add
xchg
push
nop
pop
xor
fidivl
mov
adc
add
inc
push
pushf
dec
insl
push
pop
cmp
lock
stos
dec
pop
scas
icebp
aad
pop
gs
push
pop
roll
pusha
and
sub
loopne
jbe
je
jnp
sub
xor
fisubs
push
cwtl
sbb
jmp
xchg
imulb
mov
enter
dec
dec
and
xor
pop
mov
cmp
call
idiv
dec
adc
mov
push
inc
pop
mov
lock
adc
lahf
push
cld
mov
xchg
outsb
or
dec
add
sub
pop
test
push
push
push
xchg
stos
sbb
mov
sahf
dec
and
loop
mov
sti
test
movb
aam
xor
jmp
cmp
loopne
stos
in
or
lods
cmpsb
mov
mov
in
mov
fwait
enter
aad
rolb
add
ja
scas
mov
das
jge
js
les
lds
addr16
jp
xchg
insl
scas
cmc
out
dec
out
jae
adc
out
or
test
inc
js
mov
or
imul
cmp
push
addr16
stc
dec
xchg
pop
mov
or
cmpsl
fxch
cltd
shll
push
inc
icebp
imul
into
cmpsl
adc
scas
add
bound
cmp
fnstsw
mov
pop
pop
and
call
inc
inc
inc
cmpsl
icebp
cs
in
imul
fnstsw
imul
ds
mov
adc
insb
pushf
jmp
mov
jmp
pusha
xchg
lea
movb
mov
call
jmp
jmp
mov
movw
call
lea
call
jmp
jmp
mov
mov
pushf
push
pushl
ret
pusha
pushf
mov
lahf
mov
jmp
pushf
pushf
lea
pusha
pushf
call
mov
call
pushf
call
push
call
push
xchg
movb
movw
movb
mov
pushl
ret
mov
pusha
lea
movb
pushl
mov
not
movw
mov
movb
movb
movl
mov
lea
jnp
pushf
lea
movb
jmp
lea
jmp
nop
bswap
pusha
pusha
mov
call
jmp
call
mov
xchg
lea
movsbw
bswap
call
call
pushf
mov
lahf
lahf
mov
jmp
push
push
lea
pushf
call
lea
pushf
call
pusha
call
jmp
lea
ja
pushf
lea
pushf
pushf
xchg
push
pushl
ret
lea
lea
push
nop
movsbl
mov
jmp
push
mov
call
xchg
pushf
pushf
xchg
movsbl
lahf
lea
ja
mov
push
push
pusha
mov
jmp
mov
movzbw
mov
movb
pushf
mov
call
jmp
pusha
pusha
nop
jmp
movzbl
jmp
lea
call
mov
pop
pusha
movsbw
lahf
mov
movb
jmp
pushf
lea
jnp
nop
jmp
push
pusha
pushf
mov
call
jns
add
std
addr16
adc
jge
xchg
pop
test
add
pop
dec
loop,pn
push
xor
xchg
aad
cmp
or
add
cmp
psubusw
xchg
mov
nop
es
pop
popf
nop
clc
cltd
sbb
outsb
sbb
cvttps2pi
push
fists
test
xchg
xchg
sbb
cld
dec
push
adc
std
cmpsb
xchg
std
enter
mov
insl
cmpsl
jnp
pop
fistpl
dec
cli
inc
test
pop
sbb
add
fs
pop
cmpb
pop
push
daa
mov
add
jbe
iret
inc
add
jns
jo
std
mov
ss
dec
loopne
addl
xchg
jg
inc
lds
xchg
mov
add
call
sbb
jne
stos
xor
cmp
pop
adc
dec
pop
test
aas
lds
inc
mov
ljmp
xchg
xchg
fnstcw
cld
fnstsw
jb
jmp
out
cs
mov
add
pop
outsl
sar
imulb
arpl
or
sub
test
mov
loop
and
fldenv
sbb
mov
cmpsb
fsubrl
inc
add
sub
std
rcrl
or
aam
xlat
and
clc
rcll
addb
add
push
cld
sbb
outsb
and
push
or
adc
andl
cmc
push
cmp
mov
bnd
nop
aaa
xchg
test
imull
pop
pop
cwtl
sahf
jg
dec
adc
pop
out
push
jge
xchg
and
sbb
xchg
mov
jl
fwait
jle
dec
and
inc
iret
xchg
add
mov
shll
mov
pop
insl
aas
gs
fsubl
sbb
flds
mov
fcoml
lds
dec
addr16
xchg
mov
cmp
fidivrs
or
cmp
popf
int3
fsubrs
into
int3
mov
insl
pop
adc
mov
push
sub
inc
mov
aas
loopne
sahf
in
lds
or
daa
dec
in
lret
pop
dec
cwtl
loopne
gs
out
push
xchg
add
shll
add
test
flds
xor
jl
ret
xchg
cmp
xchg
mov
sub
and
xchg
inc
pop
adc
in
sub
or
sbb
or
mov
add
jecxz
xor
cmp
hlt
inc
sub
fistpll
inc
sbb
or
sbb
movsl
xlat
push
inc
fs
cmp
in
stos
ret
add
std
addr16
xchg
xor
push
push
pop
adc
dec
push
sbb
and
stc
lcall
lods
pop
mov
adc
inc
and
pop
jbe
out
xchg
inc
inc
inc
jb
inc
pop
pop
test
sbb
sbb
inc
leave
shll
jle
and
or
mov
mov
stc
jno
sbb
sbb
repnz
jmp
jmp
cmp
ret
inc
pop
mov
pop
repnz
mov
xchg
or
jae
mov
loopne
mov
arpl
xchg
in
dec
fwait
je
pop
notb
lret
scas
mov
adc
movsl
and
adc
das
dec
in
mov
shlb
lahf
movsl
iret
in
sbb
mov
xor
insl
adc
mov
dec
out
das
lods
sub
push
dec
stos
aad
jo
je
pop
out
cmpsb
les
adc
aad
xor
ret
adc
loope
mov
pop
insb
mov
or
lods
out
inc
mov
iret
xchg
jmp
mov
xchg
dec
ljmp
sbb
movsb
cmp
sbb
sbb
in
and
push
mov
mov
imul
jb
push
repnz
xchg
pop
lret
sub
and
lds
mov
pusha
iret
mov
fwait
jmp
ret
addr16
out
lods
dec
pop
push
mov
sub
or
scas
mov
push
fdivrl
xchg
shrl
jmp
sbb
dec
push
xchg
xchg
iret
int
mov
inc
orl
adc
jg
jmp
mov
cmc
incl
dec
aam
jbe
stc
sub
sub
pop
and
inc
mov
adc
push
push
loopne
mov
stos
cmc
mov
fnstcw
jo
jo
xorl
movsl
mov
or
negl
arpl
push
xchg
jno
jbe
pushf
push
sub
push
movsb
rclb
adc
or
pop
cld
push
daa
insl
shl
jns
pop
movsb
fldt
or
mov
jecxz
loope
xchg
lret
in
fisubrs
add
loope
push
out
sbb
dec
jns
xlat
rolb
pop
mov
enter
or
mov
mov
and
mov
adc
inc
call
and
dec
cmpsl
mov
loopne
icebp
jg
pop
or
enter
mov
jecxz
xchg
lahf
xchg
sti
nop
fisttpll
or
fidivrs
adc
ret
inc
dec
dec
inc
add
into
scas
jl
and
movsb
scas
mov
xchg
mov
cmc
dec
stos
fstpt
jnp
jno
xor
dec
adc
cltd
cmp
mov
and
inc
es
mov
pop
jp
lea
mov
jmp
js
pusha
pusha
nop
call
call
push
push
xchg
mov
pushf
mov
pushl
ret
call
push
pushf
pushf
popl
cmp
xorl
jmp
mov
pushf
call
not
mov
bswap
mov
pushf
pushl
ret
pushf
push
mov
pushf
call
lea
call
lahf
jmp
call
jmp
jmp
mov
jmp
push
xchg
push
pushf
pusha
movl
pushl
ret
call
pushf
lea
pushl
pusha
lea
js
pusha
xchg
pusha
pushl
ret
call
pushf
mov
jmp
push
mov
call
pushf
pusha
pushf
mov
movsbw
setp
mov
jmp
pushf
lea
mov
push
movb
push
xchg
mov
mov
mov
pushl
ret
call
call
call
call
pushf
movb
pusha
nop
pushf
mov
call
jmp
jmp
jmp
call
sbb
loopne
decl
add
and
mov
lea
mov
movsbw
mov
pushf
mov
pushf
mov
call
pushf
mov
nop
push
pushf
mov
jmp
nop
jmp
mov
movb
lea
pushf
mov
bswap
pushf
movsbl
mov
mov
call
lea
jmp
nop
pushf
push
xchg
pushf
lea
jmp
mov
pushf
movb
push
call
pushf
xchg
mov
pushl
ret
add
add
call
push
push
mov
call
call
jmp
pushf
push
xchg
mov
mov
pushf
jmp
mov
pushf
lea
jmp
mov
bswap
jmp
mov
lea
jmp
xor
push
xorl
call
movb
jmp
pusha
xchg
movsbw
bswap
movzbw
pusha
mov
movb
call
setb
jmp
jmp
lea
call
pushf
pusha
lea
pushf
call
lea
pushf
jmp
mov
mov
call
mov
pushf
pushl
ret
xchg
movb
pushl
ret
call
mov
push
inc
xchg
mov
pushf
pushl
ret
mov
bswap
mov
bswap
mov
jmp
lea
jmp
lea
call
mov
pusha
push
call
movb
call
xchg
pusha
pushf
mov
pushl
ret
call
push
movw
pusha
nop
push
jmp
mov
stos
outsl
add
mov
lea
pushl
mov
lea
pop
setp
mov
pushf
jmp
pushf
movb
xchg
pushf
movb
pushl
pushl
ret
xchg
bswap
mov
call
push
pushf
pusha
lea
jmp
mov
not
pushl
movzbw
mov
jmp
push
xchg
pushf
pushl
ret
nop
push
jmp
mov
std
out
pop
cmc
stos
sarl
jbe
sti
inc
push
push
mov
scas
xor
pushf
and
sbb
pop
push
stos
xchg
sub
cmpsl
adc
mov
ret
stc
adc
dec
jno
ficoms
jno
xchg
out
jno
popf
int3
sub
mov
insb
in
pop
addb
xchg
xchg
mov
jns
sub
test
sub
and
test
gs
fsubrs
cmpl
sti
imul
jbe
push
push
pop
dec
gs
mov
push
imul
es
xor
push
and
mov
insl
sub
iret
data16
add
inc
cmc
jns
inc
xchg
fiaddl
xor
inc
add
imul
sar
mov
enter
adc
mov
int
ret
and
outsl
iret
data16
ret
add
mov
adc
outsl
jecxz,pn
shlb
jo
fcomp
ret
add
shr
shlb
xchg
dec
loop
cltd
lret
xor
insl
pushf
sahf
lcall
push
daa
int
stos
dec
inc
cmp
lcall
pop
sub
push
jns
push
sahf
mov
mov
lods
adc
mov
mov
or
jbe
add
fsubs
in
adc
ret
lahf
inc
push
movsb
rcll
sub
test
pop
popl
test
lods
push
mov
lret
movsl
jmp
mov
dec
test
dec
pop
loop
vmaxps
xor
iret
popl
sbb
sarl
test
pop
gs
mov
mov
mov
push
mov
mov
and
pop
push
xor
cmp
lds
inc
out
jne
loop
xor
cmp
jbe
push
fs
sbb
add
add
or
xchg
push
mov
movsl
shll
push
scas
xchg
lret
add
outsl
push
dec
adc
push
mov
push
ss
jmp
andl
lret
xchg
sar
sub
adcb
xchg
test
sar
adc
mov
lods
dec
and
add
xor
outsb
mov
fwait
add
test
jge
imul
mov
add
add
arpl
pop
std
push
xchg
repnz
in
and
mov
std
sub
or
and
enter
inc
mov
or
mov
adc
aas
and
xchg
adc
jle
ja
cmpsb
inc
xor
je
arpl
jb
inc
out
cmp
fdiv
fistps
ds
push
mov
iret
in
fwait
inc
mov
arpl
sub
lods
js
std
dec
stos
push
mov
mov
mov
movsb
out
jbe
cld
pop
xor
cmpsb
mov
xchg
sub
mov
jbe
sbb
inc
mov
or
sub
xchg
pop
push
mov
mov
fmull
mov
roll
xchg
xchg
movsl
jbe
cli
add
jns
cmp
inc
mov
jl
mov
dec
adc
fldt
popf
shl
insb
std
xchg
testb
fisttpl
pop
jg
int3
dec
das
jo
aam
leave
and
adc
lock
repnz
sti
fld
dec
lea
xchg
loop
bound
cld
lret
shrb
jno
int3
dec
xchg
cmp
loope
lds
scas
mov
ss
imull
test
outsb
push
add
testl
and
jne
insl
clc
mov
ret
std
jae
dec
cltd
stos
and
dec
and
add
pop
cli
or
popa
pop
cmc
push
cmp
js
jp
inc
or
imul
mov
call
ret
cmp
jge
xor
xor
enter
pop
inc
nop
and
addr16
mov
iret
mov
dec
sbb
add
cs
pop
mov
hlt
rolb
jge
mov
mov
ja
jecxz
loopne
add
cmp
xchg
adc
xlat
aam
inc
ret
xlat
rcl
mov
fucomip
mov
or
sbb
jle
mov
sbb
js
jg
add
and
loopne
loope
inc
xor
cmp
dec
sbbb
and
inc
mov
xlat
ja
jne
cmp
int
pop
inc
mov
xchg
inc
test
jmp
jmp
movb
xchg
pushl
mov
pushf
pushl
ret
lea
movb
mov
movsbl
pushf
mov
push
movw
mov
movb
jmp
nop
jmp
lea
pushf
call
push
movl
pushf
nop
pushf
lea
jle
push
mov
movsbl
bswap
mov
call
bswap
mov
lea
lea
pushf
mov
movzbw
mov
pushf
pushl
ret
nop
push
call
pushl
xchg
movsbw
mov
jmp
pushf
jmp
mov
movzbw
bswap
cwtl
mov
mov
mov
push
movw
push
lea
pushf
mov
call
pushl
lea
pushf
lea
jae
push
push
bswap
push
mov
call
not
mov
lea
jno
push
xchg
jmp
pusha
call
xchg
mov
mov
mov
pushl
ret
pushl
pushf
xchg
mov
mov
mov
pusha
lea
jmp
movzbw
lea
nop
not
pop
call
cltd
shl
pop
pop
mov
movsbl
lea
pop
mov
movzbl
mov
movb
pushf
pushf
pushl
ret
xchg
push
pushl
ret
mov
rol
dec
bswap
jmp
and
xchg
mov
movb
mov
pushl
ret
call
xchg
movl
pushf
mov
pushl
ret
lea
movl
pushf
pushf
xchg
push
pushl
ret
xchg
mov
pushf
pushf
pushf
pushl
ret
pusha
mov
push
bswap
jmp
inc
lahf
fisubrl
xchg
pop
bswap
pushf
xchg
call
pop
imul
inc
add
nop
pusha
add
jmp
push
nop
push
mov
movzbl
cwtl
not
mov
call
mov
lea
call
mov
call
pushf
mov
push
not
mov
call
call
pushf
mov
mov
lea
push
lea
jae
push
xchg
push
movb
pushl
ret
call
imul
and
cwtl
mov
pushf
mov
pushf
lea
call
mov
lea
pusha
lea
movsbw
mov
movb
jmp
movl
mov
jmp
pushf
movb
xchg
movw
mov
pushl
ret
mov
lea
pushf
xchg
push
pushf
pushl
ret
jmp
pushl
mov
pusha
lea
movb
movb
movb
xchg
mov
push
movb
movb
pushl
ret
call
xchg
pushf
pushl
ret
jmp
jmp
mov
call
mov
call
lea
nop
pop
pop
pusha
xchg
pushf
call
mov
lea
jnp
pushf
xchg
mov
pushl
push
jmp
push
jmp
jmp
push
pushf
popl
cmc
test
xorl
cmp
cmp
xor
pushf
stc
xor
stc
xor
bt
mov
xor
mov
xor
cmc
xor
stc
xor
call
call
xor
call
xchg
mov
push
pushl
ret
lds
mov
mov
nop
pusha
call
xchg
push
pushl
pushl
ret
mov
movb
jmp
lea
push
xchg
push
mov
movb
movb
pushl
ret
pushf
pusha
xchg
pushf
mov
push
push
pushl
ret
mov
push
lea
lea
jg
pusha
mov
xchg
pusha
pushf
push
pushl
ret
call
lea
jmp
jmp
pushf
lea
jae
xchg
push
pusha
pushl
ret
pushf
push
lea
call
call
mov
movb
pushf
lea
mov
movb
xchg
push
pushl
pushl
ret
out
rcrl
std
cwtl
jecxz
dec
incb
movsl
out
ds
cmc
fidivl
fadd
dec
js
jg
cmpsb
movsb
add
outsb
adc
jb
jne
xchg
dec
fwait
je
imul
xchg
xchg
pop
pop
test
jle
sub
std
pop
jg
jae
sbb
cmp
sub
bound
or
aas
add
pop
adcl
jmp
dec
dec
scas
movsl
into
lods
int3
sbb
loopne
xor
fcmovne
stos
dec
ss
inc
gs
push
sbb
std
adc
mov
fimull
cmp
cli
negl
test
shrl
add
push
mov
das
mov
in
add
hlt
aas
mov
int
sar
lcall
scas
dec
push
in
jp
mov
dec
movsb
cs
cwtl
pushl
sub
nop
push
mov
push
and
stc
pop
jmp
push
and
xor
mov
movsb
mov
hlt
test
sbb
dec
push
xor
ljmp
xchg
mov
repnz
loope
sbb
adc
jnp
mov
pop
pop
mov
dec
lret
push
jae
cmp
fsubs
cmp
clc
in
or
pop
js
cmp
and
dec
add
sbb
daa
ret
pushf
out
outsl
mov
sti
clc
outsl
cmpsb
cs
xchg
loop
cwtl
mov
loop
into
ret
ret
testl
mov
xor
xor
rcrl
pop
mov
cwtl
mov
sbb
data16
or
subb
and
or
outsl
add
scas
xor
loope
sub
mov
cmp
imulb
xchg
loopne
gs
or
movsb
push
dec
push
push
mov
or
ss
lcall
fsubrs
mov
je
fnstsw
and
mov
pop
mov
jns
mov
aas
xchg
pop
pushf
jo
inc
test
mov
xlat
pop
fndisi(8087
inc
mov
lods
lcall
cmp
sub
daa
mov
mov
sbb
cmpsb
add
sbb
mov
adc
jns
negb
pop
and
std
into
rol
fldl
pop
test
mov
adc
lcall
jmp
or
jbe
fs
adc
outsl
xchg
and
adc
popf
push
lds
mov
popf
gs
adc
fsubl
test
cmp
das
imul
mov
imul
cli
addl
in
bound
inc
xchg
sbb
xchg
mov
pusha
idivl
fwait
imul
faddl
lods
icebp
jecxz
rorb
xchg
xchg
cwtl
cmp
out
mov
and
ss
rolb
pmullw
mov
push
pop
lods
fdivrs
push
addb
leave
frstor
and
ficoms
lock
jns
cmpsb
push
lret
jmp
mov
xchg
div
test
out
lods
push
popf
push
dec
adc
xor
jl
dec
jmp
sbb
mull
cmpb
call
inc
ja
pop
sub
or
fwait
aam
aad
adc
jge
les
aad
mov
pop
inc
adc
loopne
pop
stos
cs
add
xchg
sbb
jnp
add
int3
pop
jmp
push
xchg
adc
mov
adc
fdivp
push
call
jmp
mov
lahf
mov
pop
sahf
jmp
cmp
fistl
mov
push
jge
lock
stc
sbb
dec
rolb
gs
jecxz
mov
add
subl
aas
pop
mov
repz
inc
sbb
xchg
arpl
dec
pushf
pushf
push
lea
pushf
pushf
jmp
ret
adc
fsubrp
mov
insb
and
pushf
jmp
pusha
pushf
popl
cmp
xor
mov
xor
movb
xor
push
xor
movb
xor
cmc
jmp
jmp
lahf
mov
pusha
movb
mov
movb
pushl
call
lea
jl
push
pusha
mov
push
mov
push
push
mov
pushf
pushl
lea
mov
xchg
pushl
pushl
ret
mov
pushf
movw
nop
pusha
jmp
xorl
clc
xor
std
pushl
popf
mov
pushl
ret
call
push
lea
call
call
lea
jmp
movb
lea
jmp
pushf
lea
movl
pushl
ret
movsbw
bswap
pop
call
jmp
call
call
pushl
mov
lea
jle
mov
pusha
mov
pusha
call
pushl
xchg
pushf
mov
pushl
ret
pushf
pusha
pusha
lea
jmp
mov
movb
pushl
movw
lea
movb
call
pusha
pushf
lea
jmp
call
pushf
jmp
lea
push
jmp
push
push
xchg
not
setg
mov
mov
jmp
nop
xchg
cmpsb
push
sar
ret
adc
pushf
ret
push
pop
popf
enter
rorb
mov
inc
lahf
sahf
inc
outsl
sti
ds
ljmp
pusha
cmp
rclb
into
ja
xchg
cmp
ss
in
xor
aad
movsb
sbb
push
mov
jae
mov
cmp
dec
xchg
insl
push
ljmp
dec
cmp
xchg
in
inc
cmpsl
jne
dec
sbb
dec
adc
lods
mov
lods
push
and
or
or
loopne
aas
pop
in
mov
out
jae
or
cmovl
inc
push
jae
add
sahf
push
push
sub
std
outsl
ja
and
or
jle
mov
sub
cmp
xchg
lock
ljmp
loopne
or
ret
cmpsb
sbb
aad
push
cmp
iret
jg
sahf
call
popf
mov
jg
shll
jge
pop
iret
add
out
test
add
xchg
stos
shrl
sbb
jo
aaa
mov
fcomps
int
fisttps
scas
pop
cltd
cmp
jb
stc
jne
sbb
test
call
mov
jmp
movzbw
movzbw
jmp
jl
pusha
push
nop
pushf
mov
push
xchg
mov
push
pop
mov
jmp
pushf
pushf
lea
call
mov
push
lea
jne
lea
push
mov
jmp
pushf
lea
pushf
pushf
mov
mov
mov
push
mov
movb
push
lea
movb
call
pushf
pusha
push
nop
jmp
jmp
call
xchg
pushl
push
pushl
ret
xchg
mov
movb
pushl
ret
xchg
movl
pushl
ret
pusha
movsbw
mov
push
movw
movb
lea
js
mov
pushf
pusha
mov
jmp
pushf
mov
jmp
pushf
xchg
pushf
jmp
jmp
pushf
xchg
jmp
pushf
pushf
pushf
mov
movzbw
pop
mov
jmp
lea
pushf
lea
jo
pushf
pushf
mov
movzbw
push
not
mov
movb
pusha
pushf
mov
mov
pushl
mov
jmp
xchg
pusha
pushf
pushf
mov
pushl
ret
pushl
scas
pushf
pushl
xchg
movl
xchg
movsbw
not
call
call
jmp
movw
pushf
nop
push
mov
mov
mov
jmp
push
xchg
pushf
pushl
ret
call
jmp
mov
cwtl
mov
jmp
bswap
pushf
nop
jmp
ja
push
pushf
movb
xchg
push
pushf
pushl
ret
lea
jmp
mov
jmp
lea
pushf
mov
xchg
pushf
movb
mov
pushl
ret
mov
mov
jmp
jmp
movw
mov
mov
pusha
lea
call
push
pusha
movw
xchg
pushl
mov
mov
movb
pushl
ret
xor
cmc
xorl
test
xor
cmp
test
xor
call
setle
bswap
mov
jmp
jmp
call
mov
pushf
mov
lea
push
xchg
push
pushl
ret
pushf
lea
jmp
jmp
call
push
jmp
mov
mov
jmp
mov
push
mov
pop
mov
push
lea
pushf
mov
lea
mov
jmp
xchg
mov
mov
movb
pushl
ret
movb
movl
call
xchg
call
jmp
mov
pop
lea
jle
mov
push
mov
pushl
pushf
pusha
jmp
pushf
pusha
xchg
push
pushl
pushl
ret
lea
pushl
push
xchg
push
push
pushf
pushl
ret
lea
jp
xchg
pusha
pushf
pushl
ret
pushf
xchg
pushl
pushl
ret
lea
mov
call
jmp
movb
xchg
pushf
movb
push
xchg
pusha
mov
pushf
mov
pushf
call
lea
lea
jno
pushf
pusha
mov
pop
pop
mov
pushf
pusha
jmp
xchg
pushf
pushl
ret
pusha
pushl
pusha
call
lea
jmp
pushf
pushf
pusha
nop
pushf
pushl
mov
movsbw
jmp
pushf
mov
call
pushf
mov
movsbl
mov
pusha
mov
jmp
mov
movzbw
bswap
mov
call
lea
push
pushl
mov
pushl
mov
push
call
jmp
mov
jmp
jmp
push
mov
pushl
mov
pushl
lea
push
xchg
pushf
pushl
movb
movb
pushl
ret
xchg
bswap
pushf
mov
movb
lea
pusha
pushl
mov
call
jmp
jmp
pushl
lea
jg
pushf
nop
pushl
pushl
mov
movzbw
call
pusha
jmp
push
movb
call
call
mov
xchg
pushf
jmp
call
call
mov
jmp
call
movsbw
lea
mov
call
jmp
push
xchg
pushf
pushf
pushf
mov
pushl
ret
mov
call
lea
call
mov
call
pusha
pushf
popl
pusha
xor
cmp
mov
xor
cmp
xor
clc
test
xor
movb
stc
xor
cmp
cmp
xor
stc
cmp
xor
test
xorl
test
pushl
popf
pushf
pushl
ret
lea
jae
push
push
movb
pushf
lea
jmp
lea
mov
mov
pop
mov
mov
pushf
push
mov
pushl
ret
not
mov
movzbw
not
mov
pushl
movb
mov
pushl
ret
lea
jmp
jmp
lea
pushf
movb
xchg
pushf
pushf
mov
pushl
ret
mov
call
pushf
pusha
xchg
jmp
xor
clc
xor
bt
xor
jmp
pop
pushl
mov
call
mov
mov
pop
lea
mov
movb
pushf
lea
movw
call
push
nop
push
mov
jmp
pushf
jmp
call
mov
push
lea
push
mov
mov
call
pushf
movb
mov
movw
mov
jmp
push
push
movsbl
mov
pusha
pusha
call
jmp
pusha
push
pushf
movl
jmp
call
xchg
pushf
mov
mov
movb
pushl
ret
push
mov
jmp
movb
mov
push
lea
jl
pushf
pusha
lea
pushf
jmp
xchg
pushf
pushl
movb
pushl
ret
call
pushl
lea
push
push
pusha
jmp
pusha
push
push
xchg
jmp
lea
pushf
pushl
mov
setp
pop
pushf
call
push
mov
jmp
call
jmp
lea
mov
mov
movl
call
call
pusha
jmp
call
jmp
mov
jmp
movl
lea
movl
mov
movw
pushl
xchg
movb
mov
push
pushl
ret
mov
xchg
movb
pushl
ret
movzbw
mov
pushl
pushf
jmp
jmp
nop
pusha
push
jmp
pusha
call
jmp
mov
lea
nop
call
lea
movl
pushf
xchg
mov
mov
pushl
push
pushl
ret
lea
mov
push
mov
jmp
mov
movsbw
lea
nop
mov
bswap
pushf
mov
movb
xchg
pushf
xchg
mov
mov
pusha
mov
call
pushf
call
pusha
lea
push
jmp
lea
pusha
xchg
movb
movb
push
pushl
ret
movl
and
seto
pusha
mov
pusha
pushf
pushf
push
lea
lea
jns
pushf
push
pushf
mov
jmp
jmp
push
mov
pushf
mov
mov
jmp
jmp
pushf
movzbl
not
mov
movzbl
pushf
jmp
jmp
pusha
pusha
nop
pushf
movb
xchg
jmp
mov
bswap
mov
movb
mov
mov
jmp
xchg
pushf
push
mov
cwtl
mov
jmp
not
call
jmp
push
pushf
mov
jmp
mov
lea
movb
movb
movb
xchg
mov
movw
pushl
ret
xchg
push
pushf
mov
pushl
ret
pushf
not
mov
mov
mov
push
call
lea
js
push
mov
mov
movsbl
not
jmp
lea
jle
mov
mov
pop
pushf
xchg
push
push
mov
push
mov
mov
movb
mov
push
mov
movl
jmp
call
mov
mov
pushf
not
jmp
xchg
movw
xchg
cwtl
call
mov
pushf
jmp
not
call
jmp
pushf
movb
movb
pusha
lea
call
lea
jle
xchg
push
mov
mov
call
mov
bswap
mov
jmp
shlb
inc
sar
mov
add
or
and
xchg
mov
dec
stos
icebp
test
push
dec
imul
push
mov
adc
icebp
icebp
xchg
push
push
mov
shlb
cmc
mov
pop
je
imul
dec
aas
sub
add
cmp
xor
nop
mov
fildll
sub
push
cli
fsubrl
sti
popf
jmp
mov
mov
insl
push
mov
je
pop
pop
and
mov
mov
mov
adc
fnstenv
ds
cmp
sbb
push
call
andb
hlt
fisubrs
mov
cmpsl
ss
sub
mov
test
js
movsl
jae
in
fsubs
adc
std
fdivl
adc
inc
or
lahf
shlb
mov
jle
push
negb
add
add
pop
ret
push
mov
stc
add
xchg
sahf
cs
or
scas
outsl
xchg
loopne
pop
mov
pusha
inc
dec
xor
dec
mov
adcl
mov
in
mov
jp
mov
mov
incl
adc
lret
adc
out
and
mov
push
or
aam
repz
test
push
xor
cmpsl
pop
adc
cli
into
mov
out
test
dec
add
push
pushf
sub
cmp
xor
sbbl
mov
addr16
xchg
mov
push
and
mov
pop
scas
insl
ds
gs
dec
jne
ret
add
jmp
inc
mov
push
cmpl
xchg
js
xor
dec
mov
call
mov
fisubl
les
aaa
push
out
unpcklps
xchg
arpl
mov
or
les
pop
loope
popf
icebp
ret
cmp
cmp
adc
inc
sbb
jp
fldcw
jmp
mov
clc
shr
je
stc
push
pop
outsl
jo
cmpsb
inc
sahf
adc
outsl
inc
cmp
das
decl
push
jnp
cmc
fcoms
icebp
xchg
pop
in
mov
rclb
pop
pop
mov
mov
dec
lea
rolb
and
xor
and
push
out
insb
inc
nop
cmpsb
pop
jb
aaa
jo
leave
fldt
lds
sahf
add
mov
pop
enter
fildll
and
or
mov
incl
pop
mov
jecxz
dec
xor
add
jmp
jno
fisubrs
xchg
and
jle
xor
outsb
pop
fldt
je
aas
mov
or
add
jo
inc
stos
sbb
in
mov
sub
sub
imul
pusha
inc
dec
jg
sbb
and
push
mov
fld
sub
shl
xchg
push
jg
and
out
scas
pusha
stos
dec
xchg
idiv
mov
jecxz
punpckhbw
inc
xor
mov
incl
inc
outsl
pop
cld
mulb
add
notb
jle
cmp
dec
mov
dec
and
stos
idivb
js
cmp
xlat
jecxz
int
push
lds
ret
jno
jo
pushf
test
jle
test
adc
dec
xor
push
imul
out
mov
add
dec
fiaddl
cli
sub
ret
std
dec
std
dec
int
inc
xlat
dec
orb
outsl
dec
fsubrl
ss
dec
in
cmp
shll
lock
xchg
xor
dec
mov
call
lea
pushf
pusha
movsbl
nop
pop
pushf
mov
push
movb
lea
jg
pushf
xchg
call
bswap
push
mov
pusha
xchg
lea
pushl
call
push
lea
call
push
call
pusha
mov
pushf
lea
movb
xchg
push
pushl
ret
bswap
nop
push
not
pushf
mov
mov
push
xchg
call
jmp
lea
jle
push
call
push
push
nop
pusha
mov
movsbw
mov
mov
jmp
call
movzbw
call
pushf
movw
xchg
movw
pushf
pushf
push
pushl
ret
mov
pushf
jmp
call
call
call
lea
call
lea
jmp
xchg
pushf
push
mov
push
call
xor
cmp
xor
jmp
aas
lods
cmc
jmp
mov
lea
movw
pushf
call
pusha
movw
mov
nop
movb
movw
push
xchg
movw
movzbl
mov
call
jmp
jmp
mov
call
nop
mov
pushf
bswap
push
mov
pushf
xchg
call
mov
pusha
lea
lea
jno
xchg
pushf
pushl
ret
movl
call
movb
xchg
pusha
call
xchg
pushl
mov
pushl
ret
pushl
pushl
call
push
xchg
jmp
mov
lea
mov
xchg
mov
movw
mov
pushl
ret
pushf
mov
movzbw
pushf
bswap
mov
movb
jmp
jmp
call
movb
nop
pushl
mov
movsbl
pusha
call
call
xchg
pushf
movb
pushf
pushl
ret
xchg
pushf
pushf
movl
mov
pushl
ret
push
jmp
xchg
movw
pushl
jmp
add
mov
pushf
call
jle
pushf
pushf
pushl
nop
pushf
mov
pushf
xchg
call
nop
jmp
jmp
pushf
mov
pushf
call
pushf
movl
jmp
mov
bswap
movzbw
pushf
movsbw
mov
not
bswap
not
mov
lea
lea
movzbw
call
mov
jmp
xchg
cwtl
lea
sete
movsbl
mov
pushf
lea
call
add
call
jmp
lea
pushf
pushf
pushf
xchg
pushf
push
pushl
ret
mov
xchg
mov
pushl
pushl
ret
mov
xchg
lea
jmp
push
mov
push
push
pushf
lea
push
call
pusha
pusha
push
nop
pushf
lea
js
pushf
mov
pusha
movl
mov
mov
pusha
push
pushf
lea
push
jmp
lea
pusha
call
push
call
and
mov
mov
mov
add
add
adc
inc
das
add
fcmovnu
jno
das
pop
adc
imul
jecxz
dec
cltd
std
mov
nop
nop
shrl
loopne
sbb
dec
cwtl
pminub
cli
dec
scas
mov
lcall
fldenv
dec
es
nop
cmp
nop
scas
test
xor
pop
push
clc
adc
fadd
add
push
mov
lock
daa
and
test
jbe
cltd
test
fdivr
push
mov
pop
lods
and
sub
push
push
arpl
rorb
fildl
mov
push
popf
push
push
dec
rol
xchg
push
dec
stos
xchg
stc
dec
pop
or
repz
ja
andb
push
in
data16
decb
cli
mov
sbb
push
aam
dec
jl
dec
mov
aam
clc
out
call
fisubl
rclb
rorl
ret
jbe
stos
stc
adc
sbb
jns
adc
pop
test
pop
sub
xor
jne
faddl
add
pop
in
mov
xor
lcall
cmp
imul
repz
into
cmpsb
aaa
pop
js
xchg
dec
popa
das
and
aas
mov
pop
cmpsl
push
fmull
subl
or
cmc
dec
testb
push
imull
dec
xchg
sbb
popf
enter
xchg
mov
jae
jp
rcrb
xchg
sahf
ret
leave
fs
dec
scas
jnp
sbb
data16
mov
imul
adcl
outsl
imulb
icebp
xchg
mov
lods
sub
sbb
sub
sub
mov
test
sub
pusha
and
shll
xchg
jns
dec
pop
mov
test
sti
sbb
fstps
jmp
push
aas
pushf
repnz
adc
lcall
fisubl
rorl
ds
cmp
aam
push
xchg
push
lcall
out
lea
imul
pop
adc
mov
sub
bnd
scas
jbe
or
lock
mov
ret
xchg
cltd
in
or
ds
add
es
mov
test
aaa
das
iret
adc
test
fisubs
add
sahf
jmp
cmp
test
mov
cltd
jp
jno
pop
in
dec
movsb
sub
or
xor
ss
adc
pop
dec
jmp
mov
lea
jmp
xor
in
loop
lds
adc
js
ss
jle
jg
leave
int3
mov
push
cltd
leave
sbb
pop
inc
xchg
push
bound
mov
mov
inc
lcall
inc
or
pop
loopne
mov
mov
mov
add
int
jp
mov
push
jl
mov
xchg
or
lahf
sbb
push
push
and
adc
out
push
inc
ljmp
pop
pop
in
dec
xchg
jecxz
cmp
movsl
enter
out
shll
aaa
cmp
add
das
dec
test
imul
push
sub
je
mov
inc
xchg
test
and
fadds
imul
sub
lds
pusha
aam
sbb
and
aad
cmp
adc
xchg
shll
pop
xchg
mov
rcrb
outsb
daa
mov
in
rorb
ret
pop
pusha
adc
cmp
pop
add
inc
psubsb
cmpsb
adc
inc
loope
je
in
xchg
mov
lret
jb
ljmp
sub
inc
and
fucom
add
mov
in
out
fcoms
fadds
cmpb
pop
jle
mov
push
push
pop
xchg
je
fildl
jne
sbb
lods
sub
lods
andb
hlt
pop
fistpl
or
adc
inc
and
push
in
dec
mov
push
insl
mov
jae
add
adc
mov
fs
stos
sbb
xchg
mov
push
jne
sub
xchg
cmp
and
in
xor
movsb
das
jnp
xchg
into
cmpsb
bound
loop
btsl
mov
sub
cmp
stos
es
rolb
xchg
sub
sbb
imul
loopne
or
std
mov
or
es
pusha
int
xchg
or
cmpsl
pop
jge
xchg
push
dec
repz
popa
dec
fwait
movsb
push
push
bound
scas
xchg
rcrb
xor
dec
mov
push
out
cmp
push
add
push
mov
dec
data16
in
add
or
lret
adc
aas
adc
fwait
pop
push
lods
push
sbb
lcall
scas
inc
xlat
mov
fdivs
or
imul
mov
cld
and
mov
lcall
ret
push
mov
mov
xlat
je
mov
add
ret
cmc
les
mov
mov
jecxz
xlat
adc
or
insb
in
push
movsb
and
rorl
add
xor
incb
sbb
rolb
pop
mov
push
adc
in
es
mov
push
mov
arpl
cmc
pmulhw
cld
push
push
or
sbb
sahf
cli
add
imul
mov
scas
lds
aaa
cld
push
jle
jne
adc
push
inc
dec
xor
or
dec
int3
or
js,pn
loop
in
push
cmp
das
inc
or
shl
sub
aaa
adc
pushf
cmp
imul
int3
mov
xchg
jmp
iret
cwtl
add
sarl
mov
sbb
lea
pop
lea
pop
sub
mov
jbe
imul
repnz
inc
lds
lret
inc
data16
and
adc
into
or
cmp
jae
inc
outsb
ret
insl
stc
sub
sub
jbe
mov
mov
cs
mov
and
jns
pushf
addb
inc
adc
mov
inc
repz
mov
sbb
out
mov
inc
inc
push
xchg
test
scas
popa
insb
ret
jns
lahf
push
shlb
dec
and
pop
mov
fstpt
pop
add
hlt
adc
out
mov
out
or
xlat
and
test
sub
or
mov
aas
loopne
lsl
inc
pushf
sub
xchg
pusha
lods
pop
push
shl
xchg
sbb
mov
push
xchg
sub
add
in
lods
or
push
jp
cwtl
sahf
fucomi
iret
dec
out
stc
or
mov
jno
cmp
repz
cmp
and
mov
cli
ljmp
loopne
push
dec
clc
adc
subl
cmp
push
jne
mov
jmp
aam
jbe
ja
pop
nop
push
mov
sbb
dec
lods
lods
sub
scas
outsl
push
lods
cmp
pop
iret
nop
mov
push
outsl
jns
repnz
inc
ret
or
xchg
cmp
sahf
jo
aad
push
popf
or
add
sbb
icebp
mov
dec
negb
sahf
xor
and
sbb
mov
aaa
cwtl
test
mov
ljmp
mov
loopne
push
mov
dec
cmp
lahf
jmp
add
scas
scas
std
jge
iret
add
lahf
pushf
add
push
push
psubusb
push
xlat
add
pop
loope
push
lock
xchg
fsubrs
adc
adc
pop
cmp
cmp
arpl
cmp
stos
pop
adc
pop
in
or
xor
scas
aad
or
aas
mov
dec
mov
sbb
xlat
imul
aaa
stos
loope
inc
xrelease
ds
pop
outsb
sbb
xor
mov
jge
pop
test
cwtl
jp
and
pusha
push
addr16
jg
sub
xchg
add
sbb
xchg
out
and
push
lock
pop
insb
xchg
adc
ljmp
mov
ret
jbe
xlat
leave
xor
jle
ret
xchg
iret
sbb
cmp
cmpsl
fistpl
mov
aas
out
sub
push
xchg
pop
xlat
stos
mov
push
shr
xchg
iret
std
icebp
es
insb
out
push
std
aaa
sbbl
mov
mov
in
mov
push
je
xor
pop
mov
into
push
into
dec
adc
inc
pop
test
dec
push
push
push
shrl
push
push
shrl
hlt
mov
test
lcall
popf
mov
cmp
iret
and
les
push
mov
iret
xchg
add
adc
ret
add
push
dec
shrl
nop
or
cmpsl
loope
frstor
neg
jne
push
add
call
neg
das
pushaw
sub
xchg
insb
fxch
shll
pop
mov
push
out
xorl
call
divb
lock
in
push
js
es
rcrb
xor
dec
sub
repz
push
and
dec
dec
fcom
mov
ljmp
sbb
ds
push
sub
cltd
lods
adc
mov
cmp
or
xchg
lret
push
push
das
data16
xor
cltd
pop
mov
mov
xor
cltd
jmp
xor
ret
mov
push
xchg
sub
pop
add
jo
inc
das
repnz
inc
adc
mov
xor
xchg
sahf
xchg
push
negl
pop
call
push
lea
movw
xchg
push
mov
pushl
push
pushl
ret
jmp
jmp
lea
lea
xchg
pop
movzbl
movsbl
bswap
xchg
xchg
not
jmp
xchg
jmp
mov
mov
call
pushf
movb
movb
xchg
movl
pushl
ret
mov
jmp
push
jae
mov
sbb
test
aam
mov
movl
push
lea
jmp
movb
mov
jmp
pusha
jmp
pusha
mov
jmp
call
call
jmp
xchg
push
push
pushl
ret
pushf
mov
pushf
pushf
call
mov
mov
mov
lea
jmp
pushf
lea
jmp
jmp
pushf
movb
lea
call
movb
xchg
pushf
movb
movb
pushf
pushl
ret
movw
lea
ja
push
mov
not
mov
pusha
mov
pushf
pushf
jmp
xchg
pushl
movb
pushl
ret
mov
call
jp
push
mov
std
adc
or
push
mov
or
lret
cmp
das
add
and
sub
and
out
or
sbb
inc
pop
stc
jbe
gs
mov
adc
xchg
pop
push
out
mov
int3
ret
shll
pop
push
js
pop
pop
push
add
mov
ds
mov
rcrb
sub
popa
inc
xchg
and
mov
or
xchg
or
sub
xor
adc
in
pop
add
cmp
data16
out
inc
test
je
mov
or
scas
call
dec
push
cmp
cs
mov
ret
rcl
and
pop
mov
packssdw
xlat
in
out
xchg
test
dec
ret
mov
sbb
mov
mov
orb
daa
jno
popa
dec
inc
pop
and
addb
dec
xchg
inc
mov
jo
loop
stos
mov
jmp
dec
sbb
aam
push
jb
pop
lods
xlat
loop
sub
xor
dec
inc
roll
and
add
sub
adc
std
and
or
test
push
imul
xchg
push
xor
imul
and
aad
inc
mov
jle
cmpsb
call
nop
insb
jo
xchg
popa
sub
or
add
pop
pop
and
mov
stos
dec
jbe
and
add
dec
or
rcll
sbb
mov
addr16
out
fistps
add
inc
mov
enter
jns
ja
jnp
lds
cs
aas
sub
mov
addr16
sub
dec
stos
ret
xor
das
xchg
push
cmpps
xchg
jl
inc
aad
mov
frstor
and
ljmp
jg
call
adc
pushf
lea
repnz
lcall
movsl
jae
xor
add
in
cmpsb
std
sahf
and
sar
pop
test
gs
sub
dec
lds
or
jl
adc
test
cmp
int3
pop
adc
iret
adc
scas
mov
arpl
pop
stos
pop
stos
pop
stos
mov
pop
cld
cs
ret
fldt
sbb
loope
jne
repz
movsb
xlat
cmp
lahf
scas
pop
pop
addr16
icebp
ds
sub
inc
jge
xlat
sbb
push
dec
pop
imul
sub
or
xor
imul
dec
jnp
and
jmp
add
pop
mov
divps
xorl
xor
in
xor
sbb
cltd
xchg
lods
sti
dec
xlat
sbb
ss
mov
dec
dec
add
js
xor
loope
inc
lret
dec
sbb
shll
mov
daa
pusha
fsub
jae
mov
or
or
das
std
dec
scas
andl
arpl
cmp
cltd
cmp
push
aam
movsl
stc
mov
out
aas
ljmp
inc
aas
dec
mov
mov
jle
cwtl
arpl
dec
jg
pop
out
mov
rcll
push
mov
pop
push
test
scas
push
ljmp
sbb
stos
jae
sti
enter
mov
jo
out
mov
inc
aaa
add
popf
jne
xlat
push
mov
jl
push
aam
push
incb
cwtl
imul
ds
andl
repz
push
jmp
cld
icebp
mov
cmpsl
pushf
aad
rcr
out
push
scas
leave
jl
mov
loop
pushf
xchg
daa
lret
add
rcl
cli
add
push
pop
test
xor
pop
shl
add
mov
jns
sub
test
jbe,pt
fnstcw
xor
mov
adc
adc
cmp
push
pop
nop
ss
mov
loope
test
inc
into
cwtl
sub
lds
cld
in
mov
sahf
adc
mov
pop
ds
repnz
mov
iret
das
adc
mov
aas
divl
cmpsl
jb
dec
decb
cli
mov
scas
xchg
pop
sbb
pop
imul
rcrb
adc
lret
push
jmp
pop
jmp
jge
sbb
mov
jmp
dec
cmp
sub
out
movzwl
lock
add
lahf
sbb
enter
push
sub
xchg
dec
dec
sub
outsb
push
mov
pop
test
sbb
mov
sahf
call
addr16
adc
xchg
mov
les
cmp
pop
dec
cmp
or
jp
movhps
dec
test
xchg
jnp
jmp
je
xor
dec
stos
pop
es
adc
xchg
ret
sub
div
lea
xchg
repnz
pop
dec
mov
arpl
and
lods
je
shlb
add
sub
or
pop
and
or
insl
push
cmpsl
push
xchg
mulb
in
xchg
push
pop
add
xchg
jg
fwait
flds
adc
leave
inc
mov
jmp
push
mov
jns
fdivrs
outsb
pop
jno
stc
xchg
pop
ret
pop
jbe
jnp
xor
cmp
shl
push
stos
iret
mov
xor
sub
std
jbe
imul
inc
imul
jae
jae
lods
jbe
and
inc
adc
enter
sarb
inc
out
mov
sub
xor
xchg
push
mov
mov
inc
in
mov
add
in
push
and
sbbl
cld
bound
popf
dec
int3
add
mov
pop
into
outsl
cmpsl
clc
rcll
cmp
bound
mov
push
xchg
and
sbb
sbb
inc
pop
or
inc
fidivrl
xchg
lret
cltd
loop
into
sbb
cld
and
dec
pop
jecxz
and
add
lds
int
nop
fldenv
sbb
enter
or
mov
jb
je
outsl
shlb
xor
lods
push
xchg
pop
pop
xchg
or
push
testb
dec
mov
add
sbb
add
or
mov
mov
jns
jl
enter
lock
outsl
xor
jns
xor
adc
out
sub
imul
or
push
loope
mov
push
fneni(8087
jbe
mov
mov
sbb
in
cmp
outsb
cmc
mov
xchg
hlt
insl
into
inc
shlb
add
add
add
xor
hlt
sbbl
or
aas
adc
and
stos
mov
sbb
aam
push
adc
mov
adc
sbb
dec
stc
mov
add
out
jmp
mov
out
mov
push
ret
std
inc
xchg
pop
and
pop
mov
sub
xor
or
gs
out
add
into
cmpsb
jb
in
mov
sbb
imulb
mov
ja
std
lods
mov
mov
test
jno
scas
into
adc
fwait
mov
jg
xor
cwtl
outsb
sbb
inc
cmp
sarb
shrb
insl
mov
mov
and
sub
mov
mov
testl
loope
mov
loop
stos
je
push
andb
test
dec
mov
ret
mov
es
inc
popf
rcrb
mov
ret
add
lahf
xor
mov
ss
rcll
cmp
jl
int
fdivrs
pop
mov
fwait
jg
mov
and
jge
aad
jns
stc
pop
lods
ja
mov
xor
or
cmp
xor
pop
lret
ret
outsb
jbe
lcall
mov
inc
shlb
sub
sbb
pop
aad
mov
nop
jle
push
cmp
cmp
pop
insl
cmp
orl
repnz
js
ret
xor
int3
adc
inc
or
or
adc
into
sbb
inc
loopne
test
cmp
sub
mov
scas
js
mov
fisubrs
mov
dec
inc
dec
pop
add
popa
shrl
mov
les
xor
adc
xchg
nop
xor
fldenv
fsubl
hlt
imul
mov
add
cmpl
mov
outsl
test
imull
in
mov
fildll
cmpsb
mov
mov
adc
fwait
movsb
push
mov
mov
and
dec
push
mov
ljmp
adc
mov
clc
stc
punpckhdq
mov
or
cld
push
cld
mov
std
ja
push
mov
dec
test
int3
dec
into
pushf
scas
lds
and
icebp
mov
mov
xchg
je
pop
addl
dec
dec
sub
inc
test
sub
lret
jno
mov
push
sbb
ret
jg
leave
jbe
inc
pop
lea
out
sub
lock
pop
jp
fistpll
mov
sub
inc
shlb
fwait
dec
loop
dec
inc
cmp
rcll
repnz
ja
inc
rcrl
sub
jne
movsl
mulps
outsb
aas
push
loope
in
fst
mov
test
push
pop
insb
adc
push
in
and
dec
daa
es
out
mov
aas
or
and
sbb
fiadds
or
jl
pop
mov
sahf
fisubrs
scas
into
aas
inc
in
test
loop
out
out
gs
stos
fwait
push
leave
gs
xchg
in
addr16
pop
cli
cwtl
cltd
adc
mov
movsl
bound
and
mov
push
cmp
push
mov
test
mov
and
test
fnstenv
rcl
dec
out
out
cbtw
js
test
sub
adc
scas
lret
fsubr
cld
stc
rol
in
cmpsb
push
bnd
call
cmp
jecxz
loope
mov
and
adc
push
jl
clc
out
arpl
jg
and
jno
shll
inc
in
test
sbb
mov
xchg
jmp
lea
call
mov
xchg
test
std
rcrb
mov
pop
add
stos
sub
rcrl
and
scas
scas
fnstsw
adc
or
outsb
pop
jne
or
mov
dec
adc
dec
adc
jl
xchg
outsl
rol
push
mov
adc
sbb
popf
jmp
add
add
out
scas
les
or
cmp
out
adc
das
mov
lcall
and
add
das
jnp
int3
cmp
fisubrs
fwait
xor
or
sar
xchg
sbb
mov
push
mov
lcall
jbe
add
aad
push
pop
das
add
cmc
ja
outsl
jns
xchg
int3
or
sbb
gs
xor
jle
pop
popf
in
mov
dec
ljmp
mov
or
or
pop
or
add
inc
ret
imul
push
fs
cltd
push
jo
testb
out
add
lahf
imul
xlat
movsl
cmp
es
xchg
pop
xor
xor
xchg
sub
sub
and
push
insb
fdivl
dec
jge
aam
mov
push
movsl
push
movsl
popf
pop
cld
call
fnstsw
sbb
jae
adc
push
sub
ret
out
add
data16
loopne
add
jp
loopne
cmp
mov
arpl
repz
jle
inc
cmp
inc
sbb
lahf
push
imulb
dec
inc
scas
adc
mov
push
dec
cltd
adc
or
rcl
cmp
jnp
xor
mov
pop
sbb
xor
es
sahf
jae
xchg
mov
adc
out
xchg
loopne
xor
push
pop
addl
lret
sbb
ret
les
popa
adc
push
scas
sub
outsl
lahf
sub
outsl
bound
scas
xlat
push
xchg
das
dec
addr16
adc
in
jbe
mov
xchg
fistps
jno
pop
mov
loope
loope
fildll
bsf
or
fcompl
add
std
or
popw
pushf
jmp
ds
xlat
shrl
jo
dec
and
push
loopne
popa
sbb
dec
cli
stos
add
pop
pop
pop
movsl
jmp
mov
sbb
in
test
hlt
xor
repz
sub
push
icebp
icebp
pop
fldt
mov
nop
andl
and
mov
enter
xor
adc
jmp
push
adc
xchg
in
push
xchg
xchg
add
push
pop
rcrb
or
mov
scas
fcomp
mov
mov
xchg
jle
dec
cmc
test
in
cmpsl
jae
daa
shrb
leave
hlt
xchg
ja
sub
addr16
cmp
push
xor
mov
jae
push
mov
lds
jg
in
cwtl
jp
add
lods
jbe
adc
in
loop
in
xchg
stos
adc
testb
inc
sarb
mov
ret
outsb
cmp
pop
mov
jecxz
dec
loope
test
add
push
test
mov
xor
cwtl
popa
xlat
pushf
aaa
pop
dec
into
cltd
mov
dec
inc
addr16
push
xor
pop
push
in
dec
icebp
pop
daa
mov
inc
mov
std
pop
daa
add
push
pushf
in
jle
pop
outsl
test
mov
jl
lahf
lods
mov
xchg
pand
test
sbb
jns
enter
mov
xchg
lcall
movsb
cmp
roll
sahf
push
pusha
pop
push
cld
xor
jb
add
mov
cmp
jbe
pop
lea
push
loop
jg
jb
xchg
loop
or
dec
adc
mov
idiv
inc
test
ds
test
dec
bound
dec
lock
lods
or
mov
mov
push
out
sub
lock
rolb
test
fcomps
test
enter
aad
dec
xchg
cmpl
add
sbb
xchg
xchg
mov
xchg
xchg
gs
jecxz
push
mov
adc
and
mov
jo
mov
xor
out
movsl
mov
inc
notb
stos
push
inc
faddp
aas
call
mov
rcl
dec
stos
cli
xorl
jge
aam
add
ljmp
lret
imul
addr16
xchg
cmp
cli
sub
mov
or
sub
in
xor
adc
popa
popf
xor
sti
mov
divb
pop
jb
cwtl
dec
xchg
xor
loop
sar
xchg
sbb
sub
add
inc
dec
das
int3
cltd
sbb
mov
das
add
stc
jle
cmp
mov
xchg
jg
adc
mov
lods
mov
fsubl
lea
js
test
loopne
jns
mov
jg
and
ror
jno
std
rorl
xor
pop
into
xchg
push
cmp
mov
rcrl
fwait
rcl
ret
inc
fstp
fbstp
sti
std
add
jecxz
cmp
pop
repz
push
and
mov
scas
aad
mov
mov
stos
pop
xor
add
leave
jnp
mov
add
insl
xor
push
je,pn
std
dec
jmp
push
clc
sti
sub
push
inc
repnz
and
lcall
jp
dec
push
push
and
jg
js
mov
loope
test
stos
mov
aas
cmpsb
out
cmp
sahf
mov
js
loopne
daa
lods
and
push
adc
clc
shll
push
mov
pop
add
xor
sub
jno
jo
push
das
sahf
pop
movsl
mov
mov
movsb
rcll
daa
int
adc
mov
and
aam
sbbb
cli
mov
neg
sbb
sub
std
lods
pop
stos
cmp
movsl
cs
ret
mov
sub
cmpsb
cs
ds
imul
adc
or
repz
in
inc
not
pop
rcll
out
jb
pushf
mov
push
sbb
mov
xor
mov
jmpw
jmp
lea
pushl
call
movb
movb
xchg
movw
mov
mov
pushl
ret
movl
xchg
mov
movb
movb
pushl
ret
jmp
lea
pushf
mov
bswap
movsbw
push
mov
call
pushf
movb
jmp
nop
mov
push
xchg
lea
je
sets
mov
push
movb
push
lea
pushl
mov
pusha
mov
call
call
call
xchg
push
pushl
push
pushf
pushl
ret
pushf
jmp
mov
not
call
jmp
lea
pushf
push
xchg
pusha
pushl
ret
nop
movl
lea
js
pushf
mov
not
mov
pusha
pushf
push
movb
lea
jmp
lea
pushf
mov
call
push
lea
push
pushf
jmp
jmp
pushf
movb
xchg
push
pushl
ret
lea
call
call
jmp
call
cmc
xor
test
xor
test
xor
jmp
jmp
lea
mov
mov
pushl
mov
call
fisttpll
pop
call
lea
jae
pushf
mov
jmp
push
lea
jno
pushf
movl
jbe
push
pusha
mov
pushl
lea
jmp
xchg
pushf
pusha
pushl
ret
setae
mov
pusha
lea
mov
pushf
mov
jmp
lea
jmp
jnp
add
xor
or
mov
pushf
pushf
push
pushl
ret
pusha
nop
jmp
lds
lahf
sar
repnz
add
cwtl
filds
jmp
cwtl
xchg
je
sbb
imul
pop
cltd
stos
adc
test
add
mov
stos
loope
or
inc
jecxz
jo
dec
shlb
mov
pop
jno
pop
xchg
jae
cld
aas
inc
jno
mov
imul
push
in
xchg
mov
test
mov
arpl
and
mov
stc
xor
sub
jo
cltd
popa
xchg
sub
mov
aaa
je
loop
push
scas
xor
lret
sbbl
test
lcall
pushf
inc
imul
xchg
mov
loopne
mov
andl
ja
jbe
test
decl
mov
add
lret
pop
lret
jle
jnp
jg
jmp
pop
cltd
mov
cmp
cmp
mov
dec
cwtl
jle
lods
js
sti
inc
sbb
cmp
lds
clc
push
lahf
dec
test
mov
push
sbb
push
mov
cmp
into
inc
mov
push
bound
repz
xlat
ja
inc
or
or
in
xor
aad
fldcw
sbb
xchg
push
xchg
je
xchg
pop
sahf
loope
push
jle
icebp
movl
push
lods
cwtl
mov
push
mov
cltd
test
xorl
sub
mov
fs
fsubs
add
pop
push
lds
cmp
shr
push
dec
mov
loopne
push
inc
xor
rcrl
and
hlt
and
fisubl
dec
push
mov
inc
ficompl
addr16
leave
xor
stc
ret
dec
mov
sbb
push
cmpsl
add
inc
call
sbb
dec
cltd
inc
jb
insb
or
sub
std
xlat
fs
adc
cli
loopne
adc
call
int3
mov
imul
push
mov
jno
invd
xor
movsl
data16
adc
jnp
repnz
cmp
mov
push
pop
cmp
outsl
jle
sahf
sub
fs
popa
xchg
ds
cld
sub
movsl
or
fmuls
xchg
dec
push
int
mov
adc
and
mov
xchg
loop
pop
hlt
xor
andb
out
fcmovnb
sub
pop
mov
repnz
push
icebp
sub
popa
lahf
clc
fwait
repnz
ja,pn
movb
pop
inc
clc
ret
fs
jns
repz
or
divl
ret
stos
sub
jns
ljmp
lods
xor
int
aad
ss
rolb
aad
pop
int3
xor
adc
mov
add
xchg
fdivs
ret
jbe
iret
sub
ret
in
in
std
lahf
pop
cmp
into
sbb
and
xchg
in
into
aas
cmpsb
out
cmp
inc
or
gs
mov
data16
dec
out
mov
add
imul
fdivs
mov
addb
cmp
cld
dec
lock
pop
out
popa
out
dec
cmc
push
fiaddl
adc
inc
stc
or
and
rcrl
mov
movl
cltd
nop
ljmp
xchg
cmp
pushf
inc
mov
push
rcrl
push
loopne
imul
add
jbe
pop
inc
xchg
jae
mov
in
jnp
lods
js
stc
push
stc
jo
mov
out
mov
out
mov
cmp
or
jns
gs
push
sbb
mov
pop
mov
push
or
push
es
movsl
jno
test
adcl
mov
mov
xchg
fisubrl
fidivs
add
mov
xchg
xchg
lahf
jle
xor
pusha
lods
inc
push
dec
decl
hlt
ret
outsl
add
stos
mov
adc
jne
pop
jle
and
das
jl
lods
cmp
leave
dec
pop
aam
jle
mov
hlt
mov
sbb
mov
ret
dec
adc
sbb
and
fcmove
roll
mov
stc
cmp
mov
adcb
dec
push
aam
sub
pop
roll
or
aas
lock
js
inc
mov
data16
cld
adc
lods
js
inc
dec
sub
je
aaa
test
xchg
push
sub
out
sub
mov
cmp
clc
sub
adc
cmpsl
mov
pusha
sub
clc
cmp
jno
hlt
mov
rcrl
in
xor
inc
sub
inc
dec
xchg
mov
bnd
mov
icebp
lcall
sbb
push
fiadds
lock
cli
inc
outsb
enter
aaa
xor
and
addr16
push
out
movsl
xchg
enter
pop
jbe
in
insl
clc
fdivrs
or
xchg
jmp
call
jecxz
or
subb
hlt
cmp
movsl
fdivrl
fsubr
add
add
adc
jp
lock
dec
mov
in
dec
mov
inc
mov
push
sbb
pushf
and
xor
push
out
adc
int
jmp
mov
xchg
cmpsb
lds
int
xor
pop
push
fidivl
mov
xor
adc
inc
aam
xchg
lods
movsb
jmp
popa
and
ret
fidivrs
mov
xor
movsb
pop
push
or
mov
mov
psubd
movsl
je
add
loopne
and
pop
in
push
mov
ret
dec
daa
lods
push
pop
add
in
lods
mov
loope
cmpsl
add
fsubs
es
pop
dec
mov
jle
outsl
scas
sbb
ds
mov
hlt
sarb
pop
add
inc
mov
inc
jne
xchg
das
mov
mov
xor
push
fdivr
inc
out
push
inc
popa
mov
mov
xor
pop
fnstsw
mov
xor
xlat
and
data16
inc
sbb
imul
push
je
inc
mov
sub
in
sub
js
or
adc
sbb
mov
movsb
fisubs
fdivrl
push
push
inc
out
aam
xchg
ss
pop
call
push
and
or
hlt
mov
jbe
xchg
pop
mov
ja
adc
pop
sub
xchg
pminub
jno
or
mov
cmp
sub
or
sahf
push
sbb
push
push
push
mov
out
cmp
sbb
jae
les
lcall
aas
dec
xor
jns
cli
jg
jecxz
shll
and
or
xor
stc
pop
loop
fwait
xor
mov
movsb
rcrl
rcrb
cmc
daa
out
add
dec
insl
in
dec
inc
divb
push
into
outsb
movsl
ret
inc
test
mov
push
mov
sub
scas
iret
divb
sbb
jle
aas
cmp
adc
pusha
pushf
jmp
loopne,pn
lock
clc
xchg
add
fbstp
inc
stos
pop
scas
lret
xlat
insl
jmp
cwtl
pushl
das
xchg
daa
nop
xchg
cmpl
jno
enter
aad
dec
push
fisubs
sbb
sbb
push
xchg
pop
shrl
loopne
cli
shll
jl
xchg
mov
fwait
int
test
cmp
mov
in
xchg
scas
leave
sbb
movsb
or
xchg
loop
pop
sub
mov
add
cmpb
dec
sub
mov
sbb
cmp
fsubl
divl
scas
push
push
bound
xlat
xchg
sub
dec
fcompl
cli
push
sub
mov
fwait
cmp
repnz
xchg
scas
leave
push
clc
adc
sub
mov
or
das
sub
or
pop
loop
sbb
sub
std
jp
loop
pop
push
pop
scas
xor
ror
push
push
inc
addr16
inc
mov
fsub
imul
ss
sub
test
and
mov
and
push
repnz
arpl
xchg
scas
leave
pop
mov
stos
mov
mov
aad
es
cmp
mov
push
cmpsb
test
cmp
push
pusha
mov
push
call
sbb
mov
scas
push
push
jmp
pushf
pushf
nop
mov
pushl
push
jmp
pusha
movzbw
nop
lea
lea
mov
mov
bswap
jmp
push
jmp
mov
mov
xchg
pushf
pusha
call
pushf
mov
pusha
pusha
mov
mov
lea
pushf
call
jmp
xchg
mov
mov
movw
pushl
ret
pushf
mov
xchg
push
pushf
mov
mov
pushl
ret
mov
jmp
mov
pushf
bswap
push
mov
push
push
call
jmp
lea
pushf
call
setne
cwtl
call
cmp
pushl
nop
not
lea
jne
lea
pop
pusha
lea
pushf
call
lea
mov
push
xchg
pusha
push
pushl
ret
mov
call
mov
xlat
pushf
call
lea
call
mov
jmp
xchg
lea
jmp
lea
pushf
jmp
call
mov
not
bswap
sets
mov
not
pop
not
lea
je
mov
js
lea
pusha
bswap
lea
pop
lea
bswap
mov
call
movw
movb
xchg
movl
mov
movb
pushl
ret
jmp
mov
jmp
mov
call
jmp
mov
movsbw
mov
pushf
lea
pushf
jmp
mov
pushf
pushf
xchg
call
lea
jge
lea
mov
push
pusha
mov
lea
jge
pusha
mov
lea
call
pushf
pushf
movw
xchg
movzbw
mov
jmp
xor
jmp
jmp
mov
lea
xchg
setbe
pushf
pushf
mov
lea
mov
mov
movw
lea
jmp
call
mov
call
pushf
jmp
push
nop
call
xchg
pushf
mov
pushl
ret
pushl
nop
lea
je
pusha
mov
pushf
call
mov
mov
pushf
mov
mov
jmp
jmp
adc
std
add
pop
mov
jnp
ds
mov
setl
push
push
xchg
and
cmpsb
pop
xchg
or
filds
dec
testb
jg
inc
hlt
movsl
adcl
lods
jbe
mov
fldl
xchg
mov
popf
dec
cmpsl
sub
xchg
lcall
insl
das
add
ret
je
loope
dec
sub
sub
nop
push
sub
xchg
sar
jae
adc
pop
xor
xchg
jae
mov
lcall
insl
das
add
je
mov
pop
clc
xor
and
add
orl
xorl
jae
mov
out
jge
xchg
mov
cld
in
jo
jnp
jns
inc
xor
sti
adc
mov
sbb
jbe
mov
sti
or
in
add
test
ss
ret
pop
fistpl
sar
mov
xchg
lcall
push
push
not
int3
and
jbe
rolb
rorb
jnp
popa
inc
adc
xchg
xor
push
sub
outsb
ds
hlt
sbb
push
pop
mov
aas
pushf
mov
inc
cli
movsb
and
loop
xor
xchg
clc
fistl
mov
pusha
lods
push
test
rorl
out
into
add
iret
pop
xchg
arpl
aas
cmp
popf
shrl
je
loope
or
push
add
imul
xchg
popf
lds
push
mov
mov
or
std
pop
sub
pop
cli
adc
mov
insb
and
mov
bound
out
rorb
imul
jae
lods
push
test
insl
or
mov
mov
cmp
push
jbe
and
sbb
jno
mov
pusha
movb
push
loope
push
hlt
mov
aaa
les
xchg
adc
imul
lahf
fldcw
sbb
cli
cmpsb
sti
iret
fldcw
xchg
adc
xchg
das
cmp
xor
in
pop
cmpsl
cli
pop
push
push
out
sub
or
sbb
test
out
sub
push
daa
sub
sarb
shrb
push
add
frstor
sbb
into
aas
ret
sub
xor
ret
adc
xor
sarl
stos
stc
iret
aad
push
cmp
and
leave
adc
push
mov
lahf
pop
inc
mov
aam
je
call
or
lock
jb
hlt
inc
xchg
jo
cmpsb
fisttpll
popa
std
mov
fwait
mov
pop
das
cmp
xor
xchg
popf
pop
fs
xchg
and
rcl
sbb
rcr
js
loop
mov
lods
call
jb
out
hlt
pop
mov
pop
lahf
sbb
pop
cmp
js
out
push
pop
jg
int
mov
outsl
clc
into
sbb
cwtl
loop
sbb
pushf
xchg
push
popf
add
jnp
lea
sbb
xchg
dec
dec
adc
pushf
call
dec
dec
fwait
xchg
dec
into
add
dec
daa
dec
push
je
dec
js
pop
loopne
xchg
sahf
int
jp,pn
cld
dec
mov
mov
adc
and
sub
xchg
push
decl
mov
adc
loope
fmull
ljmp
push
daa
dec
test
push
adc
fstpl
rcll
and
addr16
cld
nop
mov
and
push
push
aam
pop
insb
sahf
mov
iret
cmp
stc
cmp
jne
bnd
cltd
sarb
or
jns
test
and
sub
sbb
cmp
je
addl
cltd
rcrl
mov
out
lods
pop
or
adc
mov
fistpl
sbb
push
loopne
jbe
addr16
ret
gs
xchg
cmpsb
adc
sarl
addr16
aaa
pop
cmpsl
add
xor
add
jne
imul
cmc
mov
loop
dec
ffree
push
mov
mov
setg
xchg
push
pop
mov
or
add
ret
test
in
jnp
lahf
pushf
add
push
mov
lods
cmp
lret
adc
jns
sbb
pop
ret
or
jno
mov
ja
clc
in
int3
pop
shlb
sub
repz
ret
hlt
ficoml
sbb
es
movsl
pop
movsl
and
lcall
mov
test
cmpl
cli
mov
pop
movsb
ljmp
insl
lock
xchg
cmp
sahf
icebp
hlt
stos
in
nop
mov
hlt
outsl
pextrw
or
mov
lret
and
mov
pusha
dec
pop
int
xor
nop
push
jecxz
inc
xchg
xchg
sbb
and
jl
jnp
inc
jl
sbb
xor
xor
add
adc
adc
inc
add
sub
mov
mov
sbb
mov
pop
ljmp
or
repz
push
int
xor
jbe
das
js
jb
dec
dec
push
stos
pop
add
arpl
loop
cmpsb
int
dec
ljmp
movsb
in
rolb
in
xor
inc
push
sti
xchg
inc
inc
mov
add
cmp
push
call
add
cmp
cmc
mov
shlb
loopne
sub
inc
push
jae
add
lcall
arpl
js
loopne
rcrb
pop
push
scas
lods
lock
out
ds
mov
xchg
stos
scas
pop
push
or
adc
nop
adc
pop
callw
xlat
addr16
adc
std
and
add
outsb
outsl
stos
push
mov
mov
out
cld
test
mov
dec
dec
int
leave
xchg
sar
imulb
frstor
inc
push
aaa
cmp
dec
xor
add
adc
bound
into
pop
mov
and
jne
repz
xchg
push
gs
nop
cmc
cmp
aam
int3
xchg
cli
and
push
sbb
pop
addr16
jecxz
xor
add
out
dec
pop
scas
add
sub
fmull
lock
push
mov
sbb
add
adc
outsl
mov
pushf
and
sar
in
pop
cmp
aad
les
lcall
cld
mov
mov
gs
imul
fwait
pop
js
sbb
sarl
js
rcl
dec
mov
lds
dec
pop
mov
pop
cltd
sub
idivl
call
or
leave
mov
sub
sub
sub
or
loop
mov
imul
mov
xchg
cli
inc
daa
jmp
icebp
or
xlat
push
push
mov
lret
adc
mov
pop
lcall
xor
stc
test
lcall
stos
mov
lods
je
pop
sub
inc
or
out
jbe
cli
int
sbb
xchg
xchg
flds
pushf
pop
scas
call
cmpsb
outsb
je
mov
jl
mov
stos
jno
out
stos
pop
test
rcll
jmp
cmpsb
loopne
fsubs
and
sbb
adc
xchg
loop
sahf
aas
loopne
fisubrl
xchg
or
subl
iret
scas
pushf
sti
xlat
sbb
stos
xchg
dec
dec
mov
out
stos
pop
jmp
mov
ret
cmpsb
cmpsl
test
pop
jmp
insl
push
leave
stos
rcll
mov
inc
jo
shll
in
test
jge
out
stos
pop
inc
lahf
scas
adc
adc
in
push
and
adc
mov
je
pusha
popa
fisubs
std
inc
push
out
stos
pop
jne
jle
popa
ror
xchg
aas
test
mov
lods
adc
call
fmuls
inc
and
call
stc
xor
call
push
call
pushf
xchg
pushl
pushf
mov
movb
pushl
ret
lea
pushl
xchg
pushf
push
pushl
ret
xchg
movb
push
movb
pushl
ret
ja
pushf
xchg
call
jmp
mov
xchg
movb
mov
mov
pushl
ret
pushf
xor
push
call
push
lea
pusha
jmp
call
lea
movzbw
mov
push
call
pushf
push
xchg
call
push
xchg
pushf
push
push
pushl
ret
movsbw
push
lea
movzbw
nop
jmp
mov
pop
mov
movw
mov
jmp
mov
jmp
mov
lea
movb
lea
jge
push
xchg
pusha
mov
push
pushl
ret
mov
arpl
fwait
aaa
lock
dec
xor
icebp
jno
popf
orb
adc
add
dec
mov
fsubl
mov
push
mov
pop
dec
cmp
rol
rclb
rorb
into
adc
mov
xor
inc
sub
pop
fldenv
in
loop
mov
dec
push
mov
or
leave
popf
xchg
ficomps
imul
repnz
cwtl
iret
leave
jg
aam
xor
push
inc
ret
jmp
pop
fdivr
icebp
cwtl
lret
fs
int3
pop
mov
mov
std
addl
pop
sbb
lret
ljmp
lods
mov
sarl
pop
mov
xchg
das
add
pushf
int
inc
add
add
mov
xchg
pop
mov
leave
cltd
mov
and
das
add
outsb
dec
arpl
sub
push
aam
push
int
jae
ja,pn
out
out
push
testl
movsb
push
popf
test
inc
std
das
jle
adc
fwait
shlb
das
popa
int3
imul
xchg
js
ds
fbstp
inc
aas
jmp
mov
sbb
jne
gs
mov
jo
scas
add
loope
incb
fisubrs
and
mov
pop
dec
mov
hlt
push
fisubl
xor
xorl
repz
push
leave
xchg
call
or
xchg
mov
sub
sbb
not
sbb
xor
fs
cmc
mov
das
loope
mov
je
loop
cmp
shl
mov
jmp
lea
repnz
adc
or
movsl
cmc
adc
insb
or
stos
push
fcmovnu
fcomps
test
lahf
out
add
decl
sub
cmc
jle
int
clc
mov
mov
ret
jne
pop
cmp
adc
jo
stos
dec
mov
test
jne
leave
push
orb
adc
inc
add
movsl
or
gs
ljmp
pop
inc
sub
push
jmp
ret
xchg
std
test
adc
push
repnz
mov
adcl
jns
add
fs
adc
xor
sbb
les
pop
sbb
or
jmp
inc
sbb
pop
jae
dec
pushf
jb
mov
xchg
cld
hlt
fldenv
mov
lds
push
and
xchg
xlat
xor
jmp
addl
sbb
xchg
mov
movsb
push
cltd
stos
jno
cld
movsl
aas
jo
jg
mov
push
and
dec
dec
lea
xor
lds
hlt
adc
and
jb
sub
mov
and
pop
sarb
pop
xor
shll
insb
das
dec
xchg
or
mov
dec
hlt
mov
std
sub
jl
jnp
xor
jle
cmp
fwait
dec
popf
jmp
out
mov
pop
cwtl
into
std
push
push
js
mov
mov
jg
enter
push
mov
imul
movsl
std
pusha
push
ret
jbe
xchg
icebp
mov
shrb
cmc
aam
jne
mov
sub
and
push
rorb
push
push
sub
push
loopne
shrb
push
ljmp
sbb
iret
popf
jmp
cmp
hlt
rol
aad
ss
push
mov
inc
sarb
adc
xchg
sbb
int
fnstsw
repz
fmuls
cmpsl
das
sub
mov
cmp
enter
lret
insb
scas
pushf
xchg
xacquire
lret
dec
repnz
fiaddl
add
cmc
jb
andb
xor
insb
subl
mov
mov
mov
loope
inc
out
push
fistl
loope
mov
sub
mov
std
sbb
fidivrs
sti
push
dec
call
cmp
pop
popf
pop
loop
outsb
test
add
cld
cs
and
imul
pop
cmp
sti
and
push
out
dec
and
and
out
je
dec
popf
lods
fsubrl
pop
mov
in
lret
test
mov
mov
int
ret
push
pop
pop
xchg
fsubl
mov
push
or
adc
or
jae
mov
andb
pop
andb
imul
test
pusha
nop
call
setge
pusha
pop
nop
lea
not
call
call
call
xchg
mov
pushf
movb
mov
pushl
ret
push
pushl
jmp
mov
lahf
movzbw
mov
push
pushl
pushl
call
lea
pushf
call
xor
jmp
mov
jmp
lea
mov
jmp
pushf
lea
pushf
jmp
lea
movl
call
cmp
xor
movb
test
xor
pushf
xor
cmc
pushl
popf
movw
pushl
ret
movzbw
lea
jmp
bswap
not
lea
nop
bswap
pop
call
mov
mov
lea
call
mov
jmp
lea
mov
jmp
lea
pushf
pushl
pushl
ret
xchg
push
movw
pushf
mov
pushl
ret
nop
call
nop
call
xchg
movzbw
movsbw
pop
call
pushf
nop
pushl
pushf
mov
lea
jb
push
call
mov
push
jmp
push
jmp
push
call
call
push
movzbw
nop
call
pushf
xchg
lea
lea
mov
lea
jne
mov
push
pusha
mov
lea
jmp
xchg
movw
push
push
pushl
ret
mov
push
xchg
push
jmp
jmp
mov
pushf
jmp
movw
xchg
movb
pushl
ret
icebp
cmpsb
sub
cmc
xor
add
xlat
mov
movsbw
nop
call
jmp
movw
xchg
pushf
pushf
pushf
mov
pushl
ret
mov
push
pushf
jmp
pusha
movb
nop
push
mov
xchg
call
lea
mov
nop
mov
pop
call
lea
jno
pusha
xchg
lea
jnp
push
pushf
mov
pusha
mov
lea
mov
mov
movb
mov
pushf
mov
jmp
call
xchg
pushf
mov
pushl
ret
movsbw
movsbw
not
mov
movzbl
pushf
jmp
pushf
mov
pop
lea
ja
mov
mov
pusha
mov
pusha
mov
call
xchg
pushf
push
mov
pop
not
bswap
mov
push
mov
jmp
mov
jmp
bswap
lea
mov
movzbl
movzbw
jmp
jmp
movzbl
mov
nop
movzbw
bswap
lea
movsbw
pop
pusha
pusha
pushf
xchg
pushf
mov
lea
lea
mov
mov
jmp
jmp
call
pushf
nop
movsbl
pushl
movsbw
mov
pusha
pushf
pushf
call
mov
call
pushf
mov
jmp
mov
mov
pushf
xchg
pushf
push
xchg
push
call
mov
jmp
push
bswap
pusha
mov
push
mov
jmp
lea
call
pushl
nop
pusha
mov
pushl
xchg
movw
pushf
pushf
mov
sets
pushl
lea
mov
lea
jns
pusha
mov
mov
jmp
lea
push
xchg
mov
push
push
movb
pushl
ret
call
movl
xchg
call
lea
pushf
xchg
pushf
pushl
ret
xor
clc
xor
bt
stc
xor
pushf
xorl
pushl
pushf
xor
jmp
push
mov
jo
add
rorl
stos
sbb
add
mov
call
mov
movl
pusha
push
mov
lea
jmp
xor
bt
xor
call
not
call
push
pushf
call
movw
xchg
pushf
push
mov
mov
pushl
ret
mov
lea
lea
jmp
nop
in
sar
aas
mov
mov
and
popa
pop
inc
inc
addr16
call
xor
das
add
xchg
into
cmc
inc
lock
mov
mull
fsubl
das
push
popf
ljmp
jne
cmc
int
sub
idivl
xor
jmp
xchg
jmp
xchg
add
xchg
adc
stos
getsec
push
push
dec
das
sub
fisubl
xor
sub
adc
das
add
addb
ficompl
shl
or
inc
add
xor
sar
addl
fwait
inc
in
and
addr16
cli
mov
xor
les
test
das
add
adc
leave
test
ljmp
andl
les
sti
test
sbb
sbb
inc
pushf
adc
dec
cmc
sahf
imul
jmp
xchg
pop
loopne
test
pop
outsl
scas
pusha
iret
test
popa
rclb
sahf
in
gs
out
cmpb
push
icebp
jmp
mov
sbb
xor
push
xchg
mov
movsb
adc
les
ds
jb
inc
adc
xor
jl
scas
imul
fmul
xchg
cltd
adc
hlt
arpl
je
and
jecxz
call
dec
and
mov
pop
push
xchg
lcall
dec
test
js
cmpsb
out
xchg
adc
dec
mov
iret
data16
xchg
pusha
jle
pushl
xchg
ficoml
sub
cltd
and
or
es
inc
sahf
data16
and
push
std
and
fcomps
jns
loope
jae
jge
xor
nop
pop
add
xor
cmc
xchg
xor
ret
lds
adc
lcall
shrl
mov
cmp
scas
xchg
cld
sar
imul
lea
fiaddl
sub
sub
sbb
das
add
xorb
sbb
xchg
test
insb
test
push
leave
pop
pushf
sbb
mov
lret
add
gs
sbb
inc
sub
sbb
bound
and
inc
dec
lods
test
xchg
sti
les
mul
mov
and
xlat
outsb
cmovno
andl
mov
cmc
lahf
jge
lods
dec
mov
xchg
iret
pop
fwait
orl
cmc
mov
and
mov
mov
mov
scas
std
leave
push
cmp
mov
push
cmpsb
mov
mov
or
mov
fsubs
add
lods
lods
rolb
add
lock
jmp
frstor
add
out
mov
and
mov
inc
push
iret
test
imul
testb
inc
inc
mov
pop
sbb
fiadds
mov
pushf
dec
orb
and
fnsave
pop
inc
or
insb
ljmp
stc
in
mov
cmp
sbb
pop
sub
loop
dec
sahf
push
in
fwait
popa
mov
out
or
jmp
adc
xchg
jecxz
xchg
fstpt
sarb
mov
mov
ja
push
xor
repnz
insl
addr16
mov
fcomps
mov
cmp
jp
adc
dec
data16
inc
pop
sti
sub
call
fstl
pop
idiv
xchg
dec
sbb
es
mov
mov
jae
mov
xchg
popa
push
cmp
mov
jmp
pop
movzbw
mov
jmp
call
lea
jb
lea
cwtl
mov
push
mov
mov
mov
call
push
pusha
nop
call
pusha
mov
pushl
mov
call
not
nop
push
mov
call
push
jmp
mov
mov
movzbw
mov
jmp
push
jmp
pusha
xchg
setno
mov
call
mov
pushf
movzbw
pop
lea
mov
call
pushf
nop
lea
jns
push
xchg
call
mov
call
setne
mov
jmp
pushf
lea
pushf
pushf
pushf
pushf
mov
lea
push
mov
push
call
setno
jmp
pusha
mov
lea
jmp
pusha
movl
push
mov
pushf
call
nop
pusha
mov
jmp
pushf
pushf
pushf
lea
pushf
call
jmp
pushl
lea
jae
mov
push
mov
mov
mov
push
lea
jmp
mov
call
xchg
pushf
movw
pushl
mov
pushl
ret
call
pushf
mov
call
mov
lea
je
pushf
lea
push
pushl
ret
mov
call
mov
lea
jmp
lea
pushf
call
pushf
pushf
lea
push
xchg
pushf
push
movb
pushl
ret
movb
push
xchg
movb
pushf
pushl
ret
lea
mov
call
nop
ja
push
xchg
pusha
pusha
mov
pushf
mov
mov
pushf
lea
movw
jmp
call
push
nop
push
mov
lea
jl
lea
lea
xchg
mov
push
pushl
pushl
lea
lea
mov
movsbw
mov
movsbl
jmp
movzbw
pushf
jmp
lea
mov
movzbw
call
pushl
pushf
mov
pushf
lea
jmp
mov
pushf
mov
call
lea
jne
pusha
lea
movw
push
xchg
movb
pushf
mov
pushl
ret
mov
mov
mov
lea
lea
movzbl
call
xchg
mov
pushl
ret
xchg
mov
pushf
mov
pushl
ret
pusha
xchg
pusha
bswap
mov
mov
call
mov
push
bswap
pop
mov
mov
push
pushl
ret
jmp
push
mov
pusha
mov
pushf
pushf
lea
pushf
call
mov
pushf
xchg
call
jmp
mov
pushl
nop
call
lea
call
push
push
push
nop
push
movl
mov
xchg
jmp
call
mov
mov
jmp
push
lea
je
nop
call
push
jmp
mov
pop
mov
mov
pushl
pusha
mov
push
lea
movb
call
movb
movl
pushf
lea
jmp
lea
pushf
xchg
push
pushf
movl
mov
pushl
ret
call
call
mov
pushf
pushf
xchg
movzbl
call
pusha
movsbw
call
xchg
push
pushf
movb
movb
pushl
ret
mov
jmp
pusha
mov
call
jmp
mov
mov
call
pushf
mov
jmp
lea
call
mov
call
lea
pushf
jmp
mov
xchg
pushf
movzbw
mov
jmp
pushf
mov
pusha
lea
mov
call
mov
lea
mov
call
mov
setp
bswap
pushf
lea
mov
push
push
push
pushl
mov
lea
jp
pusha
lea
movl
xchg
pusha
pushl
pushf
pushl
ret
pushf
movw
mov
call
lea
call
jmp
mov
call
xchg
pushf
pushl
ret
jmp
mov
pusha
lea
pushf
mov
mov
setae
mov
lahf
mov
pushl
jmp
pusha
movl
lea
pushf
xchg
pushl
movl
pushl
ret
pushf
nop
jmp
xchg
pushf
pushl
ret
movb
lea
movb
push
push
call
lea
call
push
xchg
pushf
mov
pushl
ret
push
mov
pusha
lea
pushf
xchg
pushl
movw
movw
pushf
pushl
ret
mov
jmp
push
xchg
pushl
pushf
pushf
pushf
pushl
ret
pushf
cmc
pushf
xor
pusha
pusha
xor
jmp
pusha
pusha
pushl
nop
jmp
call
pushl
lea
call
jmp
mov
push
call
lea
nop
pusha
lea
mov
pushf
xchg
jmp
lea
push
call
pushf
nop
call
movb
jmp
adc
fs
js
pushf
pushl
lea
mov
call
xchg
movb
pushl
ret
stos
hlt
jmp
pushl
mov
call
mov
movb
mov
mov
mov
jmp
pop
mov
pushf
mov
call
xchg
pushf
push
pushl
ret
movzbw
mov
jmp
pushf
mov
movb
pusha
jmp
xchg
not
mov
pusha
lea
call
mov
jmp
lea
call
mov
pusha
lea
movb
push
pushf
pushl
xchg
push
push
pushf
pushl
ret
jmp
call
xchg
movb
pushf
pushl
ret
lea
push
mov
xchg
pushf
push
pushl
ret
xchg
movb
mov
pushl
ret
lea
jmp
jmp
push
call
mov
call
mov
mov
movb
pusha
pushl
mov
mov
pushf
movb
lea
pushl
xchg
push
movb
push
pushf
pushl
ret
xchg
call
pusha
pushl
push
nop
mov
mov
bswap
call
push
call
bswap
mov
movzbl
bswap
movsbw
mov
movsbw
not
mov
jmp
xchg
movw
pushl
ret
call
jmp
mov
pusha
mov
pushl
mov
mov
pushf
jmp
call
ljmp
push
xor
inc
stc
pop
push
push
cmp
scas
xor
dec
into
jne
comiss
repz
stc
lods
arpl
loopne
adc
in
fistpll
lret
iret
fldenv
cmp
push
sub
cmpsb
or
dec
sub
pop
clc
clc
pop
testl
clc
sub
mov
jne
dec
cltd
push
pusha
push
test
fstps
test
jb
in
ret
fwait
and
inc
sar
and
out
xchg
push
in
test
lret
std
lret
jge
or
or
mov
jns
pop
push
jp
and
test
dec
scas
jecxz
cmove
repz
mov
scas
mov
or
inc
or
das
or
dec
aam
insl
in
xchg
lcall
inc
in
xchg
arpl
ret
mov
cwtl
mov
push
jb
add
fldt
add
cwtl
movsb
xchg
dec
push
icebp
outsl
inc
outsl
lcall
aam
addr16
cld
mov
roll
sub
xor
das
push
mov
mov
test
inc
jg
push
test
enter
mov
jecxz
mov
imul
out
xchg
ljmp
push
mov
sub
movsb
into
int3
sub
icebp
add
shr
stos
or
test
sub
xor
je
cmp
jp
cmpsl
cmp
add
fnstcw
mov
inc
xor
icebp
mov
outsl
adc
sbb
push
aaa
add
mov
imul
dec
imul
and
loop
sbb
sbb
mov
stos
and
sbb
push
hlt
adc
fs
push
dec
popf
fidivs
xor
test
ret
bnd
push
aaa
add
pop
xchg
std
in
lods
mov
mov
jo
arpl
adc
testl
js
arpl
xlat
enter
pop
lcall
insb
xor
or
mov
xchg
ds
gs
sti
lds
insl
scas
mov
xchg
int
rcr
pop
xchg
orl
cmp
mov
xchg
rorb
stos
add
lcall
pop
pop
and
mov
fsubrl
push
jo,pt
sub
dec
std
fucomip
mov
xchg
mov
dec
push
jne
daa
jnp
negl
imul
shlb
gs
cltd
shl
dec
das
or
out
stos
aad
in
jmp
aad
xchg
push
mov
push
inc
ljmp
push
and
movsl
paddusw
jne
mov
stos
dec
push
xor
fsubrs
push
adc
push
xchg
mov
icebp
add
jle
xor
cmp
dec
xchg
sub
mov
xchg
dec
cld
mov
cmp
je
mov
jmp
dec
adc
lahf
call
mov
test
rcll
rolb
inc
add
mov
lds
movsb
mov
rcrb
stos
stc
int3
jbe
sbbl
loopne
mov
in
add
out
jp
jp
test
in
aaa
movsb
push
and
lock
xor
out
roll
inc
jno
aas
and
cmc
inc
mov
fucomp
lock
lret
test
addl
cmc
xchg
js
imul
stos
test
cmp
push
sbbb
sbbl
movsb
pop
aad
jge
jp
imul
jne
jb
test
push
mov
dec
sahf
sbb
pop
in
mov
insl
pop
push
ret
mov
lds
jns
imul
arpl
movb
ja
ficompl
mov
ret
or
enter
and
frstor
jl
call
mov
rcll
stos
int3
dec
mov
aaa
call
xor
out
sub
sbb
sti
adc
jmp
pop
movb
std
cmp
jnp
test
cmp
push
jg
adc
bnd
and
xor
jl
sbb
or
pop
jge
js
daa
sub
inc
xchg
adc
sub
test
jae
test
mov
push
addr16
and
outsl
adc
lret
rclb
add
ret
mov
push
arpl
sahf
jbe
inc
stos
or
dec
shl
lock
push
sahf
mov
cwtl
sbb
es
push
pop
popf
xor
clc
mov
lds
lock
call
push
sub
mov
movsb
out
ret
outsb
sti
repnz
push
pusha
add
jl
xlat
leave
mov
or
in
mov
orl
pop
xor
add
mov
xchg
cmp
bound
push
add
ja
pushf
sub
mov
fldenv
roll
cmpsb
test
xchg
subl
jno
les
es
adc
les
mov
addr16
mov
cmpsb
int3
fsts
xchg
std
fistpll
cmpsb
ds
imul
dec
popa
das
pop
inc
pop
fidivs
in
cmp
orl
mov
mov
pop
xor
or
pop
in
and
xchg
scas
lds
push
push
mov
add
stc
push
dec
popf
xchg
in
mov
pop
push
or
rorl
hlt
scas
test
sub
outsb
cmp
inc
insl
nop
bound
dec
scas
ss
popf
insb
nop
icebp
je
sub
out
pusha
or
xor
inc
dec
sbb
jmp
cmpsl
jne
orl
lds
dec
std
int
js
xor
adc
stos
mov
loope
js
or
mov
sbb
leave
test
xorb
or
mov
inc
xor
push
xor
xlat
mov
hlt
jns
or
stos
divl
mov
iret
outsl
push
add
or
mov
pop
in
sub
mov
mov
adc
cld
pushf
aas
jmp
outsb
inc
addr16
pmullw
jae
xchg
sub
leave
fisttps
push
in
mov
jbe
add
xor
lds
jnp
lock
push
mov
outsl
mov
mov
data16
pop
shrl
pop
adc
cs
mov
push
bound
fcmovnb
dec
adc
xor
ds
inc
rcrb
icebp
idivb
lock
sbb
scas
xor
mov
leave
pop
add
mov
int3
ficomps
loop
xchg
sbb
vpshufd
jge
les
sahf
sub
cmc
jge
or
mov
stos
pop
sub
icebp
out
mov
addl
xchg
dec
push
cmp
lods
inc
mov
fcompl
inc
sahf
addr16
pop
cmp
xchg
lcall
fcomps
sti
pop
inc
out
popf
and
jmp
cmp
dec
cli
xchg
outsl
jne
pop
xchg
xchg
or
mov
scas
inc
xchg
or
cmpsb
adc
mov
or
int
add
pop
neg
test
xchg
cmp
xor
jbe
or
sahf
dec
push
mov
gs
dec
repnz
ss
cmp
addr16
lds
shrl
lcall
shl
jbe
je
push
add
ja
mov
mov
test
mov
and
rorb
outsb
sbb
test
or
xor
add
cmp
stc
pop
mov
lds
test
addr16
dec
push
jmp
and
pushf
mov
or
outsb
int3
sub
push
mov
sahf
mov
lods
dec
cmpsl
mov
pop
mov
xor
aas
and
lea
jecxz
push
mov
cmp
std
fwait
cmp
mov
xchg
movsbw
movzbw
pusha
setbe
mov
bswap
not
mov
movzbw
lea
pop
push
mov
pushf
call
pusha
jmp
not
pusha
mov
movzbw
pusha
pop
pop
mov
pop
lea
lea
pushf
call
pushf
mov
mov
pushf
jmp
mov
lea
jl
pusha
lea
mov
call
jmp
call
call
call
pushf
pushl
lea
jp
lea
jmp
push
lea
js
xchg
pushf
pushl
ret
mov
mov
mov
lea
pushl
xchg
pushf
mov
pushf
mov
pushl
ret
inc
push
mov
pusha
xchg
jmp
mov
pushf
movb
mov
pushl
mov
jmp
call
xchg
call
call
push
pushf
xchg
pushf
pushf
pushl
ret
jmp
jmp
call
pushf
xchg
pushl
pushl
ret
pushf
pushl
xchg
pusha
mov
pushf
pushl
pushl
ret
xchg
pushf
mov
pushl
ret
xchg
movb
movsbw
movsbw
mov
jmp
mov
push
not
mov
call
xchg
pushf
pushl
ret
jmp
mov
call
pushf
movb
lea
mov
jmp
call
mov
push
sbb
add
mov
mov
call
call
jmp
movb
xchg
push
pushl
pushf
pushl
ret
jae
pushf
pushf
nop
call
jmp
xchg
mov
pushl
ret
push
call
mov
mov
lea
call
mov
mov
call
xchg
movb
pushl
ret
lea
jmp
pushf
pushf
lea
jmp
movb
pushf
jmp
pusha
push
pushf
xchg
seto
pushf
movzbw
mov
movb
mov
mov
call
pusha
xchg
call
call
pushf
pushf
jmp
call
lea
jmp
push
xor
push
arpl
jnp
jae
loope
roll
jecxz
mov
xor
in
mov
mov
js
in
mov
mov
lock
fwait
lea
push
fs
or
push
inc
lcall
outsb
out
cwtl
add
xchg
rolb
add
mov
mov
xchg
pop
outsl
aaa
xlat
push
popa
mov
cmp
mov
enter
ljmp
adc
or
and
xor
ja
sub
cmp
xchg
push
gs
popf
pusha
std
inc
xchg
sbb
pushf
imul
hlt
and
arpl
stos
xchg
gs
test
jne
scas
lds
test
cmp
sbb
and
hlt
fisubs
xchg
incl
push
outsl
sbb
sbb
jge
lret
pop
aad
scas
push
push
mov
lcallw
or
mov
jle
das
mov
orl
aam
mov
int3
fmull
jp
dec
sarl
jp
aam
ljmp
popa
outsb
dec
shrl
sbb
xchg
and
pop
dec
xchg
loope
cmp
mov
das
faddl
movsl
mov
and
pushf
and
shrb
push
popf
mov
xchg
xor
decl
decb
inc
mov
inc
js,pn
mov
and
or
adc
mov
cli
loope
adc
stos
mov
and
lock
ja
sbb
add
xor
ret
mov
fstpl
aaa
ss
push
xor
pop
sbb
jmp
test
add
in
movsb
jle
call
jne
fdivrs
out
dec
push
pop
inc
push
fnstsw
leave
sub
and
fs
mov
jae
xchg
mov
cmpsl
mov
sahf
cld
outsl
in
mov
rcrb
scas
cld
daa
out
pop
cwtl
jne
lods
adc
jle
sbb
in
xorl
mov
xor
dec
pop
mov
pushf
push
and
test
push
push
popf
sub
xchg
jg
or
ret
ja
jg
xchg
repnz
jle
pop
jae
cwtl
leave
pop
cmpsb
gs
ret
push
push
ds
movsb
clc
cli
pusha
ss
imul
inc
out
pop
cmpsb
cmpsb
push
dec
test
inc
mov
les
xor
call
int3
sub
les
adc
ret
addr16
inc
test
out
sbb
stc
inc
cmp
push
fistpll
jp
fstpt
push
es
es
and
push
pop
pushf
jns
aad
mov
xchg
lret
inc
leave
jae
mov
push
insb
cmpsb
hlt
scas
cld
enter
hlt
pop
lods
xor
imul
xor
hlt
fisubrs
ja
jne
fdivl
jmp
scas
xchg
push
xchg
cmc
adcb
loop
out
add
gs
add
jp
add
ja
and
xor
and
sbb
xor
dec
xor
mov
lock
add
int3
sbb
stos
pop
and
test
rcrb
push
outsb
pop
mov
or
add
jle
jp
fdivl
jbe
jo
arpl
fucomi
cwtl
mov
ss
aad
in
aas
movsl
das
sbb
mov
cmp
je
call
mov
push
mov
push
lcall
test
mov
mov
ficomps
loopne
ret
xchg
fldt
das
cmp
dec
or
aaa
sti
jb
sub
jmp
lahf
mov
ss
add
sbb
lahf
xor
mov
xchg
repnz
inc
xchg
add
dec
push
and
push
and
daa
fnsave
faddl
in
pop
sbb
enter
push
pushf
mov
sub
adc
sbb
rclb
mov
cmp
daa
test
xchg
arpl
nop
mov
shrl
popf
cmp
jg
mov
movsl
les
movsl
inc
mov
bound
jb
ds
iret
sbb
push
daa
fcmovne
shll
das
out
in
mov
pop
stos
push
out
mov
pop
cmc
mov
xchg
push
inc
pop
push
out
pop
mov
popf
out
popa
mov
adc
mov
xchg
jbe
shlb
fdivrl
ret
scas
in
dec
xchg
jl
jns
fcmovnu
jns
jb
xlat
int3
sub
mov
in
std
xchg
push
aaa
pushf
xchg
dec
movsb
xor
in
cmp
mov
subb
jnp
icebp
xor
into
stos
cmp
repnz
out
ret
lods
stc
pop
xchg
loop
xlat
xchg
cli
aam
bound
aad
inc
decb
jbe
push
mov
sub
pop
lret
xor
imul
pop
ds
pop
fnsave
dec
call
popf
mov
das
clc
cmpsl
testl
jae
lret
rcll
std
pop
or
cmp
gs
sbb
xchg
loopne
ja
inc
mov
add
mov
add
js
rcr
loop
push
fcmovnu
mov
dec
mov
dec
pop
xchg
adc
cvtps2pd
mov
aaa
movsl
fldenv
xor
xor
adc
inc
outsl
push
xchg
push
jg
in
scas
out
pop
hlt
add
or
pushl
das
icebp
jnp
adc
add
mov
popf
cwtl
add
xlat
mov
imul
xor
add
mov
mov
fldl
mov
pop
pop
dec
js
adc
adc
fstpt
cmp
cmc
add
in
adc
xchg
add
aaa
popf
dec
cltd
pop
icebp
cmp
sub
repz
scas
jl
cmp
xlat
in
iret
sbb
jmp
adc
filds
or
nop
lret
shr
mov
push
push
push
mov
add
fildl
jne
mov
adc
ret
xchg
iret
sbb
fldcw
cwtl
push
les
push
xor
xlat
shr
xor
ljmp
sbb
sub
adc
mov
in
shl
adc
jbe
daa
lods
and
dec
or
lods
and
stos
ljmp
lock
jmp
les
lods
movsb
adc
loope
ss
xor
cmpps
aas
mov
pop
es
int3
outsb
push
pop
rcll
jg
jge
push
test
gs
lret
sub
clc
mov
je
stos
jne
pop
push
and
nop
jp,pn
loopne
add
add
sub
stos
fldenv
jae
fwait
push
push
ds
pop
and
mov
std
gs
mov
enter
les
push
mov
and
jns
popf
mov
mov
or
rorb
fsub
and
mov
cld
adc
mov
jne
shr
inc
xor
xor
sbbl
sub
daa
adc
imul
jl
rorb
movsb
jg
es
mov
lret
pop
pop
popf
aaa
cwtl
or
lret
adc
push
pop
mov
jg
jmp
pop
pop
mov
pop
cmpb
outsl
xor
mov
faddl
jo
pop
jns
dec
loopne
or
inc
xor
sbb
ds
movsb
mov
lret
pop
pop
xor
xlat
pop
lret
cmp
pop
and
jo
lcall
scas
das
cltd
xor
cli
pop
and
iret
jecxz
mov
xchg
test
daa
test
insb
push
ljmp
mov
push
jmp
lahf
call
enter
pop
sbb
xchg
fucom
aam
lret
pop
pop
fstpt
xchg
dec
dec
pop
arpl
sbb
mov
jecxz
cmp
adc
sbb
xor
mov
pusha
ret
movb
pusha
xchg
push
pushl
pushl
pushl
ret
mov
movsbw
movsbw
movzbl
nop
jmp
mov
call
lea
jmp
movb
xchg
push
push
pushf
push
pushl
ret
pushf
lea
je
pusha
mov
nop
mov
jmp
lea
jmp
push
lea
pushf
call
call
mov
jmp
lea
mov
pusha
pushf
movw
call
mov
push
pusha
nop
call
call
pusha
call
mov
push
sahf
stc
pushf
pushl
jmp
call
pushf
pushf
nop
movzbw
movw
mov
pushf
jmp
mov
push
xchg
movb
pushf
mov
pushl
ret
dec
stc
fcmovnbe
std
outsb
cmp
jno
sbb
sahf
jp
call
jne
push
and
add
cmp
addr16
jge
mov
mov
mov
push
dec
loopne
loope
ret
cli
repnz
stos
lods
int3
out
test
je
xchg
test
lods
pushf
mov
aam
or
adc
jle
inc
lods
stc
bound
aam
cmpsl
daa
cld
inc
sti
adc
pop
je
mov
xor
loope
jbe
clc
shrb
push
scas
aad
inc
loop
xchg
lods
jne
in
dec
push
pushw
adc
push
xor
mov
push
xor
scas
cmp
outsb
sarb
shlb
dec
lahf
ds
sbb
out
in
fcmovbe
std
nop
inc
mov
lds
adc
pop
xor
outsb
ja
jl
cld
sbb
js
addl
and
and
std
fmuls
mov
imul
std
mov
dec
jae
js
sti
rclb
outsb
out
inc
outsl
and
xchg
pop
negb
movsl
inc
ficomps
pusha
out
outsb
jb
sbb
xchg
cmpsl
or
mov
cld
adc
cmc
rcrb
adc
and
mov
fidivrl
sub
xor
adc
push
mov
lahf
fwait
push
shrb
das
xchg
out
lret
cli
lds
bound
in
sti
or
rcll
push
loope
adc
push
or
out
sahf
xchg
jecxz
leave
xchg
mov
push
add
mov
xchg
push
loope
es
xor
push
or
test
stc
test
cmp
sub
in
insl
xchg
pop
dec
push
push
and
sub
insl
inc
lods
jae
mov
dec
fcmovnb
jo
xchg
imul
inc
inc
mov
or
mov
ror
sbb
adc
adc
cmp
sub
or
shl
imul
into
cld
aam
bound
in
ror
adc
mov
cmp
adc
push
adc
mov
stc
jnp
and
fistl
mov
and
mov
call
sub
rclb
fnop
std
lods
js
jne
gs
pop
push
mov
out
into
dec
jnp
and
fdivl
cld
aad
das
add
cmp
addl
outsl
inc
or
push
mov
and
ss
push
mov
divl
mov
xchg
mov
jmp
sub
test
mov
lcall
icebp
mov
or
pop
cmpsb
mov
push
add
xor
mov
loopne
ret
push
sub
test
add
movsl
dec
xchg
clc
lock
adcb
insb
inc
fstpl
sbb
test
cmp
and
outsl
incl
and
stos
dec
adc
mov
pop
sbb
mov
jb
out
inc
mov
sub
movsl
dec
int3
dec
xchg
repz
mov
icebp
addr16
jecxz
push
push
shrb
enter
aam
stos
rcll
fwait
inc
xor
jnp
decb
jl
xlat
xorb
lahf
andb
call
lock
add
or
or
fadd
push
lea
cmpsb
lods
stos
adc
lea
adcl
sbb
repz
pop
fnsave
or
in
push
sbb
insl
sbb
fdivl
lcall
mov
xchg
xorb
cmpsl
xchg
loopne
mov
sbb
mov
push
scas
imul
xchg
pop
add
add
lea
cld
mov
das
push
sahf
js,pn
in
mov
sbb
movb
aaa
push
movb
cmp
and
test
pop
movsl
cli
xor
sbb
sub
mov
decl
jae
mov
daa
rcl
push
add
shll
pop
lods
popa
xor
sbb
popf
push
mov
pushf
cmp
pop
dec
xchg
fstpl
fsts
aad
pop
adc
icebp
cmpsb
jae
adc
xchg
cwtl
pop
push
mov
std
and
pop
jecxz
xchg
jns
cmp
mov
xchg
fildll
and
lods
mov
pop
sub
jmp
inc
lret
mov
xchg
out
lret
loop
into
adc
sbbl
adc
jne
shll
pop
and
arpl
icebp
mov
and
ret
mov
gs
pop
imul
fs
jecxz
ss
lods
sub
aad
fildll
test
insl
pushf
cltd
jo
nop
in
stc
repz
jmp
dec
pop
fstpl
and
mov
inc
xchg
cld
leave
gs
fucomp
mov
imul
lock
movq
and
into
mov
rclb
call
imul
popf
add
add
add
call
pushf
mov
call
push
push
lea
pushf
mov
pusha
mov
jmp
push
movl
call
lea
pushf
xchg
pushf
pushl
pushl
ret
movzbw
call
pushf
nop
movsbl
pushf
lea
mov
push
pushl
xchg
jmp
not
setb
nop
pushf
cwtl
call
call
jmp
lea
call
pushf
movb
mov
not
mov
call
jmp
call
pushl
pushf
lea
jmp
call
movsbw
bswap
xchg
bswap
nop
jmp
not
movsbw
mov
call
jmp
lea
push
xchg
push
movb
push
mov
pushl
ret
xchg
pushf
pushl
ret
mov
mov
pushl
mov
jmp
call
lea
movb
mov
call
xchg
movl
mov
movb
pushl
ret
jmp
movw
xchg
pushf
mov
pushf
pushl
ret
not
jg
nop
bswap
pop
jmp
pushf
pushf
call
lea
mov
mov
setae
mov
pushf
movb
mov
call
call
lea
pushf
jmp
mov
pusha
lea
call
nop
jmp
call
pusha
bswap
pop
nop
lea
pop
mov
pusha
push
jmp
xchg
pushf
movl
pushf
pushl
ret
not
mov
lea
ja
push
pusha
mov
pushf
push
lea
push
push
xchg
movw
pushl
ret
call
xchg
pushf
movw
pushf
movb
pushl
ret
jmp
push
pushf
lea
jmp
xchg
not
pop
mov
mov
pushf
movb
lea
jae
pushf
lea
movb
jmp
call
test
and
sar
inc
or
inc
jmp
lea
push
dec
add
sub
inc
sub
scas
fwait
sub
add
out
jno
jle
push
or
mov
addl
ret
or
xchg
cmp
push
adc
gs
data16
cli
addr16
jg
push
dec
jl
je
mov
popaw
sar
pop
sub
imul
or
ljmp
insb
insl
dec
aaa
sbb
rclb
cmpb
jnp
imul
imulb
in
jle
insb
inc
add
mov
rcl
std
imul
pop
add
stos
mov
sbb
rol
mov
add
cmpps
fldt
mov
push
jae
xchg
cmp
ja
loopne
sub
sub
jl
sbb
adc
push
incb
xchg
mov
clc
sbb
test
outsb
aad
popa
mov
jecxz
cmp
fsubp
in
stos
daa
inc
sbb
jbe
push
addr16
mov
insl
pop
mov
push
pop
loopne
inc
scas
clc
in
fs
xchg
int3
or
mov
imulb
jle
loopne
mov
mov
paddusw
inc
stos
iret
icebp
dec
adc
xchg
sbb
or
push
dec
or
lahf
inc
xchg
fsubs
mov
dec
adc
nop
mov
out
push
xchg
mov
mov
cltd
mov
sti
ficoms
sarb
lcall
out
cmc
mov
mov
adc
stc
aad
jbe
mov
fdivp
or
fidivs
popa
sbb
xchg
inc
mov
and
jnp
cmp
pop
xchg
roll
xchg
pop
stos
scas
ljmp
std
sub
test
lock
mov
jnp
mov
push
lcall
push
rcl
adc
das
add
mov
push
mov
and
jb
dec
bswap
xchg
push
lds
outsl
lods
insb
in
mov
pop
imul
xchg
xchg
fcoml
sub
add
jmp
out
out
pop
mov
inc
je
add
mov
aas
xor
in
add
into
cmp
and
jg
int3
es
test
xchg
pop
mov
adc
mov
and
out
cltd
out
cmp
shl
negl
jno
adc
pop
xchg
orl
fcoms
sarb
and
clc
lock
in
jp
mov
fsub
push
sahf
in
in
or
or
pop
ds
inc
xor
js
lods
xchg
mov
adc
dec
jmp
adc
xchg
pop
push
shll
rcll
cmp
push
rcrb
sub
cmp
jmp
popf
jl
cmp
pop
push
loopne
add
daa
stc
scas
data16
test
test
leave
or
int3
or
sarl
popa
and
mov
adc
iret
addl
out
shlb
adc
lods
lcall
jno
jp
in
fsubrp
xchg
dec
cmpsl
mov
pop
dec
insl
xlat
incl
pop
push
int3
mov
data16
inc
mov
aas
inc
sub
adc
cmpsl
jae
push
mov
push
lods
push
test
repz
dec
movsl
repz
adc
pop
repnz
repnz
fwait
cmp
push
rclb
mov
mov
in
adc
das
inc
aam
inc
int3
loopne
jg
in
push
fisttps
cmpsl
pop
aam
fcmovne
pusha
adc
pushf
jnp
inc
lods
mov
mov
sbb
mov
pop
shlb
mov
das
jne
mov
cmpsb
rorl
xor
mov
aam
insb
jmp
xor
lods
jne
fiaddl
mov
dec
mov
fsubl
aaa
movsb
xchg
push
pop
ds
aam
pop
fadds
outsl
add
cmp
sub
popa
sbb
enter
pushaw
movb
lea
call
mov
call
xlat
inc
lcall
movw
xchg
movb
pushl
ret
mov
movb
mov
pop
mov
lea
mov
call
mov
lea
pushf
movb
mov
pushf
call
push
mov
pop
lahf
mov
pusha
jmp
pushf
lea
mov
call
pusha
lea
pushf
pushf
jmp
pushl
mov
pushf
mov
push
pop
mov
pop
lea
pop
movzbw
lea
jb
lea
mov
lahf
not
not
jmp
mov
mov
jmp
jo
push
pushl
nop
push
call
jmp
bswap
movsbw
mov
pushf
mov
call
pushf
nop
pushf
xchg
push
call
call
jmp
pushf
push
push
xchg
jmp
jmp
jmp
jmp
nop
jmp
pushf
nop
pusha
pushf
push
pushf
xchg
pushf
mov
call
mov
lea
jg
push
pop
mov
pushf
lea
movw
mov
mov
call
call
movzbw
mov
mov
jmp
call
call
mov
jmp
jmp
call
pusha
bswap
pop
mov
jmp
pushf
push
mov
mov
movw
jmp
xchg
pushf
mov
jmp
mov
pushf
call
push
mov
xchg
bswap
cwtl
setbe
mov
push
movw
movb
movw
mov
jmp
pusha
movsbw
mov
call
mov
movl
pushl
ret
jmp
push
movw
mov
jmp
out
mov
pop
sub
xchg
inc
sub
pushf
sahf
xor
in
das
cmp
add
ret
xchg
stos
mov
sbb
dec
js
jp
jge
push
adc
adc
lea
push
dec
sbb
inc
sbb
jmp
jg
push
out
adc
mov
push
or
xor
addr16
rcrb
lret
jp,pt
xor
inc
push
xor
and
push
loopne
repz
lods
sub
jecxz
xor
xchg
mov
clc
mov
ret
ficoml
mov
fdivrs
and
cmp
jae
pop
xor
add
dec
addb
inc
jae
add
fisubs
int3
sar
bound
inc
cmp
sbb
cmp
push
pushf
xor
add
push
xchg
test
jae
mov
xor
shrb
movsb
and
mov
hlt
push
sarb
sub
mov
cmpsb
sub
test
addr16
xchg
icebp
sub
std
add
jb
repnz
and
adc
jb
sub
xor
xchg
and
dec
ss
ss
rcrl
sbb
iret
lret
cmp
and
inc
stos
sbbl
leave
pop
frstor
mov
fimuls
jmp
loopne
lds
aaa
and
cmc
or
lds
jnp
pusha
dec
sti
shll
mov
inc
cmc
inc
aaa
mov
mov
cmpsl
push
lods
pop
cli
cmp
stos
push
sub
lcall
xchg
pop
cmpsb
les
jnp
push
xor
cmc
mov
push
shll
xchg
jmp
repz
and
test
pop
cmp
jmp
test
add
stos
xchg
mov
fsubrl
mov
lea
add
xchg
mov
nop
popa
stos
mov
cmc
das
sbb
sti
rclb
fiaddl
cltd
jg
rcrb
or
inc
mov
fisttpll
lret
cs
cmp
cs
mov
cmp
cmp
dec
iret
push
roll
add
sbb
sbb
mov
sbb
in
mov
test
push
sub
pop
pop
adc
rclb
ds
movsb
ficomps
aad
jl
sti
stos
pop
jg
leave
sub
aam
fidivl
cmpsb
lret
out
seta
push
push
shll
sub
jge
lock
inc
enter
dec
or
sbb
or
or
dec
shlb
lcall
pop
gs
repz
gs
ds
ret
inc
sti
rcrl
stos
mov
dec
in
call
and
add
jg
mov
jo
cld
stos
lcall
loopne
sbb
lods
xchg
xchg
lock
push
mov
je
out
or
add
rorl
mov
lods
xchg
into
lcall
aad
iret
out
clc
adcb
fldt
adc
xchg
gs
mov
adc
test
ficoml
mov
lods
dec
mov
push
enter
push
xor
leave
push
mov
lock
inc
clc
xchg
addl
xor
or
pusha
push
cmp
mov
popf
mov
je
lahf
xor
push
int3
testb
ds
mov
gs
fildl
xor
mov
cmpsl
lock
fsubrl
adc
sub
loopne
cltd
cltd
dec
test
lcall
xor
jg
push
and
call
dec
data16
pusha
xlat
sub
call
adc
ss
lcall
dec
xchg
lret
mov
xor
enter
mov
inc
stos
mov
add
inc
jmpw
das
fmuls
push
jge
jo
xchg
test
sahf
lret
mov
scas
jl
mov
pop
movsl
or
lret
das
mov
push
subl
push
add
out
cvtps2pd
aad
xchg
adc
jl
loopne
mov
adc
hlt
data16
jne
lret
mov
shll
aad
inc
and
and
add
xchg
add
cmpsl
and
outsl
out
cli
testl
je
frstor
dec
mov
call
xor
mov
pusha
movl
movw
movb
movl
push
pushf
mov
movw
lea
jmp
pusha
call
mov
movsbw
mov
pusha
call
lea
jg
lea
call
push
xchg
pushf
pushl
pushl
ret
mov
mov
pushf
push
push
xchg
call
mov
pushl
pushf
mov
push
pushf
pushf
lea
pushf
call
jmp
xor
bt
pushf
xorl
bt
xor
bt
xor
clc
xor
clc
xor
std
jmp
call
call
call
mov
call
xchg
mov
push
mov
movl
pushl
ret
push
lea
mov
pushf
call
mov
call
xchg
pusha
lea
mov
pushf
mov
pushf
push
lea
movw
xchg
pushf
push
pushl
ret
mov
call
pusha
pushl
mov
mov
mov
movb
jmp
xor
cmp
pushf
xor
clc
xor
cmc
push
xor
pushf
xorl
call
push
xchg
push
mov
pop
mov
mov
pushf
push
mov
jmp
push
lea
movsbw
call
pusha
mov
jmp
pusha
movw
lea
pushf
jmp
movb
jmp
mov
lea
jle
push
lea
pushl
call
jmp
movl
movb
xchg
push
pushf
mov
pushl
ret
call
lea
movb
xchg
movb
mov
movb
pushl
ret
lea
push
lea
jb
nop
mov
mov
call
push
push
pusha
push
lea
pushf
call
pushf
lea
call
xchg
mov
pushl
ret
movb
movw
nop
pusha
pushf
xchg
push
call
lea
not
pop
pusha
pushf
pushl
push
xchg
push
jmp
xchg
push
push
movb
pushl
ret
setnp
sete
nop
movzbw
pop
jmp
movb
jmp
mov
cwtl
mov
call
jmp
mov
mov
lea
jge
setp
mov
push
pushf
jmp
mov
push
pushl
call
pusha
pusha
movl
call
pop
mov
pushf
push
push
pushl
ret
jmp
mov
pushf
push
lea
call
lea
push
push
mov
mov
movzbw
mov
lea
jno
pusha
push
mov
call
bswap
lea
mov
push
push
pushf
pushf
lea
pushl
mov
bswap
call
call
pushl
mov
pushl
mov
lea
mov
lea
ja
pusha
mov
xchg
push
pushl
ret
xchg
mov
push
pushf
pushl
ret
xchg
mov
mov
movw
pushl
ret
adc
add
std
call
add
pop
and
das
pop
mov
and
out
dec
inc
inc
inc
xor
cmp
add
addr16
repnz
imul
pop
rcll
daa
in
inc
mov
push
adc
lret
push
dec
or
jnp
pop
ret
dec
push
imul
sarb
or
sbb
int
push
lcall
jge
test
push
addr16
loope
test
adc
sbb
sub
lahf
lock
xchg
cmpsb
push
push
inc
and
inc
or
fsubl
aas
repz
mov
push
dec
xor
leave
loopne
outsb
scas
pop
hlt
ret
adcl
fldt
jle
cmp
and
sbb
stos
mov
arpl
cwtl
hlt
or
test
inc
repz
std
sbb
cmpsl
add
mov
arpl
xchg
andl
ja
cmp
or
mov
call
pop
scas
adc
cmpsb
lahf
pop
in
jns
and
add
jge
es
fimuls
mov
push
mov
fistpll
or
dec
xor
pusha
repnz
dec
or
jl
cmp
push
int3
mov
andl
pushf
stos
adc
lods
or
data16
ss
data16
mov
iret
add
cmp
push
movl
or
lods
pushf
cmp
pushf
data16
push
pop
ss
fimuls
pop
mov
mov
icebp
js
movsb
shr
orb
jmp
mov
or
aad
push
ljmp
xorl
sub
dec
xor
fadds
sbb
jp
dec
push
inc
nop
pop
jb
adc
std
sbb
in
enter
inc
arpl
mov
mov
aad
test
push
xchg
dec
cmpsl
mov
loopne
ds
insb
push
xchg
popa
cmp
sbb
pop
in
mov
rcrb
fwait
sbb
flds
xchg
out
in
pop
dec
test
xor
sahf
je
mov
mov
sub
mov
sbb
nop
int3
mov
jae
pusha
sahf
adc
inc
add
call
outsl
adc
movsb
xchg
inc
clc
pusha
sub
jns
lock
add
imul
fsts
popa
sbb
repz
dec
cmp
jbe
movsl
aam
roll
test
aas
dec
xor
and
add
lcall
cmpsl
sbbl
xchg
stos
sti
jl
mov
sbb
ss
movsb
leave
imul
pop
lcall
push
lret
pop
push
mov
imul
outsb
lahf
stos
mov
jno
pop
sub
in
cmpsl
mov
out
sti
xchg
ljmp
sub
pushf
push
cmpl
push
ret
lahf
scas
push
jns
scas
push
clc
push
lods
jle
in
and
xor
push
jecxz
inc
dec
scas
enter
jno
inc
jmp
ret
or
fidivs
inc
mov
and
push
sti
mov
fidivl
inc
push
lds
sub
jecxz
inc
out
cwtl
jo
cwtl
push
jp
cmp
adc
adc
jns
sub
cli
fdivl
loop
mov
add
push
pop
repnz
mov
cmp
inc
pop
push
pop
and
aam
sbb
es
popa
lret
or
lret
jbe
mov
loope
dec
popa
addr16
mov
jbe
push
push
loopne
mov
into
xchg
mov
rcll
mov
rol
imul
xchg
das
add
xchg
pop
mov
push
lcall
lea
xchg
ret
cmp
imul
fistpll
cmp
lret
add
pop
sbb
shlb
imul
sub
andb
jmp
xchg
mov
ret
rorb
rcll
cltd
adc
lods
clc
fsubrs
divb
pop
jb
xor
pop
daa
lods
or
inc
mov
call
mov
add
outsl
mov
loope
lods
jns
mov
aam
lods
or
push
gs
pop
stos
imul
mov
in
fs
stc
mov
je
xlat
sub
gs
xchg
popa
ljmp
push
call
add
push
xchg
sub
aam
xchg
xchg
sbb
xchg
shl
pop
add
inc
icebp
sti
cli
ret
jl
repz
pop
dec
adc
mov
frstor
test
dec
out
sahf
sbb
arpl
and
out
punpckhbw
sarb
cmp
mov
add
cmp
std
shlb
add
and
in
clc
mov
dec
adc
sbb
test
fs
xchg
pop
mull
bound
mov
and
faddp
popa
pushf
lods
aas
out
ret
out
pop
xchg
scas
xchg
mov
fs
add
popa
mov
jo
popa
jno
jecxz
lcall
sbb
rcr
pcmpeqw
mov
test
inc
call
cwtl
push
sahf
data16
and
movb
fsts
addl
inc
xchg
int3
fs
lea
mov
jnp
in
enter
cmp
out
dec
sbb
push
cmp
mov
cmp
lret
inc
inc
fbstp
dec
loopne
sbb
and
scas
jnp
popf
mov
sbb
pop
imul
sbb
xchg
push
adc
jae
jge
xchg
mov
dec
pop
mov
es
sub
or
push
fiadds
adc
fcoml
sbb
icebp
cmp
and
jmp
or
daa
out
lds
ret
cmp
fwait
adc
mov
mov
add
inc
or
sbbb
aad
lcall
add
sbb
fiadds
rorb
push
hlt
cmpsb
dec
add
and
jne
mov
aas
or
sub
pushf
mov
mov
mov
sub
xor
loop
cwtl
jb
out
mov
xchg
hlt
lods
pop
xlat
xor
es
andl
nop
aas
mov
add
mov
inc
fdivrl
aaa
lcall
cwtl
stos
repnz
mov
jae
jmp
pushf
out
nop
ds
rcll
and
jnp
mov
iret
pop
mov
xor
lret
push
push
add
es
dec
pushf
cmpsl
mov
push
data16
jns
in
sbb
cltd
sbb
mov
in
jne
pop
in
sub
push
sbb
pop
out
pusha
stc
and
sub
fiadds
test
xlat
aam
cmp
xchg
nop
xchg
dec
push
push
push
fdivs
je
orb
rolb
jnp
iret
das
mov
pop
jmp
pop
inc
dec
mov
mov
js
push
fdivrl
imul
sahf
push
pop
mov
inc
inc
jo
lods
cwtl
test
push
lods
ja
daa
pop
push
mov
and
pop
mov
xor
xchg
repnz
daa
lods
xchg
imul
notl
pop
arpl
out
call
nop
lock
lret
sub
or
add
xorb
dec
sti
lahf
xchg
pop
cmp
jl
movsb
pushf
mov
dec
cmp
sbb
lret
mov
xor
cld
in
cli
lea
call
leave
es
test
mov
lret
push
aaa
cmp
adc
js
xchg
xchg
loop
cmp
inc
fidivl
inc
mov
adc
arpl
hlt
jge
add
mov
xchg
xchg
nop
sbb
xchg
xor
or
cli
loop
lea
adc
inc
js
arpl
int
jo
pop
jns
push
sbb
cmp
into
movsl
xchg
loope
faddl
movsbl
mov
push
jmp
pushf
lea
push
mov
push
movb
xchg
mov
push
pushl
ret
call
xchg
movb
push
pushl
ret
call
pusha
lea
jmp
pusha
pushf
call
call
mov
call
pushf
nop
push
pushl
call
movw
lea
movb
mov
jmp
pusha
nop
mov
xchg
pop
mov
mov
lea
call
jmp
mov
pushf
call
pusha
call
jmp
mov
bswap
pushf
mov
mov
pushf
mov
movl
call
call
pushf
push
nop
pusha
mov
pushf
movzbw
bswap
pushf
mov
mov
lea
pushf
mov
mov
not
setp
mov
push
mov
mov
mov
mov
mov
lea
push
pushf
push
xchg
pushf
movb
pushf
pushl
ret
call
xchg
jmp
pushl
lea
call
movb
xchg
mov
push
pushf
mov
pushl
ret
push
push
push
pushl
lea
jmp
pusha
pushf
pusha
mov
nop
push
lea
jbe
xchg
push
mov
movsbw
movzbl
push
bswap
push
pushl
bswap
mov
mov
push
jmp
nop
call
lea
pusha
pushf
jmp
pushl
jmp
pusha
call
call
lea
mov
movzbl
pop
pusha
lea
push
lea
movsbw
push
mov
jmp
push
jmp
jmp
mov
pushl
lea
pushf
xchg
pushf
mov
pushf
pushl
ret
call
call
jmp
mov
dec
cmp
std
sbb
lahf
out
bound
fidivrl
push
in
in
mov
fcomip
inc
mov
das
add
iret
stc
popf
inc
imul
je
cmpb
sahf
and
aam
aad
mov
inc
and
popa
push
shrl
loopne
jbe
orl
cmp
pop
adc
jl
inc
js
lret
xchg
xor
icebp
cmp
shrl
sar
iret
mov
into
gs
xchg
sti
jle
sbb
and
add
xor
sti
cmp
push
jecxz
lods
add
test
add
rcrl
add
loopne
jl
mov
sar
mov
enter
sub
jbe
lods
add
pop
push
pop
mov
jl
in
xor
xlat
ja
pop
pop
ret
jp
stc
sbb
stc
pop
inc
out
mov
pop
test
lret
fdivp
inc
lods
je
test
sbb
clc
inc
insb
adc
repz
inc
push
jo
jg
fwait
or
sub
jno
mov
repz
lea
stc
jmp
mov
enter
inc
push
rorb
shrl
bound
jno
stos
adc
and
idivb
test
out
dec
xor
aad
mov
xchg
sbb
std
cmpsb
sub
pop
pop
data16
mov
arpl
mov
fcmovu
fadd
nop
imul
or
jp
cmp
or
nop
shlb
shrd
outsb
cmp
clc
xor
or
inc
mov
push
inc
mov
cmc
call
mov
mov
push
xor
jb
das
xchg
dec
fstps
mov
and
out
mov
mov
ss
in
loopne
or
mov
or
aaa
iret
in
insb
cmp
into
or
jo
mov
inc
inc
das
icebp
sub
xorl
out
lahf
pop
std
lret
gs
hlt
mov
sti
mov
add
add
sar
push
jmp
cmp
add
add
bound
das
add
dec
dec
movsl
outsb
mov
pushl
push
andl
mov
inc
out
lods
add
popf
ror
pop
adc
push
lods
xlat
push
inc
xor
sbb
or
scas
mov
out
in
mov
jo
mov
push
or
fcmovnu
pop
pop
test
hlt
stc
pop
cmp
inc
lret
push
inc
xchg
push
test
inc
or
sub
or
incl
mov
lea
stc
inc
dec
push
inc
fcomp
mov
mov
cld
push
inc
inc
sbb
push
mov
xchg
repz
xor
mov
jbe
jp
cmp
xchg
push
pop
rcrl
fdivs
lods
mov
mov
mov
jecxz
rorb
lea
pop
adc
int
out
inc
test
sbb
ljmp
pushf
in
jl
mov
pop
pop
ja
pop
ret
fldenv
add
jnp
dec
subb
jg
mov
shrb
sub
out
in
outsl
pop
push
fbld
fs
pop
idivb
jbe
test
pop
fbstp
loope
cmp
and
pop
mov
dec
cmp
jp
or
rorl
insb
mov
push
mov
faddl
in
jo
outsb
pop
or
push
dec
fs
sub
mov
inc
push
add
cmp
ret
leave
or
sub
push
das
orb
and
push
cmp
push
nop
dec
push
jl
imul
dec
lretw
mov
pushf
ficompl
push
push
mov
fs
andl
adc
jp
xlat
xchg
mov
mov
inc
and
pushf
mov
xchg
pop
push
adc
pop
xchg
decb
out
cmpsb
lcall
ljmp
sub
incl
ret
push
stos
xchg
filds
cmp
repz
jmp
lea
jmp
mov
call
pusha
nop
call
nop
pushf
mov
mov
pusha
mov
pushf
mov
pusha
lea
pushf
pushf
mov
jmp
pushf
jmp
jmp
jmp
pushf
call
fstpl
and
jns
pushf
lea
push
pusha
mov
pushf
xchg
push
pushf
pushf
pushf
pushl
ret
xchg
pushf
movb
mov
pushl
ret
call
lea
call
call
nop
call
pusha
lea
jnp
pushf
pushf
nop
push
jmp
jmp
call
call
mov
lea
jmp
pushf
nop
pushf
push
movb
xchg
mov
pop
call
pushf
xchg
pushf
pushl
ret
call
call
pushf
pusha
xchg
pushf
push
pushf
pushl
ret
xchg
pusha
movb
push
mov
bswap
call
jmp
mov
pusha
xchg
not
call
pusha
lea
mov
push
pushl
jmp
pusha
movl
jmp
push
mov
push
lea
pushf
pushf
xchg
push
mov
pushf
pushl
ret
pushf
push
call
lea
push
pusha
pusha
xchg
pushf
pushf
pushl
movb
pushl
ret
movl
call
push
push
xchg
pushf
mov
pushf
push
pushf
call
xchg
pushf
pushf
movw
pushl
pushl
ret
mov
call
lea
jmp
push
nop
lea
movsbl
not
mov
mov
pushf
pushf
xchg
push
pushf
xchg
movzbw
pusha
jmp
mov
pushl
jmp
jmp
jmp
push
nop
pusha
movb
mov
call
jmp
mov
mov
xchg
push
movl
pushl
ret
pop
mov
lea
lea
mov
mov
movsbl
mov
mov
movw
movb
pushl
ret
jmp
jmp
push
call
pushl
pushf
xchg
movzbw
not
movzbl
not
mov
jmp
movsbw
push
pop
pushf
mov
mov
lea
pusha
pop
bswap
mov
mov
bswap
call
pushf
push
jmp
mov
mov
lea
call
movzbw
mov
call
xor
jmp
pushf
call
pushf
xchg
pushf
push
pusha
pushl
ret
mov
jmp
nop
push
call
pushf
call
movl
call
jmp
movsbw
push
movzbw
nop
lea
movsbw
setns
jmp
lea
pushf
xchg
movb
pushf
pushl
pushl
ret
lea
jg
xchg
pushf
pushf
pushl
ret
pushf
pusha
push
mov
movzbl
setb
mov
push
push
push
lea
pushf
mov
jmp
mov
call
movb
xchg
movw
mov
movw
mov
pushl
ret
nop
push
mov
lea
jl
push
movzbw
pusha
movsbw
mov
pushl
push
lea
pushf
movb
mov
jmp
xchg
pop
movsbl
push
lea
call
mov
pushl
pusha
mov
push
lea
pushl
movw
pushl
call
int
movsb
lret
fstpt
push
pushf
push
movb
mov
mov
movl
lea
push
pusha
pushf
xchg
push
pushl
ret
call
mov
lea
jb
pushf
pusha
pusha
lea
pushf
push
pushl
lea
jb
xchg
pushf
pusha
pusha
pushl
ret
not
lea
mov
jmp
call
pusha
call
mov
movb
lea
jmp
not
xchg
push
mov
mov
movsbw
call
mov
lea
lea
setge
setl
mov
mov
mov
mov
pushl
ret
lea
mov
pusha
mov
push
push
xchg
call
jmp
pusha
not
mov
pushf
jmp
mov
pushf
call
call
movsbw
bswap
movzbl
nop
push
mov
call
pushf
mov
jmp
xchg
setae
movsbl
pop
mov
pusha
jmp
mov
jmp
mov
call
mov
pushl
lea
pushf
pushf
jmp
push
jmp
cmp
xorl
clc
xor
pushl
xor
push
pushf
xor
mov
stc
pushl
popf
pushf
pusha
pushl
ret
mov
call
lea
jns
pusha
pushf
mov
push
jmp
mov
movw
pushl
ret
xor
bt
call
lea
movw
call
call
jmp
lea
movl
call
jmp
pushf
mov
movb
call
call
xchg
mov
lea
jnp
push
xchg
mov
movsbw
mov
jmp
not
lea
jbe
xchg
pusha
xchg
pusha
jmp
mov
movb
jmp
xchg
movw
pushf
pushl
pushl
ret
mov
jmp
mov
call
mov
jmp
mov
mov
pushf
call
push
lea
mov
pushf
movw
lea
jle
xchg
push
push
pusha
pushl
ret
pusha
pushf
movb
call
not
pushf
nop
push
pop
push
push
mov
movw
movw
xchg
call
lea
jg
pushf
pusha
xchg
pushf
pushl
ret
call
lea
jge
push
mov
mov
movl
lea
pusha
call
lea
jge
movzbw
mov
push
pushl
mov
push
lea
jg
lea
call
lea
pushf
pushf
call
xchg
mov
movw
pushl
ret
pusha
nop
call
pushf
pushl
pusha
xchg
jmp
mov
movb
call
movzbl
nop
lea
mov
call
nop
lea
mov
jmp
pushf
jmp
lea
movb
mov
xchg
pushl
push
pushf
movw
pushl
ret
call
cwtl
lahf
mov
pushf
push
mov
lea
jl
push
movb
lea
pusha
movl
push
mov
xchg
movl
pushl
ret
call
mov
movl
lea
pushf
mov
call
pusha
movw
pushf
lea
pushf
jmp
pushf
call
xchg
movb
pushl
pushf
pushl
ret
mov
push
pushf
lea
jl
mov
jmp
pushf
movl
lea
pushf
xchg
pushl
mov
pushl
movb
pushl
ret
stos
int3
and
lea
lea
jo
pusha
pushf
push
xchg
mov
push
movb
pushl
ret
pushf
mov
mov
push
pusha
mov
lea
call
jmp
pushf
jmp
movb
pushf
lea
mov
jmp
mov
jmp
jmp
pushf
movl
push
pusha
movl
pushl
pusha
movb
pushl
lea
jmp
pushf
lea
mov
pushl
xchg
movb
mov
movl
pushl
ret
pushf
xchg
bswap
pushf
mov
mov
lea
je
mov
jmp
pushf
call
lea
lea
jbe
pusha
mov
jmp
pusha
movl
pushl
pushf
pushf
jmp
xchg
pushl
pushf
pushl
ret
pushf
xchg
pusha
call
push
push
xchg
movb
mov
pushl
ret
lea
pushl
call
not
pushf
jmp
mov
mov
pusha
pop
call
xchg
push
lea
mov
movb
mov
lea
jmp
mov
sete
not
pop
mov
call
call
push
lea
nop
call
jmp
pushf
call
xchg
push
pushl
ret
xchg
pusha
jmp
mov
jmp
xchg
push
pushf
pushl
pushl
ret
mov
jmp
xorl
movb
stc
xor
test
xor
cmp
cmp
pushl
popf
mov
push
pushl
ret
movzbw
lea
push
mov
jmp
mov
pushl
lea
jmp
jmp
call
pusha
push
nop
mov
pushf
pushf
push
mov
pushf
movzbw
mov
call
call
lea
pushl
mov
pop
movzbw
pushf
jmp
nop
push
movb
jmp
xchg
fnstenv
stc
xchg
push
mov
imul
add
das
add
jae
divl
cmpsl
jo
js
nop
gs
jns
insb
add
sbb
xor
jmp
adc
mov
je
frstor
inc
cwtl
loop
cld
mov
call
int
mov
cmp
xchg
ret
mov
push
aam
jne
out
xchg
jnp
sbb
loop
jne
out
pop
or
cwtl
add
scas
das
sbb
jle
pop
and
insl
mov
pop
cmp
nop
lods
jecxz
xchg
daa
push
imul
jle
xchg
cmpl
shrb
scas
add
bound
out
mov
xchg
pop
enter
mov
jo
insl
or
push
xor
jb
mov
bsf
jge
out
mov
test
xor
inc
inc
lret
fsubrs
jbe
cmpsb
iret
shll
mov
fisttpl
fucom
cld
inc
lods
stc
cld
xor
jnp
sbb
mov
lret
ja
push
ret
pop
stos
mov
push
mov
mov
pop
scas
fdivp
inc
mov
test
dec
int
arpl
stc
push
int
aas
enter
test
std
pushf
call
outsb
and
or
stos
fcompl
outsl
lods
mov
outsb
idivb
mov
lock
or
sbb
jb
rcrl
imul
rclb
xchg
fmuls
jnp
bound
mov
push
into
push
cltd
in
jmp
jb
fcoml
test
mov
mov
xchg
mov
imul
inc
movsl
push
sbb
data16
dec
xchg
push
addr16
outsb
lock
mov
pop
dec
and
adc
xchg
lret
dec
stc
sbb
adc
cld
fs
imul
shlb
push
cmpsb
aaa
mov
adc
sar
cmpsl
cmp
data16
js
add
push
sbb
inc
jb
jl
lret
xchg
sbb
bound
push
les
fldt
add
stos
fwait
inc
add
and
std
cwtl
pop
notl
in
rcrl
fs
pop
sahf
fldt
add
cmp
dec
lahf
push
testb
mov
mov
or
jmp
jg
in
js
clc
xor
push
and
rcrb
jp
notl
pop
adc
std
pop
mov
mov
cmp
lea
imul
cwtl
sub
sub
stos
adc
jge
ljmp
jle
sti
jbe
stos
inc
pop
enter
add
mov
inc
movsl
pop
sbb
cmpsb
repnz
xchg
fstpt
add
int3
xor
cs
outsl
gs
movsl
jge
mov
hlt
ja
add
stos
in
pop
xchg
pop
xchg
andl
dec
mov
sbb
int3
orl
pop
shrb
in
lea
lahf
lea
adc
daa
add
popf
mov
mov
fxch
and
fdivl
jb
movsb
add
cmp
fisubs
sbb
and
fdivp
sbb
je
jnp
ror
or
lahf
adc
rorl
and
mov
nop
idivl
stos
ror
xchg
xchg
outsb
into
pop
js
lods
mov
lcall
mov
inc
cmpsl
out
cmpsl
je
loope
rcll
and
jo
jecxz
das
pop
and
std
adc
jg
mov
dec
mov
push
xchg
push
das
add
jnp
xor
xor
mov
mov
loop
jge
lods
xor
cs
imul
xor
mov
nop
xor
cli
cmp
and
cmp
hlt
lret
dec
iret
dec
int
pushl
mov
xchg
dec
dec
fsubrl
stc
aam
inc
jbe
arpl
out
and
add
addr16
stos
adc
jle
outsb
test
pushf
adc
mov
icebp
inc
das
and
dec
popa
scas
push
push
push
pop
cmp
subb
jns
stc
push
popf
test
movsl
mov
insl
mov
movsb
push
cmp
xchg
lods
sbb
stos
cmp
xor
lret
shrb
jg
mov
aam
inc
and
int
or
lock
jecxz
sub
loopne
repnz
xor
out
test
inc
pop
out
inc
sbb
adc
sub
frstor
inc
push
xchg
and
les
pop
out
mov
pop
rcrl
retw
shrb
shrb
test
add
xor
int
incb
fimull
stos
or
inc
xchg
ret
cli
fidivl
pop
add
iret
push
ds
mov
ljmp
test
cmpsb
out
push
dec
xchg
addr16
jmp
jo
mov
fisubrs
inc
aam
rcr
push
faddl
add
flds
or
cmpsl
xchg
xor
clc
lcall
enter
pop
mov
aas
mulb
sbb
ja
addr16
rcrl
xchg
add
outsl
stc
sbb
lds
rorb
mov
mov
out
mov
hlt
push
lods
add
scas
lahf
addr16
xor
loop
out
aad
cmp
test
clc
pop
and
fidivrl
inc
jo
mov
hlt
sub
adc
jae
xor
lea
fstps
rcrb
lcall
movsb
inc
js
adc
rcrl
mov
sub
in
outsb
push
sbb
xchg
ds
cmpb
into
addr16
jp
cmc
je
callw
aaa
jno
lea
xchg
cmpsb
or
xor
xchg
jecxz
mov
je
clc
jb
adc
mov
push
xor
push
lea
add
inc
xor
rolb
arpl
insl
int
mov
gs
and
lret
mov
or
sbb
data16
xor
adc
jge
popf
fstpt
cmp
fstps
cmp
ret
cmp
mov
mov
stc
lret
pushf
loope
mov
popf
xor
or
cmpsb
lea
lea
jl
push
pushf
pushf
xchg
pusha
push
movw
pushl
ret
pusha
xchg
pusha
mov
mov
pushl
pushl
ret
jge
nop
jmp
push
mov
pushf
movsbw
mov
jmp
pusha
jmp
mov
call
lea
jmp
lea
jmp
xchg
movw
pushl
ret
movsbw
movzbw
mov
push
mov
call
call
sub
adc
jne
add
mov
inc
and
cmc
lds
in
mov
call
lea
jno
mov
pusha
lea
call
cwtl
bswap
nop
lahf
pop
pusha
pushf
xchg
mov
xchg
pusha
setge
pop
mov
jmp
mov
pushl
xchg
call
pusha
movl
mov
call
not
nop
jmp
pushf
mov
mov
not
mov
jmp
mov
xchg
movw
movw
movb
pushl
ret
xchg
push
pushf
pushl
ret
jmp
lea
nop
not
call
lea
jo
xchg
push
pusha
pushl
ret
mov
pusha
mov
pushf
lea
jmp
lea
call
mov
pushf
call
lea
pushf
call
call
mov
pushl
mov
jmp
inc
cmp
sar
adc
out
sub
lcall
jmp
pop
loopne
ret
pop
pop
fisubs
pushf
or
cwtl
dec
repnz
jl
inc
pushf
and
mov
orb
ja
lahf
lret
mov
imul
mov
shrb
cmp
cmpsb
push
sahf
or
pop
cwtl
mov
xchg
inc
sbb
bound
mov
popf
mov
add
fidivrl
inc
outsb
test
sahf
push
dec
outsl
sub
mov
push
shlb
or
mov
push
mov
repz
xchg
xchg
or
mov
lods
in
mov
cmc
dec
pop
in
outsb
jp
and
lds
dec
pop
mov
cli
dec
xchg
xchg
dec
outsb
clc
xor
pop
inc
mov
movsb
jmp
ja
lods
lahf
arpl
sbb
lock
shrb
out
jl
jge
mov
and
bound
outsb
or
adc
mov
inc
push
push
in
xchg
adc
push
sub
xor
pop
mov
gs
subl
add
into
inc
xchg
das
pushl
xchg
movb
push
mov
pushl
ret
push
movl
push
movl
pusha
mov
pusha
push
lea
jmp
jmp
pushf
pusha
pushf
lea
jmp
movsbl
xchg
pusha
call
cmpsl
mov
dec
and
mov
pushl
ret
mov
pusha
xor
inc
and
xchg
xchg
push
bswap
pushl
mov
mov
jmp
jmp
pushf
xchg
push
movb
mov
pushl
ret
jmp
push
pusha
call
nop
pop
pushf
call
pushf
pushf
mov
movsbl
mov
call
pushf
xchg
lea
lahf
mov
jmp
pusha
movb
xchg
push
mov
mov
pop
pusha
pushf
push
mov
mov
push
pushl
mov
mov
lea
jnp
pusha
mov
push
lea
movb
pushf
jmp
lea
lea
mov
pusha
mov
movw
pushf
call
jmp
movzbw
jmp
push
pusha
call
mov
push
not
pushl
pushf
mov
pushf
movw
movb
mov
mov
pusha
pushf
pushf
lea
jmp
pushf
popl
pusha
call
cltd
inc
outsl
dec
jmp
push
jmp
jmp
call
jmp
mov
pushf
movw
call
pushf
jmp
call
jmp
call
lea
movl
push
pusha
push
mov
pushf
bswap
jmp
mov
mov
lea
jbe
pushf
lea
pushf
push
call
movzbw
movzbw
mov
pushf
lea
jmp
xchg
mov
movb
mov
pushf
pushl
ret
movb
xchg
push
call
mov
mov
pop
mov
jmp
bswap
mov
mov
mov
xchg
call
movb
mov
lea
mov
call
xchg
mov
mov
movb
pushl
ret
mov
lea
je
movsbw
mov
not
mov
call
jmp
lea
jmp
jmp
movl
xchg
movb
mov
mov
pushl
ret
pushf
mov
not
call
call
jmp
mov
jmp
jmp
xchg
push
pushl
ret
pushl
lea
jo
pusha
lea
call
xchg
push
push
pushl
ret
pushf
nop
pusha
mov
pushf
mov
jmp
mov
bswap
pop
mov
push
movw
call
jmp
push
and
push
call
push
mov
pop
setp
call
call
call
xchg
movsbl
not
xchg
xchg
pusha
pushf
mov
push
pushf
push
movzbw
mov
pop
call
mov
pushf
lea
jb
pushf
pushf
mov
pusha
call
pushf
pushl
mov
movb
movb
push
mov
lea
jmp
pushf
movl
lea
push
pushf
pushl
ret
lea
movw
xchg
movb
movb
mov
pushl
ret
pushl
lea
jmp
jmp
lea
jg
pushf
pushl
mov
push
lea
pusha
pushf
xchg
push
pushf
pushl
ret
xchg
push
push
movw
pushl
ret
lea
mov
xchg
pushf
pushf
movb
pushl
ret
jmp
mov
pusha
push
pushf
mov
mov
lea
movb
pushf
mov
bswap
mov
jmp
movzbw
bswap
mov
pushf
mov
push
lea
call
sets
nop
movzbl
pusha
bswap
movb
mov
push
mov
push
xchg
call
push
mov
lea
pushf
call
call
push
mov
jmp
push
mov
xchg
pop
bswap
call
lea
pushf
pushl
ret
jmp
lea
pushf
pusha
pushl
mov
xchg
pushf
pushl
ret
ror
add
jmp
mov
movzbl
pushf
push
jmp
mov
pushf
bswap
mov
jmp
lea
pusha
call
pushf
movw
pusha
pushl
nop
movb
jmp
call
pushf
mov
jmp
pushf
pusha
movb
xchg
pusha
pushf
pushl
ret
jmp
mov
lahf
not
cwtl
mov
push
mov
call
call
bswap
bswap
mov
pushf
xchg
push
pushf
call
pusha
mov
mov
lea
call
pusha
xchg
call
call
pusha
nop
jmp
jmp
pushf
mov
lahf
lea
jg
mov
push
call
xchg
mov
mov
push
movb
mov
pushf
lea
call
mov
mov
pushf
push
push
pushf
lea
call
jmp
mov
mov
movl
push
jmp
xchg
jmp
mov
mov
mov
movb
call
mov
call
nop
lea
jmp
pushf
movb
mov
lea
mov
mov
lea
mov
pushf
mov
pushl
mov
push
jmp
call
mov
jmp
mov
mov
push
pushf
mov
mov
mov
lea
pushf
push
call
pusha
mov
pushf
lea
call
pushf
jmp
pusha
pushl
xchg
movb
push
mov
mov
pushl
ret
pushl
mov
lea
push
call
jmp
mov
bswap
bswap
call
call
jmp
mov
mov
mov
lea
pushf
mov
mov
mov
xchg
push
mov
pushl
ret
lea
pushl
mov
pushf
xchg
pushf
pushl
ret
movzbw
mov
movb
pushf
mov
pushl
pushf
call
nop
pusha
call
not
nop
pusha
bswap
mov
mov
push
call
push
push
lea
jmp
call
pusha
not
nop
movzbw
movzbw
mov
cwtl
pushf
mov
bswap
pusha
pushf
lea
movsbw
lea
movl
call
mov
bswap
pop
mov
pushl
push
call
movsbw
movzbw
pusha
lea
nop
pop
xchg
lea
jle
bswap
mov
movzbw
lea
movzbl
lea
call
lea
pushf
jmp
mov
pushf
lea
jmp
pushf
mov
lea
mov
call
call
lea
pushf
call
call
mov
push
movb
pusha
movl
mov
push
jmp
pushf
jmp
pushf
pusha
pushl
xor
stc
xor
jmp
pushf
nop
pushf
movl
push
xchg
movsbw
mov
push
lea
push
pushf
mov
mov
movsbl
pusha
call
pushl
jmp
mov
lea
jle
pushf
lea
movw
xchg
mov
pushl
ret
movb
xchg
mov
pushl
ret
jle
mov
negb
cmp
scas
pop
sub
mov
repnz
shl
xor
in
das
add
stc
and
jle
in
icebp
jns
sahf
jo
adc
xchg
lock
cmc
and
cltd
out
inc
mov
mov
cmp
jmp
xlat
loopne
int3
mov
or
ret
in
ret
movsl
aas
push
mov
adc
les
dec
sub
mov
and
push
jno
lods
adc
dec
add
arpl
aas
sbb
or
fscale
aaa
add
jne
add
aaa
mov
movl
add
ficomps
in
imul
add
rclb
std
movsl
in
or
lock
sbb
out
fwait
push
xchg
nop
pop
adc
das
add
jmp
lods
hlt
mov
mov
inc
mov
test
es
cmpsl
cmc
orb
inc
push
ljmp
sbb
lods
push
cli
inc
sub
sti
pop
bound
loop
push
aad
and
jle
cli
inc
iret
daa
xchg
mov
xor
pop
dec
inc
push
sahf
and
mov
sub
cli
idivl
or
cmp
or
xor
in
and
popa
mov
fwait
pop
add
inc
sbb
adc
sbb
dec
fcoms
adc
les
adc
fbld
mov
push
hlt
xchg
ret
movb
cld
repnz
cs
fcmovbe
aam
add
mov
cwtl
add
mov
out
or
ja
ja
sub
fdivs
cmp
cmpsb
imul
sarb
leave
ret
je
jg
cmpsl
mov
push
int
inc
mov
icebp
mov
stos
in
pop
push
aad
adc
pop
or
xchg
jnp
sti
repz
adc
into
sbb
mov
mov
addr16
inc
or
fs
mov
mov
sar
mov
cmp
pushf
cld
loopne
xor
xchg
lcall
sbb
sbb
jge
subl
or
fmuls
jnp
and
and
mov
jae
push
stos
and
jnp
hlt
loope
jmp
sbb
mov
pop
and
or
dec
fnsave
mov
and
xor
adc
pop
clc
in
adc
mov
test
push
mov
add
push
mov
adc
sub
movsb
push
clc
push
gs
test
push
lods
dec
outsl
jecxz
dec
sarl
lret
sub
out
ja
lods
clc
jae
movsb
lock
js
je
jmp
or
hlt
mov
xor
mov
sarl
inc
xchg
sti
lds
lods
data16
inc
push
xchg
ficomps
jo
test
xchg
mov
ret
jl
fcomps
mov
jmp
jecxz
xchg
jae
pop
pushf
stos
mov
adc
test
dec
jp
lods
scas
sbb
pop
insb
cmp
inc
scas
jnp
loop
mov
dec
jmp
inc
and
pusha
insb
pop
into
xchg
push
jns
cmc
jno
cmp
add
je
loopne
inc
jmp
add
lock
cmp
pop
outsl
cmp
inc
ret
jae
inc
pop
sbb
sarl
out
pop
inc
inc
sbb
clc
imul
jnp
add
sbb
push
out
pop
mov
lock
jmp
adc
jmp
jmp
sahf
lock
sbb
rorb
lahf
push
push
lcall
pop
call
mov
out
hlt
aam
xlat
or
and
lret
or
ret
mov
ds
clc
inc
shlb
les
and
cmp
jno
in
jge
sar
fwait
inc
and
pushf
push
jmp
inc
enter
lods
mov
cmp
lods
xor
xchg
scas
jb
jg
js
mov
dec
fildll
xchg
add
xor
push
pushf
pushl
ret
mov
pushf
mov
movb
movb
call
push
mov
xchg
movl
mov
pushl
ret
mov
push
nop
lea
jnp
push
mov
xchg
call
lea
call
mov
pushf
sets
mov
movl
mov
pushl
pushl
jmp
push
call
mov
jmp
call
mov
xchg
mov
push
movw
pushf
pushl
ret
pushl
mov
xchg
bswap
mov
push
mov
pushf
pushf
mov
jmp
mov
lahf
setnp
mov
push
push
call
jmp
call
xchg
pushf
pushl
pushl
ret
pusha
jmp
xchg
not
pop
push
mov
lea
lea
movsbw
movzbw
mov
pop
pushf
bswap
lea
jmp
mov
xchg
movl
pushf
pushl
ret
movsbw
pop
cwtl
mov
pushf
movb
movb
pusha
pushl
ret
mov
movzbw
bswap
mov
bswap
mov
push
call
setl
bswap
pusha
pop
mov
push
mov
lea
pusha
call
nop
jmp
mov
bswap
lea
jl
bswap
mov
call
mov
pushf
pushf
call
jmp
call
push
pop
mov
pushf
pushf
xchg
pusha
pushf
call
pushf
mov
call
mov
call
jmp
call
pushl
call
mov
mov
lea
call
lea
pushf
pushf
jmp
lea
jmp
xchg
mov
bswap
bswap
jmp
call
push
jmp
mov
push
lea
lea
jae
pusha
mov
mov
xchg
mov
pushf
pusha
pushl
ret
pushf
xchg
pusha
pushl
mov
push
pushl
ret
call
lea
jmp
pushf
call
pop
js
sbb
call
mov
pushf
push
call
push
call
mov
pushl
pushf
mov
pusha
call
mov
jmp
mov
pushf
movzbw
pop
call
pusha
nop
push
pushf
mov
mov
not
setg
setle
mov
pushf
jmp
jmp
jmp
xor
bt
xor
push
test
xor
bt
xorl
std
test
pushl
popf
movb
pushf
pushl
ret
movb
mov
mov
jmp
mov
jmp
xchg
movsbw
movzbw
nop
push
mov
not
pusha
xchg
bswap
bswap
jmp
xchg
lahf
mov
pusha
lea
jg
mov
pusha
jmp
push
mov
pusha
jmp
push
lea
call
lea
movzbw
nop
not
call
xchg
mov
movsbl
pusha
mov
push
push
call
pop
pushf
mov
movb
mov
pushf
pushl
ret
xchg
mov
mov
pushl
ret
jns
lea
call
call
lea
call
pusha
pushf
nop
pushf
pushf
mov
push
cwtl
mov
call
call
mov
call
lea
call
mov
jmp
mov
lea
jo
pusha
lea
call
call
lahf
nop
mov
pop
jmp
xchg
push
pushl
pushf
movl
xchg
jmp
mov
push
lea
jp
push
mov
jmp
mov
pusha
movzbw
mov
nop
pop
mov
pusha
mov
pushf
pushf
call
xchg
pop
movw
not
pop
mov
call
xchg
pusha
pusha
movb
pushf
mov
jmp
mov
call
mov
lahf
pop
pusha
pushf
mov
not
mov
movsbw
mov
lea
mov
lea
not
pushf
movsbl
not
mov
pushf
lahf
lea
lahf
mov
movb
mov
movb
pushl
ret
pusha
pusha
movb
nop
call
call
push
jmp
push
lea
pushf
jmp
mov
movzbw
jmp
xchg
jmp
lea
call
call
call
call
mov
pushf
pushl
movl
jmp
call
pushf
xchg
pushf
call
mov
mov
mov
movsbw
pop
lea
mov
call
mov
call
mov
jmp
call
push
pushf
nop
jmp
push
pusha
lea
jo
mov
pushf
pusha
lea
pusha
xchg
pushf
pushl
mov
pushf
pushl
ret
call
xchg
call
not
mov
pushf
push
movb
xchg
pusha
jmp
xchg
movb
pushf
push
pushf
pushl
ret
call
jmp
lea
call
pushf
lea
push
pushf
jmp
jmp
lea
movb
mov
setge
bswap
mov
push
mov
pushf
mov
lea
pushf
xchg
push
pusha
push
pushf
pushl
ret
push
pusha
call
mov
pushf
not
movzbw
mov
pusha
lea
call
mov
lea
pushf
lea
jbe
xchg
pushf
push
push
pushl
ret
pusha
pushf
lea
pushl
mov
pushf
setno
mov
jmp
lea
mov
call
mov
push
mov
mov
lea
mov
call
mov
setg
bswap
pusha
lea
mov
pushf
mov
mov
jmp
pushf
mov
jmp
movb
call
pushf
xchg
pushf
pushl
ret
mov
pushf
mov
movb
jmp
call
mov
lea
jns
lea
push
pushf
xchg
pusha
pushl
pushl
ret
jmp
not
mov
movw
call
jmp
mov
jmp
pushl
popf
mov
pushl
ret
push
pushf
lea
movw
xchg
pushf
pushl
ret
mov
pushl
xchg
push
pushf
pushl
ret
jmp
lea
jmp
mov
jmp
lea
movsbl
push
call
xchg
pop
pop
pop
setbe
mov
pushf
call
mov
xor
bswap
jmp
jmp
movb
mov
setge
movsbl
lea
lea
mov
jmp
lea
call
xchg
call
movzbw
pop
call
mov
lea
call
setl
pusha
seto
mov
pusha
mov
jmp
movw
mov
xchg
pushl
mov
pushl
ret
lea
movw
pushl
ret
movsbw
pushf
seto
mov
jmp
jmp
jmp
call
push
jmp
pusha
jmp
not
mov
lea
jb
mov
pushf
pusha
push
jmp
jmp
mov
push
call
mov
pushf
mov
movsbl
mov
mov
lea
movzbw
pop
lea
not
mov
jmp
pusha
jmp
pushf
mov
lea
jmp
lea
movb
jmp
xchg
call
pushf
xchg
movzbw
movsbl
mov
mov
push
jmp
mov
pusha
call
call
jmp
lea
jmp
mov
movl
lea
jae
lea
call
mov
movl
lea
jmp
mov
bswap
mov
jmp
call
lea
mov
xchg
mov
mov
pushl
ret
mov
bswap
lea
movsbw
pushf
mov
jmp
call
lea
jmp
call
movl
xchg
pushl
pushl
movw
movsbw
mov
pushf
mov
jmp
pusha
mov
nop
not
pushl
movsbw
setp
mov
pushl
pushf
xchg
not
mov
movzbw
mov
mov
pop
mov
not
push
lea
pushf
mov
mov
setae
mov
pushl
movw
pushf
pushl
ret
movzbl
not
nop
call
push
pushf
mov
pushf
nop
call
pusha
lea
jbe
push
mov
nop
pushf
push
movb
jmp
call
xor
pushf
cmp
xor
bt
stc
xor
jmp
pusha
lea
call
lea
ja
lea
push
mov
movsbw
movzbw
mov
pushf
mov
movb
pusha
lea
push
mov
pushf
movl
xchg
push
mov
mov
pushl
ret
push
mov
jmp
pushf
pushf
push
pushf
nop
pushl
push
call
pushl
xchg
pusha
jmp
mov
cwtl
pop
pushf
mov
push
pushl
ret
nop
pushf
mov
setb
mov
push
lea
jmp
mov
lea
push
call
imul
jne
push
xchg
fbld
and
xor
lds
jne
das
add
jbe
cltd
inc
xchg
loop
ret
mov
in
mov
sarb
rcll
sbb
adcb
lcall
cmp
out
add
adc
mov
sub
xchg
jl
scas
inc
cmp
mov
dec
or
nop
out
mov
loop
xchg
sbb
fimull
push
add
xor
ja
sbb
mov
mov
in
aas
or
stos
cmp
je
and
xchg
loopne
xlat
cmp
popf
leave
add
lahf
push
add
add
rolb
xchg
icebp
lock
xor
jae
mov
xchg
out
popa
dec
jne
sub
push
cmp
cmpl
push
stc
or
in
rcr
lret
fcmovnu
ds
jl
addl
sub
mov
jns
cmp
sti
cli
lock
cltd
roll
xchg
movb
add
push
mov
dec
cmpsb
adc
cli
int3
ret
popf
pop
nop
in
mov
cmp
mov
daa
sbb
sbb
add
sub
rcrb
adc
aam
mov
xchg
stos
int
es
add
mov
imul
jmp
mov
popa
mov
aaa
sub
popa
and
sub
jmp
inc
adc
ljmp
ror
ja
jb
stos
sbb
fnsave
insl
cmp
addr16
imul
add
iret
cmpsl
es
les
xor
pop
test
test
sub
cmovns
dec
insl
and
dec
xor
arpl
cmpl
mov
inc
lds
enter
leave
repz
jecxz
sbb
pop
movsl
xchg
inc
jge
ds
mov
lock
ss
xlat
cld
sbb
lahf
fs
enter
jne
mov
mov
mov
mov
mov
insb
mov
dec
cwtl
mov
dec
jmp
jmp
jno
push
add
jae
stc
aad
shlb
mov
inc
xchg
dec
xchg
mov
dec
xchg
fsubrs
gs
fsub
bound
mov
sub
ret
inc
inc
mov
dec
mov
js
outsb
xchg
test
mov
xorl
or
dec
xchg
cli
xor
and
and
loop
cmp
sbb
cltd
test
loopne
scas
lds
pop
jle
in
dec
cmp
clc
mov
out
adc
mov
push
mov
movsb
lds
or
pop
ffree
sbb
pop
icebp
jmp
or
jge
cmp
stos
decb
jmp
mov
adc
rclb
and
mov
or
mov
icebp
xchg
cld
dec
les
push
add
lock
flds
ja
hlt
xchg
ret
pop
aam
out
and
popa
lahf
es
stos
nop
imul
aam
push
jno
mov
add
data16
or
add
cmp
je
ljmp
rcrl
into
mov
cmp
les
or
addr16
lcall
cmp
jns
ret
pusha
dec
push
outsl
in
xor
mov
outsb
mov
jnp
in
pop
push
xchg
cmp
mov
cmp
movsl
xor
jl
push
shlb
sahf
pop
adc
add
mov
iret
xor
or
je
outsl
enter
xlat
std
and
paddb
mov
sti
xchg
aas
test
cmpb
cmp
adc
out
dec
aam
cmp
ljmp
cld
idiv
add
ljmp
pop
in
mov
lods
xchg
data16
jmp
shr
stc
fnsave
fmuls
push
push
sarb
push
or
pop
sub
rorb
fsubr
push
stc
addr16
mov
data16
push
stos
aad
jo
pop
sub
push
test
dec
cmp
jmp
mov
insb
mov
aam
dec
les
gs
popa
cmpsb
cli
mov
push
lahf
sbb
pushl
mov
rorl
add
fsts
orl
fcoml
cld
ss
xorl
clc
push
ret
mov
out
mov
lods
out
mov
mov
jno
push
icebp
adc
and
adc
test
push
push
fldt
push
ret
fcomps
add
shrb
fnstcw
cmp
call
push
adc
jge
pop
push
sbb
rorb
and
dec
imul
pop
loop
fisubrs
pop
xchg
aam
jl
out
lds
sub
xchg
ficomps
stc
and
sahf
xchg
xor
or
adc
hlt
ret
outsl
orl
stos
cltd
push
pop
test
stos
int3
xchg
add
fistl
add
pop
jns
sub
sub
lret
jmp
outsl
sub
mov
xchg
and
jnp
mov
or
add
leave
adc
out
arpl
xchg
movsb
jle
or
repnz
adc
push
pop
mov
and
push
or
dec
pop
cmpsl
push
jae
das
inc
sbb
adc
sbb
lea
push
aaa
rcrl
ficoms
inc
jg
jnp
orb
lcall
test
and
test
push
in
leave
fwait
cwtl
stos
sub
divl
mov
jmp
out
and
cmp
cmp
mov
inc
cmp
jbe
repnz
jp
leave
cmp
dec
sbb
jecxz
mov
or
aaa
cmpb
inc
in
push
leave
xchg
addr16
pop
dec
imul
bound
xlat
dec
sub
out
sub
test
mov
imul
in
into
mov
sub
pop
nop
sub
add
in
mov
lret
or
scas
adc
mov
adc
lods
lods
sbb
js
lea
movb
pusha
lcall
sbb
sbb
rclb
dec
inc
aas
movsb
and
repz
cwtl
xchg
lcall
cmc
add
cmp
cmp
mov
aas
cmpl
stc
push
adc
ret
or
inc
xchg
je
pop
and
jo
std
adc
cwtl
outsb
fs
add
mov
gs
out
scas
and
add
hlt
ds
xor
mov
pop
mov
sub
cmpsl
jp
cmp
lret
add
shll
es
int3
dec
cmp
leave
xchg
push
orl
mov
mov
mov
inc
in
jmp
mov
sub
cmp
mov
aaa
xchg
xor
icebp
mov
mov
cmpsb
xchg
inc
cmp
pop
push
push
jmp
xor
fs
jbe
mov
fsubrl
mov
outsb
nop
loop
push
mov
push
rcl
push
mov
cmp
ret
rorb
rorl
loope
xchg
inc
cmp
ret
fnsave
pusha
push
xor
test
xchg
jle
fildll
imul
push
mov
fistpll
test
call
add
or
clc
in
enter
adc
nop
adc
fstps
outsb
mov
push
xor
jae
sar
dec
repz
loope
xchg
inc
cmp
push
jecxz
inc
movsl
sbb
nop
pusha
jmp
jmp
lea
push
mov
cwtl
mov
mov
jmp
push
pusha
lea
pushf
mov
push
lea
jl
mov
movsbw
mov
call
sets
mov
jmp
call
mov
jmp
mov
mov
mov
xchg
bswap
call
jmp
jmp
mov
push
pushl
ret
lea
movl
pushf
pusha
xchg
mov
push
movw
movl
pushl
ret
nop
movzbw
lea
mov
mov
xchg
pusha
call
mov
call
call
call
lea
jmp
movsbl
mov
call
mov
xchg
pushf
movw
pushl
ret
push
mov
jmp
call
out
xor
mov
pushf
pushf
mov
pushl
ret
mov
push
pushf
pop
lea
mov
jmp
pushl
mov
lea
movw
movsbw
bswap
mov
jmp
jmp
jmp
pushf
push
lea
pushf
mov
jmp
jmp
movb
xchg
pushl
pushl
pushl
ret
pop
pusha
xchg
pushf
mov
jmp
pushl
lea
jmp
pushf
xchg
pushf
push
pushl
ret
bswap
jmp
mov
movzbw
pop
pop
mov
call
not
nop
pushf
seta
mov
pushf
mov
xchg
jmp
movzbw
call
lahf
js
mov
add
add
repz
decl
fisttpl
mov
add
pushf
mov
xchg
push
mov
pushl
ret
movb
pushf
call
xchg
mov
pushf
pushl
ret
jmp
jmp
lea
jmp
lea
pushf
mov
pushf
movl
mov
movb
pushf
lea
pushl
xchg
pushf
pushl
ret
lea
jmp
pop
movw
mov
jmp
jmp
lea
pushl
mov
not
movzbw
pop
mov
pushf
call
xchg
pushf
pushf
jmp
jmp
call
lea
mov
call
jmp
lea
pushl
mov
xchg
pushl
pusha
push
pushl
ret
call
pusha
pusha
xchg
call
lea
nop
setns
movb
pushl
bswap
mov
pushf
push
pusha
push
xchg
mov
push
push
mov
seto
jmp
pushl
lea
pushf
call
jo
pushf
nop
mov
jmp
xchg
pusha
jmp
addl
call
xchg
pushf
movb
jmp
pusha
mov
setbe
call
push
pushf
mov
not
not
pop
bswap
mov
xchg
lea
bswap
movw
mov
lea
lea
pushf
mov
movzbw
lea
movw
lea
pushf
mov
movzbl
mov
pushl
mov
pushf
pushl
ret
movb
xchg
mov
pushf
pushl
ret
mov
xchg
lea
call
mov
not
jmp
call
pushf
push
push
nop
push
pusha
mov
mov
bswap
call
jmp
xchg
mov
movl
mov
pushl
ret
xchg
push
push
pushl
ret
bswap
lahf
mov
movzbl
nop
lahf
pop
jmp
jmp
call
mov
lea
not
mov
mov
mov
mov
lea
movw
pushf
movb
xchg
push
pusha
movb
push
pushl
ret
adcl
sar
lods
hlt
xchg
push
mov
cs
movsb
loop
jge
test
fisubrl
addr16
shll
add
scas
jns
inc
ljmp
mov
in
mov
lea
xchg
xchg
push
cmp
movsb
nop
fs
jnp
arpl
sbb
nop
mov
jecxz
pop
aad
fs
outsb
orl
fs
sbb
cmp
mov
pushl
shrb
xor
xor
arpl
mov
ss
mov
lock
xchg
std
fidivrl
into
mov
packssdw
shll
in
fnstenv
inc
dec
xchg
dec
xor
daa
cmpsb
ljmp
hlt
xchg
pop
movsl
lock
xchg
xchg
fdivl
stos
notb
in
push
imul
jp
loope
xchg
xlat
xchg
or
sub
add
adc
xor
push
sahf
add
test
lret
ret
xor
ds
test
adc
aaa
add
or
ja
in
inc
popf
fwait
dec
jnp
sub
cmc
test
mov
pop
inc
mov
sub
xor
ret
or
dec
fildl
imul
out
mov
lock
jp
fs
sub
sub
and
lock
pushf
je
mov
iret
xchg
sbb
daa
mov
dec
push
or
add
daa
fimull
js
adc
popa
jecxz
std
shlb
pop
shll
xchg
pop
rcll
pop
daa
mov
in
iret
mov
jecxz
xchg
dec
cmp
inc
lds
add
aas
or
inc
loop
out
or
scas
ss
add
xchg
cmp
add
addr16
hlt
enter
dec
aaa
pop
fdivrs
lock
ja
mov
sub
lahf
mov
jp
sub
xor
push
sub
loopne
cmp
push
push
adc
rol
loop
push
idivb
push
adc
xchg
movsb
cli
out
mov
out
cmc
sub
or
shl
sub
mov
repnz
pop
pop
adc
bound
pusha
aad
xor
stc
sub
test
aam
int3
movsb
nop
andb
pop
fstps
cmp
fcomps
push
cmp
pop
push
sarl
std
in
leave
adc
jbe
push
mov
jmp
fmull
daa
xlat
sbb
adc
mov
push
divl
out
idivb
sub
dec
pusha
loopne
push
lahf
orl
mov
test
lea
mov
mov
mov
push
xchg
push
xor
fimull
hlt
mov
dec
xlat
dec
in
gs
sbb
stos
in
mov
cmp
dec
in
xchg
inc
or
int
mov
or
outsl
cmp
cmp
jbe
pop
push
rcr
add
lret
push
call
mov
test
movzbl
insl
or
inc
adc
add
cs
pop
pop
dec
mov
and
ljmp
in
xchg
outsl
mov
push
jae
mov
or
pusha
sbb
push
or
push
je
rorb
lret
mov
mov
pop
bound
das
iret
or
push
mov
mov
fmuls
dec
push
sub
push
mov
pusha
in
pop
test
fistl
cltd
rclb
dec
pop
adc
lea
push
shlb
bound
cltd
sbb
dec
and
inc
dec
jl
pop
test
jge
dec
xchg
fdivs
pop
jo
xchg
mov
push
in
out
adc
aam
push
xchg
sbb
cltd
lock
ja
sub
and
outsl
mov
pop
call
mov
lret
adc
fsubs
pop
outsl
sbb
pushf
les
mov
xchg
jo
aas
mov
mov
lret
pop
lret
push
cld
sub
loope
test
jbe
mov
and
daa
test
fs
or
add
mov
in
ja
stc
fnstcw
xor
arpl
movsl
lret
mov
xor
mov
dec
scas
cli
inc
pop
paddsb
cmp
and
test
mov
push
mov
or
cwtl
mov
or
mov
mov
popf
rcll
pop
imul
mov
hlt
add
sub
std
and
fstps
lret
sub
xor
rclb
bound
mov
insl
cmp
pushf
aaa
cmpsb
icebp
xchg
mov
xor
popa
inc
mov
sbb
insl
dec
adc
outsb
dec
lods
jp
inc
dec
xchg
and
sti
cld
or
mov
xchg
test
mov
ret
push
xchg
push
in
subb
cmpsb
and
popf
je
stos
rol
adc
test
sub
mov
xlat
mov
mov
fdivrs
sbb
mov
fs
stos
repnz
dec
jmp
xchg
insl
cmp
inc
test
sub
add
xor
adc
addr16
scas
std
push
push
cmpsl
loop
lcall
ja
cmp
adc
roll
mov
loope
sbb
sbb
mov
cmc
shll
cwtl
shlb
popf
push
ja
dec
sti
insb
mov
bound
mov
shl
nop
test
or
or
leave
jne
sti
dec
add
cmp
mov
adc
cmp
push
sbb
xlat
and
lret
repnz
cld
jne
mov
ja
shrl
push
inc
xchg
sub
mov
mov
sub
pop
adc
adc
jle
leave
dec
daa
inc
fisubrl
mov
lods
jp
mov
add
pop
push
jge
inc
nop
test
test
sub
aad
call
mov
inc
mov
lcall
sarl
cmpsl
xor
jl
mov
pop
sbb
xor
jge
cmpsl
xlat
in
std
sbb
add
loop
push
mov
or
ljmp
mov
insl
fldenv
adc
out
test
push
es
inc
push
push
stos
cmp
js
mov
sbb
int3
jne
cmp
mov
mov
fneni(8087
pop
idivb
mov
jae
movsl
movsl
and
sub
mov
add
sub
daa
je
add
lcall
or
push
push
ret
jl
gs
push
xorb
pop
rorl
fwait
xchg
jns
xchg
push
mov
sub
clc
add
test
mov
sbb
out
mov
testl
dec
xchg
mov
outsb
jg
jae
pop
sub
jnp
or
fsubl
mov
cli
inc
repnz
mov
cli
or
out
mov
popf
nop
xchg
sahf
insb
dec
xchg
js
push
in
xchg
lcall
and
ret
jmp
pop
mov
sub
inc
or
iret
bt
push
insb
out
pop
scas
ret
mov
jmp
jmp
cwtl
loop
jne
push
movsb
out
push
lods
jmp
cmc
xchg
aaa
push
mov
sahf
jne
data16
xor
not
cmp
loopne
sbb
sub
std
cmpsl
test
stc
ret
lods
pop
mov
cmp
sbb
pop
jecxz
inc
push
pop
daa
dec
std
cmp
cmp
xchg
cmp
jae
push
lock
mov
ja
push
cmp
imul
sbb
imul
outsl
pusha
rcrl
fldl
jb
fldcw
mov
ret
arpl
addl
repz
inc
rcr
adc
xchg
loop
out
and
or
mov
push
and
xor
stos
ja
pop
and
mov
inc
xlat
pop
fisttpll
sub
int
dec
inc
push
imul
test
inc
imul
xchg
loopne
push
loope
movsl
stos
inc
rcrb
adc
lds
repz
sub
movsl
and
xchg
outsl
cmpb
xor
lock
movsl
loope
dec
sbb
xchg
pop
in
pusha
ds
jp
jb
pusha
push
aaa
into
push
xchg
fisttps
outsb
jne
mov
fcompp
cmp
call
in
push
push
push
imulb
lret
and
mov
inc
or
fwait
lds
fs
loope
movsl
bswap
mov
fisubrs
mov
movsb
mov
popa
dec
fs
pop
mov
inc
inc
cmc
rclb
xor
addr16
rorb
cmc
sub
sbb
sbb
js
push
adc
jle
lret
fs
in
lcall
xchg
xor
adc
and
push
divb
lock
jno
mov
xor
mov
or
lret
push
mov
sub
lret
out
jb
mov
out
das
jne
ljmp
pop
sbb
out
mov
jl
fucomi
out
or
sbb
out
ljmp
test
pop
stos
lods
pop
sbb
scas
mov
xchg
mov
cld
fisubrs
push
test
and
push
ss
lds
fs
ds
jg
lock
shrl
and
mov
jle
out
aad
pop
sbb
popa
sub
sub
jns
fsubrs
std
test
xor
ss
stc
mov
cmp
fldenv
sub
fdivl
lea
neg
xchg
inc
sahf
mov
es
andb
mov
cwtl
mov
dec
pop
leave
push
outsb
fmull
push
imul
popa
nop
cmp
movsb
enter
pop
jecxz
inc
push
or
shrb
xor
fucomi
dec
jb
icebp
cmp
adc
arpl
add
dec
enter
xchg
ja
inc
scas
dec
inc
dec
and
dec
inc
repnz
or
mov
adc
pop
cmp
mov
adc
mov
add
jae
mov
dec
adc
lret
pop
pop
sbb
adc
cmp
xchg
ss
cmp
mov
mov
scas
insl
data16
jno
xchg
mov
lds
mov
fsubl
push
roll
cmp
fldenv
sbb
xchg
out
mov
subb
jg
es
outsl
cwtl
in
cmp
inc
jmp
push
jmp
sbb
inc
ret
mov
push
push
dec
sub
pushf
jmp
imull
xchg
ret
rolb
inc
sbb
jb
pop
mov
imul
jecxz
push
repnz
sbb
aam
push
jp
xchg
loope
add
sarb
mov
add
push
andb
jl
mov
xor
ss
int3
pop
xor
loop
inc
sub
jmp
dec
addb
mov
or
fdivrl
es
jo
not
add
push
aad
inc
or
adc
fwait
mov
push
sub
sbbb
xor
or
dec
jno
dec
fcomi
sti
stc
add
xor
test
test
ss
ds
nopl
lds
cmpsl
cmp
aas
push
fisttpl
scas
dec
pop
and
pop
or
outsb
imul
jmp
mulb
jb
inc
dec
add
aam
push
insl
sub
mov
sbb
pop
push
repnz
mov
mov
push
jae
dec
pushf
nop
xchg
mov
pop
cmp
out
xorl
test
inc
or
jg
sbb
adc
push
mov
mov
dec
mov
leave
pop
icebp
pop
and
fildll
mov
xchg
adc
mov
mov
dec
mov
lock
out
lods
movsb
orb
loope
adc
in
scas
fcmovnb
pop
mov
mov
loop
jmp
scas
out
adc
test
xor
out
and
lret
loope
fldl
in
icebp
faddp
xor
push
pop
xchg
hlt
loop
addr16
jns
aas
test
pusha
stos
cmpsb
xchg
jmp
mov
lods
popa
in
fistps
imul
or
mov
rcrb
sbb
push
or
jmp
sub
mov
pop
sbb
stc
inc
in
cmpsl
cmp
and
arpl
stc
lods
sub
mov
adc
mov
mov
sbb
add
mov
mov
outsb
int3
insl
ljmp
out
sar
icebp
ds
ja
fs
mov
xchg
enter
xor
arpl
push
and
or
loopne
mov
mov
scas
je
sub
mov
popa
pop
xor
aad
rcrl
jne
adc
lcall
scas
cmpsl
mov
es
lret
jae
lahf
xchg
mov
lahf
and
fcompl
daa
xchg
and
push
mov
rol
mov
aam
dec
mov
adc
popa
popf
cmp
push
jg
rcrl
notb
rorl
push
cmc
mov
insb
inc
pop
hlt
pusha
inc
jne
jbe
aaa
push
les
jl
les
jge
icebp
jo
sbb
jp
push
cwtl
jge
add
movsl
dec
rol
mov
mov
sbb
pop
aaa
cwtl
jbe
lret
lea
in
fdiv
jne
mov
aam
dec
sbb
mov
xchg
jb
sub
cmpsl
rcrb
or
jae
aam
and
pop
hlt
xchg
leave
and
pusha
sbb
or
jns
lahf
pop
out
outsb
insb
dec
adc
sub
mov
cltd
cmpb
xchg
popf
sub
mov
aad
jg
outsl
cmp
push
and
xchg
fistpll
pop
push
jge
fwait
dec
popa
loop
push
cs
dec
xor
fs
pop
bound
sub
popf
push
cmp
cltd
stos
aad
or
sub
mov
mov
cmp
mov
arpl
enter
xor
push
adc
xchg
sbb
mov
lds
pop
cld
test
into
xor
cmp
das
xchg
loopne
sarl
stc
pop
push
adc
dec
and
cs
inc
movsl
mov
add
sahf
mov
setle
inc
sarl
mov
push
sahf
int
cld
mov
mov
outsb
mov
jmp
call
jmp
mov
lea
movzbw
pusha
mov
movb
jmp
lea
bswap
movzbw
nop
jmp
icebp
repnz
std
mov
inc
jmp
clc
lods
jns
aaa
push
imull
lcall
das
add
jne
sbb
fstl
sub
push
xchg
arpl
jge
pop
movsb
xchg
shrl
ret
test
jg
mov
scas
inc
testb
sub
add
lock
loope
das
pop
dec
aad
shll
fst
push
outsl
mov
jno
inc
shrb
sub
leave
in
out
pop
inc
jnp
xchg
loop
pop
testb
daa
or
adc
sar
mov
inc
push
mov
cmp
pop
lcall
dec
sbb
push
es
scas
and
xor
push
mov
add
in
sar
ror
add
inc
add
enter
sar
in
aaa
subb
imul
cmp
mov
insl
popf
das
add
xchg
xchg
cmp
or
inc
mov
and
data16
stos
adc
sar
cmc
dec
cmpsl
sub
mov
imul
ret
cld
mov
js
dec
and
mov
sbb
int3
xchg
lcall
rcrl
cmc
jmp
add
test
cmp
cli
pusha
call
mov
mov
push
cmpsl
dec
mov
leave
test
outsb
pop
or
loope
sarl
mov
pop
inc
xchg
jecxz
pusha
add
mov
sub
sub
push
enter
sbb
jne
test
mov
adc
pop
bound
enter
xchg
mov
fildll
mov
loope
xor
xchg
arpl
adc
pop
fs
jmp
xor
jmp
mov
jg
pop
inc
out
mov
outsl
stos
mov
push
mov
inc
cmp
adc
lods
aas
imul
inc
addr16
or
mov
inc
xchg
jnp
cmp
mov
add
movsl
jo
getsec
cmp
cmp
fdivrs
mov
sbb
arpl
xor
sti
in
lods
mov
pop
fidivrs
std
je
loop
pop
jp
adc
in
fsubs
add
add
lahf
das
add
mov
mov
mov
adc
or
jb
mov
jmp
dec
sbb
adc
outsl
cmc
cmc
inc
test
outsb
cmp
in
je
fsubs
mov
lods
pop
iret
icebp
rolb
inc
push
mov
icebp
push
push
ss
inc
mov
pop
sbb
inc
sub
dec
arpl
iret
add
mov
jno
xchg
xor
int3
nop
aas
fwait
aaa
mov
dec
imul
rcll
insb
or
sub
sbbl
fmuls
sub
adc
mov
inc
shlb
mov
or
cmpsl
and
xor
push
mov
xchg
sbb
insl
and
clc
push
xlat
cmpsl
xlat
pop
out
push
ds
jnp
icebp
mov
je
test
pop
test
das
lods
popf
xor
sti
push
insb
inc
cld
lea
mov
and
call
mov
jp
data16
xchg
cmp
pop
fidivrs
xor
aam
dec
ficoms
lds
outsl
pop
nop
insb
sub
adc
dec
hlt
adc
stc
cvttps2pi
jp
xchg
jl
jp
ja
adc
or
in
pushf
jecxz
pushf
ja
imul
fwait
push
cmp
or
jnp
xchg
sub
jecxz
outsl
xlat
sarb
mov
pop
insl
inc
and
es
lds
into
repnz
js
inc
push
in
mov
cld
or
hlt
inc
xchg
xor
sbb
sub
fsts
into
sbbb
imul
jmp
lahf
cwtl
popa
inc
add
into
fnstenv
clc
cmp
stos
mull
push
and
push
movsb
jp
cli
xchg
ja
and
cmc
lea
pushl
xchg
mov
pushl
pushf
movb
pushl
ret
mov
mov
call
movzbw
movzbl
lea
movzbl
nop
jmp
nop
pusha
mov
push
jmp
call
mov
xchg
lea
jo
pusha
pushf
xchg
call
pushf
push
jmp
lea
movzbl
lea
mov
mov
mov
pusha
mov
mov
mov
push
call
pushf
call
mov
lea
mov
pushf
call
mov
jmp
xchg
movb
pushl
ret
xchg
mov
lea
pop
mov
push
jmp
jmp
xchg
mov
movw
movb
mov
pushl
ret
jmp
lea
call
pusha
nop
pusha
xchg
movzbw
movsbw
movsbw
movsbw
mov
jmp
jmp
call
cwtl
mov
jmp
mov
pop
mov
movb
pushf
jmp
pushf
pushf
pushf
nop
jmp
pushf
movzbw
jmp
call
push
mov
jmp
mov
push
mov
bswap
lahf
mov
pop
lea
lea
movsbw
mov
movzbw
movsbw
movzbl
pushl
lea
pushl
pop
jmp
mov
jmp
pushf
jmp
nop
pushf
pusha
push
xchg
jmp
sbb
and
sar
inc
mov
pop
xor
add
pusha
push
mov
das
add
ds
mov
movsb
xlat
push
sub
sbb
xlat
out
xchg
xor
mov
stos
mov
mov
iret
sbb
fistl
mov
out
std
adc
js
lods
add
popf
ja
push
cmpsb
add
in
sbb
test
aam
std
out
sub
and
mov
enter
fisubrl
mov
pop
xchg
mov
sar
fidivs
lcall
stc
jne
mov
or
fsubl
inc
aas
and
jns
cmp
adc
pop
cmp
enter
adc
mov
pushf
or
inc
add
scas
cmp
mov
sub
fs
adc
dec
loopne
movsb
das
add
int3
dec
repnz
add
adc
jno
imul
cmp
mov
cmp
pop
or
or
add
cmp
bound
mov
add
cmc
add
mov
jl
pop
sub
mov
fs
aaa
pusha
imul
call
dec
ja
mov
mov
stc
add
pop
roll
jbe
daa
icebp
enter
cld
dec
inc
test
mov
dec
inc
sahf
dec
and
xor
mov
lock
or
out
rorb
ret
cmc
mov
test
dec
test
sbb
sbb
and
js
inc
jnp
pop
imul
stc
inc
stos
repnz
xor
loopne
and
lock
cmpsb
dec
scas
lods
xchg
nop
mov
xor
or
sbb
mov
inc
mov
cmp
xchg
cli
inc
stos
pop
sub
sbb
adc
inc
popa
stos
jno
push
inc
movsb
dec
ljmp
daa
addb
jae
pop
or
xchg
mov
add
sbb
stos
mulb
movsl
jo
cld
mov
add
xchg
mov
cmc
sub
dec
and
mov
dec
cmp
adc
jmp
out
movsl
das
add
popf
fwait
and
lret
mov
repz
push
mov
jbe
ret
ret
lret
lcall
xchg
dec
pop
repnz
sbb
cli
pop
lods
jmp
lcall
xlat
push
jnp
jae
mov
jmp
jp
lret
fisubrs
or
mov
dec
push
int
add
jle
popa
dec
ja
push
push
out
lret
xlat
aas
sbb
popa
mov
push
cmp
aaa
mov
xchg
stc
divl
mov
pop
adc
adc
idivl
test
dec
outsl
dec
cwtl
fistpl
add
jno
data16
inc
dec
pushf
cmpsl
inc
dec
mov
push
jnp
inc
jl
add
int
enter
sbb
jle
jae
mov
cmpsl
sbb
ret
mov
movd
sti
adc
lret
push
jge
inc
nop
lret
shll
dec
push
or
popa
jge
fs
mov
bound
mov
sub
sub
loopne
scas
lret
js
cmpsl
mov
xor
dec
adc
inc
dec
adc
pop
jb
movsb
cs
ret
loope
scas
push
test
push
pop
lods
in
ds
sbb
repnz
mov
mov
in
scas
clc
inc
std
adcb
xchg
xor
adcl
loopne
imul
decb
call
jne
fisubrs
xor
sub
xchg
pop
es
push
test
push
adcb
inc
movsb
in
cmp
mov
test
dec
mov
jb
mov
in
and
mull
js
push
dec
push
sub
mov
andb
inc
adc
push
pop
loope
les
dec
mov
daa
pushl
sahf
popf
aas
adcb
in
mov
dec
sbb
fldl
or
mov
add
nop
pusha
push
mov
movzbw
mov
jmp
xchg
movzbw
pushf
jmp
fwait
sarb
sar
lock
sbb
push
idiv
stc
shlb
test
sbb
das
add
leave
loop
ja
out
rorl
leave
das
leave
dec
movsb
gs
mov
inc
jns
icebp
mov
push
js
and
idivl
pop
test
loopne
mov
jo
out
dec
mov
insb
lods
mov
push
and
mov
jp
fldt
push
cwtl
sti
imul
shl
mov
or
dec
out
pcmpeqb
movsb
icebp
pop
aas
rcrb
push
adc
cmp
or
fdivl
fidivrl
rcrb
je
push
outsl
stos
in
sbbl
es
jnp
aaa
xchg
jg
cli
inc
movsb
push
cmpsl
lcall
aaa
mov
test
sbb
pop
lods
cmp
nop
out
rolb
push
gs
das
push
sub
mov
jecxz
mov
cmc
add
inc
sbb
xchg
xorb
sbb
sahf
icebp
dec
mov
int
sub
cwtl
sub
pop
or
into
ja
inc
lea
clc
push
sbb
xor
daa
jmp
or
incb
idiv
inc
mov
jae
inc
mov
dec
les
aam
jle
syscall
cld
fidivs
lea
or
stos
mov
sub
mov
es
in
jge
jge
mov
push
repnz
out
mov
out
inc
ja
loopne
xchg
dec
fbld
dec
xchg
mov
pop
dec
pop
inc
aam
dec
scas
bound
popa
fwait
dec
sub
sbb
push
lea
icebp
adc
rcrl
jmp
subb
jle
gs
adc
push
jl
push
pop
imul
mov
add
scas
mov
fnstsw
sbbl
in
add
test
pop
lods
mov
insl
test
lcall
ss
lret
mov
pop
nop
fldl
cmc
cmpsb
gs
fldenv
lahf
ljmp
out
adc
rorb
push
xor
aam
into
jae
mov
leave
sub
pshufw
in
push
fldenv
or
mov
dec
xor
cmp
adc
mov
insb
mov
pusha
and
sub
movsb
repnz
loope
leave
pop
mov
sub
push
sahf
clc
pop
or
dec
cmp
in
mov
stos
mov
test
sbb
push
sbb
mov
add
inc
test
adc
and
inc
aam
lea
mov
lods
das
mov
xor
out
mov
pop
or
pop
inc
fs
jmp
ljmp
inc
in
lock
inc
push
adc
lock
call
add
or
mov
es
mov
lds
jae
insb
jns
mov
xor
xchg
scas
cltd
push
call
adc
imul
inc
push
addr16
xchg
fwait
imull
stos
icebp
fisubrs
mov
jne
ss
add
pop
pop
lret
cmp
add
mov
xchg
out
das
jo
repz
and
int3
jecxz
sub
aad
mov
sbb
outsb
mov
inc
stos
lret
lea
sbb
leave
add
movsb
cld
cld
mov
pop
xorb
jle
call
pop
bound
in
call
xor
inc
add
icebp
inc
xchg
inc
mov
and
je
push
mov
inc
repz
sti
inc
ss
sti
sub
call
pop
xchg
stc
xor
rcl
repnz
xlat
jnp
push
js
mov
adc
in
ljmp
test
outsb
lret
cld
dec
mov
dec
lock
push
out
fwait
mov
ja
pop
sets
setns
mov
pushf
mov
pushf
pusha
pushf
lea
jmp
call
bswap
mov
seto
not
seto
mov
mov
movzbw
not
bswap
jnp
lea
jmp
js
push
mov
nop
jmp
push
mov
call
push
mov
call
mov
pushf
lea
bswap
mov
call
jmp
pushl
jmp
call
lea
pushl
movl
call
movsbw
not
call
call
push
jmp
pusha
pushf
nop
pushf
pushf
call
pushf
xchg
pusha
movw
pushl
ret
call
pop
mov
pushf
push
pushf
pushl
mov
push
call
mov
jmp
mov
pushf
jmp
pusha
movw
jmp
mov
lea
mov
movzbw
lea
movsbw
bswap
mov
mov
pusha
mov
push
lea
not
movsbw
mov
lea
js
lea
pushf
movzbw
not
mov
pusha
lahf
mov
pushf
pushl
ret
bswap
nop
movsbw
pop
call
call
jmp
movl
xchg
movb
movb
movb
pushl
ret
sete
not
mov
pusha
mov
pusha
pushf
lea
jmp
mov
push
pushf
call
pushf
jmp
movb
jmp
scas
lcall
je
negb
ja
data16
jbe
push
sub
ret
popa
mov
in
adc
lcall
rcrb
outsl
hlt
in
xor
sbb
cli
aaa
mov
arpl
cmp
mov
mov
xchg
inc
lods
imul
mov
popa
cmpsb
outsl
in
jo
nop
in
pop
insl
rcll
fwait
ljmp
leave
stos
mov
jp
or
dec
bound
add
rorl
pop
mov
or
xchg
test
leave
and
sub
lea
es
ljmp
push
jmp
add
mov
lea
imul
xor
ljmp
pop
movsl
mov
lret
cmp
adc
pop
mov
xchg
jno
cld
mov
stos
outsl
adc
cmp
cwtl
push
mov
testb
imul
dec
jno
mov
sahf
add
shl
mov
mov
aam
jns
loop
movsl
xchg
push
fdivrs
cmpsb
sbb
jl
out
ret
mov
std
mov
sbb
flds
jb
jmp
fwait
mov
stos
xchg
pushfw
sbbb
xchg
sti
clc
add
jne
mov
mov
outsl
add
out
dec
mov
outsl
fwait
mov
push
sbb
shll
outsl
addb
and
std
push
xchg
push
insb
mov
out
pop
and
pop
push
xchg
testb
add
inc
hlt
ret
in
hlt
ds
mov
sarl
mov
add
xchg
int3
push
icebp
dec
aam
rolb
push
jb
sahf
add
lods
pop
outsb
adc
lret
cmpsl
psubusb
loope
push
aas
aaa
add
fists
div
or
ffree
loope
pushf
inc
test
inc
sti
sbb
imul
pop
cmc
repnz
js
add
cli
push
sahf
test
sbb
scas
shl
leave
sbb
inc
or
add
jbe
data16
repz
repz
stc
loopne
mov
push
jmp
jg
fldenv
add
inc
cmp
mov
in
je
rolb
scas
mov
mov
mov
adc
insb
fisttpll
cmp
mov
mov
ret
dec
roll
mov
call
in
mov
sbb
jbe
test
popa
test
and
sarl
push
out
mov
xchg
pop
dec
inc
xchg
pop
pop
das
es
stos
xor
cmp
adc
out
frstor
movsb
push
dec
adc
mov
mov
fsubrp
scas
jg
bound
adc
jo
je
addr16
loope
aad
fs
push
out
adc
jo
fwait
xchg
ja
hlt
inc
popf
test
jbe
pop
mov
inc
sub
pop
adc
or
sbb
in
ret
mov
lcall
out
andb
bound
adc
mov
imulb
mov
outsb
loope
pop
loope
xchg
pop
sbb
push
xor
icebp
mov
mov
mov
push
jae
inc
test
lock
cmc
inc
fdivrl
es
jo
jge
mov
and
shrl
sub
fldcw
ja
loope
cmc
into
xchg
hlt
pop
sti
mov
stc
out
cmpb
ret
in
cmp
fisttpll
repnz
xor
push
daa
adc
ds
mov
int3
adc
cmp
insb
mov
lock
add
testl
sub
fwait
ret
cld
ja
inc
sbb
cmpsb
mov
fldl
mov
sbb
jns
cmp
fisubrs
xchg
scas
dec
mov
shrb
sti
mov
stos
dec
inc
push
loopne
mov
das
phaddsw
test
aaa
test
test
sub
jne
das
loop
outsl
mov
cmp
bnd
int
mov
aad
cmp
outsb
out
xchg
enter
loopne
pop
stos
sarb
aad
leave
test
jg
add
adc
add
insb
cmpsl
loop
daa
sub
sahf
or
scas
mov
clc
jp
mov
into
ja
jg
shrl
lea
mov
lock
xchg
sbb
push
in
loopne
mov
xchg
xchg
jnp
ljmp
pop
jle
insl
jp
pop
mov
adc
insl
int3
push
jmp
xchg
enter
cld
pusha
sbb
aad
pop
imul
scas
jns
mov
push
and
fidivs
pop
jp
push
mov
mov
pop
push
add
and
jno
fcmovnb
aaa
lcall
insl
or
push
jbe
pop
xor
sub
lds
outsl
mov
cltd
push
mov
mov
aad
lcallw
enter
pushf
jmp
aad
cmpsl
jb
jg
or
adc
test
mov
push
mov
adc
add
icebp
pmullw
push
aas
adc
std
jl
call
sarb
and
jae
mov
or
lea
jp
mov
in
sbb
mov
jbe
sub
inc
fstl
scas
adc
lea
test
lret
mov
rorb
push
or
mov
mov
negl
out
sub
mov
add
and
cli
lods
jbe
pop
and
sahf
cmp
adc
jns
repz
lds
sbb
dec
popa
sub
mov
cmpb
arpl
adc
cmc
cmp
pop
inc
adc
int3
enter
sub
daa
add
jno
arpl
aad
call
sbb
sbb
mov
nop
lea
or
xchg
and
insl
sbb
mov
sti
push
mov
incb
hlt
mov
test
ds
pushf
sub
ss
mov
in
stc
pop
mov
outsl
jle
scas
outsb
iret
and
ficompl
arpl
dec
sbb
imul
adc
fistl
addb
xchg
adc
or
and
cli
lds
das
fldl
push
xchg
push
cmp
cmp
das
sbb
bound
mov
jmp
and
shl
push
bound
lcall
leave
mov
imul
mov
outsb
into
loope
fidivrl
aad
xchg
xlat
das
loope
int
addr16
mov
aad
xor
xor
int3
mov
data16
xchg
adc
mov
cmp
in
mov
in
bound
pop
jae
cld
or
out
test
mov
adc
push
dec
ret
add
xor
cmp
push
push
data16
out
add
shlb
dec
mov
in
rcr
pusha
sbb
add
fmull
call
pop
and
adc
dec
pop
in
sahf
rorl
jle
mov
pop
js,pt
dec
adc
out
mov
mov
jg
outsl
int3
les
mov
roll
or
xchg
aam
mov
jb
std
aaa
add
repnz
dec
inc
lcall
je
sarl
cmc
cmp
aad
xor
mov
and
push
pop
pop
jp
or
add
loope
gs
jp
pop
push
push
insl
insb
sti
fldl
adc
les
sub
sarl
arpl
clc
pop
sbb
jecxz
jns
pop
popf
jle
pop
icebp
or
xchg
sbb
inc
rcrl
loopne
sbb
push
mov
jg
fsubs
cmp
pop
loope
cmp
insl
xchg
jecxz
mov
push
hlt
cmc
imul
xchg
xchg
pop
pop
jb
mov
xor
sbb
dec
mov
outsl
push
sahf
mov
dec
pop
inc
and
cmpsb
aaa
pop
cmp
aad
insl
jecxz
mov
jae
push
test
jle
decl
and
mov
nop
movzbw
jmp
pushl
mov
call
pushl
call
call
cwtl
movsbw
pop
jmp
pushf
pushf
movb
xchg
push
xchg
call
mov
push
movb
mov
lea
jo
push
lea
push
xchg
pushf
push
pusha
mov
pushl
ret
lea
jno
mov
bswap
mov
call
movzbw
bswap
nop
mov
pushf
lea
jle
pop
call
movb
jmp
mov
xchg
pushf
pushl
movb
mov
pushl
ret
call
pusha
push
xchg
pop
mov
mov
call
shll
add
add
push
and
xchg
in
movsb
jno
fs
jnp
push
pusha
xchg
pushf
pushf
push
pushl
ret
push
xchg
pushl
mov
movl
pushl
ret
push
jmp
call
pushf
push
push
mov
pushf
lea
mov
movb
pusha
xchg
push
pushl
ret
jmp
xchg
push
xchg
push
jmp
bswap
mov
mov
jmp
pusha
mov
bswap
mov
not
lea
jb
movsbw
lea
bswap
movsbw
mov
pusha
pusha
pushf
bswap
mov
pushl
push
movb
mov
pushl
ret
call
movb
xchg
jmp
mov
mov
movb
lea
push
xchg
pushf
pushl
ret
movzbw
bswap
nop
lea
pushf
movzbw
mov
pusha
mov
call
pushf
mov
pushf
jmp
jmp
mov
call
call
lea
push
movb
mov
mov
mov
call
lea
call
pushf
xchg
push
pushl
ret
movzbw
setp
nop
movsbw
not
pop
jmp
movb
pushf
push
lea
call
call
xchg
call
pusha
pushf
xchg
pushf
push
mov
pushl
ret
movw
xchg
movb
pushl
ret
movsbw
push
nop
not
lea
jns
pop
pushf
pushf
xchg
pushf
pushf
pusha
push
mov
mov
mov
pushf
push
jmp
push
pushl
jmp
pushf
pop
xchg
lea
mov
pushf
movl
mov
mov
push
pop
jmp
jmp
call
pop
jmp
pusha
bswap
mov
pushf
pushl
pushl
ret
lea
push
xchg
pushf
pusha
pushl
ret
call
pushf
pusha
nop
pushf
movw
call
xchg
pushf
pushf
pushf
mov
pushl
ret
xchg
push
push
pushf
pushl
ret
mov
call
xchg
push
pushf
mov
pushl
ret
xchg
push
xchg
movzbl
mov
movw
mov
pushf
jmp
nop
jmp
push
push
push
jmp
pushf
pusha
nop
jmp
insl
lea
add
jmp
push
jmp
pusha
mov
lea
jbe
pusha
mov
push
pusha
movb
lea
jmp
pusha
jmp
mov
pushf
mov
pushf
pushl
movb
pushf
lea
jmp
pusha
pushl
lea
pushf
movw
call
pusha
jmp
lea
call
mov
push
mov
lea
jae
mov
jmp
mov
lea
mov
pushf
lea
call
pushf
pusha
mov
call
mov
mov
pusha
lea
push
call
push
pushl
popf
push
pushl
ret
push
call
jmp
movl
jmp
jmp
xchg
leave
xor
pop
mov
movzbw
mov
mov
jmp
mov
bswap
jmp
pushf
pushf
call
jmp
movb
xchg
push
push
pushl
ret
pushf
pushf
mov
pop
call
call
lea
mov
jmp
xchg
call
pushf
call
lea
jmp
xchg
push
pushf
pushf
pushl
ret
pushf
lea
movl
mov
pushf
movb
xchg
mov
pushl
ret
pop
nop
pop
movzbw
pusha
pop
mov
pushf
xchg
push
jmp
pushf
mov
movb
pushl
pushf
pushl
ret
lea
jbe
pusha
nop
pushf
pushf
pushl
xchg
lea
mov
call
pop
push
pushf
movb
xchg
call
bswap
call
jmp
nop
movb
xchg
lea
ja
mov
pusha
push
pusha
lea
mov
pushl
movb
mov
movzbw
movsbl
pushf
jmp
push
nop
pushl
jmp
mov
movb
push
lea
jae
lea
pusha
lea
jbe
pusha
mov
xchg
push
movb
mov
pushl
pushl
ret
mov
push
lea
pushf
pushf
mov
pushf
xchg
pusha
mov
pushf
pushf
pushl
ret
mov
pushf
jmp
jmp
jmp
mov
lea
movl
call
pushf
pusha
xchg
jmp
jg
es
pushf
xchg
jmp
pushl
call
call
lahf
push
nop
cwtl
bswap
lea
mov
push
mov
xchg
pusha
movb
push
lea
jno
push
jmp
pushf
xchg
pushf
pushl
ret
call
lahf
mov
pushf
pushf
mov
push
push
pushf
push
lea
jmp
mov
mov
lahf
bswap
pushf
mov
pushf
jmp
push
push
mov
pushl
lea
jmp
jmp
movb
mov
lea
call
mov
mov
mov
jmp
xchg
mov
mov
mov
pushl
ret
jmp
call
gs
imul
lods
mov
cmc
fdivrp
xor
pushl
jmp
pusha
jmp
mov
out
cmp
pushl
popf
pushl
mov
pushl
ret
cwtl
mov
jmp
jmp
call
lea
push
jmp
lea
mov
lea
jp
pusha
mov
pusha
jmp
lea
mov
movb
push
mov
xchg
pushf
xchg
pop
mov
call
mov
pushf
jmp
mov
mov
lea
jp
lea
jmp
call
nop
movzbw
movsbl
mov
pushf
call
xchg
pushl
pushl
mov
movb
pushl
ret
jmp
lea
call
lea
mov
xchg
pushf
push
pushl
ret
lea
push
pop
pop
jmp
pushf
jmp
pushf
lea
mov
xchg
pushf
pushf
mov
movb
pushl
ret
xchg
jmp
call
pushf
xchg
pushf
mov
mov
pushl
ret
push
jmp
call
not
jmp
cmc
xor
jmp
push
nop
pushf
mov
bswap
mov
push
lea
call
movb
xchg
pushf
pushf
movb
movb
pushl
ret
call
nop
mov
push
pusha
pushf
mov
bswap
lea
seta
jmp
lea
movb
xchg
movb
mov
movb
pushl
ret
mov
push
pushf
pushf
pushl
pushl
ret
pusha
mov
pushf
call
call
pushl
movb
mov
jmp
push
mov
jmp
mov
pushf
pop
jmp
lea
js
mov
movzbw
lea
pushf
call
movzbl
nop
mov
pop
pushf
call
push
mov
pusha
jmp
pusha
pushl
mov
lea
movzbl
call
xchg
pusha
pushl
ret
movsbl
push
pusha
pusha
nop
mov
mov
movw
jmp
pushf
pushf
lea
jmp
mov
mov
pop
movsbw
mov
push
mov
jmp
jae
jb
xchg
mov
pop
bswap
mov
pushf
mov
mov
jmp
xchg
jmp
pushl
pusha
lea
push
call
mov
pushf
call
xchg
pushf
not
call
lea
call
mov
nop
pusha
xchg
pusha
mov
jmp
jmp
push
pushl
call
pushf
nop
push
jmp
pushf
xchg
call
mov
mov
mov
pusha
pushf
lea
push
call
push
lea
ja
push
lea
mov
mov
mov
jae
pusha
lea
call
mov
not
mov
push
movb
mov
mov
jmp
pushf
movsbw
mov
mov
jmp
nop
pushl
mov
pop
movzbl
movzbw
mov
call
mov
jmp
lea
jnp
lea
call
call
cwtl
mov
mov
mov
call
jmp
mov
jmp
jmp
pusha
call
mov
movsbl
mov
pushl
mov
movb
lea
jmp
pushf
pushl
pusha
mov
nop
pushf
pushl
pushf
mov
movsbw
mov
jmp
jmp
movb
call
not
mov
bswap
lea
movsbw
lea
mov
jmp
setp
call
mov
movsbw
pusha
movzbl
pushf
mov
pushf
push
pushf
lea
jo
lea
push
push
mov
mov
pushf
mov
pushl
mov
jmp
pushf
movb
mov
pushf
lea
call
call
pushf
nop
pushl
mov
call
movb
pushl
lea
jl
mov
pusha
mov
call
sub
notb
mov
mov
pusha
lea
call
push
call
push
pushl
mov
lea
jmp
xchg
jmp
xor
mov
pushl
xor
cmp
mov
xor
jmp
pushf
xchg
pushf
movb
pushl
ret
mov
movsbl
push
mov
pushf
mov
jmp
xchg
mov
movb
mov
pushl
pushl
ret
pushf
mov
mov
push
call
pushf
call
call
xchg
push
pushl
ret
lea
push
mov
pop
mov
call
jmp
mov
push
mov
xchg
lahf
lea
pushl
mov
jmp
mov
cwtl
bswap
pop
mov
jmp
pushf
lea
pushf
xchg
pushf
pusha
pushf
pushl
ret
mov
bswap
mov
pushl
movb
jmp
mov
call
lea
jmp
mov
setno
mov
call
pushf
pushf
popl
clc
xorl
cmc
xor
pusha
xor
cmc
test
xor
bt
cmp
xor
movb
xor
bt
test
xor
pushf
xor
std
pushl
popf
pushf
pushf
pushl
ret
mov
jmp
call
pushf
push
pusha
nop
call
jmp
jmp
mov
movw
jmp
call
pop
movsbw
mov
call
push
jmp
mov
xchg
bswap
push
mov
pushl
mov
movb
movb
movb
lea
ja
lea
push
mov
pushl
xchg
push
pushf
push
pusha
pushl
ret
pusha
lea
movb
push
call
mov
xchg
movb
movl
mov
mov
pushl
ret
mov
mov
lea
pusha
call
movsbw
seto
push
nop
pushf
lea
pushf
mov
call
movb
mov
xchg
movl
movw
mov
pushl
ret
movl
movl
push
movl
pusha
pushl
lea
jmp
jmp
lea
pushl
movb
xchg
movw
mov
pushl
ret
pushf
push
pusha
lea
jmp
aas
or
jne
or
pop
leave
add
call
jmp
push
pusha
xchg
pushl
movw
push
pushl
ret
jmp
mov
bswap
pop
jmp
mov
jmp
call
push
nop
pop
pop
jmp
pushf
xchg
pushl
push
push
pushl
ret
jmp
call
mov
jmp
jmp
jmp
mov
pusha
jmp
pushl
xchg
pushl
pushf
pushl
ret
bswap
nop
call
mov
mov
jmp
xchg
pushl
pushf
call
lea
call
jmp
lea
pushf
jmp
mov
jmp
xchg
push
mov
pushf
pushl
ret
push
push
movw
nop
movb
xchg
push
mov
call
mov
lea
mov
movb
push
pushf
pushl
ret
nop
pushf
pushl
pushf
not
mov
pusha
jmp
mov
pushf
mov
jmp
pushf
xchg
push
pushl
ret
call
lea
lea
jo
push
pusha
pusha
xchg
pushf
push
movb
pushl
ret
movb
pushf
xchg
movb
movw
pushl
ret
jmp
pushf
nop
lea
jl
pushf
mov
bswap
call
pushf
lea
push
mov
not
pop
lea
jp
mov
jmp
pushf
lea
jmp
pushf
pusha
nop
call
mov
mov
mov
pusha
not
lea
push
movzbl
not
mov
seta
mov
pushf
movw
pushl
pushl
ret
pusha
movb
nop
pushl
mov
pusha
mov
pop
lea
mov
call
call
push
pushf
mov
call
bswap
pop
mov
movw
mov
call
mov
not
setnp
mov
pushf
lea
pushf
mov
call
pushf
lea
call
or
lods
pop
lea
lea
jne
pushf
mov
xchg
mov
pusha
pushl
ret
lea
call
mov
mov
mov
mov
jmp
pushf
mov
bswap
bswap
mov
jmp
mov
lea
lahf
setne
nop
movsbw
movzbw
setae
not
pop
jns
pushf
movb
movw
xchg
push
movb
mov
pushf
not
mov
pushl
pusha
call
jmp
xchg
lea
jno
pusha
xchg
pop
bswap
call
mov
movb
push
call
lea
jmp
lea
jmp
pusha
nop
mov
call
jmp
pushf
xchg
pushf
movb
pushf
mov
bswap
mov
push
mov
pushf
call
pushf
mov
mov
movsbw
mov
pushl
jmp
push
push
lea
pushf
jmp
pushl
mov
call
jmp
lea
call
pusha
push
pushf
popl
pushf
xor
push
xor
bt
xorl
pushf
xor
cmc
xor
bt
cmc
xor
bt
bt
xor
stc
xor
pushf
pushl
popf
push
pushl
ret
xchg
pushf
xchg
movzbw
lahf
mov
lea
jl
pushf
push
pushf
mov
call
xor
lret
jmp
pushf
jmp
movzbw
mov
movzbw
pusha
nop
push
pusha
mov
call
pushf
call
mov
call
push
jmp
xchg
pusha
pushl
pushf
mov
jmp
movw
nop
pop
pop
jge
pushf
xchg
push
pushf
jmp
bswap
movzbl
pushl
mov
movzbw
mov
pushf
jmp
lea
lea
jle
xchg
pushf
pushl
pushl
pushl
ret
push
call
call
call
not
call
pushf
movw
lea
call
pushf
bswap
nop
xchg
mov
pusha
pushf
mov
xchg
not
movzbw
mov
movzbw
mov
mov
bswap
bswap
call
call
lea
push
lea
ja
push
mov
xchg
push
movb
pusha
push
pushl
ret
movl
xchg
push
pushf
pushl
ret
call
pop
call
jmp
call
pushf
jmp
pushf
call
jmp
mov
jmp
lea
call
push
pushl
lea
pusha
xchg
push
pushl
ret
setge
movsbw
nop
call
mov
mov
movzbl
pushf
jmp
xchg
mov
pusha
pushl
ret
xchg
push
not
mov
jmp
pusha
bswap
jmp
imul
and
lea
push
call
lea
pushf
mov
pushf
pushl
push
mov
push
lea
call
pusha
mov
call
jmp
call
pusha
push
nop
pushf
xchg
call
movsbw
nop
jge
mov
pushf
mov
mov
pusha
pushf
jmp
mov
lea
jbe
mov
pusha
jmp
pushl
mov
not
bswap
lea
lea
lea
push
mov
pushl
movsbl
lea
xchg
mov
movzbl
pushf
pushl
movsbw
mov
call
call
call
lea
ja
push
push
lea
call
pushf
nop
call
movb
pushl
mov
movzbw
mov
mov
lea
jns
push
pushf
lea
call
mov
mov
push
mov
push
jmp
mov
movzbw
movzbw
mov
movb
pusha
mov
call
movl
pushl
mov
jmp
mov
jmp
xchg
push
pusha
pushf
pushl
ret
call
pusha
mov
jmp
and
pushf
jmp
mov
pushf
movsbw
jmp
call
jmp
pusha
xchg
call
jmp
lea
push
call
pushf
jmp
pushf
push
bswap
lea
jmp
nop
bswap
lea
mov
push
mov
pushl
xchg
movl
call
mov
pushf
pushf
call
pushl
pushf
xchg
pushf
pushf
push
pushf
pushl
ret
jmp
pushf
movzbw
mov
movzbw
lea
jmp
pushf
jmp
movzbw
nop
jmp
pusha
pusha
xchg
push
pushl
ret
xchg
push
pushl
ret
mov
bswap
mov
call
pushf
pushf
nop
call
pusha
call
push
jmp
pushf
pushl
mov
nop
jmp
pusha
lea
movb
mov
not
movsbw
mov
pushf
mov
mov
mov
mov
movb
call
mov
mov
pushf
call
xchg
push
pushl
pushf
pushf
pushl
ret
call
pusha
xchg
bswap
mov
jmp
movzbw
mov
call
pusha
call
call
mov
movb
lea
jns
xchg
pushf
pushf
pushl
ret
xchg
lea
jmp
call
xchg
pushl
pushf
push
pushl
ret
pushl
lea
jmp
pushf
pushl
pusha
lea
push
pushf
pushf
xchg
mov
movw
mov
pushl
ret
push
nop
jmp
push
jmp
pushf
mov
mov
jmp
mov
mov
jmp
call
pushf
lea
pushf
pushl
mov
mov
lea
movsbw
call
xchg
mov
mov
mov
mov
pushl
ret
push
mov
mov
pop
pusha
movsbw
mov
pushf
pushf
mov
pushf
movw
pushf
push
lea
jmp
xchg
push
pushl
ret
pushf
nop
movsbw
pop
lea
pop
pushf
movb
pusha
mov
xchg
call
pushf
mov
mov
jmp
mov
pop
mov
lea
jge
push
pushf
mov
push
jmp
push
mov
mov
mov
push
lea
jmp
xchg
jmp
xchg
jmp
push
xchg
mov
push
pushl
ret
jmp
pushf
pushf
popl
pusha
xor
stc
xor
pushf
bt
xor
call
pusha
pushf
pushf
nop
push
jmp
pushf
xchg
movb
pushl
ret
bswap
jmp
jmp
ja
mov
push
push
xchg
not
lea
je
lahf
lahf
mov
pushf
call
xchg
movsbw
mov
pushf
push
mov
call
not
nop
pusha
push
xchg
lea
jmp
jmp
push
pop
mov
jmp
nop
jmp
pushl
xchg
movb
pushf
pushl
ret
lea
push
push
mov
call
push
mov
xchg
mov
push
pushf
mov
pushl
ret
mov
movsbw
mov
movzbl
mov
push
pushl
ret
pusha
movb
push
nop
call
mov
call
bt
xor
jmp
mov
pop
movsbw
bswap
mov
push
pushf
movw
call
lea
push
movb
xchg
pushf
pushf
pushl
movb
pushl
ret
pushf
movzbw
mov
movb
mov
mov
mov
call
pusha
pushf
mov
call
call
xor
test
stc
xor
test
xor
test
cmp
xor
mov
xor
movb
test
xor
pusha
pushl
popf
pushf
push
pushl
ret
lea
jo
pusha
xchg
pushf
pusha
mov
movsbw
call
mov
pushf
mov
call
jmp
pusha
movb
pushf
xchg
call
jmp
nop
jmp
pushf
popl
test
xor
pusha
xor
pushf
jmp
xchg
mov
pushf
pushl
pushl
ret
mov
mov
mov
jmp
lea
pushf
push
mov
pop
push
pushf
not
mov
mov
pushl
ret
pushf
call
xchg
pushf
pushf
pushl
ret
pushl
lea
jmp
mov
jmp
mov
pushl
pushf
lea
pushl
mov
movl
call
xchg
test
std
fisubrs
in
mov
or
pusha
out
mov
hlt
mov
push
sub
shrb
sub
add
add
repz
push
dec
cld
inc
outsb
mov
push
lods
mov
cmc
inc
mov
sbb
cli
stc
daa
mov
in
mov
pop
insb
cmp
movsl
and
pop
in
xchg
add
call
scas
bnd
jmp
inc
rclb
adc
push
mov
and
fidivl
push
sti
cmc
pop
push
outsb
sub
pop
jbe
in
loope
imul
cld
andb
jge
fbld
xchg
popf
aas
bnd
shlb
xchg
fcompl
lods
pop
inc
inc
setno
sub
lods
fsubp
pop
sub
inc
inc
stc
std
or
jnp
add
inc
add
sbb
xchg
cmpsl
sar
xlat
movsl
lock
ds
mov
js
sbb
dec
cmpsb
das
pop
sub
push
les
loop
aaa
loop
imul
adc
test
push
sarl
mov
test
jmp
pusha
lcall
test
cmpsl
js
lods
test
cltd
movl
inc
jle
mov
out
xor
push
inc
inc
mov
push
add
mov
sahf
negb
int3
jle
or
sbb
in
insb
cmpsb
mov
popf
and
hlt
bound
sbb
out
into
ret
jbe
pop
iret
rcrl
sbb
js
cmpl
jno
pop
out
push
arpl
ja
mov
ret
rcl
sub
loop
sub
mov
pop
and
pop
mov
push
adc
in
cmp
pushf
repz
in
sub
adc
aam
inc
pop
aam
jae
outsb
xchg
adc
sub
stos
test
jb
xchg
je
pop
xchg
mov
mov
and
inc
adc
sar
stos
jno
arpl
das
and
jecxz
aam
scas
pop
sub
mov
jae
lahf
dec
imul
stos
enter
and
cmp
imul
lock
leave
lds
add
lahf
cltd
xor
or
loop
xchg
enter
lahf
push
movsb
add
icebp
out
inc
mov
jp
push
fsubs
adc
xlat
scas
clc
ret
stc
mov
adc
cwtl
push
cmpsb
fildll
xchg
test
popf
mov
pop
scas
scas
leave
push
xlat
movsb
mov
sbb
cli
mov
pop
mov
outsb
mov
fcomip
adc
ret
fisubrs
mov
nop
lea
cmpb
inc
test
push
cmp
je
mov
mov
in
arpl
sbb
adc
mov
mov
repnz
test
out
mov
mov
cmp
repz
push
jb
fidivrl
dec
mov
nop
mov
fucomp
jns
inc
pop
push
cmpsb
test
or
xor
push
pusha
sbb
movsb
cmove
mov
loope
xchg
sbb
mov
sbb
cmc
inc
jne
je
je
daa
es
xor
loop
test
mov
jae
test
jge
sub
ficoml
mov
inc
aam
popf
pop
inc
adc
loopne
dec
cwtl
push
popf
aaa
cwtl
or
iret
sub
push
out
addr16
data16
ss
push
sub
cmpsb
shrb
addr16
jg
mov
movsl
xor
and
jnp
out
lods
or
out
push
mov
push
mul
repnz
cmp
xor
push
add
or
outsl
mov
testb
js
in
sbb
nop
pop
or
push
sub
fucomp
int
pop
iret
add
xor
dec
push
pushf
bound
sbb
or
icebp
lods
mov
inc
pop
jle
dec
jae
pop
imul
int
lods
aas
frstor
mov
ds
lock
pop
ja
mov
inc
mov
stc
xchg
jns
add
addr16
cs
xchg
pop
xor
pop
inc
mov
sbb
sub
lds
mov
jecxz
add
mov
outsb
sbb
sub
bound
arpl
stos
testb
mov
int
daa
sbb
jnp
arpl
fisttps
ljmp
add
pop
cltd
addr16
lret
aad
movb
lea
mov
jmp
pushf
movl
jmp
pusha
nop
call
jmp
call
push
xchg
mov
pushf
pushl
ret
pusha
mov
not
pushf
mov
pop
push
lea
jmp
xor
out
bt
xor
cmp
cmc
xor
jmp
xchg
pop
pushf
movsbw
lea
jb
mov
call
xchg
jmp
lea
pushf
mov
push
xchg
pushl
pushf
pushf
pushl
ret
movb
mov
mov
lea
pushf
xchg
pushl
push
pushl
ret
mov
jmp
push
pushl
mov
pushf
call
lea
mov
pushf
pushf
pushl
mov
push
pushl
jmp
xchg
mov
pushl
ret
lea
jne
lea
pusha
jmp
pushf
xchg
bswap
mov
push
pushf
pusha
pushf
mov
push
lea
mov
pushl
mov
xchg
pushf
pushf
push
pushl
ret
movsbw
xchg
nop
mov
not
pop
bswap
pusha
xchg
call
lea
push
call
call
pusha
mov
xchg
not
pop
not
mov
pusha
pushf
pushl
lea
call
movb
mov
mov
pushf
call
mov
lea
jne
lea
call
call
jmp
lea
push
xchg
pushl
pushl
ret
xchg
pushf
pusha
jmp
push
movb
nop
movl
push
xchg
not
pushf
not
movsbw
mov
jmp
push
nop
pushl
pusha
call
jmp
pusha
mov
jmp
jmp
movsbl
movsbw
mov
push
jmp
xchg
movb
pushl
ret
call
mov
push
pushf
mov
lea
mov
mov
mov
pushl
ret
mov
pushf
movb
pushf
lea
pushf
pushf
pushl
pushl
ret
push
nop
pushl
push
xchg
pusha
cwtl
push
mov
push
lea
pushf
jmp
call
jmp
mov
pushf
mov
call
jmp
call
xchg
lea
jmp
pushf
nop
not
bswap
mov
push
xchg
not
mov
xchg
sete
lea
mov
pushf
jmp
push
call
pusha
pusha
lea
jp
mov
pushf
push
lea
call
call
bswap
nop
not
bswap
pop
push
push
call
push
pushl
xchg
push
lea
jo
push
seta
mov
push
mov
pusha
lea
jmp
jmp
mov
jmp
test
lods
jne
mov
dec
test
jmp
fnstenv
cld
xor
pusha
sub
sub
pop
sub
rorb
popa
rorl
xchg
mov
sub
jge
cld
shll
or
shl
gs
decl
and
in
std
addb
adc
adc
or
aam
or
mov
mov
movsb
add
ljmp
xlat
aas
dec
sbb
stc
lds
cmp
leave
test
pop
mov
add
ljmp
xchg
jo
mov
ss
mov
pop
xchg
mov
push
sub
or
xor
repz
cmpsb
je
shll
gs
mov
and
aas
popa
mov
sub
xchg
xchg
shll
loop
fldt
call
sbb
sub
aad
xchg
jne
push
das
jl
test
ret
mov
or
data16
sub
xor
js
repnz
adc
jno
sub
hlt
push
jle
in
cld
jo
icebp
inc
iret
stos
cli
jb
hlt
clc
jnp
addb
pop
mov
fistpl
fldl
mov
jp
push
xor
mov
push
shlb
pop
or
inc
shlb
jno
dec
sbb
dec
pop
bound
jne
repnz
shrb
cmpsl
push
and
push
xchg
shlb
dec
shl
add
sarb
fnstsw
sahf
stc
sahf
mov
fwait
ret
sti
and
mov
inc
adc
ret
ja
pop
jecxz
lcall
popf
sar
inc
nop
cmp
adc
push
push
in
popa
fcoml
rolb
bound
sbb
dec
sti
push
xchg
test
mov
push
icebp
frstor
lcall
pop
bound
fcmove
pop
std
dec
jp
out
fs
lods
sbb
aam
mov
in
inc
ret
or
data16
dec
ljmp
jb
pop
push
fwait
jns
xlat
push
lahf
add
mov
aad
in
add
ret
add
popf
sar
pop
adc
dec
je
push
and
push
fdivrs
in
lods
int3
cmp
sub
jae
sub
mov
inc
add
lcall
std
pop
stos
lock
sahf
push
sub
out
sub
sub
sub
aaa
cmp
or
add
push
sti
lea
stos
dec
jb
add
mov
int3
loop
cmp
mov
addps
dec
pop
outsl
jne
cs
inc
xor
inc
fsubrl
addl
sti
inc
mov
sub
and
loopne
pushf
mov
xchg
fists
xchg
int3
xor
in
lcall
ds
sbb
ficoms
and
add
mov
add
in
mov
jmp
out
je
mov
push
push
je
or
dec
lea
push
push
mov
lret
pop
mov
test
jle
repz
add
stos
adc
cld
push
jmp
adc
aam
mov
in
adc
out
mov
lods
pop
ds
mov
lods
movsb
or
sub
incl
xchg
xor
loope
inc
xor
pop
js
push
enter
inc
repnz
ja
fstpl
jmp
jecxz
jl
cmp
loope
cmp
test
test
xor
leave
fs
pop
in
je
lock
and
test
stos
fs
leave
pop
xor
cwtl
jno
out
std
add
clc
mov
inc
gs
push
mov
adc
or
ret
or
rcrb
xor
and
add
fcomp
mov
dec
dec
mov
test
and
add
dec
popa
dec
inc
mov
std
dec
sarb
push
les
fidivrs
adc
mov
sbb
roll
fs
out
and
cli
xchg
pusha
dec
pushf
mov
clc
out
fs
clc
mov
add
cmp
mov
xor
or
pushl
push
test
cmpsb
jl
dec
test
mov
fisubrl
aas
rcrl
std
lret
mov
mov
sub
xchg
lret
jb
mov
and
pop
pop
cmp
std
inc
je
std
mov
sti
shll
inc
add
jbe
mov
repz
pusha
ss
xchg
ficoms
pop
add
repz
fstp
add
or
add
pop
cld
jle
xchg
loope
mov
enter
insb
cmpsb
jo
pop
and
and
dec
outsl
fnsave
sbb
lods
js
ret
scas
lds
test
mov
inc
add
loopne
leave
dec
mov
mov
inc
movsb
xchg
cld
xor
add
les
fnsave
pop
push
sub
rcrb
sbb
sub
aas
fistl
js
inc
sbb
fwait
or
cmp
addl
add
jge
mov
loopne
pop
test
jne
subb
decb
and
add
mov
ret
rorl
push
dec
or
pop
push
mov
andb
lds
cld
sub
ljmp
pop
mov
mov
jmp
bswap
not
bswap
nop
push
call
call
pusha
call
pusha
movb
nop
push
xchg
pushf
mov
pusha
call
pop
mov
push
xchg
pushf
jmp
xchg
mov
mov
push
lea
jmp
call
xchg
movb
push
pushl
ret
pushf
mov
pushl
lea
jmp
bswap
not
pushf
mov
movl
pusha
call
bswap
lea
pushf
mov
jmp
call
jno
add
rcll
mov
inc
rorb
jmp
addr16
push
addr16
mov
rcrb
addl
sub
push
subl
and
lock
cmp
pop
sub
sub
lahf
xchg
pop
loop
mov
add
sub
dec
mov
inc
negl
push
sub
mov
push
pop
inc
pop
and
shll
adc
aam
cmpsb
add
mov
pop
aas
aas
jne
cmpsb
shlb
adc
fwait
bound
pusha
sub
push
mov
add
push
fisttps
fisttpl
lret
aam
scas
xchg
pop
push
mov
dec
call
cmc
add
daa
dec
sbb
push
aam
outsl
test
hlt
in
int3
inc
lret
add
stos
iret
xor
push
fstps
add
adc
sbb
lcall
subl
dec
and
std
mov
or
lcall
jb
adc
aaa
jl
sbb
es
hlt
sbb
cmp
jge
hlt
lcall
lea
sub
mov
fnstcw
sarb
iret
push
cli
ret
xchg
iret
je
out
cmpb
jge
sub
fwait
test
outsb
dec
dec
mov
pop
jo
xor
add
mov
popa
adc
jg
hlt
rorl
add
xor
sbb
sub
ret
xor
ds
adc
mov
cmpb
xchg
xchg
push
jge
imul
pop
fsubrs
xchg
jl
adc
cmpsb
addr16
mov
lea
sbb
push
mov
lea
not
setp
pop
mov
pushl
lea
je
push
pushf
mov
push
lea
je
lea
call
pushf
mov
nop
mov
pushf
pusha
push
mov
not
movzbw
bswap
not
mov
pushl
lea
jge
pusha
lea
jmp
pushf
xchg
call
pusha
jmp
call
pusha
pushf
pushf
xchg
mov
jmp
mov
pushf
push
pusha
mov
pushf
pushf
lea
call
movb
mov
not
pushl
pop
mov
mov
mov
pushf
jmp
and
cld
push
frstor
rclb
not
push
lahf
mov
pusha
call
movb
xchg
push
pusha
pushf
pushl
ret
push
xchg
pushf
pushl
pushl
ret
lea
movb
jmp
xchg
push
push
pushf
pushl
ret
call
pushf
xchg
pop
movsbw
mov
movzbw
mov
jmp
push
pushf
nop
pushf
mov
movb
mov
pushl
pushf
pushf
lea
movb
movw
jmp
pushl
pushf
call
push
mov
push
mov
call
xchg
pushf
movb
pushl
ret
push
pushf
lea
jmp
push
pushf
push
nop
pusha
jmp
lea
nop
call
movsbl
jmp
mov
bswap
call
mov
push
pusha
mov
call
movl
call
nop
movzbl
pusha
mov
jmp
push
mov
bswap
setg
pushf
mov
mov
call
pushl
call
pushf
call
push
movsbw
nop
call
pushf
lea
pushf
call
mov
jmp
lea
call
or
mov
xor
nop
iret
add
icebp
jne
push
dec
and
repnz
pop
adc
add
dec
ja
dec
jns
out
mov
mov
inc
dec
cmp
jne
fnsave
cmp
fidivs
test
mov
xchg
pusha
shl
jae
mov
mov
mov
insb
pop
imul
add
pop
sbb
mov
int
int3
fidivrs
dec
cwtl
scas
pop
xchg
push
cs
repnz
jb
inc
and
jo
mov
enter
inc
pop
rclb
mov
imul
mov
push
and
daa
and
lea
arpl
or
clc
ret
jecxz
imul
into
idivl
gs
pop
mov
dec
and
push
jl
push
mov
in
xchg
insb
inc
test
mov
xor
adc
push
dec
mov
dec
jnp
out
dec
scas
clc
inc
or
imul
or
hlt
lods
mov
lea
test
shll
jne
sub
fwait
ret
data16
cmp
push
pop
jno
sub
or
das
das
in
sar
cmp
jb
fdiv
daa
fldcw
cmp
sti
push
sbb
adc
mov
fnsave
fdivrp
mov
push
clc
jge
repz
aam
sbb
cmc
pop
es
mov
arpl
or
andb
std
inc
xor
xchg
aad
pop
outsl
pusha
out
sbb
push
loopne
leave
mov
js
gs
inc
out
movsb
outsl
testl
fnstsw
xor
mov
cmc
sbb
mov
xchg
pop
and
cmpsl
xor
jge
sbb
or
imul
test
lret
dec
jns
loopne
ss
or
jno
and
xor
imul
ds
inc
test
or
pop
iret
fadds
hlt
push
ljmp
mov
adcb
js
mov
orl
or
add
mov
stc
popa
lods
cmpsl
push
bound
shr
in
push
stos
aas
adc
mov
in
movzwl
data16
fmull
sub
lret
stos
jne
in
mov
pop
xchg
test
sub
nop
lds
jno
aas
stos
mov
dec
dec
fs
vpunpcklbw
aaa
add
pushf
cld
mov
mov
cmp
xor
pop
pop
nop
in
and
stos
pop
movsb
jb
dec
icebp
pop
mov
mov
add
in
scas
stc
inc
push
add
je
jbe
clc
incl
jecxz
das
test
dec
adc
dec
cli
lret
lock
cmp
imul
push
aas
sbb
add
lahf
push
xchg
jbe
and
out
clc
mov
mov
sbb
es
std
test
or
std
push
mov
jle
pop
sbb
sub
hlt
add
stc
sar
pop
or
push
jmp
sbb
int
ss
adc
mov
aas
or
jp
rcrb
xor
imul
dec
or
dec
popf
adc
and
rclb
xchg
rorb
and
je
add
jle
mov
je
loopne
ds
out
mov
ret
adc
or
fwait
in
mov
sbb
loope
sbb
jno
loopne
cmpsl
loope
int
je
js
jmp
gs
pushf
mov
fcoms
pusha
mov
call
xchg
pushf
push
push
pushl
ret
mov
mov
movb
jmp
lahf
pusha
nop
pop
mov
pusha
pushf
mov
jmp
mov
movzbl
mov
call
pusha
nop
pushf
jmp
pusha
jmp
mov
mov
pop
mov
pushf
call
mov
movw
pushf
pushl
lea
pushf
movl
xchg
movb
pushl
pushl
ret
pushf
lea
mov
push
xchg
pushl
pushl
movl
pushf
pushl
ret
call
mov
push
lea
call
pushf
movsbw
movzbw
nop
call
xchg
movb
mov
mov
pushl
ret
pusha
call
not
pushf
seto
nop
jmp
mov
pop
movsbw
jmp
xchg
pushf
pushf
pushl
ret
mov
pushl
lea
push
pushf
pushf
movw
pushl
ret
pusha
mov
call
pusha
movzbl
nop
pusha
mov
movw
pushf
jmp
pushf
xchg
pushf
pushl
ret
bswap
not
call
pusha
call
mov
not
mov
mov
mov
call
jmp
nop
jp
cwtl
pop
push
call
call
bswap
mov
movzbw
lea
jmp
pushf
movb
xchg
jmp
push
pushf
jmp
lea
push
movb
xchg
movw
pushl
ret
call
lea
movb
pushf
pushl
call
pusha
movb
movl
pushf
call
nop
jmp
jmp
pusha
lea
bswap
nop
movzbl
mov
lea
jne
pushf
lea
pusha
pushf
mov
movw
movsbl
movzbw
pusha
mov
mov
mov
push
jmp
call
pushf
pushl
pusha
mov
jmp
lea
pop
mov
mov
pop
pushf
pushl
ret
movzbw
not
mov
mov
mov
mov
bswap
lea
pop
mov
jmp
push
jmp
movzbw
not
movsbw
mov
pushf
movzbw
pushf
lea
movzbw
mov
lea
movzbw
push
call
lea
jmp
pushf
pusha
lea
jmp
jns
mov
int
add
add
push
xchg
movl
pushl
ret
movw
mov
xchg
movb
movl
pushl
ret
mov
push
mov
jmp
call
mov
lea
jg
mov
jp
pushf
pushf
movl
lea
pushl
push
push
mov
pushl
ret
in
mov
mov
std
xchg
loope
push
pop
sub
or
cltd
mov
cmp
push
add
aas
fldcw
xor
sub
cmpsb
xchg
cmp
movsb
in
push
es
subps
mov
xchg
lods
and
pop
test
push
dec
and
sub
xor
add
cmp
mov
add
dec
ljmp
jmp
push
mov
pop
mov
lds
inc
push
sub
mov
xor
xchg
inc
rcrl
icebp
sub
pop
or
cmpsb
out
xchg
jae
xchg
cmpl
pop
sbb
rcrb
inc
or
sub
sub
dec
or
adc
adc
cmp
mov
mov
test
das
sti
sbb
sbb
lahf
imul
int3
mov
int
jmp
ss
testl
jns
xchg
push
jecxz
mov
mov
in
pusha
lods
xchg
je
stc
rcrl
ja
jns
sub
addb
jg
jno
test
lea
arpl
fiadds
jecxz
test
cld
inc
xchg
sbbl
push
mov
lds
pop
mov
fucomi
sub
inc
clc
inc
orb
push
pushf
mov
jle
pushf
fmull
fildl
inc
pop
repnz
enter
dec
pop
sti
jmp
scas
jmp
insb
inc
or
jmp
icebp
add
sbb
testb
sbb
movsb
ret
jp
xchg
sarb
sbb
dec
rcrb
mov
test
pop
jmp
ret
scas
les
mov
xchg
pushf
jge
pop
add
rcrb
fwait
cmp
push
mov
lock
mov
sub
insb
ja
mov
and
dec
jbe
lods
jno
sbb
inc
push
jg
std
inc
daa
mov
popf
pop
test
testb
test
mov
pop
mov
cmc
scas
out
jb
adc
and
fdivs
mov
dec
and
adc
adc
add
arpl
mov
sbb
fldenv
bound
push
aam
xor
mov
add
arpl
jge,pt
sahf
sbb
mov
jecxz
dec
or
push
repnz
mov
adc
adc
mov
fdivr
lret
stc
jmp
orb
iret
or
dec
and
pop
jne
out
fbld
push
hlt
sbb
mov
pop
pop
out
or
scas
cmc
or
cltd
imul
scas
imul
adc
aas
gs
push
jge
std
mov
insb
dec
out
push
push
lahf
mov
cmp
jbe
cld
test
out
ffree
popf
mov
les
sub
fstl
lcall
out
cmp
das
xchg
push
cltd
in
aas
jo
fs
in
push
adc
xor
inc
or
lods
stos
cli
lcall
inc
stc
sbb
sbb
mov
lea
mov
mov
mov
pushf
jmp
call
bswap
pop
mov
push
call
push
pusha
jmp
lea
jmp
pusha
xchg
push
pushf
push
pushl
ret
pushf
jmp
pushf
lea
movw
call
pusha
mov
mov
mov
lea
push
pushl
pushf
jmp
pusha
pushf
popl
pusha
xor
mov
xor
clc
cmp
xor
cmc
cmp
xor
pushf
stc
xorl
movb
xor
mov
test
xor
stc
xor
bt
pushl
popf
mov
pushl
ret
jmp
pop
mov
pop
cltd
pop
mov
xor
es
mov
pop
cli
ja
add
jl
pop
popf
cmp
push
fbstp
inc
jecxz
mov
popa
jb
sub
loopne
decb
inc
sbbl
lret
scas
jns
xor
iret
add
mov
mov
in
xor
mov
pop
repnz
pusha
mov
jl
shl
scas
sub
sbb
mov
jmp
and
dec
in
aas
mov
movsl
push
test
roll
dec
cmp
test
inc
leave
push
xchg
mov
xchg
inc
adc
imul
std
xchg
pop
movsl
push
push
popa
xor
and
sbb
cltd
pop
dec
into
cmc
push
ret
popf
testl
pusha
pop
aaa
pop
lods
hlt
mov
inc
add
repz
std
js
flds
jne
popa
pop
fistps
add
out
ljmp
loop
sub
lock
push
dec
add
cld
push
inc
add
inc
inc
sbb
pop
jne
lret
adc
adc
popf
stos
int
fwait
push
mov
fwait
adc
or
jecxz
lret
jg
cmpsl
cmpsl
fmul
test
shr
scas
jp
out
ds
pusha
shll
jnp
dec
jmp
cwtl
and
xchg
out
cmp
mov
xchg
nop
pop
inc
idivb
lret
mov
lock
cld
pushf
inc
imul
dec
out
rcrl
notl
rcrl
js
das
jno
xchg
dec
out
inc
pushf
or
or
cwtl
mov
filds
aam
rcrl
cmpsb
mov
ss
mov
andl
or
call
stos
push
pop
bound
bound
push
stos
inc
movsb
mov
jnp
xchg
fcmovnbe
aas
xchg
sub
xchg
pusha
dec
push
in
out
outsb
mov
jge
popa
scas
push
fstpt
cmp
addr16
push
pusha
push
stc
dec
push
inc
inc
nop
repz
fcomip
outsl
inc
push
xor
mov
cmp
cmc
loop
aaa
orl
aas
xchg
icebp
cmp
or
sbb
mov
in
std
pusha
sbb
fstp
test
cmp
movl
jmp
xchg
int3
and
into
cmp
cmp
mov
pmaxsw
inc
and
stos
jns
add
andnps
daa
push
insb
fs
bound
sbb
insl
or
int
pop
aad
scas
scas
xor
push
sub
aaa
jl
div
out
dec
mov
adc
mov
push
mov
movsl
or
jno
xor
ss
jns
dec
xor
mov
insl
mov
je
pop
mov
dec
das
inc
cmc
pop
sub
lcall
lods
cmp
movl
adc
push
cmc
mov
stos
mov
sbb
dec
into
std
push
cmpsl
add
sahf
mov
sbb
push
fldcw
bound
dec
mov
aas
pop
bound
popa
outsb
fildll
mov
lods
clc
sub
call
sbb
pop
filds
icebp
mov
xchg
dec
test
insl
fildll
sarl
imul
or
ret
std
lret
xchg
push
fwait
sub
icebp
cmp
icebp
dec
jg
sub
jbe
xor
and
outsb
mov
or
out
lea
dec
fsubrl
rcrl
xchg
xchg
cmp
mov
out
aad
nop
into
lret
mov
insb
aam
fsubrs
cmp
hlt
cs
cmpsb
push
add
add
mov
jae
and
ss
out
shll
test
xchg
mov
cli
out
mov
js
add
cwtl
test
push
loop
push
lea
mov
in
mov
pop
push
gs
ljmp
xchg
gs
lahf
and
nop
std
jnp
cmp
popf
mov
out
xchg
sub
pop
adc
pop
int3
mov
push
xchg
das
pop
aam
add
int
lock
sahf
test
sti
stc
sub
into
xor
cmpsl
jae
movsb
pop
jb
adc
mov
push
sbbb
sbb
add
lea
mov
ss
in
xor
jge
mov
mulb
mov
leave
imul
dec
fs
inc
cmpsb
sahf
data16
sbb
jl
mov
pop
pop
fcompl
push
xchg
cmp
adc
xchg
roll
int3
out
loope
cmpsl
cmp
int
leave
out
mov
pusha
bswap
movzbw
mov
jmp
jmp
call
movb
xchg
pushl
pushf
pushl
ret
jmp
bswap
movzbw
push
nop
bswap
mov
jmp
pusha
xchg
movw
pusha
movsbl
mov
jmp
pushf
nop
lea
jle
push
pushf
pusha
mov
setb
movw
movzbw
lea
mov
pushf
push
lea
call
pusha
xchg
movsbw
mov
pushf
movb
pusha
call
jmp
mov
lea
jne
xchg
jmp
xchg
movl
movb
movb
pushl
ret
pusha
pushf
call
mov
jmp
xchg
pusha
movsbw
mov
push
push
lea
pushf
mov
bswap
mov
push
mov
movb
jmp
jmp
call
lea
pusha
movw
xchg
movb
pushl
ret
call
movzbw
jmp
call
stc
sarb
adc
das
jle
mov
pop
mov
ja
hlt
push
dec
jns
push
out
mov
fstpt
add
mov
fisttps
push
jecxz,pt
mov
cmp
cmp
xchg
sti
add
aaa
js
cmp
inc
jno
or
daa
add
xor
and
cmp
mov
sbb
push
fidivrs
jb
mov
sbb
mov
push
pop
dec
loop
xchg
je
push
movsb
sub
fwait
and
arpl
lds
sub
fadd
shll
sub
lret
repz
lds
add
xchg
test
cmpsl
lock
sahf
aas
loopne
push
inc
hlt
xchg
aad
loope
mov
gs
mov
pushf
mov
movl
pusha
lea
push
xchg
mov
pushf
mov
pushl
ret
pusha
mov
pushf
lea
jmp
call
pusha
nop
pushf
jmp
jmp
mov
lea
movw
call
pop
rcrl
je
add
xchg
out
jmp
enter
inc
add
xchg
ljmp
sub
xchg
sub
movsbl
lea
nop
pushf
movzbw
mov
movb
xchg
pusha
push
mov
pushf
lea
bswap
mov
call
lea
mov
movw
pushf
pushl
ret
pushf
setle
pushf
pushf
nop
call
mov
pushf
popl
pusha
stc
xor
stc
xor
pushf
xor
test
xor
cmp
xor
cmc
bt
xor
bt
pusha
xorl
movb
clc
xor
jmp
testl
add
xchg
mov
pushl
ret
xchg
pushf
call
mov
xchg
call
xchg
pushf
mov
mov
pushl
call
mov
movsbw
movzbl
mov
jmp
push
movl
pushf
push
jmp
xchg
jmp
pushl
xchg
pushl
pushl
pushf
mov
pushl
ret
pushf
lea
jnp
push
lea
pusha
movw
mov
lea
push
movsbl
mov
pushf
call
mov
mov
lea
mov
pushf
jmp
jmp
jmp
push
jmp
mov
lea
jmp
mov
call
not
pop
mov
mov
push
mov
mov
call
movl
lea
pushf
jmp
mov
not
mov
mov
jmp
mov
call
push
movb
mov
lea
push
xchg
movw
movb
movb
mov
pushl
ret
mov
jmp
push
pushf
xchg
pop
movsbw
pushf
pushf
mov
call
xchg
xchg
nop
bswap
pop
not
call
lea
pushf
pushf
pushl
xchg
mov
movb
push
push
pushl
ret
lea
movb
mov
pop
pop
mov
lea
jno
pushf
mov
pushf
lea
pushf
jmp
pushf
call
mov
mov
pop
mov
jmp
movl
lea
jmp
mov
pushf
call
sbb
std
sar
loopne
cmc
lcall
jmp
inc
sub
push
jnp
sub
sub
cli
jl
cwtl
pop
test
test
mov
or
dec
fsts
rorl
xchg
movsb
or
jp
les
in
stos
jbe
nop
dec
andl
sahf
sbb
mov
mov
dec
jnp
shrb
pop
push
push
adc
imul
or
push
insb
sahf
jmp
or
call
push
loope
testb
push
or
cltd
call
icebp
dec
adc
and
push
push
clc
nop
xchg
adc
lock
in
jae
mov
iret
je
cwtl
mov
sub
mov
pop
in
cmp
pop
lods
notl
push
push
add
xor
jnp
in
aad
ret
jno
in
cld
sar
adc
xchg
mov
test
repnz
andb
inc
jg
sub
cltd
mov
mov
hlt
add
aas
addb
mov
jp
or
les
add
dec
cltd
lahf
add
cld
sar
mov
cltd
push
mov
push
jns
add
inc
sbb
cmp
and
mov
loope
insb
in
xchg
mov
dec
fwait
mov
push
adc
lret
fisubs
and
xchg
lret
or
xchg
pop
jge
pop
fisttpll
pop
in
jge
lods
imul
and
inc
in
jb
movsb
jmp
push
shll
sbb
lea
dec
mov
push
push
jp
popf
add
fmuls
mov
or
sahf
xor
mov
loop
int3
xchg
jne
stos
mov
shll
or
pusha
rcrb
sub
sti
push
mov
loope
mov
cltd
movsb
out
mov
sbb
push
mov
fs
cs
cmp
fwait
sbb
sti
shrb
jbe
add
cmp
cmp
xor
ficompl
out
push
movsb
sbb
mov
fisttps
shll
xchg
in
je
mov
ret
gs
jnp
pop
mov
cli
aaa
sar
mov
std
idivb
mov
fistps
fidivrl
push
fisubrl
lods
jb
pop
or
xchg
fisttpll
clc
add
sbb
xchg
pop
arpl
sar
or
mov
mov
lea
or
int
cltd
mov
adc
pop
add
add
addl
mov
jo
cmp
push
cmp
cmpsl
dec
dec
dec
sub
xlat
sbb
clc
cld
in
mov
out
push
test
xchg
fisubs
addr16
sbb
out
pop
loop
push
dec
adc
ret
mov
mov
arpl
cmp
ret
pushf
pop
dec
sbb
jbe
fs
out
and
arpl
fidivl
imul
mov
mov
gs
mov
test
scas
xchg
fsubl
xchg
jbe
push
loopne
xor
sbb
mov
sub
sub
and
push
or
or
cltd
xor
or
push
enter
adc
mov
xor
ja
push
idivl
xor
mov
popa
test
cld
test
in
mov
ss
shlb
ds
movsb
xchg
scas
or
sub
js
inc
repnz
push
lea
jp
pusha
sub
sar
incb
mov
fs
and
mov
xchg
out
dec
pop
fsubrl
inc
adc
orl
and
in
outsb
pop
ja
call
daa
pop
push
sub
xchg
push
mov
push
sub
rolb
sbb
imul
sub
inc
repnz
fstps
stos
xor
push
lods
movsl
jnp
mov
or
push
popf
pop
adc
enter
and
dec
dec
jb
inc
xlat
daa
cmc
xor
mov
addr16
adc
push
lcall
insb
adcl
adcb
inc
push
loopne
pop
sbbl
pop
lcall
pop
xor
fwait
lahf
jge
xchg
xor
inc
adc
xor
ss
je
loopne
imul
push
mov
shlb
and
in
xchg
movsl
mov
mov
lcall
loope
push
dec
mov
push
mov
js
xor
xchg
lods
lods
lea
dec
shrb
fbld
test
jg
add
push
xchg
fs
xchg
push
jmp
xchg
lea
jp
push
mov
mov
pusha
jmp
bswap
nop
call
nop
pusha
xchg
mov
setnp
lea
not
mov
push
pushl
jmp
pusha
movw
pusha
nop
call
xchg
setne
mov
call
lea
ja
pusha
pusha
lea
mov
lea
je
pushf
pusha
mov
pop
mov
bswap
push
mov
mov
pusha
mov
call
call
lea
lea
ja
pusha
xchg
pushf
pusha
push
push
pushl
ret
jmp
mov
lea
jle
pusha
lea
mov
pushf
push
mov
push
movw
lea
call
call
lea
mov
push
mov
call
call
push
nop
pusha
xchg
call
pusha
call
nop
pusha
movb
xchg
movw
jmp
push
xchg
mov
pushf
pushf
pushl
ret
xchg
pushf
call
movzbl
bswap
mov
pushf
pusha
xchg
push
pushl
pushf
movb
xchg
call
jmp
push
pushl
pushf
xchg
push
pushl
ret
mov
mov
call
lea
jmp
mov
pushf
mov
jmp
jmp
movb
movb
xchg
mov
movb
mov
pushl
ret
pushl
pushf
pushf
xchg
call
mov
not
pop
bswap
pop
mov
pushl
jmp
lea
pusha
pushl
ret
lea
mov
lea
jge
push
xchg
mov
pushf
mov
pushl
ret
nop
call
mov
test
push
int
out
aad
and
pop
mov
sub
scas
push
jb,pn
sti
test
insb
bound
adc
jge
sub
mov
lods
pop
mov
add
insl
mov
sbb
cmc
mov
dec
mov
rclb
mov
leave
adc
xchg
ficompl
adc
push
inc
pop
cltd
jnp
and
pop
fucom
sbb
pop
dec
xchg
fcoml
pop
inc
adc
jge
mov
lret
sub
std
mov
sbb
repz
mov
fidivl
loope
jl
jo
sbb
popf
and
data16
sub
addr16
cmp
inc
add
add
inc
mov
ja
sar
hlt
aas
idivb
test
add
and
mov
pop
or
sbb
inc
inc
gs
mov
cmp
push
pop
in
inc
cmpsl
test
xlat
pop
lcall
sub
xor
lea
lock
out
xchg
cwtl
daa
pushf
cmpsw
mov
jmp
mov
sbb
shl
in
loope
fdivs
inc
jae
xchg
mov
popf
mov
ds
ljmp
loop
dec
dec
push
and
ds
pop
es
cmpsb
xchg
or
sbb
pop
fidivrs
jno
inc
iret
scas
out
lret
push
mov
loope
pop
hlt
sar
ss
movsb
jae
push
jnp
sbbb
mov
shlb
pop
sahf
add
add
xchg
adc
into
or
add
scas
cmp
sar
add
outsb
mov
stos
push
jae
clc
push
xor
fwait
pop
pusha
out
insl
or
in
inc
in
xor
dec
adc
xor
js
ds
test
ret
inc
test
movsl
and
sub
push
lods
ja
aad
mov
cmpsl
sub
jnp
inc
into
push
dec
add
lret
dec
add
shlb
aam
cli
call
fisubl
adc
fcom
les
push
sub
out
push
sbb
jecxz
dec
pop
lock
lods
cmpb
dec
push
scas
mov
rorl
pop
out
or
and
jo
cmpsb
dec
pop
push
hlt
xchg
mov
call
scas
dec
xchg
pushf
ret
push
fwait
hlt
inc
aad
popf
jae
cmp
mov
out
aaa
fldt
mov
dec
add
add
xor
sbb
addl
push
mov
loopne
cli
movb
incl
mov
movsb
outsl
adc
gs
pop
in
sbb
filds
add
scas
cwtl
in
adc
mov
xlat
mov
adc
fs
sub
xchg
xchg
inc
les
out
mov
int
xchg
enter
imul
repnz
cmp
ja
loop
aam
sub
cmp
xlat
fwait
es
or
int
adc
lock
mov
mov
dec
dec
jecxz
mov
xchg
std
mul
cmp
or
out
rorb
arpl
test
lahf
outsb
lcall
aam
cmp
pop
add
into
xchg
or
loop
pusha
and
sub
mov
inc
notb
cwtl
sub
outsl
push
frstor
ret
xor
bound
mov
xchg
xchg
movsb
sub
pop
jg
or
ficompl
sbb
push
popa
xchg
push
jmp
mov
cmpsb
pushf
lret
jo
mov
mov
int
jno
iret
adc
sbb
stos
push
lcall
clc
dec
cli
cmp
std
sbb
cli
les
pop
jno,pt
andb
cmp
adc
cmp
xchg
jb
dec
pusha
rcrl
loop
cltd
cmp
jle
or
lods
or
jno
cwtl
mov
cmpsl
push
mov
cltd
cmp
rcl
fs
xchg
int
push
cmpsl
push
outsl
mov
adc
add
in
xchg
idivl
jmp
shl
clc
scas
fcmovbe
or
mov
cld
enter
loop
push
dec
movsb
repz
hlt
inc
fs
sbb
dec
mov
into
sub
sub
xor
mov
inc
mov
je
sub
dec
jo
iret
fs
out
and
in
mov
dec
and
sbb
test
subl
pop
jl
loopne
stc
lods
pusha
lea
pusha
ret
or
lea
outsl
push
dec
pop
shrb
mov
out
lods
adc
mulps
cmp
cmpsb
pop
inc
lods
jns
and
inc
pop
xor
fwait
cwtl
cltd
inc
xchg
jne
mov
je
cmpsl
add
add
sbb
cld
sub
inc
stc
push
out
cmc
fbld
inc
and
jg
addb
add
mov
pushl
pusha
mov
bswap
mov
jmp
push
pusha
pushf
xchg
lea
ja
push
pushf
mov
lea
mov
jmp
movb
jmp
bswap
jmp
xchg
movb
movb
movb
pushl
ret
pushf
lea
movb
push
xchg
pushf
movw
movw
pushl
ret
mov
mov
mov
lea
jmp
lea
jg
pusha
xchg
pushl
pusha
pushl
ret
mov
nop
movb
movb
call
lea
lea
jg
mov
pushf
jmp
mov
pushf
jmp
movl
call
push
pushf
lea
jmp
pushf
call
pushf
jmp
push
mov
jmp
movl
pushl
lea
jmp
movw
nop
pushf
jmp
push
nop
pushf
pushl
xchg
jmp
jmp
mov
pusha
not
bswap
mov
call
and
adc
sar
pop
pop
mov
push
and
mov
jl
arpl
cmp
or
jbe
mov
adc
push
mov
mov
dec
sub
into
fmulp
and
add
out
aad
xor
add
xchg
cli
sahf
push
movsb
in
xlat
pop
and
and
sbb
mov
outsl
js
mov
dec
iret
mov
imul
mov
in
and
dec
ret
fs
ret
adc
xchg
fldt
repnz
cmp
sub
push
insl
cmp
outsl
das
dec
jle
fistl
adc
inc
fwait
test
popf
jns
jmp
insl
and
inc
add
jb
sar
test
jbe
jmp
xchg
scas
jne
push
fimull
sub
fstp
jge
pushf
pop
add
jb
or
out
push
inc
mov
clc
push
mov
add
imul
popa
sub
aas
fmuls
test
addb
mov
lods
lcall
cmpsl
testb
mov
mov
dec
mov
fists
or
jo
cli
shll
jle
push
ror
mov
shrb
fsubrl
mov
call
xor
jl
add
clc
jmp
lret
fs
add
les
ds
mov
bound
pop
xlat
sbb
cmp
mov
jns
jo
xchg
scas
cmc
inc
mov
xchg
cmpsb
add
mov
cmpsb
cmpl
and
ljmp
out
pop
or
hlt
pusha
out
hlt
or
adc
lds
add
sahf
icebp
mov
scas
and
cmp
mov
clc
sarl
xchg
mov
xor
inc
negl
push
jo
jge
add
pushf
add
add
push
inc
pop
leave
pop
ds
cwtl
sbb
push
dec
repnz
jmp
push
sarb
int3
pusha
subb
sar
inc
mov
dec
sub
js
scas
data16
adc
sub
xchg
xchg
sub
push
stc
inc
repnz
cmp
hlt
test
xlat
xchg
sbb
jp
push
jge
lods
sub
and
ret
mov
mov
push
pop
ja
jbe
and
adc
bnd
fnstenv
movsb
jno
cltd
ljmp
cmp
std
or
adc
lret
push
push
pop
cmpsl
push
xor
sbb
jecxz
lea
mov
xor
and
push
xchg
sbb
ja
xor
lock
inc
push
sub
pop
movzbl
test
xor
into
pop
inc
and
lods
mov
mov
push
sub
xchg
sbb
insb
lock
cld
push
pusha
sub
cmpl
fsubrl
dec
xor
jecxz
xchg
fnstsw
fdiv
lcallw
add
nop
jb
sub
mov
gs
cltd
andl
push
pushf
or
ficoms
data16
loop
nop
mov
scas
mov
sbb
inc
push
cmpsl
repnz
xchg
daa
ds
dec
pop
pop
iret
adc
movsb
repz
jbe
xor
push
or
popa
scas
dec
xchg
sbb
jnp
mov
cmp
push
mov
nop
pushf
jbe
xchg
cmp
insl
adc
dec
xor
repz
dec
test
adcl
lods
or
out
inc
mov
in
inc
scas
jl
xor
cmp
cmp
xchg
jne
lret
dec
repnz
mov
mov
push
sbb
pop
dec
insl
adc
fs
pop
lahf
pop
xchg
enter
aaa
pop
addr16
or
mov
mov
cmp
inc
cmp
xchg
movsb
or
outsb
xor
or
and
dec
mov
mov
psubsb
dec
and
pushf
jns
mov
in
loop
ljmp
xor
jae
cld
test
rcr
shll
mov
xor
jecxz
xor
pop
ffree
in
xor
dec
sbb
cmp
cmp
pop
sahf
imul
stos
pop
xor
xchg
dec
std
test
mov
loop
lods
imul
sbb
jmp
inc
adc
insb
pop
stos
dec
xchg
xor
lods
aaa
js
insb
lret
or
in
dec
mov
pop
sub
dec
or
scas
insb
in
jg
xchg
pusha
fimuls
or
jb
cmc
sbbl
out
data16
push
jno
inc
icebp
cs
mov
mov
popf
xchg
call
xchg
push
pushf
movb
pushl
ret
mov
mov
call
push
mov
xchg
lea
pushl
movsbw
pushf
mov
bswap
pop
movzbl
not
mov
lea
bswap
push
mov
call
xchg
push
pushf
pushl
ret
out
aaa
mov
scas
cmp
mov
mov
push
mov
lea
pushf
push
call
push
pushf
popl
jmp
xchg
mov
pusha
push
pushl
ret
pusha
sete
movzbw
nop
call
pushf
lea
movsbw
mov
mov
pusha
mov
mov
xchg
movb
push
pushf
xchg
call
call
movzbw
push
bswap
pop
nop
movsbw
movzbw
not
push
bswap
mov
mov
movsbl
pushf
call
pushf
pusha
lea
lea
jns
push
mov
jmp
call
push
movw
pushf
nop
jmp
pusha
jmp
bswap
mov
pushf
push
mov
call
lea
jmp
push
jmp
jmp
call
mov
pushf
movb
call
pushf
pusha
nop
pusha
jmp
lea
jne
pusha
movw
xchg
pusha
mov
movl
call
jmp
lea
pushf
push
pushl
xchg
movb
pushl
ret
mov
mov
mov
pushf
call
lahf
not
mov
jmp
push
xchg
movb
pusha
call
movw
lea
je
push
xchg
movl
jmp
nop
call
pushf
movw
xchg
movb
mov
movb
pushf
pushl
ret
pushf
movb
mov
jmp
xchg
lea
mov
pushf
call
lea
lock
orb
inc
xor
xlat
in
add
jmp
in
addb
xchg
test
inc
incl
push
and
pusha
pushl
pushl
ret
movw
lea
movb
mov
xchg
mov
movb
pushl
ret
xchg
jmp
lahf
lea
mov
pushf
push
call
lea
movzbw
pop
setle
mov
pop
mov
mov
pushf
push
push
pushl
ret
pushf
xchg
mov
pushf
pusha
pushl
ret
mov
mov
movb
lea
jmp
lea
mov
pushl
xchg
movb
movb
mov
mov
pushl
ret
mov
pushl
call
pop
popa
push
or
add
outsl
aaa
add
mov
pushf
xchg
pushl
mov
pushf
movb
pushl
ret
jmp
movsbl
movzbw
push
nop
pop
mov
push
jmp
pusha
mov
pushf
call
call
jmp
jmp
xchg
pushf
push
pushf
mov
pushl
ret
mov
pushf
xchg
pusha
xchg
pop
movzbl
bswap
mov
pushf
pushl
call
mov
movb
pushf
xchg
pushl
mov
push
lea
lahf
xchg
mov
movsbw
call
xchg
movb
mov
mov
pushl
ret
pushf
movb
mov
mov
push
lea
mov
push
mov
pusha
movsbw
movzbl
mov
push
mov
push
jmp
mov
mov
mov
pusha
lea
jne
pushf
mov
lea
lea
jb
pushf
movb
pushf
xchg
movw
pusha
pushf
movw
pushl
ret
pop
xchg
push
jmp
mov
mov
call
pusha
mov
pusha
nop
pushf
call
scas
sub
pop
pushf
mov
cwtl
cwtl
mov
mov
pushl
pushf
pushf
mov
mov
call
lea
jmp
push
lea
jmp
lea
lea
mov
push
call
jne
mov
sar
mov
xor
add
loop
stos
out
add
rcrl
loopne
cmp
inc
call
mov
push
out
add
enter
cli
cs
lds
arpl
je
jnp
ficoml
mov
xchg
sbb
jne
sti
adc
sbb
data16
jmp
cmp
les
jecxz
mov
sahf
inc
leave
dec
pop
push
sti
fxch
xchg
mov
cmovbe
jp
inc
movsl
sub
mov
pushf
mov
lds
gs
iret
ficompl
mov
xchg
addr16
sbb
movsb
xchg
bound
push
sbb
mov
outsb
scas
lods
pop
mov
push
ja
out
adc
dec
dec
das
and
movsl
mov
jb
shrb
js
jle
push
or
cmp
fs
inc
fstps
loope
pushf
mov
xchg
xor
std
loop
xchg
push
mov
xor
lods
push
cltd
cmp
shlb
insl
push
fdivp
dec
stc
mov
sbb
lea
daa
nop
outsl
stos
divl
jmp
or
jl
bswap
lahf
pusha
lea
jo
nop
mov
lahf
lea
call
mov
jmp
call
movb
lea
pushl
xchg
pushf
movb
movb
pushl
ret
movl
pushf
mov
jmp
xchg
mov
movb
mov
pushl
ret
pushf
movzbw
setge
mov
movw
xchg
mov
call
xchg
pushf
movsbw
mov
push
mov
mov
jmp
xchg
pusha
mov
movzbw
xchg
movzbl
mov
bswap
jmp
mov
pusha
lea
lea
jno
mov
not
mov
pushf
mov
call
movb
call
mov
movzbw
mov
pusha
mov
mov
pushf
call
pusha
call
jmp
fneni(8087
mov
push
pushf
xchg
push
pushf
pusha
pushf
pushl
ret
pushl
mov
jmp
pusha
pushf
pusha
lea
call
pushf
xchg
pushf
pushl
ret
bswap
not
mov
movb
pushf
mov
pushf
mov
pushf
call
mov
pusha
pusha
mov
mov
movzbw
mov
mov
pushf
call
mov
lea
pushf
pushl
mov
movzbw
lahf
cwtl
mov
push
pushf
pushf
movb
mov
pusha
lea
call
call
mov
jmp
lea
pushf
jmp
pushf
lea
push
mov
pushl
ret
pusha
call
pushf
nop
call
call
pusha
movw
push
xchg
pushf
movb
pushl
ret
call
mov
nop
jmp
xchg
pushf
mov
pushf
jmp
jmp
lea
jmp
xchg
pusha
pushl
ret
push
pusha
push
pusha
movb
lea
jmp
mov
xchg
mov
mov
mov
movw
pushl
ret
call
pushf
mov
pushf
lea
call
push
pushl
nop
pushf
pushl
mov
cwtl
mov
not
mov
pushf
lea
pusha
call
push
pushf
movw
lea
ja
nop
call
xchg
pushf
pushl
ret
lea
jnp
push
push
nop
movb
mov
movsbw
pushf
mov
movb
pusha
pushf
pushf
lea
push
pushf
mov
movsbw
call
mov
mov
lea
pushf
jmp
jmp
pusha
mov
xchg
movsbw
bswap
cwtl
mov
jmp
lea
call
mov
bswap
call
mov
movl
nop
movsbw
pushf
mov
lea
xchg
jmp
xchg
lea
movzbw
mov
lea
mov
pushf
push
lea
call
pusha
nop
pushf
xchg
mov
push
mov
movsbw
mov
call
push
lea
mov
push
xchg
push
pushl
ret
mov
xorl
jmp
pop
or
mov
mov
pushf
pusha
nop
mov
mov
movzbl
pushf
bswap
mov
jmp
pushf
push
lea
pushl
jmp
xchg
sete
movsbw
movsbl
pushf
mov
pushf
mov
jmp
pushf
movw
xchg
call
mov
movzbw
bswap
mov
mov
movb
lea
js
pusha
mov
movl
call
push
xchg
pushf
pushl
pushf
pushf
pushl
ret
bswap
movzbw
mov
jmp
jmp
movzbw
mov
lea
jbe
push
push
pusha
xchg
pushf
pushf
pushf
mov
movsbw
mov
lea
mov
jmp
pushf
pushf
xchg
call
pushf
xchg
not
movzbw
lea
js
pusha
mov
mov
pushf
push
lea
pushf
mov
jmp
pusha
jmp
pushf
xchg
push
movb
pushl
ret
movb
mov
mov
push
pushl
lea
jmp
mov
call
pushf
pushl
lea
pushf
xchg
mov
movb
mov
pushl
ret
jmp
mov
movzbw
mov
jmp
mov
jmp
lea
pushf
xchg
movw
movb
pushf
push
pushl
ret
jmp
mov
jmp
push
pushf
push
xchg
pushf
movb
push
pushl
ret
lea
call
pushf
mov
movb
pushf
pushl
mov
lea
movw
movl
pusha
xchg
mov
pushl
ret
xchg
movb
pushl
ret
call
lea
jmp
push
mov
nop
pushf
pushf
xchg
mov
push
not
mov
pusha
movb
pushl
lea
pushf
mov
lea
ja
mov
setae
mov
jmp
movb
jmp
movw
mov
push
pushf
jmp
mov
xchg
pushf
pusha
pushf
push
pushl
ret
jmp
jmp
pushf
jmp
pushf
movb
jmp
pusha
nop
push
mov
call
call
lea
movb
xchg
movb
pushf
push
movw
pushl
ret
mov
lea
push
push
pusha
mov
mov
setne
jmp
cwtl
mov
call
pushf
jmp
jmp
jmp
mov
pushf
jmp
jmp
movsbl
mov
movw
call
movzbw
nop
call
pushf
mov
call
mov
pushl
lea
pusha
xchg
push
movb
pushf
pushl
ret
mov
jmp
xchg
pushf
pushl
ret
call
movzbw
lea
mov
movw
mov
movb
mov
mov
jmp
pushf
mov
lea
call
mov
pushl
movb
lea
call
pushf
nop
pushf
push
pushl
xchg
lea
mov
pushf
lea
mov
movl
mov
lea
mov
pusha
lea
jp
push
mov
movzbl
movsbw
pop
mov
pushf
pushf
mov
pusha
mov
mov
lea
push
pushf
pushf
xchg
push
pushf
movb
pushl
ret
lea
js
push
xchg
pusha
movb
pushl
ret
push
call
mov
pop
lea
mov
pop
bswap
pushf
lea
pusha
jmp
movzbl
push
nop
pushf
jmp
mov
mov
movzbw
not
mov
pushf
lea
movb
call
movw
xchg
mov
pushl
pushl
ret
mov
jmp
xchg
push
pushf
push
pushl
xchg
seto
movb
mov
movl
pushf
pushf
mov
call
pusha
xchg
jmp
movsbw
mov
pushf
xchg
pusha
call
pusha
push
pushl
lea
movb
jmp
xchg
pushl
push
pushf
movb
pushl
ret
pusha
push
pushl
nop
push
pushf
call
xchg
mov
pushf
pushf
pushl
ret
call
pushf
pushf
lea
mov
call
call
jmp
xchg
mov
push
pushl
ret
call
pushf
nop
bswap
call
mov
mov
jmp
call
jne
mov
sti
inc
shr
jns
xchg
and
fadds
pop
daa
sub
pop
nop
jne
pop
inc
or
clc
inc
xchg
aaa
into
mov
jno
adc
ljmp
imul
sub
mov
mov
sbb
mov
add
fdivr
sahf
imul
stos
mov
hlt
ror
xchg
push
and
cwtl
sbb
mov
in
xor
push
out
mov
rclb
call
incb
cld
stc
lea
adc
pop
pop
mov
mov
pop
add
jg
testl
xor
ja
movsl
xor
hlt
inc
les
add
mov
into
push
mov
jno
je
das
sub
scas
xor
fdivrl
push
int
pop
push
or
arpl
cmpsl
jecxz
cmc
sahf
int
ret
mov
xchg
pop
sbbb
cltd
jle
sub
mov
imul
adc
mov
xchg
fwait
push
cmpsl
mov
lods
add
imul
movsb
cwtl
pop
push
cmp
fs
rcrl
push
sbb
cmpsl
inc
jmp
ret
scas
scas
mov
push
adcl
xor
leave
dec
or
mov
push
pop
xchg
or
stos
xor
cmp
mov
adc
mov
testb
sub
or
mov
js
adc
adc
xchg
imul
mov
ljmp
pusha
sub
xchg
enter
adc
popf
xchg
fs
cwtl
pop
fiadds
xor
out
jo
daa
push
mov
jbe
rol
pop
outsb
cmp
mov
or
cmc
cs
in
push
test
cmp
fsts
sub
sbb
out
popf
jmp
repnz
jno
leave
jo
or
daa
push
mov
ja
dec
stos
mov
sbb
and
sub
jb
lret
jecxz
iret
adc
cmp
addl
addr16
dec
jecxz
push
pop
inc
dec
cmc
jne
mov
adc
xchg
mov
push
idivb
pop
push
mov
sub
sar
or
nop
leave
cmc
aaa
clc
cmc
dec
dec
push
fiadds
and
push
pop
pop
mov
orl
add
xchg
dec
les
rorl
xchg
inc
stc
pushf
mov
sbb
mov
out
or
divb
pop
mov
rclb
inc
das
divb
lahf
and
nop
adc
negl
dec
in
mov
insl
mov
mov
cmp
xor
repnz
mov
inc
cmp
cmovle
data16
clc
or
or
mov
cs
mov
pop
mov
adcb
dec
adc
push
xchg
jnp
jge
stc
pop
in
mov
jmp
mov
xchg
add
mov
add
in
push
sbb
push
jnp
mov
hlt
inc
cmp
inc
xor
pop
cmp
sbb
mov
sub
pop
test
andb
cmp
out
test
mov
mov
lea
cmc
jbe
aas
sub
ret
xor
jmp
or
rcl
sub
mov
leave
pop
rcl
shrl
inc
test
lock
or
jle
sbb
xor
jns
mov
outsb
jp
cmp
sbb
or
add
hlt
mov
sbb
mov
xchg
sub
subb
clc
xor
inc
enter
mov
test
cmp
dec
insl
push
shlb
cmc
dec
nop
sbbb
push
xlat
sti
not
cmp
mov
es
pop
cmp
inc
xchg
jp
inc
lret
jle
imul
xchg
rolb
push
cmp
imulb
pop
mov
orb
ss
movl
push
in
inc
loopne
nop
data16
icebp
cwtl
adc
ljmp
and
and
mov
mov
outsl
dec
pushf
sbb
mov
lret
fwait
leave
test
js
inc
push
iret
xchg
xor
push
sbb
fwait
cmpsb
fldl
testb
push
mov
das
mov
rorl
xor
jecxz
sbb
jl
or
ja
scas
mov
sbb
cld
dec
and
lahf
xor
cmp
mov
jb
das
mov
cmp
icebp
inc
mov
lock
repnz
push
pop
add
mov
aam
je
and
jmp
mov
in
pop
incb
xor
mov
sub
cmp
insl
mov
inc
js
mov
mov
add
sub
decl
jmp
xchg
pushf
pushl
ret
push
nop
jmp
pushf
pushf
pushl
nop
jmp
xchg
movb
pushl
ret
push
pusha
jmp
pusha
pushf
mov
call
mov
call
mov
call
mov
jmp
mov
movl
lea
pusha
mov
xchg
push
mov
pushl
ret
call
movb
lea
push
mov
bswap
mov
pushf
pushf
pushf
mov
mov
mov
call
pushf
pushl
jmp
call
ds
sar
mov
insb
lds
xchg
jae
sub
cmp
jns
add
ret
repnz
cs
xchg
scas
jne
rcl
sarl
lods
or
adc
mov
jb
int
das
aaa
jmp
mov
orl
and
ja
jb
lock
test
cmp
fildll
mov
jbe
jp
sbb
mov
xor
sub
dec
dec
stos
xor
testb
aad
fnstcw
pop
inc
inc
or
out
push
pop
aad
adc
rcl
std
dec
nop
out
test
movsl
lea
dec
xchg
lret
xor
ss
push
sbb
add
data16
iret
adc
fcom
push
ret
sub
addb
add
loop
insb
lret
stc
lods
and
add
testl
or
ljmp
dec
mov
sub
xor
sbb
cs
ds
sbb
out
dec
push
stos
jo
loope
jmp
mov
cmp
sbb
mov
mov
inc
push
push
imul
ret
in
mov
xchg
test
jmp
popa
lock
mov
test
mov
adc
aas
das
cmpsl
addr16
pop
xor
shlb
xchg
call
outsl
je
and
jge
movsb
xor
jb
inc
or
scas
cld
fs
cmp
push
sub
xchg
loope
adc
inc
mov
hlt
inc
add
icebp
xor
xchg
add
cmp
movsl
cmpsb
dec
xor
out
xor
les
out
movsb
inc
or
mov
mov
rcrb
inc
dec
std
fistpll
mov
mov
sbb
rorl
mov
ja
test
push
jnp
dec
adc
addr16
pop
mov
test
out
dec
mov
pop
jno
pop
fmul
daa
hlt
loop
imul
aaa
ljmp
fidivrs
flds
jl
arpl
sub
cmp
fwait
dec
sub
mov
ret
pop
mov
jecxz
adc
dec
fs
pop
xchg
mov
test
and
inc
lock
std
fs
enter
test
sub
sbbb
mov
das
sub
and
fadds
dec
xchg
pop
mov
cli
xorb
mov
pushf
lods
sbb
jl
sbb
lret
mov
pop
mov
xchg
in
mov
clc
mov
lahf
pushf
std
jge
mov
xor
inc
popl
pop
mov
fidivs
je
repnz
pop
add
scas
push
push
pusha
js
sub
pop
or
pop
out
aas
cltd
aaa
mov
pop
test
ja
mov
out
lock
ds
sbb
fs
xchg
xor
iret
aaa
fdivrl
add
fildll
jno
divb
mov
or
repnz
repz
and
mov
arpl
subl
sbb
xor
push
and
ret
or
push
cli
dec
cld
dec
mov
mov
mov
nop
and
pop
loope
push
cmp
xchg
or
mov
jecxz
imul
mov
stc
stos
xchg
sub
rolb
lret
xlat
sti
inc
repz
pop
ret
movsl
pop
fs
lahf
ret
jg
lods
jecxz
addr16
and
dec
ljmp
mov
mov
stos
mov
sbb
inc
jmp
sub
jge
jmp
jle
jne
jg
xchg
and
hlt
lcall
cmp
jg
out
dec
push
loope
negl
dec
in
das
xchg
imul
lods
addb
ljmp
std
sahf
mov
pusha
stos
sahf
call
inc
mov
stc
dec
mov
divb
xchg
fwait
lods
fwait
mov
icebp
mov
cmpsl
icebp
pop
cmp
dec
mov
bound
xor
sbb
je
pop
jae
inc
jbe
pusha
dec
iret
sub
or
mov
push
lock
fldenv
adcb
pop
es
mov
and
imul
add
sbbl
data16
push
iret
mov
popa
inc
repnz
dec
sbb
dec
pop
jno
sti
jns
or
add
sub
xor
sub
cltd
popf
stos
inc
mov
pop
addr16
add
in
sbb
cld
jle
lods
push
or
sar
into
xchg
lods
int3
pop
jae
fsub
ret
cmpsb
cmc
mov
push
pushf
xchg
pushf
pushl
mov
pushf
pop
mov
jmp
pop
pop
push
call
mov
xchg
movl
mov
mov
movl
pushl
ret
mov
pushf
jmp
pusha
pushf
pusha
nop
pushf
xchg
setle
jmp
pushf
pushf
popl
push
xor
stc
pushl
xor
pushf
xor
push
pushf
xorl
clc
pusha
xor
jmp
push
mov
pushf
lea
pushl
pushf
movb
xchg
pushf
pushf
pushl
ret
call
lea
jmp
pushf
mov
movb
push
pusha
xchg
jmp
lea
pusha
push
mov
movsbw
movsbw
bswap
mov
mov
lea
jae
pusha
movb
mov
call
movb
xchg
mov
pushf
movb
pushl
ret
push
pushf
movb
mov
pusha
lea
call
nop
call
jmp
call
call
lea
pusha
pusha
xchg
mov
mov
pushl
ret
pushf
mov
call
call
xchg
jmp
std
pushl
popf
push
mov
pushl
ret
xchg
mov
mov
pushl
ret
pushf
nop
pushf
mov
setle
mov
mov
call
pusha
call
pusha
mov
pushf
pusha
mov
not
cwtl
mov
pushf
call
mov
nop
mov
not
push
movsbl
pusha
mov
not
lea
bswap
mov
not
call
xchg
mov
movw
pushl
ret
xchg
movb
movl
movw
pushl
ret
or
orb
pusha
xchg
movb
push
pushl
ret
call
nop
movzbw
lea
jnp
bswap
pushf
mov
movw
call
pushf
nop
pusha
xchg
call
nop
movzbw
movsbw
lea
bswap
pop
call
not
bswap
mov
movsbw
pusha
movsbw
movzbw
lea
movw
pop
jmp
xchg
pop
mov
pusha
push
lea
call
lea
jnp
pusha
pusha
lea
mov
mov
lea
jg
push
lea
mov
movb
movw
pusha
push
mov
movw
pushf
jmp
pusha
movb
pusha
call
xchg
mov
pushl
ret
pushf
jmp
pushf
jmp
xchg
jmp
push
nop
pushf
pushf
call
mov
nop
pusha
pushl
mov
pusha
pop
pop
movzbw
mov
jmp
movb
pushf
lea
push
pushf
jmp
mov
jmp
pushf
pushf
lea
push
mov
call
mov
call
push
xchg
movsbl
mov
pushl
mov
mov
pushf
lea
pushf
jmp
movb
push
push
movl
mov
pushf
movb
lea
jmp
xchg
pusha
pusha
movb
jmp
lea
pusha
mov
movzbl
bswap
mov
push
jmp
xchg
pushf
pushl
ret
call
call
jge
pusha
pusha
mov
nop
pushf
mov
pop
pushf
not
mov
call
xchg
pusha
pushl
ret
lea
jmp
movb
push
lea
jmp
mov
mov
movw
mov
call
mov
movw
jmp
add
mov
and
jl
nop
pushf
xchg
not
jno
movzbl
mov
call
movl
xchg
pushf
pushl
ret
movzbw
nop
xchg
pop
mov
pusha
xchg
jmp
mov
pushf
lea
call
push
xchg
pushf
mov
pushl
ret
mov
movw
pushf
push
jmp
call
lea
jl
push
mov
lea
movw
pusha
pusha
movb
mov
bswap
movzbw
cwtl
mov
pushf
mov
pushf
mov
pushf
jmp
movb
lea
mov
xchg
pushf
pushl
movb
pushl
ret
lea
call
xchg
push
mov
pushf
pushf
not
mov
pushf
mov
pusha
lea
jmp
push
jmp
pusha
pusha
movb
nop
lea
jno
push
push
bswap
not
mov
pushf
call
xchg
pusha
movw
pushl
ret
call
call
lea
pusha
pushl
mov
pushf
xchg
jmp
gs
fwait
in
loope
mov
imul
push
idiv
xor
add
pop
call
add
push
jnp
sub
inc
push
cmpsl
push
xlat
addr16
cltd
sbb
movsl
or
mov
push
loope
sti
dec
jno
and
ret
les
pop
sub
cmp
pop
shlb
mov
xor
loope
dec
stc
xchg
xor
and
ret
lods
dec
rcrb
out
adc
in
push
inc
je
orl
push
xor
iret
outsb
mov
test
jae
sbb
fsubrl
stc
xlat
add
jl
xlat
outsb
cmpsl
pop
stos
jnp
mov
incl
mov
or
js
inc
ja
pop
sbb
hlt
lods
mov
roll
bnd
aas
jp
sbb
stos
je
inc
ret
int
xor
es
adc
pop
push
das
shrl
pop
xchg
loope
jbe
or
adc
mov
dec
aad
in
es
int
xor
icebp
pop
aam
mov
nop
fstl
add
ret
or
and
aam
jge
into
jb
fcomps
ret
addr16
test
fs
jg
mov
xlat
xlat
sti
aad
and
sbb
cld
cltd
insl
fldl
sub
addr16
pop
test
add
stc
inc
mov
add
mov
xchg
frstor
shrb
push
movsl
add
ss
push
mov
or
push
or
mov
loopne
pusha
lds
mov
fwait
out
aad
fdivrs
dec
mov
addr16
std
jl
addr16
ds
lock
stos
mov
aam
and
dec
xor
lock
jmp
mov
and
dec
mov
jge
xchg
rorl
pop
mov
lods
add
xor
sub
or
xchg
xlat
dec
pop
sbb
aas
ret
cmp
js
add
mov
incb
inc
xchg
sbb
cmpsl
adc
push
push
roll
js
jmp
cwtl
gs
stos
adcl
jl
loop
ljmp
pop
cli
ja
scas
xor
out
xor
cmp
out
pop
stos
adc
lea
cmpsl
dec
mov
sub
mov
ljmp
ret
sub
repnz
xlat
loope
nop
sub
xlat
mov
pop
stos
mov
pop
loope
pusha
jecxz
subl
or
es
insl
call
mov
insl
iret
cwtl
jp
js
out
jns
xchg
pop
fsubl
int
sub
icebp
lret
cmp
lahf
xorl
aam
jnp
sbb
lret
mov
jmp
mov
adc
test
pop
ja
cwtl
pop
lcall
and
cli
lds
pop
iret
out
cld
push
push
outsl
js
inc
fsubs
sbb
pop
rorl
mull
aam
xchg
sbb
aas
out
pop
sub
fisubrl
xchg
jecxz
cwtl
lret
sbb
add
or
sbbl
or
std
das
xlat
xchg
jecxz
sub
push
in
arpl
mov
andb
xor
nop
sub
clc
push
lods
add
outsb
hlt
loopne
push
push
mov
fs
sub
leave
inc
push
lar
adcb
push
testb
divb
xor
in
mov
mov
loop
lret
mov
push
lret
hlt
mov
dec
push
jecxz
movsb
push
sub
insb
shll
sti
jg
mov
outsb
sbb
mov
inc
imul
dec
repnz
nop
ja
rorl
jg
mov
imul
sub
sarb
call
dec
fwait
adc
sub
xlat
es
scas
pop
cwtl
in
jns
mov
cmp
insb
xor
fcmove
cmp
jge
fsubl
jl
add
out
js
or
pop
xchg
mov
outsb
aas
cmpb
cmp
mov
pop
mov
sbb
insb
jp
je
xor
iret
mov
hlt
inc
xchg
cmpb
popa
fs
push
mov
jno
mov
arpl
jp
mov
mov
aaa
scas
or
adc
lods
xor
sbb
fbld
jl
in
das
out
jl
imul
sub
je
inc
gs
ja
insl
push
mov
imul
jb
in
mov
shlb
add
aad
ficoms
sub
mov
jp
insl
push
push
fadds
imul
and
sub
push
push
mov
xchg
xor
lret
jmp
add
popa
das
pop
xor
out
pop
pushf
ss
pop
fisubl
sbbb
stos
pextrw
or
roll
and
ffree
xlat
mov
movb
mov
mov
movsb
std
int3
loopne
xchg
cmpsl
lahf
gs
mov
jns
push
jmp
adc
mov
in
cmp
fwait
ljmp
add
or
sbb
test
test
pop
jp
fcompl
pop
aad
mov
test
add
push
incl
clc
mov
fldcw
sbb
sahf
ljmp
ljmp
mov
jge
mov
cltd
dec
push
stc
push
xchg
mov
cli
dec
sbb
xor
mov
dec
imul
sbb
movsl
or
stc
mov
pop
push
int
pop
add
mov
mov
xchg
movsl
outsb
or
out
daa
dec
repnz
mov
jns
aad
repnz
push
mov
pop
sub
xor
lds
adc
cwtl
fisubl
decb
into
nop
push
call
test
dec
xchg
inc
or
sbb
mov
add
pop
fists
xlat
in
xchg
xchg
std
jae
mov
int
inc
xchg
arpl
xlat
adcl
rcrl
xchg
mov
jae
in
cld
leave
push
sub
fwait
imul
pop
push
pop
int3
je
adc
jge
dec
fs
xchg
jnp
push
loope
add
sti
cs
add
mov
pop
in
jns
aad
mov
mov
push
fadds
mov
xchg
cmpsb
outsb
adcb
jmp
push
push
jle
cld
test
and
sbb
arpl
add
add
add
inc
dec
jmp
in
test
outsb
or
scas
cmp
mov
jecxz
daa
stos
in
lds
outsb
cmp
lods
add
int3
fisubl
inc
cwtl
in
cs
icebp
sub
das
cld
pop
push
xchg
test
std
sub
jp
push
pop
ret
inc
rcrb
aam
iret
pushf
sub
jbe
xor
cvtdq2ps
push
push
xchg
hlt
push
test
sbb
je,pn
and
jnp
inc
xor
xchg
roll
push
dec
popf
jmp
out
lods
js
jmp
push
mov
aas
adc
mov
mov
orb
dec
jno
xor
mov
mov
jmp
inc
xlat
arpl
xchg
loopne
aas
mov
sub
jnp
scas
dec
int3
and
sbb
mov
loopne
stos
lods
movsb
sbb
dec
xchg
cmp
cli
inc
leave
imul
bound
push
stos
dec
mov
jl
mov
fidivrl
loopne
aas
add
push
gs
push
lea
pop
pop
dec
stos
cli
insl
or
rclb
pushf
mov
ja
ja
xor
sub
loopne
aas
push
mov
imul
fnstenv
int3
mov
add
jge
xor
les
push
hlt
fadds
idivl
mov
insb
lret
leave
pushf
pop
pushf
pusha
sub
mov
push
aad
lcall
xchg
call
xchg
pushl
movb
push
push
pushl
ret
mov
lea
mov
pushf
pushl
push
pushl
ret
jmp
mov
mov
xchg
movb
mov
pushl
ret
nop
jmp
movw
xchg
mov
movb
mov
pushl
ret
call
lea
pushf
jmp
xchg
lea
jp
movzbw
movzbw
movsbw
mov
push
jmp
mov
push
call
pusha
pushf
mov
pushf
pushf
call
call
jmp
movb
mov
not
pop
lea
setns
mov
push
pushf
lea
pushl
jmp
lahf
mov
movb
movb
mov
mov
pushl
ret
pushl
pushl
nop
lea
jle
pushf
pusha
pusha
mov
movsbw
movzbl
mov
mov
push
movb
lea
call
pushf
push
mov
jmp
movw
pushf
lea
jmp
pusha
xchg
pushf
push
mov
pushf
pushl
ret
lea
movsbw
mov
pushl
mov
push
pushf
pushf
pushl
ret
mov
jmp
pushf
xchg
pushl
mov
mov
jmp
movb
xchg
movl
pushl
ret
sti
mov
not
nop
mov
pop
jmp
mov
std
sub
pop
lock
scas
or
jne
cmp
arpl
dec
fsubrs
add
cwtl
loop
mov
xchg
sar
cmpsl
ljmp
lea
or
pop
push
jno
aad
xor
pop
movsb
push
mov
pop
out
fstpl
lea
cli
stos
mov
outsl
cltd
std
jg
aas
in
cltd
imul
loop
cmpsl
and
fsubrl
mov
out
mov
aam
xchg
fisubs
xor
xchg
dec
sub
mov
xor
inc
dec
cmp
addr16
push
push
fcompl
xchg
pop
mov
testl
andb
je
lret
cmp
pop
out
adc
dec
xlat
ds
stos
inc
jecxz
lret
pop
push
les
leave
cld
bound
cltd
out
mov
push
cmp
outsl
cmova
sub
cmp
jno
les
sub
cmp
xchg
xchg
inc
adc
mov
inc
and
lods
cmp
mov
in
dec
adc
clc
sbb
sub
stos
cmc
std
stos
add
cmp
pop
scas
fsubl
inc
xchg
imul
sbb
leave
sub
aaa
inc
inc
mov
divb
jnp
in
dec
cmp
mov
cwtl
and
inc
insl
xchg
xchg
pushf
sub
pusha
jp
addb
iret
nop
jle
mov
cld
and
je
xor
jnp
inc
dec
imul
push
add
cmp
jecxz
adc
cmp
arpl
lea
je
add
jle
ret
inc
dec
test
decb
sub
test
mov
mov
xor
add
adc
dec
add
push
add
dec
xor
jp
or
test
add
fisttpll
dec
into
out
sbb
or
mov
jge
xchg
ja
mov
outsb
mov
pop
lock
dec
xchg
push
cld
js
jle
inc
mov
dec
in
mov
in
mov
scas
nop
or
pop
push
sbb
aad
push
test
mov
sub
dec
jns
sbb
stos
ret
push
cli
inc
inc
cmpl
mov
rorl
ljmp
leave
fstps
in
ss
stc
cmp
incb
dec
sbb
into
push
push
xchg
lret
loop
xchg
insb
jns
das
icebp
out
sub
mov
jge
jecxz
jo
gs
jle
dec
sti
sbb
jge
mov
imul
jae
out
push
sbb
push
test
dec
jae
fistl
jnp
pop
call
ret
enter
mov
lods
and
pop
cmpsl
flds
mov
paddusb
pop
cmp
shl
aam
test
cmp
mov
cmp
sub
and
xor
mov
xchg
cmp
push
mov
jnp
cmp
ret
in
sub
outsl
cmp
in
xor
jbe
stos
into
sbb
rclb
xor
jae
push
sahf
test
adc
push
mov
pop
push
push
add
rorb
jecxz
sbb
cmpsl
adc
inc
fnstsw
cmp
or
icebp
cmp
xchg
fs
inc
mov
and
mov
das
ljmp
push
mov
mov
inc
rorb
sub
xchg
pop
scas
arpl
sbb
out
clc
cmpsl
pop
repz
mov
stos
push
fldt
and
ja
sub
cli
repnz
lret
jno
sbb
pop
fisubl
mov
push
addb
rcll
sbb
mov
sub
lods
into
pop
divl
xor
ret
int3
pop
hlt
divb
pop
retw
push
add
push
ror
aam
rcrb
js
and
movsb
xchg
adc
stos
in
stos
adc
push
lret
enter
pop
lret
jle
rcrb
lea
adc
pop
cltd
push
or
or
jb
pop
lods
push
loope
xor
aaa
xchg
push
mov
in
adc
dec
mov
in
cwtl
or
xor
lahf
out
cld
or
xchg
or
scas
xchg
xor
cs
lcall
cmc
mov
mov
xchg
int3
data16
dec
pop
add
add
push
sub
push
jnp
push
xor
xor
mov
in
pop
mov
icebp
mov
jle
xchg
mov
and
in
adc
in
mov
ljmp
aam
cmc
or
adc
popf
divb
gs
dec
cmp
cli
fidivrl
cld
dec
pop
fisubl
fnsave
daa
push
sbb
loop
rcrb
js
rol
jne
mov
mov
jmp
sbb
leave
lahf
icebp
mov
cmp
cmp
cmp
sub
jmp
xchg
imul
or
mov
dec
inc
stc
ret
iret
clc
lcall
push
aas
negl
mov
pop
lock
arpl
inc
lods
pop
fdivrl
loope
call
and
bswap
lds
addr16
cmp
push
movsb
push
xchg
pop
mov
push
mov
std
cmp
rclb
out
cwtl
xchg
popf
jae
pop
out
loope
scas
push
pop
and
fisubrl
js
pop
movsl
hlt
push
xor
outsb
xor
hlt
popf
mov
fwait
jne
mov
push
xchg
lods
pop
mov
fsubrl
shlb
lock
pop
sti
jecxz
scas
mov
mov
inc
push
adc
fs
jo
or
andl
in
jecxz
dec
outsl
sbb
cli
repnz
test
pop
xlat
scas
xor
lret
and
loopne
push
and
pop
out
adc
popf
ret
jp
insb
loopne
arpl
outsl
mov
mov
add
notl
in
daa
std
faddl
fsubrp
sbbl
dec
mov
pushf
sub
or
cmp
clc
shlb
imul
mov
mov
add
shr
cmp
or
repnz
cmp
stos
dec
mov
xor
push
push
cli
lods
hlt
test
jg
jp
pop
lret
push
mov
push
xor
adc
les
fsts
pop
in
fnstcw
adc
fimuls
arpl
das
popf
bound
enter
jl
aas
out
icebp
or
leave
cmp
loop
and
sahf
jg
xchg
lock
add
ret
xor
mov
aaa
cmp
xchg
xor
lock
out
mov
cmp
cmp
mov
cltd
lret
lret
sbb
ret
arpl
sbb
pop
fidivl
pop
push
cmp
cmp
std
icebp
aam
aad
cwtl
sbb
mov
inc
mov
les
rclb
mov
add
mov
push
call
push
pushl
jmp
push
xchg
pushl
pushf
pushl
ret
call
mov
push
pop
movsbw
not
mov
pusha
movb
pushf
lea
call
lahf
pop
mov
pushf
mov
pushf
pushl
ret
pushl
pushf
lea
pushl
pushl
jmp
xchg
movb
mov
movb
mov
pushl
ret
lea
jmp
mov
mov
call
lea
pushf
pushf
jmp
lea
movw
xchg
push
movw
pushl
ret
xchg
pusha
mov
pushf
pushf
mov
pushf
mov
pushf
call
xchg
movb
pushf
mov
pushl
ret
bswap
mov
call
mov
jmp
call
xchg
movl
pushf
push
pushl
ret
jmp
pushl
xor
pushf
xor
cmp
pushl
popf
pushf
pushl
ret
lea
mov
pushl
ret
pushl
mov
jmp
call
xchg
movzbl
movb
jmp
push
pushf
mov
mov
mov
mov
push
movb
lea
pushf
pushf
mov
pusha
jmp
mov
call
pushf
nop
sete
pusha
mov
mov
xchg
push
pushf
mov
pushf
xchg
movsbl
mov
call
xchg
call
push
push
call
xchg
push
mov
pushf
pushl
ret
push
nop
call
call
pushl
lea
push
jmp
nop
movsbl
pushf
mov
bswap
push
movzbw
xchg
mov
movsbw
pop
bswap
mov
movsbl
mov
call
nop
pushf
call
nop
jmp
jmp
lea
call
push
pushf
pushf
popl
call
lea
pusha
mov
call
nop
jmp
pusha
mov
call
movw
call
pushf
movb
mov
call
pushf
jmp
push
push
xchg
push
movl
xchg
setg
pop
lea
mov
pushf
jmp
call
jmp
push
push
jmp
push
bswap
nop
call
mov
call
call
pusha
pushf
movl
jmp
lea
call
mov
lea
jl
lea
call
lea
call
mov
push
lea
call
pushl
lea
mov
call
pushf
mov
jmp
call
lea
jno
pusha
pusha
nop
pushl
mov
jmp
call
push
push
lea
pushf
movb
mov
xchg
pushf
pushl
ret
pushf
mov
jmp
xchg
push
push
pushf
movb
pushl
ret
call
mov
call
mov
pushf
pushf
push
mov
lea
pushl
jmp
mov
jmp
pushf
xchg
bswap
mov
movw
push
movb
pusha
lea
call
call
push
movl
jmp
pusha
cwtl
call
lea
jmp
lea
lea
pushf
movzbw
nop
pushf
mov
pushf
call
xchg
pushl
mov
jmp
jmp
movw
pushf
mov
lea
jge
lea
jmp
call
pushf
xchg
bswap
movzbw
mov
mov
call
movb
movb
call
xchg
mov
pushl
ret
call
lea
pushf
call
inc
dec
jns
call
nop
pusha
lea
ja
pushf
push
xchg
bswap
lea
push
setle
mov
push
pusha
lea
jmp
bswap
nop
movsbw
push
movsbw
mov
pusha
pushl
pushf
xchg
pushf
xchg
lea
movsbl
push
call
push
call
movb
mov
setns
not
movsbl
lahf
mov
push
mov
jmp
pusha
pushf
movl
pushl
push
movl
push
lea
jmp
pusha
mov
pop
bswap
push
call
jmp
push
mov
push
lea
mov
push
pushl
call
pusha
xchg
movzbw
jmp
movb
xchg
pushl
pushf
pushf
pushl
pushl
ret
bswap
call
call
xchg
push
pusha
mov
jmp
lea
pushf
pushf
movb
jmp
call
movsbl
mov
pushl
jmp
not
push
mov
movsbw
jmp
movsbl
movl
mov
push
bswap
bswap
movzbw
mov
push
jmp
pop
jmp
pop
mov
movsbw
lea
jmp
lea
pushf
pushl
mov
not
bswap
mov
jmp
pushf
lea
call
pushf
jmp
pushl
jmp
push
nop
jmp
lea
movw
mov
jmp
jo
movzbw
nop
jg
pushf
bswap
movsbw
mov
pushf
push
xchg
movw
call
pushl
push
jmp
jmp
call
fildll
inc
pushf
mov
pushl
lea
call
loope
stos
cmpsl
call
mov
mov
movsbw
mov
call
movsbw
mov
not
nop
jmp
jmp
not
jmp
call
lea
pop
movzbw
mov
mov
pop
pop
push
pushf
pusha
pushl
ret
lea
jmp
mov
jmp
nop
call
seta
nop
pusha
movsbw
not
mov
pushf
pushf
xchg
movw
call
pusha
xchg
call
das
push
pusha
sub
std
add
xor
jns
push
cmpsl
movsb
insb
jo
fistpl
fiaddl
test
dec
adc
sub
enter
sbb
pushf
stc
sbb
ss
in
pop
loopne
sbb
in
fadd
xlat
ret
push
test
push
pushf
mov
into
ret
test
inc
clc
ret
out
mov
addl
pop
xchg
testl
stc
jecxz
adc
data16
sti
jmp
push
mov
cltd
or
iret
xchg
jp
ret
or
mov
xchg
adc
shll
into
dec
dec
sub
aas
mov
iret
addr16
or
mov
pop
jmp
or
mov
aad
int
cmc
outsl
mov
dec
push
dec
xchg
nop
les
dec
in
and
jne
leave
push
add
imul
mov
rorl
flds
pop
cmpsb
lcall
or
insl
int
mov
fwait
cmp
push
fwait
mov
lret
outsb
add
mov
xor
rcll
shll
cmp
sbb
fiadds
test
ja
mov
inc
mov
inc
pop
bound
fistl
adc
daa
mov
xor
sbb
in
sbb
nop
outsb
shlb
or
js
mov
lcall
xchg
mov
mov
into
sti
insb
cmp
jmp
cmp
rol
nop
jae
push
out
inc
sbb
out
pop
mov
dec
aad
inc
adc
sub
pop
loope
and
lahf
out
fwait
inc
loopne
xor
sti
cmpsl
pop
test
icebp
cs
mov
xchg
dec
in
idivl
add
out
leave
ss
dec
push
mov
push
scas
xchg
gs
call
shlb
cmp
xchg
or
notb
popf
push
fisubl
adc
ss
int3
or
out
outsl
jp
xchg
int3
pop
cltd
xor
subb
add
std
sbb
stos
mov
pop
dec
and
jno
cmpsl
inc
cwtl
test
cmc
scas
sbb
sbb
adc
js
add
jmp
pslld
xchg
cmpsb
pop
cmpl
xor
vdivpd
jmp
adc
repnz
jl
jp
cmpsl
out
add
data16
xor
fnstcw
notb
inc
pop
add
mov
push
dec
mov
push
sub
cmp
mov
push
sub
mov
sbb
push
stc
inc
rcrl
lods
mov
adc
push
jmp
movsl
outsb
adcb
addl
in
mov
fwait
jns
mov
pop
adc
and
add
in
cmp
mov
sbb
jg
jno
mov
jmp
ljmp
mull
jl
into
std
call
mov
mov
aad
dec
push
jp
adc
int
lret
fwait
shr
sbb
mov
mov
leave
mov
adc
scas
mov
mov
lahf
dec
jno
push
xchg
cmpb
gs
jb
jle
cli
adc
mov
jg
and
bound
jmp
lcall
out
clc
mov
and
push
inc
adc
cmc
inc
or
push
inc
or
ljmp
aaa
shr
and
ret
fcoms
add
out
sbb
adc
jne
fldl
mov
arpl
adc
mov
cmc
cmp
pop
mov
aam
cltd
popa
jecxz
and
js
or
lret
rclb
mov
jl
lret
mov
and
mov
mov
lcall
dec
mov
int3
repnz
pop
jge
cmp
jecxz
mov
dec
adc
xchg
xchg
cmp
push
nop
pop
je
daa
or
clc
pop
xor
aas
fisubrl
add
sub
sub
incl
fmulp
cmp
cs
ret
adcl
jae
add
test
or
mov
pushf
ja
in
mov
xchg
pop
ljmp
inc
push
loop
dec
lret
sub
xor
xchg
mov
scas
xchg
cmp
push
daa
pusha
mov
les
push
adc
mov
sub
ret
cmp
cmp
repnz
fdivs
loop
ds
adc
insl
test
decl
inc
dec
adc
pusha
loop
inc
mov
hlt
test
stos
outsl
sahf
mov
or
iret
pop
jnp
pop
jb
xchg
mov
fbld
cs
loope
mov
setbe
es
cwtl
add
imul
int3
aaa
popf
fsubs
sbb
pop
and
inc
aas
cld
and
xchg
dec
and
mov
out
shll
jns
inc
daa
repz
adc
push
xchg
into
xchg
add
dec
out
insl
jne
daa
pop
mov
lods
jne
mov
mov
mov
pop
out
js
push
ss
mov
or
or
shll
lret
jno
sbb
sub
mov
mov
push
xchg
shl
xchg
imul
or
and
add
rol
sub
push
add
cmp
dec
scas
call
jg
mov
lea
inc
jbe
xlat
mov
cmpsb
jns
ljmp
inc
add
inc
sub
mov
jbe
fbstp
sub
pushf
lods
push
inc
cmp
push
call
inc
sub
out
mov
push
mov
scas
fsubr
outsl
mov
push
popf
sbb
lcall
inc
sbb
mov
jl
jp
addb
in
int3
mov
adc
cmp
jbe
outsb
mov
dec
aad
jne
out
lds
es
mov
and
push
hlt
dec
js
jns
cmp
js
xchg
jge
adc
out
sbb
xor
nop
ficoml
je
mull
or
xchg
loopne
sar
adc
add
inc
rcrl
mov
orb
data16
push
addb
mov
or
popa
jge
inc
push
faddp
aad
xchg
test
pop
ds
call
pop
loopne
scas
pop
andb
into
jnp
and
fisubrs
fs
nop
js
mov
sub
dec
test
int
je
pushf
xor
mov
sub
in
jecxz
push
out
repnz
cs
or
cmp
cmp
or
mov
sub
sbb
das
iret
sahf
pushl
sahf
push
iret
inc
xor
pusha
mov
mov
cmp
movb
lret
mov
out
sbb
movsb
in
cmp
cmp
scas
cld
arpl
xor
mov
push
add
mov
jbe
hlt
and
mov
cmp
cli
nop
test
and
jge
cli
xchg
xor
test
jg
mov
les
mov
data16
and
xchg
je
nop
test
loope
pop
and
xchg
loop
inc
or
mov
mov
lea
mov
mov
cmp
es
fsubl
mov
mov
inc
loop
mov
mov
sub
mov
pop
mov
xor
mov
jmp
mov
test
orl
add
stc
jmp
dec
or
push
pop
sbb
mov
xor
dec
push
sbb
out
mov
mov
ljmp
push
out
insb
cmpsl
add
movsl
cld
push
or
mov
es
dec
int
repnz
xchg
jb
imul
jns
push
push
fldl2e
int
mov
out
add
pop
sbb
icebp
stos
es
ljmp
movsb
push
pop
xchg
test
pop
sti
loopne
push
push
fyl2x
aam
mov
adc
movsl
ljmp
and
jmp
push
call
movb
lea
pushf
pushf
xchg
push
mov
push
mov
pushl
ret
lea
jg
lea
call
call
mov
pusha
jmp
adc
pop
and
std
fs
inc
in
shll
dec
sti
jl
push
inc
pop
loope
aaa
mov
sub
shrb
enter
sbb
cs
xor
pop
xor
and
mov
fs
test
sub
and
push
negb
sub
lret
pushf
shll
mov
out
punpckhdq
cmpsb
cmp
adc
lahf
pop
mov
cmp
xchg
push
imul
mov
sbb
iret
xchg
sbb
cmpsb
push
adc
mov
xchg
pop
daa
popa
scas
repnz
loope
lods
ror
xor
dec
cmpb
insl
jge
mov
cmp
gs
cmovb
xor
sbb
mov
add
movsl
or
js
dec
dec
jecxz
or
xchg
jmp
xchg
push
sbb
outsl
xor
mov
stc
shr
add
js,pt
fiadds
jae
adcb
arpl
sub
shl
mov
jno
push
xchg
test
into
xor
int3
ja
shrb
sub
dec
fisubs
lods
add
cli
fwait
sahf
fs
mov
mov
mov
lock
mov
pop
dec
lahf
in
xchg
fdivr
pusha
cmc
stos
pop
jmp
lods
add
lahf
in
push
xor
rorl
shlb
push
jmp
lahf
arpl
cwtl
xor
or
push
mov
out
mov
ret
adc
xor
cli
fcompl
ficompl
mov
sbb
sbb
jmp
fnsave
stos
js
push
cmp
push
popa
imul
sbb
mul
les
clc
into
add
and
stos
test
dec
mov
xor
rcll
sti
jnp
out
sub
push
sbb
stos
imul
cmp
xor
pop
ret
jne
and
add
dec
adc
fisubrs
jnp
xor
jno
dec
leave
in
repz
xor
adc
sub
dec
inc
ret
fidivl
iret
mov
adc
shl
icebp
and
stos
mov
push
push
clc
pop
mov
aam
imul
xor
pop
rclb
jg
adc
cmp
sbb
push
gs
sub
arpl
sub
push
dec
lock
mov
xchg
sbb
loop
pop
inc
test
sbb
mov
mov
loope
sbb
scas
pop
shll
mov
add
pop
xchg
push
cld
cmpsb
test
daa
dec
ja
enter
popa
enter
fldpi
inc
lods
cmc
inc
pop
jmp
popa
stos
and
incl
push
mov
inc
clc
push
call
and
dec
jmp
mov
sbb
lcall
mov
xchg
outsl
inc
scas
out
mov
cmpsb
int
stos
sbb
lods
js
and
cmp
incb
xor
cmpsb
stos
push
mov
dec
sbb
subl
pushf
loopne
scas
arpl
data16
jb
scas
pop
ds
cmpsl
loope
sub
mov
int
lods
outsb
xlat
scas
icebp
sub
pop
xchg
jecxz
and
mov
clc
hlt
lods
mov
mov
push
int3
scas
cmpsl
dec
push
scas
enter
xor
mov
jecxz
dec
mov
in
jne
lock
jmp
xchg
fwait
adc
or
and
dec
push
ds
hlt
fwait
test
and
mov
stc
mov
inc
sub
rclb
outsb
mov
cvtdq2ps
cmp
cmp
jb
or
dec
jle
mov
pop
xchg
fwait
lods
cmp
pop
push
xlat
mov
pusha
inc
or
lock
cmp
lds
adc
pop
shlb
cmp
leave
adc
push
mov
pusha
rcll
cld
fildll
sbb
popf
and
ja
adc
mov
inc
xor
push
jmp
mov
aad
xchg
iret
mov
fisubrs
mov
mov
in
arpl
adc
mov
cmp
jmp
lods
adcb
repnz
mov
ljmp
std
add
fcmovne
sbb
jp
add
pop
ret
sub
sbb
imul
adc
dec
data16
mov
in
inc
and
adc
loop
mov
leave
mov
sbb
or
cld
dec
push
addr16
xchg
push
rclb
adc
jmp
or
fwait
pop
add
and
std
enter
test
mov
mov
and
out
xlat
adc
mov
insl
mov
rolb
pop
je
pop
lea
dec
xchg
imulb
scas
jbe
cld
mov
dec
xchg
push
push
lods
mov
stos
dec
sub
movsb
stc
xor
fs
sbb
dec
rcr
cli
les
out
pop
outsl
dec
in
jnp
imul
out
repz
sbb
int3
les
leave
out
mov
insb
cmpb
xchg
out
gs
cmp
mov
jns
test
mov
push
jp
or
ret
lock
stc
test
mov
push
das
push
in
push
movsl
pop
jp
stos
inc
push
fnstsw
pop
push
sbb
sbb
ret
std
inc
pop
xchg
mov
pop
jno
nop
xor
adc
shr
call
popf
jecxz
es
sbb
addr16
xlat
xchg
stc
repnz
or
das
and
lea
dec
rcr
stos
test
push
mov
lret
dec
or
stos
fwait
in
lods
dec
lods
or
add
cmp
xor
lcall
aam
and
mov
push
mov
xchg
jno
out
inc
jae
ret
andb
sub
mov
sahf
test
loopne
mov
dec
cmp
mov
xlat
xchg
adc
fs
add
sahf
fsubrl
aam
daa
std
repz
fwait
adc
xor
mov
xor
insl
push
cltd
fidivl
and
mov
xor
dec
sub
xor
jne
inc
mov
je
xchg
filds
jecxz
out
shlb
test
push
int3
loope
loop
clc
and
jecxz
xchg
jg
repz
sbb
mov
sbb
aaa
sub
xor
cmpsb
jl
inc
std
scas
ds
jnp
mov
out
push
lods
movsl
or
xchg
mov
cs
int3
mov
or
push
pusha
aaa
mov
fnstcw
inc
shl
pop
pop
icebp
out
push
and
mov
call
cmpsl
rcrb
ljmp
mov
es
popa
sub
inc
loop
xchg
mov
fs
nop
cmp
es
imul
pop
pop
hlt
cmpsb
repz
xor
mov
pop
aas
or
inc
insb
mov
xchg
and
push
testl
lods
aaa
mov
xchg
dec
clc
jmp
mov
jecxz
xor
push
sub
out
rcrb
xor
adc
add
dec
dec
lods
loope
pusha
fdivs
clc
mov
adc
inc
adc
std
das
lret
stos
lret
adc
and
xchg
divb
mov
pop
je
and
or
pop
pop
lahf
in
push
and
fucom
dec
clc
xchg
and
xorb
cmp
add
xchg
push
outsl
out
pop
aas
or
mov
sbb
add
and
ficompl
into
or
adcl
mov
jmp
mov
testl
dec
mov
xor
loop
dec
sbb
outsl
ljmp
gs
aas
push
mov
aas
iret
add
popa
fiaddl
jl
repnz
int3
les
pusha
sub
mov
icebp
insb
or
mov
add
sbb
clc
lret
push
push
sbb
andl
loopne
or
shl
xor
adc
iret
xor
xchg
pop
sub
imul
and
nop
add
out
aaa
xchg
dec
adc
xlat
adc
add
dec
ss
insl
sub
mov
imull
xchg
pop
sub
enter
fistps
aas
mov
lock
xor
mov
repnz
jge
clc
in
jbe
cmp
lods
cmp
loop
xor
dec
and
cmp
cwtl
repz
sbb
push
mov
in
push
cmpsb
and
jae
pop
js
mov
and
push
xor
daa
repz
xlat
push
shll
mov
or
xor
popf
popf
cmp
iret
xchg
pop
mov
pop
xor
shll
push
jge
test
xor
xor
push
addr16
dec
mov
adc
lcall
sbb
xchg
pop
mov
xchg
sub
cmp
inc
and
cli
pushl
ret
jmp
mov
mov
jmp
mov
mov
call
mov
cwtl
setle
bswap
mov
call
jmp
xchg
movzbw
movzbw
lea
mov
push
mov
jmp
mov
mov
push
lea
push
xchg
movb
pushl
ret
mov
lea
jp
bswap
mov
call
pop
popf
leave
sbb
std
sahf
addr16
shrl
jae
bound
mov
jmp
rolb
add
xchg
sbb
inc
mov
les
ljmp
sub
orl
lock
sbb
sbb
inc
jge
jmp
xchg
cmp
adc
add
jle
xlat
addr16
cli
sub
lods
aaa
lea
adc
mov
inc
pop
adc
sbb
hlt
out
fbld
and
jecxz
adc
lods
imul
stos
lea
sub
jp,pt
mov
test
loop
clc
cs
out
xchg
xlat
cmp
sbb
adc
imul
cmp
jge
xlat
push
jb
push
into
pushw
jl
add
sub
inc
lret
outsl
cmpsl
pop
push
inc
cmc
pop
cmpb
jns
lods
pop
call
lcall
clc
sub
dec
pop
pop
fs
jb
mov
adc
mov
rcll
lcall
or
sahf
mov
push
in
loop
jns
mov
in
aas
mov
sub
mov
hlt
push
lcall
repnz
xchg
ljmp
mov
lds
jae
mov
add
lret
bound
gs
repz
mov
test
jae
mov
and
adc
add
inc
lea
pop
jo
leave
adc
fdivs
stos
int3
leave
and
pop
cmpsb
xor
xchg
sub
loope
jbe
jno
stos
je
data16
push
lea
push
push
jne
mov
push
mov
cwtl
out
imul
push
sbb
jo
out
pop
addr16
or
inc
push
push
pop
mov
jbe
mov
inc
aad
adc
repnz
add
arpl
jp
dec
xchg
fildll
cmpsb
loopne
mov
or
mov
mov
fnsave
addl
adc
lret
cld
lea
in
jo
sbb
cmp
mov
popa
mov
pop
mov
dec
loopne
pop
int
cld
or
jnp
dec
adc
adc
lea
daa
popa
das
and
out
mov
loope
lret
cmpsl
sub
sahf
dec
dec
test
arpl
jg
xchg
sub
inc
sarl
mov
jae
movsl
add
xchg
xchg
sbb
mov
add
mov
push
cwtl
cltd
mov
adc
jae
mov
movsl
pop
push
adc
cmp
jmp
je
stos
leave
jns
outsl
xchg
insl
in
jg
test
stc
pop
fs
stc
aaa
xorb
jg
outsb
movsb
mov
mov
insl
xor
xchg
in
in
and
subb
cmc
mov
mull
mov
add
sub
mov
and
lds
aaa
clc
jbe
pop
or
out
out
mov
test
lahf
dec
adc
mov
mov
xorl
sub
lcall
cmp
mov
insb
std
sbb
sbb
lods
mov
clc
cmp
xor
mov
dec
push
dec
push
push
mov
ss
sbb
movsl
push
sbb
pop
je
sbb
mov
xchg
out
cli
sub
nop
aas
cltd
sbb
test
not
ret
sbb
sahf
data16
adc
jbe
cmpsl
mov
in
aas
or
dec
addr16
andb
iret
ja
rcr
xor
mov
mov
mov
daa
fildl
jne
ja,pn
mov
test
cmp
push
inc
adc
xor
inc
or
push
imul
nop
xor
fidivl
push
ss
repz
cltd
xorl
hlt
push
push
push
loopne
std
add
cld
lds
loop
jno
shll
adc
xchg
insl
hlt
jg
adc
push
xor
sub
lods
and
int3
mov
test
mov
dec
in
push
into
lea
mov
ja
jl
aaa
xchg
das
and
cmp
ss
jae
std
sub
sbb
mov
push
sub
xorl
aad
mov
or
stos
js
fisubrl
jg
xchg
jmp
test
ss
dec
cli
inc
repnz
mov
add
pop
es
sub
cs
cld
and
es
pop
cmp
and
scas
shrb
dec
js
push
sub
sbb
nop
js
test
push
sbb
or
push
sti
inc
test
aaa
cltd
or
pop
insb
js
add
add
cmp
outsb
pop
or
cltd
aam
ret
sub
cmc
cmc
les
and
or
mov
and
sbb
jg
arpl
xor
jnp
ss
adc
hlt
loop
mov
adc
jb
push
insb
or
inc
in
lea
cmpsl
mov
dec
mov
loope
mov
mov
ljmpw
enter
clc
adc
pop
clc
or
ds
test
lret
cmp
out
outsb
inc
movsbl
ljmp
cmpsl
out
cmp
fnstcw
mov
filds
imul
mov
mov
out
push
movsb
lock
cmp
add
or
push
in
stos
test
lea
mov
lods
sbb
jbe
jbe
mov
adc
add
push
pop
lds
loope
hlt
inc
pusha
mov
sub
pop
pop
sub
lret
ret
in
repz
push
sub
filds
mov
push
xchg
adc
jmp
fstpl
push
sub
sbb
fsubl
push
dec
fstp
sbb
fistpl
mov
mov
ficompl
inc
xchg
push
out
add
inc
iret
sbb
add
aas
dec
imul
pop
je
cmp
jp
sbb
sub
mov
jne
push
adc
push
lock
daa
je
xchg
test
adc
jno
sbb
out
jno
inc
popf
jmp
fcom
xor
mov
in
movsl
icebp
inc
pop
or
push
push
xchg
int3
ja
or
push
xchg
add
leave
sub
mov
addl
nop
cs
and
push
and
pop
lret
mov
mov
out
or
icebp
jns
mov
push
in
mov
aaa
mov
adc
sub
popa
aam
insb
xchg
pop
or
add
push
int3
push
dec
xlat
inc
inc
insb
loope
xor
popl
add
add
jb
add
call
pop
bswap
mov
pushl
mov
push
movb
mov
lea
pushf
push
xchg
pushl
movw
pushf
pushf
pushl
ret
xchg
movb
push
movw
pushl
ret
jmp
pusha
jmp
nop
call
bswap
pushf
mov
pushf
mov
jmp
xor
pushl
cmc
pushl
popf
pushf
push
pushl
ret
push
movb
nop
call
call
inc
mov
adc
std
insl
mov
dec
xchg
ss
mov
test
adc
mov
sub
lcall
test
loop
rorl
sub
dec
sub
imul
lret
loop
jg
cmp
cmpl
lods
adc
fucomip
dec
adc
xor
int3
dec
mov
out
push
xchg
dec
scas
clc
add
mov
outsb
imul
sub
gs
arpl
mov
and
daa
add
pop
movsb
jmp
outsl
ret
and
add
aas
cs
shrb
aas
dec
bound
das
push
imul
ret
int3
jmp
or
xor
dec
xor
std
inc
sbb
fstpt
mov
inc
orb
xor
js
loopne
and
mov
pusha
fidivrs
pop
sbb
inc
bound
push
mov
leave
xor
pop
and
adc
gs
rcrl
in
int
mov
mov
into
cltd
punpckhbw
mov
pop
adc
fimull
xor
cltd
or
cmp
inc
lock
mov
clc
mov
es
sbb
mov
shll
out
ja
jbe
fistpll
mov
adc
push
sbb
daa
inc
mov
jge
popa
seta
fwait
lcall
jle
xchg
pop
mov
mov
sub
mov
xor
faddl
jo
cld
iret
mov
imul
push
scas
sti
push
mov
iret
sub
repnz
push
push
ja
or
outsl
lret
and
insb
not
mov
les
test
jmp
cmp
rcl
mov
add
cmp
cmp
mov
incb
mov
inc
or
lock
insb
jge
jb
testb
adc
mov
popf
and
in
mov
icebp
jb
dec
div
xorb
or
and
fisubs
cwtl
pusha
pop
lret
sar
adcl
bound
test
clc
in
ret
jne
push
insb
lret
jnp
push
mov
ret
shrb
push
loope
cmp
daa
sar
mov
iret
mov
and
adc
jecxz
sub
shlb
sbb
jl
xchg
mov
lahf
xchg
addr16
fmull
rolb
scas
push
fidivs
sub
inc
add
fstpl
lret
xor
test
xchg
outsb
nop
inc
jno
sub
add
or
xor
xor
push
in
outsl
cmp
xchg
mov
mov
mov
nop
sti
fidivrs
jl
jae
int3
xchg
les
lds
mov
push
push
xor
sub
lods
jne
push
push
stos
jns
pop
sub
add
lcall
js
or
call
jp
mov
imul
scas
call
add
lods
lret
fs
dec
pop
gs
inc
mull
xor
sahf
push
xchg
fs
push
cltd
and
dec
clc
lret
pop
stos
or
xlat
inc
inc
scas
or
les
push
add
dec
push
iret
and
outsb
addr16
sahf
push
xchg
pop
std
cli
add
orb
aas
jo
mov
rclb
fcoms
out
and
pop
push
cmp
or
lea
mov
push
and
mov
mov
cmp
incl
mov
inc
pop
push
fisttpll
aas
cmpsl
outsl
icebp
out
xchg
nop
add
stos
sub
lods
pushf
rorl
inc
andl
xor
sbb
xchg
sahf
adc
test
sub
movsl
arpl
lret
nop
in
mov
into
lock
out
dec
out
inc
inc
pushf
push
cltd
popa
jne
into
daa
cmc
mov
clc
repnz
jo
or
pusha
xlat
pop
and
and
inc
sbb
jmp
xchg
rcrb
mov
mov
shlb
imulb
xor
pusha
inc
jnp
test
fistps
sub
ljmp
mov
jle
cmp
ljmp
jne
xchg
pop
inc
in
es
push
nop
pushf
movsb
roll
cltd
mov
mov
insl
enter
pop
sarl
push
push
and
and
sahf
or
xor
mov
cmp
adc
rolb
jge
arpl
movsl
jo
mov
xor
mov
cmpsl
cmp
sub
cmp
lock
sar
xor
mov
ret
ds
or
xchg
inc
inc
cltd
imul
in
sbb
je
imul
rorb
jl
addr16
stos
imul
xor
rcrb
dec
repz
mov
mov
cmc
sarb
inc
sbb
pop
cmp
mov
aas
or
imul
add
icebp
xor
and
xchg
jae
test
pop
cwtl
cmp
pusha
sbb
jle
push
sbb
pop
pop
pop
mov
mov
jo
cltd
repnz
jmp
and
fcompl
xchg
jae
mov
mov
xor
add
jp
rcrb
adc
sysret
sub
cmp
and
push
cmp
ja
loop
dec
jmp
xchg
cmpl
jle
dec
xchg
cmpsl
add
jo
aam
sub
ficomps
test
pop
daa
push
dec
adc
xchg
xchg
push
or
push
push
pop
jno
int
add
jbe
cwtl
and
fcomps
ljmp
push
out
pop
push
ds
pop
xchg
jmp
mov
and
andl
cwtl
cwtl
icebp
ds
lods
movsb
clc
lahf
mov
mov
mov
adc
and
xor
jge
jp
mov
rcr
mov
cmp
or
int
sar
movb
shll
popf
pop
mov
mov
cmpsb
fisubrl
data16
dec
loop
mov
mov
and
add
aam
lea
into
xchg
fbstp
dec
idivb
cmp
adc
out
inc
adc
push
leave
and
test
shll
lret
rcr
rcr
sub
bnd
cld
roll
into
aas
mov
fdivrs
pop
aaa
popa
out
ret
fmuls
leave
int
ljmp
scas
adc
sub
sbb
and
pop
cmp
cmp
jns
stc
scas
test
lock
jl
jne
mov
inc
movsl
decb
out
mov
sbb
pop
jmp
sbb
and
cltd
scas
ja
fcomp
xor
int
insl
xchg
push
scas
stos
xor
in
xchg
dec
push
test
adc
add
adc
mov
mov
cs
adc
out
js
inc
aaa
dec
xchg
push
clc
fistl
arpl
jge
xor
cmp
loop
push
sbb
add
xchg
aam
xor
aas
inc
push
dec
nop
in
loopne
inc
sub
xchg
dec
push
enter
dec
fcmovnu
mov
imul
inc
pop
insb
mov
fiadds
pop
add
in
ret
rcrl
fs
lret
push
jo
cmp
xor
cmp
add
pop
sub
insb
mov
leave
sub
scas
lods
repz
cmp
mov
sub
xchg
dec
push
cmp
adc
movsl
inc
cmp
add
xor
mov
popf
and
aaa
dec
lret
xchg
pushf
pushf
lea
push
xchg
mov
pushf
pushf
mov
pushl
ret
movb
push
xchg
mov
pushf
movb
pushl
ret
xchg
jmp
call
mov
mov
mov
call
mov
movl
mov
mov
jmp
pushf
call
mov
pushl
mov
movw
movb
mov
pusha
lea
push
xchg
pushf
push
pushf
pushl
ret
jmp
bswap
nop
lea
pusha
mov
mov
jmp
mov
pop
call
mov
pop
movzbw
bswap
cwtl
mov
call
xchg
movb
pusha
jmp
jmp
nop
not
pop
jae
push
xchg
pushf
xchg
movzbw
pop
mov
pusha
jmp
jmp
mov
push
jmp
xchg
mov
mov
pushl
ret
call
not
pushl
mov
pushf
jmp
bswap
mov
mov
jmp
call
pusha
mov
mov
pushf
pushl
call
call
pushl
pushf
lea
jbe
xchg
pusha
push
pushl
movl
pushl
ret
call
call
mov
lahf
lea
bswap
xchg
mov
lea
push
mov
mov
seta
setg
call
mov
not
call
movsbw
mov
movl
pushl
ret
push
jmp
lea
pushf
pusha
jmp
mov
call
jmp
call
pusha
lea
call
pushf
popl
stc
clc
xor
cmp
xor
pusha
push
xorl
cmp
cmc
xor
pusha
xor
cmc
xor
bt
xor
push
xor
std
pushf
pushl
popf
mov
pushl
ret
mov
jmp
lea
mov
call
xchg
bswap
mov
movzbw
jmp
call
jns
addl
sub
xchg
xchg
sti
int
lret
pusha
mov
sub
and
std
fisubl
imul
cmpsb
in
cwtl
cltd
pop
sarl
imul
mov
sbb
lods
fiaddl
pop
std
rcr
lahf
movsb
xor
jae
mov
add
or
dec
stos
in
test
lcall
mov
cmp
mov
test
xchg
pop
cmp
divl
or
jmp
js
add
push
in
insl
push
inc
add
xor
add
dec
insl
xor
jae
pop
xchg
sbb
sbb
dec
daa
cmp
adc
pop
stos
or
shl
pop
es
pop
xchg
adc
bound
push
out
lock
cmp
sbb
or
jo
sbb
inc
xchg
lods
jne
xor
fmuls
ret
adc
push
clc
mov
push
mov
iret
cs
enter
sbb
mov
push
jecxz
push
sbb
std
or
cmp
in
mov
sub
insl
lea
test
js
jbe
push
cs
inc
loop
mov
jle
dec
xchg
fnstcw
in
call
jno
pop
lret
sub
pop
dec
mov
repnz
pop
ss
insl
popf
mov
cmc
in
mov
jmp
inc
adc
jg
mov
cmpl
daa
mov
xchg
pusha
push
mov
jne
test
sbb
inc
jb
lcall
or
lods
movsl
jno
pop
sbb
jo
add
sbb
lret
sub
bound
cs
loope
sub
mov
rdtsc
jmp
or
pop
loop
cwtl
inc
push
or
inc
mov
push
insb
add
rcll
inc
incl
fcmovnbe
sbb
adc
mov
jno
dec
jbe
jne
mov
and
xor
jge
in
xor
aam
mov
flds
imul
addr16
ljmp
pusha
and
pop
xor
scas
clc
push
lods
adc
adc
fsubs
rcll
fiadds
jl
inc
jb
dec
faddl
jbe
iret
xor
xor
inc
outsb
jbe,pn
popf
leave
xchg
insl
sbb
pushf
lret
push
gs
push
dec
pop
negl
adc
push
in
dec
inc
xchg
out
sub
arpl
les
rcrl
mov
cmp
ljmp
nop
enter
imul
cmp
and
int3
and
xchg
adc
sub
loopne
ds
sub
push
ja
movsl
aam
and
add
cmp
stos
stos
adc
mov
ljmp
test
int3
movsl
mov
daa
lret
enter
test
cmp
pop
jns
lods
iret
sub
lcall
xchg
cmp
mov
cs
xchg
outsl
push
stos
sbb
jp
imul
jb
shlb
das
lods
cmpsb
inc
pop
and
mov
out
ja,pn
cmpsb
cmpsl
lock
push
sahf
cli
int
cmc
stos
sbb
ret
dec
cmpsb
pop
call
pop
mov
sub
sbb
mov
outsb
mov
mov
out
xchg
inc
rcll
mov
mov
sub
test
or
lock
mov
push
mov
cmp
fwait
imul
and
addr16
pusha
lcall
xchg
arpl
mov
mov
xchg
pop
and
cltd
push
or
lret
and
nop
movsb
mov
je
testl
gs
mov
mov
jecxz
call
paddb
sbb
xchg
add
lods
add
inc
inc
add
add
xchg
movb
movb
movb
pushl
ret
jmp
push
jmp
not
lea
mov
pushf
jmp
xchg
bswap
lea
lahf
not
mov
lea
jle
push
pusha
mov
jmp
pushl
mov
xchg
pushl
pushf
pushl
ret
mov
pusha
jmp
setp
mov
movb
movb
call
mov
jnp
movsbw
nop
movsbw
lea
mov
pop
call
call
xchg
mov
pushl
pushf
pushl
ret
pushf
movzbw
mov
jmp
call
movzbw
not
mov
movzbw
movsbw
mov
jmp
pushf
jmp
xchg
pushf
pushl
ret
xchg
push
push
mov
pop
lea
pushf
lea
call
call
push
jmp
lea
lea
jne
pushf
pusha
mov
xchg
mov
pushl
ret
pop
movsbw
lea
mov
sete
lea
jmp
mov
mov
pop
bswap
call
xchg
push
movb
movw
pushl
ret
mov
mov
lea
jno
mov
call
pop
jmp
movl
jmp
push
push
pushf
mov
push
pusha
pushf
lea
pushf
xchg
push
mov
mov
pushl
ret
mov
call
pushf
pushl
push
lea
push
xchg
mov
pushf
movb
push
pushl
ret
xchg
movw
mov
mov
mov
call
pushf
pushf
lea
call
jl
pusha
movl
pushf
pushf
call
pushf
mov
xchg
pushf
pushf
pushf
pushl
ret
pusha
mov
pushf
pushf
jmp
not
movzbw
movsbw
mov
pusha
xchg
mov
movw
pushf
xchg
pop
pushf
mov
bswap
mov
lea
jp
push
pushf
pusha
mov
push
push
jmp
call
nop
not
not
lea
jne
pop
jmp
mov
movb
push
pushl
mov
call
movb
pushf
mov
pushl
call
movw
jmp
jmp
movzbl
push
setg
not
nop
pusha
pushl
pushf
xchg
not
not
xchg
mov
bswap
movsbw
jmp
jmp
movb
lea
jge
nop
call
mov
bswap
pushf
mov
call
push
call
lea
jo
push
cwtl
call
mov
pushf
pop
not
mov
jmp
pusha
lea
mov
call
jmp
pushf
lea
push
lea
jo
push
xchg
pushl
push
pusha
pushf
pushl
ret
lea
push
lea
je
pushf
mov
jmp
jmp
lea
pushf
xchg
movb
mov
pushl
ret
xchg
movb
pushl
ret
call
jmp
movb
movzbw
call
call
lea
movb
xchg
pusha
pusha
pushl
ret
jmp
pusha
xchg
call
lea
pushf
jmp
pushf
mov
bswap
bswap
bswap
lea
mov
call
jmp
xchg
pushl
movb
pushf
pushl
ret
pushf
movl
jmp
pusha
xchg
call
mov
jl
or
xor
movb
mov
push
movzbw
movzbw
mov
pusha
pushl
jmp
jmp
pushf
mov
call
pusha
movw
pushf
lea
jmp
pop
pushf
mov
push
xchg
push
push
xchg
movsbw
mov
jmp
call
movzbw
pushf
push
push
nop
jmp
pusha
pushf
mov
pusha
lea
call
jmp
bswap
not
mov
movsbl
je
lea
pusha
mov
mov
mov
movb
push
pushf
mov
pushl
ret
xchg
push
mov
movb
movw
pushl
ret
pushf
jmp
pushf
call
pushf
jmp
pushf
xchg
jmp
not
call
lea
mov
xchg
push
push
pushl
ret
push
pushf
movw
nop
jmp
jmp
pushf
jmp
mov
cwtl
mov
mov
pushf
push
jmp
pushl
mov
pushf
call
mov
mov
pushl
lea
mov
mov
xchg
push
pushl
movb
pushl
pushl
ret
mov
bswap
mov
pushf
push
mov
jmp
sub
pop
xlat
jmp
mov
not
pushf
movzbw
pop
mov
pushl
lea
jmp
pusha
pushl
push
xchg
pushl
pushf
pushl
ret
lea
ja
pushf
mov
not
lahf
lahf
not
mov
call
push
lea
push
pushf
pushf
pushf
mov
movsbw
cwtl
mov
mov
pushl
mov
pushf
jmp
mov
mov
jmp
pushf
movl
call
sub
cmp
push
inc
add
je
add
fwait
lret
add
mov
pushf
push
lea
pushf
pushl
ret
movzbw
mov
nop
lea
movsbl
pop
pusha
xchg
mov
mov
xchg
lea
mov
bswap
mov
push
jmp
jmp
xorl
cmp
xor
cmp
stc
xor
test
xor
clc
push
pushl
popf
pushf
pushf
pushl
ret
pushf
pushf
mov
call
push
pushf
mov
pushf
lea
movl
pushf
xchg
push
pushl
ret
movzbw
pushf
nop
jmp
jmp
pushf
call
mov
jmp
mov
mov
mov
pop
mov
movw
movb
pushl
ret
xchg
repz
jns
std
dec
xchg
mov
imul
cmp
ret
test
push
xchg
icebp
addb
imull
adc
insb
fdivrs
call
adc
mov
data16
scas
popf
or
dec
xchg
add
jl
loope
inc
sub
xor
shll
lods
scas
jae
or
cmp
lods
xchg
cmp
jge
sahf
out
xchg
cld
mov
and
push
adc
aas
loopne
xor
xchg
xorl
adc
mov
lods
add
mov
jecxz
sar
mov
test
or
push
aam
push
popa
xchg
pop
pusha
sbb
or
inc
inc
mov
xor
sbb
jb
insb
xchg
inc
push
adc
inc
add
xor
sar
sbb
adc
jl
jae
jle
xchg
sbb
dec
leave
in
aad
sub
jae
ja
addb
aad
sub
pop
aas
push
in
pop
jb
mov
adc
inc
pushf
sti
ja
adc
mov
out
insl
mov
repz
cmpsb
stos
ss
enter
mov
ss
push
cmpsb
ds
pusha
push
mov
jns
scas
pushf
sub
sub
push
push
inc
int
mov
test
in
pop
scas
clc
and
cmp
adc
in
repnz
adc
aad
sub
clc
mov
std
fldcw
clc
nop
xor
cs
sahf
sbb
mov
shr
fldenv
outsb
pop
cltd
jg
lods
outsl
or
sub
pop
push
xor
sub
add
dec
mov
sti
lds
scas
or
sub
shlb
add
rolb
mov
ret
nop
lods
pop
popf
les
ss
arpl
lret
xlat
jge
sbb
mov
pop
shll
ss
pop
insb
or
loopne
or
fmul
int3
mov
jns
ja
add
stc
sbb
sahf
or
jecxz
adc
sahf
in
and
jmp
push
mov
jns
outsl
dec
loope
mov
test
dec
inc
jg
push
loope
test
mov
pop
test
lahf
int3
mov
stc
andl
jle
add
jnp
pop
xlat
pop
loopne
sub
xor
lock
push
ret
xor
std
inc
fstps
mov
adc
fadd
lahf
nop
clc
ret
pop
out
push
add
popa
dec
dec
pop
adc
repz
sbbb
mov
sub
loop
lock
xchg
xor
test
arpl
xchg
ret
call
mov
pop
xchg
jl
ret
ss
adc
or
int3
sbb
imul
addr16
dec
test
stos
cmp
xchg
ret
push
dec
clc
fisubrl
fnstcw
scas
pushl
insl
js
jne
std
mov
lods
xlat
mov
inc
push
inc
xchg
sarl
or
and
mov
cmp
jo
mov
xchg
jb
xor
adc
pop
xlat
and
adc
std
rcl
dec
sbb
pop
xchg
fs
mov
mov
push
mov
xchg
and
mov
pushf
jl
fwait
je
cs
inc
dec
cmp
and
das
cli
jb
mov
push
dec
dec
leave
jae
into
pushf
mov
mov
cmc
js
rcrl
mov
xor
sbb
or
cmp
jo
aam
cmp
add
lcall
mov
dec
or
fildll
push
cmpsl
rcrl
sub
ret
push
stc
test
outsl
cmp
mov
ret
dec
or
xor
jno
push
and
iret
inc
add
sbb
push
testl
incl
sbb
test
xchg
cmpsl
and
dec
jle
cltd
pushf
add
dec
outsl
insl
loope
push
lret
xor
fstl
jecxz
cmpsl
cltd
sti
lea
sbb
cmp
jnp
jg
xor
addb
mov
cld
aam
fcomps
hlt
stc
add
cmp
out
push
inc
add
pop
mov
movsl
jno
testb
push
jmp
or
sbb
or
pop
pop
popf
jl
xchg
or
sub
and
mov
add
out
stos
xor
mov
mov
add
imul
xchg
cmp
xor
mov
cmp
out
dec
sbb
xor
in
icebp
xchg
mov
call
insb
mov
push
mov
inc
fcoml
je
mov
inc
test
addr16
push
insl
dec
push
push
jnp
adc
sbb
out
adc
adc
popa
xor
dec
xor
mov
mov
jmp
pusha
nop
push
push
pushl
pushf
mov
movzbw
pushf
mov
push
jmp
lea
push
push
pusha
xchg
movb
mov
pushl
ret
jmp
jmp
push
bswap
bswap
lea
movsbw
jmp
pusha
pusha
pushf
xchg
mov
pushf
pushl
ret
xchg
lea
movsbl
seta
mov
jmp
bswap
call
mov
movw
jmp
pop
mov
bswap
pop
nop
jg
not
pop
pushf
pushl
pusha
xchg
call
movl
lea
movb
xchg
movb
pushl
ret
push
shll
les
pusha
xchg
movb
movl
pushf
pushl
ret
lea
call
mov
call
push
mov
pop
setge
mov
movb
jmp
call
pusha
jmp
mov
pushf
pushf
lea
push
pushf
pushf
push
xchg
push
movb
mov
mov
pushl
ret
mov
pushf
pop
jmp
mov
mov
call
mov
mov
movsbl
movb
setne
call
pushf
mov
pushf
jmp
movb
call
xchg
push
pushl
pushl
ret
pushf
mov
mov
pusha
pushf
lea
movb
call
call
mov
jo
out
das
jno
std
cmp
cmpsb
repz
sub
int3
imul
sub
dec
mov
jle
arpl
movsl
div
inc
stos
mull
ret
pop
adc
lret
mov
loopne
pusha
mov
mov
inc
xchg
insl
add
aas
or
xor
or
jmp
and
mov
popa
dec
xchg
ljmp
in
loop
int3
pop
xchg
gs
mov
or
fistl
inc
je
xlat
cwtl
insl
jp
gs
cmp
in
clc
pop
rcrb
je
sub
shll
sub
inc
bound
jmp
inc
mov
or
pop
sbb
xchg
movsl
adc
adc
adc
fildl
sub
pop
inc
pop
pop
cmpsb
out
xchg
leave
fwait
push
and
jmp
inc
inc
or
push
inc
push
mov
call
pushf
mov
call
push
mov
pushf
jmp
pusha
pushl
pusha
xchg
pushf
pushl
ret
jmp
xchg
movb
mov
movb
pushl
ret
call
xchg
pushf
xchg
not
setp
mov
push
pushf
mov
jmp
jmp
pushl
pushf
jmp
cmc
xor
stc
xor
bt
pushl
popf
pusha
pushf
pushl
ret
call
pushf
mov
movsbw
mov
jmp
pushf
call
call
jmp
xchg
movb
pusha
push
pushf
pushl
ret
xchg
movb
pushl
ret
xchg
pushf
pushl
ret
lea
jmp
xchg
pushl
mov
mov
mov
pushl
ret
xchg
pusha
movb
push
pushl
ret
pushf
lea
pushf
pushf
mov
mov
xchg
pushf
pushf
mov
pushl
ret
jmp
movb
lea
call
pushl
push
mov
call
mov
pusha
jmp
movw
pusha
lea
pushf
movb
push
movw
xchg
movb
movb
pushl
ret
lea
pushf
pushf
mov
xchg
mov
pushl
ret
pushf
pusha
xchg
pushf
movw
pushf
pushl
ret
jmp
mov
call
pushf
pushf
mov
jmp
mov
call
push
and
or
pop
mov
pushl
push
push
pushl
ret
pushf
call
pushf
pusha
xchg
pushf
mov
pushl
ret
push
lea
jmp
nop
pusha
pop
mov
pushf
pushf
xchg
pushf
pushf
xchg
movzbw
pushf
movzbw
lea
mov
push
call
call
push
pusha
jmp
call
pushf
movsbw
movzbw
mov
pushf
mov
mov
push
mov
pushf
push
lea
call
movw
xchg
pushl
pushf
pushl
pushf
pushl
ret
mov
lea
call
push
pusha
mov
lahf
pushf
mov
bswap
mov
jmp
jmp
xchg
push
mov
pusha
call
call
pusha
movl
mov
xchg
movb
mov
jmp
pusha
push
pushf
lea
call
call
lea
mov
jmp
not
lea
call
xchg
pushf
push
mov
movl
pushl
ret
lea
jbe
mov
call
push
and
es
iret
idivl
sti
js
sub
lds
xchg
sub
bound
jo
inc
xchg
fimuls
dec
push
out
imul
aas
mov
std
mov
inc
push
pop
mov
clc
or
insb
arpl
or
and
jb
mov
es
paddb
push
aad
lcall
fsubl
push
dec
movsb
adc
mov
int3
jb
leave
mov
ss
int
out
popf
and
xchg
jmp
jbe
jl
pop
push
lret
xchg
sbb
cwtl
int
pop
jmp
add
inc
ret
cmp
roll
and
shll
mov
fisubrs
out
mov
add
mov
cmp
icebp
xor
insb
pop
lods
cwtl
int
push
xor
sub
mov
adc
mov
xorl
addb
xor
sub
stos
xchg
std
leave
shll
push
jns
arpl
xchg
je
bound
jne
fsubrl
add
push
mov
int3
lcall
pop
mov
fucomp
or
mov
inc
pop
test
lds
scas
mov
inc
and
gs
aaa
cmp
jmp
push
mov
hlt
sbb
cld
lret
mov
add
ja
inc
mov
insb
sbb
sub
mov
xchg
sbb
repnz
mov
push
ds
inc
and
and
adc
in
movsl
cli
inc
inc
mov
movsl
dec
in
lock
int
xchg
sub
and
nop
incb
add
and
lcall
testl
gs
xchg
je
paddw
test
lods
sahf
inc
jle
imul
push
mov
jno
imul
xchg
out
cmp
cmpsl
dec
std
arpl
in
or
mul
scas
mov
adc
xchg
dec
cmc
cmp
sub
add
imul
and
cmp
cmp
push
addr16
add
data16
das
loopne
test
add
jl
cwtl
int
test
mov
gs
lret
aad
or
fucomp
inc
jae
or
std
pop
stos
and
dec
xchg
int3
xchg
arpl
mov
lahf
cmp
mov
int
sub
pop
xlat
in
int3
or
jnp
das
mov
jmp
jge
push
js
nop
fidivrl
or
out
repz
lcall
jl
insl
mov
mov
mov
movsb
ret
cltd
movsb
inc
test
pop
push
xor
fstl
gs
jge
nop
into
mov
call
cmp
mov
jne
out
out
cmp
popf
mov
sub
cmp
dec
fists
jbe
lret
fimull
mov
adc
orl
pop
addr16
push
push
insb
cmp
into
push
pop
cltd
dec
pop
adc
into
add
int3
cld
stc
je
sub
mov
xchg
pusha
std
pushf
cmp
into
sub
or
in
fists
test
xchg
loop
lea
jo
pop
shl
ret
cltd
push
insb
pop
xchg
hlt
adc
js
inc
jmp
jge
das
push
in
shlb
aas
or
cmp
stos
inc
mov
jb
inc
adc
cmp
sti
mov
sbb
mov
mov
sahf
movsb
test
int
fnsave
in
xor
pop
rep
popa
bnd
mov
leave
cmp
ja
pop
sub
into
insb
ja
pop
mov
adc
xchg
arpl
push
test
or
and
jns
and
mov
sbb
dec
stc
into
pop
mov
mov
nop
fdivs
adc
fldt
cwtl
mov
loope
dec
out
xchg
ljmp
cmc
das
adc
sub
xlat
loope
leave
push
movsl
repz
mov
pop
pusha
mov
xor
inc
push
cmp
stos
push
sub
xlat
sub
subl
clc
pop
mov
stc
stos
mov
xor
and
lea
bswap
pop
mov
pushf
jmp
xchg
push
mov
push
pushl
ret
mov
call
mov
movw
call
lea
jbe
pusha
mov
pop
movsbw
setp
mov
pushf
push
mov
jmp
bswap
pusha
mov
setp
nop
movzbw
pop
mov
lea
jbe
pushf
pushf
xchg
movb
jmp
jmp
push
pusha
pushf
jmp
call
mov
mov
not
mov
mov
mov
push
pushf
mov
lea
movb
mov
xchg
mov
push
pushl
ret
push
pushf
popl
call
mov
pushf
push
lea
push
call
lea
push
pushf
pushl
ret
mov
movw
pushf
mov
jmp
lea
push
bswap
push
mov
pushf
bswap
movzbw
movsbw
mov
pusha
pushf
lea
pop
lea
jmp
lea
call
call
cmp
addr16
outsl
cmp
xor
mov
movsb
mov
mov
jecxz
mov
mov
lds
shlb
jbe
inc
or
in
jno
call
popa
cmp
jg
aaa
fldt
jbe
adc
in
pop
cmpsb
adc
lret
dec
push
test
lds
mov
sbb
testl
mov
pop
gs
jle
mov
data16
mov
fistps
addr16
mov
test
inc
and
jp
in
inc
out
ds
mov
jl
decb
es
or
push
sub
clc
add
shlb
ret
push
fdivrl
and
mov
pusha
add
aas
sub
pop
sub
sbb
pop
pop
stc
lods
clc
xor
ja
fisttps
cmp
and
int
jae
test
in
mov
jl
mov
movsl
cli
xor
mov
loopne
fistpll
mov
lret
popl
push
add
xchg
jo
pop
inc
cli
pop
mov
test
outsb
cmp
insb
scas
enter
push
loopne
jecxz
jg
xor
push
arpl
ja
movsl
pop
outsb
add
std
cld
data16
pop
notb
fadds
leave
test
push
xchg
cmc
jmp
es
mov
jne
cmpsl
fnstsw
sbbb
pop
push
adc
pop
jne
adc
xor
shl
sbb
rcrb
sub
and
repnz
xor
jno
or
cli
bound
xorb
or
jecxz
push
pop
outsb
test
cmp
sbb
pop
push
or
add
scas
pop
mul
xor
pop
xorb
xchg
mov
push
push
mov
sub
stos
adc
sahf
jno
out
sub
ss
dec
into
fdivs
scas
push
push
test
sub
xchg
jne
subl
repz
in
hlt
and
dec
ja,pn
xchg
mov
lock
sbb
pop
in
jbe
add
xchg
es
sbb
ret
pop
cltd
stos
fcmovu
add
cmp
cmpsl
shlb
add
adc
inc
push
outsl
inc
pop
aam
push
or
jo
cmp
mov
and
bswap
fisubs
lock
add
fcomip
xchg
lcall
dec
jne
xor
inc
pop
mov
cmp
mov
add
mov
mov
iret
stos
inc
lods
jle
mov
push
sbb
sub
or
and
ret
ja
icebp
xor
or
xchg
pusha
fdivrs
lea
lret
add
dec
in
sahf
repnz
ret
mov
adc
cmp
sahf
fnstenv
push
xor
lret
lret
aad
sub
gs
enter
mov
mov
pusha
xor
sbb
test
or
scas
pop
mov
inc
loop
lods
mov
daa
jne
test
dec
hlt
adc
js
mov
ja
xchg
mov
out
mov
xchg
jmp
pop
or
rcr
lods
xchg
imul
xor
shrb
xor
js
lret
stos
adc
scas
mov
adc
sarb
push
jnp
inc
mov
inc
inc
mov
negl
or
dec
xchg
rcr
sub
jecxz
push
out
push
sub
and
push
imul
mov
or
jo
fucomp
lock
les
dec
mov
test
push
adc
aaa
adc
imul
movsl
push
pop
xchg
imul
fwait
mov
nop
and
sbb
cmp
pusha
xchg
jb
js
mulb
ds
adc
movsb
ret
push
int3
xchg
xor
mov
add
lods
fcomps
insb
jne
sub
fsubl
push
es
cmp
jmp
fisubrl
mov
popa
das
push
aaa
sub
aas
mov
mov
xchg
bound
or
jb
inc
enter
aaa
inc
shr
inc
ret
stc
pop
es
add
ja
sbb
dec
cmpsb
adc
popf
xchg
js
dec
cmp
fildll
movsb
lods
adc
xor
aam
jne
mov
scas
daa
add
leave
dec
fwait
mov
mov
dec
xchg
je
and
popa
sahf
testl
sbb
ret
icebp
cs
or
jecxz
pop
mov
bound
dec
repnz
addr16
pop
movsl
cli
xor
outsl
push
enter
xor
inc
imul
mov
or
and
ljmp
mov
aad
imul
add
rcrl
stc
dec
mov
mov
jmp
call
insb
add
push
mov
push
loope
mov
dec
outsl
cmc
inc
cltd
jecxz
iret
pushf
fiaddl
cmpsb
sbb
xor
dec
int
and
sub
jle
es
mov
movsb
mov
mov
xchg
les
jl
push
loopne
dec
xchg
jl
scas
rclb
sarb
mov
lods
mov
das
cli
int
push
repz
push
movl
cmpsb
mov
fmulp
adc
cmp
mov
or
repnz
aad
or
test
xchg
pop
movsb
int
pop
cmp
fcomi
pop
add
adc
dec
xchg
in
dec
fdivrs
aaa
sahf
imul
add
mov
in
mov
inc
mov
lret
adc
sti
add
push
movsl
pop
push
pop
add
and
dec
out
sub
xchg
fisttpl
and
fs
lods
sub
jns
xor
xchg
cmpb
das
scas
sti
jl
xchg
fisubs
sub
push
pop
lds
in
ss
test
cwtl
fistpl
fisubrs
inc
sbb
xchg
sbb
repnz
jmp
xlat
mov
loop
push
cmpsb
fisttps
pop
xchg
cmp
gs
lods
pop
fstpt
stos
mov
inc
pusha
repz
and
or
xor
ret
icebp
aas
dec
scas
std
pusha
xchg
pop
jg
imul
adc
hlt
dec
push
fwait
cld
sub
add
xchg
repnz
popf
mov
sbb
inc
ljmp
pop
lock
jle
cmp
or
stc
pop
loopne
ret
arpl
adc
scas
aad
inc
pop
adc
jno
lea
leave
scas
jp
fsubp
cs
int3
xor
repz
xchg
out
lds
sbb
fidivrs
lret
into
dec
mov
pop
push
push
out
pop
pop
out
cmp
xor
add
mov
outsl
push
push
adc
fbld
mov
mov
fadds
std
inc
sarl
xchg
jp
sub
repnz
adc
mov
std
pop
mov
loop
fs
orb
mov
mov
les
insl
mov
xchg
ljmp
fsub
fst
pushf
std
orl
lods
sub
adc
lret
adc
loop
xor
jecxz
adc
dec
mov
push
pop
push
adc
adc
mov
adc
inc
sbbb
add
arpl
pushl
movups
ss
xlat
jmp
sub
dec
pop
fcmove
loopne
xchg
loopne
subl
aas
cltd
xchg
cwtl
je
mov
pop
faddp
enter
call
movsb
pushf
jle
fldenv
mov
jge
sub
mov
jb
jb
add
sbb
push
sarl
out
mov
mov
and
mov
movb
mov
movw
pushl
ret
movb
mov
pushl
call
or
fs
jns
push
mov
mov
pusha
call
movzbl
sets
mov
pop
mov
jmp
call
pushf
mov
pushl
lea
jle
push
movb
lea
push
xchg
push
push
pusha
pushl
ret
pusha
pusha
call
xchg
pushf
pushf
push
movb
pushl
ret
movl
mov
push
pusha
pushf
lea
jmp
xchg
jmp
lret
repnz
pop
sar
or
push
xlat
sbb
and
pop
cmp
mov
sub
mov
insl
xchg
cmp
les
popf
fstpt
jne
xchg
add
xchg
jg
sbb
orl
xchg
int
xchg
fs
imul
rolb
cmpl
into
iret
insl
out
and
cmc
or
xor
std
clc
ret
jne
repz
lahf
push
sub
test
scas
cmc
sub
mov
push
mov
jne
inc
sysexit
fadds
inc
add
pop
test
pop
sar
fsubs
xchg
int3
in
sbb
cld
std
int
aas
sub
fildl
mov
nop
lret
xchg
mov
push
add
cli
pop
jmp
ret
pop
sbb
push
jle
adc
icebp
sbb
cmp
filds
daa
dec
iret
or
push
xor
dec
sbb
xchg
xlat
adc
pop
insl
push
outsb
loope
ss
pop
ret
jno
jp
adc
or
and
sarb
loopne
insb
mov
lds
sbb
sbb
subl
clc
fstpl
jo
subl
xor
or
rolb
dec
mov
mov
cmpsl
repnz
add
add
orl
ljmp
aaa
movsb
movsl
inc
loop
xlat
cmp
aas
dec
jge
jp
sbb
fsub
les
mov
pop
scas
xor
push
iret
mov
shl
dec
std
lcall
lahf
push
push
and
jle
adc
aam
lret
xor
div
xchg
sbb
inc
mov
sbb
jle
fnstcw
or
push
loope
dec
jmp
pop
sar
inc
xchg
loope
jns
inc
cld
mov
and
and
or
into
and
lret
or
push
and
das
shlb
pop
jae
mov
inc
jbe
sbb
lahf
jmp
test
inc
lods
jne
sbb
rcl
clc
out
mov
jmp
jo
and
add
sub
sub
ret
jp
fisubrl
cmpsb
inc
and
aas
mov
xor
repz
inc
dec
sub
idivb
push
test
inc
cmc
fistps
add
dec
mov
mov
mov
sbb
outsl
dec
sbb
ret
shlb
dec
mov
imulb
lahf
mov
mov
movsl
xor
dec
pushf
adc
popa
fs
test
pop
push
pop
adc
xor
imul
sbb
sub
fsubs
int
mov
idivb
out
arpl
mov
stos
rcrb
aaa
sarl
xchg
ljmp
leave
arpl
and
dec
out
bound
and
rcrb
jp
gs
enter
jge,pn
les
pop
xor
push
sub
ss
ja
cmpsl
and
outsb
imul
das
mov
imul
xchg
daa
dec
jg
cmpsl
inc
adc
inc
dec
sub
adc
pop
cmpsl
xor
std
sub
sbb
shll
cmp
mov
insl
push
jp
xchg
js
or
add
push
int3
cli
stos
pop
mov
xchg
dec
jno
dec
dec
inc
cmp
rcrl
lods
pop
mov
mov
cmpsb
loopne
pop
adc
inc
js
mov
mov
outsl
ja
push
push
push
scas
dec
xor
adc
adc
out
setp
lret
add
xchg
add
push
cwtl
cwtl
movsbw
mov
pushf
mov
push
lea
pusha
mov
pushf
xchg
pushl
pushl
ret
pusha
lahf
nop
movsbw
pushf
mov
pushf
movb
pushf
pushf
xchg
call
pushf
nop
pushf
pusha
jmp
mov
pushf
pushf
mov
push
mov
lea
js
pushf
pushf
movw
lea
push
jmp
pushf
mov
call
xchg
movw
movb
pushl
ret
mov
push
jmp
mov
mov
xchg
lea
je
pushf
mov
pusha
bswap
pushf
mov
pushf
mov
call
call
push
movsbw
pusha
nop
movsbw
not
bswap
mov
pushf
call
call
jge
xchg
jmp
pushf
pushf
pusha
lea
pushf
push
lea
jo
push
bswap
bswap
mov
push
mov
pushf
call
lea
movb
xchg
movb
pushl
ret
not
push
setnp
mov
movsbl
not
movsbw
mov
mov
mov
pushf
pushf
mov
pushl
ret
pushf
pushl
mov
xchg
jmp
mov
xchg
setle
jmp
pushf
call
call
movzbw
pushf
nop
movzbw
pusha
mov
jmp
mov
mov
call
push
push
mov
lea
jg
bswap
mov
pusha
lea
lea
je
mov
movsbl
push
lea
mov
pusha
jmp
lea
pushf
xchg
pushf
pushl
ret
jmp
not
mov
push
pushl
ret
call
push
call
mov
xchg
movb
pushl
pushl
ret
pusha
jmp
pushf
pushf
mov
pushf
lea
pushf
movb
jmp
xchg
push
pushl
ret
test
push
sar
enter
xor
mov
movsb
ret
shlb
push
imul
test
add
lret
in
inc
sbb
jecxz
push
lcall
add
repnz
mov
mov
pop
adc
adc
rorl
or
fs
push
push
cmp
cli
fisubrl
inc
fdivrp
mov
cmpsl
imul
std
cld
out
mov
mov
jecxz
or
jno
das
imulb
les
and
sbb
fcomps
ljmp
sar
out
mov
loope
xor
in
inc
sbb
cmp
gs
sub
inc
movsl
add
pop
xchg
ret
push
imul
jmp
push
mov
add
sar
popa
scas
jb
je
jb
in
sbb
jp
pop
test
cmpsl
mov
and
std
push
mov
sub
test
dec
inc
addl
pop
xlat
sbb
mov
fsubrl
mov
add
icebp
lahf
mov
cmp
jp
mov
icebp
inc
ljmp
out
add
adc
xchg
testl
sahf
ret
into
into
rol
push
das
xchg
ffreep
cmc
test
cmp
cmp
out
lds
jno
push
loopne
sbb
pop
mov
gs
lcall
bound
and
stos
in
or
shlb
testb
dec
pop
repz
and
xor
sbb
inc
jb
mov
or
mov
sub
testl
and
xor
xchg
pop
mov
xchg
into
xchg
call
test
mov
push
push
pop
out
insb
mov
xor
cmc
loope
andb
std
inc
push
hlt
pop
out
aam
in
sub
xor
nop
jecxz
pop
push
sar
or
xchg
fcomps
lds
jge
push
mov
outsl
xchg
popf
repz
mov
cmc
es
sub
test
test
and
in
fidivl
mov
leave
arpl
enter
pop
insb
fdivs
jl
aaa
std
ficomps
aas
mov
cmpsb
ret
sbb
xchg
jmp
push
or
insb
inc
nop
inc
add
mov
test
xchg
rclb
mov
dec
insl
dec
cmp
mov
sbb
movsl
dec
lret
mov
pop
shl
lock
jns
mov
cmc
inc
or
jne
imul
adc
movl
push
mov
shrb
sub
daa
hlt
jns
cmpsb
mov
push
mov
inc
int
in
sbb
cmp
icebp
movsb
int
imul
shll
jns
cli
jb
punpckldq
or
and
push
adcl
sahf
sub
cwtl
rcrb
leave
mov
mov
mov
hlt
shrl
lcall
mov
sbb
aam
pushf
sti
xchg
daa
hlt
sub
movsl
in
mov
xchg
out
es
or
scas
les
insb
les
out
push
adc
xor
mov
pop
scas
aad
adc
mov
in
out
mov
or
push
jns
xchg
push
push
xchg
add
jnp
jo
inc
rcrl
fldenv
ret
adc
aam
pop
nop
pop
ret
nop
movsb
insb
sbb
jmp
out
sbb
mov
popf
xor
fidivrs
xchg
sub
xchg
int
je
cmpsb
jae
or
add
push
pop
fsubl
mov
jbe
or
and
push
jns
pop
outsb
test
movl
jmpw
les
sub
les
ja
cwtl
in
xor
ss
jne
fsub
push
mov
test
jnp
dec
test
jmp
mull
lea
test
call
cld
mov
je
pop
imul
pop
fldt
xor
add
int3
mov
jl
aas
outsl
stos
js
notl
les
sub
out
mov
shlb
xchg
pushf
pushl
ret
pushl
xchg
movsbl
lea
movzbl
movsbw
mov
pushf
pushl
pushf
movw
lea
mov
mov
call
movzbl
nop
movzbw
pop
call
xchg
mov
jmp
xchg
jmp
call
pushl
mov
call
jns
pop
dec
xchg
movb
pushl
ret
push
mov
nop
pushf
pusha
lea
js
push
not
pusha
setnp
pusha
mov
push
push
push
call
pusha
pusha
xchg
jmp
mov
pushf
lea
movl
xchg
mov
pushf
movb
pushl
ret
pushl
lea
pushf
jmp
mov
mov
movw
jmp
xor
test
pushl
popf
pushf
push
pushl
ret
xchg
pushl
pushl
ret
mov
movb
push
pushl
ret
jmp
mov
movzbl
movsbw
bswap
mov
mov
movl
pusha
mov
mov
pushl
call
mov
jmp
call
dec
sub
push
xlat
add
mov
add
xor
inc
sbb
jl
mov
cmp
pop
pop
mov
popa
mov
out
and
ljmp
out
mov
pop
jnp
in
push
shll
mov
rol
mov
dec
pop
lods
lea
mov
adcb
cmpb
push
cld
in
mov
cs
loopne
nop
xchg
mov
cmp
gs
je
ds
mov
ja
xor
icebp
mov
mov
lcall
das
inc
xchg
mov
pop
or
ficoml
lea
insl
in
cs
iret
inc
rcrl
repnz
es
pushf
imulb
aad
arpl
sub
push
jge
aaa
mov
lock
stos
inc
fdivrs
sub
xchg
xchg
cmc
andl
mov
xchg
push
daa
bound
addl
jle
inc
mov
jecxz
lahf
jg
test
addb
pushf
sbb
jl
mov
hlt
push
fnsave
or
ret
add
clc
inc
lcall
hlt
mov
scas
stc
push
jp
outsl
adc
pushl
jecxz
mov
push
fcomps
fldenv
mov
add
movsb
loope
sbb
sbb
sbb
mov
sbb
and
into
lea
or
leave
xor
dec
dec
fcomps
push
sub
sbb
adc
adc
mov
out
nop
and
sub
lods
lods
mov
adc
jmp
andl
lods
pop
das
dec
daa
pop
and
sbb
std
popa
and
mov
and
cld
in
cmp
mov
ror
and
add
add
mov
negb
cmp
out
sti
insb
mov
js
lock
and
das
je
cmc
aam
lods
inc
sbbl
lods
loop
fnstsw
mov
push
fwait
cs
cmp
or
cmp
bound
push
dec
mov
adc
imul
lods
lock
sbb
cmpb
xchg
mov
and
sbb
div
pop
inc
cmc
inc
push
and
addb
imul
add
pop
loopne
mov
xchg
test
into
cltd
xchg
test
pop
movsl
mov
ret
lods
out
pop
cmp
sti
add
inc
mov
inc
fdivs
mov
push
in
ss
adc
testl
cmp
iret
test
in
fsubrp
mov
inc
test
int3
dec
and
dec
rorl
push
mov
jno
rcr
test
enter
dec
xchg
and
push
cltd
enter
dec
jno
cmp
pusha
loopne
cmp
mov
fisubl
cmp
mov
add
jb
push
push
mov
push
mov
imul
push
mov
mov
push
add
mov
fidivl
adc
cld
je
test
sub
ds
push
cs
loop
int3
out
xor
xchg
push
pop
das
lock
cmp
lcall
iret
rorb
inc
fists
cmp
adc
shll
sarl
or
stc
add
ret
mov
mov
or
inc
decb
push
enter
sbb
push
push
int
add
cli
ret
insb
jo
xorl
out
leave
adc
cli
cwtl
loop
push
roll
outsb
add
add
int
pop
xchg
pop
sub
leave
aaa
lds
sub
or
cmp
fnstenv
sbb
inc
out
cmc
mov
pushf
arpl
in
daa
jno
pop
ds
sahf
cmp
lds
cmp
aad
loope
lret
or
sub
mov
loop
lods
daa
adc
addr16
rorb
xchg
fdivrl
in
xchg
dec
jg
mov
jno
cmp
sub
pop
nop
pop
ljmp
dec
inc
pop
cmp
das
rolb
scas
push
dec
add
mov
gs
ret
lcall
out
and
push
jns
mov
jge
stc
sarl
cs
iret
inc
cltd
and
pushf
or
loop
loope
addr16
js
and
jp
in
in
mov
and
mov
scas
jb
push
rcl
scas
lahf
in
pop
cwtl
loop
xchg
clc
mov
es
cmp
xor
pop
in
push
negl
loope
movsb
fs
popa
popf
mov
icebp
hlt
ret
divl
sbb
mov
std
dec
sub
xchg
mov
sti
add
lcall
adc
xchg
ret
jg
add
outsb
fimull
daa
test
cmp
mov
dec
rcrl
push
mov
ss
scas
mov
insb
xor
aaa
out
insl
xorb
cli
gs
dec
or
sub
add
adc
xchg
dec
cltd
sub
dec
jns
loop
mov
sahf
ss
pushf
pop
lret
mov
out
add
fs
mov
fwait
cmp
add
fisubl
mov
test
xor
and
lahf
pop
and
push
addb
pusha
stos
addr16
ss
jbe
xorl
cltd
dec
fnstsw
cmc
out
icebp
out
mov
shl
lea
pop
test
fisttpll
mov
and
sub
rcrl
pop
or
lods
pop
sub
stc
imul
test
and
jl
int3
cmpsb
pusha
loopne
inc
or
or
loope
cmpsl
rorb
mov
scas
shlb
xor
inc
in
sbb
cmc
mov
fldl
rcll
xchg
jecxz
data16
pop
mov
mov
mov
mov
cmc
sarb
push
xor
cwtl
adc
or
mov
out
ficomps
xor
adc
pop
into
jl
sub
imul
cmp
les
sub
fsubrl
jle
movsb
xchg
jmp
mov
mov
mov
pop
loopne
fs
jl
fcompl
mov
push
outsb
push
mov
dec
sub
loop
dec
lcall
and
jb
test
add
cwtl
stc
xchg
mov
mov
cmp
inc
mov
aam
push
out
push
cmp
clc
inc
jbe
push
adc
or
sub
mov
aad
mov
shll
js
std
insl
addr16
mov
imul
mov
xor
inc
in
mov
mov
fcomps
xlat
je
mov
xchg
cmpsb
packsswb
out
mov
cld
test
in
mov
mov
lahf
addr16
test
dec
data16
sub
adc
add
fsts
pusha
lock
xchg
aam
inc
outsb
mov
xchg
loop
pop
mov
test
jmp
push
sbb
sub
call
adc
mov
and
add
and
aaa
sahf
xchg
imul
xchg
push
rcl
push
rolb
in
adc
bound
jge
test
iret
ror
dec
push
inc
fs
es
xchg
out
call
pushl
pop
shl
shrb
mov
push
aam
xor
int3
mov
pop
xor
nop
lds
ljmp
jp
fwait
jns
add
and
cmp
inc
and
pop
pushl
lea
movb
push
pushl
ret
mov
jmp
insl
je
jle
push
xchg
pusha
mov
jmp
movb
pusha
nop
mov
jmp
lea
push
jmp
bswap
mov
mov
movb
pushf
xchg
push
mov
call
pushf
xchg
lea
mov
movl
pusha
jmp
xchg
pusha
mov
pushl
ret
pushf
call
jmp
movzbw
bswap
nop
bswap
mov
pushf
pushl
xchg
pusha
pushf
xchg
lea
lea
lea
mov
pushf
call
call
call
jmp
mov
jbe
mov
pushf
mov
call
pushf
lea
movb
xchg
pusha
pushf
mov
pushl
ret
mov
jmp
mov
jmp
jmp
pushf
lea
lea
lea
not
mov
push
call
lea
push
pushl
jmp
jmp
jnp
pushf
pusha
pushl
lea
jmp
jmp
nop
call
bswap
pop
pushf
pushl
ret
call
xchg
lahf
lahf
mov
jmp
push
xchg
movb
movw
pushl
ret
iret
xor
push
cmpsb
add
inc
pop
add
xchg
call
jmp
jmp
call
call
pushf
pushl
xchg
push
pushf
mov
pusha
pushl
ret
movb
lea
pushf
jmp
pushf
call
ret
inc
sar
xchg
arpl
jbe
stos
imul
je
in
xchg
xchg
cmp
add
cmp
cmp
jle
adc
movsl
cmp
xchg
ret
mov
jae
lret
mov
jmp
pop
movsb
pusha
insl
jbe
scas
add
out
or
pop
inc
mov
aad
mov
cmp
add
mov
sbb
stc
cld
bnd
sbb
out
cs
cs
xchg
cld
jle
repz
repz
pop
outsl
fnsave
rorb
jecxz
ror
mov
aam
mov
cmp
call
mov
mov
or
insl
jmp
push
inc
int
fildll
inc
dec
sbbl
fwait
sbb
clc
cmpsb
add
cmp
jg
rcr
mov
add
in
mov
mov
push
xor
daa
pop
xchg
fcompp
inc
mov
sbbb
or
mov
mov
shll
lret
xlat
inc
mov
sub
adc
dec
mov
pop
arpl
call
dec
in
and
pop
cwtl
dec
scas
xor
enter
dec
dec
lahf
sub
cwtl
jmp
js
mov
dec
push
pop
mov
xchg
sub
jns
es
pushf
jnp
sbb
lds
cmp
lahf
cmc
mov
xlat
mov
sbb
pop
imul
insb
jae
push
dec
sbb
lds
push
imul
cld
pushf
dec
addr16
test
pop
lcall
push
push
pop
and
and
mov
and
push
pusha
xchg
in
xchg
ljmp
lods
sar
and
push
inc
push
xor
outsb
cmp
and
jb
pushf
lea
pushf
call
mov
mov
lea
jle
pushf
lea
pusha
pusha
pushl
pushl
ret
bswap
mov
pusha
jmp
mov
mov
movzbw
movzbw
jmp
mov
pushl
movb
movb
jmp
lea
jns
pusha
nop
pusha
push
call
xchg
mov
movb
mov
movb
pushl
ret
pusha
xchg
pushf
mov
jmp
bswap
mov
call
push
mov
pop
not
call
push
pushf
lea
call
pushf
call
call
lods
inc
clc
jecxz
adc
add
mov
jmp
lea
call
push
pusha
pushf
movb
nop
pushf
xchg
movzbw
jmp
mov
setle
movsbw
mov
lea
jbe
pusha
pusha
movl
mov
jmp
mov
pushf
pushf
push
lea
call
in
addr16
push
mov
pushf
pusha
mov
call
lea
pushf
mov
xchg
push
pushl
ret
mov
not
not
mov
call
call
xchg
mov
movb
pushf
push
pushl
ret
jge
pusha
push
pushf
nop
pushf
pushl
jmp
bswap
lea
pusha
nop
lea
call
jmp
mov
call
push
lea
pushf
jmp
pusha
lea
mov
xchg
mov
pushf
pushf
mov
pushl
ret
jmp
call
jmp
movb
lea
jo
push
mov
lea
pop
movzbl
mov
call
push
call
mov
mov
mov
movb
jmp
xchg
movb
xchg
pusha
movsbl
push
mov
pushf
mov
pushf
movb
movb
lea
jmp
mov
pusha
bswap
lea
jbe
setge
mov
pushf
movb
pushl
lea
call
pushf
push
xchg
movb
pushl
ret
mov
mov
lea
call
movsbl
movsbl
bswap
not
mov
pushf
pushl
push
call
call
call
push
xchg
mov
movsbw
call
call
movzbw
pop
pushf
movb
pushl
ret
jmp
pushf
jmp
push
pusha
xchg
lea
jl
push
xchg
lea
pushf
movzbl
mov
mov
mov
mov
movb
mov
pushf
mov
lea
jmp
movb
xchg
pushl
pushf
pushl
mov
pushl
ret
pushf
pushf
nop
pushf
mov
mov
mov
lea
mov
lea
jg
lea
call
lea
push
push
push
xchg
push
pushl
ret
mov
push
movw
call
pusha
jmp
movzbw
bswap
nop
mov
bswap
mov
pop
call
pusha
xchg
call
pushf
xchg
pop
jmp
cmp
xor
movb
xor
test
clc
xor
clc
call
xchg
pushf
movb
push
pushl
ret
xchg
not
mov
mov
call
lea
pushf
call
lea
movl
mov
push
xchg
pushf
pushl
ret
mov
pusha
pushf
call
jmp
call
mov
pushf
mov
pusha
movl
movb
jmp
call
mov
call
movzbw
lea
nop
setno
pop
pusha
pusha
call
push
xchg
pop
pusha
call
call
jmp
mov
bswap
jmp
jmp
pushf
xchg
lea
mov
lahf
lea
mov
call
jmp
jmp
nop
push
mov
lahf
mov
pushf
pushf
call
not
pushf
movsbw
nop
not
pushf
movsbw
pusha
mov
jmp
push
push
movl
pushf
push
lea
jmp
movsb
mov
push
sbb
scas
push
adc
add
push
cmc
loopne
cmpsb
and
pop
jo
inc
xorl
mov
movsl
in
int3
xor
or
cltd
imul
in
lods
inc
mov
pop
jnp
sub
dec
push
data16
scas
scas
sahf
jp
shrl
jle
fucomi
pop
push
in
and
cwtl
xchg
popf
sahf
push
dec
lret
popa
ret
int3
frstor
dec
outsb
sbb
and
sub
mov
fadd
insl
test
loopne
cwtl
mov
mov
stos
insb
les
mov
cmp
xchg
pop
mov
std
jge
mov
cmp
xor
gs
out
and
adc
ljmp
das
ljmp
mov
push
inc
inc
sub
movsb
and
add
popa
inc
shl
mov
test
cmp
or
in
inc
sub
inc
movsb
imul
sti
push
xor
push
jecxz
cld
loopne
je
leave
test
arpl
push
and
push
add
jb
sub
xchg
cs
insb
arpl
lods
insl
adc
imul
cs
mov
adc
ljmp
rorl
loopne
mov
mov
bound
sub
mov
insl
aas
inc
sahf
pop
fmulp
sub
inc
outsl
dec
mov
jbe
rclb
je
jnp
xchg
jo
lret
out
pop
sbb
out
pop
cmpsb
push
movsl
out
jnp
xchg
adc
add
vpsubd
cmp
xor
push
mov
mov
lahf
mov
jg
fnstsw
pop
push
mov
jle
outsb
jbe
pop
pminub
daa
mov
or
enter
out
fdivl
mov
mov
cmp
shll
fsubl
std
xchg
cltd
rcrl
inc
push
movsb
adc
mov
cmp
or
push
xchg
sub
mov
fnstcw
or
add
mov
icebp
hlt
push
mov
pop
or
je
stc
frstor
jo
dec
mov
mov
mov
cli
sub
test
adc
subb
jnp
lea
mov
scas
ja
mov
sti
push
push
das
or
arpl
jae
sub
pop
mov
pop
mov
sbb
std
stc
in
push
pop
fisubs
or
clc
fnstenv
add
test
cmp
mov
pop
shll
inc
sbb
lods
repnz
in
mov
and
cmp
lds
icebp
das
jo
data16
mov
adc
xor
cli
bound
or
call
adc
mov
mov
sub
add
or
fidivl
lock
add
jns
push
outsb
loope
push
jbe
subb
xor
lret
sub
jp
pop
roll
sbb
out
mov
iret
add
push
lahf
xor
dec
ds
fiaddl
jmp
xor
jmp
int3
js
inc
push
pop
movsl
fbld
andl
out
cwtl
sub
insb
xchg
out
imul
loopne
incb
and
insl
aad
mov
sub
cmp
stc
ja
test
rol
and
cmovne
andps
or
ret
pop
movsl
push
sbb
xorps
push
jge
rolb
pop
fsubrs
outsl
out
dec
xchg
sbb
xchg
xchg
ret
adc
cmp
pop
testb
sbb
and
pop
mov
movsb
stos
mov
ljmp
incb
adc
dec
xchg
pop
pop
out
mov
flds
and
dec
out
aaa
xchg
imul
cmp
imul
adc
fisubrs
sbb
push
test
mov
ds
lods
rol
jp
jbe
sarl
xchg
lret
push
push
dec
adc
pop
push
inc
nop
notl
sbb
adc
inc
jle
xchg
lret
loop
adc
adc
push
adc
sti
rcrb
aam
jp
xchg
fsubr
in
pop
mov
dec
jbe
sti
sub
mov
idivb
cmp
pushf
std
lret
pop
mov
push
test
push
push
jmp
sbb
pop
movsb
jecxz
push
mov
bound
xlat
push
fldenv
xchg
pushl
push
push
pushf
pushl
ret
call
pushf
movb
xchg
push
mov
mov
pushl
ret
mov
jmp
setle
mov
call
mov
jmp
mov
lea
push
call
push
push
movzbw
jmp
lea
bswap
movsbw
nop
movsbw
setg
bswap
pop
push
call
lea
pusha
pushf
jmp
jmp
push
mov
movl
and
pushf
pushf
pushl
ret
xchg
movb
pushf
pushl
ret
mov
jmp
mov
jmp
pushl
lea
mov
push
lea
js
push
pushf
mov
mov
push
pusha
jmp
lea
nop
movsbw
pop
jmp
mov
mov
xchg
pushf
pushf
pushl
ret
nop
call
mov
pushf
call
jmp
push
pushf
lea
pushf
mov
bswap
mov
pusha
setge
mov
call
mov
push
mov
call
xchg
push
pushf
movb
pushl
ret
mov
call
pushf
pushl
mov
nop
pushf
mov
lea
pushf
bswap
setne
mov
push
jmp
jmp
xchg
movb
pushl
ret
xchg
pushf
pushl
ret
pushf
pushf
xchg
mov
pushl
ret
movzbw
pushf
nop
jmp
jmp
pusha
call
mov
call
inc
iret
xchg
or
push
lea
jmp
lea
movsbw
setle
pushf
nop
lea
lea
mov
jmp
call
lea
movl
pushl
jmp
mov
movw
mov
jmp
call
mov
movzbl
not
bswap
mov
pushf
movb
call
pushf
movb
movl
pusha
lea
jmp
call
push
lea
jmp
mov
movw
call
movzbw
nop
call
pushf
xchg
call
cwtl
mov
pushf
call
push
jmp
aaa
adc
testb
mov
and
int3
push
divb
xor
sub
add
ficomps
fnsave
sbb
sub
lea
cmp
inc
inc
ljmp
imul
stos
dec
std
inc
rcll
mov
jae
pop
rcll
roll
popa
mov
std
test
jne
xchg
inc
jae
adc
push
mov
lahf
xchg
into
pushf
sub
cmp
cmp
xchg
push
push
push
scas
mov
add
sub
sub
lret
out
loop
inc
add
add
add
sar
stos
clc
mov
inc
mov
sub
int3
xor
mov
add
loopne
add
jnp
pop
sarl
out
fcoml
cmp
sub
out
mov
cmpsb
inc
fwait
sbb
dec
sti
inc
cmp
mov
ds
adc
push
jg
push
mov
call
sub
fildll
add
jmp
push
pop
clc
jp
mov
std
movsb
js
dec
sbb
or
es
pop
xlat
xchg
lock
in
jb
test
sub
xor
sub
mov
mov
into
or
lahf
jmp
push
out
mov
std
pop
cmpsb
pusha
xchg
call
push
scas
sub
inc
mov
pop
pop
dec
iret
xchg
pop
jne
ret
push
mov
jle
jo
fsubp
je
cmpl
or
fisubrs
lea
mov
pop
mov
xchg
xor
ja
test
mov
loop
fcmovnu
xor
imul
ja
jns
sti
bound
rcrl
jno
dec
popf
int
repnz
jae
add
pop
ret
inc
in
out
imul
inc
or
add
movl
mov
imul
xor
out
fnstenv
popa
dec
sbb
shrl
and
fcompl
stos
pop
bound
fwait
addl
mov
lds
notb
test
loopne
scas
dec
sub
imul
xchg
imul
jo
add
cmpsl
add
icebp
cmpsb
mov
in
ret
dec
fmuls
jnp
scas
adc
aad
jae
mov
fsts
jbe
sbb
lret
es
jge
iret
mov
lcall
lcall
mov
std
movsl
mov
mov
mov
mov
out
out
int3
inc
xchg
scas
sub
enter
sub
lret
dec
pop
xor
mov
or
pop
pop
xor
aas
dec
dec
or
clc
loope
adc
xor
repnz
push
test
pop
add
rolb
dec
pop
test
push
add
stos
dec
mov
stos
sub
rclb
lret
ret
lret
push
nop
xor
mov
stc
push
int3
xchg
roll
mov
dec
out
xor
scas
cmovo
lret
das
jp
rclb
ficoms
or
adc
adc
ja
or
fs
loopne
notb
jnp
cs
rol
push
jnp
pop
test
mov
jle
mov
push
dec
js
and
push
scas
jmp
mov
adcb
push
inc
cmp
xchg
out
loop
xchg
dec
adc
pop
pop
or
jno
adc
cmp
das
ds
xor
or
cmpsl
mov
call
sbb
mov
xchg
mov
leave
popf
dec
scas
fs
movsb
test
fwait
sub
insb
mov
xor
imul
jle
cmp
or
xor
in
pop
xchg
sub
fsubl
push
xchg
fisttpll
out
xchg
jmp
push
fwait
cwtl
cli
push
adc
add
in
add
adc
push
rclb
loop
xchg
insb
test
xchg
lcall
into
jg
cmp
dec
add
int
cmp
lret
data16
data16
jg
mov
test
aaa
jno
sarl
ljmp
adc
loope
bound
mov
stc
popf
add
clc
xor
xor
scas
jnp
inc
faddp
scas
ds
or
test
cmpsl
fnstsw
xchg
mov
mov
and
pop
xchg
add
inc
sbb
xchg
mov
inc
pop
jl
adc
or
xor
add
jae
clc
mov
loopne
cmp
pop
int
pushf
push
cli
les
je
lods
test
rorl
and
cmpsb
sbb
nop
shl
mov
shll
cmp
cld
mov
inc
mov
cmp
pop
in
dec
shrl
or
xor
cmc
mov
icebp
mov
xor
and
push
xlat
scas
jnp
fistpll
mov
sbb
push
pushf
into
test
pushf
jp
daa
xchg
int
sub
dec
mov
adc
push
dec
ljmp
or
sbb
and
incl
mov
pushf
pushl
ret
nop
lea
mov
pushf
pusha
pushf
xchg
push
movw
xchg
movzbl
mov
push
mov
jmp
xchg
pushl
pushf
jmp
mov
mov
pushf
pushf
push
lea
movb
call
lea
jmp
pushf
jmp
xchg
pushf
mov
call
mov
lea
movzbw
mov
call
mov
push
pushf
movb
mov
pushf
mov
push
push
lea
call
pushf
pushf
jmp
xor
add
add
pushl
push
jmp
inc
push
lock
std
jne
fs
sub
cmp
pushf
xchg
mov
jb
fcoms
andps
ficomps
inc
orl
subl
out
stc
pop
test
and
jae
push
inc
cmp
adc
sub
cld
mov
fcomps
pop
pop
cli
add
mov
gs
mov
ficoms
push
mov
xchg
shl
pop
or
ds
push
add
adc
loop
pop
pop
andb
into
or
clc
outsb
mov
pop
das
insb
stc
test
pushf
adc
adc
stos
push
xor
mov
fwait
xlat
iret
mov
sub
mov
and
in
in
mov
test
sub
mov
xor
fs
test
add
or
je
clc
ret
cmp
inc
jns
bound
bound
fldl
lcall
pop
adc
inc
xchg
pushf
xchg
outsl
jnp
jo
lock
dec
test
icebp
adc
lahf
mov
test
sahf
push
mov
loop
xchg
adc
sbb
lahf
push
mov
shrb
leave
adc
mov
or
es
mull
enter
fnstenv
add
popa
cwtl
pop
add
ljmp
jne
pop
sub
mov
filds
addl
sahf
add
cmp
jp
adc
mov
jb
shrb
push
mov
xchg
xchg
add
jb
inc
fstpl
mov
mov
dec
jmp
push
sub
sbb
xchg
xor
mov
fnsave
xlat
fidivrs
sub
inc
mov
insl
xor
xor
lods
aad
xchg
inc
mov
enter
fwait
outsl
add
ss
test
and
std
sti
sub
inc
pop
mov
inc
aas
ja
mov
std
sub
leave
in
sub
jmp
jnp
lea
out
mov
and
cs
fcompl
jmp
fistpll
xchg
repnz
sbb
fimull
mov
fistpll
into
add
push
sbb
jbe
cmp
adc
bound
jmp
add
aas
ja
cwtl
jl
xchg
push
and
adc
popa
nop
xchg
sbb
call
jle
pop
out
mov
inc
mov
imulb
aam
imul
test
std
mov
loopne
stos
mov
cltd
arpl
and
fistpll
dec
adc
add
dec
js
xchg
je
add
rcrl
and
push
xchg
iret
cmp
xchg
cmp
lods
dec
add
mulb
shll
insb
xor
pop
add
ficomps
ret
int
jnp
xor
jae
xor
adc
test
mov
mov
fcmovu
and
dec
sbb
loope
mov
jl
sub
jne
xor
inc
adc
jl
dec
or
int
xchg
pop
pavgb
mov
xchg
daa
dec
adc
add
out
sbb
icebp
jbe
push
punpckhwd
pop
or
pop
scas
fsubrp
pop
or
xor
xor
adc
stos
je
pusha
pop
pop
inc
mov
notb
dec
pop
es
pusha
mov
jne
dec
mov
aam
fmuls
push
retw
sub
lds
or
mov
jge
mov
dec
stos
jbe
hlt
sbb
mov
and
add
out
icebp
cmp
int
pop
sub
push
xchg
sub
mov
rcrb
mov
mov
or
in
and
rclb
in
push
icebp
mov
leave
out
int
lret
xor
mov
stos
fstpl
lock
jo
or
adc
mov
mov
mov
and
dec
fdivrl
or
mov
and
subb
cmpsl
xor
loop
aad
notl
dec
orb
cmovns
sbb
lds
cltd
ljmp
jae
jo
adc
outsl
sbb
mov
fisttpl
int3
jle
out
call
cmp
test
jae
sbb
rcrb
inc
pop
add
test
xor
movsl
pushf
add
sbb
xchg
gs
lret
cmp
fistpl
jmp
push
shrl
fisttpl
and
push
call
dec
inc
xchg
add
into
xor
idivb
pop
and
es
hlt
lahf
cmpsb
sub
cltd
push
fs
popf
or
xor
mov
jmp
pop
ss
jle
das
repz
fdivrs
scas
cmp
and
in
or
repz
stos
stos
sti
ret
mov
jne
popa
ljmp
repz
sub
scas
test
cltd
xor
leave
cltd
ret
pop
or
inc
sub
xor
fs
pmaddwd
rolb
lret
sbb
mov
lret
jnp
push
or
add
lahf
out
sub
gs
inc
push
iret
sub
outsb
adc
add
fs
pusha
pop
adc
sqrtps
and
bound
mov
cwtl
cmc
inc
and
fmuls
mov
out
div
mov
xchg
pop
outsl
and
add
cltd
frstor
stc
xabort
popf
mov
or
outsb
sbb
in
push
cltd
arpl
or
mov
mov
fcompl
pop
in
lock
xor
dec
sbb
shrb
lds
sbb
xchg
push
repnz
xorb
outsl
lods
sbb
lret
push
jecxz
out
xor
jle
lret
imul
xchg
sub
lock
jb
nop
mov
fsubr
jae
dec
dec
arpl
mov
mov
fnsave
into
lock
lret
arpl
sti
mov
popa
into
xchg
mov
in
add
test
mov
aaa
add
add
into
xchg
pop
xchg
loope
jmp
sub
clrssbsy
in
out
lds
adc
dec
sbb
cmp
mov
inc
in
push
mov
push
pop
adc
and
and
in
push
ljmp
rcl
push
or
or
and
cwtl
lock
ljmp
and
xchg
loopne
rorb
repz
pop
sub
or
adc
push
jns
ret
out
inc
adc
mov
inc
inc
mov
aaa
xchg
repnz
xchg
sub
and
roll
call
bnd
dec
pmulhuw
rcrl
fdivs
call
into
imul
inc
es
test
mov
xchg
fidivrs
mov
mov
addr16
pusha
daa
xor
mov
cmp
xor
add
jne
sahf
or
movsl
stc
add
adc
dec
adc
jmp
adc
cwtl
jp
jle
testl
das
dec
push
pop
push
mov
mov
mov
icebp
pop
outsl
pop
int3
fs
cmpsb
cld
jnp
andb
stc
add
ret
outsl
test
mov
or
xor
sub
mov
fmulp
fidivrs
lret
jmp
or
into
in
movsl
stc
add
mov
rorl
dec
sub
jle
pop
push
dec
int3
pop
loopne
into
mov
xor
dec
in
stc
add
cmpsl
aaa
mov
fcom
push
xchg
dec
inc
sub
inc
pop
cmc
pop
push
decl
adcb
cli
pop
rorl
subb
rcll
jmp
xchg
call
push
nop
pusha
call
mov
call
push
jmp
mov
pushf
pusha
jmp
pushf
lea
pushf
push
xchg
pushf
pushl
ret
call
call
call
nop
bswap
movzbl
not
mov
mov
xchg
jmp
outsl
mov
rcrl
mov
lea
pushf
push
xchg
mov
mov
pushl
ret
movb
mov
jmp
pushf
push
jmp
mov
xchg
lea
ja
push
push
mov
jmp
js
lods
cmpsl
sar
mov
jecxz
pop
insl
mov
pop
xchg
mov
pop
out
es
sub
and
and
mov
js
fiadds
jne
mov
jp
sbb
sar
dec
push
or
lods
popf
dec
sbb
mov
ljmp
rcrl
xor
mov
pop
xor
inc
add
cmpsl
sar
inc
or
jne
in
sub
ja
and
sub
lds
add
inc
xchg
xchg
adc
mov
push
out
jne
xlat
test
pop
push
adc
dec
pushf
adc
push
pop
xlat
dec
or
jae
popf
addr16
jp
pop
ss
imul
xchg
mov
cmp
or
mov
hlt
inc
cmp
and
jl
sti
scas
fmul
outsb
mov
mov
jae
add
mov
mov
mov
add
jmp
push
movsl
jno
sarb
hlt
mov
xchg
sub
inc
test
pop
aad
ds
insl
clc
lahf
int3
cld
fiaddl
mov
cld
clc
mov
sbb
pop
xor
push
in
out
add
sub
lret
aam
sti
mov
mov
cwtl
scas
addr16
inc
fdivl
je
pusha
int
ja
sub
mov
movhlps
lods
cmpsb
andl
cmc
jae
mov
xchg
int3
cmpsl
pop
add
adc
in
jbe
fsubrs
or
daa
ret
push
loop
xchg
fs
mov
push
pushf
mov
mov
and
push
pop
jo
push
and
bound
pop
iret
add
mov
ja
adc
lcall
repz
push
add
test
adc
push
shll
mov
cmp
mov
rcrl
mov
mov
fsave
or
mov
push
mov
cld
dec
sub
mov
and
mov
scas
cmp
xchg
and
push
in
xchg
push
push
pusha
filds
outsb
or
mov
nop
xor
js
and
ret
xor
xor
faddl
pop
loop
and
jg
cwtl
mov
jg
xor
mov
adc
nop
mov
add
mov
inc
jg
xor
dec
mov
cmpsb
xor
cmp
mov
lret
push
mov
rolb
xchg
leave
int3
adc
fsub
xlat
cmp
sahf
cmpsb
push
pop
nop
cmp
mov
pop
pop
hlt
lods
ja
mov
add
or
decb
or
xor
mov
scas
adcb
test
test
leave
xchg
fbld
mov
dec
testl
cmpsl
rorb
scas
cmc
mov
or
cmc
ljmp
shll
mov
fnstsw
mov
add
rolb
mov
cltd
rolb
jecxz
push
or
in
lea
test
sub
xchg
or
and
xchg
adc
jnp
es
cmpsl
mov
xor
mov
mov
shlb
mov
mov
xchg
cwtl
dec
lcall
ss
int
xor
cld
mov
mov
and
nop
dec
loopne
push
pop
cmpsb
or
jl
addr16
pop
push
inc
or
stos
int
frstor
mov
push
out
clc
fisubrl
mov
out
addr16
pusha
adc
cltd
cli
inc
addr16
mov
or
xlat
cmpsl
inc
jge
adcb
xchg
fsubs
xchg
outsb
lret
ret
cmc
cmp
mov
push
jae
jae
jbe
push
push
pop
mov
xor
cmp
mov
push
adc
mov
movsl
sbb
stos
lods
repnz
icebp
inc
testl
xchg
mov
movsl
insb
into
leave
out
adc
nop
fisubs
out
mov
cmp
jno
imul
pop
sbb
xchg
movsb
iret
enter
arpl
jns
xor
or
inc
adc
mov
xchg
dec
pushf
lret
jmp
in
in
push
fxch
push
mov
rcrl
std
mov
mov
shll
mov
cmpsl
mov
mov
xlat
mov
std
mov
scas
adc
pop
cld
pop
mov
cmpsb
enter
fdivrl
push
push
mov
vpsrad
sti
inc
int
dec
cmc
adc
or
or
movsl
xchg
cwtl
add
cwtl
mov
popf
inc
push
jbe
add
add
out
stc
add
pop
push
jns
lds
jb
les
adc
in
sub
push
inc
ljmp
ja
xor
aad
dec
enter
dec
test
mov
adc
xchg
cmp
sub
mov
sahf
stc
insl
cmp
xlat
inc
idivl
lods
outsb
outsb
xor
pop
inc
es
je
dec
loopne
sbb
mov
outsl
cmp
and
xorb
loope
fs
loope
cltd
sub
xor
sub
outsl
push
leave
cmp
dec
cmp
push
mov
repz
cmp
lret
xor
mov
add
cmp
addr16
aad
xchg
pop
das
inc
cmc
xlat
mov
jns
xchg
inc
mov
outsb
inc
add
push
sbb
psraw
jmp
xchg
in
lock
int3
jp
push
pop
bound
push
fs
out
movsl
call
sbb
jb
mov
xor
popa
and
dec
pop
hlt
loopne
out
imul
arpl
or
bnd
cmp
popf
test
push
jg
cmp
mov
add
add
mov
data16
fsubr
lds
rol
pusha
loop
mov
fiaddl
cmpsl
cmc
gs
fs
add
mov
test
ror
push
xchg
ljmp
cmpsb
push
arpl
xorb
lock
popa
dec
lret
xorl
pushl
pop
jne
push
adc
push
sbb
and
jecxz
ds
xchg
outsb
mov
push
shl
jbe
jno
cmp
lea
sub
cmp
inc
push
sbb
sarb
notb
les
cmpb
lods
icebp
stos
mov
imul
xor
or
addr16
lret
pusha
sarl
sbb
sub
repz
sbb
es
out
push
jmp
lcall
dec
out
mov
sub
dec
xchg
sbb
mov
jae
or
or
push
scas
sahf
mov
aam
xchg
and
es
pop
in
jmp
addr16
mov
add
cmp
rorb
xlat
push
imul
push
mov
daa
xchg
xor
xchg
js
stos
xchg
popa
rcll
imul
adc
xchg
sub
pop
xchg
pop
and
xchg
shr
mov
and
mov
ljmp
cli
fwait
mov
jb
jle
bound
sbb
mov
adc
stos
lods
orb
add
lahf
sbb
jo
jg
mov
jle
xchg
out
aas
mov
sbb
adc
ljmp
cwtl
add
fwait
mov
pop
add
cmpsl
jle
inc
clc
cmp
xchg
add
xlat
addl
mov
gs
popf
pop
ja
inc
leave
cli
fwait
mov
ds
pop
dec
enter
lret
out
dec
mov
dec
stos
subl
and
xchg
cltd
popa
popa
jmp
jne
mulb
in
fcomp
out
and
cmp
sbb
fs
clc
xor
lret
mov
sub
mov
jmp
xchg
jmp
call
xchg
push
push
movw
push
pushl
ret
pushf
pushf
pusha
pushf
nop
lea
jg
pushf
pushf
pushf
mov
pop
movzbw
mov
call
lea
pushf
jmp
pusha
pushl
xchg
not
pop
pushl
mov
push
push
mov
lea
call
jmp
pushl
mov
not
movsbw
xchg
mov
mov
pushl
not
movzbw
mov
jmp
call
movzbl
pushf
pop
mov
mov
call
call
mov
pushl
mov
push
pushl
lea
jmp
lea
pushf
lea
jbe
push
pusha
mov
movzbw
mov
pushf
mov
mov
pushf
mov
pushf
movb
mov
lea
pushf
push
push
xchg
pushl
push
pushl
ret
xchg
movb
call
call
mov
pushf
jmp
pop
mov
push
movl
jmp
movw
movb
lea
jmp
pusha
nop
mov
pushf
mov
push
xchg
call
movl
push
mov
mov
lea
jmp
xchg
pusha
mov
pushf
pop
movzbw
pushl
mov
pushf
pushf
mov
mov
pushf
pushf
lea
pushf
xchg
push
pushf
pushl
ret
nop
jmp
jmp
push
nop
jmp
mov
jmp
mov
movw
lea
mov
call
push
mov
pusha
mov
movb
jmp
pusha
pushf
pusha
nop
jmp
pusha
pusha
xchg
pushf
movw
pushl
ret
lea
push
movb
mov
xchg
pushl
pushl
ret
xchg
pushf
pushf
push
push
pushl
ret
call
lea
movzbw
not
mov
jmp
call
lea
pushf
xchg
mov
pushl
ret
nop
mov
jmp
movb
mov
movsbl
setg
lea
mov
push
lea
pushf
call
pusha
nop
not
not
pop
pop
mov
push
pusha
xchg
push
mov
movb
xchg
setl
movsbw
pop
pushf
mov
jmp
push
pop
call
push
pushf
lea
call
xchg
bswap
pusha
movzbl
mov
pushf
movb
lea
je
lea
jmp
movzbl
pushf
pop
nop
movsbw
call
movb
nop
pushl
pushl
pusha
mov
mov
pushf
movzbw
movzbl
mov
pushf
lea
jmp
bswap
setle
movzbw
nop
bswap
pushf
mov
jmp
jmp
pushf
nop
push
call
movb
lea
call
mov
pushf
bswap
nop
cwtl
mov
pushf
xchg
push
push
call
xchg
pushf
pushf
push
pushl
ret
aad
cmpsl
lret
lea
call
push
xchg
movb
mov
mov
mov
mov
mov
pushl
call
call
bswap
mov
pushf
pushl
ret
lea
pushf
call
mov
call
mov
call
nop
call
jmp
pusha
pushf
mov
not
mov
pushl
pushf
mov
pushf
call
mov
push
pushf
movzbw
xchg
not
movzbl
mov
bswap
pushf
mov
bswap
movsbw
jmp
lea
mov
movl
pushl
ret
mov
movb
jmp
jmp
mov
movb
pushl
mov
bswap
call
pushl
xchg
jmp
call
not
movzbw
nop
lea
lea
lea
pop
jnp
xchg
pushf
jmp
lea
mov
pushl
pushf
lea
jo
xchg
pusha
movw
pushl
ret
push
xchg
pushf
push
pushl
movw
pushl
ret
pushf
push
mov
seta
pushf
mov
mov
pusha
push
call
xchg
pushf
push
pushl
ret
mov
jmp
mov
jmp
not
mov
movzbw
nop
call
jmp
mov
push
pushl
pushf
jmp
lea
push
jmp
addr16
ficomps
movsbw
mov
mov
pushl
lea
movw
call
xchg
jmp
pushl
mov
movsbw
lea
movsbw
lea
pushl
pop
movsbl
jmp
pop
pushf
call
pushf
jmp
cmp
std
mov
and
jl
xchg
pusha
pushl
mov
mov
not
bswap
lea
mov
bswap
pushf
movzbw
mov
bswap
push
setae
mov
pop
lea
jge
mov
lea
pushf
pushf
push
mov
push
lea
ja
pop
pushf
pusha
pushf
pushl
ret
movb
lea
jmp
adc
mov
pusha
not
pusha
lea
mov
pop
xchg
call
pushf
movw
nop
pushf
jmp
xchg
jmp
xchg
pushf
pushl
xchg
not
pop
mov
pushf
mov
pusha
lea
jmp
jmp
jmp
push
xchg
pusha
mov
call
jmp
lea
jns
pushf
push
mov
call
pushf
pushf
jmp
xchg
pushf
mov
pushl
mov
pushl
ret
pushf
nop
pusha
mov
pop
jmp
lea
pushf
xchg
mov
movb
pushf
pushl
ret
call
mov
push
push
lea
push
push
call
jmp
mov
call
lea
jbe
xchg
pusha
pusha
pushl
ret
pushf
not
push
bswap
nop
mov
mov
jmp
jmp
call
arpl
adc
pop
add
arpl
add
fstp
add
pushf
xchg
pop
movsbl
mov
mov
movb
push
mov
call
lea
call
mov
pusha
push
lea
mov
mov
xchg
push
pushf
pushl
ret
pushl
movl
pushf
xchg
call
jmp
pushl
pushf
xchg
push
pop
pop
lahf
mov
jmp
lea
pushf
pusha
mov
movzbl
movsbw
movzbw
mov
call
pusha
pushf
popl
call
lea
push
mov
lea
pop
mov
pop
pushf
setnp
mov
movw
push
push
pushf
pushl
ret
pop
pushf
pushf
pushf
pushl
ret
jmp
xchg
bswap
pusha
jmp
call
mov
call
pushl
mov
pushf
movb
pushf
pushf
pushl
ret
xchg
lea
call
pusha
pop
pusha
nop
movzbw
mov
pushf
pushf
movb
xchg
not
jmp
pushf
mov
jmp
mov
pop
setle
push
lea
mov
movb
pushf
pushf
mov
push
push
call
mov
push
jmp
pusha
nop
jmp
pushf
push
movl
pushf
call
push
movb
xchg
mov
pushf
push
lea
mov
pushf
jmp
mov
movsbw
lea
mov
pushl
movw
push
mov
jmp
xchg
movb
push
movb
movl
pushl
ret
jmp
mov
bswap
mov
pushf
pushl
mov
pushl
mov
lea
call
pushf
mov
movw
lea
bswap
jmp
pusha
pushl
mov
call
mov
pushf
push
pusha
xchg
pushf
movb
xchg
push
pop
mov
jmp
mov
push
jmp
lea
jbe
pusha
xchg
pusha
pushl
ret
pushf
push
mov
cwtl
pusha
pop
mov
pushf
jmp
lea
call
xchg
pushl
pushf
pushf
pushl
ret
pushf
bswap
pushl
nop
pusha
mov
push
movb
xchg
pushl
pushf
xchg
movzbw
lea
jge
lea
mov
push
lea
jle
push
mov
pusha
jmp
xchg
jmp
lea
jmp
jmp
call
call
xchg
mov
push
movzbw
call
movb
lea
call
outsl
orb
shl
inc
inc
and
push
pushf
jmp
mov
mov
lea
pushf
jmp
push
call
mov
pusha
lea
movb
mov
push
lea
pushf
push
mov
not
push
mov
jmp
mov
mov
push
mov
lea
pusha
pushl
mov
mov
call
jmp
call
ret
xor
push
movl
mov
jmp
push
call
xchg
bswap
pusha
pushf
jmp
lea
call
jmp
mov
pop
mov
jmp
pop
mov
jmp
pusha
lea
mov
mov
nop
movsbl
pop
mov
mov
mov
movl
pusha
xchg
push
pushf
pushl
mov
movsbw
bswap
mov
call
pusha
jmp
pushf
pusha
pusha
mov
xchg
jmp
mov
lea
jle
xchg
pusha
jmp
pushf
call
call
push
nop
pushl
movzbl
pusha
mov
call
jmp
pop
mov
and
pushf
lea
movb
mov
lea
ja
mov
push
pushl
mov
call
mov
push
pop
mov
pusha
pushf
mov
lea
call
push
call
lea
jl
push
pusha
lea
jmp
lea
lea
jns
xchg
pusha
push
pushl
ret
lea
movw
pushf
call
pusha
mov
mov
mov
pushf
push
mov
jmp
bswap
lea
jg
mov
lea
push
pusha
mov
movl
pushl
pushl
ret
call
lea
mov
mov
xchg
movb
pushf
pushf
pushl
ret
movw
xchg
movl
pushl
ret
push
push
pusha
nop
pushl
mov
xchg
movsbl
not
push
not
mov
push
lea
call
jmp
lea
pushl
push
mov
call
xchg
mov
pushl
ret
xchg
movw
pushl
ret
movb
lea
mov
mov
call
xchg
mov
mov
mov
mov
pushl
ret
pushl
xchg
push
pushl
push
mov
pushl
ret
mov
movl
pusha
movl
movw
pushf
mov
movb
lea
jmp
jmp
mov
call
call
xchg
mov
movsbw
mov
pusha
lea
mov
mov
lea
js
mov
pushf
mov
mov
pusha
call
push
lea
lea
jp
xchg
pusha
pusha
pushl
pushl
ret
pushf
mov
movzbw
lea
mov
mov
mov
mov
lea
push
movb
xchg
mov
pushf
movb
pushf
pushl
ret
jae
enter
xor
stc
xor
cmp
test
xor
cmp
xor
push
stc
xorl
cmc
test
xor
std
clc
pushl
popf
pushf
pushl
ret
mov
mov
call
pushl
lea
call
movb
mov
mov
call
mov
call
push
lea
jmp
call
mov
mov
pusha
mov
call
mov
pusha
jmp
call
mov
pushf
jmp
mov
jmp
xchg
pushf
movl
pushl
ret
jmp
pushf
jmp
push
pushf
mov
not
pop
cwtl
movzbl
mov
call
xchg
mov
pushf
pushl
ret
push
pushf
call
mov
pusha
mov
lea
call
pusha
movb
nop
lea
jge
push
xchg
movsbw
movsbl
mov
pushf
pushf
jmp
pusha
pusha
mov
nop
lea
jae
push
push
lea
jmp
mov
push
jmp
lea
jno
lea
call
movzbl
not
mov
call
lea
jmp
push
movl
pusha
mov
movl
pusha
push
lea
jmp
bswap
movzbw
lahf
nop
jmp
xchg
pop
bswap
mov
js
pushf
pusha
mov
call
call
push
mov
movzbl
mov
call
lea
push
jmp
lea
jmp
pusha
push
lea
pushf
pushf
call
lea
jge
push
bswap
movzbl
mov
pushf
mov
mov
mov
lea
movb
mov
pushf
mov
push
pushf
mov
mov
movb
movb
pusha
lea
pushl
pushl
xchg
push
pushl
ret
xchg
pushf
push
pushl
ret
pushf
lea
movb
push
lea
jb
push
mov
mov
mov
pusha
movw
pushl
mov
mov
jmp
lea
jge
push
pushf
xchg
movzbl
bswap
pushf
mov
pushf
mov
movl
mov
jmp
pusha
pushf
popl
cmc
cmp
xor
test
xor
test
xor
cmc
xor
stc
pushf
xor
cmp
xor
cmp
xorl
cmc
xor
bt
bt
pushl
popf
pushf
pushl
ret
push
movsbw
jmp
pushl
movw
push
xchg
movb
movb
mov
mov
pushl
ret
mov
jmp
nop
pushl
mov
pusha
xchg
movw
lea
jnp
push
push
xchg
bswap
mov
push
mov
pushf
pusha
pushf
lea
jmp
mov
movzbw
nop
pusha
push
pushf
movzbl
mov
mov
push
pushf
call
mov
jmp
push
jmp
jmp
mov
movzbw
lea
mov
pushf
mov
movw
pushf
lea
push
jmp
lea
jmp
pushf
lea
jmp
push
mov
jmp
movw
movb
push
xchg
pushf
mov
pushl
ret
mov
mov
lea
jmp
call
xchg
movb
movb
movb
movw
pushl
ret
call
pop
mov
pusha
jmp
call
mov
jmp
movw
mov
movw
lea
push
pushf
pushl
ret
mov
mov
call
jmp
jmp
jmp
pushl
pushf
xchg
pushl
push
push
pushl
pushl
ret
jmp
mov
push
not
call
push
pushf
pusha
xchg
mov
pushf
mov
lea
jo
bswap
movzbw
mov
push
push
mov
pusha
jmp
mov
lea
jge
mov
jmp
pushl
pushl
movb
lea
pusha
mov
lea
jg
xchg
push
pushl
ret
movb
xchg
mov
mov
movw
mov
pushl
ret
pushl
lea
call
mov
mov
push
mov
call
xchg
lea
jmp
bswap
jmp
call
pusha
call
lea
jbe
mov
jmp
xchg
pushf
mov
push
mov
pushf
jmp
pushf
nop
pusha
xchg
lea
jbe
sets
bswap
mov
jmp
lea
call
push
mov
movb
xchg
pushf
mov
pushf
movb
pushl
ret
push
lea
pushf
push
xchg
movb
mov
mov
pushl
ret
xchg
movl
movl
movw
movb
pushl
ret
pusha
not
push
nop
setge
mov
mov
pushf
xchg
pushl
xchg
movzbl
pop
jmp
xchg
push
movl
mov
pushl
ret
pushf
push
mov
pushf
mov
call
call
pushf
call
lea
pusha
mov
xchg
pushf
pushl
ret
pusha
movl
jmp
nop
mov
mov
mov
pushf
pusha
xchg
pushf
jmp
pushl
mov
movsbw
bswap
not
mov
mov
call
lea
push
push
jmp
pushl
movl
pushl
movl
pushf
mov
lea
jmp
pushf
mov
movsbw
not
lea
mov
push
pushf
call
mov
movl
movzbw
mov
lea
jge
push
pushf
pushf
lea
call
push
jmp
push
xchg
pushl
pushl
ret
jmp
pushf
mov
jmp
jmp
jmp
mov
jmp
xchg
pop
pushf
push
mov
jmp
mov
movzbl
pop
mov
pusha
call
mov
not
push
not
mov
mov
pushf
call
pushl
lea
lahf
mov
call
pusha
push
lea
call
call
lea
jmp
push
pushf
mov
pushf
push
pushf
jmp
cmc
xchg
mov
jns
insl
mov
pop
xor
jp
cli
add
scas
mov
icebp
jp
add
outsb
add
inc
js
rcrb
sub
andl
ja
mov
mov
sub
and
jmp
insb
cmpsb
outsl
aas
jle
cmc
out
cld
push
jp
cmc
aaa
ss
add
imul
push
xchg
test
jno
aaa
push
sub
icebp
cmp
adc
ds
mov
adc
mov
pop
orb
xor
mov
dec
sub
push
inc
inc
xor
or
repnz
cmp
cs
or
push
cli
sub
out
fildl
dec
iret
push
xor
cld
movl
movsl
xor
dec
pop
xor
fildll
adc
clc
inc
cli
sub
or
adc
cmpsb
mov
packsswb
xchg
inc
loopne
dec
push
iret
sub
pop
mov
addb
cmp
sub
jae
outsb
movsb
sub
test
jbe
add
adc
mov
jmp
xchg
xor
and
push
std
out
dec
cmp
pop
add
js
je
or
lods
ret
rcr
pop
lea
loop
ret
push
shll
in
fisubs
push
inc
js
loope
add
pushl
lea
pushl
xchg
pushf
mov
pushl
ret
xchg
pushf
movb
mov
pushl
ret
xor
jmp
fwait
pop
aaa
dec
push
call
pusha
mov
pop
pushf
mov
mov
call
xor
pushf
pushf
xorl
call
mov
pushf
pusha
mov
jmp
mov
call
xchg
mov
movb
not
lahf
mov
call
mov
mov
lea
je
lahf
mov
pusha
pusha
mov
pushf
lea
pushf
push
pushf
jmp
jmp
push
jmp
pushf
lea
call
jmp
movw
push
xchg
pushf
mov
pusha
lea
mov
call
movw
mov
movzbw
lahf
call
movsbl
nop
bswap
jmp
pushf
jmp
mov
lea
lea
mov
pushf
mov
mov
call
pushf
movw
movl
mov
jmp
pushf
pushf
xchg
pusha
pushl
ret
lea
push
movb
call
jmp
movzbw
lea
movzbl
push
not
mov
pop
pop
movzbl
pop
mov
pushf
mov
push
movw
pushl
ret
call
mov
pusha
pusha
mov
movw
lea
jmp
pusha
xchg
pushf
push
pushl
ret
lea
pushf
mov
movsbw
mov
push
pushf
mov
movw
push
lea
jmp
jmp
mov
mov
lea
jmp
mov
pushl
call
call
jmp
push
mov
push
pushf
lea
jo
mov
jmp
cmc
mov
add
lea
ja
pushf
xchg
pushl
pushl
ret
pusha
nop
push
call
call
mov
pushf
not
pushl
mov
movw
pusha
call
mov
jmp
pusha
movb
lea
jns
lea
call
pusha
jmp
mov
call
call
pushf
call
popa
movb
std
lcall
adc
jp
js
arpl
test
inc
ret
jg
add
decl
call
fstp
test
repz
adc
xchg
inc
cs
shlb
faddl
mov
and
orb
mov
lock
xor
std
inc
push
lret
xchg
pushf
push
stos
inc
jno
push
mul
ret
mov
inc
in
mov
les
mov
xchg
addr16
ret
ret
rol
popa
add
mov
mov
cmc
incl
lods
jp
mov
mov
pop
xchg
pop
shr
cmp
das
popa
inc
add
xchg
clc
fldt
jg
add
sti
enter
movsl
sbb
mov
inc
add
stos
xor
sar
dec
adc
mov
inc
in
mov
mov
dec
imul
into
xor
pop
jg
add
in
mov
inc
nop
push
dec
jb
mov
popa
lods
pop
mov
std
jmp
mov
push
or
not
test
loope
sbb
add
adc
jns
xchg
sbb
jbe
jp
mov
pop
loop
add
or
inc
nop
mov
adc
add
insb
add
xchg
icebp
jl
jge
mov
fisubl
inc
mov
outsb
in
cmp
mov
lret
inc
mov
xor
pop
in
dec
das
cmp
rcll
mov
daa
mov
inc
ja
shl
mov
dec
int3
mov
pusha
cmp
pop
mov
inc
xchg
cld
adc
dec
aam
add
inc
lock
pop
add
in
pushf
sbb
nop
movsl
adc
rclb
sub
pushf
out
idivl
mov
or
mov
cmp
out
or
push
push
dec
xchg
es
hlt
pusha
cmp
push
out
adc
les
test
rolb
clc
test
mov
and
pop
sub
cmp
pop
push
cwtl
addr16
dec
jbe
push
test
pusha
out
xorl
pop
mov
sar
mov
xor
cmp
insl
mov
dec
jns
das
xchg
jge
pop
inc
mov
push
push
testl
ret
lods
cltd
addb
setbe
fisttps
stc
cmp
adc
and
cmpsb
or
mov
ret
or
sbb
cmpsl
outsb
pop
xlat
aas
or
sti
adc
adc
xor
daa
fmul
xchg
fimull
push
fcoml
sub
js
movsb
or
inc
filds
adc
mov
aaa
ds
es
jmp
clc
add
mov
popa
mov
cmpsl
jl
mov
les
jp
inc
nop
jmp
es
test
sub
sbb
orl
je
test
lock
sub
cld
movups
add
shlb
pop
bound
sub
int3
mov
push
dec
xor
push
xchg
inc
push
int
xchg
xor
mov
cmpsl
xchg
xchg
and
ss
mov
or
daa
cmp
or
jge
mov
es
ret
jae
dec
into
call
mov
in
sub
call
mov
fwait
imul
sahf
fmull
dec
cmp
sbb
xchg
popa
xchg
jo
inc
popf
out
mov
xchg
inc
or
cmp
cs
jecxz
sbb
movsb
mov
xor
inc
cmp
adcl
sub
adc
inc
push
aas
add
mov
mov
xchg
outsl
inc
mov
push
sbb
mov
daa
dec
add
aaa
jno
in
push
and
pop
pushf
push
fsts
fisubrs
lock
pushf
add
test
xchg
mov
inc
jl
idivb
mov
sbb
into
adc
mov
aas
cld
xlat
mov
jns
stos
xchg
fisttps
pop
lea
movb
jmp
push
pop
bswap
pusha
nop
call
call
jmp
xchg
pusha
pushl
ret
call
movb
push
xchg
pushl
call
call
call
pushf
lea
movb
pushl
jmp
pushf
pushf
movl
pushf
lea
jmp
stos
mov
sbb
decl
popf
or
decl
add
adc
jl
cmp
pop
fdivrp
incl
add
and
cltd
scas
add
lea
pushf
call
pusha
pushf
push
call
lea
mov
mov
call
movw
mov
call
jmp
pusha
lea
jmp
xor
mov
pushl
xor
movb
xor
pushl
pushf
xor
bt
bt
xor
call
xchg
pushf
movl
mov
movb
pushl
ret
push
mov
lea
mov
push
mov
mov
jmp
pusha
call
mov
xchg
push
pushl
ret
pusha
xchg
not
bswap
pushf
mov
jmp
xchg
mov
call
pushf
call
call
lea
pushf
pushf
xchg
pushl
push
pushl
ret
lea
call
pushf
nop
pushf
pop
pop
bswap
pop
call
pusha
jmp
xchg
call
pusha
nop
pushf
pushf
pushf
call
mov
not
pushf
mov
mov
push
movb
push
mov
call
xchg
pushf
movb
call
pushf
movw
jmp
jmp
pushl
lea
push
call
lea
mov
pushl
push
jmp
mov
call
jmp
pushf
jmp
jmp
pushf
xchg
movl
pushf
push
pushl
ret
mov
pushl
pushf
lea
jno
push
lea
call
bswap
nop
push
mov
jmp
not
nop
mov
pop
push
call
call
pushf
mov
movb
pushf
pushl
lea
jmp
pusha
pusha
jmp
mov
mov
lea
call
mov
call
mov
pop
bswap
movzbl
mov
pushl
jmp
std
push
test
mov
call
xchg
push
movw
pushf
pushf
xchg
call
pushf
lea
call
js
daa
stc
sar
inc
nop
dec
adc
cmp
das
mov
iret
js
push
sub
mov
sub
dec
add
add
pop
loope
outsb
rorb
daa
and
cmp
jl
jmp
adc
add
pop
sub
cli
cmp
mov
push
into
inc
sqrtps
mov
pop
xchg
out
out
add
in
dec
mov
dec
enter
dec
cmc
pop
pop
int
jp
cmpsl
hlt
repz
jmp
mov
or
bound
sub
adc
inc
mov
outsl
inc
inc
add
into
pop
dec
aas
stos
clc
sar
rorb
jno
lds
mov
push
or
stc
es
idivb
dec
pop
sub
fcmovnu
cmpsb
insl
scas
mulb
pop
xor
lock
xlat
inc
inc
les
fstl
add
out
loopne
sbb
lret
push
or
push
mov
pop
shll
data16
mov
sahf
xchg
push
outsb
jg
pop
push
out
sti
rcll
pushf
data16
sarl
mov
sbb
xlat
cmp
xor
cmc
xor
jne
mov
les
aas
mov
or
stos
push
ret
push
ljmp
loopne
mov
add
xchg
or
lods
out
addr16
add
dec
in
mov
dec
mov
mov
add
hlt
sub
dec
sub
sub
insl
in
xchg
stos
popf
fpatan
inc
stos
idiv
dec
out
fsubl
mov
adc
mov
movsb
jmp
fists
clc
aad
pusha
cltd
sahf
aas
xchg
adc
jle
mov
pop
test
jle
lret
inc
aas
mov
jnp
aas
mov
sub
lock
push
imul
ja,pt
mov
mov
out
jo
mov
mov
jnp
bnd
mov
push
rorb
mov
mov
mov
mov
lcall
subb
in
bound
in
jg
sub
cmp
cmp
push
adc
adc
test
mov
pop
jmp
pop
test
xor
loopne
sbb
push
cmp
add
pop
xchg
pop
bound
imul
mov
cld
inc
dec
mov
lret
cltd
cmp
adc
jp
dec
sbb
and
mov
std
cmp
rcrb
in
push
imull
cmc
sti
in
xchg
ja
or
sbb
pusha
lods
and
lfs
push
in
daa
lock
add
pop
addr16
pop
xor
and
mov
inc
js
in
xlat
sbb
cmpl
pushf
sahf
cmp
inc
push
jl
ja
mov
dec
adc
jo
lret
shrb
lcall
mov
pop
stos
lret
add
rol
mov
and
or
mulb
lds
ds
push
jp
push
xchg
push
mov
mov
arpl
xor
ss
insl
les
sub
xchg
push
add
lea
add
cs
inc
in
pop
movl
jmp
xor
mov
clc
inc
push
jns
sarl
ret
and
sbb
into
or
insl
notb
add
cmovbe
mov
sub
cmp
fwait
in
jbe
add
push
lea
add
stos
xchg
loopne
rorl
push
dec
cmp
cltd
inc
cmp
ja
inc
nop
repnz
cltd
mov
loop
pusha
sub
xor
push
dec
out
mov
inc
or
jecxz
imul
enter
enter
and
pop
dec
es
lds
out
sbbl
movsbw
pushf
mov
push
jmp
mov
pushf
pushf
push
mov
push
pushf
lea
jmp
push
pushf
mov
push
nop
jmp
xchg
movb
mov
movb
movb
pushl
ret
movzbw
cwtl
mov
jmp
call
push
pushf
lea
jmp
pusha
mov
xchg
mov
pushl
ret
xchg
pushf
pushf
pushf
pushl
ret
push
jmp
movzbl
jmp
mov
movw
lea
pushf
call
xchg
jmp
not
mov
pusha
mov
pushl
push
pushf
lea
pushf
xchg
movb
mov
mov
movl
pushl
ret
jmp
pushl
mov
mov
mov
call
jmp
lea
mov
pushf
mov
pushf
push
call
xchg
jmp
pushf
pushl
xchg
push
pushf
mov
mov
call
mov
xchg
call
xchg
movb
pushl
ret
mov
pop
lahf
push
mov
movb
pushf
pushl
ret
xchg
call
xchg
movw
mov
mov
pushl
ret
call
mov
mov
sbb
je
add
pushl
ret
push
pushf
movb
pushf
nop
mov
pushf
lea
ja
push
mov
pushf
push
mov
pusha
movb
lea
jmp
lea
push
call
call
lea
movb
call
lea
call
mov
movsbw
jmp
call
pushf
xchg
lea
mov
call
mov
call
push
movl
call
mov
mov
xchg
mov
pushl
ret
mov
bswap
push
pushl
push
mov
mov
mov
push
push
lea
pusha
mov
call
mov
lahf
mov
call
nop
pushf
lea
jae
push
movzbw
bswap
mov
call
lea
pushf
mov
movsbl
mov
call
call
pusha
call
lea
movb
pushl
push
mov
mov
mov
mov
pushf
jmp
pushf
pushl
lea
call
call
jmp
pushf
mov
push
pushf
pushf
lea
mov
call
mov
pushf
call
setnp
pop
push
jmp
pusha
mov
nop
not
movsbw
mov
movw
push
xchg
pushf
call
call
adc
fs
jns
xchg
push
pushl
pushl
ret
push
mov
jmp
call
jmp
jmp
movsbw
pushf
movzbw
lea
nop
push
mov
pushl
xchg
mov
mov
movsbw
pushf
mov
push
call
pusha
pushf
mov
not
cwtl
mov
pushf
push
pushf
lea
jmp
lea
jne
push
pusha
xchg
pusha
mov
push
pushl
ret
push
mov
pushf
movw
jmp
push
call
xchg
jmp
mov
pop
mov
push
lea
push
mov
not
mov
movb
push
mov
call
call
xchg
push
mov
pushl
push
pushl
ret
mov
movsbl
call
mov
pushl
mov
pushl
pushl
mov
mov
lea
pushf
jmp
mov
pop
not
lea
jmp
push
mov
call
mov
push
mov
push
not
movzbw
lea
mov
pushf
jmp
jmp
push
lea
pusha
jmp
pushf
jmp
lea
push
jmp
call
xchg
pushf
movsbw
mov
push
jmp
mov
pushf
bswap
jmp
call
movsbw
not
pushf
nop
setp
jmp
jmp
pushf
pushl
lea
push
mov
pushf
pushf
mov
pop
mov
push
mov
push
mov
call
xchg
movzbw
pushf
mov
lea
ja
pushf
mov
lea
js
lea
jmp
in
mov
seta
push
nop
pushf
jmp
jmp
pusha
push
push
pushf
nop
jmp
push
call
call
push
mov
xchg
pusha
mov
xchg
lea
js
setae
mov
pushf
pusha
call
pusha
pusha
nop
pushf
jmp
mov
mov
push
movl
pusha
movb
movb
call
nop
bswap
mov
push
pushf
xchg
lea
jp
pushf
push
xchg
pusha
jmp
movb
movb
lea
jmp
movsbl
movsbl
nop
jmp
cmpsl
mov
push
lret
call
jl
mov
adc
xchg
jl
ja
pop
outsb
jne
ljmp
xchg
sub
addl
push
fstpl
cmpsb
imul
les
lds
xchg
xchg
les
popa
mov
testb
xor
scas
xchg
push
iret
sub
dec
dec
xlat
ja
inc
or
mov
add
mov
movsb
outsb
inc
das
mov
ret
pop
lock
lcall
xchg
call
stos
repz
shrl
add
cmpsb
loopne
mov
daa
andb
out
aaa
lret
std
push
jb
into
hlt
jae
arpl
std
fwait
js
jno
jo
shrl
inc
std
fwait
adc
inc
mov
addb
push
test
pusha
mov
test
loope
mov
or
loop
pop
sbb
loopne
imul
out
sub
dec
xchg
rcrb
rcrb
out
das
mov
inc
movsl
jmp
pop
aad
addb
xchg
fnstsw
dec
addr16
mov
mov
sub
push
push
mov
shlb
mov
cmp
sub
pop
adc
mov
fisttps
add
out
push
push
sbb
cmp
add
xlat
xor
imul
daa
xor
mov
jp
jno
lods
or
fucomp
lret
call
add
outsb
fdivl
sarb
and
add
lahf
jno
je
mov
in
fdivr
aas
cmpsl
lock
push
sub
je
into
sbb
xor
and
movsl
aas
push
lahf
or
sub
adc
arpl
sub
lahf
xor
push
movsb
xchg
cltd
das
xor
shl
sub
out
fbld
addb
repnz
push
dec
push
dec
jmp
shlb
pusha
scas
ss
sub
out
mov
dec
push
inc
mov
enter
inc
dec
outsb
push
stos
scas
imul
push
and
shll
jo
adc
loopne
xor
dec
mov
and
xchg
inc
cli
bound
les
cld
pop
adc
dec
aaa
or
aad
pop
mov
cmpsl
jo
sbb
sub
nop
pop
pop
outsl
insb
mov
dec
iret
mov
jno
mov
add
mov
dec
and
pop
scas
ficompl
out
dec
mov
xchg
cmp
out
repnz
and
scas
add
mov
in
aaa
inc
xor
sbb
jmp
cmpsb
movsb
cmpsl
sbb
ret
jbe
mov
cmp
xchg
or
adc
js
inc
jae
lret
xor
mov
push
insb
popf
xchg
jo
fnsave
cli
xchg
mov
sbb
lock
addr16
xlat
cmp
xchg
jne
pop
rol
lea
jnp
pushf
pop
into
cwtl
xchg
mov
mov
and
popf
loope
std
in
dec
mov
out
sbb
in
push
sub
fmuls
pop
pushf
pop
outsl
xchg
sbb
lods
les
fcompl
xor
mov
pushf
retw
sbb
lcall
cli
lods
jns
imul
or
jmp
movsl
aam
mov
jo
pminub
in
inc
pop
mov
test
filds
lcall
add
or
stos
pop
sub
add
jge
test
pop
ljmp
push
pop
mov
sub
jno
adc
and
add
mov
test
xor
mov
jmp
into
xchg
jns
test
test
pop
insb
xor
aaa
sbb
testb
mov
aad
aas
fwait
jmp
into
sahf
push
add
xchg
cmpsb
push
loope
push
scas
adc
mul
jecxz
cmp
ret
dec
pop
insl
dec
jl
test
pop
cs
and
or
je
sbb
add
xchg
pop
les
mov
mov
lock
push
fsts
scas
inc
mov
push
popf
enter
or
and
mov
mov
aas
push
add
jmp
pop
sub
dec
xor
out
mov
jbe
sahf
fiadds
inc
xchg
lahf
repnz
or
fistl
aaa
or
push
int3
rcl
test
test
lods
loop
xor
mov
das
dec
sbb
inc
cmp
pop
call
popf
popa
insb
and
test
inc
sub
std
adc
pop
pop
sub
ss
mov
push
xchg
mov
outsb
inc
mov
mov
cld
pusha
fwait
fs
inc
outsl
not
mov
fidivl
loope
aam
pop
rcrl
std
mov
js,pn
mov
jl
mov
in
push
or
xchg
leave
faddp
scas
mov
out
ret
or
sti
lcall
enter
aaa
jg
jmp
ret
mov
sub
xchg
das
mov
adc
ljmp
push
in
dec
pop
in
out
loopne
mov
push
rol
iret
xchg
ret
push
pushl
xchg
adc
lcall
push
ja
jno
mov
adcl
and
pusha
stc
andl
pushf
in
mov
rorb
inc
mov
push
inc
scas
mov
outsb
xor
add
add
dec
movsb
popf
loop
clc
pop
cmp
cwtl
or
fs
je
mov
inc
cltd
dec
xchg
xor
inc
gs
cmp
push
add
mov
loope
aad
xor
xor
mov
cmpsb
loopne
enter
mov
pop
ljmp
inc
cmp
lret
and
inc
negb
cwtl
sub
xor
add
jbe
pop
inc
cmpsl
adc
inc
popf
mov
adc
push
enter
jnp
mov
push
das
imul
mov
xor
push
push
jnp
ret
mov
movsb
dec
cmpsl
cltd
fbld
mov
lret
test
lea
mov
into
or
cmp
xchg
aad
cmpsl
push
push
jbe
stc
or
adc
mov
dec
pop
cmpsb
mov
mov
mov
mov
inc
int
rcrb
jb
lds
pusha
adc
subl
dec
pop
call
and
jge
jle
test
and
pop
and
xchg
cld
scas
ja
pop
xor
loopne
bound
jbe
sub
xor
xchg
ljmp
dec
dec
dec
aad
jg
inc
push
pop
fnstsw
psubusw
jne
popa
sub
insb
mov
lds
xor
jbe
int
push
or
jmp
dec
sarb
pop
mov
mov
stc
fcmovu
jecxz
int
lea
outsb
lret
and
fstl
dec
stos
stos
cwtl
rcll
out
icebp
ffree
adcb
cltd
clc
nop
iret
outsl
mov
outsb
pop
add
lcall
jmp
nop
inc
push
iret
sub
or
mov
lds
adc
push
xor
outsl
mov
mov
mov
jmp
ds
lahf
shll
jno
dec
cmc
clc
jg
andb
out
jb
or
push
aam
insl
outsl
mov
push
repnz
rolb
xchg
pushf
pushl
ret
call
call
mov
call
mov
mov
lea
pushf
call
nop
pushf
pop
not
pop
pop
push
push
jmp
jmp
movw
xchg
pushf
pushl
pushf
pushl
ret
call
in
xor
sar
aaa
xorb
push
je
jno
call
rclb
clc
pop
das
jl
jmp
inc
push
cmpsb
add
and
les
pop
test
jg
jmp
mov
into
sbb
jbe
inc
mov
adc
test
shl
iret
ret
lahf
loopne
jne
pop
ja
std
jge
popf
and
fs
push
push
add
shr
mov
xchg
addl
imul
mov
pop
mov
and
movsl
jo
fcomi
or
ret
aaa
or
inc
jno
stos
fisttpl
cmc
daa
mov
leave
popf
mov
pop
add
xchg
icebp
xor
mov
movsl
xor
or
add
mov
push
mov
test
pop
jmp
shlb
xor
cli
sub
addb
xchg
into
outsb
int3
out
sub
fbstp
nop
mov
dec
call
cmpsl
mov
mov
xor
or
push
push
and
jns
repz
daa
lahf
push
add
scas
dec
imul
dec
xchg
xlat
loop
out
push
jmp
mov
ljmp
add
pop
adc
mov
cmp
mov
fisubs
push
daa
mov
xor
pop
ss
inc
loop
fldz
cmp
sub
aad
and
std
dec
sahf
test
pop
or
pusha
pop
gs
aas
mov
pop
fiaddl
insb
xor
xor
test
and
mov
mov
xchg
loope
mov
or
mov
sbb
arpl
cmp
aaa
ljmp
mov
test
cmp
xorb
mov
mov
mov
xadd
mov
mov
pop
icebp
stos
addb
mov
cwtl
xchg
jmp
out
dec
push
jg
std
jp
xor
xchg
mov
adc
test
in
fstpt
lret
mov
and
sbb
test
ss
xor
enter
inc
jb
lock
fwait
roll
std
or
push
leave
adc
sbb
jbe
push
xchg
dec
adc
sbb
outsb
pop
ret
lods
cmp
cmc
clc
cs
cmp
and
mov
push
adc
lea
mov
scas
movsb
jns
adc
cltd
ja
pop
loop
mov
test
aad
insb
in
das
test
push
iret
pop
orb
call
sub
les
jo
in
sbb
sarl
jns,pn
cwtl
loope
les
sub
ljmp
movb
inc
sub
push
movl
lret
xchg
xchg
mov
jl
stos
xor
js
jmp
cmp
ljmp
dec
jle
pop
pop
cmp
leave
mov
xchg
clc
movsl
push
jno
inc
fadd
outsb
cmpl
inc
nop
or
push
sub
popf
int3
leave
or
xor
push
jb
cmc
jo
cmpsl
fcoms
movsl
lea
xlat
and
aad
mov
xor
sti
or
into
insl
xor
fsubrl
xor
aas
roll
imull
push
mov
iret
aaa
sub
push
bound
cmp
lods
inc
ret
arpl
sete
testb
std
adc
pop
inc
nop
inc
mov
xchg
inc
jp
jmp
jmp
jmp
bswap
movsbw
mov
pushf
pushf
mov
jmp
mov
call
jmp
pop
xchg
lea
jg
push
pusha
pop
pop
mov
push
mov
movsbw
movsbw
pusha
mov
lea
pushf
movzbw
mov
lea
movsbw
mov
movb
mov
pushl
ret
pusha
nop
push
mov
movl
mov
pusha
mov
movb
lea
pushl
push
jmp
call
mov
xchg
movb
pushl
ret
xchg
adc
xor
inc
and
arpl
int3
addl
es
inc
add
jmp
movzbw
mov
pusha
pushf
push
movb
xchg
push
pushf
jmp
call
pushf
mov
jmp
call
pusha
pushf
push
nop
push
jmp
out
std
mov
mov
movsb
out
adc
cmp
mov
jo
xor
jmp
aas
xchg
xor
dec
ds
fstpl
mov
fwait
imul
das
sub
adc
cwtl
fwait
mov
push
push
pop
and
fwait
and
pop
mov
outsb
mov
fnstsw
xlat
inc
mov
decb
pushf
dec
adc
jno
inc
sti
cmpxchg
icebp
mov
imul
test
lds
pop
jns
lock
and
fidivrs
xchg
fsubl
pop
pop
lods
xor
dec
test
scas
fwait
xchg
fs
lods
popa
ja
hlt
xor
ljmp
cmpsl
sahf
stos
lcall
mov
inc
leave
or
arpl
scas
mov
pop
push
ret
leave
xor
dec
sbb
scas
push
mov
pop
test
mov
roll
push
test
push
add
lock
add
xchg
jnp
push
mov
adc
leave
movsl
aas
jo
sub
pop
es
sub
fcompl
cmp
dec
push
sbb
fnsave
mov
pusha
int3
scas
mov
les
inc
out
xor
jle
push
pop
xor
jecxz
mov
inc
push
dec
add
xor
scas
mov
xchg
adc
lret
std
decl
add
push
and
setne
lea
not
mov
call
pushf
pushf
mov
pusha
call
mov
not
push
mov
call
xchg
push
push
pushf
push
pushl
ret
nop
pushf
push
pushf
jmp
push
pushf
pushl
movb
xchg
pusha
lea
call
push
nop
jmp
mov
pushf
pushf
call
jmp
mov
call
lea
call
xchg
push
pushl
ret
lea
push
xchg
pusha
movb
push
pushf
pushl
ret
call
push
nop
not
movsbl
pop
pop
pushf
jmp
daa
stos
sbb
std
in
popa
add
cli
cmp
stos
std
stos
cmp
cld
sub
pop
loopne
adc
dec
out
jl
cmp
or
or
push
out
cmp
lcall
xchg
pushf
sbb
push
lahf
jg
arpl
dec
mov
daa
xchg
pop
or
out
lcall
adc
ret
movsl
push
gs
fmulp
cltd
push
mov
jecxz
pusha
test
push
loope
sahf
fwait
clc
arpl
mov
sub
and
out
mov
pusha
and
popa
in
leave
mov
inc
out
add
bound
xor
ljmp
data16
push
jae
lret
ficoml
mov
nop
fucomip
ds
jmp
loope
cmp
push
int3
fildll
dec
add
enter
incl
jge,pn
fsubl
lods
enter
scas
hlt
mov
js
stos
scas
rolb
xchg
mov
insb
jb
pop
cmp
mov
xchg
js
mov
jle
inc
lods
jae
lcall
das
dec
daa
inc
adc
jl
dec
inc
lock
sbb
add
pusha
hlt
repz
add
dec
xchg
sbb
push
cmp
push
inc
mov
call
cs
jle
je
cwtl
sub
xchg
adc
repz
mov
push
xchg
mov
enter
scas
jbe
xor
pop
sti
jge
repz
lret
int
rcll
ja
xchg
addr16
addr16
jg
sub
test
xor
or
jne
mov
test
es
lcall
or
stos
cmc
add
outsb
arpl
shl
pop
add
mov
mov
xor
push
repz
int
adc
and
shll
sub
je
xchg
insl
addr16
or
mov
call
pop
out
sub
add
cs
push
mov
xchg
push
xor
sahf
fnstcw
add
js
fwait
mov
icebp
inc
push
aaa
add
xor
sub
xchg
sbb
mov
rolb
cmpsb
and
mov
mov
movsb
add
and
addb
mov
fs
jge
gs
and
sbb
pop
push
out
sub
jae
xor
jl
pop
scas
sub
pop
mov
push
pop
fisubs
int
xor
je
jnp
jnp
lea
mov
xchg
pop
cmp
and
mov
test
into
push
pop
inc
adc
fisubrs
jns
shrb
in
loope
int3
jle
mov
repz
mov
punpcklwd
fistps
loop
insl
add
pop
pop
dec
xchg
mov
add
or
pop
rorl
mov
pushf
daa
dec
aaa
nop
loop
adc
dec
sbb
leave
cs
inc
jnp
add
push
xorl
and
lock
xchg
xor
ja
jno
out
testl
cmp
fdivrl
and
and
xor
pop
js
pushf
xchg
sbb
mov
test
pop
pop
bound
movsl
aad
jg
dec
mov
jecxz
leave
mov
adc
nop
loop
popf
xlat
movsl
jecxz
aaa
mov
das
imul
cwtl
xchg
roll
or
dec
lods
jo
or
sarb
xchg
mov
les
cld
sbb
adc
sbb
dec
lcall
and
bound
fisubrs
cmp
xlat
mov
bound
loopne
in
push
and
sbb
out
scas
add
mov
jns
mov
sub
ljmp
push
stos
rorl
mov
jecxz
incb
and
lcall
enter
xchg
bound
notl
mov
aaa
es
cltd
test
test
pop
les
adc
jns
xchg
push
scas
adc
xor
sbb
sbbb
int
jns
push
xor
fstpl
shll
adc
or
dec
pop
jns
sbb
dec
fwait
fs
stc
rolb
incb
and
aas
mov
jbe,pn
push
cld
mov
sbb
pop
sub
push
xor
mov
enter
pop
mov
or
cmc
stos
mov
es
dec
dec
gs
sti
pop
push
adc
dec
fisttpll
ret
sbb
cmp
sub
mov
ds
es
pop
dec
mov
and
jae
xchg
dec
ret
dec
ret
ljmp
pop
push
xchg
cmp
les
fdivs
dec
and
push
inc
sub
or
fsubr
pop
mov
popa
enter
mov
mov
sbb
cmpsl
or
mov
pop
pop
daa
psubsw
xor
decl
out
jo
mov
and
dec
sahf
lret
sarb
imul
push
test
leave
repz
test
push
je
arpl
or
or
mov
mov
sti
mov
push
and
in
clc
push
pop
mov
sub
jne
scas
xchg
ret
mov
mov
xor
add
lock
lods
ja
fdivrl
jbe
ret
mov
push
sbb
jns
ljmp
mov
mov
lahf
cld
rclb
xor
sahf
cli
inc
es
add
ret
jb
fisubs
stos
and
loop
inc
xor
inc
sbb
sub
fists
inc
push
jp
loop
jecxz
xor
popf
stos
jne
scas
in
sub
mov
cmp
fistps
fwait
mov
jb
xlat
sbb
add
push
mov
mov
and
pop
dec
lds
in
movsb
mov
test
xchg
out
mov
je
inc
push
cmp
aas
test
push
je
aam
jmp
mov
sbb
adc
push
lea
push
fdivrs
int3
sbb
rcll
dec
call
or
inc
mov
icebp
shll
inc
or
dec
push
sahf
adc
dec
push
lods
rolb
adc
repz
xor
ret
cli
mov
int3
xchg
push
mov
ret
xchg
or
jo
mov
mov
and
insb
xor
pusha
mov
xchg
add
in
mov
add
daa
or
leave
ja
imul
lea
fs
pop
sub
inc
fldenv
add
inc
adc
cmp
cli
push
pop
test
inc
fwait
dec
xor
data16
pop
daa
pop
inc
or
add
pop
test
cltd
add
jp
pop
inc
dec
loopne
add
add
lret
mov
mov
sarb
inc
ds
pop
and
or
pop
test
xchg
sbb
stc
bnd
cmp
sbb
adc
dec
loopne
rcrl
pop
in
mov
inc
cmp
fdivs
inc
add
mov
mulb
sbb
mov
xor
scas
sub
xor
dec
loopne
lcall
push
dec
fwait
cmp
xor
cmp
mov
idivb
sbb
add
or
into
xor
push
imul
dec
into
xor
xchg
lea
jmp
call
lea
call
pushf
jmp
mov
jmp
jmp
movzbw
movzbw
cwtl
mov
nop
lea
pop
push
call
pushf
xchg
movb
movb
movb
pushl
ret
lea
call
pusha
xchg
pusha
pushf
pushl
ret
mov
movzbw
mov
mov
jmp
movzbw
nop
push
pushf
bswap
mov
call
stc
pushl
popf
pushl
pushf
pushl
ret
jmp
nop
mov
jmp
jmp
jmp
cmp
adc
lret
mov
jmp
jmp
jmp
push
lea
call
push
nop
mov
lea
jb
push
lea
push
mov
call
pushf
pushf
lea
jno
xchg
pushf
mov
movb
pushl
ret
call
call
jmp
nop
pushf
mov
cwtl
not
mov
jmp
movw
pushf
mov
mov
not
mov
movb
mov
pushf
mov
lea
call
bswap
seto
pop
call
xchg
pushl
pushl
ret
pusha
nop
pushf
mov
bswap
mov
pusha
mov
movb
jmp
mov
push
mov
mov
lea
pushf
mov
movb
jmp
pusha
movl
movb
lea
jmp
call
call
lea
jb
xchg
pushf
pushf
pushl
ret
lea
jno
push
mov
movl
pushf
mov
push
mov
mov
jmp
push
xchg
cwtl
jmp
pushf
mov
xchg
movl
pushf
pushl
ret
pushf
nop
pushf
pushf
mov
lea
pushf
movzbw
mov
pusha
call
push
lea
jns
pushf
push
nop
jmp
xchg
push
pushf
push
mov
pushl
ret
lea
pushf
call
jmp
push
pusha
mov
mov
not
movsbl
pop
mov
mov
call
pushf
pop
mov
jmp
pusha
lea
push
call
pusha
pushl
pushf
lea
mov
movl
pushf
xchg
movw
pushf
pushl
ret
jmp
call
pusha
pushf
movb
pushf
lea
movb
jmp
lea
pushf
jmp
pushf
lea
jl
lea
pusha
pushl
mov
pushf
mov
pushf
movsbw
mov
jmp
or
dec
adc
and
pop
lret
enter
jae
sbb
dec
sarb
shrl
xor
and
ljmp
xchg
jmp
out
inc
dec
push
ljmp
int
adc
xor
mov
int3
ja
pop
mov
ljmp
cvtdq2ps
and
movsb
sbb
fnstenv
scas
loopne
fldenv
sbb
push
dec
xchg
loope
out
nop
mov
lock
sub
jl
arpl
leave
or
mov
and
pusha
or
pop
mov
mov
lea
sbbl
xlat
adc
mov
inc
sub
mov
cmp
shll
mov
or
rcl
ficomps
out
insl
imul
mov
fisubrs
mov
pop
xor
mov
lods
adc
push
push
push
mov
mov
inc
lcall
or
test
mov
push
fisubl
es
into
and
inc
and
cli
les
or
popa
mov
jns
or
cmpsl
insl
cld
sbb
mov
mov
scas
adcl
xor
dec
jo
ss
loop
lahf
sub
ficompl
jmp
adc
adc
or
ja
adc
push
mov
cmpsl
ljmp
push
jno
sub
fsubs
je
pusha
sub
je
sbb
dec
xor
pop
iret
pop
sub
mov
movsl
mov
in
data16
outsb
push
mov
pushf
jnp
or
inc
mov
stos
nop
clc
inc
xchg
call
push
and
aad
jae
mov
sti
aas
dec
xor
popa
adc
ret
pusha
ror
stc
fcomip
inc
scas
js
jns
and
or
int3
cwtl
rcrb
pop
data16
jle,pn
push
jecxz
fidivl
inc
inc
xor
mov
jns
test
jae
movsl
xchg
adc
shll
pop
push
sbb
stc
sub
jno
ret
ja
sub
fwait
xchg
lret
je
clc
jge
cmp
jp
outsl
sub
jbe
test
add
lahf
shll
mov
ret
shl
test
and
xorl
cmp
test
dec
push
pop
mov
cmpsb
inc
xchg
cmp
ja
test
pop
insl
sar
sbb
sub
rorl
pop
pop
and
setge
add
ret
or
add
mov
cs
test
jp
pop
dec
out
xor
xlat
mov
cmpsl
movl
mov
pop
mov
dec
xchg
pop
sbb
outsl
aaa
add
adc
stos
dec
ja
inc
mov
test
iret
into
add
jns
outsl
mov
jl
jl
pop
and
aaa
add
imul
push
popf
dec
into
adc
cmp
mov
lret
jp
lret
dec
push
adc
fistl
dec
bound
sub
pop
pop
jo
incl
xor
add
mov
pop
sbb
lret
or
ss
stos
sub
jmp
leave
cli
mov
cmpsb
mov
shrb
or
dec
jle
and
aas
fs
test
icebp
mov
and
cs
mov
fwait
les
and
jb
xchg
lock
lret
cs
jge
cmp
and
out
aas
push
cmp
roll
ss
pop
enter
call
cmp
out
out
xchg
lret
xchg
mov
int
repnz
inc
add
mov
cmp
lods
dec
adc
sti
dec
jno
ljmp
xor
jle
scas
mov
mov
mov
add
in
sbb
sub
mov
dec
cld
lock
mov
cld
cmp
sbb
cmpsl
push
hlt
cmp
sub
nop
pop
jg
es
jmp
enter
push
mov
movsb
mov
mov
rcrb
cld
sbb
cmp
inc
ja
cli
lods
add
and
loopne
rcrl
js
inc
xchg
add
mov
cmpsb
mov
outsb
and
push
and
xchg
and
and
sbb
jle
pop
daa
adc
jge
mov
xorb
mov
hlt
movl
in
ror
xchg
outsb
and
shrl
shll
sahf
and
nop
cli
cmpsb
repnz
mov
jb
cs
in
sbb
jl
imul
cmp
in
and
push
shlb
mov
cld
cmp
xor
xchg
daa
adc
js
xchg
add
test
cmpsl
lahf
push
and
popl
out
rcrl
rorl
jge
inc
sub
cld
jno
out
mov
mov
mov
ficoms
insl
ja
popa
xchg
sahf
fs
adc
sbb
sbb
cltd
rorl
adc
xor
cli
pop
sahf
and
jp
sub
test
mov
lock
ss
mov
lahf
sub
add
inc
add
pop
jno
test
push
dec
xchg
fcoml
icebp
or
mov
and
iret
fdivs
clc
bound
adc
mov
hlt
cmpsl
out
nop
int
push
data16
stc
pop
jno
insl
loopne
mov
jl
mov
movsb
bound
cmp
hlt
shll
out
js
data16
adc
shrl
iret
jo
push
mov
jo
mov
ror
jp
mov
sarl
shll
pop
in
push
pop
jp
inc
pop
popf
sbb
dec
inc
or
mov
mov
out
jmp
inc
dec
out
shr
imul
inc
gs
pop
sbb
or
test
orb
push
xchg
jnp
mov
ja
push
out
cli
test
mov
das
enter
insl
les
or
push
aas
mov
repz
mov
jecxz
inc
mov
mov
mov
insb
in
sub
jg
pop
mov
pop
fldcw
or
or
jns
inc
push
js
cld
popf
ret
xchg
cmp
subb
push
sbb
in
repnz
stc
lods
ljmp
scas
shll
mov
ficompl
lea
mov
pop
iret
icebp
mov
test
cmp
icebp
add
and
test
cmc
push
je
mov
adc
frstor
cwtl
xor
in
aas
or
mov
lea
and
loopne
mov
jg
roll
loop
daa
mov
add
out
adc
mov
test
js
ret
flds
or
lret
adc
push
adc
pop
dec
stos
adc
loopne
nop
xchg
rcrl
dec
dec
inc
sub
jl
lret
mov
sbb
repz
clc
cli
js
movsb
test
jno
rorl
mov
lds
sbbb
adc
andb
cmpl
inc
out
inc
cmp
jnp
and
cmp
outsb
lods
dec
in
mov
cmp
test
loope
test
das
sub
popa
bswap
dec
xchg
adc
ss
mov
sbb
andb
push
push
into
sar
negb
push
jl
lret
test
repz
jno
push
push
pop
into
popa
arpl
jmp
cmp
movb
mov
dec
cmp
or
inc
jl
lret
jp
or
nop
pusha
movb
pusha
mov
lea
bswap
mov
mov
push
pushl
pushf
lea
push
mov
mov
jmp
nop
pushf
movb
mov
call
jmp
jmp
push
es
leave
sar
and
outsl
cmp
add
sub
jmp
jecxz,pt
mov
xor
cmp
mov
inc
mov
call
emms
int
icebp
jle
mov
cmp
lcall
jmp
bound
mov
jns
pushf
call
or
jo
jns
dec
or
sbb
jle
push
jae
pop
mov
pop
mov
fstl
cmp
inc
sbbl
std
mov
lods
push
imul
icebp
mov
test
mov
sbb
test
movsl
aad
pop
jnp
dec
mov
xchg
adc
push
aaa
sub
mov
movb
add
jle
mov
mov
inc
push
inc
ljmp
clc
lahf
pop
sbb
or
sub
into
xchg
adc
jl
cli
fidivrs
xor
jns
mov
mov
jecxz
fldl
int3
leave
sahf
push
arpl
insb
cmpsl
lea
jns
sbb
and
jp
pop
je
and
push
sbb
shll
out
add
daa
out
adc
push
out
cmpsb
push
jmp
push
sub
sbb
xchg
or
call
cltd
push
sub
sbb
cltd
dec
pop
xchg
add
loope
loop
inc
mov
or
aam
mov
into
addr16
sbb
rcrl
jmp
sub
je
xlat
dec
inc
jp
sub
out
jo
mov
mov
jge
mov
sub
push
addr16
mov
aaa
das
nop
jl
and
push
mov
mov
orb
bound
in
lods
hlt
xchg
scas
outsl
mov
xor
xchg
andb
sar
sbb
mov
and
push
jne
pop
or
cmp
inc
cmp
cwtl
jno
dec
add
into
arpl
stos
inc
pop
in
fwait
std
inc
mov
fstps
mov
adc
pop
ret
pop
icebp
jo
mov
mov
mov
xor
inc
xchg
out
fnstcw
in
cltd
cmp
int
dec
and
mov
dec
lea
mov
stos
pop
cwtl
or
cmp
xor
mov
push
and
mov
ret
xchg
dec
idivl
push
daa
out
cmp
jmp
movsl
adc
jb
and
or
inc
sub
fst
or
jp
xor
pusha
push
jl
ja
xor
push
iret
pushf
rcrl
mov
xchg
pop
pusha
dec
sub
mov
and
inc
adc
into
mov
sub
adc
mov
jnp
jl
arpl
cmp
jge
lahf
das
inc
sbb
adc
jle
fistl
and
aaa
and
imul
inc
xchg
adc
mov
ret
out
jno
cmpsb
icebp
lcall
sti
mov
xchg
add
xchg
xor
call
or
jl
lods
daa
fldenv
pop
mov
les
push
mov
inc
jmp
mov
pslld
rorb
lock
int3
pop
and
xchg
loope
mov
es
cmpsl
ret
dec
cmp
push
push
sbb
les
dec
xor
dec
fcompl
movsb
mov
loop
pop
or
mov
mov
out
adc
clc
imul
shlb
lea
jne
addr16
enter
das
std
xchg
scas
movsl
dec
xchg
sbb
jnp
sbb
push
aaa
xchg
cmp
cld
jle
push
dec
push
adc
jno
je
and
xchg
jo
stos
sbb
test
lret
dec
sbb
stos
jns
mov
inc
push
push
push
scas
pop
mov
jmp
dec
mov
push
leave
dec
lret
or
fldcw
jle
jae
pop
add
jae
cwtl
in
push
push
fisttpll
add
setnp
mov
call
not
mov
call
xchg
mov
movl
movw
pushl
ret
mov
lea
js
pushf
lea
pushf
xchg
pushf
pushl
ret
call
push
movb
mov
pushf
call
setg
call
pusha
nop
pushf
call
call
pusha
pusha
nop
pushf
push
push
xchg
call
call
lea
call
push
mov
mov
not
movzbw
mov
jmp
nop
push
xchg
movsbw
movzbw
mov
movl
lea
call
mov
mov
call
jmp
pushf
mov
mov
xchg
mov
movb
mov
pushl
ret
movl
push
pusha
push
lea
jmp
push
jmp
xchg
push
pushf
pushl
ret
lea
jmp
jmp
movb
call
pusha
jmp
push
push
xchg
jmp
hlt
push
mov
nop
shl
xor
dec
outsl
xor
movsl
nop
sub
jae
jmp
jmp
adc
inc
add
mov
rorb
sub
cmp
pop
movsb
lcall
sbb
je
mov
or
decb
xor
je
call
mulb
ds
push
push
je
or
mov
loope
jnp
lock
dec
ror
insb
xchg
lret
stos
push
push
test
xor
jmp
pop
sub
in
pop
pop
adcl
cwtl
lcall
and
pop
fisttpll
cmp
adc
and
cmp
fsubrs
xchg
fsubl
in
js
inc
stos
or
movsl
fildll
push
and
xor
insl
aas
repnz
adc
sbb
lds
repz
mov
add
xchg
movaps
stc
ret
pop
int
or
mov
xchg
mov
movsl
push
pop
xchg
push
and
adc
std
mov
pop
lock
ljmp
mov
mov
call
push
jb
es
std
pop
call
int
rcrb
call
inc
xchg
xchg
insb
add
add
mov
shll
inc
xchg
cmc
das
ja
dec
jl
mov
pushf
jbe
xchg
pop
mov
jnp
xchg
inc
out
mov
test
in
cmc
sbb
mov
lret
xor
ss
iret
add
loopne
push
push
and
and
cli
pop
sub
push
mov
or
test
out
ds
jne
jle
sbb
and
ret
ret
lcall
push
ret
mov
mov
dec
xchg
adc
pop
sbb
jmp
mov
sti
std
call
inc
and
mov
sti
inc
add
movzbw
lea
mov
pushf
lea
mov
mov
jmp
pusha
nop
pushf
xchg
jmp
jmp
pusha
mov
nop
jmp
pushf
nop
lea
jle
push
movzbw
mov
call
lea
call
mov
call
call
push
pushf
xchg
pushl
xchg
not
movsbl
mov
jmp
movsbw
lea
bswap
nop
jmp
lea
jl
pushf
nop
push
call
lea
call
call
call
pushf
mov
push
movb
call
pushf
pushl
xchg
push
pushf
pushf
pushl
ret
mov
call
xchg
push
pushl
ret
mov
lea
jg
lea
pushf
jmp
mov
pusha
lea
mov
call
call
lea
pushf
mov
pushl
ret
xchg
mov
mov
mov
mov
pushl
ret
nop
push
xchg
bswap
mov
pushf
lea
pushl
mov
jmp
xchg
jmp
movb
mov
mov
not
pushf
movzbl
mov
call
pop
sbbl
add
lods
jbe
xor
mov
call
push
lea
xchg
lea
mov
jmp
call
pusha
jmp
lea
lea
jno
push
mov
mov
mov
pusha
lea
movzbw
mov
pushf
pushl
mov
push
lea
movl
call
jmp
pushl
jmp
inc
dec
add
lea
lea
movzbw
mov
pushf
mov
mov
pusha
pushf
movw
pushl
pushl
ret
nop
setbe
jmp
movsbw
not
mov
pushf
jmp
jmp
pushl
lea
mov
movb
movw
mov
lahf
call
lea
jno
pusha
mov
movb
jmp
jmp
not
mov
jmp
pushf
lea
call
jmp
push
mov
bswap
bswap
movzbw
movzbw
mov
pushf
pushf
mov
movb
mov
pushl
lea
pushf
pushf
pushf
call
daa
push
dec
xchg
leave
push
outsl
js
in
xor
push
ds
and
add
mov
inc
out
cmpsl
popa
adc
inc
and
push
sub
into
rclb
inc
add
add
cld
pop
push
icebp
int
push
mov
adc
cmpsb
mov
fidivrs
sbb
stos
jp
mov
sbb
fldt
cltd
shlb
es
mov
test
pop
and
loop
cltd
shll
fdivrs
enter
mov
or
inc
adc
stos
mov
add
pop
mov
addr16
mov
arpl
rolb
fisubrl
add
cmp
in
fisttpl
cmp
cmpsb
or
jl
arpl
sub
dec
or
xor
psubsb
rcr
call
sub
add
addb
arpl
mov
std
xchg
fisttpll
aaa
inc
jl
daa
and
inc
mov
add
sub
xor
jb
js
outsl
adc
pop
add
jno
sub
mov
les
jae
in
into
sbb
mov
fldenv
mov
in
jne
sub
mov
test
push
nop
pop
jmp
mov
lea
call
push
imul
loope
xor
in
pop
mov
jb
xchg
popf
ljmp
pop
mov
mov
clc
jp
adc
push
push
call
rcll
xor
mov
mov
enter
pop
in
jo
sbb
xchg
loop
cs
jne
inc
shlb
or
insb
fsubrs
and
cmp
shlb
cmp
leave
repz
cmp
cwtl
jo
fcompl
add
or
lea
jbe
insb
and
xchg
jns
hlt
push
jl
and
orl
dec
mov
xlat
dec
add
and
or
gs
mov
lret
or
pop
aas
jo
mov
int3
data16
out
adc
mov
lcall
and
jae
mov
das
in
sbb
mov
adc
movnti
outsb
cmp
scas
xchg
cmp
xor
cmp
std
imul
inc
mov
and
pop
mov
lock
es
adc
fdivr
and
cmp
mov
xchg
imul
pushf
ds
and
leave
icebp
sub
ljmp
xor
pusha
xchg
sub
adc
add
mov
loop
adcb
jp
scas
test
adcb
xchg
cmpsl
xchg
adc
mov
fnstenv
cmp
rorl
fwait
and
pop
icebp
mov
mov
push
and
filds
mov
adc
xchg
pop
pop
dec
xchg
xchg
add
jae
lret
leave
es
fistpll
jne
rcr
jg
adc
mov
jg
pop
fwait
sahf
jp
xchg
ja
movsl
outsb
fbld
nop
fidivl
imul
outsb
jbe
pop
cvtps2pd
in
push
sub
test
lret
mov
in
std
loop
xor
jns
lods
fisttpl
imul
repz
xor
inc
stos
imul
pop
cmpsl
sbb
jmp
imul
cmp
test
out
mov
shl
addr16
inc
repz
shll
sub
clc
data16
mov
into
call
jg
int3
xor
jb
js
push
mov
outsl
sub
mov
cs
xor
das
push
fpatan
mov
xor
ja
fstl
pop
pop
hlt
leave
cmp
lcall
stc
in
mov
stc
inc
cmp
inc
mov
push
jp
cmp
xor
test
jg
pusha
xchg
mov
mov
sub
in
orl
inc
dec
and
int3
inc
hlt
cmp
repnz
adc
test
in
pop
add
sti
xchg
mov
and
jno
daa
mov
cmp
or
and
or
orb
and
push
loope
or
push
inc
jno
xor
ja
xchg
sub
xlat
pop
pop
insb
add
xchg
cmpsl
loopne
fisttpl
adc
insb
push
dec
adc
mov
inc
imul
ret
out
adc
sub
xor
cmpsb
jge
pop
pop
gs
adc
inc
jae
add
fstpt
cs
jbe
jno
cmp
stos
out
lds
jo
pop
jmp
mov
out
cmc
mov
daa
inc
jp
add
add
cli
mov
call
nop
pushf
jmp
jmp
movb
xchg
pushf
pushl
movw
pushl
ret
call
mov
movzbw
mov
call
pusha
lea
call
jmp
jmp
setge
nop
bswap
lea
bswap
mov
call
mov
mov
lea
jne
pusha
movw
lea
push
xchg
pusha
pushl
ret
call
mov
call
call
call
pusha
pushf
lea
jmp
xchg
mov
pushf
pushl
pushl
ret
push
pusha
movsbl
nop
not
movzbw
mov
push
xchg
jmp
pusha
bswap
setp
pusha
nop
movzbw
pushf
movzbw
lea
mov
movb
movb
push
mov
xchg
pushf
jmp
mov
push
jmp
mov
mov
push
setne
jmp
jmp
je
pusha
push
push
nop
call
nop
movb
jmp
xchg
pushf
call
xchg
cwtl
not
lahf
movsbl
mov
push
mov
pusha
call
push
lea
jmp
dec
and
std
sbb
fnstcw
push
popa
pop
mov
and
mov
hlt
test
sub
lock
mov
ds
jl
shlb
mov
xchg
mov
out
mov
lods
or
aaa
xchg
push
clc
into
les
mov
mov
ljmp
add
cmp
sbb
aad
outsb
mov
mov
ret
in
into
testb
inc
inc
cmp
dec
bnd
ss
add
hlt
mov
and
out
add
aad
sub
insb
or
iret
shll
fcoms
seta
sub
popf
jne
scas
int
fcoml
sti
in
mov
into
cmp
adc
std
les
lcall
outsl
cmc
imul
and
ror
nop
sub
push
dec
out
lahf
xor
inc
test
std
movsb
mov
insb
add
pushf
int3
sbb
adc
cmp
loope
aam
jo
mov
cli
repz
jmp
pop
mov
movsb
pop
daa
cmp
pop
mov
mov
jmp
or
lahf
ljmp
ja
add
pop
pop
roll
mov
cld
push
and
or
aad
mov
decl
outsl
popa
cmp
mov
aam
repz
mov
lahf
movsl
push
mov
leave
pusha
jle
stc
test
dec
in
js
lods
es
inc
pushf
cmpsl
aam
outsb
ja
and
xchg
sti
xchg
push
outsl
inc
adc
fsubl
xor
sub
dec
mov
inc
push
mov
pop
aaa
inc
mov
shlb
cmp
jge
mov
js
xor
aas
pop
fsubrl
test
adc
mov
jno
mov
jg
push
or
jb
jb
sub
insb
xchg
dec
adc
call
or
mov
std
decb
sbb
fmull
ss
and
add
xchg
jle
lret
lret
pop
and
icebp
js
faddl
lods
testb
sub
or
sub
adc
sbb
inc
scas
dec
xchg
mov
sub
xchg
fadds
and
adc
pop
pop
sub
ficoms
shlb
movsb
insb
int3
add
jl
xchg
sbb
xchg
mov
pop
mov
out
insb
int
lods
int3
or
xor
outsl
daa
scas
mov
iret
adcb
mov
int
dec
ss
cs
sti
movsl
add
xor
fnsave
test
clc
enter
mov
repnz
mov
xchg
adc
mov
mov
mov
mov
adc
cmpsb
mov
mov
cltd
int3
xchg
and
sbb
sbb
jnp
inc
mov
dec
mov
aam
fidivrs
pop
push
sbb
sub
std
idivl
lock
inc
sub
ja
hlt
nop
push
jnp
inc
je
mov
insb
mov
push
dec
mov
dec
mov
stc
ret
outsb
mov
popf
js
jg
mov
mov
std
sbb
pop
inc
xor
cmp
xchg
pop
lds
loopne
push
sbb
pusha
cmp
dec
pop
push
mov
popa
sub
sbb
mov
mov
jle
mov
fidivrs
or
ja
adc
in
fidivs
imull
push
push
movsl
inc
push
test
test
gs
or
add
stc
dec
mov
rcl
jecxz
test
sub
or
idiv
inc
test
out
mov
mov
xor
data16
lods
shl
push
pop
daa
shll
lret
mov
jg
sbb
inc
fwait
pop
add
in
pop
push
dec
push
aas
popa
das
mov
and
pop
xchg
ret
adc
mov
mov
push
cmp
test
mov
lea
lea
bswap
not
mov
movsbw
push
bswap
lea
mov
pushf
pushl
pushl
ret
call
jmp
mov
movb
lea
pushf
xchg
push
mov
pushf
pushl
ret
jmp
pusha
xchg
pusha
movw
pushl
ret
jmp
pushf
lea
movb
mov
bswap
jmp
pushf
movsbl
cwtl
nop
bswap
bswap
call
push
jmp
jmp
lea
jmp
xchg
pushf
mov
movl
pushl
ret
pusha
lea
pushf
pushl
ret
pushl
nop
jmp
push
push
pushf
jmp
push
mov
bswap
push
pushf
pushf
mov
jmp
mov
pushf
mov
mov
pushf
pusha
pushf
mov
pushf
call
pushf
jmp
mov
mov
call
lea
jmp
xchg
pusha
pusha
movl
movb
pushl
ret
push
pusha
xchg
pusha
jmp
mov
xchg
call
mov
jmp
pushf
nop
call
jmp
das
sbb
add
add
mov
not
mov
lahf
mov
push
mov
pushf
mov
pushf
pushf
lea
call
pushf
lea
jmp
mov
pusha
xchg
pushf
lea
jo
pushf
mov
seta
movsbw
movzbw
mov
jmp
pushf
push
lea
pushl
pusha
xchg
pushl
mov
mov
pushl
ret
movw
mov
mov
pushf
pushf
call
mov
mov
mov
lea
movl
call
xchg
movl
mov
pushl
ret
addl
or
xorb
and
and
insb
mov
mov
xchg
mov
pushf
pushl
ret
call
mov
jmp
xchg
pusha
push
push
pushf
pushl
ret
jmp
mov
call
pushf
pushf
popl
call
pushf
lea
pushf
mov
pushl
movw
xchg
jmp
nop
call
xchg
mov
pushl
ret
jmp
pushl
jmp
jmp
mov
movb
lea
pusha
xchg
mov
pushl
ret
pusha
call
pusha
lea
jmp
nop
movb
lea
jnp
push
pushf
mov
bswap
pusha
mov
pushf
jmp
jmp
jmp
call
pop
mov
lea
lea
mov
push
pushl
ret
mov
jmp
shll
xchg
add
jmp
push
pusha
push
jmp
pusha
movb
xchg
pushf
jmp
lea
movw
pushf
xchg
pushl
mov
movw
mov
pushl
ret
pushf
xchg
jmp
push
mov
movsbl
mov
jmp
jmp
mov
jmp
pushl
lea
jmp
bswap
not
nop
mov
movzbw
mov
push
mov
jmp
jmp
xor
call
pushf
popl
cmp
xor
push
xorl
cmp
cmc
xor
jmp
mov
push
push
jmp
push
call
jmp
movb
call
pusha
jmp
mov
std
jmp
lcall
pop
movsl
jno
dec
jo
jecxz
mov
xor
add
rcll
adc
pop
fistpl
push
xchg
push
add
stos
mov
leave
imul
dec
jne
ja
or
subl
or
cli
roll
stc
cmp
out
xchg
or
dec
mov
xlat
mov
sbb
sub
push
mov
mov
add
sbb
js
xor
or
ret
pop
leave
cwtl
out
enter
sub
scas
popf
out
mov
inc
add
xchg
mov
sub
leave
mov
imul
mov
leave
lods
stos
je
shrb
adc
pop
xor
flds
es
popa
mov
and
ja
lret
test
mov
push
sbb
fldt
push
adc
int3
or
jle
fcoms
out
out
subl
mov
mov
adc
push
mov
ljmp
ja
xlat
inc
adc
in
fs
jl
xchg
xor
fs
push
xor
add
cmp
sbb
adc
xchg
mov
mov
in
aas
cmpsb
cmp
repz
cltd
es
inc
xchg
or
cmpsl
or
or
dec
mov
sub
test
xchg
cmpsl
imul
add
jg
call
hlt
mov
fwait
addr16
inc
push
dec
mov
lock
movsl
addr16
cmpsb
lret
xor
jo
int3
aam
push
pop
xchg
arpl
aas
loopne
and
jno
or
xor
mov
lds
sarl
movsl
icebp
jno
and
push
cltd
mov
pop
push
sbb
mov
loop
fisubl
out
mov
jne
cmp
sub
sar
daa
jo
insb
mov
mov
inc
or
ret
dec
movsl
cwtl
out
sub
xor
mov
mov
std
xchg
loop
push
or
inc
push
in
faddl
xor
pushf
test
mov
mov
or
enter
in
loop
add
or
daa
dec
je
jae
inc
push
daa
in
cld
lds
xchg
fsubrs
movsl
xchg
inc
nop
pop
scas
daa
sbb
cmpsl
cmpsb
icebp
mov
push
scas
adcb
daa
test
add
inc
pop
dec
sbb
aaa
inc
out
test
stos
adc
aad
mov
lods
das
sarb
arpl
cs
mov
push
push
popa
xchg
pop
sarb
pop
rcll
inc
push
adc
sub
and
mov
mov
mov
cld
addr16
scas
add
sub
cmc
insl
pop
sub
sahf
imul
pop
cli
std
pop
push
int
lret
xchg
push
adc
hlt
pop
int
lods
testb
stos
outsb
inc
jnp
and
and
insb
sub
add
iret
adc
nop
je
inc
and
in
stc
inc
stos
ja
xor
mov
push
es
and
mov
push
shll
inc
pop
jno
jb
pop
mov
lods
mov
aad
pop
adc
enter
push
lods
rclb
mov
jmp
xchg
addr16
int
push
mov
jg
jb
inc
jns
call
repnz
mov
pop
jg
or
or
push
div
int3
movsb
mov
jbe
dec
mov
pop
push
mov
jbe
add
mov
addr16
daa
pusha
inc
lahf
jmp
jo
nop
xor
test
sub
je
stos
insl
xchg
or
jno
dec
or
mov
std
cli
push
pop
mov
and
sbb
popa
xchg
push
dec
pop
inc
bnd
cwtl
fucompp
sbb
ror
call
mov
lea
movb
pushf
pushf
pushl
ret
mov
pushf
lea
mov
movb
mov
xchg
mov
mov
pushf
pushl
ret
mov
call
mov
call
xchg
push
movw
pushl
ret
mov
mov
push
lea
lea
jl
push
pusha
pusha
xchg
pushl
pushf
movw
pushf
pushl
ret
mov
lea
jb
lea
call
jmp
movb
lea
jmp
jmp
jmp
xchg
lea
mov
jmp
push
xchg
push
bswap
mov
pushf
call
xchg
pushf
pushl
ret
mov
nop
pushf
setg
movzbw
mov
push
pusha
xchg
push
call
call
jmp
mov
nop
pusha
mov
jmp
mov
cwtl
movw
push
not
mov
movl
push
jmp
call
lea
pushf
xchg
push
pushf
movl
mov
pushl
ret
lea
mov
pushf
push
movb
xchg
pushf
push
mov
movb
pushl
ret
mov
nop
movsbw
push
xchg
push
jmp
call
mov
bswap
bswap
mov
jmp
pushf
pushf
pushf
mov
lea
not
setne
movsbl
mov
pushl
movb
mov
push
call
mov
mov
movb
lea
pushf
jmp
call
lea
call
xchg
fimuls
xor
push
xchg
movb
pushl
ret
movl
jmp
jmp
xchg
push
pushl
mov
pushf
pushl
ret
movb
xchg
pushf
pushl
ret
mov
mov
lea
jmp
lea
jne
xchg
pushf
pushl
ret
call
pusha
lea
jnp
push
bswap
cwtl
bswap
mov
call
jmp
movb
lea
jo
push
xchg
pusha
push
pushl
pushl
ret
pushf
xchg
mov
mov
call
pusha
pushf
popl
pushf
test
xor
call
nop
pushf
call
jmp
mov
pusha
jmp
mov
movb
movl
push
xchg
jmp
lea
jb
pusha
push
lea
jmp
mov
mov
jmp
jmp
pushf
mov
not
call
pusha
pushf
xchg
pop
push
setle
setae
mov
push
mov
push
lea
call
pusha
pushf
push
nop
call
sub
jo
sar
cmc
mov
jae
jg
add
adc
sahf
loopne
fldcw
jbe
cwtl
dec
push
sub
int3
imul
dec
fstpt
xchg
lds
cmp
jo
mov
inc
ds
adc
rcll
xor
cld
int3
fcomps
cmp
sti
movb
rcr
cltd
add
jo
add
mov
mov
fucom
or
cltd
add
mov
cmc
rcrb
or
push
mov
push
xchg
movsl
cmc
mov
mov
pop
adc
or
fstpt
mov
dec
pop
stos
pop
sub
xor
mov
out
es
or
jns
add
sbb
xor
push
lret
mov
das
imul
ljmp
ret
int
jl
sarb
lret
and
dec
sub
jle
sub
pop
or
xlat
and
xor
mov
ja
mov
cwtl
fiaddl
rol
mov
les
mov
adcb
inc
clc
ficoms
add
shll
and
scas
add
lods
into
fwait
cmp
push
xor
xchg
icebp
push
mov
mov
shrb
jo
data16
jge
mov
adc
outsl
pop
fadds
dec
fcoms
into
aas
mov
push
cmpl
and
jmp
les
dec
mov
in
dec
push
mov
adcl
fidivrl
or
shl
fsubrp
jmp
in
hlt
cmpsl
insl
jmp
enter
cmp
inc
lods
js
sub
or
fdivs
int
push
cmp
int3
les
pop
jp
les
adc
mov
push
mov
inc
push
sbb
pop
rcrl
cmpl
icebp
mov
pcmpgtb
push
inc
insb
mov
int
stos
mov
or
inc
lcall
pop
adc
in
pop
es
outsl
adc
mov
xchg
xor
sbb
fisubrs
or
push
mov
sbb
dec
push
or
add
mov
pop
inc
cmp
fisttpll
add
push
sub
fbstp
dec
in
cmp
push
pop
mov
adc
out
ljmp
lret
imul
jno
daa
pop
jmp
xchg
pop
sub
cmp
sbb
mov
insb
fcmovnbe
adc
jecxz
fdivrl
test
jo
jecxz
iret
lods
fwait
pop
movsb
int3
xor
push
xor
adc
add
inc
sbb
xchg
xchg
ds
mov
rolb
adc
fsubrl
lea
pop
cltd
lret
pop
add
bnd
cmp
push
or
xor
rclb
pop
icebp
sahf
cltd
add
imul
xlat
jge
icebp
ret
cli
repnz
test
pop
sub
sub
inc
push
insb
jg
jnp,pn
xor
lahf
xchg
and
imul
pop
rcll
pop
addl
mov
shl
jg
pushf
sub
testl
mov
mov
lcall
mov
mov
dec
push
lcall
jae
mov
pop
cmp
mov
xor
sbb
jo
rclb
xor
push
push
push
loope
dec
outsb
inc
lcall
lcall
daa
xor
inc
xchg
movsl
int
jbe
jle
inc
jnp
inc
cmp
inc
adc
subl
into
mov
leave
sbb
push
jns
cmpsl
mov
mov
fcmovbe
popf
jns
pop
mov
lods
mov
cmpsl
je
add
mov
mov
push
lock
ds
mov
and
in
mov
pop
pop
nop
jbe
test
subb
xchg
in
fsubr
or
xlat
mov
inc
jle
inc
mov
inc
xchg
rcll
cmpsb
sahf
mov
sub
jl
test
or
test
jg
sarb
mov
mov
daa
add
jmp
movsl
or
jne
cmp
sbb
popf
push
fdivl
fisubrs
mov
mov
lea
mov
scas
jbe
gs
jmp
lea
es
scas
rclb
jnp
push
daa
xor
shr
and
mov
int3
lret
cmp
in
pop
shll
mov
insl
push
push
popa
jno
mov
push
mov
sub
lock
and
jg
mov
orb
fdivs
mov
paddusw
lock
loopne
leave
xchg
scas
repnz
and
push
sbb
pop
rorb
shr
mov
push
xchg
adc
scas
in
pop
icebp
dec
dec
mov
xchg
fisttps
in
lret
mov
ret
mov
into
push
gs
push
enter
lret
je
aas
or
dec
inc
cmp
push
jmp
cmp
mov
lods
or
cwtl
xor
pop
jle
mov
adc
cli
in
dec
test
jo
pop
lods
addr16
pusha
sub
bound
xor
cltd
mov
xchg
mov
test
lret
and
mov
insb
clc
gs
aaa
mov
notl
pop
loopne
lds
enter
lahf
push
pop
sub
out
leave
mov
or
popf
jp
dec
mov
stos
push
or
pop
add
jbe
movsb
cmc
xchg
pop
sarl
pusha
sub
or
loopne
inc
cmp
aam
repz
adc
pop
push
adc
iret
cmp
sub
pusha
fildl
lea
lret
adc
scas
std
jl
mov
outsl
push
roll
cmp
mov
mov
fisubrs
pop
and
aas
mov
jmp
jae
fwait
adc
push
adc
adc
fldl
mov
lahf
in
mov
fildll
ds
mov
fsubr
popf
in
inc
xchg
xor
mov
into
cmp
paddsb
or
sbb
sbb
or
inc
push
dec
adc
adc
jle
mov
loop
sarl
add
jge
decl
push
sbb
sbb
inc
test
int3
jne
adc
in
push
push
addl
stos
adc
pop
inc
dec
sti
vmptrld
fnstcw
add
in
loopne
stc
adc
jl
sub
ljmp
pop
dec
fdivrs
sub
clc
stos
stc
repz
add
outsl
pop
scas
mov
ljmp
lock
test
in
ret
adc
lahf
cmp
fmuls
outsl
mov
push
pop
push
push
sti
sbb
jbe
mov
paddq
fidivs
insb
js
inc
adc
cmp
fdivrs
adc
pop
sub
mov
pop
and
gs
lahf
push
mov
dec
rolb
mov
or
push
popa
and
mov
jb
jle
jp
sbb
out
inc
cmp
mov
aad
xor
push
out
push
inc
fmull
mov
insl
xchg
pushf
mov
inc
sahf
mov
inc
dec
jle
insl
lret
int
adc
bnd
push
out
mov
cmpl
pop
pusha
ficoml
es
cmpsl
xchg
pop
dec
inc
mov
ret
outsl
cmp
in
insl
fldenv
push
jmp
gs
pop
adc
push
jb
sub
out
pop
inc
inc
add
fldl
dec
inc
fwait
xchg
adc
adc
mov
cltd
std
jp
popf
dec
push
add
lahf
mov
cld
data16
and
je
xor
xchg
and
mov
pop
pop
xor
mov
les
cmp
sub
out
dec
or
sbb
in
mov
pop
jne
jo
cmp
fisttpll
pop
fs
arpl
arpl
stos
sbb
dec
xor
dec
outsl
repz
jne
sub
and
test
rolb
subb
std
push
mov
xchg
cwtl
mov
loopne
lahf
outsl
adc
mov
and
addb
fwait
aas
outsb
jns
sub
rclb
movsl
and
inc
in
adc
and
dec
iret
aaa
dec
lea
adc
mov
stos
xchg
in
and
lods
adc
or
movsl
and
pop
push
jbe
loopne
jnp
mov
or
pop
fisttpll
or
lcall
sub
iret
aam
enter
jne
mov
mov
jmp
popa
sbb
jmp
pop
ja,pt
sar
hlt
aas
jne
into
scas
sti
repz
lretw
sub
jecxz
add
adc
mov
mov
out
xor
div
xchg
mov
cmc
add
cmp
inc
xchg
cmc
push
jno
fwait
arpl
ret
xchg
movsl
mov
into
push
lahf
and
pop
xor
dec
adc
push
fwait
aas
mov
ja
mov
divl
push
dec
lret
pop
mov
mov
xchg
push
imul
orb
xor
dec
dec
sbb
std
mov
mov
insl
iret
lcall
xor
mov
inc
or
cwtl
mov
ja
into
sub
pop
stos
cld
testl
sub
sti
orb
stc
ficoml
mov
inc
sbb
mov
std
jp
cwtl
in
js
std
xor
cwtl
sub
cwtl
sub
lret
cld
testl
sub
incl
inc
sti
pop
lds
xlat
sub
jne
jle
aam
sbb
sub
fisubl
fldl
mov
or
movsb
jns
idivl
mov
insb
or
cmp
aam
dec
lea
pop
andl
pop
mov
jo
in
out
jecxz
mov
sbb
shr
jmp
insl
out
push
call
push
lret
jno
and
lcall
lock
dec
or
mov
or
and
rolb
cmpsl
or
aam
imul
sub
adc
jecxz
pop
shrb
in
dec
jg
mov
push
jne
shlb
jne
fisubs
lea
mov
mov
in
pop
in
sbb
cmp
push
outsl
fimuls
sti
pop
jmp
test
fidivl
adc
mov
add
inc
adc
xchg
mov
popf
cmpl
pop
rcrl
and
inc
jl
inc
ljmp
mov
incl
push
scas
insl
fisttpll
xor
popf
dec
imul
add
adc
loope
stos
sbb
std
mov
fcompl
and
xchg
in
scas
std
testl
in
add
jg
test
push
jmp
adc
sub
xor
fidivl
mov
es
pop
stc
sti
sti
or
out
fstl
out
ljmp
fcoml
and
or
xchg
add
mov
mov
xlat
adc
lea
xchg
dec
pusha
lods
mov
test
and
push
mov
cmpsb
pop
in
popa
or
mov
ds
cmp
popa
rcrb
or
in
aam
add
cmp
rorb
clc
scas
ret
mov
push
mov
pop
nop
pop
or
arpl
mov
cli
mov
adc
in
cwtl
or
jecxz
dec
fnstsw
das
mov
jo
cmp
jmp
push
popf
jmp
stc
not
adc
fimull
out
and
push
pop
and
sub
pop
lea
add
adcl
addr16
sbbl
je
imul
fwait
push
xchg
sbb
add
xor
sub
and
rcrb
ret
sub
lret
lahf
pop
lret
fcmovnb
out
pop
add
sub
mov
xlat
scas
push
jb
xchg
or
popa
das
xor
addr16
aam
inc
dec
push
cwtl
and
orl
out
out
in
mov
aad
sbb
cmp
push
lock
xchg
insb
cmpsb
sub
arpl
scas
std
aaa
or
push
shrl
mov
fs
push
inc
or
imul
inc
cwtl
enter
daa
out
daa
addr16
int3
xor
mov
sub
rcr
sub
dec
and
rol
add
ret
push
fyl2xp1
idivb
jae
push
lahf
rcrl
inc
inc
in
insl
cli
std
cmp
in
insl
out
fsts
pop
mov
mov
lret
jno
sbb
in
insl
mov
mov
je
inc
cmp
dec
cltd
fidivrl
pop
inc
jg
cmp
and
lods
fucom
sbb
das
lcall
xchg
or
sbb
and
mov
cmc
push
mov
inc
nop
lret
dec
add
repz
pop
push
jp
out
jmp
xchg
and
out
pop
push
inc
sub
dec
lcall
popa
fnsave
push
out
jno
pop
call
sbb
inc
in
xor
mov
clc
xor
bt
stc
xor
pushl
pushf
xor
clc
stc
xorl
push
bt
xor
call
mov
lea
call
mov
pushl
xchg
pop
not
lea
pushl
mov
call
pushf
nop
pushf
pushl
movb
pusha
xchg
pushf
mov
push
jmp
pusha
call
jmp
lea
mov
call
pushl
call
jmp
test
xor
pushf
pusha
xor
cmp
bt
xor
cmc
bt
xor
stc
xor
cmc
xor
stc
xor
call
mov
pushf
not
not
setbe
mov
push
mov
jmp
push
mov
lea
setg
mov
push
jmp
mov
pushf
lea
lea
jae
push
xchg
pushf
push
pusha
pushl
ret
bswap
nop
pushl
not
mov
mov
call
push
jmp
xchg
movb
mov
pushl
ret
mov
push
pusha
mov
pushf
mov
call
call
lea
pushf
movzbw
push
mov
jmp
mov
jmp
mov
mov
lea
call
push
movb
lea
jae
push
nop
jmp
xchg
movw
movl
movb
pushl
ret
call
lea
mov
call
bswap
pushl
mov
call
pushf
mov
lea
jp
pushf
mov
lea
mov
xchg
pusha
push
pushl
ret
call
pushf
movb
mov
lea
pushl
xchg
push
push
pushl
ret
call
jmp
lea
pushf
jmp
jmp
movb
xchg
mov
mov
pushl
ret
lea
pushf
push
mov
pushf
mov
pushf
call
pusha
push
mov
call
mov
inc
pushl
pushl
push
movb
pushl
ret
call
push
pusha
mov
call
mov
setae
setle
movzbw
mov
mov
pusha
call
pusha
lea
jmp
pushl
mov
push
lea
call
mov
call
pusha
push
pushf
movb
nop
mov
pushf
mov
movzbw
bswap
bswap
mov
mov
lea
jmp
movl
call
call
lea
pushf
movw
call
pusha
lea
ja
pushf
xchg
pusha
pushl
pushl
push
pushl
ret
pop
pusha
lea
mov
pushf
lea
jmp
pushf
call
push
pusha
pushf
xchg
lahf
lea
pushf
mov
lea
jle
lea
pusha
mov
pusha
movw
mov
pop
mov
jmp
mov
mov
xchg
movb
mov
pushl
ret
pusha
lea
mov
lea
js
pushf
pusha
mov
pop
mov
push
jmp
pushf
mov
mov
pushf
mov
mov
mov
push
mov
jmp
mov
movl
bswap
movsbw
mov
jmp
mov
call
mov
mov
dec
and
movzbl
pop
pushf
bswap
mov
pushf
pushl
lea
mov
call
pusha
xchg
jmp
jmp
lea
pushf
jmp
mov
movzbw
movb
pusha
call
mov
xchg
movsbw
movsbw
pusha
mov
jmp
pushf
pushf
lea
call
mov
pushf
mov
lea
push
xchg
pushf
movb
mov
pushf
pushl
ret
mov
mov
mov
movb
movw
pushl
ret
call
call
movzbw
not
nop
pushl
not
pusha
movzbl
mov
pushl
jmp
xchg
mov
movb
movb
pushl
ret
pushl
movb
lea
pushf
xchg
push
push
movb
push
pushl
ret
mov
pushl
pusha
lea
mov
jmp
pushf
mov
lea
jno
movzbw
mov
pusha
movl
jmp
xor
cmc
cmp
xor
bt
movb
pushl
popf
movb
movw
pushl
ret
pusha
pushf
mov
mov
bswap
pop
not
mov
mov
jmp
mov
movb
lea
call
push
push
lea
lea
jae
push
mov
movzbw
not
mov
jmp
jmp
movb
movb
call
mov
pop
pusha
mov
call
pusha
call
movsbw
not
mov
mov
pushl
pushl
lea
mov
pushf
mov
pop
lea
mov
jmp
movzbw
bswap
pushf
nop
call
nop
jmp
jmp
lea
push
nop
mov
mov
pusha
call
lea
pushf
pushl
mov
push
mov
not
mov
mov
call
call
mov
not
bswap
pusha
lea
bswap
call
pushf
mov
pushf
mov
push
mov
jmp
mov
push
mov
pusha
mov
mov
pushf
jmp
xchg
push
pushf
mov
push
call
jmp
pusha
nop
pushf
movsbw
not
mov
jmp
mov
movsbl
movzbw
mov
push
pushf
mov
mov
call
push
call
pushf
pusha
jmp
pushf
xchg
call
push
pushf
popl
push
xorl
stc
stc
xor
call
movb
lea
pushf
pushl
jmp
mov
not
movsbl
pushf
pop
mov
pushf
mov
call
pushf
jmp
mov
pop
mov
jmp
bswap
nop
lea
seta
pop
jmp
pushf
call
movb
xchg
mov
push
push
pushf
pushl
ret
jmp
pusha
call
pushf
nop
call
call
mov
call
mov
pushf
lea
jge
pushf
lea
call
mov
jmp
call
pushf
mov
movzbw
pushl
movzbl
jmp
movb
call
pushf
mov
pusha
lea
mov
mov
movl
push
xchg
pushf
pushf
pushf
movb
pushl
ret
test
pushf
nop
call
jmp
mov
call
jmp
call
lea
push
mov
call
push
lea
pushf
call
lea
lea
jns
pusha
movb
pusha
xchg
pushf
pushf
pushl
ret
pushf
xchg
not
mov
mov
jmp
xchg
movw
pushf
pushl
pushl
ret
mov
lea
jns
mov
mov
jmp
mov
call
pushf
pushf
call
call
call
movl
call
negl
mov
les
pop
lcall
cs
int
fwait
add
sub
xchg
pop
wrmsr
or
std
call
adc
pop
pop
xchg
dec
mov
mov
mov
rolb
push
pop
cmpsb
or
data16
out
adc
sub
sbb
cmp
or
leave
or
or
std
in
jmp
xchg
gs
adc
ret
push
xchg
push
mov
in
repz
outsl
jno
sub
shlb
rcl
xchg
cld
or
std
imul
jb
xor
jbe
outsl
repz
push
cld
xor
ds
xchg
push
loop
xor
sti
push
jno
imul
roll
cmpsl
lods
mov
call
scas
adc
sub
push
cmpsl
pop
jge
ja
mov
push
pop
adc
pop
nop
icebp
stos
adc
out
push
pop
test
aam
sbb
cltd
fadds
and
adc
fdivr
mov
mov
pop
sarb
cld
mov
mov
xor
pusha
lret
rcr
test
pop
cltd
addr16
int
repz
xor
aas
pop
xor
outsl
stos
inc
pusha
mov
loopne
test
lea
dec
pushf
jb
roll
call
gs
sub
fdivs
rcrb
dec
iret
adc
sub
sar
int3
das
jl
cmp
jle
and
std
inc
adc
pop
imul
jge
popa
adc
hlt
cmp
daa
pusha
adcb
out
push
ret
mov
clc
lret
jmp
movsl
adc
ja
adc
xor
pop
incb
push
adc
sarb
lret
cltd
and
mov
nop
adc
jno
push
mov
mov
sub
pop
jl
dec
sbb
outsl
sub
inc
rorb
adc
fcompl
sar
sbb
jae
dec
loopne
cmp
xor
loop
sbb
hlt
sub
xchg
jl
out
shll
sbb
push
ret
mov
std
push
iret
pop
outsb
xorb
aaa
dec
aas
inc
arpl
dec
jb
rclb
push
jp
fsubs
les
adc
ds
jp
out
nop
fstpt
fdivl
enter
test
jne
adc
jb
fldt
loope
pop
cmp
mov
pop
arpl
xchg
unpcklps
mov
xchg
loopne
inc
adc
sub
ret
mov
adc
cli
sbb
or
or
sbb
shll
jmp
add
jne
add
je
jnp
and
push
jecxz
adc
mov
sbb
sahf
mov
stc
movsl
mov
sahf
sbb
sahf
test
repz
pop
fisttpll
sub
movb
push
fcom
pop
dec
pop
mov
lea
push
or
xchg
xorb
jecxz
scas
push
inc
pop
jb
mov
es
dec
out
ljmp
aas
xchg
lock
xor
sbbl
sub
pop
sub
pop
push
xchg
subb
into
or
mov
jge
pusha
sti
pusha
xor
push
lahf
add
out
mov
ds
fldt
ret
lahf
mov
cmp
xor
xchg
xor
and
mov
mov
fstps
mov
and
pop
std
imul
dec
add
scas
pop
dec
sub
xchg
in
insl
cmp
or
leave
jno
out
cmp
dec
pop
insb
in
jne
lahf
das
pop
sbb
xorb
sbb
call
xchg
mov
pushl
ret
pushf
pusha
mov
mov
pushf
push
call
mov
pusha
jmp
lea
pushf
call
jmp
pushf
jmp
jns
shl
pushf
lea
pushf
mov
movzbw
mov
mov
jmp
push
mov
pushf
pushf
nop
push
pushf
jmp
call
push
mov
mov
pushl
pushl
ret
pusha
push
pusha
nop
jmp
xchg
movl
pushl
ret
lea
call
mov
not
call
xchg
mov
mov
push
pushl
pushl
ret
xchg
mov
push
pushl
ret
jmp
call
xchg
mov
pushl
ret
call
movb
movb
pushl
lea
push
movw
movw
pushf
xchg
mov
pushf
pushf
pushl
ret
jmp
xchg
push
mov
pushf
pushl
ret
lea
jmp
push
mov
push
push
not
pusha
mov
call
pusha
mov
pop
lea
jne
mov
pusha
call
movw
mov
lea
call
movsbw
mov
jne
pusha
lea
mov
push
pusha
pushf
pushf
mov
movzbw
pop
lea
jle
lea
call
pusha
movb
call
setle
bswap
movzbw
lea
nop
not
pop
pushf
jmp
push
pushf
mov
call
movb
xchg
pop
jmp
jmp
call
pop
movzbl
movsbl
mov
push
push
mov
pushf
lea
jmp
push
xchg
mov
mov
pushf
bswap
mov
jmp
shlb
cwtl
in
out
fildll
jl
pop
dec
in
jb
mov
cwtl
mov
sub
imul
pop
imul
jp
mov
mov
dec
pop
aam
sbb
or
dec
jmp
out
into
pop
jg
mov
aaa
shrb
pop
insl
fcompl
outsl
xchg
sbb
dec
data16
jnp
mov
mov
jecxz
fadds
movsb
in
push
inc
push
fsts
fstpt
test
into
mov
add
sahf
jae
outsb
andl
push
sar
int3
addb
cmp
or
sub
push
push
cmpsb
and
mov
mov
loope
sub
mov
imul
jnp
jmp
mov
hlt
js
into
cmp
sar
sub
push
xchg
pop
ja
add
dec
sub
mov
mov
cmp
stc
sub
xor
push
cmp
icebp
sub
jg
inc
into
inc
xlat
sbb
in
mov
pop
cmp
mov
mov
dec
mov
inc
es
and
inc
or
sub
pushf
sti
lock
daa
jp
cmpsl
outsb
dec
inc
clc
lcall
and
sub
insl
mov
enter
sub
test
or
mov
sti
sbb
popa
or
lock
xchg
pop
add
and
and
and
sub
js
aam
ja
cmp
xchg
test
xor
stos
mov
mov
sbb
mov
pop
cmp
std
loope
sbb
and
pop
fst
lcall
mov
subb
sub
mov
sub
int3
xor
xchg
push
mov
push
rcr
cwtl
jnp
adc
lret
xchg
jg
outsl
lahf
fstps
xor
adc
ss
ja
movsl
sub
sar
jl
jnp
mov
aam
jo
dec
cwtl
sbb
out
repnz
sti
sub
push
scas
hlt
push
mov
loope
push
dec
cs
mov
cmp
jo
fldenv
rcll
xor
iret
mov
out
jbe
fstpl
cmpb
jns
add
sub
jo
arpl
fmulp
adc
pop
pop
mov
leave
insb
lcall
cmp
inc
sub
push
stos
mov
push
mov
sbb
inc
in
fstpt
pop
mov
insl
aaa
pop
sbb
inc
sub
aam
out
hlt
push
addr16
xchg
rorb
jbe
cmp
or
push
xor
in
dec
in
mov
movsb
sub
mov
rclb
ljmp
add
cmp
insl
sarl
pop
xchg
inc
int
mov
jge
cmp
push
dec
scas
mov
out
mov
popa
subl
xchg
ljmp
pop
pusha
leave
sbb
shrl
and
mov
or
xor
jecxz
push
sbb
mov
push
mov
shrl
int
fmull
cmc
outsl
icebp
out
add
scas
js
insb
xchg
lret
xor
dec
jnp
frstor
mov
inc
das
imul
in
add
gs
andl
adc
sbbl
in
lret
or
test
cli
ret
loope
fildl
pop
fwait
mov
jne
fbld
inc
popl
sbb
xchg
subb
and
fcompl
adc
fsubl
scas
loop
sub
dec
adc
pushf
mov
mov
push
sub
xor
xchg
push
push
inc
fldt
sbbl
mov
pop
pop
dec
mull
popf
or
fmuls
lcall
inc
mov
xchg
orb
or
fisubs
out
sub
loope
sbbb
xlat
push
test
sub
jns
push
sahf
mov
fistpll
lock
inc
dec
addl
jle
sbb
scas
jbe
adc
or
aaa
inc
iret
and
cmp
divl
sub
shrb
cld
inc
ja
je
adc
loopne
xor
sahf
mov
xor
test
sub
inc
mov
jle
mov
inc
xchg
movsb
cmpsb
or
stc
arpl
stc
das
out
dec
inc
sub
cld
movsb
loope
jge
cmp
cs
push
sti
cli
mov
pop
cmpsb
loopne
fsqrt
sub
mov
mov
sahf
rorb
rorb
add
jmp
lea
movb
xchg
pushl
pushf
mov
pushl
ret
call
pop
mov
pusha
pushl
push
mov
call
mov
jmp
mov
pusha
nop
call
pushf
jmp
mov
mov
mov
push
xchg
jmp
pushf
mov
pushl
lea
call
xchg
mov
movb
mov
mov
pushl
ret
xchg
movzbw
mov
push
mov
mov
push
jmp
lea
call
movsbw
movzbw
pop
mov
jmp
pushf
mov
pushf
bswap
pop
mov
jmp
lea
pushf
mov
movzbw
jmp
pop
pushf
mov
pushf
call
pushf
jmp
pushf
mov
mov
push
lea
pusha
movb
mov
call
mov
jmp
pushf
movb
lea
call
xchg
push
push
pushf
pushl
ret
jmp
lea
mov
mov
setne
lea
jg
pop
push
pushl
ret
push
pusha
pushf
popl
stc
call
xorl
cmp
clc
xor
jmp
pushf
mov
mov
mov
lea
jmp
push
movb
mov
pushf
jmp
jmp
jmp
lea
movb
push
xchg
pushf
mov
pushf
movw
pushl
ret
pushl
lea
jmp
inc
mov
push
xor
lea
pushl
jmp
call
call
lea
call
xchg
mov
movw
push
mov
movzbw
pusha
lea
mov
call
mov
pushl
call
movb
pushf
lea
movb
jmp
pusha
movb
pushf
mov
call
jmp
pushf
push
lea
pushf
xchg
push
pushl
ret
mov
lea
jmp
movb
call
not
lea
not
mov
jmp
mov
push
mov
jmp
pushl
lea
call
xchg
mov
pushf
pushl
ret
push
mov
movl
movb
lea
pushl
call
call
jmp
lea
movb
xchg
cwtl
not
movsbw
movsbl
mov
jmp
jmp
mov
call
mov
movzbl
movzbw
not
lea
mov
mov
mov
movb
mov
pushl
ret
lea
push
movb
mov
pushl
mov
push
pusha
lea
jl
mov
pushf
lea
movb
pusha
pusha
jmp
push
lea
jmp
pushf
jmp
pusha
movw
lea
pushl
xchg
pushl
pushf
pushf
pushl
pushl
ret
xchg
push
pushf
pushf
pushl
ret
lea
lea
jb
pusha
pushl
xchg
movb
pushf
pushl
ret
call
xchg
mov
mov
push
mov
pushl
ret
push
nop
pusha
call
xchg
pushf
pusha
pushl
ret
push
pusha
lea
mov
push
call
pusha
jmp
jmp
xchg
pushf
movb
pushl
ret
push
lea
movl
movb
mov
call
pushf
push
stc
xor
clc
xor
clc
mov
xor
mov
xorl
test
mov
xor
pushf
xor
stc
clc
xor
jmp
pushf
mov
call
jmp
push
jmp
mov
call
pushf
call
pusha
lea
jmp
mov
movw
lea
movw
jmp
bswap
push
jmp
mov
call
mov
mov
mov
call
xchg
and
inc
adc
fiadds
mov
dec
xchg
pop
loopne
push
sbbl
mov
add
sub
test
pop
sbb
in
sbb
dec
mov
mov
xchg
shll
mov
popf
out
gs
push
sbb
dec
addb
fmull
mov
hlt
add
cmpsb
mov
push
ret
lds
test
and
icebp
roll
lods
push
pop
sub
jmp
inc
mov
je
clc
js
ror
cli
scas
or
mov
hlt
mov
dec
push
adc
sbb
sbb
dec
jge
cmp
cmp
icebp
orb
stc
pop
out
mov
sar
inc
dec
ljmp
mov
xor
cmpsb
icebp
out
and
adcb
xchg
mov
sub
jb
jge
out
daa
data16
fwait
les
int3
sbb
or
or
std
pusha
test
xchg
mov
pushf
pop
jle
lea
jno
repz
test
add
jae
mov
inc
lods
rcrl
mov
cld
test
dec
ret
cmpsb
jno
iret
popf
nop
int
lea
jb
push
stc
xor
push
or
adc
mov
push
hlt
pusha
jno
lods
sbb
lret
cmp
mov
and
push
scas
loopne
cld
push
xchg
xchg
ret
mov
pop
mov
and
loop
inc
jle
imul
push
lahf
or
push
sbb
push
and
adc
jbe
pop
sbb
sti
jge
stos
outsl
test
inc
aas
or
in
subb
ljmp
mov
mov
or
js
jge
sub
cmp
pusha
into
pop
push
mov
dec
inc
push
sbbl
mov
mov
adc
mov
ffreep
pop
xor
hlt
jp
mov
shl
cmp
call
cmpsl
rclb
dec
xor
repz
roll
shlb
jno
add
push
daa
lds
mov
in
mov
hlt
push
push
or
mov
inc
divb
jb
lods
fwait
push
lds
and
std
orb
push
mov
test
cmpsb
pop
adc
xchg
xchg
mov
pop
decl
sbb
dec
and
icebp
bound
cmpb
and
in
call
cmp
inc
jnp,pn
test
and
in
xor
adc
fcmovbe
in
aam
sbb
and
mov
je
std
fsubl
icebp
mov
xchg
ds
inc
pop
sub
stos
sbb
jl
iret
ss
jne
popa
pop
iret
add
cwtl
mov
jp
pop
call
push
mov
push
imul
test
sbb
cmp
or
icebp
sbb
mov
mov
or
xchg
sub
mov
mov
xor
into
sbb
pop
shr
or
imulb
test
and
insl
mov
rorl
movsb
cmpsl
sub
lock
or
mov
test
or
dec
fwait
mov
mov
adc
mov
push
mov
lret
sbb
shll
adc
and
in
push
mov
jbe
int3
js
xlat
pop
sub
in
sahf
icebp
loop
test
inc
sbb
add
mov
push
imul
sub
cwtl
ja
and
sbb
dec
dec
aam
inc
push
push
jge
mov
push
outsb
mov
mov
mov
insb
out
mov
hlt
in
mov
xor
shl
cwtl
sbb
dec
cmp
in
scas
jae
into
cmp
mov
ljmp
scas
xor
stos
jns
test
imul
xchg
add
ss
cli
ret
fildll
inc
mov
mov
mov
mov
mov
mov
and
push
rcrb
add
dec
adcb
and
xchg
hlt
inc
inc
aas
in
jg
and
cmp
xchg
mov
pop
inc
add
loopne
aaa
sahf
in
in
aad
push
ljmp
mov
jl
jl
pop
es
mov
pop
test
push
rcrb
cli
mov
push
mov
dec
fiadds
or
enter
dec
sbb
loope
mov
mov
push
in
in
mov
pusha
jmp
push
xchg
pushf
movl
movb
pushl
ret
movw
jmp
pushl
mov
bswap
call
movzbw
mov
call
mov
pushf
pusha
mov
movb
pushf
lea
jle
lea
pushf
xchg
pushf
push
movb
push
pushl
ret
call
mov
push
mov
jmp
xchg
pop
lea
mov
pushf
mov
movb
push
pushf
movb
lea
call
push
jmp
jmp
cwtl
call
push
mov
pusha
pusha
push
lea
pushf
movb
pushl
xchg
movw
movb
mov
pushl
ret
movw
mov
lea
movzbw
lea
jl
mov
jmp
movb
lea
jmp
lea
mov
jmp
nop
push
pushf
mov
jmp
pusha
lea
jp
pusha
movb
nop
jmp
xchg
push
movb
pushl
ret
call
not
jmp
jmp
lea
pushf
pushf
jmp
call
xchg
pushf
pushl
ret
xchg
pusha
pushf
pushf
mov
pushl
ret
mov
mov
mov
pushf
jmp
jmp
lea
movw
movl
movw
xchg
mov
pushl
ret
pusha
nop
movb
call
pushf
mov
mov
lea
push
xchg
pusha
pushl
ret
lea
call
pushf
xchg
pushf
not
mov
pushl
pusha
lea
push
push
push
mov
call
movl
not
lea
movsbw
pushl
mov
movzbw
pusha
mov
pushl
pushl
movw
pushl
ret
jmp
pushf
push
call
pushf
movsbw
nop
pop
bswap
movzbw
pop
push
xchg
push
pushl
pusha
mov
movzbw
pop
pushf
lea
mov
jmp
mov
mov
movzbw
movsbw
lea
pushf
mov
movb
mov
push
mov
pusha
jmp
pusha
lea
mov
mov
lea
je
mov
mov
call
call
jmp
pushf
mov
pushf
mov
push
jmp
sete
not
mov
pusha
nop
movl
call
call
mov
push
pushf
call
push
mov
xchg
pushf
pushl
call
xchg
pushf
push
pusha
movb
pushl
ret
mov
mov
pushf
push
lea
push
jmp
lea
call
mov
call
pushf
movl
lea
call
push
movb
mov
push
lea
jae
push
pushl
mov
jmp
clc
xor
cmc
stc
xor
cmc
xor
clc
xor
test
cmc
xor
bt
cmc
xorl
call
xchg
pushl
pushf
pushl
ret
lea
push
call
jmp
lea
call
call
call
push
pushf
xchg
mov
pushl
ret
pusha
mov
mov
push
lea
pushf
pushf
jmp
xchg
movb
pushf
pushl
ret
pusha
call
jmp
call
nop
pushf
movsbl
mov
movzbw
lea
lea
movl
xchg
movsbw
jmp
pushf
pop
bswap
mov
pushl
mov
jmp
call
jmp
push
lea
pushf
pushl
call
movzbw
lea
setne
movsbl
pushf
mov
movsbw
movsbw
mov
pushf
pushl
ret
xorl
cmp
xor
mov
cmc
xor
pusha
movw
xor
cmc
pushl
xor
cmc
xor
stc
xor
test
push
xor
pushf
pushl
popf
push
pushf
pushl
ret
mov
bswap
pushf
setg
pusha
mov
push
mov
push
lea
push
pushf
jmp
mov
mov
mov
mov
pushf
call
movl
push
mov
mov
pushf
mov
jmp
pushf
xchg
mov
mov
jmp
mov
push
pushl
pushf
pushl
ret
jmp
jmp
push
movb
mov
bswap
mov
pushf
jmp
mov
call
pushl
not
mov
push
pushf
mov
movb
pushl
ret
movsbw
bswap
nop
jmp
xchg
call
call
pusha
pushf
mov
jmp
in
cmp
sar
pop
data16
cltd
jmp
ja
sub
xchg
pop
nop
jnp
addl
test
or
lret
add
out
scas
rcrb
xchg
mov
add
dec
jp
mov
lock
xchg
mov
aam
outsl
test
in
addb
cs
gs
push
sbb
mov
or
sub
mov
mov
popa
sub
mov
dec
mov
add
xchg
mov
std
fisubrs
popa
sbb
mov
das
jle
jmp
js
pop
lret
push
mov
iret
mov
xlat
jo
sub
les
rolb
mov
das
cwtl
outsl
sar
int
mov
test
mov
and
nop
sub
pushf
dec
jle
cmpl
mov
or
mov
jl
push
imul
jg
push
sbb
lahf
in
data16
cs
cmp
cmp
cld
pop
mov
pop
into
sbb
inc
xchg
jo
in
push
sub
adc
sub
xchg
fdivrs
inc
xchg
mov
int3
sbb
rol
jb
dec
pop
pop
xchg
push
nop
aam
jne
and
lods
sahf
lock
adc
popa
and
jbe
push
mov
push
mov
mov
add
cltd
jge
pop
push
mov
outsl
jno
push
jg
ror
ret
xchg
or
dec
mov
sbb
lret
data16
jg
pop
add
das
push
xor
push
sub
iret
iret
dec
cmp
mov
dec
pop
loop
push
incl
aas
lcall
loop
jge
cs
jmp
sbb
outsl
sub
jbe
adc
int
push
pop
movzwl
in
inc
mov
aas
icebp
dec
push
xor
fcompl
jns
iret
maxps
dec
xchg
sub
insl
adc
aas
adc
add
push
adc
pusha
iret
lods
cld
mov
repz
push
jbe
insb
pop
pop
mov
cmp
jge
shlb
add
mull
mov
push
jg
stos
rol
dec
imul
mov
dec
test
mov
shrl
sbb
jne
jmp
popa
ja
or
cli
push
ja
dec
and
arpl
loope
hlt
cmp
jae
aas
xchg
sub
sbb
int
cmp
add
push
xchg
out
xchg
vpackuswb
and
fimull
lods
std
lret
xchg
mov
xchg
cld
les
or
test
xor
mov
mov
push
hlt
out
or
push
and
mov
aam
loop
cmp
inc
or
mov
jne
pusha
sub
adc
pop
addr16
fbld
or
lds
fwait
dec
cmp
mov
inc
stc
inc
mov
test
mov
aas
add
dec
pop
dec
das
pop
lret
ds
xor
pop
and
in
push
fwait
mov
cmp
or
cltd
jl
pop
lret
ja
pop
rcr
es
outsl
xlat
mov
xor
xchg
pop
push
inc
cmp
add
lock
pop
and
and
pop
cmc
sahf
inc
imul
or
js
or
aad
iret
ret
jp
and
mov
enter
lcall
cli
hlt
jl
mov
mov
adc
mov
jg
dec
lock
pop
mov
push
data16
push
insb
leave
jl
cmc
add
repz
testb
loope
push
pop
stos
cld
jo
jp
aaa
fsubl
rcll
in
and
sbb
les
pop
cmp
adc
fadds
aas
sti
inc
jge
out
adc
cltd
loop
std
pushf
pushf
jmp
pusha
push
movl
mov
jmp
movb
lea
jp
push
mov
pusha
pushl
lea
call
pushf
movl
pushl
lea
jmp
pushl
mov
pushf
pushf
jmp
xchg
mov
push
pushf
push
pushl
ret
call
sub
shrb
std
xchg
loope
leave
jp
lret
fbld
cmc
clc
in
mov
fadd
sub
xchg
sub
push
stos
rcrl
mov
cmp
cmpl
into
fwait
pop
js
pop
push
push
cmpsb
insb
shrl
sarl
imul
rol
mov
push
cmp
sar
fnstcw
push
push
sbb
xor
jbe
sbb
mov
xor
inc
testl
pop
jl
cmp
sub
mov
imul
mov
adc
mov
xor
and
mov
sub
dec
push
mov
or
pop
jl
shrb
adc
cmp
imul
lods
nop
inc
pusha
adc
loopne
repz
dec
fldcw
mov
fdivs
mov
mov
stc
push
cmp
inc
jae
ljmp
jmp
mov
jmp
pop
inc
sbb
push
in
addr16
cwtl
aad
mov
mov
enter
inc
imul
das
mov
popa
aaa
imul
insl
or
ljmp
pop
push
and
outsb
jg
push
cmp
mov
out
pop
decl
adc
jecxz
imul
repnz
jbe
mov
out
shlb
mov
popl
or
mov
fwait
loop
imul
rorl
les
in
in
dec
xchg
into
flds
stc
and
cld
sub
out
push
sbb
in
loop
out
lock
jecxz
cltd
and
imul
mov
xorl
out
dec
mov
and
xchg
jge
daa
outsl
mov
cmp
push
out
in
sub
or
jns
aaa
xchg
inc
dec
andb
adc
xchg
push
repnz
inc
paddq
mov
mov
jns
cmp
mov
cld
fnstsw
in
das
lods
ja
ja
nop
pop
adc
es
loop
sub
mov
imul
arpl
dec
jns
pop
push
daa
stc
insl
push
cmc
lcall
scas
xchg
sub
cld
cmp
xor
divl
adc
mov
pop
dec
push
bnd
xor
and
push
stc
std
dec
xlat
iret
sbb
ljmp
mov
mov
popa
inc
sub
jg
add
lahf
jge
jne
sahf
push
inc
xchg
adc
orl
sahf
mov
sbb
jle
jg
daa
movsl
nop
clc
ret
mov
mov
adc
sub
xchg
push
test
jo
mov
cmpb
cmpsl
or
mov
mov
iret
fwait
out
outsl
repz
andl
into
nop
sub
or
mov
cs
movsl
outsb
pop
mov
lret
jns
or
loope
pop
push
jo
pop
jbe
pop
cmpsl
jne
testb
lcall
stc
test
xor
or
int
adc
inc
xor
int3
cltd
xchg
xor
std
xchg
cmp
cmp
int3
fldl
mov
xchg
adc
dec
dec
inc
cmp
fistl
fcmovnbe
subl
scas
insl
jmp
rorl
adc
adcw
dec
movsl
sub
insb
repnz
sbb
mov
pop
and
test
int3
adc
test
cmp
scas
sbb
mov
daa
mov
mov
cmpsb
lods
addr16
pop
cmpsb
loopne
fs
lret
jb
or
cmp
add
and
push
and
mov
mov
scas
xor
les
cmp
lods
mov
movsb
enter
xor
fdivl
add
test
clc
adc
adc
andl
mov
fcoml
sti
lret
mov
scas
lcall
jle
push
jge
push
loope
jmp
sub
out
inc
add
lea
mov
mov
mov
call
push
pusha
pushf
pushf
nop
pushl
movw
pushf
mov
mov
pushl
movsbw
not
mov
jmp
mov
push
mov
call
lea
jnp
mov
pusha
lea
jmp
xchg
call
call
lea
jo
mov
pushf
lea
mov
mov
jmp
xchg
mov
pusha
pushf
pushf
pushl
ret
pushf
xchg
movb
pushf
pushf
pushl
ret
mov
mov
pushf
call
xorb
sar
int3
xchg
mov
iret
mov
in
ljmp
cld
ds
xor
or
mov
popf
add
mov
rorb
leave
frstor
jmp
inc
xor
fs
mov
jge
loopne
mov
sub
and
idivb
sub
iret
cmp
mov
cmp
push
jno
pop
lcall
fdivrl
cs
fsubrl
xchg
int
inc
insb
dec
into
mov
int
fs
pop
rolb
orb
ljmp
fistl
pushf
gs
jl
lcall
mov
andl
cmp
add
jo
jo
inc
or
xchg
push
aaa
cmpsl
sbb
loope
ficompl
ret
jmp
jmp
popl
scas
xor
cmpsl
cmpsb
insl
popf
iret
xchg
pusha
cli
test
leave
enter
aaa
div
adc
hlt
aaa
test
inc
mov
dec
les
or
sbb
mov
fwait
arpl
push
fmull
cmc
in
push
mov
pushl
add
arpl
les
iret
shr
cmp
shll
pop
xor
dec
or
in
mov
cmp
inc
andl
in
repz
es
or
mov
sbb
in
mov
movsl
in
xchg
movsb
dec
mov
xor
faddl
or
rcl
cwtl
xchg
sahf
pop
cs
push
adc
cmp
cmp
pop
push
imul
pop
sbb
fists
dec
push
sbb
add
sub
out
adc
xor
push
mov
sub
fisubs
xorb
or
mov
imul
cmp
sub
fwait
in
or
cmp
ljmp
cltd
dec
mov
rcrl
mov
andb
stos
inc
inc
std
or
cwtl
push
mov
push
out
andb
call
aad
std
lds
imul
hlt
cs
popa
pop
mov
jns
scas
xlat
or
out
enter
pushf
push
lret
stos
stos
jno
xor
sub
adc
mov
inc
or
and
mov
mov
dec
aaa
aad
call
mov
in
sbb
add
mov
or
adc
jae
cwtl
mov
ficoms
sbb
int3
icebp
jns
and
dec
in
push
pop
dec
lea
call
mov
test
mov
push
push
fldl
icebp
sbb
ds
and
les
sahf
cwtl
test
mov
iret
fcomps
mov
incb
int3
sbb
xchg
jns
cmp
push
negb
or
inc
lret
icebp
call
sti
mov
sub
aas
dec
xchg
cmc
rclb
sbb
ljmp
jb
stc
lods
cli
aas
movsb
insb
nop
sub
call
add
sbb
push
loope
mov
scas
pop
dec
in
outsb
lret
in
mov
sti
mov
out
mov
adc
paddusb
xchg
mov
lret
lcall
fisubrs
push
inc
add
leave
insb
arpl
fdivrl
sub
cmp
xchg
and
or
aad
shlb
cmp
dec
sub
xchg
out
fisubl
dec
cld
mov
cmp
aas
mov
mov
cltd
fwait
xchg
xchg
pop
xor
xor
cmp
mov
aaa
out
push
push
mov
sbb
xor
mov
out
lcall
xchg
xchg
xchg
adc
and
mov
mov
pop
cltd
lea
adc
jb
jns
xchg
dec
jb
add
mov
pop
loop
pushf
and
and
mov
out
jp
pushf
dec
shr
dec
sbb
jp
inc
adc
in
mov
push
fucomp
mov
in
pushf
jp
hlt
fnsave
xor
push
jg
rclb
movsl
cld
mov
pop
push
mov
int3
lods
stos
clc
bound
xor
dec
in
add
rclb
xchg
sbb
push
mov
cmp
xchg
cmpsb
mov
jnp,pn
mov
mov
sbb
movsl
enter
mov
xor
fisttpl
mov
in
lret
jecxz
sub
jg
call
push
bound
pop
lods
xlat
adc
mov
cmp
mov
ljmp
loopne
mov
stc
popa
jnp
pop
leave
flds
cmp
sbb
das
fnstenv
xchg
loopne
xor
add
mov
fidivl
ljmp
inc
dec
add
cmpsl
cli
mov
xchg
stc
cmp
mov
test
push
loope
pusha
push
inc
popf
mov
lahf
mov
shrb
dec
fs
imul
pop
push
stc
pop
out
insb
jb
jg
arpl
in
xchg
fiadds
fwait
gs
cmpsb
sub
repnz
cmp
cmpsb
fldcw
dec
cmp
aaa
iret
push
rcrb
sub
adc
pusha
daa
cmpsb
or
xor
xchg
mov
dec
ret
adc
mov
lret
sbb
and
or
popf
mov
xor
movsb
cmpl
ja
jl
es
and
lock
mov
cmpsl
repnz
push
pop
ret
pop
ljmp
adc
rorl
xchg
pop
sbb
fiadds
xchg
mov
add
cmp
hlt
jnp
stos
ljmp
and
or
adc
aam
add
jb
cmc
aam
lea
push
adc
repnz
gs
call
jne
in
push
sbb
jl
sub
testb
das
pop
pop
and
or
fisubl
stos
lock
into
pop
pop
fadds
mov
rcl
push
mov
mov
int3
les
inc
imul
inc
xor
or
repnz
scas
and
cli
pop
inc
inc
inc
inc
or
subps
pop
mov
push
or
sub
andb
test
mov
mov
xor
jb
mov
insl
dec
call
sti
decl
push
jg
mov
cltd
imul
in
and
test
in
push
sbb
xchg
xor
repz
xchg
add
mov
gs
and
test
ljmp
mov
mov
test
inc
add
sub
or
push
lahf
cld
push
cmp
sub
sbb
das
fidivs
ja
movsl
mov
loope
sub
pusha
pushf
addl
hlt
cmpsl
aas
inc
aas
mov
pop
movsb
jno
xor
mov
mov
repz
inc
ds
cs
xchg
repz
xlat
adc
cmpsl
mov
iret
adc
test
in
mov
stos
cmpsl
cmpsb
outsb
out
cmc
js
out
jb
xchg
pushf
xchg
sub
popa
sub
pop
xchg
push
sbb
jge
xchg
xchg
or
fadd
sbb
cmp
mul
aas
enter
adc
fadds
cwtl
add
data16
xor
mov
addb
adc
outsl
repnz
in
rcll
es
lods
dec
loopne
in
idivb
std
mov
mov
xchg
clc
push
fists
pop
std
dec
push
jb
push
push
cmc
imul
bound
cmp
cli
lret
test
or
lods
lea
or
aam
or
fdivl
cmp
push
jb
sbb
cld
jb
pusha
inc
xchg
adc
cmp
icebp
je
enter
out
decl
ljmp
lock
pusha
nop
jmp
lea
call
mov
jmp
mov
pushf
pushf
jmp
call
movl
pushf
lea
jmp
push
mov
call
xchg
movl
push
push
pushl
ret
mov
pushf
pushf
mov
pushf
call
jmp
movzbw
nop
jmp
xchg
lea
pop
pop
movzbw
mov
movl
push
lea
jmp
xchg
pushf
mov
pushl
ret
nop
push
xchg
jmp
jmp
mov
nop
call
nop
jmp
movzbw
movzbw
movzbw
not
nop
mov
movsbw
movsbl
bswap
push
cwtl
mov
not
lea
pusha
movw
lea
call
push
mov
jmp
mov
pusha
jmp
push
lea
push
pushl
xchg
mov
pushf
pusha
pushf
pushl
ret
pushf
call
call
call
jmp
cwtl
mov
jmp
pusha
not
setbe
lea
nop
lea
push
call
mov
xchg
pusha
pushf
pushl
ret
test
xor
pushl
xor
bt
pusha
xorl
bt
push
xor
pushf
xor
jmp
nop
call
pusha
pusha
jmp
jmp
setb
mov
movb
xchg
lea
ja
push
jmp
pushf
movw
mov
not
lea
pop
mov
pushf
jmp
movl
mov
xchg
mov
mov
mov
pushl
ret
nop
pushf
mov
movsbl
pop
pop
mov
call
mov
movb
mov
mov
pushf
pushf
lea
pushf
pushl
push
xchg
mov
pushf
movb
movb
pushl
ret
jmp
cmpsb
repnz
sar
dec
cwtl
imul
adc
dec
sub
dec
adc
stc
movsb
sub
repnz
mov
xchg
aam
aad
add
aaa
gs
in
xchg
xchg
into
cltd
in
in
stc
mov
ret
mov
jae
dec
mov
dec
and
and
lods
in
xchg
aam
push
gs
mov
add
mov
mov
inc
shlb
sbb
mov
jns
mov
in
in
addr16
pusha
shr
dec
add
ss
test
xchg
shl
mov
mov
mov
mov
push
and
ja
daa
cld
dec
pop
sar
dec
repz
mov
push
scas
sbb
sbb
jno
in
mov
lods
nop
pop
pop
lahf
clc
pop
mov
out
sahf
and
dec
add
dec
clc
fisttpll
in
add
pop
jb
sar
testl
jmp
dec
lahf
pushf
fs
dec
ret
out
xchg
xchg
pop
ja
movsl
sub
and
push
ds
movsl
jmp
inc
popl
popf
xchg
aas
xor
bound
sbb
push
or
fsubrl
push
mov
int
bsf
mov
aam
adcb
clc
fidivrl
cmp
inc
mov
cltd
xor
stc
jae
xor
rcrl
pcmpgtw
int3
or
gs
cmp
outsb
add
movsl
std
dec
pop
test
std
jle
icebp
shll
dec
jp
fistpll
push
cmp
sub
js
inc
inc
mov
sbb
inc
mov
nop
sub
int3
adcb
loopne
mov
stos
pop
dec
leave
ror
loop
or
enter
int
and
push
jecxz
aas
jne
push
daa
inc
cmp
arpl
push
notl
sub
inc
or
sbb
fwait
cmp
popa
mov
push
jne
leave
mov
mov
adc
dec
adc
jge
in
mov
pop
push
sbb
gs
and
loope
adc
inc
ss
or
mov
mov
adc
lock
xchg
add
jbe
test
push
ja
pop
sar
xchg
loop
pop
cmpsb
rclb
mov
pushf
sahf
jl
shl
jp
popa
pop
push
int3
sti
jns
int
push
adc
xor
rcl
mov
mov
and
in
sub
lret
cmpsl
sbb
push
adc
or
pop
add
outsb
rcr
jae
xchg
cmpsb
cs
add
cltd
leave
imul
mov
insl
cmpsl
icebp
inc
in
dec
xchg
cmpsb
adc
sbb
std
pop
pop
decl
addr16
and
push
js
mov
cli
aaa
dec
pop
mov
sti
add
or
cld
leave
push
mov
cmp
jecxz
xchg
xchg
bound
inc
loopne
in
sbb
mov
add
imul
popa
mov
mov
jmp
inc
mov
out
sub
mov
push
pop
cmpsl
mov
mov
xchg
pop
sti
sub
gs
stos
xchg
push
inc
jnp
decl
dec
int
repz
loop
or
insb
jmp
lret
jg
fisttpl
hlt
cs
out
push
clc
inc
cmp
adc
test
mov
addl
test
cmpsb
and
loope
enter
aam
rol
enter
and
cmp
lahf
dec
sub
mov
pop
xor
test
subb
ss
jge
out
int3
push
sti
jmp
push
data16
adc
into
pop
lret
or
int3
jae
movsb
imul
push
xor
sbb
lcall
sbb
or
dec
mov
ret
mov
mov
mov
loope
push
fnsave
subb
icebp
xor
cmp
gs
xchg
pusha
mov
pop
push
in
jecxz
sub
adcl
int
mov
lret
push
mov
xor
dec
sbb
rcrb
push
shlb
dec
jns
insb
fisubrs
dec
mov
pop
rorb
jbe,pn
outsl
movsb
mov
test
repnz
cli
scas
and
cmp
mov
adc
sbb
mov
jecxz
mov
loopne
inc
sub
jnp
jno
sub
scas
pop
int
cmp
lahf
xor
cmp
lahf
dec
scas
inc
pop
fistpll
push
mov
ss
fimull
lock
adcb
cmp
loopne
imul
dec
lcall
pop
out
jo
daa
xchg
xor
outsb
mov
xlat
outsl
ja
pop
orb
cli
mov
add
cltd
cmp
lods
cmpsl
push
sbb
and
jbe
inc
adc
jo
add
or
movsbl
pop
movsbw
bswap
not
xchg
pushf
mov
pushl
mov
pusha
bswap
mov
bswap
call
lea
jmp
pushf
pushf
xchg
jmp
inc
cmp
sar
test
xor
push
lcall
xor
fsubrs
inc
mov
inc
cmp
sbb
xchg
call
sbb
jae
lods
cltd
inc
loopne
jg
jae
mov
sub
sbb
push
cwtl
aad
gs
dec
fdivr
sub
cmpsl
hlt
repz
adc
sub
aad
dec
emms
out
or
mov
imul
loop
push
pop
and
mov
jnp
andb
shll
adc
dec
cmpsb
jne
mov
push
fnstcw
add
sub
cmp
inc
dec
push
sub
adc
pop
adc
in
mov
stc
jae
xor
xchg
push
lahf
adc
jg
add
or
int3
pop
mov
sar
cmp
in
add
jp
inc
push
mov
lea
aad
loop
lods
or
xor
xor
jl
pop
out
in
fs
in
fistpl
and
xchg
lods
test
nop
sbb
bound
fnstcw
xchg
dec
xchg
sbb
jl
mov
stc
popa
stos
mov
inc
cmp
pop
mov
mov
call
push
xor
aas
dec
cmp
mov
push
lds
mov
repnz
adc
mov
mov
xor
adc
in
daa
lock
and
mov
jae
mov
jo
popf
add
jmp
mov
dec
outsl
and
ja
rcll
mov
sbb
jge
xlat
movhps
pop
test
and
rcrb
cmc
lret
push
mov
ss
xchg
mov
ffreep
rorb
lret
jae
push
mov
sbb
dec
lds
and
fwait
add
stos
shlb
movl
inc
aad
cmp
repz
aad
idivl
xchg
pop
lods
mov
sti
mov
stos
pusha
lret
insl
mov
jns
out
and
pop
adc
arpl
jbe
sub
xor
out
inc
nop
xor
jbe
inc
xor
test
mov
lods
and
pop
aad
jl
or
mov
or
les
lret
add
fwait
daa
cmpsb
mov
sub
std
push
test
and
lret
and
dec
fsubl
shrb
jo
out
and
jl
test
inc
fisubrl
jl
dec
pusha
push
fistl
ss
fdivrs
sbb
cltd
sarl
popa
cmc
call
jns
cmp
addr16
mov
aaa
push
cld
sub
leave
and
inc
out
mov
aas
incl
inc
fwait
std
pop
mov
xchg
sti
adcl
lret
in
sub
imul
cmpsl
fldenv
adc
mov
out
mov
movsl
aas
mull
fsubs
push
sub
inc
and
mov
in
mov
xchg
nop
lea
imul
xchg
dec
mov
mov
pop
pop
mov
jle
lods
ja
mov
dec
dec
cs
nop
mov
cmp
cltd
ja
gs
add
cmc
sahf
notb
cmp
loope
leave
adc
mov
daa
mov
idivl
dec
inc
cmpsb
rcrb
adc
xor
pop
mov
movsl
mov
dec
mov
sub
les
int3
push
pop
dec
lret
fwait
iret
inc
or
sti
inc
daa
jns
mov
push
sbb
fs
jl
je
pop
xchg
out
jnp
jae
lret
push
nop
clc
inc
push
cmpsb
cmc
insl
cmpsl
lock
mov
dec
stc
sbb
or
rcrb
imul
push
cmp
out
pop
xchg
jp
test
add
cs
jg
repz
les
push
cmpsb
addr16
cmp
sub
fcomps
add
popa
daa
sbb
push
push
shrl
xadd
or
mov
inc
cmp
mov
shll
loope
add
dec
push
shrb
cwtl
cld
enter
xor
jno
and
jns
movsl
sub
inc
pop
mov
std
mov
push
aam
mov
bound
mov
pop
sub
ret
mov
push
lahf
out
call
cltd
sbb
stos
lods
xchg
cmpsl
test
or
loope
jmp
sub
mov
andb
in
xchg
cmp
or
jnp
std
sub
xor
jmp
roll
xor
out
mov
int
mov
xchg
int3
cmp
pop
adc
mov
fiaddl
inc
jae
fistl
cmp
pop
add
rcr
loope
pop
jmp
cmp
and
in
xchg
fcmovb
leave
aaa
push
pop
inc
xchg
jecxz
pop
mov
adcl
outsl
sbb
in
adc
ret
sbb
mov
pop
or
movb
cs
xor
clc
out
out
movsl
aas
jo
xor
xor
sub
adc
mov
mov
cmp
sub
divl
mov
dec
sbb
or
imull
xor
mov
rcrb
sub
stos
push
dec
jle
imul
push
push
add
shl
jne
cmc
xchg
enter
cmp
add
mov
sbb
imul
mov
dec
xor
adc
iret
inc
daa
inc
out
push
and
rcl
shlb
insl
orl
data16
dec
popf
push
push
pop
add
je
aaa
mov
addr16
xor
mov
cli
mov
int3
push
addr16
inc
push
cld
inc
lret
fdiv
into
mov
daa
dec
push
adc
out
dec
mov
pop
push
fsub
mov
nop
jno
push
pop
pop
cmp
cmp
dec
dec
inc
dec
xchg
ljmp
ljmp
scas
fdivrl
xlat
movsl
jecxz
nop
fimuls
mov
pop
call
mov
push
pop
lods
and
test
clc
repnz
adc
repz
mov
inc
jo
dec
push
add
out
fs
pusha
sub
insb
push
cltd
daa
out
mov
pop
pop
cmpb
add
jo
lret
lock
dec
fldcw
stc
out
sub
add
mov
dec
dec
lea
loop
pushf
hlt
lret
dec
adc
fcmovbe
add
std
jbe
or
add
int
push
mov
fadds
mov
fucomp
clc
jb
int3
mov
testl
orb
xchg
and
out
sbb
jl
fldl
loopne
lahf
repz
pop
pop
leave
push
cmp
lods
dec
nop
sbb
push
lods
adcb
lds
pusha
scas
call
jns
pusha
mov
lea
or
inc
cmp
pop
fldt
je
rcr
sub
and
add
imul
cs
fcompl
sub
mov
add
xchg
pop
adc
outsl
dec
gs
mov
jle
test
nop
xchg
stos
pop
xor
les
sub
popa
aaa
adcl
sub
mov
out
dec
or
rcrl
popa
mov
ret
xlat
test
subl
aad
fcmovnb
daa
andl
movaps
pusha
push
stos
or
gs
pop
rorl
and
jmp
sub
jno
dec
test
jb
pop
fimull
mov
jbe
jge
leave
mov
pop
idivb
sub
push
and
pushf
add
xchg
fdivrl
sub
xrelease
icebp
rorb
cmc
cld
loope
or
inc
and
adc
js
out
mov
add
jge
add
pushf
pushf
call
pushf
pushl
mov
movw
pusha
lea
jno
pushf
lea
call
push
mov
pushf
call
xchg
mov
mov
mov
pushf
jmp
pushf
pusha
pushf
xchg
push
mov
push
mov
pushf
push
call
mov
pushl
jmp
mov
lea
mov
mov
bswap
pop
mov
call
mov
nop
call
xor
bt
xor
call
mov
mov
lea
pushf
lea
bswap
pushf
mov
bswap
jmp
nop
pusha
xchg
jmp
jmp
xchg
pushl
push
mov
pushl
ret
mov
xor
xor
test
xchg
push
jo
imul
mov
add
add
push
inc
jecxz
std
ret
pop
cli
mov
loope
and
mov
cmp
or
sbb
dec
jne
fnsave
mov
decb
inc
testb
std
mov
ret
push
je
rcrb
clc
pop
jns
lea
repnz
insb
js
cmpsb
hlt
add
xor
xchg
ds
cmc
test
jg
cwtl
mov
cmp
add
push
add
cmp
xor
and
int3
dec
sar
mov
pop
mov
pop
cltd
insl
push
dec
jno
jbe
sbb
add
pop
add
jbe
sub
divb
clc
mov
popf
dec
pop
hlt
inc
add
fadds
sbb
std
icebp
mov
xor
sbb
pop
pop
js
imul
sahf
pushf
jg
call
bnd
pushf
imul
ljmp
pusha
dec
scas
cld
push
adc
xor
push
sub
mov
orb
and
add
xor
fidivrs
nop
imul
jg
shl
scas
or
incl
xchg
xlat
inc
aam
test
and
sub
lret
dec
adc
sub
xor
push
add
dec
inc
jge
dec
fwait
ret
cli
jnp
push
cmpsl
dec
push
fs
arpl
sbb
cltd
lock
xor
mov
inc
cmc
sbb
data16
rclb
push
xor
mov
mov
es
push
sahf
sbb
dec
jnp
mov
lods
adc
xlat
lds
and
sbb
sbbl
and
mov
cwtl
mov
in
add
xor
shrb
insl
movb
sarl
test
jmp
and
lret
xchg
pop
out
adcl
cld
pushf
xchg
out
pop
inc
push
scas
popf
sub
xchg
dec
or
cli
adc
cs
mov
lock
enter
add
sbb
sub
mov
add
jae
dec
sar
int3
sbb
mov
notl
ffree
inc
lcall
ret
lods
pushf
mov
add
jnp
fwait
dec
stc
or
and
stc
iret
cltd
cmpsl
aaa
pop
cmp
daa
sub
pop
cli
mov
push
cmpsb
ret
sbb
xchg
mov
pop
add
jl
push
push
aam
xor
dec
xor
lods
mov
sbb
gs
loopne
sub
popa
mov
pushf
je
push
sub
bound
xor
shll
xchg
testl
fstl
push
jmp
andl
out
cmp
jnp
push
jns
decb
inc
int3
bnd
or
outsl
push
mov
pop
jmp
mov
add
icebp
shrb
scas
pop
rcrl
adc
sub
mov
into
sahf
adc
xor
jns
mov
pop
xor
test
out
sbb
das
push
sbb
add
mov
adc
jne
adc
mov
inc
or
flds
dec
outsb
mov
xchg
sbb
sub
push
into
mov
jbe
cmc
les
ja
sub
mov
stos
push
mov
xchg
ljmp
out
mov
inc
daa
repnz
pop
repnz
mov
insl
cmpsl
je
inc
popa
adc
insb
pushl
pop
jo
lahf
mov
xchg
xor
into
adc
push
push
pop
mov
fstl
repnz
pop
inc
push
xchg
jecxz
fdivp
mov
std
int3
xlat
jns
popa
inc
in
cwtl
cli
popf
adc
movsb
outsb
aaa
push
push
pushf
dec
bound
lock
insl
sub
mov
rolb
in
hlt
mov
mov
mov
imul
rcrb
lahf
incb
jbe
ds
ja
lret
pop
sbb
cmp
pop
test
cmp
out
mov
rcl
xchg
xchg
pop
pop
adc
mov
pushf
push
xchg
jbe
push
mov
and
out
xchg
fbstp
popa
mov
and
push
push
push
movsb
outsl
inc
adc
or
dec
sub
aad
scas
jbe
movsl
aas
jo
scas
add
addb
pushf
or
push
out
test
ss
inc
push
mov
xchg
pusha
adc
int3
sub
enter
dec
xor
ficomps
insb
lods
data16
mov
push
fnstcw
jecxz
jl
xor
dec
idivl
shlb
inc
fs
aas
xchg
push
xchg
les
sbb
das
fistps
sarb
jmp
into
and
es
cmc
filds
cmpsb
lea
mov
lea
lea
jmp
pushf
movw
xchg
call
xchg
movl
pushl
pushl
ret
mov
push
jmp
sub
outsb
inc
sar
sti
enter
fwait
aam
shrl
sahf
mov
sub
inc
mov
jo
popa
sbb
dec
jge
jl
bound
sarb
fidivl
cmp
jle
mov
and
xor
push
xor
sub
pop
notb
dec
sub
jne
mov
ss
cmpsl
pop
and
in
or
sub
mov
repz
inc
dec
popa
movsl
fsubl
sub
filds
inc
sar
or
out
xchg
call
inc
rcll
xchg
in
fisubl
fdivrl
pop
mov
jp
push
inc
fcmovnu
lret
leave
movsb
push
ds
add
arpl
inc
add
enter
sarl
inc
sar
sub
and
test
xchg
push
push
arpl
xor
xchg
and
xchg
sbb
js
pop
jnp
jp
addl
push
jp
jle
scas
cmp
jl
loop
lock
in
test
ret
iret
nop
jns
xor
clc
mov
call
in
fldenv
dec
adc
push
fcmovu
lock
lret
lret
push
inc
or
loopne
mov
add
cmp
leave
xchg
shrb
jg
test
aas
iret
jge
je
inc
les
sbb
fists
bound
ret
jg
in
out
mov
orb
pop
aaa
imul
and
jbe
and
scas
js
cld
adc
jno
cmp
pusha
lret
mov
mov
push
sbb
dec
mov
clc
ret
ret
jne
and
xor
add
add
mov
and
insl
test
adc
imul
sub
adc
gs
sbb
or
cmp
data16
cmp
stc
adc
rcrb
js
mov
filds
daa
ret
movsb
movsb
jge
fwait
out
push
ret
push
inc
clc
jnp
xchg
lds
dec
mov
inc
or
data16
or
incb
icebp
sub
pop
inc
sar
or
or
mov
ret
shll
cmp
mov
xor
mov
mov
jne
or
lods
fdivs
cmpsb
push
fsubl
outsb
rolb
jp
inc
test
adc
jnp
loop
loopne
cli
lods
cs
outsl
jne
dec
shll
in
fisubl
mov
test
add
adc
xchg
outsl
leave
mov
popa
imul
cmp
mov
push
in
xor
jmp
mov
push
mov
stos
ja
dec
lcall
jg
mov
lods
jns
cmpsl
adc
daa
insl
roll
test
orl
cmp
cmp
and
rorl
or
add
mov
or
cli
or
outsb
jae
stc
gs
movsb
hlt
push
scas
jno
sbb
aas
cld
or
cmc
test
in
mov
jbe
dec
cld
lret
lcall
ret
cwtl
dec
fidivrs
inc
or
mov
clc
bound
inc
mov
inc
mov
jb
adc
inc
mov
dec
xchg
cmpsb
int3
mov
sarb
sbb
sub
cmp
into
cmp
and
es
or
int3
int
inc
xchg
in
rorb
mov
xor
cmp
push
daa
xorl
sub
cltd
pop
sub
mov
push
aaa
inc
mov
lret
lea
dec
jge
pop
pop
out
add
sub
fs
inc
mov
cmp
ret
pop
fcoml
cmc
das
fcoml
xchg
and
ficompl
lret
or
fs
adc
mov
sbb
push
mov
pop
sbb
scas
sbb
sub
xchg
xchg
and
inc
add
xchg
fs
jmp
jle
filds
xchg
arpl
sub
pop
fisttps
repnz
jbe
daa
push
jbe
enter
aam
jge
dec
pop
icebp
lret
jne
ret
out
iret
fnstcw
jmp
testb
hlt
loope
mov
push
dec
in
dec
sbb
cmpsb
and
sbb
lcall
push
andl
pop
dec
mulb
push
aam
add
out
cmp
push
jmp
or
mov
aam
pop
pop
push
cmp
or
ja
push
jbe
fs
sub
jb
lret
jmp
mov
call
pusha
jmp
mov
mov
mov
lea
jns
push
pushl
lea
mov
xchg
push
pusha
push
push
pushl
ret
xchg
inc
sar
int3
sbb
push
es
mov
das
dec
cmpb
xor
loop
adcb
lea
pop
jbe
subb
add
popa
in
in
movsb
fisubs
mov
out
dec
mov
push
out
cltd
push
cwtl
mov
pop
push
sti
shlb
pop
cld
cmpsl
sahf
jmp
add
adc
cmp
pop
add
movl
cmp
ljmp
xchg
xchg
movsb
or
cld
jg
cltd
movsl
test
jle
cltd
mov
xchg
outsb
es
mov
pop
sarl
lock
js
insl
loopne
inc
aad
or
imul
adc
add
call
push
jmp
mul
test
push
stos
jbe
test
mov
mov
repnz
fwait
mov
sub
sub
fistps
fldcw
out
lret
loopne
scas
sti
jns
mov
pushf
mov
dec
mov
xlat
ja
inc
mov
mov
push
pushf
xchg
and
xchg
icebp
mov
inc
jno
iret
and
mov
dec
rclb
lcall
cmpsb
popa
jae
dec
mov
mov
and
divl
js
adc
rcrl
jnp
fldl
jmp
pop
add
fwait
push
dec
mov
sub
call
xchg
lcall
aam
test
arpl
mov
lock
fnstcw
sarl
in
imul
dec
clc
sbb
mov
scas
in
adcb
in
dec
test
and
mov
movsb
add
sub
inc
movups
aad
shll
push
nop
inc
aad
data16
mov
dec
cld
out
lea
rorb
cld
insb
std
cmpsb
arpl
cmc
mov
fdivrp
in
adc
aam
mov
pop
es
sbb
ret
popf
scas
popa
cmc
xchg
iret
rcrl
inc
fadd
pop
dec
sbb
cmpsl
sub
sub
ja
push
mov
notl
icebp
sbb
push
inc
imul
jns
and
lods
stos
scas
pop
mov
mov
jne
outsl
cmp
adc
and
inc
push
and
mov
inc
add
mov
and
rorl
gs
inc
lock
adc
mov
je
lods
add
stos
jbe
and
out
out
lret
mov
inc
pop
jo
push
das
pop
mov
push
pusha
jne
sbb
adc
adc
dec
ret
lods
testl
outsl
movsb
adc
lock
mov
orb
dec
lods
outsb
leave
loopne
lcall
sbb
pop
stos
in
push
sbb
jle
pop
jl
test
or
mov
scas
inc
xchg
dec
xor
cmp
fstps
fimull
mov
aaa
xor
or
mov
aam
call
xor
mov
lods
sbb
test
push
jne
pop
fsubrp
mov
push
push
hlt
mov
movsb
and
mov
rcrb
sbb
lds
out
or
lret
aas
pop
and
xchg
mov
mov
mov
mov
sub
inc
push
stos
and
push
jmp
and
cmp
idivb
test
inc
enter
aad
sbb
pop
pushf
jbe
fwait
cmp
lds
pop
pop
aam
movl
mov
mul
and
jnp
fsubrl
or
rorl
jb
insl
rorb
fs
bound
lret
pop
fdiv
insb
mov
je
sbb
fstps
pop
push
fwait
pop
sbb
call
aad
arpl
jecxz
xchg
addb
mov
xchg
lods
mov
push
inc
mov
out
mov
scas
pop
jbe
jo
mov
sti
addr16
mov
mov
xor
mov
sbb
cmpsb
ds
stc
icebp
cmp
cltd
lret
xchg
lahf
call
cmp
xchg
xchg
sbbb
sub
cmc
mov
rol
add
push
cmp
mov
shr
adc
push
or
add
sbb
outsb
call
push
aas
inc
mov
movsb
sub
jmp
cmp
in
adc
xchg
inc
lret
aad
sbb
pop
sub
inc
lcall
mov
imul
sub
imul
adc
shrb
loopne
lods
or
mov
fistpll
adc
cmpsl
add
fadd
push
sbb
ljmp
pop
push
dec
add
jno
mov
mov
or
and
dec
and
test
mov
jns
pop
mov
mov
mov
out
jl
inc
addr16
rolb
jns
scas
mov
and
mov
mov
or
and
into
sbb
xchg
xor
outsl
inc
xor
mov
rclb
lcall
and
popa
pop
sub
mov
lea
lock
mov
sti
daa
shrb
xchg
pop
loope
dec
dec
movsl
les
mov
dec
add
mov
sti
mov
inc
stos
or
jmp
pusha
push
fistps
pop
add
push
lahf
push
inc
inc
inc
outsl
cmc
fwait
sub
aaa
jle
cwtl
add
push
sub
lea
adc
push
jb
fcmovbe
xchg
jbe
aaa
add
jecxz
inc
fistl
mov
xor
into
cs
ljmp
pop
add
xor
out
fiadds
ja
jl
push
pushf
xchg
fisttpll
jge
lea
sub
xchg
sti
dec
mov
mov
loop
cmp
movsl
sub
outsb
cmp
popa
add
add
fs
daa
inc
cmp
and
sbb
or
xchg
push
aaa
fs
push
and
aaa
bound
movb
inc
shrb
dec
loopne
lods
inc
jle
out
push
pop
test
fucomi
add
jo
cmovge
idivb
fbstp
in
adc
jmp
rcrb
insl
enter
or
xchg
cmc
in
cmp
inc
mov
data16
je
aam
lret
stos
rol
lods
fidivl
push
repz
out
xor
inc
xchg
xchg
add
roll
out
icebp
lods
int
ljmp
ret
sub
mov
idiv
test
push
cmpsl
add
insb
icebp
jmp
mov
rcll
mov
orl
jmp
mov
add
and
out
xlat
push
lahf
add
inc
sbb
jbe
iret
pop
cmp
lock
clc
cmc
test
and
push
pop
dec
xchg
movsb
lret
jne
xchg
loop
mov
loopne,pn
loopne
mov
jae
dec
rolb
imul
scas
cs
adc
and
outsl
adc
pop
pusha
leave
rorl
into
sbb
xchg
imul
pusha
add
scas
call
in
xchg
mov
pop
loope
inc
inc
inc
or
add
fmull
dec
arpl
pop
cmp
inc
sub
adc
xor
xor
insb
test
dec
push
rorb
pop
xchg
insl
scas
xchg
sub
add
ds
shr
xchg
jbe
mov
xchg
lcall
out
fcomp
pop
pop
test
adc
push
xchg
jb
xchg
stos
dec
enter
loop
mov
pop
shr
xchg
std
aam
push
cmp
movsl
inc
test
inc
inc
xor
adc
das
adc
push
xlat
pop
mov
mov
das
int
in
xor
and
xchg
dec
jmp
call
movzbw
nop
bswap
not
movsbw
movzbw
mov
pusha
push
xchg
pushf
xchg
not
jmp
call
mov
pushl
xchg
movsbw
cwtl
push
setno
mov
jmp
nop
call
xchg
movb
pushl
ret
mov
std
loope
popa
sahf
inc
nop
dec
cwtl
push
pushf
aaa
addr16
dec
and
bound
xchg
xor
add
cwtl
pop
xor
mov
cmp
mov
inc
pmulhuw
xchg
xor
aad
push
stos
aaa
subl
push
into
sbb
push
cli
divl
popf
jne
xor
xor
push
mov
pushf
fs
out
ret
aaa
mov
setno
popf
sub
dec
add
addr16
xlat
adc
outsb
les
and
lret
cmpsl
sub
inc
lahf
and
xor
add
xchg
add
jmp
add
mov
sti
cli
loop
add
cld
popf
mov
shrb
in
adc
mov
popf
testl
adc
add
xor
sub
push
cmpsl
pop
and
dec
xlat
cmpl
into
fwait
subl
into
rorl
scas
mov
out
xor
mov
inc
or
push
loopne
enter
lahf
ljmp
cmpsb
fs
push
push
repnz
and
jnp
mov
adc
mov
mov
jo
nop
fistpll
add
pusha
lea
mov
mov
adc
sbb
push
mov
push
push
or
xchg
or
fidivs
pushl
movsl
iret
jne
mov
cli
mov
mov
push
jge
and
lahf
rorl
scas
sbb
adc
repz
push
xchg
xchg
loope
xchg
sub
sarb
cli
mov
sub
std
jecxz
cmp
jl
or
and
ret
bswap
nop
not
pushf
pop
pop
jbe
xchg
pushf
push
pushf
movw
xchg
pushf
mov
bswap
lahf
mov
movl
pusha
mov
push
jmp
mov
movb
lea
pushl
xchg
movb
mov
pushl
ret
push
pushf
xchg
pushl
push
xchg
pusha
movsbl
jmp
call
call
lea
pusha
jmp
pusha
call
jmp
mov
call
add
das
cli
xor
test
cld
lds
cwtl
mov
insb
inc
inc
pop
xor
inc
or
or
mov
ret
push
in
popa
cmpsb
scas
push
cs
cs
outsl
cmp
mov
clc
and
push
into
push
int3
push
mov
lods
xor
iret
jecxz
lds
xchg
sub
jecxz
lret
mov
test
sub
leave
mov
push
stos
sub
int3
push
and
lea
mov
xchg
fbstp
fcom
mov
cs
pushf
xchg
pop
cs
mov
add
sbb
clc
dec
and
aas
sahf
sbb
shl
cwtl
ljmp
mov
pusha
mov
std
add
and
ds
inc
fildl
inc
orb
dec
and
push
sahf
mov
xor
jo
loopne
sahf
aaa
mov
out
into
mov
mov
fiaddl
pushf
lret
sbb
sahf
inc
mov
adc
loopne
cwtl
pop
sbb
leave
lock
inc
or
in
insl
testl
movb
dec
mov
adc
dec
pusha
jns
in
stos
dec
mov
ss
icebp
mov
add
adc
xor
sub
call
mov
test
pop
ja
iret
inc
inc
pushf
imul
mov
repnz
xor
add
xor
cli
push
pop
imul
lods
jae
cmp
arpl
aam
popf
jno
out
push
loop
sub
fisubrl
adc
push
adc
lds
cmp
adc
xor
add
jecxz
mov
imul
inc
xchg
adc
xor
dec
pop
fs
movsb
lock
loopne
push
xor
jae
mov
xchg
or
inc
mov
lea
idivb
push
sbb
add
add
popa
shll
cmpsl
fstps
out
lds
cwtl
ret
push
add
lahf
loopne
jge
nop
sub
bound
cmp
dec
and
in
or
push
cmpsb
add
arpl
lods
jmp
ljmp
rorb
jns
or
dec
testl
mov
popa
data16
fildl
fsts
lret
push
push
push
push
and
jmp
mov
ficomps
push
and
inc
jne
ss
or
mov
pushf
sbb
adc
xor
dec
je
push
sbb
fisubrl
pop
mov
insl
popa
es
scas
iret
sub
ss
gs
adc
dec
add
icebp
paddq
ror
mov
notl
std
movsl
xchg
mov
ja
fcmovnu
lods
testl
push
sbb
xchg
popf
repz
in
add
push
xchg
arpl
adc
les
xchg
sub
inc
pop
sbb
jne
fsubl
inc
inc
mov
aad
sbb
fwait
jns
cltd
pop
adc
es
outsl
inc
out
xchg
pushf
dec
adc
adc
lret
shrb
nop
in
cmp
xchg
stos
repz
stos
dec
push
dec
cltd
or
push
sti
mov
dec
daa
xchg
mov
cwtl
fwait
sahf
insb
mov
out
mov
cli
mov
sub
sub
rolb
push
sti
or
mov
push
push
sub
int
adc
jecxz
stc
test
mov
xchg
incb
mov
cmp
xchg
mov
dec
cmp
rcrl
aaa
out
enter
rolb
push
stos
outsl
jne
pop
hlt
sbb
adc
pop
push
mov
in
push
add
push
ret
inc
mov
out
push
dec
dec
xor
ret
mov
xor
gs
test
clc
mov
lea
adc
loope
shrb
hlt
cmpsb
jns
sbb
push
inc
adc
popa
int3
add
add
pop
pop
sub
hlt
inc
scas
jge
mov
push
push
aad
cwtl
lea
pop
leave
push
jle
cmp
movsl
adcl
out
push
pop
sub
and
dec
iret
xchg
dec
add
sub
xlat
fcomps
clc
inc
imull
enter
mov
enter
ljmp
or
or
pushl
mov
xchg
pushf
push
mov
pushl
ret
movsbw
mov
push
movb
movb
pushf
mov
lea
jb
pushf
movb
movl
lea
movb
pushf
jmp
pushl
pushf
movw
xchg
jmp
movsbw
not
lea
mov
pushf
lea
mov
jmp
pushf
jmp
movzbl
lea
mov
lea
jl
pushf
mov
push
jmp
call
nop
not
mov
jmp
call
movl
movw
push
pushf
pushl
lea
jmp
xchg
pushf
pushf
pushl
pushf
pushl
ret
push
pushl
pushf
nop
pusha
pushl
jmp
pusha
push
mov
push
pushf
jmp
mov
sets
lea
jmp
call
movsbw
mov
pushf
call
lods
pop
jbe
push
nop
call
movb
mov
call
push
lea
push
push
mov
jmp
movsbw
not
call
not
pop
movw
mov
pushf
pusha
mov
pushf
jmp
pusha
xchg
pushf
pushl
mov
pushf
push
movl
mov
movl
mov
jmp
xchg
push
pushl
ret
mov
not
push
mov
call
jmp
call
pusha
pushf
popl
pusha
movb
xor
movb
xor
call
mov
movw
mov
jmp
and
dec
lcall
je
imul
ret
xor
aam
insb
mov
push
and
jo
rcl
es
bswap
nop
aaa
cld
fisubrs
mov
icebp
aas
pusha
cwtl
lea
leave
xor
pop
es
inc
rcrl
cmpb
addl
test
stos
mov
push
ret
fwait
adc
rcrb
aaa
clc
pusha
lods
rorl
pop
aam
jbe
sbb
fsub
push
xchg
ds
cwtl
pop
jb
add
mov
scas
pop
push
aad
push
dec
inc
adc
mov
mov
fnstsw
xchg
js
push
and
dec
mov
push
add
divb
add
adc
push
ds
pusha
add
scas
mov
xor
jecxz
and
bound
adc
fcompl
push
and
push
jl
or
pushf
shl
shll
fcmovnbe
inc
incb
aam
jmp
incb
mov
sbb
pop
fisttpll
lods
test
push
jne
leave
xchg
out
pop
push
xor
mov
gs
adcb
sbb
fucom
shl
dec
movsb
xchg
mov
out
cmp
adc
jmp
es
jno
jecxz
mov
add
xchg
popa
sub
fwait
movsb
and
and
popf
inc
fadds
push
sbb
sub
pop
fcompl
stos
clc
pop
data16
ljmp
repz
adc
dec
mov
push
xor
sbbb
sub
jecxz
mov
negl
aas
xchg
fldenv
test
sbb
or
out
rorb
fwait
sbb
pushf
rcrb
addr16
mov
insl
ljmp
push
faddp
xor
hlt
ljmp
pushfw
jb
pop
push
sahf
sarl
lods
js
sahf
call
cmpsl
xchg
mov
pop
es
repnz
push
sti
sar
mov
mov
rorl
bound
leave
push
inc
sub
loopne
cmpsl
hlt
sbb
xchg
std
mov
cmp
or
jbe
insl
jae
push
stos
sbb
repz
adc
das
scas
lods
push
pop
lods
adc
fsubrs
sbb
push
ja
xchg
loope
inc
in
insl
and
and
dec
in
xchg
rorl
mov
into
xorb
mov
int3
cmpsl
mov
lcall
xor
sti
xor
cwtl
fsubp
fisubrs
stos
mov
filds
or
pop
inc
mov
push
xlat
mov
xor
sbb
adc
xchg
pop
aad
loopne
iret
sub
mov
push
stos
repz
add
push
cmp
hlt
jne
fwait
pop
es
std
shlb
jo
push
mov
orb
mov
mov
xor
push
jmp
outsl
adc
adc
sti
ret
icebp
test
in
pop
lahf
add
sub
inc
pop
jae
adc
xchg
cmp
inc
push
jno
in
fucomip
inc
adc
mov
addr16
mov
cli
sti
das
jecxz
fimuls
mov
jne
adc
push
icebp
js,pn
dec
jo
lods
mov
int
sub
sub
fisttpll
mov
sub
dec
repz
or
inc
leave
pushf
inc
jns
mov
in
aas
lock
jno
sub
addr16
sbbb
add
mov
leave
mov
jns
add
xchg
scas
cmc
inc
fsubrl
mov
jns
or
dec
int
loop
aaa
mov
jns
mov
and
push
loop
lds
icebp
dec
cltd
adc
cld
sbb
adc
cs
movsb
jb
out
pusha
in
pusha
stos
sti
jle
into
lcall
or
and
notl
push
aad
inc
and
test
sbb
hlt
mov
mov
test
and
movb
mov
jmp
pusha
lea
jmp
movb
pushl
xchg
pusha
mov
call
push
movl
mov
jmp
mov
nop
movsbw
bswap
push
movsbw
mov
push
jmp
pushf
lea
jae
pusha
lea
pushf
pushf
xchg
pushf
pushl
ret
pusha
call
call
push
push
movw
pushf
mov
bswap
not
pusha
not
mov
push
call
lea
pushf
call
mov
xchg
movw
mov
pushl
ret
nop
call
mov
setnp
mov
pusha
pushl
ret
pushf
popl
clc
pushf
xor
stc
xor
push
push
xor
test
xor
pushl
xor
push
xor
pusha
bt
xorl
pushl
xor
cmc
pushl
popf
pushf
pushl
ret
call
pushf
push
pushf
mov
jmp
jmp
pushf
pushf
mov
jmp
nop
not
movzbw
bswap
jmp
pusha
movb
movb
nop
pusha
xchg
movsbw
pushf
bswap
lea
js
mov
jmp
pushf
push
mov
bswap
setl
sets
mov
pusha
pushl
call
xchg
nop
cwtl
pop
mov
jmp
pusha
call
pusha
nop
pushf
xchg
call
push
jmp
movzbl
mov
lea
jge
lea
pusha
movsbw
mov
movb
movb
pushl
ret
mov
nop
push
movb
pusha
mov
push
pushl
mov
movb
call
call
lea
call
jmp
xchg
pushl
movsbw
lea
jne
mov
call
mov
pushf
xchg
pushl
pushl
ret
movb
lea
call
jmp
mov
xchg
pushf
pushf
push
mov
pushl
ret
jmp
lea
pushf
pusha
pushl
ret
jmp
mov
jmp
mov
jmp
pushf
pusha
push
call
lea
jne
mov
pushf
jmp
jmp
jmp
movsbw
mov
movl
pushf
pushf
push
pushl
ret
pusha
pusha
push
jmp
pushf
pusha
xchg
call
xor
call
mov
push
pushf
lea
pushl
xchg
movb
mov
pushl
ret
jmp
pushf
pushf
call
push
jmp
pushf
jmp
mov
pushf
call
mov
call
pop
mov
pushf
nop
jmp
mov
jmp
mov
mov
lea
pushl
pushf
mov
pushf
call
pushf
lea
pushl
pusha
call
mov
jmp
jmp
call
mov
pushf
mov
jmp
bswap
mov
pusha
call
movl
jmp
push
mov
nop
pushf
not
not
mov
jmp
xchg
pushl
pushf
pushf
movb
pushl
ret
pushl
lea
jmp
lea
call
call
pushf
mov
jmp
jmp
cmp
mov
jge
dec
nop
pop
mov
pop
test
xchg
les
jbe
fs
dec
rorb
test
xchg
xchg
aas
cld
xor
mov
inc
lret
and
mov
arpl
cld
js
pop
in
pushf
scas
xchg
popf
sbb
inc
test
push
xor
je
ja
push
jno
insl
mov
ret
call
pop
xor
jle
add
js
sub
pop
lea
inc
dec
xchg
push
addr16
repz
ss
jbe
lds
mov
push
sti
ss
rorl
sti
ret
shll
fcoms
mov
movsl
jge
daa
sub
pop
push
xchg
xchg
xchg
sarb
add
int
popf
pop
inc
mov
cmp
mov
xor
sub
sbb
add
xlat
das
pop
lock
jno
pusha
mul
jae
lods
xor
sub
pushf
sbb
nop
pop
sub
push
fsubl
cmpsb
and
and
popf
pop
mov
lcall
mov
dec
dec
and
out
cmp
filds
jecxz
enter
inc
sbb
fstl
push
in
movsl
push
cmp
inc
shl
out
dec
xor
jo
sbb
cmp
inc
adc
push
sahf
out
mov
test
inc
jge
flds
push
dec
dec
lret
mov
and
test
clc
pop
adc
xchg
popf
lahf
rcr
lea
fst
mov
mov
andl
and
orl
addr16
enter
out
mov
xor
ja
mov
dec
mov
stc
mov
xchg
call
mov
in
xchg
sbb
pop
pop
xor
adc
push
mov
ljmp
adc
push
imul
jnp
lea
scas
adc
pusha
scas
cwtl
mov
stc
idiv
add
cmpb
fnstenv
stc
xchg
pop
fimuls
fiaddl
mov
enter
xor
inc
sub
xchg
daa
out
push
cmpsl
int
insb
and
movzbl
pop
not
mov
pushf
mov
call
bswap
mov
mov
push
jmp
pusha
nop
movl
pusha
xchg
movsbw
mov
push
jmp
mov
pushf
movzbw
push
mov
call
pushf
jmp
mov
seta
mov
movw
call
pushl
mov
push
lea
call
xchg
pusha
pushl
ret
push
lea
mov
call
push
call
call
pusha
mov
setl
pop
pusha
mov
push
call
push
pusha
pusha
pushf
nop
pushf
xchg
setg
lea
movw
mov
jmp
nop
pusha
pusha
mov
pushf
mov
mov
mov
movb
jmp
pushf
nop
setne
mov
pushf
mov
push
xchg
pushf
pushf
lea
jb
pushf
mov
mov
pushf
mov
call
xchg
pushf
pushf
pushl
ret
push
xchg
call
xchg
jg
pop
bswap
pushl
mov
push
lea
pushf
movsbl
pushf
mov
pushf
bswap
mov
call
push
pushf
xchg
pushf
mov
pushl
ret
jmp
xor
pushl
cmc
pushl
popf
push
pushl
ret
xchg
movzbw
mov
pushf
lea
jmp
push
pusha
pushf
popl
bt
xor
bt
cmc
xor
clc
xor
call
pusha
call
lea
pushf
mov
jmp
jmp
ja
push
mov
jmp
pushf
call
call
jmp
nop
bswap
bswap
pop
pop
jmp
pushf
push
mov
jmp
call
jmp
pusha
pushf
lea
mov
pushl
ret
nop
mov
mov
bswap
mov
pushf
lea
movb
pushf
mov
pop
mov
mov
mov
movw
push
lea
pushl
xchg
pushf
push
pushl
ret
pushf
nop
pushl
push
mov
mov
mov
not
mov
jmp
push
fdivs
mov
cs
mov
sbb
rolb
mov
mov
jge
ja
jp
xor
rclb
ficompl
pop
stos
je
imul
dec
popa
das
and
cmc
test
loop
pop
inc
push
pop
orl
je
sbb
scas
jns
jnp
xchg
and
push
loopne
pop
das
in
cltd
outsl
out
rcrb
sub
cmc
sahf
inc
imul
mov
popf
in
testw
into
mov
mov
ret
imul
pusha
filds
xchg
ljmp
test
and
arpl
pop
xchg
xor
jmp
call
adc
and
scas
inc
cs
subl
inc
mov
xlat
shl
into
pop
es
aam
jecxz
inc
and
pop
mov
ficomps
popa
cmpsl
or
inc
pusha
fidivrs
or
call
lods
pop
sbb
mov
mov
into
movsl
add
sbb
clc
xchg
jp
jno
test
fadd
imul
pop
ja
pop
les
sahf
mov
in
scas
movsb
mov
cmp
std
out
nop
mov
faddl
in
das
sbb
push
lods
fnstsw
cwtl
mov
aas
inc
out
mov
mov
adc
or
mov
mov
fildll
jl
and
cs
enter
pop
push
fisubrs
sar
out
test
data16
and
es
sub
lcall
inc
sbb
jg
jmp
rcrb
dec
push
daa
icebp
sub
clc
sarb
push
imul
das
ljmp
cmpsb
popa
jecxz
scas
test
loop
pop
stos
lods
pop
cmp
or
sbb
nop
test
bound
or
push
aaa
lods
lahf
mov
push
and
test
jmp
enter
lret
pop
hlt
mov
popa
inc
xchg
lds
lahf
shl
pop
xchg
pop
les
inc
sbb
popf
stc
mov
push
push
data16
sbb
adc
adc
mov
or
inc
lds
dec
adc
adc
xchg
filds
xchg
xchg
add
cmp
enter
pop
imul
dec
in
push
pushf
xorb
cmp
mov
and
or
jecxz
push
mov
ss
sub
jo
mov
push
orl
test
popf
xchg
xor
aaa
cmpsb
push
imul
stc
add
mov
loop
xchg
inc
adc
mov
xchg
addr16
repz
mov
jle
mov
mov
xor
pop
std
out
xchg
adc
cltd
faddl
add
jb
dec
mov
mov
or
jle
add
daa
jge
push
pop
addr16
mull
mov
aaa
jb
adc
cmpsb
cmpsl
ds
int3
lcall
fists
xchg
add
cmp
insb
sbb
push
in
mov
pushf
int
psubsb
mov
mov
outsb
and
outsl
fcomps
ror
xchg
pusha
cmp
pop
daa
je
mov
out
shrl
les
daa
pop
jns
fwait
jne
loopne
xchg
loope
jae
imul
int
lock
mov
cltd
in
inc
jne
push
out
fwait
test
xchg
inc
icebp
dec
sbb
mov
loope
movsb
jg
lds
push
jp
add
out
mov
mov
ja
je
inc
add
xlat
or
jno
out
pop
es
arpl
push
mov
adc
ljmp
mov
sub
iret
loopne
and
arpl
dec
sbb
mov
cwtl
xor
or
lods
insb
rcrb
adcl
cli
vaddsubpd
mov
notb
sub
in
jl
fildl
pop
and
jns
sub
iret
or
adc
xor
mov
imul
mov
or
out
loope
test
mov
mov
mov
cmp
add
adc
leave
dec
les
gs
sub
lcall
lahf
dec
sbb
jge
lds
mov
sbb
stos
pop
fdiv
and
movsl
into
sbb
rorb
sbbb
in
aaa
js
mov
mov
mov
mov
cli
push
stos
sub
jle
ficompl
cmp
popf
push
pop
lahf
or
unpckhps
jno
inc
mov
xchg
pop
xchg
jecxz
cltd
aas
fisubl
mov
and
ret
les
cmpsl
adc
add
std
jp
icebp
in
mov
xchg
je
out
jnp
lods
es
movl
movsl
das
js
lcall
fsubr
mov
ja
adc
popf
jecxz
lret
ds
inc
jecxz
rclb
push
sti
inc
jp
dec
mov
mov
cli
and
sarl
xor
inc
stos
sub
and
incl
pop
sbbb
imul
xrelease
scas
dec
jl
sarl
addr16
popa
add
jbe
cli
push
jmp
lret
inc
fst
scas
daa
cmc
aas
xchg
outsb
jecxz
or
jg
mov
stos
aas
inc
xchg
mov
mov
imul
pop
cmpsl
cld
das
sti
pushf
xchg
cmp
lea
mov
adc
in
sub
add
push
test
inc
pop
jecxz
aaa
xorl
fldenv
lea
pop
test
sbb
add
cmpsl
test
leave
fistl
push
push
insl
aaa
and
push
jo
xchg
pusha
mov
xorl
mov
pusha
adc
aam
cmp
mov
cmp
aad
dec
pop
aam
out
je
out
mov
inc
xor
adc
loopne
dec
mov
mov
insb
jl
mov
or
push
add
in
sub
shll
and
insb
lds
lock
mov
pop
aas
pushl
aam
flds
dec
jns
leave
lock
out
xlat
cmp
test
mov
nop
cmp
out
dec
cmp
lds
xlat
cmpsb
jmp
push
mov
in
cmp
and
lods
sub
sbb
fidivrs
pusha
scas
mov
adc
push
cmp
cmp
loopne
nop
jo
loopne
fwait
adcl
cli
jb
mov
sbb
cmp
out
mov
imul
pop
jns
repnz
push
mov
mov
notl
loopne
clc
xchg
adc
out
push
ss
sbb
mov
imul
cs
cmp
or
cmc
pcmpeqd
xor
dec
lahf
fldenv
adc
pop
lahf
xchg
sbb
xlat
es
fs
js,pn
hlt
ret
mov
xchg
pop
test
notl
push
inc
out
dec
aaa
push
dec
inc
rcrw
push
les
bound
xor
xlat
and
adc
xchg
mov
test
xchg
lds
push
sbb
mov
sub
xlat
jne
add
xchg
popa
pop
fadd
and
xor
add
and
scas
loope
cld
mov
ret
dec
dec
push
sbb
jp
mov
das
push
aam
pop
leave
pop
push
mov
mov
mov
add
pushf
adc
push
cltd
push
nop
imul
xor
scas
sub
shll
cmpsl
pop
push
add
scas
mov
add
jge
movsb
push
cmp
adc
add
std
divb
sub
push
sahf
and
scas
mov
enter
fnstsw
mov
test
fmull
mov
int3
dec
scas
mov
and
push
mov
cmp
pop
repz
pushf
nop
movzbw
pushf
pushf
mov
pusha
call
xchg
call
pushf
push
nop
pusha
push
pushf
xchg
movsbw
mov
lea
jno
lea
pusha
pushf
pushl
mov
lea
not
push
seto
mov
call
push
push
call
xchg
pushl
pushl
ret
pushf
jmp
pushf
lea
pushf
pushl
jmp
pushf
mov
call
jmp
call
movb
pushl
mov
jmp
mov
movw
mov
mov
lea
pushf
push
pusha
jmp
push
jmp
xchg
cwtl
pusha
mov
jmp
call
mov
bswap
call
bswap
mov
pushf
push
push
pushl
lea
pusha
pushf
pushl
mov
not
pop
call
pusha
movl
pushl
pushf
pushf
push
movl
push
mov
movw
movb
lea
jmp
lea
pusha
call
test
test
movl
mov
shrb
mov
jmp
pusha
mov
movsbw
pushf
mov
pushf
lea
movsbl
mov
lea
jb
not
mov
setb
pusha
mov
pusha
pushf
push
pushf
pushl
ret
mov
lea
lea
jp
pushf
push
pusha
xchg
pushf
pushf
pushl
pushl
ret
call
mov
lea
je
pushf
mov
mov
call
mov
pusha
pushf
movb
mov
pushf
jmp
nop
movsbw
sets
mov
jmp
call
xchg
push
pushf
movl
pushl
ret
pushf
movb
xchg
jmp
movzbl
lea
not
call
movsbw
lea
mov
lea
js
lea
pusha
jmp
pushf
jmp
jmp
mov
setl
mov
pushl
push
call
call
pusha
call
jmp
call
jmp
push
pushl
xchg
call
xchg
mov
lea
lea
mov
push
pushf
pusha
lea
call
call
pushf
lea
jmp
xchg
push
pushl
ret
nop
pushf
mov
call
movzbw
mov
cwtl
mov
pushf
mov
mov
pushl
pushl
ret
call
push
mov
call
mov
pushf
jmp
push
push
mov
call
call
lea
jmp
jmp
lea
push
pushf
jmp
inc
stos
xchg
movsb
out
sbb
xor
cmpsb
sahf
pop
rcl
pop
test
imul
push
mov
js
jecxz
push
insl
xchg
out
sti
icebp
rol
push
fdivrl
or
push
imul
mov
cmp
inc
mov
ss
aas
mov
adc
rcrl
push
and
rclb
push
insb
ja
adcl
loop
sbb
call
push
stos
jns
xor
mov
clc
nop
repnz
cmc
std
and
adc
push
movsb
repnz
jb
adc
call
lods
dec
or
addb
mov
sbb
add
push
xchg
fwait
popa
sbb
cld
das
xchg
int3
dec
out
popl
sub
mov
sbb
xchg
loope
cwtl
lods
pushl
pushf
push
lea
movw
call
setge
bswap
setg
not
mov
push
mov
pushl
push
mov
push
mov
lea
call
movb
mov
pushf
lea
movb
call
call
pushf
push
mov
bswap
pushf
mov
pushf
push
lea
movb
movb
jmp
pusha
mov
jmp
not
mov
lea
jno
mov
pusha
lea
call
xchg
pusha
pushl
movl
mov
pushl
ret
xchg
pushf
pushf
pushl
ret
pusha
lea
jmp
lea
call
call
call
call
mov
pushf
call
jmp
xchg
push
pusha
pushl
ret
lahf
nop
lahf
not
pop
jp
pushf
xchg
pushf
pusha
pushf
pushf
mov
sets
lea
je
cwtl
mov
pusha
jmp
mov
pusha
lea
push
movb
jmp
pusha
pushl
movl
call
bswap
lea
mov
call
pushl
popf
pusha
pushl
ret
mov
mov
movl
call
xor
jmp
not
pushf
jmp
push
pusha
jmp
push
jmp
pushf
xchg
jmp
call
pop
mov
pushf
lea
jae
xchg
pusha
pushf
xchg
jmp
push
lea
mov
mov
xchg
mov
movb
movw
mov
pushl
ret
mov
jmp
mov
mov
call
push
pushf
mov
call
xchg
pop
movzbl
call
push
lea
pushf
movw
call
movw
lea
movb
jmp
call
movl
pusha
lea
jmp
mov
movl
xchg
mov
movb
movb
pushl
ret
mov
pushl
lea
je
mov
push
jmp
lea
pushf
jmp
movw
mov
mov
bswap
lea
lea
mov
mov
call
xchg
pusha
pushl
ret
push
pushf
push
call
call
mov
pushf
pushf
pushf
pushf
mov
pushf
pushf
lea
jmp
xor
pushf
pushl
popf
push
movb
pushl
ret
lea
mov
lea
movsbl
not
mov
mov
push
pushl
pushf
pushl
ret
movzbl
pushf
movzbl
nop
pushf
jmp
jmp
mov
not
mov
pop
lea
jg
movzbw
mov
call
pusha
call
mov
pushl
push
pushl
pushl
ret
pushf
nop
movb
mov
pushf
pushf
pushf
mov
mov
jmp
mov
mov
setg
mov
movzbw
mov
movb
mov
mov
call
lea
pushf
push
xchg
pusha
mov
movw
pushf
pushl
ret
jmp
lea
call
pushf
xchg
mov
pushl
pushl
ret
pusha
nop
push
call
mov
push
movw
bswap
mov
pushl
push
lea
jmp
call
xchg
bswap
jmp
and
std
push
imull
jge
insb
xchg
nop
pop
test
mov
mov
insb
adc
mov
sub
stos
add
mov
inc
cmp
rorl
push
mov
in
mov
lds
dec
addr16
lcall
aad
adcl
cmpsl
jl
shll
sub
xchg
or
mov
std
pop
das
mov
call
jmp
adc
imul
stos
mov
insb
lcall
stos
mov
sbb
inc
adc
lods
cld
xor
insl
ss
mov
and
fcompl
aad
sysret
iret
push
stos
out
xor
jp
jno
add
cmpsb
stos
add
jo
leave
cli
popf
lods
cmp
leave
enter
in
jmp
ja
repnz
icebp
hlt
inc
loop
sub
xchg
fucomi
dec
mov
dec
mov
xchg
cmp
pop
cmp
mov
in
mov
inc
nop
xchg
iret
addr16
sub
cmp
call
inc
jbe
mov
sbb
xchg
int
aad
mov
push
inc
dec
push
dec
stos
jae
sbb
stc
lods
push
jge
es
jbe
popa
sarb
and
jb
iret
sbb
cmp
and
xorb
sub
in
rcr
and
dec
jo
les
cld
loop
flds
lea
cmp
std
cmp
test
mov
pop
int
test
lea
pop
loope
js
aaa
int3
ror
movntq
out
fsubr
divl
shll
add
addl
jns
and
push
ss
or
xchg
mov
mov
fs
adc
les
movsb
sub
mov
jg
fs
fildll
pop
test
lods
xor
or
xor
sbb
test
xchg
aad
mov
pop
inc
out
push
leave
mov
pop
pushf
ss
mov
inc
rol
jb
add
mov
outsl
lcall
sub
adc
cwtl
std
or
sbb
mov
out
outsb
adcl
stc
rcl
ljmp
jl
ja
and
mov
mov
mov
dec
es
fildll
loopne
adc
into
pop
sub
insl
pushl
leave
sbb
repz
and
scas
and
ficomps
jns
daa
jne
push
idivl
jmp
rcrb
movl
jnp
jp
or
mov
loop
mov
xor
dec
sbb
in
ret
xor
lcall
or
jecxz
inc
fcmovu
sub
incl
xchg
push
jp
outsb
scas
adc
rcl
cld
mov
std
mov
push
stos
aam
xor
jae
rol
sbb
out
sbb
imul
dec
ss
jbe
out
push
icebp
inc
aam
and
adc
daa
notb
fs
lcall
rcll
clc
inc
dec
cmpsb
jae
popf
push
push
or
je
sbb
addr16
cmp
aas
shl
pop
test
xor
out
enter
and
mov
add
stos
loopne
movsb
push
les
add
push
cmp
inc
psubusb
loop
push
push
sbb
mov
imul
lahf
mov
jb
lods
xor
cmp
cmp
ret
sub
jmp
push
idivb
sahf
push
stc
int3
fstps
xor
js
icebp
sahf
xchg
pop
int3
lahf
cmp
iret
sar
mov
lea
cmp
pop
mov
jge
jge
out
aaa
mov
lods
inc
add
xchg
enter
leave
idivl
or
mov
call
call
lea
push
xchg
mov
movb
push
push
pushl
ret
call
pushf
lea
pushf
movw
mov
xchg
pushf
pushf
pushl
ret
pusha
push
movb
xchg
movzbw
mov
movb
lea
js
push
pushf
mov
jmp
pushf
call
xchg
mov
xchg
jmp
push
jmp
pushf
jmp
setae
xchg
mov
mov
mov
call
xchg
mov
movb
mov
pushl
ret
mov
std
xor
les
ret
cmc
scas
push
mov
rcrl
mov
fwait
scas
xor
xchg
jne
add
mov
mov
mov
imul
fwait
std
data16
xchg
call
sub
sbb
in
lods
mov
test
sahf
push
cmp
lods
movsl
lock
dec
test
call
xchg
mov
push
mov
cmp
popf
dec
push
or
mov
bound
xchg
imul
mov
adc
or
cltd
mov
daa
repz
xor
sub
test
lock
push
cmc
das
add
jecxz
clc
lret
lahf
pop
sti
aaa
xchg
aas
xchg
xor
push
out
test
push
mov
push
and
jnp
mov
push
fsubrl
pusha
test
cmp
xor
in
loopne
pop
lods
cltd
mov
mov
cmpsl
push
pusha
sub
lods
outsb
inc
jo
pop
dec
dec
lahf
arpl
mov
or
cmp
hlt
pop
lods
jns
lcall
loop
xchg
lret
test
add
mov
and
test
add
xchg
mov
pop
cmp
fucomip
add
cmp
mov
mov
mov
mov
sub
push
dec
pop
jmp
xor
and
or
push
rol
inc
int
jne
ljmp
stos
and
pop
mov
sbb
push
push
sbb
mov
inc
lea
jle
mov
sub
dec
hlt
nop
mov
ret
mov
push
repz
sbbb
loop
sub
loop
adc
sub
push
push
test
mov
jecxz
cmp
push
push
or
mov
sahf
callw
call
mov
push
add
push
xchg
mov
push
mov
nop
lock
or
pcmpeqw
cli
pop
xchg
jnp
insb
or
ret
aam
bound
shll
and
and
das
sub
mov
data16
dec
add
mov
call
std
dec
pushf
imul
mov
add
out
lock
ffreep
aam
dec
rol
icebp
push
js
add
inc
mov
push
mov
cmp
pop
arpl
cmpsl
mov
pop
leavew
out
bound
stos
inc
sahf
adc
sarl
and
daa
pop
mov
aad
lret
stc
lds
sub
inc
or
sbb
int
outsb
jbe
sub
cmp
sbb
mov
ficoms
jecxz
negl
rcl
sub
xchg
imul
int3
mov
lret
lahf
aas
fidivl
mov
jecxz
xchg
aas
xchg
push
fs
cmp
mov
fstsw
das
mov
dec
jl
adc
imulb
dec
sbb
mov
lods
sti
cmp
push
mov
mov
jmp
inc
insl
cmp
or
addr16
imul
ret
aad
jbe
les
pop
and
lds
pusha
xchg
jns
xchg
xor
outsl
shl
xor
pop
pop
sub
pop
std
push
cltd
cld
lret
sub
ja
add
sub
push
jl
sub
cmc
jns
push
les
dec
and
jmp
cltd
sbbl
enter
es
cmp
mov
cmc
mov
sbb
sti
dec
or
ss
addr16
push
xchg
std
adc
mov
xor
mov
cmp
aam
sbb
and
cmpsl
clc
jl
or
inc
in
mov
sub
xchg
pop
call
inc
jne
xor
mov
pop
rorb
fcoms
mov
ret
movsl
call
mov
sub
add
ds
imul
nop
neg
mov
popa
fs
inc
mov
loopne
lret
xor
cmpsb
movsl
imul
cmp
mov
ret
cmpsb
sbb
scas
pop
dec
pop
lock
sbb
int3
into
test
lods
inc
jmp
dec
jae
mov
dec
movsl
dec
pop
xchg
xchg
pop
jge
pusha
int3
lret
jmp
push
add
lret
loop
cmpsl
mov
leave
sub
call
jno
push
xchg
mov
cmp
lods
sti
add
and
in
xchg
sbb
mov
jl
daa
bnd
scas
pushf
addr16
roll
sbb
test
es
inc
inc
mov
mov
xlat
dec
sbb
sbb
pop
add
std
gs
in
sbb
jle
push
sub
stos
enter
pop
mov
mov
push
jo
mov
jb
test
mov
stos
jne
mov
in
fwait
mov
push
frstor
das
mov
sar
fcmovbe
outsl
mov
cli
les
mov
addr16
imul
scas
mov
clc
adc
rcrl
dec
mov
mov
adc
mov
mov
insl
les
pop
lcall
movsl
stos
jae
lret
ffree
jbe
mov
pop
xor
pop
mov
pop
aam
xchg
sub
repnz
fildll
and
jmp
mov
hlt
and
pop
sbb
cmp
adc
movsb
out
add
pop
push
dec
mov
out
ja
sub
mov
jo
scas
cmp
push
repnz
mov
xchg
jns
std
push
dec
push
les
dec
fst
and
push
cmp
and
xchg
jo
dec
int3
push
pushf
cmp
xchg
and
push
add
shlb
stos
out
lret
lods
sub
adc
hlt
mov
mov
or
in
xchg
push
fdiv
fwait
ja
inc
hlt
adc
jl
add
pop
fmull
setl
sbb
faddl
fwait
aaa
push
hlt
xchg
cs
daa
sub
or
leave
loopne
mov
inc
mov
xor
jns
call
lock
aas
shll
push
in
jmp
jae
testb
lret
add
in
jle
repnz
adc
cmp
jb
mov
mov
aam
sub
jo
sbb
je
in
mov
lods
jp
jp
sub
cmp
pushf
adcb
pushf
push
dec
icebp
roll
jmp
sbb
popa
repz
fs
sahf
in
outsb
fdivs
jecxz
fistps
movsl
out
sti
dec
fnstcw
fldt
lods
popf
jmp
popf
jns
shl
sbb
pop
leave
and
shl
push
sub
mov
adc
fsubs
sub
xchg
pusha
clc
out
adc
inc
lods
popf
jmp
xchg
pop
jmp
pop
loop
lock
fucom
in
adc
fldcw
sub
mov
cmpsl
fisttps
add
push
pop
js
sbb
xlat
and
cwtl
pop
xchg
dec
insb
xor
jnp
es
xchg
loop
xor
fisttpll
and
xchg
div
push
xor
inc
mov
xchg
rorl
insl
xor
xor
and
loop
inc
daa
lods
mov
inc
cmp
outsb
ret
adc
mov
mov
aad
int3
aam
mov
mov
pop
movsb
lcall
bound
popf
inc
ret
mov
inc
ficoml
pop
push
adc
es
test
mov
out
pop
and
mov
fists
into
mov
cli
adc
mov
cs
cmp
jl
fmull
in
pop
jle
jmp
std
push
lret
or
push
push
outsl
fisubrs
and
push
popf
mov
outsb
test
sti
adc
or
inc
dec
insl
xor
iret
jbe
loopne
movsb
jle
xchg
scas
fistpll
mov
mov
jl
loope
in
ljmp
or
inc
je
out
xor
stos
jmp
xor
cwtl
mov
fimuls
push
push
repnz
jo
pop
or
inc
xchg
mov
popa
mov
fnstsw
jle
add
or
cmpsb
int3
push
sub
inc
jb
pop
push
jnp
scas
mov
fbld
mov
pop
jp
inc
loope
mov
jno
jge
jmp
popf
sub
pop
jp
aad
cmp
repz
mov
xor
push
cmpsl
test
xchg
and
addl
js
dec
insl
xor
pusha
push
fldenv
pop
xor
loope
out
in
je
adc
xchg
stc
adc
imul
pop
mov
sbb
lcall
stos
mov
bound
xchg
inc
cmp
hlt
mov
dec
test
jle
cld
push
sahf
ret
imul
inc
imul
lock
push
enter
fs
ljmp
out
push
add
cld
push
add
xchg
movsb
inc
mov
mov
mov
cmc
or
aad
out
mov
repnz
ret
inc
cmp
mov
adc
pop
ret
jp
push
int
shl
scas
punpcklwd
xorb
jne
sbb
jae
add
imul
popa
sub
iret
jecxz
cmp
arpl
movsb
dec
push
pop
sbb
add
and
outsb
pusha
add
pop
push
arpl
pop
add
imul
add
insl
arpl
out
sti
push
mov
xor
nop
hlt
add
test
popf
inc
test
mov
sbb
cli
movsl
push
jl
cld
fwait
adc
inc
daa
stos
jnp
mov
out
push
test
imul
cmc
sbb
frstor
enter
or
fcomp
es
pop
or
int
push
leave
or
insb
gs
mov
sarb
push
cmp
lds
dec
inc
aad
or
add
scas
pop
adc
test
xchg
icebp
fstl
pop
test
scas
jle
mov
push
imul
add
mov
fyl2xp1
cmpsb
pop
std
inc
pop
pop
shlb
arpl
out
xchg
iret
fwait
xorb
lahf
hlt
shrl
adc
nop
jne
scas
mov
in
add
mov
xor
andb
push
iret
imul
inc
or
or
aaa
call
pushl
lea
jp
pushf
xchg
pushf
mov
movb
lea
pusha
mov
call
pushf
nop
pushf
jmp
mov
movb
movb
jmp
mov
pushf
mov
lea
jl
pusha
lea
mov
xchg
pushf
pushl
ret
lea
push
call
call
mov
movb
mov
setl
mov
jmp
nop
pusha
xchg
mov
movzbw
mov
push
pushf
jmp
movw
pushf
nop
movb
mov
pusha
call
pushf
nop
jmp
pusha
xchg
pop
lea
mov
pushf
pushf
lea
jl
lea
pusha
mov
cwtl
mov
mov
pusha
jmp
mov
push
mov
lea
pushl
call
xchg
movsbw
pusha
mov
jmp
add
xor
mov
jmp
mov
pop
bswap
mov
pushf
mov
pushf
push
pusha
jmp
lea
movb
mov
jmp
pusha
nop
pusha
pushf
pushl
pushf
xchg
pushf
mov
movb
lea
jg
mov
push
pushf
movb
jmp
mov
pushf
lea
pusha
movb
mov
pushf
xchg
pushf
movb
pushf
mov
pushl
ret
movsbw
lea
mov
call
inc
mov
cld
cwtl
arpl
test
out
push
dec
xor
pop
or
and
lds
and
hlt
push
sub
sarl
pop
rclb
push
dec
mov
loope
out
pop
aas
adc
and
xchg
pop
ret
push
cmp
mov
mov
push
cmp
scas
lret
clc
lahf
push
inc
dec
add
lret
in
inc
cld
and
ljmp
jbe
mov
xadd
push
xor
in
xor
imul
fdivr
xlat
dec
adc
lods
sbb
scas
call
jb
pop
fsubrl
push
mov
in
addl
adc
cmpsb
lcall
mov
jl
jp
mov
daa
mov
jb
push
and
or
and
cmp
dec
xor
mov
add
mov
ficompl
mov
mov
movb
in
xor
xor
loopne
repz
or
mov
inc
xlat
or
or
call
dec
test
pop
xor
and
jg
mov
iret
loopne
pop
enter
mov
mov
cmp
mov
inc
inc
pop
mov
mov
leave
sub
and
repnz
jp
outsb
repz
in
movsb
xchg
dec
xchg
lea
fsubrl
inc
dec
sub
in
ret
inc
ljmp
rolb
or
mov
xchg
mov
fs
sbb
xchg
mov
scas
mov
cmp
xor
jge
or
xchg
enter
push
pop
repz
fnsave
pop
xor
dec
xor
sbb
test
sub
adc
in
jbe
dec
cltd
xor
sbb
or
inc
sub
aas
cmp
jo
lds
jno
xor
addb
pop
mov
outsb
pop
mov
cmp
es
lds
cmc
cltd
push
push
lods
mov
sub
lods
adc
ss
xor
or
jb
cmpsb
cltd
aam
inc
js
add
daa
hlt
cmpl
or
fsubs
outsl
test
aaa
andb
aad
into
arpl
or
adc
sbb
dec
lcall
lret
jno
cmp
pusha
mov
push
and
push
addr16
and
mov
mov
jmp
sub
sti
fisubs
xchg
add
jge
into
popa
int
xchg
cmp
and
and
mov
push
adc
mov
adc
leave
xchg
addl
inc
inc
lahf
imul
pusha
sub
lcall
mov
fwait
pop
sub
loop
imulb
outsb
push
push
popa
inc
cmc
jge
hlt
test
cwtl
mov
imul
jbe
inc
xchg
or
mov
loop
and
icebp
mov
mov
jns
movsl
shlb
pop
xchg
popa
pusha
inc
adc
push
mov
fsubr
jmp
sti
idivb
mov
xor
sub
xlat
jge
cld
cs
add
jmp
aad
stos
mov
daa
scas
pop
test
lds
and
add
adc
loop
dec
das
cld
ljmp
and
jns
faddp
lods
or
push
add
dec
or
rcrb
sbb
xchg
popa
jns
js
pushf
xchg
inc
mov
ljmp
arpl
mov
fisubrs
loop
in
out
mov
gs
daa
aam
mov
cmp
outsb
cmp
sub
push
mov
shll
clc
outsb
fwait
xchg
mov
inc
ja
ss
mov
cmpsb
mov
jle
orb
pop
lret
cwtl
pushf
cmp
cmp
xchg
out
movsb
movzbw
mov
mov
jmp
jmp
xchg
push
mov
movsbl
jmp
pushf
xchg
mov
pushf
mov
pushl
ret
repz
dec
call
jns
nop
push
mov
jmp
lea
pushl
call
push
nop
jmp
xchg
call
jmp
call
push
nop
bswap
movsbw
jmp
mov
pushf
lea
call
mov
mov
lea
jg
push
pusha
lea
pusha
xchg
push
pushl
pushl
ret
mov
movb
jmp
mov
nop
not
not
movsbl
pop
call
mov
pushf
pop
nop
not
movsbw
pop
jmp
mov
movb
pushf
lea
call
pushl
lea
push
xchg
mov
mov
movw
pushl
ret
lea
pushf
jmp
pusha
nop
bswap
pop
jmp
bswap
push
nop
movsbw
lea
jp
not
movzbl
pop
pusha
xchg
lea
jae
pushf
movb
pushf
mov
bswap
call
mov
mov
jmp
mov
pushf
mov
movb
lea
call
jmp
pusha
push
mov
call
call
pusha
jmp
jmp
jmp
pusha
movsbw
nop
lea
mov
movw
jmp
push
push
pusha
lea
call
push
mov
lea
movw
mov
push
mov
pushf
call
mov
jmp
pushf
pushf
xchg
jmp
nop
jmp
mov
pushl
pushf
lea
movzbw
mov
pushf
call
lea
push
xchg
pushf
pushl
ret
push
pusha
xchg
bswap
pushl
movsbw
mov
pushf
jmp
mov
movzbw
mov
mov
lea
pushl
mov
mov
bswap
not
pushl
mov
push
mov
call
xchg
mov
mov
mov
pushl
ret
movl
xchg
push
xchg
not
mov
movb
mov
movb
pushf
lea
pushf
pushf
xchg
movb
pushf
pushf
pushl
ret
pushf
nop
call
movb
jmp
not
mov
pusha
pushf
push
push
mov
pushf
jmp
push
not
pop
nop
jmp
movb
xchg
pushf
pushl
ret
call
jmp
bswap
nop
setle
push
pusha
mov
mov
push
xchg
call
xchg
movb
pushf
pusha
pushf
xchg
movsbw
pushf
jmp
mov
call
push
xchg
movb
pushf
mov
pushl
pushl
ret
jmp
call
pop
mov
jmp
movsbw
mov
mov
nop
mov
pop
jmp
lea
jnp
lea
push
call
call
push
nop
mov
mov
mov
bswap
push
call
call
push
lea
push
pushf
pushf
mov
pushl
pusha
bswap
mov
mov
lea
jg
mov
push
pushf
lea
call
lea
jmp
push
pushf
mov
call
cwtl
mov
pushf
pushf
pushl
ret
jmp
jmp
pushf
movb
nop
pushf
pushf
xchg
pushf
mov
pushf
jmp
mov
pusha
pusha
jmp
movzbl
bswap
bswap
nop
movzbw
push
mov
movw
pusha
xchg
call
lea
pushf
movl
jmp
push
mov
pushf
pushf
movb
jmp
pushf
call
bswap
pusha
nop
pushf
pusha
mov
pushf
call
pushf
jmp
mov
xchg
pushf
movb
pushl
ret
lea
call
xchg
sub
repz
pop
sub
push
je,pt
mov
jmp
ja
sub
cltd
ja
sub
inc
jae
inc
inc
cmpsl
jae
sbb
adc
out
cmp
test
orb
mov
pop
pushf
dec
insb
cmpsb
inc
xchg
adc
mov
push
xor
inc
adc
pop
pop
cwtl
fsubrp
cmpsl
inc
and
int3
sub
fmuls
hlt
adc
xor
jnp
lret
mov
and
adc
jg
add
arpl
dec
dec
add
test
insl
cmp
sti
test
das
xor
fdivrl
mov
or
lea
outsl
mov
push
mov
pop
bound
mov
repnz
push
cld
pop
push
icebp
insb
dec
fwait
xadd
cli
mov
clc
and
push
sub
aad
push
in
push
inc
xorl
nop
xchg
cmp
lret
movsb
sbb
inc
mov
popa
inc
pushf
mov
enter
push
mov
enter
sub
out
push
cmp
xchg
add
sbb
arpl
cltd
sub
sbb
lret
mov
rcll
mov
lods
push
imul
daa
in
dec
sti
cmp
lret
sahf
mov
adc
adc
add
pop
sub
dec
xchg
js
loope
sbb
adc
lods
jmp
jo
push
dec
cli
call
push
out
jmp
aas
mov
incb
nop
fdivl
fs
jle
inc
push
xchg
mov
dec
je
sti
lahf
aaa
sbb
jmp
cmovle
addr16
xchg
js
sub
add
jae
sbb
push
out
pop
push
mul
ja
daa
push
idivl
cmp
cmp
mov
cmp
movb
or
cmpsb
pushf
repz
pmuludq
cltd
dec
test
loope
imul
mov
dec
int3
xchg
cmp
mov
orb
xchg
cmpsb
pop
cmpl
mov
add
jae
out
xchg
cmp
push
inc
mov
push
loope
movsl
sti
or
repz
adc
inc
jecxz
loopne
in
xlat
pop
aam
jg
mov
das
fwait
inc
or
inc
jge
into
outsb
pop
idiv
scas
inc
jns
in
dec
pop
cmpsl
test
popa
lods
sub
push
mov
dec
pop
sub
enter
stc
push
pop
repnz
loop
movsl
ds
mov
fld
pop
mov
sbb
mov
dec
mov
dec
fsubrl
inc
mov
inc
repnz
movsl
int
fsubrp
sbb
push
xchg
je
pop
inc
cmovge
sbb
xor
inc
lret
mov
adc
and
cwtl
or
adc
xorb
clc
fldt
std
es
mov
mov
jge
mov
mov
dec
sub
pop
test
daa
iret
pop
int
insl
mov
fwait
mov
pop
sarb
xchg
popf
cmc
idiv
out
lock
mov
aam
add
xchg
cmp
xor
sti
jle
cltd
negb
sbb
adc
dec
mov
sti
jnp
sub
xor
lahf
adc
inc
popf
xlat
lahf
mov
push
pop
adc
sbb
jl
insb
add
lods
fwait
inc
mov
aad
scas
inc
cmc
outsb
adc
mov
and
out
decb
fiaddl
adc
sub
adc
dec
inc
nop
mov
mov
dec
mov
popa
jae
xor
dec
into
pop
inc
out
sub
icebp
in
mov
xchg
fiadds
xchg
movsl
loop
jecxz
pop
mov
mov
mov
cmp
push
xor
mov
iret
addl
sbb
xor
mov
bound
aas
pop
xor
imul
hlt
lock
enter
mov
dec
xchg
inc
adc
inc
mov
out
loope
nop
push
add
cmp
xlat
js
outsb
les
pop
mov
cmp
mov
add
push
loope
cmpsl
add
jae
out
dec
sbb
js
movsb
clc
and
aam
mov
cmp
dec
sub
jl
insl
mov
jge
sub
pop
loope
pop
or
ja
flds
push
pop
adc
sbb
adc
adc
xor
xor
iret
adc
rclb
sahf
add
popa
sbb
xor
xchg
mov
mov
mov
push
push
sbb
sub
pop
das
fadds
repz
mov
xchg
scas
push
sbb
jns
imul
sbb
fisttpll
and
outsl
repnz
or
rorl
leave
lods
jae
fisttps
in
and
iret
lcall
andb
dec
pop
jl
sub
and
jecxz
ret
inc
mov
inc
pop
push
lods
icebp
stos
cmpsb
repz
popa
sub
std
lret
mov
ja
mov
or
in
sahf
mov
sbb
divl
aad
movsl
pop
pop
mov
cwtl
cmpsb
pop
push
loopne
pcmpgtb
pop
fwait
xor
out
xchg
xchg
test
adc
insb
scas
js
ja
inc
push
push
adc
test
xor
mov
xor
addl
fucom
imul
pushf
and
out
mov
loope
inc
jle
push
out
repz
push
in
std
or
clc
mov
sbb
dec
cltd
adc
adc
mov
mov
inc
lret
in
pop
pushf
mov
or
js
std
mov
jmp
scas
mov
sub
outsl
mov
stc
push
popf
add
xor
rcrb
adc
mov
popf
dec
call
push
sbb
push
mov
cmp
adc
mov
cmp
sbb
bound
pop
ficoms
test
ret
insb
xchg
xor
jbe
jle
or
jb
test
pop
popa
test
dec
mov
pop
mov
loope
mov
enter
hlt
xlat
mov
aad
jo
cmp
into
aas
sbb
dec
jmp
leave
das
adc
mov
xor
test
imul
mov
fmuls
mov
aaa
xchg
movsl
mov
pop
mov
std
jbe
lds
xor
sti
fisubrs
incb
sub
push
outsb
stc
push
add
addr16
mov
dec
xchg
jmp
out
in
ret
fs
jmp
sti
xchg
inc
mov
in
mov
sti
inc
mov
icebp
movsb
fs
movsb
mov
jbe
dec
rorb
cs
mov
data16
adcl
mov
mov
ret
in
xor
cmpsl
jle
dec
adc
rol
mov
mov
adc
shll
dec
ret
mov
cmpsb
adc
out
pop
je
push
push
jns
and
xchg
add
js
idivl
test
and
in
dec
or
inc
push
and
sar
in
inc
inc
test
xchg
loope
std
jge
sti
cli
neg
lcall
scas
mov
stos
test
mov
mov
popl
inc
dec
dec
mov
outsb
push
xor
ret
sbb
add
pop
stos
lret
stos
or
mov
mov
sbb
add
test
push
sbb
inc
and
cwtl
jbe
popa
lds
push
sub
pop
ret
test
loope
test
sub
push
pop
loope
sbb
mov
sub
outsb
push
dec
ret
xlat
les
popa
and
fldl2e
xor
mov
scas
movsl
lret
or
mov
setl
jnp
cwtl
mov
push
jmp
call
lea
jb
xchg
jmp
pusha
push
jmp
mov
jmp
nop
call
jmp
pushf
jmp
mov
mov
mov
jmp
lea
jl
pusha
xchg
push
pushf
movl
pushl
ret
call
pusha
call
call
xchg
movw
mov
movw
mov
pushl
ret
lea
nop
push
pushf
mov
jmp
movzbl
mov
jmp
lea
jmp
xchg
mov
mov
mov
pushl
ret
pusha
pushl
mov
not
jmp
jmp
mov
call
pusha
lea
pushf
xchg
push
movb
push
pushf
pushl
ret
lea
jmp
pusha
pusha
pushf
mov
jmp
mov
mov
call
lea
call
jnp
pusha
pusha
pushf
nop
movb
mov
bswap
bswap
bswap
mov
push
call
pushf
lea
pusha
mov
movzbl
mov
call
xchg
pushl
mov
mov
lea
mov
jmp
xchg
pusha
jmp
inc
loopne
call
push
bound
popa
pop
mov
andb
divl
cmc
sub
ss
insl
pop
and
dec
xchg
imul
sub
shll
bound
cmp
cmp
lds
aaa
sarb
push
push
mov
out
cmp
cltd
insl
fldl
pop
gs
add
and
mov
dec
cmp
cmp
popa
and
dec
mov
xchg
push
insb
jl
cli
sbb
into
lcall
or
int
jmp
cltd
das
sub
push
mov
cmp
inc
sbb
ds
sbb
out
and
loopne
dec
mov
push
xchg
xchg
jbe
lcall
and
fdivrs
call
lahf
pop
dec
add
sbb
repz
push
sbb
sbb
int3
mov
mov
push
add
fwait
inc
sbb
add
dec
pop
arpl
fsubrs
jecxz
mov
add
scas
or
sbb
bound
sub
dec
xchg
rcrb
idivb
scas
arpl
sub
ret
sbb
pushf
dec
xchg
sbb
push
aad
jne
aaa
scas
ss
sarl
xorl
cmpsb
mov
dec
orl
inc
cld
and
cltd
add
xor
jns
cmp
shrb
mov
mov
cmp
aaa
out
sti
ret
cmc
pop
mov
cmpsl
and
adc
mov
pop
xchg
jb
xor
pop
sub
imul
pop
xlat
mov
fwait
and
xor
jnp
es
test
fistl
scas
and
sahf
xchg
repz
and
std
fldenv
pop
pop
mov
push
or
js
leave
sub
popf
fs
outsl
cmp
mov
pop
xor
xorb
add
into
loopne
imul
sbb
rolb
lret
or
in
stos
in
cmp
push
add
in
repz
jge
xchg
leave
adc
std
out
dec
jo,pt
cmp
inc
sbb
loopne
shll
lods
cmp
sbb
add
hlt
test
addl
mov
xchg
std
movsl
xlat
add
in
mov
sbb
test
dec
fwait
icebp
add
or
movsb
adc
jmp
hlt
adc
or
sub
adc
cwtl
clc
inc
mov
adc
das
push
lahf
mov
mov
pushf
dec
clc
aad
cmp
lcall
mov
mov
in
adc
hlt
push
repnz
or
ja
adcl
xor
mov
and
push
push
mov
mov
fisttpll
cld
mov
and
pop
int
shll
push
lret
cmpsl
push
mov
ret
xor
lret
loope
pop
popa
add
fwait
imul
cmp
mov
push
xorl
fwait
mov
mov
add
mov
or
cmp
scas
mov
xchg
pop
xor
stos
xchg
and
cmpsl
cwtl
sub
clc
inc
dec
or
xchg
xor
sahf
imul
stos
cmp
test
rcrb
decb
sahf
es
or
rcl
stos
dec
and
sahf
imul
pop
fistl
add
mov
add
sub
add
mov
not
xor
push
aad
adc
fistl
add
cmp
dec
cli
lret
js
mov
sub
lds
test
das
xor
test
mov
sub
sbb
dec
xor
leave
mov
rcrb
rorb
cmpsb
cmc
das
fwait
cmovg
arpl
lods
pop
adc
lds
xor
cmp
sub
push
mov
imul
mov
push
mov
je
push
loope
sar
push
add
repnz
pop
mov
pop
mov
lea
pushf
pushl
jmp
lea
jae
lea
push
call
jmp
pusha
lea
movb
xchg
pushl
pushf
pushf
pushl
ret
push
mov
push
pushl
ret
call
push
mov
pop
pusha
pushl
push
mov
jmp
push
mov
pushf
jmp
xchg
mov
not
call
xchg
mov
push
pushl
ret
push
call
pushf
mov
xchg
pushf
pushf
mov
xchg
setg
mov
pusha
mov
jmp
mov
mov
mov
jmp
push
pusha
pusha
lea
pushf
mov
call
push
movb
mov
lea
push
push
mov
setnp
movsbl
not
mov
movb
mov
pushf
push
pushl
push
lea
lea
jle
xchg
push
push
pushl
ret
lea
jl
lea
pushf
pusha
pusha
xchg
pushf
pushf
push
pushl
ret
pusha
xchg
call
mov
jmp
lea
jmp
xchg
pushl
pushf
pushl
ret
call
pushf
movzbl
mov
mov
push
lea
jmp
call
mov
pushf
movw
jmp
call
xchg
pushf
pushf
call
std
jae
loop
std
int3
xchg
aaa
jno
addb
gs
push
sub
call
sub
mov
cmp
xchg
test
sarb
int
cmc
or
mov
call
call
push
mov
orb
test
cltd
mov
ret
lods
adc
push
xchg
jp
insb
jle
cmp
cmp
and
push
popa
sahf
test
clc
and
insb
push
fldenv
fmull
aad
outsl
out
mov
ljmp
jnp
rorl
mov
sbb
flds
push
int
aaa
aas
imul
std
cmp
aaa
loope
mov
mov
fs
faddl
cwtl
inc
mov
ret
inc
sbb
jle
aam
and
sbb
cmp
mov
jmp
add
jo
test
loope
std
jnp
pop
mov
fadds
inc
imul
arpl
cmp
mov
mov
and
incl
cmpsb
stos
sti
dec
pushf
std
adc
inc
xchg
or
cwtl
aam
inc
repz
dec
xchg
lcall
jp
jno
xchg
cmp
jmp
jno
mov
adc
dec
sub
adc
mov
std
stc
adc
je
and
stos
mov
jge
xor
push
aaa
xor
adc
mov
xchg
cmp
and
and
int3
cwtl
xlat
aam
mov
out
aaa
dec
lods
out
std
pusha
push
sbb
outsb
sub
mov
shrb
movsb
aaa
lods
push
jb
inc
popf
call
iret
inc
cmp
push
pop
xor
mov
jb
enter
adc
dec
push
and
mov
inc
dec
fmul
dec
sub
cli
jne
ret
popf
ljmp
arpl
mov
mov
lock
fs
pop
lcall
dec
mov
dec
mov
cmp
pusha
fucomip
imul
inc
orl
jbe
fs
in
push
lret
and
vpaddusw
add
cld
dec
pushf
pop
jg
ljmp
mov
incb
jle
lret
pop
push
inc
adc
pop
and
aas
inc
pop
ds
iret
sbb
pop
orb
mov
rorb
mov
adc
push
and
pop
cli
or
add
cmpsb
jae
fwait
push
push
pop
test
in
jno
cltd
adc
xor
ret
int
mov
lock
ret
mull
cmp
es
add
int3
push
sub
call
aaa
push
sbb
and
icebp
cmpsb
jae
sub
xchg
mov
pop
mov
rcrl
fbld
ret
clc
lret
fistl
adc
add
jmp
mov
jecxz
dec
lcall
repz
and
ss
mov
jb
jns
xchg
dec
dec
pop
in
rcll
xor
and
add
xchg
sbb
rcl
outsb
scas
push
dec
ljmp
loope
cwtl
rcrb
xchg
xchg
mov
aas
imul
loop
sbb
stos
call
aad
inc
xor
rorl
fisttpl
adc
aad
mov
loop
or
subb
adc
or
imul
pop
xchg
outsl
push
sbb
jp
popf
out
jne
fwait
lcall
or
pop
xlat
popa
cwtl
mov
dec
pop
mov
fmulp
push
aam
dec
arpl
lock
mov
jecxz
jno
mov
int
lret
inc
fldenv
sub
push
out
mov
sbb
push
pop
and
cmp
or
dec
mov
or
mov
sub
icebp
pop
es
push
mov
out
mov
sub
dec
pop
movsb
sbb
loopne
jnp
and
aas
adc
das
jmp
sbb
pop
fidivrs
and
lret
in
xchg
mov
rcrl
inc
mov
xchg
jmp
imul
push
xchg
mov
lock
inc
dec
fwait
fs
hlt
cmp
fs
push
pushf
xor
push
loope
mov
lock
inc
dec
nop
div
add
or
fwait
xor
xor
xor
sbb
repz
sbb
out
jg
mov
test
mov
cld
test
inc
enter
int
mov
mov
stos
push
ss
lahf
in
mov
or
xchg
push
pushl
ret
lea
jle
pushf
xchg
mov
push
pushl
ret
pusha
pushf
jmp
movl
jmp
xchg
push
movw
pushl
ret
xchg
movb
pushf
pusha
pushl
ret
xchg
movl
push
pushl
ret
mov
push
call
xchg
pusha
pushl
ret
xchg
movb
pushf
pushl
ret
xchg
pushl
pushl
ret
push
mov
mov
pushf
jmp
not
pop
jmp
lea
lea
je
pushf
pushf
mov
xchg
pusha
push
pushl
ret
lea
jmp
pushf
mov
pushl
lea
jmp
mov
mov
jmp
pusha
xchg
pushf
not
pop
mov
pushf
call
mov
push
bswap
lahf
nop
cwtl
cwtl
push
mov
jmp
push
pushf
xchg
lea
mov
mov
jmp
jmp
mov
jmp
mov
xchg
mov
pushl
movb
movw
pushl
ret
pusha
pusha
pushf
mov
pushl
movzbw
lea
mov
movw
jmp
not
not
mov
movzbw
mov
mov
movl
movb
mov
pushl
ret
nop
mov
call
pusha
pushl
pusha
lea
call
movw
pushf
pushf
mov
pushf
mov
lea
call
call
lea
push
pushf
pushl
xchg
pusha
mov
pushf
pushf
pushl
ret
pushf
mov
pusha
xchg
jmp
xchg
push
pushl
ret
push
mov
pushl
pushl
push
lea
jmp
bswap
nop
bswap
jae
cwtl
movsbw
pop
jmp
mov
mov
call
mov
pushl
pushl
jmp
jmp
nop
pushf
mov
push
call
xor
mov
pushl
popf
pusha
push
pushl
ret
mov
pusha
pushf
pushl
pushf
lea
call
jmp
mov
pushf
pushf
pusha
lea
push
call
mov
jmp
call
push
mov
jmp
lea
pusha
xchg
pusha
pushf
pushf
movb
pushl
ret
xchg
movw
mov
mov
pushl
ret
mov
mov
not
setno
setae
mov
mov
mov
jmp
lea
pushf
pushl
pushl
mov
not
pop
mov
mov
jmp
push
jmp
lea
call
jmp
mov
mov
movb
jmp
push
movb
xchg
pushf
push
pushl
ret
mov
jmp
pusha
pushf
nop
jmp
jmp
lea
jmp
movsbw
nop
jmp
pusha
movl
movw
movw
movl
call
jmp
mov
lea
jae
lea
pusha
pushf
jmp
xchg
movb
push
pushl
mov
pushl
ret
pushf
push
movb
mov
jmp
pushf
pushf
call
call
call
jmp
call
xchg
pushf
pushf
pushl
ret
lea
movb
lea
jl
pushf
xchg
mov
push
pushl
ret
pushf
xchg
mov
pusha
call
xchg
pushf
mov
pushl
ret
not
nop
lea
pusha
call
mov
call
lea
pusha
pushf
nop
not
mov
pushf
xchg
pushf
pushf
call
lea
movw
movl
lea
jno
pushf
xchg
pusha
pushf
pushf
movb
pushl
ret
push
pushf
xchg
pusha
mov
pusha
movzbl
push
mov
push
mov
pushl
mov
call
movl
jmp
call
adc
mov
add
and
inc
mov
mov
mov
repz
xchg
xchg
adc
xor
and
lods
sub
sub
sub
daa
push
es
scas
in
mov
or
das
xlat
inc
or
or
fs
daa
adc
les
sub
ret
aas
mov
cs
xor
sub
add
push
cmp
add
add
push
loop
repz
jb
push
mov
ret
aas
mov
pop
and
sub
add
lock
imulb
dec
xorb
jg
fbld
ficoms
fstps
jmp
movsb
push
push
out
std
scas
mov
jge
rcl
lret
in
jo
repnz
bound
sbb
mov
ret
jae
shll
push
repnz
dec
pusha
sub
mov
push
rcrl
inc
test
dec
in
mov
xchg
nop
imul
jg
cmp
dec
fdivrl
js
dec
mov
loop
push
push
or
jbe
clc
inc
mov
adc
and
xor
cwtl
adc
jmp
orl
mov
pop
adc
psubq
pop
out
pop
inc
nop
stos
sub
repnz
lock
sub
paddusw
incl
jl
pushf
scas
cmp
pushf
test
cli
cmp
sbb
lret
mov
in
sti
jecxz
aas
negb
rcll
xorl
js
enter
jns
cmp
pop
popf
fdivs
aas
aaa
add
mov
cmp
stos
mov
bound
mov
les
mov
add
mov
fistpl
repnz
inc
pop
jo
stos
sbb
lcall
clc
mov
and
repnz
loop
jp
es
lock
add
jle
dec
mov
repz
mov
lods
ss
mov
xor
ret
popf
imul
dec
insb
add
enter
sub
push
rolb
adc
mov
push
inc
imull
testb
movsl
fnsave
xchg
add
stos
sub
pop
mov
scas
enter
dec
adc
sub
test
inc
dec
cmpsb
sarb
test
insb
mov
fsubrl
mov
enter
mov
pushf
cld
jg
push
dec
push
cmpsl
sub
push
fsubrl
jp
shrb
arpl
cs
mov
insl
aad
cpuid
dec
js
scas
xchg
adc
pop
mov
mov
and
lods
pop
inc
sbb
jo
sti
imul
fldenv
test
ret
movsl
adc
push
test
scas
pop
xor
dec
out
nop
rcll
aaa
xchg
jp
inc
hlt
or
fisubs
ret
fstl
das
xchg
push
fmull
jle
int
or
rol
jp
scas
pushf
daa
sub
or
xor
imul
pushf
pop
into
cmp
cmp
int
adc
jl
ds
lods
cltd
inc
call
fcomps
xor
xchg
aad
aad
ret
push
mov
xchg
and
cmp
addb
mov
jecxz
add
xchg
jne
xlat
push
out
addr16
fisubs
popf
jecxz
mov
lds
lahf
and
push
ja
sbb
and
xor
int3
rolb
xchg
cmc
fbld
in
popf
adc
lcall
jmp
xlat
aas
or
or
cld
mov
cmp
pop
dec
pop
add
aaa
and
mov
adc
dec
das
in
mov
gs
das
and
shl
and
ds
sbb
cmc
xorl
testb
cmpsl
sub
dec
jno
and
sbb
aaa
cltd
and
fnsave
adc
icebp
push
aam
pop
mov
dec
adc
inc
fisttps
xchg
sbb
movsb
and
jge
cwtl
lret
ja
adcl
and
inc
sbb
out
idivb
mov
and
push
and
dec
call
cmp
mov
xor
sbb
cmp
inc
xchg
divb
stc
mov
jl
cmpsb
mov
add
outsb
icebp
cmp
out
xor
lcall
sahf
ljmp
push
add
and
or
push
mov
es
jle
add
or
adc
jecxz
lahf
sub
loope
xchg
jmp
inc
push
xor
sub
jnp
adc
xorb
aas
mov
and
mov
xor
out
icebp
in
jne
adc
pop
lds
lcall
fnstsw
xor
shrl
lahf
jl
push
mov
push
mov
pushf
int3
imul
pop
inc
inc
lcall
mov
scas
xor
out
jmp
psrlq
xor
orb
jmp
jp
jnp
mov
xor
iret
popa
mov
sub
mov
mov
ss
xchg
pushf
leave
leave
fimuls
xor
xchg
into
add
in
mov
dec
and
ljmp
mull
pop
xor
cld
jge
jnp
arpl
out
movsl
xor
add
cld
mov
adc
mov
xchg
out
and
xchg
push
mov
sbb
std
mov
sub
lret
scas
add
mov
adc
sub
xchg
adc
notb
repnz
sbb
pop
sub
inc
push
dec
sbb
adc
dec
lods
enter
mov
dec
and
mov
or
outsb
jle
ret
and
mov
mov
and
inc
fildl
or
sbb
stc
lret
mov
and
mov
inc
jge
popa
das
call
jnp
mov
dec
or
pop
mov
inc
xchg
adc
fcmovb
fbld
insb
xor
movsl
sub
into
loopne
or
and
popf
lahf
call
mov
pop
ds
mov
mov
test
add
xchg
adc
aam
sarb
mov
sarb
addr16
cmp
pop
push
push
cli
std
pushf
pushf
or
xchg
fs
in
adc
push
in
mov
inc
lods
adc
and
cmp
aam
and
dec
cwtl
inc
nop
aam
cltd
pushf
lock
mov
lds
sbb
sbb
mov
jecxz
or
or
sbb
mov
lods
xor
pop
jo
daa
stos
clc
lcall
cmp
push
rcl
inc
les
jae
jp
jp
imul
mov
in
cmp
sub
out
ss
fs
push
lcall
lret
pop
lcall
jp,pn
jb
psubusb
mov
in
and
push
andl
call
lahf
xchg
out
adc
aam
aas
inc
xor
mov
loope
fcoml
push
pop
pop
mov
add
xchg
xchg
jne
mov
pop
mov
pop
aas
inc
mov
nop
xchg
idiv
out
jle
pusha
fnstcw
xor
call
jno
or
sbb
sti
ss
xchg
sbb
adc
pop
pop
mov
inc
int
mov
and
add
call
dec
cmp
adcb
ret
xchg
inc
or
lcall
pop
loope
jo
fnop
rcll
mov
cmp
sub
jl
xor
pop
aas
lret
hlt
mov
lea
jnp
mov
pushf
jmp
pushf
pusha
push
xchg
pushf
push
pushl
pushl
ret
lea
pushf
call
push
mov
pushf
mov
pushl
cwtl
mov
pushf
jmp
xchg
call
fwait
cs
mov
jmp
call
movsbw
movzbw
bswap
mov
jmp
movl
jmp
pushf
push
jmp
call
pusha
pusha
push
jmp
call
not
lea
not
nop
pushf
lea
bswap
mov
mov
lea
jge
push
movw
pusha
xchg
pushf
jmp
mov
pushl
jmp
call
xchg
jmp
movzbw
lea
cwtl
lahf
nop
movsbw
movzbl
seto
mov
pop
push
jmp
pushf
movb
xchg
push
pushl
ret
jmp
mov
movzbw
setl
mov
pusha
mov
jmp
pushl
call
movb
xchg
pushf
pushf
pushl
ret
lea
movw
lea
jns
mov
call
call
jmp
xor
xchg
jmp
mov
call
nop
pushf
xchg
jmp
cwtl
lea
jge
mov
call
xchg
pusha
pushf
pushl
ret
jmp
movl
mov
movl
pushf
pushf
movb
pushl
lea
jmp
call
lea
mov
jmp
xchg
call
mov
pusha
lea
call
movzbw
mov
jmp
push
movw
push
nop
movw
movb
xchg
movw
lahf
call
call
push
pushf
pusha
nop
jmp
lea
mov
pusha
jmp
movl
xchg
pushl
mov
pushl
ret
movl
jmp
push
jmp
jmp
lea
nop
push
mov
pusha
pushf
call
lea
call
not
jmp
mov
setp
lea
mov
lea
jbe
mov
jmp
mov
lea
push
jmp
call
pushf
push
call
push
mov
pushf
mov
pushf
jmp
lea
jb
push
xchg
pusha
pusha
pushf
pushl
ret
setl
pusha
movsbw
nop
pushf
bswap
pushf
mov
movb
movb
pushf
xchg
mov
mov
lea
movzbw
mov
mov
mov
mov
mov
pushf
push
pushf
lea
pushf
jmp
movl
pushf
movl
pushf
movl
movw
pushf
pushf
lea
jmp
call
jmp
lea
jmp
call
mov
jmp
xchg
pushf
pushf
pushl
ret
not
not
not
mov
pusha
pusha
lea
movb
jmp
xchg
pushf
pushl
ret
pushf
pushf
mov
movb
jmp
mov
call
pushf
push
lea
jmp
lea
jae
pusha
lea
pusha
push
call
push
nop
push
xchg
lea
movzbw
mov
jmp
push
pusha
mov
pushf
movl
push
bswap
lea
push
movsbw
movsbw
movw
mov
call
pushl
movl
mov
push
pushf
lea
push
xchg
pushf
pushf
movw
movb
pushl
ret
mov
pushf
pushf
pusha
pushl
lea
call
call
push
push
pushf
call
lea
movzbw
mov
jmp
pusha
call
mov
pop
bswap
mov
mov
call
movb
mov
pushl
lea
call
pushf
lea
pushf
jmp
lea
pushf
movb
movb
mov
cwtl
not
pop
pop
mov
mov
pushl
movb
push
mov
pushf
lea
pushf
xchg
pushf
pusha
pushf
pushl
ret
nop
push
pusha
movb
mov
call
pushf
pusha
push
mov
cwtl
movzbw
mov
call
push
pushf
movl
push
mov
movb
push
lea
jmp
pusha
nop
call
lea
jo
pushf
movl
pushf
lea
jmp
mov
xchg
call
bswap
not
mov
push
lea
je
pushf
movw
mov
pushf
call
lea
jmp
loop
cmp
sub
aaa
out
cmc
mov
xor
vmread
sbb
pop
mov
and
imul
xorl
mov
jae
insb
pop
scas
cmpsl
inc
xchg
adc
dec
jp
sub
out
les
out
bound
sbb
sbb
std
dec
sbb
dec
push
sbb
xor
mov
mov
dec
and
lds
jnp
pop
add
lret
mov
and
add
stos
pop
jg
cmpsl
pop
mov
popf
push
imul
mov
jl
dec
inc
add
push
insb
in
pop
aaa
and
pop
mov
rolb
ret
lcall
add
gs
scas
jb
cmp
dec
sbb
je
mov
add
jae
stc
dec
aaa
and
outsl
sbb
jbe
imul
xor
dec
pusha
cld
int3
or
inc
dec
push
out
sub
mov
sub
inc
jns
pop
sbb
call
adc
jp
mov
jp
mov
fldcw
jnp
rolb
shlb
adc
dec
lahf
lea
inc
adc
int3
jb
xor
cli
sub
js
xchg
rcr
or
or
xchg
bnd
mov
xorl
adc
push
loopne
sub
icebp
xchg
jmp
xchg
je
int
xor
push
inc
out
aam
clc
mov
lock
mov
or
insb
popa
fwait
arpl
pushf
iret
outsl
and
adc
inc
add
mov
dec
mov
xchg
cmp
fstp
arpl
xchg
pop
test
nop
fcmovne
dec
shrb
decl
mov
pop
push
leave
adc
pop
xchg
push
mov
test
mov
icebp
and
imul
or
dec
pop
pop
pop
aam
or
and
aam
mov
or
js
inc
and
std
sbb
ficoml
mov
and
repnz
lret
enter
and
loopne
dec
cmpsb
je
outsb
mov
in
jbe
jne
dec
xchg
stc
gs
jns
or
or
adc
mull
loope
push
sub
scas
scas
bound
shl
pushw
inc
pop
mov
and
pop
sbb
add
mov
adc
sub
pminub
ss
or
repz
push
rcrl
repnz
adc
inc
add
cmp
xchg
dec
pushf
cs
pop
cmpsl
push
jmp
jo
cltd
repnz
xchg
xor
xor
and
or
mov
shrb
mov
insl
aaa
add
repnz
jns
popf
jge
push
jl
stos
imul
loop
inc
scas
scas
dec
pusha
insb
xor
push
sub
jae
in
or
add
sbb
outsl
and
shlb
or
or
and
and
mov
aas
popf
rcrl
bound
lods
ja
push
sbb
aam
out
daa
push
pop
fs
mov
into
cwtl
adc
in
repnz
mov
xor
adc
repnz
sarl
dec
inc
xchg
sbb
shll
cmp
ret
insl
pop
mov
dec
icebp
roll
out
and
gs
sbb
mov
or
push
pop
addl
loop
and
cld
loopne
iret
push
push
inc
mov
inc
jge
push
push
mov
rorl
mov
mov
and
sub
lock
or
or
cmpsl
dec
pop
and
jno
rorb
add
mov
mov
pushl
mov
lea
js
lea
call
mov
movb
jmp
lea
jnp
push
xchg
movw
mov
pushl
ret
jmp
lea
call
xchg
push
pushl
mov
mov
pushl
ret
movsbw
movsbw
push
mov
pushf
pushl
ret
mov
setne
mov
call
xchg
pop
setl
push
not
mov
pushf
mov
mov
movb
lea
push
jmp
jmp
mov
movl
pushf
pushf
push
lea
jmp
lea
push
push
pushf
movw
pushl
ret
mov
std
or
adc
cmp
dec
dec
xor
mov
jge
mulb
xchg
add
shl
aas
adc
ljmp
pop
sub
pop
fldl
xchg
add
dec
sub
adc
push
daa
pop
popf
mov
cld
cld
iret
xchg
ret
inc
add
ret
inc
push
scas
add
mov
inc
pop
jmp
cmp
push
sbb
nop
mov
push
in
mov
pushf
cmp
add
mov
mov
jle
dec
add
mov
ret
pop
sarb
aad
test
adc
lods
fsts
mov
leave
repz
and
cli
div
dec
push
mov
mov
add
jle
adcb
cmp
jbe
orl
sub
mov
cmp
aaa
or
push
pop
and
mov
sarb
cmp
sbb
xor
insb
addr16
dec
outsb
rcrb
inc
gs
mov
in
cmc
cmp
loop
ficoms
fistpll
jne
jecxz
pop
xor
jmp
jae
dec
lcall
sub
jmp
out
add
cltd
iret
jg
dec
movsl
add
jle
xor
push
pop
jbe
rcll
mov
in
das
fdivrs
pop
push
or
mov
or
xchg
dec
popa
lods
cmpsl
movsb
xchg
jg
ficompl
not
jne
inc
nop
es
adc
lods
fcmovnu
cmp
stc
shrl
inc
or
addl
pop
std
cwtl
ss
fstsw
das
mov
sub
dec
inc
mov
mov
inc
out
cmp
adc
pop
jne
add
xor
popf
and
xor
cmpsl
mov
sbb
jno
nop
in
mov
inc
pop
or
les
inc
jbe
das
mov
push
movsl
mov
mov
jle
push
popf
fcompl
les
fsubp
loopne
fcmovbe
cmpsl
insl
call
ret
adc
lcall
stos
popf
leave
push
in
mov
adc
icebp
and
inc
lahf
pushf
mov
je,pn
xor
add
pop
lods
push
into
sub
push
and
or
gs
daa
or
icebp
mov
pop
dec
repz
mov
repz
inc
push
mov
mov
icebp
mov
jbe
mov
sub
lea
shll
scas
xchg
imul
pop
daa
fwait
push
dec
xchg
addb
jmp
or
mov
cmp
ret
fnsave
ds
push
popa
dec
adc
fstl
lahf
call
jo
imul
out
test
cmpb
add
sub
or
mov
jne
lahf
jmp
mov
pop
jns
mov
dec
push
jmp
adc
mov
pop
xor
dec
fiadds
jl
adc
iret
xchg
pop
xchg
pop
cmp
add
movb
shlb
aas
add
xchg
repnz
sub
aad
mov
xchg
cltd
pop
ja
add
jbe
jbe
dec
push
icebp
mov
popf
out
pushf
sub
insb
je
daa
and
cmpsb
ja
add
jmp
cltd
out
out
data16
lea
push
repz
mov
movsb
dec
scas
jbe
push
sahf
clc
imul
cmpsb
xchg
jno
repz
mov
std
orl
adc
fdivr
aas
cmpsl
outsb
rorb
rolb
push
dec
repz
mull
jmp
mov
enter
xchg
sub
inc
inc
or
dec
stos
js
cmpsl
cmc
and
dec
push
xor
inc
jno
jno
ljmp
pop
dec
dec
xchg
ret
sub
mov
movsb
cmpsb
sub
ss
jnp
test
xchg
lods
sbb
ja
xchg
popf
frstor
sub
mov
ret
stos
mov
fidivl
aas
or
fimuls
in
jno
pop
mov
gs
shlb
mov
leave
jmp
push
arpl
push
lock
pop
out
fsubl
outsl
add
inc
movsb
inc
popf
es
mov
or
push
mov
test
imul
xor
cmp
daa
lock
jnp
or
fnstsw
dec
jmp
roll
std
mov
int
rorl
adc
stc
stos
out
sub
negl
lcall
pop
shll
addl
scas
jecxz
dec
add
pop
test
stos
in
ds
pop
cmpsl
inc
out
into
cmpsl
lahf
xchg
pop
pop
cmc
inc
lcall
shll
and
add
adc
test
jae
addr16
mov
mov
int
mov
in
xor
mov
inc
inc
push
cmc
das
out
add
sbb
cmpsl
sub
fidivrs
inc
mov
ret
lods
bound
fiadds
daa
popa
stos
cmp
movsl
test
loope
mov
rcrl
add
jge
xor
out
cmp
xor
xchg
ret
push
cld
jle
add
mov
clc
insl
mov
push
inc
faddl
jp
fnstsw
je
outsl
cmp
mov
sub
ret
cmp
stc
jmp
lahf
jg
add
push
popf
sub
mov
aas
lea
sbb
mov
cmp
jle
mov
mov
es
push
jno
into
lret
sub
push
stc
pop
mov
rcll
pop
mov
xor
dec
pop
test
xor
sarb
jp
loop
out
mov
push
les
push
or
mov
cmp
and
xlat
sub
jbe
call
xchg
ret
ret
sub
mov
in
cmp
xchg
std
cmp
pushf
push
jmp
cwtl
das
inc
cld
pushf
mov
jp
or
out
fdivl
les
add
mov
mov
pop
popw
repz
scas
daa
aaa
xor
add
cltd
into
sub
inc
ret
pop
xchg
js
mov
testb
rcll
fadds
adc
jne
lods
cmovl
fdivp
bound
jno
dec
add
mov
pop
lods
cld
rol
mov
dec
pop
add
push
mov
add
roll
xchg
out
cmp
cmp
xchg
loop
mov
cmp
xchg
mov
cmp
push
push
mov
fildll
jne
lret
jp
jge
popa
insb
dec
int3
mov
cli
in
insb
jns
js
idiv
mov
sti
xchg
fcomp
leave
dec
sbb
dec
pop
jno
lret
cmp
xchg
push
xor
sub
xor
mov
outsb
test
jns
or
push
jo
outsl
push
movsl
xchg
decb
icebp
enterw
mov
out
popf
xchg
mov
in
mulb
lea
test
test
jg
fbld
popa
jae
or
stc
xor
lret
dec
out
icebp
or
mov
push
pushf
sbb
lcall
pop
enter
lret
cmpsb
dec
xor
dec
jp
dec
lret
xchg
xor
mov
mov
push
mov
cmp
add
or
shlb
mov
lret
repz
lock
cmp
sti
lock
adc
xor
xor
xchg
movsbw
xchg
not
pushf
movsbw
pop
xchg
pushf
not
pop
mov
lea
lea
call
call
call
jmp
pushf
jmp
movb
jmp
jmp
xchg
mov
mov
mov
pushf
pushl
ret
mov
call
movzbw
mov
call
jmp
xchg
movzbw
bswap
pushl
mov
push
call
jmp
mov
jmp
lea
pushl
pushf
movl
mov
movzbw
bswap
movsbw
mov
pushl
mov
call
push
mov
push
call
mov
mov
push
lea
jo
lea
push
pushl
xchg
pusha
push
pushl
ret
xchg
bswap
mov
call
push
nop
pusha
movb
call
jmp
xchg
pushf
pushl
ret
lea
bswap
movsbw
mov
pushf
jmp
ss
out
mov
lret
mov
mov
xchg
rclb
jns
jecxz
sbb
add
pop
jno
cmpsl
stc
push
and
jo
inc
in
adc
dec
test
les
lds
imul
push
hlt
js
cmp
mov
push
mov
lret
jp
push
push
mov
sbb
stc
lds
sub
cmp
rolb
sarb
std
fcomip
fimull
mov
pop
jmp
std
ljmp
shlb
push
mov
mov
icebp
loopne
cmp
and
and
out
in
rol
xchg
outsl
dec
xchg
or
mov
cmp
std
iret
cltd
int3
or
outsl
jo
imulb
mov
icebp
loopne
std
add
xor
hlt
push
arpl
loop
test
cmp
ffree
sub
jnp,pn
mov
push
out
mov
testb
popa
xor
in
mov
and
sub
test
inc
inc
lret
jno
inc
out
jo
cmova
push
ror
jp
mov
jns
mov
push
mov
rcrb
push
inc
insb
pop
in
scas
xor
add
aam
pop
mov
out
cmp
xchg
mov
outsb
insl
les
and
jmp
mov
xchg
fistl
cmpsl
cmp
test
jno
loope
stos
adc
pop
sub
mov
push
xlat
add
add
leave
ljmp
push
xchg
insb
xor
lret
movsl
lods
lea
inc
ds
sbb
enter
mov
sub
jge
daa
add
std
mov
inc
mov
push
mov
stc
xor
mov
xor
jns
add
jg
sub
or
lods
mov
orl
pushf
loop
sar
inc
pop
sub
mov
inc
xchg
dec
pop
mov
dec
in
clc
orl
pop
dec
or
out
push
mov
out
insb
pop
stos
cli
jge
mov
and
jmp
jecxz
rcrb
cmp
rcrb
mov
mov
pop
test
movb
inc
scas
mov
ret
cltd
mov
mov
lret
fstps
in
dec
mov
in
push
fdiv
mov
sub
adcb
jne
mov
sar
pop
sbb
mov
pushf
jno
rcrb
test
mov
cmp
sbb
mov
data16
cli
fsubl
test
xorl
adc
loopne
gs
outsb
fldl
or
xchg
xor
cld
mov
inc
rcrb
pop
adc
decl
and
aas
mov
push
mov
adc
add
sbb
mov
mov
ljmp
gs
repz
scas
pop
sbb
jp
push
repnz
or
repnz
xor
push
cld
mov
xor
fisttpll
xor
js
and
sub
int3
dec
dec
mov
cmp
clc
or
xchg
mov
dec
fisubs
add
pop
or
jno
or
fsin
clc
add
push
add
ficomps
adc
fisubl
icebp
and
popf
neg
icebp
bound
push
insb
in
mov
dec
xchg
pop
addr16
xor
pop
push
and
addr16
bound
push
inc
or
lcall
inc
dec
xchg
or
xlat
and
hlt
loop
fimuls
inc
xchg
sbb
loop
mov
ja
adc
repz
fsubr
mov
mov
pop
cs
addb
or
fidivrs
inc
out
mov
js
push
movsb
add
stos
pop
add
inc
nop
fdivl
hlt
pushf
xor
xlat
and
iret
pop
imul
push
mov
or
inc
incb
into
pushf
xor
popf
mov
mov
int3
or
adc
loopne
push
cmc
dec
sar
mov
xchg
testb
outsl
mov
mov
mov
dec
data16
or
cmp
scas
or
mov
xchg
jle
sar
fcoml
push
mov
sbb
dec
jnp
cmp
jge
bound
js
push
xchg
jp
insl
push
fwait
divl
jl
notl
test
mov
fsubl
les
push
xchg
int3
mov
jmp
mov
jmp
test
in
cmpl
inc
jecxz
ljmp
cld
dec
cltd
str
in
push
pusha
sub
push
stos
movb
mov
pop
or
stc
cltd
dec
xor
cmp
jmp
inc
out
pop
mov
sub
ficomps
cmpsb
adcb
je
mov
or
pop
fs
push
jnp
jmp
or
sbb
lret
ret
jne
mov
imul
jl
sbb
mov
call
stos
push
ss
adc
sub
inc
push
fnsave
xor
add
dec
dec
test
inc
adc
inc
pop
enter
aad
lret
jecxz
addr16
inc
pushl
lea
jmp
call
call
movl
mov
call
pushf
pusha
lea
pushf
call
lea
pushf
movb
jmp
lea
pusha
jmp
pusha
pushf
pusha
jmp
lea
jb
push
not
movzbl
pushf
mov
lea
jp
pusha
mov
lea
jne
push
push
lea
pushf
jmp
mov
movb
call
pop
not
movzbw
mov
jmp
bt
xor
stc
xor
clc
xor
call
pushf
mov
call
xchg
pop
jmp
mov
movw
jmp
pushl
mov
push
pop
mov
jmp
lea
call
lea
pushf
mov
mov
movzbw
pushf
movsbw
mov
call
jmp
call
jnp
add
mov
bswap
call
call
mov
call
movsbw
mov
pushf
xchg
call
jmp
movzbl
mov
call
lea
pushf
pushl
jmp
call
dec
popa
lret
std
lahf
out
cmp
mov
aad
js
sub
push
sti
mov
xlat
mov
and
rcll
sbb
bswap
dec
gs
or
js
mov
ss
xor
or
inc
add
cmp
ja
or
cmp
fstl
xorb
std
jge
dec
cmp
mov
popa
mov
push
dec
scas
sbb
lds
sti
divl
push
pusha
cmp
arpl
addr16
add
inc
shrl
add
loopne
cmp
jnp
lock
mov
push
pusha
cmp
mov
and
or
push
mov
lock
lods
push
arpl
xor
adc
jo
push
out
movl
fistl
sbb
leave
adc
sahf
sbb
lds
test
adc
sub
dec
clc
sbb
mov
add
and
sub
xchg
loope
out
xchg
add
jo
push
stos
rorb
jne
out
enter
pop
mov
push
push
or
mov
and
psubusb
movsl
outsb
inc
jp
push
dec
adc
xor
mov
leave
mov
sarl
mov
cmp
inc
and
jo
sub
hlt
pusha
icebp
add
cmp
push
xchg
jnp
cmpsb
sub
lahf
jmp
mov
out
leave
aad
mov
test
sahf
bound
fldt
pop
push
fmuls
insb
fisubl
mov
out
sub
cmpsl
daa
jp
pusha
add
sbb
pop
dec
mov
jbe
cltd
stos
imul
xor
fwait
ljmp
inc
mov
xor
cltd
xor
aaa
xorb
cltd
jae
aaa
adc
xor
and
rcrl
jno
cmc
movb
jb
in
fsubs
mov
mov
mov
adc
dec
in
call
imul
or
adc
adc
dec
sbb
imulb
inc
mov
lret
xchg
fmull
and
jmp
or
scas
jg
pop
outsb
stos
mov
std
pop
cmpsb
hlt
cs
das
jle
js
out
mov
jnp
xchg
jne
push
jnp
ret
or
popa
sub
in
xchg
mov
js,pt
mov
fstl
xor
daa
dec
arpl
cld
xor
jg
loop
insl
insb
mov
adc
push
push
or
jge
test
or
aam
inc
xor
fmull
ds
movsb
xchg
mov
or
aaa
push
rorl
dec
or
or
xchg
outsb
shrl
mov
push
clc
sti
and
repz
xchg
addr16
clc
addb
mov
jge
ret
push
add
jbe
xor
pop
xchg
jg
ret
outsl
mov
cld
mov
sub
pushf
dec
scas
inc
test
or
push
std
je
imul
or
ja
ljmp
in
xchg
inc
cmpsl
cmp
movsl
pop
mov
sbb
mov
inc
lock
jle
cmpsl
es
call
mov
hlt
out
arpl
ljmp
and
arpl
jnp
inc
bswap
loope
sti
packsswb
rorl
idivl
and
in
dec
sbb
rcrb
inc
jb
cmp
shll
stos
mov
dec
es
add
addl
int3
cmp
mov
in
pop
jge
nop
into
jp
pop
stos
repz
idivb
mov
pusha
pushl
call
xchg
push
pushl
ret
mov
pop
mov
lea
movzbw
mov
pushl
pushl
ret
pushf
push
call
jmp
push
mov
movsbw
mov
call
adcb
cs
mov
lahf
jecxz
shrb
xor
ja
pusha
or
jle
icebp
push
shll
add
jl
fisubl
and
je
jp
incb
sti
movsb
xor
lods
fmul
fyl2xp1
pop
inc
lea
pop
pop
mov
push
cwtl
test
dec
add
stos
stos
sbb
std
stc
ret
idivl
repnz
movsb
fldt
loop
movsb
pop
stc
and
scas
sti
lods
add
pusha
ds
push
andb
push
dec
xchg
clc
stos
hlt
fs
daa
in
pushf
pop
lock
add
scas
lea
sub
mov
rorl
inc
lds
mov
or
pop
pop
shrb
shlb
add
out
sbb
mov
add
pop
daa
and
std
call
mov
mov
mov
das
mov
mov
and
add
dec
jle
adc
je
jbe
mov
pop
xchg
or
add
xchg
push
jb
cmpps
stos
mov
push
cmpl
call
jb
add
push
enter
sahf
lret
into
mov
cmp
xor
stc
imul
dec
jmp
insb
iret
mov
jmp
int
test
out
mov
stos
pop
sub
pop
jo
into
lods
inc
xchg
aaa
inc
outsl
jbe
sahf
lea
and
shrl
nop
fisubl
adc
lds
push
fwait
sbb
jp
mov
insl
cmp
mov
loopne
pop
pusha
scas
pop
test
test
std
enter
pop
je
in
adc
cmp
pop
pop
test
xchg
fwait
imul
fwait
cmp
les
and
xor
pop
xchg
imul
xchg
stc
add
enter
mov
add
stos
jns
cmp
pop
and
pop
roll
ffree
setge
mov
dec
add
mov
xor
adcb
xchg
aad
jmp
cs
sbb
push
sub
add
rclb
inc
or
xor
dec
call
pop
jo
cmp
jbe
je
sarb
repnz
cld
inc
pop
neg
pop
xchg
sub
lods
or
mov
xor
add
repnz
and
sub
leave
rorl
insb
leave
mov
ds
mov
mov
jmp
push
and
in
mov
jge
lods
and
roll
repnz
add
out
push
das
add
push
dec
rorb
and
adc
popf
test
rolb
push
stc
ds
mov
loope
sub
loopne
mov
mov
lods
cmp
iret
test
xchg
insl
inc
mov
add
add
xchg
mov
nop
sub
mov
mov
jbe
mov
aam
jle
dec
or
xor
repnz
stos
sahf
insl
xchg
in
addr16
and
test
or
jns
data16
sti
popf
fisubrs
mov
lods
pop
movsl
adc
mov
je
imul
mov
xor
push
in
outsb
imul
mov
int
pop
clc
addl
cmpsb
fwait
aad
loope
fs
jno
xor
repz
hlt
jge
push
idivl
jl
inc
adc
adc
sbb
fwait
lret
subl
push
lds
aam
add
cmpl
and
rcrb
and
mov
in
xlat
push
int
cmp
add
ret
xor
popa
dec
push
or
fs
fwait
cmpsl
add
lret
jle
dec
and
jecxz
imul
rolb
js
fwait
sarl
pop
xchg
movsl
ret
movsl
sbb
ds
arpl
xor
cmp
xor
lahf
inc
push
dec
mov
push
or
jae
jne
or
push
push
mov
adc
sbbl
pop
clc
mov
stos
sbb
push
fnstcw
push
push
inc
fwait
lea
iret
cmp
jb
ss
cmpsl
cltd
leave
fbstp
sbb
fbstp
ficomps
andb
push
out
addb
add
sbb
mov
lret
push
and
cmpl
fisubl
popf
in
dec
sti
inc
stos
in
fsubs
push
es
js
clc
xchg
mov
mov
lods
mov
mov
xchg
cmp
bswap
outsl
enter
aaa
jno
es
and
cld
pop
test
jg
mov
mov
jp
adc
popa
or
sbb
mov
jb
push
testb
mov
popf
in
pusha
cmpl
and
mov
int
aad
cltd
addr16
popa
xchg
adc
fsubs
mov
mov
jg
icebp
ss
popa
pop
or
jb
xor
and
xor
popa
stos
fistpll
and
ret
inc
push
push
add
out
sbb
fsubl
shlb
mov
push
mov
ficompl
mov
mov
mov
pop
cmpb
into
loope
push
in
xchg
dec
xchg
adcb
fimull
xlat
lret
dec
xchg
out
sub
pop
push
push
imul
aad
inc
test
mov
push
xor
icebp
movb
loop
loope
sub
incl
dec
les
add
je
or
mov
fucomp
cmp
sti
and
or
xchg
mov
mov
lahf
ret
test
or
sbb
fisubrs
jo
je
sbb
cwtl
int
out
mov
enter
cmpb
iret
int
dec
imul
xchg
pop
mov
adc
aas
loopne
out
loope
sahf
scas
mov
xchg
movsl
dec
out
push
and
std
rcrb
mov
lea
and
cwtl
push
mov
lret
add
adc
xlat
scas
mov
movsl
aas
jo
lcall
mov
stc
mov
scas
cmp
sahf
mul
leave
aas
pushf
push
sahf
dec
cmc
lahf
and
ja
inc
int
push
or
subl
inc
rcrb
call
jo
push
sub
sub
mov
es
sub
xchg
jne
cmp
fcoml
arpl
fnstsw
push
mov
in
lea
mov
clc
inc
stos
negl
mov
data16
and
mov
sub
insb
cli
inc
mov
sarb
xlat
adc
dec
xlat
scas
icebp
das
shl
roll
lret
adc
add
jmp
pop
push
mov
cmp
pop
fs
add
out
dec
idivb
fiadds
sti
sbb
xor
mulb
push
sbb
mov
mov
mov
jne
and
xlat
call
push
inc
or
xchg
xchg
cwtl
add
mov
insl
dec
sti
cld
sbb
movsb
lret
ss
xor
aam
mulb
in
add
adc
orl
lods
sub
dec
mov
ss
loop
sub
outsl
icebp
mov
cld
mov
sbb
cmc
fneni(8087
sbb
mov
clc
daa
mov
cmp
mov
and
out
insl
hlt
cmp
aam
or
cltd
mov
sub
in
mov
cmp
push
aad
test
fwait
clc
testb
fildl
cmc
adc
push
mov
clc
test
push
pushf
lahf
pop
rclb
hlt
mov
lock
mov
cwtl
arpl
lret
inc
inc
inc
add
mov
lock
jnp
pslld
popf
xchg
pop
adc
sbb
cmp
dec
sub
xchg
adc
cli
dec
shlb
adc
mov
xor
mov
test
dec
dec
int
leave
xor
cmp
jg
push
ja
stos
xchg
mov
or
dec
adc
cwtl
sub
and
mov
adc
lods
div
aaa
nop
addr16
cs
std
popf
pop
aas
aad
jnp
in
sbb
ficoms
pslld
adc
movsl
push
inc
stc
cli
insb
xlat
mov
test
int
movsl
cmpsb
and
mov
cmp
rcr
pop
or
fldenv
inc
lds
add
js
movsbw
mov
call
mov
jmp
mov
pushf
call
lea
jl
lea
pusha
call
lea
push
mov
not
mov
lea
jmp
mov
pop
pushf
pop
mov
mov
jmp
movb
lea
jmp
jmp
nop
call
xchg
movb
push
pushf
pushl
ret
lods
jmp
and
std
dec
adc
pop
hlt
sbb
scas
in
mov
and
cwtl
pop
repnz
add
insl
jno
cmc
inc
fs
test
add
and
mov
adc
imul
jge
ljmp
push
ss
movsb
insb
popf
ret
pop
test
pop
push
mov
jl
or
sub
jb
jle
and
lahf
add
test
rorb
push
aas
cli
lea
xchg
cs
cs
pop
test
add
outsl
pop
in
cmpsb
push
sarl
sbb
scas
jmp
push
lret
mov
add
jle
inc
and
mov
xor
pop
in
push
int3
mov
aas
mov
cltd
std
add
imul
pop
jb
outsb
pop
mov
in
xlat
and
xchg
pop
xorb
fidivs
cmp
aaa
lahf
mov
cmc
fcomps
pop
cmpsb
dec
scas
xor
adc
mov
cs
mov
push
lods
pop
mov
jnp
add
and
cmp
rolb
cwtl
and
std
sti
push
in
mov
inc
jecxz
mov
cld
les
add
adc
ds
mov
jl
cmp
jb
jmp
and
pop
mov
js
jmp
add
mov
das
icebp
sbb
adc
inc
dec
lods
or
xchg
jl
inc
lds
fsubl
add
dec
hlt
and
dec
notl
push
dec
popf
mov
scas
ret
cmp
cmp
pop
insl
lea
test
pop
jmp
adc
arpl
mov
push
cmpsl
mov
outsl
add
xchg
popa
movsl
lcall
mov
xchg
fs
into
dec
or
out
mov
cmp
cmp
loopne
out
adc
add
jge
mov
mov
cmp
pop
jl
mov
xor
ljmp
jmp
loop
mov
sub
fbld
dec
out
pop
jns
push
sub
insb
cmp
jmp
icebp
dec
xorl
mov
js
out
rcll
or
sbb
pop
adc
mov
fdivrs
stos
or
jne
stos
mov
push
xchg
sbb
mov
fmuls
pop
shll
xor
in
cmp
sarl
repnz
insl
mov
adc
jle
bound
jb
ret
and
xchg
jl
jge
mov
call
fwait
leave
idivl
push
pop
add
leave
ljmp
std
inc
pop
and
lods
iret
push
xlat
xor
orl
fdivrp
jl
or
xchg
inc
fisubs
add
mov
xchg
aad
mov
jg
xchg
mov
cltd
std
push
inc
ds
lock
loopne
xchg
popf
dec
push
sbb
stos
sti
and
add
inc
mov
repz
aaa
fidivs
jge
mov
xor
lds
add
fcomip
add
xchg
pop
inc
pop
sub
and
aas
xor
adcb
mov
stos
jmp
jg
inc
sbb
stos
push
and
fnstcw
push
push
movsb
mov
out
mov
movsl
push
jge
cmp
adc
pause
mov
cmp
adc
inc
push
dec
aad
scas
mov
xchg
push
insl
in
lods
aaa
mov
add
fcom
loop
pushf
and
orl
dec
sbb
dec
xchg
or
dec
shrb
faddl
jb
nop
add
inc
mov
mov
out
mov
repz
pop
xchg
pusha
movsb
imul
xor
dec
xchg
sub
pusha
push
aas
aaa
xor
repz
cmp
fmuls
or
icebp
test
inc
sbb
mov
pop
sub
mov
cltd
and
adc
xchg
dec
lahf
xlat
push
bound
mov
cmp
out
jo
shlb
stos
repnz
fmulp
into
add
mov
or
mov
adc
jns
and
and
clc
inc
sbb
mov
and
ret
pop
cmpsb
push
inc
pop
js
push
popf
popa
dec
out
lret
movsl
imulb
test
inc
and
adc
lea
push
aas
bound
jnp,pt
es
roll
iret
mov
sub
aas
push
pop
ds
mov
xchg
adc
xlat
loope
mov
test
nop
fsubs
sub
push
jmp
push
clc
dec
mov
push
inc
mov
or
mov
push
mov
lret
dec
shl
mov
testb
sub
lock
add
add
call
and
lods
jne
add
mov
push
movb
lea
jmp
pop
cwtl
lahf
nop
call
sete
nop
not
pop
pushf
xchg
call
mov
pushf
mov
push
call
mov
call
pusha
xor
call
movb
xchg
call
pushf
movl
pusha
call
lea
jnp
pusha
xchg
bswap
mov
pushf
call
jmp
mov
pushf
pusha
jmp
lea
jb
mov
push
push
pusha
call
push
mov
nop
call
not
movzbw
mov
bswap
mov
push
pusha
push
lea
call
jmp
pushl
xor
pushf
xor
clc
xor
call
mov
push
call
lea
push
mov
push
call
lea
pushl
mov
setl
mov
call
movsbw
mov
pushf
call
pushf
pushl
mov
mov
pushf
pushf
call
mov
setb
not
nop
lea
setb
pop
call
lea
jmp
jmp
nop
push
jmp
nop
setb
jmp
mov
movzbw
pusha
mov
pop
mov
movb
mov
push
push
lea
jae
push
lea
pushf
jmp
nop
jmp
pusha
push
xchg
pusha
pushl
pushl
movw
pushl
ret
mov
cwtl
mov
mov
jmp
pushf
lea
pushf
xchg
movb
mov
movb
pushl
ret
xchg
pushl
movl
pushf
pushl
ret
lea
js
pusha
mov
pusha
lea
movl
movb
pushf
pushl
ret
jmp
movsbw
pusha
not
nop
pop
pushf
mov
pushf
pushf
call
bswap
mov
pushl
pusha
call
lea
pushf
mov
movzbw
call
xchg
pushf
pushl
pushl
ret
mov
call
call
mov
mov
pushf
mov
pusha
pushf
jmp
adc
cmp
and
iret
movzbw
jmp
mov
mov
mov
call
mov
xchg
mov
mov
movb
push
pushl
ret
pushl
mov
xchg
push
push
push
mov
pushl
ret
call
bswap
not
nop
bswap
pushf
not
mov
call
movb
movb
mov
xchg
mov
movb
pushl
ret
call
movw
push
mov
pusha
pushf
mov
jmp
xchg
push
mov
push
pushl
ret
call
mov
movb
call
pushf
pushf
xchg
pusha
push
movb
pushl
ret
lea
jmp
pusha
jmp
push
setl
mov
pushl
pushf
pushf
mov
call
push
lea
call
pusha
nop
push
pusha
jmp
lea
ja
mov
setns
movzbw
lea
mov
call
push
movl
jmp
lea
not
mov
push
mov
movw
xchg
jmp
cwtl
bswap
mov
push
lea
movw
call
call
pushf
movl
lea
pushl
xchg
movl
pushl
ret
push
mov
call
xchg
push
pushf
mov
push
pushl
ret
pusha
pushl
push
mov
movzbw
mov
pushf
mov
lea
jge
push
movb
pusha
lea
lea
je
pusha
xchg
push
pushf
mov
pushl
ret
mov
push
mov
movl
mov
pushf
movb
lea
jmp
call
call
pushf
mov
pushf
call
pushl
xchg
bswap
mov
pusha
call
mov
pushl
lea
pushl
xchg
mov
pushf
pushl
ret
push
bswap
lea
pop
push
pushf
lea
mov
not
not
mov
mov
pushl
pushl
pushl
ret
xchg
call
mov
xchg
pusha
pushl
pushf
pushl
ret
jmp
mov
lea
jns
xchg
pusha
movb
call
mov
xchg
mov
pushl
ret
call
mov
movb
lea
call
not
lea
lea
pop
mov
jmp
pushf
jmp
pusha
not
movsbw
nop
not
lea
mov
pushf
pushf
jmp
jmp
jmp
pushf
bswap
jmp
pushf
xchg
pushf
pushf
pushl
movb
pushl
ret
movb
pushf
mov
mov
pop
pushf
pushl
movsbw
mov
push
jmp
mov
movsbl
pushf
pop
mov
push
mov
pushf
call
xchg
push
pushf
movb
pushl
ret
xchg
pusha
pushl
pushf
pushl
ret
call
xchg
call
lea
push
call
pop
movsbw
mov
pushf
lea
jbe
mov
bswap
setl
push
lea
lea
pushf
mov
bswap
mov
push
pusha
mov
pushl
ret
jmp
call
jmp
pushl
xchg
call
call
xchg
pushf
mov
push
push
pushl
ret
mov
push
mov
jmp
mov
pushf
not
mov
pushf
pusha
pushf
mov
mov
pushl
call
mov
call
mov
lea
push
mov
xchg
pushf
pushf
pushl
ret
xchg
pushf
call
pushf
jmp
pusha
jmp
mov
movzbw
jmp
mov
call
mov
movsbw
pushf
mov
mov
call
pushf
jmp
call
mov
movb
pushl
mov
movb
lea
call
pushf
jmp
pusha
pushf
xchg
call
xchg
mov
pusha
mov
pushf
pushl
ret
pushf
lea
call
lea
mov
call
pushf
movb
pusha
nop
movl
movb
lea
jae
push
not
pusha
not
mov
call
pushf
cmp
xor
push
xor
test
xor
pusha
movw
xor
cmc
pusha
xor
bt
xor
push
pushl
xorl
push
xor
stc
pushl
popf
mov
pushl
ret
call
lea
ja
pusha
pushf
xchg
mov
pushf
xchg
push
mov
push
mov
push
lea
jg
mov
pusha
pushf
lea
call
call
lea
movb
mov
xchg
push
pushf
pushf
pushl
ret
xchg
jmp
push
pushl
nop
jmp
lea
call
jmp
pushf
jmp
lea
pushf
xchg
pushf
movb
pushf
pushl
ret
movzbw
lea
push
lea
movsbw
jmp
call
lea
pushf
mov
bswap
sete
mov
jmp
push
mov
mov
lea
push
xchg
movb
pushl
pushl
ret
call
jmp
xchg
push
pushl
ret
jmp
call
mov
lea
mov
pushf
pushf
call
mov
movzbw
jmp
pushf
pushl
nop
call
pusha
pushf
popl
clc
xor
mov
xor
clc
push
xor
pusha
stc
xor
bt
xorl
pushl
clc
xor
clc
test
xor
stc
xor
clc
movb
pushl
popf
mov
pushf
pushl
ret
push
pushf
movw
nop
call
mov
lea
pushf
jmp
bswap
lea
bswap
nop
movsbl
movsbw
cwtl
movzbw
pop
call
pushf
mov
push
push
movb
pushl
lea
pusha
xchg
pushf
push
mov
pushl
ret
mov
mov
not
mov
mov
pushf
mov
pushf
pushf
lea
movb
mov
pushf
push
xchg
pushf
mov
pushl
ret
xchg
movb
pushf
movb
mov
pushl
ret
movsbw
movzbw
nop
mov
lea
mov
pop
pushf
xchg
movb
pushf
mov
xchg
pushl
push
mov
call
call
xorl
stc
xor
test
xor
pusha
jmp
push
xchg
bswap
mov
pusha
jmp
call
lea
nop
mov
pop
call
call
push
mov
pusha
jmp
push
xchg
pusha
movl
pushl
ret
pushf
pushf
push
lea
push
jmp
jmp
lea
pushf
call
lea
movl
call
movzbw
mov
pushf
jmp
push
mov
xchg
pushf
xchg
movzbw
mov
call
push
push
xchg
pushl
movb
pushl
movb
pushl
ret
pusha
lea
mov
pushf
movb
xchg
movb
pushl
ret
jmp
lea
jmp
jmp
call
xchg
pushl
pushf
mov
mov
pushl
ret
lea
ja
pusha
lea
jmp
lea
call
pusha
call
pushf
movb
xchg
push
mov
mov
movb
pushl
ret
pushf
pushl
popf
pusha
pushl
ret
call
not
jmp
mov
lea
call
lea
call
mov
movzbw
not
jmp
jmp
mov
jmp
jmp
fsub
inc
adc
std
and
mov
dec
jnp
pop
sbb
dec
push
andl
ljmp
shlb
inc
push
jge
mov
push
xchg
daa
xor
dec
pusha
jbe
inc
imul
jae
leave
pop
push
xor
inc
fmuls
jae
sub
mov
mov
sbbl
sahf
daa
mov
push
sahf
or
mov
xor
sbb
insb
jle
xchg
adc
bound
mov
es
push
lahf
or
pop
push
dec
sbb
adc
loop
dec
pop
sti
sbb
mov
hlt
mov
movd
and
or
repz
call
jae
mov
and
and
in
mov
pop
int3
mov
or
mov
pop
push
ljmp
push
sahf
inc
xchg
aaa
lods
add
inc
jae
in
mov
data16
bound
cmp
and
nop
mov
shrl
imulb
out
in
sbb
fildll
orl
mov
jp
mov
mov
jno
adc
or
xchg
jge
mov
dec
ret
pop
push
and
jg
mov
movsl
inc
cltd
rcrl
xor
enter
fnsave
clc
aam
cmp
xorb
test
gs
shrl
add
add
cmpsb
and
sub
add
xchg
mov
push
push
or
insb
sub
xchg
cwtl
push
out
scas
std
icebp
clc
stos
or
es
lret
pop
aad
add
xor
lea
push
sub
shl
pop
cmpsb
seta
popa
mov
push
sub
pop
imul
adc
xlat
movsb
shrb
push
fldl2t
or
outsb
jbe
xchg
in
xchg
fwait
hlt
cmp
mov
imul
lods
pop
jmp
insl
mov
lods
dec
shr
fists
push
jae
xor
dec
dec
movsb
icebp
dec
mov
enter
and
pop
lods
popf
mov
sbb
sbb
xchg
jbe
pushf
mov
lock
sbb
lods
inc
dec
addr16
mov
push
leave
loopne
inc
lcall
int3
imull
sub
addr16
jmp
jae
rcrl
arpl
loopne
leave
jmp
data16
mov
jecxz
scas
push
fsubrs
and
loop
ffreep
mov
xor
and
inc
ret
sbb
hlt
adc
and
movsl
int
push
cld
mov
or
enter
nop
xchg
lock
enter
cmp
aad
mov
jmp
push
mov
loop
inc
adc
cli
lret
xchg
mov
and
adc
or
mov
addr16
jl
cmp
push
xor
pop
insb
push
arpl
jbe
push
aam
fwait
aaa
mov
fisttps
and
es
push
cmpsb
mov
cmpsl
in
out
jb
sbb
xor
mov
cmp
stc
inc
add
mov
adc
cmpsb
push
xor
adc
cmp
push
xchg
inc
or
fwait
lret
sbb
rcrb
sub
pop
and
sub
sub
adc
inc
pop
pop
int3
xlat
cmp
pop
cmp
mov
jecxz
aas
inc
stc
sub
mov
push
mov
cmp
dec
jg
int3
fcomi
sub
xchg
in
mov
jl
sbb
pop
loop
dec
xchg
sbb
adc
xchg
lahf
idivb
xchg
lds
test
jecxz
jle
sbbl
jnp
inc
pop
or
add
and
push
addr16
push
dec
lahf
xor
mov
sub
in
data16
mov
adc
loope
cmpl
push
sub
lds
roll
dec
nop
jbe
inc
lahf
inc
xchg
sub
loope
pop
inc
leave
cmp
fisubs
inc
dec
inc
sub
test
push
xlat
sahf
andl
mov
sbb
or
add
mov
fistpll
addr16
lret
or
inc
adc
jb
jne
loop
lods
pop
daa
ret
jb
mov
pop
scas
lods
out
iret
mov
add
stos
jno
inc
inc
and
jle
jmp
dec
sahf
mov
popa
mov
popf
mov
inc
or
ljmp
or
sbb
ret
lret
in
arpl
adc
pop
mov
cmp
cmp
sbb
dec
out
lret
pop
jmp
jecxz
insl
xor
dec
lcall
or
xchg
mov
push
pop
sbb
dec
mov
mov
mov
lret
ljmp
and
sbb
imul
sahf
xor
call
aad
cmp
and
leave
or
push
dec
sub
adc
xchg
adc
inc
stos
repnz
push
test
push
insl
jnp
fwait
mov
repz
icebp
adc
mov
popf
iret
push
or
insl
into
or
mov
in
mov
pusha
sar
xchg
popf
jns
xchg
sub
and
jl
test
inc
rcrb
inc
adc
or
loope
movsl
sahf
rclb
out
icebp
and
or
jle
pop
or
xchg
rcll
enter
mov
cltd
imull
jb
or
push
mov
jns
js
pop
sbb
les
jle
sub
sub
das
mov
pop
shll
jbe
repz
cmpsb
bound
popa
lcall
mov
mov
std
and
jecxz
xchg
pop
and
es
adc
pop
test
xchg
push
mov
mov
gs
sahf
dec
jbe
cmp
arpl
rcll
fstpt
gs
enter
aad
mov
fdivl
mov
pushf
testl
push
test
test
in
insb
or
fldenv
xchg
fucomip
pop
fisttpll
scas
in
pop
mov
fisttpl
push
mov
cmpl
jbe
dec
add
pop
adc
push
pop
scas
vsqrtps
jg
xor
mov
inc
cli
mov
cltd
sbb
in
and
sarb
lahf
lock
xor
les
dec
push
fs
insb
mov
inc
dec
pop
mov
sub
aas
jp
cltd
inc
mov
mov
jle
in
dec
adc
adc
std
les
ja
push
jg
sbb
mov
adc
scas
leave
jp
fiaddl
idivl
push
divl
cli
adc
add
test
cli
cld
stc
cli
sbb
loop
ret
jmp
test
xchg
int
inc
cmp
mov
fbld
dec
cmpsb
movsl
mov
sahf
nop
imul
add
mov
das
das
xor
jp
ret
cli
lret
in
clc
cmc
dec
push
mov
ss
and
stos
cmpb
and
fs
jnp
leave
jp
loope
xor
mov
add
sub
test
push
iret
xor
lret
nop
jg
push
leave
jp
popa
pop
loopne
sub
xchg
dec
dec
hlt
cmpsl
test
jge
popl
jl
add
sbbb
or
jmp
push
xchg
push
pushl
pushf
pushl
ret
pushl
pusha
push
lea
pushf
xchg
mov
push
push
pushl
ret
dec
in
and
mov
mov
not
not
mov
mov
pushl
mov
push
pushl
ret
pushl
mov
jmp
jmp
push
pushf
push
mov
push
jmp
movzbw
mov
call
pusha
movb
pushf
xchg
pushf
movb
movw
pushl
ret
pushf
xchg
push
push
pushf
pushf
pushl
ret
mov
pusha
lea
call
mov
lea
je
bswap
pusha
mov
pushf
call
pushf
movb
mov
not
mov
pushl
mov
call
call
imul
dec
clc
inc
adc
insl
push
dec
stos
dec
cmp
add
ficoml
lret
add
fistpl
mull
add
mov
sub
cmp
push
pop
std
jae
aam
add
push
ljmp
cmpsl
mov
sbb
xor
rorb
vmwrite
sub
add
daa
pop
inc
mov
cmc
in
or
dec
push
or
mov
mov
jle
and
mov
adc
cltd
ss
jmp
clc
and
leave
leave
pusha
jecxz
xchg
mov
testl
sub
mov
in
mov
push
fdivr
and
jnp
pop
sbb
ljmp
in
push
mov
dec
pop
inc
cltd
mov
push
push
pop
sbb
ljmp
xchg
test
test
movsb
cltd
popa
test
adc
push
repz
or
or
call
fists
inc
pop
cmp
add
push
xor
es
adc
add
mov
negl
or
popa
pusha
dec
xor
push
insl
ss
cmp
add
shr
fcomps
bound
out
add
cmp
jae
inc
xor
stc
mov
gs
xchg
jne
cmpsl
jb
mov
jns
dec
call
jns
loope
cwtl
mov
xor
in
xor
and
movsb
lret
pop
cmp
rcll
xlat
adc
stos
ja
xchg
dec
or
xchg
cli
xor
icebp
fwait
leave
xor
push
cmp
fs
in
or
pusha
test
mov
in
jne
mov
nop
xchg
pop
dec
adc
xor
fs
ljmp
pushf
lds
jle
mov
add
leave
xor
mov
push
dec
sbb
xor
add
push
cmp
jo
and
cltd
cmc
mov
fistl
js
sbb
xchg
inc
mov
movb
xor
jge
ret
ds
cmp
fildl
inc
test
out
jns
shll
cmpsb
jge
shl
movsb
push
stos
inc
pop
clc
push
enter
enter
sbb
fs
sub
and
pushf
adc
mov
ret
clc
inc
xlat
cmp
xchg
add
fisubs
and
mov
mov
aas
mov
addb
jb
add
rorl
test
push
fldt
repnz
lahf
push
mov
repz
pop
test
pop
cmp
pop
mov
js
sub
lahf
xchg
pop
pop
mov
jns
xchg
pop
lods
mov
mov
pop
popf
or
push
in
ss
pop
imul
and
int3
pop
inc
rcll
imull
pop
dec
adc
sub
iret
mov
xchg
pop
sub
inc
or
in
sub
jl
js
repnz
fdivl
arpl
leave
mov
pop
stos
ss
fcmove
std
rcrb
movsb
xor
sub
jl
and
push
bndldx
inc
push
mov
inc
xor
and
pop
sub
jno
shlb
into
mov
pushl
imul
scas
addr16
mov
cmpxchg8b
iret
mov
add
xor
iret
nop
dec
and
lock
push
loopne
or
jo
xor
int
aad
sub
mov
push
xor
addr16
adc
inc
jne
or
mov
and
pop
jbe
jae
outsl
insb
push
pop
leave
shl
stos
movsb
insb
les
bound
jmp
xor
cld
sahf
fstpl
mov
loopne
iret
hlt
mov
test
pop
addb
jmp
pusha
pushf
nop
jmp
xchg
pushf
pushf
pushl
jmp
call
call
call
lea
pushf
xchg
pushf
pushl
pushl
ret
lea
call
pushf
mov
jmp
push
lea
jge
mov
pushf
lea
pusha
pushl
jmp
pushf
pushf
jmp
jmp
nop
lea
je
pusha
xchg
pusha
mov
call
call
mov
movw
jmp
pushf
call
call
jmp
pushf
xchg
not
mov
mov
mov
jmp
mov
pushf
mov
pushl
lea
pushl
xchg
pushf
push
pushl
ret
pushf
mov
mov
push
lea
jmp
pusha
xchg
call
mov
mov
lea
lea
js
mov
jmp
stc
hlt
imul
incl
aad
cltd
mov
add
add
fsub
add
push
call
mov
call
lea
call
lea
call
mov
pushf
movb
pushf
pushl
ret
pushf
nop
pusha
xchg
mov
movzbw
bswap
mov
mov
pushl
pusha
call
jmp
call
mov
mov
call
movl
push
pushf
lea
jmp
xchg
movb
mov
mov
pushl
ret
push
pusha
xchg
movb
mov
pushl
ret
mov
mov
call
xchg
not
bswap
call
lea
pusha
xchg
pushf
pushf
mov
mov
pushl
ret
call
call
seto
call
movb
jmp
pusha
nop
pushl
xchg
mov
pop
mov
pushl
pushf
pushf
lea
pushl
movb
pushf
mov
bswap
lea
jns
seta
pushf
mov
pusha
jmp
call
mov
mov
xchg
pusha
mov
bswap
jmp
mov
pusha
pusha
mov
call
jmp
call
mov
push
lea
movb
lea
jl
pushf
pushl
xchg
push
pushf
pusha
push
pushl
ret
movl
pushf
xchg
push
pushf
movb
push
pushl
ret
leave
pop
enter
popf
mov
cmpb
adc
push
std
leave
fcoms
nop
push
cmpsl
jmp
add
push
lods
int
xlat
cltd
scas
mov
icebp
jne
pusha
pop
push
stos
popa
pusha
out
js
cmp
movsb
mov
daa
adc
bound
lret
orb
jnp
xor
incl
insl
pop
pop
ss
std
rcrl
mov
outsb
mov
cmp
scas
aaa
dec
lods
ljmp
jp
sub
out
loope
push
sahf
xlat
aam
add
sbb
sub
inc
dec
inc
mov
test
sub
clc
ret
fldl
push
push
push
push
in
in
jmp
add
outsb
jae
mov
lods
jmp
mov
ja
rcll
stc
or
loope
dec
hlt
std
nop
cld
xor
push
js
stc
shll
push
push
mov
add
or
add
into
jo
stos
out
lock
xchg
insb
inc
dec
pusha
dec
hlt
bnd
popf
cmp
fidivrs
pusha
sub
dec
sub
fs
mov
js
mov
push
dec
or
lods
ret
sbb
pop
push
fmul
xchg
mov
imulb
dec
xchg
popa
cmp
and
mov
bound
lahf
jmp
mov
popa
out
adc
aaa
pop
jo
push
js
int
out
addl
ljmp
imul
pop
aam
popa
cmpsl
lret
or
mov
push
xlat
pop
pop
test
test
add
cmp
in
popa
lods
out
iret
jge
and
pushf
jnp
ja
aaa
int
adc
fidivl
push
dec
xchg
inc
ljmp
loope
dec
icebp
and
push
popa
or
bound
xchg
inc
testl
jle
std
xchg
pop
mov
xchg
inc
sub
mov
pop
adc
sahf
push
das
rcr
and
incl
dec
sbb
cmp
xchg
and
stc
lahf
jno
ficoml
out
ds
popa
and
popa
xchg
push
cld
shrl
fyl2x
movsl
jno
inc
sahf
out
mov
dec
xchg
ljmp
mov
lahf
insb
pop
xchg
fdivp
subl
adcl
mov
les
or
mov
in
xor
adc
sub
aaa
xor
lea
lcall
and
xor
jbe
movsb
pushf
ret
mov
sti
enter
sahf
aam
dec
hlt
andl
insl
push
push
in
xchg
lea
pop
xchg
adc
pusha
sub
xor
cmp
lods
scas
sbb
xchg
lds
jb
fs
stos
iret
fstl
jne
leave
in
cmp
test
xor
jne
sbb
cmpsb
adc
fistl
adc
in
call
mov
push
and
repz
movsb
jns
shrb
data16
mov
inc
xchg
int
rcrl
inc
lahf
ficoms
testl
pop
loop
enter
test
jb
inc
inc
sti
sub
jns
push
orb
test
sti
mov
push
cltd
jg
pop
or
test
shlb
loope
cwtl
fsts
faddl
loop
sti
dec
lret
mov
comiss
or
iretw
aaa
subb
inc
mov
mov
test
cmp
push
test
mov
xor
in
sbb
and
inc
fisubs
push
jl
aaa
jno
fnsave
rcrl
xor
mov
jecxz
xor
adc
sub
push
xor
add
mov
movsl
leave
stos
vhsubps
and
push
cwtl
lcall
jnp
addr16
rolb
mov
fdivrl
jge
fsubr
cmpsl
inc
mov
mov
movzbw
not
movzbl
mov
push
pushf
lea
pushf
jmp
pusha
jmp
nop
pushf
call
pusha
movb
jmp
xchg
pushf
pusha
pushl
ret
mov
push
pop
bswap
mov
jmp
pushl
mov
push
lea
mov
pushf
pushf
mov
push
lea
bswap
mov
mov
jmp
movb
jmp
pushf
jmp
mov
pushl
mov
lea
pushl
xchg
mov
pushl
ret
lea
call
call
pushf
mov
jmp
push
call
lea
lea
je
pusha
mov
pusha
mov
pushf
pushf
jmp
push
nop
push
call
pushf
pushl
mov
push
pushf
not
call
lea
pushf
pushf
xchg
pushf
pushl
ret
pushf
pusha
mov
pusha
pushf
lea
pushf
xchg
mov
pushf
pushl
ret
lea
push
movw
mov
push
movzbw
mov
jmp
pushf
nop
jmp
not
mov
call
mov
mov
pushl
ret
jmp
nop
pusha
push
pushf
xchg
mov
lea
mov
call
jmp
mov
push
not
lea
mov
pushf
pushl
ret
push
mov
call
mov
not
movsbl
pop
mov
jmp
xchg
movw
pushf
pushl
ret
jmp
pusha
lea
jmp
xchg
jmp
pushf
lea
pusha
jmp
pusha
pushf
pushf
call
lret
lods
mov
decl
mov
idiv
jmp
xchg
mov
xchg
not
not
movsbw
mov
pushf
pushf
pushf
mov
call
pusha
pusha
lea
jbe
lea
pusha
xchg
lea
mov
call
nop
pushf
pusha
jmp
test
repz
cmp
nop
call
pushl
lea
mov
mov
lea
jmp
mov
jmp
dec
shrb
aas
mov
stos
loopne
push
inc
mov
sti
pop
jmp
jle
xchg
add
fs
mov
pop
shlb
inc
ss
xchg
mov
xorl
aam
scas
adc
fs
arpl
inc
enter
testl
pop
mov
push
jecxz
sbb
jae
dec
pavgb
sub
pusha
insl
rcrb
outsb
int
jb
mov
and
mov
xchg
cmp
cmp
es
mov
or
mov
add
inc
jecxz
lcall
fwait
out
sbb
std
dec
pop
leave
xchg
fildl
or
es
mov
xchg
add
ret
push
xchg
out
aam
ror
sbb
mov
fisubl
test
sub
pop
adc
jle
jnp
sub
adc
out
push
mov
jge
cld
cmpsl
lcall
and
popf
cmc
mov
popa
jns
push
es
mov
lock
mov
test
fwait
mov
das
clc
fisttpl
and
xor
add
pop
flds
rcll
fmull
aad
pop
push
adc
xchg
mov
push
add
mov
bound
lea
rclb
or
inc
std
aas
mov
xchg
test
or
shlb
jbe
sub
in
add
imul
test
mov
sub
pop
mov
inc
add
mov
into
dec
sub
test
pop
in
cmp
mov
arpl
mov
lret
jb
hlt
push
lds
jmp
sahf
lcall
lcall
std
mov
or
lds
pop
lock
fisubl
jo
ja
std
nop
fiaddl
dec
sti
ss
pop
adc
es
movb
mov
add
add
push
mov
stc
jle
or
lret
dec
xchg
std
push
cld
ret
pop
mov
les
pop
ficompl
clc
push
mov
nop
test
sub
out
push
inc
mov
adc
cmp
xchg
sbb
loop
mov
imul
sub
jnp
fisttpll
js
jp
pushf
hlt
xchg
add
sahf
pop
test
fsubl
aaa
mov
test
pusha
or
fiadds
xor
inc
adc
loopne
cmpsb
pop
test
dec
cwtl
cmp
mov
push
push
scas
push
loope
dec
mov
push
pop
xchg
sti
mov
orl
push
cmp
dec
add
sub
jno
aam
push
push
cltd
js
xchg
cmp
fs
inc
adc
dec
cmc
inc
mov
inc
rolb
test
mov
pop
sub
nop
aas
fwait
rclb
push
cmp
testl
or
mov
pop
div
jno
mov
mov
popa
jge
mov
xchg
pop
mov
sbb
sub
je
mov
xor
adc
xchg
pop
jp
pop
mov
mov
dec
mov
std
addr16
cmp
jne
mov
xchg
hlt
jbe
push
mov
cmc
es
aam
ja
inc
mov
jmp
jp
in
bsr
repnz
push
test
xor
and
int3
inc
les
xchg
and
push
cmp
nop
cmp
cld
sbb
insb
xchg
cs
sti
dec
push
and
js
adc
insb
arpl
or
push
push
or
jnp
inc
das
xor
movsl
aaa
int3
or
xor
hlt
call
shr
xchg
inc
out
pop
xchg
fidivrl
add
call
not
pushf
lea
mov
movw
lea
jl
pusha
mov
pusha
mov
pushf
lea
movw
push
jmp
pusha
pushf
bswap
jmp
xchg
push
mov
pushl
ret
pusha
xchg
mov
pushf
pushf
pushl
ret
jmp
mov
pushf
call
lea
push
xchg
movb
pushl
pushf
pushl
ret
call
pushf
call
icebp
push
inc
fistl
mov
jmp
xchg
movw
movw
movw
pushl
ret
xchg
movb
mov
pushl
ret
mov
call
pushl
xchg
mov
mov
movb
mov
pushl
ret
pusha
not
bswap
setp
nop
setne
pop
mov
pushf
call
push
call
mov
lea
jo
pusha
mov
lea
push
xchg
pusha
pushf
mov
pushf
pushl
ret
pusha
mov
jmp
mov
mov
not
movsbw
pop
mov
mov
movw
mov
movb
pushl
ret
jmp
jmp
pushf
mov
lea
pushf
mov
jmp
call
not
bswap
movsbw
nop
mov
jmp
pushf
xchg
pusha
bswap
pop
mov
pushf
pushf
mov
mov
call
mov
xchg
mov
pushl
movl
mov
pushl
ret
lea
jne
push
pushl
mov
jmp
push
nop
call
xchg
pushf
pusha
mov
jmp
call
pusha
mov
mov
movw
lea
lea
jl
push
mov
mov
xchg
pusha
movb
pushl
ret
pushf
mov
movb
lea
pushf
xchg
pushf
pushf
pushl
ret
push
pusha
movb
mov
pushf
mov
pushl
mov
pushf
lea
jmp
jne
je
push
nop
movl
mov
push
xchg
not
lea
not
mov
pushf
lea
js
push
lea
pushf
mov
movb
push
mov
cwtl
movw
call
mov
call
call
movsbw
mov
jmp
jmp
mov
pushl
lea
pushf
xchg
movb
pushl
movb
pushl
ret
xchg
jmp
lea
mov
pushf
xchg
push
push
pushl
ret
jmp
pushf
movl
xchg
lea
jno
pushf
push
mov
movzbl
movsbw
movzbw
mov
push
pusha
pushf
mov
mov
call
mov
push
mov
push
lea
lea
jbe
pusha
pushf
pushf
xchg
pushf
push
pushl
ret
push
mov
lea
jns
pusha
lea
pusha
pushf
pushl
push
xchg
pushf
pushl
ret
xchg
movsbl
movsbw
pop
mov
jmp
pushf
mov
call
pushf
setns
pushf
mov
pushf
pushf
mov
pushf
pushl
ret
pusha
xchg
movb
pushf
movw
pushf
pushl
ret
lea
js
push
push
mov
mov
call
jmp
mov
xchg
push
mov
mov
movb
pushl
ret
nop
pusha
jmp
push
pusha
xchg
pushf
xchg
mov
pusha
mov
pushl
mov
mov
lea
jge
lea
push
jmp
mov
push
jmp
mov
push
lea
pushl
pushl
jmp
jmp
movsbw
mov
pusha
pushf
mov
pushl
ret
jmp
push
pushf
mov
movl
mov
pushf
pushf
mov
mov
call
mov
mov
movw
pushl
pushf
lea
lea
jns
xchg
pushf
pushl
ret
testl
and
pushl
push
pushl
ret
pusha
movb
lea
jnp
mov
bswap
movzbw
push
mov
pushf
mov
call
mov
jmp
setae
nop
pusha
bswap
push
mov
jmp
nop
pop
pop
pushf
movw
jmp
call
movsbw
mov
pushf
pushl
mov
jmp
xchg
pushf
push
pushl
ret
push
jmp
xchg
mov
bswap
pushl
movsbw
mov
mov
movl
jmp
lea
jnp
pushf
pushf
xchg
pushf
pushf
pushl
ret
xchg
movl
movb
pushl
ret
push
loop
test
push
movb
xchg
pusha
pushl
ret
jmp
call
movl
pushf
lea
jmp
pusha
movzbl
bswap
movsbl
lea
call
mov
call
mov
jmp
movzbw
pushf
mov
pushf
call
call
pushl
mov
mov
xchg
mov
pushl
ret
nop
pushf
jmp
pushf
xchg
push
push
pushl
ret
mov
pushf
pushf
lea
jmp
pushf
movsbw
lea
jmp
call
mov
push
mov
mov
mov
jmp
xchg
movl
push
call
pushf
call
mov
call
xchg
pushl
movb
pushl
ret
xchg
seto
pop
pusha
movsbw
mov
push
lea
movw
jmp
xchg
pushf
pushl
ret
xchg
movw
movw
movb
movb
pushl
ret
jmp
jmp
pushf
mov
mov
push
lea
pushf
pushf
push
call
mov
pusha
mov
jmp
movw
lea
push
push
movb
jmp
lea
nop
mov
bswap
pop
pusha
movw
jmp
push
pushf
nop
movsbw
call
xchg
push
mov
pushf
pushl
ret
call
movb
mov
movzbw
movzbw
lea
pushf
mov
call
jmp
mov
pusha
movb
lea
jmp
mov
lea
jmp
call
pushf
mov
xchg
movl
call
pushl
jmp
push
bswap
movsbw
nop
jmp
pop
inc
lods
insb
mov
inc
fcmovnu
popa
sarb
mov
and
and
repz
shrb
cmp
std
pop
xor
push
push
pop
movsb
gs
xor
and
mov
ss
xor
mov
cmpb
or
ss
pop
jp
cmp
ja
scas
sahf
ss
das
and
push
xlat
sub
movsl
sbb
xchg
in
inc
jp
push
imul
subb
pushl
ljmp
push
xchg
sbb
aas
xor
and
xchg
arpl
aad
adc
outsb
inc
cltd
mov
xchg
stc
jmp
imul
dec
adc
imul
lret
cltd
in
or
sub
jno
stos
add
push
mov
xchg
xchg
fs
sub
or
xchg
and
xor
xchg
cltd
pop
jae
fists
dec
xchg
pop
lods
add
dec
add
loopne
leave
int
imul
add
leave
decb
mov
push
or
insb
cmc
dec
es
xchg
and
loopne
lahf
dec
sbbb
add
pop
bound
mov
and
mov
fucom
sbb
lret
pop
les
ljmp
cmpsl
cmp
xacquire
dec
push
fldenv
ja
decb
add
inc
mov
mov
mov
data16
push
enter
jne
outsb
pop
cwtl
in
out
xlat
push
and
imulb
adc
loope
adc
push
jb
sbb
sarb
test
jle
outsl
aam
sbb
clc
inc
test
sub
xchg
jge
jo
or
dec
roll
sub
or
jg
push
cmpsb
test
inc
mov
imul
jns
cmpb
test
or
inc
xor
pop
mov
std
in
or
dec
lret
mov
stos
cmp
sub
in
jb
inc
fprem1
mov
push
imul
imul
jbe
xchg
push
inc
es
out
mov
enter
xchg
xchg
cmp
test
mov
sub
push
pop
cmpsl
sub
sarb
or
mov
pop
test
inc
sbb
fdivl
imul
bound
push
mov
and
mov
adcl
cmc
xchg
xchg
jle
rorb
jo
mov
sub
inc
inc
rcrb
mov
clc
mov
dec
divb
or
push
jnp
ljmp
jb
fisubrs
jnp
aam
or
jle
and
pop
sahf
and
jmp
rolb
and
mov
jecxz
iret
pop
xchg
mov
fs
imul
pop
mov
push
sarl
xorl
push
xor
pop
bound
cmp
loop
pop
fcmovbe
mov
cli
add
mov
test
les
insl
shrl
into
add
addb
cmpl
and
cmpsl
inc
and
xchg
pop
mov
push
icebp
repz
lods
jne
pop
sub
push
sbb
or
repnz
mov
in
mov
xchg
jb
mov
out
faddl
adc
leave
mov
jge
jo
mov
imulb
inc
add
dec
jb
popf
or
add
add
sti
pushf
or
lds
sti
popf
or
inc
loopne
loopne
out
dec
cmpl
in
pop
jmp
out
pop
mov
subl
pop
xchg
inc
adc
pop
dec
mov
inc
les
cmp
stos
into
and
jge
imul
roll
xchg
fadd
sub
mov
fisubrs
popa
pusha
inc
inc
adc
aas
cli
ror
in
add
movl
xor
cmp
mov
xchg
and
xor
pop
sahf
or
lock
fisubl
xlat
adc
push
pop
ljmp
xchg
pop
daa
xchg
adc
adc
push
popa
mov
cmp
push
sbb
cmp
mov
outsb
je
mov
pop
cmp
mov
data16
inc
and
adc
ret
jnp
xor
arpl
pop
test
sub
cmp
or
repz
aad
sbb
outsl
inc
or
add
adc
mov
xor
lcall
enter
loop
test
pop
mov
sbb
iret
xchg
sub
sub
inc
adc
shl
xchg
sub
std
add
int
adc
insl
and
lahf
icebp
and
testb
sbb
mov
and
movb
pushf
movb
pushf
pushl
ret
pusha
push
pusha
mov
lea
mov
jmp
mov
movw
pushf
push
call
call
movb
lea
push
pushl
pushf
mov
push
bswap
mov
pushl
mov
pushf
mov
call
push
lea
jns
pushf
lea
call
push
call
mov
push
lea
jmp
lea
pushf
mov
mov
push
pushl
ret
lea
lea
jns
pushf
pusha
push
mov
bswap
call
xchg
movl
pushl
push
mov
pushl
ret
pushf
pushf
mov
jmp
xorl
bt
xor
pushf
call
movl
pushf
mov
pushf
pushf
lea
jmp
lea
mov
xchg
push
pushf
push
pushl
ret
mov
jmp
lea
jmp
pushf
lea
mov
call
jmp
movsbw
bswap
nop
jmp
xchg
jmp
jmp
xchg
pusha
pushf
push
pushl
ret
call
stc
cmp
sub
decl
addr16
jmp
call
mov
pushf
call
call
mov
mov
mov
mov
call
pushf
lea
pushf
pusha
jmp
jmp
pusha
call
pusha
movw
pushf
popl
test
xor
call
lea
mov
jmp
jmp
xchg
movw
not
mov
movb
jmp
jmp
jmp
nop
lea
jle
setp
setp
pop
jmp
mov
pushf
pushl
mov
jmp
lea
jp
pusha
xchg
pusha
movb
push
pushl
ret
call
pop
mov
call
movl
push
lea
jmp
movw
lea
jae
push
xchg
push
mov
pushl
ret
movl
pushf
lea
jmp
lea
jmp
mov
movb
pushf
xchg
jmp
jmp
mov
pushf
lea
jmp
mov
call
push
push
mov
pusha
pusha
mov
jmp
mov
pusha
push
jmp
je
bswap
nop
not
pusha
push
mov
movsbw
jmp
jmp
lea
push
pusha
push
xchg
push
movb
push
mov
pushl
ret
push
call
call
xchg
mov
mov
xchg
pushf
mov
call
pushl
mov
jmp
lea
mov
xchg
pushf
pushl
ret
call
xchg
mov
mov
jmp
call
pushf
pusha
pushf
mov
push
jmp
call
mov
lea
mov
pushf
mov
pushf
call
xchg
mov
pushl
ret
movb
xchg
movw
mov
movb
movl
pushl
ret
lea
lea
nop
call
pushl
pusha
pushf
lea
pushf
pushl
mov
xchg
pushf
pushl
ret
push
mov
jmp
mov
mov
pushf
jmp
push
push
pushf
jmp
push
mov
xchg
pushf
movb
pushl
ret
jmp
setbe
mov
pushl
movb
pushl
ret
mov
pushl
mov
push
lea
push
jmp
not
push
movsbw
nop
jmp
mov
mov
call
xchg
push
jmp
xchg
mov
mov
mov
pushl
ret
jmp
jmp
movb
xchg
mov
pushl
ret
pop
lret
std
lahf
call
fnstcw
jbe
test
out
out
sahf
and
out
out
lea
dec
mov
rorb
inc
ljmp
jns
dec
jle
loopne
mov
adc
and
and
shrb
cwtl
inc
push
maxps
jmp
and
loopne
stos
mov
mov
fcom
in
rolb
call
loopne
repnz
inc
push
andl
lret
dec
dec
or
jo
mov
stc
add
push
pusha
dec
mov
ret
ficompl
cmp
jl
fstpl
push
fisubl
jno
lcall
push
dec
into
repnz
and
lds
icebp
ffree
dec
clc
mov
add
sub
std
aas
or
push
cmp
xchg
leave
sub
add
ss
push
in
mov
cmp
mov
mov
lea
std
mov
outsb
std
shll
jl
dec
adc
gs
lods
adc
out
mov
sub
mov
inc
mov
roll
jle
lret
mov
adcl
mov
jge
xor
jbe
jns
sbb
xor
stos
mov
mov
inc
xchg
lcall
js
inc
popl
push
xor
loope
xlat
xor
jmp
fwait
nop
mov
std
and
mov
test
pop
outsl
cmp
in
mov
movb
pop
imul
and
aad
mov
std
dec
test
in
jbe
addr16
fbld
outsb
cmpsl
mov
fisttpll
fwait
cltd
popa
aas
add
mov
lret
dec
icebp
test
je
imul
mov
and
inc
mov
gs
sbb
inc
lcall
or
dec
cmc
sarb
push
insl
and
ret
cs
lds
sub
dec
and
xor
and
cmpsl
gs
push
mov
adc
push
xor
jo
in
dec
mov
ja
lret
jg
out
iret
sbbb
jmp
rolb
fwait
sub
pop
mov
push
fldenv
and
mov
cli
push
mov
xor
arpl
cmp
and
enter
decl
jp
pop
sbb
xchg
inc
mov
dec
rcrl
adc
ds
aam
add
in
sbb
adc
lret
lock
mov
ds
pop
scas
sbb
dec
pop
sbb
ficompl
mov
jge
dec
sbb
mov
mov
mov
nop
ret
sub
rcl
mov
push
insl
addr16
adc
mov
add
fcomp
push
mov
lods
cmp
add
jb
test
mov
mov
sbb
incl
adc
dec
adc
leave
rorl
push
dec
mov
pop
mov
scas
jp
insl
xor
sbb
adc
mov
lock
jne
push
gs
pop
aam
jno
mov
push
test
mov
scas
dec
iret
int3
aam
push
mov
out
xor
mov
xchg
xchg
or
ds
pop
and
in
sub
pop
jge
mov
imul
mov
lods
mov
xor
lcall
jmp
cli
cmp
cmp
dec
cwtl
sti
xor
popf
fcmovnb
add
push
scas
xor
int
rcl
mov
sbb
jnp
out
lods
js
cli
push
hlt
xor
inc
clc
mov
out
push
sbb
mov
stos
mov
jecxz
stos
fstps
ret
mov
mov
rep
xchg
lahf
mov
int
testl
dec
in
add
push
pop
mov
or
clc
pop
sub
cmp
mov
loop
or
or
fstl
xchg
adc
jp
pop
leave
clc
mov
push
mov
gs
scas
pop
rcll
and
in
sbb
mov
mov
push
xor
cltd
fnsave
mov
and
or
or
movl
and
add
pop
push
movw
pushl
ret
mov
not
jmp
pushf
mov
pushf
pushf
lea
pushf
jmp
movzbl
nop
pushf
jmp
movw
nop
movl
call
jmp
jmp
xchg
pushf
movw
mov
pushl
ret
mov
lea
movzbw
lea
movzbw
mov
push
mov
pushf
movw
pushf
pushf
lea
push
movb
xchg
pushf
movb
pushl
ret
xchg
mov
movw
movb
mov
pushl
ret
dec
ret
bswap
pusha
nop
bswap
jmp
mov
pushf
movb
call
not
mov
call
mov
pushf
mov
mov
pushl
mov
call
add
ret
mov
pusha
mov
call
movb
call
mov
pushf
push
call
push
xchg
pushf
pushl
ret
push
push
nop
pushf
movzbw
mov
lea
je
pushf
xchg
pusha
pushf
jmp
pusha
pushl
pusha
xchg
pushf
pushf
pushl
ret
push
push
jmp
jmp
mov
movb
xchg
push
push
pushf
pushl
ret
mov
movb
nop
movb
jmp
mov
call
pop
pusha
push
pusha
pushl
ret
xor
cmc
jmp
pusha
lea
pusha
pushf
mov
xchg
push
mov
pushf
mov
pushl
ret
lea
movsbl
lea
nop
lea
pop
jmp
mov
seta
push
not
mov
pop
setbe
mov
pusha
pushf
lea
lea
not
mov
movsbw
call
sets
mov
movb
call
xchg
call
call
jb
loopne
test
inc
jae
pop
test
xor
call
testl
dec
add
mov
or
xor
decb
test
inc
inc
pushf
sub
inc
jae
jl
cmp
lahf
out
ja
js
or
iret
fwait
dec
or
aaa
pop
stos
movsb
mov
mov
leave
je
jne
faddl
push
cmpb
adc
mov
xchg
mov
arpl
and
lds
jne
insb
xchg
je
xchg
xchg
adc
cltd
adc
xor
rcll
push
mov
repz
loopne
icebp
rol
pusha
mov
repnz
lock
sub
sub
outsb
fsubrs
icebp
addr16
or
repz
incb
movsb
adc
xchg
pop
push
mov
inc
movsb
outsl
out
push
insl
sub
xor
mov
cs
sub
repz
dec
cmpsl
cmc
scas
jp
dec
xchg
arpl
xor
sub
mov
fdivrl
movsl
cmpsb
mov
xor
in
cld
or
je
mov
jecxz
and
or
pop
xchg
imul
mov
ficoml
push
repnz
xchg
pop
xor
sbb
fdivs
dec
out
mov
pop
sti
enter
xor
push
dec
test
inc
out
dec
jl
xchg
xor
mov
mov
jnp
fistpll
sbb
mov
pop
xchg
mov
into
add
loopne
xchg
jb
jcxz
dec
js
mov
aaa
bound
lds
jp
jle
addr16
fwait
sti
mov
bound
xchg
loopne
xchg
outsb
int3
and
push
int
es
or
dec
pusha
cmp
jns
hlt
cwtl
and
adc
cltd
push
imul
cltd
xor
fistl
and
adc
stos
arpl
leave
jno
out
sbb
dec
mov
sub
push
xor
inc
jno
ret
pop
or
int3
xor
aad
push
pop
pop
in
jo
lcall
ljmp
xor
jle
std
aad
cltd
rcrb
or
ljmp
adc
mov
lret
test
nop
xchg
sub
mov
jl
xor
stc
dec
sub
or
cvttps2pi
adc
mov
or
dec
aam
xchg
in
int
cmp
mov
out
fisttpl
mov
lds
shl
shl
idiv
push
loop
mov
and
pop
jo
ss
pop
push
call
test
aaa
lahf
insl
popa
sub
and
bound
lods
or
cmpb
add
cmpsl
out
mov
addr16
movsl
lret
addb
sbb
jp
xor
cld
xchg
adc
mov
xor
add
cltd
int3
pop
stos
push
xor
test
mov
and
and
insl
into
ss
add
dec
and
fimull
mov
xor
and
dec
icebp
mov
xorl
cli
xor
roll
fistpll
cmpsb
xor
sub
dec
cmp
js
pop
cmp
and
jp
nop
push
xchg
add
pop
mov
xor
pop
mov
jne
cmpsb
xchg
ret
out
pushf
adc
dec
adc
jne
es
adc
adc
insl
mov
add
mov
push
and
insb
xor
cs
mov
dec
lret
and
imul
pop
add
scas
mov
movsb
aam
dec
dec
xchg
push
push
sbb
jae
mov
jge
daa
pop
xor
jmp
mov
or
adc
jae
ds
or
outsl
or
dec
pushf
mov
test
dec
lahf
stos
out
rcrb
and
or
sbb
push
ret
mov
arpl
and
cmc
rcrl
fistps
data16
mov
test
inc
jg
cmp
int3
test
fs
jecxz
les
les
repz
add
xor
push
and
and
lcall
mov
jl
or
stc
push
pusha
fcmovnbe
ficoml
push
or
aas
filds
daa
je
or
jl
addb
or
repnz
cltd
jns
jle
icebp
inc
mov
mov
cmp
dec
mov
push
int3
mov
cmp
fisubl
or
jno
dec
inc
and
out
inc
sub
and
jns
jp
sub
mov
and
out
push
aam
mov
icebp
in
or
pop
js
pop
mov
mov
sub
cmp
sbb
jecxz
les
outsb
pop
sbb
sbb
popf
add
sub
lret
or
jmp
in
pop
stos
jecxz
jae
push
mov
fwait
mov
stos
mov
or
dec
xchg
aaa
das
notb
cmp
mov
lds
lcall
pop
jp
inc
mov
mov
shll
push
jp
es
push
xchg
fcmovne
cmp
ljmp
mov
lods
mov
fistl
repz
and
movsb
jl
and
add
frstor
fs
ficoml
push
ret
leave
out
cmp
shl
fisubrl
xchg
and
addr16
loop
data16
mov
xor
aaa
icebp
add
in
stos
lock
test
push
mov
decb
das
mov
sbb
mov
stos
cmp
test
fnstenv
lds
add
lret
pop
cmpsb
or
mov
adc
add
daa
call
or
data16
adcb
adc
and
xchg
and
lahf
les
mov
std
outsl
mov
push
xchg
inc
dec
mov
lds
push
popf
or
xor
mov
pop
cmp
loop
orb
push
mov
insb
ss
xchg
inc
test
adc
xchg
cmp
push
mov
inc
shl
add
or
xorl
adc
mov
jmp
rorb
addl
aaa
add
int
jne
cmc
daa
bound
mov
mov
dec
popf
dec
ja
loopne
sub
or
std
inc
xor
push
mov
and
int3
test
dec
cmp
stc
or
push
and
jmp
lahf
dec
int3
les
add
sub
arpl
mov
sub
mov
je
jae
les
pop
add
mov
xchg
pop
lret
das
bound
in
nop
scas
inc
js
cmp
sbb
mov
subl
sub
stc
inc
jmp
xchg
dec
daa
sub
sti
ljmp
or
or
pop
xor
out
mov
cmp
sbb
xchg
cmp
out
adc
mov
roll
mov
adc
ja
cs
outsb
inc
add
enter
rep
and
dec
add
mov
fs
mov
ds
outsl
or
shrl
rcr
mov
xchg
jmp
dec
jne
rcll
xlat
adc
shrl
movsl
push
lahf
pop
or
ret
mov
negl
push
dec
mov
loope
xchg
sbb
pop
stc
add
out
jb
sub
sub
jns
mov
mov
lods
stos
xchg
out
hlt
rcrb
xchg
rcrl
movsl
jns
aam
xor
ja
cmpsl
mov
or
xlat
negb
pop
out
data16
and
out
push
and
cmp
jno
jb
movsl
cmp
xorl
push
rcl
movsl
cmp
outsb
jae
sbb
pushl
add
xchg
js
xor
dec
icebp
scas
fisttps
sbb
mov
aaa
xchg
movsb
call
mov
xor
fistpll
mov
std
roll
cs
or
loop
out
out
or
pop
cmp
add
test
in
jnp
imul
sarl
lods
push
xchg
mov
ja
js
add
cmp
jge
sbb
xchg
pop
pusha
testb
push
mov
cmp
fimull
mov
pusha
insb
dec
adc
pop
test
sarl
inc
fldt
jg
add
sbbb
cli
xchg
lea
idivb
lret
push
xlat
xor
out
dec
sub
push
movsl
or
add
mov
aaa
mov
cld
je
sbb
jmp
push
and
mov
push
sub
ss
sbb
daa
cmc
jg
clc
into
inc
sbb
adc
jg
xchg
jge
gs
outsb
repnz
cli
sti
repz
jnp
xchg
adc
aaa
lock
lods
daa
iret
aad
clc
cltd
push
jo
lea
dec
push
fsubrp
lock
js
adc
and
out
inc
jl
in
outsb
cmp
daa
push
dec
loopne
imul
sub
push
sbb
in
lret
xchg
sbb
ret
adc
daa
or
push
pop
pop
dec
and
inc
aam
or
test
sub
and
int
push
jmp
sti
sbb
cmp
jmp
add
and
fnsave
sbb
int3
in
outsb
push
fdivrs
jb
pop
mov
push
mov
lea
pushf
xchg
movb
pushl
ret
mov
movzbw
pop
lea
not
mov
pushl
pushl
movsbl
call
call
movb
pushf
call
mov
lea
push
pushl
ret
call
mov
pushl
pushf
push
push
lea
jmp
push
mov
jmp
jmp
jmp
pushf
xchg
lea
jo
pushf
pushl
pushl
mov
bswap
setno
movsbw
movw
mov
pushl
jmp
pushl
lea
jmp
jmp
xchg
jmp
pushf
push
mov
pusha
mov
lea
movb
pushl
jmp
lahf
movzbw
mov
pushf
jmp
jmp
xchg
pushf
pushl
ret
jmp
lea
jg
push
bswap
call
xchg
bswap
not
bswap
mov
pushf
mov
pushf
call
jmp
push
jmp
lea
nop
movzbw
mov
pusha
pushf
xchg
jmp
xchg
pusha
mov
movl
mov
pusha
movl
lea
pushf
movb
mov
call
push
lea
lea
jl
pushf
mov
pushl
mov
movl
mov
mov
jmp
push
mov
call
movb
pushf
xchg
pusha
jmp
mov
movw
movb
xchg
movb
mov
mov
pushl
ret
nop
pusha
xchg
not
cwtl
movzbw
push
mov
lea
jge
push
mov
pushf
lea
pushf
mov
movzbw
mov
call
movzbw
pop
mov
movl
call
pusha
pusha
mov
jmp
leave
je
insl
push
mov
mov
movb
mov
push
mov
push
lea
pushl
call
call
movb
pushf
mov
jmp
pushf
movl
jmp
call
mov
pusha
lea
push
jmp
push
lea
call
movl
xchg
movb
pushl
ret
mov
jmp
lea
pushf
call
jmp
pushf
pushl
lea
push
movb
xchg
pushf
pushl
ret
mov
mov
mov
mov
mov
jmp
push
pushf
call
push
jmp
mov
push
call
pushf
xchg
push
push
pushf
pushf
pushl
ret
call
call
pushf
pushf
call
pusha
movb
xchg
bswap
push
mov
call
call
mov
push
call
pop
lea
call
jmp
lea
push
pushf
mov
setle
lea
call
pushl
mov
mov
mov
call
mov
push
mov
pushf
pushl
lea
push
push
mov
xchg
pusha
pushf
mov
pushf
pushl
ret
cwtl
call
bswap
not
jmp
sete
sets
pop
pushf
xchg
jmp
popf
test
jno
lods
add
call
xchg
movw
pushf
pushl
ret
mov
call
pusha
lea
jmp
pusha
movb
call
mov
pop
mov
call
pushl
mov
jmp
pop
nop
mov
jmp
jmp
jmp
mov
mov
call
nop
sub
dec
pop
es
mov
add
into
lods
pusha
adc
pusha
rol
cmp
pop
sub
ljmp
ljmp
movsl
jae
mov
mov
pusha
dec
mov
sbb
jae
daa
pushf
sbb
cmp
add
push
push
mov
add
iret
outsl
xchg
sbb
lret
cmpsl
mov
fistpl
rolb
inc
mov
jb,pn
xchg
scas
std
das
adc
les
repnz
test
arpl
mov
add
lea
mov
mov
pop
push
mov
xchg
xchg
cmc
int
in
hlt
daa
pop
ror
mov
and
int3
stc
stc
rcrl
push
imul
jae
xor
cmc
dec
add
dec
add
mov
stos
lret
sbb
lahf
dec
push
daa
mov
out
insb
adc
and
lret
lods
inc
inc
addps
inc
jl
fistps
test
ljmp
adc
lds
shrb
pop
xchg
fbld
mov
int
xchg
lds
cltd
mov
mov
dec
adcl
ret
and
jmp
pop
and
cli
and
or
jnp
arpl
jmp
js
fucomip
adc
test
mov
xor
xchg
iret
cltd
mov
jo
into
xor
cli
sub
mov
cmp
scas
into
jle
std
push
add
out
repnz
mov
repz
pushf
movsb
pushf
add
roll
bnd
adc
sub
rorb
inc
aaa
jle
mov
lds
dec
out
das
shl
fs
int
sub
cmpsb
pop
pop
push
int
imull
out
xchg
pop
aam
xchg
int
adc
popf
cmp
sarb
pop
push
mov
lea
fstps
cltd
push
mov
mov
stc
lods
insb
ljmp
add
xor
xor
cmpb
pop
mov
jecxz
inc
pop
and
cwtl
rcrb
dec
add
mov
faddl
push
sbb
negl
add
nop
sti
mov
add
jge
sbb
dec
jo
lcall
xchg
fnsave
fcoml
lret
mov
jl
movsl
push
cmp
sbb
push
dec
inc
pop
sub
xor
or
dec
inc
cmc
je
shlb
mov
hlt
int3
xlat
or
repz
or
or
ss
sahf
xor
or
fisttps
mov
adc
or
sub
scas
cmpsl
inc
mov
push
cmp
sbb
xchg
cmp
lret
add
lock
sti
into
or
jg
out
ret
into
inc
sar
aas
filds
push
pop
jmp
inc
push
add
xor
xor
frstor
imul
orb
add
sahf
xchg
inc
mov
fwait
sbb
into
xor
imul
and
das
pop
test
dec
ret
out
jae
cmc
sub
pop
cmpsb
cwtl
lds
mov
nop
inc
adc
insb
push
out
cmp
imul
push
pop
mov
in
sub
enter
test
jge
outsb
andl
push
cmpsb
mov
push
lahf
fldenv
data16
sbbb
ja
jmp
or
pushf
call
outsb
mov
sub
imul
hlt
cmp
mov
jmp
jne
add
ja
push
insl
mov
aas
pop
and
mov
and
mov
sbbb
add
in
push
jae
fs
dec
dec
mov
inc
mov
call
ret
inc
aas
xchg
xchg
stc
lcall
cld
inc
or
fidivs
jg
into
and
pop
scas
cmpsl
cmpsb
je
js
xchg
sti
adc
out
dec
xchg
sub
outsl
rclb
xchg
in
int3
les
orb
push
insl
or
cmpsb
mov
pop
movsl
psubusb
aas
inc
out
jne
pop
xchg
xlat
mov
dec
push
sbb
cmpsl
addr16
mov
cmp
jns
popf
gs
jno
sbb
cmc
ret
mov
mov
sub
adc
enter
lock
xchg
or
add
fwait
adc
in
add
stos
mov
mov
add
lret
and
pushl
pushf
pushl
pushf
mov
mov
jmp
jmp
lea
jno
mov
jmp
movb
mov
mov
push
call
mov
bswap
not
mov
mov
mov
jmp
movzbw
mov
pushl
jmp
call
mov
call
push
mov
xchg
pushf
setbe
not
mov
jmp
push
mov
jmp
push
pusha
mov
pusha
lea
push
jmp
pusha
mov
pusha
push
pushl
lea
mov
xchg
mov
pushl
ret
in
xor
or
jns
dec
jb
push
pushf
jmp
add
fs
xor
roll
fidivl
and
sbb
int
inc
divl
sub
ret
std
lret
sub
out
inc
sar
stc
dec
pop
stos
xchg
je
stos
push
xor
popa
mov
outsb
test
mov
push
mov
imul
push
xlat
pop
jge
xchg
jl
rclb
shlb
mov
xchg
push
fisubrs
daa
scas
adc
ja
cmpsl
xchg
aaa
fbstp
cld
insl
cmp
inc
dec
dec
lret
sbb
cmp
xor
mov
mov
stos
dec
cmc
ja
gs
in
data16
into
rcrb
pop
fbld
inc
and
and
push
xchg
xchg
mov
mov
jno
mov
xchg
outsl
mov
decb
xchg
loopne
push
ror
movsb
lock
sahf
pop
mov
mov
inc
jo
addr16
pop
in
xchg
ljmp
inc
jmp
jp
testl
idivl
pop
fcompl
popf
int
out
repnz
adc
and
leave
push
mov
push
lock
in
mov
fwait
movsl
pop
push
pop
lods
fucomi
inc
adc
daa
lret
shl
add
mov
push
xchg
mov
and
mov
repnz
inc
leave
adc
dec
repz
sub
cs
xchg
in
xor
out
sbb
inc
rclb
dec
lret
jnp,pn
shl
xchg
arpl
lcall
add
mov
aaa
dec
imul
divb
jb
jge
test
jge
dec
sti
enter
movsl
push
cmpl
stos
jno
lods
dec
pop
stos
and
fmuls
inc
jmp
add
insl
int
xor
pushf
add
in
inc
adc
push
dec
shlb
mov
xchg
gs
xchg
dec
xor
or
out
cmpsb
stos
repnz
data16
mov
xchg
sbb
add
add
fcomps
jecxz
push
flds
shr
push
nop
shrb
pop
jne
ja
jbe
das
stos
std
dec
mov
movsl
jp
mov
orl
jbe
test
pmovmskb
xchg
dec
sbb
ror
lret
hlt
fstp
sub
and
daa
imul
popa
xor
and
lods
inc
paddq
and
sub
xchg
iret
xchg
lcall
sub
mov
mov
lods
gs
int3
lock
addl
fisubs
ds
xchg
mov
movb
mov
pushl
ret
mov
mov
mov
call
call
jmp
jmp
xchg
pushl
pushl
ret
call
pusha
mov
movb
seto
mov
mov
pushf
jmp
lea
jmp
nop
jmp
movsbl
push
mov
jmp
mov
pushf
mov
pushf
lea
lea
jg
pushf
pusha
movw
mov
lea
movzbl
pushf
pushf
mov
pushf
mov
pushl
mov
jmp
movb
lea
push
pushl
pushf
pusha
xchg
push
pushl
ret
movzbw
nop
movzbw
movsbl
pusha
setg
mov
call
jmp
push
jmp
pop
xchg
adc
add
mov
call
out
and
dec
jae
pop
addb
imul
std
sub
test
add
loop
insl
xchg
dec
xchg
pop
inc
leave
bound
repnz
inc
in
je
adc
rcll
mov
shrl
in
jae
sbb
fsub
add
adc
push
push
cmpsb
inc
mov
adc
xchg
inc
adc
jae
out
ja
sahf
sbb
xchg
mov
scas
enter
fdivrp
movsb
push
jmp
dec
add
pop
jbe
inc
xchg
bound
rorb
stc
or
cmp
aam
sbb
jmp
and
repz
push
in
xchg
into
js
push
pop
lods
dec
dec
arpl
iret
xchg
xlat
xor
inc
stos
jno
push
mov
sbb
adc
add
inc
outsl
mov
dec
cmp
push
mov
fucomi
sub
mov
cmp
mov
add
mov
mov
mov
leave
adc
jo
push
xor
insb
es
xchg
into
jnp
loop
outsl
call
pop
xchg
inc
dec
pop
lret
jp
insb
lods
mov
push
push
adc
cwtl
dec
arpl
cld
pop
mov
xchg
testl
inc
out
inc
xchg
divb
aad
sub
loope
dec
jl
jl
js
pop
std
inc
mov
mov
push
popa
push
dec
xlat
lods
enter
clc
out
inc
cmpsl
repz
nop
fs
sarb
in
pusha
mov
dec
inc
int3
int
mov
incb
ljmp
int3
cmp
aaa
adc
xchg
dec
insb
in
lods
inc
push
outsb
inc
dec
xor
int3
sbb
xchg
xchg
cltd
out
xchg
xor
ljmp
dec
cmpsb
sbb
lret
js
test
outsl
popf
out
scas
idivl
cwtl
out
ja
out
dec
pop
xor
lock
lret
dec
insl
mov
pop
repz
cld
adc
mov
and
xor
jmp
dec
xchg
iret
test
fdivl
ret
xor
cmp
jnp
dec
ljmp
leave
lret
sti
fwait
pop
popa
lods
xor
and
jmp
out
aam
add
les
ds
mov
mov
hlt
hlt
xchg
push
pop
mov
mov
and
fsubs
outsl
stos
cmp
inc
mov
xor
ja
inc
dec
xchg
cmp
clc
push
add
pusha
cmp
rcll
fisttps
sbb
xor
lcall
out
enter
arpl
mov
andb
mov
andb
pop
dec
loope
sub
pop
sbb
daa
adcb
ss
mov
mov
xchg
sub
push
adc
lods
mov
inc
jo
loope
idivl
aam
icebp
aas
shrb
sub
mov
leave
xchg
sbb
sarb
add
xor
xchg
xchg
xchg
in
repz
push
inc
call
cmp
cld
sbb
addr16
add
pop
lcall
cmp
mov
xchg
adc
jb
add
pop
gs
inc
arpl
xor
test
push
pop
or
and
push
jl
mov
sbb
dec
xchg
repnz
xor
stos
and
add
movsb
call
into
cld
fistpl
rcr
sub
mov
or
daa
loopne
loop
in
in
rorb
cmc
jg
movsb
mov
test
flds
mov
cmp
sub
lock
addl
inc
jp
in
push
and
cmp
cmpsb
aas
gs
insb
decl
scas
mov
add
rolb
stos
clc
sub
mov
inc
or
fwait
shlb
stos
stos
mov
sbb
add
cmc
push
dec
into
push
std
push
mov
push
push
and
popl
dec
xchg
push
fbstp
add
xor
lea
jg
movsbw
pop
pusha
pusha
movl
pushl
ret
push
call
call
pushf
xchg
movw
mov
movb
mov
pushl
ret
lea
movb
call
xchg
movw
pushf
pushl
ret
call
mov
movzbw
lea
mov
jmp
movw
jmp
call
in
xchg
mov
sti
rcr
and
fisttpl
lret
push
mov
jle
adc
add
movsl
inc
and
pop
mov
add
mov
std
add
xchg
enter
aad
cmp
jno
add
and
jp
and
les
in
mov
rclb
mov
inc
js
and
xor
inc
les
push
mov
sub
xchg
aam
and
xor
push
insb
test
mov
mov
push
and
mov
add
in
movsl
xor
imul
inc
fistpll
cmp
stos
pop
rclb
and
out
out
sti
lea
mov
xchg
dec
lods
push
in
clc
mov
jno
fnstsw
bound
mov
imul
lcall
pop
mov
fwait
data16
cmp
jecxz
insl
movsb
jo
int3
lds
rorb
and
xchg
adc
out
rcrl
insl
orb
adc
xor
xor
pop
sub
iret
add
adc
cmp
addr16
shll
sbb
pop
mov
repnz
in
inc
ja
stc
mov
lret
sar
dec
push
lret
ret
cmp
aas
mov
or
roll
inc
repz
insb
push
and
movsl
and
sbb
xchg
imulb
cmp
dec
pop
notl
pop
clc
loop
xor
outsb
lret
insl
pop
push
sub
repnz
push
fmuls
flds
mov
mov
mov
xchg
cmp
test
insl
pop
sub
sarb
call
push
jnp
ss
inc
es
scas
outsb
out
and
adc
lcall
and
sub
nop
pop
xor
push
call
sti
stos
int
dec
mov
rcr
xchg
push
imul
jo
xor
push
mov
mov
nop
pop
popf
std
push
push
mov
je
inc
movsbw
pushf
call
push
push
jmp
pusha
pusha
push
jmp
push
push
mov
movzbw
mov
jmp
jmp
call
jmp
call
mov
pop
mov
jmp
lea
movw
mov
xchg
movw
movw
pushf
pushl
ret
pusha
nop
push
pusha
jmp
xchg
push
pushl
pushl
ret
jmp
pusha
mov
push
lea
call
pushf
pushf
mov
push
pushf
pushf
mov
pushf
call
pushf
pusha
xchg
mov
pusha
pushl
pushl
ret
pushf
mov
mov
mov
pop
call
push
mov
pushf
mov
mov
mov
lea
pushf
pushf
xchg
pushf
pushf
pushf
pushl
ret
lea
call
pushf
mov
mov
call
jmp
lea
pushf
xchg
push
mov
pushl
ret
pushf
pusha
lea
pushf
mov
movsbl
lea
cwtl
movsbw
mov
pushl
mov
pushf
call
push
jmp
lea
pop
mov
mov
mov
pushf
not
mov
movw
movsbw
lea
jmp
call
call
pushf
mov
jmp
mov
pushf
call
call
push
nop
lea
jle
pusha
pusha
push
xchg
setne
pushf
sete
lea
mov
jmp
push
movw
nop
mov
jmp
pushf
not
mov
pusha
xchg
mov
jmp
jmp
mov
pusha
call
pusha
mov
mov
call
push
pusha
call
jmp
pusha
jmp
jmp
lea
call
movw
mov
movw
push
jmp
xchg
mov
movb
movw
pushl
ret
xchg
push
movb
pusha
pushl
ret
call
mov
pushf
call
movl
push
mov
mov
jmp
pushf
mov
mov
pushf
jmp
pusha
jmp
lea
jb
push
push
lea
pushf
pushl
call
not
pusha
not
not
lea
pushf
not
mov
movzbw
setp
mov
movl
pushl
ret
mov
mov
mov
mov
jmp
lea
call
xchg
pushf
call
push
call
mov
movw
mov
pusha
lea
jmp
pushf
xchg
call
jmp
jmp
lea
movzbw
pop
push
pop
mov
jmp
jmp
mov
call
xchg
pushl
pushf
pushf
pushl
ret
xchg
pop
lea
not
bswap
mov
mov
pushf
lea
push
pusha
pushf
push
mov
bswap
pop
call
push
xchg
movb
pushf
pushf
pushl
ret
call
call
and
std
ljmp
movb
fisttpl
inc
loope
or
xchg
dec
push
and
jbe
jb
xlat
fsubs
push
dec
mul
xor
jp
mov
push
jmp
scas
jae
xchg
and
mov
mov
test
push
jp
shr
and
ficoml
das
jo
clc
dec
out
lret
ss
lcall
jae
insb
insl
adc
loop
ljmp
dec
mov
ja
fdivr
addr16
push
sbb
mov
add
add
daa
or
and
mov
cmc
or
push
and
out
mov
cmp
mov
cmp
fisubs
dec
mov
std
sbb
nop
pop
pop
dec
xchg
int
push
cmc
or
fcoms
aaa
mov
xorb
sub
mov
in
adc
lock
fcmove
jmp
fistpl
xor
push
std
pop
loopne
jae
cwtl
pop
in
lods
out
bound
sbb
lods
jmp
sub
ja
cmp
xchg
rcrb
or
xchg
mov
fidivs
ds
movsb
push
lods
scas
cmc
or
push
push
pop
lcall
jae
sarl
js
adc
adc
fsubrs
in
scas
mov
loope
lods
xchg
pop
and
imul
in
fisubs
jns
dec
arpl
xor
jle
cmc
sub
lahf
es
in
lds
fcmovb
inc
xchg
addr16
jecxz
inc
cmp
sub
lret
dec
sbb
cmp
xchg
in
stc
inc
inc
les
or
fidivs
xchg
in
cmp
out
sbb
xchg
sbb
test
leave
lock
inc
orb
cmp
jge
daa
out
movsb
test
mov
std
push
inc
loope
push
arpl
hlt
or
pop
xlat
lret
and
mov
jmp
push
jae
outsb
xchg
fwait
pop
test
test
fidivrl
xor
sub
jb
cmpsb
inc
xchg
testl
lods
dec
loopne
das
jnp
imul
mov
and
mov
cwtl
shlb
cmp
cmp
enter
add
sub
jle
pop
dec
jmp
push
push
fwait
mov
xchg
int3
cld
nop
in
sbb
fucom
and
lret
add
fstpt
gs
sbb
mov
mov
pop
push
imul
out
idiv
cmp
out
in
mov
jbe
stos
pop
push
pop
mov
jp
sub
insb
xor
cmp
xor
mov
aad
xchg
pop
test
sarl
pop
ret
std
push
hlt
add
mov
sbb
cmpl
pop
insb
sbb
xor
mov
dec
lock
scas
lcall
addps
mov
fstpl
insb
inc
cmpsb
push
xor
scas
sub
lea
das
push
mov
cli
mov
xchg
dec
bound
adc
xchg
inc
enter
hlt
aaa
subl
cmp
bound
pushf
cld
xchg
mov
bound
push
xlat
adc
add
mov
scas
mov
xor
inc
fwait
arpl
icebp
xchg
hlt
sbbl
test
adc
out
aas
jb
xor
test
pushf
xor
jmp
jge
cmpsb
subl
shrb
push
mov
inc
cmp
ljmp
push
mov
in
es
outsb
les
xchg
cmpsl
xchg
das
in
jno
fsub
and
xchg
push
aaa
notl
and
scas
pop
jg
bound
stos
test
xchg
lods
movsl
mov
or
mov
rclb
cmp
cmp
dec
wrmsr
add
call
imul
shll
decl
add
fwait
mov
push
xchg
pushf
pushf
push
pushl
ret
pusha
nop
call
movb
xchg
call
mov
push
push
lea
call
mov
cwtl
not
nop
setp
lea
setne
mov
pop
pushf
call
jmp
mov
lea
je
pusha
lea
movl
pusha
xchg
pushf
pushl
ret
movb
pusha
jmp
pushl
lea
js
lea
jmp
pushl
mov
pusha
pushf
pushf
lea
jnp
lea
jmp
pushf
jmp
lea
jmp
mov
mov
mov
mov
jmp
call
pusha
xchg
pushl
movb
jmp
jmp
pusha
pusha
pushf
lea
mov
xchg
mov
pushl
ret
push
push
pusha
mov
call
lea
mov
pushf
mov
bswap
setnp
mov
pushf
call
movb
mov
jmp
cwtl
mov
push
pop
mov
mov
movzbw
not
not
lea
pushf
not
jmp
pusha
mov
jmp
mov
not
pushl
movsbw
mov
jmp
push
nop
mov
pushf
mov
lea
jp
pushf
mov
pushf
pushf
pushf
pushl
lea
call
pusha
nop
pushf
xchg
jmp
pushf
push
mov
movsbw
jmp
mov
nop
call
mov
movb
xchg
pushf
pushf
pushl
xchg
bswap
mov
jmp
movl
pusha
pusha
pushl
pushf
lea
jmp
pushl
mov
lea
jnp
lea
push
pushf
call
cli
jo
scas
fdivr
iret
sbb
pop
lods
jae
sub
aaa
jp
xchg
jb
leave
scas
lret
mov
add
dec
jo
insl
popf
mov
mov
out
xchg
xor
subl
int
pop
aaa
pop
arpl
mov
daa
aaa
mov
sbb
enter
inc
fadd
std
dec
push
pop
mov
ret
adc
xchg
lods
dec
mov
call
iret
nop
cmp
push
dec
jle
data16
cwtl
adc
fbstp
pop
cmpsb
loopne
adc
xor
jg
sbb
sub
sbb
lods
jns
dec
aaa
cmp
shlb
cmc
leave
xchg
out
dec
and
add
dec
push
mov
jmp
xchg
pop
sbb
mov
or
shll
push
and
mov
xchg
pop
sub
add
inc
mov
dec
mov
std
roll
inc
sbb
call
test
and
inc
inc
jecxz
mov
add
fdivr
shlb
mov
sub
outsl
dec
int3
mov
pusha
mov
fisubl
rcrl
push
mov
push
imul
imul
pop
add
stos
ficompl
nop
add
mov
mov
shlb
sbb
lock
push
xchg
push
dec
mov
push
and
mov
insb
mov
pop
fsubl
sbb
rclb
popf
jmp
adcl
sar
and
aad
cmp
mov
adc
adc
ljmp
out
pop
dec
cmpsb
outsb
sub
jmp
mov
inc
test
pop
mov
xchg
and
pop
lods
mov
cmpsl
aad
mov
pop
xor
ljmp
xor
out
cli
aaa
call
push
scas
jmp
dec
mov
das
es
fidivrs
movsl
dec
sbb
insl
push
aad
inc
jecxz
jle
xor
out
scas
cld
cmp
xlat
movswl
lods
sar
in
xchg
xor
int3
fiaddl
lods
fdivr
and
mov
int3
jp
std
inc
leave
jb
movsb
fisttps
xor
shl
and
inc
dec
jo
imull
dec
je
lock
push
xchg
repnz
add
not
mov
cmpsl
add
sbb
cmc
mov
cwtl
push
or
or
xor
add
iret
nop
push
decl
mov
push
sbb
enter
mov
jns
lahf
cld
call
in
sbb
dec
jns
jmp
imul
iret
ljmp
or
cmp
outsl
jmp
push
inc
cmc
mov
ficomps
repnz
inc
je
push
mov
push
pop
add
cmp
sub
jecxz
inc
fcomi
insb
repz
and
pusha
mov
inc
adc
cmpsb
pop
dec
dec
pushf
shrb
incb
jg
sbb
sbb
orb
stos
mov
clc
out
repnz
push
ret
push
outsb
adc
jnp
std
popf
mov
pop
stos
mov
and
or
aaa
sbbb
nop
cmp
cld
mov
xor
mov
add
xchg
xor
mov
xor
adc
jmp
adc
inc
popf
jnp
std
push
in
aaa
fsubl
js
cs
jne
out
iret
fistps
aaa
pop
adc
daa
lods
inc
cmc
pop
sub
es
icebp
addl
cs
jne
testl
mov
or
inc
push
push
stos
repnz
push
ss
repnz
jecxz
xor
cwtl
aad
inc
fnstcw
outsb
mov
fisubrs
sub
ss
jl
or
sbb
ret
push
pop
fdivrs
xlat
cmpsl
inc
popf
adc
push
rolb
cmpsb
mov
inc
mov
repnz
movsb
sub
stos
sbb
mov
inc
jle
push
push
sbb
xchg
sbb
jmp
lahf
xor
test
out
sbb
mov
pop
cwtl
sbb
popf
xor
repnz
loope
movsb
pop
lret
jmp
bound
and
sahf
pop
lock
in
lahf
push
xor
sub
xchg
mov
dec
mov
mov
add
sub
imul
xor
data16
mov
into
int3
and
adc
xor
or
push
out
lea
nop
icebp
sub
mov
or
ss
xchg
rclb
dec
jbe
ret
or
ja
cwtl
decb
pushf
pushf
jmp
jmp
xor
cmp
xor
jmp
pushf
mov
bswap
movzbw
pushf
movsbw
lea
not
mov
movsbw
pushf
mov
pushf
pushl
ret
pusha
pusha
pushf
mov
lea
pop
mov
call
push
pusha
push
mov
push
lea
call
pusha
mov
pushf
nop
pushf
pushl
xchg
call
pushf
lea
jmp
lea
pushf
pushf
call
jmp
pushl
nop
push
mov
push
pushf
pusha
jmp
pushf
mov
jmp
xchg
movb
pushf
pushl
pushl
ret
xchg
mov
mov
movb
pushl
ret
jmp
xchg
push
xchg
mov
bswap
lea
mov
jmp
mov
push
pushf
jmp
inc
cs
test
pop
jmp
add
inc
xor
int
pop
dec
imul
mov
and
and
jo
xor
jne
dec
sbb
xchg
and
imul
test
add
sti
les
lods
test
sub
mov
cli
cmpsb
addl
cmc
or
xor
push
dec
inc
psadbw
cli
call
mov
hlt
mov
mov
imul
enter
adc
jne
push
mov
jne
loop
xor
aad
lds
inc
imulb
and
push
imul
mov
daa
adc
je
jno
stos
or
in
mov
sbb
or
adc
fdivrs
aad
cmpsb
sub
testb
mov
pop
jmp
sahf
push
icebp
inc
int
sub
inc
dec
out
aad
mov
sbb
icebp
cmpsl
xor
out
outsl
or
push
sub
inc
mov
cld
scas
adc
add
lcall
push
out
lcall
add
mov
ss
sub
jmp
push
lret
add
ss
popf
jecxz
pop
sbb
dec
adc
sub
adc
fldenv
jg
cmp
sbb
add
and
ja
faddl
mov
in
adc
and
jecxz
call
aad
rolb
mov
mov
cwtl
mov
cmc
mov
loopne
mov
add
xor
lret
imul
cs
mov
xchg
ret
add
cmc
out
dec
sub
add
inc
repz
push
loopne
call
add
sbb
enter
ret
sbb
leave
orl
popf
mov
mov
lods
cltd
fstl
rcrl
movsb
cwtl
nop
fsts
pop
jb
cmp
rcrl
out
addr16
lahf
call
leave
jb
scas
mov
into
test
mov
mov
aam
ss
xor
xor
or
int
lods
fs
cld
mov
shrb
into
test
repz
sub
lods
jno
mov
sbb
jge
xor
xlat
das
testb
loop
xchg
pop
inc
mov
jbe
aad
fs
test
std
leave
lret
ret
aad
and
push
and
lds
push
jle
jp
pop
cli
clc
in
mov
pop
and
lods
mov
fldcw
daa
jo
clc
mov
in
fdivrp
cli
pushf
push
mov
test
mov
loopne
fbld
mov
fldl
ds
in
jg
ret
filds
jg
mov
jle
mov
incl
xor
inc
shll
xchg
out
cmp
xchg
sub
pop
popa
jno
xor
adc
and
sub
push
pushf
rcrl
cmp
inc
and
dec
mov
xchg
fdivl
sti
xchg
movsb
pushf
data16
jns
test
mov
out
or
pop
lret
sahf
ficoms
loopne
mov
cmc
mov
mov
jns
movsl
fiaddl
mov
and
sub
fs
stos
clc
adc
push
mov
repnz
stos
scas
pop
pop
push
mov
test
adcb
movsl
scas
out
insb
add
or
int3
mov
mov
dec
xor
lods
sub
pushf
mov
aas
call
push
inc
adc
popf
in
jg
rolb
test
push
insl
inc
or
xor
mov
lcall
sbb
les
lds
lds
int3
adc
ja
addr16
ret
pop
popa
adc
inc
push
add
cmp
push
xor
push
mov
inc
cmc
xchg
enter
les
shlb
sbb
int
jg
stos
movsb
or
dec
in
mov
and
aam
xor
inc
mov
inc
xlat
es
xchg
ss
jl
xorb
js
mov
jmp
rolb
test
ja
insl
aaa
pop
test
pop
and
xchg
or
cmc
push
cmp
das
pop
rorb
adc
into
adc
lock
pop
and
mov
scas
xchg
pushf
sbb
and
xchg
dec
loop
fwait
push
cli
jns
fisubl
sub
mov
push
in
in
mov
cmp
stc
in
dec
mov
xlat
aaa
lods
jbe
mov
xlat
in
push
push
and
repz
shr
in
ror
adc
pushf
push
xchg
inc
sbb
dec
fstps
or
adc
xor
loopne
adc
xchg
data16
mov
cmpsl
xchg
mov
shrb
sub
imul
mov
shrl
mov
inc
lret
cmp
jp
iret
ds
popa
add
push
push
pop
xlat
scas
lds
popf
mov
mov
jns
cmp
ljmp
inc
movsb
mov
mov
ljmp
stos
testb
pop
jnp
scas
std
add
nop
push
fnstsw
mov
lret
mov
jne
pop
mov
jno
popf
gs
push
push
mov
stos
fisubl
mov
pop
sub
push
push
into
ret
pop
mov
fsubrs
fnstenv
repz
fldt
or
xor
sti
push
je
and
pop
mov
pop
aam
cwtl
fimuls
test
std
fistpl
mov
sbb
imul
mov
lods
cld
mov
jbe
xor
lods
mov
lret
pop
aad
fsubs
xchg
push
aad
cmp
aad
jae
insl
aam
xor
fcoml
dec
out
out
lds
clc
mov
add
xchg
push
add
mov
and
and
loopne
mov
clc
aaa
lcall
xadd
sbb
idivl
pop
nop
sar
or
xor
not
add
mov
pop
sti
mov
sbb
push
dec
mov
lock
mov
push
cmp
xchg
or
xchg
and
xchg
xor
pop
inc
into
and
lahf
insl
sbb
cmp
xor
mov
mov
scas
xor
std
jbe
clc
popa
fisubl
add
xchg
and
mov
stos
jne
int3
lcall
pop
jle
popf
and
push
mov
and
mov
sbb
iret
icebp
cmp
stos
jae
inc
jae
sub
lar
add
sti
add
mov
add
mov
add
jp
mov
outsb
ja
mov
and
add
or
out
mov
mov
push
push
mov
dec
and
gs
int
and
cmc
adc
or
jmp
and
arpl
fisubrs
es
std
sti
test
imull
dec
inc
jmp
out
adc
iret
aam
push
xlat
lea
and
jl
andb
mov
mov
lds
jns
add
in
mov
push
and
and
add
or
out
jg
cli
push
lret
sub
jbe
inc
xchg
lods
divb
addr16
lea
inc
jmp
push
dec
pop
pusha
add
clc
in
enter
movsb
hlt
fdivl
mov
adc
and
lods
int3
fstl
sub
cltd
loopne
dec
ret
ss
inc
xchg
in
sbb
ljmp
and
mov
repz
lret
mov
push
out
or
adc
sub
inc
xchg
dec
dec
hlt
clc
test
push
mov
push
sub
gs
imul
je
dec
push
push
cltd
hlt
cwtl
mov
sub
mov
addl
orb
pop
add
out
sti
lcall
and
ret
xchg
pushf
mov
movzbw
mov
jmp
movsbw
xchg
not
jmp
call
xchg
mov
pushl
pushl
ret
pushf
jmp
pushf
xchg
pushl
pushl
ret
mov
mov
mov
mov
jmp
xchg
bswap
call
movsbw
not
pusha
mov
movb
jmp
pusha
mov
call
mov
call
push
bswap
mov
jmp
mov
pushf
mov
movw
jmp
mov
call
mov
call
call
jmp
pushf
pusha
pushf
call
mov
pushl
push
jmp
lea
jmp
pushf
lea
jmp
jmp
push
nop
lahf
not
pusha
lea
mov
push
xchg
lea
js
push
sets
jmp
pusha
bswap
pop
pusha
nop
seta
mov
pushf
pushl
xchg
pushf
movb
mov
call
push
push
lea
jmp
lea
push
pushf
xchg
pushl
mov
push
pushl
ret
jp
nop
setg
pop
pushf
call
jmp
call
call
lea
bswap
lea
nop
push
mov
mov
movb
pushl
pushl
xchg
push
jmp
push
pushf
popl
call
lea
pushf
xchg
pusha
pushl
ret
pushf
xchg
call
jmp
mov
pushf
lea
jmp
mov
push
lea
jmp
xor
cmc
pusha
xor
bt
pushl
popf
push
push
pushl
ret
call
bswap
mov
jmp
lea
lea
jae
pushf
mov
lea
pop
pushf
mov
pushf
mov
call
xchg
pushl
pushf
pushf
lahf
mov
jmp
jmp
pushl
lea
jmp
mov
call
lea
mov
movb
xchg
pushf
mov
pushl
ret
nop
pusha
pusha
xchg
call
xchg
jmp
movsbw
not
mov
movb
pushf
pushl
mov
pushf
lea
jne
lea
pushf
pushl
call
pushf
movb
lea
jmp
mov
jmp
mov
call
mov
nop
not
push
pop
pop
jmp
pushf
pusha
nop
jmp
pushf
push
movb
mov
movsbw
pop
pusha
not
mov
pusha
movw
mov
call
jmp
call
mov
not
pop
call
xchg
pushf
movzbw
pushl
not
mov
jmp
pushf
xchg
push
pushl
pushl
ret
lea
pushl
pushf
movb
mov
movzbw
call
push
xchg
pushf
mov
call
mov
mov
jmp
bswap
mov
pushf
call
mov
call
not
bswap
pushf
nop
mov
pushl
movzbw
mov
jmp
nop
push
pushf
call
pushf
xchg
push
pushf
pushl
ret
mov
pushl
bswap
xchg
sets
mov
call
push
nop
pushf
movb
mov
lea
push
mov
not
mov
call
mov
call
mov
push
call
call
xchg
jmp
push
call
and
outsb
loopne
js
fdivr
xlat
and
test
cld
pop
aaa
cmp
les
test
cmp
and
xchg
ljmp
mov
mov
loopne
dec
xchg
std
fstpt
mov
je
daa
fcomip
fimull
mov
stos
jg
sub
jmp
pop
add
sub
daa
pushw
pushf
pushf
fdivs
aaa
mov
jle
mulb
push
mov
cmp
inc
sbb
xchg
divb
mov
jb
out
mov
stos
out
push
or
pop
repnz
inc
mov
mov
addb
inc
sbb
inc
mov
sub
fadds
mov
mov
cmp
inc
mov
inc
cwtl
rcrb
fldcw
push
sbb
cmpsl
nop
lea
aas
or
jge
lds
fsubrs
sbb
sbb
push
pop
mov
out
cmp
pop
rclb
daa
loop
adc
je
shl
xor
adc
hlt
rcl
stos
insb
mov
icebp
mov
add
cmp
hlt
jmp
adc
fisttps
enter
inc
outsb
mov
shlb
xor
mov
mov
add
or
cltd
add
cmp
cs
pop
addr16
adc
imul
jg
inc
mov
inc
xor
xchg
push
movsb
inc
or
mov
mov
mov
in
mov
xor
mov
jae
push
data16
in
mov
cmp
pop
shlb
in
outsl
xchg
push
pop
int
xor
xchg
cld
fninit
xor
cmp
inc
cmpsl
leave
leave
repz
xchg
nop
push
cwtl
ds
scas
dec
xchg
sbb
jg
adcl
and
idivl
adc
inc
iret
int3
xchg
adc
mov
fsub
mov
xchg
mov
mov
cltd
dec
xchg
pop
jecxz
fdivr
sti
cli
loop
adcb
pop
mov
arpl
ret
movsl
mov
lea
dec
adcb
lds
psubsw
push
test
add
jae
lods
cltd
fdivr
mov
pusha
sahf
mov
ja
cld
fmuls
fsubp
imul
and
or
pop
or
xchg
mov
lock
in
jae
mov
stos
jecxz
add
out
arpl
mov
clc
push
dec
and
xchg
notl
jecxz
ds
mov
push
lahf
mov
out
repnz
mov
hlt
cmpsl
mov
cmp
mov
xor
inc
and
xchg
fnsave
enter
jo
add
insb
aaa
sbb
pop
mov
sbb
xchg
dec
dec
push
jne
sbb
sub
mov
jns
xchg
lret
lods
sar
imul
xor
popa
xchg
mov
sub
iret
or
mov
movsl
aaa
mov
mov
xor
cli
sbb
lahf
xchg
pop
mov
add
fsts
push
into
orl
xor
inc
scas
add
movsb
sbb
dec
and
popw
mov
je
push
in
shlb
loop
cli
pushf
xor
add
pop
out
sub
inc
insb
call
test
aas
jp
pop
mov
shlb
in
loopne
sbb
in
push
cwtl
fdivr
arpl
jo
test
mov
dec
xorb
or
add
stos
loopne
sarb
bound
stos
mov
mov
into
sub
ds
push
lock
scas
pop
sub
shld
jmp
shrb
das
pushf
addl
jmp
daa
movsl
daa
sub
pop
sbb
leave
xchg
push
ljmp
ja
jmp
sub
sub
cli
jl
adc
imull
lea
lcall
fiaddl
int
clc
ret
sti
clc
ljmp
sub
xchg
or
icebp
sahf
or
xchg
xor
add
loope
imul
cs
call
jno
sbb
pop
xchg
xchg
jge
pop
in
xchg
adc
out
scas
adc
je
pop
pop
and
push
aam
or
or
lcall
add
mov
sub
call
mov
xchg
dec
push
push
cmp
cmp
sbb
push
repnz
dec
add
js
fcoml
mov
mov
and
or
or
nop
xchg
jge
inc
lcall
movsb
jne
xchg
ret
mov
gs
icebp
ljmp
cmp
test
and
lods
ja
mov
mov
cld
imul
and
in
lods
xchg
aam
push
loop
in
add
test
inc
add
gs
dec
into
hlt
adc
mov
inc
mov
sbb
inc
pop
iret
out
mov
ja
mov
mov
add
int3
inc
lea
repz
loop
imul
mov
xchg
inc
mov
lods
and
or
xchg
mov
jg
cmp
jne
popf
out
adc
xlat
cmp
jb
push
push
loop
and
pop
daa
adc
pop
mov
xor
addr16
cwtl
subb
inc
cmp
add
jbe
rcll
inc
sbb
test
fmull
loopne
pop
push
push
loopne
ret
cmp
and
repnz
jge
mov
jae
mov
push
push
sbb
push
xchg
cmp
sahf
inc
out
pushf
push
movb
xchg
pushf
pushl
ret
call
mov
call
movb
jmp
call
mov
call
mov
pushf
call
xchg
movb
mov
movw
pushl
ret
sub
std
and
jo
and
lret
xchg
outsb
outsb
and
ret
push
add
repnz
mov
dec
inc
icebp
adc
sub
jmp
imul
in
and
vphadddq
xchg
out
rolb
cmp
xlat
adc
mov
inc
jle
loope
or
orl
jb
es
inc
push
in
in
je
std
xor
gs
sbb
inc
imul
movsl
xchg
lret
std
cwtl
fs
cmpsb
mov
dec
xor
sbb
in
push
repnz
dec
outsl
rorb
fs
push
sub
outsl
and
adc
add
int
in
sbb
dec
add
out
jbe
repz
fdivr
js
adc
iret
pop
and
pop
mov
imul
add
cmp
and
gs
pop
movsb
pop
push
fucomp
subb
jne
pop
mov
call
adc
ret
fldenv
push
mov
call
scas
lods
stos
jb
std
orl
xor
mov
cltd
xchg
xor
sbb
xor
adc
cmpsb
mov
lret
xchg
cltd
popa
dec
xchg
jle
fcomps
sbb
fistl
ljmp
cmp
cld
xchg
roll
mov
call
int3
dec
loope
xchg
fdivr
scas
xor
add
xchg
fcmovu
push
xor
repz
pop
or
adc
push
dec
and
int3
push
mov
pop
insb
and
inc
lahf
push
rol
arpl
pop
mov
dec
add
push
or
mov
xchg
inc
cli
scas
ja
cmp
out
int3
push
mov
dec
insb
and
xchg
adc
outsb
mov
add
jns
push
xchg
cmc
mov
inc
mov
int3
lcall
xchg
mov
mov
cltd
mov
repnz
push
sbb
fldt
jp
incb
insb
movsl
dec
adc
push
mov
mov
int
sub
dec
lods
out
mov
outsl
xor
mov
mov
data16
mov
or
dec
mov
orb
add
loope
mov
dec
mov
in
mov
sub
pusha
xor
inc
movsb
icebp
mov
aad
outsb
enter
jo
idiv
out
dec
dec
mov
mov
je
in
pop
call
imul
xor
jp
push
jp
pop
test
pop
cmp
cmp
sub
pusha
fs
mov
fbld
mov
pmulhuw
sub
and
shlb
push
push
pop
mov
sub
fsubl
movsl
jb
mov
dec
cmp
push
dec
out
pop
cld
call
pushf
in
stos
inc
fstpt
jecxz
push
push
mov
sub
cmc
mov
je
ret
mov
xchg
shl
mov
rcrl
outsb
mov
push
test
aam
push
mov
out
ficoml
xchg
inc
push
orl
jns
jle
push
cli
int3
in
jae
sbb
int
mov
lock
and
ss
mov
icebp
mov
sub
pop
inc
fildl
insl
icebp
and
iret
pop
push
jb
inc
clc
int
cltd
pavgw
dec
push
out
push
xchg
pushl
mov
rorl
inc
inc
imul
mul
nop
stos
fprem1
add
inc
incl
mov
and
lahf
pop
mov
jl
adc
lock
out
or
adc
insb
sbb
or
mov
lret
test
inc
cmpsl
out
stos
add
xor
movsb
test
sbb
ss
sbb
push
mov
insl
mov
sti
js
lcall
mov
dec
xchg
xor
xlat
cmp
jmp
add
and
cwtl
mov
outsl
xor
lahf
mov
xchg
pusha
iret
sub
fistl
xor
mov
je
inc
lds
cltd
rcrl
mov
movsb
or
shlb
jo
pop
mov
hlt
mov
out
mov
mov
sbb
movsb
pop
scas
sub
pop
cli
ljmp
mov
das
jbe
gs
out
sar
pushf
add
inc
xor
jo
ficomps
in
rcrl
arpl
mov
test
push
outsb
cmovl
jae
xchg
and
fs
cmp
movsb
sub
or
sbbl
es
out
cmp
gs
fs
mov
lret
iret
mov
mov
add
fwait
sub
add
mov
lea
inc
nop
cmpsb
je
sbb
divb
xchg
dec
popa
sub
dec
push
addr16
enter
scas
je
stos
jae
push
pop
mov
cwtl
test
iret
sub
inc
push
sub
sbb
rolb
sub
and
jge
and
fwait
add
add
movb
mov
setne
pushf
not
movzbw
mov
call
pop
mov
call
xchg
movb
movb
movb
pushl
ret
jmp
pushf
pusha
xchg
push
mov
pushf
mov
call
mov
pusha
nop
call
push
push
call
call
xor
test
test
pushl
popf
pushf
pushl
ret
call
mov
jmp
pushf
pushf
pushl
nop
pushf
pusha
xchg
pop
push
mov
push
mov
lea
mov
pushf
mov
push
mov
push
mov
movb
mov
call
pusha
pushf
xchg
pushl
movw
pushl
ret
lea
pushf
xchg
mov
pushl
ret
nop
pusha
pushl
mov
pushf
movsbw
movsbl
mov
push
call
pushf
pusha
movsbl
nop
push
pop
mov
jmp
pusha
call
mov
cwtl
lahf
lea
jg
mov
mov
pushf
pushf
lea
pusha
jmp
movb
pushf
mov
pusha
mov
pusha
jmp
xchg
call
xchg
call
lea
pusha
lea
jno
pushf
mov
pusha
push
mov
jmp
mov
push
lea
pushf
xchg
push
movb
pushl
ret
lea
mov
push
pushl
xchg
movb
mov
pushl
ret
pop
call
mov
movzbl
mov
push
mov
movb
call
not
call
mov
push
bswap
mov
mov
pushf
mov
pushf
lea
pushf
mov
movsbw
mov
jmp
xchg
movzbw
call
push
mov
pusha
lea
pushf
pushf
call
mov
sets
mov
call
pushf
jmp
not
lea
mov
jmp
lea
call
xor
movw
call
xchg
push
pushf
push
push
pushl
ret
jmp
jp
pusha
nop
push
xchg
call
movl
xchg
pushl
pushf
pushf
mov
pushl
ret
push
call
xchg
jmp
pushf
bt
xor
stc
jmp
mov
call
movl
mov
call
pushf
mov
pusha
mov
mov
mov
push
mov
pushl
mov
call
pushf
lea
call
mov
call
call
call
push
xchg
movsbw
call
movzbw
pusha
nop
jmp
xchg
mov
pusha
movb
pushl
ret
push
pushl
movl
jmp
pushf
xchg
pushf
mov
pushl
ret
pushf
mov
mov
not
not
bswap
pop
mov
pushf
mov
call
call
pusha
call
mov
call
jmp
movb
mov
pushf
mov
pushl
lea
movb
pusha
push
xchg
pushf
push
mov
push
pushl
ret
xchg
pushl
push
pushl
ret
mov
pop
pusha
pushf
mov
pushf
movw
movb
call
call
push
mov
lea
push
jmp
mov
movzbl
mov
mov
mov
pusha
mov
lea
jmp
xchg
pusha
pushf
movb
xchg
push
pop
bswap
mov
jmp
mov
pushf
xchg
lea
jp
pushf
xchg
movsbw
pushf
mov
mov
pushf
push
mov
push
jmp
push
jmp
mov
push
pushf
lea
pusha
call
jmp
mov
movb
mov
call
mov
bswap
setno
mov
call
push
pusha
mov
call
movb
pushf
call
bswap
nop
mov
pop
pushf
pusha
xchg
pushf
mov
pushf
call
push
mov
jmp
pushf
jmp
lea
push
movb
push
movb
mov
movzbw
mov
push
mov
call
push
xchg
pushf
pushl
ret
movsbl
mov
push
call
mov
push
movw
lea
pop
mov
movb
call
pushf
xchg
movb
pushl
pushf
pushl
ret
nop
pusha
push
lea
push
xchg
pushf
call
pushf
xchg
push
push
pushl
ret
xchg
pushf
pushl
pushl
pushl
ret
push
xchg
pushf
push
mov
movb
pushl
ret
call
lea
jmp
lea
push
nop
not
setg
pushf
mov
pushf
pushf
call
mov
pusha
push
pushl
jmp
daa
mov
and
mov
pushf
lea
mov
xchg
movb
mov
pushf
pushl
ret
movw
movb
call
mov
call
mov
pushl
lea
push
call
pusha
movl
jmp
sub
push
and
and
or
sbb
pushf
divl
mov
cmp
mov
sub
roll
stos
adc
lods
call
add
push
and
mov
xchg
pop
aam
fnsave
popa
adcl
in
scas
jbe
fsubs
jnp
mov
sbb
iret
out
add
xlat
jle
lcall
gs
shr
or
mov
outsb
fsubl
clc
push
lods
movsl
insl
outsl
sub
addr16
cltd
pop
stos
cwtl
inc
imul
xor
aas
out
inc
xchg
std
mov
mov
xor
jo
adc
and
mov
xor
add
adc
sub
lahf
addr16
lret
xchg
std
push
sbb
imul
xchg
adc
aas
addr16
add
adc
rorl
mov
sbb
clc
fcoml
pop
idivb
dec
pop
push
inc
cmpsl
inc
jl
cmc
jg
xchg
fidivs
add
enter
push
test
sbbb
iret
adc
fsubl
orl
push
push
popa
cli
mov
ret
or
dec
daa
xchg
jne
xchg
shll
popa
adc
push
lods
loope
inc
nop
cmp
loopne,pn
jns
dec
mov
aas
xlat
jno
jl
call
cmp
cwtl
xor
in
divl
or
lea
insl
xlat
push
push
loopne
and
subb
inc
push
jecxz
xor
mov
sub
xor
cmp
lock
mov
jmp
pop
es
vmread
std
shl
in
adc
lret
and
pop
dec
lock
ss
or
cs
adc
ljmp
inc
add
mov
cmc
xor
mov
xor
movsb
inc
je
arpl
or
nop
roll
divl
scas
es
std
lds
inc
subps
push
or
pop
and
mov
xor
in
fcompl
stc
cmpsb
inc
xorl
mov
mov
ret
pop
scas
dec
out
mov
outsb
fucomp
nop
cmpsl
sti
repnz
cltd
out
std
shl
mov
sub
in
xchg
loop
adc
aas
insl
js
sbb
pushf
dec
popa
test
pop
push
pop
scas
cmp
gs
adc
mov
cmp
ljmp
xor
mov
lods
jbe
cli
add
inc
mov
and
push
pop
sbb
int3
adc
mov
lock
pop
cmp
inc
sbb
mov
lret
pop
sbb
cwtl
lods
shl
pop
daa
sete
arpl
repz
cmp
ds
xchg
lds
addr16
mov
mov
mov
dec
mov
addr16
mov
push
pop
lods
cmp
mov
call
or
loope
xor
dec
and
push
aas
xchg
cmpsb
shll
fnsave
dec
sub
ss
and
xchg
pop
test
test
andb
popf
scas
lret
ds
and
pop
stos
sub
rcrl
push
lahf
int
jl
aam
int3
das
or
dec
out
hlt
nop
je
test
insb
dec
add
mov
cmp
mov
mov
jb
lods
iret
cmp
xor
data16
adcl
push
mov
sub
and
enter
movsb
jnp
sub
loope
sahf
push
mov
leave
sti
sub
lahf
loope
jnp
addr16
mov
dec
lods
cld
movl
mov
jnp
cmp
ljmp
shrl
test
mov
sub
jmp
popa
mov
insl
aaa
and
sbb
rol
and
pushf
fadds
scas
add
push
test
stos
sub
push
xlat
mov
cmc
sahf
mov
lret
pop
xchg
xchg
pusha
adc
int3
fs
lea
cmp
mov
lret
cmc
jle
negl
xor
jae
lret
jle
xchg
das
push
push
rorb
push
sub
adc
loopne
push
test
cmpsb
inc
stos
or
mov
adc
ret
stos
jno
fisubl
inc
call
xchg
push
out
aaa
jmp
stc
inc
jne
or
adcb
ss
dec
neg
xor
cld
add
lret
cmc
jg
pop
xchg
sbb
and
or
fidivrs
or
arpl
mov
or
aaa
mov
mov
aad
mov
call
mov
push
jmp
pushl
lea
jmp
push
xchg
pop
not
bswap
pop
mov
mov
push
lea
movb
push
mov
mov
movzbw
movzbw
mov
pushf
pushf
call
pusha
pushf
movb
nop
push
lea
jne
pushf
pusha
xchg
pop
mov
call
mov
mov
xchg
pusha
call
pusha
pushf
jmp
pushf
lea
pusha
mov
pushl
pushf
xchg
mov
movb
pushf
movb
pushl
ret
push
pushf
pushf
push
lea
jmp
not
mov
movzbw
call
bswap
mov
lea
js
pusha
pushl
mov
lea
pusha
pushf
mov
pushf
mov
not
mov
call
lea
pusha
call
mov
jmp
push
mov
lea
call
nop
pushf
not
movzbw
pushf
mov
call
pushl
movb
call
lea
not
mov
not
jmp
jmp
jmp
push
push
pushf
mov
setb
mov
pusha
mov
push
call
jmp
pushf
lea
push
xchg
movb
mov
pushl
ret
into
jns
sbb
gs
xchg
dec
add
add
cmp
aas
sub
fisttpl
std
test
mov
fs
shll
and
nop
fsubrl
xor
data16
inc
mov
sub
add
jecxz
imul
mov
xchg
dec
shrl
mov
mov
rorl
xchg
mov
sbb
and
fiadds
jno
loopne
ds
test
popa
jae
mov
mov
out
add
and
sahf
ss
xor
sub
call
dec
cmp
jp
sbbb
xchg
int
xchg
mov
subl
sbb
adc
das
test
dec
hlt
push
pop
pop
fbstp
push
test
mov
jbe
daa
test
fildll
mov
rcr
stos
lods
or
xchg
scas
xchg
dec
xor
cmp
arpl
or
or
cmc
push
imul
jmp
fisubs
outsl
inc
mov
es
fcom
jae
sbb
and
sbb
lock
mov
or
sub
lods
fsts
jmp
or
ja
pop
iret
jecxz
lods
cmc
mull
sahf
cmp
cmp
pop
icebp
cltd
stos
lret
iret
cs
ffreep
bnd
dec
jne
mov
int3
push
mov
shl
ds
sbb
out
repz
in
mov
fdivs
cmp
sub
or
xchg
xchg
push
mov
jl
cmpb
xor
dec
sarb
andb
bound
in
mov
sti
fsubrs
sbb
cmp
lds
shll
jae
test
pop
stc
mov
sbb
xchg
sbb
cmp
add
fimuls
cmp
jne
daa
lret
jo
mov
andl
ret
mov
int
adc
inc
jmp
dec
inc
ds
aad
push
call
cmp
pop
adc
mov
clc
repz
push
sbb
sbb
adc
xchg
mov
jno
jb
pop
push
jae
aaa
daa
and
int3
insl
out
negb
xchg
adc
inc
out
and
cmp
push
ljmp
push
xchg
cwtl
lods
shlb
mov
mov
pop
ja
leave
xchg
jae
mov
and
call
inc
sarb
mov
rcl
negl
int3
add
popf
xchg
hlt
dec
loopne
test
sub
xchg
fnstenv
in
sbb
xlat
loope
addr16
test
mov
xchg
lods
out
nop
ja
dec
sahf
outsl
and
iret
ss
inc
inc
cmp
vshufps
jns
mov
sbb
mov
jbe
mov
mov
pusha
mov
adc
mov
aaa
mov
cmp
loopne
loopne
addr16
mov
add
xor
cmpsl
xorb
push
pop
adc
push
mov
mov
and
and
push
mov
adc
or
mov
add
sub
hlt
das
dec
xor
lcall
sbb
xlat
mov
adc
xchg
aaa
into
cwtl
fs
and
das
xor
cmc
xchg
fwait
xor
pusha
dec
gs
flds
mov
lea
mov
stos
jbe
xchg
pop
imul
mov
loop
xchg
in
jmp
pop
push
sbb
xor
pop
loop
push
cld
sbb
cmpb
cmp
insb
inc
push
inc
dec
mov
jl
ss
cli
lds
int3
xchg
jb
xor
cmp
pop
mov
sbbl
add
mov
inc
je
jnp
fidivrs
or
in
mov
jo
in
xchg
ljmp
mov
lods
popa
or
out
or
jns
fdivl
adc
mov
xchg
dec
sarb
or
in
sbb
dec
push
rcl
shlb
cmpb
jns
iret
cmp
mov
into
movsl
dec
shlb
enter
in
push
insl
push
dec
adc
adc
cltd
and
or
scas
push
push
mov
cmp
cmp
xor
cmp
movb
dec
imul
ja
in
cmp
dec
sahf
xor
test
cmp
mov
outsb
test
decb
loope
inc
or
lock
or
mov
cmovg
clc
and
cmpl
ss
and
cld
imulb
test
adc
mov
cltd
pusha
aas
aaa
add
push
gs
mov
pusha
cltd
into
jge
pusha
inc
test
xchg
mov
in
or
into
cltd
int3
adc
sarl
xor
mov
jl
mov
andl
roll
shlb
cltd
pop
add
cmc
xchg
adc
mov
jns
mov
in
cmpsb
add
mov
mov
cmc
mov
lods
push
lods
in
push
ds
mov
or
fwait
in
cwtl
bound
sbb
subb
adc
leave
xor
pop
jb
fmuls
adc
lea
ror
clc
stos
push
sbb
sub
iret
cltd
dec
loopne
insl
inc
inc
inc
xor
cmp
or
dec
dec
fdivrl
push
out
aaa
inc
mov
adc
mov
jne
dec
inc
out
rcrb
repnz
arpl
cmpb
xor
rorb
pop
and
lods
in
jns
sbb
std
or
push
xor
dec
xchg
push
mov
ret
movsb
out
stc
test
xor
add
mov
popf
inc
push
xlat
pop
xlat
iret
cwtl
ja
mov
adc
pop
stos
adc
loopne
je
push
sub
dec
inc
bound
loop
sti
sti
push
mov
push
and
jmp
xor
sbb
xor
push
ficoms
je
lods
cmp
into
dec
inc
push
dec
gs
sub
push
jl
xorl
cmp
shrl
or
hlt
mov
inc
pop
add
push
dec
in
mov
jge
sub
das
aad
out
fisttpl
inc
repz
mov
cli
sbb
or
cmpsb
loopne
aam
pusha
clc
cli
jl
sbb
lock
xor
add
mov
aaa
divl
aaa
adc
or
inc
addr16
sub
ljmp
mov
addl
ret
pushf
and
sbb
sbb
jne
shl
nop
popa
adc
call
mov
mov
test
stc
lods
inc
inc
inc
movsb
enter
sbbb
ljmp
mov
xchg
push
scas
push
inc
movsb
mov
dec
fnstsw
pop
outsl
pop
and
imul
add
cld
scas
lods
mov
dec
adc
adc
jnp
pop
scas
mov
jp
loop
les
bound
outsb
in
ljmp
inc
andl
aam
in
shrb
push
adc
dec
dec
shrl
outsb
cmp
hlt
hlt
lret
stos
ljmp
cmpsl
pop
push
mov
cmpsl
xor
add
aad
mov
adc
mov
hlt
scas
mov
mov
int
lret
sbb
ljmp
adc
cld
incl
mov
pushf
xchg
bswap
lea
jl
pusha
movsbw
mov
call
nop
pushf
jmp
push
movb
xchg
pushl
pushf
pushf
pushf
pushl
ret
pusha
pushf
xchg
pop
mov
jmp
mov
pushf
pushl
pushl
ret
sets
movsbl
nop
pushf
pusha
jmp
xchg
pushf
movsbw
mov
push
mov
jmp
push
bswap
pushf
lea
pushf
movzbl
pushf
mov
call
mov
call
jmp
push
mov
call
push
lea
call
bswap
lea
pop
mov
lea
pushf
movw
jmp
jmp
mov
movb
call
mov
call
movb
call
mov
call
pusha
pushf
xchg
push
movb
pushl
ret
andl
clc
fdivr
loopne
fists
je
mov
sbb
popa
sbbl
add
pop
mov
push
pushf
pop
inc
lods
mov
or
sbb
jno
cmp
pop
inc
or
and
xchg
hlt
cltd
sub
jne
inc
mov
adc
push
xlat
xchg
mov
sbb
icebp
testl
aad
xor
aad
adc
ja
add
jno
xor
xchg
sti
or
pusha
fsubp
lods
stos
jae
xchg
mov
mov
inc
and
not
hlt
xor
fs
dec
add
das
neg
std
cmp
cmpsl
pusha
mov
dec
sbb
mov
inc
or
add
xchg
mov
shr
adc
and
xchg
call
xor
hlt
aas
sub
fbld
ret
sbb
add
jecxz
out
mov
cmp
pop
and
fucomi
int3
and
cld
jmp
stc
xor
aam
or
stc
ss
cmpb
aas
stc
xchg
adc
push
mov
cmp
ljmp
sbb
rclb
popf
push
jecxz
jecxz
cwtl
aaa
xchg
pusha
das
testb
loope
hlt
ja
out
in
sbb
adc
push
int3
lcall
lds
fldpi
jmp
fcompl
cli
push
inc
fsubrs
aad
mov
movb
xchg
sbb
push
dec
fwait
add
test
into
push
lret
inc
push
mov
loop
sbb
stos
add
jmp
sbb
mov
inc
imul
divl
ss
jo
mov
add
sbb
xor
test
mov
mov
popf
push
add
cld
ret
dec
add
js
mov
repnz
lcall
sbb
in
or
stc
jle
fsubl
neg
std
adc
subb
nop
lret
repnz
test
sbb
xchg
jp
pop
lahf
pop
xor
mov
mov
ss
test
fs
test
int3
xchg
push
aas
and
or
xor
pusha
out
cmp
rolb
pusha
xchg
push
add
jp
aaa
inc
arpl
mov
sbb
hlt
and
dec
fwait
in
je
and
sbb
inc
jl
loopne
cmp
jae
fdivrl
push
xor
into
sub
fdiv
mov
das
push
lret
inc
mov
imul
cmp
push
pop
leave
pusha
clc
mov
mov
std
gs
mov
sub
pop
add
rorl
data16
sub
fbstp
sbbb
and
push
pusha
test
push
loopne
icebp
lods
test
int3
jl
push
push
popf
push
dec
pushf
dec
jbe
arpl
inc
xchg
or
jo
mov
inc
mov
in
cmpsb
xor
push
sub
xlat
add
and
lret
test
xlat
and
add
ret
popf
in
dec
fwait
jp
pop
and
and
xchg
jecxz
mov
iret
push
cmpsl
pop
test
loopne
inc
lret
xchg
arpl
subb
pop
push
lcall
dec
data16
es
stos
subb
jo
push
lcall
shrb
iret
cmp
push
std
popa
cmp
inc
ljmp
test
imul
test
cmp
xchg
or
stc
es
mov
incl
out
roll
dec
lods
loop
repnz
xchg
hlt
hlt
dec
xchg
jecxz
cmp
mov
out
movsl
jmp
jbe
fnstsw
sbb
ret
pop
lea
arpl
jmp
aaa
cmpl
jmp
pushf
push
lea
call
call
pushf
mov
pushf
not
mov
call
mov
lea
pushf
call
movzbw
nop
movzbw
pushf
push
bswap
xchg
call
xchg
pushf
xchg
call
call
mov
lea
movb
jmp
push
mov
lea
mov
push
jmp
setp
cwtl
mov
pushl
pusha
mov
pushl
jmp
jmp
push
push
mov
not
mov
pusha
mov
movl
jmp
mov
pushf
lea
pushl
push
movw
xchg
push
pushl
ret
mov
pusha
call
jmp
pusha
call
call
mov
lea
je
push
pushf
lea
jmp
call
xchg
push
push
pushl
ret
call
call
pushf
nop
jmp
call
call
movb
xchg
pushf
pushl
ret
xchg
pushf
lahf
lea
setns
mov
mov
pushf
push
lea
call
pushf
lea
jge
push
bswap
mov
jne
lea
mov
push
lea
call
mov
mov
pushl
mov
mov
mov
pusha
lea
jae
lea
pushf
mov
pusha
xchg
pusha
pushl
ret
mov
call
mov
pushl
call
jmp
movl
movb
lea
call
pushf
pushf
pusha
call
push
pushf
call
jmp
mov
jmp
movzbw
mov
push
pushf
lea
push
mov
pushf
not
pushl
mov
jmp
xchg
jmp
lea
jnp
push
xchg
pushl
pushf
pushl
ret
lea
mov
xchg
movb
movb
movb
pushl
pushl
ret
setne
lea
setp
mov
mov
call
jmp
pushf
lea
push
mov
xchg
pushf
movw
pushf
pushl
pushl
ret
call
call
jmp
lea
mov
pushf
lea
push
mov
pushf
pushf
mov
bswap
lahf
jmp
mov
mov
mov
call
pushf
xchg
movsbl
call
rcll
pushf
push
mov
call
mov
pushf
movb
lea
pushf
jmp
sets
mov
pushl
jmp
mov
push
mov
lea
pushf
mov
xchg
pusha
push
push
pushl
ret
jmp
je
xor
std
call
adc
sti
in
mov
cmp
add
fcmovnu
incl
inc
jl
fsubrl
dec
into
imul
push
sti
jge
jmp
lret
cld
mov
dec
cmpsb
mov
jnp
pushf
push
in
out
sub
in
xchg
add
inc
and
out
fdivr
inc
mov
sti
dec
roll
int3
or
mov
xchg
dec
test
arpl
adc
add
xlat
cmp
push
dec
add
shr
fdivr
xchg
arpl
pop
jns
inc
inc
and
pop
in
in
push
push
cmp
pop
adc
add
movsl
js
repnz
arpl
aas
inc
jle
and
in
xlat
scas
push
xor
mov
push
fiadds
or
rcr
mov
fcomi
leave
insl
les
dec
push
sub
sub
push
fildll
js
cmovns
loop
jb
inc
loop
and
jecxz
jmp
add
mov
popa
jns
mov
sbb
jbe
pop
sub
add
fcmove
cltd
lahf
push
lcall
pop
mov
push
lret
mov
add
adc
jp
mov
inc
pusha
cs
xchg
mov
dec
ror
xchg
xchg
cmp
lret
repnz
in
jecxz
mov
mov
lret
pop
pop
jge
xchg
push
stc
xor
mov
mov
push
pop
cmpsl
adc
xor
popa
sub
scas
in
ja
fcompl
into
stc
mov
cmp
mov
cs
cmp
dec
adc
xlat
push
pop
or
push
pop
cmpsb
push
int
mov
mov
jl
mov
lahf
je
outsl
cmp
inc
dec
fs
adc
add
aaa
loopne
int
and
xchg
xchg
xor
repz
lds
mov
repnz
and
ja
pop
shll
mov
dec
add
daa
leave
xorl
mov
push
dec
sbb
pop
xchg
enter
mov
orl
mov
sahf
xlat
in
jno
adc
mov
sub
mov
lret
ja
jns
sahf
imul
sub
cli
xchg
mov
mov
push
pop
les
xchg
mov
pop
xor
mov
aaa
or
pop
imul
popa
repz
pop
pminub
lret
or
xor
inc
scas
jp
jmp
push
fimuls
fdivl
push
stos
rorb
push
push
fcomps
clc
jmp
cmp
mov
andb
es
xchg
test
shlb
adc
les
dec
push
dec
iret
cmp
loopne
testl
mov
push
mov
cmpl
mov
dec
dec
xchg
lahf
pushf
movsb
lcall
fsubs
sar
aad
or
and
ret
mov
xchg
mov
push
sti
insl
pop
lods
lods
pop
mov
fidivrl
pop
push
mov
repz
into
lea
dec
into
cmpsb
pop
loope
sbb
cmp
xchg
fiadds
pusha
mov
pop
add
cmp
cld
inc
dec
xor
mov
mov
in
cltd
aaa
pop
pushf
int
or
lods
cmc
inc
jge
data16
and
filds
sti
imul
cwtl
cmp
lahf
cmp
out
jno
lcall
mov
fdivl
fistps
xchg
ljmp
mov
mov
push
stc
add
mov
movsbl
movw
push
not
mov
lea
jge
pushf
mov
call
jmp
jmp
mov
jmp
movb
xchg
movw
pushl
ret
lahf
in
in
fdivr
pop
cmpsl
bound
rolb
jb
add
clc
mov
ret
push
pusha
shrb
dec
inc
jl
dec
clc
sub
outsl
outsl
cmp
pop
lcall
insb
xchg
clc
rorb
and
loope
cmc
xorb
adc
cs
cld
dec
bound
jnp
cld
aaa
imul
jb
out
cmp
push
mov
call
movsl
sarb
aam
hlt
jmp
clc
lods
and
sbb
out
pop
stos
and
or
or
rcll
mov
inc
adc
pop
xchg
cmpsl
rcr
add
dec
jb
test
xor
xchg
out
clc
add
jge
es
es
sti
dec
lcall
mov
lods
or
icebp
mov
test
pusha
lods
xor
mov
pop
jmp
ret
test
arpl
jbe
or
cmp
adc
pop
dec
mov
mov
sub
fwait
in
mov
jmp
xchg
inc
loop
sub
pop
and
pushf
fiaddl
sahf
mov
pop
xchg
jl
inc
subl
call
daa
mov
aad
mov
test
mov
cld
jnp
rcl
cld
xchg
xlat
xorb
aad
pop
push
shl
ret
dec
push
rclb
mov
nop
shrb
mov
rcrl
inc
or
jmp
push
insb
mov
xchg
dec
dec
mov
or
cmp
cmpb
or
stc
xchg
incl
mov
out
movsb
or
in
adcl
pop
mov
cli
sbb
rcrb
inc
add
mov
mov
stos
inc
outsl
mov
pop
and
sub
imul
rcl
daa
jle
roll
adc
es
push
mov
aas
movsl
or
push
push
movsb
add
test
mov
in
sbb
je
sbbl
dec
jns
xor
dec
ljmp
pop
jmp
lahf
inc
pop
pop
cmpsb
aas
mov
imull
out
loopne
pop
jnp
cmpsl
nop
or
adc
test
inc
ja
add
imul
xchg
fiaddl
adc
xorb
lods
pusha
push
mov
jns
mov
andl
sbb
jnp
adc
subps
pop
das
js
push
iret
add
dec
lret
dec
mov
dec
shll
xchg
jae
sbb
xchg
pop
lret
push
cmp
cld
push
test
add
aad
fisttpl
xlat
mov
rcrb
inc
int
pop
mov
outsl
call
jno
cmpsb
repz
xchg
arpl
jp
push
aaa
mov
jne
pop
jg
mov
mov
mov
scas
stc
lret
mov
inc
sbb
leave
sbb
lahf
push
jo
dec
jge
add
jmp
scas
sub
fdivrl
xlat
ljmp
je
fldenv
ja
xchg
dec
mov
pop
push
aad
dec
or
in
rorb
dec
push
js
into
dec
adc
xor
or
das
jnp
imul
loop
inc
xor
mov
test
movsl
les
mov
cwtl
add
xor
mov
fs
inc
or
sub
cmp
and
dec
call
idivb
inc
clc
stc
mov
in
nop
pop
cltd
je
loopne
ucomiss
mov
lods
jnp
ljmp
xchg
shrl
add
stos
pop
jl
daa
jo
or
add
test
inc
xchg
lret
sbb
xchg
adc
jl
call
inc
sub
pop
gs
push
movsb
idivb
adc
sbb
mov
cld
cmp
mov
rclb
outsl
add
mov
sub
mov
xor
mov
stos
cld
enter
sahf
pop
mov
iret
cmp
inc
or
mov
or
jl
fs
repz
push
mov
sbb
cmovle
jle
fwait
jle
int
orb
andb
mov
push
jb
mov
jb
mov
push
out
js
aad
icebp
rclb
or
ss
xorl
sub
fmull
ffree
loopne
or
filds
ret
xor
fisubs
std
ljmp
jg
not
mov
cwtl
sub
adc
xchg
jle
push
aaa
ret
cwtl
cli
jmp
ret
lock
jb
ret
int
jp
rol
dec
add
mov
jne
shl
inc
pop
repnz
imul
fmuls
dec
or
adc
push
or
mov
dec
sbb
push
xchg
mov
inc
inc
pusha
call
repnz
out
adc
repz
sbb
test
int3
xchg
sub
jb
loope
mov
jbe
in
movsl
jno
pop
ficoml
mov
rclb
mov
pop
jno
dec
mull
cmp
push
and
sarl
lods
mov
mov
cmc
dec
xchg
add
icebp
add
add
inc
xchg
fcomps
shlb
fcoms
jle
mov
sub
mov
jns
jecxz
dec
das
orl
fsubs
lds
or
sub
call
push
arpl
xchg
das
dec
inc
cltd
out
push
inc
stos
or
inc
mov
lods
sbb
dec
xchg
dec
adc
pop
and
pop
ss
push
mov
xchg
mov
inc
push
ds
subl
xor
inc
loop
add
rcrl
mov
gs
mov
sar
push
inc
rol
adc
xchg
pop
sbb
in
ds
cmpsb
dec
jmp
aad
popa
cmpsl
outsl
pop
push
jnp
mov
cltd
pushf
add
push
inc
fs
pop
stos
cmp
xchg
outsb
adc
hlt
cmp
fistl
dec
testb
jb
stos
mov
je
insb
stos
movsb
jge
inc
lods
ja
imul
bound
push
andb
test
shl
shlb
sub
jns
ret
inc
mov
out
rorb
mov
jmp
mov
jbe
mov
and
sbb
push
dec
or
cmp
inc
jbe
jnp
stc
lcall
fwait
gs
pop
sbb
das
push
int3
daa
sar
lea
adc
add
xchg
out
xorl
insb
and
lods
cmpsb
mov
or
out
sbb
int
leave
hlt
cmp
push
mov
test
sbb
cmp
int3
push
call
cmp
jl
scas
dec
lea
bnd
sarb
cmp
adc
icebp
pop
jecxz
or
pusha
jno
lcall
xchg
or
jge
jns
cmpsb
mov
outsl
jae
xor
cmc
mov
push
dec
xchg
cltd
sbb
jle
ret
sbb
jecxz
pop
push
cmp
lods
insl
push
inc
push
xchg
out
or
mov
xchg
xchg
pop
or
aam
jne
add
push
das
mov
hlt
icebp
mov
in
add
push
dec
push
cmc
repnz
mov
xchg
cwtl
jge
mov
or
add
aad
sub
jle
push
cmp
or
std
jle
and
popl
fwait
mov
scas
test
jp
subb
test
arpl
les
add
call
adc
std
jle
push
push
lock
neg
pop
out
push
lea
mov
pushf
movw
mov
xchg
pushl
mov
mov
push
pushl
ret
lea
pusha
jmp
mov
movsbw
bswap
mov
pushf
mov
call
movsbw
lea
pop
mov
pushf
pushf
lea
push
pusha
mov
not
not
pop
setne
mov
mov
pushf
mov
call
pusha
mov
lea
jae
pushf
mov
pushl
lea
push
pushf
movb
pusha
xchg
pushl
pushl
ret
jmp
lea
call
pushf
lea
push
xchg
pusha
pushl
ret
not
lea
movsbw
nop
lea
call
mov
movl
pushf
pusha
movl
pushf
lea
jmp
movsbw
pop
pusha
movb
pushl
xchg
pusha
jmp
pushf
pushf
pushf
mov
mov
mov
push
movsbl
mov
call
push
call
movzbl
mov
jmp
mov
jmp
mov
pushf
lea
jge
xchg
pusha
mov
pushf
pushl
ret
xchg
mov
bswap
mov
call
nop
call
pushf
lea
nop
push
movzbw
pop
jmp
mov
call
xchg
xchg
movsbw
mov
movsbw
mov
pushf
lea
lea
pop
mov
jmp
pop
mov
lea
jbe
mov
pusha
lea
mov
movb
pushf
pusha
xchg
pushl
pushf
pushf
mov
pushl
ret
lea
jmp
pusha
pushf
pushf
xchg
movl
mov
jmp
jmp
xchg
movb
movb
pushl
ret
xchg
mov
pushl
pushf
mov
pushl
ret
push
mov
movzbw
mov
call
pushf
mov
pushf
pushf
pushl
ret
lea
mov
movb
mov
xchg
movw
movw
movb
mov
pushl
ret
lea
pushf
mov
mov
mov
call
xchg
movb
pushf
movw
pushl
ret
pusha
movw
jmp
mov
pushl
pushf
jmp
mov
pushf
not
pushf
mov
call
bswap
call
nop
call
push
pushf
nop
movsbw
movzbl
bswap
lea
mov
call
mov
call
jmp
nop
movw
call
not
mov
jmp
movw
movb
pusha
xchg
pushf
mov
pushl
ret
pushf
nop
pusha
pushl
call
push
pusha
pushf
pushf
mov
jmp
xorl
test
xor
stc
jmp
jmp
pusha
push
movl
xchg
movw
push
pushf
pushl
ret
cmpsl
lahf
inc
mov
movzbl
pushf
mov
lea
jle
pushf
push
pushf
xchg
movb
pushl
jmp
stc
xor
pushf
push
xor
push
jmp
xchg
push
pushl
ret
jmp
lods
and
fdivr
sbb
adc
push
push
xor
enter
repz
jl
dec
leave
pop
jae
and
imul
jbe
insb
jge,pn
cs
dec
xchg
arpl
and
pop
cli
notl
jno
mov
sub
xchg
lods
jnp
shrb
in
lcall
jle
loope
push
aad
pusha
lcall
mov
lret
shll
cld
addr16
pop
test
data16
mov
sbb
aaa
add
rol
xchg
cli
xchg
loopne
dec
adc
rcl
xchg
sub
lods
push
popf
xchg
subb
sub
xor
lea
call
addr16
fdivr
orl
xchg
push
mov
movsl
das
or
shr
cmp
inc
aaa
add
fisubs
or
lods
in
das
cmp
in
dec
dec
rclb
adc
push
lret
lret
das
and
add
jge
lock
dec
add
movsb
adc
sub
fdivr
es
xchg
push
dec
popa
popa
xor
adc
push
es
sbb
and
add
sti
xchg
xchg
cmp
xchg
push
mov
and
push
popa
ja
insl
mov
in
sbb
and
xor
adc
mov
mov
cmpsl
xchg
scas
inc
fbstp
sub
test
or
pop
lret
lahf
pushf
cwtl
add
or
pushf
cmp
cmc
xchg
xor
sbb
adc
or
sub
xchg
fildl
pop
ret
jne
push
mov
inc
stos
ljmp
loop
test
scas
sbb
dec
mov
jns
jg
cs
ljmp
data16
call
jno
movsb
dec
push
mov
fbstp
cmp
mov
cmp
call
jnp
popf
inc
push
fucom
into
outsl
shll
cmp
adc
stos
jo
clc
gs
fwait
sub
es
je
inc
pop
nop
aaa
mov
add
daa
mov
mov
dec
insl
dec
xor
rolb
jne
addr16
sbb
mov
push
in
repnz
les
std
add
mov
inc
mov
add
and
push
push
dec
push
into
popf
mov
loopne
int
movsl
rcr
rclb
imul
cmp
in
mov
push
out
push
lahf
mov
pusha
sbb
jecxz
or
shll
and
jns
mov
enter
lods
lock
jge
test
pop
test
inc
mov
or
jle
xchg
dec
jb
dec
orl
push
mov
add
ret
fdivrs
or
rcrb
pop
fdivl
inc
mov
ret
and
or
in
or
jo
adc
xchg
ja
mov
ja
add
loop
xor
adc
addr16
scas
es
pusha
push
sti
pop
mov
inc
inc
fdivl
xchg
aas
cld
fs
icebp
push
incl
stos
pop
pop
lock
mov
push
ja
add
inc
inc
scas
xchg
or
push
fiadds
out
mov
sbb
push
cmp
bound
sub
sub
xor
inc
andb
lahf
ljmp
test
jno
outsl
cmp
sbb
xchg
shl
in
push
xor
pop
adc
fdivr
aas
cmpsl
testb
icebp
inc
leave
jnp
inc
mov
stos
mov
mov
js
adc
sti
iret
inc
mov
sahf
push
add
daa
insl
imul
lods
dec
ljmp
shlb
sub
mov
push
outsb
lea
xchg
xor
and
jnp
sbb
movsl
in
jl
lea
and
dec
cmc
mov
adc
ret
sbb
or
xchg
lods
jne
inc
push
xchg
insl
mov
jo
js
jl
scas
cmp
daa
push
das
mov
jb
pop
adc
dec
rcll
xchg
or
push
stc
jle
inc
and
and
in
cmp
cs
xchg
iret
xchg
xchg
lcall
orl
call
mov
je
jbe
int
lret
xchg
sbb
inc
mov
movsl
pushf
sahf
xor
fs
xor
outsl
add
lock
push
dec
push
xor
out
xor
les
mov
mov
jle
sbb
popa
lcall
or
icebp
mov
adc
mov
stos
pop
fcom
jae
call
stos
ret
add
mov
pop
and
dec
movsl
push
pushf
sarl
xchg
sar
lret
repz
fimuls
adc
ljmp
jmp
pushf
push
lea
jmp
movzbl
movzbw
mov
cwtl
xchg
mov
not
mov
movsbl
push
movw
mov
movw
bswap
lea
mov
lea
movsbw
not
bswap
mov
lahf
push
mov
movb
pushl
ret
cmp
xchg
pushl
pushl
ret
mov
lea
jmp
xchg
jmp
call
not
mov
movzbl
lea
nop
mov
pushf
lea
mov
mov
push
xchg
push
pushf
push
lea
jp
push
pushf
jmp
lea
call
push
pushl
call
lea
jp
xchg
push
pushl
mov
xchg
call
call
inc
jno
stc
mov
xchg
mov
movl
mov
pushl
ret
jmp
xchg
mov
mov
mov
pushl
ret
mov
pusha
pushf
lea
pushf
push
xchg
push
push
pushl
ret
push
call
call
pusha
xchg
pushf
pushf
pushf
pushl
ret
gs
fcomp
std
adc
test
das
push
sub
pop
xchg
and
jge
stos
cld
lahf
or
and
sti
inc
push
dec
ja
dec
popa
imul
test
sub
push
pop
mov
dec
out
mov
js
mov
lahf
xchg
fs
fisubs
xchg
mov
and
sti
mov
mov
jl
push
cmpsb
jmp
addb
fsubr
jp
jmp
cmc
inc
push
cmpsb
sub
jp
rcr
daa
mov
or
fnstsw
fstpt
int
aas
inc
outsl
jge
out
sbbb
or
ret
cmpsl
fwait
mov
xchg
mov
jne
ret
cmpsb
sbb
mov
fstps
mov
icebp
je
inc
popf
pop
in
out
dec
in
movsb
mov
mov
mov
push
dec
xor
pop
pop
xchg
and
lds
sar
jmp
mov
dec
adc
jnp
push
or
in
stos
cmp
dec
enter
xchg
test
mov
mov
adc
mov
lret
xchg
shrb
and
sbb
jge
mov
jns
push
jae
mov
mov
fimuls
fcmovu
mov
cmc
ja
xchg
popf
jae
adc
cmp
int
sub
adc
mov
jecxz
repnz
or
fcmovnu
jp
mov
add
call
push
push
jmp
and
jmp
out
cs
adc
imul
mov
push
fwait
xor
insl
cmp
add
cltd
jecxz
jmp
sub
scas
xor
lods
in
push
movsl
jb
shrb
fistl
lret
lods
out
pop
pop
and
sub
mov
mov
dec
cmpsb
std
nop
scas
push
ret
xchg
push
mov
into
push
xor
call
dec
lds
mov
aam
xchg
jno
out
or
aam
push
in
addr16
cli
push
inc
fwait
out
adc
repz
and
fidivrl
and
mov
stos
pusha
xchg
rcrb
cmpsl
jb
sbb
push
add
inc
push
sub
insl
rcl
add
cs
push
outsb
rcrl
loopne
mov
adcb
adc
mov
addb
push
xchg
add
or
xchg
xchg
das
movb
dec
inc
inc
addl
icebp
add
lods
test
sbb
fwait
dec
xlat
loopne
icebp
lret
mov
mov
cmp
dec
adc
sub
stos
cmc
mov
pop
orl
and
arpl
mov
fcoms
jl
jne
mov
loopne
aad
into
sti
inc
stos
fsubs
mov
and
adc
inc
nop
popf
mov
cmp
scas
adc
ret
xor
rol
lcall
add
mov
test
sbb
loop
sbb
inc
aaa
insb
clc
mov
repz
xorl
mov
xchg
push
hlt
mov
or
sahf
shl
mov
fdivr
push
in
mov
mov
inc
insb
shll
loop,pt
push
cmp
or
incb
repz
jle
into
sbb
xchg
inc
subb
lret
insb
cmp
lret
imul
cmpsl
jb
and
loop
add
xchg
mov
inc
pop
sbb
mov
pop
xchg
mov
mov
lods
pop
mov
jp
fstps
pusha
clc
xor
rcrl
mov
arpl
lods
ja
aad
mov
dec
sub
sub
cltd
push
sbb
inc
hlt
mov
mov
cli
xor
int3
scas
xchg
fldt
arpl
add
das
das
add
push
push
shll
jns
ret
or
loope
and
push
dec
lcall
bound
std
scas
clc
push
and
or
repz
xlat
stos
sbb
xchg
fiaddl
imul
in
lahf
call
push
cmp
ds
mov
push
call
mov
sti
inc
addl
fdivs
scas
out
scas
xor
js
mov
sbb
jle
pop
mov
icebp
push
or
sarb
fistl
loope
lahf
push
and
jae
enter
cmp
arpl
pushf
lods
dec
jae
addr16
insb
xorb
ret
jge
jns
aad
pop
adc
mov
cmpsl
icebp
add
ljmp
hlt
adc
test
sbb
dec
push
push
out
aaa
popf
or
or
das
aaa
orb
jne
push
and
mov
enter
imul
out
mov
pop
or
jecxz
mov
mov
rorb
add
in
push
repz
scas
mov
jecxz
pop
lahf
or
mov
and
cmpsl
mov
outsl
enter
repnz
sbb
jmp
mov
incb
xchg
inc
rcr
add
sbb
pushf
jp
dec
add
or
out
mov
push
push
mov
cmp
sbb
cmpsb
out
mov
jl
xlat
add
xor
je
rorb
lahf
call
js
std
sub
xor
sub
out
mov
out
xchg
shr
mov
sub
add
loopne
mov
mov
mov
push
and
sub
out
rcrl
outsl
js
pmovmskb
gs
pop
inc
or
pop
fsub
sbb
lret
jo
and
mov
add
xchg
dec
jg
cs
or
test
inc
cltd
test
sbb
mov
ret
mov
sbb
adc
ret
daa
jge
cmp
xchg
aaa
add
sti
and
push
aam
lock
and
fldt
jns
je
shrl
inc
test
mov
int3
push
adc
lret
lret
mov
or
idivb
or
repnz
add
lret
push
and
mov
dec
int3
fistps
mov
aam
faddp
andl
cmpsl
mov
cli
and
push
jmp
mov
adc
cmpsb
out
jbe
sub
js
test
sbbb
adc
mov
cwtl
mov
fdivl
push
repnz
mov
pop
mov
es
lahf
cmpl
and
or
push
out
enter
and
daa
jb
bound
sub
ret
outsb
popf
call
lods
ds
cmp
idivb
loop
and
xchg
inc
insb
jno
cmp
push
mov
xor
cmp
pop
or
insb
or
daa
jno
pop
loopne
adc
xchg
daa
out
cli
icebp
mov
mov
dec
mov
push
sub
stos
add
fnstenv
sti
xchg
scas
loop
cmpsl
xor
cmpsb
ss
movsl
aad
cmp
out
lret
scas
stc
push
fsubrs
pop
leave
adc
inc
jp
pop
cmc
inc
aaa
mov
mov
pop
into
stos
sub
outsl
add
cmp
push
cmp
sbb
mov
popa
add
mov
and
loope
cmpsl
xor
mov
mov
sbb
lret
out
adc
sub
pop
into
stos
xlat
cmp
jge
pop
mov
xchg
icebp
stos
lods
mov
push
adc
insl
outsb
arpl
cltd
xor
in
add
mov
std
cltd
pop
into
stos
inc
loopne
inc
and
mov
lcall
or
cmpsl
xor
or
and
and
sbbb
imul
out
dec
xchg
pusha
pusha
call
call
call
push
push
mov
jmp
pusha
movl
pushl
nop
jmp
pushf
movb
jmp
pushf
mov
push
pushf
push
jmp
push
pushl
mov
pop
not
call
lea
pusha
jmp
xchg
push
push
mov
movzbw
movzbw
push
bswap
mov
pushf
movw
mov
pushl
mov
pusha
call
mov
insb
and
movzbw
not
bswap
movzbl
mov
jmp
push
xchg
jmp
call
jmp
pushf
mov
movzbw
call
push
pushl
mov
nop
push
xchg
push
pushf
mov
pushl
mov
push
mov
call
jmp
mov
pop
bswap
pushl
bswap
mov
movb
lea
call
jmp
lea
call
jmp
lea
jp
push
lea
push
xchg
pusha
pushl
ret
xchg
pushf
mov
pushl
ret
pusha
push
xchg
mov
jmp
call
mov
jmp
jmp
bswap
nop
jmp
pushf
jmp
mov
pushf
mov
nop
mov
pusha
xchg
pusha
pushf
mov
pushl
push
jmp
lea
call
push
xchg
pushf
pushl
mov
xchg
not
movsbw
xchg
movsbw
pushf
jmp
pusha
jmp
movsbw
bswap
mov
push
pusha
mov
mov
push
movw
lea
pushf
call
pusha
pushl
lea
lea
jne
mov
pusha
mov
pushf
movb
pushl
ret
mov
xchg
movl
movb
pushl
ret
pushl
mov
movl
lea
jae
push
push
lea
pushl
xchg
pushf
pusha
pushl
pushl
ret
push
call
pushf
call
call
mov
movzbw
call
mov
not
movzbl
jmp
pushf
pushf
lea
push
jmp
movsbw
nop
pusha
push
lea
mov
pushf
lea
call
push
push
mov
pushf
xchg
pusha
mov
pushl
ret
movsbw
pusha
mov
movsbl
call
mov
jmp
jmp
mov
call
call
sarl
push
int3
fdivr
adc
scas
push
xchg
pop
sbbl
fadd
mov
cmp
aas
inc
sbb
dec
and
mov
inc
push
adc
inc
xor
inc
add
mov
xor
addr16
out
push
mov
lcall
mov
pusha
lods
xchg
sub
sub
ljmp
mov
int3
ss
cmpsl
out
pop
stos
mov
loop
xchg
js
mov
shlb
das
push
lods
arpl
xchg
loop
mov
daa
jne
push
fsubl
lcall
jge
cmp
ds
cmp
mov
xor
push
pop
mov
cmp
lret
push
jb
stc
fdivrl
and
dec
pop
stc
shll
sbb
sbb
lahf
dec
scas
stos
out
or
ja
incb
sub
inc
or
mov
aaa
push
call
movsb
mov
jns
inc
sahf
fsubl
sbb
sbb
stc
jp
lock
pop
pop
jp
popa
int3
addr16
sti
pop
and
push
cmpb
add
addr16
in
xor
sub
xor
and
lahf
mov
mov
xor
mov
xlat
fwait
mov
jb
int
lea
push
xchg
cmpsb
mov
and
mov
adc
xor
adc
out
fsubrp
xor
fadds
shll
cmp
fwait
jmp
mov
inc
mov
dec
push
xor
shl
mov
jle
das
inc
cmp
lcall
nop
push
mov
mov
aaa
jno
in
and
mov
sarb
push
lcall
bnd
bound
out
fsubs
loopne
push
and
loope
jmp
pop
mov
not
in
popf
aad
lea
or
cmpsl
xor
mov
hlt
lcall
and
cs
xchg
call
pusha
call
lea
call
mov
pushf
jmp
push
jmp
call
jmp
call
mov
lahf
pop
mov
pushf
push
jmp
movl
mov
call
jmp
xchg
mov
pushl
push
pushl
ret
movb
push
jmp
xchg
push
movw
pushl
ret
xchg
jmp
jmp
call
pop
lea
call
call
jmp
xor
push
pushl
xor
cmp
stc
xorl
clc
push
xor
cmc
clc
xor
test
clc
xor
bt
xor
pushf
bt
xor
push
cmc
pushl
popf
pushf
pushl
ret
lea
mov
xchg
pushl
movw
pushl
ret
jnp
and
fdivr
inc
push
lods
lret
loopne
fmul
jnp
rorb
inc
js
testl
jmp
pusha
xchg
push
xlat
mov
jp
push
negb
fs
or
mov
dec
adc
adc
pop
leave
or
lock
and
jg
or
aas
or
sahf
inc
nop
inc
push
movsb
pushf
jmp
ror
pop
mov
jl
pop
mov
jmp
push
cmp
push
lret
push
scas
cli
ret
aaa
das
mov
test
pop
scas
push
mov
imul
fdivr
and
shrl
inc
aam
mov
push
mov
sarb
push
das
cmpsl
pop
aaa
and
push
xchg
sti
jg
mov
adc
xor
popf
add
push
push
and
loopne
loop
gs
js
ds
push
aaa
and
adc
ljmp
test
mov
mov
adc
push
mov
insb
cmpsb
stos
mov
or
lret
xor
int
ljmp
test
mov
dec
add
dec
adcl
push
movsb
jle
cmp
inc
into
sub
idivb
adc
movsl
xor
push
cmpb
out
mov
bound
in
cmp
add
inc
enter
cwtl
loopne
ds
js
out
stc
mov
mov
mov
sbbl
mov
imul
sub
cmp
dec
stos
mov
scas
cs
inc
mov
jo
pop
cmp
cwtl
loope
lcall
nop
add
xchg
xorb
cmp
xchg
mov
sub
in
out
movsl
das
test
mov
outsl
movsb
add
cmp
imul
jg
mov
pop
imul
movsb
adc
mov
adc
push
sbb
inc
add
jbe
lret
insb
mov
jl
fdivr
shll
out
sub
xchg
sbb
cmc
push
fidivrs
mov
cld
adc
and
rclb
aaa
jmp
lahf
hlt
xchg
cs
pusha
movq
add
loopne
stc
pop
orb
dec
add
sbb
xor
dec
adc
in
ret
ds
cmpsb
pop
clc
aam
xchg
test
sahf
sbb
cmp
leave
xchg
pushf
jg
push
or
aam
into
adc
xor
xchg
rcrl
das
push
aas
lock
jmp
stos
cmp
xchg
jge
sub
aas
cmp
pop
mov
or
andl
cmp
int
xchg
inc
pop
in
js
int
inc
clc
shrl
push
insl
negb
dec
sub
xor
add
stc
xor
pop
stos
lret
scas
add
dec
sahf
dec
in
jns
sbb
fiadds
call
pop
push
inc
push
mov
in
test
adc
xchg
pop
cld
std
scas
mov
xchg
outsl
iret
xchg
cltd
je
fisubrl
pop
push
call
gs
pop
shrl
or
xchg
pop
push
mov
pop
test
ds
stos
inc
aam
inc
rclb
outsl
aaa
adc
or
loopne
std
test
scas
xchg
shrb
xor
scas
mov
adc
push
push
or
mov
jle
push
repz
popa
xor
mov
inc
sbb
mov
jno
aaa
xchg
sbb
movsl
in
xor
sahf
pop
fs
pusha
ror
das
mov
jg
pop
in
dec
and
insb
lds
out
int
cld
popf
xchg
jmp
adc
mov
repnz
dec
cs
dec
mov
xchg
fists
fnstenv
imul
inc
out
mov
cld
xor
mov
dec
outsb
xchg
jg
in
mov
mov
add
in
stos
loope
dec
out
std
imul
jp
jae
mov
es
cmp
xlat
ret
ret
cltd
test
lret
fnstcw
sbb
sub
ret
sbb
dec
pusha
inc
jp
sub
xor
mov
xor
pusha
cld
stos
jae
out
loope
roll
pop
and
sbb
pop
add
or
push
call
xchg
mov
mov
pushl
ret
push
call
jmp
pusha
mov
push
pushl
lea
mov
pushl
push
mov
pushl
ret
call
lea
pushf
xchg
push
push
pushl
ret
call
call
not
mov
movsbl
pushf
nop
movzbl
not
movsbw
push
mov
pushf
pusha
xchg
movb
mov
lea
movb
cwtl
movsbw
mov
push
pushl
mov
jmp
lea
jge
mov
pusha
mov
lea
mov
pop
mov
bswap
mov
pusha
pushl
ret
jmp
call
mov
jmp
call
push
xchg
pushf
pushl
pushl
ret
xchg
pushl
movl
pushl
ret
lea
jmp
jmp
testl
cmp
cltd
leave
data16
xchg
in
or
imul
mov
fstpl
setle
test
je
inc
das
inc
mov
lds
mov
pop
out
fimull
or
adc
pop
lret
sub
or
hlt
inc
mov
xor
fwait
push
jmp
push
sub
mov
in
and
std
pop
cmp
aad
push
test
out
pop
push
lcall
aam
fwait
aad
mov
mov
adc
test
xlat
jns
aad
inc
sub
push
enter
int3
inc
test
arpl
mov
mov
int3
repz
mov
les
mov
or
test
mov
pop
movsl
iret
push
inc
fidivl
mov
mov
out
cmp
jle
mov
arpl
inc
arpl
pop
shrb
mov
fsubr
fiadds
or
faddp
dec
leave
movsl
repnz
pop
testl
pop
mov
lods
lods
sbb
lea
xor
cmpb
arpl
cmp
mov
mov
pop
bound
xchg
adc
push
orl
cmpsl
xchg
mov
and
dec
xchg
faddl
xchg
repnz
shrb
push
push
test
jecxz
push
xchg
cmp
xchg
or
and
jae
xlat
jecxz
loope
das
rcr
mov
lods
fdivrl
sub
aad
sarl
cmp
xchg
sbb
ja
push
dec
cmpsl
orl
sahf
or
in
test
ja
add
cmp
push
testl
nop
or
stos
movsl
pop
jne
push
daa
pop
jns
cmp
mov
leave
movsl
repnz
fisubrl
mov
and
and
sub
movsb
jb
lea
inc
jo
mov
das
add
mov
sub
sbb
inc
xchg
push
cmp
jno
in
fildl
mov
jmp
cli
pushl
pop
xor
fsubrs
jmp
push
cmp
xor
jg
js
outsl
push
movsl
popf
mov
test
push
xor
stos
xchg
clc
mov
mov
stos
mov
rol
jo
cltd
jne
sub
dec
pop
add
dec
adc
adc
sbbb
fwait
nop
cmp
je
pushf
add
mov
sti
mov
fcoml
lret
adc
xchg
jge
or
cmc
and
adc
push
inc
into
cmc
rolb
out
inc
jge
xchg
ret
adc
iret
mov
test
mov
inc
test
jl
jbe
jns
jle
inc
add
leave
adc
fisubs
mov
inc
mov
pop
in
mov
pop
repz
lahf
xor
inc
les
add
mov
push
int3
mov
cmpsb
jo
or
xchg
in
sub
cltd
mov
pushl
cmpsb
aad
outsb
mov
clc
inc
mov
lods
push
and
and
out
mov
mov
out
dec
out
mov
mov
jge
adc
push
xor
repz
jecxz
mov
scas
in
mov
or
pop
mov
in
enter
popa
mov
notl
stc
cli
out
insl
into
out
xor
mov
int3
sbb
dec
out
dec
jns
out
mov
out
mov
shrl
sbb
mov
call
mov
sti
inc
jmp
adc
les
and
into
jp
sbb
out
push
sbb
mov
je
pushf
xor
cmp
push
lret
aad
mov
mov
push
insl
aaa
aad
movsl
xchg
mov
out
inc
mov
das
adc
sbb
sbb
pop
shrl
or
call
repnz
lock
das
ret
or
pop
mov
ret
push
ja,pn
inc
or
mov
lock
iret
pop
jmp
xchg
add
dec
lods
repnz
or
xchg
xorl
mov
arpl
jnp
cmpsb
push
xchg
mov
imul
fmulp
cltd
dec
xor
sub
lret
add
lret
enter
cltd
lcall
cmp
imulb
jle
aad
push
dec
icebp
shl
mov
mov
bound
mov
test
call
repz
ds
dec
push
xor
mov
cmp
incl
dec
inc
push
mov
dec
push
add
inc
mov
push
or
add
pushl
push
dec
pop
adc
insb
sbb
xchg
add
repz
stos
sub
mov
ss
movsl
or
out
xchg
jno
cmp
mov
out
mov
pop
jnp
mov
or
push
sub
xchg
sub
push
pop
inc
mov
pop
je
movsl
in
or
sbb
inc
cmp
lea
negb
fistps
jo
mov
fdivl
gs
jns
repnz
adc
in
or
push
je
enter
add
les
fldt
pop
lods
fidivs
call
jb
mov
push
arpl
sbb
inc
xchg
insb
cwtl
add
sub
jnp
jg
loop
mov
sti
icebp
lret
xchg
and
inc
and
jnp
loopne
sub
inc
fcmovu
xchg
jge
orb
mov
iret
fisubrl
inc
add
push
fs
ror
into
ret
ljmp
orl
test
mov
mov
fstpl
push
paddw
popa
inc
add
incl
and
jbe
sub
inc
mov
jecxz
xor
test
jmp
aaa
xchg
cmp
cmp
xor
pushl
adc
xor
aam
mov
xchg
jae
arpl
add
jnp
xor
push
mov
fwait
setno
push
or
scas
nop
std
sahf
add
mov
add
sub
sub
jle
jmp
pop
test
das
idivl
in
nop
or
dec
add
repz
std
xor
loopne
outsb
add
or
or
divps
or
mov
xor
lock
loope
popf
popa
add
int3
adc
add
dec
pushf
mov
pop
es
sub
orb
bound
cs
xchg
sbb
mov
dec
es
dec
sub
jge
push
negl
sub
int3
outsb
mov
jb
mov
xlat
mov
fildll
adc
cmp
aas
inc
jecxz
sub
inc
outsb
shlb
fcompl
ds
xchg
or
cmp
push
push
lss
in
fwait
aad
lods
cli
fnstcw
sarl
stc
loop
in
out
cmp
adc
jnp
mov
cmp
fstpl
sahf
out
addr16
xchg
mov
ficomps
cmp
call
test
rep
lods
jb
adc
pop
mov
mov
idivl
cmp
mov
sub
imul
movsb
test
cli
xor
or
mov
or
and
imul
mov
insb
jno
xchg
out
xor
sbb
dec
int3
hlt
jne
out
add
sbb
fs
mov
sbb
repnz
outsl
sub
sub
jl
and
jne
lcall
add
cmp
sbbb
data16
dec
pop
notl
add
movsb
add
push
pop
xchg
jne
sub
and
dec
int
lret
dec
xchg
mov
jns
xor
mov
aad
loopne
xchg
jp
add
iret
push
stos
xchg
adc
dec
lret
enter
lock
imul
outsl
arpl
in
dec
psubd
jnp
jno
xrelease
lea
jle
xchg
pushf
pushl
pushl
ret
movzbw
mov
call
xchg
mov
mov
push
pushf
pushl
ret
mov
pusha
call
pusha
lea
mov
call
call
pushf
call
pushf
nop
jmp
mov
jmp
xchg
mov
pushf
push
pushl
ret
movb
call
jmp
adc
cmp
std
frstor
mov
pop
jo
cmc
xchg
xchg
lock
addl
ss
sbbl
dec
rorb
inc
lods
pusha
bound
fcoms
fiaddl
int
adc
inc
faddp
out
mov
test
inc
mov
sub
push
pop
mov
repnz
ficomps
loopne
push
imul
ret
cmc
add
je
int
push
add
fbstp
mov
and
xchg
and
fidivl
sub
xchg
cmp
imul
dec
push
shrl
stos
add
xchg
movsb
lock
movsb
and
cld
cmp
js
mov
aam
pusha
rorb
mov
aad
jb
dec
stos
cli
cmpl
dec
mov
or
adc
pop
ror
lock
push
int
xchg
loop
push
cmpsl
and
lds
dec
sti
iret
pop
scas
in
enter
mov
pusha
jae
lock
loopne
outsl
fs
iret
sbb
inc
cmp
incb
push
xchg
out
jg
or
lock
xor
aaa
jbe
idivl
inc
test
lahf
ret
test
xchg
mov
mov
mov
pop
call
mov
jne
push
sbb
ret
xlat
js
jg
aam
jl
repnz
lret
cmc
cs
lcall
mov
ja
sbb
scas
add
xor
jae
sub
add
pop
scas
sub
insl
pop
ds
xchg
mov
mov
aaa
mov
daa
jge
or
jb
xor
test
dec
das
xchg
icebp
frstor
insb
sbb
stc
push
enter
xchg
lock
dec
adc
mov
fs
xchg
pop
xlat
push
fadds
mov
cmp
fmul
filds
daa
dec
sub
xor
mov
lcall
sub
xor
fs
es
decb
xor
cmp
popa
nop
das
mov
mov
jecxz
cmp
xchg
mov
sbb
sahf
in
repz
lcall
fiadds
sbbl
xor
xchg
ljmp
aad
mov
xlat
movsb
inc
push
in
outsl
inc
bound
aaa
xchg
je
adc
test
adc
mov
or
scas
mov
iret
push
repnz
jne
xchg
adc
dec
xchg
int3
push
into
repnz
add
and
loopne
xor
adc
sub
ret
and
daa
mov
push
subb
rcrb
popa
fwait
fs
test
mov
cltd
stos
stos
cmp
popa
sub
adc
jne
into
mov
je
mov
cmp
orl
pop
ret
inc
mov
add
add
mov
aaa
mov
jmp
mov
xchg
iret
addb
outsb
loop
aad
insb
cmp
sub
dec
es
dec
enter
sbb
pop
xchg
notl
mov
test
scas
stc
sahf
data16
xchg
int3
iret
pop
mov
jns
inc
inc
mov
inc
pop
insl
pop
mov
mov
jmp
cmp
test
sub
in
xor
adc
push
shll
xchg
test
andl
idivl
das
leave
sar
ss
icebp
dec
sub
sarb
dec
nop
and
inc
cltd
loope
jmp
inc
and
jbe
jnp
push
aam
sbb
cli
add
cmp
push
dec
xchg
ror
cmp
fwait
in
fiadds
int
xchg
jmp
fwait
arpl
sbb
inc
inc
pop
aad
aaa
fwait
cmpsl
dec
push
sbb
adc
jae
aad
ds
les
xor
test
dec
mov
nop
into
popa
mov
push
adc
xlat
dec
push
insb
adc
lds
add
test
push
inc
js
inc
lcall
mov
ret
push
adc
je
arpl
jno
icebp
dec
sub
mov
inc
je
inc
gs
xor
fs
or
loope
dec
out
pop
mov
and
aaa
test
sti
sub
xlat
jae
inc
insb
out
add
push
fsubs
iret
stos
jns
clc
push
sbb
icebp
lahf
lods
out
sbb
popa
sbb
mov
xchg
jecxz
pop
inc
sbb
scas
pop
hlt
pop
repnz
mov
fwait
mov
xchg
test
lods
fmuls
mov
cmp
nop
pop
push
rcrl
lea
ret
ja
sub
mov
or
pop
fbstp
jl
mov
bnd
inc
or
icebp
seto
mov
cmp
mov
leave
repnz
mov
cmpsl
shl
scas
incl
faddl
movsb
add
pop
adcb
lret
lock
decl
xlat
sub
lahf
mov
cli
jge
xor
bound
sbb
stos
in
loope
jnp
jne
jb
mov
jecxz
inc
insl
cld
dec
jp
xchg
into
fistpll
lret
pop
jmp
lahf
or
sub
and
ret
lods
scas
sub
push
cmp
jp
adc
rorb
popa
fldcw
pushf
push
jns
cmp
and
repnz
movsb
fisubs
jnp
mov
cmpb
add
movsb
push
out
inc
push
pop
and
mov
fdivs
jns
test
test
mov
jmp
pop
add
adc
imul
test
jmp
xchg
sbb
sbb
push
and
icebp
clc
mov
pop
pop
lock
pop
lds
pop
cmp
nop
in
mov
fldenv
xchg
push
push
data16
add
or
ss
inc
pusha
dec
pop
jmp
mov
pop
inc
jb
dec
pushf
out
xchg
pop
jg
or
dec
and
push
mov
xor
sbb
xorb
jge,pn
fisubrl
loop
mov
movsb
xchg
add
test
push
movsb
ret
mov
loop
push
pop
and
mov
dec
and
push
ret
xor
fisubs
pop
pusha
mov
push
pop
mov
dec
int
das
sbb
call
test
shlb
xlat
in
and
sub
jno
xor
or
xor
xor
cmp
sub
xchg
xchg
nop
cmc
fndisi(8087
and
add
arpl
mov
mov
repz
xlat
mov
cmp
inc
flds
cmp
divb
inc
in
mov
cmp
incl
jg
rcr
pop
aad
insl
hlt
add
cmp
push
cli
inc
xor
idiv
orb
xor
filds
push
ja
jo
aad
ret
rcrl
sbb
aas
sbb
fists
data16
push
pop
push
insb
fcompl
dec
sub
aas
cmp
ja
ret
gs
out
jb
jg
jg
shr
dec
out
in
int3
xor
xchg
mov
dec
mov
filds
and
jp
xchg
into
dec
pushf
adc
jecxz
xchg
jbe
pusha
mov
not
pushf
setle
mov
call
lea
movw
call
push
call
xchg
pusha
pusha
pushf
pushl
ret
push
jmp
pusha
pushf
mov
jmp
jl
push
pusha
pushl
mov
movb
push
jmp
call
mov
pushf
jmp
xchg
pushf
mov
pusha
push
pushl
ret
cs
push
inc
in
dec
testl
dec
leave
negl
pop
fcmovnbe
dec
sub
and
mov
mov
xor
pop
insl
hlt
sarb
fisttpl
in
cmpsl
adc
insb
fmulp
cli
xchg
mov
hlt
dec
or
test
jns
popa
sub
es
lret
out
cwtl
jo,pt
and
jnp
popf
push
fwait
jmp
jle
or
lret
sbb
mov
std
sbb
dec
mov
push
sbb
dec
lock
outsb
mov
mov
lcall
xor
cmp
iret
and
stc
fcomps
push
mov
leave
fisttps
sbb
sti
xchg
mov
incb
sub
push
cmp
loope
aad
clc
cmp
scas
xchg
aad
and
or
cmpsb
bound
movsb
imul
push
das
aas
pop
push
lahf
xchg
into
xchg
sti
and
in
mov
inc
das
fisubrl
insl
mov
lods
mov
test
lret
cwtl
ror
sbb
xor
test
lcall
jle
imul
ljmp
xchg
push
nop
sub
xor
enter
sub
xor
mov
jne
into
outsb
jbe
adc
pusha
shlw
shlb
mov
mov
xlat
stos
je
outsl
push
sbb
cli
pusha
jae
dec
xor
push
cmp
insl
lds
test
pop
pop
jmp
xor
add
jne
daa
add
add
push
mov
xor
jge
adc
out
ja
cmp
lcall
outsb
adc
addl
pop
movsb
adc
cmp
jae
les
movsl
movsl
cmp
adc
cmp
cmpb
fldl
insl
sub
dec
bound
fdivr
pop
dec
jmp
mov
fdivp
enter
push
dec
clc
cmp
inc
xchg
sbb
and
mov
les
pusha
xchg
push
mov
pop
jl
or
inc
ja
xchg
std
push
out
std
push
fwait
pslld
mov
mov
jns
add
jmp
mov
sbb
dec
mov
mov
addr16
hlt
cmp
xchg
lods
adc
inc
adc
fcomps
push
cmp
mov
jae
push
enter
rcrb
and
sbb
fs
lahf
jbe
sbb
or
das
pushf
xchg
push
and
xlat
sub
push
sarl
stc
inc
xchg
out
xchg
divb
andb
jo
aad
sbbb
mov
fs
pop
movsl
jmp
outsl
jb
mov
sti
jne
lock
mov
jecxz
dec
dec
xlat
push
push
addr16
push
stos
push
pusha
and
dec
cwtl
repnz
adc
shlb
add
dec
mov
inc
fwait
imul
cmpsb
iret
imul
in
ljmp
xchg
sub
cmp
push
stos
mov
push
cwtl
repz
lcall
inc
or
jo
subb
data16
jge
cmp
adc
adc
push
cmpsl
lock
xchg
ficomps
test
xchg
push
jne
sub
enter
jg
in
std
inc
inc
jo
in
cmp
xchg
faddl
jl
jl
mov
add
xor
adc
pop
ret
mov
insb
mov
rolb
pop
mov
insb
repnz
sub
lock
popa
pop
aad
mov
jmp
ret
aaa
dec
sub
js
adc
and
repnz
mov
mov
bound
aad
std
insl
sti
es
xlat
pop
xor
gs
mov
cli
push
pop
mov
jne
or
jecxz
nop
push
test
or
mov
aam
in
jno
orb
mov
mov
xchg
not
mov
jmp
nop
call
lea
call
movsbw
nop
lea
not
pop
pusha
call
movb
lea
pusha
jmp
pushf
mov
pusha
jmp
pusha
lea
push
pushl
pushf
movw
xchg
push
movb
pushl
ret
movzbw
push
jmp
bswap
mov
pushf
jmp
call
mov
mov
mov
call
jmp
bswap
nop
pushf
call
lea
jge
pusha
pushf
xchg
mov
movb
pushf
pushl
ret
pushf
mov
nop
mov
call
pusha
call
push
push
call
movsbw
setno
nop
call
pusha
pusha
pushl
movb
mov
jmp
jmp
mov
push
call
movl
jmp
mov
mov
call
pushf
xchg
pushf
pusha
pushl
pushl
ret
call
call
call
pusha
push
jmp
call
mov
xor
call
jmp
pushf
call
xchg
push
pushl
ret
mov
pusha
mov
pushf
movw
call
mov
lea
jo
pusha
pusha
lea
pushf
xchg
push
movb
push
pushl
ret
mov
mov
pushf
call
mov
call
push
nop
movw
xchg
bswap
jmp
call
mov
call
pusha
mov
call
movb
lea
call
call
lea
not
bswap
nop
call
jmp
pushf
pushf
mov
call
pushf
call
mov
call
mov
push
mov
mov
lea
jmp
mov
mov
push
xchg
call
call
movzbw
seto
lea
nop
lea
not
pop
jmp
xchg
not
jmp
movb
jmp
mov
pushf
jmp
movb
lea
push
lea
jb
xchg
pusha
pusha
mov
pushl
ret
call
lea
jl
nop
movsbl
jmp
jmp
mov
lea
pushf
call
mov
mov
jmp
lea
jmp
pushf
push
mov
mov
xchg
pushf
pusha
push
pushl
ret
pushf
xchg
push
pushf
push
pushf
pushl
ret
xchg
pop
movzbl
movzbw
mov
movb
call
push
call
push
mov
xchg
movb
xchg
movzbw
mov
pushf
mov
jmp
movb
jmp
call
pusha
pushf
pushf
xchg
mov
pushf
pushl
ret
lea
lea
js
push
movw
mov
jmp
jmp
mov
jmp
pushf
movb
lea
call
mov
pusha
mov
call
lea
ja
pusha
mov
lea
mov
call
nop
call
nop
pusha
pusha
mov
jmp
movl
mov
push
setnp
mov
call
pushf
mov
mov
lea
movb
xchg
pushf
pushf
pushl
ret
call
call
movb
lea
pushf
push
pushl
call
jmp
call
jmp
call
nop
pusha
mov
pushf
pushl
mov
pushf
mov
call
lea
jmp
pusha
nop
push
mov
jmp
not
nop
bswap
not
pop
call
lea
pushf
mov
call
mov
push
lea
pushf
xchg
pushl
pushf
pushl
ret
lea
jae
pusha
movb
lea
push
xchg
pusha
pushf
pushl
ret
pushf
movb
lea
pusha
push
push
mov
lea
bswap
movsbw
mov
pushf
jmp
call
mov
pushf
jmp
mov
movb
call
xchg
movb
pushl
ret
lea
call
mov
mov
mov
mov
call
xchg
jmp
xchg
pushf
mov
pushf
movb
pushl
ret
mov
movzbw
movzbw
mov
pusha
mov
mov
lea
jp
push
lea
pusha
jmp
jmp
xchg
mov
pushl
ret
call
mov
lea
mov
xchg
movl
mov
pushl
ret
call
xchg
jmp
mov
jmp
mov
jmp
movsbw
setae
nop
not
movsbw
pop
jp
push
xchg
push
push
jmp
mov
jmp
pushf
movl
pushf
pusha
pushl
mov
movl
mov
pushf
pushl
lea
jmp
pushf
mov
pushl
lea
movb
lea
ja
push
mov
xchg
mov
pusha
push
mov
pushl
ret
call
mov
bswap
pop
call
xor
push
xorl
pushl
xor
pushf
xor
call
nop
pusha
not
mov
jmp
setl
not
bswap
push
nop
pushf
movzbw
lea
pushf
mov
pushl
xchg
pushf
movb
pusha
xchg
call
xchg
pushf
pushl
movw
movb
pushl
ret
mov
push
call
jno
pushf
pusha
xchg
pushl
pushf
push
pushl
ret
mov
jmp
nop
pusha
mov
xchg
lea
jo
push
movsbl
pusha
mov
pop
xchg
movsbw
movzbl
pushf
mov
movzbl
bswap
mov
pusha
lea
jmp
jmp
pusha
pushf
call
mov
mov
jmp
call
pushf
pushf
mov
lea
mov
xchg
mov
mov
pushl
ret
push
movb
mov
pushl
call
call
xchg
bswap
pushf
mov
bswap
mov
call
lea
jmp
lea
pop
lea
movsbw
bswap
mov
jmp
lea
mov
movb
movb
xchg
pushf
movl
pushf
pushf
pushl
ret
mov
pusha
pushf
jmp
movzbw
mov
mov
mov
jmp
pusha
pushl
pushf
mov
pushf
push
lea
pushf
push
jmp
lea
jmp
pushf
pushf
mov
call
movb
mov
call
mov
push
call
push
push
pushf
pushf
nop
pushf
mov
call
cmp
xor
jmp
call
lea
jmp
lea
pushl
call
xorl
test
push
xor
stc
xor
cld
pushl
popf
movw
pushl
ret
pusha
pushl
pusha
mov
bswap
mov
push
call
pusha
movl
pushf
pusha
pushl
movw
lea
jmp
pushf
nop
mov
call
pushf
pushf
mov
movw
pushf
lea
jg
push
lea
call
movzbl
movzbw
mov
nop
mov
mov
pushf
pushf
call
lea
call
je
mov
fdivr
mov
int3
adc
mov
push
jne
mov
mov
lcall
and
loope
movsl
mov
cs
mov
repz
scas
xchg
mov
insl
cmpsb
xchg
xor
adc
sub
cmp
ja
int
adc
leave
pop
xor
mov
dec
loope
and
std
test
aaa
js
cmpsb
push
mov
mov
stos
nop
xchg
push
mov
or
mov
insl
and
or
and
cmp
add
and
push
xor
sub
sub
push
mov
dec
add
mov
and
std
mov
push
mov
test
es
mov
mov
dec
dec
pop
out
and
into
out
lcall
mov
sbbb
dec
cmpb
pop
js
lea
jo
andb
jp
je
movsl
inc
rol
cltd
pushl
jmp
push
insb
cmp
outsl
mov
pushf
je
rcll
aam
push
dec
mov
jb
lods
fwait
aad
fisubrs
insb
in
dec
sbb
in
lahf
out
push
jnp
push
dec
cmp
test
daa
iret
jb
in
sub
out
cmc
mov
iret
cmp
hlt
roll
inc
aas
jbe
add
fs
mov
lods
rcr
mov
add
repnz
stos
icebp
cld
xor
xorl
or
push
ffreep
add
out
dec
add
shrl
mov
xlat
aas
mov
pop
test
out
in
popl
outsl
cmp
aad
bound
xchg
inc
cltd
xlat
xchg
mov
insb
aad
std
xchg
jnp
lret
xor
movsb
sbb
imulb
push
aam
imul
arpl
ret
or
ss
xor
jb
scas
addr16
pop
adc
and
std
into
cwtl
inc
push
fs
pop
les
cmp
mov
or
and
sbb
pushf
cltd
cmp
cld
sub
fnstsw
and
xchg
std
inc
sbb
popa
push
pop
insl
jp
jae
pop
lcall
xor
sub
sbbl
test
rcrb
ret
mov
aad
xchg
stc
imul
mov
loopne
sub
orb
jnp
jno
mov
inc
jle
pop
jp
mov
repz
mov
xlat
cmp
mov
jmp
pop
mov
cs
das
mov
dec
rorb
or
out
mov
in
ljmp
xor
mov
cmpsl
mov
mov
call
mov
pop
jns
ret
pushf
data16
jns
mov
adc
pusha
inc
pop
mov
sbb
iret
jne
scas
das
test
leave
sbbl
pop
lods
movb
rcrb
into
jb
testl
in
repz
sub
scas
fcoms
mov
add
add
std
jl
fcmovu
mov
ljmp
sbb
pop
dec
xor
pop
jmp
popa
mov
scas
cmpsb
jo
or
jp
push
inc
mov
add
das
cmp
push
loop
sub
fisubrs
rcr
sub
clc
insb
loop
xchg
dec
fldcw
repnz
pop
insl
pop
aaa
add
xchg
sub
adc
add
js
in
popa
notb
inc
push
loope
and
xchg
test
outsb
push
sahf
test
js
add
and
aaa
adc
push
out
push
divl
mov
sub
jb
inc
xchg
pop
popa
int
pusha
mov
lcall
xchg
cmpb
test
fisubs
popf
mov
inc
add
scas
loopne
push
mov
das
loop
and
movsl
pop
ja
sub
push
add
stos
dec
push
mov
rcll
jbe
out
js
les
loope
sub
iret
pop
in
in
movsw
sbb
mov
shrb
and
pop
clc
mov
sub
decl
add
push
sar
jmp
xchg
fstpt
and
je
pop
push
call
pushl
push
mov
pop
bswap
not
movsbw
mov
call
nop
pushf
jmp
pushf
movl
pushf
movw
push
jmp
pushl
xchg
pushl
mov
pushl
ret
pushf
jmp
seta
nop
bswap
pop
jmp
pushf
mov
jmp
xor
call
lea
jmp
mov
mov
push
mov
pushf
mov
call
mov
not
not
bswap
mov
call
pusha
lea
call
lea
call
mov
xchg
pop
not
mov
pusha
jmp
jmp
nop
movb
movl
mov
call
xchg
pushf
pushf
push
mov
pushl
ret
jmp
mov
push
lea
push
jmp
movw
bswap
mov
push
pushf
pushf
pushl
ret
pusha
jmp
jmp
push
call
jmp
xchg
jmp
mov
bswap
movsbl
mov
jmp
push
push
lea
jg
lea
call
push
and
sbb
std
sbb
mov
sbb
push
add
test
adc
dec
aaa
jecxz
add
movsl
pop
test
cs
pop
data16
dec
fst
pop
jo
pop
pop
jle
xchg
or
cmp
in
cld
lods
pop
addl
dec
adc
adc
pop
rcrb
mov
out
xor
das
jl
loope
mov
and
movsl
bound
leave
mov
clc
inc
ss
testb
aad
jg
pop
aam
jbe
or
scas
jecxz
arpl
push
or
push
ja
call
sbb
std
cs
lahf
in
cmc
and
aaa
in
aaa
inc
lea
fnstenv
jb
xchg
inc
nop
fisttpll
pop
pop
and
dec
out
insl
dec
aaa
mov
and
into
sub
dec
scas
stc
lock
sub
icebp
dec
cmpsl
sbb
std
les
dec
sbb
push
mov
add
cltd
in
add
in
iret
push
mov
adc
or
or
lods
loope
add
inc
pop
repnz
add
pushf
inc
push
mov
mov
ds
jmp
jl
sub
lods
icebp
inc
dec
push
repnz
fistl
push
inc
push
ja
push
loopne
pop
push
and
inc
adc
mov
and
jae
loopne
test
ja
imul
bound
jl
add
sarb
xor
sub
leave
xor
add
mov
mov
mov
and
into
loop
outsb
cmp
orl
js
fmul
adc
pusha
test
hlt
mov
or
jp
and
mov
add
dec
jae
jle
mov
sub
test
inc
ja
mov
cmpsb
jp
std
jl
leave
adc
jmp
and
xor
js
cmp
mov
pop
pop
inc
mov
pop
jp
and
sub
leave
cs
push
cmpsb
or
into
pop
mov
pop
arpl
xchg
jp
and
int3
mov
imulb
push
lahf
test
sbb
std
cli
inc
jmp
js
add
dec
pop
sub
mov
bound
mov
and
aas
adc
xor
sub
rcrl
cld
fsubs
aas
xchg
and
es
pop
push
jecxz
fimuls
sahf
into
in
xchg
daa
jo
xchg
out
outsb
in
mov
mov
jg
repnz
andb
in
mov
test
gs
jb
and
push
mov
jnp
sub
mov
loope
movsl
jbe
or
jmp
push
sahf
cmp
jnp
and
sub
pop
movsb
mov
jp
sub
loop
fs
push
lret
jmp
lock
sarl
repz
icebp
cmp
xor
fbld
mov
or
test
test
and
lret
popa
lea
in
daa
fsubs
mov
icebp
inc
div
xlat
pop
jo
inc
jno
push
js
jmp
jp
jne
scas
sbb
scas
mov
pop
mov
int3
insl
scas
sub
sti
lahf
pop
pop
mov
pop
icebp
sarl
insb
sti
test
aam
int
inc
je
fidivs
mov
int
push
mov
cmp
inc
nop
or
pop
pop
push
mov
mov
out
mul
or
inc
mov
cmp
mov
fcoms
sub
shlb
mov
movsl
in
xchg
or
sbb
dec
push
jbe
inc
dec
add
js
pushf
inc
pop
int3
jp
jmp
js
outsb
lret
pop
iret
popf
xchg
int3
xchg
insl
xor
pop
inc
adc
mov
pop
jle
cmp
scas
jbe
clc
dec
lea
ljmp
adc
add
lock
cmpsb
jecxz
mov
arpl
pushl
dec
mov
inc
cmpb
mov
sub
mov
xchg
call
call
movb
movl
pushf
mov
movb
pusha
lea
jmp
pushf
jmp
xchg
bswap
mov
movsbw
lea
mov
call
jmp
pusha
movw
mov
mov
jmp
jmp
lea
pushf
jmp
lea
jmp
jmp
imul
loope
lods
xchg
movb
mov
pushl
pusha
mov
movb
mov
push
lea
jno
pusha
pushf
lea
call
jmp
xchg
not
lea
mov
call
call
call
mov
call
jmp
call
bswap
jo
movzbl
movsbw
nop
movzbw
pusha
movzbw
pop
mov
pusha
call
lea
pushl
xchg
pushf
push
pushf
pushl
ret
movb
xchg
pushf
movzbl
movsbw
movzbw
mov
pushl
call
mov
jmp
lea
jno
pushf
xchg
pusha
pushl
ret
lea
pushl
call
bswap
push
pushf
nop
not
mov
pusha
xchg
lea
jp
push
jmp
pushf
lea
jmp
add
and
pusha
rolb
push
pushf
mov
call
pop
pushf
xchg
call
movzbw
nop
push
pushf
jmp
pop
call
mov
pushf
mov
pusha
call
mov
lea
pushf
push
pushl
pushf
xchg
pushl
pushl
ret
sbb
fiaddl
add
mov
inc
sbb
lea
movb
push
mov
mov
call
push
mov
mov
lea
movb
mov
mov
push
movsbl
mov
pusha
mov
movl
jmp
push
jmp
mov
xchg
pushf
push
movl
pushl
ret
movsbw
mov
call
xchg
push
pushl
ret
pushf
call
lea
pushf
xchg
pushf
pusha
pushl
ret
mov
push
pushf
lea
mov
movl
xchg
mov
movb
movw
pushl
ret
mov
movsbl
jmp
lea
jae
push
mov
lea
mov
call
xor
jb
xchg
lds
push
mov
xchg
dec
scas
andb
push
pop
mov
adc
ds
inc
popf
adc
dec
sub
ja
aad
and
popf
xlat
mov
inc
scas
pop
out
fbstp
in
dec
icebp
rorb
and
push
xchg
filds
fidivl
repz
insb
hlt
imul
pop
jbe
mov
nop
lods
je
xlat
test
xor
mov
pop
cmpsl
call
lahf
mov
pop
sub
pop
aas
mov
aam
push
add
xchg
pop
out
cmp
test
fcoml
jns
pop
ds
test
ja
and
sub
pusha
les
lcall
mov
mov
add
daa
xchg
shl
adc
mov
ljmp
xchg
or
mov
loope
test
dec
xor
xor
mov
clc
push
push
cs
stos
xor
pusha
sub
push
inc
fmuls
rolb
rolb
inc
or
push
or
or
adc
xor
mov
jne
adc
pushf
pop
xor
mov
jae
xor
nop
adc
push
lret
sbb
mov
jmp
fsubl
mov
jns
outsl
xor
jbe
push
iret
repnz
fnstsw
sbb
or
addr16
shl
insl
dec
sbb
and
andb
int3
xor
into
xchg
jge
jle
lea
jns
dec
lds
add
cmp
fst
dec
pop
sbb
cwtl
push
sbb
jno
mov
jns
push
adc
mov
repz
iret
adc
pop
les
test
scas
jl
andl
xor
adc
imull
add
jp
dec
nop
cmpsl
xchg
add
mov
es
nop
das
xor
add
xor
mov
negl
mov
add
mov
cmpl
pop
xchg
sub
lcall
sahf
push
ja
cmpsl
sbb
pop
roll
cmp
pop
mov
xor
stc
int
push
xorb
or
outsl
sar
pop
and
insb
mov
incb
push
stc
cwtl
aad
into
sbb
insl
push
dec
mov
mov
test
fdiv
push
mov
cltd
pop
jecxz
xchg
jbe
mov
pop
add
adc
loop
and
mov
movsb
rcrl
add
push
jl
lahf
cmpb
sarl
sbb
mov
mov
int
test
stc
push
movsl
sbb
out
mov
dec
adc
nop
sub
out
dec
lds
in
dec
push
in
gs
arpl
ss
and
int3
scas
arpl
jmp
jmp
push
dec
xchg
jbe
or
je
clc
addl
pop
fildll
rclb
adc
xorl
mov
adc
nop
sub
push
jne
dec
xor
int3
in
daa
fists
sbb
std
inc
scas
jmp
ss
lret
loope
mov
fabs
mov
xchg
pop
mov
adc
setle
sbb
push
and
and
daa
mov
call
and
enter
dec
sbb
sbb
sbb
add
shr
imulb
fldl2e
es
pop
test
nop
scas
mov
sbb
and
int
nop
or
loope
jns
ret
jnp
test
dec
shr
cli
fcmove
nop
repz
test
loope
mov
sbb
mov
mov
inc
push
mov
test
or
outsl
testl
pop
fstps
inc
inc
mov
movsb
xor
or
xchg
xchg
insl
iret
fidivrl
pop
dec
into
and
out
or
ret
xchg
xor
jp
sub
inc
mov
fldenv
jns
jae
dec
nop
filds
std
push
lods
cmp
jge
hlt
jge
jle
stc
outsl
push
xor
jge
sbb
in
mov
arpl
xchg
das
gs
out
rcr
aam
jp
inc
cltd
mov
les
fnop
xchg
inc
lock
mov
je
sub
xor
aam
test
dec
or
lahf
rclb
popf
mov
inc
mov
ds
xor
xor
xlat
adc
loope
fsubp
mov
inc
or
ret
fsubr
mov
pop
xor
mov
cmpsb
sub
js
popa
mov
loop
pusha
mov
mov
xchg
arpl
ljmp
or
pop
mov
inc
xchg
xchg
les
scas
sub
push
rcr
cmp
clc
push
jmp
pop
jle
aaa
jns
jecxz
pop
mov
lds
xor
ss
std
adc
in
mov
testl
jge
add
cwtl
rcrb
jg
ss
shrb
mov
mov
lret
jmp
jno
stos
out
inc
and
xor
push
mov
jp
adc
mov
pop
or
cmp
ret
xchg
outsb
daa
mov
mov
pushf
add
popa
scas
mov
mov
test
mov
into
cs
sub
adc
and
dec
add
imul
adc
xchg
test
add
movsb
adc
adc
cld
push
test
pop
cmpsb
mov
popf
fmul
andb
jp
push
mov
subb
aam
or
sbb
leave
xchg
sahf
fisttpl
test
push
mov
mov
fsts
inc
jne
push
pop
insb
repz
repz
cmpsl
psubusb
in
or
int3
mov
pusha
push
add
pop
or
test
push
xadd
cmp
aaa
mov
xchg
xchg
or
inc
jns
pushw
jge
jg
iret
scas
or
movb
cmp
aas
mov
dec
mov
xor
ja
imul
add
iret
cmpsl
cltd
js
filds
pushf
movsb
xor
repz
aam
jp
mov
insb
imul
es
imul
cwtl
mov
popf
loop
dec
insl
cmp
sub
mov
sbb
pushf
ljmp
xor
stc
mov
or
pop
sub
xchg
fildll
loopne
jnp
in
pop
mov
mov
lret
and
repz
inc
imul
loop
dec
sub
lods
jle
imul
dec
cltd
mov
push
imul
add
pusha
xchg
adc
add
cmp
aaa
in
mov
shll
mov
cwtl
mov
divb
lds
cmp
cmp
or
mov
mov
inc
rcrl
and
pop
mov
shll
fsubrl
call
and
adc
add
inc
insb
xchg
or
fimull
ljmp
sarl
fmul
daa
or
dec
mov
push
sub
jb
mov
mov
mov
loop
inc
rcrb
sbb
outsl
dec
xor
push
daa
dec
inc
js
adc
enter
jge
sub
cmp
in
mov
xlat
cli
dec
adc
xlat
jle
ss
inc
xlat
movsl
loopne
inc
scas
cs
inc
mov
orl
ja
imul
jae
jne
jnp
lods
sbb
sub
sub
push
push
pop
sarl
sahf
popf
adc
and
std
mov
sbb
imul
daa
out
es
dec
inc
xlat
jecxz
or
inc
inc
add
out
bound
cmp
mov
mov
sub
js
sbb
jns
or
sbb
push
bound
xlat
les
sbb
or
xchg
sbb
into
ljmp
mov
sub
addr16
inc
aas
pop
pop
fisubrs
or
xor
xlat
add
sub
add
mov
dec
lods
sti
movsb
movsl
orl
sub
lea
testb
leave
movsbw
lea
mov
jmp
mov
mov
jmp
imul
xchg
icebp
jmp
pushf
mov
movb
lea
pushf
pushf
push
call
xchg
push
call
movzbw
movsbl
movsbw
nop
pushf
mov
mov
pushf
xchg
pushf
pushf
jmp
jmp
pushf
call
pushf
lea
mov
push
call
push
mov
jmp
pushf
mov
jmp
mov
pushl
xchg
pushl
pushf
pushf
pushl
ret
nop
pushf
pushf
mov
movsbw
pushf
pushf
pusha
mov
push
jmp
xchg
mov
pushl
ret
lea
jmp
xor
test
xor
movw
stc
xorl
jmp
call
pushf
call
lea
mov
movb
push
mov
push
call
call
pushl
xchg
pushl
movb
pusha
pushl
ret
lea
pushf
call
call
lea
mov
pushf
pushl
movw
xchg
push
pushl
ret
nop
jmp
jmp
mov
pushf
pushf
pushf
mov
pushf
movb
pushl
lea
mov
movl
xchg
mov
pushl
ret
call
lea
call
lea
pushf
call
pusha
xchg
pushl
movb
pushf
pushf
pushl
ret
jmp
call
pushf
xchg
bswap
push
push
not
mov
jmp
xchg
pushf
pushf
mov
jmp
pusha
call
movsbw
movzbw
movzbl
movzbl
nop
movsbw
jmp
mov
push
lea
push
call
lea
pushf
pushl
mov
jmp
push
mov
call
pushf
xchg
push
pushl
pushl
pushf
pushl
ret
lea
push
mov
lea
mov
call
mov
jmp
jmp
mov
push
mov
lea
jnp
mov
jmp
xchg
pushl
movw
pushl
ret
lea
lea
jp
pusha
xchg
pusha
pushl
ret
sub
std
mov
mov
xor
xor
mov
lret
psubq
out
pop
in
aaa
mov
xchg
cwtl
mov
add
out
xchg
mov
rcr
cmp
mov
pop
scas
cmp
in
lahf
pop
and
add
test
int3
test
cmpsb
pop
sub
popa
cmp
movsb
fdivl
ret
adc
xchg
fiadds
xchg
fdivp
jbe
fcompl
adc
imul
xchg
stc
roll
ss
mov
cmp
sahf
ljmp
shll
sub
push
add
lds
std
push
push
pusha
cmp
push
adc
xchg
mov
mov
push
outsb
jecxz
cmp
mov
fisubl
mov
scas
sbb
flds
mulb
repnz
lds
sbb
push
loopne
xchg
lock
push
aam
sarb
adc
mov
fs
xor
ret
adc
xchg
and
mov
adc
pop
shll
fmul
and
lret
imul
push
out
out
add
push
dec
xchg
iret
sbb
dec
push
loop
pop
jl
daa
jae
lahf
out
xlat
pop
pop
lahf
cmp
push
push
data16
shlb
ds
or
and
pop
pop
sbb
adc
in
adc
imul
adc
pop
int
xchg
mov
js
gs
scas
jno
pop
mov
cld
xchg
jae
pushf
push
pop
adc
xor
or
xor
call
sbb
stc
sbb
adc
inc
test
ds
scas
cli
push
bound
jnp
sbb
into
in
mov
mov
sbb
mov
jp
ja
test
mov
xchg
in
pop
sub
or
cmp
jmp
pop
push
or
sarl
lods
cli
pop
cwtl
loop
out
push
ljmp
xor
out
lret
add
test
xchg
pop
mulb
adc
lods
pop
insb
ss
or
mov
les
sbb
xchg
or
in
aad
adc
sub
sub
mov
mov
int3
sti
ret
andb
cmp
popf
cli
mov
inc
stc
mov
outsl
cmp
or
and
xchg
adc
jge
xchg
cmpsl
push
fnsave
sub
xchg
add
mov
sbb
cli
inc
repnz
movsb
fistpll
aam
xor
mov
loopne
in
loopne
dec
cwtl
test
in
sbb
inc
daa
cmp
push
js
fsubrl
xchg
cmp
adc
cltd
arpl
pop
sbb
jle
mov
sub
jg
insb
or
cmp
loope
scas
pop
xchg
jns
push
mov
xchg
jp
loopne
test
jp
das
xchg
movsl
aad
fsubs
clc
xlat
or
int
pop
popf
mov
inc
mov
mov
arpl
int
lods
inc
inc
andb
test
into
xlat
bound
xor
std
pop
add
stos
inc
cld
pop
sub
mov
cltd
dec
pop
xor
mov
ficoms
daa
push
idivb
or
clc
inc
sub
ljmp
sbb
mov
je
xor
mov
cwtl
blcfill
xor
mov
in
pop
lock
pushl
incb
push
es
fistpl
jecxz
cmp
inc
test
xor
cmpsb
call
or
mov
cmp
test
push
adc
rorl
pop
int
cmp
cld
or
lods
out
testb
fildl
dec
imul
cli
ljmp
insb
loopne
lea
pushl
mov
push
not
jmp
nop
pusha
xchg
pop
lea
mov
pushf
pushf
lea
movl
call
jmp
setne
mov
jmp
pusha
xchg
push
lea
jmp
jmp
mov
push
call
jmp
xor
push
xor
movw
xor
push
pushl
popf
movb
pushl
ret
push
call
mov
xchg
cwtl
pushf
mov
pushf
call
push
lea
je
mov
pushf
lea
push
jmp
pop
mov
mov
push
mov
pushf
movb
mov
movb
pushl
ret
call
mov
bswap
mov
pushl
mov
mov
lea
jmp
pushf
lea
pushl
call
mov
xchg
movb
pushl
pushf
pushl
ret
jmp
mov
movzbw
movsbw
mov
mov
pusha
pusha
pushf
mov
pushf
pushf
jmp
call
call
movsbw
movzbl
pusha
pushl
nop
movzbw
mov
call
push
movb
mov
call
xor
cmc
xor
clc
bt
xor
pushl
xor
call
pushf
mov
jmp
movsbl
pop
call
jmp
pushl
pushl
mov
xchg
movb
mov
pushl
ret
call
mov
not
movzbw
mov
mov
call
movb
lea
mov
pushl
movb
mov
lahf
lahf
pushf
pushf
mov
movb
pushl
mov
pushf
pushf
pushf
jmp
call
pushf
mov
pushl
lea
jp
push
mov
xchg
movb
mov
lea
movsbw
push
pusha
mov
call
xchg
mov
movb
movw
pushl
ret
movb
pusha
xchg
push
lea
mov
mov
lea
pushf
jmp
mov
pushf
push
jmp
mov
call
mov
pop
pushl
pop
lea
movsbw
pushl
mov
pushf
jmp
pushf
jmp
push
mov
xchg
pushf
pushf
push
xchg
lahf
mov
movw
mov
pusha
lea
pushl
push
jmp
xchg
pusha
push
pushl
pushl
ret
movb
xchg
pushf
movzbl
mov
pushf
call
xchg
pushf
movw
movb
pushf
pushl
ret
mov
not
mov
movb
call
pushf
xchg
pusha
lea
jb
pusha
xchg
pushf
call
call
push
jmp
jmp
push
pusha
lea
call
xchg
pushl
pushf
pushl
ret
mov
call
pushf
nop
pusha
call
pushf
pusha
lea
push
mov
jmp
xlat
andl
add
cmp
xor
pushf
xor
cmp
movb
xor
call
mov
push
xchg
pushl
mov
mov
push
pushl
ret
jno
scas
setge
cld
call
nop
push
pusha
mov
jmp
mov
push
call
pushl
pushf
pushf
xchg
mov
movb
movb
pushl
ret
lea
jmp
jmp
movsbl
pushf
mov
pushl
movw
mov
call
push
movb
nop
jmp
pusha
lea
movw
call
pushf
pushf
mov
xchg
movzbw
lea
mov
push
jmp
nop
push
pushl
pusha
pushf
xchg
movzbl
not
jmp
xchg
pushf
pushf
pushf
pushl
ret
call
lea
not
pop
bswap
mov
call
push
movb
jmp
mov
call
xchg
pushl
push
push
pushl
ret
lea
push
call
mov
push
jmp
call
jmp
lea
movb
push
xchg
push
movb
pushf
pushl
ret
movl
pushf
movw
movb
lea
jmp
xor
push
xor
movw
movl
xorl
mov
xor
push
bt
xor
test
xor
bt
push
xor
cmp
xor
std
std
pushl
popf
push
pushl
ret
mov
pushf
mov
call
lea
call
pushf
call
not
pusha
pusha
pushf
nop
movsbw
mov
jmp
call
pop
mov
pushf
call
bswap
bswap
mov
call
pushf
pushl
pusha
call
lea
jle
mov
pushf
call
push
call
mov
jmp
lea
mov
xchg
movb
mov
pushl
ret
fwait
mov
call
pusha
pushf
pushl
nop
push
xchg
not
lea
mov
pushf
movw
jmp
xchg
pushf
mov
xchg
lea
je
push
movzbw
mov
push
pushl
pushf
pusha
mov
pushf
call
xchg
pushl
movb
pushf
movw
pushl
ret
movzbw
mov
pusha
lea
pusha
jmp
call
call
jmp
nop
pusha
push
pusha
mov
pushf
push
xchg
call
mov
call
xchg
mov
or
add
mov
pushf
mov
jmp
mov
movl
xchg
pushf
push
mov
pushl
ret
pushf
mov
pushf
lea
pop
not
mov
push
mov
call
jmp
mov
movsbl
pushl
mov
push
push
movb
movb
lea
jmp
push
movw
call
mov
not
movsbw
mov
pusha
mov
push
push
pushl
ret
call
pusha
pushl
pushl
xchg
push
call
jne
inc
mov
lcall
add
dec
lods
xor
mov
mov
mov
pushf
mov
call
movb
call
push
pushf
pusha
call
push
xor
and
jmp
jmp
xor
fdivr
pop
test
clc
pop
rorb
push
jmp
mov
pop
push
jne
es
test
dec
sti
dec
shrb
test
adc
mov
mov
sbb
and
jle
in
pop
js
sahf
mov
push
inc
bound
push
js
pop
in
cwtl
or
mov
js
pop
push
out
lock
or
mov
jp
cwtl
imul
inc
std
lods
lea
ds
mov
adc
xchg
push
pop
es
lds
lret
pop
js
mov
adc
add
jecxz
sub
clc
pop
push
shll
pop
pop
repz
loop
mov
jns
scas
cmp
dec
and
or
cmc
ret
mov
cmp
js
push
sbb
mov
into
pushf
imul
js
jnp
fstl
cwtl
sbb
mov
pop
cmp
insb
aad
outsl
push
dec
and
dec
popf
inc
stos
mov
mov
fldt
xor
outsb
arpl
fldenv
fadds
jp
mov
jnp
nop
push
into
jne
push
mov
jecxz
mov
aam
or
xor
push
and
xchg
jb
push
mov
outsl
jae
xchg
pushf
cwtl
cmp
in
enter
sub
inc
ja
jecxz
rcll
ds
mov
mov
subl
push
adc
int3
push
sarl
sti
inc
jecxz
adc
dec
sbb
stos
jle
dec
dec
jp
mov
js
test
ja
je
jl
lock
inc
mov
inc
ljmp
jo
xchg
repnz
out
leave
pop
call
xor
clc
pushl
popf
mov
pusha
pushl
ret
jmp
push
movw
xchg
lea
jmp
pusha
jmp
call
lea
nop
movsbl
movzbl
pusha
xchg
lea
movzbw
mov
pop
movsbw
bswap
lea
movzbw
mov
pop
pusha
movzbw
mov
bswap
mov
mov
jmp
push
push
movl
pushf
pusha
pusha
lea
jmp
pushl
lea
mov
mov
cwtl
lea
pop
lea
mov
call
call
insb
int
js
std
cs
cmpsl
push
mov
ret
or
or
cmp
pop
sbb
pop
push
insb
pop
and
xchg
jle
in
sbb
fs
jae
lahf
pop
mov
test
jmp
inc
xor
lret
mov
dec
mov
add
push
fwait
mov
adc
loop
fcmovb
arpl
inc
mov
subb
xchg
or
js
push
mov
call
mov
cmp
sub
sbb
jmp
lret
jno
sbb
ljmp
mov
lahf
adc
inc
sub
cmp
lahf
imul
xchg
ljmp
subb
insl
xor
ror
dec
sub
push
inc
or
jge
inc
aas
mov
push
adcb
sub
je
mov
fwait
jb
scas
inc
int3
lret
stc
xor
mov
in
add
inc
and
cmp
push
and
add
pop
insb
fisubl
cmp
lods
mov
adc
scas
jno
out
lds
sub
adc
and
mov
sbb
outsl
insl
push
mov
mov
stos
inc
xchg
insl
fwait
gs
jne
pop
sahf
add
pop
loopne
popf
aas
cld
inc
mov
dec
lret
adc
cmpsl
sbb
stos
fwait
or
mov
sub
xchg
daa
xchg
xchg
jns
mov
bnd
mov
das
cmpsl
ss
rcrb
xchg
shll
push
pushl
push
add
sub
mov
call
into
xchg
add
jg
loop
pop
jg
jae
inc
push
aaa
fcmovnu
lods
cld
pop
dec
fs
dec
negb
mov
outsl
ljmp
hlt
dec
movsb
jno
push
rorl
add
stos
cli
lret
out
sub
mov
scas
fdivrl
test
das
out
push
jp
mov
add
xor
cmp
mov
ror
push
xchg
pusha
jmp
imul
out
int
add
xor
rcr
js
xchg
scas
loope
out
lret
loope
fcoml
xchg
jns
mov
sbb
mov
cmp
into
aas
shlb
cltd
xchg
ret
mov
lcall
and
push
mov
arpl
int
daa
sub
test
mov
daa
cmp
push
notl
push
pop
cmpsl
xchg
pop
std
xchg
enter
or
xchg
inc
mov
rcrl
rolb
mov
jl
popa
and
jne
repnz
pop
pusha
leave
xor
enter
pusha
xchg
mov
dec
mov
mov
push
jmp
and
add
mov
fidivrl
xlat
jno
fmuls
or
sbb
and
imul
sub
ljmp
sub
mov
jp
sub
jb
scas
pop
pop
mov
adc
flds
out
mov
jl
ljmp
adc
mov
enter
scas
dec
pop
lods
ffreep
sbb
int
xchg
nop
in
sub
inc
lock
push
dec
mov
lock
or
xchg
sbb
push
es
and
xchg
fsubs
mov
jl
cmp
scas
sbb
jecxz
in
dec
mov
fs
xor
xchg
js
aad
aaa
xchg
bound
or
das
orb
arpl
lods
out
adc
nop
std
cli
jnp
pop
sbb
jo
mov
bound
loope
cmpl
ss
jg
or
add
lea
mov
push
loope
jmp
push
repz
jno
lods
loope
xor
lods
in
test
sub
cmp
pop
mov
xor
jno
dec
out
push
mov
mov
mov
xchg
js
xor
sbb
insl
cmp
push
add
loopne
cmp
out
cmp
xor
cli
sub
or
lds
outsl
and
lock
inc
jge
mov
jle
dec
lcall
leave
sbb
jae
mov
dec
pop
cmp
iret
adc
popf
push
pop
test
or
arpl
stc
mov
sbb
flds
loop
lock
xchg
sub
xchg
daa
push
cwtl
mov
dec
in
aam
outsl
sarl
daa
aas
ret
out
fs
iret
aaa
ljmp
ja
ds
mov
insb
adc
or
hlt
xor
out
sub
jnp
int
out
sbb
sbb
xchg
aam
stc
out
sbb
add
xchg
jp
sub
js
sbb
push
inc
addl
and
divb
jb
pushf
jmp
imul
fisubrl
cmp
test
sbb
divb
ret
mov
xchg
lahf
sbb
dec
jae
xor
inc
mov
jmp
pop
out
cwtl
push
and
jne
sbb
loope
sub
pop
fadds
push
sub
insl
xchg
pop
jns
test
cmp
loopne
cmp
pop
cmp
das
ja
sbb
scas
mov
pop
cltd
cltd
ret
mov
sub
test
push
add
sbb
mov
mov
mov
pop
gs
dec
and
clc
repnz
sub
mov
inc
lock
xor
movsb
jl
rcrl
adc
adc
and
jb
orb
sub
out
cmpsb
sbb
inc
xor
mov
std
mov
rorb
stos
xchg
decl
cmp
dec
xchg
dec
repnz
dec
xlat
xchg
and
mov
out
lahf
sti
xor
push
js
add
daa
sti
fisubl
sbb
fs
aad
nop
dec
mov
rcrl
lret
cbtw
pop
out
push
hlt
repnz
stc
mov
mov
ljmp
icebp
dec
aad
sub
xchg
push
inc
or
pop
inc
cld
inc
pop
dec
ja
repz
pusha
pop
push
pop
scas
push
pop
add
jns
inc
dec
je
es
mov
inc
or
inc
jno
aam
jl
ja
pop
lods
aaa
jne
in
pop
adc
fidivs
scas
pop
mov
cmp
jmp
dec
jnp
mov
mov
arpl
inc
test
xor
dec
in
pop
pop
movsl
enter
adc
outsb
xlat
cmp
jp
adc
inc
xchg
cmpl
pop
into
idivb
jb
les
jg
pop
adc
adc
neg
mov
out
cltd
ss
jae
mov
lret
mov
lock
fstps
inc
xchg
cmp
lahf
loop
pop
enter
lcall
xor
xchg
decl
push
lock
in
lods
ljmp
test
sahf
push
jmp
add
enter
ret
stos
js
pop
in
lds
popf
lcall
add
mov
dec
pop
fisttpll
es
lcall
shlb
add
or
pop
jo
call
add
pop
or
cmc
stos
not
or
outsl
push
and
pop
test
mov
jp
or
or
jg
and
xlat
cs
jle
insl
adc
cmc
stos
dec
and
scas
sahf
stos
xor
lods
push
sbbb
sbb
xor
push
and
sub
push
shll
or
cmc
stos
adc
mov
push
and
pusha
pushl
ret
lea
mov
call
call
push
pushl
lea
jle
nop
push
lea
jno
push
xchg
bswap
mov
pushf
lea
mov
pushl
pushf
pusha
mov
jmp
pusha
nop
pop
jmp
xchg
mov
pushl
ret
pushf
nop
call
push
pushf
mov
call
push
call
cmp
je
pusha
lea
pushf
jmp
xor
push
cld
pushl
popf
pushl
pushl
ret
mov
pushl
jmp
lea
call
mov
jmp
mov
call
movl
pusha
pushf
lea
jmp
lea
nop
movsbw
movsbw
bswap
pop
pusha
call
call
mov
not
mov
mov
not
pushf
pop
lea
movsbw
lea
mov
jmp
push
jp
outsl
fdivr
push
fiadds
leave
cltd
iret
fsubs
or
xor
mov
ret
ret
add
in
dec
add
nop
mov
lods
add
bound
ja
jne
aas
andb
aas
aaa
les
clc
lahf
arpl
test
popa
cmp
int
pop
cltd
sbb
mov
int
ds
push
clc
adc
insb
lcall
mov
orl
push
repz
in
mov
leave
lods
push
testb
or
insl
imul
jmp
and
pop
inc
cmp
cld
lods
xlat
or
mov
jae
and
shl
outsb
fdivr
or
xor
push
lahf
les
xor
push
xor
test
cmpl
lock
movsb
xor
xchg
aam
xlat
push
fwait
dec
int
mov
pop
movsb
cld
scas
push
sbb
mov
inc
lock
push
jle
sub
scas
hlt
lea
mov
jmp
mov
in
and
dec
xor
jo
outsb
pop
xlat
aas
xchg
adc
sbb
ds
test
mov
cltd
fstl
xor
push
push
xchg
in
jge
stos
cli
out
cmp
sti
add
mov
imul
arpl
lahf
lods
mov
push
add
cmpsl
xchg
mov
lret
mov
out
mov
in
mov
sbb
mov
fucomip
cmpl
push
xor
call
cmp
cmp
fnstcw
mov
stc
inc
mov
add
jmp
insb
iret
or
pop
mov
cwtl
push
dec
pop
push
movsl
cmp
or
add
push
cmpsb
stos
das
jbe
jle
repnz
xchg
inc
mov
inc
in
and
fimuls
or
lcall
fdivr
fsubrl
loopne
cmp
dec
je
in
and
pop
dec
data16
out
and
inc
ret
test
cld
sub
push
addr16
cwtl
std
imul
arpl
push
mov
mov
aad
pushf
divb
mov
jnp
repnz
push
sub
xor
sub
mov
adc
cmpb
mov
dec
jg
stos
clc
add
cmp
mov
outsb
cmp
pop
out
loopne
shl
ja
out
jo
dec
push
lods
add
cmp
rcrl
test
sbb
pop
inc
sbb
ficompl
movsb
push
push
fidivrl
xchg
loopne
das
lret
fisubrs
lods
xchg
dec
mov
inc
push
stos
pop
xchg
dec
and
dec
ljmp
out
adc
jg
inc
or
cmpsl
dec
jno
in
sbb
decb
adc
dec
xor
aas
mov
stos
lcall
es
outsb
push
sbb
jnp
add
dec
loop
mov
mov
jae
pushf
jmp
sbb
push
sbb
in
add
mov
cs
mov
sub
lock
mov
aas
jmp
hlt
or
aam
dec
mov
push
dec
adc
lock
cmpsl
pop
shrl
in
pop
es
pop
push
cmp
push
or
in
xor
lret
dec
inc
bound
imul
out
pop
add
mov
clc
imul
loopne
rcrl
in
push
hlt
lea
xchg
lods
adc
sbb
andb
lods
xchg
fbstp
cmp
addr16
jp
js
pop
pop
aas
sarl
dec
sbb
xchg
sbb
lcall
push
fsubrs
test
imul
or
popa
pop
es
push
add
jns
repz
negl
out
push
dec
fcomps
movsb
ljmp
push
mov
in
cmp
movzbw
mov
jmp
xchg
mov
mov
pushl
ret
call
movb
mov
pusha
pushl
xchg
call
push
jmp
lea
movb
movb
pushf
xchg
push
movl
pushl
ret
xchg
call
mov
xchg
mov
mov
movzbw
pop
setno
pusha
mov
pushf
call
mov
jmp
xchg
lea
js
bswap
lea
mov
pushf
pushf
push
mov
pusha
call
call
pushf
xchg
pusha
push
pushl
ret
xchg
mov
mov
pushl
ret
mov
push
mov
call
mov
pop
pushf
pushf
pushl
ret
call
movw
movl
pushf
mov
pushf
mov
mov
pushf
mov
push
mov
push
lea
push
call
jmp
mov
xchg
pushl
mov
movw
mov
pushl
ret
jmp
mov
push
call
call
jmp
pushf
pusha
movb
mov
mov
pushl
lea
mov
xchg
pushf
pushl
ret
adcl
imul
fbld
adc
mov
dec
js
add
sti
xchg
scas
jae
sub
sub
jno
lea
stos
les
pop
xchg
dec
fstpt
fldcw
sub
jmp
mov
adc
popa
lods
cmpsb
decl
clc
mov
sub
jb
repz
jg
outsb
mov
and
bound
in
mov
sbb
push
loopne
and
add
cltd
lods
imul
mov
cltd
cmp
and
insb
rcll
jbe
test
lcall
aas
jo
lret
mov
mov
pop
push
push
and
out
sub
xchg
cmp
mov
out
and
negl
push
xchg
int
xor
mov
outsb
jae
inc
xchg
movb
push
mov
call
push
xchg
pusha
pusha
pushf
pushf
pushl
ret
pushf
jmp
pusha
movb
lea
pushf
lea
jge
push
push
xchg
mov
pushl
ret
lea
pushl
mov
pusha
movzbw
movsbw
mov
jmp
jmp
push
lea
mov
xchg
mov
push
mov
pushl
ret
call
xor
pusha
bt
xor
push
xorl
clc
clc
xor
bt
cld
pushl
popf
movb
pushl
pushl
ret
lea
pusha
jmp
call
pusha
xchg
lea
pushl
movsbl
pop
mov
call
mov
push
push
lea
movb
jmp
jmp
call
in
xor
std
or
fisubrs
xchg
dec
ljmp
pop
mov
and
daa
stos
push
scas
adc
ja
inc
sub
pop
push
push
pushf
and
xchg
and
add
lret
loop
in
rcrb
popa
lods
push
inc
lea
rcrb
test
add
scas
sub
std
push
lcall
js
data16
test
lahf
hlt
mov
pop
test
sbb
fsubs
sbb
ficoml
and
sub
call
add
rcrl
insl
mov
decb
lcall
mov
in
or
stc
mov
ja
scas
inc
mov
xchg
fsubrs
test
mov
mov
xchg
pop
xchg
mov
dec
stos
fcompl
lods
xchg
dec
ds
cmp
mov
jg
sbb
pop
push
xor
xor
mov
inc
jbe
add
cmpsb
xchg
fs
xor
lret
xlat
pop
out
lods
mov
pop
cwtl
push
jb
xor
sub
and
loope
mov
shlb
inc
js
test
and
out
adc
arpl
mov
and
test
xor
sbb
mov
clc
into
cmpl
je
aas
outsl
test
mov
xchg
pop
push
mov
leave
add
les
mov
out
pop
mov
in
cld
hlt
inc
stos
in
das
sub
fnsave
dec
mov
lcall
pop
sub
scas
cmpsl
repz
nop
pop
adc
scas
fs
sbb
arpl
and
push
push
fcom
cltd
xlat
or
push
or
push
xchg
push
popf
cmp
lock
mov
mov
in
adc
xchg
cmp
dec
test
imul
cmp
lods
mov
js
cmc
ret
and
pop
out
int3
cmc
popa
push
jb
push
fstl
pop
jle
lcall
loop
inc
inc
fiadds
inc
dec
sarl
pop
popf
xchg
loop
lret
nop
into
sbb
aas
cwtl
push
test
pop
push
stc
adc
fistl
dec
ds
repnz
xchg
dec
mov
mov
popa
sub
cmpsw
cltd
and
test
loopne
nop
ds
pop
and
and
imul
cmp
and
push
add
lods
mov
in
pop
movsl
inc
mov
mov
fisubs
repnz
mov
add
cmp
add
add
fildll
adc
push
add
sub
adc
rcrb
int3
fwait
and
inc
pop
je
and
into
arpl
cli
scas
cmp
jne
aam
jb
out
cmp
mov
or
xor
sub
sub
xchg
cmp
insl
cmp
jb
mov
sbb
jbe
notb
mov
movswl
lret
mov
jbe
xlat
iret
xchg
mov
push
lcall
inc
dec
in
mov
incl
repz
int3
cs
das
leave
enter
add
cmp
out
testl
ss
xchg
sbb
sti
dec
int
push
enter
push
adc
sbb
movswl
jl
dec
mov
orb
fildll
scas
pop
addr16
cmp
push
xlat
in
lret
push
popf
adc
sbb
mov
xor
fisubl
xchg
sub
out
xchg
lea
push
xor
mov
push
ja
int3
xchg
jbe
incb
pop
pusha
popf
ret
ret
jne
aaa
popa
cld
and
sub
xchg
mov
and
stc
push
call
pop
bound
flds
jnp
sbb
pusha
in
sub
imul
sub
cs
loope
fwait
adc
ss
scas
lret
ss
mov
out
inc
mov
jns
jae
dec
push
cmpsb
std
jns
push
and
push
or
pop
and
or
cmpsb
mov
pop
ffreep
adc
idivl
pop
fwait
lcall
mov
lods
jno
sub
xchg
out
sub
adc
iret
push
fldt
jl
int
out
enter
fistps
dec
jge
cwtl
push
cmpl
jns
inc
push
in
or
fnstcw
add
cmpl
or
std
mov
pop
or
xlat
fs
sbb
push
push
data16
rcrb
nop
add
xor
xlat
xor
shrl
dec
dec
inc
or
and
shlb
or
push
push
add
ret
pop
loop
mov
repz
jg
or
jbe
jne
outsl
orl
enter
ret
fwait
mov
mov
ja
dec
std
sub
in
dec
adc
inc
daa
leave
jo
insb
jnp
mov
out
dec
mov
out
push
aas
repnz
xor
or
cmp
fbld
adc
mov
dec
cli
mov
xor
dec
mov
cmp
rcrb
repnz
push
stos
push
scas
push
fwait
or
mov
pop
xorl
cmp
les
mov
scas
and
adc
int
mov
divl
inc
mov
xor
jl
shlb
cmp
daa
dec
lods
pop
adcb
ds
push
js
mov
enter
cs
mov
shrb
or
xchg
push
pop
fwait
adc
add
xchg
add
call
cmp
in
push
jno
cmc
nop
out
push
les
lret
lcall
icebp
xor
mov
int
xlat
loop
xchg
mov
leave
movsl
aaa
jb
test
mov
cmpsl
loope
mov
mov
pop
stos
xor
lock
xor
aaa
bound
cmp
xchg
sbb
fbstp
lret
sbb
xchg
cmp
insb
adc
jle
aas
adc
loop
mov
test
sarl
fcomp
xchg
mov
pop
mov
mov
dec
cmp
jge
mov
push
pop
sub
daa
shll
and
pop
into
and
jb
mov
out
les
sbb
xchg
xor
push
testb
test
mov
inc
mov
push
jb
xchg
xor
hlt
inc
dec
scas
or
cmc
mov
aas
inc
stc
add
fisubrl
push
and
cli
fwait
rorb
xchg
cmpl
adc
sbb
pop
push
xchg
jns
cmp
adc
jecxz
sbbb
adc
fnsave
mov
dec
push
mov
dec
push
test
add
sub
repnz
andb
dec
inc
pop
sub
sbb
repz
xor
sbb
xchg
clc
mov
add
rolb
rolb
mov
stos
fsubrl
inc
cltd
mov
xor
ljmp
jb
adc
icebp
xlat
dec
mov
mov
fisttpll
outsl
push
sub
xor
or
cmp
mov
fwait
in
mov
jecxz
adc
push
ds
out
xchg
inc
ljmp
adc
or
fisubl
lods
movsb
icebp
movsb
in
push
fisubrs
adc
fldenv
mov
fiadds
popf
repnz
cli
scas
out
adc
mulb
cmpsb
push
xor
lahf
and
in
jmp
mov
mov
dec
arpl
cmpsb
rclb
jbe
or
jo
mov
mov
push
decl
cld
hlt
inc
stos
in
rorl
pop
mov
and
dec
push
lods
aaa
xor
fcom
cltd
pop
jo
adc
xor
fwait
add
cmpsl
sbb
in
outsb
adc
mov
int3
lret
jbe
cmp
jb
stos
or
movsl
lds
and
stc
pop
inc
pop
xchg
jne
mov
ds
sub
imull
xor
mov
xor
pop
cli
cli
rorl
or
xor
or
stos
aam
add
sbb
mov
push
push
mov
lret
popa
xchg
or
sbbb
je
jae
outsb
mov
xor
dec
scas
sar
nop
xor
pop
lods
adc
push
shrl
fmull
and
mov
jg
or
lahf
adc
aaa
add
in
loop
sbb
cmp
out
aad
xchg
shl
scas
ret
jo
xchg
int3
into
insb
push
pusha
psubb
lret
outsb
sahf
repz
mov
adc
ret
rcrb
shlb
aas
mov
mov
xor
popa
rcrl
outsb
inc
loope
and
rcrb
cld
inc
mov
jbe
test
pusha
or
mov
jp
in
dec
outsb
sahf
js
xlat
cs
add
mov
cmpsl
stc
push
mov
insb
xor
sbb
dec
inc
sbb
stc
test
push
mov
outsb
sahf
stc
cmp
andb
mov
imul
out
neg
cmpsl
loopne
xchg
fcmovu
test
add
xchg
int3
outsb
sahf
divl
xchg
xchg
pop
inc
inc
or
bound
or
xchg
xchg
jle
add
xor
cmc
bt
pushl
popf
pushf
pushl
ret
xchg
jmp
push
mov
mov
jmp
pushf
mov
pushf
mov
mov
call
movw
push
mov
lea
mov
pushl
call
jmp
call
pusha
jmp
jmp
mov
call
jmp
lea
push
xchg
push
pushl
ret
pusha
mov
call
call
mov
mov
pushf
jmp
pushf
xchg
bswap
pushf
mov
pushf
jmp
push
mov
call
mov
call
nop
movsbw
pop
pushf
xchg
jmp
lea
mov
mov
jmp
not
pusha
nop
call
nop
pusha
mov
movsbw
mov
push
mov
push
lea
pushf
mov
movzbw
movsbw
mov
call
call
lea
call
push
xor
push
xor
cmp
push
xorl
test
jmp
push
pusha
movb
nop
push
mov
push
jmp
mov
movb
mov
movw
pusha
push
pushf
lea
mov
xchg
mov
mov
push
pushl
ret
mov
lea
mov
jmp
mov
xchg
jmp
mov
movl
lea
jmp
push
pushf
nop
mov
pusha
push
mov
pushf
setns
movzbl
setp
mov
call
mov
call
call
call
pop
dec
clc
test
add
pop
mov
add
lea
movb
jmp
jmp
pushf
lea
pushf
pushf
call
pop
xchg
push
mov
movzbw
pop
jmp
call
ret
pop
fdivr
jge
add
lods
mov
test
pop
lock
movsl
and
addl
xor
cmpsl
out
inc
fisubrs
fidivl
lods
add
mov
cmc
repnz
pop
add
xchg
cmp
xor
sub
or
stc
popa
push
pop
cmpsb
cs
inc
ss
add
icebp
mov
inc
jno
stos
mov
xchg
mov
sbb
int
rcrb
xchg
pop
lods
ret
or
repz
pop
and
je
std
push
fs
sahf
push
adc
pop
push
std
cmp
movsb
mov
xor
fbstp
dec
cmp
push
lret
rorl
mov
fldcw
mov
ret
hlt
jp
sbb
inc
ret
sbb
repz
stos
icebp
in
pop
stos
int3
push
cmp
aas
cmpsb
xor
dec
mov
loop
nop
adc
push
fmul
int
adc
orl
mov
cmpl
dec
jns
test
mov
lock
scas
xchg
rcrb
js
stos
lcall
lcall
push
xchg
mov
cs
into
sub
ret
lret
add
out
cltd
rcrl
lret
sbb
sub
mov
insb
sub
rcl
xlat
jbe
mov
mov
adc
ret
std
dec
xchg
mov
add
push
mov
enter
xchg
sbb
mov
into
xchg
sub
cltd
gs
insl
xor
insb
push
push
gs
push
jb
outsl
xchg
xchg
adc
popf
iret
jns
lcall
pop
sbb
mov
cmp
sub
jecxz
or
lds
pop
lods
ret
repnz
scas
cmp
push
sub
mov
mov
test
ljmp
in
outsl
lea
fisubl
addl
stc
inc
test
das
dec
cmc
icebp
dec
xor
mov
mov
clc
roll
sub
sub
rcl
jecxz
dec
sbb
das
add
iret
push
sbb
jo
mov
dec
sbb
jnp
mov
inc
inc
repnz
jp
sub
mov
aam
clc
test
ljmp
sbb
dec
xlat
lock
adc
jg
test
sub
loopne
adcl
cmp
adc
pop
jge
stc
out
popa
enter
jg
xor
fnstcw
mov
out
pop
xchg
bnd
inc
lcall
xor
insb
cmp
sbbb
cmp
mov
mov
aam
imul
cli
mov
dec
das
lret
dec
out
push
movsb
jns
movsb
mov
sub
sub
or
mov
icebp
cmp
in
or
lds
adc
pop
and
fildll
or
xchg
out
test
sbb
inc
mov
repnz
fnstsw
lret
adc
mov
mov
jns
shr
mov
lret
loope
mov
pop
or
or
cmp
push
jecxz
jo
pop
outsb
test
fidivrl
jge
insb
lock
in
out
mov
lret
dec
sbb
mov
dec
jne
mov
jo
jae
fiaddl
mov
in
dec
xlat
cmp
cmc
mov
fidivrl
mov
xor
test
subb
shll
mov
sbb
into
outsl
mov
es
push
test
rcrl
into
lcall
dec
push
sarl
ret
push
lds
lcall
jb
out
sti
in
mov
mov
cmp
int
add
mov
jb
and
ret
adc
push
or
es
btc
arpl
aad
mov
pop
xchg
cmp
push
mov
fcompl
lods
stc
arpl
cmp
mov
adc
mov
subl
mov
inc
push
pop
scas
mov
add
cwtl
cmp
or
mov
mov
je
inc
lea
arpl
gs
mov
daa
cmc
dec
test
cmp
pop
scas
sbb
ljmp
and
sar
aaa
ret
mov
jnp
xchg
adc
gs
test
je
push
sbb
cmp
test
push
add
fistps
ret
mov
sbb
jns
sub
iret
or
fld
jecxz
loopne
dec
or
mov
or
jo
or
jnp
xchg
mov
addr16
mov
shll
adc
loopne
inc
mov
and
mov
cmc
mov
rorb
cli
cmpsb
pop
cwtl
lea
sub
add
dec
dec
sbb
int3
lcall
lods
jp
out
xlat
pop
cwtl
mov
repz
ds
mov
test
rorl
gs
dec
lret
pusha
sub
addb
pushf
pop
pop
or
js
xchg
jge
xchg
cli
xor
mov
int3
xchg
xorb
test
adc
popa
int3
or
cmp
push
add
std
cli
paddb
push
or
ljmp
jp
push
enter
mov
push
and
je
stos
jae
jge
jmp
loop
cltd
cli
add
arpl
pop
test
fyl2xp1
push
lods
sub
insb
jbe
jb
sub
add
lret
inc
and
sub
sub
bound
insl
mov
in
in
mov
sbb
mov
test
push
js
jnp
cwtl
adc
xorps
jecxz
jle
enter
nop
fildl
mov
xchg
fwait
roll
lods
jp
push
adc
inc
push
sbb
ja
mov
xchg
xchg
sbb
jnp
pop
lods
jle
scas
cmp
bound
or
mov
pushf
fcompl
xchg
sbb
hlt
in
sub
rol
ljmp
pop
stos
roll
std
cwtl
adc
sub
and
inc
js
cmp
sti
in
aad
push
roll
jg
sbb
dec
leave
insl
cmp
int3
pop
daa
repz
dec
loopne
mov
in
in
cld
daa
inc
outsb
add
xor
adc
xor
inc
or
fcoml
pop
cmpsb
aad
sbb
adc
pop
cmp
cli
inc
dec
and
cmp
jno
push
out
sbb
mov
add
xchg
fimuls
dec
dec
sbb
ja
mov
push
dec
jns
ja
lret
insb
mov
mov
loop
jnp
lcall
loopne
xorb
dec
jmp
adc
xor
cmp
xor
aaa
pusha
popf
sub
rorb
fildl
insl
jae
or
out
out
or
jle
sar
mov
popa
xchg
lret
sahf
out
inc
stos
mov
aas
mov
jecxz
jbe
jl
js
sar
pop
mov
or
sbb
xor
imul
in
cmp
lea
cmp
jmp
push
dec
divb
pop
mov
xchg
jmp
pop
daa
out
jge
mov
or
push
push
fs
out
mov
int
mov
jne
xor
xchg
xchg
sbb
lds
pop
xchg
out
mov
push
sbb
idivb
add
subb
jnp
fwait
push
lds
mov
mov
or
mov
lods
mov
mov
and
out
cmp
out
mov
dec
sub
in
mov
test
or
xchg
mov
mov
add
dec
cmp
rcrl
imulw
mov
fcom
pop
inc
jbe
or
dec
jge
in
dec
mov
bound
cs
ss
repz
pop
add
sub
jg
in
jle
sbb
inc
pop
and
pop
jmp
pop
sbb
add
mov
cmp
mov
sbb
gs
sahf
pushf
jg
out
push
fadds
fsubr
jmp
jg
out
cmpsb
cltd
loopne
cmpsl
push
adc
add
jne
xor
adc
inc
fdiv
push
xchg
incb
in
jmp
std
scas
push
mov
xchg
movsb
push
inc
movsb
add
aad
pushf
popa
adc
add
daa
mov
sub
fists
jne
pop
inc
cltd
addb
das
shr
std
imul
cli
add
xchg
cli
dec
xor
xchg
mov
adc
add
daa
push
jp
aas
shll
rol
xchg
mov
mov
in
xchg
xor
out
sbb
std
dec
cltd
pop
cmpsl
pop
cwtl
dec
cli
aas
push
out
addl
push
hlt
scas
and
xor
loopne
dec
test
mov
outsl
mov
push
scas
addb
movsl
inc
fwait
sbb
jo
cltd
fimuls
jb
mov
push
push
mov
aaa
sub
add
repnz
dec
lea
loop
xchg
mull
bound
rclb
add
fisubs
loope
mov
addl
mov
sbb
lret
insb
jmp
jg
popfw
aas
out
icebp
ret
or
cmpsl
pop
push
push
fdivr
dec
addb
sbb
mov
rorb
aad
scas
call
jmp
enter
sub
pop
inc
push
and
in
les
xchg
xchg
pop
test
sbb
mov
sbb
std
dec
cltd
repnz
popf
test
scas
mov
jl
sub
add
cmp
in
pop
xchg
or
jne
bound
js
xlat
sub
mov
stos
add
sbb
mov
cs
sub
mov
mov
jp
out
fmull
mov
push
cld
bound
mov
push
push
lods
inc
cli
adc
mov
test
rcll
xor
dec
lods
jp
sub
or
cmpsl
pop
sub
repnz
ucomiss
xor
stos
jge
lock
cmpsl
cvtps2pd
jmp
add
cld
les
cmp
outsb
mov
mov
cmp
jecxz
cmpsb
add
out
push
xchg
ds
clc
inc
sub
mov
repnz
inc
pop
jnp
dec
and
call
ss
dec
inc
xchg
push
mov
push
and
xor
aas
dec
mov
cmp
insb
add
imul
inc
gs
fldenv
and
and
inc
shlb
scas
fs
push
push
push
inc
add
mov
jb
sahf
ret
neg
dec
fdivr
mov
pushf
ss
imul
jl
lds
das
scas
or
pop
into
adc
addr16
jno
rclb
cmp
out
push
add
mov
cmpsl
divl
call
in
xchg
test
add
adc
cmpsb
lcall
lret
xor
adc
das
rcl
jl
decl
sbbl
xor
sub
cmpsl
loope
inc
pushf
fildl
pop
imul
inc
and
test
pop
cmp
push
xchg
fcoms
fdivl
outsb
dec
ret
jmp
insb
sub
or
outsb
push
je
pop
int
and
lods
adc
mov
fnsave
ficoms
jg
push
cmp
ss
stos
insb
lret
in
stos
loope
pop
push
cmpsb
jno
jl
mov
and
gs
scas
pushf
cmp
aam
jmp
cwtl
bound
leave
scas
pushf
addr16
and
repz
mov
adc
stos
shrb
imul
icebp
notl
mov
stos
ja
lahf
imul
mov
push
inc
xor
sarl
xchg
insl
pop
call
cmpsl
mov
iret
inc
cmpsl
xchg
xor
or
jl
mov
andb
scas
jns
inc
adc
repnz
or
pop
jge
jg
or
stos
jp
mov
xchg
std
sbb
jne
mov
jnp
les
push
mov
stos
lods
insl
and
push
mov
xchg
xlat
jne,pn
inc
cld
mov
xchg
js
daa
mov
pop
sub
add
push
loop
inc
adc
bound
enter
jb
dec
push
push
or
icebp
mov
push
hlt
mov
jp
repz
push
or
loopne
cmpsb
test
add
std
syscall
ja
in
clc
cwtl
dec
arpl
inc
test
mov
xor
mov
ss
mov
inc
jge
ljmp
in
fucomip
pop
daa
lods
fnstsw
inc
vmread
mov
notb
lret
fisttpll
mov
bnd
cmpsb
out
mov
jmp
dec
js
sub
clc
stos
sbb
rcr
stos
ds
imul
sahf
push
mov
int3
sub
mov
mov
into
jmp
push
pop
mov
push
inc
xor
mov
sbb
and
cmpsl
clc
mov
push
add
out
setae
setg
movb
mov
movsbw
lea
setb
call
lea
push
pushf
mov
movw
movw
pushl
ret
lea
call
jmp
xchg
movw
jmp
pushl
pushf
lea
call
mov
mov
pusha
movw
call
mov
mov
call
push
mov
xchg
pushf
mov
pushl
pushf
pushl
ret
mov
jmp
bswap
pusha
mov
pushf
mov
call
movb
jmp
pushf
lea
pushl
push
xchg
push
pushl
ret
call
pusha
nop
pushl
jmp
push
jmp
push
push
push
mov
pushl
call
mov
movw
bswap
not
mov
push
movw
pusha
jmp
jne
pushf
pushf
pusha
mov
movsbw
bswap
mov
call
push
movl
push
jmp
call
lea
nop
jmp
mov
pushf
lea
pusha
mov
pushl
mov
call
pop
mov
pushf
movb
call
call
mov
movzbl
pushf
not
pop
mov
movzbw
movsbw
movsbw
jmp
xchg
movb
jmp
pusha
pushl
pushf
nop
movl
xchg
movsbw
movsbw
bswap
mov
call
xorl
clc
clc
xor
call
lea
jmp
adc
mov
mov
push
call
pushf
jmp
xchg
movb
movb
mov
mov
pushl
ret
nop
call
call
mov
call
push
lea
mov
mov
mov
movzbw
call
mov
movw
xchg
pushl
mov
pushl
ret
jmp
jmp
pusha
pusha
xchg
pushl
push
pushl
ret
xchg
push
pusha
pushl
ret
call
mov
pushf
mov
call
pushf
push
mov
jmp
pop
sbb
mov
pushf
mov
jmp
pushf
lea
jp
push
jmp
movb
pushf
call
pushf
mov
sets
pushf
call
mov
pushf
lea
movw
jmp
call
mov
call
andl
call
push
mov
bswap
movsbw
movzbw
movsbw
mov
lea
jno
pusha
movb
pushf
lea
push
mov
lea
pop
pusha
mov
jmp
pushf
call
mov
pushf
lahf
mov
pushf
pushl
pushf
call
mov
mov
call
xchg
pusha
pushl
pushl
ret
mov
pushf
pushf
pushf
lea
mov
call
jmp
pushl
jmp
mov
pusha
call
call
pushf
jmp
pusha
lea
jl
pusha
pushf
mov
bswap
movzbw
mov
call
pushf
mov
xchg
push
mov
pushl
ret
movsbl
mov
mov
pushf
movb
pushf
jmp
mov
pushl
push
call
call
mov
push
not
pusha
nop
movsbw
mov
call
mov
movl
movb
pusha
mov
movl
mov
push
push
mov
lea
jmp
movsbw
nop
setbe
bswap
pop
call
push
lea
pushf
xchg
mov
push
mov
pushl
ret
pushf
xchg
pusha
pushl
ret
push
pushf
popl
push
xorl
cmc
mov
xor
pushf
pushf
xor
clc
bt
xor
cmc
xor
pushf
call
mov
xchg
pushf
mov
mov
pusha
mov
movl
mov
pushf
lea
jmp
pusha
call
sub
shrl
inc
and
push
pushl
ret
jmp
pusha
mov
mov
mov
pusha
pushl
lea
pushf
movb
call
lea
push
pusha
call
pushf
lea
movw
pushf
jmp
mov
jmp
pusha
jmp
pushf
nop
mov
push
mov
movsbl
lea
movsbl
mov
pushf
pushl
lea
mov
pushf
mov
mov
mov
call
mov
lea
call
mov
movl
call
mov
movb
xchg
mov
pushl
ret
pushf
mov
movsbl
push
push
mov
jmp
pushf
jmp
mov
pushl
pushf
mov
pushl
pushf
lea
call
pusha
mov
pusha
movsbw
jmp
pushf
pushf
mov
mov
jmp
push
xchg
mov
mov
pushl
ret
call
movb
pushf
pusha
xchg
push
movb
push
mov
pushl
ret
xchg
setp
seta
pushf
movsbw
mov
jmp
pushf
xchg
pusha
pushl
pushf
pushl
ret
lea
setl
nop
bswap
mov
pop
push
xchg
jmp
call
mov
xchg
mov
movw
pushl
ret
mov
push
pushl
ret
jmp
xchg
movw
mov
pushl
ret
movsbw
mov
jmp
xchg
pusha
pushl
ret
movsbw
mov
call
jmp
pushf
popl
jmp
xchg
pusha
pushf
mov
pushl
ret
jmp
xchg
pushf
mov
push
push
pushl
ret
lea
pusha
xchg
push
push
pushl
ret
jmp
lea
jmp
jmp
lea
jl
lea
push
mov
pusha
pushl
mov
lea
jns
pusha
mov
pusha
lea
jmp
mov
pusha
mov
pushf
mov
push
call
pop
mov
adcb
xchg
lahf
cwtl
cwtl
mov
pusha
jmp
lea
jmp
mov
push
nop
lea
mov
pushf
push
movb
pusha
xchg
jmp
movzbw
mov
nop
movsbl
call
call
lea
jne
lea
pushf
xchg
pushf
mov
push
push
pushl
ret
call
pushf
call
nop
pusha
push
mov
pop
movsbl
lea
call
push
push
lea
jmp
push
pushl
pusha
nop
call
push
pushf
mov
call
call
call
mov
jmp
jmp
pusha
call
jmp
push
pushl
call
pushf
mov
call
pushl
mov
jmp
lea
call
call
pusha
nop
jmp
pushf
xchg
pushf
pushf
jmp
pusha
mov
pushl
pushl
jmp
jmp
pushf
push
xchg
bswap
pop
bswap
mov
call
push
xchg
push
pusha
pushf
xchg
movsbw
not
setbe
lea
mov
pushf
movb
mov
movb
call
pushl
lea
call
pushl
jmp
movsbw
pop
pushf
pushl
ret
mov
pop
cwtl
movsbw
mov
mov
pushf
mov
pushf
jmp
mov
jmp
mov
pushf
mov
mov
pushf
jmp
pusha
nop
setae
lea
push
mov
call
not
mov
mov
movb
pushl
ret
movl
push
pushf
push
lea
jmp
mov
push
nop
jmp
push
inc
scas
inc
fdivr
mov
aad
ss
ret
enter
lahf
in
sbb
jno
mov
mov
xlat
jne
inc
clc
mov
mov
and
pop
adc
xor
fidivl
inc
in
call
push
pop
sub
mov
cmpsb
adc
hlt
cmp
sahf
push
adc
dec
fiaddl
inc
popl
jge
int
dec
inc
xchg
xchg
push
sbb
jg
mov
pushf
or
adc
sub
nop
fdivrs
push
movsl
jnp
or
mov
push
mov
inc
fdivr
je
insl
rcrb
das
jbe
fisubrs
jp
sub
mov
scas
mov
mov
mov
cli
fcmovnb
jecxz
fwait
mov
dec
add
fcmovbe
inc
fdivr
cwtl
in
pop
sbb
mov
adc
adc
push
sub
mov
cli
push
add
pushf
pop
cvtpi2ps
pop
dec
gs
jo
arpl
mov
cli
lcall
cmp
add
dec
and
ror
mov
dec
shll
fcmovu
pop
cs
and
xlat
sahf
pop
fists
and
daa
mov
cld
imul
push
sub
mov
addr16
sbb
mov
or
jbe
pop
movsl
fistl
pushf
enter
lods
jno
aaa
mov
inc
cmpsl
mov
rclb
adc
sbb
add
mov
inc
in
out
pusha
dec
movsb
sub
or
cli
imul
mov
mov
fdivrs
into
stos
jno
pop
and
gs
cli
push
adc
call
pop
arpl
adc
aas
filds
rolb
xchg
int
push
js
pop
cmc
sbb
cmpsl
addl
pop
and
test
lcall
lcall
aaa
stos
subl
sbb
sti
cmp
leave
pcmpeqd
add
sbb
shl
mov
cltd
mov
subb
jno
sub
cmp
lcall
or
pop
rclb
mov
xchg
mov
loope
shlb
dec
ljmp
insb
or
sbb
or
es
dec
mov
loopne
ljmp
jns
mov
movsb
test
push
js
mov
insl
push
loopne
jno
clc
stc
je
scas
or
xlat
push
arpl
cwtl
adc
push
dec
cmc
lea
or
ror
xchg
xchg
pop
jb
and
dec
fwait
sbbl
ss
pop
loopne
out
insl
xlat
push
push
mov
loopne
jecxz
dec
mov
cli
mov
ds
insl
push
and
pop
and
shll
pop
cmc
push
sbb
fcomip
xor
stos
push
lahf
sbb
xchg
push
push
cmp
dec
jmp
dec
ret
fimull
dec
out
pop
repz
jg
fdivrs
sbb
pop
cmpsb
es
ret
pop
mov
add
jbe
mov
push
cwtl
loop
mov
push
xchg
aaa
hlt
mov
xor
push
fsts
mov
add
bound
cmc
lods
shrl
lea
cmc
fmuls
scas
add
dec
neg
sub
int3
sbb
dec
mov
sti
or
jge
lods
cwtl
push
mov
scas
xor
arpl
cmc
jns
cmp
dec
out
dec
sub
cmpsl
repnz
dec
lret
and
sahf
pop
cmp
les
jl
idivb
inc
shlb
repz
add
sub
pusha
pushf
and
cmp
dec
adc
mov
lahf
int
xor
pop
push
hlt
andb
adc
arpl
pop
shll
sbb
pop
xchg
aaa
movsl
add
dec
divb
aam
test
push
sti
cmpxchg
out
repz
jecxz
negb
jb
or
mov
js
jns
jecxz
loop
sub
jb
push
mov
dec
stc
push
pushl
mov
ret
mov
in
sub
ss
cmc
or
jb
or
aam
imul
pop
push
or
inc
sahf
jo
xchg
sbb
fcoml
adc
dec
leave
pop
loop
add
lcall
pop
adc
mov
sub
sub
xor
sbb
ss
xchg
mov
imul
cmp
xor
fdivl
lods
mov
and
adcl
jmp
pushf
nop
pusha
pushf
movw
movw
mov
call
mov
pushl
call
lea
mov
jmp
call
pop
call
pusha
pusha
jmp
call
xchg
pusha
pushl
mov
pushf
call
mov
push
lea
pushf
xchg
push
movb
movw
pushl
pushl
ret
push
call
jmp
push
pusha
mov
pushf
jmp
mov
jmp
xchg
mov
pushl
ret
pushf
pushf
nop
call
not
mov
push
mov
pushl
movb
mov
jmp
xor
call
pusha
nop
not
mov
pusha
pushf
xchg
push
movb
movl
pushf
xchg
bswap
mov
lea
jge
pusha
mov
pusha
call
jmp
dec
cmp
add
call
mov
xchg
mov
pushl
ret
pushl
lea
jo
xchg
pushf
pushf
mov
pushl
ret
jmp
jmp
xor
stc
cmc
xorl
push
test
xor
pusha
xor
stc
bt
xor
stc
stc
pushl
popf
push
mov
pushl
ret
call
mov
mov
pusha
mov
lea
jmp
mov
push
push
pushl
movb
lea
jmp
xchg
bswap
call
pushl
pushf
mov
lea
not
lea
mov
jmp
fnsave
pushf
pushf
mov
jmp
jmp
pushf
push
call
lea
mov
xchg
mov
pushl
ret
push
xchg
movsbw
mov
pusha
pushf
mov
mov
push
call
mov
call
pushf
lea
movl
pushf
jmp
pusha
xchg
jmp
xchg
mov
pushf
pushl
mov
pushl
ret
push
mov
call
mov
pushf
mov
mov
pushf
jmp
call
lea
movsbw
pushf
movsbw
nop
call
call
call
pushf
xchg
pushl
pushl
mov
pushf
pushl
ret
fwait
cld
push
mov
inc
jo
ljmp
xchg
push
cmp
cmc
mov
xchg
push
pop
jle
ret
pop
outsb
das
xor
adc
mov
in
std
mov
popa
push
cmpsb
rorb
jl
xchg
adc
adc
push
pop
enter
rorl
insl
pop
push
and
sub
std
pop
repz
call
jo
mov
mov
sbb
nop
mov
add
mov
jne
fcoml
int
mov
mov
jge
mov
pop
fimuls
or
push
and
jbe
inc
icebp
jbe
cmc
mov
and
sbb
rcrb
or
ds
pop
and
insl
sub
mov
incb
inc
push
les
stos
mov
adc
call
or
iret
mov
or
xlat
hlt
inc
sub
ds
popa
adc
scas
daa
in
ja
jl
jne
daa
add
xor
jb
inc
imulb
out
lret
das
cmc
pusha
fsts
jg
sub
outsb
sub
cs
mov
jmp
scas
arpl
fldenv
add
dec
mov
mov
cmp
dec
jle
cld
mov
pushf
pop
sbb
or
adc
stos
adc
ljmp
and
push
xor
in
or
loope
fs
lahf
call
pushf
cmpsb
adc
popf
test
imul
test
mov
xlat
fs
loop
inc
shr
push
test
inc
repz
sub
imul
sahf
cltd
mov
leave
and
loope
int3
add
fldl2t
push
pop
xchg
sub
push
and
mov
push
pop
fisubrl
test
pop
movsl
cwtl
xor
gs
xchg
inc
jnp
mov
mov
pusha
jno
cmpsb
loopne
adc
mov
mov
mov
sub
jmp
int
imul
repz
push
pop
es
test
nop
pop
fmull
cmp
mov
add
pop
mov
adcb
rolb
sbb
js
outsb
test
scas
outsl
mov
cld
ss
fisubrs
pop
inc
cmp
inc
push
ret
jbe,pn
mov
rcll
mov
xor
leave
aaa
pushl
push
sbb
stos
cmpsb
sub
sub
ja
das
dec
mov
in
pop
jp
mov
in
outsl
movsl
jb
insl
sbb
lds
jl
jbe
popf
sbb
insb
push
push
ret
mov
jge
jbe
movsl
sub
mov
mov
pusha
pop
sarb
cmc
shrl
in
cmp
cmp
shrl
xchg
into
cwtl
mov
stos
sbb
outsl
inc
lret
aaa
add
fwait
std
lcall
xor
jmp
adc
ja
rcl
push
shll
lret
fidivrs
mov
ljmp
push
fiadds
jl
pushf
inc
mov
sub
ret
sbb
pop
adc
stos
fsubl
adc
or
inc
fwait
std
in
cmpsl
out
xchg
dec
bound
hlt
mov
xchg
fldt
arpl
aas
pop
rcrb
xor
mov
pop
pop
mov
dec
mov
pop
xchg
pop
outsl
mov
xor
cmp
adc
pop
adc
ja
rcrl
test
ljmp
cmpb
jecxz,pt
call
ja
movzbl
mov
movzbw
mov
pushf
mov
call
xchg
mov
push
push
pushl
ret
push
mov
pushf
call
xchg
push
pushl
ret
movl
xchg
mov
movw
movw
pushl
ret
movsl
inc
pop
mov
jmp
repz
ljmp
push
and
pushf
jmp
mov
pushf
pushf
pushl
ret
jg
add
xchg
movsbl
push
jmp
call
nop
pusha
jmp
nop
push
movl
push
xchg
not
call
call
mov
nop
bswap
pop
call
xchg
pushl
mov
movw
pushl
ret
mov
mov
push
jmp
call
mov
call
pushf
pop
xchg
movzbw
pushf
pop
xchg
pushf
push
lea
pop
mov
movsbw
call
mov
movb
push
movb
call
movzbw
pop
not
mov
movb
pusha
lea
call
jmp
push
mov
mov
push
pushf
lea
jmp
pusha
xchg
call
call
not
mov
jmp
call
call
call
lea
jp
push
xchg
pusha
pushf
pushl
ret
pushf
jmp
not
not
nop
pushf
bswap
bswap
pushf
mov
pusha
jmp
pusha
jmp
mov
mov
pushl
call
lea
push
mov
call
pusha
call
push
mov
int
mov
out
inc
jmp
xchg
push
pushf
pushl
ret
jmp
call
pushf
push
call
mov
pushf
pushf
call
push
nop
push
movb
jmp
call
movw
pushf
nop
movb
movb
xchg
push
pusha
mov
call
mov
mov
call
pushf
mov
push
pushf
lea
call
pusha
jmp
jmp
pusha
push
mov
call
xchg
push
push
pushl
ret
call
call
movb
xchg
pushl
mov
pushl
ret
xchg
movb
pushf
pushl
ret
mov
call
mov
lea
jle
pushf
pushf
pusha
lea
pushf
call
mov
pushf
jmp
lea
pushf
pusha
mov
not
mov
push
mov
pushf
pushf
movb
call
mov
xchg
pushf
pusha
push
mov
pushl
ret
push
lea
push
lea
jns
pusha
mov
xchg
pushf
pushf
push
pushl
ret
jmp
mov
jmp
call
mov
push
lea
jge
pushf
mov
mov
movb
push
mov
mov
push
lea
pusha
xchg
push
pushl
pushl
ret
jmp
lea
not
mov
jmp
lea
lea
ja
mov
movsbw
jmp
jp
pushf
movb
nop
pusha
jmp
call
push
xchg
movzbl
bswap
mov
pushf
pushf
push
mov
movb
lea
mov
pusha
xchg
mov
pushf
mov
pushl
ret
pushf
pusha
pop
nop
not
bswap
bswap
not
mov
pushf
mov
call
mov
lea
jmp
not
jmp
mov
pushf
pushl
call
mov
pushf
mov
movsbw
pushf
bswap
jmp
movzbw
mov
pushf
not
mov
push
mov
movb
movl
pushl
ret
jmp
not
not
mov
call
movw
mov
pushf
lea
pushf
movl
call
nop
mov
pushl
call
movb
jmp
movw
mov
jmp
xchg
mov
jns
inc
and
mov
push
movb
pushl
pushl
ret
pusha
push
pusha
nop
call
push
test
scas
xchg
mov
push
in
repnz
fdivl
jmp
dec
shlb
int3
sub
int3
psraw
mov
mov
stos
lock
mov
jnp
in
loopne
pop
and
sbb
xchg
fsubl
xchg
jbe
fiadds
mov
adc
mov
sti
xchg
ds
test
movsbl
mov
mov
xor
jmp
ret
lea
fisubrs
add
test
sahf
push
push
sbb
scas
cwtl
cltd
push
aas
pop
xchg
lods
mov
movsb
js
js
sub
cli
not
shll
mov
ds
adc
orb
lahf
lret
scas
mov
inc
jle
dec
sbb
mov
mov
movsb
and
jo
and
insb
outsl
sbb
out
out
mov
push
lock
mov
push
adc
mov
mov
mov
loopne
pusha
stos
cmpsb
push
add
imul
mov
ds
sbb
mov
mov
add
push
cmp
add
mov
push
fdivrs
push
fimull
xor
jmp
pop
jecxz,pn
jmp
pop
nop
fcmovnbe
add
xor
jne
sub
icebp
js
lds
cmp
loopne
gs
sbb
int3
dec
jp
lods
das
cmp
daa
sti
loope
cmpl
sub
fwait
sbb
jle
shll
out
daa
movlps
es
mov
in
push
xor
dec
cmp
jge
repnz
xchg
mov
push
pop
dec
add
lock
popa
pop
cli
bsr
test
mov
lods
mov
cld
fmul
daa
jo
out
iret
ss
test
pop
into
ret
cltd
call
add
jb
outsl
jne
xor
pop
fimull
lods
cmp
jb
mov
xlat
xchg
xchg
dec
imul
push
pop
imul
dec
lods
sbb
xchg
les
cmp
cmp
dec
dec
xchg
movsb
loope
xor
add
push
push
jle
mov
sbb
cmp
repnz
xchg
mov
lahf
mov
arpl
lret
xor
iret
insb
mov
cmc
stos
in
rcrl
sub
fldcw
mov
inc
sbb
fisubl
or
jo
sarl
pop
push
push
and
movsb
in
sarb
push
mov
jle
shl
dec
ret
jbe
lods
xchg
outsl
imull
pop
sbb
enter
subl
mov
push
loop
or
rorl
inc
out
and
pushf
mov
pop
dec
pop
mov
add
lock
int3
jle
inc
push
and
icebp
out
cmc
push
mov
test
dec
fstps
add
cmp
inc
psadbw
jle
mov
push
test
jb
hlt
sbb
add
lods
push
push
xor
jl
inc
repnz
dec
dec
in
adc
pop
mov
jl
pinsrw
ss
mov
and
mov
jmp
mov
cs
xor
push
loop
neg
dec
adc
or
fmul
sub
push
mov
cltd
lods
mov
jecxz
and
lods
jle
xchg
ja
arpl
lock
fsts
add
cmp
shll
popa
insl
mov
jp
adc
fsubs
sub
xchg
outsl
js
or
adc
je
jg
sti
inc
aad
out
repz
loope
in
stos
fwait
arpl
push
popf
shll
int
mov
sub
fisubrl
orl
sbb
add
and
sub
test
dec
sbb
popa
outsl
xchg
mov
add
mov
jb
push
pushf
pusha
lea
jmp
mov
not
not
bswap
mov
movl
mov
lea
push
pushf
mov
not
cwtl
lahf
mov
pushf
call
xchg
movb
mov
pushl
ret
jmp
jmp
movsbl
nop
pushf
lea
push
mov
movb
pushf
mov
xchg
call
jmp
mov
movb
pushf
mov
pushl
lea
pushf
xchg
movb
pushf
pushl
push
pushl
ret
movw
lea
pushl
pushf
jmp
xchg
push
push
push
movb
pushl
ret
jae
push
bswap
pusha
nop
pop
lea
bswap
pusha
xchg
lea
xchg
mov
movsbl
movzbl
lea
lea
movzbw
jmp
xchg
pushl
movw
movb
pushl
pushl
ret
mov
pushf
xchg
movsbw
setnp
bswap
not
mov
call
not
push
nop
movzbw
bswap
bswap
mov
pusha
jmp
mov
movzbl
mov
lea
jle
pusha
pushf
pusha
lea
pushf
pushf
pushl
mov
pop
not
mov
call
xchg
bswap
not
movsbl
xchg
push
pushf
pushl
pop
mov
pop
not
mov
jmp
mov
mov
lea
mov
push
push
push
mov
pusha
pushf
lea
mov
pushf
pushf
mov
xchg
movb
movw
pushl
ret
mov
pushf
push
lea
movw
mov
xchg
pushf
mov
push
pushl
ret
pushf
pushf
mov
lea
jns
lea
pushf
pushl
jmp
xchg
pushl
pushf
pushl
ret
mov
pushf
pushf
lea
push
xchg
movw
push
mov
mov
pushl
ret
jmp
xchg
pusha
pushl
push
pushl
pushl
ret
jmp
call
mov
pusha
pushl
call
lea
mov
call
pusha
lea
jmp
call
xchg
pushf
jmp
pushf
lea
jbe
pusha
nop
call
lea
pushf
mov
mov
xchg
movl
mov
push
movb
pushl
ret
movzbw
mov
push
not
call
pushf
jmp
xchg
pushf
movw
mov
pushl
ret
xchg
not
pusha
pushf
mov
pushf
movl
call
push
pushf
movb
mov
pop
mov
lea
jae
push
push
pusha
mov
call
jmp
xor
clc
pushl
popf
pusha
pushf
pushl
ret
call
mov
movb
jmp
call
setge
not
pushf
mov
push
pusha
jmp
xchg
movl
call
call
movw
call
call
mov
call
xchg
not
not
mov
mov
mov
jmp
xchg
pushf
push
pushf
pushl
ret
pusha
push
lea
movb
mov
call
call
jmp
call
mov
mov
mov
call
pop
setl
nop
push
lahf
movsbw
jmp
lds
and
mov
pop
add
call
dec
xacquire
jmp
nop
jmp
call
call
call
nop
jmp
jmp
xchg
xor
mov
jmp
xchg
pushf
pushl
ret
lea
pushf
pushf
jmp
lea
pusha
push
pushl
ret
xchg
push
movw
mov
pushl
pushl
ret
lea
jmp
jno
xor
movsb
out
dec
imull
mov
mov
jno
mov
addr16
pop
cli
xchg
ret
xchg
iret
cltd
aaa
dec
mov
loopne
scas
inc
in
mov
pop
dec
jno
adc
loope
mov
jns
aaa
in
nop
stos
je
push
and
push
and
push
sbb
mov
fs
jno
ja
xor
inc
jbe
fstpl
mov
dec
shl
jae
insb
mov
dec
mov
popf
addr16
push
jo
or
xchg
imul
sti
aam
push
pop
mov
addr16
movsl
fnsave
jns
stos
jnp
push
and
pushf
mov
sub
adc
and
mov
xchg
add
pop
lea
push
sbb
loopne
pusha
jmp
xor
es
cmc
in
add
adc
xchg
pop
sub
xor
and
div
add
fsubs
cmp
repz
xchg
lcall
xchg
or
inc
jl
cmp
cwtl
popf
nop
shlb
mov
shlb
pop
mov
incb
mov
push
xchg
sahf
push
insl
loopne
adc
or
orb
mov
lds
cs
pop
jecxz
fcompl
addr16
dec
adc
mov
add
mov
sub
push
mov
push
xchg
push
shll
pop
lds
cli
ret
test
adc
popf
push
sbb
es
dec
popf
sub
mov
fidivrl
add
or
pushl
push
push
fidivs
cmp
jbe
adc
mov
cld
pop
outsb
jg
inc
sbb
or
inc
lds
lcall
jno
xchg
push
xchg
xor
mov
jmp
scas
and
lea
js
pusha
xchg
pushf
movw
pushl
ret
lea
bswap
call
pushf
lea
pushf
pusha
xchg
pushf
push
pushl
ret
mov
mov
jmp
pushl
xchg
movb
mov
pushl
ret
mov
jmp
lea
pushf
movw
mov
call
call
jmp
not
mov
push
lea
jmp
push
lea
movzbl
bswap
nop
movzbw
mov
call
jmp
mov
pushf
jmp
movsbw
movsbw
mov
pusha
lea
not
call
xchg
push
push
pushf
pushl
ret
lea
jmp
movb
pushf
lea
mov
push
xchg
push
movb
pushl
ret
call
call
mov
call
mov
call
mov
pushf
mov
pushl
lea
jmp
lea
pushf
pushf
push
mov
not
mov
call
pushl
lea
pushf
call
not
movzbw
call
pusha
pushf
popl
call
push
call
pushf
lea
pushf
call
xchg
movl
pushl
ret
xchg
mov
pushl
ret
pushf
lea
movw
mov
call
xchg
movb
movb
mov
mov
pushl
ret
jmp
nop
mov
pusha
call
bswap
mov
pusha
call
nop
movw
xchg
bswap
cwtl
movzbw
bswap
mov
pushl
call
pushf
movl
mov
pushf
call
mov
jmp
lea
jmp
jmp
mov
lods
sub
jmp
xchg
push
mov
pushf
pushf
pushl
ret
call
lea
push
pushl
pushf
mov
xchg
movb
mov
mov
pushl
ret
lea
jmp
xchg
push
pushl
ret
movb
nop
pusha
call
xchg
movsbw
bswap
movsbw
mov
mov
jmp
jmp
jmp
nop
call
jmp
movsbw
nop
mov
setae
bswap
pop
jmp
pusha
xchg
movzbw
bswap
mov
jmp
mov
push
push
movb
lea
movb
pushf
pusha
pushl
ret
call
call
pop
mov
push
pushl
pushl
ret
pushf
call
mov
bswap
lahf
mov
movb
movw
jmp
push
mov
mov
xchg
call
and
add
test
xchg
call
push
jmp
call
xchg
call
mov
call
mov
pusha
mov
call
not
nop
cwtl
mov
pop
not
call
sub
call
mov
mov
lea
pushf
pushl
mov
pushf
xchg
pushf
push
pushl
ret
xchg
pusha
movb
pushl
ret
not
xchg
not
push
pusha
jmp
mov
movw
call
jmp
lea
jne
pushf
movl
pushf
lea
jmp
mov
lea
call
jmp
push
xchg
pushl
push
mov
lea
jg
pusha
lea
mov
lea
mov
pop
lea
not
call
nop
pushf
pushl
call
lea
je
xchg
pushf
pusha
pushl
ret
jmp
nop
push
pushf
push
mov
xchg
jmp
push
mov
jmp
pushf
push
xchg
movl
mov
pushl
ret
movl
jl
pushf
pushf
movl
movl
pushf
mov
push
lea
jmp
xchg
movb
pushl
pushf
pusha
pushl
ret
call
call
jmp
lea
mov
movb
mov
movb
pushl
ret
call
jmp
mov
call
mov
pop
movsbw
mov
not
bswap
jmp
cmpsl
repz
sahf
dec
sbb
or
imul
mov
popa
and
mov
bound
test
sbb
es
subb
mov
inc
insl
and
aaa
lahf
cmp
fcompl
mov
fbld
push
push
add
arpl
jo
xchg
inc
divl
jle
mov
popa
adc
xor
dec
sub
sbbb
adc
pop
lret
fucomip
xchg
push
sbb
cli
ja
push
movsl
cmp
addr16
pop
movsl
pop
add
inc
cmc
cmp
sbb
testl
mov
iret
and
xchg
cmp
nop
or
enter
pop
out
pop
rorb
mov
jmp
daa
ljmp
or
fimull
sub
dec
mov
xchg
rorl
xor
loopne
into
icebp
push
xor
ljmp
loop
xchg
xor
mov
jnp
push
sbb
mov
aas
mov
push
icebp
add
popf
imul
imul
aam
pop
xchg
pop
ds
inc
inc
pop
aad
xchg
mov
je
pop
dec
cmpsl
jae
sbb
adc
xchg
arpl
or
add
mov
sbb
int3
in
jp
sahf
cmpsb
daa
jle
jg
jle
mov
loopne
and
cli
pop
shll
imul
ret
daa
movsb
std
lds
test
pop
push
jmp
pusha
mov
cmc
jl
loopne
jge
das
and
outsb
mov
push
clc
sub
xor
jae
dec
mov
mull
jbe
adc
ds
xchg
add
rorl
cmp
jmp
fcoms
dec
adc
in
scas
ret
xchg
scas
rol
ds
pop
lahf
andb
inc
ret
mov
lods
inc
or
lret
mov
cwtl
aad
cs
cwtl
inc
push
push
cmp
movb
add
xchg
push
call
push
pushf
push
xchg
jmp
lea
lea
js
xchg
push
pusha
pushl
mov
pushl
ret
pushf
mov
call
mov
movsbw
not
pusha
nop
call
call
pushf
jmp
pop
mov
movsbl
pushf
pushf
mov
pushf
pushf
pushl
pushf
pushl
ret
mov
call
pusha
pushf
pusha
mov
push
lea
call
movb
push
mov
movsbw
mov
mov
push
jmp
lahf
bswap
seto
mov
push
mov
pushl
jmp
dec
scas
in
pushl
nop
pusha
lea
jb
push
pusha
xchg
pushl
pushl
mov
pushf
mov
pushl
lea
jmp
mov
lea
lea
jb
mov
call
pushf
movb
push
nop
pusha
jmp
push
pushf
movl
push
lea
jmp
lea
pushf
pushf
call
bswap
call
call
lea
jmp
pushf
popl
call
pop
jmp
pop
lds
lcall
xor
test
jg
push
jmp
mov
fsubs
xchg
and
mov
stos
add
lahf
and
inc
dec
cwtl
scas
mov
stos
not
xchg
push
dec
push
jge
mov
mov
pop
pcmpeqd
mov
xchg
gs
lds
jecxz
xchg
insb
js
ds
adc
adc
mov
sbb
in
test
push
sbb
pop
addl
xor
mov
je
jle
dec
mov
inc
mov
pop
int
fcoms
or
jno
fildll
mov
push
xor
cmpsl
sub
mov
ficoml
sub
je
stos
ret
cmp
in
fstl
les
mov
test
push
jle
or
cmpsl
mov
sub
mov
lret
mov
xor
add
adc
loope
ds
ss
addr16
add
idivb
push
cltd
adc
jns,pn
push
daa
mov
sub
jbe
scas
xor
add
fadds
mov
push
pusha
add
mov
sbb
ds
jecxz
inc
repz
mov
stos
rclb
or
jmp
push
jge
sub
xchg
mov
ljmp
push
cwtl
push
mov
push
and
popa
mov
outsl
and
lret
pop
xchg
orb
xchg
xchg
icebp
into
push
outsb
mov
xor
add
mov
pop
mov
mov
push
test
nop
lock
stos
lds
and
inc
out
stos
xor
sarl
add
xchg
pusha
jb
and
jne
iret
mov
mov
inc
inc
and
xchg
inc
and
lret
or
mov
sbb
or
ret
cmp
shlb
xor
cltd
cltd
inc
leave
jns
adc
mov
pop
lock
into
hlt
loope
not
pop
and
pop
cmp
xor
dec
out
pushf
fisttpl
sub
movsbl
adc
mov
aad
mov
and
stc
mov
rcrl
jbe
push
push
push
and
ljmp
js
ret
popw
fidivrl
jo
dec
dec
aaa
sub
cmp
notl
mov
jne
jp
sbb
jb
add
or
pushf
dec
push
mov
insl
pop
mov
cli
bound
mov
xor
lret
or
stc
inc
test
lods
inc
fmuls
adc
fs
inc
fistpl
push
cmc
std
and
pop
and
sahf
mov
or
dec
pop
sub
add
mov
or
fstpt
fisubl
js
sub
stos
xchg
fidivrs
xchg
arpl
bound
adc
mov
fidivrl
and
jnp
incl
aaa
jg
push
test
cmpsb
jl
sub
push
push
sub
adcb
add
les
and
ja
int3
or
mov
or
xor
addr16
icebp
int
daa
stc
inc
mov
lahf
push
test
jb
ljmp
scas
pop
fs
adc
in
out
xchg
stos
outsl
jl
lods
or
scas
add
dec
mov
loop
dec
ds
mov
dec
and
cltd
push
sub
push
pop
ret
mov
add
popf
subb
xchg
add
fldl
sahf
daa
int
cmc
add
mov
movsb
in
cmc
xor
popa
and
mov
sub
enter
call
pop
fadds
add
mov
aas
scas
aas
sub
jl
cwtl
jo
push
fcmovb
and
into
pushf
adcb
pop
aam
jl
push
mov
sbb
cs
dec
cmp
jecxz
leave
pop
mov
jnp
dec
clc
adc
or
aad
and
push
mov
rcrb
icebp
and
push
xchg
xchg
fidivrl
jp
and
fnsave
fldl2e
push
mov
data16
inc
push
lret
jae
into
sub
and
xchg
cmp
inc
out
scas
cltd
popa
and
clc
test
es
repz
in
sub
jmp
jmp
or
push
jno
es
and
dec
test
pop
sub
sbb
and
out
clc
data16
jno
push
and
out
leave
inc
fs
mov
ds
repz
inc
test
xchg
mov
xchg
jecxz
sub
add
mov
lea
mov
mov
jmp
lea
movzbl
mov
mov
mov
mov
pushl
movl
movb
pushl
ret
pusha
nop
pusha
bswap
call
jmp
mov
not
movzbw
bswap
jmp
jmp
call
lea
call
xchg
mov
pushf
push
pushl
ret
push
pusha
jmp
lea
jmp
push
movb
call
lea
jg
pushf
lea
jmp
inc
or
add
call
pushf
movsbl
mov
mov
pusha
lea
jae
pusha
lea
pushf
mov
mov
mov
call
jmp
xor
jmp
mov
pushf
mov
pusha
lea
pop
movw
mov
bswap
mov
movzbw
lea
mov
push
pusha
lea
pushl
lea
bswap
mov
lea
mov
pushf
mov
movw
movb
pushl
ret
pushf
pushl
xchg
pushf
pushl
ret
jmp
pushf
xchg
lea
jl
push
pushl
mov
mov
movzbw
not
pop
movsbw
mov
pushf
call
push
movzbw
mov
jmp
mov
bswap
movsbw
push
mov
pusha
jmp
call
jmp
xchg
mov
pushf
pusha
mov
push
pushl
mov
pushf
jmp
xchg
pushf
pushl
ret
mov
jmp
call
jmp
lea
pusha
xchg
push
mov
pushl
ret
mov
call
pushf
pusha
push
movl
push
mov
lea
jmp
int
pop
xchg
or
imul
and
mov
or
lret
scas
pusha
loopne
push
pop
push
aaa
movsl
outsl
dec
adc
xor
pop
cmp
sub
xchg
in
and
mov
insb
adc
popf
pop
and
fstps
aam
popf
scas
dec
mov
inc
push
pop
sbb
test
sub
sti
imul
loop
add
adc
pusha
pop
enter
cmp
jns
lods
mov
addb
out
pushf
jp
add
mov
ljmp
int3
xchg
push
lret
and
xchg
push
lods
pop
lea
push
mov
nop
jne
lods
stos
mov
scas
inc
jne
loope
pop
xchg
mov
pop
xchg
or
sub
sub
daa
push
mov
inc
clc
rcll
pop
insb
cmp
mov
lret
lret
daa
das
dec
push
xchg
icebp
popf
sahf
jl
aaa
mov
das
mov
xlat
pushl
xor
loop
mov
pop
adc
loopne
pushf
dec
pop
out
cmp
lods
and
push
insb
outsl
test
cmp
push
outsl
cmpsb
ja
inc
xlat
pop
nop
cmp
int
lcall
aam
push
int
in
js,pn
push
jl
xorl
sarl
inc
imull
icebp
bound
mov
cmp
clc
testl
imul
out
inc
jmp
mov
sub
adc
scas
call
pop
call
and
pop
pusha
xchg
inc
out
lock
mov
xor
dec
xor
fisubl
mov
cli
push
cltd
imul
aas
mov
in
xchg
jl
xor
subl
cmc
jle
or
pop
fiaddl
pop
xor
mov
lcall
xor
inc
lock
pop
ret
dec
mov
pop
lahf
cmpl
sti
leave
fildl
dec
lret
movsl
test
mov
stos
and
add
cmc
mov
aas
lods
jne
fisubs
xor
sbb
ljmp
cmp
push
in
or
sub
dec
jbe
movsl
stc
mov
ds
xchg
stc
sbb
xor
xor
inc
dec
jne
dec
scas
sbb
lahf
mov
lahf
loopne
dec
xor
mov
xor
push
cwtl
pushl
push
stc
imul
mov
mov
xorb
add
xchg
fiadds
mov
lock
cmc
imul
int3
frstor
pop
fucomip
push
and
adc
adc
inc
xor
mov
ds
xchg
rorl
test
test
xor
daa
xchg
popa
push
mov
mov
pop
fs
addr16
stc
cld
push
sub
ljmp
jo
dec
mov
imul
cli
pop
ret
mov
sub
sub
mov
cli
clc
or
mov
jbe
lock
jns
push
fstp
clc
rcrb
cmpsb
inc
sub
arpl
addr16
mov
cmp
push
aaa
jbe
sahf
ljmp
pop
fnop
xchg
inc
xchg
cmp
popa
cmp
das
inc
sbb
jl
lds
std
adc
lret
in
ja
aaa
int3
xchg
push
xor
xchg
adc
mov
add
mov
or
xchg
enter
push
lret
add
pushf
and
mov
pop
cmp
adc
lods
sbb
xor
xchg
jns
mov
mov
aam
ret
leave
xlat
jmp
hlt
mov
or
lret
push
sub
lock
pop
loope
push
imul
dec
lds
dec
cmpsb
outsl
fdivrs
xchg
int3
jmp
insl
and
pop
movsl
or
cmpl
shrb
jns
jecxz
push
imul
insb
adc
cltd
push
adc
and
rolb
mov
mov
daa
xor
jmp
mov
or
cmp
fcompl
movsl
adc
adc
dec
data16
jno
adcb
push
push
outsb
aaa
jl
adc
jne
push
or
stc
cmpsb
lods
imul
cmpsl
lahf
rcl
pusha
imul
mov
aam
sbb
xchg
add
loope
xor
loopne
inc
adc
out
outsl
mov
pop
jae
test
call
fst
mov
adc
faddl
cwtl
mov
jno,pt
lret
std
dec
jmp
xchg
mov
sbb
add
xor
aaa
fwait
or
and
hlt
arpl
adc
dec
inc
mov
out
sbb
adc
rclb
mov
leave
push
ja
adc
mov
and
xchg
pop
and
cmp
out
mov
adc
jg
leave
stos
xchg
popa
into
int3
inc
lods
lock
mov
and
in
rcll
iret
dec
idiv
lods
add
stos
je
xchg
test
into
cmp
loopne
loopne
pop
test
jae
mov
inc
movb
fldenv
sbb
fmull
mov
iret
mov
sbb
mov
mov
in
insl
cli
popf
fisubrl
rolb
pop
mov
cmp
stos
adc
movsb
push
cmp
mov
dec
dec
dec
in
jb
pop
test
xor
int
adc
jae
sbb
mov
aaa
movsb
push
popa
out
shlb
ret
aam
jne
sub
dec
mov
push
stos
inc
mov
orl
in
sbb
sbb
cs
pop
cmp
lcall
jle
mov
push
outsb
xor
dec
adc
cmc
xchg
xlat
fwait
loope
rolb
addl
aam
xor
dec
sti
push
jp
daa
sete
push
je
mov
dec
mov
stos
in
stc
jo
xorb
repnz
xor
testl
or
xchg
movsl
fisttpll
pusha
pop
gs
cli
daa
add
mov
test
sub
gs
pop
dec
shlb
outsl
aas
and
test
cmp
addb
outsb
push
flds
or
js
testl
pusha
insb
push
popa
cmp
xor
and
std
call
mov
insl
scas
mov
dec
rorl
loope
jae
test
filds
stc
xor
pop
mov
and
mov
and
sub
stos
mov
insb
pusha
aad
xchg
and
lds
pop
aam
sub
gs
pop
add
leave
adc
add
lahf
xchg
outsl
ds
movsl
jbe
inc
ret
rcrb
push
leave
jl
add
lret
mov
stos
stc
cmpsl
mov
testl
add
add
call
jmp
call
movb
jmp
mov
mov
mov
call
mov
jmp
xchg
pushf
movb
push
mov
seto
not
pop
pop
mov
jmp
movb
xchg
pushf
mov
setb
movzbw
not
lahf
mov
pushf
jmp
jmp
lea
push
lea
jae
pushf
pushf
xchg
mov
movb
pushf
pushf
pushl
ret
call
push
pushf
xchg
movsbl
push
bswap
mov
mov
jmp
nop
lea
movsbw
mov
jmp
pushf
pushf
xchg
movsbl
call
movsbl
not
jmp
pusha
pushl
lea
pushf
pushf
mov
pushl
bswap
mov
jmp
mov
jmp
pusha
jmp
xchg
mov
jmp
call
jmp
xchg
movzbl
not
not
lea
mov
pushf
pushl
movb
mov
call
push
mov
lea
pushf
call
lea
jmp
xchg
push
mov
pushf
bswap
not
lea
mov
push
mov
push
pushf
mov
not
movsbl
mov
jmp
movl
call
sub
in
movb
push
pusha
xchg
movb
pushf
jmp
call
loope
cmp
sub
adc
cmp
ds
shll
xor
pushf
pop
jne
inc
arpl
jne
adc
and
rcl
dec
dec
push
scas
add
push
mov
iret
push
loop
push
jmp
xchg
mov
sub
and
in
or
jl
jbe
cmp
mov
cld
popf
cmp
mov
sbb
js
jb
cs
mov
cwtl
aaa
cmp
mov
rclb
cmp
dec
dec
pop
mov
mov
stos
aaa
clc
pusha
lods
mov
shrl
mov
xchg
js
test
leave
xchg
dec
movsl
test
push
mov
into
out
adc
mov
sti
cli
push
mov
inc
cli
ret
jo
jne
push
sbb
xchg
ljmp
push
mov
outsb
ret
push
push
neg
mov
or
divl
mov
mov
scas
mov
xchg
loope
cmc
into
aas
ds
mov
xchg
mov
dec
xchg
sub
push
stos
cmpsl
es
adc
test
idivb
test
or
adcl
call
pop
push
fldl
pop
mov
popa
jbe
aas
mov
stc
inc
mov
call
xor
clc
jnp
ljmp
push
pop
icebp
lock
popf
flds
aam
das
aad
aas
cmc
push
sbb
xlat
subb
and
enter
cld
mov
jp
pop
dec
sbb
call
adc
mov
xlat
ret
jb
mov
frstor
jne
adc
aad
jns
and
insb
pop
insb
xor
and
or
xor
sbbl
test
add
cmp
cmp
xor
data16
ss
xor
cmp
fnstenv
push
or
inc
test
outsb
mov
inc
xchg
scas
mov
push
loop
pop
sub
shrl
or
scas
jne
jae
pop
and
cmp
into
push
mov
jae
pop
and
mov
aad
adc
or
xchg
loop
xchg
jle
mov
adcl
shlb
cmp
adcb
pop
push
push
mov
jg
adc
push
pusha
inc
mov
inc
imul
hlt
xor
and
jb
lods
cld
mov
out
dec
int
push
mov
enter
movsb
dec
shrb
or
lock
xchg
nopl
stc
pop
fs
ret
fdivr
packuswb
jbe
lcall
shlb
pop
xchg
jecxz
out
mov
push
add
xor
jno
and
mov
in
push
sbb
xchg
jne
ret
dec
decb
aad
aad
mov
les
into
xor
loopne
and
mov
jmp
adc
lods
aaa
dec
shr
adc
sub
addr16
inc
xchg
es
inc
jo
stos
test
and
mov
ret
ror
sub
xor
call
mov
fs
or
or
sub
pushf
push
mov
pop
add
ljmp
cmp
push
es
std
lds
pop
lahf
ljmp
mov
int
test
lock
adc
ljmp
lahf
adc
fcomps
push
cmpsl
xchg
mov
stc
inc
fwait
adc
std
push
mov
add
mov
jno
fmull
push
pop
push
icebp
fidivs
cmp
add
xchg
mov
sbb
sbb
lods
addr16
cltd
ja
jecxz
dec
lret
fabs
into
and
mov
mov
push
adc
add
idiv
push
xchg
push
std
es
into
jmp
dec
dec
add
sub
xchg
inc
scas
push
cmp
jmp
rcr
or
fdivrl
std
mov
adc
sbb
and
das
stc
aas
ss
ja
add
and
mov
xor
jae
ficompl
and
lret
pop
adc
femms
pop
enter
scas
jmp
outsl
sub
stos
out
push
add
pop
add
sbb
jnp,pn
outsl
and
lcall
sub
stc
arpl
js
movsb
inc
mov
lds
jecxz
stos
push
scas
test
or
jle
lcall
iret
aam
orl
xchg
loope
mov
mov
ss
sub
lds
out
push
stos
mov
leave
cmp
daa
sbb
leave
movsl
mov
ss
pop
pop
and
mov
jle
int3
pop
cmp
outsb
int3
ror
jecxz
int
xchg
out
roll
jl
sti
mov
fadd
ret
push
jo
imul
sbb
jecxz
xor
sbb
fimuls
clc
jle
loopne
clc
inc
pop
jbe
bound
inc
adc
add
aas
jl
push
sbb
idivl
and
jl
mov
xor
std
ret
fsubr
fnstcw
xchg
leave
enter
lcall
jecxz
mov
leave
test
jb
push
mov
rol
mov
xchg
mov
orb
mov
mov
outsl
cmp
lods
mov
out
std
enter
sub
pop
push
and
pop
loope
nop
adc
movsl
add
jo
jmp
dec
inc
push
sbb
arpl
sub
icebp
lock
ret
shlb
in
and
or
add
rcrl
insb
aad
cmp
pop
sub
out
test
add
push
fmuls
adc
add
ss
jne
mov
outsl
ds
adc
cmp
pushf
or
pop
xlat
loope
xchg
inc
out
inc
std
inc
pushf
mov
div
jge
ret
daa
push
movsb
data16
rorl
loope
push
ja
and
int3
repnz
out
mov
int
xchg
into
cltd
ret
jns
bound
xor
bound
sub
add
inc
or
testb
adc
imul
mov
jp
mov
adc
outsl
stos
dec
popf
adc
xlat
das
mov
pop
inc
inc
or
pushl
dec
xchg
pop
cmpsl
mov
fwait
add
imul
outsb
inc
dec
dec
jmp
xchg
pop
push
add
and
xchg
ljmp
mov
xorb
hlt
andb
rclb
mov
loop
xor
sahf
mov
add
loop
andl
push
inc
or
dec
mov
lret
dec
dec
jmp
adc
rorb
cmp
mov
mov
adc
sub
add
mov
sub
push
dec
dec
jmp
shrb
inc
fwait
test
fsubp
mov
jb
or
pop
dec
pop
adc
mov
inc
fwait
cmp
xor
cmpl
cmp
dec
dec
jmp
inc
dec
test
mov
add
add
push
pop
decl
add
add
dec
push
jmp
call
call
call
call
mov
push
mov
jmp
pushf
push
mov
call
xchg
pusha
pushf
push
pushl
ret
mov
pushf
movb
lea
pushl
jmp
pusha
pushf
xchg
push
mov
pushl
ret
call
mov
push
jmp
mov
call
lea
jnp
pusha
push
lea
pusha
pushl
pushl
ret
pushf
popl
clc
xor
clc
movb
xor
cmc
xor
pusha
xor
push
bt
xorl
jmp
xchg
pushf
push
pushl
movb
pushl
ret
pusha
movb
xchg
pusha
mov
pushl
ret
movsbw
call
loope
fildl
cltd
enter
incl
xchg
and
mov
push
pop
or
jg
lock
loopne
lds
sub
and
lret
std
decb
xor
mov
xlat
stos
inc
loop
sbb
lock
lea
sub
mov
movsl
insl
insl
or
ret
shl
stc
mov
adc
loope
andl
xchg
cmp
loop
sub
das
aaa
minps
xchg
lods
mov
icebp
add
mov
movsb
dec
pop
cmp
popf
test
push
pop
sbb
repnz
dec
jae
cmpsl
leave
es
mov
adc
popa
add
das
aam
dec
pushf
movsb
mov
xor
push
adc
sbb
ret
sbb
adc
adc
dec
add
dec
pop
daa
cmpsl
ret
mov
arpl
aad
loop
jl
test
scas
push
movsb
push
mov
push
cs
xor
jno
fadds
ljmp
or
ljmp
test
nop
adc
cli
and
sub
sub
hlt
mov
push
adc
pop
in
mov
xor
mov
sbb
jle
ret
js
sub
hlt
inc
xor
lahf
sbb
stos
or
mov
int
loope
notb
push
es
push
jno
fwait
decb
aaa
xor
je
cli
and
ljmp
push
push
ss
out
jmp
xor
or
stc
dec
pop
pop
pop
je
cmpsb
aam
push
jge
mov
sbb
popa
stos
mov
pusha
dec
or
inc
push
outsb
mov
cmpsb
sub
add
jbe
inc
imul
fucomip
adc
mulb
sub
icebp
fldt
test
fs
or
fmuls
mov
aaa
insb
cmp
push
out
test
push
adc
js
xchg
xchg
imul
fcoms
push
or
gs
lret
sub
xor
inc
and
es
pop
inc
pop
shrl
jmp
inc
xchg
or
shrb
mov
shll
mov
and
mov
rorb
sbb
shll
aaa
repnz
mov
ss
pop
stos
add
fisubrs
jp
movsl
adc
cmp
xadd
popa
stc
sti
test
clc
lock
dec
xor
test
lret
mov
inc
pusha
scas
icebp
std
fldenv
mov
test
movsl
test
aaa
rol
jmp
mov
arpl
sub
or
adc
sbb
data16
mov
sub
fldenv
mov
mov
and
add
out
iret
pushf
repnz
adc
inc
lahf
call
sbb
cmp
mov
xor
mov
sub
inc
lock
pop
ja
int
and
sub
sarl
pop
inc
fstp
or
decb
jl
imul
pop
cmp
fists
imul
into
and
adc
movsb
loopne
mov
in
mov
outsb
sbb
dec
movl
mov
push
push
pop
xor
pop
test
or
test
scas
dec
int
cmpsl
outsl
inc
out
clc
sbbb
lahf
pop
es
pop
xchg
loopne
adc
aam
sub
add
jmp
push
lea
call
call
push
jmp
call
mov
bswap
pushf
mov
call
pusha
mov
movsbw
movsbw
not
mov
movzbl
bswap
pushf
lea
lea
jmp
mov
pushf
jmp
mov
xchg
mov
mov
mov
mov
pushl
ret
pushf
lea
movb
movb
pushf
xchg
pushf
mov
pushl
ret
xchg
pushl
movb
push
mov
pushl
ret
mov
jmp
mov
jmp
lea
jmp
pushf
movw
xchg
pushf
pushf
pushl
ret
mov
xchg
pushl
mov
jmp
mov
pushl
jmp
xchg
mov
pushl
ret
mov
pushl
push
pushf
pushl
lea
lea
jg
pusha
pusha
push
xchg
pushf
pushl
ret
pusha
lea
pushl
pushf
xchg
push
mov
pushl
ret
pusha
movl
jmp
push
xchg
movsbw
movzbw
pop
mov
pushf
lea
mov
mov
pop
mov
pusha
mov
call
pushf
call
pushf
jmp
pusha
xchg
pushf
pushl
ret
mov
call
mov
pushf
lea
jns
xchg
push
call
xchg
push
pushl
ret
pushl
push
lea
pushf
push
xchg
mov
push
pushf
pushl
ret
call
mov
push
pushf
jmp
pushf
call
mov
movb
pushf
mov
call
xchg
pushf
pushf
call
call
mov
push
pushf
cwtl
mov
movzbl
jmp
jge
xor
adc
or
js
lock
pusha
movb
pushf
lea
call
call
jmp
pushf
pushf
pushf
lea
jb
nop
call
pop
loopne
dec
pushf
mov
push
call
mov
pushf
movsbl
lea
mov
lea
je
push
mov
mov
jmp
jmp
mov
lea
mov
call
xchg
push
pushf
push
pushl
ret
push
pushf
pusha
movl
pushl
movl
pushf
lea
jmp
push
lea
pushf
lea
jae
pushf
mov
xchg
movb
pusha
pusha
pushf
pushl
ret
push
lea
movw
movw
xchg
push
pushf
pushl
pushl
ret
pushf
jmp
jmp
movw
lea
jmp
sarl
test
movsbl
pop
push
jmp
ret
mov
dec
sti
call
push
pusha
call
push
call
lea
call
movb
push
xchg
movb
pushl
ret
pushf
lea
jmp
call
movb
pushl
call
pushf
mov
pushf
jmp
pushf
movzbw
xchg
mov
not
not
push
xchg
pusha
mov
bswap
movsbw
call
call
nop
pusha
call
push
lea
push
pushf
xchg
movb
pusha
push
pushf
pushl
ret
mov
setbe
mov
bswap
mov
jmp
lea
jmp
mov
movsbw
movsbw
xchg
pusha
lea
mov
lea
movsbw
call
call
pushf
pushf
popl
pushf
bt
xor
push
xor
stc
cmp
xorl
pushl
xor
cmc
xor
test
xor
push
pushf
xor
mov
cmc
xor
call
push
pusha
mov
pop
pushf
bswap
pusha
mov
pushf
call
push
nop
jmp
jmp
xor
pusha
xor
call
lea
je
pushf
xchg
push
pusha
movb
pushl
ret
mov
movsbw
cwtl
jmp
pushf
movb
xchg
mov
pushl
movl
pushl
ret
pusha
mov
movb
nop
pusha
call
xchg
mov
mov
movb
pushl
ret
movzbw
mov
pushf
movb
movw
pushl
pushl
ret
mov
pushf
lea
push
pushf
xchg
pushf
movl
movb
movw
pushl
ret
xchg
movw
push
movb
pushl
ret
pushf
pusha
jmp
xchg
pushl
pushf
mov
pushl
ret
adc
sti
jmp
mov
call
mov
lea
jne
push
pusha
pushf
mov
jmp
jmp
xchg
hlt
lea
jo
push
lea
push
pusha
movb
pushf
pushl
ret
pushl
bswap
mov
jmp
call
lea
mov
mov
pushl
call
nop
mov
neg
std
push
fwait
push
lcall
inc
sbb
test
dec
cmc
or
add
and
ljmp
mov
mov
pushl
movsl
enter
adc
push
xor
sub
cltd
rcrl
sbb
paddq
ss
sbb
mov
shr
pop
sub
xor
mov
mov
jns
adc
lahf
cmp
stos
cmp
mov
adc
lahf
jmp
test
mov
movb
imul
mov
popa
fcmove
enter
fisubrs
mov
fnstcw
inc
add
pop
or
inc
jbe
mov
push
lcall
jp
repz
in
repnz
dec
in
push
and
xchg
loope
into
rcll
cmp
jo
leave
mov
shl
aad
cs
sub
call
xchg
add
mov
insl
pop
int
xor
xchg
aas
clc
das
daa
push
scas
pop
cmp
stc
js
pop
push
or
sar
mov
das
std
ss
xchg
xor
jle
test
cwtl
xchg
xchg
inc
pop
or
jge
and
fldenv
sub
lods
mov
sahf
fsubl
inc
inc
cmc
shrb
hlt
mov
or
add
inc
dec
mov
jecxz
ds
sbb
adc
push
inc
call
or
outsb
int
jmp
pusha
mov
jmp
pusha
lea
lea
ja
pusha
push
pusha
mov
pushl
pushl
not
mov
call
mov
movb
xchg
movb
push
mov
pushl
ret
pushf
popl
clc
xor
clc
cmp
xor
cmp
xorl
call
pushf
jmp
mov
movw
mov
jmp
jmp
pusha
call
mov
movzbw
movsbl
mov
push
push
pushl
push
pushl
ret
lea
pushf
call
call
lea
movb
jmp
jmp
mov
jmp
call
pushl
lea
pushf
xchg
pushf
pushl
push
movw
pushl
ret
call
xchg
push
xchg
lahf
mov
mov
jmp
lea
call
pushf
popl
pusha
xor
call
lea
jmp
not
mov
movb
push
mov
jmp
mov
movzbw
push
lea
jmp
push
pusha
jmp
call
push
mov
call
call
push
pushf
movw
call
lea
mov
jmp
mov
mov
pushl
ret
pushf
xchg
push
push
mov
pushl
pushl
ret
call
mov
lea
movzbl
call
repz
mov
lea
add
mov
sti
fmull
mov
cmp
sbb
and
jno
out
in
or
jge
out
sub
fstpt
out
lods
mov
test
push
push
rorb
push
out
add
dec
push
xor
rolb
dec
aaa
out
pop
push
sbb
push
mov
push
xlat
cltd
std
sbb
lds
mov
push
nop
push
setb
pop
jo
icebp
mov
test
into
popl
pop
loop
inc
cltd
pop
popa
xchg
mov
and
sub
int3
int3
inc
adc
jno
je
dec
dec
add
pop
ret
jmp
or
es
adc
adc
jge
push
xlat
mov
lahf
test
les
and
pop
mov
cmp
inc
adc
imul
mov
inc
aas
mov
pop
jno
mov
out
sub
insb
aam
sub
mov
or
hlt
sub
cmc
mov
xchg
pop
cmpsl
imul
test
clc
movsb
push
cmpsl
lret
inc
xchg
mov
rdtsc
fstl
and
push
int3
lret
jnp
loope
enter
ds
addr16
or
repnz
test
sahf
addl
shl
cli
sbb
hlt
lods
push
div
mov
fidivs
lods
outsb
lret
xor
and
xchg
cmp
stc
sti
inc
out
adc
repnz
loope
dec
sti
sub
and
pop
outsb
push
push
xchg
jnp
lea
outsl
xchg
add
inc
cmpsl
or
pop
rcr
xor
mov
xchg
addr16
scas
sbb
adc
rcll
mov
mov
stos
xchg
iret
imul
mov
xchg
inc
lds
scas
and
push
xchg
sbb
ffree
and
and
fidivl
loop
test
and
fwait
in
mov
popa
sub
add
movsb
push
xchg
mov
std
sbb
cld
mov
mov
ljmp
cmc
testb
jno
ds
cmc
mov
ds
in
mov
or
and
xor
ljmp
and
aas
in
decb
push
pop
push
std
adc
loopne
aaa
xor
cmp
lods
inc
push
mov
enter
pop
mov
ret
sbb
add
lods
xchg
outsl
gs
and
cmp
js
cld
jno
and
cmpsl
repz
flds
xor
inc
mov
mov
shll
sub
sub
adc
mov
jle
xchg
mov
test
adc
mov
pop
jp
xchg
das
call
jb
test
xchg
nop
adc
push
in
push
pop
jge
daa
testl
push
jnp
adc
es
dec
test
inc
ret
test
loop
dec
push
arpl
rol
jmp
lods
mov
idiv
fidivrs
inc
cmc
xchg
loopne
xor
jge
cmpsb
lcall
sbb
insb
fwait
sub
out
lcall
pop
out
loop
pop
movsl
out
xchg
mov
add
out
pop
int3
mov
xchg
mov
out
sub
fisubl
xchg
aas
in
ds
push
in
push
pop
and
js
leave
xchg
pop
int
fiadds
clc
test
mov
fxch
inc
lds
mov
pop
adc
lods
std
sar
pop
fadd
sub
mov
rcrb
mov
inc
fs
and
add
lcall
inc
shl
inc
rcrl
mov
lods
faddl
add
dec
es
pop
popf
add
add
cmpsl
es
jae
cmp
sbb
mov
xor
dec
mov
mov
xchg
pushf
movl
xchg
movsbw
not
mov
call
xchg
jmp
push
mov
movb
call
sete
cwtl
push
lea
nop
pop
pop
pusha
pusha
pushf
xchg
jmp
call
call
call
pushf
xchg
not
bswap
jmp
push
call
mov
pusha
mov
movb
pushf
lea
push
jmp
movzbw
movsbw
mov
jmp
push
mov
not
mov
pushf
movb
push
mov
pushf
lea
pushf
jmp
xchg
push
push
mov
pushf
bswap
jmp
xchg
push
pushl
ret
call
xchg
movb
movw
movb
mov
pushl
ret
jmp
pushf
xchg
mov
movb
pushl
ret
movb
mov
lea
jmp
movl
jmp
pusha
pusha
mov
lea
mov
push
mov
movb
mov
movb
jmp
lea
jmp
pushl
mov
call
jmp
jmp
push
pushf
popl
stc
pusha
xor
bt
xor
cmc
xorl
pusha
xor
cmc
pushf
xor
clc
xor
stc
xor
cmp
stc
xor
cld
pushl
popf
push
push
pushl
ret
movl
push
push
lea
jmp
push
call
call
jmp
lea
not
jmp
pushf
movl
push
lea
jmp
pusha
lea
call
not
setb
nop
jmp
push
nop
pushf
pushf
mov
movsbw
movzbw
mov
pusha
call
jmp
push
xchg
mov
xchg
pop
pusha
bswap
mov
mov
pushl
call
cmc
xor
stc
pushf
xor
mov
xor
call
movb
mov
mov
movzbw
movsbl
mov
push
pushf
jmp
pusha
xchg
pusha
pushl
ret
push
push
not
mov
call
movb
pushl
mov
pushf
movb
movb
push
lea
movb
xchg
mov
pushf
push
pushl
ret
xchg
push
mov
pushf
lea
movw
pushf
call
push
xchg
movb
pushl
ret
pusha
movb
call
pushf
mov
movzbw
mov
lea
jp
pusha
pusha
movl
mov
pushl
call
push
pushf
lea
call
xchg
push
pushl
mov
pushf
pushl
ret
xchg
cwtl
lea
bswap
mov
pushl
movl
movb
lea
mov
pushf
mov
jmp
push
movb
mov
bswap
movsbw
mov
jmp
pushf
mov
movsbl
pop
mov
push
mov
jmp
xchg
movb
mov
push
movw
pushl
ret
mov
call
mov
push
call
push
mov
lea
movb
movw
xchg
movb
pushf
pushf
push
pushl
ret
pusha
pusha
movsbl
nop
movsbw
not
jmp
xchg
not
movzbw
lea
call
xchg
movzbw
mov
mov
push
lea
jmp
nop
mov
call
pusha
lea
jmp
call
bswap
not
mov
jmp
sbb
push
pop
xor
xor
adc
or
or
sub
push
add
and
rcl
xchg
cwtl
mov
push
mov
popa
cmp
das
xor
sbb
cmp
dec
xchg
sub
xor
sahf
push
mov
movsl
and
xchg
dec
push
cmp
in
lret
adc
cmp
mov
insb
sahf
data16
cmp
mov
ja
mov
dec
sbb
dec
pop
push
sbb
lds
jne
fs
addb
xlat
enter
add
inc
mov
and
std
dec
and
pop
dec
or
dec
sbb
push
out
leave
js
lret
and
hlt
ds
inc
aaa
outsb
jecxz
sbb
arpl
jecxz
mov
fldenv
ss
inc
stos
jb
fldt
adc
pop
mov
mov
push
mov
mov
loopne
sub
lock
fisubl
inc
inc
imul
jne
add
stc
fdivrl
loope
insb
jns
ja
xchg
lods
in
pop
out
or
icebp
jo
mov
cmp
mov
call
push
cli
inc
and
mov
pop
shrb
dec
imul
add
das
xchg
pop
sub
mov
xchg
insb
sub
movsl
bound
inc
push
sbb
repz
sahf
imul
lret
pop
imul
sbb
sub
adc
into
pushf
test
popa
sbb
dec
test
mov
pop
sarb
popa
popa
addr16
data16
movsl
cmp
enter
cltd
stos
mov
ret
mov
mov
jle
hlt
stos
out
mov
dec
hlt
sbb
in
ljmp
stos
dec
jb
mov
stos
xor
add
rol
mov
xlat
add
jns
xor
mov
pop
pushf
int
in
adc
lea
xchg
in
mov
xor
movsl
jb
gs
sbb
cmp
loop
shll
adc
xchg
mov
fs
aad
cmp
icebp
pop
and
jle
inc
lea
sbb
loope
mov
je
dec
jns
xorl
mov
cmp
hlt
pop
jb
dec
sbb
and
bound
repz
out
mov
addr16
or
xchg
inc
adc
xchg
vpshlq
add
pop
ror
mov
js
ror
sbb
cmpxchg
out
cmp
shll
xchg
iret
sub
push
lods
popf
mov
scas
insl
jecxz
loop
pop
push
and
leave
jl
jge
inc
nop
in
pop
arpl
in
or
xchg
aad
arpl
cld
pop
es
ljmp
or
pop
cmp
xchg
xchg
xorl
std
imul
mov
nop
int3
xor
pop
lret
adc
mov
mov
add
out
sti
fisubs
adc
dec
js
sbb
or
inc
orb
repnz
arpl
ds
lret
pop
lret
shll
test
outsb
mov
gs
sub
inc
repnz
int
imul
clc
push
clc
arpl
rcr
sub
and
cld
les
leave
push
mov
mov
and
mov
iret
add
push
pop
sbb
mov
mov
xor
and
cmp
andb
push
int
jp
mov
add
inc
push
push
out
fstp
sbb
mov
aad
inc
test
mov
aad
push
xchg
xchg
daa
imul
mov
mov
int3
xor
aaa
cwtl
push
pop
mov
add
inc
das
ret
push
insb
dec
xor
call
movsl
and
xchg
insl
scas
shll
pop
es
imul
sub
dec
xchg
scas
into
dec
inc
fwait
fs
fcompl
xor
pop
jno
jg
repnz
lahf
jne
jle
push
xor
divl
stc
or
fs
lea
fisttps
movsb
cli
dec
mov
jp
ds
xor
sub
mov
push
jge
push
dec
pusha
and
cmp
shl
rcrl
cmp
in
rep
hlt
mov
dec
dec
adc
jo
adc
js
and
mov
stos
cli
insb
sub
ficomps
test
roll
sub
shrb
js
inc
xchg
fwait
xchg
and
dec
jb
dec
xor
mov
push
sbb
cld
pop
mov
mov
aas
lret
mov
and
push
ficoms
cltd
out
sbb
pop
add
in
rorb
jbe
in
cwtl
icebp
xchg
movsl
or
test
and
add
jns
push
jae
jae
in
mov
jp
or
adc
mov
in
ja
lahf
clc
inc
call
mov
negb
inc
or
mov
dec
xchg
ret
cmp
popf
adc
inc
add
je
mov
daa
jmp
fs
and
pop
xor
mov
shlb
imul
push
call
ss
popf
xchg
cltd
mov
into
fmul
lcall
pop
mov
mov
xchg
dec
push
sbb
jne
xor
jle
ljmp
ds
test
je
imul
dec
push
mov
push
mov
scas
mov
push
xlat
sahf
daa
fwait
aas
xchg
mov
xchg
push
fdivp
push
gs
loopne
lcall
cmpsb
test
xchg
popf
iret
daa
or
push
xor
mov
cmp
jl
popf
mov
or
sub
mov
xor
push
dec
je
sub
test
and
sub
ja
aas
mov
je
xchg
mov
mov
jp
adc
mov
jbe
jp
and
iret
push
push
lret
mov
push
out
stc
xlat
push
xor
aam
lahf
fldl
xor
inc
jns
push
enter
int3
cwtl
jle
push
fsub
lds
fsubrl
js
xor
jo
aaa
stc
jb
sbb
pop
js
jo
jbe
das
xchg
lcall
cmpsb
xor
stos
cld
incl
mov
sbb
push
ss
push
cltd
lcall
fcmovne
push
es
push
test
ret
shlb
ret
mov
and
push
icebp
push
lret
fimuls
pop
fsubrp
jns
add
add
das
xor
jg
in
ret
stos
das
mov
mov
stos
dec
xor
sbb
mov
inc
shlb
sbb
lret
test
mov
dec
jge
sub
cmp
subb
jecxz
ret
mov
mov
cs
inc
xor
mov
cmp
dec
fisubs
jmp
adc
and
outsl
mov
mov
and
inc
jns
adc
inc
cmp
addr16
push
arpl
daa
or
adc
arpl
out
mov
fistpll
iret
aad
ds
insl
sarb
or
cmp
lret
out
int3
lret
cli
ret
popf
sub
mov
mov
cld
bound
std
fistps
cmp
test
imul
dec
jmp
and
mov
int3
xchg
or
repnz
pop
sub
iret
jp
je
add
jne
in
jecxz
push
movsl
sbb
fildll
mov
les
repz
enter
jbe
ds
fidivrl
insl
mov
dec
inc
in
pop
push
dec
jo
repz
and
jl
dec
cmpb
fwait
cmc
mov
iret
loopne
or
ss
popa
mov
sub
mov
inc
adc
rolb
push
push
rol
mov
insb
orb
cmp
jb
andb
mov
add
addr16
xchg
pop
lds
jg
sbb
sbbl
mov
loop
inc
and
addb
mov
and
in
or
repnz
xchg
dec
lret
and
ljmp
out
inc
sbbl
insb
push
idiv
js
dec
mov
xor
ss
mov
dec
in
enter
or
push
mov
add
xchg
dec
movsb
sub
mov
sahf
jl
pop
aad
pop
sub
xchg
jne
cmc
add
mov
add
movsb
sub
sbb
jge
cmp
jmp
ja
lea
and
and
fsubp
jecxz
and
insb
mov
aas
jne
sarl
addr16
bound
test
xchg
dec
aad
push
repz
push
aaa
ds
movl
call
mov
push
jmp
pusha
pusha
push
nop
call
xchg
call
call
call
mov
movw
lea
jmp
push
xchg
push
pushl
ret
movb
xchg
push
push
push
pushl
ret
push
push
pushl
pusha
lea
jmp
call
pushf
jmp
xor
cmp
pushl
popf
push
pushf
pushl
ret
sbb
std
fisubrs
ss
stc
fidivl
jae
pop
sbb
pop
mov
and
xchg
js
mov
inc
imul
push
push
cs
movsb
loope
jne
and
add
cld
xor
inc
ja
ret
outsl
in
std
sar
mov
push
inc
xchg
fiadds
gs
dec
add
jle
jmp
sarl
in
fdivrp
and
xchg
inc
imul
sub
repnz
adc
or
mov
jae
dec
add
and
pop
adc
ror
xor
sub
gs
subl
sub
dec
adc
inc
mov
mov
fs
cmp
ja
lods
int
call
add
pop
sbb
or
int3
lret
jecxz
leave
imul
insl
push
mov
mov
test
mov
jb
stos
adc
mov
icebp
add
scas
xchg
fnsave
pop
mov
into
fldt
lcall
jae
fwait
sub
int
pop
lahf
icebp
ss
mov
mov
lods
push
and
insb
fstpt
dec
cmpsb
icebp
in
cltd
pop
pop
fstl
or
sub
xchg
scas
mov
xor
push
pop
sbb
aaa
dec
popa
sub
mov
sbb
pop
rol
mov
cwtl
inc
test
add
or
rorb
jp
aaa
xchg
rcll
aam
mov
insl
call
scas
or
pop
push
repz
cmpsb
sub
lret
add
hlt
lret
in
lret
cmpsb
lock
sbb
add
xchg
jecxz
sub
enter
or
mov
lods
cmp
add
lcall
icebp
pop
in
ljmp
aam
xchg
push
dec
and
ja
xor
jno
std
mov
rorb
stos
pop
cmc
fucomip
push
sbb
xor
sub
cs
adc
or
test
pop
xor
cmp
mov
andl
pop
ret
and
cld
out
xchg
lret
ret
cwtl
lods
xchg
hlt
addr16
loop
stos
sbb
in
imul
arpl
sbb
decb
fs
mov
adc
stos
push
rcrl
push
es
jp
jae
inc
sbb
sarb
mov
mov
jle
adc
and
out
push
push
iret
dec
dec
ljmp
std
adc
in
push
sub
bound
or
cmc
jmp
or
fildl
adc
sbb
push
int
shr
mov
movsl
sub
xchg
loopne
xchg
xchg
std
je
ss
lock
stos
out
sarb
imul
shr
dec
in
inc
xor
jmp
fdivrs
mov
aas
jns
mov
leave
movsb
jp
xor
jmp
lds
push
fbstp
ret
xchg
shlb
out
sarl
push
dec
mov
mov
loop
add
hlt
mov
movsb
jno
mov
pushf
sub
imul
fistl
mov
imul
arpl
lahf
aaa
imul
stc
test
repz
pop
imull
outsl
clc
cmp
adc
mov
jno
push
in
xchg
mov
mov
aad
push
sub
cmp
decb
mov
scas
and
insl
adc
clc
aaa
stc
mov
cmpsl
sub
cmpsl
jae
xchg
pop
js
sub
loopne
add
xor
andb
cmpsb
jns
fdivl
clc
arpl
inc
adc
dec
push
add
pop
inc
sub
xor
sbb
push
push
or
mov
inc
jecxz
mov
stos
sub
cld
jae
mov
loop
jle
xchg
lahf
imul
lock
push
push
int
iret
jecxz
ret
jp
mov
mov
push
push
pushf
pushl
ret
push
jmp
call
movzbw
call
bswap
mov
jmp
jmp
call
call
movsbw
lea
bswap
nop
push
mov
call
pusha
lea
call
mov
cwtl
pusha
pushf
mov
jmp
movb
pusha
mov
push
call
lea
jmp
lea
mov
bswap
movsbl
movzbw
lea
not
mov
call
fists
or
add
add
lea
pushf
call
xchg
mov
movb
mov
movb
pushl
ret
xchg
movsbw
bswap
pop
setae
mov
movw
call
pushf
xchg
push
jmp
call
mov
mov
lea
call
jmp
lea
jmp
call
mov
mov
call
push
xchg
pushf
pushf
pushl
ret
lea
pushf
pushf
jmp
lea
push
call
movw
mov
movzbl
not
call
movl
lea
bswap
mov
pushf
pushf
mov
pushl
lea
call
nop
call
movb
mov
pushl
jmp
mov
lea
pop
mov
pushf
pushl
mov
pusha
push
pushl
ret
pusha
jmp
mov
movzbw
setns
jmp
pop
push
lea
mov
pushf
mov
push
mov
push
pushf
pushf
movb
pushl
ret
push
pushf
mov
jmp
mov
mov
movw
lea
jmp
nop
not
bswap
mov
movl
call
ja
dec
jmp
dec
mov
add
add
out
add
mov
mov
pushl
nop
call
jmp
lea
call
mov
ret
std
cmpsl
outsb
lea
iret
aad
je
out
jno
out
add
mov
push
mov
and
sbb
stos
rolb
sbb
stc
sub
out
sahf
cmc
neg
mov
add
xlat
cmp
jo
rcrb
ss
push
es
add
rcl
sbb
arpl
mov
cmp
lcall
fwait
lret
add
cld
sarb
pop
jae
shl
hlt
xor
pop
popa
cmp
add
sub
and
shrl
addl
cs
sub
ret
rcrl
hlt
scas
pop
cmc
popa
aas
rcl
lahf
xchg
cltd
sub
insb
cs
add
lahf
ror
lret
fwait
movsb
dec
xchg
subl
divl
xlat
adc
mov
adc
sub
mov
and
and
mov
inc
fcoml
push
inc
sti
insb
adc
mov
aam
inc
test
jns
sahf
imul
jb
jnp
jbe
lock
ret
daa
xchg
and
arpl
mov
mov
test
push
aas
fs
out
mov
push
enter
aaa
dec
mov
leave
sub
bound
push
or
fs
hlt
gs
mov
jb
test
shlb
mov
aam
push
fwait
test
cmc
popf
sbb
imul
inc
adc
jae
shll
xor
inc
adc
push
pop
popa
mov
push
cmc
je
into
fwait
test
cld
loope
dec
mov
data16
xlat
aam
popa
sbb
sub
fsubl
cmp
pop
ss
mov
pop
cmpsb
xchg
pop
jb
sbb
jl
mov
jo
pop
in
push
lcall
sbb
lods
mov
inc
icebp
mov
gs
bsf
cmp
inc
nop
sub
addl
cmp
iret
cltd
adc
xchg
jg
mov
lcall
or
data16
scas
push
leave
fdivrs
test
repnz
aam
adc
hlt
fbstp
repz
in
pushf
lret
test
adc
addl
sbb
ja
jb
sub
inc
add
gs
push
add
inc
push
push
sub
ljmp
jg
adc
jb
lcall
shrl
and
mov
xchg
cs
pop
test
rcll
mov
xchg
int
inc
mov
cmp
int3
fdivrs
dec
scas
sbb
arpl
lcall
repz
movsb
mov
outsb
jae
fsubl
ja
mov
adc
mov
xchg
inc
sti
arpl
inc
movsl
movsb
out
push
push
push
rol
cwtl
jecxz
xchg
fs
jno
in
or
jg
xlat
mov
pop
fisttpll
jo
lds
ficompl
rcrb
or
out
cld
loope
cs
cmp
popa
movsb
es
and
mov
movsb
sbb
in
aam
xchg
xchg
fisubl
pop
mov
ljmp
aad
pop
add
add
loopne
and
aad
inc
push
pop
mov
cmp
loope
mov
dec
cs
xchg
mov
add
inc
sub
mov
jge
movsl
or
push
mov
push
sbb
test
lret
call
mov
lods
xchg
lds
cmp
sbb
pop
mov
or
jmp
jno
dec
dec
inc
stc
arpl
cmp
pop
subl
loopne
xchg
dec
pop
mov
stc
pop
pop
sub
push
sbb
repnz
in
jno
xor
pop
sub
xchg
sub
cltd
cwtl
bound
or
cmovp
xchg
popa
add
popa
mov
pop
ja
jns
cmc
pushw
adc
mov
movsl
jo
sub
hlt
int
push
out
aaa
repz
icebp
xchg
outsl
dec
shrl
int
mov
inc
xlat
mov
pop
cmpsb
cmp
add
lods
testl
add
leave
mov
mov
lahf
repnz
pop
addl
movsl
xor
jle
mov
pop
fimuls
xchg
inc
pop
cmpsb
dec
xchg
div
aas
iret
cmc
mov
imul
bound
cmpsb
inc
push
pop
jne
jbe,pn
push
push
test
xchg
loope
cmpsl
inc
inc
xchg
in
daa
outsl
decl
loopne
rcrb
sub
ficoml
ljmp
xor
cwtl
xchg
loop
js
imul
movsl
out
fsubrp
dec
xchg
daa
sub
mov
test
mov
dec
xchg
mov
fisubrl
xlat
das
es
test
popf
pushf
in
and
ret
add
pop
scas
dec
insl
push
nop
lock
stc
fmul
pushf
adcb
pop
jl
out
pushf
or
pop
repz
sub
imul
pop
cmc
daa
lods
cmp
popf
pop
ret
mov
pop
mov
pushf
pop
xor
cld
jle
insl
cmp
xchg
push
cmp
push
lods
xor
jge
mov
adc
cmp
dec
mov
xorb
add
jg
mov
les
xor
fs
loope
mov
xlat
mov
jp
jp
arpl
adc
cmc
data16
lret
movsb
loope
inc
mov
pop
adc
sarl
mov
jnp
insb
xchg
iret
pop
cmp
hlt
das
sbb
dec
pop
jecxz
mov
cmp
loop
mov
stc
jge
inc
idivb
push
insl
adc
je
push
mov
xor
imul
test
sub
xchg
push
push
mov
gs
xor
decb
mov
cld
mov
push
hlt
jae
sub
mov
data16
add
push
cmp
mov
adc
loope
push
lcall
xlat
push
cmp
hlt
jno
fwait
jae
or
and
fcomip
sbb
xor
push
sti
nop
xchg
sub
pop
push
cmpsb
sbb
icebp
jne
test
fadd
rcr
arpl
adc
insw
pop
push
sub
in
push
push
divl
sti
lock
cmp
cltd
enter
or
addr16
cmp
aas
arpl
ret
incb
push
cs
test
sbb
adc
mov
and
lods
adc
jg
sti
sbb
add
popaw
inc
cltd
mov
ret
test
sbb
out
mov
addr16
shlb
rorl
movl
mov
fwait
out
ror
inc
loope
xchg
jg
dec
and
aam
arpl
add
xlat
and
sub
mov
xor
adc
into
arpl
dec
xor
ss
sbb
add
test
mov
pop
sub
sti
pop
repz
push
out
lds
icebp
and
aam
test
jnp
mov
cmc
iret
or
je
mov
dec
xchg
mov
pop
pop
and
ss
fdivs
or
mov
lahf
loopne
mov
cmp
inc
aad
orl
adc
cmpsl
fisubl
mov
cmpsl
dec
pop
fs
add
cmp
push
mov
out
jb
pusha
test
mov
or
inc
jecxz
mov
aad
cltd
jmp
ret
xchg
mov
inc
jle
mov
fisubl
jne
ss
mov
xchg
lahf
int
aaa
add
aad
jl
aad
sbb
cld
inc
mov
shrd
imul
cmp
push
and
mov
inc
pop
mov
fisttpl
xor
lret
out
and
and
add
push
das
jns
data16
bound
dec
test
daa
mov
jmp
dec
les
fimull
cltd
fdivrs
and
xchg
jns
mov
enter
xchg
cltd
jge
pop
aas
push
fstpt
cmp
add
mov
ffree
sahf
mov
mov
cmpl
mov
test
cmp
dec
inc
jns
cmpsl
fucom
mov
mov
xor
pop
add
xchg
and
mov
inc
enter
or
jl
mov
adc
dec
inc
xchg
pop
popa
mov
push
or
in
les
jns
pop
cwtl
inc
inc
lock
dec
jg
jb
mov
aas
jno
imul
fimull
in
pop
fstpt
push
cld
incl
push
and
pushl
ret
not
not
nop
pusha
mov
not
movzbw
pop
xchg
mov
call
push
call
call
lret
testb
pushf
jmp
jmp
pusha
nop
pushf
jmp
jmp
mov
movb
jmp
xchg
mov
pushf
movb
pushl
ret
pushf
xchg
call
nop
call
setle
pop
pushf
pusha
pushf
pushf
pushl
ret
pushf
pushf
mov
bswap
pop
mov
jmp
bswap
bswap
push
nop
pusha
mov
pushf
call
lea
push
mov
call
xchg
movb
push
mov
pushl
ret
pushf
pushl
mov
bswap
lahf
bswap
mov
pushf
push
lea
pusha
pushf
mov
jmp
pushf
movl
movb
mov
mov
push
jmp
call
jmp
lahf
nop
pusha
not
mov
mov
mov
xchg
pusha
xchg
push
mov
jmp
pushf
mov
jmp
mov
push
mov
jmp
movzbl
not
movsbl
mov
lea
jnp
pusha
mov
mov
jmp
pushl
popf
push
mov
pushl
ret
mov
pushl
push
movb
pushf
lea
jmp
pushf
pusha
pusha
lea
jns
push
push
call
mov
pushf
xchg
pusha
pushf
jmp
xchg
call
call
pusha
pushf
mov
call
pushf
nop
jmp
push
call
pushf
nop
call
dec
and
std
sbb
iret
xchg
mov
sarb
lods
dec
dec
dec
lret
xor
add
sub
inc
je
push
dec
cwtl
mov
inc
sti
int
ja
inc
xor
sub
fucom
fmuls
int3
mov
imul
sub
sub
jmp
cli
jl
pop
rolb
inc
cmp
scas
sahf
cmp
push
inc
fsubrs
fs
call
add
add
jp
dec
and
clc
imul
push
fmuls
iret
int
push
lret
jbe
enter
std
xor
out
mov
mov
push
in
aam
mov
lahf
shll
xchg
scas
addb
add
or
push
mov
mov
and
jbe
je
add
repz
pop
lret
adc
or
lret
shrb
mov
sbbb
ja
pop
xor
add
shlb
aas
mov
xchg
mov
pop
je
xchg
hlt
mov
out
mov
mov
xchg
adc
dec
mov
fwait
sub
fisubs
lret
sti
push
sbb
mov
inc
shlb
sbb
sbb
scas
mov
or
shrl
insl
hlt
xchg
insb
adc
pop
dec
mov
mov
push
mov
sbb
test
xchg
xor
push
out
pop
jge
pop
jo
xor
je
add
aas
push
cwtl
add
mov
jecxz
or
sub
push
mov
lahf
addr16
out
aam
imul
sete
loop
or
iret
inc
pop
mov
inc
dec
jle
js
repnz
adc
pushf
fisttpl
jmp
dec
ja,pt
into
pop
lret
push
sarl
jnp
es
or
int
dec
cmpsl
punpckhbw
push
and
fadd
out
mov
push
push
pop
or
shll
push
or
mov
jmp
fists
loopne
cmp
pop
xor
pop
add
dec
mov
insb
sub
jl
pop
nop
pop
flds
decb
fs
add
mov
rcrb
mov
loop
or
lds
fidivs
lods
das
push
call
out
rorb
mov
repz
out
outsl
pusha
loopne
cmpsb
mov
mov
mov
pop
movsb
pmulhuw
jmp
int3
jmp
cmpsl
jb
ficoms
xor
mov
mov
fdivl
mov
lock
jmp
add
loope
out
ja
adc
sub
jp
sub
into
dec
fdivl
pop
stos
gs
hlt
jecxz
popl
clc
cmpsl
adc
sbb
inc
mov
jns
sub
pop
jp
dec
and
jmp
shlb
mov
jbe
into
loope
sub
xchg
mov
fs
jmp
cld
xchg
jbe
xchg
aas
js
xchg
or
adc
xchg
stos
fcoml
ret
inc
sub
arpl
mov
adc
mov
and
cmpsb
inc
mov
inc
adc
adc
or
jle
sbb
in
clc
pushl
loopne
xchg
cli
push
fildl
movsb
orb
push
sub
dec
popf
pop
outsb
inc
test
cli
cld
dec
rcll
adc
inc
jbe
add
addr16
pop
sub
mov
cld
loop
sbb
xor
push
arpl
sar
sbb
adc
cmc
popf
popa
sub
sti
push
lcall
sahf
enter
jecxz
rcr
or
push
enter
fwait
out
test
jo
jnp
test
stos
pop
mov
push
outsl
js
cmpsb
andb
les
je
and
xchg
hlt
inc
sahf
js
nop
nop
mov
repnz
mov
bound
mov
mov
insb
sbb
arpl
xchg
fs
add
rorl
inc
mov
hlt
mov
lds
jne
jae
into
insb
push
xor
or
test
xchg
add
and
daa
lea
jecxz
fildl
mov
push
and
mov
int
mov
bswap
mov
lea
js
push
push
mov
movl
pusha
lea
call
call
movzbw
mov
call
call
lea
movsbw
mov
push
lea
jmp
pusha
xchg
pushf
mov
pushl
ret
push
jmp
mov
movsbw
lea
bswap
mov
mov
mov
mov
pusha
push
pushf
pushl
ret
mov
pushf
pushf
push
lea
pushf
mov
xchg
pushf
mov
mov
pushl
ret
movsbw
lea
mov
movsbw
mov
movb
pusha
pushl
ret
setbe
mov
mov
movzbw
mov
lea
push
jmp
pusha
mov
movzbw
movzbl
pushl
mov
push
push
push
mov
pushf
lea
pushf
mov
jmp
xchg
movl
pusha
pushf
pushl
ret
xchg
mov
mov
pushl
ret
mov
call
lea
movl
jmp
movw
movsbl
mov
movb
pusha
movb
xchg
pushf
mov
pushf
xchg
movzbl
jmp
movsbw
call
movsbl
mov
call
movb
movb
xchg
pushf
mov
movl
mov
movw
pushf
push
lea
jmp
mov
jmp
movb
movb
xchg
movw
movw
pushl
ret
iret
repz
ret
xchg
pushf
mov
lea
jae
push
mov
lea
pushf
xchg
mov
mov
pusha
mov
movzbw
pusha
movsbw
lea
call
jmp
pushf
xchg
pushl
pushf
pushf
mov
pushl
ret
jmp
movb
pushf
xchg
pushf
pushf
movw
pushf
pushl
ret
pusha
call
lea
call
lea
pushf
pushl
pushf
pushf
xchg
pushf
pushf
pushf
movb
pushl
ret
pushf
xchg
not
lea
movsbw
not
mov
call
call
call
pushf
movw
lea
mov
call
pushf
mov
mov
push
pusha
lea
mov
call
call
jmp
push
pushf
nop
jmp
push
movl
pushl
pusha
mov
call
push
movb
lea
jmp
pusha
jmp
call
mov
pushl
mov
pusha
mov
mov
call
jmp
call
pusha
pusha
nop
not
jmp
stc
xor
cmc
call
mov
call
pusha
pushf
nop
call
mov
pushf
call
push
xchg
pushf
pushl
ret
mov
xchg
pushf
pushf
mov
pushl
ret
mov
call
nop
pushf
pushf
movzbw
pop
mov
pushf
push
call
mov
xchg
movw
mov
pushl
ret
jmp
jmp
call
lahf
cwtl
pusha
nop
bswap
mov
pusha
movw
pushf
xchg
push
call
xchg
jb
dec
mov
setae
pop
mov
bswap
mov
call
jmp
call
call
call
lea
jmp
lea
mov
pushf
push
push
mov
pushl
call
nop
call
jmp
pusha
call
call
pushl
nop
jmp
jmp
lea
ja
mov
mov
jmp
pusha
nop
jmp
movsbl
not
pushf
lea
movzbl
mov
movsbl
pusha
mov
pushf
pushf
push
push
pushl
ret
pusha
movl
jmp
movb
mov
pushf
pushf
lea
mov
mov
pushl
ret
jmp
pushf
jmp
jmp
push
pusha
nop
lea
jl
not
not
movzbw
pop
call
lea
call
mov
pushf
pushf
lea
pushl
call
xchg
call
pushf
pusha
lea
pushf
pushl
mov
xchg
push
movb
pushl
ret
xchg
lea
bswap
xchg
movzbw
jmp
jmp
jmp
lea
movw
mov
mov
pushl
ret
xchg
jmp
mov
pop
mov
pushf
call
push
mov
pusha
push
jmp
lea
call
in
bound
dec
clc
mov
and
in
in
adc
xchg
sbb
imul
adc
and
inc
popf
mov
daa
xor
data16
test
out
mov
data16
sbb
mov
mov
and
sub
and
aad
add
js
pop
psrlw
test
leave
adc
outsl
inc
sbb
push
mov
mov
aas
sub
mov
xchg
adc
or
call
ret
jbe
lea
pop
lods
fistl
or
fcompl
movsl
imul
push
and
arpl
aam
das
mov
jno
ja
lahf
mov
rclb
notl
xchg
jae
ret
faddl
dec
inc
insl
jle
jg
xor
in
cld
dec
pop
push
fidivl
pop
lods
test
mov
dec
out
and
cmp
jge
adc
or
push
add
push
mov
dec
xor
cwtl
or
jo
arpl
aam
sbb
jp
divl
pop
clc
in
ret
setne
pop
lods
mov
jle
les
gs
sti
cmp
xchg
inc
xchg
mov
and
adc
add
popf
jmp
dec
xchg
fldcw
subb
int
cs
loope
cmpsb
inc
cld
xor
fcompl
xchg
cmp
test
sbb
pop
arpl
inc
mov
xor
and
lcall
push
scas
mov
lock
fldt
dec
pop
cmpsl
loopne
fistl
or
or
dec
pop
es
jmp
leave
lods
mov
dec
mov
inc
inc
jne
fisubl
add
and
add
ss
adc
sbb
cltd
popa
dec
adc
pop
sbb
orl
or
push
lcall
icebp
mov
add
lret
mov
sub
das
inc
pop
inc
mov
fisubrs
mov
xor
mov
jmp
and
or
mov
popa
push
ss
add
pusha
xchg
xchg
popf
orl
mov
outsl
jl
lret
adcb
js
ss
pop
xchg
jecxz
xor
addr16
mov
dec
gs
lret
cmp
insl
dec
in
ja
fistl
cld
mov
dec
xchg
push
mov
jl
daa
jne
mov
pushf
dec
cltd
sub
push
pop
loopne
test
test
stos
push
idiv
aas
aaa
jp
xchg
push
subl
and
mov
inc
sbb
pop
popf
jmp
jnp
sub
mov
cmp
pop
fstl
out
jno
movsl
dec
xchg
sbb
mov
stos
xlat
iret
xor
out
jg
jg,pn
xchg
hlt
and
arpl
popa
mov
xchg
cmc
lcall
icebp
cmp
or
dec
jns
add
in
sbb
ret
mov
xor
jle
test
cmp
loope
xorb
dec
popa
test
adcl
mov
mov
xchg
sub
push
imul
sbb
cmpsb
pop
push
sub
shrb
lea
movsl
icebp
repz
aad
jge
or
pushl
mov
sub
jns
pusha
js
xor
mov
iret
sbb
push
mov
std
loopne
mov
pop
test
pushf
cmp
imul
repnz
mov
loop
xor
jo
xchg
mov
jp
out
xchg
mov
xor
mov
or
push
mov
dec
xchg
and
in
bound
xor
cmpb
test
push
pop
movsl
inc
cmp
push
and
pop
dec
sar
and
lcall
in
shrb
movsl
loopne
sbb
fs
inc
stos
in
pushf
and
imul
cmc
cmc
pop
fwait
sarb
add
and
in
xchg
es
cmp
jg
in
out
xlat
dec
int3
roll
sub
add
stc
inc
cmpsb
lret
das
push
cmp
fsubr
pop
lods
mov
insl
mov
fdivl
test
or
pop
ret
scas
rcrl
and
mov
cmpsb
sub
clc
scas
mov
in
push
adc
xchg
jg
and
insb
sbb
sub
xor
cmp
jmp
sub
fstl
lods
push
xor
mov
push
daa
mov
pusha
loop
fbld
repnz
fistps
jb
ljmp
jp
pop
arpl
lock
lcall
cmp
sub
inc
pop
jg
aas
fdivrl
jg
dec
mov
ds
cwtl
mov
push
lcall
or
imul
jae
cld
dec
popf
test
mov
push
lret
fmuls
xor
lock
pop
sub
cmp
mov
mov
push
movsl
pxor
and
orb
jno
shll
loope
sub
push
aaa
push
negb
fs
mov
mov
xchg
ljmp
cmp
dec
std
xchg
scas
pushf
push
mov
jle
cmp
pushf
outsb
pop
mov
lret
inc
xchg
mov
add
lret
sbb
cmpsb
arpl
out
dec
mov
push
lds
stos
mov
outsl
jne
add
bound
push
mov
mov
orl
into
movl
pextrw
adcl
scas
mov
movb
rdmsr
xchg
inc
pop
pop
cmp
jmp
aad
and
cmpsb
sbb
out
fwait
movsb
rcll
iret
test
insl
lods
sub
nop
frstor
outsl
repz
pop
lods
sbb
imul
hlt
das
sbb
cmp
imul
lea
int3
andb
sbb
popf
or
testb
jp,pn
inc
in
stos
rcl
and
call
imul
movsl
mov
pop
mov
mov
push
mov
jl
cmp
fnstcw
sbb
dec
sahf
push
ds
ret
mov
or
mov
out
mov
test
or
jo
lds
sbb
jle
ret
out
or
shlb
adc
mov
mov
fidivrl
in
inc
xor
aam
sub
adc
jne
jns
and
icebp
cmp
mov
add
jns
cmc
dec
daa
jecxz
fdivr
xchg
ret
out
inc
imul
cmp
test
inc
fisttpll
mov
fstpt
xor
loop
dec
xchg
out
sub
cld
cltd
addr16
call
hlt
cmp
or
movsl
sub
jp
or
xor
aam
sbb
dec
out
cmp
fnstsw
cltd
push
sti
inc
mov
or
out
jge
jno
xor
out
data16
scas
push
mov
and
out
sbb
lret
cltd
mov
mov
insl
in
sub
leave
sub
call
nop
mov
in
push
kmovw
push
int
test
es
push
mov
je
xchg
out
aas
push
mov
hlt
pop
xchg
repnz
pop
test
xchg
xchg
mov
nop
push
dec
push
cltd
add
jae
xor
jle
fs
cmc
push
sub
lret
dec
jne
mull
xor
lret
cltd
push
repz
adc
mov
inc
outsb
pop
or
xchg
out
icebp
enter
int
xchg
pushf
pushf
push
pushf
pushl
ret
mov
call
lea
pop
mov
sets
bswap
pop
pushf
pushl
ret
call
jmp
and
lods
sub
pop
add
std
cmp
xchg
jmp
inc
and
or
or
add
sbb
std
decl
dec
mov
fadds
insl
lea
push
pusha
nop
pushf
xchg
mov
call
push
call
in
push
mov
js
jp
nop
cmp
por
mov
xchg
mov
mov
and
and
push
jmp
xor
fidivrs
cmpsl
mov
mov
fnsetpm(287
andb
adc
xlat
sbb
pop
hlt
enter
xor
je
insl
lahf
xor
lea
add
fnsave
inc
imul
add
mov
jnp
dec
mov
mov
jns
xchg
xor
push
sub
add
fwait
cli
orl
dec
jle
sti
leave
jl
add
jge
cmp
pop
mov
xchg
add
jge
les
dec
lods
dec
imull
mov
int3
mov
dec
pushf
push
mov
pop
xor
adc
jae
int3
inc
ret
aam
inc
jo
xchg
inc
clc
pusha
lods
repnz
sub
bound
xor
inc
inc
mov
je
mov
and
rcr
xor
and
mov
push
int
jle
cmpb
mov
xchg
ja
mov
or
push
and
shrl
in
sbb
sahf
andl
cmp
or
out
sbbb
sub
pop
push
xchg
sbb
push
int3
push
cli
xchg
outsb
lds
cltd
xor
mov
test
push
or
js
roll
cli
adc
idivb
mulb
decl
movsl
icebp
mov
and
dec
push
xchg
icebp
xchg
mov
xor
mov
fwait
pop
roll
icebp
sti
mov
mov
addps
jg
xchg
pop
int3
mov
movsb
dec
lods
arpl
mov
test
test
add
and
add
mov
dec
adc
mov
push
jo
adc
push
mov
sbb
pop
or
sub
adc
jecxz
mov
lahf
leave
cmp
mov
ss
in
xchg
inc
bound
and
outsb
popf
ja
int
dec
xchg
in
es
negl
leave
add
pop
sti
stos
sbb
test
xchg
std
insb
add
jns
leave
and
nop
imul
add
adc
add
std
addl
outsb
data16
add
and
sub
and
add
das
shrb
lds
pop
das
jp
or
pop
push
fidivrl
daa
aaa
adc
mov
and
ror
xchg
ljmp
mov
jne
jbe
loop
dec
xchg
fcmovnb
inc
into
mov
idivb
test
dec
test
movsb
in
cmp
dec
push
call
xor
test
xor
xlat
fcmovu
sbb
movsb
mov
daa
mov
fs
dec
add
test
insb
sti
push
push
push
and
fdivp
aas
aaa
mov
sahf
out
leave
mov
lods
or
xor
add
push
lods
mov
pushf
adc
neg
mov
and
in
ret
push
ljmp
into
pop
fs
or
add
clc
xor
incb
fistpll
loopne
mov
inc
aad
mov
cmp
push
adc
jo
mov
aad
or
mov
movsl
stos
call
mov
outsb
push
sbb
scas
pop
add
mov
xor
xchg
or
es
out
or
ror
jecxz
add
push
mov
mov
lret
and
aaa
mov
or
out
movsb
loopne
xor
sbb
lahf
stc
push
sub
cmp
cmpsb
sahf
shlb
jne
or
cmp
add
dec
orb
outsl
jl,pn
sub
pusha
adc
adc
sub
or
ficoml
orb
in
out
es
outsl
mov
pusha
mov
lea
lcall
jno
cmp
pushf
mov
xor
mov
push
xor
sbb
and
or
push
rclb
inc
lahf
jmp
pop
movsl
in
es
xchg
aaa
loop
in
adc
orb
stos
sub
pop
fstpl
or
xchg
fld
incl
sbb
fmull
cmpsl
imulb
push
scas
in
sbb
idiv
std
dec
push
lret
pop
insl
jg
fimull
push
pop
cmpsb
and
mov
mov
jno
and
sbb
adc
es
push
push
mov
dec
sbb
add
loop
and
mov
jge,pn
pop
sbb
fisttpll
dec
sub
mov
pusha
adc
sarl
jmp
push
adc
or
push
push
jbe
and
push
mov
mov
mov
jg
add
testb
pusha
mov
js
and
fildll
sub
adc
jo
outsl
out
stos
fmuls
xchg
popf
subl
sar
lcall
ds
pop
dec
pop
mov
in
in
sub
mov
in
popf
cmp
inc
les
daa
jb
jae
loopne
fwait
dec
into
fcoms
or
shlb
add
push
add
bound
sbb
cltd
fwait
arpl
lods
jl
std
mov
add
lret
mov
lcall
testb
jbe
rolb
jecxz
mov
mov
repz
sbb
arpl
mov
mov
sub
dec
add
push
aaa
dec
mov
mov
ficomps
aad
test
shlb
je
jb
cmp
mov
pushl
lods
jns
in
add
insl
cmp
dec
dec
arpl
mov
jne
xchg
adc
lods
in
xor
jae
int
or
cmp
addr16
out
jns
mov
xchg
xchg
jecxz
fimuls
or
iret
jo
mov
sbb
clc
les
xchg
push
nop
pushf
bswap
mov
movzbl
mov
jmp
push
nop
lea
ja
pushf
xchg
jmp
mov
movl
movb
pushf
lea
mov
jmp
lea
movw
lea
jns
push
xchg
mov
movb
movw
pushl
ret
call
push
pop
nop
lea
pushf
mov
pushf
push
xchg
call
jmp
push
xchg
pushf
mov
pusha
pushl
ret
mov
pushf
pusha
pushf
call
push
mov
pushf
lea
call
pusha
mov
call
push
pusha
jmp
pusha
mov
jmp
pushf
pusha
jmp
mov
call
lea
jle
pusha
lea
call
pushf
lea
call
arpl
es
xchg
push
push
pushl
ret
mov
mov
bswap
movzbl
movzbw
mov
bswap
movzbl
lea
mov
jmp
pusha
setnp
mov
bswap
xchg
movzbw
mov
not
call
pusha
mov
xchg
movw
pushf
pusha
pushl
ret
jmp
call
call
setl
pusha
nop
pop
pusha
mov
pushf
movb
pushf
mov
xchg
jmp
movb
lea
pushf
pushf
xchg
pusha
pushl
ret
jmp
iret
xchg
in
jmp
rcrl
loopne
pushf
mov
push
call
call
push
mov
pop
movw
pushf
mov
jmp
movb
nop
pushf
call
call
lea
jp
mov
push
call
pushl
lea
pushf
call
call
pushf
mov
call
push
lea
movw
call
mov
xchg
mov
movb
movw
pushl
ret
jmp
movzbl
bswap
nop
lea
push
lea
mov
jmp
jmp
mov
lea
jmp
jmp
pushf
lea
jmp
lahf
cwtl
mov
call
movb
push
mov
push
lea
pusha
pushf
push
call
nop
movl
xchg
jmp
xor
test
std
pushl
popf
mov
movw
pushl
ret
pusha
xchg
mov
pushl
ret
movsbw
movzbw
bswap
lea
pop
pushl
movsbl
mov
not
push
mov
mov
pushl
ret
pusha
pushl
nop
call
push
xchg
push
movl
pushl
ret
jmp
mov
setle
lea
lea
jge
push
mov
movb
pusha
mov
push
lea
pushf
pushf
jmp
mov
lea
jge
pushf
lea
call
xchg
mov
push
pushl
ret
call
mov
not
bswap
mov
movzbw
bswap
movsbw
lea
setae
pop
jmp
push
pushf
call
lea
mov
jmp
xchg
push
mov
movsbw
jmp
pushf
xchg
pushf
movb
mov
pushl
ret
pusha
mov
jmp
pushf
lea
jmp
push
pushf
mov
pusha
pushf
movb
lea
mov
mov
mov
call
call
cwtl
nop
pushf
movsbw
pop
pop
pushf
xchg
pushl
xchg
cwtl
pushf
mov
call
pushf
mov
xchg
movzbl
movw
lea
call
pushf
xchg
push
mov
pushl
ret
xor
clc
pushl
popf
push
pushl
ret
movb
mov
xchg
mov
movb
pushl
ret
pushf
jmp
movl
pusha
mov
pushf
lea
jmp
xchg
pushl
pushl
ret
pushf
mov
lea
push
mov
pop
mov
pusha
push
movl
jmp
jmp
pop
mov
pushf
push
call
xchg
movw
movb
movb
pushl
ret
xor
jmp
mov
push
call
movb
xchg
movsbl
pusha
lea
movzbl
mov
pushl
push
call
jmp
movb
pushf
jmp
movb
lea
mov
call
mov
bswap
pushf
lea
jae
lea
call
jmp
push
not
lahf
movsbw
nop
pop
jmp
pushl
lea
jmp
jmp
pushf
mov
pushf
mov
pushf
pushl
pushl
ret
pusha
pushf
popl
cmc
test
xorl
clc
bt
xor
clc
xor
test
xor
test
xor
cmc
xor
clc
jmp
bswap
nop
setno
movsbw
jmp
push
nop
pusha
lea
jge
pushf
xchg
not
not
mov
mov
call
lea
movzbw
mov
call
call
lea
call
pusha
xchg
pushf
pushl
ret
pushl
lea
pushf
pushf
xchg
push
pushf
pushl
ret
lea
call
push
mov
nop
call
mov
jmp
lea
ja
push
push
mov
pushl
setp
movzbw
mov
pushf
mov
pushf
pusha
pushf
jmp
call
xchg
pushf
pushf
push
pushl
pushl
ret
xchg
pushl
pushf
pushl
ret
not
mov
push
mov
pusha
jmp
pushf
nop
jmp
pusha
call
xchg
call
push
mov
call
mov
pop
movsbw
push
movzbl
mov
call
lea
pushf
push
pushf
xchg
pushl
pushl
ret
pushf
call
jmp
pushf
lea
lea
js
push
pusha
push
mov
movsbw
lea
movzbw
pushf
mov
lea
ja
pusha
pusha
mov
mov
call
pushf
mov
xchg
call
pushf
mov
push
call
setae
nop
jmp
pushl
popf
push
pushl
ret
jmp
mov
push
push
xchg
push
movb
xchg
push
pushf
lea
movzbw
mov
push
pusha
movl
jmp
push
pushl
lea
pushf
call
mov
bswap
mov
jmp
pushl
mov
push
call
movsbw
mov
call
xchg
pushf
mov
push
pushl
ret
pushf
mov
jmp
lea
mov
mov
nop
not
movsbw
pop
call
xchg
movsbl
push
movsbl
mov
call
jmp
call
popa
fstpl
es
lea
jmp
jmp
xchg
not
movb
lea
mov
pusha
push
mov
movb
lea
pushl
pushf
xchg
pushf
push
movb
pushf
pushl
ret
lea
call
lea
call
pushf
jmp
mov
pushl
call
xchg
movw
mov
mov
pushl
ret
stos
cmp
clc
inc
hlt
xchg
mov
jmp
or
sbb
and
arpl
and
fcompl
int3
jge
sbb
inc
insl
lret
xchg
in
adc
pop
jbe
lods
cli
inc
fstp
loop
adc
pop
sarb
push
jmp
push
insl
dec
cwtl
xchg
xchg
jbe
cmp
loopne
clc
adc
ljmp
ret
call
xor
mov
scas
repz
data16
xor
pop
cmpsl
hlt
mov
insb
pop
cmp
inc
sar
enter
xor
test
jae
jp
std
cmp
sahf
dec
jnp
stos
cmp
icebp
and
jnp
sub
jae
push
mov
dec
lret
cwtl
cs
inc
es
ss
test
adc
pavgb
es
es
sbb
xchg
xor
lret
lcall
and
jge
rcrl
jnp
mov
fists
rorl
and
stos
cli
aam
outsl
lods
dec
test
dec
add
push
push
cltd
test
es
xchg
stos
lret
mov
movsl
sahf
std
jge
es
aam
xor
fldenv
add
stc
jbe
and
out
push
mov
mov
mov
inc
stos
mov
sarb
xlat
mov
cli
add
je
sahf
into
outsl
aam
inc
aas
dec
aaa
push
outsl
scas
mov
dec
test
rcrb
adc
dec
icebp
add
mov
jno
xor
push
add
xor
fadd
std
dec
je
ljmp
addr16
ja
cmp
mov
push
xor
out
xor
sysenter
and
shll
cmp
in
movups
ds
lock
jmp
mov
xor
repz
sub
jne
and
out
scas
enter
sbb
es
sbb
dec
push
fldl
cmc
sub
jmp
aam
adc
xchg
in
jae
inc
in
cmpsb
aad
jne
sub
adc
movsl
adcb
mov
fisubrl
imul
outsb
sti
out
fimull
or
je
cmp
in
in
sbb
jg
inc
jae
dec
adc
repnz
out
jg
jb
fsts
pushf
cltd
mov
shl
out
scas
ficoml
daa
cltd
sti
add
enter
and
fsubl
mov
or
mov
test
loop
lcall
fisubl
add
pop
xor
pop
xchg
pop
ficoml
jne
cwtl
aaa
insl
inc
pop
xchg
add
xor
lret
loop
subb
pop
js
inc
jns
jns
xchg
jb
lret
cmp
mov
or
rorl
dec
arpl
sti
mov
ja
vmovups
clc
ja
jne
cmp
inc
pop
incb
sub
mov
jg
cltd
or
aas
dec
loop
outsl
incl
mov
aam
inc
lahf
jl
cli
sbb
push
cltd
pushf
add
sahf
inc
adc
std
and
js
xlat
lret
mov
arpl
xchg
or
mov
xor
inc
dec
test
pop
out
add
dec
mov
fistpl
das
inc
mov
mov
jge
mov
mov
lods
mov
icebp
push
cmp
lods
inc
sub
mov
dec
fwait
adc
dec
rolb
popa
and
cmp
ljmp
loopne
shrb
test
jo
jno
fs
mov
pop
repz
jb
mov
les
cld
lds
xor
test
lea
xchg
shlb
lock
in
pop
fs
gs
or
ficompl
lea
lds
lret
dec
mov
mov
mov
fsubl
cmp
ljmp
xchg
movsb
sub
inc
enter
out
stos
incl
cmp
add
data16
jmp
jns
adc
loop
jnp
cmp
stc
jg
adc
loop
rorl
xchg
sub
sahf
lds
sbb
pop
sub
jmp
movsb
and
scas
mov
in
call
divl
insl
and
lds
imull
stos
pop
hlt
fdivs
lcall
push
fbld
xor
loopne
sub
mov
mov
sub
sbb
icebp
mov
pop
ret
outsl
sub
sbb
push
push
movsl
and
insl
sub
push
mov
test
add
les
sub
or
mov
nop
jns
cld
sti
sub
inc
xchg
dec
xchg
xchg
pop
in
xchg
cmp
sti
loop
enter
std
call
push
push
jmp
aad
cli
test
inc
and
mov
pushl
ret
mov
pop
cwtl
push
mov
jmp
xchg
mov
pushl
ret
call
pushf
xchg
pushf
movb
movb
mov
pushl
ret
call
xchg
pushf
mov
pushl
ret
xchg
jmp
jmp
mov
jmp
movsbw
movzbl
movzbw
pusha
nop
push
mov
pushf
mov
pushf
mov
xchg
jmp
mov
pusha
movb
pushf
push
lea
push
jmp
lea
call
xchg
pushf
pushl
ret
mov
lea
mov
mov
movzbw
mov
jmp
orb
mov
out
mov
in
sarl
xchg
fisubs
add
ja
cmpl
adcb
sub
adc
lock
push
xor
xlat
sahf
out
fsubl
add
and
or
push
sub
enter
addr16
pop
cwtl
nop
insb
jge
adc
call
xor
lods
adc
imul
pop
and
outsl
pop
and
aad
xchg
int
hlt
and
pop
cmpsb
fbld
add
jae
dec
add
call
and
std
movsb
repnz
movsl
in
int
hlt
push
lcall
sbb
push
pop
fisttpll
call
pushf
mov
push
inc
stos
fsubrs
cmp
mov
sub
sub
loope
mov
mov
or
jne
insl
xchg
pop
xchg
int
jmp
push
fists
push
sub
inc
test
outsl
test
inc
dec
jb
push
and
pop
adc
jecxz
mov
imul
xor
sahf
mov
insb
adc
cmp
pop
mov
fisubl
push
mov
push
lret
enter
cmpsl
mov
push
pop
push
iret
mov
pop
dec
adc
xchg
movsl
stos
mov
and
sub
fiadds
pop
and
aad
pop
addl
sub
nop
xchg
xchg
inc
sahf
pop
and
orb
shr
gs
push
xor
loope
or
push
push
pop
mov
mov
fidivrs
mov
pop
insb
jns
ror
adc
lret
xchg
sbb
or
mov
xchg
sub
ret
mov
sarl
scas
dec
in
push
out
inc
stc
mov
andb
insb
xor
sbb
dec
adc
fmul
sbbb
or
addr16
pop
movsb
lods
leave
loopne
and
inc
dec
pop
add
push
add
add
pop
dec
ret
gs
lcall
fcoml
adc
dec
xor
mov
bound
add
mov
lods
sti
dec
iret
pusha
add
and
aas
adc
or
aam
jp
fidivrl
xchg
call
pop
inc
cmp
das
aaa
xor
dec
lds
jmp
lock
dec
scas
sbb
mov
xchg
mov
int
sbb
push
sbb
lret
pushf
push
ds
imul
push
and
out
or
loope
enter
lahf
out
xor
xchg
mov
ret
pop
sahf
mov
sub
std
lcall
pop
test
push
mov
ljmp
mov
fsubl
mov
dec
dec
sbb
adc
int3
push
push
loop
lret
sbb
test
push
outsl
int3
xor
mov
scas
adc
xor
and
mov
imul
jge
cld
mov
fstpt
out
sbb
jae
int
or
notl
sub
xchg
inc
push
repz
xchg
jb
pop
insb
outsl
add
xorl
cmp
add
mov
xor
sub
add
hlt
out
push
int3
test
sbb
leave
xchg
inc
daa
cmc
sub
push
ret
scas
mov
repnz
push
test
aad
sub
fmull
mov
cmc
mov
adc
lock
insl
mov
pop
dec
les
and
int
sbb
xor
sub
enter
jo
sbb
nop
dec
jno
int3
xchg
jmp
mov
lcall
loop
inc
add
xor
push
and
mov
pusha
setnp
mov
mov
pushf
call
xchg
push
pushl
ret
xchg
pusha
push
pushl
ret
xchg
pushf
mov
xchg
not
call
mov
jmp
lcall
sarl
pushfw
xor
xchg
add
in
andb
pop
and
add
rep
dec
add
adc
mov
xchg
lods
mov
push
outsb
sub
inc
ret
jl
xchg
or
shlb
sarb
add
sahf
fsubs
ja
pop
in
stos
adc
adc
iret
lods
in
fldl
das
das
in
stc
pushf
mov
clc
jl
fsubs
xchg
jle
push
scas
mov
stos
sbb
sti
inc
movsb
test
pop
es
push
push
and
inc
imul
push
adc
xchg
push
xor
aad
mov
cmpsl
outsb
xor
mov
mov
data16
and
jle
mov
sbb
mull
jmp
and
xchg
add
stos
mov
cmpb
das
dec
daa
test
bound
pop
mov
call
jns
inc
lahf
in
movsb
and
ror
xchg
adc
popf
mov
test
pop
xlat
pop
aaa
mov
scas
les
nop
std
out
imul
jbe
les
or
jle
push
add
xor
sub
and
in
fwait
movsl
sbb
pop
fcmovnb
push
movsb
dec
add
mov
imul
cmc
rorl
shrd
test
mov
or
jb
aad
push
popa
in
add
xor
push
cmc
test
cmp
xor
push
mov
sub
dec
rolb
stc
or
ljmp
hlt
cmp
cmp
mov
mov
jo
xor
xchg
rorb
mov
or
imul
fsts
pushf
adc
loop
jae
test
sbb
fwait
leave
movsl
movsb
push
in
sbb
dec
into
jns
sub
mov
adc
add
cmc
mov
das
mov
sbb
mov
xchg
pop
jl
into
jecxz
jmp
push
and
outsl
adc
lcall
lods
notb
call
cmc
stos
pop
xchg
dec
das
fnstcw
jb
xchg
je
movq
rcrl
sti
xor
stos
cmpsb
movsl
dec
push
divl
push
fldenv
pop
sbb
enter
xchg
repnz
aad
jb
and
adc
ror
xchg
push
das
clc
xor
pop
mov
aas
ss
aaa
lock
js
dec
sub
fistl
sbb
push
or
add
sbb
std
xchg
fstl
dec
and
pop
fs
scas
mov
frstor
jb
out
pop
ret
and
push
lods
dec
sub
shr
lock
repnz
xor
aam
fwait
popa
push
lds
lock
jns
mulb
add
stc
addb
clc
cmpsl
nop
cmpsb
inc
xchg
inc
fs
or
xor
popl
pusha
fcmovb
ja
cmp
cs
aad
dec
in
mov
cmp
xchg
aaa
jnp
inc
js
mov
imul
ss
inc
clc
jp
hlt
ret
lahf
roll
dec
lock
xchg
mov
leave
or
jb
mov
or
int
movsl
mov
push
cmp
dec
aas
jb
pop
filds
inc
out
sbb
sbbb
or
aad
es
outsb
or
inc
xorb
pusha
leave
xchg
mov
in
out
mov
rclb
out
inc
daa
xchg
cmp
imul
gs
cli
inc
out
or
jno
mov
jle
xor
mov
icebp
mov
test
add
fldcw
ja
cld
sbb
sub
movsb
aam
and
sub
cmc
cmpsb
lods
dec
stos
and
jnp
test
jge
mov
inc
adcl
shl
jp
movsb
insl
fmulp
pop
rclb
fucomip
mov
xchg
out
into
pop
jbe
test
int3
jae
cmp
mov
mov
inc
das
fdivrl
adcl
lods
testb
movsb
rcll
orb
ja
out
sub
rorb
push
out
push
and
or
or
sbb
rcrl
xor
mov
mov
lret
fs
push
pop
and
cmp
mov
sub
in
push
loop
jb
inc
lret
pop
rorb
icebp
or
es
sar
sbb
add
mov
mov
and
leave
inc
mov
pop
mov
outsl
xlat
add
dec
aam
pop
scas
nop
cmpsb
cmpsb
pop
sub
mov
jbe
inc
mov
or
jne
pop
rorl
jge
fdiv
inc
test
add
bound
hlt
push
mov
movsl
add
lea
cmp
cmc
jno
adc
and
or
cmp
cmp
push
adcl
jbe
sbb
push
mov
ja
ja
jp
ret
iret
mov
pushf
xchg
bswap
pop
jmp
jmp
movw
mov
mov
pop
mov
mov
push
mov
call
lea
movl
call
lea
call
mov
nop
push
lea
jg
pushf
pushf
xchg
not
mov
pushf
lea
movw
call
jmp
xchg
movw
push
pushf
pushl
ret
movl
push
movb
lea
jmp
pushf
mov
push
movw
not
mov
jmp
mov
setbe
movsbw
lea
mov
jmp
push
not
push
jmp
push
seta
movb
bswap
nop
call
mov
push
jmp
pusha
call
mov
mov
movzbw
push
mov
lea
js
mov
pushf
pusha
jmp
push
call
pusha
pushf
nop
pusha
xchg
pushl
call
pushl
call
not
nop
pushf
not
not
pop
pop
push
pusha
push
xchg
lea
jge
pushf
push
mov
pop
movsbw
movzbl
mov
pusha
mov
pushf
lea
push
jmp
xchg
not
movzbw
pusha
pushf
mov
jmp
movw
pushf
lea
movw
push
movw
xchg
mov
pushl
ret
lea
pushl
xchg
movw
pushf
movb
pushf
pushl
ret
pusha
mov
jmp
push
pushf
push
nop
call
pushf
pusha
lea
jmp
mov
jmp
lea
mov
pushf
movb
mov
xchg
movb
mov
movb
pushl
ret
xchg
mov
mov
mov
movb
pushl
ret
push
xchg
jmp
pusha
nop
jmp
lea
pusha
jmp
pusha
mov
call
nop
pushf
pusha
jmp
jmp
nop
pushf
jmp
pushf
pushf
popl
stc
test
xor
test
cmc
xor
push
xor
cmp
xor
pushl
pushf
xor
pushl
xor
bt
xorl
push
cmc
xor
bt
pushl
popf
pusha
pushl
ret
bswap
lea
nop
pusha
pushl
not
movw
xchg
setb
call
jmp
jmp
call
lea
lea
jnp
pushf
pusha
pushf
xchg
push
pushf
pushl
ret
xchg
pushf
mov
pushl
ret
jmp
xchg
mov
mov
pushl
ret
lea
mov
xchg
movb
pushl
ret
pusha
nop
call
mov
push
pushf
call
not
mov
jmp
push
mov
pushl
seto
jmp
pushf
mov
movb
lea
push
xchg
push
pushl
ret
cwtl
bswap
mov
pusha
movb
mov
pushf
call
xor
cmc
call
pusha
call
pushf
mov
lea
pop
mov
call
pushl
xchg
pushf
push
mov
movb
pushl
ret
call
pushl
pushf
movl
pushf
movb
call
mov
jmp
xchg
pushf
mov
pushf
pushl
ret
mov
pusha
mov
pusha
jmp
pusha
mov
nop
jmp
pusha
pushf
jmp
mov
call
jmp
jmp
call
lea
pusha
push
push
xchg
pushf
pushl
push
pushl
pushl
ret
pushf
mov
jmp
jmp
pushf
lea
pushf
pushl
mov
pop
jmp
lea
pushf
mov
xchg
movb
pushl
ret
pushf
jmp
mov
lea
mov
push
push
xchg
movb
push
mov
pushl
pushl
ret
pusha
movb
mov
pushf
push
lea
jmp
lea
mov
xchg
pushl
mov
pushl
ret
mov
movb
mov
jmp
lea
pushl
jmp
in
xor
aaa
subb
fdivrs
pop
push
pop
cmc
jb
mov
cmp
lret
out
and
out
rcll
sub
pushf
imul
pop
sub
test
or
jmp
cmp
cmp
addr16
cwtl
pop
push
or
cmc
mov
out
cld
stos
fwait
popf
shlb
cwtl
mov
adc
sbb
mov
ja
sbb
test
out
sahf
pop
mov
ss
test
sub
aas
jae
dec
xor
add
cmp
adc
adc
std
push
shll
fs
adc
ljmp
push
icebp
add
sub
xchg
push
ja
aad
pop
sub
and
push
mov
jns
dec
add
sbb
sbb
mov
cmp
aad
pop
jns
jnp
out
and
cld
ljmp
and
jae
jl
lret
ljmp
cmp
and
clc
repnz
push
dec
xchg
fstl
push
mov
push
cmpsb
mov
hlt
addr16
test
dec
pop
xor
dec
fnstcw
scas
mov
push
aas
xor
fistl
insb
jne
fs
xor
sbb
and
into
push
loopne
in
cld
sub
ret
sub
jbe
test
in
mov
aam
push
xchg
das
lods
dec
lret
jb
and
push
mov
rol
pop
mov
clc
dec
orb
dec
jmp
mov
inc
or
int
xchg
cmp
push
call
mov
add
sub
mov
pop
pop
jp
aas
mov
pop
aas
dec
pop
or
xor
fwait
lret
push
jno
aam
cmpsl
lock
dec
adc
mov
or
pop
jae
mov
jge
mov
loopne
fistpl
out
shrl
jno
jl
or
jns
dec
sbb
push
sub
orb
ret
xchg
dec
sbb
xchg
lds
mov
xchg
into
add
arpl
cmp
and
cli
bound
outsl
movsl
ret
jle
or
rcrl
aas
pop
aam
mov
and
data16
sbbl
incb
sbb
xlat
mov
scas
les
jno
and
push
and
jmp
push
ljmp
pop
les
xchg
xor
pop
adc
stos
int3
leave
lds
jne
movsb
mov
cmpsb
xchg
std
aam
xor
cmpb
jle
cmp
mov
inc
jp
andl
inc
lods
mov
jb
dec
mov
push
repnz
inc
aas
mov
movsb
insl
mov
enter
cmp
arpl
adc
lcall
mov
sub
int
add
in
cmp
cli
test
gs
test
lods
je
pop
lret
sbb
pop
sub
inc
push
cmp
and
adc
mov
lea
mov
inc
inc
add
jbe
push
cmp
mov
sbb
es
jmp
sti
xor
xchg
cmpsl
frstor
push
or
and
xchg
mov
outsb
cmc
daa
adc
in
add
cmc
jmp
orl
ja
xchg
daa
adc
cmp
dec
addr16
rcrb
jae
out
xchg
pop
mov
pop
popf
cmpsl
repnz
call
sub
xchg
cwtl
and
incb
xchg
mov
movsbl
outsl
lcall
cli
outsl
ss
les
sub
sub
jmp
jle
idivb
in
sub
cmp
push
and
sbb
sbb
fsubl
adc
jnp
mov
inc
and
rcr
sub
dec
xchg
pushf
mov
popa
lock
movsb
test
add
in
add
xor
cmc
bound
sub
out
fldenv
jl
inc
out
hlt
into
idivl
les
dec
in
aam
lea
cld
adc
pop
inc
xchg
sbb
sbb
outsb
xchg
dec
pop
imul
xor
jmp
faddp
pop
mov
xor
js
xchg
lea
dec
fwait
mov
jno
xor
iret
cmpsb
lret
dec
mov
dec
dec
in
or
out
jg
inc
xchg
and
xor
sbb
repz
fidivl
jno
cwtl
inc
dec
test
aam
fimuls
leave
push
sbb
push
jg
push
push
notl
in
push
imul
imul
dec
xchg
loopne
fcmovne
or
jbe
fstpl
movsl
fldenv
xchg
adc
fbld
pushf
xchg
sbb
out
lret
cmp
and
negb
fcmovnu
push
bound
jmp
fs
hlt
lahf
nop
pop
fs
xlat
call
lea
js
xchg
pusha
movb
pusha
pushl
ret
bswap
bswap
nop
lea
mov
pop
jl
pushf
movb
xchg
jmp
jmp
aaa
jae
repz
call
lea
nop
pusha
call
mov
xchg
movb
pusha
pushl
ret
lea
jmp
call
pushf
lea
push
pushl
mov
pushf
mov
pushl
jmp
lea
jmp
lea
movb
mov
xchg
mov
push
pushl
ret
call
call
pushf
jmp
xchg
mov
mov
pushl
ret
pushf
movl
pusha
mov
push
mov
lea
jmp
pushf
pushf
mov
pop
mov
call
pushf
call
lea
movw
mov
call
call
nop
call
pusha
push
mov
pushf
xchg
mov
movb
pushf
push
pushl
ret
bswap
bswap
nop
call
pushl
mov
movb
push
pushf
pushf
lea
movw
xchg
movl
pushl
ret
nop
pushf
pusha
mov
setnp
mov
jmp
xchg
push
pushf
pushl
ret
xchg
pushf
mov
pushf
pushf
pushl
ret
pushf
lea
pushf
xchg
push
pushl
movw
movw
pushl
ret
jmp
lea
call
call
mov
movl
mov
call
xchg
not
mov
call
jmp
movb
movb
lea
mov
xchg
mov
mov
mov
movb
pushl
ret
xor
mov
pushf
mov
mov
push
jmp
mov
movsbl
lea
mov
jmp
jmp
bswap
pusha
mov
setno
movzbw
mov
pushl
pushl
pushl
ret
add
pop
or
std
or
sub
xchg
xor
movsb
mov
test
and
mov
aaa
dec
push
aam
push
movl
push
popa
lcall
ss
rorl
push
sub
shl
or
int3
daa
cmp
xor
or
std
xchg
lock
mov
sub
movsb
xchg
and
adc
pop
aaa
imul
ret
mov
adc
jmp
add
insl
mulb
add
icebp
jl
push
mov
add
pop
fsubl
push
or
std
adc
add
or
sbb
clc
out
and
into
fbld
hlt
enter
adc
mov
cmp
dec
sti
in
mov
add
int3
pop
fldcw
mov
in
jmp
subl
and
mov
cmp
cmpsl
out
outsb
pop
pop
push
and
cmp
cwtl
pusha
pop
sub
dec
xlat
or
int3
mov
push
fistps
popa
pop
push
mov
dec
and
push
pop
or
mov
mov
mov
frstor
out
leave
jecxz
mov
jg
iretw
jg
mov
xchg
push
lds
call
aas
lds
jg
push
loopne
pop
adc
jns
mov
sub
cmp
push
add
cmp
xor
scas
lods
pop
and
arpl
aad
sarl
dec
xchg
nop
cmpsb
mov
int
rorb
or
or
inc
mov
stos
sub
call
and
lea
in
mov
psubusw
add
lods
into
push
xor
mov
cli
and
xlat
sub
fmuls
push
mov
adc
push
or
shr
int
or
std
jge,pn
xchg
filds
cmc
push
and
pop
in
xchg
sub
or
negb
in
jle
repnz
hlt
out
insb
jecxz
inc
decl
stos
sub
xchg
cmpsb
push
rorl
test
and
shrl
mov
push
in
adc
cmpsl
push
jecxz
jo
std
push
lods
and
dec
jmp
arpl
lcall
mov
add
notl
and
add
sbb
je
cmpsb
cmp
jp
cmp
cmpsl
xor
aad
sbb
cltd
sub
inc
leave
add
mov
outsl
push
xor
das
je
clc
or
or
stos
outsb
punpckhbw
add
mov
sbb
ret
inc
mov
inc
ja
mov
jae
push
lahf
or
or
dec
dec
mov
pop
outsl
aam
movsl
xchg
xor
decl
pop
push
and
sbb
test
mov
mov
std
xchg
ljmp
mov
add
cmpsl
lods
mov
aas
jns
push
pop
pusha
inc
sub
push
push
stc
mov
and
std
add
xlat
out
addr16
shlb
and
add
aad
pop
enter
inc
xchg
push
adc
test
cmp
outsl
xor
ja
inc
push
divb
mov
jp
adc
out
sbb
cmpl
mov
ss
enter
mov
sti
outsb
dec
cwtl
push
cmpsl
dec
inc
cmp
and
test
push
sahf
jbe
outsb
jo
in
movl
out
daa
pop
cs
adc
jmp
rorl
cld
div
repz
dec
jnp
fdivrl
and
cwtl
push
xor
adc
in
cltd
xor
mov
and
test
shll
gs
push
neg
fildll
stos
int3
cmp
mov
push
push
rorb
push
xchg
add
and
add
imul
incl
xor
pushf
mov
mov
pushl
ret
xchg
pushf
movb
call
mov
movzbw
mov
jmp
mov
call
push
xchg
mov
bswap
lea
jmp
xchg
jmp
movsl
dec
and
xchg
pushf
pushl
ret
xchg
cwtl
bswap
not
setae
mov
jmp
xchg
mov
pushl
ret
mov
pushf
movl
pushl
pusha
pushl
ret
call
pushf
call
jmp
pushf
push
lea
mov
jmp
pusha
call
pushf
jmp
pusha
movb
jmp
bswap
mov
pushf
jmp
xchg
mov
mov
pushl
ret
jmp
mov
pushf
lea
call
nop
pusha
pusha
jmp
das
cmp
mov
jmp
pushf
pushl
nop
pusha
mov
xchg
pushf
lea
jae
mov
push
mov
pusha
pushl
lea
lea
jae
pushf
mov
push
mov
pop
movzbw
call
pushf
xchg
bswap
mov
movzbl
bswap
mov
pushl
lea
lea
je
mov
pushf
lea
jp
mov
push
mov
lea
jne
lea
pusha
xchg
pushl
pushl
ret
push
xchg
push
movb
mov
pushl
ret
jmp
setg
mov
call
call
pushl
nop
pushf
mov
bswap
mov
lea
movzbl
mov
lea
jae
pushf
pushf
lea
pushl
jmp
lea
pushf
call
flds
mov
and
mov
jb
add
jno
pop
in
pop
into
movsl
cld
and
adc
dec
shlb
sub
xor
insb
ror
xchg
pop
push
hlt
bound
xchg
decl
push
bound
mov
mov
pcmpgtd
repnz
test
lock
int3
mov
outsl
sahf
movb
insb
in
incl
cld
js
push
data16
aaa
rcl
sub
je
out
shlb
mov
icebp
push
mov
jl
push
jmp
xchg
scas
pop
xchg
fstl
push
xchg
pop
iret
cmpsl
adcb
or
adc
fld
jbe
xlat
stc
rolb
aad
mov
xchg
jp
mov
mov
repnz
sarb
gs
test
int3
pop
pop
repnz
js
stos
push
mov
and
in
xor
mov
enter
pop
dec
lds
fs
jb
sub
pop
lods
xor
sub
inc
aad
lods
jmp
cmp
sub
sub
in
divb
xchg
xchg
sbb
bswap
pop
not
pop
xchg
sbb
and
lods
icebp
pushf
out
lods
arpl
std
jne
lds
test
jle
test
lock
or
inc
xor
cvttps2pi
into
enter
xlat
sbb
iret
add
fcmovnbe
rorl
scas
movsb
rcrb
jns
mov
enter
jge
inc
mov
mov
arpl
out
fstpl
xchg
mov
fidivrs
jnp
adc
xabort
and
imul
lret
push
pop
int
xor
js
icebp
and
xchg
mov
andps
inc
add
inc
pop
fwait
and
jle
mov
dec
push
xchg
xchg
ljmp
mov
lcall
mov
icebp
insl
mov
push
inc
shrl
push
out
in
cld
fwait
push
fsubl
test
cmp
push
push
push
cmp
stc
repnz
out
movsb
cltd
fucomi
daa
cld
in
lahf
loop
test
push
rcrb
mov
insb
pusha
imul
test
imul
sub
sub
xchg
inc
push
mov
inc
mov
punpckldq
inc
mov
xor
push
loopne,pt
push
shrl
popa
dec
test
jg
inc
lea
lds
filds
inc
dec
push
pushl
mov
aaa
outsb
test
push
adc
jb
andb
inc
ja
lds
push
cli
add
ss
bound
pop
mov
frstor
inc
aam
cli
mov
push
mov
mov
push
mov
mov
std
rcrl
xchg
jp
push
mov
sub
jae
inc
gs
add
pop
aam
jg
push
imul
addb
fstpt
mov
mov
cmp
xchg
push
xor
xchg
push
data16
out
mov
cmc
jno
adc
sbb
add
decb
mov
push
jl
rol
dec
imul
adc
pop
idivl
prefetchw
cmp
push
mov
adc
hlt
cmp
lahf
cmp
sub
pop
xchg
xor
push
xchg
mov
out
adc
dec
push
cmp
aad
push
pop
daa
pop
cmp
pop
popa
pop
xor
push
push
pop
cmp
lret
push
or
push
stc
xor
pop
xor
cmpb
test
daa
aaa
ret
add
lock
push
and
or
xor
test
xchg
pop
sbbb
push
cli
fcmove
mov
stc
fmuls
ja
xchg
or
and
popf
mov
mov
or
loopne
xor
mov
int3
jp
movsb
sub
mov
sub
push
es
mov
jle
insb
mov
out
xchg
aas
test
mov
fsts
add
or
insb
call
outsl
imull
outsb
subb
adc
pop
or
nop
inc
lods
mov
inc
movsb
in
lret
and
out
mov
jno
cli
pop
mov
and
ret
xchg
fs
popa
test
into
mov
sub
mov
jne
js
mov
add
and
inc
mov
ret
lret
cmpsb
fadds
mov
push
loope
in
fsubs
xor
sbb
mov
in
mov
in
out
icebp
and
mov
mov
xor
call
sbb
loop
fists
mov
push
mov
enter
in
pop
lods
pop
sbb
or
enter
negl
pop
sub
into
xor
adc
push
cmpsl
push
ret
push
icebp
aaa
push
sbbl
mov
out
xor
ja
in
jecxz
test
fists
fsubr
sbb
ficompl
aam
sub
xchg
mov
fs
insl
push
jb
int
sub
shrl
push
arpl
sbb
mov
add
push
dec
rcll
fwait
jne
jns
dec
sub
mov
cs
mov
xchg
inc
iret
outsl
test
adc
mov
pop
daa
ds
xchg
add
pop
xor
jecxz
inc
imul
push
in
sub
popf
shlb
cltd
jg
cli
enter
push
int3
push
lret
inc
mov
lock
mov
xchg
loop
clc
or
mov
sub
out
jae
fsubs
test
sets
or
test
mov
xchg
inc
xchg
out
lock
mov
dec
nop
hlt
push
sbb
js
jbe
mov
mov
pop
sahf
and
adc
cmp
push
and
dec
cwtl
inc
mov
xchg
arpl
pop
js
mov
jnp
icebp
movl
out
sbb
test
aaa
mov
jbe
and
sub
fstl
mov
jmp
scas
clc
xchg
xor
push
fldenv
les
add
mov
in
imul
fwait
jbe
sub
jne
std
pop
cmpsl
lock
push
movl
dec
fsts
jl
lret
cld
xchg
std
andb
xor
sahf
imul
in
sub
sbb
cmp
sub
inc
test
pop
sbb
incb
xchg
add
sbb
test
es
dec
pop
jmp
mov
or
mov
leave
pop
xchg
icebp
xor
mov
sarb
cmp
cltd
xor
int
mov
and
pushf
out
and
adc
stc
mov
les
lret
imul
push
sub
xor
outsb
int
cld
mov
iret
dec
xchg
or
fbld
dec
add
fnsave
enter
cmpsb
cmp
int3
into
dec
insb
adc
movb
fsubrl
pushf
dec
xchg
es
int
and
adc
arpl
mov
mov
pop
pop
sub
es
pop
and
inc
cmpsb
sub
movsl
jo
mov
inc
repz
cmp
or
cmpsb
leave
shl
or
dec
mov
outsl
xchg
adc
addb
xchg
mov
jg
es
cmpl
into
xor
sub
dec
mov
out
insl
int3
fcmovnb
insb
push
jb
mov
notb
stos
mov
stos
cwtl
lods
mov
inc
daa
in
mov
outsl
aam
lods
pop
mov
hlt
xchg
pop
fnstenv
dec
lahf
push
sub
nop
sub
jno
int
push
loopne
sar
daa
cmp
sub
inc
outsl
mov
jmp
lods
aam
adc
sbb
in
fs
mov
nop
clc
jp
sahf
es
cmpsl
gs
inc
fcmovb
xchg
add
outsl
push
mov
clc
pop
mov
aas
sbb
or
pop
add
dec
mov
dec
int
jmp
scas
out
xchg
add
add
mov
movb
mov
mov
pushl
ret
push
pushf
lea
push
xchg
mov
pushf
push
pushl
ret
lea
push
jmp
mov
movzbw
mov
pushf
jmp
call
mov
lea
lea
jb
mov
pushf
pusha
jmp
jmp
xchg
mov
movw
mov
pushl
ret
mov
xchg
pushf
push
mov
pushl
ret
mov
push
jmp
cmp
jg
lea
movl
xchg
pushl
mov
pushf
pushl
ret
jmp
lea
pusha
nop
pushf
mov
call
movb
lea
pusha
push
mov
call
mov
pusha
not
movzbw
movzbw
mov
pushf
call
xor
jmp
lea
jmp
call
call
lea
jmp
jmp
mov
pushf
mov
lea
jl
pushf
pusha
mov
mov
pusha
pushf
pushf
lea
pushl
xchg
movb
movl
movb
movw
pushl
ret
mov
jmp
pusha
mov
mov
pushf
push
call
mov
pusha
xchg
jmp
lea
not
pushf
lea
mov
not
mov
pushl
pushf
movb
pushf
pushl
ret
mov
push
lea
movl
xchg
mov
pushf
pushl
ret
mov
pushf
mov
jmp
xchg
push
pushf
pushl
ret
pusha
jmp
mov
pusha
xchg
pusha
bswap
movb
mov
call
jmp
call
adc
imul
cmp
adc
out
push
sub
repnz
pop
jne
testb
aas
shl
aas
mov
test
cmp
ror
lds
fcompl
orl
mov
popa
add
int3
xchg
push
cmp
inc
mov
call
mull
fstps
sbb
mov
xor
jmp
push
fdiv
mov
adc
ja
xor
and
dec
mov
insl
push
add
xor
push
imul
and
lea
inc
les
mov
lahf
lods
and
dec
add
dec
fsubs
scas
ja
std
mov
ljmp
push
push
nop
pop
in
push
xchg
add
addl
sti
rorl
nop
inc
in
lcall
loope
ja
es
mov
jno
jno
add
or
jecxz
icebp
mov
mov
pop
stos
or
and
jnp
inc
pminsw
mov
dec
inc
mov
out
outsl
sub
cli
and
mov
jle
mov
push
jne
xor
in
pop
pop
inc
pushl
pushl
push
pop
iret
rorb
das
daa
daa
push
push
out
or
xorl
adc
xchg
popa
cmc
jle
insb
mov
inc
sbb
xchg
mov
pop
mov
sub
push
aaa
arpl
fsubs
lahf
nop
pop
push
lea
addr16
je
lcall
fcomps
jl
stos
aam
lods
sbb
rorb
daa
rcll
mov
push
jge
fcmovnu
and
popf
jns
inc
xchg
or
xchg
xchg
sub
scas
mov
sbb
aaa
lret
movq
mov
jns
js
xor
sbb
sub
push
rcrl
fsubr
cmp
aam
nop
iret
xchg
fisttps
pop
mov
adc
xor
ret
call
aad
mov
pop
subb
in
dec
aaa
outsl
xor
js
leave
jb
pop
es
inc
stc
mov
jbe
add
jne
dec
outsl
fdivs
std
fmuls
cmp
xchg
testb
rcl
shl
push
setae
add
mov
xchg
mov
mov
xor
out
scas
cltd
std
out
or
mov
mov
rcl
push
push
xor
in
jbe
out
sbb
xor
adc
cli
ljmp
out
or
js
pop
cmc
movsb
fwait
icebp
fcmovne
inc
inc
popf
or
xchg
rclb
data16
mov
adc
es
and
xor
lea
add
and
stos
jae
loope
sub
and
shll
ret
xchg
stc
mov
push
push
cmp
mov
jnp
div
sbb
fiaddl
in
aas
mov
lods
adc
lock
insb
add
pop
cmc
out
rolb
int
or
int
push
mov
jae
rcr
cmpsl
xor
sub
cwtl
jmp
stos
pop
adc
fiadds
lods
pop
andb
or
popa
clc
cli
inc
test
adc
int
test
cmp
incl
mov
gs
cmp
rclb
mov
stos
sahf
jmp
dec
xchg
push
push
in
lock
and
arpl
xchg
xchg
clc
shrl
lods
and
xchg
dec
mov
cmp
js
jge
test
cmpsl
push
cltd
jp
push
pop
adc
or
cmp
jmp
jle
xor
jae
mov
push
dec
mov
call
test
xlat
je
mov
mov
pop
pop
pop
adc
mov
pop
das
stc
lods
data16
cmp
enter
pop
rorl
out
mov
add
lock
push
dec
sub
imul
mov
inc
cmpsl
dec
adc
xchg
les
mov
fdivl
or
pusha
nop
bswap
mov
call
pusha
lea
pushf
lea
jno
pushf
xchg
pusha
pusha
mov
pushl
ret
xchg
sub
sub
xchg
movb
mov
lea
jnp
mov
pushf
pushf
mov
pusha
call
pusha
bswap
mov
jmp
jmp
mov
push
push
movb
pusha
lea
pushf
push
xchg
movl
push
push
pushl
ret
pushf
nop
pushf
jmp
mov
call
mov
call
xchg
mov
pushl
ret
push
lea
movb
jmp
call
pushf
mov
pusha
push
lea
movb
jmp
push
mov
lahf
bswap
mov
pushf
jmp
jp,pn
jb
std
rcrl
je
cmp
sarl
xchg
adc
les
sub
xchg
fwait
lahf
jmp
roll
les
mov
out
in
cmp
add
adc
adc
popa
fidivs
lcall
mov
pushf
data16
clc
rorl
aad
xlat
iret
xchg
pop
je
dec
cmp
inc
inc
or
add
and
std
xor
push
mov
pop
adc
cwtl
jns
ret
mov
scas
divl
xor
lea
add
dec
rcl
mov
mov
xchg
int
add
and
mov
lds
rorb
call
ret
scas
notl
lea
add
mov
pusha
sahf
insl
sbb
shl
out
lret
jmp
repnz
ljmp
or
in
dec
fstps
and
in
push
or
add
inc
enter
out
jne
dec
sbb
sbb
mov
shlb
loopne
insb
cmp
aad
push
pop
arpl
ljmp
push
mov
addr16
jo
sbb
nop
inc
inc
test
lret
jo
cmpsb
cmp
xor
pop
jge
scas
inc
fstps
idivb
icebp
es
mov
push
les
sbb
cltd
data16
arpl
es
cs
shll
inc
add
ljmp
jp
out
fsubl
aam
aas
or
int
fld
rcrb
cli
cli
loope
loopne
dec
push
ds
cli
sti
inc
mov
into
xchg
int
addl
addr16
inc
or
mov
fstl
and
push
iretw
mov
pcmpeqw
xchg
gs
cs
sub
mov
dec
xor
cltd
fwait
sbb
sub
sahf
or
jecxz
mov
int
fisttpl
enter
mov
or
ret
xor
jnp
vpshufd
lcall
inc
jp
add
dec
lds
pushf
jno
scas
imull
in
loope
and
push
lahf
pushf
cltd
jbe
maxps
mov
mov
or
sti
or
std
lods
sub
pop
sub
fsub
sub
or
enter
rcr
lea
shll
xchg
jnp
je
inc
pop
pop
and
cltd
and
in
push
les
repz
sub
movsb
jp
adc
and
inc
pop
inc
fbld
jle
push
in
ret
cmp
je
shl
or
pushf
arpl
push
and
push
and
mov
jecxz
mov
loopne
ret
push
or
cmp
mov
out
fstl
bound
sbb
xchg
lods
xor
add
add
sub
push
mov
jmp
or
bnd
mov
mov
mov
lods
sbb
rcr
es
test
push
leave
jnp
adc
xor
jecxz
add
xchg
pusha
je
int3
pop
mov
sbb
lahf
jg
add
stc
xadd
sub
xchg
adc
jp
xchg
fnstsw
add
in
inc
xchg
add
or
or
mov
jns
jp
sbbl
jno
xchg
lds
lds
lods
dec
cli
and
pusha
mov
fbstp
mov
sahf
repnz
loop
push
popa
pop
or
js
xchg
jge
aaa
sbb
push
test
cli
popf
repz
cmpsl
cvtdq2ps
add
sbb
into
cltd
mov
jge
cwtl
sub
dec
cld
pop
sub
loop
test
out
movsb
adc
jmp
std
daa
int3
xchg
mov
adc
iret
int3
adc
and
test
dec
lcall
or
pop
mov
xchg
xchg
dec
cmpb
ds
iret
mov
jno
or
jle
xchg
fstps
jno
push
mov
leave
lret
cs
lret
push
imul
mov
and
insb
dec
push
cs
xlat
sub
xchg
jle
push
add
xchg
push
idivl
push
call
arpl
loope
decl
addb
std
jmp
xorb
mov
call
decl
fisttpl
push
and
pushf
pushl
ret
lea
push
mov
lea
pop
movzbw
mov
movb
push
movb
mov
call
pushf
mov
jmp
xchg
nop
push
movsbw
mov
jmp
call
movsbl
movsbw
jmp
mov
pop
call
pusha
movb
pusha
push
nop
push
call
call
call
cltd
or
nop
movzbw
mov
pusha
bswap
mov
jmp
xchg
pushf
movb
pushf
pushl
ret
call
movl
xchg
movb
pushl
ret
pusha
mov
jmp
call
xchg
call
pusha
xchg
bswap
mov
jmp
call
call
pusha
lea
pushl
pushf
xchg
mov
mov
pushf
pushf
pushl
ret
pushl
movb
xchg
pushf
mov
pushl
ret
xor
push
xor
cmc
xor
bt
xor
pushl
pushl
popf
push
pushl
ret
jmp
lea
call
pushf
xchg
push
pushl
ret
pushf
movzbw
mov
pushl
mov
push
jmp
mov
call
call
jmp
pusha
call
xchg
pusha
pushl
ret
lea
jg
push
mov
push
push
not
lea
mov
movw
pushf
call
jmp
fdivs
jnp
lock
add
subb
fcoms
arpl
lods
mov
jge
mov
lret
ja
frstor
cmp
daa
jb
dec
and
push
pop
push
mov
xchg
cmp
bound
inc
cwtl
popa
xor
xor
je
push
push
insl
xchg
xchg
push
mov
je
cmpsb
push
aad
pop
cmpsl
adc
in
testb
test
sbb
push
xchg
sbb
mov
sub
mov
loop
rorl
push
stos
sbb
add
jbe
test
mov
jle
inc
adc
xchg
bound
push
and
cmp
fisttpll
adc
ret
arpl
jl
jmp
lahf
imul
adc
sbb
lods
mov
sbbb
sub
icebp
inc
mov
push
push
mov
lods
iret
pushf
push
sbb
pop
sahf
pop
sub
dec
xor
sub
mov
mov
fimuls
sarb
or
jnp
shlb
ret
bound
cmp
bswap
movsbw
pushl
jmp
call
movb
call
lea
lea
mov
mov
not
push
mov
push
mov
pushf
mov
pushl
ret
pushf
xchg
pushf
pushf
mov
mov
pushl
ret
xchg
jmp
push
lea
pusha
mov
pushl
call
mov
pop
not
lea
pusha
mov
movsbw
pushf
movsbl
mov
pushf
pushl
ret
mov
mov
lea
ja
push
pushf
mov
mov
push
lea
pusha
xchg
push
mov
pushl
pushl
ret
call
pusha
call
pushf
pusha
jmp
call
mov
movsbl
pushf
movsbw
jmp
xchg
mov
mov
mov
pushl
pushl
ret
mov
not
movzbl
jae
nop
jmp
not
not
mov
mov
jmp
movw
jmp
pusha
nop
pushf
mov
not
mov
pushf
pushf
lea
jp
lea
jmp
pusha
jmp
call
lea
call
lea
pushl
pushf
jmp
lea
mov
movb
push
pushl
ret
jmp
push
call
push
pushf
pushl
nop
jmp
mov
pusha
lea
push
xchg
pushl
push
pushl
ret
call
call
lea
call
lea
call
jmp
pusha
mov
pushf
pushf
jmp
nop
movsbw
call
mov
pusha
push
mov
pushf
pushl
movl
lea
movb
mov
call
pushf
pusha
xchg
pushf
bswap
bswap
mov
pushf
jmp
pusha
pushf
lea
jmp
movb
mov
movb
jmp
jmp
pushl
mov
call
push
xchg
mov
pushf
pushf
pushl
ret
mov
call
mov
pushf
pushf
mov
pushf
pusha
lea
call
lea
movzbw
pop
mov
setl
call
jmp
mov
mov
pushf
mov
movb
pushf
pushf
lea
pusha
pushf
mov
xchg
mov
mov
movw
pushl
ret
push
movb
pushf
nop
call
jmp
mov
call
jmp
call
push
pushf
mov
mov
cwtl
not
mov
call
pushl
lea
call
mov
pushl
pushf
pusha
lea
pushf
pushf
push
xchg
mov
pushl
ret
jmp
mov
mov
pushf
pushf
movb
lea
pushf
call
jmp
jmp
pop
cwtl
movzbl
mov
pushf
call
movl
lea
call
call
repz
rcl
xchg
pop
add
ja
std
ds
test
or
mov
lds
inc
fidivs
test
push
mov
push
push
les
cmp
cmp
mov
mov
out
push
cmpsl
test
in
jo
and
xlat
pop
and
test
ljmp
test
or
outsl
inc
sbb
adc
sub
pop
nop
or
js
subb
adc
xchg
pop
jmp
les
pop
ret
inc
xlat
pop
pop
imul
mov
add
mov
dec
sbb
loopne
adc
lret
sub
inc
cmp
mov
call
stos
sub
mov
xchg
add
mov
js
divl
es
icebp
pop
lret
sub
movsb
jp
shlb
push
cmp
insb
enter
incb
mov
or
inc
nop
jge
popf
push
xchg
inc
cs
mov
out
add
in
pop
xlat
in
mov
repnz
ret
inc
xrelease
xor
adc
popa
je
pop
lret
bound
test
mov
or
setno
outsb
sti
fs
movsl
je
test
fbld
pop
xor
push
js
or
fadd
pop
pop
mov
lods
mov
test
in
sub
fwait
and
add
fsubs
mov
dec
insb
jge
mov
gs
jg
cmp
movsl
or
scas
sbb
popa
inc
sbb
push
je
das
jae
leave
adc
je
lret
test
aad
jge
fidivrs
insb
mov
or
cmp
xchg
out
add
dec
lea
addl
mov
hlt
add
stos
aad
aam
shlb
or
and
les
sub
out
xchg
and
repnz
fcmovne
test
mov
mov
adc
loop
mov
insb
jbe
mov
frstor
out
out
push
push
loopne
cmp
mov
shlb
ds
int
inc
adc
push
imul
icebp
mov
fisubs
pop
mov
mov
mov
mov
xor
mov
pop
pop
mov
push
cld
inc
cmp
clc
xchg
push
push
insb
push
scas
scas
stos
jb
xchg
fistpll
jle
or
lods
ret
cmpsl
mov
lahf
imul
icebp
dec
mov
jno
aad
adc
sub
jae,pn
inc
xor
cmp
dec
mov
jg
call
sub
daa
mov
inc
outsl
dec
pushf
add
mov
sar
aad
movsl
lods
and
mov
push
movsb
das
into
and
test
iret
mov
jo
push
jns
daa
fnstcw
cmp
enter
adcb
into
mov
lret
fwait
in
les
gs
and
loope
sbb
dec
popf
lods
int3
dec
scas
stc
out
pop
cmpsl
add
repnz
cmp
sub
xor
adc
xchg
dec
pusha
test
ret
pop
cmc
das
jp
insl
ja
xor
jno
int
push
das
push
xchg
out
dec
ljmp
stos
jae
jb
jbe
sahf
jmp
dec
sbb
mov
sbb
and
push
pushl
ret
pushl
lea
call
not
movzbl
movzbl
nop
bswap
jmp
jmp
call
pushf
push
mov
nop
mov
pusha
movzbw
bswap
mov
pushl
mov
pushf
call
pusha
nop
push
push
jmp
mov
lea
mov
pusha
mov
jmp
xchg
pushf
movb
pushf
pushl
ret
jmp
rclb
jae
clc
les
aad
xchg
dec
sub
mov
sti
cmp
and
inc
inc
or
loope
pop
cmp
fs
into
sub
jl
clc
cmpsb
fldenv
pop
lahf
or
mov
ffreep
mov
jns
test
sti
repnz
lret
ja
sub
inc
cld
jb
adc
stc
pusha
cmpsl
cli
or
adc
mov
mov
je
es
dec
cmp
mov
jp
push
xlat
or
push
jno
adc
sarl
aas
sti
mov
popf
pusha
pusha
out
outsl
jnp
jne
nop
add
stos
add
sbb
mov
lret
xor
lret
leave
rcrl
push
stos
mov
cmp
inc
lods
outsb
ds
mov
fimuls
pusha
push
sbb
jne
andb
out
jp
hlt
aaa
fldenv
iret
mov
push
insl
jecxz
adc
test
and
into
sbb
cmp
dec
push
aaa
or
adc
outsb
ret
stc
inc
mov
mov
inc
xchg
push
adc
and
stos
shll
cwtl
pop
mov
insb
sbb
sbb
mov
pushf
cmp
jo
iret
pop
shlb
mov
add
add
xor
es
pop
xchg
test
dec
xor
imul
inc
cld
xlat
lods
lret
jge
fmulp
repnz
cmpsl
adc
sbb
pop
add
mov
sbb
cmp
mov
das
push
xchg
sbb
xor
mov
xchg
shll
mov
jno
rol
xor
inc
test
add
adc
push
and
cltd
xchg
les
lods
mov
cmp
scas
sbb
mov
out
lret
std
test
cwtl
mov
and
sub
jb
nop
int
js
inc
xrelease
mov
mov
lret
dec
mov
cmpl
scas
mov
in
mov
scas
mov
mov
repnz
mov
int3
fisttps
jle
sbb
mov
imull
sbb
outsb
shl
loope
imul
sub
aad
mov
jbe
and
adc
lock
cld
mov
outsb
mov
and
push
div
mov
pop
adc
cmp
inc
push
insb
push
pop
test
int3
shlb
rcll
sbb
test
std
push
jb
cmp
cmc
jle
std
jmp
sub
mov
ret
jmp
in
bound
xor
lea
and
fistps
out
inc
popf
inc
in
add
loope
pop
test
pop
push
subb
add
dec
lret
xor
xchg
pop
es
stos
push
jecxz
outsb
repz
xchg
dec
sbb
mov
inc
cmpsl
sti
frstor
pop
fldl
fwait
push
test
dec
lods
jne
lds
adc
mov
jp
xchg
mov
rcrb
xchg
cmp
cmpsb
mov
lcall
dec
pop
pop
and
mov
lahf
in
cmc
cmp
mov
cld
dec
das
popa
sub
sbbl
push
fimuls
out
testl
mov
push
imul
mov
lods
test
sbb
mov
mov
stos
lcall
and
mov
jno
mov
nop
xor
cli
dec
jnp
rcrb
fimuls
fmull
cmpsl
notb
lods
or
das
inc
adc
sub
xchg
scas
xchg
movsl
inc
xchg
adc
xchg
and
lock
sub
daa
repz
dec
lahf
sahf
loope
loope
mov
jnp
orl
fcmovbe
fmulp
push
lret
add
adc
iret
push
sub
pop
sarb
imul
test
xchg
mov
insl
movsl
bnd
mov
push
sbb
ljmp
or
in
mull
jp
or
popa
sub
xlat
cs
mov
pop
stos
mov
test
sbb
aaa
sbb
push
or
add
test
sub
adcl
push
pop
dec
adc
mov
or
rol
cmp
popa
std
cmp
jg
imul
adc
movsl
cmpsl
imul
jp
insl
rclb
dec
adc
cwtl
arpl
xchg
mov
decb
cmpsb
push
gs
pop
pop
fcmovbe
pop
push
jne
mov
jae
inc
mov
or
mov
jo
jge
mov
mov
push
push
push
pushl
ret
in
addb
pushl
nop
push
jmp
jmp
lea
lea
pop
pusha
movw
xchg
mov
pusha
pushf
mov
pop
lea
mov
push
mov
call
movsbl
mov
call
call
call
call
xchg
pusha
mov
not
push
movsbw
movzbl
mov
movb
push
mov
pushf
pushf
call
mov
call
xchg
pushl
pushf
pushl
ret
mov
bswap
pushf
lea
pop
mov
pushl
call
call
xchg
push
pushl
push
movb
pushl
ret
lea
pushl
mov
call
jmp
jmp
jmp
movb
pushf
jmp
lea
not
nop
not
setge
pop
pusha
movb
xchg
pusha
pushf
xchg
call
movsbw
mov
jmp
jmp
bswap
mov
call
mov
pushl
call
pushf
pushl
xchg
push
pushl
ret
mov
pushf
call
movsbw
pusha
xchg
call
mov
call
xchg
pusha
movw
pushl
ret
lea
mov
pushf
xchg
push
movb
movb
pushl
ret
call
xchg
not
movsbw
movsbw
push
mov
pusha
lea
push
jmp
push
jmp
push
pushf
mov
call
mov
pusha
jmp
bswap
jmp
jmp
movb
xchg
pusha
call
mov
not
mov
jmp
jmp
pusha
push
mov
pushl
jmp
mov
lea
call
call
xchg
adc
pushf
mov
movb
lea
pusha
pushf
pushf
xchg
push
push
mov
push
pushl
ret
jmp
pushf
jmp
pusha
nop
call
pop
movzbw
mov
lea
jle
push
mov
pusha
jmp
lea
jmp
xchg
push
push
pusha
pushl
ret
push
call
push
and
pop
jmp
pop
xchg
enter
pusha
andl
xlat
sbb
adc
xchg
pop
cmp
aad
imul
je
int3
pop
aaa
jg
inc
mov
fnstsw
leave
mov
pop
outsb
or
mov
cmp
ret
test
xorl
inc
xchg
add
jmp
addr16
or
nop
leave
in
jno
sub
jb
das
fisubrs
mov
fs
sarb
xchg
push
ja
push
mov
sbb
dec
add
dec
clc
lea
add
jnp
loope
jg
jbe
add
xor
std
sbb
push
mov
in
shrl
mov
pop
out
es
mov
mov
cmp
lcall
pop
jns
mov
jge
scas
fimuls
es
scas
inc
xor
sbb
inc
pop
ficoml
mov
mov
int3
push
cmc
xlat
mov
cmpsb
repnz
mov
lock
lahf
jne
and
shr
dec
cltd
hlt
cltd
jle
std
mov
lret
imul
loop
cmp
xor
sti
mov
negb
aaa
add
dec
inc
addb
mov
mov
xchg
push
hlt
fadd
adc
insb
stos
add
pop
mov
and
shll
xor
sub
jns
xchg
aas
movsl
or
mov
mov
sub
add
sub
sbb
jmp
dec
fwait
in
nop
out
xchg
cltd
test
dec
outsb
test
mov
not
or
mov
and
shll
sarl
aas
clc
xchg
push
nop
loope
mov
mov
lahf
jmp
adc
xchg
nop
and
cmpsb
scas
bound
loope
adc
into
adc
jp
rcll
inc
push
jecxz
jmp
mov
test
dec
sbb
sbb
mov
and
pop
nop
fisubrl
push
adc
pop
rcrb
sti
test
mov
cld
clc
mov
cmp
jno
push
ds
mov
sub
test
movsl
inc
aad
imul
dec
shlb
pop
out
mov
xchg
pop
add
dec
and
filds
adc
popf
cld
jno
xchg
rclb
push
aam
sbb
mov
xchg
call
int3
test
xor
cwtl
dec
mov
jns
dec
xchg
pusha
add
cli
add
lods
inc
fsubl
les
shll
pop
scas
data16
insb
mov
pop
mov
pop
sbb
iret
mov
cmp
popf
imul
xchg
pop
dec
pop
inc
push
and
push
test
in
or
jmp
and
aam
xor
add
xor
sbb
shll
xchg
popf
sti
xlat
mov
sub
cmp
insb
dec
sbb
dec
xchg
out
imul
fdivrl
dec
sahf
test
lahf
mov
and
mov
shlb
jle
adc
pop
cmp
inc
lods
mov
cmp
xor
or
pop
or
adc
or
mov
xchg
out
ds
inc
in
bound
clc
cmp
fs
sub
or
adc
dec
addr16
jns
pop
sub
mov
adc
push
sub
lret
clc
aam
mov
push
std
fldenv
push
mov
pop
mov
mov
dec
adc
into
xchg
addr16
mov
test
xchg
test
int
adc
out
mov
jo
dec
xor
enter
push
jb
cmp
rorl
inc
or
inc
and
cmpsb
ja
aaa
lea
sahf
out
popf
jl
inc
icebp
jp
lahf
jmp
pop
xchg
sub
je
pusha
cmp
out
in
adc
cmpsb
test
stos
scas
or
add
loopne
mov
pop
mov
shrl
ljmp
not
sar
push
or
test
out
or
mov
fs
xchg
addr16
add
add
pop
mov
lret
hlt
push
xor
int3
sbb
leave
imul
lods
mov
lods
dec
nop
sbb
clc
cmp
dec
leave
dec
xchg
add
sub
mov
mov
cld
stc
push
adc
jmp
test
lret
iret
inc
lea
jp
and
out
rcrl
adc
das
mov
aaa
jb
movsb
enter
or
sub
cmp
xor
aad
sbb
pop
dec
and
iret
push
jno
std
lahf
pop
cmp
lahf
push
jne
jge
and
ds
mov
es
or
call
push
int3
out
and
mov
mov
movntps
push
sub
pop
xchg
push
push
inc
lea
pop
inc
in
fsubrl
sub
imul
enter
ret
pushf
fdivs
mov
scas
fldcw
pop
adc
out
xor
decl
adc
dec
add
jg
in
outsb
xchg
xor
gs
lods
test
jae
cld
int
out
hlt
sbb
popf
fildll
frstor
icebp
sahf
or
andb
push
cmc
test
or
xor
mov
call
call
inc
xchg
cmp
fcomi
or
sbb
mov
sbb
sarl
inc
jb
xchg
sub
add
stos
xchg
movsb
push
lea
fwait
pop
push
cmp
js
jmp
jp
movsb
pop
adc
int
insb
out
mov
ficompl
outsl
and
lods
cmc
das
inc
out
repnz
mov
inc
ss
pushl
out
mov
dec
xchg
ja
pop
jo
es
insb
cwtl
sti
xor
and
daa
xor
or
push
shr
pop
test
das
test
loope
insb
push
jle,pn
out
cmp
fsubl
dec
nop
cs
popa
rcrl
or
xor
int
push
rcrb
clc
mov
adc
mov
pop
andl
sbb
xchg
scas
jmp
test
push
push
cli
or
in
movsl
aas
jo
xor
repnz
mov
add
mov
ja
repnz
sub
adc
pusha
in
jns
clc
push
xchg
lock
xlat
aam
sar
imul
push
mov
inc
mov
cmp
xchg
aad
cmp
insb
sub
mov
sub
inc
test
insb
mov
call
in
popf
or
xor
sbb
xor
pop
push
sahf
sbb
js
mov
push
bound
xor
jb
push
add
fs
dec
sbb
fnsave
and
addr16
mov
rcl
in
dec
push
cmc
fstpl
mov
popa
push
sbb
xor
fldt
pop
cmpsb
ss
dec
jmp
pop
push
nop
dec
loop
cmp
pop
bound
sarl
movsb
sub
out
lahf
xchg
out
imul
xchg
leave
pop
outsb
jg
adc
ss
cmpsb
mov
pop
mov
mov
test
xchg
sti
add
lods
leave
loopne
mov
sub
fmulp
and
inc
dec
dec
jmp
pop
loopne
inc
mov
or
adc
pop
lret
mov
jnp
loop
scas
sub
dec
pop
mov
pushf
in
icebp
and
incb
sbb
rcrb
add
mov
dec
lcall
mov
fs
xor
adc
add
mov
pusha
test
fs
cmpsb
fdivrs
insb
cmp
scas
pop
mov
into
pop
jge
inc
inc
cmpsb
lds
mov
ret
rcll
sub
mov
cmpsb
mov
js
outsl
jno
sti
pop
insl
outsb
push
and
mov
shll
inc
fdivrl
cmp
mov
aas
inc
fisubs
sbb
xor
xchg
enter
xor
xor
lret
shll
sub
jg
cltd
lret
ror
pmuludq
xchg
lahf
inc
call
orb
or
mov
test
jae
aas
jmp
mov
into
jp
das
mov
dec
iret
pop
pmulhw
mov
inc
inc
sti
jmp
lret
cli
call
call
mov
pusha
jmp
lahf
pop
setns
mov
pusha
lea
push
mov
pop
bswap
cwtl
movzbw
mov
jmp
call
movw
jmp
setg
mov
call
stos
push
movsb
out
popf
fdivr
sub
jecxz
pop
inc
into
daa
mov
out
pop
scas
and
pop
cmpsb
ret
and
jo
in
mov
mov
mov
or
add
or
xchg
or
cmp
mov
in
mov
xchg
xchg
cmp
ror
add
test
push
lcall
or
imul
es
subl
cmp
gs
lds
pop
xor
push
mov
mov
lcall
pop
and
and
adc
imul
clc
inc
and
outsb
jmp
jmp
pushf
pusha
call
bswap
mov
pushf
mov
pushf
pushf
jmp
pushf
mov
pushl
mov
pushf
pushf
lea
je
lea
push
pushf
pushf
lea
jle
mov
movzbw
mov
jmp
jmp
xchg
push
pushl
ret
call
mov
push
movzbl
pushf
mov
pusha
pushf
mov
jmp
nop
movb
movb
pushf
mov
pushf
movsbw
movzbw
mov
mov
pushf
movb
pushf
movb
lea
pushf
pushf
push
mov
seto
jmp
pushf
lea
mov
call
jmp
lea
jmp
mov
mov
call
mov
call
jmp
jmp
call
xchg
pushf
pusha
pushf
pushf
pushl
ret
mov
push
jmp
mov
xchg
movb
movl
movb
movb
pushl
ret
pushf
pushl
mov
jmp
pusha
jmp
jmp
pusha
pushl
lea
call
pushf
movzbw
mov
lea
bswap
mov
call
mov
xchg
mov
pushl
ret
pushf
nop
call
call
push
movw
nop
jmp
jmp
movw
call
mov
lea
bswap
mov
jmp
mov
jg
push
pusha
mov
call
call
lea
lea
jne
xchg
push
mov
pusha
push
pushl
ret
pusha
xchg
not
pushf
mov
jmp
jmp
lea
mov
xchg
movw
push
pushl
ret
sbb
movzbl
lea
nop
movzbw
not
setne
pop
call
push
jmp
jmp
mov
movzbw
mov
jmp
push
pushl
push
mov
pushl
call
nop
call
pusha
call
lea
movb
pusha
pushf
mov
mov
call
lea
mov
push
call
jmp
pusha
call
pusha
pushf
mov
pushf
movl
mov
pushf
pushl
movb
movl
movb
movb
pushf
lea
jmp
not
pop
call
jmp
pushf
pushf
lea
push
pushl
pushl
pushl
xchg
pushl
movb
pushl
ret
bswap
movsbw
sets
nop
push
push
mov
mov
mov
call
lea
jmp
call
adc
fwait
dec
rcrb
mov
ja
jb
inc
or
mov
clc
out
jmp
fcmovb
in
fdivr
add
cmp
in
fwait
pop
inc
std
cmc
loop
cmpsb
sbb
pop
jecxz
loope
cli
add
cltd
sbb
inc
addb
push
je
inc
vmread
sub
xchg
das
imul
icebp
cmp
scas
in
lea
or
or
pop
xor
mov
xchg
push
sub
lea
cmpsb
add
adc
arpl
data16
in
imul
gs
sub
ljmp
test
lret
or
stos
pop
sub
aad
jb
adc
xlat
pop
mov
add
or
lea
cmp
mov
test
int3
mov
push
or
push
sbb
shlb
mov
push
mov
inc
mov
jnp
xlat
inc
cmc
cmpsl
out
jae
sbb
clc
push
jo
sub
dec
jo
inc
dec
icebp
jecxz
mov
pop
leave
into
dec
cmp
repnz
and
fwait
sub
xor
mov
or
ret
adc
xor
aad
ljmp
sbb
inc
jns
xchg
es
lahf
ljmp
push
imul
out
mov
mov
arpl
movsl
inc
test
jmp
shll
mulb
adc
sub
sub
or
adc
push
das
out
and
sub
out
enter
aaa
jnp
push
dec
mov
dec
xchg
les
or
repnz
mov
add
insl
fildll
jnp
inc
cmp
cli
das
xchg
stos
div
sub
dec
cli
jecxz
pop
fsubs
pop
and
data16
lahf
aam
paddd
out
jmp
mov
inc
lea
xor
hlt
mov
lds
lret
in
mov
jecxz
pop
sub
jecxz
sub
mov
in
jecxz
cltd
fnsave
es
xchg
movsb
or
push
addl
dec
pop
mov
and
shl
sub
loopne
lcall
shrb
mov
aaa
push
daa
fs
fadd
das
cmp
lret
imul
sub
dec
pop
movsl
ja
or
inc
dec
rclb
xchg
adc
lahf
pop
gs
imull
mov
add
mov
or
shr
xor
mov
leave
or
pop
xor
sarl
xchg
test
inc
or
xlat
jl
iret
push
lcall
jno
mov
or
jmp
ret
shll
int
cmp
repz
clc
shll
lahf
imul
stos
pop
jmp
dec
mov
pusha
stos
in
outsb
fwait
das
mov
lock
inc
sbb
pop
jo
dec
sbb
in
movsb
cmpsl
lret
jg
push
or
sbb
testb
lock
pop
les
jbe
mov
popa
ficompl
xor
dec
sbb
pop
loop
pop
test
out
pop
out
ret
imul
adc
dec
push
in
mov
mov
rol
fs
out
subb
shlb
inc
ja
pop
xor
lods
jnp
and
mov
mov
adc
sub
fisubrs
and
push
orb
or
adc
adc
mov
jle
mov
pop
xorl
lods
and
lcall
mov
add
or
adc
add
ret
sahf
icebp
aas
inc
cmpsb
mov
jmp
ja
jnp
lods
pop
sbb
leave
xor
add
iret
sub
hlt
shlb
pop
pop
test
xchg
pop
dec
adc
ret
and
cmpsb
pop
std
mov
fmuls
fcoms
sarl
sbb
sahf
mov
fwait
aad
fs
push
lret
push
adc
nop
pop
add
rcrb
cmpsb
sub
scas
push
mov
stos
mov
push
stos
stos
ljmp
jne
aaa
jg
push
popa
ja
dec
mov
cs
rorl
fmuls
fmul
adc
xlat
pop
repnz
arpl
jp
push
jecxz
cmc
xchg
ljmp
and
push
mov
fstps
dec
popa
cmp
cmc
mov
lods
jbe
push
movsb
mov
jp
xchg
ja
repnz
mov
cmp
mov
pop
stos
add
aad
stc
popf
stos
adc
mov
push
or
les
mov
cmpsb
lock
data16
sarb
mov
fwait
insl
in
xchg
movsl
mov
push
pushf
cwtl
into
mov
push
push
fidivl
loope
pop
xchg
faddl
mov
push
jae
mov
inc
test
sbb
loope
in
push
xchg
and
aam
add
in
out
mov
cmpsb
sub
cmp
dec
xchg
add
inc
sbb
mov
sub
fildll
mov
cmpl
loop
mov
cmp
xor
mov
pop
enter
pushf
xchg
push
inc
sub
and
pop
inc
mov
mov
imul
cli
mov
fucomp
inc
scas
cld
or
dec
mov
add
mov
jno
mov
pop
hlt
adc
xchg
loop
jp
inc
aas
ss
repz
sub
sub
fadd
xor
mov
sbbl
cltd
in
out
and
popf
inc
leave
jb
orb
sub
rorb
dec
xchg
int
lea
xchg
sarb
push
lahf
incl
lea
jns
jae
lea
stos
outsl
dec
test
inc
mov
xlat
test
add
pop
mov
xor
les
in
lods
mov
movsl
scas
and
ret
in
cmp
pop
mov
sbb
movsb
loopne
xchg
add
je
ret
out
xchg
loopne
std
mov
insl
cmpsl
fbstp
mov
neg
inc
in
sub
xor
inc
mov
daa
loope
lret
ljmp
fcmovbe
jns
sub
repnz
outsl
xchg
mov
xor
dec
push
or
test
xchg
les
cld
inc
jae
arpl
cwtl
adc
pop
cmp
outsl
bound
pop
out
and
inc
movsl
inc
movsb
or
pop
push
adc
test
cmp
jbe
hlt
popa
jns
and
out
cmp
cld
shrl
gs
sbb
jbe
add
cmp
fsubs
sbb
jp
xchg
xchg
xor
fisubs
dec
push
pop
jbe
fmull
add
js
fs
pusha
fiaddl
pop
movsl
or
add
imul
inc
sbb
dec
pushf
inc
xchg
movsl
fidivrs
loopne
xor
sub
fisttpll
push
dec
push
push
and
cmp
jg
fisttpl
fcomip
and
push
shlb
xor
rol
ja
stos
imul
fdivl
adc
xchg
repnz
pop
out
daa
mov
out
ja
push
mov
scas
pop
push
insl
clc
shll
mov
pop
repz
lret
das
mov
imul
adc
lods
loop
aam
bound
mov
xor
sub
jp
add
mov
arpl
sahf
mov
dec
sbb
inc
mov
cli
in
pusha
adcb
cmp
aad
scas
lcall
jne
popa
inc
and
stos
push
aad
aas
rorb
in
test
cmc
mov
pop
adc
in
ret
fidivl
pop
cmp
inc
imul
lret
idivl
pusha
mov
xchg
and
xlat
cmpsb
mov
sub
into
xor
fdivl
mov
in
pop
loopne
pushf
push
out
lock
or
sbb
and
mov
mov
xchg
or
mov
xchg
xchg
loopne
shrl
adc
xchg
ljmp
rcrb
dec
or
xlat
cwtl
xchg
push
movb
movb
mov
pushl
ret
lea
call
call
mov
xchg
movb
mov
pushl
ret
xchg
call
mov
lea
jl
lea
pusha
mov
xchg
pushl
movb
push
movb
pushl
ret
mov
call
pusha
push
jmp
call
movb
pushf
jmp
lea
pushl
push
xchg
movb
pushl
ret
jne
jbe
push
mov
movw
mov
jmp
movb
mov
jmp
nop
jmp
jmp
mov
pushf
pusha
lea
push
mov
call
bswap
lea
movzbw
nop
lea
pop
push
pushf
call
nop
jmp
xchg
pushf
movw
pushf
push
pushl
ret
xchg
movw
movl
mov
mov
pushl
ret
call
mov
mov
call
pusha
push
lea
pushf
xchg
pushf
pushl
pushf
pushl
ret
pusha
lea
pushf
movb
xchg
push
pushl
ret
not
movzbw
pushf
nop
movb
mov
pusha
mov
call
adc
push
inc
pop
cmpsl
bound
sub
add
mov
lods
bound
ja
push
add
out
mov
sbb
enter
jl
call
ret
outsb
loopne
adc
push
xchg
jecxz
push
add
outsb
roll
jnp,pn
push
or
sahf
out
xchg
xchg
sarl
or
jno
je
push
pop
mov
mov
push
xor
push
scas
xchg
mov
insl
bound
pop
pandn
add
in
imull
std
cli
pop
and
push
fdivp
sbb
jmp
loopne
sahf
imul
dec
inc
sbb
lahf
jp
mov
mov
xchg
inc
ja
adc
sarb
cwtl
mov
sahf
xlat
xor
aas
scas
test
mov
cld
dec
cwtl
cmp
xor
xchg
and
out
mov
add
add
pop
stos
inc
lock
xor
mov
movq
jge
in
cmovbe
lea
sub
cmp
and
push
adc
inc
aad
xchg
sub
xchg
mov
stos
nop
testl
mov
andb
or
or
mov
outsl
dec
cwtl
cmpsb
mov
imul
test
pop
jae
or
pop
in
outsb
mov
mov
loope
push
push
and
stos
push
cltd
add
dec
push
loop
ja
push
push
jg
mov
lods
lss
pop
iret
cmp
je
xor
cmpsl
hlt
inc
les
aam
loop
pop
ds
dec
mov
and
mov
sbb
lea
pop
xor
sbb
sub
popf
repnz
lods
add
mov
adc
pop
leave
jo
cmpsl
cmpsb
xchg
and
fildll
dec
and
inc
rcll
pushf
ljmp
adc
xor
sub
sub
test
push
lahf
and
jg
sbb
xchg
ljmp
sbb
mov
jg
pop
ja
push
cmp
inc
outsb
mov
inc
mov
popa
test
arpl
sub
inc
repz
imulb
inc
test
push
pop
cmp
adc
push
inc
or
adcb
push
and
shl
xlat
testb
mov
pusha
add
outsl
flds
cmp
xor
cmpsb
das
sarl
jge
pop
xchg
sbb
cmpsb
mov
sarb
repnz
mov
bound
jecxz
addr16
es
outsl
jbe
mov
lahf
jmp
dec
xchg
dec
jbe
push
dec
shrb
cs
stos
or
dec
int
rorl
jbe
daa
jno
push
rclb
add
inc
dec
mov
pusha
lcall
aad
adc
inc
out
insb
inc
sub
xor
test
aaa
mov
cmp
inc
push
adc
jecxz
adc
scas
pop
movsl
push
faddl
scas
mov
in
lret
cmp
add
aaa
mov
add
cmp
or
int
or
cltd
inc
inc
lods
adc
mov
sub
jbe
hlt
xor
jp
call
insl
xchg
movsl
loope
cmp
push
pushf
sbb
inc
stos
sub
int
idivb
movsb
or
sub
and
flds
popa
aam
push
mov
mov
jno
aaa
dec
mov
mov
and
sbb
les
int3
sbb
cld
dec
movsl
pop
push
ror
cwtl
add
xorl
iret
sbb
hlt
fiaddl
add
mov
lcall
lds
aad
and
mov
push
pop
lods
push
jo
mov
mov
and
rorl
push
mov
dec
inc
or
repnz
jnp
add
xchg
adc
cmp
pusha
push
sbb
sub
iret
mov
ljmp
sbb
mov
outsb
mov
push
popf
mov
pop
adc
xchg
adc
xorl
mov
mov
into
xchg
cli
lret
mov
out
xor
imul
pop
outsb
cmp
and
sbb
sbb
jmp
enter
sub
cltd
in
shlb
mov
arpl
dec
fisubs
fldenv
pop
call
stc
icebp
inc
lods
clc
pop
mov
jae
aad
ja
jnp
mov
xor
daa
sahf
mov
es
jbe
xchg
fwait
mov
pushf
fldt
mov
into
dec
pop
cwtl
into
adc
xchg
xor
xor
sub
cmc
inc
cltd
lods
xlat
mov
enter
fsts
pop
ss
and
cmovge
lock
mov
xor
and
sub
dec
cmpsl
clc
sub
mov
pop
adc
fmul
enter
cmpsl
test
add
fcom
and
movsb
loopne
js
fisubrl
mov
imul
push
inc
add
push
jecxz
loopne
adc
mov
push
mov
out
inc
or
xor
bswap
popa
xchg
push
daa
mov
dec
orb
push
lods
insb
mov
or
fcompl
into
xorb
or
sahf
addr16
into
nop
gs
dec
stos
xor
loop
popa
and
scas
cld
insb
mov
cmp
or
sbb
scas
testl
xlat
adc
inc
sarl
and
aad
test
pop
outsb
mov
push
pushf
pop
ja
cs
xor
fcmovbe
and
lea
dec
mov
inc
add
or
sub
or
inc
pushl
aaa
pop
fcmovbe
cmp
or
or
adc
sub
aaa
sub
fwait
dec
ret
call
dec
rorb
mov
xor
rorl
aam
jb
pop
les
cmp
pop
mov
lods
data16
and
dec
xchg
push
xchg
fwait
int
xchg
mov
rcrl
shlb
mov
testl
jb
rcr
daa
sbb
mov
pop
jo
in
cmp
dec
pop
adc
jne
sub
add
jb
mov
rolb
or
jecxz
ljmp
push
movsb
add
dec
inc
shrl
pop
stos
add
es
out
jo
shl
stc
push
outsl
cwtl
lcall
addr16
add
fbstp
int
inc
cmc
outsl
sbb
xor
sbbl
pushf
add
repnz
mov
and
jae
test
or
push
mov
inc
dec
sti
arpl
inc
int
dec
repz
cmpsl
dec
sbb
pop
stos
push
movsb
adc
ds
adc
or
daa
xchg
out
jge
dec
xchg
mov
jns
pushf
jno
loop
cmp
popa
stos
cwtl
decl
adc
and
in
and
dec
mov
int3
loop
lret
or
pop
arpl
mov
stos
pop
sbb
xlat
ret
push
cltd
sbb
fimuls
xor
icebp
pop
popa
jae
stos
dec
mov
sbb
scas
xor
rclb
xor
mov
loope
xchg
inc
adc
enter
in
dec
inc
xlat
je
push
shll
cwtl
and
mov
aaa
ficomps
mov
adc
mov
or
adc
enter
inc
sahf
and
jae
je
cmp
adc
fidivl
sbb
fidivs
mov
push
ret
dec
pop
xor
clc
dec
xor
jmp
and
xchg
jnp
xorl
sub
aaa
xchg
cli
sbb
jmp
pushf
lea
lea
jle
pushf
mov
pushl
xchg
mov
pusha
mov
pushl
ret
lea
jmp
pusha
pushf
pushf
movl
jmp
push
xchg
call
push
jmp
jmp
call
not
movzbw
movsbw
mov
pushf
push
pushl
mov
call
xchg
pushf
push
pushl
ret
pusha
call
nop
movl
jmp
mov
pushf
pushf
push
mov
call
xchg
pushf
pushl
ret
push
mov
bswap
setne
movsbw
mov
pushf
push
pushl
ret
jmp
mov
call
jp
nop
pushf
mov
mov
pusha
call
mov
lea
jle
lea
pusha
pusha
pushf
xchg
push
pushf
pushf
pushl
ret
pushl
call
mov
mov
not
movsbw
movsbw
push
lea
jmp
mov
jmp
movsbw
nop
bswap
movzbw
movzbw
call
pushl
jmp
jge
push
mov
inc
ljmp
add
aaa
aaa
out
pop
movsl
movsl
mov
pop
test
es
movmskps
stos
insb
mov
outsb
lea
aad
outsl
mov
pushf
in
gs
cltd
std
and
xchg
inc
xchg
or
stos
dec
fldcw
addr16
sub
sbb
add
cwtl
loopne
or
repnz
xchg
cltd
jns
cmp
cwtl
cmp
scas
inc
js
mov
push
scas
and
rcll
fistl
loope
pop
pop
inc
idivl
inc
xchg
stos
inc
iret
repz
inc
ret
sbb
cmp
andl
adc
jo
ud1
adc
gs
iret
loop
lods
ss
lret
or
push
sub
inc
lea
rol
cmp
inc
xchg
inc
jb
mov
push
inc
xchg
cmp
push
pop
nop
inc
negl
enter
rcl
push
mov
fisttpl
mov
pop
add
or
xchg
pop
call
adc
clc
ficomps
repz
testl
lret
mov
test
fcmovne
outsl
stos
pop
mov
scas
pop
lods
mov
dec
jo
test
sbb
lea
sub
pop
and
repnz
pop
insb
jne
dec
out
js
add
dec
sbb
mov
leave
jmp
mov
shrl
out
icebp
xor
popf
gs
jo
push
or
and
pusha
fistpl
jbe
fisttps
dec
sbb
imulb
inc
xchg
lods
add
push
sbb
dec
mov
sbbb
adc
add
xchg
filds
and
jle
loop
lods
cmp
or
cmp
or
xchg
bound
daa
mov
test
pusha
jp
and
fdivr
inc
mov
imul
inc
mov
clc
cmp
mov
add
and
xor
insl
mov
dec
jp
in
cmp
mov
pop
pushf
push
pusha
rcrb
test
lock
cmpsl
cmc
enter
imul
dec
data16
jmp
andl
imul
mov
clc
je
aaa
mov
dec
pusha
push
sub
lea
lret
lods
das
shlb
test
and
mov
gs
mov
and
decb
mov
pop
test
pop
push
in
add
xorb
xor
mov
adc
fistl
pop
jecxz
xor
es
insb
ds
insl
je
lret
jne
xor
aas
pop
push
pop
dec
les
repz
push
les
and
xor
mov
nop
mov
data16
mov
les
daa
and
icebp
fmuls
xor
adcb
data16
jno
xchg
inc
xchg
aaa
xorb
loop
ficoms
add
cltd
adc
dec
cmp
dec
aad
cmpb
jecxz
dec
xchg
mov
push
inc
dec
cld
xor
jg
jnp
push
mov
inc
pop
jge
call
and
or
sub
cli
push
jmp
pop
bound
enter
dec
mov
xor
ds
daa
test
cs
lcall
stos
mov
test
inc
fisubrl
cwtl
adc
lods
subb
jbe
mov
mov
push
idivb
movsl
outsl
neg
clc
xlat
dec
xchg
xchg
mov
xchg
pushf
sbb
insl
mov
xchg
ret
jge
iret
adc
xchg
jge
mov
mov
pop
dec
stos
jecxz
cli
or
shll
into
sbb
test
pop
adc
and
dec
mov
nop
xchg
imul
jb
scas
imul
mov
jle
mov
fadds
fwait
dec
cwtl
cmp
push
sti
repz
fnstenv
loop
lods
aaa
js
sahf
mov
lds
xchg
cs
lcall
jae
outsl
or
lahf
mov
icebp
cmpsl
jmp
fsubrp
mov
dec
adc
pusha
scas
daa
popa
mov
xor
or
jg
mov
jle
inc
ret
or
push
adc
mov
insb
sbb
mov
je
ljmp
stos
jg
cli
jp
out
mov
mov
mov
dec
and
xor
mov
dec
pop
fldt
xchg
addr16
inc
mov
inc
pusha
add
ja
jns
lret
in
stos
pop
call
ja
mov
mov
iret
inc
mov
inc
arpl
xor
lret
in
lea
jnp
cld
inc
mov
lds
add
inc
das
imul
rclb
jns
push
mov
push
rorb
arpl
daa
sub
repz
sbb
stos
add
jb
pop
pop
xorb
aam
mov
adc
xchg
clc
adcb
and
stos
mov
mov
xor
repnz
outsb
xchg
out
in
cld
stos
jb
cmpsb
out
movsb
xor
xor
ret
std
leave
and
bound
jle
lahf
hlt
pop
pop
pop
out
add
test
and
adc
ss
add
xchg
fldenv
cmpsb
mov
idiv
test
jmp
adc
mov
mov
and
imul
xlat
cmpsl
or
jns
xor
pusha
cmc
mov
mov
dec
aad
shll
sbb
and
xor
clc
push
dec
mov
mov
jns
in
cmp
and
xor
push
sbb
xor
push
cmp
adc
out
leave
adc
fildll
in
scas
popf
jno
int
das
jo
sahf
in
lods
mov
jbe
jnp
ss
pusha
lods
and
xor
in
lock
mov
adc
in
repz
cmp
call
sub
scas
and
add
ja
push
push
popf
push
popf
popa
mov
jno
aad
sti
or
cmpsb
enter
xor
push
loop
imul
cmp
mov
xor
cltd
inc
jb
push
sub
xchg
jo
stos
rclb
dec
push
inc
fistpll
popa
inc
dec
mov
lds
xchg
lret
mov
mov
jmp
sahf
movsb
xchg
mov
pushl
enter
inc
mov
repnz
lds
shll
mov
pop
xchg
popa
cwtl
gs
js
icebp
cld
ret
das
mov
sbb
or
iret
loopne
es
dec
fcmovnb
adc
hlt
jno
jcxz
mov
cmp
lock
jno
les
cli
arpl
mov
pop
cltd
popfw
out
sbb
fistpl
and
popf
adc
dec
xor
pop
out
lods
movsb
and
add
stos
dec
jae
push
aam
dec
xor
fldcw
fisttpll
std
inc
pushf
sahf
mov
in
push
pop
stos
xor
roll
mov
jmp
jl
sub
sub
mov
cmp
addb
xor
jmp
lahf
jno
lods
idiv
adc
cwtl
iret
int
jne
out
lret
int
pushf
and
scas
bound
sti
addr16
push
adc
dec
in
xor
sbb
fwait
push
inc
adc
sahf
cmc
push
jmp
lahf
jno
shlb
lret
aaa
cltd
push
push
or
mov
pusha
mov
mov
cmp
xor
subl
int
or
pop
in
into
xor
ljmp
mov
nop
push
pusha
mov
and
push
cltd
xor
push
in
insl
clc
mov
push
js
push
push
dec
inc
and
and
pusha
push
pushf
pushf
pushl
ret
push
mov
setle
movzbw
movsbw
mov
jmp
lea
jmp
movsbw
nop
seta
movzbw
movzbw
movzbw
mov
pusha
pushl
jmp
jmp
mov
lea
je
pusha
push
lea
push
mov
jmp
pop
cmc
adc
pop
and
mov
stc
sub
int3
sbb
and
push
xchg
jmp
push
jge
push
add
repz
sahf
into
and
pop
pop
sub
push
cs
xlat
cmc
inc
test
dec
pop
inc
mov
cmc
pop
pop
dec
add
and
sbb
jnp
lcall
xchg
cmp
xchg
jnp
and
sub
sub
cltd
pop
loop
adc
jb
sbb
mov
sub
bound
xchg
cmp
mov
mov
dec
dec
fs
flds
lds
ss
lock
sbb
mov
lret
xchg
cmp
mov
scas
xor
or
jecxz
push
nop
jmp
pusha
pusha
nop
movw
lea
jo
push
pushf
call
movzbw
call
mov
call
push
lea
push
push
push
jmp
push
nop
push
call
pushf
pushf
mov
jmp
movl
mov
pushl
call
bswap
movzbl
bswap
mov
mov
movl
lea
pushf
mov
jmp
pushf
xchg
mov
pushl
ret
pusha
nop
push
pushf
pushl
xchg
setg
mov
pushf
lea
mov
call
lea
jmp
pop
jmp
call
call
jmp
mov
xchg
pushf
movb
pushl
ret
jmp
movsbw
movzbw
mov
movw
mov
jmp
call
jmp
not
mov
pushf
push
pushf
xchg
call
lea
pushf
jmp
pushf
lea
mov
pushl
mov
xchg
pushf
pushl
ret
xchg
pusha
movzbw
jmp
mov
call
xchg
push
pushl
push
push
pushl
ret
mov
movl
lea
push
pushl
xchg
push
mov
pushl
ret
lea
jmp
jmp
sti
push
lods
fdivrp
loope
into
repnz
sbb
scas
cmc
jae
add
add
add
jno
and
mov
jnp
imul
jns
pushw
rcr
xchg
inc
inc
cmp
cmp
mov
mov
aaa
mov
adc
mov
out
in
push
iret
lcall
fwait
lahf
sti
mov
jg
jge
rolb
scas
and
std
add
add
add
fcompl
adc
mov
bswap
pushf
cltd
xchg
adc
sub
inc
adc
sti
xor
push
and
outsl
jae
jo
andnps
dec
mov
pop
daa
mov
mov
xchg
pusha
push
and
sbb
out
pop
pop
xor
imul
icebp
icebp
xchg
and
into
movsl
mov
push
maxps
dec
popf
ffree
std
fwait
cli
push
adc
aas
dec
repz
cmpsb
mov
or
push
xor
stc
jmp
push
ljmp
jns
in
adc
mov
pop
arpl
idivb
push
jmp
lock
test
sbb
dec
rcrb
iret
loop
pop
flds
sub
mov
add
sub
nop
ret
mov
xchg
lret
sub
mov
mov
leave
mov
scas
xor
jo
jmp
push
sarb
push
pop
sbb
in
decl
int
in
jle
push
lret
add
mov
and
out
xor
cli
mov
test
pop
jle
cli
test
sbb
dec
sub
mov
xchg
aam
pusha
mov
das
jp
sub
test
lds
aaa
lods
jns
sub
mov
popf
lahf
and
mov
push
ror
add
imul
mov
push
in
and
mov
add
sahf
test
mov
cmp
fdivrp
adc
mov
pop
cmpsb
jne
jno
fidivrl
jl
push
push
sti
enter
push
and
or
sub
xor
add
test
ljmp
nop
dec
adc
leave
xchg
inc
and
rcrb
clc
and
sub
inc
jecxz
push
pop
repnz
movsb
sbb
mov
lret
imul
inc
mov
adc
fistpll
add
popf
call
sbb
jl
and
xor
orl
fiaddl
std
cmp
mov
ljmp
stos
in
sub
lods
mov
fidivrl
mov
daa
popa
test
sbb
fcmovbe
or
mov
xchg
ret
arpl
push
sub
mov
mov
js
repz
imul
out
and
cmp
sahf
popf
movsl
cs
js
dec
enter
jo
xor
mov
push
sub
mov
cmp
fs
sbb
test
or
jg
pop
push
ljmp
xor
jmp
push
call
lahf
push
adc
in
sbb
sbb
out
push
jmp
add
xchg
int
mov
call
push
or
icebp
jecxz
pop
call
mov
nop
hlt
les
adc
neg
dec
xchg
push
bound
shlb
jp
dec
and
test
stos
std
mov
xchg
repnz
jle
mov
inc
sbb
and
and
insl
out
jmp
cmp
ljmp
pop
sarb
test
das
cmpsl
cmc
js
adc
insb
pop
xor
aas
sub
bound
into
sbb
and
dec
add
negl
xchg
sub
pop
movb
ljmp
aad
lea
mov
mov
mov
adc
cmp
fimuls
fwait
jmp
mov
pushf
mov
movl
jmp
seta
nop
movzbw
mov
setnp
pop
pusha
mov
mov
pusha
xchg
movb
movw
xchg
pushl
movb
mov
movw
jmp
pusha
lea
push
movb
push
mov
pushf
jmp
mov
call
mov
jmp
pusha
pushf
xchg
pushf
mov
mov
pushf
call
xchg
call
mov
call
mov
jmp
movb
mov
push
lea
pushf
pushf
xchg
movb
movw
pushl
pushl
ret
mov
pushf
jmp
bswap
push
nop
movsbl
not
mov
pusha
movb
pushf
push
xchg
jmp
lea
call
call
xchg
movzbl
bswap
pop
bswap
mov
push
pushf
movb
mov
call
lea
push
xchg
push
pushf
pushl
ret
lea
movl
pushf
mov
not
movsbw
mov
pusha
pushf
mov
movb
jmp
pusha
not
not
nop
bswap
setp
pushf
setbe
mov
push
call
push
call
mov
lea
jmp
xor
call
jmp
xchg
push
pusha
pushf
pushl
ret
push
nop
call
push
lea
call
xor
pushf
xor
test
xorl
clc
test
xor
cmc
stc
xor
movb
xor
stc
xor
bt
xor
call
mov
xchg
mov
movb
pushl
ret
call
jmp
pushl
mov
call
nop
pushf
jmp
pushf
xchg
mov
mov
call
pusha
push
xchg
pushf
push
pushf
xchg
mov
push
mov
mov
push
call
lea
js
mov
pushf
pushf
movb
call
movzbw
mov
jmp
pushf
pushl
mov
call
lea
nop
jmp
jmp
call
lea
jmp
lea
call
mov
jmp
movb
lea
jmp
jmp
pusha
xchg
jmp
push
pushf
pushf
popl
jmp
pop
xchg
pop
bswap
mov
jmp
lea
call
movb
pusha
nop
pushf
pushf
jmp
lea
mov
mov
pushl
not
call
pusha
xchg
movsbw
pop
mov
push
pushf
pushf
call
jmp
das
xor
pop
xchg
in
arpl
lds
lds
pop
cmp
xor
sub
out
and
push
pop
mov
stos
mov
pop
jno
imul
fs
sbb
cmp
pop
aas
pop
test
inc
dec
les
lock
push
xchg
nop
outsl
pop
aas
push
outsb
pop
sub
inc
push
pop
loop
lds
jp
das
mov
cmpsb
subl
add
xor
int3
ret
or
pusha
add
and
jmp
aas
loop
imul
scas
xchg
pop
repz
loope
call
mov
hlt
inc
test
mov
es
jo
and
pop
push
mov
jb
out
cwtl
lret
xchg
shll
out
pop
mov
scas
in
int
adc
fwait
jno
push
cmpsb
cmpsb
loope
into
push
clc
cltd
push
jb
add
arpl
jo
dec
inc
int
mov
mov
lahf
hlt
in
jns
xchg
jecxz
rorb
sub
jmp
or
dec
push
pusha
aas
xor
mov
mov
jp
stos
lret
insb
es
out
out
dec
mov
cs
iret
push
push
xchg
xchg
mov
mov
data16
inc
iret
out
cmp
adc
inc
xchg
not
testl
push
sbb
mov
inc
cmpsb
stos
stos
sbb
testl
out
cs
push
jle
pop
rolb
loop
sub
mov
lods
jns
std
in
fwait
xchg
add
gs
fistpl
push
addr16
jbe
icebp
inc
xchg
cmc
das
jp
sub
repz
inc
pop
pop
movsb
cmp
pop
mov
xchg
sbb
dec
sbb
and
cmp
es
pop
mull
xor
dec
xor
scas
cmc
sub
sti
out
scas
push
dec
imul
cwtl
daa
push
imul
stc
outsl
lret
push
and
cmp
xchg
fisttpll
mov
and
stos
into
push
jmp
adc
jne
verw
jp
mov
in
imul
insb
in
sub
stos
clc
push
sahf
pop
mov
aaa
mov
sbb
push
dec
and
movl
cli
lds
mov
es
cmc
std
push
shrl
and
cmp
jmp
xor
iret
call
icebp
cmpsl
mov
fcomip
enter
sub
jb
sub
or
out
pop
insl
cli
adc
out
xchg
mov
and
inc
mov
mov
ds
bound
pop
fs
mov
or
adc
lret
sub
lock
mov
in
stc
rep
into
cmp
insl
insl
cmp
fsubrs
cmpsl
test
jbe
fyl2x
out
pop
pop
push
cs
pop
aam
jmp
sbb
mov
adc
push
nop
pop
xchg
pop
rcrl
dec
push
inc
es
xchg
icebp
insl
dec
and
lret
rcrb
fnstcw
sub
aaa
stc
ret
push
mov
ljmp
xchg
pop
aas
jns
jge
lods
dec
lcall
pop
inc
nop
inc
pop
fadd
testl
decl
movsl
jo
mov
arpl
sbb
lods
rcr
mov
faddl
sub
jo
push
and
gs
xchg
mov
push
pop
sar
leave
push
movsl
repz
cltd
cltd
decb
pop
rcr
in
ljmp
aaa
lahf
in
std
stos
or
leave
sbb
xlat
mov
cmp
mov
test
mov
aaa
mov
dec
adc
ss
aas
and
cmp
scas
xlat
xchg
sbb
jo
adc
inc
mov
stos
in
sub
pop
jno
mov
pmulhw
inc
dec
fwait
imul
adc
pop
out
loop
stos
pop
jae
nop
mov
jns
test
out
cmp
sub
fnsave
or
xor
aad
add
pop
fcomp
test
jno
lods
mov
pusha
jo
cld
dec
cmpsb
jecxz
dec
mov
push
orl
mov
in
mov
pop
jb
mov
int
into
adc
aas
sahf
rolb
or
scas
push
and
adc
dec
and
pop
cmp
data16
mov
into
loope
lods
ret
in
mov
cld
adc
int
cmp
add
arpl
aas
or
out
and
pop
jle
push
movsl
jne
ret
imulb
cmp
test
mov
push
daa
dec
mov
shlb
les
or
jne
pop
jl
aad
inc
int3
mov
jae
mov
nop
outsb
xor
dec
pop
mov
test
mov
cld
stc
pop
lret
in
out
fimull
lret
data16
jnp
sub
push
pushf
xchg
cmpsb
test
in
repnz
jle
adc
push
loope
pop
mov
jecxz
les
pop
pushf
cbtw
add
sbb
push
jbe
mov
iret
mov
sub
fdivl
inc
adc
insb
cmpsb
lock
fistps
in
stos
ja
jae
pop
cwtl
push
shll
pop
loop
dec
xchg
in
push
cmp
inc
or
pop
stc
push
das
imul
scas
dec
enter
insl
dec
pop
dec
xchg
test
mov
das
andb
fstl
gs
jmp
mov
jmp
jno
xchg
and
pop
call
lds
cmp
push
jl
pop
mov
test
addl
and
sbb
sbb
fwait
aas
cli
jg
daa
hlt
fnstenv
dec
mov
sub
aam
cwtl
int
push
xor
xchg
into
repnz
imul
dec
mov
outsl
gs
push
mov
cld
mov
cmp
adc
inc
xchg
jmp
out
mov
mov
cmpsb
jmp
stos
pop
cmpsb
inc
mov
out
stos
mov
jne
xor
test
sbb
sub
test
jnp
jns
cwtl
jns
mov
dec
fcomi
sbb
cmp
jl
mull
sub
mov
rcr
ljmp
jo
imul
rclb
jns
mov
in
mov
push
cs
xor
pop
mov
mov
pop
dec
enter
pushf
or
xchg
jmp
ret
jmp
dec
jno
inc
xchg
aaa
scas
sub
xchg
repnz
inc
cwtl
loop
jno
jns
sbb
dec
sbb
test
push
cwtl
fisttpll
cmp
insl
jo
sbb
test
xchg
inc
mov
imul
inc
dec
sbb
add
repz
fisubl
sarb
pusha
pop
notl
leave
mov
cmp
jmp
es
cmpsl
mov
mov
rcr
push
dec
repz
scas
sub
pop
push
or
xorb
cltd
pop
pop
loopne
es
shr
and
sbb
jae
pop
jg
call
mov
pop
scas
sub
frstor
repz
mov
hlt
cmpsb
hlt
jne
xchg
cli
push
shr
loopne
out
push
fistl
add
aam
mov
lea
mov
lea
jnp
push
push
push
mov
jmp
lea
jae
pusha
pusha
mov
pushf
call
lea
pusha
jmp
xchg
push
mov
movb
pushf
pushl
ret
pusha
mov
lea
pushf
jmp
pushf
call
mov
pop
pop
mov
call
pushf
lea
call
xchg
pushl
movb
pushl
ret
lahf
pop
push
or
arpl
insb
and
mov
movzbl
pushl
bswap
pushf
mov
call
mov
seta
mov
mov
pusha
pushf
mov
call
pushf
push
movl
xchg
movw
push
pushl
ret
xchg
pusha
pushf
jmp
rorl
mov
xchg
push
jmp
pushl
pushf
call
pushf
nop
mov
mov
xchg
pushl
mov
mov
xchg
bswap
bswap
movzbw
mov
not
push
xchg
mov
call
mov
call
lea
push
movl
movb
mov
movsbw
pushf
mov
lea
jl
pushf
mov
pusha
push
movl
lea
mov
pushf
xchg
push
push
pushf
pushl
ret
pusha
mov
not
mov
push
pushf
mov
call
pushf
jmp
push
pop
mov
lea
push
mov
movzbw
lea
call
lea
pushl
xchg
pushf
pushf
pushl
ret
push
pushf
call
movw
call
jmp
call
pushf
mov
pop
mov
push
pushf
call
jmp
push
jmp
pusha
jmp
jmp
push
pusha
mov
lea
push
pushf
pushf
mov
pushf
jmp
pushl
call
mov
lahf
lea
lahf
mov
jmp
jmp
call
lea
jmp
nop
pushf
setne
mov
pushf
movb
push
call
aaa
xor
ljmp
cmpl
nop
jmp
call
pushf
pushf
popl
pushf
cmp
xor
jmp
mov
xchg
push
pushl
ret
mov
lea
mov
call
call
pushf
jmp
push
lea
mov
jmp
pushf
mov
nop
jmp
xor
bt
xor
test
bt
xor
cmp
xor
push
call
movb
jmp
jmp
mov
jmp
pushf
pushf
jmp
push
mov
cwtl
movb
mov
call
pushf
lea
mov
call
mov
lea
jnp
push
xchg
jmp
pusha
push
pushf
popl
stc
stc
xor
test
push
xorl
jmp
pushf
pushf
movl
pushf
pusha
movl
pusha
movw
mov
lea
jmp
nop
movzbl
jmp
push
pusha
pushl
push
lea
call
lea
jmp
pushf
jmp
push
xchg
push
pushl
ret
xor
stc
pushl
popf
pushl
movw
pushl
ret
not
pop
nop
push
mov
jmp
call
call
nop
pushf
call
xchg
call
xchg
movl
pushl
ret
call
movsbw
setnp
mov
lea
jnp
lea
call
xchg
pushl
pushf
pushl
pushl
ret
lea
pushf
mov
pushf
push
xchg
pushf
mov
pushl
ret
jmp
mov
push
mov
jmp
setge
movzbl
movsbw
nop
sete
pop
pushf
pushf
pushf
pusha
xchg
pushf
jmp
mov
jmp
call
lea
pushf
pushf
pushl
ret
push
mov
call
jmp
xchg
movb
pushf
mov
pushl
pushl
ret
xchg
pusha
movb
mov
push
mov
movsbl
pushf
mov
call
mov
movl
pushf
lea
push
call
not
lea
mov
nop
bswap
not
pushf
mov
call
pushf
jmp
jmp
nop
movb
mov
call
jmp
xchg
push
pushf
movb
pushl
pushl
ret
movsbw
cwtl
mov
jmp
lea
jne
xchg
pusha
push
call
movsbw
pushf
nop
not
not
movzbw
jmp
movsbw
mov
pop
jmp
not
mov
pushl
jmp
push
push
mov
push
lea
call
nop
pusha
call
xchg
movzbl
movb
pusha
mov
pushl
call
pusha
movl
pusha
jmp
sub
jp
fdivrp
out
cmp
cs
xchg
mov
xchg
pop
test
divl
pop
pandn
aas
psrad
sarb
icebp
hlt
mov
pop
sub
lea
loope
xor
inc
pop
lret
std
or
insb
mov
jns
ret
jo
mov
aas
lock
imul
sbb
mov
dec
cltd
scas
popf
lcall
int
js
sahf
lahf
lds
xchg
loop
mov
out
and
cmc
xchg
pop
mov
cld
inc
mov
jmp
cmp
sbb
cmpsl
scas
pushf
pop
xorb
mov
mov
aas
add
dec
pop
notl
adc
push
adc
icebp
ror
adc
xchg
cwtl
lret
out
mov
adc
adc
and
inc
cmp
aam
pop
push
cmp
xchg
adc
lahf
xchg
sub
push
stos
mov
aas
ds
ja
add
cwtl
sahf
inc
pop
shlb
popa
push
mov
in
mov
test
dec
in
out
stc
cmpsb
pop
mov
or
push
cmp
push
xor
push
cs
mov
lahf
repz
push
push
inc
or
lret
orb
or
sbb
lods
ja
pop
or
mov
cmp
fst
frstor
mov
setns
popa
pop
rol
sub
mov
jg
mov
cmp
pop
pushf
mov
xlat
enter
cmp
jg
fxam
addr16
xchg
ja
pop
push
dec
adc
arpl
test
and
and
pop
jp
shr
rorl
stos
testl
xchg
mov
push
jno
sub
popa
lods
xchg
popa
into
enter
inc
data16
adc
ja
ljmp
jp
pop
inc
in
sub
pop
mov
adc
or
cmpsb
jmp
inc
push
divb
stc
mov
ds
push
mov
inc
fadd
sti
pop
daa
std
xor
push
clc
cltd
mov
stos
aaa
jl
jne
loope
fwait
jno
or
cli
mov
mov
jle
bound
dec
in
rorl
inc
xchg
push
pop
repnz
sbb
test
je
mov
inc
or
sub
adc
adc
lea
and
push
push
ss
lods
push
and
sahf
pop
mov
jno
cmpsb
add
adcl
adc
rcrl
and
jae
paddusw
frstor
ret
mov
xor
jmp
jns
les
loope
pop
add
add
repnz
orl
ja
mov
bound
call
add
enter
ret
test
sub
mov
pop
or
inc
cltd
icebp
mov
push
aad
rcrl
out
cli
cs
rol
sub
mov
push
push
str
mov
ds
sub
mull
loop
fwait
insb
pop
outsb
jmp
mov
add
out
stc
ret
push
mov
out
or
lea
popa
test
jge
test
dec
popa
sub
pop
pop
inc
aaa
dec
mov
and
aaa
add
ja
mov
dec
daa
add
popf
pop
data16
stc
or
and
pop
fwait
aad
test
rolb
cwtl
mov
outsb
mov
movsb
push
jne
mov
push
loope
xchg
lcall
add
inc
or
popa
ret
out
or
pusha
test
xchg
movsl
or
orb
pop
xor
and
sub
mov
and
mov
int
aad
lcall
popa
icebp
cld
das
mov
sbb
data16
adc
cs
shl
lcall
mov
mov
pop
mov
idivl
cmp
pop
loop
pop
pop
jne
shll
dec
aas
icebp
cmp
pushf
jp
divps
in
xchg
aad
int3
xchg
jnp
mov
adc
cmc
mov
test
cltd
mov
jbe
xor
aad
out
fidivl
lahf
and
push
pop
into
pop
or
ljmp
mov
mov
sbb
lea
bound
cmp
out
icebp
in
ret
aam
lret
fstps
es
push
adc
inc
cld
mov
push
mov
inc
mov
repnz
dec
jnp
jle
lods
pop
pop
dec
int3
mov
xchg
push
sub
pop
xor
xor
test
das
pop
dec
cmpsl
repnz
andnps
idivl
popl
in
fidivs
jno
mov
or
sti
lds
xchg
inc
cld
out
fsubs
and
push
mov
lahf
xor
popa
push
fwait
idivb
xchg
cmc
lock
lea
add
pop
dec
sbb
popf
mov
fsubs
xchg
mov
in
push
lahf
mov
mov
pop
fmul
adc
or
das
mov
jnp
cmp
call
add
icebp
lahf
mov
in
sbb
inc
das
adc
xor
repnz
push
mov
inc
movntps
or
jbe
add
imul
fcompp
or
dec
xchg
or
ds
std
in
push
fbld
dec
or
push
cmp
loope
stos
mov
repz
stc
out
les
inc
sbb
push
sub
adc
jne
add
push
pushf
fxtract
push
mov
mov
jecxz
icebp
sbb
std
cld
rorl
test
jg
adc
mov
adc
push
leave
std
dec
fildll
stos
divb
lods
inc
nop
into
xchg
and
xchg
add
xor
mov
jge
dec
cmp
jo
sbbl
sub
mov
pop
stos
gs
sub
xlat
sbb
push
sbb
cmp
in
shl
jmp
stos
cmp
adc
push
xchg
test
sbb
sub
in
sbb
jnp
xchg
sub
stos
fwait
movsl
push
push
popf
mov
iret
js
ds
repz
add
jns
pop
sub
jnp
stos
mov
xor
lret
pop
popf
push
ds
mov
sarb
mov
daa
popl
push
inc
add
jo
idivl
mov
mov
or
adc
fsubs
jae
and
pop
xor
repnz
stc
xchg
daa
pop
into
push
dec
inc
pop
xor
cmp
out
xchg
mov
xor
out
adc
insl
out
adc
pop
dec
xchg
jmp
jmp
call
xchg
cltd
enter
ret
std
jp
xchg
add
xchg
ret
je
filds
and
mov
les
or
mov
pop
ds
sbb
pop
sbb
pop
xlat
scas
add
ljmp
add
inc
imul
adc
out
fildll
shrl
cvtps2pd
clc
test
mov
lret
pushl
add
mov
imul
mov
out
addr16
mov
lods
stos
pop
xchg
inc
roll
cmp
movsb
popf
push
mov
xlat
push
sub
add
xchg
into
pushw
add
outsl
and
js
xchg
insl
push
inc
rclb
push
and
insl
push
ffree
lret
jne
lret
fs
roll
sub
neg
pop
jecxz
jb
lcall
js
leave
lret
dec
mov
sbb
xor
or
and
xchg
and
and
icebp
cltd
push
mov
push
pop
fisttpl
out
push
leave
popf
or
js
inc
and
neg
jmp
dec
ja
cmp
sbb
adc
jge
roll
aam
adc
call
lea
mov
pusha
movb
push
xchg
push
push
push
pushl
ret
pushf
call
pushf
lea
jmp
mov
jmp
movb
lea
movl
call
lea
pushf
movl
xchg
movb
push
mov
pushl
pushl
ret
lea
jp
lea
pushf
pushf
push
xchg
pushf
pusha
pushl
ret
movb
xchg
pushf
push
push
mov
pushl
ret
mov
jmp
mov
call
push
jmp
lea
push
call
push
mov
call
pushl
push
mov
lea
jmp
call
xchg
movb
pushf
pushf
mov
pushl
ret
lea
mov
pusha
not
pusha
lea
bswap
jmp
call
lea
pushf
xchg
movl
pushl
ret
pushf
lea
push
mov
not
movzbw
mov
pusha
mov
push
jmp
push
pushf
jmp
pushl
movw
lea
pushf
jmp
jmp
pusha
jmp
mov
bswap
nop
movsbw
pop
push
pusha
xchg
jmp
movsbw
mov
pushl
pushl
mov
push
lea
movb
pusha
call
pushl
mov
pushf
lea
mov
pushl
call
pusha
lea
mov
call
call
mov
call
movsbw
mov
pushl
call
jmp
push
call
xchg
call
lea
mov
jmp
mov
pushf
lea
call
lea
jmp
mov
pushl
jmp
lea
call
mov
lea
pushf
xchg
pushl
pushl
ret
jmp
movb
pushl
mov
not
pusha
mov
push
pushl
movb
lea
jmp
xchg
mov
pushl
mov
pushl
ret
jmp
pop
lea
pushf
mov
pushl
call
pusha
call
lea
jmp
mov
lea
mov
mov
movsbw
pop
mov
call
mov
not
pusha
not
lahf
mov
jmp
call
pushf
movb
nop
jmp
mov
call
setg
mov
movb
jmp
pusha
pushf
pushf
xchg
pushf
push
push
pushl
ret
call
lea
mov
mov
movb
mov
jmp
call
not
movzbw
mov
call
movzbw
movsbw
mov
nop
jmp
mov
jmp
jmp
bswap
lea
mov
jmp
call
pushl
movl
lea
pushf
push
call
pusha
call
mov
mov
call
pushf
jmp
mov
movzbw
push
mov
jmp
jae
pusha
mov
je
fdivrp
icebp
cmp
lcall
pop
popf
push
hlt
dec
lea
mov
lea
inc
and
fnstsw
inc
sub
dec
mov
mov
mov
pop
loopne
fisttpl
inc
or
movsl
pop
add
jns
mov
mov
mov
and
pushf
lahf
pop
push
gs
xchg
adc
in
xlat
movsb
xor
les
sbb
cmpsl
lods
pop
or
inc
out
xchg
inc
mov
cmp
ret
mov
repnz
mov
shlb
add
call
mov
orb
inc
push
mov
jnp
lea
repz
enter
push
pop
mov
out
movsl
push
lcall
and
out
adc
mov
cmp
and
add
push
cmp
sub
pushl
into
insl
aad
fwait
dec
or
sub
pop
jmp
ror
push
or
repz
mov
or
enter
adc
adc
xor
jmp
nop
push
cld
scas
cmp
in
cs
mov
es
adc
shll
push
or
mov
mov
out
fcmovnu
jb
les
add
insb
xor
sub
xchg
xlat
gs
mov
dec
sbb
leave
sti
push
and
sbb
sbb
cltd
popa
sub
xchg
sarl
add
fldcw
inc
xchg
enter
jno
push
fsubs
mov
mov
js
inc
ret
mov
into
xchg
jno
mov
in
jns
lret
xchg
pop
scas
or
lcall
lods
mov
xor
push
add
fldenv
cwtl
add
jp
movsl
inc
cld
sbb
jg
jo
mov
pop
clc
xchg
stc
movsb
ss
sbb
mov
out
daa
iret
sbb
jmp
sub
adc
add
movsb
and
cli
lods
test
jp
jbe
ret
push
dec
mov
xchg
xor
mov
mov
mov
fldt
fsubs
mov
and
and
stos
fldcw
subb
pushf
cmp
call
mov
inc
push
inc
out
fsubs
gs
testl
or
loopne
jecxz
inc
mov
jne
int
mov
jp
mov
xor
daa
lods
jecxz
xchg
das
outsb
xchg
lret
push
scas
scas
aam
lahf
push
repnz
pop
bound
xor
data16
cs
mov
fcomps
mov
jmp
in
rol
mov
xchg
mov
movsb
mov
sub
ljmp
mov
sbb
mov
outsl
ljmp
ficomps
sbb
dec
cltd
rcrl
cld
mov
mov
pop
flds
pop
pushf
or
jbe
in
mov
sbb
add
mov
mov
lods
jae
insb
lods
xchg
bound
rorl
jmp
mov
ds
jle
xor
and
adc
test
roll
pop
mov
mov
mov
mov
daa
jno
cmp
out
xchg
dec
adc
lea
and
add
push
scas
test
cmpsl
jno
xchg
pop
jle
mov
push
mov
push
dec
sub
xchg
leave
insb
leave
add
lcall
mov
mov
xor
mov
mov
sbb
popa
addr16
aas
mov
and
push
lods
and
das
jbe
loopne
pop
and
mov
scas
call
jp
rcl
les
push
xor
pop
push
sahf
sbb
mov
mov
add
push
dec
xchg
sub
add
sub
stos
fstl
cmp
rorb
idivb
mov
or
jno
ja
pop
inc
nop
ficomps
popa
insb
mov
aaa
dec
dec
iret
cmp
add
mov
or
and
repnz
testb
xor
dec
cmp
and
inc
xchg
cwtl
bound
adc
into
cmp
jo
lret
jb
push
mov
adc
and
and
pop
xchg
dec
insb
push
sarb
lret
and
pop
jmp
jbe
inc
pshufw
sub
or
pop
mov
rcrb
dec
rolb
pop
xchg
xchg
pop
rcrb
push
aam
cmp
sbb
cmp
addr16
lcall
sbb
lods
popa
stc
push
iret
cmovae
movsl
or
fisttpll
stc
lds
or
or
adc
and
shlb
stos
sbb
cmp
popa
shll
sbb
jo
and
pop
rolb
inc
es
filds
add
jno
adc
inc
cli
add
adc
push
inc
sbb
adc
jp
in
testl
dec
adc
repnz
nop
mov
mov
loop
loope
inc
add
pop
inc
nop
fimull
inc
xor
out
fcoms
mov
es
and
aas
sub
xchg
pop
or
sub
inc
mov
push
ds
adc
xchg
sub
scas
mov
cwtl
and
clc
loop
cmpl
mov
or
mov
and
sub
sub
shr
fdivrs
in
mov
xor
mov
fisubs
loop
xor
xchg
xor
sbb
cltd
or
add
fsubl
push
stc
jecxz
jno
je
stos
jo
pop
dec
cmp
cli
rorb
jmp
loopne
iret
and
push
ss
xor
cld
fs
ret
ret
stos
mov
pop
mov
je
int3
xchg
push
mov
push
outsl
enter
push
imul
ret
fwait
leave
xor
in
pushf
std
das
clc
adc
movsl
xor
jae
push
cmp
jne
xor
cltd
icebp
xor
xchg
push
cmp
dec
gs
sti
sbb
addb
lret
xor
rcr
icebp
mov
aam
or
xor
out
xor
outsb
bound
lods
jp
test
fwait
arpl
pop
add
testb
add
mov
cs
mov
inc
or
mov
inc
sbb
sahf
dec
lock
inc
jecxz
std
dec
arpl
jp
rcrb
out
cmp
popf
stos
xchg
fisubrs
adc
xor
enter
daa
sub
jge
push
pop
push
pop
pusha
mov
pop
mov
rcrb
cld
jl
fnstsw
mov
cmp
or
daa
negb
pop
lret
jmp
push
xor
mov
xor
xor
cmp
xchg
testb
cwtl
pop
scas
jne
cmpsb
jnp
push
push
mov
jg
loope
add
push
rcl
fcmove
clc
push
mov
cmp
add
lods
lds
imul
enter
scas
jne
clc
jge
pop
icebp
fcmovnu
mov
ljmp
imul
cld
loopne
test
jecxz
dec
sub
push
loope
aaa
pop
js
pusha
outsb
cmp
pop
loopne
popa
dec
sti
dec
test
inc
push
lret
fs
pop
rclb
sbb
rcl
cmp
pushw
incl
xor
pop
dec
cmp
inc
add
push
inc
std
jmp
mov
jmp
cwtl
lahf
jmp
call
pop
mov
pusha
mov
pop
movw
call
jmp
pushf
mov
call
mov
mov
push
jmp
call
lea
pushf
movb
mov
movzbw
movsbw
mov
mov
push
pushl
pushf
push
mov
mov
push
call
push
nop
mov
mov
pushl
jmp
lea
pusha
pushl
mov
xchg
pushf
mov
pushl
ret
xchg
push
push
pushf
pushl
ret
pushl
pop
lea
bswap
mov
movw
not
mov
call
popf
aaa
sub
mov
pushf
pushf
lea
call
lea
jmp
mov
bswap
not
nop
cwtl
not
pop
pusha
xchg
pushf
xchg
movzbw
lea
jno
mov
pusha
call
jmp
xor
cmp
xorl
pusha
xor
bt
xor
pushf
xor
pushl
pushl
popf
mov
pushl
ret
mov
pushf
push
lea
jmp
call
push
lea
push
call
pop
jmp
mov
call
in
insl
pop
call
jmp
mov
lahf
movsbw
jmp
pusha
call
pushf
lea
push
xchg
pushf
pushf
movb
pushf
pushl
ret
sete
nop
pushf
mov
pushf
pushf
push
call
movw
mov
movl
pushf
mov
push
mov
lea
pusha
pushl
ret
pushf
push
mov
mov
lea
pushf
pusha
xchg
pushf
pushl
pushf
pushf
pushl
ret
jmp
pusha
mov
xchg
mov
pushl
ret
jmp
mov
lea
call
sbb
nop
mov
not
movzbl
pop
mov
pushl
pushf
movb
pushf
mov
jmp
pushf
pusha
jmp
lea
mov
jmp
mov
call
pusha
pusha
mov
push
pushf
call
lea
jmp
movb
lea
call
mov
lea
pushl
push
jmp
pushf
mov
pushf
call
dec
aas
sub
and
sbb
pushl
xchg
pusha
mov
call
mov
pushl
pushf
lea
call
jmp
mov
not
seto
pusha
mov
pushf
jmp
call
lea
jmp
mov
call
lea
mov
movb
lea
jp
push
xchg
pusha
pushf
push
pushl
ret
jmp
xchg
call
jmp
not
not
mov
pushf
pushf
lea
call
movw
jmp
mov
mov
jmp
setnp
mov
mov
call
pushf
xchg
push
pushl
lea
jo
push
movsbw
mov
pushf
mov
call
bswap
push
lea
pusha
nop
setle
movzbw
cwtl
mov
push
pushf
jmp
jmp
movsbw
mov
mov
movb
lea
jo
lea
jmp
push
pusha
nop
call
mov
mov
setp
movzbw
mov
mov
call
mov
push
mov
mov
mov
call
push
lea
movb
call
pusha
xchg
push
push
pushl
ret
jmp
push
jmp
mov
lahf
mov
jmp
push
xchg
pushf
push
pusha
pushl
ret
push
mov
jmp
xchg
push
pushl
ret
mov
pushf
movb
movb
mov
mov
pushf
lea
pushf
jmp
lea
jbe
mov
cwtl
setb
mov
call
lea
pop
pushf
call
pushf
mov
call
movb
jmp
pushf
call
mov
movl
pushf
lea
jmp
push
pushf
movb
pusha
lea
jmp
call
call
push
movb
pushf
lea
push
xchg
movb
pusha
pushl
mov
pushl
ret
mov
pushl
mov
lea
movsbl
bswap
pushf
mov
pushf
push
jmp
jmp
pusha
pushf
popl
bt
test
xor
jmp
push
pushf
popl
pushf
cmc
xor
stc
xorl
call
xchg
pushf
mov
pushf
mov
pushl
ret
mov
pushf
push
mov
xchg
pushf
mov
mov
movzbw
mov
push
push
jmp
call
mov
pusha
movb
mov
push
lea
pushf
pushl
xchg
mov
pushl
ret
pushl
jmp
xchg
mov
pushl
ret
pushl
jmp
mov
mov
call
pusha
lea
mov
jmp
xchg
pushf
pushl
ret
pushf
bswap
setb
mov
jmp
mov
not
lea
js
lea
lea
jmp
seto
pop
push
pushl
ret
movb
xchg
mov
pushf
pusha
mov
pushf
push
call
bswap
mov
jmp
mov
lea
lea
jp
pop
pushf
pushl
ret
pushf
pushl
call
pushl
mov
not
push
mov
jmp
lea
pushl
call
pushl
xchg
mov
pushl
ret
mov
movw
lea
lea
jg
push
movb
pushl
xchg
pushf
movb
pushl
ret
call
mov
call
push
jmp
jmp
jmp
call
xchg
pushf
mov
pushl
ret
push
mov
not
mov
movzbw
lea
push
not
mov
call
mov
jmp
push
call
xchg
movsbw
call
pusha
nop
call
xchg
push
push
pushf
pushl
ret
movb
pushl
lea
mov
mov
pushf
movzbw
mov
jmp
call
imul
ljmp
xchg
push
mov
pusha
xchg
lahf
jmp
leave
std
or
xchg
pushl
movw
movb
pushl
ret
push
movb
mov
nop
mov
call
jmp
lea
call
or
pop
and
dec
add
mov
dec
push
and
mov
movb
and
xor
cltd
aad
aam
push
inc
bound
xor
aas
push
or
pop
stc
popf
nop
pop
xor
inc
xor
mov
jo
inc
or
push
lret
lods
adc
in
iret
pushf
repnz
or
or
mov
and
out
jno
lods
out
pop
ret
fbld
pop
jecxz
sbb
dec
or
cmpl
gs
jg
lahf
loope
sahf
xchg
enter
loopne
cld
mov
ret
mov
neg
std
mov
sbb
ret
out
add
fists
inc
add
pop
mulb
inc
mov
fcmovnu
fsub
outsb
es
lods
outsb
ds
pop
dec
dec
add
jo
fdivrp
cmc
cmp
mov
movsb
cmpsl
xchg
jmp
pop
negb
sub
or
add
out
fs
dec
in
jne
mov
in
arpl
mov
xchg
jl
jo
xor
insl
sbb
sbb
mov
push
test
ret
sub
out
adc
inc
mov
ret
and
sub
orb
mov
push
js
cmp
mov
and
jg
sbb
dec
dec
pusha
scas
mov
adc
fisttps
ljmp
pop
jecxz
jb
inc
int3
pop
pop
and
push
pop
shlb
loop
loop
inc
or
ja
test
testl
sbb
test
mov
push
push
sbb
lret
adc
add
stos
push
pop
mov
push
aaa
cmp
jno
inc
add
sbb
mov
xchg
int3
into
sbb
push
cmpsl
call
inc
imull
pop
sahf
inc
xchg
adc
dec
jle
inc
xor
inc
xchg
mov
leave
vmovdqa
push
xor
mov
cmp
in
pop
push
cmp
push
dec
and
jno
push
push
aad
movsl
xchg
mov
xchg
jle
pop
pop
orb
pop
xchg
cmp
xor
rcl
cmp
mov
jmp
fdivrp
orb
fsts
mov
mov
xchg
jbe
ljmp
or
add
call
inc
sti
mov
jae
lret
push
sbb
pop
mov
and
popf
leave
mov
adc
sbb
inc
lret
pop
das
je
cmpsl
or
loopne
test
out
mov
loop
outsb
das
je
xchg
popf
dec
push
sbb
mov
mov
and
enter
inc
mov
insl
jo
mov
test
shlb
push
sbb
cmp
inc
lods
ss
jns
adc
insb
xchg
loopne
insb
or
push
or
adc
loope
fmull
lahf
lret
fistpll
cmpsb
rclb
and
mov
cmpsl
pop
jne
xchg
lds
xor
inc
sbb
pinsrw
inc
xchg
lgs
sub
or
push
negb
rcll
icebp
push
mov
iret
iret
dec
mov
into
sbb
and
neg
pop
lret
mov
popa
test
rorb
xchg
adc
pushf
mov
dec
aas
add
je
jl
fiaddl
roll
sub
dec
mov
mov
std
lea
lcall
in
pushl
icebp
negl
xchg
insb
cmp
js
cld
pop
insl
arpl
push
push
push
xchg
adc
dec
mov
dec
int3
clc
push
std
pop
pop
popf
or
mov
out
jmp
mov
cli
xchg
xchg
call
shrl
xor
addr16
in
test
push
daa
jbe
sub
xchg
lahf
xor
movsb
pop
lret
iret
mov
clc
push
xchg
xor
cmp
and
mov
fisubs
mov
call
neg
sbb
es
xchg
mov
jne
mov
jnp
shl
out
and
scas
and
mov
aam
mov
mov
push
sahf
mov
rorb
aaa
mov
mov
jmp
mov
cmp
jle
xor
xchg
scas
sarl
sbb
mov
xchg
sbb
pushf
push
jecxz
mov
insl
adc
sbb
push
scas
adc
call
test
pminub
dec
mov
es
shll
nop
mov
insl
das
push
jmp
mov
call
outsl
sbb
sarb
push
jg
mov
xorl
fucomp
out
stc
incl
mov
pushl
ret
xchg
movb
pushf
mov
pushf
pushl
ret
movzbw
mov
call
pushl
xchg
call
pusha
mov
movsbw
mov
pushf
movw
mov
movw
pushf
pushl
call
xchg
pushf
pushl
pushf
mov
pushl
ret
xchg
call
jmp
jmp
call
mov
pushf
lea
pushf
movw
call
call
pusha
not
movsbl
mov
not
pushl
pushl
mov
call
mov
pushf
pushf
movb
mov
push
pushf
call
mov
pop
mov
lahf
not
mov
push
mov
jmp
push
pushf
pusha
call
mov
pushf
mov
pusha
pushl
ret
jmp
mov
movw
pop
movzbw
mov
call
mov
call
push
bswap
lea
nop
not
bswap
mov
mov
pushf
pusha
call
mov
nop
pushf
mov
mov
call
mov
pop
mov
pushl
pushl
mov
call
pushf
xchg
pusha
xchg
movsbw
lahf
mov
pushl
jmp
movb
mov
nop
jmp
push
call
movsbl
mov
pushf
movb
pushf
mov
push
pushf
push
lea
lea
jb
push
xchg
mov
pusha
pushl
ret
pushf
lea
lea
jns
xchg
pushf
movb
pusha
movb
pushl
ret
push
movl
call
jmp
call
lea
movb
xchg
mov
pushl
ret
xchg
pushf
mov
pushl
ret
lea
call
pushl
call
push
call
not
mov
pusha
jmp
lea
jmp
pop
pushf
pushl
ret
pushf
mov
movw
jmp
xchg
movw
pushl
ret
movzbw
bswap
jno
mov
pop
push
pushf
pushl
xchg
pusha
movb
call
call
mov
mov
pushf
movsbw
mov
lea
jb
pushf
movb
mov
pushl
jmp
mov
push
jmp
mov
push
movb
mov
call
xchg
mov
mov
mov
pushl
ret
lea
push
xchg
movw
pushf
pushl
ret
mov
push
push
mov
jmp
lea
movl
mov
jmp
pushf
pusha
lea
call
pushf
pushf
jmp
jmp
push
nop
jmp
pusha
xchg
not
pusha
mov
movb
mov
movw
jmp
movl
pusha
lea
jmp
pushf
mov
call
mov
bswap
call
lea
push
pushl
movw
xchg
pushf
pushl
ret
mov
jmp
push
mov
push
lea
jmp
pusha
pusha
nop
pushf
push
mov
movzbl
push
mov
call
lea
mov
push
xchg
pushf
pushl
ret
mov
movw
pushf
movl
lea
jmp
jmp
pushf
mov
movzbl
pusha
jmp
pushl
lea
jl
lea
pusha
push
xchg
pushf
pushf
pushl
pushl
ret
mov
movb
xchg
movb
mov
movw
movb
pushl
ret
bswap
mov
nop
lea
jmp
lea
mov
call
movw
xchg
pushf
pushl
ret
xchg
push
pushf
pusha
pushl
ret
pusha
jmp
mov
call
movw
mov
setno
mov
movzbw
mov
jmp
or
fs
jne
pushf
pusha
xchg
pushf
push
pushl
ret
pushf
mov
pushl
call
push
jmp
xchg
push
pushf
pushl
ret
cmp
push
dec
or
pop
add
ljmp
dec
sbb
mov
sub
sbb
cmpsb
ss
add
ds
sub
std
xchg
out
cmp
mov
jmp
jp
loopne
inc
sbb
xchg
mulb
cmp
jo
xor
fcoml
scas
mov
pop
ret
movsl
js
outsb
push
mov
sahf
js
int
in
ficomps
aam
iret
sbb
scas
mov
mov
decl
and
or
xchg
loope
pop
dec
xchg
fcoml
movsb
or
mov
push
and
arpl
data16
or
mov
mov
sub
repnz
cli
mov
xor
inc
out
andb
pop
lcall
pop
adc
dec
mov
mov
movsl
ljmp
mov
mov
addr16
fwait
lcall
fwait
push
ret
dec
cltd
fsubrl
sub
lea
and
or
sub
fsubrl
mov
adc
xlat
jecxz
fldl
mov
clc
push
das
adc
mov
xor
enter
arpl
jmp
pusha
aaa
xlat
or
sbb
fisubrl
cmpsl
mov
bound
jbe
or
mov
lahf
test
lahf
lret
pop
es
jmp
pop
lods
mov
add
repnz
pop
mov
roll
lods
adc
bound
sub
xchg
pop
pop
push
or
xlat
in
pop
sahf
cs
mov
sub
sub
jmp
aas
xchg
mov
jns
inc
cwtl
pop
xor
cmpsb
out
jecxz
pop
xchg
loope
ret
pop
dec
sbb
or
movsl
in
jge
xorl
or
cli
and
es
call
mov
hlt
mov
in
shll
mov
cltd
mov
cmc
test
int
pop
rcl
in
popf
in
pop
or
cwtl
fimull
shll
psubsw
insb
scas
push
adc
rorb
inc
push
orb
pop
call
leave
push
bound
jb
es
loopne
jno
mov
xor
or
mov
dec
cmp
mov
sbb
xchg
in
and
cmp
or
sbb
cmc
fidivrl
subb
xchg
pop
fcomip
jne
mov
push
jns
adc
sti
xor
sub
pop
and
mov
stc
pop
xor
test
data16
jne
or
call
or
adc
sahf
insb
mov
or
mov
in
in
push
rorl
les
mov
sbb
sbb
fisubl
test
mov
call
sar
insl
ss
rcll
shll
or
xchg
and
cmp
mov
pusha
mov
xor
dec
mov
mov
push
aaa
jno
push
mov
pop
jg
and
mov
lea
and
cmp
lods
ret
mov
mov
sub
ljmp
mov
xchg
xor
sbb
mov
aad
rorl
mov
push
inc
loop
jp
inc
xchg
cmc
div
rorl
test
mov
dec
mov
rcll
lods
clc
in
cli
ret
stos
js
mov
js
mov
cltd
mov
mov
addr16
mov
push
inc
negb
aaa
loop
je
shlb
jle
xchg
inc
jge
mov
pop
xchg
movsb
or
xchg
jno
and
dec
sbb
aam
mov
or
jno
pop
and
sub
inc
daa
popf
fwait
aam
insb
inc
jp
ds
int
bound
cmpsl
in
xor
es
add
sahf
mov
mov
fistps
addl
lret
sub
xchg
adc
cltd
pop
jno
scas
and
xchg
rclb
repnz
fdivl
les
dec
pop
or
xor
jbe
into
mov
and
mov
fcoml
and
imul
movsb
int
cmpl
js
xchg
mov
fisubrs
and
jg
cltd
addb
sbb
dec
mov
jecxz
lret
insb
cwtl
in
cmp
in
lds
pushf
inc
iret
out
aas
sbb
inc
or
mov
inc
nop
mov
push
mov
aam
imul
fsubs
into
rclb
lea
inc
mov
cmp
lret
cld
daa
enter
ljmp
xor
pop
insl
mov
scas
xor
hlt
loopne
push
sbb
jb
dec
adc
loope
add
jno
leave
and
and
and
shll
cmpsb
mov
xchg
push
pop
push
and
mov
push
arpl
cmp
je
push
into
incl
repnz
fsqrt
clc
dec
jp
stos
mov
push
repz
xor
ja
shl
or
add
jbe,pn
cmp
cs
inc
movsb
lcall
and
ja
rolb
push
and
les
bound
outsb
jb
adc
pop
jmp
mov
ja
xor
repz
jb
inc
sub
fstpl
insb
sbb
lret
adc
xchg
mov
cmp
push
icebp
pop
mov
lock
shll
fisttps
or
and
adc
in
add
pop
add
jae
mov
out
sub
repz
ret
rorb
inc
cmpsl
jmp
gs
mov
mov
shrb
jo
cmp
aas
dec
insb
cs
insb
sbb
loope
pop
mov
mov
mov
out
mulb
and
pop
mov
pop
mov
xchg
bound
inc
hlt
push
add
add
pop
lahf
shll
sbb
call
jae
lock
push
cmp
ljmp
pop
adc
fistpl
cmp
repz
test
rcrb
lcall
mov
dec
pushf
scas
mov
mov
dec
sbb
loop
cmpsb
je
stos
aaa
pop
fcoml
bound
mov
or
sub
jl
imul
cmp
xor
mov
int
jno
insl
mov
push
jg
cmp
mov
jge
sub
loope
inc
dec
out
jo
add
xchg
mov
mov
add
cmp
and
inc
test
inc
mov
jl
imul
test
mov
repz
lcall
pushf
jns
or
xchg
out
leave
sub
mov
inc
sub
out
rcll
sbb
aas
inc
inc
lds
jecxz
mov
lcall
xchg
mov
or
sahf
call
ret
jl
imul
jle
lcall
xor
dec
leave
sub
ds
mov
jge
jmp
bswap
nop
not
push
jmp
xchg
bswap
call
nop
lea
js
pusha
push
push
xchg
movsbw
setl
mov
pushf
call
pushf
mov
call
mov
jmp
mov
movsbw
lea
mov
jmp
lock
xchg
pop
push
sar
sahf
rorb
mov
sub
xchg
mov
mov
ffree
push
jns
cmp
fdivp
inc
lods
testl
push
call
or
insb
sub
and
loop
js
pop
out
mov
lret
adc
cmpsl
mov
mov
pop
out
jae
pop
stos
aaa
dec
pop
inc
scas
mov
sub
aad
imul
sub
push
sub
mov
nop
ljmp
fwait
or
mov
scas
or
sbb
pop
movsl
rcrb
bound
mov
mov
xchg
movsl
dec
and
test
les
das
idivb
push
or
cmp
xchg
jg
addr16
mov
arpl
aam
xchg
movsb
adcb
in
jp
jle
mov
sbb
cmp
cmp
out
mov
cli
je
loope
pop
and
push
mov
mov
cmp
push
pop
push
sub
push
insl
cli
sub
push
or
test
mov
cmpsb
sbb
daa
lds
jbe
xor
mov
cld
jge
js
mov
push
in
and
mov
sub
cwtl
fdivrs
sub
lea
inc
push
addr16
jp
imulb
aam
fdivs
jg
call
mov
xchg
lea
not
mov
pushf
mov
push
mov
call
lea
jmp
mov
bswap
lea
movl
lea
mov
lea
je
push
pushf
pushf
mov
jmp
mov
lea
movl
xchg
mov
pusha
pushl
ret
bswap
mov
call
xchg
mov
movb
mov
mov
pushl
ret
pushf
mov
call
jmp
mov
mov
mov
lea
push
mov
mov
pop
pusha
lea
mov
mov
pushf
not
mov
mov
push
mov
mov
movw
pushl
ret
pushl
xchg
push
pushl
ret
mov
or
jl
xor
inc
and
mov
and
pushl
ret
movb
lea
jmp
movw
push
lea
movsbl
pusha
mov
pop
not
mov
movl
movb
push
movb
pushl
ret
xor
cmc
clc
xor
pusha
xor
pushf
mov
xor
movb
xor
pushf
bt
xor
test
xorl
std
pushl
popf
movb
pushl
ret
jmp
mov
pop
pushf
bswap
lea
mov
pushl
pushf
mov
mov
mov
push
lea
call
mov
pushf
movl
lea
call
lea
not
nop
push
push
mov
push
call
pushl
lea
pushf
xchg
movw
movw
movw
movb
pushl
ret
jmp
pusha
movzbw
push
nop
not
mov
pushf
call
setge
cwtl
setl
nop
pushf
mov
mov
xchg
call
movl
mov
mov
call
not
pushf
mov
jmp
xchg
push
pushl
ret
mov
jmp
movl
push
movl
pusha
pushf
pushl
lea
jmp
call
pushf
movl
mov
pusha
pushf
lea
jmp
call
lea
pushl
xchg
push
pushf
mov
mov
pushl
ret
pushf
nop
pushf
call
pushf
cmp
test
xor
call
pusha
xchg
not
bswap
mov
movb
movb
mov
lea
pushf
pushl
jmp
lea
jmp
xchg
pushf
mov
movb
mov
pushl
ret
pusha
push
lea
pushf
jmp
call
call
pushl
xchg
movb
pushf
push
push
pushl
ret
mov
pushf
pushl
mov
pushl
pushl
mov
call
mov
pop
lea
jae
bswap
not
mov
pushf
pushf
call
xchg
lea
xchg
pusha
pop
mov
pushf
pushf
movsbl
bswap
mov
mov
not
pushf
mov
lea
pushf
bswap
mov
push
movzbl
call
movw
mov
mov
mov
mov
jmp
call
call
pushf
pushf
lea
mov
push
mov
push
pushl
ret
mov
call
pusha
call
mov
call
push
not
nop
pushl
push
movsbw
xchg
not
movsbl
mov
call
jmp
pusha
lea
jns
push
push
nop
push
xchg
jmp
xchg
jmp
pop
lret
ret
std
cmpsl
lock
jmp
and
call
dec
enter
and
rclb
ljmp
add
mov
clc
arpl
fwait
dec
cwtl
cmc
adc
xchg
xor
mov
dec
js
pop
mov
imul
das
mov
dec
sahf
mov
add
cmp
pop
ja
mov
rclb
rorb
into
inc
sbb
xchg
xchg
jg
mov
lods
adc
xchg
pop
pop
daa
outsl
and
mov
inc
sbbl
add
xor
jle
fstp
std
jecxz
test
int
xchg
cld
lret
test
sub
popf
push
das
xor
add
push
mov
and
add
popa
inc
pop
mov
pop
jg
jp
bound
inc
push
sbb
xchg
fdivrp
in
dec
subb
and
dec
ret
mov
and
add
rcrl
pop
mov
shrl
or
in
shlb
stos
ret
jb
and
mov
push
pusha
lods
or
sub
cld
push
dec
movsl
lcall
lret
mov
push
fisttps
inc
aam
and
lahf
sahf
dec
or
lret
xchg
rol
lret
repnz
rclb
and
fsubs
mov
mov
add
loopne
fs
xchg
xchg
rolb
xor
out
cmp
sub
addr16
and
lods
or
mov
jl
jnp
in
lcall
in
in
xor
xorb
mov
and
jecxz
fidivs
test
lods
mov
dec
or
mov
movsb
mov
aas
cld
popf
stos
testl
mov
sbb
fldcw
mov
sbb
lret
cmp
leave
lret
inc
ds
dec
test
ret
pop
fsub
rorb
mov
cltd
arpl
cmp
or
stos
dec
pop
int3
jnp
xorps
jns
fdivrp
out
mov
push
icebp
adc
add
dec
xchg
ljmp
stc
in
lahf
and
add
rcrl
push
leave
adc
fistl
insl
jge
jecxz
sbb
adc
inc
loopne
jecxz
call
pop
sbb
sub
movsb
out
jbe
pop
and
push
sub
xchg
xor
test
aaa
dec
jmp
scas
std
js
enter
nop
fisubl
in
sub
std
pop
fisubrl
fwait
push
and
sub
sbb
adc
jnp
mov
in
inc
adc
aad
icebp
popf
jg
sbb
dec
in
cmp
xchg
das
jns
sbb
lret
and
and
pusha
fidivrl
xchg
push
pop
sub
imul
in
cmp
add
movsl
daa
and
in
jne
sarl
pop
add
mov
push
sti
ret
adcl
mov
push
gs
inc
dec
loopne
ret
test
popf
jmp
scas
jo
in
jae
cli
mov
sbb
hlt
mov
aas
ds
dec
cmpsl
cmpsl
push
jae
lea
in
jae
xor
cmp
cmp
sbb
repz
mov
idivb
inc
mov
cld
push
mov
cs
in
sbb
hlt
cmpsb
jge
mov
es
cmpsl
test
loop
lock
mov
jp
cmp
cwtl
mov
adc
enter
cmc
add
cmp
mov
test
test
mov
xchg
xor
jns
mov
ja
jle
cwtl
dec
pop
das
add
rcrl
dec
sbb
leave
popf
in
jae
cmp
in
jnp
or
notl
mov
fdivrl
lock
inc
mov
in
mov
rcrl
rcll
scas
stos
push
xor
outsl
dec
lret
aad
int3
sbb
insl
adc
ja
int
xor
sbb
lods
bound
mov
cmp
sahf
pop
jge
popa
aaa
setbe
ds
mov
or
mov
inc
loop
mov
add
push
movsl
jecxz
jae
push
pop
mov
sbb
into
out
cmp
lahf
adc
dec
pop
dec
ja
xchg
addb
daa
in
xchg
xor
mov
cmp
daa
xor
lahf
lea
jbe
pusha
mov
pusha
call
mov
pushl
movzbw
lea
mov
push
jmp
setp
mov
movb
jmp
xchg
call
pushf
mov
jmp
pushf
mov
pushf
lea
pusha
call
call
pushf
push
mov
mov
bswap
movsbw
mov
jmp
mov
jmp
lea
mov
jmp
call
pushf
mov
movzbw
mov
call
pusha
mov
bswap
mov
lea
sets
mov
pushf
pushf
call
mov
push
pushl
lea
pusha
movw
push
xchg
pushl
push
movb
pushl
ret
mov
pushl
movzbw
bswap
push
xchg
seta
bswap
pushf
jmp
pushf
pushf
movw
xchg
pushf
push
pushl
ret
movsbw
push
push
nop
movsbw
movsbl
mov
mov
pusha
jmp
pushf
xchg
pushl
pushf
pushl
ret
nop
lea
jo
push
lea
push
call
pusha
mov
pusha
jmp
pushf
nop
cwtl
mov
cwtl
mov
pushf
jmp
pusha
movb
xchg
push
mov
pushl
pushl
ret
pusha
pusha
nop
movl
movw
push
pushf
mov
push
pop
movsbw
movsbw
mov
call
movb
xchg
pop
call
mov
call
mov
movb
lea
call
call
setl
setns
pusha
movsbw
nop
movsbw
cwtl
mov
movl
pusha
pushf
mov
xchg
lea
jg
pushf
pushf
movb
mov
pushf
mov
mov
pusha
mov
call
push
pusha
lea
jle
not
nop
bswap
push
push
pushf
pusha
bswap
mov
push
lea
call
pusha
call
pushf
lea
mov
jmp
mov
pushf
mov
pushf
lea
pushf
push
xchg
movb
mov
movb
movb
pushl
ret
push
mov
call
pushl
jmp
call
pushf
mov
pushf
lea
push
pushf
mov
pushl
call
lea
mov
movl
mov
movzbw
not
mov
pushf
pushf
movw
mov
mov
pushf
call
jmp
mov
jmp
jmp
push
pushf
pushf
call
call
xchg
movzbw
jmp
mov
jmp
inc
pop
push
pushf
movsbw
pop
movzbw
mov
call
movb
xchg
push
pushf
push
movw
pushl
ret
lea
call
pushf
jmp
cmp
aad
std
jle
jmp
push
nop
inc
pop
scas
jae
or
jno,pn
pushf
movsl
xor
push
js
aaa
mov
mov
mov
jne
or
mov
cmp
mov
ja
in
mov
stos
xor
cltd
test
test
xlat
pop
and
in
test
ja
mov
sub
rcr
push
cli
mov
in
loope
pop
mov
jge
stos
push
or
aad
and
insb
shlb
dec
lods
push
orl
outsl
icebp
lods
aas
out
lret
lds
sbb
cmp
push
insb
fwait
test
push
test
movsb
xor
inc
mov
mov
lret
int3
adc
inc
push
or
mov
push
adc
jnp
add
shrb
pop
ficoms
adc
mov
inc
or
mov
sbb
pop
and
xchg
push
add
cmp
jecxz
inc
je
outsb
imul
fisttpll
xor
in
ja
mov
mov
arpl
aas
or
lea
jno
pop
mov
icebp
inc
sbb
dec
pop
in
inc
push
mov
int3
add
sbb
rcrb
jbe
fnsave
jo
cld
dec
add
jecxz
cs
mov
jnp
aam
lcall
xchg
dec
and
sub
subl
adc
rcr
cmp
sbb
xor
pop
leave
dec
iret
rclb
mov
and
shrb
add
sub
cmp
stos
sti
mov
cmp
test
mov
sub
sub
push
jns
rorl
out
push
out
cmp
jne
repz
xchg
js
in
xchg
push
jg
jl
mov
out
cmpsl
fsubrs
repz
xor
in
lret
imul
mov
popa
xor
mov
rcrl
or
shlb
and
push
ret
adc
sti
aad
mov
pusha
mov
js
mov
loopne
movsb
js
push
dec
sbb
aam
sbb
dec
ret
callw
scas
outsb
mov
pop
push
aaa
insl
rclb
movsl
mov
sbb
mov
or
jnp
into
lret
test
or
gs
jmp
call
push
sbb
hlt
push
mov
mov
push
mov
inc
out
iret
arpl
xchg
dec
lods
push
shr
jbe
dec
mov
in
cmp
push
pushf
nop
xchg
mov
daa
pop
jno
adc
jle
sbb
inc
cmp
xchg
dec
in
decb
sarl
ja
adc
arpl
push
jae
mov
cltd
mov
jns
cmp
xor
push
arpl
nop
xor
fisubl
push
jo
jnp
fstpt
xor
xchg
pop
pop
and
cli
js
rol
sub
test
rcrl
xlat
rcll
sahf
fsubs
out
mov
pop
movsl
cli
and
subb
jno
ret
shll
aas
shll
addr16
pop
xor
rcll
orb
or
arpl
adcb
pop
ja
inc
jne
mov
cli
popf
pop
sbb
ja
xchg
lcall
bound
aaa
addr16
adc
adc
aam
mov
cmc
mov
pop
push
scas
shrb
sub
dec
sahf
sbb
sub
popa
clc
dec
bnd
jg
mov
enter
aaa
inc
shr
push
andb
jae
add
fwait
shlb
nop
inc
or
js
jecxz
loop
mov
clc
pushf
cmc
cmc
cmp
pop
inc
jmp
pop
push
mov
in
jl
adc
pop
and
or
mov
mov
pop
xchg
push
adc
ret
mov
pop
fcomi
push
lahf
repz
cltd
sbb
clc
loop
pop
push
mov
clc
dec
lds
aam
sub
cltd
xchg
mov
aad
jge
pop
jne
pop
jne
js,pn
imul
fs
cwtl
ljmp
adc
add
or
fnstsw
movsb
jg
push
inc
push
pop
ret
push
scas
add
mov
push
les
pop
xchg
jecxz
cmpb
sub
adc
and
xchg
addl
test
add
add
pop
fidivrs
sbb
fcoml
jae
jmp
stos
cmc
test
mov
cmp
or
icebp
movsb
loope
insb
push
in
xor
pop
lods
sti
pop
cmp
dec
sbbb
add
pusha
test
jns
push
aad
dec
fcomp
pop
in
repz
pushf
rorl
mov
jno
sbb
inc
xor
iret
repnz
dec
dec
mov
mov
xorb
aam
pushf
ja
mov
xor
in
push
mov
lock
push
and
pop
pop
xor
dec
xchg
mov
lret
sahf
dec
mov
inc
sub
xor
and
sub
stc
sub
stc
push
lock
in
imul
loop
mov
push
test
mov
rolb
or
fcomps
rorb
xchg
push
sub
adc
xlat
mov
mov
mov
jbe
jmp
lcall
outsb
cmp
jmp
jbe
jns
mov
mov
subb
test
shrb
push
rcrb
insb
cltd
loop
rol
or
inc
arpl
jecxz
cli
inc
inc
pop
inc
call
cmp
out
cmp
jb
fsubr
xchg
ljmp
fs
icebp
mov
out
pop
mov
xchg
adc
cmp
lahf
imul
xor
sbb
or
inc
sti
arpl
mov
xchg
xchg
inc
xchg
test
punpckhbw
dec
jne
or
call
xchg
es
mov
iret
sbb
in
ss
sar
sbb
sbb
or
pop
cld
stos
xchg
pop
movsb
xor
icebp
lret
xchg
int3
dec
arpl
jns
dec
or
pop
inc
cwtl
bound
jne
pop
daa
pop
push
imul
mov
sbb
cmp
mov
cmp
push
cmc
sbb
mov
push
push
loop
sbb
cmp
xor
test
movsb
bnd
insl
push
arpl
xchg
out
jl
gs
inc
cltd
add
movsb
mov
pop
aad
inc
xchg
stos
adc
aam
sahf
sti
das
addb
gs
loop
movb
daa
fucomi
fldenv
or
fsubs
cmp
push
stos
sub
inc
xchg
fbstp
imul
xchg
or
stc
les
cltd
mov
imul
fmuls
jbe
not
or
jg
sbb
cmp
inc
adc
out
lcall
ret
xchg
outsl
psubusw
addr16
xchg
in
insb
pop
movsl
pop
sbb
mov
pop
mov
and
pop
xor
jne
push
xchg
xorb
dec
movsl
fildll
aas
cwtl
cmpsb
mov
mov
cmc
inc
sbb
push
out
insb
cmp
arpl
pop
jno
and
imulb
divb
lea
ljmp
movsl
es
adc
or
push
dec
push
cmp
or
sbb
mov
adc
jns
and
fcoml
adc
test
mov
mov
dec
mov
leave
pusha
aas
dec
xor
xlat
add
xchg
cmp
pop
mov
sub
jle
and
cli
sub
flds
cli
sub
pop
mov
in
xlat
outsl
jno
fs
testb
dec
adc
lds
cmp
ja
xor
insb
out
daa
mov
jge
jno
insb
call
pop
xor
pop
adc
test
rorl
bswap
xchg
xchg
pusha
mov
pushf
not
movsbw
not
mov
movsbw
lea
pop
pushf
jmp
xchg
push
movb
pushl
ret
lea
jl
push
mov
jmp
push
xchg
push
mov
movw
pushf
mov
pop
jmp
lea
jge
mov
push
movsbw
movzbw
call
pusha
pop
movzbw
mov
push
mov
mov
pop
movzbw
pushf
lea
pushf
pushf
call
nop
pusha
call
mov
pushl
mov
jmp
movsbl
mov
push
pushf
lea
movb
mov
mov
lea
mov
call
jmp
call
xchg
mov
mov
jmp
bswap
jmp
pushf
mov
lea
jge
mov
pushf
jmp
lea
jmp
jmp
mov
call
jg
mov
fdivrp
fisubs
imul
mov
mov
sub
add
push
xchg
inc
inc
cmpsb
jbe
ljmp
lea
sbb
loopne
ret
adc
shll
mov
sub
stos
testl
loopne
pusha
adc
les
shlb
sbbb
mov
sbbl
jl
fdivrp
and
pop
mov
dec
sub
inc
dec
das
mov
jle
mov
rcr
lods
sbb
push
insl
or
test
add
repnz
in
loopne
dec
add
ror
fdivrp
xchg
pop
bswap
popa
jnp
sub
negl
jp
insl
xchg
xor
inc
lret
pop
loopne
jmp
jge
jno
test
adc
push
xchg
dec
mov
ljmp
xor
call
lea
orb
mov
mov
cmp
lcall
shll
cs
inc
push
out
pop
test
outsl
inc
or
scas
aas
and
dec
sub
xchg
dec
xchg
negl
clc
xor
hlt
mov
scas
adc
sub
sub
scas
jo
sbb
gs
cmp
inc
add
add
jp,pn
loopne
enter
cmpsb
dec
mov
mov
dec
jl
stos
mov
mov
mov
sahf
ljmp
xchg
jne
pop
xchg
jmp
xchg
mov
je
filds
aas
mov
iret
cwtl
pop
ret
cvtdq2ps
dec
jae
sbb
sarl
out
lea
mov
or
cmp
stc
in
lret
fs
repz
inc
add
cmpl
in
lcall
fdivrp
rorl
lcall
gs
pop
jle
and
divl
ret
shrl
adc
push
dec
std
addl
mov
sub
xor
mov
pop
mov
imul
imul
mov
iret
and
insl
das
jle
mov
pusha
stos
mov
sub
out
test
dec
mov
mov
pop
fsubs
mov
cltd
cmp
sub
in
aas
or
push
mov
and
cmp
xorl
lret
xchg
movsb
xor
mov
mov
rcll
and
mov
arpl
jns
pop
and
pop
sahf
lret
and
add
lret
push
addr16
pop
push
push
lret
arpl
mov
stc
pop
fs
stos
xor
mov
inc
icebp
sub
ljmp
jno
rcrl
fsubs
cmpsl
sbb
pop
sbb
inc
je
mov
stos
cmp
cmc
or
cmp
mov
push
cmp
fwait
ja
cli
pop
mov
out
mov
nop
or
mov
xlat
xchg
xchg
lock
leave
fisubl
cltd
pusha
in
sub
out
mov
cmc
scas
adc
xor
stos
jno
jl
dec
ficoms
aas
imull
xchg
push
sub
int
test
mov
out
repz
lds
popa
das
xchg
mov
imul
pop
xor
jo
pop
lds
mov
mov
bound
in
lahf
ja
stc
push
pop
into
pop
lea
lret
jb
jle
sbb
addl
loop
cmp
xor
repnz
sub
lahf
clc
inc
mov
mov
enter
scas
popf
fcoml
pop
fimull
push
outsl
test
loopne
dec
add
not
xchg
or
test
fidivs
and
cli
mov
dec
sbb
stc
lods
jle
xchg
orb
or
xchg
call
movb
jmp
pushf
xchg
pushf
push
pushl
ret
pusha
pushf
jmp
mov
bswap
nop
pusha
jmp
pusha
mov
mov
jmp
mov
jmp
movzbw
pushf
movsbw
pop
nop
mov
pop
pushf
call
push
pusha
pusha
pushl
nop
jmp
call
jmp
lea
push
mov
movsbw
jmp
push
pushf
pushf
popl
push
xor
test
xorl
pusha
xor
test
clc
xor
movb
xor
call
pusha
nop
pushf
jmp
movsbl
push
pushl
lea
nop
pushl
movsbw
jmp
pushf
mov
movzbw
mov
jmp
push
call
movzbw
movsbl
mov
call
push
xchg
pusha
movzbw
jmp
lea
mov
call
mov
pushf
pusha
lea
pushf
call
call
mov
push
jmp
das
pop
mov
jmp
jmp
push
pusha
nop
call
mov
lea
jns
lea
jmp
lea
jle
pushf
push
xchg
movb
pusha
movb
pushf
pushl
ret
xchg
movb
movb
movl
pushl
pushl
ret
pop
out
insb
std
lea
call
xor
cmp
bt
xor
movw
xor
movb
xor
mov
xor
push
xorl
clc
xor
mov
pushl
popf
movb
movb
pushl
ret
lea
jge
lea
pushf
pushf
mov
movw
pop
movzbl
call
xchg
movw
movb
pushl
ret
pusha
pushf
nop
pushf
movw
mov
lea
not
movsbl
mov
jmp
mov
not
jmp
push
movl
mov
pusha
movb
mov
lea
jmp
push
lea
movb
mov
movb
jmp
push
pushl
mov
pusha
nop
jmp
lea
call
bswap
setne
mov
jmp
lea
push
call
nop
pushf
movb
pusha
mov
lea
pop
pushl
mov
push
lea
mov
push
lea
jl
push
mov
not
mov
pusha
push
jmp
lea
mov
movb
jmp
aas
scas
ret
fdivrp
mov
cld
pop
xor
push
mov
outsb
xor
add
sbb
pop
jbe
in
xchg
adc
jne
outsb
pop
jmp
test
push
adc
fwait
pushf
sbb
mov
shll
je
gs
add
mov
scas
push
mov
shll
push
inc
jl
sbb
xchg
fwait
mov
fcmove
inc
adc
daa
mov
cmp
sub
jg
hlt
mov
xchg
pop
fs
js
mov
lret
cld
test
and
or
mov
add
fcompl
test
dec
test
mov
scas
xchg
fwait
or
mov
cmp
dec
into
std
xchg
xorl
mov
mov
xor
negl
xor
stos
pushf
pop
in
mov
mov
inc
std
lods
push
daa
pop
push
movsb
add
xchg
pop
stc
jmp
xchg
push
and
into
mov
and
test
idivl
pop
push
push
in
jp
pusha
and
or
enter
aam
push
inc
sbb
add
inc
in
cmpsl
sbb
adc
pop
lcall
rolb
lret
in
cmovne
adc
mov
sbb
or
and
aaa
inc
in
test
and
push
pop
lods
mov
mov
inc
push
xlat
sahf
bound
mov
inc
adc
sub
jl
test
scas
jbe
inc
pop
clc
cld
mov
loop
push
push
mov
hlt
mov
movsl
mov
xorl
repnz
nop
addl
test
call
mov
mov
sub
xor
cli
or
adc
mov
leave
cltd
dec
sti
arpl
pop
push
roll
jg
sub
outsl
in
mov
fimull
loopne
mov
neg
cmpsb
and
lahf
inc
out
cmp
aam
push
outsb
pusha
sbb
or
mov
scas
adc
xor
loop
rorl
cmpsl
outsl
gs
pop
cmpsl
cmp
xorl
pushf
ficoml
repnz
push
scas
add
stos
dec
xchg
sbb
mov
or
xchg
pop
das
inc
jb
or
jae
xchg
mov
pop
jl
cmp
imulb
std
mov
or
mov
jp
imul
mov
jmp
xchg
jmp
scas
jae
ret
xchg
pushf
xlat
mov
jbe
jne
cmp
cli
lods
ja
out
xchg
popl
xchg
push
mov
cmpb
sbb
push
jmp
lret
and
dec
cltd
push
cs
addr16
mov
shll
and
push
jl
jb
cld
xchg
or
in
mov
add
inc
lds
pusha
cwtl
mov
xchg
lcall
js
xchg
mov
lods
sub
push
push
mov
loope
mov
cmpsl
push
mov
push
sahf
add
cmpl
int3
imul
fisubrl
xchg
push
xchg
pop
xor
daa
mov
pop
dec
jmp
arpl
call
jnp
ja
xchg
mov
jp
mov
push
xchg
jg
and
xor
push
test
mov
cmovp
xor
and
sbb
arpl
push
out
out
xchg
out
enter
fcomps
out
ljmp
cmp
mov
ljmp
add
mov
xor
adc
in
lock
je
mov
loope
sbb
fsubrl
mov
idivl
xor
xchg
cltd
popa
bound
mov
aaa
push
cmp
jnp
leave
hlt
mov
mov
sbb
push
or
cmp
fcomi
test
es
add
iret
sbb
pop
nop
fcmove
lahf
std
xor
mov
pop
lods
out
mov
rcr
or
jbe
mov
sub
mov
arpl
push
xor
push
rcll
jns
fnstenv
xor
or
push
ja
jno
lret
add
test
cmp
call
pop
sub
mov
aas
scas
jno
xchg
jae
gs
pop
mov
dec
out
push
mov
cmp
lods
jns
inc
pop
insb
sbb
test
adc
jo
scas
jle
ja
push
lds
mov
pop
loopne
push
pop
sti
outsb
or
insb
das
mov
insl
adc
clc
cs
into
mov
or
pop
aam
xchg
shl
push
push
dec
adc
gs
in
add
mov
pop
daa
cmpsl
push
in
xchg
mov
mov
dec
pushf
xor
popa
jmp
lds
mov
and
rorb
mov
mov
mov
push
ss
fiaddl
mov
sub
sbb
scas
dec
or
xchg
push
or
cltd
and
push
or
aam
dec
add
mov
xchg
xlat
xchg
dec
pop
lds
xor
xlat
aas
xchg
jae
outsb
jle
sbb
ja
jmp
cltd
jae
iret
inc
sub
dec
xor
and
mov
mov
ljmp
inc
and
shl
push
mov
and
int3
or
mov
je
lahf
sub
sub
aam
inc
ror
mov
adc
push
sahf
popf
add
cmc
inc
cmpsl
dec
sbb
addr16
in
fcmove
inc
pushw
call
mov
xchg
adc
std
inc
add
fistpll
ret
and
fidivs
hlt
ds
pop
push
pop
filds
lret
or
adc
sub
jle
sbb
fnstsw
push
aam
and
sub
test
ret
out
imul
mov
sbb
jmp
xchg
shl
sub
fwait
mov
mov
inc
scas
in
mov
sbb
addl
mov
sbb
sbb
mov
xchg
clc
cmc
mov
ljmp
mov
std
sub
xchg
add
cli
jle
xor
push
jle
int
fadds
es
lcall
decb
jnp
pop
cmp
jbe
leave
scas
push
dec
pop
xor
test
in
test
adc
scas
mov
orl
cs
push
inc
das
cmp
lret
in
xor
adc
or
out
mov
mov
mov
test
mov
xor
data16
sub
inc
inc
fsub
arpl
mov
aam
sbb
push
inc
xor
lret
pop
sub
add
xor
rcl
orl
in
cmp
pop
sbb
pop
cmp
xor
bound
pop
mov
jmp
stos
mov
pop
jg
leave
inc
fstps
dec
or
idiv
addl
or
in
cmp
insl
dec
imul
out
arpl
movsb
cmc
je
xor
pushf
add
inc
jno
cs
lret
push
push
fldenv
fs
jo
movsl
jp
jmp
ja
mov
jg
ror
sbb
mov
cmpsl
sub
rclb
les
push
dec
fcom
push
insb
mov
and
pop
aas
xor
xchg
and
cmp
push
push
push
dec
ror
insl
push
pop
push
xchg
mov
lahf
les
inc
xlat
ljmp
test
int
mov
inc
adc
mov
pop
es
mov
xchg
add
in
rorb
dec
or
stc
inc
pop
cmp
dec
and
lea
mov
call
fwait
sub
scas
lods
das
xor
shl
not
nop
xchg
pushf
mov
push
lea
xchg
not
xchg
pushf
xchg
bswap
xchg
mov
call
pushl
call
call
xchg
mov
stos
sti
lcall
lcall
lea
call
xchg
lea
pop
pusha
mov
call
mov
mov
mov
pusha
not
mov
movb
call
xchg
mov
push
push
movb
pushl
ret
movw
lea
call
jo
pusha
pushf
xchg
pushl
pushl
ret
jecxz
scas
cmp
std
mov
insl
jle
les
mov
xor
lds
add
and
xchg
arpl
mov
jge
ret
rolb
in
mov
shlb
or
cmp
pop
int
testb
fcmovu
in
inc
ficompl
or
push
xor
cmp
cmp
std
or
mov
or
add
mov
dec
cmpl
enter
cmp
cwtl
pop
mov
and
iret
and
xchg
xchg
movsl
popf
out
int
sub
fdivrp
aas
lea
fwait
push
sub
jl
cwtl
pop
enter
mov
and
nop
jb
or
dec
jbe
pop
xchg
xlat
xchg
mov
mov
pop
ficoms
dec
js
hlt
inc
scas
std
or
jae
rolb
sub
fnsave
sti
xor
inc
push
pop
daa
xchg
rorl
mov
rcr
loopne
dec
mov
or
pop
mov
data16
adc
ljmp
and
xor
mov
add
mov
pop
sar
adc
xchg
xchg
aas
pop
test
pop
repz
ret
stos
test
add
pop
js
and
lahf
xor
pop
mov
leave
test
rcrl
dec
push
pop
and
and
sbb
inc
lods
sti
mov
mov
cltd
fistps
xlat
imul
push
shlb
jmp
and
xchg
popa
and
cld
insb
pushf
notl
shlb
jns
cld
adc
dec
mov
jne
sub
inc
test
xchg
add
sub
mov
push
and
div
mov
add
adc
addl
sahf
imul
out
add
or
mov
je
fdivrp
icebp
mov
loope
addb
ss
pop
int3
movsb
mov
mov
dec
jae
push
cmpsb
in
pop
pop
into
jb
sub
sub
xor
jl
jo
cmp
shlb
loopne
dec
mov
hlt
and
lods
cmpsb
push
cmp
gs
xlat
mov
cmp
push
push
mov
test
push
into
pop
aaa
aas
pop
in
xchg
lret
pop
cmp
inc
pop
mov
jnp
jmp
mov
push
cmc
bound
sbb
xchg
stc
les
adc
fldenv
dec
push
cmc
repnz
bound
dec
lock
lret
sbb
xchg
adc
adcb
mov
scas
sti
add
je
mov
mov
add
std
dec
push
xchg
jae
jns
xor
jle
shll
leave
rcrb
ds
jl
fists
rcrl
push
out
cmpsb
clc
ret
add
js
in
adc
mov
mov
lahf
lret
mov
xor
push
pushf
inc
stos
jp
lret
jbe
out
jmp
inc
stc
inc
cmpsb
iret
fldenv
je
rcr
stos
mov
push
push
pop
lahf
push
pop
dec
shrb
stc
out
jmp
xchg
je
mov
sbb
push
shufps
xchg
adc
adc
int
xor
sti
in
jns
jbe
sub
ficompl
or
lods
movsb
in
scas
inc
dec
pushf
sub
mov
fistpl
xchg
loopne
sub
rorl
mov
adc
pop
add
sub
arpl
dec
sahf
cmp
sbb
addr16
xorb
inc
pushw
call
jo
sbb
insl
sarl
cld
loopne
xchg
inc
clc
adc
mov
push
repnz
jae
xchg
imul
divl
jecxz
les
fildl
popa
jno,pn
lret
outsb
out
pushf
lret
lret
imul
lret
lods
std
call
movb
pushf
nop
movw
jmp
push
mov
call
jmp
call
movb
nop
call
push
mov
push
jmp
pushf
mov
lea
jae
push
pushl
pusha
lea
pushf
push
pushl
pushf
xchg
movb
push
pushl
ret
jmp
jmp
lahf
pushf
not
bswap
nop
movzbw
lea
call
push
pop
mov
fdivrp
mov
sbb
pop
pop
xor
jbe
cmpsb
mov
mov
inc
scas
xor
adc
jmp
sbb
push
mov
mov
inc
aam
pop
sub
sbb
xchg
cmove
mov
sub
sbb
or
pop
test
outsb
mov
es
or
jne
jbe
mov
hlt
ret
xchg
je
cld
push
and
ret
xchg
and
cltd
in
and
pop
roll
cmp
mov
and
mov
iret
xor
ror
shll
push
jmp
mov
mov
push
aam
fnstsw
pop
mov
jp
sub
and
out
push
adc
sbb
out
cld
call
pop
jnp
enter
sar
mov
mov
xchg
mov
jb
into
dec
outsb
cli
mov
jle
jp
mov
lock
or
push
outsl
and
sbb
mov
sub
add
daa
jp
int3
cltd
faddl
cmp
sti
pop
and
mov
movl
xchg
add
pushf
call
xor
call
jmp
pusha
nop
pusha
xchg
jmp
mov
call
call
pushf
call
pushf
xchg
pushf
pushl
movb
mov
pushl
ret
pushf
pushf
popl
clc
pusha
xor
call
lea
movb
pushl
ret
bswap
pushf
mov
pushf
xchg
push
mov
not
mov
jmp
pushf
xchg
movb
push
mov
pushf
pushl
ret
call
xchg
movb
pushl
pushl
ret
pushf
mov
xchg
movb
pusha
push
movl
pushl
ret
xchg
pushf
movb
pushl
ret
pushl
mov
pushf
call
jmp
mov
cwtl
lea
call
jmp
pushl
movw
mov
mov
mov
call
call
lea
pushf
call
mov
jmp
movw
nop
push
movw
pusha
mov
call
push
xchg
push
mov
pushf
pushl
ret
nop
call
pushf
movb
mov
mov
pop
mov
jmp
xchg
push
push
movsbw
lea
mov
movw
movl
push
mov
pusha
push
lea
pushf
xchg
pushf
push
pushl
ret
nop
lea
jmp
pushl
mov
mov
pushf
call
mov
pushf
push
push
jmp
pushf
call
movzbw
mov
pusha
movb
jmp
pushf
nop
jmp
mov
lea
jmp
mov
push
call
lock
fdivrp
aas
or
pushf
pop
subb
mov
das
into
add
mov
pop
dec
jne
dec
das
icebp
or
xchg
xchg
mov
in
into
ja
inc
cwtl
xor
inc
shrl
cmp
orl
add
shl
mov
gs
popf
push
push
out
cwtl
cmpsl
inc
emms
ds
rorb
xchg
sub
icebp
sub
sub
xchg
clc
out
orl
push
popl
in
loope
cmp
sbb
jle
push
repnz
pop
pop
and
test
leave
popf
das
ds
es
enterw
push
or
sahf
call
xchg
push
mov
sub
dec
pop
daa
cmpsb
aad
dec
sub
not
sahf
ljmp
jns
fisubs
lods
jb
jp
imul
dec
arpl
sub
sbb
out
nop
inc
inc
pop
ror
movsl
out
mov
das
xchg
popf
jae
xchg
lea
je
adc
outsl
pop
fdivl
mov
pop
shl
jg
ror
insl
inc
push
hlt
cmp
pop
bound
pop
out
in
mov
pop
jne
aam
xor
xchg
jae
test
inc
xlat
imul
sarl
sbb
push
push
arpl
pop
fs
pushl
pop
lea
ljmp
sti
rcll
shl
jl
imul
daa
xchg
in
push
or
out
outsb
sahf
fwait
bound
scas
andb
loop
inc
cld
mov
mov
jns
and
lods
in
inc
mov
mov
jno
cmp
out
imul
cli
xorl
push
mov
cwtl
cmp
sbb
lret
frstor
nop
add
fwait
int
es
ja
leave
adc
sub
mov
cmpsb
pop
add
jecxz
ds
mov
das
test
je
jo
mov
stc
sbb
dec
jo
jae
inc
out
aaa
add
jo,pt
push
mov
aam
cmpsl
jb
push
mov
sbb
jecxz
fsubp
pop
cmp
dec
cli
add
sub
faddl
les
mov
pop
pop
push
cs
aam
sbb
push
adc
scas
fdiv
lds
je
pop
dec
jb
sbb
lods
jae
inc
mov
sub
push
int
mov
push
bound
std
xchg
mov
add
push
xchg
push
mov
outsb
push
fldenv
xchg
pop
cmp
push
push
mov
add
fdivrl
rcr
xchg
xchg
das
inc
or
pop
dec
cmpsb
mov
mov
out
push
jp
sub
lcall
sub
sti
xlat
and
mov
sbb
pop
insl
dec
loop
mov
xchg
icebp
test
cmc
cmp
cmp
jl
jp
sub
jnp
cmc
leave
cs
mov
pop
mov
push
in
jnp
mov
or
orb
jp
push
mov
mov
jno
xchg
aas
mov
adc
sbb
loop
mov
sbb
adc
iret
push
insl
push
jp
and
push
fwait
es
cwtl
loop
fldt
sub
jmp
jns
or
scas
int3
adc
pop
adc
ror
jge
sub
jecxz
addr16
jnp
lds
lods
and
push
mov
shr
mov
cld
movsb
xchg
daa
push
int3
jle
fdivr
mov
cli
bound
rcrb
adc
mov
xor
mov
jne
ljmp
test
or
sbb
iret
sub
cmp
sti
and
sbb
sahf
js
cmp
mov
mov
push
popf
pop
mov
mov
mov
dec
sbb
daa
add
push
sub
xor
not
shr
aaa
xor
or
mov
sbb
in
ss
aad
dec
mov
xchg
pop
sub
mov
and
into
jnp
dec
and
fbld
jecxz
mov
push
scas
push
out
push
cs
dec
cmp
push
repz
or
sahf
into
fwait
incb
mov
dec
dec
insb
and
dec
dec
imul
pusha
mov
adc
movsl
popa
mov
adc
cmp
cmp
jecxz
inc
xor
das
xor
push
out
mov
negb
jb
mov
dec
nop
out
lret
dec
adc
adc
repnz
scas
mov
int3
pop
rcr
bswap
cmp
sti
and
movsl
cmp
xlat
mov
rcl
test
mov
sarl
cmp
outsb
cmp
outsb
cmp
mov
add
jb
push
lahf
add
test
xchg
or
adc
movsb
cmp
sbb
mov
lods
insb
out
dec
sub
js
pop
clc
imul
pop
lods
fdivrl
out
mov
pop
sahf
lcall
insb
jo
fstpt
pop
jnp
push
dec
cmpsl
inc
dec
mov
adc
enterw
pop
cmpsl
addl
inc
dec
cli
daa
jle
inc
loopne
sub
loop
lcall
rolb
cld
fmul
daa
repz
jno
aas
ss
into
orb
rcll
jbe
jae
mov
pop
mov
inc
leave
in
push
mov
stc
sub
inc
or
mov
into
int3
test
push
xor
ret
xchg
in
leave
push
movsb
sbb
fsubs
or
pop
push
test
fisubl
pop
xchg
bound
jns
dec
jmp
jecxz
repnz
pop
lret
mov
sub
stos
xchg
in
aam
sahf
jp
daa
pop
cmpsl
jmp
ja
in
adc
xor
or
jle
add
sub
pop
mov
cli
shll
in
in
enter
jb
enter
in
push
jns
add
stc
inc
jae
pop
push
and
jecxz
sarb
je
inc
mov
bound
xchg
xor
pop
sbb
or
in
sub
or
ret
xchg
ret
call
cltd
mov
mov
not
push
lret
sbb
ret
xchg
iret
mov
lds
jo
fstpl
xchg
into
repnz
js
mov
hlt
cmp
push
addr16
push
fcom
sbb
and
pop
xchg
addr16
mov
js
sbb
sub
dec
mov
mov
sbb
lods
sbb
push
jo
in
cmpsb
pushf
das
jle
and
push
inc
push
or
xor
js
and
test
adc
and
scas
pop
orl
push
pop
sbb
jmp
enter
push
add
out
loope
adcb
jbe
cltd
shl
stc
not
lahf
jns
inc
rol
test
test
mov
xor
mov
sysret
mov
fwait
cmp
xchg
cltd
fadds
add
cmpsb
sbb
mov
xor
aam
out
ja
jno
stc
aad
addr16
pop
adcb
push
push
int
pop
mov
mov
dec
sbb
leave
or
fstpt
mov
mov
fsubs
adc
lret
mov
mov
aas
cld
push
inc
test
mov
dec
push
adc
or
mov
decl
je
repnz
leave
and
testb
daa
bnd
pop
push
add
xchg
scas
aam
inc
cltd
pxor
inc
cmp
sar
inc
add
push
mov
inc
ja
sbb
popf
adc
sbb
lock
bound
dec
inc
lock
or
inc
xchg
mov
scas
lods
sub
or
cli
fisttps
out
push
sub
sarb
repnz
inc
addr16
push
lock
insl
mov
les
xchg
add
out
push
das
inc
inc
mov
cwtl
clc
jl
and
fcomi
jge
adc
mov
xchg
lcall
dec
lcall
out
push
mov
or
mov
clc
mov
xor
cmp
lea
and
xlat
movzbw
call
lea
jmp
mov
jmp
mov
push
push
pushf
lea
movw
xchg
movb
push
push
pushf
pushl
ret
pushf
push
xchg
mov
movb
pushl
ret
push
call
pushf
pushf
popl
push
call
mov
push
pushf
mov
lea
pushf
jmp
xchg
pushf
mov
xchg
not
bswap
mov
jmp
pushf
push
jmp
call
pusha
nop
movw
pusha
pushf
pushf
xchg
pop
mov
pushl
pushf
call
xchg
movb
mov
pushl
ret
mov
xchg
pushl
movb
pushf
pushf
pushl
ret
call
lea
movb
pushl
jmp
mov
pusha
nop
push
movw
xchg
pop
pusha
mov
lea
jp
lea
pushf
jmp
mov
movb
call
xchg
pushf
pushf
pushl
ret
jmp
mov
lea
bswap
call
mov
movzbw
lea
mov
mov
push
pushf
jmp
push
xchg
lea
mov
jmp
call
movw
nop
movb
movl
jmp
pushf
nop
jmp
xchg
push
pushf
push
pushl
ret
call
call
dec
cmp
into
xchg
jmp
xchg
pushf
pushl
mov
mov
pushl
ret
pushf
xchg
setg
cwtl
call
pushf
jmp
not
jmp
lea
call
call
pusha
push
push
mov
not
setle
movzbl
mov
call
push
call
lea
call
mov
pusha
lea
push
xchg
pushl
pushf
pushl
ret
call
pusha
pushl
pusha
jmp
mov
pushf
xchg
movb
setno
mov
lea
mov
pushf
pushf
pushf
lea
movb
pushf
mov
pushl
pop
pop
mov
call
jmp
pusha
call
mov
call
call
mov
pusha
call
pop
push
lods
push
ja
lcall
mov
lcall
and
mov
bnd
and
test
jecxz
fisubl
add
inc
int3
jge
or
addr16
push
std
movsb
leave
mov
and
mov
rorb
pop
jns
mull
movsl
push
imulb
fisubs
pop
dec
in
mov
xor
xchg
int
call
out
push
dec
xor
pop
sbb
inc
mov
hlt
leave
sbb
pop
jnp
mov
aad
dec
pop
mov
sub
cmp
xchg
mov
cmp
mov
mov
inc
daa
rorl
shrb
mov
push
pop
das
mov
test
or
aad
lahf
sub
icebp
ljmp
mov
shr
icebp
mov
stos
mov
mov
imul
mov
mov
mov
push
or
cmpsl
lret
rcll
push
out
pop
or
cmpsl
mov
jle
xor
cmpsl
sbb
outsb
into
push
pop
xchg
loop
dec
cmp
fbstp
push
sub
lds
jae
mov
xchg
lods
mov
scas
mov
pop
sbb
imul
mov
mov
andl
int
sub
sub
test
mov
fs
cmpsb
fisttps
mov
jg
or
sub
sbb
lods
mov
mov
shrb
adc
popa
data16
call
jl
stos
in
mov
into
stc
pop
sub
in
inc
or
adc
push
popf
jmp
movsb
or
xor
daa
jno
scas
sbb
adc
push
in
ret
movups
insl
sub
jne
das
imul
sbb
cmp
pushf
cmpsb
mov
mov
testb
mov
and
into
jg
push
push
mov
jp
mov
pop
push
cli
mov
aad
cmp
jg
lret
rcrb
cmp
xchg
incb
shlb
mov
imul
mov
push
into
push
sub
cmp
adc
jnp
rcrl
adc
hlt
out
xchg
out
sub
scas
jp
divb
aad
cmp
cltd
sbb
xchg
or
push
cltd
sbb
dec
sbb
gs
ss
xchg
mov
mov
scas
call
cmpsl
sbb
jmp
cmc
jno
dec
adc
and
cli
adc
or
lcall
xor
mov
popf
pushf
mov
bound
subb
in
mov
cmp
pop
cmpsb
push
sbb
scas
add
and
outsb
cmp
xor
imul
add
nop
popa
dec
cmpsb
daa
mov
or
nop
push
mov
fidivs
xchg
xchg
dec
repnz
inc
mov
xor
lods
dec
xchg
sahf
push
daa
jmp
jecxz
sahf
inc
jecxz
jecxz
test
inc
data16
or
jecxz
mov
aad
sti
or
xor
test
or
xchg
inc
adc
mov
adc
mov
pop
xchg
ret
ja
test
stos
jmp
pusha
les
shrl
xor
push
mov
xchg
lar
sbb
repnz
in
pop
jmp
adc
stc
pop
es
xchg
es
mov
stc
ds
ds
leave
test
xchg
repnz
xor
insl
pop
ds
ret
fldenv
inc
xchg
fdivrl
jae
in
xchg
cli
jno
pop
filds
xchg
cmpsb
push
and
mov
xchg
jle
shlb
jl
insb
mov
je
add
fsubrl
leavew
adc
mov
or
pop
sub
cmovns
out
adc
lret
fcomps
jmp
push
nop
lea
ja
push
lea
push
mov
pushf
pushf
pushl
lea
movw
mov
pop
mov
jmp
not
lea
pushf
pop
jmp
mov
movb
lea
jno
pusha
mov
call
mov
bswap
movzbl
bswap
mov
push
push
pushf
call
pushf
call
mov
adc
addr16
sarl
jg
mov
addr16
roll
fisttps
rcll
inc
adc
addr16
rorl
pcmpgtb
out
out
push
rorl
pop
into
xor
adc
adc
addr16
rcrl
sub
adc
addr16
shll
ja
out
and
out
push
shll
mov
stos
iret
arpl
adc
addr16
rcll
inc
into
sbb
addr16
rorl
rcr
fisubs
imul
popa
shr
cli
mov
push
shll
xchg
mov
addr16
rorl
outsb
and
addr16
xlat
xorl
adc
addr16
fldt
sub
adc
addr16
sub
adc
addr16
roll
adc
adc
addr16
shrl
push
xchg
adc
addr16
rorl
or
fadd
adc
adc
addr16
sarl
inc
cmp
mov
sti
adc
addr16
rorl
stos
das
xchg
xor
call
fcoml
adc
addr16
rcll
popf
mov
call
mulb
adc
addr16
rorl
mov
jecxz
out
push
roll
leave
xor
clc
adc
addr16
sarl
loopne
test
addr16
ror
xchg
mov
dec
pop
push
call
jp
in
dec
adc
roll
ret
aam
adc
out
push
rcll
lcall
out
push
roll
jo
mov
sub
adc
inc
lret
out
lea
out
push
rorl
cmp
adc
addr16
rcrl
jno
cmp
addr16
shrl
sub
adc
addr16
shll
push
xor
mov
adc
addr16
roll
mov
pop
xor
adc
addr16
shll
sub
gs
addr16
rorl
add
adc
addr16
sarl
loope
push
cmpsb
leave
in
adc
addr16
shll
std
cmp
addr16
sarl
mov
call
and
loope
cmp
out
push
shl
jl
clc
jg
icebp
adc
addr16
rcll
das
fiadds
addr16
roll
push
and
out
push
sarl
add
adc
addr16
shl
mov
cltd
sbb
push
xlat
repz
cltd
push
popa
inc
adc
addr16
shl
add
fistps
adc
addr16
rorl
jns
dec
mov
push
shll
es
sbb
call
mov
inc
jno
mov
rorl
inc
ror
jbe
out
push
shlb
cli
sbb
xchg
cmp
roll
dec
sbb
xlat
pop
adc
addr16
shl
xchg
icebp
icebp
mov
adc
addr16
cs
scas
cmpsl
test
adc
addr16
rcrl
enter
xor
call
mov
notl
out
push
rcr
xor
std
cli
mov
call
xchg
adc
addr16
rol
test
negb
adc
addr16
shll
gs
fstl
adc
addr16
or
dec
jns
out
push
shl
xor
out
mov
addr16
aad
adc
dec
pop
lods
adc
addr16
rcl
xchg
out
loope
out
push
rcll
les
out
push
aam
fistpl
adc
addr16
roll
mov
addr16
roll
decb
in
push
rcrl
add
into
dec
loopne
out
push
shrl
pop
imul
mov
inc
sti
push
gs
addr16
ror
shlb
adc
addr16
shl
mov
fwait
pusha
inc
icebp
adc
addr16
shll
imul
adc
addr16
shrl
jb
sub
dec
adc
addr16
shll
in
push
mov
jecxz
call
add
adc
addr16
shll
filds
out
push
rorb
scas
mov
call
fs
pop
and
adc
addr16
shll
clc
jg
into
adc
out
push
fstps
out
push
ror
popf
mov
cmp
adc
addr16
sar
jp
cmp
xor
push
rorl
sub
push
loop
adc
addr16
sarl
sub
scas
fldl
sarl
mov
adc
addr16
roll
sbb
call
roll
and
adc
addr16
sarl
inc
lret
call
out
push
xlat
test
or
fcompl
pusha
adc
addr16
sarl
adc
adc
addr16
shlb
add
lock
in
push
sarl
daa
or
out
push
ror
sbb
out
call
sbb
pop
pop
hlt
adc
addr16
sarl
mov
hlt
and
rcrl
fcoml
call
hlt
xchg
call
loope
sub
sub
rcll
out
leave
fwait
adc
addr16
shlb
adcl
pop
daa
mov
roll
xchg
pop
in
pushf
adc
addr16
sarl
lock
sub
adc
addr16
roll
hlt
adcl
push
rcll
clc
inc
testb
out
push
push
aas
fsub
cmpsl
loopne
adc
addr16
rol
sbb
adc
addr16
shrl
and
jecxz
popa
adc
addr16
shll
mov
adc
addr16
sarl
les
call
addr16
std
fimuls
call
xchg
mov
repnz
adc
addr16
shr
and
data16
cmc
adc
addr16
shl
ret
sub
adc
shll
xchg
enter
mov
out
push
sarl
fidivl
adc
addr16
rcrl
mov
xor
in
push
shll
dec
adc
addr16
sarl
cld
cwtl
add
call
xchg
ja
stc
in
adc
addr16
sarl
pop
inc
mov
call
push
mov
adc
addr16
rcrl
shrb
mov
rcll
popa
in
int
xchg
adc
addr16
shll
lahf
mov
addr16
rorl
enter
adc
addr16
fimull
mov
adc
addr16
roll
movsl
pop
lret
adc
addr16
sar
or
call
cmpb
call
sbb
xchg
push
roll
test
and
call
add
adc
addr16
shl
test
adc
addr16
shll
stc
movsl
jns
dec
adc
addr16
shll
cmpsl
arpl
adc
addr16
rcll
outsb
cwtl
std
sbb
roll
dec
insl
pop
bound
out
push
rcll
repnz
inc
adc
addr16
roll
pop
push
adc
addr16
shll
out
jae
shlb
rcrl
push
inc
and
push
rorl
jge
xor
bound
out
push
jmp
sbb
adc
addr16
fistps
or
inc
and
adc
addr16
shrl
test
sub
adc
shll
popf
roll
adc
addr16
rcrl
and
mov
roll
cmp
adc
addr16
shrl
popf
stos
cmp
call
test
adc
dec
inc
adc
addr16
rcr
addr16
pop
and
adc
addr16
roll
cmpsl
inc
cmp
push
adc
addr16
rorl
mov
adc
addr16
shll
flds
inc
dec
sub
out
push
rcrl
cli
pop
in
dec
push
mov
out
push
shlb
icebp
cmp
in
push
shrl
roll
adc
addr16
rcrl
mov
arpl
adc
addr16
shll
pop
out
or
push
rcll
repnz
mov
addr16
rcll
dec
pusha
movsl
in
mov
out
push
shlb
mov
adc
addr16
sarb
xor
mov
out
push
rcrl
js
cli
adc
adc
addr16
rcrl
jno
push
inc
adc
out
push
shll
dec
sub
out
push
rcr
pushf
fdivs
out
push
sarl
cmpsb
repz
pop
sub
shl
jg
lahf
or
pop
adc
addr16
rorb
pop
adc
addr16
rcl
or
inc
adc
addr16
shr
adc
push
xlat
push
adc
addr16
rcll
sub
xchg
stos
push
adc
addr16
shll
stos
mov
call
inc
repz
scas
fincstp
adc
addr16
xlat
cmp
adc
sub
call
pop
mov
adc
addr16
rcrl
out
mov
push
andb
mov
call
stos
popa
sub
push
push
adc
addr16
shrl
aas
push
xor
cli
adc
addr16
sar
and
je,pn
imul
test
sbb
dec
or
out
push
shrl
gs
adc
push
rcll
test
adc
addr16
rcl
cmp
push
lds
call
outsl
sbb
sti
add
adc
addr16
shll
xchg
cwtl
sbb
call
jl
adc
addr16
shll
sub
and
adc
addr16
rorl
pop
pop
adc
addr16
shrl
xchg
jp
add
adc
addr16
sarl
adc
rcll
sub
adc
addr16
fnstenv
fsubl
js
adc
addr16
shll
pop
fistl
out
push
roll
mov
adc
addr16
shll
sub
sar
test
call
repz
fsubr
mov
in
push
rcrb
jge
adc
addr16
les
daa
mov
call
or
adc
addr16
shll
adc
sbb
jne
out
push
roll
scas
lahf
mov
call
aaa
xchg
das
cli
inc
inc
adc
addr16
shll
ja
xor
mov
shll
pop
xor
in
adc
addr16
shr
arpl
outsb
sub
leave
adc
addr16
shll
jmp
es
push
sarl
and
call
and
or
out
push
rcll
scas
xor
out
push
rcll
push
xor
addr16
rorl
pop
pop
sarb
push
roll
roll
call
push
rorl
in
loop
adcl
addr16
sarb
sbb
cmp
call
insb
notl
add
adc
addr16
shl
cwtl
and
fwait
adc
addr16
sar
jne
shlb
or
call
out
xchg
nop
adc
push
shll
push
push
addr16
rcl
lods
jns
sub
addr16
rcr
test
ljmp
push
rcll
outsb
push
js
push
adc
addr16
rcrl
outsl
loopne
mov
sbb
call
mov
adc
out
push
shrl
ja
sub
mov
adc
addr16
rorl
adcb
adc
addr16
rorl
add
out
push
shll
cltd
popa
sub
push
shrl
cmpl
rorl
clc
dec
xchg
insb
pop
adc
addr16
fsubrs
nop
adc
addr16
roll
pop
lods
lods
adc
addr16
shll
add
pop
dec
or
push
rorl
and
insb
cwtl
mov
call
fildl
call
addr16
rcll
jns
out
add
push
aam
mov
mov
out
push
pop
ss
scas
mov
sbb
call
jg
sub
sbb
out
push
shll
pop
push
adc
addr16
rorl
dec
lret
inc
jo
out
push
rorl
or
jmp
addr16
roll
ljmp
call
outsl
adc
addr16
shlb
fwait
push
adc
adc
addr16
shll
subb
pop
ret
addr16
roll
daa
call
call
cld
xor
and
shll
and
push
shll
or
adc
addr16
shrl
sbb
pop
test
and
out
push
sarl
sub
dec
xor
push
rorl
cmpsb
leave
lock
adc
addr16
rcll
xchg
inc
icebp
add
adc
addr16
ror
jae
mov
mov
adc
addr16
rorl
pop
sub
jecxz
push
sarl
cmp
ds
jno
call
push
cmp
mov
or
sar
lret
fldcw
out
push
roll
mov
cmpsb
sbb
adc
addr16
ficompl
imul
push
rcrl
mov
out
push
rcrl
jg
in
je
out
push
shrl
mov
call
xor
out
push
shl
aaa
mov
adc
addr16
rcrl
shll
addr16
rcrl
scas
pusha
pusha
adc
addr16
rorl
add
sarl
call
push
roll
and
call
xor
call
movsl
mov
aam
xor
out
push
aad
cmp
xchg
adc
addr16
rcll
jecxz
adc
addr16
rcrl
stos
ljmp
push
xor
ret
addr16
roll
xor
xor
push
roll
mov
or
push
shll
in
push
fistps
shrl
lods
rcrl
pop
mov
out
push
rorl
outsb
xor
imul
xor
cmp
in
push
rorl
and
adc
addr16
shlb
xchg
push
jecxz
adc
addr16
shlb
stos
out
ss
adc
addr16
shrl
mov
call
dec
mov
ljmp
shrl
scas
orb
adc
addr16
rclb
sub
xchg
daa
repnz
addr16
rol
cwtl
and
addr16
shll
pop
aas
inc
and
adc
addr16
roll
mov
adc
addr16
rcll
filds
in
push
sarl
inc
push
cld
lret
adc
addr16
sarl
mov
add
adc
addr16
rorl
push
cltd
inc
adc
addr16
cmpl
rorl
sub
adc
addr16
rcll
repz
lods
int
call
inc
seto
and
adc
addr16
shrl
rolb
xchg
mov
call
inc
push
stos
xor
mov
rorl
push
int
fisttpll
call
addr16
ljmp
sarl
jp
xchg
xchg
pusha
adc
addr16
shll
stc
or
in
push
inc
add
adc
addr16
shrl
test
out
push
rcll
adc
std
sub
adc
addr16
rol
cmp
popa
adc
addr16
rcl
pop
pop
imul
push
shl
repz
adc
addr16
rcll
popf
sbb
addr16
sarl
lock
addr16
roll
xchg
cwtl
mov
call
cmp
sbb
inc
adc
addr16
rolb
out
test
shrl
shrl
call
xchg
lock
out
push
rcll
lods
loop
adc
addr16
shll
adc
adc
addr16
rorl
sbb
adcl
dec
inc
push
lcall
push
rcll
xor
out
push
pop
jg
add
cld
push
adc
addr16
shll
int3
xlat
adc
addr16
rcrl
inc
sub
out
push
shll
inc
ret
addr16
roll
hlt
push
bound
adc
addr16
shll
adc
push
rcrl
rclb
mov
pop
adc
addr16
sarl
push
test
or
push
sarl
mov
adc
addr16
rorl
insb
pop
test
and
call
mov
sbb
mov
adc
addr16
roll
int3
jae
or
adc
addr16
rorl
sti
jbe
pop
call
sar
cmp
sbb
addr16
cli
push
push
mov
jmp
pusha
nop
pushf
push
xchg
jmp
jmp
xchg
pusha
jmp
mov
jmp
xchg
movb
pushl
push
pushl
ret
call
push
pusha
lea
pushl
mov
xchg
push
pushf
push
pushl
ret
pushf
pusha
mov
mov
movzbw
bswap
jmp
movw
mov
pushl
lea
push
mov
movw
xchg
mov
pushf
movb
mov
pushl
ret
xor
cli
sub
add
push
movb
xor
clc
cmc
xor
bt
xor
pushf
xor
push
xor
clc
stc
xor
cmp
cmc
xor
movb
pushl
popf
pusha
pushl
ret
pusha
pushf
popl
pushf
clc
xor
push
test
xor
test
cmc
xor
jmp
lea
push
push
call
mov
jmp
xchg
mov
pushl
ret
pushf
xchg
pushf
pushl
ret
call
xchg
pushf
mov
call
call
movw
lea
call
push
pushl
call
xchg
push
pushl
ret
mov
pushl
pushf
lea
push
xchg
pushl
pushl
ret
mov
jmp
movzbw
movsbl
pop
pusha
call
call
lea
jg
pusha
mov
movl
push
jmp
mov
pusha
push
pushl
push
lea
pushf
call
xchg
pushf
push
pushl
ret
pushl
jmp
pushl
mov
lea
not
not
mov
mov
call
call
nop
lea
jl
pushf
pusha
xchg
lea
pop
mov
pushl
lea
call
pushf
xchg
pushf
pushf
pushl
ret
call
mov
not
lea
bswap
mov
pusha
jmp
movsbw
mov
jmp
movb
xchg
movw
movb
movb
pushl
ret
bswap
pusha
setg
push
nop
not
movsbl
lea
jl
pop
pushf
movb
xchg
jmp
pushf
call
inc
mov
or
std
das
addr16
pop
aas
jle
add
loopne
push
push
jmp
jb
mov
outsl
xchg
and
fwait
rolb
das
push
imul
loope
pop
pop
shrl
ja
pop
sub
jg
in
pop
bound
xor
test
dec
pop
jbe
cmp
stos
leave
pop
mov
es
xchg
xlat
popa
dec
inc
movsl
inc
xchg
cmpsl
paddusb
sub
sub
mov
ficoms
push
in
mov
inc
lret
hlt
shrb
test
mov
push
call
outsb
aaa
inc
mov
mov
out
pop
daa
leave
cmpsb
lods
push
push
mov
or
movsl
xor
inc
enter
scas
mov
les
orb
mov
xchg
test
imul
popa
call
enter
into
push
pop
mov
popa
fwait
out
test
push
xor
inc
loopne
stos
repz
cmp
in
imul
mov
insl
and
int
mov
stos
sbb
adc
jmp
loop
mov
inc
mov
adc
jg
mov
lahf
out
jp
div
jl
mov
inc
divl
jle
ja
ss
or
sbb
ja
pop
lods
jnp
push
mov
mov
dec
addr16
sub
dec
shll
mov
cli
push
fwait
loop
fs
clc
pop
les
lret
push
lds
mov
cmpsb
xchg
adc
repz
shll
dec
xor
adc
or
rcrl
sbb
jne
xor
fnstcw
inc
das
sub
arpl
arpl
mov
test
push
ljmp
psubsb
cmp
scas
icebp
cmp
ja
jmp
in
mov
or
or
lock
and
loope
jnp
imul
cltd
cmp
loop
fidivl
loopne
mov
cmp
mov
out
data16
rol
and
jecxz
xor
or
out
push
cld
xor
adc
in
cmpsb
inc
jo
inc
push
jmp
lcall
dec
sbb
vmovshdup
arpl
jge
dec
cld
data16
test
stos
push
lret
iret
xchg
adc
mov
push
pop
inc
push
push
cmp
inc
sbb
in
jmp
sti
incl
xchg
xchg
adc
or
dec
das
scas
lcall
pop
xchg
fcomi
push
xchg
or
xchg
push
xor
jo
xchg
inc
or
mov
je
mov
mov
stos
rcrl
lret
test
std
mov
das
mov
or
push
icebp
dec
and
movsl
cmp
rol
xchg
sarb
leave
jb
movsl
test
adc
xchg
loope
ficoml
inc
cmp
adc
stos
jnp
add
lret
or
lcall
sbb
and
mov
xchg
push
data16
or
jecxz
jge
or
clc
sbb
add
mov
push
lods
ja
sbb
loopne
xor
hlt
lods
jle
popf
cwtl
add
insl
mov
imul
popf
lods
js
loope
jmp
pop
mov
pop
stos
test
pop
shlb
lods
testl
pop
lds
fwait
hlt
aas
fwait
aad
jp
popa
in
daa
fisubrs
ja
and
sub
xchg
test
xchg
adc
xchg
xor
lods
push
pop
lahf
or
movsl
test
add
jmp
int
push
test
outsb
icebp
add
sbb
out
jno
mov
dec
mov
lds
mov
push
dec
cmp
xor
sbb
lods
jno
mov
and
lret
out
fisubl
jecxz
repz
pop
pusha
repz
jae
leave
push
cmp
into
daa
repnz
cld
dec
inc
and
aas
xor
pop
mov
pusha
loope
out
sub
es
mov
xor
leave
sub
cmp
adc
mov
push
dec
xchg
std
cwtl
lods
push
mov
pusha
test
jge
cltd
cmp
push
in
pop
das
stos
mov
lcall
icebp
cwtl
arpl
and
or
jno
xchg
mov
push
sti
xor
mov
fsubs
insl
lcall
jnp
push
fcoml
lcall
insb
mov
pop
test
into
sbb
xor
mov
and
mov
insb
xorb
lds
lods
fcomip
mov
jns
pop
cli
sahf
jmp
inc
lcall
and
stos
dec
or
xor
pushf
mov
xchg
fnsave
das
mov
jno
lret
jl
sbb
mov
ja
pop
mov
xorl
xor
pop
mov
jbe
daa
pushf
adc
jle
aam
xchg
mov
sub
xchg
fidivs
cmp
xchg
sbb
imul
aam
loop
mov
shl
hlt
mov
mov
jecxz
movb
xlat
ficomps
jl
aad
enter
add
sub
inc
push
dec
mov
pusha
lret
sbb
cmp
popa
mov
fdivrs
movl
arpl
mov
mov
jmp
jno
inc
testb
cmpl
cmpl
imul
inc
into
in
je
mov
sarb
fcmovne
adc
inc
lea
pop
or
test
mov
jb
loopne
ja
xchg
push
and
lret
popl
pop
lcall
cli
imul
out
negl
mov
push
pop
mov
pop
cmp
scas
jns
mov
sahf
testl
push
mov
scas
lea
test
das
push
xor
or
cmp
iret
or
jb
push
pop
mov
jge
cmp
jae
pop
xchg
ret
pop
test
inc
arpl
imul
rcl
orb
mov
cmp
jmp
cmpsl
add
cli
mov
mov
xchg
jp
fsubrl
loop
imul
popf
and
adc
dec
outsb
jns
mov
aam
insb
mov
jbe
push
push
sarl
add
dec
js
xchg
jle
in
divb
pop
in
loope
adc
test
add
scas
xchg
jmp
fs
fidivl
orl
dec
stos
test
mov
orb
decb
cs
out
xchg
int3
push
imul
lods
push
push
aaa
jp
imul
fnstenv
mov
pop
sbb
xchg
shrb
lcall
mov
ss
out
push
scas
inc
insb
das
cld
mov
xchg
push
in
dec
test
pop
xchg
in
mov
scas
les
cs
push
fwait
ljmp
add
sub
cmp
sbb
insb
imul
lods
sti
ficoml
cs
ljmp
arpl
cld
enter
push
mov
mov
es
cmp
fiadds
test
mov
jge
ljmp
or
fs
adc
movsb
jecxz
ss
jno
pop
inc
add
or
inc
popl
jg
daa
pop
sbb
pusha
dec
and
sbb
inc
cld
dec
ficomps
scas
imull
das
push
gs
imul
out
in
jp
xchg
lcall
arpl
mov
jns
fldt
roll
dec
cmpsb
cmp
stos
xor
fiadds
daa
push
movsb
movsb
std
dec
mov
sti
mov
jo
out
and
aas
ss
in
pop
in
fcompl
incb
xor
pop
add
xor
xor
popf
inc
and
push
popf
ss
xor
sub
sub
dec
add
test
mov
and
leave
iret
jnp
insb
outsl
mov
sbb
cmp
lcall
out
sub
cld
mov
fs
xchg
pushf
push
push
pushl
ret
movzbl
not
movzbw
mov
jmp
jns
mov
std
frstor
jl
inc
and
arpl
fstps
addr16
and
lret
inc
or
add
sbb
xchg
jns
adc
adc
push
add
xlat
repnz
int
ret
enter
push
ljmp
insb
leave
leave
or
mov
xor
dec
jg
addr16
rolb
jle
movsb
insl
pop
inc
sbb
outsl
ret
pop
push
scas
mov
std
jl
or
fdivrp
add
fists
mov
jg
repnz
jmp
mov
mov
mov
insb
aaa
or
inc
in
and
je
fistpll
sbb
and
mov
jle
xor
std
jp
add
stc
xor
jle
jecxz
in
clc
jnp
mov
and
dec
cld
and
sub
sti
rorl
data16
xchg
and
loop
mov
xchg
xor
add
sub
xchg
in
clc
lea
fsubrs
adc
test
test
jno
repz
dec
mov
test
cmovno
cmc
popf
push
push
mov
sbb
test
lods
addr16
xchg
push
xchg
in
cmp
pop
stos
sbb
mov
jle
std
xchg
cmpl
dec
mov
aas
or
mov
lods
in
jmp
lret
ds
movsb
mov
add
loope
mov
jg
xchg
push
mov
cmpps
pop
rep
out
push
aas
or
imul
aad
fsubrl
fimuls
or
jbe
fadds
xor
xchg
xchg
cmp
addb
and
adc
jbe
cmp
mov
outsb
xor
lods
dec
in
movsb
cmp
lock
and
test
jns
das
push
fadds
adc
mov
mov
pop
out
dec
adc
lret
xchg
addr16
jae
inc
aaa
dec
cmp
jmp
out
aam
ret
sbb
imul
mov
adc
push
or
imul
cmp
xor
or
mov
push
push
sub
pop
mov
pusha
xchg
cmp
fisttpl
adc
fwait
cmpl
int3
cltd
sahf
dec
xchg
daa
jmp
bound
inc
or
sbb
and
sbbl
sbb
and
les
mov
xor
mov
add
in
in
mov
hlt
addr16
dec
loopne,pn
mov
fidivs
movsb
shl
sti
scas
xchg
add
jmp
cltd
xor
mov
repz
jg
in
fldt
xor
es
enter
movsl
popf
mov
cmp
mov
mov
mov
lock
jnp
cmp
inc
int3
mov
rcrb
mov
push
repnz
inc
adc
xchg
sub
and
in
hlt
rclb
xor
cmc
sti
push
loop
stos
je
lods
out
push
mov
into
ds
cmp
test
inc
pop
push
cmp
pop
std
outsl
mov
cli
fucomip
test
jle
ss
das
inc
xchg
repnz
add
adc
and
pop
mov
divb
adc
push
or
popa
jb
mov
xchg
add
aas
inc
aam
dec
das
or
jle
or
pop
shlb
dec
shrl
cmc
mov
jo
dec
fpatan
inc
nop
cwtl
mov
adcb
cmpsl
mov
xchg
cld
pop
adc
sub
fs
int3
push
pop
ret
roll
int3
das
stc
mov
in
rorl
stos
mov
inc
push
cmc
movsb
clc
out
inc
and
jp,pn
cltd
cmpsb
add
jmp
jbe
adc
sbb
pop
mov
dec
repz
xlat
jne
std
lea
sub
mov
lods
dec
pop
and
dec
or
fiaddl
or
and
repz
call
adcl
sahf
add
add
movsl
mov
mov
nop
mov
ja
es
movsl
ljmp
xor
lcall
rol
cvtdq2ps
mov
shlb
adcb
mov
pushf
fidivrl
mov
jmp
in
mov
shr
xor
fdiv
lret
in
and
fisubl
popa
sub
xlat
lahf
pop
outsl
mov
inc
dec
popa
in
xchg
es
outsl
push
inc
loop
and
idivb
daa
dec
or
mov
mov
dec
out
scas
push
xchg
arpl
cmc
mov
loop
inc
sahf
es
test
sahf
in
jne
cmp
or
cs
popa
dec
push
push
scas
sahf
out
hlt
push
adc
cmpb
or
push
enter
mov
xlat
pop
jl
sub
enter
adc
mov
xor
lods
stos
dec
mov
mov
leave
jns
cld
xor
mov
loop
insl
cmp
lods
push
sahf
stc
mov
xchg
push
pushl
ret
mov
push
pusha
lea
pushf
pushf
jmp
and
mov
push
lcall
adc
ljmp
leave
add
icebp
iret
inc
lcall
into
stos
je
sti
ljmp
in
scas
adc
xor
out
fucomip
xor
add
cli
dec
adc
stos
repnz
shll
mov
cmpsb
fldt
pop
sbb
out
adc
mov
inc
pop
fistpll
inc
mov
mov
lods
add
xor
mov
cmp
dec
rcrb
notl
pop
push
fs
xor
sub
cmp
fdivrp
cwtl
pop
and
pop
mov
ja
std
jg
lods
adc
sub
das
nop
sarb
sub
loopne
js
mov
xchg
andl
push
push
lods
stc
mov
rorl
lock
mov
std
add
inc
outsb
fsubs
outsl
inc
dec
adc
inc
js
jmp
add
fcoml
hlt
cwtl
test
rolb
push
dec
pop
cmpsl
xchg
ss
xlat
sub
push
xchg
mov
xchg
addb
lods
notl
push
int
cmp
and
sbb
jb
add
mov
fidivl
scas
ss
jno
mov
add
popf
subb
fcoms
out
inc
inc
ss
dec
mov
stos
std
push
mov
push
add
ffreep
dec
mov
or
mov
jge
push
aam
add
and
cld
aas
pop
push
sbb
sbb
push
scas
xlat
pop
lret
adcb
pushf
aam
xchg
mov
jp
fcomps
cmp
mov
push
xchg
mov
imul
pop
jno
adc
dec
xchg
jne
js
nop
and
cmpsb
loopne
xor
fistpll
imul
leave
mov
adc
outsl
dec
xchg
outsb
fdivrs
and
cmpsl
btc
je
push
test
nop
dec
test
adc
roll
xchg
fst
add
subb
fdivrp
inc
or
push
pushl
xchg
cmp
mov
outsb
loop
js
inc
lret
fldenv
aas
jmp
stos
jae
cwtl
daa
stc
test
data16
mov
dec
pop
pop
and
ss
ret
mov
inc
jo
mov
and
lcall
repnz
pop
sub
push
lahf
mov
mov
fdivl
mov
push
xchg
hlt
or
mov
push
negl
pop
sub
push
sbb
nop
jo
pop
mov
fs
in
sbb
adc
and
adc
lret
cmc
pop
lahf
dec
cmpsb
mov
test
inc
outsl
adc
lods
in
inc
mov
test
or
sbb
push
xor
pop
cmp
inc
cli
add
xlat
lods
pusha
movsb
cmp
adc
adc
shll
mov
mov
rcrb
mov
ja
stos
push
fldt
data16
pusha
ds
mov
fisubrs
inc
sub
sub
out
mov
test
ds
push
into
loope
mov
daa
mov
dec
es
mov
sub
aas
flds
push
and
fsubr
orl
cmp
sbb
nop
call
push
ljmp
les
mov
add
and
xchg
loope
pop
xor
lret
xchg
ljmp
stos
inc
cmp
jmp
and
insb
clc
mov
loopne
dec
stos
mov
adc
push
lahf
cmp
fnstcw
add
pop
cwtl
insb
add
xchg
cmp
sub
and
adc
repnz
xor
scas
jnp
iret
push
je
mov
aam
out
xchg
jo
xchg
jo
test
xor
cli
add
sbb
imul
add
lock
sbb
adc
xlat
fstpt
arpl
das
xor
cld
sub
mov
dec
xor
rcrl
mov
pop
fs
repz
push
mov
inc
loope
ds
push
enter
stc
adc
outsb
fildll
jne
mov
outsl
or
xchg
jb
sahf
mov
mov
movsb
mov
jl
jnp
mov
push
xor
shll
cmp
cld
adc
scas
or
push
lea
jns
lea
jmp
aaa
icebp
cltd
es
jmp
call
movb
call
mov
lea
movb
sets
mov
pushf
call
bswap
not
mov
jmp
hlt
xchg
cmp
std
das
jp
add
fwait
jo
xor
lods
mov
xchg
add
mov
mov
mov
lods
iret
push
adc
aad
lods
mov
xor
sub
sub
pusha
cmp
add
repnz
in
mov
stc
std
enter
xchg
pushf
and
adc
arpl
or
out
or
sub
xchg
push
or
cmp
ja
scas
cwtl
loopne
ljmp
xchg
mov
cmp
jo
jbe
xchg
jge
pop
movsb
lock
out
dec
mull
imul
std
xchg
inc
and
push
add
push
mov
xchg
xlat
jg
jno
inc
inc
lahf
pop
pop
push
sub
cmp
loopne
and
rcrl
bound
dec
add
jns
std
dec
sbb
or
jnp
mov
mov
jno
sbb
or
sar
dec
pop
inc
fs
xchg
adcl
cld
ja
push
movsb
mov
gs
repnz
popa
dec
sub
xchg
add
mov
cmp
dec
and
add
in
stc
xchg
fcmovnbe
out
mov
add
shlb
dec
jns
push
xchg
mov
nop
jecxz
push
add
dec
int3
jle
paddsw
mov
icebp
jae
pavgw
mov
push
sbb
sub
mov
pushf
test
fimuls
push
push
outsb
xor
add
stc
pop
adc
jnp
push
cmp
push
jne
shl
dec
addr16
les
push
sbb
insb
cmp
mov
pushf
pop
pop
test
and
cwtl
xchg
je
xor
pop
outsl
cmp
scas
enter
or
lods
imul
dec
mov
xchg
push
rolb
cs
out
sbb
test
popf
lods
mov
pop
ds
pop
ret
inc
test
incl
out
cmpsb
push
loopne
imul
test
or
xchg
dec
cmp
sbb
js
xor
psubd
sub
rol
or
mov
popf
loope
rcll
mov
adc
cld
add
mov
jbe
sub
xchg
xor
xor
cmpsb
mov
int
outsl
orb
push
enter
lea
cs
sub
jb
mov
lahf
jne
cmp
popf
nop
lods
sub
cmpsb
mov
mov
lret
cmp
inc
jnp
loop
lods
jnp
xor
imul
leave
xchg
cmp
pop
add
adc
imul
aad
cwtl
popf
daa
lds
arpl
in
stc
lret
xchg
jae
lahf
xchg
cwtl
and
jno
xor
loope
and
out
icebp
and
xchg
add
jnp
xchg
pop
mov
push
pop
adc
add
sub
loopne
lret
stos
notl
push
lcall
push
out
or
inc
xchg
pop
cmp
cmp
xor
mov
push
push
push
xchg
mov
sbb
xor
ret
imul
mov
pusha
sub
jns
hlt
arpl
sbb
cmp
iret
loopne
pop
and
cli
xor
adc
sbb
push
mov
ds
gs
push
mov
sbbb
imul
cli
xor
jp
sub
sbb
push
rorl
xchg
pusha
mov
jmp
xchg
xor
es
jmp
dec
ret
shl
insb
pushf
jmp
push
push
push
enter
jmp
js
sbb
fs
hlt
out
test
out
stos
pop
fwait
xor
xchg
mov
pop
add
inc
mov
lcall
enter
xchg
sbb
xlat
and
inc
adc
xchg
int3
test
in
test
call
mov
not
add
nop
inc
cmpb
or
das
pop
mov
cwtl
mov
cltd
jns
call
sub
addb
cmpsl
lds
out
xor
div
mov
fwait
and
mov
mov
add
fmuls
inc
ljmp
jg
cmpsb
fs
dec
sub
insl
push
xchg
dec
xchg
ja
notb
inc
inc
adc
inc
xchg
pop
out
sahf
mov
iret
pushf
fs
je
jns
sub
mov
dec
lret
mull
sbb
push
sub
mov
je
or
je
or
inc
add
movl
and
movw
pushl
ret
xchg
pushf
pushf
mov
mov
push
movsbw
mov
movb
mov
push
lea
push
jmp
stos
inc
dec
je
std
push
imul
das
mov
xchg
cmp
inc
inc
inc
les
and
fcoms
outsl
stos
jns
xor
jb
pushf
rep
je
and
xchg
push
test
das
test
js
pop
outsb
jg
stos
in
shll
pop
cmp
jg
or
cmp
inc
inc
push
subl
lahf
push
movsl
orb
popa
and
mov
mov
lret
in
out
adc
sub
jecxz
out
jmp
sbb
loopne
push
push
cmp
push
or
ss
je
inc
mov
std
lds
jl
xchg
cs
cmpsb
cld
cmpsl
mov
pop
mov
es
xchg
jmp
fdivrp
push
pop
cmpsl
or
gs
stos
ss
outsl
push
xor
add
sub
jp
hlt
ss
xchg
addr16
pop
xor
and
jg
xchg
dec
lret
dec
int
int3
dec
add
pushf
daa
sub
jae
std
jo
or
imul
in
enter
dec
movsb
daa
push
mov
add
pop
or
jl
jb
or
pop
cmpb
dec
add
aam
rorl
sti
out
sub
pop
push
xor
cmc
xchg
mov
or
jae
jecxz
repz
xor
aad
mov
fs
mov
push
jnp
sub
daa
jp
push
mov
negb
nop
lret
pop
adc
inc
sbb
adc
es
xor
lcall
xor
xchg
mov
in
js
pop
out
ds
lret
xchg
add
or
lret
xchg
lret
int
mov
jge
dec
aam
ss
jo
add
and
ret
inc
ljmp
push
enter
jnp
scas
pop
mov
enter
movsb
cld
xchg
xor
lods
sub
inc
sub
adc
daa
sub
or
scas
mov
dec
mov
ret
or
lods
iret
imull
int
aam
out
or
scas
lods
ja
mov
je
mov
repz
xchg
jns
mov
add
lea
add
jo
push
pop
mov
scas
add
push
ljmp
fwait
out
mov
jecxz
mov
xor
jbe
std
int3
cmpsl
or
dec
jl
inc
aam
in
inc
or
fisubl
iret
sub
andb
mov
and
ss
icebp
pop
pushw
xor
cwtl
or
mov
idivl
cmp
mov
scas
mov
in
push
sbb
mov
inc
lea
sbb
cli
xor
pop
outsl
movsl
cmp
movsb
aam
inc
pop
nop
mov
xchg
loop
rorl
loopne
xchg
roll
int
mov
xchg
das
std
dec
mov
addr16
or
mov
shr
cmp
mov
test
les
mov
repnz
xchg
lods
pop
movsl
sub
xchg
cltd
add
xor
les
sti
jae
push
aaa
in
aam
nop
jp
sbb
pop
popa
xchg
push
and
push
andb
sbb
adc
test
in
aam
insb
mov
ljmp
std
xchg
inc
scas
push
jo
cmp
lods
lods
repz
pusha
aad
mov
dec
mov
adc
jb
scas
cmp
inc
or
ja
inc
rcrb
add
jbe
jno
ds
inc
ljmp
cs
pop
xchg
xor
cmp
pop
xorb
int
xchg
and
inc
dec
xor
fsub
jle
fcomps
fcoml
jl
inc
xchg
cmp
inc
mov
imul
lcall
inc
add
lret
call
inc
mov
enter
ja
xchg
sub
loopne
orl
mov
mov
stos
mov
shrb
jno
int
int
lahf
or
mov
das
in
adc
add
fildl
inc
xchg
dec
pop
fs
mov
xor
call
xchg
pushl
movl
pushl
ret
movb
push
pushl
lea
jmp
pushf
xchg
push
pushl
ret
pushf
nop
push
jmp
nop
call
lea
call
movl
pushf
pushf
lea
jmp
pop
mov
pusha
push
push
movb
lea
lea
jno
mov
cwtl
mov
pushf
mov
pushl
mov
pushf
call
mov
lea
jmp
push
pushf
lea
call
pop
bswap
mov
lea
jae
movsbw
movsbw
pushf
lea
movw
movsbw
pusha
push
mov
pushl
movzbl
mov
movb
pushl
ret
movzbw
mov
movw
jmp
or
mov
or
clc
xor
clc
stc
xor
pusha
xor
cmc
push
xor
test
clc
pushl
popf
pushf
pushl
ret
jmp
pushf
xchg
pushl
pusha
push
pushl
ret
pushf
pusha
nop
lea
jbe
pushf
pushf
bswap
mov
jmp
movb
mov
push
pusha
xchg
mov
mov
pushl
pushf
not
bswap
mov
movw
mov
call
xchg
call
call
jmp
movw
pushf
xchg
pusha
push
pushf
pushl
ret
pushl
xchg
not
jmp
jmp
mov
pusha
pop
mov
call
xchg
call
call
push
lea
pushl
movb
mov
mov
movsbw
jmp
push
pusha
call
jmp
pusha
call
push
pusha
xchg
pushf
movb
pushl
ret
xchg
pushf
movw
pushf
pushl
ret
pusha
pushf
pushf
jmp
jmp
call
mov
pushf
jmp
mov
lea
jle
pushf
push
movb
lea
movw
call
mov
mov
pushf
movb
call
mov
pushf
jmp
pushf
pushf
call
mov
jmp
push
push
lea
pushf
xchg
pusha
push
movb
pushl
ret
push
jmp
pusha
nop
movzbw
mov
mov
xchg
push
pushf
call
jmp
xchg
mov
mov
mov
mov
pushl
ret
xchg
sete
movzbw
lea
movzbw
mov
mov
mov
call
mov
jmp
xchg
push
pusha
mov
pushl
pushf
lea
call
mov
xchg
pushf
pushf
call
jmp
jmp
movw
mov
push
mov
pushf
lea
call
fimuls
insb
fdivrp
les
jb
jo
cmp
add
xchg
and
dec
iret
imul
popf
ljmp
push
jns
cli
lods
nop
stos
pop
jno
lods
adc
cmp
lock
mov
mov
push
pusha
bound
add
cwtl
cmp
xor
sti
adc
push
sbb
add
push
loopne
cmp
cmp
cld
jo
jmp
aas
sbb
sub
lds
jne
xchg
imul
cwtl
xorl
test
movsl
add
sub
cmp
cli
adc
inc
shll
rol
or
xchg
pusha
and
pop
jno
js
loopne
mov
in
fwait
add
or
xchg
sbb
aas
enter
xlat
aaa
mov
lds
cmp
cwtl
mov
fldcw
aas
mov
inc
xchg
pop
cmp
in
pusha
fsubl
bound
pop
rcrb
dec
pop
rolb
ja
mov
mov
fwait
outsl
dec
fwait
xchg
fistpl
sbb
or
sahf
pop
bound
pop
cltd
pusha
sub
cwtl
clc
cmp
hlt
nop
stos
in
f2xm1
popa
cs
xchg
jnp
enter
add
and
lods
aam
xchg
mov
mov
stc
rol
mov
mov
mov
sub
aad
pop
lret
mov
lods
inc
std
fucomi
push
and
lcall
mov
sbb
shlb
int
neg
inc
push
adc
ret
jo
mov
and
mov
push
fdivrs
test
fsts
pop
dec
movl
jle
mov
cmp
mov
jl
insb
je
cltd
or
sub
rcrb
stos
stc
dec
mov
mov
sbb
lods
js
mov
mov
xor
test
movsb
out
std
xor
out
scas
pushw
pop
lss
out
cmp
lock
mov
pushl
ret
pushf
pusha
mov
jmp
seto
movzbl
mov
call
lret
xchg
mov
call
stc
jmp
xlat
imul
xchg
int
inc
out
insl
scas
fimuls
pop
test
push
mov
addr16
xor
mov
loop
xchg
xor
int3
push
jg
or
inc
test
push
insb
xor
pop
movsl
pushf
sti
scas
daa
out
aaa
std
cmp
aad
add
ret
push
sbb
icebp
das
loop
mov
ljmp
and
mov
loopne
jmp
aas
push
ja
fstps
pop
int3
sub
aam
fsubr
push
popf
jbe
cmp
adc
shlb
fdivl
or
loop
icebp
ja
jne
inc
add
xor
mov
enter
xlat
lahf
add
cmp
pop
ret
push
rolb
mov
aaa
add
adc
mov
gs
stc
enter
jne
div
ss
add
out
mov
lcall
cmp
aaa
test
cli
cld
movsl
xor
movsb
scas
dec
jae
int
in
add
js
or
mov
or
stos
jmp
in
jbe
pop
sub
rcrb
fbstp
push
xor
mov
pop
cs
loop
push
les
and
pushf
mov
mov
sub
mov
aaa
mov
shll
repz
push
add
pop
adc
cwtl
icebp
out
shlb
sbb
loop
popa
inc
mov
hlt
xchg
and
call
into
jns
fisttpll
addl
mov
cmpsb
orl
mov
imul
jnp
scas
jnp
push
xchg
lds
and
les
outsl
pop
addr16
cld
pop
pop
inc
or
outsb
dec
fsubrl
aaa
arpl
popa
jnp
xor
xchg
add
mov
cwtl
and
fsubrl
rolb
push
dec
rcrl
insb
sub
cmp
popf
jns
jecxz
push
or
dec
dec
adcl
imul
inc
arpl
lea
dec
mov
pop
fstpl
adc
rorl
jmp
mov
dec
pop
mov
aaa
xchg
stc
inc
bound
and
mulb
push
lods
dec
sbb
inc
int
xlat
push
xchg
lods
sbb
call
inc
nop
cmpsl
xlat
lods
add
lcall
fisubs
push
xlat
mov
pop
push
adc
ficompl
sti
out
jnp
fcomps
pushf
dec
inc
fidivrl
add
inc
aas
jo
fldenv
hlt
add
int3
sbb
rorl
mov
add
ss
loopne
xor
psubw
addr16
mov
push
test
pop
push
popf
mov
lea
sbb
adc
or
dec
ret
mov
in
aas
pop
jmp
lods
jmp
cmp
mov
cmp
movsb
push
dec
arpl
aaa
inc
loop
lods
clc
repz
jecxz
aam
sub
leave
lods
das
jp
cwtl
fistps
sti
std
jg
scas
push
adc
sub
lods
in
pushf
cmp
xchg
sbb
jno
mov
and
mov
push
lret
repnz
lock
mov
adc
clc
mov
pop
push
dec
daa
in
push
or
movsl
repz
test
mov
sbb
cmp
js
jne
std
test
arpl
in
mov
jns
popa
insb
leave
sti
sbb
mov
test
rcl
sbbb
loope
mov
push
sbb
mov
push
xchg
xchg
mov
fs
adc
repnz
and
add
push
and
push
sbb
test
out
test
push
xlat
add
sbb
dec
mov
aad
ja
xor
aam
jecxz
cwtl
mov
outsl
sbb
in
hlt
pop
xlat
pop
mov
or
xchg
or
or
jne
loop
mov
mov
adc
xorl
les
adc
dec
jmp
cmpsl
inc
sti
out
repz
push
test
dec
xchg
popf
jno
mov
scas
push
das
repz
fcoms
pop
jmp
mov
ds
xchg
cwtl
js
fsubs
xchg
adc
andl
push
sbb
lret
adc
xor
out
xchg
lret
cli
mov
mov
inc
repnz
icebp
rcrb
nop
hlt
bound
inc
push
lret
push
jmp
add
inc
ficoms
in
inc
or
out
dec
ret
sbb
ret
scas
xchg
jae
repnz
mov
arpl
fisttps
sub
xchg
sbb
call
int
push
adc
pop
xchg
notl
mov
xchg
fmul
cmp
nop
xor
call
adc
pop
xchg
fisttps
fdivl
sarb
cmp
addr16
lret
call
mov
in
pop
sub
sti
jns
lods
jl
jo
popa
sub
jle
pop
push
and
push
pop
pop
mov
mov
movw
pushf
pushl
pushl
ret
xchg
push
pusha
movb
pushl
ret
pushf
popl
push
xor
call
xchg
mov
movw
pushl
ret
nop
call
movsbw
jmp
pushf
push
pusha
lea
lea
je
push
push
pushf
xchg
pushf
pusha
movl
mov
pushl
ret
lea
jmp
call
mov
setne
setae
mov
mov
movb
call
mov
movzbw
bswap
pushf
lea
mov
push
push
mov
lea
jae
pusha
movb
pushf
lea
mov
call
movb
lea
movb
jmp
lea
call
lea
pushl
call
lea
nop
pushf
cwtl
mov
pushl
pushf
pushf
movb
xchg
call
push
mov
pushl
pop
jmp
mov
setg
pushf
setbe
mov
push
movb
mov
jmp
lea
jmp
pushf
pusha
pusha
nop
push
movw
pushf
movb
mov
jmp
lea
pushf
xchg
mov
pushl
movw
pushl
ret
pushf
lea
jmp
movb
pusha
nop
pusha
jmp
pushl
mov
lea
mov
jmp
xchg
movw
movb
pushf
pushl
ret
pushf
lea
pusha
mov
pushf
lea
mov
pushf
call
push
movsbl
mov
pushf
mov
jmp
pushf
pushf
xchg
pushf
call
call
mov
pushf
lea
call
lea
jmp
xchg
pushf
pusha
pushl
ret
call
call
pushf
nop
pushf
movsbl
mov
lea
mov
pushf
pusha
mov
xchg
call
pop
push
pusha
pusha
xchg
jmp
pushf
mov
push
movsbl
not
mov
pushf
call
pushf
pusha
push
nop
pushl
jmp
call
mov
push
mov
push
jmp
lea
jmp
mov
call
movsbw
push
not
mov
pusha
mov
pushl
pushl
ret
mov
pushf
call
push
lea
jmp
call
movw
xchg
call
mov
mov
mov
push
mov
push
pushf
lea
pushl
push
xchg
pushf
movb
pushl
pushf
pushl
ret
push
push
mov
xchg
pusha
xchg
movsbl
mov
pushf
mov
mov
pushf
pushf
lea
jb
lea
pushf
jmp
nop
bswap
pop
jmp
movsbw
mov
pop
push
movsbw
pusha
xchg
push
lea
pop
bswap
xchg
movsbw
pusha
xchg
movsbw
mov
bswap
movzbw
mov
pushf
movsbw
pop
call
lea
jne
pusha
mov
push
pushl
pushl
pushf
lea
call
movb
pushl
mov
jmp
xchg
pushl
call
nop
pusha
push
jmp
pop
mov
mov
call
lea
pushf
push
lea
jnp
pushf
mov
push
lea
mov
call
push
mov
mov
lea
mov
jmp
lea
nop
call
xchg
pushf
movb
pushf
push
pushl
ret
movb
mov
pushf
lea
movw
movw
xchg
pushl
push
mov
pushf
pushl
ret
lea
call
lea
movzbl
nop
push
pop
movzbw
push
xchg
call
pushf
lea
call
call
pusha
pushf
xchg
pushl
push
mov
movl
pushl
ret
mov
mov
pop
mov
mov
mov
call
mov
pushf
mov
pushf
lea
mov
mov
call
mov
jmp
call
lea
jmp
sbbl
sub
mov
out
aam
mov
mov
mov
lahf
adc
mov
pop
out
xchg
cmp
adc
mov
cmpsb
movsl
mov
jg
shll
fstl
fwait
jae
insl
or
movsb
xchg
inc
sub
cltd
gs
psubusb
mov
adc
leave
aad
ss
mov
dec
in
pop
fdivrp
jae
xchg
in
cmp
repnz
and
push
push
push
aaa
mov
aaa
pop
and
inc
push
idivl
cmp
sti
cs
dec
mov
cmp
aas
in
call
loop
add
cwtl
jecxz
push
mov
xchg
pusha
pop
push
or
mov
outsl
mov
je
cli
in
or
popa
ss
imul
sarb
or
lock
dec
enter
lea
xchg
sbb
out
cmpsb
loopne
jge
mov
scas
arpl
aas
cld
pop
push
int3
rcr
scas
sqrtps
inc
stc
popa
stos
lahf
into
ss
push
imull
test
inc
sbb
cmpb
dec
movsb
push
or
and
xchg
fstps
into
pop
adc
aaa
xchg
mov
pop
outsl
in
fcomi
cmp
sti
xchg
mov
mov
repz
sbb
inc
outsb
mov
mov
adc
adc
mov
push
aam
ret
std
xlat
fs
sbb
sub
mov
dec
movl
popa
mov
xchg
jmp
cli
bound
mov
pop
sbb
push
inc
mov
jmp
cmpsb
stos
in
push
in
push
push
fdivs
dec
xchg
push
bound
sub
mov
dec
pop
ffreep
cmpb
into
jge,pn
cmp
pushf
mov
adc
movsb
insb
icebp
xor
cmpsl
lods
xor
icebp
daa
lea
mov
push
fisttpll
hlt
pop
push
cmc
jmp
dec
jl
movsl
insb
dec
ja
mov
fdivrp
mov
sahf
imul
dec
int3
repz
das
or
imul
mov
test
and
xor
inc
in
mov
out
or
and
or
sbb
dec
jg
pop
lea
pop
xor
repz
xlat
pop
mov
jno
std
push
popa
mov
decb
rorb
inc
mov
cmp
jne
mov
cmp
add
test
mov
add
cli
mov
repnz
testl
adc
pop
adc
popa
in
mov
sbb
jnp
mov
or
lahf
in
cmp
and
aam
jmp
std
lods
add
icebp
ja
cmpsb
push
push
mov
jae
inc
in
mov
sub
xlat
pop
dec
xchg
repz
xchg
dec
pop
fs
in
mov
movsl
out
xchg
or
cmp
sarb
and
pusha
xchg
sbb
pop
mov
mov
sti
leave
call
ja
cs
sub
xor
fmuls
fisttpll
mov
adc
add
and
cwtl
rcrl
scas
cmp
dec
ss
sub
push
testl
es
repz
or
sub
cli
cltd
inc
add
insl
shrl
sbb
fldenv
or
sub
aaa
add
mov
cmp
clc
stos
ja
and
mov
inc
xchg
xchg
cmc
mov
fldl
inc
and
add
hlt
ret
stos
fisubs
movsl
jo
hlt
add
xchg
cs
aad
xchg
arpl
aas
dec
fprem1
les
rcl
jb
cmp
cld
jle
mov
sbb
gs
xchg
mov
popl
clc
mov
popa
repnz
pushf
jb
ja
inc
mov
lds
adc
or
pop
and
pop
icebp
ds
lods
xor
je
in
xchg
push
push
leave
stos
jns
mov
test
shlb
jle
leave
fsubrl
cmpsl
dec
imul
scas
in
and
mov
imul
fsubrp
mov
inc
and
pushf
mov
pushl
ret
push
pushf
lea
mov
mov
movsbl
mov
call
movzbl
nop
bswap
jp
pop
pushf
jmp
test
aas
or
inc
inc
xor
adc
sbb
cltd
movsl
and
and
or
cmp
sub
xor
sbb
push
pop
xchg
jle
out
mov
fiaddl
adc
stos
mov
mov
jmp
mov
or
lret
pop
leave
add
mov
test
mov
and
jb
mov
sub
sub
fstps
ret
repnz
pop
loope
lock
les
add
fadds
sbb
pop
fdivrp
not
lret
and
pop
mov
push
pop
stos
xor
push
cmp
adc
xchg
fwait
add
in
incb
ficompl
stos
aam
and
sbbl
xor
ret
maxps
out
add
in
cmp
fdivrp
add
sahf
jmp
push
cwtl
frstor
cmp
and
mov
or
and
rclb
divb
push
js,pn
fsubrl
mov
adc
out
ss
xchg
or
fsubrs
fidivrl
sbb
xchg
test
mov
sbb
in
fwait
dec
and
add
push
cmp
adc
jno
mov
pop
cli
dec
subb
add
mov
jne
inc
mov
pop
push
push
aaa
lods
notl
aad
daa
outsl
movlps
xchg
sbbl
icebp
fstpt
add
dec
je
lods
and
decb
mov
stos
mov
inc
xchg
xchg
movsb
sbb
cwtl
andb
cmp
pop
loopne
pusha
sub
pushf
fiadds
inc
ret
jg
pop
movsb
pushf
test
popf
stos
adc
mov
vmwrite
je
sti
das
out
jns
pusha
inc
add
lods
pop
push
add
neg
jecxz
shll
push
cld
mov
sub
push
in
push
in
clc
jns
call
int
lcall
adcb
ds
push
lahf
addb
dec
inc
push
fdivrp
and
xlat
mov
fwait
shl
mov
sahf
mov
in
fistps
and
pop
push
push
pop
mov
hlt
dec
out
push
out
mov
movsl
cmp
jge
call
out
xchg
orb
jecxz
push
or
cmpl
jg
in
into
sub
sub
lret
ds
addb
add
pushf
xchg
pop
sbb
xchg
jnp
js
outsb
lcall
add
lods
pop
adc
mov
scas
pop
fwait
mov
bound
in
es
adc
loopne
ds
or
fs
xchg
and
xor
sarb
jae
fildll
pand
faddl
cmp
je
push
sub
negl
vcmppd
jns
sub
int
mov
orl
mov
dec
add
xchg
shrb
nop
pop
xchg
xor
mov
add
xchg
iret
aaa
cmp
dec
mov
mov
dec
in
sahf
pop
adc
movsl
inc
jnp
and
cmp
cmp
or
scas
in
xchg
aas
cld
fs
xor
ret
nop
and
sub
jo
xchg
lret
add
decl
lcall
sarb
pop
add
mov
adcb
mov
dec
mov
or
stos
fistpll
jp
sub
fbstp
xor
mov
lods
jmp
mov
adc
push
js
dec
mov
xorl
xlat
adc
pop
sbb
out
jmp
sub
jbe
inc
addl
mov
xor
fs
in
jl
xchg
mov
sarl
push
adc
arpl
push
roll
push
iret
cld
jb
in
mov
movl
daa
incl
xchg
xor
pushf
pushl
ret
mov
call
pushl
jmp
mov
pushl
lea
pushf
pushl
ret
call
push
lea
mov
xchg
pushf
pushf
push
pushl
ret
jmp
call
jmp
xchg
not
pop
bswap
pushf
mov
call
call
nop
call
movb
not
mov
pushf
mov
movl
jmp
mov
mov
jmp
xchg
pushf
pushf
mov
mov
pushl
ret
pushl
xchg
mov
pushl
ret
jp
lea
lahf
movzbl
nop
not
movsbw
seto
pusha
mov
jmp
call
pusha
mov
movzbw
not
pusha
setno
mov
mov
mov
pushf
push
lea
mov
pushf
call
nop
pusha
mov
push
mov
xchg
movl
bswap
bswap
pushf
mov
movb
mov
jmp
pushf
pushl
mov
jmp
jmp
xchg
jmp
movw
nop
movw
pushf
xchg
not
pusha
mov
mov
pusha
lea
jmp
call
mov
mov
mov
push
lea
call
jmp
lea
jne
pushf
pushf
mov
call
xchg
pushf
push
pushf
movb
pushl
ret
lea
call
pusha
mov
pushf
xchg
pushf
movw
push
movw
pushl
ret
xchg
pop
not
movzbw
mov
jmp
jmp
pushf
pusha
movl
jmp
xchg
not
call
push
mov
not
not
xchg
push
mov
movsbw
xchg
mov
push
pusha
bswap
pop
mov
not
push
lea
movzbw
jmp
pusha
lea
mov
jmp
pushf
mov
jmp
mov
pusha
jmp
movzbl
nop
pushf
pushl
pop
bswap
mov
call
nop
pushf
not
mov
jmp
jmp
mov
jmp
mov
pop
jmp
xchg
movb
mov
mov
pushl
ret
repz
mov
push
or
call
push
mov
call
pushf
jmp
pushf
movw
call
jmp
pop
push
mov
nop
mov
lds
loopne
push
xlat
pop
pop
and
add
dec
mov
data16
inc
cmc
incl
sub
arpl
mov
mov
pop
jl
hlt
lahf
mov
cmp
xlat
inc
pusha
mov
push
pop
and
cmp
sbb
ror
nop
pop
xchg
pop
in
push
push
ds
xor
movsl
push
sbb
xchg
lods
into
xor
sbb
mov
les
pop
push
sbb
mov
mov
jecxz
adc
xchg
shlb
lds
std
sarb
inc
or
fcom
lret
sbb
sbb
mov
dec
pop
cmp
scas
and
outsb
or
test
mov
int
out
dec
add
jp
sti
push
push
fdivrp
loope
in
fisubl
push
or
fnsave
xor
cmp
cmp
gs
in
or
adc
mov
mov
aad
scas
insl
cmp
movsl
inc
sub
inc
adc
iret
lock
jmp
and
shll
and
xlat
aaa
add
dec
repnz
inc
into
iret
sbb
popf
imul
cmc
test
fs
xchg
adc
movsb
mov
inc
or
mov
nop
inc
stc
push
in
jl
movsb
cld
iret
or
outsl
repnz
jg
cs
ret
jne
pop
outsb
fildll
nop
hlt
jo
cltd
pop
cmp
fwait
cli
push
or
and
add
gs
ljmp
insl
not
jno
mov
xchg
mov
icebp
cmp
pop
gs
lret
insb
or
add
pushf
cld
cmp
imul
xchg
pop
in
loop
dec
xchg
jns
cmp
sub
je
cmp
call
int
sti
into
sub
and
sbb
stc
xchg
push
pop
jecxz
out
testl
jp
dec
pop
xchg
stc
test
adc
mov
pop
mov
pusha
scas
je
jecxz
jp
fldl
mov
dec
jl
mov
or
xchg
test
dec
xchg
mov
sub
std
ljmp
fld
icebp
push
hlt
cmp
lret
mov
mov
std
sub
mov
add
pushf
addr16
sbb
stos
xchg
fiaddl
xor
sub
or
sub
insl
mov
dec
adc
int
pop
test
aas
imul
js
push
int
test
cli
enter
in
movsl
inc
and
and
orb
jae
ljmp
fnstsw
cmp
push
pop
notb
add
sahf
sbb
or
loope
cmp
cmp
lret
push
sti
or
cmp
aam
stc
cmpsl
push
mov
push
mov
inc
cmp
jbe
jle
mov
pop
aad
jo
push
dec
andb
inc
and
mov
cmp
adc
adc
aam
xor
cmp
jne
repnz
test
pusha
ds
loopne
rcrb
adc
mov
pop
mov
dec
or
stos
jns
test
mov
fcmove
mov
movsl
repz
jle
movsb
repnz
sti
pop
mov
jecxz
xor
sbbb
aas
ds
and
jle,pt
xchg
cmc
lcall
loop
cld
dec
lcall
jae
pop
jecxz
dec
ljmp
push
push
dec
sbb
adc
jo
mov
mov
sub
sbbb
adc
mov
inc
insb
mov
loopne
add
pushf
out
es
lcall
data16
pusha
insl
loopne
roll
pop
enter
inc
clc
add
sbb
fwait
sbb
xchg
repnz
or
adc
aaa
xor
dec
cwtl
movsb
and
lods
push
or
jns
adc
xor
dec
xlat
mov
in
imul
pop
leave
jge
cmc
out
in
mov
adc
ret
add
addr16
call
test
mov
outsl
mov
call
mov
jmp
jmp
lea
pushf
call
xchg
into
loope
xchg
push
pushf
movw
pushl
ret
call
push
movb
xchg
pop
call
pushl
popf
mov
movb
pushl
ret
mov
movw
mov
lea
call
mov
movw
jmp
jmp
mov
bswap
mov
not
lea
lea
jmp
pushf
pushf
movb
lea
pusha
xchg
pushf
movb
mov
pushl
ret
pusha
jmp
pushf
call
lea
call
jmp
mov
mov
mov
lea
jle
mov
mov
push
mov
movw
push
lea
movb
xchg
pusha
pushl
ret
pushf
push
mov
movb
movl
call
lea
call
pushf
lea
mov
call
mov
pusha
mov
lea
movb
movb
pushf
jmp
movsbw
bswap
mov
call
lea
je
mov
push
movl
call
xchg
pushf
movb
pushf
pushl
ret
push
mov
pusha
mov
pushf
mov
movb
pushf
mov
lea
jbe
lea
pushf
xchg
pusha
push
push
pushl
ret
movb
pusha
nop
call
mov
mov
not
movsbw
mov
call
nop
pushf
pushf
mov
mov
movzbw
mov
jmp
call
nop
push
mov
pusha
movzbw
mov
pusha
movb
movb
jmp
nop
pushf
jmp
mov
movzbw
not
call
lea
movb
pushf
pushf
push
xchg
mov
pushl
ret
nop
movb
mov
call
lea
call
sbb
std
stc
rcr
push
out
pop
movsb
cmp
dec
dec
sbb
mov
adc
and
in
inc
inc
repz
aad
jne
movsl
xor
bound
xor
es
xlat
cmp
iret
das
nop
or
dec
xor
pop
mov
movsb
jns
xchg
ss
cmc
dec
add
jns
cmp
xchg
decb
std
imul
mov
dec
jmp
sbb
adc
sub
xor
dec
and
mov
dec
ret
dec
push
mov
pop
mov
cmp
mov
lcall
pop
testb
or
cltd
subb
push
pushl
push
xor
or
jne
xchg
scas
ret
js
aaa
jno
in
lcall
and
shll
xor
or
push
int3
adc
stos
mov
dec
jns
cmovs
scas
adc
fwait
int
test
cmp
rcr
daa
push
dec
out
xchg
js
stos
dec
movsl
out
mov
pop
mov
jb
ret
and
sub
mov
inc
mov
mov
cmp
dec
das
notb
add
lret
cs
lea
push
pop
test
mov
std
mov
divl
stc
fildll
repnz
insl
lods
jae
aad
adc
fwait
inc
inc
or
or
insb
aaa
adc
add
mov
add
mov
testb
sbb
fdivrp
mov
aam
cwtl
jno
push
cmc
ja
les
xchg
adc
add
dec
call
push
inc
sub
fldt
push
pusha
loop
lret
ret
ss
cld
fs
dec
popf
cmpsl
cmp
in
xlat
mov
push
shlb
mov
and
cmp
stos
xor
aaa
mov
imul
add
adc
mov
mov
inc
pop
lret
cmp
lret
js
push
lods
mov
jp
fwait
imul
scas
js
popf
add
pushl
mov
sub
filds
jbe
mov
gs
pop
aad
jae
dec
test
inc
outsl
sbb
pop
mov
dec
into
orb
les
inc
inc
push
push
pop
sub
ret
add
push
int
nop
mov
std
gs
imul
call
bound
insl
fsubs
adc
push
hlt
sub
jle
lahf
je
mov
fcoms
out
xor
ret
ret
mov
sub
stos
jmp
imul
cmpsl
jae
call
and
sahf
dec
mov
test
xchg
fwait
dec
cmpsb
mov
test
xchg
imul
sbb
push
pop
inc
lcall
sbb
add
cmc
adc
std
subps
dec
ds
jno
adc
das
xchg
insb
aaa
sti
add
in
mov
add
adc
jmp
cs
pushf
inc
sub
push
mov
dec
sub
in
and
push
popf
lahf
mov
push
aaa
and
nop
cmpsl
aas
dec
stc
stc
sahf
ret
insl
icebp
mov
push
xor
fwait
xchg
ffree
aam
xchg
jbe
jge
sti
sbb
jb
push
pushf
gs
hlt
xchg
sbb
andb
pushf
cmp
dec
push
inc
add
fidivrs
add
loop
lods
jbe
xchg
add
mov
sahf
cmp
add
xchg
push
mov
mov
or
lret
out
sub
std
psubsb
in
mov
sub
inc
out
test
mov
int3
setno
clc
inc
popf
mov
mov
pop
cld
add
sar
lds
jle
xchg
mov
or
mov
in
dec
dec
data16
nop
xchg
inc
cs
jo
gs
pusha
aaa
jg
or
sbb
imul
ds
adc
xchg
mov
mov
jmp
xlat
shll
pop
lods
or
mov
sbb
in
xchg
pop
and
cmp
dec
addr16
lcall
insl
jne
sub
icebp
lea
negb
sbb
scas
xchg
pop
cmp
in
shr
push
lret
repnz
cwtl
xchg
mov
cmp
loop
lods
sahf
pushf
cmp
adc
leave
cmp
mov
mov
inc
pop
push
push
or
gs
add
ja
in
enter
cmc
dec
sbb
mov
mov
xor
iret
fldl
flds
dec
mov
icebp
adc
mov
fldcw
jbe
mov
int
jbe
movb
mov
mov
movw
mov
mov
lea
jo
pushf
pushf
mov
pushf
lea
mov
xchg
mov
pushl
push
push
pushl
ret
xchg
mov
pushl
ret
push
nop
mov
movb
pusha
xchg
pusha
mov
jmp
pushl
mov
incl
mov
std
decl
add
pushl
lea
pushf
mov
pushl
pusha
xchg
push
mov
pushl
ret
mov
jmp
push
mov
lea
call
pusha
xchg
jmp
jmp
push
mov
not
push
movl
mov
pushl
jmp
popa
hlt
shl
jmp
lea
js
push
mov
pop
setne
mov
call
lea
call
movsbw
pop
bswap
mov
lea
lea
movsbw
jmp
mov
call
mov
mov
call
lea
mov
xchg
push
pushl
pushf
pushl
ret
lea
pushf
xchg
movw
pushf
mov
movw
pushl
ret
mov
jmp
jecxz
outsl
fisttpl
add
mov
shll
adc
arpl
inc
add
add
shlb
add
mov
outsb
add
pushf
pusha
lea
movb
push
xchg
push
movb
pushf
pushl
pushl
ret
call
call
push
pusha
mov
jmp
call
lea
lea
je
pushf
pusha
pushf
xchg
movb
pushl
pushl
ret
push
movb
lea
pusha
call
call
push
push
jmp
lea
pushf
call
lea
bswap
mov
push
mov
mov
mov
jmp
lea
pushf
xchg
movb
pushf
pushl
pushl
ret
movb
mov
movw
mov
lea
setbe
call
pushf
call
pop
pop
mov
call
call
xchg
mov
mov
pushl
ret
lea
jnp
pusha
lea
mov
mov
jmp
lea
mov
lea
jns
push
pushf
xchg
pushf
pushl
ret
jmp
mov
mov
pushl
lea
push
xchg
push
mov
pusha
pushl
ret
movb
mov
xchg
movb
mov
movb
pushl
ret
call
not
nop
pushf
bswap
mov
movb
xchg
push
call
pusha
lea
lea
ja
pushf
mov
movw
xchg
pushf
pushf
pushf
pushl
ret
jmp
mov
jmp
push
jmp
call
nop
call
pushf
bswap
pop
mov
jmp
mov
lea
mov
push
pushf
mov
push
cwtl
not
mov
movw
call
lea
mov
pushf
push
pushf
xchg
mov
pushl
ret
call
pushf
xchg
pusha
call
movsbw
lea
mov
jmp
jmp
call
pusha
nop
mov
call
lea
mov
call
pushl
pushf
push
mov
call
jmp
pushf
lea
pusha
call
lea
jmp
pusha
movl
movl
call
mov
movzbw
jmp
pushf
xchg
push
pushl
ret
xchg
pusha
pusha
call
bswap
pushf
bswap
mov
call
pushf
mov
lea
mov
push
movb
xchg
pushl
movb
pushl
ret
bswap
bswap
mov
call
mov
movzbw
lea
mov
lea
movsbw
mov
mov
pushf
seto
mov
lea
pushf
movsbw
not
mov
call
push
pushf
lea
call
pushf
pushf
popl
jmp
xchg
pushf
mov
mov
movb
pushl
ret
call
call
pushf
push
lea
jmp
movw
mov
xchg
pushf
pushf
pushf
pushl
ret
call
pusha
movl
push
lea
jmp
push
push
pushf
movl
movw
pushf
jmp
mov
xchg
jmp
jge
fldenv
adc
inc
add
pop
cltd
std
ljmp
std
pop
adc
add
movb
pushl
lea
jb
lea
pushf
push
pusha
pushl
ret
pushf
nop
jmp
mov
push
pushf
pushl
ret
pushf
mov
jmp
call
movzbw
mov
pushl
pushf
lea
call
pushf
mov
movb
mov
jmp
pushf
call
push
mov
nop
pusha
lea
pushf
jmp
mov
lea
jle
pushf
pushf
pushl
lea
jmp
mov
pop
mov
mov
pusha
jmp
call
lea
pushf
xchg
pushf
pushl
ret
call
mov
xchg
pop
not
jmp
mov
movb
pushf
push
lea
push
jmp
nop
pusha
mov
lea
call
movb
xchg
movb
pushl
ret
pushf
jmp
pusha
mov
pushf
call
pushf
pushf
movb
xchg
movzbl
pusha
pop
pushf
mov
jmp
xchg
pushf
pushl
ret
movl
not
movsbl
mov
pushf
mov
pushf
pushf
call
dec
inc
mov
jmp
mov
cwtl
movsbl
mov
pushf
movb
jmp
loope
roll
movzbl
mov
push
pushf
mov
pushf
pushl
ret
push
mov
mov
call
push
jmp
jmp
lea
movw
jmp
pushf
xchg
movb
pushl
movb
pushl
ret
jmp
pusha
mov
nop
pushf
pushf
call
add
movsb
jb
pop
xchg
mov
test
leave
iret
add
xchg
out
jp
add
add
in
cmp
or
fwait
bound
insl
imul
mov
push
pushf
sbb
sbb
inc
jo
popf
and
hlt
or
int
out
aaa
and
je
mov
call
dec
rolb
into
adc
outsb
or
xor
cmp
inc
sbb
cmpb
pop
aam
and
push
mov
addr16
mov
xor
add
jmp
dec
pop
adc
add
push
mov
jb
pop
adc
stos
add
pop
sub
fscale
test
xchg
mov
sahf
inc
aaa
jge
fisttpl
sbb
push
sbb
push
js
cmp
shl
int
jns
and
sahf
in
dec
jp
pusha
aaa
js
rolb
ror
rorl
aaa
sub
cs
loopne
ja
loope
sbb
sbb
dec
fisttpll
std
lds
and
sbb
mov
inc
lds
cmp
add
xchg
or
dec
adc
es
mov
jae
in
mov
push
pop
pop
daa
or
test
hlt
pop
push
iret
cmp
in
enter
movsb
jp
loope
adc
dec
mov
and
add
push
jae
mov
out
in
gs
lcall
adcl
push
pop
les
push
push
or
inc
mov
lock
jmp
pop
cmp
into
insl
aad
inc
add
sub
mov
stos
repnz
xchg
je
out
addr16
xchg
or
je
pushf
cmpsb
mov
in
ret
cmp
and
js
mov
add
xor
les
dec
aam
cmp
push
sbb
stos
in
dec
mov
sbb
mov
rclb
popf
in
mov
js
leave
inc
add
leave
lcall
mov
mov
pushf
std
iret
or
mov
ror
mov
stc
sub
sbb
pop
je
mov
push
dec
les
lods
mov
stos
lcall
add
lea
out
add
lods
pop
stos
scas
cmp
cmc
stos
outsb
insb
fnstcw
inc
xor
add
or
xor
cmc
out
push
je
movsb
idivb
sahf
push
sbb
mov
xor
xchg
pop
xor
lret
jbe
jae
mov
push
push
cmp
mov
negl
test
mov
adc
cld
icebp
adc
jae
or
adc
or
fisttpl
mov
aaa
in
sbb
sub
xchg
push
pushf
add
addr16
cmc
mov
js
aad
mov
push
mov
xchg
or
jae
jae
pop
pop
in
mov
pop
mov
mov
shrb
or
push
push
jl
fisttpll
mov
sbb
lahf
jns
lock
mov
adc
jnp
imull
pop
fs
js
filds
movsl
out
ja
test
jl
lods
lock
fisttps
decl
jae
les
out
push
shlb
mov
clc
in
ror
sub
clc
or
mov
dec
cmp
popa
stc
fs
mov
jnp
int3
push
mov
or
mov
push
jne
out
gs
pop
xchg
test
jle
test
pop
test
pop
movsl
shll
fwait
inc
jns
insl
sbb
sub
data16
dec
inc
imul
sbb
pop
ret
jle
lret
fs
popa
sub
and
and
jmp
xchg
push
lea
mov
push
pushf
mov
movw
pusha
mov
movw
lea
mov
push
call
pushf
mov
mov
jmp
call
xor
clc
cmc
xor
cmp
pushf
xor
pushl
jmp
xchg
push
mov
pushf
pushf
pushl
ret
int
fistpll
or
fistl
shlb
mov
aas
inc
add
lcall
jnp
push
mov
jmp
cmpsl
push
imul
mov
inc
jne
test
jne
cmc
xor
adc
loopne
out
jg
lahf
push
lret
in
das
fs
rorb
pop
pop
loop
dec
outsl
std
mov
stos
push
scas
mov
movsb
fsubs
mov
mov
dec
xor
call
fdiv
in
push
addr16
loope
in
inc
and
cmp
mov
add
pop
clc
stc
out
adc
add
mov
ja
fscale
hlt
rorl
pop
pop
pushf
ja
mov
xlat
cwtl
xchg
jns
daa
inc
add
add
mov
mov
xchg
add
inc
loope
aad
xchg
scas
mov
mov
enter
mov
test
rcll
sbb
lcall
lret
pop
adc
mov
sbb
ss
fildl
push
icebp
mov
adc
xor
xor
dec
je
mov
mov
aaa
sarl
sbb
stos
lret
xor
std
xchg
jmp
add
or
adc
jle
sbb
fimuls
int
ds
popf
fstps
and
data16
or
adc
dec
sub
xor
mov
pop
push
sub
xchg
adc
mov
and
push
in
mov
dec
fmull
dec
lret
lock
mov
push
lea
push
inc
jne
adc
push
loope
xchg
out
xor
mov
movsb
mov
pop
rorb
jp
sbb
xchg
jo
jle
pop
jae
adc
repnz
pushf
hlt
nop
sbb
sbb
xchg
pop
dec
daa
mov
jp
mov
jecxz
push
dec
loop
mov
pop
xchg
cld
leave
int3
mov
add
not
xchg
cltd
push
add
push
push
pusha
test
sbb
ret
add
std
in
push
jle
outsw
xchg
cltd
stos
test
xlat
mov
dec
add
test
jno
xor
popa
pop
divl
and
aaa
fidivrs
or
shl
pop
icebp
repnz
mov
cwtl
xor
imul
pop
dec
das
popf
imul
pop
nop
stos
cmpsl
sbb
jae
xchg
sbb
scas
arpl
bound
cmp
ret
lcall
and
rorl
sbb
fs
adc
add
push
xor
es
lods
shlb
lods
push
dec
rcl
jnp
jecxz
loopne
push
repz
popf
and
gs
push
mov
or
sub
mov
and
xor
test
mov
push
lret
out
or
lods
sbb
push
hlt
lock
outsl
arpl
les
push
loopne
push
xorl
into
mov
push
pusha
aam
mov
icebp
cmc
xor
and
out
push
dec
mov
pop
push
inc
negb
lret
fwait
lahf
out
mov
pushf
xor
loop
push
push
sbb
cmpb
push
nop
pop
in
pop
mov
add
fdivrs
add
aam
jnp
sti
loopne
fwait
std
repz
mov
or
xor
int
xchg
imul
cwtl
and
xorl
in
fidivl
mov
popf
inc
push
jbe
cmpsl
sbb
xchg
xchg
mov
imul
dec
cwtl
imul
insl
push
into
adc
add
inc
sub
adc
and
in
mov
xor
pop
dec
cmpsb
out
and
adc
ljmp
outsb
fsubl
pop
xlat
int
jp
dec
fstpt
sbb
cmp
jg
aad
mov
aad
mov
cmpsl
push
cmpsl
push
adc
addl
or
dec
ja
stos
pushf
dec
sub
jno
les
jmp
call
mov
addl
daa
enter
movsl
call
sub
sahf
imul
jmp
mov
call
pushf
mov
movw
push
lea
jmp
lea
call
call
lea
call
pusha
mov
jmp
mov
push
jmp
call
jmp
movl
pushf
pushf
lea
jmp
jmp
pushf
mov
mov
jmp
lahf
call
lea
pushf
jmp
jmp
lea
mov
jmp
mov
mov
xchg
movw
mov
movw
pushl
ret
movsbw
mov
pushf
call
not
nop
not
movzbw
mov
pushf
xchg
lea
not
mov
movzbl
pop
movsbw
movzbl
mov
call
call
xchg
push
pushl
ret
jmp
movb
lea
movb
call
pushf
pushf
xchg
movsbw
bswap
mov
pushl
pusha
movb
mov
mov
pushf
call
nop
jmp
movl
lea
jbe
lea
pushf
call
jmp
push
lea
pusha
movb
call
pusha
nop
jmp
jmp
xchg
pushf
pushl
ret
call
push
lea
jge
lea
nop
lea
jmp
lea
pusha
push
jmp
xchg
pushl
mov
mov
pushl
ret
call
mov
std
cmc
ret
adc
pop
idiv
cli
fcoms
lret
dec
add
les
jnp
ret
data16
or
popa
sbb
dec
cmpsl
cmp
outsl
sub
sub
gs
lret
cltd
lea
aaa
loopne
dec
mov
outsl
test
jge
dec
loope
sub
out
pop
xchg
mov
mov
into
mov
and
adc
xor
bound
sub
lock
mov
sti
addr16
adc
or
sbb
push
je
scas
mov
loope
xor
nop
std
test
mov
clc
inc
out
add
ret
mov
push
lea
in
dec
add
sbb
add
gs
xchg
dec
jmp
shll
imul
std
sbb
andb
je
or
push
dec
sarb
cmp
cmp
add
dec
push
incb
dec
xchg
pop
stos
std
int
rclb
cmp
scas
cvtpi2ps
add
fs
cmpsb
and
and
adc
stc
jle
sarl
cmp
cmp
inc
ja
pop
sbb
gs
or
shr
jl
sbbb
enter
mov
cmp
sbb
mov
mov
shrb
in
dec
dec
bound
in
ja
out
mov
pop
out
sub
jmp
shll
push
lods
mov
das
icebp
dec
out
idivb
dec
dec
icebp
stos
aam
push
sbb
push
xchg
lahf
mov
fwait
jbe
sbb
js
aam
mov
push
int
movsb
jb
int3
gs
sbb
mov
pop
je
das
cmpsb
mov
pop
cmpsl
mov
inc
int
sbb
mov
fbld
outsl
imul
or
idivb
idiv
les
jl
jle
mov
sub
into
lret
negb
lds
sbb
jbe
je,pt
xlat
andl
dec
ja
enter
and
xor
aaa
jae
inc
mov
out
jecxz
mov
sub
loopne
dec
adc
add
lds
inc
lock
and
jo
mov
fdivs
scas
fscale
aaa
xchg
and
xchg
in
mov
mov
xchg
sbb
xchg
mov
test
push
add
dec
lods
push
cld
sub
inc
mov
adc
cmp
jnp
add
fwait
cmp
jbe
xchg
fisttpll
adc
ror
jbe
and
rolb
ret
iret
loopne
inc
cmpsb
cmp
rolb
ficoms
add
shrl
ja
add
rorb
loope
mov
pusha
movsb
loope
ss
mov
jae
or
inc
push
notb
xor
es
pop
aas
sbb
loop
inc
nop
cmp
sbb
jo
sti
inc
and
stc
loope
adc
sbb
out
stos
and
fwait
decb
adc
je
jo
in
mov
test
testl
mov
hlt
mov
push
add
pop
jmp
pop
pop
mov
mov
fisubs
inc
cmpsl
xlat
pop
fisubl
jns
mov
inc
push
jb
es
enter
xchg
xchg
insb
pop
fst
lahf
sub
test
movsb
loop
popa
pop
sub
cmp
lahf
mov
testl
nop
lret
jns
rorl
mov
jl
or
cmpsb
jae
js
in
fstps
mov
add
fiadds
xchg
lds
xchg
add
fmull
lret
push
clc
inc
es
pushf
push
fs
mov
pusha
mov
xchg
pop
jns
mov
js
sub
jbe
push
scas
pop
leave
cs
push
out
mov
sbb
adc
adc
and
pop
mov
outsl
outsb
fimull
ficomps
loop
mov
sbb
mov
sbb
add
jg
mov
pop
hlt
dec
jge
repz
xchg
push
jnp
push
pop
rclb
jnp
enter
xchg
out
jl
ret
test
je
stc
cltd
push
jle
dec
xor
cmp
pusha
dec
adc
pop
sub
loopne
cmp
sbb
mov
mov
fidivs
fdiv
test
lods
incl
out
jge
jne
jnp
inc
popa
inc
ret
sub
jmp
bound
out
xor
in
nop
jns
sbb
in
dec
xchg
stc
stos
adc
jp
arpl
pushf
jp
cmp
or
mov
mov
push
sahf
scas
push
mov
cli
dec
roll
fwait
bound
sysenter
push
push
pop
ja
xchg
clc
add
jne
in
sbb
loop
mov
test
xor
ljmp
lock
jp
pop
dec
pop
call
call
call
xchg
pushf
pushl
ret
mov
push
lea
push
movb
call
fstps
and
mov
pusha
mov
pushl
pushl
ret
mov
movb
xchg
mov
movb
movb
pushl
ret
movw
lea
jmp
mov
mov
pushl
jmp
pusha
jmp
pushf
lea
push
mov
jmp
pushf
lea
jno
push
lea
push
pop
lea
mov
jb
pushf
lea
push
pusha
pushf
push
mov
push
jmp
mov
mov
jmp
jne
push
call
call
pusha
pusha
push
call
pusha
push
movsbw
nop
jmp
call
mov
push
push
pushl
ret
pushf
pushf
call
pushl
mov
pusha
lea
jmp
lea
jmp
pushf
jmp
xchg
xor
std
call
dec
and
call
xchg
lahf
movzbw
jmp
call
pop
lea
jbe
pushf
mov
call
mov
jmp
push
push
movl
pusha
lea
jmp
mov
pushf
pushf
lea
pushf
mov
jmp
jmp
movw
lea
jp
pushf
mov
pusha
call
pushl
mov
lea
jmp
mov
push
mov
call
jge
xor
sub
ret
fdivr
popf
cmpsl
cmc
and
fwait
cmpsb
push
flds
mov
or
rcl
es
enter
mov
movsl
repz
in
sbb
jl
adc
nop
and
sub
call
pop
cmp
pop
add
dec
lea
xchg
clc
add
jne
sub
and
fidivrl
xor
filds
pop
cltd
xlat
pop
subl
mov
xsaves
data16
and
mov
pop
pusha
push
xorb
lret
push
out
mov
shlb
test
jge
mov
int
mov
mov
mov
faddl
jg
int3
test
andb
push
pop
pop
push
imul
push
lahf
adc
es
adc
jmp
add
test
sar
jnp
jo
mov
cs
or
xchg
in
or
out
inc
lods
jnp
outsb
cmp
mov
arpl
in
insl
mov
in
fisttpll
or
and
xchg
or
mov
and
lea
aas
add
xor
pop
out
lcall
pop
mov
and
jge
xor
xor
pusha
dec
pop
dec
enter
pop
mov
sub
rsm
addr16
ljmp
loopne
aas
mov
xchg
lret
add
adc
jge
add
fisubrl
insl
lds
cs
pop
enter
fdivrs
mov
fwait
inc
dec
inc
jb
xchg
or
jmp
test
mov
inc
mov
leave
pop
and
push
fs
xchg
lret
fisttps
cmp
or
aad
and
dec
push
dec
dec
mov
fists
sub
out
aaa
into
pop
rorl
mov
rcrb
cmp
andl
bnd
or
or
pusha
inc
cmp
ret
cmp
push
jno
jmp
pop
xor
dec
xchg
hlt
cmpsb
out
xchg
mov
dec
jl
jnp
daa
mov
sbb
mov
jp
push
mov
lds
jp
and
and
stos
cmc
mov
fwait
xchg
xchg
incb
push
or
mov
cmp
lods
xchg
in
dec
fwait
popf
add
mov
sub
pop
mov
pusha
adc
test
fcmovbe
cltd
jae
fs
bnd
jb
lods
mov
ds
pop
inc
push
adc
sub
mov
push
les
cmpb
push
dec
or
mov
push
xor
mov
adc
inc
adc
data16
les
testl
sbb
hlt
mov
mov
aaa
cmp
mov
cmp
mov
or
or
mov
call
stc
inc
xchg
addr16
inc
inc
cmpsb
jmp
add
dec
push
mov
test
clc
sbb
cmc
mov
mov
push
lret
inc
stc
shll
adc
jle
in
sub
stos
jne
mov
popf
sub
adc
push
sahf
pop
mov
dec
and
push
push
cmc
adc
adc
sub
loop
dec
jg
fucom
fistpl
adc
loope
inc
sarl
or
mov
add
stos
add
enter
adc
push
jne
cmc
xor
outsb
cmp
daa
imul
jl
std
decl
popf
jmp
call
and
push
cmpsl
fscale
dec
xchg
push
inc
das
fdivs
push
aam
es
adc
lahf
pop
hlt
and
pop
mov
jl
pop
pop
sbb
aaa
inc
or
pop
sbb
push
cmp
dec
jno
into
sbb
dec
mov
or
xchg
adc
sub
fninit
mov
js
dec
push
pop
inc
or
pusha
xchg
dec
scas
sub
sub
std
adc
mov
inc
inc
dec
cmpsb
fscale
mov
sar
xor
add
mov
dec
adc
jno
pop
sbb
and
sbb
mov
adc
add
pushf
popf
cmp
sbb
cld
hlt
add
and
or
mov
mov
nop
cmp
add
icebp
rclb
outsl
sbb
add
jl
xorb
push
push
jae
jg
pop
adc
mov
fwait
movsl
pop
push
popf
cwtl
pop
cmp
sub
add
push
out
add
scas
fs
add
movsb
inc
mov
and
xor
add
jg
fisubrs
icebp
and
jns
lock
loopne
arpl
and
adc
mov
and
and
shl
pop
stos
fcmovnu
sub
movsb
mov
icebp
test
cltd
fdiv
fs
scas
cmp
aad
jb
repz
out
out
mov
jecxz
es
push
add
sub
repz
push
test
bnd
nop
pop
imul
out
mov
mov
inc
and
xchg
ss
jmp
and
imul
mov
cmp
dec
or
push
inc
in
lods
cmc
xchg
inc
mov
rdmsr
add
in
ss
sbb
hlt
icebp
mov
mov
dec
pop
es
pop
faddl
and
into
imul
outsb
insb
lahf
lods
mov
cmp
std
xlat
pop
jnp
addr16
push
insb
scas
adc
js
loop
incl
shll
xor
cmc
or
shlb
test
dec
and
es
mov
mov
stos
test
sub
mov
jne
adc
push
jle
cmc
sarl
push
ss
int3
test
sbb
aas
in
push
lcall
test
jno
mov
sub
lea
movsl
hlt
xor
jbe
and
push
scas
adc
or
cs
fwait
lahf
inc
ss
dec
jnp
loop
sbbl
and
add
add
fs
mov
cmp
jg
pop
inc
push
inc
dec
adc
scas
inc
dec
test
push
and
cmc
ret
mov
mov
out
sahf
dec
push
lock
xor
add
ret
sbb
add
push
pop
and
pop
lea
or
jbe
inc
shll
xchg
jnp
inc
outsb
or
cmp
jge
cmp
xlat
scas
lahf
mov
or
pop
push
dec
and
mov
testl
iret
lods
sbb
movsb
neg
mov
mov
inc
loop
lods
cli
arpl
push
fadd
sahf
enter
or
add
out
in
mov
cli
push
sbb
enter
jno
sub
shll
add
divl
jnp
sub
aas
ret
hlt
sahf
sti
push
pop
fnsave
inc
push
scas
mov
sbb
je
nop
sbb
dec
js
add
sub
inc
push
lds
out
mov
add
mov
daa
pop
jp
cmp
loope
dec
dec
bnd
inc
xchg
arpl
jbe
pop
jnp
jns
push
dec
mov
subl
movb
push
movb
xchg
lea
ja
pusha
mov
pop
lea
pushf
xchg
movzbl
not
mov
pusha
mov
not
pop
jmp
lea
pushf
call
movb
pushf
movw
xchg
pushf
push
pushl
ret
pushl
mov
not
pushf
push
lea
mov
pushf
pushf
mov
pushf
push
lea
push
jmp
movl
push
push
lea
jmp
dec
pop
mov
sub
xchg
jmp
mov
push
mov
pushl
jmp
lea
not
push
lea
nop
movsbw
mov
movb
pusha
pushl
xchg
pushf
pushf
xchg
pushf
lea
movzbw
mov
mov
mov
pushl
lea
call
lea
jno
lea
jmp
call
pushf
jmp
call
mov
movb
lea
pusha
pushf
xchg
pushf
pushl
ret
pushl
movb
mov
bswap
jmp
pusha
lea
push
jmp
push
pushl
pushf
call
mov
xchg
movw
pushl
ret
movsbw
mov
movw
lea
jmp
pushf
xchg
pop
not
bswap
mov
jmp
pusha
call
mov
jl
fscale
jmp
das
loopne
loopne
arpl
mov
fisubrl
fisttps
and
mov
pop
push
ret
cmp
ret
std
dec
sbb
sub
cmp
mov
inc
jge
or
mov
or
fsubs
push
jmp
push
or
fdivrl
xor
ret
rcrb
out
pop
cmp
test
loopne
cmp
js
sub
and
int3
subl
lcall
mov
pop
leave
jo
pushf
test
test
or
arpl
push
fstl
jno
mov
xchg
push
mov
mov
repz
repnz
icebp
out
cmpsl
add
push
test
push
mov
mov
pop
leave
addr16
ss
mov
mov
ljmp
pop
dec
push
pop
dec
push
fmuls
adc
pop
cmpsb
push
jmp
stos
lret
jmp
test
inc
mov
mov
push
nop
cmp
sbb
lods
popf
sbb
test
scas
jl
or
iret
fnstenv
ret
xor
fidivrl
jo
or
dec
in
mov
mov
sbb
aas
fstpt
das
std
xchg
fmulp
inc
xor
pop
push
pop
pushf
jp
add
mov
pop
les
cmp
xor
leave
aam
lret
adc
popl
fimuls
mov
pop
push
mov
inc
fdivr
dec
dec
cltd
inc
mov
hlt
js
mov
mov
jmp
mov
out
xchg
mov
pop
adc
fldcw
jl
dec
stc
divb
aam
mov
out
mov
rcll
or
call
das
loop
rolb
add
sti
mul
lods
test
sub
push
xor
leave
mov
pop
cmp
jg
cld
adc
add
stc
sub
cmp
sbb
xchg
pop
push
push
loope
data16
xor
lods
scas
sub
mov
adc
inc
aad
out
xor
lock
pop
push
xchg
or
mov
or
insl
insb
ljmp
push
xchg
pop
xchg
push
push
fcmovbe
mov
sbb
mov
insl
mov
jecxz
or
mov
cmc
fldcw
push
int3
sbb
shlb
test
mov
fcompl
mov
xor
in
fisubrs
mov
jno
push
adc
ss
ret
jmp
cmp
mov
jne
cld
sub
cltd
mov
imull
ficoms
jl
push
stos
rcll
call
shlb
push
movsb
pop
lret
xchg
xchg
mov
and
add
mov
adc
push
aas
in
fiaddl
add
mov
jmp
sub
push
sbb
jbe
idivb
cmp
test
lcall
fcoms
mov
cmp
lret
xchg
sbb
fs
fucom
es
cmp
into
stc
stos
adc
aaa
in
stc
insl
int
shll
add
gs
imul
in
fs
lret
sbb
xor
rclb
into
sbb
mov
je
insl
xor
in
add
in
jne
mov
cmp
inc
mov
add
iret
fwait
inc
inc
dec
test
lock
pop
divps
push
cli
jp
inc
out
test
loope
loope
jne
push
and
into
pop
lods
push
xor
xor
xchg
mov
sub
dec
test
mov
outsl
mov
fwait
fs
icebp
mov
outsb
inc
ja
cmp
jge
outsb
and
xchg
pop
fiaddl
or
mov
ljmp
mov
jno
mov
cmp
jnp
outsb
imul
mov
aaa
jno
pop
sub
outsl
cmpsb
xchg
scas
add
mov
scas
je
aam
movsb
mov
push
hlt
call
xor
push
fsubrl
scas
or
jmp
fldt
test
test
nopl
je
popa
repnz
or
push
xchg
xor
cmpsl
repnz
sarl
test
ret
add
or
lahf
push
add
jg
adc
xchg
and
imul
sbb
jp
add
mov
fidivrl
mov
lret
xchg
mov
sub
cmpsb
push
push
push
jns
mov
and
mov
mov
jle
je
out
xor
rorb
jbe
adc
xchg
or
shr
xor
pop
push
adc
push
mov
icebp
mov
mov
fld
pop
roll
daa
cmp
mov
iret
inc
adc
cmp
mov
das
xchg
inc
mov
adc
inc
adc
cmp
inc
ja
ljmp
repz
cmpsl
xchg
lea
push
in
jbe
ret
jns
push
adc
insb
test
mov
stos
cmpsl
test
shr
out
mov
lahf
push
hlt
insb
pushf
insl
or
loop
push
cmp
fsts
fisubrs
sub
inc
repz
sbb
adc
sbb
add
movsl
cmpsl
xchg
test
dec
cltd
call
xchg
mov
jns
lea
rclb
in
adc
fsubl
scas
arpl
xchg
pop
xchg
xchg
cmpsb
in
mov
orl
xchg
sub
jmp
xor
cmp
or
push
sbb
sbb
pop
out
push
shrl
xchg
or
and
clc
adc
es
jp
adc
or
cli
jae
jle
mov
fs
lcall
dec
sbb
int
sub
leave
out
xor
or
push
push
and
pop
inc
movsb
add
mov
test
push
sbb
fnop
cmp
and
sti
fldenv
cwtl
mov
bound
ss
xchg
inc
pop
scas
mov
mov
pop
lret
push
lock
adc
loop
pop
ret
lds
fdivrl
mov
iret
mov
popf
cwtl
add
scas
dec
jbe
out
and
mov
push
fstpl
in
adc
ljmp
js
mov
test
outsl
mov
add
mov
or
pop
ljmp
mov
mov
addr16
jl
inc
dec
or
mov
push
ret
in
test
push
sbb
or
or
sbb
into
fcmovu
pop
fsubl
inc
lea
add
scas
mov
pop
int
and
test
dec
push
int3
test
sahf
imul
xchg
popf
inc
mov
fstpt
lret
lret
hlt
aas
jl
stos
mov
aas
clc
sahf
mov
sahf
fldcw
push
orb
lret
inc
lahf
adc
jb
loop
insb
fadds
inc
addb
mov
mov
lret
xor
scas
jne
sbb
scas
pop
in
add
mov
mov
cmc
cmpsl
jne
jl
pop
test
adc
xchg
aas
lahf
jo
inc
in
or
dec
fcoml
adc
adc
xchg
cmp
push
sub
push
push
frstor
popf
mov
and
inc
cmp
mov
inc
mov
and
ret
or
shrl
push
fistpll
mov
std
or
add
pushf
and
adc
add
fnsave
xchg
mov
and
stos
test
cs
rcrb
aam
inc
mov
mov
mov
adc
mov
cmpsl
shlb
and
mov
hlt
and
mov
pushl
add
adc
or
cmpsb
std
push
in
icebp
orl
hlt
inc
mov
and
fidivl
sbb
test
pusha
push
mov
jmp
lea
mov
pushf
jmp
jmp
jmp
mov
pushf
pusha
jmp
push
call
xchg
pushf
pushl
pushf
mov
pushl
ret
call
lea
mov
jmp
mov
call
xchg
push
pushl
ret
movw
xchg
jmp
pushf
xchg
lea
pop
mov
call
call
mov
push
push
movw
mov
pushf
lea
call
rolb
xchg
fscale
pop
es
sub
jb
mov
add
int3
inc
and
std
outsb
push
insl
imul
movl
mov
ficomps
xchg
or
inc
and
repz
outsb
sub
cmp
and
sbb
cmpl
stos
je
lea
jle
shrl
sub
dec
loope
jb
cmp
pop
mov
or
leave
xor
mov
and
mov
out
mov
inc
lds
add
push
fcmovnb
mov
add
pop
jle
push
cld
dec
mov
fiaddl
dec
fadd
cmp
popa
jne
fdivrl
and
mov
jo
inc
push
icebp
mov
push
mov
xchg
testl
and
enter
mov
inc
in
lock
mov
adc
mov
xor
push
sub
jns
pop
pusha
pop
adc
enter
sti
sub
mov
ss
mov
sub
xchg
cmp
and
lret
mov
xchg
mov
pop
leave
adc
sub
fimuls
xchg
stos
sbb
ja
push
mov
clc
ds
arpl
add
ds
movsl
or
xor
and
mov
sti
aam
loop
inc
pop
loopne
ret
orb
movsl
push
test
and
es
repnz
loop
xchg
idivl
movsb
in
jge
pop
mov
cmpsb
jae
xor
in
jb
scas
into
xor
ficoml
adc
cmpsb
pop
push
adcb
jno
mov
aad
and
loopne
rorb
jmp
pop
pusha
jmp
rcll
sbb
xchg
sbb
dec
in
push
mov
and
and
push
daa
scas
mov
inc
ja
jecxz
push
cltd
out
fwait
mov
in
lods
bound
xor
out
scas
loop
shl
push
subl
je
xchg
pushf
pop
enter
in
sbb
xchg
pop
gs
lcall
sub
notb
push
out
pop
in
into
call
clc
add
rcrb
push
sub
incb
jns
xchg
int
jb
mov
fdiv
loop
repz
test
push
std
repz
sahf
and
sbb
rcrb
push
jns
xabort
or
inc
xor
mov
add
push
and
xchg
sbb
sub
rcr
movsb
pop
push
in
rolb
clc
sbb
push
and
shlb
and
push
pop
inc
xchg
out
sub
sub
push
cmp
ja
mov
sub
and
cmc
push
cmp
nop
lods
pop
sahf
cs
fstpl
jns
imul
push
push
sbb
adc
loopne
mov
aas
addl
lods
sbb
iret
aad
xchg
jg
daa
lock
sti
hlt
cmc
call
inc
loop
pop
inc
jecxz
lret
arpl
out
or
cwtl
mov
mov
daa
iret
mov
ljmp
rolb
lods
fstpl
js
mov
push
addl
lret
and
mull
adc
out
scas
pop
cmp
stos
dec
push
add
pop
cmpsb
pusha
sub
cld
sub
jp
movsb
ljmp
and
xchg
fdivp
arpl
in
dec
mov
sbb
xor
cmpsb
into
aas
fldcw
jno
cmpsl
inc
add
sub
jo
and
das
jp
in
mov
or
xorl
pop
cmp
mov
lods
jns
mov
mov
insl
push
and
dec
adc
push
out
sbb
cli
in
and
in
lcall
shll
stos
xchg
bound
nop
mov
mov
ds
xor
inc
rorl
ljmp
xor
call
dec
cmp
sub
mul
cs
mov
mov
cmp
fs
cmc
mov
xchg
lock
sub
jno
das
mov
pushf
negb
push
js
insl
les
push
ljmp
xor
scas
ja
dec
sbb
jmp
jecxz
add
pop
lods
mov
scas
lods
dec
pop
or
or
jo
addr16
lret
push
fldenv
je
xor
cltd
jmp
cs
lret
repz
repz
pop
movsb
scas
adc
mov
cmp
cmpsl
repnz
pushf
add
dec
mov
adc
mov
and
lds
or
pusha
jl
insl
rcll
lret
ljmp
enter
in
push
into
sti
insb
mov
rclb
dec
xor
mov
test
rorb
xor
adc
fcmove
cmp
cmp
out
in
xchg
lods
xchg
add
scas
and
dec
ret
stos
je
in
fnstenv
xor
imul
pop
sub
sub
frstor
cmp
fs
adc
adc
inc
cmp
cmp
fptan
cwtl
call
jne
inc
xchg
sub
cmp
sub
test
imul
ds
outsb
test
test
jmp
cmpsl
das
sahf
hlt
sarl
das
xchg
pusha
inc
push
fldenv
ljmp
adc
mov
loopne
addr16
push
bound
inc
shlb
jmp
jecxz
mov
dec
push
ficoms
addr16
pop
pushf
std
scas
xchg
pushf
push
addb
xor
shll
clc
scas
inc
jns
adc
mov
add
push
cmp
push
mov
sbbb
mov
xchg
xor
stos
xor
push
sub
push
mov
add
insl
into
cmpl
jmp
out
fld
mov
cs
xor
lahf
push
sahf
das
cmpsb
in
cmc
sahf
inc
imul
sbb
pop
mov
jo
inc
mov
popa
mov
das
mov
ret
xor
add
push
dec
adc
data16
rcl
or
dec
fimuls
sub
push
push
bound
shl
pushf
xor
xchg
mov
ret
popf
pop
fld
mov
jecxz
push
jnp
sarl
test
testb
dec
inc
or
out
je
clc
ret
xchg
insb
cltd
pusha
cmp
pushl
out
mov
cmc
mov
and
sub
sbb
xor
aas
lods
sub
pop
jecxz
dec
jle
mov
push
and
inc
cs
loop
mov
pop
stos
mov
insl
sbb
inc
neg
xor
cmpsl
cltd
or
insb
cmp
mov
cmp
dec
rdtsc
ret
add
sbb
dec
xchg
shlb
icebp
jecxz
xchg
arpl
movsl
outsl
jb
insb
push
pop
add
adc
or
jp
mov
fnstsw
inc
xchg
shlb
sti
les
shll
stos
adc
jmp
xchg
cmp
out
loope
xchg
fimull
cld
popf
push
xchg
loopne
pop
mov
push
and
arpl
nop
pushf
loope
or
movsl
rcrl
rorl
rcrl
addr16
cmp
pop
jmp
inc
push
mov
and
mov
popa
mov
lret
cmp
or
add
cld
out
fsubs
divl
or
in
stos
mov
imul
sahf
inc
in
push
sub
cmpb
push
mov
repnz
and
and
addb
adc
push
lods
inc
add
push
inc
and
bsf
out
mov
shrb
add
xchg
jae
iret
mov
mov
sbb
add
sbb
into
das
mov
sub
mov
mov
cmpsl
jl
push
jle
xor
cmp
dec
and
adc
out
mov
sbb
and
mov
je
mov
mov
and
fistpl
jl
jmp
mov
call
mov
call
jmp
call
lea
jp
push
mov
call
call
xchg
movb
movb
pushl
ret
mov
xchg
pushf
push
pushf
pushf
pushl
ret
xchg
bswap
nop
cwtl
pop
lea
pop
bswap
jnp
bswap
movsbw
xchg
mov
push
movw
xchg
movsbw
setl
mov
not
jmp
push
nop
call
call
call
xchg
pushf
pushl
ret
not
pop
jmp
lea
jmp
push
push
lea
movb
xchg
pushf
movb
pusha
pushl
ret
xchg
not
movsbl
mov
xchg
bswap
mov
push
mov
movzbw
movzbw
bswap
lea
push
movzbw
jmp
call
leave
xchg
movb
jmp
lea
call
pushf
call
jmp
mov
mov
jmp
mov
jmp
mov
pushf
mov
movzbl
jmp
lea
mov
push
mov
bswap
lea
mov
jmp
push
pushf
lea
jmp
call
xchg
jmp
pushf
pusha
jmp
jmp
pusha
nop
call
jmp
call
push
pusha
pushf
lea
jmp
bswap
mov
pusha
movb
mov
push
mov
call
xchg
mov
mov
movw
pushl
ret
pushf
pusha
xchg
jmp
sbb
jo
mov
xor
inc
pop
std
dec
loopne
jecxz
sbb
loope
mov
jno
insb
jae
add
xchg
jb
jbe
imul
pop
ljmp
in
mov
fldcw
push
xchg
cmp
add
stos
fistps
out
call
sub
fwait
mov
in
mov
mov
out
add
xchg
mov
inc
outsl
mov
xchg
addr16
sbb
aaa
adc
rcll
iret
adc
mov
xchg
aad
idivb
add
xchg
dec
lret
adc
mov
cmp
mov
mov
add
pop
add
or
lock
sbb
sub
mov
les
sti
bound
data16
add
push
adc
add
roll
push
or
add
xchg
and
push
mov
std
dec
adc
mov
ror
pop
sti
jp
in
jno
je
add
sub
mov
mov
es
int
push
cwtl
dec
ds
bound
adc
ret
adc
rclb
cld
fs
xchg
add
mov
loop
lock
lds
in
cmp
sbbl
mov
push
rol
xchg
fsubrs
in
cmp
push
pop
movsl
cmovns
arpl
testb
mov
movsl
bound
sbb
cmp
adc
mov
adc
mov
sub
ret
push
cmp
push
xchg
push
test
add
sahf
daa
jl
push
cltd
ftst
adc
jge
push
in
pop
mov
fldenv
mov
sbb
xor
sbbl
loopne
xchg
jae
mov
pusha
push
mov
push
push
dec
xchg
sbb
mov
cmp
mov
sub
inc
enter
add
and
outsb
shlb
cmpsl
sub
imul
xchg
fisubl
jb
je
inc
xchg
es
jbe
into
lret
mov
std
call
pop
sbb
les
scas
jecxz
pop
sti
and
cld
fwait
jne
add
pop
imul
hlt
cmp
mov
in
sar
dec
xlat
aas
adc
and
in
cs
insb
in
push
fcomps
int
push
stos
mov
fsubrl
std
ljmp
test
pop
cmpsb
loopne
scas
sub
ret
sub
out
adc
and
pop
dec
dec
aad
shrl
addl
or
ja,pn
arpl
iret
call
cmpsb
inc
out
cmpsl
cmp
inc
xchg
xchg
sbb
dec
xchg
push
lock
push
dec
fnstcw
test
mov
dec
les
shll
loopne
loope
jmp
jp
sbb
aad
addb
jbe
mov
dec
cmp
movsl
xchg
add
cli
ret
push
xchg
sbb
jp
rcrb
cmp
loopne
push
daa
stos
mov
jno
mov
pop
or
push
jmp
je
mov
push
aam
xchg
xor
jge
movsb
loop
popl
pop
arpl
ljmp
pop
xlat
mov
xchg
pop
notl
or
leave
hlt
icebp
add
in
dec
dec
lea
negb
mov
cltd
mov
stc
inc
int
scas
or
dec
in
mov
mov
pop
pop
mov
pop
inc
pusha
ss
outsb
sbb
mov
clc
movb
aad
icebp
movl
mov
mov
xchg
adc
int3
sti
test
loop
dec
adc
bound
mov
dec
out
cli
and
and
clc
and
ss
dec
scas
pusha
jo
loop
cmp
or
and
dec
xlat
into
fisttpl
pusha
lods
scas
push
arpl
mov
sub
call
jbe
das
and
lods
cmp
mov
jo
outsb
push
adc
cmc
pop
jb
inc
cmp
mov
inc
int3
cmp
sub
subb
aam
test
mov
lcall
sub
push
add
inc
mov
cmp
popa
gs
cli
addr16
in
addr16
hlt
aam
sbb
stc
pop
orl
mov
mov
cmp
mov
ret
lea
jmp
lea
push
xchg
movb
pushf
pushf
movl
pushl
ret
lea
mov
pushf
call
pushf
lea
pushl
mov
not
mov
jmp
setno
jmp
pusha
lea
jbe
pusha
lea
movw
mov
bswap
movzbw
mov
pushl
pusha
call
mov
pushf
pushl
movb
mov
pushf
pushf
push
lea
call
nop
mov
mov
movb
jmp
xchg
movb
mov
pushl
ret
call
pusha
mov
pushl
pushf
push
lea
jmp
call
pusha
mov
mov
mov
pushf
movb
lea
push
movb
mov
mov
mov
movzbw
movw
mov
jmp
mov
movzbw
movzbw
nop
movsbw
pop
push
pushf
xchg
movb
push
mov
pushl
jmp
pushf
pushl
pushl
nop
movb
call
xchg
mov
mov
mov
pushl
ret
jmp
lea
movb
pusha
call
pushf
lea
jmp
pushf
pusha
pushf
nop
push
mov
jmp
mov
mov
mov
call
pushl
mov
push
mov
push
pushl
movw
lea
pushl
call
pushf
call
pushf
xor
test
cmp
xor
test
xor
test
pushl
popf
pusha
pushl
ret
mov
pushf
lea
pushf
call
call
mov
jmp
xchg
pushf
pushl
ret
mov
mov
bswap
movzbw
movzbw
mov
movb
call
ret
test
std
icebp
cmp
insl
xchg
push
hlt
inc
push
cmc
repz
sbb
stc
cmp
bound
repz
mov
xchg
or
add
xchg
inc
nop
mov
mov
xor
pop
push
mov
js
pop
and
sbb
inc
test
jmp
movsl
jno
xchg
pop
out
sub
adc
out
mov
das
lret
pop
aaa
fdivs
jo
aaa
cmp
ficoml
call
aaa
add
pushf
out
mov
xchg
std
inc
mov
ds
adc
fidivs
xorb
cmp
xor
inc
pop
outsb
int3
jae
int
xchg
adc
jecxz
je
cli
movsl
int3
iret
popa
ja
call
mov
imul
jecxz
test
dec
add
mov
xchg
push
addr16
and
pushf
aaa
inc
mov
cmc
jmp
sub
lret
and
addb
and
das
fmuls
in
inc
sbb
das
and
test
xchg
repnz
sbb
mov
add
or
or
imul
roll
sbb
fisubrl
jle
cmp
xor
jbe
xlat
loopne
icebp
jp
lret
shll
hlt
pop
repz
jo
les
les
repz
inc
xchg
fstpt
jo
xor
scas
xchg
push
pop
fsub
cltd
and
hlt
fwait
xchg
push
pushf
call
mov
sar
adc
filds
pop
dec
sbb
cmp
orl
mov
jmp
jl
stc
and
dec
mov
pop
sub
sbb
decb
mov
xor
pop
lock
fldl
test
icebp
fwait
movsl
push
jmp
pop
jle
insb
cmpsb
xor
xor
and
sahf
mov
sub
mov
pop
jg
lds
fldenv
jae
das
cmp
icebp
inc
cmpsl
or
daa
jne
in
mov
dec
mov
cmp
arpl
mov
subl
inc
lahf
imul
aad
and
data16
push
mov
aad
outsl
das
xor
inc
sub
insb
fistps
push
fsub
mov
aas
gs
xor
lods
push
fwait
mov
cld
ds
gs
push
dec
fdivl
fisubs
add
add
jnp
or
pop
jg
stos
sub
adc
push
inc
jmp
mov
push
in
push
sahf
jbe
outsb
out
inc
dec
in
mov
shlb
aaa
mov
loopne
jb
jp
repnz
push
add
scas
mov
mov
test
jg
xor
andb
in
xor
adc
pop
cmpsl
fs
bound
jp
pop
jne
aam
mov
xchg
arpl
negl
arpl
outsb
fstps
mov
inc
push
add
sbb
cmp
mov
pushf
xor
dec
popf
lods
insl
rolb
adc
fldenv
rorl
mov
test
popl
rclb
in
dec
mov
sub
mov
movsl
or
rolb
pop
cmpsb
pop
sarl
sub
inc
out
dec
mov
adc
or
test
dec
sbb
jns
push
ljmp
mov
jle,pn
jge
xor
nop
idiv
mov
outsl
mov
or
inc
in
test
dec
push
stc
push
in
jp
dec
dec
bnd
mov
mov
sti
int
adc
aas
vpunpckldq
mov
popa
ja
adc
mov
arpl
pop
and
arpl
pusha
addb
dec
sub
pop
jl
les
adc
scas
negb
fisttpll
xor
dec
xchg
mov
bound
arpl
dec
in
push
mov
cli
jns
lods
xchg
sahf
movsl
mov
fldt
xchg
cld
mov
mov
xorb
shll
popa
shll
loop
add
push
or
jo
std
cwtl
dec
arpl
test
mov
fsubs
in
sbb
or
in
xchg
pop
add
movsl
inc
pop
outsl
mov
gs
and
cmp
sbb
mov
push
jecxz
jmp
sub
lods
sub
pop
fisttps
adc
adc
pop
movsb
in
lods
cmc
dec
jb
cwtl
mov
arpl
nop
clc
nop
js
adc
ret
inc
sub
push
mov
jle
out
out
cmp
mov
cwtl
fbstp
into
push
cltd
loope
ffreep
cmc
mov
lret
mov
andb
shl
popl
repz
inc
or
pop
test
add
pop
inc
sbb
xchg
test
lahf
jmp
test
push
lods
fnstenv
xchg
pop
pop
cmp
in
cmp
add
fnstsw
dec
xchg
js
movsl
and
sub
sbb
sub
je
movsb
movb
insl
push
pop
fisttpl
cmpsl
dec
daa
popf
dec
dec
fsubrl
imull
pop
push
mov
jo
and
sbb
call
inc
lods
orl
shll
test
les
cmp
pop
push
shll
xchg
mov
outsb
jbe
push
sbb
mov
mov
shlb
jns
bound
test
dec
sbb
arpl
adc
sub
xor
push
cli
test
outsl
dec
negl
nop
mov
mov
pop
outsb
mov
mov
cmpsl
sub
or
mov
das
push
or
icebp
popf
in
inc
pop
xchg
popf
push
pop
mov
mov
in
pop
std
std
cwtl
xchg
cli
inc
cmpsb
outsl
and
icebp
push
insb
fadds
mov
mov
mov
xchg
xchg
repnz
or
rcll
adc
aaa
jne
pop
movb
push
mov
je
and
jmp
lock
repz
sbb
psubusw
add
jg
pop
pop
mov
out
loope
xor
and
rorb
xchg
aas
add
jge
sub
xorl
mov
cs
fsubl
cmpsl
icebp
fnstcw
lcall
jge
cli
adc
mov
pusha
repnz
repnz
adcl
mov
or
movsb
xchg
clc
inc
mov
aas
stc
inc
gs
pusha
push
nop
xchg
cmp
lahf
and
push
scas
push
mov
into
pop
sub
and
push
sbb
rcrb
add
mov
outsb
sarb
stos
cli
mov
pop
xchg
fdivrs
pop
or
and
in
call
or
or
inc
and
stos
bound
fldt
mov
imul
iret
xor
je
pop
fsubrs
cmp
pop
aad
xchg
in
div
mov
jg
pop
lret
mov
push
pop
mov
cwtl
int
mov
mov
dec
andb
movsl
pop
sbb
xor
fbld
jo
mov
fistpl
cmpsl
mov
fcmovb
add
add
adc
andb
xchg
push
mov
imul
in
or
insl
test
jg
pop
in
jle
or
js
mov
lods
test
pop
or
and
mov
pusha
jmp
jmp
nop
jmp
pusha
jmp
pushf
xchg
mov
call
jmp
setbe
nop
mov
pop
pusha
xchg
pusha
call
pushf
lea
jmp
push
pusha
nop
movw
pusha
pushf
xchg
cwtl
cwtl
bswap
mov
pushl
pushf
lea
push
lea
jns
pushf
mov
bswap
movsbw
lahf
mov
call
jnp
les
mov
lea
pusha
jmp
sub
cld
fscale
jne
adc
loope
inc
inc
ret
adc
lret
and
add
cmp
fcmovnu
adc
repnz
imul
dec
es
iret
dec
jnp
mov
xor
cmp
mov
out
sbb
cmp
push
lds
jb
sub
repz
gs
in
clc
push
fscale
jb
cs
dec
out
sbb
mov
or
xchg
fldenv
inc
inc
fs
sub
add
loope
jae
cld
shl
dec
rol
inc
dec
add
and
fscale
inc
maxps
or
imul
test
cmp
push
ja
add
add
push
mov
pop
cmpsb
xor
push
adc
test
mov
sub
fiadds
aad
mov
add
or
lock
loope
add
in
lsl
xor
xchg
fistl
enter
add
aaa
push
fwait
loope
repnz
sbb
test
in
adc
inc
ss
and
aad
addb
dec
push
lret
dec
ljmp
inc
inc
xchg
sbb
test
in
enter
stos
imul
rcrb
pop
cmpsl
push
pop
push
mov
insb
push
jnp
ja
lods
sbb
push
fsubrl
mov
mov
dec
fstl
and
cmp
push
clc
xor
arpl
int3
popf
push
inc
mov
stc
mov
add
cmpsl
roll
std
gs
aaa
clc
pop
push
sub
loope
xor
cmp
bound
rcl
adc
lea
mov
adc
cmc
and
jle
lcall
adc
cs
test
and
jno
fldl
loop
mov
fadds
out
inc
xchg
lret
imul
push
rcll
pop
xchg
fscale
fsubrl
jmp
popa
lahf
cmp
pop
mov
aas
inc
inc
sub
add
repz
push
and
data16
pop
xor
in
mov
mov
cld
xchg
nop
std
dec
push
aad
test
in
pushf
in
daa
in
out
xchg
repnz
cmp
dec
fcmove
jo
int
mov
mov
icebp
xchg
jns
imul
aad
add
fists
xchg
jg
jnp
in
stos
sbb
mov
aad
push
arpl
inc
mov
mov
and
mov
fidivs
inc
xchg
cmpsl
pminub
dec
mov
push
pop
xor
mov
push
mov
jmp
sbb
mov
das
sub
jmp
negb
mov
arpl
xor
lahf
mov
cmpsl
dec
xchg
sub
sub
aaa
jle
xchg
test
stc
inc
testb
insb
leave
xor
arpl
nop
add
bound
outsl
fsts
mov
dec
aas
aas
mov
inc
in
xchg
ljmp
mov
aaa
jno
adc
pop
or
or
jns
enter
push
xchg
mov
shrl
clc
test
decl
out
mov
push
fsubr
xchg
add
sbb
fs
cmp
sub
mov
xchg
xor
lea
xor
lea
sbb
sub
dec
mov
cwtl
sub
je
lds
mov
mov
xor
popa
adc
dec
push
orb
rclb
sub
test
or
mov
mov
shrb
fs
aaa
pusha
pusha
pushf
xchg
pushf
pushl
ret
pushf
mov
xchg
pushf
pushf
push
pushl
ret
lea
call
movw
xchg
movl
movb
movl
pushl
ret
mov
pop
not
push
mov
movw
pushf
pusha
call
mov
call
movl
pusha
lea
jmp
lea
mov
pushf
mov
push
mov
jmp
xchg
push
pushl
ret
xchg
push
mov
pusha
xchg
call
lea
pushf
call
pusha
jmp
lea
jmp
jmp
push
lea
mov
pushf
pushf
pushl
mov
lea
mov
pushf
pushf
jmp
pusha
pushf
popl
test
xor
pusha
movw
xorl
push
bt
xor
cmc
push
xor
stc
xor
movl
xor
cmp
stc
xor
clc
jmp
pushf
mov
not
movzbw
movzbw
pushf
mov
pushl
push
push
mov
pushl
ret
xchg
push
pushf
pushf
movb
pushl
ret
pushf
mov
push
movw
jmp
nop
movl
pusha
mov
not
mov
lea
js
pusha
mov
lea
jmp
jmp
lea
pushf
call
pusha
mov
lea
movw
jmp
setno
lea
lea
mov
pusha
call
xchg
call
mov
movsbl
lea
cwtl
pushf
mov
bswap
bswap
mov
call
mov
lea
mov
bswap
bswap
lea
movzbl
mov
movsbw
movzbw
pushl
mov
lea
push
jmp
insl
icebp
cmc
fscale
mov
ret
or
push
adc
adcb
je
jg
pushf
pushf
jmp
adc
in
ds
rorl
fxch
int
subl
stos
je
shr
mov
mov
es
rcrl
fimull
jae
pop
lret
pop
push
int3
bound
mov
jecxz
xchg
push
cmp
nop
jae
outsl
ret
pop
sbb
sbb
outsb
out
into
push
fwait
addr16
test
inc
gs
dec
js
sbb
mov
add
movsb
fmul
js
ficoml
nop
insb
add
ss
shll
and
mov
mov
outsb
in
sbb
sub
push
inc
popf
sbb
inc
dec
pusha
sub
sbb
cmp
cmp
and
pusha
sub
cmp
or
xor
add
popa
add
daa
std
add
mov
xchg
inc
mov
dec
mov
enter
pop
cmc
data16
and
movsl
xor
daa
xchg
fdivrl
dec
push
outsb
mov
and
mov
sub
push
dec
incl
or
jl
mov
push
push
inc
dec
jmp
cld
mov
adcl
out
xchg
xchg
mov
int3
outsb
xor
js
cwtl
dec
rolb
push
rcll
jl
mov
fldenv
xor
mov
stc
mov
cmp
push
jmp
mov
loope
shll
cmp
push
aaa
add
je
adc
xor
sbb
movsl
fnsave
mov
xor
xchg
imul
push
sbb
push
std
fistpll
je
xchg
cmp
mov
jbe
sbb
push
clc
dec
addr16
into
inc
xchg
pop
sub
je
cmpsb
push
outsb
fmull
sub
or
lret
mov
ja
stc
dec
mov
pop
and
mov
repz
xor
cmp
js
fisttps
cmp
inc
filds
rcrb
mov
sbb
arpl
mov
push
orl
xlat
mov
and
test
stos
mov
sar
daa
ds
ret
cmp
icebp
mov
in
xchg
pop
mov
jo
add
pmuludq
jo
icebp
lea
sbbb
jecxz
mov
sbb
outsl
cmp
popf
sub
inc
and
pop
gs
jle
daa
dec
in
push
and
fsubl
mov
cmp
pop
mov
add
mov
adc
in
push
sbb
lods
fmull
inc
mov
into
scas
call
jle
jo
ds
sbb
xchg
and
rcr
jge
mov
jecxz
lahf
inc
insl
sbb
xorb
out
movsb
pop
cli
repnz
jecxz
push
cmpsb
icebp
mov
pop
pop
cmp
arpl
adc
fisttps
cmp
lock
mov
adc
dec
in
mov
pop
aaa
jno
lods
inc
bound
xor
es
sti
rcrl
icebp
and
shrb
std
scas
push
sub
mov
pop
mov
hlt
fcomps
nop
setnp
or
mov
dec
fs
lock
cltd
jmp
cmpsl
pop
and
jb
addb
jno
push
mov
xorl
pop
xor
cmp
pop
in
mov
or
fisubrl
test
push
sbb
cmpsb
mov
stos
sbb
sbb
cmp
out
fisubl
in
dec
sbb
jo
shlb
scas
mov
mov
fs
nop
sbb
rcrl
and
stc
sbb
cs
iret
cwtl
cmp
sub
mov
das
sbb
xlat
js
leave
dec
adc
sar
dec
lcall
sbb
daa
cmp
popa
sub
hlt
cmpsb
jno
addr16
out
mov
mov
mov
out
aad
in
jge
jl
and
out
test
rorl
lods
adc
into
add
pop
pop
iret
cmp
rolb
lret
cs
fdivs
push
out
fmuls
insb
iret
aad
sahf
mov
xchg
cltd
inc
pop
dec
pop
cltd
xor
test
mov
cmpsb
pop
shll
and
and
popa
mov
lret
cld
sbb
mov
mov
mov
jno
xchg
sahf
rclb
in
add
dec
mov
lock
in
enter
sub
sbb
dec
and
push
sub
fistl
pop
in
sbb
jge
gs
add
test
sarb
fdivrl
aas
push
xor
in
and
cs
gs
icebp
hlt
lods
mov
ja
cmp
mov
dec
stc
test
jmp
lods
dec
xchg
sbb
sub
xchg
fstpt
mov
mov
dec
sbb
xor
fldt
add
push
fbld
out
ficoms
mov
cmc
and
pop
inc
jle
mov
cmp
pusha
loopne
mov
lea
idiv
and
movsl
ds
lds
xchg
cmp
add
or
or
mov
inc
fidivs
fdiv
lods
rcrl
fcompl
outsl
adc
jae
sti
sbb
add
push
movsl
out
push
loop
cmp
divb
sbb
sbb
sub
add
dec
cmp
dec
int3
jns
out
mov
ljmp
aad
addr16
mov
repnz
pop
imul
outsb
ret
bound
mov
in
inc
sbb
push
mov
add
fisttpl
gs
cltd
outsb
and
cmp
mov
addr16
scas
lcall
or
imull
or
aad
inc
cli
stos
ja
orb
mov
dec
rclb
mov
add
cmpsl
pop
pop
and
gs
cmpsb
int
mov
in
ficoms
data16
jnp
push
repz
fistpl
and
hlt
sar
mov
sub
add
out
xchg
mov
mov
shl
lock
imul
repnz
add
ljmp
sbb
call
je
add
mov
sub
aaa
push
mov
mov
xor
pop
cmp
mov
xchg
out
inc
mov
add
hlt
loopne
outsb
xor
sbb
xlat
loopne
cmp
fld
into
cld
mov
push
mov
out
jae
aas
pop
repnz
xchg
out
inc
pop
lret
add
pop
repz
xor
out
push
rolb
or
into
add
mov
jge
jp
adc
add
lea
or
xchg
mov
add
int
fldt
push
ljmp
movsb
xchg
jo
lahf
jno
add
xchg
ljmp
idivl
and
adc
push
jae
xor
mov
test
sti
in
inc
cld
leave
add
and
xchg
push
cmc
cmc
ja
cmp
roll
mov
ret
popa
mov
dec
add
mov
pop
test
push
jmp
jnp
lods
pop
mov
push
xchg
cmp
mov
xor
add
lds
cmpsb
sub
ss
sub
sbb
int
in
icebp
sub
lods
push
les
xor
push
aas
pop
add
addb
shrl
mov
push
xchg
cmp
xor
nop
xchg
jg
jnp
add
inc
lret
push
aaa
mov
int
jmp
dec
sbb
push
xchg
cmp
cmp
lock
push
stos
xchg
or
push
or
dec
repnz
mov
gs
pop
pop
sub
pusha
mov
push
xchg
cmp
cmp
lea
movb
pusha
mov
call
pusha
lea
pushl
push
mov
movb
pop
lahf
call
lea
bswap
mov
pusha
call
xchg
pushf
pushf
pusha
mov
pushl
ret
sti
and
or
fs
jb
pusha
mov
mov
call
add
inc
jmp
outsb
arpl
pushf
jmp
xchg
movb
movw
pushf
movb
pushl
ret
pushl
lea
pushf
call
mov
jmp
jmp
mov
push
call
addr16
in
fscale
jecxz
imul
or
popa
in
adc
add
lds
jge
outsb
and
or
jne
out
add
add
shr
dec
inc
daa
add
inc
jge
inc
stos
div
je
adc
rcrb
fcmovnu
xor
stos
adc
mov
popf
lods
mov
xchg
loopne
mov
dec
xchg
sub
ret
adc
mov
loop
xchg
pop
add
xchg
js
hlt
leave
out
jmp
push
xor
popa
pop
and
aaa
jmp
sbb
pop
push
and
sub
add
loopne
bound
ss
pop
mov
mov
jne
add
and
sub
xlat
push
dec
add
mov
nop
pop
mov
fscale
mov
adc
add
push
jle
mov
sub
es
enter
hlt
xchg
push
or
int
decb
in
test
aad
add
jnp
hlt
jns
or
mov
mov
repz
xorl
or
das
xlat
jb
mov
adc
xor
jns
dec
lret
fistl
inc
xchg
cmp
adc
push
xor
push
aam
pusha
in
in
hlt
fnstcw
repnz
cmp
test
pop
ficoms
fisubl
insl
enter
mov
imul
jmp
mov
pop
ds
lock
imul
pop
adcb
scas
jo
mov
fwait
popa
jbe
mov
rcrb
je
mov
pop
and
sahf
scas
dec
mov
mov
fistl
jo
enter
outsb
add
jnp
sbb
adc
xchg
fs
pushf
cmpsl
data16
pop
pusha
dec
inc
add
xchg
pop
jo
sbb
push
mov
ss
pop
mov
test
sbb
add
lahf
lods
std
fstpt
jl
push
int
inc
xchg
push
or
inc
fmul
inc
lods
popf
cltd
loope
cmp
std
push
in
xchg
lcall
icebp
addr16
adc
mov
push
bound
ja
imul
inc
sbb
out
mov
call
xchg
adc
jecxz
adc
push
std
and
dec
sti
cmpsl
jnp
jmp
mov
insb
icebp
pop
ficoml
jg
cltd
rolb
push
js
jae
jmp
inc
inc
push
adc
incb
sti
mov
cmpsl
pop
inc
xchg
andb
cmp
lods
testl
and
sahf
mov
push
jo
sub
and
pop
push
pusha
movsl
lahf
ds
ret
rcl
fdiv
out
sub
pop
sbb
mov
testl
jle
test
mov
cltd
mov
test
dec
dec
aad
notb
lds
jle
mov
ds
and
cltd
jno
sahf
cmp
daa
psubsw
out
xchg
loop
roll
xchg
nop
jbe
orb
ja
sub
or
mov
fsubrl
inc
repnz
dec
cmp
imul
push
outsb
cmp
movsb
insb
int3
push
imul
fdivl
nop
in
dec
xchg
xchg
rcl
je
sbb
outsl
xchg
mov
mov
push
stc
out
push
sar
inc
sub
mov
cltd
jb
jbe
stos
shll
lods
mov
add
lods
push
mov
inc
jae
jne
xchg
inc
mov
dec
inc
xchg
xchg
mov
repnz
xchg
ret
loope
sbb
xchg
jge
add
adc
mov
pop
mov
xchg
sbb
mov
loop
xchg
das
aad
mov
imul
aad
cwtl
outsl
lret
sub
mov
popf
or
jl
jp
xor
mov
fs
push
mov
loope
scas
xor
loope
dec
pop
out
je
xor
ret
das
adc
ds
jo
sbb
add
sarb
add
adc
mov
xor
aas
xchg
push
fisttps
and
ds
fidivs
es
daa
fs
mov
test
ss
pop
aaa
xlat
add
jmp
mov
sbb
xchg
jecxz
xchg
jne
es
outsl
hlt
cmp
repz
lcall
add
and
fisttpl
mov
xchg
xchg
dec
mov
jb
push
test
sbb
xlat
lods
rorb
pop
mov
pushl
lea
pushf
mov
cwtl
pop
lea
pusha
mov
movl
push
mov
pushl
lea
jmp
call
add
shrl
jns
dec
and
push
lea
setbe
mov
jmp
mov
jmp
xchg
jmp
pushf
mov
movzbl
call
jmp
not
push
pop
nop
jmp
cmc
dec
xchg
push
pushf
pushl
ret
movb
jmp
push
pushf
lea
call
pushf
pushl
pushf
xchg
lea
mov
push
mov
pushf
movb
call
push
call
pusha
call
pushf
pushf
mov
push
mov
pushf
lea
jnp
push
mov
push
lea
jmp
mov
call
push
mov
movzbw
pushl
pop
call
nop
movb
mov
push
pop
movsbl
mov
pushf
push
lea
call
pusha
push
jmp
mov
pusha
pushl
mov
pushf
pushl
ret
lea
jns
xchg
pushf
pusha
pushf
mov
pushl
ret
lea
jae
pushf
mov
mov
pushf
pusha
pushf
pushf
lea
movb
call
jmp
lea
movl
mov
jmp
jmp
pusha
pushl
push
call
movb
call
mov
mov
pushf
pushf
lea
call
mov
movb
call
pushf
popl
call
movb
mov
call
bswap
jmp
call
mov
std
or
iret
sbb
or
cmp
and
adc
push
in
cltd
sub
dec
xor
divw
enter
ficompl
insb
sahf
out
add
push
lea
je
lds
xor
lret
pop
inc
fucom
fnstcw
xchg
stos
jl
pop
dec
pop
sbb
mov
ss
inc
lock
in
lock
push
out
cmp
push
jecxz
sub
sbb
int
fistpl
sbb
mov
aam
cmp
mov
push
mov
mov
push
push
ret
jnp
aas
outsl
ret
or
cld
in
mov
fldl2t
push
das
sub
mov
mov
iret
fsubl
dec
jne
mov
add
add
xchg
loope
aas
or
xor
jae
xchg
repz
fmuls
adc
into
pop
mov
fcoml
mov
int
cmp
lret
xchg
push
arpl
pop
pop
xor
inc
or
and
jp
insl
lea
mov
jns
cmpsl
push
xchg
dec
hlt
pop
loope
pop
outsb
mov
inc
mov
adc
push
sbb
dec
popf
xlat
and
test
xor
shlb
xor
cmc
xor
ja
xchg
jns
xchg
pop
sti
fimull
cmc
in
jp
imulb
lcall
inc
xchg
push
mov
inc
mov
decb
das
sub
mov
xor
inc
outsl
adc
or
lcall
popa
ret
jae
fsubrp
jne
in
cwtl
sbb
jnp
mov
pop
iret
hlt
sbb
stos
jno
mov
std
ds
and
imul
add
test
xlat
pop
inc
enter
fs
fidivrs
je
in
pop
cwtl
inc
in
sub
mov
push
shll
inc
lahf
scas
adc
bound
sbb
lahf
out
pop
mov
fisubs
sti
stc
cli
stos
cmc
mov
adc
add
sbb
icebp
mov
decb
cs
xor
adc
cmc
mov
xchg
and
pop
and
rolb
out
mov
lret
cmpsb
xor
out
and
jle
adc
fadds
scas
mov
add
in
cmp
popa
dec
mov
mov
icebp
ret
movsl
pop
jnp
hlt
pop
bound
jle
sub
pop
dec
into
sbb
jno
pop
push
rcll
mov
xor
mov
enter
inc
dec
idivb
and
imul
adc
loope
stc
inc
sahf
popf
add
mov
in
test
dec
dec
mov
sbb
cld
jg
subl
or
adc
mov
xor
jl
mov
and
lods
sbb
inc
xlat
orl
inc
in
aam
int3
jle
push
inc
and
mov
mov
cs
dec
and
shlb
imul
mov
aas
into
cmp
pusha
mov
xor
add
or
imul
mov
mov
push
jae
psrlw
sbb
xor
negb
sbb
mov
loope
or
cld
mov
outsl
xchg
mov
mov
inc
gs
xlat
pusha
and
imul
inc
adc
ret
mov
stos
bound
or
mul
cmp
adc
xor
xchg
or
jns
fnsave
xlat
call
xchg
aas
mov
mov
lahf
inc
add
and
nop
adc
dec
and
stos
sub
cmp
dec
fcmovnu
mov
pop
sbb
fbstp
sub
jl
add
nop
adc
cmp
popa
or
test
sbb
adc
pop
xlat
push
mov
pop
or
mov
xchg
xchg
jl
mov
shrb
add
lea
jns
inc
lods
cmpsl
lods
jnp
test
xor
sub
add
iret
xlat
adc
test
lea
mov
xor
dec
dec
rcrl
arpl
xor
fildll
xor
int3
jae
dec
xchg
rorl
mov
and
ljmp
cli
jb
addl
pop
mov
jp
scas
cmpsl
or
cmpsb
xchg
std
les
or
push
adc
in
adc
pop
xor
and
adc
ljmp
xchg
pop
mov
xchg
aaa
popa
xchg
addr16
xchg
es
jp
xchg
rclb
and
fucomi
mov
adc
add
add
push
testl
sti
pop
adc
arpl
push
mov
push
negb
jb
cmp
xchg
loope
jmp
sub
test
or
fwait
scas
inc
pop
mov
cld
push
fwait
mov
push
cmp
add
rcrb
mov
cmpsl
or
and
dec
scas
pop
cmp
stc
scas
mov
pop
xchg
mov
fwait
xchg
inc
lds
push
mov
dec
mov
ret
sub
decl
or
xor
stos
insl
in
sub
clc
ja
xlat
jne
insl
imul
les
int3
mov
jnp
and
out
push
cwtl
je
pop
addr16
fst
lahf
sub
ret
bound
iret
push
xor
pop
fisubrs
jbe
sub
arpl
xor
mov
dec
in
nop
aad
ret
call
outsb
adc
bound
xor
sti
repz
push
pop
dec
lfs
sbb
push
or
rolb
sub
dec
xchg
ret
push
adc
sbb
add
add
mov
repz
dec
xor
in
gs
inc
std
jl
mov
sbb
jl
or
aad
shl
and
in
xchg
subb
mov
fs
push
push
push
ret
mov
das
imul
add
fmull
push
mov
mov
negl
in
aam
push
or
and
mov
mov
mov
xlat
fs
adc
jl
pop
sub
dec
xchg
loope
jp
push
pop
pusha
add
hlt
inc
pop
outsl
repnz
pop
and
dec
stos
hlt
cwtl
jo
push
or
repz
add
out
lret
dec
xchg
loopne
data16
lods
jne
xor
arpl
cmp
in
and
xlat
cmpsl
jbe
inc
out
stos
cmp
sbbl
inc
nop
out
cmpsl
and
fs
out
mov
add
xchg
xchg
movsb
jb
xchg
add
mov
ret
push
rorb
shlb
test
scas
cli
outsb
and
mov
sbb
repnz
out
out
xor
cmp
jg
sbb
lods
mov
in
xor
mov
ljmp
mov
inc
adc
jge
pushf
fisubs
mov
loopne
add
sti
jo
adc
and
movzbl
mov
pusha
mov
pusha
mov
call
mov
pusha
mov
pushl
lea
call
jmp
movzbw
mov
lea
jmp
push
call
xchg
pushf
movb
pushl
ret
pushf
nop
call
push
mov
call
pushf
pop
nop
mov
movzbw
jmp
pusha
lea
jmp
mov
mov
pushf
movb
movb
lea
jmp
lea
call
lea
pushf
pushf
mov
push
xchg
push
push
pushl
ret
mov
movsbw
lea
pushf
nop
not
movsbw
movzbw
movw
mov
lea
jno
pusha
pushf
pusha
xchg
pushf
jmp
mov
xchg
pushf
pushf
movb
pushl
ret
call
xchg
pusha
pushl
ret
mov
xchg
pusha
mov
pushf
pop
bswap
movzbw
mov
pushf
pushl
pushf
call
call
mov
call
call
nop
movzbl
mov
mov
pop
pusha
xchg
pushf
mov
pusha
mov
movzbw
mov
pushf
mov
pushf
movb
mov
jmp
mov
pushl
push
jmp
call
jmp
setg
lea
mov
movw
jmp
pushl
lea
mov
xchg
push
movw
mov
pushl
ret
jmp
xor
cmp
bt
xor
cmp
cmp
xor
cld
pushl
popf
mov
pushl
ret
jmp
push
xchg
pushl
pushl
ret
jmp
movb
lea
jmp
mov
lea
movb
xchg
mov
movb
pushl
ret
push
mov
mov
lea
call
mov
pushf
pushf
push
lea
pushl
push
xchg
movb
movw
pushl
ret
pushf
jmp
movl
push
pusha
pushf
pushf
movl
push
pushf
lea
jmp
call
pop
movsbl
mov
push
mov
pusha
call
xchg
push
movb
pushl
pushf
pushl
ret
mov
pushf
pusha
lea
mov
call
jmp
pusha
nop
pusha
jmp
pushf
movl
push
pusha
movl
pushf
pusha
lea
jmp
push
jmp
xchg
pushl
pushl
ret
call
pusha
nop
mov
xchg
lea
pusha
lea
mov
mov
lea
movb
mov
setp
call
mov
jmp
jmp
sbb
sahf
std
lret
adc
data16
shlb
dec
loopne
inc
cmp
add
clc
cli
jno
adc
add
inc
mov
shl
xchg
xlat
dec
mov
repnz
test
and
call
shlb
std
scas
jp
cmp
add
retw
fucom
cmp
int
adc
std
push
push
add
repz
pop
maxps
int
cmp
ret
out
fcomp
std
lods
mov
add
dec
and
inc
pop
adc
jo
stc
cwtl
ljmp
cmpl
out
aas
lahf
push
cmc
inc
adc
cld
rorb
stos
cmc
loop
adc
fcomp
std
dec
push
inc
stc
sbb
mov
inc
es
repnz
cmpl
lret
imul
push
cmp
scas
cwtl
outsl
movsl
pop
mov
mov
mov
or
cld
insl
mov
call
dec
scas
fucom
pop
dec
mov
fcoms
lock
nop
mov
cmp
imul
ret
std
add
nop
mov
inc
test
xor
fistps
mov
add
push
outsl
shlb
pop
cmp
mov
push
cwtl
or
stos
pop
popl
mov
fsubp
fwait
xchg
aaa
xchg
lahf
enter
adc
fdivrl
jns,pt
jle
cli
notl
add
out
mov
pop
out
push
cmp
jmp
jl
or
inc
jle
in
ljmp
or
fwait
loopne
jge
adc
xchg
xchg
pop
and
cli
pop
mov
pop
repnz
ljmp
jno
stc
sub
bound
xchg
lock
sbb
xchg
std
das
push
addr16
push
push
jl
subb
xorl
insb
mov
dec
push
pop
aas
xchg
push
and
xor
stos
pop
mov
xchg
jle
ret
jp
sbb
cmp
rcr
cs
ds
xor
dec
dec
mov
mov
xor
mov
insb
int
insl
out
repz
xchg
insb
cmp
inc
push
inc
ja
test
xchg
rcll
nop
aas
mov
cmp
mov
fildl
popa
mov
lock
mov
movsl
jae
or
push
push
test
enter
mov
lods
jnp
adcb
loope
push
sub
stc
xor
int3
rcll
adc
aas
jns
cmp
dec
xor
push
mov
loope
ss
mov
mov
jnp
add
sbb
mov
cmc
mov
lds
or
sahf
xchg
incl
in
xchg
mov
xor
sti
lret
in
add
iret
adc
roll
add
leave
adc
insl
jle
lahf
fisttpll
out
stos
sbb
cld
inc
add
mov
xor
add
movsb
mov
push
sbb
cmp
rcrl
int3
incb
pop
inc
testb
cmp
in
cli
ss
and
aas
mov
or
push
push
push
sbb
subl
into
lods
movsb
in
fisttps
outsl
cmpsb
mov
pop
movsl
scas
jp
loop
adc
pushf
sahf
sbb
sub
sbb
sbb
jecxz
mov
cmpsb
stos
daa
je
pop
test
fucomip
ret
inc
in
int3
int
rcrl
test
adc
xchg
mov
xchg
fiaddl
out
xor
mov
sub
cli
dec
xchg
mov
xchg
shlb
inc
adc
mov
rcll
jecxz
call
push
jae
mov
push
out
mov
push
and
movb
movw
movb
pushl
ret
call
jmp
call
push
lea
call
jmp
push
mov
mov
movb
call
movzbw
mov
pop
mov
pushf
movl
pushf
pushl
ret
nop
pusha
mov
pushf
movzbw
pop
mov
mov
mov
pushf
jmp
lea
pop
nop
lahf
lea
cwtl
push
mov
jmp
nop
call
mov
pushf
mov
lea
jno
mov
push
lea
jmp
pusha
pusha
call
nop
lea
ja
pushf
mov
movsbw
mov
push
pushl
pushf
lea
pushf
mov
push
pusha
pop
mov
jmp
lea
pop
pusha
pushl
movb
xchg
call
push
mov
pushf
mov
pusha
pushf
lea
mov
movb
xchg
pushl
pushl
pushf
movw
pushl
ret
jmp
lea
mov
mov
call
call
mov
pushf
xchg
jmp
mov
jmp
pusha
jmp
not
mov
movzbl
nop
lea
pushf
not
mov
push
xchg
movb
movw
call
pushf
mov
mov
mov
call
nop
pusha
xchg
not
mov
pushf
push
pushf
pushf
lea
jmp
jmp
call
lea
jnp
xchg
pusha
pushl
ret
xchg
call
mov
push
jmp
ret
rcr
std
lock
inc
mov
push
mov
xchg
cltd
mov
adc
jns
adc
popa
and
loopne
mov
lahf
xchg
pop
push
hlt
inc
lods
idivl
adc
ja
cmp
iret
xor
mov
push
push
mov
mov
pushf
pop
push
push
in
pop
pop
loop
fistpll
pop
mov
cwtl
popa
das
mov
test
pushf
lea
or
scas
mov
jno
pop
stc
sti
rorb
lret
jp
or
addl
jl
or
mov
mov
test
xchg
aaa
js
mov
clc
sbb
imul
xchg
pop
mov
mov
sub
lods
into
sti
lea
pop
and
mov
jecxz
xor
or
test
or
jp
jb
add
sub
dec
adcb
aam
aam
xor
mov
and
inc
ja
jp
in
lahf
xor
cli
mov
in
aaa
push
and
sti
cwtl
lods
adc
fdivl
mov
ljmp
add
dec
pop
daa
out
cmp
jl
mov
movsb
inc
hlt
cmp
jp
std
xor
inc
add
divb
or
popf
mov
mov
lret
pop
xor
mov
insl
mov
inc
jl
cmpsb
add
inc
rolb
push
sub
and
mov
mov
in
add
xor
addb
inc
adc
les
cmp
cmp
jge
sub
mov
insl
xor
mov
fs
push
push
cmc
xchg
mov
in
loop
and
ljmp
push
scas
outsl
daa
orb
int
and
xchg
bound
incl
jbe
into
data16
fwait
dec
mov
jno
add
add
mov
xchg
xchg
arpl
mov
dec
int3
clc
and
inc
lods
mov
mov
punpckhdq
dec
mov
fists
outsb
sub
shr
sub
add
int
repz
adc
int3
jne
in
cmpb
mov
mov
repz
mov
movsl
xchg
mov
push
xor
dec
test
push
xchg
ljmp
cmp
pop
scas
sbb
inc
aaa
add
dec
dec
jb
stc
and
out
iret
push
xchg
xorb
pusha
aam
fs
push
stos
je
sbb
aad
or
xchg
fimuls
bound
in
xchg
movsb
or
push
xchg
lret
jnp
and
and
repz
sub
out
xchg
sbb
xchg
cmpsb
cmpb
fs
cltd
dec
mov
aad
cs
fcomp
je
out
push
pop
cmp
xchg
loope
leave
xlat
gs
out
sub
test
stos
rolb
ret
jle
sarl
mov
sbb
scas
jg
shrb
jbe
sbb
imul
adc
ds
je
das
xchg
jne
cli
jp
pusha
fildl
jno
add
xchg
push
mov
mov
mov
xor
or
pushf
jno
addl
dec
fdiv
outsl
jne
mov
push
push
lock
das
fistps
cmpsl
dec
dec
adc
inc
sub
adc
fs
addr16
sahf
data16
or
call
pop
arpl
mov
xchg
dec
sbb
jne
es
jb
js
lcall
cmovns
dec
lcall
or
aaa
sbb
out
sbb
or
pop
pop
pusha
test
hlt
daa
mov
adc
xlat
lcall
and
sub
mov
dec
data16
push
cmpsb
imul
clc
addb
je
f2xm1
stos
sub
mov
xchg
dec
pusha
stos
dec
xor
mov
testb
es
push
pop
mov
push
push
dec
push
movsl
push
xchg
push
in
fdivrl
ljmp
orb
into
pusha
stos
xchg
out
ss
jo
adc
push
popf
inc
adcb
mov
and
movsl
out
fidivl
add
sub
sub
jecxz
addr16
repz
pop
pop
sar
repnz
sub
shll
shl
or
adc
nop
data16
fidivrl
inc
adc
lret
lods
stos
adc
sub
clc
loop
mov
jmp
cmpsb
jp
pop
out
sub
in
xchg
xchg
jne
sub
or
sub
push
push
dec
aad
lock
xchg
xchg
dec
int
dec
daa
adc
std
fsubs
inc
pop
hlt
dec
sbb
dec
cltd
into
orl
jge
jns
call
push
sbb
dec
pop
or
push
fnsave
inc
call
inc
sbb
fcmove
cmpb
dec
pop
ljmp
mov
sub
sbbl
cli
push
adc
mov
pop
fsts
pushf
sub
int
add
add
inc
and
outsb
stos
xor
sbb
repz
repz
jmpw
cmp
pop
pop
inc
nop
jnp
mov
nop
imul
enter
sub
xchg
cmp
std
hlt
inc
adc
cmp
into
imul
in
fdivs
jmp
mov
ret
loopne
jmp
pop
jge
xor
pop
ja
hlt
sbb
pushf
cltd
add
call
in
mov
clc
hlt
sub
sbb
dec
imul
jae
daa
aam
loop
aaa
jb
jecxz
cmpsl
xchg
cld
dec
mov
jp
xorb
jg
test
jecxz
and
sub
mov
mov
add
js
push
mov
imul
sbb
fwait
arpl
sbb
push
adc
jl
cltd
mov
sub
cmp
xchg
cmp
clc
pop
mov
push
pop
sub
push
shrb
jae
push
je
jno
sbb
clc
movsl
shr
mov
or
in
call
test
jae
mov
fisubs
xchg
out
inc
sub
out
push
jne
data16
fildl
cmp
in
test
and
inc
les
out
cmp
lods
fmuls
pushf
js
stos
mov
loopne
pand
sbb
in
cmpsb
mov
mov
into
add
sub
cmc
mov
push
dec
xor
jecxz
lcall
movsb
aam
jo
adc
or
lcall
cli
and
icebp
shrl
xor
dec
push
test
sti
popa
jg
dec
lods
mov
aam
adc
dec
repz
movsl
mov
pop
mov
pusha
inc
in
mov
outsl
mov
sub
pop
mov
mov
mov
das
aas
dec
xchg
xchg
std
popa
ret
mov
sub
jecxz
test
and
sbb
xlat
lret
mov
stos
mov
loop
mov
or
push
and
fs
fcmove
or
mov
sbb
pop
inc
push
pusha
test
fisubrs
jge
decl
push
jg
lock
mov
mov
arpl
sbb
pusha
lret
mov
mov
mov
stos
dec
xchg
outsb
adc
popl
mov
mov
lods
shlb
add
mov
data16
movsb
pusha
data16
pop
push
movsb
nop
imul
lea
adc
pop
ret
jne
pop
stos
lods
and
out
fcom
pop
pop
sbbb
cltd
mov
sbb
into
pop
dec
stc
into
int3
fdivrs
cmc
data16
lret
dec
push
insl
leave
push
push
push
aaa
cwtl
sub
cmp
adc
push
mov
jae
xlat
jne
aas
sub
icebp
lock
push
inc
lds
add
hlt
add
mov
jmp
sahf
sbb
clc
in
xchg
push
cmp
sub
in
fxch
jl
mov
xchg
cli
adc
cltd
movsb
aad
dec
int
rolb
test
dec
push
fiaddl
xchg
push
loop
out
popa
sub
out
lock
mov
push
push
jo
loop
int3
shll
not
nop
movsbw
pushf
pop
pop
pusha
xchg
push
mov
pusha
pushl
push
jmp
mov
movb
lea
jmp
lea
nop
push
mov
not
movzbw
lea
jb
xchg
pusha
setge
movsbw
movzbl
xchg
lahf
lahf
mov
push
call
movzbw
nop
movsbw
pushf
pop
not
pop
pushf
push
push
xchg
jmp
pushf
xchg
pushf
mov
pushf
pushf
pushl
ret
not
mov
xchg
pop
mov
push
pop
mov
not
movzbl
mov
mov
lea
movzbl
bswap
pushf
movsbw
mov
mov
bswap
mov
pushf
movw
pushl
ret
xchg
pusha
mov
jmp
mov
mov
jmp
jmp
movb
lea
call
mov
pushf
jmp
call
call
lea
jmp
pushf
mov
push
mov
lea
jge
pushf
pusha
pusha
lea
call
lea
pushf
call
push
mov
pusha
lea
mov
bswap
lea
movsbw
mov
mov
lea
push
lea
jno
pop
pusha
movb
push
pusha
pushl
ret
pushf
lea
pushf
push
xchg
movw
push
mov
pushl
ret
call
arpl
aad
lods
mov
je
add
xchg
decl
mov
mov
movb
mov
push
pushf
movw
lea
jmp
xchg
jmp
mov
lea
push
mov
movw
mov
pusha
movb
mov
pushf
jmp
mov
xchg
pushf
pushf
movb
pushf
pushl
ret
not
bswap
mov
pushf
pushf
call
mov
setne
lea
bswap
pushf
mov
movw
jmp
pusha
not
cwtl
nop
jmp
mov
push
lea
jmp
lea
movsbl
mov
movzbw
movsbw
mov
pushf
pushl
ret
mov
pushf
call
lea
call
pusha
xchg
pushf
movb
xchg
not
mov
mov
call
call
pushf
pusha
xchg
pushf
mov
pushl
pushf
pushl
ret
push
call
mov
pushl
push
mov
pushf
call
pushl
mov
jmp
pushf
pushl
jmp
pushf
jmp
pusha
nop
call
pusha
pusha
mov
call
jmp
pusha
pushf
movb
lea
pushf
movb
xchg
pushl
pushf
pushf
pushl
ret
mov
movb
call
pushf
xchg
movw
push
pushf
pushl
ret
movb
xchg
movw
pushl
push
pushf
pushl
ret
lea
movb
jmp
pushf
pushl
movb
call
movw
xchg
pushf
pushl
ret
push
pushf
pushf
xchg
pusha
mov
lea
mov
jmp
lea
pushl
xchg
pushf
mov
pushl
ret
jmp
mov
push
lea
jge
pushf
nop
setl
lea
jnp
movzbw
pop
pushf
movb
jmp
xchg
mov
movw
mov
pushl
ret
call
push
mov
call
pusha
movw
jmp
pushf
pushf
pushf
mov
bswap
bswap
bswap
mov
pushf
push
pusha
mov
push
jmp
mov
jmp
lea
jmp
mov
call
pushf
jmp
setnp
mov
pop
pusha
jmp
xchg
lea
movzbw
cwtl
mov
call
push
mov
lea
pusha
call
lea
jb
pusha
mov
movzbw
lea
push
mov
pushf
jmp
pusha
call
jmp
xchg
mov
mov
pushl
pushl
ret
jmp
movb
push
mov
mov
movw
push
lea
pushf
movb
pushl
ret
jmp
lea
pusha
pushl
ret
pushl
push
jmp
jmp
mov
call
lea
push
movw
movsbw
nop
jmp
mov
pop
bswap
movzbl
mov
pusha
mov
push
lea
movw
mov
lea
not
jmp
test
stc
jmp
mov
xchg
pop
call
lcall
inc
add
gs
lea
push
pusha
xchg
pushf
pushf
pushf
mov
pushl
ret
pushf
pushf
xchg
bswap
lahf
mov
pushf
push
jmp
jmp
xchg
call
jmp
ret
ret
fscale
imul
stos
mov
pop
test
clc
in
in
cmp
add
cmc
test
stc
leave
orb
jbe
mov
sahf
rolb
int
or
jp
ret
sbb
jae
sbb
stc
out
in
push
mov
pop
sub
in
pop
je
sub
pop
or
in
mov
mov
adc
mov
xor
imul
sbb
mov
mov
pop
adc
je
sahf
cmovns
xchg
xchg
pop
sub
call
pop
jl
adc
mov
push
andl
sub
fistpl
ficoms
daa
jne
shll
push
pop
std
adcb
mov
mov
mov
lea
mov
negl
stos
frstor
ds
xchg
jae
mov
cs
movsl
out
nop
mov
dec
into
mov
pop
fwait
jmp
xchg
outsl
cmp
cld
leave
into
stos
jno
adc
fldt
lock
mov
iret
and
ret
push
jmp
xchg
lock
cmp
mov
out
popf
mov
aas
je
aam
mov
loop
fcoms
int3
lds
sub
cli
divl
pushf
test
mov
repnz
hlt
icebp
stos
mov
outsb
cmp
cmp
mov
ret
cmp
cmpsl
sbb
jb
frstor
or
aaa
stos
xchg
xchg
stos
jg
fmul
jo
std
xlat
das
movsl
sub
add
or
push
ljmp
cmpsb
and
jecxz
xchg
or
inc
sub
jg
fstps
xchg
hlt
daa
lock
fwait
in
mov
jae
enter
sub
nop
sbb
filds
pop
in
push
into
insl
aad
sbb
push
mov
and
ret
les
cmc
dec
inc
in
cld
xchg
adc
arpl
sbb
jle
add
sbb
xchg
inc
xchg
shl
xchg
cmp
movsb
data16
lret
dec
jp
jb
fisttpl
aam
push
mov
inc
push
dec
xlat
cmp
push
mov
loopne
lcall
cmp
cmc
imul
or
shll
test
cmp
push
push
fs
leave
movsl
lock
in
pop
add
iret
fnsave
dec
enter
adc
dec
ljmp
sbb
mov
xchg
sub
ss
push
int
pop
imul
stc
adc
add
enter
lods
mov
xchg
pushf
mov
je
adc
out
xchg
dec
popf
fsubs
loopne
mov
pushf
and
sub
movsl
arpl
mov
mov
mov
loop
pushf
pop
out
lret
lret
push
mov
push
sahf
push
bswap
adc
add
and
pop
arpl
and
sbb
sub
loope
xor
pop
jecxz
and
std
inc
mov
sub
push
enter
and
unpcklps
aas
les
sbb
out
jnp
out
out
in
inc
add
jae
add
inc
jmp
mov
aas
add
mov
bnd
iret
jb
push
push
loope
add
mov
shrb
andb
fwait
add
push
in
lock
icebp
std
lahf
test
dec
mov
mov
mov
push
mov
ds
cmpsb
add
in
mov
shrb
push
mov
sahf
xchg
mov
loope
lods
pop
lods
addr16
lea
in
hlt
mov
push
xchg
mov
jp
pop
fsubrs
inc
sahf
fsubs
cmpsl
jg
lret
xor
lret
jno
fnstsw
je
and
test
shll
movsb
das
sbb
or
cwtl
gs
out
sbbl
xor
in
cmp
push
repnz
cwtl
int3
add
mov
cmpsb
icebp
dec
xchg
xchg
in
test
dec
arpl
push
mov
les
cmp
mulb
ficompl
mov
out
adc
mov
xor
mov
adc
and
aas
inc
and
lcall
pop
cmp
push
adc
add
js
push
int
dec
dec
push
sub
punpckhbw
gs
push
imul
cmp
mov
leave
inc
sub
mov
loope
popa
repnz
aas
mov
mov
and
in
xchg
xor
std
shll
inc
dec
imul
sub
in
cltd
fdivr
fisubrs
mov
push
push
ds
fnstcw
fsubp
inc
addr16
jno
jns
xchg
pop
add
mov
clc
lds
loopne
push
popf
xor
add
lret
mov
xchg
cwtl
xchg
xor
bound
cmpsb
jp
out
pop
testl
or
fistpll
or
mov
ret
es
mov
ljmp
insl
jne
mov
pop
or
xor
ljmp
or
sub
push
mov
pushf
push
cli
sbb
inc
pop
in
jb
or
pop
mov
sbb
pop
shrl
fwait
add
sub
cmp
cmp
imulb
pop
inc
inc
and
inc
pusha
xchg
test
movsb
dec
adc
mov
cmp
cmc
loope
xor
sar
add
mov
mov
xor
adc
mov
pusha
ss
repnz
ss
lahf
mov
popa
sub
sahf
mov
sub
lods
mov
pusha
adc
mov
ficomps
xchg
lea
into
mov
insb
dec
loopne
cmp
idiv
pop
test
sub
out
lds
ret
call
fisubs
cmp
in
hlt
push
pop
pop
and
out
lcall
movsl
lock
xchg
jbe
jl
call
mov
or
addl
mov
shrb
sbb
stc
call
insl
into
xchg
push
aad
movsb
jg
cmpsl
cld
pop
mov
sar
add
mov
pop
xor
loopne
xor
aam
mov
cs
mov
push
sub
jae
push
daa
rcll
int3
les
or
call
pop
inc
add
sahf
add
mov
jl
lock
cmp
cmpsl
sbb
mov
fld
jp
jle
jl
jg
add
ret
inc
push
add
fwait
call
aad
cmpsb
insb
testb
push
sub
push
loope
or
jp
or
cmp
fisttpl
scas
mov
push
lcall
push
sub
ficoms
pop
add
mov
lock
mov
arpl
pop
lods
and
and
lcall
stc
aad
loopne
and
sbb
sti
mov
js
test
push
mov
xlat
jge
mov
mov
negb
jg
xchg
jo
sti
xor
jge,pn
add
stc
pushf
pop
outsb
shlb
outsb
out
or
loopne
ret
mov
inc
es
jne
mov
inc
cmp
jo
mov
mov
inc
mov
dec
sub
or
xchg
icebp
sub
lcall
andb
loopne
aaa
lea
or
mov
or
adc
rol
mov
xlat
xchg
insl
add
out
jnp
mov
sarb
out
jne
ficompl
call
sub
push
je
repz
in
dec
xchg
sbb
addr16
adc
xchg
push
pop
shlb
cld
into
insb
test
insl
arpl
sub
test
mov
xchg
lea
jae
pushf
pusha
mov
movsbw
mov
jmp
pusha
pusha
nop
lea
ja
push
xchg
pusha
pop
call
call
mov
movsbl
lea
mov
pushf
call
mov
movb
lea
movb
push
xchg
mov
mov
pushf
pushl
ret
push
xchg
pusha
push
push
pushl
ret
call
pushf
movw
mov
jmp
push
lea
pushf
pushf
jmp
movb
pushl
mov
pusha
pushl
jmp
mov
bswap
mov
jmp
call
mov
pushl
pushl
mov
mov
jmp
pop
mov
mov
push
push
jmp
xchg
pop
pushf
mov
call
jmp
pushf
push
jmp
jmp
push
pushf
mov
pushl
mov
pushf
pushf
call
lea
call
xchg
pop
mov
pushf
mov
pushf
call
mov
push
lea
pushf
call
clc
xor
stc
xor
jmp
xchg
push
pushf
pushf
movb
pushl
ret
setle
mov
push
jmp
mov
jmp
pusha
jmp
call
mov
call
pusha
nop
call
nop
pushf
pushf
pushf
xchg
lea
lea
not
mov
pushf
lea
push
mov
bswap
setle
lea
mov
lea
jg
pusha
pushl
mov
jmp
movzbl
call
call
call
not
movsbw
bswap
nop
movzbw
jmp
mov
mov
lea
push
movb
pusha
pushl
mov
push
jmp
push
call
bswap
movzbl
lea
nop
call
lea
jns
pusha
mov
call
xchg
push
pushl
ret
lea
pop
pusha
movb
pushl
ret
mov
movzbl
mov
bswap
lea
movzbw
pop
mov
pushf
mov
mov
pushl
ret
movl
movb
xchg
pushf
pushf
pushl
pushl
ret
mov
nop
pushl
xchg
mov
mov
jmp
call
movb
mov
push
movsbw
bswap
pop
mov
pushl
lea
jp
pushf
mov
pushl
push
mov
lea
pusha
jmp
push
movb
lea
jmp
mov
pushf
movzbl
pusha
mov
pushf
push
mov
pushf
movb
pushf
movb
lea
push
pushl
ret
pusha
push
pusha
xchg
mov
mov
mov
pushl
ret
setnp
cwtl
jmp
movb
xor
push
xor
bt
xor
cmp
stc
xor
bt
xorl
bt
xor
cmp
xor
cmc
pushl
popf
pushl
pushf
pushl
ret
movl
mov
pop
movsbw
mov
pushf
call
call
nop
call
pushf
pushf
mov
bswap
push
push
lea
mov
call
jmp
xchg
push
movb
pushl
ret
pushf
pusha
mov
mov
jmp
jmp
pushf
nop
pushf
mov
pusha
pushf
xchg
not
push
bswap
pop
mov
push
pushf
movb
lea
pushf
mov
jmp
xchg
movl
mov
pushl
ret
pushl
pushf
push
xchg
pushf
pushl
push
push
pushl
ret
movb
jmp
call
pushf
mov
pushf
pusha
lea
push
pushl
ret
sbb
insb
ss
stc
inc
js
ss
mov
lock
je
cmc
shrl
ja
leave
es
imul
fwait
into
xchg
enter
jae
add
xor
mov
xchg
dec
test
loop
idivb
jg
mov
popa
cmpsb
pop
xchg
call
and
pusha
in
lret
sbb
mov
or
in
jnp
mov
jnp
sbb
fcomip
fimull
push
adc
into
push
iret
add
jne
sbb
rorb
mov
stos
repz
inc
cmp
xor
call
outsl
add
pop
stc
adc
mov
or
xor
inc
adc
std
pop
jmp
dec
fcoms
fsubs
cmp
xchg
and
pusha
cmpsl
loope
fnsave
xchg
pop
push
leave
sub
cld
cli
inc
jb
popf
cld
pop
inc
test
into
xchg
repnz
cltd
push
loopne
add
popa
stos
or
mov
xor
or
xchg
sbb
push
adc
jp
ss
loope
sbb
out
or
jmp
push
dec
cwtl
iret
inc
loope
inc
iret
imul
xchg
jbe
aam
iret
pop
dec
leave
mov
cmpsb
adc
mov
insl
adc
test
ljmp
inc
mov
stos
mov
and
or
mov
sbb
out
inc
test
addb
cmp
add
xchg
mov
lret
mov
add
stc
xchg
fnstcw
xor
push
cli
mov
imul
push
mov
sub
repnz
es
push
outsl
push
inc
xor
or
xor
pop
ds
orb
out
cmpsb
dec
xchg
pop
lea
rorl
mov
adc
sbb
aaa
ret
cld
fldcw
or
cli
aad
xchg
movsb
shl
cmp
mov
push
movsb
xchg
ds
mov
and
idivl
jnp
in
ret
xchg
jnp
adc
es
jno
fldl
bswap
jge
add
inc
ds
or
pushl
out
mov
push
dec
stc
mov
int3
mov
aaa
jl
cmp
orl
jle
xchg
jno
enter
pop
imul
outsb
sub
cmp
popa
out
stos
jl
iret
adc
sahf
cmpsb
and
repz
push
adc
xlat
rcrb
fst
popf
pop
gs
push
ret
jnp
lea
fsubrl
lods
dec
std
sub
mov
rcr
sub
or
call
rcrb
sahf
insl
stos
imul
lods
aad
inc
popa
cmpsl
je
or
xchg
pop
aaa
das
jle
sti
sub
mov
inc
mov
sbb
in
je
bound
movsl
aaa
jb
pushf
lahf
sub
adc
stos
mov
lea
mov
popa
xchg
adc
mov
inc
or
idiv
and
push
xchg
xchg
test
shrl
outsb
pop
pop
popa
cmp
cmp
push
mov
sub
lret
sbb
cli
repnz
xchg
loopne
jmp
rcrl
pop
cld
push
pop
xchg
fs
adc
xchg
pop
mov
decb
out
lcall
mov
shl
lcall
aas
popf
gs
inc
or
ret
test
dec
ljmp
scas
loope
dec
inc
jb
mov
mov
iret
push
fbld
fldt
add
mov
mov
cmp
nop
or
pushf
lods
push
adc
mov
pop
jge
mov
mov
mov
clc
es
dec
push
cs
mov
push
je
xchg
mov
cmp
addr16
daa
pop
jo
js
cs
cld
or
inc
and
rorl
movsb
js
push
dec
adc
pop
ret
pop
dec
push
mov
shll
add
dec
add
inc
aas
mov
gs
lods
nop
ret
call
cmc
idivb
xchg
jo
jmp
jbe
dec
add
pop
lods
add
enter
cmpsl
js
mov
in
dec
mov
hlt
mov
es
imul
pusha
push
iret
push
stc
cltd
push
imul
data16
lret
jle
pop
popf
or
jmp
and
mov
jbe
mov
jno
or
xlat
mov
push
mov
pop
push
shrb
push
mov
inc
imul
out
push
mov
lcall
fisttps
xchg
cmp
loop
outsb
add
pushf
inc
lahf
adc
rclb
and
adc
inc
add
arpl
cmp
test
mov
add
cmc
and
add
sub
mov
cltd
mov
xchg
push
and
imul
and
addr16
daa
push
inc
call
out
mov
mov
aam
jb
pop
add
stos
lods
and
add
push
in
mov
clc
dec
xchg
cmp
jae
cltd
inc
dec
paddb
divb
or
mov
lea
fcmovu
mov
int
push
xchg
jae
leave
jg
add
and
test
aas
push
mov
pop
push
movsl
sub
test
jns
ss
xor
jne
in
push
jae
sub
faddl
cld
mov
dec
inc
xchg
adc
dec
or
pop
mov
dec
pop
sbb
cmp
ja
ljmpw
das
in
daa
icebp
cmp
std
js
or
and
call
add
xor
aam
sti
scas
dec
icebp
jle
gs
adc
mov
repz
xchg
mov
adc
ret
mov
hlt
push
mov
dec
pusha
adc
shr
lahf
in
sub
xchg
or
and
lret
mov
nop
jbe,pn
sbb
int3
cmp
mov
inc
sbb
insl
out
sbb
push
pop
pushf
cmpsb
xchg
cli
lods
lods
fldl
or
sbb
adc
leave
jne
add
xchg
sti
xchg
popf
xlat
pop
rcl
jge
pop
stc
mov
jne
fs
jl
sbb
fidivl
sahf
ret
int3
dec
es
pop
sub
cmp
fstps
jmp
fidivl
rolb
int
pop
mov
or
repnz
and
jae
xor
ljmp
xchg
movsl
insl
or
pushl
movl
push
fldcw
adc
add
mov
xchg
outsb
js
cld
dec
mov
mov
lods
data16
bound
std
adc
push
xor
les
pop
sbb
dec
clc
in
ret
adc
into
enter
xchg
in
aam
fsubrl
sbb
out
rol
jge
pop
or
push
sub
insl
addb
mov
pop
loope
insb
xor
add
mov
jg
sbb
xor
xchg
mov
or
or
movsb
fucomp
je
inc
jl
mov
nop
or
fwait
addr16
xchg
cmpsb
lods
test
out
es
fstpt
iret
fsubrl
pusha
orb
dec
mov
call
sbb
fmul
jne
or
arpl
fdivrl
icebp
out
aad
xchg
idivb
mov
arpl
fmuls
in
inc
int
dec
adc
or
sub
jge,pn
pop
ljmp
scas
xlat
stos
dec
int3
leave
test
addr16
cmp
mov
xchg
out
push
int3
push
lods
ljmp
pushf
aad
int3
inc
rol
push
repz
pop
enter
jnp
imul
lcall
mov
mov
push
dec
jl
cmpsb
xor
xor
and
in
mov
andl
mov
add
loope
sti
aam
int3
mov
pushf
lret
inc
inc
and
cmp
inc
sbb
xor
and
and
inc
pop
mov
outsb
cmpsb
stc
and
jmp
aam
int3
popf
fistpll
ljmp
push
shrb
es
bound
sub
dec
push
sbb
orl
adc
pop
int3
or
aaa
jl
mov
lea
je
pusha
mov
pushf
xchg
pushf
push
pushl
ret
push
inc
dec
dec
push
jmp
push
mov
mov
not
pushf
xchg
push
call
pushf
mov
movzbl
mov
jmp
movw
mov
movsbw
bswap
mov
jmp
mov
pushl
pushf
pushf
jmp
call
lea
movsbl
lea
jbe
lea
mov
mov
movzbw
lea
setge
pop
pusha
push
mov
pushf
pushl
ret
jmp
jmp
jmp
mov
push
lea
jle
pushf
mov
jmp
push
call
pusha
nop
push
movw
pusha
xchg
not
pushf
mov
push
push
pushf
jmp
mov
bswap
mov
jmp
pusha
pusha
pushf
lea
jmp
movb
lea
pushf
xchg
pushf
pushf
pushl
pushl
pushl
ret
xchg
pushf
pushf
pushl
ret
movl
call
call
jmp
mov
pushf
seto
pushf
push
mov
pushf
mov
push
pushl
lea
jmp
pushf
mov
lea
not
mov
mov
mov
push
call
mov
push
push
movl
push
lea
movb
movb
lea
jbe
pusha
xchg
pusha
pushf
pushl
ret
xchg
pushf
mov
pushl
pushl
ret
mov
jmp
mov
movl
xchg
mov
movw
mov
pushl
ret
call
push
mov
xchg
pushf
push
mov
pushf
pushl
ret
and
std
test
mov
and
icebp
popf
loopne
rol
xor
sarb
adc
jecxz
cmpsb
insb
jle
jae
jg
test
enter
repnz
add
and
daa
xchg
out
cmp
pop
inc
xchg
sub
xchg
mov
inc
and
rolb
add
adc
mov
ficoms
addl
repnz
stos
sub
push
stos
pop
hlt
in
push
cmc
out
or
xor
push
pop
orl
add
inc
push
lods
out
cld
and
xchg
xorl
push
mov
imul
mov
add
xor
and
fsubrs
fsubl
enter
dec
add
sub
xchg
and
roll
lret
add
cwtl
jge
push
lret
jle
or
sbb
clc
repnz
mov
mov
loop
or
test
mov
addr16
and
movsb
je
aam
and
pusha
xchg
xchg
mov
sub
mov
nop
xchg
lcall
pop
sahf
pop
out
cmc
push
sub
addr16
xchg
insb
out
pop
test
pushf
mov
push
inc
add
test
lea
sti
sbb
mov
in
dec
cwtl
mov
mov
sti
and
andl
xchg
movsb
jne
fistpl
addr16
pop
cmc
jns
add
hlt
add
repnz
pop
sarb
jo
loop
movsl
fildll
roll
lock
inc
data16
mov
mov
sub
mov
xchg
lret
stc
push
loopne
out
outsb
push
inc
push
and
or
push
out
xor
or
out
xchg
add
xlat
inc
mov
bound
xchg
pusha
sbb
lock
das
lret
pop
sbb
sti
xor
pop
push
clc
out
shll
push
adc
pusha
aad
test
pop
orb
in
or
and
add
mov
sub
mov
pop
cltd
out
loope
sbb
inc
and
cli
push
fcmovnu
dec
push
call
lea
jmp
outsb
xor
mov
lods
jp
pop
cmp
shr
xchg
add
jp
mov
sub
dec
mov
scas
xchg
pop
and
mov
and
lret
outsb
mulb
cmp
lods
nop
dec
jb
clc
jge
es
pusha
adc
dec
sub
jbe
or
sbb
xchg
mulb
sub
mov
dec
add
mov
mov
xor
jns
popf
notl
add
nop
jecxz
cmp
ds
in
aad
adc
cmp
mov
icebp
cmp
mov
test
pop
movsl
jnp
ss
imul
push
mov
mov
fildll
scas
cmpsl
pop
and
ret
repnz
mov
jo
mov
je
repnz
push
loopne
stc
test
pop
cmp
sbb
add
cmp
icebp
loop
arpl
pop
jecxz
popl
fdivl
xchg
mov
call
sub
jmp
add
push
lock
mov
ficoms
cltd
aad
cwtl
incb
fcompl
mov
je
fiadds
add
mov
aad
imul
cwtl
push
jnp
add
mov
sarl
adc
cmpsl
cmp
push
mov
testl
neg
inc
lea
jae
call
lret
fwait
xchg
cli
and
in
jge
js
and
jb
lock
sbb
inc
pop
dec
sbb
inc
movb
aas
and
movsb
and
xor
pop
pop
and
mov
push
jle
dec
lret
int3
pop
loop
mov
push
cmp
rclb
mov
or
add
mov
mov
decl
das
imul
push
outsb
push
aad
dec
push
stos
jbe
add
sbb
imul
outsl
mov
test
jecxz
push
sbb
pop
pop
xchg
movsl
or
xlat
and
jge
adc
xor
xor
ja
mov
lea
xchg
fldenv
adc
cmp
mov
lds
add
repnz
add
sub
jge
shlb
bound
xchg
test
jne
dec
mov
bound
pop
es
pop
aam
inc
or
adc
fsubrp
out
in
jmp
push
inc
fsubrp
dec
sub
adc
dec
jns
loope
dec
push
mov
xlat
sub
xchg
sbb
in
pop
sub
xor
add
mov
fdivl
ret
push
adc
int
mov
push
push
push
outsl
lea
fisttpl
andl
cmp
dec
out
xor
sub
sbb
mov
or
test
xchg
fisubrl
fcmovb
cvttps2pi
mov
lret
imul
push
sub
lahf
xchg
jb
aam
pushf
cmp
mov
orl
cmp
cmp
pop
sub
incl
dec
xor
xlat
pop
jns
popf
sbb
pop
sub
icebp
jecxz
popf
adc
add
push
mov
pop
daa
popa
xor
cmp
bound
cltd
or
icebp
fxch
shr
cmp
cmp
mov
test
and
in
insb
imul
mov
pop
icebp
mov
xor
es
xchg
cmp
sub
or
pop
pop
mov
xlat
inc
cwtl
mov
mov
fidivrl
xor
adc
mov
jae
int
loop
repz
push
cmp
in
add
ret
mov
roll
in
imul
sub
sarb
test
cmp
mov
fsubl
cmp
ja
fimull
dec
pusha
stos
std
mov
jno
fiadds
test
and
sub
xor
lock
subb
mov
inc
inc
ja
adc
xchg
mov
push
push
ja
int
scas
loope
mov
sub
push
lods
push
fs
lret
sarb
inc
fisttpl
mov
inc
lock
pop
xor
jg
mov
add
adc
lds
inc
ficoml
ja
pop
mov
mov
movsb
xor
mov
sub
xlat
ja
mov
sbb
push
insl
mov
imul
inc
and
mov
movsbw
lahf
call
nop
push
xchg
lea
lea
movzbw
push
mov
pusha
lea
call
lea
movsbl
movsbw
call
movw
xchg
pusha
push
pushf
push
pushl
ret
pusha
jmp
lea
mov
jmp
mov
orb
push
sub
add
sbb
call
pushf
push
jmp
xchg
pushf
movb
push
pushf
pushl
ret
mov
push
call
lea
jmp
push
jmp
pusha
call
mov
pop
sete
lea
jmp
pop
not
nop
not
bswap
mov
jmp
mov
xchg
bswap
lea
movw
pop
mov
call
lea
jmp
xchg
setno
jmp
nop
pusha
mov
mov
setge
movsbl
mov
pusha
call
jmp
setg
nop
lahf
movzbw
setbe
movsbw
pop
push
xchg
movsbw
pop
push
movsbw
not
mov
call
pusha
mov
call
push
push
jmp
mov
lea
jbe
lea
pusha
jmp
pushl
push
mov
bswap
pusha
mov
pushf
pushl
pushf
lea
jmp
mov
pusha
pushf
pushl
ret
mov
mov
lea
jo
lea
push
jmp
mov
xchg
mov
movb
pushl
ret
jmp
mov
call
mov
jecxz
fwait
jl
jmp
mov
xchg
mov
mov
movw
pushl
ret
pushf
push
movb
mov
lea
movsbw
not
mov
push
call
movw
jmp
call
movzbw
lea
mov
pushf
pusha
mov
call
pushf
lea
push
xchg
push
pusha
push
pushl
ret
lea
movl
jmp
mov
pushf
pushf
mov
jmp
movw
call
mov
call
mov
lea
lea
jg
pushf
lea
mov
lea
pushf
push
pushf
mov
pushl
lea
pusha
jmp
xchg
push
pushf
pushl
ret
call
pushf
movl
pusha
movl
push
lea
jmp
call
movl
movb
mov
movb
pushl
pushf
pusha
lea
mov
push
pushf
xchg
pushf
pushl
ret
push
mov
movl
call
jecxz
pushl
fildl
inc
and
jmp
jmp
lea
jmp
push
mov
lea
mov
call
xchg
push
call
xchg
call
mov
pushf
lea
mov
xchg
pushl
pushl
ret
push
jmp
call
jmp
nop
jmp
movsbw
lea
movsbw
nop
mov
not
pushf
not
mov
jmp
pushf
xchg
pusha
push
push
mov
call
pop
jmp
jmp
jmp
jmp
pusha
pushf
lea
jmp
pushf
mov
jmp
mov
pusha
pushl
pushf
movb
lea
call
nop
setge
not
pop
push
mov
push
call
pushl
pushf
mov
call
pushf
pushl
call
call
call
xchg
pushl
pushl
ret
movb
movw
lea
call
mov
push
lea
jne
push
mov
lea
jmp
lea
mov
bswap
bswap
jmp
pushf
movw
xchg
pushf
pushf
pushl
ret
mov
pushf
mov
pushf
lea
jmp
xchg
movb
mov
mov
movl
pushl
ret
pushl
lea
push
mov
bswap
pusha
mov
jmp
movl
xchg
pushf
pushl
movw
pushf
pushl
ret
lea
call
call
lea
call
lea
pushf
mov
pop
mov
movsbw
cwtl
call
call
xchg
jmp
call
pushf
mov
pushl
pushf
nop
pushf
jmp
nop
call
mov
xchg
pushl
pushl
mov
pushf
pushl
ret
pusha
pushf
popl
cmp
jmp
call
ja
pusha
pusha
movw
movl
movw
push
push
movl
pushf
push
pushf
lea
jmp
xchg
pusha
pushl
ret
pushf
nop
pushf
jmp
call
lea
pusha
pushf
xchg
pushl
pushl
ret
mov
push
mov
jmp
jmp
movzbw
mov
mov
pushf
jmp
jmp
push
jmp
movsbw
mov
lea
bswap
nop
pushf
mov
lea
jae
xchg
jne
push
pushf
mov
pusha
movl
call
pusha
jmp
lea
pushl
pushf
pushf
pushl
ret
jmp
mov
bswap
not
pushl
mov
mov
pushf
lea
call
pusha
jmp
mov
movzbw
mov
jmp
lea
jmp
call
xchg
movb
mov
movw
pushl
ret
mov
movw
mov
not
mov
mov
mov
call
movsbw
movzbw
bswap
mov
pushf
call
pushf
pushl
pushl
nop
pusha
xchg
pop
mov
pushf
call
movb
lea
jmp
movw
mov
not
pop
movsbw
mov
pushf
pushf
pusha
push
mov
movb
call
lea
call
call
xchg
pushl
movb
pushl
ret
pop
mov
lea
jg
pusha
lea
jmp
lea
push
movsbw
mov
mov
jmp
mov
pushf
jmp
xchg
push
pushl
movb
pushl
ret
jmp
jmp
mov
pushl
movl
mov
pusha
push
lea
jmp
mov
mov
jmp
mov
call
pusha
xchg
pushf
movl
pushl
ret
jmp
push
mov
mov
mov
jmp
movzbl
mov
pushf
push
jmp
add
and
fscale
inc
pmaxub
fwait
out
or
jg
adc
popa
iret
adc
sbb
adc
or
lock
stos
test
push
xor
dec
hlt
mov
pop
jg
ja
mov
add
fdivrl
xor
jg
dec
xchg
jge
xchg
inc
in
xlat
fwait
in
fscale
sbb
mov
mov
push
sub
mov
push
lret
jle
mov
out
adc
out
add
xchg
pushf
sahf
fwait
inc
push
xchg
pop
cmpsb
dec
add
xor
adc
idivb
and
icebp
outsb
sahf
mov
push
dec
xor
and
add
outsl
mov
mov
xchg
sub
leave
int
test
push
mov
aaa
pushf
xchg
mov
sbb
mov
push
jle
das
pop
int3
stc
jb
jno
and
jb
int
adc
add
jmp
sbb
xchg
sbb
test
daa
jae
dec
arpl
mov
sub
inc
jo
in
aas
or
inc
sub
pop
iret
cmpsb
aam
jo
mov
mov
push
outsl
and
dec
fdivs
aam
icebp
cmp
ss
sti
sti
jl
xchg
xchg
out
inc
xchg
je
fldenv
adcl
dec
je
mov
mov
xchg
insl
gs
js
mov
add
push
xor
into
xor
push
loopne
or
stc
mov
fwait
push
push
idivb
ds
repz
mov
js
or
inc
or
push
sbb
in
cmp
jbe
and
insb
adc
push
jle
int3
inc
repz
xor
inc
push
cld
jo
push
jmp
mov
sub
aad
xor
jecxz
test
stc
xor
adc
fmul
cmpsb
inc
sbb
insl
jecxz
pop
fscale
pop
and
fs
out
sbb
out
shrd
add
mov
cltd
xlat
mov
out
andl
je
ret
hlt
cmp
jmp
fcoms
and
add
stos
mov
aam
and
adc
sbb
jl
push
xchg
xchg
pushf
scas
inc
test
inc
insb
testl
mov
pushf
pop
push
movsl
rorl
add
mov
cmp
sbb
stc
mov
cmpsl
hlt
xlat
mov
mov
pop
shrl
cmp
sub
insb
pop
in
repnz
inc
iret
in
mov
pop
sub
int
lock
mov
dec
push
lods
dec
je
mov
ljmp
jmp
cs
dec
xchg
jno
mov
movsb
pop
ret
pop
mov
and
sub
mov
or
push
ret
shll
xor
mov
loopne
pusha
insl
stos
jecxz
or
jno
in
les
mull
out
mov
call
negb
mov
in
imul
pop
xor
fsts
push
dec
std
or
inc
xchg
jae
mov
test
gs
imul
sub
push
jge
lods
dec
popl
cmp
jnp
andl
sub
mov
and
mov
mov
pop
jnp
add
pop
push
mov
lds
dec
lods
jp
mov
mov
neg
pop
xor
or
push
xor
test
sub
pop
and
gs
lret
daa
pusha
or
sbb
add
int3
jns
pop
cmp
jbe
inc
mov
or
out
cmp
in
push
sub
lcall
sub
test
popl
rcrb
pop
lock
testl
and
js
pop
insb
jl
mov
mov
lret
mov
mov
add
mov
push
std
call
movl
lea
jmp
push
push
xchg
pusha
pushf
lea
call
jmp
xchg
pop
movsbw
mov
pop
mov
call
pusha
xchg
pusha
nop
lea
bswap
mov
pushl
lea
jl
xchg
not
push
call
xor
bt
xor
clc
xor
stc
xor
pusha
cmp
xor
bt
mov
xor
jmp
movzbw
call
pop
push
adc
std
mov
jmp
mov
and
cmp
add
or
fistpll
mov
daa
and
add
sub
add
mov
in
mov
dec
push
out
pop
addr16
sbb
sub
push
jnp
pop
outsl
test
sub
mov
fscale
adc
or
cmp
imul
test
xchg
data16
iret
in
push
adc
mov
cmc
pop
out
cltd
shrb
xor
dec
iret
cmp
fstps
xor
mov
scas
mov
cld
mov
aad
xor
inc
lcall
ljmp
popa
xorb
push
xor
loopne
iret
dec
sub
ljmp
aas
jns
sbb
mov
aad
shlb
enter
fnsave
mov
jns
push
je
sbbb
xor
test
inc
cmpsl
or
mov
cmc
pop
mov
and
push
cli
adc
mov
mov
jp,pt
mov
dec
and
into
or
pop
push
jecxz
xchg
mov
ret
iret
shl
sbb
fdivs
into
mov
js
stos
and
pop
cmp
leave
dec
lret
xchg
test
ds
push
inc
stos
fisttpll
stc
push
xchg
imul
dec
inc
test
sarl
and
mov
pusha
fstpt
push
push
sbb
pop
lahf
imul
xlat
mov
sub
lcall
lea
dec
xchg
fstps
out
cmp
repnz
inc
ret
aaa
out
jbe
sahf
into
xorl
jno
pop
jp
add
mov
pop
idivb
lcall
lods
xchg
cmp
xlat
push
lea
xor
xchg
mov
and
data16
dec
push
push
xchg
loopne
xor
clc
ret
mov
pop
pop
shll
pop
or
jecxz
shrl
mov
sbb
adc
xchg
jecxz
idivb
xchg
das
scas
test
push
sub
sbb
test
cmp
pop
dec
inc
dec
pushf
mov
mov
loopne
or
fiadds
fcom
scas
test
cld
movsl
xorb
xor
inc
jbe
std
fs
push
cmpsl
mov
and
push
in
or
outsl
imul
fimuls
ljmp
fwait
cmp
pop
movsl
lods
add
outsb
fsts
dec
repz
daa
pop
dec
or
mov
mov
sbb
scas
jbe
push
sub
scas
jp
pop
xchg
cs
mov
inc
push
scas
add
push
cltd
inc
jg
hlt
pop
xor
push
nop
push
mov
call
push
cltd
fnsave
mov
in
mov
cmp
pop
movb
popf
imul
cld
rcrl
mov
das
jl
dec
and
rol
ss
mov
and
mov
orl
jne
outsl
push
dec
outsl
test
add
das
pop
outsb
mov
jns
jg
jbe
mov
nop
ret
sahf
jno
and
rcrl
jp
sub
outsl
inc
or
push
xor
in
lods
pop
sub
xor
push
xchg
jno
out
xor
adc
jmp
pop
push
lock
dec
pop
cmp
or
pop
or
test
test
pop
cmp
inc
or
mull
mov
jmp
adc
dec
or
imul
orl
aaa
int
lds
mov
aas
adc
mov
ds
ds
sub
jmp
in
push
inc
mov
cli
mov
inc
sbb
cwtl
mov
add
stc
leave
pushf
pop
lcall
enter
daa
cmpsl
jecxz
mov
dec
cmp
mov
mov
fisttpll
je
adcb
add
pop
and
aam
xor
mov
in
add
mov
jne
aaa
ljmp
cmp
cmp
xchg
sahf
pop
shlb
xor
cmpsl
xor
xchg
dec
pop
push
mov
push
and
and
mov
mov
xchg
fsubl
arpl
pop
aad
ficompl
mov
es
mov
push
cmp
mov
dec
adc
mov
mov
test
pmulhuw
dec
adc
mov
add
jae
push
xor
pop
scas
or
and
pop
push
adc
pusha
fisubs
sti
test
jle
fisttps
pop
bound
or
jne
repz
pop
jle
lods
or
inc
call
push
inc
rcrb
push
mov
mov
add
cmp
and
clc
inc
xor
loopne,pn
and
outsl
pop
enter
lock
sub
aas
push
pushf
cmp
sahf
dec
adc
adc
into
addl
inc
adc
lds
dec
adc
test
sahf
popf
add
fldcw
fs
cmp
inc
pusha
pop
lcall
cmp
mov
mov
mov
mov
xchg
push
out
xchg
jns
mov
jbe
mov
xchg
or
shl
scas
test
adc
test
icebp
call
fwait
sbb
sarl
movsl
testb
lods
into
cs
jmp
frstor
sbb
mov
jle
push
sar
sbb
push
xchg
test
pushf
stc
sar
lea
dec
movzbl
fcmovnu
fcmovu
add
icebp
out
in
cmp
jno
or
insl
pushf
dec
loopne
lods
or
nop
mov
adc
mov
inc
mov
stos
orb
xchg
dec
pusha
sub
lods
add
dec
cmpsl
or
adc
mov
push
clc
fildl
jns
pop
loop
cltd
cmpsl
xor
sub
dec
inc
movsl
movsl
lods
andb
xlat
add
xchg
cmpsb
mov
subl
les
cmp
push
jae
push
sub
dec
xchg
adc
mov
gs
and
inc
popf
test
test
xor
unpckhps
jmp
ss
imul
lret
jo
and
and
mov
out
push
sbb
iret
imul
dec
stc
pop
sub
add
leave
sahf
imul
negl
add
add
adc
loopne
fcoms
cmp
fiadds
test
add
cmpsb
jnp
sbb
pop
adc
shrb
cmp
xor
cmp
mov
mov
lods
je
nop
mov
cltd
xchg
dec
push
ja
and
stos
jns
sbbb
xchg
or
add
mov
fisubl
xchg
dec
push
iret
daa
imul
adc
sbb
mulb
stos
pop
xor
ja
cmpsl
pop
push
and
loopne
jge
or
cld
lret
mov
sbb
adc
fsubrs
fmull
ret
add
and
mov
cmp
xor
pop
and
inc
add
negl
xor
das
lret
sbb
push
mov
popf
inc
sahf
adc
add
adc
mov
push
sub
fists
sub
test
lods
cmpsl
lret
mov
out
mov
mov
popf
push
fdivl
cmp
fimuls
mov
jle
mov
sbb
xor
dec
inc
std
xlat
xor
jns
fisubrl
aad
js
bound
stos
nop
lcall
lods
cwtl
lods
addb
cltd
mov
xchg
mov
gs
addl
fstl
xchg
xchg
mov
lea
setae
outsl
mov
xor
sbbl
mull
pop
jmp
push
adc
into
mov
mov
dec
xchg
lahf
in
push
push
aaa
sub
rol
adc
in
and
ss
gs
subl
xor
pop
jne
into
mov
nop
mov
push
stc
cltd
inc
js
inc
inc
fcmovu
dec
sbb
movl
and
movl
and
ret
movl
jge
pusha
movl
push
movb
lea
jmp
lea
pushf
bswap
movsbw
nop
call
cwtl
pushf
nop
movsbw
not
mov
pushf
xchg
pushf
call
mov
pushf
pushl
mov
bswap
pushf
jmp
push
lock
std
std
adcl
ret
jl
mov
frstor
addr16
pushf
mov
pop
fdivs
xor
or
int
jo
in
mov
andl
pop
push
roll
shrl
adc
test
out
dec
add
lret
es
jecxz
xchg
push
inc
stos
hlt
add
xchg
sbb
insl
mov
jmp
sbb
dec
push
lock
std
std
mov
jecxz
pop
add
pusha
xchg
lret
lods
sub
pushf
mov
pop
add
xor
jns
cmp
jge
dec
in
js
dec
test
aam
pop
ret
out
sub
xlat
test
lods
popf
loope
scas
xchg
add
sbb
xchg
dec
jno
iret
push
enter
fisttpl
lock
std
std
test
mov
inc
bound
into
pop
lea
insl
mov
mov
pop
or
xor
or
mov
in
test
inc
icebp
and
aam
push
iret
add
jmp
sub
pop
test
inc
dec
outsl
add
and
inc
jnp
in
xchg
push
jbe
aam
outsb
cmpsl
xor
inc
jb
pusha
enter
fadds
pop
std
std
mov
xchg
mov
inc
or
sub
pushf
mov
pop
xchg
ss
cmp
pop
pop
jge
sub
and
dec
inc
mov
aam
pop
roll
and
test
and
xchg
xrelease
push
sub
push
push
scas
je
xchg
cmp
push
adc
dec
push
lock
std
std
xchg
mov
gs
inc
mov
mov
xchg
pushf
mov
pop
fnsave
xor
outsb
pop
dec
std
jge
test
inc
mov
aam
push
int
mov
mov
lret
dec
dec
nop
push
shrl
dec
je
inc
notb
in
xchg
push
jbe
hlt
inc
enter
mov
enter
add
jmp
sbb
dec
push
lock
std
std
adcl
ret
jg
or
sub
pushf
mov
pop
mov
aaa
nop
popw
sub
jge
sbb
icebp
mov
lcall
add
loopne
and
test
popf
nop
and
jge
inc
es
xor
xchg
push
mov
fsubrl
mov
enter
aad
push
lock
std
std
adcb
lock
ret
jge
mov
ret
in
daa
imul
adc
pop
mov
xor
in
or
jge
jns
adc
dec
inc
jp
fcmovbe
push
pop
leave
add
out
cs
test
mov
test
sbb
in
xchg
push
movsb
hlt
and
add
ja
pushf
nop
enter
aam
push
lock
std
std
mov
xchg
imul
ret
je
cwtl
dec
iret
mov
pushf
mov
pop
ret
ss
lods
jg
insl
jge
jmp
dec
test
aam
push
ret
add
in
xlat
and
test
xchg
rolb
les
and
xchg
push
inc
scas
mov
pop
xor
cmp
inc
enter
fadds
lock
and
xlat
gs
cmp
push
leave
mov
imul
mov
jb
or
movsb
sbb
out
cltd
or
push
pop
adc
add
mov
call
lods
mov
or
ljmp
fsts
sbb
lret
aam
mov
pop
push
adc
cmc
inc
scas
or
fnstcw
inc
aad
xor
inc
loopne
imul
test
out
popf
hlt
jecxz
inc
sbbb
ljmp
xor
push
dec
pusha
mov
xor
inc
insl
adcb
jbe
aam
cwtl
ret
dec
inc
jmp
push
cmp
mov
fildl
inc
repz
hlt
sub
addr16
fcoms
scas
mov
shll
xchg
adc
pop
out
and
push
xchg
adc
and
sti
push
hlt
and
stos
dec
sbb
outsl
sub
pop
arpl
int
push
js
loopne
lock
pop
scas
dec
jae
jge
inc
jmp
fcom
push
shl
and
and
xchg
xor
jb
or
lods
sbb
ljmp
dec
push
add
xor
insb
push
jmp
jae
xchg
mov
call
adc
roll
sub
cltd
xchg
js
fldt
fsubrs
mov
lahf
jnp
adc
clc
dec
mov
cmp
leave
inc
inc
aad
dec
movsl
push
add
mov
sub
stc
jmp
mov
push
push
jns
cmpsl
add
pusha
mov
outsl
lock
pop
sub
inc
gs
inc
xchg
rorb
ljmp
std
mov
cmp
cli
clc
pop
lea
nop
mov
fcomps
mov
ret
daa
jecxz
sti
xchg
out
sub
pop
int3
pushf
adc
add
fisttpl
xor
sbb
outsb
orb
jmp
ficoms
or
lods
lock
in
rclb
js
add
repnz
push
leave
mov
imul
adc
jb
add
movsb
sbb
mov
popaw
pop
xor
mov
jno
dec
insb
add
jp
xchg
mov
jecxz
add
dec
pop
push
add
jl
nop
int3
sub
fsts
insl
scas
lcall
or
or
mov
outsl
cmp
push
jno
dec
movsl
outsb
outsb
in
sbb
inc
aad
roll
inc
rol
je
addl
addb
xchg
cmpsl
addr16
jno
pusha
mov
das
jo
cmp
fists
and
inc
outsl
rcrl
rcl
ljmp
pop
mov
ds
hlt
sbb
testl
pop
mov
roll
adc
repz
sub
push
into
xchg
adc
mov
rclb
sbb
dec
jge
sub
aas
and
rcr
jns
in
lock
rorb
cmp
movl
fsubs
push
iret
imul
adc
mov
and
jb
into
scas
sbb
and
sbb
insb
loope
add
rcr
jge
js
add
mov
fsubp
xchg
add
dec
jg
add
mov
sbb
insb
shrb
sub
lods
mov
fnstenv
dec
lret
push
push
adc
sti
dec
mov
xor
movb
mov
repnz
push
xchg
xlat
stc
out
adc
add
adc
push
xor
push
dec
loopne
cmp
rclb
out
pusha
xor
xchg
mov
sti
inc
in
push
cmp
jb
sub
inc
inc
jecxz
cmc
cmp
push
dec
dec
xchg
sub
std
mov
movl
pushf
adc
repz
lret
add
stc
adc
cmp
lahf
and
push
arpl
loopne
lock
in
dec
into
arpl
jg
add
rcr
push
push
lret
test
stos
xchg
or
scas
sbb
insl
bound
ja
lcall
pop
scas
jae
xchg
mov
sub
psrlw
cmpsb
inc
mov
arpl
les
movsb
imul
or
rcrb
mov
mov
xchg
lods
in
test
inc
inc
aad
test
inc
lock
mov
ret
jmp
and
pop
pop
and
inc
test
xor
das
xor
pop
es
ffree
out
adcb
xchg
lcall
push
outsl
dec
mov
cmp
jb
ret
cmc
call
nop
testl
cmpb
sahf
rcl
xor
insl
aaa
out
and
push
lret
lcall
fs
xchg
sbb
xor
dec
push
outsb
ss
jmp
ficoms
js
lods
lock
inc
out
push
mov
jb
cmc
ljmp
push
lret
add
xchg
cmp
jbe
adc
cmpsl
sbb
xor
add
push
out
ja
arpl
scas
jns
xchg
mov
sub
loope
push
test
rol
sub
mov
fwait
xchg
enter
xlat
pop
add
aas
jnp
adc
decb
test
in
jns
addr16
lret
dec
dec
aad
in
aad
inc
adc
stos
fimuls
stc
out
repz
repnz
sbb
jmp
and
pusha
mov
pop
xor
pop
daa
push
shlb
out
sbbb
sub
pop
push
cmp
cmp
xchg
inc
adc
std
sub
inc
fists
sub
aad
mov
jae
ret
jns
or
xchg
adc
adc
add
inc
xchg
loop
push
mov
cs
push
arpl
into
ficoms
sbb
lods
lock
xor
testl
fcoms
and
jmp
jns
sub
retw
jb
add
lods
loope
test
insl
push
sub
ja
shrl
mov
aad
xchg
add
fcos
adc
pop
aam
pusha
adc
in
ret
inc
les
mov
pop
push
sub
pushf
fldt
xlat
mov
aas
pop
daa
sbb
hlt
inc
mov
xor
xchg
lret
dec
inc
aad
into
test
xor
pop
and
mov
dec
cli
jno
xor
pop
or
in
stos
sti
into
daa
jno
pusha
mov
lahf
mov
push
ficoml
out
insb
addb
sahf
mov
stos
pop
xor
loop
stos
mov
fcomps
test
nop
testl
push
pop
mov
jae
xor
imul
add
lret
into
jecxz
sub
mov
xchg
movsb
jnp
dec
adc
dec
in
xchg
sub
jmp
ficoms
fsub
lods
lock
sub
inc
sub
push
loopne
xor
xor
push
push
ret
test
or
sub
jb
bswap
scas
sbb
inc
ljmp
cmp
jae
insb
or
scas
jg
xchg
mov
mov
iret
addl
imul
pushf
add
sub
push
test
mov
sub
fisttps
mov
stos
mov
arpl
push
fwait
cmc
inc
add
andl
loopne
repz
adcb
lods
pop
incb
xor
push
cmpxchg
cmp
xchg
out
insl
cmp
inc
push
fnstsw
out
pop
cmp
repnz
dec
bound
repz
mov
nop
mov
sbb
ud1
ss
out
and
push
int3
xchg
adc
mov
lock
sarl
sbb
dec
pop
xchg
and
scas
mov
push
arpl
enter
cwtl
.byte
jge
push
jbe
cs
scas
dec
and
fisubrs
push
jmp
out
cmp
sbb
aad
fildl
sub
inc
fsubrl
aad
pop
xchg
es
push
inc
push
cmpsl
pop
jmp
mov
js
xor
xchg
test
shrb
sub
pop
lods
sbb
aad
add
cmc
pusha
lods
xor
out
lods
adc
testl
out
out
and
xchg
stos
bound
inc
adc
cltd
dec
xor
insb
popf
push
mov
les
ret
lds
and
adc
sub
pop
shll
ror
cmp
push
mov
in
sbb
out
jge
xchg
and
cmpsb
pop
jecxz
imul
movsl
addps
cmpsb
inc
jmp
sbb
dec
push
hlt
xchg
inc
xor
add
cmpsb
push
sub
adc
scas
outsb
fscale
mov
dec
jnp
push
sbb
xor
jns
add
and
sbb
popa
sbb
cltd
inc
ja
sti
fisubs
push
jle
div
shll
sub
imul
loope
inc
xchg
lcall
pop
jno
mov
les
xchg
pusha
cmpsb
lds
inc
arpl
clc
call
sbb
shlb
push
loope
addr16
sahf
imul
xchg
int3
icebp
inc
std
xor
mov
jecxz
popf
out
push
dec
movw
pusha
mov
pushl
lea
jmp
dec
inc
push
dec
inc
dec
xor
cs
insb
add
xchg
std
in
jb
push
mov
sti
mov
add
adc
or
add
inc
add
dec
mov
fcmove
roll
push
xchg
inc
mov
rolb
xchg
jo
enter
mov
call
dec
mov
cwtl
pop
imul
rorb
inc
inc
iret
in
ret
insl
fscale
test
push
push
subb
dec
data16
loope
add
and
mov
or
pop
sti
popf
pop
lea
pop
sahf
and
inc
dec
pop
jge
ds
fstl
adc
add
add
stc
push
or
in
out
int3
sub
pop
push
xchg
jg
das
and
insl
cli
fscale
mov
lods
cltd
fimuls
dec
imulb
ss
push
mov
lret
cmpl
mov
clc
bt
neg
push
jmp
movb
push
movl
pushf
lea
jmp
popf
sarb
fscale
ljmp
pop
nop
pop
push
mov
inc
xchg
repnz
xor
push
rcll
adc
cwtl
test
inc
rcrb
xchg
ljmp
jle
mov
mov
mov
or
pop
inc
aaa
int
ja
cld
adc
inc
pop
daa
inc
mov
in
dec
movsb
dec
lcall
cli
or
std
and
sub
dec
jmp
pusha
or
mov
sbb
xor
push
pushf
mov
pushf
lea
ja
stc
sub
shl
cmp
add
add
bsf
pusha
movzbl
mov
setno
rol
adc
mov
lea
jno
pusha
repnz
call
shl
insb
fscale
and
fwait
inc
jmp
roll
pop
xchg
mov
lds
sbb
fsub
iret
popf
imul
xchg
fsubs
out
push
fldenv
dec
mov
sub
dec
jno
mov
lret
in
xor
push
push
sbb
mov
push
inc
lret
fcompl
test
cmpsl
test
push
or
roll
lcall
or
adc
mov
es
dec
imul
sbb
mov
imulb
mov
sub
fs
or
aam
aaa
test
push
inc
aaa
dec
inc
pusha
vcvtsd2ss
xchg
data16
shll
or
lods
xchg
mov
mov
mov
daa
sbbl
lahf
xorl
pop
mov
mov
ficompl
cmp
xor
mov
pop
inc
pcmpeqw
lock
stc
jmp
pusha
jmp
sbb
push
imul
push
fidivrs
out
sub
jg
imul
and
cs
loopne
jecxz
and
xchg
call
mov
mov
add
sahf
mov
mov
dec
pop
popf
and
adc
xor
adc
xor
dec
das
xor
add
test
mov
push
xor
pop
mov
lea
push
mov
mov
xchg
das
pushf
pushf
movl
movb
movl
pusha
lea
jmp
movl
lea
je
stc
test
jmp
movl
movb
pusha
pushf
mov
pushl
movw
pushf
pushf
pushl
ret
call
push
not
pushf
not
lea
push
movw
movl
push
push
pusha
pushf
mov
movw
pushf
movb
push
pushl
ret
movzwl
mov
movw
pusha
pushl
lea
jmp
pushf
mov
bts
mov
sub
lea
bswap
mov
or
sbb
mov
clc
bt
call
push
movzwl
pushf
pusha
lea
jmp
sbb
jns
insl
or
pop
mov
iret
and
xchg
rcll
fldcw
ja
inc
hlt
lret
iret
in
inc
bound
pop
jbe
in
aam
mov
into
jmp
popa
push
push
push
push
inc
mov
push
imul
out
mov
jb
int3
mov
cmp
push
mov
or
jecxz
and
lahf
sbb
mov
aad
dec
add
fnstenv
jae
loope
jno
mov
je
clc
sub
stc
jmp
call
add
mov
jmp
cmc
sarl
push
int3
or
hlt
sbb
push
cmp
jne
into
int
fldt
mov
bound
imul
mov
pop
xchg
jb
movsb
inc
decl
push
lahf
pusha
jb
lea
jl
outsb
dec
add
iret
pushf
lret
mov
stc
inc
xchg
popa
rorl
stos
faddl
ja
mov
or
mov
xor
jle
jmp
sbbl
fldenv
testl
sbb
cld
inc
mov
sbb
ss
mov
testl
dec
cli
push
push
sub
adc
fistps
les
cmp
test
cmp
xchg
xor
xor
push
dec
sbbb
shrl
cmc
xchg
fwait
ds
ret
out
dec
dec
mov
lahf
imul
cltd
imul
sbb
mov
sti
add
scas
or
pop
imul
mov
adc
and
xor
iret
jae
ljmp
add
add
or
jg
sbbb
out
inc
stos
addr16
movsb
outsb
and
or
aad
push
or
cmpsb
cwtl
add
mov
test
stos
rclb
inc
add
lds
or
add
rcll
jbe
add
std
cmp
std
sub
pushf
aaa
ljmp
icebp
push
cli
xlat
lcall
fbstp
std
subl
ret
test
push
lret
movsb
stos
loopne
ret
aam
inc
dec
add
inc
ja
outsb
fwait
dec
test
clc
push
mov
mov
shl
test
and
movsl
movsb
repnz
sbb
jmp
or
mov
adc
and
mov
push
jmp
pop
xchg
mov
inc
add
pop
sahf
fcompl
rorb
xor
pushf
push
fsubs
imul
out
test
stc
test
mov
jmp
push
data16
imul
movsl
jb
pop
sbb
movsb
lret
lret
lods
dec
adc
jne
shrl
add
push
jno
daa
adc
sub
and
inc
roll
inc
xchg
negb
and
sub
dec
mov
lret
adc
and
lahf
arpl
hlt
test
mov
cmp
repnz
lahf
jmp
xor
movsb
out
scas
insl
jmp
pusha
jno
jnp
pop
inc
add
dec
cmpsl
fsubl
push
jmp
insl
movsl
cmp
imul
pop
sub
jmp
pushl
movb
jmp
dec
movl
rcl
mov
clc
bt
push
cmp
pusha
lea
jbe
clc
cmc
sub
movzbl
cmp
bswap
sub
mov
stc
stc
jmp
test
pushf
lea
je
push
stc
cmc
add
bt
cmp
push
movb
lea
jb
jmp
sahf
pop
mov
std
frstor
fsubrs
pusha
xchg
scas
mulb
gs
cmpsb
ret
sub
mov
outsb
jmp
dec
sahf
sub
js
sbb
or
jnp
lret
rclb
mov
pop
xchg
scas
or
fsts
lock
popf
jecxz
lea
mov
xor
push
jmp
or
ret
pop
cmc
into
inc
and
mov
sbb
call
add
push
mov
mov
scas
xchg
or
out
mov
lahf
fdivrp
and
or
les
and
gs
aas
mov
mov
cmp
dec
cmp
imul
inc
push
cmp
ret
js
in
or
push
push
fmull
xor
jg
sbb
mov
lods
mov
in
jmp
pusha
jmp
xchg
call
cli
ds
sub
sub
in
les
clc
sub
xchg
pop
mov
fscale
mov
mov
inc
adc
lods
idivb
dec
lahf
imul
mov
repnz
inc
leave
dec
xchg
push
rcl
inc
pop
test
imul
out
pop
push
lahf
rol
stos
push
xor
test
hlt
outsb
dec
sub
sbb
into
push
push
mov
popa
adc
adc
add
cmpsl
fcomip
mov
push
jb
sub
sub
jns
out
je
add
fs
jmp
push
inc
pop
fs
push
sbb
jne
push
inc
add
les
sti
mov
sbb
dec
int3
dec
insl
imul
inc
dec
mov
aad
mov
int3
inc
push
ja
scas
pusha
inc
gs
push
jo
jg
in
pop
add
or
cmc
sbb
cmp
icebp
jae
mov
mov
out
rolb
sub
cmp
mov
fisttps
rolb
jne
and
and
repnz
pusha
jmp
andl
xor
inc
in
test
bound
lret
sbb
scas
cmp
scas
jle
mov
add
inc
data16
gs
push
lret
std
les
cmp
dec
jge
dec
cwtl
dec
cmp
jo
sub
lock
cli
fs
add
inc
out
xlat
jg
xchg
push
popf
jp
dec
ja
mov
push
or
gs
mov
loopne
lea
jne
pusha
call
std
xor
fscale
and
cmp
cmpsb
hlt
outsl
test
mov
ja
lods
xor
dec
mov
in
sarb
dec
pop
inc
pop
push
insl
jb
subl
imul
and
dec
sbb
out
daa
addr16
test
adc
leave
loope
imul
push
pop
push
fs
fwait
xor
inc
test
lcall
stos
jne
mov
leave
push
dec
out
repnz
mov
fcoms
aaa
rcrb
call
pop
lds
inc
sbb
enter
pop
xor
outsb
cmp
jne
outsb
mov
fwait
mov
inc
mov
std
jmp
jnp
push
add
mov
fcomps
insb
subl
outsb
adc
adc
push
jno
and
jmp
ret
lret
iret
jae
fwait
jecxz
fisubrl
adc
push
adc
mov
setno
test
mov
fidivrl
dec
enter
mov
jno
inc
or
fs
cs
pop
sub
mov
movb
lea
jne
pusha
push
mov
movb
lahf
mov
pushl
setno
jmp
sbb
std
xlat
movsl
jb
push
clc
cmp
es
push
cmp
nop
fnstsw
push
fs
mov
xlat
rcll
sub
sti
dec
ret
aaa
lret
pop
sar
fsts
mov
fwait
push
pop
test
fildll
test
ret
das
inc
popf
out
mov
outsb
inc
pop
dec
jnp
fmuls
inc
cs
lea
mov
bound
mov
nop
sbb
mov
outsb
mov
dec
cmc
rdpmc
js
sbb
sbb
movw
call
jge
pop
popa
fscale
dec
xchg
ret
fisubrl
sbb
add
mov
bound
adc
sub
pop
aam
xchg
or
push
adc
fsts
sub
xchg
push
in
mov
clc
mov
or
out
mov
dec
inc
aaa
and
cld
insb
sbb
inc
out
dec
and
pop
cmp
sar
out
xor
cmp
outsl
outsb
mul
loop
sbb
push
insl
rcrl
or
jmp
adc
push
adc
call
xor
fildl
mov
jge
pusha
fscale
pop
pop
jg
pop
mov
inc
add
xor
rclb
sbb
rclb
insl
mov
or
and
out
sbb
pop
jno
push
mov
jmp
sbb
loopne
jmp
lret
mov
pop
xchg
adc
xchg
sub
inc
repz
sarl
mov
aam
cmp
std
dec
cltd
insl
cmp
sub
out
cmp
ljmp
dec
add
add
fsubs
add
clc
cmc
add
test
stc
jmp
push
movb
movb
lea
jne
shl
aas
setg
xor
aas
call
sbb
insl
xor
jmp
pop
jp
add
icebp
stos
rorl
jecxz
or
dec
fldenv
push
testb
rcll
mov
icebp
push
fdivrp
aas
dec
mov
push
dec
dec
lret
lock
xchg
push
adc
test
push
adc
enter
imul
pop
push
out
push
int3
mov
pop
jge
imul
scas
cmp
add
inc
adc
pushl
movb
lea
jne
aas
bts
aad
bt
sub
bswap
mov
dec
rol
add
add
adc
clc
mov
pusha
test
push
pushl
call
btc
mov
cmc
test
bt
cmpb
call
mov
jecxz
fscale
mov
outsl
and
movsl
mov
mov
dec
push
shrl
add
dec
and
push
push
push
pushf
mov
fld
orl
out
dec
lret
xchg
xchg
fidivl
jp
dec
repz
adc
xchg
mov
pop
cmp
jge
inc
lea
out
das
push
sbb
ret
mov
fcompl
inc
ret
popf
gs
decb
in
movsl
push
leave
fldenv
and
or
dec
pushf
xchg
outsb
add
xchg
outsb
jnp
lret
inc
pop
cmp
fstpl
std
pop
test
cwtl
push
fwait
mov
pop
pop
xorl
mov
pop
popa
xor
mov
add
pop
fscale
movsb
lock
call
dec
cmp
fistpll
shrb
jg
jl
es
es
cmp
pushf
insb
filds
jmp
mov
pop
and
stc
pop
fscale
inc
sbb
fcompl
cmp
icebp
test
or
inc
aas
sbb
lahf
das
sub
jb
sahf
jns
push
mov
mov
sahf
ja
pop
cld
sub
cmp
popf
mov
pop
ret
add
int
dec
or
fisubl
adc
les
cs
jno
xor
and
hlt
je
fmull
aad
imul
test
mov
fs
fwait
cmc
or
outsl
pushf
mov
dec
hlt
fidivrs
sub
lods
sub
jne
aam
imul
addr16
xchg
adc
xchg
faddl
lret
lods
cld
pop
gs
insl
mov
ss
fisttpll
pop
fscale
pop
daa
push
movsb
pop
and
inc
lock
ja
es
and
jmp
mov
imul
mov
rol
mov
and
shrb
pop
imul
roll
mov
lock
inc
pop
fiaddl
push
and
xchg
std
jg
mov
sub
repz
cmp
fxch
mov
rorl
dec
sub
test
stc
pushf
cmp
pusha
lea
ja
call
arpl
pop
fscale
mov
xchg
inc
cld
dec
jne
jge
push
ja
inc
mov
test
stos
xor
mov
leave
fcoms
insl
aad
out
int3
mov
add
in
cmp
cmpsl
mov
mov
std
and
inc
es
fdivrl
je
add
dec
dec
dec
inc
inc
repz
test
lahf
into
mov
xor
adc
jmp
std
movsb
jo
pop
add
and
hlt
testb
xchg
movsb
icebp
cli
xor
nop
xor
int3
rcll
push
stos
inc
in
or
jbe
lcall
loopne
into
int
inc
stc
clc
in
std
mov
aam
imul
or
arpl
roll
lahf
sahf
outsb
sub
test
inc
das
xchg
sbb
ret
mov
ljmp
jmp
jno
call
shr
inc
pop
fscale
and
xchg
mov
js
ss
inc
imul
cmp
mov
loopne
push
xchg
push
data16
and
push
sti
mov
cmpsl
enter
shrl
xchg
push
fsubl
inc
and
inc
push
adc
pushf
jle
xor
mov
or
jnp
xchg
sbb
mov
or
bound
mov
push
cmpsb
lds
mov
push
jbe
cmp
xor
cld
hlt
mov
jle
pop
fscale
jge
xchg
mov
push
mov
cli
pop
sub
pop
mov
adc
movsl
add
and
xor
jb
icebp
out
cli
subb
ss
outsb
cwtl
inc
xchg
adc
outsl
mov
sub
out
inc
jbe
lcall
es
aam
fiaddl
xchg
cltd
sbb
or
xchg
mov
cmp
pushf
mov
sub
std
lret
dec
pop
pop
or
mov
xchg
lcall
fs
add
ret
movl
pushl
call
or
sub
icebp
xchg
arpl
xlat
and
add
mov
jns
xlat
aam
lret
or
out
test
cmp
xor
mov
sbb
cld
xchg
cltd
cmpsb
ds
inc
rclb
jmpw
in
add
ret
sti
xor
pop
mov
cmp
shll
movsb
cmpsb
add
es
fs
je
cmc
sub
jmp
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
pusha
pushf
bt
imul
pusha
jmp
lea
ja
push
cmc
pushf
imul
stc
pushf
push
add
pusha
push
lea
jmp
pusha
push
push
pushf
mov
pushf
call
roll
pop
fscale
add
mov
xchg
rcrb
jecxz
movsb
inc
cltd
lcall
jb
hlt
mov
dec
popa
mov
mov
mov
loopne
mov
in
jns
stc
cmpsl
pusha
insl
jg
in
stos
inc
and
cld
out
mov
fs
jmp
outsb
sarl
addl
std
mov
lods
insb
insl
mov
add
add
lret
pop
fscale
je
jbe
out
aaa
jo
sbbb
loop
adc
xchg
fdivs
add
or
adc
test
mov
push
inc
out
add
call
repz
inc
outsb
cmc
inc
dec
rcrb
sbb
mov
pop
fscale
sti
inc
mov
lods
clc
jmp
rcrl
in
or
test
xor
inc
in
out
add
sub
fisttps
dec
pop
fscale
and
lcall
mov
xchg
insb
or
cmpsl
add
add
jnp
arpl
mov
sub
push
jbe
mov
data16
mov
mov
jb
ja
pop
jmp
jmp
lea
call
jmp
jo
xor
stc
xchg
inc
arpl
sti
pop
stos
jmp
into
xlat
popa
aas
hlt
imull
das
mov
xor
mov
add
or
mov
js
les
mov
mov
jo
outsb
xchg
xlat
scas
mov
in
mov
mov
xor
aad
jbe
pop
xlat
arpl
xchg
xchg
jg
pop
pop
mov
test
std
sbb
push
mov
jb
jae
dec
jae
bound
pushl
gs
push
fscale
lock
nop
into
jge
fbstp
popf
hlt
dec
and
movsb
cmc
in
outsl
out
cmp
add
or
mov
jo
fwait
sub
add
or
loopne
adc
jge
or
ja
testb
xchg
pop
add
rcrl
sbb
ror
jmp
jmp
jmp
pusha
repnz
push
jmp
fisttpll
push
fscale
pop
sub
sub
sub
call
lcall
or
add
lds
xor
push
les
dec
xsave
push
fscale
xlat
jne
ja
xor
or
pop
pop
xor
push
test
gs
scas
nop
nop
negl
out
dec
add
adc
xchg
mov
jb
shlb
popa
movsb
xchg
adc
adc
test
imul
dec
imulb
pop
xchg
pop
mov
or
push
dec
out
cmp
pop
dec
in
daa
jb
lahf
mov
shll
cmpsb
lcall
cmp
lahf
push
mov
ret
cwtl
fs
sahf
add
lahf
push
jo
fsubs
mov
out
push
pop
pushf
stc
stos
iret
pop
jno
movlps
push
popa
fscale
bound
push
lcall
andnps
incl
loop
movsl
pop
pushf
pop
scas
fistl
std
nop
pop
clc
sbb
or
fsts
addb
push
lret
push
je
daa
outsl
lea
push
lret
movsl
adc
sub
shlb
jg
mov
mov
cld
mov
xor
outsl
aad
cmp
adc
fwait
inc
xchg
cmpb
arpl
pop
pop
pop
adc
lahf
jmp
negb
or
sbb
jae
repnz
jmp
js
push
fscale
int3
lcall
shr
jns
mov
lea
lods
and
out
jno
mov
xor
cmpsl
sub
inc
leave
adc
out
sub
dec
xchg
xchg
mov
cld
mov
push
dec
arpl
out
ss
or
xor
add
dec
xor
movsb
rcrl
mov
in
repnz
xor
lret
mov
cwtl
aaa
sbb
inc
push
push
fldcw
mov
gs
add
xchg
jbe
popf
push
and
pop
notb
jae
xchg
lea
lcall
in
mov
arpl
lret
int
in
fcmovb
dec
jae
push
add
push
jcxz
dec
inc
fdiv
jg
jmp
mov
mov
mov
clc
xchg
xchg
es
bound
stos
addl
mov
in
jp
adc
push
insl
sbb
xorb
mov
sbb
jmp
lea
jb
test
bt
cmpb
jmp
push
clc
cmp
pusha
jmp
and
std
push
sahf
loope
lret
in
and
out
out
scas
aas
mov
ret
dec
adc
jne
inc
test
push
push
sub
faddp
in
adc
scas
cmp
pop
fildll
ss
ljmp
add
arpl
dec
push
push
fsub
mov
mov
cli
and
std
mov
dec
out
cs
jmp
mov
xchg
repz
sbb
inc
lret
dec
dec
loope
or
xor
adc
notb
cmp
xlat
enter
iret
mov
setne
mov
mov
lods
cmc
push
rol
pushf
not
pushf
pushf
pushf
inc
movb
neg
pushf
clc
ror
pushf
pushf
neg
pushf
movb
cmc
stc
cmp
pop
call
push
adc
std
jmp
or
fisttpl
fnstsw
les
jo
cld
loope
push
dec
inc
sub
mov
dec
aas
mov
cmpsb
iret
int
jle
mov
mov
dec
inc
insl
push
into
repz
adc
lret
xchg
leave
jp
xor
inc
mov
cmp
nop
clc
cmpsl
int
or
mov
shlb
je
test
popa
adc
sub
jno
inc
mov
mov
cmp
and
imul
xchg
add
arpl
and
je
cmc
add
ja
clc
clc
stc
cmp
pushf
push
pushf
lea
jb
cmp
call
mov
lea
jb
push
cmp
bt
cmpb
jmp
add
call
arpl
push
fscale
mov
adc
and
cmp
inc
pop
cmp
mov
dec
dec
add
inc
inc
mov
push
pusha
push
push
lahf
add
out
dec
or
and
aas
in
out
outsl
sti
dec
mov
mov
sub
ss
jb
cmc
repnz
add
mov
leave
push
cltd
pushf
xchg
xchg
ds
adc
adc
xorb
push
cmpsb
rorb
movsl
mov
std
in
push
and
mov
je
aad
repnz
sub
sub
mov
push
pusha
push
sti
out
dec
sub
cmp
jbe
inc
je
or
icebp
in
stos
cmp
jno
stos
and
cmp
in
stos
je
xlat
rcrb
lock
mov
gs
xlat
cltd
xor
punpckldq
and
push
movsl
es
xchg
rcrb
popf
fwait
aas
cmp
push
sarl
adc
lret
sub
cmp
push
aaa
push
push
fscale
sbb
dec
push
add
out
sbb
mov
int3
mov
enter
mov
rcll
jp
lahf
pop
fcmovnu
push
mov
jg
data16
shlb
sub
mov
dec
call
fldenv
call
stos
repz
adc
lret
adc
nop
or
xchg
sbb
mov
pop
and
hlt
pop
pop
sub
inc
lds
or
xchg
mov
test
pop
jbe
mov
rolb
and
cmp
xor
add
stc
mov
test
jmp
call
and
fscale
lret
adc
mov
or
loop
dec
xor
mov
pushf
test
in
popf
sbb
into
jecxz
pop
addl
ljmp
xor
stos
std
dec
sbb
sub
dec
ds
adc
lret
ret
scas
daa
and
dec
inc
bound
lcall
dec
dec
sbb
mov
test
repnz
xadd
repnz
imul
add
fwait
orl
aas
scas
pop
bound
icebp
es
fdivr
movsb
or
lds
rolb
xor
std
xor
stc
cmp
cmpsl
shrb
sar
jge
out
rolb
ljmp
pop
pop
rcll
fidivrs
iret
and
repnz
sarl
cmp
pop
shlb
and
inc
mov
pop
xor
and
and
ds
nop
clc
pop
jle
loop
pop
mov
sbb
dec
out
inc
cmc
lcall
aam
push
movl
movb
lea
jmp
out
lods
dec
fscale
mov
aam
movsb
jno
jne
fwait
add
orb
ljmp
aad
imul
cmc
jno
pop
xchg
cmp
outsl
jnp
sub
dec
xchg
and
cli
push
sarb
and
sbb
mov
xor
pop
mov
test
enter
das
test
or
stc
pop
or
xorl
aad
pop
lahf
iret
xchg
push
xchg
dec
cmpsb
sti
fsubs
push
sti
cmpb
call
sub
test
cmp
pusha
lea
ja
push
jmp
roll
fscale
jp
mov
jnp
add
adc
std
lret
mov
std
jl
or
ret
mov
mov
push
inc
lods
js
mov
out
xchg
push
or
sub
inc
inc
mov
pop
mov
inc
es
xchg
fnstenv
adc
pop
cmp
out
pop
aas
mov
ss
pop
nop
shll
in
inc
mov
lods
cmpsb
mov
or
xor
inc
lock
mov
pushf
jmp
jmp
mov
sub
inc
add
rcr
bt
pushf
shl
mov
call
and
jge
adc
loope
icebp
das
pop
push
hlt
sub
rorl
and
cmp
lds
fisubrs
xchg
cli
pop
push
stos
loope
scas
sti
mov
add
fildl
outsb
movsl
cs
inc
dec
gs
jg
es
dec
adc
mov
xchg
dec
mov
fsubl
sbbb
mov
inc
dec
sub
pop
leave
jns
add
sub
push
cmp
mov
addr16
xor
ljmp
and
push
pusha
dec
bt
not
bt
jmp
notl
outsb
cmp
and
push
popf
jo
int
pop
xlat
pop
and
mov
es
test
roll
in
inc
ret
jno
mov
push
mov
jns
xor
movsl
xlat
dec
pop
addl
push
mov
xlat
xchg
push
xchg
mov
pop
sbb
push
pop
inc
mov
mov
jge
push
sti
das
push
inc
inc
repz
and
sti
lret
jno
inc
test
test
jmp
mov
in
add
inc
mov
cmc
pusha
push
pusha
cmpb
pushf
pushf
pushf
lea
jne
pushf
test
ror
jmp
xor
sub
aas
mov
loop
into
or
cmc
daa
pusha
or
fidivl
out
or
insl
mov
ficoms
cmpsl
mov
ljmp
inc
outsl
int3
push
ljmp
xchg
incb
mov
mov
pop
pop
pushf
clc
in
lahf
stos
adc
jl
dec
push
insb
jo
inc
je
inc
cmc
sar
test
popa
and
pusha
enter
setg
push
not
lea
movb
call
call
mov
std
lock
out
mov
cmpsb
adc
dec
mov
out
aaa
sub
add
in
or
sbb
lretw
gs
xor
pop
cmp
adc
loope
insb
xor
add
popa
sti
orb
sbb
ds
sahf
mov
dec
pop
dec
inc
add
sarb
add
cmp
pop
lahf
iret
pop
xlat
ja
mov
sbb
mov
inc
mov
dec
push
push
jmp
xor
fcmovnu
sbb
dec
push
cmp
fs
pextrw
mov
lcall
or
add
dec
fscale
in
inc
jle
fcoml
add
jae
jns
fdivrl
in
pop
daa
call
pushw
imul
enter
stos
or
in
leave
pop
bound
mov
iret
adc
jge
outsl
daa
fsubr
aad
pop
and
lods
pop
call
xchg
fsubl
rol
movsl
pop
or
sahf
or
cmp
das
idivl
mov
pop
mov
popa
hlt
fists
hlt
push
jg
xchg
sar
int
dec
jae
test
and
movsb
push
clc
cmp
pusha
push
lea
jae
ja
clc
push
pushl
imul
call
inc
pushl
mov
jmp
mov
lock
fscale
jne
insl
mov
cwtl
lret
jns
in
push
sub
cs
insl
xor
fwait
ljmp
jecxz
mov
jl
or
lock
arpl
pop
pop
or
push
pop
cltd
push
sbb
ret
push
test
pop
sub
inc
inc
push
fcoml
or
cltd
inc
data16
pop
adc
andl
add
lcall
cmpsb
add
ss
cs
jge
and
pop
fsubs
stc
into
cltd
into
jl
out
mov
int
ret
addr16
push
movb
mov
jmp
mov
sbb
std
dec
sbb
cltd
enter
pusha
inc
pop
dec
adc
setle
std
jg
adc
sub
aam
dec
movsl
ds
pop
sbb
add
xchg
into
mov
add
cmp
cmc
pop
pop
mov
adc
bound
fwait
dec
cltd
std
and
xor
cwtl
bound
mov
pop
test
and
fstpl
inc
lds
push
test
cmpsl
push
lahf
pop
js
int
add
jecxz
pop
decl
add
jo
push
push
inc
push
xor
dec
out
inc
and
or
lret
jnp
mov
mov
mov
sub
xchg
mov
and
sub
jb
xchg
cs
jg
pop
int
mov
pop
mov
xor
call
mov
lret
outsb
out
mov
mov
or
cs
or
or
cmpsl
and
ja
adc
lds
scas
scas
popf
aaa
cmc
push
mov
pop
jmp
sub
addb
dec
add
fnstsw
enter
and
fs
fdivr
push
mov
mov
cmp
outsb
mov
icebp
dec
xchg
outsb
aam
or
xchg
stc
or
mov
pop
data16
sub
sti
dec
dec
roll
or
sub
pop
loope
or
out
sub
jge
push
or
pop
mov
add
jp
pop
add
cmp
fcmovnu
sbb
mov
add
call
imul
pusha
movb
bt
add
pushf
lea
jmp
sub
ja
fscale
hlt
inc
xchg
inc
test
cmpsb
push
test
clc
pop
sarb
out
adc
mov
jb
pop
mov
jp
sub
cmpsl
pusha
xchg
std
push
pop
push
jp
lds
leave
stc
mov
cld
pop
push
inc
popf
ret
shrb
jo
adc
ret
adc
push
lods
dec
rorb
and
inc
inc
and
mov
cmp
sub
testb
popa
std
popf
cmpsb
pusha
mov
int
pop
popf
mov
xchg
in
mov
imull
push
pusha
lea
jne
call
pusha
pusha
lea
jb
bt
stc
cmpb
pushf
jmp
mov
pushf
push
pushf
push
pushl
ret
pushf
movzwl
sbb
mov
clc
jmp
inc
ret
fscale
mov
outsb
sbb
pop
pop
cmp
int3
enter
xchg
xor
iret
sbb
test
jo
xchg
jp
adcb
mov
or
in
or
stos
fwait
imul
add
loopne
outsb
adc
push
sbb
dec
mov
popa
or
mov
adc
je
jne
pop
sbb
push
cmp
rolb
inc
fscale
inc
or
rolb
add
and
sbb
int3
inc
je
pushf
sub
dec
in
pushl
repz
bound
xchg
push
arpl
xchg
aaa
data16
push
repz
mov
mov
sbb
and
lods
push
xor
pop
jle
js
fcomps
mov
repz
loop
mov
jae
decl
jb
fscale
testl
data16
xlat
fldl
data16
cwtl
and
xlat
and
mov
sub
jp
dec
fsubl
add
push
imul
add
sahf
imul
push
xchg
adc
subl
test
clc
inc
aam
jge
push
xor
jmp
adc
or
pop
or
fcoms
dec
aaa
cmp
jne
fwait
lret
cwtl
pop
sbb
mov
fmulp
xchg
xchg
rcrl
jns
xorl
seto
rcrb
outsb
testb
std
bnd
push
add
repz
jp
and
fnsave
add
dec
jno
rcrb
push
cli
inc
in
cli
dec
add
sbb
je
xor
sti
mov
mov
fdisi(8087
test
and
lea
cld
mov
cmpl
push
push
sti
shrb
stc
mov
and
inc
push
push
lea
mov
pop
cmp
enter
rol
lock
sbb
inc
icebp
mov
test
lcall
out
push
out
cltd
notl
push
and
or
xchg
test
mov
out
fiadds
xor
scas
sbb
scas
lds
rolb
mov
push
stos
mov
xchg
in
negl
inc
mov
mov
mov
arpl
repz
sbb
xchg
in
out
push
in
testb
jecxz
mul
fstps
add
add
cwtl
shlb
dec
xor
dec
out
sti
or
pop
fs
cld
or
push
ret
mov
pop
scas
loop
inc
pop
jae
dec
pop
pop
xchg
or
mov
jle
pop
or
adc
fldcw
pop
xchg
xchg
out
ja
into
xlat
loop
adc
add
sub
cmp
fistl
sbb
pop
loope
add
xor
fnsave
jnp
push
xor
out
stc
stc
mov
xlat
and
cmpl
mov
movb
in
dec
cmp
cmp
sbb
stos
jb
jbe
add
pop
jbe
std
addl
mov
repnz
or
add
lock
push
into
lods
movb
mov
cld
push
cmp
pop
lret
mov
xor
mov
xchg
mov
test
pop
decb
sbb
ss
addr16
cwtl
sahf
shl
pop
cwtl
xor
mov
xchg
ss
pusha
sub
imul
mov
in
sbb
mov
jae
pop
push
ret
mov
imul
das
jb
push
lods
xchg
lods
add
fscale
and
mov
push
mov
adc
xor
mov
xor
push
pushf
jmp
movb
jmp
push
xor
inc
fscale
push
sbb
mov
faddl
mov
jle
outsl
adc
imul
mov
movsb
push
dec
pusha
iret
leave
out
sub
sarl
dec
aad
mov
rcll
cmp
sbb
add
repnz
loop
repz
js
cli
es
loop,pn
lds
jnp
push
dec
int
lret
xchg
jbe
fisttpl
insb
adc
arpl
pop
fs
adc
mov
and
addl
call
jp
loopne
int3
mov
mov
bound
xchg
sbb
into
sbb
inc
push
cmp
pop
mov
movsb
push
pop
or
or
pusha
xchg
push
pop
pop
adc
sbb
orl
ljmp
dec
stos
movsl
ss
fsubs
jno
xchg
jne
jno
pusha
popf
push
push
cs
sub
xor
inc
mov
fisubl
insb
adc
pushf
movb
repnz
jmp
repnz
jmp
jmp
xchg
add
fscale
inc
out
cmp
adc
aad
ret
mov
test
ret
std
lea
ja
adcl
inc
push
add
mov
fnsetpm(287
xlat
enter
xchg
int3
into
mov
cmp
cs
movsb
push
dec
dec
lcall
mov
xchg
dec
jle
push
or
lret
pusha
icebp
mov
ds
push
je
mov
in
mov
dec
leave
fcomps
jne
xor
mov
rorb
gs
ja
mov
sub
mov
hlt
aas
in
mov
dec
frstor
pop
jecxz
jmp
test
movb
pushf
jmp
loopne
mov
fscale
mov
dec
ljmp
sub
out
mov
jmp
pop
and
adc
popf
fscale
sub
pop
mov
fcom
stos
ds
jmp
dec
imul
hlt
fwait
lcall
insb
cmp
or
cmp
jnp
xchg
les
stos
sub
cltd
enter
repz
sbb
push
shrl
repnz
mov
mov
fscale
mov
jns
frstor
jp
push
mov
xchg
or
cmp
ds
or
test
inc
sarl
sti
ljmp
lret
mov
cmp
addr16
adc
call
js
dec
dec
jns
pusha
jecxz
hlt
enter
stos
gs
sub
sbbl
outsl
inc
adc
and
loopne
jl
cli
idivl
sub
inc
add
push
orb
arpl
pushf
call
lea
jb
cmp
clc
cmpb
js
pusha
lea
jne
sbb
sar
not
test
mov
stc
pushf
mov
cmc
add
bt
cmp
jmp
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
fs
jae
neg
lea
clc
mov
btc
btc
lea
shrd
mov
push
clc
mov
call
mov
std
mov
sahf
ljmp
mov
shlb
rcrb
mov
pusha
push
cmp
gs
sbb
stos
fmul
fisttps
outsl
mov
lock
movsl
arpl
cmp
xor
sub
js
xor
aad
mov
test
cmpsl
push
pop
int
adc
dec
decl
cmp
ds
gs
xchg
mov
cmp
push
call
push
lea
je
rol
rcr
test
mov
shr
add
ror
dec
mov
push
cmp
test
pushl
test
call
push
not
call
add
sub
dec
jbe
ljmp
adc
xlat
inc
inc
mov
rorl
cli
dec
and
pop
push
addr16
std
mov
xor
jne
imul
mov
or
add
fdivl
inc
ret
pop
lret
and
mov
jg
lds
int3
rclb
imul
mov
stc
pop
inc
std
mov
inc
and
add
dec
add
sub
nop
lock
int3
out
outsl
dec
mov
cld
movb
or
rcrl
pop
add
mov
or
xchg
sbb
rcrb
ss
mov
lcall
test
xchg
imul
jae
dec
inc
insb
out
jbe
pop
xchg
call
fcmovbe
jbe
push
cmpb
add
shll
fcompl
jg
hlt
clc
adc
shrb
inc
mov
icebp
xor
mov
aas
out
divb
cs
push
dec
cmp
cmp
push
push
lea
jae
pushf
jmp
ror
mov
jecxz
inc
add
push
out
popf
dec
xchg
xor
sub
stos
xorb
inc
mov
jno
and
testl
daa
icebp
or
or
lret
std
popf
push
aam
cli
arpl
shll
mov
jl
test
add
loopne
fisttps
in
and
jmp
cmp
js
orb
cmp
popa
ljmp
insl
jno
cmp
insl
js
adc
movd
sbb
lret
bound
outsl
xor
rcll
mov
add
push
mov
pushf
lea
jmp
adc
mov
stc
xlat
jns
out
lods
or
push
lea
jne
scas
sub
pop
dec
inc
daa
add
arpl
mov
inc
mov
std
leave
test
test
vpshlw
call
sbb
xchg
pushf
xchg
mov
add
je
fadd
add
clc
je
pop
das
xchg
repz
pop
push
push
outsb
push
and
sbb
daa
add
notb
adc
xor
xor
dec
sti
out
leave
pop
sbb
daa
add
adc
into
inc
test
cwtl
mul
cmpsb
movsl
clc
or
out
cmp
in
mov
dec
push
pop
push
aaa
ljmp
call
cmpsb
jo
fdivr
push
add
mov
pop
mov
cs
arpl
mov
or
mov
and
jo
fdivr
cmc
inc
push
cmc
sti
pusha
insb
fdivs
add
call
sbb
andl
pop
pop
in
jmp
rcll
push
fiadds
jbe
mov
mov
stos
and
xchg
xchg
mov
push
jns
into
sbbb
jae
daa
add
iret
je
shl
outsl
or
or
out
ds
cltd
ljmp
bound
mov
repz
stc
cmc
fdivr
pop
cmp
xor
out
aam
inc
ja
dec
lock
scas
mov
inc
mov
cmpb
es
ja
xor
mov
sub
frstor
inc
and
test
in
push
sbb
cmp
fisttpll
sub
mov
push
jl
inc
ret
pusha
pop
jno
dec
cmp
push
out
sbb
mov
jmp
push
imul
outsl
pop
ljmp
les
stos
es
cwtl
pop
jg
or
add
xchg
loope
inc
cld
inc
xchg
mov
les
push
scas
cmp
lods
bound
lea
jmp
out
lds
cmp
sub
ss
mov
insb
or
aam
jle
jae
push
fldl
pop
pop
push
lcall
pop
xor
dec
loopne
pop
or
jb
cli
sub
in
fidivs
frstor
jmp
shlb
nop
fxch
or
push
mov
lahf
push
aam
rcl
rorl
mov
clc
in
outsl
mov
aaa
pop
call
jb
pop
cmp
pop
stos
sub
push
pop
dec
scas
leave
sarb
push
xor
cmp
mov
enter
push
fdivr
aad
js
mov
mov
movsl
std
inc
sbb
ror
outsb
cmp
and
inc
and
pushf
pushf
pushl
ret
mov
std
lock
notl
popa
mov
sub
ds
add
adcb
mov
das
push
dec
xchg
fidivl
adc
out
inc
dec
rcrb
adc
out
rcrb
inc
push
and
mov
jb
insl
iret
int3
arpl
cmp
aad
xchg
js
or
sbb
jne
jnp
mov
fcomps
roll
push
xchg
sbb
adc
std
lret
adc
pop
push
inc
push
pop
pmaxsw
mov
lds
arpl
mov
arpl
jle
sub
test
outsb
loop
pushf
inc
mov
add
push
aas
add
adc
push
imul
sub
mov
dec
pop
xor
test
loopne
stos
xchg
pop
sbb
inc
pop
mov
ja
out
mov
push
imul
lock
add
stc
imul
xchg
cmp
js
or
cmpl
fdivrp
push
jbe
pusha
in
cmpl
fwait
and
mov
mov
dec
imull
fwait
sarb
cmp
fwait
push
fsubs
add
stos
sub
mov
pop
xchg
jb
cld
cmp
stos
dec
scas
cmp
xor
jno
loope
inc
jp
cli
xor
ret
inc
push
jmp
sti
add
movl
pushl
push
jmp
jmp
cli
mov
jb
jae
fadds
cs
popa
das
out
out
sahf
imul
lret
enter
pop
dec
ja
es
data16
push
mov
std
mov
and
dec
sbb
imul
push
insl
push
cmpb
add
pop
mov
mul
add
mov
add
xor
add
jp
stos
pop
sbb
jmp
inc
lahf
pop
add
andb
fdivr
jns
jo
pop
movsl
repz
shrb
loope
cli
stos
cs
push
xchg
sahf
push
pushf
divb
add
fimull
outsl
xchg
cmp
dec
pop
mov
outsl
mov
jge
fisubs
jle
jl
mov
push
inc
push
mov
loope
iret
jmp
ljmp
das
push
jmp
sarb
push
pop
adc
mov
test
aas
cwtl
mov
sti
stos
adc
cli
das
rolb
imul
inc
xorl
fimull
cmpsb
jb
fwait
push
fdivr
mov
aaa
push
add
pop
or
mov
popa
inc
ret
nop
cmp
js
mov
inc
insl
pop
aas
scas
cmc
movsb
fdiv
inc
data16
cld
pop
ret
push
xchg
pop
and
mov
aas
mov
or
frstor
or
add
je
inc
daa
stos
outsl
jo
pusha
filds
rolb
cmp
stos
jbe
dec
mov
ret
call
out
mov
std
lcall
xor
jns
je
add
mov
sbb
sub
mov
add
xorb
test
push
mov
xchg
lret
test
inc
adc
sbb
js
call
pop
std
push
ret
dec
cmp
notl
jb
sub
adc
or
push
popf
push
test
sub
pop
mov
std
or
mov
mov
inc
xor
pop
stos
or
adc
mov
shll
dec
daa
add
shlb
inc
jmp
xlat
pop
cmp
ror
pop
xchg
cmc
xchg
in
cmp
xchg
std
xchg
adc
movsb
js
dec
sub
push
cwtl
fcomps
cmc
sbb
ret
lcall
sub
cmc
adc
lret
push
sub
xchg
xor
imul
in
mov
xor
insl
xor
dec
lods
jecxz
mov
in
fimuls
hlt
dec
sbb
jle
dec
jp
int
lcall
jp
pop
lret
rcrb
push
jp
ret
pop
cmp
inc
out
pop
mov
jmp
push
clc
jbe
sbb
test
outsb
mov
lds
clc
inc
or
test
add
jmp
lock
mov
std
adc
subl
lds
mov
xor
push
cmp
pop
and
lcall
lahf
adc
xor
sub
push
cmpsl
shrb
sub
push
icebp
jnp
mov
cld
jp
pushf
cmp
pop
test
movsl
mov
pop
arpl
idivb
add
or
inc
out
add
rcr
btc
btc
test
mov
pushl
test
pusha
pushf
mov
pushl
lea
je
or
add
shld
setno
mov
jmp
bt
movzwl
inc
pusha
btc
clc
mov
cmc
jmp
movsl
dec
loop
fdivr
xchg
jo
lret
or
add
dec
outsb
and
fwait
sbb
or
in
cld
and
mov
in
pop
adc
repz
sbb
arpl
rol
pop
and
sub
test
inc
sbb
inc
dec
inc
data16
mov
mov
aaa
sahf
imul
ljmp
jnp
test
lret
xchg
sahf
dec
jg
cmp
and
dec
lret
cwtl
bound
push
cmpsl
movsb
push
or
sub
popf
out
jle
in
es
in
ljmp
pop
bound
ret
pop
sbb
pop
sbb
mov
aad
mov
inc
nop
mov
shll
je
xchg
sub
movsb
into
mov
std
data16
fwait
mov
loop
jg
fs
daa
add
mov
jns,pt
dec
mov
pop
les
jg
insl
pop
outsb
xor
jl
jl
add
push
and
mov
mov
or
mov
stos
int
and
dec
into
test
inc
add
adc
in
mov
mov
mov
std
dec
popf
and
xchg
pop
mov
fdivr
mov
mov
lcall
jo
stos
in
and
subl
jbe
push
push
loope
iret
inc
xor
daa
sub
jns
inc
push
mov
repz
push
and
mov
sbb
ljmp
xchg
inc
pop
jmp
jne
subb
movsl
gs
cmp
xchg
push
aas
sbb
orb
aas
dec
xchg
xor
mov
enter
push
dec
xchg
imul
cmpsb
lcall
cmp
cmp
data16
mov
add
inc
test
rcll
popa
add
xchg
int
fs
in
int
mov
repz
imul
iret
mov
loope
mov
mov
leave
iret
xchg
xchg
test
insb
push
jbe
dec
dec
cmpsb
xchg
repnz
movsl
xchg
add
fwait
push
daa
add
jp
popf
lcall
mov
sbb
inc
push
or
adc
inc
lods
xor
ficoms
aam
sbb
and
jbe
cmc
sbb
push
pop
push
inc
push
in
mov
sbb
push
pop
ret
stos
jmp
cmp
jmp
pusha
shr
btr
bt
mov
cmp
mov
cmpb
call
add
std
addr16
sbb
adc
inc
out
lods
sub
xchg
xor
icebp
lret
fisttpll
add
jg
ljmp
cld
add
fwait
push
and
cwtl
sub
pop
insl
das
nop
out
std
dec
dec
or
cmp
inc
and
push
or
sub
stos
add
push
sbb
mov
mov
std
loopne
push
or
loope
hlt
xor
aas
xchg
aam
int3
xlat
sarl
scas
push
in
rorl
push
repnz
dec
inc
dec
mov
inc
inc
cmpsl
pusha
fsubl
add
out
scas
cmp
int
mov
movsb
sbb
xor
add
ret
inc
les
xchg
cmp
pop
arpl
aaa
lock
or
cmp
repnz
jbe
add
jmp
sub
std
add
test
imul
sub
loopne
rcr
adc
sbb
mov
ja
xor
stos
push
es
push
das
push
lock
or
cmp
cmp
shll
nop
push
xchg
xlat
fwait
movsl
sbb
lret
jecxz
inc
and
and
jo
xor
and
pop
jmp
jns
xchg
pop
jl
sub
mov
mov
mov
fwait
inc
loop
rolb
clc
inc
jns
and
xor
data16
pop
mov
fdivr
mov
push
cltd
or
adc
scas
or
push
xchg
test
mov
enter
xchg
adc
xor
hlt
push
xchg
pop
mov
jne
fs
jecxz
dec
adcl
inc
and
add
pushf
ja
into
xor
mov
shlb
in
jae
lret
fistpl
add
movsl
int3
xchg
cmp
and
push
add
popf
negb
and
imul
or
bt
cmp
cmp
push
lea
jae
dec
shl
btc
mov
shl
movzbl
or
mov
btc
mov
call
inc
cmp
fdivr
testb
pop
xchg
rcll
cmpl
pop
add
mov
fcmovu
xor
out
shlb
or
arpl
mov
in
shrb
jp
loope
mov
xchg
sub
xor
mov
adc
or
push
and
mov
xor
jecxz
js
out
dec
inc
mov
mov
arpl
fdivr
movsl
xlat
and
mov
and
das
mov
std
in
bound
popf
pop
adc
dec
jmp
xor
mov
into
xchg
cli
xor
fadds
push
jns
and
sti
cltd
adcl
movsl
cld
hlt
fisubrs
or
inc
adcb
push
add
hlt
jle
enter
int
shll
jmp
or
in
push
xchg
sahf
jl
xor
scas
fdivr
test
movsl
fldl
add
mov
iret
scas
adc
mov
sub
lcall
and
pop
push
out
into
cmp
negb
pushf
xchg
outsl
jnp
hlt
mov
aaa
insb
jmp
repnz
adc
in
jbe
imul
xor
aaa
jge
adc
iret
mov
shl
jl
pop
dec
dec
or
outsb
fsubrl
cmp
mov
jmp
xor
fdivr
or
cs
mov
icebp
dec
lret
jmp
jns
jbe
fsubrs
add
add
aas
jmp
sbb
dec
icebp
inc
jl
fs
mov
push
stc
push
aam
call
pop
std
cwtl
push
xor
pop
int3
ja
data16
inc
imul
push
and
push
gs
mov
pusha
popa
daa
push
int3
test
pop
cmp
pusha
aas
pop
add
aas
shll
inc
jb
dec
pusha
add
dec
mov
adc
cmp
test
fwait
inc
in
lock
sbb
fdivrs
jb
add
in
mov
imul
and
clc
aaa
jne
movl
lock
or
shll
inc
pushl
jmp
repnz
jmp
pushl
imul
cmc
pushf
call
mov
cmp
movb
lea
ja
mov
pushf
adc
sub
shr
sub
add
setle
shld
mov
pusha
sub
mov
test
push
bt
test
repnz
call
das
add
fdivr
popa
stos
add
out
push
jbe
lock
js
test
icebp
add
loopne
mov
stc
repz
out
add
push
dec
sbb
adc
loope
cmc
xlat
adc
or
rcrb
dec
and
insl
callw
idivb
ja
jns
ja
int
fstpl
hlt
dec
js
loop
cli
mov
cmp
or
iret
subps
sub
orb
shl
jg
add
call
stc
outsl
fwait
lods
fdivr
rcrb
mov
fistl
mov
mov
adc
int3
adc
je
icebp
rol
inc
inc
outsl
ficoms
inc
ret
xor
into
cld
aaa
dec
iret
aaa
dec
xchg
sbb
push
xchg
aad
mov
mov
lahf
pushf
fistpll
xor
push
dec
stos
popa
stc
jp
xchg
and
cmp
push
dec
rcrl
les
add
jecxz
xlat
and
mov
cmp
cmc
cmpb
pushf
jmp
in
and
pop
or
adc
cs
adc
hlt
xlat
sahf
inc
in
jo
arpl
ja
loope
sub
leave
loopne
das
mov
insb
adc
jg
test
xor
iret
loop
cmp
sub
pop
jo
inc
sbb
mov
aad
pop
add
adc
or
xchg
aad
adc
mul
mov
inc
movsb
pop
inc
repnz
movsl
rcll
xlat
add
pop
aam
cmp
insl
mov
push
jo
shlb
into
add
inc
ljmp
or
je
or
gs
ja
xlat
pop
fsubs
fsubrp
push
sti
imul
lea
fists
pop
dec
adc
sbb
and
or
stos
movsl
or
aad
adc
sub
test
inc
cmpsl
dec
sbb
in
and
inc
lods
sbb
xchg
push
cmpsl
sarb
enter
ljmp
lock
lret
add
mov
pop
das
push
arpl
shll
add
xchg
rcl
xchg
rcll
gs
pop
push
pusha
xor
movb
jmp
into
les
add
and
adc
out
xchg
jecxz
jecxz
and
js
in
out
add
cmp
mov
xchg
or
movsb
inc
dec
imul
pusha
dec
xchg
jne
data16
je
lea
stos
roll
stos
inc
sub
cmp
jg
nop
imul
pop
notb
xchg
movl
push
pop
test
push
inc
xchg
xor
xor
mov
or
fdivr
pop
and
mov
pop
cmpl
xlat
lock
and
add
fdivs
pop
jle
push
out
stos
push
mov
add
nop
not
jecxz
hlt
mov
fists
stos
negb
add
xor
jae
add
outsl
hlt
mov
pop
pop
and
fidivrl
cli
add
sar
xchg
std
add
mov
in
out
sub
lret
cmc
jmp
decl
insl
cmpsb
push
lock
std
std
test
xchg
imul
lahf
lret
lret
cmovge
push
pushf
mov
pop
mov
xor
mov
or
jge
cltd
in
sbb
cs
aam
pop
lret
call
xchg
notb
fwait
xor
sbb
inc
push
add
in
xchg
push
mov
test
or
lock
rorl
adc
test
dec
jge
out
pop
jp
pop
adc
and
aam
lds
add
outsb
jnp
inc
push
movsb
shl
dec
aad
orb
dec
push
in
jg
xchg
icebp
push
pushf
repz
or
mov
cmp
dec
cs
std
loop
test
pop
cmp
int3
xchg
pop
or
xchg
dec
xorl
cmpsl
jae
xchg
xchg
cmp
fdivr
test
outsb
xor
cs
sti
test
movsb
enter
add
je
fistl
pop
bound
popa
into
into
fcompl
movsl
ds
jae
mov
push
lea
or
xchg
adc
icebp
sahf
xchg
insl
push
cld
mov
movsb
push
mov
add
xchg
add
cmc
xchg
or
jp
and
mov
add
out
cmp
add
cli
push
or
rolb
fisttps
cmpsl
fmul
dec
lock
pop
test
mov
test
std
dec
adc
xor
sahf
xlat
xchg
movl
mov
pusha
xchg
cmp
repnz
lret
vmovsd
push
push
inc
lret
push
xlat
add
push
mov
pop
push
add
ror
xchg
scas
lahf
jle
adc
mov
mov
inc
cmpsl
test
push
mov
cli
inc
aad
sub
test
push
stos
jecxz
xor
jnp
call
inc
push
sbb
xor
cs
insb
add
push
pushl
ret
movl
add
push
pusha
mov
lea
jmp
aad
dec
cmpsl
fdivr
sbb
out
or
xchg
jp
lods
mov
ds
out
lahf
stos
dec
add
pushf
inc
adc
fsubrs
cmpsb
outsb
jns
addl
test
pop
packuswb
shl
jb
cli
pop
add
add
xor
lea
ja
test
enter
push
push
and
insb
popa
outsb
pop
test
or
cmpsb
fdivr
cmp
mov
mov
adc
jecxz
mov
and
out
cmc
dec
insl
pop
daa
add
cmp
iret
enter
mov
fdivr
subl
inc
es
push
bswap
iret
pop
daa
add
mov
sbb
xor
outsl
cld
mov
frstor
orl
xlat
aam
and
div
dec
pop
pop
pop
daa
add
es
fbld
or
pop
inc
push
inc
cmpsb
fdivr
hlt
cmp
out
cmp
jnp
fstl
pop
daa
add
sbb
mov
dec
add
adc
fdivr
pop
cmpsl
dec
adc
subb
dec
aam
cltd
sbb
rcr
push
dec
adc
pop
daa
add
xor
pop
daa
fisubl
sub
mov
jmp
test
and
movsb
jmp
mov
push
aam
mov
mov
movsl
dec
clc
mov
sbb
pusha
push
mov
out
cltd
dec
dec
arpl
ret
xchg
cli
add
insl
xor
push
push
mov
repz
sub
adc
adc
sbb
movsl
fdivr
push
movsb
es
pop
out
jmp
jecxz
ds
fisttpl
movsl
jno
adc
adc
test
movsbl
movb
movzbw
push
lea
pusha
pop
lea
ja
lea
pusha
jmp
movsb
jmp
bound
fldcw
fsubl
jbe
les
cltd
xchg
jns
dec
pop
daa
add
pop
jl
inc
inc
fneni(8087
nop
sub
sahf
movsb
fdivr
cwtl
aas
pop
sbb
jbe
mov
dec
jne
lds
rcl
popa
loop
daa
add
add
negb
scas
in
pop
inc
push
insl
sbb
dec
mov
call
fdivr
mov
push
xor
jno
nop
mov
out
int
inc
bnd
push
push
dec
pop
daa
add
popa
adc
jge
xlat
out
dec
gs
push
daa
call
jle
data16
xor
cmp
cmp
push
mov
adc
sub
and
in
popl
shlb
aas
paddusb
fiadds
add
jp
fscale
dec
push
add
mov
cltd
enter
pop
sub
inc
cwtl
data16
cmp
push
imul
mov
clc
clc
push
add
push
pushf
lea
jmp
nop
mov
inc
fs
jns
jecxz
sub
pop
lret
shrb
fstpt
and
cmp
pop
es
das
nop
std
rcrb
inc
push
imul
cmp
stos
les
cmp
mov
cmp
push
stos
push
mov
cmp
pop
mov
pop
std
jo
jbe
pop
int
adc
add
pop
push
sbb
clc
mov
shll
inc
mov
out
je
push
hlt
xor
xchg
lret
sbb
jb
jmp
sub
push
sub
scas
mov
popf
lds
fisubrl
andb
push
vcmppd
jmp
cmovb
pop
enter
leave
push
cltd
sbb
out
cmp
push
ja
fcmovne
sbb
sbb
mov
push
call
dec
leave
and
inc
dec
inc
xor
andl
popf
fldt
push
dec
clc
adc
pcmpgtb
or
dec
or
out
pushf
xor
add
mov
aaa
jg
jl
xchg
pop
pop
adc
shrb
cmpsb
sbb
repz
push
outsb
or
into
lods
dec
jp
shll
adc
sub
mov
mov
testl
and
xchg
dec
stc
fildl
gs
lods
mov
ficompl
push
popa
es
push
dec
nop
repz
mov
pop
push
mov
sti
cmp
dec
sub
and
ljmp
dec
cmp
int3
mov
pop
and
jne
jae
pop
mov
xchg
inc
test
push
mov
cmc
inc
xchg
dec
sbb
or
xchg
arpl
push
fiaddl
cld
js
std
aaa
pop
inc
add
mov
dec
arpl
or
and
mov
pop
jns
loopne
mov
pop
mov
lock
ret
mov
jns
sub
and
lock
pop
rorb
sbb
shrd
jo
pop
fs
sti
cmc
cmpsb
call
lock
or
sahf
jo
inc
lods
arpl
clc
test
call
clc
stc
clc
imul
jmp
xchg
jmp
sub
mov
pushl
popl
bt
bt
cmp
call
idivb
push
mov
sub
out
fwait
xor
inc
in
mov
iret
inc
dec
arpl
jnp
gs
test
gs
mov
inc
test
dec
push
mov
repnz
xlat
imul
addr16
pop
in
adc
scas
shll
jno
shl
and
jle
fidivrl
or
inc
mov
lfs
sahf
pop
xor
sub
jo
cltd
push
addr16
sub
mov
or
pop
xchg
std
movb
lcall
sub
pop
add
rcr
roll
mov
in
or
test
jle
mov
imul
into
lods
sbb
repnz
xchg
jnp
mov
cmpsb
popa
lea
es
scas
pop
mov
push
jae
xchg
mov
cltd
shll
fisubrs
jnp
mov
or
cmpsl
sti
shlb
sbb
jns
adc
push
test
ss
dec
fimuls
push
sub
inc
adc
aam
push
in
dec
and
mov
aam
inc
fadds
push
xchg
lods
adc
sub
mov
inc
xchg
cltd
mov
cmp
dec
mov
sub
insb
xchg
lods
test
mov
dec
xchg
xor
lahf
outsl
mov
popa
mov
xchg
decw
and
imul
lods
pushf
or
sbb
lds
cmp
pop
call
xchg
stos
or
add
pop
mov
jne
inc
in
ja
movsl
pop
addr16
push
mov
lds
xchg
xchg
repz
adc
loopne
push
inc
inc
cmp
test
movw
mov
jmp
xchg
or
arpl
sbb
jecxz
pop
stc
push
cmc
xchg
fwait
pop
xchg
gs
std
cmp
stos
xor
xchg
pop
jno
js
add
push
lret
cltd
sahf
mov
fldenv
outsl
and
mov
hlt
mov
inc
out
mov
mov
pushl
mov
push
mov
sahf
mov
rclb
into
sub
mov
or
je
rorb
inc
popa
in
mov
outsb
xor
inc
cmp
sub
xchg
dec
fwait
repz
xor
fwait
dec
sub
or
in
fnstcw
lret
stc
sti
or
xchg
jle
pop
push
sarb
jmp
cld
xor
lahf
test
mov
stos
sahf
fdivr
rorb
xchg
mov
fimuls
je
aad
in
loop
or
adcl
sbb
mov
lret
scas
pop
dec
dec
lods
xchg
fcompl
call
xchg
pop
cld
mov
pop
sub
or
and
shll
and
jb
fsts
pop
es
jmp
arpl
je
xor
sbb
mov
pop
sbb
test
xor
ret
mov
jle
in
mov
mov
ret
lret
loope
fxch
pop
rorb
test
xor
add
mov
pusha
push
and
lea
mov
stc
add
clc
mov
movzbw
call
lea
jae
sar
clc
mov
inc
btr
mov
pusha
shld
ror
btr
mov
clc
bt
movb
xor
jmp
lods
cwtl
fwait
loopne
mov
mov
mov
xchg
mov
fistpl
xchg
pushf
loopne
xchg
mov
sahf
fwait
loopne
xchg
popf
lahf
mov
loopne
cwtl
fwait
loopne
xchg
loopne
xchg
xchg
xchg
loopne
xchg
sahf
mov
lea
in
pop
popf
fdivr
or
loope
ficompl
mov
pop
mov
lods
mov
cmpsl
in
in
cli
xor
adc
pusha
sbb
mov
xchg
sbb
sub
stos
fmuls
test
add
adc
arpl
popa
jg
pop
add
dec
lock
jg
movsb
cmpsl
push
push
add
pop
cmc
sahf
les
and
or
out
mov
pushf
fdivr
fisubrs
dec
in
cmp
out
mov
es
adc
pop
insb
dec
in
daa
add
ja
or
repnz
inc
scas
inc
mov
xor
push
mov
pop
cmp
fwait
test
andl
rclw
mov
sahf
sbb
aaa
add
ds
xchg
repz
mov
lods
dec
rclb
pop
or
sub
or
in
stc
ffree
dec
mov
test
push
imul
movsb
sbb
dec
int3
dec
or
sub
inc
insl
and
cltd
mov
lret
xor
and
ja
pusha
sub
and
sub
add
stc
bts
mov
not
mov
bt
repnz
call
mov
gs
cltd
push
jge
jo
push
lahf
rclb
fisubs
test
jle
in
xchg
aam
scas
clc
lahf
aas
clc
add
mov
std
bnd
xor
add
sbb
std
repnz
inc
cwtl
adc
sbb
mov
gs
imul
inc
dec
xor
and
sub
add
fsts
push
ja
andnps
iret
repnz
cmpsl
push
mov
test
push
dec
dec
push
push
dec
dec
dec
cs
push
push
add
inc
and
hlt
out
call
setnp
movzbw
movb
mov
jmp
push
std
or
enter
inc
or
call
xlat
popf
out
xor
inc
inc
sbb
fs
add
mov
enter
das
inc
fistpl
sti
cmc
in
stos
fs
xchg
fsts
xchg
pop
xchg
cmp
push
fstp
and
jbe
movsl
out
mov
cli
aad
sahf
mov
addr16
cmpsl
lods
pusha
and
pop
dec
xchg
pop
mov
outsl
lret
sti
movsl
jno
add
and
inc
hlt
aad
jl
inc
pop
add
inc
cmp
jb
dec
push
sub
iret
xchg
mov
fstp
or
rolb
pushf
xor
decl
jge
mov
fcmovu
jo
xorb
push
pop
push
or
and
and
fs
or
xorb
dec
and
les
sar
mov
pusha
mov
cmc
pushf
pushf
cmp
mov
lea
jbe
call
arpl
es
out
jb
movb
cs
stc
mov
pop
aam
xchg
pop
xchg
out
add
adc
stos
pushf
enter
dec
push
cltd
mov
test
mov
fnstenv
push
or
popa
adc
add
cmp
ds
outsl
sbbl
inc
lret
and
add
lahf
mov
mov
xchg
add
das
enter
cmp
movb
lea
je
call
push
clc
call
dec
pop
pop
cltd
fdivr
dec
xchg
mov
mov
loope
cmpb
fcompl
push
shrl
dec
push
pop
jecxz
or
aad
adc
fists
lods
iret
jp
push
in
cmp
sub
daa
add
cli
mov
adc
inc
and
mov
subl
mov
inc
xor
in
mov
and
sbb
or
test
adc
rcll
jo
fdivr
cmc
mov
xchg
loop
pop
sbb
mov
or
push
jnp
sub
fadds
or
sbb
add
sub
inc
mov
inc
ds
adc
dec
out
in
mov
popf
cli
int3
xchg
std
sbbb
xchg
nop
and
gs
xchg
and
adcl
lcall
pop
push
cmp
sbb
add
lds
lahf
adc
shrb
shrb
rorb
xor
mov
popf
out
pop
test
lods
shl
mov
push
cmp
clc
pushf
mov
pushf
lea
jmp
push
dec
dec
dec
dec
inc
push
cs
insb
add
std
or
sub
repnz
loop
mov
mov
es
add
dec
add
push
mov
stos
sbb
scas
sbb
lock
subl
and
jnp
xchg
xor
add
xchg
xor
mov
add
clc
and
jae
sub
cltd
push
rcl
pop
push
pop
sbb
mov
imul
mov
push
mov
pop
push
jmp
add
arpl
fimuls
cmpsl
or
lods
push
aam
sub
je
add
fs
jne
sete
btc
setb
xor
cmc
setno
mov
rcl
add
ror
mov
pushf
test
push
mov
lea
je
jmp
push
mov
xchg
fdivr
xchg
pusha
sbb
dec
bound
mov
dec
mov
push
outsb
sub
les
or
adc
ds
xchg
in
aam
std
mov
add
lret
mov
popf
dec
popa
xchg
jecxz
stos
inc
sub
push
fmulp
xor
mov
add
jae
push
push
and
add
pop
sbb
jg
adc
push
ja
das
mov
stc
sbb
xor
jb
test
movsl
xchg
div
ret
push
xchg
dec
dec
inc
inc
push
push
xor
cs
insb
add
pop
arpl
subl
ja
inc
jecxz
cmp
cs
test
jg
dec
out
inc
insl
js
stc
mov
pop
bound
es
inc
repnz
cmpsl
jne
cmp
jo
imul
add
decl
jge
inc
jnp
lea
addr16
cmp
ret
repz
stos
test
xchg
lods
jne
cld
mov
and
push
sbb
ret
xchg
rcrb
loop
add
add
add
pop
es
mov
jns
leave
out
cmpsl
jo
xchg
fdivr
iret
sbb
xor
lea
rep
mov
das
daa
cmc
inc
ss
movsb
in
cmpsl
fwait
and
sbbl
mov
stos
je
push
movsl
in
xor
daa
mov
xlat
jmp
andb
loopne
lods
sbb
xor
pop
cmp
or
push
push
fsubrl
mov
es
xor
filds
adc
mov
lods
mov
aam
notl
mov
push
cmc
decb
lret
jo
mov
lods
push
xchg
sbb
jl
cmp
js
cmpsb
ficoml
sbb
push
xchg
nop
sub
cld
push
aad
cmp
and
imul
scas
fsubrl
mov
pushl
es
pop
stc
cmp
movsbw
lea
lea
movzbw
movzbw
mov
movb
call
pusha
lea
jne
movsbw
xor
inc
mov
mov
test
add
mov
bt
mov
stc
cmc
clc
test
jmp
test
lea
jnp
push
lea
je
jmp
fiaddl
adc
les
pop
jg
add
test
aaa
add
push
lds
punpckhwd
push
inc
dec
inc
add
push
inc
ja
mov
icebp
or
xchg
sbb
jecxz
mov
push
pop
mov
cmp
cmp
xor
pusha
xor
mov
or
xchg
cvtps2pi
and
and
or
xchg
fdivr
xchg
pop
add
sbb
scas
jmp
inc
lock
jp
in
sub
adc
adc
dec
mov
fdivr
cltd
or
or
imul
arpl
test
aad
inc
pop
and
inc
pop
rorb
mov
xor
mov
sub
cld
or
std
into
add
hlt
sarb
insl
pop
rolb
dec
xor
nop
lea
je
bts
mov
sub
pusha
rcl
add
adc
inc
mov
pushf
cmc
test
call
lds
push
xchg
fdivr
adc
sub
push
or
mov
daa
dec
or
imul
imul
cld
jnp
pop
mov
das
pop
jb
dec
sbb
and
mov
or
leave
xchg
std
lock
and
loope
fcmovu
xchg
nop
pop
jg
loop
dec
jle
jmp
mov
cli
popf
add
imul
les
sub
aad
ss
dec
adc
jo
dec
push
and
inc
stos
xchg
in
xorl
push
push
mov
enter
jl
test
jge
sub
xor
ss
dec
dec
arpl
push
push
sub
repnz
pop
xchg
mov
xor
pop
and
add
jmp
xor
imul
popa
pop
jnp
sbb
cmp
mov
and
lock
jg
les
or
fs
ja
call
dec
int3
lds
lahf
pop
or
ficomps
pushf
cmpsl
ja
loop
cmp
jge
push
jns
sbb
mov
std
lods
js
inc
and
and
sbb
pop
mov
adc
xor
cmp
jmp
insb
cmp
xchg
inc
mov
mov
movsl
pushf
mov
push
lea
rcll
arpl
adc
push
ficomps
and
pop
mov
sub
fidivs
orb
xchg
fdivr
into
lcall
and
adc
test
dec
sbb
xchg
sub
inc
pop
cmc
imul
imul
sbb
dec
sbb
sti
sbb
jp
inc
hlt
inc
dec
rolb
inc
dec
cmp
rcrl
ja
add
int
mov
inc
inc
ss
push
jp
rcrl
ss
int
dec
scas
jl
mov
add
aas
aad
pop
test
or
imul
adc
dec
fstpt
sub
adc
pop
sbb
pop
fldt
push
jnp
xor
call
add
std
sub
and
nop
inc
jb
cld
mov
push
inc
jmp
mov
dec
cmp
sbb
mov
mov
push
push
sbb
cmpb
sbb
popf
jbe
pop
inc
adc
xchg
push
cmp
mov
xchg
cmp
jmp
mov
mov
and
nop
dec
leave
add
pop
movsb
clc
mov
fwait
arpl
ja
sbb
push
xchg
fdivr
loope
in
and
and
pop
repz
cmp
je
or
test
pop
push
jno
popw
stos
xchg
fmuls
mov
adc
dec
pop
xrelease
dec
xlat
out
ficoms
pop
dec
add
test
push
mov
addr16
loope
mov
std
add
mov
std
jge
mov
mov
pushf
push
getsec
fdiv
in
cmp
test
in
inc
pop
popf
ss
fdivr
xor
mov
int
inc
bound
lea
add
out
popf
or
jle
mov
cmpsb
mov
pop
lret
cs
out
dec
lcall
mov
stc
jno
push
mov
jmp
mov
jno
test
add
and
mov
inc
in
ret
mov
adcb
call
movsl
iret
andl
xchg
pop
jl
out
mov
lds
add
bound
idiv
xor
adc
lea
jnp
push
xor
xchg
cmc
arpl
ss
scas
mov
or
jecxz
push
jmp
js
inc
dec
addr16
add
pop
jge
xlat
popf
dec
subl
lock
ds
cmp
fdivr
arpl
loop
dec
add
imul
out
les
fiadds
dec
repnz
outsl
sbb
dec
aaa
push
mov
enter
fistl
jo
imul
xchg
imul
sahf
jg
push
mov
push
dec
and
push
icebp
or
jnp
imul
mov
inc
pop
pop
mov
dec
sbb
adc
and
fdivr
xchg
leave
push
sbb
jmp
cmp
nop
pop
pushf
jne
pop
cmp
dec
inc
push
sbb
clc
dec
push
lds
pusha
fstpl
fs
xchg
pop
sbb
pushf
in
ds
dec
xor
push
out
loope
sub
jnp
sbb
cmp
popf
dec
sbb
sbb
dec
jne
sbb
mov
push
repnz
mov
scas
sub
pushf
adc
jl
dec
push
fnstenv
xor
scas
stos
out
inc
decb
mov
mov
cmp
sub
fdivr
xor
js
scas
ljmp
movsb
inc
imul
jo
push
gs
imul
fidivs
bound
scas
xchg
pop
js
fadds
add
in
out
sahf
push
xor
rorl
mov
out
cs
mov
out
jecxz
iret
mov
and
inc
xchg
dec
cmpsl
adc
out
sbb
repnz
xchg
pop
xchg
mulb
mov
aam
lods
push
pop
cwtl
push
cli
inc
mov
mov
jmp
js
movsl
mov
std
ret
xchg
dec
push
xor
fs
xor
pop
mov
mov
mov
movsb
sarb
mov
or
mov
stc
cmc
push
mov
lds
mov
inc
push
dec
push
lea
add
aad
dec
push
lahf
inc
repz
shr
imulb
jb
nop
outsb
nop
clc
mov
test
shlb
pop
or
jp
jnp
cltd
xor
mov
aaa
jl
icebp
out
stos
js
pop
cmpsb
and
lock
std
movsb
repnz
push
test
in
in
loopne
int
sti
dec
inc
decl
mov
daa
or
mov
jle
xchg
pop
ror
aam
or
call
jle
sub
xchg
adc
xadd
icebp
in
mov
push
cmp
test
and
shll
iret
ret
sbb
mov
stc
loope
loope
sub
out
jb
jbe
dec
pop
cmp
shl
loope
pop
fdivr
push
xlat
test
mov
jnp
fmull
xor
mov
dec
xor
add
pop
adc
pop
mov
imull
and
imul
cmp
call
or
notl
xchg
and
adc
les
popf
lahf
pop
loop
loop
loopne
push
adc
ljmp
out
pusha
cmp
movb
pushf
lea
ja
jmp
push
lock
std
std
mov
bound
dec
ret
jae
jnp
ret
sub
mov
pop
mov
xor
in
mov
stc
in
test
inc
mov
test
pop
push
lds
loopne
das
adc
test
and
lods
add
hlt
inc
mov
add
xchg
push
push
scas
movsb
test
push
push
mov
push
enter
aam
imul
test
add
or
test
mov
mov
gs
pop
into
aam
push
push
jecxz
pop
lods
iret
idiv
out
sbb
pop
push
inc
pop
jbe
and
test
into
xchg
push
lcall
dec
pop
faddl
orl
ret
pop
stc
lods
incl
xor
ja
imul
cmp
add
mov
repz
adc
dec
jmp
daa
int
mov
sbb
into
in
cs
aas
fsts
or
or
shld
jmp
lea
ja
rcl
not
sub
bswap
add
xor
clc
xor
shl
mov
push
shl
call
adc
iret
mov
std
pushf
out
ret
clc
cmp
and
xchg
cmp
iret
mov
inc
mov
bound
out
rorl
cmp
adc
mov
sbbb
out
int3
lahf
fmulp
sar
out
inc
or
pop
adcl
dec
xchg
enter
cmp
movsl
call
and
and
ret
xchg
mov
loop
cmp
gs
jmp
movsb
scas
test
adc
mov
or
and
xchg
loope
out
or
or
ret
lcall
cmpsl
push
push
cwtd
mov
out
mov
xor
fidivrl
outsb
xchg
jb
mov
mov
xchg
fdiv
adc
js
pushf
sub
xchg
push
cli
cs
ja
push
cmpl
cltd
lret
scas
sbb
add
dec
xchg
mov
sbb
jecxz
jae
jge
pushf
cmp
stos
dec
out
iret
adc
popf
je
loope
sbb
scas
mov
std
mov
mov
pushf
aam
aaa
jae
out
gs
mov
cmpsl
mov
mov
rclb
in
mov
mull
jecxz
or
jmp
jnp
jecxz
mov
jnp
mov
mov
adc
xor
dec
pop
pop
xchg
pop
pop
fcmovb
and
pop
shrb
test
fprem1
jmp
adc
push
mov
add
in
fldt
sti
jle
cmp
jae
mov
fdivr
mov
lea
mov
xor
sbb
inc
xchg
add
push
push
xlat
and
push
jae
mov
dec
lahf
shl
push
xchg
out
fsubs
das
lods
int3
mov
movsb
fistl
sahf
loope
movsb
jmp
pushf
dec
xor
sbb
lods
lahf
fists
arpl
inc
cmpsl
sarb
outsb
shr
fldenv
inc
push
movsl
popa
and
lcall
mov
outsl
inc
inc
movsb
cwtl
mov
pop
sbb
test
daa
add
adcb
inc
xchg
xlat
clc
pop
fmull
push
enter
je
cli
out
cmp
rcll
push
lahf
aaa
cmp
jae
daa
std
dec
sti
mov
std
into
fcom
adc
inc
lret
aaa
sbb
leave
aas
or
mov
add
pop
jb
and
mov
jg
je
inc
jbe
std
adc
jae
add
leave
lds
mov
ret
sbb
add
xlat
xlat
outsb
outsl
sub
sub
pop
or
xchg
adc
pop
sub
imul
ror
mov
sbb
lods
jecxz
cltd
repnz
mov
imul
inc
or
xor
mov
inc
xor
cmp
sbb
in
loopne
pop
xor
adc
push
int
fstl
dec
pop
clc
add
outsb
outsl
hlt
aam
mov
clc
pop
cld
das
scas
xor
mov
mov
leave
fistpll
int3
or
push
ds
fdivr
mov
in
sahf
lds
lret
shll
pop
shrb
filds
adc
xchg
inc
xchg
cmpsl
sbb
cld
inc
lret
cmp
push
or
jbe
hlt
movsl
or
sub
xchg
pop
test
sub
loope
fsubrl
testb
jecxz
push
jae
jb
jecxz
rcrl
push
or
push
das
outsl
adc
inc
dec
lods
xor
clc
jg
lods
rcr
mov
adc
cmp
fwait
in
lods
aam
xor
jne
jne
push
incl
loop
fdivr
dec
pushf
mov
lods
sub
aaa
mov
mov
mov
cmc
cltd
ficomps
push
inc
pop
loopne
cli
xchg
ret
enter
inc
mov
in
cmp
pop
dec
ja
inc
xchg
cmp
lret
lods
fstpl
scas
shlb
nop
pop
stos
inc
push
ds
and
dec
or
inc
and
stc
rcr
inc
inc
bnd
push
mov
bound
mov
stos
fidivl
mov
inc
xchg
std
and
push
pop
int
mov
and
js
out
jle
ret
dec
jecxz
into
push
outsl
ja
push
inc
inc
mov
lret
jl
xchg
add
push
push
adc
lret
fs
and
xchg
xor
xchg
lret
loope
scas
cmp
xchg
xchg
pop
mov
jo
sbb
push
les
insb
js
or
stos
loop
push
rorl
das
adc
sub
fiaddl
xchg
or
sbb
cmp
in
leave
or
lods
inc
leave
or
dec
push
stos
mov
aam
ds
push
lods
jp
cmpsb
xor
xchg
stos
notl
mov
push
divl
mov
mov
loope
das
mov
dec
push
mov
shll
push
aam
dec
push
out
repnz
loope
insb
das
fmull
sub
mov
fs
lea
je
call
lea
jge
push
pusha
pusha
pushf
pushf
pushl
ret
xchg
cmc
adc
xlat
sbb
adc
bound
les
lcall
xchg
sbb
stos
cmp
cmpsb
or
mov
xor
orl
into
and
jge
cmp
mov
stos
lods
mov
fwait
mov
les
and
mov
loop
mov
es
add
pop
aam
pop
dec
xchg
pusha
fsts
and
and
not
bswap
lea
jne
pop
pusha
mov
lea
push
pop
call
shrd
rol
mov
neg
bsf
stc
call
mov
call
cmp
cmc
test
jmp
mov
std
add
xchg
push
clc
xor
lcall
call
aad
push
sahf
xchg
and
jb
lea
jno
and
sti
or
dec
mov
ret
sbb
or
pop
lahf
inc
sub
and
or
rep
push
inc
call
cmp
mov
mov
insl
or
pop
rcl
out
inc
js
xor
popa
add
arpl
rclb
mov
sysret
push
pop
add
inc
insb
movsl
test
std
ret
clc
ret
in
push
aaa
loopne
es
fstl
repnz
ss
fwait
pop
imul
dec
seto
fisttpl
fwait
out
mov
xor
pop
xchg
and
mul
nop
mov
push
push
rcl
aad
push
push
aam
lret
jnp
xchg
sahf
lea
loop
cltd
push
pop
notb
inc
push
xor
cs
insb
add
repnz
test
std
or
xorl
adc
rorb
sti
lret
ror
xor
outsl
sub
xchg
xchg
sub
out
add
aam
mov
outsb
xchg
sbb
jecxz
fdiv
xchg
inc
cwtl
push
add
adc
cltd
pop
add
dec
gs
popa
addr16
outsl
js
add
xchg
stos
stc
bt
push
bt
imul
test
bt
pusha
pushl
add
push
movl
pushl
push
lea
jmp
lods
lock
insb
pop
and
ljmp
add
ss
leave
cwtl
es
xchg
test
jle
cltd
jb
add
cmpsl
sbb
lcall
push
in
lret
xchg
pop
insb
or
mov
aad
xchg
add
sub
roll
adc
popl
ljmp
or
jge
fwait
xchg
test
fldt
aam
imul
pop
pop
sbb
cli
dec
scas
jmp
addr16
int3
inc
dec
aad
lahf
and
inc
and
xor
stc
jecxz
movsl
xorl
xor
jno
pusha
mov
scas
push
cmpb
sub
loop
inc
imul
js
lret
out
mov
ss
mov
sti
xchg
inc
adc
cld
js
mov
nop
daa
inc
push
insb
pop
mov
inc
shrl
jns
or
adc
ret
mov
lcall
dec
jge
sub
mov
push
iret
ficoms
cmp
lahf
mov
movzbw
lea
call
clc
cmp
pushf
lea
ja
rcr
cmc
add
rol
sub
pusha
sub
add
rol
mov
inc
mov
push
cmc
mov
repnz
pusha
lea
jne
not
movb
push
pushf
jmp
ret
sbb
xchg
fstl
push
jp
in
push
adc
ja
fst
data16
or
outsb
push
jmp
mov
repz
popl
fsubrl
ret
stos
and
divb
scas
sti
mov
sahf
dec
fwait
dec
sbb
ficoms
mov
aam
pop
stos
fdivrp
sub
andb
out
cmp
cmp
mov
sbbb
jge
and
mov
pop
rsm
sub
in
cli
inc
gs
lods
std
sbb
outsb
mov
mov
lcall
sbb
clc
stos
fidivrl
fstpt
add
xor
sbb
dec
cltd
mov
stos
pop
hlt
pop
adc
outsl
cmp
js
rcr
test
icebp
sub
lods
imul
cmp
aaa
add
adc
add
bound
stc
loopne
fadds
gs
mov
and
and
jb
pop
xor
clc
jp
addb
sbb
cmp
adc
mov
or
cltd
mov
jge
xchg
arpl
call
sbb
scas
loop
pop
fwait
imul
cwtl
sbb
cmpsl
and
xchg
push
adc
cmc
sarl
push
out
pop
sarl
mov
xchg
push
sbb
sahf
dec
rep
int3
ljmp
mov
adc
in
fidivrs
std
mov
aas
pop
sub
mov
or
jle
movsl
insl
sti
popa
sbb
inc
lods
sti
or
repz
push
dec
jno
inc
mov
stc
ljmp
push
mov
into
sub
push
mov
adc
bswap
int
jo
pop
inc
pop
shll
mov
push
mov
pop
push
sub
sarl
cmp
negb
mov
sbb
dec
sbb
xchg
lret
push
stc
test
dec
lods
sbb
stos
adc
fdivr
in
mov
mov
ss
sbb
xchg
mov
int3
aad
addl
sbb
and
jecxz
je
sub
fistpll
fistps
stos
scas
neg
add
mov
jl
lret
iret
mov
xchg
cmp
fbstp
push
dec
aam
adc
arpl
push
push
insl
mov
or
into
mov
out
mov
lea
mov
and
sub
xor
call
call
sbb
popf
fdivr
lret
in
iret
xchg
push
mov
pop
movhps
xchg
cmp
inc
mov
enter
dec
imul
in
jne
out
mov
or
outsl
push
jo
les
xchg
loope
inc
inc
out
jo
or
frstor
sbb
sub
shll
in
ja
stos
shll
repnz
orb
jb
outsl
xor
push
add
and
push
rcrl
out
lea
jae
ror
sar
shl
adc
mov
sar
clc
and
mov
inc
mov
jmp
shr
push
aas
aam
mov
sete
adc
pushf
sub
sub
neg
push
jnp
push
test
pusha
sbb
mov
pushf
mov
aaa
ror
movzbw
mov
push
test
pushf
call
mov
push
pushf
pushl
ret
add
inc
gs
imul
inc
add
std
fbld
xchg
pusha
popa
mov
mov
insl
fst
stos
jbe
sbb
loope
shl
sbb
mov
insl
xchg
xchg
dec
shl
mov
ror
jge
pushf
mulb
daa
xor
sub
or
andb
int
shll
adc
and
and
popf
stos
cmp
clc
inc
fcoms
call
loope
dec
add
add
in
out
sbb
add
xchg
std
fdivr
fsubs
ret
clc
adc
icebp
push
test
outsb
cltd
cmp
clc
mov
data16
xor
iret
mov
icebp
lcall
arpl
movsb
push
mov
imul
adc
xchg
out
add
cmp
jnp
or
jae
sbb
mov
aas
mov
push
cmpxchg
xchg
inc
jmp
pop
sub
mov
adc
jne
pop
std
fdivr
or
movsl
clc
ret
insb
xor
cmpsl
dec
mov
insb
sbb
push
and
outsl
outsb
push
repnz
jmp
pop
sub
dec
fisttpll
shrl
dec
sub
repnz
ret
mov
xor
push
jo
push
add
incb
and
jmp
out
inc
inc
repnz
inc
shlb
hlt
add
sbb
or
dec
inc
add
andb
fdivr
inc
or
js
jle
pop
movsb
iret
jp
pop
mov
push
jb
jge
les
dec
cld
mov
insl
xor
shlb
inc
or
jbe
jno
rorb
mov
iret
lods
imul
cmp
dec
dec
clc
out
es
divb
jne
lds
imul
frndint
jno
arpl
inc
pop
add
xchg
xchg
scas
inc
shll
and
clc
ror
add
mov
shr
btr
btc
mov
shld
add
not
push
pusha
lea
mov
pushf
movb
movb
pushf
mov
pushf
mov
lods
pushf
call
mov
std
daa
lock
inc
push
mov
scas
imul
cltd
imul
xor
sub
stc
fcmovnb
push
je
pop
fs
std
adc
repz
mov
loope
in
or
cmp
repz
xchg
nop
cmp
icebp
ljmp
sbb
adc
insl
pop
mov
adc
out
in
inc
push
adc
dec
in
push
dec
frstor
jne
cld
ss
decl
ret
xchg
or
mov
sbb
jp
adc
shlb
push
xor
xchg
jae
lods
jge
cli
enter
loope
dec
jbe
imul
out
mov
pop
xor
push
jnp
sti
jmp
and
inc
or
jmp
or
into
jg
int
in
mov
jp
setae
adc
jp
mov
lock
addl
cld
das
lret
roll
rcrb
outsl
xor
push
push
mov
pushf
movw
pushl
lea
call
jmp
ljmp
fyl2xp1
mov
je
inc
nop
fldl
mov
out
or
and
jno
enter
sub
cmpsl
cmc
ror
imul
sub
test
pop
stos
dec
repnz
add
outsb
pop
dec
mov
push
dec
jge
in
or
sbb
cld
dec
imul
mov
mov
jg
shll
outsl
mov
js
lds
cs
inc
ret
pop
ret
nop
ja
xchg
cmpb
lods
orb
lret
sbb
jnp
dec
pop
rcrb
loop
sub
pushf
cmc
pushl
popl
stc
cmc
stc
test
cmp
lea
jbe
pushf
pusha
pushf
lea
ja
shr
dec
push
sub
stc
ror
movsbl
btr
add
add
push
mov
and
stc
neg
mov
pushl
mov
call
jbe
or
fdivr
pop
daa
push
jno
int
loopne
negb
paddw
shll
push
rorb
and
adc
aaa
aaa
jo
outsb
and
sbb
dec
xchg
sbb
cmpsb
fstpt
aas
jmp
cmpsl
add
rorb
add
mov
jno
daa
inc
dec
mov
mov
xor
mov
pop
repz
int3
dec
clc
data16
out
xchg
pop
xchg
xor
add
pop
loop
call
in
mov
lea
mov
stos
sar
fwait
mov
inc
adc
cmp
cmpsb
dec
mov
inc
pop
mov
adc
add
pop
sbb
fistpl
pop
fildll
dec
xor
pop
xchg
test
add
out
nop
pop
mov
lcall
dec
push
sbb
mov
and
fndisi(8087
mov
stos
sbb
mov
adc
push
xor
addr16
in
stos
pmulhw
jae
inc
cmpsl
adc
cwtl
mov
mov
fstps
adcl
push
in
mov
std
mov
cmp
pop
mov
push
mov
addps
mov
inc
dec
insl
dec
push
jae
aaa
popf
test
sub
stc
inc
lock
mov
mov
imul
adc
dec
mov
gs
out
mov
test
or
mov
lock
addr16
xor
or
movsb
push
push
mov
pop
movsl
adc
adc
push
call
sub
push
clc
fdivr
arpl
dec
xchg
rorb
mov
ja
mov
mov
data16
stos
js
mov
add
bound
cmc
fsubrl
mov
in
jbe
or
and
fsts
mov
pop
adc
jmp
ss
jge
cmpsl
xchg
fwait
clc
in
inc
sti
aas
lods
xor
mov
jo
out
sbb
adc
dec
std
sub
push
inc
mov
test
setno
mov
call
sahf
sub
fdivr
jl
js
inc
jl
jmp
popa
test
and
pop
in
dec
mov
shr
test
push
inc
or
mov
dec
jmp
std
out
xchg
leave
mov
pop
mov
inc
mov
or
icebp
push
test
inc
aas
rcr
stos
adc
addl
rcrl
enter
outsl
movsl
pop
mov
iret
and
imul
jmp
neg
std
fs
fwait
sar
cwtl
fcoms
xor
stc
mov
popl
movsb
bound
mov
arpl
idiv
xchg
and
fs
insb
idiv
out
es
cmp
pop
xor
sti
stos
test
adc
pop
jno
mov
popa
or
xor
jns
idiv
pop
adc
mov
push
cmp
dec
pop
jno
cmpb
out
jg
neg
cmp
test
clc
bt
cmp
setg
lea
lea
movsbw
lea
pop
mov
pushf
lea
jp
push
pushl
lea
ja
call
popa
xchg
neg
std
jns
xorb
mov
mov
mov
icebp
inc
scas
xchg
adc
lcall
lock
in
rorb
and
insb
fdivl
mov
stos
inc
leave
cmp
sbb
and
into
xorb
xchg
xchg
cmp
pushf
mov
mov
lret
inc
shl
mov
inc
add
insb
push
pop
lods
enter
enter
and
pushf
cmpb
pusha
pusha
pushf
push
lea
jne
ror
pushf
xor
clc
mov
bt
add
stc
mov
call
xor
cmc
fdivr
push
loopne
out
or
push
sbb
es
jecxz
adc
daa
sub
cmp
push
push
mov
mov
push
pop
imul
lea
jb
in
rcll
std
sarb
jns
lret
iret
xchg
loop
jnp
sub
mov
jo
cmp
jne
xchg
xlat
mov
lods
rcr
in
cmp
dec
sub
fists
inc
or
addl
lods
push
xor
lods
xchg
dec
mov
lds
pop
push
push
stos
pop
ss
push
xchg
sbb
mov
mov
push
ret
ret
imul
pop
call
movb
push
call
in
insl
hlt
fdivr
mov
ret
scas
out
push
push
movsb
adc
pop
inc
lea
das
cmp
xchg
loopne
jg
bound
adc
jnp
stc
clc
push
xor
test
xor
out
insl
xor
xor
push
adc
mov
fidivrs
rorb
int3
aad
insl
xor
test
or
dec
int3
pop
aam
loope
mov
sbbl
rcl
cmp
ret
xchg
push
dec
sbb
inc
xchg
cmp
add
aad
les
xlat
je
and
shl
sub
in
and
fdivr
inc
mov
sbb
repnz
rcrb
add
jp
and
stos
rcrl
sub
cmp
push
std
adc
push
inc
nop
ret
sti
adc
xchg
and
test
aam
and
orl
mov
or
pusha
xchg
adc
les
and
insl
das
adc
sbbl
aaa
lret
outsb
lods
jno
or
jg
ret
aad
cmc
jp
pusha
test
nop
cli
repz
outsl
aaa
jae
dec
test
cmp
sub
pop
shlb
mov
sub
dec
mov
sbb
repnz
loope
stos
js
mov
push
adc
repnz
dec
es
stc
neg
shll
mov
ret
or
mov
jo
and
adc
outsb
push
into
adc
and
mov
test
mov
mov
dec
adc
repz
jmp
jmp
fcomp
mov
test
daa
add
dec
push
xchg
dec
in
push
sub
in
fidivrl
leave
ret
push
push
pop
push
test
push
pusha
xchg
insb
test
lcall
cmpsl
and
lahf
dec
into
pop
fwait
lods
sub
xorl
pop
sbb
and
inc
pushf
int
jge
into
mov
jns
pop
xchg
popf
cmpsb
jo
mov
jae
mov
out
cmp
xchg
std
sahf
and
sub
xchg
out
sub
adcl
sub
cmp
add
and
jbe
shld
xor
sub
dec
sar
mov
bsf
add
and
mov
bt
rcr
btc
add
sub
adc
lea
shr
rol
xchg
btc
mov
btc
rcr
bsr
add
not
push
mov
jmp
imul
test
cmp
add
push
lea
jne
pusha
pushf
lea
jmp
jmp
jmp
push
dec
cmpl
dec
adc
mov
sub
mov
test
inc
adc
jbe
push
stos
pop
outsb
cli
adc
insl
dec
js
mov
sbb
mov
cmp
jp
cli
arpl
jl
repz
fs
xchg
mov
sbb
sub
jmp
xchg
push
leave
and
or
fwait
test
push
lahf
leave
insl
mov
clc
outsl
jno
out
cmp
into
jae
jl
cmp
cmc
jmp
adc
jl
fisubl
push
pop
mov
fdivr
loopne
dec
xchg
inc
in
movsb
inc
insb
or
gs
movsb
std
aaa
pop
das
cmp
mov
sbb
mov
pushf
in
lds
into
inc
mov
pop
pop
test
imul
shr
cmpsl
testb
addl
mov
xchg
std
dec
nop
mov
in
sub
adc
outsl
je
xor
xor
test
mov
inc
in
ljmp
add
cmpsl
inc
adc
mov
dec
push
jmp
cwtl
fwait
loopne
mov
fisttpl
xchg
pushf
loopne
xchg
mov
sahf
fwait
loopne
xchg
popf
lahf
mov
loopne
cwtl
fwait
loopne
xchg
loopne
xchg
xchg
xchg
loopne
xchg
sahf
mov
lea
cmp
pushl
mov
jmp
cmc
jmp
lea
je
pushf
call
jns
mov
cli
xor
les
cld
mov
push
jg
hlt
jbe
or
push
inc
sahf
inc
xchg
push
mov
orb
mov
sub
rcrl
push
sbb
pop
mov
cwtl
imulb
add
mov
add
push
sub
push
clc
out
and
fmulp
je
pop
jg
mov
aad
shl
jg
cmpsw
inc
repnz
sahf
mov
push
xchg
jg
sub
fdivr
cmp
add
idivb
sbb
add
push
insb
pop
and
mov
pop
bnd
dec
enter
clc
fdiv
in
lcall
popa
popa
jge
test
dec
and
icebp
lret
mov
adc
xor
call
fbld
xorb
imul
sahf
xor
fnstsw
or
lods
add
mov
insl
and
cld
les
outsl
pop
popf
pop
dec
pop
lret
adc
fidivl
shr
std
movsl
outsb
xchg
cmp
xchg
sub
pushf
push
jl
enter
stos
ret
aam
ficoms
bound
loopne
or
out
movsl
lock
dec
add
shll
push
sbb
xlat
xor
pop
sub
outsl
mov
std
out
push
sub
leave
jno
or
orb
add
xor
idiv
adc
out
fdivr
sub
in
mov
ret
insl
or
mov
pop
das
std
inc
pop
cmp
mov
or
hlt
push
jno
mov
jmp
push
js
es
dec
xchg
sub
ret
in
push
js
cmpsb
es
outsb
fisubrs
sbb
mov
jecxz
inc
and
aas
jecxz
adc
ljmp
cmp
shl
cltd
rcll
dec
push
in
into
sub
clc
ss
xorl
test
shrl
inc
incb
mov
aas
cli
xchg
int3
xchg
xchg
cmpsb
je
ljmp
jns
lahf
push
in
inc
sub
xor
in
lock
out
or
popf
out
sub
jg
mov
sub
insb
out
fdivr
stc
inc
or
jl,pt
inc
adc
mov
insb
xor
shrb
jns
rcrb
inc
bound
ljmp
movsl
lahf
push
pusha
jnp
movsl
cltd
popa
dec
adc
xor
call
jb
or
mov
mov
add
jne
mov
cmp
jmp
fdivr
cmc
je
int
repnz
jae
push
fsubl
and
mov
leave
rorl
out
fdivr
adc
out
movsb
enter
adc
cmp
mov
gs
pop
jp
jb
popa
in
in
mov
in
jg
test
stos
pop
inc
jo
push
and
adc
mov
pushf
push
add
push
pusha
or
mov
dec
mov
mov
push
stc
add
shl
in
add
cs
adc
insb
cltd
mov
fldl
popa
pusha
stos
mov
and
jae
push
lea
jmp
call
adc
push
fdivr
decl
push
and
cmp
stos
cmp
mov
mov
inc
adc
popa
mov
jge
jmp
lock
iret
cmp
pop
push
mov
mov
cld
jno
adc
test
or
mov
stc
mov
adc
fdivrl
adc
inc
jmp
jl
subl
cmp
roll
jmp
dec
adc
aas
pop
xchg
daa
sub
std
in
imul
test
push
aaa
and
push
xor
cwtl
out
mov
xor
test
mov
mov
shrl
stc
mov
jge
pop
or
in
add
cltd
dec
xor
or
sub
cli
xor
icebp
xor
xor
push
fcoml
ret
jl
notb
rolb
in
out
inc
and
pop
sub
stos
test
push
jecxz
loopne
outsb
sub
mov
arpl
std
dec
adc
repnz
repz
insb
movsl
pop
jnp
es
push
cmp
jne
data16
call
cli
jo
xchg
scas
shrl
out
cli
scas
sti
jmp
and
jmp
out
sti
hlt
jo
sti
cmp
cmp
stc
cmp
or
outsl
push
push
sub
es
xchg
cwtl
testb
pop
or
cmpsl
push
mov
das
jecxz
dec
xchg
popa
adc
stos
xchg
sbb
fs
jb
cmp
jmp
add
jmp
std
pusha
test
xor
adc
dec
dec
inc
mov
nop
ss
add
xor
dec
arpl
cmpsl
paddsb
stc
xor
mov
insl
aad
pop
and
inc
icebp
add
add
or
scas
addl
test
sbb
sub
movsbw
pushf
movzbw
lea
mov
pop
pusha
mov
jmp
push
mov
xchg
loope
cmpsb
aas
in
test
insb
push
pop
rcrl
jmp
jo
std
mov
fwait
push
mov
and
add
lret
xchg
pop
sub
or
dec
cmc
xchg
mov
int
mov
js
adc
stos
shr
std
cmpsb
outsb
or
sbb
mov
inc
jb
movsb
inc
dec
das
popf
addr16
out
jle
in
ss
push
out
enter
mov
mov
bound
popa
ficomps
fcomi
jnp
lods
add
cmpsl
xor
pop
and
xor
stc
ja
fisubrs
stos
popf
cld
sub
mov
inc
dec
jns
sbb
lcall
and
mov
sbb
incl
sbb
aaa
add
inc
cli
int
cmpsl
insl
es
out
scas
mov
xor
stos
nop
enter
push
cmp
jmp
std
call
add
fwait
testb
roll
bound
jg
scas
out
mov
push
testb
jne
pop
inc
mov
cmp
and
push
mov
mov
jo
stos
inc
push
dec
and
insl
mov
fistpl
jmp
lret
jns
dec
adc
test
mov
stos
dec
mov
and
subb
popa
mov
lret
lods
ss
jle
loope
xor
xor
push
fmull
roll
test
test
xchg
mov
jo
sahf
xchg
dec
scas
cli
enter
mov
pop
dec
push
loope
mov
mov
mov
pusha
cmp
inc
adc
and
popf
lret
cmp
jecxz
xchg
jnp
lret
or
cmp
push
mov
lea
jne
jae
inc
xor
call
dec
mov
cmp
cmp
roll
insl
sarb
loop
out
dec
adc
out
xchg
sahf
sbb
insl
sbb
cmpsl
loopne
loope
cmpsb
fldt
jno
loope
jmp
bound
add
cli
push
jl
pushf
scas
lods
xchg
addr16
jl
mov
cmp
pop
lret
sub
push
arpl
cli
cwtl
xchg
aaa
mov
push
xchg
add
jmp
jmp
xor
ja
add
inc
and
cli
xchg
dec
add
mov
inc
lock
call
mov
jl
push
addl
pop
dec
pop
popf
adcb
int3
adc
mov
jp
insl
ret
pop
adc
xor
test
mov
outsl
fdiv
or
repz
test
xchg
repnz
jo
aas
and
fs
push
xor
or
jmp
jbe
insb
sub
in
xchg
flds
in
int
jb
sarl
out
std
jb
xchg
push
cltd
dec
jae
dec
hlt
cmpsl
jo
mov
mov
stc
sbb
lret
outsl
adc
fs
jo
mov
jmp
xor
daa
jb
movsb
adc
push
dec
test
push
cli
lds
cs
pop
sub
push
push
and
push
insl
inc
jle
sub
and
inc
aas
cmp
sbb
into
rorb
divb
add
mov
adc
aaa
inc
repnz
pop
out
std
or
ljmp
inc
adc
lock
aaa
xor
ss
sbb
jae
daa
xchg
clc
inc
in
inc
test
pop
inc
cmpsb
push
mov
mov
mov
mov
mulb
cltd
test
or
add
testb
loopne
and
aaa
mov
dec
cli
xchg
mov
je
vandps
mov
call
add
leave
pop
repz
std
js
xchg
jmp
sub
jbe
std
js
or
movl
fwait
or
xchg
add
das
mov
stos
in
bound
lret
jg
dec
adc
sbb
lret
call
or
loopne
cmpsb
adc
bswap
sub
xchg
cmp
dec
jmp
gs
jmp
call
fsubl
ficompl
xchg
cmp
addr16
and
ja
call
bt
bt
cmp
pusha
push
lea
jbe
ror
add
sub
xor
xadd
shld
mov
sete
mov
clc
stc
pusha
xchg
add
movzbw
shr
cmc
stc
neg
and
mov
bswap
add
pushl
mov
pushf
jmp
push
scas
fsub
fdivr
ficompl
insl
das
jp
lds
ds
pop
lods
movsl
adc
int
cmp
shll
cmc
fs
inc
bound
int3
mov
mov
push
mov
je
mov
lods
dec
stos
and
dec
push
inc
cmc
es
xor
cmc
lahf
add
dec
adc
fs
or
sbb
mov
stc
fmuls
int3
sbb
lcall
cld
xor
xchg
dec
ror
mov
cmp
cmp
pusha
clc
add
cmp
pusha
mov
jmp
cmp
jge
fdivr
ljmp
push
aad
aas
in
cmp
aas
sub
mov
addl
lret
repnz
cmpsl
push
dec
and
jg
clc
dec
cmp
xor
in
or
push
stos
mov
xchg
filds
xchg
rep
stc
es
notb
and
sbb
add
mov
fs
jne
cwtl
movsbw
pusha
movb
setns
bswap
setl
mov
setb
lea
pushf
mov
call
add
inc
insb
outsl
jae
push
jb
outsb
je
jb
lea
je
push
pusha
pushf
sub
pushf
cmp
cmp
mov
mov
jmp
jmp
mov
fdivr
loopne
icebp
xor
xor
loope
and
data16
pop
add
out
cltd
add
repnz
int
addr16
sub
or
out
fsubl
jae
gs
sahf
pop
pop
jmp
into
rorl
sbbb
fildll
psrlq
insl
test
adc
sbb
scas
pop
inc
out
mov
dec
adc
sub
xchg
les
lea
icebp
pop
add
out
push
std
movsl
testb
in
mov
sbb
pop
lret
daa
jecxz
std
inc
mov
inc
loopne
dec
xchg
inc
call
inc
mov
andl
sbb
bound
fldcw
decb
movsl
iret
dec
loopne
mov
cmp
mov
xchg
loope
jno
push
bound
popf
pop
sbb
aaa
lds
je
cmp
imul
mov
mov
data16
sbb
jge
pop
xchg
lcall
push
ljmp
pop
jg
pop
in
loop
sbb
push
out
rcrl
in
mov
out
push
sahf
aas
mov
scas
xchg
xadd
jge
or
aaa
insl
push
shrb
ja
xchg
push
rsm
and
test
shl
add
shlb
data16
ds
out
sub
and
fwait
jo
inc
clc
leave
ds
inc
mov
mov
mov
jnp
jo
rolb
mov
out
lret
cwtl
inc
push
shrl
ljmp
into
lods
mov
xor
jne
pop
outsl
stos
fcomps
jae
adc
cmp
add
je
bound
arpl
lahf
jbe
loop
std
aad
jmp
xlat
aam
icebp
or
pop
push
lock
pop
sbb
mov
scas
add
sbb
aas
repnz
shr
fwait
push
or
or
xor
fwait
sub
idivb
movsb
fnop
sbb
std
jbe
shlb
jbe
mov
test
sbb
movsb
mov
and
sub
cwtl
dec
ret
dec
add
mov
loop
std
push
mov
adc
popf
mov
and
xchg
fcomps
push
xlat
into
lcall
sbb
sbb
pop
mov
cmpsb
xchg
xor
mov
sub
stos
cli
test
jno
ja
shr
imul
and
push
insb
or
pushw
cmp
push
and
mov
jmp
insb
dec
xlat
xchg
inc
cmc
adc
sbb
cmc
repnz
jecxz
mov
mov
into
rcll
fdivs
mov
je
and
push
mov
in
xrelease
andl
push
test
inc
jae
xor
xor
lea
sub
mov
stc
lods
inc
pusha
and
sub
lods
lret
fldl
mov
add
ret
pop
push
imul
dec
cmc
inc
jge
ja
pop
pop
jnp
add
adc
push
mov
mov
cmp
lods
mov
lods
das
loop
jmp
lret
call
loopne
fscale
cli
jle
jp
mov
and
out
jge
jno
out
mov
mov
lock
add
loopne
std
mov
dec
jb
data16
clc
jae
fisttpll
mov
popa
and
jp
adc
ret
loope
movsb
dec
insl
mov
xchg
icebp
data16
inc
or
loope
mov
aas
pushf
sarb
jo
push
adc
and
inc
sbb
shlb
aam
lea
or
ja
mov
imul
out
push
jnp
mov
js
rcrb
insb
sub
and
fidivrl
push
outsl
cmp
orb
push
mov
sbb
popa
sbb
pop
mov
add
xchg
dec
je
test
inc
daa
hlt
xor
repnz
int
mov
test
dec
mov
mov
pop
inc
imul
xchg
cmp
dec
xchg
inc
insl
jnp
jb
jb
cwtl
loop
or
add
sub
fdivr
cmp
xlat
sub
out
fnstsw
into
or
fwait
jle
cmpxchg
mov
shlb
sbb
in
jg
pop
lcall
pop
into
and
adc
outsb
add
xchg
into
shlb
sar
xchg
outsl
mov
mov
push
test
bound
je
xchg
lret
mov
push
test
jmp
lea
jbe
rcr
shl
btc
mov
not
add
xor
mov
ror
movzbw
bsr
add
mov
je
bswap
neg
movl
cmc
or
bt
test
mov
clc
call
mov
outsb
std
sti
lds
push
jbe
rorl
push
mov
aaa
icebp
ds
fs
int3
and
cmovp
and
xchg
fdivrs
lods
decb
dec
xchg
pop
lret
xor
mov
scas
and
popf
add
std
jp
mov
jb
aas
pop
adc
iret
orl
aaa
dec
mov
mov
and
das
aas
imul
dec
push
dec
xlat
lds
pop
rclb
lods
movsl
lea
fisttpll
cmp
jns
jge
hlt
rcll
pop
out
or
std
jg
outsb
mov
and
mov
adc
mov
inc
daa
sahf
mov
outsb
sbb
inc
ror
loop
push
notb
popa
inc
jae
dec
stos
add
xchg
cmp
div
stc
movsb
insb
mov
jnp
mov
push
xchg
in
or
subl
mov
js
push
or
xor
movsl
mov
jl
push
ljmp
lods
arpl
cs
mov
mov
sbbb
adc
addb
call
in
scas
fcmovnu
fdivr
nop
fisubrs
in
pop
lods
outsl
mov
inc
pushf
call
fwait
mov
dec
adc
cmpsl
push
mov
jo
add
aaa
sub
inc
adc
and
cld
dec
xchg
pusha
or
imul
les
das
and
cwtl
xlat
sar
mov
and
aaa
insb
sbb
imul
int3
pop
repz
xor
rcr
dec
int
mov
cmp
ret
inc
add
sar
mov
in
into
push
lcall
mov
fstp
std
enter
das
pusha
subl
aad
clc
cli
xor
pop
mov
daa
add
das
inc
xchg
mov
lahf
mov
pop
neg
fdivr
shl
xchg
mov
add
sbb
icebp
pop
iret
and
add
cmp
pop
and
or
lods
bound
mov
add
fdivr
push
xchg
pop
or
fbld
lret
mov
gs
jge
and
add
adc
cmp
mov
fldln2
jae
mov
pop
sahf
insl
mov
repnz
sub
loopne
cli
stc
or
dec
ret
mov
add
je
out
scas
mov
shlb
out
stos
inc
jp
mov
mov
pop
dec
jno
jg
loop
ja
std
pop
aad
mov
or
hlt
inc
out
lods
cltd
inc
aaa
mov
repz
xchg
jl
aas
bt
add
pushf
stc
pusha
cmp
pushf
pushf
lea
jb
pusha
cmp
pushl
cmp
pusha
lea
jae
sbb
mov
shr
mov
mov
not
sub
rol
mov
pushf
jmp
pop
out
std
push
imul
pop
std
sahf
daa
xchg
inc
leave
loopne
ja
call
dec
inc
jne
fcmovu
lds
add
jb
inc
insl
dec
cmp
jnp,pn
xchg
jo
rcl
dec
mov
sbb
fwait
push
push
push
lahf
dec
mov
out
sarb
repnz
add
inc
cwtl
jnp
into
int3
scas
xor
xor
addr16
aaa
xchg
out
pop
sti
movsb
into
mov
jecxz
je
xchg
je
fcmovnu
std
lret
cwtl
popa
mov
push
push
stc
cmpsb
ret
cmp
add
jae
fbstp
jg
outsl
push
cs
mov
hlt
repnz
push
dec
inc
adc
hlt
fmul
repnz
inc
inc
push
arpl
imul
int3
dec
inc
imul
or
pop
xor
jmp
jb
xchg
mov
int3
pop
jmp
push
sub
jb
leave
push
aam
mov
xor
push
fwait
or
pop
psrlw
jae
inc
out
loop
dec
xchg
dec
cld
leave
add
andb
fbld
out
or
in
mov
repnz
lea
or
mov
clc
pop
test
imul
orb
xchg
mov
fmuls
cmp
jecxz
int
pop
mov
out
movsl
int
loopne
nop
xchg
mov
out
daa
add
in
sbb
cmp
out
cs
mov
jnp
pop
addr16
mov
clc
cmp
call
cld
and
fdivr
dec
test
push
dec
mov
jae
cmp
je
dec
pushf
jmp
mov
loopne
addr16
lahf
testl
push
xchg
das
add
pop
add
les
xor
or
into
or
xchg
scas
jp
into
rorb
pop
inc
popa
bound
into
in
fildll
jecxz
push
pop
or
xchg
inc
mov
aas
sub
aad
in
or
xchg
popf
dec
aaa
mov
cmc
scas
stc
and
mov
add
stc
inc
xchg
loop
mov
mov
jl
and
das
out
push
out
cmp
or
adc
dec
js
hlt
jnp
xchg
sarb
sahf
daa
dec
outsb
ljmp
mov
insl
dec
xchg
xchg
bound
imul
xchg
jae
scas
repnz
inc
dec
decb
xchg
scas
rorb
cmp
push
mov
aaa
push
cmp
fwait
dec
out
cmp
sbb
mov
push
mov
fcmovnb
popl
aad
jbe
int3
ss
xchg
xchg
cmp
stos
hlt
call
arpl
divb
mov
sub
out
movsl
push
jbe
ret
push
cli
push
push
rcrb
or
mov
sub
repnz
push
add
add
mov
sub
enter
shrb
arpl
push
lahf
push
sbb
mov
ret
mov
cmp
dec
jg
pop
mov
dec
stc
adc
add
sub
outsb
mov
dec
fstl
loope
daa
or
pushf
pop
fdivrl
adc
pop
dec
jb
inc
sub
cmc
in
xchg
aaa
sbb
cmp
cli
push
sub
push
adc
mov
push
and
mov
sub
in
inc
cmp
push
loopne
dec
push
aaa
int3
cwtl
jp
outsb
int
sbb
and
mov
adc
clc
add
sbb
adc
mov
inc
addr16
das
push
xor
jb
or
and
inc
jb
add
sub
fdivs
jp
push
cmp
jne
stc
lock
int3
xchg
dec
pusha
inc
in
mov
movsl
jle
inc
xor
and
daa
notb
sbb
adc
out
stos
inc
lea
or
lret
push
adc
or
fwait
ds
and
in
out
sti
int
lret
inc
adc
lret
push
add
and
xor
jmp
inc
sub
cmp
iret
call
xchg
repnz
data16
in
fisubl
cmp
in
mov
ret
adc
lock
jbe
es
mull
loopne
cmc
dec
int3
push
inc
test
dec
subl
rclb
pop
into
jmp
jo
leave
dec
adc
mov
add
mov
cs
add
push
cli
lods
movsb
stos
rclb
mov
xor
or
in
imul
or
jo
inc
repnz
add
mov
mov
xchg
fcmovb
jns
sahf
pop
test
int3
dec
mov
std
jmp
cld
enter
jns
xchg
std
inc
les
iret
cmp
adc
or
cmp
rclb
push
arpl
mov
cmp
stos
ja
es
scas
pop
dec
outsb
icebp
mov
pop
jge
sbb
rcll
inc
repnz
je
mov
outsb
mov
pop
inc
in
push
sahf
in
push
rorl
or
fs
cmp
mov
ret
lods
jp
sub
dec
dec
jo
out
ljmp
popf
out
push
push
mov
ret
loope
push
pop
pop
iret
adc
or
adc
cmpsl
arpl
lods
fistpll
mov
xchg
pop
dec
xchg
add
aad
mov
add
or
fiadds
aas
inc
sbb
andb
inc
nop
and
adc
mov
int3
jl
mov
arpl
xchg
xchg
popa
inc
in
cmp
insb
aaa
or
ret
fstpl
or
mov
cltd
jecxz
movsb
imul
loop
adc
jne
leave
shrb
nop
cld
dec
das
imul
cwtl
mov
cmp
aas
push
sub
ror
xchg
iret
scas
jne
pushf
ljmp
sub
cs
pushf
ret
xchg
pushf
mov
mov
leave
mov
sbb
sbb
pop
mov
xchg
fdivl
shl
and
stc
mov
and
daa
js
fs
roll
movsl
mov
cmp
fs
lret
push
xor
nop
push
and
out
sahf
mov
add
sti
jle
jge
xorl
out
enter
xchg
dec
fwait
addr16
dec
xlat
int3
ret
mov
sti
ds
inc
and
xchg
mov
xor
add
or
cld
cmp
shll
in
mov
fildll
mov
ljmp
lahf
and
xchg
sub
dec
lcall
or
ffree
cld
fiadds
lock
sub
imul
dec
mov
fwait
test
jns
sti
lods
push
ret
ret
inc
divl
insl
pop
or
add
xchg
inc
gs
icebp
xchg
mov
outsb
mov
cmp
sub
dec
xchg
int
push
rorl
sub
pop
arpl
insb
out
push
insl
dec
aas
xlat
cld
mov
jl
mov
adcb
pop
fsubl
or
ret
lock
push
adc
es
setb
cwtl
adc
stc
jecxz
sti
push
in
push
pop
xchg
sbb
add
mov
sbb
jnp
cs
aas
or
and
xlat
adc
add
dec
jo
ret
std
and
xor
out
rol
mov
mov
or
xchg
mov
add
sti
cld
js
orl
sub
pop
int3
add
pusha
xchg
pushf
pop
insl
push
mov
out
aad
jl
pop
and
jp
xor
xchg
pop
sub
mov
dec
pop
imul
sub
cmp
stc
sub
xchg
popa
fstp
stos
xchg
fdivp
and
push
rorl
dec
lahf
pop
lahf
pop
ljmp
div
lock
mov
mov
sub
xchg
mov
jb
push
cmp
aad
lcall
test
and
xchg
jo
es
sub
cltd
movsb
mull
sbb
leave
mov
push
out
mov
clc
in
push
pop
mov
cld
enter
pop
cs
loop
repnz
push
cmp
inc
or
inc
mov
dec
cmp
gs
movsb
gs
mov
pop
movsb
insl
xor
jmp
aad
push
adc
leave
fistpl
mov
in
jl
pop
gs
inc
cs
mov
sub
pop
addl
xor
mov
in
dec
arpl
stos
sbbl
stos
cli
xor
int
xchg
loopne
mov
or
aaa
cmp
addl
call
test
hlt
shl
jge
and
sub
mov
decb
push
mov
cmp
fisubl
movsl
add
or
fadd
test
and
pop
inc
imul
add
xchg
scas
das
dec
push
sub
mov
dec
push
mov
dec
iret
fwait
ret
adc
xchg
dec
addl
add
lret
dec
adc
and
repnz
rol
mov
fs
inc
aaa
rcl
ja
xchg
adc
fistpl
cmpsb
lock
inc
movsb
mov
loope
push
sti
repz
adc
xchg
adc
lock
jne
lods
cld
pop
mov
lock
pushf
jbe
mov
mov
aad
xor
xchg
sti
test
insb
call
inc
js
lcall
adc
rorl
pop
add
out
shlb
imull
cmpsl
jl
pop
sub
pop
jp
stc
arpl
or
add
mov
or
popa
xchg
xor
ja
cltd
clc
inc
push
mov
daa
sahf
cmpb
pusha
add
or
aam
rorb
mov
ljmp
out
mov
loopne
cmpsb
test
out
ss
cmpsb
addb
adc
sbb
fmuls
xor
imul
out
das
pop
aad
and
xor
jg
lods
test
iret
repnz
lcall
bound
push
lock
int3
and
mov
and
mulps
pop
mov
push
ljmp
cmp
cmpsb
ficomps
mov
or
pop
adc
jae
stc
pop
in
cmp
pushl
adc
pop
and
jmp
mov
das
cmp
int3
aas
or
jecxz
xchg
test
fiadds
in
loop
call
add
mov
jge
rolb
fs
and
repz
pop
cmpsl
test
arpl
jno
adc
adc
test
pop
aaa
adc
mov
test
mov
arpl
push
lahf
mov
repz
inc
mov
cmp
imull
or
mov
lret
jp
adc
cmp
movsb
jo
insb
sbb
test
sahf
and
and
imul
repz
push
adc
out
xor
popf
ljmp
cwtl
jns
add
push
cs
mov
sbb
adc
xchg
ja
lock
jmp
shrl
fs
xor
lret
mov
push
popf
cmp
cmp
push
out
fcomi
stc
sbb
jo
mov
ss
sti
mov
push
jmp
and
mov
sub
addr16
adc
jae
popf
xchg
and
fwait
push
daa
add
lret
inc
xchg
std
inc
sub
fdivl
mov
cmp
jns
sub
out
data16
fstpl
jp
scas
loope
mov
inc
mov
popl
or
xor
sub
lret
push
pop
mov
popa
jae,pn
adc
mov
pop
push
and
and
pop
mov
pop
daa
mov
dec
jns
mov
lock
mov
cmp
aad
sbb
lret
mov
and
adc
lock
cld
in
and
dec
shlb
iret
pushf
data16
sub
or
mov
loop
cwtl
into
push
xor
sub
jmp
repnz
scas
jbe
dec
cmp
adc
mov
in
imul
mov
push
pop
sub
pop
mov
scas
divb
mov
outsb
in
pop
fsubl
or
ret
clc
call
rcrl
dec
dec
mov
mov
mov
xchg
xchg
subb
and
fmuls
es
and
scas
dec
ss
xchg
lods
outsl
add
jno
das
std
dec
adc
lds
cmp
pop
out
dec
push
lret
lahf
icebp
mov
inc
negb
cmova
lock
xchg
out
imul
aaa
and
mov
sub
and
sbb
cs
fdivrl
fwait
gs
lock
jo
rorb
loop
fmul
cmp
stc
xchg
xor
dec
xchg
scas
fidivl
xchg
pop
dec
pusha
jge
in
aas
ret
lea
cmp
pop
cltd
test
faddp
iret
fldt
xchg
sub
push
adc
cli
sub
and
mov
iret
mov
mov
int3
mov
aaa
sbb
mov
mov
in
fidivs
mov
add
adcb
mov
addr16
outsb
pop
or
shrl
ja
jge
sbbl
sahf
cmpsl
push
adc
imul
sahf
gs
dec
xor
dec
data16
in
jle
or
jo
out
sub
sbb
test
stc
sbb
xchg
xchg
sbb
jne
int
xchg
cld
jg
jb
out
leave
ljmp
shll
lret
stos
clc
in
loope
loopne
jne
cmp
sub
es
mov
mov
cmp
fnstcw
or
xchg
ja
in
rcrb
cmpsl
cmc
ror
aam
jae
push
or
pop
pop
pop
aad
ret
mov
loop
stos
mov
xchg
mov
iret
fldt
xchg
push
stos
cmp
repnz
insl
add
mov
and
pop
icebp
lcall
scas
push
xchg
ss
lahf
add
add
into
mov
cmp
or
mov
cld
pushf
mov
ljmp
test
or
cld
enter
fbld
add
sub
pushf
pop
mov
sbb
mov
inc
and
or
lods
adc
pop
dec
stos
sub
adc
mov
test
adc
jecxz
ja
iret
sub
pop
int3
insl
inc
psubw
sub
mov
inc
es
hlt
add
mov
xchg
testb
inc
test
dec
dec
xchg
mov
push
xlat
adc
negb
cwtl
mov
xchg
sarb
ljmp
scas
add
data16
sbb
fimull
cmp
leave
dec
sbb
es
mov
mov
ja
and
inc
mov
out
xor
test
sbb
je
xchg
cmp
push
decb
or
mov
inc
in
sahf
push
loop
std
lds
cmp
lds
or
rolb
std
gs
int
pop
xor
mov
sbb
push
in
inc
test
outsb
cmp
out
lahf
leave
xchg
pop
xchg
ss
mov
push
dec
dec
push
lahf
pop
jmp
add
pop
sti
movsl
jne
test
stc
into
ss
sbb
movsl
scas
stc
xor
nop
test
sahf
push
int3
addl
mov
mov
repnz
addr16
in
push
clc
ret
mov
push
shll
fucomip
mov
rcr
or
inc
or
mov
jnp
mov
aaa
adc
xchg
sbb
roll
adc
lods
xchg
or
pop
bound
andl
les
mov
cmp
addr16
pop
lods
xchg
mov
sbbl
push
mov
adc
pop
mov
ret
shrl
fbld
mov
popf
cmpsl
sub
pusha
jns
push
stc
push
rorb
mov
pop
insl
dec
lock
shl
and
push
iret
fwait
push
das
jno
mov
cltd
hlt
push
idivl
xor
test
mov
cltd
jecxz
lahf
rclb
ss
out
mov
std
xchg
dec
xor
sub
inc
mov
aaa
jl
jbe
push
xchg
lcall
sub
aad
leave
out
jmp
js
xor
or
xor
xchg
add
jl
aam
add
sub
jno
xchg
jle
xchg
sar
out
and
clc
mov
mov
push
clc
cltd
jle
rorl
aas
pop
sub
dec
je
fwait
rorl
jmp
sub
mov
push
outsl
pop
and
mov
daa
cmp
mov
outsb
push
hlt
push
push
testb
subl
dec
push
add
repnz
loopne
out
inc
cmpsb
insl
mov
lods
xchg
sbb
test
and
orb
lret
repnz
cwtl
rcrb
dec
push
mov
das
mov
mov
jle
mov
mov
mov
in
stos
or
lcall
jne
les
jne
les
sub
mov
fsts
ja
hlt
lea
jg
xchg
xor
iret
das
jge
fwait
mov
pop
jg
pop
sub
movsl
mov
ds
xchg
addr16
sub
into
popf
xchg
repnz
imul
stos
faddp
ret
xchg
leave
pusha
lret
int3
jg
insl
testl
arpl
adc
lods
movsl
out
sbb
jp
call
aaa
test
add
test
xchg
pusha
inc
sub
cwtl
out
add
pop
daa
lds
jbe
icebp
adc
das
ret
xorl
insl
jo
orl
push
cmp
xorb
insb
arpl
out
in
pop
jg
dec
in
std
leave
sub
or
jmp
sbb
arpl
ret
into
mov
add
fwait
push
fstpl
xchg
in
cltd
scas
and
fnstsw
jl
sub
cs
movsb
or
add
lock
xchg
loopne
inc
inc
mov
pop
gs
add
clc
mov
outsl
mov
xchg
pop
fwait
cmp
xor
mov
xchg
sub
mov
ljmp
out
aam
jns
lods
lods
push
push
sbb
mov
sti
negl
push
dec
jb
add
ficomps
inc
jne
mov
inc
fcompl
mov
stos
inc
push
stos
and
pop
and
jecxz
push
sbb
repnz
add
sti
fwait
shlb
aad
xchg
ret
and
sbbb
cmpl
cmc
fildll
dec
int3
fmul
rorb
test
cwtl
sbb
out
xchg
xor
inc
jp
cwtl
dec
scas
jge
xchg
mov
rorb
mov
adc
mov
out
mov
jo
mov
enter
or
push
rcll
stos
fwait
xor
es
pand
add
insb
push
mov
xor
mov
cmp
jae,pn
pop
loope
pop
jno
rep
repnz
jb
sbb
or
mov
adc
and
xchg
cmpsb
insl
mov
inc
fisubrs
cmc
mov
jl
std
fmulp
es
lds
lret
sbb
test
aad
push
std
fistpll
jb
fstpt
cmp
xchg
mov
cwtl
cmp
in
inc
loopne
lahf
mov
adc
loope
push
sbb
sbbl
mov
lods
dec
bound
daa
enter
mov
lcall
cmp
call
ds
es
jge
rcrb
xor
popf
aad
test
push
icebp
mov
stc
in
aaa
push
mov
fwait
movsl
loope
into
xchg
sub
stos
hlt
js
dec
cli
test
cli
daa
repz
fisubrl
rolb
les
sub
pushf
lret
mov
in
mov
and
sbb
loopne
dec
sbb
fildl
dec
rcrl
call
and
in
jecxz
ret
adc
jecxz
andb
adc
cmc
into
push
xchg
clc
adc
push
cmpsb
push
inc
das
stc
mov
mov
je
pop
xchg
orb
mov
inc
pop
xchg
pop
cmp
mov
inc
ret
frstor
jno
cmp
mov
popa
mov
xchg
popa
sbb
js
div
leave
sbb
clc
push
scas
scas
push
bound
xchg
mov
sahf
and
adc
mov
pop
push
mov
xchg
test
sub
cmp
xor
sbb
or
je
lcall
adc
push
aaa
add
test
cmp
je
inc
addr16
ljmp
mov
push
mov
xchg
je
ret
repz
push
mov
stc
test
enter
adc
clc
lds
idivb
and
pop
insl
inc
or
mov
sbb
sub
mov
dec
sub
mov
insl
lahf
imul
dec
add
dec
outsl
lret
jmp
repz
adc
dec
push
arpl
pop
sarl
and
mov
cwtl
inc
mov
fstps
cwtl
insb
mov
or
jl
cmp
sub
rcrl
push
mov
addr16
in
jle
jecxz
ret
push
subb
fwait
mov
mov
mov
xchg
cmp
movsl
xchg
rcl
push
pop
cmp
xchg
sub
push
sub
add
lcall
mov
stos
test
jmp
push
push
shr
andl
dec
popa
jecxz
lock
aam
add
mov
and
xor
cld
enter
into
xchg
aaa
adc
aaa
and
push
iret
fwait
pop
fwait
cmp
xchg
jl
or
mov
or
add
push
jmp
js
imul
push
pushf
aam
xchg
mov
out
mov
cmp
or
push
fists
pop
push
lret
push
test
lea
and
outsl
pop
and
inc
fidivrl
andl
mov
sub
outsb
test
pop
js
push
insl
into
loopne
in
aam
jno
cwtl
mov
xchg
mov
movsl
sahf
popa
jp
mov
rcrb
dec
cs
mov
cld
add
pop
jge
fnsave
push
xchg
divb
into
and
test
mov
sub
in
dec
test
pop
movsb
insl
out
push
loopne
and
pop
int3
cwtl
pop
bound
dec
mov
dec
int3
push
stos
push
cmc
jp
push
loopne
cmpsb
xchg
inc
cmp
add
daa
jne
cmc
xorb
inc
sbb
int3
cltd
loop
pop
push
pop
idivl
js
xorl
cmp
jge
pop
cltd
inc
sysexit
fcoms
jmp
or
add
mov
rcrb
enter
repnz
sub
lret
ret
push
cmp
add
sti
mov
lret
pop
cmp
fiadds
out
dec
arpl
push
cmp
sub
xor
mov
int3
and
sbb
mov
jmp
jnp
adc
adc
fbld
enter
scas
mov
mov
cwtl
dec
add
inc
aaa
out
mov
xchg
mov
in
fdivr
orb
je
mov
or
dec
outsl
test
outsb
xchg
pop
xor
lods
and
and
and
popf
dec
jl
and
cmp
pop
dec
dec
or
pop
add
subb
addr16
or
fnstsw
lcall
jae
mov
jecxz
cmc
outsl
xor
and
ret
das
jno
mov
pop
push
mov
sbb
fldl
dec
mov
push
push
mov
mov
cmp
test
cmp
rcr
mov
jmp
cmpsl
repz
rcr
dec
sbb
loopne
ret
jp
dec
and
ret
and
or
sub
cmp
movsl
lea
push
inc
push
inc
mov
push
repz
jmp
mov
insb
fbstp
dec
xorb
push
dec
add
int
lods
pop
push
add
mov
cmp
imul
xchg
pop
fildll
mov
ret
ss
mov
xchg
arpl
xor
shlb
ret
and
mov
sahf
fwait
pop
cmp
cmpl
and
ja
inc
outsb
leave
outsb
imul
push
xchg
xor
and
mov
mov
aaa
or
push
jne
push
push
pushf
lea
jne
jmp
add
inc
gs
outsl
fs
gs
imul
add
and
fdivr
sbb
stos
mov
cmpsb
cmc
xor
es
push
repz
arpl
hlt
cvtps2pi
adc
push
pop
sub
popa
fisttpl
inc
movsl
adc
paddsw
fiaddl
cmpsl
outsb
jb
adcl
adc
or
popf
push
movsl
das
fdivs
push
mov
shlb
pop
rcl
mov
mov
inc
icebp
sahf
loopne
stc
and
mov
jnp
mov
mov
repz
test
mov
push
pusha
cmp
cmpb
push
movb
mov
lea
jne
sets
add
btr
call
xchg
xor
pushf
gs
mov
inc
insb
scas
or
jno
push
pushf
push
fdivrl
xchg
xchg
aaa
adc
test
or
scas
sbb
enter
inc
and
sysexit
xchg
out
sbb
pop
stos
inc
inc
xchg
aam
fldenv
push
sbb
adc
jno
loop
test
cmp
mov
mov
push
pop
lock
into
jb
sahf
rcrl
mov
push
pop
cld
push
dec
xchg
imull
shrl
xor
cs
insb
add
cmp
ja
cmc
sub
cmp
mov
xchg
add
or
sti
jno
or
shll
ret
hlt
sub
cmc
mov
std
pop
mov
lahf
cmp
mov
hlt
mulb
mov
ja
sbb
xor
test
mov
outsl
mov
loope
loopne
in
faddl
add
call
xchg
lret
std
out
lock
movsb
push
pop
mov
std
push
add
jne
sti
mov
jp
push
lcall
push
jecxz
ds
sbb
dec
call
rclb
sbb
jno
push
es
daa
add
mov
cmpsl
ss
jne
xor
dec
fcomps
pop
outsb
out
popf
xor
je
ret
dec
push
push
sbb
xor
mov
sbb
mov
add
not
pop
dec
mov
add
push
or
stos
adc
sub
push
push
cmp
xor
mov
aaa
icebp
daa
inc
push
jge
pushl
sahf
addr16
subb
cmp
sbb
cmp
cmp
aas
pop
test
xchg
aaa
xor
push
cmpsb
inc
xor
push
enter
pusha
int3
mov
sti
movsl
fildll
lods
mov
je
or
scas
or
xor
xor
lret
movsl
test
fs
cltd
mov
adc
add
mov
das
movsb
jb
adc
jnp
fs
sbb
mov
imul
xor
jmp
stc
movsb
inc
shll
jbe
ds
int3
mov
or
cwtl
rorb
mov
xchg
inc
sbb
lock
cmp
imul
rcrl
jmp
call
push
sbb
cmp
imull
inc
mulb
jmp
lahf
xchg
psadbw
xchg
movsl
ret
pushf
imul
insl
mov
pop
lcall
loop
dec
inc
outsb
sbb
sbb
fucomp
or
push
fimuls
push
cmp
add
addb
add
mov
mov
adc
pop
sub
cmp
xor
sar
pusha
sub
loop
mov
pushf
pushl
ret
call
insl
cmp
mov
xchg
pop
jns
bound
out
push
or
jns
jns
inc
dec
mov
outsl
lcall
push
pop
mov
lds
add
xchg
xchg
push
dec
hlt
mov
shlb
fisttpll
mov
lds
push
add
sbb
fidivrs
sbb
mov
pop
push
adc
lret
shll
scas
lahf
mov
xchg
dec
loop
xor
push
scas
repnz
test
subb
and
movsl
ret
jecxz
test
es
xchg
pusha
mov
mov
pushf
pushf
pusha
movw
pushl
ret
stc
test
mov
push
pushl
pusha
lea
je
push
clc
push
cmp
sub
pusha
stc
push
stc
cmp
push
jmp
pushf
lea
jne
push
shl
shl
mov
cmp
inc
sar
rol
sub
btr
lea
pusha
sub
test
cmc
bt
pusha
pushl
popl
jmp
cmp
movzbw
pushf
call
and
fdivr
pop
push
jo
lret
or
push
cmpl
adc
fnstsw
adc
and
cmc
push
and
xchg
lock
adcl
or
or
adc
leave
movsl
mov
repnz
xor
pop
ret
ss
ja
mov
pop
loop
shr
int
mov
pop
add
fsubr
and
cmp
std
imul
insb
mov
push
jnp
mov
call
in
xlat
in
pop
sub
sar
cld
hlt
inc
andb
adc
mov
fsubrl
imul
jns
mov
fcoms
dec
sbb
inc
lret
mov
frstor
ljmp
push
push
ret
mov
outsb
stc
fcoml
mov
dec
jb
cwtl
adc
ror
std
pop
int3
movl
mov
mov
mov
pushf
pushf
pushl
ret
scas
fnsave
fdivr
repz
nop
mov
inc
jno
popw
mov
or
xchg
test
xor
push
push
push
lret
sub
es
into
sti
xchg
out
mov
xchg
pop
push
jp
pusha
jbe,pn
insl
xor
lds
xchg
push
dec
adc
mov
mov
stc
pop
pop
cmp
lods
jl
cwtl
mov
sub
xor
jmp
lock
push
xchg
xor
push
add
adc
mov
daa
insb
xchg
fdivr
jecxz
add
push
repnz
fldcw
aaa
lods
and
xadd
cmp
call
fcoms
push
inc
lods
push
add
lret
mov
imul
das
lods
fstpl
push
sbb
fisttpll
in
xchg
add
lcall
jmp
mov
xor
fmuls
stos
repnz
add
bound
stos
adc
rcrl
push
fdivr
dec
sbb
and
push
push
cltd
loope
xor
mov
add
lret
push
cmc
inc
add
imul
dec
enter
out
or
mov
push
mov
mov
aam
sub
push
and
dec
mov
mov
movsl
andl
or
cmp
mov
push
push
xchg
push
jp
mov
pop
or
dec
es
fadd
push
push
sbb
add
or
jmp
fsubs
cmp
incb
movsb
jo
pop
jecxz
popa
ja
dec
cmp
inc
push
rclb
fdivr
in
jmp
pop
lods
outsb
lcall
stos
roll
data16
inc
xor
xchg
pop
arpl
adc
pop
pop
data16
xor
pop
clc
aaa
add
dec
pop
daa
lock
ja
shrb
mov
out
shrb
xor
cmp
scas
push
test
scas
nop
xor
dec
imull
xchg
mov
jmp
pop
mov
inc
adc
adc
jl
cmpsl
pop
and
pop
or
fwait
out
outsb
mov
aaa
fdivr
mov
adc
jge
arpl
xchg
mov
push
testl
test
dec
cmp
stc
mov
mov
inc
xor
sub
sub
fdivr
iret
mov
test
adc
fptan
loop
dec
xchg
fsubrs
test
mov
sub
push
and
out
aad
hlt
out
ret
pop
xor
jb
dec
adc
pop
xchg
loope
ja
scas
test
sbb
mov
push
jecxz
sbbb
movsl
into
jle
mov
lfs
shll
add
and
mov
jbe
adc
aam
movsl
or
xor
clc
int
lock
aam
ja
cmp
mov
push
push
adc
arpl
cs
test
or
test
mov
shr
int3
push
repz
lods
xor
jge
repnz
pushf
pushf
mov
lea
jmp
dec
fwait
divl
fdivr
je
aam
das
dec
mov
adc
push
aas
jb
aam
int3
adc
and
xchg
ja
push
push
lds
cs
in
inc
pop
sub
in
mov
mov
jo
test
xor
sbb
push
pusha
push
and
mov
pop
gs
adc
lahf
pop
and
and
dec
loop
mov
test
sbb
xchg
inc
subl
inc
mov
pop
xor
fs
jae
or
btc
rcl
sbb
mov
cmp
mov
pusha
movzbw
mov
clc
bt
xor
pusha
repnz
call
pushf
lea
ja
jmp
call
lea
jne
sub
rcr
mov
test
clc
clc
add
pushf
jmp
stc
xor
pushf
cmp
repnz
call
cmpsb
shlb
imul
add
sahf
and
jle
pop
add
adc
daa
add
jo
dec
out
dec
jb
iret
jo
int
inc
es
pop
mov
adc
fsubs
adc
push
jb
mov
mov
xchg
std
xchg
adc
adc
fldcw
mov
mov
adc
je
pop
stc
int
scas
mov
int
mov
mov
repnz
insl
cs
mov
in
dec
add
dec
pop
mov
stos
push
inc
cmp
stos
shlb
test
dec
inc
js
inc
dec
jmp
dec
inc
imul
mov
mov
dec
rorl
dec
pop
fidivrs
notl
mov
adc
movsl
and
sub
pop
pop
pop
in
sub
sbb
test
stos
sub
popf
xchg
bound
pusha
cmc
jmp
les
outsb
cmp
push
xor
add
add
pop
lods
cld
and
sub
add
mov
daa
push
dec
jb
mov
ret
push
fs
and
cmpsl
sub
in
cmpsb
mov
xchg
fists
xor
and
lods
push
daa
add
out
adc
insl
das
jmp
rorb
mov
mov
fsub
ljmp
out
icebp
sbb
dec
fldenv
fwait
mov
test
mov
push
mov
clc
adc
std
push
push
cmp
int
ret
jg
mov
inc
dec
movsl
inc
cld
jg
mov
daa
add
cli
and
leave
mov
dec
jbe
dec
into
lods
pop
cmp
pop
lahf
jne
int
cld
test
dec
inc
push
dec
ror
lods
data16
mov
pop
pop
popf
imul
dec
push
addr16
add
push
test
and
pop
aam
pop
popf
cld
lcall
jg
aad
mov
mov
add
icebp
clc
push
cwtl
fdivr
xchg
jnp
sbb
or
jb
es
mov
pop
outsb
xor
pop
adc
add
fisubl
xchg
rclb
pushf
and
fwait
jmp
mov
out
jbe
xor
stc
xor
xchg
daa
cmp
ret
xchg
adc
in
cmp
cs
pop
push
adc
inc
test
addr16
movhps
or
loop
cmpsl
das
sbb
lods
xchg
inc
pop
or
shll
or
adcl
adc
xchg
sub
fcomip
xor
nop
pop
cmp
lea
adc
fdivr
push
mov
scas
ficompl
cmc
jo
and
insl
mov
add
push
inc
mov
not
xor
fcmovnbe
sbb
push
and
fildl
mov
in
sub
fcomi
mov
sbb
fwait
and
stc
fiadds
js
repnz
lret
int
sahf
ret
jno
xchg
std
sub
mov
sbb
dec
sub
and
and
je
test
cmp
push
sub
cmc
cmc
test
cmp
pushf
movb
lea
ja
pusha
stc
imul
clc
pushl
clc
bt
add
mov
pushf
movl
push
lea
jmp
mov
std
or
cmp
add
cmpsb
imul
lock
pop
dec
sub
sbb
fistl
clc
jmp
dec
push
xlat
and
sbb
jle
mov
ss
xor
iret
fwait
ret
mov
ja
jp
sti
outsl
ds
add
pop
jno
loop
jno
incb
adc
add
add
push
leave
add
outsl
or
sub
gs
rclb
popa
and
sub
pop
dec
mov
jge
fsubrs
fdivr
xchg
cmc
mov
inc
out
sub
xor
in
rcr
jle
rolb
pop
pop
jbe
jno
sub
mov
inc
push
xor
std
flds
sbb
popf
mov
jbe
push
inc
inc
pop
mov
jge
daa
add
sbbl
dec
add
fsubrl
cmp
fdivr
bnd
fbstp
imul
jno
pop
mov
into
daa
add
movl
xor
adc
xchg
jne
xchg
test
lods
adc
lcall
mov
lds
pop
mov
mov
clc
dec
cmp
jle
mov
loopne
push
xor
pop
insl
sub
mov
leave
js
shlb
mov
data16
test
xlat
call
lcall
mov
jo
decl
mov
decl
test
movb
jmp
xchg
xor
std
rcrb
xlat
cld
xor
xor
rcrl
out
fistl
ret
movsb
fimuls
fldenv
push
mov
rcrl
pushf
jmp
inc
outsb
call
iret
cld
sbb
lds
inc
cld
add
jnp
in
mov
inc
out
lods
xchg
cmc
ja
idivb
mov
fstpl
mov
or
or
ja
inc
mov
push
outsl
xchg
iret
jae
inc
xchg
ret
dec
lods
jne
sub
int3
add
add
fdivr
popa
testl
lcall
and
cmpsl
je
in
stos
inc
xchg
push
out
push
push
push
shlb
or
nop
inc
push
jmp
pop
or
das
inc
push
fimuls
adc
jg
cmpsl
das
js
sbb
bound
mov
cld
jp
pop
sarb
xor
dec
jmp
jmp
insl
mov
bound
jg
ret
fs
jbe
pusha
bsr
sub
rcl
shrd
mov
lea
not
stc
mov
cmc
push
movsbw
xor
add
rcr
clc
shld
shr
add
pushf
mov
jmp
test
stc
neg
clc
mov
cmp
cmp
bswap
lea
movzbw
cwtl
lea
jno
lahf
pop
push
movb
push
movw
lea
ja
push
jmp
bound
cmp
das
push
xchg
shlb
pop
ret
ja
inc
cwtl
mov
adc
or
nop
testl
ret
dec
icebp
mov
fildll
pop
sub
xor
jns
inc
push
fisubs
loope
stos
jno
in
add
bound
lds
int
xchg
bound
mov
imul
imul
mov
xchg
dec
out
jne
pop
cmpsb
hlt
sub
xchg
mov
xor
pop
inc
pop
dec
into
cs
movsb
outsb
mov
scas
dec
jns
out
out
add
cmp
sub
or
popf
dec
lss
sbb
int
dec
push
bound
dec
push
into
push
insl
gs
mov
mov
rcrb
orl
lahf
adc
dec
test
das
jno
sbbb
pop
fnstsw
mov
aam
and
push
subb
push
test
stc
add
or
add
bt
stc
add
push
pushf
mov
lea
jmp
xor
fdivr
rcrl
dec
mov
pop
stc
test
mov
pop
cmpsb
test
mov
fisubl
loopne
jge
jno
inc
fwait
dec
arpl
loopne
daa
popfw
std
jge
jg
cmp
mov
jge
jecxz
and
inc
mov
daa
scas
jge
sarl
ss
push
sti
ret
ret
cmp
adcb
pushl
dec
out
imul
sub
and
jno
in
ret
inc
das
jp
adc
sub
dec
cli
xor
aas
addb
dec
fxch
imul
mov
lret
or
imul
push
ret
pop
mov
jns
lret
jbe
inc
add
lea
xor
dec
cmp
inc
cmp
cmp
enter
into
adc
and
in
cltd
popf
xchg
mov
fisttpl
sub
mov
insl
shrl
std
lds
stc
pushf
cmp
pushf
push
pusha
push
lea
ja
clc
pushf
push
imul
call
add
sub
std
fldenv
lcall
cld
mov
sbb
inc
jle
sahf
aad
mov
jge
enter
in
leave
adc
popa
push
adcb
loop
cld
inc
jecxz
and
or
mov
pop
mov
or
add
pop
outsb
repnz
add
lods
mov
filds
push
sub
sub
ljmp
repz
ds
pop
and
adc
stos
pop
pushf
mov
pusha
cmpb
call
mov
add
movw
movb
lea
jmp
push
lock
sub
std
movsb
insl
adc
lea
sub
xor
push
into
out
iret
cld
aam
add
imul
out
cli
dec
push
adc
ret
popa
xchg
mov
jne
xor
xor
mov
pop
aas
xchg
std
push
xor
aad
add
adc
cltd
sete
pusha
daa
xorl
sub
std
push
loop
incb
ja
js
jae
aam
aas
adc
cmpsl
hlt
aad
add
mov
push
loop
add
pusha
and
dec
mov
cmpsl
push
mov
ss
sti
pop
xor
mov
in
mov
bound
xchg
inc
lret
mov
jno
data16
push
enter
or
ss
add
add
sub
mov
or
lret
jno
mov
leave
addr16
and
cld
fdivr
lock
fwait
int
push
fs
outsb
sub
fisttpl
sbb
push
mov
shrb
fdivr
xchg
pop
adc
call
mov
loop
bnd
push
add
outsb
adc
add
test
mov
fsubl
cmp
and
adc
lea
dec
insl
arpl
fcmove
sbb
cmpsb
pushf
mov
out
mov
mov
sub
out
inc
cmp
ret
push
out
icebp
jno
fwait
xor
mov
mov
mov
pop
dec
cmpb
aam
xor
out
int
lock
insb
sub
std
stc
inc
jl
cmp
pop
mov
mov
cmp
cs
sub
add
xchg
adc
jne
scas
pop
cmp
leave
icebp
inc
out
paddusw
xor
pop
bound
adcb
xlat
iret
dec
push
xlat
lahf
inc
inc
jno
inc
pop
sbb
jmp
cmpsl
lcall
sbb
inc
xor
cs
mov
sub
div
mov
mov
add
outsb
loop
mov
add
test
mov
les
mov
movsl
jae
mov
adc
std
sti
inc
in
xor
sbb
clc
and
mov
mov
bound
sti
adc
fidivs
cmpsl
into
loop
pop
sbb
pop
out
cmp
adcl
jge
movsl
insl
mov
es
push
lds
xor
cmp
push
mov
stos
jp
cltd
jl
cmp
cltd
ror
push
ret
subps
sbb
dec
pop
push
repz
leave
movb
pushf
pushl
lea
jne
sub
or
sub
bsr
dec
lahf
mov
cmc
stc
add
rcl
add
seto
ror
clc
ror
mov
cmp
test
cmp
test
pusha
pushf
push
push
lea
je
test
pusha
cmp
sub
sub
jo
cmp
test
cmp
call
emms
xchg
sub
std
fsubs
sub
pop
push
mov
bound
out
les
jb
pop
scas
mov
mov
inc
pop
and
into
cmp
xchg
jbe
pop
into
inc
in
out
mov
xchg
adc
es
mov
cmp
push
xor
scas
loopne
xor
dec
pushf
mov
add
jg
cld
mov
mov
sub
orl
sbb
arpl
inc
jb
add
push
xor
stc
xchg
mov
and
pop
pop
leave
filds
pop
vandnps
dec
arpl
in
hlt
and
clc
aad
insb
dec
adc
imul
shrb
outsb
pop
or
or
imul
push
add
pop
and
bswap
mov
jae
lea
outsl
jmp
sahf
lds
pop
push
jge
pop
xchg
inc
test
dec
push
inc
inc
add
popf
dec
cmp
fs
add
pushf
pushl
mov
movb
lea
jmp
out
pop
mov
fdivr
fisubrs
pop
andnps
out
negl
out
push
popf
cmpl
add
push
push
bound
inc
cmp
iret
js
jg
test
adc
mov
iret
por
test
test
sub
fldl
inc
inc
inc
shrl
fwait
xor
inc
shlb
push
jo
out
jmp
in
xchg
pop
jnp
jbe
jnp
pusha
clc
call
inc
scas
jnp
call
jb
or
and
into
cmc
inc
je
and
jmp
rorl
jb
cmp
mov
fxch
jb
aam
lods
aam
movzbl
or
or
bound
mov
cli
repz
lods
dec
stc
outsb
out
push
pop
insl
inc
mov
and
and
sbbl
mov
ret
dec
pop
fisubs
movups
push
or
imul
imul
or
cltd
dec
jno
mov
fdivr
fisubs
into
or
xchg
scas
int
xor
lds
repz
leave
popf
cmp
aam
rorb
lods
mull
or
mov
jne
xchg
test
out
aaa
loope
push
xor
imul
aaa
test
jp
stos
pusha
push
sbb
xor
stc
shll
pop
movsb
nop
mov
arpl
test
roll
mov
iret
pop
cld
jne
ret
mov
mov
arpl
push
xchg
mov
inc
mov
cmp
std
cmpsb
jo
into
adc
or
pop
pop
leave
add
in
pop
and
aaa
fisubl
mov
pop
xor
or
hlt
lock
dec
fwait
push
jo
ficoml
dec
mov
test
clc
sbb
into
out
into
add
dec
pop
and
sbb
and
mov
pusha
sub
in
adc
inc
fisttpl
or
std
sub
int
push
sub
stos
call
or
cmp
fiaddl
jge
or
jp
jmp
rcrl
sub
or
leave
adc
fstp
fwait
outsb
mov
jp
mov
sbb
lods
push
mov
aad
or
mov
mov
rcl
ss
jmp
mov
jb
jae
loopne
scas
dec
int
xor
adc
xchg
lcall
cltd
movaps
addr16
rol
push
lahf
test
cmp
lock
cmc
mov
es
or
adc
popa
or
inc
adc
inc
cli
push
fdivr
jbe
nop
fsubrl
fildl
cmp
lcall
xchg
loopne
shlb
mov
out
pop
or
rcrl
test
dec
push
mov
ljmp
ret
sti
inc
sub
mov
jge
xchg
pusha
mov
repz
xchg
and
out
pop
dec
pop
inc
adc
push
stos
in
rol
mov
and
push
and
pop
cmp
cmpsl
mov
mov
into
mov
adc
daa
fadds
sub
dec
sbb
jae
sbb
lcall
rcrb
fdivl
and
std
xor
push
push
js
int3
jmp
pop
out
divb
sub
mov
fisubrl
push
sbb
xor
push
rcrl
insb
dec
inc
addr16
push
loopne
sub
rcrl
and
xor
inc
xchg
fwait
int
cmpsb
jne
xchg
mov
inc
xor
xor
and
add
push
and
lods
dec
jnp
push
and
mov
sbb
sti
leave
shll
pop
sub
fdivr
jg
imul
lea
xor
inc
pop
fsubl
add
push
cld
aam
ret
add
sub
mov
clc
les
daa
xchg
mov
aad
add
test
add
mull
mov
mov
push
or
in
sub
xchg
mov
jl
jl
and
lods
adc
adc
test
push
inc
push
cmc
fwait
lahf
xchg
cld
mov
std
aaa
mov
or
sub
or
add
insb
jl
mov
movl
add
dec
pop
daa
jns
push
mov
pop
push
jmp
pop
or
mov
cmp
movsb
lock
aam
xchg
xchg
add
dec
cld
lock
push
push
clc
in
mov
scas
jle
adc
fbstp
or
cli
or
xor
std
cwtl
out
stos
add
dec
adc
and
sti
add
aad
sub
mov
pushl
mov
xchg
daa
fs
inc
mov
jb
sbb
inc
mov
cmp
fdivr
mov
popa
inc
jle
bound
inc
mov
pop
pusha
insb
pop
dec
adc
jmp
cmpsl
push
xchg
addb
cltd
or
clc
stc
das
pop
test
inc
mov
xor
inc
adc
sbb
jmp
mov
test
mov
sub
repnz
dec
jns
sub
scas
lods
dec
cs
pop
add
mov
push
inc
or
jns
call
ror
cmc
pushf
add
lea
lea
mov
lea
push
push
mov
pushf
setnp
lods
pushf
rol
lea
jne
pusha
mov
not
call
test
test
fdivr
loope
outsl
push
inc
data16
arpl
add
mov
dec
sub
shlb
lcall
daa
add
xchg
inc
xchg
callw
pusha
xor
test
insl
xor
xchg
std
pop
xor
add
dec
ret
and
push
push
btr
addl
fbld
dec
push
test
in
bswap
lea
jmp
neg
bt
jmp
lahf
movb
pushf
setl
call
pusha
jmp
sbb
and
std
xchg
dec
push
dec
or
mov
leave
sbb
ja
outsl
popf
xchg
pop
xor
lods
and
pop
decl
dec
xchg
mov
repz
es
xchg
je
sub
jno
and
notl
mov
cld
xchg
dec
mov
adc
imull
sbb
cs
adc
out
movb
out
out
jecxz
mov
in
jno
stc
stc
sub
dec
in
sbb
pop
adc
or
cmp
jp
movb
movl
mov
push
lea
jmp
ljmp
shl
daa
int
push
lods
fisttpll
jbe
idivl
fidivl
sarb
lahf
push
lea
ja
ss
push
roll
push
mov
add
lret
out
sub
cmp
aaa
xchg
arpl
push
jecxz
adc
nop
push
sbb
xor
sbb
dec
dec
mov
mov
and
leave
aad
xchg
xchg
mov
and
mov
aas
inc
popa
mov
out
sti
mov
and
insb
cmp
iret
pop
fdivr
pushf
data16
std
mov
adc
adc
loop
insl
aaa
mov
and
aaa
aas
sbb
movsl
cmp
test
lock
and
or
sbb
cmp
mov
xchg
sbb
inc
jno
dec
push
dec
out
lcall
pop
aad
mov
pop
and
insb
call
fsub
jnp
push
cs
adc
out
cltd
adc
jp
cli
cmpsl
pop
push
mov
dec
call
leave
jne
icebp
cmp
dec
jl
repnz
jno
fs
int3
lods
sub
shufps
mov
lea
jne
aad
aam
aaa
dec
sub
or
inc
mov
mov
pusha
add
sar
rcl
shl
neg
mov
call
jns
or
mov
clc
and
sbb
xor
popf
testl
xchg
lahf
ds
test
pop
lds
pop
lret
xchg
push
sub
inc
add
je
dec
mov
sbb
insl
or
ljmp
xor
loope
pop
inc
xchg
sbb
ficomps
imul
pop
add
and
add
ds
lea
jne
push
lea
jle
pusha
movl
mov
pusha
mov
pushl
mov
jmp
jmp
inc
inc
push
inc
push
dec
xor
cs
insb
add
lods
push
fdivr
mov
jnp,pt
lret
ljmp
push
jnp
shrl
stc
add
pop
sub
and
shll
push
into
mov
pusha
ror
sub
xchg
inc
push
ljmp
xor
sub
adc
mov
out
cmp
jl
insl
push
mov
in
test
sbb
pop
dec
stos
push
mulb
cmp
out
mov
mov
mov
push
pushf
addr16
adc
jle
sbb
jge
subb
mov
test
jnp
cmpsl
test
enter
jno
ljmp
adc
nop
pusha
push
ljmp
das
stc
test
jmp
mov
sub
xchg
push
jmp
aaa
add
cmp
stc
dec
mov
ds
insb
mov
fbld
sub
loopne
mov
jne
xchg
and
out
enter
xchg
scas
out
pop
push
into
test
xor
aaa
les
or
shld
fldcw
pusha
movsl
dec
incb
jge
push
sbb
bound
and
mov
in
or
les
fs
sti
fsubr
mov
pop
xor
xor
icebp
out
or
call
sbb
sub
push
mov
gs
addb
pop
bound
xor
mov
test
mov
adc
dec
cmp
push
and
push
mov
and
outsl
mov
and
daa
in
dec
jg
jmp
sbb
mov
shrb
lods
pop
repnz
inc
mov
ljmp
push
mov
cmpl
xlat
js
dec
mov
add
fisttps
dec
xor
adc
sahf
imul
loope
mov
jns
shrb
dec
and
inc
cmp
andl
ss
push
and
imul
call
fisttps
popa
xchg
hlt
mov
jle
and
js
sub
jge
stc
dec
adc
push
sbb
sbb
adc
add
inc
jo
popa
leave
and
mov
add
in
sbb
and
push
filds
fwait
bound
dec
out
sub
test
push
cmp
cmp
cmp
cmp
in
pop
jb
jmp
lods
fsubrp
xchg
cmp
adc
xchg
in
ds
in
das
fisubl
mov
pop
add
adc
ret
mov
pusha
pop
bound
jecxz
mov
jmp
decb
bound
mov
sbb
enter
dec
mov
sbb
std
xchg
jns
xchg
dec
insl
pop
mov
jne
xchg
push
sarl
stos
mov
leave
mov
push
add
add
lret
loope
cli
push
mov
lods
jne
mov
mov
jo
hlt
inc
push
mov
mov
jnp
cli
xor
cli
aam
lahf
test
and
sub
outsl
repnz
pop
pusha
push
xchg
xchg
andb
xor
pop
movsb
xlat
xchg
lret
sub
or
or
pop
ret
sbb
std
mov
and
dec
add
pop
subb
test
inc
repz
pushf
cmp
cmpsl
psllq
cmc
inc
ljmp
orb
mov
out
idiv
loop
or
stos
jp
push
mov
dec
data16
outsb
aas
lea
sub
push
mov
out
adc
rcrb
sbb
xchg
jbe
jp
sbb
sbb
pop
loope
xchg
inc
arpl
das
jl
enter
out
pop
cmp
notl
fdivr
adc
xor
adc
inc
mov
jae
push
sub
lea
push
pop
mov
fmul
jns
push
xor
aaa
ret
mov
fnstsw
mov
xchg
loope
in
dec
jbe
pop
aam
sub
and
faddl
xor
mov
ja
rcrl
add
andb
xchg
lret
test
mov
lods
xchg
in
scas
movzwl
add
movzbw
cmp
mov
cmp
jmp
not
jmp
sbb
std
fsubrl
fimull
xchg
pop
int3
push
int
xchg
shrb
add
mov
adc
jg
push
sbb
sbb
xor
xchg
lods
mov
sub
mov
xor
or
xchg
test
lea
or
pop
imul
sub
xchg
jns
pop
fs
fildll
pop
mov
xchg
push
test
mov
dec
add
mov
mov
ja
and
bound
ficoms
test
mov
mov
or
jg
pop
sbb
std
dec
xchg
mov
push
mov
cmc
pushf
fstps
push
push
aam
aaa
and
jl
push
inc
cmc
enter
xlat
adc
imul
adcb
outsb
outsb
cmp
in
jl
pushf
add
jmp
lcall
mov
cli
mov
dec
out
mov
jb
int3
mov
adc
fldcw
mov
jo
jbe
jmp
mov
aas
mov
mov
dec
movsl
sbb
std
ret
icebp
cmpsb
dec
xchg
push
sbb
int
xchg
divl
sarb
cmp
rcrl
data16
test
fwait
mov
jg
mov
insb
pop
pop
and
add
insb
sarl
cmp
insb
mov
icebp
add
jae
push
xchg
xchg
mov
jno
and
pop
rcl
mov
mov
sub
lret
add
iret
sub
add
cmc
mov
stc
jmp
jmp
xor
fdivr
cmp
clc
ss
out
movsl
in
gs
into
outsl
add
sub
cld
inc
repnz
orl
dec
stos
or
cmc
testl
pop
into
shrb
jg
sahf
mov
or
dec
cmp
xor
dec
rorb
and
xchg
mov
inc
inc
cmp
push
push
cli
sahf
out
cmp
and
xchg
inc
lock
inc
outsb
rorb
and
pop
loop
lahf
mov
bswap
lea
mov
pusha
call
fisttpl
mov
adc
xchg
dec
xchg
pop
or
jle
enter
in
xor
rcrb
shll
std
pushf
push
jae
and
hlt
or
int3
test
push
lcall
rcll
sahf
int3
mov
mov
xor
dec
rorl
sub
xchg
paddsb
test
pop
or
mov
or
jge
push
jns
in
movsl
dec
in
frstor
mov
cmp
and
int3
push
leave
push
lret
sbb
cmpsb
in
pop
push
sub
mov
adc
div
pop
paddusw
mov
dec
icebp
movsl
aaa
les
adc
pushw
icebp
ja
xor
shll
xor
push
stos
test
jae
scas
mov
adc
fmuls
mov
mov
aas
jno
jg
stos
jecxz
insl
push
mov
je
push
adc
pop
mov
pusha
outsl
imul
push
pop
mov
jl
mov
repz
sub
dec
add
dec
js
pop
sahf
and
and
cmc
pop
repz
inc
cmp
shll
in
adc
push
pop
inc
adc
int3
mov
and
mov
mov
push
icebp
pop
pop
cltd
jmp
add
test
pop
mov
and
xchg
bts
mov
shl
adc
bswap
movsbw
add
rol
sbb
mov
pop
add
btr
movl
btc
sar
rol
mov
cmc
jmp
call
pushf
stc
clc
mov
cmp
movb
lea
jb
clc
push
clc
cmc
cmp
pushf
pusha
pushl
lea
jae
test
bts
mov
pushf
push
xchg
sar
mov
xor
pusha
xor
mov
movw
pushf
sub
clc
jmp
cmp
int
fdivr
lcall
in
cmpsb
out
mov
in
lret
pop
pop
pop
enter
daa
add
jp
dec
adc
jmp
lods
xor
or
dec
test
xchg
cs
cmp
pusha
jmp
jo
and
fdivr
inc
or
dec
in
inc
negb
mov
movsb
loopne
xor
mov
mov
sbb
inc
inc
aas
cmp
faddp
hlt
inc
sti
lods
add
inc
cmp
dec
addr16
aad
inc
jmp
outsb
outsb
mov
addr16
mov
repnz
mov
cmovns
rcl
mov
jnp
cmp
mov
pop
sti
sbb
pop
lret
pushf
xchg
adc
sub
jge
insb
mov
sbb
adcb
xor
popf
out
mov
shr
push
call
arpl
fs
xor
cs
insb
add
std
add
sahf
arpl
cmp
gs
adc
bound
std
dec
ljmp
dec
jno
pushl
pop
xor
xchg
and
pop
dec
push
cmp
in
pop
scas
cmp
jle
stos
out
daa
sbb
mov
xor
addr16
ja
push
scas
jbe
xchg
inc
fiadds
scas
bound
jg
clc
jmp
inc
pusha
lret
adc
std
mov
aad
fldenv
jo
pusha
jnp
add
fcmovb
jo
and
xchg
test
mov
insl
sbb
cmpsl
ffree
xchg
inc
push
into
stos
fnstcw
psubsw
cwtl
sbb
cmp
int3
push
mov
push
xlat
mov
loope
fistpll
mov
cli
pop
and
hlt
pop
mov
sbb
mov
mov
ljmp
jecxz
inc
cmp
adc
std
sti
movl
out
loop
repz
cli
jnp
xchg
mov
lret
clc
xchg
leave
cmc
mov
adc
imul
mov
sbb
cld
out
fisttpl
inc
testl
xchg
adc
popa
and
inc
cmp
je
out
cmp
and
push
sbb
fnstenv
push
aam
sub
and
or
shll
in
xchg
adc
dec
mov
mov
lods
lock
fcompl
js
fsubl
pop
sub
mov
cli
jno
dec
mov
pop
mov
xor
pop
insb
jo
add
cmp
add
leave
xor
sar
fidivrs
and
add
jg
ror
pop
fnstsw
and
imul
sub
lds
pop
mov
cmp
push
imul
cmp
std
push
pop
arpl
mov
xor
mov
pushf
aaa
jg
sbb
mov
adc
fidivrl
rcrb
iret
ret
idivb
imul
lds
inc
or
mov
push
xchg
lea
pusha
and
add
lret
bound
lahf
fisubl
je
rcr
sarb
fidivrs
sub
shlb
cmpsl
daa
adc
cmp
pop
or
jge
les
dec
sbb
push
or
loopne
iret
subb
pop
jecxz
cmpsl
movb
lea
ja
bt
imul
bt
cmp
add
pushf
lea
jmp
movb
mov
cwtl
lea
pushl
pushf
jmp
call
popa
xor
fdivr
or
daa
insb
cmp
push
lcall
frstor
enter
and
out
test
sub
arpl
popa
iret
pop
cmp
in
xor
push
adc
add
ljmp
jno
cmp
sbb
sti
fnstenv
add
mov
push
imul
xor
add
fdivr
xor
daa
push
add
inc
cmpsb
mov
mov
daa
add
je
out
dec
pushf
fisubrl
imul
std
xchg
loop
jnp
fistps
or
mov
jbe
cmpsb
mov
xor
add
push
add
ds
jge
mov
rcrl
ds
lea
imul
in
sbb
icebp
xchg
stos
jmp
addr16
mov
or
and
notl
fdivr
dec
xor
stos
lea
mov
mov
out
daa
add
mov
pop
dec
xchg
mov
mov
inc
scas
dec
add
mov
adc
std
add
ret
xchg
pop
xchg
fbld
push
lret
or
out
daa
add
xor
mov
pop
adc
in
mov
imul
or
imul
cmp
lret
insl
mov
addb
jns
arpl
scas
lods
je
mov
gs
dec
sub
std
or
je
sbb
sarl
clc
daa
add
loopne
mov
pop
cmp
or
and
fdivs
into
mov
std
cltd
popa
subb
dec
sbb
andl
rorb
cmp
add
lock
add
call
adc
adc
fwait
jne
push
call
inc
mov
test
cmp
sbb
cmp
insb
push
shrl
mov
adc
data16
push
mov
cvtpi2ps
cmp
jnp
add
push
fscale
xchg
imul
cmpsl
cmp
adc
cmpsl
fs
adc
int
sbb
psubusb
sti
leave
xchg
lds
fidivs
mov
push
dec
jmp
ficoml
nop
je
cs
xor
adc
xor
push
jne
lcall
mov
sbb
in
les
mov
dec
dec
fisttpll
sti
fistps
fisubl
outsl
dec
push
div
lods
adc
jl
or
dec
jbe
inc
push
popa
stc
out
and
adc
pushf
movsb
mov
fdivr
loopne
jnp
jnp
add
sbb
xor
pop
mov
shlb
insl
sub
out
adc
cmc
push
cmp
js
jnp
dec
movlps
adc
pop
mov
aam
out
sub
sub
xor
lcall
cmp
mov
add
fnstenv
sub
bound
pop
subb
nop
push
je
jbe
sbb
int
inc
jnp
xor
add
xor
add
lret
or
add
lret
or
add
or
add
add
add
add
add
lret
or
add
or
add
add
add
add
add
lret
or
add
add
add
add
add
add
or
add
testl
add
orb
enter
sbb
or
add
testl
add
lret
or
add
or
add
testl
add
lret
or
add
lret
or
add
add
pop
and
lahf
movzbw
mov
movw
lea
ja
call
call
pusha
movw
call
scas
dec
in
fdivr
orl
adc
imul
pop
bound
cmp
mov
mov
and
cwtl
sub
ret
adc
movl
mov
cs
js
je
or
insb
cmp
mov
mov
or
mov
xor
and
jnp
jb
pop
pop
sbb
mov
dec
mov
scas
pop
dec
sahf
in
jle
pop
cmpsl
push
jo
fdivr
cmc
cmp
movsb
repz
adc
cmp
test
ljmp
nop
pushf
push
push
cmpsb
mov
gs
enter
sbb
fimull
clc
add
xor
jb
addl
mov
lcall
lds
sub
sbb
sbb
cmp
cmp
inc
cmpsl
test
mov
test
pop
arpl
cmp
xor
cmp
dec
pop
inc
aaa
test
das
xlat
out
and
mov
pusha
lea
ja
pusha
sub
neg
add
rcr
or
lea
add
movzbw
movzbl
bt
mov
not
sbb
rcr
inc
mov
pusha
call
lea
ja
adc
sbb
sub
sub
cmp
adc
sbb
add
bsr
mov
pusha
bt
rol
mov
stc
bt
test
test
repnz
mov
lea
jne
bswap
movb
setg
jmp
pandn
or
std
pusha
sub
push
int3
in
sub
push
xchg
lods
rorl
dec
fwait
out
mov
icebp
cli
xchg
push
jno
cmpsb
cli
pand
mov
mov
xchg
push
cld
dec
jmp
sub
imul
or
mov
imul
ljmp
xor
xchg
fcmovnu
ljmp
inc
ret
pusha
pop
jmp
jp
sbb
mov
or
inc
push
subl
xchg
or
std
leave
xchg
aad
cmp
sbb
pusha
sbb
sub
int3
sbb
mov
pop
lds
fiadds
push
popf
scas
push
push
xlat
adc
movsb
push
fwait
sbb
adc
xor
jbe
shll
lret
lcall
inc
mov
dec
xor
mov
sarb
lahf
fcmove
sbb
mov
dec
in
cmp
in
jp
fadd
xor
jmp
and
mov
mov
push
pushf
pushl
ret
jbe
xlat
or
std
xchg
fists
aad
xchg
into
lcall
pop
fsubl
sbb
bound
lock
jno
cmpsl
into
xor
std
ja
push
bound
pop
push
sub
cld
inc
out
test
shr
sar
mov
sahf
dec
jmp
loop
xchg
in
add
aaa
rolb
xchg
mov
and
mov
cmp
mov
mov
mov
lea
pop
cwtl
loope
test
dec
adc
jp
or
std
pop
les
cmc
sub
jnp
icebp
sub
dec
sbb
xor
das
mov
lret
sahf
push
inc
adc
addl
int
addb
xchg
jecxz
sbb
lock
insb
xor
test
add
jno
hlt
ljmp
mov
jecxz
addb
sbb
subb
xchg
aam
stc
dec
xchg
dec
push
call
fdivr
xor
mov
scas
sub
and
icebp
inc
loop
outsb
inc
adc
scas
jge
jge,pn
cli
cmp
xchg
push
iret
fistps
dec
movsb
adc
icebp
mov
aam
or
mov
mov
filds
mov
sub
js
mov
sbb
jg
push
rcrl
mov
out
arpl
cltd
enter
into
rorb
pop
sub
push
rorb
or
std
loop
clc
daa
ljmp
clc
inc
aas
or
sub
push
scas
push
inc
mov
push
xchg
jmp
mov
pop
sub
hlt
push
push
jmp
jnp
lock
jno
add
xor
add
js
sub
out
mov
cmp
out
mov
icebp
js
test
shlb
lea
cs
std
inc
mov
jo
xchg
fisubs
mov
inc
mov
scas
xchg
jae
mov
mov
and
cmpsl
lret
je
loopne
in
daa
add
sub
mov
sbb
and
movsb
lock
cmp
aam
xor
jecxz
mov
mov
movl
call
pusha
lea
jne
bt
btr
mov
pusha
stc
add
clc
jmp
or
std
pop
out
sbb
stos
dec
xchg
jecxz
sti
pop
lcall
cwtl
loopne
cmp
fists
int3
ds
sub
cwtl
leave
xorb
or
sbb
in
jle
add
dec
xchg
push
xor
dec
mov
lsl
adc
out
push
pop
cmp
jmp
cld
outsl
push
jnp
mov
push
jne
enter
fcmovne
stos
lcall
mov
pop
pop
fdivr
xor
outsl
mov
test
mov
sbb
jno
pop
and
mov
test
add
or
cs
or
scas
ja
add
mov
fsubs
cltd
xchg
xchg
push
mov
or
test
push
mov
mov
push
movsl
shrb
clc
mov
repnz
clc
mov
test
inc
les
mov
rcl
enter
push
xchg
xchg
inc
mov
or
mov
and
sub
dec
insb
add
js
aam
push
imul
and
or
xor
lret
add
dec
sbb
dec
adc
inc
adc
fs
inc
push
cmp
enter
les
dec
or
push
push
push
loop
scas
sti
cmp
lock
int3
push
and
dec
xorb
addr16
test
loop
add
mov
ficoml
mov
cmp
icebp
cmp
or
movsl
mov
and
mov
lods
and
pop
cmp
rolb
ja
push
cwtl
push
fdivrl
jmp
in
mov
adc
fsubl
pop
push
add
add
push
je
pop
andl
sub
insb
orl
adc
mov
int
clc
inc
lcall
hlt
jg
popa
cmp
ja
adc
push
mov
add
lret
cmovno
xchg
sub
sub
ss
adc
adc
out
rorl
or
pop
adc
out
mov
lea
aad
mov
add
data16
out
ljmp
fisttpll
jne
call
scas
pusha
add
sbb
cmc
out
enter
mov
or
inc
push
cli
daa
add
cmp
mov
push
iret
dec
idivl
icebp
mov
icebp
xor
fdivr
mov
sbb
lods
les
pop
mov
iret
push
cmp
daa
add
xchg
test
inc
xchg
dec
dec
inc
add
std
daa
jae
aas
jns
cld
inc
sbb
int3
dec
lahf
mov
mov
test
cld
push
dec
xor
jle
leave
sarl
sahf
addr16
enter
add
mov
and
jbe
fidivrl
leave
call
ljmp
in
mov
mov
les
xchg
test
out
push
jg
lret
inc
sbb
bound
das
dec
lea
mov
add
mov
and
push
pop
jmp
mov
add
nopl
jbe
xchg
and
jge
repz
add
inc
inc
dec
sub
call
mov
cli
xchg
push
imul
pop
and
call
pop
add
in
jmp
insb
pop
dec
stos
inc
aam
movsb
mov
mov
push
jge
add
sti
mov
add
add
std
scas
ss
sub
ret
daa
lahf
nop
lahf
movsl
call
outsl
leave
jg
push
std
xchg
adc
stos
and
add
out
mov
ds
xor
mov
sub
sbb
pop
mov
fdivr
fisubrs
lret
arpl
les
xor
fs
push
fwait
push
inc
imul
mov
jmp
in
lcall
and
push
mov
jnp
xchg
inc
xchg
fcomip
hlt
push
xchg
xor
cmpsb
leave
pushf
cs
gs
jne
pop
inc
mov
int3
lea
arpl
lret
mov
cmp
mov
add
or
mov
mov
or
pop
mov
add
popf
mov
mov
pushf
pushl
ret
adc
imul
fmuls
inc
cltd
xchg
cmc
add
jge
lds
jne
mov
cld
daa
add
scas
pop
flds
loopne
sub
add
adc
repz
repz
cmp
add
push
inc
mov
sarl
push
cmp
inc
sbb
clc
and
xchg
sarl
es
mov
test
and
cltd
add
std
into
cwtl
inc
jno
fbld
dec
imul
mov
ds
int
inc
enter
int3
cwtl
lds
mov
pop
sbb
fwait
sbb
fildll
dec
pop
pop
les
or
in
push
xchg
outsb
fsubrl
jecxz
pop
lahf
jnp
mov
pop
enter
jle
xor
mov
test
add
incb
xor
das
mov
hlt
push
mov
jns
iret
pop
mov
insb
test
or
jae
add
std
inc
adc
andl
pop
bound
cmpsb
addr16
ja
push
idiv
daa
add
sbb
or
fwait
jle
or
addr16
or
test
and
mov
pop
int3
inc
adcb
ucomiss
jne
int
into
iret
sbb
pop
shll
mov
xchg
insl
push
scas
rcr
test
cmc
pop
xor
pop
in
sahf
lock
push
pop
xchg
stos
xchg
loope
and
adc
and
mul
std
fwait
xor
push
and
pop
cmc
pop
sub
in
xor
jl
cltd
cmp
push
mov
sbb
jle
push
dec
pushf
cltd
cmp
mov
loope
pop
loopne
xor
sti
and
shlb
mov
push
dec
xor
jmp
inc
js
xor
dec
push
push
push
int3
and
or
adc
jp
test
outsb
mov
js
outsl
mov
sahf
dec
popa
dec
xchg
and
loope,pt
cmp
sbb
mov
add
sub
insb
push
lahf
sub
dec
int
mov
daa
jmp
dec
pop
es
add
sub
subl
icebp
cli
idivb
adc
fisubl
adc
push
mov
sub
mov
dec
cmpsb
mov
stos
das
and
inc
out
sahf
push
and
sbb
pop
and
pop
lods
mov
aad
lods
mov
scas
mov
sahf
mov
mov
cmpsb
pop
pop
mov
push
cmp
lret
push
lea
jl
jmp
add
inc
js
je
jb
arpl
jae
cmc
stc
test
call
stos
cs
mov
scas
ficompl
imul
add
dec
pop
pop
mov
call
jae
pusha
cld
xor
leave
ret
and
loope
in
js
jb
sub
test
repz
in
mov
mov
mull
mov
out
repnz
dec
jns
adc
adc
sarl
clc
sub
inc
push
push
fdivrl
out
sub
jnp
sub
stos
cmp
mov
scas
inc
cmp
inc
inc
gs
outsl
insb
gs
cs
insb
add
test
and
pushf
push
mov
pushf
pushl
ret
cwtl
pushf
lahf
mov
call
movl
pusha
call
add
push
push
lea
jmp
clc
rol
cmc
neg
jmp
cmp
ja
fdivr
hlt
mov
roll
cmp
dec
xor
iret
xlat
cmpsb
and
pop
out
push
out
je
push
pop
adc
xor
out
scas
mov
adc
mov
xor
xor
push
into
xlat
pop
xor
add
int3
xor
out
bound
lock
imul
add
daa
mov
es
xchg
std
mov
jp
mov
xchg
inc
pop
mov
ljmp
fs
jne
shr
dec
sub
mov
jns
cmc
pushf
stc
add
pusha
bt
test
movzwl
cmc
pushf
movzbw
bsf
mov
movb
add
test
call
push
pop
dec
jle
std
and
lods
jmp
pop
jno
mov
data16
hlt
xchg
js
cmp
cmpsl
sub
adc
xor
jecxz
jo
pusha
jns
outsl
in
jmp
addb
jecxz
jmp
std
jl
mov
sti
sub
jmp
sahf
inc
setbe
xchg
xchg
jne
dec
pop
pop
adc
xchg
mov
mov
fs
jae
mov
sub
movsb
int
enter
mov
push
push
mov
jge
std
xlat
ja
ljmp
stc
sub
les
jno
gs
adc
push
mov
repnz
mov
cmp
dec
jl
jne
dec
jmp
mov
lds
add
pop
xor
stos
add
inc
or
and
sbb
loopne
jae
mov
mov
sbb
pop
dec
lock
fidivrs
cld
sti
imul
cmp
fdivr
pop
in
sub
sahf
aad
cmp
sti
cmp
popf
pushf
ljmp
aas
xchg
push
aaa
push
sbb
ret
stc
stc
inc
jo
cmp
outsb
gs
mov
cmp
dec
loope
enter
aas
xlat
push
scas
shll
xor
mov
test
rcll
lods
outsb
pop
push
out
es
and
add
push
nop
add
xor
pop
in
jl
jl
std
xchg
loop
jno
push
fcomi
xchg
dec
andb
clc
jnp
aam
lret
pop
inc
fstpt
in
push
push
cld
in
xor
enter
pop
hlt
clc
movsb
popl
test
int
lds
xchg
sub
lar
aaa
cmp
push
lock
les
pusha
popf
int
sbb
pop
aam
sub
into
jge
jp
mov
jb
dec
mov
sub
cli
fwait
inc
mov
cmp
jno
sarb
pop
stos
scas
cli
lods
nop
mov
stos
xchg
fs
fiadds
sbb
jecxz
sbb
jns,pn
add
inc
jae
inc
mov
ror
add
jno
jb
xchg
aas
in
sbb
jmp
inc
cmp
cmp
aas
loopne
mov
int
inc
test
les
xchg
addl
mov
dec
jnp
xchg
leave
repnz
pop
adc
sub
fidivs
mov
pop
lret
out
les
std
mov
inc
hlt
adc
xchg
inc
lea
sarl
xorb
aad
das
push
inc
fisubrs
sub
mov
subl
mov
add
sbb
jp
shrl
int
fs
negb
inc
and
mov
movsb
sti
jno
in
ffreep
or
pop
inc
mov
or
cmp
mov
sbb
or
adc
sahf
pop
pop
adcb
js
cmpsb
push
push
cmp
pushf
pop
ss
jbe
shrb
std
push
and
sub
enter
test
jp
jp
or
das
cld
movsb
hlt
jmp
mov
in
push
inc
sub
adc
mov
dec
push
negb
sbb
lret
xchg
out
xchg
lret
mov
mov
insb
ss
je
in
and
dec
ret
dec
fld
sbb
js
mov
incb
imul
dec
cld
inc
cmp
test
mov
pop
adc
mull
sbb
loope
scas
out
mov
push
push
movsl
jp
std
xchg
into
push
xchg
loope
fcoms
inc
std
es
jo
xchg
jmp
mov
mov
lock
mov
xchg
inc
pop
jg
aas
les
pop
xor
jecxz
xor
test
clc
call
pop
gs
xchg
test
aas
incl
inc
jp
std
and
xor
mov
add
jo
xchg
ret
jle
mov
dec
pop
in
popa
adc
add
mov
cmp
in
clc
test
mov
jmp
mov
imul
pop
sub
pop
xchg
test
push
add
imul
les
out
aad
es
mov
pop
add
imul
xor
seta
cmc
test
mov
push
cmpb
jmp
cmpsl
sbb
jns
std
pop
movsb
bound
mov
and
dec
mov
or
inc
aaa
xlat
jbe
aam
push
adc
and
out
cmc
jmp
addr16
adc
dec
sbb
rorl
out
icebp
fst
add
mov
and
inc
mov
mov
push
icebp
mov
fcompl
pop
add
jb
test
test
call
mov
pushf
mov
pusha
pushl
ret
cmp
add
push
pushf
jmp
mov
cmp
std
cs
mov
cmpsb
gs
movsb
jmp
and
movsl
repnz
lret
jno
es
jne,pn
dec
arpl
sub
es
notb
es
jge
dec
les
jnp
mov
sbb
jecxz
sub
lcall
jns
std
lods
xor
je
and
sbb
sbb
inc
out
adc
adc
and
les
mov
std
fldt
shl
and
or
pop
sti
mov
out
push
jno
in
and
shl
loop
xor
mov
dec
pop
cmpsl
push
fsubs
dec
pop
movsb
inc
stos
sub
test
pop
and
sarl
push
roll
movsl
and
fsubs
mov
test
js
loope
test
stc
test
cmp
mov
lea
pushf
pushl
jmp
movb
lea
jne
dec
adc
bts
rcr
mov
rcl
stc
sub
bswap
mov
test
clc
bt
sub
cmc
push
pushl
popl
call
push
jmp
mov
std
pushf
addr16
inc
mov
push
jnp
shlb
push
push
out
out
ja
add
iret
sbb
or
inc
insl
mov
rcl
shl
psubq
shrb
aam
and
enter
divb
fisttpll
mov
roll
dec
or
fnsave
test
das
dec
mov
ret
add
lods
add
int
scas
ja
std
mov
push
stc
cmp
sbb
dec
repz
inc
push
pop
xlat
sbb
imul
inc
rcll
bound
enter
xlat
mov
pop
push
repnz
call
dec
sub
test
push
push
in
push
or
cmp
push
jmp
lret
inc
inc
shrl
mov
out
or
js
test
out
mov
rcll
fnstcw
or
xchg
daa
add
rcr
pusha
sub
cmp
sub
mov
cmp
bsf
pop
add
add
adc
shl
bts
not
mov
shl
bt
shl
inc
mov
test
repnz
pusha
lea
jne
lahf
pushf
movb
pop
seta
movzbw
lahf
push
setnp
lea
pusha
pushf
movl
jmp
dec
push
jo
fdivr
cmc
ret
out
pop
xchg
fsts
jmp
ret
lds
xchg
mov
sti
dec
arpl
ret
mov
pop
cld
push
cmpsl
mul
shlb
sbb
cli
insb
mov
jmp
jae
adc
pop
unpcklps
cli
or
and
xchg
jl
arpl
js
lcall
xchg
cld
scas
aam
pop
dec
lcall
dec
insb
mov
inc
and
cmc
shlb
shrl
add
std
jne
jle
loope
test
fwait
dec
pop
call
add
enter
lock
jb
push
inc
ret
mov
popf
iret
clc
notl
ss
inc
outsl
stos
mov
jge
push
inc
fisubs
hlt
push
sbb
es
int
in
rorb
imul
hlt
je
jae
mov
or
sahf
pushf
gs
xor
test
scas
int
shlb
vshufpd
push
cmpb
cs
add
int3
mov
pushf
pusha
test
jb
jne
insb
inc
insb
insb
outsl
arpl
lahf
jge
jne
std
mov
inc
in
cmpsb
pop
inc
jmp
addr16
call
mov
adc
lods
popf
cwtl
push
rorl
sub
scas
lahf
jle
sub
mov
or
mov
cs
mov
ret
dec
push
sbb
fidivs
les
jo
fisttpll
jp
cmp
ss
lcall
cmc
xchg
inc
jnp
out
cmp
js,pt
sbb
lret
add
add
pop
jmp
add
add
add
or
add
or
add
or
add
cld
or
add
add
addb
add
or
add
clc
rorb
add
add
addb
add
or
add
std
cld
or
add
cmp
add
decl
mov
out
add
xchg
or
add
add
add
cltd
or
fdivr
pop
aad
jmp
fdivrs
pop
sbb
and
cmpsb
or
lret
dec
sub
mov
cmp
xor
data16
dec
fiadds
das
mov
outsb
ja
cmpsb
fwait
outsl
adc
scas
mov
or
ficompl
adcb
fwait
inc
pop
dec
dec
jmp
and
lods
jne
adc
in
shl
sub
lret
es
sbb
mov
std
fisubrs
movsb
lock
sub
ret
bound
fstps
mov
mov
add
lret
xor
ss
cmpsb
jg
mov
or
jno
mov
into
lret
sub
out
add
stc
jno
xchg
test
les
outsb
lea
shrl
js
pop
into
rolb
jbe
add
mov
mov
fldl
imul
jae
or
test
shr
outsl
std
push
pop
pushf
cltd
xchg
repnz
jne
outsl
stos
int3
jae
int3
mov
adc
leave
hlt
push
jae
aaa
jb
std
xor
sbb
sahf
lret
add
jne
out
xor
add
das
and
and
inc
in
xchg
aad
xchg
imul
dec
aaa
sti
lea
cmpl
and
aaa
data16
add
push
int3
test
add
leave
xchg
push
call
imul
out
fs
pushw
jmp
outsl
pushf
rcrl
lret
loop
fs
mov
int
jbe
mov
xchg
stc
arpl
es
and
addl
shl
xchg
int3
decb
lds
dec
inc
pop
ljmp
movzwl
pusha
movl
mov
movl
lea
jmp
lods
lock
cltd
mov
lcall
add
push
push
inc
leave
in
xor
and
out
loopne
jb
push
into
movsl
sbb
daa
dec
push
hlt
addr16
dec
insb
add
lods
jl
xchg
mov
jecxz
add
filds
jns
ja
ja
cld
ret
xchg
sub
pop
mov
push
xor
or
mov
jnp
mov
mov
xor
enter
pop
not
push
loopne
mov
fimuls
stc
in
daa
repz
ljmp
xor
jl
lock
rclb
dec
push
sub
mov
ljmp
lods
mov
aaa
dec
repnz
ret
lock
inc
fists
das
push
lea
iret
mov
push
jmp
push
les
sbb
jnp
mov
mov
arpl
jmp
jmp
ficoms
test
lcall
jmp
fnstsw
jo
ret
ja
add
movb
adc
lret
mov
subb
stos
movsb
es
jns
adc
aad
add
std
fistps
sahf
cli
add
adc
add
cs
sub
sub
js
ss
ss
stc
sub
and
dec
pop
push
jp
decb
push
pop
es
divb
std
jae
add
dec
mov
mov
fisubrl
add
fs
xlat
mov
lahf
xor
push
push
mov
push
fwait
push
les
out
xchg
fbstp
push
pop
xlat
mov
aaa
mov
ljmp
cli
pop
push
sti
adc
leave
adc
xchg
aaa
lahf
adc
jecxz
call
jge
pop
andl
mov
stc
std
jecxz
mov
icebp
pop
inc
mov
mov
mov
sub
mov
sti
inc
test
shll
jbe
xor
add
decb
inc
or
dec
jg
add
leave
xor
aas
sahf
mov
push
dec
inc
push
icebp
sti
mov
cld
jae
cwtl
adc
jle
addr16
dec
je
adc
imull
dec
daa
ret
xor
dec
enter
xor
int3
lret
ror
mov
mov
pop
mov
rcrb
dec
or
sbb
and
cmpsb
outsl
fdivr
ret
adc
jo
xchg
iret
jne
push
pushf
ss
ret
mov
mov
daa
adcl
fdiv
rep
pop
mov
icebp
dec
jl
aad
out
mov
mov
loope
inc
add
mov
push
stos
add
sub
pop
mov
cmc
jns
dec
loope
jmp
js
aad
ja
imul
push
aas
cld
inc
cltd
loop
repnz
add
inc
outsl
push
imul
jae
popa
addr16
imul
adc
std
push
movsb
jae
shl
ds
mov
outsb
jle
sbb
pop
push
outsl
in
int
adc
jecxz
mov
pop
sub
in
iret
or
cmp
mov
adc
pop
enter
sbb
pop
adc
out
popa
subl
xchg
sbb
rolb
or
imull
fdivr
rorl
mov
inc
loope
xor
loopne
and
lea
jg
cld
dec
jo
lods
pushf
jns
loop
int3
and
rorb
imul
pop
mov
loop
hlt
jmp
lahf
or
js
loope
mov
inc
dec
dec
loope
adc
pusha
xchg
xchg
push
sbb
cmpsl
imul
ss
xor
xor
ficomps
push
mov
xchg
mov
lahf
mov
mov
mov
add
mov
and
test
add
jmp
movsb
clc
add
bt
sub
mov
mov
setg
xor
and
shl
add
jmp
pusha
call
jmp
cmc
push
jmp
pushf
inc
pushf
neg
jmp
lea
insl
fdivr
leave
push
fmuls
or
mov
lss
mov
std
push
inc
inc
ret
mov
pop
in
push
les
rcrb
mov
sub
scas
sbb
xor
jmp
daa
xchg
sbb
addl
movsl
cmc
repz
sbb
cs
movsb
hlt
mov
xchg
shll
push
fimull
cli
mov
or
adc
std
pop
and
clc
cwtl
push
pushf
inc
add
inc
imul
stos
divb
aam
mov
es
xchg
out
and
sub
adc
xor
cmc
shll
arpl
sbb
adc
mov
mov
and
test
insb
sarb
lret
and
cmp
sub
xchg
cmc
nop
test
pop
bound
xor
pop
mov
fnstsw
adc
mov
inc
imul
adc
stos
dec
pop
pop
mov
aaa
push
jne
mov
xchg
loop
in
movsb
shlb
mov
mov
xchg
mov
popl
jecxz
test
ds
and
pushl
sub
push
fs
movb
aam
das
arpl
sbbb
mov
xorl
in
iret
add
mov
mov
pop
xchg
inc
add
mov
cmpsb
lret
js
mov
push
mov
aad
add
std
sub
stc
movsb
packssdw
std
pop
daa
bound
dec
jmp
mov
setne
rcll
mov
push
cmp
fwait
arpl
lret
popf
es
pop
in
call
jns
mov
test
dec
lds
mov
cmp
cmc
pop
or
test
dec
adc
sub
cmp
mov
push
inc
sbb
nop
dec
dec
sbb
out
sbb
movsb
mov
std
loopne
pushl
push
push
push
clc
icebp
lret
and
adc
cmpsb
mov
dec
hlt
cmp
out
insb
push
push
jno
fdivrs
fwait
pop
dec
ljmp
mov
shl
sub
and
fdivr
xchg
int3
sbb
pop
jl
gs
sub
jp
add
xchg
daa
add
imul
movaps
lods
cmp
dec
add
nop
xchg
or
std
add
andl
mov
rol
xchg
sbb
sub
pushf
xchg
stos
push
xchg
daa
add
pop
pop
mov
mov
sub
or
push
aam
enter
push
push
or
outsb
movsb
nop
sbb
out
andl
xor
pop
mov
lea
sub
cmpsl
lock
and
jmp
and
sbb
divb
dec
dec
adc
mov
imul
outsb
dec
bound
sbb
loop
loope
adc
cmp
jae
pop
adcb
mov
mov
mov
lret
dec
and
std
arpl
or
inc
and
stos
and
int3
jae
pop
cmp
inc
je
and
rcrb
dec
cwtl
sti
xor
pop
inc
and
lret
jne
xor
fisubrl
push
aad
test
sar
cwtl
fdivrl
and
arpl
xchg
pushf
push
setle
lahf
mov
pusha
pushf
mov
lea
jmp
je
or
mov
shll
loope
pushf
inc
in
and
aaa
out
dec
adc
call
add
lea
insl
into
inc
jg
pop
cli
lds
cmp
stos
addl
icebp
sub
nop
pop
pop
mov
mov
mov
stos
push
rol
scas
or
inc
jo
adc
dec
clc
cs
add
dec
mov
aad
xor
je
and
add
rcl
not
mov
movsbw
mov
cmp
stc
push
push
add
clc
mov
sar
ror
btr
xor
mov
cmc
cmp
push
lea
jbe
xor
mov
rcr
push
bts
add
stc
mov
xadd
bts
mov
pop
or
add
sbb
movl
stc
sar
mov
stc
bt
cmp
pushf
jmp
pushf
jmp
test
call
frstor
movsl
out
pushf
int3
in
cs
pop
lret
sbb
mov
les
cld
dec
jo
sbb
dec
out
mov
test
jg
rcrb
lahf
xchg
out
and
jmp
fisubs
adc
sub
adc
mov
in
pop
cmp
mov
inc
jmp
sub
add
decb
sbb
ja
popa
add
mov
sub
mov
je
cmp
fdivr
or
push
dec
imul
cmp
sub
xchg
xor
sub
ret
push
jp
adc
jecxz
pop
mov
cmp
rcrl
or
lods
push
rcrl
push
mov
xchg
or
mov
cmc
testl
stos
aam
mov
pop
aad
jns
add
and
cmpb
cld
mov
adc
adc
test
mov
shl
inc
pop
cmp
jnp
mov
mov
and
enter
loop
jmp
and
mov
pushf
lea
jmp
push
pushf
movl
pushf
push
pushf
mov
mov
push
pushf
pushl
ret
xchg
sbb
addr16
mov
push
jnp
push
lcall
scas
mov
dec
nop
xchg
mov
jnp
lret
lret
stc
dec
popa
jb
idiv
insl
rcl
inc
jno
cmp
inc
gs
xor
push
inc
cmpsl
jnp
cli
push
out
out
cmpb
jnp
loopne
dec
add
fnstcw
cli
sbb
adcl
xor
xor
dec
repz
js
jno
stc
int
xor
and
xor
xor
cwtl
arpl
dec
lea
jne
shl
mov
clc
cmc
jmp
js
push
data16
arpl
js
loope
cld
aas
pop
xchg
mov
jge
bound
dec
push
in
inc
je
or
out
int
xchg
loop
mov
orl
sarb
xor
out
imul
sub
xchg
push
subb
lret
notb
xlat
adc
dec
or
xchg
lock
movl
repnz
push
lea
jp
push
lea
jne
pusha
bswap
pushf
lahf
movb
pusha
cwtl
mov
cwtl
bswap
movzbw
lea
movl
movl
call
inc
dec
dec
inc
push
dec
xor
cs
insb
add
movsl
or
ljmp
xor
jmpw
call
loope
data16
pop
test
push
mov
movsb
scas
jl
pushf
push
dec
sbb
push
jo
xchg
out
push
sti
inc
insl
arpl
call
repnz
dec
push
repz
push
into
sahf
cld
ret
xor
jnp
and
and
lahf
and
sbb
mov
lods
into
clc
cmp
lret
notb
xchg
movsl
jl
mov
fistps
call
sbb
gs
in
push
dec
imul
pushf
ja
pop
cli
shrl
mov
pusha
lcall
js
push
xchg
inc
or
stos
std
ss
fimull
ret
aas
pop
imul
cmp
xor
fsubp
aas
fbstp
int3
cmpb
push
inc
test
loopne
test
ret
jno
dec
icebp
dec
push
pop
test
xor
jnp
lock
call
inc
cmp
imul
sub
aam
jae
pop
imul
in
aam
or
mov
es
pop
movsb
jo
add
xor
sub
fdivr
inc
adc
xchg
jmpw
in
cmp
ret
inc
jecxz
cwtl
in
jle
inc
add
pop
stos
arpl
jo
sahf
cmp
sbbb
cmpsb
lds
push
clc
or
jl
lcall
mov
aaa
sub
mov
aas
fisttpl
in
mov
lea
cmp
popf
or
call
mov
sbb
ja
repz
cmpsb
test
adc
mov
out
pop
lret
lahf
loopne
sahf
mov
aaa
or
inc
adc
repnz
movl
pushf
push
jmp
movsb
test
fs
push
or
fistl
mov
bound
push
pop
sbb
adc
lahf
les
adc
je
repz
dec
lods
idivb
shlb
jae
sarl
aaa
test
xlat
hlt
test
mov
xor
sub
lret
lods
dec
cwtl
xchg
push
push
xor
leave
adc
mov
push
xor
pusha
es
cs
jmp
jmp
jo
pushf
cmp
arpl
std
jl
xorb
xchg
push
repz
mov
and
rcrl
rorb
lds
push
push
sub
lret
jbe
popf
sbb
push
push
jae
inc
inc
xchg
fs
jmp
xchg
insl
fmulp
gs
fidivl
stos
out
jmp
lret
and
shrl
daa
push
mov
gs
xor
ret
jl
and
push
lahf
dec
adc
jle
stc
adc
fldcw
lcall
xor
pushf
movl
jmp
bt
bt
repnz
pushf
lea
jne
cmc
mov
btr
rcl
stc
sub
shld
push
pushf
lea
bt
clc
sub
pushf
pushl
popl
cmc
cmp
lea
jno
push
lea
ja
rcl
add
and
xor
sub
lea
lea
dec
add
bsf
lea
shl
mov
neg
clc
adc
stc
mov
pushf
cmp
repnz
push
push
pushf
lea
jne
movsbw
movb
setbe
lahf
movsbl
push
pusha
lea
jmp
les
jge
xchg
into
adc
fcmovne
jle
roll
sub
cld
stc
aad
fstps
pop
pusha
sbb
xor
sbb
or
dec
xlat
leave
fisttpll
ljmp
mov
bt
mov
test
movb
push
lea
je
pusha
movl
pushf
cmc
add
movb
stc
bt
cmc
cmp
pusha
call
lea
je
push
clc
pushf
cmp
sub
stc
cmp
pushf
lea
ja
cmc
jmp
xchg
and
adcb
inc
jns
adc
fwait
jno
jg
loope
fwait
xor
push
inc
loope
popf
push
mov
out
popf
ret
cltd
cmpsb
ss
push
movsl
pop
icebp
fdivrs
sub
mov
push
push
mov
in
adc
cmpsl
dec
push
lods
or
loop
adc
pop
xchg
xchg
test
movsl
pop
push
xchg
fbld
mov
pusha
push
xchg
mov
lea
jne
sar
rol
mov
bt
btr
push
sub
test
bswap
shl
lea
call
pop
xchg
aas
pusha
fdivr
sub
xchg
mov
mov
xor
pop
dec
lock
xor
jge
inc
sti
mov
ss
lahf
lods
mov
jns
std
fwait
repnz
jne
outsl
cmpsb
or
jno
xchg
inc
xor
sbb
cmp
adc
jae
cmovle
cmp
push
cwtl
or
mov
icebp
in
mov
push
jp
cmp
mov
and
icebp
push
repz
cli
int
rol
call
bt
cmc
push
cmp
call
inc
clc
push
pusha
fdivr
sbb
xor
test
sub
pushf
stos
dec
xor
mov
enter
shll
jno
lods
inc
dec
loopne
bnd
sub
pop
fisubrl
adc
mov
out
repnz
dec
divb
pop
xchg
in
call
fdiv
jmp
mov
in
push
test
stos
test
mov
mov
es
push
jmp
xchg
sbb
mov
lret
or
icebp
inc
repz
rcll
hlt
jp
sbb
scas
push
jmp
jmp
btc
mov
adc
rol
neg
add
sub
btc
rol
mov
test
sub
push
pushl
push
clc
pushl
popl
cmp
cmp
pusha
movb
call
call
test
push
jmp
fdivrl
mov
fstl
mov
bound
mov
fiaddl
es
sbb
mov
push
bound
not
pop
into
std
xchg
push
je
cwtl
push
add
cmc
add
mov
pusha
test
inc
cmp
sub
sbbl
pop
push
loope
dec
fiaddl
lahf
cltd
insb
dec
daa
jle
mov
out
testb
mov
sbb
cltd
addr16
mov
fstpt
pop
fdivr
cmp
and
sub
xchg
int3
push
loopne
pop
mov
jp
les
cmp
inc
outsl
mov
xlat
hlt
add
cwtl
xor
aas
mov
inc
orl
cmpsb
push
not
xchg
bound
out
mov
arpl
cmp
mov
and
js
and
cmp
pop
test
mov
adc
adc
lods
push
test
inc
adc
jne
pop
fdivr
xorps
and
adc
lahf
mov
pop
jle
pop
imulb
xor
out
enter
daa
add
jle
les
das
std
xchg
in
sbb
jmp
pusha
pop
mov
dec
out
mov
ja
xchg
cmp
and
xchg
out
aad
mov
notb
pop
jno
push
neg
push
fcoml
ljmp
iret
mov
sub
dec
scas
rcll
lds
sbb
xor
nop
jnp
mov
std
sahf
mov
iret
out
cwtl
clc
mov
fldt
dec
xor
loop
sbb
jmp
subb
dec
dec
mul
or
clc
gs
repz
stos
xchg
ret
fidivs
jl
xchg
sbb
dec
in
dec
and
leave
ss
push
jae
or
and
and
or
mov
jle
stos
stos
add
xor
movsb
in
sub
sbb
sbbb
stos
pop
jmp
fs
push
sbb
mov
jbe
sub
or
inc
outsb
test
notl
roll
movsbl
movb
pushf
setge
mov
setge
lea
call
pushf
lea
je
push
jmp
arpl
xor
jg
push
and
push
sbb
ret
cwtl
clc
cmpsb
dec
xchg
data16
mov
lock
clc
outsl
mov
jle
xchg
cwtl
ret
and
or
sarb
test
inc
test
dec
jbe
cwtl
insb
lret
push
pop
das
lret
fisubrs
daa
xchg
pop
or
sub
push
jo
imul
lds
xor
add
xlat
xchg
push
inc
insb
mov
lock
inc
in
lret
jnp
iret
ror
xchg
mov
das
pop
pop
fdivr
adc
add
cli
sub
jmp
cmc
push
les
pop
push
rol
jg
sub
fcoms
inc
outsl
push
lahf
xchg
std
leave
lock
and
pop
sbb
fidivrl
pop
and
aaa
cmpsl
arpl
dec
cmpsb
jae
sub
jbe
or
xor
xor
orl
pop
cmp
xchg
dec
out
popa
out
adc
jae
jo
sahf
add
jle
push
adc
lahf
in
sbb
mov
mov
out
fdivp
adc
cs
jnp
in
fs
jne
test
mov
bt
ror
pusha
stc
sub
btc
ror
movsbw
lea
movw
pushf
sub
push
mov
cmp
stc
pushl
popl
test
bt
clc
test
cmp
pushf
call
pop
push
mov
jmp
add
dec
outsl
popa
fs
imul
add
std
dec
push
xor
test
mov
fnstcw
mov
clc
push
dec
ljmp
inc
aas
gs
clc
cmp
imul
add
out
jno
inc
sbb
mov
fstpl
pop
push
mov
xchg
push
xchg
popf
pop
push
fs
scas
mov
inc
mov
mov
sub
movsb
insb
in
dec
stc
frstor
ss
xchg
std
movsb
test
stos
jae
cmpsl
leave
xchg
cltd
insb
sub
xor
jg
sar
inc
pushf
popf
mov
fdivr
mov
push
jge
add
filds
cmpsb
sbb
push
ljmp
scas
pushf
ret
sbb
cli
dec
push
scas
adc
gs
rcrl
xchg
cli
cmpsl
inc
out
xchg
sub
xchg
push
push
sbb
cmpsb
and
xchg
repz
sbb
js
mov
mov
mov
inc
test
fdivr
cltd
addps
loop
mov
fdivr
hlt
inc
cmpl
mov
lds
push
fildll
push
scas
cmc
lret
add
sbb
inc
bound
xchg
js
jmp
dec
adcl
xchg
lret
add
push
out
pusha
add
fnstcw
lods
cmp
mov
mov
mov
lds
mov
cld
xor
cmpsb
loope
and
push
pop
jno
cmp
ret
loop
inc
cs
leave
pop
fdivr
sahf
out
fildl
enter
xchg
rorb
push
mov
mov
hlt
sub
daa
add
jns
fisttpl
jno
out
es
insb
out
xchg
pop
or
xchg
std
ljmp
loopne
ret
rolb
stos
insl
xor
pop
dec
insb
aas
jl
adcb
mov
jge
scas
pop
inc
dec
outsl
pop
fdivr
cld
inc
jb
in
test
pusha
fwait
sarb
mov
stos
mov
repz
push
push
adc
sub
fsubl
inc
leave
js
pop
xor
mov
xor
jmp
fwait
sub
cmpsb
lods
xchg
mov
fs
daa
sub
bound
cmp
jp
movb
mov
pop
push
push
aam
fsub
push
ljmp
rcrb
add
add
or
daa
outsb
pop
fdivr
sti
inc
icebp
push
aad
inc
imul
loopne
dec
xchg
ljmp
push
icebp
jmp
out
or
push
pop
add
movsb
push
adc
xor
divb
ja
fdivp
sbb
dec
dec
out
stc
jno
daa
cwtl
jle
insb
and
pop
xchg
fs
idiv
test
jne
adc
ds
imul
push
xor
and
fdivs
sbb
xchg
or
int
lock
jne
xor
in
ljmp
and
lcall
pop
ja
cwtl
jecxz
sti
sbb
and
decl
jmp
bound
dec
mov
cwtl
andl
push
mov
leave
cmpsl
int3
pop
sti
ljmp
adc
rorb
in
out
or
cmpsl
pop
xlat
call
in
push
xlat
mov
mov
jge
jl
jl
aas
cltd
sbb
and
mov
in
add
mov
int
add
sar
cmp
insb
xlat
pop
xchg
jne
inc
jp
inc
out
sub
fstps
cld
mov
inc
stc
ljmp
cmc
rorb
adc
add
mov
mov
pushf
lods
mov
rol
jmp
movl
movb
pushf
pusha
lea
jmp
lea
jne
shrd
rcl
mov
shl
sub
btc
mov
cmp
call
pushf
jmp
mov
pushf
neg
clc
ror
movw
bt
pushf
neg
bt
jmp
jno
sub
std
ds
mov
push
es
dec
pushf
cmp
xor
cmp
les
mov
xlat
in
js
pop
pop
jp
dec
ja
jno
and
ja
in
loopne
or
stos
mov
out
or
shrl
dec
dec
cmpsb
sub
nop
adc
xor
into
fwait
arpl
add
inc
insl
pop
movsl
not
enter
jb
shl
push
movsbw
push
sub
stc
pushf
mov
lea
mov
call
push
pop
mov
lea
pop
and
mov
jl
jnp
fsubl
aas
and
icebp
iret
mov
adc
pop
push
ror
cld
jae
test
pop
lea
out
push
cmp
push
pop
sbb
xchg
adc
movsl
movl
insb
pop
movsl
mov
in
cwtl
test
ror
in
lret
lock
pop
dec
mov
mov
inc
lea
adc
imul
mov
ja
aam
dec
mov
push
fdivr
xchg
loopne
int
movsb
ljmp
std
fisttpll
xor
int
jns
leave
inc
pusha
fldt
repnz
add
leave
adc
push
imul
cmp
lahf
mov
mov
mov
xchg
rcr
imul
push
cld
xor
mov
xchg
push
sbb
mov
in
or
fidivl
orl
negb
cmpsl
xchg
pop
adc
lea
jne
and
cmp
mov
cmp
add
call
sub
std
repnz
cmp
adc
clc
movsl
mov
aas
xchg
xchg
pop
fdivrl
movsb
outsl
or
outsl
bsf
push
jecxz
bound
aad
mov
jecxz
mov
ret
pop
xchg
and
sbb
int3
bound
cmpsl
push
mov
mov
test
das
push
cltd
je
subl
add
add
pop
mov
dec
jl
pushf
jecxz
mov
pop
out
sarl
jns
adc
ljmp
push
gs
imul
outsb
je
js
dec
gs
jo
add
jns
push
fdivr
rcrb
cmp
dec
insb
push
pop
pop
out
push
orb
and
add
les
xor
fisubrs
loopne
or
fbstp
pop
stos
push
sti
int
push
movsl
adc
jmp
sub
jl
jno
mov
inc
ja
pop
in
loope
pop
add
rcrb
dec
lret
inc
in
rol
push
mov
es
lods
add
outsl
push
inc
add
jae
in
push
fnstenv
pop
negb
std
movsb
addb
pop
push
aam
sbb
mov
xchg
cmpsb
daa
cmc
mov
test
push
fdivr
cmpsl
cmc
mov
mov
dec
shlb
nop
and
aas
dec
lods
daa
add
xor
mov
fidivrs
cmp
iret
out
pop
cs
scas
jecxz
xor
outsl
cmp
or
xor
adc
shr
daa
fcmovu
cld
clc
cmp
dec
sbb
lret
dec
adc
ret
lcall
fdivr
mov
sub
mov
push
cmpsb
adc
push
fucom
sbb
rcrl
call
idiv
insl
push
lods
dec
mov
xchg
lret
mov
enter
add
or
cld
xor
xchg
pop
frstor
sahf
iret
push
jns
out
mov
pop
add
nop
pushf
ror
mov
jge
lcall
test
sbbl
pop
mov
btr
pop
push
cli
daa
into
xchg
cmp
sarl
dec
loop
sahf
cmpsl
pop
xor
xchg
lock
fdivr
jne
xchg
sbb
pushf
jmp
leave
call
scas
jnp
imul
ret
xchg
add
cmp
mov
roll
lret
xchg
rcll
jge
sub
jge
ja
subb
arpl
push
sbb
sbb
adc
insb
div
jnp
cmp
dec
cmp
sbb
outsl
and
cmpl
fwait
nop
rorb
out
imul
sbb
imul
pusha
mov
bound
mov
cs
push
push
fdivr
adc
stos
in
ljmp
inc
mov
xchg
adc
add
pushf
push
mov
push
push
loopne
xor
and
mov
add
add
test
dec
aas
lret
cmp
sbb
addr16
dec
mov
les
and
ss
add
mov
dec
pushf
movsb
dec
cmp
out
cmpsb
in
fldpi
insl
cmpsb
jbe
or
xor
std
mov
pop
jg
shl
mov
sbb
outsb
ljmp
out
and
jns
pop
xor
jno
sbb
pop
repnz
pop
mov
imul
mov
cmc
arpl
mov
sbb
or
hlt
dec
jge
movsb
subl
mov
dec
cmp
ss
inc
ret
fwait
inc
aaa
in
mov
je
mov
loop
inc
popa
dec
push
xchg
cmp
push
cmc
rcrb
cs
repnz
ljmp
imulb
in
fistpl
in
jb,pn
pop
mov
pop
cmp
and
les
lahf
jmp
or
mov
sub
xor
nop
setle
sub
mov
mov
pop
or
cmc
mov
dec
cmp
popf
push
jecxz
push
and
push
mov
jmp
pop
cs
or
pusha
mov
aam
sub
xor
push
or
lods
jo
mov
fadd
test
and
loop
inc
xchg
cmp
shrb
ljmp
dec
ret
or
ja
ja
lea
cmp
shll
ja
push
push
testl
jmp
jmp
std
mov
stos
out
sub
and
cmp
test
push
lahf
and
cli
imul
sbb
sub
rcrl
jg
push
or
aad
mov
enter
sbb
mov
outsl
lea
jge
pop
xlat
pushf
add
pushf
repnz
cmpsb
xchg
addb
sub
xchg
lods
ljmp
aas
outsb
cmpsb
cmp
std
sub
dec
xchg
scas
scas
jmp
fisttps
mov
bt
clc
bt
sub
pushl
bt
repnz
mov
lea
jne
bt
btc
mov
and
bsf
not
neg
sub
shl
clc
mov
pushf
pusha
call
shl
bts
rcl
sbb
mov
clc
pushf
bt
clc
cmpb
pushf
lea
jne
stc
sar
xor
sar
aas
or
mov
mov
not
add
test
pushf
sar
rcl
mov
bt
pushf
bt
jmp
cmp
sub
push
pushl
popl
jmp
movsl
or
out
mov
fldcw
addr16
and
in
cmpsl
add
aaa
pusha
fisubs
mov
add
movsl
shll
jns
sbb
push
push
xchg
inc
push
xchg
std
loopne
jmp
or
push
das
jnp
rorb
pop
fwait
cmp
sti
rcrl
mov
xor
cmp
add
call
aaa
repnz
std
sub
mov
mov
inc
loop
and
lea
out
xor
jg
push
dec
mov
stc
les
imul
fldenv
int3
mov
mov
cltd
das
les
ret
cmpl
popf
sbbb
cmp
inc
arpl
and
and
xchg
in
sub
cltd
pop
stc
daa
jo
call
pop
addr16
je
test
pushf
add
cmp
bt
cmp
mov
lea
jb
cmp
clc
pusha
cmp
push
pusha
jmp
add
mov
pusha
cmpb
jmp
xchg
daa
dec
fdivr
inc
lea
jmp
mov
cmp
xchg
jg
loop
aad
jno
pop
or
dec
fisttpll
jbe
daa
sub
out
pushw
pop
push
pop
sbb
pop
icebp
cmc
ret
in
mov
dec
clc
leave
pop
outsb
test
dec
aaa
sahf
cwtl
cmp
jmp
mov
inc
sbb
daa
and
push
das
data16
xchg
dec
addr16
sub
adc
fcoms
stos
sbb
add
das
icebp
push
mov
inc
push
mov
mov
mov
mov
rcll
push
loop
jg
rorb
test
pop
mov
sub
xchg
ss
and
mov
call
or
jp
mov
xchg
aas
dec
cmp
ret
mov
test
in
and
es
inc
sub
jb
push
add
pop
push
mov
aad
cmpsl
pop
push
mov
cmc
repnz
dec
iret
aaa
es
push
fwait
lds
mov
and
mov
dec
pop
gs
inc
mov
in
jp
aas
gs
loope
aas
mov
xor
fdivrl
add
test
push
rolb
mov
mov
sahf
dec
jp
hlt
push
mov
mov
subb
adc
ja
dec
fdivr
fsubs
jne
insb
test
sbb
xchg
mov
cmc
aas
xor
and
pop
out
adc
lods
addr16
push
out
mov
and
movsl
out
sbb
hlt
pop
lcall
sub
ror
xchg
loopne
mov
int
mov
xchg
pop
jg
inc
outsl
fs
mov
lret
pop
jge
inc
inc
and
je
xor
in
gs
into
adc
mov
aam
popa
or
aas
stc
dec
sti
sahf
dec
popf
push
xlat
mov
cwtl
out
mov
mov
std
sub
and
fwait
loop
mov
lret
sbb
in
and
cmc
clc
add
rcll
mov
aad
enter
pop
xor
gs
jo
and
pushf
or
pop
lret
fcompl
xchg
push
dec
xchg
int3
or
dec
daa
test
in
xchg
xchg
mov
mov
xor
xor
jmp
je
mov
pop
push
shl
data16
sbb
lods
data16
xchg
or
mov
call
add
neg
mov
bt
test
cmpb
pusha
pusha
pushf
lea
jne
movzbw
add
inc
bt
sub
pusha
mov
push
pushl
lea
jmp
shlb
pop
dec
fdivr
or
jns
fisubrs
cld
sbb
or
das
shrl
movsl
mov
add
xor
xorl
addr16
and
icebp
popf
lcall
mov
mov
inc
inc
xlat
sarl
in
outsb
or
add
dec
sub
adc
add
test
mov
bound
push
sbb
in
jmp
iret
iret
decl
push
fwait
std
sbb
xor
icebp
sahf
inc
outsb
scas
out
in
loopne
ds
adc
call
fidivl
imulb
mov
call
sub
dec
fdivr
jge
pushf
ljmp
int
adc
fnstcw
add
call
dec
mov
push
inc
scas
inc
cmp
mov
dec
cld
repnz
dec
pop
mov
out
mov
scas
in
mov
movsb
mov
ret
scas
lcall
adc
popf
andl
jno
sbb
xchg
cmp
xor
movsb
cmc
and
mov
cltd
lea
jmp
lea
ja
pushf
jmp
call
push
lea
je
pushf
sub
cmp
jmp
call
movl
call
call
dec
dec
inc
push
push
dec
xor
cs
dec
dec
add
or
jmp
ret
cmp
cmpb
push
pushf
lea
jne
bswap
xor
movsbw
jmp
and
push
jmp
mov
pop
or
hlt
bound
mov
nop
jb
adc
lret
sub
popa
xor
into
pop
xor
cmpl
pop
out
inc
scas
inc
or
xchg
xor
test
jp
mov
mov
mov
mov
mov
adc
add
mov
faddp
mov
cltd
inc
pop
pop
pop
pushf
sbb
shll
insb
imul
cmp
jg
jnp
in
cmp
sub
aas
loope
and
jp
mov
add
sbb
std
dec
sbb
repnz
daa
leave
nop
mov
popf
lods
or
dec
mov
aaa
push
xchg
xlat
push
jo
jge
sbb
in
and
iret
mulb
xchg
dec
cs
adc
loop
shl
add
push
test
push
mov
mov
daa
and
ret
aad
mov
data16
stc
push
neg
fnsave
nop
cwtl
jl
sub
test
xchg
fists
mov
fldenv
lret
add
add
pop
jmp
add
add
add
or
add
or
add
or
add
cld
or
add
add
addb
add
or
add
clc
rorb
add
add
addb
add
or
add
std
cld
or
add
cmp
add
decl
mov
out
add
xchg
or
add
add
add
xor
add
call
data16
and
std
dec
xchg
fists
iret
sbb
outsb
mov
inc
inc
stos
sub
add
mov
push
test
push
jno
test
into
arpl
adc
push
push
lea
hlt
mov
xchg
shlb
push
push
push
or
or
or
loope
outsb
dec
lods
lods
outsb
outsb
lea
rcl
jecxz
xchg
cmpl
popa
aas
out
mov
sarl
fistpl
daa
jmp
test
fdivr
mov
fmuls
mov
mov
sub
xlat
xchg
jno
fs
xor
xor
rorb
mov
jmp
cld
add
shlb
and
sti
ret
leave
arpl
lods
pop
mov
int3
sbb
and
push
push
fidivl
aas
enter
push
insl
push
cmp
fs
movsb
xchg
pop
push
dec
add
cld
mov
mov
mov
jae
or
or
stos
in
test
pop
mov
outsb
mov
lods
push
pushl
pusha
lea
jne
mov
xor
push
mov
xor
or
add
seto
mov
pushf
test
pushf
pusha
jmp
mov
aaa
inc
fdivr
xor
inc
in
push
mov
aaa
push
mov
or
outsb
adc
push
xor
mov
jmp
int
jae
cmpsl
pop
jp
int3
xchg
jns
or
fs
cltd
fisubrs
mov
inc
insl
pop
daa
mov
loopne
call
xor
hlt
mov
mov
clc
mov
mov
mov
lds
xchg
aad
jecxz
dec
xchg
in
mov
test
pusha
movl
pushl
call
cs
jle
fdivr
jmp
flds
mov
or
in
loopne
mov
leave
xor
cwtl
popa
data16
into
lcall
loop
stos
negl
push
mov
loopne
xor
into
mov
cmp
pushf
lret
rcrb
mov
pop
popa
shll
scas
stos
rclw
dec
mov
pop
in
push
and
cmc
xor
mov
es
cmc
cmp
inc
loopne
fdivr
test
jp
jmp
loope
mov
dec
jb
xchg
pop
orl
les
xchg
sbb
arpl
dec
gs
sbb
popf
cld
mov
cmc
or
adcb
push
mov
mov
loopne
or
or
jae
mov
and
mov
pop
xchg
mov
sub
push
pop
mov
cli
and
add
inc
ret
inc
cltd
cmp
aam
mov
push
xor
sbb
mov
sbb
mov
jp
pusha
int3
sbb
push
jbe
pop
adc
inc
cmp
jno
or
xor
dec
sbb
aam
lods
dec
ret
cmp
or
add
loop
mov
cwtl
mov
mov
movsl
notl
mov
dec
mov
pop
stos
jmp
ljmp
sbb
pushf
jmp
and
out
inc
fdivr
jl
fwait
iret
or
pushf
mov
cmc
test
jge
das
pushf
cmp
insb
jae
dec
push
popa
lods
and
mov
sti
loop
orb
fldcw
jo
andl
in
push
or
xor
or
lahf
mov
cmovne
or
mov
mull
fpatan
pop
pusha
dec
dec
in
mov
stc
xor
es
inc
orl
shlb
adc
pusha
sub
jge
fdivr
ljmp
rclb
test
icebp
cmpsl
sub
sahf
xchg
fsubl
xchg
adc
cmp
mov
mov
test
popa
lods
bound
lock
int3
adcb
clc
inc
loop
lods
stos
mov
and
shrl
xchg
popa
sub
stc
aad
jns
out
jnp
inc
movsb
lock
push
cwtl
adc
adc
push
arpl
lret
jbe
xchg
adc
adc
pushf
cmp
mov
and
dec
notl
not
jae
insl
loop
adc
das
jge
divl
test
stos
xor
stc
jne
clc
mov
lods
jg
loop
inc
arpl
ss
jne
in
sub
mov
ss
pushf
sbb
lods
push
inc
sbbb
mov
mov
and
stos
jp
je
lods
cld
stc
or
cmp
arpl
xchg
xchg
xchg
pushf
jmp
add
push
gs
jb
popa
je
dec
gs
js
add
add
je
jb
gs
gs
fs
imul
sbb
decl
xchg
add
pusha
jmp
dec
shl
inc
fdivr
test
mov
jle
jae
jl
jl
xchg
sti
popf
inc
push
das
jp
push
mov
inc
push
jbe
cld
sbb
and
shll
fldt
fcmovbe
xlat
repz
pushf
jno
testl
pop
push
aam
mov
cmpsb
pop
or
ret
jp
push
rcl
xchg
xchg
inc
adc
push
or
test
es
test
jp
call
inc
and
mov
mov
pushl
ret
inc
jmp
inc
fdivr
and
mov
xchg
ret
or
pop
mov
in
pusha
inc
xchg
ficomps
pop
or
push
lods
inc
popa
pusha
mov
repz
out
les
in
clc
adc
mov
push
out
dec
pop
sub
imul
mov
rclb
push
aaa
rorb
in
or
enter
scas
std
push
pop
cmp
rolb
ja
popf
jnp
dec
in
and
mov
mov
std
xchg
xor
xchg
xlat
xchg
lds
inc
fdivr
and
into
ja
in
pop
mov
clc
sub
jne
je
mov
pop
push
sub
leave
add
jl
cmp
negl
fcoml
ret
lds
into
das
xor
jne
mov
mov
lret
imulb
orl
mov
outsb
jg
and
insl
push
gs
and
stos
clc
pop
or
or
adc
int
jl
fdivr
jmp
xchg
sar
nop
sub
aam
and
mov
daa
scas
ficoml
std
ss
iret
shll
xchg
inc
ja
iret
roll
add
out
jl
dec
add
sub
ret
xlat
repnz
iret
mov
ja
xor
addr16
bound
mov
paddusb
add
mov
inc
in
vpsubusb
sub
inc
adc
das
shl
mov
xorb
sahf
inc
aaa
mov
jbe
or
xor
jae
mov
mov
add
mov
testb
inc
clc
icebp
sub
or
push
adc
add
mov
xlat
and
or
mov
fdivr
mov
ss
lods
hlt
push
push
adc
xor
cmpsb
andl
push
cmp
push
jmp
jne
outsb
test
loop
and
sti
jne
repz
inc
mov
sub
ja
mov
cs
stc
stos
cltd
outsl
sbb
pusha
xor
loop
iret
jp
je
cltd
jl
adc
pop
lret
roll
pop
lahf
bound
mov
dec
pop
mov
out
fwait
lea
inc
fdivr
pop
sub
cltd
fimuls
in
stos
out
mov
std
cmpsl
pushf
jnp
mov
lods
xchg
std
pop
push
bound
fisubs
es
fcoms
popf
lret
into
mov
and
xor
into
lcall
scas
test
mov
jne
and
mov
call
not
pushf
pushf
inc
jmp
es
mov
test
or
lea
sbb
clc
add
pop
mov
dec
jno
sbb
mov
ret
mov
rcrl
dec
jge
aaa
inc
inc
xchg
jg
adc
hlt
jl
leave
jp
mov
inc
dec
mov
rol
or
rcr
xchg
xor
and
and
xor
fmuls
mov
fsubs
or
xor
xchg
mull
mov
iret
pop
xor
and
add
fbld
pop
mov
sub
xchg
mov
enter
pop
add
add
xchg
fisttpl
jg
dec
into
sahf
mov
sahf
and
lcall
call
and
movsb
in
jno
and
dec
outsb
fisttps
sub
and
and
and
or
jmp
and
push
sub
inc
gs
push
mov
sti
cmp
push
push
mov
imull
adc
xchg
mov
or
mov
xor
push
mov
cmpl
pusha
insl
xorl
mov
fstl
adc
jae
imul
mov
lcall
pop
lahf
or
or
dec
push
adc
xor
mov
jno
jl
lcall
push
mov
xchg
dec
push
icebp
inc
incl
movsl
jecxz
inc
lea
add
nop
cmp
sub
arpl
pop
adc
sarl
sub
cmpb
int3
sbb
gs
and
dec
ficoml
mov
fcmovbe
lock
or
pop
xorb
xor
inc
sarb
or
xchg
mov
jo
push
cmp
inc
push
xchg
cmp
std
fs
ljmp
filds
xor
mov
repz
and
jmp
out
cmp
pushf
clc
mov
call
sbb
fdivrl
cmp
sbb
mov
int
xchg
js
inc
mov
leave
mov
add
adc
xchg
inc
mov
lods
jns
out
iret
fstenv
push
jns
add
popa
iret
mov
loope
ret
clc
mov
mov
int
xor
sahf
stos
shll
mov
and
les
jns
cmp
and
mov
js
rcr
js
rolb
pop
loopne
mov
int
and
mov
mov
je
ret
je
pop
push
loopne
mov
mov
test
mov
inc
int
mov
popf
jmp
data16
mov
pop
int
insb
jns
dec
xor
int
xor
jbe
rclb
mov
push
int
sbb
add
ror
xor
sub
rcrl
mov
imul
and
inc
loopne
mov
int
xor
pop
mov
or
inc
mov
mov
fs
loop
mov
call
inc
xor
aad
mov
sti
int
es
sbbl
int
fdivrl
mov
pmullw
lods
jns
add
loopne
mov
int
xor
std
rclb
int
hlt
jns
aam
xor
mov
ds
sarb
or
inc
mov
xchg
jns
fmul
sub
shlb
jns
lcall
int
je
aaa
insb
pushf
cld
ret
adc
lret
xor
mov
fs
in
push
out
loopne
mov
int
xor
jb
rolb
int
inc
js
fcmove
jnp
mov
mov
out
lock
mov
xchg
jns
jns
jle
mov
cmp
fidivl
dec
dec
rcrl
int
xor
sbb
popf
loopne
mov
int
xor
shrb
loopne
mov
int
xor
dec
and
pop
shlb
and
push
cmp
int
clc
js
sbb
cld
int
adc
and
pop
mov
lock
cmp
imull
cli
mov
jg
fisubrs
jl
rolb
mov
sub
fcmovbe
jns
add
mov
int
ss
mov
test
and
test
fimuls
cmp
push
js
push
mov
mov
das
int
call
cmp
mov
adc
shl
js
jnp
or
mov
out
int
xor
mov
rolb
xchg
pop
or
push
pop
stc
scas
out
cli
pushf
push
js
or
adc
mov
ftst
addr16
push
pop
sbb
inc
out
fldcw
ja
jge
mov
jnp
dec
mov
xchg
inc
ja
fiaddl
sahf
pop
fucomip
movsb
test
lods
das
int
sbb
pop
adc
ret
fimull
insl
cmpsl
sbb
pop
aaa
sbbl
and
mov
pop
push
dec
fbstp
gs
dec
jl
ja
adc
idiv
pop
outsb
cmp
mov
mov
filds
lock
std
inc
or
sbb
cli
jmp
push
xor
fs
fnsave
sub
pop
inc
in
push
into
fldt
sar
mov
leave
xor
imulb
and
out
pushf
dec
mov
jle
adc
xchg
add
push
ds
in
fnstsw
or
mov
fldenv
push
in
adc
and
lcall
jmp
jmp
rcll
jne
out
xor
loop
aam
xor
lods
jns
or
notb
mov
enter
mov
push
mov
sub
xor
fmuls
js
test
repz
outsb
mov
shrl
sub
xor
add
repz
mov
fistpl
ficoml
dec
or
jno
mov
dec
stc
inc
pop
jne
repnz
xchg
dec
adc
push
rcll
roll
repnz
out
fimuls
dec
inc
and
xchg
push
mov
inc
jb
aad
mov
ja
aas
stc
shrl
or
sbb
xlat
inc
testb
stc
adc
mov
adc
or
stos
sbb
repnz
pushf
mov
pop
add
mov
sub
jp
test
jl
adc
add
mov
rclb
xchg
std
pusha
xor
insl
roll
shll
inc
cld
call
movsl
jl
mov
out
fsubl
iret
xchg
imul
cmp
faddp
mov
push
push
popf
aaa
fidivs
das
neg
aaa
or
cmp
mov
lds
bound
add
into
adc
cmp
pop
test
mov
or
std
icebp
mov
push
cmp
push
mov
test
repnz
dec
jbe
movsl
test
mov
hlt
dec
cmpsb
test
xlat
jne
mov
push
or
mov
test
cltd
push
mov
sti
ret
cmpsb
shrl
dec
stc
lret
les
rclb
scas
xchg
or
push
mov
push
inc
loopne
inc
mov
pop
in
mov
push
pop
sbb
std
push
xchg
ficomps
push
jne
repnz
arpl
cmp
adc
stos
stos
mov
add
mov
fcom
xlat
pop
and
jg
icebp
lcall
test
imul
scas
jl
jne
pop
mov
or
pop
jl
bnd
enter
pop
loopne
mov
bnd
cmpsb
ficoms
pop
mov
cmpsb
push
mov
ror
out
mov
sti
lock
imul
testb
and
xchg
pop
scas
cmpsl
fnstcw
in
pushf
jmp
xchg
push
stos
cmpsl
leave
ja
mov
cmpsl
mov
test
scas
stos
out
jmp
rolb
push
sbb
cmp
mov
sbb
xor
jl
jne
clc
sub
cs
adc
add
cmp
mov
add
cmp
jmp
pop
inc
rorb
cmp
sub
shll
popa
mov
or
lahf
test
fs
jne
sar
or
pushf
btr
mov
pushf
mov
jmp
adc
mov
std
fsubrl
jne
push
rolb
pop
fwait
mov
or
test
mov
divl
jmp
inc
jns
mov
push
dec
movsb
loope
cltd
into
mov
cwtl
ds
cmp
push
out
cmp
dec
mov
lods
das
mov
test
mov
cmpsb
and
mov
jb
inc
pop
cli
lods
rcr
aam
push
cmp
in
mov
rcrl
cmp
test
lods
lods
aam
pop
stos
repz
mov
cmp
arpl
sti
dec
mov
dec
xor
movsb
push
mov
ds
aam
js
cmpsb
idivl
cli
popa
je
inc
pop
inc
dec
lea
push
inc
fmuls
pop
es
jbe
pop
das
fisubrl
fs
push
add
scas
mov
cmp
inc
mov
les
or
xor
in
mov
mov
jmp
pushf
mov
mov
call
clc
stc
stc
shl
call
rcr
ror
mov
pushf
mov
push
bt
not
bt
pusha
jmp
pusha
pushl
push
mov
pusha
repz
popl
push
movb
pushf
lea
jmp
call
movb
pushf
movb
pushl
popl
pushf
pushl
pushf
pushf
lea
jmp
call
and
stc
sub
movsbw
mov
lea
mov
lea
lea
pushf
std
mov
std
push
not
mov
movsbl
lea
lea
lea
push
call
pushl
shr
jmp
cmc
add
lea
je
pusha
pusha
push
mov
pushl
pushf
pushf
mov
pushl
ret
bts
pushl
lea
ja
not
shl
rcl
xor
bts
sub
not
pushf
bsr
mov
test
jmp
pusha
pushf
repz
popl
pusha
mov
push
push
lea
jmp
jmp
pusha
sub
jmp
dec
not
inc
not
inc
or
shl
sub
test
adc
movzbl
push
mov
push
call
lea
jl
push
push
inc
movb
lea
jnp
pushf
decl
push
jmp
pushf
lea
jp
pusha
mov
pushl
push
mov
pushl
pushf
lea
jmp
lea
je
push
pushf
popl
jmp
cwtl
mov
push
mov
pushl
push
mov
mov
pushl
jmp
mov
rcr
lea
xadd
ror
add
movzbw
mov
lea
rol
stc
and
add
inc
mov
lea
not
movzbw
inc
bts
mov
clc
ror
test
btr
rol
add
push
inc
movzbl
call
call
pusha
mov
push
movw
push
movl
lea
jmp
lea
jne
bsr
xorb
jmp
jmp
inc
shr
mov
shrd
shl
mov
stc
pushf
cmc
not
jmp
mov
pushf
pushf
lea
jmp
mov
seta
jmp
mov
pusha
pusha
mov
call
call
pushf
popl
mov
jmp
add
call
pusha
mov
movw
pushf
lea
jmp
call
push
call
clc
stc
cmp
xor
jmp
call
pushf
push
push
pushf
popl
pushf
pushl
popl
mov
pushf
pushl
lea
jmp
push
push
push
pushl
popl
pusha
push
mov
movw
lea
jmp
sub
cmc
shl
mov
setnp
xor
pusha
sub
add
call
mov
push
pushl
lea
jmp
cmc
aad
mov
cmc
rcr
not
bt
mov
stc
push
cmc
add
lea
jg
push
mov
pusha
pushf
pushf
mov
lea
jmp
stc
shr
pushf
pushl
jmp
jmp
mov
pusha
pushl
ret
cwtl
push
not
movzbw
mov
mov
pushf
pushf
movzbw
mov
push
pushf
call
call
pushf
sets
mov
test
test
push
push
sub
pusha
push
cmc
clc
add
call
pusha
pushl
popl
pushf
push
mov
pushf
lea
jmp
jmp
jmp
pushf
or
jmp
cmp
sub
call
cmp
cmp
add
call
inc
push
bsr
sbb
add
not
jmp
cwtl
stc
pushf
sub
pushf
call
pusha
mov
mov
mov
mov
pushf
pushl
lea
jmp
lea
jne
bt
sub
call
push
add
mov
pusha
jmp
setg
mov
sbb
not
xchg
mov
test
setge
mov
cmp
cmp
add
test
stc
shrd
call
movb
pushl
popl
mov
pushf
mov
movb
lea
jmp
push
pushl
add
jmp
dec
pushf
call
sbb
shl
aas
sub
mov
and
mov
test
call
pusha
mov
call
push
pushl
pusha
repz
popl
pushf
pushf
movw
mov
lea
jmp
mov
pushl
mov
pushf
popl
jmp
jmp
jmp
and
mov
bt
add
pushf
jmp
pushf
clc
sub
jmp
jmp
clc
add
std
pushf
call
bt
call
add
pushf
pusha
pushf
inc
clc
cmc
not
clc
call
call
repz
popl
pusha
pusha
pushl
movb
lea
jmp
pushf
pushf
pushf
mov
mov
pusha
movl
lea
jmp
call
movzbw
bswap
jmp
call
mov
pusha
lea
jmp
call
pushf
mov
call
xor
jmp
mov
pusha
push
lea
jmp
jmp
pusha
pushf
popl
pusha
call
pushl
popl
pusha
lea
jmp
pushf
call
movb
mov
call
push
pusha
jmp
jmp
push
mov
pusha
pusha
pushf
popl
movw
lea
jnp
popl
pusha
movb
lea
jmp
pusha
mov
pushl
push
call
cwtl
cmc
mov
sar
or
mov
cmc
add
pushf
pushf
movw
mov
push
pusha
pushl
pushf
lea
jmp
push
pusha
push
mov
push
push
mov
repz
popl
movw
mov
push
lea
jmp
cmc
call
neg
shr
mov
stc
mov
push
stc
pushl
sub
jmp
pushl
inc
lea
js
pushf
push
pushf
mov
push
push
pusha
lea
jmp
repz
popl
movb
lea
jmp
pusha
cld
cmc
pushl
popf
movb
push
lea
jmp
cwtl
mov
lahf
mov
pushf
call
test
sub
pushf
and
pushf
pushf
call
lea
ja
mov
pusha
pusha
lea
jmp
push
shld
lea
jle
pusha
mov
jmp
not
pushf
sub
bt
test
mov
pushl
sub
lea
jo
pusha
movb
movb
mov
movb
movb
lea
jmp
pushl
lea
jne
call
pushf
pusha
lea
je
call
jmp
rol
mov
jmp
call
mov
call
pushf
push
pushf
popl
call
test
mov
shl
movzww
bt
call
pushl
popl
mov
pusha
lea
jmp
stc
pusha
sub
push
pushf
pushf
call
xchg
push
movl
push
call
bt
push
cmp
push
pusha
movb
call
mov
movb
pushf
lea
jmp
mov
mov
pushl
pushf
movl
push
lea
jmp
rol
mov
sar
push
aas
jmp
sbb
jmp
mov
push
pushl
push
lea
jmp
pushf
pushl
push
pushl
popl
pushl
pushf
pushf
lea
jmp
pusha
stc
mul
push
mov
push
push
lea
jge
pusha
mov
call
call
mov
neg
call
movb
pushf
mov
call
lea
jg
pushf
call
mov
repz
popl
movw
pushf
mov
movb
lea
jmp
lea
cpuid
jmp
push
movw
call
xor
jmp
pushf
pushf
pushl
popl
push
pushf
lea
jmp
pusha
test
shr
push
pushf
mov
lea
jbe
push
push
pushf
popl
call
jmp
push
mov
pusha
pushl
repz
popl
pushf
movl
push
movb
lea
jmp
bt
sub
jmp
mov
pushf
pushf
pushl
popl
mov
lea
jmp
pushl
mov
lea
js
pusha
pushf
popl
push
pushf
pusha
pushl
popl
mov
movb
pushf
pushf
lea
jmp
mov
pushf
jmp
pusha
pushf
push
pushf
popl
jmp
pushf
pushl
pushl
popl
pusha
movb
movb
mov
lea
jmp
mov
movzbw
or
jmp
pusha
movb
decl
jmp
pusha
call
pushl
mov
pusha
call
and
mov
push
push
cmp
mov
bt
sub
call
pushl
mov
mov
push
movw
mov
movb
pushf
popl
call
btc
aaa
aaa
mov
clc
jmp
cwtl
stc
sub
pushf
mov
mov
lea
jmp
movzbw
movsbl
shrd
daa
mov
bts
sub
stc
pusha
mov
aad
lea
mov
rcl
shrd
shrd
xadd
mov
bsf
pop
mov
neg
sar
rcl
pushf
mov
sbb
sbb
inc
shr
mov
inc
mov
shld
shl
bsr
cwtl
mov
aaa
cwtl
mov
inc
bt
btr
cmp
pushl
popf
pop
jmp
jmp
pusha
push
mov
pusha
pushf
lea
jmp
pusha
mov
movb
pusha
lea
jmp
call
mov
inc
mov
jmp
neg
movzww
push
test
cmp
add
pusha
jmp
mov
pushl
call
jmp
pushl
pushf
popl
jmp
test
call
jmp
lahf
mov
shld
mov
jmp
btc
cmp
mov
mov
sar
cmc
mov
pushf
push
mov
test
sub
call
bt
not
pushl
xchg
cmp
call
cwtl
lahf
pushf
mov
rcr
cmp
inc
movzbw
mov
bt
or
pushl
mov
pusha
clc
clc
pushl
add
call
stc
push
ror
clc
cmc
add
mov
inc
push
clc
test
bt
mov
jmp
stc
not
mov
jmp
mov
jmp
not
rcr
mov
btc
shr
sar
mov
mov
test
pusha
mov
add
jmp
pushf
pusha
lea
jne
call
call
mov
shl
bsf
shl
bt
not
test
add
add
bts
sub
stc
shl
not
shld
bswap
pusha
rcr
xadd
add
lea
inc
and
pop
sub
cmp
sar
jmp
mov
bt
clc
sub
pushf
mov
push
div
pushl
pusha
pushf
call
pusha
jmp
push
call
call
jmp
pushl
popl
stc
sub
jb
cmp
add
jmp
pushl
popl
pushl
pushf
lea
jmp
push
divl
pusha
jmp
movb
pushf
pusha
repz
popl
push
lea
jmp
pushf
pushf
pusha
mov
pushl
call
push
movb
pushl
popl
movb
movb
lea
jmp
shl
mov
pusha
test
ror
mov
jmp
pushf
mov
push
lea
jmp
push
pushl
dec
mov
bt
stc
stc
not
mov
add
stc
xchg
cmc
cmc
movb
pushf
add
stc
pushl
add
jno
stc
cwtl
call
pushf
call
pushf
popl
pushf
push
push
pushl
popl
pushf
lea
jmp
mov
pusha
movb
pushf
repz
popl
pushf
pusha
pushf
lea
jmp
lea
mov
pusha
movb
movb
lea
jmp
call
jmp
mov
mov
pusha
xor
clc
cmc
add
pushf
jmp
pushl
call
add
jmp
pushf
mov
mov
pushf
pushf
pusha
lea
jmp
mov
push
mov
pusha
call
sub
pushl
mov
movw
movl
lea
jmp
pushl
popl
movl
mov
push
lea
jmp
cmc
add
call
pusha
pushl
mov
jmp
inc
jmp
ror
add
not
mov
call
call
pushl
mov
pusha
movl
pushf
push
lea
jmp
mov
mov
pusha
mov
movb
pushl
ret
bsr
mov
movzbw
shr
and
sub
rcl
rcl
not
rol
neg
push
movsbw
add
push
jmp
cmc
clc
aaa
mov
bt
bt
sub
push
cmp
add
lea
jbe
pushf
call
pushf
push
mov
movw
push
pusha
mov
lea
jmp
call
jmp
mov
jmp
lahf
not
sbb
clc
mov
call
test
pushf
push
sub
push
mov
pushf
pushf
pushl
lea
jmp
pushf
pushf
pusha
push
mov
jmp
push
pushf
call
pusha
pushl
popl
pushf
pushf
lea
jmp
pushf
pushf
popl
pusha
call
jmp
push
pusha
pushf
popl
call
add
test
call
clc
call
pusha
movb
mov
pushf
lea
jmp
movb
pushf
pushf
mov
pushf
mov
pusha
mov
pushf
movl
push
lea
jmp
pop
pop
mov
push
pushl
ret
pusha
jmp
rcr
adc
xor
mov
bts
shrd
mov
clc
cmp
push
add
mov
call
pushf
mov
pushf
lea
jno
push
lea
jne
movsbw
shl
bswap
mov
pusha
mov
and
bt
test
test
pushf
cmp
call
btr
btr
mov
pushf
pushf
call
mov
pusha
pushl
popl
mov
push
pushf
lea
jmp
jmp
pusha
add
jmp
jle
pusha
mov
movb
call
pushf
pushl
popl
mov
lea
jmp
not
jmp
pusha
decl
movw
pushf
mov
movw
lea
jne
jmp
sub
clc
clc
shl
push
pusha
jmp
add
pushf
sub
pushf
mov
pushf
mov
movb
mov
lea
jmp
mov
pushf
call
adc
mov
clc
bt
bt
stc
add
pushf
pusha
lea
jmp
movb
call
lea
jno
pusha
repz
popl
mov
pushf
lea
jmp
call
ror
bts
or
mov
jmp
add
mov
dec
sbb
cmp
add
das
add
push
add
add
dec
push
jmp
dec
sub
add
xchg
add
out
add
and
dec
pop
push
add
sub
dec
pxor
dec
or
add
push
add
push
add
mov
dec
sub
dec
sub
add
mov
dec
sbb
add
imul
dec
push
mov
dec
push
jbe
dec
sub
add
outsl
add
insb
add
sbb
add
sbb
add
jmp
dec
pop
push
add
sbb
add
aad
dec
push
sub
dec
pop
outsl
add
and
dec
sbb
dec
sub
add
and
dec
sub
add
pop
add
and
dec
pop
push
add
xchg
dec
sub
and
dec
and
add
mov
dec
mov
dec
jns
add
mov
dec
mov
dec
pop
push
add
xchg
dec
es
dec
mov
dec
or
add
xchg
dec
or
and
dec
adc
dec
sub
add
and
dec
adc
add
das
add
and
dec
pop
push
add
xchg
dec
push
add
dec
mov
dec
adc
dec
sub
add
and
dec
sub
xchg
dec
sub
and
dec
sub
xchg
dec
adc
add
lock
xchg
dec
sbb
add
and
dec
sbb
add
xchg
add
and
dec
sub
xchg
dec
sub
add
imul
dec
pop
test
dec
and
add
or
dec
sub
add
mov
dec
sub
add
mov
dec
push
sub
dec
adc
add
addl
dec
sub
dec
pop
cld
add
aad
dec
sbb
adc
dec
push
push
add
addl
dec
pop
pop
add
mov
add
and
dec
sub
dec
or
add
cld
add
pop
add
pop
add
jmp
dec
push
push
add
popa
add
add
dec
and
add
popa
add
and
dec
push
sbb
add
mov
dec
and
push
add
xchg
dec
and
add
xchg
dec
sub
add
jbe
dec
sbb
pop
test
dec
sub
push
add
lock
push
add
mov
dec
push
sub
dec
sbb
sbb
add
addl
dec
adc
add
fadds
dec
and
add
repz
mov
dec
adc
add
pop
add
add
dec
sub
dec
and
add
popa
add
imul
dec
sub
add
mov
dec
adc
add
and
dec
push
add
dec
jns
add
pop
add
addl
dec
adc
mov
dec
sub
add
xchg
add
das
add
iret
add
lock
cld
add
xchg
dec
sub
dec
pop
pop
add
mov
dec
or
add
push
add
sub
dec
or
cmp
add
aad
dec
sbb
add
test
dec
adc
add
push
add
jbe
dec
adc
add
aaa
add
das
add
sbb
add
sub
dec
and
add
popa
add
mov
dec
push
add
dec
push
xchg
dec
sub
add
sub
dec
sub
popa
add
mov
dec
or
add
push
add
lock
push
add
push
add
xchg
add
aaa
add
das
add
imul
dec
and
xchg
add
cli
add
out
add
mov
dec
sbb
add
popa
add
add
dec
sub
lock
lock
dec
add
sbb
dec
sub
push
pushl
popf
movw
pusha
mov
lea
jmp
mov
movw
lea
jmp
mov
lea
rcr
rcl
mov
cmc
cmc
add
jae
popf
pushf
pushf
lea
jmp
pusha
lea
je
push
pushf
movb
repz
popl
push
lea
jmp
jmp
call
test
pusha
sub
jmp
pusha
jmp
pushl
mov
push
pushl
mov
lea
jmp
jmp
jmp
push
mov
mov
pusha
lea
jmp
mov
movb
lea
jmp
pushf
push
not
pusha
lea
jnp
inc
stc
stc
not
test
jmp
sub
test
bt
mov
pushl
cbtw
clc
bt
jmp
jmp
mov
movb
lea
jmp
mov
jmp
mov
mov
pushf
lea
jmp
mov
pushf
lea
jmp
jmp
pusha
pushf
pushf
pushf
pushf
popl
call
rcl
mov
cmp
bt
stc
sub
call
call
rol
btc
btc
rcl
movzbl
and
adc
add
dec
pusha
inc
inc
pusha
not
push
lea
call
mov
jmp
aaa
pusha
rcl
mov
clc
pushl
ror
mov
call
call
inc
cmp
not
pusha
xor
movw
add
call
repz
popl
sub
neg
shrd
cmp
xor
push
bt
cmp
shrd
push
inc
shrd
mov
push
cmp
cmc
shld
setle
push
xadd
sub
test
push
xadd
clc
push
inc
btr
shld
adc
push
cmp
pusha
ror
pushl
popl
btc
clc
movl
pushf
call
jmp
push
mov
pushl
lea
jmp
cmc
mov
dec
shl
jmp
pusha
mov
pushl
jmp
jmp
and
push
test
rol
mov
dec
push
bt
rcr
mov
cmc
stc
sub
jmp
bt
sub
mov
shl
pushf
call
repz
popl
pusha
lea
jmp
mov
cld
pusha
pusha
rep
call
add
jmp
not
rcl
bt
mov
sub
cmp
mov
pushf
add
call
pushf
pushl
mov
push
repz
popl
pushf
pushl
pusha
lea
jmp
sub
shld
sar
lea
jmp
sar
sbb
mov
stc
cmp
add
pushf
push
movb
call
pushf
movw
pushl
popl
movb
push
mov
lea
jmp
not
cmc
stc
cmc
and
pusha
push
call
not
cmc
sub
sbb
sub
add
mov
call
pushf
pusha
pushf
push
pushf
popl
call
call
call
add
pushf
jmp
mov
pusha
pusha
repz
popl
movw
push
lea
jmp
inc
pushf
jmp
push
mov
lea
jne
shr
shl
btc
shl
mov
cmc
and
push
clc
push
cmp
pusha
jmp
call
movb
movb
pushl
popl
push
movw
lea
jmp
mov
movw
jmp
cld
xchg
movzbw
mov
jmp
jmp
push
cmc
sub
stc
push
stc
rol
mov
add
mov
add
test
call
add
add
pushl
mov
push
push
pushf
popl
lea
jge
popl
push
pusha
pushf
lea
jmp
jmp
pushf
call
bsr
cltd
shrd
xor
rdtsc
cmp
cmp
sub
call
shrd
mov
pushf
bt
sub
cmp
call
ror
cmc
rcl
add
shrd
cmc
dec
mov
cmp
bt
cmc
jmp
pushf
popl
jmp
pushl
popl
push
pushf
pushf
lea
jmp
jmp
inc
clc
rol
cmc
not
pushf
sub
pusha
jmp
movzbw
bswap
not
pop
push
pushf
push
lea
jmp
sub
lea
jnp
pushf
pushf
pusha
mov
push
lea
jmp
jmp
pushl
mov
pusha
lea
jmp
mov
not
mov
movw
pusha
call
pushl
popl
pushf
lea
jmp
dec
rcr
mov
test
add
push
lea
jmp
mov
call
repz
popl
push
lea
jmp
mov
cmc
sub
test
cmc
clc
clc
sub
jmp
inc
btc
clc
stc
test
mov
clc
bt
push
bswap
pushf
jmp
mov
pushf
lea
jp
pushf
pusha
pushf
popl
mov
jmp
pushf
mov
pushl
popl
mov
lea
jmp
mov
push
push
pushf
pushf
lea
jmp
pusha
not
stc
call
neg
push
das
mov
test
add
pushf
pushf
popl
lea
jne
push
pushl
popl
pushf
pusha
push
push
lea
jmp
jmp
mov
call
jmp
pusha
movw
movw
pushl
popl
pushf
pushf
movb
lea
jmp
movb
call
sbb
btc
mov
shl
ror
sar
rcr
mov
jmp
push
call
mov
mov
mov
pushf
movb
lea
jmp
pusha
lea
jle
pusha
mov
push
movw
pushf
popl
mov
pushf
jmp
rcl
bswap
mov
ror
jns
add
push
lea
jp
mov
pusha
pushf
pusha
pushf
mov
mov
pushf
movw
mov
lea
jmp
jmp
or
test
ror
mov
pushf
jmp
and
pusha
jmp
pushf
mov
pusha
repz
popl
pushf
pushf
lea
jmp
not
mov
jmp
repz
popl
mov
pushl
lea
jmp
push
mov
movb
pushf
lea
jmp
repz
popl
movw
mov
lea
jmp
pushl
popf
push
pushf
lea
jmp
push
mov
movw
push
repz
popl
pusha
lea
jmp
pushf
mov
call
shl
pusha
xor
sub
sbb
movzbw
sar
mov
cmc
pushf
shl
test
pusha
stc
mov
shr
pusha
or
jmp
call
add
jmp
pushf
pushf
pushf
xor
push
pusha
movb
cmc
xchg
jmp
pusha
call
push
call
lahf
push
notl
jmp
mov
pushl
pushf
popl
lea
js
push
movw
pusha
pushl
popl
movl
lea
jmp
mov
pushl
mov
push
mov
pushf
pushf
lea
jmp
push
pushf
mov
mov
pushl
lea
jmp
shl
cmc
bsf
sub
add
and
rcl
cmp
xor
movzbw
setbe
dec
btc
and
adc
movsbw
mov
push
pusha
add
call
stc
xor
pushl
dec
lea
and
add
pusha
movsbw
mov
bt
mov
pushf
sub
push
movb
mov
mov
lea
jmp
cld
jmp
pushf
pushl
popl
movb
movl
lea
jmp
lea
ja
and
rcl
bswap
mov
shl
lea
add
bt
sub
dec
sub
btr
lea
jmp
pusha
sub
pushl
clc
cmpl
call
lea
ja
pusha
inc
call
call
sub
clc
mov
call
movsbw
sbb
shl
bsr
movzbl
pusha
sbb
sub
setb
inc
inc
rcl
bswap
movzbw
not
rol
jmp
push
mov
pusha
pusha
repz
popl
pushl
movb
push
lea
jmp
mov
cmc
jmp
jmp
mov
pushf
pushf
pushl
lea
jmp
pushf
call
movsbl
bt
add
mov
jmp
pushf
popl
pusha
call
cmc
bsf
or
xor
mov
cmp
rcl
add
lea
call
or
mov
test
rcl
mov
test
pushf
cmp
call
pushf
lea
jne
btr
xorb
seta
bswap
not
pop
pusha
push
lea
jmp
movb
mov
mov
pusha
pushf
lea
jmp
repz
popl
movb
mov
pushf
push
lea
jmp
