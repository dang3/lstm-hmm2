push
call
ret
ret
ss
mov
cmp
mov
adc
lret
inc
jl
ljmp
pop
xor
sti
mov
mov
mov
dec
pop
pusha
rsqrtps
push
cwtl
nop
subl
pusha
lds
mov
or
dec
shll
mov
repnz
f2xm1
ss
std
scas
int
clc
sub
cmpsl
test
out
inc
jno
mov
int
das
xor
imul
je
cmc
imul
cmp
dec
jmp
daa
inc
xor
in
pop
addl
jle
mov
jmp
push
leave
into
mov
inc
inc
out
je
icebp
stos
jl
outsl
int3
jecxz
jl
cmp
adc
jmp
fldcw
gs
sbb
and
out
testl
popa
imul
fstpl
dec
jecxz
xchg
imul
dec
cmp
ja
pop
xlat
movsb
sub
lods
adc
inc
stos
outsl
cmpl
sbb
xor
das
mov
lret
jge
or
hlt
mov
pusha
jb
add
clc
std
mov
out
js
lods
ret
or
icebp
mov
or
lock
push
jne
or
ret
movsb
popf
test
dec
popa
sub
xchg
shl
pop
jmp
pop
xchg
stc
addr16
rolb
lea
imull
mov
out
in
jns
sbb
mov
mov
inc
and
push
and
pop
adc
xor
mov
mov
xchg
and
adc
ss
mov
fistpl
pop
lea
inc
jle
adc
jno
mov
jb
and
pop
outsb
cmc
mov
data16
adc
fistl
adc
test
push
sbb
aad
test
pop
loope
cmpsb
dec
mov
shrb
cmp
outsl
scas
mov
and
mov
out
movsb
jae
insb
add
arpl
ret
mov
int3
pop
dec
sbb
icebp
ret
icebp
fstps
adc
sub
cmp
lods
rcrb
in
mov
pop
js
fwait
repnz
ds
pop
test
mov
mov
cmp
mov
push
jecxz
fnstenv
adc
jge
sti
jp
adc
das
dec
adc
fcmovnbe
mov
and
jl
out
sub
pushf
xor
add
sbb
push
clc
call
push
scas
sbb
inc
mov
mov
push
fmul
dec
loope
ret
cmp
push
xor
dec
je
jg
imul
push
sbb
mov
mov
fcoms
or
in
popf
cmp
leave
lods
push
movsb
rcrl
out
dec
stos
dec
or
push
and
pop
repnz
push
pop
notl
and
cmpsl
cmp
repz
into
test
push
push
push
add
lret
das
adc
ret
inc
fists
ss
shl
pop
cmp
mov
call
push
adc
xor
out
je
flds
cmp
fwait
imul
je
inc
mov
fdivrs
cld
cmp
cltd
mov
inc
inc
dec
and
cmc
xor
xor
xchg
sub
mov
dec
cmp
rcrl
sub
mov
mov
sbb
icebp
jno
mov
jecxz
gs
loopne
cmp
outsl
ret
les
or
pop
sahf
mov
push
mov
enter
int3
mov
aaa
mov
in
fcomps
out
push
call
add
cld
push
sub
xchg
adc
shlb
lret
cmpsb
or
xchg
sub
push
sbb
sub
rcl
cmpsl
push
popa
icebp
mov
mov
inc
pop
adcl
in
adc
in
addr16
in
popf
jb
or
sub
data16
insl
xchg
xor
sahf
xor
sarl
out
sub
and
xor
mov
loopne
push
imul
fcmovu
lock
std
inc
cmpsb
popa
sub
mov
dec
cmp
imul
mov
sub
mov
mov
fsubrs
and
int3
rcll
in
in
lcall
scas
ret
cmp
stc
dec
pop
out
mov
cltd
jle
shrl
or
adc
jmp
xor
mov
and
scas
pop
mov
cmp
cmp
xorb
addb
enter
lcall
pop
cmp
testb
mov
subb
xchg
push
ja
lahf
out
mov
sbb
mov
dec
fdivrl
pop
loop
inc
pop
scas
jl
dec
xorb
hlt
pop
sbb
lret
je
add
lahf
xchg
jg
sub
jle
mov
or
pop
cmp
cmpsl
sbb
pushf
pop
push
or
aad
adc
fstps
adc
and
outsb
mov
cmp
or
sub
push
mov
xchg
stos
insl
stos
mov
jp
inc
xchg
xor
cmpsb
jns
popf
xchg
and
imul
aaa
mov
aaa
les
popf
mov
mov
sbb
decl
and
mov
and
sbb
in
pop
in
push
ds
sbb
inc
lcall
jp
jno
mov
and
cld
nop
push
adc
mov
sbb
mov
mov
pushf
mov
les
out
std
mov
sub
xchg
mov
add
dec
add
insb
cmp
xor
xchg
inc
xchg
cs
mov
popf
xchg
sbb
ret
lock
cmpsl
not
lods
xchg
out
iret
and
mov
mov
jae
std
jmp
jmp
lret
sbb
mov
das
jo
cmp
sbb
rorb
popf
cmp
mov
pop
cli
mov
dec
ljmp
xchg
jp
cli
mov
jbe
cmp
imul
add
and
notb
in
xor
psubq
hlt
adc
mov
push
lcall
stos
adc
call
jmp
xchg
sub
test
stos
loope
xor
negl
jge
or
test
jecxz
fistpll
mulb
pop
cwtl
cmpb
shlb
adc
adc
xchg
insb
jns
lcall
dec
adc
bound
pusha
push
sahf
mov
mov
dec
inc
aas
mov
mov
js
fisttps
and
mov
in
pop
mov
cmp
mov
lods
jo
mov
cmp
lods
outsl
fcoms
fbld
mov
cmpsb
out
outsl
add
dec
sbb
jge
cmp
mov
mov
jo
sbb
stos
mov
jle
stc
jno
lock
dec
and
in
test
mov
jbe
rclb
into
adc
movsl
mov
pop
ds
fwait
adc
push
insb
xor
add
mov
mov
rorb
ret
pop
outsl
push
xchg
push
sub
stc
lods
roll
pop
fists
or
jbe
xor
call
inc
insb
into
sbb
inc
xor
cmc
dec
adc
jns
push
ror
xor
ljmp
bound
push
lods
orb
inc
push
mov
sbb
xchg
fsqrt
mov
dec
mov
sbb
push
mov
mov
repnz
loopne
jle
push
rorl
jp
jle
xchg
xchg
rcll
mov
sub
sub
dec
test
icebp
add
mov
leave
sub
mov
cmp
mov
dec
push
cmp
mov
movsb
sub
outsb
enter
lods
push
push
dec
cmc
js
jno
in
mov
xor
aaa
les
pop
or
fcom
notl
jge
notl
cwtl
outsb
or
pusha
lods
cmc
ret
aas
ret
mov
dec
or
mov
mov
in
pop
xor
std
std
nop
push
xorb
pop
mov
clc
fwait
ret
das
xlat
fdivrs
dec
mov
jge
push
adc
mov
mov
inc
unpcklps
sarl
stos
add
mov
adc
mov
ret
repnz
lahf
mov
test
pop
loop
mov
jmp
xor
imul
sbb
push
xor
repz
pop
movsl
sbb
xor
xchg
pop
js
cmp
ds
imul
push
sub
mov
lret
cmp
je
mov
in
repnz
cmc
lods
or
cli
ret
mov
sub
test
sub
pop
sbb
inc
scas
or
movsl
sbb
push
hlt
fsubrl
inc
add
sub
pop
lret
insl
movsl
inc
push
pop
and
push
sub
ret
scas
mov
sbb
int3
gs
and
loope
add
je
cmpsl
xchg
adc
mov
and
rcr
sahf
aaa
mov
test
mov
and
jg
lds
or
test
je
lcall
loopne
fs
cmp
sbb
sbb
dec
test
out
mov
ret
mov
rolb
mov
jecxz
mov
mov
stc
or
add
leave
sarl
xchg
mov
cmovne
lret
fsubr
lods
std
es
pushl
mov
lds
inc
insl
adc
xchg
xchg
lret
lods
jp
fsubrl
xlat
out
shl
xchg
xchg
aad
dec
out
sbb
dec
xor
iret
popf
mov
insl
add
sbb
sbb
iret
add
incl
insb
shl
push
sbb
clc
das
stos
jle
cmp
xor
jle
popa
push
pop
jge
ret
fidivrs
call
mov
je
dec
xor
fcmovu
ja
cwtl
push
dec
fldenv
sahf
jmp
adcl
insb
jb
addr16
push
insl
loopne
lods
lcall
sbbb
jp
pop
in
stos
mov
lods
aam
jp
js
xor
aam
sti
push
mov
aam
cld
leave
cmp
in
inc
sahf
lcall
test
and
pop
clc
jmp
xchg
daa
pop
cmp
sub
daa
ljmp
xchg
push
es
mov
lock
imul
lret
mov
pop
xchg
mov
mov
inc
mov
iret
push
out
scas
sbb
push
insb
test
and
in
dec
and
rorb
pop
dec
mov
push
ds
jnp
jge
inc
push
push
push
ret
push
push
pop
lcall
mov
fiaddl
adc
add
lods
or
outsl
adcb
mov
inc
pop
inc
mov
and
mov
xchg
cmpsb
xor
adc
gs
and
and
sbb
js
pop
sarb
mov
sahf
or
sbb
add
or
pop
sbb
push
inc
sarb
cmp
jae
aaa
inc
add
mov
or
in
xchg
in
in
cltd
push
add
and
jns
cltd
push
addr16
add
outsb
mov
mov
cmc
inc
loope
enter
les
mov
nop
sti
test
jae
pop
xorl
stos
in
mov
inc
ja
adc
insb
mov
nop
jns
or
jne
or
aas
movsb
mov
cmp
aam
xchg
sub
testb
hlt
cmp
lcall
mov
or
push
cltd
and
or
and
push
push
push
dec
cmp
ret
movl
movsb
ret
loopne
xlat
aaa
ljmp
es
hlt
shrb
inc
pusha
lcall
jno
inc
xchg
out
push
and
mov
and
inc
fwait
add
dec
int3
repz
out
push
test
mov
dec
cmp
insl
movsl
xchg
fsubl
icebp
mov
jns
xchg
mov
xor
mov
mov
xchg
jg
pusha
xlat
jno
mov
adc
pop
add
dec
dec
dec
mov
and
jne
pop
xchg
dec
fsub
outsl
mov
xor
sub
sub
movd
mov
add
and
push
shll
mov
cmp
pop
fwait
inc
les
mov
xlat
sbb
mov
lods
push
pop
clc
lds
fwait
mov
movsl
add
adc
mov
adc
leave
jns
and
adc
int3
pop
scas
mov
jg
push
fwait
in
ret
cwtl
push
pop
adc
sub
rclb
dec
or
adc
stc
add
mov
into
mov
dec
cmp
mov
add
mov
adc
pop
mov
sub
mov
cltd
frstor
ror
in
mov
mov
iret
ds
sbb
xor
mov
inc
xor
fistpll
in
pusha
push
sbb
adc
jnp
movsb
push
add
sub
sarb
jbe
loop
mov
push
inc
pop
jo
or
imul
sbb
rorl
cmp
mov
ljmp
push
ja
xor
and
cwtl
adcl
mov
mov
enter
std
sub
es
or
movsb
flds
xchg
pop
enter
outsl
adc
push
scas
jne
ror
mov
loopne
mov
mov
mov
mov
cmp
xchg
adcb
andb
repnz
sbb
in
xchg
xor
mov
cmc
cmp
stos
test
fsts
rol
push
stos
pusha
rorl
out
lods
arpl
outsl
ficomps
add
cmp
fiadds
adc
push
notl
xor
cmc
and
push
stos
sbb
es
jno
lods
mov
imul
into
cli
xchg
andb
cmp
jle
xchg
add
sub
mov
jns
mov
or
dec
mov
mov
outsb
loop
mov
sub
jo
push
addl
and
mov
fs
mov
mov
lea
loop
es
dec
xchg
loopne
jp
mov
jno
cmpsb
in
out
les
cli
filds
leave
stc
mov
or
fisttpl
cmpl
nop
imul
pop
sub
testb
cmc
jg
clc
cmp
fisubl
pop
lret
push
adc
fwait
cmp
imul
jae
icebp
jecxz
test
push
rorb
out
dec
loopne
jmp
in
test
xchg
xor
int
outsl
scas
sub
stc
sbb
and
in
push
jle
push
lret
sbb
mov
or
decb
mov
or
xor
or
cmc
add
mov
fistl
fs
mov
adc
cld
sub
inc
rorl
sub
scas
dec
mov
sar
mov
cs
pop
rcl
add
mov
mov
push
in
insl
clc
inc
push
jmp
push
call
mov
xor
ret
inc
pop
sbb
out
jp
dec
scas
or
scas
jl
ja
cld
pop
xor
in
lods
jno
sarl
int
das
dec
popf
or
sbb
movsb
add
adc
pop
and
movsb
test
cmpsb
pushf
dec
jg
xor
pop
or
or
into
push
scas
push
jle
fs
sbb
add
cwtl
push
and
and
stos
add
sbb
mov
and
mov
or
pop
inc
and
mov
lcall
inc
lods
stc
xchg
push
sbb
adc
sbb
test
mov
inc
jno
repz
push
add
add
adc
jge
adc
and
fimuls
sbb
dec
jns,pt
xor
push
jle
mov
mov
lods
fninit
rcrl
mov
sub
sbb
add
push
pop
mov
add
cli
jp
inc
dec
pop
pop
jp
add
mov
sahf
popf
rclb
ljmp
fcomps
imul
out
loope
icebp
loopne
and
sub
enter
iret
out
xchg
or
jae
mov
das
movsl
lods
stos
and
ret
lea
iret
cld
or
movsb
sub
ret
and
or
dec
pop
sub
pusha
or
adc
mov
and
es
inc
aam
test
mov
jle
mov
or
xchg
out
adc
xor
sub
or
pop
dec
fdivrs
mov
push
pushf
mov
sub
ret
das
adcb
outsb
nop
and
inc
cmp
inc
sub
xlat
xchg
jp
or
jl
inc
jl
test
xor
mov
repnz
inc
andb
jmp
inc
xchg
clc
or
fsts
lods
add
xchg
xchg
js
cmpl
inc
jmp
lds
inc
shlb
adc
xor
cmp
xchg
orl
es
sti
loope
pop
xchg
adc
jmp
ss
and
jne
sub
lahf
adc
fbstp
ret
push
mov
call
push
push
jmp
xlat
leave
into
mov
pop
and
xor
pop
sbb
dec
xlat
js
fbstp
aaa
ja
rorb
fcomps
pop
jle
xchg
scas
es
jmp
popf
pop
movsb
pop
movsl
or
jg
jo
ror
jp
call
or
flds
pop
add
cli
aas
dec
ljmp
lret
pushf
mov
rorb
mov
jb
pop
adc
xchg
jp
icebp
or
sbb
imul
dec
dec
xor
push
enter
aad
outsb
mov
sbb
pop
mov
loopne,pt
popf
loop
movsl
jb
lret
add
test
outsl
int3
das
mov
cwtl
nop
add
push
pushf
cmpsb
push
cmpsl
add
loope
loopne
mov
xlat
mov
test
enterw
aad
test
xor
push
fcomps
orb
div
divb
fistpll
mov
adc
push
inc
pop
mov
pop
hlt
pop
imul
fs
dec
jo
sarb
repz
or
out
sti
pushf
jmp
sbb
lcall
stc
cmp
stos
mov
ljmp
xchg
xchg
jmp
bound
xchg
jnp
mov
cmpsb
imull
mov
dec
cmp
das
and
inc
or
add
bts
mov
repz
call
pop
adc
lock
aas
jecxz
sahf
xchg
mov
shlb
push
pop
xlat
mov
in
mov
leave
sarb
adc
ds
iret
xchg
std
push
fisubrl
dec
jb
dec
nop
mov
lds
and
mov
and
adcb
in
mov
jg
js
dec
psubusw
imul
jne
xchg
repz
nop
decl
xor
or
mov
jecxz
dec
lods
jb
jecxz
je
cmc
lods
push
cmp
jnp
mov
fbld
rorb
pop
cmp
sbb
or
cmp
pop
pop
xchg
movsl
fsts
jns
scas
xchg
pusha
insb
xchg
push
jg
js
and
pushf
xchg
test
mov
cmp
jl
cmpb
add
push
sti
dec
jno
adc
jecxz
lcall
movsl
pop
outsb
out
lods
jecxz
pusha
adc
push
mov
insl
jle
mov
inc
imul
dec
ss
aad
sub
jmp
mov
mov
daa
cwtl
sbb
arpl
xchg
dec
sbbb
icebp
cmp
pop
mov
icebp
adc
mov
fimull
lock
dec
mov
dec
lahf
jmp
xchg
pop
daa
inc
mov
dec
mov
pop
cmpsl
mov
call
testl
adc
cmp
or
or
xchg
jno
fistl
lds
mov
outsl
inc
dec
pop
repz
out
and
cmp
ljmp
je
les
sarb
add
arpl
jo
cmp
ss
sub
and
mov
aaa
dec
sarb
lret
inc
xchg
jle
cmpsb
loopne
popf
cmpsl
shlb
loopne
mov
push
test
insl
je
sub
sub
orl
pop
push
xor
lods
or
lds
hlt
mov
orb
aam
das
adcb
in
fisubs
mov
push
jecxz
call
dec
push
sahf
xchg
and
shrl
xchg
enter
cmpsl
outsl
add
lods
sub
scas
push
xor
jge
cwtl
outsl
ret
inc
adc
fistpl
dec
je
pop
dec
cmp
call
mov
stos
mov
sbb
in
mov
addr16
and
xchg
insl
stos
shlb
sti
xor
mov
pop
xchg
in
adc
fdivrp
cmpsl
leave
inc
inc
lods
mov
xchg
loope
or
and
pop
js
outsb
dec
inc
out
mov
test
mov
cmc
jge
cmp
xchg
test
loope
pop
adc
dec
inc
mov
rcrb
add
enter
dec
pop
popa
out
dec
gs
sahf
ss
lock
sahf
insb
jle
push
popf
cmp
mov
sub
mov
pop
popa
cld
mov
scas
jae
cmp
shrb
cmc
clc
call
out
or
mov
push
scas
xchg
ja
pop
cli
andl
jge
sub
mov
pop
stos
pop
push
jecxz
jae
xlat
mov
mov
into
iret
push
shrl
enter
jp
sbb
or
add
movsb
pop
arpl
or
lods
adc
push
or
idivl
test
jnp
test
iret
mov
rcr
outsb
cmp
jae
and
cmpsb
mov
dec
fwait
arpl
and
das
push
call
or
xchg
pop
test
sbb
std
jg
xchg
daa
and
push
pop
mov
lret
lea
inc
iret
mov
jae
add
jbe
ret
je
push
xchg
out
sahf
xor
dec
mov
xor
push
shl
clc
sti
adc
out
pushf
cmpsb
add
mov
call
mov
push
mov
xchg
cltd
lods
push
or
push
jp
inc
repnz
add
xlat
adc
test
push
stc
loop
fnsave
cltd
dec
xchg
lret
imul
xchg
into
sarl
imul
shrb
shrb
ds
inc
inc
fadd
cld
and
out
ss
stos
push
outsl
mov
xchg
fstp
sarl
test
aam
mov
xor
in
popa
and
fdivs
fisubl
dec
add
pop
fstps
sbb
jle
mov
and
mov
int3
cs
jl
ds
mov
sub
xchg
inc
sub
subl
sahf
mov
xchg
inc
imul
rcrl
mov
add
stos
insb
ja
mov
xor
sbb
push
cmpsb
inc
rclb
jmp
roll
nop
sbb
add
mov
test
mov
out
rolb
mov
cs
pop
dec
xchg
add
dec
stos
test
cmpsb
mov
mov
or
or
cs
or
testl
jne
cli
sub
insl
or
call
testl
pusha
sbb
jl
pop
ljmp
xor
pushf
mov
test
xor
stos
fs
es
dec
push
push
aad
xchg
je
jno
shll
jnp
inc
inc
xchg
gs
sti
fyl2xp1
lret
pop
sahf
pop
sub
loopne
clc
jle
loop
sti
mov
cli
and
mov
cld
sbb
push
pop
insl
fadd
push
jne
add
sub
loop
cld
out
outsl
add
add
lret
je
fistpl
lahf
ffree
insl
std
aam
std
mov
xor
or
cmp
or
clc
add
mov
imul
int
cwtl
and
xor
insl
int
popa
fisubl
jb
dec
cs
roll
iret
xchg
mov
adc
xor
fsubrl
xor
mov
xor
jp
popf
jg
xchg
inc
mov
mov
or
push
jne
in
jo
inc
fdivs
jbe
xor
inc
cmp
jnp
lds
lock
js
lods
cmpsl
mov
test
pop
cli
push
js
xchg
aaa
add
test
sarl
subb
and
inc
ret
rcrb
mov
shl
daa
cld
stos
into
jb
adc
mov
ds
dec
or
cld
push
and
rcr
idivl
int
jnp
ljmp
aas
cltd
je
ficompl
adc
push
and
and
imul
xchg
mov
xor
in
jle
js
sbb
insb
in
mov
jns
cwtl
ret
shll
stc
fiadds
shrl
icebp
sbb
and
test
popa
ds
ds
xchg
cmpsb
jmp
ss
lahf
cmp
dec
in
stc
xchg
ja
ret
daa
int3
scas
inc
push
popf
pop
push
popa
ss
xor
mov
movsl
mov
cmpsl
call
aam
orb
bound
mov
xor
sbb
movsl
arpl
xor
lret
ljmp
inc
inc
cltd
jge
call
stc
push
lret
jb
inc
jbe
lahf
call
stos
ret
xor
popa
fwait
pop
mov
mov
lock
fstpl
inc
push
nop
decb
jecxz
jg
or
stos
xor
ret
jp
lret
dec
and
push
ljmp
mov
mov
pop
outsb
imul
hlt
clc
mov
xchg
lods
pop
insl
nop
mov
icebp
ret
lea
mov
mov
sarb
dec
sub
inc
inc
or
adc
xor
repz
outsb
jo
xchg
cmpsb
sbb
mov
cmpb
sbb
lods
sub
insb
dec
pop
call
sub
mov
dec
fsts
adc
push
leave
jne
adcb
popf
jp
pop
and
jae
bound
into
pop
mov
popf
xchg
sbb
sbb
push
loopne
mov
sti
cmp
inc
call
mov
adc
sub
ffree
pop
lahf
dec
mov
es
fcoml
adc
add
jecxz
lea
ja
insl
shll
rcrb
adc
sarb
push
mov
dec
cmp
dec
cwtl
adc
mov
rolb
adcl
fdivl
int3
dec
stos
rcrb
jno
int
dec
sbb
mov
jl
push
dec
push
fdivrs
sub
sub
jmp
adcb
adc
cltd
and
ljmp
xor
ja,pt
repz
sub
add
push
cmp
and
cmpsl
iret
aad
jg
sub
daa
shr
pop
dec
in
popa
add
cmc
or
bound
xor
fisttps
push
loopne
and
int
clc
jbe
mov
mov
inc
stc
mov
shll
leave
jl
pusha
xchg
add
jg
push
adc
hlt
mov
popf
and
mov
das
mov
inc
ss
xor
jo
adcl
inc
xchg
sbb
inc
cmp
les
cmp
jle
mov
lret
or
mov
int3
xchg
xchg
xlat
and
aaa
mov
lret
dec
mov
je
popf
mov
hlt
std
mov
pop
ret
ret
cmp
jno
fstpl
mov
add
ret
cmp
push
shrl
mov
mov
daa
sub
popf
adc
dec
pop
lahf
mov
lahf
je
cld
inc
jp
out
push
pushf
inc
loope
push
push
aas
movsb
bnd
nop
daa
pop
jb
cltd
dec
imul
dec
pop
loopne
jp
sub
daa
jg
jb
fs
cltd
daa
mov
adc
dec
mov
je
adc
mov
std
push
dec
mov
enter
xor
mov
inc
insl
popa
cmp
aaa
and
add
dec
jo
dec
data16
ja
data16
push
jb
mov
dec
add
scas
frstor
pop
pop
nop
aas
test
pop
aaa
xchg
inc
push
xor
test
sbb
dec
out
cmp
hlt
push
xor
ret
adc
xchg
inc
push
rorl
push
addb
clc
lahf
aaa
addb
xlat
fdivs
in
fwait
cltd
cmp
adc
jo
lea
inc
sti
push
cmp
dec
xchg
and
or
push
hlt
hlt
jb
loopne
int3
loope
mov
addl
xchg
push
sahf
test
adc
mov
ljmp
shr
punpckhwd
fcomps
jecxz
mov
testb
stos
dec
dec
movsb
into
into
xchg
sbb
sbb
pop
xchg
sub
fsubrl
test
add
sti
repz
addr16
inc
push
mov
inc
sub
push
mov
call
mov
dec
sti
aaa
pop
ret
jno
icebp
cwtl
xchg
cmc
cmpsl
andl
mov
ljmp
push
inc
lods
pop
push
dec
add
mov
xor
add
sbb
call
xor
pop
add
cmp
mov
fldcw
sahf
fbstp
outsl
cltd
ds
jecxz
das
ds
lock
daa
fs
jmp
cld
mov
pop
orb
insl
je
cmc
push
repz
jo
jne
dec
cmp
aas
add
and
sub
aad
dec
push
ret
lcall
jge
insb
cltd
ss
int
int
mov
out
adc
add
imul
pop
jg
cld
cmpb
jo
sahf
inc
fdivs
mov
add
sarl
or
push
subl
push
push
loopne
add
sahf
in
and
mov
aad
aas
scas
adc
shlb
loope
rcrb
add
mov
call
mov
mov
push
xor
push
call
testb
push
in
jp
mov
sub
mov
mov
repz
icebp
arpl
jnp
cmp
dec
sbb
mov
ljmp
xor
pusha
cmp
lods
add
mov
subl
and
lods
inc
add
sahf
jae
fildl
xchg
mov
daa
flds
mov
bound
xchg
shrl
lock
fstl
lret
loop
lret
rorb
repz
add
mov
mov
mov
mov
push
call
mov
mov
test
stc
fists
mull
pusha
push
dec
lea
and
mov
push
loop
pop
movsb
test
lret
mov
or
js
jae
adc
lcall
fbstp
in
movsl
std
mov
xchg
sub
cmc
inc
lret
and
pop
in
insl
shrb
sub
sbbb
mov
cmpsb
std
imul
lret
dec
scas
sbb
fs
cwtl
xlat
test
rclb
fcmovnbe
adc
stos
jge
cltd
enter
or
loop
push
dec
adc
iret
cmc
pop
icebp
jp
andb
ljmp
cmp
punpckldq
out
bound
xchg
cwtl
std
mov
in
or
mov
mov
mov
popf
mov
enter
sarb
sahf
lahf
loopne
bound
outsb
sahf
mov
loopne
js
outsb
out
nop
mov
pop
out
rcrb
cli
lcall
idivl
fisubrl
imul
sbb
insl
or
mov
pusha
adc
or
sbb
xlat
jle
clc
jne
push
xchg
inc
xlat
int
pushf
ficomps
mov
fst
inc
mov
ljmp
scas
and
lods
fists
mov
mov
in
pop
push
cmp
popf
stos
std
lcall
clc
push
sub
sub
or
mov
dec
mov
xchg
std
jae
repz
nop
dec
imul
scas
sbb
mov
cmp
pop
mov
decb
or
js
cmp
aad
cli
push
mov
mov
mov
pushf
iret
xchg
or
cmp
pop
mov
clc
mov
pop
adc
mov
dec
pop
jae
mov
jmp
and
bound
cmp
lods
push
frstor
in
andb
cmc
jb
xchg
and
or
pop
mov
cli
and
dec
andb
leave
pop
scas
je
adc
jp
sti
or
or
arpl
lds
into
loopne
or
ret
mov
and
cs
inc
js
das
fwait
adc
stos
insl
jae
aam
fs
rcrl
imul
insl
pop
push
imul
cli
js
add
pop
xchg
test
packssdw
jg
mov
mov
nop
jne
push
jae
and
rolb
dec
push
in
hlt
mov
xor
xchg
mov
rcll
cmp
mov
jne
sbb
int
aas
adc
daa
daa
adc
mov
lret
xor
xchg
pop
inc
stc
or
subb
adc
fs
pop
jne
push
movl
insb
lea
add
sbb
scas
sbb
push
aad
mov
inc
popa
shr
or
test
out
jmp
mov
cwtl
cltd
imul
mov
aam
out
cmp
add
mov
and
leave
dec
stos
add
inc
leave
in
or
das
mov
sbb
pop
je
out
xchg
fs
ja
add
cmp
sub
mov
sbb
jge
test
leave
in
aas
sub
pop
add
out
push
push
push
xorl
or
xchg
jno
lods
sbb
std
xchg
or
pop
scas
add
dec
jne
aad
icebp
lds
cli
adc
cmpsb
fldcw
cld
inc
pop
cmpsl
pop
push
cmp
popf
sbb
jo
testb
xor
addb
hlt
sti
fildll
sub
fwait
imul
nop
cld
in
mov
jle
cli
imul
jecxz
out
sub
mov
add
push
and
shll
push
aam
fadds
movsl
std
scas
cmp
xor
xor
pop
mov
mov
adc
movl
inc
xchg
into
push
push
arpl
and
ja
adc
ljmp
sub
xor
sti
adc
into
cmpsl
inc
dec
imul
pop
cmp
pminub
inc
inc
mov
cltd
stc
and
push
scas
cmc
add
or
inc
incb
nop
jne
cmp
pop
dec
inc
pop
inc
dec
not
mov
aam
xor
dec
pop
mov
mov
pusha
repz
stos
push
xlat
int
iret
or
call
data16
mov
insl
sahf
cmc
daa
or
cltd
jl
rolb
xchg
push
les
and
pop
in
mov
cld
fdivs
lret
mov
mull
xchg
and
ja
shl
xchg
das
aaa
sbb
push
sbbb
mov
jp
bound
cmp
shr
fistpll
adc
push
cmpsb
pop
sub
scas
jne
and
aas
xorb
xchg
je
xchg
imul
push
push
or
mov
xor
push
outsl
jo
push
jp
sbb
pop
jecxz
fmuls
jge
pop
lret
leave
push
popa
pop
cli
nop
xchg
in
pushf
lahf
push
stos
add
outsl
scas
and
insl
pop
loop
sbb
mull
pushf
or
mov
mov
mov
inc
ret
mov
jecxz
movsb
push
ja
out
outsl
out
add
test
xor
popa
mov
out
push
mov
xlat
lret
out
sub
adc
rcll
into
call
stos
das
ljmp
push
fldl
cmp
sub
sbb
outsb
sub
or
aas
jno
xchg
lea
sbb
daa
pushf
dec
hlt
sub
xchg
idivb
push
fdivrs
incl
fsubp
inc
imul
lahf
sub
sbb
orl
sbb
jbe
scas
dec
inc
inc
in
inc
bound
lea
xor
lea
sbb
adc
and
dec
add
cmp
or
cmp
jl
cmp
sahf
into
insb
fimuls
xchg
push
dec
xchg
xchg
out
fbstp
arpl
xor
testb
in
addr16
sti
and
cmp
push
inc
mov
xor
add
popf
add
fcoml
std
test
clc
cmpsb
leave
icebp
add
mov
mov
xlat
mov
cmp
cmpsl
out
clc
clc
xor
pop
lods
int3
int3
leave
and
pop
mov
mov
test
and
pop
out
jge
cli
mov
adc
mov
movsb
mov
ret
out
mov
mov
adc
ss
int
in
push
mov
push
fwait
js
and
mov
hlt
jle
xor
xchg
push
mov
sbb
call
imul
pushf
into
dec
add
push
mov
mov
cmp
sub
add
out
and
sub
jnp
ss
pushf
inc
sbbl
ret
push
dec
add
out
ljmp
fwait
repnz
fsts
mov
movsb
pusha
ffree
adc
jae
jl
cmp
and
clc
aaa
orl
je
icebp
ja
movsl
mov
call
arpl
cmp
out
rolb
dec
push
jmp
jo
inc
loope
enter
mov
and
jo
ret
xchg
sbb
pop
cmc
ja
xor
aam
jmp
cmp
rcll
das
sub
pop
dec
mov
pop
setbe
jne
mov
pop
xchg
cmp
add
inc
scas
mov
xlat
cmp
inc
cmpsb
dec
adc
xlat
mov
push
pop
push
fdivp
adc
stos
inc
sub
insl
sti
xchg
and
xor
jns
xchg
inc
fadds
push
mov
mov
ja
icebp
stos
push
scas
lret
lea
sbb
lods
inc
sarb
xor
popf
fcmovnb
mov
mov
test
daa
push
xor
sbb
test
lock
sti
push
xchg
in
inc
ds
scas
sub
jge
adc
xchg
push
enter
pop
xchg
mov
xchg
xor
jmp
lods
fiaddl
popa
xchg
dec
aad
out
and
adc
roll
inc
sub
mov
les
or
fdivrl
dec
imul
push
jb
mov
jmp
mov
xchg
inc
aam
cld
ret
cwtl
roll
ror
sbb
mov
xchg
and
add
nop
xchg
bound
inc
jle
lret
ss
xchg
add
inc
xor
mov
lods
mov
sbb
dec
cltd
out
aaa
and
cs
sub
sahf
shl
loopne
pop
ss
jle
jmp
jne
mov
aam
icebp
jp
fwait
xlat
sar
in
fldcw
mov
pop
jg
mov
ret
push
jle
mov
popf
sub
add
push
and
stos
cmp
aaa
inc
sub
xchg
out
loopne
pop
jle
frstor
dec
lods
outsl
mov
adc
iret
fidivrs
test
sti
add
sub
cld
pop
jb
sarl
rcrl
pop
aam
shrb
sub
pop
outsl
gs
mov
mov
leave
call
or
and
push
jecxz
insb
lcall
mov
mov
cmpsb
out
lret
dec
shl
push
jg
jae
sub
sbb
xor
fs
pop
or
jns
cmp
mov
mov
and
adcl
outsb
fcoml
addl
xchg
mov
xor
mov
mov
popf
lods
and
stos
add
pusha
out
mov
push
push
sbb
fcompl
adc
subl
ljmp
fcmove
stos
add
sahf
je
add
je
adc
xchg
int
jno
rclb
push
adc
fdivs
or
ss
push
roll
int
repz
add
ds
testb
enter
outsl
xor
das
push
sub
jl
xchg
sub
cmp
test
sub
insl
xchg
or
jl
sub
cli
cmpsl
movsl
pop
xor
mull
inc
das
jne
js
inc
repnz
inc
mov
popa
lods
fbstp
jns
push
or
stos
lret
fnstcw
dec
inc
sub
jmp
out
and
repz
sti
lcall
or
cs
adc
int3
jbe
incb
sbb
jb
inc
ficompl
pop
inc
cmp
rcrl
inc
icebp
mov
adc
xchg
lea
cmp
and
stos
mov
js
enter
cmp
rolb
push
mov
mov
fisubl
xchg
test
mov
nop
out
sub
lods
mov
shl
cmc
mov
movsb
scas
scas
leave
jecxz
lret
aad
xor
leave
add
test
cwtl
push
andl
mov
mov
add
aas
test
pop
pop
sbb
sub
aas
mov
pop
outsb
test
add
push
test
push
jle
cmpsb
or
jle
data16
dec
push
pop
mov
test
jmp
cmc
pop
aad
mov
imul
inc
xchg
sti
pop
ret
and
je
arpl
icebp
loopne
ficoml
into
sti
cmp
sub
aam
ret
inc
mov
out
mov
cwtl
xchg
sahf
pushl
add
xchg
int
pop
lahf
adc
mov
loope
jb
fimuls
aad
data16
ljmp
hlt
int
sti
push
repz
scas
add
stos
repz
push
mov
pop
std
and
mov
sti
pop
or
xchg
out
lock
out
decb
dec
fwait
fs
sahf
ret
sbb
or
bound
xchg
pop
mov
mov
and
in
leave
fldt
lock
xchg
out
add
jmp
cmpsb
and
xchg
ficoml
inc
enter
gs
ficompl
and
pop
push
or
cltd
mov
xor
cmp
cs
addr16
or
cli
out
imulb
fisubs
imulb
fldl
arpl
lock
pop
sub
in
mov
or
shrb
ror
inc
and
out
ds
enter
cmpsb
adc
loope
aaa
jmp
and
xchg
es
adc
mov
and
bound
mov
fsts
cmp
out
jo
xorb
shl
jle
lods
shr
sub
xchg
int
jo
ja
mov
push
xor
xor
or
push
xor
dec
mov
mov
mov
cmc
jo
or
xor
mov
orb
xor
bound
fdivr
lock
mov
int3
sti
cmp
rclb
pop
test
addr16
and
scas
es
mov
or
cmp
xor
fidivl
ljmp
fs
leave
mov
push
cmp
aad
mov
int3
js
mov
mov
or
mov
lods
rcll
rclb
mov
test
test
imul
arpl
leave
push
sub
shl
add
mov
mov
jge
sub
pushf
fwait
scas
lds
mov
mov
dec
loopne
js
xor
aad
mov
add
adc
xor
mov
or
sub
inc
rolb
mov
rorb
push
jns
push
and
adc
dec
inc
nop
jg
sbb
xchg
mov
test
addr16
popa
popf
addr16
das
fists
jnp
in
fisubs
pop
test
inc
and
jg
loopne
jno
out
aas
dec
xor
xor
mov
mov
mov
and
jecxz
fnsave
aaa
pop
rcrl
subb
inc
sbb
inc
jl
shlb
mov
adc
in
sbb
cmp
fs
jl
fstl
adc
pushf
adc
mov
cmc
xchg
icebp
inc
adc
lcall
mov
push
inc
push
jg
pop
scas
test
popa
aad
mov
sub
std
repz
add
push
adc
add
scas
dec
rcll
cmp
data16
stos
pushf
pop
mov
push
shl
outsl
and
xchg
loope
bound
popa
fnstcw
mov
mov
mov
lret
aas
inc
hlt
inc
sbb
pop
mov
sbb
pusha
lahf
mov
pop
adc
sti
out
daa
push
sub
xchg
or
or
inc
inc
jno
sub
jne
lods
inc
les
shlb
shr
aam
xchg
and
in
add
sbb
pop
sahf
fcoml
hlt
push
push
lods
repnz
mov
and
cli
xor
bound
enter
popa
in
xchg
add
fwait
or
rorb
rorb
pop
jmp
push
jbe
mov
es
ljmp
pop
push
js
cmc
jns
in
popf
push
xchg
in
fnstcw
mov
lds
je
pop
jle
jbe
xchg
xchg
xchg
scas
dec
mov
loope
cmp
sahf
xor
mov
cmp
sbb
jmp
repz
and
cld
insl
pop
cmpsl
or
pop
xor
mov
mov
outsb
mov
ret
add
enter
sahf
push
fcoml
sub
jge
dec
push
inc
jge
xor
sbb
cmp
cmp
pop
cmp
push
mov
push
hlt
jmp
xchg
and
add
dec
sub
fwait
adc
sar
lods
mov
pusha
outsl
add
add
test
and
xor
pop
sahf
es
mov
cmp
xlat
xchg
lahf
or
std
mov
mov
sub
sbb
lret
enter
sbb
xor
data16
frstor
mov
ror
hlt
and
je
mov
adc
jecxz
test
lcall
sbb
or
sbb
data16
sbb
loopnew
lock
pusha
sarl
mov
push
ret
shr
cmpl
mov
push
js
push
repz
or
int
jo
jmp
test
lahf
fs
pop
filds
fbstp
stc
or
mov
push
scas
inc
jbe
jmp
mov
jnp
test
lods
hlt
push
leave
inc
fcomps
ss
sub
fisttps
xchg
and
call
mov
xchg
xor
mov
cwtl
mov
bound
out
mov
jmp
or
arpl
sar
adc
subl
mov
push
xchg
addb
movsb
and
mov
imul
rclb
les
packuswb
and
cmp
add
adc
dec
and
ret
push
ss
sahf
xchg
mov
decb
test
std
sub
ljmp
pushf
push
xchg
mov
movsb
fcomps
cs
ret
mov
adc
and
call
cmp
dec
sbb
or
data16
push
pop
mov
sub
cwtl
mov
repz
outsb
xor
les
ret
cmpsb
insl
mov
test
hlt
add
or
cmp
adc
dec
dec
ja
mov
ds
cmp
adc
xlat
shl
xchg
lahf
xchg
pop
test
cmp
flds
inc
jbe
out
inc
icebp
inc
in
jne
lcall
inc
mov
scas
push
insb
mov
lcall
lds
inc
notb
nop
sub
sbb
xchg
sub
hlt
loopne
xchg
cld
into
loop
mov
in
ljmp
cltd
lret
jl
psrlq
mov
inc
dec
dec
mov
lds
xchg
mov
cltd
rcr
pop
pop
enter
mov
cmp
roll
dec
repz
test
sbb
lods
and
xchg
movsb
dec
push
mov
jmp
aaa
ja
rol
pop
fdivr
dec
insb
loopne
dec
nop
inc
mov
mov
mov
cmp
dec
xor
sti
repnz
jmp
dec
daa
xor
push
pop
xor
sbb
add
and
xchg
out
push
sahf
and
ror
addl
cltd
dec
cmp
movsl
dec
and
or
clc
mov
cmpsb
lock
pop
cmc
nop
das
mov
rolb
sbb
stc
test
add
dec
add
inc
xchg
jne
mov
fcmovb
xchg
sbb
push
or
sti
andl
jecxz
sbb
test
das
xchg
bound
adc
repnz
scas
xchg
int
or
jle
and
test
fsubl
arpl
cmc
icebp
data16
xor
ficoml
push
add
outsb
ret
in
pushf
lock
in
mov
jb
xor
inc
push
sub
xchg
xchg
into
xchg
xor
call
pop
lds
cld
mov
mov
cmp
imul
popf
jb
cmc
inc
ret
insb
push
push
lcall
ffree
jg
nop
xchg
cs
dec
mov
mov
mov
mov
movsl
nop
xor
lret
jnp
cli
pop
ror
cmp
add
inc
mov
sbb
jg
imul
push
aad
outsb
popf
out
inc
fsubs
frstor
imul
push
sbb
imul
and
sub
xchg
sbb
loope
out
xor
push
les
or
push
inc
inc
repz
es
and
jb
aas
adc
insb
iret
sub
test
enter
outsl
xor
das
fisubrl
repz
cmp
hlt
leave
inc
dec
shrl
aas
shll
xchg
push
inc
adc
es
jnp
xchg
adc
decb
adc
dec
fisttpl
mov
dec
into
push
xchg
add
add
and
fdivs
xor
mov
mov
fnstsw
dec
jecxz
sbb
jl
push
fldl
jge
dec
mov
ja
mov
mov
sub
adc
xchg
icebp
mov
push
dec
pop
lods
dec
xor
cmp
jg
pop
cmc
cld
addr16
mov
fldenv
cmpsl
sbb
imul
xor
sarl
cmpsl
int
movsb
mov
mov
sub
movsb
inc
or
cmp
push
fnstcw
call
jmp
xlat
mov
mov
stos
add
add
ss
test
int
push
xchg
push
push
and
inc
cmp
jmp
push
inc
orb
and
and
and
into
aas
insb
clc
js
dec
cmp
pop
lret
mov
push
repz
test
mov
cmpsb
imul
ss
es
int3
sbb
dec
push
arpl
mov
inc
stos
mov
cmp
js
push
jo
mov
in
loopne
addr16
mov
shl
mov
test
js
fucompp
mov
xchg
enter
sub
cli
pop
imul
xchg
xchg
mov
inc
add
fidivs
add
sub
pop
repnz
call
cmp
orb
pusha
mov
dec
pop
rcrl
enter
jp
ret
out
cmp
push
scas
adc
add
adc
mov
jl
xor
shlb
cs
cwtl
call
mov
lods
int3
dec
enter
fstpt
adc
test
adc
and
xor
adc
lea
xchg
negb
test
push
out
jno
push
adc
inc
loope
gs
imul
fnstcw
out
aaa
sub
jnp
cmpsb
lods
or
and
mov
rcll
inc
je
mov
mov
dec
lds
add
inc
ret
add
jns
fwait
shlb
aaa
xchg
push
in
js
push
push
jbe
cmp
int
mov
jl
aaa
dec
mov
out
out
stos
fsubl
jg
push
mov
cmp
nop
dec
ljmp
std
mov
adc
push
bound
inc
push
mov
popa
movsb
jb
dec
sub
sbb
outsb
das
mov
push
cld
pop
jns
sbb
ljmp
xor
insb
xor
push
cmpsl
fildl
fnstsw
lahf
sahf
sub
clc
addl
jnp
cmp
js
push
cmp
mov
ret
fnstsw
mov
mov
outsb
lret
in
mov
cmp
inc
fstpl
add
jnp
lea
repz
dec
jge
jmp
cmc
out
cmp
pusha
adc
lret
mov
and
jo
sahf
xor
lea
dec
sbb
push
sti
cmp
test
in
dec
gs
movsl
cmc
pop
cmp
loop
inc
enter
pop
js
xor
mov
dec
outsl
cs
negl
cmp
adc
push
dec
loop
cli
mov
pushw
push
pusha
out
sub
sub
fucomp
dec
test
adc
push
xchg
push
mov
inc
jb
notb
xor
or
push
stos
int3
into
lret
out
mov
mov
or
cmc
mov
addr16
adc
or
mov
in
xchg
mov
push
mov
test
xchg
dec
test
ret
scas
out
sub
or
loop
jle,pn
out
sahf
and
mov
mov
push
paddsw
fnstsw
jmp
stos
jbe
dec
or
imul
movsl
ficoml
jne
jbe
insb
std
cmp
test
push
imul
notl
cmp
pop
cs
stos
cmpsl
fimull
mov
loop
js
sub
outsl
rolb
cmp
adc
ret
mov
xor
push
idivb
xor
bound
mov
jg
push
nop
mov
arpl
xor
clc
pop
sbb
push
jbe
cmp
testl
inc
insb
loop
addl
gs
and
imul
pop
outsl
andl
jne
mov
cmp
push
pop
add
cmp
aaa
inc
ret
push
xor
mov
cmp
inc
iret
call
ret
mov
push
data16
and
rorb
outsb
sbb
stos
cmp
xor
lods
mov
ss
adc
xchg
scas
das
data16
mov
fs
icebp
sti
xchg
adc
mov
dec
sbb
mov
mov
das
xchg
xor
test
imulb
sub
movsl
call
push
xchg
or
sbb
mov
pop
hlt
sbb
sub
add
ret
jl
mov
icebp
push
lahf
mov
inc
push
add
mov
pop
ss
and
in
fcmove
pop
mov
loop
outsb
pop
push
mov
aas
sub
mull
pop
data16
adc
sub
push
mov
xchg
cmp
or
int
lods
dec
push
fiaddl
xlat
push
outsb
adcl
lcall
push
xchg
jb
shl
pusha
inc
mov
rcr
mov
sbb
xchg
enter
dec
out
fidivrl
mul
int3
jns
ljmp
xor
daa
push
aas
xor
movsb
rclb
sub
andb
lcall
or
hlt
xchg
add
add
mov
dec
mov
inc
xchg
aad
pusha
push
dec
mov
ljmp
je
bound
sbb
dec
xchg
and
fidivrl
jp
in
xor
aam
sbb
insl
imul
cs
icebp
ret
push
xor
orb
outsb
sbb
xchg
mov
add
das
sbb
sbb
jp
jbe
ja
loopne
add
add
leave
or
push
leave
mov
leave
ret
jbe
jno
or
xchg
jns
mov
js
loop
mov
sbb
out
.byte
.byte
sbb
mov
xchg
sbb
add
xchg
iret
rcll
jno
out
inc
cld
rcrb
scas
jb
adc
aaa
ljmp
ret
dec
push
mov
cmp
in
out
das
xchg
insb
sbb
pop
inc
mov
testb
mov
cld
jp
cld
addb
pop
cld
sub
xchg
lahf
insb
mov
insl
lods
and
adc
test
adc
repz
popa
pop
xchg
outsl
push
pop
jmp
pop
mov
hlt
inc
aam
test
sbb
sbb
int3
insl
xor
ret
mov
xchg
mov
iret
jb
xor
or
pop
dec
mov
lds
popa
push
inc
aas
xchg
js
mov
fmul
sti
xchg
or
pop
push
out
mov
mov
xchg
jmp
jno
mov
inc
les
std
xor
or
std
push
add
lods
mov
lods
dec
push
pop
sbb
xchg
sti
lcall
hlt
sbb
sbb
lock
mov
cmp
cmp
scas
inc
neg
xchg
inc
push
int3
add
dec
pop
mov
dec
mov
pop
fs
xchg
push
inc
pop
ret
call
or
rcll
subl
jno
mov
aaa
mov
jb
icebp
lods
cmpb
aaa
sarl
fdiv
adc
cs
xor
cli
movlps
xchg
jmp
js
mov
popf
stc
sub
adc
pop
sub
dec
cmc
inc
jo
into
lods
fldt
inc
push
cmp
mov
mov
bound
cmpsb
pop
test
jae
fstpl
xor
cli
or
jne
fisubs
scas
pop
hlt
xchg
into
mov
jb
adc
inc
sete
pop
and
cmpsb
testl
sub
shrl
ds
push
cltd
and
lahf
adc
sahf
inc
lret
dec
xor
fmuls
pop
pop
sub
test
pushf
sbb
es
imul
cmp
xchg
inc
or
leavew
jb
mov
mov
xchg
mov
into
icebp
mov
adc
movsl
inc
add
aas
sbb
incl
test
or
mov
push
gs
jnp
roll
pop
addr16
push
sub
jle
scas
out
mov
scas
ret
adc
jecxz
sub
jg
xor
sub
mov
adcb
test
daa
rcll
popa
testb
xor
mov
sbb
ret
arpl
mov
sbb
add
and
cmp
cmp
and
fmul
imul
jbe
in
pop
jp
mov
aaa
ss
cltd
or
fildl
mov
mov
aas
lahf
nop
xchg
stc
mov
pusha
pop
push
mov
mov
pop
sbb
jae
mov
ficomps
pusha
push
or
call
lock
ljmp
and
or
js
xor
push
ret
icebp
fwait
call
cmp
lods
mov
mov
lds
pop
fsubrl
jg
mov
mov
inc
push
inc
sub
cmp
mov
jno
movsb
leave
dec
rclb
pop
lcall
lsl
xchg
adc
and
mov
mov
iret
adc
aad
inc
popf
in
sbb
aas
pop
push
xchg
sub
mov
mov
sbb
subb
popf
xor
or
gs
jne
add
pop
mov
into
sbb
aaa
push
idivb
fsubr
push
notl
push
jns
mov
int3
cmp
pop
xchg
dec
pop
ret
subl
xor
lret
push
mov
cmp
ljmpw
jb
fwait
mov
dec
xchg
sub
push
jne
in
enter
cmp
lods
in
in
sarb
jno
pop
jmp
and
imul
cmp
push
sbb
and
aam
mov
pop
mov
les
lods
loop
and
lea
in
cli
xor
push
insb
in
or
aam
pop
adc
add
pop
fimuls
sbb
cmpsb
xchg
cs
dec
cld
mov
lock
xchg
mov
mov
les
lods
add
inc
inc
push
out
mov
or
in
lret
loope
out
clc
jp
shrl
mov
xlat
cmp
arpl
jecxz
fsubrl
gs
sub
pop
push
pop
mov
enter
movsb
xor
iret
and
push
insb
mov
jl
mov
movsb
adc
test
inc
or
popa
fwait
ret
pop
inc
lret
lret
xchg
push
scas
jl
xor
lea
ret
mov
negb
call
cltd
repz
pop
adc
ja
jnp
incl
sub
xor
jmp
pop
sub
pop
movsb
or
sbb
sahf
pop
pop
daa
aas
xor
imul
test
test
adc
pop
jno
imul
add
cli
cld
leave
mov
xchg
push
add
inc
repnz
push
lret
incb
xor
and
cmp
shl
adc
loopne
push
not
jle
jns
mov
js
in
jno
addr16
ret
cmpsb
jl
sar
std
lea
or
and
test
push
lret
cwtl
add
pop
adc
rcl
mov
and
les
pushf
fs
ret
gs
lea
scas
.byte
add
push
add
add
add
add
pop
add
addb
add
nop
add
orb
add
test
add
rolb
xor
add
fadds
add
add
add
add
add
lock
addb
add
add
add
andb
add
add
addb
add
push
add
addb
add
add
add
pop
add
add
add
add
add
addb
add
add
add
mov
add
add
add
data16
add
add
addb
add
add
add
loopne
add
add
add
lock
add
add
add
add
add
add
add
add
adc
add
add
add
and
add
add
add
xor
add
add
add
inc
add
add
add
add
add
push
add
add
add
add
add
pusha
add
add
add
add
add
jo
add
mov
add
call
add
add
add
add
add
add
add
add
add
jl
add
enter
pop
add
add
into
add
mov
add
add
add
add
add
add
add
add
add
je
add
pusha
rolb
add
add
sbb
mov
adc
add
fsubrs
inc
aam
lret
mov
push
jp
shl
outsb
mov
lcall
or
sbb
sahf
xchg
pop
pop
cmp
sub
xchg
leave
sub
sbb
push
clc
jno
icebp
dec
inc
sti
pop
dec
push
aad
mov
fdivs
and
test
xor
cmc
fcomi
popf
int
and
inc
mov
insl
inc
xchg
loope
mov
stos
daa
mov
setg
fstl
xchg
xor
dec
popf
mulb
mov
xchg
out
fwait
incl
xor
mov
xor
pop
jp
dec
push
call
push
insb
adc
in
pop
or
lcall
inc
adc
cmp
bound
cmp
jge
lds
roll
add
jl
mov
add
movsb
lds
push
xor
out
fwait
inc
hlt
inc
imul
xor
xor
cs
repnz
mov
sub
cmp
sub
adc
lcall
inc
xchg
mov
in
ret
pushf
jbe
ret
push
repz
push
mov
outsl
fs
or
repnz
arpl
and
jl
mov
jle
aam
mov
in
mov
and
leave
mov
icebp
push
mov
sbb
fwait
adc
test
sbb
add
subb
lea
inc
dec
insl
jmp
fildll
mov
repnz
cmp
sub
mov
stos
std
push
js
push
fstl
arpl
dec
lds
mov
or
pusha
jno
ret
scas
mov
adc
push
fimull
jge
popa
mov
pop
testb
mov
sub
in
pop
leave
pop
jecxz
cmp
idivb
xlat
mov
lods
pop
sbb
sbb
loopne
push
xchg
push
jo
xchg
or
jg
mov
shlb
arpl
cmpsb
mov
jne
mov
mov
push
test
cmc
stos
jno
mov
outsb
sbb
clc
mov
mov
jecxz
jmp
mov
inc
fisubrl
ljmp
cmp
rcrb
cmp
insl
repnz
cmpsb
mov
lds
jmp
and
movsl
sbb
mov
mov
cmp
mov
aaa
cmp
jns
lret
stos
xchg
outsl
sub
ja
jge
add
insb
mov
and
push
cmp
cmp
ret
mov
or
out
call
repz
roll
stos
push
push
jbe
sahf
sub
pop
lcall
push
loope
cmp
cli
pop
insb
stos
cld
push
xchg
pop
or
pop
sbbl
lahf
sbb
inc
popa
outsb
inc
push
fildl
push
fcmovne
inc
cwtl
int3
pop
out
jl
sti
mov
loope
or
sbb
mov
fadd
icebp
xchg
lcall
fsubp
jecxz
inc
sub
dec
jmp
dec
sbb
out
mov
mov
es
gs
notl
fcoml
je
jae
sti
aaa
pushf
ret
xchg
aam
mov
xchg
addr16
sbb
imul
js
insb
sbb
cmpsl
or
out
dec
inc
loopne
int
fs
pop
mov
dec
fistpl
dec
xor
fwait
rorb
test
cs
outsl
aas
pop
sub
insl
loop
dec
pushf
jae
add
pop
mov
push
out
jnp
mov
mov
aam
jne
xlat
ss
xor
imul
jle
cld
or
pop
mov
mov
sub
fnstsw
pop
or
xchg
cs
xchg
lds
sti
sub
xor
sbb
sahf
popa
inc
push
in
mov
pop
dec
fildl
xchg
xor
and
xor
jecxz
mov
outsb
and
pop
fnstsw
rcrb
adcb
xchg
push
sbb
mov
loopne
lods
add
push
jecxz
push
add
ljmp
in
xchg
rclb
or
dec
xor
xchg
inc
mov
lea
iret
dec
push
xor
sbb
rolb
cld
sub
sub
or
dec
fs
pop
div
or
out
rorl
mov
sarl
pop
lret
and
jl
iret
loopne
aam
mov
lcall
sub
fmuls
or
test
outsl
pop
in
jge
mov
jnp
je
mov
inc
push
sbb
mov
mov
jp
pop
mov
mov
xchg
lret
mov
es
xor
es
ficoml
mov
or
aaa
scas
cld
pop
xor
mov
adcb
and
jnp
push
mov
sahf
fcomps
and
fimuls
out
lods
outsl
pop
movsb
jp
movsb
ljmp
fnsave
stc
add
pop
je
in
lea
insl
scas
inc
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
mov
call
push
xchg
test
xor
jae
pop
add
mov
sub
pushl
mov
pop
jmp
add
push
dec
dec
outsl
jl
pop
mov
es
mov
add
mov
xor
push
mov
pop
add
movswl
mov
sbb
jbe
push
and
pop
sub
jmp
ret
or
das
cmp
sbb
inc
out
aam
jb
add
jne
jg
movzwl
cmp
jne
push
mov
pop
jmp
shlb
int3
adc
div
fs
xchg
mov
jmp
test
or
add
addl
jle
sub
loop
mov
cmpsb
lods
pop
adc
shll
jne
leave
in
call
sarl
fstpl
mov
inc
and
pop
scas
out
add
out
dec
ljmp
pop
xchg
ja
test
repz
jno
mov
jnp
jmp
xor
enter
push
sub
mov
mov
ljmp
cwtl
loop
and
sbb
je
dec
adc
lods
inc
into
inc
out
in
cmp
or
outsl
pusha
xchg
jne
sbb
aas
shl
roll
les
mov
stc
gs
add
mov
adc
xor
shll
aas
aam
mov
subl
addr16
cmp
sub
sahf
test
in
fimull
mov
inc
mov
adc
pushf
jecxz
cli
std
push
cmp
sub
xchg
cmpsb
lea
and
lea
and
fdivrs
adcl
outsb
jl
adc
xchg
lcall
inc
fsubrs
jecxz
pushf
cmpsl
push
leave
cmp
int3
ret
rol
cmp
mov
xchg
mov
shr
sub
pop
sbb
push
mov
fidivs
inc
outsb
fisubs
stc
adc
test
inc
mov
stc
sub
scas
bound
pop
xor
int3
sti
push
shlb
jmp
adc
xor
hlt
ds
lea
cli
popl
adc
stc
sti
dec
out
popa
in
stc
adc
mov
inc
fadds
mov
cltd
jle
xlat
int
icebp
dec
inc
sbb
jecxz
stos
insl
pop
xor
pop
sti
push
xor
rclb
cmp
and
rcrb
stos
push
mov
popa
popa
rorb
aam
and
std
hlt
jne
pop
rorb
aam
ljmp
jb
pop
js
mov
mov
xchg
int
pop
stc
aam
xlat
nop
add
stc
adc
ja
pop
xlat
stc
jnp
adc
cmp
jno
data16
jle
xor
and
sbb
ds
aad
in
mov
xchg
pop
or
fiaddl
or
jge
and
push
sbb
and
pop
or
cwtl
mov
mov
test
mov
xchg
cs
cmc
jne
inc
test
adc
lahf
adc
inc
das
test
pop
mov
mov
pop
push
outsl
pop
mov
shll
repz
popl
or
dec
dec
loop
pop
test
pop
mov
pop
add
push
outsb
roll
pusha
ss
lods
lods
push
xor
push
jo
std
insl
les
add
sbb
mov
lds
cmpsb
xor
bound
jo
dec
pop
stc
adc
inc
dec
push
ljmp
pop
popf
xor
add
pop
stc
adc
inc
dec
push
or
aam
add
and
not
and
stc
lahf
or
mov
fwait
js
jp
clc
popf
mov
roll
xor
push
data16
jle
hlt
pop
jne
out
mov
ds
aam
incb
pop
out
aam
inc
inc
sarl
mov
andb
add
dec
aam
cli
ljmp
movb
add
ja
cmp
fisttpl
icebp
inc
mov
dec
aam
les
add
outsb
shrl
add
les
add
fmull
cli
dec
lods
cli
inc
aam
inc
xor
in
les
cli
inc
aam
cmp
scas
int
aam
or
cwtl
mov
dec
xchg
add
inc
jne
andl
out
andl
andb
and
cmp
icebp
or
data16
les
xchg
add
sahf
addb
clc
scas
push
dec
aam
fs
cmc
scas
int
aam
fs
iret
vpcomq
daa
sbb
lcall
lahf
pop
arpl
xchg
xchg
add
stc
push
pop
ljmp
test
lods
pop
cmp
aam
incb
test
loop
cli
inc
aam
incb
cmpb
aam
add
xor
push
out
addr16
pushf
push
xchg
out
pop
adc
dec
es
icebp
lds
sub
sarb
ret
outsl
adc
in
fcmovnu
mov
dec
es
icebp
lds
sub
fs
outsb
roll
arpl
pop
in
jnp
xchg
ror
lcall
aad
js
push
and
jl
sbb
dec
es
icebp
lds
sub
pusha
inc
jp
test
imul
jo
xchg
addb
push
and
jl
sbb
dec
es
icebp
lds
sub
lds
movsl
rolb
push
xchg
addb
push
and
jl
sbb
dec
es
icebp
lds
sub
lds
movb
pop
repnz
aam
incb
xchg
in
arpl
aam
jmp
iret
lcall
aad
js
push
and
jl
inc
or
or
inc
mov
addb
inc
mov
pop
repnz
aam
dec
dec
add
dec
inc
cld
xor
cwtl
add
mov
test
mov
inc
cmc
adc
sbb
and
aad
int
clc
cwtl
add
mov
test
xchg
incb
scas
cmpb
loop
push
out
aam
add
imul
dec
aam
incb
adc
aam
add
xor
jl
enter
inc
aam
cmc
ret
sub
inc
adc
clc
jbe
pop
pop
sti
inc
aam
mov
sti
cmpsb
icebp
cli
inc
aam
dec
sti
inc
aam
loop
aam
or
xchg
jp
roll
int
gs
jbe
add
dec
pop
xchg
dec
dec
inc
into
inc
aam
mov
adc
ret
push
push
fs
loop
dec
mov
cli
test
scas
ss
cli
add
mov
lds
push
mov
outsl
rorb
test
push
inc
and
aas
push
jg
pop
sti
push
add
loopne
mov
sub
xor
mov
xorl
aam
add
dec
aam
add
dec
aam
add
dec
lret
hlt
test
dec
adc
add
dec
aam
inc
inc
aam
add
dec
aam
add
dec
aam
add
dec
aam
add
dec
lahf
xor
and
xchg
cld
inc
rol
mov
mov
scas
push
sub
dec
out
addr16
cltd
inc
sahf
adc
pop
movsb
or
lods
jle
mov
in
stos
inc
fs
push
push
adc
cmp
mov
add
jo
arpl
mov
inc
movsb
adc
mov
imul
xor
divb
pop
jecxz
mov
xor
clc
push
scas
push
mov
rorl
daa
sbb
adc
arpl
bnd
testb
incb
push
cmp
add
daa
es
outsl
mov
sbb
int3
add
dec
lods
push
leave
cmp
out
outsl
pop
into
ljmp
insb
iret
fbstp
mov
jp
cld
test
fstp
sahf
mov
sbb
cs
out
in
gs
push
mov
leave
mov
mov
imul
loopne
push
or
repz
pushf
ljmp
std
cs
pop
bound
movsb
mov
mov
push
cmp
repnz
jae
mov
and
xor
aad
push
jecxz
push
sahf
mov
arpl
mov
inc
mov
jge
daa
rcrl
jge
out
das
rolb
aas
fstps
jb
push
sahf
adc
test
pop
inc
in
push
add
push
or
cltd
cmp
add
fdivrl
dec
jns
pop
aaa
jno
or
mov
mov
add
push
mov
mov
sub
and
scas
or
xchg
sbb
inc
loopne
mov
sbb
rcrl
sbb
inc
pop
imul
mov
sub
xchg
xor
ss
dec
jns
lret
pusha
adc
clc
xchg
repnz
lods
not
adc
inc
aam
incb
aas
arpl
push
push
adc
sub
sbb
push
or
out
xchg
popf
fisttpll
in
mov
xchg
loope
test
xchg
push
xchg
loope
shll
aaa
popf
xor
jmp
outsl
outsl
xchg
fdecstp
loop
or
sub
adc
push
add
bound
jg
dec
mov
add
sbbl
iret
inc
das
cmpsl
dec
lods
testb
mov
add
rcl
pop
adc
pushf
repz
inc
adc
or
jnp
ds
xor
hlt
mov
push
in
inc
es
push
test
jnp
enter
int
xlat
into
push
or
popf
bound
hlt
andl
jno
push
test
jle
scas
xor
test
xchg
icebp
cli
push
mov
mov
leave
xlat
sub
xchg
add
aas
add
add
or
add
adc
in
add
cmp
add
imul
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
in
add
hlt
jmp
add
add
out
add
sub
add
in
add
push
out
add
cwtl
in
add
es
add
mov
out
add
lods
in
add
ss
add
mov
out
add
add
add
shr
add
dec
out
add
fucomi
add
push
out
add
call
out
add
hlt
in
add
data16
add
add
add
outsb
out
add
outsb
gs
jo
xor
cs
insb
add
outsb
imul
insb
add
arpl
xor
fs
insb
add
arpl
cs
insb
add
jbe
jb
cs
insb
add
gs
xor
fs
insb
add
jbe
jo
xor
cs
insb
add
gs
insb
xor
cs
insb
add
xor
cs
insb
add
gs
jne
xor
cs
insb
add
insb
ja
jo
cs
insb
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
add
add
add
sub
add
add
add
add
add
add
cmpsb
out
add
add
add
mov
add
add
add
mov
add
add
out
add
add
add
jecxz
add
add
add
or
add
repnz
add
add
add
add
add
add
add
pop
out
dec
gs
imul
outsb
je
jb
gs
insb
outsl
jae
dec
popa
outsb
fs
add
add
imul
outsb
addr16
add
add
fs
insb
outsl
outsb
gs
je
add
inc
jb
ja
arpl
add
add
addr16
jb
popa
je
dec
gs
add
add
gs
insb
pop
dec
outsl
je
data16
arpl
inc
add
add
inc
jb
popa
je
inc
jne
add
add
inc
gs
gs
dec
gs
add
add
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
add
add
add
push
add
push
add
push
add
dec
add
dec
add
dec
add
inc
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aam
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
mov
add
add
xor
cmp
xor
xor
xor
xor
bound
xor
add
xor
push
add
add
outsl
add
insl
add
outsb
add
add
add
add
ja
dec
in
jo
add
and
xor
add
add
add
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
xor
inc
add
ja
dec
test
iret
push
xchg
push
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
xor
inc
add
ja
dec
in
jo
add
and
xor
add
add
add
add
add
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
sub
and
xor
sub
and
xor
sub
and
xor
add
add
cmp
or
add
je
add
outsb
add
insb
add
popa
add
add
add
add
add
popa
add
add
outsl
add
insb
add
add
add
dec
add
add
add
insb
add
outsl
add
jns
jb
imul
je
add
xor
inc
add
ja
dec
test
iret
push
xchg
inc
bound
and
sub
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
add
popa
add
add
popa
add
imul
add
add
add
adc
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
xor
add
add
insb
add
add
jo
insb
add
add
pop
add
add
add
and
add
add
push
add
imul
je
add
jne
imul
add
cmp
push
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
xor
inc
add
ja
dec
in
jo
add
and
xor
add
add
add
add
add
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
sub
and
xor
sub
and
xor
sub
and
xor
add
add
and
add
add
push
add
add
imul
inc
add
imul
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
mov
add
add
add
and
adc
add
add
call
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
mov
add
cwtl
orb
cltd
add
add
add
add
ja
jo
add
add
add
add
pop
jo
ja
ja
jo
add
add
add
add
xorb
ja
ja
ja
add
add
add
ja
ja
ja
ja
ja
jo
add
add
ja
ja
ja
ja
xchg
add
add
pop
ja
ja
ja
ja
pop
ja
add
add
jo
ja
ja
ja
ja
ja
addb
pop
or
jo
ja
addb
ja
jo
add
pop
ja
add
add
ja
ja
jo
add
jo
or
ja
ja
jo
ja
add
add
ja
add
add
ja
jo
ja
add
add
ja
ja
ja
pop
ja
ja
add
add
ja
ja
ja
ja
ja
pop
jo
add
add
ja
ja
ja
add
add
or
nop
add
pop
jo
add
add
add
ja
ja
pop
add
add
add
or
add
ja
ja
pop
pop
add
add
add
nop
add
pop
ja
pop
jo
pop
add
ja
jo
ja
add
add
ja
ja
add
incl
add
ja
add
add
add
add
jg
cld
lock
add
add
add
add
dec
iret
lock
ud0
cld
incl
add
lock
iret
int3
incl
add
incl
add
incl
add
incl
incl
incl
cmp
incl
add
incl
add
aas
loopne
add
rolb
pop
addb
sldt
add
add
add
add
add
addb
pop
rolb
pop
addb
or
add
rolb
rol
jg
rolb
out
add
rolb
incl
add
incl
add
incl
add
rolb
push
pop
decb
jmp
and
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
bound
push
push
add
add
add
inc
repnz
adc
mov
sbb
cmp
dec
mov
pusha
loope
jl
leave
addr16
movsl
cltd
add
push
movsb
pop
data16
f2xm1
jo
and
cmp
xor
pop
fidivrl
std
sub
icebp
aam
outsb
mov
insl
mov
pop
nop
repz
lods
or
fdivs
mov
clc
pushf
dec
mov
gs
stos
mov
cmpsb
cmp
mov
mov
xchg
dec
push
int3
adc
sbb
fnstenv
stos
rorl
das
ret
lds
jmp
and
add
stos
push
jecxz
push
repz
out
sti
jne
sbb
mov
shl
aad
sarb
pop
mov
xchg
push
xor
cld
dec
aad
call
rcrl
cmp
lea
mov
int
add
inc
insl
mov
cli
loop
imull
add
daa
jbe
xor
and
xchg
cmovb
das
rorb
add
inc
inc
push
mov
dec
mov
fs
es
add
sbb
movsb
xor
loope
lahf
gs
repnz
push
ja
dec
in
scas
repnz
iret
fildl
push
int
xlat
sub
test
inc
mov
cmp
or
inc
out
mov
jbe
daa
sarl
xchg
movsb
loop
inc
fdivrs
fisttpll
out
pop
mov
xor
cmp
ljmp
sub
mov
clc
ficomps
fstpl
dec
popf
cmp
fiaddl
push
popf
in
rcrl
sbb
mov
leave
aaa
outsb
mov
in
sti
scas
aaa
cmpsb
popa
lock
and
fxch
inc
cmp
and
mov
mov
jno
pusha
jne
popa
leave
sti
or
push
xor
dec
les
mov
xchg
lods
das
sub
in
loopne
rclb
jno
sub
jmp
mov
or
into
inc
dec
dec
sub
shrl
lds
xchg
dec
rcll
inc
inc
clc
pushf
popa
adcb
xchg
inc
ja
push
adc
in
pop
ficoml
adc
jmp
mov
ret
subl
movsb
imul
imul
mov
mov
adcl
int
mov
sbb
sbb
push
movsb
push
push
pop
or
fldt
adc
mov
loopne
mov
sub
gs
in
mov
mov
mov
in
push
test
xchg
test
fsubr
movsb
arpl
mov
int
jno
cmpsl
cmc
dec
adc
jne
jns
fcoml
xchg
sbb
cmpl
xor
push
ds
mov
out
xchg
dec
add
add
pop
sahf
cmpsb
jne
ret
jp
xchg
pusha
mov
inc
push
cmp
pop
mov
lcall
lds
aaa
or
push
adc
lods
imul
repnz
cmp
or
sbb
stos
lahf
push
pushf
imul
xor
pop
into
movsl
push
dec
js,pn
inc
add
es
sarl
add
add
pop
lret
xor
sub
call
fisttps
ret
push
insl
ss
test
sub
mov
cs
inc
pushf
clc
push
xor
es
leave
and
and
stc
cmpsl
cmp
xor
cmpb
sbb
sbb
mov
cmp
push
lea
dec
xor
enter
pop
lcallw
inc
bnd
out
js
push
repnz
fcoms
jmp
cmpsb
jae
fdivr
cli
sub
sti
pop
inc
xchg
int
or
cmp
movsb
aam
add
sub
dec
inc
test
mov
notb
xor
out
pop
imul
dec
mov
ror
call
jae
ret
and
jl
mov
xchg
mov
imul
mov
negb
into
lahf
and
outsb
mov
jmp
jg
pop
add
jp
and
mov
cmp
jno
out
sub
js
sbb
sahf
dec
addr16
call
push
xor
stos
mov
jne
push
adc
push
adcl
inc
jecxz
dec
stos
mov
jnp
scas
add
loopne
ss
jmp
inc
pop
std
add
js
xor
add
scas
mov
xchg
sub
iret
fwait
test
or
scas
pop
jp
scas
popf
xchg
sarb
mov
cmpsl
fistpl
pop
inc
pushf
lds
xchg
xchg
jecxz
push
dec
cmp
adc
movsl
mov
out
fs
out
sub
dec
lods
jo
adc
push
clc
and
jle
nop
mov
dec
stc
adc
add
test
loope
sbbl
aas
mov
lea
bound
xchg
xchg
and
out
notb
repz
mov
ficomps
sub
mov
pop
xchg
idivl
xor
icebp
add
fsubs
inc
insl
jg
xor
push
jp
mov
push
sti
push
dec
dec
out
cmp
popf
cmp
lods
push
sahf
pop
arpl
jae
mov
into
dec
outsl
clc
testl
adc
inc
sbb
ret
inc
cltd
rorl
sub
outsl
sub
jnp
andl
xor
xor
and
faddl
sbb
jnp
jae
jnp
jmp
xorl
jg
mov
testb
ret
jae
insl
data16
mov
sub
lret
test
mov
cmp
repz
dec
bnd
daa
lods
das
movsb
les
push
mov
daa
jbe
push
xor
dec
jle
iret
les
pop
mov
std
mov
outsl
jecxz
xchg
test
pop
shrb
iret
sub
out
lock
xchg
xor
test
push
mov
jecxz
icebp
popa
aaa
les
sub
add
and
push
in
nop
mov
out
int3
adc
dec
loope
enter
mov
je
ds
lock
dec
cli
mov
lret
inc
hlt
notb
cmpsb
insl
xor
mov
insb
ret
dec
xchg
dec
dec
fstpl
jle
jno
push
or
add
jno
fidivs
inc
popf
push
jb
xor
mov
repz
js
lods
push
lret
lcall
cmp
inc
mov
ret
ss
outsl
add
jno
out
and
ds
insb
pop
jmp
and
fsubl
mov
lret
fst
jp
or
popa
imul
xchg
pop
jg
sub
fstp
push
stc
ja
out
or
or
cwtl
fwait
jmp
push
nop
xor
and
xlat
mov
cmp
stc
xchg
in
pop
sbb
inc
shll
in
jns
outsl
or
in
pop
loop
fucomip
xchg
jne
xor
clc
fistpl
dec
push
clc
mov
sbb
scas
fcoml
jle
out
adc
adc
push
xchg
mov
repz
mov
jecxz
out
pop
jp
jmp
movsl
stos
adc
sbb
mulb
nop
dec
sahf
xchg
push
add
pop
jns
and
sbb
jl
and
inc
cltd
push
cltd
jecxz
into
push
adc
dec
arpl
adc
out
push
mov
call
gs
js
adc
mov
aam
inc
test
sbb
pop
lock
inc
jge
leave
add
cmpsb
imull
push
stos
bswap
pushf
pop
mov
inc
mov
push
shll
mov
outsb
out
xor
arpl
outsb
movsl
pop
xorb
test
jl
push
mov
repnz
fbld
popa
jge
push
icebp
ds
push
mov
cmp
or
ljmp
or
rclb
stc
not
sbb
fildl
fisubl
dec
shr
jo
mov
xchg
mov
sbb
sub
cmp
sbb
sbb
stos
lret
mov
lret
pop
add
loopne
lahf
sbb
push
fadds
mov
jo
xor
inc
push
or
cmp
xchg
cmp
adc
xor
or
or
cmp
stos
out
jnp
add
push
mov
stos
xor
ljmp
pusha
out
push
sub
sahf
and
mov
mov
in
shlb
cmpsl
inc
outsl
jbe
stc
xchg
dec
pop
fdivs
sbb
cmp
jo
into
mov
stos
ljmp
in
aam
iret
ljmp
jo
or
jmp
sti
outsb
fsub
hlt
cmp
adc
cmpl
xor
mov
sub
sub
cwtl
jecxz
call
clc
sbb
repnz
adc
push
stos
cvtps2pd
or
addr16
push
jge
popl
sub
mov
imul
cwtl
movsl
inc
add
adc
stos
inc
ss
stc
sub
mov
push
dec
inc
pop
lods
sahf
lock
mov
inc
orl
pop
imul
and
outsl
aaa
fcompl
ja
call
leave
in
es
mov
jmp
adc
jb
adc
adc
std
loopne
pop
les
aas
push
xor
or
xor
xchg
inc
jb
push
lds
movsb
jmp
cmovle
shl
imul
das
mov
jl
mov
mov
mov
aas
sbb
aas
jge
add
aad
repnz
push
arpl
dec
pop
dec
sub
jle
push
pusha
jbe
and
fcompl
sub
jge
sbbl
cmp
cmpsl
jbe
mov
pop
andl
test
jg
add
movsb
orb
mov
insb
dec
mov
out
mov
cs
inc
and
or
xchg
test
push
push
jae
cmp
jl
idivl
test
je
test
sbb
add
in
ficompl
jl
xor
incl
lcall
xlat
insl
adc
or
jne
lock
lds
xchg
cs
push
in
jecxz
jb
xchg
and
les
int3
icebp
pop
clc
lods
out
push
popf
into
ss
outsl
mov
out
shlb
or
jb
mov
cmp
push
or
pop
cmpsb
dec
pop
iret
inc
cli
ljmp
int
mov
jae
fnsave
cltd
or
int
push
leave
loopne
cmpsb
out
leave
jo
out
daa
out
xchg
add
xor
clc
pop
outsl
lcall
add
push
mov
arpl
jl
repz
jle
or
mov
scas
sti
or
or
fdivl
inc
xchg
orb
scas
jl
pop
sbb
sub
fstps
or
fcomps
dec
cwtl
mov
xchg
shrb
inc
lcall
xchg
daa
test
pushf
push
pop
jnp
xor
loop
pop
pusha
mov
sbb
int
loope
sbb
jg
shll
jp
and
push
add
rcll
add
iret
push
xor
pop
dec
lock
mov
push
cmp
sti
stc
sub
sbbb
pop
xchg
pop
call
sti
std
mov
jp
rclb
xchg
mov
lock
lahf
mov
jae
ret
dec
pop
pop
insb
add
pop
jo
mov
mov
imul
outsb
inc
sarb
mov
scas
push
xchg
lahf
es
stc
int
adc
sti
mov
ss
leave
ret
adc
and
pop
push
jo
adc
in
jle
sub
shlb
ljmp
and
insl
cli
ljmp
pop
sahf
mov
add
scas
dec
inc
mov
ds
stos
xchg
mov
ja
sbb
scas
mov
aas
jg
sbb
insl
and
in
lds
movl
lret
pop
sbb
cmp
adc
test
icebp
adc
aaa
sub
xchg
stos
leave
ret
dec
cmc
lret
inc
cmpsl
jb
xchg
jmp
into
ret
xchg
stc
xchg
and
aas
ret
in
add
js
sbb
add
sbb
xor
pushf
add
jg
jo
subl
jmp
and
rcl
mov
fcom
sub
ljmp
and
push
enter
xchg
or
mov
clc
jmp
push
dec
sbb
push
dec
data16
clc
pop
arpl
jg
aaa
insb
mov
sub
mov
jns
fnstsw
hlt
cmp
lods
jmp
lea
xlat
mov
dec
testb
and
and
dec
sbbl
mov
push
pusha
xchg
fcmovnb
ja
and
xchg
insb
jae
in
mov
adc
cs
jecxz
sahf
outsb
bound
popa
out
ret
outsb
lret
outsb
push
sub
pop
adc
int
inc
jmp
fs
mov
stc
ja
cs
in
gs
aam
iret
mov
dec
sub
xor
mov
jbe
call
mov
out
cli
push
cmc
scas
shr
lret
xor
cmp
out
or
lods
fmul
mov
adc
sub
adc
dec
ficoms
testl
add
push
lret
lock
push
mov
cwtl
xchg
aas
idiv
pop
mov
sub
mov
popa
push
lock
and
fcoms
cld
je
adc
sub
cmp
add
push
pop
iret
lret
mov
mov
and
and
fs
loop
fcomi
jnp
inc
test
or
cmpsb
mov
lock
mov
dec
and
pop
fldcw
mov
notl
xchg
cmp
jg
imul
aas
insl
decb
mov
mov
ret
cmp
and
shlb
inc
loope
divb
mov
roll
add
xor
cld
sbb
sub
ret
out
jp
ret
mov
inc
movsl
xor
inc
push
test
mov
pop
lsl
shlb
jle
fucomi
xlat
jo
mov
fdivrp
cwtl
mov
dec
jecxz
movsl
sub
cs
sub
sub
mov
dec
cmp
adc
push
roll
fcmovnu
ret
push
mov
outsl
pop
or
addr16
push
imul
lods
adc
aas
jmp
call
push
ja
pop
mov
aaa
mov
sbb
xor
sub
add
adc
xchg
jb
arpl
cmp
lock
addb
add
pop
hlt
lcall
add
rolb
sbb
dec
dec
rclb
dec
adc
pop
adc
icebp
stos
mov
xchg
mov
test
jle
in
jle
cs
jge
or
jbe
int3
hlt
adc
stos
es
iret
movl
aaa
push
stc
xor
jns
pop
shll
popa
nop
xor
jmp
sub
cltd
jp
pop
lods
pop
add
adc
into
gs
push
stc
out
sbb
les
bound
cmp
jne
imul
lea
shl
mov
mov
inc
push
rcrl
fs
mov
jle
loope
adc
cmp
addb
mov
cs
inc
shrl
push
mov
mov
mov
xchg
pop
imul
test
dec
lcall
adc
sarl
ja
mov
mov
jle
mov
fdivr
out
decb
ret
dec
imul
dec
xchg
dec
fstps
outsl
outsl
inc
iret
push
popf
mov
sti
lods
inc
daa
fcmovb
int
cmc
das
pushf
sbbb
mov
mov
rclb
pop
fdivrs
adc
les
add
mov
mov
lcall
adc
mov
dec
mov
pushl
xchg
ret
sahf
cld
aas
fcomps
rcll
mov
cmp
xchg
iret
adcl
mov
pushl
jecxz
outsl
and
push
adc
add
out
sahf
adc
mov
ljmp
testl
fucomp
jecxz
sbb
insb
movsl
ss
lret
xchg
cld
lret
jg
or
push
movsb
jno
xlat
push
clc
push
lods
iret
mov
and
test
dec
push
fdivs
insl
arpl
loop
flds
xchg
add
shrl
out
adc
sub
daa
inc
cmp
sub
das
cmc
jbe
jnp
dec
cmp
lcall
jecxz
cmc
fsubrl
aas
cmpsb
int3
xchg
cmpsb
adc
cmpsb
fiaddl
arpl
and
faddp
lret
jmp
dec
cmpsb
pop
std
or
mov
fcoms
push
jae
pop
shll
push
subl
adc
inc
dec
inc
cmpl
add
xorb
adc
lods
inc
inc
pop
mov
icebp
jns
jno
stos
or
or
in
mov
pusha
ret
push
enter
outsb
inc
mov
scas
inc
adcb
pop
fsub
adc
cmpsl
in
sbb
cmpsl
xor
and
fxam
push
ljmp
xor
adc
enter
iret
movsb
xchg
test
outsl
mul
xchg
fiaddl
test
lods
jns
mov
popf
loope
xchg
sub
adc
std
daa
pop
or
sbb
or
dec
mov
dec
fstl
cli
dec
dec
cltd
int3
push
mov
lock
out
repz
mov
mov
jmp
pop
fwait
mov
xchg
adc
pop
ja
pop
ret
fsubrs
fdivl
fnstcw
pusha
push
add
in
or
lods
cld
repz
andb
sub
sub
inc
enter
dec
mov
and
test
loop
aad
sbb
insb
cmp
xchg
sbb
xchg
inc
pop
mov
or
mov
mov
pop
dec
xchg
out
xor
adc
and
stc
cmc
add
cmp
pop
and
lret
into
cmpsl
xor
xor
fstp
test
rol
stos
aam
out
fsubrs
mov
mov
imul
mov
shl
jp
orl
sub
pop
adc
push
aad
ficoml
dec
jnp
rorl
popa
outsb
ljmp
add
nop
add
pop
and
stc
cmp
sub
rep
jecxz
sub
sbb
std
bound
and
pop
jg
mov
loop
xor
fdivr
out
std
cmp
lcall
push
movsb
xchg
mov
pusha
sti
in
xor
adc
int
lea
mov
fmull
iret
sbb
loop
insl
mov
scas
pusha
pop
push
test
jnp
scas
xor
int3
cli
mov
dec
add
adc
sti
adc
xchg
sbb
xor
repnz
sarb
cmpl
insb
sub
xor
aad
lahf
and
imul
jl
data16
mov
cmp
insl
stc
mov
pushl
jno
les
xor
fdivs
loope
mov
xlat
testb
xor
jnp
popf
jbe
clc
arpl
dec
and
and
mov
dec
add
add
push
mov
cld
outsb
mov
push
mov
cmp
das
lret
xlat
mov
and
xchg
fisttpll
and
pop
xchg
aam
sbb
aaa
add
divb
lods
xchg
and
mov
push
mov
sub
movsl
inc
dec
cli
inc
lds
mov
push
jle
ret
imul
jecxz
test
push
xchg
dec
dec
push
xor
jbe
lahf
je
das
mov
lods
mov
or
jg
test
pop
jbe
pop
out
scas
push
xlat
push
mov
imul
mov
das
pop
cmp
xor
scas
push
pop
adc
cs
xor
insl
inc
jns
aas
xchg
cltd
lods
jle
sahf
in
xchg
mov
add
pop
add
push
bound
pop
aaa
pop
sahf
jno
loope
push
jmp
xchg
mov
in
xchg
loopne
push
xor
cmp
out
mov
cmpxchg
inc
loop
shlb
movq
pop
jns
and
pop
sbb
aam
mov
mov
leave
and
fsubrs
push
pop
std
fdivl
pop
leave
mov
and
clc
xchg
xchg
dec
add
sbb
ja
ret
xor
call
xor
pop
mov
ds
push
cmpsl
xchg
lret
call
loopne
xor
inc
dec
mov
lcall
mov
inc
mov
and
repnz
fldt
mov
loop
dec
aas
mov
cmpsl
clc
inc
arpl
xor
fisubrs
add
std
jne
cmp
cmp
cmpsb
test
bound
cmp
adc
cli
push
out
mov
in
push
aam
mov
dec
rcrb
popf
add
xor
push
cmp
cmp
mov
in
in
lahf
fistpl
push
ja
sub
cmpsb
fwait
movsb
sub
aam
mov
aad
nop
mov
push
inc
enter
fidivl
or
lods
repz
daa
dec
xchg
mov
jne
xor
in
movsb
jge
cltd
or
mov
mov
and
inc
xor
jns
fidivs
cmp
jmp
xor
aam
mov
aad
jecxz
pusha
jno
push
dec
adc
xlat
mov
negl
dec
push
jle
xchg
push
xchg
into
fnstsw
pop
mov
adc
aad
push
sub
mov
pop
test
cwtl
and
shl
cltd
jnp
jno
aam
and
into
imul
jle
fucomi
cwtl
lock
mov
adc
sarb
mov
and
shlb
sbb
cmc
or
jp
mov
shrl
stos
movsl
mov
cmpsb
push
pop
cmpxchg
push
js
add
mov
sbb
nop
jno
aaa
ss
sbb
xchg
jl
pop
pop
push
mov
ret
adc
dec
push
imul
imul
mov
pop
aas
fwait
arpl
push
push
test
mov
mov
pushf
and
xor
xor
cmp
and
mov
sub
cmpsl
cli
jmp
dec
test
xor
das
mulb
push
testb
xchg
xchg
gs
xor
lods
insb
mov
push
jle
or
dec
hlt
lea
int
lds
push
pusha
fisubl
out
cld
push
imul
push
mov
lods
xor
fnstsw
and
in
pop
mov
ja
das
or
clc
dec
mov
jbe
lock
imul
xlat
jg
cld
mov
test
dec
sbb
cmp
mov
add
jge,pt
ret
inc
xchg
cmc
add
dec
loop
fbstp
clc
mov
mov
movsl
pop
cld
in
jmp
mov
cmp
sarb
add
cmpsb
lret
jbe
ret
xchg
and
sub
inc
mov
xchg
pusha
dec
xchg
mov
dec
negb
stc
popf
sahf
repz
fistl
in
and
xor
nop
mov
jge
mov
shrl
lcall
movsl
adc
xchg
clc
rol
xor
aaa
call
cmp
or
movsl
movsl
stos
aam
push
sub
outsb
add
sbb
je
or
jno
mov
fimull
push
xor
sub
inc
sbb
jmp
aas
xchg
adc
lods
pop
lret
push
outsl
push
push
les
xchg
out
out
mov
xlat
pusha
fadds
loope
dec
mov
jb
mov
stc
stos
repnz
dec
fnstsw
fidivs
pop
mov
or
loopne,pn
aaa
xchg
jbe
jle
xchg
imul
pop
mov
lcall
jo
adc
mov
jae
iret
ljmp
mov
push
add
fcomi
mov
sti
ja
movsb
lds
das
dec
rcr
cmc
sub
pop
pop
jno
dec
data16
lods
pop
sbb
movsb
fisubrl
or
push
push
lds
lods
cwtl
push
daa
fwait
cmc
cmp
in
outsl
xchg
lds
lock
adc
mov
sub
inc
loopne
push
mov
jnp
int
sub
out
push
test
je
insb
mov
dec
in
ret
sbb
dec
inc
test
dec
and
rolb
push
mov
sahf
cmp
and
pop
fbld
rorb
xchg
loope
inc
or
bound
jbe
sub
dec
jno
out
xor
nop
shl
mov
cltd
repz
fldenv
fcoms
imull
mov
lea
adc
sub
push
pushf
insl
ret
adc
std
pushf
ja
cmp
out
pushf
mov
dec
mov
cmpsl
pop
sahf
popf
pop
dec
aaa
daa
mov
mov
xchg
add
or
cltd
dec
xor
mov
cmc
ret
mov
sub
or
sub
xor
jne
mov
shrb
pop
adc
sbb
or
mov
pop
loop
mov
pop
dec
push
xchg
adc
mov
stos
inc
inc
cmp
or
xlat
mov
addr16
pop
lret
xor
sarb
test
loopne
adc
ret
xchg
lock
fadds
xor
adc
into
dec
ret
jne
into
cmp
jl
adc
mov
das
clc
fs
cld
mov
sbb
xchg
out
push
lret
xchg
fcoml
sahf
fistps
mov
inc
icebp
ja
int3
mov
mov
imul
push
lret
test
inc
fbstp
push
sbb
xchg
dec
and
and
pop
clc
sarl
into
movsb
pop
loope
std
mov
fnsave
add
pop
mov
mov
sbb
gs
lret
adc
cmpsb
cwtl
jle
xlat
pop
or
push
daa
inc
scas
dec
mov
jno
jg
mov
cmpsl
add
mov
arpl
cmp
outsb
inc
outsb
mov
les
ds
repnz
aaa
add
dec
add
sub
xchg
and
jmp
jns
jmp
add
shl
ds
mov
in
sub
jne
test
mov
cmc
jg
dec
out
lds
call
mov
push
cmpsb
movsb
pop
into
ficompl
in
into
fcmovne
jae
sbb
icebp
scas
add
xchg
dec
hlt
test
or
mov
cwtl
cmc
out
mul
cmp
lods
clc
pop
add
cmp
movsl
add
add
mov
and
and
mov
cmp
jle
pusha
in
jae
inc
fnsave
inc
jecxz
mov
std
out
repz
imulb
ja
mov
and
repnz
sub
dec
jmp
add
es
inc
mov
out
cwtl
adc
out
sbb
imul
loop
inc
add
testb
sahf
das
hlt
xchg
sbb
addr16
jnp
in
pop
js
push
gs
xchg
fcomps
outsl
lcall
mov
lea
add
leave
dec
in
ljmp
aas
popf
fistpl
mov
fldl
push
cwtl
shrb
add
movsl
and
or
je
repnz
push
dec
or
sub
repnz
mov
sbb
negl
ja
pop
fwait
shlb
mov
inc
or
enter
lds
xchg
imull
and
stos
xchg
cli
popf
jecxz
inc
sub
mov
jnp
test
out
xor
ret
sbb
xchg
sub
lods
hlt
popa
dec
imul
lds
fwait
mov
ja
dec
mov
adc
jno
jmp
xor
shlb
lret
push
lahf
xorb
add
shrb
cmp
rcr
ret
pop
aam
dec
test
pop
push
jo
add
ja
lods
loopne
imul
pushf
mov
shlb
pusha
push
inc
gs
std
cmp
mov
jo
xchg
scas
cmp
mov
in
push
sbb
or
pop
dec
push
jmp
dec
sub
outsb
sub
pop
loope
inc
jns
xlat
icebp
arpl
divl
leave
clc
mov
into
xchg
cs
gs
or
mov
cmp
and
dec
mov
push
ja
push
test
rorl
adc
scas
mov
aam
lock
repnz
scas
jbe
cmc
push
and
jb
pop
stos
push
or
notl
test
xor
pushf
insl
sbb
pop
xchg
or
and
push
push
js
xchg
je
arpl
popa
and
lret
int3
cltd
jecxz
addb
jb
aad
je
stos
xor
pop
jne
test
mov
pop
lods
jp
insl
cltd
test
cmp
and
sub
jbe
int
scas
mov
pop
aad
xchg
pop
movsl
int
in
mov
add
fldcw
movl
lret
in
arpl
inc
mov
ds
mov
xchg
push
hlt
cmp
xor
xchg
in
lcall
or
clc
dec
mov
mov
je
subb
daa
in
call
add
pop
fiaddl
pop
dec
cmp
mov
cmc
push
arpl
and
fs
js
inc
in
jecxz
mov
into
enter
mov
loop
ja
rcrl
mov
xor
aas
ja
mov
sbb
aas
loop
jb
jle
xor
pop
xchg
movsl
pop
mov
add
cli
js
pop
mov
adc
mov
cmp
sbb
lret
in
aam
fstpt
jg
cmp
daa
and
out
add
movsb
cmp
aam
lret
push
adcb
xor
sub
in
stc
lcall
pop
push
mov
addl
imul
dec
stos
xchg
mov
fwait
push
repnz
mov
nop
mov
sbb
dec
xor
loopne
in
jg
adc
and
in
test
test
enter
fcompl
pop
shll
and
or
test
jbe
icebp
xor
in
adc
fnsave
clc
sbb
xchg
lcall
cmpsl
mov
iret
mov
stc
add
sub
mov
xchg
aaa
jo
cmpl
push
lahf
dec
sbbb
aaa
pop
xor
out
or
add
mov
jmp
adc
icebp
cli
mov
or
aas
popf
fs
daa
rorb
add
pop
daa
push
cmp
dec
xor
pop
scas
daa
dec
mov
rcrl
push
xor
dec
popa
sub
inc
arpl
inc
lret
int3
sbb
jb
pop
sahf
mov
ja
mov
inc
mov
out
ds
jns
inc
jne
outsl
push
jmp
push
lods
push
gs
dec
push
adc
pop
cwtl
aas
in
cmpsl
fisttpl
cli
pusha
aam
xchg
xor
push
sbb
sub
ja
test
or
aad
enter
imul
or
or
pop
dec
faddl
adc
ret
sarb
mov
sbb
xor
dec
js
fdivrs
jnp
adc
mov
rcrl
loop
lret
nop
ljmp
mov
mov
xor
ja
pop
testb
or
nop
xchg
mov
ja
lret
mov
cmp
insl
jae
popa
lret
test
ja
adc
out
xchg
fisttpl
lods
jmp
lods
js
out
jo
test
ljmp
inc
pop
mov
ss
lret
push
mov
lods
js
ljmp
dec
push
xchg
sub
ss
sbb
jge
data16
addb
popa
or
fisubrs
and
sbb
into
mov
xorb
mov
out
aam
lret
popf
adc
jo
add
icebp
push
addr16
outsb
shlb
cmp
cld
aam
jp
xchg
loope
inc
fnstsw
jb
test
xlat
repnz
sbb
xchg
sub
dec
mov
enter
dec
loop
and
dec
test
jo
incl
aas
xchg
push
dec
pop
icebp
adc
mov
lcall
orl
cwtl
mov
and
dec
xchg
mov
sbb
nop
jbe
xchg
xor
xlat
inc
push
jnp
push
adc
xchg
cmp
fstps
ret
pop
jo
in
lods
pusha
fdivl
mov
and
xor
out
pop
repnz
sbb
es
lret
jle
jno
int
sub
fstl
add
xchg
adc
cmc
sbb
and
mov
xchg
sahf
aam
mov
std
jg
imul
pop
into
xor
jecxz
add
adc
xchg
insb
xor
jbe
dec
stc
dec
addl
sub
lods
push
test
mov
aam
inc
fisubrs
clc
ljmp
push
push
pop
mov
adc
add
les
push
cltd
push
xchg
adc
fwait
mov
jne
ljmp
push
mov
mov
or
mov
push
aad
push
mov
scas
sub
cmp
imul
gs
ret
pop
pop
out
pop
adc
insb
and
iret
mov
js
in
or
mov
pop
sub
fwait
rcll
insb
pushf
xor
xor
out
jno
movl
sbb
fs
mov
lret
lret
test
lret
jae
in
lahf
jmp
sar
lcall
stc
nop
xor
in
cltd
jmp
mov
cmpl
push
mov
jg
pop
mov
cmp
pop
mov
mov
pop
cmpsb
pop
pop
insl
aad
jecxz
lea
stos
movsl
lahf
inc
mov
mov
out
sub
xor
mov
scas
aas
in
outsl
mov
or
xchg
xor
sub
add
push
cmpsb
mov
call
push
je
cli
movsl
mov
push
sub
cltd
push
and
sbb
sbbl
cmp
or
adcb
insb
dec
mov
ljmp
mov
shlb
addb
stos
add
int
es
push
repnz
jg
loopne
xlat
xchg
outsb
lahf
cmpsb
add
lret
add
imulb
inc
adc
sub
sub
add
sub
xchg
imul
dec
cs
es
adc
jb
inc
stos
xlat
imul
and
leave
or
cmp
or
fdivrs
test
jbe
cld
test
add
int
cwtl
in
es
mov
inc
ja
popf
cltd
and
repnz
dec
mov
std
bnd
fstl
loop
mov
cwtl
int3
mulb
orb
and
mov
adc
sbb
cmp
inc
jle
mov
push
adc
clc
pushf
insl
adc
xchg
cmp
mov
push
pop
jb
pslld
ret
outsl
stc
cmc
push
jg
dec
mov
int
inc
mov
aam
or
divl
add
pusha
sub
shlb
sbb
movsl
addb
ja
mov
xchg
xchg
pop
imul
inc
mov
cmp
addr16
push
call
jb
mov
clc
out
push
xor
sbbb
in
pop
in
pxor
ja
fidivl
cmpsb
fiaddl
mov
test
and
jne
dec
sub
or
pop
loop
movsl
cli
xchg
fistl
and
testb
add
sbb
push
mov
jbe
sub
add
lods
xor
sbb
inc
test
push
jb
inc
hlt
dec
shrl
dec
or
sti
jno
addl
pop
outsl
xor
xor
add
lret
outsb
mov
xchg
push
mov
adc
aad
stc
pop
stos
mov
inc
xchg
into
stos
adc
dec
mov
mov
mov
js
xlat
cmpsb
pop
aam
or
ja
or
data16
jns
adc
shrb
adc
ss
push
je
lods
or
inc
in
jne
push
xor
ret
inc
clc
imull
aas
cmp
divb
rcrl
testl
mov
mov
bound
cmp
aaa
pop
mov
mov
adc
jno
out
mov
das
xor
inc
adc
cld
fcoms
xchg
lcall
icebp
inc
dec
mov
and
jnp
lret
push
clc
arpl
lds
xor
jns
jmp
enter
das
test
arpl
test
jno
xorl
repnz
test
into
pushl
lret
and
mov
add
sbb
sahf
jge
insl
xor
movsb
inc
sub
pop
mov
mov
sbb
mov
add
or
pop
mov
scas
les
mov
adc
mov
in
xchg
add
mov
or
int
pop
shrl
ds
pop
das
in
imul
enter
pop
pop
inc
mov
insb
inc
daa
cmp
stos
mov
imul
push
sbb
dec
out
js
inc
adcl
adc
out
mov
mov
stos
push
shll
jecxz
dec
rorl
push
and
sbb
sub
xchg
push
negb
and
test
adc
and
add
dec
nop
mov
in
ficompl
or
push
arpl
mov
call
mov
sbb
aaa
xor
cs
sbb
stos
cmpl
and
fisubl
aaa
fimuls
lods
leave
mov
xchg
je
xchg
mov
inc
test
movsb
inc
fs
int3
cmp
xlat
lods
push
stos
jno
jle
dec
inc
sub
adc
dec
in
test
mov
std
daa
pop
jo
or
push
loop
push
mov
pop
ss
sbb
out
xchg
nop
cwtl
or
daa
dec
clc
adc
test
inc
call
push
sub
inc
orb
pop
jae
test
shlb
and
cli
test
iret
adc
and
xchg
std
mov
or
cmp
push
bound
rol
lret
dec
add
std
mov
and
sub
lock
daa
bound
jo
outsb
xor
cli
es
mov
imul
push
pop
pop
stc
dec
add
iret
push
mov
jp
cli
fs
les
and
sub
arpl
add
inc
lcall
pop
inc
shrl
mov
mov
adc
jle
cld
insb
inc
jnp
push
mov
jbe
jnp
push
adc
inc
inc
xor
js
xchg
fwait
enter
xor
lcall
jge
mov
push
add
divl
xorb
ret
idivl
ljmp
imul
cmp
popf
jl
inc
push
push
sarl
xchg
xchg
pop
daa
push
mov
xor
lret
les
in
push
in
fmull
mov
leave
std
nop
shlb
lods
stos
in
push
add
les
mov
imul
fldt
inc
insl
and
xchg
icebp
je
mov
or
cmc
icebp
pushl
and
pop
popf
negl
cs
push
popa
cmpsb
icebp
cmp
add
xchg
out
dec
shlb
aas
out
dec
movsl
stc
cmp
inc
popf
mov
and
popf
fnstenv
or
fimull
or
or
cmp
out
and
sbb
outsl
jg
jnp
adcb
lds
ret
test
xchg
nop
daa
dec
div
mov
and
mov
addr16
mov
jge
mov
mov
jno
mov
fcom
aam
fnstcw
stc
xchg
in
jle
sbb
cmp
leave
mov
jge
enter
jnp
inc
cmpsl
jge
aad
divl
sbb
ljmp
mov
sbb
dec
int
xor
jecxz
test
adc
xchg
push
lcall
add
stos
xchg
mov
ja
lods
mov
jae
lahf
cmpsl
fisttpll
out
pop
add
inc
lahf
cmp
adc
pop
cs
fmull
jno
arpl
jl
subb
jbe
sti
push
cmp
and
imul
xor
mov
mov
mov
adc
xor
movsl
aad
mov
push
mov
mov
nop
cltd
int3
fwait
jg
cmp
mov
faddl
jb
jl
mov
or
insb
les
jb
dec
test
or
mul
adc
sar
cmp
mov
dec
push
js
jo
imul
fcmovnu
sti
adc
hlt
cvtps2pd
or
in
f2xm1
or
in
dec
loop
and
push
dec
pop
iret
cmp
in
rcrb
pop
insl
stos
mov
ret
cmp
lods
jle
dec
clc
dec
cltd
mov
stos
outsb
out
cmpsl
sub
or
out
sbb
sub
das
fsubrp
cmp
rcrb
daa
sahf
xchg
xor
jle
sub
test
or
mov
jns
inc
xchg
test
stos
mov
push
sbb
cmp
xchg
xor
adc
negl
push
popf
ja
pop
lea
sbb
or
dec
ltr
fists
stc
dec
adc
ret
push
ret
mov
test
stos
push
rcll
cmpsl
es
push
dec
mov
fsubrl
jne
pushf
cmc
dec
rorl
or
xlat
das
mov
dec
inc
lahf
jne
fwait
cmp
ds
loopne
adc
dec
aad
loope
sbb
shrl
sahf
scas
shll
cmp
je
repnz
push
push
push
push
mov
dec
and
sbb
cmc
divb
jp
mov
or
push
sub
stos
negl
inc
push
mov
push
leave
sub
mov
inc
mov
and
or
in
or
jbe
fistps
frstor
mov
mov
je
mov
hlt
mov
mov
mov
pop
shr
sub
push
in
sbb
and
pop
jb
mov
add
movsl
xchg
or
js
mov
cmp
mov
mov
mov
lcall
cmp
sbb
pop
inc
or
dec
fwait
xchg
xchg
xor
dec
fdivrl
inc
pop
repnz
inc
dec
rorl
adc
je
dec
and
daa
pusha
cwtl
test
fcoms
lret
movb
jo
xchg
sbb
cmp
bound
fnsave
mov
cld
movl
sbb
arpl
mov
rcr
inc
pop
in
mov
hlt
sbb
dec
cmp
mov
shll
pop
add
in
cmp
fnstsw
popf
shll
sti
push
push
xchg
ret
xlat
fsts
test
inc
add
nop
test
mov
stos
mov
stos
data16
test
in
xchg
adc
popf
push
or
cltd
inc
cmp
popa
ljmp
pusha
push
push
mov
ljmp
fistl
clc
mov
loop
dec
dec
and
jge
out
dec
or
xor
hlt
rclb
cmc
mov
mov
add
outsl
lcall
outsl
mov
push
add
out
pusha
loop
shlb
ffree
lds
ss
insb
add
push
test
movsl
popa
push
xor
mov
sar
and
inc
stos
jl
stos
out
push
loope
mov
push
or
cmp
jae
clc
test
dec
and
out
outsl
mov
int3
pop
push
jle
inc
push
pop
jb
js
push
add
js
xor
pusha
cvtps2pi
sti
dec
mov
fiaddl
add
in
push
mov
and
or
mov
xor
mov
or
aam
pop
mov
jle
lods
in
inc
fidivrl
shrb
mov
fwait
dec
push
inc
mull
addr16
bound
int
add
daa
mov
mov
jge
in
test
mov
sbb
pop
mov
out
cs
phsubw
xor
mov
push
lea
xchg
mov
icebp
or
movsb
mov
sbb
scas
jae
cmc
jge
mov
add
add
cmc
push
adc
inc
and
shll
in
sbb
adc
mov
mov
add
push
xor
xchg
test
lcall
arpl
push
cs
jl
push
pop
aaa
test
dec
jp
sub
stc
out
sbb
dec
dec
jne
ja
outsb
imulb
mov
out
int3
js
or
test
ja
aad
divb
sub
cld
cmc
nop
pushw
ds
leave
add
sbb
leave
add
cmpl
fcmovnu
sbb
and
xchg
xchg
clc
out
stos
mov
das
adc
fstpl
mov
xor
mov
stos
lds
dec
adc
lcall
data16
jmp
mov
sbb
bound
les
mov
cmpsb
stos
mov
cmpsb
lods
cmpb
jg
insb
enter
xor
dec
and
adc
jne
aad
pushf
xor
adc
dec
std
bound
cwtl
inc
decb
cmc
std
decl
inc
jb
mov
xchg
pop
pop
insb
imull
sub
dec
xor
je
shl
xor
aad
xchg
aam
push
add
div
pop
data16
or
xor
punpcklwd
cmp
hlt
pushf
lds
mov
xchg
and
pop
cli
push
push
repnz
inc
leave
or
dec
mov
sbb
repz
hlt
insb
arpl
fsubl
repnz
repz
push
jge
inc
pop
mov
bound
jbe
ja,pn
and
lcall
cmpl
std
pop
fwait
mov
cmp
cmp
aas
or
shl
insl
mov
inc
jle
mov
fs
fwait
mov
sarl
fcompl
lcall
mov
fisubl
pop
mov
sub
insl
dec
dec
add
sub
mov
movsl
mov
insb
imul
pop
mov
cmc
xchg
push
jb
inc
adc
fsubp
inc
mov
leave
test
mov
cli
in
fstps
dec
ljmp
inc
jl
jns
insb
lea
cmpsb
inc
adc
jle
jmp
or
lods
iret
pop
popl
push
push
inc
xor
mov
and
mov
fisubrs
mov
push
xor
xor
push
mul
into
addr16
xor
mov
mov
je
into
int3
jecxz
add
repnz
pop
mov
nop
mov
cld
out
sub
pop
popf
in
mov
lock
andl
and
xor
inc
icebp
shlb
xchg
loopne
sti
jle
arpl
inc
lret
pop
mov
or
xchg
add
push
pop
cmpsl
cmp
and
jno
push
popf
jmp
and
repz
shl
sahf
inc
jmp
cmpsl
sub
insl
sbb
loope
out
dec
push
pop
dec
inc
cmp
stc
pop
lret
mov
lret
jp
movsb
jo
sbb
data16
aas
popa
and
jp
adc
fdivrs
pop
data16
int
popf
sbb
sub
sbb
pop
imull
icebp
adc
lret
clc
ret
pushf
and
xor
xor
mov
adc
clc
inc
inc
jb
xchg
push
add
push
in
inc
mov
fucom
push
js
xor
jno
ret
lock
lea
adc
ljmp
cmc
das
fdivs
dec
adc
jnp
jl
dec
mov
add
cmp
jns
ss
fs
cmp
aad
out
sub
push
lret
sub
imull
movsl
leave
xchg
loope
adc
ret
sub
add
sbb
dec
xchg
adc
push
fdivrp
bound
mov
call
sub
fildl
and
add
rcrb
sti
dec
jo
jl
inc
or
xor
cmp
scas
xor
aaa
addb
pop
es
inc
or
xchg
rolb
call
cli
xabort
and
cmp
aam
jmp
mov
loope
jno
jno
mov
adc
pushf
mov
xor
aad
xor
inc
push
js
pop
cs
sub
ret
mov
jbe
mov
mov
daa
push
inc
fs
out
ret
jg
or
mov
cltd
xor
sbb
cmp
outsl
adc
je
sub
orb
js,pt
inc
pusha
jne
sti
cltd
xor
imul
fistl
das
mov
and
add
adc
cmpb
jae
cli
xor
jle
mov
ss
sub
sbb
dec
sub
jne
inc
pop
jo
adc
jne
test
xchg
fiaddl
cli
jmp
out
dec
pushf
js
lea
outsl
cmp
mov
leave
sbb
mov
insb
or
jle
out
mov
dec
inc
or
fbstp
cmp
imul
pop
popa
add
xorl
outsl
mov
pushf
push
fistl
adc
jp
ret
adc
mov
aad
fisubs
lret
bound
push
or
es
les
sub
cmpsl
pushf
sbb
jno
jo
and
fldcw
dec
lahf
adcb
pop
ss
pop
bound
inc
sbb
gs
sub
adc
sub
cmpl
or
dec
int
cmp
mov
ret
daa
add
adc
lret
cmc
mov
or
bndldx
fstl
imul
jns
movsl
shlb
inc
pop
mov
jbe
pop
jno
or
fsubrs
pusha
add
in
push
or
xchg
popa
jmp
xor
loop
and
movsl
sub
add
aaa
dec
lahf
nop
pop
sbb
push
movsl
cmp
out
shlb
test
cmp
loop
scas
pusha
loope
xchg
fisubs
push
push
call
or
ret
imul
push
mov
push
das
repz
rorl
jle
inc
shll
sub
jl
push
adc
lds
cld
inc
sbbl
dec
push
insb
add
aam
and
lret
enter
mov
das
ffreep
fldl
sbb
inc
mov
sub
imul
hlt
jecxz
pop
push
push
dec
addr16
inc
or
fcomps
sti
test
test
hlt
mov
xchg
cmp
xchg
leave
inc
test
mov
mov
xchg
pushl
fwait
jmp
sahf
cmpsb
sub
dec
xor
es
jle
leave
xor
cmpps
pop
mov
sti
ret
into
ror
hlt
pop
push
inc
decb
jle
test
and
jnp
pop
fnsave
xlat
mov
jp
pushf
mov
pop
out
pop
and
jle
nop
cld
popf
call
sbb
dec
in
repnz
xchg
das
mov
jnp
xor
test
xor
pop
mov
jnp
in
pop
mov
test
lock
pop
hlt
or
and
cli
pop
lret
sbb
jmp
inc
movsb
adc
push
nop
or
std
sarl
sub
dec
repnz
loope
inc
stos
push
mov
insb
pop
cmc
mov
call
mov
jmp
ja
add
fwait
xchg
sub
insb
inc
sahf
nop
jne
test
or
out
mov
push
lret
sbb
add
or
lds
jno
add
mov
fdivrs
sar
nop
mov
mov
xor
in
fcmovnbe
push
or
lock
xchg
mov
jge
mov
push
mov
inc
push
fdivs
addl
leave
xchg
xchg
mov
xor
call
imul
adc
ror
daa
mov
and
fs
xorl
outsb
pop
push
imul
icebp
and
sub
or
aad
jmp
jbe
adc
outsl
add
imul
cmp
aaa
cmp
mov
cmp
mov
pop
xor
mov
lea
test
sbb
imul
scas
inc
hlt
and
and
int3
pop
jae
into
mov
mov
xor
out
enter
stos
ret
pop
into
mov
push
lret
repnz
lret
push
mov
push
lcall
jnp
mov
mov
imul
sub
mov
es
int3
cmp
cmpsl
pusha
dec
xchg
aas
adc
scas
insb
adc
pop
pop
mov
push
mov
jl
sub
jae
xchg
sub
hlt
xor
or
shl
push
jl
or
rcrb
mov
int3
sub
dec
pop
inc
in
xor
test
jle
dec
out
mov
les
dec
loop
adc
test
mov
cmp
insl
mov
aad
inc
int3
repnz
mov
inc
xchg
scas
push
aas
enter
repz
xchg
xchg
dec
lahf
daa
pop
mov
dec
in
popf
fiaddl
dec
sub
enter
push
rcll
in
add
stos
scas
dec
aam
sbb
dec
pusha
aad
push
int
stos
adc
incl
subl
mov
inc
lret
mov
add
cs
cmp
lcall
sub
xor
inc
enter
jae
pop
outsb
jle
xchg
xchg
aaa
sub
xchg
or
dec
jno
push
inc
out
xor
inc
xchg
cmp
mov
gs
mov
xchg
addr16
adc
loope
std
pop
pop
pop
outsl
out
scas
sbb
stos
inc
lahf
or
imul
sub
or
add
and
inc
arpl
pop
aaa
xlat
aad
lret
out
std
inc
mov
jb
mov
inc
out
inc
dec
mov
testl
mov
xor
inc
jp
mov
push
push
push
imul
mov
dec
sub
mov
lods
testl
insb
cltd
and
jno
imul
mov
pop
call
fdivrs
push
fs
push
push
xchg
xor
or
jge
call
or
out
xchg
jle
push
inc
rorb
xor
and
pop
int
add
mov
fstps
std
cmpsl
fidivl
in
cmp
out
fcmovnb
inc
sub
cmc
rclb
ja
mov
adc
jne
sub
into
into
jmp
js
push
iret
pop
mov
mov
cmc
fldl
bound
pop
inc
push
dec
insl
dec
xchg
pop
mov
test
lods
mov
inc
xor
xor
jnp
incl
cmp
negl
out
pop
repnz
pop
loopne
inc
lods
lcall
mov
fimull
push
imul
dec
pop
dec
arpl
jb
and
and
test
test
mov
adc
cmp
out
mov
mov
lds
push
sbb
leave
faddp
sti
out
mov
sub
push
add
es
pop
rorb
sbb
add
adc
rcl
loope
pushf
or
hlt
cmc
mov
insl
sbb
lods
test
sti
jbe
fidivl
fwait
sti
test
adc
pop
fwait
sbb
xchg
jge
ja
cmpsl
dec
pop
lods
gs
outsl
xchg
daa
pop
inc
sbb
into
jecxz
aaa
mov
sub
outsl
mov
fdiv
inc
jg
gs
mov
js
xlat
jmp
and
call
popf
hlt
stc
xchg
sub
les
js
les
ficomps
or
popa
or
add
mov
cli
push
mov
loop
cmp
inc
test
ss
push
pop
jae
push
lret
xor
imul
ret
scas
mov
xor
xchg
leave
fs
mov
jg
dec
xor
xchg
jecxz
cmp
bswap
mov
in
movsb
push
mov
add
push
xchg
js
sbb
scas
dec
mov
xchg
mov
fdivrs
loop
loope
test
inc
jmp
into
aam
dec
jecxz
clc
pusha
rcrb
jle
mov
popf
push
cli
incl
push
jbe
pop
cmp
pusha
push
cmpsb
adc
outsl
mov
push
data16
bound
dec
push
xor
mov
pop
and
sbb
stos
lock
ret
push
or
sub
shlb
or
pop
test
cmpl
dec
leave
xchg
pop
jmp
sub
inc
xor
inc
hlt
subl
cmp
xchg
popf
sbb
sbb
pop
ret
mov
sub
clc
mov
add
stos
loopne
mov
in
mov
adc
sub
mov
mov
adc
or
fnsave
pop
sub
ja
inc
dec
ret
push
lea
int3
fs
adc
shlb
fiaddl
push
mov
shll
pop
out
pop
fstl
mov
jg
lods
mov
neg
push
ret
sub
leave
adc
jmp
inc
xchg
imul
lea
pusha
mov
ljmp
inc
in
lahf
pop
xchg
loopne
or
jno
icebp
push
push
add
shl
mov
ss
pop
in
lcall
dec
sbb
add
cmp
dec
andl
mov
cli
dec
std
push
scas
clc
lea
push
stc
int3
and
mov
cmpb
popa
xchg
test
jno
mov
and
mov
jno
int3
int
loop
stc
mov
sbb
cli
and
xor
movsb
in
mov
cmc
sub
mov
sahf
push
insl
push
testl
jg
cld
repnz
int3
ja
lahf
cmpsl
xchg
and
pushf
dec
mov
adc
test
dec
movsb
ret
xor
sbbl
inc
jmp
inc
lret
mov
bound
mov
outsl
dec
mov
jge
addr16
pop
jecxz
or
or
lahf
mov
cmp
or
inc
outsl
les
dec
cmp
loop
cmc
mov
xor
mov
ficoml
in
mov
popa
shr
pop
and
adc
push
dec
out
push
shl
xchg
sbb
ljmp
dec
shll
pop
mov
lds
jmp
pop
xor
aam
xor
das
loope
adc
push
cwtl
and
insb
cmp
test
cmp
lret
inc
cmp
xchg
movsl
cmp
dec
mov
mov
xor
mov
xor
cltd
sub
call
in
inc
mov
pop
stos
bound
int
inc
ljmp
insl
pop
dec
loope
add
mov
mov
mov
out
sbb
mov
mov
ret
cmp
lret
push
sbb
les
pop
iret
popf
jecxz
sti
cmp
lock
jno
stos
or
sub
leave
sub
repz
call
push
andl
movzwl
xor
or
out
cmp
jmp
cmp
inc
pop
int3
jmp
adc
call
xchg
or
cmp
adc
dec
repz
jmp
in
lods
scas
imul
push
push
push
aaa
jge
movlhps
rorl
das
scas
or
mov
hlt
and
andb
fwait
andb
andb
mov
out
jb
mov
jg
jge
lea
inc
imul
jle
jne
adc
decb
bound
cmpsb
out
mov
dec
pop
call
sbb
jmp
inc
ret
ja
sti
pop
ds
mov
mov
loope
ja
xchg
cmp
rol
test
or
aam
xchg
lods
add
sbb
or
push
lret
int3
sbb
cmp
xchg
adc
enter
dec
and
and
xchg
sbb
in
out
mov
xlat
dec
cld
rclb
out
push
nop
out
fwait
rcrl
ret
dec
cmc
adc
cltd
or
jmp
fimull
clc
aam
ss
cmp
cmc
cmp
out
jle
daa
lods
jmp
sbb
push
dec
inc
lods
lret
or
ja
sbb
test
lock
push
scas
xor
push
stos
xor
std
inc
fs
ret
lds
jp
or
mov
dec
hlt
sbbb
mov
orl
mov
cli
sbb
sub
mov
push
xchg
fwait
arpl
mov
mov
mov
leave
ret
push
aam
fisttpll
xor
add
orb
xchg
fcoms
fisubl
push
push
xchg
outsl
dec
xor
pushf
jge
mov
out
mov
jno
push
sub
xchg
das
adc
jp
push
sbb
push
sahf
lods
cmp
aaa
jne
fimull
mov
shll
outsl
outsl
push
jnp
fcom
stos
sbb
rcr
inc
sub
mov
aas
fstpl
mov
xor
mov
mov
out
lret
mov
inc
fadd
adc
mov
push
push
sarb
testb
cld
pop
jle
ss
fwait
movsl
sub
mov
xor
dec
xchg
pop
divl
les
pop
mov
jb
mov
cmp
outsb
out
mov
xchg
sub
mov
test
pop
mov
js
sub
cmp
adc
cmc
scas
jo
ss
sbb
nop
popf
or
or
outsl
call
push
add
pop
dec
fdivrl
imulb
shll
dec
jle
sbb
hlt
mov
pop
and
fnsave
fldln2
cld
pop
cmp
std
jo
imul
aaa
std
shrb
sbb
inc
cmp
sbb
xchg
dec
loopne
lods
xor
arpl
daa
in
push
std
lock
adc
inc
mov
mull
sbb
nop
xchg
sub
xchg
xor
jnp
mov
push
pop
push
movsl
repnz
and
xchg
cmc
mov
pop
aad
aaa
je
mov
lcall
xor
jns
data16
push
mov
and
jecxz
repnz
call
mov
push
mov
mov
sbbl
push
mov
mov
sbb
xor
push
in
jl
pop
jo
mov
movsb
jo
bound
jne
mov
jmp
jne
es
loopew
int
mov
xchg
and
sahf
sbb
mov
jle
in
xlat
add
bound
pop
xchg
in
inc
mov
mov
xor
pop
cmpsl
sbb
jnp
push
xor
dec
mov
inc
movsl
pop
shlb
push
pop
shlb
jne
push
subb
daa
bound
jb
add
xchg
xchg
stc
loop
pop
rcrb
mov
sbb
sarb
pop
cmp
jg
jmp
es
cmp
inc
std
pop
mov
mov
adc
call
in
sbb
mov
sti
rclb
ja
std
std
dec
push
es
jmp
sahf
rcl
mov
push
cmp
mov
fldl
mov
mov
ret
loopne
subl
ret
lret
cmpsl
bnd
outsl
inc
pcmpgtd
and
sbbb
jmp
cmpsb
push
push
divl
jnp
icebp
bnd
fbstp
vpmulhw
and
dec
dec
mov
push
pop
inc
mov
mov
lods
pushf
fsubrs
xchg
inc
insb
out
add
adc
dec
jle
push
test
dec
and
cmp
cmp
fimull
push
push
test
mov
jmp
mov
dec
add
sub
pop
pop
stc
xchg
loop
mov
repnz
add
fnstenv
jns,pn
xlat
push
or
cmpsb
fucomip
ret
dec
mov
pop
int3
pop
add
and
and
je
mov
lret
dec
pop
sti
out
fidivs
adc
enter
add
cmp
fisubs
and
jne
mov
popf
cwtl
mov
repnz
pop
outsl
movb
xchg
std
inc
outsl
pop
daa
xor
cmpb
jl
sub
insl
cmpsb
sbbl
repz
js
add
scas
xchg
mov
sub
mov
mov
push
dec
dec
stos
sahf
hlt
lcall
ljmp
dec
ds
jmp
les
mov
sbb
push
push
jns
xchg
fidivl
lcall
ja
lcall
std
clc
mov
adc
pop
add
mov
mov
cmp
adcb
dec
sbb
out
cmpsb
scas
pop
loope
sub
int3
in
xchg
call
xor
es
fwait
and
fcoms
int3
sub
fcoml
sahf
out
mov
dec
dec
lea
imul
jnp
add
lods
cmpsl
int3
jnp
add
inc
gs
subb
xabort
insb
test
pop
es
cmp
pop
xor
push
push
je
pop
jmp
adc
pop
and
add
or
mov
xchg
xor
nop
roll
xchg
push
lret
iret
mov
mov
int3
fimuls
loop
adc
and
jecxz
mov
mov
dec
push
or
cmp
xchg
cwtl
pop
test
pushf
sub
outsl
repnz
xlat
or
push
push
mov
imul
lds
fwait
aas
shl
fistps
push
mov
cmp
test
test
pop
pop
jb
cmp
sub
mov
iret
mov
repnz
mov
fisubrl
jbe
cmp
es
mov
add
insl
inc
xorl
mov
push
pop
inc
stc
xor
inc
insl
push
cltd
scas
mov
jns
std
iret
daa
flds
cltd
mov
or
shll
fcoms
mov
adc
lods
loope
cmp
cmp
push
mov
pop
add
ds
aas
jnp
add
lret
xor
pop
cli
xlat
repz
stos
movsb
and
push
movsl
jge
or
pop
popa
jl
cltd
sub
jle
iret
dec
xor
mov
sbb
push
fsubl
test
fildl
sub
xor
fsub
outsb
ret
mov
shlb
roll
add
and
mov
lods
lods
shlb
jmp
sbb
sti
mov
icebp
sahf
fs
mov
fwait
into
inc
aam
lea
cmp
loope
mov
lock
pop
xor
shrl
jl
pop
sar
mov
dec
ss
fs
and
movsl
pop
movsl
sub
xor
jns
and
xor
add
dec
xor
fdivrl
imulb
in
testl
or
push
xor
loop
pop
pop
mov
sub
fbstp
shr
pop
aam
xchg
insl
sbb
dec
sti
sub
lahf
xchg
dec
inc
mov
lret
icebp
insb
xor
or
and
push
jno
lcall
xchg
sub
hlt
addl
pusha
negb
push
adc
out
pop
or
sub
inc
inc
mov
test
stos
sub
dec
imul
dec
sbb
push
push
lcall
rcrb
xor
jg
pop
cs
subl
adc
inc
push
push
test
lock
mov
in
mov
insl
mov
shlb
ds
out
jae
stos
jb
cwtl
icebp
fdivs
push
lock
je
sub
lods
jle
lcall
inc
loopne
cmp
xchg
loop
add
sbb
cmpsb
outsb
adcb
jne
insl
push
insl
lock
dec
push
bound
bound
aam
hlt
adc
fdivrs
ds
jb
inc
loopne
call
lds
call
push
inc
dec
loop
das
xor
rcr
clc
pop
cs
jl
fcomip
jne
cmp
push
mov
pop
xchg
in
clc
jae
fsubp
js
jmp
sub
push
es
insl
dec
mov
lds
push
dec
inc
repz
push
dec
arpl
inc
lahf
ss
stos
cmp
cli
sub
enter
dec
mov
in
cltd
outsb
cmp
or
xchg
or
sub
fprem1
mov
push
jb
cmp
cmp
adc
movsb
mov
adc
pop
xchg
and
aaa
push
cli
cs
dec
push
daa
pop
inc
and
roll
decb
pop
mov
sub
dec
mov
jnp
xchg
push
inc
pop
das
mov
loopne
into
and
mov
push
mov
jl
xor
add
in
fwait
add
jl
popa
inc
pop
ljmp
sti
ret
mov
jle
stc
mov
xchg
ljmp
and
jnp
mov
push
inc
adc
and
aas
fistpl
sti
stos
jae
sub
jl
jl
xchg
add
imul
ss
sub
cli
mov
mov
loop
aam
push
imul
add
dec
dec
ljmp
inc
ljmp
int
call
mov
lahf
add
adc
int3
adc
adc
mov
cmp
jle
lahf
sub
add
lds
mov
out
mov
sbb
mov
adc
cltd
inc
repnz
das
mov
xchg
push
aad
xor
xchg
inc
or
leave
adc
push
cltd
cmpsl
push
mov
jl
stos
mov
fadd
sahf
adcb
inc
or
pop
mov
ds
mov
xor
pop
nop
jno
fidivrs
push
jg
cmp
mulb
std
test
movsl
pushf
lahf
popf
fstl
or
ficompl
cmp
clc
mov
dec
daa
andl
sub
mov
lret
iret
stos
mov
into
inc
divb
and
sub
sbb
shll
ret
xor
repnz
mov
inc
xor
icebp
sarb
mov
cmp
ljmp
lock
adc
outsb
adc
xor
or
add
mov
inc
dec
mov
arpl
loope
cmp
daa
and
mov
icebp
or
sti
jbe
push
sbb
sbb
out
sub
lret
mov
jg,pt
adc
cmp
sbb
mov
cmpl
sti
cli
movsl
sbb
mov
lods
enter
dec
and
int
mov
in
xor
xor
mov
adc
or
add
jmp
push
push
in
outsl
mov
pop
xor
insl
ja
pop
sub
jl
push
loopne
sub
and
lea
dec
lds
call
ljmp
call
rsm
clc
cmp
inc
lods
fstpt
lods
clc
mov
pop
inc
daa
in
outsb
cmc
fidivrl
cmpsl
xchg
repz
aaa
jmp
sbb
pop
lcall
cmp
stos
cmpsb
push
sub
ret
mov
out
nop
inc
push
aas
inc
inc
cs
mov
mov
add
xchg
add
mov
push
arpl
test
push
dec
add
mov
push
adc
lcall
inc
das
or
out
movsl
call
jb
popa
push
test
loopne
std
mov
jae
pop
test
inc
push
and
jnp
repz
test
outsb
movsl
fdivs
jl
fistl
adc
int3
and
mov
lods
mov
fnop
movsb
iret
imul
mov
enter
fisttpl
pusha
push
subl
or
test
in
cltd
adc
pop
fimuls
insl
add
outsl
rclb
loope
mov
out
inc
and
mov
lea
cld
rolb
out
jle
pop
out
cmp
fildll
and
ja
outsb
push
xchg
fldenv
mov
jbe
movsb
loope
rcrb
push
imulb
ss
mov
in
sub
rorl
ficoms
add
or
or
cmp
gs
hlt
sbb
ficompl
pushf
push
or
movl
mov
ss
imul
in
fisttps
test
jle
inc
mov
mov
mov
dec
cwtl
loop
repnz
loopne
stos
add
and
icebp
das
and
xchg
jmp
xchg
jno
inc
loopnew
mov
cli
push
mov
xor
cmc
xor
inc
dec
push
sar
shll
cmpsb
cmp
insl
daa
mov
shlb
out
lods
int3
xor
inc
popf
gs
or
mov
push
mov
sahf
out
xchg
inc
cli
rorb
out
mov
cltd
sbb
push
loop
inc
int3
inc
pop
and
xchg
das
push
imul
jae
rep
fwait
xchg
xor
hlt
pop
adc
shr
pop
int
sub
sub
add
rcrb
cmp
out
ret
mov
jno
mov
lret
fstps
xchg
rcr
dec
jmp
movsl
sti
stos
mov
mov
jns
cmp
jecxz
repz
stc
nop
jb
in
inc
fcoml
enter
xor
icebp
int3
icebp
out
inc
testl
push
jge
sar
and
mov
xor
das
dec
aad
push
popa
cmp
sahf
sub
dec
pop
rcl
lcall
xchg
fstps
adc
aam
cltd
loop
pop
pushf
rcll
pop
mov
dec
fstps
inc
jg
push
jge
pusha
mov
mov
je
sub
std
pop
test
imul
and
xchg
outsl
xor
inc
js
scas
and
mov
push
cmp
repnz
jle
mov
cs
add
outsl
mov
and
pxor
xchg
mull
xchg
and
das
pop
icebp
mov
mov
loope
loop
dec
mull
cmp
in
pop
cwtl
mov
shll
xchg
lods
insl
mov
jle
sub
add
loopne
mov
loop
das
sbb
inc
push
pop
int3
push
cmpsb
dec
add
int
dec
ret
xor
and
inc
mov
xchg
push
cmp
ljmp
ja
jge
repnz
xor
jl
setno
mov
aad
push
jae
aas
cltd
in
mov
adc
mov
loopne
or
dec
mov
std
mov
shlb
add
insb
pop
push
insb
sarl
inc
adcl
xor
mov
or
dec
aad
sub
mov
pop
sub
fs
cmp
outsl
sbb
sahf
sbb
daa
inc
movsl
sbb
mov
inc
outsb
add
or
mulb
in
cmc
hlt
cmp
pop
xlat
das
xlat
arpl
mov
incl
in
mov
mov
and
sarl
xchg
push
mov
push
inc
add
cmp
ficompl
int
fs
adc
jnp
cmp
test
scas
daa
mov
js
xchg
sbb
je
jecxz
push
add
sbb
xor
aas
mov
cmpsl
aam
loop
ss
mov
inc
adc
stc
hlt
fstps
push
inc
add
daa
aaa
cmpl
dec
sbbb
mov
rcrb
movsl
cmp
clc
mov
into
jns
xor
cmp
repnz
ss
rclb
dec
ja
and
mov
mov
jecxz
out
mov
mov
stos
or
inc
xor
repnz
enter
int3
stc
inc
hlt
clc
xchg
sbb
push
in
jne
lods
inc
jmp
cmp
xor
and
jns
push
xchg
sub
stos
fdivrl
or
scas
xchg
mov
lret
xor
int
sub
jbe
in
aam
pop
test
ja
push
or
shrb
cmp
movsl
inc
lds
outsl
dec
xchg
js
mov
cmp
jg
cmp
sub
mov
mov
pop
mov
fisubs
fadds
dec
xchg
test
pop
pop
pop
popf
imul
pop
sarb
adc
sbb
aam
stos
pop
push
dec
adc
add
cmp
insl
into
bound
in
lret
lea
test
arpl
mov
mov
lds
mov
xchg
stos
js
adc
movsb
andb
iret
neg
scas
cmpsl
dec
cs
pop
xor
out
inc
sahf
cmpsb
jne
das
sub
das
cmc
mov
outsl
push
xchg
test
xchg
mov
mov
shrb
sbb
cmpsl
adc
jno
push
ret
add
push
jl
push
adc
pop
roll
adcb
jne
jecxz
push
mov
jb
sub
loopne
inc
ficoml
lret
mov
push
dec
out
and
movsb
in
sbb
inc
mov
add
mov
sub
ret
aam
leave
inc
sbb
cmpsb
mov
negb
xchg
push
mov
mov
rcrl
jo
fistpl
iret
mov
lea
rorl
flds
xchg
push
loopne
mov
pop
inc
daa
mov
sub
mov
pushl
add
dec
xor
hlt
and
xor
adc
nop
adc
clc
push
leave
fwait
sarl
cmp
pop
int
fcompl
adc
int3
pop
xchg
or
aaa
pop
push
sub
mov
lods
pusha
xor
or
adc
sub
adc
jge
sub
cmp
push
ret
inc
call
and
mov
hlt
xchg
lock
test
je
push
bound
jae
sbb
insl
xor
nop
push
fwait
mov
mov
loope
push
pop
rcrl
or
inc
inc
cmp
lret
lods
in
push
or
pop
ljmp
out
xchg
or
scas
xlat
ss
and
roll
mov
stc
jecxz
lea
fidivrs
lret
dec
push
arpl
es
mov
outsb
daa
cmc
subb
adc
cmp
inc
cmp
add
into
jno
lods
ja
bound
jae
inc
sbb
mov
dec
mov
ret
and
aaa
jmp
inc
loopne
dec
dec
mov
sub
cmp
pop
and
cli
shll
fnsave
or
test
push
fs
cmpsl
movsl
imul
aad
mov
push
or
mov
mov
in
adc
insl
or
jbe
sub
xlat
nop
cltd
or
push
mov
data16
cmp
pop
incl
pop
es
adc
adc
add
push
stos
enter
int3
xlat
pop
call
and
inc
mov
stc
mov
pop
jnp
out
pop
sarl
adc
fwait
test
sbb
rorl
mov
inc
xchg
add
outsl
sbb
push
sahf
push
je
pop
sbb
mov
or
xchg
rcrb
pop
or
cmpsb
mov
mov
pushf
repnz
sbb
xor
aas
rcr
xor
add
std
movsl
je
js
aam
add
sarb
gs
push
es
nop
xor
jno
dec
sbbb
xchg
test
cltd
scas
scas
loop
mov
lret
and
pop
mov
sub
inc
or
fisubs
vpunpckhbw
xlat
adc
fidivrl
movl
popf
add
push
sbb
jnp
push
dec
stos
es
jae
cmp
shrl
mov
ret
mov
test
inc
call
faddl
pop
repz
shll
imul
int
jmp
pop
pop
mov
jo
push
push
icebp
stos
testl
in
scas
outsl
pop
mov
leave
sbb
cld
and
pop
adc
sub
out
push
dec
xor
dec
dec
nop
insb
in
sub
ffreep
xchg
push
insb
and
jecxz
push
call
aad
mov
mov
ds
out
dec
int3
shl
pop
xchg
hlt
sub
enter
mov
and
sub
mov
pop
pop
aaa
cwtl
mov
enter
cld
or
pop
sub
lret
lcall
fmul
xor
mov
push
xchg
push
xlat
test
jae
dec
push
push
jl
inc
stos
inc
inc
rcrb
pop
dec
data16
lret
xor
jne
pop
inc
test
leave
mov
daa
cmpsl
xor
sub
insl
ds
imul
dec
inc
and
mov
inc
cs
fmull
mov
jae
lods
sub
jmp
xchg
mov
jbe
dec
data16
ljmp
pop
add
lock
and
test
push
mov
push
pop
mov
in
cmpsl
std
repz
mulb
pop
pop
push
int3
and
adc
mov
xchg
iret
cwtl
shl
sbb
lods
pop
es
xor
pop
mov
mov
test
pushf
push
movsl
sub
add
enter
out
mov
mov
push
jge
mov
pop
mov
out
and
leave
adc
popa
js
pop
mov
faddl
andb
vdivps
mov
imul
loop
mov
jg
add
cmpsl
sarl
test
adc
addl
outsb
fs
xchg
orl
rolb
repz
jns
lahf
adc
xor
in
add
push
test
jnp
jge
inc
jae
push
movsl
xlat
icebp
pop
loope
add
pop
movsl
pop
xor
test
shrb
dec
jae
fisubs
jne
lahf
jecxz
fs
or
mov
mov
out
lcall
jne
push
mov
lahf
cmc
push
cmp
sbb
pop
fldcw
mov
and
and
sahf
cltd
jno
mov
push
cbtw
mov
cmc
sbb
adc
push
cwtl
sub
xchg
lds
enter
mov
xchg
hlt
xor
mov
inc
mov
xchg
ja
aas
jne
cwtl
notl
lods
xor
jle
fldl
pop
mov
xlat
sbb
subb
popa
movsb
dec
in
shrb
sbb
push
mov
pop
jbe
negl
xchg
sbb
mov
xchg
addr16
mov
lods
fwait
xor
pop
pop
lds
adc
xorl
ja
loopne
cmp
push
mov
adc
and
xchg
stos
inc
loopne
jg
cmc
and
or
pop
es
ret
jl
test
sahf
push
das
xchg
jmp
dec
push
adc
mov
sti
lea
out
xor
mov
lret
cwtl
in
aaa
xchg
xchg
fnstenv
inc
inc
mov
xlat
lahf
mov
inc
mov
adc
aam
push
cmp
cld
add
insb
arpl
inc
lret
push
sub
cmp
sbbl
sti
dec
add
add
fidivl
or
mov
iret
je
jne
loope
mov
repnz
ret
lahf
add
paddusb
insl
cs
and
les
push
les
xor
std
aad
adc
mov
mov
inc
and
inc
mov
popl
cmp
test
jnp
and
insl
enter
dec
jle
jecxz
xchg
and
mov
xorb
js
jle
cmpsl
and
jo
shrb
shl
xor
pop
insb
xchg
hlt
pop
rclb
push
pop
hlt
xchg
cmp
aaa
pop
jp
ljmp
aam
je
lds
mov
ss
dec
mov
stos
stos
inc
lret
push
xor
inc
xor
daa
mov
dec
in
cmpsb
inc
cmp
data16
push
call
ljmp
jle
adc
inc
xchg
push
in
pop
xor
nop
ss
inc
xorl
fidivs
adc
sbb
repz
rcr
sub
jecxz
jge
sub
clc
daa
pop
add
xlat
push
mov
cmp
lcall
test
mov
popa
jns
or
loope
sbb
aas
mov
mov
fisttpl
mov
mov
cmovbe
cmp
sub
jb
es
loope
mov
mov
mov
cli
ret
mov
dec
test
lahf
rol
pop
lods
and
andb
xchg
fcompl
xor
fwait
xlat
std
cmp
mov
inc
xor
mov
ljmp
and
repnz
popa
sub
mov
pop
cs
mov
xchg
scas
xchg
cmp
hlt
es
rorb
shlb
push
mov
aas
xchg
jle
mov
xor
pop
iret
jb
push
mov
mov
ficoml
hlt
inc
and
pushf
lds
push
mov
mov
push
fildl
cltd
int
sbb
pop
call
push
mov
je
in
xor
roll
xor
shlb
and
repnz
mov
cmc
mov
ljmp
in
sarl
xor
pop
jns
or
stc
xor
fs
pop
jae
cmpsl
push
clc
mov
or
sub
call
test
enter
jecxz
xlat
jecxz
shll
ja
into
pop
movsb
hlt
js,pt
cs
mov
xor
enter
out
es
loopne
movsl
xor
cmp
aad
inc
pop
call
jg
or
sub
in
out
scas
mov
addl
pop
inc
andl
mov
fsts
cmp
mov
pop
sub
adc
nop
sarl
test
mov
mov
xor
repnz
inc
scas
sub
andl
cmp
xchg
sbb
push
push
clc
std
ds
out
adc
fwait
jl
rcrl
scas
mov
in
xor
clc
mov
sub
cltd
inc
call
stos
stos
outsb
push
sti
push
jo
test
aam
jmp
sahf
shrb
inc
push
cld
push
out
xchg
mov
fistps
inc
scas
push
lock
int3
add
cli
cmc
std
xchg
mov
inc
mov
cmp
movsb
mov
and
adc
jl
lcall
mov
outsl
mov
add
das
adc
inc
ficompl
lods
scas
sahf
adc
fs
fdiv
or
push
xchg
pop
xor
cmpsb
into
jg
ret
les
ss
sbb
push
sub
aam
adc
xchg
inc
inc
shlb
enter
call
aaa
push
pop
mov
and
xor
je
or
xchg
xchg
rcrl
push
inc
test
loopne
push
out
mov
mov
jmp
into
lret
pop
add
fwait
mov
imul
hlt
dec
mov
es
push
pop
xchg
ss
ret
enter
jno
adc
push
xor
add
sub
icebp
addr16
lds
xchg
push
fdivs
push
sbb
jmp
pop
push
jmp
dec
mov
fisubrs
test
ss
pop
imul
outsl
sub
subl
roll
mov
out
les
inc
fstpl
xchg
jno
call
mov
sbb
adc
sahf
cld
push
rcll
mov
leave
xchg
add
cltd
js
jge
inc
shlb
push
mov
fstps
xor
sti
ss
arpl
outsb
std
mov
fcoms
sbb
mov
pop
mov
mov
jecxz
dec
bound
icebp
xlat
insb
inc
fisubrl
mov
inc
xor
sub
out
dec
gs
test
push
shrb
pop
jecxz
jecxz
push
rorl
divb
lods
imul
xor
mov
dec
adc
shrl
adc
sbb
cwtl
repnz
fildll
mov
pop
repnz
and
adc
ja
mov
dec
and
jp
add
pop
or
mov
jmp
insl
jmp
in
data16
shr
retw
dec
scas
cmp
loope
iret
fdivl
fsubrl
movsl
or
std
lret
sbb
pop
inc
ret
divl
xor
adc
lods
setl
test
imul
loope
fnstsw
jle
insl
jae
aam
mov
outsl
pop
mov
ja
add
arpl
sbb
add
cmp
test
xorl
dec
icebp
loope
dec
mov
cmp
imul
pop
and
jmp
add
pop
movsb
sub
mov
xlat
sub
jbe
jns
loop
mov
lds
jmp
bswap
sbb
dec
or
xchg
pop
out
jl
mov
dec
outsb
popa
sarb
imull
insb
push
mov
addl
xor
jbe
sarl
mov
cmp
jp
push
dec
sub
call
fs
xor
mov
insl
push
test
in
lcall
mov
gs
pop
ja
xchg
push
add
inc
nop
outsb
out
push
sbb
pushf
sarl
xor
adc
mov
adc
lret
mov
xchg
in
int3
loop
rcrl
fs
pop
jge
mov
scas
mov
lret
jno,pn
jno
or
fldcw
mov
fidivrs
mov
cmpsb
sbb
cwtl
adc
dec
or
cwtl
mov
std
fisubl
jae
adc
adc
jecxz
lret
or
xor
les
mov
out
sbb
xchg
std
jecxz
andb
stos
xchg
rolb
cmp
sub
and
xchg
lea
jle
sbb
scas
cld
or
stc
stos
add
movsb
push
mov
loope
cwtl
aam
movsl
data16
mov
push
fst
lock
pushf
stos
jl
xchg
cmp
and
stos
mov
cmp
test
sbbl
test
lds
mov
adc
fdivs
fidivl
jo
mov
mov
mov
sbb
test
shlb
negl
jo
adcb
les
xchg
sub
dec
mov
dec
xchg
loop
js
imul
test
imul
or
cmp
mov
icebp
in
mov
mov
jp
rorl
clc
repnz
aad
mov
test
rorl
data16
or
mov
fbld
ljmp
lret
scas
popa
add
fisubs
push
add
mov
inc
cwtl
data16
or
sub
in
or
dec
cmpsb
psubd
add
dec
inc
sub
shll
stos
sub
add
imul
cltd
mov
sub
pmuludq
in
pop
add
rorl
xchg
pop
shrb
cmp
movsl
xor
fcmovnu
or
inc
mov
jmpw
int3
aam
sub
fldcw
leave
sub
dec
clc
cmp
lea
mov
daa
mov
fidivrs
adc
push
sub
dec
push
shr
and
push
adc
scas
jp
into
je
lahf
push
dec
pop
daa
nop
scas
jmp
es
push
mov
pusha
sar
xchg
mov
icebp
sti
xchg
out
daa
stos
inc
ja
or
push
xchg
mov
jns
xor
nop
bound
mov
jne
int3
sub
clc
push
adc
or
add
idiv
jmp
add
xor
xor
mov
mov
pop
dec
iret
aaa
adc
jg
fidivs
mov
imul
xlat
pusha
ret
test
cmpxchg
or
add
insb
jo
aad
add
fs
fimull
and
lock
jnp
outsb
inc
or
js
xchg
test
mov
xor
push
xor
add
test
test
jg
aad
jg
aam
insl
xchg
rorb
inc
sbbb
loope
ret
shll
xchg
sub
mov
jle
mov
lods
sub
mov
xchg
sbb
hlt
inc
xchg
in
das
in
inc
loope
cmp
addr16
or
jl
outsl
mov
dec
pop
es
in
dec
inc
sbb
negl
mov
mov
adc
cmp
adc
adc
insl
leave
jecxz
ljmp
xor
pop
imul
adc
testb
mov
clc
xchg
cmp
dec
fs
adc
push
pop
js
jmp
hlt
movups
pop
jecxz
mov
popf
sbb
les
fwait
xchg
jmp
jbe
fisubs
pop
insl
sbb
mov
shl
sbb
xor
cltd
addr16
add
lock
and
cmpsl
mov
orl
add
xchg
cmp
loope
adc
cmp
push
cli
sbb
adc
xor
jae
xchg
and
xchg
lahf
pop
popa
jne
sti
sbb
pop
jb
xor
mov
outsb
jns
mull
add
shll
and
dec
mov
stos
scas
xchg
mov
movsb
stos
inc
jo
fldl
icebp
push
nop
pop
jmp
aas
sbb
inc
inc
cmp
int3
loop
imul
scas
sub
cmp
test
dec
xchg
in
dec
inc
leave
shll
test
inc
imul
mov
jo
push
call
jb
pushf
test
leave
pop
mov
jl
jo
js
fsubl
xor
test
insb
aad
xchg
cmp
mov
or
lret
or
mov
bound
fmull
mov
jae
add
int
nop
daa
push
push
in
add
or
out
adc
dec
loopne
push
in
mov
out
cltd
mov
adc
out
jnp
cmp
mov
xor
mov
or
dec
popf
stc
xchg
or
push
jnp
vpunpckhdq
or
sub
dec
push
mov
jae
pop
out
cmp
sub
int3
clc
ja
jne
movsb
stos
movsb
outsb
xor
ljmp
lods
ja
lods
stos
add
push
adc
jecxz
jmp
nop
mov
xor
nop
push
cmp
jno
fdivrs
cltd
xchg
test
nop
mov
in
cli
dec
cmp
lcall
cmp
sub
pop
ds
mov
fwait
stos
mov
lahf
cmpl
jne
lret
sbb
mov
mov
and
push
in
jg
mov
adc
mov
jae
mov
sbb
ss
sahf
cmp
mov
sub
pop
icebp
cmpsl
mov
mov
pop
adc
inc
lahf
dec
leave
mov
jmp
sbb
xchg
cld
sub
shrl
pop
dec
scas
fwait
push
hlt
and
mov
fiadds
pop
jmp
mov
test
shr
aaa
push
leave
xchg
push
mov
cmpsl
mov
xor
cltd
mov
or
jmp
adc
call
adc
out
fdivs
sbb
jmp
and
xchg
jle
repz
inc
xor
xor
pop
ficompl
mov
mov
test
nop
loop
add
repnz
add
cmc
sub
ljmp
loope
or
pushf
mov
loope
add
add
loop
and
add
xchg
xor
pop
leave
jns
in
and
cwtl
mov
rol
fidivrs
pop
enter
xlat
pop
xor
call
and
test
cld
pusha
add
repnz
inc
xchg
sbb
mov
stos
ds
dec
xlat
jl
and
cmp
faddl
lret
lret
icebp
inc
movsb
sbb
loope
lret
xchg
aad
cmpb
adc
fbld
fwait
rcrl
dec
enter
add
push
sbb
dec
ljmp
inc
cmp
cs
call
mov
xlat
mov
repnz
push
xchg
jne
inc
dec
and
movsl
or
jg
lea
push
pop
xchg
jg
movl
lods
enter
ds
es
add
push
adc
enter
push
cmp
xchg
mov
repz
sub
or
dec
lea
outsb
sbb
lret
ds
sti
das
mov
sub
scas
mov
test
fistps
call
cmp
cmp
mov
mov
iret
cmp
test
xlat
jle
leave
fs
filds
stc
clc
in
incl
mov
push
push
sti
das
pop
cmp
aam
cmpsb
add
dec
push
and
mov
jecxz
xchg
sub
sub
into
sbb
jg
mov
push
xchg
bound
mov
or
inc
mov
mov
stos
and
mov
pop
mov
mov
shlb
dec
mov
ss
mov
and
push
cmp
in
nop
pop
jmp
lret
dec
pop
lcall
add
fidivrl
lock
in
mov
add
enter
push
push
mov
mov
push
jne
pop
bound
daa
scas
bnd
je
dec
or
jbe
dec
loop
sub
mov
mov
fcomps
mov
cmp
add
sub
mov
aas
nop
loop
mov
div
cs
inc
jp
test
xchg
mov
and
sub
and
flds
les
mov
sti
pop
shrl
pop
ficomps
pop
mov
rcl
ja
cmp
adc
cs
stc
add
stos
sbb
mov
in
add
fcomps
add
movsb
push
fdivp
dec
sub
adc
lods
mov
push
pop
shrl
outsl
cmp
mov
dec
fstpl
mov
sub
xchg
insl
xor
rclb
pop
rorb
shll
arpl
imul
sbb
outsl
leave
or
lcall
inc
mov
inc
xor
je
and
ss
imul
mov
and
gs
int3
ja
jnp
les
decb
lcall
add
sbb
cmp
fidivrs
sahf
leave
cmp
cmp
mov
push
sbb
xor
add
push
sbb
loope
jne
push
int
clc
sbb
ret
loop
aaa
push
aaa
mov
xor
pop
mov
or
jb
sbb
or
xlat
lret
lahf
dec
jl
push
cmc
add
dec
adc
dec
scas
or
movsl
lret
mov
insb
cmc
test
cmpb
iret
jb
int3
adc
adc
mov
stc
stos
das
pop
xchg
mov
pop
in
cmpsb
enter
pushf
inc
add
orl
jo
mov
ss
add
rolb
mov
inc
outsb
and
gs
jmp
imul
jbe
mov
sti
popf
or
pop
or
fistl
cmp
cli
loop
inc
dec
lahf
ds
xchg
repnz
push
jns
cmc
sub
mov
lcall
xchg
cmp
adc
repnz
sub
pop
pushw
in
sbb
jle
call
rcrb
inc
push
sbb
int
fdivs
add
push
jno
daa
bound
sbb
mov
fwait
xchg
jl
enter
loopne
sub
push
pop
pop
mov
pop
or
stos
sbb
push
loop
shll
add
xor
inc
lret
stos
mov
shlb
inc
adc
outsl
std
popa
xor
mov
sar
ja
sub
pmulhuw
insb
movsb
or
or
fdivl
arpl
mov
mov
jle
andb
idiv
mov
ret
or
and
aam
lcall
gs
mov
loope
in
push
xchg
dec
pop
jp
popa
into
pop
imulb
sbb
cmpsl
dec
lcall
stc
in
jp
adc
push
fwait
or
pushf
dec
rcrl
xchg
fimuls
fidivrs
and
pop
mov
xchg
rorl
outsb
hlt
push
sti
test
jbe
cltd
hlt
pop
xchg
push
xchg
mov
jge
push
xchg
inc
dec
inc
jp
stos
and
cltd
inc
inc
xchg
sub
std
adc
mov
add
xchg
ja
push
outsl
jle
out
or
sub
scas
push
inc
adc
cli
clc
jne
mov
jmp
or
jno
aam
sub
les
cmp
into
enter
jne
hlt
std
mov
lods
jne
or
pop
shrb
inc
mov
flds
hlt
pusha
sub
popf
xor
xor
and
sbb
mov
xchg
sbb
cmpsb
cltd
clc
xor
jp
les
jle
in
pop
lret
push
pop
sbb
iret
arpl
sbb
cmp
shlb
stos
jmp
sbb
ficompl
fists
js
faddp
xchg
dec
lahf
cld
int
add
sub
dec
push
fwait
es
shll
push
adc
ret
adc
mov
xlat
xor
lods
xchg
adc
faddl
aas
add
call
lea
clc
loop
push
jmp
subb
lods
adcl
cmp
lods
in
pop
adc
mov
in
pop
sbb
push
mov
mov
popf
lds
jbe
push
out
jge
ja
scas
fldt
xchg
sahf
test
out
xlat
jo
aaa
lcall
ds
mov
jp
jle
mov
dec
cmp
scas
mov
dec
pop
cmp
and
loope
pop
jl
xchg
push
testl
flds
mov
or
push
mov
dec
in
inc
aaa
mov
scas
cmpsl
pop
fcomps
sub
xor
dec
icebp
jne
push
mov
adcl
push
cwtl
mov
or
sahf
test
cmp
jnp
and
cmpsb
cltd
je
cmpb
dec
push
adc
shlb
leave
jno
sbb
popa
add
fucomip
lods
pop
jb
jl
jns
cld
mov
fcompl
jns
dec
sub
outsl
mov
dec
cmp
sahf
insb
rcll
inc
xchg
imul
add
pop
and
sbbl
mov
dec
outsb
sbb
xchg
sbb
dec
shlb
and
mov
jp
push
fs
cmpsb
and
adc
cmp
add
jne
jg
aad
and
stos
shrb
xor
scas
cmp
aas
pop
xchg
fs
mov
testb
mov
xor
aaa
add
jbe
aas
les
adc
frstor
push
push
adc
roll
jle
mov
jmp
das
test
inc
insl
in
sub
xchg
push
mov
rcr
lods
lods
call
mov
xor
or
cmpsl
xor
jns
in
and
xor
out
test
lea
add
out
mov
xor
mov
pop
or
gs
popf
mov
push
data16
push
pop
mov
inc
sub
mov
dec
ret
sub
sbb
adc
add
out
das
out
push
pop
or
inc
add
push
jb
pop
adc
icebp
mov
push
stos
and
inc
test
mov
adc
cmp
xchg
inc
cmp
cltd
sub
push
cwtl
pop
pusha
cmp
xchg
rcrb
dec
enter
dec
insb
mov
push
pop
mov
in
je
in
ret
adc
mov
push
pop
pop
inc
dec
cmp
test
aam
jg
stc
jle
cmc
repz
pop
and
push
dec
enter
lcall
mov
stos
xor
mov
addr16
jge
mov
sbb
rorb
scas
jns
add
js
sbb
cmp
cmp
mov
lret
pop
mov
frstor
sub
pop
test
sub
pop
mov
cmp
scas
arpl
sub
ss
mov
sbb
dec
push
cmpsb
cld
xchg
addr16
imul
jb
dec
scas
or
lods
jecxz
leave
stos
decl
mov
jg
repnz
and
vpminsw
dec
repz
bound
loop
outsl
lret
movl
sti
mov
cli
mov
mov
jae
sub
jbe
nop
scas
lret
test
pushf
fucomp
arpl
imul
test
and
out
sub
mov
xor
inc
mov
movsb
aad
call
xor
bound
loop
loope
cmp
incl
inc
sbb
jmp
inc
rcl
sbb
jb
dec
push
and
or
cmp
or
mov
jg
jmp
mov
cmp
repnz
out
ret
push
shll
push
test
xor
xor
jno
adc
lcall
mov
sbb
lock
bound
push
dec
pop
inc
add
push
movsb
sbb
aam
jne
push
movsl
outsl
push
sti
inc
inc
push
sbbb
lds
aaa
fistps
cmpsl
cmpsb
out
xor
push
adc
out
fs
bound
mov
ljmp
cmc
jae
popa
mov
fstpt
aaa
inc
inc
adc
adc
lcall
in
sahf
mov
pop
and
inc
or
xor
shll
adc
pushf
cmc
imul
push
or
mov
lea
adc
push
pop
push
xlat
jbe
or
inc
jl
fbstp
push
loope
dec
leave
in
pop
adc
js
pop
jecxz
pop
jae
repz
sbb
mov
aas
loopne
cs
mov
sub
jo
fadds
adc
jmp
pop
cmp
jno
mov
les
or
jb
xor
scas
stos
cmc
nop
rcrb
cmp
pop
sub
clc
cmpsl
clc
dec
int
lods
popf
xchg
test
dec
gs
cwtl
xchg
sub
mov
rolb
cli
insl
lds
in
push
xlat
mov
mull
pop
and
out
cwtl
pop
fistps
fldl
jbe
ret
adc
adc
mov
repnz
pop
int3
mov
pop
inc
mov
arpl
cmc
mov
movsb
dec
or
aas
iret
dec
sbb
rorl
int
mov
push
xchg
cmp
cmp
cmpsl
popl
loopne
faddp
ficompl
push
lds
shll
mov
dec
mov
test
ja
cld
cmpsb
mov
mov
pop
jns
das
loopew
dec
jb
shl
enter
mov
cmp
imul
cli
arpl
cmp
fprem
out
cmp
inc
ds
cs
iret
insb
sbb
or
cmp
data16
sbb
je
cli
and
stc
pop
add
cmp
inc
jp
popf
mov
test
movsb
and
cmp
pop
aam
adc
mov
pop
ss
sub
ret
iret
mov
pop
test
sbb
push
sbb
jmp
dec
mov
sub
xorb
push
clc
adc
push
mov
xchg
scas
lods
mov
dec
xchg
daa
outsb
lcall
lahf
mov
cmp
and
pop
mov
pop
sub
and
jne
xor
cltd
pop
cmp
sub
lods
loope
mov
lahf
push
hlt
inc
xor
adc
mov
inc
cli
in
xchg
and
xchg
push
dec
adc
fldenv
mov
dec
xor
nop
les
or
xchg
mov
xor
dec
pop
jp
sarb
loop
lea
ficompl
lcall
stos
into
mov
xchg
rcrl
cmp
stc
lret
mov
push
das
movsl
add
repz
lds
pop
mov
scas
ds
std
mov
nop
call
xchg
and
iret
stos
jne
add
outsl
cmp
cmp
popa
xchg
pop
aam
cwtl
in
dec
add
movl
adc
mov
sub
xchg
filds
sbb
aam
push
or
or
push
lods
xorl
inc
fst
insl
push
dec
call
sti
add
push
xchg
addr16
jp
dec
in
jo
loopne
cmp
adc
pop
push
leave
adc
mov
jae
mov
xchg
sub
pushf
test
jb
dec
aad
je
inc
jge
cli
adc
in
outsl
lahf
and
iret
and
mov
in
push
jecxz
and
cmp
cmp
or
sub
in
imul
jmp
loop
inc
in
push
scas
jnp
and
jbe
pop
les
sbb
sbbb
jp
pushf
mov
imul
mov
dec
pop
jge
test
adc
xchg
test
aad
rcll
push
test
pop
insl
xchg
sbb
cs
femms
pop
push
pop
lds
jmp
sbb
add
xor
out
cmpsb
adc
jge
mov
mov
mov
repz
pop
les
testl
push
or
sub
sbb
fiadds
test
mov
fistpll
in
cs
loope
cmp
out
sbb
bound
jne
movsb
jg
xchg
enter
ret
es
mov
pop
enter
cmp
mov
fdivl
jns
mov
fisubrl
mov
subl
pop
sbb
lret
push
adc
adc
xor
xchg
stos
push
fdivrs
pop
mov
add
adc
nop
xor
sbb
push
nop
push
pusha
mov
or
lea
mov
lds
add
gs
scas
add
repnz
in
pop
jo
shlb
dec
test
pop
ror
aam
jo
cld
and
push
or
sbb
dec
sub
pusha
jne
icebp
arpl
imul
add
and
xchg
cmp
mov
mov
add
subl
mov
movsb
fstps
in
in
decl
out
add
cli
int
dec
xchg
stos
mov
test
ficompl
adc
stos
mov
inc
test
lock
ljmp
shrb
pop
pop
jl
notl
data16
jmp
cli
bound
add
mov
imull
xor
cmp
xchg
and
je
scas
cmp
test
leave
and
push
sbb
jmp
sub
push
cmpl
ret
int
jle
inc
sbb
jbe
lcall
sahf
push
add
or
pop
or
into
xchg
sub
rclb
std
cmpsb
add
sbb
andb
pop
addr16
in
setne
fcmovnu
xchg
adc
repz
fimuls
sub
mov
jecxz
sub
jp
push
adc
lea
jle
js
and
js
rolb
test
jb
movsb
jge
movsb
add
addr16
aaa
fstpt
inc
jo
cmp
xchg
ret
insl
cli
inc
sbb
data16
subb
in
je
aas
into
arpl
pop
and
les
nop
hlt
idivb
movsb
jns
inc
push
cmp
test
mov
shl
sub
pop
adc
push
inc
enter
orl
sti
ljmp
leave
and
mov
or
lret
in
dec
repnz
and
xchg
pushf
mov
or
jg
fistpl
inc
adcb
ret
lock
mov
nop
cmc
sbb
pop
xor
dec
stos
mov
lods
lret
cmpsb
xchg
mov
fwait
sbbl
or
mov
and
rorb
xor
std
inc
xchg
hlt
sahf
push
push
out
or
mov
aam
je
lret
adc
aaa
mov
cmpsl
sbb
int3
push
mov
or
push
aam
rcrl
int
imul
fisttpll
stc
adc
jo
xchg
push
daa
adc
lret
mov
sti
sub
dec
out
fldcw
movb
xchg
cmp
mov
push
sbb
sbb
lcall
adc
push
fcom
adc
int
dec
shrl
or
xchg
mov
movsb
push
leave
xchg
dec
cmp
dec
mov
arpl
sub
xchg
cwtl
clc
cli
inc
sub
adc
dec
pop
push
fwait
sahf
loopne
and
repz
hlt
ds
jg
mov
jns
inc
xchg
nop
adc
push
scas
xlat
mov
mov
inc
dec
mov
nop
rorl
xor
pop
inc
xchg
cmp
jecxz
pop
gs
push
mov
xchg
jno
hlt
mov
sub
jbe
or
fnstenv
rcrb
movsb
and
xor
add
push
mov
stos
cmp
push
adc
jge
mov
inc
hlt
rcll
xorb
push
rclb
dec
pushl
int
popf
cs
jmp
sub
cmp
xlat
in
lock
jge
sub
sbb
push
lock
mov
cmp
test
call
out
test
dec
add
pop
ud0
add
push
mov
in
rcll
mov
dec
xor
mov
cwtl
cmpsl
sarl
cld
lods
sbb
push
in
add
out
pop
jnp
dec
jo
mov
ficoml
aas
lret
repnz
cltd
lods
cmp
adc
cwtl
iret
jne
inc
jp
adc
ljmp
sbbb
cmpsl
aaa
pop
mov
jle
and
test
mov
jp
pop
nop
xchg
dec
pop
inc
dec
push
xchg
ja
adc
or
sub
jnp
add
popf
test
nop
jmp
pop
into
gs
shlb
adc
bound
inc
pop
mov
mov
nop
push
jg
inc
sub
inc
cltd
daa
cmp
pop
mov
lret
add
and
xchg
out
cmp
jbe
jg
pop
adc
push
mov
nop
je
add
lret
cmpsb
fwait
jge
bound
js
push
jge
inc
push
stos
aam
xchg
ljmp
mov
je
push
adc
insb
rcr
ds
sub
xchg
xorb
mov
jmp
fcompl
repz
subl
push
mov
inc
lret
adc
mov
push
dec
and
cltd
jno
jmp
jle
jo
jne
jae
dec
loopne
adc
sub
add
xchg
mov
push
or
xchg
test
iret
test
sahf
jecxz
mov
mov
xchg
int3
shl
hlt
lret
jp
repnz
aad
sub
or
push
xchg
xchg
jmp
arpl
and
or
cmp
pop
add
or
in
lret
xchg
out
inc
imul
repz
and
mov
outsb
xchg
push
out
inc
je
jl
cmp
pop
sbb
cld
push
or
sub
push
xchg
cmp
inc
sub
cs
add
xchg
daa
outsb
fldl
imul
enter
jg
and
cs
dec
dec
jns
sub
dec
add
fucomi
sub
adc
insb
test
out
rolb
or
sbb
imul
scas
adc
lods
mov
test
mov
bnd
pop
nop
jo
fidivl
lcall
pop
xor
inc
lcall
jo
into
and
ja
in
pop
jns
xchg
mov
rcrl
add
ret
outsl
add
cmp
add
push
cmp
rol
xchg
xlat
pop
adc
repz
shrb
enter
xchg
je
aam
enter
adc
pop
into
mov
jle
cld
out
fs
xchg
push
push
jne
into
xchg
lock
or
sbb
scas
inc
sub
lret
dec
push
adc
fdivrp
xor
pop
gs
out
or
mov
fistpll
sbbl
int
adc
mov
cs
adcl
pop
dec
jp
mov
mov
cli
scas
jne
pop
lea
test
iret
sti
add
pop
cmp
sbb
imul
cmp
jmp
ret
xchg
inc
mov
sbb
mov
aad
movsl
ds
insb
aaa
je
sub
popa
jl
lods
popa
adc
js
jae
mov
sbb
push
dec
into
add
xor
sub
pop
vpcomw
mov
cmp
or
mov
pop
jp
mov
jae
insb
mov
xlat
push
ret
das
add
std
jne
jnp
push
cmpsb
or
popf
sub
pop
cmp
ret
push
cmpsl
popa
xchg
daa
scas
loop
mov
fldlg2
adc
addl
inc
in
cmpsb
cmpsb
mov
ja
xor
dec
push
sub
insb
and
fsubrl
gs
xlat
gs
and
jnp
lods
jg
sbb
push
pop
mov
add
loope
cltd
fwait
push
jp
mov
xchg
sub
test
test
xor
pop
es
mov
dec
shlb
test
js
sahf
sarb
mov
push
ret
cmp
lods
xor
xor
push
sub
add
sahf
cs
push
out
mov
xchg
fdivrs
insb
out
cmpb
sti
xor
xor
lds
mov
dec
sub
in
in
sub
push
mov
sbb
pop
test
sub
push
mov
adc
cmp
mov
adc
mov
adc
jne
jns
or
pop
and
fstpt
xchg
ret
cmp
gs
jb
fs
scas
sahf
fcompl
call
clc
adc
cli
inc
jmp
cwtl
lahf
loop
stos
cld
jp
or
repnz
aam
jne
cmpsb
incl
dec
movsb
ss
inc
in
and
inc
or
imul
daa
inc
xor
fld
je
aam
sbb
fstl
mov
jnp
xchg
pop
sub
pop
daa
fiaddl
inc
outsl
icebp
inc
jecxz
cmp
incl
mov
outsb
or
pop
and
cltd
and
mov
jns
jnp
and
test
lret
rcr
popf
jg
cmp
jl
xor
mov
std
ja
push
lods
mov
or
fwait
push
mov
cmp
mulb
pop
cmp
adc
pop
jmp
jb
jle
cmp
fiaddl
xchg
pop
shll
dec
xor
mov
inc
rcl
outsb
sysexit
cmp
loopne
js
inc
mov
xchg
loop
mov
shrb
das
les
hlt
scas
xchg
clc
rcl
insl
ds
data16
iret
sub
daa
xchg
icebp
pop
jl
dec
test
and
cli
push
insl
stc
pop
leave
adc
mov
insb
cmp
jg
sub
jne
mov
mov
push
lcall
movsb
mov
adc
add
push
gs
popa
jns
negb
sbb
icebp
imul
inc
inc
push
jns
icebp
push
xor
jns
fsubrl
iret
push
mov
pushf
cmp
mov
fdivrs
iret
xchg
rorl
xor
sub
pop
or
out
enter
js
sbb
xchg
aas
pop
jnp
ljmp
push
inc
jmp
popa
stc
pop
push
push
imul
sbb
inc
or
jnp
mov
cmp
decb
movl
add
mov
xor
mov
test
push
ss
inc
popf
fcoms
lahf
aad
cmp
dec
xor
aas
cli
inc
imul
fsubrs
stc
out
adc
fisubrs
jae
adc
ja
xorb
add
push
bound
inc
shr
aaa
jno
loope
aad
sub
loopne
addr16
addr16
in
out
loopne
rolb
int
dec
into
jb
jne
into
pop
xchg
iret
jmp
fsubrs
fcmove
daa
ja
loop
mov
popf
imul
cmpsb
shl
pop
pop
repnz
add
jl
pop
rcrb
jl
adc
xorl
push
mov
xchg
out
or
dec
loopne
sbb
adc
sub
stos
cmp
lret
jns
orb
sti
loope
push
jo
cmp
pop
out
aam
mov
jmp
mov
pop
mov
lock
lret
dec
imul
mov
imul
rol
out
cmp
in
jmp
xchg
lock
gs
cld
xchg
dec
outsb
xor
pop
stos
sbb
sbb
sub
lock
inc
mov
mov
popa
push
dec
xor
adc
push
data16
jp
sub
and
movsb
push
dec
pop
push
mov
lds
push
lfs
fwait
mov
xchg
push
out
xchg
filds
adc
jecxz
adc
pop
movsb
mov
dec
inc
jmp
cwtl
imul
out
xor
adc
sbb
ficomps
pushf
push
push
and
sbb
pop
mov
mov
pusha
xchg
test
movsb
outsl
xor
test
es
ds
pop
bound
fcmove
dec
int
mov
adc
mov
jns
xor
mov
test
sarl
inc
fcmovu
add
pop
fimuls
adc
sbb
mov
das
cmp
push
push
mov
loop
push
orl
sbb
filds
pushf
ss
adc
cs
push
ja
insb
xchg
jne
ret
mov
rclb
xchg
lahf
stc
sarl
or
jg
sub
add
xchg
imul
ds
xchg
in
sub
xor
adcb
popf
push
mulb
sbb
mov
xor
and
int
pop
cmpsl
and
pushf
adc
lahf
jge
movl
out
cs
pop
and
popa
mov
enter
sub
push
in
add
shr
outsl
loope
dec
pop
loopne
scas
out
test
mov
lods
outsb
or
mov
stos
cmp
je
stos
xchg
cmp
xor
and
xchg
xlat
int3
inc
inc
fistl
aaa
sbb
inc
pop
or
xor
hlt
arpl
adc
sti
mov
stc
cmpb
cmp
add
insb
movsb
stos
and
cmp
stos
and
je
cli
pop
test
sbb
je
call
lock
xchg
rorb
pushf
cmp
aad
cs
ffreep
divl
clc
insl
ret
add
mov
jae
push
pop
cmp
xchg
mov
pop
or
xor
gs
inc
pop
sbb
je
sbb
or
mov
xchg
imul
and
shrb
test
fsubs
add
mov
pop
cltd
or
lea
sub
cltd
scas
das
negl
sahf
inc
in
xor
pop
xor
clc
push
arpl
mov
pop
jmp
jg
or
gs
shll
in
in
out
mov
es
sub
test
shrb
cmp
or
or
mov
push
add
cld
jmp
xor
add
ds
fistpll
mov
loopne
cwtl
adc
cmp
and
loopne
sbb
or
push
xchg
xchg
aas
mov
jl
std
sbb
mov
cmp
int3
out
addr16
mov
fsubs
mov
ds
add
or
mov
xchg
mov
push
aad
test
mov
mov
loope
fucomp
movsb
frstor
shrb
ror
aam
cmp
cmpsb
add
push
jp
adc
xchg
cmc
int
and
mov
sarl
push
mov
decb
leave
adc
dec
adc
inc
arpl
jp
fsubrp
cmp
inc
jge
daa
mov
leave
in
lret
inc
imul
fs
cld
cmp
xlat
mov
sbb
jle
cwtl
push
mov
mov
sbb
pop
and
and
and
test
enter
adc
jge
dec
out
fidivl
sbb
inc
fcmovnb
cmp
dec
pop
in
mov
cmp
popa
add
test
cmpsl
fs
cltd
mov
xor
lods
cmp
jg
stos
repnz
hlt
xor
push
push
mov
push
sbb
pop
incb
add
xchg
cmc
test
addb
clc
cmc
push
pushf
jbe
das
push
mov
jmp
jmp
ljmp
insl
push
mov
mov
movsl
aas
mov
mov
clc
aam
push
push
adc
stos
out
jbe
pop
fsin
test
je
sub
dec
push
xchg
sbb
adc
push
inc
cmc
pop
dec
cli
mul
push
rcrl
imul
dec
les
xor
imul
rcll
mov
fsubl
mov
and
push
in
xchg
and
out
xor
shr
fiaddl
add
nop
dec
icebp
mov
sbb
push
repz
jno
cmp
adc
jo
xchg
xor
dec
dec
loop
mov
mov
adc
lds
inc
out
mov
mov
scas
inc
push
mov
lds
xchg
jnp
pop
cmp
lcall
jmp
sub
fnstcw
adc
mov
dec
xlat
movsb
stos
out
or
sarl
cld
push
jno
es
cmpsb
push
outsl
aaa
jge
cmp
rol
stos
jne
push
xchg
or
adc
sub
std
push
lcall
stos
cmp
repz
cmpb
xchg
enter
xor
dec
mov
xor
sub
cmp
fidivl
mov
jnp
and
fld
aas
jnp
scas
js
inc
pop
pushf
xchg
aam
cli
xchg
push
fcompl
gs
xlat
and
xchg
jnp
es
stc
shll
fidivrs
inc
imul
and
in
cmpl
pop
sbb
test
pushf
pop
mov
test
jmp
mov
jge
pop
test
outsl
stos
xor
test
cli
xchg
or
sbb
cltd
aas
pushf
mov
int3
popf
dec
adc
and
xchg
fnstenv
int3
popf
adc
inc
and
pop
or
mov
jo
rol
int
fidivs
aam
lea
fldenv
leave
fldl2t
xor
lahf
fbstp
enter
in
dec
insl
daa
pop
iret
sbb
popf
xor
or
das
xchg
lret
movsb
xor
push
leave
ret
pop
dec
das
gs
cmp
add
loop
stos
cltd
jl
mov
fisttpll
in
add
cmp
mov
mov
add
or
mov
sub
jns
cmpsb
dec
sub
test
lahf
nop
ljmp
and
test
mov
pop
loope
push
xchg
push
out
ret
popf
jo
cli
into
xchg
mov
add
inc
jns
data16
inc
jbe
test
in
ljmp
cmpb
pop
or
ret
cmp
negb
jae
push
mov
out
xor
fcompl
imulb
pop
pop
mov
jmp
or
popf
pop
push
and
mov
lcall
sbb
xor
iret
inc
jle
leave
outsb
or
lods
mov
or
loopne
out
mov
test
sub
mov
mov
loope
sbb
mov
pop
scas
sub
pop
mov
adc
pop
jo
ss
sub
sub
add
mov
lods
dec
add
lahf
mov
or
jbe
lret
adc
and
leave
nop
aad
inc
push
mov
add
cmpb
xor
push
test
inc
jl
out
push
lock
pop
or
movl
xor
pop
jecxz
or
or
das
ljmp
lret
add
xor
push
test
and
or
aam
ja
adc
dec
int
outsl
pop
mov
cld
adc
loope
sbb
mov
leave
call
mov
dec
addr16
movsb
out
add
dec
or
pop
inc
or
popa
and
mov
dec
pop
mov
dec
pop
sbbl
shl
into
inc
mov
out
test
or
sarb
je
sub
push
scas
repnz
popf
cli
daa
ljmp
push
jmp
jge
lahf
mov
repnz
imul
fildl
xchg
push
mov
mov
lds
jns
sub
movsb
xchg
roll
pop
popa
cmp
scas
scas
je
incb
ret
dec
push
lea
sahf
fnstcw
popf
mov
pop
jl
je
mov
dec
data16
gs
jae
pop
popf
cmp
out
dec
mov
mov
stos
out
std
sti
pop
cmpsl
ja
pop
mov
jg
clc
in
out
cmc
sahf
stos
mov
xor
push
push
push
mov
pop
dec
and
push
cmc
gs
mov
in
rcll
sbb
movsb
pop
pop
out
rol
mov
inc
dec
std
loopne
mov
movl
pop
push
dec
cmp
popa
or
jo,pt
aaa
ret
in
test
jnp
lea
lods
bnd
imul
sub
push
idivb
dec
lock
dec
pusha
lahf
ljmp
fmull
adc
jbe
push
movsb
cmp
fnstsw
pop
pop
or
sbb
add
sarl
arpl
inc
mov
leave
rol
lret
cmp
xchg
push
push
sbb
cwtl
adc
adc
and
add
add
fnstcw
cmc
mov
pop
call
inc
mov
mov
negl
jae
jo
xor
mov
inc
je
cli
cwtl
xchg
sbb
sbb
lods
mov
ret
lods
add
xor
sub
xchg
mov
frstor
adc
rcll
pop
mov
inc
out
xor
cs
add
cmpsb
out
add
xchg
push
pushf
or
les
xlat
jl
mov
lret
jecxz
sahf
insl
push
lods
fidivs
leave
std
loope
push
cmp
cmp
push
adc
mov
loope
jmp
in
and
and
push
xor
lcall
mov
repz
xchg
xchg
xor
push
xlat
rcll
adc
or
leave
dec
sub
leave
jb
and
jne
jnp
ds
hlt
aad
lods
lret
aam
fcmovnbe
jo
adc
push
lret
inc
test
sbb
ret
subb
das
dec
jmp
jbe
arpl
sbb
xlat
dec
insl
ficoms
push
imul
aam
adc
pushf
cli
mov
pop
pushf
mov
dec
je
sbb
xor
mov
xor
add
pop
cmp
shll
sbb
ja
stos
xchg
enter
dec
test
push
mov
pop
add
test
in
enter
or
test
lock
xchg
lret
xor
lds
mov
jae
bound
jmp
bound
mov
test
aaa
mov
sub
pop
cli
mov
jae
mov
test
imul
push
mov
fldt
ret
in
jnp
jnp
pop
ss
xor
repnz
loopne
inc
cmpsb
sbb
aas
andl
push
rcrl
cmpsl
ret
dec
jnp
sub
dec
cwtl
fmuls
movsl
mov
fdivp
mov
inc
daa
dec
andl
sahf
in
in
mov
aam
and
icebp
sbb
aam
movsb
outsb
sub
mov
daa
xor
aaa
lds
call
mov
loop
sub
pop
cmp
dec
adc
cltd
in
sbb
ja
jnp
sti
insb
xor
loopne
dec
jg
subl
rorl
int3
add
test
mov
adc
iret
cmp
insl
sub
in
popf
xchg
sbb
std
je
cmp
outsb
mov
xor
insb
pop
dec
mov
lods
fldenv
pop
fs
jno
je
cmp
movsb
pop
inc
ret
test
rcrb
pop
sbb
in
jge
xchg
cvtpi2ps
loope
hlt
int3
out
jno
popf
jecxz
hlt
sbb
mov
jecxz
fwait
push
jnp
cmp
ds
sahf
mov
xorb
or
scas
enter
into
lock
xchg
xorl
cmpsl
cs
xor
stc
mov
pushf
imul
xor
cli
adc
rcl
test
xor
push
addl
test
inc
flds
cwtl
icebp
pop
xchg
data16
dec
mov
sbb
cmp
and
or
xor
jg
data16
pop
mov
push
mov
cmp
and
filds
rorb
movl
mov
sbb
ret
in
lret
inc
xlat
stc
push
mov
jle
add
bound
cmpsl
cmpsb
loop
out
push
mov
out
mov
cli
mov
les
dec
or
and
dec
mov
xchg
mov
dec
int3
imul
iret
enter
mov
je
daa
mov
pop
adc
mov
mov
mov
inc
out
dec
push
jl
cwtl
jmp
push
mov
jl
aad
repnz
in
frstor
cwtl
lcall
push
and
ja
ror
and
add
or
aaa
incb
xor
ffree
xor
push
mov
mov
jo
stc
imul
fwait
cli
jge
pop
sbb
jne
cmp
aaa
and
pusha
push
sbb
and
lret
cli
mov
fcoms
test
fwait
or
xchg
lcall
sub
sbbb
adc
inc
jne
rolb
in
sbb
sub
fmull
cs
xor
int
mov
dec
lret
fsub
negl
cmp
push
leave
testl
dec
push
push
lock
pop
and
dec
inc
rclb
xor
addr16
xchg
cltd
pop
das
ljmp
push
cmc
jne
stos
ljmp
and
mov
push
cmp
stos
loop
xchg
pop
test
data16
mov
dec
xchg
cmp
jno
cld
iret
addr16
inc
pushf
scas
movsl
push
xor
fbld
cmpsb
iret
mov
rorb
jge
je
js
or
sub
inc
and
sti
sub
icebp
xor
pop
scas
or
mov
cld
xchg
sub
aas
imul
sahf
xor
gs
repz
arpl
fisubrs
out
sub
mov
push
cmp
int3
jp
push
jns
mov
insb
mov
lret
jns
les
leave
mov
aaa
ret
fisubl
test
and
mov
popa
adc
pop
stos
and
ljmp
mov
test
jl
mov
fxch
sbb
sarl
adc
mov
scas
scas
in
fucomp
mov
arpl
loop
push
dec
fisubs
sub
mov
or
rcl
scas
jecxz
sub
push
jl
mov
fimuls
leave
inc
mov
insb
dec
shlb
cmpsl
sbb
orb
sub
dec
xchg
lea
bound
aad
push
push
jnp
fldt
mov
push
adc
es
cmpsl
outsb
or
icebp
sub
enter
stos
ret
cmp
add
in
out
jbe
sbb
cmp
lret
dec
xor
adc
arpl
dec
aaa
mov
add
nop
add
lds
cltd
sbb
adc
mov
push
out
pop
enter
repz
or
pushf
xchg
aas
mov
stos
clc
pusha
imul
push
xchg
into
aad
fnstcw
sbb
loop
int
sub
addb
popf
cwtl
sarb
xor
loopne
mov
mov
aad
mov
and
jno
rorl
popf
mov
and
jnp
or
enter
mov
cs
mov
xor
rclb
jns
inc
xor
fdivl
xchg
xor
lock
loope
jb
nop
ret
cmp
loop
push
dec
outsl
inc
pushf
jnp
pusha
push
and
jecxz
push
pop
aam
jns
push
outsl
clc
adcb
xorl
push
push
mov
adc
mov
mov
pop
lret
lock
popa
push
cltd
repnz
stc
or
push
xchg
dec
mov
mov
in
inc
mov
gs
xchg
push
pushf
cwtl
jge
lcall
sbb
mov
pop
imul
adc
adc
cmp
pop
push
aad
and
je
xlat
cmpsb
jge
scas
dec
and
and
repz
pop
cs
jmp
cmp
inc
mov
fwait
pop
shl
test
lods
int
or
cmp
xorl
aad
nop
mov
outsb
loopne,pt
ljmp
sub
enter
inc
push
and
mov
cmc
les
sub
enter
xor
push
ljmp
xor
or
inc
xchg
int
arpl
enter
push
pushf
cmp
test
sahf
jb
das
enter
insl
dec
repz
push
mov
mov
inc
rorb
jbe
jbe
jp
scas
mov
add
vcvtps2pd
ror
cmp
push
fwait
call
mov
xchg
sbbb
roll
mov
leave
pushl
popa
cmpl
aas
jb
jp
push
sub
sbbl
sub
mov
jns
xchg
xchg
inc
add
pop
test
call
jecxz
push
outsb
adc
fisttps
push
jl
dec
cli
xchg
pop
stos
test
ds
repz
pop
movsb
mov
aas
xchg
ret
leave
int3
outsb
add
pop
mov
add
cli
enter
jp
outsl
pop
or
nop
ja
mov
aas
ret
and
add
add
push
mov
inc
jge
add
fidivrs
mov
mov
mov
add
ficoml
xchg
lretw
inc
mov
inc
sbb
and
push
gs
lods
mov
sub
add
jecxz
sti
jecxz
xchg
pop
mov
pop
jl
aad
jae
and
inc
lods
sub
inc
push
aad
pop
add
ficoml
test
imul
adc
pusha
idiv
sub
outsl
xchg
cmp
add
xchg
lods
mov
jno
nop
push
inc
icebp
loopne
and
aam
or
mov
pop
adc
pop
sahf
dec
jae
xlat
dec
sbb
repnz
jl
mov
pop
insl
ret
xchg
pop
sbb
push
jne
jge
lahf
inc
fimuls
int
xchg
sub
in
sub
mov
fisttpll
scas
sti
jo
ljmp
inc
sbb
std
pop
pop
mov
lret
faddl
and
aad
test
sub
cwtl
pop
sbbb
adc
push
aaa
fadds
sub
and
sbb
in
pusha
sub
adc
mov
and
push
inc
or
xchg
add
push
jmp
add
es
pop
pop
in
xor
test
ret
in
lea
adc
inc
mov
fstp
push
sub
cmp
jns
inc
sbb
jg
dec
enter
rep
into
fisubrl
push
jne
cld
imul
xchg
push
fcoms
mov
push
mov
stos
pop
push
jp
sahf
in
pop
inc
in
dec
mov
cmpsb
jo
sahf
xor
push
cmpsl
xabort
xchg
cmp
rcll
xor
test
cmp
enter
lods
cli
cmp
fwait
add
insb
and
xchg
xchg
aam
pop
adc
mov
add
aas
pop
push
pop
cmp
into
jnp
jno
fists
sub
mov
sbb
movsl
sub
cmp
flds
xchg
adc
outsb
std
out
mov
push
outsl
inc
push
mov
sub
cs
mov
test
test
fmulp
pop
movsl
pop
loop
mov
add
jle
je
fidivl
or
dec
dec
in
cs
imul
fstpl
loopne
xor
cmpsb
clc
loope
xlat
push
ret
jne
shr
fldt
popf
repz
insb
leave
inc
fst
jae
push
in
outsb
push
pop
dec
fs
sti
or
jno
lret
or
mov
sbbl
push
cmp
subb
test
cmp
into
pushf
fbstp
lret
and
push
enter
and
push
push
add
xor
sbb
inc
push
adc
or
adc
mov
pop
rcll
outsb
pop
sbb
es
pop
orl
xchg
mov
lods
pop
sub
pop
lds
push
es
jbe
xor
in
sbb
adc
mov
and
xchg
mov
jae
int
lock
xor
dec
int
jns
jmp
fucomi
les
sbb
out
dec
mov
sti
inc
fdivrl
push
dec
sbb
push
outsb
sbb
xor
xchg
xchg
andb
subb
add
addb
mov
jle
pop
mov
xchg
stos
in
add
push
jge
and
mov
xchg
faddl
ljmp
rcl
fwait
jge
jl
sbb
stos
xchg
stos
lret
fcomps
inc
mov
sub
pop
jns
cmc
mul
into
push
jle
push
stos
dec
stos
call
sub
push
adc
aas
pop
cmpsl
pusha
mov
je
mov
jge
jo
rcrb
scas
fstpt
mov
add
pop
in
adc
xchg
adc
xchg
jno
jmp
mov
lret
scas
loopne
pop
dec
js
fstl
pop
and
dec
ficomps
pop
nop
cltd
ds
cmp
mov
insl
mov
dec
cwtl
inc
sub
inc
jbe
clc
mov
test
or
ss
sbb
test
loope
lock
mov
fistpl
cs
pop
out
xchg
stos
aas
add
jb
lds
or
inc
in
repz
aaa
mov
int
rclb
repz
xor
fistps
and
push
scas
xchg
addl
test
dec
sbb
jl
xchg
and
cmp
jecxz
adc
xchg
mov
fstp
push
or
push
sbb
loopne
outsl
inc
sub
cs
popa
jg
jno
movsl
data16
repz
in
and
fldl
dec
pop
push
pop
cmp
setb
cmpsl
adc
ss
ret
lods
adc
fsts
and
jnp
insb
mov
xchg
xchg
es
pop
pop
jnp
mov
sahf
mov
mov
ss
bound
movsb
or
pop
inc
add
push
push
sbb
les
mov
in
negl
inc
inc
fiadds
jecxz
sub
mov
xorb
in
sar
cltd
iret
stc
push
or
ret
sti
jmp
pop
mov
xchg
push
sbb
add
xchg
sbb
out
push
push
dec
jl
and
and
and
movsb
aad
sarb
pusha
mov
in
adc
lock
arpl
and
jge
add
mov
xchg
call
loope
insl
clc
dec
adc
call
push
jno
fadd
lods
sub
aad
js
arpl
dec
add
cs
mov
nop
addr16
add
jge
scas
xchg
mov
sahf
mov
pusha
lods
add
and
lods
mov
jle
shlb
ljmp
adcl
mov
stc
jmp
cmp
xchg
inc
push
shll
repz
cs
mov
cmp
push
jb
xor
repnz
pop
xor
movl
out
cld
jae
cli
mov
xlat
in
jbe
addr16
lret
mov
mov
mov
jl
xlat
inc
cmove
pop
outsl
push
dec
inc
or
dec
imul
jae
cmp
in
pop
inc
sub
jno
hlt
mov
xor
cli
add
repz
adc
and
or
xchg
cmpb
adc
jmp
out
push
setnp
xor
cmp
insl
ret
inc
dec
vaesenc
movsb
dec
scas
stc
sub
adc
cmp
cmc
adc
repnz
daa
lods
add
cmp
adc
add
push
nop
inc
ljmp
dec
stos
mov
sbb
pop
or
ss
xor
in
mov
outsb
mov
out
sbb
pop
movsb
aam
outsb
add
stos
hlt
xchg
sbb
pop
sub
clc
cmp
aaa
xchg
insl
aam
jno
pop
cmp
imul
or
lea
xor
push
inc
or
jl
stos
cwtl
test
cld
jnp
test
pop
dec
lods
sbb
or
inc
and
int
popa
push
subl
shrl
adc
sbb
out
hlt
scas
lret
notl
or
lret
xchg
sub
lret
shlb
inc
xor
rorb
jns
dec
out
dec
aas
out
xchg
gs
ljmp
or
rorl
roll
or
je
xchg
repz
mov
mov
mov
out
mov
add
mov
xchg
cmp
jo
dec
or
jmp
ficomps
stos
std
mov
in
stc
call
out
sbb
add
lcall
cmpb
adc
test
push
mov
repnz
das
mov
xchg
test
sub
rcll
pop
popf
inc
mov
lret
and
dec
out
cmp
into
in
jmp
shl
pop
push
repnz
jno
push
and
push
add
and
addl
fsts
dec
cwtl
fsubl
cwtl
cmp
iret
test
fnstsw
jmp
mov
pop
mov
xor
cltd
xchg
in
lds
jns
add
pop
loop
daa
hlt
or
cwtl
mov
in
xchg
xchg
cmp
cli
mov
cmpsb
mov
gs
pop
cltd
sbb
jbe
gs
outsb
cmp
es
inc
jno
mov
mov
cmc
xor
add
push
or
frstor
and
jnp
incl
notb
int3
mov
push
aam
dec
in
or
add
lods
adc
pop
lcall
lds
xor
dec
pop
repnz
and
sub
jae
jno
pop
stc
lret
dec
sbb
xorl
fnsave
icebp
out
addb
es
mov
push
sub
add
push
mov
add
fistpll
cmp
pop
dec
in
pop
jae
das
pop
int
out
sbb
cs
push
dec
out
in
jbe
cld
push
mov
adc
dec
imul
or
outsl
int
xor
scas
fs
icebp
push
dec
dec
inc
rcrl
or
nop
mov
movsb
jle
es
negl
mov
xchg
mov
adc
or
sets
pusha
jb
and
int
pop
push
js
adc
sbb
js
out
mov
dec
mov
sbb
jb
inc
pop
sbb
add
or
pop
xchg
and
cmp
lock
cmc
je
and
mov
add
jmp
sub
push
sbb
xor
mov
push
jnp
mov
cwtl
iret
or
mov
int
in
and
mov
pop
mov
aam
sub
xchg
sbb
push
adc
ljmp
adc
int3
inc
mov
mov
insl
daa
xor
loope
jmp
or
ds
insb
popa
out
inc
xor
clc
mov
lds
jb
add
mov
lcall
out
sbb
cmp
add
mov
or
xchg
test
lock
adcb
jno
mov
dec
arpl
mov
inc
adc
fbld
pushf
sub
mov
mov
cltd
insl
xchg
mov
pop
or
xchg
sub
push
sub
div
dec
repz
insb
sub
adc
or
test
pop
lar
dec
mov
sahf
add
pop
in
decl
dec
jns
das
jo
cwtl
popf
cmp
cli
ss
pop
pop
aam
xor
xor
dec
shll
pushf
push
neg
xor
adc
popa
adc
dec
inc
imul
add
inc
cmc
and
dec
out
push
cmpsl
int3
mov
cmp
jle
add
movsb
stos
loope
dec
xchg
outsb
movl
xchg
adc
xor
sar
sub
and
test
mov
dec
mov
dec
jnp
inc
nop
jle
cmp
sbb
data16
mov
sbb
repnz
mov
xchg
movsl
dec
mov
mov
adc
dec
rcrl
push
inc
cltd
call
mov
test
fdivp
icebp
xchg
out
ficompl
les
sbb
cmp
jp
loopne
insl
mov
xor
mov
in
es
xchg
ret
lahf
je
mov
into
lcall
pushl
add
shrl
negb
pushf
pop
nop
jb
push
fisubrl
aam
xchg
mov
pop
xor
cwtl
repnz
xlat
push
inc
std
lds
push
icebp
push
inc
sbb
xchg
fstpl
movsb
mov
ret
push
fmull
aas
repnz
inc
jns
push
sbb
xor
ret
in
dec
jle
pop
repnz
popf
adc
out
shlb
pop
leave
lods
pop
adc
add
push
js
mov
pop
pop
dec
mov
jge
add
or
sbb
idivl
mov
cmpsl
push
jns
out
icebp
push
push
mov
test
mov
rolb
and
das
negl
jo
mov
dec
sarl
and
in
xor
jbe
pop
loope
cwtl
add
push
enter
lea
leave
sbb
add
inc
xor
arpl
push
cmp
aad
inc
clc
js
je
pop
jbe
orb
mov
fldlg2
xchg
enter
jae
outsl
clc
lahf
lcall
shlb
mov
aad
add
xor
mov
pop
add
xchg
shl
daa
cmpsb
cmc
add
js
movsl
mov
adc
loop
mov
pop
iret
and
pushf
cltd
scas
loopne
jno
jo
movsl
push
aaa
rclb
push
pop
js
mov
loope,pn
push
push
jge
or
cli
fwait
stc
jns
cmc
xor
mov
in
mov
sbb
push
iret
sub
test
mov
das
mov
in
enter
cmpsl
lods
pop
pop
jg
out
dec
shrl
dec
movb
pop
lahf
adc
dec
mov
popa
mov
es
fnstcw
add
mov
sub
ds
dec
es
ffree
clc
mov
and
or
xchg
xchg
pop
adc
movsb
adc
fchs
cmp
shlb
sub
pop
pop
push
dec
pop
out
stos
shll
lcall
push
bound
scas
jecxz
push
inc
xor
int
shll
call
sub
cmp
adc
pop
inc
adc
nop
in
enter
lds
rcll
out
lea
lret
lock
fs
cmp
mov
cmp
adc
inc
in
push
push
mov
into
xor
jmp
aaa
add
inc
in
adc
gs
stos
dec
mov
inc
push
sbb
pop
mov
cmp
fldl
leave
push
cmp
dec
out
das
inc
jle
lahf
mov
dec
mov
xchg
in
pop
push
gs
xor
mov
adc
jle
sbb
and
sub
movsb
pop
or
aad
test
andb
lret
mov
mov
mov
dec
les
sti
loope
aaa
adc
push
iret
sub
mov
aas
aam
inc
adc
outsb
jno
inc
jnp
testl
cli
mov
test
dec
xchg
ds
sbb
js
sbb
dec
push
rorl
fdivs
or
jp
ljmp
mov
pop
pop
popf
ror
ljmp
cld
mov
fisttpll
push
ror
pop
add
jbe
sbb
loop
fsubl
pop
popa
pop
scas
cli
lea
mov
lea
loopne
pop
test
sub
fimull
push
mov
pusha
shrl
dec
push
xorl
xor
inc
mov
cld
adc
in
pop
mov
jns
daa
dec
mov
cmp
rclb
cld
or
sub
ss
push
in
inc
add
lea
xchg
add
mov
mov
adc
sahf
cld
sub
jge
mov
mov
ds
mov
andb
sbb
add
jnp
or
sub
mov
popf
pop
stos
xor
mov
inc
jg
movsb
inc
xor
or
mov
adc
insb
pusha
sub
pusha
out
lock
jo
sub
jno
aas
mov
adc
add
inc
xlat
aas
insb
cmc
sbb
jae
pop
jge
stc
inc
mov
jmp
push
imul
sub
outsb
mov
ja
jo
mov
inc
lods
adc
loop
cs
cs
test
mov
sbb
cs
test
dec
pop
push
rorb
leave
sub
dec
add
sub
jo
xlat
lods
mov
inc
sbb
shl
cs
cmpsb
xor
inc
dec
push
cmpsb
sub
adc
fiaddl
mov
arpl
je
aad
cmp
pop
ja
ret
jbe
shl
cmpsl
popa
aas
out
call
push
lods
incb
movsl
jnp
xor
push
xchg
rcrb
jo
mov
aam
push
in
or
orb
lret
ja
out
stos
mov
cmp
jmp
inc
jge
sub
test
mov
xchg
sar
jp
in
pop
out
imul
mov
hlt
and
pushf
insl
in
mov
sub
nop
mov
subb
xchg
call
int
das
arpl
or
sub
loopne
sbb
pop
das
lea
aas
cmpsb
xor
dec
add
fdivl
roll
stos
inc
pop
dec
sbb
outsl
mov
adc
in
shlw
sbb
or
dec
loope
inc
inc
loop
rorb
and
fcomip
mov
push
dec
mov
and
push
imul
inc
out
ds
stos
cmp
sbb
mov
in
push
daa
pop
xor
xchg
stos
mov
orl
xchg
mov
add
ja
xchg
push
jnp
sbb
aas
and
lcall
lea
xor
xchg
insb
xor
mov
pop
push
orb
sbb
repz
out
jbe
mov
mov
mov
repz
shlb
mov
jecxz
mov
loop
ss
enter
out
lahf
aaa
or
sbb
jnp
aad
inc
es
fistpll
scas
out
adc
mov
aas
adc
ret
rolb
dec
bound
fisubs
cmpsb
inc
cmpl
ret
mov
scas
inc
mov
cmp
inc
jb
pop
xlat
mov
jb
gs
pop
icebp
subb
popa
xor
adc
mov
pop
call
xchg
xchg
fcmovbe
adc
enter
or
nop
cmp
pop
stos
fstpl
mov
gs
loope
flds
push
jmp
or
clc
pop
and
test
daa
pop
push
push
and
lret
clc
stc
popa
pop
jle
mov
filds
xchg
or
mov
and
inc
outsl
push
int3
jnp,pn
imul
mov
mov
xchg
cmpsl
push
jmp
popa
mov
xchg
push
repz
mov
inc
je
cs
adc
inc
rorl
push
fld
and
push
js
fmuls
push
lods
mov
dec
cmp
sub
sbb
repnz
mov
sbb
pop
inc
xor
and
inc
loopne
mov
xchg
subb
push
and
out
scas
arpl
fiaddl
pop
pop
xlat
jecxz
out
and
dec
add
mov
pop
inc
jae
leave
dec
pop
fcmove
mov
call
push
addb
cmpsb
adc
sti
cmp
nop
xchg
movsb
mov
insb
add
pop
push
das
xor
es
add
dec
imul
rorb
xor
test
or
xor
push
xchg
test
push
jno
mov
adc
jno
jns
or
sahf
arpl
cwtl
mov
inc
js
sarb
repz
pop
and
push
jmp
mov
in
ja
jl
mov
add
mov
lret
ljmp
mov
pop
leave
mov
mov
xor
pushf
into
pop
xor
jl
loopne
cmp
mov
hlt
pop
jecxz
jle
cli
adc
sbb
jbe
mov
sub
add
cli
pushf
fstpl
js
add
pop
call
mov
das
loopne
xor
lock
in
lret
xchg
daa
fscale
in
call
ret
ror
rorb
jecxz
and
xchg
cmpsl
je
fildl
ret
mov
fwait
sbb
add
jp
data16
mov
lsl
lods
ret
scas
dec
lds
pop
pusha
pop
leave
push
inc
mull
ljmp
pop
jp
test
dec
jle
xor
push
neg
fwait
or
leave
lret
and
cwtl
cmpsl
mov
mov
sbb
lods
mov
je
push
nop
movsl
cmp
movsl
int
sbb
aam
or
icebp
leave
lock
mov
sbb
insb
adc
clc
jp
mov
xor
mov
outsl
pusha
push
loop
and
push
rcr
sub
cmp
mov
aad
xchg
inc
cld
dec
or
stos
mov
in
add
addl
xchg
std
clc
ror
rcll
or
mov
pop
mov
adc
add
sti
mov
and
addr16
les
icebp
fisubl
icebp
mov
clc
dec
jmp
push
cmp
test
inc
cmp
cmp
sub
inc
inc
mov
filds
data16
aad
ljmp
mov
cmc
stos
pop
popa
outsl
pcmpeqb
call
inc
movsb
in
fistps
xchg
ljmp
jb
clc
mov
aad
inc
mov
inc
fistpl
cmp
jnp
push
in
out
jne
pop
mov
mov
push
push
cltd
fs
hlt
jns
inc
xchg
or
aas
cli
in
pop
imul
cli
xlat
push
sbb
adc
das
cmp
popa
mov
repnz
inc
insl
aad
sub
and
cmc
mov
adc
pop
loop
clc
inc
insb
ret
aad
pusha
mov
jecxz
cmc
jge
decb
idiv
push
pusha
cwtl
cltd
jp
xchg
mulb
add
imul
inc
jb
bound
cmc
ret
cld
out
pusha
mov
stc
push
test
in
xchg
daa
stc
fisubs
in
add
inc
aam
dec
mov
mov
sub
push
test
adc
shrb
xchg
and
sbb
inc
lret
xor
clc
clc
xor
or
popa
inc
cmp
xchg
cmp
lret
fwait
inc
fwait
mov
inc
je
cmp
push
push
dec
cmp
pop
jne
xchg
jmp
add
jns
out
leave
fsubrl
movsl
cmpsl
xor
sbb
inc
jmp
sarl
push
call
fcompl
mov
mov
inc
imul
adc
xlat
cmpsl
xor
daa
mov
add
add
or
push
in
mov
lea
xor
scas
push
push
icebp
inc
stos
xor
pop
mov
or
xchg
push
xchg
push
movsb
inc
mov
add
lea
inc
dec
dec
clc
arpl
xchg
xor
xchg
notb
icebp
or
cwtl
push
adc
inc
sub
pop
gs
jg
jb
lea
mov
les
xchg
lret
add
out
daa
dec
mov
jbe
out
xchg
andl
sbb
mov
sbb
xor
mov
jns
xchg
xor
push
testb
push
ss
cld
mov
push
or
rolb
cld
mov
imul
xchg
push
push
mov
jns
jbe
fsts
push
sub
jmp
iret
xor
xchg
in
imul
lods
out
xchg
xchg
fistl
test
ret
push
push
inc
add
arpl
loopne
stos
push
lods
and
cmp
fs
add
nop
test
cmp
dec
lods
or
mov
aaa
pop
les
mov
addb
lods
popf
pop
jno
lahf
mov
mov
lcall
adc
mov
mov
sbb
int3
rclb
icebp
pop
mov
in
sbbl
push
xor
mov
test
aas
inc
pop
mov
mov
in
shll
cmp
cmp
mov
rcrl
jo
out
fistpll
add
cld
add
call
mov
shll
out
les
fildll
fwait
cmpsb
divl
rolb
jle
in
mov
or
gs
aas
mov
loop
test
or
sti
test
xchg
cs
aam
cld
cmp
xor
stc
push
pop
mov
cmp
loope
jmp
pop
cmp
shrb
mov
push
sub
pop
lahf
pop
pcmpgtw
stc
inc
mov
fisubs
mov
mov
xchg
lea
bound
jg
data16
loope
addb
dec
inc
dec
daa
xor
or
inc
xor
cld
cld
inc
out
adcb
xchg
or
jecxz
test
xor
ds
and
and
stos
cmp
fs
cltd
fcmovu
rcrb
mov
insb
push
adc
xor
push
dec
sbbb
xchg
addr16
adc
jno
or
scas
cltd
adc
add
cmpsl
cwtl
sbb
sub
xlat
call
push
in
jb
pop
inc
mov
add
pop
pop
adc
mov
cwtl
sub
orb
je
loope
popf
clc
cs
imul
mov
test
lahf
lods
shll
aas
cmp
push
add
cmp
xchg
or
cltd
xor
push
inc
add
pop
dec
movsl
aaa
pop
sub
mov
addr16
mov
icebp
adcl
loope
enter
and
fidivrl
push
aaa
xchg
pop
jecxz
testb
rcl
in
hlt
data16
mov
test
cld
cld
addb
mov
fsts
add
mov
mov
xor
popa
ljmp
dec
adcl
cmp
mov
push
sbb
lea
push
cwtl
notl
and
adc
and
or
push
mov
xchg
pop
ss
shlb
lods
js
push
lret
add
push
mov
shlb
mov
or
imul
mov
mov
mov
nop
add
adc
adc
fidivrl
cmp
mov
sub
outsl
mov
add
push
inc
sahf
dec
shlb
lcall
into
incb
mov
lods
jb
popf
jmp
nop
shl
bound
pop
movsb
ret
pop
cli
lock
mov
cmpsl
or
adc
dec
cmp
call
aam
add
outsb
jnp
sbb
inc
jmp
mov
lcall
fmull
ss
dec
insb
enter
xchg
pop
adc
fs
sahf
dec
jbe
or
adc
je
fstl
xor
insb
sbb
mov
rolb
xlat
mov
sahf
dec
pop
xchg
inc
punpcklbw
fimuls
shll
sbb
ret
into
cltd
add
out
add
insb
xchg
xorb
fistl
aam
cmpsb
push
and
pop
cmpsl
adc
int
mov
dec
pop
xchg
imul
lock
idiv
icebp
scas
sub
in
or
jne
ljmp
shlb
push
leave
push
pop
xchg
jl
dec
ss
adc
add
nop
test
pushf
in
cli
jmp
adc
dec
and
pcmpgtd
cmp
jbe,pn
add
mov
mov
btc
xchg
xchg
addl
subl
and
lods
in
shlb
mov
pop
or
pusha
rclb
js
add
push
add
push
or
mov
pop
and
push
add
dec
call
aas
cmp
test
mov
sbb
add
in
inc
jge
and
pop
lock
add
addr16
add
insl
fiaddl
pop
pop
inc
push
and
dec
pop
push
gs
test
gs
mov
or
clc
inc
mov
test
in
cwtl
imulb
int
lea
pop
pop
es
pop
leave
std
mov
adc
xor
mov
daa
xchg
jo
insl
pop
inc
out
inc
xchg
and
into
test
add
push
in
jns
ja
lods
jp
and
pop
scas
bnd
imul
pop
lds
xchg
xor
mov
stos
push
lahf
aam
mov
fwait
sahf
jp
jge
rclb
lret
gs
xchg
dec
xorb
mov
fstps
inc
mov
jns
adc
mov
add
movsl
dec
cmp
std
scas
push
push
push
test
mov
mov
jmp
inc
mov
movsb
and
mov
pop
mov
jb
lock
mov
xchg
xchg
xchg
inc
js
iret
push
and
jb
inc
cmc
leave
rorb
and
cmp
outsb
aaa
mov
loop
or
aad
fyl2x
lea
mov
loope
sub
pop
lcall
fdiv
pop
negl
pop
or
jp
jmp
mov
out
push
and
mov
outsb
dec
mov
cmpsb
decb
jp
jb
dec
cmp
insb
xchg
jno
jle
out
sbb
iret
scas
outsl
ret
dec
sbb
in
xor
stc
in
jno
xchg
dec
sahf
push
pop
adc
fisubrs
pushl
je
and
movsb
inc
scas
mov
scas
movsl
sub
pop
rcrb
cli
dec
dec
dec
inc
and
and
sub
rcl
sbb
pusha
xchg
imul
mov
xchg
je
mov
jb
out
add
div
cmp
mov
pop
xor
shlb
mov
pop
inc
or
push
ss
and
lret
repnz
add
testb
repz
pop
out
int3
xchg
aad
mov
and
or
cmovnp
cwtl
je,pn
mov
push
out
fdivrl
sahf
hlt
mov
xchg
rcrb
ljmp
xor
xor
test
xchg
fildl
sub
shrl
lcall
jp
aad
orl
ret
and
and
iret
test
sbb
arpl
hlt
cmpsb
pop
xchg
pop
pop
test
xorl
out
gs
mov
mov
pop
out
dec
in
mov
add
pop
leave
loope
icebp
daa
lcall
js
leave
arpl
add
mov
and
div
inc
fsubrs
adc
insb
sbb
imul
inc
out
repz
lods
scas
xor
and
jo
sti
jbe
pop
mov
mov
es
scas
fnsave
iret
loope
lret
and
subl
ret
sbb
xor
dec
arpl
aaa
push
inc
aaa
inc
out
repnz
fs
enter
sbbb
stc
das
sub
mov
aam
mov
dec
in
adc
xor
lea
fucom
into
mov
pop
stos
fsub
add
pusha
xor
sbb
mov
sub
ljmp
cwtl
scas
xchg
pusha
cmp
jecxz
cltd
dec
addl
test
xor
repz
test
scas
and
adc
es
hlt
jae
loop
icebp
cmpsb
cld
shlb
int3
ja
pusha
fidivrl
cmp
and
cmp
xor
lea
mov
dec
add
pop
rcr
loopne
out
fldcw
sti
ljmp
jg
sub
in
addr16
inc
in
add
cmp
mov
movsl
cmp
ljmp
clc
imul
push
testb
in
xchg
in
ss
jle
fwait
addr16
mov
cmpsb
mov
lahf
test
dec
cwtl
mov
inc
lcall
xlat
add
pop
cmp
jge
test
dec
and
daa
sub
xchg
jmp
and
add
mov
scas
or
cltd
lods
sbb
mov
fcoml
adc
clc
icebp
mov
push
repnz
ds
cmp
movsl
testl
mov
jo
push
inc
sti
lret
bound
fwait
sti
pop
push
divl
test
stc
jge
mov
pop
or
insb
sub
mov
cmc
xchg
in
test
pop
xlat
sbb
mov
inc
add
call
fstpt
sub
dec
push
mov
xor
scas
push
repz
imul
sahf
mov
popa
je
dec
ret
sub
clc
test
shr
push
pop
rclb
repz
stc
inc
mov
xchg
pop
mov
sub
sbb
shlb
aam
xchg
mov
shlb
xor
stos
mov
rorb
sbb
and
data16
and
sbb
mov
cmp
mov
or
sub
push
in
inc
push
call
sub
push
xchg
icebp
les
add
inc
test
fisubs
sub
xor
filds
popf
stos
cmp
ret
icebp
out
push
test
lret
outsb
or
iret
orl
mov
cmp
sbb
pop
jb
mov
outsl
jp
and
ret
mulb
jp
ljmp
ret
dec
add
xchg
lret
shrb
xchg
sti
cmp
push
add
into
mov
in
push
ds
jo
loop
decl
mov
adc
ljmp
jae
push
inc
push
test
lds
popa
imul
scas
or
mov
sub
xchg
push
mov
stos
xor
pusha
pop
fs
js
xor
and
cmp
arpl
adc
pop
jmp
insl
mov
jecxz
jle
xchg
movsl
inc
mov
fldt
ja
cmp
fcompl
les
repnz
mov
loopne
in
sbb
jg
je
out
and
andb
arpl
add
pushf
sbbb
sub
loope
mov
in
xor
mov
cmpl
clc
pop
cmpsb
and
sbb
jns
sbb
out
addr16
ret
jl
notl
or
sbb
mov
ds
sbb
and
fcmovb
repz
aaa
add
xor
sbb
pop
test
sbb
negb
or
and
cmpsb
enter
popa
imul
inc
mov
jae
dec
xor
es
into
pop
scas
lods
fstps
sbb
mov
jne
stos
mov
mov
fisubrl
xchg
adc
ret
push
test
push
iret
adc
cs
movsb
scas
daa
movsb
pop
mov
mov
sub
iret
mov
sub
ljmp
in
test
xor
or
enter
mov
push
pop
xor
dec
xchg
mov
mull
cmp
inc
call
mov
rcr
mov
jle
jne
nop
inc
mov
shll
mov
or
lret
or
or
pop
loop
ljmp
dec
pop
test
or
jg
and
push
fs
aas
repz
ret
insl
pop
xchg
test
fildl
mov
jl
inc
out
cmp
jge
imul
sahf
push
es
add
adc
cmp
adc
xchg
xor
jg
inc
cmpsl
repnz
rolb
jbe
push
pusha
cltd
mov
repnz
sbb
xchg
and
cmp
mov
xor
out
xchg
pop
jl
pop
adc
sbb
jmp
daa
inc
mov
pop
cmpsb
push
dec
or
dec
ja
hlt
ja
mov
adc
mov
push
sarl
dec
out
mov
mov
movsb
add
fidivrl
cli
lret
ljmp
sbb
scas
adc
push
ss
fisubl
jbe
arpl
mov
hlt
inc
xchg
sub
in
pop
jno
loop
dec
adc
sub
adc
push
nop
push
cbtw
nop
inc
mov
add
push
movsb
sub
fs
movsb
mov
in
jle
aas
sub
fmulp
add
jle
push
xchg
inc
fs
inc
shrb
fstpt
int
rcrb
mov
imul
stos
mov
arpl
adc
push
sub
hlt
scas
lea
data16
inc
jmp
mov
divl
mov
pushf
cmp
sbb
mulb
stos
dec
aas
ret
and
mov
xchg
cli
clc
jne
cld
xor
shl
sbb
push
lds
movsb
inc
or
mov
inc
insl
sub
adc
xor
push
add
add
jno
push
mov
mov
fisttps
movsl
cmp
out
outsb
jns
or
aad
bound
mov
push
pop
ss
mov
testb
mov
lock
imul
push
das
and
nop
xor
insb
int
cmp
mov
jno
leave
movsb
xor
aas
or
jp
bnd
cmpsl
jnp
sbb
mov
mov
mov
out
mov
dec
movsl
into
jp
cmp
call
cs
fsubrs
icebp
jl
stos
sti
std
push
stos
and
xchg
jno
fadds
das
xchg
outsl
adc
adc
mov
dec
push
scas
leave
ror
sarb
lret
outsl
mov
pop
mov
mov
xchg
fnstsw
shlb
jecxz
ds
mov
cwtl
pop
xchg
shlb
test
sub
test
jmp
scas
xor
cli
adc
cmp
jne
inc
push
cmp
mov
sub
xor
fwait
push
rorb
sti
call
cmp
fstl
sbb
arpl
xor
loop
sbb
movsl
mov
cmp
mov
loopne
outsl
mov
xchg
cs
jo
popf
xchg
fidivs
lds
xor
or
mov
jg
cmp
enter
lret
xchg
gs
int
sahf
adcl
mov
mov
pop
out
add
jecxz
icebp
mov
mov
sbb
jo
pop
mov
push
xor
fninit
adc
cmc
cmp
adc
mov
pop
mov
rolb
push
jmp
xor
ret
fneni(8087
je
mov
mov
adc
test
sti
or
jo
leave
cmpsb
jp
rol
pop
add
mov
lock
push
jns
jmp
out
sub
adc
mov
mov
or
aaa
imul
add
push
decb
mov
fnstsw
xor
aaa
mov
jbe
or
aad
jle
pop
ret
or
clc
cmpsb
insl
adc
adc
mov
les
in
in
negb
imul
bound
loop
popf
jne
mov
orb
std
xor
xchg
loop
xchg
dec
pop
mov
sub
lods
iret
out
push
gs
es
repz
or
cltd
add
xor
stos
pop
mov
jmp
in
cmpsl
jle
xchg
pop
push
cli
sbb
int3
mov
lahf
shlb
mov
push
mov
mov
sbb
xchg
jnp
pop
mov
movsb
or
adc
jo
pop
mov
test
xchg
fxch
cmp
cli
call
psrld
cmpsl
stos
in
sub
cmp
stc
add
into
pop
inc
xor
les
jg
push
add
leave
push
dec
push
push
inc
scas
pushl
ljmp
loop
cmp
arpl
jge
add
pop
jecxz
int
shrb
xchg
xorl
testb
scas
cmp
scas
icebp
push
push
xor
sbb
xor
das
hlt
sub
lods
popf
sti
test
sbb
outsb
pop
ds
xchg
push
adc
sbb
mov
ret
dec
sub
mov
lahf
or
jge
jae
scas
xor
adc
pop
push
jmp
popa
mov
pop
mov
pop
test
clc
mov
ret
mov
inc
adc
out
popa
popa
lahf
mov
xor
fiaddl
leave
and
adc
add
lahf
mov
movb
jmp
cmp
in
movsb
and
aad
mov
scas
es
cltd
mov
mov
mov
pop
pop
lea
xchg
hlt
js
sub
sahf
pop
scas
insb
les
xor
je
adc
fists
pop
pop
sub
xchg
lcall
mov
fchs
mov
dec
push
movsb
adc
mov
add
mov
dec
rcll
push
pusha
lds
adc
or
sub
push
out
mov
mov
push
stos
test
insb
cmp
pushf
ja
test
push
lods
inc
leave
pusha
mov
lds
bound
adc
movsb
xchg
xchg
xchg
push
call
out
wbinvd
push
inc
ss
lea
push
sbb
fisttps
pop
pop
lods
mov
or
ljmp
xlat
std
pushf
stc
insl
inc
push
in
out
pusha
js
xchg
stos
xor
pop
adc
xor
int3
cmp
push
mov
push
std
jmp
pop
mov
lds
sbb
pop
mov
popf
lods
pop
pop
xor
inc
mov
pushf
dec
ret
adc
add
push
dec
outsb
mov
dec
dec
fstl
sbb
insl
sti
out
push
and
mov
mov
aad
sbb
push
xor
cmp
add
mov
ss
or
fmuls
xchg
and
fwait
out
push
or
inc
jne
sahf
divl
mov
test
aam
push
out
pusha
pop
ljmp
sbb
xchg
fcoms
cmpsl
hlt
arpl
xchg
in
jbe
adc
pop
xchg
push
mov
scas
popf
cmc
les
or
jae
pop
mov
stos
fistpl
or
lahf
mov
push
push
fildll
cmp
pop
push
lds
fistpl
in
pusha
xchg
cli
mov
push
cmpsb
mov
ds
pop
sub
mov
scas
dec
sbb
xchg
ljmp
xor
pushf
mov
mov
rcrl
rcrb
lock
add
and
cmp
dec
testl
fiaddl
mov
stos
fwait
mov
dec
sbb
mov
or
es
repnz
cmp
push
les
lods
and
inc
bound
imull
jb
out
xchg
or
xchg
es
ret
add
outsl
xor
mov
cmp
aas
mov
lds
cmc
pop
in
rcr
das
mov
mov
lods
xlat
jecxz
or
jecxz
add
repz
sbb
ret
jp
jno
popa
daa
sub
imul
mov
loope
cld
mov
dec
dec
das
adc
sub
ret
test
inc
jge
and
jge
and
jg
or
leave
sub
sbb
pop
mov
adc
faddl
jge
loopne
das
cwtl
or
adc
xchg
orl
xchg
xchg
or
mov
mov
scas
jmp
mov
xorl
jle
pop
imul
and
clc
out
mov
jmp
pusha
ficomps
outsl
cltd
inc
inc
or
or
in
icebp
cli
sub
ja
stos
clc
lret
adc
mov
jmp
jmp
mov
decl
push
fisttpll
ret
lods
outsl
xchg
or
or
aam
fdivrp
adc
stc
xchg
in
popl
or
cs
leave
pop
xchg
imul
sbb
or
sub
popa
icebp
pusha
push
loop
add
imul
outsb
mov
or
mov
fst
add
popf
mov
out
jb
mov
aas
inc
das
adc
sahf
push
ljmp
push
icebp
sbb
sahf
or
test
add
add
movsb
xor
push
mov
fucomi
int
mov
insl
fcoml
mov
push
idivb
or
dec
out
jb
gs
push
cmpsl
sarl
and
adc
xchg
pop
and
push
in
cmpsl
imul
and
mov
repz
push
sbb
sbb
dec
pop
lds
pop
cld
into
inc
pop
out
sarl
mov
dec
mov
int3
loope
test
adcb
jae
sub
adc
test
test
stc
out
and
or
arpl
adc
push
ds
out
imul
mov
pusha
push
movsl
insb
jge
dec
push
aam
dec
fisttpll
sbb
test
inc
decb
lahf
push
xor
cmp
repnz
cmpsb
subb
inc
out
sub
dec
mov
push
pop
sbb
xchg
inc
inc
adc
insl
imul
ret
and
iret
aad
or
mov
frstor
jns
sbbl
rcrb
shrb
or
add
ror
lods
clc
leave
lret
icebp
pop
jmp
test
cmc
cmp
ljmp
xor
sub
stos
mov
add
repz
jno
scas
fldcw
arpl
rcr
mov
aas
dec
jge
mov
xor
out
mov
sub
xor
jns
cld
dec
mov
mov
cmpsb
pop
cld
and
mov
idiv
xor
mov
test
jge
cmp
cld
inc
cmp
cwtl
clc
aas
mov
xchg
or
xor
or
in
add
orps
lods
shll
fwait
jmp
push
repz
pop
shl
outsb
rcrl
add
push
xchg
cmpsb
movsb
stos
call
cmp
or
cmp
mov
xchg
idiv
jbe
shll
jecxz
pusha
lahf
lods
into
mov
daa
sti
xor
jno
pop
sub
adc
test
sbb
lock
nop
pop
hlt
fdivrs
sbb
lods
mov
sub
sub
mov
and
icebp
in
rorl
lret
les
or
rol
dec
clc
push
rcr
mov
pop
das
push
jmp
dec
adc
xorl
mov
movsb
lods
cmc
call
inc
mov
mov
push
mov
xchg
jp
test
fdivs
daa
jle
mov
mov
out
jnp
insb
pinsrw
jg
mov
fs
rcrl
gs
push
jmp
sub
dec
call
pushf
movsb
test
ja
and
cli
pop
xchg
mov
jae
and
push
lcall
cmp
scas
or
jne
mov
xor
call
cmp
xchg
repnz
push
mov
js
scas
or
adc
stos
scas
fwait
mov
inc
outsb
jbe
mov
popa
and
push
lahf
jno
pop
push
loop
add
lret
in
ss
push
je
out
inc
add
in
lods
gs
add
sub
xchg
mov
push
mov
xor
mov
pop
cli
sbb
and
loopne
clc
stos
cli
sbb
es
mov
jge
xchg
fcoml
hlt
cli
hlt
add
jne
lods
lcall
add
fiadds
out
lahf
lds
test
cs
popa
paddsb
add
std
push
xor
repnz
xchg
rcr
or
pop
dec
popf
iret
sbb
dec
dec
xor
pop
xchg
xor
push
leave
repz
or
popf
jne
xchg
test
insb
jo
outsl
mov
lds
out
mov
xor
inc
or
sbb
movsl
in
js
call
xlat
mov
sub
jns
icebp
nop
xlat
adc
dec
and
lea
in
mov
movd
imulb
and
addr16
adc
cmp
std
or
cmp
aas
mov
bound
loop
nop
xlat
gs
dec
cmp
and
cmp
cs
imul
loop
xor
int
enter
lea
jp
jns
shrb
jo
lods
mov
cmove
add
pop
stc
dec
divb
xchg
add
int3
movl
lahf
into
dec
fcoms
mov
jne
popf
testb
mov
push
mov
pop
push
lock
jecxz
xchg
imul
mov
inc
cmpsl
stc
outsl
jnp
pop
rclb
popf
aas
inc
pop
cwtl
push
fnstcw
es
lods
fwait
sbb
dec
insb
imul
pop
push
pop
adc
pop
cli
or
stc
or
inc
xchg
jno
pop
xlat
cmp
in
fcomps
mov
jmp
xchg
mov
jne
rolb
rcrl
shlb
std
pop
scas
rorb
pusha
and
loop
sbb
dec
dec
mov
out
push
pop
dec
xchg
adc
scas
add
pop
push
sub
push
popf
sbb
shrb
mov
mov
and
nop
adc
leave
sub
ds
jo
lcall
push
pop
in
addl
mov
mov
pop
and
movsb
cltd
loopne
repnz
mov
imul
shlb
les
xchg
adc
out
push
icebp
divl
jns
test
nop
pop
inc
cli
push
lcall
in
frstor
cmp
aad
adcb
stos
push
ds
inc
mov
mov
xor
sub
out
sbb
and
jae
xchg
dec
out
adc
xchg
adc
out
stos
in
mov
pop
outsb
int
add
inc
mov
pop
iret
xor
xor
in
sahf
sahf
push
xor
xchg
mov
xchg
fxrstor
call
les
dec
lods
outsl
push
out
fstps
outsl
xchg
imul
scas
cld
shrl
outsb
cmp
add
movlps
and
btc
call
sbb
push
out
pop
jmp
stos
cmp
loop
xor
mov
jne
decl
and
adcl
ljmp
xchg
loop
xchg
mulb
mov
and
push
jge
sub
mov
pop
cld
xor
lcall
cmc
mov
nop
inc
jns
push
lock
fisttps
mov
xchg
dec
add
stos
lret
mov
adc
pop
sbb
movsb
daa
pop
std
pop
or
pop
jl
xlat
in
fisttpl
stos
jns
popl
stc
mov
out
adcb
nop
xchg
xchg
stos
les
ja
in
arpl
cmp
fucomp
jle
jmp
cmpsb
andb
fisttpl
dec
fmulp
enter
out
fucomip
push
xchg
in
lahf
add
mov
std
add
mov
sbb
std
sbb
sbb
fisttpl
or
enter
adc
lahf
int3
test
add
les
adc
repnz
mov
clc
fcoml
mov
add
sbb
fildll
dec
jno
inc
and
or
lret
imulb
into
jne
inc
mov
lahf
mov
enter
daa
cmp
lcall
inc
call
mov
jb
xor
xchg
in
ficoms
ret
fwait
inc
push
jge
call
sahf
pop
dec
test
leave
dec
jbe
fs
loope
pop
sbb
stos
lock
push
mov
push
mov
out
fwait
loop
aam
outsb
int3
lcall
push
or
jp
ficompl
lret
sub
xchg
xor
xchg
dec
mov
inc
adc
cltd
and
inc
push
movsb
or
movsb
or
rorl
sub
sbb
cmpsl
mov
sbb
aam
xchg
push
lea
xchg
test
daa
push
and
stc
sbbl
xchg
adc
sahf
xchg
rol
sarb
inc
mov
mov
push
add
sbb
lret
in
or
icebp
sub
fldenv
test
pop
pop
cmp
dec
inc
push
and
xchg
lods
insb
and
jge
adc
scas
fwait
in
xchg
fwait
adc
ja
jle
shlb
sbb
int
sbb
mov
mov
loopne
sbb
push
mov
loopne
ret
popa
sbb
push
sbb
mov
sarl
jmp
bound
js
les
mov
push
fnstenv
stc
xchg
popf
pushf
mov
lds
inc
adc
pop
xchg
adc
pop
or
push
mov
cmp
fsubs
push
adc
sbb
jl
dec
inc
cmp
xchg
mov
idivl
ja
jge
xlat
test
jne
inc
roll
or
cwtl
add
xchg
cmpl
out
test
inc
push
movsb
fdivr
test
lods
loope
lods
sbb
adc
lcall
jmp
adc
shrb
jns
inc
mov
outsb
decl
lods
icebp
jnp
enter
jns
push
mov
inc
cmpsl
imul
xor
cwtl
or
fildl
mov
push
inc
out
inc
push
loop
cltd
insl
mov
and
adc
inc
cmp
dec
sarl
int3
xchg
fmull
loope
ret
jmp
add
inc
cmc
inc
out
jg
adc
pop
mov
ret
addr16
xchg
push
push
stos
inc
int
add
data16
jne
loope
and
aas
outsl
lcall
shrb
rcr
and
test
scas
xor
mov
out
mov
stos
js
orb
mov
div
inc
mov
call
dec
cltd
scas
cmp
mov
pop
inc
push
cwtl
scas
or
xor
aas
xlat
lods
out
mov
fidivs
mov
fwait
mov
lds
pop
faddl
andb
scas
inc
lds
sub
arpl
stos
mov
pop
add
pop
lock
jae
push
add
inc
aad
mov
cmpsl
push
sub
lret
mov
in
fisttps
nop
out
jmp
xorl
xchg
outsb
dec
test
cmp
pop
jae
gs
mov
lret
icebp
fisubrs
dec
sub
xor
insb
fs
shlb
push
mov
adc
cmp
mov
sbbb
add
fucom
sbb
jge
push
cmp
sub
lret
in
adcb
sub
dec
mov
repnz
cmpsl
xor
sbb
rcrb
lcall
xchg
xor
dec
adc
mov
xchg
daa
pop
dec
add
xchg
push
push
cwtl
repz
inc
movsb
in
loope
sub
jecxz
xchg
stos
cwtl
sub
loopne
shlb
in
adc
sbb
or
mov
and
sub
mov
iret
fucomip
sbb
cmp
fwait
repz
out
cld
mov
js
dec
insb
push
cmc
pop
adc
mov
adc
int3
cli
xor
movsb
hlt
sbb
mov
addb
in
adc
jne
ret
mov
push
fwait
jo
pop
jnp
mov
ja
xor
push
push
jo
pop
daa
or
out
cmpsb
and
pop
insl
bound
mov
push
shrb
mov
add
add
sub
cwtl
mov
fmul
jnp
xchg
lds
in
fnstcw
push
jo
jo
fcoml
dec
jecxz
loopne
in
dec
add
add
ret
inc
push
cld
dec
mov
aas
cmp
out
cli
mov
stos
add
jle
mov
adc
js
sub
push
or
jnp
lds
icebp
out
cmp
loop
movhlps
fwait
shl
leave
stos
mov
lcall
adc
mov
icebp
ficompl
lods
test
pushf
cwtl
fwait
sbb
jge
push
cwtl
loopne
xor
xchg
pop
push
lret
fcoms
scas
cwtl
out
ret
imul
sub
xor
inc
arpl
clc
sbb
adc
lock
cmp
outsl
adc
fwait
mov
idivl
pop
cmpsl
or
pop
jne
outsb
cmp
sbbl
xchg
aad
nop
mov
mov
dec
aaa
addl
cmc
test
push
ja
ljmp
dec
and
cmp
mov
outsl
add
into
cwtl
gs
xchg
cmp
push
mov
testl
mov
jp
mov
or
rcl
mov
jmp
negb
adc
sbb
enter
insb
mov
lds
push
pop
mov
scas
sub
nop
js
je
leave
adc
jge
pop
das
data16
stc
pop
mov
icebp
iret
jb
ret
js
outsb
push
sub
gs
imul
fs
jb
lds
mov
rolb
aam
clc
ret
and
hlt
test
fwait
adc
adc
push
cmc
mov
jne
cmpsb
add
test
std
aam
dec
jmp
and
nop
enter
pop
mov
xchg
xchg
or
test
shll
stos
insl
xor
fwait
bound
stc
clc
lock
push
dec
sbb
or
out
ja
mov
and
andl
mov
mov
sbb
jns
jl
jmp
adc
xchg
out
rclw
shll
sbb
pop
ret
pop
mov
push
out
xor
jmp
or
rclb
and
sbb
adc
inc
sbb
iret
and
fisubs
push
pop
orl
call
movsb
es
daa
mov
sarb
sub
sbb
loop
arpl
orb
out
ret
and
mov
inc
jne
dec
sbbb
lods
hlt
lret
push
aaa
push
out
aam
jbe
add
icebp
ds
cmp
leave
into
sbb
ljmp
lret
push
add
xorb
fildll
adc
dec
sbb
pop
push
aaa
mov
hlt
or
das
fs
popf
mov
pop
cmp
inc
loope
rorb
out
push
les
push
sti
pop
incb
or
push
sub
psubsb
sar
mov
lds
pop
dec
xor
mov
push
addl
lahf
xor
ljmp
out
cmp
cmp
mov
sahf
jg
sbb
jmp
xchg
jle,pt
dec
daa
cwtl
outsb
js
and
dec
pop
ss
sahf
or
stos
outsl
push
popf
int
fdivrs
bound
push
pop
imul
nop
fiadds
insl
mov
push
jle
cmp
xor
dec
popa
pop
rcr
mov
pop
rcr
int3
add
xchg
int
pop
fmull
lock
xor
jne
cli
xchg
push
xor
int3
sbb
push
movsl
imul
stc
stc
sbb
mov
sbb
ja
and
fbstp
pushl
ja
sub
outsb
or
aam
imul
fs
mov
dec
mov
aaa
lcall
ss
rcl
mov
mov
mov
sti
or
fisubl
jbe
jle
mov
ret
xchg
popf
push
es
push
in
mov
mov
inc
mov
add
inc
enter
rorb
les
cld
push
pop
jmp
jo
cltd
out
outsb
lret
mov
add
mov
cwtl
dec
jecxz
mov
lret
lea
mov
loope
dec
aad
add
or
std
sti
ret
mov
enter
or
jg
xor
ja
jmp
cmp
xor
adc
es
addr16
mov
mov
jecxz
mov
cmp
mov
push
outsl
fldenv
jns
inc
arpl
rclb
mov
out
clc
ljmp
cmp
cld
aad
jne
or
movsl
pop
sbb
push
mov
sti
xchg
jns
cltd
lret
mov
sub
xor
mov
fisubs
adc
call
stos
arpl
cld
jg
add
or
inc
imul
out
mov
ret
sti
stc
inc
sti
daa
adc
inc
jp
and
xchg
mov
in
mov
adc
push
lods
adc
mov
mov
scas
xor
lock
ds
push
call
mull
and
and
dec
std
pop
loop
dec
dec
mov
jne
mov
daa
aas
pop
xlat
clc
inc
and
or
sbb
out
mov
push
mov
aas
scas
lods
cwtl
popa
enter
sub
push
inc
bound
mov
and
sbb
stc
add
cmp
mov
sbb
divb
iret
jbe
ret
sub
out
outsb
in
xchg
leave
mov
enter
mov
outsl
lods
sti
mov
xacquire
sbb
ss
pop
add
xor
xchg
icebp
ret
xor
push
xchg
subl
add
aam
mov
sti
movsl
mov
xchg
shl
fsubrl
jp
jb
jbe
mov
push
lds
and
dec
daa
ja
push
dec
addr16
lcall
rcrl
in
push
addl
mov
fcoml
mov
mov
inc
lret
or
inc
or
sub
xchg
pop
outsl
sub
movsl
sbb
push
inc
mov
movsl
shlb
mov
sub
sub
pop
aas
jns
sbb
testl
pop
ret
fsubl
mov
je
sub
call
arpl
cmp
push
mov
into
call
icebp
dec
mov
sub
inc
test
shr
adc
jl
xchg
mov
inc
sbb
icebp
test
mov
lea
scas
out
scas
jnp
ss
mov
outsl
lods
add
packsswb
in
aam
out
rcrl
lds
outsb
imul
and
lods
mov
xchg
jo
sbb
fnsetpm(287
ds
fmull
pop
inc
adc
xrelease
idivb
sub
gs
inc
mov
add
mov
test
ds
adc
ret
xlat
popa
roll
pusha
mov
push
mov
nop
repz
push
push
or
hlt
mov
jle
mov
clc
sbbb
pop
jg
push
ret
into
jp
push
std
add
push
insb
cli
ret
addl
sub
andb
repnz
aad
lock
in
jo
jp
mov
mov
mov
xor
mov
dec
out
and
and
arpl
cmp
cmc
push
mov
xchg
jp
push
jnp
pop
push
incb
pop
sbb
sub
cmp
hlt
adc
incb
and
push
adc
pop
icebp
sarl
mov
fucomp
add
xchg
js
shll
xchg
mov
ror
or
lahf
mov
out
jle
xor
nop
jle
xor
and
sub
mov
das
add
addr16
out
icebp
das
cld
adc
arpl
das
ds
cmp
xchg
test
in
mov
mov
das
pop
inc
mov
pop
mov
fwait
push
or
enter
pop
jnp
adc
dec
or
bound
test
in
mov
push
hlt
cmpsl
negb
sbb
repz
shrd
and
cmc
lret
sbb
xchg
cli
arpl
aas
sbb
mov
lret
les
pop
into
subb
mov
xchg
cmpsb
xchg
movsl
xchg
aad
add
stos
in
sub
es
sub
mov
cmp
push
and
addr16
scas
sarb
into
push
sbbl
ds
out
jge
idivb
in
adc
popf
imul
leave
aad
in
popa
jmp
xchg
lahf
lods
mov
cmc
rorl
xor
test
lcall
div
pop
insb
inc
xchg
pop
or
rcrb
insl
or
mov
or
xor
xor
gs
jbe
or
mov
jge
cmc
push
push
iret
movsb
mov
push
adc
inc
js
add
out
pushf
pushf
inc
out
ret
and
mov
sub
cmp
mov
and
dec
notl
cld
addr16
xchg
sub
out
scas
mov
aas
mov
and
cmpsl
loopne
clc
test
mov
jl
cli
mov
test
les
sub
xor
arpl
lock
clc
loop
and
or
icebp
xor
xchg
inc
cmpsb
jb
pop
pusha
pusha
mov
pop
roll
ss
add
movl
xchg
or
inc
sub
out
les
mov
xchg
jmp
pop
pop
pop
and
fisubs
sub
push
cltd
lret
mov
sbb
cmpsb
pop
fadds
xor
sub
arpl
sbb
pop
inc
jo
cmp
cmp
sbb
mov
out
stc
mov
pop
mov
add
dec
stc
jae
and
lahf
cmp
mov
imul
mov
mov
mov
cmp
leave
lock
lret
call
jmp
jecxz
movsl
xchg
int3
lds
jno
mov
repnz
inc
orb
xchg
mov
ds
sub
dec
xor
into
cmpsb
or
dec
loop
pop
fs
cmc
aam
push
inc
jo
pushf
mov
pop
push
imul
in
je
xchg
and
mov
add
lretw
es
dec
pop
mov
loop
push
push
scas
orl
xor
dec
and
jno
mov
enter
repz
in
dec
es
pop
lea
push
adc
popa
inc
stos
mov
sahf
in
sub
dec
popl
cwtl
pop
xchg
mov
loope
jl
jge
add
bound
cmc
dec
xor
sbb
push
insb
sbb
add
aas
jno
or
cmp
in
fiaddl
push
cwtl
sete
dec
gs
es
jmp
into
push
mov
fs
cltd
adc
pop
rclb
mov
stos
bound
fisubrl
xchg
mov
jae
push
mov
xchg
imul
jge
xchg
xor
or
rol
inc
call
xor
adc
sub
ss
cmc
mov
mov
dec
cmp
daa
xchg
fisubl
repnz
push
pop
mov
sub
jns
jp
in
outsl
out
shrl
repz
lret
adc
sub
test
push
dec
cli
xor
test
pop
push
sub
dec
jecxz
xchg
sbb
bound
or
xor
insl
aas
xchg
call
fs
shrb
repnz
jnp
pusha
cmova
xchg
jecxz
mov
jl
fistl
push
aas
sub
push
mov
fldl
push
scas
lea
jl
jge
push
ror
mov
adc
fcomi
inc
mov
fbstp
cmp
and
xor
mov
sbb
xchg
insl
cmc
sti
inc
mov
enter
sbb
test
xor
dec
icebp
repnz
jge
mov
cmp
pop
adc
sbb
std
hlt
cld
lcall
and
addr16
lret
cmp
ficoms
push
mov
jecxz
dec
sbb
rorl
or
mov
and
stos
and
or
xor
in
outsl
insb
inc
cmc
aam
roll
xchg
push
ds
lcall
stos
shl
repz
roll
js
ret
push
ficomps
pop
mov
sbb
lret
loop
add
sbb
mov
push
mov
daa
jbe
aam
xchg
lods
pause
ja
mov
test
lods
or
sbb
jmp
iret
shlb
fstpl
enter
cmpsb
imul
sub
dec
jg
lods
rcrl
test
xor
ljmp
cmpsb
jbe
neg
sub
sub
dec
arpl
sbb
jno
push
mov
sub
ds
and
popl
xchg
add
mov
mov
test
inc
xor
mov
sahf
push
jmp
addr16
mov
das
dec
dec
sbb
mov
push
pop
mov
inc
mov
and
lods
out
add
imul
xchg
mov
not
outsb
xchg
hlt
stos
lods
cmp
daa
mov
jnp
arpl
mov
inc
pop
xchg
stc
adc
out
leave
push
aam
subl
inc
fs
and
xchg
lock
aaa
aaa
in
or
jmp
stc
inc
ja
xor
push
and
hlt
or
movsb
jae
sbb
rcrb
int3
jl
and
out
xchg
call
xchg
in
mov
ja
sbb
pop
mov
ltr
push
sar
test
mov
in
mov
cmpsl
dec
outsl
inc
and
mov
cwtl
mov
fbstp
mov
mov
into
cmp
push
mov
rcr
ret
in
add
sbb
sahf
pop
add
sub
xlat
or
adc
ret
aad
addl
test
out
cld
and
xchg
and
inc
and
cmpsl
cwtl
xchg
mov
push
cmp
jno
adc
loopne
adc
and
call
jp
iret
mov
lea
int3
movb
inc
outsb
mov
ljmp
sub
push
or
movsb
sub
lods
and
ficoms
rcr
out
mov
loope
notb
xor
stos
dec
idivb
inc
or
aaa
popf
mov
mov
mov
lock
jne
sbb
gs
sarb
push
adc
jbe
ljmp
sub
inc
pop
mov
adc
jp
imul
cmpsl
inc
mov
incb
test
dec
lds
stc
test
or
test
adc
dec
xchg
adc
push
and
mov
fists
xchg
out
push
or
or
sub
and
repz
sbb
dec
xor
push
mov
movsb
pop
stos
mov
into
imul
les
xchg
adc
and
dec
es
js
nop
test
clc
or
out
xchg
xor
inc
insb
xchg
fildll
and
xchg
xor
test
scas
mov
xchg
mov
adc
int
pop
repz
mov
mov
insb
or
and
xor
pop
adc
adc
adc
cmp
add
and
ljmp
mov
xchg
or
shlb
sub
and
sbb
jns
mov
jle
adc
js
jge
pushf
mov
push
and
inc
loopne
cmp
push
jl
dec
out
rclb
imul
push
clc
rolb
or
call
sub
in
dec
pop
and
cli
add
sbb
daa
push
push
sub
jns
sub
mov
int3
clc
int3
in
mov
lds
aad
and
inc
push
cmp
hlt
stc
push
ljmp
or
lods
adc
inc
jp
and
xor
aad
aam
shl
imul
shlb
out
mov
into
fnstsw
test
cmp
rcrl
cmp
or
mov
push
mov
mov
mov
in
fsubp
add
repz
and
insb
insb
jb
out
adc
out
enter
add
mov
into
cld
push
mov
push
mov
pop
fmuls
xor
cwtl
jb
push
lahf
jb
mov
jp
mov
lods
ret
mov
aad
aad
inc
cmp
ret
pushf
sub
cmp
sti
mov
sbb
and
push
cli
cmp
sbb
sbb
out
orb
pop
outsb
in
les
aad
mov
nop
add
test
inc
push
jp
sub
and
fwait
jb
pop
test
inc
inc
mov
mov
fcomps
or
dec
xchg
inc
pop
loop
pop
mull
cld
jp
jns
or
xchg
inc
push
jbe
mov
xor
inc
out
sub
clc
push
lea
mov
mov
das
or
mov
push
cmp
shl
push
inc
popa
pop
mov
cmp
and
shlb
lods
shr
imul
js
inc
jge
cmpsb
movsl
fcoml
aas
inc
std
dec
mov
inc
popa
inc
out
gs
cmp
xchg
rclb
pop
and
sti
bound
and
or
pop
lds
pusha
push
mov
bound
xchg
stos
dec
out
jns
sbb
aam
jle
mov
dec
fsubl
inc
xchg
fildl
clc
imul
push
and
lret
push
divl
cmc
dec
shlb
bound
jae
xor
sub
cltd
js
mov
mov
out
xor
lcall
cwtl
sbb
inc
adc
out
jecxz
pop
fsub
addb
or
je
xor
into
mov
dec
mov
les
repnz
test
dec
lret
mov
sub
sub
repnz
inc
cmp
xchg
int
cmp
sub
call
in
mov
fcoms
notl
mov
movsb
or
dec
adc
push
xchg
decb
scas
push
inc
pushf
dec
pop
sub
pushf
pop
aad
test
int
push
out
call
out
stc
test
mov
stos
adc
lods
ja
pop
pop
dec
adc
gs
pusha
cmpl
push
mov
int3
push
jle,pt
mov
aaa
cli
sub
movsl
push
iret
adc
fildll
sub
mov
mov
sahf
shrb
shrl
xor
daa
jl
adc
adc
dec
cli
and
xchg
xor
jnp
mov
cs
sarl
data16
sahf
xor
xchg
outsb
inc
in
xor
mov
push
jns
and
xchg
loopne
lret
imull
push
or
jmp
leave
mov
jp
adc
pop
cmp
push
lahf
adc
repz
mov
and
lods
ljmp
pop
ja
mov
outsw
or
mov
inc
add
add
fcompl
aam
cltd
inc
sti
arpl
shr
adc
jns
aad
fstpt
fnstenv
je
or
pushf
test
or
dec
mov
lock
mov
je
pop
jle
inc
mov
jb
shlb
xchg
mov
jno
loopne
mov
leave
adc
loop
dec
ja
mov
aad
mov
push
jb
dec
sbb
out
dec
jb
subl
dec
or
push
lret
push
mov
mov
push
mov
decl
jp
rclb
cmpsb
out
pusha
cmc
fdivs
aad
mov
fdivrl
ja
lret
outsl
jo
pop
repnz
test
mov
in
xchg
daa
mov
jge
xchg
sbb
xor
jo
cld
mov
mov
jnp
push
outsl
nop
mov
lcall
jg
fmul
cmp
pop
popa
sub
icebp
in
dec
sub
fcmove
fucom
xlat
bound
push
gs
mov
xlat
leave
mov
push
mov
or
or
clc
data16
lret
mov
add
xor
adc
shl
pop
xchg
in
adc
push
mov
dec
push
aas
roll
mov
sub
data16
movsl
out
clc
repz
adc
adc
cltd
mov
rcrl
pop
cmp
out
xor
sahf
paddsb
sahf
adc
sbb
mov
insb
xchg
and
fwait
mov
inc
sub
leave
mov
cmp
mov
insb
popf
add
sbb
fists
xor
xor
xchg
cwtl
leave
lret
and
pop
rclb
inc
push
pop
std
lock
fildl
and
fwait
int
insl
mov
mov
popa
mov
std
jl
iret
pop
aam
mov
subb
popa
jl
mov
xchg
mov
testl
cmp
pushl
push
jae
inc
sub
ds
and
arpl
mov
mov
inc
loope
adc
mov
or
or
pop
mov
arpl
testb
scas
jb,pt
fiaddl
and
push
inc
cmp
dec
push
fisttpll
jae
pop
add
icebp
xchg
out
daa
xchg
inc
in
cmp
data16
xor
add
add
push
lods
pusha
enter
pop
or
pop
xchg
and
ret
mov
loopne
add
js
mov
clc
lret
pop
loop
out
or
cmp
mov
or
testl
aam
ficoms
mov
in
xchg
pop
or
jge
push
cmc
cmp
mov
lret
jae
lock
inc
int3
push
lahf
addl
arpl
fadd
xor
jge
sub
sbb
aam
in
roll
or
cmp
inc
cmp
aam
mov
jno
jmp
ss
xorl
sarb
xchg
lock
sar
fildl
mov
and
fs
scas
cwtl
add
cmp
out
push
in
fists
insb
sbb
xchg
mov
push
jb
cmp
in
xor
mov
adc
xchg
mov
push
pop
data16
shll
bound
pop
out
adc
icebp
jmp
mov
hlt
aad
cmp
out
mov
cmpsl
mov
fdivp
sbb
cmp
inc
daa
je
jle
shrl
dec
xchg
mov
sbb
adc
mov
jl
hlt
pop
pushf
cltd
sbb
xor
ror
mov
das
fs
ret
dec
scas
xchg
cmp
lret
cltd
inc
jo
out
sbb
push
add
mov
mov
xchg
out
adc
mov
in
ret
pop
mov
xor
int
lods
gs
ret
lahf
add
fstl
movsb
push
sbb
cmpsb
sub
call
clc
mov
fmuls
mov
xor
imul
cltd
mov
fmuls
cmp
push
pushf
idivl
pop
cmc
outsb
or
rcr
shlb
mov
aas
lret
jns
xchg
xor
cwtl
outsl
adc
pop
in
mov
jb
test
pop
in
mov
arpl
je
nop
outsl
loopne
mov
sbb
push
les
pop
out
stos
mov
sahf
adc
cmc
add
dec
sub
push
add
xchg
mov
add
test
fdivl
sub
cmp
push
cmp
cli
sub
test
xor
inc
dec
jge
sti
fidivl
inc
call
dec
in
pop
push
insb
xchg
lret
push
jl
hlt
je
js,pt
add
mov
incl
inc
or
xchg
adc
ljmp
pop
adcl
cmp
pop
cmp
push
push
mov
fs
dec
mov
jns
scas
fsubrl
mov
fwait
mov
or
imul
mov
stc
js
xchg
out
mov
sbb
out
test
cmp
sbb
daa
cmp
ds
jae
fwait
popa
call
jmp
pop
popa
mov
push
pop
and
dec
outsb
fiaddl
imul
mov
dec
mov
fdivl
enter
imul
movb
hlt
sahf
test
fsubrs
dec
pop
or
lret
sub
pop
adc
out
jno
js
xor
es
adc
lcall
pop
hlt
add
mov
sub
dec
outsb
lds
pop
jbe
je
addr16
push
xchg
pushf
push
pop
add
repz
add
lea
push
int
and
movsl
sub
mov
movsl
jle
xor
cld
pop
gs
fidivrs
add
rcrl
lods
or
inc
call
jno
test
insl
lea
int
or
or
mov
stos
pop
je
arpl
dec
or
inc
adc
movsl
cli
out
arpl
les
push
add
lret
add
adc
iret
loopne
cs
mov
and
repz
push
xchg
cmpsl
sub
addr16
fdivp
xchg
arpl
and
popa
mov
test
cs
xchg
xchg
jg
les
mov
das
jo
pop
dec
stc
ljmp
cli
mov
pusha
lock
cwtl
jp
and
push
sub
xchg
in
and
adc
das
lock
iret
push
and
cmc
sbb
lods
mov
adc
push
jle
in
dec
ss
and
xchg
mov
js
inc
je
dec
pop
push
add
es
pop
adc
sub
xchg
je
adc
lods
inc
lret
or
in
mov
adc
jl
test
mov
out
andl
jb
jl
adc
sub
gs
out
ljmp
pop
movsb
inc
lds
add
mov
push
fsts
sbbb
xchg
std
jno
mov
pushf
cmp
xor
jmp
cmpsl
mov
push
push
nop
cmp
xchg
jnp
mov
lret
xchg
arpl
dec
or
xor
ss
xchg
push
xlat
test
popf
leave
push
push
pop
mov
lret
pusha
and
mov
imul
test
sub
add
adc
repnz
js
shll
ljmp
pop
dec
shlb
xchg
or
cmp
xor
jmp
fdivl
shll
mov
popa
xchg
inc
cs
push
mov
jmp
xchg
sub
test
cmp
pop
repnz
dec
lea
dec
xchg
cs
sub
in
jp
inc
jnp
aaa
arpl
adc
mov
and
add
mov
and
dec
in
inc
push
movsb
aaa
and
xchg
inc
addl
mov
sbb
xchg
sub
cmp
inc
fnstcw
cmp
in
and
insb
ja
mov
push
mov
scas
add
lcall
jle
cwtl
dec
xor
cmp
in
enter
std
mov
jg
pop
pop
pop
or
popa
add
outsb
imul
mov
push
jg
mov
push
es
shrb
hlt
fistpll
push
mov
push
pop
lahf
add
in
loope
stos
pop
xor
std
xorl
jp
and
xor
xchg
push
dec
pop
pop
out
mov
and
repnz
ss
or
push
fildl
imul
lds
cmp
jb
jbe
fs
cwtl
add
cmp
pop
inc
inc
test
hlt
cwtl
je
jo
mov
popf
popa
test
ja
jo
adc
repz
or
aas
inc
loope
inc
es
pop
lods
jo
pushf
arpl
pusha
inc
jnp
adc
pushf
push
test
repz
cmp
xor
xor
hlt
mov
cmp
xlat
lods
out
clc
popf
sahf
out
fcmovnb
xor
xchg
dec
inc
test
inc
fwait
mov
imul
gs
loopne
in
ds
and
cmpsl
int3
loope
adc
sbb
in
js
addr16
sahf
test
pop
into
pop
rorl
jmp
test
in
cwtl
adc
out
mov
mov
aaa
xor
jl
xchg
shll
cli
adc
sbbl
and
out
push
pop
aam
add
xor
sub
dec
push
add
imul
enter
jecxz
outsl
dec
stos
pop
sbb
jmp
adc
enter
pop
icebp
ss
and
icebp
dec
mov
loop
imul
add
mov
lds
push
pushf
loopne
jp
loop
in
rolb
movsb
in
xor
in
jmp
push
cmp
lods
int3
or
leave
and
or
xchg
sbb
mov
jl
xchg
xor
inc
insb
cli
mov
xor
shr
mov
scas
push
or
jecxz
xchg
ss
sbb
call
jne
fisubl
scas
lods
imul
jno
fwait
mov
test
sub
or
xchg
cld
and
pushf
mov
cs
push
iret
sti
dec
dec
inc
pop
fildl
scas
cmp
cmpsl
insb
xor
repnz
fistpll
mov
fsts
or
sbb
adc
and
mov
in
add
jl,pt
inc
stos
repz
or
mov
out
sub
adc
mov
adcl
xor
adc
mov
cmp
xchg
loop
add
mov
add
sub
scas
repnz
je
std
pushf
push
repz
repz
add
imul
loopnew
dec
std
pop
in
outsb
pop
test
sub
cmp
dec
inc
mov
xchg
and
mov
in
or
shrb
rclb
pop
mov
cmpsl
mov
jp
xchg
jne
mov
pop
adc
mov
jle
popa
push
cmpsb
jge
lock
aad
iret
stos
mov
int3
mov
mov
mov
inc
mov
fldenv
push
sub
mov
rorl
in
dec
inc
cmp
dec
fbstp
jbe
pop
sahf
jecxz
ljmp
cld
or
aas
mov
mov
push
mov
insl
add
mov
test
test
lret
jl
or
pop
dec
push
pop
fcoms
xchg
ffreep
xor
mov
out
ljmp
mov
ret
ret
mov
or
js
or
push
stos
in
mov
mov
mov
xchg
mov
ds
fs
mov
pop
jle
sbb
cmp
int3
cmp
lods
mov
xchg
shll
popa
repnz
icebp
xchg
mov
sbb
push
sub
int
mov
xchg
or
addr16
std
push
addr16
cmovl
fsubp
icebp
aad
mov
xor
js
insl
ret
enter
mov
pop
arpl
and
or
loopne
dec
lods
inc
clc
rorl
mov
shlb
mov
rcrl
bound
sub
mov
cmc
insb
movsl
dec
mov
xor
mov
sbb
or
mov
int3
xor
adc
push
or
out
pop
fbstp
popa
pop
cli
push
leave
or
test
dec
cmp
dec
ret
es
lds
arpl
repnz
es
ja
cli
mov
add
cmp
mov
xchg
mov
xchg
mov
dec
jl
jae
aas
add
adc
iret
mov
inc
add
pop
mov
push
mov
sub
sub
inc
out
lret
and
cmp
xchg
and
sub
and
loopew
xor
and
xchg
ret
or
add
dec
repz
aaa
mov
xchg
or
cli
jle
xchg
xor
nop
add
adc
addr16
mov
add
in
dec
into
cmp
adc
insl
jecxz
adc
mov
test
cli
add
push
adc
jle
imul
sub
xorb
dec
jo
inc
jnp
imul
adc
sub
inc
mov
ss
in
movsb
jae
sub
lea
xchg
xchg
cpuid
sub
sub
sbbb
icebp
mov
pop
xchg
jle
inc
jnp
fisttpll
mov
ss
shrl
jmp
jl
mov
mov
sarl
std
xlat
shl
fcoml
aam
js
push
popl
add
cs
mov
jp
les
pop
pop
inc
mov
loop
fistps
stos
sti
sbb
pop
cmpsl
dec
mov
and
fildl
ds
loop
nop
out
insb
sbb
iret
shlb
mov
or
xchg
xor
xchg
out
adc
jbe
inc
xorl
bndldx
mov
mov
fsubrs
xor
jne
push
fistpl
push
imul
fnsave
in
mov
mov
mov
adc
inc
aad
cli
stc
mulb
ss
sbbb
mov
mov
sbb
ret
fsubl
push
adc
insl
xlat
jae
pop
mov
dec
lret
inc
loop
movsb
xor
push
xlat
mov
xchg
stos
dec
inc
jle
adc
dec
mov
mov
jne
addr16
mov
dec
inc
mov
push
inc
jecxz
inc
xor
ret
xchg
cmc
out
lods
mov
test
negl
jb
popa
in
repnz
jb
enter
push
adc
aam
adc
bound
rcll
add
inc
sbb
into
sbb
iret
leave
xor
xchg
sub
pop
adc
inc
dec
jae
ja
lock
ret
dec
mov
push
in
push
dec
fwait
hlt
int
cld
mov
les
pop
xchg
addr16
arpl
insl
pop
add
pop
in
dec
jg
mov
loope
lahf
nop
mov
jmp
outsl
pusha
loop
mov
mov
mov
and
sub
push
repz
popf
jg
outsb
xchg
in
jno
lret
mov
sti
loope
data16
icebp
movl
and
jo
mov
loopne
xlat
cmp
mov
fildll
dec
and
or
pop
je
out
cmp
mov
pop
bound
ficomps
xor
inc
sbb
lock
mov
cmpsb
cli
aad
and
sarb
imul
in
imul
sbb
stos
adc
sub
mov
arpl
pop
out
push
or
and
js
rorb
add
push
ljmp
pop
dec
mov
jg
andb
add
fldenv
pop
xlat
in
jo
scas
sub
int3
dec
cmp
jb
xchg
or
sbb
pop
cmp
dec
rclb
sub
or
push
sbb
add
push
fs
adc
inc
subb
push
and
mov
jbe
scas
unpcklps
test
mov
inc
popf
andb
lahf
dec
cmp
cld
xor
sbb
or
pop
jmp
aas
dec
xchg
icebp
jne
xchg
sub
or
data16
mov
xor
mov
cmpsl
adc
xchg
adc
add
mov
cmc
aad
subl
cli
xchg
bound
int
xchg
shll
into
lret
or
repnz
das
mov
dec
xor
push
add
jmp
sbb
push
loopne
imul
xchg
cwtl
ja
mov
jl
add
test
pop
mov
lret
fs
sbb
out
cli
icebp
bound
les
std
add
cmp
aad
xchg
jbe
dec
addr16
or
xchg
es
rclb
or
movb
mov
sub
dec
sbb
push
push
clc
xchg
push
inc
xchg
xor
in
sub
mov
movsl
cmp
sub
sub
mov
jp
test
xor
push
mov
pushf
stos
jecxz
push
add
test
rorb
test
push
iret
mov
mov
test
scas
imul
std
hlt
sub
xchg
cli
cmp
mov
jb
mov
imull
test
cmp
and
mov
or
or
mov
icebp
out
pop
outsb
lock
nop
pop
mov
pop
out
add
icebp
or
icebp
push
aas
push
pop
xchg
jecxz
lret
into
xor
int
imul
stos
ret
or
pop
mov
es
or
xchg
push
jge
and
test
and
mov
mov
mov
lcall
add
stc
popl
idivl
cwtl
ret
mov
xor
pop
jle
and
nop
sti
mov
lods
in
pop
in
adc
ficoms
or
sti
lcall
icebp
sub
inc
push
pop
mov
stos
add
loop
cmp
lret
cmp
jnp
aad
mov
insb
fisubrl
jl
sub
test
cmp
shll
in
out
push
cmp
nop
cmp
ljmp
hlt
clc
out
inc
push
mov
mov
mov
mov
mov
xchg
leave
push
loopne
mov
aaa
jb
shrb
add
jnp
mov
imul
out
lahf
out
xchg
cld
mov
fucomi
jb
mov
fmuls
or
sub
in
pusha
jo
lods
adc
dec
jecxz
mov
aaa
xchg
jne
xchg
cmpb
pop
dec
mov
and
cmp
daa
lret
mov
test
sub
push
and
pop
aaa
outsl
xchg
mov
pop
pushf
mov
sbb
mov
pop
mov
adc
rclb
sub
lock
push
mov
or
sbb
jbe
repnz
pop
invd
jae
xchg
hlt
out
dec
lret
mov
js
xchg
mov
sub
hlt
pop
jo
int3
shll
xchg
jmp
aam
data16
lcall
push
insb
jo
cwtl
mov
push
lods
jp
std
cltd
cmp
jmp
and
ret
xchg
mov
lock
mov
jmp
out
outsl
push
dec
adc
in
pop
cmp
add
test
shrl
push
adc
rolb
mov
or
imul
in
lock
sub
mov
dec
iret
popa
shll
mov
sbbb
sub
iret
xor
adc
test
xchg
pop
fildl
outsl
mov
pop
fs
sbb
cmpsb
dec
cmp
pop
enter
inc
mov
push
loop
push
aam
or
and
test
in
fbld
sti
or
inc
cmp
jne
adc
mov
js
cs
iret
xchg
sub
fwait
sbb
push
cmpsl
ljmp
aam
inc
incl
add
mov
sbb
aam
pop
mov
scas
divl
inc
xchg
jns
and
xchg
not
mov
jecxz
sub
fs
jnp
sbb
add
fstps
xchg
xchg
or
das
lods
hlt
mov
jnp
in
jg
popf
pushl
pop
adc
clc
cmp
sbb
je
xchg
fadds
mov
mov
xor
and
cs
mov
jge
mov
fists
pop
mov
and
jno
jns
xchg
pop
std
pop
or
std
mov
in
scas
fwait
lcall
insb
test
sub
xor
mov
imull
lret
xor
pop
xor
mov
in
dec
scas
bound
ja
xor
jbe
movsb
je
sbb
fidivs
jl
push
mov
and
adc
xchg
inc
test
push
stos
imul
loope
pop
and
xlat
sub
cmpsl
int
push
pop
cmp
sbb
add
fistpl
adc
popf
jmp
cs
adc
xorl
andl
mov
loopne
xor
sbb
pop
outsl
cmp
stc
sub
dec
adcb
cmp
jns
push
mov
xchg
repnz
pop
mov
divb
testl
adc
shrb
loop
adc
sahf
cmp
xchg
or
xor
stos
out
jno
insl
movsb
arpl
adc
lods
or
inc
add
jecxz
popf
ja
mov
aad
nop
or
push
pop
fnsave
xor
xor
hlt
inc
mov
pop
mov
and
test
xor
cs
and
data16
add
lds
push
repz
jle
or
pop
addb
aas
lahf
push
test
mov
movsl
dec
xchg
rorb
adc
lret
mov
mov
push
mov
fmul
xchg
jmp
xchg
negl
xchg
mov
mov
jg
inc
pop
fs
fiadds
dec
pop
int3
shll
jl
repnz
adc
ss
bound
xchg
jp
ja
add
mov
mov
dec
mov
scas
sub
aad
scas
cltd
jg
mov
in
push
out
jne
ds
jp
xchg
shr
and
fisttps
dec
inc
insb
shr
insl
pop
ljmp
ds
jbe
ds
lcall
scas
push
cmp
in
je
inc
fcmove
enter
add
jne
jno
and
jb
int
popf
out
mov
sub
ret
outsb
mov
dec
pop
push
lret
fs
xor
mov
or
mov
in
push
sub
jne
stos
push
sahf
sub
pop
and
inc
lret
arpl
push
nop
jmp
in
mov
xchg
das
sahf
out
jl
and
scas
hlt
enter
icebp
mov
or
mov
shrb
insb
inc
sub
add
mov
and
movsb
test
inc
dec
lds
push
sar
sub
cmc
xchg
daa
adc
fiaddl
cmp
jne
daa
aad
or
leave
dec
aas
jmp
pushf
shrb
ret
xor
pop
rep
cmp
movsb
dec
jecxz
pop
mov
pop
pusha
daa
mov
sar
lahf
out
out
jl
or
mov
or
fdivl
sbb
loopne
sbbl
jge
aam
mov
push
mov
and
movsb
mov
les
es
sub
into
add
mov
icebp
fisubrl
js
adc
xor
mov
push
inc
scas
pop
or
mov
outsb
cld
in
or
jmp
lret
add
xchg
nop
lcall
fcoml
mov
xor
mov
push
jae
ljmp
ficoms
popa
pop
xlat
dec
cmpsl
repnz
adc
or
scas
lods
xchg
mov
inc
cmp
xchg
jb
imul
es
ret
sbb
rcrb
xchg
inc
test
adc
mov
in
fs
mov
dec
lock
and
cmp
dec
sub
imul
loop
sbb
or
stos
inc
dec
xor
ret
and
aas
adc
insl
push
pusha
test
jns
sub
pop
rolb
cmpsb
fwait
push
sarb
shll
mov
in
test
fiadds
repz
shll
push
jecxz
imul
xor
sub
roll
xor
into
xchg
in
pushf
insl
pop
pushf
sub
roll
sbb
out
cmp
push
cmpsb
jg
dec
adcb
inc
jmp
cmp
sbb
pop
jecxz
daa
cmp
adc
pop
out
insl
and
xchg
negb
sbb
dec
loop
sub
out
jmp
or
inc
xchg
jle
lret
repnz
rorl
xor
mov
or
add
and
jbe
movzbl
mov
sbb
and
addr16
or
rcl
lock
ds
cmp
and
iret
sbb
push
cli
add
lock
call
push
je
sub
fbstp
jmp
xchg
stos
pushf
hlt
loopne
xchg
repnz
mov
mov
hlt
lcall
fistl
das
xor
adc
jg
loop
jecxz
mov
inc
and
shll
movsb
inc
rol
adc
shll
ret
sub
sbb
rcll
jne
sbb
into
push
pushf
dec
in
fsubr
call
outsl
mov
lea
popf
cmp
cmpsl
popf
inc
and
pop
mov
enter
cmpsb
jmp
fcoms
mov
sub
jecxz
sbb
aaa
pop
int
fadds
loopne
es
or
pusha
sbb
jbe
mov
dec
adc
ss
pop
sbb
mov
pop
cld
and
aas
mov
cwtl
push
and
lods
jno
push
push
mov
call
movsb
sbb
cmovns
les
aaa
mov
dec
repz
jne
dec
pusha
movsl
push
push
cmp
nop
add
sub
fldcw
mov
fsubrl
push
push
push
lret
or
ja
cmp
hlt
in
pop
sbb
xchg
cltd
pop
push
ljmp
sbb
push
nop
mov
je
and
aaa
shll
test
in
mulb
mov
fists
jl
xor
iret
adc
lret
cltd
aam
in
pop
adc
rcrl
mov
xor
mov
fcompl
notb
fstl
fstp
push
pop
pop
insb
mov
adc
out
fildl
cmc
jbe
pop
dec
push
pushf
push
cld
sti
dec
mov
add
dec
dec
xchg
dec
call
xor
shll
dec
xor
pushf
addr16
xor
mov
loopne
mov
jne
dec
movsb
sub
jmp
push
xchg
pop
xor
out
mov
ds
jecxz
or
in
cmp
xchg
sub
cmp
inc
stc
loope
popf
or
mov
or
adc
lods
in
aam
or
imull
insl
adc
fldl
xchg
bound
shll
aam
mov
hlt
add
clc
or
dec
lock
jecxz
in
jns
mov
jmp
xchg
rcrl
into
cli
jae
sbb
imul
sub
pop
mov
arpl
cmpsb
inc
mov
imul
hlt
cmc
push
xor
call
mov
iret
bound
or
lret
movsl
mov
cmpl
cld
fistpll
gs
outsl
xor
and
cmp
lret
imul
adc
inc
pop
jp
nop
push
inc
in
flds
sub
ljmp
sub
adc
je
js
jecxz
and
push
lock
xor
pop
fs
imul
inc
fstps
jmp
rcrb
xlat
clc
rorb
and
gs
in
cwtl
inc
push
and
not
pop
cmc
inc
cltd
std
mov
mov
xor
loop
cmpsb
push
cmp
push
aaa
cltd
mov
int3
out
nop
jg
xchg
inc
lcall
in
push
push
mov
adc
test
adc
xchg
xor
adc
fcom
and
and
xor
bound
push
stc
adc
ljmp
cli
aad
adc
cltd
jbe
sti
sbb
in
cmpsb
test
inc
mov
push
es
xchg
cltd
cwtl
roll
xchg
decb
and
repnz
stos
pop
add
out
lea
ret
andl
jnp
es
fsubrp
movsb
outsb
mov
scas
xor
xchg
rorb
jne
pop
jbe
xor
cmpsb
sbb
cmp
sub
mov
dec
test
insb
js
ja
arpl
and
cmp
in
sbb
push
xchg
mov
pop
push
seta
sub
imul
fistpl
mov
dec
in
ljmp
adc
sub
inc
sbb
push
int3
sbb
mov
in
out
in
and
sti
cpuid
adc
pop
insb
pop
fs
inc
aas
cmpsl
lods
cmpsl
gs
inc
mov
mov
inc
mov
fwait
or
jnp
loop
das
shll
repnz
adc
inc
or
test
daa
mov
pusha
cmp
lock
mov
add
fisubrl
and
jl
adc
mov
jg
mov
aaa
nopl
add
aam
mov
xchg
mov
stos
mov
int3
jle
sbb
int
ja
into
pop
cltd
lret
adc
xchg
and
push
jb
pop
sbb
insb
push
and
repz
in
mov
out
idivb
std
mov
outsb
mov
sti
mov
call
nop
xchg
aad
popa
jle
out
rclb
adc
sbb
fwait
inc
outsl
arpl
lahf
inc
addl
fsubs
mov
adc
and
std
push
ror
test
movsb
ljmp
dec
sub
loope
push
lds
lock
out
movsl
mov
xor
sbb
mov
fnsave
scas
shrl
mov
mov
mov
mov
add
inc
or
lods
das
xlat
add
mov
scas
fs
mov
cmpsb
and
pop
mov
ficoms
aam
sub
dec
push
popf
shld
pop
jecxz
inc
xchg
jle
in
cltd
mov
mov
jl
mov
pop
cli
je
std
dec
adcl
in
adc
popa
inc
shl
adc
insb
push
and
ficompl
pop
mov
repnz
stos
fs
int3
and
jns
sbb
mov
mov
sub
sub
pop
loopw
sbb
in
push
inc
outsl
xchg
pop
inc
ret
and
sub
rcrl
lods
pop
push
xor
mov
fisubrl
das
fdivl
cld
xchg
xchg
in
test
mov
dec
push
mov
and
mov
mov
loopne
inc
adc
inc
fcomp
mov
sarb
mov
mov
pushf
xor
clc
aaa
push
fidivl
mov
xchg
add
loopne
and
lcall
inc
jae
jecxz
dec
mov
fidivrl
adc
or
sub
je
xchg
notl
sub
push
mov
mov
mov
les
test
mov
nop
xchg
jnp
cmpsb
pop
imul
xchg
dec
pop
out
sarl
fildll
inc
adc
stc
lods
negb
cmp
or
pop
lock
xchg
pop
fcomip
push
xor
pusha
adc
mov
xor
cwtl
lret
dec
aaa
js
xchg
popf
in
jo
mov
int3
mov
mov
mov
ss
test
xlat
insb
aam
lret
std
shrb
mov
cmpb
mov
out
or
lcall
sub
pop
je
idiv
inc
out
mov
mov
out
fildl
movsl
or
xchg
je
inc
jl
adcl
insl
ss
test
dec
cmp
lret
loopne
in
nop
xchg
daa
jo
out
sahf
xchg
int3
jg
stos
or
dec
outsl
xchg
xchg
xchg
sbb
jne
push
pusha
scas
fcomi
rcrl
or
lret
dec
or
inc
dec
push
lret
pop
mov
mov
pop
arpl
sub
ret
in
ss
stc
loop
jno,pn
cmpsl
and
xor
imul
add
pop
mov
dec
mov
mov
clc
add
stos
mov
jmp
jecxz
jp
jb
pop
adc
repnz
lock
cld
jl
pop
mov
dec
fcompl
loop
push
or
fwait
cmp
xor
insb
sub
push
dec
movb
sbbl
sbb
fwait
enter
cmp
mov
cmpb
mov
daa
icebp
clc
lds
add
outsb
mov
cld
cmp
mov
and
in
push
pop
cmp
call
je
or
scas
notb
cmpsl
fwait
out
add
iret
in
repz
and
adc
mov
ret
dec
enter
movsb
mov
inc
jbe
add
mov
sbb
and
call
sbb
arpl
mov
mov
daa
sbb
sahf
fprem
movsl
out
rcrb
lock
or
pop
mov
das
jmp
dec
call
loope
inc
push
mov
test
sbb
test
push
xchg
fmuls
sbb
out
jg
pop
ud2
cmpsb
inc
jb
lds
add
push
test
add
popa
jp
ret
out
adc
fmul
pop
jecxz
jecxz
add
sbbl
mov
cmp
clc
aad
dec
les
push
push
push
stos
or
mov
ja
or
push
mov
inc
pop
jp
std
stc
jbe
sbb
cmp
iret
cltd
scas
test
imul
dec
xchg
mov
xor
mov
js
dec
hlt
or
mov
pop
adc
loopne
push
mov
push
aam
std
repz
movsb
lcall
sbb
shrl
js
xor
aaa
pop
push
dec
int
scas
jg
jns
cmp
push
and
jmp
add
fsubl
cmp
mov
sarb
orl
enter
xor
and
dec
loopne
pop
cmpsl
push
mov
ja
xchg
call
mov
out
adc
shlb
lea
cmc
popa
lods
mov
sbb
test
pushf
push
cmp
jnp
icebp
xor
in
dec
xchg
mov
ss
loope
das
outsl
push
cli
fcmovnbe
adc
mov
lea
dec
mov
pop
fisubrs
pop
sub
int3
push
inc
pop
scas
pop
dec
jl
xor
pop
add
dec
int3
and
push
xchg
dec
ja
push
mov
xchg
xlat
aaa
push
sub
push
and
push
push
repnz
adc
insb
cltd
adc
pop
arpl
movsb
xchg
or
lods
pop
sbb
mov
pop
jns
lahf
mov
out
push
dec
inc
or
int
fstl
data16
xchg
and
cmp
or
in
out
cmp
push
pop
mov
xchg
mov
enter
push
int
ret
outsb
imul
out
fisttpl
lock
push
xchg
cmp
sub
cmp
pop
jae
or
pop
sti
mov
inc
xor
scas
leave
mov
inc
jbe
sbb
xchg
cld
xor
shlb
jl
sub
inc
test
fnstsw
roll
jo
adc
push
or
mov
mov
lock
orl
in
aaa
daa
or
subb
push
lret
push
bound
in
repnz
jb
jae
inc
and
je
mov
mov
ljmp
icebp
sbb
pop
test
add
jno
mov
dec
std
sub
xor
clc
out
popa
mov
testb
xchg
sbb
addr16
dec
sub
add
dec
xor
ss
xchg
ret
fstpl
xor
adc
or
sub
in
ficoml
mov
mov
pusha
cmp
jnp
mov
xchg
loope
add
xchg
pop
fcoms
mov
dec
stos
iret
jb
mov
mov
mov
fildl
mov
pop
xlat
add
cmp
fstl
insb
inc
lahf
mov
adcb
sbb
jg
sbb
fs
jle
pop
mov
aam
mov
push
sbb
inc
and
std
outsb
xchg
into
mov
mov
inc
fcompp
push
mov
mov
test
sbb
push
imul
xor
inc
or
push
push
ds
mov
mov
imul
push
es
pop
idiv
mov
lcall
fldcw
inc
fimuls
sbb
push
clc
dec
pop
out
decl
stc
cld
rorb
inc
adc
or
adc
mov
sub
arpl
mov
mov
cld
std
testb
les
movsb
xor
dec
orl
ja
pop
jnp
xchg
in
and
push
pop
cmpsb
lret
dec
mov
inc
push
fidivl
jge
pop
xor
sbb
sbb
push
insb
adc
ficompl
jnp
les
ret
mov
nop
out
js
mov
adc
iret
dec
xchg
not
testl
stos
insb
and
test
or
aam
inc
call
out
sbb
mov
jno
mov
mov
pop
cli
xor
mov
xchg
call
jo
push
pop
data16
fdivrs
sub
adc
adc
rolb
rcrl
imul
ret
pop
inc
push
jnp
push
or
push
jmp
lahf
out
add
pop
orl
and
pop
imul
pusha
testl
pushl
xchg
and
jns
mov
cmpsb
test
dec
int3
lahf
cmpsl
lahf
xchg
mov
mov
or
nop
pop
push
enter
fildl
jle
out
rclb
cmp
notb
inc
outsl
cmp
cmp
sub
repz
mov
push
loope
setle
mov
cltd
cmpsl
mov
mov
push
jmp
pop
adc
test
push
mov
add
shl
movsl
xchg
xor
out
sbb
adc
xchg
gs
push
clc
jge
leave
mov
inc
mov
sbb
div
jmp
adc
sbb
lret
ss
leave
xor
pop
in
fnsave
and
jnp
out
dec
ror
bound
sbb
in
inc
or
ffree
aad
mov
aaa
sahf
aam
adc
pop
ret
mulb
movsb
jb
jge
inc
pop
hlt
inc
cmp
jmp
mov
ss
dec
imul
out
shlb
cli
data16
clc
dec
inc
xchg
or
lea
or
cmpsl
lds
push
imul
fisubs
cli
out
and
mov
lods
jle
xor
jmp
xchg
or
adc
push
test
xor
push
and
sbb
fldt
cmpsb
sub
sti
insb
fwait
imul
pop
mov
mov
lds
mov
add
or
dec
ret
cmpb
cmpsl
jb
dec
imul
out
mov
inc
jns
adcl
fnstsw
sbb
pop
push
and
or
scas
int
shlb
hlt
ds
push
mov
xor
mov
cmp
push
xchg
loopne
pop
fisubl
rclb
sti
inc
mov
int
cmp
adc
rclb
test
jb
scas
mov
mov
mov
cli
push
add
dec
hlt
pop
dec
mov
jo
bound
dec
shl
inc
cld
adc
push
sahf
sbb
mov
loop
jno
dec
subl
mov
in
lods
nop
mov
mov
iret
push
push
rcll
arpl
push
fucomip
loope
stos
ret
adc
push
out
xchg
jne
inc
cmpb
jae
xor
loopne
add
mov
roll
mov
js
adc
int
sbb
frstor
mov
int
ds
pushf
adc
psubd
lcall
ljmp
add
cmpl
das
xor
addr16
outsl
add
push
lcall
mov
jecxz
mov
movsl
jo
lea
repz
imul
push
jl
add
lret
sbb
xor
lods
lods
pusha
shlb
ficomps
ljmp
aad
mov
adc
xchg
in
and
pop
pop
xchg
sub
xchg
nop
or
push
push
pusha
mov
into
sub
mov
dec
js
insl
jo
subl
leave
mov
push
ret
sahf
xacquire
mov
xchg
mov
adc
fsubrs
and
orb
dec
jg
mov
mov
sti
fimull
cwtl
outsb
std
dec
adc
out
pop
jle
lea
cmp
adc
dec
push
add
in
push
mov
popa
sbb
shrl
and
fcoms
jge
mov
and
sbbl
test
call
rcll
imul
cmpsl
je
movsb
add
push
dec
cli
adc
loop
inc
jp
mov
stos
ret
in
xchg
pop
xor
jne
test
add
add
pop
mov
and
xor
mov
or
lock
dec
or
repnz
dec
cmp
sub
int
inc
das
pop
jp
sbb
inc
dec
insb
test
mov
jl
cmpsl
popf
mov
lret
lods
nop
mov
jge
mov
xor
push
icebp
xchg
repz
enter
inc
cmp
adc
lods
jmp
inc
xchg
movsl
pop
sti
das
pop
dec
aas
mov
sarb
sub
pop
sub
mov
cmp
dec
xchg
push
dec
add
shlb
addr16
cmp
xor
mov
sbb
daa
xor
mov
repnz
inc
adc
pusha
aas
jecxz
inc
xchg
pop
mov
sub
xchg
and
stos
repz
popf
or
push
call
dec
fidivs
lret
xchg
sbb
icebp
inc
aad
gs
jno
xchg
jl
sub
in
mull
push
jns
ret
out
cmp
jo
cmpsl
or
push
or
dec
gs
fidivrl
xor
xchg
dec
push
adcl
jnp
sbb
aad
clc
mov
or
or
jmp
stos
loope
cwtl
fcoms
mov
sub
fmulp
and
cmp
xchg
dec
test
mov
xor
mov
adc
adc
aas
dec
dec
ja
push
fisubrs
pop
out
mov
jle
jne
xor
pop
loop
push
ret
dec
fwait
or
xchg
mov
les
pop
not
and
add
rcrb
mov
push
fstps
pop
cmp
jnp
lods
roll
enter
sbb
out
mov
iret
dec
jo
inc
and
xchg
arpl
std
ret
les
dec
mov
mov
movsb
add
mov
mov
scas
lods
push
push
or
push
xchg
stc
fdivrs
enter
dec
call
loopne
jmp
inc
scas
out
sbb
jno
dec
push
sub
push
pop
sub
sub
cmp
ljmp
jmp
lods
jb,pn
sbb
stos
jo
xchg
cmpsb
jg
fucompp
scas
dec
hlt
stos
aad
inc
and
mov
inc
int
lret
add
int
xchg
call
addr16
clc
into
mov
or
mov
cld
sub
add
shll
aaa
test
jo
inc
clc
aaa
loopne
call
push
adc
mov
adc
stc
loop
cli
outsb
int3
outsl
rorl
dec
add
in
xchg
aaa
adc
pop
lret
lret
cmp
add
push
mov
shll
sub
out
fstl
stc
ds
shrl
int
xchg
cmpsb
xchg
sbb
jmp
inc
push
cmp
mov
push
sub
mov
cmp
or
inc
xchg
daa
fs
int
lea
dec
loope
cli
fstpl
push
or
xchg
sahf
sahf
xchg
inc
pop
jne
gs
popf
out
pop
addr16
push
sbb
mov
sarb
sbb
push
add
cmp
jmp
js
je
adc
mov
sbb
scas
cli
sahf
jno
push
xchg
pushf
dec
lods
into
lahf
dec
aas
pop
jne
dec
scas
add
insb
test
data16
js
ret
sub
lods
xchg
mov
pop
mov
ljmp
jno
fwait
es
std
repnz
fwait
das
jbe
stos
cmp
inc
leave
jge
push
insl
lret
adc
sub
loopne
jg
push
mov
aas
or
rorb
dec
jne
fwait
cmp
dec
sbb
fidivl
adcl
ja
adc
repnz
test
stos
cmp
into
push
sahf
aas
dec
inc
dec
adc
out
dec
inc
sbb
scas
and
dec
or
inc
lahf
add
xor
xchg
bound
mov
sti
add
pcmpgtb
in
mov
push
cmc
dec
mov
dec
jle
lret
ja
int3
sub
in
lock
add
call
nop
jge
test
xchg
out
mov
add
cmp
cwtl
cmp
leave
out
das
ficomps
pop
lcall
mov
pop
inc
std
push
add
adc
scas
add
push
fadd
enter
pop
adc
enter
sbb
inc
imul
xchg
shlb
jecxz
cltd
jb
jl
inc
cmpsl
fsubp
xor
mov
push
sub
fcoml
loope
sti
testl
jmp
lds
popf
xor
dec
popf
jg
in
addr16
push
aas
shl
push
pop
sbb
sbbl
dec
rol
lahf
fnstsw
xchg
xchg
in
jge
fsub
es
pop
jb
dec
jmp
data16
out
and
xchg
lods
and
inc
ds
sub
sub
jmp
lods
add
add
mov
mov
sub
divb
bnd
sub
out
loopne
hlt
dec
fstps
pop
mov
or
xchg
adc
int
inc
inc
dec
not
jg
inc
cmpsb
push
push
push
xor
xor
testb
loop
lods
fidivl
adc
test
mov
out
out
das
sub
loope
out
jbe
and
or
insl
inc
pop
sub
jo
outsb
inc
dec
imul
fwait
or
fstpl
xor
insl
loopne
cmc
dec
cmp
loope
xchg
dec
out
mov
test
sbb
cmp
lret
fdivrp
es
and
stc
daa
dec
adc
addl
jno
cmpb
or
jne
xlat
add
int
push
cmp
mov
xchg
pop
jmp
mov
push
jnp
subb
stos
dec
pop
gs
lods
jl
pop
dec
push
iret
lods
push
sub
dec
sub
jg
mov
mov
pushf
arpl
popf
sub
outsb
shlb
fwait
cs
lret
je
aas
out
inc
test
into
imul
and
mov
xor
mov
movsb
mov
jmp
mov
cli
add
fwait
cmpl
insl
test
mov
nop
mov
int
lret
adc
out
and
mov
inc
rclb
mov
push
int3
call
iret
mov
pop
cmc
cmp
les
mov
insl
loopne
cmp
jbe
mov
pushf
pop
sbb
lock
add
cmp
or
pop
ficomps
je
mov
pop
iret
ljmp
jo
aad
les
dec
lret
in
arpl
dec
xchg
or
sub
xchg
fwait
and
sub
mov
nop
inc
adc
mov
xor
fidivrl
je
mov
arpl
out
cwtl
pop
test
stos
dec
or
data16
fisubs
icebp
add
idivb
clc
dec
xor
les
gs
xchg
and
sub
sbb
cmp
daa
pop
popa
stos
jb
fwait
or
jecxz
rcll
xlat
test
das
mov
test
sub
mov
imul
mov
mov
subps
out
enter
cld
xchg
into
or
gs
insb
cltd
pop
imul
sub
in
adc
pop
adc
gs
sbb
sti
arpl
shl
ja
enter
adc
cmpsb
repnz
loope
out
iret
cmpsl
dec
mov
dec
jae
test
adc
inc
sub
jg
in
cmpsl
stc
cmp
insb
lock
inc
push
das
or
rclb
loopne
mov
dec
int3
cmp
add
inc
adcl
cmp
test
push
ffreep
xchg
jne
push
in
scas
in
push
mov
test
inc
pop
mov
or
cli
adc
imul
pop
fs
popa
sub
andb
sahf
mov
out
ljmp
mov
add
jmp
jns
out
sub
lock
add
in
loope
jb
aas
or
mov
outsl
enter
sub
pop
xchg
xor
pop
dec
dec
int3
xor
or
sbb
mov
iret
vcvttsd2si
adc
or
mov
stos
negl
xchg
test
cmpsl
notb
add
sub
lahf
mov
push
mov
fnsave
mov
mov
popa
fidivs
inc
inc
jge
shl
inc
sub
or
pushf
xchg
mov
cmpsb
mov
aas
test
xchg
stc
imul
leave
xchg
dec
push
nop
call
push
lock
arpl
rcrl
adc
add
mov
setnp
mov
mov
mov
xor
dec
in
shll
je
sub
scas
push
mov
stos
push
lahf
fildll
outsb
adc
aam
mov
xor
in
jnp
imul
sar
shlb
push
test
push
cmc
movsl
decb
or
mov
mov
pusha
xchg
ds
and
call
or
inc
shrb
xor
adc
std
es
sub
inc
icebp
sub
sbb
mulb
iret
adc
je
add
cwtl
xchg
ficomps
fidivs
mov
dec
push
sub
dec
es
adc
out
dec
roll
adc
sub
int
mov
jl
sub
xor
inc
and
adc
jecxz
ja
cld
stc
dec
cmp
inc
pushf
insl
lods
push
and
dec
arpl
jmp
dec
cwtl
jne
cmpl
pop
popa
insb
dec
int3
mov
adc
scas
mov
mov
andl
mov
arpl
je
push
cwtl
xchg
jo
add
adc
fidivl
push
arpl
xor
mov
pop
xchg
push
jge
xor
mov
and
out
gs
shrl
cmp
call
int3
test
adc
stos
and
mov
pop
and
call
in
mov
test
mov
aad
mov
lahf
fwait
jo
or
ret
stos
dec
in
mov
cmp
test
sti
insb
dec
mov
es
or
hlt
add
sbb
dec
loopne
inc
je
push
outsl
dec
jecxz
push
adcl
notl
out
enter
lret
in
and
sub
hlt
or
xor
push
jb
push
push
adc
test
push
mov
xchg
sbb
pop
outsl
push
push
je
jl
jg
cmp
adc
dec
aad
xchg
stos
sbb
cmp
sbb
lods
call
sub
outsb
cmp
shrl
cli
mov
mov
cwtl
mov
jo
jno
xchg
mov
imul
cmc
cmpsb
cwtl
into
imulb
cli
rep
pop
or
inc
inc
in
int3
aaa
mov
jae
jmp
ret
jne
xor
fwait
xchg
movsl
addl
lods
rcrl
loopne
xorb
xchg
aam
push
jp
sbb
sahf
xor
push
movsb
mov
sub
mov
gs
filds
pop
lahf
jecxz
mov
push
sub
rol
xchg
cltd
add
push
pop
mov
pushl
mov
lods
and
dec
es
test
push
fucomi
xor
out
in
test
sbb
push
cmpsb
sub
mov
imul
jb
out
push
shll
pop
sbb
mov
cmp
push
scas
cmp
out
jb
ret
mov
out
jae
sbb
jbe
jp
ret
aas
fs
pop
fisubl
push
aas
loopne
mov
test
xchg
aaa
sahf
mov
dec
jns
test
mov
and
push
lcall
cli
daa
cmp
pop
std
int
mov
sahf
push
adc
stc
xchg
arpl
pop
adc
xor
adc
xor
movsl
jg
push
xorb
xchg
iret
and
cmp
jl
mov
rcrl
imul
add
aaa
and
and
sbb
dec
cmpsb
mov
lods
movsb
dec
mov
sub
arpl
lds
stos
ja
cld
mov
or
out
jns
fbld
xor
das
add
jbe
inc
incb
int3
pop
ss
pop
adc
jbe
rclb
insl
add
mov
inc
lahf
jne
jb
or
iret
inc
mov
lock
adc
icebp
gs
aas
dec
fsubrs
push
mov
test
xchg
leave
mov
ficoms
mov
leave
dec
add
xorl
scas
push
cmp
inc
pop
pushf
aad
iret
adc
shrl
jb
push
and
push
push
rcr
jp
notb
inc
xchg
out
jae,pt
mov
jb
das
scas
xor
sbb
push
jl
dec
push
aas
mov
std
sub
mov
pushl
fs
mov
jnp
jg
popf
mov
pop
fadds
cmp
stos
pop
mov
dec
insl
sbb
jmp
lock
jg
lret
cmp
ljmp
fnstcw
xchg
dec
shr
mov
mov
sbb
repnz
cmpsb
mov
push
decb
les
mov
cmp
jnp
adc
jge
ds
lahf
fstpl
pop
or
pop
jbe
jmp
std
xor
ret
cmp
xor
popf
sti
sub
cs
repnz
xlat
xchg
cwtl
push
ret
ret
jnp
faddl
in
sub
insl
ret
addl
das
and
push
sub
cltd
repnz
out
aad
inc
push
jecxz
gs
xchg
xor
push
adc
sbb
jns
mov
mull
cmpsb
cld
insb
movsl
jo
push
add
rclb
jns
rolb
lock
ss
outsb
fbstp
sarl
fwait
sub
scas
mov
shr
push
rcl
leave
inc
sti
add
out
dec
add
and
movsl
xchg
and
mov
mov
or
int3
mov
mov
call
mov
enter
int
arpl
adc
popf
cmpsb
js
or
cmpsl
divl
fisttpl
jnp
into
cmp
mov
stos
dec
mov
jae
or
outsl
pop
rorb
loope
mov
pusha
popa
adc
mov
je
dec
pop
jnp
dec
repnz
insl
cmovp
shl
dec
jo
orl
cs
mov
stos
test
test
jge
cmp
cmp
loop
push
push
jmp
mov
movsb
in
xchg
push
push
in
psrlw
js
lods
mov
inc
push
fisttpl
jge
stos
fwait
cmpsb
es
sub
jmp
mov
add
pop
pop
pop
cli
adc
pop
cli
sbb
fcoml
outsl
sbb
dec
loope
int3
cltd
hlt
xlat
cmp
and
push
xor
mov
cmp
cld
jp
add
xchg
jp
and
jmp
sub
pop
cmp
mov
in
shll
adc
in
popa
push
out
mov
inc
movsb
and
sbb
lods
std
sub
dec
xor
cmpsl
mov
pusha
es
into
adc
orl
dec
xlat
xor
mov
or
xor
mov
leave
call
std
int3
sub
xchg
pop
jns
xchg
fdivrp
dec
jb
jg
mov
daa
push
sub
or
out
push
in
inc
testl
rcr
dec
xchg
pop
movsl
pushf
sub
loope
jge
or
sbb
sub
sub
xchg
lret
inc
inc
out
cwtl
stc
mov
repz
cld
push
push
imul
dec
shll
mov
out
ret
dec
fnop
or
popf
pusha
lahf
add
or
test
in
xchg
in
jbe
sub
xchg
cli
imul
dec
push
hlt
rcrb
shll
xchg
scas
push
xchg
rorb
push
jl
arpl
rcll
mov
inc
fwait
xchg
sub
and
xorb
hlt
mov
hlt
clc
xor
fs
fdivs
in
mov
add
dec
jno
nop
mov
jmp
inc
xchg
or
sub
mov
hlt
cmp
cmp
aas
adc
mov
pop
cmp
int3
mov
mov
mov
gs
push
movsl
sub
test
mov
inc
scas
cmc
lock
cmp
mov
test
aad
stos
addr16
cs
bound
stc
xchg
pop
je
or
mov
xchg
jns
insl
pop
loopne
popw
fistps
jecxz
enter
hlt
pop
or
mov
push
and
mov
lret
loope
mov
mov
push
push
mov
test
rorl
or
inc
sub
xchg
jno
push
sbb
int3
inc
mov
cwtl
push
push
das
sub
notb
xchg
ljmp
inc
add
ficompl
negb
mov
pusha
pop
push
mov
aas
add
test
call
mov
ljmp
push
test
fidivrs
add
or
fimull
mov
ficomps
inc
mov
in
xchg
jne
test
scas
movb
sbb
jl
test
in
decb
not
push
pop
jb
sub
ficoms
sbb
ret
outsl
pop
dec
add
clc
out
in
push
push
arpl
and
jge
sub
adc
cld
cld
cmpb
push
mov
cwtl
sbb
mull
or
push
mov
cwtl
mov
or
mov
inc
shl
cmp
cli
sarb
mov
push
repnz
pop
and
jb
stos
das
faddl
mov
sbb
iret
jns
jae
jmp
cli
push
out
xchg
enter
lret
pushf
es
or
dec
scas
and
out
inc
rol
call
jle
push
cmp
lods
lock
push
lahf
sbb
sbb
arpl
mov
ljmp
aad
inc
jl
xchg
fwait
clc
mov
and
ds
or
jecxz
shll
ss
jb
loope
aaa
scas
add
in
pop
pop
adc
pushf
mov
fisttpll
mov
xchg
cmpsb
jecxz
hlt
cltd
xor
leave
cmpsl
andl
movsb
movsb
mov
lret
out
xor
movsb
push
test
sahf
inc
and
lock
fdivp
stos
mov
out
adc
xchg
pusha
in
shlb
mov
insl
push
mov
pop
cmc
jle
and
cmovp
pop
ss
add
mov
popa
xchg
int
add
mov
lcall
mov
or
xor
mov
cmp
pop
mov
pop
js
imul
mov
leave
fiaddl
fnstsw
mov
cmc
push
mov
fistpll
bound
push
das
mov
jl
outsl
fldenv
outsb
int
or
hlt
pop
out
jp
daa
es
mov
xchg
sahf
sub
sbb
mov
pusha
rorb
mov
bound
cli
stos
int
sbb
mov
rorb
out
dec
sbb
jo
xchg
xor
rcrb
cld
mov
sahf
out
insl
in
loope
dec
mov
mov
in
rorl
pop
cmc
les
xchg
mov
mov
dec
and
lock
out
daa
xor
loop
iret
sbb
push
jl
push
xor
dec
data16
and
adc
cltd
inc
mov
dec
and
cmp
add
mov
mov
or
xor
push
mov
ljmp
jle
push
and
scas
dec
sbb
scas
pop
inc
data16
ljmp
test
pusha
xor
push
in
mov
int3
stos
js
rol
cli
adc
jo
stos
sub
testb
mov
cmp
hlt
addb
repnz
and
mov
test
mov
sbb
jl
jne
pop
xchg
and
xchg
aad
aam
xchg
sbb
jge
out
pop
push
mov
ret
pop
imul
ss
mov
enter
add
push
in
je
mov
packsswb
and
sub
dec
movzwl
in
imul
scas
jno
inc
aam
add
addl
roll
bound
negb
out
add
jmp
dec
jp
mov
mov
popf
pop
sub
imul
sbb
push
and
out
inc
push
xchg
lods
out
ja
jns
add
repz
mov
sarb
out
lock
push
pop
xchg
insb
inc
sti
add
enter
inc
ja
in
push
les
mov
or
icebp
push
jo
and
adc
mov
mov
lahf
hlt
out
orb
xlat
aas
dec
xor
xchg
add
dec
mov
es
nop
je
dec
pushl
inc
dec
xchg
sub
and
rolb
cwtl
push
push
inc
pop
cmp
cs
mov
adc
mov
jg
sub
addr16
je
outsb
xchg
add
cmpsb
mov
xchg
test
sbb
subb
testb
adc
leave
sub
adc
jo
push
hlt
mov
test
xchg
push
scas
lock
sbb
inc
data16
pop
xchg
repnz
ret
xor
inc
push
imul
jb
fsubs
sub
sub
insl
daa
mov
ds
and
or
xor
xchg
sub
lea
daa
or
sbb
add
mov
sub
insl
jmp
jmp
inc
movsb
lods
xor
arpl
or
sub
sahf
push
dec
or
imul
js
push
pop
xchg
insl
jmp
add
push
or
insb
rolb
psrlq
notl
push
add
pop
lret
inc
filds
add
dec
stos
cmpsl
sub
hlt
scas
std
in
mov
fcomp
dec
scas
and
pop
out
push
push
popa
lcall
sti
mov
addb
lret
mov
push
jno
cmp
cltd
stos
inc
bound
mov
and
jmp
dec
mov
mov
dec
lcall
cmpsl
xlat
jp
cmp
je
loopne
aam
pop
pushf
cmovbe
dec
loop
and
leave
outsb
stc
sahf
mov
idivb
mov
and
enter
insb
mov
icebp
ret
cmp
iret
ficoml
lods
std
xchg
adc
mov
add
in
pop
add
movsb
mov
jp
mov
xchg
cltd
adc
and
inc
leave
and
nop
jbe
push
icebp
cld
in
xchg
xchg
das
jg
aas
fstl
ljmp
xchg
or
and
xchg
dec
ss
or
inc
sub
mov
mov
mov
sub
out
stos
js
sbb
repz
ret
push
adc
inc
imul
dec
xlat
js
in
aam
mov
lods
push
rclb
popa
sbb
test
lret
push
jmp
fnsave
shr
push
js
pop
push
xor
pop
and
cli
mov
sbb
or
push
std
adc
fmul
mov
fdivr
or
cld
ret
pushf
loopne
test
jns
test
or
gs
cmp
popf
xor
movsb
mov
mull
dec
sbb
push
jns
addl
mov
sbb
sub
mov
aam
cmc
push
push
mov
ret
nop
fstps
data16
push
inc
js
js
cmp
pop
stos
out
push
xor
loope
add
popf
cli
mov
imul
or
icebp
loop
lahf
jbe
dec
add
add
popf
enter
xchg
lock
popa
push
mov
data16
sub
jbe
mov
mov
sub
and
push
and
in
ss
sub
nop
ljmp
imul
jne
and
add
xor
sbb
cmp
out
mov
sub
mov
aas
int3
mov
lods
add
out
les
addr16
xchg
add
popf
cwtl
pop
or
xchg
lcall
clc
adc
sbb
xor
icebp
cs
adc
dec
enter
mov
insb
in
sub
inc
add
ja
mov
ret
out
push
push
pop
out
or
imul
cltd
daa
aas
pop
fbstp
or
cmp
int3
loopne
adcb
xor
mov
in
xor
and
mov
inc
xor
mov
shlb
stos
xor
dec
and
pop
xor
dec
inc
nop
sub
xchg
inc
scas
es
or
fidivs
xor
mov
lcall
stc
inc
or
cmp
clc
inc
cmpl
iret
loope
clc
mov
popf
jmp
or
xor
in
nop
pop
dec
jl
mov
push
scas
aaa
mov
arpl
in
dec
xor
aaa
cmp
mov
jp
adc
push
lret
int3
pop
rcrb
fadd
nop
lret
sbb
mov
jns
out
divl
inc
pop
cwtl
imul
adc
push
test
mov
cmp
or
ret
sub
stos
arpl
in
sub
lret
cmpl
sbb
rorb
clc
gs
or
nop
cmpsl
jno
stos
sbb
pusha
mov
mov
orb
scas
mov
mov
jle
in
lret
xlat
mov
dec
inc
cld
pop
add
push
shlb
dec
addb
xor
stos
cmp
cmc
insb
sub
sarb
loopne
sahf
adc
data16
cltd
iret
lahf
stos
nop
mov
push
imul
sub
push
mov
cwtl
int3
nop
jno
dec
inc
add
rcl
fsts
jo
into
je
push
imul
mov
push
int
sub
jbe
mov
jo
ficoms
test
icebp
pusha
mov
leave
adc
jle
bound
lods
pop
les
repnz
test
sub
push
pop
jb
adc
xchg
jae
test
rcrb
xchg
loop
inc
fwait
das
sbb
adc
lret
in
jbe
jle
shlb
or
cmpsb
or
inc
mov
jl
popf
pop
lret
lret
fdivrl
mov
fistpll
add
ljmp
or
sub
push
nop
mov
sbb
adc
mov
ss
insb
inc
fildl
fisttpl
jecxz
test
sbb
pxor
les
lds
add
push
jp
jecxz
cmp
and
jno
cmc
cld
andb
sar
cmp
xor
loop
icebp
out
aad
sub
adc
xor
jo
and
sti
jle
pop
xchg
push
in
push
pushf
mov
repz
in
lret
cwtl
and
xchg
out
int3
aam
jns
and
xchg
jno
xchg
inc
jbe
stc
repnz
sahf
inc
mov
xlat
mov
xlat
loopne
mov
ja
cmc
dec
lods
cld
and
test
idivl
jno
cmp
ret
push
pop
filds
or
outsb
xchg
push
pop
xor
mov
lods
jne
fdivs
inc
in
xor
mov
adc
inc
mov
cmp
and
psubb
dec
push
mov
jno
shlb
sbb
pop
mov
into
jb
inc
cli
mov
test
jb
movb
mov
rol
sub
lds
xchg
call
push
lahf
lcall
and
sub
movl
lock
rclb
xor
in
je
xchg
stos
ljmp
fistps
ljmp
outsb
fsubr
aas
xlat
fildll
sar
stos
lcall
divl
je
test
add
xor
movsb
out
les
insl
call
dec
insb
into
rcrb
push
or
movl
inc
xor
vfrczps
out
xorl
aam
add
jns
inc
xor
lcall
xchg
inc
xor
in
mov
addb
loopne
dec
outsl
push
xlat
arpl
testb
mov
fs
bound
into
js
arpl
movsl
xchg
pop
jp
rcr
lds
dec
mov
cmp
mov
ljmp
push
jle
cltd
fisubs
cmp
pop
xorb
fs
sub
mov
push
cmc
shl
jmp
cmpsl
xor
pop
push
mov
out
mov
insl
jmp
push
push
fcomps
mov
and
jge
and
mov
loopne
jl
test
and
std
inc
pop
mov
incl
xor
clc
pop
movsb
jl
outsl
lods
push
pop
mov
sbbl
mov
aaa
data16
shrb
and
xchg
sub
xchg
nop
je
jmpw
cmpb
out
loop
rolb
out
cmpsb
fcmove
xor
movsl
mov
int
xchg
xor
rolb
push
std
in
and
repnz
js
push
xchg
clc
mul
mov
ss
aas
jecxz
imul
dec
shl
push
jecxz
repnz
adc
leave
xchg
pop
lods
xchg
aas
dec
es
iret
jl
inc
aas
sub
repnz
dec
insl
imul
sahf
ret
dec
hlt
mov
lret
pop
inc
push
fisubl
xchg
and
cmp
in
ss
mov
mov
lcall
lret
fimuls
pop
nop
andl
sbb
shll
enter
sbb
shll
push
addr16
aad
or
movsl
sar
scas
aas
or
ss
lods
cmp
mov
jg
jnp
loopne
call
inc
jp
outsb
data16
movsw
jne
xchg
cwtl
cmc
add
xchg
out
out
pop
rcrl
cli
or
js
clc
loope
adc
dec
and
movsb
ret
jnp
out
adcl
jb
lods
lcall
test
insl
repnz
pop
adc
xlat
inc
in
test
jno
ficoml
in
push
and
lret
or
out
lahf
rolb
pop
enter
pop
push
and
push
dec
jp
or
cmp
mov
adc
xor
ret
jnp
mov
xchg
or
pop
shrb
jns
fwait
aam
fstl
mov
out
test
shrb
xor
ss
sub
jge
mov
pop
xchg
cmpsl
lods
mull
dec
or
in
sub
leave
dec
ret
pop
cmp
int
lds
hlt
adc
outsl
js
push
or
or
out
and
jne
add
insl
out
movsb
imul
jae
fcompl
jb
dec
movsb
insl
cmpl
xchg
dec
cltd
cltd
adc
push
mov
push
pop
popf
mov
pop
xlat
mov
push
xchg
dec
cmp
lret
pop
push
pop
xchg
push
dec
jo
ret
imul
adc
and
jl
xchg
or
inc
push
fwait
js
mov
stos
lea
push
lcall
jmp
dec
in
fsubrs
mov
popa
call
call
jo
repz
jl
dec
xor
fsubrl
sbb
test
xor
mov
aas
in
cld
push
ljmp
lea
pop
inc
aaa
popa
cmpl
lods
cmpl
gs
aad
mov
xor
testl
sbbl
or
fildl
jp
sub
cld
ss
test
push
push
je
jo
call
xchg
mov
out
movsl
je
clc
out
test
push
jl
adc
add
lods
mov
outsb
or
sbb
pusha
dec
mulb
mov
mov
movsb
mov
xor
push
daa
push
or
add
sahf
xor
sti
dec
adc
imulb
jg
pusha
aad
xor
mov
loop
adcl
lock
jns
lds
loopne
adc
loop
sbb
imul
aaa
jnp
stos
sub
adc
inc
stos
mov
sub
and
sbbb
popa
das
push
inc
scas
in
nop
into
hlt
fsubr
cmpsb
in
jno
imulb
inc
or
xchg
mov
and
lret
fs
rcrb
push
mov
dec
enter
and
test
jge
adc
jb
add
les
repnz
push
mov
mov
loop
orb
dec
and
xor
jg
cmp
push
mov
jmp
shlb
jae
jg
mov
sbb
lret
daa
stc
addb
iret
inc
mov
mov
or
cmp
bound
xor
popa
sbb
pop
jmp
cmp
lods
sub
mov
fnsave
loop
aaa
cmp
movsl
cltd
bound
xor
rorl
push
add
aad
pop
cmp
mov
dec
mov
inc
adc
inc
out
clc
insb
dec
xchg
aaa
xchg
sbbl
cmp
lds
sbb
aas
insb
xor
mov
fidivrl
pop
xor
push
mov
popa
stos
xchg
pop
add
xor
adc
mov
xor
sub
inc
lods
jl
shll
dec
insb
insl
repnz
xchg
sub
in
pop
mov
bound
mov
aaa
fiadds
sahf
add
pop
jl
in
pop
mov
push
sti
lods
lret
cmc
gs
cmc
jl
addr16
mov
and
or
lret
xchg
xchg
rcll
out
or
adc
pop
cmp
imull
dec
sub
lahf
adc
xor
es
xor
push
mov
xor
das
fcmove
mov
in
sbb
dec
scas
dec
push
xchg
mov
cwtl
je
dec
pop
inc
pop
lods
arpl
fldcw
repz
cli
xchg
outsl
cmc
cmpsb
lret
inc
sbb
mov
xor
mov
inc
xor
inc
flds
fs
adc
inc
mov
and
test
adc
pop
iret
fsubl
sbb
push
inc
jo
mov
add
or
mov
add
inc
pop
lret
jb
mov
out
jg
dec
inc
sbb
xor
and
roll
jg
ljmp
add
loopne
pop
jmp
xor
sbb
ret
jmp
fisttpll
mov
push
mov
adc
push
cmpsb
xor
nopl
popa
push
xchg
sub
jbe
fsubl
les
adc
rcr
mov
movsb
jnp
pop
sbb
lcall
and
das
xor
pop
jp
or
dec
pop
call
cmp
out
jnp
cmp
rclb
lea
mov
cmp
lret
cltd
xor
adc
inc
mov
mov
fwait
or
mov
mov
xor
xorl
rcrb
scas
ja
mov
and
jle
clc
sbb
leave
outsl
cli
mov
dec
push
push
dec
adc
fsubl
jp
arpl
ja
neg
cmpsl
adc
jae
icebp
cmp
ret
cmp
in
adc
and
mov
jo
xor
sti
dec
or
and
aad
mov
sub
jl
add
outsl
in
ret
mov
sbb
js
pop
filds
sarb
inc
data16
jo
add
mov
xor
call
lods
or
fiaddl
das
xchg
loop
xchg
push
mov
lret
lods
mov
fstpt
adc
mov
outsb
pop
das
xor
shll
pushf
mov
mov
jle
xchg
int3
mov
xor
mov
fs
mov
xor
into
mov
rclb
cli
jl
add
mov
fistpll
or
xchg
insl
mov
scas
xchg
insl
repz
nop
push
scas
sahf
mov
fstpl
bnd
mov
sahf
outsl
in
cwtl
inc
jg
in
pop
lods
shrl
addr16
test
int3
mov
mov
and
pop
ja
inc
rclb
sahf
int
mov
mov
lcall
rclb
pop
or
adc
sbb
push
aas
mov
fcmovbe
das
sub
lcall
xchg
imul
aaa
pushf
sbb
xor
cld
jecxz
hlt
and
push
sbb
dec
data16
inc
in
sub
daa
xor
adc
ss
adc
xor
rcr
adc
les
dec
mov
test
mov
mov
inc
imul
sub
add
out
mov
lods
cmp
mov
xor
mov
inc
cmp
ror
push
sub
pushf
sub
pop
sbb
mov
add
pushf
jecxz
pause
push
call
int3
jl
lret
mov
les
inc
leave
mov
dec
loopne
push
jge
pop
fst
fisubrs
xchg
cld
jnp
jecxz
stos
mov
pop
ljmp
add
mov
movsb
xchg
in
das
xor
jecxz
xor
cmc
lock
xor
cmpb
and
in
xchg
cmp
pop
cld
loope
and
mov
rorb
jge
pop
shlb
cli
lret
dec
jne
scas
cmp
test
leave
or
and
repz
inc
clc
pop
pop
sahf
push
out
sbb
push
push
pop
insb
sbb
dec
das
insl
cwtl
in
cmp
jg
jbe
jns
xor
pop
in
mov
roll
js
aas
mov
shll
cmpsl
sbb
cmpsl
mov
xchg
repz
scas
notl
sti
les
lret
inc
xor
sub
jnp
xchg
and
xor
gs
inc
cli
sub
in
sbb
cli
lret
mov
dec
inc
or
subl
dec
mov
push
jne
sbb
lods
push
mov
mov
mov
pushf
pop
loop
pop
or
orl
dec
sub
not
jae
cld
jg
dec
sbb
push
mov
cmpl
subl
mov
dec
dec
jns
adc
mov
xor
push
or
std
pop
jo
xlat
mov
adc
xor
lods
and
push
add
push
mov
pop
and
loope
and
andnps
dec
push
or
movsb
into
scas
xchg
pmovmskb
lret
call
addl
fldenv
push
call
or
xchg
hlt
push
dec
jp
jbe
adc
pop
insl
sub
xchg
inc
mov
inc
add
les
fisubl
xchg
mov
fldenv
mov
shl
push
mov
jnp
std
hlt
sbb
sub
sub
sbb
gs
pushf
mov
cmp
out
sbb
or
lock
icebp
fistpll
push
leave
lods
hlt
and
mov
jp
sub
out
or
daa
fstpl
fdivrl
pusha
mov
sub
lcall
stc
add
or
fldl
sub
insb
cli
xchg
jmp
pop
mov
xor
lock
cmp
enter
cmpsl
out
aam
pop
js
mov
push
cmpl
cmp
ss
ficoml
xchg
or
jmp
sbbb
out
cmp
rcr
clc
insb
loope
adc
insl
add
movsl
jne
mov
or
pop
mov
sbb
cmp
imul
jl
frstor
jg
mulb
mov
xchg
ss
fs
ret
aam
push
stos
int
bound
aam
xorl
adc
push
jbe,pn
jge
xchg
xchg
dec
pop
adcb
andl
dec
imul
push
xchg
fs
mov
mov
ret
adc
push
inc
xor
adc
outsb
idivb
iret
adc
xchg
orl
jecxz
cmp
ss
mov
mov
sub
mov
xchg
rcr
mov
sbb
sub
sub
and
popf
hlt
and
xchg
inc
scas
cmp
lahf
pusha
or
out
arpl
ja
push
lea
xor
cltd
mov
lcall
test
cwtl
push
add
cmp
and
test
push
mov
dec
add
cmpsl
imul
or
mov
pop
das
in
loope
mov
dec
mov
fnsave
add
popa
mov
or
je
mov
add
xchg
lahf
mov
and
pop
adc
sub
aaa
filds
lret
scas
outsb
fs
sub
shrl
push
insl
mov
lret
in
jmp
or
repnz
dec
rcr
mov
addr16
inc
jo
add
les
pushf
adc
cld
xchg
data16
insl
and
daa
xchg
mov
mov
xor
xchg
pushf
adc
and
int
mov
jo
mov
or
inc
xchg
push
inc
adc
daa
and
stc
cmp
rclb
mov
cmp
dec
rclb
xor
aaa
testl
cmp
sub
fwait
nop
mov
lahf
mov
jns
jae
sbb
xor
xor
xchg
movsl
inc
cmpsl
rolb
data16
and
mov
cmp
dec
adc
mov
pop
mov
add
sbb
daa
jmp
outsb
shl
ret
imul
pop
rcrl
aam
inc
lock
ret
sti
sbb
xchg
lock
xchg
and
je
out
or
cmpsb
sub
mov
mov
cld
aaa
mov
in
in
dec
mov
jge
pcmpgtd
mov
mov
xchg
testb
movsl
fisttpll
mov
jno
sarb
sbb
sub
fdivs
sub
cmpxchg
lods
and
mov
push
sub
sarl
sbbl
pop
adc
scas
pop
dec
xchg
pop
jno
call
shlb
pop
data16
enter
inc
adc
subb
fs
xor
mull
dec
sub
mov
or
repnz
and
in
rclb
jg
inc
outsl
xor
pop
cmpsb
pusha
add
testl
adc
testb
cli
jbe
imul
xchg
mov
mov
les
fnstsw
je
clc
mov
jge
clc
mov
push
inc
fsubrs
xor
cld
js
sbb
mov
pop
mov
imul
out
mov
shlb
lods
cmc
or
lds
inc
mov
arpl
xorl
cmp
sub
dec
nop
fiadds
and
idivb
popf
push
test
idivb
in
call
cmp
incb
fists
mov
and
mov
scas
fidivrs
sbb
mov
mov
push
addb
mov
or
mov
push
jae
fmul
ss
insl
into
add
jmp
cltd
into
mov
idivb
jbe
mov
mov
pop
sub
pop
sbb
pushf
xor
outsb
cmpl
mov
mov
xchg
in
mov
inc
jns
stc
mov
xchg
lret
insb
inc
scas
and
mov
js
out
addr16
pop
push
cld
int3
add
test
jo
and
popa
shll
adc
cmp
nop
out
test
out
test
mov
mov
ret
sbb
mul
pop
pop
xchg
icebp
es
or
cmpsb
stos
frstpm(287
cmc
dec
cmpsb
mov
data16
loope
push
jmp
dec
pop
aas
imul
rolb
outsl
push
mov
dec
lock
cmp
xor
int3
mov
fstps
mov
push
push
or
inc
push
movsb
hlt
mov
out
dec
pop
and
cmp
push
cmp
xor
outsl
cltd
pop
mov
jp
adc
mov
fisttps
mov
test
xor
xchg
jp
mov
mov
insb
xor
xchg
inc
push
mov
xchg
orb
sbb
push
jle
pop
jle
ljmp
popa
dec
out
nop
das
fstpt
mov
pop
mov
mov
fistpll
cld
mov
fcoms
push
push
stc
lahf
cmc
mov
xchg
andl
into
dec
mov
sub
dec
adc
xchg
rolb
lea
jnp
sbb
aam
sub
mov
dec
inc
sahf
xchg
in
mov
cld
push
ss
mov
dec
dec
push
neg
inc
pop
out
in
arpl
and
sbbl
iret
mov
pop
out
push
adc
jl
testb
cltd
cli
icebp
std
push
mov
insl
imul
cmp
das
addr16
sub
sbbb
sub
dec
jge
stc
in
lcall
jge
lds
inc
aam
imul
jne
rcr
mov
cmp
es
shrl
jbe
xchg
lods
insl
out
in
ja
mov
xor
lret
sub
test
lock
call
adc
dec
or
adc
in
xchg
cmpsl
cmpsl
andl
mov
mov
jno
inc
cmp
jbe
xchg
mov
cmpl
lods
push
and
inc
jnp
sbb
out
jp
inc
inc
movsl
fldt
xor
xlat
sub
pop
ljmp
inc
aas
int3
cmp
pushf
inc
scas
or
fnstsw
sarb
jb
repz
push
popa
cmp
pop
jae
es
cmpsl
push
sbb
dec
cmp
outsl
mov
or
push
enter
jmp
inc
add
fidivrl
mov
pushf
pop
orl
das
in
dec
mov
jl
shlb
pop
xor
pop
xor
push
or
push
push
sub
jb
dec
xor
add
xor
jae
sbb
outsb
js
scas
xor
sub
jbe
sbb
and
clc
jmp
clc
loope
in
inc
cmp
add
js
fisttpll
and
fisubs
rorl
sbb
call
cmpsb
cmp
inc
dec
inc
loop
dec
neg
mov
std
les
call
movsl
out
imul
dec
pop
or
iret
and
sub
sub
mov
jnp
mov
ss
pop
jp
mov
ret
aam
mov
sub
mov
pop
js
je
loop
bound
or
je
adc
dec
js
xchg
lods
push
xlat
sub
jmp
inc
cmp
pushf
push
dec
pushf
cmc
jle
adc
jg
mov
sub
jne
pop
scas
cmp
popa
jnp
push
and
dec
dec
xchg
sbb
push
add
ret
inc
fcmove
xor
inc
or
mov
pop
cmp
enter
imul
std
out
dec
jl
test
stc
decl
and
ret
fwait
add
sub
xchg
out
ret
push
jl
lret
cs
in
inc
or
mov
movsw
mov
sub
es
aaa
adc
or
jecxz
push
push
adc
and
pop
test
jle
aaa
jge
mov
inc
ret
sub
cmp
xchg
imul
xchg
lret
mov
das
inc
jno
or
aaa
mov
mov
dec
inc
arpl
movsl
ljmp
pop
lahf
inc
hlt
dec
fwait
cmp
rcr
stc
push
mov
lock
call
add
movsb
push
jbe
mov
or
hlt
mov
sub
dec
scas
push
lods
arpl
outsb
mov
movsl
cmp
movsb
jne
cmp
inc
imul
insb
mov
shlb
push
stos
data16
fwait
and
icebp
dec
sahf
mov
call
push
xor
mov
pop
inc
mov
push
xor
xor
clc
dec
push
into
xchg
pop
fcomip
xchg
rcr
jne
pop
fmul
cmp
cmpsb
call
xchg
iret
xacquire
bnd
in
adc
stos
mov
cmp
dec
das
dec
push
add
aam
hlt
outsb
inc
add
mov
lcall
sbb
vmread
imul
aam
adc
dec
mov
out
dec
inc
imul
add
rolb
xor
mov
mov
dec
xlat
imul
loope
sbb
xor
cmpl
lods
and
jp
sub
push
fdivs
sub
std
cli
sbb
pop
pop
cmp
push
inc
pmaddwd
sbb
dec
sub
cmc
lods
add
data16
les
adc
mov
jle
ljmp
and
xchg
add
adc
in
mov
lods
push
das
fmuls
dec
je
pop
adc
xchg
push
push
inc
mov
in
sbb
popf
jne
insb
test
lds
xchg
adc
jno
in
cmpb
inc
push
xchg
jecxz
dec
popa
insl
outsb
and
push
mov
xchg
rcrb
adc
ss
notl
mov
jge
nop
test
sbb
pop
add
testl
jmp
aaa
xor
loop
stos
sbb
or
pop
sbb
faddl
mov
inc
roll
inc
pop
dec
jb
mov
mov
dec
or
les
xchg
and
mov
jecxz
sub
jge
push
cli
or
fwait
xchg
mov
inc
iret
xchg
popa
pushf
repnz
xor
push
and
outsl
jecxz
and
sbb
cmpsl
mov
roll
mov
mov
fnsave
lret
mov
xchg
jecxz
mov
std
rcpps
mov
fimull
pusha
dec
add
in
stc
xchg
mov
dec
sbb
xchg
aam
and
lret
inc
pop
jmp
jmp
xor
add
inc
aas
clc
pop
fadds
mov
pop
int3
in
mov
mov
mov
es
and
mov
shl
aas
jno
sub
aas
mov
lcall
dec
adc
data16
ss
push
gs
in
loopne
mov
insb
in
mov
cmp
pop
movsb
xor
inc
push
sbb
mov
cmpsl
ds
dec
xlat
movsb
shl
sub
pop
lds
outsl
inc
out
insl
scas
testb
lahf
mov
leave
mov
rclb
xchg
mov
push
aas
cmc
ret
cmpsb
aaa
xchg
rcrl
fcomps
sub
push
icebp
sub
push
add
scas
jno
in
mov
repz
cld
or
dec
add
push
mov
mov
addb
pushf
sbb
shl
mov
or
add
dec
data16
jmp
jo
ja
test
cld
inc
andl
outsb
add
jp
mov
sahf
movsb
add
data16
notb
cmp
cli
idivl
bound
fcom
in
lret
mov
nop
fsubr
pusha
fnstenv
inc
and
in
xor
mov
ret
scas
lea
pusha
push
mov
cwtl
mov
mov
pusha
test
mov
adc
jp
repnz
inc
mov
stc
test
mov
ds
ja
repz
adc
dec
je
das
lcall
rcrl
mov
clc
ret
pusha
lods
popa
shr
les
pop
rcrb
xor
cmc
dec
and
subb
cmp
cmovg
jp
cs
pop
rolb
sub
inc
aam
roll
xor
push
xor
enter
sarl
mov
dec
test
xchg
jle
jecxz
movsb
add
outsb
adc
push
popf
cmp
subb
jns
dec
fs
cmp
or
test
jge
cmp
lret
xchg
pop
in
add
frstor
adc
addr16
arpl
fidivs
jae
lods
out
push
lret
in
lock
fbld
inc
test
iret
fimuls
cmp
push
mov
dec
fidivs
mov
cmpsl
pusha
mov
adc
notl
shlb
in
fildll
jno
fldt
mov
push
aam
jo
and
inc
cs
jbe
imul
shlb
test
jo
lcall
in
xor
or
ret
pop
mov
adc
adc
idivb
xor
pop
and
fisubrs
out
mov
push
and
cltd
mov
sti
mov
inc
push
aam
mov
in
sbbl
lds
ss
inc
xor
adc
cvtpi2ps
mov
loopne
or
cltd
mov
cmp
cmpsl
or
pop
or
lcall
lahf
xor
xor
add
test
pop
les
mov
mov
loope
bound
out
mov
test
fisubs
fists
call
dec
xchg
cltd
fisttpll
in
push
xchg
shr
inc
mulb
fs
push
jmp
int
cmp
iret
mov
aad
nop
jns
xor
mov
jle
rcrl
add
scas
push
and
mov
xor
movsl
add
sti
js
xchg
aas
shlb
stos
lahf
cmpsb
add
cmpsb
xor
adc
out
clc
fwait
inc
mov
cs
dec
cmc
pusha
fcomps
mov
xor
stos
aad
lahf
xchg
out
movsl
sbb
mov
pusha
sub
ljmp
add
sbb
mov
mov
clc
fadds
in
aad
xor
aaa
jnp
fistpll
and
nop
sub
scas
test
popf
lahf
std
mov
loopne
insb
adc
loopne
jge
fldcw
mov
inc
inc
lods
adc
xor
fildl
inc
push
jl
cs
adc
push
out
xchg
sti
rorl
jb
out
cmp
push
adc
dec
stos
outsl
sub
xor
das
fnstsw
xchg
dec
xchg
dec
loopne
sbb
jbe
ret
ss
subl
imul
movsb
enter
inc
sub
icebp
xor
mov
insl
jb
inc
das
add
sbb
cmp
sub
or
mov
xlat
mov
push
test
cli
call
sub
shlb
inc
xor
aad
bound
arpl
js
xchg
ret
push
sarb
hlt
aas
in
clc
inc
jno
call
mov
fcmovb
sub
pop
sahf
aas
pop
cmp
ret
ret
and
imul
sahf
arpl
xchg
mov
divb
fsubs
push
inc
mov
sub
lcall
inc
imul
lret
sbb
jecxz
mov
dec
sbb
int
loope
fsub
mov
and
pop
scas
rcrl
or
mov
repz
sbb
aas
pop
inc
hlt
aas
fbld
pop
insl
push
sbb
out
adc
jno
das
pop
add
ret
mov
lahf
cwtl
push
sub
cmp
jnp
push
in
inc
rcr
fsubrp
jmp
dec
gs
fstl
push
dec
popa
out
dec
mov
repnz
cmpsb
add
jne
pop
sub
xchg
adc
cs
dec
ficomps
dec
ja
out
leave
fcompl
inc
mov
in
stos
fdivrs
stos
and
push
leave
fstpl
sti
fs
mov
inc
cwtl
inc
les
xor
test
fcmovnu
popa
and
dec
popa
cld
in
pop
jle
in
aas
insl
jne
dec
cmc
subl
adc
out
std
mov
test
push
loopne
or
xchg
push
sub
cmp
roll
cwtl
movsl
aam
mov
push
out
lock
pop
push
add
out
add
ffreep
movntps
xor
je
jno
inc
xor
sub
fistps
adc
dec
stc
loope
pop
inc
inc
dec
xchg
mov
dec
jb
into
add
popl
out
insl
sub
aaa
push
dec
pop
mov
test
add
jp
sub
jae
mov
push
sub
cmp
ds
inc
les
xor
sub
loope
negb
sbb
icebp
outsl
lret
mov
mov
fisubl
scas
outsb
adc
aas
and
enterw
rcl
adc
stc
into
sbb
mov
incb
xor
xchg
popa
adc
test
sub
pop
sbb
ds
mov
jl
aaa
icebp
loopne
xchg
sahf
scas
loop
xor
mov
int
jae
jmp
xchg
jns
xchg
imull
aaa
jns
jo
leave
pop
xchg
out
iret
test
hlt
gs
mov
repnz
mov
xchg
orb
loop
cmp
cmpsl
pop
pop
xor
mov
andl
shrl
mov
shlb
xor
cmp
xor
mov
push
jne
or
push
imul
xchg
aas
push
cmp
xlat
xchg
jo
or
jnp
mov
sub
in
mov
arpl
sub
daa
adc
fisttpl
mov
inc
add
push
lds
mov
out
mov
das
xchg
or
mov
or
popa
push
das
call
add
dec
loopne
and
mov
mov
rcrb
push
xchg
inc
mov
mov
sbb
jmp
and
xor
lods
loopne
div
xchg
out
call
mov
sbb
aad
std
adc
sbb
add
xchg
dec
or
mov
out
push
mov
in
push
nop
mov
repnz
dec
xchg
lods
and
incb
bound
jbe
xchg
xchg
mov
sbb
fidivl
fmulp
fcomi
push
arpl
mov
cmp
add
hlt
mov
shr
out
maxps
dec
test
mov
xchg
push
jo
iret
movb
fs
mov
enter
aaa
fwait
movsb
add
sub
adc
sub
loop
ret
cmp
adc
mov
arpl
add
inc
dec
andl
cld
movb
sub
mov
adc
and
jo
sahf
sti
cmp
lret
jo
loope
lret
rcrl
jmp
fistps
ljmp
pop
cmp
decl
add
rclb
jp
mov
mov
push
scas
popf
jne
pop
push
ja
ljmp
pop
aam
dec
pop
xor
fnstcw
mov
daa
mov
inc
mov
and
jmp
dec
inc
repnz
outsl
aas
lret
out
mov
mov
push
insl
cli
jecxz
mov
push
xchg
rclb
cld
xchg
jle
les
cmp
out
mov
mov
std
cmpl
cwtl
push
mov
mov
mov
xor
lcall
test
jno
outsb
fdivrs
xor
xor
push
add
pushf
add
cli
mov
fs
xchg
insl
lods
loop
mov
fcomip
pushf
add
mov
fists
jns
cmc
dec
push
movsb
pop
mov
or
jle
sbbl
dec
ljmp
push
pusha
movsb
repz
arpl
pop
fwait
mov
and
fwait
mov
xlat
mov
mov
js
icebp
or
pushf
subb
or
pop
lret
jg
add
ljmp
push
mov
sbb
scas
int
inc
rcrb
sbb
adc
fldenv
outsb
sub
mov
ss
cmpb
leave
and
adc
mov
push
js
out
sub
pusha
add
push
arpl
fcompl
or
lods
xor
or
mov
loop
mov
cmpb
repz
xor
cmp
addr16
jb
rorl
adc
outsl
pop
inc
arpl
pop
fwait
sbb
popf
divb
pop
xor
insl
stc
xor
scas
lods
nop
incl
idivb
mov
mov
pusha
arpl
add
lret
adc
add
cmp
lret
icebp
mov
andl
js
sti
stos
pop
jns
das
dec
lret
nop
jnp
mov
orb
arpl
mov
push
rcrb
mov
jb
call
and
pusha
sbb
in
add
inc
repz
arpl
in
dec
pop
sahf
roll
and
xor
daa
add
ret
clc
stc
mov
pop
and
test
int
lgs
stc
mov
lods
jecxz
bound
sbb
in
fbld
push
xor
popf
pop
push
inc
cmc
repz
jg
adc
shr
imul
imul
jb
sub
cmpsl
fisttpl
mov
test
test
insl
or
inc
pushf
jnp
fdivs
arpl
jp
xchg
and
pop
js
fldcw
outsb
pop
fcomps
loopne
push
cmp
lods
in
scas
mov
or
pop
adc
xchg
pusha
sahf
repz
and
mov
push
mov
cmpsl
and
xchg
mov
inc
pusha
insl
ret
mov
xlat
or
push
lcall
movsl
testb
stc
test
lea
idivl
mov
in
sub
cmpsl
repnz
or
loope
mov
inc
pushf
lahf
cltd
js
es
add
sbb
adc
mov
sub
xchg
shr
movsb
arpl
ss
bound
mov
add
push
mov
popf
arpl
adc
rorb
sbb
pop
rcrl
loopne
lea
dec
hlt
adc
insb
ret
dec
lock
dec
adc
push
pop
orl
fstl
mov
scas
mov
jmp
lods
in
xor
ljmp
shl
cmp
outsl
and
popf
sti
sub
cmp
jmp
fs
pop
pop
xchg
adc
enter
jnp
popf
cmp
push
xor
add
push
popf
mov
adc
mov
out
enter
gs
adc
jmp
mov
rorl
outsb
or
jl
pusha
notl
xchg
push
fidivrl
in
mov
cwtl
stc
xchg
mov
adc
lret
pop
and
push
mov
xchg
loopne
arpl
and
sbb
test
push
insb
pop
loope
addr16
mov
xchg
cmp
xchg
mov
adc
and
jg
sub
cmp
nop
int3
xor
ret
daa
out
jb
sahf
mov
sub
lahf
mov
hlt
cmp
hlt
cmp
les
aad
cmp
cmpb
sub
xor
mov
push
sbb
outsl
into
scas
mov
pusha
sub
mov
lret
stc
out
add
dec
inc
jnp
push
pop
ret
xor
ja
gs
in
sbb
test
ret
pop
or
xchg
inc
jno
imul
aaa
jns
in
jle,pn
hlt
gs
fnstcw
xchg
stc
insl
add
lcall
popa
mov
and
pushf
inc
sub
mov
add
mov
push
pop
popa
jmp
adc
mov
scas
dec
inc
xchg
das
adc
and
sub
mov
pop
test
or
pop
xor
in
add
roll
shr
imul
je
das
and
imull
nop
sub
jmp
in
dec
push
inc
fmull
pop
add
push
dec
mov
mov
inc
and
mov
imul
xchg
jns
shll
pop
and
dec
ljmp
jg
std
aaa
dec
add
jne
xchg
in
hlt
push
xor
cmp
sbb
adc
call
adcb
clc
push
setg
sbb
mov
inc
xchg
into
out
sbb
sub
fs
mov
psllw
mov
mov
into
add
out
sub
imul
push
mov
adc
xchg
shll
stc
insl
push
xor
test
or
cmp
cltd
aam
mov
pop
xchg
orl
pushf
sahf
xor
mov
inc
addr16
dec
lods
dec
push
gs
and
xchg
jmp
out
sbb
sub
jp
rorl
ret
enter
and
cmp
sbb
xchg
clc
cli
sti
fsubrl
or
in
shlb
pop
sbb
pop
adc
jno
fcmovnu
fidivs
loopne
loopne
cmp
fwait
popa
lar
cmpsl
sti
sub
lret
xor
test
loope
or
xorl
jne
mov
add
dec
cmpl
stos
repnz
cs
mov
sub
xchg
push
lods
mov
adc
cwtl
xchg
js
lcall
out
aaa
sbb
or
mov
mov
rcrb
mov
iret
jbe
sbb
ljmp
mov
daa
in
jmp
sub
jg
and
mov
pop
jmp
outsl
stc
fnstsw
imul
xlat
clc
leave
insl
fsubl
pop
scas
jae
mov
jne
cld
sti
out
ret
movsb
sub
rcrb
repz
cltd
jl
cltd
sub
inc
sub
jle
cltd
into
pop
mov
es
xor
inc
roll
mull
inc
push
mov
add
inc
xchg
sbb
stos
lahf
jnp
jns
rcrl
adc
int3
fimuls
fadd
incl
cld
ljmp
loopne
mov
pop
inc
pop
mov
imul
jns
out
loopne
test
inc
lds
add
gs
ljmp
aaa
pop
or
and
pop
lahf
sub
mov
or
or
out
pop
cmp
repnz
xlat
push
ret
dec
fdivrl
push
jmp
fisubs
fcoms
mov
fsubr
mov
or
mov
mov
movsl
aad
adc
xchg
imul
scas
dec
or
adc
enter
push
push
xchg
adc
cmp
pop
leave
clc
sahf
jg
jl
repnz
push
jl
in
out
pop
int3
jae
arpl
xchg
cmp
lret
jl
cld
repnz
mov
mov
test
mov
insb
xchg
push
shlb
imul
jbe
pop
repz
dec
movsl
cltd
sbb
push
mov
lds
jnp
leave
xchg
int
cmp
pop
and
pop
mov
mov
test
push
cmp
outsb
mov
sahf
test
pusha
sub
ljmp
mov
xchg
add
mov
mov
ja
or
aaa
shll
outsl
and
arpl
mov
dec
iret
sub
pop
xchg
sbb
and
jo
xlat
cmpsb
xor
add
xor
push
scas
ja
mov
test
lcall
inc
inc
pushw
mov
xchg
fwait
cmp
push
in
and
pop
inc
ja
popa
pop
outsb
ds
popa
xchg
std
jmp
inc
in
imul
mov
divb
mov
dec
push
addr16
mov
xor
mov
data16
sbb
icebp
inc
push
xor
xchg
cltd
repnz
xchg
hlt
mov
fdivr
dec
dec
sbb
lea
push
inc
and
ror
scas
fwait
rcrl
cmp
mov
mov
iret
adc
push
out
push
mov
fdivrl
loop
leave
fnsave
sbb
jge
jae
push
xor
pop
xor
mov
fcmove
push
in
bnd
adc
out
inc
je
jmp
lods
xor
xorb
xor
int
or
adc
popa
movsb
xchg
push
cmpl
inc
lods
ss
push
loopne
push
pop
divb
clc
rol
inc
add
push
jg
pop
jae
lods
pop
ja
repnz
fs
and
lods
sti
pop
mov
pop
lret
inc
xchg
inc
daa
cmp
out
xor
data16
or
inc
adc
sbb
push
xchg
pop
setb
push
scas
pop
std
scas
pop
jle
cmp
inc
dec
or
mov
leave
cmp
fidivl
xor
adc
mov
aam
dec
test
push
sub
repz
mov
pusha
xchg
cli
sub
pop
cmp
out
imul
fidivrl
add
push
arpl
pusha
adc
lcall
jns
mov
pop
sub
mov
push
sbb
inc
push
cmp
adcb
mov
push
push
push
adc
push
add
mov
jno
xchg
enter
adc
call
mov
js
and
out
jp
xor
jmp
pop
out
sbb
and
imul
cmpsb
inc
mov
aam
mov
jbe
push
xchg
insl
pop
sar
and
and
xchg
dec
xchg
xchg
fs
cmc
add
mov
cmp
pop
adc
mov
xor
jno
shr
test
sarl
pop
lahf
scas
add
cltd
icebp
or
ds
insb
popa
add
cmp
push
push
inc
adc
push
in
int3
sbbl
lock
je
daa
jae
xor
dec
testb
imul
stos
and
push
mov
ss
mov
in
stos
addr16
adc
cmpsb
mov
dec
mov
nop
xor
mov
mov
mov
mov
push
in
stos
mov
das
aad
cmp
xor
mov
adc
cmpsb
lds
add
cmp
add
jmp
push
mov
ja
cmp
mov
adcb
dec
pop
mov
add
xor
jecxz
cmp
jmp
je
js
fcoml
sub
mov
mov
cmpsl
mov
test
pusha
into
fs
pop
sbb
cmp
mov
js
mov
add
add
lret
push
daa
lcall
sahf
addr16
push
fnsave
arpl
scas
les
pop
dec
ljmp
in
sub
mov
loop
or
push
ja
insl
xchg
sbb
ja
data16
mov
pop
xchg
sahf
andl
pop
int3
jg
adc
popa
test
jg
mov
jns
in
ljmp
int
pop
lret
cmp
push
jmp
pop
fbld
movsb
mov
mov
fstp
push
jge
stos
mov
inc
push
xchg
push
lods
add
adc
jb
lcall
xor
sbb
mov
push
push
dec
in
or
adc
mov
gs
mov
dec
cli
mov
sbbb
sub
jge,pt
xchg
imul
popa
mov
fwait
cltd
outsl
fistl
adc
aam
push
in
daa
jp
sbb
cmc
ficomps
jbe,pn
cmpsl
mov
lods
daa
int
fcmovu
insb
lret
cmp
dec
es
mov
fldl
xchg
popf
loopne
push
mov
frstor
dec
mov
pusha
dec
adc
push
pop
and
sbb
repnz
push
pop
pop
jle
popf
shll
std
sbb
add
and
aad
mov
aad
lock
call
push
xchg
xor
fidivl
cld
fbld
dec
icebp
jbe
jl
addb
mov
test
sbb
aaa
add
bound
pop
add
fs
or
loop
pop
cmp
xchg
mov
add
xor
and
xor
push
rclb
addr16
cmp
inc
ret
xchg
or
shlb
push
or
pushl
xor
imul
pusha
lret
fsts
cmpsb
outsl
dec
les
lods
jl
sahf
enter
insl
mov
jl
sub
test
adcb
cmp
dec
dec
ror
dec
cmp
loop
nop
shll
xor
inc
or
insb
inc
add
sar
mov
movsl
jo
xchg
jp
pop
stc
and
imul
mov
aas
cltd
jns
nop
inc
push
sbb
mov
lret
insl
js
lret
and
aam
sub
jge
jmp
or
sbb
xlat
enter
stos
and
jge
pop
rcr
testb
iret
ss
ret
lret
cli
shlb
xor
xchg
cmpl
shrb
xor
pop
pop
insb
xor
jmp
mov
mov
cmp
sahf
and
mov
mov
ljmp
jp
xchg
jo
pusha
mov
xor
shlb
in
imul
rorb
repz
cmp
inc
mov
adc
int
push
in
aas
dec
les
idivb
xor
test
imul
in
add
lds
gs
aam
adc
mov
mov
inc
pop
mov
imul
xor
mov
mov
or
fbstp
pop
jne
adc
outsl
and
loop
fs
sub
push
into
pop
dec
in
out
mov
mov
and
outsl
ss
sub
pop
out
dec
scas
mov
mov
mov
jle
sub
test
inc
push
das
pop
and
dec
cmp
cmp
mov
pop
lcall
clc
mov
test
fwait
insb
sbb
stos
pop
mov
aad
sbb
add
mov
idivb
loope
addr16
sbb
ljmp
cmpsl
jg
shlb
in
jnp
cmpsl
adc
sub
movsb
push
addb
stos
xchg
call
add
lods
roll
push
dec
leave
fadds
push
pop
pop
lea
add
dec
push
inc
pop
xor
dec
mov
mov
xor
and
rcr
icebp
sbb
mov
mov
xor
mov
sub
cmc
mov
scas
pop
icebp
pop
dec
ja
pop
shlb
das
inc
xorb
adc
cmpsl
jbe
cmc
aam
dec
loopne
fcomps
idiv
ficompl
stos
adc
adc
push
insl
jne
cmpsb
xor
push
popf
aad
addr16
pop
add
into
sbb
outsl
in
xchg
nop
ficomps
mov
js
popa
xor
in
fwait
out
jne
mov
cmpsb
clc
mov
ds
scas
stos
popa
push
xchg
dec
out
pop
add
in
mov
adc
cmpsl
jl
jmp
mov
call
inc
mov
mov
hlt
outsl
in
jge
int
and
sub
sbb
iret
arpl
rcpps
mov
das
jmp
jp
mov
nop
out
in
jbe
cmovnp
dec
inc
cmp
pop
stos
adc
cwtl
xor
xchg
mov
mov
stc
sub
sbb
sbb
cli
adc
jae
dec
or
add
cmp
pop
call
outsl
ss
and
cmc
outsl
aam
mov
imul
aaa
add
and
jmp
push
repnz
sbb
jg
mov
stos
push
jp
mov
jno
and
dec
cs
ret
lock
lds
dec
nop
aad
shlb
stos
lds
push
dec
fbld
pop
xor
jnp,pn
xchg
mulb
inc
inc
push
repz
push
aad
les
inc
in
add
gs
jg
mov
or
out
nop
cmp
mov
sub
stos
dec
les
aam
dec
jae
insb
inc
push
fidivs
push
in
mov
or
dec
lea
idiv
mov
mov
int3
mov
mov
subl
mov
push
jg
jb
jne
or
dec
and
sub
pushf
and
inc
xor
cli
lahf
push
sbb
scas
inc
andb
out
inc
push
xor
scas
xor
sti
enter
sbb
imul
xor
mov
cld
fbstp
xor
pop
inc
push
xchg
out
fsubl
mov
icebp
repz
dec
xchg
or
pop
push
daa
out
mov
xlat
cli
test
stos
imul
sbb
add
jge
jb
cmp
shll
test
jns
mov
and
mov
rol
or
sub
add
or
sub
push
outsb
std
dec
aam
outsb
mov
scas
bnd
repnz
inc
pusha
cmpsb
mov
int3
jbe
pushf
sbbb
inc
add
mov
mov
lcall
shr
add
mov
scas
inc
aad
mov
cwtl
in
out
daa
or
repnz
repnz
shll
insl
push
fdivrs
mov
cs
jle
add
push
leave
jo
fsubrs
pop
adc
fxch
sarl
jle
cmc
lock
or
les
lret
sbb
std
bound
cld
adc
test
inc
jae
loopne
in
jb
gs
pop
cmpsl
cmpsb
push
mul
ds
mov
jecxz
push
mov
mov
mov
lret
outsl
stc
mov
cmp
xlat
inc
mov
xor
jns
fwait
in
push
cltd
rep
sub
mov
rolb
push
adc
mov
push
enter
mov
sbb
jle
movsl
xor
mov
push
mov
test
lcall
daa
mov
sbb
lods
jl
out
jg
push
shl
roll
lods
dec
mov
loopne
add
inc
sub
cmp
mov
in
adc
aaa
loopne
inc
mov
test
mov
cmp
and
lret
out
pop
xchg
lret
jmp
or
lods
xchg
or
lcall
vpsubd
cmp
ljmp
movb
mov
fcoml
or
xor
xor
lcall
mov
cwtl
and
dec
xchg
cld
movl
cmp
adc
insb
out
or
or
pop
lahf
insl
xor
divl
jo
jge
mov
jbe
sub
ret
call
sub
sbb
aam
pxor
jae
xchg
inc
jmp
roll
xchg
adc
in
out
test
sbb
mov
sarb
iret
mov
xchg
and
test
pop
mov
movsb
dec
push
jmp
in
sbb
bound
es
push
xchg
hlt
push
cmp
loope
pop
and
adc
push
lea
sti
jne
test
lret
cmp
mov
std
and
fwait
and
pusha
std
xchg
or
push
leave
add
ret
int3
popf
xorl
jae
addr16
cmp
xor
ret
or
loopne
push
movsl
fwait
aas
lods
fs
push
in
es
ja
je
dec
mov
mov
or
push
inc
xchg
or
jmp
push
out
and
mov
in
sub
sti
xchg
int
or
js
jo
mov
imulb
loope
or
xchg
mov
sub
mov
or
or
xchg
pop
mov
hlt
dec
xchg
jno
fstpl
dec
dec
jbe
fistl
cmp
outsl
scas
out
mov
test
daa
test
ljmp
pop
xor
loope
roll
aas
mov
test
fsubrl
inc
mov
jle
jno
mov
pop
iret
and
std
cmc
ficompl
call
rcll
ret
push
or
push
xchg
adc
xor
incw
mov
pop
mov
ret
test
out
insb
addr16
in
mov
cld
subb
jbe
and
lcall
mov
movzbl
das
inc
fmull
cltd
mov
in
add
fcoms
jp
dec
mov
cmp
mov
xchg
ss
add
jge
adc
ret
sbb
mov
shll
insl
add
push
sub
shl
rol
xchg
aaa
add
ss
int
adc
shrl
out
jno
mov
dec
inc
xor
in
mov
invd
sbb
out
flds
popa
xchg
int3
add
data16
cmpsl
cmp
outsb
stc
arpl
push
test
jle
sub
fdivrl
ret
pop
xor
ficoml
mov
negb
sub
jmp
mov
jp
sbb
bound
mov
aaa
jb
mov
jmp
and
push
mov
xchg
inc
sbb
mov
test
loope
jae
repz
jns
popa
adc
push
xchg
mov
fcmovne
mov
test
ret
push
mov
es
lahf
scas
int
hlt
sub
mov
mov
jb
xor
cli
mov
dec
test
enter
negl
fdivs
ljmp
aad
lret
add
adc
and
int3
jmp
push
push
mov
fmul
pop
notb
repz
loope
push
xchg
xchg
mov
out
ss
out
pop
aas
mov
test
jl
cwtl
xchg
jmp
mov
sub
fiaddl
sbb
mov
xchg
stos
dec
rclb
icebp
push
pop
mov
mov
lods
sbb
loopne
sbb
jecxz
mov
mov
mov
xlat
mov
mov
mov
adc
cmpsl
movsl
inc
insb
lret
lret
inc
rcr
call
cmp
dec
fmull
test
jge
mov
sub
push
cwtl
jns
and
lock
mov
push
sbb
push
mov
cmp
push
test
pushf
inc
popf
sbb
mulb
aad
jge
or
mov
mov
ljmp
xchg
rcl
inc
icebp
pusha
fs
dec
clc
cmp
lret
repnz
mov
sahf
iret
pop
test
ja
mov
data16
mov
dec
pop
dec
es
jnp
inc
inc
dec
repnz
xchg
repz
and
in
push
rorl
popa
es
inc
inc
push
pop
into
push
pop
enter
js
insl
adc
adc
mov
jmp
ret
jne
dec
jae
add
xchg
inc
jl
sub
jmp
in
or
ss
js
cmp
dec
dec
mov
arpl
cmpsl
lods
push
mov
jae
push
pop
adc
add
xor
push
xchg
inc
xor
push
dec
adc
inc
rcrl
cmp
mov
or
lea
and
or
test
lods
jg
add
inc
nop
js
shl
add
fdivrs
adc
movsl
cmpsl
adc
sahf
paddb
int3
imul
adc
lcall
xor
sbb
popa
mov
adc
icebp
loop
repnz
filds
cltd
clc
movsb
xor
pop
cmc
cmp
repz
dec
fldl
scas
in
out
int
mov
mov
sbb
add
lcall
nop
fwait
xchg
mov
std
push
das
mov
mov
push
cmpsl
inc
mov
test
jb
xchg
dec
mov
mov
jl
pusha
pop
mov
dec
adc
or
faddl
lea
dec
insl
mov
adc
enter
and
mov
sti
push
addl
sub
lea
pop
mov
aad
imul
ss
jne
mov
lock
iret
cmp
cmp
dec
jae
jo
stos
xorb
fidivs
inc
addb
lahf
cltd
sub
adc
or
out
push
jmp
xlat
repz
movsl
ljmp
pusha
rcl
cmpsb
incb
add
cmpsb
sti
enter
pop
loopne
push
add
push
push
and
cld
sbb
sub
mov
jbe
push
pop
inc
nop
lret
clc
adcl
xlat
outsb
test
add
xor
adc
jl
xchg
jb
imulb
sbb
unpcklps
xor
pop
rcrb
pop
adc
mov
rcrb
cmpsb
pop
and
push
inc
mov
jno
push
bound
lods
push
lods
jle
mov
pop
pop
mov
mov
inc
mov
adc
cmpsb
sahf
inc
call
lahf
in
into
fildll
in
xor
cmpsl
mov
push
inc
jns
inc
ficompl
xchg
dec
fisttpl
shll
test
inc
lret
or
movsl
jne
lock
jmp
call
sub
add
lret
sub
shlb
sbb
lret
popa
jno
xchg
dec
cmc
or
xchg
js
mov
leave
inc
cmc
pop
push
sbb
mov
jne
or
pop
clc
jg
sub
imul
jle
in
mov
adc
int3
xchg
movsb
dec
imul
pop
stc
and
stos
std
fildll
add
lahf
add
mov
jo
xchg
loop
cmp
add
inc
mov
es
sahf
or
dec
pop
dec
sbb
push
enter
movsb
mov
notl
pop
mov
xchg
movsl
xchg
sub
sub
mov
jge
int
cmp
ja
repz
lds
mov
scas
lds
out
inc
mov
je
mov
insb
add
jge
lahf
sub
movsb
sahf
push
adc
mov
mov
jp
in
jmp
mov
outsl
ficoml
sbb
inc
imul
imul
or
in
sub
mov
push
pop
mov
mov
xor
xchg
jge
test
jecxz
and
in
mov
inc
lock
shrb
insl
inc
dec
clc
or
inc
adc
lock
scas
or
daa
cmc
daa
lcall
adc
popf
out
push
aas
outsb
add
gs
negl
cmp
nop
xlat
adc
ds
ja
int
dec
dec
sbb
lds
mov
ss
xor
cmpsb
stos
push
es
jmp
movsb
cltd
inc
ds
add
fcmovu
adc
push
insb
adc
pop
cmp
sbb
cmp
adc
mov
jmp
cwtl
adc
aaa
mov
and
mov
push
mov
and
fisubl
stos
icebp
shll
loopne
orl
iret
cli
cmp
sub
xor
jmp
clc
out
mov
into
inc
inc
inc
lds
cmp
xchg
cmp
jl
or
int3
cmp
outsl
loop
lret
and
cld
push
xchg
mov
jl
pop
sub
mov
fisttpl
mov
fbstp
mov
roll
mov
pop
jne
addr16
xchg
add
mov
or
mov
scas
aam
sarb
ss
aam
cmp
stc
mov
mov
adc
jne
jl
in
xchg
pop
dec
mov
xor
lret
and
push
int
add
les
js
jg
adc
ljmp
filds
loope
orl
cld
push
jl
and
jle
dec
enter
cmp
mov
inc
push
test
dec
jg
pushf
sbb
ficoms
test
scas
push
into
add
ret
nop
sub
cmpsl
pop
sub
jbe
pop
ret
jae
jne
cld
shlb
inc
bound
aaa
insl
sahf
pop
mov
loopne
adc
out
test
movsb
xor
sub
out
jle
xchg
addr16
stos
xor
or
popa
or
rcrl
push
and
xchg
pop
xor
iret
push
je
out
je
repz
adc
jae
cld
cld
mov
mov
lock
rorb
fsubrs
not
loop
xchg
fstl
lret
scas
pavgb
daa
je
mov
test
push
jmp
ss
int3
push
dec
sbb
jns
test
cld
inc
std
pop
js
aaa
jns
insl
xor
sbb
cs
push
hlt
aaa
dec
rolb
pop
or
fists
ja
into
and
dec
fxch
arpl
inc
jne
stos
call
fs
insb
cld
fsubr
pusha
mov
sbb
pop
stc
mov
rol
lds
out
add
scas
fucom
xchg
or
ret
scas
adc
pop
les
xchg
leave
cmp
ret
fsubl
addr16
push
push
imul
sub
sahf
roll
inc
xchg
or
push
and
shr
divl
pusha
stos
or
into
stc
mov
lods
pop
cld
push
inc
cmp
add
loopne
pop
mov
es
cli
and
mov
jecxz
jp
mov
adcl
sub
inc
xchg
push
rolb
pop
jmp
mov
outsb
sbb
push
lcall
dec
xor
xchg
mov
or
into
xchg
or
cmp
gs
push
sbb
lret
pop
inc
cli
cltd
cmp
pop
dec
mov
jb
adc
xor
int
outsb
push
fldl
jp
ds
movaps
sub
xor
into
or
dec
mov
mov
cltd
loopne
mov
push
sbb
add
andb
into
jl
aaa
sub
sbb
test
imulb
out
sti
cmp
loopne
pop
xlat
mov
cmp
fmul
pop
ja
ja
mov
pushf
movsl
inc
std
aam
ret
fidivs
fsubrl
pop
push
repz
lea
ret
icebp
adc
dec
xor
lret
dec
cmpsb
aaa
shl
fstpl
xor
mov
sbb
mov
xchg
jmp
in
scas
aaa
inc
push
dec
ds
aad
mov
cmc
lahf
inc
mov
and
lods
aad
mov
xor
sub
inc
outsb
cmp
dec
sub
jg
sbb
jge
arpl
adc
out
push
cltd
sbb
push
add
sub
pop
pushf
sub
pop
mov
xor
and
mov
cs
scas
repnz
jbe
out
jb
movsl
fucomi
dec
shlb
stos
ret
xor
jg
dec
pop
lock
and
ss
loopne
cmpsb
arpl
lods
out
clc
test
insl
sbb
aam
in
aas
test
fistl
pop
push
ret
outsb
stc
jp
jbe
push
jecxz
xor
dec
out
push
cwtl
movsl
cmpsl
and
sbb
cs
pop
nop
fs
add
mov
je
in
out
jmp
dec
dec
fwait
cmp
mov
int3
scas
sub
rorb
and
mov
cwtl
and
inc
mov
hlt
fs
xchg
in
or
icebp
or
fiaddl
jl
icebp
dec
push
loope
cmc
sbb
cmp
adc
pop
or
rorl
adcl
inc
lret
push
push
xchg
mov
in
mov
mov
movsb
mov
jl
xor
in
sti
sti
jae
popa
testb
gs
mov
and
ljmp
addr16
lock
mov
dec
jae
inc
loop
or
addr16
pop
mov
add
mov
adc
mov
lock
cmp
mov
ja
lods
movsl
pop
and
int3
sbb
pop
insb
xchg
jg
into
sub
sub
sbb
cs
and
sbb
and
addl
sub
sub
and
pop
sub
xor
ljmp
add
lods
fldcw
mov
aad
lock
dec
pop
cmp
and
cmp
inc
popf
mov
fistl
and
insl
sbbl
cmp
iret
fwait
dec
adc
rcrl
add
sub
mov
fcmovnbe
bound
es
fstl
dec
mov
lods
inc
addl
adc
js
jp
fwait
lret
mov
jbe
mov
mov
jp
push
lcall
add
inc
imul
or
inc
mov
lret
sbb
push
dec
push
mov
jg
lods
push
xchg
or
jg
xchg
jbe
push
jae
js
data16
adc
or
test
dec
and
cmp
out
mov
sbb
lret
scas
jnp
sti
pop
cld
cwtl
dec
add
stos
sbb
fsts
aas
loop
lea
outsb
outsb
adc
xchg
adcb
push
push
jge
sub
or
xor
cltd
cmpsb
insl
or
or
shlb
mov
or
sbb
or
loop
or
movsl
and
mov
push
rorl
sbb
fadds
aam
cmpsb
xor
jge
cmp
pop
stos
inc
shrl
push
mov
mov
and
sahf
lcall
sahf
ss
movsl
add
mov
xchg
in
push
mov
lret
aad
sbb
stos
out
sbb
xor
mov
repnz
sub
or
inc
ja
inc
test
das
mov
dec
fs
push
push
lret
ret
iret
pusha
cmp
push
and
cld
push
xor
into
data16
jns
inc
inc
dec
addr16
cmc
or
stos
pop
mov
inc
out
shll
nop
jecxz
inc
sbb
leave
in
and
fsts
jae
movsl
ja
popa
sbb
out
xchg
aas
sub
sub
pop
jmp
pop
xchg
adc
pushf
fcmovb
xlat
enter
pop
cmp
pop
inc
mov
jo
mov
int3
xlat
cwtl
pop
sbb
sub
pop
and
pop
aas
push
or
or
sbb
jmp
ljmp
in
mov
mov
pop
enter
xor
dec
xchg
sti
cmpsl
lock
shll
int3
inc
sbb
adc
sub
and
sub
inc
shlb
insb
outsl
jecxz
test
loopne
pop
lcall
and
and
jb
shll
xchg
mov
and
xlat
outsb
loopne
cwtl
sub
mov
mov
fidivl
mov
xchg
adc
mov
dec
xchg
cmpsb
ret
les
outsl
or
lods
mov
addr16
lret
jg
pop
push
xchg
or
adc
and
mov
divb
mov
bound
xchg
aaa
mov
lcall
into
mov
les
xchg
and
xchg
jge
imul
dec
pop
repz
inc
test
inc
mov
icebp
testb
jmp
in
in
dec
cmp
mov
pop
mov
lea
jae
sub
enter
aas
bound
add
out
mov
pop
mov
data16
or
sahf
push
into
pusha
test
fnsave
cmp
lods
and
mov
arpl
jo
push
inc
inc
shrl
jno
rorl
rcll
cmp
pop
stos
mov
xor
sub
push
aam
xchg
add
lods
xlat
jl
add
lret
lret
mov
inc
aad
xor
push
leave
imul
fistps
in
add
jg
nop
push
adc
popf
lods
stc
outsl
adc
push
push
xchg
add
stos
mov
sub
loopne
inc
loop
xchg
lock
adc
mov
js
fcomip
data16
mov
pop
sbb
and
fwait
inc
fmull
aaa
push
add
dec
js
pop
mov
dec
or
xor
adc
cmc
pop
inc
mov
ror
sub
cs
ljmp
jne
sbb
aaa
sti
sbb
in
in
lea
movsl
mov
ffreep
jae
test
rorl
fwait
or
fildll
adc
into
ffreep
subps
mov
pop
jmp
mov
jmp
daa
push
push
dec
mov
ret
mov
aam
jmp
inc
aam
stos
outsl
sti
movaps
les
inc
fbstp
out
idivl
cmp
andl
push
insb
dec
dec
hlt
shlb
inc
mov
fwait
jno
push
stc
or
mov
mov
nop
and
xor
aas
ljmp
into
pop
pop
mov
mov
jmp
int3
pop
or
push
in
push
aas
mov
and
jae
push
shrl
lahf
dec
xchg
dec
cmp
fwait
push
cmp
subl
ja
insl
testb
pusha
iret
das
lds
cmp
test
pop
xchg
in
test
cld
mov
loop
xchg
mov
xor
push
adc
push
push
inc
fcomip
movsl
les
inc
insl
les
jmp
push
jb
add
ja
popa
int
outsl
shll
sub
sahf
arpl
ror
daa
pop
addr16
add
sub
xchg
call
mov
stos
sbb
dec
dec
mov
lea
xchg
mov
lods
addr16
add
mov
in
rolb
imul
mov
xorl
idivl
and
pop
pusha
call
fistl
pop
jae
sbb
int3
xlat
cmpb
xchg
je
scas
pop
lret
mov
loop
push
nop
and
scas
jb
iret
sub
cltd
cmp
sub
iret
pop
jnp
cld
ret
adc
lods
or
movsl
sub
dec
or
pop
mov
add
loopne
and
test
or
bound
mov
stos
mov
fwait
mov
add
add
push
push
jecxz
inc
add
jno
scas
pop
push
rorl
jno
dec
imull
xor
adc
in
push
cmp
add
jne
pop
xor
mov
negb
sub
pop
test
fadd
adc
pop
xchg
test
popa
ja
push
movsb
mov
jmp
test
dec
dec
adc
push
icebp
jns
mov
add
cmc
push
imul
jnp
pop
dec
push
push
mov
lcall
loopne
dec
jle
shlb
xchg
mov
das
clc
mov
fisubrl
mov
sub
ss
fwait
and
inc
in
and
mov
into
or
insl
mov
loopne
cmp
pop
mov
fcoml
loop
and
iret
stc
insb
pop
shl
daa
and
das
data16
push
jmp
xor
fwait
cmpsb
jbe
mov
xchg
mov
mov
lock
sub
pop
std
mov
nop
cmp
xchg
test
cmp
dec
add
ja
push
popa
jle
add
sti
and
push
jo
adc
dec
test
pop
call
bound
inc
movsl
xchg
dec
sbb
pop
iret
sti
lcall
mov
pop
movsl
add
decb
jl
ja
xor
pop
icebp
aam
mov
stos
in
ret
jns
aaa
arpl
jne
mov
filds
in
mov
out
test
testb
pop
scas
movsb
mov
outsb
pop
lahf
in
ret
lcall
jge
das
shrl
add
xor
add
insl
clc
xchg
push
jns
in
xchg
add
fldenv
adc
inc
adc
pop
mov
ror
sahf
or
in
xchg
lret
ret
jb
fs
and
scas
lret
add
inc
daa
inc
add
mov
pop
rcrb
das
cs
jge
or
out
xor
test
scas
imul
incl
div
pop
call
psrad
mov
lcall
and
stos
test
sbb
jno
test
pop
jno
xor
fistl
insb
pop
into
lods
sub
sbbl
dec
sub
sar
arpl
imul
ret
test
cmpsl
call
aad
lods
test
and
ret
mov
adc
and
icebp
dec
mov
ljmp
dec
fadd
ja
dec
dec
cmpsl
mov
cmp
mov
inc
test
add
data16
cli
mov
shl
push
xlat
jmp
aad
xor
imul
add
mov
aas
pop
shrl
gs
ss
iret
xchg
add
sub
jae
lahf
repnz
xchg
repz
add
cmp
int
cmp
and
out
test
sbb
je
test
es
or
and
mov
or
stos
and
jbe
jmp
icebp
or
push
push
or
in
xchg
es
leave
aam
xlat
cmp
into
icebp
cwtl
xchg
decl
push
notb
sub
mov
and
xchg
mov
lea
bound
cmp
icebp
popf
insl
mov
xchg
jp
mov
add
cmp
cmp
fwait
cwtl
jg
mov
jae
addr16
shlb
dec
sbb
mov
push
hlt
dec
lods
jl
and
je
xor
pop
mov
psrlw
jae
push
dec
dec
cmp
push
dec
mov
inc
in
sbb
sti
stos
lock
lods
nop
mov
xchg
push
add
in
pop
dec
xor
sub
jmp
inc
mov
cltd
out
dec
pusha
into
lret
inc
mov
test
and
mov
into
ljmp
fcmovnbe
jmp
sub
xlat
add
jno
cwtl
das
mov
hlt
sbb
mov
shlb
pop
jae
sub
int3
loop
mov
inc
sub
scas
enter
dec
aas
xchg
dec
cmp
cld
inc
subb
cmc
fistpl
orb
enter
pusha
cmp
jbe
fisubs
jb
clc
or
mov
arpl
adc
in
xchg
les
push
add
ljmp
inc
fimuls
dec
cmp
fcomip
in
and
lods
sub
xchg
gs
cwtl
mov
test
jecxz
std
xor
aaa
inc
pop
loopne
push
add
mov
daa
jmp
in
jg
jns
xchg
mov
fisttps
outsb
cmp
fbstp
jne
sti
and
mov
rolb
jbe
xchg
push
cmovbe
jae
lcall
iret
fs
xchg
adc
xchg
inc
in
xchg
mov
arpl
shlb
gs
xchg
into
orb
pop
mov
repnz
insb
aam
and
sub
add
dec
fld
sub
inc
adc
xlat
push
cmc
fldenv
pop
lea
jmp
stc
add
xchg
mov
mov
lret
mov
xorl
push
lcall
sub
outsl
pop
jmp
jbe
sub
lret
push
pop
fadd
jecxz
push
mov
inc
dec
xchg
scas
push
mov
cld
lods
cld
out
leave
addb
ficompl
out
push
push
test
adc
sub
ja
push
jp
gs
pusha
sub
shl
icebp
andl
stc
cmp
loop
or
push
je
incb
or
mov
imul
inc
fildl
add
dec
scas
inc
iret
jg
xchg
popf
pop
dec
push
sbb
mov
insb
jle
in
and
clc
pop
rclb
in
lods
push
pusha
lea
lea
jecxz
fcomi
or
inc
push
sub
sbb
add
push
lods
lret
stos
sbb
push
lret
dec
das
out
stos
pop
push
cli
ds
push
inc
push
and
movsb
xchg
stc
mov
inc
push
push
mov
icebp
ljmp
shlb
mov
mov
jne
adc
pop
mov
push
mov
pop
es
test
mov
pop
cmp
push
jle
pop
sahf
daa
and
push
or
jae
cwtl
cltd
loope
daa
sbb
cmpsl
stos
add
daa
push
mov
or
loopne
xchg
adc
push
xor
fistpl
mov
sub
jmp
arpl
je
lods
or
sbb
mov
jns
mov
xor
mov
insl
or
mov
addr16
pop
ss
or
loop
in
lret
out
aas
adc
ljmp
xchg
pop
push
xorl
mov
cmp
inc
mov
jae
in
mov
mov
mov
shr
in
ror
lds
int
and
and
add
mov
std
popf
or
lods
and
push
aad
mov
mov
addr16
mov
jmp
add
push
xchg
jge
mov
pop
cmpsl
cmp
fistps
outsl
add
into
inc
pop
pop
mov
or
lods
das
test
cmc
jle
add
adc
sbb
jb
and
push
movsl
and
dec
push
lods
xchg
sub
and
dec
scas
out
or
test
and
add
lods
cmpsl
mov
imul
roll
mov
jle
das
lea
xchg
pop
push
xor
aam
dec
imul
add
inc
inc
adcl
aaa
mov
push
mov
cmp
xchg
int3
out
lds
cmp
cli
movsl
push
jecxz
or
xchg
std
and
or
dec
std
sub
ja
imul
fldcw
in
mov
push
mov
lods
adc
aas
cli
mov
or
dec
inc
leave
cld
inc
mov
dec
cs
lods
fdivr
pushf
push
hlt
mov
ror
mov
rolb
das
jge
fdivr
pop
pop
pop
cld
jecxz
js
dec
push
inc
jmp
add
adcb
scas
mov
out
dec
lock
adc
mov
cmpb
pushf
mov
pop
movsl
call
pop
mov
xchg
lret
xchg
add
lahf
adc
mov
bound
orl
subb
xchg
fs
pop
push
cmp
mov
inc
int
xor
not
outsl
xchg
dec
inc
dec
filds
ljmp
jp
inc
push
ds
mov
push
add
sub
mov
push
mov
aam
ja
mov
inc
scas
cmp
mov
dec
xchg
xor
push
pushf
fs
push
lret
mov
imull
mov
sub
or
add
adc
mov
jne
in
or
std
and
mov
cmpb
dec
adc
jnp
out
mov
inc
cmp
xlat
mov
mov
add
inc
into
pop
jg
stos
idivl
call
dec
adcb
in
sbb
sarb
push
pop
push
stc
and
add
dec
or
imul
and
jp
loopne
arpl
push
lahf
popf
push
push
jb
cli
sbb
insb
aas
out
dec
imul
inc
dec
idivl
loopne
pop
jmp
dec
mov
xchg
les
bound
fstpt
leave
ret
dec
xorl
jb
sahf
jecxz
mov
or
xchg
into
xchg
aad
dec
ja
repnz
iret
mov
mov
adc
xchg
pop
notb
sub
iret
adc
gs
mov
jp
xchg
jb
and
addr16
jmp
push
cmp
mov
add
pop
outsb
pop
sbb
mov
mov
outsl
dec
xor
cmp
xor
mov
xchg
cmc
dec
insl
lods
cmp
inc
push
sti
idivl
mov
or
sbb
xor
jno
bound
fildll
in
inc
das
ljmp
shrl
out
mov
lret
mov
repz
idivb
push
jae
aad
cmp
mov
xor
xchg
inc
xor
repz
adc
aaa
push
lcall
into
mov
cld
adc
lea
inc
xor
incl
ja
mov
jmp
ja
pop
mov
pop
mov
inc
nop
movsl
dec
inc
mov
rorl
jge
scas
pop
xchg
in
arpl
outsl
pop
dec
daa
mov
push
lret
xchg
pop
dec
mov
cltd
nop
fsub
test
and
or
mov
gs
int
xchg
sbb
push
int3
stos
negl
je
xchg
pop
fstps
add
mov
push
dec
and
xchg
mov
gs
lods
mov
in
jl
arpl
aaa
ret
lods
mov
add
push
and
gs
cli
pushf
dec
push
sbb
fs
add
fs
xchg
out
cmp
jbe
adc
aad
sub
mov
push
cmp
jno
mov
xor
inc
and
mov
xor
aaa
sbb
xchg
call
and
clc
mov
ja
insb
add
pop
mov
icebp
xchg
fs
in
push
ljmp
xor
xchg
add
and
pop
orb
mov
call
dec
cmpsb
push
bound
sbb
lds
mov
mov
mov
lahf
cltd
lahf
jle
pop
in
movsl
ja
sub
dec
sbb
aaa
shl
sbb
push
adc
icebp
pop
mov
mov
jle
adc
stos
mov
pop
xor
fcoms
mov
inc
call
movsl
sarb
mov
adc
mov
leave
mov
jo
or
xchg
lret
fisttpl
imul
jns
cmp
call
pushf
lret
das
pop
lahf
or
mov
test
push
sbb
je
or
push
ja
xchg
pusha
xchg
shll
xor
mov
rolb
cmp
xchg
add
fwait
ja
add
outsb
popa
loopne
mov
xor
pushl
mov
imul
stc
insb
frstor
push
push
addr16
dec
mov
std
push
add
aas
pop
xor
inc
push
das
and
in
push
lods
sbb
mov
sti
ret
test
push
shll
xchg
pushf
in
pop
out
xchg
js
cmp
dec
cmc
jle
cmp
sub
sbb
xlat
jno
loope
addr16
ret
test
popf
sbb
pushf
or
mov
sbb
outsl
int
lock
ds
cmpb
lods
movsb
pusha
arpl
mov
inc
push
inc
pop
jbe
mov
inc
js
add
test
int3
sbb
push
int
arpl
push
in
mov
pop
loope
sub
lods
mov
jmp
xor
dec
cmp
cld
addr16
push
cmp
fcompl
shrb
jno
pushw
pop
add
mov
fldcw
dec
fsubrs
les
insl
mov
mov
pusha
dec
int
adc
std
icebp
and
es
cmp
or
imul
cmp
js
les
clc
push
lock
and
nop
jns
shl
xlat
outsl
loop
jno
xor
repnz
sub
lret
inc
test
dec
adc
inc
push
jle
aad
jb
in
or
or
repz
or
inc
jbe
fsubrs
add
dec
scas
push
pop
sub
inc
inc
push
xor
adcl
xor
cmc
xchg
arpl
pushl
inc
cli
pop
sbb
lock
daa
push
xor
test
dec
loope
mov
ja
adc
mov
lods
inc
jnp
adc
fwait
and
inc
das
dec
mov
loop
popa
add
subb
mov
add
stc
cmp
adc
dec
test
sbb
mov
scas
inc
jo
jle
mov
cmpsl
int
mov
mov
jle
shlb
mulb
or
adc
in
push
nopl
xchg
outsb
jnp
xor
loopne
adc
test
jg
add
icebp
loope
test
cmp
xor
mov
cmp
aam
dec
mov
xchg
lods
sub
pop
xchg
push
hlt
add
shlb
dec
inc
add
ret
dec
imulb
push
push
add
jbe
cmp
and
add
pop
in
addr16
ja
int3
test
outsb
xchg
std
dec
xchg
lret
sub
adc
in
mov
jbe
jo
jno
or
addr16
or
pushf
ja
xor
hlt
test
mov
jb
clc
cmpsb
je
push
mov
xor
and
aad
xchg
inc
cmc
cwtl
xlat
in
pushf
jns
and
sbb
push
dec
lods
add
movsl
jnp
dec
andl
push
not
or
fmull
inc
xchg
dec
rorl
pop
xchg
or
fdivrs
fwait
imul
xor
popa
cmp
pop
dec
sarb
es
add
jbe
xor
push
js
popf
lret
test
test
inc
xchg
add
or
aaa
cmp
call
xor
out
mov
in
out
orl
testl
aas
aas
xlat
inc
mov
mov
jno
or
push
imul
cld
sahf
mov
imul
mov
js
clc
aaa
pop
cmpb
cli
xor
dec
das
sub
les
mov
sbb
pop
dec
pop
or
xor
out
sbb
xor
and
xor
sbb
fwait
mov
ds
xor
ja
pop
sbb
add
repnz
mov
faddl
lahf
jge
mov
rorb
sbb
dec
ds
sahf
lock
repz
mov
ret
adc
xchg
cmp
flds
add
sbb
gs
pusha
dec
dec
lock
sarb
mov
cmp
aam
fdivrs
sbb
jle
cmp
sub
call
fisubrl
sub
out
pop
lea
mov
iret
xor
fiaddl
ja
and
test
cld
push
pop
and
push
pushf
lds
xorl
push
inc
push
ret
popf
loope
or
mov
adc
es
push
jl
movsl
jecxz
movsl
fcoms
gs
adcl
inc
mov
cmp
mov
das
pop
sub
rcll
xchg
jne
sahf
aas
inc
arpl
pusha
cmp
out
pop
ss
dec
sbb
jns
imul
sbb
fstpl
mov
lahf
ss
lret
cmp
or
and
add
idiv
jae
xor
test
jo
sub
pop
pop
ret
outsl
repz
daa
mov
mov
push
push
cmp
sti
es
dec
mov
in
and
movsl
and
rolb
sbb
popf
inc
mov
xchg
lret
lahf
aad
in
test
sub
sbb
and
lods
sub
push
cld
fbld
pusha
or
ja
mov
or
fs
cmc
mov
sbb
aas
jl
dec
add
mov
data16
or
loop
ss
jg
lret
sbb
xchg
pop
int
repnz
das
cli
xchg
dec
int
and
xchg
loope
sbb
ss
mov
repz
lods
jmp
dec
ror
inc
cmpsb
stc
pop
mov
push
mov
jp
cmp
xor
sbb
adc
loope
xor
push
test
ja
fldcw
inc
or
xchg
and
dec
jmp
insb
in
or
mov
aam
xor
ret
fldenv
js
rclb
clc
aas
push
dec
push
adc
mov
cmp
ret
jne
pop
sbbw
mov
loopne
ss
mov
xchg
add
mov
popa
fidivl
add
daa
push
out
imul
arpl
lods
mov
push
fdivrs
mov
push
add
dec
cli
in
inc
lock
and
inc
mov
sbb
jl
adc
frstor
push
mov
cmpb
hlt
fadds
sahf
inc
ret
jmp
movsb
repz
mov
ss
sub
loop
push
or
jle
dec
sahf
divb
jp
popa
cmp
out
stc
cmp
orl
inc
jbe
mov
push
fcmovbe
jbe
jnp
xor
push
movsl
hlt
pop
data16
cmp
adc
in
pop
setle
and
int3
je
ss
cmc
sub
cwtl
into
push
adc
das
cmc
add
xchg
leave
jge
int
push
sbb
pusha
test
sub
sub
mov
in
daa
iret
mov
fcmove
mov
push
mov
cltd
pop
idiv
repnz
je
cmp
sbb
inc
pop
repnz
xchg
xor
adc
jmp
sbb
iret
inc
lods
push
dec
sahf
sarb
xchg
out
xchg
aas
or
mov
sbb
or
adc
aad
insb
xor
int3
inc
imul
inc
fisttpl
or
fidivl
push
sub
xchg
aas
cltd
mov
xchg
xorb
mov
mov
lret
test
cmc
xor
jl
lock
jae
mov
repnz
push
iret
dec
push
inc
je
xchg
mov
inc
ret
lcall
xchg
mov
je
mov
sbb
sbb
shr
ja
mov
sbb
add
aam
mov
decb
xchg
frstor
lahf
ds
loopne
cmpsl
cli
pop
xchg
jb
or
test
nop
subb
lret
aas
mov
mov
xchg
xchg
mov
cmp
sub
jae
inc
and
femms
cmp
xor
pop
cmp
jne
ret
inc
sbb
xor
xchg
lret
mov
fdivrs
das
add
inc
loop
pop
jb
xchg
xor
ds
das
call
jl
hlt
xchg
je
loopne
aas
cld
std
mov
push
mov
or
and
adc
push
and
add
cwtl
cmp
adc
jmp
mov
or
cmp
dec
popa
pmuludq
int3
jge
mov
loop
fidivl
pop
cmp
mov
jno
fmul
fdivs
ljmp
out
orb
jno
aaa
movsl
repnz
mov
mov
cwtl
fsubrl
push
xchg
mov
sbb
dec
inc
jno
lret
jb
and
push
out
call
xchg
aaa
out
xor
pop
mov
outsl
sbb
push
sahf
scas
sbb
in
xchg
ja
and
xchg
in
cwtl
subb
jge
xchg
test
push
call
inc
add
mov
adc
jp
insl
push
aas
pop
fldenv
or
fiaddl
enter
fwait
jb
je
sub
enter
insl
stc
arpl
jl
xchg
mov
insl
mov
and
sub
rclb
inc
xchg
mov
cwtl
mov
pop
mov
jge
jge
jg
cs
inc
sbb
shll
adc
nop
fstpt
ret
test
mov
cwtl
clc
sub
shl
jbe
ds
and
test
enter
add
dec
jge
jnp
add
pop
fsts
mov
es
mov
mov
mov
inc
pop
arpl
inc
jo
aaa
popf
xor
fs
xchg
test
fstps
movsl
jge
lods
cmpsb
out
xchg
mov
pusha
cmc
push
add
enter
ja
push
pop
mov
jns
out
scas
jmp
cmpsl
or
jno
adc
ret
jb
jl
pop
adcb
mov
cmpsb
ficomps
push
adc
cs
cltd
push
movsb
jp
pop
xchg
inc
cmp
jecxz
lret
test
push
and
sbb
xchg
inc
loop
cwtl
daa
and
rorb
and
inc
jno
cltd
mov
aas
loopne
das
ljmp
adc
xor
out
orl
lret
or
xchg
popl
jl
and
mov
jge
ja
mov
aad
imul
push
out
pop
mov
rclb
sub
lock
test
dec
add
xchg
jle
pushf
adc
shlb
ljmp
fadds
push
or
xchg
fwait
add
push
rcr
inc
sbbb
popl
mull
fldl
push
sub
pop
fisubrs
imul
outsb
arpl
repnz
ret
ja
stos
sbb
push
mov
push
pushf
enter
inc
xchg
out
fisubrl
and
outsb
pop
std
test
pop
push
mov
out
daa
lods
sub
jnp
cltd
cli
mov
pop
or
scas
orl
cs
je
sbb
lcall
dec
push
and
ret
lods
in
sbb
es
pop
and
mov
pop
xor
and
pop
adc
inc
imul
lods
jnp
je
fistpll
xchg
fiaddl
sti
inc
ljmp
andb
lods
leave
sub
cli
imul
sub
mov
mov
pop
divl
outsw
mov
clc
dec
imul
std
xor
push
dec
int3
or
xor
dec
insb
icebp
inc
push
sbb
imul
test
pop
nopl
loopne
dec
xchg
sarb
or
cmp
cmp
iret
jp
into
pop
push
inc
out
ret
jne
cmpsb
add
inc
testb
pop
ss
inc
xor
xor
hlt
cld
loopne
sub
es
mov
jecxz
roll
js
popf
sbb
je
stos
addl
jl
add
mov
pop
fstpt
mov
ret
sub
mov
xor
adc
mov
add
fisubs
pop
fwait
or
cmp
iret
sbb
xor
inc
pop
dec
popf
and
dec
insb
lods
rorb
je
je
imul
jnp
xchg
shll
mov
fidivl
mov
ficoms
jae
je
aam
jne
jl
lret
sarb
fisubrs
push
aam
push
popa
cmp
ds
ficoml
out
test
in
cwtl
add
in
pop
pusha
jne
pop
shll
fwait
pusha
pop
shrl
pop
cmp
jecxz
adc
sahf
xchg
mov
push
mov
mov
mov
lds
filds
fs
jl
mov
in
fmuls
cmp
inc
jno
fisubrs
dec
jnp
fidivrs
repnz
in
into
cmpb
aam
mov
ficompl
lahf
lods
mov
sbb
clc
inc
push
inc
mov
mov
cs
or
pmulhw
repz
add
or
xor
fistpll
pop
cltd
mov
xor
mov
jns
lods
or
iret
sbb
pop
incb
adcl
lods
mov
and
imul
or
out
jmp
shlb
cmp
mov
icebp
push
dec
jmp
pop
or
ljmp
mov
xchg
sahf
or
mov
lret
int3
jp
push
pusha
out
pop
pop
push
sub
inc
inc
add
mov
outsl
aam
xor
loopne
adc
inc
xchg
mov
jns
addr16
dec
das
mov
test
subb
in
push
out
fs
sub
inc
mov
push
sub
idiv
and
jp
int3
mov
xorb
lods
jg
cmp
in
push
test
in
in
mov
sub
adc
testl
or
fsubrs
lcall
jp
inc
fmull
push
insb
ret
mov
jnp
mov
daa
and
js
add
push
cmc
pop
mov
sub
cltd
or
add
xchg
sbb
mov
mov
test
es
jb
aad
mov
insl
push
jae
sbb
aad
jge
inc
mov
ret
cmpsl
mov
nop
enter
out
ret
jp
push
sbb
adc
iret
fs
mov
mov
xlat
in
or
out
jae
xor
and
test
sub
mov
or
lods
inc
int3
das
addr16
add
push
fs
or
pushf
xchg
call
fwait
mov
fsubrl
add
lea
dec
fisubrl
jg
icebp
adc
push
jmp
cmc
inc
test
mov
out
and
ja
push
repnz
sbb
xchg
popf
insl
sub
or
ljmp
pop
nop
pop
fwait
sarb
pop
movsb
adc
les
mov
or
jge
lahf
lea
fwait
rclb
repz
inc
daa
int
jp
loope
inc
lds
orl
xlat
jmp
mov
outsl
push
mov
ror
pop
movsl
or
jo
add
sbb
mov
mulb
mov
aas
cltd
sbb
inc
aad
inc
call
or
push
cmp
jnp
fs
lret
mov
jb
xor
add
jle
out
in
jns
inc
lret
and
sbb
mov
aas
sbb
cli
pop
push
sbb
xchg
push
inc
sub
imul
or
cli
repnz
and
frstpm(287
setne
xchg
pushf
jmp
sarb
aaa
jge
loop
int3
push
push
xchg
or
addr16
sti
popf
pop
push
sub
push
mov
roll
scas
xlat
adc
xchg
pop
xor
push
movsl
es
cmp
mov
mov
sub
shl
mov
push
sahf
mov
dec
negl
add
imul
aaa
adc
xorl
push
xor
and
and
push
pop
loop
test
mov
pop
aaa
push
lock
xor
mov
into
mov
xor
testl
out
pop
sti
add
sbb
cmc
sub
sub
sub
scas
js
nop
mov
mov
lods
mov
dec
cmovp
rcr
mov
add
sub
add
cmp
int3
fisttps
pop
fs
push
rorl
stos
cmpsb
nop
mov
xchg
aaa
lds
jmp
stos
mov
or
lahf
cmp
or
gs
jmp
cmpsl
xchg
bound
jg
stos
fwait
ret
and
repz
imul
mov
hlt
pusha
jb
out
cmpl
cltd
pushf
sbb
jne
hlt
push
test
and
and
mov
cmp
out
test
jle
cmpsl
xor
push
adc
and
pop
in
rcrb
fwait
in
ffreep
xchg
xchg
mov
dec
push
jno
pushf
cmp
cmpb
inc
mov
or
push
je
mov
cli
cmp
gs
ljmp
call
cmp
jns
sub
jmp
mov
test
out
sahf
pop
cmp
sub
fldenv
sbb
fnstenv
aad
divl
ud2
mov
jo
adc
xchg
adc
ds
insl
stos
fbld
and
sarl
pop
lock
sub
dec
sbb
dec
xlat
bound
pop
jbe
out
enter
jbe
dec
xchg
dec
add
jmp
dec
add
lock
cmc
pop
int
pop
cmp
stc
add
adc
push
dec
mov
jns
xchg
or
push
mov
mov
add
push
jg
lret
adc
lret
aas
push
jle
xor
mov
mov
jl
sub
movsl
pop
jo
aam
xchg
push
push
push
jno
dec
sbb
leave
subb
imul
sti
das
outsl
sbb
lea
pop
jg
and
mov
jnp
pop
mov
push
sbb
add
jge
mov
sahf
jae
lcall
mov
push
icebp
jl
test
loope
pushf
jno
or
stos
xchg
push
das
lods
xchg
rorb
aad
pop
leave
push
les
arpl
call
cmp
in
js
rcrl
cmp
mov
in
sarl
pop
mov
push
sub
addb
mov
mov
sub
or
stos
nop
out
sbb
cld
jle
cltd
pop
sahf
iret
cmp
xor
clc
mov
mov
lahf
shlb
lods
out
inc
pop
or
hlt
or
faddl
xchg
or
and
dec
pop
push
add
ds
pop
xor
jb
xchg
imul
mov
jns
add
or
xchg
outsl
add
divb
mov
jecxz
jns
fucomi
cltd
pop
mov
mov
les
sbbl
subl
dec
dec
xchg
xchg
inc
cmpsb
loopne
fsubr
outsb
adc
movsb
push
cmp
jns
jmp
imul
int
xor
nop
push
loop
mov
out
inc
aad
cmp
rcrb
bound
dec
popa
dec
xchg
fisttpl
adc
aaa
int3
inc
jmp
jns
mov
dec
and
movsl
test
int
aaa
and
scas
sahf
popa
rcrl
mov
xor
inc
sbb
dec
ss
dec
enter
push
movsl
push
cld
aaa
xchg
sar
cmpsl
cmp
mov
fucomip
xor
pop
jbe
pushf
sub
mov
xchg
clc
mov
sbb
ja
lcall
jns
loopne
sub
repnz
cmp
xor
mov
push
call
xchg
shrb
jmp
xchg
pop
xor
and
push
clc
je
inc
mov
sub
cwtl
insl
inc
dec
dec
push
mov
int3
jmp
lret
dec
test
cmpsb
sarl
jmp
jb
push
jp
bound
fisubl
sbb
xchg
lea
cld
inc
sub
xor
cmpsb
dec
popa
lods
decl
ret
add
pop
or
vpshaw
mov
cmp
call
leave
mov
rclb
sub
push
pushl
push
mov
mov
repz
xchg
orb
pop
into
fisttpl
aad
idivb
mov
push
in
add
icebp
rol
push
or
sub
and
xchg
das
repz
shll
pop
dec
fcmovbe
pop
pop
and
pop
ja
pop
mov
outsb
xchg
ds
insb
scas
jl
pop
dec
in
cld
fsubrs
and
mov
push
and
fs
and
and
mov
fcomps
in
call
cmpsb
fidivrl
xor
mov
sbb
cmp
sahf
lock
sti
std
dec
pop
pop
and
lods
aas
inc
orl
cmp
pop
and
mov
ret
xchg
and
mov
sarb
into
loop
and
mov
push
mov
daa
lock
pop
pop
gs
loope
shr
cld
mov
xchg
pusha
mov
or
or
in
mov
les
sbb
out
add
pop
jg
notb
loopne
sub
cmp
out
out
stos
test
pop
test
jl
popf
and
mov
test
scas
sahf
repz
push
inc
jbe
std
push
daa
fs
jns
inc
pop
xor
sbb
dec
fistps
dec
pushl
or
or
sbb
mov
xchg
int
pop
sbb
xor
test
and
sbb
mov
stc
fidivl
dec
pop
mov
xchg
and
addr16
imull
sti
mov
cli
cld
dec
pop
mov
or
pop
daa
cli
cmp
pop
into
int
ret
shrl
and
sub
mov
repz
push
and
push
faddl
sbb
cwtl
push
and
mov
add
cmp
sti
fcoms
and
enter
pop
popf
sti
jp
loop
push
dec
push
int
inc
repz
not
jmp
add
imul
mov
in
mov
inc
push
pop
mov
inc
xor
cmpsl
mov
mov
jo
in
mov
inc
xor
mov
aas
insb
lods
ja
push
mov
push
iret
stos
lods
cmpsl
add
push
loop
add
inc
fistpl
xchg
jecxz
jp
adc
jl
int3
std
and
ds
mov
vshufps
pop
mov
mov
mov
jecxz
add
or
sub
or
mov
mov
rcrl
ret
popf
cltd
xchg
aad
xor
adc
adc
std
mov
dec
inc
sar
out
adc
adc
adc
rorl
or
test
shll
pusha
mov
mov
push
icebp
inc
lods
pop
jmp
lea
jg
into
lods
fs
in
jns
outsb
lret
dec
cld
inc
jge
movsl
mov
clc
push
sbb
cmp
popf
jb
out
fldenv
lcall
inc
dec
mov
pop
and
cmp
lahf
jmp
mov
loop
jae
jns
push
ret
pusha
je
xor
dec
xchg
push
mov
xchg
outsb
enter
mov
ljmp
sbb
dec
and
pop
mov
test
or
inc
inc
add
out
jae
and
scas
mov
push
sarb
loopne
out
mov
popa
adc
add
push
add
shrb
cmp
xchg
lcall
push
inc
inc
adc
adc
sar
out
fnsave
jne
cmp
es
fwait
or
sti
jnp
xor
cmp
xor
jns,pn
insb
jge
fmul
sbb
inc
notb
jbe
xor
mov
repz
aam
std
fisttpll
push
dec
sub
xor
nop
or
ret
or
or
and
fisttpll
mov
xchg
xor
jb
dec
mov
adc
stos
fnstenv
scas
and
push
and
push
packsswb
sti
je
arpl
mov
and
jns
dec
mov
cmpsl
orb
cmp
jecxz
sub
push
es
dec
push
lods
pop
ljmp
mov
bound
add
xchg
inc
jmp
mov
divl
pop
inc
push
in
in
loop
push
int
xchg
mov
inc
mov
pop
lock
sbb
xor
mov
push
aaa
jne
and
xor
lock
sbb
icebp
xor
out
jmp
outsb
out
mov
hlt
push
cmp
aad
repnz
push
or
push
or
call
or
jb
add
fcoms
lods
adc
sub
push
xchg
outsl
popf
aad
xchg
cwtl
mov
mov
lods
mov
loop
sub
clc
inc
jae
mov
not
fwait
rcll
rcl
jmp
rcrl
add
pop
and
or
aas
repz
jne
jo
push
jecxz
sbb
fnstcw
pop
pop
jge
mov
aas
shr
cli
nop
push
fstpl
in
outsl
rcr
cwtl
jecxz
and
jnp
movsl
fs
or
xor
cmp
adc
or
das
ljmp
out
lret
push
xor
lods
imul
jge
ficompl
imul
cmp
mov
jno
or
fdivp
in
inc
add
outsl
mov
push
dec
xchg
inc
aas
daa
sub
jl
mov
movsl
mov
inc
enter
mov
cld
mov
or
gs
aam
add
cwtl
lea
adc
repz
inc
mov
scas
mov
inc
and
add
stos
lds
cmp
sub
data16
loope
repz
add
daa
bound
push
out
push
loope
cmpsl
sarl
test
sbb
jl
fimull
push
dec
cld
cwtl
sub
pop
lods
mov
stos
in
xchg
xor
xor
enter
divps
jp
xchg
ja
aad
lods
mov
xchg
inc
push
lret
mov
mov
inc
data16
mov
sub
and
mov
mov
or
inc
cwtl
jb
add
imul
ss
add
sub
jmp
mov
cld
test
push
jae
pop
in
xchg
pusha
push
sahf
leave
xchg
mov
dec
lock
orl
adc
js
mov
mov
movsl
loope
mov
jnp
dec
aad
shlb
hlt
cli
fistpl
and
imul
test
fwait
jl
cmpsl
movsl
add
mov
inc
dec
arpl
or
repz
divl
daa
push
mov
sti
push
jns
mov
fs
testb
inc
ds
xchg
lret
sbb
mov
fists
test
push
inc
movsl
push
jnp
insl
shll
add
out
fsubr
bound
jb
pop
fisubrl
cmpb
push
xor
cmp
daa
out
add
leave
sub
rcrb
cmp
stos
je
cmpb
subb
jae
lds
into
test
xlat
fiaddl
sbb
imul
daa
dec
lahf
lret
push
addr16
shll
and
imul
lds
push
sub
lcall
test
mov
push
ljmp
push
lret
in
loop
sbb
imul
lock
dec
add
rclb
les
cmp
stos
ror
sbb
inc
pop
std
outsl
dec
and
test
fwait
popa
or
mov
inc
pop
push
ja
ds
inc
jp
cmp
xchg
jb
mov
mov
xchg
cmp
aad
cmc
or
sti
insb
mov
pusha
or
push
sub
scas
jno
negl
pop
rcrb
jecxz
test
add
inc
les
cmp
add
cli
and
aam
mov
lock
cmpsl
xor
and
ljmp
lock
scas
insl
and
out
mov
jmp
cmp
sub
mov
jb
and
insl
jge
fcomps
into
jno
add
mov
int3
ds
lock
ljmp
mov
sahf
pop
lcall
lret
rorl
mov
in
or
gs
fiadds
in
xchg
popf
decb
out
idivb
lret
gs
lret
loop
cmpsb
testb
mov
jns
mov
cmpsl
mov
adc
setp
add
push
dec
push
out
hlt
xchg
outsl
into
rclb
jge
loop
pushw
adc
repnz
pop
int3
andb
icebp
test
movsl
ljmp
add
adc
xor
ret
ss
mov
push
and
fsubs
fistpll
fildll
fwait
jb
mov
les
add
mov
mov
shlb
insl
cwtl
push
mov
sbbl
mov
xor
mov
push
sub
cmp
sbbb
jecxz
jle
jmp
clc
sti
out
adc
xor
pop
cld
mov
test
pop
aad
jo
incl
iret
ss
push
bound
lock
adc
leave
sbb
mov
jnp
push
inc
add
add
adc
cld
cwtl
cs
subb
adc
lds
in
shrl
push
mov
gs
sarb
rolb
iret
cmp
push
cmpsl
cld
cmp
jl
or
pop
aaa
addr16
push
jmp
outsl
add
mov
and
jg
add
push
cmp
inc
test
test
clc
ss
sub
outsb
test
lcall
push
aas
pushf
jmp
cmp
loopne
lea
movsl
adcl
or
fisubs
mov
inc
push
iret
data16
inc
dec
dec
cltd
pop
push
add
repz
imul
fstpt
mov
and
jno
fidivrl
sbbb
outsl
inc
mov
xchg
dec
movsb
dec
jle
and
int
sbb
cmp
cmc
pop
cmp
fistps
and
adc
adc
adc
jae
sbb
in
or
aad
pop
mov
leave
xor
movaps
lret
cmp
bound
sub
sahf
cmc
mov
push
dec
xlat
cmc
stos
and
mov
adc
ret
pop
xor
jo
dec
test
inc
addl
sbb
adc
cwtl
les
scas
cmp
jb
mov
sarl
mov
leave
mov
outsb
leave
or
loope
pop
pop
inc
lods
inc
xchg
arpl
xor
inc
xor
pop
mov
enter
cmpsl
pop
dec
xchg
sub
fdivrl
jns
fistl
push
imul
incb
loope
pop
sub
mov
push
sub
or
mov
adc
push
fistpll
popf
aas
push
mov
mov
aad
lret
sbb
mov
mov
push
inc
je
ficomps
lret
out
xchg
test
sti
iret
aas
in
shrl
cmp
dec
jmp
dec
outsb
push
out
xor
sub
push
enter
sub
jge
lret
icebp
fninit
pop
das
cmpsl
pop
fs
jnp
outsb
cmpsl
xlat
movsl
into
loopne
lock
and
sar
cltd
scas
icebp
ret
cmp
xchg
cmpsb
sub
stc
inc
mov
xor
and
push
and
xor
test
sub
cmpb
mov
outsl
mov
fldcw
imul
jne
fdivl
das
mov
icebp
pop
pop
xor
mulb
push
mov
aaa
mull
neg
mov
inc
mov
cmp
pusha
inc
mov
push
mov
out
or
jg
inc
insl
popf
jne
test
push
xor
sub
icebp
xchg
mov
sub
or
mov
lds
pop
cmp
in
xor
mov
out
ret
inc
fcoml
cmpsl
cmp
ds
fldt
add
dec
xor
lods
cs
mov
cmc
jp
int
repnz
jnp
add
insl
jg
and
je
mov
dec
sbb
sub
lods
mov
dec
in
mov
xor
roll
cmp
int
roll
addr16
fcompl
pop
daa
std
enter
cmp
and
pop
adc
push
repz
movsl
xchg
xlat
push
inc
in
push
movsb
adc
cmp
ljmp
stos
dec
fistl
inc
daa
sbbb
push
into
es
fwait
pop
mov
and
lds
dec
push
aad
xchg
adc
mov
sub
sub
sbb
xchg
repz
pop
jmp
mov
fdivrl
rcll
or
cli
out
xchg
addr16
aaa
push
mov
mov
nop
std
aad
dec
xor
jns
mov
andb
cmp
das
psubq
jl
int3
jbe
aam
cmp
shl
in
sub
hlt
cli
scas
arpl
mov
or
movsl
adc
out
push
clc
push
sub
push
sahf
pop
cwtl
cmp
pop
jnp
or
jb
roll
inc
inc
pop
xchg
popa
ret
aad
adcl
pop
sbb
aam
sub
dec
cmp
xor
cmp
xchg
cli
push
nop
sub
or
mov
pop
shl
inc
ja
je
dec
sub
data16
adc
inc
xchg
stos
dec
adc
push
mov
in
mov
lods
pop
mulb
jo
cmp
lods
fcom
cli
dec
out
scas
adc
nop
cmpsl
jae
pop
loopne
mov
cli
or
xor
cltd
and
mov
jmp
fs
sbb
mov
movl
mov
pop
jae
enter
nop
cmpsb
outsb
nop
jecxz
add
decb
jecxz
dec
mov
aam
cmp
xchg
arpl
mov
xor
adc
shrb
inc
mov
imul
push
cmp
cltd
jmp
outsb
fs
sahf
jns
push
push
xor
aaa
movsl
cmp
push
fcomps
sub
adc
outsl
mov
cmp
aam
jae
call
ja
inc
xchg
xchg
lds
jne
bound
stos
sahf
pop
subb
testb
or
xchg
dec
add
das
movsb
popf
push
insb
or
movsb
push
xchg
jae
movsb
fst
pop
repnz
not
pop
xlat
xlat
mov
decb
mov
mov
bound
cmp
cmpb
in
outsb
jg
xchg
stc
pop
sub
cmp
jns
test
xchg
ss
mov
push
mov
mov
add
push
jo
adc
mov
lret
mov
int3
sti
aam
stos
push
pop
xor
pushf
popf
xchg
popf
ficoms
sbb
test
and
scas
dec
push
fabs
push
fstpt
dec
jo
and
addb
hlt
adc
icebp
loop
rclb
fisubrs
push
das
test
xor
sbb
xlat
hlt
jmp
xlat
loope
mov
or
test
es
or
pop
mov
cltd
jmp
bound
scas
test
insl
push
cmp
arpl
ret
clc
rcll
sub
and
movsl
ret
icebp
repnz
mov
pushf
bnd
or
bnd
jmp
sbb
and
cltd
insl
add
dec
dec
mov
adc
mov
pop
loop
push
xchg
cs
push
outsl
and
scas
add
je
or
mov
insb
ret
movsb
test
cmpsl
xor
jl
shll
cs
stc
mov
je
or
xor
xchg
stos
subl
mov
imul
cs
mov
imul
mov
and
fistpl
or
sbb
add
mov
inc
pop
xchg
inc
jbe
fisubrs
shl
lock
sarb
add
sbbb
jg
pop
clc
shll
in
mov
rol
out
addr16
insb
xor
jo
jns
lock
in
pushw
jmp
sbb
movsl
jo
and
fists
repz
dec
add
jmp
jge
lock
push
in
push
push
adc
fsubl
lods
add
adc
mov
les
and
jmp
aas
push
cmc
adc
lcall
mov
rorb
or
outsl
mov
rcll
push
bound
mov
loopne
fsubs
clc
daa
inc
sarb
pop
call
pop
cmp
adc
or
into
and
inc
adc
jns
loop
mov
mov
out
adc
imul
stc
nop
fwait
adc
pusha
jbe
lret
icebp
pop
ds
push
scas
pop
out
cwtl
aas
insl
mov
and
jle
mov
and
js
jb
adc
rol
fcoml
mov
cmc
sub
sbb
cmc
test
movsl
subb
sub
push
mov
les
push
or
test
rorb
inc
pop
fs
daa
jae
daa
or
mov
mull
in
cmp
mov
into
lods
daa
xor
fs
sarl
cmp
and
out
push
cmpl
es
push
add
call
xchg
ds
mov
and
pop
and
test
sti
dec
xchg
cmpsl
iret
mov
cmp
repnz
fiaddl
je
insl
inc
push
push
cli
and
lret
icebp
jbe
mov
sahf
repz
cmpb
dec
sub
test
fldt
xor
mov
stos
pop
fwait
sbb
das
popf
not
btc
subl
inc
push
lock
xlat
test
ljmp
jb
cmp
xlat
add
pop
mov
scas
sub
sub
mov
xchg
pop
mov
es
repnz
int
in
fnsetpm(287
cmpsb
push
adc
hlt
stc
inc
xlat
call
jp
cltd
in
lods
sbb
subb
and
leave
in
addr16
push
gs
out
insl
push
lods
add
popf
sbb
sbbb
lea
sbb
pop
mov
cmp
shr
gs
cmp
push
push
add
fwait
jno
xchg
mov
pop
mov
or
push
mov
fdivs
jb
daa
pop
jge
xchg
dec
push
mov
in
shrb
lea
xchg
imulb
pop
mov
lea
dec
divb
fiaddl
jle
sarb
mov
sahf
mov
leave
xor
ja
cmovs
inc
pop
filds
jp
dec
stos
sbb
jp
add
lods
push
pop
xchg
push
mov
pushf
dec
int3
pop
call
mov
test
movsb
push
jge
push
and
in
imul
push
sub
rcl
lds
or
popa
xchg
mov
pop
mov
sbb
sbb
push
out
mov
jle
lea
ss
xor
cmp
fstpt
adc
les
mov
xchg
adc
lods
mov
outsl
fmull
push
mov
shrl
std
mov
and
mov
mov
or
cwtl
mov
add
dec
cli
push
add
dec
mov
jnp
pop
ljmp
int3
cmp
adc
mov
inc
js
frndint
xchg
push
daa
add
popa
mov
xorb
rolb
rorl
lahf
dec
orl
dec
jmp
aam
imul
addr16
pop
mov
adc
out
aam
pop
aaa
sbb
xchg
xchg
xchg
mov
enter
xlat
mull
notl
cmp
pop
pop
adc
test
push
pushf
jnp
push
cli
mov
fcmove
ss
lret
xchg
shll
insb
push
in
fimull
xchg
test
pop
adc
out
jg
iret
pop
pop
lret
mov
iret
jecxz
and
loop
push
arpl
mov
call
xor
mov
pop
rorl
sti
sarb
nop
inc
adc
mov
adc
push
push
mov
mov
push
cli
imul
fwait
sti
stc
mov
sbb
stc
add
dec
call
or
xchg
out
pop
ret
enter
mov
sbbb
mov
xchg
or
or
je
test
pushf
jns
je
inc
xor
jl
xor
sbb
mov
sbbb
or
jmp
and
push
jo
jns
cwtl
stos
into
out
fwait
cld
popf
rolb
out
xchg
jnp
push
cwtl
dec
mov
mov
push
mov
or
or
aaa
out
mov
xchg
out
mov
mov
les
lods
sbb
and
loop,pt
ljmp
and
mov
xchg
jp
scas
mov
mov
cltd
mov
out
test
push
push
imul
jge
and
xchg
aas
xchg
fidivs
cmp
pop
push
or
fsubl
lret
mov
shlb
lods
inc
outsb
sbb
shll
xor
pop
jae
push
fsin
pop
xchg
push
dec
inc
pushf
add
mov
in
push
add
fsts
ficompl
adc
dec
fnstsw
jmp
les
adc
lea
test
lock
fwait
jle
xchg
je
aaa
sub
testl
in
lahf
arpl
aam
pusha
jnp
push
and
fldcw
ret
dec
mov
clc
sar
in
dec
xor
pop
jg
push
in
hlt
jb
cmp
dec
cmp
or
rclb
imul
in
js
mov
incb
in
or
gs
daa
int3
and
dec
scas
mov
add
ljmp
add
ds
cmp
daa
pop
cmp
ss
push
xlat
testl
push
xor
mov
push
lret
ss
pop
push
mov
mov
rcll
jge
bnd
inc
shl
imul
in
aam
mov
repz
mov
orb
mov
call
pushf
test
lock
imull
je
sub
and
or
lods
js
nop
into
aad
sti
mov
mov
inc
into
fs
adc
aas
lods
out
pushf
mov
popf
test
push
loopne
xor
cmp
dec
xor
lcall
das
dec
fwait
add
mov
pusha
out
pusha
mov
hlt
xchg
add
loopne
pop
les
adc
sbb
sbb
cmp
fdivrl
mov
enter
out
mov
mulb
clc
leave
add
dec
fsubl
sarb
call
flds
sub
inc
adc
mov
imul
push
xor
sti
inc
xchg
cltd
adc
pushf
and
js
ja
jne
sub
adc
mov
pop
sbb
js
inc
pop
out
adc
fnstcw
daa
push
out
sarb
inc
fs
daa
lods
sarb
ds
filds
aam
sbb
hlt
fstps
fistps
mov
inc
push
rorl
mov
cmpb
jno
or
sbbl
bound
inc
cli
test
or
push
lret
jge
mov
mov
cltd
pusha
and
andb
ficompl
scas
test
sbb
mov
ret
mov
mov
js
les
aam
ss
in
mov
js
xorb
lahf
scas
or
mov
cmp
mov
or
push
add
les
sub
pop
imul
lcall
jo
jne
add
test
push
std
fldl
or
std
add
icebp
inc
push
mov
fists
adc
inc
xchg
mov
mov
ja
mov
outsl
int
mov
insl
mov
sub
dec
xchg
dec
leave
call
popf
aas
cmpsl
iret
inc
pop
xchg
pushf
jecxz
xchg
js
pop
xor
mov
push
sbb
push
inc
cmp
aad
cld
adc
pop
ljmp
fisttpll
inc
popa
call
push
cmp
mov
lahf
pop
loop
cld
cwtl
or
jge
insb
repz
dec
jecxz
shll
push
jns
lcall
into
repnz
push
leave
xor
jge
jle
jecxz
push
pop
pop
xchg
add
fwait
mov
adc
testb
cmp
rclb
pop
and
and
in
ljmp
pop
gs
push
inc
adc
lods
jp
adc
or
jmp
dec
daa
push
and
cmp
sahf
jno
rorl
add
test
xchg
and
icebp
jge
pop
lea
sbb
xor
xchg
push
sub
mov
cli
mov
add
aas
inc
data16
pop
lret
jb
out
stos
lods
pop
mov
insl
in
fistps
or
push
inc
dec
lea
jns
ficoms
and
insb
ficomps
je
inc
jnp
sbb
xchg
test
or
or
inc
fcom
imul
mov
lea
addr16
inc
repz
cmp
push
mov
popf
int3
cli
jns
sub
ja
mov
int
xchg
pop
movsb
dec
repnz
shlb
push
fbld
add
mov
mov
jno
adc
adc
fwait
out
insb
dec
fwait
popf
jle
pop
dec
inc
clc
mov
mov
push
rclb
pusha
push
ljmp
push
dec
divb
faddl
push
rcrl
jl
cmc
mov
movsb
fwait
outsb
in
cmp
pop
addr16
cmp
lea
pop
dec
xor
push
or
xchg
loop
add
inc
aas
xor
mov
sbb
movsl
mov
scas
rcrl
add
call
sub
sbb
sahf
cltd
xor
add
nop
js
jp
sbb
fcoml
push
mov
add
jb
pop
fwait
jne
repz
aas
dec
mov
fcmovnbe
mov
sbb
lcall
mov
push
cwtl
nop
mov
pop
test
lea
sbb
mov
jge
out
jg
call
arpl
xor
xor
add
pop
inc
fistpll
std
jo
xor
outsb
push
jne
pop
popl
inc
movl
pop
fstl
mov
rorl
cs
pop
jbe
add
lahf
mov
jbe
sub
ds
lods
aas
dec
cmp
movsb
ficoms
out
out
and
pop
inc
sub
cmpsl
xchg
mov
int
js,pn
mov
ret
dec
add
xchg
pop
push
in
test
call
xor
inc
push
fs
out
push
lea
xchg
loope
or
in
loop
in
test
and
push
fsubrs
add
jb
cltd
or
aam
dec
dec
fdivrs
add
decb
int3
aas
dec
inc
fiadds
imulb
adc
mov
inc
sub
and
adc
and
xor
jmp
mov
pop
pop
ja
cwtl
xlat
push
adc
lcall
sub
cltd
jp
push
pop
inc
jl
or
pop
shl
stos
jp
sub
jecxz
sti
enter
push
or
cmp
call
mov
notl
or
push
clc
insl
iret
sti
xchg
mov
cmp
pop
scas
leave
and
cvtps2pi
je
pop
push
cld
hlt
cld
mov
sbb
pop
inc
adc
ljmp
lods
jge
imul
incl
adc
idivl
mov
xor
je
xor
jns
add
rcrb
movb
jno
pop
enter
sub
mov
and
xchg
push
decb
rorb
pop
roll
adc
aad
or
int3
lea
lods
or
nop
pop
pop
iret
add
pop
les
rcll
dec
stc
cmp
movsb
xorl
pop
pop
jno
mov
mov
sti
rclb
aad
pop
push
lods
lods
jle
xor
cmp
iret
in
pop
dec
data16
mov
jle
sbb
mov
xchg
pop
jmp
sub
cs
loop
rolb
inc
mov
aad
nop
js
in
or
das
loope
mov
dec
out
mov
sbbl
movsb
and
cmp
cmp
pop
pushf
cmp
push
pop
cli
dec
out
mov
fmul
xchg
test
jp
movsl
push
hlt
jb
push
adcb
mov
lret
cwtl
jmp
xlat
jnp,pt
sub
mov
fsubrl
movsl
inc
lods
ret
ja
adc
sbb
inc
push
sbb
lahf
jge
lods
jecxz
sbbl
sbb
stos
aas
mov
movb
inc
mov
sub
xchg
xchg
das
les
and
ss
dec
hlt
mov
nop
adc
xchg
adcl
imul
inc
arpl
shr
mov
in
loope
lds
jle
dec
enter
push
mov
jecxz
sar
daa
push
in
push
sbb
pop
adc
not
mov
xchg
mov
frndint
push
data16
sarb
mov
inc
aad
lret
inc
inc
xor
sbbb
sbb
mov
sub
into
xor
and
outsl
mov
xor
pop
adc
out
icebp
aad
jmp
loopne
push
popf
lcall
addr16
int3
cmp
out
mov
or
ljmp
xor
sub
jecxz
test
lock
data16
and
js
lods
add
ret
cmc
inc
in
gs
in
arpl
pop
dec
icebp
dec
out
sub
std
test
add
jbe
dec
adc
test
jb
imul
jecxz
adc
faddl
stc
sbb
fimull
scas
xchg
fldl
lea
push
cmc
or
xor
rorl
test
leave
inc
ret
push
sbb
pop
mov
mov
mov
fs
mov
cmp
jb
jge
pop
add
sbb
dec
mov
sub
xchg
lock
out
fwait
mov
cltd
adc
rcrl
addr16
lock
mov
cmp
movsb
xor
or
repz
xchg
sbb
inc
pop
es
mov
xor
push
mov
mov
fwait
cmp
int3
adcl
lea
daa
iret
ja
sarl
rcr
scas
and
pop
in
add
add
xchg
das
loopne
or
stc
add
xor
xor
inc
jo
or
in
into
adc
fwait
mov
xchg
stc
pop
mov
adc
scas
insl
jbe
xchg
adc
rcr
pushf
out
sbb
pop
cmp
jbe
inc
lahf
push
ds
lds
cmpsb
and
pop
loopne
pop
into
sub
aas
insb
sbb
inc
popa
into
mov
jno
pop
lcall
fisttpll
add
or
repnz
mov
outsl
xchg
add
or
jo
sub
cli
ljmp
arpl
cmp
outsb
sbb
fwait
sbb
jno
xchg
mov
in
xor
mov
adc
xchg
sbb
xor
lret
outsb
xchg
lret
dec
xor
iret
jmp
lods
pop
fwait
jecxz
in
mov
test
jecxz
jp
sub
outsl
and
pop
mov
outsb
insl
sbb
push
aad
xor
testb
xchg
cmpl
mov
std
pop
in
push
fistl
aaa
mov
arpl
mov
dec
push
xchg
adc
rcrl
mov
imul
push
mov
lcall
adc
xchg
sbb
movsl
mov
xor
lret
inc
lret
cmc
int
adc
jnp
sub
cmp
scas
jl
add
data16
stos
xorl
repz
xor
aad
adc
jp
roll
cmp
push
fsubl
xor
mov
jge
sub
fcompl
sbb
shl
lods
test
xor
lock
xchg
test
mov
dec
addl
adc
pusha
sub
cmp
roll
lcall
jns
daa
jae
xor
aas
sbb
iret
std
sbbb
les
mov
push
cmc
pop
sbb
jge
leave
and
pusha
fwait
pushf
pop
push
cmp
or
xchg
stc
lret
jp
orb
dec
out
mov
xchg
enter
aaa
mov
cmp
pop
test
arpl
popa
mov
mov
lods
push
and
mov
mov
xchg
cmp
add
mov
pusha
repnz
push
test
shrl
orb
jnp
adcb
sbb
scas
out
mov
and
pop
aaa
pop
inc
cmp
iret
add
jae
push
mov
push
inc
loope
ficomps
xchg
and
pop
scas
cmp
sar
jo
cmp
negl
fisubrl
jb
filds
movsb
push
xor
fcoml
mov
pop
push
sbb
sbb
push
inc
push
push
dec
fidivrl
dec
movsb
out
mov
test
cmp
scas
lret
ja
inc
popa
insb
dec
cld
inc
hlt
push
aas
in
cmc
xor
xor
push
lcall
pushf
xor
pop
mov
dec
call
push
testl
jno
jnp
adc
or
fs
imul
sbb
jb
xchg
fdivr
push
fldenv
xor
inc
cmpsl
shll
movsl
popf
push
push
jae
popf
bound
dec
cmp
nop
icebp
adc
call
andb
push
mov
cltd
sti
pop
repz
mov
pop
call
push
xchg
scas
lods
rcl
fxch
push
mov
mov
in
dec
adc
adc
mov
les
or
cmp
sbb
ficoml
cld
cs
jnp
lret
repz
cmp
mov
push
aam
dec
jl
cltd
pop
pop
int
ss
pop
dec
lcall
imul
adcl
mov
fcoms
mov
cmp
adc
fnstenv
dec
or
andl
jge
sbb
mov
or
filds
adc
jge
xchg
dec
push
out
push
and
fistpl
jle
fstps
mov
cmp
out
xchg
btr
stos
mov
inc
push
fdivrp
and
lock
mov
rcrl
cmp
mov
mov
add
jne
push
push
add
dec
jl
pop
icebp
popl
dec
ror
mov
jbe
loopne
sub
pushf
mov
push
sub
cmovp
dec
cld
mov
dec
iret
lret
xchg
dec
xor
ja
pushf
pop
mov
mov
xchg
cmc
fwait
test
and
aad
fistl
fsubrs
cmpsb
outsl
xor
data16
xor
pop
cmc
mov
fs
ja
int
mov
xor
pushf
addr16
pop
mov
shl
mov
stc
pusha
or
addr16
fucomi
and
jecxz
dec
mov
adc
sub
ljmp
fiaddl
cmc
sti
addr16
data16
lahf
add
adc
cs
jo
jne
outsl
jo
ds
fnstenv
das
inc
xchg
jg
push
inc
outsl
push
stos
repz
dec
and
daa
inc
mov
xchg
test
or
in
pop
fnstsw
daa
xlat
jl
test
cmp
pop
sub
adc
loope
aam
stos
das
push
outsl
inc
push
fisubrl
sub
dec
mov
adc
daa
xorb
pop
push
jmp
jbe
jb
pushfw
fisubrs
pop
jmp
lcall
mov
imul
out
lea
shld
xchg
sbb
leave
movsb
jo
test
jmp
aas
mov
ret
daa
pop
dec
pop
push
jns
or
loope
fs
jno
das
insl
pop
insl
subl
and
push
push
and
xchg
mov
arpl
mov
mov
ret
int3
cmp
andl
push
out
inc
jbe
dec
in
push
xchg
mov
int3
jne
mov
ss
stos
icebp
sarl
ljmp
or
cmp
cmp
out
test
hlt
lcall
mov
hlt
or
dec
psubq
cmp
dec
mov
jge
insl
mov
lods
int3
add
inc
addl
push
mov
adcb
cli
sbb
xor
shll
xchg
inc
mov
call
xchg
loop
xchg
data16
lahf
cmp
loopne
sub
ja
mov
dec
push
fbld
or
sub
es
pusha
stos
dec
sbb
xchg
fisttpll
adc
fwait
and
imul
sub
clc
xchg
sub
mov
sbb
inc
pop
mov
push
icebp
cmc
rcrl
pop
fdivl
lcall
das
ret
sub
in
imul
in
out
pop
mov
dec
rcrb
jbe
das
je
cmp
cmp
aad
fxch
adc
outsl
dec
xor
add
push
test
lret
nop
insb
push
jg
inc
and
push
pop
mov
xchg
out
sub
or
jns
in
inc
iret
stos
mov
jno
and
js
jle
repnz
lret
ret
or
js
scas
pop
divb
dec
movsl
push
das
ss
outsl
xor
inc
adc
sub
sahf
jecxz
pop
xor
push
pop
ficoml
repnz
addr16
add
adc
push
out
push
sbb
mov
addr16
sbb
push
xchg
lret
cltd
fiadds
or
xor
and
xor
fcompl
daa
and
dec
or
xchg
aam
test
pop
adc
sub
dec
addr16
lcall
mov
cmp
dec
test
aaa
jl
jae
mov
stos
and
arpl
sub
outsl
push
lods
rcr
sub
jmp
inc
ret
sub
filds
sub
cmpsb
imul
mov
pop
ds
or
push
cmp
iret
sub
test
mov
in
cmp
rolb
cltd
sub
in
inc
xchg
cmp
mov
xor
aam
popf
cmpsl
push
cld
pusha
cmpl
inc
mov
shll
pop
testb
push
dec
push
imull
mov
int
or
lret
ret
and
bound
push
sub
dec
mov
xor
loopw
jmp
mov
pop
sbb
repz
jo
repz
cmpsl
cmpsl
add
mov
xchg
divb
mov
push
out
sbb
stc
fsubs
daa
mov
arpl
mov
lods
push
es
fnstenv
fmuls
fcomps
out
xor
gs
inc
clc
and
gs
in
es
or
int
adc
cmp
call
pop
jle
ss
movsl
push
fsts
dec
xor
and
rolb
out
lea
dec
test
inc
pop
cmp
jecxz
xor
adc
xchg
push
mov
mov
stos
cmp
mov
int
fmull
mov
dec
xor
pop
addr16
mov
sbb
and
push
inc
adc
jge
xor
movsl
sti
mov
sbb
sub
cwtl
jnp
xor
jae
cmp
sti
cmp
daa
mov
movsb
dec
add
rcr
push
call
or
jne
jnp
mov
push
cmp
adc
push
pop
jbe
std
mov
add
push
jne
push
xchg
cmp
sbb
adc
adc
xchg
insb
aaa
sub
notb
in
push
add
or
mov
jbe
dec
dec
mov
out
int3
push
mov
outsb
jle
lods
cltd
push
xchg
add
mov
xlat
push
and
dec
dec
push
mov
or
mov
sub
test
xor
aas
adc
pop
mov
jnp
push
ds
cld
scas
pusha
sahf
ss
sub
sub
xchg
mov
add
pop
inc
popa
movsb
dec
xor
std
int
and
in
nop
dec
mov
call
arpl
xchg
pop
xchg
add
mov
push
dec
loope
mov
decl
xchg
pop
adc
out
ss
ja
ret
sbb
or
jb
sbb
xlat
clc
xchg
inc
pusha
mov
xlat
xor
sbb
in
stos
add
and
jns
xor
shrl
push
mov
inc
mov
test
mov
scas
in
xchg
mov
imul
pop
movd
fnstcw
lods
jl
movsb
into
push
mov
and
push
push
rcrl
in
shrb
add
cmp
inc
filds
cmp
cmp
inc
jne
data16
adc
adc
sub
mov
fwait
aam
pop
fsubrs
lods
rorb
orl
and
jge
jecxz
fadd
xchg
popf
sub
xor
push
pop
ret
adc
push
mov
cwtl
dec
sbb
cmp
cmp
push
in
cmp
mov
aad
lret
xchg
gs
js
dec
mov
or
int
sbb
lret
xchg
xor
mov
sbb
jo
or
bswap
fldz
popf
flds
add
lods
stc
test
pushf
bound
loopne
sahf
bound
icebp
into
pop
mov
jbe
xchg
cmp
flds
push
es
push
adc
fcmovne
scas
test
dec
xchg
mov
push
jno
ja
cmpsl
loope
jns
xor
cli
out
rcll
insb
in
fnstenv
jecxz
or
mov
mov
mov
cli
cltd
int3
pushf
or
lfs
pop
cwtl
fstl
sbb
movsl
jae
cmp
pop
fimull
cmpsl
cmpsl
jno
insl
adcb
pop
int3
mov
jg
xor
rcll
dec
mov
lds
and
mov
repz
cmp
lcall
dec
inc
imul
add
cmc
adc
add
ja
cli
mov
orb
adc
into
orl
fiadds
push
enter
or
arpl
clc
push
in
or
ss
test
dec
loop
ficoms
lret
or
cmp
pop
jo
add
adc
subl
lods
es
mov
push
cli
or
cmp
sbb
pop
xchg
call
xchg
xchg
push
clc
shrb
xchg
xchg
add
xor
fmuls
xchg
daa
push
xor
adc
xchg
cmp
and
aam
and
dec
pop
xchg
lahf
push
jecxz
popa
push
xchg
adc
sbb
or
ret
push
xchg
dec
sbb
cmp
xor
rol
lahf
xorb
mov
jo
vfrczsd
dec
in
data16
mov
jbe
xor
in
rorb
out
adc
jnp
andb
negl
sub
sub
mov
lods
or
movsb
insl
ret
push
and
xchg
dec
js
mov
inc
movsl
adc
sbb
cmp
pop
mov
fists
xchg
scas
adc
xchg
cltd
js
pop
subl
pushf
or
fdivl
mov
std
sub
jle
push
or
xchg
dec
sbbb
push
pushf
push
fs
cli
push
dec
inc
in
fldl
dec
or
jae
lds
cmpsl
sbb
fcmovb
cmp
icebp
jge
flds
pop
ljmp
mov
mov
mov
mov
pop
and
icebp
jmp
ds
cmpsb
test
or
pop
jb
bound
cmpsl
sub
mov
loope
sbb
pop
sahf
jo
xor
cmp
add
or
inc
xor
ds
sbb
fsubrp
mov
mov
xlat
int
inc
push
ret
and
stos
add
fbstp
test
push
dec
scas
roll
mov
movsb
rcrl
data16
pop
adc
nop
jnp
nop
cld
movsb
push
int
sub
insl
sbb
int
outsb
pop
dec
pmullw
mov
fst
add
ljmp
test
fdivl
leave
push
mov
stc
int3
in
xor
dec
dec
pop
add
shlb
fsub
mov
add
xchg
pop
decb
call
and
jp
mov
repz
cmp
cld
sub
ret
ljmp
dec
push
pushf
add
mov
idivl
sahf
mov
js
adc
gs
addb
popf
out
addr16
mov
fstpt
pop
push
fists
outsb
add
jae
outsl
faddl
push
mov
xor
movsb
loope
mov
sbb
enter
arpl
or
push
cli
inc
mov
lcall
test
in
flds
cmp
lock
es
js
les
gs
and
lret
mov
xchg
jecxz
sub
dec
rcr
mov
jae
das
add
jne
mov
rcr
add
fabs
mov
and
ficoml
sub
lods
jae
mov
out
out
lahf
sub
popa
push
mov
sub
xchg
inc
enter
jae
int3
mov
dec
mov
mov
imull
push
sub
sub
mov
cmp
subb
jecxz
lock
cmp
pop
pop
push
sbb
pushf
movsb
add
jns
mov
inc
push
in
dec
test
dec
adc
inc
push
dec
and
sub
xor
scas
popf
push
fbstp
and
xchg
jg
hlt
xchg
xchg
inc
mov
xor
cmp
fs
repz
xor
xor
fwait
add
jp
inc
or
ret
std
mov
and
inc
lret
loope
sahf
jne
jbe
mov
sub
jae
out
rcl
out
ss
dec
shrb
pop
arpl
dec
sbb
sbb
test
push
fimull
jmp
inc
lcall
sti
sub
or
mov
das
imul
push
fwait
cs
mov
pop
cmp
orl
enter
inc
or
or
call
inc
inc
test
fistpll
adc
addl
ds
add
push
adc
test
ss
xor
pop
push
cmp
out
xchg
cmp
into
lret
adc
cltd
ret
test
movsl
dec
mov
and
stos
xchg
xchg
jmp
xchg
cwtl
test
sub
inc
out
dec
mov
inc
lret
push
outsb
inc
addb
sbb
fsubrl
adc
pusha
sbb
aad
mov
lret
sub
out
cltd
and
dec
xchg
mov
in
push
add
fyl2x
and
mov
int3
aad
xchg
adc
push
sub
adc
pop
stc
ljmp
mov
xchg
ret
xchg
pop
cld
inc
enter
push
sbb
xor
and
push
loop
xor
stos
rol
lods
cmpsb
cmp
mov
shlb
push
scas
inc
mov
cwtl
push
xor
sbb
js
loop
mov
nop
enter
mov
add
scas
cmpb
mov
sub
in
jo
rclb
add
fisttpll
arpl
xchg
cmc
add
fsubs
mov
js
into
jbe
outsb
add
cli
fstl
mov
arpl
inc
mov
test
xor
idiv
sub
mov
imul
xchg
imul
pop
sbb
lea
js
dec
orl
mov
and
mov
jae
mov
xorb
sub
add
or
loopne
adc
in
adc
call
xor
dec
add
sbb
rcll
test
and
pop
sub
js
inc
js
dec
jnp
inc
in
int
leave
scas
icebp
test
sti
cmp
dec
mov
popa
mov
imul
jno
test
popa
lods
inc
in
sbb
jmp
jno
nop
jb
sbb
psrld
out
dec
fisubl
jp
orl
fwait
loop
ljmp
and
ljmp
xor
cli
cwtl
sbb
push
push
sub
inc
mov
dec
test
in
xchg
arpl
dec
sub
idiv
adc
push
sbb
inc
ljmp
cmc
lods
cli
cltd
leave
arpl
add
and
mov
in
jg
pushf
cmc
mov
gs
inc
pop
repz
mov
jo
cmp
and
notl
jae
enter
shl
movsl
or
adc
insb
xor
sub
mov
sbb
test
inc
or
jo
aad
inc
das
fabs
fwait
subl
or
unpcklps
jno
lcall
mov
cmp
jae
clc
lds
cs
mov
add
cmp
orb
aas
inc
scas
dec
jnp
movsl
adc
push
test
in
xchg
loop
push
bound
jecxz
jge
aad
fstpt
popa
aaa
inc
mov
dec
or
test
pop
rcrl
lcall
cld
incb
mov
pushf
sub
decb
adc
cltd
scas
in
fdivrs
in
das
mov
and
stc
push
jb
mov
movsb
push
mov
adc
mov
enter
lock
and
mov
insb
leave
jae
aam
dec
mov
sbb
sbb
movsl
jb
pop
inc
cmp
ss
add
cmc
mov
sbb
in
dec
out
in
pop
lock
insl
lea
imul
jno
mov
pushf
outsl
rorb
cwtl
bound
sti
test
aas
xchg
xchg
jge
bound
push
loopne
mov
and
sti
xchg
cmpsl
adc
mov
cmp
sub
test
shl
nop
pop
test
out
outsl
insl
jle
mov
leave
sub
lock
mov
sbb
movsb
dec
mov
sub
addr16
lods
fwait
add
xchg
fdivrs
test
mov
add
pop
lock
xchg
rcll
add
stos
mov
mov
sti
std
data16
adc
mov
xlat
ret
cwtl
sti
lock
sbb
test
push
sbb
fucomp
loop
aaa
add
push
sub
pop
push
push
out
cld
mov
movsb
jne
aaa
icebp
inc
lret
pop
test
add
in
mov
jge
dec
or
xor
sub
pop
cmp
xchg
daa
movsb
and
int3
shrl
cli
adc
jl
in
insl
sti
hlt
vpsubusw
mov
sbb
ret
imul
aaa
shlb
mov
jg
std
out
mov
out
enter
bound
or
adc
xor
push
push
jns
pop
rcl
mov
jge
mov
leave
mov
fnstcw
icebp
scas
push
xor
jnp
out
xor
insl
sub
in
cwtl
out
cmp
dec
cmp
or
cmpsb
jnp
stos
push
fucomp
adc
mul
mov
pop
and
push
pushf
xchg
outsb
enter
outsl
mov
lea
mov
cmp
repnz
lea
adc
outsl
jle
mov
lret
pop
in
imul
add
jp
xchg
fcoml
mov
sbb
lea
pop
mov
in
push
pop
pop
out
sbb
xor
imulb
push
and
fistl
stc
fadds
inc
popa
js
cmpsb
and
inc
jns
loopne
adc
jecxz
pop
dec
int
sbb
mov
dec
cmc
out
inc
mov
ds
inc
into
xchg
jl
frstor
scas
jg
adc
push
add
and
pop
mov
loope
pusha
int3
jno
jno
addr16
pushf
xchg
push
push
jae
stos
mov
insb
mov
or
cmpl
xchg
push
mov
sahf
xchg
imulb
cmpb
movsb
or
pushf
inc
jp
sbb
lods
outsl
mov
jae
mov
mov
xor
cmp
mov
lcall
or
loop
popf
rep
std
test
jo
clc
sahf
ljmp
daa
pop
stos
mov
sub
arpl
mov
jns
cwtl
popa
or
cwtl
mov
add
fld
outsl
adc
nop
dec
ljmp
push
leave
cmp
xor
sub
aaa
jnp
mov
cltd
add
fisubs
loop
xchg
mov
lods
in
inc
lds
or
pop
scas
mov
leave
sti
xor
popa
out
es
or
inc
jge
adc
cwtl
jb
enter
xor
scas
fldenv
mov
orl
dec
push
out
repz
int
and
inc
sbb
jbe
dec
sarb
data16
mov
dec
xor
jge
aam
mov
jge
dec
fnstsw
push
outsl
add
push
sbb
pop
adcl
and
mov
xor
xchg
xor
bound
or
aas
jle
test
shll
les
or
fnsave
mov
cmc
add
gs
xlat
inc
cmpsl
test
cltd
jo
outsb
lods
push
cmp
jae
mov
divl
fsubr
push
sbb
iret
sub
pop
scas
test
mov
inc
sbb
pushf
fadds
pop
scas
push
xchg
loopne
cli
xchg
inc
push
cmp
out
xor
cmpsl
pop
std
cmpb
xchg
lcall
sbb
add
cmp
push
or
push
clc
cmc
lret
addr16
jnp
mov
subb
repz
stos
fdivrl
pop
adc
push
andb
in
adc
xor
cmp
cmpsl
push
or
inc
enter
pop
into
int3
pop
fnstsw
int3
sub
testl
sub
cmp
je
jge,pn
or
push
mov
push
test
or
cs
into
addl
or
sbb
into
dec
mov
xor
cmc
jg
cmp
cmp
sarl
mov
and
or
xchg
stc
xchg
sub
mov
bound
dec
mov
mov
mov
testl
jnp
jl
jle
push
lret
pop
add
push
sbb
fstps
jne
mov
xchg
dec
stos
and
jle
adc
jecxz
sbb
pop
lds
xor
mov
inc
jne
cli
sub
add
pop
ret
sahf
mov
pusha
enter
mov
in
movsl
mov
out
call
adcl
dec
sbb
outsb
jg
mov
jbe
outsb
and
jle
test
jne
insl
push
dec
lret
aam
jno
addr16
ret
es
call
je
fsubrl
iret
fwait
adc
pop
mov
jne
pop
outsl
xchg
aad
and
and
loopne
or
cltd
repz
sub
insl
aas
repz
cmpb
es
adc
push
push
shrl
push
in
pop
scas
andb
inc
mov
sbb
add
xor
pushf
mov
push
rorb
xor
pop
loope
jl
mov
inc
and
into
lcall
xchg
and
dec
push
pop
fdiv
lret
push
pushf
xchg
dec
xchg
lea
lret
sub
sub
lods
push
adc
mov
pop
pop
inc
mov
pop
lret
insb
or
mov
leave
ljmp
mov
add
fiadds
dec
push
aam
xchg
fcomps
push
xchg
fstpt
and
cmp
sbb
mov
addr16
test
nop
shlb
aaa
imul
ja
cli
sarl
shr
mull
add
fnstsw
jmp
xchg
in
push
lret
jae
sbb
stc
es
and
adc
dec
enter
inc
adc
mov
fbld
and
jmp
or
sbb
pusha
push
ret
mov
and
or
cmp
fdivs
jmp
ljmp
stos
push
xchg
adc
dec
dec
adc
enter
xchg
xchg
push
shrb
add
add
cli
je
jnp
repnz
das
mov
dec
clc
cmp
mov
xchg
insl
mov
sbb
lret
dec
popa
jl
mov
inc
sub
adc
cmc
and
sbb
mov
dec
sub
sub
fists
and
jae
mov
enter
loope
mov
adc
xchg
inc
cld
mov
or
jns
mov
test
cli
aad
mov
sub
cmp
loope,pn
pushf
dec
sub
jg
mov
dec
pop
ret
dec
shrd
xchg
rol
iret
push
mov
test
imul
cmpb
pusha
mov
mov
rcll
xchg
adc
inc
aas
jle
sbb
cmpsl
push
xor
lret
pop
stos
and
int
jo
or
push
or
mov
pop
xchg
mov
fidivrl
add
or
push
lahf
popf
rorl
add
inc
jb
xchg
lahf
rcrl
fdivr
xlat
inc
pop
xchg
sbb
mov
mov
fidivs
inc
push
mov
repnz
popa
jl
dec
lock
lret
mov
cmc
sub
dec
scas
push
daa
clc
lea
push
push
cli
test
int3
test
cmpsb
xor
and
jg
mov
lds
inc
add
lock
xor
ficoms
int
imul
push
mov
cli
lock
in
dec
adc
push
mov
cmp
insb
aas
mov
in
ret
jecxz
mov
mov
fistl
mov
shrl
jno
adc
mov
aam
cmc
into
mov
ret
lods
cwtl
fidivl
cmpl
xchg
add
cmpsb
mov
imul
dec
jnp
in
shll
aaa
int3
lea
add
ficoml
adc
mov
aas
ret
inc
cmp
xchg
in
or
imulb
sub
loop
cs
arpl
cmpsb
cli
mov
mov
and
int3
jp
sahf
lock
or
xor
sub
rorb
add
test
pop
add
dec
repnz
sub
xchg
dec
fwait
sbb
cwtl
dec
jge
lret
enter
adc
mov
sub
fisttps
jnp
pop
ljmp
ret
pop
aas
fistpll
in
xchg
popa
addr16
aas
sub
sbb
insb
pop
shrl
andb
push
pop
cmp
pop
jne
je
cmp
mov
fcom
mov
lcall
xor
push
ljmp
add
dec
jle
push
mov
sbb
out
push
pop
scas
ds
jae
add
push
mov
subb
xor
or
mov
mov
dec
mov
xchg
sti
pushl
int3
loope
imul
cld
pop
push
mov
test
testb
push
jb
pushf
dec
jl
popa
leave
jns
cmp
aas
add
loope
pop
lods
mov
mov
or
rcrl
test
popl
fsubrl
xor
adc
dec
jg
movsl
xor
push
loopne
pushf
jp
push
sbb
adc
add
push
or
mov
xchg
movb
out
mov
ficoms
jno
dec
push
mov
jecxz
xchg
and
push
dec
stos
push
or
in
sahf
sahf
imul
adc
insl
scas
mov
xor
cmc
fsubrs
dec
xor
fildll
and
in
jle
sub
repz
lock
pop
fsubrs
out
jno
pop
xorb
add
push
js
insl
push
inc
mov
push
fstl
rcrl
jne
or
xchg
aam
dec
bound
repnz
pushf
cli
xchg
jbe
jmp
fwait
or
mov
outsb
aas
loop
xchg
stos
lods
lods
js
out
push
adc
pop
sbb
sub
stos
sub
sub
xchg
add
enter
ror
adc
iret
pop
fsubp
vpunpcklqdq
pop
mov
pop
mov
push
ljmp
cmp
cmc
stos
sub
movsb
imul
mov
jns
insl
je
cmp
rcl
jns
xchg
and
cmp
jle
xor
aaa
nop
sub
leave
out
aaa
xchg
std
in
jge
mov
lods
pop
aad
sub
add
movsl
mov
test
lods
cmp
in
mov
xchg
xor
les
pop
push
test
enter
hlt
mov
or
push
enter
jbe
in
in
or
sbb
xchg
aam
push
jnp
shlb
jns
rcl
loopne
sub
lret
sbb
rorl
mov
xlat
jns
mov
sbb
fs
push
ss
adc
fcoms
jbe
movsb
aaa
idiv
gs
fists
pop
dec
mov
mov
cld
loopne
push
jo
and
mov
mov
inc
je
insb
push
mov
push
mov
test
fildl
jb
daa
test
add
sbb
ret
pop
lret
and
cltd
ror
dec
or
mov
lcall
fadd
jae
leave
loop
sub
mov
add
sub
leave
sbb
lods
gs
fisttpl
jle
inc
out
jo
xchg
jne
into
into
push
andb
jmp
xor
mov
rol
into
popf
mov
xor
mov
inc
mov
adc
sub
xor
xchg
lahf
cmpsl
push
fidivs
aaa
imul
mov
push
cmpsl
inc
inc
adc
adcb
ljmp
shr
movl
cmp
das
dec
add
pop
push
xor
out
outsl
mov
or
mov
push
je
lods
mov
inc
cmp
cmp
test
loopne
aad
sbb
fldenv
outsb
jnp
dec
shlb
int3
add
add
in
cwtl
sbb
filds
mov
out
jbe
fisttpll
mov
pop
push
sarl
adc
dec
dec
pop
xchg
adc
outsb
xor
pop
and
cmp
cwtl
cmp
ja
rclb
jb
jmp
cmp
xor
xchg
jmp
inc
not
inc
test
call
mov
pop
pushf
inc
nop
sbb
in
mov
xlat
popf
xchg
inc
pop
sbb
imul
or
out
fcompl
push
cmp
insl
cmpsl
ss
into
add
or
jmp
daa
jp
shl
mov
or
mov
sbb
sub
add
mov
adc
out
shlb
sahf
rcrb
mov
cs
test
sbb
adc
jmp
cli
push
dec
mov
adc
push
dec
cwtl
fnstenv
fbld
or
out
movl
push
mov
push
xor
loope
dec
adc
sub
lock
mov
add
ja
adc
cmp
lock
test
jge
lahf
cs
or
sub
pusha
inc
sub
mov
jp
leave
movsl
jp
test
xor
pushf
push
out
lret
sub
sub
mov
bound
icebp
in
sbb
cmp
mov
adcl
jle
in
mov
sub
lea
xchg
or
or
xchg
fwait
aaa
outsl
es
dec
jmp
sbb
jmp
sub
orl
jnp
addr16
cmp
xor
lahf
xchg
lcall
sti
mov
shl
scas
movsl
icebp
pushf
cld
popf
pusha
xlat
enter
push
outsb
cmp
xor
cwtl
mov
cmpsl
andb
fists
mov
sarl
add
aam
xlat
ret
push
icebp
loop
xor
mov
cmpsb
mov
adc
rolb
imul
cmp
jno
filds
fbld
mov
into
adc
adc
or
jge
insb
mov
jns
pushf
cmpsb
cmp
dec
fs
nop
out
push
cmp
cmp
push
and
mov
jne
inc
and
pusha
and
jp
outsl
out
mov
sbb
mov
sbb
push
or
out
out
pop
outsl
aam
xor
lret
arpl
cmp
je
cmp
and
jbe
stc
insb
mov
repnz
mov
push
xchg
loope
xchg
pop
push
add
mov
pop
add
inc
sbb
mov
pushf
jle
loop
aam
pop
jae
xor
je
jns
xchg
idivl
add
dec
lea
out
push
scas
stos
test
mov
fisubrs
pop
ss
and
cltd
xor
fsubs
xor
jae
fidivl
ror
fwait
mov
rcrl
add
dec
fwait
mov
enter
lret
scas
push
xor
int3
leave
mov
and
pop
imull
pop
pusha
test
sti
popf
repnz
ja
pushf
in
and
imul
ss
bound
movsl
mov
rclb
xchg
inc
movsl
js
outsb
adc
mov
dec
push
inc
shl
sub
in
loope
hlt
in
popa
popf
lret
adc
fs
pop
aad
jge
jle
xchg
add
jp
nop
mov
inc
sbb
fs
pop
mov
insb
push
xor
jnp
emms
dec
add
pop
movl
mov
pop
subl
cld
dec
cmp
add
inc
js
mov
push
push
lret
mov
add
mov
testb
dec
ljmp
mov
pop
push
in
cmp
push
inc
lds
and
sbb
mov
adc
popf
sub
mov
ss
mov
stos
xchg
lea
rcr
rcll
popf
and
pop
jns
mov
sub
sub
adc
fists
mov
cmp
cmp
mov
xorl
cltd
mov
and
xchg
dec
or
cmc
scas
in
jle
cwtl
jo
faddp
and
mov
loopne
rorl
mov
mov
xor
add
ss
jb
call
outsb
pop
ret
xchg
fcmovnbe
and
add
loope
sarl
add
outsl
push
mov
xor
push
loop
lahf
inc
and
push
mov
jecxz
fildll
xchg
pusha
loope
jno
mov
pop
sbb
fmulp
xchg
inc
mov
ret
push
add
mov
or
or
sbb
cs
in
test
push
fs
js
push
fists
fsub
xor
arpl
in
pop
daa
out
lret
sbbb
daa
push
fldenv
pop
cld
jp
adc
stos
maskmovq
mull
sbb
out
dec
jge
imul
mov
mov
mov
test
dec
add
push
pusha
jnp
cmp
add
lcall
inc
jo
mov
pop
lods
sub
or
rcr
and
mov
xchg
sub
mov
cs
inc
cmpsb
insb
aad
push
movb
fs
lock
sub
pop
aaa
ficoms
sbb
push
push
and
xor
and
andb
incl
inc
pop
sbb
xchg
pop
iret
pop
fisttpll
fdivs
xlat
xchg
fstps
repz
inc
enter
cld
and
mov
mov
mov
push
inc
mov
ljmp
in
faddl
push
in
je
mov
mov
push
add
cs
in
ds
aas
movsb
stos
push
ror
jae
sbb
out
mov
adc
xchg
pop
sbb
inc
inc
sbb
bound
rorl
lods
and
add
pop
jnp
dec
fistl
mov
je
sbb
lret
lea
fmull
pop
add
mov
xor
xchg
sti
push
aaa
shll
pop
add
in
hlt
lret
and
enter
rorl
ljmp
jbe
push
and
push
outsb
push
cmpsb
mov
into
imul
and
inc
xchg
outsb
push
andb
xor
gs
fcmovne
add
ljmp
pop
cmp
mov
jae
and
cwtl
sbb
jecxz
lahf
leave
mov
in
cmpsl
mov
pop
jecxz
sbb
leave
call
or
popl
je
sub
mov
add
dec
rclb
and
xor
mov
shrl
xchg
test
xor
fwait
arpl
dec
imul
inc
pop
sub
iret
icebp
inc
push
das
dec
adc
add
sbb
inc
dec
lcall
out
add
mov
cmpsb
jmp
rdmsr
das
xor
fcoml
cmp
ds
dec
ret
sbb
movsb
jle
inc
iret
ljmp
add
sbb
les
int3
icebp
stos
bnd
adc
nop
fnsave
or
loopne
sbb
cmp
mov
in
xor
jns
leave
decb
add
jmp
test
movsl
test
jmp
scas
add
add
push
inc
add
cltd
push
outsb
cmpsl
es
jo
rclb
sbb
push
jne
pop
dec
xlat
sbb
cld
pop
ret
aas
sti
dec
loope
or
push
scas
jge
dec
xor
popf
mov
insb
loopne
cltd
cwtl
cmp
cmpsl
cli
dec
rolb
cwtl
lods
push
insb
stos
push
add
jo
cmpb
cmp
test
push
rcll
dec
cmp
repz
and
sbb
jp
in
mov
mov
push
lods
iret
dec
pop
das
stc
xor
ss
mul
cmp
cmp
test
dec
mov
faddl
imul
adc
inc
sub
push
aam
cmp
sbb
imul
mov
or
jns
clc
aam
pop
dec
mov
test
dec
dec
gs
jo
xor
lds
inc
xor
push
push
ret
nop
dec
push
sub
mov
mov
cwtl
lods
pop
sbb
test
das
stos
sbb
push
mov
push
nop
or
xor
sahf
inc
sar
mov
and
in
xchg
outsl
ret
das
push
push
clc
out
xor
mov
xor
cs
out
ja
add
mov
mov
hlt
cmp
insb
ficoms
push
xchg
hlt
sbb
ffreep
decb
xchg
pusha
repz
mov
rsqrtps
inc
lds
sbb
mov
pop
and
or
pop
cmp
dec
cmp
push
and
loope
fdiv
ret
repnz
lock
xor
ljmp
test
loope
and
push
aam
addr16
inc
pop
lock
pop
lret
stos
fists
gs
jge
jns
call
sub
add
and
add
std
dec
loopne
pop
pop
push
mov
xor
sub
lea
pushf
dec
sub
cmp
jmp
add
inc
test
pop
and
adc
jle
pop
test
jl
push
ljmp
dec
push
jnp
push
out
out
mov
xor
add
mov
mov
movsl
pop
xor
xor
inc
stos
aas
outsl
mov
inc
int3
aad
fstps
xlat
mov
or
sub
mov
pop
outsl
popf
xchg
pop
jne
rclb
cltd
and
jae
cmp
and
ret
and
mov
pop
shl
in
mov
sbb
nop
xchg
push
dec
inc
or
cmpsl
inc
xchg
in
sahf
andb
push
pusha
test
ljmp
stc
aad
inc
call
xor
xchg
bound
dec
in
cmovl
fs
dec
loopne
mov
bound
lret
add
repz
and
sbb
sub
xlat
scas
or
xchg
call
cmp
pop
xchg
fld1
mov
jb
add
lods
inc
dec
inc
inc
cmc
dec
fisttps
jnp
insl
icebp
sub
mov
xchg
adc
rcll
ljmp
outsl
incb
leave
repz
jge
lret
out
cmc
jecxz
mov
fs
add
mov
or
clc
jl
icebp
mov
dec
mov
es
push
add
mov
dec
push
mov
cld
cmpsl
das
dec
dec
push
mov
inc
bound
inc
xlat
adc
fiaddl
fstpt
cwtl
mov
imulb
ja
add
add
mov
push
rcl
inc
xor
mov
fdivl
xor
dec
or
movsl
shrl
mov
push
pushf
inc
cmp
mov
movups
or
stos
das
je
mov
loope
in
popa
and
in
inc
cltd
rolb
jge
in
mov
pop
push
ret
mov
js
jae
mov
push
movl
inc
mov
clc
inc
jns
jns
push
or
sbb
dec
ljmp
sbb
scas
push
jnp
cwtl
aam
out
xor
lock
jp
iret
jno
fiaddl
pop
xlat
jo
xchg
aas
xor
mov
popf
dec
ss
jo
in
lret
cmp
adc
dec
cmp
adc
xchg
dec
adc
out
cs
xchg
dec
icebp
adc
mov
loop
mov
ret
mov
addl
cs
test
icebp
xchg
or
inc
fwait
scas
clc
subl
and
cmpb
push
sub
xchg
test
mov
sahf
idiv
arpl
push
mov
rcll
xchg
dec
mov
xlat
imul
daa
lods
pop
xchg
stos
or
out
call
inc
mov
inc
lods
addl
sbb
enter
mov
arpl
pop
add
jbe
popf
flds
testb
cltd
jns
pop
fidivs
nop
loopne
fisubrs
xchg
jnp
and
add
pop
jnp
mov
aad
in
outsl
lods
fbstp
in
xchg
cmp
jo
call
adc
adc
add
xchg
or
adc
inc
mov
rclb
bound
je
pop
lret
push
jns
call
fstps
push
mov
mov
cli
test
jne
imul
and
dec
xor
sbb
jbe
fwait
sub
lock
out
sbb
xchg
and
mov
xlat
sbb
faddl
std
sbb
imul
xchg
jmp
and
test
mov
cmp
imul
hlt
xor
mov
cmp
pushf
mov
fwait
sbb
aad
pop
test
adc
cmpb
cmp
loop
repz
xchg
sbb
xchg
add
push
cmc
push
jns
pusha
xor
arpl
popa
aam
lds
leave
pop
pop
xor
dec
mov
or
or
sti
pushf
xor
repnz
xlat
xor
in
push
fadds
addb
js
xchg
shll
or
cwtl
cmp
push
push
xchg
dec
xchg
mov
popa
adc
jns
add
sbb
scas
push
mov
pop
aaa
dec
out
or
xor
movsl
mov
in
fs
push
pop
add
add
sub
push
mov
roll
imul
push
cmp
out
pop
sbb
xchg
out
or
jp
push
pop
push
addl
outsb
push
jle
mov
pushf
dec
int
lock
mov
fildll
mov
fcomi
mov
rcrb
cmp
or
icebp
jae
out
stos
jns
mov
incb
call
mov
stos
jns
xchg
loopne
push
adc
stos
scas
cmp
sub
sbb
push
xor
xchg
sub
jmp
mov
repnz
mov
stos
mov
mov
mov
bound
outsb
adc
sub
mov
adc
bound
mov
pusha
sti
cmp
cld
ljmp
scas
sbb
fsub
fldt
or
lret
insb
or
xlat
repz
sub
mov
cmp
rolb
cmp
lcall
pop
sbb
sub
adc
sbb
roll
mov
sbb
mov
bound
mov
push
adc
movsl
scas
push
outsl
cmp
jnp
sti
fld
cli
icebp
test
stos
xchg
es
mov
popa
lock
adc
xchg
xchg
scas
lahf
or
scas
icebp
cs
mov
add
pusha
mov
add
inc
nop
insl
xchg
mov
imull
in
outsb
loop
xor
and
leave
push
push
inc
xor
pop
mov
fwait
or
fidivs
cmp
pop
pop
and
in
and
imul
dec
in
or
neg
scas
not
or
and
mov
sti
jo
push
sarb
cmp
and
scas
push
cli
into
stc
jnp
pop
push
mov
dec
rcll
mov
lret
imul
and
inc
and
lcall
dec
adc
jle
xchg
cmp
fwait
jnp
out
and
js
pop
pop
out
xor
jb
xchg
cwtl
jecxz
or
mulb
xchg
rorl
mov
mov
mov
or
cs
sbb
outsb
lret
xchg
mov
lock
mov
xchg
lods
cmpsb
adc
imul
push
push
sub
stos
dec
pop
dec
pop
inc
ja
ljmp
cmp
push
push
cmp
pop
mov
leave
fcmove
arpl
aad
repz
xchg
loope
and
out
aaa
sbb
cmp
cmp
jmp
insl
imul
nop
mov
mov
pop
popa
negb
xchg
dec
inc
mov
push
dec
out
test
adc
aam
pop
jge
jg
mov
pop
js
dec
or
sarl
inc
movsb
ljmp
notl
xchg
ja
pop
xchg
mov
lods
jb
stc
repnz
gs
movb
in
and
mov
mov
cmc
mov
mov
clc
daa
mov
scas
xchg
movsl
cmp
shll
inc
and
xchg
andl
mov
out
lods
mov
out
scas
jge
scas
call
popf
gs
dec
notb
fwait
add
xchg
aaa
fsts
ret
sub
add
dec
pop
mull
add
pop
shrl
xchg
inc
lea
mov
push
sbb
add
ret
xchg
sahf
movsl
jbe
xchg
add
pop
add
add
dec
lea
jecxz
lods
jae
jnp
sub
test
xchg
in
out
fucom
loop
inc
mov
loopne
add
mov
test
in
push
sbbl
jns
xchg
push
and
push
clc
sarl
std
cwtl
and
pop
lds
xor
stos
and
add
pop
jb
sub
aas
sub
and
xchg
push
push
lahf
ret
ret
cmp
mov
jns
and
fs
cmp
xchg
mov
mov
mov
mov
jnp
ror
and
notl
mov
int
push
mov
mov
mov
ja
fimull
sahf
mov
push
jae,pt
xchg
jge
bound
cli
jb
pop
sbb
mov
mov
sbb
and
stos
mov
and
jo
cmp
sub
mov
pshufw
xor
and
test
inc
xchg
fisttps
stos
mov
sbb
test
jbe
in
cli
cmpb
mov
mov
pop
leave
iret
pushf
sbb
fs
add
paddsb
into
rorb
pop
dec
jns
and
jae
mov
xchg
lock
jg
or
push
dec
mov
aaa
mov
pop
stos
sub
mov
cmp
loopne
push
sar
jle
or
inc
adc
call
jle
repz
adc
daa
xor
mov
cmp
cmp
xchg
dec
mov
fidivrs
pop
lods
jp
int
mov
mov
aas
roll
jle
or
jg
sbb
sub
or
push
xor
fistpll
pop
cwtl
cmc
loope
add
scas
dec
sbb
inc
stc
movsl
subl
mov
xchg
outsb
notb
flds
jg
pushf
mov
sti
das
fdivl
les
inc
adc
jae
das
mov
mov
fadd
jl
or
in
push
pushf
adc
stc
xor
daa
pop
mov
and
sbb
push
push
rol
and
imul
inc
cmc
sbb
fdivs
cwtl
fsubrs
adc
mov
jl
or
xchg
out
rcrb
cld
jae
jecxz
xchg
jb
dec
in
stos
incb
aaa
xchg
xchg
clc
and
shlb
pop
bound
bound
pop
add
in
test
sub
push
jb
imul
mov
aam
push
gs
rcr
jb
mov
sub
fnstsw
insl
outsl
cwtl
mov
dec
cmp
lahf
sub
pop
in
rcrb
popa
loope
mov
cs
ja
xchg
stc
scas
cmpsl
sub
lcall
fwait
sub
mov
cmpsl
idivl
aas
mov
mov
in
jg
inc
dec
add
pop
mov
push
mov
adc
hlt
ret
mov
adc
fdivl
jbe
ljmp
fmul
sub
ja
mov
stos
stos
adc
adc
xlat
cmp
lret
xrelease
push
movsl
inc
mov
add
mov
fwait
or
bound
cltd
jge
cs
sub
jp
push
orb
test
pop
das
mov
std
adc
mov
stos
jbe
jmp
pusha
cmp
lods
into
icebp
jge
dec
divl
fwait
push
inc
fwait
sti
push
add
adc
lds
mov
xchg
jno
pushf
add
adc
fs
mov
roll
sub
in
loope
xor
cwtl
lahf
test
into
or
cmc
push
jo
das
inc
out
out
xor
dec
hlt
fdivrs
out
pusha
mov
fsubl
dec
jo
add
loope
mov
adc
fisubrl
ja
ds
add
xor
cmpsl
sub
and
negl
adc
ret
outsl
push
xlat
lods
stos
mov
jmp
mov
dec
loope
sbb
xchg
push
push
addr16
xchg
adc
popl
repnz
out
ja
and
js
xchg
cmpl
dec
bound
lds
in
mov
mov
test
push
dec
fnstenv
inc
mov
into
sahf
mov
xor
or
xor
xchg
fidivrl
or
mov
sbb
movsb
pop
sahf
and
xorl
lret
and
test
xchg
or
xlat
cmp
aas
mov
fdivl
idiv
ja
test
xchg
mov
lret
aam
ret
inc
sub
popa
in
mov
gs
dec
pop
fnstsw
psubsb
mov
inc
mov
mov
rol
or
sbb
cmp
cmpsl
push
jbe
faddl
pop
test
pop
icebp
cmpsl
mov
push
shrl
mov
and
xor
sub
mov
ds
testb
gs
in
cwtl
xchg
arpl
in
and
xor
or
mov
daa
mov
or
divb
dec
mov
cmc
rclb
xchg
jne
jmp
je
cltd
cmc
mov
lods
add
xor
jno
fbstp
imul
xor
mov
mov
loopne
lods
mov
jle
push
fwait
mov
ja
sub
pop
outsb
inc
nop
sub
or
mov
fmul
xor
pop
pop
negb
push
push
mov
xor
add
pop
xlat
outsb
into
rol
stos
cmp
cli
pop
in
cmp
inc
jo
pop
cmp
iret
dec
inc
mov
je
mov
cmp
lea
inc
adc
movhps
out
pop
pop
lret
insl
fucom
outsb
adc
mov
mov
sub
mov
fs
mov
or
dec
sbb
push
pop
aaa
xor
or
scas
sub
pop
sbb
mov
jge
add
xchg
push
jo
mov
inc
into
test
xchg
out
adc
pop
es
or
push
addr16
pop
cmp
jl
sbbb
lret
lds
imul
mov
fiadds
xchg
push
add
test
icebp
insb
or
enter
outsl
jb
push
movsb
pop
xchg
mov
lods
cmp
mov
and
int3
mov
mov
dec
rorl
push
iret
aam
stos
pop
mov
push
and
insb
cmp
pop
mov
dec
in
push
push
fidivl
lcall
jge
push
push
dec
imul
xor
sbb
xchg
push
inc
bound
and
popf
cmp
mov
jno
pop
ret
mov
or
lea
mov
orl
jge
inc
adc
imulb
in
decb
push
insl
ljmp
dec
in
jle
sbb
in
mov
fyl2x
adc
bound
xor
ret
je
in
mov
imul
loop
cmp
call
les
ljmp
in
into
cltd
lcall
mov
popa
xor
and
mov
ret
inc
sbb
test
adc
push
mov
cli
out
test
cmp
lret
repnz
push
sbb
lods
into
push
mov
lods
loopne
notl
gs
std
mov
sub
adcb
cmc
iret
sub
mov
inc
mov
mov
adc
push
push
adc
aas
cmp
add
cmp
mov
and
es
in
imul
and
push
cwtl
mov
hlt
dec
jmp
and
and
sbb
mov
xchg
std
pop
sbb
mov
dec
mov
stos
insb
or
xor
xchg
or
hlt
sbb
lcall
xor
jle
xchg
loopne
je
and
orb
mov
outsl
jbe
sahf
cwtl
ss
cmp
mov
mov
ret
pop
cmpsl
je
xor
xlat
sub
push
push
sbb
adc
xchg
sub
dec
mov
call
imul
pop
sub
and
adc
and
jb
loop
push
mov
jno
xchg
sbb
push
repnz
push
mov
cmc
adc
out
lods
dec
std
int3
notl
push
cwtl
adc
cmc
inc
dec
out
xor
inc
add
mov
inc
jnp
stos
mov
aam
popa
rol
enter
ret
sar
enter
cmp
dec
ret
aam
nop
icebp
into
clc
cmpsb
mov
jecxz
sti
jae
jo
test
mov
aam
mov
push
pop
xor
xor
cwtl
inc
lret
testl
dec
push
leave
adc
lods
pop
mov
jg
add
fnstenv
outsb
loopne
sub
push
pop
and
lods
mov
pop
mov
das
daa
adc
mov
test
xchg
mov
dec
in
inc
mov
mov
clc
inc
push
mov
jae
xor
movsb
fs
lds
pop
mov
add
bound
int3
les
hlt
mov
iret
mov
xlat
movsb
fwait
jb
das
sbb
lahf
xchg
stos
fwait
pop
ja
mov
push
hlt
jno
mov
pop
or
shlb
and
test
adc
stc
roll
insb
ja
and
jle
bound
test
push
cs
mov
out
mov
test
ret
repnz
std
movsb
int3
jns
mov
push
stc
int3
or
jmp
in
pusha
das
jno
dec
mov
push
xchg
clc
imul
pusha
add
cmp
mov
push
addr16
decb
ja
mov
add
xchg
js
mov
mov
push
xchg
addr16
iret
mov
jb
outsb
jo
loope
adc
xor
xor
cmp
sub
inc
and
loop
clc
or
push
pop
push
pusha
jns
fsubl
decl
mov
adc
mov
sub
imul
push
dec
mov
or
stc
addr16
dec
lret
xor
dec
lret
xchg
mov
or
call
pop
dec
loope
sub
sbb
stos
fnstenv
sub
rcrl
das
mov
sub
lahf
sarl
ss
and
or
ret
pop
insl
jo
test
push
adc
scas
and
ret
add
enter
mov
and
outsl
mov
mov
rcll
jae
cs
ret
xor
sub
sub
outsl
mov
mov
jae
inc
lea
dec
mov
pop
inc
jge
mov
lret
cmpb
jg
xor
mov
and
and
std
sahf
aas
inc
sbb
decb
cmp
cmp
ret
mov
mov
pop
pushf
iret
call
jmp
out
jmp
and
imul
xor
das
mov
and
outsl
inc
push
cmp
cmp
pop
mov
and
out
dec
inc
push
ret
cmp
push
mov
pop
dec
push
sub
mov
out
arpl
inc
mov
mov
sub
test
das
add
or
int3
sbb
adc
or
fs
das
repz
xchg
mov
mov
stos
xchg
cmp
cmp
pop
sub
int
push
push
push
dec
and
ss
or
adc
cwtl
inc
mov
add
push
xchg
stos
sub
test
dec
scas
mov
cli
mov
sub
data16
mov
and
addr16
call
std
cmp
mov
inc
jne
adc
mov
ret
dec
mov
sbb
push
or
imul
mov
mov
dec
xchg
leave
pop
loopne
shrb
fcmovb
cmp
ds
ucomiss
dec
out
xchg
ret
sub
sbb
shr
pop
out
dec
daa
jg
and
pop
mov
lock
sbb
jmp
sbb
jg
int
cmp
cmp
movsl
fisubl
sbb
push
imul
popa
push
lcall
push
push
mov
sbb
mov
loop
xor
push
mov
jl
mov
aad
inc
dec
sarb
or
icebp
mov
and
push
mov
add
clc
cwtl
nop
pop
enter
in
add
push
pop
pop
in
push
imul
cmp
lret
jecxz
push
xor
out
mov
lret
mov
adc
pop
inc
xor
mov
cmp
test
mov
repz
cmc
std
es
push
add
and
push
fdivs
arpl
adc
leave
push
aam
loop
stc
cli
push
jge
jg
or
fs
movsb
or
xor
stos
cmc
push
sub
sub
negl
lret
push
nop
inc
add
add
ret
dec
scas
or
in
add
mov
xlat
scas
out
out
inc
push
inc
popf
sbb
test
leave
sti
mov
stos
cmc
out
push
in
add
jmp
popa
out
aas
inc
pop
xchg
les
call
fs
rcll
xchg
jecxz
pop
push
fldenv
xchg
daa
pushf
loopne
adc
insb
imull
push
clc
inc
mov
and
inc
ret
dec
rcll
test
pop
and
jp
cmp
leave
lcall
dec
adc
scas
popf
hlt
jno
push
pusha
lret
call
mov
popa
or
nop
jg
loope
aas
jp
fdivl
dec
les
sub
sub
cmp
adcb
mov
stos
sti
dec
add
xchg
cmpsl
les
in
call
lds
sub
out
jae
jno
cmpsl
out
adc
mov
sub
mov
xlat
sbb
xlat
push
mov
mov
sbb
xchg
in
xor
loopne
ret
ds
lods
push
aas
inc
push
shr
xchg
dec
test
and
fists
sub
push
sbb
push
cmp
ja
mov
imul
aam
or
in
mov
cld
mov
loope
sbb
push
jg
mov
cmc
cmp
jmp
add
icebp
push
fisubl
sti
ds
and
xlat
mov
subb
nop
add
fcoms
loope
push
mov
push
lock
popf
js
pusha
scas
movsl
daa
mov
pop
mov
xor
jmp
or
sub
mov
in
dec
clc
pop
sub
in
ss
dec
jl
jecxz
push
sub
ficomps
cmc
and
add
jmp
stos
lds
xor
imul
aaa
pushf
push
xchg
mov
cltd
dec
cmp
inc
out
pop
test
jge
sub
jbe
xchg
inc
inc
mov
xchg
lret
dec
loopne
cltd
faddl
push
imul
hlt
scas
loopne
jge
mov
bnd
jbe
subb
out
mov
pop
jae
out
and
mov
in
shlb
and
inc
add
lret
push
stc
addr16
jne
xor
loope
xor
xor
mov
daa
xor
popa
or
cmpsl
mov
add
jns
and
in
mov
mov
fs
mov
xchg
xchg
jns
arpl
movsl
std
lea
fnstsw
and
xor
pusha
mov
pop
cwtl
imul
call
jae
and
pop
addr16
pop
fucomp
push
mov
adc
fs
jnp
sbb
mov
mov
xchg
stos
rcll
add
pop
xchg
ret
ds
mov
scas
xor
xchg
pop
dec
push
sahf
mov
stos
mov
fists
push
mov
jmp
addr16
fisubs
inc
in
fwait
nop
add
repnz
and
cltd
scas
and
fs
leave
or
call
addl
or
mov
movsl
sub
daa
pop
lods
sub
fiaddl
push
jbe
jecxz
cs
sub
notl
mov
aaa
cltd
dec
mov
dec
lods
outsl
insb
data16
pop
cmp
dec
out
ret
sti
jbe
or
mov
adc
inc
sbb
les
push
inc
loopne
cmp
test
adc
scas
jecxz
pop
loop
rolb
adc
xor
movsl
jle
fwait
jge
pop
jno
pop
lea
mov
aaa
or
cli
dec
out
stos
or
sub
sbb
imul
outsb
dec
jbe
in
icebp
or
outsl
nop
ret
push
dec
ret
mov
mov
test
out
xchg
dec
ja
jg
jg
pop
lahf
mov
sarb
in
inc
dec
sub
in
cmc
or
sbb
int
xchg
xor
popa
js
lret
pop
push
rorb
cmp
or
lods
in
jns
dec
call
scas
sbb
adcb
xchg
dec
popf
ja
stos
stos
test
adc
inc
loope
and
mov
jnp
stc
pop
adc
add
pusha
and
fnstenv
cmp
push
repnz
xorl
add
iret
sub
outsl
aam
les
mov
rol
and
cmp
cltd
xor
mov
cmp
jge
sub
xchg
pusha
mov
or
mov
je
gs
push
loop
int3
xchg
mov
outsl
mull
pop
idivb
loopne
dec
ret
mov
cltd
mov
inc
into
or
ja
popl
inc
movsl
mov
push
dec
mov
push
iret
pop
push
mov
movsb
nop
xchg
cmp
jmp
mov
or
shrl
push
out
inc
push
adc
jbe
stos
inc
inc
shll
iret
leave
jmp
xchg
sbb
xor
adc
mov
cmp
ds
movb
inc
jns
addr16
sbb
std
push
inc
and
roll
and
add
pop
xor
sub
mov
and
jae
in
nop
or
lods
pop
jecxz
lds
mov
jge
pop
push
scas
das
and
iret
pop
in
xor
pop
cmp
or
inc
call
mov
sub
cwtl
movb
sahf
testb
lea
sub
stos
jo
pop
cli
lods
mov
push
xor
mov
and
adc
fimull
add
int
aad
xchg
stos
jnp
bound
xchg
and
jbe
aad
xchg
daa
sbb
mov
mov
add
mov
adc
ret
xchg
orl
or
loopne
mov
faddl
dec
stc
or
insb
xor
inc
xor
inc
add
push
das
push
pop
leave
dec
jb
lcall
unpcklps
shlb
sbb
stos
pusha
shlb
cwtl
or
gs
popf
jmp
pop
inc
push
lds
ljmp
lahf
mov
xchg
sarb
loope
xchg
mov
sbb
sub
hlt
add
rcrl
cmp
in
aam
mov
lods
sbb
mov
jbe
int3
repz
call
adc
and
sub
mov
push
popf
enter
gs
and
daa
test
xor
outsb
xlat
sub
mov
mov
dec
mov
faddl
jmp
js
mov
pushf
sbb
xor
jle
icebp
loopne
pop
loop
subl
push
jno
mov
sub
addr16
add
test
test
ret
adc
stos
mov
or
in
subb
mov
fsubl
out
or
mov
mov
repz
mov
xchg
dec
xchg
inc
jl
jno
push
dec
xorl
lods
xchg
mov
jns
fptan
pop
stos
int
cmpb
repz
pop
xchg
mov
lahf
mov
xchg
lea
jg
pushf
test
stc
lret
push
out
lret
fmul
aaa
stc
push
mov
mov
mov
push
or
mov
xor
ret
mov
xor
call
dec
pop
jmp
jne
jns
out
dec
mov
cmp
arpl
hlt
testl
sbb
mov
add
in
mov
sub
cmp
int3
test
lock
pop
push
fisttpll
pop
jp
out
fadds
jp
xchg
inc
pop
or
pop
sub
movsl
push
mov
loope
add
dec
les
sbb
imul
xor
cmp
mov
in
scas
jb
inc
popf
jg
mov
jne
sbb
mov
add
xchg
inc
cmpsb
repz
mov
lret
dec
push
test
xchg
xchg
dec
mov
or
fisubl
mov
in
mov
out
gs
nop
mov
pop
pop
insl
jecxz
adc
fsubrl
cmp
bound
insb
pop
inc
add
inc
lea
cmp
jae
jmp
push
cwtl
mov
fnstcw
xchg
roll
pop
cmpsl
dec
dec
sti
hlt
fldcw
testb
enter
and
pop
fadds
icebp
adc
adc
and
adc
push
mov
xchg
call
xorl
data16
adc
subb
daa
mov
out
jb
ljmp
mov
roll
jbe
mov
inc
jne
rorl
imul
cli
out
jbe
mov
repz
and
adc
mov
ljmp
add
lahf
not
dec
cmp
cld
repz
push
dec
mov
leave
xor
pop
xor
xchg
fldcw
mov
jo
mov
lods
aaa
cmove
adc
adc
adc
mov
icebp
fists
aas
js
mov
mov
pushf
scas
ljmp
jp
lods
and
jge
adc
ja
sub
cs
mov
adcb
loop
or
mov
jecxz
pop
jmp
jle
aaa
mov
xor
test
cmpsl
mov
icebp
mov
sub
mov
and
stos
int3
mov
sub
cmc
sbb
xlat
cmp
sub
inc
mov
pop
pusha
mov
cmp
mov
in
jo
cmovs
faddl
sbb
adc
push
test
lds
mov
fadds
fstl
shlb
pop
ficompl
rolb
ret
adc
jnp
push
sub
mov
scas
dec
mov
mov
mov
addr16
dec
in
rcll
jle
scas
push
fs
add
xor
cmpsl
push
adc
insb
push
cmp
dec
xchg
or
adc
mov
imul
lcall
rcrl
pop
mov
cmpsl
mov
fadds
in
pop
cli
jecxz
das
popf
cmpl
sbb
xor
pop
into
sahf
jl
pop
js
jnp
lods
xor
fwait
orl
loopne
jge
nop
jo
popf
mov
loopne
jle
mov
sub
cmp
mov
cmc
cmp
cmc
scas
mov
and
ret
in
inc
mov
xor
lock
jmp
movaps
mov
sub
sub
test
repnz
jbe
and
dec
jp
pop
lods
sbb
out
mov
cmc
sbb
and
mov
cmc
jp
and
shlb
push
sti
imul
mov
pop
pop
adc
orl
testb
mov
clc
add
outsb
cmpsb
xor
add
pop
rcl
negb
and
push
adc
test
push
jo
adc
insb
mov
jno
mov
push
fcmovu
movsb
popa
add
dec
cmp
je
es
ss
dec
push
sub
inc
arpl
popf
push
ljmp
cmp
push
outsb
xor
stos
push
mov
inc
mov
sbbb
xorb
hlt
jg
cmc
enter
mov
out
insb
shlb
jbe
movsl
imul
into
push
ret
lcall
stos
lds
mov
cli
enter
aaa
loopne
imul
mov
mov
sbb
and
inc
xor
sbb
push
in
push
nop
daa
or
mov
ror
jp
cltd
lcall
loopne
adc
lods
movsl
push
jno
pusha
popf
call
sub
mov
imul
inc
xchg
inc
inc
aas
or
xchg
lock
je
aam
xchg
xor
jmp
fisttpl
dec
mov
cmpsl
test
movsb
lods
je
negb
pop
and
jecxz
push
or
jp
aaa
lcall
out
movsb
es
subl
add
iret
mov
push
aam
inc
mov
pop
fstps
mov
dec
movsl
cltd
xchg
std
sbb
out
mov
ja
mov
pusha
cmp
push
or
fisubs
gs
out
sbbl
push
scas
icebp
icebp
mov
or
adc
inc
fadd
jmp
inc
push
mov
and
das
push
mov
xchg
push
mov
xchg
jge
lods
mov
pop
xchg
loop
int3
clc
or
xchg
mov
push
add
mov
int3
nop
lods
iret
xor
mov
mov
pushf
clc
popf
xchg
mov
std
xchg
pop
xlat
and
pop
mov
mov
mov
mov
ss
mov
in
rol
mov
call
push
fimull
xchg
inc
ret
mov
popa
int
call
enter
push
and
mov
negl
push
xchg
mov
adcl
jb
int3
aas
incl
cmc
es
fstps
pop
lods
fstp
sub
xchg
mov
pop
ds
lock
clc
cmp
aas
ret
push
les
outsb
mov
mov
inc
push
rcll
or
loope
icebp
in
out
cs
push
add
repz
out
jmp
pushf
out
fisubs
mov
push
sub
testl
push
push
adc
sub
jle
scas
clc
jp
pushf
leave
xor
das
pop
jne
jno
jb
inc
sbb
mov
arpl
dec
test
xlat
int
cmp
xor
push
shr
fsubrs
sub
push
pop
dec
cmp
cmp
pop
xchg
lea
mov
sub
inc
orb
mov
sub
xchg
addr16
fwait
jmp
jge
add
les
cmp
out
sarb
xchg
mov
popf
push
sbb
jl
sbb
pop
cmp
popf
aam
add
dec
xlat
outsb
sbb
sbb
out
jbe
mov
jmp
aam
xor
out
adc
repnz
inc
dec
push
test
out
popf
sahf
or
inc
pop
int
add
inc
jmp
dec
sbb
add
mov
jne
loop
out
call
and
pop
xor
mov
dec
xor
sub
jb
sbb
dec
inc
sbb
shlb
jmp
lods
clc
pop
js
in
fidivrs
loope
popa
adc
xchg
lods
push
shll
mov
mov
cmc
stc
dec
popa
mov
fs
test
stos
jbe
imul
jbe
pop
push
out
popa
fstp
pop
pop
clc
loopne
push
icebp
mov
push
pushf
push
sub
bound
outsb
jp
jp
and
mov
repz
fwait
imul
push
and
data16
pusha
sub
add
sub
std
pusha
iret
mov
and
stos
adc
les
fwait
mov
std
loop
push
out
outsl
fdivl
jae
dec
aaa
cmp
addb
cmc
jmp
sub
test
ret
push
dec
add
and
in
call
jl
cmp
dec
bnd
add
pop
pusha
mov
xor
lods
and
mov
sub
mov
in
mov
xor
fcos
dec
dec
push
rcl
test
loop
and
in
push
gs
jmp
insb
inc
and
scas
ret
int
jb
pop
cmp
repz
scas
push
add
or
and
sarl
or
sub
jecxz
jns
std
cmp
pop
or
mov
fwait
push
int3
or
fnstcw
sub
dec
mov
mulb
push
movsb
or
jmp
mov
and
push
jg
sbb
daa
mov
mov
pop
or
enter
addr16
and
das
shl
ss
mov
out
roll
jno
adcl
lret
inc
outsl
inc
and
adc
js
div
jp
xlat
inc
sub
std
mov
mov
lods
dec
and
and
mov
adc
dec
sbb
out
push
js
stos
mov
inc
pop
xstore-rng
cmpsl
inc
nop
addr16
cld
fcmove
xor
imul
push
ret
and
jge
ret
jecxz
add
adc
and
inc
cmp
stos
sub
imul
pusha
xchg
in
cli
fmulp
cmpsl
cld
andb
jmp
gs
fbstp
stc
jne
gs
outsb
jne
dec
stc
leave
add
repz
nop
bnd
pop
pop
or
into
sbb
or
adc
test
je
cmp
push
scas
xchg
push
add
adc
xchg
insl
mov
cld
jl
dec
ljmp
aam
push
ss
test
cltd
push
xor
adc
mov
inc
cli
std
cmp
mov
stos
hlt
pop
dec
out
jle
sbbl
insb
jmp
mov
cli
cld
lock
pusha
rcr
push
rol
and
sbb
jecxz
lods
push
dec
subl
dec
daa
lock
jns
leave
mov
mov
cmp
cmp
add
aaa
andl
aaa
lods
loopne
mov
dec
push
aaa
xchg
and
inc
sbb
in
or
mov
fwait
cmc
mov
iret
push
in
imul
xor
inc
lea
fldt
iret
les
test
frstor
sbb
lods
push
or
or
inc
cli
mov
inc
sahf
inc
mov
push
scas
cmc
mov
cltd
inc
stc
cmp
cmpsl
stc
dec
inc
sti
mov
pop
or
stc
call
iret
jb
hlt
and
aam
cmp
das
and
rcll
push
inc
movsb
addr16
dec
sbb
pusha
xchg
or
mov
out
jb
divb
nop
sub
and
cmp
fcoms
xor
out
adc
inc
cmp
mov
ret
ljmp
mov
mov
jae
popa
decl
cmc
js
mov
cld
sub
jmp
and
push
das
loope
out
push
cld
ljmp
adc
insl
ss
jnp
sub
or
sub
jg
enter
push
and
xchg
pop
insb
push
xor
adc
adc
stc
aas
out
fisubl
jmp
fisttpll
sti
add
sti
fildll
cmp
out
int3
into
sbb
add
push
push
jo,pn
push
roll
movsl
push
repnz
fisttpl
call
mov
jo
pop
push
xor
mov
cld
daa
or
js
fdivrp
adc
mov
jns
repz
int
movsb
add
xchg
add
cld
fstpt
mov
and
inc
pop
push
inc
scas
adc
inc
lcall
jmp
inc
mov
xor
add
int
and
xor
fs
icebp
inc
lea
pop
leave
loop
ds
in
loope
stos
shrb
insl
test
ja
sub
icebp
xchg
mov
push
xchg
repz
popa
mov
xor
imul
xlat
jne
dec
aam
xor
scas
add
or
jp
cmp
aas
sbb
xor
sub
pop
adc
movb
lcall
mov
dec
add
and
hlt
sbb
sub
sbb
push
sub
jg
movsb
in
cmp
vmovapd
adc
pop
xchg
fs
add
sbb
movsb
cmp
into
mov
or
mov
int3
xchg
test
mov
std
jmp
out
repz
hlt
ret
xchg
xor
push
push
les
sub
fs
push
mov
hlt
daa
mov
es
fistpll
es
mov
daa
add
out
daa
sbb
daa
push
out
pushf
mov
enter
int
and
pop
add
sub
fwait
repz
dec
sbb
cs
mov
pop
dec
hlt
push
dec
pushf
jne,pt
dec
inc
sbb
and
xlat
xor
mov
lcall
or
jecxz
push
test
cmpsl
xchg
xor
sub
cmp
jns
outsb
and
sub
test
push
xchg
scas
cmp
rolb
push
sub
sub
loop
jg
jne
adc
and
sub
les
pop
gs
mov
pop
popa
jmp
lret
xor
lret
sbb
pop
and
mov
mov
cmp
adc
push
outsl
adc
inc
push
sbb
or
loop
jns
and
cmp
dec
nop
push
push
add
xor
mov
stos
push
std
repnz
testl
out
mov
adc
mov
push
fdivp
test
cmp
shrb
hlt
xor
pop
jge
data16
lock
pop
fistl
mov
jne
sub
pop
xor
cmpsb
jo
loopne
add
add
dec
cltd
aad
mov
imulb
in
cmp
jmp
sti
rcll
cmpsb
icebp
add
mov
xchg
pop
movq
inc
cmp
loope
adc
xchg
test
jae
inc
xchg
dec
jge
ficomps
push
mov
jl
imul
mov
jbe
insl
sbb
sti
pop
push
dec
cmp
or
inc
out
mov
mov
cmp
jl
fiaddl
clc
mov
pop
out
jno
cmp
ljmp
sbb
mov
jne
dec
mov
mov
aad
push
jno
pop
andb
lcall
movsb
jg
ljmp
add
mov
pop
clc
insl
push
cltd
dec
cwtl
scas
dec
xor
addr16
in
mov
stc
in
fists
shll
adc
push
insb
xor
aad
aam
movsl
fstenv
mov
or
adc
imul
inc
pop
fsts
test
sub
dec
fisubl
inc
mov
push
or
dec
dec
pop
xchg
xor
mov
inc
mov
mov
ds
testb
dec
cld
hlt
test
pop
adc
and
negb
int
stos
push
repnz
fsts
in
sub
fists
std
enter
xor
js
cmpl
sbb
dec
or
lods
jb
jno
inc
fs
out
add
xchg
and
int3
mov
ror
orb
mov
les
add
sub
xchg
bound
adc
fisttpll
int3
sbb
mov
addr16
rolb
sti
xchg
dec
les
ret
jl
adc
dec
mov
mov
cmpsl
jo
in
mov
stos
add
xchg
xchg
jo
and
in
outsl
test
ds
enter
jb
je
aaa
inc
pop
or
sbb
jl
fcomp
insb
lahf
lock
mov
in
shlb
lahf
mov
mov
jge
insl
and
lret
or
cmp
cmpsb
lea
mov
dec
dec
ss
cltd
into
mov
mov
int3
jns
inc
loopne
and
rclb
mov
jne
mov
dec
mov
mov
out
inc
loop
cmp
pop
shlb
aas
mov
call
jns
rol
xchg
pop
shlb
dec
int3
test
arpl
test
push
in
aam
add
movsl
and
lahf
into
xchg
push
xchg
shrl
and
mov
adc
into
insb
sarb
adc
sbb
mov
fs
mov
and
ja
cmpsb
rcr
int3
shr
xor
and
pushl
cs
push
aad
cwtl
sbb
sub
mov
shrl
cwtl
adc
loop
iret
mov
cld
es
cmp
jl
xor
mov
cmp
stos
adc
fildll
in
pop
lcall
stos
and
and
xchg
jle
jp
mov
gs
outsb
dec
push
push
fnsave
loop
shrb
std
xor
roll
pop
lods
dec
pop
mov
sub
fcmovnu
xchg
data16
pop
int3
out
inc
sti
jge
add
fisubrs
mov
mov
lds
int
xor
cli
mul
iret
addr16
imul
popa
lds
xor
pop
xor
jo
pop
pop
rclb
pop
dec
mov
mov
lcall
into
cmp
movsb
imul
sahf
jp
xor
xor
mov
and
jg
sbb
mov
loopne
xchg
in
inc
nop
rcrb
inc
icebp
daa
mov
lock
clc
sbb
movsl
ljmp
pop
jmp
push
and
adc
inc
cmp
jl
mov
rcr
adc
mov
out
dec
inc
mov
stos
popf
lret
sub
and
jns
mov
jns
fs
das
mov
cmp
daa
sub
jnp
cmpsb
mov
push
lret
xchg
sub
les
pop
pop
pop
pop
in
rorb
dec
sbb
xchg
ja
mov
push
and
pushl
outsl
pop
insb
fistl
xor
sub
xchg
adc
fdivl
adc
addl
imul
ret
pop
xchg
cmp
mov
int
outsb
or
test
and
and
push
xor
mov
adc
jg
mov
push
adc
fstps
fists
into
pop
mov
test
cmp
or
mov
in
or
lret
jl
pop
sub
andl
pop
insb
sub
sbb
out
and
add
adc
sub
lock
pop
jg
fiaddl
mov
xchg
mov
mov
ds
push
in
out
xor
je
or
pop
xor
in
fists
ja
or
xor
mov
leave
call
mov
cmp
mov
and
push
cmp
orl
iret
inc
orb
gs
sub
stos
xlat
push
and
mov
out
and
jbe
repz
ss
lods
mov
ret
mov
ss
je
push
adc
scas
mov
into
add
xor
stc
xchg
xchg
mov
frstor
in
sbb
lods
in
mov
xorb
xchg
outsl
cmp
out
push
pop
jmp
mov
jo
fxch
icebp
adc
sbb
cmp
sarb
loope
outsb
and
sbb
mov
lods
popf
pop
and
sub
mov
xchg
imul
mov
loopne
stos
gs
es
daa
and
fmull
mov
adc
movsb
add
fistl
or
mov
xchg
int3
sbb
dec
mov
cmp
and
loop
andl
push
mov
pop
mov
leave
push
popf
pop
jecxz
sbb
and
into
pop
xor
fwait
and
add
fdivr
test
xor
loop
dec
in
dec
test
iret
xlat
in
popf
lahf
ret
sbb
scas
or
ds
jp
mov
data16
pop
pop
mov
xchg
mov
outsb
call
xlat
mov
fcoms
and
lret
movsb
imul
addr16
out
pop
or
sub
add
mov
xor
mov
aam
push
scas
mov
cmpl
das
mov
in
sahf
push
dec
xlat
xchg
push
ljmp
mov
push
insl
mov
out
dec
repz
dec
dec
adc
lds
clc
scas
lock
movsl
cmp
stc
rcrb
push
addr16
mov
adc
inc
inc
push
mov
jno
or
and
mov
mov
insl
mov
pusha
xor
xchg
xchg
int
std
outsl
les
jmp
and
das
xor
pop
movsb
pop
lcall
dec
sahf
add
xchg
test
mov
adc
aas
movsb
xor
pusha
scas
mov
adc
mov
mov
ja
rcrl
mov
xchg
sbb
scas
jns
adc
inc
leave
lcall
or
lock
mov
outsl
sarl
xchg
mov
adc
sti
adc
adc
xchg
jnp
mov
dec
ret
push
addr16
inc
rcrl
jp
xor
int
pop
mov
iret
shlb
jecxz
cmc
push
mov
sarl
test
pop
cmp
faddl
inc
popf
mov
and
and
jmp
cmp
pop
mov
adc
cmp
fs
das
div
pop
cltd
sub
add
push
add
loopne
inc
out
adc
mov
jmp
mov
sbb
dec
stos
xchg
imul
sbb
sbb
pop
lea
leave
inc
pop
leave
pop
imul
sbb
push
xor
bound
sbb
inc
and
aaa
std
in
lods
mov
in
leave
sbb
iret
push
sbb
and
push
xor
inc
cmp
in
outsl
int3
jne
xor
sbb
in
test
imul
xor
jp
jecxz
pop
jle
cltd
into
into
fisubrs
adc
sub
popa
jmp
mov
divb
cmpsl
mov
cmpl
jo
out
std
leave
je
mov
or
imul
xor
xchg
das
jl
int3
or
pushf
fcoms
into
fwait
test
or
ds
cmpb
pop
mov
aas
xor
icebp
int3
inc
adc
and
test
push
lods
gs
push
jb
loopne
lret
popa
and
jne
mov
test
in
aas
xchg
lods
repz
fisttpl
aaa
cld
dec
arpl
add
stos
pop
scas
jecxz
push
scas
lret
cmp
in
adc
mov
scas
mov
les
lret
and
xchg
or
adc
std
sarb
jb
sub
lea
cmp
pop
fldenv
call
es
outsl
push
cmp
inc
mov
xor
adc
or
or
test
ja
rorl
mov
xor
cld
test
inc
jmp
stc
push
nop
pushw
jnp
movsb
pusha
repnz
popa
sbb
push
jecxz
lds
imul
pop
sbb
pop
jge
arpl
push
xor
shlb
sbb
sbb
loop
outsl
xchg
scas
out
pusha
fldlg2
popa
int
jo,pt
mov
pop
arpl
dec
sub
shrb
pop
ljmp
test
lret
sub
adc
xor
rclb
jmp
pop
mov
aad
divl
mov
push
sti
add
roll
imull
sub
inc
xchg
and
ret
cmp
cmp
push
xchg
inc
call
imul
arpl
hlt
mov
into
adcb
inc
push
sub
jnp
xchg
pop
std
dec
sub
into
jb
fiaddl
inc
mov
roll
clc
add
ret
mov
cmp
mov
dec
gs
adc
pop
scas
mov
lret
rclb
adc
mov
pop
orl
add
pop
test
xor
nop
jecxz
adc
idivl
leave
sbb
fcomps
inc
pop
jnp
ja
decb
mov
dec
sahf
mov
dec
aad
xor
push
lahf
xor
ja
addr16
mov
scas
add
pusha
jecxz
jmp
sbb
jb
dec
sub
add
sti
xor
shll
xchg
xor
mov
addl
mov
gs
sub
test
jge
xchg
pop
test
jmp
lods
xchg
adc
cli
out
fs
int3
pop
jmp
in
je
das
pusha
int
adc
mov
pusha
inc
popf
jnp
pop
cmp
addb
mov
cmp
fld
leave
mov
sbb
inc
daa
pop
ja
imul
pop
mov
ret
aam
pop
lcall
cmp
sub
outsb
ja
nop
xchg
or
sarb
fs
in
add
nop
int
mov
notl
push
call
xchg
loope
inc
mov
in
xchg
pop
mov
icebp
mov
pop
test
lcall
push
aas
aaa
js
mov
add
sbb
jl
pop
inc
bound
mov
sar
jb
and
jo
ficoms
fsubl
jb
and
xchg
push
push
sbb
stos
insl
push
scas
lds
loopne
loop
and
fucomip
mov
dec
mov
mov
fcoml
jge
mov
mov
xor
stos
leave
jno
aad
fdivrp
mov
or
push
ja
aaa
ljmp
xchg
in
cmpb
inc
insl
das
push
or
scas
sbb
fbstp
pushf
sbb
adc
cmp
loopne
das
pop
lods
inc
imul
and
sarl
daa
or
push
icebp
rolb
movsb
fcmove
cli
mov
inc
lahf
mov
and
sub
sbbb
fbstp
mov
or
ljmp
push
cwtl
mov
das
negb
xor
push
arpl
xlat
orl
cli
dec
scas
mov
jo
js
dec
daa
pop
mov
call
cld
movsb
lret
dec
nop
mov
nop
adc
imul
popf
mov
mov
stos
mov
iret
out
movsb
out
fcoml
lret
test
popa
push
in
fisttpll
add
test
lcall
add
das
lret
leave
add
mov
popf
and
test
test
cwtl
dec
out
and
add
popa
dec
stc
cmp
mov
test
iret
dec
jmp
ljmp
ljmp
sbb
rcrl
push
jmp
movsl
gs
out
pop
or
adc
fwait
mov
pop
and
popa
or
adc
mov
scas
das
fmuls
sub
pusha
xchg
gs
fisubl
and
aaa
mov
les
scas
dec
dec
xor
mov
fwait
lock
mov
imul
sub
or
and
push
xchg
mov
js
test
cwtl
inc
add
mov
idivb
push
outsl
out
mov
pop
inc
ficoms
mov
add
int3
inc
cmp
or
inc
mov
int
imul
andl
jne
idivl
aas
cmp
mov
add
outsb
daa
push
or
mov
jno
xchg
lods
punpckhwd
insl
cmc
lods
imul
cli
jb
addl
cmpsb
dec
data16
xor
int
icebp
int
mov
push
push
int3
nop
pop
out
mov
adc
imul
imul
fcoms
out
xor
in
ljmp
imul
popf
cmp
dec
into
or
xchg
lds
mov
pop
lock
out
repz
dec
and
js
into
fsubrl
sbb
pop
aam
cmp
or
fbstp
test
push
call
jo
mov
enter
pop
sub
inc
aam
cs
out
clc
subl
sub
mov
and
leave
cld
js
push
push
dec
dec
unpcklps
lds
push
pop
mov
shlb
sub
mov
call
jo
cmpsl
push
leave
xchg
mov
clc
pushf
mov
fucomi
pusha
sub
adc
cmp
cltd
inc
in
mov
dec
sbb
lret
mov
gs
xchg
fcompl
cmp
push
cmp
inc
stc
imull
dec
lds
sub
xchg
fcomi
stos
or
jg
rorb
cmp
jnp
lds
xor
add
cmp
repnz
xor
mov
sbb
mov
adc
push
enter
push
inc
cmp
dec
xchg
iret
fnsave
xor
push
out
xchg
push
mov
cmp
mov
mov
mov
sbb
in
jns
lret
xchg
adc
jecxz
mov
pusha
std
adc
ds
push
mov
cli
xchg
jp
jae
mov
adc
pop
pop
mov
js
ss
mov
push
sub
sub
fdiv
add
xor
push
out
mov
movsl
pop
cs
push
dec
mov
rorl
mov
and
repnz
insl
inc
sub
mov
jbe
insb
inc
mov
gs
pushf
test
inc
test
push
dec
sbbb
jg
mov
sub
shll
into
pop
lret
nop
cmp
adc
jg,pt
out
xchg
mov
shrl
addr16
jnp
int
sbb
into
add
jo
jne
pop
add
and
hlt
and
das
adc
xchg
sub
and
push
in
negb
jecxz
fcmove
incb
inc
jecxz
jg
mov
pop
call
jp
xchg
inc
adc
sbb
rolb
pop
dec
dec
pushf
je
mov
and
rorb
mov
shrb
scas
out
xlat
push
mov
inc
pop
test
shl
inc
cs
push
mov
ja
sbb
das
negb
outsl
fsubs
lret
jbe
push
jns
xchg
jmp
mov
nop
push
fisttpl
movsb
push
ds
dec
jge
push
in
mov
inc
sbb
adc
lret
sub
lods
xchg
or
fsub
cmpsl
mov
ret
ljmp
lods
pop
pop
pop
dec
dec
xor
mov
lcall
dec
mov
inc
rorl
hlt
push
andb
fists
aam
add
in
push
pop
and
adc
sbb
popa
push
mov
jnp
pop
mov
pop
xchg
popa
rcr
and
sar
ret
xor
mov
out
or
or
cmp
mov
bound
cltd
test
lock
xchg
push
aaa
mov
mov
xor
loopne
in
ljmp
dec
test
sarb
xchg
cmp
add
jge
adc
scas
mov
jo
cmp
jnp
push
push
loop
mov
pusha
sbb
subl
fnstsw
iret
dec
cmc
adc
push
inc
sub
add
mov
mov
adc
pop
cmp
test
stc
rclb
pop
orb
stc
ljmp
mov
ret
inc
jne
test
inc
push
rcrb
shll
dec
lods
adc
mov
mov
out
push
test
add
push
cmp
dec
es
popa
cmp
pop
nop
imul
push
negb
cmp
dec
mov
and
ret
ret
mov
push
xor
rorl
sub
loope
gs
icebp
xchg
sub
pop
add
sbb
test
push
add
jl
lods
xor
inc
mov
repz
sbb
cltd
mov
cmp
xor
int
cmp
es
sbb
jno
lret
mov
popf
dec
loopne
pop
lret
or
cmpsb
xor
imull
cmp
loopne
pop
out
add
push
inc
into
or
cmpsb
sti
adc
scas
sub
call
cmp
in
inc
or
xchg
dec
mov
lods
mov
sub
pop
jns
push
cltd
xor
cltd
and
sbb
pusha
sbb
fwait
sub
or
jnp
or
mov
push
and
jo
dec
mov
jp
loope
xchg
xchg
pop
scas
pop
cli
jne
mov
cmp
cmc
xorl
inc
out
sbb
or
sbb
in
xchg
cmc
insl
add
mov
jno
insb
mov
cmp
test
ja
mov
inc
push
mov
dec
pop
fmuls
xorb
xor
movsb
xor
xor
sub
pop
js
add
xlat
out
cmp
std
pop
data16
pushf
leave
xor
gs
sarb
pop
mov
ljmp
push
scas
stc
mov
aam
cmp
cltd
add
outsb
clc
jns
call
lock
jo
add
pusha
sarb
add
inc
lds
push
pop
xor
ja
fists
or
lahf
stc
mov
movl
sbb
xchg
sbb
push
xchg
call
pop
push
pop
mov
cmc
stos
cmpsl
shll
lods
cmp
cmc
nop
xchg
aam
mov
xor
rcrb
idivl
jnp
movsl
pop
repz
inc
roll
fwait
aam
cmc
faddl
addl
leave
out
jmp
xor
jl
push
jle
mov
lock
and
inc
mov
loopne
jno
inc
dec
pop
jno
adc
dec
xlat
xor
fstl
ljmp
dec
inc
es
pop
into
jne
scas
dec
mov
rorb
jo
mov
lea
punpckldq
loope
pushf
or
push
nop
mov
ret
ljmp
xchg
jbe
and
fninit
aaa
fsubrp
cmp
xor
outsl
rcll
xchg
cltd
adc
rorl
jb
inc
mov
jbe
ja
das
in
icebp
repz
adc
xor
jg
idivb
faddl
or
cmp
add
movsl
dec
outsl
jmp
pusha
adc
mov
insb
fidivl
dec
mov
dec
pop
lahf
mov
les
cmpsb
jle
mov
or
sub
push
ss
aad
add
mov
fldt
pop
mov
xor
xchg
sub
lds
mov
push
enter
imul
push
jle
sbb
es
push
je
es
roll
sbb
xchg
incl
xor
pop
jle
icebp
loope
mov
mov
mov
dec
scas
movsb
cmpsl
fs
repnz
jns
mov
mov
es
in
repnz
ljmp
adc
sahf
mov
imul
daa
cmp
xchg
sbb
dec
pslld
dec
stos
shll
xchg
out
sti
or
into
gs
push
add
pop
xor
jle
xchg
or
adc
out
loopne
and
cwtl
jnp
sub
test
push
jo
incb
aam
test
xchg
or
mov
sub
pop
xchg
cmp
in
inc
ljmp
mov
push
add
sti
sahf
fwait
cmp
lods
push
and
sbb
and
arpl
daa
fbld
jne
dec
push
xor
push
cltd
sub
clc
and
leave
push
lcall
les
xchg
dec
std
mov
dec
in
sarb
inc
leave
clc
xchg
xchg
stos
pop
fs
insl
pop
loop
sbb
jle
xchg
push
xchg
fcmovne
nop
popf
lar
idivb
mov
inc
scas
push
sbb
xchg
dec
mov
test
outsb
add
test
xor
ror
test
mov
aad
cmp
inc
xchg
adc
pusha
adc
inc
scas
rorb
push
fnstenv
xchg
pop
fbstp
inc
adc
jbe
sbb
xor
mov
aas
sbb
ret
cmp
sub
sbb
sbb
cmp
xchg
push
dec
cld
lock
xchg
daa
sbb
inc
mov
test
mov
push
dec
mov
adc
sub
fs
jo
ss
inc
icebp
repz
inc
aam
sub
hlt
fmull
movsb
in
in
pop
mov
jo
dec
scas
jae
or
insb
cmpl
out
inc
and
sbb
lds
inc
mov
inc
lods
sahf
xor
nop
add
fimuls
dec
pop
ret
jle
lahf
xchg
sbb
imul
es
xchg
add
mov
xchg
cmp
lods
stos
xchg
insl
lahf
out
ret
xor
aam
adc
daa
and
arpl
sbb
pop
mov
iret
pop
das
arpl
add
js
addl
jne
mov
push
xor
lock
mov
aaa
push
or
cmpsl
pop
xchg
lahf
jecxz
aad
cld
mov
stos
lahf
clc
js
daa
push
push
pop
xlat
cmpsl
fisubrs
jge
sub
out
mov
fwait
sbb
mov
xorb
mov
fstpl
mov
ss
pop
test
mov
aaa
jnp
lret
fildl
fdivp
pop
inc
hlt
add
stc
movsl
aaa
enter
outsl
jno
jne
and
sbb
xor
push
testl
xchg
dec
cmp
mov
dec
sub
sahf
jbe
xchg
bnd
aad
std
in
aam
ss
xchg
jbe
repnz
inc
inc
push
jb
jge
sub
adc
fucomp
or
pop
lcall
mov
jmp
push
sub
push
xor
adc
sbb
in
pusha
inc
pop
loop
movsl
dec
test
loope
xor
xchg
sti
mov
mov
btc
addl
sbb
xchg
gs
imul
jnp
shll
xchg
add
push
bound
add
in
cli
shlb
sub
xchg
push
testb
add
adc
push
int
jne
cmp
fimull
jae
addr16
inc
ret
cltd
rcrb
mov
add
popf
arpl
jb
jne
out
or
push
push
in
add
inc
mov
or
mov
iret
int
mov
movsb
and
movsl
lret
cmp
adc
cld
sub
mov
or
sub
push
mov
xchg
sub
mov
gs
lret
sarl
hlt
mov
mov
aad
adc
push
xchg
mov
dec
insl
cmp
inc
imul
leave
ja
inc
mov
repnz
jae
sub
xchg
js
jb
adcl
dec
push
and
int3
inc
inc
jp
js
and
or
dec
push
push
rolb
mov
cli
out
mov
adc
mov
mov
ds
outsb
cmp
in
sti
or
jmp
xchg
jmp
aas
mov
lahf
sbb
lret
icebp
jne
outsb
cmp
subb
out
lods
and
cs
cmp
cltd
dec
aad
add
cmp
test
das
dec
jne
jmp
jnp
sub
mov
push
xor
jp
pop
dec
fsubrl
popa
mov
repnz
xchg
xlat
stos
inc
inc
enter
pop
xor
mov
xorb
inc
cmp
jecxz
push
push
mov
fdivp
mov
outsb
dec
inc
fdiv
int
rcr
jne
imul
repnz
push
fldcw
adc
stc
mov
push
cmpsb
in
or
dec
icebp
jge
int3
fnstsw
les
add
cmp
mov
sub
cmc
push
jp
xor
add
mov
dec
loope
inc
outsl
xchg
xchg
shr
pop
xor
jecxz
cli
es
or
ljmp
ret
jns
or
lods
xchg
xchg
push
adc
cmp
dec
in
rolb
orl
pop
jns
jae
mov
pushf
adc
testl
cmp
cli
shr
xchg
mov
adc
data16
jl
insb
addr16
push
sub
cmp
xor
leave
jns
jns
inc
mov
call
jns
loope
mov
fwait
mov
iret
stc
out
or
xchg
pushf
inc
dec
mov
fidivrl
jmp
ljmp
scas
xchg
push
repnz
push
aam
sub
xlat
in
rorl
ljmp
mov
lds
test
pop
xchg
in
mov
add
mov
jg
push
gs
pushf
adc
insb
out
jp
adc
mov
js
adc
cld
nop
jae
mov
and
out
out
and
adc
push
mov
cmp
repnz
std
bound
rcr
sub
fcomip
inc
ret
pop
lcall
cmpsl
dec
mov
in
dec
or
arpl
add
xchg
cmp
js
or
scas
cmp
ret
fs
push
cmpsb
mov
loop
test
sub
lret
stos
sti
dec
and
stos
sub
addl
mov
negb
mov
push
dec
push
xor
xchg
sarb
add
dec
jo
xchg
lcall
insb
push
jno
push
fistps
dec
insb
mov
ss
lret
out
ljmp
or
xor
aaa
xor
add
mov
fsubl
sbb
lcall
lea
loop
sub
adc
pusha
aad
out
in
mov
fidivl
clc
and
fs
fimuls
pop
mov
sahf
or
adcl
popf
xor
mov
repnz
test
cs
mov
fndisi(8087
add
add
dec
jl
adcl
loope
pusha
sbb
or
lods
int3
nop
push
popa
outsl
mov
and
mov
cmpsl
dec
mov
test
idivb
pop
pop
or
mov
inc
jle
repnz
sub
rcl
xchg
inc
in
addl
mov
or
mov
push
inc
dec
fiadds
add
sbb
sbb
sbb
xchg
add
cmp
popf
jne
loope
cwtl
sbb
inc
jb
gs
mov
dec
arpl
cmpsl
mov
sub
movsb
aaa
fnstenv
jmp
xor
dec
sub
push
pop
mov
and
stc
cli
aaa
mov
dec
scas
insb
xchg
aam
pop
clc
movsl
sbb
push
push
idivl
mov
jne
xor
sbb
sbb
xchg
popf
pop
aaa
jo
push
sahf
cmp
mov
sbb
lret
xor
adc
imul
mov
push
and
xchg
call
pop
and
repz
pop
xchg
cmpsb
xchg
addr16
mov
sub
xor
push
sbb
ds
cli
int
sbb
cs
or
push
rol
jg
clc
dec
sub
cmp
mov
addr16
aad
lea
push
adc
push
or
rcll
mov
inc
sub
xchg
addb
andb
mov
mov
data16
repnz
insb
sub
dec
sub
stos
inc
mov
add
or
cmp
cmp
or
fldt
or
fistl
inc
hlt
lret
mov
xchg
adc
fisttps
int3
sahf
div
fmuls
cmc
sub
testb
rcrb
mov
das
stos
xchg
pop
test
int3
out
in
mov
shrl
lock
adc
xor
aas
inc
mov
xor
imul
add
pop
cmp
je
cmp
jne
ret
mov
repz
les
sub
repz
movsb
pusha
ds
pop
mov
test
pop
fwait
icebp
aaa
push
xlat
push
cmp
mov
mov
pop
pop
mov
mov
sbb
stos
dec
movsb
xchg
not
aad
flds
jnp
jecxz
and
and
jp
add
lcall
and
lcall
lahf
btc
add
cli
xchg
stc
nop
adc
mov
cld
push
jae
add
sub
push
xchg
dec
mov
fisttps
loope
sbb
jo
out
int3
cmp
int3
dec
nop
xchg
fimull
and
lods
cmpsb
mov
and
adc
cwtl
insb
xchg
mov
daa
pop
dec
cltd
daa
dec
xchg
pop
mov
sbb
cmp
jb
mul
sub
lret
test
mov
test
insb
loope
push
or
mov
andl
cmpb
dec
aaa
push
lock
sbb
in
adc
mull
shrl
xlat
icebp
lods
push
lods
or
dec
inc
out
dec
pop
mov
sbb
rcll
jnp
aaa
add
or
nop
mov
pushf
sub
stos
jg
sbb
leave
or
insl
popl
into
scas
add
and
pop
sbb
or
cmp
test
in
jle
cmp
push
clc
test
sbb
nop
test
dec
mov
mov
mov
test
movsb
xchg
inc
xchg
mov
cmp
xchg
js
and
test
mov
es
xor
shr
push
mov
sub
mov
adc
pusha
mov
test
imul
test
sbb
sbb
aaa
add
mov
mov
mov
fidivs
bound
sub
adcl
pop
nop
lods
int3
jb
push
jge
in
test
insl
imul
mov
xchg
mov
into
nop
loop
add
sbb
xorl
lret
sti
cli
dec
in
inc
or
dec
lret
sub
fldt
outsl
inc
scas
fisttpl
xchg
pop
jp
pcmpeqd
popa
add
mov
sbb
aam
inc
repz
sbb
mov
stos
inc
sub
mov
or
movsl
push
jp
adc
pushf
testl
scas
xor
popa
repz
push
push
sub
dec
sbb
push
push
std
mov
hlt
xchg
sub
pop
sbb
cmp
shlb
outsb
cmp
lcall
jno
arpl
xchg
push
dec
outsl
adc
push
jle
scas
outsb
scas
inc
add
fsubl
repz
outsb
insl
sub
les
sbb
push
sub
xor
icebp
out
fbstp
cmc
ljmp
or
lea
adc
mov
adc
pop
rcll
inc
adc
out
xor
test
es
pop
xor
inc
stos
and
stos
add
jns
test
stos
push
sti
mov
movsb
dec
mov
jge
inc
nop
xchg
lock
test
clc
shrl
xor
and
test
lret
sti
loope
xor
xor
mov
push
lret
sbb
scas
ret
jmp
mov
cltd
int
scas
mov
insb
jmp
je
stos
movsl
jno
mov
mov
sahf
mov
in
sub
int
addb
jp
insb
mov
gs
mov
adc
clc
cmp
add
push
es
nop
dec
lret
push
test
in
and
xor
lret
push
repz
add
adc
dec
push
addr16
popl
sbb
enter
std
addr16
mov
lret
xchg
popf
int3
int3
mov
push
icebp
xor
paddsw
push
pop
adc
lods
fs
cltd
fs
mov
adc
xor
mov
fwait
mov
fs
push
sar
jge
add
jge
in
lret
pop
add
pop
push
rcrl
sbb
ljmp
ret
mov
xlat
ror
int3
in
fistps
mov
in
in
rcrb
gs
xor
dec
sbb
iret
pop
stos
dec
loope
inc
sahf
jmp
cmp
add
jp
lret
cmp
sbb
pop
mov
cmpsb
xchg
xchg
lret
push
imul
adc
dec
mov
fbld
xchg
aam
push
mov
pop
mov
push
mov
xchg
sub
les
cmp
sbb
loope
jbe
data16
add
jb
in
loope
push
xchg
push
out
les
mov
dec
pop
inc
aas
or
insb
jmp
push
cmp
jmp
xchg
loope
mov
lret
sub
fs
push
mov
xchg
and
rorl
hlt
fsubl
xor
adcb
dec
mov
pop
dec
inc
dec
outsl
aam
shll
push
out
pushf
rolb
aas
adc
mov
or
jne
iret
jl
bound
sub
dec
cwtl
mov
jmp
xlat
push
mov
adc
aam
push
sbb
mov
arpl
in
lret
mov
les
push
xor
xchg
and
mov
push
dec
push
gs
xchg
call
fucomip
xor
out
shrl
fs
jo
outsb
ja
imul
in
in
pop
inc
cmp
out
mov
add
aas
push
and
shll
jae
out
and
inc
rorl
push
jl
push
pop
pop
mov
mov
xor
js
jle
dec
mov
mov
xchg
add
bound
loopne
in
movsl
sbb
fmull
push
sbb
jg
test
fildl
sub
and
push
cmp
stos
mov
mov
mov
pop
mov
in
filds
popf
adc
and
fdivl
pop
xchg
mov
sub
dec
add
test
jp
in
pop
out
pop
cmp
adc
mov
test
in
test
pop
mov
jae
js
std
popf
daa
cmp
jge
push
and
mov
mov
add
push
mov
dec
sub
insb
sbb
clc
call
xchg
add
in
sbb
jp
mov
inc
repz
es
je
cmp
dec
lock
xlat
mov
fldl
mov
xor
arpl
mov
jmp
cmp
fistps
es
xchg
pop
adc
xchg
jnp
push
das
lods
clc
pop
or
sbb
mov
pop
test
sbb
mov
cmp
jo
push
cs
mov
adcb
sub
mov
jbe
add
mov
jne
sahf
mov
mov
xchg
adc
xchg
inc
fcmovu
mov
out
jge
mov
call
scas
adcb
rcrl
ss
xchg
dec
xchg
loopne
popa
pop
fstpl
cmpsl
dec
enter
aas
and
mov
lea
push
lret
fisubl
or
push
ja
jge
fists
fmuls
mov
inc
mov
pop
insb
cmp
jp
gs
pop
and
shlb
pop
mov
mov
adc
pop
mov
or
sub
popf
xchg
mov
cmp
stos
mov
add
imul
sub
stos
fscale
jmp
push
add
jge
jmp
cmp
sbb
jne
jg
andl
orb
xchg
js
inc
cmc
or
push
pop
sar
push
movsl
mov
movsl
cmp
and
push
cli
lret
fwait
scas
jbe
jae
cmp
shll
fcmovnu
popf
sub
fnstsw
andb
mov
add
add
cltd
lret
aaa
cmp
mov
enter
jmp
ret
inc
push
pop
cmp
jno
xorb
xchg
movsl
pop
adc
inc
rolb
movsl
cmp
sahf
mov
cs
in
inc
push
push
scas
and
xchg
and
fwait
repnz
mov
call
iret
mov
idivb
mov
xchg
aad
add
xlat
rorl
or
pop
cmp
mov
sub
rorb
mov
mov
cld
pop
sbb
adc
mov
inc
pop
pop
popa
outsb
mov
imul
and
cli
sahf
inc
mov
sub
fiadds
push
js
jmp
or
jne
insl
in
std
pop
and
sub
sub
cld
inc
xor
pushf
cmp
sbb
loopne
cmp
inc
fldt
out
pusha
popa
pop
outsl
jbe
sbb
adc
xchg
ret
test
fwait
and
add
rcll
sub
jmp
push
fsubrl
lcall
push
dec
cmpsl
xor
push
cmp
fstpl
pop
add
pop
jnp
out
test
sub
lock
jp
xor
stc
mov
jle
adc
xchg
addr16
sbb
adc
mov
arpl
test
addr16
xor
je
pop
imul
in
and
call
xchg
sbb
stos
test
cmc
sub
in
je
iret
adc
ja
mov
lret
push
movsl
shl
add
pop
push
je
arpl
cld
sbb
sbb
jg
insb
xchg
data16
arpl
into
stos
mov
xchg
ds
and
xchg
mov
enter
out
sub
cmp
push
sbb
fistps
cmp
arpl
push
imul
or
test
mov
orl
adc
inc
loope
inc
sbb
int
sbb
xchg
nop
mov
add
vmovhps
adc
dec
adc
pop
or
cmc
out
xor
andl
int3
pop
sbb
outsl
push
inc
icebp
xchg
enter
push
adc
inc
pop
jl
lds
jo
add
or
mov
ffreep
div
sub
pop
fwait
and
dec
or
xlat
xchg
inc
or
xor
pop
test
ret
fisubl
movsb
scas
mov
cmp
adc
adc
jae
fldt
shrl
sbb
dec
stos
inc
aas
mov
inc
aad
inc
jno
mov
jmp
leave
xchg
repz
repz
ja
imull
jo
jo
pop
inc
push
aad
out
negl
fdivrl
dec
in
stos
inc
mov
insb
mov
test
sbb
jnp
or
int3
lds
add
adc
int
fs
cmp
dec
mov
and
xchg
aad
in
mov
mov
mov
loop
iret
int
popf
orl
cmc
shr
orb
lahf
mov
push
mov
push
pushf
xor
xchg
or
push
nop
popa
mov
gs
jb
sub
or
inc
xchg
xchg
cmc
imulb
mov
and
js
je
repz
mov
clc
mov
push
push
in
push
cwtl
popa
addr16
imul
push
outsb
xorl
mov
cmp
arpl
lret
je
clc
mov
xchg
arpl
cmp
push
lock
in
push
js
cld
push
mov
and
sub
mov
push
xor
jl
test
sbb
cmp
lret
lahf
outsl
push
aam
repnz
je
loope
faddl
pushf
lock
sub
add
pop
lahf
lcall
fnstenv
mov
cwtl
inc
lds
bound
jge
repnz
in
enter
and
lahf
lahf
stc
loopne
fldenv
xchg
cld
pusha
mov
dec
mov
pop
mov
bound
cmp
mov
out
push
add
shrb
nop
and
dec
jmp
ds
jmp
jbe
aad
dec
xor
sub
test
out
imul
mov
pop
mov
mov
sub
cmp
lcall
aas
and
push
jecxz
pushf
push
jp
subl
inc
adc
les
mov
loopne
sbb
icebp
not
cmc
out
addb
xlat
mov
rclb
sub
roll
and
xor
and
pop
push
leave
mov
pop
into
and
arpl
es
xchg
mov
pop
sahf
inc
les
jae
loope
icebp
add
in
jnp
sub
out
add
xchg
rol
pushf
xlat
sahf
jp
fwait
std
iret
xor
in
inc
fidivs
mov
mov
clc
fcmovb
cmp
in
sbb
sbb
dec
cmpsl
filds
scas
ljmp
lahf
or
inc
lcall
sbb
sarl
mov
cltd
ss
adc
gs
mov
dec
arpl
jp
jns
pop
repnz
test
in
jecxz
adc
pop
inc
aas
add
inc
add
mov
adcl
mov
je
fbld
cmpl
insb
inc
stos
adc
frstor
adc
sub
imulb
fadd
mov
and
insl
arpl
sbb
aas
pop
shll
pop
icebp
mov
inc
xor
shrl
ds
dec
xchg
push
jbe
and
arpl
ds
jle
mov
pop
stc
xlat
and
push
pop
xchg
add
es
stos
rcrl
cmp
and
push
pushf
cmp
inc
aad
mov
xchg
xor
jnp
or
cmpsl
popf
jo
fisubs
scas
adc
or
and
xor
or
cs
xchg
add
jp
xor
mov
loopne
icebp
sti
or
roll
sbb
rol
sbb
dec
cmpsl
outsl
jae
mov
lock
cmp
dec
mov
cmp
dec
shl
ss
add
cli
push
mov
or
xchg
test
mov
and
cmp
push
inc
ja
fldenv
xor
mov
outsb
xchg
cmp
add
movsl
xchg
jno
mov
insb
repnz
sub
cmp
mov
cmpsb
out
add
aad
pop
adc
sbb
ret
dec
xchg
adc
pop
lods
scas
shll
test
cmp
clc
adc
ja
and
jmp
push
jle
lcall
xchg
dec
rcrl
cli
jnp
add
stc
sahf
fsubrs
call
cmp
mov
arpl
push
std
mov
add
jne
and
rolb
test
insb
and
std
sbb
arpl
inc
fwait
push
scas
aaa
cli
int3
imul
add
sti
dec
mov
xchg
or
mov
outsl
sub
xor
jns
shl
fst
cmp
mov
xchg
filds
outsb
imul
mov
mov
cmc
cmp
lds
mov
cmp
hlt
sbb
pop
mov
or
sub
mov
pop
dec
imul
je
lret
mov
xchg
and
mov
jae
and
mov
cmp
mov
lret
mov
mov
cmp
imul
fyl2x
andl
outsb
inc
inc
jp
dec
fcoml
cmpl
les
cwtl
pop
and
lcall
inc
mov
sub
fistpll
and
jno
stos
out
xor
out
int3
jp
xlat
cmpsl
les
inc
xchg
iret
push
mov
mov
sbb
inc
jl
dec
push
lods
subl
daa
jo
test
dec
add
dec
push
mov
les
test
lahf
add
mov
xchg
push
and
insb
andb
add
gs
pop
out
or
push
repz
sub
jne
mov
lcall
incb
mov
notb
test
mov
sbb
jns
cmp
clc
es
add
jmp
imul
movsb
xor
rorb
btc
xchg
push
loopne
cmp
sub
jecxz
test
ja
mov
pop
or
jo
cwtl
push
xchg
dec
sbb
dec
sub
sbb
dec
enter
leave
test
pop
jbe
add
lods
or
lock
jo
testl
or
vpextrw
lds
lods
je
in
data16
push
cmp
cmp
in
push
testl
lcall
aam
loop
repz
fildl
cmpsl
cmp
mov
add
shlw
jmp
icebp
sub
jle
push
gs
push
cmp
dec
loop
mov
jle
xchg
inc
sarb
in
xchg
add
xlat
sbb
mov
or
jge
test
fisttps
add
pop
cmp
lods
adc
int
xor
lahf
adc
add
inc
aaa
jns
mov
out
sbb
outsl
and
push
push
jne
fmuls
xlat
js
xchg
jg
addb
add
and
shlb
inc
dec
dec
lds
leave
std
hlt
lret
dec
sbb
cltd
aad
pop
pop
fcoml
or
enter
xorl
xchg
add
pusha
cmp
jg
lret
into
popf
jecxz
test
and
pop
and
sahf
mov
inc
add
mov
inc
mov
pushf
ud2
ret
lods
push
scas
arpl
push
movsl
fprem1
pop
fs
fiaddl
int
or
inc
lds
cli
mov
lock
add
outsb
das
popf
mov
mov
cmc
push
loop
xchg
das
jno
fistl
test
fsub
hlt
sbb
pushf
mov
xchg
push
aad
or
ljmp
js
nop
in
mov
add
sarl
imul
fmulp
fildll
fdivs
xchg
js
in
mov
jecxz
std
les
call
jno
cmp
sbb
inc
jl
xchg
fdivrl
xor
movsb
cmp
sbb
imul
dec
cmp
inc
push
add
add
push
xchg
cmp
sahf
ret
push
mov
scas
dec
nop
call
jae
mov
and
pop
shlb
mov
iret
mov
mov
mov
dec
push
dec
movsl
out
mov
and
lret
jg
fistpl
into
cmp
push
sahf
xchg
jns
or
mov
fs
hlt
movsl
wbinvd
sub
mov
dec
xchg
xchg
into
mov
pop
pop
push
aam
adc
daa
add
adc
mov
mov
ss
cmpsl
lds
test
push
and
xchg
jne
test
inc
imul
push
inc
test
mov
aaa
in
in
mov
ficomps
pusha
scas
clc
test
daa
test
xchg
std
xchg
pop
and
jg
arpl
xor
jle
push
fdivrs
cmp
cld
cld
into
bound
cmp
xor
les
mov
lods
aaa
cwtl
jmp
lods
xchg
mov
cmp
das
push
sub
pop
adc
je
imul
inc
lcall
xchg
lods
iret
mov
dec
xor
lret
jo
repnz
jnp
mov
repnz
xchg
dec
xchg
lea
xor
test
mov
fisttps
jg
or
mov
loopne
shrl
out
jo
xor
arpl
add
jne
dec
or
push
inc
cs
arpl
mov
call
cmp
test
sbb
cmpsl
push
xchg
add
cld
mov
out
out
out
pop
insl
add
xor
cmp
inc
out
and
add
ss
xchg
gs
add
push
inc
and
fsubs
insb
out
pop
pop
mov
dec
jl
push
stos
push
jle
or
es
loopne
mov
lret
pop
sbb
or
add
popf
mov
pusha
add
pop
adc
out
adc
mov
cmpsb
les
rcr
jbe
scas
test
imul
repnz
dec
lds
pop
push
jne
mov
jmp
xchg
xor
cmp
in
xchg
iret
sahf
push
cmc
cmpb
enter
sbb
sbb
sbb
push
dec
mov
xchg
fcomps
cmc
mov
adc
andb
push
sub
sub
int
hlt
sarb
rcl
push
push
fs
mov
fstpl
imul
inc
div
outsl
loop
ja
sbb
dec
sbb
mov
mov
mov
pop
xor
cmp
jbe
mov
and
hlt
sbb
repnz
mov
push
mov
xor
loop
ret
sbb
mov
add
mov
repnz
ficoms
or
ror
inc
mov
or
cmovle
out
and
cmp
dec
shr
pusha
repnz
setns
inc
cmpsb
add
adc
push
dec
cltd
imul
jno
icebp
mov
sub
xchg
jp
in
call
bound
shl
or
push
mov
and
out
inc
ds
adc
les
dec
cs
fildll
ret
movsl
mov
imul
jmp
repnz
dec
sub
stc
cmpsb
fdivrl
sti
lea
insl
outsl
jmp
push
rcrl
andb
ret
push
xchg
or
push
jl
invd
daa
leave
sbb
out
lret
leave
jb
stos
ss
cltd
movsl
mov
ljmp
lret
mov
push
mov
jns
stos
jg
dec
fistl
inc
sti
into
rcrl
in
cmp
and
lock
pop
add
xchg
outsl
mov
daa
out
scas
int3
insb
add
fwait
cmc
shlb
mov
arpl
or
inc
movsb
pop
daa
push
inc
adcb
adc
repnz
lods
sub
cmpsl
andl
loop
test
fidivl
jne
mov
and
test
push
jl
ljmp
push
fdivl
fdivl
mov
sbb
scas
sbb
int3
dec
xchg
or
pop
and
movsl
popa
sub
pop
lddqu
mov
and
dec
mov
xchg
jge
loope
or
sbb
pop
dec
insb
mov
push
mov
insl
imul
cmpsl
test
sub
mov
out
inc
icebp
fistpl
out
add
stc
jnp
jbe
mov
mov
xchg
xchg
out
adc
push
dec
imul
andl
add
cltd
pop
int3
imul
cmpsb
sub
xchg
mov
push
lcall
imul
cmp
movsl
in
dec
cwtl
negb
incl
sbb
test
mov
and
popa
imul
addr16
out
ret
push
ret
and
out
push
fidivs
xchg
int3
ret
sbb
push
bound
lods
cmp
popa
ds
in
mov
xchg
push
fldt
pusha
xchg
and
jp
aaa
pop
adc
add
push
aam
insl
adc
cmpsl
data16
or
addr16
or
push
and
jmp
cmp
cmp
xchg
push
outsb
stos
mov
cmp
mov
jge
outsb
jg
and
mulb
mov
jo
lret
daa
fwait
mov
jo
shrl
in
popf
push
out
pop
push
sub
xor
mov
add
sbb
mov
in
push
xchg
sarb
sub
push
and
stc
push
sub
jae
cmp
in
jns
or
loopne
iret
add
and
cmpsl
or
in
or
add
rorl
adc
test
xchg
js
out
mov
and
in
lcall
mov
mov
jno
or
or
dec
xor
mov
sub
and
enter
into
in
gs
jl
outsb
mov
push
shr
std
lret
out
out
into
sub
stos
clc
les
pop
mov
dec
mov
rcrl
in
cmpl
in
mull
sub
repz
test
fstl
xor
sub
cmc
fadds
loope
jb
lds
stos
pop
out
push
test
rep
sbb
cmc
pop
outsl
pushf
push
je
push
xabort
lahf
xor
mov
push
jge
iret
fnstcw
inc
loopne
jmp
pop
rcll
xchg
mov
adc
xchg
jae
and
dec
jle
js
push
sarl
les
adc
scas
shlb
dec
dec
popa
pop
in
mov
jo
sbb
inc
std
lock
adc
inc
fmuls
push
mov
dec
mov
cmp
mov
hlt
pop
mov
inc
sub
add
subl
int3
jl
jno
push
cmpsb
sarl
out
ss
ret
dec
xchg
lds
test
sbb
push
std
jnp
mov
pushf
push
fiaddl
xor
iret
sbbb
dec
clc
sub
cmp
pop
stos
sbb
shl
or
mov
xor
test
and
dec
mov
inc
lret
loope
int3
lret
insb
stc
add
jo
pop
push
dec
loopne
adc
leave
data16
mov
imul
sbb
mov
xor
out
rolb
mov
cmc
push
aaa
jbe
add
mov
popf
dec
mov
jl
jnp
stos
dec
loope
cmp
push
popf
lds
inc
dec
pushf
mov
pop
cmp
dec
ljmp
pop
adc
out
mov
clc
mov
xchg
push
insl
cmpsl
paddw
push
xchg
adc
or
sbb
shlb
cli
pusha
iret
fnstcw
clc
jp
ds
push
mov
inc
and
jl
notb
cmp
call
lock
pop
pop
pop
xor
sbb
sbb
dec
push
inc
sub
push
push
sahf
inc
xor
bound
fnstsw
mul
sbb
inc
ds
xor
xchg
hlt
xchg
jb
loopne
inc
jmp
pop
sub
pop
push
test
mov
jns
js
insl
or
cltd
sbb
push
jno
cmp
push
je
jbe
sbb
movsb
mov
test
adc
jns
in
push
pop
sub
ss
daa
out
dec
popa
bound
xor
sbb
test
jbe
inc
ret
xor
imul
loopne
jle
in
test
std
scas
push
add
test
std
push
rcrl
push
in
sub
outsb
jmp
sbb
cli
xchg
adc
mov
mov
jbe
xlat
out
testl
pop
int3
leave
outsb
mov
mov
mov
loop
or
test
stos
movsl
rcl
lahf
test
push
movsb
pop
push
clc
add
or
popf
bound
xorl
push
in
cltd
cmp
mov
out
and
xchg
xchg
inc
dec
fucomip
hlt
mov
ljmp
push
call
pop
push
mov
adc
insl
and
repz
shr
sbb
or
popa
in
scas
push
cmp
sbb
push
sbb
xlat
dec
xor
lods
outsb
jno
cmp
jbe
add
add
test
pusha
xchg
sub
mov
add
lret
sahf
hlt
aam
fsubs
jl
or
aas
jne
nop
push
mov
sub
ret
sbb
seto
push
fiaddl
lret
mov
fildl
add
in
xchg
rolb
lea
gs
dec
les
adcl
xlat
pop
insb
sbb
rorb
inc
stos
sub
adc
mov
push
pop
mov
xor
fcmovu
shll
enter
rorl
xor
fadd
push
gs
pop
xor
jge
stc
jle
fcmovu
popa
cmp
pop
xlat
and
and
sbb
test
shrb
insl
fldcw
and
jnp
jo
enter
jo
push
lds
xchg
mov
jo
loop
xchg
stos
jp
in
in
jmp
inc
push
cltd
ss
pop
fldl
cli
add
dec
outsl
xchg
pop
and
push
mov
div
jnp
adc
jo
ds
adc
mov
push
adc
testb
cmp
and
lret
jb
or
lret
sub
push
test
add
out
iret
xor
imul
or
mov
repz
inc
lahf
inc
xor
int
mov
sub
les
loop
pop
and
add
cmp
inc
test
sbbb
lcall
dec
mov
negb
inc
aad
out
pop
and
insb
mov
inc
inc
jp
cmp
pop
sub
mov
fstpt
inc
enter
fnsave
or
inc
push
imul
lods
notl
sub
jnp
mov
mov
sub
cmpsl
pop
push
popa
xor
jg
dec
cmp
int
or
xchg
pop
int3
ja
int
lea
xor
and
sub
lock
and
mov
push
xor
push
repnz
test
mov
lea
jns
ss
sub
sub
dec
sub
outsl
gs
lcall
sbb
data16
outsl
aad
sahf
cs
loope
add
or
jnp
inc
cs
cmp
lods
xchg
aad
mov
roll
jnp
lret
push
adc
xchg
jle
mov
or
pop
sub
aaa
cmpsb
cli
daa
xchg
jecxz
mov
aaa
mov
shlb
mov
xlat
jmp
mov
jnp
imul
add
xchg
not
es
fcoms
sub
dec
xor
fimull
aad
push
jne
std
xchg
add
or
push
or
lret
in
sub
loopne
sbb
clc
mov
aad
or
les
je
dec
add
xchg
pop
sub
mov
wrmsr
ds
imul
movsb
xor
cltd
push
lret
add
pop
sbb
movsl
sbb
mov
push
repz
jo
sbb
xor
int3
mov
sbb
sub
mov
int
test
out
outsb
mov
mov
or
lea
popa
je,pt
mov
xchg
inc
mov
shlb
in
pop
push
mov
mov
movsl
mov
daa
dec
subl
xchg
xchg
shlb
stos
in
dec
aam
aas
leave
pop
adc
push
mulb
lea
add
pop
push
jae
int
add
frstor
xchg
lea
sbb
aam
cmp
jb
jno
jnp
adc
imul
inc
lea
in
or
stc
push
lcall
cwtl
test
adc
test
or
sub
cmc
inc
scas
mov
add
push
data16
fs
lods
in
leave
mov
imul
pop
xchg
mov
mov
adcl
out
sub
dec
call
mov
lret
sub
mov
xor
subl
push
xor
out
add
adcl
arpl
jmp
adc
mov
sbb
lahf
mov
mov
dec
push
mov
cmp
gs
ror
stc
test
dec
pop
in
aaa
jne
mov
jnp
xchg
cmp
pop
ds
add
scas
or
mov
push
and
mov
rcrl
nop
test
fmul
cmp
lret
adc
push
lock
out
stc
out
test
stc
cli
imul
mov
lret
jge
mov
sti
aaa
repz
frstor
mov
loop
add
and
jecxz
cwtl
divl
pusha
mov
sub
aaa
adc
xchg
adc
xor
xchg
mov
cli
mov
lcall
sahf
xor
inc
sub
add
clc
jns
sbb
inc
jnp
jecxz
xchg
adc
push
fiadds
mov
xchg
daa
dec
iret
mov
adc
notb
pop
fwait
jno
pop
call
cmp
mov
push
movb
mov
shrl
test
mov
xchg
pop
mov
lret
lods
cmpsb
mov
sbb
icebp
push
mov
je
into
pusha
cli
or
mov
arpl
out
ds
nop
stos
test
mov
inc
test
fnsetpm(287
std
or
xlat
ss
scas
aad
mov
mov
or
shl
xchg
mov
mov
repz
mov
xchg
shll
loope
fdivrl
pop
das
lds
popl
out
and
imul
aaa
jg
sbb
cmp
roll
pop
ljmp
stos
popl
fadd
sbb
push
mov
and
inc
loop
push
add
xchg
dec
mov
jo
sub
addr16
stc
outsl
mov
and
leave
icebp
xchg
mov
inc
mov
loope
cmpsb
mov
out
imull
aaa
or
test
sub
in
jp
mov
mov
lret
mov
cmp
pop
adcl
mov
sbbl
stos
inc
pop
mov
mov
pop
out
test
cmp
insl
test
push
mov
xchg
mov
xor
or
mov
pop
dec
mov
in
loopne
mov
jae
xchg
aam
and
rorb
loop
jae
test
nop
mov
aaa
bound
in
and
test
and
clc
xchg
mov
cltd
test
inc
sahf
adc
cli
mov
mov
jge
adc
xor
jecxz
mov
daa
jecxz
and
xchg
pop
aad
hlt
ljmp
inc
mov
lods
cwtl
or
stos
ljmp
clc
out
dec
mov
shl
pop
pusha
ss
xchg
jle
mov
stc
cmp
mov
lcall
fcoml
and
xchg
lds
xchg
cmpsb
adc
pop
mov
repnz
cld
xchg
test
pop
int3
jns
std
mov
gs
aas
jns
sahf
cmp
in
sub
movl
sub
inc
mov
sbb
push
pushf
cmp
loopne
or
xor
cmp
adc
js
cwtl
dec
fisubl
rcrl
xchg
subb
loop
icebp
pop
call
lret
out
adc
pop
push
iret
popa
jae
mov
dec
sub
pop
xor
nop
pop
int3
ja
sub
mov
fs
shr
mov
push
xchg
mov
movsl
push
xor
addr16
xor
inc
loopne
loop
aas
loopne
loope
rcll
sbb
sbbb
mov
or
jnp
rcrl
mov
sub
mov
cmp
dec
jecxz
mov
in
push
out
xchg
cmovb
arpl
jp
scas
scas
cld
xchg
push
clc
fwait
ds
mov
sbb
mov
ljmp
sbb
push
pop
imul
ret
adc
ds
fwait
sbbl
cwtl
adc
sbb
or
loope
enter
ljmp
movsb
mov
push
outsl
mov
inc
pop
jmp
xor
jnp
xor
mov
jecxz
stos
aad
push
and
ret
repz
adc
cli
mov
pop
sbb
lcall
sub
jae
sti
xchg
mov
pop
push
dec
cmp
mov
push
sub
lds
xchg
xchg
out
jo
push
xchg
sub
jg
fldt
mov
mov
mov
cmp
push
inc
repz
xchg
xchg
sahf
push
das
fwait
push
int3
mov
inc
test
and
data16
inc
mov
repnz
mov
divl
lods
mov
js
inc
subl
or
test
pop
xor
testl
in
jb
xor
std
adc
cs
xchg
sarl
popf
and
fstpt
lcall
movsb
pop
jmp
lret
scas
fwait
mov
cmp
into
add
mov
pop
arpl
mov
mov
mov
dec
inc
mov
out
or
lret
dec
outsb
push
ss
fisttpll
mov
popa
lods
lds
ss
lret
nop
add
test
rcr
cmp
dec
test
shlb
inc
imul
test
add
and
loop
mov
xchg
addr16
push
nop
repz
adc
push
mov
push
shlb
sbb
sub
mov
out
add
pop
stos
std
in
pop
inc
fs
pop
push
mov
mov
adcb
mov
mov
pop
push
dec
je
pusha
mov
aad
xchg
cwtl
outsb
mov
test
xchg
cmp
cmp
icebp
mov
jmp
add
cmp
addb
hlt
lds
add
addr16
cmp
xchg
ret
shll
dec
test
lcall
repnz
push
add
push
insl
pop
mul
xor
adc
orb
cmpsb
jg
sub
pop
or
fisubrl
das
mov
das
in
movsb
imull
out
or
sahf
pop
adc
lret
imul
inc
fdivl
inc
fstps
andb
sahf
sti
cmp
shr
dec
icebp
pusha
or
pop
sub
lret
popf
iret
scas
lods
cmp
inc
add
in
mov
xor
mov
les
scas
sahf
in
mov
push
sbb
dec
xchg
cltd
sahf
pop
rolb
xchg
mov
sub
outsb
enter
lock
aaa
cmp
adc
int
pop
xchg
cmp
sub
add
sub
cmp
inc
daa
push
sbb
dec
ja
dec
repnz
mov
pop
int3
mov
hlt
loop
mov
mov
cli
sub
push
dec
hlt
in
add
cmp
cmp
ljmp
adc
into
inc
xchg
imul
dec
add
ret
mov
xor
or
pop
fs
or
jmp
and
dec
mov
and
pop
adc
hlt
lea
lods
mov
in
sub
xchg
movl
lret
xchg
sti
mov
push
xor
mov
and
movsl
outsb
inc
fsubrl
push
and
popa
xchg
out
add
cmp
mov
movsl
push
xchg
mov
jecxz
or
imul
addr16
push
push
in
push
and
loop
jns
cmp
dec
sbb
arpl
pop
lods
lahf
ds
adc
jns
inc
lods
push
iret
cmp
add
jo
js
fcmovb
int
subl
mov
sbb
lods
jb
cmp
push
fstps
xor
stos
pop
rorb
cltd
icebp
cli
mov
es
mov
je
int
fidivrs
int
jnp
push
loope
add
mov
jle
cmp
add
sbb
xchg
test
loop
mov
cmpsl
fsubl
push
lret
and
sbb
les
mov
scas
out
jle
mov
sbb
cmp
sub
push
mov
fxam
xchg
das
fmull
arpl
in
sub
or
pusha
jl
jae
mov
movsl
push
mov
xor
fs
je
jbe
repz
xchg
ret
jb
or
outsb
jp
fnsave
pop
ljmp
adc
daa
adc
imul
xchg
cli
xchg
das
fst
popa
inc
pop
dec
and
imul
std
nop
leave
orb
gs
cmc
imul
insb
cltd
jg
mov
enter
jmp
jmp
fsts
mov
imul
push
or
pushf
int
xchg
mov
mov
repz
aad
sbb
and
dec
aam
push
hlt
fcomps
push
dec
fcmovnbe
lds
lea
sub
pushw
mov
cmc
imulb
jbe
fwait
xor
inc
dec
mov
cwtl
inc
es
xor
in
pop
je
mov
dec
iret
mov
loop
or
pand
xchg
sub
stos
sub
or
test
jmp
jno
mov
push
sub
ljmp
xchg
sti
pop
mov
out
ljmp
xor
push
cli
ret
fcomi
mov
cli
insb
out
pushf
sbb
hlt
jbe
jl
xchg
pop
gs
add
mov
scas
cmp
fstp
ret
pop
data16
pushf
in
aas
lcall
out
and
in
les
test
movsb
mov
inc
sub
pop
call
cmpb
or
shrl
repnz
pusha
inc
js
cmp
test
fiaddl
and
rolb
clc
sti
xor
and
sub
iret
ss
or
jo
xchg
mov
mov
arpl
adc
fcoms
inc
mov
pop
xor
orb
adc
jno
popf
pop
ja
cld
insb
outsl
push
fnsave
loop
pop
dec
mov
mov
lods
jbe
inc
adc
cld
lea
cli
in
push
jb
mov
ret
shrl
mov
pop
xor
lods
mov
pop
lcall
mov
sahf
loopne
push
das
cmp
addr16
ret
out
mov
inc
popf
sbb
movsb
hlt
cmp
push
mov
pop
add
ja
xchg
inc
jo
jo
mov
out
ds
arpl
fstpt
test
fld1
gs
test
mov
aaa
push
dec
sarb
jnp
inc
scas
xchg
inc
into
or
pop
aaa
mov
cwtl
mov
mov
iret
mov
push
push
scas
add
xchg
xor
les
mov
jecxz
aaa
push
hlt
push
push
mov
pop
sbb
xor
cltd
popf
es
pop
mov
add
inc
push
jge
mov
mov
inc
das
mov
jecxz
mov
mov
arpl
int
adc
pop
mov
mov
ret
ss
movsb
dec
mov
fisttpl
cli
add
movsb
or
mov
sbb
sbb
loop
mov
sub
push
dec
add
xchg
inc
push
adc
js
sbb
dec
sub
ret
movsb
scas
arpl
cmp
inc
stos
jg
mov
push
dec
subl
arpl
pop
mov
mov
add
orl
add
cmpsw
jecxz
aas
scas
lods
adc
or
sub
inc
adc
mov
rcrl
xor
mov
xlat
and
popa
rcll
pop
mov
adc
add
adc
out
inc
mov
clc
add
pop
jno
inc
cli
jno
lahf
leave
test
xor
xchg
mov
mov
test
mov
xchg
lds
or
aad
inc
and
mov
popa
movsb
mov
pushf
mov
jb
faddl
dec
jno
xor
mov
ljmp
cmp
pop
out
jnp
lahf
xlat
xchg
call
xchg
xor
pop
mov
add
cmp
stc
iret
mov
js
pop
es
push
out
pop
and
inc
pop
mov
mov
adc
jns
dec
push
pop
sbb
fistpll
aas
fists
cmpsl
imul
ja
aad
cs
scas
mov
adc
pop
dec
sub
pop
or
ficoml
push
ljmp
pushf
arpl
int
sub
fistps
mov
xor
jno
jmp
loop,pt
xchg
pop
jnp
pop
push
push
jge
xor
mov
jo
xchg
es
imul
cltd
divl
jge
sub
dec
cmpl
sub
mov
sbb
cmp
fs
or
fstpl
cmp
ss
push
aaa
xchg
adc
jo
int
shrb
idivb
js
rorb
inc
cmp
and
fidivrs
repz
in
or
lahf
mov
jge
decb
daa
movsb
adc
mov
xorb
filds
push
es
sbb
test
std
pop
jne
adc
add
mov
push
orb
cmp
or
pop
mov
add
inc
mov
ror
int
or
stos
sub
pop
mov
add
aaa
pop
and
xor
push
dec
xchg
xchg
push
mov
mov
push
ljmp
xor
sub
pop
aam
nop
inc
es
dec
cwtl
fsub
fs
ss
push
pop
adc
adc
cmp
jno
ss
inc
xor
pop
cld
insl
gs
jno
sarb
xor
mov
mov
arpl
repnz
push
cld
jno
ffree
xchg
jp
mov
adc
or
sub
fisubl
mov
jb
rcl
hlt
add
rorl
xchg
lret
packssdw
pop
aas
cmc
pop
ret
ss
lods
fisttpll
pop
addb
inc
or
scas
scas
cmp
fmul
test
cld
pop
push
les
cltd
icebp
cmp
call
popf
daa
fcoml
sarb
stc
inc
popf
push
push
fisubs
jp
or
or
mov
push
rorl
xor
or
int3
in
or
or
test
adc
fwait
les
sbb
scas
ds
mov
or
mov
jp
imul
test
in
lock
out
xor
pop
sub
jecxz
mov
mov
das
dec
pop
sbb
jno
in
in
cmp
push
push
pop
jae
cs
sbb
test
loope
test
jno
mov
inc
add
adcl
or
xlat
pop
fidivl
movsl
movsl
push
loop
dec
dec
cmpsb
mov
adc
or
xchg
aad
mov
jge
xlat
xor
cmp
pop
xlat
xlat
or
lret
lock
push
xchg
mov
mov
push
loopne
inc
lret
stos
ljmp
or
icebp
push
dec
ret
cmp
ja
jp
xlat
adc
pusha
pop
mov
cmp
lahf
jb
jbe
mov
mov
flds
adc
test
sbb
movsl
push
xchg
mov
dec
mov
popa
push
mov
or
test
mov
xor
dec
aad
mov
fndisi(8087
out
nop
jne
mov
hlt
stc
out
mov
lcall
cltd
cli
sbb
xchg
cmp
imulb
ds
jle
nop
or
xor
dec
pop
adc
jb
int
scas
dec
jne
test
outsl
fidivrl
mov
insl
in
xor
mov
into
push
adc
out
pop
xor
aas
or
cmp
push
mov
int
fistps
sub
jg
repz
in
mov
mov
scas
sbb
xchg
push
es
sbb
movsb
popa
and
add
aaa
icebp
jbe
sub
adc
stc
addr16
mov
inc
out
fists
test
or
js
rol
xchg
add
xor
mov
xchg
lret
mov
daa
in
sbb
inc
aas
aad
fidivrs
frstor
int3
pop
or
xor
shlb
mov
ret
vpmuludq
iret
adc
test
sub
cmpsl
jg
xchg
push
xchg
jg
and
lods
sub
rorb
jg
in
mov
mov
movsb
pop
cmp
mull
pusha
arpl
adc
dec
pop
icebp
fisttpl
mov
add
inc
gs
hlt
xchg
push
pop
mov
push
out
je
loopne
shlb
pop
mov
pmaxub
push
nop
fs
fcomps
xor
sbb
mov
mov
xchg
xor
xchg
leave
mov
cmpsb
shrb
dec
push
sub
lret
iret
jp
ljmp
mov
insb
or
jecxz
call
sahf
outsb
sub
push
leave
ss
mov
jbe
xchg
negb
fwait
imul
mov
adc
mov
orl
aas
in
ret
pop
sti
sub
xor
notl
stc
pop
int
bound
add
mov
ret
adc
adc
mov
pop
in
dec
jmp
aad
fmull
lods
sbb
dec
sbb
out
pop
dec
js
xchg
pop
shl
stos
pop
cwtl
inc
mov
xchg
cmp
adc
sub
push
inc
mov
inc
pop
pavgw
xor
enter
adc
sub
cmpsb
xlat
jb
int3
adc
js
or
push
std
sub
add
es
jg
dec
in
insl
inc
rcl
push
lcall
addr16
fs
xlat
push
mov
lahf
in
testb
orl
enter
bound
dec
in
je
pop
movsb
decl
cmp
iret
stc
xor
xchg
and
jnp
data16
mov
in
sub
fistps
ret
idiv
loope
xchg
test
cmp
or
imul
scas
cltd
lds
or
sbb
and
xchg
and
pop
sbb
in
arpl
movsb
adc
jg
std
fldcw
cmc
addb
call
or
jp
xor
out
adc
xchg
lahf
hlt
into
shll
inc
or
cwtl
mov
aad
in
jo
xchg
cmpsb
push
aam
test
push
push
cmc
cmpsb
imul
jo
cld
rolb
insb
sub
mov
and
add
cmpsl
fisubl
jne
jmp
pop
out
lret
out
adc
mov
js
fnstsw
cmp
sub
test
dec
popf
or
cmp
sub
push
push
cmp
outsl
pop
aas
aaa
out
jae
dec
and
sarl
cltd
jae
push
pop
out
cmp
clc
xchg
leave
sbb
stc
insb
mov
mov
push
andl
repnz
push
mov
movsb
out
daa
push
cs
xchg
mov
jg
decb
adc
push
cmp
clc
dec
fcmovne
add
sbb
rolb
lds
and
jmp
mov
sahf
or
imul
mov
stos
jl
je
or
jnp
insb
loope
out
mov
jp
arpl
into
inc
fwait
es
mov
es
fwait
in
ret
pop
and
pop
fwait
dec
dec
fsubrs
add
mov
fdivrs
imul
test
sbb
ljmp
dec
loope
icebp
das
mov
pop
lret
add
add
pop
jmp
cld
add
cmp
xor
out
mov
pop
andb
ljmp
and
arpl
jne
pusha
pop
sub
in
pop
into
loopne
dec
incl
test
adc
adc
in
fiadds
les
shlb
fisubrs
sub
mov
cwtl
jecxz
icebp
ret
das
lahf
mov
jmp
cmovg
fwait
ljmp
push
addb
ret
push
iret
iret
pop
xor
adc
mov
xor
outsl
mov
repz
lret
daa
insl
xchg
call
pop
pop
jno
js
call
cmp
xor
and
stc
dec
xchg
ljmp
in
pop
cmc
xor
add
jl
js
inc
movsl
mov
sub
pop
xchg
cmp
repz
lcall
daa
mov
fs
inc
out
ds
icebp
xchg
add
cmpsb
inc
mov
out
rcrl
test
inc
jmp
add
pusha
push
adc
sub
sbb
insl
aad
cld
clc
dec
jg
jl
mov
dec
add
shrb
pop
fimuls
insl
push
and
inc
ror
pushf
sarl
inc
hlt
std
push
pop
dec
xorb
cmp
cmp
rcll
push
stos
out
lds
adc
jnp
push
xchg
in
jne
js
cs
test
std
inc
push
add
and
pmulhuw
push
jp
adc
sub
add
mov
xchg
fildll
mov
leave
js
fs
jae
adc
push
dec
push
add
pop
and
aam
jg
stc
rcll
test
xchg
enter
sarl
adc
pop
xor
addr16
jg
lcall
cmp
fdivl
push
cwtl
hlt
cwtl
and
mov
sub
pop
addr16
enter
es
inc
icebp
fmul
mov
pop
cltd
lods
lds
inc
popf
and
mov
pop
sbb
mov
popf
pop
ror
int
push
mov
jns
sub
jle
push
jb
lret
in
xchg
aad
bound
cltd
and
adc
les
push
aas
jg
sbb
std
lahf
mov
frstor
mov
pop
or
bound
fsubl
jb
fucomip
mov
or
jmp
std
dec
ljmp
mov
jg
ffreep
jb
lods
int3
or
lret
push
les
cld
sub
in
add
imul
loope
call
xchg
in
gs
rolb
ljmp
jnp
nop
cmp
dec
jae
fisubrl
push
movsl
pop
ja
dec
in
repz
cmp
lods
jl
leave
add
xor
shll
ss
sub
inc
scas
mov
gs
insl
orb
push
jno
mov
in
stos
adc
fimuls
push
stos
sub
or
lret
rorl
mov
cwtl
and
stos
push
dec
adc
test
and
xor
inc
jmp
sub
inc
xchg
aaa
or
pop
or
fildll
push
mov
int
pop
jne
lahf
jns
je
mov
ds
inc
mov
mov
out
pushf
xchg
xor
fwait
popf
rolb
dec
stos
mov
fwait
loope
inc
es
mov
shrb
sbb
mov
ret
sub
mov
movsl
or
and
jl
jo
xchg
dec
lret
cmc
stc
outsb
shll
in
imul
and
inc
stc
push
fisubs
aam
pushf
adc
imul
xchg
jbe
fcmove
int3
cmp
into
cli
pop
push
pop
pop
jne
adc
or
out
and
lock
adc
aad
jo
shrb
fadd
cmp
movsl
mov
cld
cmp
fmul
popa
imul
jecxz
inc
inc
pushf
mov
xor
jg
jo
xchg
insl
jnp
lahf
xor
xchg
mov
outsb
sbb
cld
cwtl
imul
add
movsb
push
lea
adc
lds
aam
cmp
jg
inc
push
mov
mov
push
mov
daa
lock
sbb
test
jnp
inc
mov
outsl
movsb
andl
cmpsl
jl
jns
xchg
sub
int
push
sbb
adc
repz
mov
jg
push
inc
mov
les
mov
dec
clc
jns
test
movsl
or
jle
cmpsl
xchg
aaa
add
movsl
sbb
jecxz
push
or
cmpsl
out
mov
dec
das
jo
cmpsb
iret
xlat
inc
pop
mov
pop
fisubrs
daa
movsb
divl
mul
mov
ret
cmp
push
daa
rcrl
popf
ret
hlt
xor
lods
pop
mov
pushf
pusha
jmp
pop
sub
inc
aam
call
add
push
jo
pop
pusha
shr
popf
fwait
push
jno
sub
or
or
pop
push
repz
stc
stos
add
mov
mov
leave
mov
outsb
dec
inc
and
mov
cmp
and
adc
addr16
fiaddl
inc
insl
xchg
pusha
mov
jmp
mov
mov
imul
adc
test
mov
mov
pop
nop
mov
cmpsl
xchg
sbb
sub
jnp
cmp
arpl
adc
push
sub
push
cmp
int
lea
ret
cmc
in
xor
aam
ret
pop
jl
iret
mov
and
mov
add
cmp
lods
popf
ds
fldt
ret
lds
mov
lock
leave
push
bound
ret
std
push
popa
daa
cli
ret
xchg
xor
js
push
outsb
push
orb
mov
xchg
pop
lcall
push
xlat
add
stos
inc
outsl
fs
fsubrs
std
xorl
jo
jne
aad
lods
inc
ss
lea
mov
lods
jecxz
ret
xchg
mov
adc
pop
jo
std
sub
jo
in
fs
out
imul
cmp
adc
xbegin
cltd
jp
xchg
in
loope
call
xchg
cmp
ja
fnstsw
mov
mov
xchg
notb
in
cmp
dec
mov
in
in
mov
stos
cmp
test
push
xchg
add
cld
jbe
cmp
loopne
jg
dec
addr16
cmc
mov
ror
or
ficoms
pop
sub
jne
push
mov
outsl
popf
adc
test
jae
pop
in
pop
cmpsb
push
shr
inc
push
in
mov
fcoml
out
insb
cli
and
jns
jns
daa
movsb
cmp
cmpsl
mov
and
mov
adc
jmp
mov
jg
cmpsb
js
inc
lret
lcall
pushf
aaa
mov
push
movsl
add
into
orl
adc
sbb
jecxz
jmp
pop
xchg
adc
jmp
pop
es
fs
data16
inc
mov
xchg
outsl
movsl
mov
hlt
test
test
jp
xchg
scas
mov
hlt
jo
iret
jns
jo
add
adc
jb
test
xor
jb,pt
fwait
stos
cld
outsl
pushf
xlat
test
dec
mov
adc
sbb
loopne
push
imul
sbb
rcll
xorb
sti
add
mov
int
sti
fmull
arpl
fsub
les
repz
inc
inc
mov
std
xchg
or
xor
or
sub
xchg
in
pop
xchg
data16
pop
aam
std
popf
cmp
mov
dec
and
dec
mov
in
in
and
inc
pop
sub
pop
pop
hlt
cmpsl
sbb
mov
mov
rolb
popa
call
out
dec
pop
or
xor
pop
mov
imul
mov
and
dec
jp
scas
push
xchg
shll
repnz
sbb
std
inc
hlt
dec
cmpsl
mov
popf
mov
fwait
data16
stc
out
test
sbb
scas
mov
test
cmpl
popf
xchg
aam
lods
es
jno
test
pop
jle
negb
mov
pop
leave
or
fdivrs
mov
shlb
mov
cmpsb
insb
frndint
popf
stos
out
xchg
adc
test
pop
push
add
lret
cmc
inc
cwtl
push
je
ja
pop
rcrb
or
cli
ljmp
loopne
fchs
push
enter
rcll
pop
pop
in
icebp
es
mov
repz
lods
mov
stos
mov
mov
add
xchg
jno
inc
jg
sbb
push
xchg
loopne
sub
out
or
fldenv
pop
shll
cmp
insl
xlat
test
lcall
out
fs
sarl
shll
popf
clc
mov
notl
jne
xor
icebp
ret
test
and
mov
ds
gs
dec
loop
sbb
cmc
rcll
aam
pop
jge
sbb
jne
inc
icebp
mov
mov
pop
sbb
arpl
adc
ror
in
xor
pop
out
sub
push
shrb
sub
ds
mov
incl
dec
mov
lahf
mov
sub
cli
jnp
push
sarb
mov
jnp
enter
rorl
cmc
pop
sbb
scas
push
lods
xchg
sbb
mov
pop
lret
pop
call
lock
inc
dec
roll
test
inc
or
dec
jno
fisubs
push
or
cmp
xchg
cmp
push
push
fwait
push
std
rcll
add
pop
aad
and
sub
pusha
leave
loopne
imul
xor
mov
into
dec
mov
ljmp
in
sahf
lock
movsl
ja
and
add
and
negb
jnp
xchg
mov
adc
cld
sbb
int3
push
movsb
mov
pop
mov
inc
inc
iret
hlt
pop
pop
or
push
or
fdivr
arpl
and
loope
out
ja
jo
mov
add
in
push
aaa
xor
add
fsubs
popf
icebp
inc
fisttpl
inc
push
imul
mov
push
jne
cwtl
xchg
clc
push
xor
mov
leave
lahf
dec
imul
ficompl
and
add
push
sub
notl
lcall
dec
subl
jle
jns
cmpsb
push
popa
and
test
mov
iret
xor
or
cs
adc
adc
icebp
mov
lods
je
lock
push
mov
mov
xchg
cmp
dec
in
ret
dec
sbb
je
mov
xchg
imul
imul
sub
jp
mov
xchg
leave
sub
movsb
test
inc
sub
add
and
dec
cmpl
xchg
test
in
cmp
out
sahf
aaa
push
dec
testl
push
xchg
and
jmp
push
in
jbe
mov
push
insb
xchg
loopne
in
dec
push
sub
fildl
mov
jp
sub
sbb
fdivrs
cmpsb
pop
xor
lret
adc
inc
sub
lret
or
arpl
outsb
loopne
xchg
sub
mov
pop
mov
mov
arpl
cs
dec
dec
in
jns
aas
sbb
call
pop
into
popa
push
adcl
fsubrp
orl
jecxz
push
cmpsb
out
sbb
negb
adc
out
ret
xor
subb
stos
clc
mov
jge
pusha
loop
sub
mov
test
insb
test
leave
sub
ja
lods
scas
dec
pop
mov
sbb
outsl
push
fldt
push
xchg
lea
lds
xor
cld
ss
stos
stc
xchg
rclb
sbb
dec
push
mov
fnstenv
xchg
inc
jle
aaa
pusha
scas
pop
stos
into
push
stos
les
pop
jnp
sbb
add
cmp
mull
mov
shrl
jo
test
lock
fisubrl
fwait
and
test
xor
pop
shll
mov
aaa
add
and
outsl
push
jo
js
lock
jp
lock
cmp
sbb
push
jle
xchg
jl
push
fcoms
shl
adc
jge
jg
add
push
jmp
imulb
jl
xchg
cli
in
xchg
jle
push
inc
lods
cltd
dec
cmp
and
and
hlt
call
lods
sub
and
ret
ljmp
test
scas
or
sub
add
add
cmp
lea
cmp
divb
js
or
dec
movb
enter
enter
xchg
inc
adc
mov
and
ret
into
inc
lahf
outsb
test
mov
ret
adc
add
gs
lods
push
pop
rolb
pop
jmp
arpl
and
jnp
jns
imul
sub
or
out
fsub
lcall
repnz
xor
push
cmp
pop
orl
pusha
pop
mov
cmp
or
outsb
fsub
pusha
mov
vrangesd
test
pushf
daa
ds
imul
sbb
cld
adc
adcb
fcoms
lock
mov
out
jp
ljmp
adc
test
pop
jb,pn
fwait
sbb
cli
ficompl
bound
pop
not
lods
add
mov
cmp
dec
sbbb
test
loope
int3
cmp
daa
sbb
sub
leave
and
lock
daa
adc
xor
inc
aaa
sarl
negl
jecxz
insl
adc
mov
in
or
movsl
dec
leave
mov
pop
bound
gs
aam
enter
add
cld
cld
xchg
out
xlat
and
inc
add
cmpsb
das
loop
mov
lret
out
cmp
in
lods
lahf
mov
lcall
sub
in
lahf
mov
sbb
sub
lods
push
add
cld
imul
pop
mov
dec
sub
jbe
fwait
cli
and
mov
icebp
loop
sub
cmp
daa
mov
and
xchg
shlb
xchg
dec
add
insl
xor
decl
lcall
divl
arpl
ret
les
and
mov
push
cmp
sub
pop
pop
push
call
adc
lret
in
and
jbe
fcoms
les
xchg
cmp
cmp
inc
pop
push
adc
cmp
jne
sub
jp
cmpsl
sub
seto
inc
lcall
push
mov
mov
fwait
dec
sub
and
mov
in
cmp
ret
lahf
xchg
stos
inc
outsb
sbb
ret
lds
adc
jge
leave
push
repnz
ss
mov
fwait
dec
jno
sub
xor
popf
xor
jo
mov
xor
mov
imul
push
sbb
enter
push
cmp
lea
push
fidivrs
rol
hlt
nop
loop
sub
and
andl
nop
mov
push
xchg
jp
push
daa
and
aaa
outsl
mov
das
loop
addb
sbb
fimuls
add
fstpl
sbb
ret
sbb
sub
jmp
xchg
add
jae
mov
xchg
out
scas
inc
push
mov
lds
sub
sub
mov
jmp
add
jecxz
and
sbb
sub
mov
jb
es
adc
xor
sahf
in
std
in
push
ljmp
lcall
lea
xor
lret
jmp
ljmp
push
add
scas
insl
push
mov
and
and
push
jl
outsb
inc
dec
inc
pop
mov
cltd
pop
stc
jns
mov
adc
cli
push
nop
std
ds
sbb
repz
popa
jns
ljmp
jns
je
in
fbstp
sub
stos
mov
mov
fstl
loopne
dec
mov
sbb
inc
rcll
popw
push
jecxz
and
inc
adc
sahf
cmpsl
loope
sub
add
cmc
or
scas
mov
rclb
lcall
roll
and
push
outsl
test
sub
sub
out
call
js
sub
out
cmpl
shll
xor
popf
pusha
xchg
mov
mov
xor
andb
dec
jno
shlb
push
mov
std
sbb
mov
rorl
mov
mov
xor
repnz
std
dec
pop
in
push
and
adc
fs
vmovaps
fistl
add
out
adc
xor
cs
pop
sbb
ficoml
sub
dec
mov
dec
mov
cmpsb
ror
cs
mov
iret
sbb
lahf
mov
pop
pop
sub
aad
xchg
test
xor
mov
incb
inc
test
push
mov
jbe
fsubrl
ss
dec
mov
stc
sti
ljmp
dec
sar
dec
mov
push
sahf
test
vcmppd
fwait
jns
clc
out
cmp
ss
inc
pop
loop
mov
cmp
movl
push
pop
cs
add
inc
cmp
sbb
xlat
jle
cmpsl
adc
dec
ss
nop
out
mov
in
fdivrl
push
cmc
xchg
xor
in
je
movsl
mov
enter
xchg
inc
jb
mov
jne
push
outsl
lahf
push
sub
cs
mov
xlat
mov
jmp
sub
pop
mov
enter
iret
cmp
mov
outsb
fisubl
jle
jne
les
inc
aam
shlb
dec
lds
sbbl
jne
repz
adcl
add
inc
pop
in
mov
jo
pop
pop
sub
pushf
clc
jno
pop
les
imul
int
xchg
lahf
xchg
adc
roll
neg
dec
dec
repz
stc
sbb
test
std
xor
lcall
pushf
out
inc
dec
out
sub
and
sti
cltd
ds
cmc
xchg
push
or
filds
adc
mov
das
gs
jle
cmp
mov
lahf
add
push
js
imul
jae
rol
enter
jecxz
imul
sbb
mov
dec
mov
pusha
jbe
add
out
push
mov
cmpsb
scas
loop
jmp
fistpl
sub
and
dec
add
push
push
mov
je
sbb
out
or
cli
jle
popa
pop
inc
add
lahf
adc
leave
pop
inc
mov
jo
xlat
lds
push
mov
xchg
and
and
sbb
pusha
out
xchg
sub
clc
adc
stc
in
test
ds
cmc
fidivs
push
es
repz
push
fcmovb
lods
pop
cmp
popf
push
test
ss
je
int
mov
xchg
andl
cmp
mov
mov
push
push
mov
jp
sbb
jb
aas
jmp
pop
out
adc
and
clc
imul
mov
pusha
cmp
jbe
dec
sub
jmp
lods
jbe
add
lock
cld
cld
sbb
push
xchg
int3
lock
or
push
sub
dec
xor
shl
mov
sbb
inc
icebp
xchg
or
and
rcl
loope
jb
xor
pusha
xchg
es
iret
jmp
mov
int
mov
repz
jb
mov
test
insb
lea
mov
cmpsb
out
mov
ret
call
cmc
fsts
mov
sar
stc
lahf
in
fldcw
sahf
repz
jbe
aaa
popl
add
mov
lods
cmp
adc
mov
repnz
hlt
jne
jns
pusha
push
into
popf
push
insb
outsl
adc
inc
ja
fcmovnbe
fs
jle
push
jle
cmp
jge
pop
ret
mov
out
cwtl
xlat
mov
leave
dec
fisubrs
jae
adc
inc
ret
je
data16
pop
stos
cld
nop
mov
lods
or
arpl
sub
into
jns
sbb
rorl
rol
add
leave
mov
pop
dec
inc
sahf
sbb
lock
lahf
lds
push
jns
push
xchg
movsl
and
loope
fsubs
jg
xor
cmp
jne
in
mov
push
jno
outsl
push
xor
nop
imul
ja
inc
xor
shl
ja
cmp
cmp
out
xor
add
cmp
je
sbb
inc
and
add
mov
and
in
dec
cmpsl
scas
sub
shrl
pop
push
mov
jmp
int3
cmpsb
cltd
push
fidivrl
popa
fs
mov
mov
js
jno
push
or
loopne
sbb
and
push
mov
adc
scas
leavew
adc
rclb
sahf
popf
aaa
jae
sbb
imul
sbb
js
das
push
std
xlat
xchg
xchg
cmp
push
mov
cld
cmc
les
dec
mov
mov
mov
jecxz
xor
outsb
pop
mov
add
loop
in
push
or
jecxz
inc
rorl
mov
cmpsl
data16
clc
xor
mov
mov
scas
jne
mov
inc
hlt
inc
subl
jl
cwtl
repz
and
fisubrl
pop
cmp
out
fcmovnbe
dec
add
movsl
cwtl
jle
cs
jle
data16
jg
mov
into
sbb
jp
pop
add
xchg
roll
test
lcall
xchg
je
aas
inc
push
push
lods
or
test
cmp
popf
add
test
incb
xchg
mov
aas
and
aam
pop
mov
lock
mov
cmp
jg
gs
pop
pushf
xorl
aad
mov
es
or
jno
push
lods
xchg
xchg
stc
sbb
popa
popa
mov
iret
jne
lods
mov
das
add
leave
lds
inc
jmp
popa
pop
push
mov
leave
push
cmp
ja
mov
and
pop
push
jp
and
sub
push
mov
jo
call
pop
lods
and
movsl
lea
minps
mov
fwait
add
mov
inc
les
data16
clc
or
mov
popf
cwtl
or
insl
adc
mov
xchg
sahf
out
cmp
jno
mov
fdivl
movsb
push
adc
cmp
int
push
inc
push
in
mov
fnstenv
sub
add
push
jo
aas
imul
out
testl
push
orl
int3
clc
hlt
or
mov
mov
stc
popf
mov
cmp
and
mov
xor
imul
shl
fs
repz
subl
jg
flds
adc
test
inc
fiadds
add
cmpsb
mov
int
push
ret
and
insl
pop
js
mov
and
shll
cmp
or
jbe
mov
sbb
push
push
mov
out
aaa
sarl
enter
mov
mov
mov
sbb
mov
mov
mov
enter
mov
xor
sbb
fisubrs
pop
mov
pop
fwait
outsl
sbb
sub
jns
jo
or
pushf
sti
sbb
pop
out
sbb
mov
hlt
xchg
fsubl
fwait
insb
dec
mov
fstps
cmpsb
dec
pop
stos
ret
push
pop
jb
pop
xchg
xchg
lret
or
pop
cld
pop
dec
in
loope
sub
dec
jne
int
mov
and
cmpsl
jecxz
push
push
cmp
mov
sbb
and
js
test
push
in
rorl
jp
incb
ret
add
mov
lea
cmc
fcomi
pop
je
pop
jbe
jnp
sbb
sub
add
dec
or
sbb
cmp
lds
pop
out
fs
jns
adc
pop
xor
pop
lret
push
pop
inc
dec
push
and
cs
and
lcall
mov
fisttps
loop
push
psubsb
lret
in
call
mov
fdivrl
mov
testl
scas
jl
sub
push
dec
jp
jae
pop
jmp
into
sbb
loop
xchg
cmp
shrb
lea
daa
push
sbb
lds
int
stos
dec
aam
imul
pop
pop
xchg
test
imul
out
jo
pushf
mov
push
jge
or
cmp
inc
cmp
mov
insl
pop
or
loopne
lock
mov
add
pop
lcall
pushf
mov
mov
pop
mov
xor
cmpsb
cli
xor
out
popf
pop
inc
sti
rcrb
pop
push
lock
lahf
and
fnstsw
out
or
inc
push
mov
pusha
fwait
pop
push
insl
mov
jmp
loop
aam
std
pop
cld
cmp
lret
inc
out
jne
fcoml
mov
es
xchg
addb
add
jne
inc
lods
add
add
pusha
xchg
in
adc
call
sbb
jo
insb
shlb
test
es
fadd
mov
cltd
adc
push
dec
int3
adc
xchg
dec
pushf
inc
mov
lret
das
pop
aas
mov
sahf
add
sbb
cmp
mov
ss
and
and
cli
leave
mov
xor
popf
sahf
mov
gs
adcb
popf
cmp
sbb
sahf
pop
push
mov
outsb
stos
xor
push
shl
arpl
arpl
lcall
jbe
call
das
push
repnz
push
js
sub
or
mov
mov
sub
insb
iret
je
xchg
push
ss
mov
jnp
clc
daa
inc
in
pop
std
push
sub
dec
pop
jp
sub
xor
aaa
sbb
xchg
aad
jnp
rorl
mov
xor
fisttpll
fs
test
xchg
pushf
es
jmp
mov
ljmp
or
xchg
push
sub
lcall
repz
cli
loop
insb
cwtl
push
push
jo
jnp
inc
and
hlt
xlat
fs
xchg
sbbb
sub
in
test
xor
add
mov
dec
jge
imul
cmp
outsl
iret
pop
icebp
in
jle
xchg
out
lods
dec
fisubs
test
fcmovnu
ljmp
cs
add
repnz
add
out
or
ja
push
jge
aam
sub
or
pop
not
test
jmp
lods
xorl
mov
adc
jecxz
insb
mov
add
imul
outsb
xor
inc
mov
fidivs
rolb
test
adc
sbb
push
mov
in
cs
xchg
xor
scas
push
loope
inc
sub
iret
out
clc
push
cmp
shr
mov
les
jmp
sub
lcall
test
and
test
xor
mov
orb
add
aad
push
cmp
test
jne
and
pop
addr16
lds
mov
stos
mov
and
jg
out
aaa
cmc
repnz
test
cmp
mul
ficomps
aaa
lcall
aas
mov
inc
iret
insb
fldl
inc
popf
mov
shl
mov
sar
mov
inc
jae
adc
mov
divl
lods
jge
add
fbstp
jns
and
sbb
dec
rorb
mov
fs
movsl
push
pushl
dec
es
loop
and
aaa
and
xor
adc
lret
jp
fwait
xor
pop
jne
ficoml
hlt
pop
mov
cmp
mov
or
cmpsl
insb
repz
push
dec
adc
jne
fbld
hlt
cmp
ljmp
ja
cmpxchg
imul
cmp
fildl
add
jmp
fcomp
iret
push
xchg
mov
or
xchg
inc
xorb
jl
decl
inc
xchg
cs
push
fstpt
js
cltd
sub
cmpl
sbb
cltd
ljmp
sub
xor
popf
xchg
aam
xchg
test
fbld
sti
xchg
mov
into
push
cli
sbb
jo
aaa
out
rclb
sub
push
mov
popa
adc
and
lret
dec
xchg
sti
sete
incl
negl
xor
or
inc
mov
jae
adc
cwtl
ficoml
push
jge
pop
subl
ljmp
or
inc
inc
mov
or
jmp
pusha
push
mov
ds
nop
xor
lret
jbe
jb
das
add
mov
shlb
or
outsb
leave
add
cs
out
shrl
push
pop
mov
fs
callw
jecxz
mov
jecxz
out
jno
xor
mov
ja
movsl
sbbl
push
test
adc
sti
int
repz
xor
sbbb
adc
mov
enter
loope
iret
cmpsl
fstl
fsubs
ds
sub
inc
or
mov
and
mulb
adc
xchg
enter
ljmp
push
sub
cmp
ds
mul
mov
popf
jne
and
sbb
pop
sub
shlb
mov
scas
pop
xchg
shrl
dec
pop
cmp
inc
jns
repnz
repnz
xor
cmp
sbb
scas
cld
adc
inc
fimuls
adc
das
outsl
jecxz
aas
ror
pop
outsl
mov
sbb
test
pop
jmp
enter
sub
mov
fbstp
and
lea
aam
cmp
pop
lods
xchg
sbbb
gs
mov
lods
and
hlt
out
cmp
stc
push
test
bound
sbb
movsl
or
cld
adc
out
shl
arpl
pusha
inc
fisttpll
out
clc
push
xchg
adcl
rclb
imul
xchg
mov
pop
orl
jecxz
xor
scas
xchg
push
push
rcll
mov
add
inc
and
nop
jmp
lds
xchg
jl
add
sub
cmpsl
sbb
mov
cmpsb
jg
and
cmc
mov
pop
roll
push
aas
push
mov
shrl
add
jg
cld
push
out
jg
dec
jo
ret
loopne
push
stos
add
and
add
call
xchg
push
push
lahf
stos
rcr
mov
push
pop
pop
adc
imul
pop
insl
xchg
push
xchg
es
shlb
mov
dec
inc
fisttpl
int3
test
popf
rcrb
and
popf
out
jle
pop
fcomps
sub
sub
adcb
shrb
out
outsl
out
lods
ja
push
clc
mov
mov
les
cmc
dec
cli
inc
fcoms
mov
mov
leave
xor
pusha
add
jne
mov
sti
in
shl
xor
inc
js
push
ret
jge
cmpsl
pop
sub
and
inc
pop
clc
mov
sub
sbb
pop
and
and
sub
fildll
jae
insl
fnstenv
ss
mov
ficoml
jg
insb
inc
je
sub
dec
inc
cmp
sub
mov
xor
mov
jp
movsb
jnp
xchg
out
testl
dec
push
and
ljmp
fldenv
xor
push
mov
or
lods
inc
mov
adc
movsb
adc
mov
pop
mov
mov
push
je
fs
mov
pushf
mov
mov
mov
sub
in
push
cs
loope
cmp
out
stos
xor
stc
out
cld
inc
sub
mov
lods
cmp
mov
stc
sub
pop
data16
dec
adc
xchg
pop
lods
scas
lret
sub
inc
rcrb
gs
pop
xchg
sarl
xor
arpl
popf
sahf
ret
or
and
nop
jne
movsb
rcl
icebp
push
loope
sub
out
pop
mov
shll
es
jmp
or
push
scas
sbb
sbb
push
xchg
sbb
ljmp
or
movsl
js
lcall
cmp
mov
jns
imul
mov
pop
xor
pop
nop
scas
xor
testl
iret
lock
xor
mov
negl
inc
dec
mov
test
cltd
cmp
lock
dec
mov
cmp
addl
inc
mov
scas
add
or
lock
enter
sub
or
iret
dec
pop
insb
sbb
cs
loopne
fmuls
mov
roll
dec
lret
mov
pop
mov
inc
aaa
ret
push
xchg
pusha
leave
leave
addr16
hlt
dec
mov
ds
cld
and
stc
mov
sub
js
imul
and
std
xchg
xlat
xor
pusha
and
cli
mov
mov
lahf
pop
movsl
subl
xor
mov
mov
outsl
inc
add
gs
or
jmp
cltd
dec
pop
mov
ret
imul
out
and
or
ja
in
push
pop
ljmp
icebp
cmp
into
cmp
and
dec
pop
arpl
dec
lea
loop
push
cwtl
dec
hlt
imul
int3
nop
aam
out
cld
jnp
jo
add
or
jp
sub
lods
push
shlb
add
inc
mov
ljmp
cmp
jge
jo
lea
mov
loopne
adc
and
inc
cld
ja
xchg
or
mov
and
xlat
imul
or
xchg
and
mov
fsts
adc
mov
push
adc
ficomps
ja
jmp
push
push
dec
loopne
imul
ljmp
stos
sub
out
mov
or
es
lcall
dec
pop
out
jb
cld
cmp
stos
lds
jne
in
insl
cmpsb
adc
adc
mov
lods
sbb
mov
mov
sub
aad
aad
cmp
or
ret
dec
adc
sbb
movsb
mov
rclb
int
call
lahf
lea
or
inc
mov
lcall
arpl
lock
mov
in
or
mov
push
outsb
push
fwait
punpcklbw
dec
imul
adc
rcrl
pop
test
push
jge
shl
movsl
js
inc
test
pop
inc
cwtl
movsl
sub
lds
in
int3
test
dec
and
lahf
popf
in
inc
push
jle
insb
inc
mov
lds
nop
popf
lcall
mov
loopne
call
rcll
dec
xchg
xchg
mov
adc
mov
insl
adc
xchg
aaa
sbb
and
ja
dec
mov
mov
lcall
cli
jne
pop
adc
outsl
stc
xlat
and
inc
ficomps
add
sub
xchg
les
gs
in
stos
xchg
jnp
out
add
and
pop
lds
and
out
test
scas
popf
into
scas
subb
mov
rclb
push
call
sub
sbb
repz
hlt
lods
aaa
or
lods
mov
cmp
lds
or
mov
repz
inc
fisubs
mov
jo
mov
test
or
sbb
arpl
push
lods
or
cltd
add
xchg
sbb
es
call
mov
and
adc
stos
lret
rol
pop
shrb
cmp
sub
pop
add
jmp
scas
clc
in
out
aas
adc
or
or
cld
int3
push
fcomps
xor
sbb
fs
clc
lods
push
dec
mov
sub
xchg
pop
mov
cmp
nop
cmpsb
lea
pop
cli
ja
test
push
xchg
fwait
jne
jno
jecxz
inc
lds
aas
xorl
insb
jb
dec
or
jge
in
stc
mov
test
neg
jl
lods
mov
and
xchg
rorb
dec
lock
leave
pop
dec
ret
mov
push
cmpsb
dec
push
imul
aas
jmp
add
divb
fs
std
fistpll
lgs
mov
push
subb
sahf
imul
ja
push
jg
xlat
xor
lcall
mov
jmp
xor
out
lea
push
lret
in
inc
mov
or
or
mov
and
jne
inc
sbb
pop
mov
push
in
lds
adc
out
enter
add
or
dec
xor
xor
test
push
std
xchg
dec
xchg
push
out
enter
mov
adc
or
xlat
aaa
and
dec
aas
scas
rcrb
mov
aam
jp
push
in
call
mov
xor
xor
mov
mov
stos
mov
sub
inc
shrl
ret
push
mov
mov
mov
sbbb
cli
mov
ss
lock
lods
lcall
repnz
out
mov
sarl
fadd
out
or
outsb
ret
adc
popf
ss
insb
xor
ret
mov
jno
mov
push
frstor
fcom
push
fcoml
and
movsb
scas
into
setnp
dec
cli
lret
rclb
roll
movsb
aam
outsl
jno
daa
gs
out
pop
push
push
jo
das
jecxz
dec
loope
mov
arpl
mov
sub
dec
mov
je
imul
sbb
movsb
and
push
je
fdivp
xor
mov
outsb
mov
lds
dec
sbb
xlat
push
push
enter
idivl
fistpll
insb
dec
bound
lret
adc
lahf
xor
test
pop
jg
out
sub
mov
jle
pop
mov
lret
je
cmp
inc
mov
ds
ss
xor
insb
shll
popa
dec
icebp
dec
jae
loop
mov
ret
ret
sbb
testb
sbb
ja
and
pop
push
sahf
pushf
adc
mov
xor
push
aam
sbbl
jl
cld
push
lret
insl
xor
cmp
sub
in
rcr
into
imul
mov
xchg
push
aam
lret
int3
outsl
stos
dec
mov
mov
out
push
push
out
out
cmp
push
mov
iret
and
es
xlat
xor
aad
push
das
add
shl
fmuls
mov
sub
push
inc
fnsave
loopne
mov
test
sub
lea
mov
ret
mov
xchg
mov
out
popf
orl
cmc
or
sub
loop
sbb
rcrl
jo
xchg
mov
adc
outsl
movsl
adc
jmp
mul
and
jnp
jl
adc
data16
fsubrp
pop
addr16
pop
lods
mov
cmp
lds
jl
mov
enter
movsb
pop
add
jp
cmp
in
cmc
mov
inc
in
jecxz
dec
xor
sub
push
ret
aas
jg,pn
mov
icebp
gs
inc
inc
dec
mov
lods
call
enter
loop
out
cmp
push
or
inc
and
sub
mov
mov
xchg
xchg
sbb
inc
jo
xor
hlt
shl
mov
dec
pusha
lret
orl
aas
mov
jg
xchg
ja
fisubrl
enter
extrq
jns
and
inc
cmp
test
ss
cmpsl
movsl
mov
xchg
fwait
lahf
cmpsb
pop
idivl
adc
mov
cwtl
fcos
adc
sbb
dec
sbb
es
push
popf
mov
and
sbbl
ljmp
mov
ret
inc
fmull
pop
imul
ret
lea
dec
sub
sbb
push
xor
negl
fldcw
sbb
pop
insb
sub
stc
push
mov
scas
jge
test
and
sbb
push
lahf
fmull
adc
stos
sbb
aaa
sbb
mov
ret
sti
mov
mov
push
or
scas
stos
fisubrs
mov
fldz
mov
push
add
jb
cmp
stos
jae
cmp
xchg
pop
or
or
daa
dec
pop
jle
push
xlat
jbe
lcall
jnp
lret
dec
xchg
hlt
mov
add
fidivl
mov
flds
pop
loop
flds
lds
sbb
dec
or
aad
loopne
fwait
gs
scas
inc
daa
out
scas
lods
cmp
add
icebp
jno
cmp
pushf
pop
push
adc
cmp
test
aad
jae
cmp
insb
dec
mov
sbb
adc
mov
std
roll
aad
loop
idivl
and
jbe
inc
gs
vminps
mov
scas
orb
jno
cmc
mov
jecxz
scas
or
cmp
fcomp
test
call
aad
cld
lret
sbb
inc
aaa
push
sahf
add
push
scas
push
sub
jbe
shll
imul
sub
cmp
enter
insb
xchg
addr16
push
repz
clc
ret
cmp
test
xchg
pop
mov
jnp
fisubs
fmuls
xor
mov
xchg
incb
and
pop
jmp
sub
xchg
dec
pop
shlb
fsincos
pop
lock
mov
push
fstps
sub
das
rcrl
fstl
mov
loope
orl
cmpsl
add
mov
sbb
cmc
sbbl
test
adc
pushf
dec
int3
and
push
mov
es
push
mov
or
out
repnz
dec
inc
imul
sarl
rclb
xchg
xchg
sub
or
into
bound
adc
loope
and
mov
stos
pop
aad
imul
pop
lock
mov
xor
adc
jl
mov
adc
loope
jge
fcomps
repz
repz
sub
insb
adc
or
add
jle
out
or
gs
stc
data16
jge
dec
jle
mov
mov
push
mov
ret
push
leave
push
sub
stc
xor
dec
mov
cmp
push
pop
jl
cmp
jae
fmul
enter
aam
jge
popa
adc
and
int3
or
xchg
mov
sti
ss
out
mov
inc
mov
dec
or
faddl
ds
lcall
pusha
daa
and
and
inc
popa
add
int
out
pop
lods
inc
movsl
inc
lods
test
rclb
mov
jl
inc
outsl
adc
inc
and
jnp
frstor
jbe
insl
int3
push
call
repnz
lea
push
push
in
in
push
xchg
jo
lcall
lcall
xchg
xlat
cs
aam
int
fidivrs
inc
sub
fcmovnu
int3
mov
inc
mov
sbb
push
push
xor
cmp
cs
in
aam
lcall
mov
mov
movsb
pop
xchg
je
sarb
mov
pop
lock
and
dec
add
outsb
lds
gs
cltd
pop
popa
sahf
adc
jecxz
xchg
notl
adc
hlt
orb
sub
addl
xchg
cmp
stos
dec
outsb
mov
in
ret
inc
sub
jmp
or
subb
mov
and
xchg
sbb
stos
pop
adc
ljmp
loope
scas
mov
jmp
decl
xchg
mov
dec
inc
out
sub
mov
movsl
push
lds
jmp
sbb
dec
sbb
je,pt
test
cwtl
dec
sti
lods
fwait
sahf
out
push
ss
popf
adc
lcall
ret
sub
add
dec
movsb
jns
push
movsb
fadds
aaa
sbb
iret
inc
xor
xchg
dec
xchg
inc
cs
icebp
mov
vsqrtss
cwtl
lret
rcr
sbb
rcll
cmpsl
fadd
cmove
sub
sub
rcll
adc
mov
cmp
adc
push
pop
xchg
test
aaa
or
xor
jns
dec
adc
sub
mov
das
push
mov
push
mov
fldcw
fidivrs
lods
das
dec
push
ds
jmp
xchg
xchg
daa
fiadds
fldl
mov
inc
stos
add
iret
mov
pop
push
out
pusha
mov
ret
scas
pop
push
xchg
dec
lret
xchg
pop
sub
sti
repnz
push
lock
inc
lock
sti
aam
arpl
cwtl
aad
dec
negb
mov
or
and
push
sbb
lahf
lods
cmp
int3
int
xchg
lret
add
mov
push
xor
sbb
add
sbb
sbb
das
lock
sbb
nop
mov
jmp
mov
mov
dec
inc
ljmp
dec
push
out
mov
fistpll
push
or
xor
lcall
inc
dec
xchg
push
pop
xchg
idivb
aam
sarb
cld
sbb
cld
push
jmp
add
inc
inc
jmp
aam
rcrb
aam
inc
sub
lcall
xor
xchg
movsb
lds
call
jg
xchg
in
push
jl
std
xchg
outsb
loope
mov
mov
popa
movsl
push
lods
xor
pop
sub
cmp
pop
cmc
in
test
cmpsl
xchg
stos
inc
mov
mov
cmpsl
jns
mov
aad
cs
aad
mov
mov
dec
jge
cmpsl
sub
pop
xchg
mov
push
add
movsl
dec
xor
jnp
dec
lds
rcrb
mov
xchg
dec
push
hlt
cmp
arpl
ret
mov
or
out
inc
xor
stc
insl
mov
and
mov
into
idivb
xor
xchg
fsubs
dec
jl
push
loope
int
cmp
ss
mov
cmp
ljmp
rcrl
out
enter
in
in
std
sahf
mov
dec
sub
arpl
lea
pop
jg
and
and
cmp
sbb
jns
xchg
jnp
jbe
roll
dec
push
fnstenv
push
hlt
outsl
sub
dec
xchg
sarb
pop
dec
push
imul
fnsave
ficoml
subb
jg
xchg
jns
push
pop
fisubrl
sub
popa
add
push
and
inc
jge
sarb
cmp
sbb
mov
push
rorl
sbb
add
adc
aas
inc
mov
mov
add
fists
dec
scas
mov
mov
sbb
mov
push
sub
pushf
adcb
cmpsb
add
jo
cmpsl
lock
push
shll
and
movsb
incl
jle
aas
push
ds
adc
pop
mov
inc
sub
loopne
gs
imul
hlt
and
jo
jl
pop
pop
dec
mov
xorb
jp
fadd
or
ds
fst
push
punpckhdq
and
xchg
jmp
fstpl
or
scas
sub
test
xor
insl
xchg
cmp
adc
xorb
pop
adc
pop
xor
movsl
fimull
test
sub
mov
mov
sub
mov
jne
addl
pop
je
lea
outsb
cld
sarb
dec
adc
cmpl
push
lcall
and
orb
lret
pop
sahf
jae
inc
push
out
fsubrs
jne
pop
xchg
movsl
add
leave
adc
pop
mov
dec
mov
test
mov
inc
divb
fs
loopne
xchg
mov
subb
clc
movsb
sbb
faddl
fs
sti
das
aas
xlat
sbb
nop
pop
cmp
in
lret
out
push
pop
push
dec
imul
xlat
outsl
in
jne
sub
pop
sbb
popf
addr16
and
jnp
jnp
sub
lods
mov
xor
test
scas
sub
mov
repnz
inc
xchg
jo
fidivs
or
inc
dec
bound
sub
add
es
or
pusha
loopne
dec
std
inc
rclb
xchg
lds
dec
add
js
fistps
movsb
movsl
inc
test
lea
sbb
dec
xor
mov
test
repz
and
rorl
decl
sub
adc
jp
aad
sbb
mov
lcall
xorl
mov
push
arpl
cmc
jb
sbb
mov
xor
jae
mov
add
fidivl
add
movb
fxtract
dec
lods
pushf
xchg
jge
cmp
fsubl
mov
push
pop
mov
jecxz
cli
xor
jge
mov
leave
jg
add
mov
jmp
push
loop
movsb
lret
xlat
mov
int3
jmp
jmp
cmpsb
shrb
mov
call
jns
dec
jg
test
cmp
xor
jmp
cli
inc
cmp
xchg
jp
mov
cmpsl
fnsave
add
and
cltd
adc
into
fimull
dec
je
mov
dec
push
imul
mov
test
mov
or
xchg
sub
stos
adc
dec
push
cmpl
jbe
mov
fsubrp
mov
es
pop
and
imul
push
andb
xor
jo
je
fcmovne
xchg
call
cmc
sbb
repnz
divl
sbb
xchg
add
sbb
pop
arpl
dec
jno
aad
ret
add
xor
push
enter
roll
push
jg
or
inc
data16
jo
int
dec
mov
int
push
mov
dec
jle
add
lahf
cmp
ljmp
ljmp
aam
in
les
xor
movsb
cmp
mov
lock
push
sarb
inc
lahf
iret
mov
adc
fisubs
mov
call
test
icebp
imul
xor
or
pop
add
inc
add
inc
mov
mov
std
and
mov
push
add
inc
mov
jmp
das
xlat
cmpsl
pop
dec
adc
decl
xor
mov
lahf
push
repnz
sti
add
ljmp
jne
lods
xor
lods
enter
push
test
movsb
fiaddl
sbb
out
les
test
sub
mov
fidivrl
orb
stos
jg
out
shrl
repnz
push
stos
rcrl
outsl
dec
std
xor
test
stc
pop
adcl
pop
testb
bswap
inc
pusha
push
es
dec
dec
sbb
xor
inc
dec
jae
and
or
popf
cmp
movsl
setbe
jle
pop
ss
test
pop
scas
inc
xchg
adc
jbe
mov
call
outsl
lods
scas
xchg
mov
daa
push
adc
pop
jle
stos
mov
mov
adc
rol
test
mov
adc
lock
sti
adc
sub
or
lret
fs
insb
cltd
add
fs
mov
mov
hlt
stc
ret
repz
jle
aad
repz
cmpsl
enter
xor
adc
outsb
ficoms
inc
and
jo
into
insl
sub
push
sub
int3
lret
xor
stos
sahf
lcall
aas
flds
repz
xor
mov
lahf
dec
or
decl
and
push
cmpl
sti
aam
repnz
leave
xchg
out
nop
xor
xchg
mov
jae
adc
pop
lea
ljmp
fidivs
mov
ja
cmp
addb
rorb
shr
into
lock
movsb
add
movb
inc
fstpl
cmp
and
or
inc
dec
sbb
jae,pn
mov
inc
push
cmpsb
pop
or
into
jmp
jnp
stos
pop
test
jns
adc
insl
push
lcall
xchg
jecxz
push
jg
sbb
scas
mov
cmp
mov
push
enter
and
and
pop
cmc
pop
xor
cmp
mov
out
popf
pop
aas
in
aas
jmp
mov
add
add
arpl
xor
addr16
les
imul
insl
add
dec
ss
shll
popf
dec
les
aas
rorb
mov
pushf
jae
mov
lods
push
mov
sub
xor
pop
popa
push
enter
sub
cltd
mov
in
jae
or
jne
add
ret
mov
pop
ret
insl
popf
mov
scas
jne
mov
mov
mov
mov
lret
sub
pushf
cmp
lret
and
add
sbb
pop
push
lret
out
mov
roll
lcall
mov
rcll
into
xchg
xchg
bound
xchg
mov
icebp
or
mov
test
or
mov
orl
test
movsl
or
sub
fsub
pop
test
lret
add
cmp
scas
dec
aam
xlat
insb
pop
std
and
test
ret
aam
sub
xor
gs
add
scas
add
cld
loope
pop
aas
mov
pop
int
cli
es
pop
vandnps
insb
and
pop
inc
outsl
dec
inc
pop
jb
add
testb
aad
cs
not
lock
or
or
imul
sub
ds
cwtl
leave
sarl
xor
das
sub
push
jl
mov
mov
ret
push
popa
sub
notb
cmp
add
jo
inc
and
push
xchg
mov
stc
mov
nop
in
movsl
popa
es
adc
lods
sbb
jp
cmp
and
sub
mov
aad
loop
inc
addr16
adc
jle
mov
pop
movsb
lea
arpl
cltd
ja
out
out
incb
adc
in
sbb
push
lret
mov
pop
scas
xchg
in
push
push
mov
xor
popf
lods
xchg
subb
sub
mov
pop
mov
xchg
add
stos
loopne
cmpb
sbb
push
sahf
add
sahf
fldenv
xchg
mov
pop
cwtl
testb
mov
and
add
out
lock
mov
lods
push
mov
arpl
mov
std
sbb
xorl
push
loopne
into
jge
ds
xchg
fstl
sbb
jb
jmp
adc
pusha
dec
push
cmp
cmp
xchg
jmp
rcr
jle
cwtl
int3
inc
mov
pop
filds
pop
out
fadds
into
inc
std
adc
adc
jb
in
in
sub
jp
retw
push
sbb
cmp
jmp
jl
into
lds
lea
xor
int3
cltd
inc
mov
test
leave
mov
jmp
aad
sbb
fisubs
inc
push
adc
sbbb
add
outsb
lock
movsl
stos
dec
lahf
jmp
sti
loope
clc
or
insl
pop
dec
das
cmp
jge
mov
sub
dec
sbb
inc
push
inc
pop
ffree
sub
dec
mov
lods
inc
mov
mov
js
sub
xchg
inc
imul
and
push
fs
test
adc
inc
lahf
pop
inc
in
xchg
pushf
pop
out
movsl
dec
vpperm
movsl
int3
outsl
jmp
in
in
mov
cmp
scas
in
test
js
sub
inc
pop
xchg
scas
mov
stc
aam
js
int3
pop
pop
jb
adc
dec
movsb
fiaddl
mov
aam
mov
andl
daa
ret
jle
pop
jno
outsl
push
dec
sub
pop
icebp
mov
int3
sbb
push
dec
dec
sti
mov
sahf
push
add
push
adc
or
sub
call
xchg
gs
dec
int
test
adc
xor
push
inc
jae
fmuls
stos
outsb
and
icebp
das
out
js
mov
movsb
pop
fs
push
negl
popa
pop
inc
or
jecxz
pop
sbb
.byte
.byte
and
.byte
