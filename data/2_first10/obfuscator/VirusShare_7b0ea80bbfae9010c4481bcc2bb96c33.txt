icebp
pop
test
push
sbb
or
mov
rol
and
add
jmp
add
lds
push
push
inc
sub
add
jno
mov
push
mov
mov
daa
lods
sti
sahf
jmp
arpl
xor
pop
negl
sub
imul
push
add
adc
and
push
shld
and
add
sbb
daa
xor
xchg
or
arpl
inc
aad
and
loope
adc
cmpsb
adc
cmp
xor
pop
mov
leave
imul
inc
push
push
sbb
xchg
xchg
and
pop
cwtl
mov
or
sbb
push
jg
or
mov
xchg
shrb
pop
mov
data16
hlt
pop
push
dec
push
inc
imul
int
popa
xchg
aad
pop
dec
in
and
inc
dec
out
dec
nopl
clc
push
pop
mov
jne
dec
mov
rolb
test
pusha
maxps
inc
dec
sbb
mov
aam
jo
iret
xchg
dec
and
fisubrs
sub
adc
sahf
add
xor
xchg
sbb
sub
mov
push
test
in
xchg
sub
cwtl
xor
addr16
das
pop
mov
jno
or
cmp
or
fldl
mov
or
adc
out
scas
movsl
xor
mov
pop
dec
and
aas
gs
aam
pop
or
loop
shl
xor
and
dec
stos
push
inc
enter
sbb
xor
adc
push
add
popf
adc
cmpsb
call
mov
int3
test
or
mov
add
cmpsb
loope
add
mov
lret
outsb
in
mov
sbb
mov
xor
xchg
pusha
imul
and
push
fisttps
pop
add
idivl
int
sbb
push
fdivr
pop
sbb
andl
test
unpckhps
cmpsb
push
or
loop
nopl
inc
xor
popf
mov
xor
jl
les
jbe
lahf
inc
fildl
xor
loopne
loope
and
test
cmpsl
jp
out
and
inc
mov
push
call
pop
in
sub
push
lea
mov
xchg
lea
cmpsb
sub
aas
mov
mov
into
push
push
add
cmpl
or
out
hlt
inc
and
sbb
jecxz
or
inc
inc
sbb
push
sub
fisubs
rclb
xor
lock
inc
stos
jns
push
aas
mov
jne
mov
popf
aad
faddp
mov
subl
jmp
fstl
fwait
cltd
in
sbb
sub
cmp
pop
mov
sbb
cmp
je
lret
addb
cmc
inc
xchg
or
cmp
xor
icebp
mov
rcrb
jmp
add
mov
ret
mov
inc
pop
adc
inc
rorl
or
aaa
or
add
push
add
inc
xor
add
push
add
fldenv
std
pop
aas
inc
pop
dec
stos
subl
subl
dec
jle
fadd
push
inc
test
mov
adc
mov
sub
push
mov
les
and
test
adc
cmp
sbb
add
sub
push
cltd
xchg
dec
sahf
sbb
push
adc
xor
xor
xor
xchg
pop
pop
mov
xor
inc
dec
je
cmp
adc
nop
dec
or
push
cltd
or
mov
mull
shl
cmpsl
and
xor
xor
and
aaa
and
mov
mov
jbe
outsb
add
or
sub
jbe
dec
xchg
pusha
mov
repz
pop
loopne
mov
push
push
sub
mov
push
inc
push
add
inc
test
cmp
aam
pop
outsl
addr16
inc
insl
inc
and
inc
xor
lcall
dec
or
push
sbb
or
andb
add
mov
xchg
rcrl
mov
mov
iret
dec
xchg
inc
pop
enter
jp
mov
scas
push
sbb
sbb
aad
jge
es
imul
xchg
cmpl
sbb
shll
sbb
mov
sub
adc
or
push
dec
popf
pushf
xor
sbb
mov
and
push
dec
push
push
xrelease
mov
add
jae
daa
sbb
insl
out
mov
mov
or
mov
mov
xchg
jnp
in
jnp
adc
mov
rolb
or
mov
xchg
rcll
cwtl
and
and
mov
xor
cmc
add
into
fisubl
jno
add
into
fsubr
rcrl
adc
xchg
and
fistl
cltd
stc
inc
jecxz
xor
mov
adc
and
andb
test
cmpsl
cmp
xor
hlt
bnd
nop
xchg
push
lret
cmp
or
sbb
bswap
dec
imul
aad
dec
and
fwait
dec
push
popa
sbb
mov
sub
aas
dec
lock
sub
cmp
mov
push
iret
push
daa
aad
ret
adc
xor
inc
jae
pop
cld
push
adc
stos
mov
and
faddp
dec
clc
sbb
sbb
je
push
push
or
das
mov
gs
xchg
lds
and
and
xchg
adc
dec
iret
xchg
dec
test
dec
jmp
jae
and
sbbl
adc
movsb
jge
dec
add
test
cli
jno
mov
sbb
cmp
cmp
jg
cmpb
orl
mov
icebp
arpl
out
and
iret
stc
imul
mov
popf
test
sbb
addl
pop
decl
sbb
stc
and
or
cld
adc
adcb
mov
push
cmp
mov
pop
jp
jne
mov
test
xchg
mov
das
jno
cwtl
jge
add
fs
dec
iret
popa
push
sub
imul
in
out
dec
inc
cmp
xor
mov
mov
xchg
mov
or
inc
loopne
jnp
and
repz
or
push
mov
or
or
and
js
mov
out
inc
in
xchg
sub
dec
xchg
vphadddq
and
mov
sub
or
xchg
or
lock
sete
inc
or
ret
lds
xchg
dec
cltd
shl
test
and
jb
push
enter
out
lds
push
pop
cmp
and
adc
jle
sarl
cltd
jb
mov
or
adc
mov
mov
and
push
lea
mov
mov
popl
loope
mov
add
repnz
cs
lock
cmpsb
or
adc
adc
pop
repz
lods
or
leave
cmp
xor
sbbl
xor
cmpsb
dec
es
adc
dec
ljmp
mov
popa
and
repz
js
addr16
int
out
lea
push
sub
fcoms
push
ljmp
or
rclb
mov
mov
out
adc
mov
stos
fnstcw
popf
and
lcall
les
dec
sbb
add
mov
cmp
pop
daa
add
xchg
sub
xchg
dec
xchg
pop
jno
stc
aad
xchg
push
sahf
imul
sbb
rorb
std
out
iret
xor
fdivrs
les
mov
jecxz
and
mov
std
jns
and
push
js
bound
nop
fcmovbe
cltd
in
scas
enter
dec
or
dec
pusha
mov
dec
jno
or
leave
xor
cmp
or
in
or
adc
sbbl
lock
lods
cmp
arpl
push
and
xchg
xor
push
adc
or
enter
mov
dec
push
xor
push
repnz
jmp
jne
sub
enter
andl
jmp
inc
js
adc
inc
mov
and
movsb
incl
popf
pop
rcll
xor
out
movsl
subb
popf
xor
pushf
jg
shrb
dec
les
pop
mov
frstor
mov
sub
stos
lods
fldt
mov
dec
addl
adc
ds
sbb
and
popa
jp
cmpsl
jg
aad
addr16
mov
mov
mov
lock
sti
pop
dec
mov
and
icebp
cs
mov
pop
ret
insb
jg
push
or
inc
xor
scas
or
adc
leave
andb
cmpb
xchg
add
xor
mov
fisttps
pop
mov
test
leave
mov
inc
adc
or
jns
mov
fldcw
push
pusha
push
adc
icebp
jl
mov
add
add
xchg
icebp
adc
stos
mov
push
mov
add
mov
adc
ss
imul
sbb
cmp
movsl
popf
add
movsl
adc
dec
hlt
rorl
cmpxchg
push
loopne
pop
cmp
pop
in
gs
mov
sub
pop
sub
pop
jecxz
rol
jmp
sbb
out
xor
adc
sbb
xchg
movsb
rcrl
fs
inc
mov
push
jp
cmp
das
inc
mov
rorl
cs
outsb
pop
sbb
fs
pop
push
pop
gs
add
inc
pop
cmpsl
jne
es
lahf
outsl
mov
mov
les
dec
mov
aas
test
xchg
xchg
xchg
ja
loopne,pt
shll
lds
xor
mov
jecxz
loope
test
addb
mov
int
addr16
and
fwait
or
and
dec
rorb
in
ret
mov
bound
pushf
sbb
test
cmp
or
sbb
cwtl
mov
incb
jmp
popa
data16
enter
mov
out
iret
pop
iret
loopne
or
inc
or
imul
movsb
xorb
jb
inc
inc
shrb
jo
xor
les
sbb
popa
cld
mov
or
sbb
pusha
jmp
push
or
sub
sbb
adc
aad
sbb
inc
mov
push
jne
scas
ja
mov
sahf
sbb
cmp
cmc
mov
aad
sub
add
nop
imul
xor
inc
fs
mov
xchg
shll
leave
int3
xchg
out
in
subl
cmpl
adc
sti
sbb
jno
push
add
mov
xor
repnz
push
loopne
ret
jo
das
popa
sbb
pop
sub
dec
and
and
push
cmc
pusha
ret
insb
xor
test
dec
xor
dec
stc
or
fldenv
dec
inc
add
sahf
inc
sub
inc
or
jno
push
push
jp
cmp
int3
jge
xor
cmpl
mov
xchg
and
outsl
mov
das
xor
mov
cltd
mov
lcall
sub
adc
sub
dec
pop
xchg
rcl
add
inc
add
bound
mov
adc
fwait
xchg
and
sub
gs
sbb
insb
xchg
jmp
cmp
adc
mov
xor
push
dec
push
mov
hlt
add
jmp
cmp
cmp
inc
or
inc
adcl
jge
jns
inc
mov
adc
imul
push
popa
lcall
int3
dec
daa
in
fistps
inc
inc
jg
cmp
jg
and
popa
and
cltd
mov
arpl
cltd
outsl
xor
into
leave
add
outsl
sub
lea
testl
add
add
popl
je
add
jo
add
pop
cmp
add
data16
add
mov
and
pop
adc
pop
ds
mov
loop
loopne
and
and
ficoms
mov
mov
or
dec
cmpsb
mov
xchg
arpl
or
and
rcll
ficompl
xor
mov
inc
pop
fs
icebp
add
or
push
mov
rcrb
xor
mov
cmp
mov
movsl
int3
jmp
inc
inc
mov
sbb
jecxz
ret
loop
mov
shl
pusha
inc
sahf
fcompl
cli
divl
out
adc
ds
mov
call
dec
data16
cli
pop
xchg
lcall
push
out
xlat
cmpsb
das
pusha
adc
and
clc
dec
xchg
inc
aam
inc
subl
push
inc
mov
inc
xor
mov
push
sarl
add
jle
jge
mov
mov
and
and
jno
mov
loop
sbb
xor
cltd
cltd
cmpsb
adc
mov
jne
movb
lods
fcmovb
push
adc
mov
cli
mov
pusha
cs
xor
out
jge
mov
jecxz
pop
push
xchg
jl
add
xor
xchg
pop
xchg
xchg
js
push
imul
das
inc
jo
or
adc
adc
sbb
rcr
out
cmc
sbb
add
jae
or
cmc
inc
or
and
inc
fwait
addb
lds
inc
push
mov
icebp
add
sub
cmp
mov
mov
sbb
mov
xchg
mov
and
xchg
jnp
test
cltd
inc
popl
push
mov
repz
mov
push
cmp
push
add
popf
cmpl
mov
adc
stc
aad
dec
fs
fdivrl
fisubrl
call
and
into
and
xor
js
xchg
and
imul
les
and
push
or
inc
dec
sti
inc
imul
addb
mov
sbb
fldl
scas
mov
and
dec
std
push
sbb
bound
rclb
movsl
dec
push
rcl
add
insb
mov
aas
or
lahf
add
scas
shl
sbb
add
dec
sub
lcall
ss
imul
cmp
pop
jb
cmp
mov
pop
arpl
mov
in
and
xor
repz
scas
bound
cmp
aas
js
dec
xor
add
and
mov
sbb
data16
gs
sub
adc
in
outsb
xor
pop
aad
outsl
jmp
sub
jmp
imul
add
bndstx
or
pop
sbb
gs
stc
ss
int
pop
add
fisttpll
push
mov
cmp
mov
or
insb
jg
add
ljmp
pop
jg
jbe
mov
insb
outsl
fildll
mov
add
shrb
loop
inc
shlb
mov
lret
xlat
mov
adc
int3
add
jns
js
stos
sub
test
sub
mov
clc
aaa
jecxz
pop
mov
add
cmpsl
pop
testb
jb
cmpsl
scas
mov
insl
or
and
xor
cli
jno
mov
and
andl
xchg
sbb
add
dec
inc
iret
or
stos
daa
sub
and
lock
xor
xchg
fdivl
sub
sbb
mov
add
jmp
ret
dec
lock
xor
leave
enter
loope
add
out
or
sar
sahf
sub
and
mov
ret
or
pop
out
bnd
push
xchg
movsb
out
outsl
dec
neg
flds
imul
je
fimull
out
test
sbb
push
insb
js
adc
mov
add
sbb
fs
add
shufps
shlb
or
mov
push
adc
jno
cmp
cmp
sub
sbb
andb
mov
rcr
xor
mov
add
icebp
gs
xor
mov
outsl
sub
or
xchg
xor
or
jne
xchg
or
and
dec
lods
xchg
and
fwait
mov
ret
ds
fnstenv
insl
sahf
test
lret
and
cmp
jg
test
xchg
orl
and
mov
add
andl
mov
sbb
ja
and
push
dec
enter
cmp
dec
hlt
cmp
scas
rolb
xor
rclb
loop
insb
jb
mov
and
bnd
into
push
imul
inc
mov
push
and
xor
xchg
cmpsb
sub
popa
push
adc
in
dec
cmp
shlb
xor
and
and
fcoms
push
shll
nop
loop
out
andl
clc
pop
jl
pushf
mov
add
mull
loopne
shll
mov
mov
sti
xchg
push
push
cs
repz
adc
mov
and
push
xchg
cltd
test
push
jns
imul
lds
and
mov
por
sub
imul
jmp
and
mov
pop
push
mov
pop
sarb
adc
adc
and
mov
das
lods
push
fistpl
and
test
jle
cmp
test
jecxz
sub
arpl
jb
adc
testb
scas
and
sub
jle
inc
adc
cs
scas
sbb
in
inc
dec
jge
dec
xor
push
test
test
fucomi
inc
fwait
lods
sbb
xchg
adc
loopne
inc
stos
aas
orl
mov
dec
and
sbb
mov
or
xchg
mov
js
cmpsl
or
cmp
jge
xor
aas
gs
dec
pushf
sbb
and
push
and
inc
fsts
test
push
scas
ds
dec
scas
xchg
popf
mov
outsl
adc
shrb
mov
das
call
inc
pop
lret
arpl
lds
jge
push
cwtl
xor
mov
leave
pusha
dec
adc
lret
pop
push
jns
aam
and
ficoms
mov
sbbb
ficompl
xor
andb
in
pop
push
adcb
add
adc
mov
mov
adc
adc
sub
mov
push
sbb
orl
or
sub
xchg
mov
sub
cmc
cld
mov
or
sbb
adc
dec
push
jae
movsl
xchg
mov
subl
and
mov
cs
sbb
sbb
ficoml
int
lds
mov
test
adc
xor
mov
adc
push
xor
jns
pop
mov
fwait
adc
push
stos
mov
mov
adc
jmp
or
and
sbb
sbbl
test
and
add
push
sbbl
ret
daa
and
lea
stos
and
in
or
add
lds
gs
jo
and
outsb
or
nop
mov
arpl
jecxz
and
pop
nop
lea
jno
sub
cmpb
xchg
adc
mov
inc
sbb
mov
leave
push
add
das
add
push
or
push
lea
imul
or
pop
jne
cltd
lcall
pop
sub
xchg
sbb
pop
movsl
dec
sub
out
fistpll
nop
pop
xlat
icebp
jmp
cmp
addr16
mov
push
sub
aas
in
or
cmp
adc
sbb
fidivs
add
and
lods
je
dec
pusha
loop
out
mov
sub
movsl
aaa
or
add
inc
pusha
adc
adc
sub
or
cltd
mov
and
gs
and
dec
and
adc
addl
or
adc
cmp
adc
fadds
sbb
sub
inc
loopne
iret
imul
add
lret
mov
enter
jnp
jmp
jno
loope
iret
sbb
cwtl
mov
cs
or
nop
lods
mov
add
or
add
enter
or
pop
mov
hlt
cwtl
inc
idivl
test
pop
jo
imul
cmp
stc
repnz
out
repnz
xchg
dec
jb
les
rcll
jle
scas
mov
pop
push
fmull
fcoms
popa
les
add
inc
lds
and
fimuls
lea
mov
push
adc
dec
addb
and
pop
jle
arpl
inc
aaa
inc
jae
pop
out
dec
aaa
test
pop
pop
pop
das
mov
lret
popf
fwait
cmp
sub
add
and
addr16
mov
jns,pt
pushf
adc
xor
inc
mov
jge
xchg
pushf
mov
int3
iret
popa
mov
mov
orl
adc
lret
addb
xor
lds
sahf
pop
push
or
sbb
or
xor
ret
adc
ds
inc
xor
movl
sub
dec
adc
sub
sbb
lcall
sahf
dec
lcall
movsb
jp
mov
jb
in
std
lea
loop
mov
pop
leave
push
mov
lods
icebp
jno
inc
xor
mov
xchg
sub
aaa
xchg
clc
jge
sub
iret
iret
icebp
sub
in
test
cmp
sbb
int
dec
mov
push
adc
arpl
sub
cwtl
stc
sbb
cpuid
cwtl
cmp
js
test
test
shr
and
push
aaa
out
ret
sub
and
push
dec
cmpsl
shrl
insl
daa
sar
loope
cmp
or
ret
or
sahf
pop
sbb
jne
in
inc
imul
pop
das
call
dec
mov
push
mov
and
add
mov
insb
xor
popa
cmp
in
add
xchg
xchg
lds
mov
stos
shrl
pop
pop
mov
lea
scas
cwtl
and
mov
add
sbb
inc
inc
loope
in
setns
inc
nop
adc
clc
and
mov
mov
cmc
xchg
mov
movsl
xor
imul
inc
mov
push
push
xchg
pushf
cmp
sbb
jno
sub
and
scas
jno
sbb
scas
stos
mov
adc
and
and
xchg
imul
or
into
adc
push
jne
cmc
outsb
lcall
push
mov
gs
lea
je
jns
pop
xchg
and
movsl
or
add
ds
movsl
popf
mov
inc
push
push
in
and
test
mov
pusha
xchg
movsl
aam
lds
das
imul
daa
xchg
pop
xor
cld
sbb
lock
sbb
dec
js
pusha
adc
inc
xlat
or
rcrb
test
push
fldcw
add
adc
imul
push
cmp
lret
mov
xchg
jmp
fisttpll
clc
aam
movsl
scas
mov
lods
or
add
pushf
in
test
daa
shlb
mov
or
fisubrs
pop
or
call
push
test
pusha
push
sbb
movsb
sub
jae
mov
mov
dec
sbb
arpl
scas
iret
dec
shrl
xchg
jg
sbb
mov
push
add
jno
cmp
xor
push
inc
ljmp
xchg
nop
addr16
roll
mov
sti
push
sbb
in
es
dec
pop
movsb
shrb
repnz
and
adc
pop
lret
out
dec
inc
fimull
sub
stos
jl
dec
adc
pop
dec
rolb
cmpsb
lods
call
and
jb
sbb
loope
cmpb
cmp
xchg
ljmp
les
mov
add
andl
jecxz
jbe
lock
or
fldl
les
cmp
imul
push
sbb
sbb
outsl
inc
dec
stos
jne
nop
cmc
jbe
sub
mov
inc
add
mov
inc
xlat
jge
rclb
push
lret
lret
xchg
cmp
mov
and
insl
pushf
push
ret
repz
or
xchg
mov
gs
xor
jecxz
cli
mov
or
int
es
aaa
push
inc
insb
sub
rcrb
push
xor
test
xchg
mov
lea
rcl
dec
in
jle
shrb
jmp
mov
push
or
rorb
imul
mov
add
add
inc
push
loopne
mov
mov
aad
aad
push
sbb
into
jl
dec
inc
xor
dec
movsl
xor
test
xchg
aaa
cmovle
andl
add
jno
or
pop
lea
les
and
add
and
loopne
dec
aad
adc
popa
cmp
daa
aam
and
nop
sbb
push
xchg
pop
orb
add
cmp
sbb
push
jbe
sub
sbb
sub
add
addb
add
pop
sbb
popf
mov
lds
inc
fldcw
das
shlb
inc
ret
push
adc
or
test
leave
xchg
xorb
lahf
rorl
xor
dec
add
cs
xor
inc
fadds
or
xchg
or
les
add
orb
repz
jns
pop
ret
clc
push
and
dec
mov
shrl
inc
andl
orl
addb
in
add
loopne
rorb
sbb
lock
mov
adc
in
cmp
roll
pop
rclb
sbb
pop
arpl
add
mov
call
add
inc
xchg
inc
cmp
movsb
jns
cmp
ficomps
out
hlt
sbb
push
xlat
in
rorl
inc
pop
cmp
icebp
cmpl
mov
mov
xchg
popf
gs
inc
shr
inc
leave
jl
inc
jo
mov
inc
dec
adc
dec
js
cmp
aaa
test
inc
shll
int
mov
mov
lret
jle
inc
es
jge
mov
xor
inc
or
movsl
cmp
lcall
andl
jo
pop
test
push
fdivs
in
popa
scas
enter
outsl
add
xchg
js
adc
push
push
repz
daa
adc
xor
jl
cmp
mov
movsl
or
inc
mov
sbb
and
mov
icebp
cmp
push
adc
aad
dec
pop
mov
or
cld
inc
sbb
jns
fmuls
inc
dec
popf
lea
mov
mov
arpl
dec
xor
rorl
pop
or
jb
add
stos
clc
test
test
filds
add
loopne
shl
add
sar
or
add
inc
sar
call
test
xchg
cld
iret
mov
inc
xor
cmc
movsb
pop
lea
and
stc
negl
and
ror
icebp
arpl
jge
sbb
push
xchg
fnstcw
cmp
cli
cltd
imul
and
lcall
and
repz
and
cmpsl
sti
sub
jb
jae
xchg
call
and
push
xchg
loopne
jae
xchg
xlat
and
and
out
and
imul
shll
stc
inc
les
and
and
and
cwtl
jge
sbb
jns
cmp
sbb
cld
sub
and
fmuls
push
xchg
loopne
jae
mov
and
sbb
xchg
repz
test
mov
jge
sbb
out
stos
and
jg
scas
cwtl
jge
sbb
cld
daa
and
and
push
xchg
out
and
dec
mov
lahf
xchg
loopne
jae
xchg
adc
cld
xchg
pop
jae
xchg
and
mov
and
pushf
iret
jae
xchg
mov
stc
out
and
sub
mov
in
cmp
addr16
aad
and
dec
popa
sub
testl
push
xchg
popf
stos
and
jg
pop
fwait
cwtl
jge
sbb
jae
les
and
mov
xchg
adc
inc
push
and
jecxz
mov
imul
rcrl
loopne
jns
andl
and
cmp
and
push
xchg
comiss
jno
ljmp
ret
lcall
sbb
stc
jle
and
stc
lds
dec
out
jge
sbb
sbb
and
mov
xor
jno
sub
and
jae
pop
cmpsl
and
and
mov
mov
jae
xchg
leave
and
and
jns
xor
jge
sbb
and
and
sti
dec
or
sbb
out
sbb
and
xchg
nopl
and
inc
das
push
xchg
cld
jecxz
and
jp
testb
jae
xchg
xor
and
adc
arpl
fcoml
pop
cld
sub
and
push
and
pop
sbb
sbb
and
and
and
inc
cmpsl
and
imull
insl
lret
sahf
imul
imul
test
and
sbb
cld
ret
and
icebp
push
push
xchg
jae
xchg
sbb
fwait
push
xchg
lds
pop
and
and
jge
sbb
jae
xchg
insl
mov
and
dec
cmp
cwtl
jge
sbb
sbb
addr16
xchg
shlb
xor
push
xchg
and
and
cmpsl
pop
inc
stc
push
imul
imul
mov
and
xchg
cld
jmp
and
and
imul
fsubrs
mov
jae
jecxz
ret
or
and
and
cwtl
jge
sbb
cld
or
and
xor
fistpl
cmp
push
outsb
stc
xchg
and
jae
xchg
jns
and
das
pop
mov
adc
push
xchg
loopne
jae
lcall
mov
nop
or
and
xchg
and
or
cwtl
jge
sbb
fs
xchg
int
and
and
jno
push
xchg
add
and
adc
fists
fists
imul
stc
jge
and
pop
stos
xor
mov
sbb
jae
adc
and
sbb
adc
in
jge
sbb
and
add
xchg
rcrl
and
cld
sti
cmp
fwait
pop
mov
repz
fwait
pop
repz
stc
js
and
add
push
xchg
loopne
cld
int
and
in
cmp
pop
inc
push
xchg
dec
sbb
and
xchg
cltd
scas
and
inc
cmp
stc
adc
add
sub
push
adc
test
xchg
arpl
jae
xchg
sbb
and
scas
mov
mov
cld
sahf
sbb
and
test
imul
ret
and
and
gs
rcrb
jae
xchg
mov
and
jmp
cli
in
jge
sbb
cld
push
and
and
pop
mov
xchg
aas
mov
and
cmpsb
add
iret
lods
push
xchg
mov
nop
in
call
mov
mov
jge
sbb
sbb
mov
cwtl
aad
popa
cld
mov
pop
add
jge
sbb
jae
xchg
je
and
mov
daa
jae
xchg
and
and
and
lcall
imul
nop
jno
cltd
ror
push
xchg
mov
test
test
xchg
pop
mov
and
add
cwtl
jge
sbb
push
or
and
dec
add
xchg
loopne
jae
xchg
jbe
and
in
mov
jae
xchg
icebp
jae
leave
mov
and
push
xchg
loopne
jae
xchg
rol
and
pop
jae
xchg
mov
dec
imul
imul
shll
and
jae
cmp
das
imul
and
and
pop
cwtl
jge
sbb
and
cld
pop
shll
ror
dec
outsb
inc
push
xchg
loopne
push
loopne
jae
xchg
adc
sahf
sub
sub
and
sbb
mov
sahf
cwtl
jge
sbb
mov
cld
std
sbb
cmp
xchg
stc
rcrb
jne
jl
in
imul
sbb
stos
les
and
mov
and
cld
hlt
or
and
mov
jae
xchg
inc
and
and
mov
jae
xchg
mov
jae
push
adc
cmc
test
cwtl
loopne
jae
xchg
fisttpl
and
out
shrl
pop
adc
xchg
jae
cld
in
and
iret
push
cld
fwait
popf
jno
stc
ljmp
imul
mov
and
push
push
xchg
mov
and
iret
mov
xchg
nop
adc
cld
pop
stos
and
pop
sbb
pop
dec
cwtl
jge
sbb
ret
and
sti
in
addr16
imul
test
and
mov
mov
icebp
jae
enter
jno
jae
shlb
push
xchg
shrl
cld
fsubs
sub
jge
sbb
cld
and
and
mov
and
gs
cld
js
and
fistl
xchg
and
fimuls
and
push
gs
shlb
cmc
sahf
pop
in
cld
hlt
test
and
fcompl
xchg
bound
and
push
xor
jae
xchg
fs
dec
mov
and
icebp
jmp
push
xchg
lods
scas
and
cld
jo
and
les
or
test
sbb
jae
push
and
sar
xchg
imul
sahf
pop
add
and
sarl
cwtl
jge
sbb
pop
and
and
jne
stos
sbb
and
and
divl
push
popa
imul
mov
and
xchg
aam
and
and
xor
imul
push
xchg
pop
and
and
xchg
imul
xchg
cmp
mov
xor
cld
pusha
sbb
and
push
inc
test
mov
xchg
nop
sbb
ds
and
or
imul
cld
mov
and
orl
cwtl
jge
sbb
and
les
idivb
xchg
cmc
stc
cmpsl
mov
and
ja
outsb
dec
or
jae
xchg
mov
and
test
test
jae
jae
xchg
jmp
stc
sbb
and
dec
adc
jae
xchg
loopne
stc
int
and
mov
imul
imul
shll
pop
cmp
cwtl
jge
sbb
jns
inc
shll
stc
daa
lods
and
stc
and
and
push
mov
ljmp
sbb
and
outsb
js
cmp
sahf
int3
and
and
xchg
negl
and
jp
sbb
inc
imul
push
xchg
cld
sub
jnp
cwtl
jge
sbb
mov
and
push
pushf
fs
mov
cmpsl
and
jae
xchg
fcompl
and
push
jmp
movsb
sub
push
xchg
dec
or
and
imul
xchg
mov
cmpsb
stos
popf
into
pop
jae
xchg
sub
and
aad
std
inc
push
xchg
fdivr
jae
xchg
jge
and
mov
pop
mov
cwtl
jge
sbb
jae
xchg
mov
and
dec
loopne
sub
cmc
or
and
dec
push
xchg
arpl
push
pop
and
adc
arpl
and
xchg
cmp
and
cwtl
xchg
mov
imul
mov
add
and
test
inc
pushl
and
xchg
fidivrl
adc
fwait
add
push
xchg
cmpsb
jae
xchg
and
and
push
sub
jge
mov
and
and
in
and
push
jb
pop
mov
jae
xchg
xor
and
push
mov
test
xchg
cmpsl
stos
and
and
push
imul
imul
and
fiaddl
push
loopne
cld
or
or
pop
fwait
push
xchg
sahf
mov
and
add
push
pop
cwtl
jge
sbb
or
xchg
mov
mov
push
xchg
fcomps
cld
lds
nop
dec
sub
cwtl
jge
sbb
loope
cld
mov
jnp
shlb
cld
mov
and
pop
mov
cmp
and
xchg
jae
rcrb
imul
jae
xchg
aas
or
and
nop
xchg
pop
les
imul
jae
xchg
xchg
push
and
pop
sub
cld
rcrb
and
jae
xchg
mov
jmp
nop
adc
and
jle
imul
and
and
xchg
mov
and
outsb
push
fimuls
fs
jae
xchg
in
pop
and
dec
repnz
pop
jae
mov
and
fsubs
sub
hlt
add
push
xchg
inc
scas
and
test
pop
cwtl
jge
sbb
jae
or
lahf
dec
cmp
jae
xchg
bound
and
iret
push
pop
ficompl
jmp
push
xchg
loope
jae
shrb
rcrl
imul
adc
and
stc
jae
loope
jae
xchg
fnstenv
rcrb
and
push
xchg
inc
test
and
insl
lods
lea
jnp
stc
or
int
mov
adc
and
imul
jae
je
and
sub
dec
jp
cwtl
jge
sbb
stc
imul
and
cmp
and
xor
sbb
xchg
cld
add
and
xor
sarl
shll
stc
outsl
scas
and
cld
dec
mov
and
push
xchg
nop
sbb
dec
sbb
and
cwtl
jge
sbb
mov
and
cmpsl
inc
jae
xchg
xchg
test
and
imul
and
sub
cwtl
jge
sbb
lods
and
cld
push
and
leave
lds
xchg
hlt
pop
and
cld
pop
push
and
repz
arpl
cld
dec
push
and
lret
jmp
push
push
cwtl
jge
sbb
addl
jae
xchg
mov
iret
imul
dec
sahf
cld
sbb
xchg
push
stc
lods
stos
and
inc
lahf
mov
imul
and
jae
xchg
stos
or
and
mov
and
xchg
push
xchg
in
or
and
mov
loopne
mov
and
and
jae
xchg
inc
sbb
mov
jge
sbb
cld
jno
and
sbb
outsb
sub
sbb
imul
movsl
and
out
loope
imul
cld
fidivl
jmp
arpl
mov
fs
cwtl
jge
sbb
xchg
hlt
stos
and
or
sbb
sahf
adc
stc
gs
inc
jae
xchg
add
addb
add
imul
add
and
into
jnp
add
jge
sbb
push
lods
and
call
stc
scas
test
sbb
scas
and
sbb
push
xchg
pusha
jae
xchg
pop
cmpsb
and
adc
out
lea
xor
imul
cld
add
adc
cwtl
jge
sbb
pop
pop
mov
popf
add
and
jae
lds
and
push
jne
rcrb
xchg
in
stc
inc
sbb
and
push
and
imul
adc
and
jne
sub
cwtl
jge
sbb
pop
and
xchg
sbb
cwtl
loopne
jae
xchg
or
mov
cld
out
or
and
xchg
push
xchg
insb
and
and
mov
or
xchg
push
xchg
cmp
and
rorl
jge
sbb
xchg
cltd
add
jmp
jmp
pushf
cwtl
jge
sbb
sbb
ss
cwtl
sbb
and
mov
xchg
lea
out
dec
stc
imul
outsl
stc
lahf
lods
and
jo
push
pop
jae
xchg
stc
xchg
test
xor
xchg
pop
and
and
sbb
and
cwtl
sub
fisttps
cwtl
jge
sbb
jae
stos
or
out
je
push
xchg
pop
mov
push
xchg
out
and
push
mov
mov
pop
push
and
jae
fsubrl
addr16
fstpl
xchg
sahf
js
and
jae
and
dec
mov
xchg
loope
jae
xchg
clc
mov
and
dec
mov
jge
sbb
lds
cmp
mov
or
and
push
or
pop
and
imul
scas
and
out
add
fwait
scas
cld
mov
call
inc
fstpl
push
xchg
ljmp
shrb
loopne
cld
and
and
scas
jecxz
mov
imul
imul
scas
and
xor
bound
xchg
pop
jae
xchg
in
and
in
popf
fnsave
repz
cld
push
mov
and
mov
sbb
and
and
mov
in
jge
sbb
bound
ljmp
or
and
cld
mov
jge
sbb
fcompl
and
stc
push
sbb
lea
stc
sahf
adc
mov
sbb
cld
cmp
add
mov
and
test
and
cmc
stc
cmpsb
cwtl
jge
sbb
and
push
pop
out
lcall
lcall
adc
and
mov
xchg
jae
aaa
or
and
jg
icebp
xchg
xchg
push
xchg
pop
jae
xchg
lahf
mov
and
imul
imul
cld
jb
and
mov
cmpsl
xchg
stc
push
xchg
push
xchg
scas
mov
and
cld
pop
sbb
and
aas
sbb
xchg
jp
and
sbb
cwtl
jge
sbb
nop
in
stc
mov
adc
cwtl
jge
sbb
push
xchg
add
and
jmp
push
sub
mov
and
xchg
movsl
or
and
xchg
push
adc
sbb
or
jmp
mov
stc
rcrl
and
cmc
outsb
stc
das
and
and
xchg
pop
dec
jb
movsb
cli
and
jg
stc
adc
and
add
in
cmpsl
push
xchg
jo
jae
xchg
out
pop
and
or
jle
scas
cwtl
jge
sbb
xchg
xor
and
xor
fldcw
pushf
fadds
and
fsub
sub
xchg
jae
xchg
stc
jae
out
and
outsb
inc
ficoml
xchg
cs
jge
sbb
cld
sbb
and
push
stos
imul
push
xchg
int
and
cld
adc
and
adc
jge
sbb
xchg
mov
and
cld
mov
dec
jae
xchg
sahf
js
and
cld
fimull
or
pop
and
and
jae
adc
sub
jge
sbb
and
sbb
and
xor
stc
jno
push
xchg
and
mull
and
mov
into
imul
adc
adc
dec
push
mov
push
out
popf
mov
and
cld
popf
sbb
and
push
jle
adc
jae
xchg
scas
sbb
and
ret
mov
imul
mov
xor
sbb
push
xchg
insl
mov
and
xchg
inc
cwtl
jge
sbb
and
and
stc
fwait
adc
and
pop
pop
cld
rclb
and
lret
push
dec
jg
xchg
push
xchg
cld
notb
and
sub
push
stos
das
imul
lods
and
cld
adc
and
pop
popf
outsb
jae
xchg
arpl
inc
mov
and
inc
pushf
jae
xchg
fdivr
jae
xchg
mov
and
cwtl
jo
mov
pop
jae
xchg
xor
and
sub
into
mov
lock
and
jae
xchg
mov
cld
imul
sbb
xchg
rolb
lods
ret
xchg
cmc
sahf
pop
or
and
mov
pop
mov
sbb
pop
cld
lds
and
mov
cwtl
jge
sbb
cld
jle
and
inc
cs
aam
jge
sbb
push
xchg
push
adc
and
dec
ficoml
imul
sbb
and
mov
jae
xchg
pop
lods
cld
std
or
and
ret
push
xchg
stos
jae
xchg
out
pop
and
mov
ret
jae
xchg
xor
mov
jge
sbb
xchg
stc
xlat
pop
and
adcl
stc
inc
pop
and
jae
xchg
loope
and
sub
cwtl
jge
sbb
imul
or
and
dec
jns
and
and
loopne
cld
pop
clc
and
sbb
inc
xor
jge
sbb
jae
xchg
scas
cmpsl
mov
push
jae
xchg
or
and
ret
je
push
push
out
popf
cwtl
adc
and
fcoms
and
cld
imul
and
cmp
sti
mov
push
xchg
mov
and
cmp
jae
xchg
and
and
jns
mov
and
jae
xchg
nop
mov
lods
and
shl
test
imul
sbb
and
std
and
and
jae
sbbl
and
adc
jge
sbb
and
jae
xchg
lret
pop
and
xchg
jo
jae
xchg
in
and
les
sbb
imul
imul
mov
and
loope
push
xchg
xchg
sbb
and
xchg
jge
and
pop
aas
jnp
jae
xchg
jae
xchg
sub
and
jo
ret
mov
sbb
icebp
jae
xchg
add
dec
repz
into
popa
jae
xchg
in
push
and
jae
cld
and
and
fnsave
loopne
jae
xchg
stc
push
and
outsb
jecxz
mov
jno
cld
pop
and
and
sub
and
jae
xchg
loopne
jae
std
adc
and
pop
out
lret
imul
or
and
xchg
pop
adc
and
push
sub
imul
lds
xchg
cmp
and
sub
loope
imul
stc
push
and
shl
les
mov
adc
and
xchg
sbb
and
or
jl
insb
jae
arpl
and
jp
dec
fstl
imul
or
and
inc
mulb
and
cli
imulb
loopne
jae
xchg
shrl
cwtl
jge
sbb
push
xchg
sbbl
in
fs
adc
xchg
xchg
repnz
and
jl
imul
sbb
and
stc
adcb
imul
lea
and
imul
jno
stc
or
and
push
push
xchg
test
jns
jo
mov
cld
aas
adc
and
and
and
jmp
cmp
jge
sbb
adc
and
testl
sti
and
jae
xchg
rcrb
and
imul
jae
xchg
int
and
ret
int3
cmp
jae
orb
sub
cwtl
cwtl
jge
sbb
sahf
and
and
push
adc
ds
xchg
push
xchg
ficoml
and
jle
jnp
xchg
cmc
sahf
pop
add
and
inc
lds
pop
js
jae
xchg
push
xchg
das
and
and
imul
mulb
and
cmpsl
mov
int3
shll
daa
jae
xchg
cld
and
xchg
popf
push
and
rcll
cwtl
jge
sbb
stc
inc
mov
and
pop
and
and
bnd
xchg
gs
and
dec
mov
push
xchg
push
jb
xchg
xchg
push
xchg
push
xchg
inc
adc
and
xor
hlt
repnz
cmp
imul
add
mov
pop
or
and
xchg
sahf
mov
and
push
adc
xor
mov
and
jae
xchg
popa
cld
cmp
cli
fwait
scas
xor
fisubrs
push
loopne
cld
stos
sti
and
push
loopne
imul
and
lcall
test
sub
mov
jb
jge
sbb
mov
jae
xchg
or
and
jge
sbb
cld
dec
mull
and
push
xchg
stc
and
sub
jae
nop
or
and
dec
or
mov
jae
xchg
pushf
or
mov
lret
push
xchg
push
xchg
int3
stc
and
push
lods
bound
lds
xchg
es
and
and
dec
adc
and
leave
mull
daa
mov
cld
icebp
adc
and
jne
push
xchg
and
and
std
jg
in
sub
cwtl
jge
sbb
loopne
and
and
jae
xchg
fs
and
xor
dec
es
loope
jae
xchg
sbb
and
ja
stos
dec
push
xchg
sbb
cld
rorl
jg
dec
and
cld
int
and
mov
push
xchg
jae
xchg
mov
mov
xchg
mov
and
add
cwtl
jge
sbb
cld
loopne
and
lret
mov
and
stc
jns
and
jae
xchg
out
and
mov
imul
jae
xchg
or
and
xchg
adc
cwtl
loopne
jae
xchg
or
and
in
ds
pop
jae
xchg
push
xchg
mov
and
sub
and
sbb
cld
sub
and
loope
popf
push
mov
imul
and
in
dec
dec
cmp
mov
and
movsb
and
jae
xchg
push
xchg
fsts
and
mov
mov
xchg
push
xchg
stos
adc
and
fisubs
ficomps
mov
or
xchg
repz
and
sbb
push
push
xchg
mov
and
stc
jo
rclb
subb
xchg
push
xchg
push
push
and
ljmp
cwtl
jge
sbb
stc
and
incl
imul
stc
push
mov
and
mov
pushf
loopne
cld
sbb
and
jae
xchg
mov
mov
and
outsl
dec
mov
jae
insl
sbb
and
imul
sbb
sbb
jae
xchg
sbb
and
sbb
imul
shll
and
sbb
and
sbb
xor
push
xchg
in
cmp
stc
jne
and
jae
dec
cmc
and
test
jns
xchg
stc
dec
jmp
and
or
jle
cwtl
jge
sbb
sahf
pop
and
xchg
add
icebp
xchg
cwtl
jge
sbb
iret
and
and
mov
push
xchg
and
and
jae
xchg
inc
stc
and
pop
push
push
xchg
jae
xchg
test
and
cwtl
mull
sbb
and
dec
pop
and
jae
xchg
adc
xchg
dec
popf
and
clc
and
jae
xchg
jne
and
inc
xchg
xor
imul
sbb
and
inc
push
xchg
enter
lods
dec
sub
mov
in
sbb
and
xor
fisubrl
pop
mov
or
and
jae
xchg
adc
and
dec
es
cwtl
jge
sbb
mov
enter
xchg
add
and
dec
mov
addr16
arpl
and
outsl
cwtl
dec
ljmp
xchg
jp
and
test
movsl
lods
jne
cld
pop
pop
and
jae
xchg
ficoms
and
push
cwtl
jge
sbb
stc
or
and
mov
pop
loopne
and
and
jae
xchg
jbe
and
cmp
push
fstpl
cld
or
test
out
imul
cld
shl
and
outsb
movsl
fistpll
or
dec
pop
jae
xchg
mov
xor
push
xchg
mov
and
movsb
sub
mov
cld
cmc
sbb
and
cmpb
push
xchg
nop
std
and
stc
xor
and
cld
call
and
in
inc
xchg
dec
imul
imul
outsb
clc
and
xor
xchg
jb
cmp
push
xchg
push
adc
and
mov
sub
mov
adc
cld
or
and
jo
jnp
jge
sbb
push
xchg
or
and
loopne
and
push
xchg
pop
cli
and
jne
add
push
xchg
ja
and
fisttpll
out
and
fwait
cwtl
jge
sbb
test
sbb
pop
push
aaa
or
int
and
jae
cmp
ret
sub
jge
sbb
and
mov
dec
cwtl
jge
sbb
stc
xchg
sbb
and
dec
into
jl
push
xchg
push
std
and
cld
lcall
lahf
add
push
xchg
push
xchg
aaa
adc
and
mov
loopne
mov
dec
or
and
xchg
pop
cld
mov
and
cs
xor
mov
xchg
outsl
or
and
jae
xchg
loopne
cld
mov
and
mov
fcompl
cld
jp
and
xchg
setnp
imul
or
and
xchg
movb
jae
xchg
jae
je
and
lods
and
sub
test
push
xchg
sub
and
add
int3
pop
arpl
and
xchg
cld
and
and
jge
push
jbe
cwtl
jge
sbb
and
mov
push
mov
cli
jmp
and
xchg
adc
out
leave
pop
mulb
push
loopne
cld
mov
es
cmp
loopne
jns
and
and
loopne
stc
stos
sti
and
in
lea
xchg
or
and
jae
xchg
xor
stc
rorb
and
stos
jbe
imul
cld
inc
add
jmp
push
xchg
jno
jae
xchg
rclb
and
loope
scas
xchg
pop
cld
outsl
add
and
xchg
jae
mov
lock
mov
popa
stc
jge
and
rorb
cwtl
jge
sbb
loopne
jae
xchg
outsl
add
and
andb
sbb
and
xchg
mov
jae
xchg
and
and
jae
stc
or
and
jge
sbb
and
cld
sti
sbb
and
insl
push
xchg
jo
jae
push
and
cmp
mov
movsl
jae
xchg
stos
or
and
je
xchg
cmc
sahf
pop
or
xchg
loopne
stc
sbb
mov
xchg
pop
or
and
add
jae
xchg
and
and
subl
arpl
cld
xchg
and
and
mov
xchg
or
and
ss
cwtl
jge
sbb
sbb
jg
fadds
jae
xchg
int
and
out
mov
xor
xlat
adc
xchg
fisttpl
enter
pop
popa
or
add
loopne
jae
xchg
loope
cld
popa
pop
and
shll
mov
xor
xchg
mov
jae
sub
pop
cmp
jae
mov
push
mov
xchg
sti
jmp
and
pop
cwtl
jge
sbb
and
push
push
imul
imul
adc
and
mov
fdiv
imul
sbb
repz
and
add
and
out
lahf
push
fadd
jno
popw
and
jae
xchg
xchg
clc
and
sub
push
jae
xchg
arpl
and
popa
inc
pop
jne
out
jae
xchg
dec
add
and
sub
mov
jae
xchg
sbb
mov
push
addb
popf
adc
and
jae
xchg
movsl
stc
lea
and
popf
push
xor
je
cld
cwtl
jge
sbb
push
xchg
jae
and
mov
xchg
pop
jae
xchg
addr16
jnp
and
mov
std
push
xchg
lret
xchg
nop
sbb
xchg
pop
cld
adc
and
mov
imul
jae
xchg
mov
and
sar
push
imul
loopne
and
enter
mov
or
and
sbb
xchg
stc
loopne
and
das
pop
aad
xchg
cmp
and
add
pop
sub
jae
xchg
or
and
jbe
into
popa
jae
xchg
xchg
and
enter
adc
jae
xchg
stc
xor
and
loope
js
jae
xchg
cmp
and
shlb
nop
adc
jno
cld
fs
xchg
fdivr
jns
or
mov
inc
or
and
xchg
cld
inc
add
and
xor
jge
sbb
repnz
and
or
or
and
jae
xchg
mov
and
sahf
lret
popa
loop
push
xchg
nop
adc
or
and
dec
push
outsb
mov
fcompl
cwtl
jge
sbb
push
loopne
cld
mov
fdiv
mov
cwtl
jge
sbb
and
imul
imul
xchg
mov
fs
into
popa
jae
xchg
repz
and
int
jge
sbb
stc
and
lcall
nop
adc
and
xchg
in
mov
jge
sbb
roll
and
hlt
dec
jge
in
xchg
adc
xchg
pop
sbb
and
lods
daa
jmp
xchg
mov
jae
xchg
cld
mov
sub
sbb
pop
and
imul
cld
and
lcall
mov
cld
xchg
or
and
ljmp
add
xchg
out
and
leave
push
scas
in
jae
xchg
push
adc
and
fcmovnbe
imul
and
and
mov
push
xchg
cld
xor
and
femms
xor
add
mov
push
xchg
cmpsb
cld
and
and
stos
ss
shrl
imul
imul
and
and
xlat
xchg
cmp
imul
cld
jl
and
out
popl
xchg
pop
jae
xchg
pop
stc
xchg
and
cwtl
mov
test
jae
xchg
xchg
cmc
stc
clc
pop
and
shlb
imul
mov
jae
repnz
and
pop
inc
pop
xchg
fstpl
and
jae
xchg
mov
lods
jo
xor
xchg
fcmovnbe
jae
xchg
imul
imull
pop
jae
xchg
and
and
cmp
mov
lock
and
xchg
and
xchg
add
and
lock
imul
jmp
and
jo
xchg
fstpl
and
sti
pop
push
pop
xchg
pop
jae
xchg
mov
push
xchg
js
and
data16
adc
jno
nop
in
test
and
stc
or
inc
mov
mov
sbb
imul
and
push
pop
push
mov
dec
cli
and
push
popa
mov
push
cli
and
jae
xchg
xchg
add
jecxz
jae
xchg
orl
mov
inc
ds
jge
sbb
push
xchg
push
imul
push
and
jae
and
and
lret
mov
cmc
sahf
pop
or
les
and
test
push
xchg
cld
mov
and
cmp
out
push
xchg
jo
jae
mov
lock
in
pushf
loopne
jae
xchg
cld
push
add
and
lret
jae
repnz
and
int
jns
jge
sbb
sahf
pop
sbb
push
add
and
mov
popa
sbb
xchg
xor
and
shrl
bound
pop
mov
stc
notl
and
jecxz
mov
pushf
fadds
cwtl
mov
jae
out
in
and
ret
pop
mov
jge
sbb
cld
pop
add
and
add
sub
imul
xchg
int3
push
and
jns
inc
mov
jae
xchg
or
xchg
in
call
stos
outsl
inc
dec
gs
xchg
jae
mov
and
fadd
test
xchg
jae
xchg
lds
and
push
aas
jge
cwtl
jge
sbb
jae
and
and
adc
fwait
je
mov
stc
adc
and
cld
pop
add
and
adc
jae
xchg
xchg
and
pushf
scas
xchg
dec
cmp
scas
adc
and
fcmovb
jl
push
xchg
std
mov
cmp
xor
push
xchg
pushf
and
xchg
sub
and
mov
pop
lock
imul
call
aas
ret
xchg
shll
imul
add
and
pop
fwait
add
push
xchg
imul
pop
cwtl
jge
sbb
and
jae
test
xor
adc
add
cld
ret
and
repnz
mov
imul
and
cld
ss
and
stos
rolb
imul
and
in
jae
xchg
cld
push
add
and
mov
pop
push
xchg
or
push
xchg
js
and
ds
push
xchg
sbb
ss
add
and
jae
push
or
imul
and
cld
push
push
and
mov
into
inc
repnz
xchg
sbb
and
cmp
xchg
cld
push
or
and
in
push
or
mov
jge
sbb
jae
xchg
add
and
hlt
call
imul
jae
xchg
cmp
and
fldenv
inc
addr16
imul
jae
enter
add
jo
push
sbb
jge
sbb
and
enter
mov
aad
xchg
and
and
sahf
push
push
fs
xchg
loopne
jae
out
cli
and
xorl
pop
jae
xchg
mov
and
cmp
arpl
imul
testb
cld
push
rcpps
xchg
pop
add
and
mov
cwtl
mov
imul
and
mov
imul
mov
and
mov
cmp
jge
sbb
adc
and
in
push
xchg
fadds
and
cld
arpl
and
cmpsl
call
cwtl
jge
sbb
jae
inc
or
and
mov
cmp
cld
leave
or
and
xchg
inc
adc
and
cwtl
jge
sbb
cld
xor
pusha
movsl
inc
lret
push
xchg
addr16
cld
jmp
and
cld
add
push
cwtl
jge
sbb
cld
dec
out
and
pop
push
cs
jge
sbb
loopne
jae
xchg
push
stc
and
andb
jge
sbb
imul
and
jecxz
cli
stos
orb
cld
jmp
and
in
lahf
nop
fstpl
xchg
and
scas
sbb
xchg
popf
xor
and
stc
test
and
rol
dec
cmc
pop
cmp
jge
sbb
sbb
ss
hlt
cmc
and
in
xchg
jae
xchg
loope
push
and
out
xchg
xor
push
xchg
frstor
jae
mov
jno,pt
adc
cwtl
jge
sbb
jae
out
and
rclb
push
mov
jae
xchg
or
and
cld
jnp
and
cmp
push
cwtl
jge
sbb
push
and
adc
shlb
imul
add
and
or
sbb
arpl
stc
dec
adc
and
call
add
and
xchg
xor
and
sub
stc
roll
and
mov
imul
cld
into
clc
and
or
fnstenv
xchg
add
jae
shr
and
and
cld
fiaddl
and
jae
xchg
scas
cmc
and
push
sbb
ds
jge
sbb
and
test
xor
or
and
mov
divl
adc
and
in
jmp
and
in
gs
loopne
imul
lds
pop
sti
and
mov
add
sbb
call
push
mov
imul
cld
mull
and
jecxz
jg
sub
jge
sbb
imul
and
cmpl
push
cli
and
push
loope
or
add
and
and
stc
test
and
data16
pop
cwtl
jge
sbb
and
cld
sub
and
mov
jge
sbb
push
or
and
arpl
jae
mov
and
cwtl
dec
movnti
shrb
jae
xchg
loopne
cld
jle
and
mov
repnz
jge
sbb
push
xchg
in
and
adc
or
mov
inc
add
and
fcoms
lea
outsb
adc
xchg
mov
and
ja
lods
aad
imul
imul
cld
dec
call
in
jmp
jae
xchg
loopne
jae
xchg
les
xchg
sbb
cwtl
jge
sbb
cld
jp
and
into
push
xchg
scas
jae
data16
and
sbbl
inc
call
adc
orb
imul
and
and
cld
jb
and
stos
and
pop
jae
xchg
or
and
sbb
xor
mov
jge
sbb
and
fdiv
and
movaps
jecxz
cmp
imul
and
shlb
movups
and
rcrb
test
push
xchg
and
mov
cmpsb
andl
pop
jae
je
and
test
or
mov
fs
rol
dec
or
call
aas
loope
lea
test
call
fsubr
gs
and
cmp
jns
xadd
adc
xlat
ror
sar
shl
neg
shl
call
inc
and
sbb
shr
inc
shl
test
cmp
jne
lret
out
fsts
lea
not
sar
test
sar
test
cmp
jne
pop
pop
movsl
jle
cli
not
xor
inc
sub
jmp
push
add
faddl
jmp
in
sbbb
fisttpll
shll
mov
leave
sbb
shr
ror
jmp
test
cmpsb
jnp
icebp
shl
add
cmp
jne
test
mov
add
xor
mov
jmp
add
enter
add
out
mov
sub
sar
jmp
addr16
xlat
rcl
inc
cmp
jne
daa
pushl
pop
mov
rorb
loopne
fcompl
rcl
sub
aas
call
add
xor
scas
or
shr
rcr
not
jmp
push
and
and
and
add
call
mov
div
rcr
add
shl
shr
call
mov
loop
adc
ror
cmp
jne
call
jne
xor
sbb
shl
adc
adc
cmp
jne
push
dec
cmpsl
sbb
ficoml
adc
shll
fadds
sbb
test
or
mov
push
sbb
shr
dec
adc
shr
cmp
jne
push
cmp
gs
fs
rcr
sub
shl
jmp
lods
cmp
cs
sbb
jmp
push
pusha
ret
adc
ret
xor
and
jmp
out
fisubs
data16
pop
lea
rcl
inc
test
sar
call
test
push
fs
shl
rcr
sar
ror
jmp
loop
dec
mov
fcmovbe
out
lret
lock
cmp
jne
pop
shrl
mov
shll
flds
or
add
mov
aam
shrl
arpl
ret
adc
repz
call
daa
leave
push
sbb
out
lea
test
cmp
jne
in
sub
sbb
fstpt
mov
mov
call
cmp
mov
not
rcr
call
sbb
jnp
xlat
fimuls
rcrl
cli
cwtl
sbb
test
add
negb
dec
sub
fcmovb
incl
shr
shl
shl
jmp
rcl
popf
dec
push
scas
sub
shr
shl
call
add
sbb
inc
add
test
not
jmp
stos
or
imul
jmp
or
sbb
rcr
call
loope
sbb
jno
sbb
ffreep
out
adc
notb
lret
add
add
lcall
add
aam
cmp
jne
das
sbb
mov
and
test
rcl
add
cmp
jne
or
sar
add
call
in
xlat
fsubrp
xor
sar
call
imul
test
xor
adc
neg
cmp
jne
mov
or
and
in
jmp
push
adc
out
ror
sar
neg
rcr
sar
cmp
jne
loopne
std
jo
not
adc
adc
rcl
neg
call
bound
add
add
rcl
xor
and
jmp
mov
xchg
or
jecxz
add
ljmp
jg
mov
fwait
sar
sub
xor
cmp
jne
cmp
call
decl
ror
inc
call
pop
and
add
jecxz
out
jmp
pushf
jnp
dec
inc
pop
push
lea
rcr
ror
sbb
rol
cmp
jne
test
in
aam
inc
ror
ror
xor
cmp
jne
cmp
nop
lods
mov
loopne
iret
rcl
cmp
jne
into
mov
mov
fs
shl
rcl
or
jmp
add
test
rcl
rol
test
sbb
jmp
dec
enter
push
or
test
or
call
push
sub
adc
shr
shl
ror
test
mov
call
sbb
stc
shl
not
ror
sar
jmp
mov
sub
jmp
js
jnp
cld
rorb
not
not
inc
jmp
lods
fisttps
in
shl
add
sbb
call
int3
sbb
lea
mov
mov
adc
adc
shr
cmp
jne
lds
cmc
ficompl
mov
adc
test
sar
rol
cmp
jne
xor
movl
shr
cmp
jne
dec
add
xor
mov
sbb
bnd
push
add
lea
rcl
xor
push
shl
cmp
jne
outsl
call
fdivl
shl
and
adc
sbb
sar
test
jmp
decb
out
lcall
ror
call
mov
aam
mov
add
fadds
sar
adc
rcl
jmp
pusha
jg
lea
test
test
cmp
jne
mov
pusha
jmp
push
sar
rcl
or
rcl
mov
call
lock
fadds
and
sub
rcr
neg
cmp
jne
xor
test
into
or
neg
rol
neg
rcr
rol
cmp
jne
loop
jge
xor
and
test
sbb
call
sub
dec
shl
sar
sbb
rol
sar
jmp
or
rcl
and
jmp
in
xchg
ljmp
test
scas
xor
mov
into
call
xchg
jl
mov
pop
cmp
not
mov
sbb
and
not
cmp
jne
push
clc
inc
lods
sub
adc
sbbl
out
add
imul
sub
add
mov
sub
rcl
shl
jmp
mov
test
and
shl
ror
shr
dec
shr
jmp
jge
pop
shrl
fs
inc
sar
shl
sub
xor
call
jmp
mov
pusha
inc
pop
ror
call
repnz
outsb
scas
inc
adc
rol
shl
cmp
jne
xchg
test
lea
cmp
sbb
shr
rcr
inc
call
mov
sbb
add
shl
call
ljmp
not
ror
jmp
call
sbb
repnz
sar
or
add
rol
call
push
repz
rcr
add
test
cmp
jne
and
movsb
dec
int
jmp
cmpsl
cmp
ret
pop
jle
rcl
repnz
cmp
jne
sahf
imulb
shl
shr
call
cmp
ds
dec
sar
rol
shl
and
rcr
cmp
jne
pushf
adc
ja
add
or
jmp
xor
roll
add
mov
adc
shr
cmp
jne
jbe
cltd
xchg
out
sub
cmp
jne
fistpll
sbb
lea
sbb
test
add
inc
cmp
jne
push
fsubrs
neg
sar
and
call
jne
push
dec
loopne
sub
add
inc
xor
dec
and
cmp
jne
xor
xor
cmp
jmp
jmp
nop
add
clc
inc
ror
rcl
cmp
jne
bound
mov
clc
lfs
add
fisttpll
rcrb
ss
pushl
sarl
dec
ret
shl
cmp
jne
dec
lcall
shl
jmp
frstor
shlb
inc
jecxz
cmp
jne
push
bound
ljmpw
add
icebp
rcrl
push
dec
test
call
jg
sub
cmpw
je
test
jmp
adc
hlt
inc
sbb
rcr
shl
xor
rol
jmp
jae
aas
adc
shr
sar
test
sub
jmp
inc
xorb
xor
ljmp
xor
call
lahf
sub
xchg
jl
fs
shl
call
repz
lea
sub
rcl
shl
call
es
jl
add
aam
cmp
jne
cwtl
mov
xor
sarb
stos
jb
sti
and
filds
add
or
mov
shrl
test
add
aas
leave
mov
sar
sbb
ror
shl
call
lret
repz
or
sub
rcl
adc
jmp
fnsave
xor
and
cmp
jne
aam
rcr
insl
clc
in
test
ror
xor
cmp
jne
ss
pushf
xor
add
shl
cmp
jne
sbb
adc
sub
shl
jmp
mov
xor
add
mov
shl
xor
cmp
jne
mov
stos
pop
lods
xor
ret
shr
call
pop
pop
ljmp
lock
jmp
stc
aas
rorb
repz
jmp
call
and
mov
sub
jmp
fstpl
mov
xor
cmp
jne
insl
js
lea
xor
shl
cmp
jne
pop
mov
shr
or
adc
cmp
jne
and
sti
lea
sbb
cmp
jne
push
and
add
rcr
call
testl
out
lock
lods
sbb
jmp
out
arpl
and
rcr
jmp
in
notb
cmp
add
fildl
sub
shr
inc
sar
cmp
jne
jns
fwait
bound
fs
not
call
std
pop
mov
lret
shl
xor
rcl
or
shl
xor
cmp
jne
lea
sbb
cmp
inc
xor
adc
neg
test
sub
jmp
dec
rolb
fs
sub
sbb
call
push
dec
mov
enter
roll
xchg
shr
call
pop
repz
xor
enter
shr
call
clc
add
cmp
lock
adc
dec
adc
cmp
jne
fstpt
lea
neg
cmp
jne
xchg
add
imul
or
shr
dec
ror
or
call
adc
mov
nop
lea
sub
add
rcl
adc
jmp
cmpsl
inc
push
lahf
sbbb
loope
adc
rcl
call
sbb
dec
scas
ror
test
call
js
paddsw
loope
int3
adc
call
ret
not
jmp
jge
test
ror
shr
sar
adc
or
inc
jmp
xor
add
mov
insl
lea
or
sar
jmp
dec
cwtl
ret
addb
test
shr
shr
test
adc
call
ret
push
sbb
mov
cmc
popa
rcl
add
jmp
sub
aaa
inc
sbb
notl
jmp
pop
push
dec
fisttpll
jecxz
jmp
test
test
add
call
daa
scas
xchg
lock
adc
or
enter
call
add
cmp
sbb
xor
jl
shr
ror
cmp
jne
testb
lea
rcl
shl
xor
sar
call
nop
out
xchg
add
sbb
sub
or
jmp
cmpsb
and
lock
add
neg
sub
sar
jmp
pop
shlb
add
std
add
int
lds
shr
call
dec
jecxz
push
not
sar
shl
shl
adc
sbb
jmp
sbb
sbb
add
cmp
cmp
jne
lock
add
fcoml
call
xchg
lcall
adc
filds
lock
sbb
dec
call
fdivl
push
xchg
and
or
mov
pop
call
andl
scas
sbb
add
sub
sar
jmp
cmpsl
add
and
and
mov
shl
xor
shr
call
mov
lea
mov
xor
call
dec
pushf
aam
or
jg
fs
ror
shr
sar
jmp
sub
