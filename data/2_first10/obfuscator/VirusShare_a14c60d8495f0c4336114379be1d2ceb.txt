add
pusha
adc
dec
movw
or
sub
decl
add
jmp
cmp
xor
das
cmc
or
add
sub
rol
and
push
cwtl
pop
jmp
pushf
cmpsl
sbb
ss
inc
sub
sbb
movaps
and
movl
push
dec
pop
jmp
repnz
orl
sbb
adc
jmp
stos
push
sbb
add
movl
andnps
or
adc
pminsw
add
pcmpgtd
sub
and
and
xor
movl
jmp
out
cmp
xor
maxps
push
lahf
pop
xor
jmp
mov
rcr
xor
or
push
dec
pop
jmp
mov
mov
add
xor
sub
movb
jmp
add
mov
adc
adc
movl
int
sub
sahf
movb
jmp
sbb
outsl
jge
xor
sbb
and
or
imul
andnps
or
add
subps
push
lahf
pop
and
subps
movw
adc
push
dec
pop
jb
xor
push
xchg
pop
jmp
add
inc
mov
dec
push
stc
pop
xchg
movb
rol
and
rcr
adc
jmp
test
paddusw
sbb
push
sahf
pop
stc
movw
push
inc
pop
jae
punpckhwd
jl
rcr
add
subps
push
cmc
pop
and
movd
xor
sub
add
or
rcr
xor
js
jne
movw
sub
or
pcmpgtb
sub
ja
cmpl
jne
or
mov
jmp
add
ljmp
sarl
cmp
mov
lret
rcll
cmp
cld
out
mov
push
xor
push
xor
les
rclb
inc
jnp
mov
sub
mov
test
sub
sub
adc
ffree
gs
sar
sub
pop
sub
lds
sub
leave
mov
mov
cmp
sub
rcll
jns
push
cli
sub
jb
xor
xchg
stc
jns
or
stos
inc
int3
cs
ficoms
jl
les
lret
roll
rcll
mov
push
push
shrl
js
lret
pusha
mov
ret
lret
sar
sub
shll
ror
xor
push
xchg
cltd
fcoml
stc
sub
adcl
inc
mov
xchg
aas
imul
loope
xor
jb
dec
push
fnstcw
lret
shrl
sub
jecxz
lret
and
lea
roll
ficoms
frstor
dec
push
fldenv
lret
rorl
movq
jb
out
fldl
lret
and
and
shl
ds
push
xor
push
notb
stc
jb
cmp
mov
inc
rcll
inc
xor
sub
inc
fsqrt
out
pop
cmp
inc
add
fwait
pop
jmp
or
sub
mov
subl
push
stc
sub
pop
mov
dec
push
stc
sub
pop
mov
stos
or
jb
inc
cltd
loope
cltd
push
cmp
inc
ret
cli
clc
scas
jo
sub
shll
pop
mov
jae
push
cmp
ret
popf
mov
sar
sub
cmc
mov
jmp
imul
pop
inc
imul
lcall
fiadds
scas
jne
mov
add
ds
sar
ja
xorb
sub
arpl
rorb
pop
xor
iret
rorl
pop
inc
in
fstl
inc
movsl
frstor
and
mov
inc
movsl
fnstsw
inc
cmp
negl
sub
aam
sub
shll
dec
sub
es
push
stc
sub
shlb
xchg
fnstsw
rorl
sub
subb
mov
test
sub
shrb
inc
call
stc
pop
addl
push
sub
sarl
ret
hlt
push
lret
shrl
stos
or
test
stos
or
push
sub
sarl
ret
hlt
push
lret
shrl
stos
or
test
jo
adc
jmp
cmp
dec
adc
stos
mov
stc
pop
dec
mov
dec
adc
mov
or
jb
enter
xlat
cmpl
or
jb
enter
into
adc
sub
pop
loope
xor
lea
enter
inc
mov
popf
mov
sar
sub
aad
lret
push
adc
inc
stc
jo
iret
pop
andl
out
or
int
mov
cmp
sub
shll
mov
xchg
fmul
sar
mov
mov
xchg
int3
lret
sar
mov
mov
xchg
cld
lret
sar
mov
fwait
mov
scas
rorl
stc
sub
jp
iret
adcl
sub
xchg
aad
xchg
stc
jle
jbe
sub
pop
ljmp
mov
mov
xchg
inc
lret
xchg
inc
lea
nop
pop
mov
mov
mov
stos
mov
inc
test
nop
stc
outsb
scas
movsl
test
dec
scas
mov
xchg
pop
scas
mov
xchg
sub
mov
jg
mov
lods
sbbb
sahf
mov
movsb
lea
mov
dec
cwtl
movsl
mov
mov
sub
mov
xchg
pop
cmpsb
mov
inc
movsb
mov
pushf
pop
mov
sar
sub
sar
sub
sar
sub
sar
in
hlt
jmp
or
jno
sub
sar
sub
add
add
fisubrl
add
addl
sub
add
add
add
jg
add
jne
add
test
push
mov
jecxz
dec
fld
sub
adc
mov
aas
frstor
lret
mov
aam
insb
scas
fldl
cltd
pop
pop
dec
stos
cmp
mov
add
add
sub
add
fisttps
add
add
add
add
add
stos
cmc
into
cli
lahf
cmp
fiaddl
add
repz
jo
add
add
add
add
add
mov
pop
add
mov
add
and
add
add
add
ret
fsubr
add
jnp
add
fistpll
adc
add
add
cmp
add
add
add
ja
add
add
adc
add
std
add
clc
add
add
inc
movl
add
add
add
in
mov
repnz
add
add
push
add
sbb
add
scas
add
out
add
mov
sbb
add
add
add
add
arpl
add
add
add
lcall
push
push
add
add
add
add
addl
add
push
add
mov
nop
adc
add
stos
add
inc
add
add
add
add
pusha
lock
add
add
add
cltd
add
add
add
divb
cltd
out
aas
hlt
in
les
inc
xchg
sbb
mov
or
outsl
repnz
mov
add
mov
sbb
push
inc
mov
add
outsl
imul
jne
pop
adc
xor
push
add
rcrb
stos
cmpsl
out
xchg
cld
jmp
adc
in
sub
adc
insb
andb
stos
test
push
inc
jg
movsb
movsl
inc
fxch
cmp
inc
jns
pop
push
dec
lret
das
int3
adc
mov
and
cltd
enter
bound
insl
cld
lock
and
push
push
bnd
xchg
les
mov
push
insb
fsubrl
imul
pop
and
or
sub
cmp
std
and
cmp
icebp
add
out
sbb
icebp
fwait
add
ja,pt
pop
mov
dec
movsl
mov
sbb
or
repnz
xchg
adc
repz
sbbl
add
stos
rorl
or
fldt
ds
inc
das
ja
lcall
in
into
mov
adcb
stc
push
cmp
and
xor
lock
sbb
out
test
add
push
mov
cmp
mov
cmp
repz
mov
mov
aam
inc
xor
add
or
hlt
jns
xchg
push
inc
test
pusha
sti
sbb
mul
inc
add
lods
imul
mov
sbb
lods
movsl
mov
movsb
sbb
mov
pop
adc
xor
pushf
ret
in
fldl
dec
push
data16
ds
fbld
or
popa
sarl
repnz
repnz
add
stos
outsl
out
push
sbb
cld
adc
jns
rolb
bound
xor
xlat
push
pop
or
pop
inc
xchg
xchg
mov
mov
sbb
inc
nop
inc
sub
xorl
fldl
sbb
mov
sbb
mov
add
dec
pushf
std
and
push
cmp
and
cwtl
jecxz,pn
sub
es
mov
or
call
popa
xchg
mov
pop
outsl
xchg
pop
mov
push
pop
fwait
rorb
pop
add
das
adc
push
cmp
adc
sub
fwait
ds
js
fbstp
pop
call
or
cwtl
sub
xor
lret
inc
or
fs
jl
lahf
push
je
pop
add
or
xor
jmp
imul
jno
test
mov
cs
sub
add
or
jnp
jg
jmp
inc
sbb
hlt
sub
shll
sub
arpl
or
rcrl
pushf
lcall
jl
fsubl
sbb
int
popf
pop
jecxz
fimuls
mov
xchg
lock
test
loop
push
sub
arpl
fimuls
inc
xor
popf
inc
scas
inc
mov
pop
push
jb
sti
jns
sbb
mov
pop
std
test
push
stos
inc
pop
or
pop
push
enter
test
lcall
stc
pop
lret
push
pop
jnp
jecxz
leave
push
ret
jno
jne
out
jmp
dec
xor
jle
into
push
sbb
inc
lret
das
ds
in
and
outsb
inc
push
movsl
push
dec
cmpsl
jmp
jle
or
add
add
stos
test
push
push
mov
call
push
maxps
jmp
lods
in
and
scas
ljmp
mov
xor
add
xchg
pushf
mov
mov
adc
imull
xor
fidivl
gs
and
mov
jae
ja
cli
sub
enter
dec
cld
mov
jecxz
jno
dec
lock
insl
push
push
add
idivb
mov
inc
sub
push
outsl
lahf
sbb
mov
shrb
xchg
xlat
pop
cmp
rcll
getsec
loope
insl
or
mov
mov
movsb
mov
jl
pop
sti
pop
xchg
lods
jl
pop
pop
sub
int3
fidivrs
mov
movsl
or
loopne
push
stos
cmc
cmovge
xchg
imul
pop
movsb
fs
fcmovnu
insl
jae
push
sub
pop
or
dec
or
fld
rcrb
dec
adc
rorb
arpl
daa
lods
out
ja
or
push
xchg
shll
stos
add
xchg
je
imul
mov
fldl
aaa
mov
aam
xchg
gs
mov
sbb
cmpl
lods
sbb
loopne
add
xchg
test
pop
test
lods
aaa
imul
or
dec
jnp
jns
adc
xchg
push
loopne
xlat
sub
sti
pop
cmpsb
xchg
sarl
sub
pop
lret
jb
lret
jo
lahf
push
imul
int3
jecxz
mov
dec
pop
cmp
cwtl
test
pop
outsl
loop
xchg
dec
mov
repz
sub
insl
movsb
movntps
in
mov
shl
push
sub
rolb
dec
rolb
loope
xor
hlt
pop
xor
mov
or
stc
out
adc
addr16
ficomps
push
pusha
push
dec
sub
mov
or
lods
mov
rol
cmp
mov
cmc
scas
sbb
aam
cli
sbb
xor
dec
arpl
pop
add
xchg
jmp
push
movsb
aad
pop
mov
insb
popf
push
jg
movsl
add
popf
inc
mov
sti
mov
test
push
ret
lea
dec
mov
pushl
cmp
ds
or
stos
xchg
stos
cli
mov
push
xchg
inc
add
inc
jno
sbb
mov
mov
add
ret
mov
jnp
cmp
das
jbe
inc
std
fstpt
push
fstpt
xchg
jns
push
mov
xchg
shll
or
mov
out
aad
sub
lods
aad
aam
shl
pop
mov
mov
or
fstps
mov
in
mov
pop
jnp
movsl
mov
lret
aad
mov
iret
jmp
std
xlat
pop
sub
lcall
or
arpl
and
popf
sbb
out
scas
add
das
and
mov
push
popa
int3
and
cmp
and
fs
add
add
int3
cmc
std
add
add
dec
mov
push
fdivr
lcall
mov
add
inc
roll
add
add
add
aas
mov
std
push
sub
out
pop
add
shrb
mov
std
int3
lods
pushf
add
jns
in
push
or
mov
add
mov
mov
add
add
add
jns
shlb
insb
jae
add
inc
jo
divb
int
bound
push
push
repnz
aaa
or
xor
add
inc
pop
pop
loop
clc
clc
stos
stc
add
jg
jecxz
pop
cmp
pop
data16
add
iret
test
push
ds
inc
cmp
xchg
add
jecxz
mov
xor
mov
fimuls
inc
cmp
push
jmp
out
mov
and
add
adc
jne
insl
dec
shrb
add
mov
dec
ds
cli
mov
pushf
sbb
jae
gs
mov
cmpsb
test
mov
add
ss
int
xchg
flds
pusha
add
nop
sbb
inc
mov
mov
or
dec
add
movsb
adcl
sbb
mov
in
inc
data16
add
add
pop
add
add
add
xchg
mov
daa
xchg
add
add
add
add
lret
dec
or
fs
js
mov
orl
add
add
es
pop
and
add
mov
and
jge
xchg
add
in
aaa
jmp
add
add
add
add
les
add
add
cwtl
adc
add
xchg
add
add
add
movl
add
add
add
add
add
add
add
add
out
add
pop
add
add
add
test
add
add
add
add
add
add
add
add
add
add
int3
add
add
cmp
out
add
add
jno
mov
add
add
mov
add
in
add
add
add
lcall
bound
add
add
inc
add
add
add
add
add
add
or
add
cmc
popa
adc
add
add
sub
add
and
add
add
add
add
add
decl
inc
std
add
ss
and
fldl
jo
push
pushf
je
test
dec
xchg
or
sub
jns
xchg
faddp
mov
push
add
es
dec
ja
push
ret
mov
mov
add
cmp
mov
fs
sub
inc
add
daa
sbb
lret
std
xchg
lds
fldcw
out
cmp
enter
jp
cmp
pop
stos
push
mov
mov
jae
jmp
mov
xor
out
adc
scas
adc
push
aad
and
lods
pusha
imul
or
bound
mov
fmul
mov
repz
loop
cmp
and
and
dec
pop
arpl
ds
mov
push
inc
mov
and
in
mov
popa
shl
addl
jp
inc
jb
push
adc
lods
jnp
xor
sbb
add
mov
inc
ss
dec
inc
add
nop
sbbb
xor
or
lock
pop
repnz
sahf
dec
fsts
or
mov
cwtl
push
and
xchg
adc
push
cmc
pop
shlb
adc
or
fs
xlat
inc
imul
push
mov
and
je
in
or
lahf
ret
mov
adc
bound
ss
mov
and
out
xchg
cld
or
inc
adcl
add
daa
sahf
xor
icebp
in
bound
sbb
fcompl
lcall
pushf
push
test
fwait
dec
mov
ds
sbb
dec
std
bound
mov
jno
xor
jbe
pop
enter
stos
imul
int
je
sbb
jmp
insb
push
xchg
pop
xor
push
and
or
push
shl
sub
lret
cmpsl
jo
push
rcrl
push
dec
mov
push
and
mov
fsubrp
add
lcall
mov
and
cmp
dec
mov
xor
mov
jl
pop
mov
sbb
push
pop
push
inc
sbbl
mov
adc
ret
pop
mov
jle
dec
xlat
xlat
mov
jnp
in
pop
lea
testl
ret
jmp
ret
scas
lods
jg
lds
mov
cmp
js
dec
cwtl
dec
pop
fucomp
lret
lret
and
test
in
adc
scas
scas
scas
scas
xlat
and
ljmp
jmp
subl
lock
inc
stos
add
fisubrl
inc
push
or
and
cmp
repnz
cmc
adc
negl
imul
mov
data16
xchg
loopne
mov
data16
xchg
int3
rcr
cmp
mov
sbb
addr16
pop
sahf
dec
loope
cmpsb
mov
xchg
into
stos
fadd
iret
xchg
or
mov
add
adc
mov
push
mov
add
cmc
pop
xor
lods
xchg
adc
adc
xor
mov
xchg
pop
lret
fidivs
int
pushl
clc
and
fs
out
cmp
test
ss
pop
mov
repz
cld
sub
lret
cld
hlt
mov
nop
ja
shlb
aad
pop
xor
or
out
xchg
dec
lods
sbb
dec
and
enter
xlat
fyl2x
adc
enter
stos
inc
lea
push
mov
adc
and
movsl
pushw
ss
js
push
add
shl
push
lea
cltd
loopne
mov
add
inc
hlt
xor
push
mov
ljmp
add
mov
cmp
psadbw
fildl
sbb
or
sub
xor
push
arpl
enter
test
movsb
cmp
sahf
testb
cwtl
lret
sbb
cmp
jecxz
jo
fsubl
pop
xchg
fidivs
cmc
mov
clc
xchg
daa
xor
pop
fstpl
test
cmp
pop
mov
sub
into
addr16
dec
adc
in
mov
mov
cltd
xchg
andl
jp
repz
dec
xor
pushf
imul
stos
rol
ja
jnp
sub
test
mov
add
shll
xor
push
loopne
ja
inc
cmpl
add
aam
pusha
repnz
fadds
rclb
or
mov
test
roll
std
dec
mov
pop
mov
push
clc
cmp
sub
nop
out
out
sub
jbe
jb
or
out
lea
and
sub
pop
mov
xor
pop
dec
testb
sub
into
xchg
test
pop
sub
aaa
pop
mov
jb
mov
dec
add
out
jecxz
ret
add
inc
and
sub
sbbl
push
jmp
addr16
insl
push
nop
imull
or
aam
lods
xchg
jbe
sbb
mov
hlt
jnp
add
push
pop
int3
jnp
fistl
data16
sub
or
cmp
pop
inc
imul
pop
imul
mov
rorb
sub
movsl
lcall
fwait
push
sbb
or
mov
ljmp
cmp
cmp
inc
xchg
lret
mov
cmc
imul
leave
arpl
movsb
insb
leave
sub
in
dec
lcall
push
sbb
fsts
mov
outsl
mov
stos
popf
jo
pop
out
repz
adc
lahf
adcb
sbb
lock
inc
mov
cmp
ljmp
iret
sbb
lcall
xlat
push
daa
pop
test
jo
fmulp
fidivrl
dec
outsl
aaa
mov
xchg
lock
js
add
repz
jmp
jb
in
lods
loope
js
loope
sub
hlt
jno
mov
rorb
enter
mov
rorb
sbbb
push
mov
xchg
push
scas
mov
stc
lods
mov
addb
gs
dec
das
xor
sub
into
xor
push
mov
dec
decb
cltd
sbb
dec
lret
jnp
aad
out
push
lahf
cmp
rcll
stc
cli
fcompl
dec
adc
cs
rcrl
or
cmp
ja
hlt
js
mov
mov
jp
xor
and
clc
push
add
pop
jae
test
int3
cmp
pop
jmp
pop
push
iret
daa
sub
orl
push
aaa
fistpl
xchg
and
mov
jno
inc
jp
xchg
imul
lods
mov
xor
icebp
ret
inc
mov
cmpsb
sub
mov
xor
out
mov
jns
ss
add
cwtl
loope
mov
sub
repnz
ds
mov
pusha
sbb
jb
or
adcb
and
stos
lret
mov
dec
out
cld
jo
andl
push
stc
push
filds
aas
add
push
lea
rcrb
and
push
loope
inc
jae
xor
movsl
jo
sub
or
dec
dec
int
jecxz,pt
nop
movhps
sarb
inc
ds
test
mov
loop
mov
mov
je
movb
in
js
xchg
inc
mov
jbe
sub
iret
mov
mov
xchg
int
leave
mov
repnz
jno
repnz
test
test
lret
pop
test
add
cmp
push
fyl2x
adc
dec
pop
mov
ror
and
int3
mov
loope
lods
pop
sarb
xlat
jge
hlt
in
mov
lds
rorl
pop
addr16
sub
sbbb
or
mull
xlat
inc
aam
into
insl
je
stc
lahf
xchg
cmpsb
pop
adc
adc
push
jge
jg
cmp
jb
repnz
pop
daa
fdivrl
js
test
sub
inc
idiv
jbe
das
mov
mov
adc
data16
test
gs
pop
xchg
mov
ljmp
mov
cmp
cwtl
cwtl
fimull
pop
nop
ljmp
add
sbb
cs
xchg
jecxz
mov
jle
sahf
jecxz
arpl
fldenv
les
push
mov
fisubs
outsl
enter
mov
push
int3
mov
icebp
mov
push
pop
enter
inc
imul
lods
or
push
stos
lldt
lds
xchg
jmp
out
or
test
push
inc
inc
dec
imul
in
push
cmp
push
inc
pop
aad
loopne
xor
fistl
mov
mov
and
mov
jecxz
mov
jnp
addb
into
lds
aaa
ljmp
mov
push
mov
pop
push
xchg
jge
pushf
bound
cli
xchg
shlb
dec
frstor
imul
jmp
push
mov
stc
insb
xor
push
cmp
push
je
ret
fists
addr16
iret
push
movl
pop
push
dec
jae
xchg
incb
add
cltd
or
sbb
cwtl
push
pop
test
inc
sub
inc
push
adc
lcall
adc
jae
xor
test
daa
ljmp
mov
adc
imul
addr16
and
dec
or
mov
xchg
jp
add
hlt
jo
hlt
dec
adc
mov
xor
mov
cmp
adc
xchg
imul
lahf
stos
pop
movsl
cmp
mov
cli
mov
lock
push
mov
adcl
inc
mov
lcall
outsb
lret
das
or
popf
fs
mov
or
out
cmp
test
mov
mov
adc
add
outsb
pushf
mov
leave
add
mov
sarl
bound
mov
fsts
sub
jnp
inc
pusha
shrl
jo
in
inc
adc
out
sbb
cs
fsqrt
imulb
xchg
dec
popf
stos
ss
in
lods
xchg
or
and
or
dec
sub
lret
cmp
andl
dec
clc
fists
adc
mov
cld
adc
or
lds
addr16
xor
or
test
ja
insl
mov
sbb
int
cmp
test
and
xor
xor
jmp
into
shll
xchg
inc
in
imul
and
rcll
clc
psadbw
add
into
mov
adc
jge
sbb
cmp
fldt
push
mov
cmp
pop
dec
sbb
mov
cmp
jle
iret
filds
addr16
push
iret
or
andb
push
jmp
fdivl
mov
sbb
leave
jp
test
cmp
sub
iret
mov
or
and
loop
or
and
test
add
fcmovbe
mov
cmp
andl
fsubr
hlt
in
cmpsb
fwait
xorb
mov
in
addl
cld
and
and
lods
sub
push
insl
adc
aaa
add
push
leave
mov
xchg
lods
mov
xor
push
xchg
aad
jp
notb
cmpsl
add
push
dec
aad
fsubl
xchg
stos
or
mov
imul
out
push
sub
addr16
sbb
dec
test
dec
mov
mov
in
outsb
sbb
cmp
xchg
cmp
fimull
xor
cmp
fsubrs
jg
cmp
cltd
sbb
mov
adcb
mov
cld
jmp
hlt
or
test
fsts
jecxz
lods
inc
das
rcrl
imul
fldt
out
imul
add
dec
and
pop
lahf
pusha
xchg
xorl
std
jb
dec
cs
dec
pop
fbstp
xchg
sub
xor
test
add
xor
test
pop
test
inc
push
sarl
insl
adc
push
cli
imul
add
cwtl
xchg
mov
xchg
xchg
inc
repz
loope
push
out
jl
loope
fcoms
xor
loope
mov
mov
test
subb
movsl
pop
jno
int3
cmp
inc
cld
popf
incb
jno
cmc
jle
inc
fsubl
lods
mov
stc
ffree
shlb
jge
pop
push
aad
inc
js
test
addr16
lahf
icebp
shr
jle
push
inc
in
mov
xchg
sahf
mov
mov
dec
out
xchg
xchg
pop
jne
inc
xchg
pop
or
dec
insl
push
sahf
jle
jb
or
hlt
pop
mov
out
das
imul
push
pop
cmp
je
adc
daa
pop
xlat
test
mov
mov
cs
sbb
and
js
loope
jecxz
lods
mov
or
jp
movsl
sbb
mov
inc
icebp
sub
rcrb
jmp
push
in
xchg
push
bound
notl
sub
mov
pop
push
jno
fs
data16
jl
sub
cmpsb
sbb
arpl
lret
lahf
cmpsl
xor
sbb
cltd
inc
xlat
and
pop
cmp
dec
andb
cmpsl
pop
push
push
push
mov
xor
mov
xchg
scas
add
xchg
inc
aas
cmp
and
xor
add
jg
push
inc
pop
mov
insl
filds
sub
lcall
sbb
sub
adc
jmp
add
sub
out
mov
test
mov
outsl
outsl
jbe
and
adc
mov
jbe
stos
iret
mov
inc
mov
or
repz
or
sbb
fcmovnb
sti
dec
fidivs
lcall
fistpl
fs
push
lock
notb
push
cltd
pop
jmp
cmpsb
test
push
inc
sbb
adc
add
adc
frstor
mov
orb
pop
xchg
hlt
dec
sub
aam
es
lret
push
pop
aaa
sti
out
in
daa
xor
push
inc
pop
int3
cltd
mov
inc
stos
iret
mov
sbb
daa
testl
test
and
adc
sub
and
dec
and
cmp
dec
mov
in
mov
das
and
mov
or
subl
cmpsb
js
adc
rcr
jecxz
xchg
push
clc
fdivrl
mov
pop
out
mov
aam
pushl
inc
lret
mov
jecxz
icebp
popa
lods
ffreep
adc
jno
cmpsl
vaddss
cmpsb
negb
in
jmp
or
pop
dec
mov
xchg
das
push
cli
or
xchg
in
addr16
add
xchg
stc
sbb
or
sbb
and
mov
aaa
mov
mov
fcmove
push
and
ss
shlb
clc
mov
into
mov
xchg
xchg
out
adc
mov
notl
sub
test
xlat
pop
dec
sbb
xor
mov
jno
mov
xor
jno
sub
jl
and
in
sub
jbe
orb
pop
sub
aad
je
loopne
mov
or
ret
mov
outsl
sbb
xlat
outsl
sbb
dec
inc
push
mov
sbb
outsb
nop
fnsave
mov
sbb
adc
or
dec
or
pop
imul
imul
adc
push
lea
mov
xor
mov
pusha
mov
adc
and
test
inc
fs
in
in
pop
adc
cltd
mov
xchg
aam
pop
mov
adc
cmp
decb
out
sahf
popf
arpl
sub
sbb
push
cld
sub
push
inc
les
cli
jmp
scas
pop
xchg
fistps
lods
lahf
ret
pop
dec
xchg
negb
push
cwtl
xor
mov
mov
aam
mov
add
xchg
stos
push
jmp
stos
popa
mov
nop
jmp
test
popa
mov
push
mov
lcall
push
lods
mov
adc
or
or
cmp
jle
dec
test
dec
test
imul
out
push
std
loop
call
ljmp
sbb
enter
gs
insl
movl
lock
mov
js
ljmp
pop
test
pop
scas
sbb
mov
sar
push
mov
loopne
pop
add
jo
shl
jg
out
icebp
ds
xchg
jle
insb
pop
jge
push
test
mov
aaa
mov
pushf
popa
pop
xchg
sub
es
aas
sub
aas
negb
sub
lahf
scas
jl
sbb
mov
cltd
shl
enter
push
jb
xchg
sbb
jecxz
adc
mov
adc
mov
ret
aaa
pop
aad
jno
mov
idiv
mov
das
sbb
ficompl
mov
pop
jne
xchg
dec
jmp
stos
inc
call
adc
insb
imul
insl
mov
lea
dec
aaa
out
aad
test
fsubs
popa
mov
xchg
push
adc
add
je
out
jb
mov
pop
xchg
and
xchg
add
jne
xchg
mov
xchg
dec
xchg
mov
sti
jmp
xchg
imul
bound
cmp
out
xchg
mov
mov
dec
and
and
enter
dec
push
loopne
mov
sbb
jmp
test
xor
sahf
cmpsl
mov
cmpsb
lea
nop
shll
dec
test
scas
lods
iret
mov
adcb
fsubrl
xchg
sbb
cmp
xor
cmpl
arpl
sbb
push
lods
mov
aam
inc
loopne
push
dec
fcoml
adc
jl
das
sahf
pushf
sub
cmp
sbb
js
stos
add
jecxz
push
xchg
sub
mov
das
xor
ss
add
xor
out
fidivs
and
sub
mov
je
pop
rorb
leave
pop
mov
sbb
xchg
inc
fdivp
test
xor
es
mov
mov
cltd
push
adc
mov
xchg
hlt
cmpsl
roll
push
jo
cmp
and
inc
in
je
xor
outsl
gs
jnp
push
jl
cli
pop
shr
and
sub
ds
xchg
dec
mov
ror
ja
test
cmp
mov
cmp
fcmove
push
cwtl
pop
inc
add
xor
movsl
jbe
ret
mov
xchg
xchg
adc
cmc
cmp
sbb
add
test
fsubl
js
ret
push
sbb
jmp
push
pop
sbb
fsubp
pusha
add
xchg
clc
insb
cmp
je
ja
imul
pop
jmp
jmp
or
repnz
adc
stc
mov
dec
fucomip
mov
and
repz
dec
mov
enter
xchg
sbb
mov
iret
pop
cltd
jbe
lcall
push
notb
iret
out
dec
aam
pop
loop
pop
fildll
or
sub
pop
xor
xchg
mov
loope
xchg
cmp
push
mov
dec
inc
cmpsl
lcall
push
fsubrl
std
adc
push
movsb
push
jge
ja
cmp
shll
mov
insl
andb
subb
roll
out
push
mov
adc
cmp
push
xorl
xchg
sahf
cld
es
aad
sbb
lahf
out
jg
push
ret
mov
repz
push
int3
ret
xchg
jle
ss
push
cli
inc
rorb
and
ret
jno
mov
call
aas
std
fs
sub
push
sti
imul
xchg
sub
ss
lea
stos
daa
mov
xchg
push
xor
in
sbb
cld
in
pusha
pop
push
adc
xchg
dec
sub
mov
jmp
inc
dec
inc
cmp
mov
rcl
xor
or
cld
sub
sub
cmp
aaa
jnp
andl
push
xor
orl
xchg
sub
movsl
aaa
movsb
jg
das
sahf
jne
sub
int
into
fstl
inc
add
movsl
jmp
mov
test
and
xchg
xor
jne
xchg
ret
repnz
outsb
inc
lret
mov
adc
pop
push
fisttpll
sbb
xchg
clc
divb
cmp
mov
sti
mov
mov
verr
ds
adc
les
fsubl
push
nop
adc
jb
jmp
inc
push
inc
jmp
daa
leave
jmp
out
add
out
ds
mov
cmp
repz
repz
mov
and
add
out
dec
bound
fisubs
jg
mov
or
bound
sbb
popa
call
mov
lods
daa
fisttps
push
std
mov
pop
aad
ret
mov
cmp
inc
mov
js
jne
hlt
fwait
xchg
push
jle
xorl
adc
rclb
mov
imul
mov
push
dec
and
test
push
sbb
xchg
mov
push
sbb
int
sbb
pop
dec
in
push
inc
je
lret
sub
pushf
adc
xchg
add
scas
daa
imul
push
inc
xorl
mov
xchg
and
icebp
fcmovnbe
data16
jo
sub
jo
add
gs
movsl
subl
sbb
sub
push
xchg
ljmp
jmp
adc
cld
iret
negb
mov
pop
mov
mov
mov
mov
xor
push
in
mov
push
insl
notl
sbbl
movsl
pop
out
dec
or
pop
pushf
cmp
xchg
ds
mov
lock
fldl
fidivrs
fstp
scas
ljmp
fcmovbe
mov
fcom
adc
out
std
mov
pop
sarb
adc
lret
ret
mov
and
popf
ljmp
decl
inc
inc
std
ficoms
loopne
scas
and
into
mov
xchg
ret
mov
mov
ja
insl
inc
cmp
push
push
xor
fadd
lods
std
call
sub
pop
pop
lods
or
pushf
cmp
sbb
mov
mov
pop
das
jmp
arpl
pop
hlt
xchg
adc
and
mov
push
lods
lods
push
arpl
loopne
in
fidivrl
lret
ljmp
or
das
fdivrl
imul
test
ljmp
data16
mov
subl
cltd
call
fcompp
lods
dec
ret
fsqrt
sub
lods
mov
or
mov
and
pop
lahf
sub
repz
lret
jg
sbb
jns
enter
in
fiaddl
loope
mov
in
jns
repz
cmpsb
aas
or
addl
push
insl
inc
jne
mov
daa
pop
pop
pusha
fcom
es
add
jp
xchg
jbe
and
pop
subl
push
ljmpw
mov
mov
pop
jne
jno
gs
sbb
loopne
call
fsubrl
pop
je
cmp
cwtl
jp
mov
mov
push
pop
jnp
jnp
std
cmp
loop
incb
int
repnz
inc
popa
sub
mov
sub
lock
mov
jmp
dec
sbb
fwait
popa
int3
stos
jno
cwtl
fadd
push
pushf
mov
fdivl
sub
inc
jns,pt
ss
xor
int3
call
push
or
mov
loopne
xchg
cld
into
and
mov
mov
push
push
fwait
lds
imul
and
cmp
scas
adc
xor
xchg
inc
out
jae
add
xor
xchg
push
or
mov
es
into
pop
imul
or
sub
rcll
into
fisubs
inc
pop
in
mov
fcoml
shl
mov
push
or
es
push
rcll
cmp
gs
mov
jo
cmpsb
and
push
sti
xchg
repz
mov
dec
les
rol
pop
aam
rolb
mov
mov
aaa
mov
jo
xor
pop
iret
jae
push
dec
jmp
das
ljmp
jp
jge
adc
dec
xchg
dec
xor
mov
mov
pop
cmp
inc
icebp
shll
xchg
mov
loop
in
adc
out
andl
dec
clc
pop
cli
xchg
insb
iret
cwtl
sbb
insb
lds
icebp
inc
cs
add
sar
or
mov
or
outsb
out
push
mov
test
xor
pop
iret
push
pop
mov
jmp
pop
ss
mov
push
pop
cli
inc
scas
adc
jle
mov
lods
mov
repnz
sub
push
jp
rcll
push
into
mov
scas
fninit
sub
mov
cld
inc
outsb
and
jb
jae
arpl
call
and
inc
add
filds
stos
test
push
xchg
dec
popf
push
jecxz
adc
mov
add
int
cmpsb
xchg
jae
nop
sub
cmp
dec
pop
or
jle
inc
mov
lods
lds
clc
pop
jmp
add
mov
xor
scas
cmp
push
jae
cmp
push
add
lods
lcall
shll
inc
sahf
pusha
adc
ljmp
pop
scas
aam
pusha
repz
mov
ret
push
jb
ja
inc
das
dec
je
or
and
shrl
mov
push
push
movsl
aad
or
repz
add
js
mov
mov
push
jg
roll
mov
outsb
or
fstpl
xchg
xchg
push
and
mov
out
sahf
leave
inc
cwtl
mov
aaa
mov
aaa
stos
stc
stc
mov
and
sub
push
div
in
movsl
mov
movsb
mov
push
orb
rcr
cmpsb
push
cmpsb
cmp
mov
cmp
and
mov
in
nopl
subl
mov
lcall
sub
mov
dec
or
mov
xchg
je
lds
dec
dec
push
jecxz
out
lret
mov
into
in
or
or
xchg
push
ss
repnz
sub
lahf
cmc
int
and
out
std
xlat
data16
pop
jl
outsl
sbb
ss
aad
and
jns
adc
inc
push
popa
das
jnp
and
xchg
mov
add
jl
das
push
lds
scas
mov
test
lret
push
sbbl
hlt
daa
jae
inc
cmp
sub
inc
push
iret
out
cmp
dec
sbb
js
add
or
pop
add
sbb
adc
or
mov
mov
xchg
jb
fbstp
sahf
lahf
mov
out
or
cli
shl
shll
mov
fdivr
push
test
mov
and
std
leave
inc
scas
test
in
inc
aad
cmp
cs
in
stc
sbb
in
aad
ja
pop
dec
mov
jl
lahf
rol
mov
js
or
fwait
pop
dec
sbb
or
add
push
mov
pop
or
scas
shr
cmp
push
push
mov
leave
xchg
mov
pop
push
push
cmpb
xchg
or
imul
jg
xorb
push
jmp
pushf
pop
push
ret
call
cmp
mov
outsb
xchg
ficoml
cmp
sub
aam
out
or
daa
std
push
adc
pop
testb
jmp
sarl
mov
mov
sub
pusha
add
rorl
jp
cmp
addb
pop
shll
lods
mov
bound
int
jecxz
fstps
sub
jne
lret
mov
mov
xchg
popa
div
test
fwait
mov
inc
add
mov
into
movsl
inc
lret
xlat
jp
adc
and
or
aas
add
dec
or
sbb
int
sbb
or
add
into
test
fmull
inc
sarl
es
lcall
add
and
imul
jno
call
testb
xchg
jl
xlat
movsl
add
jge
inc
sbb
shlb
subl
adc
jnp
jno
cmpsb
pusha
stos
pop
mov
xor
add
test
test
mov
cmp
clc
pop
inc
xchg
out
sbb
mov
repnz
xchg
mov
xor
dec
mov
cmc
jmp
xor
gs
das
jb
xchg
and
in
call
xlat
adcl
lods
stos
cmpsl
sarl
push
clc
cmp
repz
push
fstl
jo
into
fnstsw
mov
sti
mov
outsl
mov
jge
fldl
sbb
sub
int3
push
pop
mov
test
pop
add
lret
cmpb
nop
repz
loop
lods
pop
lcall
pop
jno
pop
stos
in
add
sbb
mov
mov
ljmp
out
mov
subl
scas
mov
fsubrl
dec
add
push
fld
fs
mov
cmp
jg
clc
bound
aad
and
pop
dec
movsl
pop
xor
inc
rorb
fwait
popa
ljmp
loop
mov
sub
push
movsb
or
aas
pop
or
outsb
cld
mov
cmpl
and
lea
push
xchg
jo
lahf
aaa
cmpsb
aaa
cmp
jo
in
out
es
push
jp
mov
mov
sbb
stc
out
insb
and
call
mov
xor
sti
adc
in
aaa
das
fdecstp
je
inc
cmp
sub
adc
mov
adc
cs
xor
cwtl
and
flds
sub
hlt
adc
add
ficompl
shrl
stc
mov
adc
nop
cmp
psrlq
mov
adc
fsub
mov
mov
xor
sub
aas
int
es
xor
shr
scas
out
mov
inc
out
test
sahf
movsl
stos
push
or
mov
outsl
loopne
xor
mov
movsb
in
and
pop
xor
aas
add
push
shrl
imul
cs
xor
pop
jo
insb
pop
int
adc
pushf
and
cmp
inc
xor
lcall
fs
sbb
lret
test
adcl
mov
sbb
dec
jg
mov
shrb
jecxz
cld
mov
mull
sub
fucomi
sub
or
dec
shrb
adc
push
cltd
sub
inc
cmp
dec
fbld
add
aas
gs
lea
jmp
repnz
fisubs
int
test
or
ficoml
pop
shll
xchg
mov
cmpsl
popf
jle
adc
test
inc
add
unpckhps
into
stos
sti
stos
fadd
mov
scas
mov
mov
test
mov
xor
inc
fcomp
dec
aam
inc
adc
adcl
cmp
ret
dec
popa
mov
pop
or
fidivs
xor
pushf
rorb
jne
mov
fisubrs
bound
and
jns
jb
fucom
sub
dec
inc
mov
jno
xchg
and
int
enter
adc
pop
mov
leave
rcl
data16
cld
mov
inc
inc
push
loopne
jae
pop
idiv
ret
jmp
and
jo
mov
insb
test
ret
push
sub
fwait
and
test
cmp
cmp
fldl
push
cmpsb
rcrb
lcall
icebp
aas
jbe
scas
pop
loope
rcrl
ljmp
shlb
leave
inc
in
and
and
icebp
lcall
jb
mov
insb
insb
sbb
mov
movlhps
or
lds
fs
shlb
fdivp
add
xor
loopne
sbb
dec
lret
ds
sbb
add
cmp
out
int
icebp
jns
fmul
jl
push
or
inc
lcall
hlt
push
std
push
pop
shl
repz
sbb
stos
scas
xchg
fldcw
inc
sbb
cmp
bound
adc
lea
std
pop
xchg
outsl
mov
in
xchg
rcll
loope
inc
inc
shrb
loopne,pn
cmpsb
push
push
mov
in
or
sub
in
adc
mov
sub
push
push
loope
mov
sub
nop
es
push
jbe
sub
xorb
xchg
mov
leave
lock
or
or
sbb
subl
jo
mov
fstp
cld
and
adc
ret
in
jecxz
cmp
push
mov
sub
popa
sub
inc
sub
jno
pop
mov
xchg
add
xor
repz
mov
mov
psraw
mov
loopne
js
push
cmp
jmp
inc
mov
in
shlb
sbb
mov
mov
adc
and
adc
xchg
test
enter
pusha
pop
xchg
cmp
fsubrs
mov
fsubp
fsubr
popa
sub
inc
jae
jne
sub
mov
push
stos
lock
add
xlat
test
jecxz
cmp
enter
pushf
pop
es
mov
xchg
pop
cld
mov
sti
scas
or
pushf
aad
dec
rcll
xchg
cmpsb
dec
mov
ja
sbb
shll
jp
es
fsubrs
push
and
mov
sub
fldln2
ficomps
repnz
dec
subb
mov
push
jb
or
lahf
popf
mov
pop
sub
dec
lds
push
leave
stos
je
leave
lods
xchg
mov
stc
dec
das
fs
push
in
pop
aaa
fcomps
jbe
popa
inc
inc
pushf
mov
pop
xchg
jge
xlat
int3
xor
cmp
jns
push
pop
dec
fwait
cmpsb
mov
ficomps
ss
cli
push
add
inc
movl
call
icebp
je
adc
cmpsl
stos
jge
bound
arpl
mov
push
shlb
xor
mov
jmp
xchg
test
push
adc
bound
repz
xchg
popa
lds
jbe
in
fsubs
and
loop
sub
push
or
and
fisubrl
mov
icebp
sar
cmc
mov
outsl
mov
cmpsl
rorl
inc
or
ds
int
mov
sub
push
xchg
xchg
sub
stc
adc
cmp
cmp
pop
sahf
cwtl
jecxz
ljmp
fstpl
mov
adc
mov
fnstsw
lds
out
aam
mov
cmp
aam
into
push
dec
call
dec
pop
xor
dec
push
out
inc
mov
adc
fisttpl
lret
add
repz
mov
xor
xchg
xor
ficoml
arpl
mov
xor
jne
push
aaa
cmp
sub
add
mov
or
aam
mov
xchg
pop
movsl
sarl
dec
push
sbb
aam
cmpsl
pop
lahf
inc
repz
das
cmp
movsb
inc
pop
lret
mov
xchg
sarl
mov
loop
cmp
out
lcall
add
mov
mov
in
fstl
aaa
icebp
push
adc
out
jl
push
lea
xor
aad
inc
pop
cmp
movsl
leave
sbb
mov
xorb
in
out
std
mov
imul
dec
mov
mov
roll
adc
mov
xchg
xor
dec
xchg
imul
and
movsl
test
mov
pop
fistpll
mov
adc
sahf
sub
lods
mov
mov
jmp
int3
hlt
sbb
and
adc
bound
jp
xchg
xchg
xchg
mov
aad
in
int
mov
scas
xchg
cltd
fstps
movsl
pop
adc
cmp
xorps
lret
dec
sub
add
and
ljmp
push
sub
xor
mov
aad
fs
dec
ret
fs
pop
loope
cs
or
cmp
sub
jbe
xchg
xchg
aaa
js
jns
jb
icebp
not
std
and
jb
inc
orb
fsts
loop
loope
lret
cwtl
add
adc
sub
mov
or
decb
add
mov
push
mul
fwait
jno
push
and
sti
and
sub
push
fldenv
and
scas
fnstcw
rep
les
cltd
lret
lea
xchg
inc
mov
mov
dec
xor
mov
je
xchg
aas
sti
inc
adc
int
mov
pop
mov
push
adc
mov
or
lret
scas
dec
xchg
sub
jge
cmc
jno
xor
sbb
and
add
sarb
mov
dec
push
popf
mov
xor
mov
push
clc
sub
lret
sti
lea
test
xchg
std
inc
add
xchg
cs
adc
ss
add
cli
sub
outsb
push
sbb
imul
inc
fists
xchg
stos
bound
int3
out
loope
cmpsl
daa
scas
std
cld
jecxz
xchg
sub
cwtl
fs
rolb
mov
jno
ss
or
sub
jp
out
pop
xor
and
pop
shrb
mov
js
push
pop
or
pushf
in
mov
or
fiadds
shrl
test
and
pop
adc
pop
mov
mov
sub
and
out
mov
mov
lahf
aam
xchg
push
mov
mov
mov
lds
test
sub
popa
mov
sbb
clc
enter
dec
test
lfs
jns
lods
das
lods
and
jne
mov
insb
ja
push
insl
lahf
fmull
jb
xchg
js
xchg
and
setns
mov
loopne
and
push
dec
xchg
mov
mov
cltd
pop
pop
sub
xchg
pop
mov
andb
mov
popa
les
out
inc
out
mov
int
imul
push
or
inc
add
pop
call
jo
sbb
add
xlat
inc
dec
inc
in
fmull
scas
pop
adc
and
xor
add
jp
subl
loopne
mov
add
frstor
int
imul
shll
add
adc
andl
shrl
add
push
and
inc
inc
shll
dec
nop
mov
or
cmp
clc
mov
xor
xchg
jns
lret
je
push
cwtl
outsl
inc
shll
call
push
in
aas
mov
roll
mov
push
mov
mov
mov
mov
jmp
and
lcall
loopne
jmp
insl
idiv
sbb
movsl
cld
sub
out
cld
cmp
aaa
adc
dec
or
and
mov
int3
test
mov
xor
enter
xchg
aad
push
mov
pushf
das
pop
dec
xchg
out
cs
xor
popa
pop
xchg
dec
pop
leave
dec
scas
subb
pop
sub
mov
add
mov
cmp
and
int
jbe
in
pop
in
iret
inc
scas
pusha
jle
fistps
loop
icebp
pop
lock
sub
mov
mov
push
aad
repz
jp
inc
and
or
movd
xor
roll
loopne
push
jbe
lret
stc
clc
fistpl
dec
fadd
imul
aas
movsl
lds
ds
leave
mov
movsb
out
pusha
icebp
cmp
je
sarb
and
mov
loop
arpl
adc
iret
cmp
push
popf
clc
add
fidivrs
sbb
jmp
jg
adc
mov
lahf
xchg
mov
jge
fs
xchg
jo
cmc
stc
xor
jl
mov
ds
lea
push
mov
adc
sub
shrb
push
enter
and
mov
test
lahf
lods
xchg
pop
jge
ret
cmp
xchg
dec
psubq
mov
into
loope
jecxz
mov
jns
jle
in
cmc
mov
jge
adc
imul
lea
xchg
mov
xor
pop
scas
and
push
fwait
mov
push
sbb
mov
icebp
pop
mov
mov
je
cmp
fildl
cmp
cmp
jo
sbb
dec
stc
in
sub
push
dec
out
in
xor
sbb
cmpsb
enter
mov
sbb
outsb
inc
dec
aam
mov
ret
push
insl
leave
push
dec
adc
or
add
cmp
or
scas
adc
sub
xor
cwtl
inc
mov
aaa
fxch
jno
scas
bound
pop
cmp
add
xor
sbb
pop
fsubrl
popf
movsl
mov
mov
stc
inc
cmp
imul
mov
pop
or
sti
inc
mov
mov
or
repnz
js
pop
in
sub
inc
pushl
jecxz
dec
dec
rolb
adc
jnp
dec
xchg
js
ss
hlt
fwait
sbb
inc
adc
mov
xor
dec
cmp
mov
and
xchg
cmp
insb
int3
sbb
xor
inc
jae
sub
loop
push
hlt
adc
adc
pop
mov
test
mov
mov
jmp
dec
push
pop
jo
out
inc
inc
hlt
lods
push
in
inc
loope
std
lds
call
inc
sbb
jp
sub
pop
push
push
and
jg
jp
enter
lds
adc
pop
int
lds
out
cmpsb
stos
sbbb
push
fs
aas
mov
cmp
divb
add
addr16
dec
mov
sbb
xchg
test
cmp
cmc
jle
sbb
sbb
adc
cmp
jg
cmp
sahf
sbb
push
ficompl
fwait
mov
xor
lcall
lret
dec
int3
arpl
int3
mov
sub
jbe
dec
and
dec
and
in
sub
jae
cli
jle
add
mov
loopne
dec
mov
fildl
mov
pop
pop
xchg
fs
pop
daa
and
ds
jecxz
aad
dec
xchg
push
xchg
mov
xchg
loopne
lea
push
xor
jns
ds
jle
test
add
sbb
sub
inc
pop
sahf
fmul
sbb
ss
add
arpl
rclb
sbb
and
outsb
call
stc
dec
xchg
dec
push
adc
idivl
and
clc
stos
pop
jnp
push
jns
dec
imul
scas
in
ds
dec
xchg
mov
push
lahf
lea
imul
pop
jnp
adc
xor
out
dec
outsb
repz
pop
cmpsb
mov
dec
in
push
lock
fidivrl
mov
popf
mov
movsb
jnp
dec
add
inc
mov
iret
xlat
jle
insl
rcr
xchg
shrb
jnp
push
push
pop
mov
jo
int
cmp
mov
xor
fimull
add
cmpsb
fsubl
mov
pusha
pop
or
mov
std
jl
test
aaa
pop
aam
sbb
hlt
add
xchg
sbb
mov
fcoml
int3
sbb
lods
sti
jo
mov
loop
xor
mov
xchg
hlt
sbb
mov
add
les
cmp
add
testl
scas
adc
sub
cmp
movsb
inc
pushl
and
sbb
lahf
test
lahf
mov
dec
xchg
or
inc
add
fnsave
sbb
push
scas
shlb
adc
movsl
and
sub
ja
adc
aam
mov
fs
leave
fsubr
add
mov
mov
inc
pushw
cmp
outsb
sbb
out
rol
call
cld
frstor
push
in
adc
cs
push
and
mov
scas
fxch
das
lret
push
call
push
lret
jle
xor
lea
pop
lahf
xchg
adc
cmc
or
cmp
inc
inc
mov
push
sub
stc
push
in
aas
xor
flds
cmp
pusha
jg
adcb
xor
pavgw
lods
push
fistpl
cs
or
cmp
hlt
add
dec
jbe
sarb
mov
xor
daa
cmc
test
add
roll
push
cmp
inc
mov
pop
push
add
add
xchg
pop
pop
pop
or
repz
add
icebp
mov
mov
int
test
push
int3
mov
stos
push
mov
inc
or
insl
adc
and
cmp
cmp
in
bound
adc
jmp
mov
cwtl
adc
stos
add
push
out
loopne
je
int3
icebp
repz
jmp
inc
int
jg
and
out
pop
mov
cmp
rcrb
mov
pop
cmpsb
xchg
loop
adc
mov
scas
movsb
mov
icebp
xor
movsb
adc
idivb
jge
push
add
mov
test
sub
out
add
adc
iret
popa
nop
jae
dec
mov
pop
aas
pushf
sub
xorb
and
sub
jbe
mov
testb
mov
out
pop
cmpl
cmp
add
jmp
imul
adcb
add
stc
and
inc
popf
rcll
pop
inc
sbb
adc
shlb
pop
add
cmpsl
sub
cwtl
add
imul
lds
dec
iret
aam
mov
fxch
mov
popf
outsl
aam
imul
stos
js
or
cld
inc
jbe
into
lret
mov
stos
pusha
jp
test
mov
dec
jmp
push
sub
sub
pop
and
mov
fisubrl
adc
push
mov
adc
mov
pop
ss
stos
adc
iret
data16
mov
es
clc
imul
jmp
popa
enter
mov
adc
mov
jg
movsb
lods
sbb
test
adc
and
mov
clc
add
sub
or
out
jp
xchg
pop
scas
mov
jae
and
add
popf
inc
and
repnz
add
add
jp
stos
int
addl
jb
scas
sbb
adc
aam
addl
add
mov
cmpsb
loopne
mov
xchg
mov
mov
in
sbb
jne
add
mov
add
jo
mov
mov
jb
fsubr
rorl
add
adc
fiaddl
rcrl
push
mov
adc
cld
movl
sub
lds
add
xchg
scas
std
xchg
popf
push
push
inc
lret
jnp
push
xchg
mov
and
jnp,pn
outsb
lahf
iret
add
loop
adc
fdivp
add
mov
push
mov
int
jecxz
pushf
jl
xorl
xlat
mov
push
and
push
add
shr
addb
add
mov
mov
sub
cs
push
xchg
jns
test
and
aaa
fsubrl
imul
es
fiaddl
push
lahf
lock
dec
int
xor
sbb
orl
add
pop
je
xor
icebp
popf
imul
push
push
dec
inc
and
inc
in
push
aas
adc
lea
out
lock
stos
xchg
xchg
test
cs
xor
adc
jp
int
subb
inc
add
adc
and
adc
sub
sahf
addb
fimull
push
xchg
ja
arpl
pop
inc
adc
fldt
mov
sti
xlat
xchg
ret
or
lea
sub
and
in
insb
dec
daa
sub
add
sub
mov
xor
pop
pop
andl
in
xor
inc
clc
sbb
jbe
rcr
pop
and
or
mov
fists
lret
cltd
mov
xor
sbb
xchg
push
fldt
in
mov
add
or
shll
call
nop
dec
int3
test
inc
push
adc
pop
into
test
lds
adcl
andb
xchg
lea
mov
jp
out
int3
add
cs
loopne
mov
arpl
ja
jmp
pop
inc
cmp
out
fs
push
shrb
pop
movsl
fldenv
dec
cmc
push
mov
fs
stc
out
call
hlt
mov
aaa
inc
lods
mov
jp
test
enter
fidivs
fsubrl
xor
dec
cmp
pop
lea
in
dec
mov
sbb
decb
icebp
int
add
xchg
jmp
scas
jl
mov
adc
mov
and
and
fdivs
scas
mov
rcll
clc
cwtl
je
and
cmp
mov
lock
sbb
xchg
rclb
ss
mov
and
and
and
mov
in
not
cmp
push
clc
je
out
loope
inc
fistl
add
xor
iret
and
cmp
stos
add
or
lds
pop
xor
fs
jg
call
cmpsl
outsb
push
pop
or
in
leave
pop
mov
mov
je
push
xor
or
xchg
and
mov
les
insb
cmp
dec
call
mov
dec
imul
fisubs
aam
imul
and
out
inc
jo
stos
xor
pop
push
fmull
push
insl
push
aam
mov
push
dec
sbb
push
mov
xchg
pop
in
loopne
and
mov
sub
sahf
out
xchg
adc
mov
sbb
cli
test
ja
shl
orb
sbb
outsl
pop
out
xchg
ljmp
push
cmp
and
movsl
mov
cli
jecxz
test
sub
das
push
mov
mov
loope
fsubl
push
je
inc
cmpsl
jmp
jns
push
aas
adc
outsb
add
mov
push
mov
std
jbe
add
fstl
and
mov
xor
sbb
scas
testb
push
cltd
ret
push
inc
test
mov
sbb
pop
fistpl
ret
icebp
push
sbb
loopne
out
and
sbb
push
or
sbb
mov
int3
aas
cmp
outsl
lods
mov
das
std
in
cmpsb
imul
gs
or
popa
xchg
insl
push
imul
call
push
xor
in
std
and
sub
andl
mov
or
std
cmp
sub
push
push
je
xchg
or
inc
mov
cltd
add
pop
pop
add
insl
and
or
adc
in
ror
jne
cmp
cmp
mov
jg
fisttpll
pop
mov
cmp
inc
pshufw
and
add
sarl
fistps
dec
in
mov
push
sbb
mov
add
jo
jl
or
mov
jns
fwait
in
dec
aad
or
mov
sbb
cwtl
sbbl
sub
dec
ljmp
mov
aaa
test
mov
sub
mov
jae
push
pop
out
adc
out
inc
mov
or
sbb
dec
sar
fldl
iret
das
adc
dec
es
cmp
std
push
add
test
mov
iret
xchg
push
add
mov
popa
mov
and
movsl
lcall
pop
sub
jecxz
mov
sbb
and
adc
mov
adc
sub
test
adc
sub
repz
or
pop
dec
out
jg
pop
in
add
pop
decb
pop
in
xchg
insb
repnz
rcr
xor
sub
js
xor
xchg
xlat
xor
push
lcall
out
pushf
insl
pop
pop
inc
pop
shl
xchg
stos
into
cli
adc
jns
jl
inc
pop
sub
lahf
jne
outsb
call
int
adc
ljmp
loop
pushf
pop
or
push
pop
out
pop
in
jg
daa
or
lods
inc
push
adc
test
ja
push
push
jmp
insl
les
dec
mov
cmp
repnz
mov
jno
sub
sub
cmp
cmp
push
stos
or
testb
pmaxub
mov
sbb
imul
add
mov
push
scas
popa
out
lcall
cld
cmp
cmp
clc
icebp
lods
sbb
push
xchg
add
ficoms
mov
fdivrl
aaa
outsl
movsl
int3
add
je
jo
push
push
cmpsl
and
mov
push
push
add
rdmsr
negb
rorb
repz
sub
les
mov
fiadds
arpl
push
pop
jmp
cmc
sti
jnp
mov
and
mov
sub
xchg
mov
sub
xchg
aaa
add
repz
add
add
add
imul
add
add
add
mov
add
cmp
add
hlt
add
ret
jmp
jmp
add
add
add
add
add
add
add
inc
add
add
add
add
js
add
add
add
insb
add
fildl
add
add
jge
lock
add
iret
inc
xchg
addl
add
add
ja
cmp
add
add
add
dec
add
add
adc
add
add
add
add
add
data16
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
int
add
add
add
popf
add
jmp
add
add
add
add
add
data16
addr16
add
popf
sbb
add
add
add
add
add
insb
add
mov
add
add
add
movsl
mov
imul
add
add
or
add
add
add
add
add
add
inc
add
push
add
jg
or
pop
add
add
add
add
add
add
sub
add
push
xor
add
mov
lds
add
jl
push
inc
inc
push
mov
add
add
add
repz
pop
cmpb
dec
add
add
inc
test
pop
movsb
js
jns
push
mov
sub
pop
pop
adc
je
ret
out
jae
push
ljmp
push
sub
or
cli
roll
stos
add
sub
pop
jle
insl
loop
xor
mov
pop
shlb
nop
or
and
dec
dec
mov
xor
movsl
shll
inc
jbe
push
lahf
or
bound
call
cwtl
rcrl
sub
test
xchg
sahf
les
add
xor
jl
shll
test
add
dec
enter
jl
and
push
in
push
mov
add
add
mov
sahf
aam
xor
add
add
add
imulb
fbld
add
add
add
add
add
test
add
inc
mov
add
test
add
cmpsb
push
inc
add
add
add
add
xchg
fildl
add
add
hlt
xor
add
in
imul
sbb
push
es
sub
sub
lods
jno
adc
jb
clc
cwtl
cmpl
outsb
push
inc
dec
rcrb
lods
jp
and
add
add
add
add
and
xchg
daa
jae
stos
out
xchg
sub
and
test
add
add
add
add
jmp
mov
packssdw
mov
in
xor
and
adc
pop
mov
mov
cmp
clc
adc
add
add
add
add
pop
adc
in
scas
push
cmpsb
into
or
mov
cmp
push
add
add
add
add
inc
jbe
cltd
or
arpl
ret
cwtl
rcrl
jle
add
add
add
add
cmp
xchg
sahf
lds
repz
xor
test
mov
push
jge
and
push
mov
xchg
cwtl
rol
xor
add
add
add
in
dec
dec
cmc
das
fisubl
or
fmull
jae
mov
lea
fdivrp
shl
or
xlat
sbb
pop
outsb
cwtl
sbb
sbb
sub
add
sub
sub
mov
jbe
push
out
jae
stc
fwait
cmpb
outsb
push
inc
dec
rcrb
lods
jl
mov
jge
and
xchg
daa
jae
stos
in
xchg
sub
and
mov
sub
ss
ret
mov
or
push
mov
call
popa
adc
pop
mov
lea
je
jg
call
es
and
pop
adc
in
scas
push
mov
mov
add
imul
push
lahf
or
adc
ret
sahf
aad
js
pusha
add
mov
movsl
sbb
hlt
xor
jg
shll
test
mov
push
jge
and
pop
push
in
push
mov
xchg
lahf
xlat
xor
dec
cmc
sub
movsl
jb,pn
mov
mov
xlat
push
jb
mov
pop
shl
bswap
rcrb
and
rcrb
mov
push
and
sub
sub
mov
jbe
pop
in
jb
cwtl
cmpl
push
rcrl
scas
jnp
and
xor
jge
daa
inc
xchg
daa
jae
lods
out
xchg
sub
and
xorl
shll
mov
add
add
add
add
adc
pop
mov
mov
cmp
adc
cld
pop
arpl
add
jmp
push
mov
mov
sbb
shlb
inc
jo
pushf
add
add
inc
bound
call
fwait
fwait
rcrb
jns
pusha
cmp
sahf
cmpsl
sbb
add
add
divb
pop
dec
jg
ret
test
jne
push
jge
and
push
mov
nop
sahf
aam
xor
dec
cmc
sub
mov
add
mov
fimull
push
jae
mov
adc
add
std
shl
or
aad
and
push
mov
fwait
add
add
add
add
test
ljmp
add
adc
add
add
add
add
add
push
add
add
add
add
add
add
add
jno
add
outsb
add
add
add
add
lock
jmp
mov
add
add
dec
add
dec
add
das
add
add
add
add
data16
inc
add
add
push
jb
cmp
incl
insl
loopne
add
imul
add
adc
add
mov
push
pop
leave
add
ret
add
out
or
add
sldt
add
add
mov
add
xlat
ljmp
add
add
add
cmp
add
add
push
add
add
add
add
add
gs
lcall
pop
imul
sub
test
sub
add
cmp
stos
jge
test
add
lea
push
jno
add
add
fdivrs
add
cltd
cmc
mov
ss
push
dec
lret
shr
fldl
add
lret
cmp
inc
add
mov
mov
lds
add
jne
aaa
xchg
stc
scas
add
add
mov
dec
add
add
out
jmp
iret
and
fidivl
add
add
aaa
lret
add
fcoms
loope
push
pop
sbb
imulb
push
sbb
scas
jae
aad
adc
pop
lods
push
cmp
jbe
and
add
sbb
insl
popf
insl
mov
cmp
xlat
xchg
add
pop
jnp
movsl
outsb
imul
mov
sub
add
lods
pause
push
decl
push
jg
xor
add
pusha
jbe
add
add
movsb
lea
add
rolb
add
add
add
add
add
add
insl
gs
cs
movsb
add
mov
loopne
aad
rolb
add
movsl
add
jae
add
add
add
jbe
add
testl
add
add
add
mov
add
add
add
xor
imul
add
add
mov
add
add
add
add
add
add
add
add
push
mov
add
add
add
add
add
add
add
add
lea
add
add
and
add
sbb
add
add
test
aad
inc
add
add
ja
add
jno
add
test
add
dec
movsb
add
add
add
cmp
stc
mov
or
xor
loopne
inc
inc
push
mov
inc
add
flds
add
inc
pop
add
mov
addb
push
pop
xchg
cmp
cmp
xor
mov
inc
cmp
adc
pusha
outsl
jbe
pop
add
in
movsb
in
push
call
std
in
mull
mov
in
andb
and
inc
inc
or
jae
lret
add
cmp
lret
push
adc
clc
cli
jae
and
pop
pop
mov
jae
loope
leave
mov
pop
cmp
leave
xchg
das
mov
jp
mov
dec
mov
xchg
xor
push
lods
in
popf
orb
mov
testb
xorb
xor
push
pushw
mov
fwait
lods
jp
adc
pushf
sub
scas
incl
mov
mov
or
lret
adc
sub
jle
adc
movsl
test
inc
aaa
dec
fsubrl
icebp
or
ret
dec
adc
leave
movsl
add
jbe
insl
xor
add
cld
jle
out
jp
xchg
mov
lret
fildll
jno
cld
sahf
in
xor
xor
mov
call
test
mov
mov
pop
pop
insl
outsl
aam
nop
push
add
repz
xlat
imul
ss
out
data16
nop
xchg
imul
pop
xor
push
scas
mov
xchg
or
pop
je
test
or
cld
popf
dec
inc
inc
mov
mov
test
in
mov
int3
push
sub
sbbl
dec
pop
pop
inc
mov
sahf
lret
movb
gs
clc
inc
pop
jno
vmwrite
mov
addr16
or
sub
cmc
fisttpll
ljmp
out
dec
in
jp
fcomps
pushf
push
dec
pop
sbb
mov
mov
adc
out
lea
xchg
inc
add
xor
ss
enter
fs
ja
or
nop
cmp
push
and
adc
mov
cmpsl
fisttpl
mov
std
mov
gs
xor
xor
and
xchg
cwtl
lret
inc
loop
shrb
notb
mov
mov
sub
add
lods
cltd
add
sub
xchg
sti
mov
sub
push
jb
movsb
dec
mov
or
mov
dec
mov
popf
mov
loopne
movsb
loope
mov
mov
dec
cmc
fcmovnbe
pop
shl
pop
and
pop
outsl
adc
orb
xor
sub
mov
push
push
push
pop
gs
icebp
push
mov
jg
xor
cmp
or
push
xchg
cmp
jl
dec
xor
dec
jmp
sub
cmp
add
cmp
repnz
dec
out
mov
data16
adc
outsb
aad
jns
ret
pop
clc
pop
jno
rclb
sub
in
adc
das
pushf
ljmp
ficompl
es
dec
fstps
loope
pop
mov
in
push
cmpsb
popw
jno
std
cltd
or
pop
add
inc
stos
nop
shl
xchg
aas
push
outsl
jg
lret
jg
xchg
pusha
clc
lahf
loopne
adc
xchg
mov
aas
pop
cmpsb
hlt
xchg
pop
and
inc
mov
insl
xchg
lret
mov
nop
push
repnz
test
rorl
cli
fcmovb
mov
push
loopne
inc
xchg
movl
and
mov
loope
push
and
test
adc
out
in
pop
add
imul
call
and
dec
xchg
dec
mov
mov
inc
add
movsb
mov
xchg
cmpsl
cltd
pusha
jge
jmp
xchg
mov
mov
sbb
inc
or
pop
xchg
or
dec
pusha
rcl
mov
in
icebp
sbb
mov
cmpsl
movsl
scas
rcrl
lock
inc
dec
shl
sub
jne
pop
mov
iret
pop
jecxz
push
sub
or
das
fstps
mov
or
adc
push
icebp
pop
push
push
loope
xor
sahf
icebp
in
or
pop
cmpl
jg
inc
pop
adc
mov
rcrb
pusha
mov
sbb
stos
dec
test
or
je
inc
mov
pop
into
jno
popf
das
js
les
mov
xor
cmp
jecxz
fcomps
xor
xchg
jb
or
jno
lahf
in
lds
jmp
ret
sbb
cmpsb
outsl
cmp
sbb
call
ja
test
test
inc
arpl
lcall
push
push
popa
pusha
pop
fdivl
roll
jl
in
xchg
imul
pop
jo
mov
xor
xor
or
mov
push
shl
or
adc
imul
jmp
inc
aas
repnz
xchg
in
pop
call
fimull
aas
push
push
or
inc
test
cmp
subl
mov
adcl
mov
push
mov
pop
inc
sbb
mov
adc
mov
mov
lret
mov
push
jae
ret
andl
or
ja
rorl
mov
int
xchg
jecxz
pop
insb
cmpsl
pushf
pop
lcall
pop
aaa
dec
or
test
inc
and
sub
mov
pop
fcoml
adc
and
or
sbb
pusha
insl
int3
or
loope
into
jno
out
fldenv
loope
dec
mov
add
push
and
mov
clc
hlt
and
inc
sub
xlat
shrl
inc
sbb
cli
xchg
xor
jmp
repnz
sarl
pop
sahf
inc
ss
leave
xor
sub
pushf
cld
test
clc
pop
scas
mov
push
fnstenv
scas
mov
pand
adc
stc
rcr
aam
jne
test
imul
rcrl
sahf
dec
cmp
mov
jae
mov
cmpsl
ret
pop
rol
jb
fisubrs
pop
scas
out
fbstp
shrb
loope
iret
adc
stos
sbb
out
mov
jbe
xchg
mov
fwait
aaa
stos
js
xchg
insl
jo
out
lods
or
lds
sbb
cmp
xor
shrb
adc
and
mov
or
paddq
out
in
sbb
loope
aaa
and
push
xlat
lret
push
mov
push
movl
push
lods
bound
stc
popa
jb
fidivl
hlt
fsub
and
jns
outsb
out
les
stos
push
int3
fbld
cld
popf
adc
aam
divl
push
adc
sbbl
jmp
mov
sbb
in
sbb
jge
cmp
out
push
orl
mov
scas
insl
notb
imul
dec
inc
add
mov
jnp
jle
das
js
inc
lods
and
mov
repz
mov
mov
ret
aad
lcall
in
dec
pop
jb
clc
mov
xlat
cld
ret
push
nop
dec
iret
cmp
add
lods
xor
adc
mov
push
in
rolb
je
or
push
mov
test
dec
pop
mov
cltd
mov
mov
lods
out
leave
ljmp
shrb
stos
arpl
dec
mov
sbb
cs
pop
jns
ja
inc
sbb
lret
pop
jl
repnz
lret
jno
negb
sub
add
repz
push
iret
pop
and
lods
data16
pop
lods
sti
mov
or
push
test
mov
call
inc
push
lods
push
pop
daa
fisttpl
fidivl
imul
mov
ret
push
xor
into
icebp
outsl
dec
xchg
xor
subl
push
lea
repz
cwtl
repz
test
dec
jbe
ja
pop
pushf
fadds
les
pop
int3
aas
sahf
clc
inc
addb
add
in
xor
das
ret
mov
sbb
divb
cmpsb
push
mov
cld
scas
outsb
push
add
notb
push
lret
pushf
stos
test
xchg
cs
insb
bound
outsl
pop
addr16
icebp
add
inc
stos
push
sbb
icebp
inc
jno
or
rcll
add
adc
cs
and
repnz
lock
push
mov
daa
lcall
imulb
aad
lods
pop
adc
sub
cmp
sbb
movsl
das
xor
xorl
adc
test
fwait
cwtl
in
jle
inc
mov
push
inc
popa
int
mov
loopne
xchg
dec
or
outsb
flds
jle
popa
lods
pop
out
sbb
push
in
fmuls
addr16
push
js
outsl
sahf
mov
popa
aam
iret
sahf
addr16
jl
xor
xchg
test
jb
jo
das
test
xchg
fdivrs
iret
std
inc
insb
js
mov
adc
sbb
sbb
ret
push
mov
xor
inc
mov
femms
mov
bound
aas
jle
test
adc
call
or
aas
enter
fwait
dec
mov
xchg
ret
aam
sbb
cmpb
jg
inc
xchg
cmp
lcall
jns
cli
in
dec
movsl
pushf
xor
lea
inc
mov
clc
mov
jae
adc
stc
mov
push
jne
inc
xor
dec
mov
fidivrl
add
ss
xchg
lahf
or
scas
and
loop
into
nop
fwait
shll
and
cmpl
pop
mov
dec
xchg
mov
mov
lcall
xchg
clc
aad
inc
shrl
adc
loope
lcall
adc
nop
xchg
and
sub
mov
dec
xchg
jge
test
fadds
add
gs
push
cwtl
in
shll
out
stos
mov
pop
push
imul
inc
scas
hlt
cmp
nop
or
sbb
push
stc
mov
and
out
push
mov
xchg
sub
orl
mov
repz
mov
push
mov
push
movsb
stos
mov
and
ljmp
pop
or
mov
loope
sbb
inc
push
rclb
imul
les
xchg
lret
sbb
lcall
pop
cmpsl
push
mov
dec
inc
inc
mov
push
bound
std
lcall
std
inc
repz
or
sbb
mov
into
icebp
pop
or
mov
nop
sub
nop
fwait
ljmp
arpl
inc
out
sbb
adc
das
cmpsl
cltd
fldl2e
mov
push
cltd
push
dec
out
movsl
or
mov
pop
or
dec
out
adc
lret
mov
or
jae
sbb
in
sar
push
dec
pavgb
push
ljmp
push
sbb
sub
jl
cld
mov
outsl
fnop
sub
sub
push
mov
and
push
dec
sbb
dec
or
mov
sahf
or
das
pusha
adc
mov
mov
enter
xor
pop
fiaddl
popa
in
aaa
jg
hlt
ljmp
shll
or
sub
pop
adc
inc
rcl
mov
pop
repz
mov
push
jp
xchg
cmpb
cli
icebp
adc
add
add
jo
sarl
mov
pop
inc
mov
push
xlat
push
xorb
jae
cmp
pop
xchg
fimuls
fs
pusha
adc
inc
test
mov
sub
and
hlt
inc
add
push
stc
sub
lods
sbb
aam
and
aam
cmpsl
int3
jnp
adcb
or
cmp
test
dec
call
aaa
sbb
dec
ja
cmpsb
and
hlt
nop
les
or
outsl
jo
inc
add
adc
jne
jb
outsl
rorb
jns
das
pusha
inc
fwait
mov
mov
add
jge
inc
popf
scas
je
or
mov
out
gs
nop
ljmp
ret
in
xlat
cmp
push
imul
mov
jno
iret
outsl
xchg
out
inc
xor
dec
mov
data16
jmp
push
fnstsw
push
xor
ja
gs
jno
push
mov
mov
push
or
data16
push
mov
fldenv
dec
mov
cmp
sbb
test
push
in
mov
push
pushf
lret
cmp
cli
in
shll
mov
out
add
fisttpl
je
pop
add
enter
dec
pop
xor
and
jo
pop
loop
dec
aam
sbb
out
ret
and
sub
mov
imul
pop
pop
xor
test
or
jp
cmp
cli
add
jg
inc
in
dec
dec
in
mov
push
dec
add
test
xor
cmp
loope
ja
cmpsl
fdivr
pushf
push
and
mov
mov
inc
cmp
jns
addl
aam
mov
cs
faddl
fwait
xor
and
jg
cltd
bound
mov
insb
push
jmp
data16
hlt
and
xchg
mov
fucomp
pusha
insb
push
add
jno
mov
or
call
notl
or
mov
bswap
ljmp
sbbl
xchg
outsb
pop
lods
inc
sar
jb
or
mov
std
cmp
xor
ljmp
sub
andb
ja
mov
scas
cmp
js
sub
jge
adc
mov
shll
add
cwtl
jnp
push
ljmp
or
cmp
jecxz
repz
add
and
jbe
jno
shl
insb
cmp
out
gs
mov
and
lret
loope
dec
sub
dec
cltd
push
loopne
data16
or
xchg
in
int
cwtl
iret
dec
jo
adc
and
push
outsb
pop
cmpsl
mov
movsl
repnz
out
mov
adc
sub
push
pop
jle
push
aam
xlat
adc
loope
popa
test
inc
stc
jge
andb
out
or
add
sti
mov
mov
jmp
add
xor
jle
jb
test
push
dec
pop
lds
in
xlat
icebp
jae
inc
pop
movsl
xlat
repz
inc
pop
subb
push
cltd
or
cmc
nop
jmp
popa
jmp
jo
jo
ret
aad
movsl
aaa
push
push
mov
stos
test
xor
test
sbb
in
dec
xchg
mov
xor
and
push
xchg
add
mov
test
sbb
mov
jo
data16
imul
xchg
ret
negl
lea
and
shll
int
jo
jecxz
rcrl
inc
test
add
jb
fwait
xchg
pop
js
xchg
cs
dec
int3
iret
sahf
xchg
stc
inc
cmovae
fs
lcall
lret
jge
pop
sarb
dec
sbb
mov
les
cmp
js
xor
cmp
sbb
jge
test
add
lcall
push
lcall
push
jecxz
xor
stc
cmc
adc
adcb
lods
fmull
clc
or
sbb
jno
push
mov
call
loopne
xchg
jge
dec
cmp
js
push
xor
pop
inc
jo
cmpsb
add
lods
popf
xchg
movsb
mov
xchg
fxch
sbb
adc
or
ficompl
pushf
loope
xchg
vfrczsd
sub
clc
add
ficoml
and
shr
xor
js
ss
sbb
add
inc
pop
fldcw
sub
push
mov
xchg
and
insl
dec
dec
inc
mov
sub
lahf
push
cltd
lahf
jle
adc
lcall
pop
inc
xor
repnz
sti
arpl
in
aas
js
or
aaa
cmp
cmpsb
sub
mov
push
cmpsb
cmpsb
inc
lret
rorb
es
in
shlb
xor
stos
mov
xor
add
fldt
mov
xor
mov
inc
adc
sub
xchg
mov
cmpl
imull
cs
xchg
jge
inc
rorl
mov
sbb
pop
rcrb
rolb
es
sbbb
dec
inc
fs
cmp
aam
dec
sti
int3
and
inc
mov
push
out
lods
inc
in
negl
cmp
bnd
outsb
xor
lds
rol
pop
adc
jle
jnp
mov
lcall
sbb
xor
jno
inc
dec
addr16
cmpsb
push
sub
es
mov
and
push
add
pop
mov
fnsave
sbbb
les
pop
rcrb
outsl
pusha
jmp
jb
mov
jne
inc
out
lcall
inc
pop
mov
movsb
mov
push
call
adc
mov
push
sbb
aad
xchg
daa
mov
out
hlt
cmpsl
mov
addl
movsb
xlat
cli
jge
mov
push
mov
fcmovb
pop
stos
xorl
sub
sub
out
rol
lods
xor
fidivl
adc
push
push
mov
imul
ret
or
pop
cmp
or
adc
in
push
ret
sbb
jecxz
ret
insl
jl
push
jecxz
lret
and
popa
lds
mov
nop
sub
xor
cwtl
or
jmp
dec
mov
dec
cmp
sbb
xchg
sbb
repnz
push
iret
pop
inc
movsb
ljmp
sub
push
add
add
xor
add
call
ss
adc
sbb
out
and
mov
sub
sbb
sub
mov
shlb
push
cmp
and
aam
sub
cs
cmc
mov
pop
or
inc
daa
std
mov
and
aad
push
mov
inc
les
jae
cmp
mov
adc
inc
idivb
pop
inc
ds
sub
int
cld
int3
test
out
pop
xor
out
sub
push
dec
inc
pop
fcom
jp
jne
mov
mov
sbb
or
push
pop
mov
sub
call
repz
pop
xor
or
xor
mov
xor
ret
aas
pop
push
add
es
jge
jne
mov
or
jge
into
and
cmp
mov
jge
mov
mov
dec
call
push
push
mov
sub
add
arpl
xchg
je
adc
push
enter
dec
int
sbb
jle
jno
imul
loopne
jl
sar
or
lahf
testb
jmp
xchg
inc
mov
pop
xchg
pop
and
or
inc
xor
mov
lcall
cs
cmpsb
sbb
jecxz
mov
sahf
or
push
clc
xor
jle
cltd
push
outsb
sub
leave
sub
mov
xchg
xor
mov
add
xlat
stos
ja
cmc
xor
fistpl
and
cmp
sub
into
outsb
mov
add
dec
xorb
ficoms
push
and
lret
bound
jp
adc
mov
cmp
in
mov
fldl
and
outsl
test
pushf
jle
and
iret
push
stc
cmp
ret
add
mov
jne
in
aas
ficoml
mov
fs
dec
je
out
cwtl
and
stos
cmp
cmp
test
sbb
fcmovu
daa
sub
push
fcmovb
mov
jmp
insb
outsb
pushf
cmp
rolb
std
in
jecxz
or
ljmp
sub
das
push
or
sub
dec
cmc
mov
bound
push
mov
xchg
mov
inc
dec
mov
jg
xchg
in
jb
add
std
xor
lcall
mov
popf
into
mov
mov
scas
sbb
insb
xchg
inc
bound
and
and
in
adc
sub
xchg
xchg
jecxz
lahf
fs
xchg
dec
repnz
ret
out
call
and
adc
cs
pop
movsl
in
test
push
push
push
sbb
pop
pusha
dec
jmp
mov
push
out
pop
cmp
imul
es
inc
and
jl
pop
gs
movl
xchg
add
and
out
pminsw
dec
fildl
fbld
add
lahf
jns
scas
mov
mov
cmp
data16
xor
xor
pop
in
data16
in
mov
cmc
cwtl
cmp
inc
js
repz
xchg
sarb
roll
int3
sbb
adc
sbb
pop
into
push
ja
imul
dec
mov
xchg
call
test
jno
inc
pop
sti
in
mov
sti
adc
push
cmp
in
xorl
shr
cltd
mov
das
daa
pop
push
mov
sbb
mov
or
lds
inc
cmp
loope
xchg
xchg
daa
pop
jecxz
jge
sub
popf
xor
ds
mov
and
pop
mov
cli
cld
adc
push
out
add
lret
inc
sbb
sbb
cmc
subb
sbb
jne
mov
int
cmpsb
or
mov
pop
jnp
fidivrs
lds
in
push
mov
imul
dec
ret
jne,pn
mov
inc
add
ret
or
gs
cwtl
and
cld
sub
scas
aam
lods
ret
in
and
mov
mov
lock
mov
and
lret
jle
jnp
lods
insb
xchg
call
push
mov
pop
push
mov
es
imul
pop
sbb
movsb
stos
addl
push
clc
jb
mov
sarl
mov
test
or
mov
and
jae
mov
das
fcomi
shll
mov
and
out
dec
jno
adc
xchg
and
jge
sub
lods
push
xchg
mov
and
fisttpl
dec
pop
xchg
sbb
stc
and
repz
pop
fmuls
fcompl
and
cmc
cli
call
insl
in
fwait
hlt
sub
jg
adc
and
push
fwait
ss
imul
in
jmp
jno
jp
sub
scas
push
idivb
pop
jb
mov
sub
popa
mov
lods
pop
in
lea
push
insl
push
stc
sub
mov
xchg
out
test
cld
mov
mov
push
js
and
out
push
inc
mov
popa
lods
pusha
pop
jecxz
cwtl
or
pop
mov
out
out
sub
xchg
bound
pop
mov
adc
addr16
ljmp
xchg
cltd
xor
loopne
add
mov
aas
mov
pop
dec
test
mov
xor
mov
popf
insb
xchg
stos
cli
cmp
fnstenv
jnp
insl
push
jl
vorps
and
cmp
push
ret
scas
fnstsw
inc
adc
xchg
xchg
loopne
and
add
sub
imul
loop
test
cmpsl
and
push
stos
pcmpeqb
pop
pop
mov
loopne
rcll
and
fstps
daa
adc
pop
ret
idivl
mov
xchg
inc
sub
sbbb
mov
outsb
cli
ret
cltd
jns
mov
mov
js
popl
in
jae
push
mov
into
push
xor
or
das
outsl
ss
rcrl
mov
sar
aam
and
mov
repz
std
cmpsb
notl
in
out
cs
xor
leave
sub
or
arpl
jg
mov
mov
movsb
in
fiaddl
icebp
cmp
pusha
add
cmpsl
xchg
jmp
pop
addr16
sarb
orb
int
pop
push
pusha
and
mov
loope
pusha
lret
movsb
sub
out
test
pop
inc
lea
sub
into
addb
cmc
lcall
fwait
neg
inc
hlt
les
add
dec
pop
add
ret
cmp
lcall
lret
into
in
xor
inc
repnz
fbstp
subb
iret
popa
mov
mov
les
out
aaa
call
and
mov
fstpl
cld
std
adc
addr16
sub
add
js
mov
ret
popf
roll
lods
rcll
rclb
push
mov
fnstsw
dec
das
xlat
imul
push
mov
movsb
les
cmpb
xor
push
mov
out
shlb
fucom
fs
lock
iret
xor
adc
test
add
adc
into
outsl
fs
out
mov
cmp
or
sub
es
add
ret
cmpsb
lcall
js
cmp
sub
jge
jne
daa
dec
pop
cmp
dec
add
cmpsb
cld
add
sti
icebp
or
dec
aad
cmpb
mov
jl,pn
cmp
dec
pop
fwait
push
fnsave
ljmp
push
jecxz
adc
lret
enter
sub
ret
fs
push
bound
mov
mov
pushf
push
shll
mov
pushf
pop
xchg
inc
mov
inc
mov
mov
int3
xchg
insl
add
lcall
je
cltd
xor
dec
lds
and
push
das
scas
add
in
jne
mov
jns
pop
lds
ficomps
outsl
jae
icebp
cmp
loope
mov
or
add
push
pop
push
cmp
add
sbb
mov
mov
movsl
imul
ret
orl
cltd
das
cwtl
out
xchg
adc
add
dec
and
inc
popf
rcl
and
and
iret
jmp
mov
pop
fwait
mov
imul
cmp
xor
lret
loop
push
xchg
mov
mov
push
inc
xor
mov
sbb
test
lahf
xor
sahf
xor
and
insb
sahf
inc
in
push
leave
out
and
repz
pushf
adc
stc
leave
mov
push
push
cmpsb
nop
pop
lods
pop
or
push
xchg
lods
jns
or
push
imul
nop
jns
add
idivb
xchg
sub
rcrb
adc
mov
mov
inc
aad
jmp
loopne
jno
xchg
daa
sti
ds
push
outsb
data16
xchg
mov
lret
xor
or
push
sbb
icebp
inc
arpl
add
push
mull
pop
addb
mov
ret
loop
mov
js
mov
push
sbbl
es
movsl
xchg
push
or
pop
popf
push
ss
int
inc
hlt
mov
cmp
mov
shl
neg
pop
fstpt
or
clc
xor
decb
aas
or
inc
xchg
enter
sbb
add
rcrb
pushf
xor
fsubl
push
popf
divb
pop
mov
repnz
test
ds
xchg
push
push
lret
mov
adc
lahf
push
jmp
sub
add
pop
int3
das
sahf
dec
test
dec
jecxz
mov
lret
mov
cmp
pop
cmc
in
dec
loop
filds
pop
shlb
fwait
int3
sub
mov
mov
scas
jmp
cmp
lret
add
dec
popf
fistpll
mov
mov
clc
stc
add
cmp
scas
mov
fsts
sbb
jno
mov
out
call
fisubs
int
mov
cwtl
dec
aam
mov
cmp
js
ljmp
push
js
jo
add
das
decl
fcompl
push
lahf
popf
jg
add
jecxz
add
xor
mov
jno
js
sub
inc
mov
orb
decb
ret
xlat
fisttpll
mov
ret
cli
mov
or
in
sbb
test
pop
push
xlat
xchg
loop
pop
and
lea
push
push
and
movsb
icebp
xchg
mov
pushf
sar
mov
in
or
mov
pop
sbb
and
jle
insl
sbb
leave
test
loope
add
jecxz
mov
call
adc
jbe
and
insl
jge
pop
xchg
loop
or
dec
aad
sbb
out
inc
in
decb
jp
pop
mov
inc
jmp
dec
fs
mov
mov
fadd
test
adc
jns
fs
sub
inc
mov
jne
xor
xchg
add
test
dec
xor
fbld
xchg
sub
mull
adc
je
shr
decl
sub
mov
mov
mov
divl
lret
adc
adc
adc
ficoml
ds
or
xor
das
xchg
or
push
sub
hlt
insl
loop
xchg
cmp
inc
pop
je
mov
imul
or
and
cli
mov
xchg
and
test
aas
imul
call
jae
push
and
mov
cmp
scas
mov
jge
push
out
test
mov
push
adcb
inc
pop
rcrl
das
push
gs
lds
lahf
adc
mov
add
pop
gs
add
dec
adc
fsubr
xchg
add
les
pop
push
sub
movsb
sub
test
mov
sahf
ljmp
or
sbb
pop
mov
cmp
cmp
sbb
jmp
inc
stc
mov
sbb
clc
roll
cltd
lahf
lret
gs
mov
rcrl
cmpsb
stos
lahf
jge
mov
aam
dec
add
inc
fiadds
out
xchg
cmc
repz
ss
mov
icebp
ret
inc
fisubrs
push
pop
psubsw
in
loopne
dec
xchg
push
sbb
mov
imul
rcll
mov
and
scas
xor
test
dec
sub
xor
sbb
pushf
lds
and
cmp
aaa
idivb
mov
and
movb
inc
adc
repz
xor
sub
gs
shl
test
jns
push
mov
test
pop
xchg
in
or
sbb
mov
jecxz
push
rclb
or
cltd
test
inc
inc
jb
gs
loope
inc
mov
mov
mov
flds
rclb
icebp
pop
sub
leave
imul
mov
das
aam
xor
mov
mov
movsl
dec
mov
and
bswap
mov
xor
stc
dec
xchg
mov
out
iret
addr16
dec
xchg
push
inc
notl
xchg
jmp
mov
bound
xor
push
cmpsl
jns
es
test
sub
jmp
mov
mov
xlat
iret
test
dec
mov
sbb
lret
dec
adc
addr16
xchg
cmp
jle
add
cmp
das
sub
je
daa
bound
lret
inc
jecxz
rol
pop
es
mov
bound
pop
pop
inc
xchg
jae
inc
pop
push
and
cmp
ss
sbb
cld
jo
call
call
fs
hlt
jne
outsb
popf
in
repz
sbb
repz
or
mov
cmpsb
adc
fisubrs
ret
sub
test
cmp
mov
mov
xchg
xor
ret
pushw
push
stos
aam
hlt
mov
aas
jl
aam
scas
cmc
pop
roll
aam
jns
fs
mov
cmpb
out
jmp
rol
dec
clc
push
movsl
in
adcb
jae
ret
and
xchg
push
enter
lret
in
mov
inc
fs
push
pop
pop
xor
xchg
sbb
icebp
xor
rol
or
gs
insb
ds
xchg
pop
pop
xor
fstl
adc
inc
js
mov
push
sub
imul
pop
aam
aam
rcl
fidivl
pop
rclb
push
and
push
adc
push
in
shrl
push
out
fwait
movsl
xchg
cwtl
push
adc
loopne
loop
pop
xor
in
sbb
pop
add
pop
int3
add
stc
cmc
scas
sbb
dec
dec
scas
lret
or
js
dec
add
bound
cmp
jbe
mov
sub
inc
loop
sahf
push
mov
push
and
and
shl
and
shll
addl
stos
cs
jbe
imul
inc
xchg
pop
popa
aam
and
shlb
sbbl
fnstcw
jmp
push
xchg
in
push
push
pop
stos
pop
sti
into
data16
cmp
cwtl
mov
xor
ret
push
pop
add
cmpsb
mov
cwtl
lds
addr16
popa
loop
out
cmp
cmp
enter
inc
test
xorl
xchg
out
mov
push
test
gs
in
je
push
add
es
enter
out
push
movsb
icebp
movsb
xchg
pop
mov
in
xchg
pop
pop
js
fwait
pop
mov
pusha
or
fisttps
sarb
add
cmc
lret
cld
jno
push
fwait
mov
scas
mov
cmp
jbe
les
jb
arpl
call
nop
dec
inc
je
pushf
lahf
push
mov
pop
sti
dec
add
icebp
pop
xchg
sarl
nop
push
inc
stos
mov
and
dec
ds
xor
insb
xlat
pop
arpl
and
nop
enter
decl
mov
stos
xchg
loope
inc
std
movsl
pop
clc
out
mov
loop
push
push
das
sub
mov
cmpsb
sbb
pop
dec
pop
test
mov
pop
iret
in
or
or
pop
dec
mov
pop
imull
dec
xchg
xchg
dec
out
mov
out
negl
sarb
mov
sarl
stos
cmc
lret
push
inc
push
popa
dec
mov
push
rorb
mov
bound
inc
cmp
xchg
ret
mov
mov
cmp
mov
sbb
cld
mov
cmc
pusha
fwait
loope
cmp
jmp
pop
sahf
fcmovb
addl
jge
xchg
daa
cmpsl
test
adc
xchg
sbb
xorl
popa
dec
out
ss
or
clc
sbb
cmp
xchg
aaa
add
movsl
shr
leave
test
popa
std
mov
movsl
adc
sub
adc
mul
cltd
jle
fisttpll
test
int
nop
mov
test
mov
popf
sbb
or
push
inc
mov
cmpb
inc
cwtl
dec
leave
and
addr16
pop
fs
fisubs
pushw
mov
sub
jle
xor
cmp
shll
cmp
adc
and
xchg
adc
int3
jecxz
mov
loop
stc
mov
add
outsb
cmc
mov
adc
lcallw
mov
jmp
scas
and
and
out
mov
and
mov
mov
stc
pop
mov
push
invd
ret
sub
and
xchg
xchg
int
aad
addr16
mov
add
fisttpl
mov
mov
adc
push
sub
add
dec
aaa
andb
or
dec
cmp
fs
dec
jmp
pop
fwait
lds
and
ljmp
insl
or
or
or
sub
mov
jl
rcrl
xor
rcrl
cmpsb
and
jp
dec
sbb
insl
jl
dec
sub
sub
cmpsl
or
push
je
cmpsl
xor
gs
jns
xchg
adc
sbb
push
punpcklwd
mov
fdivl
push
cltd
repz
mov
aaa
and
lcall
fld
lahf
fldl
rorl
aaa
push
cmp
das
fdivr
push
rcr
fisubrl
jl
out
inc
jp
dec
inc
mov
mov
push
stc
orl
sahf
test
dec
int
fmuls
orb
je
stos
add
popf
mov
imul
jl
aas
jne
sub
push
dec
mov
in
jge
adc
loop
in
dec
inc
ljmp
iret
jg
out
push
adc
testb
sub
icebp
shrb
fmull
movsl
mov
lods
push
cmp
gs
jle
lea
cltd
jge
popa
mov
sbb
pop
jecxz
cmp
loope
fwait
fwait
add
int
sbb
mov
xchg
mov
lahf
fstps
adc
pop
int3
lods
xchg
lret
xchg
mov
das
or
mov
sub
mov
outsl
repnz
pushf
pop
adc
pusha
shll
mov
js
pop
dec
jl
sahf
or
lret
ljmp
or
pop
sbb
adc
jne
cltd
fcoml
fnsave
xor
loop
mov
adc
and
mov
addr16
aam
test
mov
in
push
push
fsin
xchg
xchg
in
es
jae
and
shlb
cmp
add
jns
cmp
rolb
cmpsl
test
mov
fstpl
int
add
xor
push
mov
xor
jb
bnd
add
pop
push
cs
sbb
xor
xlat
push
aad
leave
out
mov
or
cmc
or
adc
mov
mov
nop
add
pop
mov
loop
mov
mov
adc
js
cmp
pushf
std
dec
icebp
cmp
nop
mov
xor
jnp
rcll
fcomip
rorl
fiadds
popa
cvtdq2ps
add
sub
mov
or
cmpl
mov
int
test
xor
mov
rorb
mov
jp
xor
subb
dec
sti
xor
out
mov
inc
movsl
jg
adc
loope
add
fsubrl
jge
cmc
push
add
mov
aas
dec
out
push
daa
jae
push
sbb
jbe
pop
xchg
clc
or
push
sti
scas
jne
mov
loope
dec
out
movsb
pop
inc
inc
scas
cmp
mov
push
xlat
sbb
mov
add
or
popl
mov
imul
add
sahf
cmp
jg
in
or
adc
scas
aad
cmp
test
and
lret
add
leave
inc
inc
lea
stos
adc
dec
mov
cmp
xor
and
inc
insb
fisubl
jb
dec
mov
test
jl
aam
test
cmp
cmc
into
xchg
pushf
out
int
or
sti
shlb
and
mov
adc
mov
test
bound
insl
lock
and
and
and
sbb
mov
cld
loop
gs
movsb
pop
fmuls
push
push
push
loopne
loope
data16
jnp
mov
addr16
daa
int3
and
dec
push
cmp
xchg
out
int
adc
fcoml
jb
xchg
add
xor
xchg
mov
jne
repz
sub
stos
adc
jbe
mov
stc
pop
insl
xor
ja
push
insl
fucomip
out
mov
vpunpckhwd
mov
or
repnz
out
sub
mov
mov
mov
mov
out
pop
push
sub
hlt
or
add
lret
mov
xorl
hlt
inc
in
mov
or
divb
popl
je
test
clc
jno
das
lret
pop
icebp
inc
and
pop
shll
mov
orl
popa
popa
repz
sbb
fsts
adc
out
mov
or
add
cmp
add
cmpsb
inc
push
lret
xor
iret
xchg
js
pushf
jge
aaa
out
push
icebp
into
cmp
jmp
hlt
cli
and
xchg
adc
pop
aas
movsb
cmp
loop
fwait
popa
cltd
or
or
loopne
das
mov
push
jmp
xor
push
shrb
push
jb
dec
cmp
insl
addr16
sub
aaa
out
shl
es
xchg
aad
mov
aam
mov
rcl
cmp
cmp
dec
icebp
bound
cmc
push
sub
mov
cmpsl
fists
or
and
mov
mov
sub
cli
dec
out
xor
mov
or
push
mov
xlat
fists
movsb
or
out
mov
cmpsb
ret
adc
js
xchg
stos
fs
jg
lret
inc
push
push
lds
jle
insl
fcomps
repnz
mov
jmp
std
xorb
or
adc
or
mov
sbb
sub
xchg
or
stos
iret
and
aam
ret
xchg
mov
dec
mov
xor
int
mov
in
stc
pushf
push
and
daa
stos
push
push
testb
bound
cli
data16
hlt
mov
mov
lret
mov
push
jnp
add
xchg
je
adc
push
loop
ret
cltd
es
lea
mov
loopne
mov
das
lock
push
mov
mov
dec
adc
cwtl
repz
daa
insb
movsl
js
push
lods
sub
lods
pop
pxor
xchg
inc
mov
sub
adc
aad
pop
cld
xchg
fsubrl
xchg
pop
xchg
xchg
lods
add
lcall
jnp
adc
roll
fmul
out
xor
dec
sbb
lret
sbb
shlb
out
addr16
ficoms
jae
dec
sbb
inc
bound
in
jno
and
je
loopne
push
xchg
lret
leave
rol
xchg
js,pn
cli
dec
push
jnp
jo
add
push
stos
iret
iret
xchg
rcll
aaa
push
or
lret
inc
icebp
aaa
loopne
loop
mov
ja
mov
addr16
sbb
mov
fwait
xor
push
dec
mov
ljmp
jnp
shrl
mov
or
mov
pop
call
mov
or
inc
or
sbb
hlt
inc
jmp
bound
movsl
dec
pop
cs
shl
ljmp
std
xlat
not
dec
lahf
jl
add
sbb
lret
mov
add
sub
aas
movsb
and
cmp
jp
cli
jns
fcmovnu
movsb
jge
sub
and
fwait
jnp
pop
and
icebp
or
sub
mov
push
lods
je
popa
adcb
aas
xchg
movsb
push
xor
ret
mov
mov
sbb
aaa
jecxz
mov
push
fld
xchg
add
push
bound
inc
mov
xor
fldcw
push
js
add
cld
je
cmc
out
cld
cmp
iret
leave
lea
bound
ret
icebp
mov
subl
sub
cmpsb
cmp
movsb
in
arpl
cmpsb
mov
das
jo
ljmp
mov
shlb
jle
sti
xchg
orb
pop
fwait
inc
lret
push
dec
repz
add
xor
mov
xlat
xchg
icebp
aam
jbe
sbb
xchg
es
movsb
jbe
push
pop
pop
jb
jle
pop
outsb
loope
test
nop
jo
jge
or
in
pusha
adc
loop
or
push
xchg
dec
pop
cltd
xchg
xchg
pop
hlt
mov
loope
mov
pop
xor
out
mov
data16
adc
je
inc
add
aas
fstps
pop
jg
stc
or
out
shr
push
rolb
aam
fs
bound
xlat
aad
pop
outsb
fistpl
shl
mov
dec
shlb
sbb
and
std
mov
inc
and
adc
mov
and
xor
push
pop
lcall
mov
xchg
jo
mov
je
inc
xchg
fbstp
lods
xor
iret
mov
gs
lds
or
inc
loope
xor
test
xchg
push
push
cmp
test
and
push
gs
push
sbb
cmpsb
repz
mov
mov
and
sub
fwait
jne
mov
ljmp
cmp
xor
jbe
lahf
adc
pop
pop
lock
fs
sti
ds
loope
ficomps
adc
mov
pop
mov
rorl
dec
inc
les
aam
cmpsb
push
xor
stos
adc
mov
xor
stos
int3
nop
scas
js
pop
jle
es
adc
cmp
xchg
push
mov
imul
movsb
daa
mov
loop
fnstenv
add
inc
xchg
out
outsb
mov
arpl
sarb
std
jmp
push
inc
sbb
in
jnp
ss
xchg
jae
cmp
pop
loope
pop
add
jns
pop
popf
cmp
pop
xor
cmp
sarl
movsl
jo
sbb
scas
push
mov
mov
jo
mov
jne
push
jle
and
and
sbb
mov
mov
sbb
dec
add
push
xchg
rol
dec
loope
lahf
shrb
ja
mov
fimull
adc
sub
jns
add
mov
imul
test
hlt
pop
sbb
sub
mov
in
mov
and
jns
jl
push
jno
ljmp
imul
jne
js
scas
mov
sbb
xchg
in
sub
into
popf
sbb
push
insl
mov
mov
sub
pop
jge
stc
int3
or
or
sbb
sub
jne
icebp
xchg
insb
fs
lds
xchg
mov
jbe
mov
inc
pop
bound
mov
xchg
paddb
imul
jg
and
sarb
jp
sbb
push
fwait
leave
fsubr
outsl
fwait
push
pop
adc
pop
cmp
cli
mov
pushf
ljmp
inc
ds
ljmp
test
int
loopne
lret
movsl
inc
sub
mov
sub
sub
add
ljmp
ljmp
scas
in
xor
mov
je
mov
cmpsl
stos
xor
fwait
stc
pop
sub
xchg
in
xchg
xor
jb
std
loopne
imul
jge
adc
cmpsl
cltd
in
pop
cmp
into
mov
cs
dec
mov
push
iret
pop
adc
fwait
mov
mov
sub
push
cmp
or
std
popa
and
mov
hlt
sbb
pop
leave
stos
popa
add
adc
fdivl
jne
jl
cld
jb
mov
fdivs
ror
mov
jecxz
adc
sub
outsb
movsb
sbb
adc
add
rcrl
push
in
dec
push
push
cmpsb
jge
in
out
xor
nop
popa
xchg
icebp
lret
das
jbe
loopne
imul
xor
mov
sbb
orb
push
push
arpl
adc
leave
js
pop
sub
push
stc
das
enter
inc
dec
mov
add
sarl
in
daa
mov
push
or
mov
inc
popa
xchg
add
test
cmp
adc
rcll
or
call
cmpl
pop
jmp
mov
jo
mov
pop
jnp
leave
cli
push
jbe
xchg
dec
mov
mov
or
cli
cmc
out
je
cltd
cmp
ja
cli
aas
cmp
fidivs
iret
sub
adc
imul
out
ret
xor
cmp
outsb
lcall
lods
inc
jo
pop
cmp
in
cwtl
push
cltd
sti
mov
mov
pop
je
lock
lahf
jbe
sbb
adc
add
nop
xor
pusha
jae
and
ret
loop
mov
insb
inc
repz
fwait
mov
negl
jne
enter
pop
cmp
sbb
pop
outsb
sbb
scas
in
nop
shrb
lret
adc
jne
push
push
imul
pop
mov
pop
sbb
repz
bndldx
pop
xchg
dec
push
int
pop
sub
push
pop
pop
mov
imul
int3
ret
test
loope
out
les
mov
jmp
adc
pop
sub
dec
in
sub
ja
pop
fstps
fisubrs
lahf
ja
xor
sbb
scas
cmp
daa
mov
or
adc
scas
sub
push
fimull
dec
sub
push
test
data16
sbb
shr
cmp
sub
mov
push
push
inc
test
out
xor
pushl
inc
stc
add
add
xor
inc
repz
out
sub
dec
push
hlt
pop
clc
lock
rcrl
not
cltd
notl
loop
mov
xor
sbb
sub
jnp
inc
and
test
mov
pop
scas
jnp
cmpsb
sub
push
dec
daa
xchg
push
dec
in
setns
out
mov
mov
nop
in
pop
sbb
sbbl
aaa
enter
inc
fstps
ret
jne
sbb
xchg
jne
lea
idiv
add
into
xor
jo
add
loop
je
adc
push
loopne
leave
jnp
dec
fwait
adcl
inc
stc
lods
mov
push
inc
nop
sarl
pusha
pmullw
call
xchg
xchg
mov
adc
cmp
or
arpl
sbb
push
sbbb
fmul
jno
mov
insb
adcb
mov
in
arpl
jg
ja
xor
push
in
mov
aad
push
pop
mov
nop
xchg
xchg
hlt
sbb
mov
aaa
add
mov
mov
sub
loope
jecxz
lahf
out
pop
push
xchg
adc
adc
pop
loope
incl
jle
sar
ss
enter
sar
outsl
dec
dec
and
int3
adc
int
push
mov
mov
outsb
jecxz
xchg
dec
pop
es
in
pop
scas
mull
xchg
xorl
icebp
ja
ljmp
jge
adc
in
fmull
in
push
ret
in
test
dec
jns
mov
push
test
xchg
jge
adc
mov
pop
push
cmp
mov
into
mov
leave
movsb
adc
test
cmp
and
out
lret
mov
mov
pop
adc
mov
xor
adc
mov
daa
jmp
add
xchg
inc
cmp
inc
out
and
or
flds
loop
dec
aas
dec
inc
std
mov
out
stc
mov
rolb
mov
insb
aad
cmc
push
cs
test
adc
add
mov
jl
and
fwait
int
mov
xor
ret
cli
shll
pop
js
mov
dec
lret
add
icebp
pop
pusha
push
imul
mov
das
pop
enter
ffreep
cli
mov
ror
pop
jbe
mov
aaa
rcrl
fildll
out
loop
rorb
jl
enter
mov
fisttpl
shlb
mov
fsubr
rcr
xchg
notb
and
shlb
push
into
sub
push
jp
inc
cmp
mov
cmpsb
roll
and
icebp
xor
and
and
dec
in
jecxz
add
sbb
push
adc
jbe
push
adc
push
je
js
popf
loope
lods
pop
jb
mov
cmpsl
insl
jmp
push
out
cmp
ds
in
jg
lret
lea
dec
pop
jo
lods
push
pushf
loop
jne
pop
push
dec
test
divl
movsl
mov
int
adc
into
arpl
div
pop
dec
push
shr
pop
fisttps
push
jg
mov
daa
btrl
xchg
ret
ficompl
lahf
push
lock
inc
in
adc
push
mov
test
or
aam
cmp
mov
mov
dec
xor
dec
mov
out
sbb
cmp
in
lock
cmp
mov
jo
push
mov
divl
mov
pop
cltd
xlat
in
daa
fstps
and
cmc
push
popa
xor
cli
movsl
fs
notl
mov
lds
dec
and
jp
test
mov
repz
loop
cli
popa
lcall
adc
sub
and
xor
adc
cmpsl
scas
jg
adc
lcall
mov
inc
je
out
aas
jg
jecxz
xchg
xchg
das
addb
jo
pusha
pop
jl
push
in
cli
loopne
repnz
xchg
and
push
cltd
addr16
jb
xor
fdivrs
cmpsb
dec
nop
lea
fmull
stc
mov
mov
mov
pop
icebp
insb
lods
movsl
aaa
push
cld
int3
inc
mov
aam
shll
mov
cmp
shr
fucomip
mov
jl
pop
and
int
std
psubsw
iret
or
cmp
add
push
xchg
xchg
add
int
pop
or
dec
repnz
cmp
fs
gs
dec
in
outsb
and
sahf
popf
cld
push
ds
mov
mov
cmp
shlb
pop
push
fsubs
test
cmp
daa
cwtl
aad
and
lea
shlb
and
pusha
or
xchg
shr
xor
in
cmpsl
es
push
jbe
xchg
scas
xchg
mov
pop
data16
xor
cwtl
das
lock
cmpsl
jle
mov
outsl
sbb
mov
xor
std
mov
inc
movsl
or
das
cmpl
sub
mov
push
xor
fs
push
lcall
jno
test
sbb
jnp
jle
xlat
lods
adc
imul
inc
mov
pop
inc
mov
xor
popa
sbb
jle
push
mov
dec
push
js
xchg
add
mov
mov
out
mov
and
fstpt
jle
mov
cltd
test
sahf
mov
outsb
jl
sbb
stc
sti
insb
push
sti
mov
xchg
mov
add
mov
xchg
add
xchg
rcrb
sbb
mov
jbe
std
icebp
dec
daa
fisttpl
pop
xor
subl
leave
loop
pop
in
sub
xchg
jno
jne
orb
jmp
inc
cmpsl
jg
jp
push
or
test
mov
out
jo
jp
jg
cmp
sbb
pop
mov
mov
mov
xchg
or
or
mov
mull
das
enter
jmp
jae
int
jecxz
adc
xor
arpl
mov
lret
ljmp
or
pop
ss
jnp
popf
or
xchg
repnz
jmp
push
dec
sbb
pop
xor
shll
imul
loop
out
jne
sub
mov
inc
cs
mov
lea
jae
xor
mov
add
xor
mov
and
data16
iret
pop
mov
in
out
pop
popa
cwtl
das
jmp
sahf
push
pop
xchg
pop
cld
and
shr
scas
les
fmuls
mov
pushf
xor
gs
add
push
stos
loop
jecxz
lea
inc
mov
lea
push
or
test
stos
test
cmc
aad
fcomps
lret
inc
imul
ss
ja
nop
or
xor
mov
and
add
mov
xlat
test
xor
adc
xchg
and
add
push
das
leave
fistl
add
push
ficoms
pop
sahf
push
imul
scas
xchg
push
sbb
imul
test
sub
xor
call
std
je
enter
mov
lret
pop
push
inc
aaa
daa
lock
push
sar
mov
sahf
mov
insb
fstpt
shlb
push
xor
mov
fs
fmuls
pop
ss
push
cld
sbb
xchg
das
inc
test
dec
repz
push
jl
xchg
in
pushf
xor
sbb
push
push
je
ja
mov
repnz
lahf
cmp
clc
nop
hlt
sbb
push
ds
daa
mov
adc
mov
pop
jo
movsl
push
rolb
xor
mov
push
sub
pop
xor
ljmp
in
jb
jae
fsubr
mov
xor
leave
or
div
stos
push
inc
outsb
cmpsl
push
jbe
mov
cmc
mov
jle
push
outsb
mov
dec
mov
inc
adc
fcomp
sarl
out
sub
rol
out
mov
mov
mov
cmp
push
or
xor
or
mov
xor
jnp
arpl
js
dec
adc
pop
and
push
push
into
inc
jmp
pop
fcomp
rcrb
xchg
sub
pop
in
jbe
negb
mov
lock
xchg
xchg
or
mov
popa
cli
je
test
xchg
fidivrs
movsl
cmp
push
out
add
inc
push
lcall
bound
xchg
xchg
lods
pop
je
mov
adc
xchg
stos
mov
nop
push
inc
test
push
adc
ss
jb
adc
loope
mov
mov
sbb
cmpsl
jne
mov
lods
add
pushf
xlat
jno
cmpsl
aaa
pop
sbb
das
and
out
push
push
int
sub
fwait
cld
sub
sub
js
mov
xor
mov
lret
stos
fidivl
mov
lcall
add
pop
shr
ja
or
or
out
and
mov
add
xor
subb
push
fwait
mov
jg
or
cmp
push
stc
bound
inc
cli
mov
sub
add
mov
push
add
icebp
call
jb
lret
test
rclb
movsb
add
add
filds
out
insb
insb
std
and
das
add
aas
dec
ss
inc
cltd
dec
and
lahf
cmc
imul
or
mov
and
sub
sbb
adc
adc
daa
mov
fcmovbe
shlb
jecxz
lods
mov
add
push
pop
pop
lock
ret
insl
movsl
pusha
loope
leave
int
lock
arpl
push
jg
out
hlt
pop
stc
lcall
pop
sarl
cmp
mov
inc
sar
out
inc
call
add
sbb
add
rolb
lds
inc
mov
mov
xor
lods
loope
repz
jp
inc
sarb
fcompl
aad
loope
mov
fwait
mov
jo
inc
jle
mov
mov
push
sbbl
pop
xlat
or
sub
dec
pop
adc
lea
mov
or
jle
lret
insb
sbb
push
repnz
sarl
sub
pop
cmp
mov
cli
or
pop
jne
jecxz
sub
repnz
mov
dec
push
sub
pop
fistpll
jo
or
and
jnp
pop
movq
popa
jb
mov
xor
cmpsl
mov
mov
cwtl
loope
ja
cmpsl
adc
adc
xchg
xor
or
lods
rorl
dec
ret
int3
imul
push
lcall
popf
cmpsl
push
push
pop
push
ljmp
fistpl
jbe
jge
loopne
mov
or
add
int3
or
sarl
add
imul
call
gs
into
ja
fwait
pop
insb
sbb
pop
xchg
mov
jmp
ret
fcoms
lock
sar
pop
pop
in
jnp
push
adc
push
mov
dec
xlat
add
sti
pop
cmpsb
sbb
add
sahf
mov
shll
cld
fimull
sub
loopne
into
and
rcrl
out
push
aam
rorl
scas
mov
jno
sbb
jb
pusha
mov
jnp
cld
ja
push
jnp
mov
sti
cmc
ret
insl
and
sahf
cmp
cmpl
sbb
sub
lahf
mov
repz
in
test
push
push
jo
push
jae
scas
sarb
js
sub
ret
push
cmpl
push
loope
lret
ret
push
jge
test
outsb
jmp
xchg
lea
std
push
xchg
das
add
fld
test
mov
leave
ret
or
mov
xchg
add
pop
stos
push
es
dec
sub
aaa
fists
test
or
aas
pushf
push
add
je
pop
in
pop
leave
jmp
ret
pop
imul
dec
jmp
and
mov
ss
enter
inc
mov
inc
dec
int3
pop
sahf
mov
loopne
xlat
push
hlt
sahf
aaa
test
sbb
insl
lahf
add
loop
xlat
mov
xchg
into
lret
dec
pop
and
lock
lock
pop
daa
or
push
xorb
sub
in
jbe
das
jmp
inc
lret
mov
imul
rolb
pop
je
xor
add
sub
push
mov
test
imul
push
das
jl
push
jb
gs
sbb
jp
or
cmp
push
mov
mov
js
mov
ljmp
pop
jge,pt
ret
or
push
push
push
adc
call
sbb
subb
scas
jecxz
mov
cmp
pop
orl
pop
sub
inc
adc
push
dec
mov
scas
mov
cmp
shlb
jge
les
jge
test
jne
and
or
pop
testl
loopne
xchg
and
out
fmull
xchg
jbe
cmp
pop
int
pop
fsub
incl
pop
adc
and
nop
inc
ret
sub
push
xor
ja
push
pop
iret
push
push
rolb
sbb
fidivrl
add
cld
shl
loop
push
pop
add
fiaddl
xor
add
push
sbb
movsb
dec
and
mov
shll
cmpxchg
sub
cwtl
sub
mov
add
push
mov
sbb
jns,pt
ret
stc
sub
push
jne
jp
daa
cltd
test
rclb
pop
out
jp
adc
mov
cmc
in
mov
int
and
out
push
xchg
add
inc
cmp
test
push
push
repnz
push
fnsave
out
inc
push
int3
inc
inc
push
xor
out
lcall
insb
fwait
pushf
pusha
aaa
scas
in
push
xchg
sub
xchg
insl
cmpsb
call
jp
dec
sbb
repnz
mov
inc
jge
fstpl
xor
jae
aam
inc
push
pusha
sbb
mov
sbb
pop
out
mov
inc
add
xchg
insl
rcll
rcrb
xorb
mov
adcl
int
aas
test
loop
mov
push
cmp
arpl
adc
inc
inc
cmp
rcrl
ret
pop
fisubrs
lcall
shlb
push
fdivp
jge
arpl
mov
pop
pop
rcrl
mov
popf
les
xor
pop
mov
imull
jno
fiadds
mov
shlb
lods
dec
xchg
loopne
mov
jl
aaa
add
test
std
outsb
punpckhdq
add
cmp
mov
cmpsl
fnstsw
hlt
test
mov
daa
sarl
sub
or
je
repz
fdivr
hlt
clc
sub
and
lret
nop
fucomi
xor
ret
out
stc
fdivr
mov
dec
vpsrad
sbbb
sbb
lahf
pop
mov
int3
push
mov
xor
dec
jnp
jmp
pop
aam
or
cmp
sbb
jle
fiaddl
sub
mov
out
cmpsb
mov
daa
aad
in
dec
jae
cmp
test
lea
mov
add
jecxz
add
mov
xchg
and
jbe
lea
fs
add
incl
xchg
lea
mov
pop
inc
add
lea
lock
mov
popf
jae
mov
test
nop
fdivl
push
jmp
subl
inc
aad
push
push
or
outsb
sub
cwtl
fcompp
aad
push
clc
sti
sbb
and
cmpsl
cmp
adc
cmpsl
inc
adc
and
ljmp
jmp
call
cmp
push
xor
inc
jmp
rcrl
aas
scas
shrl
stos
push
pop
fxch
xchg
sbb
mov
sub
pop
sahf
mov
xor
repz
scas
push
clc
dec
subb
inc
xchg
pop
xor
mov
sbb
pop
lcall
mov
and
out
lds
or
dec
mov
movb
sub
fucomp
pushf
jmp
rcrb
push
jae
mov
mov
insb
pusha
scas
mov
insl
mov
mov
xchg
dec
pop
int3
xchg
pop
dec
xor
ret
inc
stos
xor
sub
push
xor
sbb
jno
push
lock
pusha
popa
shrl
mov
es
lock
icebp
fbld
nop
js
adc
pop
inc
add
inc
push
inc
mov
aad
in
sbb
cmp
mov
lahf
adc
and
push
xchg
cmpsl
mov
lods
jne
sarl
sub
out
insl
jecxz
jecxz
xlat
sbb
enter
idivb
jecxz
jns
adc
sub
hlt
xchg
mov
cmp
mov
jge
js
hlt
aam
jle
sahf
insb
adc
into
cmp
adc
jecxz
jbe
or
jne
addl
cmpsl
xor
push
adc
out
mov
je
pop
ljmp
test
insl
or
adc
xor
ja
xlat
repz
aad
inc
add
sub
mov
pop
push
es
out
xor
imul
mov
cmp
int3
bound
sub
inc
cmpsb
sahf
aad
mov
jmp
jb
push
jo
xchg
cmp
ds
iret
add
sbb
or
popf
mov
outsb
sub
mov
test
add
inc
movsl
adc
adc
lret
pop
inc
mov
in
lock
repz
sub
cwtl
ljmp
mov
mov
sbb
push
mov
jbe
cli
xchg
rclb
lahf
xchg
rol
stc
or
cmpsb
mov
mov
or
add
sti
out
ret
decb
mov
dec
cmp
out
mov
enter
sarl
mov
dec
in
leave
in
in
xlat
pushf
xchg
test
inc
pop
inc
or
repnz
push
or
fidivrl
dec
xchg
fsts
push
mov
test
sub
pop
andb
and
and
les
jae
lods
stos
stc
rcrl
inc
ja
and
dec
jne
fwait
imul
cmp
dec
adc
mov
add
push
stos
pusha
add
jno
sbb
aas
stos
sbb
scas
add
inc
add
ror
ja
add
jecxz
out
aaa
movsl
mov
ret
loopne
sbb
jmp
loop
xlat
push
mov
out
mov
data16
push
call
rol
xchg
int3
repz
movsb
push
mov
sub
loope
mov
ljmp
push
mov
push
and
mov
lods
mov
loope
mov
cmpsb
jo
push
xchg
int3
fstps
jbe
insb
clc
dec
xchg
out
jl
mov
je
lahf
xchg
stos
outsb
lret
sbbl
js
or
inc
jo
rol
xchg
push
aam
mov
icebp
in
scas
add
jl
cmc
fs
test
cmp
cmp
fistpll
lock
push
sar
xor
inc
scas
hlt
cmp
pop
test
out
and
jmp
andb
arpl
dec
js
call
lea
in
pop
cld
aaa
xor
pop
ret
add
adcb
mov
loope
icebp
cwtl
mov
xorb
push
in
xchg
hlt
mov
mov
lock
jbe
pushw
cmp
and
jb
inc
inc
lods
je
enter
arpl
sahf
push
out
adc
push
dec
adcl
add
mov
pusha
arpl
adc
or
sbb
adc
mov
push
cmp
insb
push
mov
or
and
mov
add
ja
mov
sub
push
test
sbb
jl
or
nop
into
repnz
xor
cmp
inc
sbb
inc
adc
lods
cmp
pop
shlb
jle
sub
and
mov
rcrb
sub
imul
jl
out
xor
inc
clc
mov
add
xor
dec
pop
sbb
mov
sbb
iret
or
imul
push
sub
lahf
mov
mov
lock
loop
dec
movsb
mov
aad
or
jp
dec
rol
arpl
mov
jnp
add
mov
subl
les
shlb
daa
cmpsl
fsubrl
mov
mov
ret
lods
imul
jne
adc
xchg
xchg
and
xor
ret
xchg
mov
add
sbb
and
divl
adc
mov
mov
sub
jecxz
orl
outsb
or
into
clc
insb
stos
mov
inc
daa
iret
daa
inc
lods
adc
dec
cmp
movsl
movsb
fidivs
add
shll
inc
movsb
mov
iret
adcb
pop
int
rorl
xchg
loopne
cmp
and
into
imul
and
cli
movsb
add
sbb
sbb
popf
pop
jp
lret
test
pushf
jmp
ds
or
fnsave
jo
leave
je
cwtl
gs
sbb
rcll
push
pop
mov
inc
into
inc
test
mov
addr16
imul
adc
xchg
leave
pop
push
jp
dec
push
test
out
mov
loopne
xchg
addb
fisttpll
sahf
loope
test
mov
pop
loop
inc
xchg
mov
lahf
fmull
insl
inc
or
aaa
push
call
repz
fsubp
cmc
jae
cld
clc
in
and
add
arpl
jno
pop
or
xor
add
sub
push
imul
add
pop
sbb
xor
sbb
cmp
sbb
dec
aad
cmp
out
add
push
sub
leave
jp
cmp
pop
xchg
mov
jmp
fstl
add
inc
popa
test
daa
xor
sti
js
andl
clc
adc
jno
loopne
in
cmp
test
ds
cli
xor
inc
mov
fidivl
popa
push
or
pop
lea
cmp
xor
push
push
loope
scas
cmp
xor
xchg
sti
xchg
xchg
test
jle
pusha
mov
push
dec
fistpl
addr16
or
push
dec
scas
jnp
ljmp
inc
das
or
mov
xor
aam
test
jle
adc
and
imul
mov
das
and
or
cmp
push
push
cmc
mov
inc
or
xorb
icebp
in
or
out
pop
mov
into
push
push
sub
dec
cmp
xchg
mov
sbb
cmp
out
subl
mov
sub
mov
gs
mov
mov
push
ret
pop
xor
movsb
adc
cmp
icebp
sti
xor
add
xor
or
out
cwtl
inc
mov
out
add
lcall
rolb
cld
inc
pop
add
cmp
mov
xchg
mov
cmp
dec
sub
aad
mov
jnp
cmpsl
mov
lcall
cltd
scas
mov
cmp
xchg
loope
inc
inc
test
dec
xchg
xor
pushf
adc
inc
ror
lods
stos
pushf
movsl
push
xchg
push
push
aaa
mov
sbbb
outsb
sub
test
loop
dec
mov
lock
add
in
and
sub
stos
sbb
pusha
and
push
std
pop
jne
rcrl
shrl
sub
adc
adc
and
mov
lods
sbb
ds
lret
call
fdiv
dec
scas
pop
inc
jle
cmp
ds
popf
push
add
adc
and
scas
cmpsb
adc
dec
sub
std
xchg
xchg
inc
scas
enter
mov
scas
xor
push
movsl
andl
clc
xor
inc
xchg
push
outsl
jle
fsubrl
cli
movb
cmp
clc
test
jns
jno
add
aas
or
jno
std
stos
inc
sub
aas
aaa
popa
sub
mov
fmull
daa
and
arpl
pop
and
add
sbb
xor
rcrb
aad
and
notl
add
xchg
cmp
inc
jnp
jo
mov
mov
mov
push
lods
iret
inc
adc
push
push
test
xor
sbb
xor
add
push
jge
jmp
daa
xchg
and
pop
inc
adc
or
stc
outsl
xchg
adc
lods
aas
inc
mov
movsl
aad
aam
bound
into
xor
bound
lcall
mov
outsb
xchg
mov
pop
jp
out
dec
test
arpl
aas
enter
push
jmp
loopne
repz
mov
sub
mov
cmp
das
dec
subb
outsb
stos
dec
sbb
inc
daa
cltd
lods
and
cmc
mov
xchg
fldl
rorb
or
fstpt
out
sbb
jecxz
gs
insl
sarl
out
aam
xor
ss
sbb
je
in
add
in
dec
mov
test
add
lahf
and
sub
mov
fildll
sahf
pop
call
dec
fimuls
sbb
lds
mov
lods
rcll
cmp
or
push
adc
xchg
imul
fucomip
pop
jns
aas
mov
pop
rol
adcb
sbb
iret
add
dec
mov
mov
push
mov
out
add
cmc
imul
mov
pop
cmp
repnz
bound
cwtl
divb
inc
xlat
pop
stos
cwtl
repnz
xchg
mov
in
xchg
jo
mov
xchg
xchg
add
in
push
inc
stos
adc
jge
pop
mov
pop
orl
lcall
and
xchg
mov
mov
daa
inc
fsubp
mul
loop
jbe
std
clc
xchg
daa
jl
pop
inc
xchg
aaa
inc
test
aaa
pop
inc
loopne
or
sub
loope
inc
idiv
lods
adc
and
les
push
js
ljmpw
push
fistpll
push
into
add
sub
je
jge
fimull
scas
inc
or
dec
mov
sub
fisttpl
mov
cs
jae
xchg
jbe
xchg
sub
cli
fiaddl
sbb
mov
pop
imul
lock
mov
dec
stos
int3
lret
rcll
cmp
mov
pop
mov
inc
addr16
shlb
pusha
sub
icebp
insb
ds
cli
stos
cmc
ja
mov
vcvttsd2si
push
movsb
enter
movsl
test
or
xor
add
negb
sbb
and
and
adc
shrb
out
out
or
rcr
adc
movsb
sub
add
sbb
call
jecxz
push
fsubl
push
xchg
rep
lods
inc
lcall
adc
out
xor
mov
imull
enter
xor
shl
pushf
and
sar
fnstsw
cmc
xchg
mov
mov
dec
mov
dec
jo
sub
jge
xor
cmp
hlt
fisttpl
shll
xchg
int3
xor
flds
jmp
loope
cs
hlt
jge
gs
out
cli
repz
sub
mov
or
jp
adc
push
enter
enter
lods
jo
xor
add
mov
jae
iret
jp
fmuls
sbb
insl
xchg
rorl
pop
sbb
in
lods
and
dec
sub
jbe
imul
inc
dec
fldcw
push
pop
mov
cld
cmp
aam
add
cmp
hlt
and
and
lea
xchg
mov
adc
xchg
test
es
imul
lret
push
das
dec
cltd
imul
xor
into
iret
and
hlt
mov
push
bnd
repnz
sub
test
aaa
pop
push
adc
fnstsw
cmp
mov
out
leave
sbb
orb
or
arpl
fistpll
aad
mov
adc
push
orb
and
or
and
jp
cmpsl
mov
pop
mov
lds
ficompl
pop
cmpsb
push
push
xchg
nop
inc
xchg
addb
push
push
sti
inc
sub
inc
ret
or
sub
or
jno
xor
sub
push
aam
xor
pop
in
stos
call
xchg
xchg
sar
push
adc
lea
arpl
sbb
fcomp
and
lock
mov
dec
cmp
dec
lods
into
sbb
ja
jnp
mov
repz
lcall
pop
mov
adc
pop
stos
fld
cmpsl
push
cmp
xlat
addl
mov
into
pop
sbb
jbe
push
push
outsb
nop
fdivl
inc
push
in
sbb
stos
xchg
xchg
int
adc
ja
sbb
jp
fwait
aad
test
ret
rcll
in
loope
mov
and
mov
icebp
fsts
dec
pop
out
iret
mov
dec
mov
lea
lods
cmp
mov
and
test
push
push
xchg
push
ljmpw
jne
loop
scas
loopne
adc
cmp
pop
push
pop
push
cmc
push
xor
push
sub
imul
push
popa
pop
push
xchg
shr
and
jno
in
push
stc
shll
aam
lock
lea
stos
cwtl
lret
add
out
imul
shl
mov
mov
addr16
pop
jecxz
movsl
dec
repz
sub
sbb
push
cmc
add
rclw
in
imul
xchg
xor
mov
xchg
and
adc
jne
mov
nop
bound
push
nop
divb
arpl
and
jg
mov
pop
popf
mov
cmc
andl
xcrypt-ofb
cmpsl
ljmp
jecxz
mov
cmp
and
inc
and
xor
cs
fwait
mov
mov
sub
xchg
sahf
mov
ja
jnp
adc
dec
mov
les
push
fcmovnb
cmc
push
jb
pop
enter
iret
mov
pusha
xor
fwait
clc
pop
arpl
pop
popf
sub
sbbb
imul
cmp
fdivrs
fidivrs
pop
mov
pop
mov
ret
int
std
out
shrl
xchg
sahf
popf
out
mov
and
stc
adc
mov
or
hlt
ds
xchg
ret
xor
loopne
pop
into
imul
sbb
mov
jno
or
mov
fistpl
mov
pusha
fbstp
or
ja
push
mov
or
xor
xchg
dec
mov
mov
adc
fnstsw
out
ja
cmp
cli
xchg
movsl
jge
xchg
out
pop
jae
pop
ljmp
mov
xchg
sti
lods
jne
and
push
and
out
lods
andb
in
jp
daa
adc
dec
sbb
pop
or
ja
pop
dec
and
pushf
ror
push
inc
fwait
outsb
stc
imul
lret
pop
testl
push
dec
lods
cmp
add
out
xrelease
test
pop
mov
jge
jns
or
push
pop
pop
addr16
jmp
mov
cmp
dec
enter
jns
push
mov
movsb
inc
idivb
xchg
sti
mov
lcall
inc
test
test
push
mov
jl
imul
xchg
mov
aaa
out
mov
mov
jnp
dec
loopne
lock
pop
movsb
outsl
clc
cwtl
add
fcmovbe
int
popf
mov
xor
gs
mov
leave
pop
lods
jns
outsl
push
ror
movsl
lock
cmp
push
leave
xchg
pop
dec
adc
jae
xor
add
pop
xchg
or
pop
push
push
in
pushf
lds
mov
mov
or
les
jle
cmp
insb
incb
gs
xor
clc
mov
insb
xor
fadd
xor
shr
pop
sub
in
subb
loopne
push
lods
pop
jge
sarb
aas
fwait
add
push
mov
xchg
adc
loope
bnd
stc
push
xor
sbb
sbbb
mov
sahf
fcoms
cs
xchg
stc
bound
xchg
outsl
daa
pop
sub
setns
inc
xor
jne
shll
ss
out
imul
fcomps
lock
cmp
sub
cmc
xchg
add
add
dec
and
jmp
sbb
mov
sub
scas
js
xor
dec
mov
adcb
imulb
ja
xchg
stos
std
adc
nop
xchg
js
mov
stos
push
xor
lret
xchg
scas
add
xchg
inc
xchg
test
arpl
lcall
dec
enter
fnstsw
clc
xor
xor
xor
mov
mov
push
xchg
cmpsb
enter
xor
roll
lock
cs
testl
repnz
xchg
in
pop
add
movsl
dec
mov
fsubs
adc
cmp
push
roll
into
iret
inc
int
add
cmp
sub
movsl
in
push
mov
outsl
and
jge,pt
nopl
jmp
daa
movsb
cmp
ret
inc
xor
sub
sbb
inc
xor
sub
mov
add
nop
repnz
mov
scas
movsl
sahf
mov
pushf
and
sbbl
rcll
out
or
or
out
dec
pop
out
add
pusha
and
rolb
pop
dec
inc
add
rolb
jo
or
pop
mov
push
repz
xchg
mov
pop
daa
dec
lock
in
pushf
hlt
icebp
out
outsl
mov
aas
hlt
pop
call
xchg
inc
jnp
ss
pop
and
xor
imul
push
cmp
lods
push
dec
add
xlat
sub
out
shlb
int
jg,pn
mov
push
mov
mov
nop
xor
sub
popa
inc
and
push
xchg
insl
dec
xchg
out
push
in
mov
jbe
arpl
lcall
inc
das
adcl
sub
inc
xor
push
insl
arpl
add
sbb
imulb
mov
mov
or
into
mov
pop
icebp
sub
loop
jnp
mov
mov
mov
lcall
cmp
jmp
inc
inc
outsl
cltd
sub
gs
xchg
mov
sub
mov
xchg
dec
dec
outsl
ljmp
and
outsb
pop
cmpsb
jb
mov
loopne
nop
push
sub
add
xchg
cld
add
out
pop
and
push
pop
test
or
sbb
push
jmp
jg
arpl
xchg
xor
rcr
sbb
iret
pop
int
adc
and
nop
out
xchg
push
add
sbb
loopne
cmpsl
pop
adc
push
test
jmp
test
dec
inc
xor
and
out
stos
cltd
mov
and
fbstp
jno
mov
sbb
inc
shrl
sbb
lret
fwait
xor
cmc
imull
nop
je
int3
mov
fwait
jno
out
rcll
movsl
stc
mov
xlat
mov
cli
xlat
xorl
and
outsb
in
imul
or
lcall
js
jno
in
imul
dec
mov
adc
ficoml
daa
out
test
fwait
sbb
icebp
data16
iret
ljmp
mov
out
cs
nop
bound
mov
nop
mov
sbb
fiaddl
xor
add
push
sbb
jae
rcrl
shll
data16
nop
mov
push
lock
mov
lret
mov
clc
push
mov
sbb
jp
in
roll
adc
imul
std
inc
cmp
inc
mov
cltd
xchg
and
pop
jl
jnp
test
adc
pop
xchg
mov
sub
mov
pop
cltd
jne
push
push
jle
icebp
mov
fadd
pop
pushf
mov
pop
push
fisttpll
sub
mov
pop
movsl
add
dec
mov
lahf
fistl
xor
jmp
scas
pop
pop
xchg
and
push
lods
pop
push
nop
push
pop
sbb
dec
lahf
add
hlt
cmp
jo
xor
scas
push
pop
mov
jnp
mov
subb
mov
xor
mov
and
cltd
mov
roll
lahf
lds
push
mov
and
mov
jae
pop
cmc
cmp
lock
jle
leave
and
jecxz
dec
lods
shrl
nop
test
es
repz
idivl
or
push
outsb
push
es
imul
mov
push
mov
xlat
cmp
inc
mov
mov
rorb
in
lret
lds
insb
dec
mov
ret
push
sbb
inc
js
mov
pop
arpl
sbb
pop
sub
stos
call
cmp
icebp
ds
sub
xchg
and
movsl
shll
xchg
or
and
add
scas
sbb
clc
in
in
fcmovne
mov
ret
lret
ret
mov
shrb
lock
add
int
sbb
test
das
push
sub
nopl
add
movsl
insl
repnz
repz
in
push
movl
cmpsb
adc
dec
fiadds
insb
in
push
xchg
push
call
js
pop
add
lods
outsl
sub
popf
push
xchg
test
sbb
inc
lea
cwtl
add
jmp
lock
mov
pop
mov
daa
push
shr
add
addr16
jle
lahf
and
inc
xlat
std
in
insl
add
ja
jge
mov
nop
inc
sarl
or
pop
mov
int
inc
idivb
incb
outsl
add
fldt
fs
push
fstps
cmp
inc
jl
daa
xor
test
cmp
sub
cmc
add
and
std
jns
int
jb
sbbb
cs
into
add
test
push
add
lods
push
and
shlb
sbb
pop
pop
mov
frstor
ja
leave
fstl
and
out
pop
pop
fnsave
daa
mov
je
sub
ret
sub
aaa
mov
mov
sub
mov
dec
jb
stos
arpl
pop
stc
or
out
jo
es
push
xchg
jp
pusha
pop
arpl
sbb
push
mov
push
mov
push
cmp
movsb
dec
fisubs
mov
out
aas
inc
cmp
mov
shlb
mov
push
das
andb
jae
jle
inc
loope
mov
retw
lea
fcompl
gs
push
xchg
cwtl
xchg
andl
iret
xor
lds
inc
dec
je,pt
xor
fnsetpm(287
or
push
insl
jle
xchg
lret
xlat
in
out
pop
xor
stos
test
mov
mov
aaa
push
insl
mov
fwait
xchg
das
mov
lods
sub
fidivs
fdiv
jge
push
in
sbb
call
clc
imul
mov
out
sub
xchg
dec
mov
cmp
mov
lock
leave
test
add
out
movl
cli
fsubl
add
decb
mov
xor
jp
sub
inc
scas
cli
sbb
jno
in
dec
lcall
es
dec
lock
sub
lock
cs
push
cwtl
xchg
mov
adc
sahf
aas
movsb
cmp
mov
mov
cld
push
xchg
adc
and
jmp
pop
fwait
sti
cmc
sub
insl
jecxz
or
imul
xor
lods
cmpl
mov
jecxz
adc
add
ja
lahf
cmpsl
mov
sahf
jp
xor
xor
aam
push
pop
cmp
push
pop
and
aaa
adc
mov
inc
mov
out
or
jg
and
leave
outsb
dec
repz
clc
sbb
data16
lret
and
test
rclb
pop
adc
out
imul
lahf
adc
jp
das
fisttpl
cmpb
sahf
mov
rcl
mov
mov
pop
xor
sar
test
or
mov
dec
fistps
movsb
pop
cmp
cld
fistpll
in
lock
add
lahf
adc
or
mov
cmpsb
ret
mov
jp
ja
clc
dec
leave
adc
in
cld
sbb
popa
addr16
repz
pop
jne
mov
mov
andl
outsl
push
and
cmp
sar
xchg
iret
dec
bound
fadds
add
pop
gs
shrl
ret
aad
xor
inc
ret
jnp
jb
push
out
pop
dec
mov
dec
mov
lock
pop
dec
cmp
cmpsb
arpl
xor
mov
cltd
arpl
imul
sub
ret
and
aas
js
mov
sub
fimull
pop
mov
inc
shrb
xchg
cld
pop
jmp
and
xor
int
push
sub
lret
paddb
addr16
mov
push
ror
or
jmp
shrl
cmpsl
push
jge
and
scas
mov
test
pop
into
or
test
imul
jp
insl
add
add
aad
stos
push
cmpsl
pop
data16
sbb
int
mov
repnz
test
pusha
mulb
ds
dec
push
cmp
add
mov
frstor
insl
cs
cmpsl
mov
int3
dec
dec
into
aas
call
lret
das
cwtl
imul
out
jp
sbb
dec
pop
dec
push
cmp
iret
or
or
push
lahf
add
lods
out
sub
add
jg
lcall
test
mov
jge
pop
adc
imul
and
xchg
and
pop
repz
pop
jg
insl
cltd
lock
xor
andl
mov
shlb
or
adc
in
add
jae
lahf
int
fsubs
leave
jne
mov
jmp
pushf
mov
sti
bound
pushl
rcrb
loop
mov
push
inc
sub
push
dec
icebp
xchg
sub
lahf
xor
push
repz
popf
fdivrs
imull
and
inc
mov
pushf
mov
pop
es
les
pop
cmp
push
and
mov
stos
scas
or
int
jb
or
repnz
sbb
xchg
jp
ret
cmp
arpl
pusha
or
ror
push
xor
call
sub
dec
jle
xchg
mov
xlat
mov
dec
pushf
lods
mov
insb
xor
jae
jno
paddw
inc
ljmp
or
in
xor
or
jnp
sub
cmp
jecxz
pop
cmp
cmp
fidivs
test
test
xor
clc
push
jnp
mov
mov
outsl
adc
sti
in
cmp
xchg
mov
pop
gs
stc
andl
mov
movsl
into
negb
test
fst
pop
mov
add
jns
pop
adc
inc
stc
daa
std
inc
fdivs
cmp
inc
test
rcrb
out
je
or
mov
inc
jle
mov
call
adc
adc
jnp
sub
add
stc
or
cs
adc
ret
mov
aas
push
cmpsb
iret
adc
nop
jb
sbb
sti
cs
push
in
jbe
mov
cld
and
pop
mov
stc
jmp
clc
movsl
aam
mov
cmp
jno
std
pop
inc
cli
xor
iret
pop
addl
test
xlat
ss
add
shl
pop
pop
js
hlt
mov
sbb
pop
mov
and
lcall
push
cmpsl
data16
mov
enter
add
or
jl
sbb
mov
jbe
lahf
push
lods
cmpsl
pop
hlt
inc
mov
and
scas
dec
mov
adc
pop
cmp
and
and
call
jo
fnsave
or
pop
movsl
test
jge
imul
sub
fyl2xp1
andl
cmp
loopne
adc
xchg
and
lahf
add
xlat
adc
push
in
cmc
movsb
shll
add
aam
pushf
sub
cli
lret
or
adc
aaa
aas
ljmp
out
js
les
xchg
sbb
sub
jmp
or
lods
mov
cmp
dec
mov
mov
scas
cmp
lret
mov
push
xor
add
mov
nop
call
bound
leave
jge
std
jmp
mov
dec
xchg
rorl
sti
mov
push
lret
out
push
push
inc
sub
popf
fcompl
insb
jl
adc
fistpll
gs
aas
cmp
add
sbb
push
pop
cmpsb
mov
ret
mov
movsb
inc
push
sbb
mov
fsubl
ss
dec
das
cmpsl
call
js
dec
mov
add
mov
daa
inc
push
std
sbb
adc
sbb
stc
lret
es
sub
decl
xor
pushf
outsl
xor
pminsw
jb
ljmp
sbb
jmp
enter
stos
mov
pop
mov
push
inc
test
decl
push
pushw
inc
xorl
fistpll
les
inc
fs
mov
pop
sbb
push
push
enter
sbb
lret
daa
push
and
and
popa
push
xchg
dec
fldt
jp
cmpsb
in
cmp
adc
cmp
in
inc
xor
sub
push
fdivrl
hlt
pop
mov
adc
hlt
fcoms
into
mov
hlt
sub
mov
and
mull
test
icebp
addr16
mov
mov
jmp
jmp
call
push
fists
aad
jno
shr
jmp
addr16
jg
adc
adc
test
sbb
add
jae
xchg
loope
fisubrl
andl
xor
mov
cs
mov
push
div
sbb
lods
sbb
iret
adc
in
mov
push
pop
jbe
sahf
xchg
negb
jno
imul
jecxz
dec
into
push
movsb
adc
loope
push
push
sarl
rcr
cmpsl
leave
push
push
mov
pop
inc
in
in
ljmp
rdtsc
pushf
mov
cmpl
pop
in
addr16
pop
xor
pop
scas
push
pushf
inc
inc
aam
les
jo
sub
mov
sbb
ret
stos
mov
mov
xchg
aad
shlb
or
or
out
sub
push
fidivs
dec
adcl
mov
and
pop
hlt
out
std
xchg
push
cmpsw
push
aaa
rorb
nop
into
call
mov
mov
jo
mov
mov
jle
popl
outsl
popf
addr16
fisubl
mov
lret
ret
cmp
sub
cld
fldcw
popa
or
iret
arpl
sbb
bnd
fadds
cmp
push
xor
sub
push
dec
test
mov
xor
pop
xlat
inc
pop
sbb
sub
add
imul
sub
or
cmpsb
cmpsl
ja
fwait
out
add
js
sar
push
mov
jno
jno
cmp
lret
mov
movsl
sub
add
popl
jo
or
add
into
push
popf
or
ficompl
scas
in
sbb
xor
loop
sbbl
out
mov
icebp
jne
sub
std
ret
xor
xchg
cs
cld
cmpsb
enter
test
fsubrs
jnp
jge
adc
jmp
je
stos
loop
dec
xchg
mov
fcmovne
pop
pushf
inc
sahf
jge
push
xor
and
jp
pop
jns
mov
jmp
cld
or
int3
shlb
testb
lea
mov
pop
jne
outsb
fbstp
push
in
mov
ljmp
sbb
pop
push
push
cmp
roll
in
jno
mov
xor
repz
mov
ficompl
iret
push
cs
das
xchg
lea
test
lock
notb
add
push
adc
je
jbe
add
mov
lret
je
dec
xor
add
out
dec
xchg
pop
std
or
dec
xor
and
cmp
call
outsl
negb
add
sbb
aad
das
aas
inc
sub
out
cmp
fiadds
add
mov
push
xchg
mov
sar
inc
movsl
lret
cs
fiaddl
aaa
cmc
push
stc
jmp
outsl
mov
inc
jne
ret
int3
cmp
popa
mov
cli
inc
ss
xchg
fists
push
add
enter
jg
pop
pushf
pop
int
pop
mov
inc
rcrl
xor
in
test
push
jmp
jne
lds
cmpsl
dec
mov
mov
lods
divl
popa
mov
cmpsl
rcll
out
mov
pop
sbb
sub
add
rclb
repnz
cmp
stc
icebp
mov
adc
xchg
enter
and
pop
sbb
pop
or
lcall
out
call
jmp
aam
add
imulb
cmp
push
dec
push
xor
lock
xchg
xchg
xchg
shll
ljmp
dec
es
xchg
jge
mov
push
push
not
and
push
imul
cmpsl
mov
xor
sub
rcrl
stos
ret
cld
adc
push
call
pop
mov
dec
pop
mov
jo
fmull
mov
add
mov
enter
jg
jge
sbb
push
js
pop
outsl
imul
das
faddl
xchg
cmp
and
dec
cmpsb
mov
inc
inc
mov
push
out
xchg
pop
adc
mov
pushl
jno
fildl
mov
jo
bound
cmpb
push
repz
xchg
les
testb
clc
push
pop
sti
inc
scas
test
mov
imul
lds
lds
fbld
cltd
ljmp
dec
dec
lret
mov
int
mov
fwait
adc
add
jmp
xchg
add
mov
pop
data16
mov
pop
cld
sbb
cltd
dec
sbb
in
lret
push
pusha
sbb
ret
cmp
jmp
cmp
rcrl
add
mov
pop
icebp
mov
daa
sbb
movsl
bound
outsb
jecxz,pt
bsr
jmp
and
fisubs
icebp
pop
insl
mov
mov
mov
ss
and
adc
outsl
sub
lret
arpl
add
jbe
or
add
je
cwtl
fsubrl
push
stc
and
out
lahf
xor
jp
mov
and
xlat
xchg
sahf
and
fisubrs
push
jno
push
pop
cmpsl
into
pop
imul
data16
jo
lret
mov
test
or
push
test
jns
adc
jnp
dec
dec
into
push
rclb
insl
leave
jnp
push
pop
lds
addr16
dec
add
pop
daa
test
clc
les
int
xor
push
repnz
out
je
and
ss
cld
fxch
lret
lret
push
lahf
mov
jnp
js
push
shlb
out
xchg
mov
mov
maxps
or
and
ffreep
andb
sub
fnstsw
into
rcrb
mov
arpl
lods
pop
out
movsl
mov
test
repnz
jo
dec
inc
xor
mov
jb
mov
mov
push
and
outsl
sub
fldpi
sbb
lea
mov
mov
xchg
mov
out
xchg
fs
nop
movb
pop
mov
dec
adc
mov
roll
mov
repnz
mov
mov
test
and
mov
pop
insb
dec
xchg
inc
mov
repz
pop
mov
in
insl
adc
and
stos
pop
jp
iret
add
outsl
cld
adc
negb
add
lret
stos
jnp
ret
test
lods
xchg
adc
cmp
insb
data16
fwait
jo
test
ljmp
jns
jbe
repz
aaa
shl
mov
xor
popf
push
mov
in
add
inc
rorb
pop
push
xlat
jp
stos
mov
xchg
sbb
cmpb
push
mov
and
dec
ja
popf
decb
mov
fwait
push
mov
aas
xchg
mov
cld
sub
or
jb
and
lret
jg
mov
faddp
push
pop
imul
push
mov
sti
in
in
mov
aam
or
sbb
or
sub
jp
cs
jbe
xchg
jns
movsb
fcmovne
push
push
xor
add
stc
out
rdmsr
jo
mov
enter
or
sub
xor
mov
into
adc
out
dec
add
cmp
jl
lods
sarb
mov
jb
adc
cwtl
mov
movsb
test
xchg
sbb
lock
test
sub
sbb
hlt
xchg
pop
xor
cmp
mov
stos
sub
imul
andb
xor
lret
ficoms
adc
sub
sbb
pusha
push
aad
in
lock
repnz
int3
fldcw
add
or
lahf
sub
in
and
add
adc
je
cmp
imul
jmp
js
sti
xlat
outsb
pop
or
das
das
mov
pop
hlt
jo
or
xchg
jo
or
rolb
jne
or
andb
inc
subb
mov
or
add
shlb
loop
psubd
mov
nop
imul
dec
aam
sub
movsb
jle
in
jmp
push
xor
arpl
pop
call
loop
mov
jae
fadd
sub
pop
or
mov
xorb
add
bound
out
gs
pop
in
pop
sub
mov
push
add
xchg
shll
jno
dec
push
add
jo
int
imul
out
cmpb
mov
dec
mov
test
pushw
les
push
add
cmp
cmpsl
arpl
popf
das
mov
push
dec
test
sbb
in
aas
stc
adc
xor
ja
hlt
lds
sarl
fidivrs
cmp
and
mov
pop
leave
test
sub
inc
subl
sbb
jbe
add
inc
jo
cmp
lods
fstpl
add
stos
test
and
pop
imul
out
mov
cmp
cmp
aaa
xor
cmp
ljmp
lret
dec
stos
push
mov
fisttps
sub
out
mov
jns
jecxz
inc
pop
xor
je
xchg
jg
bound
shl
out
mov
aad
sti
fwait
push
push
sub
clc
sbb
lods
adc
pop
es
incl
dec
jmp
repnz
pop
sbb
es
adc
cwtl
mov
sahf
mov
pop
out
jecxz
pop
xor
push
pop
jns
xchg
fstl
pop
push
insl
pop
mov
add
push
dec
inc
sub
sub
push
and
rcrl
xor
lahf
pop
and
jns
in
xchg
pop
sbb
xchg
stos
daa
and
mov
bound
jbe
lcall
test
cmp
add
fwait
clc
jbe
dec
scas
jns
je
sti
cmp
dec
inc
mov
dec
stos
cmp
leave
pop
sub
data16
inc
pop
adc
dec
popf
pop
ret
js
out
repnz
int
imul
cmp
cmp
cmc
cmc
push
dec
inc
call
lds
sbb
jne
addb
je
or
outsl
xor
loope
inc
call
push
pop
mov
mov
pop
in
mov
push
pop
pop
sbb
into
test
imul
dec
mov
pop
push
fisubrs
hlt
outsb
rep
aam
sub
add
add
sub
push
dec
xchg
sub
int3
cmp
sahf
divb
inc
lahf
jp
sbb
pushf
lods
xchg
stos
rclb
mul
aas
mov
cmpsl
enter
jb
jns
mov
add
cmp
mov
mov
cmp
inc
stos
lods
mov
cld
xor
pop
js
dec
add
push
cmp
data16
shrb
adc
cmpsb
movsb
push
push
loopne
dec
pop
lock
xor
icebp
add
fnstenv
stos
mov
push
mov
loope
sub
out
pop
dec
mov
fisttps
mov
push
fidivrs
stos
xor
or
dec
mov
xlat
int
outsl
xchg
stos
lods
mulb
mov
jle
xchg
dec
fcoml
lret
lods
mov
pusha
aad
cmp
sbb
lret
add
cmp
mov
xchg
jns
sub
push
mov
dec
hlt
fisubs
push
xchg
cmp
xrelease
mov
and
or
outsb
es
adc
sbb
arpl
xor
mov
gs
lock
mov
jmp
xchg
cmp
xchg
mov
push
cmp
jge
insb
mov
xchg
jg
adc
push
add
pushf
sbb
add
dec
add
fcomps
add
or
cmpsb
and
pop
in
jne
xchg
lahf
add
into
jl
cmp
gs
push
in
shl
aas
stos
int
cmpsl
nop
mov
or
add
into
and
fisttps
pop
je
leave
enter
mov
not
jae,pt
xchg
xchg
pop
test
jle
push
push
jge
sbb
aaa
add
fsubl
fnstenv
adc
cmp
sub
mov
out
mov
out
test
push
outsl
jnp
je
insl
jle
lahf
jge
mov
data16
xor
test
add
pop
das
fisubl
mov
pop
insl
mov
jb
stc
in
mov
outsl
iret
pop
fisttps
addr16
adc
sub
mov
dec
dec
mov
jno
ret
decl
pop
inc
cmp
xor
dec
fistl
jns
int3
addb
fnsave
mov
sbb
lock
icebp
mov
mov
fwait
and
in
pusha
xor
jns
bnd
testb
ljmp
pop
inc
jp
mov
fstpl
shll
insl
das
adc
push
fists
or
add
test
adc
push
popf
loop
fstpt
shlb
or
inc
jb
outsl
mov
dec
jmp
mov
pusha
pop
in
loope
mov
xlat
es
dec
adc
adc
jmp
cmpsl
sub
fsubrl
xchg
mov
xor
in
pop
push
shrb
pop
xchg
and
mov
dec
pop
and
mov
popf
mov
stc
or
fisttpl
mov
mov
and
inc
jnp
xor
jg
or
fmull
sbb
dec
adc
cld
cwtl
loopne
mov
add
lcall
push
ret
mov
dec
push
clc
out
lds
in
hlt
mov
mov
aas
imul
push
pop
addr16
pop
cmpsb
repnz
lds
jne
xchg
adc
int
lret
mov
bound
mov
out
movsl
stos
xchg
mov
or
sbb
push
jg
lret
test
pusha
dec
sbb
int3
test
sub
cbtw
fsubr
pop
or
sbb
shlb
int
mov
jns
icebp
add
sub
and
and
rcrl
mov
adc
in
sbb
popf
jmp
mov
jb
loope
mov
mov
fisubs
push
movsb
mov
ret
adc
adc
ljmp
xchg
sbb
mov
test
dec
dec
xchg
sti
xor
push
push
xchg
mov
es
dec
sub
clc
loop
imul
mov
into
jmp
out
adc
and
ficoml
iret
sub
int3
inc
mov
loop
lea
push
mov
xor
mov
aad
mov
call
mov
mov
leave
push
push
cmp
push
push
sub
jb,pn
ja
fs
in
push
mov
cwtl
lods
idivl
jns
lcall
mov
paddd
fwait
int3
nop
push
imul
mov
leave
stc
mull
gs
jmp
in
mov
xor
sbb
aaa
jno
in
sbb
push
mov
cmc
dec
inc
jle
or
mov
fucomi
jle
mov
sub
test
loope
mov
ss
sub
outsl
push
dec
xor
mov
cld
add
xchg
bound
lock
jb
out
test
xchg
orb
jp
lret
out
scas
fistl
cmp
pop
xor
inc
cmpsl
mov
bnd
loop
sbbl
decb
jecxz
sarl
push
mov
scas
lcall
stos
cld
mov
repnz
cmpsb
cmpl
adc
dec
gs
sub
pushf
inc
sub
jb
sarb
loopne
cmp
notl
ja
fistpl
jecxz
push
mov
out
loope
gs
sarl
xor
dec
sbb
fldenv
cli
inc
sbb
lret
aaa
or
push
xor
or
scas
ficoml
in
stos
in
std
mov
test
mov
pop
mov
mov
clc
pop
jbe
shrb
xor
push
lds
insb
frstor
stos
pop
test
enter
mov
xor
sbb
mul
data16
daa
cwtl
leave
fcoms
xchg
sub
iret
mov
in
add
push
data16
test
sahf
push
lcall
data16
dec
sahf
and
rclb
lock
dec
repz
sub
adcl
sbb
mov
bound
bswap
pop
adcb
push
pop
mov
fnstsw
add
cmp
scas
arpl
hlt
aaa
jb
pop
mov
jnp
dec
out
pop
mov
add
add
mov
in
mov
push
es
mov
xchg
shll
lea
bnd
cmp
mov
dec
movsb
push
mov
pop
out
in
dec
lods
mov
popa
jne
fs
and
sahf
test
fdivs
jb
cltd
dec
dec
mov
out
sub
shl
jecxz
adc
xor
dec
andb
mov
repnz
jmp
stos
inc
and
jo
dec
pop
inc
aas
mov
in
cwtl
mov
xsave
lds
cmp
cmp
push
mov
mov
sbb
xchg
cmp
imul
dec
cmp
je
add
xor
pop
pop
pop
cmp
rclb
jmp
lods
sub
hlt
mov
in
push
sub
popa
shlb
adc
cmp
add
shlb
stc
push
dec
lret
subl
push
adc
pusha
cmc
loopne
ja
push
je
mov
or
inc
incl
mov
roll
lret
add
sbb
sub
movsl
mov
shlb
repz
xchg
lret
cltd
ret
push
dec
cs
dec
mov
sub
ret
jg
or
push
xor
xor
or
stos
pop
shr
mov
dec
dec
jno
daa
lods
cs
jo
shlb
or
je
jecxz
mov
push
inc
xchg
sub
insl
push
movsl
xor
loopne
jmp
pop
push
popf
sub
mov
xor
and
jno
jl,pt
inc
and
cld
and
sub
pop
push
mov
pop
testl
sbb
dec
test
fldl
es
fwait
adc
aaa
jbe
imull
xor
in
or
arpl
or
pop
pop
pop
and
jp
rcll
stos
pop
pop
cmc
pop
adc
nop
div
dec
mov
adc
sbb
jecxz
pop
sub
or
mov
adc
mov
aas
ljmp
lods
loope
mulb
xlat
xor
clc
xchg
and
popa
idivl
add
xor
push
jl
idiv
adc
scas
inc
inc
pop
dec
or
sub
lret
xor
sbb
fisttps
in
fs
sbb
dec
inc
shrb
fildll
mov
pop
fstps
xchg
jmp
mov
jns
xorb
mov
jp
ficoms
cltd
fisubrl
fcoml
clc
ss
sub
stos
xor
dec
and
xchg
stc
add
cmp
stos
push
js
mov
and
pop
into
cmpsb
dec
push
lcall
dec
cmc
mov
insb
sub
cmpsl
lret
scas
stc
sub
out
dec
iret
loop
out
pop
xchg
mov
dec
fimull
or
pushf
add
iret
std
popf
push
popl
xor
mov
test
jp
jae
mov
xor
call
addr16
cli
loop
adc
aas
cmp
insl
das
shl
mov
pop
inc
bound
push
dec
pop
lds
sahf
lea
addl
mov
fwait
dec
iret
adc
sbb
jecxz,pt
jo
fsubl
adc
aaa
fstl
xlat
cmpl
add
jno
pop
mov
mov
setnp
popa
fisttps
sbb
into
mov
int
cs
xchg
sub
iret
mov
loop
sub
push
mov
ret
or
loopne
repz
fsubrs
enter
loopne
roll
xchg
in
cmpsb
cli
cmp
scas
pop
inc
push
repnz
lods
stos
pop
xchg
push
mov
add
mov
fwait
inc
out
fdivs
pop
out
call
in
jmp
inc
lret
mov
fisubl
mov
or
push
repz
and
aas
cmp
mov
jbe
lcall
mov
mov
dec
mov
imul
sti
pop
or
rorb
push
sub
imul
xorb
push
add
daa
sarl
ja
cmc
mov
add
gs
sub
mov
mov
sbb
mul
loop
into
out
lds
fs
and
xor
cltd
int
les
and
outsb
test
movsb
inc
mov
fwait
call
adc
mov
mov
mov
xor
int
daa
push
add
jns
cmp
xchg
insb
cwtl
scas
cmp
inc
js
xor
push
sbb
pop
inc
outsl
scas
jae
mov
mov
mov
lock
jmp
sub
icebp
mov
addr16
xchg
mov
mov
lods
add
mulb
adc
mov
mov
jmp
pop
stos
mov
sub
test
mov
mov
adc
xor
mov
sub
js
stos
fwait
std
jl
repz
shr
adc
pop
add
out
sub
adc
jns
sbb
ret
push
or
mov
push
shll
jecxz
das
shlb
cs
cmp
ret
jle
hlt
mov
dec
stos
or
jecxz
lock
test
inc
xor
aas
in
lock
ret
test
sti
or
inc
mov
repz
jl
sbb
outsl
mov
or
mov
xchg
push
xchg
mov
push
es
and
setl
xchg
stc
sub
jg
inc
dec
test
adc
arpl
cli
stos
dec
adc
push
add
cld
jg
add
cmp
rol
mov
movl
mov
or
cs
inc
test
cli
rol
test
mov
test
adc
notb
pop
mov
enter
sub
sbb
cmp
sarb
ja
out
jge
cmp
shlb
int3
fdivs
or
mov
dec
sarb
mov
push
xor
jo
jb
sub
adc
pop
cmp
or
mov
cmpsl
scas
xchg
dec
push
sbb
into
pusha
ret
aas
cmpsb
data16
cmp
addr16
push
jp
or
mov
jmp
cs
subl
imul
int
js
int
push
fisttpl
cmp
sub
pop
dec
pop
pushf
cli
add
adc
movl
jae
mov
int3
inc
mov
scas
inc
fnsave
bound
sarl
gs
ss
int
or
mov
popa
iret
sbb
add
rclb
push
bndstx
push
xchg
pop
and
pop
sbbl
dec
xchg
push
pop
dec
ret
add
push
lret
sub
inc
pop
push
in
vshufps
inc
dec
xor
jmp
jl
inc
push
imul
sub
xor
sbbl
dec
push
sub
add
mov
xchg
xchg
in
or
adcb
je
in
lods
sub
jle
sbb
cwtl
mov
filds
jbe
cs
cmp
jle
sbb
popa
push
repnz
mov
and
and
loopne
dec
jge
fdivp
xchg
xchg
jb
add
jbe
inc
jns
mov
jne
and
shrl
cmp
pop
lods
into
mov
test
mov
repnz
xlat
jnp
cld
xor
mov
mov
xchg
inc
jno
push
aad
and
hlt
cmpsb
movsl
cs
cmc
pop
mull
xchg
sbb
pop
push
mov
xor
sti
test
push
inc
jmp
mov
test
sub
lock
xchg
dec
mov
cmp
dec
arpl
dec
in
jmp
fiadds
aaa
push
test
shl
jp
shrl
enter
inc
add
xchg
push
jnp
push
cmp
lcall
and
out
gs
rcrb
mov
cmp
mov
and
fiadds
mov
mov
int
repz
jns
insb
xchg
int
scas
add
mov
mov
xor
icebp
jae
cs
sti
outsb
subl
and
in
sub
adc
jl
mov
int3
pop
mov
pusha
or
ret
insb
push
sbb
es
mov
pop
dec
pop
mov
inc
inc
jae
imul
push
inc
dec
mov
call
loop
nop
cmpsb
jne
jb
bound
cli
aad
pop
je
xor
lret
xor
and
insl
jg
push
pop
xor
sub
and
push
xlat
fists
lods
xor
xor
movsb
fwait
rol
sbb
pop
cmp
inc
xchg
imul
adc
pop
cmc
cmpsb
addr16
int3
xchg
mov
test
sub
test
and
xchg
xchg
fwait
movsl
sub
inc
inc
mov
cld
arpl
lret
adc
and
jno
aam
cmp
sbb
lods
xchg
mov
in
clc
mov
jg
loop
popf
cs
or
adc
dec
hlt
jno
mov
push
loope,pt
add
adc
xchg
add
in
int3
je
mov
sub
in
sbb
loop
in
pop
arpl
mov
mov
jmp
pop
mov
pop
and
inc
les
insl
adc
xor
ret
or
aam
xchg
jge
out
dec
adc
hlt
pusha
xchg
faddp
pop
sbb
fdivrp
nop
mov
or
in
lods
fwait
or
or
push
inc
cmp
nop
loopne
jl
stc
and
hlt
mov
call
rorl
mov
imul
xchg
call
sub
std
xchg
jae
les
xor
lcall
je
push
in
sub
pop
push
xor
popf
mov
in
outsb
pushf
xchg
and
inc
std
push
cmp
lods
dec
int
jle
cmp
nop
jecxz
ds
lahf
in
mov
ss
adc
mov
imul
neg
loope
imul
stc
int
icebp
xor
push
leave
lods
imull
call
ja
insl
jp
xor
xlat
ljmp
xchg
rcrb
cltd
lods
add
xorb
loopne
jle
sub
adc
adc
pop
inc
in
jmp
mov
dec
mov
stos
push
push
ret
andb
cmp
test
push
aas
jl
adc
add
repz
loop
or
in
clc
dec
je
mov
jno
sti
or
arpl
arpl
ljmp
cmp
add
mov
cmp
add
or
addr16
or
inc
cmp
insb
movsl
push
lret
std
sub
inc
cwtl
orl
fildl
sub
cmp
cmp
push
xchg
push
pushf
and
and
pop
xchg
push
into
inc
pop
pop
out
push
jo
add
mov
into
fdivr
mov
xchg
sbb
leave
movsb
push
mov
aaa
ds
adcl
das
or
xlat
push
aam
lahf
sub
and
or
sbb
cli
mov
jbe
mov
scas
cmp
fstps
inc
jmp
cmp
mov
sbb
fcoms
int
test
mov
out
dec
mov
pop
dec
pop
testb
push
repz
cmpb
imul
call
add
adc
add
int3
subb
dec
and
stos
lahf
pop
push
sub
sbb
jb
and
outsl
xlat
shlb
push
sbb
repz
popa
cmp
and
js
sti
scas
jno
lods
hlt
pop
push
jnp
sub
jecxz
mov
test
in
or
arpl
bound
out
rcrb
push
dec
add
inc
outsb
shll
sbb
into
int3
es
push
fs
push
aas
xor
scas
jle
iret
arpl
push
sub
aam
loope
xchg
insl
mov
push
rorb
fs
xchg
xlat
push
adc
call
xchg
add
cmpsl
movsb
les
or
xchg
xor
scas
push
shrb
cli
mov
mov
mov
push
sbb
scas
push
cmp
mov
jmp
or
aas
jno
or
lock
pop
mov
js
adc
stc
lea
sub
jge,pn
dec
xchg
mov
test
mov
pusha
xor
iret
hlt
dec
pop
dec
add
int3
js
jb
iret
insl
lahf
std
add
jno
sub
lret
movsb
jns
sbb
mov
and
add
movsl
mov
popf
andb
minps
pop
jle
je
mov
cli
mov
sub
clc
int3
cmc
jb
cwtl
das
nop
jbe
mov
pusha
inc
aam
mov
pop
out
les
movsl
xchg
xchg
dec
push
insl
adc
jno
cmpsl
push
or
sbb
add
or
shrb
in
adc
xchg
cmp
push
cmpsb
jge
shll
mov
stc
xchg
jg
jmp
mov
cmp
lods
icebp
std
cmc
add
mov
mov
mov
fs
add
inc
adc
jnp
daa
push
cltd
je
aad
pushf
or
dec
adc
xchg
cmp
cmpsb
test
lock
dec
mov
pop
pop
xchg
sarl
mov
cmp
dec
out
and
add
sbb
xor
hlt
out
popa
fildl
or
xor
ror
mov
ljmp
pop
sub
pushf
stc
jmp
dec
les
js
mov
jecxz
and
scas
xlat
inc
push
out
mov
call
xchg
mov
adc
fsin
mov
jp
pop
data16
adc
addr16
pop
xor
ss
ror
out
sub
out
lock
jnp
jno
pop
jae
adc
test
ret
sti
push
insb
cli
stc
mov
adc
adc
lret
sbb
cmc
add
add
aaa
push
testl
adc
or
sti
adc
imul
xchg
jnp
xchg
add
add
add
xchg
arpl
leave
mov
rorl
xorl
jb
dec
jg
cmp
xchg
roll
mov
xchg
jne
mov
mov
sbb
out
xor
add
and
aam
mov
lods
jns
rcrb
jge
testb
rorl
outsl
movsb
daa
adc
decb
in
roll
out
data16
sub
cld
dec
bound
imul
xchg
cld
push
imul
jmp
or
bound
lret
pushl
mov
shll
repnz
and
add
addr16
outsb
insb
cmp
jle
add
dec
clc
inc
enter
jae
sbb
xchg
mov
icebp
cmpsb
xchg
mov
sbb
mov
add
out
sbb
pop
test
xor
data16
fistpl
push
mov
jecxz
daa
push
mov
push
mov
stos
xchg
lret
mov
addr16
rorl
sub
pop
mov
icebp
mov
sub
mov
cmp
test
adcl
sub
shlb
cmp
js
mov
cmp
add
ret
adc
mov
adc
insb
imul
xor
pop
out
mov
hlt
sbb
and
cltd
push
dec
cli
adc
cmpsl
shlb
cmpsl
sbb
and
mov
push
lods
clc
mov
inc
xchg
ljmp
cwtl
cli
fs
stos
into
xor
xchg
adc
lahf
add
jl
sub
xor
rcll
mov
jno
push
pop
call
adc
pop
testl
mov
pop
imul
push
jbe
bound
push
or
test
les
sbb
mov
scas
jbe
notb
mov
loope
pop
sbb
mov
xchg
or
mov
aad
sub
dec
add
dec
out
jg
leave
cmp
iret
xor
mov
shll
pop
in
mov
cli
cmp
mov
pop
lods
rcrb
adc
cmp
or
outsb
stos
or
jbe
add
xor
xor
xchg
inc
inc
sub
dec
push
shrl
cmpsl
push
out
jbe
mov
lahf
gs
jbe
imul
psrad
jnp,pn
push
inc
ret
outsb
xlat
sub
aaa
inc
int3
jb
or
pop
jnp
maskmovq
imull
inc
in
and
sti
aam
sahf
or
xor
loopne
dec
xchg
es
call
adc
jmp
lret
adc
jmp
add
xchg
cmpsl
dec
outsl
ficoml
iret
push
push
mov
push
cmp
add
mov
add
and
shlb
xchg
pusha
push
outsl
daa
jmp
mov
and
sub
stos
or
mov
or
xorl
lea
int
or
jg
rorb
pop
inc
in
cmc
xor
pop
push
das
add
test
or
ret
lret
sahf
jb
xchg
out
outsb
shll
frstor
push
pop
loope
aaa
in
sbb
call
ljmp
jae
sarl
cmpsl
jl
pop
sub
xor
shl
addr16
sub
cmpsw
mov
hlt
add
xchg
sahf
jno
and
iret
fcomps
lret
jo
je
je
adc
movsb
mov
in
push
fmull
daa
int
dec
subl
pop
insl
xor
xchg
sbb
or
jbe
ret
sti
cli
stc
into
xchg
imul
xchg
mov
inc
add
lret
sbb
xor
lea
pop
movsl
sub
in
sbb
inc
mov
inc
push
jmp
jb
dec
cmp
push
cli
cmp
into
xor
shlb
ficoml
pop
repz
rcrb
pop
js
stos
div
fstpl
sub
in
lea
jbe
ret
xor
in
fwait
dec
aad
js
mov
push
sub
scas
out
stos
dec
test
mov
push
add
aaa
add
and
cmp
mov
dec
iret
stc
and
inc
and
adc
es
inc
and
pop
push
leave
add
scas
xchg
sub
push
bnd
and
pop
push
sahf
and
dec
aam
ljmp
cmp
inc
ficompl
cmp
repz
and
jle
imul
jae
and
mov
shr
cmpsl
shl
and
loopne
decl
adc
sub
mov
movsb
lods
mov
cmp
inc
pop
lock
xlat
std
jmp
and
movsb
outsb
mov
pop
sub
les
andb
xchg
push
lods
out
dec
add
cld
xor
in
adc
arpl
dec
sbb
dec
lcall
out
mov
sub
dec
mov
xchg
fldl
cli
cwtl
mov
push
mov
inc
fwait
inc
sub
dec
stos
and
ss
dec
xor
dec
mov
mov
dec
icebp
jg
pop
jnp
push
aam
fisttps
dec
inc
inc
sub
fisttps
lock
insl
or
fwait
iret
push
scas
test
aad
sub
jge
out
arpl
xchg
jle
addr16
adc
rcrb
push
subl
dec
lea
aas
adc
test
xchg
add
xor
std
mov
sarb
or
mov
cmpsb
jg
scas
mov
add
fdivrl
push
shl
mov
int
sti
daa
dec
das
out
push
push
sti
mov
int3
or
clc
mov
push
jg
or
jb
cli
jns
cmp
lods
sbb
lcall
adc
shlb
repnz
stc
push
dec
xchg
cwtl
std
mov
ljmp
jg
mov
mov
inc
fmuls
adc
or
push
mov
dec
lcall
cltd
ret
push
xchg
pop
xor
push
xor
or
sbb
repz
lds
stc
push
js
mov
sahf
pusha
and
mov
clc
orl
pop
rclb
in
shlb
lods
inc
lods
notb
loopne
jge
and
and
cwtl
out
inc
stos
lcall
xor
inc
jmp
pop
in
mov
adc
repz
xor
test
xchg
inc
and
daa
mov
add
push
fmuls
sbb
xchg
js
insb
inc
push
icebp
daa
xchg
mov
leave
inc
push
adcb
jmp
test
add
jle
xchg
adc
in
adc
lods
xchg
or
mov
test
dec
out
into
dec
repz
outsl
mov
xchg
aad
lea
ja
into
or
cmp
fcoms
jp
shlw
dec
push
sbb
mov
mov
pop
push
jbe
jo
xchg
orl
hlt
push
pop
inc
scas
mov
mov
jo
jl
and
jns
jecxz
pop
addr16
and
scas
rcl
adc
ds
js
lret
xchg
std
repnz
push
js
xorb
aam
jne
xchg
testl
inc
add
fsubrl
sub
loop
aam
repz
les
push
movsb
cmc
int
insb
push
jnp
lods
divb
push
adc
loopne
mov
les
adc
pop
jns
push
jno
dec
mov
inc
repnz
push
xchg
jmp
mov
cmp
mov
mov
mov
ja
test
xor
jl
cmpsb
jne
push
dec
test
rclb
mov
mov
cwtl
js
movsl
xchg
mov
jno
movsb
das
inc
cmp
mov
shrl
test
ret
push
jle
fwait
ret
aas
std
pushl
cmc
lcall
dec
lcall
sub
lods
pop
or
lods
ds
jge
fidivl
add
ret
xchg
es
cs
xchg
in
neg
imul
cli
mov
call
daa
add
fdivr
sub
div
or
aad
pop
sub
mov
inc
lret
insb
imul
or
in
xor
mov
mov
cs
dec
and
sahf
scas
mov
sbb
popa
mov
pop
jae
pusha
pop
nop
fistl
jne
aaa
leave
mov
sub
cmp
bound
adcb
push
test
push
mov
mov
sbb
cmpsl
fcoms
jnp
lret
sub
mov
insl
adc
in
rcl
xchg
xor
and
mov
mov
pusha
jle
div
and
mov
das
and
and
sbb
push
pop
rol
mov
and
rol
fwait
cmp
inc
push
mov
inc
pusha
pushf
in
jle
nop
xchg
aam
mov
mov
daa
xchg
pop
add
sahf
aaa
cli
movaps
int
in
sub
jle
das
mov
and
sbb
movsl
rcll
inc
bnd
dec
pop
xlat
aaa
inc
dec
sub
stos
enter
in
xor
scas
mov
imul
mov
mov
sbb
in
je
subl
cmp
and
aaa
inc
mov
leave
data16
push
and
cli
mov
nop
cmpb
xchg
mov
mov
out
icebp
cmp
dec
jne
ds
call
mov
aam
leave
dec
out
xchg
adc
fsubs
insb
movsb
mov
add
lods
insb
mov
xchg
cmp
icebp
js
sub
add
mov
jmp
ret
pop
and
and
loopne
out
pusha
dec
out
lahf
push
movsb
loop
and
adc
pushf
fidivs
cmp
pop
stc
loope
lret
scas
fdivrl
lods
aaa
enter
mov
pop
xor
push
test
jmp
push
jg
repnz
inc
pop
out
mov
shll
mov
inc
bound
sbb
inc
xorb
repnz
xor
scas
mov
push
mov
jbe
loopne
sbb
xbegin
jge
add
mov
pop
leave
test
push
cmp
mov
mov
pop
notl
imul
repz
outsb
hlt
aam
inc
testb
repz
push
dec
xchg
and
adc
adc
cmp
xchg
add
inc
bound
aas
pop
loopne
xor
mov
fcoml
jnp
xchg
xlat
mov
mov
ficoms
sub
jae
outsb
pop
lahf
lret
movsl
cltd
xor
fsubrs
stc
lret
jno
jno
repnz
out
shlb
in
std
jmp
aaa
xorb
icebp
mov
cltd
test
inc
and
sbb
add
push
adc
and
cs
loop
inc
movsb
xchg
push
popf
data16
data16
fadds
or
ljmp
jae
mov
jne
stc
sbb
jp
in
fldenv
insl
jo
inc
imul
or
pop
in
aad
shlb
dec
sub
into
lods
cmp
ja
mov
insb
cwtl
or
scas
lcall
or
cmpsb
push
jmp
push
sub
loopne
jbe
xchg
mov
movsl
xor
and
test
pop
jecxz
insb
add
xchg
int3
lahf
push
std
movsb
pop
das
xchg
cs
aaa
push
cmp
out
inc
stos
xchg
sub
cmpsb
xchg
xor
cmp
jmp
cmp
pop
sbb
and
icebp
clc
jbe
xchg
add
cli
idivl
jbe
jae
in
xchg
xor
mov
fbld
push
mov
sub
out
push
add
dec
mov
rclb
pop
push
outsb
adc
lret
add
inc
lods
dec
fstps
iret
stos
and
addr16
movsb
xchg
pop
shlb
rcrl
lahf
call
add
jmp
shll
push
dec
popf
sbb
jle
jnp
pop
sub
fdivp
push
cmpsl
lret
sub
call
sbb
pop
imul
lods
aam
lahf
insb
stos
insb
scas
in
xor
sahf
cmp
adc
adc
imul
popf
xor
sti
insl
scas
push
mov
and
aam
add
push
into
sbb
mov
pop
test
dec
test
dec
or
loop
dec
icebp
lret
or
sbb
xlat
inc
add
imul
sub
jl
ljmp
add
sbb
add
jle
mov
popa
push
inc
roll
xchg
lock
inc
ret
andb
andb
xchg
dec
adc
mov
or
seta
mov
sahf
cltd
mov
es
cs
mov
xor
icebp
mov
lea
sbb
mov
add
sub
rol
gs
loopne
mov
ljmp
outsb
mov
jnp
xchg
mov
add
sub
sti
inc
in
outsb
sub
aas
outsl
cld
addl
dec
inc
mov
fs
push
mov
push
je
and
pop
push
push
cld
leave
and
inc
leave
iret
inc
shr
imul
fcoms
addr16
jp
iret
fldcw
xor
mov
gs
adc
and
ret
aaa
fwait
in
js
adc
rorl
xchg
ds
mov
ja
mov
adc
sbb
inc
shll
imul
testl
test
fisttpl
pop
push
fsubs
sarb
test
xchg
lcall
lcall
sub
aad
push
mov
enter
mov
add
xor
xchg
mov
pusha
cmp
es
xchg
rcrb
out
pop
add
stos
hlt
mov
sub
add
into
je
push
mov
mov
jmp
loopne
test
dec
ret
std
xchg
rorl
dec
xchg
out
nop
into
adc
cli
test
xchg
lcall
mov
push
push
fs
clc
jbe
mov
jb
pop
adcl
notl
arpl
cmc
movsl
xor
xchg
outsb
leave
ret
aam
lret
xor
jmp
sbb
sbb
push
cmc
lret
rorl
lea
push
sbb
sbb
add
push
mov
fmull
add
leave
ret
cmp
pop
pop
pop
dec
test
inc
es
in
js
subb
lds
and
lds
push
inc
jnp
xor
data16
inc
adc
push
es
pop
fsubrs
jmp
push
js
xlat
adc
fwait
pushf
jno
stc
xchg
sbb
dec
cmp
xchg
dec
jecxz
xor
in
hlt
pop
sbb
test
or
adc
es
jo
scas
bnd
xchg
xor
call
mov
mov
push
mov
sub
jge
sbb
test
gs
adc
popa
pop
sbb
int
in
lds
push
lods
pusha
mov
pop
xchg
dec
in
dec
mov
int
test
cs
outsl
mov
mov
jno
outsb
ljmp
fwait
mov
sar
insb
or
stos
pop
mov
and
cld
dec
cmp
js
xchg
jmp
mov
out
mov
outsl
rorl
lcall
in
out
test
mov
cmp
push
pop
ficoml
lock
js
and
clc
movsb
imul
xor
push
pop
jnp
mov
lret
rclb
mov
lods
in
lea
stos
mov
lods
shl
and
lods
shlb
cs
add
shrb
loopne
sbb
mov
test
insb
jle
pushf
js
loopne
add
mov
push
fsubp
pop
mov
jp
das
loopne
xchg
xorl
jle
stc
inc
sbb
jb
jecxz
daa
inc
in
lock
mov
cmp
dec
xchg
cltd
sti
loop
sub
mov
mov
jge
jmp
and
psubusw
pop
cmpsb
push
fldl
pop
fisubrl
mov
sbb
xchg
inc
cli
lods
pop
and
or
push
pushw
lret
or
adc
call
cmpsb
xchg
and
jno
mov
xchg
lea
pop
sub
push
lods
cmpsb
pop
int
das
xchg
sub
jo
fsubrp
sbb
or
lahf
enter
shll
scas
lds
aas
mull
mov
cmp
cmp
cmpsb
stos
out
jle
lret
add
mov
rclb
push
cmp
cld
or
push
cs
jp
cmp
pop
imul
cmpsl
jno
leave
mov
pop
fldl
adcl
sbb
rcll
inc
aam
mov
mov
arpl
jb
cwtl
push
add
cmpsb
and
sti
lret
add
out
and
xor
and
jp
push
std
cmc
xlat
cs
mov
and
jp
aad
pop
movb
rcrb
mov
das
outsb
sarb
jp
jnp
idiv
adc
jo
sti
aaa
in
xchg
adc
add
sub
imul
cmp
push
pop
inc
aaa
mov
and
jae
pop
mov
cld
jnp
push
or
cli
lds
aam
cmp
mov
mov
mov
in
sub
and
add
mov
into
clc
into
cmp
cs
call
sti
inc
jnp
add
fnstenv
jb
sbb
jecxz
faddl
sti
aas
cmp
daa
fcoml
add
mov
add
out
xchg
jo
adc
mov
int3
push
adc
arpl
push
mov
sahf
sar
adc
sub
mov
push
push
popl
jb
xor
jl
jl
push
movsb
inc
popw
mov
pop
dec
cmp
orb
gs
out
push
add
sub
outsl
iret
das
push
mov
hlt
sub
cltd
jle
adc
scas
mov
cld
jne
push
pop
inc
dec
sub
jle
jbe
jmp
bound
jg
mov
add
clc
and
push
push
ret
dec
jle
dec
outsl
jmp
fisttps
popa
push
movsb
popf
add
cmpsb
pop
insb
push
and
mov
outsl
shrb
popf
int3
or
jge
add
dec
test
lcall
ljmp
cwtl
mov
jl
lods
cmp
cmp
gs
cmp
cmpsb
repz
repz
lret
push
lea
daa
pop
jae
pop
movsb
mov
jge
fwait
xchg
lock
add
xor
jl
pop
xchg
das
pop
popf
jge
shll
or
jmp
sub
lret
int
stos
inc
mov
call
xlat
les
pop
mov
sub
push
in
mov
sahf
push
out
out
push
aas
mov
add
cmp
and
repz
aas
icebp
inc
in
sub
jns
sbb
clc
popa
dec
aaa
dec
arpl
xor
jle
dec
inc
jge
mov
mov
outsb
hlt
ja
cmc
scas
in
das
and
mov
sarb
add
mov
or
inc
lcall
sahf
mov
cs
pop
inc
push
imul
cmp
je
hlt
in
movsb
inc
mov
push
sbb
xor
mov
out
xor
and
lahf
jmp
push
out
cmpsl
popf
pop
subb
xlat
xor
ja
adcl
rol
call
int
add
add
cmp
daa
sbb
xchg
push
shl
or
shlb
and
mov
sarb
std
fidivrs
call
enter
pop
lret
mov
cs
adc
inc
out
adcl
fildl
test
add
xchg
fists
and
loopne
pushf
inc
and
dec
lds
add
into
fcompl
jle
inc
inc
add
pusha
cmc
outsl
jo
shlb
xor
cmp
pop
adc
pusha
fisttpl
mov
pop
inc
xor
inc
sbb
jmp
inc
add
dec
sti
adc
jb
cmp
jne
add
aas
inc
push
or
int
jo
mov
pushf
out
mov
add
rcll
fwait
mov
ffree
insb
cmp
add
push
insl
scas
lods
int3
ds
ds
repnz
mov
lods
mov
adc
stos
add
aam
add
insl
cmpsl
dec
adc
aaa
pop
dec
aam
cmp
fidivl
sbb
dec
dec
addl
fisttps
insl
dec
jae
mov
mov
fadd
inc
xchg
jmp
cmpl
mov
mov
mov
mov
jmp
stos
mov
in
dec
push
and
rclb
jge
ret
stos
movsl
push
mov
cs
mov
fs
icebp
fmull
je
es
dec
pop
add
aam
imul
xchg
rorb
inc
sbb
int3
xchg
aad
push
mov
xchg
test
adc
push
insb
pushf
mov
mov
xchg
and
cmpsb
add
scas
mov
cld
and
pushaw
mov
xor
jp
ret
das
inc
lcall
clc
mov
add
mov
fimuls
gs
pop
pop
lds
pushl
gs
mov
jnp
mov
add
mov
jnp
cmp
inc
mov
cmp
scas
jg
push
cmc
dec
repnz
lret
sbb
pop
jo
es
outsl
dec
pop
enter
inc
add
fs
cmp
push
js
inc
cmp
je
repnz
hlt
aam
add
dec
jp
dec
push
test
mov
insl
lret
cltd
int3
aas
out
daa
sbb
push
mov
sbb
daa
imul
cmp
shlb
sub
adc
xor
aad
fbld
and
mov
xchg
mov
cmp
or
xchg
out
clc
loope
in
les
pop
push
divb
jae
pusha
jp
push
int3
pop
ja
jb
push
xchg
pop
loopne
sub
repz
fstpt
aaa
stos
subl
xchg
push
push
cli
mov
in
insl
pop
sbb
or
gs
test
je
mov
inc
add
xor
xor
xor
mov
test
dec
jp
ret
mov
mov
repz
push
rclb
mov
in
ret
lgs
gs
mov
sbb
lods
jmp
in
mov
mov
out
and
js
test
clc
insl
mov
setg
jl
mov
xchg
shlb
repz
and
enter
mov
add
icebp
ret
cltd
mov
dec
divb
fstpt
lods
mov
fisubrl
cmp
ficompl
testb
int3
int
lret
push
xchg
jle
adc
jg
dec
addr16
inc
lahf
pop
mov
push
js
mov
mov
leave
mov
jecxz
arpl
mov
xchg
fwait
mov
data16
fs
gs
mov
cmp
mov
adc
mov
inc
jnp
sub
sbb
in
mov
mov
imul
add
out
fildl
jae
imul
add
je
jns
int
dec
mov
jnp
insb
int
cli
sub
xor
fsqrt
enter
cmpsb
add
inc
pop
ret
out
dec
pop
pop
cmc
sbb
mov
cmp
cmp
add
or
and
pop
dec
cmp
jecxz
xchg
xor
shl
mov
mov
nop
jnp
pcmpeqd
jecxz
dec
jmp
add
cld
push
ret
clc
insb
sub
mov
fistpll
push
fucomi
popf
lds
cmp
shlb
sbb
add
imul
sti
or
pop
mov
loop
cltd
std
sahf
jbe
sub
jl
loopne
shl
stos
or
hlt
sbb
cmp
insb
lret
or
adc
or
pop
xchg
dec
insb
push
insl
clc
mov
je
test
cmpsl
add
dec
cmp
push
test
loope
stos
ret
xor
call
arpl
into
fs
sub
push
test
stos
aam
mov
dec
cmp
leave
xchg
push
inc
jl
rorl
pop
sbbb
xor
test
push
pop
push
jne
inc
pushf
mov
aas
or
xchg
adc
cs
fstpt
into
xor
hlt
lock
mov
xchg
jb
mov
ja
push
addr16
ja
mov
cs
out
mov
test
mov
test
cld
mov
mov
pop
mov
and
mov
mov
push
pop
in
push
or
in
aad
xor
cmc
les
add
out
andl
and
add
mov
mov
and
movsl
xchg
mov
pop
mov
mov
dec
pushf
in
jb
dec
or
fs
lahf
sbb
sub
pop
notb
add
sti
shrl
cmpsb
mov
test
stos
xor
sub
cmp
dec
lods
rep
pop
inc
add
into
jge
andl
and
jnp
rorl
bound
in
test
call
jecxz
imul
test
stos
xor
pop
ja
sbb
sub
and
out
push
push
je
ret
pop
dec
imul
icebp
call
lret
xor
jecxz
mov
pop
scas
in
testb
sub
inc
xchg
push
repnz
xchg
dec
pop
jae
sub
xchg
jge,pn
dec
inc
add
ds
in
lods
les
nop
xor
cmp
dec
or
iret
int
or
pop
sub
and
push
push
faddl
mov
cmc
and
mov
xchg
xchg
push
add
movsb
xor
add
dec
mov
sahf
orl
stos
addr16
adcb
aad
xchg
jge
sbb
aas
adc
mov
in
icebp
arpl
imul
es
out
or
adc
xchg
fs
or
xchg
popa
mov
les
test
sbb
cwtl
aam
push
aad
scas
fdivs
pop
add
fidivrl
cmp
lea
ficoml
je
repnz
mov
jb
lcall
mov
sub
es
dec
cmp
xor
iret
sbb
loopne
pop
mov
bound
xorl
cs
stos
push
xchg
add
adc
xchg
mov
mov
sbb
jge
mov
pusha
sbb
lahf
add
pop
push
stos
nop
outsl
mov
adcl
jl
out
loope
sbb
loope
cmc
or
add
repnz
ss
mov
jbe
into
jecxz
add
jle
xorl
mov
leave
fnsave
mov
sbb
ret
or
mov
lea
cmp
repz
in
into
mov
jo
aam
test
dec
movsl
mov
push
cmpsl
adc
xchg
stc
push
das
and
jg
movsb
mov
fs
dec
add
std
sarb
xlat
pop
mov
jecxz
xor
mov
daa
fucom
aas
pusha
xchg
dec
dec
pop
aam
orl
fsts
pop
jnp
dec
out
adc
sbb
push
sub
add
inc
inc
sbb
or
inc
jle
jge
dec
je
add
arpl
mov
jmp
adc
lds
add
les
in
loopne
cltd
movsb
push
sahf
enter
pop
out
and
in
jo
je
shlb
loop
mov
pop
inc
ljmp
adc
mov
lds
mov
addl
cmp
clc
pop
cmp
cli
movsb
mov
cmpb
jno
ret
add
xchg
xorb
les
lods
jo
mov
mov
adc
jae
cld
ss
mov
clc
pop
jnp
imul
fbstp
adc
mov
jns
sbb
lds
pop
repnz
sub
mov
xchg
or
dec
dec
out
sub
push
xlat
pop
test
sbb
jns
ds
adc
aaa
stc
cmp
and
fildl
repz
push
adc
lcall
cld
mov
fbstp
xor
sub
mov
dec
ja
andl
in
pop
test
add
fisttpll
lcall
xchg
cwtl
orb
repz
and
push
cmp
xchg
mov
jo
xchg
or
sbb
lods
jl
pop
sub
push
mov
subl
mov
inc
mov
mov
fwait
fs
out
jle
movsl
fnstenv
adc
jmp
adc
ret
popf
pop
mov
and
fs
les
popa
adcb
ss
push
jne
cwtl
jb
add
iret
pop
sbb
jnp
fsts
cmpsl
sub
jl
fucom
xchg
pop
dec
and
in
jae
mov
dec
cs
jo
into
mov
loop
cs
imul
das
sbb
sub
mov
movsb
dec
in
pushf
les
mov
scas
dec
and
inc
gs
or
lds
pop
and
les
in
jb
mov
cmp
sub
jne
xchg
aam
push
xlat
pop
fcoms
push
xor
pushf
and
adc
fcmovnu
xchg
hlt
mov
inc
das
ss
out
icebp
stos
ret
andl
in
pop
je
or
mov
sbb
lahf
into
nop
ja
out
and
sub
push
xchg
stos
xlat
fnstcw
cs
push
mov
mov
xor
push
add
mov
pop
mov
pop
sbb
push
cmp
lahf
ss
out
ja
repnz
cmp
dec
xor
and
sub
jmp
imul
pop
add
test
je
or
mov
js
outsb
jge
repnz
sbb
mov
lret
nop
xchg
sti
mov
mov
jecxz
adc
xor
add
jbe
fld
imul
rcrb
lods
pushf
nop
cmc
fistpl
sti
lret
cmp
leave
cmpps
rorl
xchg
arpl
test
hlt
lret
inc
outsl
xor
mov
loope
inc
aam
mov
incb
std
mov
mov
enter
stos
arpl
xor
mov
and
lahf
jl
mov
add
pop
push
sub
lods
repnz
mov
and
add
xor
lret
rol
fsubs
push
test
roll
lods
lret
icebp
cmp
fcmovnb
rcl
and
mov
out
mov
ror
test
inc
push
adc
lea
push
add
or
dec
test
mov
sub
xchg
lret
mov
adc
arpl
cmc
jns
shrl
outsb
adc
mov
cmp
push
jmp
add
in
xchg
icebp
adc
pop
stc
stos
rcrb
sbbb
sarl
insl
cltd
cli
or
cmp
or
xchg
mov
adc
pop
push
out
xchg
fists
mov
aaa
loope
shlb
int3
pusha
sub
mov
mov
movsb
inc
lcall
push
or
incl
add
xor
jno
add
or
loopne
xlat
sti
and
dec
shr
mov
mov
ret
or
fcmovnbe
adc
dec
inc
daa
decb
push
ficomps
fadds
lds
dec
ja
cmp
add
btr
push
push
push
add
dec
add
inc
out
sbb
push
jp
sub
jns
neg
sub
je
mov
sbb
add
sbb
inc
cwtl
mov
add
xorb
cs
sub
iret
mov
icebp
ret
bound
inc
or
hlt
icebp
ret
mov
dec
loopne
mov
das
jo
inc
mov
clc
pop
imul
loopne
cmp
pusha
loop,pn
ds
int3
movsb
pop
and
add
shlb
xchg
jp
stc
leave
rclb
push
cmp
out
mov
imul
shl
in
mov
dec
pop
sbb
dec
lcall
jge
inc
jmp
dec
pop
inc
pusha
imul
jl
xlat
adc
xor
xor
inc
sub
add
jmp
xchg
pop
scas
pop
mov
mov
stos
shll
pop
sub
jecxz
xor
test
inc
test
xor
fstpl
xchg
mov
adc
mov
mov
fldenv
add
jne
or
lods
adc
or
stos
jecxz
jl
mov
mov
xor
dec
mov
jbe
sub
das
inc
hlt
lret
popf
mov
jp
or
adc
push
dec
push
push
mov
jl
xor
les
lds
es
push
ss
test
rorb
add
fstpt
push
push
fldenv
sbb
xchg
xor
pusha
mov
jmp
xchg
test
nop
lcall
pop
and
mov
bound
int3
xor
jb
test
xor
or
xchg
or
mov
lcall
insb
xlat
xchg
daa
aad
xlat
cwtl
mov
sahf
and
inc
mov
mov
sbb
push
es
xor
test
icebp
addl
dec
and
orb
mov
cld
xchg
aaa
mov
inc
orl
add
inc
sub
mov
outsb
mov
cmpsl
int3
fsubr
cli
inc
sbb
negb
negb
lcall
arpl
xor
test
push
fdivs
xchg
xchg
cltd
call
iret
mov
jnp
cmpsl
call
jp
push
push
or
iret
pop
mov
and
cmp
lds
jbe
push
js
push
mov
add
lret
jmp
ljmp
popf
sarl
xchg
clc
mov
fidivrs
xchg
add
jns
ljmp
mov
xchg
pop
adc
mov
pop
jl
les
test
mov
cli
mov
rcr
aad
into
cmp
push
fidivrs
add
dec
jecxz
imul
jmp
aaa
xchg
cmp
mov
stos
movsl
inc
push
dec
pop
sbb
mov
cltd
pop
push
mov
pop
push
sahf
dec
repnz
fidivl
jecxz
lahf
jmp
push
es
stc
das
xchg
fstpl
cwtl
fwait
cli
xchg
mov
mov
dec
imul
jle
cmp
jo
sbb
adc
adc
loope
sbb
lret
pop
mov
cmp
scas
fiadds
sbb
mov
sbb
inc
aad
jbe
xor
mov
mov
lahf
mov
enter
xor
test
stc
insb
dec
nop
dec
xchg
fs
lock
int3
lods
xchg
stos
sbb
xchg
and
lret
stc
or
push
rcl
mov
ljmp
cmpsl
push
icebp
push
movsl
and
fcmove
mov
add
aas
adc
imul
cs
and
pusha
fwait
mov
inc
mov
out
cmpsb
xchg
pop
add
cmp
jmp
sbbl
xor
dec
push
fadd
hlt
mov
stc
aas
sub
cltd
loop
xor
ja
imul
cmp
mov
push
fs
push
dec
rcrb
sub
or
jbe
test
push
sbb
jb
mov
xor
call
aad
jae
xor
frstor
add
fstpt
cvtps2pd
into
mov
pop
daa
and
repz
bound
mov
mov
movsl
xor
in
outsl
enter
test
inc
fld
arpl
imulb
pop
adc
fiaddl
ljmp
roll
fwait
ds
or
in
jmp
es
stos
dec
mov
shl
imul
daa
movsb
mov
push
and
mov
push
in
pop
leave
test
xlat
lret
jl
test
cmp
sub
lock
jo
or
int
sub
ret
aam
sbb
or
pusha
or
int3
lret
jmp
pop
push
add
ja
jb
stc
add
push
xor
nop
sbb
pop
pop
xor
adc
repz
ds
cmp
loop
mov
dec
mov
pop
push
and
jae
cwtl
xor
jne
or
mov
dec
loopne
lret
test
outsb
pop
fistl
jl
je
les
movsl
scas
inc
mov
cwtl
mov
mov
pop
mov
and
mov
mov
insb
sub
xor
dec
shll
jns
pushf
enter
shlb
imul
loopne
cmpsb
and
jb
fdivs
decb
femms
xchg
ja
push
call
or
adc
imul
repz
insb
lret
sbb
cmpsl
dec
pop
push
imul
in
jnp
sti
push
notb
mov
mov
mov
pop
mov
stc
loope
outsl
les
xchg
ljmp
outsb
dec
jns
cmpsl
sub
lea
pushf
xchg
out
push
lods
mov
inc
xchg
jo
jnp
cli
nop
adc
jge
push
sar
push
cmpsl
fnstsw
jp
xor
push
pop
shll
cmpsl
gs
mov
int
sub
sbb
je
xor
in
addl
inc
pop
movlps
and
stos
mov
ret
rolb
icebp
adcl
scas
pop
adc
sti
push
rcll
pusha
xchg
sti
in
fisubrl
dec
call
aad
cli
lahf
call
add
rolb
imul
mov
rcll
jge
js
dec
daa
inc
and
into
out
or
and
and
test
sbb
sbb
xor
ljmp
adc
mov
push
out
out
push
jne
sub
stc
cmp
xchg
es
push
clc
ja
dec
mov
std
add
jo
imul
mov
jns
push
mov
sub
jmp
rcrl
add
mov
add
ljmp
mov
cmp
sub
aad
xor
orl
jnp
inc
test
out
ret
into
imul
jle
into
cs
pusha
adc
mov
js
ficoms
cmp
and
add
or
dec
enter
dec
nop
push
and
mov
clc
jge
push
push
xchg
mov
jl
jle
sahf
loop
inc
jae
xchg
into
push
adc
or
sbbl
and
adc
inc
lock
cwtl
daa
je
mov
cmp
nop
sbb
cmp
push
cltd
or
notl
cmp
idiv
ljmp
and
add
fnstsw
xchg
mov
dec
mov
xor
rclw
or
clc
push
cltd
adc
movsl
fisubl
inc
jae
into
movsl
sub
xchg
mov
lea
jnp
sbb
mull
and
std
enter
and
cmpsb
icebp
pop
lret
xchg
mov
sbb
scas
dec
ljmp
ja
jb
cmpsb
testb
loope
movsb
shrb
loopne
dec
xor
jle
pop
push
js
cmp
sbbb
adc
adc
xchg
cmp
nop
xor
sub
and
adc
push
pop
push
and
and
pop
lret
movb
cld
mov
popa
dec
and
jp
fdivl
loop
dec
mov
aam
out
aad
in
push
dec
ja
test
insl
test
and
xor
test
in
into
sbb
cs
ret
jb
push
mov
pop
fsubl
inc
in
test
loopne
aaa
xor
enter
stc
subl
mov
xor
sbb
jecxz
adc
cmp
leave
in
inc
aas
or
cmp
imul
in
arpl
jbe
push
mov
test
dec
dec
out
inc
sub
ret
and
test
pop
mov
jp
hlt
sbb
es
sub
test
repz
add
and
nop
aaa
adc
into
incl
mov
inc
hlt
ret
test
adc
fwait
add
push
stos
loop
mov
mov
icebp
ljmp
in
mov
aad
fucomip
out
add
or
jp
std
icebp
xor
pop
mov
call
sub
ret
jo
inc
pop
inc
jb
pop
mov
dec
lods
adc
inc
jb
pushf
or
mov
rolb
and
xor
push
cmp
xchg
in
xchg
or
arpl
scas
adc
jbe
push
add
mov
sbb
outsb
in
or
push
dec
dec
and
push
sbb
push
pushf
xor
cmp
inc
imul
fisubrl
add
aad
mov
xor
xor
leave
ljmp
andb
out
mov
sbb
lds
stc
pop
sahf
test
inc
sti
push
imul
and
cmp
jns
or
arpl
mov
sbb
aas
stos
rorl
mov
nop
cmpsb
sarl
adc
cwtl
or
not
test
adc
push
pop
testl
xor
out
mov
ljmp
int
or
clc
xchg
in
in
mov
out
pop
outsl
xor
or
jns
lahf
add
pop
dec
sbb
insl
fisttpll
jg
xchg
lea
push
stc
lock
pop
push
sbb
adc
test
lock
push
enter
and
sbb
xchg
sbb
jnp
jne
push
das
and
jns
mov
xchg
xchg
test
mov
mov
xchg
inc
pop
mov
lods
push
jmp
mov
lds
pop
cmpsb
ret
aad
jb
cwtl
into
stos
jo
add
mov
jg
push
into
mov
dec
inc
mov
inc
sti
frstpm(287
rclb
jge
in
dec
mov
mov
xchg
fs
pop
ljmp
adc
addr16
inc
hlt
hlt
int
pop
inc
sbb
and
lods
cs
jmp
shlb
mov
add
fwait
rol
push
lret
fnsave
adc
sub
mov
pusha
add
pop
xchg
sub
dec
ljmp
push
std
push
and
cli
jo
std
aam
xor
xchg
aad
sbb
jno
sti
addb
push
dec
je
jmp
add
mov
jnp
push
fwait
ret
add
and
out
les
sub
sub
test
jnp
int3
test
add
pop
das
xor
xchg
cwtl
pop
sub
clc
cmp
out
enter
and
decl
and
lods
lds
ljmp
adc
rolb
mov
and
and
test
mov
mov
iret
hlt
inc
lds
int3
sub
jns
add
dec
xlat
mov
test
push
add
sbb
mov
lea
jo
sbb
int
mov
cmp
leave
mov
ljmp
push
iret
arpl
xor
mov
daa
shll
mov
jns
out
and
xlat
xorl
and
mov
in
adc
and
popf
jmp
aad
insl
es
push
push
jmp
in
sub
stos
enter
mov
push
push
mov
cmp
or
enter
cmp
fnstenv
add
jbe
pop
lcall
lea
xchg
je
or
test
outsb
cs
in
xchg
imul
es
in
ljmp
mov
inc
scas
fwait
jmp
sub
mov
mov
call
push
sbb
aad
mov
pop
mov
incl
mov
xchg
sarb
sbb
fists
or
mov
push
add
and
cmpsl
jge
movsl
push
mov
mov
inc
icebp
popa
loope
mov
out
pop
je
sub
sbb
xor
xchg
add
inc
loop
mulb
data16
jo
xorl
jge
jns
xchg
call
mov
fldl
pop
add
mov
ret
cmpsb
inc
cmp
loop
add
and
shrl
into
mov
pop
cs
and
lds
add
mov
imul
stc
in
xchg
inc
xlat
lahf
xchg
sbb
jl
and
push
mov
pop
out
push
adcl
fs
adc
jno
clc
movsb
loope
mov
movsl
nop
xchg
cli
sahf
adc
aam
add
sub
out
iret
idivb
imul
xchg
incb
cwtl
mov
lea
in
or
or
xorl
iret
xor
lods
sahf
push
cmp
xchg
mov
adc
xor
xchg
cltd
xchg
cs
cmp
push
or
in
or
xor
add
pop
ret
xchg
mov
in
lods
fistpll
cmc
xchg
fnstcw
jne
and
inc
pop
push
jns
or
push
sahf
push
icebp
sarb
sbb
adc
jle
xor
cmpsb
jl
push
jnp
pop
pop
fcomi
jnp
rcll
test
les
cmp
push
push
push
in
push
mov
fwait
inc
sbb
out
dec
add
fs
pop
xchg
and
jmp
lret
add
add
or
sbb
xchg
xchg
aam
mov
or
or
push
add
mov
push
jae
inc
or
jae
js
fistpll
imul
mov
syscall
aam
add
xchg
inc
inc
push
sbb
je
jmp
fldcw
lods
ja
fsubp
mov
lahf
push
ljmp
movsl
cmpb
pop
out
add
stos
scas
xchg
jae
leave
les
or
popa
push
jo
dec
add
adc
cmp
sub
icebp
into
xor
add
mov
jo
add
int3
xchg
popf
pop
and
xchg
shll
mov
insl
jo
pop
in
ljmp
das
and
mov
leave
bound
adc
jb
sahf
mov
enter
lea
push
mov
fisubs
cwtl
lcall
inc
mov
cwtl
ret
mov
icebp
fdivr
cmp
add
ret
cmpsl
pop
xchg
cs
movl
dec
and
aas
in
push
jg
shrb
repz
mov
xor
inc
or
fcompl
loop
push
sub
ret
shlb
popa
xlat
push
mov
ficoms
mov
cmpsl
pushf
push
mov
jecxz
lret
mov
adc
hlt
lds
shlb
adc
into
inc
aaa
push
lock
xchg
out
pushf
fsubs
repnz
outsl
lahf
cmp
fucomi
arpl
mov
mov
and
mov
adc
xor
or
out
sahf
jmp
lret
ja
mov
sahf
testb
scas
sub
sub
movsl
add
xor
orb
out
fmuls
dec
subb
out
enter
mov
or
xor
and
push
sub
call
mull
int
inc
jb
incb
mov
icebp
cmp
xor
call
cld
pop
cmpsl
icebp
movsb
andb
mov
in
sbb
cli
sub
sbb
bound
loope
movsl
sub
repnz
cli
mov
dec
xchg
fisubrs
mov
and
sub
es
adc
and
decl
or
jns
mov
inc
ljmp
orb
inc
pop
scas
and
out
rcr
xchg
shl
jbe
inc
inc
icebp
scas
nop
add
es
xchg
push
sub
pop
fwait
xlat
jno
das
jo
in
test
test
dec
sbbl
pop
sahf
mov
insl
jp
dec
add
in
mov
jp
adc
pop
sbb
mov
lret
cmp
pushf
or
pop
mov
add
pop
dec
fadd
mov
pop
daa
xor
mov
movsl
pop
jl
rolb
mov
mov
xchg
mov
sbb
adc
shll
jne
xchg
push
jg
push
add
mov
push
mov
add
and
enter
leave
addb
out
imul
in
sub
sub
icebp
fnstcw
int3
xor
push
adc
div
and
lock
sub
mulb
fsub
ret
nop
leave
jns
pop
jbe
daa
jecxz
xchg
jmp
jle
or
data16
sub
jbe
xor
add
xor
loop
pop
lock
and
int
or
shll
or
push
cwtl
push
xor
sbb
xchg
dec
test
cmp
cmp
test
add
imul
lods
add
repz
push
jne
dec
jmp
repnz
pop
and
in
inc
and
push
repnz
xchg
or
test
sbb
pop
push
cmp
mov
mov
jg
aad
lods
jo
push
cmc
in
fs
int
and
addr16
test
jg
push
into
xchg
ret
cs
jge
stos
aad
mov
sub
inc
pop
push
cmp
sub
and
fiaddl
push
push
dec
mov
insb
lcall
xor
jmp
popl
adc
cli
call
lret
inc
mov
hlt
lock
ljmp
and
jo
sub
push
mov
mov
shl
mull
call
inc
mov
sahf
jp
add
lahf
cltd
loopne
loope
cmp
cld
movl
mov
imul
outsb
aaa
mov
pop
pop
mov
or
inc
outsb
lret
aas
in
cmp
scas
cmp
xor
xchg
sti
push
ljmp
push
clc
pop
push
mov
sbb
divl
cmp
cmpsb
sbb
out
mov
xchg
call
dec
flds
sub
mov
mov
sub
xchg
mov
mov
gs
xor
aas
push
pop
jne
les
or
push
or
inc
inc
rorb
cltd
push
lahf
jmp
ds
xor
add
dec
push
lods
mov
lods
sbb
in
jge
ret
push
lcall
pusha
dec
add
jg
data16
and
sub
mov
rol
cmp
mov
jmp
push
pop
xchg
loope
jnp
push
sti
xchg
mov
inc
mov
lea
sbb
xchg
inc
mov
fnsave
ffree
arpl
xorb
jge
mov
and
les
mov
add
mov
xchg
sti
mov
std
add
idivb
movsl
addl
in
divb
push
popa
jle
in
xchg
cmp
push
fcomp
fs
and
push
lcall
and
add
or
mov
in
sarb
repnz
test
sahf
scas
lods
cli
sbb
or
scas
xor
sub
sub
cmp
push
dec
shlb
cmp
movsb
add
fmull
ljmp
out
add
xchg
mov
lcall
cmp
add
int3
into
clc
lret
mov
pop
loope
add
sbb
je
ret
jl
lahf
movsl
in
in
xlat
adcb
mov
cli
iret
imul
iret
pop
xor
das
mov
lods
or
into
sub
mov
dec
test
ja
fcomip
xor
sub
mov
push
sbb
rorb
fstpt
imul
pop
gs
cli
xchg
and
push
cs
jg
and
es
add
stc
lds
or
mov
ds
adcb
mov
add
pop
cmpsb
cld
inc
scas
lret
test
pushf
mov
inc
roll
inc
hlt
inc
leave
inc
adc
lods
xchg
fnstsw
cwtl
int
int3
out
pushf
enter
adc
add
cmpsb
leave
pop
jne
lods
cmp
sub
ficoml
add
push
mov
and
push
popa
pop
outsb
imul
jmp
gs
insl
les
cld
jbe
mov
xchg
xor
mov
xor
add
mov
xor
xchg
lret
int3
cmp
xchg
cmp
jb
movsb
out
test
insl
dec
loopne
mov
in
or
ret
pop
sub
mov
in
sub
loope
outsl
dec
out
lock
push
lods
xlat
fwait
cmp
scas
nopl
jne
push
sub
out
orl
xchg
enter
ja
xor
mov
test
mov
cmc
rcrl
les
insl
repnz
fldt
push
xchg
push
addr16
pusha
aas
lods
jb
lret
shrl
shlb
lahf
inc
pop
sub
dec
rcll
dec
xchg
shr
cmp
cli
push
stos
dec
rorl
push
xor
ret
repz
pop
push
inc
mov
hlt
out
jecxz
inc
cs
cmp
xchg
or
inc
cmpsl
lret
pop
in
fwait
push
cwtl
movsb
fmuls
mov
ja
pusha
sahf
inc
jb
fsts
xor
cwtl
sbb
add
xchg
sbb
sub
in
shrb
xor
push
cmpsb
sbb
mov
or
shlb
fdivrs
out
outsl
xor
jno
adc
ja
and
aam
ret
jg
pop
gs
and
jp
out
mov
xchg
mov
jne
sbb
loop,pt
cltd
dec
sti
out
in
lahf
adc
jle
cltd
orb
sbb
mov
leave
loopne
sbb
push
xchg
mov
mov
insb
and
push
jle
lahf
in
arpl
es
cmp
xor
push
gs
ret
or
insl
inc
clc
pop
sarl
dec
sbb
xor
xor
mov
inc
pusha
push
inc
add
cmp
xor
jle
fldt
ss
add
mov
xor
mov
xchg
xor
shl
mov
cwtl
nop
and
adc
xor
scas
xchg
cli
pop
push
fwait
sahf
sar
jae
adc
fistpll
inc
xchg
mov
xor
or
jg
mov
repnz
xchg
cmp
and
fsubrs
adc
addb
loop
jnp
xchg
orb
mov
out
jecxz
cmp
jp
cs
movsl
mov
mov
cmp
jne
dec
push
lcall
adc
fistpl
into
cmp
xchg
or
xor
rclb
movsb
add
fstpt
gs
cmpb
call
leave
push
mov
arpl
cmp
and
mov
xor
fstpl
std
out
mov
jo
sbb
push
xchg
mov
les
push
push
sahf
jbe
mov
in
pushl
sahf
dec
icebp
jns
mov
out
fisubl
sbb
jecxz
dec
hlt
xor
pushf
lret
xor
icebp
xchg
add
loop
xor
xchg
push
xchg
das
inc
add
iret
xchg
es
dec
mov
sub
push
add
out
cmp
mov
cmp
sub
sahf
pop
lret
lcall
mov
mov
cltd
popa
push
inc
sbb
rorl
pop
or
sbb
andl
inc
aad
push
add
cmp
push
sub
out
mov
aaa
add
popa
std
shrb
mov
sbb
add
xchg
nop
pop
hlt
jmp
dec
pop
sahf
push
fdivl
adc
or
inc
out
xchg
jb
mov
jg
popa
sub
adc
cwtl
jns
loopne
mov
push
mov
leave
aaa
popa
mov
sub
ljmp
subb
inc
push
xor
repz
inc
jae
xor
int
or
cmpsl
fcmove
cmp
shl
hlt
adc
cmp
loopne
lret
mov
add
mov
jae
push
mov
scas
dec
stos
jl
cmp
stos
iret
xor
dec
lods
cmp
push
lahf
mov
daa
and
push
leave
loope
adc
js
jne
ja
mov
mov
and
mov
mov
andb
mov
or
adc
pop
mov
mov
mov
mov
inc
fcoml
jge
out
jno
in
sbb
cli
leave
out
imul
xchg
pop
test
rcl
les
into
data16
push
cltd
popa
xchg
inc
int3
push
inc
rcll
fmuls
xchg
shll
fdivs
or
pop
cltd
in
or
mov
int
push
jns
sub
dec
sbb
je,pt
inc
cld
cmpsb
jg
rclb
mov
xor
rcrb
orb
xchg
adc
scas
jg
sub
dec
rcll
push
and
stc
jo
paddw
lcall
push
cld
adc
push
mov
xor
adc
aad
inc
jmp
outsb
fbstp
sbb
aaa
jae
xor
sub
decl
mov
add
add
mov
scas
and
dec
dec
dec
adc
mov
adc
popf
gs
iret
mov
sbb
mov
mov
das
sbb
les
xor
daa
mov
inc
cmpsl
xchg
fstps
add
push
test
fwait
xchg
out
xlat
sub
add
ffree
rcrl
stos
outsl
jg
cltd
xchg
push
add
negb
shlb
dec
dec
outsl
insb
push
stos
or
mov
and
testl
mov
ljmp
in
sub
sub
in
std
fwait
test
lret
ret
fsubrl
lods
fidivs
cmp
push
jns
adcl
out
test
and
pop
mov
xor
sub
andb
pop
mov
addr16
adcb
ss
and
pop
mov
push
flds
cmp
jge
add
out
outsl
pop
inc
mov
inc
ror
mov
sbb
cltd
lods
xor
gs
adcl
add
mov
push
js
mov
test
mov
or
inc
push
push
sti
push
ljmp
push
jecxz
xor
mov
aaa
es
mov
cltd
sub
pop
subl
daa
push
out
mov
inc
fldenv
gs
imul
outsl
ret
inc
sub
dec
aam
popa
or
mov
ja
pop
add
dec
sahf
cmp
jnp
sti
mov
mov
lds
into
int3
jle
cmpsb
adc
nop
push
mov
dec
cmp
sbb
out
dec
dec
sbb
xor
idivl
xor
call
adc
push
sti
mov
outsb
xor
add
test
xchg
xchg
daa
dec
push
and
js
mov
in
aam
push
xor
stos
jbe
dec
out
sub
fwait
xchg
es
ror
test
push
gs
jno
in
mov
cmp
mov
shll
ljmp
filds
rcrl
test
addr16
mov
adc
in
cmpsl
call
shrb
jge
sub
push
cli
push
xchg
insb
push
insb
test
out
pop
jp
int
cli
mov
jp
xor
out
xor
js
sbb
cmpsb
insb
mov
in
loope
nop
mov
test
rcll
mov
mov
add
pop
loope
iret
arpl
push
int
sbb
mov
adc
outsl
add
jmp
cmp
pop
outsl
int3
ja
cmp
dec
fstpt
sub
inc
movl
add
stos
fimull
adc
and
lret
cmc
cmpsb
push
stc
or
lea
neg
and
sti
jle
cmp
sub
sub
sub
imul
push
sbb
cmp
jno
sbb
adc
addb
cwtl
or
loop
sbbb
xor
test
pop
xchg
cmp
popa
push
fwait
outsl
inc
sub
ret
lds
imul
cmp
and
mov
in
mov
in
clc
xor
cli
gs
adc
push
test
add
jmp
pop
stc
mov
push
jle
cmc
fbstp
imul
dec
add
xor
lahf
test
pop
cmp
dec
push
sahf
mov
push
jg
cli
mov
pushf
pusha
sti
jl
and
shlb
xor
jmp
or
xchg
mov
mov
push
insl
xchg
test
sbb
xor
inc
stos
pop
push
push
push
adc
push
mov
movsb
movsl
inc
int
adc
or
dec
mov
dec
jle
cmpsl
out
mov
adc
sub
dec
loope
xchg
xchg
and
test
dec
mov
xchg
mov
cmp
xlat
out
test
mov
bound
inc
or
fcoml
cli
jne
inc
xor
pop
rol
push
out
popf
sub
jae
mov
and
pop
pop
push
inc
jecxz
sub
lret
inc
sbb
in
in
inc
mov
xchg
sub
sarl
pop
inc
stos
push
jns
stos
in
xchg
lds
pop
mov
mov
pop
sbb
add
arpl
jl
push
push
mov
out
push
ret
or
sarl
jbe
jae
fs
outsb
push
mov
push
lods
xor
inc
ret
dec
mov
jmp
adc
aas
insb
or
push
cli
mov
rcrl
cs
jbe
push
pop
movl
stos
pusha
test
icebp
push
cmpsb
mov
mov
cmpl
pop
jl
mov
mov
cmp
adc
mov
dec
fldl
push
decl
pop
sub
adc
xlat
lods
inc
inc
insb
xor
push
mov
jl
mov
push
and
sbb
les
jmp
sub
test
out
lea
xor
or
jp
popa
pusha
jb
out
sub
jbe
pop
flds
jns
push
bound
mov
and
push
out
adc
xor
mov
loop
ffreep
rcrl
lret
clc
sub
movsl
adc
popa
mov
fsts
and
push
pop
out
scas
aaa
mov
push
dec
call
mov
push
mov
pusha
pop
dec
push
clc
sbb
dec
icebp
jecxz
jns
popf
call
rcrl
sub
aas
sbb
xchg
fadds
jnp
dec
xor
xor
push
insl
cmp
xchg
mov
push
pop
pop
lahf
ret
sbb
dec
dec
lcall
push
pop
sahf
mov
xlat
jmp
inc
dec
jnp
push
sbb
mov
cmp
jg
lahf
push
loop
cmp
ljmp
mov
insb
sub
jge
sub
outsb
repnz
pop
inc
mov
ja
or
repnz
lea
sub
sti
ret
mov
lods
in
push
cmp
jo
jae
adc
push
and
sbbb
mov
dec
push
push
sbb
mov
push
sahf
call
rorb
pop
dec
mov
pusha
call
js
adc
int3
cs
add
stc
and
xchg
push
cs
je
cmpsl
push
gs
insl
pminsw
incb
int3
and
add
cmp
cmpsb
cmp
aaa
mov
mov
mov
cmp
frstor
icebp
jb
in
cmpsb
jmp
and
orl
dec
sub
scas
lea
shrb
movsl
fildll
and
ja
push
add
inc
or
sbb
mov
or
push
pop
inc
sbb
je
add
push
cli
or
lods
ds
repnz
shll
xchg
repnz
outsl
xlat
pop
movb
lahf
mov
xor
jns
push
jmp
dec
mulb
ljmp
rorb
fld
dec
mov
icebp
mov
repz
negb
rcrb
xchg
pop
rcl
int
frstor
aaa
mov
mov
stos
jne
int3
cld
into
inc
notl
repz
or
lock
scas
aaa
xor
je
loopne
in
cmp
int
add
fwait
rorl
xchg
aaa
jmp
icebp
in
cmp
jbe
push
movsb
push
rcl
mov
fiaddl
out
popf
xchg
dec
cmp
and
dec
jno
and
sub
add
int3
fmul
pop
in
push
fisttps
mov
mov
xor
jno
shrl
out
sbb
xchg
jae
aad
cld
cmp
mov
pop
or
mov
cmpsb
lret
push
mov
and
dec
cmc
mov
pop
jle
and
push
fidivs
xor
cmpsl
xor
shll
sti
pushf
or
js
jge
jae
into
and
mov
mov
cmp
inc
in
jb
xchg
mov
aam
call
and
jle
add
sub
pop
xchg
insl
dec
cmpsb
movsl
js
lods
and
sub
neg
cltd
push
shlb
jnp
movsl
loope
inc
fcmovnbe
pop
enter
sbb
and
pusha
or
shll
and
adc
or
fidivs
and
ja
push
xchg
das
dec
subb
sbb
sub
cmp
jo
in
ds
repnz
in
data16
lret
fidivrl
mov
sbb
mov
das
adc
inc
xchg
bound
adc
push
enter
pop
xchg
jne
test
push
mov
jle
add
int3
mov
mov
mov
jl
mov
mov
and
dec
inc
into
xchg
addb
stos
pop
je
sahf
ret
jmp
inc
movsl
jae
sub
and
cltd
outsl
inc
dec
and
subl
sbb
into
sbb
daa
vmovd
int
mov
fdivrp
data16
push
in
mov
sub
push
and
xchg
je
xor
cmpsb
sub
inc
fisubrs
rcll
inc
mov
add
mov
fs
icebp
cmpsl
jmp
push
outsb
and
shrb
sbb
mov
sub
sub
popa
leave
jno
or
stos
lahf
mov
jecxz
cs
inc
or
adc
sti
or
es
or
gs
cli
xor
inc
mov
and
outsb
push
fldenv
sti
or
inc
insl
pop
lds
dec
adc
data16
call
ds
clc
jo
movsl
mov
insl
sub
insl
in
out
jae
lods
and
popf
sub
bound
ds
jmp
sbb
lock
cmp
out
add
mov
loopne
fwait
lds
xchg
xor
mov
jmp
pop
test
dec
adcb
out
xor
push
hlt
add
jno
es
decl
pop
outsb
push
xor
and
fistpll
sub
cmp
sti
push
sub
xor
mov
sti
pop
push
pusha
stos
sbb
jmp
popa
pop
iret
mov
xor
add
stc
sti
int
movsb
mov
or
or
in
pop
lock
pop
push
jo
test
sbb
adc
les
push
push
push
lods
and
popa
or
xor
or
pop
lret
and
clc
mov
addr16
or
es
mull
gs
sub
and
insl
xor
fwait
or
xchg
cmpl
cmpsb
cmp
add
xor
icebp
add
std
or
sbb
stc
xlat
faddl
dec
sarb
ss
or
dec
mov
ds
mov
inc
xchg
mov
mov
insb
adc
mov
add
add
push
loop
outsl
jne
cli
rcrb
mov
out
and
mov
sbb
ret
mov
ret
push
je
rep
adc
cmp
mov
mov
mov
pop
mov
adc
xchg
or
xchg
xor
mov
jae
add
add
fiadds
scas
adc
sub
sub
inc
mov
or
arpl
fstpt
lods
mov
mov
aad
test
data16
jno
jg
fldl
aas
ja
xor
sbb
out
pop
outsb
stos
sbb
adc
sub
mov
sbb
lock
add
cwtl
push
mov
out
icebp
in
jecxz
jge
jg
pop
adc
jae
call
sbb
popf
hlt
pop
pop
fdivrs
xor
aaa
aad
inc
mov
xchg
or
add
ret
mov
mov
cli
and
pusha
mov
xchg
pop
jecxz
sbb
outsb
push
cmpsl
nop
nop
loopne
jo
insb
mov
mov
lcall
loope
and
inc
shl
into
mov
lods
jmp
xchg
inc
sbb
or
push
lods
cmp
add
outsb
push
clc
cld
xor
jge
cmc
inc
ret
dec
inc
or
lods
outsb
mov
jae
push
xlat
push
and
cld
das
cmp
scas
xchg
cmp
xor
scas
xor
xchg
sub
lds
clc
icebp
dec
testb
jmp
jno
xchg
dec
push
mov
ret
jmp
inc
fcomp
xchg
das
pushf
mov
jmp
mov
sbb
fisubl
idiv
ja
push
int
data16
or
stc
andb
int3
int3
fdivrl
imul
lods
jp
test
mov
sbb
stos
das
cmp
push
cmovbe
sbbl
mov
repz
ficoms
pop
in
push
int
xchg
push
je
ss
sub
shrl
icebp
push
aad
mov
mov
jmp
out
jmp
rorl
inc
inc
xchg
xor
dec
pop
mov
flds
add
dec
popf
jp
add
fildll
inc
adc
xor
out
in
xchg
xchg
dec
xchg
fiaddl
push
xlat
add
dec
xor
loopne
lret
and
mov
loop
jo
scas
dec
mov
xlat
orl
hlt
sahf
outsl
dec
cmpsl
sub
into
outsl
mov
int3
mov
andb
cmp
je
into
shll
cmpsl
mov
xor
out
jo
add
gs
in
push
dec
mov
arpl
jo
shll
cmp
int3
outsl
ds
negl
nop
fimull
ret
out
into
push
ljmp
mov
dec
push
movsb
int3
stc
jg
insl
dec
cmp
insb
xor
adc
mov
xor
inc
dec
clc
into
js
add
cmp
cmp
adc
in
dec
lea
mov
addb
outsb
pop
icebp
std
dec
pop
push
int
pop
inc
add
jae
jb
jo
or
repz
cli
dec
clc
scas
xchg
in
xor
and
push
xor
leave
ja
mov
pop
mov
jl
addr16
pusha
es
repnz
movsb
subl
mov
mov
xchg
adc
mov
repnz
and
jl
in
sbb
icebp
cmp
or
lahf
iret
xchg
sub
cli
xchg
stos
sahf
shrb
inc
div
out
out
or
dec
add
lods
je
and
inc
ja
daa
push
int3
or
xchg
test
fwait
push
rcrb
cmp
xchg
sar
test
cmpsl
sbb
repnz
mov
mov
xchg
sti
inc
and
push
push
push
xchg
movsb
xchg
sub
das
imul
int
subl
dec
add
out
xor
mov
pusha
out
bound
loop
pop
and
pop
in
sarl
out
push
cmpsb
xor
mov
jl
stos
js
lods
shrb
dec
or
data16
push
xchg
test
xchg
pop
mull
lret
clc
dec
xor
sti
test
inc
scas
addb
enter
popa
xor
pop
out
ljmp
pusha
out
push
or
and
inc
mov
mov
clc
popa
mov
ret
ljmp
jmp
xor
mov
rorl
les
mov
bound
push
add
dec
cmc
fwait
cmp
pop
cltd
hlt
push
scas
mov
add
push
push
mov
ret
pmulhw
outsl
and
cltd
sbb
and
xor
mov
cmp
inc
loope
movsl
inc
xchg
mov
lcall
ja
adc
shlb
xchg
mov
sti
inc
hlt
rol
cli
jge
xchg
and
sbb
mov
insl
arpl
xor
out
pop
cmc
lock
cwtl
rcr
fldt
mov
add
jp
cmp
divl
pusha
push
mov
xchg
adc
in
fcomi
ljmp
add
mov
or
shll
fisubs
sbb
inc
stc
aaa
add
lahf
add
xor
imul
xchg
pop
sub
and
xchg
into
mov
sub
cmp
lret
in
shl
xchg
jb
mul
test
xchg
sbb
mov
test
inc
lcall
mov
pop
mov
and
xchg
rol
jle
mov
pop
sbb
shrl
fmull
jl
in
mov
lea
jbe
jl
std
xor
sub
mov
int3
cmp
mov
fisttpll
xor
jge
ljmp
fcoml
jno
sbb
int3
pop
fsubrl
aam
and
insl
adc
test
push
mov
in
mov
out
mov
jl
sbb
or
add
es
cmp
and
aaa
mov
cmovg
lods
inc
sub
cld
ror
movsb
out
xor
scas
cmp
mov
xor
stos
mov
insb
cmpsb
mov
mov
sub
out
sub
in
hlt
pop
xchg
mov
inc
mov
mov
cmc
movsb
imul
jge
push
xor
mov
mov
stos
sbb
add
add
xor
push
test
sbb
xor
fcomi
fnclex
inc
xor
in
loopne
arpl
fwait
inc
mov
fimuls
std
sub
cmpsb
cmp
and
test
imul
mov
ror
out
flds
vmread
fisttpl
cmp
stos
add
movsb
push
or
daa
sbb
stos
stos
fwait
movsl
loopne
std
ja
dec
es
fidivrs
std
mov
jge
push
add
jo
jb
dec
inc
daa
cmp
push
shrb
dec
add
clc
cmpsb
jb
fisubrl
iret
lea
mov
xor
sti
sub
int3
and
in
cmp
sbb
inc
sub
in
mov
ss
add
pop
cmpsl
xchg
dec
inc
leave
sbb
scas
in
cmp
movsb
cmp
and
test
push
inc
adc
xchg
pushl
shrl
xchg
dec
or
xchg
les
popf
add
and
aad
xor
in
and
cmp
mov
or
cmp
sarl
add
shrl
pop
inc
ja
std
dec
push
push
gs
pop
test
insb
mov
cltd
xor
stos
jmp
or
les
jne
jmp
in
pop
pop
incb
and
lahf
outsl
mov
icebp
imull
and
shll
xchg
stos
repnz
pop
mov
or
outsb
mov
mov
adc
and
add
clc
pop
inc
inc
aad
je
dec
mov
and
adc
out
jp
dec
push
jne
pop
and
inc
frstor
jmp
fmull
dec
push
aam
pop
pop
or
fiaddl
into
faddl
std
mov
xor
push
insb
mov
inc
cli
mov
in
and
add
mov
mov
push
push
call
test
mov
mov
mov
stc
scas
mov
mov
cmp
pop
mov
sbb
pop
or
add
pop
mov
nop
cs
stos
movl
pushf
stc
fcoml
enter
mov
cmp
mov
addr16
lock
cmpsb
sub
dec
cmc
fisubs
out
das
mov
in
adc
inc
pop
roll
adc
cli
dec
fstl
jb
jmp
inc
dec
lods
sub
dec
fsubl
sub
movsl
ljmp
stos
sbb
xor
or
and
dec
mov
push
stos
push
out
dec
adc
cmp
int3
je
icebp
cmp
push
aas
jno
cmp
iret
sub
mov
mov
and
and
insl
ret
mov
shlb
or
movsb
lcall
pop
sbb
repnz
divb
xchg
sahf
fs
stos
out
push
and
mov
fidivs
pop
aam
in
fcomps
fs
aaa
setae
jno
lret
mov
movsl
pusha
push
push
jb
clc
mov
addr16
aaa
arpl
jno
pop
add
xchg
lods
inc
mov
loop
fistpl
and
clc
add
cmp
inc
pop
jbe
scas
test
mov
jb
jo
mov
cmpsl
fcmovb
lcall
and
int
xchg
lods
jb
push
les
adc
fisttpl
repnz
jp
mov
cli
xchg
add
imul
ret
sbb
stos
insb
pusha
push
mov
in
sbb
and
adc
push
repz
pushf
mov
add
divb
pop
data16
mov
mov
pop
lcall
cltd
pop
adc
movsb
or
test
rolb
pop
adc
and
cmp
cwtl
cmp
jns
std
push
and
adc
inc
xchg
inc
in
xor
xchg
sub
push
fdivs
mov
cmp
jb
je
mov
in
xchg
dec
dec
push
mov
or
mov
add
mov
sbb
cli
dec
mov
push
inc
imul
lret
into
dec
into
xor
std
filds
pop
lcall
lds
orb
mov
push
cmpsl
clc
xchg
test
loop
pop
mov
pop
xor
es
cmp
ds
iret
js
pop
push
insl
test
repz
xor
pop
pop
xchg
adc
lret
jl
pop
mov
push
ds
insl
rcl
or
pop
push
xor
add
test
orl
aas
pop
fldenv
xchg
sarl
imul
adc
push
stos
outsb
mov
cmp
cmp
inc
push
inc
xor
or
insb
push
popa
clc
and
sbb
cmp
repz
testl
and
xor
add
pop
testl
into
daa
scas
add
and
lcall
xchg
stos
out
or
dec
test
ret
jle
rcrl
popf
add
stos
fs
adc
add
scas
sub
and
xchg
movl
leave
jo
push
dec
jg
dec
in
xchg
push
dec
mov
sbb
js
iret
xchg
int
out
rcll
inc
in
sbb
adc
xchg
dec
add
lods
add
dec
jmp
or
repz
shrb
sub
pop
jecxz
pop
sbbl
dec
pop
push
pop
xchg
xchg
jne
sahf
inc
rcrl
int
insb
push
popf
addr16
jl
xor
stos
mov
sbb
in
or
fmuls
xor
inc
scas
xchg
mov
sub
jmp
aas
gs
pop
dec
imull
int3
jns
pop
dec
negl
je
or
stos
aam
test
or
add
aad
out
jle
js
jmp
cmp
rorb
and
mov
shrb
mov
sub
mov
inc
into
sub
stc
mov
test
inc
out
jge
cmc
sub
cli
std
cs
std
hlt
push
xor
fisubrl
add
stc
pop
push
out
jb
push
and
add
push
and
mov
push
adc
lahf
aaa
lods
push
adc
xchg
shlb
imul
cmpsb
into
jg
jae
sub
mov
cs
and
add
lcall
or
inc
mov
fwait
inc
out
push
shrl
xor
add
sub
ss
out
aaa
sub
imul
arpl
insb
pavgb
cli
daa
dec
jne
int3
and
xor
dec
cli
cmp
mov
mov
push
cwtl
pusha
cmp
jb
iret
lds
fsubs
adc
iret
or
sbb
sbb
jp
sub
sbb
xchg
fists
test
testl
ljmp
stos
xchg
inc
xchg
in
dec
idivb
push
jg
movsb
jle
daa
dec
insl
push
sbb
cmp
aaa
push
scas
push
mov
std
std
jo
leave
lcall
mov
jmp
push
scas
int3
cs
pop
add
int
pop
dec
pop
fwait
jmp
sub
fwait
jmp
outsl
loop
ret
sub
scas
scas
into
push
fadds
mov
cld
push
repnz
lods
add
pusha
and
add
add
int
dec
sub
nop
in
popa
xor
add
add
inc
cld
push
lods
xchg
and
sub
ffree
cmp
add
loope
dec
int3
cmp
and
xor
dec
and
or
mov
pop
xor
mov
popa
fimuls
xchg
loope
or
mov
clc
adc
dec
aaa
xchg
test
xchg
xor
xchg
cmp
xchg
cmp
pop
int
les
dec
xor
testl
sahf
cmpsb
sub
push
filds
std
xchg
icebp
mov
jns
mov
pop
ja
je
sub
cwtl
adc
hlt
adc
imul
mov
jmp
scas
testl
jg
lret
cmp
pop
xchg
out
std
lea
sahf
mov
insl
dec
clc
sub
jecxz
xchg
dec
push
sbb
mov
mov
jne
insb
movsl
sbb
call
push
pop
ss
int3
sti
shrb
sti
mov
jle
pop
jle
xchg
cmpsb
adc
pusha
gs
or
push
and
cmp
mov
dec
fsubrl
and
and
add
push
mov
insl
or
std
push
mov
sub
push
sub
ljmp
lahf
jl
cs
mov
jo
jge
mov
in
sbbb
inc
xchg
push
or
test
jecxz
adc
and
inc
imul
cmpsl
jp
lea
pusha
xor
adc
inc
inc
push
pop
test
xor
dec
aaa
xchg
sbb
mov
scas
xor
jp
jge
arpl
mov
mov
imul
jg
ret
jg
push
mov
adc
cs
xor
mov
clc
sub
dec
test
int3
pop
repnz
hlt
mov
cli
movsb
add
dec
pop
popl
push
movsb
inc
sbb
xlat
stos
negl
iret
add
leave
out
mov
insb
ret
or
mov
out
jle
scas
xor
mov
aam
shl
push
xlat
popa
sbbb
out
cmp
dec
stos
pop
jne
jmp
lret
push
cmp
jg
mov
xchg
js
xchg
lret
cmp
jg
dec
adc
insl
gs
rcrl
lods
jle
je
mov
in
pop
sub
xchg
push
xlat
sbb
pop
add
xchg
ja
scas
and
inc
cmpsb
dec
adc
mov
jae
imul
mov
lock
inc
mov
or
out
punpckhbw
loope
dec
fsts
icebp
and
fwait
shrb
dec
adc
and
lret
xchg
mov
fs
mov
cmp
in
xchg
adc
pop
lret
pop
cmc
cmp
sbb
leave
mov
pusha
cmpsl
sub
jne
lret
mov
ds
fwait
inc
outsl
xchg
sub
cmp
mov
xor
subl
out
repz
repnz
and
gs
push
popa
inc
test
add
pop
and
outsl
outsl
test
xchg
or
jp
arpl
test
movsb
outsl
mov
scas
add
sbbl
adc
or
mov
cwtl
lahf
dec
frstor
out
ja
and
int
xchg
mov
loope
lret
mov
or
inc
dec
lods
push
xchg
lcall
mov
cmp
or
ror
cmpsl
fimull
inc
mov
into
mov
mov
pop
scas
lahf
mov
lahf
pusha
or
jecxz
imul
ret
pop
jns
mov
loop
pop
push
imul
pop
push
inc
cmovl
iret
pop
mov
mov
stc
xchg
cmp
fsub
xchg
sbb
jge
and
cld
jae
leave
imul
inc
aam
lock
add
popf
popa
add
or
fldl
ss
mov
cld
fwait
jnp
xor
fwait
xor
xor
dec
mov
adc
lret
gs
cmp
jbe
pop
sar
movsl
sbb
bound
and
loope
mov
add
imul
arpl
popa
hlt
jp
cmp
mov
mov
adc
repz
add
adc
push
jl
and
mov
ss
push
pop
ficompl
out
std
enter
cmp
repz
and
xor
sti
push
add
lahf
pusha
arpl
icebp
nop
sub
sub
add
rclb
mov
lahf
or
out
sbb
movsl
pop
repz
push
aaa
imul
xor
mov
mov
in
jae
jmp
dec
pushf
and
shlb
divb
pop
mov
fimuls
adc
mov
mov
dec
fdivs
dec
xor
inc
dec
mov
xchg
scas
popa
inc
adc
and
sti
pusha
and
bound
inc
ret
sbb
emms
inc
outsb
dec
pop
sub
into
lret
sbb
adc
inc
fs
popf
movsb
lret
cmp
add
fiaddl
mov
nop
mov
negl
call
push
push
cmp
loopne
inc
mov
mov
lcall
inc
nop
iret
dec
xor
or
push
loopne
enter
sub
rolb
inc
add
pop
push
mov
mov
ljmp
pop
cmp
lock
jmp
jle
lcall
adc
push
mov
pop
arpl
cli
pushl
and
mov
jae
loop
incl
iret
scas
inc
aas
mov
adc
rorl
out
stos
into
lods
inc
shlb
sbb
call
imul
in
pop
addr16
and
mov
rorb
sbb
jbe
mov
mov
mov
fsubl
add
ja
lcall
jne
cmp
jle
jo
mov
lds
or
xor
aad
imulb
jb
pop
cmpsb
or
dec
cmp
add
xchg
clc
scas
ret
cmpsb
out
das
inc
xor
leave
ljmp
loopne
or
outsb
cmp
sub
movl
sbb
xor
jae
hlt
mov
xchg
pop
cmpsb
mov
mov
sub
xor
mov
adc
aaa
push
xor
ss
sbb
pop
cs
add
mov
clc
mov
or
repnz
jo
pop
arpl
addr16
mov
cmp
aas
call
or
out
aas
cltd
jmp
jne
adc
or
cmpb
fsubl
das
mov
add
incl
dec
repz
fcomps
out
jbe
mov
adc
add
jge
lods
lods
jp
dec
jno
shll
adc
adc
inc
cmpsb
and
fadds
movsl
sub
outsb
imul
wbinvd
into
sbb
xor
mov
dec
std
inc
jle
sub
dec
jmp
and
iret
fsts
sub
rep
sub
push
or
lds
cmc
mov
outsb
je
cmpsl
sub
or
dec
pushf
mov
ret
nop
lahf
add
mov
inc
xchg
xchg
fmul
insb
xchg
cmp
sbbl
xor
push
inc
mov
xor
fcompl
mov
es
test
and
mov
add
and
dec
and
testb
cltd
in
frstor
sub
scas
mov
movb
mov
in
mov
lahf
in
scas
scas
repz
fcomps
xbegin
cmpsb
cwtl
fs
inc
jp
aam
ss
mov
lods
pop
arpl
outsb
xchg
push
xchg
xchg
enter
mov
fildl
fwait
xchg
sbb
icebp
movsb
pop
js
ret
sbb
idivl
pop
jns
lret
inc
add
sbb
imul
sbb
push
lcall
and
jne
xchg
jb
xchg
sub
pop
mov
or
mov
jo
mov
fidivrs
sbb
mov
fmull
popf
push
fisttps
leave
mov
lcall
and
clc
cmc
mov
int
cmpsb
mov
movsb
loopne
movsl
add
scas
pop
lret
es
mov
xchg
lods
inc
lea
fbld
push
cmp
es
inc
mov
xor
jmp
lret
lahf
xchg
lods
sbb
pusha
in
and
outsl
jmp
or
out
imul
cmp
pop
xchg
fisttpl
or
cld
sbb
mov
int
mov
insb
cmp
out
add
jbe
push
lret
cli
sub
push
cmpsl
sbb
xchg
lret
xchg
in
daa
sbbl
loop
cmpsl
sbbl
mov
fmul
or
add
or
lcall
mov
adc
inc
xchg
cld
ljmp
dec
leave
push
xchg
shlb
xor
push
andb
lods
fidivs
cwtl
inc
ret
jno
repnz
jb
mov
out
push
or
adc
lods
repz
pop
imul
mov
xchg
mov
jmp
bnd
adc
bound
jp
loopne
ss
jbe
xor
mov
push
and
sti
rclb
mov
jmp
outsl
lea
mull
mov
pop
push
jmp
pop
dec
cmpsb
jmp
or
xchg
enter
fs
jp
push
ret
insl
outsb
mov
jo
leave
aas
push
out
sub
out
test
or
jg
arpl
inc
jmp
add
jne
pop
sarb
popa
in
xor
or
sub
ret
in
shll
mov
sub
add
movsl
pop
mov
push
movsb
js
mov
xor
xchg
pop
xchg
sbb
repnz
xor
aaa
add
pop
negb
or
test
lret
fistps
xchg
sbbl
adc
cmp
or
cmp
jle
jne
int
mov
leave
test
popa
mov
xchg
cld
data16
xor
push
imul
les
and
rcrl
cwtl
movsb
in
dec
in
stos
xor
bound
adc
or
and
popa
and
or
and
pop
cmp
mov
mov
std
cltd
ja
je
adc
jle
gs
push
jno
js
xchg
cltd
jle
in
repz
jge
mov
test
insl
lcall
cli
dec
sbb
fsts
iret
stos
mov
sub
loope
fmul
jb
inc
push
cwtl
mov
cs
gs
outsl
inc
leave
sbbl
mov
mov
icebp
andb
pop
and
fs
sub
decl
push
enter
xor
adc
pop
stos
in
ds
out
xor
loop
add
jbe
inc
das
idivb
test
out
adc
lcall
adc
aas
hlt
dec
outsl
pop
mov
or
mov
sahf
loop
inc
in
mov
movsl
xchg
jmp
pop
cmp
inc
std
mov
sbbl
aam
dec
lahf
jnp
pushf
int3
rcll
adc
dec
xchg
xor
jge
hlt
loop
adcl
cmp
inc
popa
hlt
stos
repnz
cmp
sti
push
pop
out
mov
out
pop
test
es
repz
add
fbld
stos
and
mov
lock
pushf
int3
insl
lods
pusha
fadds
sbb
aas
xchg
xor
hlt
es
pop
xchg
add
and
sbbl
ljmp
loope
jo
pusha
test
sub
xchg
jnp
pop
and
sub
adc
data16
in
sbb
cmpsl
xor
jbe
mov
or
aaa
dec
shlb
mov
test
dec
add
xor
mov
jbe
adc
pop
lret
and
aas
xlat
cli
test
int3
mov
mov
cmp
loope
dec
addr16
mov
or
mov
and
cwtl
mov
mov
imulb
push
and
daa
mov
push
in
pop
outsl
test
inc
adc
int
inc
mov
lret
pop
and
or
roll
mov
jbe
lock
xchg
mov
adc
pop
jnp
push
js
and
testl
movsl
scas
adc
cmp
pushf
stos
fucom
sub
mov
fcompl
xchg
pop
mov
pop
fldcw
out
sbb
pop
test
repnz
repz
gs
cs
push
mov
inc
imul
sbb
mov
imul
and
jne
shrb
ljmp
orl
adc
mov
mov
subb
daa
push
sub
fistl
pop
add
fcoml
mov
cs
mov
mov
ss
ss
les
call
push
fcmovu
mov
dec
mov
or
ficoml
ja
cmpsb
int3
sahf
mov
insb
mov
incb
dec
fisubl
movl
les
lods
mov
mov
call
mov
data16
hlt
fs
jmp
sahf
lret
cli
int3
inc
in
add
or
mov
inc
cmpsl
lds
jge
std
cli
push
push
pusha
pop
test
lcall
repz
push
xor
clc
pop
mov
sbb
jns
sub
sahf
add
icebp
pop
addb
mov
roll
lret
dec
test
ds
arpl
lahf
sahf
add
lods
add
pop
iret
loope
testl
pop
jnp
dec
test
jb
pop
cld
xlat
shrl
mov
fs
xor
into
fistpll
inc
hlt
pop
jg
and
cmp
jecxz
xchg
les
or
xor
std
nop
xchg
dec
and
sbb
xor
aaa
sub
sbb
dec
mov
sub
xor
das
xchg
sub
add
lods
sbb
iret
dec
jmp
inc
and
out
rol
scas
into
jle
push
daa
cmp
imul
mov
loopne
fstpt
pop
into
add
cmpsl
movsb
mov
pop
pop
pop
add
popf
sub
es
rcrl
add
sub
jge
fldenv
cmp
sti
cs
icebp
xor
cmp
adc
jecxz
bound
sbb
push
adc
iret
push
pop
push
lahf
xor
js
dec
cwtl
ret
mov
shll
jl
ror
mov
push
inc
cltd
xchg
xor
shlb
stos
cld
pop
ja
mov
pop
pop
add
lods
jl
dec
inc
push
push
std
jbe
sarl
daa
ret
cli
push
push
jbe
jmp
or
mov
and
or
mov
pop
add
mov
mov
in
lods
mov
fs
push
cmpsl
push
jno
clc
jno
jne
icebp
sbb
and
ljmp
add
sbb
mov
mov
aaa
cmc
pop
fstp
das
shll
leave
mov
cmp
test
popa
cmp
push
push
insb
cmp
std
stos
xor
cmp
pop
cmpsl
xor
js
cmpsb
jbe
or
lods
ja
imul
mov
sbb
jecxz
cmpsl
lret
movb
mov
test
jns
mov
mov
mov
stos
sub
push
ret
adc
lods
push
push
pop
dec
jmp
lea
mov
pop
lahf
dec
jns
stos
add
andl
cltd
loope
arpl
fwait
aad
popf
push
test
mov
mov
cmc
idivb
call
sbb
jnp
ljmp
mov
pop
aad
push
incb
mov
addr16
stc
aad
add
sbb
int3
enter
es
xchg
jns
inc
aad
insb
stos
push
fs
or
push
pop
mov
adc
inc
adc
fstps
add
idiv
and
jne
fcomp
jecxz
mov
pop
stc
addb
adc
insb
xor
pop
xor
push
js
cmp
xchg
mov
fdivr
hlt
dec
mov
out
shrl
xor
mov
insb
adc
in
lods
dec
mov
mov
xchg
push
pusha
xchg
andb
jae
andb
in
pusha
pop
fld
insl
xchg
jmp
stos
lods
or
sahf
adc
cmp
divb
dec
loopne
push
rcll
adc
ret
xor
pusha
lcall
imul
lods
mov
pushw
mov
lret
inc
cli
and
das
lea
push
sub
movb
push
mulb
pop
movsb
pop
cmc
repz
xchg
adc
xchg
popf
ss
add
ss
mov
repnz
push
int
add
in
repz
bnd
jmp
xor
inc
mov
std
fildll
cmpsb
pusha
cmp
or
mov
mov
cwtl
in
data16
jg
xchg
mov
in
out
mov
sub
add
out
and
das
pop
xchg
inc
add
cmp
mov
and
cmpsb
dec
shlb
sub
push
insb
cmp
sub
daa
add
subl
imul
mov
fsubl
xchg
cmp
mov
test
jb
bound
call
ds
mov
xchg
cli
add
frstor
mov
xor
imul
call
lods
xchg
lret
adc
pop
rcrb
pop
in
fisubs
fsts
push
stos
jae
mov
arpl
xchg
push
cwtl
push
cld
jno
or
out
rcrl
cltd
adc
mov
sbb
and
mov
in
cmp
push
vpsrlq
push
mov
mov
mov
or
es
jle
movsb
cmp
pop
addr16
xchg
push
add
aam
fwait
xor
lds
sbb
lahf
pushf
jp
out
push
push
sub
jno
lds
shll
jp
loope
fistl
adc
in
inc
xor
adc
imul
orb
mov
imul
push
stc
gs
inc
popf
iret
mov
push
mov
fdivl
rcrl
cli
dec
dec
xchg
xchg
jne
ja
adc
data16
popa
test
pushf
fadds
out
jno
das
jae
aad
ljmp
sbb
cld
out
sbb
push
mov
scas
jp
repz
and
and
dec
jae
out
mov
pop
xlat
mov
sbb
mov
pop
cs
mov
stc
lea
es
mov
push
xor
lods
test
xchg
inc
pop
xchg
add
in
and
mov
mov
xlat
sbb
add
scas
mov
loopne
cmp
and
pop
push
add
enter
pop
fildl
nop
iret
rcrb
mov
mov
cmpb
in
xlat
sbb
or
mov
mov
lods
mov
jb
dec
jbe
or
fsubr
push
mov
cwtl
ja
aas
push
mov
sbb
and
mov
movsb
ja
jg
outsb
into
popf
cltd
cmp
mov
dec
bound
out
and
and
add
fdivr
notb
xchg
fwait
stc
xor
fbstp
daa
clc
fsubl
outsl
cld
or
outsb
mov
ja
mov
lock
lea
sub
aam
cmp
mov
xchg
push
icebp
sub
mov
sub
pop
sub
out
hlt
daa
sub
mov
push
and
cmp
cmpsl
or
and
iret
cmpsl
sbb
or
aam
or
and
xor
clc
iret
jg
int
gs
pop
push
in
int3
imul
iret
add
and
add
hlt
subb
testl
push
jb
inc
popa
popa
imul
pop
dec
les
shl
mov
ret
lcall
dec
rorl
rorl
xor
mov
xor
mov
mov
add
lods
jnp
sub
mov
add
outsb
insb
mov
int
xchg
add
into
ret
mov
das
xor
jp
and
and
aas
int
testb
xor
repnz
push
repz
sbb
xchg
jo
mov
mov
fistps
jae
sub
stc
shll
iret
lock
or
test
add
sub
add
movsb
shll
pushf
in
mov
ljmp
xor
add
adc
cmc
mov
daa
subb
push
mov
sahf
inc
nop
data16
mov
lds
into
aas
add
sub
jbe
mov
xor
test
mov
daa
push
xchg
icebp
fs
add
adc
scas
add
push
in
jp
ror
pushf
jge
push
lea
fcmovnb
cmpl
lea
inc
dec
cmp
xchg
sar
jge
add
jle
adc
out
cmp
cltd
sbb
push
in
enter
xchg
lock
cmp
xchg
add
mov
dec
mov
sti
enter
xchg
adc
aaa
fidivl
outsb
cltd
mov
add
das
mov
fdivr
jnp
sahf
xchg
xor
aaa
xlat
nop
aas
clc
lods
inc
mov
arpl
mov
fsubs
aas
adc
adcl
pop
sbbl
inc
sbbl
mov
and
rcrl
hlt
data16
xor
inc
cmp
mov
jmp
clc
jnp
mov
mov
pop
lret
popw
mov
inc
rcrb
in
in
popf
xchg
mov
mov
xor
adc
in
movsl
aam
jmp
jns
push
sbb
fwait
outsl
xchg
incb
xchg
iret
pcmpeqd
test
js
jge
pop
or
rcll
xchg
cwtl
and
pusha
js
shll
call
ret
rolb
push
jnp
popf
rorl
cld
outsb
dec
jae
push
enter
xor
out
xlat
dec
push
pop
fdivrp
cmp
mov
fwait
hlt
cs
lods
sub
ficomps
inc
and
lods
mov
pop
xchg
xchg
fiadds
mov
pop
or
jno
adc
lret
xchg
xchg
fldl
sbb
aas
sarb
cmp
dec
subl
enter
push
les
jb
enter
test
je
jp
or
pop
dec
test
push
loop
jge
dec
mov
sbb
fcmove
sub
je
into
lods
push
bound
loope
stos
xchg
jl
lret
or
aaa
test
add
stc
repnz
cli
orl
fmull
sbb
shll
clc
jge
xor
add
add
add
lret
add
insb
sub
add
stc
add
add
imul
jge
or
int3
cli
push
icebp
mov
pop
out
insb
add
dec
out
adc
mov
add
add
sub
out
inc
dec
loop
jmp
or
xchg
sahf
inc
test
push
gs
aad
adc
icebp
shll
ror
xchg
scas
in
push
data16
jo
ljmp
scas
add
mov
das
and
dec
cmp
jnp
addr16
pop
pop
sbb
js
lcall
into
sti
ss
push
gs
sti
adc
ja
sbb
jmp
jae
shl
add
cmpsl
movb
jbe
shrb
mov
shr
in
jecxz
push
daa
cltd
sbb
sbb
pop
movsb
jge
sbb
or
lea
andb
daa
add
xchg
gs
lea
dec
loop
lods
out
or
lret
test
adc
push
std
xchg
roll
lds
popa
add
ds
adc
xor
cwtl
testb
add
dec
lods
leave
pop
sahf
ja,pt
push
inc
add
jnp
cmp
out
dec
inc
ret
inc
dec
ljmp
lcall
iret
icebp
mov
mov
movsb
push
aaa
mov
push
and
jecxz
std
scas
test
xchg
sub
xor
mov
sub
xor
mov
lahf
outsb
loop
cmp
cmc
mov
add
add
inc
pop
sub
add
add
add
add
add
add
add
add
add
adc
add
push
add
add
add
add
xchg
jmp
add
pop
add
cltd
pop
add
add
cmp
add
fiadds
arpl
addb
cli
fadds
shl
pop
add
dec
incb
xchg
pop
dec
add
xor
add
aad
add
inc
cli
add
add
fisttpl
add
mov
xchg
add
add
add
sub
add
pop
inc
add
add
add
add
add
add
add
add
add
incl
add
push
fdivl
add
add
add
add
add
add
sub
add
adc
add
movb
add
add
jl
add
push
out
add
rolb
add
addr16
add
add
add
addl
daa
mov
add
add
add
mov
add
add
add
add
add
add
add
sub
add
aaa
add
outsl
cmp
add
add
add
push
add
add
add
scas
add
adc
mov
lods
add
add
xor
addb
add
add
xor
add
add
je
add
test
mov
fwait
add
add
pop
pop
push
add
add
add
ret
add
add
inc
out
add
add
xchg
pop
sbb
add
add
add
add
or
add
daa
pop
add
add
add
addb
add
add
add
cmp
add
add
movsl
arpl
add
mov
push
pop
add
pop
test
add
add
add
lret
inc
add
or
popa
jns
add
nop
sbb
add
sahf
mov
dec
outsl
dec
add
mov
or
out
mov
sub
dec
lret
test
aaa
add
mov
add
adc
add
add
add
insl
xchg
add
add
push
sar
add
add
add
adc
add
add
add
roll
add
add
roll
mov
push
sub
je
mov
jg
mov
add
jmp
ja
pop
pushf
je
and
adc
out
inc
stos
insl
gs
aad
shlb
push
out
add
sub
outsb
jmp
insb
movsl
or
add
les
fst
xchg
sbb
add
mov
cld
jbe
mov
mov
add
push
mov
add
push
test
pop
maskmovq
add
leave
cmp
les
mov
aas
xor
mov
xlat
push
push
dec
xor
add
cmpsb
fdivr
and
add
add
ja
or
add
sub
or
add
add
xchg
add
add
add
add
js
mov
xchg
rolb
mov
xor
jns
lods
sub
push
repnz
pop
aad
call
into
or
rcll
xchg
cmp
aas
dec
out
adc
ret
sbb
jge
jge
leave
xor
repnz
adc
decl
into
pop
cmp
inc
inc
jg
lock
movsl
nop
rcl
jl
js
xor
adc
sub
jle
dec
inc
lcall
xchg
addr16
cmc
xor
adc
cmp
hlt
lea
imul
xchg
and
xor
aam
sub
mov
and
ret
aad
inc
mov
lahf
ret
jo
jmp
pop
lods
mov
loop
adc
adcb
sub
mov
pushf
fildl
aas
data16
sbb
nop
in
cmp
cmp
mov
inc
lret
mov
mov
jge
lock
movsl
push
push
jg
lret
out
ret
call
mov
iret
xor
xor
or
sbb
add
les
add
cmpsl
xchg
add
add
cmpsl
add
jl
add
add
add
add
add
add
add
mov
add
add
lahf
dec
add
add
out
add
insb
insb
adcl
pop
push
jne
sub
pop
or
add
enter
and
fdivrs
adcl
jmp
std
or
xchg
movsb
fwait
cmp
imul
xor
das
sbb
or
popa
and
xchg
into
pop
dec
cmp
loope
mov
sbb
inc
ljmp
mov
dec
or
sar
inc
mov
cmp
mov
movl
decl
mov
cwtl
add
mov
cltd
test
add
pop
add
xor
das
add
add
add
add
gs
add
add
add
pop
scas
lret
out
lret
pushf
cmp
dec
inc
fwait
sbb
sarl
jae
imul
movl
mov
dec
inc
lcall
ja
icebp
pop
mov
shll
dec
or
pushf
lret
mov
xchg
pop
mov
pop
adc
add
push
adc
xorb
add
add
add
add
push
fiadds
mov
push
add
xchg
add
add
add
and
cmp
add
sub
icebp
add
add
add
cmp
add
add
mov
add
add
add
add
add
add
push
add
cmp
das
add
add
int
cmp
mov
push
add
add
add
add
add
pop
cmc
out
add
add
add
xchg
and
add
or
cmp
in
add
add
add
add
fiaddl
loop
add
add
add
push
xor
jmp
add
loope
jp
add
call
add
add
and
outsl
add
add
add
add
add
add
aam
add
add
add
add
add
clc
add
add
and
cmc
add
add
push
les
cmp
hlt
add
incl
mov
push
add
add
add
add
popa
add
add
jo
push
add
add
sti
xor
mov
add
add
add
dec
add
add
add
add
add
add
add
add
push
packuswb
add
lods
add
add
add
add
or
add
in
pushf
push
add
add
adc
add
daa
add
add
add
mov
cltd
add
add
pop
add
add
add
add
mov
mov
add
rolb
add
jge
xor
add
add
add
mov
push
fildl
adc
in
add
add
lods
add
add
adcl
mov
sub
roll
add
testb
add
add
add
add
jle
sub
add
addl
pushf
pop
std
add
add
in
cmp
dec
add
js
mov
scas
pusha
sub
out
add
cmp
cmp
push
add
add
add
mov
add
add
ucomiss
cmc
add
add
hlt
add
xor
jnp
lahf
add
add
cmc
add
add
add
add
add
outsl
add
add
cli
add
add
call
lds
xchg
push
add
add
faddl
out
add
add
test
mov
stos
scas
dec
add
add
add
pop
add
add
add
add
add
add
add
dec
add
add
lds
add
xchg
ret
add
add
add
cmp
and
and
pushf
add
add
add
add
add
add
add
jmp
xchg
add
add
scas
add
add
incl
rolb
add
add
add
add
test
add
add
add
add
clc
add
add
add
adc
or
in
jno
cld
add
add
add
xor
sub
xchg
adc
xor
xlat
add
addl
jno
cwtl
add
cmp
mov
out
out
add
add
add
add
add
add
add
add
add
add
add
xchg
add
sarb
add
and
clc
add
add
add
add
adc
xor
int
lods
push
mov
inc
add
add
add
mov
add
addl
add
jmp
add
sub
pop
add
add
add
add
add
add
add
add
add
add
add
sub
testb
add
add
add
add
sahf
add
add
add
mov
add
or
iret
add
iret
add
or
adc
bound
out
add
test
mov
add
add
add
add
mov
add
or
jl
xor
sub
or
push
push
add
add
add
add
add
add
adc
mov
and
sub
in
aas
add
add
aam
test
addb
add
add
ljmp
add
add
add
add
out
add
sub
jp
cltd
add
or
add
xor
das
cmpsb
xchg
add
add
add
add
add
add
add
imul
add
lods
stos
add
add
add
fiaddl
sub
test
bound
jg
pop
add
in
add
or
add
add
add
xor
aad
cmp
pop
add
int3
mov
mov
add
add
add
add
add
add
sub
add
sub
or
mov
out
lods
add
add
add
add
add
add
add
add
mov
xchg
iret
add
add
add
add
add
add
add
jnp
add
add
push
pop
add
add
add
add
outsl
add
add
add
mov
add
popf
movsb
add
add
add
add
add
mov
fldl
ret
add
add
add
cld
mov
xor
out
jg
mov
add
add
add
add
lds
xchg
add
add
add
push
and
sub
rcll
cmp
mov
xor
fnstsw
inc
shl
arpl
and
pop
push
std
scas
pop
adc
push
add
add
in
push
add
test
add
icebp
add
add
add
clc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
out
add
xor
aam
dec
add
roll
add
add
add
add
add
add
add
scas
and
mov
dec
add
int
add
sbb
scas
mov
mov
popf
bound
adc
fisubrs
sub
test
lods
lds
jp
jns
cmc
in
sub
add
lods
mov
xor
in
cmp
cmp
pop
int
shl
sub
fstpt
mov
and
ret
push
test
pusha
push
sahf
pop
adc
add
add
or
ret
fmulp
aam
sbb
jg
icebp
lahf
cld
icebp
adc
popf
mov
add
jae
outsl
and
and
adc
je
xor
iret
pop
dec
inc
lds
iret
cmp
movsl
jns
inc
sti
jmp
add
jmp
enter
pop
xchg
pop
repz
mov
xlat
fdivs
cmp
das
std
dec
mov
inc
adc
mov
jl
lock
scas
ljmp
add
or
out
mov
iret
call
or
adc
push
push
enter
push
pop
cmp
dec
pop
repnz
fldt
add
lods
add
in
push
mov
push
dec
flds
jno
or
fistpl
mov
push
scas
sub
xor
mov
sbb
push
idiv
pop
in
es
mov
xchg
roll
aad
adc
add
jb
dec
test
outsb
std
test
add
sub
in
ss
scas
in
or
iret
sbb
lods
rcr
pop
sbb
stos
adcb
mov
xchg
inc
jae
outsl
dec
xor
and
or
add
int
int3
outsb
xchg
add
scas
or
pop
jmp
loope
mov
sbb
in
popf
add
pop
cmp
divl
cmpsb
mov
xor
cmp
das
cli
jl
add
and
add
ljmp
std
leave
mov
push
shl
add
mov
add
or
add
jns
push
or
mov
mov
sbb
adc
adcb
push
add
inc
add
mov
add
add
add
leave
add
add
add
add
add
sbb
out
xor
add
add
xlat
add
sub
stos
add
add
add
add
lds
incb
add
add
int3
idiv
add
add
nopl
add
add
add
out
add
into
or
roll
popl
add
xor
fildl
add
add
add
cli
mov
add
add
add
sbb
ret
das
aas
add
sbb
add
int3
sbb
add
add
add
add
add
add
add
pop
sbbl
add
add
add
ret
testl
add
add
icebp
inc
add
mov
add
add
add
add
add
add
jle
dec
add
mov
add
add
aas
and
add
add
out
add
add
add
add
add
gs
add
add
add
add
rolb
add
add
add
and
roll
stos
add
add
add
imul
add
popf
mov
add
add
sbb
add
lds
add
add
push
daa
repnz
mov
add
add
add
add
add
add
add
adc
add
sbb
jle
add
add
inc
jmp
push
testl
add
in
add
add
add
outsl
add
add
add
insb
mov
add
repnz
add
add
add
fcomps
in
add
into
add
add
pop
mov
add
add
add
add
es
add
add
add
add
ret
add
add
add
out
mov
movb
add
add
mov
add
cmp
add
add
add
add
lock
add
add
add
add
mov
add
adc
sub
cmpsl
add
add
add
adc
add
jo
add
add
add
add
out
add
add
fiaddl
or
sub
add
add
add
jp
add
addb
add
add
add
add
rolb
add
add
add
ljmp
add
add
imul
add
add
add
add
add
add
mov
add
add
flds
add
add
add
add
lahf
xor
add
mov
jecxz
inc
add
add
stos
add
add
add
stos
add
or
add
add
add
add
test
cld
adc
add
mov
or
lds
cmpl
add
add
sbb
dec
xor
push
je
cli
pop
out
nop
or
cmp
or
add
xchg
push
js
add
add
cli
add
adc
or
dec
popf
xorl
add
lahf
add
add
adc
dec
xchg
ljmp
out
xor
ret
add
adc
pop
add
add
mov
add
xor
add
jo
add
jg
add
and
sbb
dec
sub
ret
sbb
mov
loop,pn
jb
jnp
inc
jmp
sbb
mov
loope
out
jbe
dec
lcall
xor
mov
stos
sub
xor
std
or
add
xor
out
xor
sub
adc
mov
ljmp
sti
jnp
xor
hlt
outsb
imul
std
repnz
scas
and
imul
add
mov
das
or
lock
sbb
dec
push
sbb
dec
and
mov
lret
or
out
xchg
lds
add
mov
jns
out
dec
add
mov
jge
xchg
or
ja
add
inc
fildl
add
outsb
sbb
jae
mov
jge
add
dec
push
jo
add
and
ret
cmp
mov
pop
jecxz
aaa
stos
add
xlat
inc
out
sub
js
ljmp
xlat
push
sbb
push
xor
add
mov
xchg
das
push
hlt
call
or
and
dec
addl
call
xchg
xor
xchg
stos
icebp
push
adc
cmp
mov
or
pop
or
jns
test
mov
xchg
push
or
mov
mov
push
dec
je
cmp
xor
in
mov
jae
xchg
cmpsb
xor
inc
inc
xchg
negl
call
cld
das
mov
shr
xchg
inc
or
or
push
dec
nop
in
sbb
pop
xor
addr16
jg
fcomp
cmp
jle
js
sub
and
das
inc
pop
call
xor
shl
or
xchg
nop
xor
fisubs
mov
inc
flds
add
push
repnz
loope
loopne
mov
enter
mov
add
fucomp
xorb
icebp
xor
repz
sbb
xchg
mov
addb
ret
lods
push
mov
mov
fneni(8087
push
sub
sbb
gs
xchg
add
jmp
gs
jae
cmpsl
pop
sbb
test
fsubrl
xor
out
sub
jl
loop
test
popa
add
and
add
jp
add
bound
add
insb
push
aaa
xor
cwtl
sti
xchg
mov
add
inc
daa
dec
or
jmp
or
dec
push
add
or
jns
clc
inc
lods
jmp
fs
addb
mov
lahf
mov
mov
insb
push
mov
jle
jmp
jbe
mov
adc
mov
addl
hlt
pop
shr
sbbb
rcll
leavew
add
mov
leave
mov
sbb
insl
in
movsb
pop
and
sub
loop
xchg
jo
fwait
sti
repz
leave
inc
push
cmp
mull
movb
ficoml
mov
pop
cmp
lods
add
mov
aas
loop
lods
cmpl
mov
cmpsb
lret
push
out
add
xchg
std
cmp
ret
mov
enter
stos
xchg
pop
in
sti
push
xchg
add
lods
sbb
iret
mov
leave
mov
or
add
aaa
jbe
les
arpl
insb
add
push
xchg
cs
mov
sbb
add
cmp
sti
add
mov
out
and
add
or
test
inc
push
mov
mov
or
in
dec
data16
xchg
pop
add
mov
sahf
lds
sbb
xchg
mov
movnti
add
mov
add
insb
xor
mov
add
add
add
mov
sbb
sarl
add
enter
add
push
imul
mov
pop
lods
add
ljmp
sbb
mov
fildl
hlt
out
add
xchg
cmp
push
hlt
lret
ret
outsb
fsts
dec
add
mov
pop
jl
mov
jg
add
push
add
fldl
add
lcall
add
dec
add
add
add
cmp
out
insl
cmp
scas
xor
and
std
add
mov
sbb
out
in
test
dec
aaa
sub
ljmp
hlt
loop
inc
sbb
mov
mov
cwtl
sarb
cli
jl
div
lods
and
jecxz
add
sbb
filds
or
ss
xor
add
rolb
stc
add
xor
lods
int
cltd
lahf
and
cwtl
fwait
push
jo
inc
scas
pop
outsl
inc
jbe
out
mov
je
addr16
jno
xchg
and
sbb
jle
scas
jmp
adc
sub
mov
add
fwait
push
fldenv
and
cmpl
add
jae
inc
xchg
repz
out
add
dec
sub
xchg
pop
cmp
dec
xlat
jb
in
loopne
stc
outsl
push
cli
inc
bound
add
push
add
mov
add
add
add
xchg
add
jp
das
add
add
add
add
addb
add
add
out
jl
mov
pop
or
sahf
mov
movsb
fs
pop
xor
lret
add
cmpsl
push
mov
jg
out
jecxz
gs
out
pop
stc
jne
pop
dec
sarl
mov
mov
xchg
popa
cmpsb
push
ror
sti
mov
js
jno
and
cmpsl
xor
loop
sub
aad
xlat
mov
mov
sub
and
movb
xchg
add
add
add
rolb
and
push
add
add
add
add
and
lahf
in
movsb
add
add
js
inc
jo
lock
add
add
insb
add
pop
add
jg
je
sbb
repnz
add
add
xor
xchg
sub
dec
add
pop
add
add
add
add
add
add
add
flds
in
aad
inc
add
mov
sbb
sub
lods
add
bound
movb
add
add
mov
je
js
dec
inc
movb
insb
sbb
add
pop
sbb
add
dec
push
add
mov
push
jg
pusha
and
xchg
scas
inc
mov
dec
add
xor
hlt
ret
and
xchg
js
mov
sub
pop
jg
ds
mov
movsb
addb
jl
add
sbb
xchg
dec
xor
xchg
add
pop
add
xchg
add
add
add
add
add
add
add
add
add
push
add
arpl
jmp
lock
add
pushf
fistps
mov
daa
in
xchg
add
add
add
add
add
add
add
add
inc
add
add
jmp
add
add
test
push
ret
pop
add
mov
dec
jne
int3
aas
cmp
iret
xor
leave
jmp
add
movsb
int
cltd
sub
xor
js
jge
dec
fisttpl
repnz
or
add
lret
add
loop
cltd
add
add
or
mov
add
clc
add
add
add
add
add
add
add
add
cmp
data16
add
add
add
mov
stos
cmpsl
inc
enter
pop
dec
mov
xor
add
add
add
add
push
add
filds
add
xchg
cltd
add
push
loope
add
out
add
add
pop
sbb
add
add
inc
jle
add
add
add
add
add
add
sub
ds
lock
dec
mov
mov
add
mov
add
xor
filds
outsb
add
add
push
add
cli
cmp
add
int
add
pop
lock
add
add
out
add
add
add
xchg
add
add
add
add
adc
icebp
xor
int
push
add
add
std
add
add
addl
xchg
add
mov
js
cs
sub
add
xchg
add
add
cs
fiaddl
add
cltd
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cld
add
add
add
add
jno
jmp
add
add
scas
add
add
sbb
lods
add
mov
mov
xchg
add
add
jo
roll
pop
add
aas
add
add
add
outsb
testb
add
sub
add
add
mov
add
add
add
inc
es
inc
sub
add
add
add
add
add
add
add
add
add
repz
cli
add
filds
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
lret
add
add
add
add
add
add
add
pop
add
add
add
cmp
push
xchg
add
add
add
add
add
add
add
popf
mov
adc
loopne,pn
add
add
sbb
add
add
stos
add
add
add
clc
add
add
add
add
add
sub
inc
add
add
add
add
add
pop
add
add
add
add
add
add
rolb
movb
add
add
add
sbb
cwtl
xchg
add
add
add
add
add
call
add
sbb
add
xchg
add
add
add
add
out
add
add
pop
add
add
test
jmp
add
add
add
add
andl
inc
add
add
add
add
add
add
sarl
repnz
add
add
add
add
add
add
ljmp
add
add
add
mov
std
add
add
add
add
add
arpl
add
add
add
add
add
add
outsl
add
add
add
add
add
out
add
add
xchg
add
add
outsl
cmp
js
mov
add
add
add
add
inc
loopne
ret
int3
pushf
add
add
mov
add
add
sti
lea
mov
loope
je
add
xchg
add
add
add
add
fcom
add
fldl
ja
add
test
add
add
push
add
and
add
add
add
repz
jg
add
add
jmp
add
add
ja
add
scas
adc
add
add
cs
add
add
add
xlat
add
adc
add
add
add
outsl
data16
add
add
add
add
add
add
add
jbe
add
add
add
loope
add
add
add
add
add
add
add
add
add
add
add
jae
in
add
add
add
fildl
inc
add
add
jne
add
add
add
pop
add
mov
add
add
sub
inc
jnp
add
add
mov
add
add
nop
add
add
add
pushf
add
add
add
add
sahf
add
add
add
add
sub
pop
add
add
add
add
add
inc
add
add
add
mov
add
ds
add
add
add
add
add
add
add
add
add
or
xchg
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
xchg
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cli
add
add
add
add
add
add
add
add
add
add
add
add
sbb
cld
add
lcall
add
add
sbb
mov
add
cld
add
add
add
add
add
add
add
add
add
add
lcall
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
cmc
add
add
std
add
add
add
add
add
add
add
outsl
add
add
add
add
xlat
add
add
jnp
sub
je
dec
add
outsb
add
add
add
xlat
add
pop
add
add
add
xchg
incb
pop
add
add
add
add
filds
mov
cltd
add
add
add
inc
add
add
std
add
add
add
mov
add
add
insl
add
add
nop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
lds
xlat
add
add
add
dec
add
push
sub
push
add
add
add
sbb
sub
add
add
ljmp
add
add
add
add
add
add
inc
add
add
add
sbb
add
adc
cmp
add
add
add
add
add
dec
add
add
add
add
add
add
add
je
dec
add
jo
dec
add
add
lods
add
add
dec
add
mov
out
add
add
add
into
add
add
add
sub
pop
add
add
add
add
sbb
inc
add
add
mov
jge
xchg
lcall
add
jecxz
mov
add
mov
add
add
add
fiaddl
das
add
mov
add
add
add
add
add
add
sbb
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fiaddl
cmp
or
adc
add
add
cltd
add
add
xor
push
add
mov
add
lea
add
add
add
add
add
add
add
out
dec
add
add
rcrl
add
add
add
add
add
add
add
add
cmpsb
add
add
addl
add
push
add
add
add
add
add
sbb
add
add
jp
push
add
add
push
add
mov
add
loope
pop
add
add
add
mov
mov
add
push
add
add
add
add
fldl
jecxz
ret
add
add
add
add
add
add
add
add
jmp
filds
jmp
inc
add
add
add
add
adc
std
add
mov
sub
pusha
add
add
add
popf
add
add
add
add
and
add
add
sbb
lcall
add
add
add
add
add
add
add
add
or
push
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
xchg
add
adc
add
add
dec
add
add
add
add
add
add
test
fiaddl
pop
add
add
add
xchg
add
add
lcall
add
add
popf
add
add
push
add
add
add
add
add
add
out
or
int3
add
roll
add
add
add
add
stc
iret
add
add
add
add
out
add
add
add
add
daa
add
add
add
add
add
add
add
add
add
in
imul
adc
movl
pop
add
add
mov
add
add
add
dec
add
std
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
xchg
add
add
add
add
add
add
add
add
rolb
enter
dec
add
add
repz
add
pop
add
add
add
add
jmp
jge
mov
add
mov
push
jmp
cmp
add
test
add
add
addl
add
add
add
add
aam
outsb
add
add
add
add
add
lods
add
jo
adc
add
add
lds
sub
pop
add
leave
add
add
add
add
add
add
sti
add
add
add
add
add
add
add
add
add
add
add
shlb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jb
test
mov
add
add
pop
add
xchg
add
add
loop
mov
add
in
ret
add
add
add
dec
das
mov
out
add
dec
add
add
add
add
ret
add
scas
add
add
add
add
sub
test
repnz
add
cmp
push
add
add
add
add
add
add
add
add
dec
add
sbb
add
push
push
add
add
add
add
icebp
add
cmp
add
add
add
add
add
roll
add
scas
add
addb
add
add
mov
int3
add
add
lahf
add
add
add
add
adc
add
add
pop
add
add
or
les
add
add
es
and
add
add
shr
add
add
add
add
or
add
mov
add
aad
add
add
mov
out
add
add
add
inc
add
add
add
dec
add
add
add
and
add
push
xchg
add
add
add
jb
add
add
add
mov
sub
dec
add
add
mov
add
add
js
add
in
cld
add
add
add
add
add
add
in
mov
sbb
test
or
add
fiadds
movsb
add
add
add
roll
lcall
add
add
add
add
xor
lret
add
add
add
add
add
add
lret
dec
add
add
add
add
add
add
add
xchg
xor
test
or
mov
add
add
add
add
bound
add
les
lea
add
stc
add
add
xor
bound
add
test
add
add
inc
push
add
jo
add
add
add
jp
add
push
popf
add
add
add
add
add
add
add
ror
add
add
add
add
add
fldt
add
push
fldl
arpl
add
faddl
lcall
mov
dec
add
add
add
add
add
add
add
scas
iret
add
add
add
sbb
add
aas
popa
add
dec
pop
add
add
xchg
lock
add
add
lods
or
and
add
add
clc
add
add
add
add
popa
ja
or
add
add
xchg
add
add
add
push
inc
add
add
add
leave
add
add
add
outsl
pop
add
jbe
add
add
add
xor
add
add
add
add
adcb
test
outsb
add
add
add
xchg
out
or
add
add
add
add
add
arpl
add
add
add
add
add
add
add
push
jo
add
add
pop
add
add
add
add
add
push
add
add
add
add
add
jl
add
add
add
add
add
add
sbb
add
push
add
add
jne
and
pop
add
add
add
add
mov
add
sub
les
mov
add
mov
sub
sbb
cmp
data16
add
add
add
add
or
push
add
add
fwait
add
add
dec
add
sub
mov
push
ret
add
add
add
add
add
add
add
push
add
jmp
repz
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
xchg
add
add
add
push
add
add
add
add
add
add
xchg
add
add
add
sbb
mov
add
add
lret
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
jns
sahf
add
add
add
add
add
add
add
stc
add
les
xor
add
add
add
add
fwait
add
add
mov
addb
add
inc
add
add
add
add
add
jno
movb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
loopne
or
nop
add
add
add
arpl
push
add
fwait
add
add
add
add
add
add
add
add
add
add
je
xchg
add
add
add
int
popf
add
add
add
add
cmp
cltd
add
add
add
mov
or
cmpsl
add
add
add
add
mov
mov
add
adc
ret
add
add
add
lea
addb
add
add
add
and
add
adc
adc
add
cltd
add
add
add
insl
add
out
add
add
add
add
add
add
and
test
jno
fadds
iret
add
add
or
lods
add
dec
add
add
add
or
add
add
add
add
add
add
add
add
push
add
add
add
sub
add
add
dec
add
add
add
add
add
and
add
add
add
add
imul
add
add
add
add
add
add
add
add
add
add
add
add
mov
mov
sbb
movb
add
ret
add
add
add
cmp
jmp
add
add
add
add
add
add
cmp
add
addl
mov
add
add
and
sbb
adc
add
add
lea
into
add
add
add
add
mov
lret
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
adc
fldl
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmc
add
add
add
add
sbb
lods
add
add
add
add
or
jge
or
pop
add
add
add
add
add
fwait
add
add
add
add
add
imul
xor
rolb
imul
lahf
add
add
add
add
add
or
movsb
add
incb
dec
add
add
pop
add
add
add
add
add
add
add
add
add
add
cmp
and
inc
add
test
fildl
inc
add
add
add
enter
cmc
add
sbb
add
add
add
inc
add
add
add
add
add
add
add
cmpsb
add
insl
add
add
add
addl
and
lods
add
add
jno
jmp
add
dec
add
add
add
test
add
add
add
add
xor
xchg
add
add
xchg
and
add
add
add
mov
add
scas
add
add
add
add
push
add
add
push
add
add
add
add
add
add
add
add
sbb
roll
sub
std
add
aaa
add
add
add
adc
faddl
push
add
pop
add
add
movb
add
add
cltd
add
add
add
add
mov
mov
inc
add
movb
add
add
add
add
add
xchg
add
add
add
add
addb
add
add
add
mov
aaa
add
pop
lahf
add
jle
adc
pop
add
add
add
add
sti
add
movl
push
add
xchg
add
add
add
pop
add
add
add
add
add
add
mov
lea
add
leave
add
add
add
add
adc
push
icebp
sbb
xor
add
push
add
add
add
mov
dec
mul
add
add
add
add
add
sbb
add
add
add
add
add
add
sahf
add
add
mov
add
aam
add
in
add
add
add
xchg
add
add
add
or
cmpsb
mov
add
add
sbb
push
add
pop
roll
mov
cmpsb
add
add
add
add
add
jae
in
add
add
add
add
jno
add
outsl
iret
add
add
add
add
add
sti
pusha
roll
mov
add
add
push
pop
add
loope
add
add
pop
add
add
add
add
rorl
mov
add
add
add
add
pop
incl
mov
add
add
add
add
add
add
sub
add
js
add
add
add
outsl
lds
lret
add
add
sbb
cmp
add
add
add
inc
add
cmp
testb
add
and
add
add
add
add
sbb
add
add
add
loop
add
add
add
sti
add
mov
add
cmp
movsb
add
add
add
sbb
add
sub
add
add
push
add
add
add
add
pop
push
add
addb
add
add
add
add
add
add
movb
add
add
lret
add
add
add
clc
xor
aaa
sub
mov
add
je
push
add
add
add
cs
add
add
sahf
add
add
add
add
mov
add
add
add
xchg
add
add
add
dec
cmp
xchg
dec
add
add
add
add
add
add
add
aam
add
fs
add
add
jg
scas
add
add
add
adc
add
add
add
add
add
out
add
add
add
add
add
mov
add
add
add
insl
addl
pop
push
add
add
add
add
add
dec
add
add
add
add
add
fsub
add
add
add
add
add
outsl
add
add
roll
data16
add
add
verw
add
add
add
add
add
add
lahf
add
xchg
add
add
add
add
add
add
add
add
ret
add
add
xor
loope
lret
add
add
enter
aad
incl
lret
add
add
jne
push
add
add
addb
add
add
add
add
lods
add
add
add
add
inc
add
add
int3
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
jle
in
push
add
add
add
add
add
add
add
jge
push
add
add
add
add
popl
cltd
add
add
popa
add
xor
inc
add
add
cltd
add
add
add
add
add
add
add
add
faddl
push
add
add
add
add
incl
or
xor
rolb
sbb
add
add
add
adc
inc
add
cmp
add
add
add
inc
add
add
mov
and
roll
add
add
add
add
add
add
add
les
fiaddl
fadds
repnz
add
add
add
add
loope
dec
add
add
scas
add
add
add
mov
add
add
add
add
fwait
add
add
add
add
add
add
add
add
add
add
add
add
lea
jbe
aaa
add
add
add
add
and
cltd
add
add
add
xchg
add
xchg
add
add
add
add
add
add
add
xor
rolb
add
adc
add
add
add
add
add
add
add
add
add
add
add
fwait
add
add
add
add
add
add
add
add
dec
add
add
add
add
repnz
add
dec
add
add
add
std
add
add
testl
jne
cmpsl
add
add
add
add
add
add
add
add
lock
add
add
add
add
add
add
incb
iret
add
add
add
add
cs
add
add
add
add
sbb
mov
rolb
add
add
jg
dec
add
lock
add
add
ja
add
data16
mov
add
add
incl
jge
and
hlt
add
add
add
add
mov
add
add
add
add
and
pusha
add
add
add
add
add
add
loop
rolb
pop
add
add
add
lock
add
add
add
add
rolb
add
in
add
add
mov
add
add
sub
outsl
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
inc
add
add
add
add
add
add
cmp
xchg
add
pop
add
push
add
mov
add
push
add
add
add
add
add
add
in
or
in
mov
add
test
add
mov
add
add
add
add
dec
add
add
xor
add
aas
add
add
add
add
add
xor
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
add
add
or
iret
add
add
add
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jecxz
call
add
add
pop
add
add
add
addb
add
add
add
filds
add
ret
add
add
add
push
add
add
addb
add
add
rolb
add
xchg
add
filds
testb
add
pushf
add
inc
add
add
add
xchg
add
or
add
add
add
mov
stc
add
add
popl
xchg
add
add
add
int
add
add
add
add
add
jb
sahf
fs
roll
add
sbb
ljmp
nop
xchg
add
add
add
mov
add
add
add
sub
jecxz
cwtl
add
add
add
add
add
add
add
fadds
xor
add
inc
add
add
add
add
push
pop
add
add
add
add
add
jecxz
add
ret
pop
add
add
adc
add
add
add
add
inc
pop
add
add
jbe
in
add
add
add
mov
add
repz
push
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
xchg
jno
jne
out
mov
add
add
add
add
adc
add
add
add
add
add
add
dec
cwtl
add
dec
add
add
add
jb
add
sbb
add
add
add
add
dec
add
add
add
add
add
add
add
rorl
jns
outsb
add
add
add
testl
add
add
push
mov
add
jbe
add
add
add
or
adcl
add
add
add
sahf
ljmp
add
add
add
add
and
add
nop
add
add
add
add
add
jb
add
xchg
add
add
into
add
add
add
add
jge
add
add
popf
add
add
add
add
rcrb
add
add
add
add
add
lret
icebp
add
pop
sbb
test
add
add
es
add
add
cs
add
add
add
dec
sub
add
add
add
add
add
loope
add
add
add
add
add
add
add
das
add
add
add
add
add
add
add
arpl
add
add
add
add
add
stos
add
add
add
add
add
add
add
into
lahf
add
xchg
fadds
addl
lods
add
add
add
adc
add
add
add
add
add
add
movsl
dec
add
addb
add
add
add
add
mov
add
add
inc
add
add
add
add
add
fldl
test
lea
add
cld
add
add
add
add
add
add
clc
add
pop
add
repz
add
add
cmc
add
add
add
add
add
add
add
add
add
add
xchg
add
add
and
add
add
add
add
add
add
add
add
add
sub
add
add
add
add
add
roll
verr
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
add
cld
add
add
inc
add
add
add
test
sbb
add
incl
lods
add
add
add
add
add
jge
es
add
add
sub
add
jl
inc
add
add
add
add
add
testb
add
add
add
add
pushf
add
add
add
add
add
add
and
xchg
add
add
add
add
enter
mov
add
add
add
adc
icebp
add
add
add
push
add
add
imul
add
cmpsb
add
add
icebp
add
add
add
add
add
addb
add
add
add
fildl
push
add
add
add
cltd
add
dec
add
add
add
add
stc
add
add
add
add
cmpsl
add
add
sahf
add
add
add
add
add
add
add
add
add
inc
add
add
add
sbb
data16
add
add
and
add
add
add
add
add
add
mov
add
add
add
add
jg
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
stc
add
add
add
add
add
add
add
add
add
pop
add
int3
add
add
mov
roll
dec
add
out
mov
test
inc
add
add
add
add
add
add
sbb
add
ret
add
aad
popl
jl
sub
add
add
mov
add
add
add
add
fiadds
dec
add
add
add
add
add
add
add
xor
add
add
add
into
add
add
push
pusha
add
and
in
add
add
add
add
mov
sub
adc
cmp
pop
add
add
add
add
add
add
add
add
in
mov
icebp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
add
testl
leave
add
add
pop
add
add
ja
int3
add
add
add
mov
add
sahf
add
add
sbb
add
sahf
add
add
add
add
lea
roll
mov
add
add
add
add
add
add
add
cld
add
add
add
add
outsb
add
push
add
add
add
add
add
add
add
add
add
add
add
adc
ljmp
add
add
out
add
cltd
add
movsl
add
add
add
add
std
add
add
add
test
mov
add
add
add
add
add
jge
mov
or
cmpsl
add
add
add
add
ljmp
add
add
add
stos
add
mov
or
push
add
add
add
add
add
add
inc
add
test
add
add
add
add
add
hlt
add
add
add
add
in
push
jne
add
xor
flds
das
add
add
add
movb
add
add
add
add
add
add
fs
add
add
add
in
add
mov
xor
xchg
add
add
add
add
add
add
add
add
incl
stos
add
add
jnp
pop
add
add
lahf
xchg
ret
add
add
add
add
add
fistps
add
xchg
arpl
add
inc
add
add
jl
add
in
sti
add
add
add
add
add
add
fs
add
push
test
out
add
add
add
add
add
add
jg
add
cs
add
add
add
add
rol
add
sub
and
add
xchg
add
add
sbb
add
pop
jbe
ja
add
xchg
add
add
xor
add
add
flds
cmpsb
add
add
add
dec
mov
add
add
add
add
add
mov
add
jle
add
add
add
add
add
add
add
add
add
add
fcmovu
add
pop
add
add
add
add
add
add
add
and
mov
add
add
add
add
add
add
push
sub
pop
dec
cmpsb
add
add
sub
pop
add
add
add
jp
add
add
add
add
add
sub
stos
xor
add
add
add
mov
add
sti
sub
add
add
add
inc
mov
negb
add
add
add
add
add
jmp
add
mov
enter
jns
and
add
add
add
in
add
add
add
mov
mov
mov
inc
add
add
add
add
add
pop
add
add
sub
add
add
add
add
add
add
add
and
aad
outsl
add
add
add
sub
add
add
jnp
mov
add
add
cmpsl
add
add
add
add
add
add
inc
add
mov
add
stos
add
faddl
or
push
add
roll
add
add
icebp
add
add
add
add
add
cmpsb
add
rolb
add
add
add
add
add
add
add
add
jno
inc
add
add
add
add
add
jg
add
add
add
add
add
add
add
imul
lcall
add
add
mov
add
add
ltr
add
add
jmp
add
xor
add
add
loopne
sbb
jno
add
mov
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
scas
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
lods
add
add
push
add
add
add
lds
test
pop
add
add
push
add
add
add
add
push
add
add
add
add
add
inc
add
add
add
add
adc
pushf
add
add
cli
add
mov
add
add
add
add
mov
add
add
add
add
add
cmp
sub
mov
insb
add
dec
add
add
inc
add
add
add
add
jno
aas
add
add
or
lods
add
add
add
add
adc
cmp
in
add
add
add
mov
cwtl
add
add
jle
fiadds
jb
roll
add
add
add
add
jmp
add
fadds
dec
add
in
add
and
mov
add
add
add
add
add
add
add
add
add
ret
add
add
add
dec
add
add
add
add
add
pop
add
add
add
ret
add
and
jnp
add
jmp
add
sti
add
add
add
add
add
add
mov
add
add
mov
or
pop
add
lret
add
add
add
add
add
icebp
add
add
add
add
adc
flds
mov
rolb
add
add
sub
rclb
add
add
add
mov
xor
add
movsb
add
add
or
popf
add
add
add
add
icebp
inc
add
lods
in
add
lcall
cmp
add
add
add
add
add
add
addr16
add
xor
add
mov
xchg
add
add
add
add
add
add
add
add
add
pop
fimuls
popl
out
add
mov
add
add
jp
add
add
stos
xchg
add
add
add
sub
add
jo
add
popf
add
add
add
add
add
add
add
add
add
add
add
ret
add
add
add
add
add
add
ljmp
cli
add
add
add
add
add
add
add
add
add
popa
loopne
scas
sub
add
add
lea
add
out
jns
add
add
add
push
mov
adc
add
add
scas
add
add
int
in
add
add
add
inc
add
add
add
add
pop
add
add
add
lret
cld
mov
sub
add
mov
jae
ficoms
add
mov
icebp
nop
add
add
add
add
add
xor
add
les
add
push
add
add
add
xor
add
pop
add
add
add
dec
add
add
add
testb
add
add
in
add
add
add
rolb
add
add
add
add
add
cmp
test
xor
mov
jp
add
adc
add
addl
add
xor
add
cmpsl
add
add
jbe
add
xlat
inc
xchg
xor
nop
add
add
add
and
jle
pop
test
lret
fmull
add
add
addl
add
cmp
ja
jne
add
add
add
add
push
add
add
add
add
and
add
je
add
lret
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
movsl
incl
sub
add
add
add
incl
add
add
add
ret
add
add
add
add
add
add
add
add
mov
add
lods
add
add
sub
xor
js
add
inc
pop
stos
dec
inc
add
add
add
add
add
jno
pop
faddl
add
add
mov
in
add
das
add
add
add
popa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cltd
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
mov
add
out
add
cwtl
add
add
add
add
add
adc
insb
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
xor
dec
mov
xlat
xor
subb
jnp
add
das
jns
sbb
jl
dec
rol
or
sub
inc
and
daa
ret
das
and
cli
xchg
push
pmullw
test
add
sub
sarl
pop
daa
mov
pop
aad
jnp
mov
adc
push
dec
pop
jp
leave
pop
xchg
dec
lods
jbe
fs
pop
push
pop
shlb
repz
add
cmp
dec
insb
adcl
pop
push
jne
sub
pop
or
add
enter
and
fdivrs
adcl
jmp
std
or
xchg
movsb
fwait
cmp
imul
xor
das
sbb
or
popa
and
xchg
into
pop
dec
cmp
loope
mov
sbb
inc
ljmp
mov
dec
or
sar
inc
mov
cmp
mov
flds
push
add
add
add
add
pop
add
adc
mov
bound
add
cli
inc
stos
add
add
add
add
add
add
lret
call
hlt
dec
sbbb
add
add
add
dec
add
lahf
add
lods
add
addb
jge
les
or
out
jbe
sub
add
stos
add
add
add
jmp
fiadds
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
out
mov
add
add
add
add
add
xchg
add
add
add
add
add
ltr
add
add
data16
add
jb
pop
add
add
add
rolb
add
add
dec
sahf
xchg
pop
inc
rorb
add
add
add
add
xor
add
add
add
mov
hlt
add
cmp
dec
add
add
add
add
add
jmp
add
add
add
add
add
cld
insl
add
sub
add
add
add
add
add
add
add
add
mov
add
add
adc
add
add
add
add
and
add
add
add
add
add
mov
add
outsl
add
adc
add
add
cmp
add
cli
add
add
add
add
add
adc
add
add
add
add
mov
add
in
add
mov
add
add
stos
cmp
cmp
add
add
add
dec
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popl
add
add
add
add
and
add
add
add
add
add
pop
add
add
lods
add
add
sar
add
add
add
add
sldt
add
add
aaa
add
add
add
add
add
add
add
add
add
add
add
ljmp
icebp
add
add
add
add
lret
add
scas
dec
add
xchg
add
add
xchg
add
aaa
add
add
add
add
add
add
repz
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pushf
add
mov
fcoml
add
cmp
lcall
add
popa
add
mov
add
add
add
add
add
jmp
add
add
add
add
rcr
pop
add
add
pushf
add
xor
lret
push
verr
add
filds
add
pusha
mov
add
sbb
add
add
add
add
scas
add
add
add
in
loop
add
add
adc
add
cltd
sbb
imul
mov
add
add
add
add
add
add
cmp
jge
xchg
add
add
add
or
add
add
add
add
add
xlat
add
add
add
add
add
push
add
shlb
mov
add
add
add
add
add
add
dec
add
or
add
add
enter
add
add
add
and
sbb
push
data16
cmp
xchg
xlat
jge
mov
pushf
fldpi
mov
mov
fsubrl
dec
sahf
in
lock
in
adc
mov
into
mov
xor
popa
push
xchg
or
mov
data16
pushf
subb
fbstp
enter
add
icebp
mov
fwait
sub
push
fdivr
jg
xchg
vmwrite
mov
adc
repnz
rcr
add
add
xor
add
add
rclb
push
scas
outsl
add
and
ljmp
add
add
repnz
mov
mov
add
add
add
add
pop
add
add
mov
int
add
fs
add
addb
inc
stc
pop
add
addr16
add
add
rolb
add
pop
add
add
add
add
add
add
push
cmp
sbb
ret
xor
jae
add
or
scas
push
mov
mov
pop
lret
outsb
mov
push
movb
add
sbb
icebp
xchg
and
fsubp
cmp
mov
pop
or
add
enter
and
cmp
xchg
xlat
pop
pop
mov
jecxz
das
repz
sbb
mov
shll
test
repz
les
js
xchg
scas
sbb
sub
sbb
jl
repnz
jns
orl
pop
pop
xchg
lods
or
sar
dec
cmp
ss
nop
fs
push
push
pop
or
jge
mov
les
movsb
imul
jmp
cld
sub
add
lahf
or
nop
jo
jae
mov
icebp
in
fisttpll
and
outsl
cld
sti
dec
enter
orb
xchg
adc
testl
rolb
in
nop
dec
dec
push
cmp
clc
push
cmpsb
xchg
push
dec
sbb
gs
test
lea
arpl
mov
or
int
jp
lea
mov
aad
scas
popf
lods
aad
insb
add
leave
pop
mov
mov
or
enter
repnz
insl
jmp
or
jmp
sub
cmc
das
xchg
mov
push
pusha
pushf
mov
aad
fwait
xchg
lock
cmp
nop
je
xchg
sbb
add
lret
out
lret
enter
roll
jmp
ja
sar
aaa
mov
outsb
dec
pop
test
mov
jo
addl
dec
ss
rcll
into
sub
pushf
xor
push
and
pop
lods
popf
int3
add
mov
mov
adc
xchg
jp
push
add
xchg
bound
subl
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
mov
add
imul
or
add
or
add
aad
add
sub
add
jge
add
pop
pushf
add
scas
cmp
add
inc
add
add
add
sbb
pop
add
push
add
add
cltd
inc
add
in
cmp
out
add
xor
mov
add
add
test
push
add
add
arpl
add
ficompl
add
in
add
enter
jno
add
mov
or
add
and
add
push
add
xor
add
mov
xchg
ljmp
adc
repz
pop
add
jns
add
sub
add
adc
add
pushf
out
pop
mov
mov
add
jns
repnz
add
das
push
add
lock
add
sbbl
mov
push
cmp
in
rolb
and
dec
add
lea
jmp
push
add
and
push
or
inc
add
pushf
call
add
out
add
in
add
add
lods
out
add
dec
add
roll
das
rcrl
add
int
inc
incl
jae
mov
add
pusha
out
hlt
sub
add
xchg
popa
add
stos
testl
stc
pop
pop
add
mov
push
jmp
ja
out
out
and
testw
jle
cmpsb
cmc
out
add
aad
cmp
push
lds
adc
dec
adc
sahf
push
incb
popa
dec
movb
inc
cmp
pop
fsubl
add
pop
add
xor
add
inc
add
arpl
push
int3
xor
testb
or
sbb
repz
and
and
xchg
add
pop
push
add
adc
filds
out
push
lods
add
add
aam
sub
icebp
test
or
mov
les
outsb
arpl
inc
sldt
add
mov
push
pop
sbb
rorl
add
inc
aaa
ret
fdivrs
out
lock
add
mov
stc
in
xchg
sub
mov
ljmp
sbb
and
not
cmc
lods
movsb
imul
sbb
mov
mov
jp
les
pop
jns
mov
ficompl
into
cmc
push
std
bnd
cltd
jge
pushf
std
push
mov
movsb
stos
andl
data16
iret
and
test
je
jle
jmp
sbb
dec
int3
and
in
push
pushf
push
mov
push
cmpb
shr
es
cmc
pop
sar
fucomi
xchg
mul
xchg
mov
loop
mov
xchg
data16
sbb
jnp
pushf
insb
repz
mov
add
add
xchg
pushf
dec
mov
insb
jo
hlt
add
add
add
call
push
fildl
sbb
add
push
add
dec
adc
add
int
add
add
test
add
jne
add
xchg
mov
add
pop
add
scas
std
in
sbb
add
add
mov
add
add
sahf
inc
add
push
mov
add
roll
ret
add
sub
add
fwait
inc
add
adc
add
adc
jl
add
xor
les
dec
add
jns
mov
jo
add
cwtl
testb
or
add
pop
jbe
push
push
pusha
add
or
call
lods
mov
outsb
mov
or
out
add
adc
mov
mov
add
lods
add
mov
jl
jns
jnp
fwait
add
sbb
pop
ds
add
inc
push
add
xor
mov
stc
add
jns
add
or
xchg
pop
add
clc
mov
ret
add
pop
xor
jp
jmp
aas
into
add
fwait
pop
adc
loopne
js
add
pop
add
scas
in
aas
mov
sti
add
add
xchg
add
push
add
and
push
insl
les
cs
leave
add
add
push
inc
add
outsb
hlt
add
aad
add
inc
cmc
add
data16
fwait
sti
add
pop
sbb
add
test
push
add
pop
dec
add
push
push
add
xor
aas
xchg
add
jno
add
mov
dec
add
jge
add
add
add
ret
addb
clc
add
jle
add
and
add
dec
data16
inc
add
test
add
std
add
fmull
add
push
add
push
and
pusha
aaa
js
and
push
add
fsubrl
out
inc
insb
add
loop
add
xor
add
jle
add
jecxz
xchg
add
dec
pop
add
mov
pusha
adc
add
in
or
sti
or
add
pushl
add
inc
add
add
mov
push
out
add
or
add
cmp
add
mov
add
pop
pop
add
sub
dec
pop
or
cmp
add
lods
ja
aad
cld
add
mov
sbb
clc
iret
and
jne
addb
and
cs
or
add
fsubrl
movsl
jb
add
ja
stc
mov
add
into
add
enter
pop
xchg
add
push
ds
lods
sub
add
cld
jmp
arpl
insb
add
or
add
xchg
insl
add
in
add
pop
xchg
add
mov
add
fstps
add
in
adc
jmp
mov
mov
add
cmp
mov
xchg
add
lret
pop
repnz
add
test
add
push
xor
add
and
add
jae
sub
in
add
add
jecxz
jae
push
in
std
jge
scas
call
mov
fldt
add
add
push
push
loope
mov
xor
mov
add
mov
pop
in
add
add
add
push
sub
add
jl
sbb
add
sub
sbb
add
add
add
add
mov
fdivrl
xor
decb
scas
mov
cmpsl
pop
add
add
add
add
scas
lea
fmuls
out
movsb
pmulhw
and
aas
icebp
dec
cld
sldt
add
add
add
dec
pop
pop
or
leave
out
push
ss
std
fidivrs
add
add
add
add
call
std
mov
sti
xor
mov
rorl
add
add
add
fxch
add
add
movsl
xor
xchg
jns
pop
sub
lahf
scas
out
add
add
add
add
cmp
cmpsl
xchg
out
xchg
dec
gs
inc
mov
mov
mov
add
add
add
jmp
mov
or
cmp
inc
push
stos
icebp
inc
inc
adc
in
test
add
add
add
mov
ret
fldl
sub
pusha
mov
ds
sub
cmp
add
add
add
push
sbb
dec
test
aad
ss
scas
push
cmp
aas
sbb
stos
cmc
cmp
mov
imulb
mov
push
pop
fnstcw
pusha
or
sbb
fwait
and
icebp
jne
add
das
or
outsl
mov
lret
test
gs
mov
add
xor
ja
jnp
lods
stos
in
movsl
fldt
and
inc
mov
test
sub
fmuls
test
push
xchg
out
and
mov
xchg
popf
xchg
inc
dec
sub
add
adc
cltd
sbb
xor
lret
or
dec
mov
das
scas
cmp
mov
cwtl
lcall
pushf
mov
mov
into
mov
out
aaa
xchg
xor
add
xor
pushf
jnp
sbb
xchg
and
es
adc
dec
gs
mov
add
add
test
and
lret
lock
aas
mov
out
test
clc
inc
push
push
cmc
fwait
scas
add
lods
mov
sub
fs
or
inc
sbb
cmpsl
lea
lcall
dec
cmc
mov
cltd
orb
inc
xor
mov
adc
shll
mov
pop
sbb
shl
test
lock
mov
out
inc
movsb
call
ret
sub
dec
bnd
ss
cld
mov
or
fmull
dec
adc
add
jb
sbb
in
adc
mov
and
ret
mov
lcall
les
add
dec
int
cmp
push
jne
jae
ljmp
sarl
push
cwtl
movb
add
add
cwtl
lods
cmc
push
in
gs
insb
jae
int
das
loop
cmp
or
add
bound
fwait
sbb
ja
sub
nop
cmpl
adc
push
push
fmuls
add
pop
rcrb
mov
test
mov
add
push
and
adc
das
mov
roll
add
add
bound
add
jge
add
or
add
adc
add
add
fnsave
add
add
and
jo
add
add
rcll
add
sbb
add
cmpsb
sub
add
add
or
sbb
add
inc
add
inc
add
rorl
add
fcmovu
add
mov
fiadds
add
adcl
add
add
add
add
add
add
pop
add
cmp
add
insb
les
cmp
cs
xor
add
xchg
xchg
test
add
das
filds
pop
frstor
add
xor
add
in
add
dec
push
add
add
icebp
roll
mov
lcall
pop
jno
add
cmp
add
stos
lcall
lds
add
and
add
movsb
cwtl
add
hlt
cwtl
add
repnz
es
add
xchg
pop
add
sbb
add
adc
jle
adc
xor
add
ds
ja
add
add
xchg
aam
xchg
add
inc
pop
add
sbb
jb
jns
cmp
cmp
add
xor
add
shlb
into
sub
add
cmp
lock
add
jo
add
xchg
dec
add
sbb
xor
or
dec
dec
push
add
das
movsb
add
stc
add
sbb
add
cmpsb
cwtl
add
sbb
add
in
push
add
add
xchg
fbstp
add
popf
pop
add
out
add
sbb
jp
adc
inc
inc
adc
and
add
insb
add
adc
add
jnp
add
pop
lcall
enter
inc
push
add
mov
add
fcmove
add
xor
add
je
mov
add
jns
cmpl
add
sub
jo
cmp
cs
lahf
add
inc
das
add
ljmp
repnz
insb
add
jp
push
pop
jge
daa
rorl
add
cmc
add
stos
add
lret
add
or
add
js
add
or
add
inc
add
filds
add
pusha
add
add
add
dec
xor
add
fs
add
lea
add
addl
in
add
ljmp
jns
add
jne
add
repz
push
and
out
inc
add
or
add
cld
add
fstl
add
sub
add
inc
cli
add
pop
add
cmp
add
xor
stos
cmp
sahf
add
sbb
das
sbbl
mov
je
lods
fsub
add
or
lret
add
sub
add
xor
inc
fnstcw
add
xor
jp
stos
enter
push
adc
nop
in
add
xor
cmp
sub
mov
add
inc
add
add
add
ficoms
or
or
ret
add
data16
add
add
inc
dec
add
aas
add
inc
or
add
mov
jl
pop
fcoms
add
and
add
and
add
dec
add
cmp
insb
int
add
scas
test
add
mov
add
out
add
outsb
fiadds
out
incl
cmp
outsb
add
addb
stos
ja
lcall
add
jo
add
and
add
dec
cli
icebp
add
addr16
sub
ljmp
jbe
test
test
adc
cmc
dec
in
imulb
add
xor
mov
out
stos
fimull
out
rclb
je
movl
mov
aas
add
add
xchg
sbb
call
inc
add
jge
std
dec
mov
mov
scas
mov
add
ret
mov
imulb
or
jecxz
dec
pop
aaa
aaa
idivb
sbb
in
push
fbstp
ja
jge
xlat
rolb
add
shrb
pop
jb
fidivrs
pop
in
fsubrp
leave
aam
mov
cld
jno
shrb
je
add
add
out
xor
xchg
cmp
pop
test
rcrb
xor
jle
outsb
loop
fld
pop
jns
mov
call
add
mov
test
add
push
cltd
fiaddl
or
repz
push
or
stos
mov
mov
iret
enter
add
cmpsb
cmp
mov
das
inc
popf
jg
dec
dec
dec
dec
dec
cmovns
mov
cltd
int3
pop
push
fcompl
sub
add
add
or
int
movsl
call
lock
mov
out
stos
sub
sub
cltd
pop
dec
sbb
add
aas
lahf
mov
push
inc
fistps
mov
add
push
inc
mov
insb
nop
mov
out
mov
mov
mov
scas
leave
test
jecxz
jne
pop
scas
or
test
ljmp
aas
data16
inc
in
inc
sar
icebp
sbb
and
jb
add
add
and
das
outsb
mov
push
test
repnz
scas
fistl
add
cmp
add
add
add
add
movsb
xor
clc
adc
add
rorb
fmuls
jmp
adc
inc
push
mov
test
add
dec
std
xchg
dec
movsl
xchg
xchg
mov
xchg
xor
xor
mov
imul
cld
into
scas
mov
mov
add
add
add
add
es
insl
mov
pop
xor
and
shll
imul
or
add
clc
mull
in
lock
sbb
mov
pop
sbb
pop
mov
orb
add
shll
scas
adc
rep
enter
push
sbb
mov
adc
popl
add
icebp
rcll
sbb
xchg
dec
fbstp
pop
dec
daa
sbb
pusha
in
fmul
xchg
inc
mov
imul
add
decb
pop
xor
aas
sub
rcr
sar
mov
mov
divb
mov
in
and
add
mov
ret
xchg
loopne
cltd
pushf
push
bound
shr
mov
or
cmc
xchg
inc
popaw
mov
sarl
mov
rolb
mov
lods
push
into
push
loop
push
flds
test
bound
mov
and
fsubrs
cmp
fstl
les
mov
adc
add
pusha
cmp
movsl
loop
jmp
setb
sbb
and
into
adc
lock
rolb
jecxz
jecxz
lds
xchg
add
outsb
add
lds
xor
ss
fistpl
es
ja
push
fnstenv
pop
test
adc
jmp
adc
cmc
mov
add
push
or
dec
fisttps
and
dec
repz
das
call
outsb
test
inc
xorl
push
xchg
mov
xor
sbb
mov
cwtl
jmp
sbbw
ss
and
gs
sbb
mov
lret
data16
and
dec
lods
cltd
mov
or
add
pop
sbb
and
pop
push
cmpl
enter
sub
add
fidivs
lods
sbb
addr16
add
add
sub
sub
aas
push
mov
sub
fsubrs
fwait
or
ds
inc
or
icebp
in
mov
icebp
mov
in
test
sbb
add
repz
push
nop
dec
push
or
sti
and
in
dec
mov
rcll
push
add
movsl
test
add
xor
cwtl
xor
add
shl
pop
fisubs
xor
or
arpl
add
add
cld
mov
test
arpl
notl
mov
insl
mov
add
sub
cmp
jb
loop
push
or
cmp
cmp
iret
gs
jl
shll
fisubrs
inc
add
jae,pt
xchg
test
pop
ficoms
cmp
mov
push
adc
pop
mov
fiaddl
sbb
push
add
in
sbb
push
jb
cwtl
push
aam
scas
aas
stos
in
and
loopne
or
mov
loopne
mov
sbbb
addr16
mov
into
lcall
mov
in
mov
pop
lcall
fiadds
les
iret
cltd
inc
mov
cmpl
push
in
add
sub
sub
in
nop
scas
sbb
fimull
jle
inc
fs
pop
and
les
loopne
fs
dec
mov
add
or
or
scas
inc
xor
and
lock
cmpsl
enter
mov
push
outsl
xor
lret
add
dec
cmp
inc
mov
lock
jns
fmull
popa
sub
mov
outsl
sbb
jmp
xchg
popa
aaa
in
inc
mov
add
repz
xchg
and
cmp
pop
add
idivl
daa
das
std
and
leave
das
enter
adc
out
cmp
add
cmp
ret
mov
je
inc
sub
aaa
adc
dec
stos
push
inc
mov
push
roll
mov
leave
and
movsb
decb
add
fiaddl
fstpt
or
sub
push
or
cli
cmp
push
add
test
add
mov
into
imul
xor
pop
adcl
cld
push
xchg
js
push
ja
push
mov
repnz
add
add
pop
stc
sbb
cmpsl
enter
jle
sub
push
ficompl
divl
xor
add
in
dec
or
shl
je
mov
shll
sub
inc
add
sub
mov
xchg
cltd
in
and
add
xchg
mov
mov
xchg
in
enter
push
iret
loope
andl
icebp
out
icebp
and
pop
stos
pop
mov
std
and
leave
das
pop
push
imul
inc
int3
nop
inc
adc
add
ljmp
mov
sarl
cmp
cmp
xor
add
add
sti
dec
enter
add
orb
hlt
lea
add
in
add
addl
add
xchg
add
mov
add
shlb
add
xlat
add
add
add
dec
jp
add
clc
add
cmp
dec
add
push
add
add
add
sub
in
add
bound
add
adc
add
add
loopne
add
add
add
pop
push
add
movsb
add
rorb
add
imul
add
add
or
add
add
add
movl
add
mov
add
add
add
les
add
add
add
xchg
add
add
add
add
mov
add
add
add
jge
add
add
add
xchg
add
lret
add
add
cmpsl
add
sub
add
add
add
add
add
add
add
movsb
add
je
add
add
add
jnp
add
add
add
add
add
sbb
add
add
add
pop
add
add
imul
pop
add
add
sbb
add
add
add
ret
cmpsl
add
add
rolb
incb
add
add
add
subb
je
add
pop
add
pop
cmpsl
add
add
add
std
xor
add
and
add
les
add
add
xchg
movsb
fwait
cmp
mov
add
add
ret
add
add
imul
pop
lock
mov
ret
imul
cmp
orb
cmpl
and
add
jmp
xchg
pop
or
ljmp
mov
jp
pusha
push
rorl
cmc
inc
pop
dec
iret
sbb
and
js
lret
and
xchg
ret
xor
and
add
insb
jns
bound
test
repnz
cmp
push
out
aaa
mov
stos
or
mov
mov
js
push
js
cmpsl
pop
rorb
roll
xchg
jge
mov
inc
fistpl
mov
mov
subb
cmp
in
repz
cwtl
inc
inc
fisubrl
cwtl
test
imul
sbb
sub
sahf
jne
add
add
jnp
pop
or
jb
daa
lcall
sub
adcb
jmp
clc
pop
or
shrb
xchg
mov
es
les
notl
fisttpll
call
xchg
and
shlb
das
cs
mov
jle
ljmp
rcl
sub
mov
rorl
jnp
call
dec
xchg
popa
in
mov
jl
xchg
aad
pushf
xor
push
and
jo
fwait
cltd
jmp
mov
mov
addr16
loopne
enter
adcb
mov
bound
subl
xor
adc
jl
pop
mov
data16
cmp
in
inc
push
sub
push
xchg
pop
out
fs
ljmp
sbb
cmpsb
mov
cs
push
lea
ljmp
mov
push
dec
sub
fcomps
dec
cmpb
mov
add
das
shrb
xchg
mov
cmp
imul
cltd
xchg
xchg
lock
xor
pop
cmp
jl
sbb
cli
lea
push
hlt
jbe
in
jmp
sub
decl
stos
push
inc
pushl
pop
dec
call
loop
cmp
push
push
popa
xor
pop
lods
aad
pushf
xor
sub
jno
jg
and
jb
mov
imull
popa
in
mov
aad
std
mov
xlat
xchg
push
cmp
mov
mov
out
out
sbb
enter
in
cltd
cmp
fdivl
repnz
popf
push
mov
cs
jno
xor
push
mov
mov
mov
dec
fwait
adc
insb
cmp
ret
push
jne
sbb
xchg
arpl
enter
and
int3
dec
cmc
adcl
jecxz
pop
rolb
xchg
or
dec
and
fwait
mov
and
sbb
xor
das
sbb
or
popa
and
xchg
into
pop
dec
cmp
loope
mov
sbb
inc
loop
mov
mull
and
ret
mov
imul
pop
add
in
cmp
xchg
push
jns
loopne
inc
push
xchg
dec
arpl
and
stos
sahf
add
adc
push
and
stos
rcr
and
js
jae
sub
bound
out
cwtl
lock
jae
fdivl
lahf
iret
int3
or
cltd
pop
lret
test
js
cmp
cmp
callw
adc
or
push
mov
pusha
jp
add
add
add
add
add
add
add
add
add
clc
add
dec
push
add
cmp
add
shll
add
add
das
repz
test
add
add
add
add
add
add
add
add
xchg
insb
in
aad
mov
lret
mov
mov
enter
and
mov
aaa
pushf
xchg
sbb
pop
pop
call
xor
dec
imul
fsub
sbb
scas
and
lock
stos
loopne
mov
imul
cmp
addl
sbb
fcomps
mov
lock
xorb
shll
fs
dec
imul
adc
and
push
lret
dec
std
jge
out
hlt
movsb
fs
aad
into
dec
dec
inc
dec
pop
adc
sub
mov
imul
cmp
xchg
mov
push
sub
fdivrs
aad
out
add
add
ss
adc
sbb
idivb
les
cltd
mov
sti
mov
loope
pusha
clc
pop
inc
js
mov
rclb
jl
repz
daa
mov
aas
mov
pusha
insb
xchg
mov
dec
pop
push
sub
or
push
enter
and
cmp
or
xchg
lea
xor
data16
cmp
cmpb
jl
ss
xor
or
sbb
sbb
popa
and
sbb
shl
sbb
jmp
inc
bnd
mov
int3
mov
data16
or
fcmovnbe
mov
cmp
popa
lods
shll
faddl
pop
dec
call
inc
in
std
clc
pop
popa
test
cmp
dec
jno
dec
adc
pop
sub
mov
imull
and
sti
bound
cwtl
push
push
out
sarl
pop
in
out
sbb
adc
adc
xchg
cmp
mov
push
or
loopne
outsb
clc
pop
jne
sarb
mov
mov
stc
xchg
fdivrs
test
sbb
sbbb
pop
pop
arpl
inc
dec
or
adc
enter
and
cmp
aad
xchg
xchg
fstl
shrl
push
cmp
xchg
jne
insl
daa
sbb
aaa
mov
sbb
push
ret
popa
and
imul
pop
pop
rorl
add
pop
loopne
sbb
inc
out
mov
mov
pop
or
int3
out
mov
cmp
lods
popf
mov
or
faddl
je
call
dec
subl
popa
out
mov
aad
lds
push
sbb
adc
daa
out
daa
hlt
inc
imul
jp
sti
inc
xchg
mov
push
pusha
and
jg
imul
jnp
lea
imul
add
shll
sbb
mov
push
clc
jno
sub
mov
stc
push
leave
adc
repz
das
sbb
pop
icebp
nopl
stc
mov
inc
push
push
sub
or
push
inc
enter
and
mov
add
add
xor
push
repz
aam
stos
fwait
aas
xor
jne
popa
and
pop
fdivrp
lock
sbb
add
popa
or
xchg
les
pop
dec
data16
loop
sbb
imul
clc
or
or
aad
mov
cmp
pushf
popf
movsb
gs
xchg
lahf
int3
mov
xor
aam
subb
fstps
jge
lahf
aad
xchg
cmp
adc
jle
push
cmpsb
add
imul
xchg
sti
dec
into
cmp
push
and
mov
xchg
push
jg
ss
subb
adc
adc
sbb
icebp
cmp
sbb
mov
sti
jp
mov
data16
shlb
dec
repz
pop
mov
sbb
es
mov
sbb
push
or
cmp
cmp
enter
and
ja
lods
adcl
in
pop
mov
lea
lahf
in
fwait
ds
jne
js
sbb
xor
dec
scas
sbb
add
sbb
imul
aas
sti
loope
test
mov
pop
mov
mov
inc
or
xchg
cmp
mov
mov
gs
push
add
add
call
dec
lea
popa
xor
mov
dec
push
jae
outsl
sub
clc
inc
imul
add
add
add
add
jmp
xorl
in
mov
paddw
hlt
ret
out
hlt
jge
mov
les
das
mov
sbb
push
popf
lock
sti
add
xchg
clc
mov
xchg
daa
push
andl
mov
cmp
inc
insb
sbbl
cs
dec
or
or
sub
xlat
and
cmp
shrl
xchg
sbb
pop
pop
aam
or
inc
int3
sub
cmpsb
arpl
jne
or
push
xchg
testb
mov
sub
insl
pop
mov
loope
ret
inc
jne
popf
mov
mov
cmp
or
mov
fs
ficomps
loope
fsubl
xor
daa
aam
mov
std
filds
jg
mov
int
inc
dec
enter
mov
mov
loope
mov
in
cmp
sti
push
fsubrs
in
xchg
adc
jmp
cmp
pop
out
jns
or
into
adc
and
ds
jbe
jns
dec
popf
cs
inc
clc
jp
cmp
mov
cli
push
andl
mov
sbb
adc
sbbl
push
das
pop
inc
or
dec
adc
iret
cwtl
push
lret
push
xchg
push
orb
std
adc
aaa
sti
and
mov
insb
je
cmp
in
ja
mov
aam
cmp
cmp
cmp
aas
into
in
ljmp
lea
enter
push
mov
mov
dec
or
lret
dec
mov
mov
addr16
adc
fisttps
outsb
jge
add
dec
into
push
ljmp
add
add
add
add
xchg
adc
dec
cs
xchg
fcmovu
mov
pop
pop
mov
jl
jae
das
sti
bound
xchg
cwtl
jno
imul
das
out
aaa
arpl
or
data16
inc
pop
rolb
es
repnz
call
and
push
mov
fstpt
fsubrs
mov
mov
xor
incb
push
mov
icebp
icebp
das
add
xor
jns
out
dec
repz
insb
dec
int3
stc
push
negb
pop
dec
push
or
add
xchg
xchg
inc
pusha
xor
out
fsubr
das
ret
cmp
or
stos
das
inc
pop
jne
adc
mov
or
ret
cmp
sbb
out
arpl
inc
pop
sub
add
repnz
mov
sbb
ljmp
mov
out
ret
inc
mov
ja
cmp
clc
mov
xor
movl
add
add
xor
call
inc
lea
popa
jbe
pop
int3
jo
aad
sbb
dec
and
enter
xchg
imul
andl
sub
lds
divb
fistpl
out
outsl
les
pop
aaa
in
adc
cmp
aam
mov
popf
cs
sti
out
push
clc
pop
pop
dec
shrb
mov
push
push
xchg
mov
xor
inc
insb
push
pusha
mov
or
push
std
xor
push
enter
and
out
incb
sbb
loop
xchg
inc
cmp
push
pusha
fwait
daa
push
or
push
js
cli
stc
notl
lods
leave
lock
pop
jbe
or
add
rcll
loope
mov
popf
inc
out
mov
cs
dec
cmpsl
push
aaa
mov
and
gs
or
sbb
jge
cmp
adc
and
lods
bound
add
jl
or
andb
push
loope
ds
xor
mov
imul
test
dec
lret
icebp
orl
mov
sahf
inc
jg
and
subb
pop
cmp
adc
or
aad
test
add
push
popf
mov
es
ficompl
clc
pop
push
pop
shlb
cld
repz
push
pop
mov
lcall
insb
sub
and
dec
inc
add
add
fdivs
push
xlat
sbb
adcb
push
xchg
test
into
cs
pop
std
mov
sti
cmp
xchg
movsl
cwtl
cmp
or
faddp
test
xchg
mov
fistpl
iret
and
inc
xchg
push
mov
cmp
add
add
add
add
cltd
mov
sub
add
lahf
inc
ljmp
loopne
ret
dec
insl
shlb
mov
xchg
es
sub
pop
sub
mov
cltd
les
add
add
push
mov
and
push
ret
stos
jl
inc
sub
push
xlat
xor
mov
imul
nop
mov
ds
xchg
mov
push
movsl
push
movsb
call
jg
into
mov
or
add
add
add
add
gs
adc
jne
cmp
arpl
sbb
mov
sti
inc
mov
clc
push
push
push
sarb
jecxz
push
inc
movsb
mov
xchg
fcomp
sbb
sbb
int
sub
pop
or
add
int
xchg
out
fidivrl
adcl
mov
mov
cmp
movsb
out
fwait
es
or
sub
jle
outsb
push
sub
add
add
add
or
sbb
mov
imul
icebp
loope
mov
sbb
lcall
jmp
pop
out
cli
lods
dec
movsl
cmp
xor
mov
mov
adc
getsec
dec
aam
xchg
popa
in
mov
jle
xchg
aad
cwtl
xor
jle
adc
jae
xor
mov
repnz
test
jecxz
xlat
loope
loopne
call
add
add
shrb
hlt
ljmp
js
subl
xor
adc
cmp
mov
repz
sub
sbb
je
xchg
sub
lods
lock
inc
cmc
push
pop
pop
sarb
jbe
cmpsl
mov
test
or
jns
pushf
lcall
pop
push
jne
cs
pop
or
sti
add
xchg
iret
xor
pusha
loopne
sbb
or
dec
jmp
repnz
lret
add
jns
cmpsl
xchg
cld
mov
cmp
xor
xchg
add
hlt
cmpsl
lods
xorl
add
ss
add
jmp
mov
mov
test
push
jns
decl
out
sar
inc
mov
cmp
mov
movl
dec
aam
pushf
and
repnz
jo
fisubs
inc
fcmovb
mov
lret
and
insl
xchg
out
repnz
stc
lock
cld
fs
adc
add
inc
lret
js
cld
lret
fcompl
push
sti
scas
push
push
jnp
fistpl
pushf
jb
popf
cs
lods
sti
in
inc
clc
pop
push
pop
shlb
inc
lret
add
stos
pop
cmpsb
popa
push
mov
inc
jge
mov
add
add
pop
push
jne
sub
pop
or
add
enter
and
fdivrs
adcl
jmp
std
or
xchg
movsb
lcall
sub
push
xor
das
sbb
or
sub
push
xchg
xchg
sbb
in
cld
lock
add
add
fisttpll
ljmp
jge
dec
mov
mov
es
jle
and
jnp
scas
pop
ss
push
xchg
mov
mov
sub
add
push
push
pop
sub
xor
push
add
add
add
pop
and
add
dec
add
ss
add
add
jl
add
stos
and
add
sbb
add
add
add
add
sbb
add
xchg
mov
add
int
add
out
xor
add
pop
add
dec
adc
add
shll
add
push
add
adc
add
add
add
sbb
add
and
add
cltd
add
add
add
add
add
add
fistpl
mov
or
xor
sbb
out
movsl
jp
xchg
jle
fdivl
cld
sub
xor
in
add
outsl
fimull
cmpsb
std
ret
inc
pop
scas
and
jnp
mov
int
aas
sbb
mov
dec
testl
adc
mov
daa
insb
and
sbb
sub
mov
add
xchg
sub
sub
stos
sbb
fiaddl
xorl
arpl
cmc
mov
roll
std
inc
pop
mov
dec
insl
and
and
mov
or
popa
xorb
or
sbb
adc
out
sub
imul
sub
cld
sbb
aaa
lret
or
int
xor
into
js
sbb
rorb
testl
jl
fistl
mov
je
pop
inc
push
sbb
movsl
inc
push
cli
add
xchg
test
popa
jns
sbb
dec
divb
pushf
insb
sub
lahf
jne
cwtl
test
cwtl
stos
iret
pop
shll
addb
add
or
addl
aad
aaa
lods
popa
std
adc
outsl
sti
and
shlb
inc
sub
loop
stos
les
int3
rcrl
hlt
and
adc
inc
xchg
xlat
inc
adc
jmp
jl
mov
add
aam
ljmp
fdivrl
inc
lahf
shr
xor
stos
into
icebp
jle
xor
jnp
mov
ret
cmpsb
in
rcrl
cwtl
in
sub
sub
push
sub
out
jg
mov
mov
fsubrl
lret
in
cwtl
and
mov
and
stos
sbb
push
subl
pop
xor
push
dec
inc
adc
and
cmp
jmp
pop
fstpl
inc
out
and
jle
popa
pop
cmp
xchg
sub
cltd
hlt
cmp
push
inc
adcl
pop
push
push
addr16
jnp
cmp
inc
sti
das
in
adc
ficomps
adc
repnz
cwtl
pop
fdivs
sub
add
xchg
andb
insb
or
loope
or
aas
andl
add
add
and
xchg
rclb
cmp
negl
adc
popf
inc
sti
dec
mov
mov
push
or
aam
mov
cmp
cltd
popf
mov
gs
adc
call
dec
popf
add
lret
mov
jns
mov
dec
push
loope
and
outsl
jge
das
add
bound
cwtl
insl
addl
std
push
aaa
mov
mov
push
add
lods
inc
jns
pop
js
movsl
push
rorb
call
xor
push
inc
loop
and
cmp
add
jbe
lods
stc
call
inc
pop
ret
repz
jb
icebp
cmc
sub
mov
sub
dec
outsl
xchg
dec
insb
mov
dec
jne
cmp
comiss
and
sti
cmp
lahf
iret
xlat
adc
pop
sti
aas
int
movsb
sahf
and
pop
jae
inc
sub
push
mov
das
sbb
pop
jae
insl
cmp
into
add
repz
sbbl
mov
xchg
inc
dec
push
mov
cmp
jnp
aad
add
add
rclb
andl
push
fimuls
jge
add
and
arpl
cmpsl
rol
jae
xchg
les
adc
jae
xor
bound
xchg
cwtl
outsl
mov
repnz
pop
jmp
or
mov
mov
js
cltd
inc
rorb
sbb
adc
ds
push
jmp
sub
cltd
mov
aam
inc
fldcw
pop
jecxz
and
jne
fs
xlat
int3
ds
push
testl
or
xchg
push
inc
adc
daa
push
push
pop
add
ret
int
test
inc
das
fdivrs
in
adc
fiaddl
cwtl
pop
repz
sub
stos
mov
push
mov
xor
cmp
adc
jg
inc
sbb
pop
xchg
fsubs
dec
ds
sbb
xchg
mov
sarl
mov
repz
mov
push
and
inc
mov
dec
cmp
cmpsl
mov
jnp
dec
stc
es
faddl
pop
dec
call
dec
movsl
adc
popa
cmc
mov
jp
movsb
aad
std
mov
adc
cmp
add
add
add
imul
repz
dec
ret
daa
mov
mov
and
mov
xchg
push
jg
outsl
insb
out
aad
pop
cmp
adc
adc
idivb
sbb
mov
sti
fldl
ffree
mov
mov
push
mov
jns
jmp
insb
lret
and
mov
and
push
addr16
ja
cld
enter
and
cmp
or
or
pop
sahf
jnp
or
fdiv
ss
mov
sub
mov
fwait
popf
lock
popa
daa
dec
push
imul
pop
imul
xor
repz
insb
mov
sahf
mov
daa
xor
ficomps
sbb
scas
xor
arpl
and
data16
aad
std
dec
and
in
push
jle
aad
les
jns
pop
adc
or
adc
in
movsl
outsl
fbld
dec
call
cmp
daa
push
mov
mov
dec
out
xor
movl
add
psadbw
sub
sbb
mov
clc
jns
cmp
mov
cld
push
subb
clc
xor
xchg
fdivrs
stos
push
addb
mov
pop
arpl
inc
dec
or
or
or
mov
dec
aas
aam
cmpl
sbbb
dec
fisttpll
xlat
test
jne
xor
test
mov
sbb
adc
daa
imul
loope
dec
sbb
loope
xchg
lods
sbb
dec
mov
mov
addb
scas
xchg
sahf
mov
cmp
mov
mov
lds
add
call
dec
mov
std
fistpl
jle
adc
lret
push
adc
adc
sub
jecxz
imul
outsl
in
sti
dec
ret
int
push
sbb
jae
sbb
or
cmpb
pop
daa
leave
adc
jg
gs
stc
div
aaa
cld
sbb
icebp
xchg
loopne
insl
clc
pop
dec
je
mov
fcoml
inc
je
cld
sbb
mov
movsl
adc
adc
ret
mov
push
jb
sub
add
and
aas
fbstp
adcl
loope
pop
cltd
push
repz
inc
aam
aas
ss
jne
addr16
sbb
xor
inc
sbb
or
push
imul
mov
loope
movsl
sbbb
sti
dec
mov
pushf
and
imul
aas
lahf
popf
gs
gs
faddl
sub
dec
cwtl
or
popa
icebp
cmpsl
popa
std
ljmp
in
je
pop
dec
inc
adc
jne
and
imul
pop
test
push
imulb
out
rclb
addr16
xchg
push
incl
or
rcll
xor
inc
cmp
gs
mov
lods
sub
popf
cltd
and
loopne
mov
push
bound
cltd
fs
mov
xor
test
cmpsb
push
dec
fcmovu
or
or
push
dec
or
adc
pusha
rorl
fs
pusha
loope
adc
adcb
jmp
bound
xchg
out
in
pop
cmp
sub
in
mov
cmc
xchg
out
fs
xchg
iret
clc
or
sbb
xchg
push
mov
test
inc
jmp
mov
int3
loopne
mov
inc
sbb
ret
inc
xchg
je
cmp
mov
outsl
and
pushl
pop
stc
call
insl
xlat
push
std
data16
push
jl
aad
repnz
adc
sub
cmc
inc
imul
jl
sti
dec
aam
mov
lahf
and
jo
test
jg
pop
cmp
add
add
in
adc
add
hlt
sub
sbb
call
dec
clc
pop
push
push
shlb
dec
repz
mov
cmp
inc
insb
sbbl
or
dec
or
or
movsb
and
cmp
iret
and
push
call
cmp
std
das
fwait
sub
jle
sbb
xor
add
sbb
adc
popa
and
imul
in
pop
insl
jno
addl
sbb
jns
aaa
mov
mov
dec
or
ret
mov
sub
icebp
popf
mov
movl
jp
rdpmc
inc
aam
subl
jge
lahf
aad
xchg
cmp
adc
jge
and
insl
imul
push
sti
dec
lds
mov
iret
bound
sti
mov
xchg
push
jg
xor
mov
and
adc
sbb
icebp
cmp
sbb
hlt
mov
loope
data16
pop
dec
jae
cmpsl
jb
push
pop
rorl
add
add
adc
in
cmp
insb
adcl
push
jno
ds
or
xor
test
and
insb
orl
stos
mov
mov
data16
cmp
fwait
adc
cmp
lret
push
sbb
out
scas
inc
push
sbb
push
xchg
popa
adc
ja
cmp
mov
loope
out
sbb
inc
sti
dec
mov
mov
push
or
shl
mov
cmp
fwait
popf
mov
gs
pop
sub
add
arpl
std
dec
out
call
shl
mov
jl
xchg
aad
popf
xor
sbb
adc
jo
xor
and
pushf
imul
stc
sti
dec
int3
xor
cmp
sahf
dec
jg
addr16
subb
pop
xor
adc
cmp
hlt
and
sbb
out
sti
out
push
clc
pop
pop
dec
shlb
push
repz
xor
sub
xchg
fdivrs
mov
sbb
mov
adc
pop
jp
adc
jl
and
sub
pushf
xchg
lods
fucomp
fwait
movsl
cpuid
or
nop
movsl
fwait
cmp
push
sbb
xor
sub
adc
ljmp
xchg
lret
pop
push
add
sbb
inc
out
pop
mov
mov
inc
or
nop
xchg
mov
cmp
mov
mov
gs
or
faddl
jo
call
dec
mov
std
faddl
jg
test
xlat
mov
dec
inc
pop
adc
outsl
sub
stc
jg
lahf
cltd
xchg
shll
pop
lcall
or
cmp
fcoml
idivb
in
int3
out
jecxz
or
xlat
mov
idivb
mov
and
xor
clc
cmc
sahf
shrb
push
pop
ret
daa
xchg
leave
mov
fisttpl
test
insb
addr16
mov
out
push
lret
std
mov
shlb
leave
and
aas
fnstsw
adcl
out
ficoms
mov
sub
cmp
cltd
scas
fwait
cmp
push
jne
bound
sbb
add
in
lock
sbb
add
popa
daa
dec
sbb
pop
dec
xor
loopne
mov
rcrb
mov
divl
cmpsl
xchg
jbe
mov
add
add
mov
call
jecxz
mov
lret
mov
dec
into
inc
or
dec
in
outsb
test
iret
and
sub
cwtl
leave
imul
inc
mov
lahf
mov
mov
std
mov
push
dec
mov
sbb
out
ljmp
push
jge
cmp
jmp
xor
popf
push
test
sti
test
xor
pushf
je
push
test
push
repz
xorl
push
sbb
pop
sbb
push
cmp
dec
cmp
xchg
dec
xchg
test
lret
dec
loop
xor
imul
add
add
cmpsl
xor
lahf
test
xchg
adc
sbb
stc
popa
cmp
test
pop
push
sub
loope
cmpsl
sbbl
jbe
xchg
fxch
mov
push
fisubs
sbb
data16
gs
sub
sub
call
lods
xor
xchg
popa
in
mov
jl
xchg
aad
cwtl
aaa
dec
push
sbb
adc
adc
and
push
popf
mov
mov
dec
sarb
jp
and
mov
xchg
dec
jg
imul
pop
ds
adc
cmp
idivb
test
out
pop
clc
inc
sbb
shrb
cmp
cmpsl
dec
jae
add
add
inc
mov
or
sub
pop
insb
xchg
pop
jp
dec
pop
bound
inc
inc
or
adc
enter
and
and
daa
xorl
std
notb
mov
cmp
cmp
xchg
jne
jae
sbb
rcll
push
lock
cld
sbb
or
popa
and
xchg
lret
cmp
loope
mov
sbb
inc
out
push
mov
mov
inc
or
repz
adc
popf
mov
lds
icebp
push
fimuls
je
ljmp
and
arpl
movsb
rol
jae
xchg
les
adc
jae
outsl
andb
inc
cwtl
dec
lea
add
add
sbb
cld
addr16
inc
aaa
cmpsl
sti
xchg
or
cmpsb
pop
popl
ja
lock
adc
call
and
stos
push
in
fildl
insl
pushf
mov
icebp
roll
ja
in
inc
movsb
fs
in
ds
pop
test
dec
outsb
adcl
push
das
dec
pop
or
add
lret
sub
int
in
cmp
cmp
sub
cld
or
das
shrb
xchg
movsl
pushf
ss
sub
in
les
sti
xchg
sbb
in
insb
ss
or
xchg
int
pop
cmp
icebp
add
popf
or
add
sub
leave
or
and
add
add
jno
shlb
mov
insl
aaa
es
outsl
aam
sbb
adc
imul
ss
ficompl
cmp
jle
lea
mov
pusha
sub
xchg
push
call
test
in
mov
scas
jns
sub
in
outsl
enter
sub
out
je
sahf
pop
fwait
push
push
andb
lret
insb
ds
lock
mov
leave
lods
sub
mov
mov
loopne
mov
push
jge
fsubs
add
mov
das
loopne
imull
inc
rcr
js
std
push
outsb
mov
cmp
add
cmp
lea
add
fldl
add
add
gs
pop
pop
imul
xchg
sbb
test
repnz
les
call
sbb
xor
xchg
das
adcb
inc
popf
xor
and
lods
ljmp
pop
jge
iret
aaa
rcr
bound
data16
inc
jle
movb
fldl
jnp
jmp
ss
dec
xchg
pop
mov
sub
dec
push
push
and
push
jb
and
mov
cmpsb
sub
cld
inc
enter
orb
das
je
out
addr16
inc
jne
bound
xchg
insb
ret
xor
push
pop
inc
add
mov
push
jae
mov
dec
add
add
add
fcoms
mov
fs
lahf
dec
ds
std
scas
notl
popf
mov
fucomp
aas
adc
push
cmpsl
loope,pn
xor
pop
add
xchg
pusha
cs
mov
fildll
subb
sti
jmp
ficomps
add
das
inc
pusha
xchg
jp
idivb
sub
push
xor
das
sbb
or
push
outsb
inc
or
xchg
iret
add
cmp
loop
mov
push
mov
leave
cltd
inc
ljmp
mov
sar
dec
mov
arpl
es
aas
mov
jnp
jecxz
ss
fistps
daa
lock
xchg
outsl
clc
mov
mov
sub
sbb
add
add
jnp
in
imul
jb
mov
sti
enter
sbbb
repz
mov
or
leave
fsubrs
xlat
xor
loop
mov
js
sub
xchg
xor
int3
mov
ficompl
and
call
andb
add
cmp
dec
outsb
addl
pop
push
ja
sub
pop
or
add
int3
das
gs
and
stc
jle
adc
rcrb
cwtl
pop
sti
add
nop
mov
add
and
loope
stos
pop
xor
and
adc
jecxz
and
or
dec
sbb
int
add
add
adc
in
jecxz
mov
out
mov
out
jmp
push
cmp
xor
scas
sti
test
pop
and
decl
outsb
loope
in
roll
popa
cmp
pop
sub
add
mov
or
adc
push
sub
xchg
shrb
das
pop
imul
sti
inc
loopne
mov
test
push
xor
mov
mov
inc
imul
js
mov
rclb
arpl
or
push
and
push
mov
fstpt
fcoms
pushf
mov
test
cmp
out
repz
adc
repnz
mov
xor
dec
outsb
popl
sbb
jne
fwait
xchg
push
cs
add
push
fists
inc
cmp
cmp
and
sbb
push
std
pop
adc
cmpb
pop
idivb
jmp
mov
bound
xchg
and
sbb
cmc
outsb
cmp
adc
xchg
rclb
push
cmp
repz
push
jmp
ljmp
mov
dec
or
sar
inc
mov
cmp
mov
dec
xchg
push
fldl
jnp
ljmp
and
arpl
mov
stc
and
xchg
rcrl
adc
push
jb
sub
arpl
mov
cmpsb
sub
repz
enter
orb
je,pn
mov
cmpsb
out
dec
insb
jo
add
add
je
les
jnp
mov
repnz
xchg
cwtl
es
xchg
iret
loopne
nop
out
push
adc
lock
outsb
lock
mov
inc
mov
xor
insb
mov
pop
mov
pop
outsl
push
aaa
pop
inc
or
adc
shll
ljmp
xchg
xchg
xlat
pop
cwtl
pop
std
or
xchg
movsl
fwait
xor
gs
push
sbb
xor
sub
popa
aas
jnp
imul
lret
cmp
loope
mov
sbb
inc
out
pop
mov
mov
inc
or
icebp
mov
cmp
mov
mov
flds
fcompl
adc
popa
add
add
fstp
mov
popa
call
sub
sbb
jbe
adc
add
push
lret
xor
adc
stos
scas
mov
iret
popf
push
add
hlt
bound
cltd
insb
fistpl
inc
xor
add
mov
insl
xor
jae
popf
das
in
lods
sti
in
inc
clc
pop
push
pop
shlb
repz
add
cmp
dec
outsb
adcl
push
das
dec
pop
or
add
lret
sub
xchg
pusha
in
cmp
sbb
xchg
xchg
pop
cld
or
das
cli
xor
xchg
movsl
xchg
xor
mov
les
add
add
cmpsl
jle
imul
or
bound
das
cmpsb
mov
add
fstps
mul
inc
arpl
cmp
frstor
xchg
out
dec
mov
loopne
mov
movl
and
das
dec
into
pop
popf
and
mov
lret
xchg
fptan
cmpsb
xor
and
push
bound
mov
data16
scas
or
jmp
mov
movsl
faddp
or
movsb
das
xlat
inc
addr16
sub
rclb
imul
nopl
sbb
xlat
push
mov
jnp
pushf
sub
lods
cli
loop
inc
stc
pop
pop
pop
sarl
insb
dec
icebp
add
add
add
fstpt
xchg
mov
insb
push
xor
jne
xor
imul
gs
adc
movsb
scas
adc
cmp
nop
not
mov
ret
std
andb
mov
adc
and
sub
fsubrl
jmp
adc
jns
and
xchg
into
pop
dec
cmp
loope
mov
sbb
inc
ljmp
mov
dec
or
sar
inc
mov
cmp
mov
movl
jge
or
dec
aam
andl
jmp
das
xchg
aam
xchg
xor
pop
and
jbe
jae
and
cwtl
hlt
pop
mov
inc
add
add
jo
mov
fxch
jecxz
push
and
and
or
idivb
fdiv
shrb
fadds
and
stos
push
repz
fistl
fwait
js
xchg
inc
inc
push
es
imul
ret
test
test
xor
jns
roll
push
out
insb
mov
push
jne
sub
pop
or
add
enter
and
fdivrs
adcl
jmp
std
or
xlat
nop
movsb
fwait
cmp
pop
jne
imul
lock
sbb
or
popa
es
or
xchg
into
push
dec
cmp
sahf
sbb
or
pushf
inc
loopne
movsl
hlt
xchg
jmp
sbb
add
add
push
js
pushf
mov
movb
fiadds
js
in
or
dec
rorb
and
callw
iret
jns
xchg
xchg
xor
adc
jae
sub
bound
pushf
cwtl
jp
arpl
mov
jne
out
inc
fdivl
mov
dec
out
hlt
jle
and
bound
subl
xor
adc
push
cmp
cmc
sub
pushf
popf
das
in
lods
sti
in
inc
clc
pop
push
pop
shlb
repz
aas
add
cmp
jg
push
insb
mov
sbb
dec
rcll
sub
cmp
push
or
dec
jmp
add
add
jle
push
das
xchg
push
lea
pop
je
imul
les
repnz
and
outsl
sbb
cli
out
mov
sbb
ljmp
mov
out
shl
mov
mov
rolb
mov
rol
push
push
fdivr
incl
jp
call
dec
xchg
and
mov
xor
rolb
jae
mov
cmp
cmp
pop
aaa
mov
add
add
fs
xlat
sub
inc
jg
bound
subl
xor
adc
and
fistpl
lahf
jbe
fwait
sub
lods
std
loope
inc
lock
pop
pop
lret
repz
xchg
std
xor
mov
stc
test
xor
dec
jg
inc
insb
sbb
mov
add
enter
and
fdivrs
adcl
jmp
std
or
xchg
movsb
fwait
cmp
imul
xor
das
sbb
or
and
or
aad
adc
repz
repz
or
push
mov
mov
dec
xchg
pop
or
test
cmpsb
jo
cmp
add
leave
adc
mov
cmp
mov
pop
mov
adc
ds
xchg
test
repz
push
insl
and
jb
out
or
clc
clc
div
ss
cld
addr16
inc
aaa
sub
out
push
jle
inc
fsubs
fadd
or
call
cmp
cmc
sub
pushf
popf
das
in
lods
sti
in
inc
clc
pop
push
pop
shlb
repz
add
cmp
dec
insb
adcb
or
jne
cmp
sbb
cmp
sub
dec
in
sbb
cmp
sub
xor
xor
add
add
add
add
cli
movsb
in
push
pop
cmc
cmp
sub
sarl
xchg
jns
gs
xchg
pop
jae
repz
or
inc
adc
fwait
adc
sahf
mov
sub
or
push
jmp
mov
addr16
sbb
push
cmp
mov
cmp
jmp
mov
jge
push
ss
aam
xchg
popa
in
mov
jl
xchg
aad
pushf
xor
push
and
jo
jae
and
bound
mov
mov
dec
enter
orb
jns
inc
outsb
frstor
negb
xor
or
pop
mov
push
dec
sub
lea
add
cmpl
push
pop
shlb
repz
add
cmp
dec
insb
adcl
pop
push
jne
sub
pop
or
add
enter
and
fdivrs
adcl
jmp
std
or
xchg
movsb
fwait
cmp
imul
xor
das
sbb
or
popa
and
xchg
into
push
push
cmp
lock
mov
or
ljmp
pushf
xlat
inc
sbb
push
aad
or
mov
movl
incl
pop
call
dec
xchg
ds
gs
xchg
and
bound
and
add
outsl
adc
jae
and
bound
mov
mov
dec
enter
orb
sbb
js
subl
xor
adc
push
cmp
cmc
sub
pushf
popf
das
in
lods
sti
in
inc
clc
pop
push
pop
shlb
repz
add
cmp
dec
insb
adcl
sbb
pop
push
sub
inc
or
adc
push
and
xor
sub
add
cmp
sbb
xchg
xlat
pop
cwtl
pop
std
or
xchg
movsb
fwait
cmp
imul
xor
das
sbb
or
popa
and
xchg
into
pop
dec
cmp
loope
mov
sbb
inc
ljmp
mov
dec
or
sar
inc
mov
cmp
mov
movl
incl
pop
call
and
mov
jge
mov
loope
shlb
add
add
fst
cli
fdivrl
js
outsb
adc
cmp
adc
imul
scas
sti
jnp
fs
pop
push
adc
fcoml
jg
sub
out
and
mov
cmp
iret
data16
aas
popf
adc
sbb
sbb
mov
mov
outsl
bound
jp
sbb
loopne
out
inc
dec
push
xchg
es
push
out
cmp
add
cmp
add
add
add
add
add
jo
add
add
add
out
add
add
add
mov
add
adc
add
push
stos
add
add
add
xchg
add
add
add
xlat
sub
add
add
add
add
add
xor
add
add
add
adc
add
add
add
add
add
scas
add
add
add
movsb
movsb
add
add
add
cmp
add
add
add
add
add
jg
add
add
add
sub
add
add
sti
add
add
add
fiadds
add
add
add
sub
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
aas
add
add
add
add
add
add
add
adc
add
add
add
pusha
add
add
add
add
add
add
xor
add
add
add
add
add
add
sbb
add
add
add
jecxz
add
mov
add
ljmp
add
jge
add
add
das
adc
add
add
test
add
jno
imul
jmp
testl
and
shr
add
rcl
add
aaa
add
add
add
and
add
add
add
add
add
stc
add
add
add
add
xchg
add
xor
xor
add
add
mov
add
add
or
lcall
add
add
xchg
add
add
cmp
mov
add
in
add
in
pop
add
add
add
add
add
add
xchg
add
add
or
loope
push
add
add
addl
add
add
add
add
xchg
add
add
cmp
cmp
loop
adc
aam
push
add
inc
add
add
add
add
ja
outsl
add
add
fiadds
in
les
push
add
add
add
add
add
add
inc
add
movsb
add
or
push
add
movb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
aad
add
add
add
icebp
add
add
add
add
add
add
add
pop
add
add
lcall
mov
add
add
push
add
add
add
add
add
add
add
xor
in
add
add
verr
sbb
add
add
add
movb
add
add
cli
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
pushf
add
add
xchg
add
add
add
add
cmc
add
add
aam
add
es
std
jae
outsl
push
mov
pop
scas
add
xchg
jmp
sub
js
sub
inc
mov
xor
mov
push
das
or
scas
roll
inc
and
ror
daa
cli
inc
pop
adc
cmp
arpl
ja
lcall
sub
not
dec
pop
aas
and
lds
mov
les
jle
pop
stos
mov
test
lcall
pop
mov
outsl
addr16
cmpsb
ss
mov
mov
nop
popf
adc
mov
lds
xchg
xchg
xchg
filds
call
xor
sbb
lret
movl
jbe
leave
and
dec
shlb
sbbb
dec
mov
insl
cmp
jg
shlb
jns
and
insb
out
xor
cmp
adc
lea
testl
pushf
xlat
xlat
rorb
mov
pop
bound
out
mov
jmp
add
das
rclb
sbb
fimull
fmul
stos
push
int
lods
sbb
xor
adcb
xor
jmp
fstpt
aam
lods
in
jl
ret
cmpsl
rcrl
inc
xchg
test
gs
sahf
loope
rol
testl
add
pop
jb
add
and
loopne
mov
mov
scas
cwtl
shlb
mov
insb
in
adc
or
aad
cltd
xchg
lock
adc
fsubrp
arpl
and
cmp
movsb
rcr
pop
loopne
mov
mov
imul
out
pop
les
mov
orl
jae
push
mov
lret
and
mov
xchg
les
or
push
into
aas
dec
add
insl
jmp
pop
mov
sbbl
jl
and
inc
iret
pop
arpl
sbb
mov
jns
sar
mov
cltd
xor
ja
pop
sbb
pop
jns
mov
adc
jecxz
iret
xor
aas
in
mov
ds
mov
testb
insl
inc
dec
mov
mov
and
add
jg
fisubrl
jne
add
dec
jg
outsl
test
xchg
repz
dec
out
repnz
das
dec
jae
sub
xchg
mov
push
inc
cld
std
cltd
jg
shl
movsl
outsb
mov
mov
or
in
mov
loop
adc
scas
mov
adc
push
lock
shl
cmp
sbb
xor
nop
and
and
inc
xchg
movsl
lret
test
push
in
aaa
imul
lahf
mov
rcr
lret
orb
aas
test
pop
stos
ret
xchg
jno
sbb
gs
pop
sbb
es
sahf
xor
xchg
cld
cmp
popa
jecxz
mov
ljmp
iret
mov
and
inc
cmp
dec
add
push
sub
jle
sub
sti
loopne
push
jno
test
push
cld
jbe
mov
mov
jns
push
lods
mov
dec
sbb
push
mov
cli
xchg
inc
jns
orl
fstps
and
push
ds
dec
call
mov
jge
clc
pop
xor
push
cltd
cmp
aad
cmc
jnp
xor
push
test
adc
inc
das
xor
rolb
scas
test
pop
push
lahf
in
bound
in
sti
sti
lock
fisubrs
test
or
inc
add
mov
mov
lcall
mov
fadds
mov
fistps
xchg
stos
into
cmp
loope
sbb
xor
stos
sti
xor
pushf
jge
pop
mov
or
push
ret
cmp
mov
mov
jne
adc
repz
dec
xor
fiaddl
pop
repnz
fsubrs
aad
push
sub
bound
aad
sub
mov
sbb
cmpsl
cltd
notl
mov
sub
mov
mov
or
push
dec
ret
xchg
pop
mov
or
sbb
scas
dec
xchg
inc
mov
dec
aaa
pop
out
mov
mov
adc
rolb
ja
push
push
iret
fcompl
out
je
fsts
dec
out
icebp
jl
inc
dec
jbe
jns
xchg
or
adc
adc
push
cld
dec
in
pusha
inc
xor
lret
aas
pop
aam
cmp
jge
ljmp
std
sub
lcall
jmp
pop
cmp
inc
mov
in
out
mov
inc
js
inc
iret
test
loope
lcall
movsl
inc
and
je
and
dec
filds
push
jo
bnd
lret
push
clc
in
loopne
or
mov
nop
or
insb
mov
lahf
out
xchg
aam
mov
sub
sbb
lds
les
xchg
inc
mov
xchg
push
fisubs
addl
aad
ljmp
sub
mov
scas
mov
jle
inc
cmp
and
inc
cmp
scas
aad
hlt
inc
add
gs
rorl
pushf
ljmp
xchg
faddl
jo
fucom
daa
daa
ss
addr16
xchg
test
mov
jb
lods
push
xchg
mov
imul
dec
mov
cmp
ret
shlb
push
scas
mov
pop
dec
ja
jge
ret
lret
cmpsl
or
push
sahf
fstpl
mov
fiaddl
mov
iret
in
mov
jecxz
adcb
insl
and
mov
js
pop
pushf
xor
xchg
jb
out
lret
pop
out
js
inc
dec
out
add
or
jae
mov
test
mov
es
out
mov
subb
test
call
rcll
pusha
cmc
inc
pop
addb
sahf
add
xchg
dec
cmp
lret
divl
xlat
cmp
stos
pop
gs
jae
xchg
adc
pop
cmpsl
hlt
mov
dec
pusha
jnp
stos
push
out
or
jecxz
rclb
das
mov
sub
test
pop
mov
enter
ret
adc
test
mov
frstor
mov
icebp
mov
cmp
leave
fildl
rcr
push
testb
sub
and
and
or
lret
rol
addr16
mov
dec
in
inc
dec
dec
jl
fsub
outsb
adc
sub
cmpsb
sahf
jecxz
ss
in
sbb
cwtl
iret
lock
inc
push
aaa
addr16
mov
push
jg
xchg
cmpb
fstps
pop
or
cmp
repnz
and
pushf
sub
adc
movsl
rolb
call
gs
xlat
xchg
mov
pushf
mov
clc
lret
fwait
xchg
int3
cmp
out
loopne
repnz
inc
sub
xchg
sbb
scas
xchg
cmp
dec
icebp
and
mov
bound
and
mov
inc
adcb
lods
adc
cmp
jg
imul
xchg
inc
xor
pop
rcl
sbb
and
push
xlat
mov
loop
idivl
inc
and
adc
cmc
cmp
imul
pushf
icebp
jns
mov
je
or
jns
xor
imul
shll
sbb
outsl
mov
insl
sbb
loope
fs
pop
mov
loope
jno
test
movsb
mov
push
and
jecxz
xor
js
out
jmp
cmpsl
mov
inc
ds
cltd
push
jne
xor
sbb
pop
js
bound
ss
xchg
xchg
sub
mov
stos
stos
xchg
rcr
sub
shll
sub
pushf
xor
into
xchg
inc
xor
xor
outsl
or
pop
and
popa
or
ss
mov
xchg
lret
pop
jmp
jge
add
cli
push
data16
es
lahf
push
in
int
dec
sbb
lea
cli
pop
xchg
mov
repz
cmpsb
push
cmpsl
mov
pusha
sbb
jl
insb
sbb
jge
adc
xchg
cmpsl
lret
cmp
or
sub
add
xchg
sbb
out
cmpsl
or
sub
push
push
daa
mov
inc
mov
scas
pop
xor
xchg
mov
ret
int3
xchg
mov
inc
mov
sub
jg
jmp
aam
xor
sbbl
mov
lret
mov
push
sbb
daa
jbe
ret
je
jns
mov
sub
and
dec
xor
inc
push
mov
push
not
xor
xchg
rol
mov
std
js
sbb
and
mov
or
push
lret
mov
dec
cltd
aas
lcall
mov
cmp
sarb
mov
out
aam
dec
push
adc
cmpb
sbb
mov
popf
enter
jnp
fadds
push
adc
push
and
adc
es
or
mov
daa
stc
in
or
inc
sub
aam
push
xchg
pop
fimuls
jnp
cli
cltd
push
pop
cmpsl
pop
xchg
xor
sub
mov
data16
mov
adc
mov
loope
xor
cld
fimull
sub
stc
ret
insl
in
jmp
invd
ret
testb
outsl
popl
js
pop
mov
fcmovu
xchg
loop
lret
mov
push
xchg
mov
rcl
sbb
adc
fwait
add
icebp
jns
jns
lods
loopne
pop
lret
pop
xor
scas
pop
mov
loope
mov
lahf
aas
pop
cs
sbb
test
fisttps
xor
ds
daa
in
fs
mov
in
test
jle
scas
ja
xor
adc
xchg
sbb
xor
xchg
or
sub
cmp
cmp
bnd
mov
out
rcrl
pop
push
repz
imul
ss
int3
pushf
inc
andl
in
lods
pop
repz
xorb
loopne
mov
arpl
das
xor
ficoms
jbe
or
iret
outsl
insl
shll
inc
bound
push
inc
jb
xlat
xchg
jno
and
cli
sbb
sbb
mov
pop
add
mov
pop
push
lods
and
out
jp
test
out
stos
rcll
push
test
es
dec
in
loop,pt
fcoml
outsl
mov
xor
pushf
outsl
cmp
xor
dec
les
dec
or
jp
mov
rcrl
mov
sub
xchg
dec
es
es
and
push
cwtl
lret
inc
mov
mov
dec
cltd
das
in
xchg
out
stc
popf
sub
lds
pop
imul
inc
xchg
push
out
sub
mov
fldl
push
xchg
cmp
sbb
sbb
push
lds
xor
jge
aaa
push
out
lock
call
jecxz
xchg
push
adc
mov
jae
add
pushf
push
cmp
push
jg
bound
in
notl
add
add
xchg
imul
cmpsl
mov
mov
call
rcll
jo
pop
int3
xchg
imul
sub
inc
neg
out
pop
adc
inc
dec
add
jno
faddp
inc
xchg
ja
sub
dec
orb
or
mov
clc
push
aam
or
insb
js
push
into
add
loopne
fdivrl
into
xchg
in
push
jle
xchg
repz
inc
mov
loop
addr16
jnp
and
push
std
mov
jp
xchg
adcl
fisttps
xchg
fsubr
mov
scas
test
lock
add
sbb
enter
cmp
push
mov
pop
jae
ljmp
push
fsubl
dec
and
dec
fstps
mov
and
jmp
rcl
and
js
inc
dec
aaa
mov
jmp
cld
flds
mov
inc
inc
mov
jmp
mov
pop
push
dec
fstl
xchg
xchg
adc
mov
popa
aas
test
into
sbb
dec
jl
sbb
add
xchg
fsubl
clc
rolb
out
xorb
fisttps
push
in
jg
mov
int3
mov
hlt
jo
and
scas
sarl
sbb
aaa
outsl
push
jnp
cmpsl
test
push
fldpi
mov
push
add
fisubs
push
jle
fwait
imul
add
arpl
mov
adc
and
push
mov
test
out
std
dec
in
daa
mov
add
cwtl
adc
adc
cmp
mov
in
sub
mov
pop
push
data16
xchg
xlat
push
xor
jmp
popf
and
jg
mov
push
fs
jmp
in
in
movsb
lcall
mov
out
ficoml
hlt
push
inc
iret
popf
enter
loop
xor
loopne
adc
push
loop
pushf
xchg
add
pop
mov
pop
or
out
xor
pusha
lock
mov
imul
or
sbb
faddl
cmp
xchg
dec
mov
aaa
sub
cltd
push
mov
push
jne
add
cmpsl
sub
mov
cmp
and
outsb
sbb
mov
popa
stos
push
int
sub
pushf
imul
and
aaa
repz
aad
popf
mov
dec
movsl
mov
jmp
xor
outsb
ret
add
adc
data16
outsl
aaa
inc
mov
sbb
jb
mov
arpl
or
inc
and
or
adc
pop
int3
pushf
cli
pop
inc
sbb
jnp
inc
pop
ret
jle
pop
out
sbb
pop
mov
sbb
push
fs
leave
psubusb
jmp
mov
inc
ror
inc
xor
jle
clc
scas
popf
adc
popa
mov
scas
inc
inc
push
cmpsb
orl
lcall
test
insb
push
cmp
xchg
mov
ja
shl
jge
cmp
mov
out
js
sahf
pop
clc
iret
call
nop
shl
jmp
mov
shrl
icebp
mov
lcall
cmp
cmp
fdivl
ret
mov
in
out
and
movsl
mov
push
in
fiaddl
std
inc
jo
xchg
jp
sub
sbb
jg
dec
loope
mov
inc
out
xor
loopne
dec
push
mov
mov
pop
inc
lods
int
aaa
push
ret
cli
mov
xchg
cmpsl
push
in
ret
sbb
clc
adc
mov
jle
gs
cs
adc
xchg
in
sub
sub
out
into
out
shl
addb
sbb
push
fbld
inc
add
or
jl
dec
sub
fnsave
idivb
fstpt
sbb
test
dec
popf
and
jecxz
into
and
mov
ljmp
mov
scas
or
add
dec
mov
jo
inc
lcall
mov
and
mov
xor
and
jg
test
hlt
push
test
push
sub
sub
adc
push
ret
push
scas
dec
cmp
cmc
enter
sti
xchg
pop
push
xchg
std
fsubrp
ljmp
dec
icebp
outsb
in
cmp
mov
daa
push
dec
inc
sub
add
stc
lods
out
dec
roll
xchg
mov
or
sub
jbe
push
and
orb
jo
and
xchg
xorl
xchg
pop
mov
out
movsb
sahf
popf
jl
insb
adc
adcl
push
in
or
adc
mov
sti
adc
pusha
jmp
mov
push
adc
inc
sbbb
sub
lret
popa
jle
cmpb
mov
adc
data16
jae
loop
mov
push
add
dec
subl
fisttps
add
adc
jbe
roll
stos
pop
cmp
fsubr
dec
push
fdivrs
clc
mov
sar
inc
adc
mov
dec
xchg
cmp
mov
hlt
lcall
cmc
testl
sub
sarl
xchg
jne
adc
mov
pop
shrb
adc
cmp
loope
push
cmp
jo
mov
in
jns
sub
pushf
icebp
mov
mov
insl
leave
cmp
ja
ja
mov
mov
mov
sbb
mov
out
lret
xchg
fldcw
out
ret
adc
pop
je
sub
and
shrl
stos
jne
addl
sbb
jmp
mov
in
jbe
inc
jne
cmp
hlt
cli
add
mov
cld
sbb
dec
and
nop
je
and
jecxz
jl
cmp
fcomps
adc
rorb
or
fldz
mov
scas
pop
cmpl
in
popa
cwtl
ss
sub
lcall
dec
je
aam
pcmpgtw
daa
scas
inc
jg
hlt
and
test
add
mov
fidivrs
or
push
pop
in
push
cs
xor
jge
or
inc
ret
fnsave
lret
xor
pop
js
enter
xor
aad
push
xor
add
sub
dec
ret
dec
xor
adc
mov
adc
ss
inc
fistpll
in
popf
je
and
inc
addb
jb
cmpsl
mov
in
mov
sbb
mov
mov
jbe
mov
lods
int
or
dec
aad
lock
pusha
mov
popa
test
aad
add
add
jne
loop
xchg
sbb
dec
jae
jno
rcrl
or
cli
and
jmp
icebp
mov
rolb
cmpsl
dec
idiv
mov
pop
push
test
icebp
push
pop
xor
adc
loop
stos
into
push
or
push
pop
outsb
xchg
mov
mov
cli
sub
inc
cmpsl
sbb
or
jb
mov
ret
cmpsb
lcall
xchg
std
je
test
push
adc
or
push
mov
testb
xchg
cwtl
add
add
adc
stc
lods
mov
jo
cmp
insl
push
or
or
xchg
mov
add
xchg
mov
xchg
leave
enter
dec
jb
and
out
mov
mov
lods
sahf
mov
dec
repz
fldl
daa
imul
test
mov
and
or
stos
mov
loop
inc
cmp
adc
xor
movsl
sbb
lret
push
gs
adc
dec
jbe
push
cmp
pop
insb
and
mov
ja
push
sbb
ljmp
lods
cld
cmp
sub
or
jl
addl
xor
jge
insb
mov
rcr
pop
inc
push
cmpsl
xchg
inc
jo
mov
mov
pop
fisubrs
cmp
in
outsb
loope
push
scas
je
mov
out
and
and
lret
push
sub
mov
xor
add
cltd
mov
icebp
jecxz
mov
ja
fs
dec
int
xchg
das
jns
cmp
mul
sbb
pop
or
fsubr
jg
jmp
xor
test
ljmp
inc
mov
mov
cld
loope
addb
xor
mov
jnp
rcrl
in
in
jle
pusha
testl
mov
lahf
push
imul
jne
xor
enter
cmpsb
mov
imul
inc
addr16
call
xchg
cmp
pop
pop
mov
mov
pusha
cli
cmpsb
sbb
pop
sbb
push
inc
xchg
cmpl
sbb
push
shlb
stos
pop
call
fstpt
push
pop
clc
cmp
push
int
rclb
aad
sbb
ds
fwait
pop
ljmp
outsb
xchg
std
push
jbe
xor
xor
cltd
out
mull
xchg
stos
inc
mov
cmp
mov
mov
sahf
enter
mov
fcoml
dec
add
lds
xor
mov
push
int3
sub
mov
fcoml
inc
inc
xlat
dec
sbb
dec
scas
les
stc
cli
lcall
xchg
repz
and
sti
std
sahf
cmc
insl
mov
fidivrs
mov
xchg
cwtl
mov
sbb
int
dec
test
inc
inc
ja
mov
add
jle
mov
lret
pop
jl,pt
xor
xor
jne
clc
into
stos
adc
pop
faddl
lock
xchg
sub
adc
sbb
sub
jp
es
mov
testb
stos
push
imul
outsl
pop
leave
enter
cmp
or
hlt
sub
stc
data16
inc
dec
xor
mov
jle
imul
pop
sbb
add
andl
pop
test
jbe
popf
imul
ret
je
xchg
xor
xchg
or
inc
pop
faddl
jb
and
int
sbb
mov
jns
jbe
fsubrs
outsb
mov
push
mov
aaa
sbb
adc
sub
mov
mov
das
jo
lock
lock
jo
testl
pop
sub
jns
out
push
jle
stos
mov
ss
clc
inc
jmp
aaa
sub
sahf
pop
and
sahf
sub
ds
mov
insl
stos
dec
jnp
mov
ret
cmp
inc
insb
xor
rcl
push
push
pop
dec
push
bound
decb
jb
jg
add
adc
cmc
add
mov
push
push
fs
int
loopne
leave
xchg
push
push
rol
test
daa
lret
xlat
adc
mov
push
ffree
ss
int
inc
ret
sbb
jmp
fidivrl
xchg
in
pop
mov
mov
movsl
je
or
in
mov
sbb
cmp
xchg
andb
mov
test
fsubr
mov
push
jne
jno
push
test
push
shlb
iret
int
ficoms
in
mov
in
ret
cmp
out
in
add
fldt
gs
shrb
aad
ficoml
push
in
jmp
mov
mov
scas
shrb
out
lret
xor
jle
jb
add
dec
mov
mov
inc
jno
fcoms
inc
mov
fwait
xor
stc
mov
dec
dec
dec
sti
inc
xor
jp
imul
mov
inc
psubsb
shrl
test
inc
jge
fucomp
mov
subl
cmp
sahf
ljmp
and
jp
jg
xor
movsb
cmp
stos
adc
fisubl
es
cmpsl
inc
cmp
in
pop
sub
add
jbe
pop
add
mov
scas
add
in
sbb
and
and
cmp
out
pusha
loop
jmp
out
xor
sahf
orl
popa
mov
testb
aas
subl
xor
xchg
xchg
pushf
fs
jecxz
mov
orl
pop
cwtl
push
movsb
and
out
test
out
sub
pop
cmpsb
inc
pop
inc
popa
or
divb
sub
movsb
lods
mov
xchg
or
dec
mov
sub
pop
mov
ret
mov
add
repnz
inc
inc
xor
push
jecxz
ret
fcoml
call
push
inc
add
jp
xor
push
mov
sub
repnz
pop
les
jl
stos
mov
loope
lcall
xor
cwtl
scas
sub
xor
out
push
cmc
jge
pop
cmpsl
adc
sti
push
xchg
pop
lcall
lret
push
out
in
lods
sahf
cmp
xchg
lods
insl
clc
cmpsl
cmp
fldenv
push
push
test
inc
cmp
and
mov
pop
lea
fadds
cmp
sub
sbb
fildll
mov
jno
mov
out
inc
out
mov
cmp
je
pop
ljmp
pushf
mov
xor
xor
out
add
mov
loopne
dec
jb
outsb
sbb
aam
push
lahf
sub
sub
adc
movswl
or
scas
lret
lods
jl
jnp
xor
call
aad
pop
mov
mov
mov
scas
mov
lea
push
cmp
mov
pop
dec
push
leave
jbe
jge
negl
imul
pusha
sbb
sbb
daa
inc
mov
movsl
jge
or
stc
sub
imul
xor
mov
lret
mov
mov
adc
fnstsw
jle
sti
dec
push
push
sub
aam
int
and
stos
arpl
jmp
push
ds
int3
mov
push
gs
cwtl
inc
aaa
or
sbb
sti
adcl
mov
dec
out
inc
test
repz
icebp
xchg
pop
push
rcrl
jbe
xor
fistl
scas
mov
cli
sub
out
leave
xlat
out
fimull
bound
in
outsl
sub
pop
sbb
or
sub
adc
les
push
mov
xchg
out
adc
outsb
sbb
fs
imul
lahf
xchg
push
cmp
mov
scas
mov
jle
sbb
cmp
xor
mov
pop
gs
aaa
iret
dec
shl
test
aas
mov
mov
ffreep
pop
subl
popf
sub
icebp
int3
scas
xchg
sbbl
fsubrs
push
fstps
jg
xchg
scas
push
adc
sub
cld
xchg
sub
xchg
or
dec
push
xor
pusha
rcrb
inc
mov
jb
jns
adc
lret
enter
push
mov
sbb
andb
jnp
fcmovbe
cmp
xchg
call
loopne
scas
rorl
cmp
mov
in
inc
sbb
jne
das
cltd
pop
sub
ja
jne
adc
sbb
cwtl
mov
xchg
or
lcall
xchg
mov
repz
sub
lcall
bound
xor
fdivs
lods
mov
aas
fistl
pop
int
loop
jg
cmp
je
aas
lods
adc
mov
hlt
in
out
and
test
mov
sub
iret
add
sarb
push
ljmp
fimuls
sub
sti
das
std
sub
lcall
mov
jo
daa
cmp
out
mov
mov
leave
in
iret
jmp
xlat
and
fisttpl
jae
sub
cmc
or
jle
xlat
iret
sub
sti
adc
sub
andl
xor
xchg
inc
inc
in
cmp
xor
fistl
xchg
and
dec
js
and
mov
lea
mov
pushf
addr16
loopne
arpl
pop
cs
stos
loop
sbb
inc
mov
aam
mov
mov
adc
mov
jbe
sbb
test
inc
jge
sub
inc
ss
mov
dec
inc
jne
mov
in
mov
imul
xchg
stc
push
add
cmp
and
mov
and
xor
scas
lret
aam
lds
or
xor
loope
push
lahf
push
mov
jo
adc
repz
adc
push
sub
jmp
cmpsb
jmp
push
repz
out
mov
enter
test
push
stos
pushf
rolb
fwait
fstpl
xchg
xchg
fsubrl
aam
mov
mov
cmp
adc
sti
and
sbb
mov
pop
outsb
stc
mov
push
ficoms
push
jl
jno
adc
jge
addr16
sub
mov
mov
test
testb
mov
and
adc
pop
and
jnp
or
mov
insl
in
add
pusha
add
dec
inc
or
xchg
cmpsb
sbb
or
ret
fsubrl
dec
sub
cmpsb
ds
mov
lcall
adc
dec
into
adc
add
push
sahf
cmpsb
sbb
adc
clc
xchg
into
push
in
ljmp
jecxz
xlat
stos
rcr
sub
sub
inc
fadds
xor
dec
mov
ret
fwait
out
movl
movsb
rorl
cmp
out
push
ret
cmpb
push
loope
movsl
fimull
notl
push
and
cltd
adc
jae
lods
sahf
pop
ret
sti
push
notl
push
cmpsb
pop
cmp
xlat
sbb
sub
leave
mov
xor
push
mov
mov
icebp
and
daa
push
mov
pop
repnz
or
or
mov
mov
push
movsl
mov
aaa
hlt
std
push
and
in
testl
mov
outsl
cmpsb
add
push
ret
cmc
js
hlt
mov
lds
inc
aad
mov
xchg
jno
adc
ret
sbb
cmpsl
int
sbb
fbld
and
pop
data16
jg
push
mov
pop
addr16
pop
sbb
int
dec
add
sbb
inc
in
scas
jbe
pop
arpl
sbb
nop
imul
pop
stos
mov
enter
into
pop
mov
shlb
xchg
lods
stc
pop
loop
jle
xor
nop
aad
push
outsb
icebp
inc
jns
rolb
pusha
lods
adcl
shlb
scas
and
jnp
push
push
sub
cmpb
fmul
cmpsl
jne
jno
sub
mov
pop
mov
mov
loop
lock
test
cli
cld
xor
sbb
mov
push
mov
mov
cmpsb
xchg
xor
or
pop
testb
adc
cmp
pop
jecxz
aaa
ljmp
adc
dec
or
ljmp
jb
out
jne
xchg
and
aam
stc
lret
neg
int3
xor
or
pop
pop
dec
aas
popf
cwtl
mov
arpl
insb
xchg
jp
mov
sti
sbb
xorb
pop
jp
xor
push
xlat
adc
outsl
jmp
bts
cmp
push
pop
test
rclb
enter
out
test
cmpsb
rcll
or
inc
dec
push
dec
daa
lods
imul
xchg
scas
mov
mov
aas
or
push
adc
mov
mov
mov
out
mov
mov
sub
loopne
sub
xor
lret
sbbl
jp
lea
sti
or
leave
test
ss
leave
cmp
inc
jnp
push
inc
scas
jecxz
or
mov
jmp
inc
or
jae
lret
cmpb
mov
sub
fbstp
in
inc
xor
dec
push
xchg
mov
or
dec
aam
dec
loop
xchg
in
push
mov
repnz
inc
inc
cwtl
mov
stos
sub
jp
aam
push
adc
and
popf
xchg
add
dec
stos
sub
in
clc
mov
pop
add
sbb
ja
push
movsl
nop
xchg
cmp
ljmp
sahf
fs
mov
xor
in
dec
stos
inc
push
cmp
inc
data16
mov
ljmp
mov
orl
les
dec
lods
pop
test
or
in
cmp
daa
fldcw
pusha
stc
mov
aam
cmc
in
mov
ja
and
lret
jbe
push
jmp
adc
and
adc
mov
aad
and
mov
int3
daa
dec
das
mov
fisttpl
jb
in
mov
stc
mov
imul
popa
adc
test
jp
cmp
mov
jle
lcall
cmp
dec
je
outsb
adc
test
inc
cmp
xchg
repnz
pop
inc
mov
inc
push
or
push
xchg
xor
stc
add
xor
std
std
mov
pop
mov
int3
loop
fwait
bound
mov
mov
mov
jmp
inc
addr16
scas
leave
jl
pop
mov
xchg
or
cld
insl
pushf
and
dec
and
sbb
and
test
sbbl
dec
loope
mov
popf
cli
es
les
mov
xor
fildll
push
scas
test
jne
xchg
lock
popf
adc
mov
loope
pop
dec
aas
xchg
xchg
aaa
fcomps
lds
sti
jecxz
pop
rdmsr
popf
xor
mov
cmp
xchg
jo
hlt
mov
int3
inc
push
inc
jp
push
mov
loopne
shll
clc
inc
lds
jb
push
dec
jg
inc
adc
push
test
popa
add
test
popf
cmp
dec
and
scas
sbb
jbe
out
mov
xchg
and
sub
push
test
mov
hlt
and
into
jbe
in
pushf
push
xor
jl
jp
in
test
in
mov
xchg
into
jecxz
and
mov
bound
push
sub
scas
outsl
xor
cltd
lea
cld
movsb
add
clc
pop
test
fsubl
or
ret
sti
js
xchg
xor
pop
ljmp
xor
jge
ret
aaa
imul
push
sarb
cmpsl
aad
sbb
cmpsl
call
test
imul
cmp
pop
jns
leave
xor
sub
xchg
out
pop
mov
cmpsb
cmp
mov
fs
pushf
fcompl
lock
loopne
fcmovnbe
jne
std
das
mov
cmp
push
xor
jb
mov
and
ret
scas
xor
pop
sub
or
add
mov
push
arpl
jnp
or
push
arpl
cs
mov
lret
orl
loop
stos
dec
jmp
mov
mov
sub
sub
pushf
repz
push
sbb
xorl
pcmpgtb
jge
ret
mov
dec
xchg
mov
cltd
mov
sbb
imul
sub
xchg
int3
sbb
sbb
dec
gs
repnz
xchg
movb
xlat
call
lods
lock
dec
xor
ss
jnp
inc
cmp
and
xchg
mov
cmpsb
dec
stc
and
xchg
mov
mov
mov
div
gs
sub
iret
insb
shrl
mov
shlb
and
cmp
add
mov
ds
inc
cmc
jnp
inc
es
nop
cmc
xchg
jle
pop
shl
lahf
gs
pop
clc
cli
or
loope
mov
lods
mov
movsl
push
cmp
sbb
cmp
mov
stos
or
ret
fsub
or
mov
stos
pop
fstps
paddb
ds
mov
mov
dec
pusha
xchg
inc
xchg
jge
inc
test
xchg
fcmove
cmp
mov
leave
mov
out
imulb
repz
xchg
push
sar
adc
inc
les
dec
and
push
inc
add
rcll
ljmp
mov
ret
mov
add
mov
xchg
test
xchg
jae
pop
pop
or
and
popa
jmp
int3
sarb
adc
cmp
jb
xchg
xor
xlat
mov
sub
mov
dec
push
in
pop
cltd
cmp
lret
mov
das
bound
cwtl
shlb
test
push
adc
ret
mov
mov
adc
mov
adc
cmc
adc
cmp
inc
pop
adc
fstps
mov
xlat
in
xor
pop
cmc
scas
roll
gs
or
out
pop
and
push
sub
fucomp
insb
dec
in
sub
mov
fsubl
rcr
seta
mov
shrl
dec
popa
insb
sbb
dec
repz
mov
add
addr16
lds
outsl
mov
inc
xchg
andb
mov
rolb
push
mov
lock
outsl
clc
cmpsl
add
loope
sbb
shll
jle
jae
cmp
dec
mov
dec
xchg
imul
xorl
jae
sbb
and
dec
and
push
xchg
push
nop
mov
mov
orl
and
in
mov
stos
lret
add
test
sub
jo
out
pop
dec
xor
lret
pop
mov
mov
in
iret
inc
jbe
fs
notl
jmp
add
mov
imul
movsl
push
jne
lods
into
scas
out
insl
and
and
xchg
pop
jmp
mov
mov
fst
fidivrl
xor
outsb
test
jmp
and
jno
adc
add
xlat
jo
lods
shrl
icebp
andl
xor
jnp
bound
lods
arpl
sub
mov
jecxz
lahf
sbb
std
inc
cmc
fidivs
and
es
pcmpeqw
jle
jns
and
push
std
cmp
pop
int3
or
cmpsb
notl
movsl
xchg
xchg
mov
cmp
jo
or
pusha
mov
pushf
cmpl
in
mov
cwtl
loop
les
idiv
mov
fs
xchg
aam
flds
cmp
add
stc
rcl
xchg
dec
movsb
mov
sahf
pop
pop
int3
sbb
add
lods
mov
push
mov
add
inc
inc
xor
cltd
cmp
adc
xor
roll
push
inc
dec
fistl
dec
testb
fwait
mov
jp,pt
daa
arpl
push
push
icebp
fisubrl
or
rolb
inc
mov
xchg
insl
add
enter
add
xchg
stc
std
dec
and
jge
fiadds
push
out
jae
jp
leave
adc
push
lret
push
xor
adc
adc
repz
popa
inc
mov
pop
push
push
shl
std
xor
lahf
push
jb
pop
push
xchg
stos
xor
adc
mov
lahf
jl
xor
movsl
sbb
repnz
lock
or
aad
lock
adcb
jo
xlat
aas
repnz
movsl
movsl
xchg
outsb
ret
mov
mov
test
je
xchg
repnz
enter
push
push
out
sbb
cs
ss
xchg
sbb
jg
or
lds
push
scas
mov
dec
iret
cmp
rclb
pop
add
pusha
ds
or
xchg
jae
sbb
fstps
fsubs
mov
fimull
push
push
mov
ja
inc
out
ljmp
mov
and
sub
xor
jg
scas
dec
out
inc
jno
pop
clc
inc
xchg
add
aaa
cwtl
push
inc
cmp
mov
dec
cmp
dec
dec
negb
mov
scas
dec
push
inc
lods
out
les
out
mov
and
pusha
cmpxchg
fisubrs
movsl
inc
mov
dec
adc
out
ds
sub
push
jns
mov
mov
mov
cli
sub
push
ds
aad
mov
fs
mov
sub
shlb
sub
add
jg
sbb
and
adc
in
ss
push
cmpsb
in
xchg
push
fldenv
sub
lods
and
pop
push
hlt
mov
push
jp
push
or
pop
stc
std
mov
xchg
add
mov
mov
cs
cmpsl
pushf
sbb
loope
mov
lock
mov
jae
ds
mov
in
imul
movsb
pop
or
inc
inc
outsb
jp
loope
addr16
dec
mov
cmpsl
std
out
pusha
jmp
int3
dec
lea
popa
push
xlat
cmp
scas
rep
into
pop
rolb
adc
push
and
js
mov
adc
rcll
mov
rcrb
inc
sarb
or
cmc
loop
loopne
cmpsl
test
cmc
sbb
call
rcrb
jno
mov
mov
nop
dec
dec
nop
test
test
inc
sarb
arpl
adc
push
aad
stos
push
pop
push
cmpsb
cmp
adc
lahf
cmpsb
loopne
popa
jne
ret
decb
push
stos
shr
jp
faddl
aam
daa
fnstenv
pop
inc
icebp
outsb
push
cwtl
imul
add
pop
add
pusha
push
cmp
out
imul
or
mov
movsb
cmpsb
lahf
xchg
jecxz
icebp
icebp
or
mov
enter
sub
mov
xchg
push
dec
test
inc
dec
xor
jno
jne
je
mov
lods
rorl
popa
imul
sti
es
or
or
gs
cli
sbb
aam
sub
in
lods
pop
xchg
and
sbb
adc
push
pusha
call
cmp
test
mov
pop
test
hlt
ficoml
sbb
dec
shr
pop
mov
push
dec
outsb
adc
in
mov
pop
inc
fmuls
add
adc
fisubs
test
andb
loop
imul
dec
xchg
and
add
xor
movsl
movsb
pop
mov
add
pop
mov
popa
jno
dec
jo
push
lret
jns
jb
xchg
push
loopne
rolb
and
mov
sub
push
addl
cld
jl
faddl
fiadds
inc
add
mov
and
loopne
stos
xchg
loope
adc
mulb
jecxz
cli
mov
js
les
addr16
ficompl
sub
popa
adc
jne
scas
adc
in
mov
movl
jg
adc
mov
add
xchg
mov
cld
out
pop
adc
popf
stos
imul
loopne
pop
cmp
inc
xor
mov
ja
pop
out
stc
sbb
enter
jae
popf
sbb
push
inc
in
outsb
cmp
inc
repnz
sarb
push
mov
push
out
mov
scas
dec
adc
aas
adc
push
mov
dec
adc
fists
les
je
xchg
inc
fimuls
sub
pop
mov
mov
push
in
mov
inc
lret
sub
jae
inc
cmpsl
and
cmc
ds
pop
ss
andl
repnz
sub
fwait
mov
mov
repnz
push
xor
sbb
adc
lea
mov
or
mov
cwtl
cmpsl
jb
ret
xchg
mov
jmp
aad
dec
cmp
sar
xor
adc
scas
xchg
and
or
sub
push
inc
and
jp
pop
and
push
sbb
dec
pop
pop
sti
rclb
pop
or
frstor
loope
push
pop
aam
xor
jl
xor
sarb
xor
je
cmp
lret
out
sbb
int3
xlat
fidivs
cmp
fisttpl
jl
mov
lret
es
pop
sti
sbb
loope
xor
mov
shll
dec
pop
jp
shll
pushf
add
xor
inc
inc
jp
fidivl
inc
sub
cmp
fwait
roll
jl
dec
push
lea
dec
shll
and
xchg
and
dec
pop
sbb
test
fs
repnz
jp
mov
cs
subl
mov
cmp
jmp
fs
mov
gs
lahf
xor
insl
xor
je
xor
mov
dec
sub
pop
mov
sub
out
xor
in
int
pop
popa
call
mov
shll
mov
sub
lahf
and
and
sub
sbb
mov
xor
in
mov
and
jnp
mov
shlb
mov
inc
mov
jnp
dec
xor
lret
cs
ljmp
stos
popa
mov
jge
adc
inc
push
pusha
sbb
rcr
jae
data16
outsl
addr16
xchg
insb
leave
fnstcw
dec
ja
clc
aad
stos
mov
repz
hlt
ljmp
minps
sbb
scas
and
cmp
and
jb
leave
push
add
cmp
xchg
movsb
xor
les
xlat
sub
jne
std
cmp
jecxz
cmp
mov
pop
mov
jnp
in
outsb
sbb
sbb
xchg
movsl
or
pop
ljmp
imul
test
cltd
movsb
jmp
push
mov
mov
fisttpll
pop
mov
add
push
aam
lock
or
jo
jle
negb
push
mov
push
sarb
dec
in
mov
pop
add
in
pop
cmpsb
jp
js
pop
mov
repz
out
ja
dec
cmp
sbbb
aas
call
sub
negb
lret
cmp
xchg
lods
and
lcall
jge
outsb
sahf
in
or
loopw
pop
adc
fildl
js
in
test
icebp
xor
loop
inc
jmp
rcrl
into
outsb
sbb
mov
les
jl
jl
rclb
push
sbb
mov
testb
jo
inc
mov
js
fisubrs
addr16
dec
push
adc
iret
flds
out
xor
clc
push
mov
enter
pop
out
test
push
in
roll
lret
cli
cwtl
dec
in
std
xor
inc
test
pop
adc
xor
mov
leave
aas
jnp
mov
xor
fsubrp
out
test
test
dec
shrb
in
mov
mov
adc
cmp
out
lcall
xchg
sbb
clc
dec
aas
nop
sahf
fiadds
xlat
mov
xlat
jns
xor
ret
jmp
cwtl
shrl
lcall
push
cs
pop
mov
pushf
mov
cli
mov
decb
mov
sub
sbb
jmp
cmp
inc
mov
aam
je
sub
sub
movsb
daa
xor
popf
mov
add
sbb
movsl
in
adc
jns
mov
ja
iret
mov
sbb
scas
sub
inc
jmp
es
xor
and
movsb
or
xor
fs
dec
sub
inc
out
test
cli
pop
and
and
add
jbe
xlat
inc
jl
jg
rol
mov
mov
or
xchg
jne
mov
cmp
inc
mov
test
xor
cmp
std
popa
push
in
lods
rcr
push
mov
push
mov
jbe
inc
repz
cwtl
or
shlb
inc
dec
mov
and
xor
pop
xchg
sbb
fnstsw
adc
xchg
lds
fs
lret
jns
leave
mov
fisubrs
pop
add
stos
or
ds
imul
mov
pop
sub
dec
cmp
pop
mov
adcb
ss
fwait
push
jle
dec
and
cli
and
mov
repnz
insb
scas
ret
mov
mov
push
lret
imul
jns
cli
sti
js
add
fs
jne
jae
pop
xlat
lock
sub
inc
mov
xchg
orb
pop
add
enter
pop
push
and
and
pop
pop
out
xor
test
cli
xchg
scas
lahf
jl
imul
sarl
lea
push
mov
fsubrl
jmp
sti
pop
lcall
xor
inc
mov
into
sub
dec
int
jo
int3
sarl
xchg
lahf
jne
insb
adc
outsb
ret
cmp
movsb
pop
sub
or
xor
add
ret
lret
adc
sbb
stos
fildl
pop
lcall
inc
imul
push
repz
stc
int3
push
pop
mov
lods
pop
lds
cmpl
aas
aam
xchg
jae
ficompl
lock
mov
cltd
je
das
subl
cmc
inc
test
mov
mov
xlat
stos
popa
jge
jno
pop
xor
xchg
je
cmp
out
or
notb
xor
add
mov
nop
mov
sarl
mov
pop
xor
fidivrs
push
adc
mov
adc
mov
sbb
frstor
dec
lret
cmpsl
cli
xchg
inc
dec
xor
pop
dec
dec
jae
enter
outsb
pushf
fs
sbb
mov
push
cmp
rolb
jns
jg
shlb
enter
out
mov
das
in
jmp
hlt
adc
sbb
inc
dec
cwtl
inc
jl
or
adc
mov
pop
inc
pop
xlat
aaa
add
clc
cmc
xor
repz
lods
dec
mov
pop
mov
mov
out
or
scas
aas
lods
pop
mov
insb
lock
mov
adc
pop
lods
enter
adc
test
adc
in
jge
jecxz
cmpsb
fnstenv
xchg
adc
scas
push
xchg
jp
test
cmpsb
or
and
movsl
xchg
mov
inc
xor
pop
mov
pop
pop
pushf
pop
hlt
fbstp
fldenv
call
jge
popa
es
pop
dec
mov
sub
sti
shrl
inc
xchg
push
enter
jae
das
mov
xchg
lock
pop
pop
xor
out
scas
movsl
ja
test
jno
inc
cmp
jbe
js
add
jne
orb
jo
lea
pop
inc
xor
lahf
hlt
pop
loopne
in
sbbl
sahf
sbb
cmpsb
scas
add
pop
inc
adc
dec
cmp
sti
or
mov
cld
mov
nop
fstpt
sub
test
testl
sbb
dec
or
pusha
xchg
dec
mov
std
xor
aas
push
test
cmc
stos
inc
sub
xchg
lcall
xchg
jno
popa
jge
sbb
andb
sub
daa
movl
inc
je
or
jl
jno
addr16
outsb
sub
sbb
push
mov
cmpsb
sub
out
inc
mov
dec
cmpsb
cli
repnz
sahf
sbb
in
xchg
outsb
push
sub
mov
inc
out
xchg
fidivrl
or
push
adc
idivb
outsl
in
imul
xor
dec
imul
popf
jl
xor
jg
inc
lret
jne
das
subb
adc
call
add
test
inc
ret
and
je
dec
enter
sbb
push
shll
bound
mov
pop
xorb
pop
and
aad
aad
paddsw
les
pop
dec
cmp
xor
mov
adc
in
push
and
andb
mov
test
idivl
or
les
cmp
adc
lret
sbb
subb
shll
ja
xchg
ud2
xchg
cs
add
cltd
xchg
push
push
push
cmp
and
adc
mov
jecxz
les
pop
jns
inc
or
outsb
jge
pop
arpl
andl
lock
cmc
cli
dec
stos
sub
loope
out
dec
xchg
int
cmpl
and
lea
ja
ret
xchg
jp
cmpsl
pop
pop
jge
lret
cmp
loope
imul
mov
pushf
mov
orb
jne
divb
push
rcrl
mov
push
imul
addr16
xor
les
ds
jge
mov
je
fnstsw
stos
xor
fisubrl
jne
push
mov
push
and
mov
shl
movsb
cmpl
std
xchg
cmp
js
mov
mov
hlt
test
jp
fucomp
loop
popa
in
call
lret
testl
cwtl
shl
xor
dec
vmread
std
addr16
dec
fistpll
sahf
or
insb
jle
mov
stos
popa
test
jbe
movsl
je
push
push
jbe
addr16
mov
addr16
xor
imul
add
mov
jge
jecxz
sub
xchg
jnp
cltd
insb
test
daa
vpunpckhdq
ficoms
jbe
into
xchg
push
mov
push
mov
fadd
mov
push
bound
bound
je
and
xchg
out
mov
and
orb
xorb
xor
ja
cs
sti
scas
lahf
jnp
imul
ret
and
negb
fisttpl
adc
or
cltd
adc
cmp
shrl
shlb
cmp
imul
add
jp
cmp
mov
mov
jmp
rolb
aad
dec
out
adc
pop
sbb
add
outsl
push
dec
sti
leave
jno
add
xchg
push
inc
add
cmc
xchg
mov
scas
in
out
dec
pop
int
adc
mov
insb
pop
lock
mov
out
sbb
xor
outsb
xor
mov
out
sbb
out
sarl
adc
js
mov
or
sbb
sub
cltd
jmp
ret
jnp
movsb
das
mov
xor
bnd
push
and
add
sbb
into
fldcw
push
mull
hlt
jns
loop
mov
add
pop
in
je
scas
sub
popl
notl
out
xlat
and
xchg
inc
pop
sbb
test
fwait
imul
jno
xor
cmp
pop
xchg
pop
int
pop
arpl
cltd
cmp
or
add
jmp
imul
inc
push
ficoms
push
imul
ret
je
nop
fsubrs
sub
gs
cmp
lret
js
out
adc
pop
cmp
xchg
adc
pop
fidivrl
xchg
or
shll
dec
dec
mov
pop
dec
cltd
out
daa
or
adc
sub
xchg
into
lahf
test
or
mov
in
mov
add
mov
loop
dec
cs
andb
loop
out
adc
adc
int
xchg
push
add
cs
add
aam
inc
mov
lds
jle
adc
and
pop
dec
cmpsl
sub
stc
push
stos
cmp
xchg
movl
pop
ja
ljmp
arpl
mov
into
pop
push
fldl2t
es
addr16
or
dec
bound
xchg
pusha
sbb
sbb
sbb
fisubrs
daa
data16
cmc
push
scas
adc
hlt
adc
sbb
lahf
jg
mov
jl
out
cltd
addr16
pop
je
js
jne
out
sub
and
add
test
mov
xchg
das
dec
or
xchg
orb
xchg
push
cmp
xorl
inc
or
push
movsl
iret
sahf
dec
loopne
aad
adc
lret
pop
cmp
fsubl
repz
negb
out
adc
mov
jbe
leave
pop
xor
cmp
inc
xor
inc
mov
ja
ret
mov
push
push
push
mov
movsb
jbe
outsb
xchg
imul
cs
sbb
sbb
stos
sub
test
addr16
add
ret
push
aas
aaa
addb
ror
sub
loope
mov
xchg
imul
mov
enter
mov
mov
mov
in
dec
ss
das
xchg
call
faddp
jbe,pt
xor
mov
xchg
xchg
xor
in
dec
ja
test
pop
xchg
pop
or
jge
jns
pop
jnp
test
shlb
cmp
and
jp
mov
xchg
mov
rclb
shll
add
test
dec
cmp
std
sbb
insl
loop
jp
push
popf
aam
mov
cmp
insl
mul
sbb
pusha
push
cmpsl
out
adcl
inc
dec
les
pop
aaa
cld
push
push
xlat
push
dec
movsb
scas
in
les
cmc
sbb
dec
add
ret
dec
mov
in
push
cmp
pop
scas
jp
sbbb
jno
sbb
push
add
or
lock
sti
test
mov
inc
xor
mov
push
mov
imul
lret
adc
jae
and
pop
loope
out
adc
push
xchg
push
cmp
mov
mov
add
xchg
mov
aas
jb
mov
fiadds
and
adc
mov
mov
fnstsw
or
testl
cmp
or
xor
test
mov
ss
sbb
int
push
mov
pop
js
call
stos
fcomip
pop
cmpsl
cld
dec
xchg
inc
xchg
ret
out
xor
sub
push
sbb
sub
push
dec
movsb
dec
pop
jmp
popf
add
xor
xchg
sub
or
mov
mov
pop
mov
add
jae
xor
leave
inc
pop
jecxz
mov
rcll
mov
andb
fsubr
mov
lret
xor
jmp
lret
fucomi
jne
std
xor
stc
cmp
jo
movsb
sbb
jbe
cmp
xchg
sub
xor
loopne
mov
ret
rol
rcrb
popf
jmp
xor
fmuls
mov
bound
repz
add
xor
hlt
fwait
xchg
adc
stos
ret
xchg
dec
stc
jns
scas
push
subl
pop
or
in
mov
jecxz
jae
pop
fstpl
sub
jo
mov
mov
stos
cmp
jl
pop
lods
lahf
pop
and
or
cmpsl
outsb
push
jbe
les
js
nop
mov
fxch
out
or
sbb
in
ss
out
xchg
lea
scas
mov
out
dec
lret
xlat
sub
addb
pushf
movsb
imull
cs
jmp
aam
ret
dec
cmp
dec
sub
push
daa
lret
pop
cwtl
add
mov
pushf
pop
repnz
aaa
push
mov
push
out
and
mov
or
pop
cmpsb
stc
or
push
testl
pop
push
xchg
les
cmc
add
pop
repnz
movsl
lret
insb
mov
inc
addr16
repnz
push
rcrb
mov
neg
test
pop
inc
arpl
jbe
das
mov
sub
repnz
pop
lods
jnp
pop
xorb
test
pop
cmpsl
frstor
sub
mov
mov
pop
out
sbb
sarl
xchg
add
into
testb
jp
pushf
std
and
fldenv
mov
or
aam
movsl
mov
mov
stc
dec
ret
sub
pop
or
xchg
jne
jae
pop
rorb
daa
xchg
jnp
aad
cltd
mov
jo
mov
lea
out
jg
mov
or
orb
push
and
mov
aam
loope
xchg
mov
xchg
xor
push
pop
add
cmc
scas
popf
es
xchg
sbb
fldcw
mov
out
in
pusha
xchg
lahf
inc
fxch
mov
stos
bound
in
hlt
or
das
das
push
push
xor
sub
xor
lret
pop
addl
xor
add
repnz
fstpl
mov
pop
push
mov
dec
or
mov
inc
mov
les
or
jnp
xchg
divl
push
rcl
jp
and
mov
and
mov
mov
and
stos
sahf
nop
and
sbb
test
popa
pusha
loopne
je
test
dec
push
push
aaa
mov
or
out
out
data16
mov
push
cmc
adc
and
mov
push
push
mov
mov
call
sbb
push
mov
or
cmp
inc
aas
jns
mov
sbb
push
xchg
pop
ljmp
je
xor
inc
ds
pop
sbb
xchg
movsb
stos
or
pop
xchg
lcall
pop
sarl
mov
sub
std
sbb
ja
push
ljmp
xrelease
pusha
or
push
dec
subl
movsb
icebp
loope
mov
push
jge
fisubrl
sbb
add
aad
cmpsb
jge
adc
push
xor
mov
mov
dec
cmp
and
imul
mov
out
add
cmc
mov
jmp
std
lahf
push
push
int
xorps
dec
dec
adc
sbb
dec
aaa
pop
mov
xchg
pusha
aad
xchg
enter
mov
xchg
jbe
mov
mov
cmp
out
rcll
inc
push
push
fs
or
jle
out
xchg
out
sub
ret
rolb
push
in
and
fs
cwtl
in
cwtl
push
mulb
test
addr16
imul
stc
jl
cs
call
cmp
mov
aam
loopne
stos
popa
mov
dec
sub
movsb
clc
icebp
imul
jbe
lret
out
mov
and
sbb
mov
xchg
lahf
pushf
ret
push
pop
sub
sahf
in
lds
aas
stos
test
sub
loopne
jnp
xor
shrl
jp,pn
mov
aaa
movsl
bound
xchg
rcrl
dec
cld
jg
scas
and
js
outsb
pop
mov
mov
cmp
jnp
in
or
push
dec
cmp
pusha
xor
lods
fisttps
pop
jno
inc
xor
mov
push
shl
push
fptan
jmp
insl
fbld
pop
pop
ds
inc
cmpsb
sahf
sub
xchg
les
movsl
add
cmpsl
in
out
js
std
aam
outsl
fld
cmp
je
leave
add
mov
test
push
test
xlat
mov
mov
mov
adc
mov
cltd
ja
cmpsb
cmpl
xor
jno
test
sub
and
outsb
pop
and
cmp
pop
push
sbb
mov
addr16
js
dec
test
jle
cmp
lods
mov
shl
push
shlb
xchg
cmc
lahf
out
adc
cmpsb
orl
jne,pt
outsb
dec
dec
inc
add
scas
or
adc
sub
mov
cmp
ja
mov
cs
xchg
inc
stos
movsl
push
fsubl
sbb
cmpsb
sub
jae
cmpsb
mov
arpl
gs
shrl
fsubrp
sub
xchg
sbbl
mov
mov
arpl
je
cld
sub
jl
sub
stc
adc
inc
lods
jb
cmp
out
dec
mov
inc
mulb
dec
aaa
jae
es
xchg
lds
add
lds
in
pushf
inc
mov
outsl
rcll
lcall
lcall
mov
andl
jno
xchg
imul
sub
movsl
mov
dec
jnp
cli
jge
pop
loop
mov
or
leave
jle,pt
lock
jae
inc
add
ret
mov
cmpsb
jbe
popa
xorb
sub
add
je
out
mov
dec
jge
arpl
rorb
or
ljmp
imul
repz
jae
jbe
push
fidivrs
add
mov
mov
pusha
insl
out
push
dec
push
sub
lods
push
js
mov
filds
mov
jle
push
push
mov
in
or
stc
jmp
or
test
inc
sahf
mov
pop
sub
std
xchg
dec
out
mov
fnstsw
mov
inc
push
jae
sbb
xor
jne
mov
outsl
xor
sbb
cmp
xchg
add
cld
sbb
dec
xchg
negb
adc
imul
and
bound
dec
xchg
in
iret
mov
and
outsl
adc
faddl
js
mov
push
push
jno
inc
outsl
mov
lcall
popf
sub
bound
xor
dec
clc
repnz
jo
push
xlat
fs
mov
sbb
pop
push
mov
inc
stos
stos
xchg
xor
sbb
mov
add
stc
std
test
jmp
add
aaa
push
andb
fidivl
jo
jns
loopne
aad
fs
adc
dec
dec
je
loopne
mov
xlat
fstl
test
int
leave
addb
cmp
ret
in
ror
imul
push
lods
push
scas
rcl
popf
popf
lret
rorl
lds
leave
jno
hlt
cmp
stc
sahf
inc
or
fstpl
mov
aad
xchg
mov
mov
push
xchg
repz
scas
dec
les
lahf
stc
sub
mov
adc
pushf
pop
dec
and
pop
sbb
dec
das
sub
add
mov
call
sbbb
jbe
daa
popa
lret
pop
lahf
test
bound
push
mov
dec
ret
mov
inc
pop
xchg
lea
es
out
add
or
sub
nop
jmp
pop
ret
call
mov
repnz
mov
or
sbb
sub
jb
test
insl
sbb
fstps
push
mov
lods
sub
adc
mov
cmp
jmp
loop
mov
test
adc
data16
mov
inc
mov
test
das
add
dec
inc
dec
sahf
pop
lods
ds
sub
sub
xchg
hlt
and
xlat
or
xchg
xchg
lock
lret
jbe
outsb
sbb
not
lea
adc
jns
mov
cld
xchg
inc
jmp
stc
rcl
and
ja
rcll
imul
sub
in
repnz
mov
adc
or
mov
aas
mov
xchg
std
ror
mov
bound
icebp
dec
mov
lods
inc
mov
xchg
add
gs
je
popf
imul
fsubrs
out
imul
dec
test
orb
stc
or
setnp
mov
xor
and
ss
out
cmp
push
aam
push
xor
loopne
fisttps
test
data16
pusha
scas
notb
enter
sbbb
or
loopne
push
insl
pop
cmp
dec
xor
jnp
clc
push
pop
jp
xchg
into
sahf
sub
dec
mov
flds
push
xchg
das
cmc
push
addr16
xlat
out
aas
sti
enter
out
xchg
push
movsb
mov
mov
and
sub
dec
jb
pop
lahf
fs
and
or
subl
and
push
std
test
js
push
pop
test
adc
dec
mov
and
or
imulb
adc
or
jmp
adc
sub
sub
push
mov
xlat
stos
insb
cmp
push
and
cmpsb
inc
and
inc
iret
mov
cmp
xchg
scas
and
lock
repnz
mov
cmpsb
out
std
lods
sub
in
fdivl
or
mov
pop
ret
jno
push
daa
repnz
mov
enter
das
jge
hlt
xor
fs
sub
add
into
repz
insl
rcr
in
dec
loopne
push
mov
fsubrs
imul
push
jo
popa
mov
jecxz
shrb
inc
dec
or
sub
add
scas
xor
lods
mov
push
fistps
and
pop
jmp
shlb
cmp
mov
jnp
xchg
cmpl
movsb
roll
rclb
pop
xchg
xor
daa
iret
push
mov
dec
les
mov
gs
adc
push
cmp
outsl
scas
rclb
push
out
dec
adc
lods
and
mov
sbb
insl
scas
add
out
aaa
push
js
out
sub
ficomps
push
sub
std
insl
jnp
jmp
add
pusha
ret
mov
int3
repz
mov
mov
shlb
faddp
out
ret
mov
stos
dec
jb
pop
inc
sub
xchg
in
sahf
sti
leave
adc
adc
mov
shll
adc
mov
call
popf
into
dec
mov
push
mov
popf
or
rcrb
sarl
test
mov
pop
ret
aad
sub
pop
popf
les
push
arpl
mov
sbb
rorl
mov
sub
sub
or
pop
js
dec
pop
test
cmp
xchg
xor
dec
insl
dec
inc
mov
add
dec
rclb
push
push
loope
test
rol
and
clc
xchg
sarl
dec
sbb
xchg
fbstp
and
mov
dec
mov
test
sar
imul
rol
inc
out
xor
sub
add
lods
aam
pushf
in
cld
fdivrs
mov
jp
lock
fisubrl
lret
xor
pop
out
dec
xchg
test
inc
pusha
dec
std
jl
clc
mov
ljmp
and
add
add
jae
lods
addr16
test
xchg
xor
ss
and
sti
xchg
mov
pusha
jbe
and
dec
out
xchg
and
xchg
adc
push
pop
dec
lds
mov
push
pop
test
cmp
ljmp
adc
mov
mov
inc
cmp
adc
sub
jg
mov
push
cmpsb
inc
int3
stc
push
cmp
or
jle
cld
stos
mov
sub
mov
ja
and
enter
insb
enter
lret
cmp
or
jo
repnz
ljmp
bswap
push
fdivrs
sti
inc
mov
imul
and
ret
or
testb
cmp
pushf
mov
jbe
int
bnd
les
inc
mov
loopne
test
pop
lcall
fwait
adc
js
shll
pusha
add
and
insb
imul
test
addl
pop
loop
add
and
cmp
je
mov
fisttpl
cltd
in
cmpsb
rcl
popf
daa
fists
roll
fcompl
mov
stos
subl
add
out
push
and
push
push
push
pop
pop
insl
push
pop
clc
addr16
lods
aad
cltd
int
inc
push
ret
std
xchg
xor
inc
notb
int3
fs
dec
lds
and
or
sub
cmp
fdivs
lds
inc
stos
std
iret
jae,pt
cmp
outsl
mov
in
jg
fsubp
add
nop
xor
pop
add
pop
or
aaa
and
sub
inc
push
xor
rcll
bound
pop
pop
loop
neg
inc
out
add
pop
sti
fldcw
mov
jge
adcb
pop
das
and
loope
jge
lods
fcompl
das
cmc
stc
iret
adc
lock
dec
push
in
mov
cld
jo
cltd
dec
mov
mov
push
cmp
xor
aad
call
sti
sub
mov
jno
cmp
jmp
jno
and
xor
xchg
cmpsb
push
or
mov
inc
scas
dec
mov
fwait
inc
xor
std
test
cmpsl
push
xchg
test
mov
push
sbb
sub
sub
cmp
lahf
mov
or
mov
jg
cli
fldcw
add
pop
shrl
or
xchg
push
push
cmp
lret
loope
push
pusha
inc
push
es
mov
es
fdivrl
out
xchg
jecxz
ljmp
jo
jo
shll
lds
adcl
pop
cmpsb
xor
int
incb
pop
ret
cmp
adc
adcl
iret
add
cmp
aam
aas
push
lcall
sbb
xor
addr16
sbb
movsb
mov
cmp
rcr
adc
aad
sub
dec
push
mov
add
xchg
out
fcompl
jo
stc
leave
fnstenv
jb
orb
in
pushf
xchg
aam
clc
pop
add
icebp
daa
popa
inc
and
popf
mov
faddl
mov
mov
movsb
sbb
mov
sub
lods
mov
jno
mov
mov
cmp
jb
loopne
xchg
mov
dec
jg
mov
shlb
fs
into
popl
testl
jmp
in
mov
inc
xor
jge
sub
mov
in
cmp
mov
xchg
pop
mov
add
das
inc
fmull
dec
testl
mov
sub
test
cmp
jp
mov
push
xchg
and
ljmp
fwait
pop
and
cmp
shrb
loope,pn
imul
mov
cmp
lea
push
mov
pop
pop
push
cmp
cwtl
aad
mov
xor
fnstcw
xlat
shll
dec
sbbb
scas
out
in
lret
cmp
shl
xor
pop
inc
mov
mov
fmull
xchg
leave
jg
xchg
cwtl
xor
inc
pop
xchg
divps
mov
lahf
and
mov
testb
mov
cmovbe
xchg
gs
and
sahf
push
mov
sub
push
cs
mov
data16
insb
aaa
and
mov
lea
cmp
mov
imul
int3
out
mov
push
push
pop
stc
xor
cmp
enter
addr16
bound
cli
jle
xchg
dec
mov
dec
movsl
cmpsl
sbb
orl
and
lret
cmp
lds
adc
aas
ljmp
ret
loope
adc
aam
mov
lea
pop
enter
jg
pop
push
and
mov
insl
adc
pop
into
pop
xor
hlt
push
mov
in
shrl
sbb
je
jae
mov
imul
sub
fwait
int3
cmp
int
jl
fcmovb
rcrl
dec
outsl
in
das
inc
xor
in
movsb
cmp
cwtl
out
mov
insb
scas
push
xor
jge
push
ret
shrl
push
and
fbstp
mov
ds
inc
je
dec
adc
fwait
outsl
dec
bound
dec
out
mov
push
lods
test
xchg
daa
divb
ret
xor
cmp
push
jge
add
jle
loopne
and
cmp
sar
flds
push
xor
sti
data16
cmpsl
jl
mov
andb
fs
in
mov
sarb
lahf
out
aaa
je
movl
data16
loopne
mov
fs
imul
and
clc
bound
push
mov
inc
repz
mov
and
mov
cltd
ds
clc
mov
int
sub
out
pop
loopne
sub
ljmp
add
sahf
cmp
and
sbb
mov
mov
decb
push
xchg
imul
xchg
inc
dec
mov
mov
push
fiaddl
sbb
pop
fisttpll
and
jmp
dec
xlat
lret
xchg
adc
popa
mov
sbb
jnp
sarb
out
or
jecxz
jp
jecxz
cwtl
push
push
mov
inc
mov
and
adc
mov
adc
repz
push
clc
and
push
in
mov
mov
sarl
jmp
adc
push
push
imul
dec
sub
adc
js
cli
adcb
inc
jbe
scas
push
fdivl
sub
xchg
cmp
ret
pop
cmp
add
jmp
sbbb
stc
rclb
in
shrl
pushf
aad
leave
sbb
pop
movb
lret
sbbl
xchg
adcl
mov
push
sub
ja
scas
in
stos
aas
xchg
adc
clc
sbb
dec
pop
sbb
stos
scas
mov
loope
xchg
lcall
cmp
mov
mov
jo
scas
jle
loop
jg
fsub
mov
xlat
mov
cmpsb
rcll
xlat
mov
add
testl
mov
xorl
mov
das
std
stos
movsb
mov
test
dec
add
pop
sbb
add
cmpsb
faddl
mov
fisubrs
add
aad
mov
imul
add
mov
sarl
mov
fwait
cwtl
xchg
push
jl
lahf
push
icebp
sti
nop
pop
xchg
lods
or
jb
dec
jb
arpl
push
cmp
adc
lds
sbb
inc
sbb
std
push
das
pushf
outsl
cwtl
dec
mov
mov
icebp
add
out
fnstsw
inc
lahf
leave
push
mov
ljmp
adc
or
test
ljmp
in
and
int3
add
in
jns
bnd
xchg
mov
popa
jmp
or
push
ret
pop
xor
push
mov
add
imul
lods
pop
jg
and
mov
jge
jmp
adc
stos
pop
out
out
cli
lods
push
and
int
lahf
popa
into
cli
hlt
lcall
mov
sbb
sbb
cmp
pop
ret
es
cli
mov
mov
mov
lret
mov
mov
dec
dec
jne
mov
fwait
mov
pop
rcll
mov
dec
cmpsb
pop
push
out
imul
inc
in
jecxz
icebp
enter
mov
adc
xor
push
dec
mov
jl
mov
cwtl
shlb
fldt
idiv
fistpl
or
adc
sub
sub
or
or
addr16
das
mov
loop
outsb
repnz
cld
aad
out
sahf
add
mov
mov
stc
jmp
aam
stos
lods
scas
or
icebp
popf
fwait
dec
mov
pushf
cmp
daa
or
pop
jb
sub
adc
shlb
popa
and
adc
ds
scas
jg
adc
lock
out
aas
lret
lock
iret
mov
dec
rcr
nop
or
push
fnstenv
outsb
cmp
cmp
push
xor
xchg
stc
mov
int
ret
inc
sbb
cmovbe
mov
pop
xchg
sbb
cwtl
xor
movsb
push
popf
mov
add
jp
sbb
sub
stos
mov
repnz
cmp
mov
xchg
scas
mov
imul
add
arpl
addr16
int
inc
in
stc
inc
push
jmp
jb
testb
pop
push
push
shrb
mov
pusha
lods
nop
inc
and
into
lcall
jle
mov
aaa
fwait
xchg
and
je
dec
fst
ss
push
mov
shrb
dec
or
mov
xor
push
jl
cmp
test
je
xlat
fdivrs
push
into
in
insb
daa
dec
mov
rorb
pop
lahf
push
add
fucom
test
sub
xchg
push
and
xchg
mov
fists
cs
fildl
sub
xor
icebp
adc
pop
inc
frstor
cmc
insb
call
mov
idiv
mov
cmpb
jle
inc
dec
xchg
mov
fsub
xchg
fsubrl
cwtl
cwtl
fwait
sbb
mov
or
scas
inc
xchg
gs
and
les
lcall
or
cmp
add
pushf
or
sbb
aad
sub
mov
push
cmp
jbe
inc
and
inc
sub
sub
sti
mov
daa
jle
jbe
int3
cmp
vmovq
js
out
inc
loope
out
sbb
xchg
mov
sub
loopne
movsb
pop
into
pop
mov
mov
or
sub
sbb
xlat
push
and
adc
jb
jo
mov
int3
mov
std
add
xor
cli
cmpsl
push
icebp
loope
ljmp
push
ret
xorl
xor
scas
clc
xchg
dec
shlb
movsl
mov
push
jmp
mov
mov
or
ret
mov
adc
imul
call
cmp
jmp
cwtl
push
pop
xlat
icebp
dec
cmc
cmpsl
fs
jg
insl
ljmp
aas
push
rclb
lea
mov
fdivp
mov
cld
jge
fcmovu
loopne
ficoml
mov
sub
pop
jp
and
popa
jle
push
push
popa
mov
jmp
mull
dec
xor
rcrb
cli
or
jnp
xchg
je
fsubs
add
dec
aas
lock
push
rcll
outsb
push
stos
sbb
pop
icebp
ljmp
aas
add
aas
sub
cld
popa
sti
push
mov
add
mov
aad
or
fnstenv
jecxz
jle
js
jecxz
inc
rorb
mov
ret
aad
test
jmp
adc
cmp
mov
pop
jbe
lret
call
aaa
push
cmp
aaa
dec
push
in
xchg
and
and
adc
adc
inc
int
stos
cltd
dec
mov
cld
loopne
loop
cmp
add
ds
fbstp
shrd
push
and
mov
xchg
push
ljmp
das
push
and
stos
mov
jl
test
add
cli
insl
sarl
cmp
lcall
dec
xor
or
jg
imul
leave
pop
xor
dec
pusha
scas
ret
into
mov
sbb
push
cmp
rcl
jmp
mov
sbb
xor
mov
and
test
push
fisttpll
loope
add
and
clc
xchg
imul
rcll
sub
int3
dec
mov
jmp
and
sub
and
or
icebp
push
out
mov
aas
aam
add
bswap
std
test
aam
test
fs
repz
jae
dec
test
idiv
ret
xor
int
xor
clc
sub
pop
or
fnstsw
xor
mov
pop
test
xor
das
test
push
in
data16
hlt
xchg
sub
add
test
or
pop
cmp
lret
imull
outsb
repz
sahf
mov
cmp
fnstcw
shlb
sub
mov
dec
adc
cmp
adc
adc
inc
inc
dec
mov
lea
sahf
push
jp
mov
lds
lcall
adc
mov
icebp
and
jp
xchg
pop
inc
sub
sub
push
cwtl
aad
mov
jbe
pop
mov
mov
jge
sub
or
lods
scas
fstpl
ret
push
push
fucom
xchg
fs
and
cmp
add
repz
fsubs
into
ror
in
sarb
repz
sbb
fndisi(8087
je
pop
shlb
jbe
or
push
push
call
mov
in
xchg
scas
test
adc
sub
cmp
xlat
add
adc
insl
jp
lds
pushf
xlat
insb
jne
sub
movsb
rorb
out
rcrl
dec
lds
dec
sbb
frndint
negl
jp
lcall
inc
and
notb
add
pop
adc
or
sti
cwtl
inc
and
push
imul
lcall
add
pop
jae
jg
outsb
mov
fwait
dec
lods
xchg
fcmovnbe
mov
rorl
test
jae
pop
rdpmc
dec
xor
test
outsb
aad
arpl
jb
es
sti
xchg
and
cmpsb
pop
or
arpl
sub
aas
out
popf
jle
dec
dec
dec
mov
adcl
shl
sahf
lret
aas
or
jno
inc
es
xor
mov
and
jo
pop
xchg
in
js
add
and
fstpt
in
mov
call
movsb
call
adc
sub
push
push
dec
lcall
pop
icebp
push
dec
mov
dec
jmp
xchg
aam
cmpsl
stos
or
mov
or
push
cs
cmpsl
call
jl
dec
mov
adc
ljmp
dec
mov
push
inc
inc
ret
or
mov
jge
push
addr16
addl
xchg
outsb
add
jo
pusha
aam
mov
jle
loop
test
jo
aas
inc
lcall
fwait
push
sub
pop
aas
or
stos
xor
or
outsl
fistl
sub
push
add
loop
pushf
fistl
loope
loopne
in
or
aam
cld
cmp
movsb
test
mov
sub
lret
sbb
fimull
rclb
inc
lods
cmc
sarl
inc
mov
scas
sbb
xlat
movsl
xlat
cld
or
mov
sahf
jns
push
mov
sbb
lcall
dec
ret
js
mov
aas
cs
jae
data16
pop
repnz
fimuls
in
xor
outsb
pop
jae
jo
and
inc
pusha
in
jns
lock
cmpb
pop
inc
test
jge
insl
cs
sti
ds
mov
std
data16
icebp
jns
sbbl
lock
xor
cs
hlt
and
sbb
cld
mov
sahf
mov
das
inc
fnstcw
mov
xor
pop
jl
or
push
lret
xor
pop
mov
add
cmpsb
and
call
fimuls
push
dec
xor
and
in
in
or
cmp
fidivrl
int3
in
xchg
lock
pop
hlt
movsl
add
popa
sbb
out
inc
bound
and
movsl
adc
mov
seto
adc
and
xchg
pop
mov
jecxz
cs
xchg
shll
xchg
or
test
cltd
mov
xchg
xchg
aam
mov
rorb
sbb
cwtl
or
lods
sti
lahf
std
aam
jbe
mov
inc
stc
imul
lcall
cmp
rcll
js
pop
test
mov
push
sbb
or
dec
rorl
hlt
xchg
sub
das
loopne
and
ss
push
fnstcw
ret
adcl
mov
inc
int3
jecxz
inc
enter
push
sahf
add
repz
scas
pop
aad
out
gs
ja
negl
and
push
in
pop
fcom
in
mov
pop
add
sbb
jge
jecxz
test
test
stc
pop
xchg
add
inc
xchg
add
cmp
adc
fcoms
bound
negb
nop
in
cli
push
repnz
outsl
mov
in
mov
pop
sbb
fildll
jge
fcomp
ds
dec
sub
aas
test
pop
stc
mov
xchg
daa
test
sub
xchg
mov
cltd
addr16
mov
test
mov
pop
add
inc
lock
mov
adc
je
or
aas
add
aam
cs
cmc
pop
lock
jg
in
jmp
pop
mov
scas
push
mov
add
mov
jecxz
sarb
test
in
notb
insl
jo
or
fldenv
mov
sbb
cld
sbb
stc
push
push
add
xchg
in
and
mov
aad
in
stos
in
sub
inc
daa
xor
std
repz
mov
cmc
pusha
push
sub
xchg
aam
push
call
stos
cld
pushf
jp
adc
out
insb
cmp
pop
mov
push
pop
pop
mov
cmp
shrb
push
cmp
push
xchg
dec
cltd
cs
out
push
in
popa
mov
js
imul
lret
mov
adc
in
inc
xlat
mov
nop
fnsave
jle
pop
push
and
fildl
and
xchg
movsl
inc
sub
sub
shll
cmp
jb
js
push
fcoml
and
sbb
jge
rcll
cmp
dec
push
push
loop
and
jmp
rcll
pop
adc
xchg
je
lcall
xorb
push
mov
sub
sbb
out
test
cmpsb
pop
lock
imul
arpl
cs
sbb
pop
ja
mov
fwait
sub
adc
push
sarb
icebp
xlat
xchg
mov
adc
jmp
pop
xlat
mov
ds
rcrb
dec
pop
repz
adc
pushf
ds
lods
cli
dec
stos
push
and
rcll
jne
xor
mov
shrl
lret
dec
dec
sub
xchg
jne
addb
mov
xorb
imul
xchg
fsubs
lock
imulb
dec
sbb
in
imul
fcmovnb
mov
and
mov
dec
ficoms
in
mov
sbb
pop
jne
ss
repnz
jae
scas
das
push
ljmp
xchg
mov
popf
push
outsl
adc
mov
icebp
je
test
or
aaa
xor
cld
movsl
mov
dec
call
notb
test
adc
pop
or
std
pop
xchg
dec
or
and
sub
fnsave
push
loopne
fsubs
in
add
cltd
cmpsb
in
enter
dec
adc
ret
mov
adc
in
insb
popf
sti
push
popf
mov
xor
test
fsubs
out
and
fisubs
inc
sub
adc
sbb
pop
gs
push
adc
jno
and
inc
stos
and
aaa
cmp
dec
movsb
sub
out
dec
sbb
rcrb
fwait
inc
ds
xchg
imul
adc
mov
daa
scas
mov
add
xchg
je
pop
fistpl
sub
lods
imul
cmp
xchg
xchg
sti
cltd
sub
lcall
xor
mov
lods
push
rcll
sub
push
mov
stc
jecxz
dec
mov
int3
mov
or
inc
or
data16
mov
jns
push
jnp
mov
ljmp
mov
std
dec
jnp
std
cltd
push
inc
dec
addl
popf
dec
cmpsb
sbb
add
inc
mov
adc
mov
jmp
sti
dec
push
aam
xor
in
popf
bound
push
add
cltd
nop
fs
add
std
inc
mov
jb
enter
repnz
sub
push
inc
stos
mov
and
xchg
push
data16
shrb
mov
jo
mov
push
pextrw
jo
ficoms
adc
lret
xlat
cld
and
data16
repz
xor
mov
movsb
sub
pop
pop
add
fucomip
mov
xlat
stos
das
xchg
pusha
dec
shl
mov
ret
daa
sub
fstpl
sub
push
cmpsl
inc
sbb
cmp
repz
lods
mov
std
pop
or
push
xchg
leave
jl
inc
sub
jge
cs
mov
push
mov
push
hlt
jmp
xchg
ret
outsl
mov
notl
push
out
or
ljmp
or
mov
outsl
mov
ds
dec
xchg
mov
dec
insl
xchg
gs
ja
xor
movsb
into
adc
mov
or
and
add
adc
ljmp
int3
add
clc
call
adc
dec
fstpt
ret
ljmp
or
cmp
jne
xor
rorb
out
ret
outsl
xchg
sbb
and
cmpsb
ds
sub
jmp
shl
cmp
adc
movsl
push
fistl
adc
icebp
fimull
mov
lods
push
in
fists
or
fcom
or
cmpsl
loop
sub
data16
mov
sub
imul
inc
push
jmp
dec
add
andb
jg
in
fs
push
pop
pop
cmp
jl
push
adc
jecxz
xor
sub
outsb
adc
sub
stos
pusha
inc
jp
adc
shr
inc
and
aaa
ds
out
lods
sbb
and
popa
mov
or
mov
int
sti
sti
mov
cmp
outsb
inc
and
lock
push
insb
push
outsl
rcl
pop
and
ficomps
jp
adc
enter
xchg
mov
xlat
icebp
dec
ja
movb
jge
push
sbb
imul
data16
sbb
rolb
in
enter
xchg
ja
andl
jg
inc
pop
pop
lock
dec
aaa
and
jmp
in
cmp
fnstenv
lds
insl
adc
leave
ds
stos
les
int
mov
daa
clc
sbb
jnp
jle
repz
xor
sub
lock
out
xchg
mov
or
push
push
and
mov
imul
and
sbbb
scas
dec
fwait
cmpsl
daa
dec
dec
movsb
sub
outsb
and
pop
cltd
inc
jae
add
out
daa
push
dec
bound
push
dec
xor
and
ds
mov
push
cmp
ss
cltd
gs
dec
sbb
push
dec
xor
add
mov
jecxz
fucomip
pop
out
shlb
xchg
in
inc
testb
int
aas
mov
cmp
hlt
arpl
jnp
cmpsb
inc
jecxz
cmp
and
sub
mov
dec
xor
movsb
xchg
mov
or
pop
mov
or
xor
push
fimull
fisttpll
pop
mov
xlat
loop
pop
mov
push
cmovne
add
es
pop
sub
stc
jns
out
adc
push
gs
mov
xchg
pop
jne
es
push
in
cmp
icebp
cli
jg
jb
adc
mov
daa
jb
cld
aaa
mov
push
pop
mov
std
stos
xchg
lds
mov
cmp
cmpsb
scas
xchg
xor
push
inc
mov
stc
pop
loopne
sti
shrb
push
mov
ret
mov
add
jb
push
cmpb
rclb
pop
mov
test
pop
pop
sbb
xor
mov
addl
jb
and
pop
or
pop
add
cmp
loopne
xor
shlb
aam
jle
loop
mov
es
inc
loope
mov
xor
fs
pushf
fisubs
cmp
and
jb
mov
adc
testl
pop
mov
cmpsl
shll
and
in
or
pusha
sub
sahf
and
pusha
outsb
cmp
outsb
jbe
outsl
rclb
mov
and
pop
leave
fwait
insb
mov
xchg
mov
imul
sub
inc
divb
inc
nop
mov
pop
cld
hlt
dec
into
mov
xor
adc
xlat
insb
sbb
pop
push
inc
xchg
fnsave
xchg
push
les
push
sub
lret
cli
movsl
push
jle
add
call
pop
lods
mov
js
aam
insb
ret
pop
in
adc
dec
fisubrl
jge
leave
jmp
pop
mov
mov
imul
int3
mov
jno
fdivrs
loop
push
ror
jne
jo
shrb
jecxz
imul
inc
dec
push
dec
lea
mov
stos
mov
notb
and
fldl2t
pop
xlat
jmp
insl
mov
mov
into
fsubp
mov
xor
mov
mov
std
sbb
mov
subb
cltd
lds
cmp
ss
push
adc
sarl
cmc
cwtl
movsl
push
add
in
cmpsb
dec
sbb
cmp
out
ljmp
xor
in
stos
sub
push
cmc
add
xchg
push
cmc
gs
cmp
jno
mov
sbb
call
inc
lcall
stc
pop
mov
lds
jb
push
into
addr16
mov
xchg
sbb
out
lods
adc
hlt
or
pop
push
jle
pusha
ficoms
std
pop
mov
push
sbb
hlt
aaa
fstps
pop
std
or
inc
jp
cli
stos
aas
movsb
insb
xchg
pop
mov
inc
add
xchg
out
sub
enter
jg
or
push
lods
sub
mov
or
test
sub
gs
psubusw
dec
jecxz
adc
push
add
daa
and
inc
out
mov
pop
mov
jo
xchg
in
insb
cmpsl
pop
xorl
daa
lahf
mov
es
xchg
push
cmc
fiadds
cmpl
aam
pop
jg
out
fcmovne
gs
pop
out
dec
xorb
idivb
sbbb
pop
adc
nop
insl
arpl
mov
lea
cld
push
push
mov
movsl
fnstcw
push
jl
imul
dec
mov
sub
fs
pop
fcomi
or
push
add
fdivs
scas
jo
adc
pop
jmp
daa
mov
fildl
jle
rorb
mov
repnz
pushf
xchg
add
and
inc
pop
daa
and
insl
dec
jno
jne
pop
rolb
popf
mov
ljmp
fildll
jb
or
sub
aas
es
mov
fsubrp
and
testl
cwtl
inc
and
add
aad
clc
or
add
fwait
xchg
loopne
pop
mov
clc
dec
sahf
in
popf
push
inc
in
push
lock
dec
mov
xchg
clc
scas
fimuls
jge
cmp
fsqrt
outsl
inc
lods
lret
sub
xor
lret
jno
sti
cltd
sub
cli
mov
fcompl
mov
ret
jo
sub
cld
adc
pop
inc
dec
add
sub
mov
push
mov
or
adc
subl
pop
mov
leave
xchg
xor
movd
lret
insl
mov
test
test
cli
daa
insb
add
int3
cs
nop
inc
pop
inc
xor
push
stc
xchg
in
loop
cmp
xchg
inc
aad
lahf
push
lcall
ja
test
lock
lret
je
cmp
adc
mov
and
pop
into
gs
mov
cmc
in
push
leave
mov
inc
out
scas
pop
xor
es
jns
cmc
jge
or
or
pop
ljmp
rorb
or
out
add
jno
push
jae
add
xor
jg
sbb
dec
sub
scas
mov
int
cs
cli
xor
dec
cmp
jmp
clc
jo
test
cwtl
fwait
lret
push
add
ljmp
gs
fistpll
hlt
push
dec
jbe
sarb
sbb
lea
jbe
lcall
jp
adc
push
in
pop
cmp
repz
fsubr
out
ret
shrl
xchg
fstpl
inc
xor
xor
rcll
jp
fs
xor
testl
and
stc
inc
cmp
push
shll
lahf
shlb
repz
inc
inc
jle
mov
inc
mov
mov
subb
mov
mov
mov
rclb
or
and
sbb
sbb
dec
js
or
fs
mov
fwait
sub
mov
stos
adc
add
cmpsl
in
outsl
inc
insb
cmp
adc
fdecstp
loopne
outsb
bound
imul
dec
add
or
mov
lret
adc
cmp
adc
lcall
mov
ficoml
dec
arpl
jne
cli
fdivs
outsl
mov
fisttps
test
filds
xchg
sub
adc
xchg
lcall
xlat
push
sub
aad
dec
add
adc
lret
in
int
sub
data16
aad
lcall
inc
sbb
and
mov
lcall
in
push
out
mull
adc
loopne
inc
sbb
xor
mov
enter
lods
or
mov
popf
sub
movsl
iret
dec
jne
or
faddp
imul
lock
push
fsubs
jg
jecxz
mov
leave
fildll
arpl
or
xor
jmp
popa
pop
cmp
mov
clc
sub
int3
push
push
loope
pop
adc
dec
mov
imul
jo
test
rclb
in
inc
test
arpl
inc
inc
push
and
sub
or
and
nop
pushf
fldl
mov
negl
fdivs
fistpl
rolb
les
mov
outsl
rdmsr
ss
inc
ja
aam
pop
test
fnstsw
pop
xor
lret
leave
mov
lcall
or
pop
mov
jo
loope
in
mov
sub
popf
stos
stc
cmc
ss
adc
sarb
dec
or
lret
ss
cmp
pop
test
popf
sub
cmp
lds
pop
loop
jo
dec
or
das
stos
push
aas
cmp
inc
sbb
aas
mov
jl
stc
pop
stos
scas
cmpb
push
or
sbb
in
adc
xlat
sub
adc
or
sbb
call
rorl
or
repnz
loope
daa
mov
or
mov
popf
pop
mov
pop
out
outsl
fnstcw
out
adc
push
andb
mov
jle
mov
ficoms
shrb
and
out
add
sbb
cmc
aam
pushf
cmp
into
pop
bound
das
jnp
stc
add
mov
test
hlt
out
out
jbe
daa
xorb
in
in
mov
roll
push
lahf
dec
lds
push
or
pop
cmp
clc
roll
scas
add
hlt
jmp
fsubrs
and
in
nop
pop
sbb
pop
icebp
dec
mov
stos
loopne
les
lods
cmc
iret
shrl
cwtl
jl
test
lea
inc
fcmovu
mov
scas
aaa
sub
out
fsubs
adc
push
sarb
addb
mov
cmp
lea
mov
ja
sahf
pop
pop
jecxz
pop
push
xchg
jns
jbe
fcoms
ret
bswap
mov
in
and
sub
lock
aam
xchg
mov
inc
rolb
and
and
stos
js
in
jae
pop
aas
hlt
jecxz
cmpsl
rcrb
sbb
pop
mov
inc
insb
pop
popf
es
xor
cmpl
mov
enter
arpl
push
lret
pop
out
and
or
jmp
jne
push
pop
cmpsb
add
or
out
pusha
pushf
inc
bound
pop
subb
prefetch
or
cs
xchg
les
sahf
mov
fnsave
rclb
xchg
out
push
roll
lods
sbbb
add
sbb
loop
out
sub
mov
inc
in
lods
jno
movsl
aad
xchg
repnz
xor
adc
jae
inc
sbb
push
xchg
imul
push
pop
rorl
into
out
jbe
fmull
clc
loop
lds
lods
iret
xchg
cmpsb
scas
adc
addr16
aad
or
inc
pop
mov
jnp
fucomp
movsl
scas
jo
es
push
jp
mov
add
cmp
lods
cmp
or
rcrl
jns
xchg
out
sti
inc
add
sahf
sub
shll
scas
jns
js
pop
out
mov
pushf
daa
pop
faddl
mov
iret
sbbl
jbe
or
enter
mov
sub
mov
xchg
sub
das
dec
movsl
test
cmp
xor
lds
and
pop
mov
xchg
outsl
out
mov
dec
test
loope
adcb
addr16
push
add
and
ja
into
aas
and
xchg
jle
mov
sub
sbb
mov
jge
imul
rcl
stc
lret
xor
xor
xlat
push
lahf
enter
rcll
mov
mov
cmp
leave
sub
cmpl
fcomi
lret
push
mov
jo
mov
push
into
xchg
mov
push
lahf
ret
pop
scas
xchg
pop
jmp
inc
movsb
lds
xchg
imul
in
loop
daa
test
inc
jnp
insl
jge
mov
popf
or
enter
out
rcrb
movsb
adcl
int
iret
push
inc
outsl
sti
icebp
lahf
pop
inc
insb
push
dec
les
imul
mov
aam
pushf
or
mov
inc
pop
mov
adc
ss
insb
loop
ja
push
inc
inc
mov
out
sub
nop
jecxz
lea
rcrb
push
jbe
dec
mov
xchg
fwait
add
push
out
xor
jb
mov
cwtl
loope
stos
cwtl
out
and
gs
push
lret
xor
hlt
cmp
stc
outsb
inc
jne
adc
push
sbb
fistpl
fbstp
aad
sahf
fsts
cmc
into
adcb
jmp
add
stc
loopne
push
xor
lea
or
lret
lods
push
cmc
cmp
enter
mov
jno
gs
imul
push
leave
cmpsl
and
or
cwtl
int
or
jmp
mov
lds
jne
xor
incb
mov
cs
sbb
mov
and
cmpsl
add
sub
xchg
or
cmp
jbe
sbb
lret
cmp
jge
insl
popf
mov
loopne
mov
dec
test
mov
aaa
icebp
insb
shll
imul
inc
push
push
insb
cmp
fistps
cmp
sub
ret
scas
int
mov
and
ds
lahf
xchg
pop
cltd
lods
inc
test
mov
cmc
icebp
out
add
mov
jl
push
ds
push
mov
out
imul
mov
mulb
out
mov
jo
int
xchg
ror
mov
cmp
mov
jmp
jb
cltd
sbb
imul
jecxz
fsts
fcomip
into
xchg
push
cmp
mov
adc
stc
push
and
or
lock
andl
int3
cmp
sub
mov
xor
and
sub
lret
fidivl
xor
pop
xor
inc
fbld
enter
push
jns
mov
in
cmp
movsb
in
mov
fdivrs
lock
or
cmp
pop
push
mov
loop
movsb
push
rclb
mov
jp
in
adc
xchg
push
rcr
iret
sub
mov
cmp
test
xchg
xchg
test
add
xchg
jle
or
pop
fsubrs
cmp
fsubr
clc
mov
sahf
out
push
stc
inc
call
cwtl
fdivp
jmp
movsl
pop
mov
sbb
lods
add
stc
inc
or
ret
push
dec
out
cli
scas
lcall
cltd
and
clc
jge
mov
aam
mov
push
mov
bnd
out
cmp
sbb
addr16
mov
into
js
sbbb
inc
fisttpll
or
hlt
adc
adc
pop
jecxz
cmpsl
jecxz
lds
icebp
sti
jl
and
mov
into
leave
stos
imul
or
mov
xchg
lcall
insb
dec
fidivs
clc
movsl
xchg
xchg
or
cwtl
int3
out
test
pop
mov
mov
movsb
mov
xor
cmpsb
mov
push
xchg
cmp
push
insl
jns
mov
mov
cltd
or
and
inc
inc
loope
mov
adc
shll
in
cmp
fmuls
clc
fmull
jno
negl
pop
jns
dec
mov
xlat
jmp
push
fisttpll
leave
mov
icebp
shlb
add
scas
jge
loope
mov
shlb
mov
subl
inc
es
clc
fmul
adc
jnp
fld1
and
push
sahf
int3
cmp
adc
pushf
inc
fbstp
shl
cli
in
in
or
aas
jne
cmp
push
scas
fstpl
xchg
xchg
push
cli
add
fistl
pushf
mov
push
push
fwait
jl
adcl
lock
adcb
sahf
push
filds
push
sarl
cmp
mov
jo
jge
xlat
jnp
cmp
cld
pushf
mov
xlat
mov
insb
jmp
fisttpll
mov
push
sub
xor
jnp
icebp
clc
push
jl
add
in
mov
push
xchg
pop
hlt
dec
stos
jmp
cmpsl
jnp
aam
subb
movsb
jne
addr16
lret
mov
push
ss
cmc
jnp
gs
bound
adc
incb
sbbl
pop
test
popa
outsl
xor
mov
push
fisttps
addl
add
adc
shrb
negb
in
int3
ja
add
repnz
xor
jmp
xchg
or
or
xchg
sti
cltd
clc
or
and
loope
xrelease
xchg
test
pop
fmuls
mov
ja
gs
pop
sbbl
bound
xor
mov
jmp
and
cld
cmp
sbb
std
mov
gs
arpl
ret
mov
mov
push
jmp
iret
xchg
out
push
in
pop
sti
popa
icebp
pushf
fdivrs
or
adc
hlt
adc
into
xor
imul
jmp
mov
add
movsb
popf
cwtl
cld
push
insb
outsl
dec
pop
repnz
sub
das
jno
or
sarl
xor
add
mov
loope
pop
sbb
xchg
xchg
stos
rcr
idivb
xchg
or
fsubrl
fsubl
test
and
xlat
dec
clc
mov
in
cmpb
mov
and
out
or
or
jle
out
and
pop
inc
add
insb
mov
fcmove
mov
xor
adc
push
pop
adc
lahf
int3
inc
rorl
cmp
insb
sahf
inc
or
into
mov
pop
mov
test
ljmp
cltd
mov
aas
inc
fisttps
leave
mov
fisubrs
xor
aaa
add
pop
aam
inc
or
dec
into
lods
mov
sti
notl
push
mov
cmp
add
sbb
jge
in
je
shrb
loope
adc
inc
in
ja
cmpb
inc
mov
addl
mov
cmp
push
dec
std
mov
mov
or
dec
cmp
loopne
cmc
testl
push
stos
inc
mov
subl
jne
fmul
or
repnz
xor
ds
les
movsb
pop
pop
cmp
fs
movsb
mov
cmc
jp
mov
jecxz
daa
mov
add
cld
cmp
pop
ljmp
in
push
pop
cmc
pop
loop
push
cmp
popl
sub
pop
aas
sbb
in
pop
loope
psubsb
push
iret
daa
jl
or
cli
cmp
jo
mov
in
adc
stc
jb
repz
lcall
jnp
or
sbb
insl
or
movsl
sub
pop
add
pop
out
jp
adc
mov
inc
dec
xchg
or
xchg
stos
call
mov
repnz
xor
jno
lret
shrb
pop
mov
inc
mov
xchg
pop
cltd
addr16
cmc
fnstsw
xor
mov
and
add
push
mov
mov
fdivl
xchg
std
sahf
ds
hlt
daa
scas
pop
or
mov
addl
push
testb
inc
aaa
cs
xorb
xchg
loop
lret
adc
test
subl
loop
jno
repz
and
push
sbb
cwtl
flds
sbb
fsub
cltd
jle
xchg
pop
test
mov
inc
inc
lret
xor
mov
adc
rorl
jne
repnz
enter
dec
arpl
jns
lahf
dec
mov
mov
and
nop
mov
imul
xchg
xor
xor
mov
scas
jbe
es
popf
in
add
insl
fistpll
pminsw
dec
sub
or
shrl
pop
or
mov
mov
add
mov
test
cmp
and
mov
jl
mov
lret
aad
inc
lds
aad
dec
lahf
and
mov
sub
inc
inc
cmp
mov
xor
out
fwait
sub
fadds
sahf
mov
int
bound
sub
push
sub
rorb
sub
inc
out
rcll
loop
lods
mov
int
stc
stc
cmp
ds
mov
test
jbe
inc
xor
jne
dec
inc
push
inc
dec
xchg
dec
lods
insb
popa
repnz
sub
xchg
scas
testl
fistpll
dec
clc
rol
popa
and
mov
call
or
push
sar
int
mov
or
popf
mov
arpl
outsb
xchg
hlt
std
andl
inc
jne
push
daa
adc
dec
push
lahf
mov
xchg
dec
sub
cmp
adc
inc
in
call
shl
leave
rolb
aad
push
inc
or
in
or
dec
pop
fldl
in
cmp
pop
mov
sti
sbbb
lock
push
add
leave
or
pop
xchg
sub
sbb
or
mov
and
add
dec
ret
icebp
sbb
push
xlat
or
jmp
pop
inc
mov
es
pushf
add
cmpl
fimuls
xor
jo
ret
not
add
mov
neg
out
pop
ljmp
and
mov
cmpl
xor
or
or
cmp
int
inc
or
sub
lock
sub
shrb
out
inc
imull
es
mov
jo
jnp
xchg
xor
cmpsl
lcall
push
lock
rcrl
sub
lea
lahf
push
movsl
mov
mov
cmp
sbb
and
xchg
test
push
jae
push
mov
adc
and
cmpsl
mov
imul
repnz
arpl
addr16
sahf
mov
lret
popw
fbld
push
insl
xlat
stc
mov
iret
ficoml
pop
popf
negl
mov
es
das
aas
out
sub
and
push
dec
push
pop
pop
mov
xchg
jbe
sbb
pop
mov
pop
vfmsubadd231pd
jge
inc
stos
shl
push
push
js
dec
push
fldenv
xor
push
lods
fldt
faddl
xor
sub
mov
add
push
shll
xor
into
xlat
jne
fcom
cmpsb
into
in
imul
adc
sub
loop
or
xchg
or
jmp
les
fs
sbb
clc
mov
sbbb
mov
adcl
fs
dec
cmp
addl
cmp
ljmp
cwtl
shrl
xor
lahf
jb
int3
je
aam
mov
and
dec
mov
ljmp
gs
fwait
mov
aaa
jg
dec
xor
mov
xchg
aaa
mov
shll
addr16
cmp
movsl
and
loope
imul
cmp
and
pop
inc
xchg
push
inc
cmpsb
add
lea
push
dec
adc
popf
inc
test
fmuls
jns
jns
aas
mov
jae
repz
sub
mov
or
mov
insl
jne
mov
repz
pop
popa
jle
xchg
jecxz
mov
shrb
dec
pop
jl
lock
jno
jl
cs
jno
xchg
lock
fidivrs
mov
mov
pop
daa
xchg
idivb
loope
mov
mov
cltd
xchg
fisttpll
jl
xor
mov
and
push
ds
sti
cmp
and
jns
stos
xchg
mov
xchg
fs
pop
out
insl
inc
rol
and
lods
rep
cmp
sbb
mov
cmpl
xor
push
jne
call
insb
or
pop
inc
pop
cmp
cmovno
jno
xor
incb
push
mov
xlat
mov
xchg
dec
pop
pop
les
cmp
iret
mov
inc
sbb
push
mov
cli
jns
adc
mov
out
std
roll
inc
adc
mov
xlat
or
cmp
addl
outsl
sbb
push
arpl
mov
insb
sarb
out
mov
or
mov
pop
std
sahf
mov
cmp
repnz
cmp
insb
mov
adc
and
and
xchg
es
and
mov
pop
dec
xor
push
add
leave
cwtl
pop
aaa
bound
test
out
leave
sub
imul
adc
xchg
or
jl
mov
fsubrl
pop
mov
jno
dec
inc
int3
mov
or
inc
sbb
xlat
sbb
mov
adc
pop
jbe
xor
mov
sub
jle
imul
add
outsl
sti
ds
iret
adcl
dec
or
xchg
stc
xchg
imul
movsb
push
std
xchg
int3
dec
mov
imul
popf
push
je
jbe
dec
insl
out
mov
jbe
mov
xor
cwtl
adc
mov
push
aad
mov
dec
add
add
mov
out
inc
push
mov
and
repnz
push
pop
mov
loop
dec
scas
adc
notl
or
lods
push
dec
adc
imul
push
xchg
jno
push
test
je
loop
gs
repz
pop
and
push
inc
mov
pop
xor
adc
addl
sub
push
sbb
mov
es
sbb
add
ret
ljmp
leave
aad
out
or
mov
mov
cmpsl
arpl
xor
inc
lock
mov
xchg
lcall
sub
movsl
pop
aas
fcmove
xchg
les
stos
pop
imul
jmp
nop
out
cmpsl
sbb
dec
popa
insl
pop
dec
testl
mov
scas
das
push
jl
out
mov
pop
pop
scas
loop
orb
test
jne
sbb
pop
outsl
mov
ret
cwtl
fwait
lcall
sbb
cmp
movsb
pusha
mov
xchg
or
push
jle
mov
push
test
aas
ror
hlt
xor
push
add
movsl
sbb
sbb
xchg
jg
pop
fnsave
ret
pop
addr16
out
or
test
cltd
jle
aad
inc
negb
test
punpckhwd
cmp
or
in
arpl
jg
sahf
das
js
inc
es
xchg
mov
lret
adc
rcrl
ss
int3
fcoms
push
adc
push
push
push
sti
push
mov
mov
fildll
aam
push
testl
fildll
testl
mov
mov
mov
inc
xor
cltd
mov
sub
jae
pop
ja
mov
mov
daa
mov
stc
cmp
adc
or
push
mov
xor
sahf
lahf
xor
push
stos
flds
loope
lret
jno
cmpsb
cld
andb
lods
push
mov
jge
dec
cltd
out
out
icebp
or
mov
xchg
lahf
cmp
test
and
popa
repz
insb
gs
cmpsl
cmp
mov
push
inc
orl
push
push
push
jnp
mov
mov
inc
cli
ret
out
popa
out
cmpsl
and
inc
and
test
push
sbb
sbb
cltd
push
or
insb
dec
rorl
sti
dec
jb
add
mov
andb
xchg
stos
or
inc
in
pop
xorb
jno
inc
xor
adc
idivl
ljmp
arpl
xor
icebp
shr
jp
xchg
mov
mov
ljmp
ja
je
xchg
cwtl
pusha
aas
mov
std
inc
mov
pop
mov
sub
out
ret
and
fstps
fidivl
pop
iret
lret
arpl
dec
shrl
cmp
push
out
jo
jmp
push
dec
xchg
into
dec
push
popa
fimull
sti
inc
hlt
pushf
pop
lret
int
into
inc
push
outsl
sub
jns
sbb
sub
inc
mov
mov
cmp
out
ss
and
aaa
and
stos
pushf
into
mov
stos
jnp
sub
popf
pop
dec
push
addr16
mov
out
cli
std
jae
jge
cmp
dec
jecxz
dec
jl
lahf
push
lret
add
lods
imul
cmp
arpl
xor
jmp
jp
push
jecxz
push
sbb
mov
or
movsl
xor
lea
pop
mov
and
mov
jmp
mov
cs
adc
icebp
fcoms
repnz
pop
jb
cvttps2pi
insl
ret
xchg
push
dec
xchg
comiss
pushf
leave
fldl
sub
mov
mov
insb
xchg
push
fwait
mov
inc
into
xchg
clc
ja
add
xchg
scas
sahf
movsb
arpl
stos
cwtl
or
push
ja
pop
cmp
pop
xor
aad
mov
call
int
jno
ljmp
repnz
adc
dec
cmp
fsubp
andb
ds
xor
in
adc
xchg
stc
push
dec
lahf
ret
ret
push
cmpsl
call
adc
sub
test
dec
sbb
repz
int3
push
cmc
insl
lahf
adc
or
nop
xor
into
jecxz
jo
add
ja
into
inc
or
mov
das
fwait
rorb
and
mov
push
in
fs
mov
das
cmp
cltd
pushf
test
js
cmc
xor
rolb
mov
jmp
loope
sub
rclb
ret
add
in
cwtl
popf
shrl
add
out
push
adc
pop
clc
pop
push
loope
and
xlat
jno
idivb
dec
std
add
fldenv
bound
push
mov
xchg
ljmp
pop
pop
xchg
pop
loope
repnz
enter
hlt
dec
pop
xor
in
mov
push
jg
mov
scas
lods
mov
fiaddl
dec
rcr
pop
dec
stos
pop
push
cmpsl
aam
pop
cmp
cmp
or
mov
clc
out
aaa
and
test
push
int3
arpl
aad
inc
cwtl
fiadds
loopne
xor
and
aam
pop
mov
or
inc
lret
cmp
xor
pop
lock
mov
xlat
int3
test
jecxz
cmp
push
outsl
xor
ffreep
aam
xchg
shll
lret
lds
lock
mov
ret
fwait
repnz
aaa
lahf
repnz
cs
out
movsb
mov
inc
sub
sbb
popa
lret
sbb
aas
cwtl
inc
jge
mov
mov
movsl
mov
cmp
mov
mov
add
push
mov
and
pusha
icebp
sub
add
out
movsb
xor
in
push
lds
xor
bound
mov
out
je
add
daa
sub
dec
add
scas
push
xchg
nop
fdivr
and
mov
fwait
mov
lds
aad
xchg
je
inc
xchg
push
ret
xlat
sub
mov
jecxz
and
pop
fcomip
mov
ret
or
pop
arpl
ret
fs
in
aam
stc
and
mov
mov
jbe
pop
jb
sub
imul
aad
test
loop
das
push
xchg
lds
adc
xchg
pop
icebp
rcll
pop
sbb
in
mov
mov
xchg
iret
fisttpll
addr16
loop
mov
adc
push
mov
shll
push
int3
ficoml
mov
div
mov
in
cmp
jmp
push
ljmp
shll
mov
sti
loopne
in
mov
sbb
fsubrs
clc
mov
inc
xor
fstpl
xlat
notb
and
sbb
pop
push
nop
inc
pop
sbb
mov
jbe
jle
je
sbb
mov
fdivrp
dec
dec
in
loope
jl
sub
pop
jo
xor
ret
idivl
movsb
aam
out
sar
mov
dec
dec
test
xor
imul
scas
xor
lahf
mov
and
push
sbb
push
mov
fcmovne
test
repz
push
ds
mov
cmp
and
outsb
test
push
and
bnd
adc
popf
mov
add
dec
ljmp
scas
icebp
cmpsl
dec
fnsave
cld
js
rolb
stos
push
lahf
test
pop
sti
outsl
sbb
sbb
leave
or
xor
shrl
stc
or
subl
jne
mov
out
in
xor
mov
loopne
iret
xchg
das
insl
dec
pop
and
in
mov
mov
pop
push
fildll
sbb
xchg
sub
shlb
movsbl
push
scas
loop
add
stc
roll
popa
fsubrl
mov
jmp
jbe
mov
dec
imul
push
inc
cmc
push
dec
aas
sbb
dec
sub
sar
mov
lods
or
scas
adc
mov
fwait
popa
sbb
nop
and
adc
cmc
push
lahf
xchg
jge
daa
addl
mov
mov
icebp
add
sbb
dec
arpl
clc
stc
adc
pop
pop
loop
pop
jbe
mov
adc
or
push
sbb
fadd
inc
imul
jle
mov
inc
jae
cli
imul
sbb
stos
gs
test
mov
mov
pop
jnp
insl
popf
orl
sub
mov
dec
dec
push
sbb
repz
push
cmp
xchg
adc
or
stos
or
sub
push
pusha
int
mov
jp
mov
adc
imul
std
and
outsb
aaa
mov
adc
js
inc
sarb
push
or
lods
sbb
cmpsl
imul
jl
lahf
dec
and
mov
jns
mov
and
loopne
imul
iret
ljmp
mov
or
lds
mov
xchg
popf
test
imul
ror
repnz
mov
cwtl
add
ja
lahf
sub
ficoms
shlb
sub
dec
sub
aam
das
mov
mov
mov
adc
test
inc
add
mov
cmpl
sbb
mov
lahf
inc
jb
mov
jmp
jb
sbb
add
jno
push
je
les
jg
xchg
or
push
test
bound
sbb
rcll
mov
ja
or
mov
jmp
jl
dec
sbb
push
mov
clc
call
add
cmpsl
shr
add
mov
inc
sub
aaa
das
sub
sbb
dec
or
inc
cmp
xchg
cs
sub
call
nop
jmp
jb
das
addr16
jmp
push
sub
push
mov
sub
sbb
dec
mov
adc
pushf
inc
pop
pop
xchg
loopne
adc
add
loop
cld
stos
lock
lock
mov
push
mov
adc
lea
repnz
or
xchg
cmp
test
out
cmp
sub
push
push
mov
sub
dec
pop
push
adc
sbb
out
jnp
pop
test
out
fisubl
imul
ficomps
inc
icebp
into
or
push
sar
mov
mov
das
mov
cwtl
sti
adc
adc
adc
and
cmc
imul
loopne
dec
fdivrs
push
cmp
fucom
mov
out
xor
xor
add
mov
jge
push
leave
cld
subb
lea
test
repz
adc
into
imul
and
fistpll
scas
lret
push
fnstenv
xchg
adc
and
fs
push
inc
lods
fsubrs
daa
mov
and
shrb
fisubs
test
test
mov
jmp
pop
lock
loope
xor
pop
repz
lret
mov
lds
loop
movsl
inc
fwait
mov
dec
stos
cmc
enter
cmpsl
sbb
cmp
lret
sub
dec
push
jne
push
pop
pop
xor
nop
xchg
pop
mov
and
in
bound
mov
or
xchg
sbb
out
repz
jo
lods
mov
mov
testb
ret
pop
mov
jg
stos
fidivrs
mov
lcall
ds
loope
adc
cli
repnz
fcmovu
cltd
mov
mov
sbb
dec
icebp
mov
les
movsb
and
in
stos
int
inc
pop
imul
fldcw
cld
std
in
les
and
jl
mov
sbb
xor
inc
mov
cs
add
inc
out
adc
pop
aad
mov
xor
bswap
or
sbb
push
push
mov
mov
push
inc
pop
pushf
inc
gs
out
movsb
xchg
pop
inc
xor
rcrl
popl
out
iret
data16
ret
or
and
test
fbstp
lds
sub
pop
negl
jb
sub
mov
push
lea
in
and
fsts
sti
mov
aad
cmpsl
jmp
cmp
jle
sub
mov
les
aam
hlt
outsl
mov
add
dec
adc
and
xrelease
jno
mov
jmp
dec
xor
test
adc
inc
orl
mov
mov
int
mov
leave
push
push
cli
adc
std
enter
pop
test
adc
pop
pushf
and
xchg
cli
sub
fs
push
insl
jge
jmp
inc
cmpb
push
push
cmpsl
mov
sar
adc
repnz
pop
test
gs
lock
adc
cld
sbb
fbld
push
hlt
xor
aas
adc
sahf
leave
xchg
mov
xor
ret
mov
fdivrl
xor
jnp
pop
and
add
cmpsb
shlb
jge
xchg
loope
mov
lock
bound
mov
lods
rcr
jle
pop
cmpsl
es
outsl
jae
movsl
sarb
dec
mov
mov
sub
ds
test
add
push
es
push
shl
js
pop
mov
xlat
and
out
ds
outsl
movsl
inc
aaa
pop
popa
adc
movsl
mov
push
adc
xchg
out
inc
jge
sub
pop
inc
pop
mov
sbb
mov
and
push
lds
mov
pop
mov
lea
dec
adc
inc
mov
dec
popa
cld
lret
adc
add
scas
fisubrs
movsl
push
push
sub
sub
mov
pop
insb
cmp
ret
dec
enter
sbb
ret
dec
call
fs
arpl
mov
cmc
dec
push
xor
fs
outsl
cmp
scas
cmp
outsl
std
mov
loopne
fdivs
sbb
pop
xchg
add
xor
es
call
ljmp
push
mov
push
or
jp
ror
pop
shrb
mov
xchg
ljmp
shrl
jns
out
and
mov
mov
lea
lar
mov
mov
add
popa
aam
ss
mov
repnz
add
push
lahf
imul
aas
xor
ja
push
sub
dec
add
pop
xchg
xchg
lcall
xor
add
xchg
or
nopl
xor
inc
push
inc
dec
or
pop
pop
lret
aad
adc
add
stos
iret
xlat
add
mov
xor
xchg
sub
in
push
cmp
fs
cld
call
add
push
lods
sarb
in
inc
xchg
cmc
xor
dec
in
into
ss
jp
stos
scas
roll
int3
inc
xor
sbb
jmp
aam
inc
xchg
mov
mov
mov
mov
dec
mov
cs
xor
jp
out
ror
sbb
sub
imul
push
sbb
push
mov
scas
xor
out
pop
hlt
jge
fcmovbe
and
rcl
cmpsl
sub
inc
mov
lcall
into
into
pop
sub
testb
mov
xlat
or
mov
mov
add
leave
ret
int3
add
popf
dec
adc
in
xchg
pop
add
ja
cmc
insl
test
scas
mov
dec
xor
jnp
ja
add
dec
xor
add
loop
mov
int
and
xlat
cwtl
jnp
mov
scas
jmp
push
fmuls
aaa
cwtl
insb
jle
movsb
xchg
push
lds
rol
daa
je
in
dec
fistpl
jbe
or
mov
mov
inc
mov
cmp
pop
inc
loop
xor
or
std
cmp
or
sbb
movl
in
aam
outsl
test
pop
jb
jnp
sub
push
mov
aaa
in
add
rclb
stos
pop
mov
mov
pop
sbb
pop
iret
mov
in
sbb
insl
or
push
pop
adcb
sbb
sti
stc
xchg
pop
clc
inc
dec
out
cld
jne
lret
dec
cmp
ret
inc
and
fwait
outsb
divl
fsubr
adc
aam
pop
add
gs
and
xchg
out
repnz
icebp
mov
mov
xchg
ja
dec
popa
shrb
pop
xchg
pusha
lods
xlat
rol
inc
fistps
dec
das
lds
mov
movsl
push
sub
jecxz
pop
loope
jae
sbb
inc
stc
xchg
pusha
cmp
mov
xchg
pop
mov
jle
test
scas
add
pop
mov
addb
adc
mov
mov
sub
insb
mov
push
mov
in
inc
shlb
xor
lock
xor
add
mov
rolb
sahf
sbb
mov
mov
push
dec
lret
sbb
cltd
xlat
sahf
sub
dec
mov
and
xchg
xchg
arpl
mov
dec
cwtl
and
pop
aas
lock
cmp
push
jg
aaa
jge
in
cltd
insb
xchg
jl
pop
ret
xchg
xchg
xchg
xchg
jb
lods
mov
loopne
iret
orl
int
xor
cld
mov
mov
cwtl
mov
idivl
jle
xchg
sbb
add
sahf
mov
xchg
push
jle
test
fs
mov
in
mov
popf
pop
inc
in
mov
cmp
movsb
out
cmp
out
xchg
dec
out
shrl
test
push
std
js
mov
jae
inc
ja
test
mov
in
cltd
pop
cltd
dec
dec
dec
stos
jge
jmp
cwtl
xor
xchg
cmp
hlt
pop
scas
pop
mov
push
setb
mov
xor
sarl
push
cltd
xor
mov
or
sub
sub
mov
adc
sub
testb
xchg
push
dec
test
mov
rol
and
dec
mov
nop
dec
push
dec
mov
fmulp
mov
out
inc
sub
out
pusha
sub
stos
repz
and
pop
fnstcw
xchg
int
pop
sub
ds
data16
adc
outsb
jge
rcl
pop
lahf
push
cmp
pop
cmp
fcomps
and
and
pop
stos
aaa
inc
lcall
sbb
mov
pop
xchg
sarb
lret
shlb
xor
inc
loopne
pop
push
lds
fldt
mov
mov
cmp
jns
pop
fcomip
push
fldenv
insb
stos
inc
sbb
mov
pop
cmp
std
inc
insb
push
xlat
adc
sub
inc
clc
insl
mov
xchg
mov
mov
ljmp
sbb
fisubrl
adc
pop
repnz
fcoms
jecxz
hlt
mov
jmp
cmp
xchg
push
mov
arpl
mov
enter
lea
adc
std
dec
mov
and
cmp
xor
push
call
jnp
icebp
mov
jmp
shrl
mov
cmp
fidivrl
aas
sub
mov
mov
dec
jne
shll
aam
outsb
xchg
aam
lcall
pushf
int
pop
add
leave
nop
rclb
or
call
cmp
stc
push
clc
test
xchg
add
cmp
adc
aaa
mov
mov
dec
ficoms
adc
test
mov
dec
insb
push
sub
jno
or
js
subb
jmp
inc
adc
sub
dec
add
lock
cmp
cmp
pop
xor
pop
xor
add
stos
enter
mov
cltd
sbb
je
jle
sti
adcl
and
in
xchg
and
aas
mov
and
fwait
cmpsb
jb
push
mov
add
popf
sub
iret
out
adc
xchg
xor
popa
pop
push
or
loopne
ljmp
xlat
sbb
mov
fs
out
daa
fwait
fwait
dec
mov
push
mov
repnz
les
and
pop
push
inc
outsl
dec
xchg
nop
sbb
mov
adc
dec
in
dec
xchg
inc
cwtl
aam
decb
pop
sbb
sbb
or
ret
std
call
mov
repnz
rcrl
out
mov
mov
pop
jae
movsb
cwtl
test
insl
add
fisttps
in
shll
out
pop
mov
push
arpl
add
fisttpl
and
dec
xor
idivb
inc
mov
addr16
cmpsb
sti
out
sub
daa
inc
mov
lods
stc
jmp
mov
xor
sbb
mov
xchg
lea
cmp
mov
xchg
add
outsl
xchg
clc
cmpsb
jl
xor
sub
push
jne
ljmp
imul
imul
push
jle
dec
je
arpl
jl
xchg
mov
mov
add
dec
xor
iret
hlt
mov
xchg
out
hlt
scas
pop
fcomps
mov
pop
fistpl
lods
cltd
lahf
icebp
fdivrs
fwait
xor
jmp
mov
push
ljmp
push
nop
test
sbb
mov
push
inc
push
cmp
push
sub
pop
std
jp
mov
test
push
rol
clc
je
push
sub
out
or
enter
xor
xchg
xchg
xlat
fsubrp
xchg
cmp
cltd
jg
pop
insl
pop
pop
push
imul
sub
cs
outsb
or
inc
jg
add
ret
iret
jno
daa
test
add
iret
int3
and
sbbb
je
add
test
pop
lds
or
int3
loope
out
daa
mov
xlat
lahf
in
push
mov
int
jo
rcrl
outsb
xor
mov
aam
mov
adc
std
out
aas
test
gs
imul
cmp
inc
bound
sub
movsl
rcll
subb
dec
sahf
std
and
movl
pop
scas
push
jbe
adc
je
fwait
enter
adc
push
cli
orb
mov
stos
out
test
andl
ljmp
subb
sub
add
or
test
and
adc
ds
mov
loopne
pop
into
sbbb
cld
sti
jnp
jge
xchg
fistps
lahf
ficoms
cmp
add
roll
lds
stos
mov
jge
mov
out
mov
sbb
jmp
push
enter
icebp
in
push
je
push
sbb
cmp
mov
mov
fnstsw
loope
sbb
pop
in
scas
mov
repnz
mov
jns
shrl
lock
add
inc
pop
fwait
cmpsb
cmc
int3
adc
and
in
push
ja
je
pop
add
sub
in
lcall
arpl
xor
imul
cs
add
mov
and
sbb
adc
lods
push
and
sub
fstpl
jl
dec
cmp
pop
push
imul
lcall
adc
aas
adc
pop
push
cmpsl
mov
sub
xor
push
fdivs
pop
push
xor
or
or
lods
bound
test
sti
loop
int
dec
es
scas
nop
or
rolb
aas
cld
addb
push
popf
test
push
mov
dec
arpl
or
dec
xchg
push
cmp
dec
rorb
dec
cwtl
jge
shl
xor
xor
push
imul
test
popw
pop
out
jmp
int
mov
pop
test
stos
mov
mov
push
aad
loopne
psubb
inc
xchg
sbb
dec
sbb
ss
add
lea
sbb
loop
stos
ds
fidivl
mov
mov
dec
xbegin
mov
add
mov
push
mov
jns
shll
scas
aaa
out
outsl
pop
jmp
fwait
std
hlt
push
xchg
fsubs
xchg
sbb
test
push
xor
outsb
stos
sbb
xor
push
adc
call
push
adc
mov
daa
push
add
shlb
imul
mov
stos
sar
fisubl
lods
xchg
arpl
sbb
inc
lea
sbb
mov
cmpsb
pop
xor
dec
pusha
shrb
and
cmpsb
push
sbb
mov
lea
lea
pop
in
mov
jecxz
out
cld
jp
repz
bswap
pop
sbb
push
xor
pusha
sub
pop
pop
pop
and
inc
jne
pop
cltd
or
and
sbb
movsl
pop
sbb
inc
mov
arpl
jbe
fnstsw
fcoml
addr16
dec
movsb
int3
xchg
in
xor
scas
clc
mov
dec
in
add
xor
or
mov
cwtl
mov
scas
xchg
add
incb
sahf
out
mov
ret
cmp
ljmp
and
cmp
iret
sub
cmpsl
mov
mov
hlt
movsl
hlt
faddl
jle
xor
fnstsw
aam
mov
mov
push
aam
mov
jnp
mov
movsl
push
shr
mov
sbb
fisubrl
inc
mov
pop
mov
out
mov
lret
push
and
out
dec
pop
out
inc
insl
and
mov
jmp
inc
aas
dec
push
add
inc
rorl
adc
arpl
test
rolb
pop
pop
popa
or
xor
add
hlt
mov
or
mov
jne
imul
inc
sbb
or
int
fiaddl
jle
imul
or
sahf
push
rorb
es
sbb
addb
or
cmp
fwait
xchg
arpl
dec
or
das
shll
push
jbe
addr16
dec
arpl
cwtl
bound
mov
dec
mov
push
mov
and
push
jg
inc
fisttps
push
test
aaa
mov
xor
sbb
cmp
push
aas
icebp
mov
sbb
hlt
ljmp
adc
and
push
fiadds
inc
ds
jb
jns
popa
popf
lock
or
mov
call
insb
pop
xchg
fistl
dec
out
xchg
ret
pop
dec
imul
aam
aad
sbb
rcrb
fisubrl
lcall
leave
cmp
jne
mov
adc
int3
dec
xchg
out
iret
in
fbld
sub
cmp
iret
movsb
mov
adc
ss
addr16
subl
xorl
aas
out
inc
in
xor
and
movsl
sub
mov
es
mov
xor
jg
push
jno
mov
aas
jg
ret
or
xchg
es
rcrb
cmpsl
sbb
and
jbe
testl
mov
mov
arpl
sar
stos
lret
xchg
sub
mov
xor
push
push
fmull
jb
adc
sahf
into
int
lds
notb
dec
jge
inc
ss
fcompl
xor
xor
sub
aas
xor
mov
mov
xchg
cwtl
or
dec
gs
dec
gs
jb
push
popf
xlat
add
jno
insb
in
add
pop
push
mov
test
pushf
add
add
mov
sbb
inc
pop
mov
cli
ret
lret
jnp
sbbb
pop
adc
jl
mov
leave
lds
test
sbb
jae
inc
in
rorl
loop
xlat
or
js
pop
jns
add
bound
mov
mov
xchg
mov
mov
jle
cmp
scas
inc
aam
lods
mov
and
add
out
xchg
js
ds
and
sbb
mov
cmp
test
cmp
shlb
push
push
cltd
sub
inc
popa
decb
fimull
bound
movl
pop
sbb
inc
sbb
pop
jl
push
or
jnp
shr
xor
cmp
jns
or
sbb
testl
xor
jmp
push
test
pop
mov
popa
idiv
into
jl
mov
pop
icebp
ljmp
fwait
inc
mov
lcall
test
mov
mov
fdecstp
xor
inc
dec
pop
loopne
mov
hlt
sub
je
mov
std
sbb
mov
cmpsb
mov
mov
lahf
pop
adcl
ret
arpl
or
mov
or
xchg
pop
test
arpl
cmp
fucomip
call
fwait
inc
cmp
sti
inc
bound
xchg
icebp
pop
nop
push
push
or
add
scas
jb
adc
insl
pop
andb
sbb
sbb
push
xor
mov
test
push
test
sbb
or
aas
arpl
dec
test
mov
jge
es
xchg
xlat
xlat
leave
xlat
jo
sub
sbb
xor
in
jle
mov
pop
out
xchg
jmp
into
jo
mov
xchg
ljmp
movsb
add
out
scas
jnp
inc
sbb
and
repnz
fmuls
xchg
cmpb
ficomps
jae
out
push
insb
movsl
out
aas
leave
add
cmp
or
xchg
or
cmp
jns
loope
lret
jl
jl
add
pop
test
mov
xorb
repnz
popa
lds
adc
shll
fcoms
ss
je
push
fbstp
out
cmp
cmp
je
lret
mov
loop
fbstp
dec
mov
mov
mov
push
in
push
insb
push
ja
shrd
ret
hlt
pop
push
insb
mov
loope
or
stos
addr16
pop
sbb
imul
xor
add
sbb
cld
inc
xor
mov
and
mov
and
rorb
add
test
and
ret
dec
mov
mov
mov
add
aaa
hlt
xor
and
cmp
not
dec
jnp
fincstp
nop
sub
out
ret
jne
movsb
pusha
ret
dec
insl
and
outsl
dec
imul
cmp
xchg
cmc
mov
push
push
push
imul
test
ret
sti
mov
not
jnp
sbb
push
aas
push
imul
out
sahf
sbb
inc
push
xchg
push
add
jo
jle
insb
mov
inc
inc
addr16
sti
push
jae
dec
scas
mov
jge
xlat
cmpsb
jge
inc
pop
or
xchg
push
xor
test
ret
fstl
fimull
xchg
imul
push
popl
icebp
dec
shll
roll
dec
das
sub
frstor
sarb
xor
fidivrs
je
sub
out
repz
stc
sub
jg
ret
pop
inc
dec
sub
pop
out
jae
lods
mov
test
mov
leave
sarl
sbb
sub
mov
daa
idivl
fidivrl
imul
cld
fildl
push
push
test
cltd
mov
push
aas
lea
sub
cmp
fidivrl
and
fstl
leave
out
stos
push
stos
roll
dec
jle
jp
les
jb
sub
mov
movsb
pop
jno
sbbb
jbe
push
pop
mov
fcoms
push
adc
rcll
jg
push
sub
cld
add
fdivrl
test
filds
mov
mov
test
test
test
xor
sub
mov
scas
loopne
push
ds
frndint
lods
cmp
jle
inc
jb
fwait
jb
ljmp
adc
ret
sub
es
jecxz
gs
pop
inc
pminsw
testl
xchg
and
dec
xchg
adc
scas
mov
sub
mov
fimuls
adcb
ret
enter
pop
daa
sub
push
xchg
arpl
lcall
add
mov
add
or
xor
cmp
jl
test
sub
push
ljmp
fs
and
mov
in
push
sbb
sbb
push
pushw
scas
dec
dec
add
orb
xor
add
sbb
xor
shlb
inc
jge
dec
sbb
jbe
hlt
lea
mov
cmp
data16
inc
lock
add
lea
scas
lock
bound
cmpb
ret
add
arpl
insl
sub
dec
xchg
call
int
mov
mov
fcmovnb
jle
daa
mov
es
push
orb
mov
jno
lahf
adc
imul
cmp
xor
outsb
and
loop
lea
and
xor
or
inc
sbbl
stc
jae
outsb
shll
imul
rorb
pusha
or
cs
insw
into
mov
add
cld
dec
repz
add
jl
push
outsl
dec
sahf
push
xor
sub
lods
inc
rorb
shrb
push
loopne
adc
ret
lahf
imul
xlat
js
out
push
lcall
mov
sbb
and
sbb
aam
mov
sub
mov
cmp
and
inc
jbe
mov
fwait
lods
jnp
fwait
bound
xchg
adc
andb
stos
cmp
inc
jno
xchg
lds
js
clc
data16
inc
add
jle
arpl
add
and
mov
mov
pusha
inc
bnd
push
mov
mov
jo
ret
push
push
ret
and
dec
stos
inc
inc
loopne
sub
into
cmp
mov
lods
int
mov
and
imul
fsubs
les
mov
add
jle
inc
ljmp
lret
mov
je
mov
outsb
adc
add
aad
and
outsb
pop
imul
test
mov
ds
movsb
cmp
daa
aas
push
jnp
sbb
data16
inc
push
pop
popa
dec
adc
mov
sbb
pop
cmp
mov
push
and
cmpsw
jle,pn
and
aaa
dec
call
jecxz
nop
sub
lea
xor
mov
lret
clc
pop
cmpsl
adc
fwait
xchg
scas
fmull
mov
rcll
xchg
lock
aad
scas
xchg
cmp
test
setle
repnz
addr16
imul
lret
stc
and
movsb
mov
aad
xchg
cli
mov
xor
jb
mov
nop
cmp
insb
xor
test
jb
cmpsl
and
add
movsb
mov
pop
icebp
xchg
mov
push
int
pop
mov
add
out
insb
sub
push
in
lret
jg
insl
cltd
andl
cmp
cmp
inc
xchg
outsb
filds
xchg
scas
lahf
and
push
dec
ljmp
jmp
add
add
jg
int3
es
sbb
enter
jge
inc
rorb
push
test
mov
mov
cmpsl
sbb
pop
lret
add
cld
adc
adc
sub
pop
and
fsubrs
shll
pop
lea
adcl
push
xchg
adc
pushw
xchg
mov
inc
pop
stos
mov
pop
or
out
clc
shl
mov
mov
mov
lcall
push
add
hlt
dec
shll
imul
jbe
adc
int3
mov
in
fisttps
push
in
mov
jp
pop
adcl
leave
pop
and
xorl
mov
mov
jnp
pop
mov
addr16
and
push
sub
mov
aas
pushf
aad
mov
ds
xor
sbb
xlat
idivb
into
xor
lret
inc
lret
je
fdiv
sub
mov
ljmp
fsubl
in
or
jg
out
inc
xchg
jo
and
push
xchg
jge
pop
mov
mov
inc
pop
push
cmovl
cmp
addr16
mov
je
sub
fisttpl
pop
ja
dec
bound
mov
adc
mov
idivb
enter
mov
mov
xor
loop
out
movsb
sbb
and
mov
sub
js
addl
pushf
das
push
pop
out
mov
push
ss
or
dec
in
sbb
mov
sub
adc
xor
repz
ret
cwtl
adc
push
imul
ret
sbbl
shrb
in
dec
add
pop
insl
lods
cltd
pushf
mov
js
mov
lds
call
push
mov
pop
pushf
je
rcrl
outsl
icebp
iret
sub
fidivrl
fdiv
jbe
pop
imul
cmpb
aad
in
cmpsb
addr16
imul
or
pop
aas
mov
mov
jmp
push
sahf
fs
test
out
sbb
fldenv
jae
clc
adc
sbb
push
orb
mov
nop
addr16
movb
ja
orl
jo
pop
aam
sbb
lds
hlt
loop
imul
pop
sarl
out
inc
or
ja
fisubl
ds
sbb
stc
sub
loope
mov
in
aas
cmp
in
xchg
into
xchg
sarl
das
inc
cltd
mov
and
sti
inc
add
dec
pop
xor
cmp
stos
leave
test
and
add
repnz
xor
or
mov
xor
and
test
jp
dec
in
and
xchg
dec
or
int
fstpl
cmp
jge
mov
cs
jecxz
mov
and
into
sub
addr16
or
cltd
mulb
fsubs
sahf
pop
cwtl
mov
fildl
dec
in
pop
sbb
jb
cltd
xchg
mov
int
mov
jg
sub
add
pop
bound
adc
stc
ret
xchg
ficompl
push
test
into
dec
push
add
dec
js
push
inc
arpl
xor
call
sbb
fsubrs
mov
pop
nop
xor
das
loopne
cmp
rcl
mov
cmp
pop
push
dec
mov
jne
in
mov
shr
xchg
sbb
add
popf
fninit
xorb
cmp
lret
xchg
lea
sub
insl
mov
mov
test
arpl
and
push
sub
push
jg
ljmp
outsl
xor
test
xor
xchg
jns
sbb
cwtl
mov
ret
or
or
dec
mov
pop
inc
mov
loopne
mov
xor
cmp
mov
xor
scas
mov
xor
pop
push
test
inc
dec
push
fisubrs
inc
ja
xor
cmpsl
leave
ffreep
mov
push
mov
sub
bound
shl
rcrb
cmpl
pop
stos
stc
sbb
mov
or
out
dec
mov
cmp
test
pusha
push
mov
and
add
pop
jg
dec
daa
jbe
dec
sub
or
sahf
cmpsl
ljmp
inc
movl
jno
lods
jo
nop
pusha
xchg
add
test
jne
inc
out
cld
ds
push
stos
stc
je
cmpl
sbb
jns
loope
or
lret
cli
sarl
not
push
sti
mov
pop
scas
xorl
rcrl
out
or
and
fucomp
popf
pop
push
fmull
cmp
inc
mov
dec
test
push
mov
adc
mov
sub
arpl
in
cmc
mov
xorb
adc
jne
sub
jecxz
sbb
out
mov
push
mov
and
out
test
xchg
add
lods
lock
xchg
outsl
pop
jns
xor
xchg
iret
cld
cltd
iret
divb
push
mov
fsubrp
out
jae
dec
pop
mov
dec
push
std
sub
hlt
shll
and
shrl
hlt
mov
rolb
sahf
push
arpl
addr16
lret
adc
ret
mov
pop
mov
or
ss
mov
test
shl
int3
mov
imul
xchg
cmpsb
jns
iret
scas
int
pushf
in
sub
push
out
xchg
and
fwait
andl
mov
jno
scas
loope
int
leave
insb
mov
push
clc
mov
movsl
sbb
add
pop
push
enter
sbb
xor
dec
dec
jge
or
pop
push
mov
enter
fstl
pop
filds
mov
xor
sbb
jo
divl
sub
in
int
cmp
out
sbb
push
dec
mov
mov
jecxz
test
scas
call
xchg
jnp
cmp
daa
rcr
dec
rcrl
fwait
loope
outsl
es
stos
jae
imul
jecxz
push
stos
and
nop
ja
sub
sub
fsub
mov
jno
add
loope
lahf
pushf
mov
dec
std
imul
movb
fdivrl
cmpsb
xchg
mov
lahf
mov
jp
fdivrs
push
sbbl
out
movb
adc
cmp
cmp
sbb
test
pushf
xchg
sahf
int3
int3
or
sbb
cmp
add
jecxz
dec
clc
mov
fisubs
notb
and
jg
imul
pop
add
mov
mov
hlt
push
or
jb
faddl
mov
inc
clc
dec
push
jle
lds
repz
inc
test
sub
aas
movsl
xlat
addr16
mov
popa
addb
mov
jg
es
and
addr16
xchg
push
lcall
std
hlt
cwtl
lock
sub
and
mov
mov
out
outsl
dec
lods
stos
mov
jp
pushw
outsl
cmp
loopne
jo
aas
repz
scas
out
cmp
and
mov
sub
es
lods
push
pop
icebp
pop
movsl
jp
cs
sub
add
jmp
int3
sbb
mov
and
fcmovbe
adc
dec
dec
push
or
lret
sahf
insb
cld
push
and
orb
xchg
adc
fcomi
mov
pop
dec
mov
stc
std
inc
xchg
mov
pop
jecxz
xchg
fcomps
fimull
movsl
fwait
sarb
sbb
les
iret
and
and
test
test
icebp
std
mov
inc
scas
push
jle
sti
jecxz
sub
add
bound
shll
ror
inc
stos
out
mov
sbb
xchg
add
add
cmp
loop
iret
or
mov
daa
dec
repnz
cmc
push
int3
lods
inc
inc
push
dec
mov
jle
jmp
push
xchg
pop
or
aam
popa
add
sbb
push
or
ljmp
loop
aaa
adc
in
push
xchg
inc
sbb
adc
jmp
movsl
lahf
ret
xchg
data16
pusha
xchg
xchg
dec
sub
pop
pop
dec
popa
jecxz
mov
or
xchg
jmp
xor
and
adc
adc
and
aaa
movsl
dec
push
call
jne
int3
out
inc
xlat
cmp
sbb
sbb
mov
lea
pop
mov
push
orb
cs
sub
pushf
mov
les
mov
sub
test
mov
xor
sahf
lret
adcl
and
add
fmuls
jl
dec
pop
or
push
scas
gs
and
lods
in
sbb
sub
mov
push
cmp
and
push
fs
jecxz
mov
xlat
leave
sti
popa
push
fstpl
popa
pop
in
pusha
nop
xchg
xor
push
push
add
pop
pop
das
je
fcomp
or
fcoml
adc
xchg
jl
fstl
push
lcall
inc
ficomps
adc
push
add
push
ss
xchg
or
inc
das
ljmp
cld
sbb
inc
loope
jmp
shll
loopne
iret
jg
sarb
ja
cmc
or
jecxz
or
add
xor
push
lcall
mov
mov
cmpsl
aaa
adc
stos
lahf
clc
repnz
movsb
fsub
lahf
inc
jg
xchg
pop
push
or
shlb
outsb
jp
xchg
insl
xlat
andb
inc
pop
add
pop
jle
push
push
mov
enter
sub
arpl
and
pop
lcall
dec
xchg
ret
xor
dec
mov
jae
nop
cmp
sub
cmpsl
lock
and
mov
mov
pusha
mov
jo
rclb
xchg
xor
out
cmp
or
push
cld
xor
mov
cltd
mov
xchg
in
scas
push
scas
es
sbb
or
cmp
popa
int3
jge
out
add
lcall
jp
or
pushf
cmp
xchg
ret
cmpsb
icebp
andl
fildl
dec
pop
mov
sahf
rolb
mov
mov
push
loop
lret
cmp
jb
lcall
inc
fsubr
pop
jg
jo
or
xchg
aad
or
pop
add
inc
cli
shll
in
and
or
dec
xchg
jecxz
lods
sub
flds
rcl
repz
ljmp
xor
nop
es
mov
cs
les
jle
pusha
test
shrl
or
pop
sbbb
mov
out
mov
test
jae
mov
sti
mov
jb
jno
xchg
xchg
xchg
shlb
xor
mov
mov
outsb
lock
cmp
pop
mov
dec
adc
scas
test
mov
loope
add
inc
dec
lods
mov
movsl
push
push
mov
or
add
inc
ficoml
mov
repnz
xchg
add
ficoml
and
mov
inc
jnp
cltd
pop
cmp
pop
pop
into
clc
aaa
cmc
movlps
mov
aas
lcall
xor
outsb
cmp
inc
mov
orl
xor
mov
or
dec
mov
cmpsb
imul
rclb
mov
lea
pop
std
cmp
pop
mov
cmpsb
fwait
add
sbb
mov
and
mov
cwtl
rolb
stc
mov
aaa
sti
pop
jno
push
sub
cmovle
insb
int3
dec
shrb
shll
xchg
xchg
lea
adc
adc
sar
jp
push
mov
lea
mov
xlat
and
xlat
inc
inc
popf
data16
sbb
aad
out
inc
mov
adc
add
mov
je
mov
stos
or
dec
add
lods
adc
or
adc
inc
fstp
test
nop
incb
mov
adc
push
aam
jbe
mov
mov
lds
imulb
push
pop
les
mov
jmp
jae
jne
jne
lret
cmp
aam
icebp
popa
cmp
insb
mov
jp
adc
mov
lods
fmuls
jbe
inc
ficoms
pop
ljmp
mov
mov
mov
push
push
hlt
jmp
mov
pusha
mov
xchg
cs
mov
dec
mov
insl
std
mov
out
lret
pop
mov
mov
cld
pop
ret
mov
sub
das
aaa
or
je
push
das
into
aaa
adc
mov
pusha
xchg
push
clc
or
xchg
inc
pop
push
jo
popl
xchg
fcoml
jb
stos
aaa
outsb
sahf
shufps
pop
xchg
xor
adc
push
xchg
mov
xchg
subb
mov
lret
inc
cmovno
jae
pushf
ret
or
mov
adc
lret
jl
xor
idivl
shrb
mov
xchg
xchg
dec
cli
flds
inc
ja
or
pop
xchg
jno
cmpsb
movsl
dec
pusha
inc
fs
sub
movsb
repz
pop
jle
fcmovnu
and
jl
outsl
and
test
cmpsl
orl
scas
xchg
adc
outsl
jb
mov
out
jb
cmp
ja
fwait
adcb
sbb
cld
mov
and
cltd
hlt
adc
push
adc
mov
cmp
icebp
sub
repnz
cmpsb
test
add
les
sbb
clc
cmpb
xor
aas
mov
and
and
mov
pop
call
fimull
adc
dec
pop
mov
xchg
xlat
movsl
adc
inc
dec
je
scas
xor
outsb
adc
inc
sbb
pop
or
clc
and
cwtl
mov
aas
push
ret
and
outsb
and
cmp
pop
aas
xor
or
xor
or
iret
jle
sbb
or
cltd
dec
mov
jle
mov
shrb
xlat
ficoml
inc
cli
mov
lahf
or
mov
pop
push
cmpl
popf
cld
and
mov
fnstsw
insl
xchg
inc
pop
jg
dec
sub
notb
mov
lock
lret
xchg
xor
cmp
inc
enter
scas
push
leave
cmp
mov
mov
xchg
add
inc
stc
fwait
cmp
call
push
insb
mov
mov
xchg
clc
imul
cs
and
push
cld
sbb
arpl
outsl
sub
mov
popa
mov
aad
lahf
mov
pop
movsl
test
out
sub
jle
push
arpl
dec
mov
dec
aaa
inc
rorb
lea
dec
fs
insl
or
fnsave
movsb
icebp
shl
insl
js
lods
std
cmp
repz
or
rcrl
sbb
andb
lahf
iret
imul
inc
cmc
shll
pushf
ret
iret
data16
and
cld
mov
ds
psrld
inc
fstpt
iret
push
inc
out
fsubrs
push
testb
cld
shll
or
daa
scas
sti
mov
mov
xchg
adc
fadds
xor
sar
loop
out
cmpl
cmp
iret
adc
mov
mulb
dec
mulps
xlat
enter
nop
daa
bound
push
lret
rcll
xchg
xorb
and
inc
sbb
aam
leave
pop
dec
xchg
ret
sub
fwait
in
js
mov
cmp
mov
jb
fsubs
mov
fimull
or
outsl
out
ljmp
push
lret
ret
test
hlt
or
imul
jle
adc
lahf
push
mov
or
call
imul
or
push
sub
lea
push
imul
stos
lods
lods
adc
out
lods
pop
jne
test
bound
mov
jnp
ljmp
ds
jmp
in
iret
sahf
dec
and
repnz
outsb
fmuls
xchg
dec
mov
cld
or
jno
aad
mov
mov
cmp
xor
mov
rcl
sub
dec
push
or
scas
lods
lods
mov
addr16
addr16
sbbb
fldcw
sub
jno
xlat
insl
shlb
mov
popa
sbb
jae
or
in
mov
lret
jmp
fsubrl
inc
sbbl
shrl
inc
xchg
frstor
cmp
std
jne
aam
sbbb
movsb
std
jns
pop
push
stc
pop
cmc
in
jns
xchg
out
stos
xor
push
enter
push
gs
data16
adc
jo
xor
fsubl
or
in
dec
movsb
adcl
mov
xor
movsl
leave
cmp
ret
add
inc
or
mov
pop
add
lcall
sub
sub
adc
push
enter
daa
fdivr
jecxz
xchg
stos
out
dec
push
xor
and
int
mov
inc
in
rorl
xlat
and
inc
inc
mov
mov
clc
sub
cld
ljmp
loope
xchg
pop
pop
in
add
and
mov
push
mov
push
add
and
lahf
jmp
xchg
pusha
sbb
and
jb
add
jbe
ss
leave
mov
sbb
dec
cld
or
push
xchg
incb
inc
mov
arpl
jnp
aaa
fidivl
std
mov
xchg
mov
test
iret
mov
mov
subb
inc
xchg
icebp
add
gs
mov
mov
ja
xor
push
push
ss
mov
enter
mov
pop
sarb
rcrb
adc
jae
cmc
push
stos
mov
sarb
jbe
push
pop
fnsave
int
jbe
sbb
pop
xchg
in
arpl
das
popf
adc
dec
jg,pn
sbb
inc
cmp
xchg
icebp
pop
lret
popa
int
mov
std
pop
or
daa
jecxz
xchg
jg
popa
jle
cwtl
mov
cli
sahf
test
push
sub
mov
dec
and
repz
loope
cwtl
aam
mov
pop
lods
neg
mov
and
lods
xchg
testl
fcomps
dec
into
jb
push
and
mov
pop
xor
add
inc
cmp
adc
mov
fldt
jp
aas
inc
stos
inc
imul
adc
add
xchg
fnsave
xchg
aas
jmp
inc
out
lret
push
pushf
dec
mov
arpl
out
cltd
mov
stos
movsl
sahf
mov
xor
cmp
cmp
test
sub
jmp
aad
add
clc
push
cmc
xchg
mov
adc
loopne
pop
push
xchg
adc
loope
xorb
xchg
push
jnp
xchg
out
ret
push
repnz
push
jne
sbb
lds
lret
xchg
addb
lret
ror
ds
shrl
mov
add
dec
sub
push
sbb
cli
int
movsl
movsl
je
jge
mov
xchg
cmp
pop
adc
fcmovnu
jo
andb
xchg
xchg
jmp
pusha
push
xchg
punpcklbw
hlt
data16
pop
inc
push
add
rol
pop
shlb
dec
out
and
std
or
jmp
mov
mov
in
in
and
push
sub
pop
mov
cmp
test
shl
dec
push
sub
cmp
es
mov
stos
push
scas
push
mov
ret
mov
xor
cmpsb
mov
in
xor
cmp
jo
test
push
sub
jbe
adc
mov
adc
mov
out
or
imul
mov
mov
pop
pop
and
adc
inc
lret
loopne
pop
fsubs
jns
push
aaa
ljmp
ja
in
push
cmp
or
mov
pop
sbb
push
in
mov
in
xlat
mov
mov
jl
mov
dec
lods
add
es
or
xor
jl
mov
dec
push
sahf
pop
dec
push
cli
push
push
and
out
add
xchg
and
cwtl
nop
imul
mov
push
pop
sahf
push
sbb
cltd
outsb
cli
ja
xchg
xor
pop
xor
xchg
add
sbb
push
movsl
ljmp
inc
sahf
lret
movsb
xor
imul
pop
movsl
sbb
cmp
add
loop
and
and
sbb
push
inc
mov
rorb
insl
cs
into
mov
pop
test
out
mov
mov
sbb
add
ret
repz
xor
jnp
pop
adcl
in
mov
hlt
aam
imul
push
xorb
adc
add
add
inc
cmpsl
out
test
jle
pop
out
jne
dec
pop
notl
adc
pop
sub
cltd
sbb
ret
lds
mov
out
mov
in
xor
jno
push
mov
fucom
sub
adc
inc
das
daa
cli
push
jmp
pop
stos
outsb
mov
dec
mov
sahf
popf
mov
mov
inc
xchg
jnp
cmp
out
adc
dec
adc
pop
push
mov
cmpsb
addr16
sti
out
dec
int3
jno
xchg
insl
lods
push
jbe
push
sbb
cs
add
or
mov
mov
add
adc
xchg
enter
popf
mov
mov
xchg
xlat
cmpl
add
inc
push
aaa
daa
mov
ret
movsl
adc
popf
dec
push
xor
mov
lret
dec
fldenv
ret
jae
mov
icebp
sbb
mov
stc
mov
cwtl
jae
loope
sar
enter
cmp
imul
push
leave
add
out
pop
int3
aas
rorl
repz
mov
scas
jne
icebp
lret
jge
cmp
pop
add
inc
ss
jge
arpl
movsl
jge
fstpl
aad
outsb
enter
xchg
popa
rclb
jns
push
pop
mov
int
mov
add
mov
jb
add
lea
das
sbbb
mov
xchg
sti
movsl
push
out
dec
lock
subl
xchg
mov
pop
sub
daa
mov
xchg
mov
and
popa
and
xlat
pop
sbbb
or
ss
int
jae
and
cli
sub
xchg
or
adc
or
lods
mov
cld
mov
clc
sub
inc
bound
mov
icebp
xor
outsb
stc
out
jecxz
cmp
ficompl
in
out
dec
jle
sub
cs
sbb
sbb
popa
addr16
gs
push
mov
shlb
mov
cltd
jmp
in
mov
mov
mov
fmuls
mov
and
cltd
mov
xchg
stc
icebp
jl
dec
dec
xor
xchg
daa
pop
aad
inc
jmp
inc
dec
lock
inc
pop
testl
imul
xchg
mov
xor
jg
repz
pop
pushf
loop
lcall
xchg
in
mov
push
mov
jl
pop
sbb
dec
out
push
fbld
xchg
out
xchg
and
or
ds
rorb
jno
shlb
jno
inc
inc
lcall
sub
and
sbb
push
jmp
scas
add
sub
cmpsb
mov
ja
cwtl
xchg
pop
mov
dec
into
roll
or
mov
fucomip
pop
jmp
mov
cmp
adcb
testl
lret
xlat
lods
cmc
cld
rcr
mov
pop
add
fcomi
arpl
ret
mov
loop
out
cwtl
add
shrb
fwait
in
jns
cld
jp
add
mov
inc
clc
stos
pop
adc
iret
lcall
inc
inc
mov
test
mov
fisubs
inc
xor
mov
mov
jno
mov
mov
aaa
out
adc
mov
test
push
lods
sub
xor
jge
sub
jle
ds
mov
popa
push
rcll
mov
pop
call
cmpsl
rcr
out
cmp
xor
mov
sarl
xchg
dec
or
mov
loop
or
lods
repnz
dec
push
ficoms
loopne
or
insb
test
rcrl
push
outsb
pop
cmc
in
xor
mov
aas
lcall
andl
cmpsb
cmc
subl
sbb
je
jae
inc
jle
popl
outsb
pushf
cs
jecxz
lods
cld
inc
leave
rclb
xchg
subb
mov
mov
adc
js
lcall
add
fldcw
stc
add
hlt
jp
jecxz
mov
mov
test
push
and
add
addr16
adc
and
ja
pop
arpl
popa
pop
add
mov
or
xchg
sbb
add
xlat
cmp
push
cmc
pop
xchg
push
in
inc
mov
clc
sbb
shll
pop
cmp
inc
pop
add
int
xchg
fstpl
push
push
int3
jge
jle
push
mov
or
pslld
inc
mov
dec
pop
mov
dec
pop
jmp
mov
sub
adc
imul
js
mov
sbb
sub
xor
gs
mov
jbe
es
xor
ss
adc
repz
mov
scas
in
sub
xor
add
and
mov
xchg
test
inc
xchg
aam
mov
xor
xor
fidivl
xor
mov
sahf
push
arpl
xorl
add
shll
fstp
in
sub
sub
test
sub
and
iret
das
adc
into
ret
mov
jo
pop
mov
lret
inc
leave
pop
inc
call
mov
add
adc
inc
notl
sti
iret
jmp
cmp
add
mov
sbb
mov
mov
aad
pop
shrb
lods
pop
push
mov
inc
into
loopne
sub
push
mov
cmp
mov
lcall
xor
out
hlt
stc
stos
mov
pop
push
sbb
push
lahf
sahf
mov
pop
jbe
or
out
inc
out
icebp
in
sub
outsl
jg
jl
pop
sub
xor
pusha
test
jb
mov
inc
lahf
mov
mov
lock
cmp
mov
xchg
jmp
add
int
ljmp
sub
ret
out
sbb
mov
shrb
push
xchg
lcall
fcmovnu
sub
pop
in
jmp
pop
jns
repnz
jl
jo
ficomps
call
or
sub
rcrb
cmp
mov
or
fcoml
jo
int3
gs
pop
dec
xor
add
outsl
hlt
bound
sbb
rcll
jbe
add
inc
adc
sbb
inc
add
outsl
repnz
adc
ret
xor
mov
js
leave
mov
inc
pop
and
inc
xor
dec
inc
out
test
xlat
aas
pop
or
pop
sti
pop
lahf
loope
push
insb
xor
fildl
adc
inc
pop
les
aam
je
xchg
inc
mov
pop
in
lock
stc
xchg
jne
adc
mov
and
mov
adc
scas
xchg
mov
lret
movsl
add
inc
or
in
cld
adc
inc
js
sub
leave
push
movsb
pop
fidivrl
mov
push
mov
dec
cmp
je
aaa
ret
imul
sbb
mov
mov
adc
mov
outsl
sub
adc
test
fs
add
jns
test
jge
pop
mov
xchg
mov
in
mov
jge
jno
mov
adc
pop
and
xchg
xchg
ja
xor
dec
push
inc
mov
call
add
cs
mov
push
sub
inc
xchg
jnp
pop
mov
mov
sub
dec
push
mov
dec
movsl
mov
das
gs
shl
cmp
popf
pop
inc
lcall
pop
mov
jmp
cwtl
and
cmc
jne
jmp
sbb
into
loop
out
and
ja
xchg
in
std
rclb
cmp
xchg
icebp
pop
clc
and
into
test
aas
sub
xor
xor
ret
cmp
nop
jbe
pop
stc
out
xchg
sub
jbe,pt
dec
pop
or
jp
scas
jle
dec
bound
pop
outsl
fwait
mov
inc
pop
ficomps
stc
xor
mov
push
test
stos
sahf
pushf
sub
mov
mov
inc
jb
cmp
add
mov
mov
and
sub
js
fisttpll
add
jle
mov
push
fldt
push
cmp
gs
sbb
or
lret
dec
push
pop
in
sub
inc
sar
outsb
test
notb
add
mov
jae
stos
fwait
adc
ret
rcl
xchg
cwtl
mov
mov
cli
xchg
push
adc
mov
insb
jl
pop
inc
loopne
cld
dec
pop
cmpsb
xchg
subl
jge
faddl
lods
mov
ds
sbb
inc
outsb
icebp
mov
xchg
dec
test
out
push
sub
fbld
fldt
jmp
loop
addr16
ficoms
in
add
clc
rcr
scas
pop
sarl
pop
mov
sahf
es
adc
dec
mov
addr16
pop
scas
lock
cmp
shrl
fisubs
fmul
mov
iret
lahf
loopne
dec
jnp
out
clc
and
xchg
add
or
or
xor
fidivs
cmpsl
subl
sarl
movsb
mov
aas
rclb
add
mov
hlt
in
daa
fcomi
into
mov
pop
jne
lds
in
sbb
lods
sbb
test
xor
call
dec
sarb
aam
out
mov
mov
jbe
cmpsb
fnsave
imul
lods
stc
push
aad
inc
mov
inc
rorl
mov
pushf
dec
lcall
popa
rorb
add
mov
out
xor
in
rolb
push
adc
or
stos
movsl
movsb
sbb
lret
cmp
imul
sbb
add
inc
cwtl
mov
adc
fdivl
mov
popa
pop
push
cmp
dec
int
pop
es
cmpsb
xor
or
clc
or
add
cmpsb
pop
jnp
imul
test
adc
cwtl
sub
sub
jbe
fcompl
and
outsl
outsb
sub
cmp
mov
ljmp
pop
mov
lret
sbb
add
dec
jge
andl
loopne
lods
popa
sbb
int3
clc
mov
inc
jns
loop
imul
push
or
jge
fists
iret
lahf
push
mov
cmp
xchg
dec
and
repz
lods
stos
sub
sub
xchg
lods
andb
movsb
insb
sub
mov
movsb
push
ljmp
and
aam
sub
int3
ret
push
cmp
addr16
inc
mov
popf
mov
cmp
subb
aas
out
gs
fidivl
or
popl
cmp
pop
das
inc
out
nop
mov
pop
stc
nop
xchg
das
dec
dec
test
cmp
leave
push
push
push
push
lods
not
test
lret
sub
mov
insb
loop
je
sbbb
cmpsb
xor
mov
in
xchg
das
jb
jno
fidivs
lods
mov
jmp
in
adc
hlt
xor
sbb
xchg
loope
sti
sahf
cmp
jne
scas
dec
js
lods
jle
and
adc
jb
les
scas
cmovg
mov
fldl
xchg
push
shlb
dec
jno
pop
out
out
push
cmpsl
arpl
in
stos
fwait
sub
fbld
push
adc
add
iret
push
into
bound
pop
loop
inc
clc
xchg
dec
js
bound
adc
es
std
clc
adc
pop
cmp
push
aam
adc
sbb
add
cs
out
xor
test
test
out
pop
mov
push
adc
mov
scas
pop
dec
sbb
adc
push
adc
xchg
movl
pop
mov
inc
xchg
jae
inc
cwtl
aam
addr16
mov
aaa
stos
mov
pop
outsb
fistpl
dec
jge
jle
add
xchg
imul
mov
mov
in
adc
scas
xchg
fwait
ss
xchg
mov
les
fs
movsb
adc
int
les
adc
movsb
mov
jmp
mov
int
or
sbb
dec
shll
sbb
xchg
push
adc
in
jbe
dec
pop
pushf
pop
jmp
push
fwait
jne
fsubl
jecxz
jmp
int3
fcomps
push
pop
fiadds
jmp
in
shll
ds
mov
jecxz
and
stc
inc
jge
pop
scas
sbb
add
mov
adc
ss
mov
jne
lcall
loopne
scas
aad
test
xchg
fstpl
sbb
lahf
jnp
es
test
inc
lea
sbb
frstor
mov
sbb
inc
mov
bound
shl
add
jmp
insl
fbstp
or
inc
mov
xchg
mov
jmp
shlb
repz
push
out
mov
fimuls
enter
jle
add
imul
insb
scas
dec
lcall
xor
inc
push
cmpsl
sub
lcall
divl
out
gs
sub
add
push
pop
or
roll
aaa
mov
push
jnp
mov
push
movl
xor
adc
lahf
pop
daa
jae
movsb
jg
fildll
insb
fld
lds
fidivrs
in
jne
mov
sbb
add
pop
pop
sub
loope
in
add
inc
int3
notb
mov
cmp
jae
dec
and
or
or
jle
push
add
aas
or
xchg
pushf
mov
ret
cld
sub
inc
inc
out
test
ror
cmp
pop
jnp
fxam
data16
int
sahf
js
lds
xchg
pop
push
repz
xchg
bound
jl
int3
cli
in
push
rclb
pop
jae
ss
addb
js
ljmp
test
repnz
lahf
jmp
jle
cwtl
mov
loopne
insl
pop
and
jae
dec
add
popa
adc
xchg
iret
scas
jb
jno
lahf
mov
aad
fcoms
test
popa
dec
popa
popa
fistpl
cmp
pop
or
jl
pop
mov
shll
dec
test
loopne
add
mov
xor
xlat
out
or
lret
sub
scas
push
movsb
jo
and
fcmovnu
sbb
sahf
push
inc
les
sub
mov
enter
xor
push
loopne
cmp
mov
mov
les
out
std
dec
adcb
push
pop
jecxz
adc
aam
cmp
mov
popf
add
jb
mov
testl
je
jo
mov
in
mov
dec
out
insb
cmp
or
and
adc
scas
inc
js
push
push
out
shlb
adc
adc
push
addl
or
cmpsb
lret
enter
ds
xor
sahf
add
cs
mov
mov
mov
negl
adc
sub
cmpsl
lcall
enter
mov
leave
call
pop
loop
les
mov
cmp
sar
push
xor
int
mov
xchg
filds
mov
mull
in
add
xchg
dec
jl
push
xor
imul
mov
loopne
dec
and
shrl
inc
mov
and
pop
int
or
fisubrs
lock
jo
push
mov
iret
aas
ficomps
lret
aaa
packuswb
mov
call
in
filds
fidivrs
cli
lret
loop
fnsave
adc
lea
lahf
and
push
shl
hlt
add
inc
and
fistpl
cmp
pusha
int
adc
pop
xchg
test
loop
cmp
pop
sahf
pop
movsb
xchg
sbb
mov
xor
sbb
jno
in
out
push
movsl
mov
daa
mov
push
hlt
out
lret
clc
adc
arpl
xchg
aaa
in
mov
outsb
addb
ds
call
push
movsb
sbb
movsb
cltd
xchg
int
int3
icebp
fs
mov
inc
in
cmp
pop
dec
lret
into
xor
pop
scas
mov
jnp
or
mov
stos
rcrl
mov
push
mov
mov
mov
push
and
icebp
mov
movsb
xor
add
add
mov
cmp
enter
call
hlt
add
addr16
xchg
out
stos
sbb
cmp
inc
mov
pop
bound
jp
adc
lret
jo
lahf
popa
data16
dec
dec
pop
sbb
clc
icebp
pop
and
cmc
dec
and
cmp
fbld
rcrb
pushf
repnz
mov
jg
lods
push
or
cs
lahf
cmp
movsb
stc
add
fiadds
cli
inc
fs
loop
mov
push
mov
pop
fisubrs
loope
lret
adc
sbb
mov
das
cmpsb
cmpsb
jg
pop
in
lcall
frstor
xchg
push
xchg
dec
inc
inc
xor
jle
fisubl
movsl
mov
push
adc
push
mov
push
je
je
xor
les
mov
inc
dec
testb
lcall
sub
xchg
xchg
or
xchg
ja
jg
mov
or
push
cmp
push
pusha
enter
adc
out
xlat
dec
pop
jb
loopne
bound
adc
inc
ljmp
and
ret
stos
or
push
fistl
pop
add
or
int
call
mov
pop
dec
popaw
pusha
insl
mov
outsl
push
push
push
pop
pop
fcmovnb
lret
in
adc
movsb
push
pop
or
inc
lret
out
stc
lcall
incb
sub
insb
push
stos
xchg
ds
and
add
stc
js
or
std
sub
in
pop
jge
add
cmp
loop
jns
lock
lds
mov
in
aam
dec
or
aam
aam
subb
dec
orl
test
pop
gs
adc
dec
aas
inc
inc
sbb
jl
in
inc
cld
fildll
mul
push
cmp
xor
push
cmpsl
loopne
cwtl
mov
cmpsl
lret
loopne
mov
push
pop
hlt
dec
aad
cmpsb
in
js
nop
gs
jg
scas
cmp
mov
fisttpll
inc
loop
mov
popf
into
add
or
mov
pop
or
cs
bound
mov
xorb
addr16
xor
dec
jbe
add
xchg
imul
pop
and
sbb
adc
in
jmp
pmullw
inc
pop
sete
sti
inc
mov
pop
jmp
sub
fwait
popf
pop
mov
imul
mov
pushf
ret
mov
mov
mov
pop
fldenv
mov
imul
xchg
pop
les
pop
xor
popa
es
addb
cmp
and
insl
add
push
push
sub
clc
jo
sub
mov
mov
cmp
sbb
popa
xchg
ljmp
sbb
jg
and
xlat
imul
mov
mov
leave
mov
enter
adc
or
mov
mov
xor
mull
xchg
fsubs
add
pop
loope
push
pop
and
lea
xchg
and
add
sahf
shrl
aam
lods
push
mov
jo
incb
cmp
push
mov
pop
mov
pop
in
jg
ret
in
scas
mov
rorb
jle
cmc
push
pop
mov
icebp
icebp
lock
sarl
cmp
outsl
cmp
les
jne
fnstenv
repnz
jno
xor
jne
leave
push
test
sbb
in
bound
mov
mov
sub
xchg
mov
adc
das
add
gs
cmp
into
pop
jns
xchg
mov
sbb
ret
and
mov
pushf
push
test
scas
dec
in
js
and
push
aam
mov
xchg
dec
jle
jnp
pop
mov
aam
mov
arpl
inc
jecxz
stos
cmpsl
inc
dec
les
jle
inc
cmpsb
xchg
mov
fidivl
sbb
psrad
inc
repnz
mov
dec
and
cld
or
xchg
pop
movsb
insb
enter
jp
outsb
pop
cmp
out
icebp
mov
arpl
repnz
inc
pop
scas
cwtl
aam
out
or
lret
jle
adc
lea
inc
es
je
or
popa
push
lret
sub
push
hlt
lods
icebp
mov
int3
int3
push
fistpl
add
adc
dec
dec
daa
pop
mov
repnz
stos
and
out
inc
pop
repnz
aam
cmp
stc
xor
push
pop
jo
scas
jns
shl
ljmp
jbe
pop
nop
fistpl
xchg
add
mov
push
mov
dec
cmpb
mov
out
shrb
test
xchg
xor
push
stos
and
testb
rclb
fldcw
push
mov
ret
push
sarl
sbb
or
push
inc
insb
data16
xor
lods
test
and
icebp
push
jl
in
adc
imul
sub
jle
mov
inc
mov
fiadds
or
addl
cli
out
je
sub
divl
or
push
xor
mov
xchg
andb
enter
xlat
call
sub
loopne
icebp
jge
sbbb
test
hlt
and
scas
mov
cmpsb
out
fistpll
hlt
push
shrb
and
sbb
add
jnp
add
idivl
mov
out
cmpsb
mov
popa
inc
mov
imul
jbe
jae
inc
sbb
mov
shr
clc
sti
jbe
lcall
jmp
cld
adc
aam
sub
pop
dec
mov
cmp
and
scas
cwtl
nop
pop
pop
aam
jae
rcrl
aam
pop
mov
out
orl
sub
mov
mov
fmull
pop
cs
mov
jne
lea
xchg
or
dec
sbb
jo
cmp
jmp
scas
faddl
push
fmull
push
push
xor
sbb
pop
inc
xor
out
ja
fsubr
pop
aas
aad
mov
push
fnsave
pop
adc
sub
dec
mov
icebp
in
fidivs
rcr
outsb
rol
push
adc
cli
imul
test
out
mov
fwait
lods
stos
dec
ljmp
xchg
testl
rol
xor
xor
push
push
mov
pop
pusha
pusha
pop
mov
cmp
cmp
or
pop
xchg
push
call
out
cmc
jge
and
or
mov
dec
rolb
clc
xchg
dec
sti
xchg
mov
push
ljmp
jne
xchg
out
lcall
adc
sub
je
push
adc
fbld
ret
adc
mov
lret
std
clc
imul
sub
pcmpgtw
pop
jne
and
leave
mov
push
iret
xlat
jo
stc
int3
fiadds
adc
fwait
pop
negb
rcrl
and
push
jnp
lret
push
sarl
inc
orb
lods
push
enter
shlb
nop
xor
add
test
mov
call
dec
lods
iret
mull
mov
in
movsb
mov
into
inc
sarl
shrl
dec
add
aas
pusha
cmp
in
rcrb
and
fcomp
push
rcl
fs
idivl
add
xchg
push
lock
push
das
frstpm(287
shrl
push
inc
or
fsub
xor
jp
xchg
xor
lcall
mov
push
adc
popf
cs
shlb
mov
fs
imul
in
mov
cmp
push
aam
scas
xor
push
loope
sarb
mov
loope
cmp
int
cmp
pop
push
sti
sbb
push
pop
lea
sub
stos
sub
pop
cmc
es
lock
dec
or
imul
push
lcall
out
stc
nop
sub
xchg
push
adc
sti
xlat
add
mov
push
jns
jle
negb
clc
sbb
sub
out
mov
ds
xor
cmp
outsb
scas
jo
mov
cs
jge
shlb
or
jl
je
bound
inc
xor
dec
mov
pop
xchg
scas
mov
fisttpll
movsb
xchg
mov
orl
xchg
arpl
push
mov
int
cmp
in
xchg
rolb
push
pop
test
jecxz
jl
mov
into
inc
or
into
repz
loopne
negl
pop
cmpsb
push
in
stc
stos
lods
mov
jae
sub
movsb
pop
inc
pop
fisubrs
mov
sbb
js
decb
mov
iret
pop
lret
push
jl
mov
in
sbb
psubsb
test
jp
xchg
jb
lcall
dec
pop
mov
data16
outsb
mov
outsl
jno
cli
jl
sub
xor
and
mov
cwtl
sbb
fdivrs
xchg
xchg
xor
fldl
xor
pop
jmp
int3
dec
mov
adc
mov
nop
out
jg
insl
push
or
pop
push
mov
jo
and
mov
jmp
jmp
stos
test
loope
cmp
popa
xchg
cltd
dec
cs
or
popf
sub
push
cmp
mov
rcrl
sub
mov
hlt
es
into
test
sbbl
lret
shlb
out
fadd
subb
shl
bound
mull
jb
idivl
pusha
insb
push
push
jmp
adc
push
push
ficoml
mov
sub
in
ss
or
pop
je
mov
mov
mov
and
pushf
fwait
daa
ljmp
jmp
and
pop
dec
lods
jmp
ret
mov
sarl
enter
movsb
mov
cmc
cltd
out
and
dec
cld
inc
sub
cmp
orl
sub
scas
inc
jle
push
mov
shll
xchg
sub
popa
jg
bound
loop
inc
and
cmp
je
negb
push
rclb
pusha
cltd
jo
fisubs
fidivs
and
jl
cld
popa
sbb
adc
dec
cmpsl
and
or
push
ret
hlt
aad
dec
test
movsb
adc
and
loopne
push
sti
dec
mov
and
adc
inc
sbb
dec
xor
loopne
out
popf
int
cs
mov
xor
cmp
or
add
jns
in
shll
cmp
sub
pop
cltd
sbb
ja
mov
daa
xchg
std
repnz
es
icebp
inc
outsl
xchg
ror
ljmp
cld
cmp
inc
lds
popa
ja
repnz
dec
jge
int
loope
ret
int3
leave
inc
sbb
aad
push
shll
sbb
ret
and
out
not
shl
dec
push
insl
gs
pushf
sub
pushf
nop
pop
pop
lds
cmp
cs
sahf
add
jb
rclb
jne
add
das
mov
lcall
sbbb
mov
push
push
pop
scas
mov
es
sub
cmp
ss
sahf
fmull
mov
fldcw
fildl
inc
jmp
inc
clc
pop
ja
outsl
mov
sub
ss
test
pop
repnz
fstpt
pop
js
xor
insl
push
add
rcrb
or
dec
fimuls
les
or
xor
push
ret
aaa
cmpsl
and
and
or
fadds
push
fwait
ss
mov
fcompl
hlt
jnp
xor
dec
hlt
test
repz
lret
inc
pop
cmp
cmp
and
lcall
repz
das
adc
mull
stc
add
in
arpl
sti
add
xchg
and
xchg
jnp
shll
fiaddl
sti
add
or
cmpsb
xchg
fdivs
nop
mov
roll
sarl
stc
lock
pop
lret
call
mov
imul
loopne
inc
push
in
cltd
mov
cmc
clc
fdivs
imull
xchg
mov
xchg
push
scas
adc
jae
xchg
std
pop
mov
mov
sbb
mov
neg
add
jns
sti
popa
adc
addl
iret
sub
cmp
pop
cmp
lret
dec
aas
arpl
push
push
frstor
dec
cmpsb
adc
xchg
mov
xchg
js
cld
sbb
icebp
and
ret
fwait
enter
sbb
and
pushf
hlt
jge
aad
or
sbb
xor
mov
jne
sbb
xchg
sbb
cmp
movb
pop
xor
cmpsl
lret
xor
call
aam
sbb
roll
adc
inc
cld
decb
imull
sub
lds
cmp
jno
xchg
dec
sti
aas
jl
adc
sbb
dec
sbb
cmp
cmc
gs
sarl
adc
jp
inc
cmpsl
cmp
sbb
mov
dec
sbb
dec
fiadds
mov
rolb
sub
mov
cmp
dec
and
pop
cmp
jbe
sbb
nop
or
popf
xor
fstpt
dec
jmp
dec
mov
out
push
rcrl
sub
nop
push
fs
std
clc
jecxz
dec
pop
stos
pop
jne
cmp
into
mov
aaa
lcall
inc
insl
adc
mov
dec
push
adc
add
enter
jecxz
je
mov
push
xchg
mov
cmp
cmpsl
and
shrb
sub
mov
dec
out
sbb
ret
pop
jno
cmpsb
pop
dec
hlt
push
jno
int
imul
js
cmp
ja
movsb
dec
push
int3
movsb
movsb
xlat
push
cmc
cmc
clc
pop
sbb
jp
mov
outsl
addl
test
pop
lock
fwait
sub
sub
mov
push
shlb
jns
inc
cmp
ljmp
lds
dec
stc
scas
or
mov
lock
and
enter
out
xchg
push
leave
subl
jae
mov
xor
aam
insl
dec
mov
mov
daa
adc
xlat
rcrb
push
hlt
movsb
mov
rolb
jae
sub
cmp
ljmp
or
mov
jle
movsb
pop
add
test
js
push
pop
jge
mov
xlat
scas
xchg
adc
push
aam
repnz
sub
xchg
dec
aam
and
sub
xchg
pop
in
mov
mov
mov
add
inc
sub
fnstsw
push
and
hlt
adc
push
icebp
cli
stc
pop
dec
inc
xchg
sub
fstl
cmp
cltd
lcall
idivl
pop
push
mov
movsl
ljmp
xchg
int
jle
dec
sub
pop
out
push
xor
pop
add
jne
movb
loope
fsubrs
adc
xchg
daa
xor
das
cs
or
xlat
and
fbstp
sahf
test
xor
mov
jmp
pop
js
jno
or
pop
ss
les
clc
mov
lcall
fdivl
popa
je
sbb
shll
test
sbb
mov
mov
ljmp
into
shll
shll
push
inc
inc
clc
ret
stos
adc
scas
shrl
inc
cmpsl
cli
loopne
out
cmp
enter
loopne
pop
rcl
xchg
sar
mov
xor
cmp
out
mov
stc
pop
push
sbb
mov
mov
push
mov
int3
pop
leave
or
push
and
push
das
jmp
out
fiadds
or
or
adc
sti
adc
sbb
call
and
mov
aad
repnz
mov
jge
or
subb
xchg
mov
mov
ljmp
xchg
lea
call
adc
out
sahf
add
sub
pushf
inc
ds
gs
out
jne
adc
clc
mov
sbb
add
jns
das
mov
es
mov
adc
dec
sbb
fisubrs
hlt
jmp
sub
orl
mov
pop
adcb
pop
mov
cli
lods
cmp
lods
cmp
dec
xchg
movsb
jecxz
or
test
add
into
daa
cmpb
and
adc
clc
jnp
shrl
add
aad
imul
push
inc
cli
scas
call
call
push
inc
mov
icebp
mov
enter
push
in
cmp
jle
jg
int3
inc
jbe
and
xchg
mov
cmp
pop
xor
dec
and
nop
xor
lahf
or
scas
xchg
mov
mov
jnp
push
rcr
push
aaa
movsb
sub
ss
adc
mov
cmpsl
es
loop
push
cmp
push
dec
in
imul
inc
loopne
sbb
jno
lock
or
jg
push
adc
dec
mov
inc
pop
in
ret
adcl
nop
xor
int3
test
xchg
sub
sbb
das
and
nop
aas
sbb
dec
xchg
push
push
sbb
shlb
gs
outsb
cli
outsb
sbb
lods
and
add
mov
cli
mov
and
jge
xchg
pop
cltd
fisubl
sti
fcompl
ja
in
xchg
dec
cmpsl
push
jmp
clc
and
pop
cmp
pop
add
sub
cltd
and
sbb
mov
outsb
rclb
mov
mov
stos
dec
and
fnstsw
mov
mov
xor
sub
lret
mov
jecxz
sub
pop
cwtl
lds
add
hlt
dec
scas
pop
xchg
cs
jl
int
sbb
aaa
add
xor
clc
sub
jbe
arpl
mov
mov
cltd
pop
mov
inc
pop
xor
xor
fs
adc
jns
mov
loope
cmpsb
xor
repnz
jl
push
push
push
lret
mov
add
add
in
cmp
int
shrl
imulb
and
packuswb
mov
push
pop
data16
pop
addr16
xor
push
xchg
jmp
in
xor
mov
cmp
aam
cmpsl
xor
lret
mov
mov
int3
mov
dec
bswap
pop
jge
loop
scas
dec
rclb
cwtl
leave
test
cmp
push
sub
pop
push
or
push
imul
jo
clc
pop
movsb
mov
pop
sub
jl
lea
sti
xchg
out
sub
add
and
cltd
push
xchg
sbb
lahf
out
push
lret
pop
loope
xchg
cmp
insl
addr16
js
adc
std
sti
movsbl
mov
iret
mov
push
cmp
out
xchg
mov
inc
push
js
or
repz
jmp
pop
sbb
push
dec
dec
enter
sahf
pop
mov
rorb
inc
fs
jp
jne
fdivl
or
xchg
mov
sub
stc
push
test
int3
or
clc
fisubs
fisubrl
loopne
mov
addr16
fsubrp
repz
adc
fucomi
pushf
xchg
lret
mov
cwtl
lds
icebp
mov
pop
sub
dec
dec
enter
mov
stc
push
cli
xor
out
data16
movsl
insb
mov
inc
and
ljmp
jl
add
inc
out
inc
das
mov
sub
shll
mov
les
push
pushf
cs
dec
jmp
sub
es
fcoml
loope
outsb
jae
push
jne
test
xchg
ret
xchg
insb
frstor
or
dec
ss
inc
adc
scas
push
dec
xchg
rcrb
jg
imul
lea
xchg
insl
in
dec
das
scas
in
mov
inc
icebp
ds
je
adc
bound
loope
iret
jg,pn
das
push
roll
dec
data16
enter
aam
enter
xor
js,pn
movsl
and
cmpsb
mov
andb
xchg
out
push
add
sub
scas
scas
addr16
inc
inc
test
xchg
fidivl
cltd
pop
push
jbe
insl
cmp
mov
stos
in
in
imul
enter
cld
mov
xchg
jl
jns
and
or
ss
inc
cmpsb
aam
leave
jge
insb
mov
int3
fstpl
flds
ds
xchg
dec
dec
cwtl
sbb
push
mov
sarl
and
pop
bound
jecxz
sbb
mov
jmp
mov
sub
add
mov
push
and
std
jb
aad
enter
fdivl
mov
mov
sub
lret
lcall
mov
mov
xchg
mov
ret
mov
movsl
roll
add
repz
leave
shlb
inc
adc
and
flds
dec
mov
mov
push
cmp
stos
lods
dec
jb
mov
and
ret
insl
loope
sti
fcomi
and
shll
xor
fists
std
adc
xor
adc
jae
xlat
or
enterw
insb
xor
xchg
push
incb
adc
shll
aam
xchg
add
add
push
scas
test
sbb
sub
loop
dec
xchg
xchg
aaa
cmp
insb
sti
lret
ret
cltd
out
push
lret
push
fbstp
pop
jne
push
aad
mov
aas
add
mov
ljmp
das
push
rclb
data16
push
pop
fwait
sbb
fcoms
shll
orb
and
add
gs
or
outsb
ja
shl
test
loopne
mov
test
adc
lods
push
adc
ss
test
sub
sbb
mov
mov
call
das
shl
pop
bound
xchg
rorb
mov
adc
push
pop
push
and
lret
cmp
orb
popa
mov
adc
mov
outsb
arpl
lret
and
out
mulb
in
clc
push
pop
or
mov
jg
xchg
adc
sub
int
lahf
clc
clc
scas
mov
pop
mov
mov
stc
lods
pop
add
adc
push
lds
and
pop
out
daa
xchg
sub
xor
imul
fnstsw
mov
in
cltd
sub
xor
cwtl
pop
das
pop
rorb
stos
mov
popf
test
mov
outsl
jmp
test
and
loope
sbbl
mov
mov
lock
cmpsl
mov
popa
sbb
and
ss
popf
adc
lods
cmp
stos
test
jns
add
dec
pop
testb
out
stos
cltd
enter
sbb
insb
fbld
imul
lcall
and
sub
add
insl
cmp
pop
mov
neg
mov
sbb
cltd
sti
dec
jns
rorl
mov
cmp
lea
sbb
je
mov
jge
test
aam
repz
or
stos
and
mov
xor
aad
test
inc
push
and
fisubrl
xor
pusha
fwait
pop
sub
rcr
in
cmp
fs
pop
jp
push
mov
aas
mov
pop
push
cmpsl
fnstenv
mov
int
push
mov
ljmp
inc
mov
adc
cli
pop
out
jne
jl
int
push
jo
loopne
and
rorl
jg
mov
pusha
outsl
ret
push
jg
cs
jns
inc
lret
out
add
loope
jmp
lods
out
xor
hlt
mov
xor
into
inc
sbb
push
ret
jle
les
imul
out
jle
test
jmp
push
std
jecxz
push
in
dec
mov
sub
gs
roll
and
ret
mov
iret
sbb
testb
fsubp
cmp
mov
js
mov
movsb
je
jno
movsb
enter
fwait
call
frstor
mov
sub
sub
fiadds
xor
pop
xchg
xchg
and
repz
dec
mov
pop
lret
mov
jbe
adc
jg
pop
sub
jl
cli
jnp
lods
sub
lds
xchg
imul
mov
jno
xor
movsb
insl
pop
jl
xor
cwtl
cli
mov
adc
push
dec
xchg
mov
jmp
lock
lahf
xor
mov
ret
cmp
push
jne
ds
test
pop
aam
lahf
xor
or
push
insl
adcb
cmp
add
rol
and
add
lret
cmp
fwait
cmovo
jno
xchg
dec
mov
pusha
adc
movsb
add
ds
xchg
sbb
xchg
cmp
adc
sub
inc
fldl2e
mov
std
adc
push
inc
sahf
mov
pop
repnz
addr16
cwtl
push
dec
ret
hlt
and
sahf
sahf
popa
jmp
dec
mov
cmpsl
mov
lods
stos
dec
and
mov
es
sbb
cmp
sub
shll
push
and
dec
mov
rolb
sub
js
add
lds
or
addl
in
lock
dec
xchg
dec
hlt
xchg
inc
cmp
imul
test
xor
push
adc
aam
mov
mov
xchg
cli
movsb
pop
xor
leave
imul
es
jp,pn
mov
xor
mov
loopne
pop
loope
dec
mov
and
enter
cld
jbe
fstpl
pop
push
jae
dec
roll
pop
fstl
lock
mov
push
jl
mov
push
jmp
stos
repz
movsl
inc
inc
xchg
sbb
nop
cmp
xor
mov
loope
and
es
pop
ja
and
and
xlat
loopne
call
add
or
mov
jne
mov
jmp
sti
adc
pop
js
imul
into
fisubs
dec
xlat
pop
sub
shlb
push
and
mov
adc
pop
gs
das
mov
aas
xchg
addr16
mov
outsl
xchg
mov
aaa
mov
mov
rorl
rcll
xor
loope
fwait
or
or
fs
xchg
ja
push
or
push
adc
lret
insl
push
bound
pushf
sbb
sub
loope
aas
and
sub
cmp
mov
cwtl
sarl
popa
jecxz
clc
sub
into
xchg
sub
stos
lahf
push
jbe
mov
ljmp
js
out
das
lahf
test
mov
push
orb
sub
xchg
imul
stos
leave
sahf
test
or
out
pop
push
arpl
fcomps
imulb
jo
mov
imul
dec
icebp
push
fwait
insb
jb
fistps
sbbb
call
and
add
mov
add
adc
sbb
lahf
cmpsl
addr16
out
adc
push
lds
fs
mov
push
xchg
imul
stc
xchg
push
data16
gs
popf
xchg
addl
mov
add
ret
xor
repnz
or
insb
js
mov
sbb
push
inc
pushf
movl
arpl
and
push
fs
loop
jno
lea
out
add
aaa
pusha
xor
scas
cmp
out
clc
inc
adc
inc
loopne
push
xchg
dec
sahf
push
jecxz
push
mov
shll
add
jno
ja
std
mov
fwait
push
fs
sub
in
data16
and
inc
test
in
mul
xchg
and
pop
mov
xlat
sub
mov
push
xchg
jecxz
or
dec
add
sub
add
cld
add
sbb
mov
fabs
jl
ficomps
fildl
mov
cld
les
mov
xchg
sbb
lods
xchg
or
add
gs
cmpsb
dec
sub
mov
bound
cmp
sub
shl
scas
sub
dec
and
loope
rcrb
or
aam
inc
adc
imul
jne
xchg
popa
sahf
cwtl
or
cmp
push
ss
out
test
mov
pop
jb
fldl
jbe
pushf
or
jne
lcall
cltd
sub
jle
mov
xlat
in
add
xchg
imul
outsl
ja
add
das
repz
inc
fstpt
or
pop
mov
scas
loop
fdiv
test
lret
adc
dec
inc
data16
sub
cmpsb
push
pop
in
fistps
ret
lock
mov
cs
jo
fisubrs
mov
push
ljmp
sub
in
push
loop
mov
adc
mov
mov
out
gs
xlat
pusha
adc
mov
xor
hlt
adc
adcl
dec
ss
fldl
xchg
jl
test
bound
aas
bound
loopne
pop
jo
pop
mov
mov
mov
pop
ljmp
cmpsl
fimull
xchg
insl
mov
xor
xlat
dec
mov
lret
lcall
ror
testb
mov
scas
mov
sbb
xor
push
fisttpl
out
scas
mov
push
sbb
xchg
cwtl
jmp
cmp
test
lret
mov
fmulp
lock
aas
mov
cmp
mov
cmp
add
cmp
dec
push
mov
fcomps
pop
mov
mov
orb
movsb
cmp
pop
jmp
sbb
sub
lods
wbinvd
jo
insb
mov
dec
cmpsb
jge
pop
iret
pop
and
stos
insb
push
xor
xchg
pop
shl
sbb
sarl
jne
or
lods
mov
and
aad
ret
mov
xchg
sub
sub
jbe
aas
or
imul
test
dec
sti
decb
roll
lods
in
inc
mov
rcll
mov
xchg
fdiv
icebp
lds
push
ljmp
xchg
addr16
ds
pop
lods
pop
or
jnp
std
or
or
jg
xor
fcmovnbe
ds
and
ja
inc
xchg
clc
xor
in
jb
pop
aaa
mov
add
jl
jns
pop
shll
jb
jp
xorl
and
stos
and
popa
call
dec
jno
adc
fwait
adc
mov
dec
fldt
rcrl
lock
aad
test
push
sub
stos
push
pop
sbb
icebp
pop
xchg
cmpsl
jmp
mov
in
sbb
adcl
and
sarb
mov
sbb
stos
inc
insb
cli
cmpsl
or
fsts
imul
mov
ds
cmpsb
insb
xor
mov
call
pop
cmpsb
test
gs
adc
or
pop
xchg
std
xor
dec
insb
mov
xor
adc
mov
mov
rolb
mov
out
sbb
pop
xchg
inc
cmp
mov
in
rcl
test
or
in
rcll
popa
imul
sbb
cmpsb
and
mov
movsb
insl
sub
pop
xlat
pop
inc
xor
lret
xchg
loopne
nop
add
insl
push
in
lods
and
push
or
sbb
push
sbb
dec
pushf
jmp
xor
pop
in
sahf
or
ss
sub
jg
nop
jae
in
dec
push
incb
sub
fcoms
call
jl
adc
movsb
popa
push
cs
in
outsb
cmp
cli
jno
outsb
mov
mov
mov
les
repnz
fwait
mov
or
insl
add
aas
xorb
test
popa
pop
fsub
in
xor
jl
aas
or
cs
insb
out
push
lds
das
inc
dec
push
movsl
pop
xchg
ss
adc
stos
jmp
jg
mov
and
cwtl
negb
push
pop
jle
fiaddl
lock
in
inc
dec
roll
add
nop
push
push
pop
shlb
pop
push
fistps
push
sub
je
in
repnz
mov
jl
jmp
daa
popa
xlat
ja
sahf
sbb
and
repz
aas
lea
add
add
cmp
out
inc
sbb
xchg
jo
imul
xlat
mov
les
cmp
xor
mov
out
ljmp
lret
lret
imul
mov
push
sub
out
xlat
arpl
repz
mov
adc
cmp
sub
sahf
ret
cmp
inc
out
hlt
fs
sub
lcall
out
ja
or
xor
add
xchg
lahf
mov
sarb
pop
stc
jae
dec
push
jbe
fwait
out
sub
mov
jecxz
addr16
lods
mov
mov
loop
and
fmul
testb
push
movsl
rclb
sti
or
pop
jle
cmp
push
mov
mov
jmp
jbe
push
inc
mov
fst
lret
mov
lahf
inc
lcall
loopne
xchg
jmp
inc
pop
mov
clc
push
stos
pop
lret
push
scas
out
lds
lret
cltd
push
repz
mov
jg
sbb
and
addr16
out
mov
cwtl
repz
pop
dec
xorb
jb
insb
inc
sbb
insb
dec
mov
int3
xchg
lock
mov
lods
enter
dec
push
and
sub
outsb
mov
cmp
shll
fsubs
dec
or
ljmp
sub
xor
fists
js
in
jl
mov
gs
mov
xlat
push
les
enter
jne
adc
mov
fistpl
negl
in
icebp
das
inc
mov
sbb
das
into
popa
push
or
push
gs
inc
icebp
cs
push
into
fwait
push
mov
cmp
and
mov
cmp
adc
addps
out
aas
clc
mov
add
dec
sub
out
sahf
cmp
fwait
mov
test
subl
add
lods
jns
jmp
pop
pop
fstl
cli
ja
lds
loope
push
mov
mov
mov
or
sub
jno
push
xor
lcall
cmpsb
das
jp
inc
xchg
iret
or
adc
dec
test
lock
test
pop
mov
xchg
dec
xchg
cmpl
pop
sbb
sbb
sbb
jle
jns
pop
insb
jmp
mov
and
je
sbb
fwait
sbbb
xchg
insb
cmpsl
out
aaa
push
sbb
fstps
call
mov
shll
inc
das
test
out
ret
pop
mov
xchg
je
inc
jmp
leave
jbe
sbb
pop
sbb
lcall
into
ss
iret
dec
jbe
repnz
mov
cmp
jp
and
xchg
cld
sbb
adc
cltd
mov
pop
xor
lahf
fcmovnbe
cltd
jle
xor
lcall
mov
sbb
xlat
xchg
fwait
mov
test
and
xchg
movsb
shll
push
jo
sub
pop
cmpsl
push
not
psubsb
mov
in
popf
sbb
pop
mov
mov
mov
out
out
scas
cltd
pushf
adc
test
rclb
rcrb
inc
fcmovne
sub
jns
stos
mov
mov
adc
daa
push
jle
mov
sbb
arpl
fisubrs
sahf
scas
and
imul
aaa
and
adc
negb
addr16
jns
sub
and
scas
pop
sbb
mov
mov
xchg
adc
mov
and
sub
sub
mov
cs
or
fmull
xor
pushf
mov
and
enter
bound
push
test
pusha
test
insl
inc
cli
jp
imul
fstpl
in
cwtl
adc
mov
inc
pop
insb
test
inc
je
pusha
test
xchg
in
mov
outsb
popw
push
mov
mov
aad
in
fwait
jno
or
push
mov
cmp
cmp
aaa
push
xchg
cmp
xor
add
lcall
cltd
lods
xchg
shl
or
ss
xchg
add
aad
fsub
jns
mul
int3
mov
out
inc
cli
hlt
insb
add
and
push
movsl
lret
enter
jmp
mov
mov
and
js
loope
adc
stos
cmc
jp
mov
scas
sbb
inc
jne
insb
push
popa
cltd
or
rol
mov
xor
in
push
subl
pop
incb
push
adc
and
pop
lcall
sbb
xor
and
leave
push
inc
adc
into
jne
sti
and
mov
inc
ja
sarl
js
or
and
cmp
dec
int3
mov
push
sbb
fcompl
xchg
xchg
les
fwait
stc
test
push
loop
xor
les
dec
mov
shl
out
xor
inc
loopne
js
dec
popa
push
xlat
cmp
mov
repz
or
lahf
or
or
lods
sbb
mov
adc
dec
adc
xlat
bound
mov
inc
jb
dec
fs
push
sbb
cld
dec
cmp
pop
mov
ret
test
sub
mov
std
cmp
es
pop
jns
shll
popf
pop
lods
addr16
adc
ret
scas
cmc
cmp
ljmp
fsts
mov
cs
mov
in
and
je
push
stos
clc
mov
jg
pop
lahf
inc
mov
fmuls
out
mov
adc
aam
in
fdivl
movsb
or
push
ljmp
sub
mov
mov
xchg
mov
clc
daa
lcall
xor
cwtl
adc
aas
pop
idivb
sti
push
inc
sub
hlt
shrb
xchg
sub
mov
fisubrs
idiv
mov
insl
arpl
mov
imul
or
jne,pt
jo
cmp
jbe
xor
xlat
and
lock
inc
fiaddl
hlt
je
push
loope
xor
inc
les
mov
dec
enter
in
sbb
and
or
test
je
dec
ret
mov
clc
enter
xchg
testb
gs
insb
jmp
sbb
arpl
sbb
push
insb
sbb
and
sub
ljmp
ss
fcmovb
sahf
test
shll
movsb
pusha
scas
aas
ds
sub
add
pop
push
gs
shl
int3
or
fsubl
scas
mov
imul
sub
test
insl
push
or
sub
ficoms
xor
and
loopne
push
dec
mov
imul
imul
les
out
ljmp
in
rcrl
dec
test
pop
loop
mov
mov
daa
inc
ret
fcmove
push
aam
xor
push
addr16
push
pop
bound
adc
push
js
push
sub
jl
into
sahf
mov
add
int
xchg
or
xchg
inc
clc
icebp
inc
jne
aaa
xor
test
pop
fs
stos
sub
rol
int3
mov
mov
xor
mov
js
fwait
pop
inc
adcl
cmp
lock
cli
inc
or
jl
sahf
cmpsl
arpl
xor
jmp
scas
test
out
xchg
mov
jmp
fcmovb
jp
and
ret
fwait
xchg
jge
test
shrl
lods
es
mov
jge
aaa
cmpsl
enter
xor
inc
jne
lods
pop
roll
pop
xor
aam
jno
adc
inc
imul
jno
adc
mov
jge
fldt
frstor
mov
repz
fndisi(8087
ljmp
enter
cmc
add
pop
fimuls
test
pop
jle
inc
decb
loop
mov
aad
jb
pop
add
out
fwait
cwtl
mov
inc
nop
pop
lahf
push
add
in
je
or
xchg
sub
jbe
cmp
dec
fisubs
push
jae
sbbb
faddl
mov
aam
and
mov
push
cmp
dec
sub
mov
cmc
pop
xchg
in
jmp
sbb
jbe
xlat
sarb
mov
lock
push
lret
es
test
mov
sbb
mov
test
std
mov
push
std
cld
lods
scas
rcrl
repz
leave
inc
psrad
pop
imul
xor
push
sbb
leave
xor
cltd
push
sti
in
aaa
xor
lea
cmp
leave
cli
xchg
movsb
aad
mov
cld
lock
xor
in
and
jbe
add
sbb
push
pop
inc
test
push
push
hlt
jnp
gs
mov
popa
sub
and
scas
dec
mov
jo
jp
jns
aad
test
lret
mov
xor
lds
cmp
mov
fwait
push
cli
movsl
mov
out
lahf
fxch
shl
in
push
lret
je
js
clc
fucomip
popa
out
pop
popf
out
and
int
sbb
sbb
jb
adc
cld
shlb
adc
imul
adc
jns
jp
push
mov
rolb
sub
stc
or
outsl
lahf
sub
ret
push
dec
adc
stos
cmc
push
shl
inc
pop
stc
xor
sub
insb
jo
filds
pop
and
fwait
mov
push
lods
or
ds
cmp
xor
test
mov
xchg
jnp
jg
sub
xor
pop
addr16
outsl
das
pop
cmp
inc
aas
pop
cmp
fiaddl
in
pushf
fistpl
fnstenv
sbb
fisubrl
xchg
cmp
decb
pusha
mov
pop
push
mul
test
loope
cmp
loop
icebp
jno,pn
xlat
jmp
or
adc
cltd
inc
inc
inc
push
fcom
push
inc
roll
jae
mov
pop
aaa
enter
out
pop
pop
lea
rorb
lahf
flds
or
and
jbe
xlat
lret
fmuls
cltd
mov
push
outsb
push
xchg
cmp
mov
mov
in
popf
pop
add
outsb
bound
mov
xchg
lret
sbb
xor
jecxz
xchg
test
push
fldcw
lret
push
in
mov
cmpsl
out
dec
sbb
pop
mov
mov
xor
add
out
cmp
cs
rcrb
aaa
jp
test
stos
lret
mov
push
addr16
jle
in
sbb
jge
mov
pusha
daa
adc
cltd
and
fs
pop
inc
dec
insb
xor
xchg
sbb
xchg
nop
mov
sub
jle
push
pushf
pop
enter
js
mov
jb
loop
fcomp
icebp
cmp
add
fnsave
ucomiss
ja
repz
andb
nop
loopne
sti
jle
lcall
dec
loopne
popa
stos
mov
inc
lcall
cmpsl
mov
aas
sahf
jb
xchg
xor
cld
mov
ja
jle
cli
pushf
mov
mov
rcr
out
cmc
sub
orl
sbb
push
ss
dec
and
ja
adc
push
imul
clc
and
inc
cld
enter
imul
dec
out
jbe
pop
or
arpl
or
das
jbe
pop
mov
pop
lock
dec
and
repnz
inc
mov
lcall
enter
outsl
xchg
nop
imul
adc
xor
push
xor
xchg
hlt
dec
pop
outsb
sbb
jmp
dec
fdivrp
mov
mov
pop
xchg
aaa
mov
call
or
pop
repz
sub
xor
jb
imul
shr
mov
cmp
in
push
jb
xorb
daa
or
scas
mov
movsb
mov
cltd
int
cmp
movl
cmp
mov
adc
insl
xchg
push
xchg
shr
sub
adc
rcrb
ret
or
inc
stos
fiadds
mov
push
jl
fldcw
xorb
mov
stos
or
insb
jmp
repnz
bound
inc
xor
insb
jge
push
jl
cli
or
mov
sub
mov
and
push
and
xor
cmp
pop
out
or
jb
out
stos
wbinvd
xor
mov
outsb
mov
add
adc
mov
jp
jnp
stos
cmp
pop
push
rol
sbb
repnz
add
das
sti
jecxz
ss
mov
daa
inc
fsub
sbb
out
pushf
jno
cmp
adc
notb
icebp
shll
cmpsl
and
jle
popa
dec
jnp
sahf
and
xor
mov
addr16
and
xchg
xor
jne
push
sub
ret
cmpsl
repnz
js
jae
or
xor
or
xchg
push
jle
ja
jl
fsub
popf
iret
icebp
inc
sbb
pop
pop
cmpl
push
xor
loope
dec
cmc
add
and
mov
mov
fsubl
xchg
addl
push
rol
sahf
imul
cmp
adc
lret
adc
cmp
daa
js
movsl
add
lret
adc
push
test
sar
sti
fwait
movsl
repz
sbb
inc
mov
mov
lahf
movsb
sbb
shll
adc
mov
lahf
xchg
dec
std
std
sub
mov
mov
leave
in
adc
mov
lods
cmpsb
dec
bound
loope
push
cltd
dec
lsl
pop
insl
lret
push
test
dec
push
shl
jo
iret
and
fldt
fcoms
cmp
movsl
jmp
shlb
jge
sbb
jmp
stos
mov
cmp
and
adc
repnz
inc
mov
mov
mov
outsl
dec
mov
daa
fwait
sahf
repz
jo
out
ljmp
xor
mov
testb
sub
idiv
adc
inc
gs
out
dec
jne
loop
addr16
inc
xchg
out
nop
mov
jb
popf
lods
inc
push
mov
testb
rcr
movl
mov
daa
scas
add
repz
mov
sbb
test
mov
jmp
adc
mov
xchg
inc
jmp
pop
and
jb
mov
es
sub
js
aad
sbb
addr16
push
and
add
stc
cmp
pop
lds
es
das
sbb
rclb
outsl
dec
iret
fs
movsb
sbb
and
sti
pop
ljmp
lret
inc
add
dec
inc
insb
mov
out
fs
daa
mov
fisttpl
pop
mov
mov
into
aas
sub
stos
push
push
push
dec
sysexit
and
mov
sbb
mov
pop
pop
negb
mov
xchg
lret
incb
int
cld
push
xchg
xchg
je
test
cmp
jl
xchg
bound
jle
rorb
sahf
mov
pop
inc
cwtl
int
mov
adc
js
cmp
jmp
in
xor
les
sahf
or
loope
fisttpl
mov
mov
in
jecxz
mov
and
pushf
and
and
push
push
mov
fwait
mov
mov
mov
mov
shrb
pop
sub
loop
pop
lods
dec
les
cmp
mov
or
repnz
ja
arpl
in
aaa
xchg
dec
push
ror
xor
xor
xor
cltd
lret
sbb
lcall
aas
inc
dec
pop
lea
inc
inc
and
mov
inc
fstpl
mov
push
xchg
mov
mov
mov
stc
scas
imul
sbb
outsl
or
inc
repnz
fnstenv
insl
lahf
lcall
ja
mov
in
stc
cmp
adc
push
sub
imul
out
ljmp
xchg
and
xor
inc
jo
mov
test
dec
hlt
mov
jge
and
dec
mov
mov
pop
lea
lahf
enter
imul
mov
lods
sbb
add
div
cmc
xchg
inc
add
xor
js
cltd
stos
ret
out
mov
test
push
scas
and
hlt
pop
insb
inc
add
cmp
out
ds
mov
dec
cmc
dec
dec
add
mov
in
repnz
cltd
push
bound
mov
dec
addb
mov
popf
jne
mov
das
out
adc
shll
gs
push
je
push
sub
int
xor
pop
cmp
out
dec
sub
stos
mov
shrl
fwait
dec
xlat
mov
fdecstp
pop
gs
push
push
mov
push
mov
shrb
xor
xchg
sub
jne
ret
xor
cmp
ret
cwtl
je
push
push
xchg
aaa
inc
push
jbe
imul
cmpb
imul
sbb
insb
xchg
pop
nopl
cmp
dec
add
mov
daa
mov
jae
cmpl
and
sub
outsb
je
loope
xchg
jae
popf
sti
loop
idivl
add
push
mov
adcl
cmp
fistps
dec
scas
test
add
xchg
jp
jbe
push
stc
xchg
xchg
jmp
pop
jnp
mov
fwait
addl
lahf
gs
xchg
cli
sbb
cvttps2pi
push
cld
or
and
xchg
mov
push
sbb
arpl
adc
mov
fdivrp
sub
inc
jne
test
cmp
or
dec
je
inc
push
imul
xchg
or
shll
mov
es
cltd
add
cmp
inc
or
jmp
les
xor
push
sbb
xchg
mov
xor
add
mov
dec
jb
mov
int
divl
cmpb
adcl
pop
je
mov
sbb
push
mov
mov
xorb
cmp
push
xchg
test
aam
jmp
fwait
dec
in
xchg
ret
fildll
andl
ss
fs
or
jnp
sub
jne
daa
hlt
or
mov
inc
fucomi
dec
movl
inc
mov
adc
push
xchg
loopne
mov
jno
sbb
js
and
dec
rclb
call
xchg
mov
push
jecxz
jecxz
sar
inc
cltd
mov
jno
fs
xor
repz
mov
and
mov
cs
cmpsb
mov
mov
and
sti
call
mov
push
fldln2
hlt
jp
mov
inc
xor
add
lds
hlt
or
cli
xchg
xchg
mov
arpl
arpl
scas
test
mov
mov
fisttps
mov
or
ja
faddl
jae
mov
imul
xor
les
dec
dec
mov
stos
gs
mov
leave
mov
dec
addr16
into
cld
popf
repz
pop
push
dec
test
repnz
cmp
add
ret
mov
popf
es
jb
lahf
xchg
cld
aad
clc
repnz
xchg
in
jp
mov
fcmovnb
inc
add
insl
mov
pusha
cld
xor
dec
shl
push
lea
xchg
adc
data16
adc
lcall
and
push
adc
mov
in
or
stos
jp
jmp
jg
jecxz
dec
mov
icebp
je
adc
add
dec
test
jecxz
pop
lret
pop
insl
iret
mov
dec
pop
sbb
fs
iret
jmp
movsb
shrl
dec
lock
jg
cltd
cmp
push
jp
ret
mov
sbb
mov
daa
stos
in
inc
mov
inc
adcl
cmpsl
push
loopne
jb
xchg
dec
repz
das
das
push
out
push
notb
addr16
pop
stos
movsl
fwait
sub
aaa
cmc
add
add
jge
sbb
add
and
leave
in
pusha
sbb
push
sti
xchg
not
push
mov
xor
ret
push
jnp
test
sahf
inc
dec
push
mov
inc
push
test
adc
push
icebp
es
pop
or
jb
pop
test
fmull
sub
dec
inc
andb
adc
insl
mov
iret
stos
mov
dec
jmp
mov
xor
sbb
xchg
mov
jns
xor
lods
cwtl
fs
mov
push
shl
pop
xchg
arpl
pop
and
inc
inc
test
int3
shrd
out
rol
push
scas
pop
lret
icebp
mov
and
mov
into
push
add
fdivrl
rcl
sub
jns
aas
push
pop
sbb
packuswb
sbb
std
in
clc
push
add
andl
jo
insl
adc
cli
cmpsb
in
sbb
mov
mov
mov
mov
loop
adc
jg
repz
ret
int
jge
ja
adc
adc
bound
rorl
lahf
test
ds
push
adc
adc
arpl
mov
mov
jmp
in
mov
sub
stos
rolb
and
gs
jo
xchg
lea
out
inc
push
sti
test
sub
pop
pop
xchg
rclb
inc
out
pop
sub
mov
jecxz
push
shlb
push
mov
and
lods
cmp
xor
dec
or
imulb
inc
cmp
cmc
cmp
sbb
rcrl
lret
aam
dec
jge
or
mov
inc
mov
imul
mov
jbe
push
lret
or
add
imul
cmp
and
stc
int3
push
ja
jo
fcomip
mov
xchg
xchg
fdivl
push
mov
push
arpl
adc
cmp
pop
int
xor
or
dec
inc
iret
fistl
lcall
and
movsl
dec
out
movups
xchg
jecxz
adc
in
cmp
stc
add
mov
sbb
or
clc
mov
push
test
loop
mov
cld
and
push
hlt
push
je
mov
pop
jge
pop
orl
testl
jg
mov
jno
inc
jecxz
ds
xchg
fdivrs
cli
iret
push
popf
mov
enter
xchg
xchg
cld
int
aam
test
bound
cmpl
daa
in
mov
and
mov
popf
adc
scas
in
movl
mov
push
std
popa
clc
cmc
lret
loop
stos
popf
and
or
xor
adc
pop
lret
lds
dec
jge
push
loope
test
mov
addb
iret
xlat
mov
je
lods
add
ret
inc
call
or
pop
fucompp
push
pop
mov
or
lods
cmp
add
cltd
lods
and
inc
rolb
test
jno
test
push
push
and
lods
push
cltd
cmc
inc
lcall
mov
push
jmp
push
push
out
or
test
es
ds
pop
leave
dec
dec
enter
iret
pop
test
mov
mov
or
les
insl
mov
ljmp
sub
lock
dec
or
jg
addr16
jb
mov
fistl
aam
out
inc
push
hlt
les
and
ja
lea
cmpsb
movsl
pop
and
test
lock
mov
mov
inc
sub
inc
adc
xor
and
out
cmp
lods
lock
pop
pop
ret
sub
and
adc
fmull
out
jl
mov
mov
cld
mov
xor
je
inc
into
popf
iret
cmp
add
pop
mov
iret
mov
mov
adc
cmpsb
sub
xor
pop
pop
or
mov
ljmp
mov
pusha
ret
out
orl
add
jp
roll
or
jbe
jecxz
lret
je
push
xor
inc
addr16
ret
xchg
in
lret
pop
dec
xchg
ljmp
push
and
sbb
pushf
fildl
ja
push
enter
repz
int
cs
xor
inc
mov
sub
mov
pop
add
pop
dec
xchg
pop
mov
jg
jne
out
mov
push
pop
mov
push
pop
lods
push
cmpsl
test
or
sbb
mov
pushf
adc
and
jmp
sub
sub
inc
dec
xchg
mov
mov
stc
pop
jmp
jg
mov
adc
lcall
lret
cltd
sahf
leave
sbb
sbb
jecxz
dec
js
xchg
lret
das
mov
clc
stc
inc
pop
dec
dec
add
ficoml
test
push
pop
test
sub
outsb
in
jb
jmp
mov
sub
pop
in
push
jno
or
sbb
mov
flds
ret
in
fld
outsl
and
pop
adc
iret
jns
xchg
gs
jl
add
js
mov
sarl
xchg
filds
jne
ret
jmp
xlat
pushf
lea
mov
pop
leave
sbb
mov
sahf
or
push
and
push
pop
lods
push
mov
jg
sub
scas
imul
inc
loope
lret
paddq
leave
subl
pop
cmp
std
cli
inc
ret
mov
lahf
pushf
sbb
jno
insb
je
dec
push
dec
std
dec
cmp
jge
jnp
dec
mov
inc
icebp
outsb
imull
in
loopne
aas
ret
dec
imul
in
andl
jns
movsl
mov
pop
sbb
sbb
ss
xchg
add
aam
stc
jns
push
lret
lret
nop
mov
enter
sbb
mov
sub
sub
jmp
xor
iret
cmp
cmpsl
jmp
or
fcmovnb
and
cmpsb
into
pop
xchg
jle
pop
ljmp
fildll
data16
jge
movsl
pushw
clc
xchg
adc
cmpsb
mov
data16
fistpll
cmp
fsubrl
lcall
cmpsl
mov
icebp
jmp
push
and
shl
xchg
jae
mov
inc
lea
loope
fcomi
push
jo
das
xchg
mov
fnstsw
dec
shrl
lods
inc
add
inc
addr16
iret
cld
outsb
push
inc
imul
pop
clc
mov
jne
fiaddl
dec
sub
pushf
mov
adc
lret
cmp
in
getsec
movb
add
dec
adcl
cmp
or
test
pop
cmpsb
fistps
dec
mov
scas
and
fstpl
out
cmp
jmp
test
pop
xchg
mov
mov
fs
jecxz
jbe
cli
cltd
adc
int3
inc
test
mov
rolb
mov
in
inc
adc
lret
jl
fidivrl
iret
mov
add
sub
enter
out
pop
lret
lahf
rol
xor
mov
in
push
xchg
cmp
pop
test
fs
mov
push
aas
mov
mov
aaa
inc
jp
adc
sti
fdivr
xor
sahf
sbb
es
repnz
and
push
repz
dec
jb
or
pusha
inc
test
push
or
mov
adc
sub
es
jae
jecxz
cmc
jb
mov
xor
mov
pusha
inc
out
outsl
push
fs
iret
orb
inc
cmp
jp
ret
xchg
scas
inc
lods
and
inc
sbb
fimull
mov
jb
std
arpl
push
rolb
sub
out
fisttpl
and
incb
push
sti
shl
inc
mov
and
mov
fiadds
or
add
outsb
mov
add
insl
jne
aad
and
popa
clc
jo
stos
lods
push
daa
jns
and
fcompl
lret
adc
mov
ret
scas
push
ja
test
xor
pop
sbb
daa
xor
mov
cld
in
pushw
dec
cmp
loope
cmp
cmp
cld
mov
int3
jbe
jge
bound
jl
sti
adc
test
lea
fnstenv
sbb
sarl
scas
rcll
inc
fistl
aaa
test
or
aas
cmp
sbb
cmp
shll
push
fs
sahf
mov
sbb
pop
test
repnz
push
add
cs
imulb
aam
add
int3
sub
mov
pop
mov
cwtl
xor
mov
cmpsl
push
push
out
cltd
movsl
out
xor
adc
aaa
std
push
push
cmp
xor
stc
divl
lret
adc
xor
jg
or
jecxz
movsl
gs
jbe
or
jg
pop
bound
sub
add
push
aam
xchg
cmp
pop
fidivrl
add
cmp
push
jl
out
push
xchg
sub
inc
adc
xchg
jp
addr16
das
pop
sbb
inc
cmp
sarl
into
roll
scas
cmp
push
pop
cmc
add
shlb
sbb
push
hlt
in
push
int3
xchg
xchg
cld
dec
xor
and
pop
inc
mov
ret
xchg
adc
jnp
rsqrtps
psllq
pop
out
lods
dec
mov
and
cmp
lahf
loop
inc
and
xor
cmpsb
cmpsl
jnp
or
jne
jo
les
aas
fstp
imul
pop
fstps
mov
sbb
push
pop
stos
cmpsl
push
and
mov
mov
or
jle
ret
out
mov
in
mov
stos
aad
push
aas
cli
cmpsb
and
mov
mov
popa
or
idiv
mov
xchg
outsl
or
aaa
or
mov
aam
sub
push
jl
mov
aas
dec
scas
into
clc
loop
mov
fldl
insl
out
test
sub
dec
aas
push
shrb
cmc
adc
push
icebp
dec
jb
bound
stc
pop
ljmp
jns
mov
jle
or
stos
jae
and
test
sbb
cmp
out
dec
push
decb
insb
pushf
das
dec
movsl
aas
movsb
mov
add
sub
cmp
ret
add
ss
jge
jnp
imul
cmpsb
cld
sbb
inc
adc
inc
les
loop
jmp
out
movsl
test
jno
scas
cmp
ds
jmp
in
cmp
xchg
mov
xchg
push
inc
pushf
mov
mov
mov
cmp
mov
mov
cmp
fldl2t
and
iret
jbe
sub
test
rol
fists
adcl
sar
add
mov
mov
cmc
adc
mov
clc
mov
xor
sbb
jecxz
mov
repnz
sbb
xchg
sti
or
sahf
xor
sub
jns
fs
inc
ret
mov
aas
in
mov
ljmp
aas
and
pop
cmpb
xor
push
jmp
push
sub
lods
into
inc
lea
popa
xchg
inc
and
sbb
push
sub
shlb
lcall
icebp
pop
cmp
fcoml
or
pop
xor
jae
add
popf
pop
xor
sbb
jno
insb
mov
dec
rol
dec
dec
loop
shl
jecxz
cli
mov
xor
sarl
mov
ror
out
ss
insb
cmp
out
xchg
loope
dec
inc
inc
arpl
in
cld
xchg
add
mov
out
les
and
roll
arpl
pop
out
orb
sti
push
popa
mov
pop
fs
jge
mov
adc
cmp
lcall
mov
incb
xchg
pshufw
stc
fmuls
call
jns
pop
xchg
fldt
ja
sbb
mov
adc
xchg
push
jnp
dec
add
