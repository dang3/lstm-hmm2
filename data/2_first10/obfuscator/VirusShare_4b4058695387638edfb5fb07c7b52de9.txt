push
call
ret
ret
push
push
mov
lea
pop
iret
sbb
in
sbb
add
and
add
fists
lock
sub
in
inc
test
fs
inc
loopne
cmp
ss
test
rorl
sti
sbb
mov
pusha
cmp
icebp
decb
cmpsb
pminsw
xor
pusha
test
nop
pop
into
ret
into
xor
je
cmp
sbb
mov
in
stos
std
clc
push
test
test
sbb
imul
push
xchg
aas
test
aas
sbb
loope
mov
shlb
xlat
push
push
inc
pop
push
add
gs
jle
dec
pop
icebp
jns
sub
sub
popf
and
mov
pop
bound
mov
pop
dec
lods
mov
jecxz
jo
sbb
fs
mov
mov
pop
rorb
jge
push
lahf
xchg
lds
sub
inc
cld
test
xchg
filds
sbb
test
inc
bound
ret
in
pop
push
jo
adc
shl
cmp
inc
in
lock
xchg
popl
cld
dec
sahf
sbb
out
jp
daa
fs
xchg
loopne
cmp
add
outsb
hlt
jno
fldcw
cmp
xchg
jge
adc
xor
inc
xchg
popa
cmp
push
fcmovne
mov
mov
jmp
jb
divb
mov
jno
scas
push
mov
xchg
add
mov
or
insb
shlb
ret
jns
mov
mov
std
repz
xchg
push
cwtl
push
push
push
push
push
and
inc
test
stos
jecxz
xor
ret
jnp
dec
enter
sar
mov
inc
imul
pop
pop
idivb
es
mov
mov
loope
xchg
leave
mov
adc
lret
add
pop
fldl
out
mov
out
jb
and
mov
jge
jae
stc
fidivrs
int3
push
jns
cmpsl
and
fnstsw
xchg
push
jp
push
rcr
and
inc
aaa
dec
lods
and
test
jg
inc
test
cmpb
nop
dec
mov
insb
stos
cld
cmp
push
mov
jl
pop
mov
cli
mov
adc
xchg
jg
xor
add
filds
stc
pushf
bound
add
lahf
cmpsl
sbb
jmp
mov
and
adc
xlat
mov
fmull
je
dec
jae
pushf
mov
iret
lret
test
ja
mov
nop
push
aam
pop
lea
lea
cmp
xchg
xor
and
mov
jae
or
push
mov
push
enter
sti
call
mov
pop
add
stos
aad
xchg
shrl
les
and
and
out
outsl
fsubrp
arpl
sti
cli
lods
stos
imul
lret
xchg
dec
mov
inc
xchg
or
lods
jne
fwait
cmc
xchg
push
mov
xor
lcall
mov
jg
sub
fcompl
mov
pushf
aam
push
inc
fs
leave
insb
je
adc
jmp
sarl
sbb
xchg
bound
sti
cmc
test
insb
sti
push
jmp
push
inc
jmp
or
movsb
add
mov
xchg
xchg
or
sarl
inc
je
push
cmp
add
int3
cltd
xor
clc
aad
lret
xor
mov
or
push
mov
pop
jle
daa
jle
or
sub
andl
sbb
sub
fsts
mov
jp
gs
mov
hlt
dec
cwtl
fdivr
add
inc
and
xor
jmp
cwtl
call
daa
loopne
lahf
cmp
faddp
xchg
mov
in
pop
nop
movsb
add
sbb
rorb
adc
arpl
es
ljmp
push
movsb
in
jae
dec
icebp
xor
dec
ud0
loopne
pop
ret
xchg
ljmp
clc
sbb
out
mov
push
xor
or
es
mov
int
push
sbb
adc
sbb
mov
outsl
mov
pop
ja
pop
pusha
xorl
xor
dec
or
inc
mov
outsl
dec
stc
xor
lock
push
js
imul
inc
dec
pop
jp
mull
pushl
pop
pop
cmp
pop
cli
addr16
outsb
jecxz
dec
int
movsb
push
jmp
leave
sub
out
repnz
out
insl
cmp
or
xor
out
inc
sbb
nop
shrb
and
lret
bndstx
cltd
outsl
enter
and
cmpsb
cltd
out
inc
pusha
sub
pop
inc
sahf
nop
aas
xchg
nop
push
mov
fisttpl
jae
add
rolb
dec
mov
add
pop
mov
fldl2e
int3
pushf
cmp
mov
push
adc
add
aaa
xor
loopne
or
addr16
into
mulb
add
xor
xor
add
in
add
dec
int
push
or
mov
dec
data16
incb
mov
jecxz
xor
push
add
sub
les
jge
scas
mov
imul
int3
xor
mov
movsb
dec
inc
dec
repz
jnp
mov
loop
jb
fisubrs
or
jge
adc
push
push
push
fwait
cmp
jge
lds
inc
filds
in
and
lea
in
aaa
popf
hlt
and
jne
sbb
pop
mov
aas
and
inc
pop
mov
lcall
jge
insl
dec
not
std
cld
mov
inc
insl
push
mov
sbb
lahf
stos
and
loopne
mov
lret
jl
loopne
xchg
sub
or
mov
pusha
movsl
cmp
outsl
jnp
cmp
sub
pop
inc
pop
xor
popf
dec
int3
mov
mov
mov
stc
push
and
cmp
mov
sbb
shr
ret
cmp
loopne
enter
push
xchg
xor
out
lods
and
xorb
jmp
lret
jnp
es
addr16
inc
mov
sbb
mov
jae
decl
cmp
das
push
pusha
iret
lea
xor
psrld
das
sbb
lret
stos
bound
jl
mov
push
rcrb
fcmovne
daa
jle
dec
push
fstps
mov
pop
popa
adc
cli
call
mov
sub
xchg
imul
insl
mov
inc
push
push
outsl
ss
cli
sbbb
test
push
adc
divb
repz
sbb
inc
stos
add
in
loope
pop
or
lods
sub
inc
mov
and
cmpl
out
cmp
in
shlb
or
pushf
push
lahf
in
pop
push
ljmp
imul
mov
or
popf
fiadds
jns
fnstsw
repz
pop
enter
cld
mov
nop
adcl
dec
shll
arpl
or
ret
fcoml
test
js
push
jae
push
inc
imul
aaa
jno
push
imul
hlt
mov
push
sbb
cmp
pushf
adc
add
in
inc
sarl
push
test
sbb
lods
sti
hlt
mov
jecxz
jae
push
ljmp
icebp
popa
sbb
aam
cltd
test
sbb
notl
xor
inc
jp
mov
adc
sbb
shr
mov
pop
call
cs
and
ja
idivl
loopne
mov
cwtl
lods
insb
sub
cmpsl
add
cltd
icebp
jne
xor
pop
fstpl
push
mov
push
std
xor
jle
das
rorl
pop
imul
inc
test
adc
jmp
sti
out
xor
jns
inc
pop
mov
mov
call
sub
inc
jo
mov
add
mov
inc
push
add
jg
and
xchg
jmp
xor
nop
add
pusha
inc
xchg
imul
lods
sub
repz
test
add
xchg
mov
xchg
clc
mov
packsswb
les
int
iret
jle
movsb
add
and
mov
int
dec
xchg
dec
fcomi
and
jmp
aas
cmpb
xchg
rcll
mov
hlt
push
movsb
outsb
mov
jb
aam
sub
dec
adc
loopne
mov
sbb
push
insb
cld
push
or
or
pop
stc
mov
xchg
imul
xor
dec
pop
shll
push
fsubr
cltd
inc
dec
test
add
pop
rcr
sahf
imul
out
int3
or
inc
mov
mov
pop
cmp
popa
cld
push
mov
add
sbb
repz
jne
addw
shlb
lahf
xchg
lock
inc
and
testb
mov
mov
sub
xchg
fsubrl
mov
int
in
rcll
aam
adc
scas
xchg
clc
data16
mov
inc
imul
cld
loopne
cwtl
mov
xor
loope
xchg
jnp
mov
and
or
and
xor
jne
insb
psllw
lret
bound
xor
xchg
movsl
jge
sbb
je
pop
mov
mov
andb
mov
pop
pop
sbb
and
lock
or
je
sub
ds
pusha
mov
test
out
dec
dec
xor
addl
cmp
dec
mov
scas
js
pusha
aaa
xchg
or
ds
lock
dec
lods
inc
jae
sbb
add
cltd
cmp
sub
mov
cld
lods
sti
adc
stos
add
lods
shl
xchg
xchg
cmp
scas
lahf
xchg
mov
loope
cmpsb
pop
pop
pop
dec
xor
and
int
mov
ja
sbb
push
fiaddl
inc
jne
dec
sbb
dec
hlt
sbb
popf
cmp
repnz
mov
pop
daa
stos
xchg
shll
out
cmpsl
xor
loop
testb
cmp
mov
or
push
xor
lock
adc
lock
nop
je
sbb
mov
jnp
incl
dec
sbb
push
test
pop
xchg
adc
hlt
imul
aas
pop
and
ss
sbb
and
push
add
imul
cmp
and
arpl
int3
in
sbb
data16
or
pop
mov
sahf
iret
dec
inc
shl
mov
loop
pusha
mov
subl
outsb
cmpb
sub
movsb
icebp
insl
dec
xchg
leave
push
shll
inc
sub
leave
mov
in
es
mov
jae
pop
enter
add
jo
aam
test
in
add
out
mov
test
icebp
int3
sub
in
lcall
mov
out
push
and
dec
fs
stc
cmp
and
mov
es
and
and
push
xor
aas
test
push
sbb
decl
dec
int
in
mov
mov
mov
pop
jle
mov
push
dec
jbe
or
push
add
ljmp
mov
loopne
rorb
pop
test
into
fs
mov
and
push
dec
xchg
dec
fdivrs
inc
sti
sub
xor
les
xchg
cli
and
ss
stos
lock
xchg
dec
ljmp
mov
push
stos
jb
xchg
xor
push
lods
cmp
daa
movsb
lds
push
negb
mov
xchg
es
cmc
insb
cmpsb
cli
test
sbb
push
sbb
lahf
jge
adc
mov
mov
test
dec
pop
jnp
sar
test
adc
pop
and
ljmp
loop
jmp
adc
mov
jecxz
ret
jle
stos
mov
ljmp
push
es
scas
dec
lds
lahf
jecxz
js
data16
test
pushf
outsl
addl
jb
adc
das
inc
xor
push
pop
push
jp
push
dec
ficomps
hlt
add
arpl
cmp
icebp
cli
dec
xchg
test
iret
dec
les
in
mov
in
sbb
or
notb
sbb
sbb
sub
adc
mov
xchg
movl
xor
push
inc
arpl
xchg
stos
shl
stos
xchg
arpl
in
add
xchg
ja
outsl
xchg
cs
xor
xchg
xchg
push
jmp
pushf
add
push
cmpsb
pusha
loop
dec
mov
in
fwait
inc
and
or
xchg
xchg
jle
pop
cmp
or
es
out
addr16
pop
jmp
push
out
sahf
ja
mov
cwtl
mov
cwtl
ja
rcll
ret
dec
jge
int3
jno
rorb
cmpsb
xchg
xchg
pop
lahf
mov
nop
movsb
sub
mov
sbb
adc
pop
fstl
push
scas
cmp
scas
fistl
imul
mov
cltd
fnsave
push
int3
aam
xchg
adc
sub
sbb
rcrb
in
cmp
jle
fcoms
mov
lods
xor
out
add
stos
clc
outsl
pop
insb
sub
outsl
cld
push
add
and
or
aam
add
mov
push
push
in
sbb
in
adc
adc
fisttpll
ljmp
jmp
jmp
mov
lret
pop
or
gs
mov
in
adc
dec
test
andl
movb
imul
dec
icebp
xor
cld
addr16
dec
in
in
mov
aaa
xchg
outsb
pop
addr16
sub
popf
fwait
xchg
dec
push
inc
loopne
sbb
xchg
push
jnp
jbe
sahf
dec
fwait
pushf
xor
jg
aas
ds
mov
in
fadds
stos
cmp
inc
jp
imull
out
in
ljmp
cmp
ret
mov
aaa
addb
adc
mov
jae
movl
xchg
jge
sub
jns
test
inc
push
addb
and
push
sub
pusha
leave
test
jg
in
add
cmpsl
js
popw
faddl
jg
repz
sub
cmp
pop
mov
mov
mov
add
mov
cmp
dec
xor
xchg
pop
xor
jns
push
xchg
xchg
clc
cli
push
int3
lea
add
mov
or
ret
lcall
mov
pop
sub
int3
mov
xor
jecxz
in
mov
mov
mov
test
dec
xor
test
pop
jae
adc
pop
push
dec
add
sbb
mov
jl
xor
aaa
sbb
sbb
cli
ja
jb
pop
xor
lods
mov
aas
fisubrs
jo
test
mov
in
das
add
imul
test
cli
pop
fimull
add
mov
adc
test
mov
mov
aad
loop
ja
lret
inc
insb
movsl
push
mov
or
add
cltd
cmpsb
push
xor
adc
adc
mov
into
inc
and
xor
push
addr16
inc
or
rolb
xor
inc
push
movsl
fs
jecxz
inc
push
push
xchg
aas
jg
or
xchg
jmp
mov
jge
scas
adc
ljmp
mov
in
or
test
mov
out
lock
xchg
adc
cwtl
cmpsb
sub
pop
fadd
and
pop
pop
cli
cmp
ss
mov
push
ret
mov
popa
mov
sbb
sub
pusha
and
hlt
idivl
arpl
pop
insl
xor
cli
outsb
sub
mov
loope
xchg
mov
push
pop
push
cmpb
insl
add
pop
lret
sbb
js
fidivs
mov
fisubs
push
sub
enter
inc
jns
dec
jp
mov
out
jbe
ljmp
add
repnz
mov
ret
inc
add
in
ljmp
push
nop
dec
mov
and
sub
xor
call
cld
arpl
xor
int
sbb
add
les
mov
xchg
push
push
xchg
cwtl
add
sbb
lea
xor
sbb
inc
add
aaa
add
cmpsb
jo
sub
inc
jp
push
aam
xchg
cmpsl
add
jae
icebp
bound
jmp
push
lods
xchg
xlat
xchg
jg
or
mov
gs
or
imul
pushl
test
cmp
fistps
and
jns
fisttpll
xor
xchg
add
inc
orl
xchg
cmp
jmp
mov
dec
xlat
movl
mov
out
cmp
pop
int
mov
adc
mov
mov
adc
sti
mov
or
inc
mov
in
bound
xchg
jp
or
inc
lea
or
jns
movsb
jecxz
sti
or
mov
js
or
xchg
pop
pop
cmc
mov
adc
lahf
inc
into
sahf
ret
int
mov
jbe
push
adc
pushf
push
imul
xchg
mov
or
in
cmp
or
jg
jno
xchg
loopne
adcb
out
dec
mov
je
std
inc
adc
jns
mov
das
lahf
data16
jle
fs
or
sub
cmpb
lock
sahf
pop
divl
mov
cmp
hlt
cmp
push
sub
cs
enter
inc
test
repz
pop
movsb
test
and
push
mov
cmpsb
aam
loop
lahf
movsl
sarl
popa
repz
xorl
sub
mov
xor
jmp
or
xor
mov
cmp
dec
inc
or
push
movsb
sahf
mov
mov
xor
push
nop
jl
cmc
jmp
push
xor
add
jae
jns
movsb
jecxz
nop
int3
mov
push
and
mov
inc
orl
les
shlb
push
out
dec
xchg
adc
pop
ret
test
mov
fidivs
adc
mov
call
lock
cmp
data16
scas
out
hlt
dec
xor
imull
mov
dec
outsb
lock
stc
or
xor
or
mov
or
pop
mov
and
dec
dec
lds
push
pop
add
jp
lods
out
aad
test
pop
inc
xchg
subl
movsb
in
jl
fs
ss
insl
pushl
daa
fdivp
push
cmp
mov
push
test
lret
cmp
xchg
push
in
push
cli
shl
xchg
mov
ret
dec
leave
inc
mov
out
xor
jp,pt
and
mov
inc
decl
mov
pop
push
dec
xchg
pushf
sub
add
mov
aaa
mov
jmp
jne
stc
push
or
sub
scas
sub
int
repz
lret
mov
push
add
push
and
lcall
ja
dec
jns
xor
out
std
stos
dec
sahf
mov
imul
adc
or
inc
loopne
ja
or
adc
test
push
hlt
lret
push
mov
mov
mov
loope,pt
repz
or
ret
pop
and
fwait
push
lcall
cld
ljmp
inc
push
jmp
lods
push
mov
mov
pusha
cltd
lcall
adc
cli
test
in
mov
lahf
mov
fs
jbe
movb
fimull
cmp
outsl
push
mov
jb
rcrb
inc
jo
fwait
mov
jne
mov
jno
loopne
sub
test
inc
andl
enter
mov
hlt
add
jne
sahf
inc
lcall
ret
xor
adc
xchg
add
ficompl
push
in
pop
xor
cmp
rorl
mov
inc
test
adc
iret
ret
jno
rorb
cli
lea
stc
movsb
dec
pop
mov
adc
inc
adc
ss
decl
stos
fildl
lods
enter
dec
mov
jnp
fdivrl
and
pop
lahf
pop
in
pop
fstpt
sub
and
ret
loope
lret
out
and
in
rep
pmulhw
xor
mov
jae
push
sub
rolb
lods
adc
dec
push
push
mov
dec
mov
adc
rcr
fildll
inc
dec
dec
xor
xchg
je
mov
xchg
aad
sub
xsha256
cmpsb
adc
xchg
jno
loope
cli
out
mov
dec
shll
jo
movsl
xor
mov
ds
add
cld
pop
fwait
xor
out
jb
adc
adc
xchg
or
xor
test
sub
in
xchg
xor
push
lds
push
mov
sub
and
jle
testb
mov
mov
inc
mov
ja
out
inc
mov
in
scas
ljmp
adc
ror
mov
std
jne
push
inc
xor
mov
aas
sub
cmp
call
mov
mov
nop
cmpsb
mov
call
outsl
sub
push
insb
push
or
test
adc
icebp
xlat
mov
je
movsb
and
lret
add
inc
imul
outsl
out
inc
xchg
outsl
sbb
add
dec
xor
mov
sub
fsubl
cmp
ss
inc
pop
push
fiadds
push
jnp
push
mov
mov
jge
jae
cmp
jge
in
adc
lahf
jecxz
and
xchg
testl
adc
insb
fdivrl
xor
out
pop
pusha
pop
loop
xchg
test
testb
mov
pop
adc
rcr
mov
outsb
adc
jnp
adc
scas
int
sarb
push
cmp
cmp
push
cmc
jbe
fstpt
or
mov
ljmp
adc
ret
push
fisubl
shll
aas
mov
repz
loope
pop
ror
mov
dec
js
dec
push
cmp
lods
in
inc
sbb
pop
shrl
jge
jne
notb
aam
repz
dec
jge
add
add
pusha
lock
lea
inc
push
or
iret
mov
cwtl
dec
inc
lods
jg
insb
push
add
push
insb
fidivs
pop
jbe
jp
inc
dec
mov
lods
xchg
stos
push
mov
xchg
fcoms
mov
cmp
fisubrl
shll
mov
add
xchg
movsb
ds
popf
or
ja
push
mov
mov
pop
sahf
iret
pop
add
dec
es
stos
pusha
sbb
outsl
test
les
das
lock
movzbl
incb
popf
test
int
fisubs
int3
adc
jnp
test
bound
ss
mov
imul
jnp,pt
ret
lcall
jo
or
cmc
cmp
fsubrl
lds
js
sbbl
push
mov
sbbl
cmpsl
xor
fldt
stos
mov
cli
shr
pop
mov
stc
stos
or
fidivrs
icebp
sub
mov
push
pop
or
pop
fidivrl
mov
cmpsl
push
inc
mov
mov
sub
ja
mov
rcrl
jnp
les
dec
fildll
rorl
clc
loopne
das
insl
clc
jno
mov
mov
or
cwtl
das
pusha
inc
push
jno
add
push
push
mov
mov
jp
sub
repnz
xor
push
push
ret
or
loop
es
mov
push
pop
fistpll
fimuls
xor
pop
sti
jo
mov
into
movsl
pop
es
mov
pop
mov
push
add
push
stos
mov
mov
pop
push
adc
fldl
stc
push
test
push
in
dec
jo
mov
sub
xchg
cld
inc
mov
insl
orb
addl
test
cmp
mov
lds
mov
sub
fstpt
xchg
mov
mov
or
cmp
fistps
push
out
bound
movups
push
int
xchg
sub
dec
insb
out
sbb
xchg
inc
mov
pop
ja
sub
aad
cs
outsb
add
jge
push
cmp
je
push
jmp
imul
cltd
xor
in
xor
inc
adc
loopne
mov
shlb
sahf
movsb
fdiv
mov
mov
testl
clc
dec
stos
adc
xorb
bnd
jg
ja
and
arpl
in
fldt
cltd
xor
mov
lahf
rcll
xor
arpl
ret
xchg
push
addr16
stos
ljmp
orl
lock
nop
pop
xchg
mov
xor
jns
pop
aam
cmp
xor
cmp
add
dec
cmpsl
or
imul
loop
cmp
pop
push
pusha
stc
lret
nop
dec
cld
push
jmp
repnz
mov
mov
dec
xchg
lea
add
imul
cmc
xlat
or
push
xchg
jae
in
cwtl
out
fmul
outsl
cmp
aam
dec
imul
jmp
sbb
jo
pop
mov
dec
lahf
or
lahf
lock
cs
das
push
xchg
test
cmp
or
addb
push
mov
cwtl
mov
jo
and
mov
cltd
mov
xchg
bound
shll
in
dec
push
jb
ljmp
leave
gs
dec
and
notl
dec
sar
mov
xchg
popa
mov
ret
bound
out
jl
fs
pop
gs
inc
inc
ja
cmpsb
dec
daa
lods
lods
jmp
std
test
js
and
stc
mov
mulb
sarl
inc
sbb
xor
das
jno
sub
add
xorb
repnz
in
dec
in
fwait
pop
pop
push
je
jae
dec
push
adc
cmp
ret
mov
sub
mov
lret
adc
imul
push
cmp
and
int3
push
mov
xchg
jecxz
in
cltd
inc
sbb
sbb
jne
repnz
and
bound
fsubrs
loop
pop
xchg
fbstp
jmp
xor
or
sbb
les
shlb
dec
int
leave
mov
cmp
pop
jbe
in
call
add
in
ja
scas
jp
inc
sub
aas
test
jo
jecxz
mov
dec
push
scas
lods
jmp
mulb
sub
pop
ret
inc
xor
fisubs
mov
loopne
xchg
std
inc
out
in
jp
and
jnp
les
add
push
push
push
jge
lods
mov
out
je
lods
sbb
test
movsb
loop
lcall
cmp
sahf
or
jecxz
jle,pt
imul
push
dec
ret
fldenv
in
dec
cmp
daa
cmp
cmp
clc
mov
mov
cmp
mov
cmc
sbb
cmpb
push
add
repnz
mov
cmp
jg
fwait
js
shlb
xor
je
hlt
repnz
pop
pop
adc
scas
imul
in
jae
test
pop
xor
lds
cmpsl
mov
fwait
pop
hlt
dec
jp
sbb
sbb
shlb
cld
test
popa
nop
push
cmp
mov
or
add
adc
mov
push
in
cld
sub
sbb
adc
incb
movsl
pop
jg
xor
jne
in
and
scas
adc
jecxz
scas
inc
popa
rolb
ja
push
in
or
fistpll
or
sub
dec
ficoms
icebp
out
pushaw
jnp
cli
pusha
popa
inc
adc
add
and
sub
lock
int
cmp
outsb
mov
jb
push
xor
movsl
adc
xchg
xor
dec
out
and
dec
rolb
std
insb
in
in
add
pop
loop
std
mov
mov
out
or
add
or
dec
and
insb
pop
cmp
mov
jge
fs
jle
cmpsb
mov
lods
add
jb
inc
add
adc
rep
xchg
adc
mov
push
mov
inc
inc
dec
mov
scas
jnp
inc
pop
dec
lods
xor
mov
stos
lods
rclb
int3
cwtl
fdivr
cld
push
out
mov
jl
gs
jg
stos
jg
lret
lret
mov
inc
push
pop
je
int3
cs
sarb
push
call
stc
sbb
aam
jo
fdivs
data16
stc
sub
xchg
addr16
rorl
adc
ret
scas
repz
movsb
cs
jns
add
xchg
subl
lock
adc
in
jns
mov
jnp
push
test
data16
dec
xchg
clc
mov
aad
pop
adc
inc
mov
jge
stos
out
imul
mov
inc
nop
cltd
lea
xor
ss
stos
push
lods
rcll
pop
xchg
imul
sbb
sbb
bound
fstpl
sbb
ucomiss
push
popf
test
pand
jecxz
in
mov
inc
mov
scas
push
and
xchg
popa
lret
xchg
jo
rorl
jns
sahf
xchg
pop
xor
ficompl
dec
adc
add
jbe
daa
aad
addb
pop
cwtl
popa
leave
repz
bound
push
sub
sub
test
lret
xchg
vmovupd
pop
mov
mov
lods
stos
mov
enter
movsb
sub
aad
push
test
ret
cmc
cltd
inc
pop
imul
fistpll
push
daa
repnz
loope
jns
nop
bound
jnp
enter
sub
xchg
push
mov
push
sbb
xchg
dec
mov
pop
jg
pop
sbb
or
cmc
push
cltd
sub
push
sub
sbb
notl
lret
repnz
rcrb
xchg
outsb
enter
mov
adc
xor
roll
cmpsl
iret
test
lcall
or
int
mov
enter
xlat
mov
jo
sbb
and
push
xchg
jp
dec
inc
pop
add
pop
adc
pop
or
dec
mov
jbe
jmp
dec
push
js
adc
lods
movsl
xor
std
aad
mov
jo
rcrl
mov
cmp
fdivs
rclb
ret
mov
js
in
xorb
aaa
pushf
mov
jnp
mov
jns
xchg
sbb
and
pop
cmp
lods
dec
pop
or
sar
je
add
out
stos
pop
push
push
sbb
xor
daa
mov
test
cmpsb
push
pop
jge
movsl
pop
int3
sahf
jne
lcall
popf
xlat
lahf
push
test
bound
inc
inc
and
rcrl
pop
xchg
pop
out
shrb
loopne
test
pop
fcmovnbe
lret
xchg
shrb
out
or
aam
shll
lock
flds
lcall
shll
cmc
inc
jne
mov
sub
shrl
pop
lods
jmp
mov
in
dec
xor
or
insb
push
addl
add
inc
cmc
fdivp
icebp
nop
cmpsl
jge
ret
mov
in
cmpsl
out
pushf
push
push
repz
rorl
mulb
das
stc
adc
pop
in
pop
push
cltd
sub
mov
jge
in
push
outsl
out
cmp
sub
sub
push
lahf
clc
inc
stos
xchg
into
mov
lcall
fiaddl
jne
jae
pushf
fdivl
fstl
fsubs
pop
je
out
mov
pop
sbb
aaa
popa
mov
mov
dec
insl
icebp
test
fcoms
jnp
loope
nop
ds
fbstp
adc
mov
inc
jle
lcall
adc
mov
inc
lock
loop
mov
loop
sub
xlat
adc
scas
xchg
pop
into
aam
in
mov
pop
cs
loope
minps
add
xorl
in
sahf
ror
aaa
jg
dec
pop
xchg
push
fimuls
cmp
pop
dec
cmovl
jle
inc
or
xor
sbb
aas
sub
shrb
cmc
stos
cmp
push
jb
and
sbb
xor
lods
mov
adcl
hlt
scas
sysexit
icebp
xor
pop
jns
les
shlw
outsb
je
sbb
push
push
mov
jp
jl
pop
movsb
adc
jmp
lret
xchg
adc
in
aad
xchg
jl
mov
mov
xchg
push
xchg
data16
les
mov
stc
pop
push
rcl
test
adc
push
div
popf
xchg
pop
mov
inc
add
repz
jmp
mov
push
loopne
sahf
std
popf
mov
jae
jns
incb
xor
mov
adcb
mov
or
ffree
lret
dec
fisttps
cltd
mov
mov
int3
add
bound
ja
cwtl
addr16
xor
sub
xchg
setg
cmp
xchg
fs
pop
out
dec
mov
mov
divb
push
stos
stc
dec
call
jl
mov
loop
dec
push
pop
in
out
mov
rcr
iret
inc
insl
push
push
fadd
out
mov
mov
test
cmc
pop
lret
pop
jp
roll
push
sub
dec
mov
mov
cltd
pop
sbb
push
call
je
shlb
mov
cli
inc
fcmovne
ficoml
stos
aad
ja
xchg
mov
pop
sub
push
lea
fwait
rol
and
dec
sbb
inc
scas
mov
in
test
or
dec
mov
push
notb
lds
or
jge
pop
or
push
andl
pop
pop
aas
and
jl
xchg
aad
pushf
std
ret
xlat
fldt
sub
mov
jbe
pop
sahf
mov
sahf
xchg
inc
in
popa
jmp
or
jns
popf
dec
xchg
jnp
test
push
add
sbb
add
adc
or
jp
add
xor
out
dec
sbb
mov
daa
mov
arpl
mov
ss
clc
mov
jl
aas
lret
loopne
xchg
xor
das
add
cmp
in
mov
in
rorb
movsb
fs
or
daa
scas
test
call
xlat
push
push
aaa
and
fistpl
sub
adc
and
les
xor
lcall
cs
stos
xchg
push
xor
into
jle
mov
pop
cmpsb
dec
andb
xchg
jmp
jb
dec
sbb
pop
or
aad
fs
sbb
sub
in
add
push
adc
int
adc
pop
xchg
sbb
mov
or
push
pusha
adc
leave
cmp
pop
fnstcw
divl
js
jo
roll
rorb
inc
jo
add
movl
push
stos
pop
dec
int3
xor
push
add
in
ljmp
je
insl
jne
insl
xor
cmpsl
lcall
out
imul
pop
xor
cmp
push
add
add
in
dec
repz
inc
stc
xchg
adc
mov
pop
int
out
jno
xchg
xchg
push
movsl
pop
shl
xlat
call
outsb
mov
lret
std
jl
and
or
cmpb
inc
push
pop
push
into
jp
mov
fisttpll
xor
je
int
pop
cmpsb
mov
mov
movsb
movsb
inc
outsb
nop
pop
mov
dec
pop
mov
cmp
jnp
sub
inc
add
jecxz
ss
fcomip
add
xor
sbb
inc
xchg
mov
push
add
pop
dec
sarb
push
mov
dec
stos
inc
fistps
push
xor
inc
or
adc
scas
push
orps
pusha
xchg
test
fisubs
cmp
rorb
jns
jecxz
mov
dec
call
pop
adc
adc
mov
mov
push
sub
lods
jo
pop
int3
xor
loope
imull
les
cmp
movsb
dec
adc
pop
ljmp
dec
jne
or
int
in
in
inc
sbb
mov
es
xor
ja
setp
mov
aam
or
jns
jmp
data16
adc
hlt
mov
inc
movsl
sbbb
adc
pusha
pusha
cmp
jae
mov
xor
xchg
lods
and
movsb
sub
xchg
mov
into
or
jge
and
fisttpl
pushf
mov
inc
das
or
shr
ret
out
mov
orb
test
dec
lds
inc
pop
into
sahf
sub
jno
and
sbb
add
and
push
push
clc
ret
ss
mov
bound
dec
pop
fbstp
cmp
out
mov
inc
popf
jae
lock
gs
dec
aas
mov
xchg
cmp
scas
dec
fcompl
pop
jbe
cmpsb
or
cmp
popf
adc
pop
cmp
mov
loopne
mov
int3
xchg
lahf
imul
lea
sbb
inc
testb
lret
jnp
mov
fdiv
dec
mov
mov
imul
cltd
and
aas
cwtl
outsb
jle
mov
fnstsw
in
cmp
or
adc
pop
xchg
jmp
stc
push
fwait
js
pop
mov
jo
cmp
push
mov
addr16
scas
pusha
add
lret
pop
mov
les
sub
rolb
mov
inc
ss
xchg
scas
xchg
inc
xchg
cmpsb
dec
xchg
lds
cmp
clc
pushf
pop
outsl
dec
ja
addr16
dec
jbe
sbb
fmuls
add
sbb
or
dec
xchg
je
mov
sub
insb
mov
sbb
mov
fstps
jge
and
iret
sbb
push
push
daa
in
loope
dec
popf
mov
xchg
jl
std
aaa
nop
rorb
loope
cltd
mov
sbb
push
fiadds
mov
mov
inc
pop
mov
and
hlt
inc
xchg
daa
cltd
adc
mov
push
or
ret
loopne
iret
or
into
ret
sti
mov
xchg
pushf
pop
decl
jbe
and
push
pop
xchg
jle
loope
adc
fwait
rorl
adc
fisubs
jle
imul
lret
or
out
add
popa
iret
sti
popa
jb
sbb
bound
cmp
js
inc
jo
xchg
stos
sbb
mov
mov
pop
sar
es
test
sbb
stc
rorb
repz
das
mov
pop
jge
fsubs
sahf
ficomps
insb
loopne
sub
mov
xchg
jp
shrl
jecxz
enter
pop
xchg
sahf
test
rclb
stos
jp
mov
mov
sub
cmp
adc
ja
mov
push
lds
outsb
sub
scas
adc
shl
sub
dec
clc
jp
pop
sahf
cmp
inc
xor
dec
fcmovbe
rcl
int
cmp
sub
gs
mov
call
jae
data16
xchg
andb
sub
add
mov
pop
aaa
or
or
xor
dec
movsl
xchg
pop
mov
shlb
jmp
push
call
cmpsl
xor
add
aam
ds
into
sbb
cmpsb
scas
mov
pop
jge
pusha
je
fcomp
push
jae
int
in
jns
testl
and
fwait
push
or
xchg
xor
ficoms
js
xlat
je
ficoml
sbb
in
fucomip
sahf
movsl
jp
shld
fidivl
xchg
mov
sub
push
add
mov
outsl
xchg
jae
adc
push
inc
sbb
sarl
in
jp
add
lahf
out
xchg
xchg
add
push
adc
fsubl
xlat
mov
push
dec
adc
cs
cmp
mov
pushf
rcll
hlt
ss
add
addb
push
xchg
jp
sbb
lea
jge
inc
add
fwait
jp
aas
cmpsl
test
rcrl
add
mov
fbstp
and
bound
lret
mov
dec
push
testb
aam
xchg
jo
jl
xlat
cmc
and
dec
cmp
lcall
lea
push
stos
xchg
daa
mov
sarl
fcomip
inc
sbb
shlb
push
jnp
sbb
mov
rorl
ds
xchg
dec
jg
push
and
pop
mov
es
pop
in
lret
pop
dec
ja
lret
xchg
adc
push
sbb
sub
xlat
int
xchg
inc
pushf
lods
test
gs
add
arpl
xchg
cmp
dec
lcall
pop
outsb
andb
sub
pop
cwtl
xchg
sbb
test
jnp
dec
jl
xchg
fwait
outsb
xchg
add
mov
push
aam
stos
inc
or
popf
push
arpl
push
cwtl
test
outsw
cli
je
sub
push
mov
outsl
or
lcall
adc
test
incl
stos
dec
inc
xchg
xchg
adc
mov
mov
jb
adc
cmp
incl
sub
sbb
adc
mov
jns
mov
inc
cmpsl
loop
rorb
test
push
jmp
ret
test
loop
mov
mov
loope
xor
sbb
sub
rcrb
enter
out
icebp
adc
rcrl
fcom
jp
addb
mov
sub
dec
js
pop
sub
fs
jbe
leave
loopne
adc
jne
push
repnz
lods
sbb
pop
movsl
jmp
in
test
jg
mov
shrb
lret
orl
mov
aas
aam
push
mov
ficomps
inc
push
fldl
push
xchg
sub
aaa
and
xchg
push
xor
aad
dec
stos
fnstcw
je
sub
flds
outsb
push
or
xchg
mov
repnz
ficompl
ja
mov
sub
xorl
jne
or
push
mov
xchg
and
jno
pop
xor
imul
xchg
xchg
insl
leave
mov
aas
dec
in
lods
push
jae
jge
cmp
ljmp
or
mov
mov
or
sbb
adc
insb
add
cmp
and
in
cltd
add
xchg
add
loop
jmp
push
out
mov
inc
mov
push
jge
scas
icebp
int3
dec
mov
loop
test
int3
daa
fs
insl
into
fadds
xchg
cmc
sahf
or
jne
pandn
daa
sub
scas
fbld
sub
add
fdiv
cmc
rcrb
test
addb
orb
icebp
sbb
cld
out
push
add
pop
push
xor
dec
js
cmp
add
mov
add
test
movl
hlt
sarl
push
add
mov
xor
stos
ljmp
xchg
mov
js
cmpsl
pop
popa
mov
inc
repz
adc
push
dec
pop
outsl
lock
cmpsb
and
mov
out
or
pop
sub
lods
cmp
mov
cmp
lock
add
inc
mov
mov
pop
fdiv
loopne
popf
pop
mov
inc
mov
loope
int3
pop
mov
test
lcall
mov
pusha
icebp
push
mov
adc
cmpsb
mov
mov
dec
in
sub
jp
and
ret
mov
mov
mov
hlt
add
pusha
sub
mov
dec
cmc
sahf
mul
and
mov
repnz
dec
sti
aas
mov
lds
or
mov
popf
test
movsb
lock
daa
pushf
test
mov
pop
push
lods
das
lret
ja
jne
jmp
sarb
scas
pop
ss
js
xchg
movsl
fs
sbb
dec
mov
mov
cwtl
xlat
and
std
std
jmp
mov
nop
cmp
mov
dec
cmp
ret
cmc
movss
push
mov
sahf
mov
in
xlat
mov
cmp
mov
xlat
scas
sub
scas
sahf
mov
dec
addr16
bound
push
fcomps
jmp
and
mov
mov
addb
pop
pop
bound
jno
pop
jae
test
or
cmp
pop
int
cli
insb
scas
ret
mov
addr16
xchg
fidivl
and
jae
or
mulb
aaa
xchg
pop
sbb
iret
mov
sti
outsb
shl
mov
imul
jns
jg
call
mov
cmc
jmp
aam
nop
das
mov
test
js
data16
test
mov
nop
xor
arpl
shrl
add
cmc
push
mov
jp
dec
ja
daa
dec
icebp
mov
mul
pop
stos
fs
nop
subb
iret
in
arpl
xchg
mov
push
popf
mov
scas
xchg
cmp
xchg
lock
icebp
data16
push
fdivrs
out
push
xchg
mov
cmpb
xchg
inc
sbb
mov
out
mov
out
cmp
pushf
pop
mov
inc
iret
out
mov
popa
pop
xor
fdivrs
sbb
call
sbb
pop
movsl
mov
sbb
push
subb
lock
push
add
pop
clc
nop
and
mov
imul
cltd
mov
loop
shlb
std
test
stc
cmp
fcoms
nop
lcall
jl
inc
mov
mov
sahf
fidivrl
pusha
lods
push
jle
jg
inc
popf
pushf
xor
dec
mov
movhps
das
emms
dec
in
sub
enter
cmp
and
mov
add
fwait
lods
pushf
into
mov
mov
push
test
xchg
mov
pop
pushf
lods
push
scas
inc
popf
push
mov
xchg
test
mov
jl,pn
out
ret
adc
divb
clc
mov
xchg
jg
add
aas
fucomip
aas
lock
shll
mov
or
dec
jo
js
pop
adc
pop
stos
repz
pop
mov
int3
pop
dec
lahf
sbb
adc
adc
pop
mov
ja
stc
or
push
and
mov
mov
inc
cltd
scas
rolb
sbb
daa
shrb
fstps
imul
sub
xchg
cmpsb
test
and
or
jle
mov
divb
insl
jecxz
dec
dec
and
call
out
xor
jmp
flds
in
cs
out
mov
mov
imul
arpl
mov
mov
daa
jecxz
leave
adc
lahf
cmp
cmp
cld
mov
mov
sub
dec
cmp
jecxz
fcomps
mov
dec
pop
xchg
cmp
dec
mov
mov
push
lock
ljmp
add
iret
jl
test
stc
inc
mov
in
jl
jns
cltd
cmp
or
clc
pushf
enter
adc
and
sbb
mov
fsub
inc
lret
dec
rorl
sub
aad
jle
js
or
lea
mov
xchg
xor
pop
scas
outsb
pop
fs
ja
negb
jg
lock
cmpsl
inc
mov
aam
adc
int
mov
ja
pop
mov
push
push
out
jl
hlt
adc
pop
jnp
ljmp
aad
xchg
push
or
or
xchg
das
adc
dec
xchg
sub
pop
ds
push
jns
adc
adc
lret
xor
out
mov
mov
ficoms
insb
lods
stos
inc
xchg
cltd
push
loope
fs
lea
xor
pop
outsb
jmp
pusha
jno
add
mov
jns
stos
lahf
mov
xchg
cmp
shll
fisttpll
adc
loop
mov
jle
outsb
cmpsl
loop
shll
xorl
push
stos
inc
cmp
sub
imull
addr16
sub
jmp
pop
mov
adc
add
fwait
in
mov
insb
and
lods
fidivrs
iret
mov
addb
inc
jp
adcl
in
in
and
in
call
xchg
and
lea
shl
inc
sti
movsl
test
mov
insl
or
fnstcw
lock
adc
outsl
subl
mov
xor
or
fisttpll
xchg
push
mov
inc
imul
lcall
mov
mov
add
mov
sub
jmp
fwait
xchg
and
inc
xor
cwtl
sbb
pop
aaa
subl
dec
jge
ffree
enter
adc
add
pusha
repz
and
sub
les
sbb
xor
add
xor
mov
lods
aaa
and
adcl
cmp
cld
or
xor
lock
inc
fldenv
es
mov
adc
icebp
sbb
gs
inc
sbb
xor
dec
push
repz
dec
out
pusha
push
rcrl
int3
adc
pop
and
inc
and
pop
stos
fucomp
add
mov
dec
arpl
push
mov
fiaddl
lea
pop
daa
lods
bnd
je
frndint
cld
inc
in
repz
pusha
mov
jmp
mov
mov
sub
neg
mov
jge
push
stos
jge
cld
and
dec
mov
mov
in
pop
push
dec
cmp
fidivl
push
jne
sub
jnp
and
xor
jnp
int
dec
xchg
mov
jns
xchg
mov
shr
sbbb
sti
and
xchg
repnz
rcrl
xchg
push
mov
lret
mov
rcr
or
lahf
xchg
sub
loopne
addr16
rcl
fxch
scas
daa
mov
push
adc
mov
int3
mov
pop
sbb
mov
dec
clc
cmpsl
dec
lods
cwtl
popf
cmp
insl
mov
xchg
mov
pusha
mov
repz
adc
sbb
sbb
loopne
bound
lahf
xchg
std
pmulhuw
stc
pop
xor
push
cli
jge
adc
das
mov
xor
insl
mov
push
les
and
outsb
subb
sbbb
xor
cmp
cld
adc
mov
lret
dec
fbld
sub
test
mov
ret
in
lcall
outsl
mov
rclb
jecxz
xor
je
pop
pop
cmp
test
xchg
fidivrl
hlt
adc
inc
pop
out
sahf
fisubrl
sub
dec
xor
xchg
cmpsl
push
cmp
inc
push
repnz
inc
pop
push
or
mov
inc
movsl
popa
xchg
fisubs
push
popf
adc
imul
inc
int
movsb
inc
lods
and
repz
sarl
mov
mov
xor
jnp
jne
sbb
out
out
scas
push
testl
xor
inc
addr16
stos
sub
add
xchg
push
or
sub
push
xchg
call
ljmp
daa
mov
mov
movq
mov
xchg
cmp
dec
mov
dec
push
xchg
mov
cmp
sbb
push
leave
ror
cmp
push
pop
movsl
pushf
rep
arpl
lret
xor
jno
rclb
jbe
inc
loop
pusha
test
adc
icebp
das
inc
xor
lock
sub
dec
dec
pop
popa
pop
gs
dec
pop
dec
popa
push
jns
rorb
mov
push
push
adc
test
testb
mov
ljmp
jnp
mov
dec
push
imul
mov
out
pop
scas
loop
mov
pop
pop
mov
adc
sub
jl
inc
pop
sti
or
repz
das
push
nop
pop
xchg
fmulp
sub
add
sbb
test
lret
xor
ds
mov
aam
xchg
ja
mov
and
sbb
repz
call
cld
push
mov
or
leave
mulb
push
push
lds
mov
jb
add
cmp
push
sbb
jmp
in
pop
lcall
nopl
pop
std
iret
fisubl
cmp
jmp
xchg
sahf
sbb
leave
pop
push
aas
dec
adc
divb
mov
xor
aad
jmp
test
insl
push
aas
add
out
sub
push
inc
fcomp
arpl
mov
pop
cmpsl
xor
dec
mov
mov
mov
add
add
push
imul
out
lahf
ss
cli
push
repz
arpl
out
in
sbb
or
pusha
cvtps2pi
shlb
lahf
adc
movsl
fidivrl
xchg
flds
enter
repz
out
jbe
inc
outsb
mov
std
movb
cmp
xchg
and
sets
pop
inc
inc
inc
popf
inc
paddsw
mov
cmp
cmpsb
or
dec
decb
pop
loope
sbb
adc
lcall
icebp
aaa
mov
ja
repz
xchg
mov
mov
jnp
xor
mov
stos
sub
push
stc
mov
mov
pop
sbbb
imul
add
cmp
in
dec
addr16
icebp
ror
call
subl
leave
sub
inc
lods
dec
lock
pop
fstp
test
mov
idiv
movsl
push
and
mov
fwait
mov
xor
xchg
mov
mov
inc
test
js
or
nop
mov
mov
sbb
insl
ljmpw
pusha
addl
and
mov
jp
and
test
push
pop
out
mov
inc
mov
into
xchg
into
jge
add
adc
inc
daa
add
sub
jo
and
sbb
push
hlt
pop
cmp
xchg
or
jnp
ljmp
mov
ljmp
repnz
aam
dec
mov
outsb
stos
and
xlat
push
mov
lods
les
push
dec
sbb
mov
mov
lcall
and
adc
sub
inc
lods
push
in
or
dec
adc
push
mov
stos
mov
sub
frstor
sbb
jl
mov
pop
mov
lods
mov
leave
mov
mov
mov
add
sarb
mov
cmpl
jle
stos
loop
test
push
xor
cmp
arpl
jo
rolb
or
pusha
jecxz
jnp
mov
inc
mov
scas
or
test
or
push
push
daa
testl
mov
scas
loopne
pop
push
sub
roll
insl
push
cld
add
iret
ss
mov
ja
push
mov
mov
daa
jnp
jl
in
mov
dec
je
xor
push
jmp
in
and
or
int3
adc
gs
dec
aaa
and
sub
xor
int
das
add
mov
pop
adcb
mov
jns
mov
xor
pop
xchg
in
adc
dec
pop
lcall
insl
xchg
mov
stc
inc
pop
hlt
fsubr
int
dec
xchg
push
es
xchg
mov
mov
add
inc
xor
fnsave
push
mov
mov
cmpsl
daa
adc
push
stos
call
outsl
pop
dec
push
clc
mov
lret
xchg
mov
mov
jg
sahf
nop
pop
or
out
add
mov
enter
lds
mov
mov
jmp
stos
outsl
jg
cld
popa
pop
mov
sub
pop
aas
in
mov
lret
in
sub
and
in
mov
xor
cmp
ret
je
fisttpl
xchg
popf
int3
jae
adc
jge
insl
jg
inc
outsl
or
sub
mov
sbb
pop
mov
int3
fisttpl
aaa
scas
lret
sti
aas
push
or
test
adc
dec
jge
dec
xor
adc
test
xchg
add
push
iret
and
and
int3
sbb
shrl
mov
mov
pop
jl
andb
add
inc
mov
aaa
sub
mov
xlat
mov
sub
or
shl
mulb
or
shlb
cmp
imul
stos
xor
pop
xlat
test
mov
dec
pop
fwait
shll
js
lret
jns
mov
pop
sbb
jge
push
daa
mov
dec
mov
inc
dec
mov
imul
pop
mov
cmp
cmp
mov
test
cli
cmp
push
dec
gs
dec
cltd
int3
pop
xchg
add
fidivrl
jg
call
mov
pusha
repnz
or
push
add
popf
in
add
jns
xchg
mov
cmovb
mov
cmp
mov
sbb
ss
jecxz
dec
jbe
jne
stos
jbe
push
filds
lea
jbe
js
sbb
xchg
lods
mov
push
pushf
mov
dec
hlt
or
mov
pushf
xchg
aam
xlat
pop
sbb
cmpsb
sbb
ret
push
adc
out
mov
or
ret
xor
inc
call
xchg
push
out
mov
subl
lahf
out
xor
sub
sti
mov
dec
adc
out
test
ja
test
mov
pushf
mov
cmpsb
or
lods
xchg
and
lcall
push
fmul
lds
or
rcrb
cmp
pop
dec
lds
loope
das
mov
xchg
sub
jl
cmp
sarb
pop
addr16
les
xor
outsb
or
and
dec
fisubs
mov
mov
sub
movsl
data16
xor
loope
insb
inc
inc
pop
popf
repnz
xorb
or
insb
xchg
mov
icebp
es
mov
push
add
sub
sbb
jge
rcrb
dec
jecxz
or
and
hlt
xchg
push
fdivs
pop
cmp
les
cwtl
fisttpll
xor
outsl
insb
cmc
mov
lock
faddp
and
clc
and
jne
cwtl
dec
int
rorb
add
stos
dec
pop
repnz
es
xchg
xchg
dec
decl
lahf
cmc
data16
outsl
icebp
insb
and
dec
imul
incl
jo
je
jne
push
lcall
fidivl
data16
nop
xor
jg
adc
jo
sub
and
icebp
mov
jne
or
mov
nop
fwait
pop
imul
lcall
outsl
enter
add
sub
dec
adc
mov
xor
or
ret
in
sub
mov
test
mov
clc
adc
je
push
inc
cmp
roll
mov
dec
psrlq
mov
mov
push
daa
repz
push
mov
clc
inc
mov
cmp
in
mov
cmpl
mov
adc
jb
sarb
mov
in
or
mov
fdivrs
rcr
add
push
pop
jb
loopne
lea
mov
xchg
xchg
and
cmp
test
sbb
sbb
mov
sahf
loopne
or
xchg
mov
dec
popa
xor
cmp
cmpl
pop
pushf
cmp
mov
and
in
addr16
push
arpl
sbb
in
push
and
inc
lds
push
mov
dec
in
pop
inc
cwtl
fs
pop
jb
jmp
pop
jmp
push
push
lods
push
add
mov
lret
dec
push
mov
decl
sub
data16
mov
sub
or
mov
arpl
xor
inc
fsubrs
popf
cmp
sub
cmp
cli
pop
loopne
and
sbb
ret
jg
xchg
add
stos
add
int
cwtl
adc
jo
sbb
dec
xlat
sti
outsl
mov
jb
or
test
lret
push
scas
aam
cmpsb
jnp
jecxz
dec
pop
cmp
insb
sbb
sti
iret
jbe
push
iret
xchg
xor
fimuls
les
sub
add
clc
adc
push
sub
xor
hlt
ljmp
outsl
inc
ret
sub
pop
movsb
in
inc
addr16
mov
jae
push
and
dec
pop
popa
in
or
jbe
loop
pop
pop
outsb
jno
jb
pop
lretw
pop
mov
sub
and
rclb
lea
inc
adc
andl
jp
and
insl
aas
movsl
inc
insl
sarb
sti
sbb
push
lock
jmp
or
cmp
cli
gs
pop
mov
add
lret
arpl
aad
lret
mov
sub
jae
rcll
out
pop
test
push
mov
loope
adc
add
mov
dec
int
adc
test
cmp
int3
test
sub
jno
xchg
hlt
loope
enter
and
pop
int
insb
inc
add
ss
pop
push
imul
sbb
mov
mov
pop
jl
lret
push
popf
ficoms
insl
daa
xchg
mov
push
push
and
sub
std
mov
mov
icebp
inc
add
sub
fcmovbe
or
mov
cld
lret
ja
push
fwait
push
mov
mov
leave
sbb
push
icebp
sub
test
scas
sbb
adc
xor
stc
dec
je
add
into
mov
mov
lret
fs
mov
sbb
into
sub
pushf
add
adc
aas
ret
add
movq
and
loope
pusha
rcrb
add
in
mov
and
mov
movsb
mov
std
data16
or
enter
and
pop
test
cmc
push
sbb
jge
nop
or
and
stos
push
jne
and
dec
sub
lahf
lods
or
xor
popf
fldt
sti
loop
mov
aas
mov
aam
push
jl
arpl
ret
ss
inc
ficoml
lds
rolb
fdivrs
fdivrs
das
mov
or
popf
cmpsb
leave
scas
sarl
dec
scas
and
aaa
jns
mov
jmp
mov
dec
inc
and
jmp
leave
xchg
mov
add
mov
pop
ret
mov
imul
cmp
inc
xchg
cmc
sbb
or
pusha
dec
loop
shrb
mov
fs
mov
jnp
jns
pop
rsqrtps
insl
adc
fiadds
dec
or
push
daa
sbb
push
jno
jae
loop
inc
out
fimuls
jle
in
xchg
pop
sbb
sbbb
or
or
xchg
and
and
or
addb
xchg
jle
and
das
pop
mov
in
jnp
shlb
mov
fdivrp
lcall
mov
outsl
sub
and
pop
ret
cmpsb
inc
dec
or
mov
dec
test
fsubl
loopne,pt
test
shrl
outsb
scas
inc
outsl
lret
scas
adc
adc
add
cmp
cmp
add
fs
jmp
or
movsb
out
mov
cmpsl
xchg
negl
je
sarb
dec
insb
xor
dec
stos
sbb
inc
inc
std
movsb
lea
add
mov
xchg
xor
sub
cmc
into
add
insb
mov
aaa
and
fwait
lret
fstpl
or
mov
fwait
je
inc
mov
test
adc
adc
imul
xchg
sbb
sub
ja
jmp
test
addr16
fdivrp
popf
cwtl
xchg
mov
fcompl
add
pop
jne
push
daa
xchg
shll
sbb
arpl
mov
and
mov
scas
inc
rcrl
daa
nop
jb
mov
inc
aam
ret
dec
mov
mov
jg
int3
cmp
iret
cmp
push
test
ss
push
mov
loopne
cltd
das
mov
adc
pop
sbb
rcrb
xchg
xchg
cmp
loope
jl
add
inc
fldcw
cltd
cmpsl
cmp
fdivrs
loop
lahf
test
lret
pushl
push
popa
mov
mov
push
mov
and
mov
mov
mov
and
mov
cmp
push
sub
mov
int
mov
lret
js
aad
sti
or
dec
mov
movb
push
sub
inc
pop
xchg
jmp
push
jg
pushf
fs
add
ds
push
repnz
repz
mov
xlat
daa
xor
cmpsl
jne
lods
adc
or
cmpsl
cmp
jmp
outsb
add
sahf
xchg
popa
fprem1
testb
test
cmp
cwtl
cmp
fwait
sbb
jno
mov
bound
jb
push
cwtl
or
adc
lods
je
mov
jmp
je
rcll
cmp
int3
jp
pop
fs
jo
xor
cmp
or
das
mov
shll
inc
xor
sub
jno
cli
lea
xor
in
jb
jbe
pop
aaa
mov
loope
and
imul
mov
in
lds
fildl
les
sbb
jmp
shll
jl
add
test
mov
dec
les
push
pop
adc
pusha
cmc
jp
mov
lds
in
cmpsb
in
jp
aad
jae
pop
dec
flds
jg
and
cltd
stos
lds
imul
mov
icebp
rolb
cmp
dec
mul
in
ficompl
sub
dec
mov
push
fcmovu
shll
xchg
xchg
inc
incl
push
int3
adc
mov
jl
jge
ud1
dec
imul
jle
ds
and
and
rorl
dec
sub
mov
cmpsb
push
mov
sbb
aaa
push
inc
addb
jns
jns
lds
mov
cltd
stc
cmp
jb
jle
pop
lods
mull
or
or
sub
push
cld
or
out
out
sub
ret
hlt
testb
jmp
sarl
scas
hlt
mov
pop
aas
arpl
divb
data16
mov
ja
mov
addr16
leave
ja
inc
jle
lods
jns
mov
push
call
pop
pop
mov
or
lahf
xchg
inc
mov
pusha
xchg
push
rcrl
testb
sbbb
and
pop
xorb
mov
fisubrl
jle
cltd
mov
adc
xchg
or
das
mov
arpl
or
cmp
mov
push
dec
mov
xchg
in
mov
jle
ss
test
pop
xchg
fsubrs
std
mov
fists
dec
jg
push
les
sbb
or
jbe
mov
pop
fwait
mov
xchg
inc
mov
mov
jae
jns
adc
negl
xchg
dec
lea
push
nop
dec
imul
dec
icebp
ljmp
jns
mov
ficomps
cmp
inc
xchg
jge
xor
xlat
mov
push
loop
movsl
iret
test
adc
cmp
lcall
ds
fst
int3
xor
jle
f2xm1
sar
and
or
testb
pop
jecxz
bound
call
pushf
popa
pop
lock
ljmp
adc
out
sahf
lret
jg
xlat
adc
cmc
cmp
in
push
xchg
ret
fstps
add
fsubrl
mov
mov
xlat
fstpt
ret
jge
jae
popf
lret
mov
cmc
lahf
mov
movsl
repz
lds
add
and
push
push
pop
hlt
push
xchg
mov
je
nop
orl
mov
lret
int3
pop
adc
or
ret
in
add
mov
icebp
add
fnstcw
mov
pop
icebp
mov
inc
jbe
mov
sarl
fsubrl
insl
cmp
mov
outsl
mov
js
arpl
test
inc
cs
adc
pop
sub
jl
repnz
cltd
add
es
sub
testl
ljmp
adc
and
push
fwait
lods
pop
mov
orb
or
dec
gs
and
jecxz
loope
jae
jmp
mov
mov
jns
lahf
pop
call
xchg
jp
insl
adc
test
shlb
jge
nop
movsl
addb
stos
jne
mov
or
mov
cli
inc
dec
mov
fcomps
jne
push
sbb
mov
or
out
scas
push
repnz
ljmp
push
pop
decb
mov
rorl
jnp
inc
xchg
fcom
cmp
popf
lret
inc
aaa
inc
loope
add
jle
js
int
lock
int3
gs
adc
inc
data16
dec
test
mov
loope
mov
push
jo
add
aad
and
mov
xor
in
pop
loopne
sbb
aam
rorb
pop
xchg
lods
cmp
sub
rorl
shll
pop
sahf
sbb
fcmovnu
inc
dec
imul
popa
add
frstor
sbb
xchg
ficomps
inc
xor
pop
fcmovb
repz
je
xchg
fdivrp
jp
outsl
push
jp
jbe
andnps
shrl
ret
dec
xchg
mov
inc
push
inc
pushf
rcl
cmc
push
jns
addr16
lahf
shrb
adc
xor
sub
or
add
ds
sbb
data16
test
xchg
dec
fdivrs
inc
lds
or
aas
push
and
insl
or
push
std
mov
mull
sarb
fwait
ret
or
push
adc
cmp
shlb
scas
pop
je
jmp
lahf
sub
and
ja
repnz
jo
lods
jmp
inc
mov
push
adc
ficomps
mov
xchg
ds
mov
mov
cs
ljmp
mov
arpl
mov
jns
gs
mov
scas
mov
fldenv
test
ljmp
insb
xor
sbb
inc
push
stos
cmp
ss
push
rcrl
cltd
adc
shl
pop
das
mov
push
cmp
ret
cmp
or
stos
pop
pop
and
ficoms
ljmp
xor
js
mov
mov
in
arpl
or
inc
cmp
mov
ds
mov
sarb
mov
cmp
sahf
imul
adc
jb
push
push
lds
and
pop
push
mov
test
sbb
add
fnstenv
in
cmc
test
mov
xor
sbb
sbb
push
mov
out
mov
mov
lahf
mov
pushf
dec
pop
lea
xchg
sub
sti
out
mov
insb
inc
andb
mov
jge
sbb
xchg
data16
xor
add
lea
cltd
stos
ss
jge
je
sub
movl
pop
inc
add
jp
jg
dec
mov
lret
push
push
movsb
cmpb
xchg
scas
nop
cwtl
repz
xor
or
lcall
or
imul
jl
dec
mov
push
adc
pop
adc
pop
cwtl
jle
stc
pop
mov
sub
pop
movsl
mov
mov
jnp
fisttps
and
mov
jg
sub
xchg
cwtl
lahf
mov
sti
jbe
in
lds
dec
fcmovnb
scas
ss
or
neg
push
mov
mov
pushf
pop
or
das
mov
or
push
mov
call
dec
cmpb
xor
idivl
cmpsl
bound
fldl
sbb
xor
clc
xchg
push
mov
int3
lahf
idiv
lcall
xor
push
inc
or
cmp
lods
pop
add
pop
rcll
pop
jne
fdivrl
jns
rcrl
cmp
enter
xchg
cltd
jno
mov
fs
cmpsl
rorl
xor
add
jecxz
mov
aam
ljmp
mov
enter
mov
xlat
push
push
mov
roll
push
mov
sbb
lret
stos
fisubrl
aas
out
and
je
pop
pop
in
pop
jp
fadd
or
icebp
jl
mov
es
sub
insb
test
or
scas
dec
mov
imul
inc
and
cli
in
frstor
cmp
or
loop
sahf
shl
into
in
xchg
mov
or
out
outsl
inc
mov
jo
mov
lods
pop
imul
cmpsb
inc
xchg
add
mov
or
lods
mov
ja
mov
mov
lods
xor
dec
mov
movsl
lock
mov
dec
sub
push
das
sub
dec
pop
jmp
jge
mov
xchg
mov
ljmp
fucomip
loope
popa
xchg
mov
sbb
or
ja
movsb
mov
cli
xchg
stos
add
pusha
cmp
outsb
das
ficoms
shrl
aaa
inc
add
cltd
mov
nop
dec
mov
es
sub
fnstsw
adc
arpl
mov
adc
inc
fwait
xor
dec
imul
mov
and
decl
adcl
jne
jnp
repnz
mov
or
cmp
or
lret
test
fs
jle
inc
or
pop
jl
aam
sub
sbb
pop
fmul
clc
out
pop
pop
fwait
sbb
and
sbb
jbe
rolb
movsb
push
mov
or
cmp
push
lahf
scas
mov
mov
sub
stos
push
pop
cmc
in
xchg
push
gs
jns
imul
lock
call
jno
rclb
out
pop
adc
jbe
and
in
scas
sbb
lock
add
loope
mov
lret
inc
ss
sbb
mov
cltd
or
iret
orl
lock
and
push
pop
cltd
sub
imul
dec
inc
xor
inc
vandnps
xor
mov
push
dec
adc
mov
jb
inc
pop
cld
pop
loope
dec
mov
mov
adc
push
addb
pop
xchg
cmp
cwtl
push
loopne
mov
leave
fnstenv
repz
push
dec
jo
ss
out
push
mov
sbb
test
cwtl
mov
repnz
aas
aam
xor
dec
pop
push
push
movsl
dec
call
imul
fsubl
ljmp
and
push
mov
or
xchg
movsl
dec
fildll
mov
pop
jl
lret
movsl
movsb
jp
out
test
test
lods
in
ret
xor
pop
daa
push
or
pop
sub
sbb
enter
or
loope
outsb
mov
popf
inc
imul
xchg
sub
jbe
mov
cmp
test
pop
push
adc
sahf
cld
push
imul
and
mov
mov
cmp
fnstenv
adc
aaa
jmp
nop
sub
lahf
jae
out
inc
out
dec
loopne
cltd
xor
in
jl
push
sub
mov
or
dec
adc
mov
pushf
adc
mov
adc
sbb
sub
hlt
inc
loopne
pop
jns
fisttps
sub
xchg
dec
xor
in
shlb
mov
sbb
or
mov
scas
orb
xchg
push
out
xor
movsb
imul
dec
ret
pop
mov
pop
rcll
mov
test
jge
and
cmp
add
clc
or
add
into
inc
loopne
je
movsl
sbb
xor
addl
ljmp
cltd
and
or
dec
dec
mov
push
shrl
test
mov
xchg
fistps
lods
pop
dec
dec
push
and
jge
sbbl
loopne
mov
cmc
subb
fldenv
es
pop
gs
sbb
xchg
mov
sub
or
push
ret
xchg
cmc
mov
test
mov
mov
je
aam
mov
cmp
cli
movsb
jnp
add
inc
mov
lea
subb
fldenv
rcll
fistpl
xchg
push
arpl
adc
pop
and
andb
push
stos
xchg
lds
cmp
sbb
pop
mov
movl
add
xchg
cmp
fldenv
out
ficoms
ja
mov
out
aaa
jne
test
lods
jp
aaa
shlb
mov
mov
adc
xor
nop
add
add
sarb
mov
adc
xchg
sahf
pop
idivb
cld
insl
and
mov
mov
out
and
clc
pop
out
addl
xchg
cmp
ret
jge
mov
outsb
movsb
iret
mov
push
aad
xchg
stc
xchg
sub
adc
mov
mov
push
lods
clc
or
loope
mov
adc
push
js
sub
jp
mov
pmaxub
in
ret
lds
add
sub
inc
imul
and
xchg
repz
add
xchg
sub
cmp
ds
jnp
sahf
and
and
jbe
in
testl
adc
je
push
sar
data16
xchg
cmp
in
jl
or
lret
fiaddl
fs
sbb
xlat
jb
sub
adc
test
inc
add
addr16
jecxz
shlb
cmp
fxch
nop
cwtl
pushf
ficoml
xor
mov
push
adc
jecxz
lcall
mov
xor
jg
xchg
lock
lret
mov
fsubp
cmp
lock
insl
pop
test
scas
clc
notb
xchg
mov
addr16
mov
test
dec
cmp
lahf
movsb
jne
sub
mov
lret
or
or
sbb
jo
decb
loop
aas
aad
pop
dec
cmpsb
mov
sbb
int
imulb
xor
es
mov
or
push
adc
push
ja
nop
call
lret
adc
into
cmpl
adc
lea
push
cmp
rcr
jae
stc
cmpsb
adc
jno
out
fcmovnu
xor
push
mov
jns
lcall
data16
imul
or
fwait
inc
.byte
.byte
add
add
enter
add
add
add
push
add
add
addb
add
pusha
add
addb
add
rolb
orb
add
add
add
addb
adcb
add
cwtl
add
addb
add
enter
add
add
add
add
mov
add
addb
add
enter
add
add
add
add
add
add
enter
add
add
loopne
add
enter
add
add
add
push
add
pop
add
clc
add
adc
add
adc
add
sub
add
inc
add
adc
add
pop
add
adc
add
jo
add
enter
add
add
add
push
add
add
add
add
add
add
add
add
add
add
adcb
add
add
adcb
add
add
addb
add
enter
add
add
push
add
add
add
andb
add
dec
add
add
add
fiaddl
add
out
push
add
incb
add
sbb
add
cmp
add
inc
pop
add
pop
pop
add
jb
add
jle
add
mov
add
add
add
enter
add
add
add
add
mov
add
addb
add
enter
add
add
add
add
add
add
addb
add
add
enter
add
add
add
add
add
add
cwtl
add
add
add
add
sub
add
add
add
add
add
add
test
add
add
add
enter
add
add
add
add
add
add
mov
add
add
sub
add
add
add
add
add
add
enter
add
add
enter
add
add
add
add
add
add
fadds
add
add
add
sub
add
add
add
add
add
add
call
add
add
sub
add
add
add
add
add
add
clc
add
add
add
add
sub
add
add
add
add
add
add
or
add
enter
add
add
add
add
add
add
sbb
add
enter
add
add
add
add
add
add
sub
add
enter
add
add
add
add
add
add
cmp
add
enter
add
add
add
add
add
add
dec
add
add
enter
add
add
add
add
add
add
pop
add
add
enter
add
add
add
add
add
add
push
add
add
sub
add
add
add
add
add
add
js
add
add
add
enter
add
add
add
add
or
add
add
add
sub
add
add
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
add
add
enter
add
add
add
add
or
add
add
add
enter
add
add
add
add
or
add
add
add
enter
add
add
add
add
or
add
add
add
enter
add
add
add
add
or
add
push
add
add
add
enter
add
add
add
add
or
add
push
add
add
add
enter
add
add
add
add
or
add
push
add
add
add
enter
add
add
add
add
or
add
push
add
add
add
enter
add
add
add
add
or
add
add
add
add
enter
add
add
add
add
or
add
add
add
add
enter
add
add
add
add
add
add
push
add
add
sub
add
add
add
add
add
add
js
add
mov
add
in
add
add
add
andb
add
add
add
add
add
add
sub
add
in
add
add
add
int3
or
add
add
add
add
push
add
add
add
add
add
add
add
or
add
in
add
add
add
orb
add
add
add
add
add
push
add
faddl
add
in
add
add
add
enter
aam
add
in
add
add
add
pushf
adc
add
add
add
add
add
add
adc
add
add
add
add
pushf
adc
add
add
add
add
add
add
in
add
add
add
push
pop
add
mov
add
add
add
add
add
xor
add
in
add
add
add
inc
sbb
add
add
add
add
add
add
add
add
es
add
in
add
add
add
jo
add
add
add
in
add
add
add
je
add
and
add
in
add
add
add
cwtl
pop
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
mov
add
add
add
in
add
add
add
mov
add
add
add
add
add
add
pop
add
add
add
in
add
add
add
les
add
add
add
add
add
add
add
pop
add
pop
add
add
add
add
add
add
pop
add
pop
add
add
add
add
add
add
add
and
add
in
add
add
add
hlt
popf
add
inc
add
add
add
add
add
add
add
push
add
pop
add
inc
add
push
add
dec
add
add
inc
add
dec
add
inc
add
add
pop
add
add
inc
add
add
push
add
add
dec
add
add
dec
add
inc
add
or
inc
add
dec
add
push
add
dec
add
inc
add
add
add
inc
add
push
add
or
add
dec
add
dec
add
push
add
push
add
inc
add
push
add
dec
add
push
add
push
add
push
add
dec
add
push
add
dec
add
add
inc
add
dec
add
push
add
add
push
add
push
add
dec
add
push
add
dec
add
add
dec
add
push
add
dec
add
inc
add
push
add
add
add
pop
add
push
add
dec
add
push
add
add
push
add
push
add
dec
add
add
cmp
or
push
into
sbb
adc
xchg
es
sbb
mov
jle
sbb
test
fstp
mov
loope
mov
mov
xor
adc
ds
mov
cli
pop
pusha
aaa
mov
hlt
push
or
imul
mov
inc
xor
rcrl
cmpsl
outsl
adc
cmpsb
pop
imul
sbb
call
inc
mov
aad
aam
sub
icebp
mov
cli
imul
adc
adcb
push
test
rclb
cwtl
pop
test
adcb
xor
arpl
addr16
icebp
rorb
pop
repz
sahf
bnd
lret
das
mov
stos
push
pop
or
imul
fcomps
inc
or
sbb
insl
int3
negl
jbe
or
cltd
sti
xor
and
pop
adc
mov
add
cmp
cmpsl
xlat
loopne
out
rcr
enter
hlt
jno
and
pop
out
stos
ss
inc
add
mov
xchg
stc
push
mov
adc
loop
inc
sub
jns
sbb
mov
mov
outsl
xchg
ud1
cmp
dec
cmpsl
fimuls
dec
jp
cwtl
lods
testl
pop
sub
jmp
or
jae
push
dec
cwtl
push
je
jle
pop
cmpsl
lret
cmp
in
dec
repnz
or
push
ret
jne
lods
mov
pushf
adc
dec
out
mov
adc
sbb
jg
enter
add
inc
jl
xchg
inc
adc
test
dec
faddl
pop
inc
push
stos
scas
jo
jp
push
mov
sub
dec
in
sbb
fdiv
mov
faddl
cs
or
xchg
aas
jge
xor
repnz
xor
inc
inc
rorl
pop
dec
test
popf
sbb
arpl
xor
out
popa
mov
dec
je
leave
sahf
jge
mov
xchg
xchg
fbstp
jge
push
int3
mov
bound
sub
cltd
push
sbb
insb
outsl
jne
cmp
in
pop
aam
nop
sbbl
cwtl
faddl
mov
pusha
cld
ret
push
mov
jg
sub
and
inc
in
fwait
jge
aaa
jecxz
pusha
ret
outsl
mov
addr16
dec
cmc
adc
imul
adcb
inc
popf
pushw
sar
push
ret
aas
cwtl
and
mov
mov
jne
sub
test
cmp
dec
adc
jo
call
mov
shl
dec
in
mov
lahf
sub
fsubrp
in
test
inc
fsubrs
and
ficomps
gs
je,pn
outsb
addr16
pop
push
aas
jmp
dec
sub
ja
mov
cmp
xchg
js
xchg
lea
xor
je
mov
fldcw
push
clc
sub
xorl
pop
mov
sbbl
icebp
sub
clc
dec
arpl
xor
incb
stos
orl
pusha
loop
and
adc
jmp
sti
or
push
adc
mov
pop
cmpsb
xchg
orl
cmc
in
out
dec
adc
sub
inc
mov
es
mov
ret
fists
mov
dec
scas
fdivrp
leave
insl
xor
or
mov
xchg
or
popa
jne
add
es
inc
rcll
fnstcw
xchg
fnstcw
and
out
outsb
pop
mov
je
std
out
adc
mov
inc
je
out
jg
mov
pop
xor
ltr
icebp
cld
fucomi
ret
sbb
repnz
inc
inc
adc
mov
sbb
nop
in
bound
xchg
cmp
int3
test
pusha
sub
adc
mov
jae
out
aas
xchg
jecxz
sti
dec
mov
mov
pop
lea
rorl
add
cltd
sbb
ret
inc
sub
sti
push
cmpw
and
out
cli
data16
add
jmp
insb
je
shll
xor
cmp
into
movsb
push
pop
pop
ret
adc
xor
fnstsw
adc
cmpsl
pop
add
inc
mov
js
in
cltd
dec
xchg
xor
js
sbb
incl
fs
xor
cmpsl
aam
adc
pop
lret
lods
dec
mov
popa
mov
rcll
dec
pop
sub
test
cld
jb
dec
movsb
fsubrs
repz
pop
mov
mov
inc
mov
dec
mov
popf
cli
cmp
ds
adc
das
xchg
insl
addb
push
enter
inc
inc
xchg
add
xchg
sub
stos
icebp
pop
shll
mov
in
add
push
enter
dec
jge
or
dec
ja
fs
jae
movsb
add
sbb
aas
inc
push
rcrl
fs
out
add
daa
aam
js
popf
cld
sub
xchg
mov
cmpl
dec
fldt
mov
hlt
mov
cltd
in
jne
mov
pusha
out
dec
hlt
popf
xchg
aam
cmp
or
mov
xor
jb
jns
mov
test
in
push
mov
scas
and
pop
cmp
lret
fnstenv
pop
test
jnp
adc
pop
or
mov
andl
inc
out
aaa
add
push
cmp
mov
lcall
aas
add
fmull
out
ret
dec
outsb
inc
rcll
inc
adc
push
fs
cmp
sbb
ret
insl
lret
jb
fistps
or
jge
xchg
push
and
sub
mov
or
mov
out
push
jge
mov
in
jmp
xor
and
push
fcoml
into
dec
sbb
out
popf
fcoms
dec
in
mov
jno
repz
arpl
pop
inc
pop
cmp
jecxz
pop
femms
mov
xchg
jecxz
and
mov
push
pop
test
sbb
mov
into
inc
scas
xchg
jno
jae
push
enter
add
test
mov
lret
xchg
ja
fisttps
movsb
mov
rclb
test
lds
insb
xchg
lahf
cmp
je
lahf
mov
jle
adc
jg
fs
inc
mov
jge
mov
xchg
gs
jecxz
gs
mov
pop
push
mov
rol
pop
cli
iret
sub
cmp
int
pop
adc
testb
pop
lcall
inc
lock
push
insl
adc
pop
mov
push
or
push
pop
insb
sti
cmp
adc
jbe
adc
in
js
ret
mov
scas
push
sbb
sub
ljmp
inc
inc
cmc
mov
lret
adc
aam
and
andl
in
or
fcmovnbe
outsl
mov
stos
jge
bnd
push
negb
and
cmc
sbb
inc
cmp
pop
clc
lock
data16
sbb
pop
xor
fstps
cltd
out
lods
or
sbb
lret
sub
lret
add
or
nopl
cwtl
cmpsb
sbb
shrl
dec
mov
jmp
sub
inc
inc
pop
rclb
loop
lcall
push
mov
mov
stos
lahf
push
pop
popf
gs
adc
mov
out
push
test
rcl
push
adc
fnsave
dec
cmp
xor
rorl
cltd
sub
or
int3
pop
insb
xchg
sahf
mov
jl
cmp
sahf
inc
nop
xor
into
cli
inc
jmp
xchg
mov
adc
popf
xor
dec
mov
and
cli
jmp
or
pop
push
dec
subb
jb
mov
pop
testl
pop
outsb
popa
mov
add
pusha
cmp
enter
in
sub
jg
sub
shll
fsubrl
xor
sub
pop
mov
push
lret
cmp
ret
ficompl
cmp
push
or
shl
sub
mov
cmpsb
pop
xchg
mov
cli
xchg
sub
dec
shlb
jl
xchg
fistpll
push
mov
cltd
rcl
mov
jmp
outsb
push
sub
ja
cmc
dec
ljmp
xor
gs
and
ret
mov
push
push
xlat
fsubl
cmp
std
jno
test
jge
sbb
cmpsl
mov
push
adc
cld
cltd
or
and
jp
pop
test
sbb
cwtl
sbb
mov
popa
iret
jns
pop
fsubrs
dec
gs
fcomps
sub
pusha
pop
aas
shl
push
mov
jmp
int
jae
mov
jo
fnsave
ret
flds
sub
shrl
movsb
push
and
mov
xchg
ret
data16
cmp
fnsave
jl
or
xor
mov
adc
xchg
xchg
scas
std
sahf
push
int
sub
dec
push
push
inc
fmuls
or
adc
lods
inc
or
mov
fstps
mov
dec
push
mov
xor
aam
loop
add
ds
jb
mov
jnp
roll
inc
ficoml
or
push
xlat
push
and
mov
cmp
std
cmp
into
es
ljmp
sbb
fildl
pop
push
cmpsb
fimuls
loop
jmp
fcmovnbe
sbb
dec
clc
int
movsl
fs
int
imul
dec
mov
mov
mov
cld
mov
xchg
and
nop
push
push
jmp
xchg
mov
pusha
sbb
xor
jge
mov
xchg
push
push
imul
sub
ss
jne
inc
xlat
mov
mov
push
push
jo
scas
fcom
and
mov
es
or
ds
das
push
push
bound
out
iret
cmc
mov
inc
xchg
cmpsb
inc
pop
ds
mov
mov
jle
filds
popa
out
dec
daa
xor
sti
mov
add
dec
lock
and
or
data16
imul
pop
sti
sub
push
lret
dec
call
jl
dec
inc
dec
shlb
loope
sbbb
leave
es
adc
or
addr16
or
or
mov
push
cltd
add
xor
insb
arpl
movsb
rcrl
and
push
cmp
sbb
mov
sub
roll
sub
sbb
outsb
ret
cs
jo
pop
inc
mov
lds
loope
and
dec
je
pop
push
icebp
xchg
xchg
popa
xor
mov
dec
bound
je
repz
in
mov
pop
sarb
cmp
dec
subb
repz
aaa
ss
insl
dec
push
push
lods
lahf
stos
pop
scas
das
adc
psllw
xchg
imul
inc
repz
mov
data16
stc
pop
aas
vmread
lds
mov
jo
mov
cld
sbb
rclb
jmp
inc
sbb
mov
add
pushl
jne
sahf
repz
mov
ss
iret
pop
push
fisubrl
adc
fwait
test
add
pusha
sub
popf
add
js
or
push
push
push
dec
adc
cs
ja
or
inc
pop
add
repz
xchg
lahf
pop
jne
xchg
and
nop
jnp
fdivs
jbe
sub
add
add
mov
into
orl
test
cmp
in
mov
leave
mov
sub
in
sbb
aaa
cmpsl
mov
dec
cld
add
out
je
add
nop
aam
out
lcall
data16
pop
lret
xchg
frstor
mov
or
pop
mov
xor
cmpl
pop
pop
inc
xlat
iret
gs
add
jbe
aaa
pop
sti
cmpsl
sbb
add
mov
push
jg
pop
mov
jbe
jmp
xchg
aas
xor
push
int3
xchg
mov
lret
test
adcl
call
mov
push
iret
pusha
addr16
addr16
mov
cwtl
lock
fldcw
addr16
test
and
int3
adc
pop
jecxz
leavew
shll
jmp
mov
aam
xchg
stos
cltd
pop
insb
add
scas
test
sahf
jg
lret
je
xor
inc
lods
jmp
imul
popa
cmp
inc
rcl
insb
fistps
mov
and
mov
dec
bswap
roll
cmp
sbb
popf
inc
adc
jp,pn
or
jmp
mov
mov
lret
out
rcrl
cmp
xchg
aad
push
cmpsl
mov
imul
int3
cmpsb
sbb
out
push
mov
shll
inc
mov
cmc
gs
xor
xchg
jae
icebp
scas
push
stos
inc
popf
popa
dec
pop
push
and
dec
popa
inc
mov
cmpsl
ret
mov
mov
cs
pop
push
mov
mov
pushf
int
mov
mov
jp
aad
sub
xchg
inc
cli
outsl
push
test
cmp
sbb
sub
call
lods
bound
call
mov
testl
adc
push
xchg
add
out
ljmp
ljmp
les
pop
cmp
outsl
daa
lea
xchg
lea
aaa
int
ss
cli
adc
sbb
loop
add
enter
jp
addr16
ret
ret
aas
mov
xchg
push
and
or
loopne
jp
add
pusha
fdivrs
inc
xchg
repz
insb
push
pop
insl
sti
add
or
dec
repz
add
push
enter
or
jnp
mov
or
lret
sbb
inc
add
scas
sarb
mov
cmpsl
fwait
enter
inc
testl
xor
xchg
fisubrs
fsubrs
inc
xchg
repz
jmp
aaa
sbb
cli
adcl
cmp
jne
add
and
jge
adc
cmpsl
enter
mov
xor
aad
stos
jge
iret
or
addr16
xlat
pop
jg
jno
insb
shlb
ja
out
mov
cmp
lods
and
jle
adc
rolb
jl
and
scas
pop
daa
pop
jl
dec
add
xor
jne
ret
fwait
movsl
insb
into
and
in
aam
mov
mov
push
pop
lret
add
push
xchg
pop
loop
out
jg
fcmovb
cmp
and
cmp
sub
pmullw
mov
mov
dec
pop
sar
and
add
lret
stos
subb
test
arpl
xor
addr16
clc
arpl
mov
and
std
pop
bnd
rcl
ja
pop
fildll
popa
sbb
sbb
sbb
push
stos
out
ret
xchg
lods
movsb
mov
jbe
xchg
sub
adc
enter
mov
pop
or
and
push
addr16
mov
dec
push
push
rolb
arpl
int3
incl
cwtl
mov
scas
sub
mov
clc
into
shrl
jns
xor
fildl
insl
sub
sti
rolb
je
cmp
sbb
dec
loope
mov
mov
adc
inc
es
iret
icebp
loope
mov
cmpsb
push
rol
das
scas
dec
mov
sub
rcrl
imul
xchg
lret
xchg
or
adc
outsb
adc
or
xor
ds
imul
jl
or
push
int3
dec
mov
mov
pop
xchg
int
or
repnz
push
js
mov
cli
cmp
dec
movsb
xchg
jmp
push
pop
ret
lock
stos
fdivp
push
out
mov
pop
test
push
stos
clc
arpl
pusha
mov
mov
out
lret
out
rcr
mov
pop
jl
aaa
mov
adc
fcompl
mov
cli
push
and
fisubl
adc
iret
sahf
cs
ds
cmp
fldt
mov
dec
mov
stos
or
push
mov
pop
hlt
push
pop
jg
cs
cmp
sub
dec
call
sub
test
cmp
ja
arpl
ss
shrb
nop
jbe
xor
or
mov
popa
pop
adc
mov
mov
sbb
fs
fisubrl
adcl
inc
jbe
adc
div
sbb
repz
mov
push
xorl
sub
lods
pop
xchg
lahf
xchg
xor
add
nop
mov
xor
fcmovu
push
mov
cmp
shl
and
addr16
sub
xor
icebp
mov
mov
xchg
jbe
daa
xchg
call
push
shll
in
aas
rcrb
jg
push
jecxz
repz
or
mov
inc
pandn
push
clc
lods
xor
adc
jecxz
movsl
aas
push
sub
lods
adcb
in
repz
popa
mov
push
cmp
push
sub
imul
iret
fnstsw
sub
fcom
add
enter
cmpsl
add
mov
stc
jp
push
enter
push
add
movsb
imul
jmp
into
push
sbbl
push
jmp
cltd
push
jecxz
cli
test
xchg
roll
dec
test
outsb
movsl
rcl
lock
inc
int
pop
xorb
fnstcw
xor
xor
pop
dec
into
or
loope
xor
pop
jmp
sub
jecxz
inc
test
subb
je
push
sub
in
adc
jp
sbb
mov
outsb
push
and
sub
sub
sarl
dec
push
int3
fildll
xor
addr16
cmc
xchg
mov
insb
dec
cwtl
xor
sbb
imul
test
into
push
fsubl
xor
lcall
testl
pop
dec
fcoms
sub
jecxz
insl
ss
push
pop
or
jmp
stos
jb
pop
jne
add
jb
push
and
mov
cltd
xchg
inc
mov
cmpsb
push
jae
pop
lret
shr
aad
sbb
dec
ret
adc
sbb
ror
in
mov
mov
scas
and
fwait
rorl
movsb
cmp
mov
xchg
mov
mov
add
cld
dec
fistps
dec
mov
inc
lret
leave
js
out
insb
pop
icebp
push
mov
push
push
iret
jge
sub
or
data16
inc
adc
mov
clc
jae
ret
scas
mov
cmp
pop
mov
mov
test
test
and
in
or
sub
cwtl
out
pop
lods
mov
sub
in
sub
inc
add
adc
sub
mov
adc
lahf
push
and
ds
clc
adc
mov
xchg
xchg
fs
add
add
pop
dec
push
test
jmp
lcall
loopne
xlat
mov
repnz
fldt
push
pop
dec
aam
or
cmovne
push
cs
pop
mov
out
cmp
outsl
mov
fcmovnbe
sbb
push
adc
loopne
jmp
test
dec
inc
mov
pop
imul
mov
pop
push
mul
mov
cmp
mov
das
orl
xchg
daa
pop
ljmp
or
cmc
cmp
xchg
nop
repnz
repz
mov
stos
push
xchg
xor
xchg
lcall
stos
fldl
pushf
sub
into
in
add
iret
or
repnz
cwtl
and
std
mov
mov
lods
adc
sbb
mov
ja
mov
jae
pusha
or
jbe
push
inc
jp
enter
push
dec
fisubrs
pop
or
jmp
xchg
in
cmp
in
jle
rolb
fldl
ljmp
test
cwtl
std
xchg
les
mov
inc
adc
add
fwait
jo
int3
int3
fistl
sub
xchg
lahf
int
testl
mov
jl
pushf
les
ret
int3
push
ljmp
mov
ficoml
mov
or
push
mov
addb
fldl
adcb
sbb
dec
pop
addr16
jp
inc
sub
adc
call
lods
scas
decl
inc
ja
xor
out
fs
insl
pop
cmp
out
jecxz
push
mov
bound
js
shll
pusha
adc
lds
adc
pop
add
enter
adc
jo
or
inc
in
jno
mov
test
dec
mov
push
sub
or
aas
mov
inc
dec
rclb
enter
inc
sub
iret
stc
rcrl
mov
sbb
add
mov
and
jecxz
enter
and
rorb
arpl
repnz
jns
xchg
out
ret
cmpb
jno
arpl
mul
add
lods
mov
sub
inc
icebp
mov
mov
loope
sar
clc
cmpsb
ret
in
jmp
in
movl
movsb
xchg
int3
das
int3
in
fs
clc
dec
and
cli
js
jg
add
jl
xor
push
xchg
or
mov
ds
lds
rorb
shrb
andl
sbb
sbb
jmp
sbb
in
jae
mov
leave
repnz
pusha
mov
xor
pop
stos
sti
pushf
xor
aas
cmp
jmp
arpl
sbb
popl
xor
and
mov
pop
mov
in
outsl
xchg
ret
and
adc
pop
sbb
mov
add
outsb
loope
lods
jo
push
insw
test
data16
lret
fildll
sbb
cmp
enter
mov
call
dec
sbb
inc
cltd
xor
xor
in
ss
les
push
in
ljmp
push
mov
iret
nop
sarb
push
or
sti
aaa
movsb
xchg
mov
fwait
cld
pop
sarb
adc
out
dec
out
xchg
inc
or
add
push
mov
mov
jmp
or
lret
mov
mov
in
sahf
jbe
or
and
cmp
mov
cmp
sbb
inc
dec
rcrb
sub
inc
push
xchg
cli
fnsave
insb
adc
jno
cmp
outsl
arpl
popf
fsts
rorl
mov
ljmp
push
and
fldl
shlb
fiaddl
xlat
insb
daa
jl
rolb
loop
and
inc
bound
dec
or
scas
addr16
dec
mov
out
dec
sbb
mov
sbb
jno
inc
and
inc
je
dec
adc
dec
pop
lret
std
mov
icebp
inc
sub
sub
pushl
in
push
jbe
inc
sbb
data16
jmp
leave
fnstenv
adc
jl
out
jae
data16
adc
sub
xor
mov
add
xor
mov
dec
inc
inc
inc
std
adc
nop
movsb
sub
pop
loopne
shll
in
sub
movsb
xchg
push
sub
movb
sub
xchg
addr16
push
or
rcrb
xor
aaa
leave
xchg
xor
push
adcl
xor
arpl
aad
pop
into
pop
arpl
imul
scas
add
pop
popf
pop
iret
dec
dec
pushw
out
lcall
push
xor
sbb
xor
mov
gs
jge
imul
pop
xchg
inc
and
adc
xor
push
out
adc
nop
push
mov
mov
pop
aaa
js
and
mov
mov
jecxz
jmp
pop
aad
push
leave
push
imul
fwait
fs
add
ljmp
leave
xorl
loope
sbb
push
inc
inc
test
data16
or
mov
test
cltd
in
jno
in
cmpsb
mov
pop
mov
test
inc
pop
pusha
sbb
ret
aas
insl
test
mov
pop
cmp
mov
hlt
mov
aad
sahf
or
sub
mov
push
sahf
inc
fnstcw
imul
cmp
lods
loope
imul
pop
pop
dec
adc
stc
sub
cmp
fcoml
mov
add
fstl
cli
and
sub
imul
cmpsb
js
pop
popa
dec
jns
mov
inc
mov
dec
push
jmp
and
pop
sahf
dec
push
lcall
xchg
outsl
jo
mov
mov
mov
gs
in
scas
int
lea
jns
sub
lock
pop
mov
cltd
cmp
jmp
cld
mov
pop
cmp
sub
adc
mov
jb
dec
shlb
pop
sahf
xchg
sbb
sarl
aaa
xor
mov
push
jno
lcall
ja
dec
or
arpl
pop
mov
fstps
lahf
xchg
mov
cld
pop
mov
or
xchg
pop
scas
mov
js
or
lcall
push
daa
mov
jle
scas
loop
cmpsb
ficomps
pop
xor
cmpb
sahf
sbb
xchg
add
sbb
out
rol
or
test
outsb
dec
cmpsl
int3
call
fcoml
test
add
jbe
imul
push
mov
aad
cwtl
sub
dec
xchg
mov
stos
out
ds
adc
std
mov
fsubrs
pop
dec
mov
sbb
lahf
mov
enter
in
cmc
ja
jg
adc
inc
fistps
push
jge
sbb
xor
mov
mov
aaa
pushf
iret
frstor
add
ror
test
mov
je
push
bound
scas
mov
push
loope
mov
movsb
push
xchg
push
mov
mov
loope
fdivrl
test
push
pop
aam
aad
xchg
jo
mov
inc
sti
rcrl
fsubl
in
jo
sub
jb
dec
cmp
arpl
iret
aaa
movsb
outsl
loopne
dec
sahf
or
pop
mov
jg
sarb
mov
cmp
pop
mov
mov
ret
add
ror
addb
jle
or
lret
les
pop
adc
leave
push
add
add
mov
mov
fisttpl
insl
test
jbe
sub
cmovl
mov
bnd
rorl
lcall
cli
sub
mov
adc
andl
sbb
or
mov
jmp
imul
adc
xorl
or
ret
xor
repnz
pop
ffree
inc
mov
mov
and
sbb
out
adcl
jbe
adc
xor
test
mov
xor
cmp
or
pop
std
hlt
sti
sbb
pushl
and
sbb
subl
pop
pop
in
ja
sbb
mov
sti
add
inc
mov
push
lahf
mov
mov
bound
jle
cmp
daa
jecxz
mov
jmp
ds
jno
idiv
je
dec
jle
jp
or
stos
jg
loopne
bound
adc
repnz
cmpsl
mov
out
test
push
sbb
jl
add
mov
add
push
cmc
sub
push
sbb
popf
xchg
test
out
fsts
repnz
aaa
jne
ret
fmulp
xchg
in
pop
jle
add
out
add
ss
arpl
ljmp
in
inc
jb
pop
icebp
xor
push
ret
or
hlt
xlat
dec
jnp
insl
xchg
mov
jmp
int
fldl
cwtl
mov
cmp
ljmp
adc
inc
call
lds
in
lock
dec
movsb
addr16
sbbb
and
lret
push
xchg
bound
or
sbbb
pop
hlt
sub
daa
test
js
push
xor
mov
enter
ret
call
fadd
addr16
adc
ja
outsb
add
push
mov
sub
xor
lds
insl
sbb
push
jns
into
sub
xchg
lock
stos
popa
int
divb
icebp
jl
and
lret
das
adc
dec
mov
test
enter
into
or
scas
and
or
out
xlat
sarl
sub
jge
repnz
int
jge
push
lock
mov
adc
mov
call
cli
jo
testl
jo
add
and
fdivr
arpl
inc
xchg
ljmp
mov
push
add
cli
mov
ss
mov
movl
mov
clc
mov
mov
int3
inc
jp
mov
lret
sahf
les
rol
cmp
xchg
jne
je
xchg
popf
mov
movq
inc
jo
push
add
dec
stc
and
mov
xchg
popf
test
subb
pop
test
icebp
cltd
and
sahf
xor
jnp
push
pop
jbe
jnp
lret
and
ja
mov
xor
in
xor
cmp
pop
cld
push
aaa
ss
mov
cmc
or
mov
push
fucomip
mov
xchg
cmp
fidivrl
outsb
sbb
and
fstl
fistps
pop
and
mov
jl
jns
inc
das
jns
xor
int3
decb
inc
pop
pop
add
mov
mov
aad
movsb
cmp
fistpll
lahf
push
xor
cmc
clc
int3
fs
inc
pop
sbb
xchg
jo
fidivl
dec
or
push
arpl
cwtl
cmp
loope
push
sbb
sub
testl
pop
repnz
incl
lahf
in
ja
orl
push
popf
pop
jg
jnp
sbb
sbb
addb
test
or
and
call
cmp
pop
es
jp
test
adc
pop
stc
loopne
pop
cltd
sbb
aaa
sbb
xchg
mov
xchg
jo
hlt
dec
pop
push
aas
push
iret
jae
add
cwtl
cli
lcall
xchg
je
jne
outsb
test
outsb
les
test
add
xor
in
xchg
fldenv
push
push
pop
lahf
stos
clc
cmp
fisttpll
into
ds
loope
rcr
ds
sbb
push
cli
jbe
sub
hlt
mov
pusha
or
cltd
mov
test
cmp
hlt
jnp
sbb
adc
push
xchg
fwait
shrl
push
mov
bound
sbb
popf
flds
rcl
inc
test
push
lods
fcomip
movsb
jno
mov
roll
pop
push
push
ret
xor
push
jecxz
dec
adc
mov
stos
in
dec
mov
inc
mov
add
push
lahf
fs
fisubs
push
push
js
mov
lret
jo
mov
lahf
xchg
rcrb
dec
pushf
adc
xchg
jle
xchg
cltd
add
js
pop
xor
xchg
dec
fmul
mov
sbb
in
sub
mov
add
fadds
mov
xlat
mov
xor
xor
xchg
fmull
xchg
popl
inc
mov
pusha
lcall
negb
xchg
inc
push
test
cmpsl
cmpsb
or
adcl
sub
imul
int
mov
push
inc
leave
xor
push
jl
and
idivl
pushf
add
sahf
cmp
inc
data16
shll
adc
adc
jecxz
cli
fiaddl
lcall
lds
sahf
out
mov
mov
popf
sub
xor
scas
jae
mov
xor
out
cwtl
mov
dec
cmpsl
inc
scas
aad
ret
hlt
jae
cmp
or
sub
jmp
mov
repz
pop
sub
loope
and
jecxz
push
add
sub
or
mov
iret
inc
add
sbb
rcr
xor
xchg
dec
lea
add
mov
xchg
cmp
arpl
repz
out
inc
mov
push
push
jbe
ret
mov
inc
dec
mov
jns
xchg
mov
mov
adc
inc
negb
lahf
test
push
fdiv
adc
xchg
mov
xchg
shlb
push
jae
pusha
inc
or
aas
shr
pop
int3
mov
mov
adc
addr16
out
insl
add
imul
pop
test
jle
cmp
jnp
sbb
jp
push
pushf
jnp
pop
movsl
or
mov
pop
clc
push
mov
inc
es
popa
cs
and
fsubp
aas
pop
mov
sbb
int
adc
cmp
push
std
fldcw
ja
adc
in
mov
out
scas
hlt
and
mov
aam
mov
push
mov
clc
data16
or
cmpl
push
fnstsw
les
jle
pop
js
fmul
dec
loopne
bound
rolb
inc
push
jnp
int3
out
enter
xor
pop
ss
pop
gs
lahf
inc
scas
cmp
add
adc
jl
arpl
dec
sub
les
es
or
sub
rcll
pop
cwtl
ficomps
adc
jl
test
test
sbb
xchg
pop
sbb
test
xchg
or
fcoms
clc
mov
ss
add
je
cmp
imul
push
cmc
mov
lea
mov
pop
stos
and
mov
jge
shr
xchg
call
xlat
fdivrs
lods
popf
setae
add
idivb
scas
orl
dec
pop
jl
rcrb
loopne
mov
fwait
mov
hlt
iret
ret
mov
jg
mov
mov
push
pop
push
and
flds
jbe
cmpsb
in
lods
dec
push
imul
pop
leave
pop
jno
adc
sti
fdivs
inc
and
jl
xchg
nop
xor
ljmp
push
push
dec
inc
adc
mov
xor
ljmp
and
pop
inc
cmpsb
cmp
add
mov
jne
aas
stos
rcl
and
push
out
lods
mov
and
push
ljmp
jl
cs
sub
cwtl
sub
add
add
sbb
outsl
iret
mov
dec
scas
fs
insb
int3
rolb
dec
out
mov
cwtl
les
sbb
and
xchg
daa
rorb
ds
mov
loop
icebp
mov
pushf
stc
arpl
dec
ss
pop
sub
in
test
mov
mov
jmp
sub
jp
cli
cmp
imul
cmc
dec
sub
popf
jbe
and
adc
cmpsb
fadds
ds
fsubs
jnp
out
ss
or
insb
mov
ss
inc
es
push
imul
out
jmp
ss
loopne
pop
pushf
push
cmp
insb
cmp
inc
xchg
add
cmpl
xchg
sbb
in
add
push
push
popf
shll
test
mov
enter
xchg
cld
and
daa
jnp
xchg
call
inc
roll
jne
xor
loope
cmp
jg
cli
push
mov
arpl
adc
jb
sarb
cltd
notb
test
outsb
notb
ss
mov
test
and
sbb
xchg
sbb
rcrl
rcrb
repz
cltd
pop
or
mov
aam
pop
adc
dec
lods
lcall
mov
std
mov
sti
push
lods
or
inc
addb
les
mov
rcll
stc
jl
iret
gs
jecxz
sub
cmp
aaa
lods
pop
idivl
movsl
dec
cmpsl
inc
repz
out
push
xchg
or
dec
dec
pop
sub
mov
and
out
jp
jno
inc
dec
xchg
mov
ret
cld
inc
lret
mov
push
jl
jns
ljmp
bound
xorb
jge
mov
daa
mov
inc
sti
stos
or
insb
push
test
mov
jae
xchg
mov
jae
fdiv
fiadds
repnz
mov
mov
mov
inc
imul
jnp
jmp
lret
inc
ret
inc
aam
xor
out
xchg
push
mov
pop
les
mov
and
pushf
cmp
xchg
in
subb
mov
mov
fwait
mov
inc
xchg
sub
pop
jg
mov
mov
nop
lret
or
fcoms
repz
add
dec
push
mov
sub
test
in
mov
test
cmp
mov
out
xor
outsb
pop
push
in
scas
jne
and
imul
aas
outsl
sahf
cmp
ss
lock
lock
outsl
ret
cwtl
xchg
jno
scas
sahf
add
mov
or
scas
dec
dec
ret
adc
or
xor
xchg
jle
mov
popa
in
outsl
daa
dec
out
mov
ret
jbe
mov
xchg
push
iret
imul
jp
mov
push
xlat
orb
loop
test
addr16
push
xchg
pop
sbb
xchg
dec
rolb
test
fists
sarl
jo
mov
call
sub
cmp
jo
push
repnz
leave
imul
jle
jo
and
add
sbb
push
shlb
and
sbb
lret
aam
adc
mov
fidivrl
mov
jmp
out
test
testb
cltd
aad
adc
imul
push
cmp
xchg
mov
fnstsw
popl
cmp
pushf
lods
cmpsb
push
mov
icebp
rcll
jecxz
xlat
enter
cli
addr16
jp
mov
jmp
mov
cmp
in
pop
push
sub
mov
pop
enter
in
inc
mov
or
xchg
jo
out
cmp
aas
ss
lock
dec
cmp
aas
std
mov
jne
push
cli
mov
leave
aas
jp
in
inc
sub
stos
iret
jg
fwait
jno
ret
xchg
and
cmpsb
cmp
shl
mov
repnz
mov
push
add
jg
or
orb
jnp
dec
xchg
cmp
pop
cmpsl
es
lods
add
cmp
mov
sbb
cmp
cs
adc
cmp
sti
js
pop
iret
scas
enter
aad
sbb
jecxz
dec
dec
mov
sub
lret
cmp
out
sahf
aad
and
and
mov
add
xlat
inc
inc
sbb
mov
aam
nop
jns
mov
push
leave
movsb
test
mov
inc
mov
sahf
and
loope
dec
mov
shrb
jg
pop
rorl
push
gs
mov
pop
shll
sbb
mov
xor
push
aas
jne
or
jle
sahf
or
or
not
jno
rol
adcl
out
jns
jb
imull
pop
mov
cltd
and
push
jmp
mov
jle
xchg
gs
sub
mov
int3
add
fs
daa
cli
es
fisttps
cmpsb
push
inc
sub
dec
adc
scas
xlat
xor
sub
pop
cmp
repnz
inc
adc
in
pop
fidivl
shrb
andb
ss
std
out
cwtl
sub
loopne
mov
adc
ljmp
ds
push
imul
testl
add
loopne
cmp
je
hlt
mov
loop
cmp
sub
stos
or
lret
xchg
sub
aaa
mov
mov
in
cmp
aad
xor
ret
je
or
or
imul
fistps
inc
cmp
inc
lods
ret
insl
jg
push
fsubrs
and
testb
inc
push
adc
jae
jbe
fidivrl
jl
mov
subb
dec
jns
inc
xor
jno
pop
push
push
test
sti
shrb
mov
outsb
call
push
mov
dec
lea
pop
lock
xchg
stc
push
enter
outsl
je
push
popa
std
decb
sbb
sub
jb
xchg
jecxz
mov
sub
jo
pusha
pop
jg
cmc
fnsave
and
push
and
sub
les
dec
pop
sarb
xsaves
lret
movsb
rolb
mov
outsl
and
lret
outsb
push
xchg
ret
ss
mov
pop
adcl
mov
repz
mov
add
jecxz
test
xchg
cmp
inc
adc
mov
repnz
jne
sarl
jmp
mov
sbb
hlt
cmp
cmp
rorb
stos
jg,pn
mov
push
rclb
cmp
lods
jge
mov
mul
sbb
xor
fdivrl
mov
cmovp
cmp
and
pop
ja
sub
js
enter
out
xchg
lret
pop
push
push
int3
popa
mov
pop
sbb
fwait
xlat
das
cmc
sarl
or
cmp
push
pop
gs
jb
inc
mov
sub
popf
pop
cwtl
mov
int3
and
pop
mov
rcll
lods
pop
stos
jg
cmpb
xchg
lcall
adc
je
dec
jnp
repz
sbb
ret
jp
dec
jbe,pt
sub
dec
shrb
ja
and
daa
xchg
push
xor
mov
daa
loop
inc
and
sbb
cld
pop
lret
xchg
es
dec
fs
loop
mov
jmp
inc
and
mov
pop
daa
pop
or
decb
jbe
mov
divl
push
scas
pop
pop
std
jmp
jecxz
into
inc
js
divl
sahf
add
leave
mov
push
mov
scas
xor
mov
pop
lcall
pop
testb
dec
in
cld
mov
xchg
sub
icebp
lcall
inc
sbb
inc
cs
pop
aad
adc
aam
loope
sbb
inc
sbb
pop
fdivl
sub
cmp
pop
fs
cmpsl
push
inc
je
dec
inc
mov
jecxz
mov
out
inc
shl
jl
push
scas
adc
jle
sub
dec
aaa
and
mov
in
call
or
mov
sahf
fcomip
push
movsb
mov
insl
adc
les
into
cld
pop
inc
or
test
into
testl
xchg
aas
dec
and
popa
lea
push
or
outsb
daa
sub
dec
std
or
mov
pop
mov
icebp
scas
inc
loopne
and
jno
add
sbb
gs
mov
in
test
push
clc
shll
mov
mov
pop
xor
sbb
xchg
imul
jle
pusha
test
push
cs
mov
or
sarl
xor
std
rcll
jnp
fmull
out
cmpl
mov
test
pop
stos
stc
dec
lret
sub
leave
jns
pop
sbb
jo
scas
pop
push
movsb
testl
test
adc
cmp
mov
fisttps
std
inc
jae
std
mov
add
inc
pop
repnz
mov
les
sbb
inc
mov
mov
imul
mull
adc
les
xchg
push
outsb
inc
dec
ret
push
clc
lcall
stos
sahf
jmp
mov
shll
push
aam
pop
pop
and
or
into
jmp
imul
outsb
xlat
pop
xbegin
js
xchg
hlt
dec
add
ds
imul
inc
mull
and
pop
add
add
data16
arpl
imul
and
xor
jne
mov
sub
mov
jl
and
mov
xor
loopne
test
hlt
push
xchg
movsl
loopne
xchg
adc
lret
xchg
jns
pushf
js
sbb
jl
ss
cmp
xchg
sub
pop
mov
sub
scas
cmc
xchg
cmpb
icebp
and
je
jae
xchg
dec
xchg
in
lret
jns
xchg
push
ret
negl
imul
les
aam
cltd
ficomps
test
pop
cmp
fwait
mov
inc
mov
das
iret
or
adc
inc
jl
lea
push
test
or
out
pop
rol
push
fistpl
imul
mov
xchg
mov
xor
rolb
aas
xchg
sub
aaa
stos
xchg
xchg
cmpsb
jno
loope
adc
imul
ja
xor
dec
cs
cvtps2pd
mov
bound
shrl
add
scas
pushf
mov
push
mov
xchg
xchg
js
stc
dec
pop
push
sub
hlt
sti
pop
into
mov
jno
mov
ret
and
insb
cli
fisubrs
sbb
dec
or
lcall
xchg
gs
adc
jl
cmp
xchg
and
mov
mov
daa
lcall
and
cwtl
inc
dec
mov
sbb
adc
add
sbb
mov
push
jmp
jo
movsb
ss
adc
sub
xchg
mov
outsl
mov
cmp
sub
inc
xor
sub
cwtl
std
dec
jae
roll
push
sub
jne
in
dec
mulb
outsb
movsb
mov
jl
mov
xchg
insl
xchg
fnstcw
mov
mov
pop
bound
ja
mov
sbb
rorl
and
rcll
mov
scas
mov
pop
mov
or
inc
lret
jmp
out
inc
cmpl
ds
cmp
rorl
jl
out
mov
mov
push
js
mov
stos
out
shlb
rorb
push
cmp
std
mov
push
lock
sub
sub
sub
je
or
and
jg
mov
or
mov
jnp
and
outsb
repz
pushf
shrl
or
mov
mov
cmc
inc
cmp
js
notl
cmpsb
in
adc
repnz
out
test
push
cltd
fbstp
or
fldcw
imul
test
outsb
add
sti
xor
jmp
pop
clc
cmpsb
aas
cmp
inc
lret
jo
dec
out
ret
mov
or
rclb
fcmovnb
adc
rcl
xlat
jno
xchg
lret
les
push
fdivrl
cs
inc
fistl
dec
sub
jnp
cs
cli
es
dec
hlt
and
scas
dec
icebp
popf
lds
sbb
ret
jns
jae
ds
test
dec
enter
xor
jb
add
test
mov
jo
ret
ds
fimull
outsl
cmp
les
inc
adc
gs
ja
pop
mov
daa
icebp
je
loope
lahf
inc
jbe
pusha
js
push
bound
sub
xor
push
pushf
les
mov
xchg
aam
fisubrl
push
cmp
jl
lods
shl
fdivrs
ficoms
jbe
jnp
aam
mov
js
test
xchg
fdivl
add
aas
xchg
nop
dec
lret
repnz
jo
jge
mov
ud2
sub
lock
and
mov
repnz
pmaddwd
ret
incb
cmpsb
mov
pusha
push
xor
mov
pop
jo
mov
fxch
leave
jle
sbb
xor
inc
dec
stc
jmp
fdivrl
and
jg
aas
sbb
mov
xchg
xor
xchg
mov
sub
cmp
out
les
out
mov
stc
or
sub
push
adc
push
mov
jl
data16
cltd
lahf
in
enter
mov
pop
xchg
dec
shr
and
std
jns
popf
push
jno
std
insl
dec
arpl
pop
lods
push
adc
stc
fildll
movsl
and
arpl
cmp
fistps
inc
or
inc
ljmp
add
cmpsb
and
adc
outsl
xor
fcomps
push
mov
sbb
shll
mov
les
stc
aaa
mov
jns
or
out
fcom
pop
cmpsl
test
imul
not
jmp
cmp
pop
popa
imul
lcall
jae
push
lcall
push
mov
mov
repz
scas
mov
and
push
andl
rcr
incb
out
bswap
push
push
dec
lock
loopne
mov
leave
cltd
repz
repz
xor
sbb
fwait
stc
mov
pop
test
daa
cmpsb
jmp
pop
xchg
dec
jbe
cli
sti
mov
iret
or
dec
and
pop
adc
es
inc
sbb
lods
cmp
xrelease
lods
sub
or
adc
int
outsl
inc
inc
cltd
inc
or
pop
and
imul
push
stos
mov
or
dec
pop
out
aas
sub
mov
sbb
jle
jns
test
cmpsb
clc
sub
lahf
push
and
test
push
mov
add
std
push
inc
iret
add
jns
in
daa
lret
sarl
adc
sub
dec
push
sbb
shrb
sub
and
popa
pop
push
xor
jo
lods
mov
js
fwait
dec
xor
jg
mov
jns
fucomp
or
cmp
jno
out
imul
sub
jne
cmp
aad
inc
jno
add
sub
fs
cld
jbe
test
fisubs
xchg
add
and
xor
xchg
test
jbe
sti
daa
mov
mov
mov
mov
loop
into
movsb
aad
sbb
cltd
nop
pop
andl
xlat
sub
lea
pop
testb
ja
push
and
cmp
pop
dec
pop
lahf
rcrb
jnp
jns
lret
inc
out
pushf
inc
rcrb
jns
rclb
jmp
fstpt
popa
fnsave
dec
pop
push
adc
leave
add
jp
subb
and
jo
fnstsw
mov
in
push
inc
sub
mov
push
jb
stos
je
stc
cmp
lods
orb
out
ficomps
stos
clc
or
xchg
xor
bound
mov
jmp
cwtl
mov
mov
xlat
sbb
xor
in
hlt
mov
enter
xchg
mov
cmp
in
es
jge
int3
mov
jecxz
in
and
add
test
xor
dec
mov
mov
sbb
movsl
push
adc
test
mov
leave
inc
sahf
in
inc
inc
jl
xchg
jle
gs
out
stos
or
aam
jl
jp
and
or
or
sub
adc
sbb
pushw
mov
std
xchg
cld
outsl
arpl
mov
enter
test
cmp
loope
fldenv
mov
gs
sbb
roll
sub
roll
mov
xchg
bound
sub
scas
popf
jl
jb
push
cmp
movsl
push
les
pop
repnz
js
mov
and
test
sbb
push
lret
sub
frstor
les
add
cmp
jbe
mov
testl
daa
arpl
and
gs
or
inc
in
xor
arpl
stos
xchg
mov
cmp
jns
cmpsl
xchg
sti
xchg
enter
xor
pop
cltd
sbb
sti
sub
mov
mov
into
cmpsb
add
and
movsl
jns
stos
subl
mov
mov
sbbb
sbb
notb
arpl
adc
in
jbe
add
push
xchg
int
mov
out
push
cld
pushf
inc
outsb
adc
mov
and
fs
mov
adc
outsl
pop
add
pop
sbb
cmp
repz
les
jg
pop
xchg
rcll
das
iret
xchg
test
adc
popa
sub
sbb
push
mov
push
hlt
push
nop
cmpl
aaa
dec
shll
stos
sbb
mov
or
bound
loopne
pop
and
cmp
sbb
leave
inc
pop
xchg
cltd
std
mov
lret
ret
stos
mov
nopl
dec
aas
inc
rclb
sub
repz
mov
loopne
popa
ds
fwait
sti
es
fstpt
sub
jnp
mov
xor
lods
mov
xor
dec
sub
adc
ret
jno
pop
pop
pushf
mov
ds
popf
insl
inc
mov
jg
andl
loopne
jp
icebp
aad
xchg
sub
stos
jmp
pushl
sbb
int3
ja
adc
jl
jo
pop
repnz
push
inc
xchg
addr16
repz
jo
popa
push
jp
jbe
sbb
lahf
and
es
pop
lret
mov
inc
xchg
push
pop
or
push
sub
shlb
in
int3
xlat
jns
push
ret
pop
lcall
repz
add
jge
cwtl
dec
or
mov
cmpsb
mov
ret
fs
inc
mov
daa
and
xor
sar
jae
nop
lret
loop
out
popf
jns
add
cs
push
mov
cwtl
fnstcw
sub
mov
mov
ja
into
insb
pop
stos
test
push
push
testl
jecxz
icebp
outsl
outsl
ljmp
pop
ja
mov
dec
cmc
add
and
add
mov
ret
shlb
and
pusha
imul
fiadds
shlb
push
ljmp
xchg
das
cli
sub
xlat
lods
or
fdiv
ljmp
pop
and
dec
mov
ret
repz
out
icebp
fcmovbe
mov
movsb
adc
xchg
pop
bound
movsl
les
and
nop
or
mov
pop
xor
jae
pop
add
add
jo,pn
push
inc
out
out
sarl
sbb
xchg
add
inc
mov
jg
sahf
iret
inc
jecxz
mov
pop
adc
ss
dec
shll
add
rcr
in
jne
xchg
sbb
mov
rcl
inc
jecxz
scas
push
push
addr16
mov
dec
cltd
push
dec
inc
mov
es
or
or
ret
outsl
adc
and
or
lods
fdivs
mov
add
adc
fidivrl
xor
or
pop
std
imul
call
or
cmp
push
pop
test
mov
enter
in
dec
push
mov
push
adc
adc
hlt
les
inc
mov
jo
popa
imul
mov
and
mov
outsl
mov
and
and
stos
out
xor
mov
pusha
xchg
or
notl
pop
mov
or
dec
test
cmp
inc
les
mov
das
lss
ftst
xchg
push
sub
pop
rcrb
or
roll
stos
ffree
xor
cmp
or
xor
xchg
dec
pop
xchg
ja
and
lods
inc
ljmp
push
push
pushf
sti
jge
and
pop
cwtl
imul
popa
aas
push
into
clc
icebp
add
adc
cmpsb
enter
cmp
aas
mov
std
inc
lcall
jmp
out
test
iret
shlb
mov
pop
movsl
mov
pop
test
pop
mov
test
jp
lahf
cwtl
sbb
pop
pop
lock
fdivrs
or
sub
dec
call
fmul
enter
or
lret
dec
data16
insl
out
push
lds
out
test
les
mov
push
outsl
bound
and
cld
lods
nop
arpl
int
rorl
cmp
add
lods
mov
fwait
test
push
ljmp
out
out
int3
jnp
cwtl
cli
cmp
sub
add
fwait
and
add
loope
sbb
or
xor
cltd
cli
jo
rolb
mov
dec
mov
inc
movsl
pop
or
aam
sub
mov
mov
lret
scas
or
adcb
hlt
and
jae
cwtl
fcomps
rorl
ss
adc
and
movsl
clc
push
jo
xor
mov
out
in
push
mull
xchg
jmp
dec
mov
xor
stos
lret
dec
frstor
lock
jbe
pop
sub
enterw
cmp
mov
shr
mov
in
sahf
aaa
lret
aas
cwtl
xchg
in
subl
dec
lock
and
pop
xor
push
jnp
jecxz
out
arpl
movsl
and
mov
mov
in
and
dec
or
mov
bound
push
je
iret
leave
out
sub
mov
xor
xchg
or
in
js
and
inc
int
and
dec
mov
out
sub
add
imulb
sub
lcall
in
std
repz
stos
jae
adc
insb
pop
pop
icebp
and
mov
add
push
dec
push
std
xor
ret
fsubl
mov
xor
jmp
xlat
xchg
xor
je
inc
jge
loope
xchg
cmp
mov
xor
fists
adc
shlb
movsb
out
lea
xor
sbb
jg
mov
in
dec
nop
adc
test
outsb
repnz
xor
addr16
inc
pop
xor
add
add
pop
push
mov
cmp
pop
dec
ljmp
lea
test
xchg
fs
dec
loope
out
jns
cltd
mov
add
mov
daa
xchg
dec
fisubrs
popf
icebp
adc
dec
mov
ljmp
aad
add
aad
jbe
hlt
cmp
inc
mov
push
aaa
mov
cmp
loope
sbb
cld
fdivrl
lret
xchg
dec
psrad
pusha
fcmovne
rcll
js
cs
test
push
arpl
add
fdivl
leave
cmp
add
mov
cld
test
out
sbb
push
jbe
inc
sti
and
das
enter
jo
jns
andb
fsts
and
push
add
lea
cmp
repz
test
inc
scas
push
fs
insl
hlt
bound
lods
arpl
sub
hlt
xor
mov
or
add
xor
sub
stc
add
fwait
xor
inc
push
and
cmp
sbb
add
lret
mov
mov
or
mov
or
mov
jbe
ljmp
cmp
roll
test
mov
in
fdivl
hlt
inc
mov
pushl
lds
clc
cmpl
and
dec
vprotq
repz
scas
and
shll
push
std
inc
sub
or
xchg
jl
xchg
push
sub
loope
jl
pushf
fmul
mov
pop
push
ljmp
test
jns
xchg
decl
push
sub
pop
mov
or
xlat
push
imul
pusha
test
jo
jmp
pop
or
imul
xchg
test
ljmp
push
adc
push
call
dec
frstor
xlat
pop
in
loope
testl
je
pop
mov
xor
adc
mov
cwtl
or
xchg
stos
lcall
push
cmpsl
movsb
dec
or
jmp
pop
out
stos
xchg
mov
xor
aaa
mov
add
out
icebp
inc
jmp
lods
mov
xor
and
push
or
aam
sub
mov
into
add
pusha
jne
out
xor
inc
fsub
fisubl
add
push
push
cmpsl
jno
cltd
daa
out
ror
add
dec
fsubl
cmp
iret
add
jne
and
out
cmp
sbb
inc
outsb
adc
call
sbb
movsl
fisubrl
ja
test
jb
inc
sub
shl
pop
dec
out
ja
cmp
cmc
or
adc
jg
sbb
ljmp
out
mov
stc
mov
loopne
ja
pushf
loop
mov
sub
dec
leave
push
jnp
jmp
mov
loopne
pushf
sbb
imul
enter
dec
jg
add
xchg
lahf
test
mov
mov
addl
jae
xor
bound
test
fcomip
sbb
in
mov
loop
aas
or
sub
mov
inc
imull
cld
cmp
aad
inc
scas
ja
fstpl
lahf
mov
scas
mov
or
and
les
movsb
aad
cli
fsubl
sbb
jge
aaa
lods
stos
push
in
test
add
dec
adc
or
data16
ss
dec
gs
mov
or
lret
ret
jp
adc
icebp
call
inc
movsl
popf
push
mov
mov
jg
xor
daa
sbb
in
add
scas
rclb
cmp
mov
mov
andb
ffreep
ret
add
xchg
add
lcall
loope
pop
insb
pop
inc
das
pop
adc
adc
inc
xchg
xchg
cwtl
jns
aaa
fdivl
stos
adc
adc
pop
and
and
inc
jbe
xchg
icebp
test
sub
lret
cmp
ret
add
stos
negb
sub
mov
rolb
out
push
outsl
add
stc
sbb
ja
scas
mov
mov
aam
mov
adc
rorl
rolb
and
sub
sbbb
mov
pop
or
cmc
dec
inc
lods
cli
dec
or
stos
inc
cmpsb
cmp
sbb
jo
les
push
add
jmp
mov
imul
pop
push
pop
dec
adc
fs
mov
into
push
out
jae
inc
lea
leave
ret
mov
lods
xor
lret
cmp
in
or
cwtl
cmp
xor
ret
fistl
xchg
mov
fdivp
cwtl
xchg
insb
daa
das
jecxz
int3
dec
pusha
jae
enter
scas
js
push
pop
dec
jae
aaa
jae
sub
inc
fwait
cmc
cmp
ret
sbb
sub
mov
stos
sti
jo
pop
stos
mov
add
jo
stos
push
lcall
in
sahf
cs
lahf
jge
jmp
and
pop
rcll
stc
leave
icebp
cltd
jo
outsb
inc
data16
sbb
ljmp
pusha
and
push
mov
dec
sbb
pop
insl
scas
fidivl
inc
out
in
and
pop
cmp
push
xchg
pop
addl
ret
jle
cmp
andl
popw
jb
in
shl
cmpsl
into
push
mov
push
rcll
js
data16
lcall
lea
scas
jle
add
mov
clc
adc
push
bound
push
pop
adc
std
xlat
fimull
mov
jmp
xchg
aad
mov
rcr
pop
push
jae
leave
adc
sbb
roll
fsubrs
scas
dec
add
pusha
aad
mov
xor
cmp
or
into
aam
add
roll
jle
sub
mov
loope
jge
dec
rcr
icebp
xor
roll
push
imul
in
sub
or
mov
adc
cltd
mov
xor
ror
adc
leave
fwait
in
mov
or
jae
and
cwtl
stos
sub
sbb
popf
shl
test
stc
int3
pop
mov
adc
xchg
xchg
aam
inc
jge
out
loop
divb
test
and
fwait
mov
push
adc
inc
ret
sbb
outsb
fisubrl
lcall
pop
stos
xor
dec
mov
jns
out
repz
dec
icebp
popf
or
aaa
in
lea
gs
mov
mov
int3
outsl
clc
mov
mov
push
sbb
sahf
test
movsl
inc
cmp
xchg
pusha
push
sub
jl
ret
xchg
repnz
lods
movsb
rolb
into
xor
mov
jno
loope
xor
cwtl
sub
call
and
in
scas
jb
clc
pop
dec
mov
enter
mov
ds
out
push
mov
leave
xor
mov
test
mov
push
lret
imul
jmp
pushl
xchg
in
dec
xor
addb
mov
cmp
push
push
adc
adc
in
and
xchg
xchg
ret
repz
push
out
inc
dec
or
sbb
sti
sub
mov
add
ljmp
xor
adc
cmp
jl
jno
sbb
aas
dec
fdivrs
fld
jmp
in
mov
cmpsl
push
xchg
cmc
mov
jne
sbb
push
roll
lret
fmul
rolb
fdivp
sahf
fnstenv
icebp
mov
insl
pop
fbstp
mov
cmp
test
idivb
lea
clc
adc
fadds
pop
ljmp
dec
es
lcall
loop
test
add
mov
out
xchg
inc
sub
aaa
movsl
pop
ja
in
fwait
ss
jle
fs
cmp
sbb
lods
lret
jo
std
std
insb
inc
outsl
mov
shl
sub
rep
xor
push
test
fadd
sbb
push
imul
push
sbb
inc
rcl
pop
and
jl
jb
add
loopne
xchg
aas
mov
pop
adc
fcomps
fistpl
adc
and
mov
mov
dec
imull
mov
cmp
mov
stos
lret
adcb
and
call
push
cmp
inc
stos
out
hlt
push
adc
push
sbb
bound
pop
xor
sahf
subl
pop
movsb
jne
cmp
imul
lds
aam
in
cmp
mov
pop
ficoml
fs
cwtl
mov
enter
inc
icebp
sti
test
cmc
cmp
repnz
sub
fcmovnbe
mov
test
pop
call
mov
aad
or
xlat
inc
cmp
cld
jg
cmp
in
cltd
push
cmp
test
andl
shll
adc
mov
mov
adc
push
jb
cs
sahf
arpl
int
stos
mov
in
push
xor
add
inc
inc
pop
scas
or
push
repz
fidivs
and
in
cmp
inc
fucom
sub
push
sarb
repz
jne
cmpsl
mov
push
imulb
dec
push
dec
jns
xor
in
adcl
pop
jns
ret
bound
mov
or
sub
cli
ss
jne
jmp
aaa
pop
sbb
negl
push
lea
mov
sbb
aam
jo
mov
sbb
push
push
inc
orl
push
ret
imul
xor
fisubrl
test
movl
pop
jbe
adc
push
test
push
lcall
dec
mov
cwtl
add
into
les
or
xchg
or
shrb
pop
int
cs
xor
sub
add
mov
adc
popa
aas
adc
icebp
loop
push
pop
mov
mov
lret
jae
pop
dec
movsb
mov
xor
inc
in
push
xlat
pop
xrelease
out
je
pop
sarl
push
aas
inc
mov
pop
rorl
jne
pusha
movsl
xchg
cmp
lods
jle
xor
cmp
jmp
add
leave
adc
jl
mov
mov
fs
sbb
aam
mov
sub
push
ja
insb
mov
pop
insb
dec
push
xor
cmpsl
xchg
jmp
subl
mov
leave
sti
cmc
pop
pop
mov
test
pop
cltd
ljmp
mov
lock
outsb
dec
jmp
cmp
inc
iret
pop
addr16
iret
push
cmpsb
rcl
xor
sbb
test
std
stos
push
fdivrp
sub
dec
adc
test
add
xchg
aas
cwtl
sbbb
data16
arpl
ret
fistps
xlat
or
idivl
movsb
fnstcw
in
decl
gs
mov
sub
insb
fwait
in
int
xchg
xlat
cmpl
pop
sbb
cwtl
mov
ss
sbb
repnz
lahf
out
shlb
or
lock
xor
sbb
pop
xchg
mov
pop
and
ss
mov
stc
xlat
sbb
fdivrs
push
inc
xchg
stos
enter
stos
shll
adc
test
mov
mov
scas
daa
and
sbb
mov
inc
ljmp
outsl
cli
xchg
cmp
jecxz
in
test
mov
mov
ret
push
mov
mov
pop
xchg
mov
out
xor
mov
pop
sbb
mov
subl
testb
pop
mov
add
mov
movsb
adc
push
add
stos
movsb
sub
mov
aas
push
ljmp
sbb
add
push
push
mov
imul
push
push
push
xchg
loop
cmp
ret
xor
xchg
mov
mov
adc
out
mov
add
inc
lods
dec
and
lods
sbb
xchg
fnstenv
ljmp
imul
xchg
sahf
push
dec
movsl
cmpsb
leave
push
data16
out
in
fidivl
xor
mov
pop
call
out
popa
ljmp
insl
dec
xchg
test
idivl
xchg
inc
inc
neg
fcomi
insb
fcmovbe
mov
imul
push
je
cli
popa
pushf
jno
rol
loop
jp
aad
add
push
mov
lock
and
pushf
jnp
jo
push
sub
push
add
sbb
mov
pop
jo
jmp
or
dec
jl
pop
push
cmpsl
or
push
adc
mov
xchg
imul
nop
inc
daa
add
imul
pop
fs
inc
shll
data16
fstp
movsb
pop
cmpsl
mov
movsl
ret
mov
adc
inc
hlt
sub
das
lock
cmpsl
xchg
add
gs
dec
inc
hlt
mov
ljmp
xchg
ret
inc
pop
enter
inc
mov
ja
ja
lods
or
loope
mov
push
ja
pop
insb
call
daa
mov
inc
fcmovb
inc
push
add
push
dec
aam
leave
fisttpll
or
lcall
pop
push
cld
stos
push
xchg
cmp
jbe
mov
lds
ds
push
roll
lret
shll
jmp
cli
hlt
inc
or
fcoml
fdivr
fldl
or
imul
or
rcll
or
daa
int3
mov
ds
xchg
mov
mov
daa
mov
nop
xor
fwait
inc
fists
scas
subb
ret
test
fsubrs
xlat
dec
bnd
mov
insb
mov
add
jb
sub
es
test
sub
iret
mov
dec
add
and
add
mov
cmp
ret
gs
inc
push
mov
sbb
in
into
dec
or
hlt
jecxz
or
repnz
andl
or
aas
std
fprem1
fadds
daa
sbb
pop
sub
push
or
mov
sti
lret
repnz
mov
fstpt
jo
icebp
adc
jns
push
clc
sbb
dec
cltd
xor
or
jne
mov
stos
pop
push
xor
lret
into
inc
outsb
push
repz
mov
popf
lods
jl
push
notb
scas
pop
fistpl
adc
movsl
xchg
or
sub
outsb
dec
insb
nop
cmp
sahf
cmc
inc
mov
sbb
arpl
sub
push
outsb
loop
pop
sub
ss
push
add
dec
aas
xor
xchg
inc
adc
mov
mov
and
push
xchg
inc
mov
dec
xor
fwait
in
aaa
notb
repz
fdivs
inc
adcb
pop
dec
mov
xchg
cli
cmp
add
and
pusha
ret
inc
sbb
dec
jecxz
out
shrl
mov
sarb
mov
cmp
mov
pop
push
cli
test
jge
jl
in
jmp
adc
fs
cmp
mov
add
filds
xor
dec
out
xlat
sub
sbb
mov
xchg
and
into
test
dec
and
hlt
and
jl
jb
ret
nop
adc
mov
arpl
push
push
aad
pop
sub
cmp
imul
ret
mov
xchg
sub
xor
jb
rcrb
rcrb
and
popf
or
and
add
inc
pop
stc
pop
xor
sahf
lret
fcoml
cld
xchg
sbb
pop
and
ret
mov
cwtl
or
cli
and
jnp
in
sub
mov
das
mov
insb
pushf
es
insb
and
ds
push
mull
jmp
or
leave
and
imul
out
sbb
pushf
arpl
daa
jle
add
mov
sbb
xchg
dec
call
xor
mov
and
addl
pop
fnsave
rorl
and
mov
fcoml
push
push
loop
fstl
addr16
adc
pop
dec
imul
cmpsb
out
enter
or
mov
enter
nop
ds
mov
xchg
pop
sub
push
imul
and
aad
pop
dec
inc
popa
mov
mov
rcl
insl
bound
pushf
fcmovb
xchg
sub
push
dec
jp
xor
ja
out
xor
sub
inc
arpl
imul
inc
xor
pop
js
pop
in
ror
pop
jns
imul
out
mov
arpl
jle
push
push
cmpsb
iret
clc
loopne
add
dec
inc
insl
inc
jnp
add
mov
push
xchg
or
in
es
ja
loopne
push
inc
cmp
std
loope
adc
and
lods
fnsave
fcompl
xor
out
bound
mov
pop
loope
mov
idivb
int3
loopne
dec
lahf
loopne
inc
addb
aas
lods
adc
jns
mov
stos
mov
js
cs
cmp
data16
fldcw
cli
sbb
dec
andb
ljmp
mov
jp
imul
rolb
jbe
ljmp
push
out
mov
mov
ja
outsl
sahf
mov
xor
sub
cmp
add
and
mov
shrb
dec
fmul
lds
addr16
push
leave
jae
fadds
aaa
ss
and
cmpsb
out
push
rdpmc
out
sbb
out
mov
pop
out
bound
cld
out
or
xlat
not
stos
and
push
out
dec
xor
scas
repz
sub
pop
pop
test
aaa
mov
pop
fwait
loop
pop
cmpsb
aad
int
or
nop
test
xlat
sahf
sbb
test
cmp
lds
icebp
mov
cld
mov
arpl
fisttpl
jae
cmp
leave
lret
xor
inc
fs
dec
xchg
sti
cmp
fiadds
ffree
out
out
divl
cmp
mov
xchg
les
cmp
xor
xlat
cmp
jge
ret
sub
lcall
popa
mov
adc
jecxz
and
lcall
xchg
jbe
pop
sbb
push
xchg
lock
test
jne
aad
hlt
pop
jns
mov
imul
gs
xchg
pusha
sub
push
mov
push
out
fstpl
in
in
outsl
xor
inc
das
loopne
push
incl
cmp
mov
mov
fwait
lds
ds
adc
bound
push
pushf
inc
push
iret
mov
neg
mov
shll
lea
pop
aad
in
lret
xchg
repz
or
ror
pop
das
ljmp
push
mov
adc
out
stos
aaa
cmp
push
je
lock
loopne
icebp
sbbb
aad
fidivs
outsb
push
sub
int3
data16
sub
int3
mov
add
in
mov
adc
gs
rclb
xchg
push
rcll
dec
lods
jle
cmp
jp
mov
loopne
add
mov
icebp
stos
loope
shlb
cmp
jae
sbb
cld
dec
sub
test
scas
adc
insb
cli
sahf
mov
xor
outsb
push
mov
das
push
or
test
sbb
cmp
add
into
mov
xacquire
in
mov
lods
in
enter
cmp
mov
cmp
ja
adc
scas
add
xchg
iret
adc
stos
outsl
adc
cmp
inc
test
add
mov
cmp
cmpsb
nop
sub
stos
inc
cld
pop
divl
pop
cmpsl
push
in
imul
sub
jg
xchg
sbb
lock
xor
aaa
cwtl
sub
in
ja
xchg
cli
in
mov
inc
jle
add
stos
mov
rcrb
sbb
sub
dec
mov
adc
loop
inc
sub
sbb
lea
xchg
and
xchg
cmpsl
xchg
push
add
out
and
int
xlat
sbb
inc
mov
repz
sbb
dec
or
xor
aaa
arpl
stc
inc
add
cli
test
popf
and
or
cld
mov
inc
push
lea
jecxz
loop
mov
pop
jp
mov
xchg
and
shll
cwtl
ljmp
pop
loop
les
mov
imul
inc
sub
je
mov
sbb
add
push
push
mov
mov
arpl
dec
cmp
add
shl
shll
into
jg
loop
cmp
sub
adcb
push
and
inc
pop
jb
xchg
mov
out
add
adcb
jnp
adc
loope
sbb
lea
inc
mov
fildll
inc
clc
mov
inc
lea
movsl
inc
lds
subb
repz
dec
and
mov
loopne
cmp
xor
fldl
gs
call
mov
lock
pop
xlat
cld
pop
push
inc
mov
out
out
repz
stos
jae
mov
or
sbb
pop
icebp
addr16
mov
adc
pop
test
in
adc
dec
lret
add
out
mov
lock
dec
add
fwait
mov
pop
add
mov
push
xor
xorb
jae
stos
iret
or
out
push
cmpsb
inc
pusha
jecxz
icebp
call
mov
xchg
loopne
into
outsb
mov
sub
test
imul
das
in
fdivrs
and
cltd
cmpsb
lods
xor
cmp
xlat
sahf
lcall
test
aad
jp
shrl
xchg
push
daa
add
pop
add
fwait
mov
hlt
jge
adc
jmp
xchg
cmp
push
pushf
jo
loop
stc
mov
rcrb
jb
nop
mov
mov
mov
faddl
adc
subl
fs
mov
inc
cltd
xchg
popf
std
ljmp
cmpsl
or
cld
fildll
mov
add
dec
std
in
mov
divb
fdivrl
mov
sub
sub
sub
pop
dec
xor
sti
mov
inc
in
xchg
xchg
cmp
int
out
pop
jno
subb
mov
loopne
mov
jns
ds
pop
add
ss
add
push
sbb
add
insl
mov
mov
and
in
xchg
ret
out
inc
push
push
jno
cmp
add
push
pusha
adcb
mov
hlt
cmp
mov
push
xchg
inc
in
push
jne
dec
test
sti
stos
mov
inc
lahf
test
jmp
add
and
cmp
jns
stos
pusha
xchg
jne
mov
push
mov
pop
int3
fs
jnp
divl
repnz
fiaddl
adc
pusha
inc
imul
nop
jbe
and
adc
shl
lret
push
fstp
cmc
gs
dec
adc
jmp
xor
xchg
add
ds
mov
jns
rcrl
es
adc
push
sbb
pop
inc
push
pop
jl
inc
cmp
subl
jg
and
je
mov
imul
cld
ret
lret
.byte
xchg
adc
adc
mov
cltd
nop
add
scas
loopne
mov
and
xor
cs
roll
repz
shlw
xlat
pop
pop
jmp
rcrb
lret
das
xchg
cmpsl
pushf
jo
ret
fidivrl
adc
std
repnz
sub
mov
xchg
dec
in
icebp
push
dec
push
pop
jecxz
or
push
xor
pop
mov
mov
dec
cmp
lds
mov
pop
sar
add
jp
mov
mov
repnz
mov
fstl
and
cmc
divl
mov
xchg
and
inc
sti
shr
push
jg
leave
sub
inc
cmpsl
xor
cmpsl
enter
jmp
mov
outsl
hlt
xchg
hlt
jb
add
lds
dec
xchg
sbb
mov
push
movsl
ja
or
imul
imul
fs
in
xor
cmp
stos
mov
mov
push
mov
push
jo
and
loop
ficomps
inc
data16
cs
push
xor
sub
pop
jmp
jp
iret
push
cmpsb
xor
add
fdivrp
lods
sub
out
xchg
mov
mov
jp
sbb
pusha
sarb
xchg
shlb
stos
movb
cmp
sub
cwtl
adc
stc
shlb
test
loope
bnd
outsl
sub
icebp
cmp
sbb
std
pop
scas
xchg
js
jns
jg
cmp
xor
pop
xchg
push
stos
sahf
sbb
cmp
xchg
stos
xlat
sbb
daa
call
push
pop
fwait
subb
and
xchg
and
lock
or
mov
movsb
movsb
and
xor
arpl
mov
mov
stc
xchg
in
scas
fnstsw
les
pop
push
out
ds
pop
push
imul
out
cli
push
jge
cmp
push
jge
ret
add
jo
cmp
and
sarl
jg
push
dec
cltd
pop
in
add
mov
aam
push
rorl
cmp
jmp
mov
mov
fsubrs
into
fnstenv
dec
xchg
cmp
inc
mov
push
aaa
sub
repz
setg
jecxz
mov
and
pushf
fbld
leave
inc
mov
in
out
aas
aas
sub
rorl
clc
call
and
push
fisubs
in
pop
pop
cltd
mov
push
stc
xchg
xlat
and
fcoml
sbb
out
jnp
data16
out
mov
es
jl
roll
insb
test
push
shr
bound
adc
mov
mov
inc
test
inc
and
inc
out
adcl
push
pop
sub
arpl
in
push
imul
xor
add
test
xor
push
push
adc
mov
dec
pop
hlt
inc
push
test
xchg
je
test
dec
aas
pop
daa
loope
mov
adc
scas
or
aas
dec
inc
mov
aaa
push
std
enter
in
aas
and
out
cmc
fistps
lahf
fidivrs
jns
lods
or
outsb
jg
push
mov
cmp
stos
in
and
scas
xor
das
jo
inc
add
or
or
push
xchg
mov
ds
rcl
mov
or
popa
mov
mov
movsb
dec
sbb
xor
test
rcrl
pop
sbb
pop
sti
imul
test
push
adc
cmp
cwtl
fs
or
inc
push
in
pop
int3
cld
xorl
add
cli
insl
lahf
cmp
leave
push
add
repz
mov
leave
movsl
adc
inc
ret
bound
sub
or
movsl
int3
lcall
scas
jbe
pop
push
mov
lods
pop
push
mov
sbb
sub
xlat
add
xor
inc
inc
sub
sub
xor
scas
out
scas
ss
mov
mov
jecxz
dec
mov
mov
jns
repnz
adc
int3
pop
pop
cltd
push
les
sti
lea
stos
mov
adc
lret
mov
mov
aaa
mov
cld
xor
repz
mov
int
jg
mov
in
and
loop
pop
adc
mov
insl
scas
xchg
sahf
jo
mov
pop
or
cmp
xchg
mov
daa
cmpsl
jge
xchg
add
addl
mov
int3
push
stos
rolb
test
ss
cmp
andb
dec
dec
pop
loopne
lret
rorl
inc
divl
outsb
int
mov
push
or
movsb
inc
sarl
lahf
subb
and
daa
jge
ja
aas
shrb
mov
jb
mov
jecxz
jp
dec
and
or
loop
fsts
dec
pop
leave
xchg
andb
jbe
cli
sbb
and
adc
xor
cmp
in
mov
hlt
dec
jne
inc
push
xchg
stos
or
fistpl
push
in
lods
push
mov
jl
outsb
pop
rcrb
pop
lcall
mov
inc
and
stc
icebp
dec
lret
cmp
sti
je
aad
stos
pop
insb
inc
mov
popl
xor
cmp
in
mov
or
pushf
sub
jo
out
ret
mov
push
insl
popf
xchg
test
clc
cld
jbe
movsb
cmp
aas
fxch
add
insl
ret
push
push
push
mov
mov
sbb
dec
jbe
ljmp
push
pop
inc
outsl
data16
mov
sahf
jp
pop
and
add
sbb
push
pop
xchg
lea
sbb
pop
mov
lock
jge
push
push
shr
call
mov
roll
test
add
mov
js
pop
stos
scas
mov
pop
push
and
mov
scas
sub
mov
int
sbb
jne
fwait
mov
sti
stos
es
pop
jns
pop
jbe
aad
mov
mov
mov
in
and
cmp
imul
hlt
add
les
test
mov
jae
lds
dec
dec
loopne
cltd
icebp
rcrb
daa
adc
popf
imul
in
inc
lcall
shlb
mov
push
scas
es
jbe
add
push
sub
xor
ret
fnsave
and
call
sbb
xchg
push
imul
push
and
dec
xchg
imul
movsb
outsl
pop
fiaddl
mov
cli
jmp
loope
mov
lods
aam
mov
jecxz
outsl
fs
ljmp
push
test
cli
and
mov
jl
imul
loop
aam
inc
jnp
jnp
adc
cmp
loope
in
scas
leave
loop
push
jb
rcrb
mov
add
out
push
fisubrs
sbb
clc
jecxz
mov
repnz
divb
mov
sbb
xchg
pop
xor
movsl
mov
test
inc
js
dec
pop
divl
in
pop
pop
test
push
cs
mov
js
testl
pop
inc
jmp
push
enter
add
and
outsl
cwtl
jecxz
jnp
ret
scas
fidivs
scas
lods
and
fldt
mov
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
push
push
mov
pop
pop
call
cmpb
jnp
fstps
jnp
add
and
mov
mov
pushl
mov
pop
sub
push
call
ss
movsb
or
add
add
pop
pop
sub
and
sub
and
push
mov
popl
mov
sub
mov
add
adc
sub
jne
out
jb
push
repnz
cld
mov
add
arpl
dec
or
pusha
inc
and
fs
add
sahf
repz
in
pop
jb
out
jb
pop
xbegin
xor
fs
sub
aad
arpl
dec
xchg
jmp
mov
addl
arpl
jne
movsb
dec
inc
test
js
cmpsl
addr16
pop
jg
int
xchg
jb
lret
add
mov
scas
repz
adcb
cmpsb
jl
jecxz
push
lds
cmp
jg
addr16
in
cmp
data16
fstpt
scas
mov
mov
mov
ficompl
aam
lret
popf
adcl
mov
ja
push
jb
cmpsb
adc
sarb
or
repz
cs
pop
mov
icebp
std
push
jb
insb
push
ja
addr16
sarl
test
std
jns
add
cmc
es
inc
mov
or
out
scas
in
or
outsl
pop
push
divb
clc
pushf
xor
cmp
xor
test
clc
jno
xchg
xchg
data16
jl
and
mov
cmp
inc
jns
bound
nop
scas
mov
rcrl
hlt
je
in
nop
push
and
cmp
pop
jbe
xchg
xchg
clc
mov
fisttps
mov
mov
mov
inc
jecxz
xor
cmp
push
movsl
mov
out
lahf
mov
fmul
dec
roll
mov
test
sbb
pop
cmp
xor
dec
mov
push
pop
xchg
aaa
inc
rcrl
cmp
sbb
xchg
test
mov
and
ret
mov
hlt
xchg
cld
fbstp
push
fsubl
mov
add
test
movsl
inc
lds
pusha
sbb
inc
xor
dec
outsl
mov
int3
in
jl
xor
and
push
call
divl
sarb
mov
test
popa
addr16
ja
xorb
pop
mov
mov
add
ds
adc
addr16
hlt
jl
dec
xchg
test
shlb
sbb
jl
jmp
iret
pop
daa
jmp
jp
jg
mov
pop
pop
and
xchg
iret
aam
dec
mov
into
and
xchg
test
mov
sbbl
add
jg
mov
lds
rorb
xchg
jbe
out
inc
icebp
add
fistpl
je
ljmp
movsb
icebp
xchg
inc
push
jb
testl
xchg
inc
and
ljmp
aas
dec
xchg
out
jns
mov
add
nop
insl
mov
cmpsb
adc
clc
add
xchg
mov
add
or
jmp
aas
dec
icebp
add
xchg
mov
pusha
mov
sub
pop
pop
clc
add
insl
dec
icebp
add
sbb
cs
inc
icebp
add
cmp
icebp
push
xlat
jecxz
mov
cmp
mov
cmp
xchg
dec
add
out
inc
icebp
jae
dec
add
repnz
icebp
jb,pt
in
add
repz
icebp
cld
fwait
in
testl
mov
aam
out
inc
icebp
or
lcall
aas
jae
stos
out
inc
icebp
jb,pt
in
add
icebp
inc
js
lret
add
jb
in
add
jb
testl
ds
jbe
fs
mov
ds
js
jmp
jns
repnz
icebp
ds
jbe
sub
inc
testl
sbb
in
in
mov
inc
icebp
push
stc
inc
xor
sti
inc
mov
leave
dec
push
push
jb
in
add
loope
icebp
add
pop
mov
icebp
ds
jns
repnz
icebp
ds
jbe
or
mov
mov
repnz
xor
icebp
add
jb
in
add
insb
pop
add
cmp
pop
cmp
icebp
jae
mov
push
mov
icebp
aas
pop
pop
cld
ds
flds
aas
dec
icebp
cmp
inc
icebp
add
imul
imul
push
cmc
add
jb
sub
jmp
int3
pop
ret
loopne
clc
push
cmpsl
mov
or
lods
sbb
and
shlb
outsb
adc
inc
icebp
sti
loopne
clc
push
cmpsl
mov
or
mov
or
inc
jg
mov
leave
leave
jnp
leave
outsl
cmc
mov
jnp
repz
shlb
sub
imul
push
gs
icebp
add
cmc
mov
jnp
repz
shlb
pop
jl
in
lahf
jns
icebp
add
cmc
mov
jnp
repnz
shlb
pop
imul
lock
addr16
hlt
xlat
inc
icebp
or
icebp
mov
or
testl
mov
leave
leave
sub
leave
outsl
cmc
mov
call
pop
aas
mov
enter
add
imul
testl
icebp
or
jno
repz
mov
adc
cmpsl
or
aas
insl
hlt
jg
xor
fcomip
xchg
xchg
bnd
imul
adc
cmpsl
or
or
cmpsb
adc
xchg
popf
aaa
mov
aas
insl
scas
mov
ds
repz
cmp
add
xchg
pop
movsl
imul
jbe
imul
inc
outsl
imul
addr16
jge
stc
ds
jbe
push
dec
pop
aam
dec
icebp
xor
and
jl
inc
nop
and
push
lcall
out
jns
stos
repnz
pop
mov
mov
xor
shlb
hlt
or
rep
or
mov
test
icebp
in
adc
or
sub
dec
cmp
mov
jp
insb
repnz
inc
nop
sub
hlt
push
push
sarb
push
clc
sbb
inc
cld
mov
addr16
push
mov
xchg
inc
xchg
cmp
icebp
add
aas
dec
icebp
add
aas
dec
icebp
add
aas
dec
icebp
add
xchg
nop
in
add
aas
or
add
aas
dec
icebp
add
aas
dec
icebp
add
ds
add
aas
dec
icebp
add
aas
dec
icebp
add
movsb
arpl
mov
inc
push
lock
sub
shlb
roll
dec
add
repz
cmp
imul
jbe
push
xor
shlb
push
jnp
cmpb
jbe
loop
hlt
aas
imul
sbb
add
add
dec
adcl
mov
stc
dec
insl
pop
pushf
addr16
mov
scas
notb
outsb
repz
enter
sbb
sub
pushf
scas
jno
aam
and
jns
loop
popl
push
insl
xchg
xchg
andb
xor
cmc
mov
mov
call
es
aaa
adc
dec
flds
mov
insl
and
stc
fwait
test
and
add
insb
sbb
subb
adc
push
decb
inc
sub
add
push
les
or
sahf
ret
or
adcl
insl
pop
add
push
pop
subl
jge
push
aam
pop
dec
aam
test
imul
pop
scas
daa
movsb
dec
cmp
pop
outsl
fistps
push
mov
and
and
pop
pop
jg
push
fisttps
mov
mov
sbb
lret
dec
mov
xor
jno
es
fsubl
icebp
je
jmp
repnz
nop
rcll
adcb
add
out
xchg
int3
scas
out
mov
inc
add
inc
enter
cwtl
jae
lahf
notb
add
xor
int3
in
or
or
shlb
testb
inc
mov
out
and
and
jge
in
call
pop
add
push
mov
ljmp
dec
arpl
iret
xchg
push
repz
cwtl
mov
adc
out
or
mov
dec
gs
mov
add
aas
cs
cwtl
add
pop
stos
xchg
sub
repz
mov
and
dec
fistps
cmpsl
daa
jp
stos
lods
pop
inc
add
mov
lret
sbb
out
jge
imul
mov
pusha
or
in
sub
and
lcall
ljmp
pop
outsl
dec
divb
sub
push
insl
aas
add
mov
xor
aas
inc
popa
popf
or
jg
lcall
adc
jle
inc
jmp
sub
cmp
mov
rcrl
pop
pop
adc
fwait
int
clc
xchg
and
xchg
xchg
fstl
adc
fucomip
and
ljmp
xor
mov
outsl
aaa
add
in
sahf
leave
popa
aas
push
in
mov
add
jle
fs
lds
arpl
inc
add
and
add
add
add
pushf
add
cmp
add
add
add
jb
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
pushf
add
hlt
fwait
add
cld
pushf
add
push
popf
add
or
add
adc
add
push
popf
add
imul
add
add
add
sub
add
aaa
popf
add
jns
add
inc
popf
add
sbbl
add
popa
fs
jo
xor
cs
insb
add
imul
insb
add
gs
xor
fs
insb
add
insl
arpl
xor
fs
insb
add
jb
imul
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
add
add
add
add
add
add
add
addb
add
mov
add
add
add
leave
popf
add
add
add
fistps
add
add
inc
jb
gs
imul
inc
gs
arpl
popa
jo
add
add
imul
jae
js
add
inc
gs
imul
outsl
outsb
dec
outsb
outsw
inc
add
add
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
add
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
mov
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
jl
add
add
xor
cmp
xor
xor
xor
xor
inc
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
outsb
add
add
add
add
popa
add
imul
je
and
push
add
insb
add
sub
add
add
arpl
je
outsl
add
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
add
je
sub
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
jae
jo
pop
add
jo
xor
pop
add
je
insl
add
add
add
xor
cmp
xor
xor
sub
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
add
je
jb
popa
add
je
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
add
add
test
xor
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
sub
inc
add
add
add
imul
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
insb
add
add
imul
je
jae
and
jb
add
add
jbe
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
pop
add
add
inc
add
add
pop
add
and
and
and
and
and
and
and
and
and
and
and
and
add
add
je
sub
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
sub
push
add
add
add
imul
outsl
add
jae
sub
push
add
add
add
jo
add
popa
add
add
add
add
jns
jae
je
add
add
add
inc
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
mov
add
add
add
and
adc
add
add
call
add
adc
add
add
sub
add
add
push
xor
add
add
add
add
add
add
add
add
add
addb
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
add
add
add
add
add
add
add
add
or
pushl
jo
xor
jo
push
aas
addb
idivl
divl
addb
icebp
pop
data16
dec
addb
stc
pop
out
dec
addb
incl
inc
add
addb
inc
inc
inc
jo
addb
mov
rcrb
jnp
jnp
pop
xor
rolb
add
add
mov
add
xor
add
add
add
loopne
xor
loopne
mov
loopne
xor
loopne
add
loopne
ja
sub
add
and
add
inc
add
add
add
add
add
add
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
xorl
xor
xor
xor
add
add
add
add
jnp
jnp
add
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
mov
xor
xor
xor
xor
xor
ja
addb
xor
aas
pushl
xor
push
addb
jg
aas
push
add
push
orb
div
aas
push
xor
push
addb
xor
xor
xor
add
testl
push
xor
testl
clc
mov
addb
xrelease
push
maskmovq
testl
incl
lock
addb
add
mulb
incl
addb
add
ljmp
cld
in
addb
add
jmp
cld
testl
push
addb
add
mov
xchg
ja
ja
ja
ja
ja
ja
add
add
inc
inc
inc
add
add
addb
add
inc
inc
inc
jo
pop
jo
add
add
inc
inc
inc
jo
pop
jo
add
add
inc
inc
inc
inc
inc
inc
inc
addb
add
ja
ja
ja
ja
add
add
mov
mov
lock
push
add
push
add
push
add
jg
add
aas
lock
aas
lock
aas
lock
aas
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
mov
or
add
add
dec
mov
or
ret
jp
mov
loop
addr16
imul
sbb
bound
daa
xor
push
pop
jnp
mov
loopne
mov
lcall
add
int3
loopne
and
lods
sub
roll
pushw
xchg
loopne
addr16
int3
push
call
mov
es
adc
xchg
icebp
fistps
and
push
negl
push
pop
popa
or
je
fsubl
pop
out
sbbl
outsb
icebp
mov
int3
sub
aam
or
in
int
sub
push
jae
xchg
loopne
jne
movsl
insb
mov
stc
fldenv
fwait
jecxz
adc
cmp
cmp
dec
cltd
cli
icebp
push
jecxz
push
mov
sarb
cmc
shl
es
xchg
sbb
cmp
jo
sub
cmp
adc
push
xchg
outsb
push
arpl
aaa
mov
in
pop
shrl
sbb
sbb
and
outsb
xchg
stos
pop
mov
repz
dec
sahf
add
rcrb
sbb
ret
arpl
jg
and
out
pop
insb
fldt
push
sub
mov
stos
es
add
pusha
fs
fwait
pusha
movsl
jmp
add
xor
mov
rorb
int3
fnstenv
or
sub
aas
inc
sbb
mov
shll
xchg
out
cmp
cmc
xchg
aas
sbb
mov
ror
jb
outsl
sbb
scas
sub
int
adc
sbb
xchg
lock
insb
push
dec
aaa
dec
adc
mov
lcall
fs
xchg
push
inc
movsl
test
dec
jp
pop
scas
add
or
sbbl
mov
inc
dec
pop
mov
push
das
dec
imul
ljmp
ror
pop
push
aas
mov
repz
or
cli
pushl
add
es
scas
hlt
insb
arpl
push
push
popa
xlat
mov
push
push
mov
cmp
jae
push
inc
jbe
jb
pop
fidivrs
sbbb
shrl
mov
inc
fdiv
sbb
jns
call
enter
stc
movzwl
push
cli
scas
add
adc
iret
outsl
xchg
sbb
xchg
mov
data16
cmp
pop
pop
lahf
and
lds
and
aad
cmpsl
mov
test
and
xchg
addr16
data16
mov
mov
push
iret
add
jg
arpl
xchg
shr
sub
xchg
jno
push
ja
cs
push
aaa
add
pop
or
mulb
cwtl
xchg
stos
stos
xor
add
adc
jmp
ret
ret
pop
call
popf
dec
gs
and
push
mov
or
loopne
sub
negb
fistpll
popa
mov
adc
dec
movsb
mov
xlat
jecxz,pn
pushf
aam
in
ret
loope
lret
and
imul
and
ret
mov
cmp
dec
jp
mov
movsb
stc
sti
adc
xor
pop
add
dec
inc
jnp
xor
jno
xchg
call
xchg
sbb
sub
adc
ljmp
dec
mov
xchg
popf
or
sub
sub
fisubl
mov
sub
jbe
sbb
push
outsl
divb
js
sub
gs
out
mov
sub
mov
sub
rcll
xchg
adc
xchg
enter
xor
ja
imul
sub
xchg
xchg
cmp
into
xchg
and
mov
xor
lock
mov
jle
rcrl
adc
and
repnz
mov
cmp
andnps
insb
adc
iret
jge
push
jae
shrl
mov
and
inc
outsl
pop
fistl
das
cli
and
cwtl
cmp
sbb
inc
jbe
inc
and
test
mov
jle
cld
sub
xchg
add
jmp
jg
dec
dec
inc
ltr
xor
sbb
pusha
inc
lods
jae
add
add
test
xlat
or
jge
arpl
js
xor
cmpsb
mov
push
sbb
push
mov
repz
test
leave
mov
sub
cmp
ret
cmp
stos
lds
addr16
scas
jns
ds
subb
mov
ret
pop
jns
lcall
or
mov
mov
xchg
mov
xor
repnz
xor
leave
inc
sub
pop
iret
jne
add
das
pop
xchg
test
ds
lock
add
push
arpl
pop
popf
out
icebp
call
xchg
cmp
mov
stos
cs
mov
in
or
xor
push
cmpsl
cmpsb
mov
inc
push
mov
lahf
mov
sarb
pusha
add
adc
or
popa
lcall
es
leave
xor
dec
into
sbb
insl
mov
mov
mov
sub
and
test
xchg
fildl
insl
jecxz
aad
testb
add
xorb
aas
inc
and
ficompl
jp
int3
test
popa
ds
insb
enter
int3
mov
jmp
in
sbb
ljmp
aad
inc
or
roll
xor
bound
push
sar
dec
dec
mov
or
add
sti
push
lds
jae
pop
ds
mov
mov
lret
shr
sarb
ja
lret
cli
js
loop
xchg
add
push
dec
cli
cmp
mov
scas
cs
mov
test
xchg
outsb
fsubp
cmpsb
pushf
lea
insb
inc
cmc
jb
outsb
les
call
data16
mov
ret
push
enter
add
pop
scas
push
dec
and
sbb
mov
add
mov
mov
jge
lahf
mov
jns
ret
lods
out
xor
lock
xor
pop
mov
out
in
add
mov
xchg
in
data16
and
pop
daa
xchg
and
pop
sub
mov
pop
mov
push
pop
or
jge
xchg
push
rorb
lret
pop
xor
mov
cld
inc
sbb
or
dec
inc
insb
and
aam
lret
push
xor
rclb
les
cmp
adcl
repz
add
lock
iret
call
xor
pop
jno
mov
in
sub
fstps
mov
or
add
cmpsl
xor
add
in
lds
pop
inc
repz
lods
rcll
mov
pop
setg
push
sub
or
sub
test
jp
dec
push
ret
ret
jl
fld
call
cmpsb
mov
mov
cmp
mov
or
mov
mov
and
fstpl
divl
mov
imul
inc
dec
cmpsb
rcll
inc
icebp
cltd
int
ds
sub
js
or
xlat
adc
nop
sbb
jnp
stos
arpl
js
lods
dec
cmpsb
movsb
loop
mov
cmp
mov
std
jmp
out
fwait
out
shl
jmp
sarb
lds
roll
push
jecxz
push
inc
push
sub
imul
pop
data16
btc
imul
cmc
les
stos
push
inc
pop
mov
inc
lock
pop
movb
dec
scas
mov
loopne
xor
or
inc
mov
add
popa
cmp
ja
inc
stc
mov
test
pop
popf
aaa
icebp
test
push
popa
adc
push
pop
insb
cli
stc
or
jo
push
mov
pop
mov
idiv
aas
push
fwait
cmp
call
pop
or
jp
xchg
in
sarb
sahf
mov
cld
outsl
adc
jae
ss
mov
push
incl
xchg
add
dec
pop
cmp
inc
je
and
out
int
adc
lods
cmp
sub
push
sub
je
out
sbbl
arpl
loope
sub
rorb
jne
negl
push
cmp
hlt
cmp
pop
jo
dec
mov
and
add
les
shlb
mov
pop
stos
outsb
pushf
inc
jle
jne
and
push
loopne
das
pushf
adc
push
push
int3
and
mov
imull
subb
inc
aad
sub
shr
add
test
dec
addr16
lret
movsl
dec
test
add
enter
and
and
push
mov
das
int3
adc
sbb
push
xchg
inc
push
test
sarl
or
and
cmpsb
and
je
push
sub
jmp
ja
jne
adcl
inc
mov
add
push
jecxz
cmpsl
inc
xor
into
ret
jge
sbbb
mov
ds
dec
xor
mov
inc
in
scas
push
mov
aad
cwtl
lock
push
popa
lret
sub
push
jle
in
xchg
repnz
in
inc
mov
lea
dec
mov
dec
inc
cmp
ror
into
aad
and
mov
dec
pop
insb
inc
pushl
cmp
cmp
cmp
dec
cltd
test
test
xchg
xchg
sub
ret
outsb
or
outsb
adc
loop
pop
add
cld
sbb
out
pop
pop
into
bound
cmpb
push
xchg
xchg
cmp
aad
and
jge
rcrl
xchg
call
push
iret
fcomps
sbb
das
fisttps
inc
xor
lock
pop
pusha
hlt
adc
mov
int
rcrl
adc
fdivrl
loopne
mov
add
aam
nop
rorb
test
and
cmp
scas
add
mov
mov
sub
repz
adc
sti
sub
rcrl
arpl
mov
mov
push
xor
mov
rcl
lcall
add
jno
call
sbb
xor
imul
push
repz
xor
repz
mov
scas
push
adc
cmpsb
or
stos
add
xchg
stos
mov
push
stos
iret
cmp
pop
aam
in
jb
daa
enter
mov
pop
in
xor
xor
sarb
outsb
pop
fildl
adc
mov
mov
ret
or
out
and
cmp
add
cltd
lea
pop
je
sbb
mov
mov
or
jo
fsubp
inc
cmp
push
lock
mull
lea
mov
loop
fsts
and
int3
cmp
jno
inc
mov
dec
cld
dec
cmp
push
mov
addr16
mov
push
stos
cmp
cmp
out
lock
test
jne
jp
add
sbb
mov
shl
out
xchg
fisttpll
mov
pand
push
xor
cmp
inc
inc
aam
add
jge
mov
test
xchg
shl
jbe
mov
addr16
js
push
mov
or
or
mov
fs
mov
dec
xor
dec
jmp
iret
xor
add
cmp
pop
sbb
mov
out
imul
mov
mov
stos
dec
jbe
outsl
movsl
in
xchg
or
xchg
jg
ret
inc
xchg
outsb
jge
fst
rdtsc
push
push
jecxz
fcompl
out
inc
cld
push
dec
jne
icebp
cmp
or
adc
rcrl
xchg
repnz
dec
cs
mov
sbb
aas
mov
add
mov
pusha
jecxz
pop
xor
xor
sbb
sub
mov
mov
out
aaa
in
ret
stos
push
fs
push
popa
nop
aaa
dec
push
cmp
mov
out
xchg
sbb
scas
cmp
cmp
cmpsl
or
jl
sub
sbb
mov
add
pop
cmp
std
mov
push
add
sub
sbb
jbe
icebp
neg
aad
rcl
fadd
subl
insl
in
cltd
ljmp
cwtl
pushf
lods
ds
daa
add
mov
int
or
iret
fs
fmull
lock
rclb
xor
outsl
fcmovbe
fisubs
repz
stos
scas
rcrb
mov
pop
div
dec
pop
nop
stos
jno
cmp
mov
aam
or
sbb
cli
jne
jne
dec
xor
jno
bound
sti
js
fnclex
jo
add
rorl
or
fldenv
dec
adcl
dec
mov
sbb
stos
cld
rolb
mov
xchg
test
dec
jnp
mov
gs
jl
movsl
jb
mov
sub
mov
mov
mov
loope
fidivrs
pushl
repnz
inc
fsubrl
and
inc
mov
jne
sti
ficompl
dec
fdivrl
push
mov
or
add
outsb
xchg
lock
mov
pop
dec
ja
stc
sbb
mov
insl
add
inc
cs
sahf
es
test
std
aas
mov
add
inc
ljmp
xor
mov
mov
stos
inc
adc
pop
pop
cmpsb
dec
orl
ss
push
in
mov
inc
jns
add
test
mov
loope
es
mov
pop
sbb
jp
cmp
je
fistps
pop
xchg
xchg
insb
add
pop
sbb
push
mov
mov
push
pop
outsb
imul
add
movsl
and
mov
push
sbb
and
fistl
testb
jne
push
clc
xlat
pop
mov
cltd
dec
and
pop
lea
movsb
adc
push
loop
mov
add
inc
and
mov
pop
ds
xor
xor
dec
call
and
and
dec
std
out
add
lahf
inc
rorl
pop
sbb
sbb
mov
inc
daa
sbb
fadd
sahf
mov
mov
xchg
aam
fildll
add
xchg
or
sub
fbstp
mov
aam
mov
add
or
push
push
jns
mov
movsl
test
mov
ds
pushf
mov
into
sbb
pop
sub
aam
bound
dec
aam
or
and
and
push
add
fwait
adc
popa
popf
push
in
aad
jl
repnz
adc
mov
in
mov
pop
xchg
mov
loopne
rcrl
int3
gs
lcall
sub
leave
pushf
xor
sub
js
xchg
jbe
mov
mov
xchg
int3
sub
mov
pop
loopne
fcoml
rol
aam
xchg
scas
inc
fsubrp
mov
push
push
sub
jge
sahf
jb
xchg
fnsave
mov
inc
inc
mov
movsb
mov
imul
inc
dec
inc
sub
out
movsl
fidivrs
lods
or
ljmp
adc
fxch
cmp
cwtl
sub
dec
jb
idivl
cltd
mov
sbb
mov
cmp
subb
push
scas
xchg
pop
test
ljmp
jno
lcall
pop
mov
push
movsb
sub
push
jle
mov
rcll
std
int3
test
pop
jbe
shrb
ja
xchg
mov
incl
addr16
lods
test
push
lods
dec
cli
push
dec
movsb
push
call
jno
andl
insb
add
roll
mov
mov
fnstcw
or
jno
mov
mov
add
outsb
xchg
push
adc
mov
aaa
in
cwtl
ljmp
sbb
js
pop
push
fbstp
daa
mov
sub
add
enter
push
lcall
jmp
sbb
imul
inc
ret
xor
cmc
sahf
mov
ss
out
pop
iret
mov
les
cmp
outsl
fucom
jge
pop
mov
dec
cmpsl
sbb
adc
shll
xor
fdivrl
rcrl
es
pushl
xchg
in
ds
pop
sub
xorl
shrl
cmc
cmpxchg
push
int
push
fnstenv
inc
xor
sbb
dec
xor
adc
rcrl
cld
out
jae
mov
jp
dec
sarl
or
stos
xor
add
fcoms
pop
aad
int3
xor
out
and
jne
mov
pop
push
mov
in
leave
add
ror
pavgw
pop
xchg
aad
mov
dec
mov
arpl
dec
xor
std
ret
xor
push
mov
sub
xlat
pop
sbb
mov
mov
imul
pop
mov
imull
add
fisttps
out
clc
push
scas
loopne
das
cwtl
xchg
lret
les
inc
pop
out
mov
nop
cmpb
xchg
fistpl
jmp
pop
cmp
popa
hlt
lret
clc
add
ret
call
push
push
dec
in
pushf
mov
lahf
ffreep
adc
jbe
xor
shr
mov
shrb
push
jbe
sbb
and
xchg
daa
jl
add
sub
xor
lds
jl
dec
outsb
in
cli
mov
cmp
jo
mov
ljmp
fcom
test
in
aad
mull
lret
enter
mov
ret
jne
in
out
ds
push
or
mov
dec
fwait
lret
pusha
lock
adc
sbb
jno
dec
lods
incb
shlb
stos
xor
push
inc
shlb
push
or
andl
test
movsb
mov
js
lods
aam
lret
sub
hlt
or
nop
aam
inc
cli
inc
sarb
testl
nop
jle
mov
aad
xor
clc
push
and
ret
or
lret
pop
out
push
outsl
sti
adc
or
cmpsb
pop
js
or
dec
add
repz
dec
mov
nop
ficompl
xor
and
test
test
ljmp
jmp
and
stos
sarl
lods
mov
adc
mov
inc
cwtl
movsb
js
jle
mov
xlat
jle
inc
cmpsl
aad
adc
cmpsl
cmp
fmulp
sarb
push
iret
sti
mov
mov
sub
inc
out
sbb
pop
out
orb
mov
iret
ret
add
cmovbe
push
es
xchg
hlt
ret
mov
push
int
jecxz
or
mov
pop
aam
cltd
faddl
adc
js
rcrb
dec
int
in
jp
rorb
xchg
inc
insb
fisttps
bound
push
and
out
out
mov
mov
roll
ljmp
mov
faddl
mov
sarb
jg
adc
push
mov
lock
in
pop
cltd
push
loopne
psubsw
lock
adc
ja
cld
sub
cmpsl
xchg
adc
lods
xchg
insb
repnz
call
repnz
int3
adc
add
fdivrs
enter
and
roll
push
xchg
xor
pop
inc
and
in
les
lods
aad
out
jb
jl
sub
jbe
inc
outsl
shrb
insb
dec
roll
or
fcmovnbe
fldcw
mov
into
mov
jmp
out
add
jecxz
loop
ds
adc
dec
dec
das
shrb
lret
movsb
mov
pop
je
or
sub
or
push
fcmovnb
cs
cmpsb
aam
adc
add
fwait
cltd
dec
fdivl
loop
inc
pushf
adc
rorb
movsb
jle
std
js
mov
aas
arpl
push
ljmp
sti
lea
loop
xor
mov
divl
int3
xor
fisttpl
sbb
cli
xor
subl
loope
fadds
clc
and
sbbb
loope
or
dec
add
inc
testl
pop
cmpl
ret
daa
push
cmp
popa
or
shrb
lahf
rep
shlb
sub
jbe
scas
loope
mov
sub
ret
lret
inc
lret
xchg
mov
cmp
ljmp
jne
push
test
mov
pusha
or
pandn
lds
push
sub
and
lds
push
cmpsl
push
jg
mov
pop
push
mov
dec
push
sub
and
cmp
int
aas
jne
adc
insb
fdivs
or
pop
rcrl
mov
xor
or
jge
sub
shll
pop
fcoms
stos
arpl
inc
ja
std
push
mov
mov
mov
xchg
dec
jp
mov
pop
mov
aas
inc
or
dec
push
dec
repnz
hlt
xchg
and
cwtl
js
loopne
out
scas
gs
dec
mov
pushf
mov
push
mov
cwtl
xchg
shr
sub
and
addr16
das
add
xchg
add
pop
push
mov
mov
dec
mov
dec
mov
xchg
sub
push
fldl
aas
pop
or
xor
or
xor
in
or
mov
or
pushl
xchg
inc
std
xchg
sbb
xor
push
pop
xor
lret
repz
inc
push
jmp
jge
js
in
dec
push
aaa
cwtl
sbb
and
xchg
cmpsl
mov
jnp
xor
aad
sub
cmpsb
mov
fiadds
inc
aaa
jb
js
fiaddl
jge
in
lahf
mov
sub
les
pop
inc
fnstcw
add
gs
lock
cs
hlt
cmp
das
xor
push
out
dec
nop
sub
mov
ret
and
jmp
lock
dec
xchg
inc
out
sets
and
ljmp
or
dec
das
push
icebp
mov
mov
pop
dec
mov
sbb
mov
push
or
add
xor
jbe
fs
out
stc
or
mov
mov
add
test
rep
mov
inc
jp
dec
and
rcll
sub
leave
loop
jmp
cmp
mov
and
mov
outsb
sub
mov
into
and
lds
je
dec
stos
lahf
in
xor
sbb
xchg
mov
fistpl
sbb
xchg
pushf
pop
hlt
out
adc
lock
fwait
inc
adc
in
push
adcl
cmpsb
dec
pusha
cmc
inc
xchg
cmp
jle
and
fdivl
iret
daa
sahf
push
ret
push
pop
push
enter
ljmp
mov
xor
stos
mov
data16
mov
out
dec
jns
fwait
push
sti
push
mov
mov
dec
stos
mov
adc
daa
push
pop
hlt
sbb
mov
cmp
sub
mov
lods
int3
and
inc
xchg
dec
xor
adc
jp
pop
daa
fisubs
ljmp
adcb
adc
cmp
nop
or
jle
shll
jg
rcrl
roll
mov
adc
sub
in
mov
andl
dec
ljmp
lcall
dec
mov
jne
mov
push
lods
sub
sbb
sbb
out
negl
and
lahf
inc
rorb
and
push
sub
insl
sbb
pop
int3
fstpl
push
ja
bound
and
jmp
into
xor
mov
test
adc
rcrb
repnz
cld
addr16
jmp
std
rorb
cmpsb
lods
or
shll
loop
mov
and
jo
xor
int3
inc
or
inc
adc
in
xor
inc
sub
push
movsl
or
cmp
fsubs
push
stos
out
cmp
lods
scas
cmp
jmp
push
imul
jae
cltd
fistl
loope
test
mov
cwtl
stos
sub
das
testl
sbbb
test
xor
inc
xchg
or
cli
mov
pop
jg
aaa
insl
xchg
mov
pop
test
jno
mov
cmp
push
push
xchg
add
outsb
movsl
xor
adc
sahf
inc
dec
ret
jns
addr16
inc
ljmp
mov
leave
aad
aaa
js
or
cli
out
clc
movsl
sbb
sahf
pop
inc
ret
push
movsb
xor
mov
mov
mov
and
dec
pop
jo
adc
arpl
addl
adc
aam
shrb
aad
aad
cmpsb
test
jg
xor
jecxz
sti
sub
outsl
pop
scas
repnz
cmpsl
jne
stos
adc
out
add
addr16
rorl
jb
iret
ret
je
push
jns
imul
movsl
pop
loope
mov
xchg
call
sti
mov
mov
fisttps
cmp
scas
les
jmp
xchg
jno
stos
mov
addb
pop
mov
std
xchg
lret
mov
and
out
out
popa
inc
xor
and
loop
movsl
push
ret
cmp
push
pop
std
nop
xchg
ds
mov
jl
dec
sahf
les
xchg
cmp
mov
mov
jbe
xchg
sub
rolb
sbb
fnstsw
insb
stc
push
repnz
add
aas
repnz
push
fdivrl
inc
test
adc
mov
mov
sti
dec
call
test
adc
adc
inc
push
mov
fsub
and
pop
enter
mov
nop
ss
cli
incb
enter
pushf
frstor
push
sbb
and
sub
lcall
mov
pushf
inc
addr16
out
push
iret
mov
sub
sub
cli
xchg
loopne
ficoml
or
rorb
js
and
cmp
mov
inc
mov
xchg
std
mov
and
mov
add
rorl
mov
or
in
or
outsl
dec
jl
push
out
rcll
jecxz
adc
push
sbb
inc
mov
les
or
ret
test
mov
ret
xor
and
xor
inc
jmp
arpl
rcll
mov
sbb
sub
repnz
test
mov
xchg
int3
nop
lea
mov
scas
imul
out
popa
mov
push
add
push
cmp
add
stos
test
xorl
pop
adc
outsl
pop
jl
xor
scas
and
sbb
jns
jne
pop
push
pop
ja
loopne
jo
aad
or
push
dec
loop
lock
and
xchg
adc
sub
ret
enter
hlt
mov
xchg
ds
clc
ljmp
repnz
gs
inc
cmp
cmp
inc
arpl
dec
inc
add
pop
or
xlat
jno
test
mov
mov
lock
outsl
or
mov
and
xor
sub
xchg
fiaddl
addb
jl
pop
xor
sbb
fildll
jg
sbb
dec
pushf
and
ljmp
add
mov
xchg
lds
dec
mov
sbb
mov
lea
or
sub
test
ret
sub
push
sti
jbe
js
adc
shl
rcll
sbb
push
xchg
daa
add
xorl
xchg
pop
pusha
out
lret
dec
adc
xlat
in
adc
sub
in
out
mov
shrb
xchg
pop
mov
sub
lock
xchg
jnp
lahf
addb
pop
or
sub
lods
sbb
in
cmp
pushl
rolb
cmp
or
push
cmp
mov
into
mov
out
mov
scas
rcll
cli
mov
push
jl
rcl
adc
lock
mov
lock
mov
fistl
cmp
lock
jmp
clc
enter
movsb
repz
xchg
adc
jne
int3
push
pop
aas
jb
cmc
jmp
pusha
stc
loope
add
std
xchg
sub
clc
push
insl
sub
loope
or
aad
dec
in
scas
lcall
ret
xchg
ret
push
adc
aam
in
mov
dec
rcrb
sahf
or
add
fadd
addr16
pop
jno
imul
fistl
and
push
push
cltd
sbb
push
or
je
xchg
insb
push
sti
mov
dec
mov
inc
add
push
negl
pop
mov
insl
adcb
pusha
icebp
loopne
adc
xorl
leave
aas
pop
pop
loope
sub
xor
lds
add
push
pushf
mov
pop
lret
cwtl
add
test
dec
mov
mov
test
dec
cmp
jge
aas
test
ds
and
inc
jbe
cmpsb
mov
int
popa
cmp
push
loopne
mov
in
inc
stos
lods
xchg
leave
mov
lea
out
iret
pop
and
adc
out
ficoml
mov
xchg
mov
sub
enter
add
les
test
in
mov
sub
lea
cltd
cmp
popf
out
jns
stos
add
ss
sub
in
pushf
pop
or
push
fs
jne
out
push
mov
rcr
or
adc
je
dec
cmp
call
jg
dec
aas
mov
lds
jmp
inc
iret
dec
inc
jnp
inc
pop
fadds
add
je
adc
pop
adc
add
xor
inc
movsb
and
adc
cwtl
int3
loop
inc
jl
jg
adc
inc
popf
jecxz
in
adc
mov
cs
int3
mov
arpl
xlat
out
test
push
mov
negb
pop
adc
shlb
dec
movsl
mov
or
repnz
call
inc
arpl
inc
pop
xor
adc
test
push
xor
fxch
pop
mov
sbb
sub
mov
cli
mov
push
mov
mov
adc
lcall
cmp
push
ss
cli
mov
sub
mov
and
xchg
in
xchg
inc
icebp
dec
jne
imul
mov
sub
xchg
dec
mov
and
mov
xor
xchg
sbb
dec
sbb
sti
push
xchg
jmp
cmp
lock
adc
xchg
enter
dec
jmp
mov
fbstp
imulb
push
call
mov
add
adcb
and
jbe
jbe
sti
push
gs
aad
inc
sub
pop
sti
ret
add
cmpsb
data16
inc
and
add
push
dec
add
cmp
idivl
icebp
mov
data16
sub
or
lcall
mov
sbb
sbb
rol
vpmaddwd
xor
jmp
out
or
sub
mov
iret
jp
pusha
repnz
push
push
push
push
and
popa
mov
hlt
das
ret
adc
pop
popl
repnz
popa
mov
dec
mov
out
paddusb
push
mov
xchg
xor
aas
ljmp
and
dec
lcall
xor
sub
in
pop
test
repz
mov
mov
fstpl
les
imulb
rolb
inc
lret
insl
int3
dec
add
pop
lods
xor
cmp
mov
fs
cmp
dec
jl
popf
adc
mov
frstor
test
movsl
bnd
sbb
push
dec
fiaddl
loope
adc
stos
or
xchg
pop
xchg
push
and
aam
je
fsubs
lahf
bound
lea
insl
ss
add
test
sbb
int3
jl
ljmp
xchg
or
gs
pop
rorl
mov
xchg
gs
loop
mov
sub
mov
pop
daa
push
xchg
jp
push
dec
outsb
and
cltd
xor
inc
cli
outsl
mov
das
or
test
lret
mov
push
jle
lret
mov
jp
sub
inc
das
jmp
and
pusha
imulb
les
movd
lds
xchg
jbe
shlb
pop
ficompl
lret
push
or
xchg
cmp
out
sbb
inc
addb
aam
xor
pop
cmp
lea
movb
ja
push
mov
ret
repz
ss
cld
cmp
and
das
jmp
clc
ss
pop
test
outsl
movsl
sub
das
mov
pop
xchg
cmc
leavew
sbb
movsl
mov
test
cltd
int
nop
sbb
dec
mov
fadds
pop
and
pop
stos
prefetch
add
adc
nop
out
shll
or
std
jb
les
loope
int3
lret
dec
fisttpll
sub
jle
xchg
mov
xor
push
cmp
and
inc
cli
jge
mov
inc
mov
xchg
enter
push
add
orb
pop
popf
cmp
add
mov
sbb
cld
and
add
into
add
hlt
xor
das
test
mov
bnd
lods
dec
xor
inc
sub
scas
inc
faddl
mov
test
repnz
fldt
jge
xchg
addr16
mov
push
int
lea
mov
test
test
loop
sbb
outsb
xlat
lahf
add
cmp
sub
shlb
hlt
lock
inc
jnp
arpl
mov
mov
and
int
mov
mov
ljmp
and
outsl
xor
adc
enter
pusha
adc
push
pop
add
popa
lods
mov
out
push
lods
mov
pop
cmpxchg
ljmp
mov
xchg
repnz
fwait
mov
imul
push
mov
jecxz
roll
lods
mov
xchg
sbb
jo
fucomp
std
cmp
btr
or
mov
adc
addb
sub
std
add
inc
iret
ret
jno
imul
mov
mov
mov
add
outsl
dec
or
push
mov
pop
cmp
test
jnp
and
fdivrs
rclb
mov
mov
mov
pop
sbb
sbb
inc
mov
mov
lock
push
mov
cmp
test
push
aas
jmp
and
and
cmp
data16
in
cld
scas
clc
mov
shll
push
jmp
jmp
inc
jecxz
cli
jmp
push
lea
idivb
xchg
decb
and
jl
cmp
jo
ret
xchg
imul
cmpsb
xor
sbb
loope
sub
pop
out
inc
lcall
jno
mov
inc
push
cmp
mov
pop
scas
xor
mov
mov
xchg
jge
dec
or
or
repnz
out
cmp
lret
xchg
leave
pop
mov
mov
jns
jp
test
jo
movsb
es
movsb
sbb
repz
das
xlat
pop
lret
pop
in
jne
loope
lock
xor
call
push
cs
and
and
add
jle
pop
inc
jbe
out
repz
ja
mov
xchg
or
xor
jl
cmp
pusha
imul
shl
out
test
scas
popa
and
imul
jns
jge
cmp
pop
cmp
cli
loope
pop
xchg
fiaddl
push
adc
es
and
repz
out
and
xchg
popf
pop
xor
jl
mov
in
loop
and
xor
sbb
mov
dec
xchg
roll
push
inc
orb
inc
cmp
sbb
or
pop
mov
mov
pop
cmp
fwait
mov
adc
mov
mov
sti
push
lret
jb
sub
shrl
or
xchg
mov
cmc
sahf
inc
dec
dec
push
mov
test
pop
push
mov
aaa
cs
repnz
dec
push
shrb
mov
imulb
jo
out
xchg
xchg
xchg
mov
inc
or
ja
js
mov
and
sub
jb
mov
mov
jle
inc
push
jle
mov
shll
jg
xor
in
mov
pop
movsl
imulb
adc
jns
cltd
fstpl
lods
push
sbb
mov
inc
fstl
pop
lret
cmp
push
addb
ret
fyl2xp1
in
adc
mov
dec
fisttps
je
mov
enter
jo
aam
xor
lret
push
out
lods
daa
dec
mov
mov
lret
adc
xor
inc
ljmp
sbb
add
data16
ljmp
add
jno
cmpb
jl
aas
dec
hlt
ret
nop
adc
adc
xchg
adcl
add
ss
ds
shrb
gs
jg
scas
mov
ret
mov
addl
or
shlb
int
xor
addl
out
fwait
cmp
imull
mov
bound
adc
pop
in
mov
push
das
pop
jge
jmp
xor
into
cwtl
mov
or
xchg
imul
fsubp
xchg
add
adcb
inc
lods
mov
push
ja
sub
rol
add
jae
fstps
cmp
out
xchg
loope
push
out
or
xchg
push
mov
dec
int
icebp
jmp
cld
fwait
adc
sub
push
fldcw
push
rorl
jne
cmpsl
push
jnp
out
pushf
bound
mov
repz
cmp
xchg
sub
in
lods
mov
add
mov
sbb
int
sub
gs
movsl
cltd
push
sbb
repz
lods
sub
jnp
cmc
jb
in
jge
fisubs
popa
dec
outsb
sub
and
inc
xor
inc
rorl
push
mov
enter
mov
adc
loop
ret
cmp
push
or
xchg
mov
xor
adc
andb
rcll
sub
or
rolb
out
ds
mov
push
xor
xchg
daa
ret
cmc
mov
outsb
out
lret
mov
mov
loop
push
jne
fdivl
jl
sub
mov
mov
call
mov
call
or
in
mov
mov
sbb
test
jmp
inc
pop
push
sub
scas
push
jmp
push
rorb
ja
jne
xorl
fcmove
pushf
imulb
in
pop
mov
call
push
sbb
pop
lods
xchg
jne
and
pop
pop
fsubrp
sbb
push
enter
mov
and
dec
jb
addr16
ficoms
int
shlb
push
jbe
popf
aaa
add
and
push
pusha
rorb
das
lret
xchg
add
pop
sub
sarl
jp
pop
loop
fldcw
cmpl
push
fbstp
and
xor
dec
jbe
movsl
frstor
lods
pop
movsb
add
fs
cli
loopne
lds
jo
cmpsl
loope
mov
test
and
push
and
mov
add
adc
pop
and
adc
pushf
cltd
sbb
sbb
dec
mov
cmp
xchg
scas
mov
mov
xchg
ss
jp
out
inc
ret
cmp
inc
pop
lods
cmpsl
arpl
mov
mov
in
xchg
adc
inc
sahf
push
movsb
jle
flds
xlat
lds
dec
jo
cmp
out
movsb
fsubrl
lds
push
cmp
or
shrb
hlt
ss
jo
and
adc
jp
int
popf
push
mov
in
pop
cmp
jp
leave
xor
pop
add
mov
in
mov
jae
enter
pop
popa
mov
fwait
adc
cmpl
add
sti
aas
cmp
mov
in
xchg
lock
push
push
fnstsw
insl
adc
pop
cs
push
ds
int
aam
divl
jae
inc
fcoml
jl
lods
push
push
lods
add
jo
jge,pt
xor
das
pop
adc
adc
js
or
mov
ss
loope
push
add
jle
add
jae
clc
and
cmp
sub
scas
insl
cwtl
dec
inc
cli
pop
icebp
mov
fdivp
xchg
inc
repz
xor
xchg
jo
int
std
rclb
or
cli
push
jae
and
int3
cmc
pop
mov
adc
xchg
aas
scas
push
add
mov
add
push
cmp
push
cwtl
pop
sub
push
es
mov
pop
xchg
mov
xor
or
in
and
pushf
int3
out
push
aad
or
lock
cwtl
or
add
sbb
loope
add
nop
jge
lds
jo
stos
push
xor
jp
push
lcall
ret
lahf
mov
es
pop
jl
mov
rol
xchg
pop
push
inc
mov
fwait
pop
cmc
or
divb
or
dec
and
iret
mov
push
pop
pop
jp
sub
loopne
mov
or
out
mov
pop
push
xor
adc
jb
mov
or
dec
mov
fadd
mov
lock
dec
movsl
sbb
or
xchg
leave
sub
mov
dec
sbb
test
lods
das
push
inc
lahf
loope
or
and
fistl
pop
fcomps
and
fld
mov
adc
mov
add
jnp
xlat
jnp
cli
stc
sbb
gs
sbb
outsl
fistpll
mov
or
or
or
shlb
movsb
xchg
in
out
cmc
pop
stos
xor
push
adc
fstpt
subl
adc
fildl
nop
jno
cmc
cld
mov
lods
mov
sbb
in
xchg
ljmp
bound
mov
mov
and
mov
mov
jnp
xor
mov
aam
je
outsb
jnp
cld
sub
movb
or
outsb
and
insb
push
cmp
sahf
pinsrw
jle
outsb
leave
loop
fadd
jp
adc
sub
sub
bound
adc
nop
mov
push
xchg
stos
sub
mov
das
cmp
mov
ljmp
push
je,pn
loopne
int3
daa
in
into
add
gs
push
insb
pop
mov
xchg
cmpsb
stos
ljmp
fisubl
jge
test
ss
xor
mov
daa
or
mov
mov
adc
mov
shlb
jbe
leave
jecxz
add
test
lea
out
xor
fadd
cmp
xchg
push
icebp
mov
daa
jo
mov
std
cmp
mov
sub
pop
out
test
les
inc
ja
pop
fistpll
cli
sub
shl
in
mov
call
pop
lret
xor
and
sub
jo
push
push
inc
inc
and
shrb
add
mov
adc
or
pop
push
cmpsl
cmp
ret
inc
add
jl
je
jmp
dec
es
mov
or
pop
add
xchg
fs
pop
jns
test
sbb
inc
jp
jge
out
pop
lahf
sbb
xchg
rolb
mov
divb
sbb
nop
jl
filds
mov
divl
jno
inc
int
lcall
mov
pop
test
mov
and
mov
loop
inc
cmp
jmp
push
mov
stos
and
xor
add
lcall
pop
loopne
imul
xchg
in
in
pop
shr
out
add
cmp
mov
nop
aam
loop
jb
inc
mov
sbb
sub
ljmp
inc
cmpsb
outsb
xor
push
pop
movsl
fsubl
ja
mov
inc
das
test
cmp
adc
and
sub
scas
scas
movsb
addr16
or
das
and
xchg
mov
movsl
mov
pop
icebp
inc
xor
aad
ljmp
push
hlt
pop
sbb
imulb
jecxz
lret
mov
adc
popf
outsl
sub
into
mov
fimuls
out
gs
jnp
ljmp
sub
daa
inc
movsb
cmp
popf
outsl
mov
cmpsb
mov
mov
dec
rcll
sub
imulb
cmc
into
lds
pop
xor
xlat
mov
cmovp
pop
inc
call
xchg
shlb
roll
aas
or
test
push
js
cli
fmull
popa
arpl
and
outsl
lret
cwtl
stos
add
out
in
mov
ja
nop
and
inc
mov
and
lds
pop
frstor
pusha
and
add
jbe
fcom
cmp
jb
adc
cmp
out
and
add
mov
cld
bound
jmp
xchg
inc
test
mov
push
sbb
iret
fimull
aaa
not
push
jmp
add
jo
mov
fwait
inc
shrb
inc
clc
jns
dec
or
mov
pop
fnstenv
xor
sbb
pslld
adc
push
test
sbb
inc
test
cmp
sti
mov
addb
in
push
or
imul
data16
inc
pop
and
inc
arpl
adc
test
push
lahf
ret
gs
in
or
mov
test
xchg
and
jbe
out
cmp
lods
ja
mov
dec
mov
fcompl
mov
xchg
pop
inc
shlb
xlat
and
shl
or
out
or
mov
inc
mov
lods
repnz
fcomi
add
enter
fadds
js
je
push
aaa
mov
lahf
fisubrl
ja
icebp
cltd
push
jo
lock
xchg
push
int3
test
mov
lahf
and
inc
ret
mov
repnz
mov
xchg
xchg
divb
in
jno
sti
mov
fbld
push
push
stc
push
adc
out
cmp
jl
push
stc
shlb
mov
dec
adc
fsubrs
loope
jne
enter
inc
xchg
sbb
mull
fistpll
loopne
inc
loop
rcl
lods
ret
repz
outsl
leave
sub
xor
xor
loop
xchg
or
enter
mov
sbbb
sub
daa
jge
adc
add
rol
lods
xor
jle
jns
adc
mov
push
pcmpgtw
pop
mull
mov
pop
mov
loopne
adc
insl
dec
dec
pushf
dec
leave
mov
pop
loope
aaa
cli
lahf
in
mov
enter
insl
push
nop
lcall
push
inc
jg
dec
pop
push
push
jp
xor
cmc
inc
sti
cmpsb
push
mov
ret
inc
cld
push
jge
pop
gs
test
loop
and
mov
mov
pusha
clc
dec
pop
sarb
sub
movsl
fisubs
adc
movsb
jnp
xchg
sub
xlat
push
mov
inc
cmp
xor
and
jb
out
sti
fldl
cmpsl
in
mov
daa
add
pop
arpl
mov
jae
push
aam
ret
pop
jb
in
dec
pusha
push
outsl
push
insl
mov
and
loop
dec
orb
sub
cmp
push
lds
push
adc
push
and
pusha
push
roll
and
mov
fidivrs
push
aas
out
dec
add
cmpsl
and
out
and
xor
sbb
daa
jmp
xlat
xor
rcrb
cmp
sarb
or
jl
sar
fcom
jno
xchg
ljmp
bound
mov
imul
xor
push
dec
fstl
rcrl
mov
loope
xchg
mov
in
cmp
lret
jecxz
sbb
xchg
sbbb
adc
add
rorb
sub
adc
xor
addr16
adc
mov
lock
sub
push
sub
cwtl
adc
in
xlat
mov
sbb
inc
test
mov
jmp
stc
or
dec
fldt
and
mov
pop
dec
popl
lret
push
ret
icebp
jle
or
mov
in
insl
lahf
add
mov
dec
mul
adc
dec
cmpsl
cmp
inc
cld
into
stos
rorb
add
fs
sbb
test
mov
ja
dec
gs
jmp
outsb
mov
das
pop
jns
dec
pop
mov
push
ss
jle
cmp
mov
fisttpl
in
or
dec
js
inc
outsl
ret
jns
mov
push
and
scas
js
xchg
hlt
incb
mov
repnz
and
fildll
lea
jmp
sti
xor
fcmovne
jl
sub
push
adc
pop
out
shl
repnz
js
push
cmpl
jmp
add
mov
int
push
sub
lock
movsb
negl
mov
or
leave
stos
jl
xor
lcall
lea
mov
mov
dec
and
mov
xor
ljmp
negb
ret
jle
jo
jge
and
call
xchg
push
pop
jnp
jbe
xlat
setbe
jecxz
cli
inc
adc
test
ret
leave
pop
add
and
mov
mov
mov
test
pop
subl
jno
sbb
loop
int3
pop
shlb
and
push
push
push
icebp
loope
enter
mov
adc
xchg
xchg
in
in
jle
pop
mov
dec
or
dec
aaa
pop
push
mov
insb
jp
pusha
in
adc
daa
or
shrl
ficomps
in
pop
dec
out
scas
mov
pop
popf
cld
jmp
rorl
mov
push
jne
inc
aaa
inc
pop
ss
push
xchg
rolb
stos
dec
dec
pop
jnp
loop
cmp
inc
and
ljmp
sbb
push
push
mov
add
jbe
pop
and
in
scas
mov
faddl
add
xchg
jl
push
and
sbb
mov
sti
loop
xor
cmpsb
and
inc
loop
out
test
cwtl
roll
push
lods
push
ds
dec
cmp
and
scas
xchg
adc
sbb
add
xchg
shr
or
pop
pop
dec
jae
lret
outsl
jne
decb
sarb
add
mov
scas
pop
shlb
and
aas
stc
push
stos
ret
xorl
fldt
lret
lock
mov
jae
mov
scas
push
sub
adc
jae
mov
mov
mov
cmp
cmc
jmp
sbb
cmc
in
fdivs
test
dec
lcall
xchg
cmp
and
mov
fwait
cmc
mov
lahf
adc
cmp
test
mov
adc
sbb
sti
xchg
sbb
iret
cmp
rcl
adc
ja
jne
fistl
clc
test
test
cmp
ret
xchg
pushf
dec
jg
enter
lods
shlb
aam
lods
jmp
loopne
adc
ja
adc
js
rcrb
adc
jb
fwait
enter
xor
sar
push
dec
add
shr
cmp
pop
icebp
add
aas
inc
jp
clc
rclb
cmp
test
ss
stos
orl
sub
and
pop
shl
loopne
pop
cmp
xchg
scas
inc
sbb
mov
xchg
clc
dec
aaa
cmpsl
gs
and
push
sub
cmp
fs
xor
fs
rorl
pop
sbb
mov
inc
loop
in
aaa
out
rcl
adc
pop
iret
subb
dec
mov
subb
shrl
push
or
inc
fldt
fidivrs
pusha
nop
ljmp
dec
leave
cmp
dec
pop
mov
ds
push
fwait
xor
popf
loop
dec
insl
ljmp
imul
dec
gs
cmp
lods
mull
int3
dec
jl
roll
xchg
shlb
add
ficomps
cmp
mov
dec
inc
insl
imul
xchg
negb
jecxz
mov
and
pushf
cmp
rolb
push
scas
outsl
shl
jge
sub
jg
cmp
std
popa
lret
dec
icebp
xchg
dec
pop
add
push
adc
invd
nop
inc
mov
enter
mov
mov
sti
jp
mov
jge
out
add
pop
and
pop
xchg
jno
inc
cmp
mov
lahf
out
jg
stc
push
xchg
xor
xchg
pop
cmp
out
pushf
jnp
cmp
jle
dec
lock
cld
fucomi
jp
fisubs
jne
notl
lret
push
push
popa
int3
sahf
repnz
scas
in
cli
es
inc
movsb
pushf
clc
jae
pop
data16
or
addb
mov
cld
aad
enter
mov
adc
lahf
outsb
fstps
notb
incl
scas
xchg
push
int3
into
mov
dec
lock
inc
ljmp
or
push
dec
sub
les
popf
add
mov
push
cmpsl
push
mov
testl
gs
xchg
out
shlb
jle
mov
sub
push
inc
daa
jbe
fistps
dec
dec
test
lcall
push
xor
jg
sbb
pop
std
dec
mov
je
mov
jnp
sbb
imul
jne
jp
mov
adcl
lods
pop
cmp
aad
popl
xlat
pop
mov
out
xchg
add
dec
cmp
gs
test
and
shlb
mov
push
pusha
jg
sbb
mov
mov
test
pop
sub
inc
or
lock
lds
jns
add
ljmp
push
jle
in
pushf
shl
sti
push
lcall
xchg
push
jecxz
or
aam
lods
cmp
das
shl
lock
insl
xchg
xor
pop
mov
stos
mov
add
fdivrs
addr16
sbb
out
cwtl
fsubs
inc
repnz
xor
test
xor
xor
sub
leave
add
adc
jb
mov
push
es
mov
gs
lcall
sub
inc
sub
and
xchg
addr16
lods
jge
in
fcmovb
popa
mov
push
int
xlat
fcomps
je
jne
xchg
cs
rorb
jp
fwait
insb
pop
pop
loop
cmp
inc
outsb
or
jp
push
xor
nop
pop
or
cmp
and
icebp
push
movb
mov
cmpsl
or
enter
xchg
mov
sahf
push
xor
mov
enter
mov
lds
icebp
push
test
hlt
out
pop
js
or
outsl
inc
push
pop
idivl
test
or
imul
lods
add
jo
sbb
js
loop
inc
popa
je
mov
xor
push
lock
cld
xchg
mov
pop
push
jmp
pop
mov
jbe
pop
stos
fnsave
daa
and
imul
les
mov
or
stos
mov
sbb
popf
jno
mov
fwait
or
mov
rorb
push
mov
dec
mov
adc
or
xor
mov
xor
stc
in
outsl
pop
mov
cs
adcb
push
mov
mov
lea
aam
scas
dec
leave
or
orl
js
adc
adc
pop
adc
xchg
mov
in
dec
inc
aam
add
xlat
daa
outsb
pusha
lock
fs
xor
pop
mov
push
and
ds
inc
enter
adc
lahf
insl
mov
out
mov
or
or
into
add
ret
mov
cwtl
dec
fwait
cmp
mov
push
fcompl
lret
sub
pop
bound
std
mov
rolb
mov
mov
popa
mov
jge
popf
push
add
mov
jmp
push
xor
inc
loope
cmp
adc
sbb
xor
push
xor
sub
sbb
mov
inc
and
fidivs
sub
jge
sbb
adc
mov
push
sbb
xchg
mov
test
xchg
and
jno
fldl
sbb
int3
jne
sbb
imul
dec
popa
bound
call
arpl
loop
int3
inc
stos
dec
sbb
cmp
jno
in
add
mov
xchg
sub
adc
sbb
jge
or
push
mov
add
xchg
das
inc
xchg
fsubs
movsb
add
mov
dec
cmp
test
dec
push
pop
xlat
xchg
in
or
xchg
je
mov
adc
mov
or
lods
mov
adc
push
in
cmpsb
out
or
stos
je
or
movsl
xor
repz
aam
mov
loope
mov
mov
mov
adc
or
shr
xor
pop
ds
sub
jno
inc
mov
daa
test
jbe
push
mov
cmpsl
mov
int3
lahf
loop
rolb
call
adc
psrlq
outsl
pop
shlb
ja
icebp
cmp
sti
dec
or
fmul
repnz
in
push
cmp
xor
test
incb
sub
fimuls
adc
sbb
mov
fldlg2
dec
lods
jmp
jp
inc
cld
push
push
out
and
ds
cld
imul
pushf
jp
push
inc
lods
xchg
data16
pop
fdivrs
mov
fimuls
out
cmc
mov
push
dec
mov
movl
adc
ret
mov
push
gs
mov
sar
xchg
cmp
cmp
es
inc
fcomip
test
shll
ds
add
cmp
sub
lock
movsl
push
ret
sub
cld
fcmove
fmul
fsubrs
fcoms
repz
push
pop
fcoml
loopne
scas
xorps
imul
push
inc
mov
cmp
mov
adcb
add
orl
aaa
sbb
adc
dec
js
cmp
jge
call
push
rcl
and
jg
aam
mov
cmp
or
mov
sbb
add
fistpl
pushf
data16
jge
xor
popf
sub
add
enter
ret
mov
stos
mov
icebp
divl
pop
sbbb
xor
push
loope
add
cs
mov
and
ror
sarl
stos
jne
push
xor
ljmp
adc
outsb
mov
push
lret
or
in
sub
mov
and
insb
dec
mov
or
fildll
xor
mov
jo
jge
mov
lret
in
scas
cmp
sbb
fucom
push
pop
jmp
addb
cmpsb
repnz
xchg
mov
mov
jmp
jns
lds
cmpsl
add
test
adc
xchg
sbbl
std
xchg
hlt
or
mov
xor
mov
sbb
or
sub
mov
ljmp
xlat
rolb
int3
call
lods
jmp
sbb
dec
lods
outsb
lret
mov
and
mov
fdivp
sbb
mov
loop
inc
or
les
cmp
clc
mov
je
aas
jl,pn
movsb
add
jp
stos
loope
fbstp
fst
and
test
popa
gs
inc
xor
insb
test
push
jae
xlat
into
and
ret
sub
jns
out
sbb
pop
jae
rorl
mov
les
sub
adc
bound
stos
subl
push
aaa
fidivrl
dec
adc
xchg
push
xchg
inc
bnd
sbb
sbb
mov
adc
jbe
mov
sbbl
rol
sub
out
stc
or
jge
aaa
cmpsl
bound
cltd
push
sbb
mov
xchg
ss
mov
jbe
jae
xor
out
subb
fmull
mov
xor
xchg
mov
outsb
mov
addr16
sbb
jmp
or
jne
lahf
enter
push
mov
int3
fisubl
loop
cmp
and
inc
popa
fwait
ret
mov
mov
insl
add
stos
mov
pop
pop
fwait
dec
jae
into
cmp
sbb
bound
lds
cmpb
jnp
or
mov
cmp
adc
pusha
mov
cmp
or
push
and
adc
mov
pop
xor
nop
shlb
and
and
adc
xor
sar
aam
in
insl
xchg
in
mov
cmp
aaa
mov
inc
js
adc
js
add
loope
movsl
lods
mov
sub
or
dec
sbb
dec
sub
dec
das
xchg
mov
or
jnp
sbb
dec
jo
scas
jp
inc
sub
dec
scas
cmp
mov
push
adc
imul
mov
test
icebp
mov
test
mov
arpl
mov
push
or
jge
inc
mov
daa
sbb
iret
jae
fdiv
fdivl
cs
push
xor
std
imul
int3
push
daa
jnp
xchg
sbb
pop
popa
fwait
ror
stos
mov
xchg
mov
int3
add
mov
adc
add
repz
sti
add
add
hlt
lods
pushf
cmp
ret
jne
stc
je
and
lret
stos
xchg
sahf
fsubl
xor
les
mov
ror
f2xm1
stos
inc
iret
data16
cmpsb
or
lcall
repz
sbb
mov
mov
xchg
mov
or
and
sbb
outsl
pushf
lock
sub
and
or
shrb
inc
and
ss
out
stos
cmp
leave
xlat
cmp
jmp
pop
cmpsl
cwtl
insl
fldcw
and
sub
stos
jge
aam
fldl
xchg
sbb
das
xor
iret
and
pop
enter
mov
xchg
and
sbb
cmp
lods
push
mov
adc
ljmp
in
sub
pop
pop
fnsave
dec
mov
mov
daa
stos
cmpl
pop
add
cmpb
arpl
mov
daa
flds
jb
or
inc
sahf
lds
dec
imul
lods
inc
inc
arpl
xor
xchg
insb
jg
jle
jg
adc
mov
pop
sbb
pushf
into
in
in
adc
jle
lret
inc
or
loopne
inc
fimull
dec
in
jns
lods
outsb
imul
imul
out
add
xchg
pop
fwait
jbe
das
inc
mov
sub
repnz
loope
ja
cmp
cmpsl
daa
push
dec
jbe
xlat
and
repnz
dec
ljmp
or
xor
and
jle
sbb
pop
cs
call
popf
xor
push
push
iret
popa
fs
pop
sbb
dec
jle
mov
test
je
adc
emms
jmp
notb
jbe
jecxz
dec
ret
inc
or
jmp
outsb
dec
js
sub
xor
aad
add
xchg
mov
das
push
aaa
jg
mov
leave
mov
test
fs
jne
push
cld
shll
stos
leave
movsl
fs
jge
sti
mov
mul
jo
jmp
roll
jb
pusha
or
pop
call
daa
add
in
fisubrs
fisubs
adc
int3
sarl
mov
xchg
movsb
subl
ret
mov
call
fidivrs
shr
clc
sti
jbe,pt
xor
sub
mov
addb
mov
mov
dec
mov
stc
push
push
lods
ret
dec
fs
ja
fisttps
mov
pop
xchg
repnz
dec
pop
add
repz
std
cmp
cli
stc
inc
cmp
movsb
mov
out
xchg
mov
rcll
sub
andl
pop
insb
xlat
push
insl
pop
lock
rcrl
fwait
shr
jne
or
mov
pop
in
pop
filds
pop
xchg
lods
push
xchg
and
add
dec
shl
rcl
and
mov
leave
xchg
xor
push
imul
popf
stc
mov
sbb
outsb
cmpsl
test
popf
dec
imul
jb
popf
adc
sbb
xor
insl
cmpsl
cmp
shlb
xadd
ljmp
dec
sub
aaa
inc
out
xchg
sbb
mov
int3
mov
sti
inc
addr16
jae
cwtl
xchg
cmpsl
gs
rorl
jbe
les
pusha
movsb
dec
xchg
inc
iret
out
nop
jp
and
add
orb
jb
and
jg
mov
pop
lret
jno
test
sub
in
ret
push
pop
xchg
inc
jns
pushaw
ja
xchg
mov
add
dec
icebp
ror
or
mov
inc
loope
inc
into
cmpsb
jne
xchg
mov
fs
daa
fdivp
xchg
mov
lret
fistpll
jae
xchg
mov
or
shl
sub
jmp
mov
clc
aad
add
cmp
arpl
data16
cmpsb
push
js
les
lds
fidivrs
test
xchg
sti
pop
andb
negl
dec
xor
ret
mov
or
or
out
mov
into
imul
imul
and
insl
mov
inc
cmpsb
rcrl
pop
mov
scas
pusha
out
mov
add
vmptrst
loop
insb
lock
mov
or
sbb
jo
xchg
dec
jb
xor
divb
ljmp
ja
push
aaa
sub
fwait
loope
pop
cmp
lods
test
lret
dec
stos
in
lods
stc
aaa
mov
mov
inc
dec
mov
rclb
mov
push
arpl
inc
shlb
mov
repnz
xor
pop
mov
pop
mov
int
xchg
or
fs
fmuls
lret
mov
pop
nop
sub
push
mov
mov
pop
lds
sti
rcrb
pop
push
outsb
test
les
adc
cli
popf
mov
sahf
lcall
xchg
adc
in
add
rcrl
sbbl
jmp
sub
mov
xor
fistpl
mov
ret
xor
lret
dec
rclb
sub
mov
jg
ror
dec
inc
mov
or
cli
daa
xor
mov
out
add
pop
inc
iret
adc
aad
test
ret
sarb
hlt
jbe
mov
outsb
adc
inc
test
fnstenv
pop
insl
aas
loop
gs
dec
or
jg
seto
mov
int
sub
push
lret
mov
cmpsb
sub
xchg
inc
sub
mov
outsl
cmpsb
in
negl
dec
cmp
push
dec
in
dec
mov
mov
mov
js
xchg
fimuls
adc
scas
inc
cmp
stc
jnp
adc
mov
rorb
jmp
adc
and
in
and
inc
jae
int
cmp
mov
xchg
add
les
xchg
clc
pop
push
mov
pop
fsubr
popa
pop
cmc
stos
pop
std
mov
dec
mov
mov
out
pop
mov
cltd
or
adc
add
cmp
mov
cld
pop
fisttps
add
push
adc
insb
xchg
sub
cmp
push
inc
les
mov
pop
mov
test
inc
lock
push
mov
ss
mov
dec
lods
movzbl
adc
pop
repnz
test
jmp
add
xchg
mov
hlt
mov
sub
int3
or
decl
inc
pop
mov
lahf
loop
mov
inc
inc
jg
call
sub
shlb
pop
mov
adc
addr16
aam
mov
cmp
lahf
jnp
mov
pop
rolb
xchg
xchg
sti
sbb
mov
xor
push
mov
lcall
push
xchg
adc
pop
cmp
inc
ljmp
sbb
in
fmul
cmp
push
jne
lcall
fbstp
fsts
jg
add
stos
clc
sbb
scas
insl
outsl
rcrl
les
xchg
xor
out
inc
jne
mov
gs
mov
loop
cmp
xchg
or
cs
push
addr16
pop
push
int
arpl
pop
popa
dec
push
aam
cmp
jno
lods
sub
push
scas
push
cmp
jbe
idivl
lret
in
hlt
mov
sub
into
pop
call
mov
rcr
add
lock
jl
mov
jnp
std
cmp
je
pusha
and
xor
xchg
aaa
sbb
jbe
inc
ds
popa
or
xor
addr16
mov
icebp
xor
xchg
push
bound
cs
cmp
ds
mov
xchg
inc
lods
inc
sbb
add
mov
ficomps
xchg
mov
test
fistpl
sti
fcoms
in
sbb
push
outsl
cld
notb
xor
add
sarl
jae
loope
jne
hlt
xchg
inc
xchg
mov
stos
mov
mov
scas
jmp
js
inc
popf
jb,pn
mov
mov
lea
loopne
jecxz
mov
lock
icebp
cmp
sbb
sub
rclb
stos
push
lahf
in
sbb
adc
adc
shr
dec
movsb
push
pop
adc
sub
jbe
int3
sub
les
pop
test
outsl
stos
lret
mov
scas
add
out
icebp
imul
push
imul
pop
jmp
mov
mov
and
imul
sbb
addr16
xchg
xor
jno
fistpll
cs
pop
mov
adc
xchg
xchg
lea
insb
xor
sbb
nop
jecxz
jb
adc
cmpsb
sub
add
jb
mov
sti
orl
and
test
inc
es
mov
iret
sub
ds
mov
fwait
adc
pop
push
dec
or
cmp
lret
inc
bnd
sub
mov
imul
fisubrl
cli
das
pop
data16
icebp
fcomps
pop
into
iret
sbb
jge
insb
out
and
lock
ret
dec
out
adc
popf
popf
xchg
push
lret
cltd
pop
cmp
in
js
xchg
nop
aad
int
push
sub
mov
testb
add
outsb
repz
ss
cmpsl
jmp
sub
dec
inc
shrl
imul
imul
inc
test
out
data16
sahf
lret
xchg
or
jmp
pushf
stc
or
mov
inc
mov
add
lds
ja
clc
out
and
sbb
ljmp
mov
fmuls
dec
cmp
lea
nop
fcomps
int3
pop
std
add
mov
test
jae
pop
rolb
icebp
inc
out
stos
rorl
inc
in
imul
arpl
lods
repz
and
cmp
pop
adc
fidivl
sub
es
mov
mov
imul
bound
dec
fidivrl
aad
cmp
or
sahf
call
lahf
ds
pop
ja
jns
shlb
dec
lds
es
cmp
stos
jno
xor
xchg
dec
and
jne
xor
push
xlat
pop
sbbl
lret
add
and
popf
arpl
xchg
jne
inc
push
mov
jle
pop
das
jb
adc
mov
or
test
push
sti
pop
or
fs
test
mov
cmp
cs
or
sub
movsl
int
mov
outsl
push
mov
mov
daa
cmc
insl
mov
cmpsl
add
int
jp
pop
popa
mov
ja
dec
xor
ljmp
loop
jl
or
mov
push
mov
and
js
std
xchg
jge
pop
les
lods
inc
dec
adc
dec
clc
pusha
ja
nop
push
outsb
test
rclb
dec
or
cwtl
or
fnstsw
push
xor
mov
or
xchg
dec
mov
push
mov
xor
mov
repnz
sbb
fldenv
mov
outsb
fcmovnu
fsubrp
iret
ljmp
pop
cltd
sub
ficoms
loope
int
fsts
dec
pop
mov
push
ljmp
popa
pop
push
stos
dec
sti
je
cmp
or
dec
pop
adc
nop
rcl
sbb
pop
shlb
or
fldt
lds
push
fildll
or
cmp
shll
cld
addr16
aas
mov
pop
fsub
int
ss
inc
inc
cmpsb
movsb
je
shll
push
movsl
adc
or
imul
add
movb
sub
rcr
mov
daa
pop
fdivrp
fs
push
mov
cld
mull
push
jbe
sub
int
mov
insb
frstor
mov
out
mov
sti
add
imul
icebp
jo
xor
add
dec
cmp
daa
fmull
add
pushf
js
pop
outsb
adc
and
ja
aaa
scas
dec
sub
dec
cld
mov
adc
mulb
lods
test
xchg
xchg
loope
outsb
mov
push
sbb
xchg
and
mov
fidivl
pop
sahf
in
add
mov
mov
scas
dec
lahf
xchg
dec
pop
xor
pop
xor
shrb
lcall
mov
cltd
push
test
outsl
xchg
jns
enter
sarl
lock
testl
sbb
mov
fdivl
xor
int3
pop
mov
xor
loope
je
push
push
dec
or
xchg
pop
out
in
mov
sub
push
jmp
ss
pushf
mov
sbb
lret
mov
repz
repnz
pop
hlt
and
stos
pop
pop
out
pop
fsubrs
xchg
xor
lods
xor
xchg
mov
subb
dec
aad
sbb
ud0
or
nop
fidivrs
mov
adc
adc
adc
pop
dec
add
test
push
inc
cs
stos
jp
fstpt
add
pop
mov
cwtl
push
test
cmp
cmp
dec
adc
out
fnstsw
mov
int3
or
sub
repnz
sbb
ficoml
ljmp
mov
jae
mov
into
enter
dec
nop
shrb
in
ss
int
mov
stc
hlt
lock
mov
jb
pop
xchg
shrb
loope
jnp
icebp
xchg
pop
repnz
pop
xchg
sti
mov
leave
adc
sub
mov
xchg
ficoms
mov
xchg
mov
xchg
jnp
xchg
daa
mov
mov
and
push
xchg
in
jecxz
cmpsl
mov
je
popa
in
add
xchg
adc
fdivr
mov
cmpsb
mov
or
adc
lods
jne
neg
jne
xor
push
shl
test
and
cmc
jb
cltd
cmc
mov
add
in
in
gs
push
push
sbb
mov
adc
int
sub
xor
inc
je
in
pop
fidivrs
mov
das
ret
jl
jl
sub
mov
ret
test
mov
push
inc
out
loop
insb
mov
es
adc
fsubs
fistl
sbb
in
cwtl
mov
enter
ljmp
or
popa
push
lods
cld
lea
jo
dec
xor
lret
cs
pcmpgtd
jmp
jns
cmc
xor
sub
jne
jp
cmp
and
mov
lea
add
sbb
mov
rolb
js
call
mov
xorb
jnp
cmp
cld
orl
sbb
inc
lods
and
mov
dec
and
pop
cmp
pop
jge
cltd
sbb
stos
aas
mov
xor
pop
not
int
inc
push
lods
sbb
inc
and
mov
jns
mov
aam
mov
stos
mov
mov
dec
shrb
xchg
out
push
lahf
cmpl
loope
fld
or
test
adc
fstps
push
inc
das
mov
push
jns
xlat
add
dec
and
push
push
lret
push
or
int3
sub
adc
out
loope
bnd
aaa
leave
fs
adc
outsb
adc
testb
mov
xchg
aaa
dec
jge
movsb
mov
lret
aas
xor
in
fsubrl
pop
lea
cmp
and
into
test
fistpll
adc
imul
ret
jns,pt
repnz
push
aaa
xchg
test
lea
mov
mov
leave
pop
lock
or
and
dec
popf
jge
inc
out
hlt
js
fisttpll
sub
in
les
mov
mov
stos
and
das
lcall
call
dec
js
push
cmpsb
inc
lea
push
call
or
cli
mov
mov
in
mov
sbb
adc
cmp
sub
push
nop
bound
push
rcr
nop
lods
lods
push
lcall
mov
adc
jb
mov
faddl
inc
mov
in
stc
insl
pop
aam
inc
int
hlt
std
push
int
dec
inc
xchg
loop
mov
lods
sbb
je
shlb
ljmp
dec
ja
cmp
in
add
es
loopne
and
ljmp
cmp
xchg
push
movsb
notl
andb
cmp
lds
cmp
cmp
push
pop
pop
dec
xchg
nop
push
dec
fdivrs
push
cli
add
jg
jno,pt
out
movsl
in
xchg
jns
cmpsl
mov
loopne
pop
scas
sbb
pop
mov
push
fmull
out
cmp
movsb
mov
push
cmp
stc
mov
inc
add
stc
ret
add
clc
mov
pushl
mov
sahf
jno
cmp
mov
imul
mov
push
mov
jg
jecxz
and
xor
dec
sub
out
loope
fwait
and
dec
scas
mov
iret
mov
mov
fcoml
jp
inc
ret
xor
dec
insb
cmpsl
or
aad
mov
or
xor
pop
xlat
jmp
fsubl
gs
push
loop
shrl
xchg
mov
inc
or
mov
daa
fnop
loope
aad
test
lock
sub
add
xor
jmp
cmc
and
hlt
into
sbb
cmp
xchg
mov
mov
xor
pop
push
lods
adc
push
adc
jae
testb
inc
dec
jle
in
sbb
int
fucom
pop
lods
sbb
inc
pop
xor
fs
mov
pop
cwtl
ret
fidivrs
adc
stc
xchg
daa
std
and
xorps
les
loopne
add
icebp
outsb
sub
add
and
es
mov
clc
dec
mov
inc
cmc
cmp
es
inc
jbe
mov
cmp
icebp
xchg
mov
xchg
jnp
pop
imul
bound
sub
out
shlb
popa
test
push
test
dec
pop
iret
or
jb
mov
dec
jmp
ds
pusha
stos
cmp
ss
jno
mov
xchg
and
cs
lods
sbb
sbb
mov
jne
lea
mov
lret
jo
adc
push
mov
loop
push
sbb
dec
or
or
clc
bound
aam
add
ds
call
icebp
cmp
dec
ss
mov
addr16
xchg
push
mulb
fiadds
jl
stos
fadd
popa
add
mov
xchg
seto
xchg
shr
aas
and
outsb
push
jno
mov
dec
cltd
push
pop
fwait
rorl
push
subl
cmp
jle
lods
add
cmp
popa
insb
sub
mov
lods
jg
arpl
daa
mov
sub
cmp
mov
test
popf
pop
and
pop
lret
test
leave
lods
outsb
pop
mov
test
dec
jns
dec
xor
mov
mov
mov
or
repz
out
neg
mov
pop
in
xchg
mov
jp
mov
inc
mov
repnz
fdivrs
daa
lret
cs
mull
adc
push
jnp
inc
stos
lcall
icebp
repnz
enter
test
sbb
outsl
rcrb
add
pop
xchg
gs
jp
mov
xchg
les
sbb
into
adc
mov
lret
xchg
pop
and
inc
in
sbb
xor
pop
add
in
inc
sbb
and
mov
inc
xchg
dec
adc
bound
inc
int
push
sbb
push
xor
mov
test
sbb
aas
sbb
insl
pop
dec
aad
clc
in
stc
dec
ds
sarl
xor
sahf
addr16
pop
dec
or
out
add
icebp
dec
ljmp
mov
jae
dec
pop
or
jmp
adc
pop
std
arpl
orl
adc
dec
insb
repz
or
cmovp
insb
shlb
mov
xchg
adc
or
out
xchg
jg
mov
je
adc
ljmp
push
jl
push
mov
dec
clc
in
ret
mov
sahf
xor
aam
stc
adc
pop
nop
or
mov
cmp
pop
adc
push
enter
jge
add
xor
cmc
cmp
sahf
int3
cmp
dec
lock
ror
cld
add
jge
movsl
outsb
add
ja
sahf
adc
fiadds
rolb
and
mov
hlt
mov
repz
sbb
enter
pop
lds
sub
add
mov
popa
mov
jl
das
jge
ret
movsl
and
pusha
jg
mov
inc
movsb
pop
cmp
testb
data16
inc
or
lret
xor
sarl
insb
test
addb
lret
lock
adc
inc
push
jmp
dec
sar
fwait
inc
inc
rorb
xor
faddp
lea
sub
das
jge
or
jae
movb
cmp
ss
mov
xor
add
ficoms
aas
adc
aas
adc
and
hlt
mov
jbe
pop
ret
shll
or
and
cmp
mov
dec
mov
loope
int
xchg
shr
add
push
fbld
push
pop
add
lea
xor
sbbb
sbb
pop
inc
insb
pushl
xchg
clc
rclb
imul
push
push
addr16
xchg
out
ja
out
mov
jge
jo
cmp
mov
pop
dec
fs
rcr
or
dec
mov
xlat
cmpsl
sbb
loopne
js
pop
inc
xor
push
dec
mov
jmp
pop
or
sub
jb
adcb
pop
push
cmp
test
adc
push
nop
loopne
push
stos
mov
push
sub
aaa
lock
out
push
or
push
sbb
mov
add
and
loope
push
mov
popf
andl
movsb
jle
mov
mov
test
imul
fnstcw
imul
nop
pop
aad
es
pop
and
add
dec
xchg
dec
hlt
jle
or
movsl
or
mov
inc
scas
shlb
xorl
subb
cmpsb
pop
jae
pop
xlat
loopne
das
or
pop
jge
dec
pop
je
arpl
sbb
cmp
int3
loope
ret
rclb
scas
jge
sbb
cmp
movsl
jno
je
or
push
fdivr
mov
mov
fucomi
and
bound
cmc
fdivrs
sbb
push
fsubs
jge
aam
and
xchg
xchg
fists
or
jo
arpl
pop
xor
fisttpll
shrl
ret
cmpsl
push
pop
popa
adc
sub
jb
jmp
jmp
push
mov
test
mov
enter
push
jne
jns
in
cwtl
rcr
push
xor
fisttps
scas
jo
adc
scas
mov
aam
cmc
repnz
mov
adc
cwtl
or
fmulp
xchg
push
and
ss
sbb
add
inc
imul
mov
arpl
mov
mov
adc
scas
or
sub
sub
jo
xchg
adcl
ds
sub
mov
stos
pop
arpl
xchg
test
adc
pop
jbe
jle
mov
les
inc
xchg
pop
pop
imul
shll
add
mov
repz
daa
push
xchg
fdiv
push
fs
repz
lcall
test
mov
dec
daa
xchg
enter
pop
out
xchg
jmp
shll
sbb
dec
iret
fimull
and
scas
div
push
sub
push
cmc
jbe
or
mov
cli
repz
cli
je
sbb
js
xchg
fisubl
mov
rcll
xchg
push
adc
adc
or
xor
mov
cmp
inc
mov
inc
repz
add
shl
and
inc
loop
test
rcrl
jl
pop
lods
loop
or
push
adc
jae
popa
lahf
fwait
or
arpl
arpl
sub
dec
mov
adc
pop
pop
xor
sbb
mov
pop
adc
fs
pop
call
imul
mov
jp
fadd
lods
repnz
enter
pop
mov
decl
jo
aaa
into
loope
mov
inc
pushf
mov
jae
mov
sbb
xchg
sbb
out
in
in
adc
sahf
or
and
xorl
and
fcomps
jg
lods
jno
jne
fldl
jp
ja
jae
jg
nop
movsb
or
push
iret
sbb
mov
jns
dec
pop
leave
inc
stos
in
jl
mov
bound
xlat
inc
inc
flds
or
mov
testl
inc
push
aam
in
push
mov
xchg
insl
gs
js
mov
xchg
stos
fcoml
add
add
call
sub
ret
sbb
call
int3
push
xor
or
jns
adc
push
notl
lahf
or
pushf
sbbl
and
dec
fcoml
xlat
mov
dec
enter
xor
outsl
out
mov
in
ja
ss
or
adc
mov
or
aas
fsts
jns
cmp
addr16
mov
sub
and
lea
push
and
out
inc
pop
pop
test
cli
lcall
daa
cwtl
int
xchg
in
insb
adc
and
dec
ljmp
cli
mov
aam
aaa
inc
xchg
sub
mov
jmp
add
cli
sub
fcmovu
fdiv
mov
bnd
pop
loope
outsl
adc
cld
adc
mov
les
xor
or
loop
fisttpll
loopne
popf
es
xchg
jmp
adcl
adc
jecxz
sub
inc
cmp
mov
sub
xchg
inc
loop
shlb
insb
ss
fsub
cld
mov
sti
dec
orl
ljmp
xchg
sub
add
negb
das
iret
ds
fiaddl
ds
or
inc
lods
sub
ret
mov
or
mov
push
lods
xor
push
xchg
mov
or
int3
in
lret
shrl
mov
inc
pop
or
adc
push
push
scas
fistl
rcrb
lods
bound
xor
sar
mov
cmp
cmp
and
bound
int
cmc
sbb
add
iret
push
add
inc
leave
pushf
or
dec
iret
cmp
sub
les
push
mov
push
clc
push
pop
and
cmp
inc
data16
mov
int3
mov
jnp
shll
xor
ss
jb
gs
jle
lods
push
mov
sahf
xchg
jns
das
sbb
mov
fiadds
fwait
add
sub
imul
mov
orb
imul
in
je
xchg
inc
xchg
jb
jno
int3
or
lret
shl
or
dec
out
lret
scas
inc
andb
inc
lahf
nop
outsl
clc
data16
in
fldcw
das
cmpsl
repnz
jo
dec
sarl
xor
mov
mov
shll
mov
sub
lock
push
xchg
dec
sbb
xlat
test
cltd
push
lret
jo
adc
sub
adc
shlb
movsb
hlt
into
out
sbb
cmp
add
pop
jle
inc
jne
popa
xor
xor
rorb
mov
push
cld
mov
decl
ret
lea
jg
addr16
mov
sub
int
ficoml
roll
gs
lock
pop
loopne
std
out
pop
mov
into
loope
and
popf
sti
sbb
jle
pop
inc
and
mov
negl
xchg
repnz
out
shll
adc
add
out
jns
lahf
adc
lret
stc
pop
fxch
or
fildll
sbb
push
inc
sbb
popa
jp
mov
in
push
xor
std
xor
dec
mov
scas
std
ret
cld
xor
jle
mov
jno
jns
cmp
pop
cmp
cmp
adc
lock
lods
scas
iret
dec
movsb
rorl
dec
push
ja
jl
dec
cli
add
fstpt
daa
in
jmp
inc
push
and
xor
mov
iret
daa
xchg
jmp
in
ljmp
fs
push
shll
pushf
mov
pushf
insb
ss
and
mov
test
in
push
movsb
imul
hlt
test
subl
lret
into
jo
out
mov
mov
push
fwait
xor
in
and
ret
fisubl
adc
arpl
adc
sub
pop
addl
sarl
les
push
mov
jle
in
movsl
dec
push
push
lahf
out
sub
add
jmp
mov
cld
daa
cmc
mov
std
in
xchg
and
push
inc
add
xchg
inc
icebp
test
mov
pushf
out
std
dec
mov
xchg
das
add
dec
and
fsubrs
push
ds
mov
je
cld
testl
mov
jl
mov
sub
es
xchg
pop
adc
xor
aaa
cmp
sbb
shll
call
cmp
xchg
pop
shll
fcompl
shrb
adc
mov
jmp
adc
repnz
lret
sub
xchg
das
sbb
stos
adc
sub
sub
stos
mov
shlb
jne
aad
xchg
cwtl
mov
dec
xor
or
xchg
jle
or
push
mov
push
ljmp
aas
leave
test
xchg
insb
sbb
mov
sub
popa
loopne
daa
push
aaa
test
pop
outsb
mov
out
sub
out
push
int
orb
pop
push
out
scas
jg
xor
cmp
and
push
push
xor
rorb
sub
ljmp
rorb
out
cmovb
fcmovnbe
loop
rorb
addb
lret
test
pop
pushf
dec
push
push
sub
or
clc
ret
mov
in
aad
sbb
gs
stos
sub
cmp
call
lret
or
mov
adc
setnp
es
outsl
lahf
xchg
aam
jle
jo
lret
jns
push
cmpsb
mov
scas
mov
push
iret
sar
jo
add
popf
call
rcll
fsubrs
rolb
int
je
in
pop
aas
popa
pop
and
sub
xchg
cmp
clc
out
enter
adc
add
jns
pop
pusha
mov
inc
and
fisttps
mov
mov
jbe
xchg
jle
push
dec
popf
adc
jo
rcrb
int
xchg
jge
adc
cmp
sahf
jno
or
adc
iret
adc
ror
testb
fdivr
mov
bound
sbbb
xchg
adc
daa
push
ja
sub
nop
jae
lcall
jle
inc
dec
orps
icebp
mov
loope
sbb
pop
lock
mov
insl
lahf
adc
sbb
cmpsl
pusha
repz
movsl
cmc
push
lds
adc
pop
sub
mov
iret
and
arpl
cmc
or
dec
movsl
adc
sub
push
inc
stos
daa
nop
syscall
adc
dec
or
mov
sbb
pop
and
and
inc
pop
sub
push
fcompl
xchg
rorb
sub
mov
ret
sti
outsl
ljmp
and
lahf
sub
std
push
stos
pushf
jmp
push
xor
inc
pop
outsl
cs
and
sub
shl
add
in
sub
sbb
imul
loope
ret
or
shlb
and
insb
xchg
repnz
pop
add
sub
je
add
push
lcall
enter
fstpl
push
int
xchg
fwait
loopne
pop
flds
mov
hlt
jg
xor
scas
mov
mov
inc
jmp
dec
mov
gs
lcall
mov
rcll
mov
xchg
xor
pop
push
add
xchg
in
bts
aas
ja
ret
ja
movsb
vmovsd
inc
mov
data16
nop
or
dec
sbb
xlat
out
aam
les
mov
sbb
pop
mov
add
xchg
out
jae
sbb
lds
mov
adc
xchg
mov
call
bound
sub
cmc
shr
mov
adc
mov
xor
outsb
add
adc
in
push
add
repnz
jle
pop
je
insl
jle
mov
clc
mov
lods
sbb
lea
pop
lods
outsl
push
clc
or
sub
or
in
imul
mov
xlat
sbb
fld
in
std
xchg
ficoms
dec
add
in
mov
jo
rcrb
jmp
idivb
xchg
pop
loop
popf
lret
xchg
or
mov
or
lahf
fidivl
mov
add
xor
int3
out
rcll
add
add
pop
mov
mov
call
adc
aam
arpl
adc
mov
and
jge
push
iret
decb
stos
lods
mov
mov
ss
cmpl
cmp
mov
jecxz
jp
fcmovnbe
lods
rorl
mov
xchg
xor
xchg
pushf
test
lock
push
and
xchg
aaa
mov
and
pop
cmp
test
xchg
out
addr16
mov
cmp
test
mov
popa
pop
xor
xchg
cmpsl
push
jns
repz
stos
xor
add
popf
jnp
stc
push
mov
outsl
and
int
xchg
in
push
mov
lods
fisubs
add
mov
inc
push
mov
sti
inc
fdivrl
aaa
mov
scas
add
mov
cs
xchg
inc
add
sbb
push
xorb
lret
test
shlb
add
add
mov
inc
enter
dec
popa
push
xor
push
cwtl
jnp
clc
mov
push
push
fsts
dec
flds
push
mov
int
xchg
adc
cltd
inc
sub
es
or
xchg
int3
movsl
ret
pop
setbe
or
add
cmp
or
sbb
mov
sbb
sub
or
push
mov
outsl
push
int
xchg
arpl
fsubl
sub
ljmp
inc
ret
pop
xor
popa
mov
js
stc
cmp
aam
add
sub
or
sti
ja
scas
jp
mov
mov
lret
mov
inc
lret
mov
jp
sub
mov
call
pop
mov
gs
std
fwait
shll
add
xchg
psubb
jg
lds
fwait
xor
andl
adc
movsl
lret
mov
push
push
adc
repnz
fldt
mull
adc
les
pop
fmuls
inc
xor
xor
adc
add
addb
aas
fistps
pop
mov
fdivs
xchg
pushf
rolb
xchg
das
mov
test
lret
jg
aaa
dec
and
mov
add
mov
mov
fstl
movsl
mov
je
lcall
sbb
sbb
bound
add
loopne
or
or
in
in
fnstcw
xor
outsl
imull
data16
lods
dec
shlb
dec
mov
jb
mov
icebp
push
pop
jmp
push
pop
jecxz
push
dec
call
mov
add
mov
ja
and
xor
sbb
jl
rolb
mov
lret
jmp
xor
loopne
mov
mull
push
jl
push
jbe
add
adc
adc
add
mov
pop
lret
xlat
sbb
out
testl
sbb
shl
imul
push
mov
shll
aam
xchg
mov
fs
xor
mov
ret
cmc
or
jb
sub
rorl
adc
mov
push
cmp
loope
pop
mov
add
cmp
ds
adc
cmc
les
xor
pop
mov
mov
jns
into
pop
lea
movb
and
mov
pusha
adc
and
lret
adc
add
int
femms
addb
adc
cwtl
mov
fincstp
test
and
jmp
push
add
mov
push
bound
push
aam
jle
xor
pop
ja
inc
ret
icebp
mov
setae
xor
mov
int3
cmp
addb
loopne
ja
stos
sub
daa
jnp
and
or
test
adc
sbb
insb
div
and
xor
jecxz
cwtl
add
adc
sbb
idivb
pop
mov
gs
pop
in
sbb
sub
mov
add
fstps
loopne
inc
pop
stos
pause
repz
dec
add
inc
cmpb
in
jl
push
addr16
push
mov
jmp
shrb
jl
test
aad
cld
loop
add
dec
in
sub
test
jo
popf
mov
aam
dec
jecxz
ss
test
mov
fwait
jbe
insl
xor
mov
jnp
push
daa
popa
mov
or
imul
jle
dec
or
dec
ss
clc
icebp
stos
add
cmpsb
loope
mov
lcall
incb
insl
leave
lahf
stc
rorb
sbb
sub
cmp
dec
xor
insb
pusha
jns
loop
pop
jo
lds
lods
push
add
mov
jmp
call
nop
push
xchg
push
shrl
add
push
out
push
nop
add
pop
daa
xor
fs
or
imul
xlat
mov
es
mov
dec
pop
fsub
inc
cmp
push
xchg
cmp
add
sub
dec
ss
add
je
fisubs
loop
push
pop
mov
xor
outsb
clc
or
loope
sbb
outsb
in
push
imull
ss
or
push
or
and
sub
mov
stos
add
adc
mov
jo
clc
xchg
mov
insb
mov
pushf
leave
dec
rclb
sbbb
push
push
leave
or
inc
cmp
out
jge
and
in
andb
and
add
in
sahf
in
cs
popa
and
xchg
test
lock
mov
cwtl
movsl
xchg
in
outsb
adc
push
inc
enter
enter
mov
xchg
aam
or
outsl
cmp
bound
jg
lret
fcomps
pop
repnz
pop
xchg
pop
lea
dec
push
repz
out
mov
in
loop
add
jns
xchg
or
lock
lea
test
xchg
out
and
rorl
mov
out
add
fistpll
mov
sarl
cltd
dec
push
popa
adc
inc
dec
stos
movb
fiadds
lea
mov
xor
push
andb
pop
push
mov
fwait
dec
pop
repz
mov
xor
pop
inc
mov
pop
xor
adc
hlt
fldcw
dec
mov
dec
and
sub
pop
daa
fs
and
idivb
sbb
xchg
inc
mov
push
jp
test
mov
inc
fdivrs
ljmp
aam
popf
cmp
int
xchg
and
push
test
iret
sub
jbe
ja
mov
push
xlat
fnstsw
or
pop
mov
cmc
loope
ret
das
pop
je
sub
dec
movsb
jl
mov
and
stos
jecxz
push
push
loop
pop
movsb
lock
mov
cmp
cltd
test
sub
lret
fucomi
sbb
pop
test
lock
enter
leave
out
clc
inc
mov
add
inc
pop
pop
iret
testb
addr16
mov
push
cmp
in
lock
idivb
pop
cmp
inc
je
fisttpll
mov
push
jns
sub
lret
jecxz
lret
sti
adc
push
cmc
movsb
insl
sbb
xor
inc
mov
decb
adc
bound
ret
pushf
je
pop
xchg
hlt
and
push
dec
and
jbe
jmp
outsb
jae
sbb
outsl
dec
cltd
lret
mov
pushw
ficomps
pop
f2xm1
mov
sub
pop
or
or
mov
cltd
pop
mov
fs
push
inc
gs
mov
mov
mov
stos
push
cmp
sbb
cmp
movsl
xor
and
mov
adc
bound
adc
je
push
sub
cmpsl
adc
pop
lahf
std
fs
jmp
jne
outsl
popa
adc
mov
and
sbb
and
jbe
fwait
push
test
repz
test
lds
nop
loope
bound
rolb
xor
das
mov
or
or
scas
out
rclb
mov
int3
loopne
fwait
and
jp
aam
mov
xchg
push
dec
pop
das
cmpsl
popf
push
ret
imul
mov
aas
fs
and
lods
push
movb
mov
nop
or
mull
mov
aam
outsb
mov
cld
mov
pop
lods
sub
cvtps2pd
sbb
shll
mov
dec
inc
out
mov
jb
cltd
add
fcomip
imul
inc
inc
icebp
mov
dec
push
cmp
std
fs
xchg
outsl
add
int3
cld
loope
push
out
mov
push
loop
fbstp
push
add
out
inc
or
les
cmp
add
outsb
pop
out
pop
pop
mov
into
rcr
repz
jae
push
inc
jl
add
shr
add
sahf
sub
inc
icebp
hlt
jno
enter
cmpsb
xchg
push
movsb
push
push
adc
adcl
inc
push
sti
sub
and
xor
lock
inc
jnp
and
adc
add
lret
rcrl
mov
mov
dec
lcall
ja
outsb
mov
or
mov
sti
imulb
add
jp
sub
cmpsl
cmp
jnp
ret
lods
xor
cli
in
mov
ret
mov
aas
jns
mov
mov
xor
sbb
outsl
xor
cmc
imul
je
or
mov
add
sarb
ret
aaa
dec
sbb
loopne
push
mov
sbb
sbb
add
cmpsb
movsb
loope
jb
sub
adc
mov
or
dec
loop
scas
idivl
xchg
adc
not
out
scas
mov
jmp
in
cmp
dec
lock
fsincos
cmp
add
dec
push
mov
aaa
cs
fbstp
adc
movb
aad
sub
add
mov
test
hlt
mov
imull
repnz
nop
mov
dec
or
outsb
lock
clc
xchg
outsl
ret
int3
out
xchg
in
pusha
fsubrs
inc
jecxz
bound
inc
mov
pop
scas
cmp
aam
push
int
lret
pop
xor
cli
insl
es
repnz
xchg
add
popf
dec
lods
repz
push
fdivl
lds
repz
sti
and
adc
xchg
jo
pop
xchg
xchg
pop
add
dec
push
push
fldenv
mov
sub
or
xchg
mov
shll
inc
fnsave
pushf
sti
jl
pushf
outsl
cmp
mov
sahf
sbb
mov
jmp
push
cs
mov
cmp
mov
inc
in
inc
pop
mov
test
inc
fcoml
jo
ds
or
pop
sub
dec
lcall
sub
into
inc
or
div
add
in
mov
sarl
mov
push
cmp
daa
sti
add
clc
addr16
jo
ss
cmpsl
sub
xor
cltd
xor
gs
stos
das
push
xlat
test
test
xchg
in
imul
ss
dec
inc
jge
push
push
lcall
sbb
jge
mov
or
add
xchg
mov
pop
int
jbe
daa
imul
lods
adc
iret
int
mov
jmp
sbb
out
xchg
gs
popa
bound
pop
loop
inc
lods
pop
and
cltd
loopne
jne
cwtl
jae
dec
inc
sub
mov
shlb
ret
mov
xchg
in
push
push
push
mov
add
cli
sub
out
jne
arpl
test
rcll
push
and
insl
mov
sub
out
orb
mov
dec
add
cmc
popa
mov
shrb
std
jp
pop
push
cwtl
and
neg
orb
test
pusha
pop
scas
jmp
lcall
inc
std
xor
sti
leave
xor
jb
and
addr16
mov
sub
mov
or
jmp
dec
pop
mov
mov
movsl
test
sub
mov
mov
dec
sub
test
dec
push
clc
lods
imul
fdivr
push
jle
push
xchg
sub
mov
adc
stos
and
movl
pop
push
lods
test
jbe
inc
lock
std
cwtl
iret
mov
or
jg
lea
pop
addb
test
popf
mov
pop
pop
fstpt
loop
xor
in
mov
push
mov
aam
ss
xchg
mov
ljmp
testl
mov
mov
rorb
or
test
and
push
test
clc
outsl
jecxz
dec
xchg
out
mov
cmp
add
inc
pop
xor
enter
js
push
or
int3
sbb
aaa
addr16
add
ljmp
ljmp
mov
and
add
jns
cmc
fildl
mov
pusha
outsb
scas
jb
ret
mov
call
xchg
xlat
or
adc
cltd
aaa
aam
mov
out
dec
loope
int
add
xchg
leave
adc
pop
mov
pop
sbb
insl
fsubs
adc
es
sahf
jno
shr
es
inc
pop
shlb
out
popa
lds
lds
addr16
xor
icebp
bound
ret
cwtl
xchg
cwtl
rorb
and
scas
ret
test
jne
std
in
jmp
push
mov
cmp
pushf
leave
js
lahf
xor
insb
mov
jbe
ds
in
mov
adc
and
jne
iret
mov
mov
jnp
inc
sub
aaa
add
outsl
push
shlb
ret
mov
adc
out
and
and
outsl
adc
add
adc
sub
sbbl
int3
xor
xor
push
cmp
cs
jnp
lock
dec
std
shll
pop
and
mov
ljmp
or
cmp
fs
sub
jp
inc
iret
push
sub
inc
test
push
sbb
stos
pop
leave
dec
lods
scas
xchg
les
aam
outsb
aad
jle
stc
add
aaa
shl
xor
mov
js
cmpsl
hlt
pop
mov
sbb
roll
test
ja
adc
in
movsb
xor
adc
cmp
orl
dec
jo
popa
xchg
nop
popf
mov
int3
mov
jae
push
add
push
xchg
mov
adc
jne
push
xor
dec
sbb
outsb
add
and
mov
movsb
dec
cmp
int3
cmp
mov
push
mov
push
loop
sahf
adc
fisubs
cmpsb
sub
dec
add
xor
pop
mov
int
mov
shll
dec
nop
out
pop
data16
out
popa
pop
and
subl
filds
push
inc
inc
mov
jbe
mov
cmc
inc
lret
movsb
out
rcrl
jbe
sti
int
in
add
dec
lods
adc
mov
adc
push
lret
int3
mov
lahf
push
and
or
pop
jg
call
popa
in
push
shl
clc
mov
dec
xchg
dec
xor
imul
dec
adc
mov
pop
ret
dec
dec
jmp
cmp
sbbl
lea
add
lcall
scas
movsl
cltd
sbb
in
jl
js
adc
ret
pop
ret
inc
lcall
xchg
sub
jecxz
cmp
push
inc
nop
pusha
push
aas
mov
xor
xchg
mov
cmpsb
and
jmp
adc
sbb
push
jns
jae
jg
jo
adc
push
jbe
push
repz
out
sbb
or
ficoms
or
sbb
mov
inc
cld
fnstsw
cmp
xor
cmp
lock
xchg
jmp
ret
mov
orb
xchg
push
inc
leave
push
mov
xor
pop
lods
lret
jmp
jmp
rcrb
mov
adc
aaa
lods
jmp
negl
xchg
les
sbb
std
sub
jl
ficoml
and
shrl
pop
sti
test
mov
enter
push
das
arpl
jle
lods
mov
and
out
fs
sbb
and
xor
movsb
in
jmp
outsl
imul
cmp
jae
dec
int3
lcall
mov
jl
int3
or
sti
sub
jae
cld
stos
ja
pop
repz
sbb
lcall
push
cmp
push
mov
dec
into
vmwrite
mov
mov
pusha
movsl
adc
dec
xchg
or
adc
pop
jno
add
test
and
daa
sub
cmp
loop
jmp
pop
out
or
jae
pop
xchg
sub
scas
pop
scas
add
test
test
mov
stos
in
sub
add
xchg
add
push
jp
add
and
push
lock
xor
insl
or
add
or
dec
fnsave
sbb
lahf
lret
pop
stos
loopne
shll
loopne
sbb
fnstsw
cmc
push
sbb
cltd
add
pop
inc
mov
mov
push
sub
jle
lea
cmp
pop
mov
outsb
xlat
outsb
cwtl
out
xor
xor
xchg
push
xchg
dec
pop
pop
movsb
lds
nop
sbb
dec
inc
fcomps
lret
pop
or
pop
mov
ds
jl
repz
fadds
andb
nop
mov
repz
mov
in
cmp
mov
clc
std
pop
mov
mov
cmpsb
mov
test
fdivs
push
jae
mov
and
rcrb
ds
inc
and
stc
jbe
test
bound
adc
loope
push
pop
insl
jle
pop
and
scas
in
mov
orl
mov
mov
push
dec
clc
sahf
repnz
mov
xor
jnp
test
add
adc
lahf
mov
out
mov
in
movsl
and
lret
and
mov
or
xchg
lahf
stc
jo
jae
test
adc
pop
and
iret
cmpl
pop
cmc
xlat
and
dec
and
cmp
mov
inc
dec
mov
out
inc
sub
stc
xchg
scas
shll
cs
iret
lds
lret
sub
enter
push
inc
sub
and
mov
xchg
cld
jp
pushf
push
gs
mov
xor
push
dec
mov
adc
ror
mov
push
lds
cld
jno
cltd
outsl
pop
mov
test
outsl
movsb
out
push
xor
mov
sbb
rcl
pop
xchg
xchg
cmp
mov
adc
in
or
popf
or
xchg
mov
pop
int
pop
les
cmpsl
xchg
adc
push
stc
je
sti
pusha
mov
loope
dec
call
aas
repnz
pop
xor
pop
sahf
scas
iret
xorb
push
aaa
or
dec
cmpsl
push
adc
negl
cltd
jae
jbe
xchg
xor
dec
test
push
fidivl
fs
jnp
and
push
xchg
or
out
data16
imul
dec
adc
mov
mov
cwtl
xchg
mov
insb
lret
clc
ds
mov
lcall
cmc
rclb
adc
daa
mov
pop
ja
jbe
add
data16
jg
xchg
mov
cmp
sub
mov
ret
add
jno
test
fisubl
inc
gs
out
mov
dec
mov
jecxz
dec
jns
mov
push
push
push
test
jnp
pop
dec
in
and
imulb
adc
fisubs
jg
xchg
sahf
push
cli
and
rclb
jge
aaa
mov
adc
test
fst
sbb
sub
xor
mov
loop
adc
pushf
arpl
push
aas
loope
mov
add
js
cmp
test
outsl
dec
je
aas
in
mov
pop
xchg
pop
cmp
stos
je
lcall
mov
jmp
inc
inc
jle
sub
test
out
repz
sub
popf
pop
pop
sbb
mov
push
loope
pop
pop
or
xor
push
stos
adc
push
mov
sub
push
push
add
js
xor
imul
cmpsb
std
inc
inc
ret
and
jae
sbb
xchg
dec
dec
enter
wbinvd
xchg
lds
pop
push
xchg
int
dec
in
pop
push
fistps
insb
stos
imul
mov
mov
lds
in
jo
mov
or
movsb
inc
mov
out
dec
pop
popf
test
or
mov
mov
dec
das
add
lods
pop
mov
jnp
cwtl
sbb
jne
and
jne
test
test
movsb
pop
imul
push
inc
dec
pusha
idivl
andb
adc
inc
add
mov
push
in
add
lret
sbb
cmpsb
push
xchg
mov
push
ret
repz
push
mov
adc
add
ljmp
inc
push
and
pop
repnz
jb
xlat
sub
loopne
jecxz
jp
cld
bound
push
dec
push
lods
call
popa
mov
mov
rolb
pop
push
addb
inc
subb
call
jns
push
jle
mov
inc
test
jecxz
sub
aaa
lcall
cwtl
call
mov
mov
cli
mov
clc
pop
lods
jae
or
je
mov
movb
xorb
push
pop
sarb
xchg
imul
pop
scas
loopne
push
mov
or
das
mov
fs
add
xor
out
mov
push
and
outsb
jmp
test
cmp
in
imul
sbb
pop
ficompl
lret
xor
sbb
test
and
jmp
mov
or
out
mov
cmp
in
push
xor
lock
loopne
xchg
xchg
pop
iret
pop
jo
adc
enter
stos
ficomps
test
ret
pop
sub
add
dec
lret
rolb
idivb
clc
mov
mov
xchg
ret
inc
lea
ds
out
mov
cmpsl
mov
mov
dec
inc
pop
jae
pop
loop
aad
jb
iret
shr
movsl
dec
cmpsb
jo
sbb
push
and
aas
cmp
shlb
fstl
jb
or
in
or
sti
xor
fstpl
cmc
adc
pop
and
ja
inc
jmp
dec
mov
arpl
push
dec
sub
sub
xor
and
cwtl
inc
aas
aaa
jbe
xor
ja
fmull
or
outsb
inc
pop
sbb
pop
push
push
dec
xchg
mov
sbb
adc
fdivrl
push
add
push
fmulp
fcmovnbe
icebp
adc
fadds
mov
mov
popf
cltd
xor
enter
cmpb
loopne
jle
lret
roll
cmp
inc
gs
cmp
mov
ficoms
sub
xchg
lret
es
jbe
cmp
xor
xlat
shrl
add
push
loopne
mov
std
mov
pop
mov
test
sbb
adc
push
aam
xor
mov
insb
push
cmp
mov
dec
or
adc
fistps
push
xchg
bound
std
push
mov
or
mov
pop
dec
sub
xchg
jmp
repz
iret
clc
and
pop
push
icebp
fs
mull
ds
dec
or
pushf
les
adc
pop
fwait
out
or
sub
stos
push
repnz
adc
loope
cmp
add
and
dec
filds
outsb
sub
loop
adc
loope
jmp
ret
or
and
into
sub
or
xor
shll
xlat
in
fcmovbe
sub
pop
std
mov
xchg
jae
push
and
push
add
cmp
push
sub
dec
dec
iret
inc
aam
jp
xchg
xlat
popf
cmpb
int
lock
add
inc
into
and
and
push
aaa
bound
xor
jp
push
pop
scas
lret
cmp
inc
add
inc
jmp
inc
loop
dec
jecxz
fnstcw
push
test
rcr
lods
popf
add
and
mov
mov
ficoms
lds
push
lcall
fsubrl
dec
xchg
jecxz
loope
lds
imul
addr16
cmc
cmc
push
jle
inc
add
dec
mov
aaa
in
sbb
cmp
inc
lock
andb
xor
cmc
and
out
in
jle
adc
idivb
mov
and
sbb
les
push
and
sub
xchg
push
divb
mov
dec
outsb
cmp
inc
gs
cmc
xchg
jae
adc
mov
adc
call
ja
mov
jge
or
pop
mov
pop
jge
mull
gs
fstl
loope
mov
fadds
mov
ficoms
frstor
add
data16
cmp
daa
push
inc
movb
imul
fsubs
xor
mov
cmp
sub
adcl
sbb
jo
and
cmc
dec
cmpsb
pop
mov
jmp
sbbb
sbb
xchg
push
and
in
and
scas
pusha
fs
xchg
shll
cmp
jbe
mov
movsb
cs
lcall
inc
mov
cs
push
in
movl
or
inc
pop
inc
arpl
test
outsl
call
dec
cmp
sbbb
xor
ret
pop
popa
lods
roll
sbb
test
pop
shll
jmp
adc
push
xor
add
ret
shl
add
pop
clc
hlt
daa
ljmp
jbe
sub
cmpsb
nop
mov
ja
iret
dec
xchg
inc
orl
es
push
and
sbb
pushf
data16
jno
push
sub
out
jns
test
mov
mov
fdivr
test
inc
sbb
sahf
mov
pop
mov
std
mov
cmp
mov
lods
lock
and
pop
enter
sbb
ds
loopnew
mov
add
cmp
mov
loop
popa
cs
imul
cmp
and
nop
pop
dec
in
mov
test
cmp
pop
jmp
or
int3
in
jle
lahf
dec
cli
sbb
sti
or
int
movsl
ja
gs
clc
hlt
xchg
mov
pop
mov
add
jl
push
test
sbb
es
mov
mov
push
out
fsubrl
lods
pusha
inc
addl
hlt
test
xchg
cli
mov
inc
scas
fistpll
movsb
push
jmp
enter
aad
cmp
jno
mov
xor
mov
insb
es
call
out
dec
test
stos
in
sub
cmp
mov
xor
mov
cmp
addr16
cmp
scas
outsb
jnp
mov
sub
mov
repz
movsl
jg
test
call
push
inc
mov
ror
and
push
inc
sub
imul
jo
scas
les
stos
mov
lret
mov
lods
cmpsl
xor
sbbb
mov
lret
cmp
pushf
ja
out
gs
jae
adc
or
dec
js
adc
sbb
push
je
rcrl
pop
push
mov
and
bsr
adc
mov
push
cmp
jo
cltd
cli
pop
or
lods
mov
and
sub
out
mov
sbb
movsb
sbb
leave
js
shl
icebp
int3
hlt
pop
push
cmp
mov
dec
pop
jge
loop
test
jnp
test
jecxz
shlb
xchg
add
loope
rcl
or
mov
aas
aam
mov
jne
or
sub
dec
sbb
adc
jo
pusha
mov
outsb
sahf
es
push
cwtl
cmp
int3
sub
sti
out
in
sbb
nop
pop
push
mov
movsl
sti
cmp
andl
ret
shlb
inc
dec
rorb
out
jo
mov
push
mov
stos
xchg
rclb
rolb
push
bound
repz
mov
mov
adc
pop
mov
clc
add
xchg
pushf
xor
sub
orl
push
xchg
cltd
push
lret
adcb
subl
sub
adc
mov
cli
xlat
cmpsl
divl
das
lret
fidivrl
flds
adc
mov
xor
fnstenv
int3
in
data16
push
jp
mov
cli
stos
shlb
jmp
mov
mov
add
imul
mov
fstl
xchg
stos
push
and
sub
shl
arpl
lret
out
fisubrl
sub
fisubs
cli
adc
sbb
adc
fwait
pop
call
dec
pop
lcall
adc
ret
mov
icebp
add
repz
mov
enter
les
test
lcall
mov
nop
and
sbb
fistps
mov
xchg
jb
outsb
pushw
int3
mov
jnp
lcall
pop
lods
sbb
add
or
lret
dec
inc
and
dec
outsl
test
mov
pop
push
xor
dec
push
mov
pop
mov
popa
mov
or
sub
mov
jmp
push
imul
xor
sbb
test
pop
xor
jbe
bnd
xchg
xor
cltd
cmp
stc
jnp
insb
inc
mov
es
adc
scas
scas
sbb
mov
add
cmp
rolb
add
addl
adc
adc
or
push
dec
pop
stos
and
bound
push
mov
push
mov
in
cltd
aas
push
jl
sub
push
ret
pop
mov
add
stos
inc
sub
repz
loop
add
arpl
roll
cmp
ret
ljmp
sbbb
addr16
test
sahf
cmp
jnp
jle
negl
aad
inc
lret
xor
fidivrl
sti
adc
imul
jnp
into
pusha
ja
icebp
push
idivb
adc
pop
scas
cmp
das
ss
jmp
rorl
rolb
icebp
adc
mov
xchg
aaa
jne,pt
enter
adc
in
and
call
push
jp
push
pop
pop
paddusw
dec
ds
lock
fsubrp
mov
sub
int
dec
push
in
push
popf
cmc
xchg
jecxz
ret
dec
shr
mov
incl
dec
movsl
lds
rcr
xor
popa
insb
push
jmp
cmp
jo
push
int3
dec
xchg
fidivrl
imul
or
xchg
cmp
dec
push
loope
movb
dec
cmp
mov
out
adc
mov
les
stos
test
xchg
out
xor
cwtl
sub
xlat
pop
dec
repnz
xor
test
mov
jle
cmpsl
les
cmc
movsb
cltd
mov
mov
fadds
xchg
mov
adc
into
mov
mov
adc
scas
jle
or
mov
push
sub
aas
bts
fists
pop
add
pushf
lea
jecxz
mov
leave
add
loop
dec
sub
sub
push
insb
cmp
repz
jp
repnz
sbb
mov
pop
enter
fwait
out
idivl
mov
xchg
imul
iret
movsb
mov
mov
sahf
gs
loop
push
fisttpl
mov
adc
xchg
aad
xorl
fldl
in
and
xor
mov
test
stos
stos
lahf
jb
inc
adc
and
sti
xchg
scas
adc
xchg
adc
or
scas
lret
mov
nop
repnz
sub
rclb
dec
sub
lods
lods
clc
dec
insl
test
inc
xor
cwtl
pop
cmp
insl
shll
dec
int
cs
or
mov
sti
mov
fistl
adc
add
jecxz
mov
xlat
xchg
cmp
xlat
inc
cmp
cwtl
sahf
insb
rolb
je
jno
test
js
and
sarb
dec
out
popf
dec
mov
push
repz
mov
mov
int3
mov
in
fidivs
lds
pop
outsl
and
jp
xchg
ljmp
mov
repnz
jmp
scas
add
push
pushf
inc
dec
in
jno
gs
push
mov
mov
cs
aaa
ljmp
mov
mov
scas
mov
jl
ret
stc
or
pop
hlt
outsl
mov
jno
mov
or
pusha
fwait
jle
insl
mov
mov
lock
cmpsb
jl
sti
sub
sbb
loopne
inc
pop
rcr
dec
stos
dec
pop
pop
sbb
xlat
fmull
jle
outsl
cld
xor
mov
les
xor
call
push
mov
cld
sub
xchg
add
xchg
push
lahf
cmp
or
dec
xor
ret
add
push
jbe
cltd
mov
mov
sbb
out
jl
test
mov
shrb
sbb
sub
cmpsb
shlb
nop
sub
add
cmp
adc
add
or
sbb
push
flds
mov
mov
ret
add
sub
cmp
mov
mov
cmc
and
sbb
stos
or
insl
jge
mov
lock
outsl
pop
in
fst
dec
js
ret
pop
add
or
orl
xchg
xor
push
daa
jp,pn
test
cmp
and
dec
pop
call
push
int3
mov
bound
mov
pop
loop
cmp
test
add
mov
sub
enter
repz
mov
cltd
or
push
inc
imul
outsb
incb
scas
sets
out
ljmp
orb
dec
push
xchg
ret
mov
jne
pop
dec
inc
mov
dec
jmp
fnstsw
xor
inc
stos
repnz
shld
jo
faddl
pop
xor
pushf
mov
dec
xchg
push
lcall
or
dec
ret
jbe
and
negl
es
jbe
decl
insb
lods
or
xchg
mov
inc
jmp
pop
mov
jp
add
xchg
sbb
xchg
lcall
ret
mov
ror
into
call
mov
lret
jecxz
scas
mov
lods
pop
and
int
push
js
mov
mov
or
mov
imul
lods
das
fcompp
aaa
mov
inc
movsl
test
pop
add
cmpsl
loop
xchg
out
sub
test
fwait
adc
es
jp
xchg
bswap
xchg
repnz
loop
push
test
xor
cs
outsl
cmp
inc
push
cld
aas
inc
rolb
cmp
cwtl
dec
jp
dec
cmpl
in
or
mov
and
and
inc
jp
out
mov
jne
jmp
jmp
jbe
dec
jg
pop
xor
and
pop
lret
push
adc
push
cmpsb
loop
cs
push
and
push
push
enter
lahf
and
jno
ret
test
xor
mov
inc
fs
xchg
mov
adc
mov
out
xlat
jl
adc
pop
aad
and
mov
mov
fcmovb
shlb
or
xchg
pop
stc
lret
js
aas
cmpb
out
into
fsubrs
jmp
sti
lcall
sbbl
or
call
pop
push
xor
stc
in
arpl
test
lret
add
mov
mov
jo
es
sbb
add
mov
push
mov
cmp
loopne
ljmp
into
and
int3
dec
fwait
rclb
cwtl
int
xchg
mov
adc
dec
inc
fnstsw
push
lret
mov
repz
mul
scas
in
add
inc
ret
sub
rcrb
sti
jne
imul
es
ja
cmpl
jl
or
cld
or
xor
daa
mov
inc
loop
mov
shrb
enter
mov
mov
jp
not
cld
add
out
and
sbb
daa
in
mov
ljmp
xchg
jp
test
cmpb
jnp
jb
js
cmc
fidivl
adc
loope
shlb
sbb
cmp
pop
stc
les
mov
rcrl
mov
xchg
mov
notl
mov
push
xor
cmp
sub
xor
sbb
or
lret
stos
lods
aad
mov
mov
gs
jb
shl
adcl
push
adc
push
fistpl
rorl
nop
xchg
add
push
sub
mov
inc
fbld
dec
mov
loopne
sbb
jmp
std
jbe
sub
jns
xchg
push
gs
pusha
aam
xlat
xlat
sbb
or
cld
or
repz
inc
popf
or
and
out
dec
test
iret
mov
jle
rolb
add
mov
jo
mov
insl
sbb
xor
push
adc
stos
in
jno
jbe
mov
sar
ret
xchg
mov
hlt
repz
pusha
sub
cli
dec
adc
jecxz
and
xchg
push
pop
jecxz
mov
cs
insl
inc
jne
lods
pop
xor
mov
adc
cmp
lahf
popa
push
sbb
sahf
mov
fimuls
popa
in
mov
insl
mov
sbb
and
adc
ficoml
aaa
xchg
cltd
dec
cmp
cmpb
mov
sub
rcr
addr16
jecxz
out
pop
mov
mov
xor
jecxz
dec
hlt
sub
int
cs
pop
mov
insl
test
addb
adc
pop
imul
mov
jge
xor
push
sbb
cmpsl
rcll
mov
test
push
ret
rcrb
mov
clc
aaa
mov
inc
xchg
push
push
aam
test
push
jo
aad
mov
inc
pop
jge
jo
fdivrs
out
popf
jae
mov
xor
push
pushf
es
xchg
add
and
lret
push
and
push
mov
loope
push
pop
les
les
xchg
push
aaa
xchg
imul
and
ret
and
in
push
xor
xor
push
push
push
stos
sbb
sbb
cli
test
popa
mov
sti
loop
push
jno
stos
mov
repz
push
push
mov
dec
xchg
ljmp
std
cmpl
stc
es
pusha
test
insb
dec
jae
sar
ficoml
jns
adc
xor
jb
mov
popa
imul
leave
dec
add
lods
hlt
jbe
dec
shrb
fucomi
push
mov
and
leave
cltd
pop
or
mov
pusha
test
sbb
incb
xor
sarl
jno
push
fwait
cmpsb
cwtl
cmovnp
cld
adc
xor
push
add
cmp
pop
mov
adc
daa
popa
gs
cld
mov
adcl
lahf
add
ja
pushl
rep
pop
cs
xchg
lahf
insb
mul
test
cmc
stc
add
test
xor
mov
push
push
iret
inc
xchg
jecxz
add
mov
roll
movsl
sub
xor
xor
sbb
xchg
sbb
and
loop
pop
adc
mov
add
mov
stc
sub
sbb
dec
push
pop
inc
adcb
lods
mov
and
hlt
sub
std
js
inc
cmp
sub
mov
popf
mov
lret
cmp
push
aad
mov
dec
shlb
loopne
adc
pusha
dec
cmp
fnstcw
inc
adc
aam
in
cmpsl
xchg
xor
out
test
mov
xor
xor
sub
sub
ja
mov
lods
insb
shlb
adcl
sarl
pop
mov
pop
mov
repnz
push
ja
repz
mov
mov
and
data16
dec
lods
push
subb
jb
test
movsl
cmp
lods
popf
sub
or
inc
pop
jge
clc
addr16
cmp
or
dec
dec
cmp
lahf
push
sbb
rcrb
mov
xchg
and
xlat
decb
pushf
jae
loopne
test
sub
adc
test
add
sub
inc
dec
insl
ds
stos
dec
outsb
pusha
mov
inc
test
pop
rcll
rcll
and
add
aas
xor
mov
mov
or
xor
cmc
addb
mov
pop
test
xor
or
mov
nop
mov
ror
and
popf
popa
push
out
sbb
jno
jg
or
xchg
sti
sub
xorb
add
mov
sti
adc
dec
daa
xchg
dec
sub
pop
adc
rclb
jecxz
jae
insl
jecxz
dec
sub
add
test
outsl
pushf
and
mov
mov
in
testb
adc
popa
test
aas
sbb
mov
repnz
sbb
xor
mov
fiaddl
jne
addr16
lods
mov
inc
jno
in
fistpll
sbb
pop
loope
jl
adc
mov
outsl
inc
pusha
add
xor
test
fucomi
lods
test
lods
mov
adc
xor
xor
repnz
and
xlat
pop
xchg
sbbl
fcomps
shrl
popa
xchg
jb
sub
cld
xor
rol
loope
lret
and
mov
inc
sbb
and
pop
jbe
cmp
mov
sti
ljmp
js
cmpsb
and
in
into
pop
or
stos
repz
aam
jb
fidivs
cld
das
cmpsl
mov
outsb
repz
int3
lock
adc
pop
and
sahf
sahf
push
lcall
lret
and
fisubrl
adc
xchg
add
daa
lds
in
push
mov
repnz
mov
fs
lock
add
push
fisubrs
cwtl
lods
movsb
leave
jno
sub
xor
and
stos
inc
pop
rcll
xor
in
mov
dec
xorl
sbb
in
pusha
cmc
outsb
lahf
arpl
movsl
cmpsl
xchg
mov
insl
lock
addr16
and
sbb
jo
aam
lea
in
lret
cmp
mov
inc
cmp
jne
loope
push
ljmp
rcrl
adc
lret
rol
outsl
pop
mov
aas
cli
rep
xchg
inc
stos
sarl
adc
sub
test
jae
lea
cwtl
ljmp
or
mov
scas
or
hlt
mov
mov
and
and
xlat
out
imul
push
jns
mov
sahf
and
sub
sbb
push
hlt
add
mov
mov
dec
loope
push
rcl
ljmp
imul
loopne
jae
mov
pop
jmp
pop
hlt
clc
cmc
in
mov
inc
xchg
mov
inc
orb
rcr
mov
in
das
aad
xor
imul
adc
dec
push
comiss
loop
xor
adc
sub
outsl
repnz
addr16
lahf
imulb
ljmp
call
lsl
out
dec
jmp
jl
xlat
mov
mov
jo
jp,pt
fdiv
add
pop
enter
xor
iret
mov
or
pop
das
add
sub
popf
imul
gs
pop
fwait
daa
lea
sub
dec
aas
daa
je
jg
sub
xchg
sbb
add
cli
sbb
fidivrs
shll
and
push
insb
mov
push
push
imul
cmp
adcl
mov
lcall
inc
mov
lret
js
push
iret
mov
aad
xor
inc
aaa
jns
mov
or
enter
mov
pop
mov
adc
clc
lods
sti
inc
pusha
pop
sbb
clc
cltd
jb
int3
dec
mov
sbb
jp
int3
dec
insb
in
jne
xchg
xchg
in
iret
mov
aad
adc
sub
push
or
scas
mov
imul
iret
stos
cwtl
pop
arpl
jno
or
adc
clc
stos
fnstcw
scas
sahf
mov
int
push
ret
jecxz
sub
out
mov
loopne
or
das
das
or
sbb
cld
inc
add
push
in
mov
pop
pop
andl
push
mov
bound
out
adc
cmp
test
test
in
icebp
lock
insl
stos
lock
sbb
pop
sub
dec
cmp
jno
rolb
dec
cmp
inc
add
mov
leave
push
sahf
testb
xor
xchg
inc
dec
scas
xchg
adc
negl
in
lods
loope
mov
jp
arpl
inc
adcb
adc
push
pop
adc
or
mov
loopne
imul
xlat
jge
sub
mov
xchg
adc
loopne
cmp
push
fcmovnb
xchg
data16
ror
leave
pop
mov
push
mov
lock
into
xchg
int3
dec
mov
or
cmpsl
mov
sbb
sub
jo
into
xor
out
shrw
xchg
dec
dec
adc
leave
inc
xorl
lock
sbbl
in
add
cld
cmp
and
lcall
loope
int
out
mov
in
icebp
push
xor
cmp
push
pop
and
or
jecxz
out
jae
sbb
jb
or
js
lahf
xlat
sarl
mov
fadd
mov
sub
lfence
fldt
xchg
imul
or
test
inc
xchg
or
mov
jmp
shll
and
cs
adc
das
add
bound
stos
dec
js
std
std
sbb
xor
jle
mov
shll
fnstcw
mov
inc
dec
repnz
mov
xor
insb
pop
lcall
xor
pop
add
and
cli
test
enter
jp
or
fwait
mov
jge
es
cmp
rorb
sti
das
les
fwait
hlt
sbb
cmp
add
f2xm1
xchg
xor
dec
jno
test
fimull
jo
inc
mov
fiadds
lods
ljmp
aam
sbb
subb
inc
insb
or
ja
cmc
dec
sarb
in
mov
inc
leave
inc
inc
arpl
sbb
xchg
das
aaa
cltd
clc
call
dec
popa
pushf
cld
std
jp
mov
call
fimuls
in
les
cltd
mov
ret
arpl
cmp
push
jb
pop
pop
mov
in
and
rcrb
push
add
push
dec
in
pop
inc
adc
hlt
scas
int3
and
sahf
mov
sbbl
mov
pop
pop
lret
les
mov
jno
sbb
ds
push
enter
cmp
bnd
test
fstpt
inc
sub
mov
mov
lea
adc
cmpsb
outsl
int3
fldcw
loope
rclb
jns
adc
and
push
jns
jns
jae
adc
push
cs
sub
imul
es
std
sti
xchg
add
in
aad
mov
je
cmp
loopne
mov
in
mov
xor
rclb
cmp
adc
outsb
sbb
adc
loope
nop
in
xor
mov
mov
lcall
repz
arpl
adcb
mov
jb
ljmp
je
cmp
or
aad
xor
sub
sbb
add
aad
adc
jecxz
xor
push
xchg
mov
mov
popf
lret
or
insl
test
outsl
jmp
mov
ja
outsl
dec
cmp
xchg
icebp
movb
ljmp
and
cmp
test
cltd
lahf
out
jnp
and
inc
push
push
mov
sub
or
xor
adcl
jns
mov
aas
push
mov
sbb
inc
daa
test
sbb
test
mull
cld
xor
jmp
test
pop
outsb
cmp
and
js
pop
mov
movb
data16
xchg
inc
mov
int
dec
insl
addr16
pusha
or
mov
stc
sub
push
test
sbb
repnz
add
push
adc
jo
inc
shll
in
mov
jbe
and
xchg
test
mov
lds
cmp
mov
mov
out
icebp
call
scas
fidivrs
outsl
xchg
or
or
xchg
loop
sbb
adc
mov
in
push
lret
sub
iret
xor
pop
jbe
push
in
lahf
push
outsb
sbb
xor
lcall
jmp
out
xor
jbe
xor
dec
xchg
scas
cmpsl
lea
test
pop
orb
cmpsl
movsb
dec
in
push
into
mov
repz
push
dec
jbe
cmp
lret
movb
test
inc
jno
mov
xchg
mov
mov
lret
dec
push
xorl
xchg
push
inc
and
data16
test
sub
cmp
sub
sbb
jne
inc
jns
and
icebp
pusha
pop
mov
pushf
into
sbb
ljmp
pusha
jae
xchg
jo
iret
ljmp
fnstenv
hlt
jb
les
test
movb
mov
in
mov
xchg
cmpsl
mov
mov
loop
jmp
loop
jle
inc
mov
ret
sbbb
fistpll
stos
daa
sahf
or
pop
inc
mov
rorl
sub
arpl
jne
push
gs
adc
add
xor
gs
cltd
sub
pop
popf
unpcklps
imull
push
jbe
dec
or
xchg
in
mov
aaa
xor
xchg
pop
imul
idivl
out
test
imul
and
out
fistpl
gs
sub
mov
xor
das
xor
mov
mov
iret
dec
cs
adc
or
xor
sub
jp
iret
dec
xchg
mov
xchg
js
repnz
stos
jo
fbstp
pop
ret
inc
pop
nop
sub
hlt
xchg
inc
test
pop
scas
ror
pop
pop
push
sub
push
pop
ret
sbb
and
leave
xor
repnz
push
jl
jl
cmp
movsb
lds
adc
sub
pop
out
jp
add
inc
push
in
sbb
imul
sahf
out
and
pop
shll
out
es
pop
insl
out
lret
xchg
idivb
test
push
mov
pop
or
push
pop
mov
movsb
jecxz
fst
xchg
jp
inc
addb
cmp
iret
and
sbb
mov
xor
arpl
rclb
shrl
xchg
xchg
lods
xchg
jne
out
dec
add
and
xor
ficomps
sbb
jp
outsb
insb
jge
mov
shrl
js
jb
mov
pop
lret
and
jbe
in
push
cmpsl
push
arpl
or
xor
xchg
lret
faddl
sbb
lea
lods
imul
or
adcb
cmp
xor
mov
adc
dec
bound
cmc
idivb
xchg
mov
sub
loop
arpl
mov
mov
nop
inc
inc
into
lret
jecxz
loopne
push
ds
jno
and
add
mov
sbb
sub
das
shrl
enter
int
test
inc
dec
xchg
rorb
and
cli
mov
enter
add
jmp
sahf
lahf
out
mov
mov
xor
data16
mov
movsl
add
ret
mov
cli
pop
hlt
push
dec
cmp
mov
push
dec
stos
inc
mov
xchg
out
dec
std
or
sbb
and
mov
cmp
inc
daa
dec
repnz
dec
cmc
push
out
das
and
outsb
mov
rolb
in
pop
jae
ljmp
pop
push
loope
sbb
mov
rolb
xor
out
push
movsl
ret
std
jecxz
adc
push
imulb
inc
pusha
repz
fsubl
fcmovnu
push
pop
push
inc
imul
pop
cmpsl
mov
popa
cmc
lret
sub
test
sbb
lcall
ja
dec
cld
jns
push
add
lcall
mov
movsl
and
add
aaa
bound
out
add
lcall
mov
mov
lcall
loope
lret
ds
bnd
mov
or
sub
cmpl
in
pop
and
xlat
jne
stc
mov
mov
ficompl
test
sub
fstpt
push
das
cmc
bound
mov
insb
pop
fiadds
lret
mov
insb
xor
cmpsb
decl
stc
dec
out
xlat
sub
push
xchg
in
xchg
push
xor
inc
loopne
rol
les
fildll
daa
or
imul
xor
pop
ret
loop
je
ret
inc
jl
pop
iret
cs
repnz
rol
xlat
pop
sbb
cmp
fnstcw
and
les
mov
dec
test
ret
adc
int
ss
inc
pop
les
xchg
mov
popa
inc
pop
stos
add
lods
xchg
insb
lret
pusha
sti
arpl
lds
mov
xchg
ret
test
shrb
lret
mov
aam
sub
jge
dec
cmp
movsb
push
call
jl
add
xor
cs
inc
inc
or
scas
mov
int
cmpsb
scas
cmp
lock
cs
jg
or
mov
jg
dec
add
xor
pop
das
dec
jb
xor
xchg
test
ds
popa
xchg
hlt
sti
adc
sub
ret
add
repnz
mov
mov
repz
insb
or
inc
dec
mul
add
rclb
sbb
add
push
int
loop
and
cmovle
cmp
fs
mov
mov
sub
fsubrs
aad
xchg
pop
mov
sbb
test
push
jo
das
push
addr16
out
lock
mov
ljmp
lcall
loope
enter
push
mov
sbb
and
mov
insb
nop
dec
lahf
jne
jmp
jne
fdivl
in
mov
and
and
cmp
cmp
lret
mov
sbb
mov
cmp
movsb
jo
mov
xchg
out
subb
rol
and
add
add
xchg
test
jmp
mov
sbb
inc
adc
mov
fdivs
jle
sub
xorb
xchg
repz
pushf
lret
por
int
std
adc
das
pop
jp
pop
push
mov
sub
lods
repz
test
leave
inc
pop
pop
data16
xlat
out
adc
sub
shll
mov
ds
dec
jb
ja
sbb
inc
adc
sahf
jge
push
dec
xor
add
test
testl
notl
ja
xchg
fildl
shll
fs
sbb
cmp
or
stos
mov
loop
lods
fdivrl
mov
push
push
stos
in
mov
xchg
inc
negb
or
jae
add
clc
fs
cmp
fistpl
dec
into
mov
lea
mov
mov
sbb
mov
jp
roll
dec
inc
fldcw
test
push
fxch
ja
movsl
pop
mov
xchg
cmp
cmpsb
ret
gs
sub
or
sub
sub
mov
aaa
push
add
icebp
mov
push
push
pop
add
outsb
fs
xlat
mov
xchg
mov
push
xchg
clc
je
fisubl
aam
or
fidivs
pop
pop
push
xor
repz
mov
xlat
push
xchg
mov
fwait
mov
pushf
aas
mov
push
cmp
pop
add
pop
mov
or
mov
loope
or
pusha
sbb
pop
cli
outsl
jp
and
sbb
dec
ja
pop
pop
pop
imul
sub
mov
shll
sbb
inc
in
lret
arpl
popfw
into
enter
pop
clc
scas
aam
inc
popl
je
lods
adc
mov
inc
ret
stc
stos
in
jp
lea
add
bound
bound
fcoms
pop
int3
fnsave
inc
pop
pop
pop
mov
out
mov
inc
jbe
or
aas
inc
icebp
xor
add
mov
or
mov
sub
shrl
out
scas
sti
pop
mov
out
pop
sub
cmpsb
add
mov
push
iret
hlt
add
stc
or
insl
repz
mov
sub
jmp
shrb
fs
add
mov
ja
js
inc
stc
inc
into
iret
out
xor
jne
jge
push
mov
popa
ljmp
aam
pop
insl
push
mov
sub
jb
mov
dec
mov
shlb
jecxz
mov
jl
push
sub
pusha
mov
mov
lcall
mov
dec
mov
test
iret
pushf
cli
mov
push
jo
inc
fdivl
push
mov
cmp
arpl
add
cwtl
jmp
insb
jno
xlat
outsb
xor
dec
repnz
dec
sbb
dec
xchg
insl
sub
fisttpll
inc
stos
sbb
xchg
push
jg
iret
dec
shl
into
jge
push
imul
imul
sub
push
lods
loopne
stos
sbb
mov
stc
out
inc
fdivl
mov
add
repz
adc
data16
push
cmp
pop
lods
fwait
lcall
cli
mov
mov
sti
lea
fmull
or
rcl
int3
icebp
cmp
popf
push
mov
push
insb
sbb
ljmp
jno
sbb
mov
fistl
cmpsb
and
popf
std
testb
cmp
sahf
mov
mov
push
enter
xchg
leave
in
cmpsl
xor
pop
push
cmc
in
xchg
and
mov
test
xor
out
ljmp
jnp
addr16
repz
sub
rolb
divl
js
cmp
psllq
fcompl
push
add
gs
jnp
pop
dec
pop
xchg
std
cmp
test
jmp
loop
arpl
inc
jl
sub
pop
jmp
dec
jmp
pop
sub
cmp
ja
jg
mov
mov
jnp
jl
daa
fidivrs
inc
bound
leave
mov
pop
mov
mov
lods
jmp
enter
mov
std
cltd
jge
aas
int3
mov
cmpsl
cmp
out
inc
femms
das
test
cmovge
cmp
pop
inc
mov
push
cmp
or
jp
scas
stos
pop
or
sbb
sahf
jbe
dec
and
cmc
mov
ljmp
inc
and
ret
les
movb
sbb
and
xchg
push
xlat
daa
lock
dec
adc
clc
imul
mov
ss
or
lcall
fs
mov
fcmovnb
insb
add
inc
cmpxchg
sub
pusha
xlat
rolb
jno
int3
dec
ss
cmpsl
or
fwait
and
dec
jae
arpl
xchg
or
push
sbb
dec
add
jnp
xchg
pop
lret
icebp
and
rorb
adcb
shr
popf
movsb
push
out
lahf
jno
push
test
gs
jecxz
test
pop
loop
inc
int
dec
stos
fisttps
and
sub
gs
enter
xchg
ret
fbld
shll
add
adc
stos
adc
mov
lret
insl
hlt
and
out
in
loopne
jl
mov
sub
hlt
mov
and
cltd
add
pushf
jne
push
mov
call
xor
pop
mov
nop
outsb
and
mulb
or
sub
sbb
cmp
fnstenv
xchg
add
xchg
into
xchg
das
popa
add
loop
and
ljmp
mov
xor
popf
mov
data16
add
jnp
inc
outsl
loop
idivl
clc
mov
stos
sub
or
mov
jl
lea
adc
jle
sub
cmp
movsb
pmullw
sub
into
pusha
pop
xorb
jae
test
cli
rolb
sbb
jge
mov
imul
dec
out
mov
or
cmp
mov
or
sub
aaa
movsb
popa
movsl
aas
adc
jne
lods
mov
jg
xor
inc
sub
idivb
insb
fidivs
jne
jns
pop
cmpsl
cmp
xchg
movsb
cmp
mov
subb
shll
inc
mov
icebp
aam
or
idiv
ret
imul
repz
jns
push
jns
ret
andb
test
ret
and
out
addr16
cmc
push
or
cmp
push
cmpl
jp
sub
dec
loope
lods
xor
push
sbb
and
pop
push
clc
pop
mov
insb
jg
cmp
xor
insl
leave
cmpsb
and
inc
push
adc
or
mov
in
movsb
push
call
popf
mov
push
es
out
sbb
xor
sub
inc
xchg
pop
outsl
pop
repnz
cld
push
sbb
cmc
xor
stos
inc
adc
popf
icebp
in
push
mov
or
mov
shrl
cltd
sub
jae
das
fdivl
data16
nop
push
sub
cmp
mulb
cltd
fnstsw
pop
inc
fs
jnp
aam
add
sbb
jne
pop
push
out
aad
dec
aaa
jmp
sub
cmpsb
mov
aad
cli
je
xor
pushf
mov
pop
in
jp
adc
xlat
sub
aas
cmp
mov
push
in
fwait
xchg
leave
repnz
mov
add
test
push
mov
cmp
inc
ret
mov
add
shlb
xor
inc
out
mov
mov
add
arpl
jle
xor
dec
or
add
outsl
cmp
shrl
xchg
inc
sbb
and
sbb
movsl
pop
shrb
icebp
pop
lret
push
xor
sbb
dec
mull
clc
lock
fwait
pushf
mov
sub
test
adc
scas
leave
mov
aad
dec
ja
cmp
mov
lcall
cmpsb
cmpsl
or
cltd
test
cmp
fdiv
shrl
jl
loop
jne
bound
icebp
ret
jmp
pop
adc
ja
cmp
dec
and
scas
hlt
daa
sahf
dec
test
dec
movsb
cmc
mov
in
mov
lods
inc
lret
pushf
mov
repz
mov
les
or
jbe
mov
cmpsb
out
imul
imul
pushf
mov
sub
dec
dec
sbb
xchg
fcmovb
dec
or
or
arpl
add
mov
cmp
push
mov
pushf
dec
aad
or
int
pop
and
clc
std
je
fldenv
or
and
mov
push
pop
push
and
adc
fcoml
pusha
jp
push
lods
aam
mov
adc
mov
jne
mov
adc
cld
jbe
adcb
icebp
cld
push
push
in
inc
push
out
or
xor
xchg
ss
pop
adc
cmc
cmp
popa
repz
stos
sbb
sbb
adc
jecxz
sahf
dec
or
or
fidivrl
jle
push
sub
cmp
cld
sbb
in
daa
aam
popa
imul
sub
ss
pop
loop
mov
not
sub
push
or
pop
inc
jo
daa
out
jle
rcr
out
fnstcw
pop
sub
and
adc
push
imul
mov
imul
xor
push
xchg
push
ljmp
sbb
aaa
cmp
jno
inc
in
jecxz
pop
lahf
addl
or
icebp
orb
pop
inc
pop
leave
sub
mov
mov
pushf
sbb
outsl
and
in
jle
xchg
xrelease
jne
push
mov
mov
or
sti
cmp
push
rorl
iret
je
adc
ss
fs
mov
xor
mov
stc
loop
insl
cmpb
pop
cmpsb
cltd
and
or
scas
jecxz
jl
mov
arpl
sarl
icebp
mov
pop
mov
mov
push
test
mov
ljmp
aam
inc
hlt
jle
fsubr
gs
fcomip
adc
in
and
cmpsb
ljmp
rorl
sbb
aaa
dec
add
push
das
lea
mov
scas
dec
lods
fisubrs
sbb
xchg
mov
jecxz
inc
adc
fildll
js
mov
outsl
repz
cmp
icebp
xchg
outsl
xor
dec
adc
ljmp
pop
dec
imul
dec
xor
faddl
mov
pop
adc
fldcw
adc
shlb
add
or
cmp
dec
call
out
iret
push
jnp
xchg
lods
in
flds
add
mov
out
pop
mov
pop
clc
popa
mov
inc
push
xchg
and
and
xchg
push
pop
xor
test
pop
sub
or
outsl
sub
call
ror
mov
sbb
pushf
push
stos
jnp
sbbl
ds
mov
int3
jp
adc
mov
lret
cmp
rclb
aam
hlt
jecxz
push
inc
inc
inc
and
cmpsb
jns
sub
mov
dec
jg
or
in
outsl
scas
sub
stc
and
imul
nop
or
std
stc
adcl
scas
lea
shrl
dec
imul
in
call
lods
jmp
fsubrp
xlat
movsb
stos
ret
or
in
mov
lock
sub
icebp
xor
inc
jb
push
pop
addr16
inc
and
mov
jo
push
mov
dec
mov
iret
xor
push
les
out
xchg
into
jns
and
loopne
inc
fistpll
leave
jnp
aaa
sub
repz
insl
sti
xchg
xchg
pop
inc
xchg
pop
in
pop
test
push
or
outsl
icebp
sub
shll
adc
sbb
sub
rcrb
adc
sbb
sbb
mov
lods
lret
jno
xor
enter
jbe
sbb
fstl
jne
mov
mov
jb
cmp
add
xchg
xor
jle
jno
push
mov
jmp
add
stos
fs
test
movb
xorb
mov
roll
xor
sub
xchg
jp
mov
add
pop
lds
fmuls
into
sbb
popf
in
xor
imul
outsb
jno
fdiv
mov
mov
push
mov
lods
imul
push
insl
pop
sub
xchg
iret
cmpsb
jae
pushf
hlt
daa
pop
cli
mov
mov
jl
ror
sbb
repz
sub
inc
inc
jnp
in
nop
lret
arpl
int3
int
imulb
sbb
hlt
mov
mov
sub
or
sti
sub
in
in
test
xchg
and
enter
adc
lods
jge
cmpb
addb
lock
dec
nop
dec
fisttpl
xchg
fucomi
xchg
cmp
sub
test
pop
mov
orl
in
inc
fpatan
jnp
out
lret
aas
fisttps
adc
addr16
out
lret
push
je
dec
cmpsb
mov
test
sarl
loop
out
ja
fs
nop
je
or
xchg
cwtl
sbb
mov
mov
or
rorl
xor
aaa
call
and
shll
sbb
dec
push
push
xchg
test
out
das
es
gs
test
mov
push
lret
popa
or
in
xchg
cld
mov
and
cs
and
xchg
movb
mov
and
scas
mov
sbb
imul
inc
mov
out
iret
or
imulb
repnz
scas
cmc
sub
aas
out
fcom
cmpsb
scas
insl
jo
cmp
nop
test
pop
xchg
xchg
add
pop
pop
mov
enter
lds
push
shll
push
push
mov
and
jns
in
mov
ja
push
sti
add
xor
xchg
hlt
and
popf
adc
add
insl
fdivrs
pop
mov
sub
xor
into
loop
cmpsl
cs
scas
in
mov
adcb
bound
xchg
dec
repnz
test
call
add
sbb
jecxz
pop
dec
scas
lea
jge
je
inc
clc
sub
dec
adc
mov
xchg
inc
fcomp
lret
notl
in
xor
mov
or
stos
adc
xor
stc
xor
lahf
jge
lock
mov
xchg
outsb
pop
push
push
fimull
repnz
xchg
add
sub
and
add
stc
clc
in
movsb
lahf
dec
lea
outsb
mov
xchg
inc
lcall
ret
jns
push
pop
mov
push
pop
pop
nop
dec
sbb
notl
stos
inc
jne
mov
pop
jnp
mov
sahf
negl
mov
mov
cmpsl
cmpb
sbb
pop
insl
icebp
test
hlt
loope
cmc
inc
mov
xchg
popf
jmp
xchg
lods
lock
inc
mov
cmp
negb
jne
and
and
dec
sbb
scas
cmp
cld
push
pushl
add
in
mov
into
pop
push
fimull
loop
cmp
fisttps
ljmp
ja
sbb
push
lcall
xor
jae
test
icebp
cmpsl
call
fildl
inc
repz
jnp
pop
sbb
ja
sbb
dec
cmpsl
dec
dec
adc
push
adc
stos
out
icebp
jp
ret
sbb
mov
pop
pop
sarb
mov
adc
hlt
pop
fwait
inc
jp
mov
je
inc
inc
sub
xor
jne
cmp
adc
notb
jge
lods
gs
and
push
in
xor
imul
xlat
pop
jo
sbb
mov
push
or
in
test
imul
in
mov
int
jae
xor
jp
repz
jno
xor
or
jle
dec
add
dec
icebp
xchg
jle
shlb
test
test
push
xchg
push
std
test
inc
out
stos
lahf
pop
sub
push
mov
dec
mov
aam
or
addr16
mov
clc
adc
ljmp
bound
pop
stos
dec
arpl
into
shll
into
lret
jp
mov
mov
cmp
test
int3
xchg
loopne
lock
and
inc
sub
fucom
mov
mov
mov
xlat
adc
cmc
fs
push
lcall
adc
mov
js
arpl
enter
imul
jecxz
imul
insb
sub
sti
and
sub
imul
js
mov
divb
mov
cmp
cli
xor
fidivrl
pop
push
inc
cmpsl
inc
ss
aaa
lret
and
adc
scas
push
mov
fiaddl
jno
inc
mov
adc
jnp
mov
cmpsl
imul
mov
fstl
js
pop
js
jge
inc
push
jnp
rcrb
out
dec
mov
ljmp
lret
mov
inc
cmpsl
ljmp
aas
lea
lcall
jl
xchg
es
out
cmpsl
imul
push
mov
xchg
mov
insb
jl
xorl
sub
es
push
inc
incl
das
fwait
and
jl
inc
sbb
push
inc
loope
xor
pushf
push
shl
lods
shl
cmp
and
clc
add
push
or
xor
mov
insb
sub
imul
sub
arpl
mov
sbb
xchg
sbb
mov
lods
mov
push
dec
clc
xchg
fdivrl
mov
imul
imul
inc
stos
or
mov
jge
push
in
mov
test
push
cmovne
jae
fcompl
add
dec
cmp
mov
call
push
jno
das
pop
or
xchg
divb
cmp
std
stos
inc
or
sub
daa
rolb
cmp
hlt
xor
jno
imul
xchg
cmp
adc
flds
mov
sub
sub
push
mov
sub
in
lods
inc
test
insb
pop
jne
dec
jl
inc
sbb
insb
out
std
mov
stos
scas
mov
loopne
std
shll
ja
pusha
cmp
inc
sub
pop
nop
inc
mov
sub
push
push
or
les
xchg
iret
mov
fs
push
xchg
adc
pop
inc
pushf
sub
inc
dec
dec
aam
adc
jne
cmp
sbbb
pop
jg
push
push
lahf
mov
xlat
cmpb
dec
mov
call
push
add
fmul
inc
and
sti
mov
adcb
out
imul
dec
jnp
fwait
add
sub
cmp
inc
mov
mov
fs
jnp
jbe
jb
cmp
inc
out
mov
xlat
sti
xchg
dec
dec
adc
test
mov
sbb
outsl
push
push
mov
fistl
les
xchg
sbb
push
xchg
xlat
clc
add
js
cmpsl
es
dec
loope
addr16
xchg
icebp
les
jbe
stc
fimull
aad
mov
jne
mov
stos
daa
popa
sbbl
ss
inc
aam
cmp
cmp
pop
movsb
xchg
lds
into
mov
cmp
mov
popf
sbb
out
jle
insl
outsb
push
scas
xchg
insb
sarb
popa
in
js
mov
and
adc
ds
inc
xchg
rolb
push
fildll
xor
imul
insb
jb
xor
mov
mov
jp
cmp
scas
inc
push
pop
inc
loopne
lret
jle
leave
insb
xor
jge
lahf
lods
scas
lret
mov
add
sbb
push
add
jmp
pop
mov
mov
sbb
fbld
lods
decb
dec
gs
iret
or
push
sbb
push
stc
pop
mov
es
add
pop
in
add
ss
repz
sub
test
jno
ja
bndldx
outsb
cmp
mov
movsl
aam
cmp
or
mov
lds
mov
movsl
shll
cltd
aam
push
dec
mulb
push
push
sbb
es
rorb
enterw
adc
lock
das
rcr
dec
lcall
subb
rolb
lods
jbe
leave
cmp
cmp
push
adc
mov
test
xchg
dec
in
mov
jge
cmc
add
les
mov
and
stc
repnz
push
mov
fisttpll
dec
pop
adc
pop
mov
xchg
cmc
xor
xchg
mov
call
mov
leave
ret
inc
test
ljmp
cmp
outsb
lea
pop
push
add
fcmovnb
pop
mov
xor
add
int
add
scas
xor
ret
popa
mov
add
pop
insl
ret
pop
cmp
jp
bnd
mov
cmc
push
lcall
imul
outsb
fisubrl
pusha
test
pop
jbe
scas
inc
and
das
int3
enter
sub
sub
scas
xor
enter
out
hlt
cmp
sbb
mov
cld
inc
xor
and
nop
aad
in
jmp
aaa
pop
not
dec
mov
inc
cmp
cwtl
sub
cmp
fisttpll
sub
sbb
inc
push
lods
mov
fnstsw
ret
sub
jae
mov
ret
fstpl
fidivs
ds
dec
dec
rclb
jl
jb
scas
lahf
stc
mov
fbstp
in
push
repz
sbb
jp
push
dec
push
lcall
or
pop
fwait
lret
jbe
add
jns,pt
adc
inc
cmp
lret
add
dec
ss
mov
cmpsl
sbb
out
jp
lea
mov
jmp
cmpsb
dec
adc
jbe
sbb
or
fidivrl
inc
mov
ss
ss
xchg
popa
and
sub
enter
or
fstl
xor
dec
lcall
arpl
dec
vmovq
sub
int3
fmuls
loope
mov
lea
lahf
das
xchg
add
addr16
cltd
out
popa
sbb
xchg
mov
inc
das
ffree
add
mov
sub
js
loopne
fwait
xchg
dec
xor
xlat
ret
call
inc
enter
xor
inc
and
ja
in
mov
sarl
out
js
cmpb
add
lcall
adc
gs
add
scas
jnp
inc
xchg
in
or
push
jno
aam
push
push
ds
icebp
cli
sbb
sub
fisttps
jle
sbb
insl
and
xchg
pop
fcomp
pop
leave
cmp
ds
sub
push
ja
adc
inc
outsl
lret
ljmp
hlt
ret
add
mov
jo
pop
pop
push
inc
fdivrs
mov
sbbb
rorl
ljmp
mov
mov
orl
push
mov
mov
loope
rolb
fimull
or
sub
fdivrl
outsb
sahf
push
xor
xchg
dec
fmuls
mov
jb
ret
pop
mov
fwait
mov
pop
xor
push
leave
out
sbb
add
adc
push
jg
inc
cwtl
inc
mov
out
pop
pop
sarl
or
fists
cwtl
cmp
mov
lahf
adc
jnp
add
push
pop
lods
movsb
push
pusha
ror
mov
dec
and
jmp
sub
xor
ret
jno
in
pop
push
fsts
xor
dec
sbb
xor
pop
hlt
stc
movsl
xor
mov
nop
stos
push
pusha
fistpll
fidivrl
inc
rolb
pop
xchg
fs
mov
xchg
ds
cmpsb
fstpt
es
sub
nop
sub
jb
repnz
cmp
into
sub
in
ss
ja,pt
cmp
iret
aaa
mov
int3
dec
repnz
subl
push
mov
pop
gs
dec
xor
jge
in
jmp
pop
lods
out
sbb
dec
sti
call
mov
aam
out
cmp
lds
jo
mov
ss
cmp
fs
mov
push
xor
jp
sahf
iret
mov
jecxz
and
fs
cltd
dec
mov
jg
or
out
mov
cmp
pop
fisttpll
xor
hlt
ret
js
aas
or
sbb
fcmovu
jle
inc
adc
sub
scas
or
decb
call
scas
mov
jae
xor
xor
fidivl
sti
mov
test
shll
rolb
dec
ret
cwtl
mov
orb
addr16
inc
fwait
sub
push
icebp
jae
and
pop
or
and
mov
dec
inc
jne
pop
les
xchg
sub
pop
add
ja
jbe
sbb
jge
loop
fimull
jle
push
push
pusha
fisubs
leave
xchg
cltd
mov
sbb
dec
jns
fcoms
jns
adc
or
fimuls
cmc
push
xchg
outsl
cmp
loope
mov
push
xor
test
mov
jne
cmovae
int
dec
lock
outsb
lock
sarl
idivl
and
sbb
out
or
jg
stos
stc
jo
pushf
jl
push
int3
aaa
add
pop
jmp
pop
es
dec
pop
sub
fnstsw
mov
dec
and
stos
jb
pop
data16
jae
mov
cmp
fistl
in
adc
mov
push
mov
repnz
mov
pusha
out
mov
loopne
das
jge
out
push
aad
ret
adc
xor
cmpsl
subl
push
xchg
les
or
xchg
push
jnp
pop
into
pusha
stos
jecxz
xchg
add
les
jmp
lahf
mov
lret
xor
mov
fisubrl
cmc
adc
inc
dec
std
ds
xor
xchg
repnz
add
or
mov
std
test
pop
fistpll
lods
enter
mov
cwtl
jno
push
jg
xor
jns
imul
mov
into
lea
hlt
cmpsl
jns
inc
cltd
and
sbb
mov
inc
xchg
and
add
sub
lods
lods
call
xchg
xchg
ret
sub
or
cltd
push
aas
test
dec
push
mov
dec
add
sbb
add
stos
mov
in
fwait
cwtl
sub
cmpsl
loop
loopne
lcall
xor
add
xlat
in
decb
int3
pop
inc
ja
inc
fnstenv
stos
sbb
xchg
rcll
sti
cmpsl
aas
push
lea
jns
push
pop
or
jge
jecxz
idivb
pop
out
std
pop
psrld
mov
xlat
fnstsw
cmpsb
push
sbb
dec
mov
pop
xchg
dec
push
pop
add
push
es
aaa
lcall
mov
dec
cmp
mov
adc
adc
lods
sub
rorl
lret
push
xchg
sbbl
cwtl
xor
jb
cmp
aaa
in
out
jno
adc
or
sti
loop
fisubl
ret
xchg
fcmovnu
or
out
fsts
mov
out
addr16
xor
jnp
ss
divl
jl
dec
rclb
pop
inc
je
lock
outsl
jno
ds
ficoml
xchg
pushf
push
movsl
dec
nop
xchg
sbbb
out
push
xor
lods
or
mov
loopne
pop
addr16
lock
sbb
stc
xchg
stos
cmp
lods
jno
movsb
push
test
xchg
sahf
add
stos
cli
jge
mov
jb
cmc
iret
fdiv
mov
aam
inc
add
pop
mov
shrl
pop
xchg
das
sbb
lcall
push
mov
sub
clc
outsb
inc
inc
bound
lock
sub
test
xor
mov
jb
insl
pop
pushf
inc
or
fadds
ja
por
xorb
and
xor
push
push
pop
je,pn
cmp
call
or
orb
popf
es
rclb
push
or
mov
jno
fcompl
shll
imul
jge
cli
jmp
addl
adcb
and
dec
adc
movsb
test
mov
fildl
negb
mov
mov
or
fstpl
xchg
outsl
pop
and
mov
xchg
mov
mov
adc
cmp
fsubrp
data16
scas
nop
push
and
sub
push
xor
aas
jns
xchg
jg
pop
or
adc
xor
addb
or
ja
fbstp
test
jns
add
or
cmp
pusha
mov
and
dec
hlt
stos
push
jnp
xchg
cmp
mov
mov
push
mov
add
aam
notl
loop
add
std
lret
push
mov
push
mov
fs
adc
inc
ds
dec
xchg
push
pop
xchg
bound
sub
cmp
ficompl
or
fidivl
sbb
add
mov
cmp
stos
mov
cltd
or
mov
pop
in
lea
cmp
mov
enter
ds
mov
pop
jne
cmp
xchg
xchg
ficompl
loop
in
mov
ljmp
cld
sub
nop
outsl
push
cmp
dec
fldenv
out
scas
and
or
scas
jle
xor
orl
lahf
les
shrb
in
xchg
or
push
and
dec
mov
pop
jle
movsb
lods
lea
or
lret
movsl
mov
mov
sub
pmuludq
adc
inc
inc
ljmp
jbe,pn
xchg
outsl
sti
xchg
adc
jl
out
and
jg
dec
add
push
xchg
mov
in
icebp
fsubl
or
aas
out
int
loope
ja
pushf
ret
jne
rcrb
inc
fwait
mov
in
cs
cmp
lea
xchg
mov
add
add
leave
cltd
rep
ja
xlat
push
stos
popa
adc
fsts
int3
cmp
mov
mov
aad
xchg
fldt
sub
xchg
adc
lea
lock
and
sub
push
pop
add
add
mov
enter
sbb
call
fsubrs
xchg
push
mov
xchg
into
movsb
call
int
sbb
xchg
inc
xor
shr
adc
out
inc
sbb
cmp
and
inc
xchg
pop
outsl
jle
insw
push
pop
addr16
cli
cwtl
aas
jne
cmp
fists
testl
mov
xor
mov
pop
aas
fistpl
inc
cmp
xor
and
or
in
data16
data16
insb
loop
cltd
fsubrs
xchg
popf
adc
les
inc
mov
in
cmc
push
push
test
sbbb
hlt
mov
sbb
pop
mov
fsub
movsb
push
push
cmp
sub
insl
pop
mov
xor
ret
xor
aas
fstpt
pop
in
jns
adc
sbb
cmpsb
add
cwtl
and
sbb
pusha
and
xor
sbb
clc
stc
mov
push
jbe
popf
dec
mov
xor
mov
in
fucomp
xor
mov
int
cli
mov
jmp
push
bound
dec
mov
sbb
cmp
dec
mov
imul
xor
jo
cltd
xchg
fiadds
xchg
aad
mov
mov
out
arpl
and
xor
nop
jo
push
int
jne
fs
pop
rcrl
lcall
xor
mov
xor
pop
popf
shlb
sub
lcall
es
xchg
cmp
out
ret
sbb
aad
jge
rcll
cmp
sti
jo
and
or
pop
pusha
mov
mov
insb
jns
add
xchg
pop
loop
aas
addl
mov
lcall
jmp
popa
imul
add
xor
icebp
mov
xchg
into
dec
bound
inc
mov
mov
dec
shll
xchg
loop
inc
xor
jnp
jne
fcoml
and
add
xor
push
outsb
test
push
ss
mov
stc
fwait
into
fwait
sub
sub
adc
inc
add
inc
fbstp
hlt
out
cmp
cli
pop
mov
inc
jo
leave
loopne
neg
mov
mov
cwtl
ret
xorb
sahf
out
fwait
lock
fildl
scas
fistl
push
push
icebp
xchg
popf
push
jecxz
or
inc
xor
ret
daa
dec
mov
xor
iret
mov
or
xlat
and
jl
xchg
push
rorl
orb
lcall
push
aam
or
and
inc
pop
test
dec
pop
cmp
sub
adc
or
cmove
sub
mov
adc
addb
out
sub
sbb
outsl
push
lds
andb
push
pop
shlb
jmp
add
cmp
dec
jae
lds
xchg
jl
xlat
pop
bound
mov
fldl
sbb
mov
pop
int
ficoms
jp
pop
clc
shrl
mov
scas
ja
dec
adcl
aad
call
pop
enter
cmpsl
pop
loopne
js
dec
pop
push
push
and
fs
shlb
je
fstpt
outsw
fwait
mov
out
repnz
cmp
pop
or
in
mov
in
push
mov
adc
xor
stos
dec
xchg
aam
and
push
dec
lcall
jno
jp
pop
mov
into
lret
mov
push
jae
sub
xor
shrb
cs
sbb
xor
outsl
cmp
sub
mov
xchg
sbb
xor
cmc
push
ret
scas
mov
mov
icebp
clc
repnz
mov
mov
ret
pop
hlt
cmc
push
adc
js
sbbl
or
out
out
imul
scas
add
outsl
xchg
insb
icebp
xorb
ret
hlt
ror
in
push
xor
sub
push
cmp
xchg
pop
daa
movsl
cmpsl
sbb
out
mov
pop
sub
jge
pop
rorl
leave
pop
add
mov
loopne
mov
cmpsb
or
cmp
inc
cmpsb
fistl
dec
test
movsl
es
or
mov
inc
or
mov
mov
popf
xor
push
pop
aas
hlt
mov
pushf
sub
mov
pop
fistpl
aad
and
shrb
pop
push
jle
jmp
mov
out
dec
jbe
mov
icebp
mov
add
popl
das
mov
inc
jbe
jb
xor
dec
mov
addb
insb
in
sbb
cmpsb
inc
stc
add
mov
mov
sbb
pop
clc
lahf
sahf
xor
cmp
popf
scas
inc
mov
push
cmpsb
or
lret
dec
add
rolb
xchg
and
push
push
add
inc
cmc
jle
rclb
lock
lds
push
pop
jb
loop
mov
out
gs
enter
dec
shl
jp
jb
sbb
inc
data16
mov
dec
addr16
cmc
lcall
cmp
mov
dec
iret
or
mov
lcall
stos
cwtl
nop
rclb
and
and
cs
adc
in
push
xor
mov
int
add
and
xorb
cli
jnp
cld
inc
je
ret
pop
les
push
mov
movsb
and
imull
mov
loopne
pop
xor
mov
inc
fldlg2
xor
dec
popa
push
test
arpl
xor
aaa
fnstsw
out
scas
dec
adc
cmc
sti
mov
mov
pop
cs
out
mov
fdivrs
lret
push
inc
test
lods
xchg
or
cli
loope
mov
nop
inc
jecxz
stos
scas
daa
xlat
test
and
push
mov
or
mov
sub
in
mov
cwtl
cltd
or
jp
mov
insl
stos
icebp
jae
out
cld
push
jecxz
mov
sbb
mov
lret
in
in
jmp
mov
xor
ret
arpl
push
xchg
sbb
cmpsb
cs
frstor
mov
cmpsb
xor
loope
in
push
std
nop
cmp
enter
sbb
mov
xchg
xor
cmp
cmp
push
lcall
push
sbb
mov
imul
and
xchg
or
aam
pop
cli
and
jmp
push
cmpsl
push
xor
cmp
stc
loope
mov
icebp
sbb
or
xchg
push
push
add
imul
mov
jecxz
loop
xor
fistpll
mov
sbb
int3
ja
cmp
xchg
faddl
mov
lods
int3
pop
daa
repnz
mov
xchg
sbb
xor
add
in
or
push
xchg
mov
adc
testl
imul
mov
xor
testl
xchg
sub
or
dec
test
add
ds
mov
cld
adc
inc
jge
aam
daa
ret
dec
push
xchg
sbb
mov
enter
xor
cmp
ljmp
jbe
mov
aam
jno
cwtl
imul
orb
fcoml
push
leave
fs
sarb
jno
test
mov
pextrw
popa
loope
call
mov
out
jp
sti
and
jnp
cld
incl
add
sub
int3
jns
ljmp
sbb
sbbb
pop
std
cmp
fiadds
fs
xchg
dec
movsl
lcall
outsl
xchg
sysret
flds
adc
inc
lods
or
outsl
test
xor
incl
cld
push
aaa
fimuls
cmp
ljmp
dec
mov
dec
jo
rol
cmp
push
int
shlb
inc
shlb
lods
cmp
dec
xor
std
mov
jae
leave
pop
mov
nop
lea
test
mov
leave
or
imul
icebp
sbb
pop
les
sti
addr16
loopne
int
rcr
rep
fs
sbb
mov
stc
or
orl
pop
stc
das
pop
or
mov
adc
inc
gs
stc
push
or
mov
xchg
pop
leave
js
cmp
roll
mov
ds
dec
xchg
adc
rep
push
ds
jmp
mov
lcall
add
mov
stos
loop
adc
loope
clc
push
fistpll
push
push
scas
fmulp
mov
mov
loopne
push
push
jbe
das
in
popf
arpl
xchg
loopne
cmc
les
js
cli
push
mov
subb
push
loope
add
in
xchg
mov
mov
lcall
int
dec
cmp
insl
shr
xchg
jp
fcoml
adc
xor
and
lahf
js
xor
xchg
adc
leave
ficoml
push
inc
enter
mov
dec
in
fisttpll
repz
out
testb
mov
mov
test
inc
in
fs
pop
sahf
pop
lea
inc
aam
cmp
sti
xor
jecxz
jmp
mov
in
imul
sbb
xor
push
sarl
mov
mull
push
dec
mov
jmp
mov
ret
adc
adc
mov
cmc
outsl
and
jns
mov
jmp
cmpsb
fsubp
int
addr16
or
sub
lret
add
ja
insl
pop
mov
mov
mov
das
fadds
jo
movsl
mov
lret
or
rcl
outsl
divb
sub
mov
mov
or
inc
das
cmp
dec
sbb
inc
adc
fistps
sti
and
adc
outsl
cld
mov
xlat
xchg
fwait
mov
arpl
imul
aas
xchg
mov
lods
sarb
jbe
jnp
mov
push
xchg
in
imull
lret
lods
dec
add
ja
mov
clc
fcmovne
xchg
stos
and
call
mov
and
push
cmp
mov
shll
inc
jae
jp
rcrl
xrelease
dec
xlat
adc
repnz
shrl
mov
aam
pop
aaa
or
sub
pop
rorl
roll
les
outsb
std
inc
sbb
ja
cli
xchg
shrl
lcall
aas
scas
pop
fwait
inc
lahf
cmp
jmp
imul
dec
js
cmp
fsubrl
pop
int
iret
aaa
jo
test
xor
cmp
sub
mov
lods
lods
mov
rcrl
add
loope
mov
fbld
cmp
jle
icebp
imul
insl
push
fbstp
mov
mov
daa
sub
jae
sub
cmp
cld
lock
mov
mov
pop
push
jg
fidivs
inc
shr
xchg
sbb
jo
roll
loope
push
jae
sbb
aaa
dec
arpl
xchg
aaa
dec
adc
dec
out
movsl
xor
mov
xchg
mov
inc
addb
movsb
cltd
out
pop
xchg
outsb
dec
push
xchg
addr16
repnz
add
iret
test
pop
sub
sub
pop
or
shll
inc
push
sub
adc
repz
push
and
and
sahf
into
scas
outsb
jl
dec
sub
mov
push
cmpsb
add
cmp
and
cmp
ficoms
test
mov
out
or
xor
xor
dec
sbb
adc
stos
add
mov
dec
jnp
or
mov
cmpsb
adc
sti
adc
pop
icebp
xchg
popl
frstor
xchg
pop
es
notl
push
outsl
or
sub
and
and
lcall
push
mov
push
ret
aaa
add
xor
xor
inc
cwtl
addb
jl
xor
andb
and
or
and
jmp
push
out
cmp
je
std
les
xchg
das
sub
xchg
push
and
mov
cmpsl
daa
test
popa
sahf
mov
lds
mov
dec
mov
mov
loop
pop
jle
popf
cltd
aam
ss
jp
sbb
ljmp
inc
pop
in
adc
es
add
popw
lods
js
insl
sbb
out
jnp
mov
test
mov
xchg
imul
cmpsb
mov
dec
pop
sbb
adc
ss
flds
stos
pop
shll
sbb
sub
es
out
mov
outsb
sub
test
scas
push
repz
push
sub
arpl
mov
iret
lret
rcll
push
mov
inc
or
xchg
loopne
loope
popa
ret
xchg
sub
add
mov
sbb
and
rolb
arpl
mov
inc
mov
arpl
fistpll
mov
mov
imul
ljmp
mov
xor
cmp
jnp
cmp
mov
mov
mov
subb
mulb
push
lahf
mov
imul
shl
add
jmp
push
xor
jb
fmulp
mov
in
sti
jg
popa
scas
push
or
movsl
cmp
pushf
and
push
push
dec
xor
loop
mov
insb
jg
fists
xor
icebp
scas
aas
bound
lret
lahf
je
std
pop
pop
mov
sbb
ret
stos
shl
lock
jae
lret
dec
insl
lret
loopne
outsl
add
repnz
movsb
mov
lods
ret
cmc
data16
sbb
lret
or
xor
lahf
ss
into
push
xchg
aam
call
pop
cmpsb
sbb
lods
add
fsubr
pop
xchg
jmp
pop
mov
cmp
lock
stos
fisubrl
lods
mov
repz
hlt
push
sbb
repnz
stc
push
cmp
cmpl
jmp
into
mov
sbb
fldcw
mov
mov
rorl
ror
pop
stc
jbe
sahf
mov
xchg
rcrb
jno,pt
loope
mov
xchg
push
sbb
inc
movl
mov
shlb
jmp
cmc
fxtract
xlat
sub
xchg
incl
sbb
pop
mov
adc
insl
rorb
inc
jmp
mov
cmp
sub
xchg
dec
pop
in
and
aad
loopne
daa
mov
dec
sbb
mov
sahf
sub
push
inc
mov
sub
lcall
ds
jp
cmpsb
mov
pop
mov
out
fisubrs
les
cmp
in
test
cmp
cmp
sti
nop
loop
nop
andb
popf
ljmp
int
loop
in
lock
es
pushf
fistl
push
iret
inc
add
xor
rorb
xchg
sahf
lds
ds
xor
jle
sbbb
adcb
adc
push
push
cmp
addb
lods
adc
sub
mov
call
cmp
fs
jge
xor
cmpl
aaa
popa
js
sub
sbb
sbb
or
dec
and
sbb
mov
inc
dec
mov
mov
ds
outsl
fwait
cmpsl
push
sbb
push
rol
and
ret
xchg
push
test
mov
and
push
mov
xor
stos
sbb
imul
call
lods
jae
add
in
sub
fstps
or
rclb
cmp
inc
and
das
adcb
cmpsb
mov
adc
dec
xor
pop
enter
xchg
inc
out
jne
rcl
pop
rcl
in
or
jne
ret
inc
rcll
push
mov
mov
clc
fsubrl
sbb
jecxz
pop
xchg
cld
mov
mov
outsb
test
pop
out
jecxz
xchg
or
xorb
test
stos
sbbl
xchg
sar
adcb
inc
mul
in
push
xor
shll
or
popa
push
ret
test
test
xchg
int3
insl
mov
jo
inc
push
fwait
shrd
adcl
jne
fisubs
and
xchg
scas
cmc
adc
push
inc
cmp
dec
fincstp
sub
lcall
popl
lret
pop
lret
leave
mov
and
sub
adc
out
rcrl
mov
sub
sub
mov
jns
ds
popf
xchg
lock
jbe
pextrw
enter
movsb
lcall
jge
pop
cmp
sbb
fnstsw
adc
xor
push
subl
and
jg
cli
and
popa
jno
push
lahf
pop
sbb
pop
dec
enter
rcrb
test
in
rorl
dec
nop
and
fs
ds
dec
sahf
mov
loopne
sahf
lock
pop
es
fldenv
jg
lods
lods
xchg
ret
adc
jmp
das
xor
movntq
out
mov
mov
jge
rorl
out
scas
xchg
insw
adc
xchg
and
fisubl
sbb
aaa
add
adc
ds
mov
lcall
ljmp
mov
aad
dec
mov
sub
data16
and
icebp
fs
xor
call
cmc
int3
test
add
jg
idivl
dec
ficomps
mov
mov
mov
js
dec
push
mov
cmp
cli
add
idivb
fildl
push
data16
mov
mov
mov
mov
sub
mov
pop
test
cmp
cld
adc
jae
and
xchg
or
sbb
shlb
or
loope
sahf
rcl
popa
sub
inc
mov
push
adc
test
cmp
aad
mov
lret
xor
or
jo
mov
mov
sarl
dec
sbb
cwtl
ds
xchg
jns
add
adc
dec
pop
icebp
enter
loopne
subb
xor
adc
pop
movsb
jl
dec
stc
icebp
inc
jle
inc
sub
mov
ficomps
outsl
mov
adc
lds
imul
cli
cmc
ds
and
xchg
pop
mov
and
adc
call
push
mov
sub
mov
lcall
xchg
pusha
lcall
inc
pop
and
ds
std
push
add
push
out
add
clc
sti
adc
test
xorb
adc
arpl
rol
ret
pop
push
in
jg
cmp
jle
fsubs
les
mov
loopne
jbe
cld
fwait
inc
jns
lds
xor
scas
data16
test
aam
std
hlt
xchg
insl
into
scas
lcall
cmpb
pop
lods
fs
pop
push
aaa
mov
cli
aam
adc
iret
pop
out
ljmp
lods
sbb
sbb
ss
nop
out
xor
inc
mov
cmc
test
jb
mov
test
xor
insb
fnsave
imul
das
inc
addl
xlat
fnstsw
or
repz
cltd
into
into
cltd
or
jp
mov
fwait
mov
xchg
pushf
mov
fistps
notb
insl
pushw
arpl
xor
icebp
mov
mov
adc
xor
pop
cmc
movsb
mov
das
cmc
fistl
jno
xor
push
jp
jo
jbe
or
lods
dec
jo
popa
mov
xchg
in
js
jp
mov
mov
lods
and
pop
outsb
test
es
loope
test
imul
ret
ds
dec
cmp
imul
sbb
jno
int
jae
xchg
jnp
cmp
mov
fldl
pop
mov
icebp
daa
pop
xor
mov
add
and
xchg
adc
jecxz
ret
scas
jne
mov
test
push
loop
and
fsts
mov
dec
sub
sbb
lds
fadds
shlb
add
aas
scas
mov
jns
pop
inc
pop
push
pop
pop
inc
lret
dec
push
ja
mov
xor
pop
add
jnp
leave
fdivs
ret
jnp
inc
mov
pop
sub
push
test
xchg
int
push
dec
xchg
and
fsubl
fidivs
movsl
and
jmp
cmp
mov
loopne
and
mov
push
adc
ja
test
xchg
xlat
adc
push
xor
lds
ficoms
pop
or
hlt
xchg
mov
adc
xlat
dec
int3
push
sbb
js
cmc
pop
jo
mov
add
rcl
les
pop
adc
inc
nop
mov
shr
jmp
jnp
jno
xchg
push
jno
inc
lock
out
xchg
or
dec
sbb
cmc
loope,pn
nop
xor
mov
xchg
mov
or
mov
js
xchg
and
xor
sbb
insb
mov
int
fstpt
sub
mov
and
sbb
es
pmullw
sbb
in
jb
mov
faddl
mov
test
call
mov
int3
push
popa
and
cmp
das
decb
aam
loope
data16
mov
mov
sahf
ret
push
jo
lret
loope
xchg
jl
lds
in
dec
and
xchg
and
jo
loop
scas
cmc
test
loope
xor
fdivs
dec
inc
bound
jae
lock
int3
int3
pop
sbb
test
sub
mov
out
xchg
pop
mov
adc
add
out
xor
rorl
insl
fmull
add
lret
mov
lds
popa
push
mov
push
pop
inc
call
stc
jle
xchg
rcll
jecxz
inc
enter
mov
push
icebp
out
xchg
sub
cmp
lods
xor
mov
pop
call
scas
mov
or
and
mov
mov
test
pop
or
stc
mov
pop
push
push
or
sbb
imul
call
pop
mov
int
cwtl
sar
loope
in
inc
dec
cmp
out
mov
add
cwtl
mov
or
cli
pop
jmp
andb
insl
jns
sub
xor
mov
sub
xchg
rcl
dec
divl
stc
data16
dec
std
aas
cmp
cwtl
add
adc
xchg
mov
lcall
mov
jg
out
mov
fwait
jnp
sub
mov
and
in
xchg
cmpsb
lret
cmpsb
sub
adc
orb
inc
test
pop
xor
mov
inc
popa
mov
mov
fs
add
aaa
repz
mov
add
xor
push
add
shrl
lcall
mov
dec
sti
inc
roll
stos
mov
and
imul
in
sbb
arpl
jnp
xchg
mov
pop
cmp
test
stc
and
fdivl
dec
dec
push
pop
ficompl
leave
arpl
in
push
and
dec
sub
xchg
mov
jge
xchg
test
and
cmp
outsl
inc
in
cs
out
arpl
outsb
stc
mov
add
mov
pop
loop
dec
jl
or
sti
jno
sub
in
aaa
xchg
into
ficoml
aas
mov
movsl
out
sub
ljmp
imul
faddl
inc
outsl
fs
mov
mov
pop
sub
cli
xchg
xchg
in
jb
shrb
adc
push
jb
mov
or
lcall
lret
push
xchg
into
lcall
mov
xor
xchg
adc
ss
testb
mov
jnp
enter
mov
mov
rorl
leave
repz
sbb
sub
mov
push
loopne
stos
aaa
imul
adc
mov
outsb
xlat
in
repnz
mov
mov
fidivrs
mov
push
mov
jo
mov
lea
lds
pop
mov
cmp
leave
mov
adc
imulb
mov
mov
sbb
inc
ljmp
cmp
popf
mov
cmp
pop
jle
inc
les
outsl
jbe
std
jp
mov
loope
adc
mov
pop
in
or
inc
add
sub
cli
mov
stos
aas
mov
pop
xchg
mov
lods
lcall
out
adc
or
xlat
mov
cmpsb
mov
push
testl
insl
insl
aad
ret
fmul
mov
outsl
or
cld
dec
cli
sbb
fcompl
push
push
into
xor
inc
mov
iret
pusha
and
test
jge
mov
push
scas
das
add
mov
mov
cmpsb
cmc
mov
push
inc
inc
das
paddq
sarl
dec
push
adc
fxch
decl
int
aam
and
cwtl
push
sbb
push
lds
mov
cld
cwtl
stc
mov
or
or
inc
leave
xchg
pop
nop
cmc
js
jns
lcall
loop
cwtd
stos
cld
mov
mov
and
pushf
std
or
cmp
jmp
popa
out
loopne
add
flds
xor
pop
insl
and
xchg
imul
test
bound
outsb
and
in
lret
mov
sahf
mov
shlb
fisttpll
xchg
sub
fisttpll
aas
jno
dec
int3
adc
int3
pop
adc
popf
insb
sbb
add
bound
inc
xor
cs
mov
sbb
push
loop
xor
mov
mov
in
es
ret
aam
fmul
xchg
jns
cmp
mov
subb
pop
push
mov
pop
push
mull
ss
sub
inc
into
sti
jne
in
pop
cmp
and
dec
cmc
testl
stos
jno
mov
iret
and
jp
mov
push
or
sbb
and
push
mov
sub
sbb
mov
shrb
cld
or
and
add
adc
jle
sub
mov
jmp
dec
lret
add
pop
add
das
mov
mull
push
adc
addr16
and
and
mov
xchg
pop
jae
mov
dec
lods
leave
adc
add
notl
add
pop
xchg
adc
outsl
insb
clc
sbb
shll
rclb
adc
ffreep
les
outsb
fmul
or
sub
mov
pop
inc
lock
fstpt
lods
mov
imul
adc
ljmp
mov
mov
fisubs
push
leave
pop
xchg
sub
xor
push
pop
cmp
inc
jp
mov
in
mov
push
sbb
nop
push
sahf
sub
movsb
mov
addr16
push
sti
test
push
pop
sub
xchg
loop
or
idivl
fimuls
ret
mov
xor
push
int
repnz
jmp
fcompl
in
sbb
and
bound
addr16
inc
gs
or
add
stos
ficoms
adc
sbb
pop
stos
nop
nop
movsl
xor
jno
cmp
dec
call
in
fistpll
adc
pop
xchg
imul
fisttps
gs
inc
cmp
or
cmc
movsl
stos
inc
add
repz
fiadds
cli
mov
arpl
dec
dec
jne
lret
mov
xchg
mov
sti
inc
test
imul
orb
cwtl
and
jmp
fldln2
and
ret
fs
xor
push
hlt
scas
xlat
mov
into
add
xor
cmpsl
push
dec
mov
push
out
adc
aam
mov
stos
lahf
xchg
xchg
stc
stos
mov
mov
movsb
imul
jmp
jmp
jmp
mov
into
cmp
in
add
ds
cmpsl
xchg
dec
sub
and
sbb
enter
sub
push
imul
fxch
add
jmp
jmp
js
jne
enter
adc
xlat
icebp
xor
rorb
push
lds
out
je
or
push
cli
cld
addr16
incl
cld
mov
mov
pop
imul
stc
insl
mov
movsb
outsb
push
xor
xor
dec
xchg
sbb
scas
mov
or
das
add
push
popf
sbb
popa
jge
in
and
lret
dec
addl
pop
jbe
and
scas
arpl
sbb
adc
clc
push
out
rcr
icebp
pushf
test
mov
ss
push
insl
loope
mov
insl
xchg
mov
push
pop
sub
lea
pop
shl
sub
sub
cli
fwait
popa
dec
mov
out
pusha
icebp
ja
cmpsb
xor
lahf
dec
dec
test
dec
stc
pop
daa
and
jns
in
mov
push
testb
repz
add
scas
lods
sub
mov
ljmp
xchg
cmp
mov
icebp
push
xor
cmp
jno
cmp
shll
or
lcall
cmp
stos
and
dec
jecxz
cld
xor
or
mov
sbb
inc
aam
imul
pop
cwtl
popa
push
arpl
lock
cwtd
negb
stos
fadd
cmp
arpl
jmp
adc
divl
in
aaa
popf
push
push
insb
scas
aas
stos
jne
in
loop
test
cmp
mov
not
sahf
jb
js
xchg
es
pop
xchg
dec
push
stos
xor
ret
cmp
lcall
push
outsl
jo
pushf
or
sbb
insl
cmp
xchg
aas
loop
test
mov
jmp
xchg
mov
push
xchg
dec
pop
arpl
mov
jmp
lret
scas
outsb
sbb
movsb
dec
negl
xor
cmc
bound
xchg
in
pop
push
lea
mov
inc
adc
pop
and
fmuls
xchg
fistpll
inc
rolb
daa
fistpll
movsb
loope
aaa
loope
jmp
jne
jle
sub
inc
push
pop
cmp
movsb
iret
pop
lods
in
str
sbb
fcmovu
xchg
xchg
loope
cmp
jno
aam
push
add
push
addr16
jmp
jae
int3
lds
daa
pop
mov
lds
xchg
std
dec
and
or
int3
mov
addl
xchg
inc
int3
inc
mov
sub
jp
repnz
sub
xor
mov
call
inc
int
les
xchg
push
add
cwtl
out
js
out
insb
call
pop
push
dec
rcl
or
jl
outsb
pop
jb
test
push
jbe
lods
sub
push
frstor
int3
sbb
mov
mov
xchg
xchg
test
pop
lock
jmp
push
rcrl
or
fdivl
dec
mov
ret
test
loopnew
jo
and
push
jmp
jg
lods
push
popf
sbb
enter
int3
in
call
xor
sbb
arpl
jl
push
movsb
sub
inc
push
shl
outsl
mov
push
mov
test
add
or
push
arpl
sub
sbb
cltd
daa
sbbl
lock
push
rcll
sbb
mov
fldcw
dec
or
fidivl
ss
dec
lret
adcb
mov
push
aaa
jl
jge
scas
push
sahf
mov
fsubrl
pop
mov
xchg
inc
dec
mov
lcall
xor
mov
lea
jo
dec
add
jo
xor
add
and
jmp
jne
sbb
stos
jo
repz
inc
jae
mov
fldenv
push
lds
push
rcrb
xchg
cmp
cmp
sub
jge
dec
xchg
xchg
mov
and
addr16
pop
cmp
cmp
add
xchg
sbb
cmp
jns
adc
pop
adc
loop
stc
push
loop
fnstcw
shrb
cli
rolb
and
lods
or
sbb
adc
loope
enter
jp
add
ret
in
pop
ret
pushf
stos
cwtl
lock
sbb
mov
jg
push
rcr
test
out
or
test
daa
push
inc
xor
fwait
out
jg
mov
dec
add
ss
pushl
add
daa
scas
cmp
addb
jbe
or
hlt
sbb
dec
int
mov
jmp
sub
pusha
cmp
jecxz
aad
pop
push
movb
jl,pt
into
inc
add
ljmp
dec
rcl
jle
jle
mov
xor
out
scas
push
jnp
inc
mov
xchg
push
jecxz
cli
shrl
bound
test
or
xchg
mov
imul
mov
iret
adc
add
dec
mov
xchg
pop
cmc
lahf
push
mov
adc
fs
ss
ret
inc
inc
fldl
adc
and
test
or
add
pop
mov
les
mov
roll
xor
clc
jb
xorb
mov
and
int3
cmp
cmpsb
cli
stc
out
push
add
or
mov
mov
mov
jbe
lods
adc
push
or
adc
xchg
sbb
icebp
adc
js
sbb
sarb
lahf
into
pop
dec
scas
adcl
lcall
test
pop
and
je
pop
pop
lds
mov
xor
inc
lds
cmp
or
or
mov
fcomps
mov
mov
jns
test
aad
mov
pop
cmp
xchg
addr16
xchg
icebp
arpl
pop
lret
rep
fldenv
subl
daa
cmp
je
xchg
xor
ljmp
dec
outsl
clc
lret
mov
test
add
shr
int3
dec
es
loope
pop
adc
dec
in
sbb
insb
mov
jl
divl
lret
jne
pop
and
daa
rorb
in
or
fstps
mov
mov
imul
sub
jle
and
xchg
insb
sbb
int3
jae
xor
cmp
mul
adc
call
jne
in
sbb
pop
mov
mov
cmp
lock
sti
mov
jbe
sbb
mov
dec
test
jae
xor
push
fs
loop
lds
sahf
dec
xchg
sti
pop
inc
insl
inc
iret
js
aaa
cmpsl
test
lret
shl
cwtl
mov
push
scas
inc
leave
push
xor
add
pop
mov
cmp
adc
pop
mov
lea
notb
loope
int
sbb
pop
int
into
pop
pop
fs
leave
mov
xor
repz
out
fstps
fsubl
inc
std
jle
ret
pop
ds
adc
icebp
popa
jns
stc
push
xadd
pop
sahf
into
push
movsl
sti
dec
stc
pop
leave
inc
popf
popf
pop
out
pop
xchg
scas
jmp
and
dec
pop
ret
adc
adc
into
add
push
mov
sti
gs
push
fsubrs
shl
jo
fwait
out
enter
fstp
movsl
scas
jp
lods
enter
popa
cmp
rorl
dec
testl
jmp
mov
cmp
movsb
out
and
push
jb
jp
lcall
jle
pop
inc
push
popl
mov
and
push
cld
ds
outsl
sub
push
xchg
test
and
pop
mov
and
ret
nop
xor
in
add
add
pop
stos
cmp
sbb
mov
ja
pop
movsl
out
ss
pop
push
fsubr
sbb
mov
sbb
push
lods
stos
sub
cwtl
cmc
and
testl
mov
dec
cmp
lods
jno
out
movsl
lret
or
sahf
xchg
mov
testb
test
mov
pusha
and
jmp
sbb
dec
mov
push
fbstp
fsubs
mov
xchg
dec
xchg
mov
out
mov
mov
sbb
lods
xlat
es
pushf
dec
sbbl
es
xor
jb
pop
fsts
sub
mov
sti
imul
popa
ret
jno
hlt
js
and
data16
dec
mov
dec
mov
lahf
jecxz
adc
cmp
mov
leave
data16
pop
and
xchg
sti
jle
les
add
lret
sbb
pop
xchg
jl
repz
les
inc
jno
arpl
dec
flds
popf
jne
outsl
fidivs
push
pop
test
jno
push
inc
rol
xchg
pop
fcompl
cwtl
mov
scas
push
mov
ret
stos
cltd
clc
push
mov
ret
rcrl
sub
daa
and
mov
rolb
xor
data16
les
testb
in
inc
push
sbb
adc
mov
movsb
ret
lret
loope
xor
adc
outsb
mov
adc
rolb
sbb
test
fildl
rcr
data16
enter
flds
mov
fdivs
sarl
sub
testl
test
sub
inc
roll
std
bound
xor
std
push
rorl
mov
ja
in
repz
dec
ss
lock
or
jmp
mov
movsb
and
in
adc
pop
std
inc
pusha
sub
lea
pop
mov
cmp
nop
imul
add
addr16
jnp
cmp
and
ret
xchg
add
lods
lods
inc
adc
mov
fwait
cwtl
divl
pushf
lock
test
jo
in
dec
cmp
add
repnz
xor
inc
leave
add
clc
pop
xchg
ficoml
mov
loop
jge
out
std
cmp
ja
sub
out
popf
jb
ret
dec
jle
adc
es
aas
dec
mov
mov
int
lds
ljmp
push
jne
xlat
das
push
xor
mov
jns
xchg
lods
xchg
mov
sub
test
inc
pushf
pop
sbb
cmp
dec
push
mov
cmp
addr16
jbe
pop
test
mov
mov
xor
ror
int
xor
repz
push
jle
mov
mov
mov
mov
lahf
fisubl
sbb
fisubrs
sub
stos
les
mov
cmp
add
pop
mov
lret
dec
pop
ds
dec
bound
mov
push
and
fisubl
fimuls
mov
jg
scas
mov
les
addr16
pop
xor
fldl2e
iret
popf
mov
and
ficoms
add
dec
cmp
aaa
add
pop
lods
sub
gs
pushl
in
call
insl
xchg
insb
sbb
adc
mov
sbb
mov
scas
nop
test
sbb
push
sbb
pop
das
jle
pop
ss
pop
cmc
pop
iret
xor
inc
xor
lods
out
mov
pop
push
xor
inc
sub
add
jne
aam
test
cmp
mov
rcll
or
sahf
adcl
rclb
insl
push
jmp
std
inc
aam
ret
sbb
test
sarl
test
dec
cmp
iret
pop
xchg
or
cli
pop
in
mov
data16
jmp
push
insl
lret
insl
lods
xlat
xchg
and
sub
xor
test
sbb
or
adc
out
stos
in
es
xor
jbe
popf
cmpsl
jl
dec
jo
pop
imul
daa
notb
inc
xor
pop
js
pop
jno
dec
movsl
cmp
cs
stc
or
fldcw
les
out
xor
or
sahf
sub
jno
insl
mov
push
add
ja
mov
jb
cmp
inc
ret
dec
sub
test
movsb
repnz
insb
out
bound
les
xchg
jmp
cmp
or
pop
mov
lret
sbb
sub
rorl
shll
sbb
loope
add
rolb
jmp
ror
mov
pop
sti
add
pop
mov
sbb
aad
push
int
scas
pop
iret
pop
xor
push
fstps
aaa
aam
iret
test
pop
test
stos
jg
jno
and
stc
adc
add
sub
lds
call
mov
push
out
or
jbe
loope
jl,pn
push
jmp
mov
hlt
fisttpll
sub
insl
lcall
adc
mov
and
clc
push
daa
or
add
loope
jmp
clc
xor
mov
add
push
xor
xchg
cmp
pop
push
call
loop
nop
pop
cmp
fistps
xchg
mov
jecxz
cs
incb
ds
pop
lods
adc
push
push
and
dec
cli
mov
les
push
adc
add
sub
mov
lret
repnz
lds
adcl
enter
push
fdivp
mov
in
div
mov
aaa
adc
clc
aad
sbb
daa
nop
cmp
in
push
or
dec
das
or
xchg
mov
xchg
or
sub
ja
jecxz
dec
xchg
ret
cmp
jbe
in
sbb
scas
inc
mov
and
insb
mov
mov
stos
dec
sub
pop
outsb
aaa
xchg
imul
pop
movsb
and
push
and
mov
iret
or
jmp
adc
sahf
pop
mov
scas
xchg
jle
pop
pop
mov
push
movaps
popf
push
sti
xchg
lods
lret
pop
stos
inc
mov
js
ficompl
lret
enter
jno
imul
cmp
stos
fcomps
dec
fdivrl
je
or
sbb
jae
jns
or
sbb
inc
in
pop
sub
or
jge
rcll
mov
loop
push
mov
shlb
filds
out
dec
fbld
and
jl
inc
sbb
es
clc
xor
and
stc
adc
inc
outsl
lds
jmp
mov
mov
repz
hlt
cmpsb
inc
sbb
bound
mov
push
xchg
into
shl
mov
repz
es
add
jns
jecxz
adc
test
pushf
mov
inc
jno
xchg
pop
sbb
sbb
mov
cmpsl
cmp
mov
mov
jbe
jecxz
jmp
sub
xor
fcmovnu
sub
lcall
adc
mov
fucomi
inc
shrb
xor
add
jne
lock
ljmp
jg
adcb
imul
in
cld
pop
jl
add
xchg
loope
lret
push
mov
sub
gs
inc
xchg
fwait
sub
ljmp
push
std
iret
mov
stos
lods
loopne
cltd
and
aas
push
movsl
rorl
mov
in
addr16
cmp
rcrb
call
mov
std
ljmp
imul
call
out
clc
jmp
fs
lea
push
sub
popa
sub
enter
iret
cmc
inc
and
gs
mov
repz
mov
inc
adc
add
scas
mov
sub
jns
pop
dec
lds
mov
mov
or
lods
fstl
xchg
ljmp
rol
int
lret
xchg
xor
or
sbb
jb
dec
mov
push
jg
clc
in
jmp
lods
jo
out
mov
mov
loope
xlat
in
cmp
or
xor
sbb
pop
mov
or
mov
enter
jnp
or
dec
cmp
repz
fbstp
adc
inc
push
push
jg
xchg
pop
inc
imul
scas
add
xchg
mov
movsl
sbb
lds
lds
fisubl
mov
outsl
jae
cmp
bound
xor
sahf
xchg
ret
fcompl
bound
popf
xor
shrl
pop
inc
iret
inc
push
mov
cmpsl
mov
lods
popfw
loopne
aam
addl
dec
jo
sbbb
pop
rclb
mov
adc
outsb
sbb
dec
mov
shrl
lret
mov
movsl
sahf
inc
dec
inc
dec
jnp
test
ror
loope
adc
inc
pop
mov
dec
mov
add
stc
in
imul
fiaddl
lods
data16
stos
push
mov
outsl
jbe
rorl
pop
mov
std
xor
add
add
fnsave
lret
orb
rcll
xchg
test
or
lret
notl
lock
jbe
hlt
ds
inc
jge
jbe
aas
pop
pop
xchg
push
mov
jb
fs
sar
xchg
loop
test
mov
fmull
or
addb
lds
addr16
inc
sub
addr16
push
mov
in
out
mov
or
adcl
test
call
aas
out
lods
in
xchg
add
add
ret
das
sbb
paddw
je
jnp
mov
or
inc
leave
adc
fldenv
ret
sbb
or
scas
push
pop
push
pushf
out
ds
pop
and
push
cs
loope
jno
xlat
sbb
insb
std
jne
aaa
fwait
mov
rorb
pop
jl
push
out
xchg
jle
push
xchg
jle
loopne
bound
inc
sbb
mov
aad
inc
ljmp
cld
push
jmp
rorb
sahf
pop
loopne
fistps
inc
imul
stos
dec
pusha
daa
pop
xchg
pop
sub
lea
jne
jl
or
and
sti
dec
in
add
add
mov
out
addr16
mov
add
test
mov
add
idivl
add
outsl
add
mov
je
jnp
pop
lret
xchg
jb
mov
sbb
push
lea
push
sub
push
push
movsl
dec
mov
cs
push
mov
idivl
dec
xchg
xorb
outsb
add
and
fwait
inc
es
xor
mov
popf
adc
daa
popf
sub
rcrl
pop
pop
xchg
dec
cmpsb
xlat
fiaddl
lcall
mov
scas
dec
movsl
add
add
aam
in
pop
jo
enter
aam
ss
lds
movl
cs
push
dec
add
lret
xor
dec
jmp
pusha
movsl
inc
push
jmp
fwait
push
addr16
cmp
popa
sbb
cmpsl
dec
stos
std
sahf
lds
js
das
adc
inc
inc
mov
mov
sbb
int
inc
pop
aam
rcll
cs
jp
add
test
fiaddl
sbb
and
mov
xchg
pop
jne
cmpsl
xchg
sbb
ljmp
movsl
mov
mov
ret
mov
jne
pop
loopne
outsl
and
dec
sub
cmp
mov
dec
outsl
aad
xchg
add
jmp
dec
and
xor
ljmp
icebp
dec
rolb
dec
aaa
inc
sub
packsswb
gs
cltd
rcll
jo
sbb
xchg
imul
and
mov
sub
ljmp
mov
out
in
shl
int
daa
mov
cs
add
cmp
stos
repz
ja
rorl
int
shrb
xchg
jecxz
ficoms
xor
aaa
mov
mov
mov
dec
sub
cmp
push
movsl
stc
int
ds
fst
sti
imul
lods
dec
lcall
cli
push
and
int
sahf
lcall
add
dec
lds
xchg
push
aas
sub
in
adc
mov
cltd
add
xchg
aaa
fs
jo
lock
loope
add
sbb
pop
sub
adc
mov
cs
fnstsw
xor
mov
loop
jmp
scas
aaa
add
push
inc
js
fidivrs
push
sti
ret
icebp
pop
das
sbb
push
cmpsb
pop
mov
dec
or
bnd
in
jb
addr16
in
xor
pop
pop
sbb
lods
sbb
xlat
pop
pop
jb
shlb
loopne
push
lods
add
iret
popf
cld
lcall
cli
fcompp
pop
sub
cmpsl
adc
shl
jo
adc
clc
pop
fst
inc
jle
push
mov
mov
pop
mov
jae
xlat
movsl
pop
lcall
ret
test
in
stos
cld
fwait
mov
lret
icebp
bound
jmp
movsl
and
mov
push
xorl
jecxz
int
xor
push
lret
lods
bound
xchg
lret
inc
inc
call
ljmp
sub
insb
xchg
cmp
jae
seto
mov
outsl
enter
inc
mov
scas
sub
outsb
test
pop
ficoml
ds
hlt
adc
and
push
movsb
and
inc
loope
cmp
rclb
ja
mov
leave
mull
test
outsl
add
adc
cmp
dec
scas
out
dec
scas
push
xor
mov
clc
rolb
xchg
sbb
inc
je
xorl
xchg
mov
add
dec
aas
pop
push
add
incb
sahf
jno
xchg
or
addr16
jge
adc
iret
mov
mov
adc
jecxz
call
inc
bnd
bound
and
or
leave
test
mov
js
stc
mov
mov
cmp
xchg
in
and
mov
mov
insb
scas
pop
cmp
xchg
fidivrs
es
scas
mov
in
push
jne
mov
pop
or
pop
jne
inc
xchg
push
mov
loopne
push
xlat
inc
adc
aad
aad
sbb
or
mov
mov
mov
fs
leave
cmpsb
shl
jo
jmp
xor
sub
jbe
xor
fwait
sub
test
sbb
mov
sub
jbe
ljmp
jno
pop
in
dec
in
cmp
push
dec
lahf
inc
pop
popf
mov
and
adc
push
sbb
inc
imul
push
popf
mov
inc
mov
bts
movb
mov
incl
jb
pop
xchg
adcl
es
cmp
popa
pop
xchg
jecxz
jae
lret
nop
and
jnp
xor
hlt
or
in
scas
jle
outsl
stos
aaa
or
loopne
push
cmp
aad
ss
dec
mov
adc
xor
inc
push
mov
push
mov
rcrb
jmp
repz
out
ds
sub
mov
out
in
out
outsl
sub
add
cmp
arpl
and
pop
aam
in
cmp
rcll
jae
cmp
jne
into
mov
icebp
jmp
or
cltd
push
fldt
add
dec
mov
lret
xor
mov
dec
ret
jo
leave
in
add
xchg
mov
mov
xchg
mov
enter
pop
orb
rcll
jns
or
xor
shlb
js
inc
outsl
push
mov
push
repnz
inc
mov
and
inc
and
sbb
jbe
mull
mov
mov
push
ja
fcmove
adc
cs
cmc
shll
out
jae
fcoml
jmp
inc
int
insb
sub
xchg
push
dec
fstpl
fcoms
pop
sub
ljmp
inc
aas
adc
mov
pop
ljmp
enter
push
repnz
shrb
inc
cmp
and
addr16
test
mov
rcrl
jae
adc
rcll
popf
jno
pushf
cltd
sbb
call
jno
insb
adc
enter
aam
xchg
decl
dec
fwait
xchg
jle
outsl
mov
add
les
and
add
mov
mov
mov
jge
pop
xor
and
insl
or
mov
pop
xlat
out
test
call
pop
pop
pop
mov
xchg
stos
fistps
les
add
xor
xor
aam
sarb
sub
dec
pusha
jle
push
in
imulb
mov
ds
cli
jmp
arpl
fucomp
pop
cli
or
adc
xchg
test
xchg
loopne
push
xor
in
int3
adc
rcll
mov
and
fwait
cmp
push
and
data16
jbe
xchg
mov
adc
mov
sub
unpcklps
xor
cld
jle
vhsubpd
sub
push
hlt
fidivl
into
cmp
jl
rcr
aas
mov
mov
sub
dec
xor
imul
cmp
enter
push
fs
in
xchg
mov
jge
fsub
xor
mov
inc
lea
push
push
lods
sti
lea
pop
mov
cmp
mov
jb
test
scas
ret
dec
lcall
xor
decl
and
stc
sub
mov
out
fbld
and
mov
mov
add
add
sahf
mov
xchg
and
lcall
imul
outsb
push
add
ficoms
mov
or
fadds
pop
lods
inc
pop
test
rcrl
ds
sbb
iret
xchg
sbb
in
jnp
adc
daa
or
mov
imul
aaa
cmpsl
jae
xchg
in
loope
mov
mov
mov
movl
add
mov
mov
cld
bound
arpl
dec
hlt
adcb
jg
inc
test
xchg
stc
cwtl
push
xor
and
and
mov
sub
jmp
gs
dec
mov
push
insl
pop
and
arpl
xlat
pop
paddq
xchg
adcl
out
pushf
push
mov
sbb
xlat
les
std
or
bound
sahf
outsl
xchg
gs
mov
pop
dec
mov
out
push
mov
sbb
insl
ficoms
jle
adc
xor
test
jl
mov
cmpsl
mov
cmp
jmp
out
jo
test
and
rcl
mov
xor
outsb
stos
push
mov
mov
lock
test
mov
inc
pop
lods
push
lret
repz
in
or
pop
and
inc
icebp
cmp
int3
int3
rolb
add
fistpll
xchg
filds
sbb
movsb
lcall
cmp
aas
enterw
mov
pop
outsb
pushl
xor
shr
push
call
int3
int3
push
xor
jl
xchg
fcmovbe
pop
sbb
push
push
xchg
push
adc
xor
cmpsb
std
sub
dec
cltd
cmp
lods
xlat
in
dec
cmp
and
loope
mov
out
jne
outsb
orb
jbe
or
in
movl
sbb
pop
inc
enter
jl
jns
sub
es
adc
mov
roll
ljmp
xlat
lret
xorl
cmpsl
test
push
push
int3
sbb
lahf
pop
adc
mov
xchg
pop
in
cmpsb
jle
inc
mov
popa
stos
mov
inc
fwait
cs
mov
fldl
leave
fsubp
lock
aaa
pop
mov
insl
jnp
mov
cwtl
es
fdivp
mov
adc
pop
cmp
insb
adc
fimuls
pop
fcomps
fbld
mov
push
lcall
stc
ja
arpl
mov
sub
mov
mov
mov
mov
insb
leave
and
and
jbe
pusha
pop
mov
pop
mov
repnz
pop
dec
jb
cmp
fwait
sbb
mov
lods
cmp
mov
sti
lret
test
xchg
stos
push
jno
mov
xchg
xor
dec
cld
push
stc
push
adc
push
repz
push
jge
mov
pop
cltd
cmp
mov
stos
xor
sbb
sub
fidivrl
mov
cmpsb
clc
cmp
sub
in
mov
xchg
decb
fwait
or
mov
cmp
adc
or
mov
and
or
sub
pop
inc
test
hlt
dec
jns
mov
out
outsl
data16
out
push
pop
pop
adc
sbbl
push
add
mov
and
xor
cmpsb
arpl
mov
aas
jle
movsl
cmp
nop
das
repz
pop
popa
insb
fs
or
inc
out
cmpsb
dec
dec
rcl
lahf
call
int3
add
lods
lds
loopne
fisubrl
xor
mov
cmp
xor
mov
insb
push
xchg
inc
imul
out
cmp
repnz
int
mov
jge
fbld
fisubl
xorb
sbb
int
pop
sbb
xor
out
imul
cs
es
dec
rorl
cltd
dec
jge
sub
inc
daa
and
mov
push
mov
call
pop
outsl
fsubr
dec
xlat
sub
int3
cmp
sbbl
in
xchg
mov
mov
ljmp
mov
or
test
mov
push
cmpsl
xor
fs
outsb
arpl
mov
xchg
popa
jecxz
dec
push
cmp
push
outsb
jecxz
add
jb
sahf
sub
sub
sbb
cmp
sub
data16
push
dec
addr16
fimull
xchg
dec
in
inc
push
aaa
scas
lods
out
sub
push
dec
mov
dec
inc
dec
inc
mov
cmp
sahf
cmp
mov
xchg
out
repz
adc
pop
data16
cwtl
cs
repz
dec
mov
xchg
cmpsb
add
sbb
aaa
xchg
sub
jo
mov
push
jns
push
push
add
push
and
jmp
xor
es
add
xor
fcom
out
test
pop
mov
out
insb
loop
imul
ja
xchg
mov
sahf
popa
rclb
mov
cmpsl
stos
addr16
insb
hlt
loop
scas
aaa
cli
xor
mov
pop
jae
aad
push
inc
aaa
pop
sbb
jp
mov
sub
inc
std
xor
rcrl
cld
ja
jae
adc
push
dec
mov
dec
movsb
push
jg
mov
sub
shlb
xchg
mov
push
cmp
mov
stc
scas
xlat
sbb
gs
inc
rcrl
mov
cmp
lcall
dec
sub
pop
push
pop
sbb
mov
mov
ja
pop
cmpsl
stc
daa
ja
push
sbb
rcl
xor
jnp
sub
jo
jnp
in
xchg
mov
stc
xlat
mov
cmp
mov
adcl
jmp
movsb
or
inc
mov
icebp
cmpsb
ret
inc
sbb
xor
stc
outsl
adc
push
jae
lock
popa
adc
shlb
mov
sbb
cmp
add
or
add
mov
mov
jle
or
or
and
lcall
dec
jg
pushf
dec
sarl
push
bnd
pop
pop
sbb
idiv
lcall
fs
in
mov
push
or
rcrl
jnp
inc
sbb
scas
fcmovnb
pop
inc
cvtps2pi
jae
sbb
fsubrs
bound
or
mov
add
mov
mov
dec
sbb
mov
jne
inc
xorl
cld
xchg
ret
lods
in
jmp
mov
and
lret
sub
xor
fsubrl
push
xchg
lods
add
mov
cmp
lret
cmpsl
jo
loop
or
cmp
stos
daa
scas
bound
add
dec
or
or
or
mov
jle
xor
cwtl
xchg
mov
repz
ljmp
scas
mov
outsb
xchg
mov
push
xor
daa
sbb
inc
mov
enter
xchg
and
mov
ror
aad
add
lahf
js
inc
push
or
dec
mov
insl
pop
cltd
and
into
dec
fmulp
addr16
mov
dec
cmc
pop
fistpl
xchg
pop
das
pop
xchg
xor
jns
push
aas
xchg
test
add
repnz
sub
xchg
inc
cmp
mov
cmpsb
je
out
cltd
or
sarb
scas
mov
clc
jno
int
inc
les
cmpsb
std
ds
testl
xor
scas
xchg
jbe
std
fs
sub
jp
xchg
mov
fmull
push
dec
xchg
jg
mov
outsl
cmp
cmp
insl
and
fwait
xor
cwtl
jmp
or
aam
das
inc
push
sbb
movsb
leave
pop
addb
into
jle
xor
ja
fyl2x
mov
xchg
sub
into
mov
test
inc
mov
icebp
xor
xchg
pusha
divb
jb
xchg
ja
and
xchg
add
movl
sbb
fcomip
lcall
inc
adc
push
push
sub
adc
adc
jne
and
inc
cld
inc
cltd
push
mov
mov
repnz
and
rcr
scas
mov
jp
mov
mov
mull
and
sub
shll
add
xor
fildl
xor
mov
rolb
jno
add
repz
aad
or
test
or
push
pushf
ja
cwtl
and
ja
mov
addb
sarb
cwtl
jne
inc
and
lods
aam
inc
and
mov
mov
in
sbb
rorl
xchg
dec
push
sbb
fsubl
lock
mov
push
mov
cmp
stos
lds
out
inc
xor
lahf
dec
addr16
popa
rorl
pushf
inc
pop
lcall
decl
inc
lea
stos
test
test
add
push
sub
leave
call
mov
pop
xor
fsubl
push
and
test
clc
scas
jg
jb
xchg
sbb
xor
xchg
push
out
push
ret
sbb
adc
sbb
xchg
lods
and
xchg
xchg
mov
repnz
cmp
aad
fisubrl
adc
ret
and
sub
jle
lods
inc
in
cltd
sbb
mov
stos
add
mov
sarb
inc
pop
aad
in
aad
and
scas
jae
cmpsl
fmuls
into
ret
js
jb
mov
mov
cmp
movl
xor
pop
iret
pop
loop
push
filds
lods
jo
test
das
adc
fwait
pop
adc
lods
aaa
loope
jne
xchg
xchg
frstor
jb
sbb
mov
pop
jmp
ja
aas
std
or
adc
scas
insl
icebp
xchg
or
rcrl
test
xchg
adc
jl
cs
fisubl
imul
pop
xchg
adc
ret
pop
das
push
adc
add
stc
les
and
jge
ret
int
lea
shl
dec
mov
dec
dec
add
les
add
test
hlt
test
push
xchg
sahf
out
push
inc
sbb
inc
xchg
sbb
std
mov
je
nop
xchg
sahf
adc
mov
mov
fmull
lock
add
ljmp
add
movsl
jnp
fistl
mov
out
jb
divl
popa
test
divb
mov
cmp
xchg
sub
sub
sub
cmp
lahf
mov
cmpsb
add
clc
xor
ja
push
cmp
popa
fdivp
lret
add
jbe
push
or
test
cmpsb
les
adc
cmp
push
or
add
cwtl
fldenv
lcall
push
fs
adcb
jg
imul
ror
fiaddl
outsb
mov
pop
mov
mov
ret
and
movsb
dec
mov
and
movsb
xchg
scas
pop
push
vmwrite
and
xchg
mov
dec
in
adc
pop
fsubrs
and
cmp
push
lcall
emms
adc
ret
xor
adc
ret
jno
rcrb
adc
fmulp
les
sbb
mov
mov
rcll
test
mov
lcall
push
movsl
push
cmp
push
aaa
adc
mov
mov
fstpt
outsl
test
and
mov
movsb
jo
sub
rol
cmpsb
add
jp
std
and
mov
addr16
out
fwait
mov
movsb
inc
adc
xchg
pop
shrb
cmp
xchg
sbb
xchg
sub
sbb
sbb
outsl
pop
xchg
xchg
in
mov
mov
fcomps
and
bnd
lcall
fs
pop
xchg
fdivl
fcompl
inc
mov
pop
loop
sub
cmc
lods
gs
pop
push
movsb
mov
scas
mov
stc
push
xor
or
mov
cmp
jmp
out
dec
test
stos
iret
mov
popf
adc
cmp
gs
stc
imul
jecxz
xchg
sub
aaa
addr16
pusha
neg
int3
notl
cmp
pop
inc
out
aaa
mov
pop
out
cmp
pop
xor
mov
xchg
ficomps
pop
and
pop
xchg
aad
or
leave
inc
mov
mov
cmp
int3
sbb
adc
and
dec
mov
sub
mov
and
out
mov
and
adc
jp
ret
inc
mov
or
scas
adc
mov
mov
movsl
mov
stos
pushl
in
cmp
fists
leave
pop
int
in
sub
jbe
adc
xchg
cld
jp
notl
push
dec
rorl
and
push
jae
arpl
lahf
pop
dec
das
cmp
in
arpl
popf
mov
mov
into
sar
dec
data16
jo
test
icebp
icebp
add
dec
sti
mov
popf
lcall
inc
adc
sahf
sbb
add
lahf
xor
sti
cltd
adc
ficomps
push
jp
popf
das
pop
sar
push
clc
je
scas
sbb
fs
cmp
push
stc
sbb
xchg
inc
push
sbb
imulb
adc
push
pop
pop
xchg
push
repz
mov
add
jecxz
push
flds
add
xor
mov
stos
mov
std
jmp
pusha
pcmpeqw
pop
frstor
push
gs
add
inc
pop
or
int
scas
in
mov
movsl
js
inc
js
xor
insb
xor
xor
fcoms
xchg
pushf
aam
fs
loopne
in
sarl
mov
dec
pop
repnz
andb
xor
pushf
outsl
fdivl
xor
movsb
fwait
add
repnz
adc
fs
dec
cmp
pop
pop
addr16
cwtl
inc
mov
sbb
stos
iret
dec
test
into
xor
cmp
insb
push
or
jae
xchg
out
andl
int3
shl
xchg
into
mov
push
mov
push
push
xchg
in
mov
push
jmp
mov
arpl
xor
je
inc
icebp
mov
dec
mov
xchg
iret
push
testl
add
out
dec
out
push
xchg
cmp
push
cmpsb
addb
fdiv
mov
cltd
arpl
dec
add
daa
fs
adc
push
jno
test
ja
fistps
ret
cmp
dec
fistpll
nop
repnz
push
jne
dec
fld
nop
popf
lock
aam
mov
out
test
and
adc
dec
pop
dec
sti
jg
mov
xchg
mov
jne
jb
push
pushf
push
sbb
gs
inc
xchg
sbb
fsts
fwait
bound
sti
jb
hlt
std
jmp
jb
cmp
mov
sbb
xchg
nop
pop
in
push
out
out
inc
rclb
out
jecxz
xchg
jmp
ja
push
pop
xor
outsb
pop
dec
sbb
ret
jge
hlt
inc
dec
and
shll
adc
enter
and
jmp
call
pop
dec
pop
add
mov
mov
fcomps
repz
xor
xchg
sub
push
in
test
xor
mov
dec
cmp
cmpsl
and
mov
ret
sbb
rcrl
rorb
mov
pop
cmp
jge
adc
ret
cmpsl
sti
pop
faddp
inc
pop
shlb
loopne
dec
inc
js
push
lcall
or
pop
je
sbb
decb
das
lods
pop
test
push
lea
ret
insb
jns
into
or
sub
and
jns
data16
and
cmpb
mov
sub
in
aas
pop
pop
fs
and
les
shl
in
incb
fwait
pop
outsl
out
adc
stc
push
dec
sti
pushf
loope
add
je
jmp
in
shlb
outsl
clc
into
sbb
popa
mov
push
addb
push
mov
cmc
xchg
xor
movsb
int3
mov
inc
mov
jg
test
inc
pop
adc
xlat
popa
add
push
fisttpl
fstpl
push
js
int
adc
add
repnz
scas
mov
adc
dec
sahf
xor
mov
cmp
mov
sub
aam
jo
into
mov
cmp
out
sub
sub
lret
jbe
test
lret
inc
lods
in
je
test
outsl
sub
sub
loop
push
jge
inc
outsl
test
clc
out
movl
orl
fcompl
pop
inc
inc
mov
xchg
add
inc
pop
cld
out
mov
in
std
mov
xchg
push
jnp
sbb
scas
xor
lret
int3
dec
fs
fistps
arpl
insb
push
enter
dec
sahf
pop
xchg
add
rcrl
pop
lds
add
sub
insl
adc
inc
js
mov
in
adc
lea
inc
cmpsb
jmp
int3
mov
ret
repz
sbb
imul
xor
pushf
and
addr16
addr16
push
dec
shrl
mov
jge
adc
lcall
mov
inc
out
iret
movsl
pusha
xor
push
mov
data16
push
cmp
lahf
into
loopne
hlt
add
jmp
add
xchg
test
int
xchg
sarb
popf
popf
das
pop
jle
test
sub
mov
cs
movsb
and
clc
fstps
mov
push
inc
mov
jbe
push
push
cmp
fs
repz
aas
add
add
rcr
ss
out
dec
or
push
mov
mov
dec
rcll
pusha
mov
cmp
and
fs
xor
xchg
shl
fwait
pop
xorb
jmp
fnstcw
daa
mov
test
stc
ja
xor
mov
repz
mov
xchg
out
icebp
je
test
ud2
xchg
call
add
push
es
outsl
add
pop
xor
icebp
adc
test
mov
cmp
dec
inc
jne
test
sub
dec
fisubs
pop
sbb
and
lea
ret
mov
add
push
out
mov
mov
cmp
out
lds
popf
jbe
mov
and
mov
add
jae
pusha
dec
pop
xchg
and
cmpl
lods
int
jne
ss
mov
int3
cmp
iret
mov
repnz
jae
aas
inc
mov
pop
adc
lods
call
fcmove
or
jbe
js
mov
inc
les
pop
mov
push
pop
cwtl
ja
stos
mov
mov
and
lcall
outsl
push
loope
mov
mov
pop
pop
or
bound
mov
fwait
cmp
and
pop
pop
pop
dec
hlt
rolb
and
ds
sbb
jg
mov
stos
les
lahf
sahf
movsb
jl
stos
shll
pushf
and
subl
sbb
ss
push
pop
iret
call
and
add
jl
adc
cli
cmp
je
ja
mov
lock
inc
sub
adc
mov
data16
popa
push
mov
or
mov
insl
inc
insl
aam
xor
sbb
cmp
in
je
pusha
in
add
cmp
stc
add
pop
pop
mov
test
adc
sbb
xor
jnp
cmp
pop
ljmp
ss
jmp
ret
mov
orb
xchg
shlb
jp
xchg
inc
xor
pop
stc
push
jb
and
ss
jnp
mov
xchg
inc
loope
cs
jbe
inc
fdiv
outsl
lock
mov
xor
jo
xor
or
dec
mov
in
ret
xchg
xor
and
lret
push
rsqrtps
into
pop
fwait
cmc
scas
in
push
rorb
pusha
sbb
ljmp
cmpsb
imul
cmpsl
sbb
inc
jge
fxsave
mov
adc
cmpsl
jecxz
and
hlt
mov
cmpsl
loope
in
rcrb
jo
push
inc
sbb
cmpsb
jmp
in
mov
dec
xor
adc
insb
jmp
cmp
jb
pop
inc
pop
loopne
sbb
push
mov
xlat
mov
jge
leave
jnp
inc
cmpsb
dec
push
not
faddp
sbb
out
sbb
mov
cltd
or
lods
jae
test
addb
push
repnz
pop
icebp
dec
or
psubusw
movsl
sub
push
arpl
stos
push
adc
jmp
cmpsb
pop
cld
pop
in
das
punpckhdq
xchg
sub
repz
jp,pn
test
pop
divb
setbe
xor
loopne
adc
iret
je
and
loope
out
xor
or
test
rcr
aas
je
inc
mov
xchg
in
jg
sbb
pop
sbb
outsb
mov
push
roll
mov
xchg
sub
addr16
inc
sub
jecxz
mov
fwait
shl
pop
adc
in
jo
mov
inc
jns
pop
ss
leave
mov
xor
add
jmp
outsb
int3
out
jnp
mov
ret
cmp
push
out
popf
cmc
cwtl
popa
pop
fbld
sbb
mov
call
mov
push
pop
rcrb
ror
jmp
jo
push
adc
or
bound
mov
shlb
pop
mov
idivb
lea
adc
mov
dec
mov
flds
out
push
or
xor
lret
adc
cmpsl
dec
dec
std
pop
loop
rclb
scas
jnp
lret
es
add
inc
std
sahf
and
xchg
sub
decl
push
or
xchg
fistps
sub
in
lds
lcall
mov
pop
pop
lret
xor
insb
jmp
push
pop
sub
mov
xchg
inc
fisttps
movsb
lock
add
push
test
push
or
cmp
in
sbb
cmp
add
lods
push
ss
cmp
pop
repnz
sub
jge
loope
inc
cmp
je
in
orb
cmpsl
or
decb
in
out
mov
adc
into
lahf
js
into
or
inc
inc
xchg
aam
jbe
push
dec
sahf
add
push
cwtl
mov
mov
jl
sub
std
cld
dec
xchg
pop
fisubs
outsb
gs
sti
jmp
inc
mov
pop
sub
ret
sub
inc
es
hlt
adc
pop
popa
pop
popf
mov
incl
xchg
sbb
adc
and
dec
cmp
sub
js
jecxz
or
leave
xchg
or
and
mov
adc
in
leave
mov
mov
mov
sub
add
popf
mov
fcomi
push
decb
push
adc
add
aam
push
adc
call
mov
shll
adc
dec
adc
xchg
insb
scas
cmc
andb
ret
ss
jbe
ja
loope
shll
adc
dec
js
dec
jg
dec
inc
adc
call
lods
mov
inc
shrb
sbb
sub
sbb
pop
cmp
inc
rcrb
or
mov
adc
jo
sbb
pop
sub
xchg
push
cmp
cmc
call
ret
adc
adc
or
xor
pop
cmpsl
adc
cmp
pusha
inc
adc
and
pop
data16
jge
jo
clc
push
cmp
jae
hlt
aad
or
test
add
mov
mov
out
arpl
aad
int
test
xchg
sbb
lret
adc
in
pushf
jge
xor
nop
sub
or
and
push
pop
and
jge
pop
orl
inc
sub
jno
dec
pop
imul
cmp
loop
mov
jle
add
jns
mov
mov
fsubs
loop
repz
addl
mov
push
pop
mov
jns
nop
sahf
and
xor
aam
arpl
inc
push
outsl
lret
fcomps
rcl
mov
jmp
bound
clc
mov
mov
jns
cwtl
pop
push
pop
shrb
dec
lcall
rorb
sbb
pop
mov
push
mov
pop
dec
add
outsb
jae
ffree
mov
sbb
push
imul
push
call
dec
lods
rorb
fiaddl
mov
adc
sub
lret
shlb
hlt
aad
push
mov
inc
mov
enter
adc
jge
jno
hlt
clc
and
and
mov
and
inc
jl
jbe
and
push
mov
lods
fidivrs
or
imul
negb
aam
add
or
cmpb
jecxz
push
mov
fisttpll
imul
inc
loop
fstpt
lret
mov
push
jnp
imul
mov
mov
insl
pop
push
ljmp
and
js
lahf
push
movsl
sbb
lahf
mov
and
or
or
sub
add
and
out
repnz
cs
push
pop
imul
and
xchg
pusha
and
xchg
es
idivb
shl
cmp
repz
inc
inc
mov
add
or
cmp
rolb
ljmp
lahf
les
xchg
xchg
outsl
xchg
push
bound
insl
ret
test
punpckhwd
mov
push
push
imul
xor
sbb
or
and
mov
jnp
mov
inc
xlat
mov
shll
inc
cs
push
jl
mov
outsl
fdivs
out
push
das
jbe
cli
mov
fldl
sbb
int3
xchg
fwait
dec
lods
inc
imul
shl
popf
jecxz
xor
xchg
and
fldl
subb
arpl
dec
aaa
jle
jns
hlt
jbe
jns
std
sbb
inc
mov
or
cmpb
inc
movsb
mov
mov
daa
ja
out
arpl
loopne
shl
fbstp
lea
push
dec
and
sub
test
push
js
mov
stc
ss
push
cwtl
add
cmpsl
jbe,pt
mov
jnp
aaa
icebp
push
adc
rcr
add
cmc
insl
cmc
push
fstps
push
int3
cmp
imul
push
movl
adc
jno
popf
mov
xchg
cmp
sbb
rcl
and
clc
xor
push
inc
mov
test
addr16
dec
mov
repz
imul
hlt
stos
dec
mov
rcl
sbb
mov
inc
and
jg
std
inc
fists
adc
movsl
dec
nop
jecxz
or
pop
mov
aad
push
icebp
mov
std
mov
adc
inc
cli
xchg
test
pop
jp
jno
cmc
out
xchg
xchg
or
rcr
fwait
mov
es
jg
cmpl
insl
out
cs
test
xor
ss
inc
flds
jle
add
mov
nop
mov
flds
xor
outsl
mov
sarl
mov
fists
xchg
push
jmp
jbe
mov
lods
cltd
mov
push
and
or
aad
aaa
push
shlb
test
fldcw
rcll
fdivs
in
mov
mov
popf
dec
jnp
outsb
loope
rcl
hlt
adc
leavew
sub
arpl
cld
cmp
sub
test
or
push
hlt
stc
jg
rolb
clc
pop
fstpl
pop
lcall
mulb
mov
push
add
dec
adc
push
call
mov
fldt
mov
mov
dec
push
sbb
push
mov
mov
mov
ljmp
push
popa
pop
int
pop
popf
stos
jb
inc
lds
cwtl
adc
jge
mov
or
std
repz
jb
adc
sbb
insb
mov
push
icebp
xchg
icebp
test
in
sbb
mov
inc
lcall
lods
xchg
into
mov
dec
subl
jmp
lahf
stos
std
movsl
pop
lock
cld
test
xor
imul
shlb
fldcw
aas
dec
push
popf
ds
decb
ret
out
cmc
fcoml
cmc
mov
cld
inc
mov
pop
test
inc
pop
pop
mov
mov
inc
les
mov
fisubrl
into
cwtl
sbb
cs
push
ficoml
xlat
and
dec
in
into
jne
les
inc
lahf
or
out
fwait
std
jnp
xchg
xchg
in
and
mov
stc
add
sahf
jecxz
loope
push
push
mov
sbb
cmc
jns
xchg
xchg
jno
and
adc
xchg
xor
scas
mov
fsts
out
adc
sub
repnz
dec
adc
cmp
mov
jno
out
pop
lahf
and
adc
insl
popf
call
cmc
push
sub
and
mov
push
add
xchg
in
stc
mov
pop
jecxz
in
push
xlat
addl
pop
mov
enter
addl
inc
sahf
stos
jg
push
xchg
xor
jnp
lods
ficoms
adc
mov
pop
test
dec
insb
jmp
push
test
pop
enter
out
adc
or
jl
sub
cmp
jae
mov
ja
leave
xchg
aam
add
pop
popa
cmpsb
xchg
mov
nop
cs
mov
inc
sbb
adc
push
nop
jl
push
and
mov
xchg
mov
cmp
int
lahf
pop
stos
sahf
dec
in
ror
jb
inc
dec
test
add
sub
lds
xchg
fcmovnu
icebp
lods
into
mov
sub
idivl
divl
lods
push
sahf
movsl
int3
daa
lcall
loope
or
add
arpl
sahf
lahf
and
in
and
jae
xor
and
jl
sbb
pop
or
xor
dec
pop
cmp
addl
inc
int
je
pop
pop
pop
inc
ja
add
je
adc
inc
pop
dec
inc
aam
popf
pusha
push
daa
cmp
fstps
pop
jb
mov
mov
fldcw
in
dec
mov
sti
and
pop
xor
les
ljmp
or
test
pusha
ficompl
jle
mov
xchg
mov
jmp
pop
jecxz
std
ret
cmpsb
jnp
inc
rorb
mov
mov
or
ret
loop
and
shlb
cmp
inc
pop
movaps
jmp
iret
shll
mov
cld
mov
mov
xchg
out
push
shrb
out
mov
sub
cmp
das
sbbl
xchg
iret
push
pop
and
leave
mov
jl
sti
mov
psubb
dec
fbstp
jl
loopne
enter
outsl
ss
and
dec
test
and
sahf
pop
std
insl
scas
push
call
jge
dec
adc
push
call
icebp
cvtpi2ps
pop
imul
fucomp
push
sahf
cmc
and
inc
and
add
addl
mov
push
cmc
push
and
lods
lcall
xchg
cli
nop
mov
and
ds
out
cmp
outsb
shrb
ret
lret
andb
push
jno
adc
xor
imulb
addl
or
insb
cmp
mov
movsl
adc
lahf
cmp
pop
jl
shl
mov
jae
cmpb
and
jp
aad
cmpsb
aas
out
pushf
pop
mov
cltd
cmp
mov
dec
aam
sub
xchg
stos
jge
cmp
fisubrs
int
mov
dec
test
sbb
out
andl
mov
pusha
lea
repz
mov
aad
adc
pop
sbb
push
add
je
jo
call
jb
loop
sbb
ss
sbbb
jle
outsl
ds
pop
mull
sbb
sub
mov
jl
insb
push
mov
inc
testl
pop
stc
je
in
jno
dec
ljmp
lods
out
mov
jbe
mov
scas
mov
inc
lods
adc
push
push
clc
pop
nop
pushl
lahf
dec
jge
adc
jmp
ret
cld
aad
cltd
inc
sub
test
loop
popa
add
pop
sbbb
jmp
scas
popf
rcl
imul
inc
pusha
add
pop
add
cli
pop
pop
and
sub
jle
sub
mov
cwtl
jp
mov
mov
mov
sbb
adc
incl
aaa
or
int3
out
fisubl
sub
jl
cmpsl
add
hlt
mov
mov
js
inc
movsl
aas
insb
mov
ljmp
and
int3
jb
cmp
jne
mov
bound
pop
and
ret
mov
xchg
dec
pop
push
and
or
repnz
xor
lds
ret
sar
je
add
gs
and
daa
mov
aam
xor
xor
out
insb
das
lock
xchg
iret
lret
lds
mov
inc
daa
or
push
xor
aas
mov
cmp
and
xchg
adc
push
or
sub
and
out
stc
out
push
mov
mov
cli
pop
inc
es
ljmp
mov
adc
popa
adcl
out
out
sub
mov
mov
and
int
xor
jnp
std
ja
jecxz
jmp
loop
scas
repz
fnstenv
ja
inc
and
cmp
adc
js
mov
mul
xchg
xchg
cs
aaa
aas
mov
sub
out
out
mov
dec
movsb
ret
pop
int3
pop
cwtl
nop
pop
enter
inc
shr
outsl
test
jmp
mov
sbb
inc
pusha
jnp
mov
lret
mov
pop
dec
pop
pop
mov
add
xchg
or
or
shl
fisubs
cmpsl
or
xor
pop
lods
or
mov
mov
shlb
xchg
jae
dec
cmpsl
xor
mov
inc
mov
in
pop
cltd
cmpsl
push
in
sarb
jnp
fwait
das
data16
cld
xor
xchg
in
mov
sarb
loop
leave
inc
jnp
xor
xchg
and
inc
call
std
cli
push
dec
or
mov
lods
xchg
jno
lods
dec
arpl
stos
fimull
call
ret
mov
xlat
in
jno
aam
outsb
pop
mov
xlat
lea
fwait
out
inc
hlt
push
add
into
add
inc
mov
mov
pop
push
xchg
xor
adc
mov
sbb
lds
sbb
mov
nop
mov
adc
cmp
xor
movb
cld
scas
mov
pop
cmp
jl
pop
xor
lret
xchg
jnp
mov
sub
cmp
and
jecxz
out
pop
arpl
das
sbb
mov
into
mov
dec
pop
cwtl
pop
in
call
ficompl
adc
and
loopne
cmp
arpl
lret
fs
jne
jmp
pop
add
jge
sbb
jle
jne
xlat
arpl
jno
cli
lret
mov
xlat
add
ret
xor
adc
popf
test
add
movsb
rcll
or
xchg
bound
xchg
call
xchg
enter
cltd
pop
xor
mov
push
or
jp
push
push
jno
xor
mov
int3
std
mov
cmp
arpl
and
jb
cmc
sahf
inc
or
and
inc
add
cwtl
pop
repz
ljmp
adc
mov
loopne
stos
repz
xor
inc
test
or
or
dec
jno
pshufw
call
pop
and
adc
int
xchg
in
mov
mov
bound
ret
xchg
add
ja
cmp
imul
sahf
sub
mov
test
fmul
mov
pop
jle
lcall
into
mov
or
xchg
out
jbe
push
sub
jp
mov
jmp
xchg
shlb
xchg
fisttpl
out
mov
ds
stc
push
rcll
xor
stos
push
lock
jl
aaa
sbb
test
push
pop
xchg
jbe
in
adc
mov
imul
inc
inc
cli
insb
test
xchg
stos
cmpb
jle
clc
inc
sub
sti
jne
mov
out
jecxz
bound
xchg
loope
and
in
idivl
mov
inc
das
fisttpl
call
ja
aad
clc
aas
cwtl
pop
arpl
pop
mov
rorl
andl
scas
lcall
in
or
mov
lock
jns
pushf
repnz
ss
or
test
mov
pop
in
cmp
ret
bound
xchg
mov
std
in
pop
mov
aaa
pop
test
pop
mov
pop
cmpb
shl
scas
aas
jno
push
je
or
ret
js
in
push
imul
in
in
out
enter
mov
pop
sbb
nop
pusha
sbb
sahf
mov
mov
nop
sub
rcrl
sahf
repnz
push
test
push
mov
jnp
sbb
inc
pop
dec
js
lcall
xorb
out
mov
mov
or
mov
notl
call
pop
lods
jl
movsb
mov
xor
shl
or
mov
sbb
add
cmp
sarl
clc
outsb
push
dec
sti
pop
pop
bound
xchg
pop
xchg
pop
std
es
cmp
fistps
and
jl
leave
or
shrl
pop
or
sub
pusha
or
xchg
xchg
push
mov
sti
add
sub
xorb
repz
jae
insb
lods
cmpsl
adc
pop
fcomps
sub
adc
dec
popa
daa
mov
les
and
lret
lret
stc
outsl
mov
mov
or
fbld
out
jb
cmpsl
inc
push
in
and
cmp
sbb
xor
sbb
sbb
shr
xchg
push
outsl
outsb
ja
lret
faddl
testl
push
idivl
sub
imul
mov
sahf
fwait
xor
push
shlb
out
sub
inc
ja
fistpl
mov
mov
pop
arpl
mov
pop
push
subl
int3
sarb
cmp
sarl
loop
push
out
sbb
sub
aaa
pop
imul
stos
clc
lds
sti
push
insb
jg
nop
fldt
add
dec
inc
rcrb
lock
dec
rorl
mov
lahf
or
dec
push
and
sub
cmp
xchg
aaa
push
imul
mov
mov
xchg
xchg
mov
pop
dec
and
adc
aas
inc
outsl
int
xchg
fidivrl
inc
in
arpl
sub
jno
inc
or
into
lahf
dec
daa
lret
stc
push
mov
dec
xchg
cmpsb
adc
dec
sub
push
xor
jno
push
sbb
stos
dec
xor
adc
idiv
mov
push
pop
or
in
jne
adc
push
ds
lcall
scas
and
test
dec
dec
sub
or
lea
out
loop
shll
jne
push
or
sub
or
sti
mov
mov
shrl
mov
adc
test
mov
pop
mov
lret
dec
sbb
insl
stos
and
imull
fstps
in
jp
inc
add
lret
es
inc
xlat
daa
add
pop
arpl
dec
and
sub
fnstsw
cmp
push
cwtl
pop
sbb
repnz
mov
lods
hlt
sbb
cmovno
aas
addr16
daa
pop
in
out
xor
or
sbb
mov
mov
xchg
sub
push
mov
scas
and
test
mov
decb
lahf
push
pop
and
lock
pextrw
popa
xchg
mov
gs
cmp
movsb
out
push
push
popa
cli
jne
test
or
sbb
les
js
out
jg
jo
jne
jb,pt
addr16
mov
xchg
push
pushf
popa
mov
mov
daa
cmp
adc
jae
sub
in
imul
pop
out
das
ss
push
xorb
adc
imul
xchg
xchg
pop
in
xchg
mov
adc
insb
cmp
push
mov
lock
adc
popf
mov
dec
jl
cmp
mov
push
dec
sub
mov
cmp
inc
add
dec
pushf
stos
add
into
fmuls
push
inc
dec
mov
test
gs
in
jl
repz
mov
xchg
movl
push
cmp
push
mov
pop
dec
xchg
std
cltd
movsb
dec
pusha
in
adcb
insl
hlt
mov
push
pop
xchg
cs
inc
dec
test
add
jo
xor
add
cwtl
pop
out
or
sarb
cmpsb
lods
jmp
adc
mov
adc
cmp
push
sbb
mov
push
jle
jb
aam
mov
sub
adc
mov
stos
aaa
dec
hlt
test
mov
jecxz
dec
addr16
aam
mov
mov
stc
insl
jmp
jnp
push
jp
fbstp
test
push
icebp
mov
popf
sbb
jge
repnz
inc
xor
cmpsl
divl
cwtl
push
jecxz
and
or
adc
lods
ds
add
das
push
hlt
mov
mov
or
enter
cmp
xchg
add
push
xor
sub
repnz
mov
push
cmp
mov
fldenv
repnz
sbb
cli
inc
fisubs
in
add
mov
inc
lret
push
clc
int3
jmp
movsl
push
test
mov
pusha
jnp
cmpsl
repnz
enter
hlt
cmp
jo
lea
jo
mov
outsb
out
pop
loopew
mov
push
clc
rorl
aas
stos
xchg
aad
loope
out
cmpsl
mov
jmp
inc
mov
popf
sub
dec
xor
dec
dec
int3
stos
and
pop
leave
daa
call
data16
pop
and
seta
cmc
repnz
push
movsl
dec
es
nop
test
stos
fidivrs
outsb
xor
jae
mov
bound
clc
loop
hlt
cmpsb
and
cmc
mov
fwait
adc
xor
xor
adc
inc
add
loop
cwtl
mov
je
xorb
push
lods
shll
fidivrl
movsl
stos
push
clc
add
mull
dec
mov
push
aas
int
and
repz
inc
xor
shlb
mov
out
leave
cwtl
shl
insb
or
sub
lds
pop
in
lods
and
dec
add
daa
jns
mov
arpl
test
jno
imul
or
stos
jo
inc
pop
outsl
mov
or
push
enter
inc
mov
mov
xchg
jnp
and
dec
xlat
jl
and
jge
xor
jae
les
lds
rolb
popa
cld
and
lods
xchg
movsb
jo
xchg
lret
adc
pop
fstpt
mov
pop
adc
dec
jb
test
push
fisubrl
mov
imul
mov
shrl
xchg
jb
bswap
stos
inc
xchg
lods
or
insb
std
xchg
mulb
jecxz
or
nop
clc
push
sbb
sub
inc
mov
push
inc
stos
sbb
test
cmp
mov
lret
inc
pushf
pop
jno
sbb
mov
pop
outsb
gs
sbb
dec
into
push
push
mov
lock
or
shlb
addr16
add
enter
inc
xchg
lret
aas
outsl
js
sbb
sub
mov
dec
mov
pop
gs
insb
movsl
mov
inc
outsb
mov
mov
in
scas
inc
scas
lret
andl
in
mov
lcall
ret
mov
and
call
inc
xchg
mov
cmpsb
jbe,pt
jp
mov
jbe
loopne
ja
mov
push
adc
cmpsb
inc
rcl
ret
sahf
xor
mov
ss
jbe
sbb
aad
repz
popa
std
jl
lods
jae
mov
sbb
or
data16
sar
ret
add
xchg
jbe
add
lahf
jle
insl
lods
mov
inc
fistl
sahf
dec
bound
lock
fildl
lods
or
out
repnz
das
shr
adc
or
out
cs
or
or
imul
hlt
cli
jo
loopne
xchg
push
dec
cmp
dec
aas
fwait
inc
or
sub
dec
test
sahf
aad
mov
imul
jb
das
iret
jb
mov
add
mov
or
lods
das
xchg
jae
adc
xchg
imul
lcall
fisubs
cmp
sub
xorb
lret
test
pop
mov
cwtl
sub
loope
mov
fstpt
aas
mov
cmp
push
jb
mov
cwtl
rcrb
imul
mov
int
sbb
repz
mov
out
mov
mov
popf
test
cld
or
mov
movsb
clc
and
fidivrs
movsb
aam
js
ret
sbb
add
clc
adc
sbbl
pop
sarl
in
rcrl
sbb
movsl
lret
adc
mov
mov
adc
xorb
icebp
cmp
jno
mov
ja
lods
scas
push
sbb
xchg
out
inc
inc
out
scas
iret
dec
push
mov
sbb
jb
dec
stos
xchg
add
cmp
xor
push
xorb
jmp
cmc
xor
insb
or
sahf
or
or
jmp
out
daa
mov
lea
cmpsb
sub
push
stc
xchg
ds
xchg
fs
pop
nop
das
mov
dec
scas
push
xchg
pop
jg
add
mov
push
stos
insl
push
sbb
out
cmp
sub
push
inc
push
sti
out
test
and
cmp
inc
fwait
adc
cwtl
xor
xor
xchg
pop
cmp
push
inc
or
test
and
sub
pop
push
imul
and
aas
out
cld
fnsave
xor
imul
mov
cmp
js
push
insl
push
push
sub
js
sbb
push
push
or
loop
int
pop
aas
push
xor
lods
ss
jnp
adc
js
imul
std
aas
push
daa
mov
xor
cld
ret
push
add
xchg
fcmovnu
aas
and
leave
lret
add
icebp
cwtl
cmp
pop
or
movsb
pop
cmp
mov
hlt
inc
rorl
xlat
frstor
adc
jno
sbb
pop
insl
adc
fldcw
inc
xor
pop
push
dec
lods
cmc
or
mov
dec
cmp
lock
jge
aam
int3
pop
mov
ljmp
xchg
insl
xchg
xchg
lods
mov
outsb
js
adc
mov
test
inc
jp
adc
test
fwait
rcrb
in
bound
pop
fcmovnb
mov
dec
cmp
bswap
pop
xor
push
mov
outsl
jno
mov
leave
adc
sub
in
sbb
mov
sbb
cmpsl
movsb
repz
adc
or
and
je
adc
add
jae
add
aas
lds
sbb
dec
sahf
std
scas
lahf
shlb
mov
xor
ljmp
test
jecxz
loopne
pop
daa
testb
add
fisttps
adc
xor
jge
and
iret
mov
or
test
cs
rcl
sti
jecxz
mov
enter
cmpb
scas
outsl
fisttps
outsb
out
dec
lret
sahf
jge
stos
mov
mov
and
enter
mov
ds
xor
sbb
and
movb
sti
cli
or
jle
in
outsb
pop
in
xchg
push
sbb
andl
aas
lret
push
cli
dec
das
lds
cli
fdivr
rol
push
imul
mov
imul
or
sbb
mov
mov
repnz
xor
push
arpl
aas
bound
decl
or
cwtl
ror
imul
shrb
and
xor
popa
loope
sub
fldt
loopne
push
fwait
insl
cmp
jg
into
add
pop
nop
jmp
push
xor
je
and
sti
xlat
lahf
mov
loopne
mov
mov
cwtl
js
xchg
sub
adc
lods
push
das
and
jp
or
test
imul
iret
pop
mov
add
loopne
sbb
pop
push
fwait
fwait
mov
test
inc
add
int3
or
push
xchg
lea
out
xchg
sbbl
cwtl
xor
add
cld
aas
mov
jae
mov
push
sub
pop
add
xchg
adc
mov
js
push
cmc
cmp
mov
fcmovb
lods
adc
mov
cs
mov
lods
cwtl
cmp
inc
xchg
push
push
mov
lock
cmp
cmp
jg
call
push
or
add
pushf
imul
inc
out
or
scas
adcb
jo
or
call
data16
cmc
jne
cmp
adc
in
aad
and
xlat
push
sbbb
xchg
movsb
lds
push
fnstcw
int
nop
pusha
repnz
and
jno
daa
addl
out
inc
jns
imul
fdivs
sub
add
lcall
repnz
mov
repnz
leave
sub
ret
pushf
xor
jmp
jmp
add
fldcw
imul
std
outsl
std
lahf
bound
mov
fwait
repz
jo
rol
push
shlb
add
bound
ja
adc
xchg
fdivrs
divl
lcall
lret
push
jecxz
repnz
push
fstpl
icebp
cmc
sbb
out
call
mov
dec
or
sub
lahf
lret
mov
scas
mov
hlt
sahf
xchg
outsb
mov
outsl
jnp
mov
mov
or
out
pop
inc
dec
in
je
inc
push
nop
mov
je
push
lea
rol
shlb
pop
lods
stos
dec
dec
ss
outsl
loope
in
stos
cmp
in
mov
pop
lahf
mov
cwtl
hlt
jae
mov
lods
fdivrs
xchg
icebp
jecxz
lds
dec
and
out
fs
or
movb
adc
test
lods
pop
int3
mov
xor
imul
pushf
inc
cmpb
movsl
je
pop
xor
jne
inc
bound
divl
sarb
cmpsb
mov
outsl
roll
jge
js
add
scas
inc
faddl
sbb
js
jp
leave
clc
xchg
mov
lods
test
mov
xor
cmp
popf
out
and
sbb
movsb
cmp
xlat
aam
xor
or
daa
add
lds
xchg
lock
push
cmpsb
rolb
cmp
and
fwait
cmp
shr
pop
sub
aaa
cli
aas
scas
clc
dec
jno
ds
fimull
and
stos
sbb
pop
add
ret
ljmp
mov
xlat
lea
jmp
dec
aaa
mov
inc
rorl
cwtl
jg
popa
or
mov
out
cmp
jg
or
pop
icebp
cmp
jbe
sub
add
xchg
pop
and
mov
fists
mov
cwtl
xchg
jg
insl
xor
xchg
hlt
lea
xchg
sub
ss
adc
shl
and
sub
rol
mov
or
pop
mov
xchg
imul
add
filds
xchg
cwtl
test
movsl
test
xchg
jne
out
or
jl
mov
jae
cmpsb
mov
jae
outsb
cmp
sahf
pop
test
and
fmuls
jg
out
mov
fsubrs
mov
cmp
dec
idiv
movsb
shlb
pop
push
insl
inc
hlt
test
popa
lret
push
neg
cmc
push
sub
xchg
xchg
pop
add
fwait
imul
add
push
es
data16
int
stc
jg
test
or
xchg
pop
inc
mov
xchg
mov
stos
pop
push
mov
dec
aad
rol
movsl
movsb
xchg
scas
nop
pop
jl
orb
in
jae
fsts
ficoml
sub
add
xchg
ficoms
jp
scas
incl
xor
and
cmp
mov
xchg
lock
cmp
cs
out
or
adc
jle
notl
and
movsl
pop
mov
cld
inc
cmc
pop
ss
push
data16
arpl
pop
repz
stos
mov
pop
cmpsb
cwtl
movsl
gs
call
pop
test
sbb
xchg
loope
popf
lods
ret
lret
xor
aam
lret
xor
inc
push
or
insb
push
out
inc
push
ret
cmp
into
xchg
aaa
xlat
lahf
push
sub
lock
call
daa
mov
fiadds
movsb
add
jecxz
popa
cli
shrb
out
aad
repnz
leave
mov
sub
gs
scas
ljmp
jno
and
into
stc
or
mov
jmp
push
mov
ret
dec
rorl
adc
push
or
sbb
fwait
and
inc
outsb
push
adc
and
fs
push
jmp
loop
mov
popf
rcll
mov
push
cmp
xchg
out
cmp
and
dec
adc
int3
cli
xchg
mov
jmp
mov
mov
fs
mov
ret
pushf
sbb
int
scas
mov
sarb
jmp
adc
mov
int3
lea
push
inc
es
fsubrl
aam
les
popf
in
pop
adc
fcomp
data16
out
sub
divl
enter
mov
or
clc
mov
mov
andl
std
icebp
in
and
xchg
add
and
dec
rcl
fstl
call
ss
cmp
and
mov
lea
xchg
sbb
cmpsb
jl
mov
hlt
add
repnz
stc
subb
mov
cmp
or
jle
imul
addl
pop
jns
cmp
out
icebp
pmulhuw
clc
adc
popf
push
icebp
inc
pop
fiadds
pusha
xlat
shrb
pop
mov
rcr
mov
jl
push
and
insl
sub
mov
sbb
sbb
ds
fidivrs
sbb
pop
add
sahf
or
js
into
dec
xchg
insb
data16
test
mov
stos
jae
dec
fiadds
or
dec
out
jecxz
bnd
inc
shlb
mov
push
push
push
xchg
mov
out
add
fcompl
xlat
jge
aaa
cmc
mov
stc
enter
stos
pop
pop
mov
push
sbb
imulb
inc
rcrl
pop
xchg
mov
dec
and
mov
xchg
and
aas
or
add
data16
push
mov
int
xchg
push
cmpsl
incl
jbe
and
push
push
dec
clc
dec
mov
adc
sbb
inc
popa
mov
pop
fisttpll
rorb
ss
jecxz
pop
xchg
xor
mov
lret
dec
loope
mov
lea
mov
leave
mov
cld
mov
jecxz
jo
cmp
loop
push
push
fwait
pop
inc
pop
nop
and
int3
xor
int3
pop
repz
stos
into
cmp
imul
jnp
xor
push
stos
mov
cmpsb
popf
js
push
sub
sbb
pop
add
fwait
xor
fs
or
dec
jge
sbb
and
cltd
xlat
sbb
std
stos
push
sub
shlb
and
mov
xchg
enter
cld
adc
cs
call
inc
sbbl
pop
js
lahf
pop
push
leave
out
stos
popa
iret
jl
stos
mov
inc
sbb
popf
daa
stos
push
xchg
test
daa
in
aam
stos
inc
in
in
dec
pop
cmp
sbb
inc
loopne
ljmp
push
mov
adc
rcrl
push
mov
bound
mov
mov
in
push
pop
xchg
xchg
mov
shll
popa
loop
popf
mov
jge
pop
sbb
rclb
out
or
sbb
adc
jmp
dec
ret
rorl
fnsave
stos
or
stc
movb
mov
mov
rcr
dec
sub
cmp
push
cwtl
and
adc
mov
shrb
lock
xor
mov
in
fsubrl
stos
fmul
push
lock
jns
xchg
push
pop
fs
fcoml
fucomi
scas
dec
jl
dec
lahf
or
fs
pop
cltd
divl
xor
push
les
pushf
cmp
dec
pop
push
in
cmpsb
clc
cmpsb
xorb
daa
xchg
mov
daa
out
mov
xlat
rcrb
mov
fiaddl
jle
mov
loopne
jecxz
daa
xchg
cs
hlt
xchg
push
aas
inc
mov
lock
imul
loope
ss
sbb
push
loop
or
add
aas
aam
scas
outsl
push
cld
mov
mov
gs
hlt
jo
dec
out
sbb
xor
subb
int
out
mov
icebp
inc
fstpl
cmp
lods
jo
add
loop
push
outsb
xchg
xchg
repnz
lods
lock
es
mov
mov
fs
movsl
jle
ss
pop
mov
xor
add
sub
std
and
rorl
lret
rolb
scas
jecxz
inc
ds
ficoml
pusha
dec
lret
jp
xchg
cmpb
dec
dec
arpl
aad
mov
loopne
cmp
sub
jle
sti
clc
xlat
xor
xor
xchg
repz
inc
popa
loope
arpl
cmp
and
pop
and
sbb
aaa
add
lea
xor
in
mov
or
mov
stos
dec
push
subb
clc
adc
mov
dec
ljmp
cld
cmp
pop
cli
fwait
dec
or
mov
or
mov
inc
stc
cmp
sub
dec
int
mov
mov
xor
jno
shlb
push
cmpsl
pop
pop
push
cld
jge
inc
sbb
push
das
pop
pop
mov
dec
xor
lcall
jmp
mov
stos
fsubs
sbb
fwait
xchg
fildll
mov
movsl
push
push
pop
dec
pop
in
jnp
cmp
outsl
or
cmpsb
or
adc
arpl
gs
or
xchg
xor
sub
mov
cmp
mov
cld
cmpl
into
jns
xchg
repnz
test
in
sbb
and
repz
adc
lret
mov
xor
push
lret
add
xchg
and
add
dec
mov
fistpl
push
ret
mov
mov
mov
mov
mov
mov
lods
ljmp
push
pop
mov
inc
stos
data16
jb
icebp
inc
cli
mov
hlt
popf
push
mov
or
decb
outsl
adc
push
and
push
repnz
stos
mov
and
xlat
ret
jmp
sub
iret
mov
dec
enter
adc
lret
inc
or
xchg
xchg
addl
mov
cmpsb
fstpl
pop
loop
iret
sahf
push
popf
or
testb
les
xchg
push
mulb
inc
jg
cmpsb
mov
pushf
icebp
int
mov
mov
int3
fbld
and
into
dec
sahf
xor
fwait
pop
outsl
adc
mov
pop
mov
jnp
inc
cmp
mov
aas
imul
mov
punpckhwd
ds
sub
mov
mov
adc
or
ja
pop
test
out
xor
das
out
rclb
repnz
cltd
jae
push
aam
iret
daa
adcw
lret
cli
or
adc
in
and
je
fstps
mov
leave
mov
or
insb
or
inc
or
popl
push
cli
mov
std
sub
subl
or
pushf
fists
jmp
idivb
sbb
in
mov
xor
mov
lahf
call
mull
mov
popf
testl
scas
jae
cld
cmp
mov
lods
pop
insb
or
sbb
or
jp
pop
push
aaa
inc
add
push
mov
cs
sbb
or
int3
xchg
mov
or
cmp
fsubrs
mov
adc
jmp
cmp
mov
cmp
pushf
xor
out
roll
jl
pop
int
out
inc
xchg
inc
add
mov
and
sbb
sar
sbbb
clc
dec
mov
push
adc
xchg
push
cmp
jnp
enter
in
imul
daa
add
fbstp
sub
add
xorb
mov
inc
cmp
test
in
mov
mov
mov
movl
push
jle
push
jno
inc
push
cmp
aaa
decb
or
pop
mov
mov
and
call
push
iret
idivl
mov
dec
cld
push
ret
pop
xor
into
dec
cmc
dec
bound
popf
pop
imul
out
sub
mov
cmp
lds
mov
mov
jge
pop
dec
out
cmp
inc
js
lahf
scas
and
dec
push
jg
imul
repnz
lds
push
push
dec
xorl
sub
sub
call
add
or
addr16
dec
add
fidivrs
repnz
fcomps
pmulhuw
xor
movsl
or
aaa
push
xchg
mov
cmpsb
mov
push
scas
daa
cmp
cmp
add
inc
out
leave
push
or
xchg
imul
cmpl
ss
sbb
das
repz
pop
lret
mov
fiadds
jo
jns
mov
mov
inc
pop
out
pop
xchg
push
out
jno
push
fbld
aam
sbb
and
loope
pop
jne
imul
push
and
sub
cld
xlat
mov
in
push
lahf
jmp
std
ficompl
fisubrs
loope
adc
jo
mov
out
jbe,pn
cmp
adc
repnz
lret
inc
mov
aad
fcoml
sbb
sub
and
sub
iret
popf
cs
in
mov
cmp
sub
xchg
cmp
aaa
add
scas
hlt
ljmp
jle
stos
sahf
push
mov
ss
std
xor
push
ja
xlat
stc
shlb
mov
sub
adc
stos
sti
lods
cld
lock
mov
loopne
and
mov
sbb
mov
xchg
mov
loop
xchg
lods
or
out
xlat
add
lock
adc
lcall
pop
orl
shl
jl
adc
and
aaa
test
push
adc
fmul
aam
pop
ja
clc
sub
lock
jmp
lock
ficoml
inc
cmpsb
fidivl
push
sub
jb
mov
mov
or
call
divb
pop
test
int3
lods
cltd
cwtl
fcomip
daa
mov
xor
jne
cmp
and
and
je
adc
add
orl
es
lahf
stos
and
sub
cltd
in
xor
icebp
call
xchg
mov
shll
cli
lods
aam
push
inc
xchg
arpl
mov
inc
test
int3
bound
data16
int3
aas
push
inc
xchg
inc
rcrb
sbb
dec
add
icebp
dec
mov
dec
movsl
or
int3
dec
cmp
stos
call
in
mov
xor
in
movsb
lods
adc
jle
jb
movsl
stc
jle
cld
iret
jl
sbb
sbb
jns
add
lods
xchg
mov
mov
sahf
insl
add
test
loope
dec
add
xchg
sbb
lret
icebp
sub
pop
jecxz
dec
adc
dec
cmp
push
popa
adc
insl
push
iret
shrl
call
jmp
fsubs
xchg
in
cmp
rcrb
sub
insb
je
mov
cmpsb
test
in
jle
mov
lret
jbe
mov
xor
or
mov
add
les
dec
jae
push
fmuls
jmp
lret
leave
cwtl
es
jae
mov
push
movsb
aas
in
lahf
stc
pop
std
aad
xchg
test
sahf
pusha
outsb
out
inc
sarl
std
cmp
adc
cmp
jnp
js
andb
xor
cmpl
mov
mov
xchg
xchg
and
xchg
ss
ds
orb
jo
es
sarb
loope
mov
lods
xor
jl
push
sub
cmp
adc
cmp
iret
or
cmpsl
inc
and
aas
push
pop
push
addr16
cmp
call
enter
call
std
and
pop
rcrl
xchg
adc
aam
or
dec
cltd
jo
test
pushf
pop
mov
lcall
or
jp
bnd
icebp
jno
dec
sahf
adc
push
std
aaa
rclb
imul
push
scas
xchg
xchg
ja
fisubrl
loop
or
nop
mov
mov
and
inc
call
pop
jmp
in
jbe
xor
and
push
pop
scas
dec
push
xchg
aad
jge
sahf
lock
push
int
pop
gs
sub
pop
hlt
in
sub
arpl
loope
jmp
imul
int
adc
lods
out
out
int
into
pop
in
repz
lret
pop
dec
sahf
repnz
int3
jp
pushf
cltd
add
sub
scas
add
or
xchg
fcoms
mov
stos
je
add
out
orl
push
push
pop
out
gs
in
into
stos
subb
push
inc
push
aam
icebp
pop
js
sub
adc
dec
fsubr
mov
out
out
icebp
mov
aad
push
push
rorb
and
insl
pusha
out
decl
inc
iret
mov
out
out
outsb
pushf
int3
xchg
loop
mov
jne
into
insb
jg
stos
popa
sub
ds
gs
jno
std
bound
or
ror
lods
int
clc
pop
mov
repz
xchg
enter
scas
aad
dec
push
jno
enter
scas
jbe
cmpl
iret
je
inc
inc
cmpsb
sbb
lods
fnsave
ljmp
jge
movb
mov
mov
mov
add
xchg
clc
sub
pop
push
or
and
sub
jmp
mov
and
xchg
flds
lods
jb
pop
lret
jecxz
test
mov
push
push
mov
jnp
dec
adc
jnp
stos
jmp
mov
xor
xchg
into
mov
sbbb
push
mov
cwtl
std
dec
sahf
nop
in
stos
popf
fs
mov
mov
cmpsb
nop
add
cld
sbb
orl
mov
cli
push
shll
fsubr
sbb
mov
pop
cmp
xorl
test
out
mov
inc
pop
stos
outsl
outsb
imul
dec
ret
adc
add
cmp
jne
rcrl
aaa
mov
mov
faddl
out
pop
jae
mov
jmp
cmpsl
or
repz
sbb
das
add
jge
in
cmp
inc
jae
adc
addr16
lea
sbb
addr16
insl
stc
pop
pop
ljmp
jne
mov
andl
cmc
addl
xlat
and
pop
push
xor
xor
jp
and
adc
stc
pop
pop
idiv
int
mov
clc
xlat
jno
adc
sti
dec
loopne
gs
xor
adc
add
sub
xor
ljmp
pop
clc
jns
cmp
lret
insl
adc
xchg
stos
popf
mov
xor
and
dec
dec
imull
jno
push
lret
dec
mov
imul
inc
sbbl
xor
cwtl
das
enter
mov
popa
jmp
es
jge
cmpsb
movsl
sbb
sahf
repz
andb
pop
clc
sarl
add
push
out
add
dec
faddl
in
and
xchg
lds
movsl
stc
and
cld
inc
imul
insl
push
sbb
pop
mov
cmpsb
inc
and
and
stos
shlb
sub
jo
ret
out
pusha
push
inc
jb
dec
xchg
imul
ficoml
dec
addl
ret
lahf
or
push
mov
xchg
push
and
imul
or
adc
ds
xor
hlt
cld
mov
jb
push
lret
inc
sbb
and
popa
cmp
jg
cmp
popf
hlt
mov
dec
xchg
cs
xchg
inc
repnz
xchg
add
jp
fcompl
mov
xor
mov
rorl
xchg
push
xchg
mov
mov
std
fmull
xchg
je
ss
loope
in
mov
lahf
jp
in
pushf
pop
int
cld
add
jmp
aad
add
out
popa
xorl
jge
xchg
out
jmp
mov
dec
notl
call
mov
mov
das
clc
push
and
mov
shll
push
and
and
jns
mov
xchg
xchg
adc
dec
movsl
sub
mov
sub
mov
scas
cmpsb
xlat
aad
inc
fs
sbb
add
out
jge
inc
mov
andb
push
pop
adc
jne
inc
and
pop
xchg
fsubrs
lret
and
mov
pop
jmp
sbb
add
mov
dec
inc
push
leave
mov
and
and
enter
pop
cmp
and
jl
clc
cltd
xlat
adc
cmc
sub
lods
popa
addr16
movd
dec
arpl
xor
push
jecxz
enter
loope
dec
test
stos
pop
mov
jle
sub
out
and
xchg
ret
lds
js
gs
pusha
test
popf
and
and
mov
aad
mov
dec
mov
mov
repnz
int3
movsb
inc
cmpsl
inc
mov
lods
leave
push
push
sub
repz
dec
pop
xchg
vpsubusw
cmp
xchg
repnz
pop
lods
test
xchg
testl
xor
mov
add
call
imul
and
arpl
sub
mov
dec
jno
lret
fildl
adc
dec
inc
jg
pushf
subl
mov
fisubrs
icebp
gs
les
dec
imul
inc
pop
jmp
add
mov
test
cmp
lods
scas
lock
mov
jp
iret
pop
mov
ljmp
push
pop
mov
lods
out
or
and
mov
dec
inc
in
push
nop
add
aad
jns
aam
imul
sub
popa
das
pop
enter
lcall
pop
cmpb
sub
pop
sub
cltd
jb
daa
aaa
mov
aad
shlb
cmc
mov
and
mov
mov
mov
call
mov
jl
and
dec
push
test
pop
out
xor
xchg
xor
pop
lcall
pusha
dec
stc
pop
push
jno
incb
pop
dec
test
inc
and
xchg
xchg
lds
insb
jns
ret
adc
and
inc
cmpsb
pop
idivb
dec
ror
adc
leave
jno
les
push
loope
adc
and
add
insb
and
sbb
test
push
inc
fcmovnb
jp
mov
icebp
cmp
repnz
stc
or
adc
nop
inc
cmc
inc
icebp
in
cmpsl
inc
sti
push
adc
xor
mov
leave
in
loopne
enter
or
add
push
or
xchg
sub
clc
nop
pop
shll
std
push
sbb
stc
fldl
psubsb
stos
iret
bound
addl
jno
std
sbb
and
int3
stos
add
fnsave
fmul
stc
negl
dec
jg
fisttpll
push
push
sbb
rcl
jnp
xchg
pop
into
pop
push
inc
test
or
insb
add
fsubr
hlt
jg
cmp
inc
pop
std
lods
mov
cmp
ret
mov
insl
dec
loopne
xor
aad
stc
sub
in
mov
les
fdivs
jle
stos
pop
test
insl
mov
flds
sahf
js
dec
js
roll
cmc
jno
sub
inc
jne
mov
or
imul
jo
jae
fldcw
loop
test
and
fiaddl
lods
sub
clc
and
hlt
and
mov
xchg
stos
fcoml
sbb
mov
ss
ss
popl
ror
cmp
fldpi
test
jno
cmpsb
lods
pop
mov
pop
mov
shr
or
xchg
enter
testl
incl
cmp
cmp
sbb
stos
rcll
add
roll
leave
mov
sbb
arpl
jle
adc
xchg
mov
out
xor
push
cli
cmpsl
lret
cmp
mov
enter
cmc
inc
loop
jnp
and
push
and
out
mov
es
inc
sub
sbb
push
jno
mov
mov
mov
jge
scas
cmp
dec
mov
cmc
or
mov
xchg
dec
mov
dec
xchg
enter
xchg
sbb
jns
and
sbb
popf
push
rcr
xchg
or
lock
push
aad
xchg
sbbb
bound
ret
ficoms
jo
adc
or
sbb
pushf
loopne
push
dec
rcrl
out
jle
dec
push
js
pushf
mov
xor
orb
test
mov
test
int3
out
repnz
sub
push
cs
dec
hlt
dec
push
shlb
push
mov
out
movsb
ss
and
mov
mov
add
add
popa
inc
test
adc
inc
subl
out
and
xchg
sub
inc
aad
push
cmp
xchg
outsl
inc
jo
clc
pop
xchg
sbb
xchg
sbb
cmp
lahf
ffreep
add
das
jnp
push
pop
xlat
or
dec
mov
jp
idiv
mov
dec
jb
jp
inc
into
fdivr
mov
adc
movsb
test
push
inc
xor
mov
jecxz
mov
sbb
xchg
xchg
mov
pop
add
repz
loopne
and
in
aas
inc
aas
or
lahf
sahf
lock
inc
lret
mov
mov
cmpsb
insl
inc
xor
mov
repnz
jnp
sbb
jo
cmp
pushf
sti
xor
cmp
sbb
fsubrl
mov
fsts
call
jg
mov
pop
sub
lods
aad
xchg
ret
mov
test
lds
cs
pop
or
sbb
mov
cltd
inc
sub
insl
out
or
add
int3
aad
and
rcrl
pop
rcrb
push
clc
pop
push
mov
lret
lcall
shrl
lds
ret
cmp
push
sub
mov
adc
lds
dec
cmp
jmp
in
fcoms
mov
addb
les
add
lcall
mov
and
xchg
mov
int3
inc
clc
in
cmp
repnz
jae
cmpsl
into
dec
mov
mov
aas
call
adc
pop
mov
aam
sysenter
cld
insb
imul
pop
pop
xchg
pop
pop
mov
add
lods
xchg
and
dec
and
sub
scas
sbb
inc
add
jns
fcomps
mov
sub
enter
in
cmp
mov
ja
and
lret
mov
aam
enter
lods
sbb
lock
sub
add
rclb
sti
dec
mov
mov
lds
in
jne
and
pop
inc
xor
jmp
sbb
and
push
stos
repnz
mov
icebp
push
pop
rol
xor
mov
and
loop
mov
xchg
cmp
test
inc
stos
mov
jge
xorl
mov
enter
subb
mov
mov
loop
pop
in
mov
and
dec
lods
mov
xchg
mov
or
jns
stc
push
int
inc
xor
mov
sbb
xchg
stos
jbe
push
adc
fnstsw
dec
rorl
sub
or
cmp
mov
sub
xor
cmp
or
xchg
mov
xchg
jae
xor
inc
inc
out
lods
pop
pop
ja
xchg
lods
cmp
mov
call
jle
mov
imul
scas
or
lcall
fs
xchg
std
push
fwait
or
add
dec
lahf
cmp
lods
mov
and
jl
dec
cmp
out
add
fwait
adc
iret
or
cmc
addl
pop
pop
jne
pop
pop
clc
fmull
push
add
std
clc
sahf
add
inc
fiadds
test
dec
inc
sar
mov
ret
cmpl
sub
xor
dec
push
sub
and
sub
xor
push
xchg
sub
xor
dec
xchg
or
inc
mov
xchg
mov
stos
mov
bound
push
jle
push
jo
mov
dec
je
out
jo
push
add
into
daa
nop
jno
mov
iret
xchg
mov
jecxz
popf
insb
or
loopne
in
lods
jp
shrb
jne
movsb
dec
and
mov
jbe
arpl
jg
adc
cmp
in
push
ljmp
jg
nop
sbb
pushf
dec
jge
xor
sbb
ja
fcomi
bound
arpl
fnstcw
dec
and
xlat
lahf
mov
jnp
push
pop
das
cmp
pop
xlat
cmp
adc
mov
inc
adc
lret
lods
rolb
xlat
jle
add
xlat
lock
mov
xor
loope
lahf
mov
jg
in
pop
add
sahf
arpl
gs
jo
push
xchg
and
sub
adc
and
cmp
jns
sub
jle,pn
fistpll
addr16
dec
jl
inc
mov
mov
je
out
mov
aas
icebp
pop
and
jne
jecxz
stos
xor
xor
or
stos
jle
cwtl
sbb
popf
cld
pop
pop
icebp
lcall
rcr
lock
cwtl
xchg
movsl
lock
jg
add
mov
scas
push
cld
pop
dec
jnp
sti
dec
ret
das
add
out
stc
gs
dec
push
loop
insl
push
sbb
pop
popa
cli
cmp
addr16
add
das
add
loop
out
inc
mov
jno
push
lret
in
sbb
out
xchg
mov
or
xor
push
inc
int3
js
pop
ja
mov
scas
enter
pop
int3
out
rolb
fstps
loope
and
clc
sbb
inc
sub
xchg
and
lds
add
or
ds
push
mov
and
mov
lds
leave
mov
adcb
js
inc
in
adc
loope
cltd
cwtl
sahf
mov
fstps
lahf
xchg
push
push
sub
jle
jo
jecxz
lahf
cli
inc
sbb
pop
adc
daa
movsl
je
ljmp
sbb
xchg
cmp
ja
shrl
fcoms
cmpsb
pop
pop
in
mov
xor
nop
jns
mov
adc
leave
call
mov
clc
pop
mov
jl
in
aaa
or
adc
pop
cmp
jns
fwait
loop
jnp
and
xor
mov
dec
out
cmp
sub
loopne
cs
jp
mov
lea
cmp
cwtl
scas
inc
fmulp
sub
iret
std
or
int
ljmp
inc
mov
test
fwait
and
sub
and
pop
jp
dec
in
push
rolb
aas
ret
xor
in
loop
cmp
testb
ret
sbb
pop
sbb
das
jne
testl
or
jmp
pop
mov
mov
push
jl
xlat
repnz
dec
fidivl
es
ja
enter
xor
sub
dec
lahf
sahf
xorb
movsl
mov
ljmp
mov
or
out
pushf
cmp
pusha
divb
imul
xchg
pop
inc
push
js
mov
xchg
cmp
inc
adc
pop
inc
pop
inc
ret
jle
dec
fwait
aam
adc
push
add
mov
std
loopne
stos
add
xchg
and
pusha
shrb
mov
in
shl
xchg
aas
lock
fs
mov
inc
cmp
jmp
adc
out
mov
repz
orl
sub
pop
or
int3
pop
je
push
leave
loope
in
push
add
and
jg
cmpsb
sbb
mov
out
icebp
je
inc
sbb
or
pop
pop
add
pop
cwtl
adc
xchg
xor
std
js
lcall
int3
mov
std
cmpsl
ljmp
pop
pop
pusha
fldenv
jnp
xchg
dec
popa
out
dec
outsb
pop
adc
cwtl
cmp
mov
add
pushf
fs
add
sub
push
faddp
sub
fwait
sbb
shr
nop
xor
out
popf
jge
cmp
push
test
xchg
pop
jg
sub
dec
fs
cmp
jge
sub
and
mov
imul
cltd
mov
pusha
push
loope
fstpt
popa
cmp
ljmp
in
pop
pop
iret
test
call
xor
out
nop
mov
imul
mov
sbb
pxor
aam
popf
or
jnp
add
js
les
int
xor
insb
scas
xor
outsl
outsl
sarl
pop
imulb
jae
xchg
fcomi
cmp
inc
std
jae
mov
stos
lret
or
xlat
mov
adcl
imull
leave
js
sub
aad
pop
repz
hlt
adc
aas
push
mov
xor
loop
pop
cld
mov
insl
mov
inc
lcall
pop
lahf
rorl
cwtl
gs
test
inc
inc
cmp
jmp
mov
mov
hlt
jno
cmp
pop
inc
pop
or
loope
cwtl
fld
jl
mov
movsb
pop
and
int3
dec
jo
mov
mov
inc
mov
mov
dec
adc
or
idivl
inc
sti
adc
pop
mov
pop
fisttpll
jecxz
aad
mov
adc
out
and
dec
je
hlt
out
lock
pushf
cmp
in
pop
sbb
fucomi
mov
sbb
jecxz
cmp
mov
mov
mov
mov
xor
shrb
cmpsl
xchg
sbb
clc
mov
pusha
jne
inc
test
scas
mov
mov
pop
add
test
xchg
andb
cltd
andb
test
shlb
rolb
cmp
jle
dec
cmp
cs
data16
xchg
imul
fs
push
loop
mov
out
div
pop
dec
cwtl
ret
add
stc
xchg
pop
cmpsb
lods
cld
fidivl
pop
fisttps
iret
jb
dec
es
push
add
shrb
push
mov
std
cmp
into
sti
les
dec
mov
addps
mov
sub
fnstenv
js
lds
aam
push
sub
roll
sbb
jae
fildl
sub
cltd
mov
stos
popf
stos
stos
xor
and
subl
in
mov
js
iret
lret
sub
cmp
imul
mov
dec
pop
ror
lret
mov
xor
movsb
fsub
repnz
cmpsl
push
cmp
ds
popf
leave
movsl
sbb
inc
lock
sarb
and
and
in
insl
push
inc
pop
outsl
pop
data16
inc
sub
cltd
add
lods
push
mov
mov
repnz
xchg
aad
clc
imul
pop
imul
arpl
sti
mov
xchg
mov
mov
xchg
push
dec
rolb
aad
aas
dec
push
popa
pop
movsl
jmp
movl
data16
adc
and
ret
ss
or
outsl
lods
mov
and
push
aas
dec
test
xchg
xchg
leave
out
adc
jg
xor
pushl
loop
out
lea
jp
add
xchg
icebp
mov
fsubr
das
adc
cmp
mov
mov
lahf
popa
pushf
mov
daa
cli
call
adc
lret
gs
lock
shlb
push
mov
sbb
popf
enter
sub
iret
outsl
shlb
aad
xor
inc
dec
icebp
or
push
ss
mov
lods
xchg
sti
in
call
and
push
mov
sbb
movsb
iret
jle
lds
jp
jne
add
mov
push
pop
jle
out
aad
js
jmp
or
dec
ja
ret
test
out
rorb
jecxz
stc
inc
repnz
or
jg
rcl
mov
or
gs
movzbl
mov
jle
movsl
xchg
test
fs
mov
pusha
and
adc
test
out
mov
dec
mov
data16
pop
leave
test
aas
mov
nop
iret
out
out
inc
pushf
loope
out
cwtl
mov
xchg
std
divl
loop
rolb
gs
adc
movsb
out
adc
negb
pop
jno
xchg
lahf
leavew
adc
repnz
cmp
lds
or
add
loope
dec
xor
ja
popf
pop
cld
sub
cmp
mov
out
xchg
adcb
xor
pop
jnp
repnz
imul
stos
add
cmpsb
fadd
in
in
arpl
push
sub
mov
sub
and
dec
shlb
mov
inc
sub
add
xchg
out
aad
lock
push
dec
jg
jo
push
pop
mov
lcall
jle
inc
scas
adc
jne
fdivp
movzbl
pop
out
outsl
cli
cmpsl
stos
lods
or
aad
cli
mov
shl
cmc
mull
je
pop
movl
sti
cmp
cmp
jmp
fsubrs
jnp
pop
in
divl
push
mov
in
xchg
loope
xchg
testl
dec
push
rcll
cwtl
testl
imul
rclb
icebp
es
inc
sbb
lahf
popa
or
dec
dec
push
les
xor
aad
aam
movsb
add
push
sbb
push
ret
push
mov
cwtl
cmp
jecxz
pop
loope
mov
sbb
push
mov
push
mov
sub
out
or
int
push
mov
fcomi
sarb
push
scas
mov
outsb
push
adc
subb
movsl
ds
repz
lahf
test
scas
or
pop
mov
popa
sbb
xor
ret
loop
mov
enter
popf
push
out
xor
dec
xor
clc
cli
jl
mov
cmp
leave
ltr
out
xchg
mov
iret
mov
gs
pop
aam
lods
or
pop
pop
xchg
jb
or
pushf
sarb
pop
ficoml
or
sub
inc
cwtl
jge
into
xor
lret
sbb
out
xchg
rdrand
pop
jp
pusha
call
push
stc
jbe
loopne
push
mov
mov
femms
adc
adc
push
fwait
test
jo
leave
popa
adc
mov
xchg
nop
inc
cmpsl
xchg
jp
into
jae
mov
repz
int
adc
or
and
ret
je
repnz
dec
xchg
adc
maxps
pop
sbb
in
adc
mov
sbb
pusha
jecxz
pop
mov
fidivs
ss
test
xor
aas
cmp
pusha
or
iret
push
sbb
inc
push
mov
rclb
fcomps
adc
fcoms
call
dec
repnz
mov
mull
mov
cmp
mov
jle
lea
idivb
leave
testb
subl
lret
leave
sub
loope
rclb
pushf
decb
insb
or
stos
test
sbb
enter
adc
add
pop
cltd
jb
adc
pusha
stc
stos
add
fists
scas
pop
jbe
jns
dec
idiv
hlt
mov
xchg
hlt
das
cli
ss
adc
dec
and
sbb
jg
aam
jle
test
or
xchg
push
inc
ja
shll
shl
mov
data16
mov
pop
fidivl
mov
aam
test
lret
test
and
arpl
push
arpl
xor
xchg
push
jp
lds
or
adc
mov
sub
pop
or
lret
clc
sahf
dec
mov
inc
lret
sub
sub
jg
and
xor
leave
outsl
ss
push
or
mov
lcall
pop
xchg
call
daa
leave
sbb
hlt
repnz
xlat
or
add
and
popf
sar
fsubp
jmp
cmp
mov
fmuls
bound
pop
xchg
mov
or
roll
jl
popf
xor
fistl
push
ret
aam
loopne
mov
push
dec
add
cli
scas
mov
popa
lahf
inc
jge
lea
shll
in
mov
fs
xor
push
add
mov
pop
cs
inc
cmpsl
dec
clc
xchg
in
xchg
push
xchg
cmp
insb
dec
sbb
jle
repz
je
hlt
and
push
xor
stc
jp
push
jae
mov
outsb
jo
movsl
shl
sarl
add
xchg
sarb
or
or
out
mov
inc
inc
scas
fidivrs
pop
dec
out
jnp
or
or
dec
mov
int3
insl
adc
sub
movsb
popf
push
cmpsb
xor
in
pop
xor
mov
jb
push
or
loopne
xlat
and
push
push
sti
push
filds
out
test
movsb
aas
mov
cmp
mov
lods
cmpsl
stos
push
jne
add
adcb
call
dec
add
outsb
cmp
iret
in
stc
adc
negb
call
rorb
lahf
mov
mov
in
adc
inc
dec
pandn
rolb
jp
push
scas
xor
sub
cmp
xor
xchg
lock
mov
sbb
or
pop
out
mov
push
cmp
aam
rclb
add
movsl
popf
push
aas
cld
mov
pop
lods
enter
xor
scas
xchg
mov
movsl
repz
call
les
jo
sbb
dec
pop
adc
and
xor
lahf
mov
sub
or
iret
mov
xor
dec
jmp
std
cwtl
add
pop
sbbb
mov
mov
mov
loope
inc
in
imul
pop
inc
xchg
test
cld
and
lds
cwtl
lds
xor
das
ds
gs
and
dec
cmp
pusha
pop
or
ffreep
clc
jl
pop
xchg
std
pop
add
pop
mov
orl
aam
cmpsb
inc
sub
mov
test
sbb
fsub
das
mov
lret
gs
jl
es
out
stos
aaa
or
scas
pop
cwtl
icebp
or
mov
out
and
stos
push
aad
call
push
dec
push
ljmp
mov
dec
sbb
mov
and
cwtl
ljmp
or
adc
fadd
inc
punpckhwd
lret
or
xor
sahf
out
inc
pop
mov
sbb
inc
jecxz
outsl
rol
pushf
and
fnstenv
out
jmp
popa
xchg
add
fcomi
xacquire
cmp
sbb
in
out
int
sarl
mov
jns
dec
and
lret
xchg
cmp
pop
jg
leave
sbb
movsb
jo
cmpsl
and
pop
mov
jmp
or
inc
fldt
les
ja
inc
mov
dec
mov
pop
mov
int3
mov
mov
rcrl
dec
inc
je
rol
mov
xor
cltd
and
ret
aaa
outsb
push
mull
add
jecxz
mov
rcl
out
jmp
mov
pop
call
jg
pop
cmp
jne
lock
push
sub
mov
fsts
add
cmpsl
xchg
pop
jp
test
outsl
dec
dec
es
xor
mov
ret
xchg
xor
mov
inc
shlb
ds
push
outsl
jbe
mov
inc
sub
pop
scas
out
dec
or
movsl
cmc
mov
les
bnd
mov
callw
stos
and
pshufw
scas
adc
sub
daa
dec
mov
nop
fnstcw
pushf
mov
xchg
gs
int3
das
ja
and
stc
sub
mov
mov
mov
gs
fs
pusha
nop
bound
dec
sti
and
jbe
and
enter
test
arpl
rorl
popf
mov
push
jae
imul
add
bound
jmp
loopne
inc
xchg
mov
imul
or
ds
xor
pusha
dec
mov
mov
mov
ds
push
cmp
cld
pop
icebp
jmp
out
xor
and
sub
pop
ret
cmp
test
out
bound
sbb
jno
lods
pop
xchg
add
hlt
daa
scas
mov
xor
imul
cmp
movb
sub
cmp
pop
out
inc
fists
and
in
sar
dec
xor
ja
add
adc
inc
mov
test
test
repz
dec
pop
jmp
imul
scas
fdivl
lahf
fcomps
cltd
pop
imul
jecxz
add
jmp
push
mov
insb
or
and
movsl
xchg
lds
adc
addl
fisttpll
cmp
xchg
push
cmp
or
and
inc
mov
inc
setge
cwtl
movsl
ret
test
rcl
addr16
xchg
fldt
int
mov
pop
cmp
clc
aad
pop
mov
adc
jp
lcall
pop
dec
push
add
mov
xor
pop
mov
repz
xchg
clc
mov
outsl
jae
arpl
inc
pop
cmp
sub
out
aam
cmpl
pop
fstpl
bound
jae
stc
daa
andl
pop
subb
stc
pushf
cmc
pop
mov
xchg
jecxz
pop
test
push
movsl
jno
cmp
inc
addr16
orl
adc
out
popl
bound
pop
out
push
movsb
fbstp
sub
rcrl
ljmp
jp
dec
mov
test
xchg
dec
cs
sti
lahf
add
cltd
fisttpll
pusha
bound
cld
pop
scas
dec
negl
push
fs
cmpsb
dec
adc
or
cmpsl
push
iret
daa
out
xor
insl
adc
cmp
sub
jo
or
mov
and
jl
mov
adc
out
loop
hlt
inc
mov
mov
xor
iret
out
push
in
cmp
jecxz
cs
push
std
add
imul
inc
cmp
js
mov
cmp
jb
xchg
jnp
pop
mov
mov
adc
insl
add
mov
pop
xchg
in
or
add
mov
sub
sbb
push
push
cltd
dec
in
aaa
push
in
jmp
or
dec
lcall
rclb
dec
movsb
and
lret
gs
cwtl
inc
cltd
adc
dec
out
mov
lods
or
xlat
cmp
pop
lahf
inc
pop
insl
mov
ja
imul
pop
jae
incl
icebp
or
loop
push
cmp
dec
jns
mov
sub
adc
outsb
xchg
jno
dec
pop
pushf
xchg
stos
jle
js
add
das
stos
push
push
push
adc
mov
pop
mov
popf
sti
int3
nop
cmpsl
jp
jp
pop
ja
xchg
cwtl
push
jno
inc
aad
imul
pop
add
test
rolb
jae
jb
push
jg
dec
jle
pop
fstl
call
mov
imulb
jb
nop
in
aam
adc
in
leave
out
out
in
mov
call
xor
mov
mov
ja
out
sti
push
pop
mov
addr16
popl
fcompl
cli
push
sbb
icebp
std
sub
jnp
xor
and
or
fiaddl
adc
mov
pop
pop
int
adc
imul
push
lock
mov
inc
xchg
jbe
inc
jae
stc
lahf
fwait
leave
jmp
movsl
cmpsb
test
mov
adc
mov
jb
push
fcomps
adcl
sar
pop
xchg
push
lret
mov
adc
lret
cmpsl
daa
lahf
or
adc
ja
push
mov
xchg
and
mov
nop
int
lret
mov
or
lret
sbb
or
in
pop
push
jb
lods
and
and
add
ljmp
jno
inc
dec
jne
rcrl
stos
push
clc
mov
inc
push
xor
repnz
in
push
and
call
in
pop
inc
sub
jno
and
xchg
mov
ja
mov
xchg
push
loopne
mov
pusha
outsl
xchg
fdivs
mov
or
inc
pop
jae
je
mov
cmc
mov
add
imul
enter
sbb
adc
ret
push
cmp
push
push
inc
dec
fisubrl
cmpl
sub
repnz
loop
std
sbb
ss
popf
xlat
sub
pop
stc
popa
addr16
jmp
hlt
dec
incb
out
dec
imul
xor
int
leave
cwtl
arpl
jle
sbb
dec
xchg
pop
enter
pop
or
roll
xor
dec
hlt
std
adc
loope
inc
ret
les
mov
push
pop
xchg
adcl
loope
fcmovnu
dec
push
mov
dec
stos
jbe
and
fiadds
push
sub
mov
scas
jae
mov
cmp
stos
cmp
push
inc
jp
xor
mov
cmp
mov
rcll
jp
sar
daa
arpl
xor
insl
xorb
push
cmpsl
push
roll
push
stos
mulb
lds
xor
mov
push
lret
lret
inc
addb
rorb
aaa
inc
mov
ret
xchg
in
mov
cli
je
sbb
popf
repz
je
fwait
mov
pop
jge
fsub
das
aas
das
xchg
sub
cmp
jecxz
xchg
mov
mov
call
inc
or
outsl
sub
xor
or
mov
mov
inc
mov
setl
or
rolb
in
adc
ds
scas
adc
mov
cmp
lret
call
lods
add
insl
mov
out
push
into
mov
add
iret
push
in
loopne
add
pushf
lock
ret
inc
movsb
sub
lahf
in
repnz
inc
stos
xchg
movsb
cli
mov
sahf
cltd
sbbb
jnp
inc
addl
and
cld
imul
add
jg
xor
test
fisubrs
notb
fstpl
push
lcall
jb
gs
push
dec
jp
imul
mov
lret
push
or
mov
and
out
popf
sbb
mov
sbb
cmp
mov
js
in
mov
cltd
push
push
jb
or
in
push
scas
cwtl
shlb
adc
adc
adc
bound
fsubr
mov
ret
scas
or
out
mov
ljmp
stos
in
and
fs
dec
adc
enter
out
movsb
roll
pop
jecxz
dec
cmp
aam
sub
hlt
fnsave
jno
stc
arpl
cmpl
add
dec
cmpsb
dec
or
mov
pop
in
call
add
mov
adc
fldcw
daa
cli
jg
cld
test
cmc
lods
cmp
int
mov
fwait
mov
push
cltd
sbb
inc
pop
cwtl
mov
imul
cmp
cmp
std
mov
sbb
mov
mov
adc
leave
mov
mov
pop
jne
dec
adc
jl
lcall
sarb
nop
lahf
cmp
inc
xlat
xor
mov
push
ss
std
adc
test
cli
cmpsl
int3
repnz
push
mov
cli
add
dec
add
ja
outsl
mov
repnz
sub
adc
jbe
fldcw
or
data16
cmp
add
jb
sub
mov
jae
or
pusha
adc
add
sti
fs
cmp
adc
sub
cmpsl
imul
add
ja
jmp
adcl
jge
pop
xchg
pop
fptan
scas
aaa
out
or
xchg
mov
sti
int
insb
mov
xchg
mov
je
inc
add
mov
loop
xlat
fidivrl
sub
pop
je
outsl
cld
fsubrs
sub
pop
xor
mov
mov
les
jnp
push
dec
fnstsw
fists
pop
sbb
xchg
popf
cmpsl
push
jecxz
sbb
mov
xor
push
add
bnd
push
inc
inc
or
js
mov
mov
inc
push
jb
negb
cmc
repz
imul
mov
sbb
pop
int3
cli
in
push
add
or
jno
shll
lret
jae
add
aad
cmp
fistpl
arpl
push
mov
loop
into
lods
outsb
fistpll
lods
loope
jmp
outsl
sahf
enter
cmp
push
and
xchg
loope
aam
testl
idivl
and
cmp
jae
xor
lcall
adc
mov
incb
mov
lret
mov
ss
mov
and
and
jne
inc
lds
mov
ds
out
and
daa
repnz
xchg
add
push
into
jmp
pop
pop
fistl
arpl
adc
dec
or
orb
pop
mov
pop
pop
jge
js
ja
push
test
inc
push
cmpsl
and
scas
lds
mov
sub
add
sub
pop
insl
sahf
das
push
fcoml
mov
cmp
dec
movsb
or
jnp
mov
pop
subl
inc
gs
dec
sub
ret
and
add
xchg
ret
enter
mov
dec
adc
and
xchg
fidivrs
sbb
fdivs
push
sub
sar
cmp
mov
jecxz
xor
mov
lods
sub
lock
lods
bound
aad
scas
add
lret
stos
inc
mov
adc
pop
fadd
adc
push
in
and
and
lds
shlb
mov
negl
mov
mov
jno
in
jnp
out
xchg
pop
dec
aaa
sbb
xlat
mov
gs
lret
loope
mov
data16
ja
mov
mov
aad
pushl
adc
jb
add
int3
pop
xor
scas
push
rol
jne
and
stc
mov
sahf
mov
jo
xor
pop
push
push
jle
xchg
mov
push
cmpsb
leave
push
jg
loop
mov
mov
cmp
push
in
cmpsl
bound
ljmp
popa
in
xor
pop
fwait
or
xchg
push
je
movsl
inc
adc
mov
ljmp
mov
sbb
push
xor
lret
jmp
int3
adc
gs
add
push
imul
arpl
pop
mov
test
pop
push
xchg
pushf
cmp
mov
fidivl
sbb
fmuls
pop
roll
xchg
fisttps
mov
xor
fwait
dec
cmp
add
sub
jne
pop
sbb
cmp
sbb
push
xor
loopne
scas
cmp
dec
xchg
mov
jecxz
hlt
mov
or
inc
je
inc
filds
call
js
in
jmp
daa
mov
cmp
mov
pushf
mov
inc
sbb
dec
stc
mov
or
mov
sub
jp
mov
inc
jae
add
inc
adc
pusha
loopne
idivl
adc
mov
out
push
loop
pop
lret
jb
adc
xlat
movsb
mov
mov
lcall
popa
adc
jno
scas
sbb
and
fnstcw
daa
cmp
aaa
adc
aas
mov
into
xchg
jb
pop
frstor
or
xor
bound
pusha
jne
lret
dec
add
stos
sti
inc
mov
std
into
xchg
std
push
lea
or
xor
repz
inc
es
add
in
iret
scas
inc
pop
test
bound
mov
ja
xor
mulb
dec
in
cmpl
jns
cltd
jo
push
imul
sbb
imul
mov
cltd
int
clc
call
ljmp
mov
jb
jle
ja
ret
sub
pop
mov
lds
fists
mov
insl
sub
jecxz
daa
cmp
cld
adc
push
hlt
addr16
mov
enter
xchg
mov
loope
and
in
push
mov
aad
aad
out
add
sub
addr16
xor
inc
jae
cltd
scas
pop
cwtl
sbb
push
daa
popa
pushf
movsl
add
or
cmpsl
cmp
fwait
repz
repnz
je
daa
xor
mov
repz
xchg
movl
cmpb
aas
xchg
add
dec
or
mov
pop
hlt
sbb
or
push
mov
mov
out
bound
sub
jge
jge
sbbl
psubusw
mov
xor
imul
xchg
xchg
cmp
arpl
roll
in
sahf
push
push
out
xorl
pop
cli
push
inc
add
test
imul
dec
fisttpl
scas
cmp
jno
mov
filds
pop
fxch
dec
repz
mov
cmpl
or
pop
adc
pop
das
out
in
lahf
fsubrs
and
mov
pop
and
push
mov
testb
push
in
mov
arpl
icebp
loope
fcmovu
inc
call
xchg
rcll
xchg
lea
fiadds
faddl
push
imul
repz
add
mov
lahf
jg
imul
movsl
roll
in
add
push
dec
xchg
add
call
fimull
in
add
sbb
mov
sub
dec
pop
out
push
mov
push
jp
inc
jle
mov
inc
inc
adc
add
cs
or
cs
dec
imul
mov
jecxz
cli
lods
enter
mov
inc
add
cwtl
mov
mov
inc
lahf
decl
shl
or
dec
pushl
inc
adc
xchg
bound
jo
out
dec
mov
and
mov
movsb
mov
dec
lahf
dec
xor
or
mov
mov
push
lods
xor
jle
and
inc
out
dec
sbb
and
inc
xchg
loop
mov
mov
in
mov
rolb
stos
mov
sti
stos
push
rcr
fs
insb
dec
jge
ret
sub
sbb
or
mov
test
sbb
lock
push
jb
out
subl
jmp
jns
xor
jp
ret
cmp
stos
cmpsb
cmp
xor
xchg
mov
push
shlb
cwtl
push
jb
lahf
aas
ja
sub
adc
or
pop
jo
sbb
adc
jmp
in
or
fcompl
shlb
xor
xchg
xchg
popa
fidivl
rcrl
xchg
add
xor
adc
sar
dec
in
pop
push
inc
adc
mov
clc
aam
cwtl
ret
and
xchg
enter
mov
mov
and
lcall
push
add
hlt
sub
lcall
adc
inc
lcall
in
mov
sub
data16
pusha
cmp
push
adc
mov
scas
imul
rcrb
insb
jno
cmovnp
int
cmpsl
les
and
loop
gs
mov
frstor
jge
shrl
add
movsl
loop
and
lahf
popa
shrb
sahf
out
push
push
and
into
incl
push
or
and
fcomi
jmp
or
sbbl
add
mulb
and
notb
sbb
movsl
xchg
mov
nop
xor
int3
loope
stos
mov
lret
and
fidivl
cmpsl
or
sub
out
enter
pop
xchg
ficoms
sbb
adc
and
sarb
mov
add
sahf
int3
pop
nop
ss
cmc
mov
xchg
movsb
push
fldcw
jmp
add
fldenv
pop
bound
loopne
icebp
xor
adc
cmp
push
jmp
or
push
pop
mov
stos
out
adcl
leave
pop
push
push
and
cmpsb
imul
andl
cmpsl
jle
jp
pusha
sbb
enter
sbb
sub
push
inc
push
enter
into
xchg
js
push
sub
mov
out
sbb
test
ret
mov
es
fld
pop
int
out
cmpsl
mov
sub
sub
mov
call
xor
adc
pop
sahf
xor
test
test
xor
xchg
cmc
adc
xorl
lret
adc
pusha
push
cmc
inc
or
push
je
adc
stos
inc
cltd
pop
enter
jmp
stos
clc
mov
dec
mov
mov
gs
test
sbb
adc
sbb
jno
push
jecxz
mov
jae
lcall
gs
xor
pop
cltd
in
mov
xchg
mov
mov
ss
push
adc
cmp
push
mov
mov
sub
jecxz
push
or
rorb
inc
lcall
cs
xchg
test
add
shlb
jbe
push
dec
push
or
out
jp
inc
out
or
and
push
inc
adc
stc
jno
xchg
cmpl
stos
es
xor
js
xchg
addb
sbb
xor
inc
dec
and
sub
testb
and
popf
mov
loop
jo
stos
cmp
push
or
out
add
jmp
nop
push
and
mov
pop
ja
dec
mov
arpl
popf
adc
sahf
scas
jl
xor
fisttps
and
nop
pusha
int3
pop
adc
push
sahf
pop
sbb
mov
lods
stc
sbb
repnz
ja
pop
arpl
scas
subb
xor
test
fdivl
and
or
push
mov
scas
addr16
inc
lods
into
jl
test
mov
pop
sbb
ljmp
lods
lods
dec
pop
push
mov
cld
lcall
mov
mov
xor
sbb
je
je
test
add
sub
inc
sub
inc
lock
std
and
andb
rcrb
div
mov
xchg
mov
mov
push
and
and
lcall
jge
jle
sbb
popa
inc
rcrl
mov
xchg
mov
stos
adc
insl
jecxz
jg
sbb
adc
mov
mov
dec
mov
jecxz
add
cltd
push
sub
xchg
xor
mov
xor
lret
iret
iret
mov
test
shll
subl
pop
xor
hlt
push
inc
outsb
jbe
jno
pop
loop
xchg
shlb
sbb
mov
add
push
pop
inc
out
cmp
rcrb
cmp
addl
mov
lea
xchg
sti
inc
fs
pop
adc
cmpsb
int3
push
repnz
loop
insb
outsb
jge
mov
sti
jge
dec
mov
pusha
pop
imul
pop
insb
and
mov
and
pop
mov
mov
andl
push
lods
movsl
add
inc
add
add
ret
push
xchg
dec
cmpsl
lea
cltd
insl
stos
sub
fs
lock
mov
push
or
ror
std
stc
dec
and
fists
insl
orl
ss
xchg
pusha
subl
aas
jl
adc
sbb
push
or
ds
cmp
sub
inc
push
imul
in
roll
cmc
sub
mov
in
push
jnp
outsl
push
insl
test
and
mov
xchg
sbb
pop
jecxz
push
mov
dec
dec
inc
xor
jno
in
sbbb
orb
cwtl
andl
fcoms
rolb
xor
dec
jg
call
cmp
cld
lea
or
pop
add
mov
insl
jo
add
xor
out
jno
inc
inc
pop
mov
xor
mov
push
shl
hlt
mov
enter
aad
out
cmp
popf
stos
aas
popl
ror
cmpsb
sbb
jecxz
dec
ficomps
or
out
push
mov
fsubl
jl
mov
sbb
xchg
les
xchg
stc
addr16
out
das
mov
into
add
dec
fwait
ja
jge
xchg
xchg
dec
int
lahf
mov
nop
in
xchg
bound
xchg
adc
stos
xor
imul
js
sbbb
sub
dec
mov
aaa
jae
pop
push
insb
and
rolb
sar
fstl
pop
jmp
xchg
sbb
pop
pop
or
fists
and
mov
pop
fwait
mov
cld
orl
adc
xchg
leave
add
sub
xchg
jb
cmp
add
mov
sub
jbe
sub
push
xchg
or
and
mov
add
loopne
pop
mov
pop
push
or
into
cmp
loop
cmc
aad
adc
lahf
dec
ja
in
mov
cltd
enter
add
and
jmp
sbb
ja
and
js
loop
loop
and
pop
mov
ss
out
push
lds
aam
adc
and
pop
jne
add
into
int3
test
cltd
test
mov
lods
imul
bnd
movsb
mov
in
xor
adc
shll
int
mov
andb
add
xchg
xchg
sub
test
fsubl
imul
or
adc
ljmp
jp
insb
sub
lcall
popf
sub
add
jg
jnp
mov
dec
mov
or
popf
insl
inc
aam
mov
dec
in
xchg
jnp
mov
mov
mov
or
clc
loop
add
mov
out
xchg
std
pop
pop
push
and
cmc
push
aaa
pop
iret
sub
push
cmp
cmp
pop
outsl
pop
filds
push
jl
aas
int3
sbb
clc
adc
xchg
stc
and
roll
std
inc
push
mov
nop
out
mov
fmul
cmp
dec
ret
sahf
test
cld
out
into
pusha
jb
pop
roll
dec
and
pusha
mov
mov
mov
xor
mov
cmp
add
or
mov
stos
repnz
inc
pop
sahf
sub
push
and
cltd
jmp
decb
and
xchg
adc
and
jnp
jns
add
sbb
dec
movb
or
int3
loop
adc
xchg
in
rcr
divb
mov
xchg
mov
add
in
mov
lret
pop
mov
pop
or
lea
lret
sbb
mov
cmp
pop
cmp
jge
shlb
fs
mov
mov
shrb
lea
push
arpl
mov
mov
xor
adcb
jnp
jnp
shr
dec
outsb
mov
and
adc
movsb
sbb
popa
jle
xor
sti
sbb
dec
loopne
mov
and
adc
cmp
lock
mov
and
rcll
dec
jecxz
lea
fimull
jg
push
fwait
and
fxtract
ds
and
and
dec
inc
adc
mov
xor
pop
push
test
sbb
and
sub
fisubl
sub
adc
popa
or
push
imul
je
jb
inc
or
pushf
out
push
mov
push
xchg
mov
andl
test
sub
sub
icebp
movsl
lds
js
and
add
lcall
lret
dec
fildl
aas
adc
mov
jmp
ss
sub
imul
xchg
push
pop
or
rorl
rcr
pop
sti
outsl
int
imul
mov
mov
inc
and
push
jge
jle
out
cltd
pop
cltd
stos
cmp
sahf
lods
dec
adc
pop
cmpsb
xchg
sbb
in
sub
aam
es
jo
mov
mov
mov
dec
fidivrl
adc
decb
jge
add
jecxz
mov
push
out
xorl
loopne
fldl
mov
xlat
inc
or
xchg
repz
jge
outsl
insb
jo
dec
les
cwtl
or
cli
andps
cmp
sub
add
int
notb
mov
ss
pop
out
jmp
or
dec
and
out
pop
mov
clc
pop
addr16
add
mov
push
jns
stc
jns
lret
fbld
ja
pusha
in
fs
std
aaa
dec
xchg
jp
outsb
repz
or
mov
ljmp
icebp
std
ja
dec
dec
movsb
dec
stos
and
lock
xor
stos
push
pop
icebp
sub
out
data16
mov
push
pop
test
cmp
jmp
popa
mov
fsts
jo
cmp
out
fchs
mov
insb
push
sbb
jmp
xchg
ja,pn
mov
lock
aam
add
mov
adc
arpl
mov
pop
or
out
sub
addr16
add
mov
inc
xor
sahf
jne
repnz
dec
xchg
bound
dec
insl
fimuls
dec
hlt
cmp
push
ljmp
jg
loop
dec
dec
shrb
fcoml
pop
push
inc
or
in
bound
push
and
and
mov
xchg
ds
imul
loope
add
sub
out
out
mov
sub
loope
lret
daa
jl
sbb
pop
sbb
bound
or
cmp
inc
lods
mov
lock
lret
pop
mov
iret
jo
enter
xor
jb
add
adc
and
push
cmp
int
push
pop
and
mov
repnz
dec
fdivr
add
idivb
inc
jl
dec
jns
inc
sbb
aam
dec
sbb
scas
inc
push
jmp
lods
jmp
pop
shrl
in
dec
sbb
inc
xlat
out
cmp
jnp
dec
push
xchg
add
lret
pop
roll
es
int
mov
xchg
rep
xor
xchg
mov
outsl
stos
int
into
icebp
mov
xor
jl
dec
sub
stos
lahf
or
repz
push
shrb
jnp
mov
out
mov
cmpl
mov
rcrl
ret
test
fstpt
inc
cmp
add
shlb
int3
adc
fiaddl
mov
movsl
xchg
xchg
ja
sarl
aam
jno
pop
or
cmpsb
inc
cmp
xlat
cmpsb
enter
cmp
loope
outsl
mov
dec
and
jp
rorl
add
push
xchg
push
in
movsl
cmp
cmp
or
pop
inc
aas
cmp
mulb
popa
adc
cli
xor
out
adc
repz
pusha
test
subl
mov
fs
xchg
lea
dec
in
pop
cmp
outsl
or
sarl
cmpsb
adc
jnp
insl
sub
add
or
pop
ljmp
test
xchg
imul
or
inc
aam
pop
aas
mov
stos
cmp
fimull
jnp
jp
or
xchg
xchg
add
fsubr
data16
xor
ficompl
fistps
sar
sbb
fnstcw
incl
fyl2xp1
mov
sti
lret
fucomp
leave
repnz
sarb
lods
mov
jae
cli
out
dec
sbb
in
out
pop
lock
dec
ljmp
nop
mov
cmp
pop
in
movsb
sub
bound
lret
jge
jl
mov
adc
fisubrs
js
add
mov
out
jl
mov
fs
inc
jl
cmp
aas
sbb
push
stc
cli
xchg
mov
jb
imul
jne
rcrl
push
je
cld
push
mov
lret
jo
repz
sbb
inc
jecxz
cwtl
sub
cli
sbb
fsubs
popa
sbbl
scas
dec
mov
test
pop
das
popa
mov
stc
jb
rcl
cmp
mov
push
ret
dec
testl
fidivrl
jle
loopne
idivb
stos
icebp
or
sti
shrb
ffree
ss
or
sub
jbe
and
xchg
movsl
mov
or
xlat
mov
sbb
push
aas
lea
mov
jb
sbb
lret
add
push
dec
dec
fwait
sbb
popf
inc
int3
js
cmpsl
lods
jno
fcmovnbe
xchg
es
inc
nop
jae
pop
sbb
fwait
adc
cmp
jg
ret
dec
xorl
inc
pop
xchg
je
cld
sub
outsb
stos
lahf
lahf
loopne
or
popf
xor
or
pop
fsts
or
pusha
sbb
jnp
insb
fdivs
stc
lea
repnz
aad
xor
dec
shll
push
mov
jg
mov
jg
mov
pop
or
mov
clc
mov
or
inc
mov
or
fildl
xchg
js
xor
add
jne
subb
xchg
loopne
int
out
test
negl
cmc
fcoms
or
arpl
test
pop
push
sbb
imul
jae
sarl
stos
imul
jno
test
sarl
adc
cld
dec
mov
jge
ja
inc
stos
jae
push
iret
shlb
push
jne
sbb
cmp
outsl
push
testl
xchg
push
std
push
out
cmp
jmp
ret
dec
mov
sbb
fucomi
add
adc
xor
push
cmp
outsl
lds
mov
pop
sbb
push
mov
mov
out
mov
divb
push
jbe
std
cltd
push
sub
jno
pop
imulb
lcall
adc
inc
das
hlt
inc
ret
fs
scas
push
mull
repnz
adc
cmp
sti
adc
mov
sub
jae
sub
cs
pop
sub
jo
xchg
xchg
or
mov
ds
and
mov
rorl
testl
shll
xchg
pop
movsb
jbe
call
in
dec
cmpsb
sbb
es
lds
cmp
and
cmp
daa
sbb
test
push
mov
xchg
je
mov
into
sub
mov
mov
icebp
mov
in
loope
xchg
int3
mov
ret
mov
push
es
mov
movsl
stos
ds
int3
dec
jb
imul
scas
mov
cld
test
pop
pop
cmpl
xchg
sub
stc
sbb
aas
add
mov
jle
dec
xor
push
add
sbb
mov
shlb
jnp
cmp
arpl
aaa
mov
pop
xchg
enter
sti
mov
xchg
mov
push
xorl
rcrl
mov
push
imul
jg
xor
ljmp
pop
pop
xchg
push
and
gs
sbb
mov
xchg
sbb
loope
xchg
inc
push
and
mov
les
lock
fnstcw
popf
jge
xor
xchg
xor
mov
pusha
out
mov
and
mov
fdivl
aad
andl
nop
lea
lods
mov
cwtl
add
out
cmp
adc
nop
sbb
dec
out
jno
mov
pop
sub
imul
je
or
dec
arpl
test
ffreep
out
add
xchg
in
loopne
not
fsubs
jns
push
mov
mov
dec
adc
jecxz
adc
int
or
xor
movsl
hlt
adc
mov
testl
mov
jp
cli
dec
cltd
jle
push
hlt
add
test
mov
pop
add
or
scas
mov
mov
enter
into
cwtl
xchg
insl
cltd
sbb
out
pop
xlat
mov
jnp
mov
jnp
filds
pop
outsb
lea
mov
scas
fsubrs
lods
ret
ret
cltd
imul
push
xchg
or
movsb
testl
fcmovnb
push
loope
int
or
ja
xor
add
jb
scas
mov
push
mov
pop
mov
cmp
scas
mov
mov
pop
push
adc
sahf
ret
dec
xchg
xchg
mov
xor
fs
sbb
lret
mov
sub
das
mov
sti
push
ss
sub
jne
or
sbb
xchg
aam
movsb
cmc
out
mov
sahf
dec
sub
test
mov
jl
cmp
sbb
dec
push
pop
mov
hlt
stc
xor
mov
mov
xor
popf
mov
je
add
call
xchg
mov
and
xor
or
jp
mov
mov
push
mov
inc
sub
jecxz
mov
out
cld
mov
test
iret
push
ds
iret
cmpb
test
sbb
std
cs
jno
test
push
sbb
movsb
lahf
fisubs
pop
add
xor
lock
add
packssdw
mov
sahf
xorb
fsub
insb
in
mov
adc
or
icebp
sbb
dec
sbb
jnp
ret
mov
adc
jbe
jo
fsubrl
sbb
xchg
lea
pop
and
add
sti
std
les
lock
sbb
xchg
dec
insb
add
mov
jo
xor
fs
mov
mov
lcall
pushf
out
push
pop
je
adc
ja
or
mov
mov
pop
ret
idivb
mov
into
push
aad
mov
in
pop
mov
or
sbb
fisubrs
and
pop
and
clc
push
xchg
pcmpgtw
jbe
sbb
pop
clc
movsb
add
cmpsl
xchg
pop
mov
lahf
push
xchg
rclb
push
aaa
and
out
inc
popa
jmp
xor
aad
lock
jp
loope
int3
dec
fldenv
or
out
in
aas
xor
dec
xchg
add
push
flds
sbb
add
push
cwtl
je
movsl
pop
movsl
dec
gs
shll
dec
xor
sub
fs
xchg
adc
jecxz
lds
lahf
add
or
adc
mov
mov
iret
xchg
pop
jmp
mov
lcall
jle
jne
pop
iret
xorl
mov
pop
std
sub
jno
loope
adc
cmp
test
xor
or
scas
int
nop
or
xchg
repz
call
xchg
and
or
fs
and
xchg
repz
rcrb
pop
mov
arpl
cmc
jno
pop
out
xlat
repnz
cmp
push
shlb
or
stc
jno
or
scas
test
pop
mov
push
add
adc
dec
inc
mull
addr16
adc
testb
pop
loope
fstp
bound
xchg
pushf
dec
adc
test
or
cmpsb
mov
xchg
into
mov
mov
mov
inc
xlat
xchg
int
imul
in
divb
ror
test
lds
push
imul
add
out
cwtl
pop
and
in
mov
flds
scas
fmull
mov
out
aad
andb
sarb
xor
ret
sbb
clc
xchg
xchg
subl
inc
shl
pop
clc
arpl
dec
test
push
outsl
stos
es
movsb
out
adc
xchg
scas
dec
pop
xchg
cmp
mov
shlb
inc
test
or
sbb
stos
and
call
or
imul
imul
pop
sbb
hlt
out
fildl
jns
push
inc
imul
sub
and
imul
adc
fwait
mov
dec
ljmp
mov
cld
shrl
in
fstl
std
adc
mov
add
enter
leave
leave
stos
out
scas
mov
ret
punpckhdq
and
aam
push
adc
sbb
dec
xor
mov
clc
adc
xor
push
sbb
lock
dec
into
dec
xchg
shll
imul
mov
jo
jo
out
insb
pop
jle
cmp
imul
ja
mov
dec
xchg
mov
testl
outsb
adc
mov
mov
rcl
cmc
push
out
cs
push
mov
lods
and
pop
lea
and
in
bound
dec
test
dec
dec
xchg
push
xlat
mov
mov
rclb
cmpsl
icebp
scas
repz
cmp
xor
mov
mov
pop
add
mov
dec
popa
jmp
push
push
and
add
mov
sub
mov
aas
fstpt
iret
icebp
call
push
xchg
xchg
mov
add
loop
ds
xchg
cmp
adc
sub
sahf
xorb
and
or
push
xchg
and
cmp
inc
inc
cli
aad
sti
roll
out
push
add
xchg
in
mov
das
ret
dec
lahf
inc
mov
sti
or
pop
xor
call
roll
fnstcw
cltd
and
cmpsl
faddl
les
pop
mov
mov
aas
push
pop
fwait
lea
pop
ss
fsubrp
sub
jmp
sarl
stc
out
cmp
stos
mov
sbb
movsb
lds
add
mov
mov
dec
jg
jp
lfs
adc
pop
ror
into
pop
mov
jne
ret
ds
dec
sub
and
push
pop
jg
out
scas
imul
aaa
or
lret
or
cmc
dec
lock
adc
jg
or
mov
xchg
outsl
in
scas
mov
xor
leave
cmpsb
cmp
xor
dec
ds
test
xor
call
out
mov
dec
addr16
cmpb
shl
mov
adc
lock
lcall
mov
test
fidivrs
xchg
or
int
sbb
mov
js
nop
xchg
stos
sar
cmp
stos
cmp
test
mov
pop
es
push
in
jl
inc
xchg
fdivrs
js
sbb
aam
mov
pop
jae
ret
test
mov
xor
mov
xor
sbb
out
mov
rolb
push
mov
dec
and
loope
and
sti
add
mov
pop
pop
cwtl
dec
movsb
repz
sub
cltd
cmp
leave
add
sbb
adc
lret
push
leave
and
inc
adc
int3
inc
leave
cmp
mov
es
xchg
out
and
cmp
mov
add
lock
sbb
ss
sbb
shrb
push
cwtl
cmp
inc
movsb
mov
sti
loopne
jb
rcrb
in
outsb
lds
mov
sbb
jle
push
movsl
hlt
add
lea
adc
add
incl
nop
jb
add
cmpsb
xor
stos
cli
xchg
js
mov
inc
ds
insl
sub
fwait
and
movsb
cmpsb
xchg
rclb
add
or
ret
sbb
mov
out
hlt
scas
mov
daa
add
mov
add
cmp
sub
fmull
sub
xor
repz
subl
mov
mul
aas
inc
les
ret
sub
inc
mov
mov
xchg
enter
mov
jmp
jbe
dec
in
out
arpl
push
sahf
pushf
jecxz
imul
push
sti
mov
movsl
add
test
mov
js
divl
insl
cmp
cmp
fnsave
lds
mov
inc
mov
mov
in
lret
js
fwait
sub
ja
sub
lods
lahf
xor
cltd
aas
inc
inc
add
or
pop
cld
push
dec
addr16
dec
jb
mov
lret
and
or
mov
push
xor
xchg
fadds
xchg
sarl
mov
aad
mov
fildl
pop
pop
mov
or
or
mov
and
jl
lcall
push
jmp
clc
shrb
jnp
lea
loopne,pn
adc
jns
fldl
test
add
xor
ljmp
xlat
pop
icebp
push
xchg
leave
adc
js
testl
and
shr
sub
repz
sbb
cmc
mov
mov
cmp
sub
cmp
shll
mov
mov
mov
cmpsl
mov
loope
mov
pop
imul
adc
jb
adc
cwtl
pop
pop
sbb
ja
jne
mov
sbb
and
jnp
scas
test
cwtl
mov
jmp
out
inc
loopne
insl
xchg
subw
push
mov
imulb
fdivl
ss
outsb
sbb
mov
xor
inc
pop
fbstp
mov
mov
lock
cs
sub
inc
movsl
adc
loop
xor
push
cmp
cli
sub
dec
dec
ljmp
notb
and
xchg
inc
loopne
mov
test
jecxz
sti
ret
push
out
bound
ret
mov
jp
jge
dec
add
cmp
iret
jge
mov
stos
leave
ds
and
in
mov
stc
sbb
icebp
mov
adc
inc
pop
fcmove
jmp
shrl
xor
xor
adc
pop
mov
out
lret
out
sub
daa
stos
cmpsl
mov
std
ror
ss
mov
test
imul
xor
xor
bound
xchg
sub
sti
and
lea
lret
sbb
js
icebp
cmp
sbb
mov
inc
dec
mov
add
clc
popa
das
or
xlat
add
call
jg
add
jne
leave
pushf
adc
push
imul
jg
out
xchg
ds
sub
cltd
push
std
push
loop
jle
inc
jae
mov
orb
or
xchg
cltd
je
or
or
sbbl
lock
test
jecxz
pop
rorb
and
lods
outsb
add
roll
movsl
mov
mov
mov
fsubrp
enter
mov
mov
ret
rorl
dec
xor
push
pop
sbb
jl
add
pop
cs
stos
jns
scas
std
fwait
loope
imul
iret
inc
ret
xor
jns
push
cmp
mov
test
mov
mov
cmp
sti
cmp
lret
insb
inc
out
mov
adc
rep
xchg
cmp
ret
push
stos
or
mov
jbe
aam
repnz
std
je
sbb
sbb
imul
sbb
fdecstp
in
inc
lcall
test
pop
enter
andb
lret
lret
xor
and
js
mov
sub
std
xor
push
and
out
lods
sbb
jecxz
cmc
jecxz
jb
jb
lret
cmp
fnstsw
cmp
xor
xor
outsb
pushf
arpl
leave
cmp
adc
fs
inc
test
cltd
rolb
out
mov
cmp
mov
sti
pop
lods
int
dec
add
inc
daa
sbb
test
cmp
pop
cwtl
mov
push
inc
or
stc
xchg
repz
mov
add
push
xor
adc
mov
jge,pn
jae
dec
hlt
sub
lods
xchg
dec
add
mov
das
pusha
mov
cli
xchg
js
test
and
jg
test
mov
pop
add
or
mov
xor
lret
lahf
or
cli
leave
pop
lret
cmp
nop
cmpsb
gs
mov
pop
xor
mov
cmc
loop
ret
pop
mov
mov
and
add
dec
cltd
out
mov
xor
inc
lods
les
imull
jns
add
sub
repnz
mov
pop
arpl
clc
jnp
sbb
scas
addr16
lcall
xchg
and
test
nop
pop
adc
push
adc
stos
sub
cmp
into
pop
dec
mov
daa
dec
cltd
push
stos
mov
bound
dec
sbb
add
movsb
or
pop
loopne
mov
jge
js
inc
xlat
outsb
xchg
test
pop
dec
xor
adc
in
pop
fwait
or
in
and
lret
mov
shrb
add
mov
sahf
push
dec
pusha
fdivr
sbb
pop
add
fidivrl
or
andl
lods
rcrb
sbb
and
add
cmp
fsubp
int
dec
inc
jb
inc
inc
push
std
lret
mov
addr16
cltd
arpl
ficoml
in
dec
pop
or
dec
sarl
scas
cmp
push
in
ror
imul
ficomps
add
cmc
jle
loop
incb
dec
jl
push
sahf
mov
mov
mov
mov
ljmp
lea
mov
out
fwait
ss
xchg
pop
ds
jp
test
and
xor
xchg
xor
push
cmp
lcall
int3
jbe
scas
inc
decb
jbe
inc
sbb
loopne
pop
dec
jmp
jmp
jecxz
mov
cmp
sub
inc
mov
add
mov
sub
dec
pushf
ret
push
push
fcomi
daa
xor
mov
push
or
push
nopl
push
or
jecxz
lahf
enter
dec
xor
hlt
push
fcoml
xor
or
loopne
mov
xchg
lcall
aas
ficoml
iret
xchg
xchg
mov
test
jle
ja
jg
or
scas
cmpsl
cld
loopne
ds
imul
push
push
adc
outsl
add
jne
mov
cwtl
iret
sahf
mov
iret
add
xor
jl
mov
push
inc
adc
sahf
call
mov
push
push
int
fwait
xchg
orl
imulb
ret
clc
cmp
out
fidivl
cmpsl
arpl
mov
mov
sti
jb
inc
xchg
into
and
out
ljmp
xchg
xor
daa
pusha
fidivl
cmc
lcall
fdivs
and
lahf
mov
repz
lea
cmp
xor
lods
adc
xchg
xor
push
dec
sub
jl
xchg
cmpb
xchg
pushf
shlb
pop
fneni(8087
fs
fninit
scas
ljmp
dec
gs
repnz
lret
fdivs
mov
and
out
movsl
insl
shr
mov
inc
sbb
mov
cwtl
sub
push
call
xchg
jbe
pop
cmpsl
por
loopne
fadd
gs
lods
jp
mov
test
xorl
lds
addb
inc
insb
xor
cmpsl
or
cld
int
inc
repnz
push
fsubl
mov
sub
mov
and
xchg
cli
jns
push
jmp
sbb
or
mov
lods
aam
adc
ljmp
push
movsb
or
mov
push
repz
xor
mov
adc
js
fwait
insl
scas
imul
jl
jns
inc
and
nop
int
xor
xor
adc
lahf
hlt
adc
xchg
cmp
xlat
push
and
dec
subb
loop
outsb
dec
inc
add
test
xchg
shlb
xlat
push
sahf
add
daa
xor
cmpsl
orb
daa
and
sbb
inc
xor
clc
das
dec
sar
push
out
mov
lods
add
in
sbb
iret
sbb
xchg
cmc
sub
cmpsl
push
or
subb
lods
cmp
daa
mov
adc
clc
stc
andl
cmp
int
mov
and
cmpsb
pop
movsb
imul
inc
mov
adc
in
adc
cltd
repz
addr16
sti
imul
cmp
aad
fs
mov
jg
cmpsb
or
movsb
inc
shr
lea
fstl
inc
cmp
daa
and
in
aad
xor
ss
nop
xor
xor
adc
lret
aad
imul
pop
push
in
jmp
notl
ret
sbb
shll
or
popf
lret
mov
ret
addr16
jecxz
push
mov
dec
cli
jns
popf
arpl
aaa
iret
ljmp
negl
pop
mov
xor
imul
stc
out
aas
int
outsb
andl
mov
lods
in
jle
xor
adc
sub
addr16
aam
in
testl
add
add
mov
jbe
jns
idivb
and
mov
jbe
rol
jae
jns
jbe
inc
jge
lcall
push
mov
xlat
and
dec
dec
jmp
inc
push
mov
cltd
fsub
or
adc
lods
mov
adc
mov
jnp
jae
xchg
loopne
adc
scas
scas
ficoms
scas
ret
bound
xor
jge
sub
je
and
pop
popf
rorl
lods
sub
push
inc
js
lahf
sub
mov
dec
or
xor
sub
hlt
and
in
sub
jo
add
add
xchg
mov
sub
lds
arpl
xor
sub
rol
push
andl
sbb
xchg
sub
or
mov
out
out
testl
stc
ret
les
xchg
inc
pushf
xchg
lds
push
dec
add
push
mov
xchg
add
push
pop
inc
mull
insl
push
imull
or
mov
lods
mov
cmp
outsl
subb
cmp
xor
add
stc
cs
lock
pusha
sahf
ljmp
pop
push
push
fisubrs
inc
and
outsl
xor
test
mov
mov
xchg
fcoml
and
push
nop
jp
push
mov
sysexit
xor
lock
cs
enter
jbe
sahf
aad
sbb
movsl
in
and
in
call
das
sub
sahf
stos
xor
add
je
mov
add
inc
xchg
mov
push
fld
out
daa
push
xor
cmc
mov
pop
jecxz
in
jmp
ss
jb
popl
lea
sub
inc
mov
fmul
mov
aas
xchg
sbb
adc
jle
jo
loopne
push
mov
out
push
jg
cmp
jbe
push
xchg
xlat
dec
in
inc
push
mov
gs
sahf
jo
lahf
adc
ljmp
xor
out
imul
lock
stos
add
add
mov
pop
adc
push
lret
int
mov
shrl
inc
or
xor
leave
xchg
rorb
adc
or
lret
push
inc
add
xor
pop
aas
adc
fnstenv
dec
xlat
shl
inc
pop
insb
mov
shl
sbb
dec
sub
xor
xor
xor
or
andl
or
adc
cmp
or
lods
or
nop
enter
lret
dec
sub
es
mov
insb
mov
xor
push
cmp
loopne
pop
testl
push
js
jge
cmp
push
test
mov
mov
sarl
add
movsb
in
fldcw
fwait
mov
lret
cs
xchg
or
pop
pop
xor
mov
inc
adc
ja
dec
clc
add
dec
jge
xor
addb
mov
je
push
pop
fmul
adc
vxorps
loopne
sbb
loopne
and
flds
aas
push
jbe
lods
and
adc
pop
xor
sti
add
push
sub
adc
mov
mov
out
ds
pop
std
ds
jg
lret
cmp
lahf
cmp
mov
shll
push
lock
fcomi
jle
cli
xchg
popf
aam
mov
rcrl
and
push
xchg
repnz
daa
jmp
xchg
shrb
loop
ja
out
cmp
pop
mov
jb
sub
or
loopne
fs
enter
dec
jg
sbb
push
int3
stc
rcrl
dec
and
sbb
jmp
arpl
aad
addr16
xchg
repnz
lretw
cmp
test
hlt
add
shrd
cld
xor
dec
sbb
ljmp
aas
fisubl
sarb
add
cmp
cmpsl
push
sub
xor
and
shll
lods
xlat
pop
sbbl
aad
neg
and
mov
push
jae
mov
lods
inc
and
jne
notl
ret
xor
sub
sbb
sahf
pop
inc
add
std
jo
mov
cwtl
push
das
shll
and
push
es
movsl
out
xchg
fcoml
jns
or
push
cld
addb
mov
stos
and
test
sub
cmp
inc
jl
cmc
das
test
repnz
es
xchg
repz
jp
mov
cld
rorl
out
cld
and
xchg
xchg
imul
add
sbb
sti
out
lcall
sbb
inc
cmp
or
xchg
mov
push
in
cmc
mov
cmp
sbb
mov
adc
jecxz
ret
mov
loop
push
test
or
mov
leave
negl
mov
inc
adc
jg
sbb
jecxz
test
stc
xor
test
mov
scas
push
in
sbb
aam
mov
movsb
or
outsb
stos
dec
dec
icebp
es
jmp
pusha
push
int
inc
sti
mov
aaa
add
ds
les
mov
or
in
cmp
ja
dec
in
xchg
add
xchg
lret
aam
sub
stos
mov
test
in
push
in
cli
das
out
mov
jb
mov
aad
fdivrl
out
aas
mov
and
inc
aad
adc
xchg
push
insl
pop
icebp
mov
movsb
insb
pop
jbe
jb
jbe
dec
mov
mov
cmc
cld
jmp
test
stos
jmp
and
sub
sub
bnd
popf
in
xor
stos
lods
adc
mov
pop
jo
iret
popf
out
dec
inc
jae
dec
pop
imul
push
pop
mov
push
popf
pop
pop
inc
sarl
adc
outsl
inc
fldenv
lcall
fiaddl
scas
and
pusha
mov
popa
and
out
lret
push
mov
pop
repnz
es
sub
xchg
stc
and
pop
inc
add
xor
jecxz
dec
jle
stos
loop
into
in
lahf
inc
push
and
jl
push
rcll
pop
loopne
jne
and
cli
cmp
jae
jb
data16
movntps
in
and
inc
pop
aas
scas
dec
bound
adc
jnp
jmp
mov
std
or
scas
std
pushf
or
adc
mov
mov
shlb
ret
sub
mov
bound
or
call
jns
mov
ja
rol
sbb
in
jle
sbb
xor
xchg
push
or
jge
jecxz
roll
pop
and
popf
adc
inc
cmc
dec
mov
adc
pop
fisttpl
imul
adc
mov
sub
inc
je
inc
mov
subb
movsb
cmp
cmp
add
das
jnp
popa
jle
test
xchg
lret
xchg
aaa
mov
lret
lcall
das
neg
push
jle
push
xor
mov
dec
lds
or
or
decb
imul
arpl
cmp
mov
push
test
dec
call
sti
pop
lock
add
sub
jg
shrl
cs
sbb
stos
jo
testb
add
dec
loope
cmpsb
and
pop
xor
enter
or
and
bound
mov
in
jl
mov
pushw
scas
push
push
jp
cld
cli
and
push
adc
fcomps
sub
pop
jge
lret
insb
mulb
or
fst
mulb
jle
and
and
test
mov
or
xorb
pusha
and
les
add
push
mov
lcall
pusha
adc
mov
pop
pop
push
iret
jbe
adcb
ret
add
bound
fsubrl
cmp
out
mov
sbb
popa
mov
sbb
dec
jne
add
ss
popf
fcomip
jns
addl
repz
sbb
push
cltd
insb
mov
mov
test
orb
ret
inc
pop
stc
leave
jns
ja
adc
cvttps2pi
in
xchg
mov
out
nop
mov
fists
lods
push
inc
mov
mov
lods
dec
out
jbe
fxch
pop
dec
fidivl
push
adc
outsb
movsb
ljmp
fnstenv
std
add
and
popa
jecxz
int
pop
leave
push
pop
dec
mov
insl
rorb
insb
mov
pop
mov
jge
pop
in
shlb
lret
stc
xor
xor
rcrl
xchg
lea
repz
inc
pushf
sbb
or
pop
mov
arpl
lfs
xor
insl
mov
loopne
dec
andl
scas
les
lods
add
add
and
xchg
testl
inc
jns
add
ret
fdivrs
mov
jns
cmp
lea
dec
pop
ret
imulb
ljmp
cmp
mov
dec
sarb
xchg
jg
addr16
ffree
cmp
loope
xor
cmp
inc
adc
cltd
push
shlb
mov
sahf
jae
sbb
sbb
and
dec
mov
test
pop
cli
xchg
rcr
je
mov
add
mov
xchg
mov
xchg
repnz
add
mov
xchg
add
in
inc
jne
and
adc
shl
inc
push
test
lret
daa
std
add
jnp
jb
jb
into
lock
xchg
push
and
xor
dec
dec
subl
pop
cmc
xchg
pop
xchg
mov
cmp
lods
pop
or
lahf
addr16
push
sub
push
push
adc
sub
sbb
out
clc
sbb
ss
fldenv
or
cmp
and
lea
sub
ljmp
gs
push
mov
icebp
fcmovnb
sarb
fwait
imul
cltd
jmp
sbb
mov
test
fsubp
mov
imul
stos
push
sub
xor
pop
push
loop
mov
enter
and
orb
pop
sbb
pop
in
loop
out
mov
sub
adc
js
jnp
cs
outsb
or
add
popa
daa
inc
cli
outsb
movsl
and
iret
js
or
jne
test
cmp
push
ljmp
nop
push
or
pop
fistpl
out
sti
orb
push
mov
movsl
sbbb
loop
fwait
pop
imul
fcoml
gs
outsb
aam
adc
mov
cltd
in
sub
into
filds
popf
insb
mov
ss
push
add
daa
fcompl
mov
push
xor
mov
ds
lods
mov
cmp
lret
icebp
movb
mov
stc
xor
insl
dec
cld
jae
subb
mov
fwait
cs
jp
arpl
add
mov
push
push
divb
fisttpl
flds
xchg
jnp
out
mov
xchg
jge
sbb
test
mov
imul
fdiv
popf
scas
repnz
sti
ss
and
outsl
loope
test
flds
adc
add
jmp
vmovaps
out
movsb
hlt
jbe
inc
dec
jle
notl
iret
addr16
shll
push
push
cmp
aam
add
sahf
popf
mov
sbb
lods
add
popa
jmp
out
adc
in
push
adc
push
pop
sbb
pushf
cmc
mov
xchg
xor
stc
push
dec
pop
or
movsl
lods
cmpsb
arpl
cmc
int3
inc
inc
jbe
stos
sti
pop
pop
lahf
xchg
sub
jp
pop
dec
mov
push
jae
mov
lcall
xchg
jns
jl
les
push
sbbb
add
js
sub
or
jno
add
sub
lahf
dec
mov
xor
fcoms
jmp
sbb
adc
cltd
ss
sub
sbb
cmp
xchg
repz
cmpb
push
je
sub
rcll
pop
mov
fnstsw
dec
mov
cmp
dec
cld
xor
xor
mov
imul
ljmp
mov
scas
mov
or
in
repz
fucomp
bound
scas
stc
and
dec
inc
mov
push
jnp
pop
xchg
in
cli
cli
or
shl
imul
xor
fisubs
lods
imul
pop
clc
pop
imul
cld
jno
pop
or
ficomps
in
add
or
or
cmp
inc
out
shrb
jp
divl
in
cmp
icebp
arpl
mov
sub
jp
hlt
cmp
inc
mov
daa
pushf
dec
xchg
repz
dec
adc
xchg
ss
sbb
call
adc
bound
shrb
movsl
mov
lcall
jp
add
push
rclb
test
dec
adc
and
inc
mov
push
jns
fists
ljmp
pop
pop
add
push
data16
adc
dec
pusha
enter
mov
shll
push
sahf
adc
lock
imul
popf
dec
lahf
add
adc
mov
and
mov
aam
or
sbb
popf
leave
scas
hlt
sub
repz
xor
lea
aas
dec
xchg
cmpsb
push
pop
popa
push
jp
cmpsb
sbb
jo
sbb
lock
jnp
dec
inc
lock
pop
rorl
xchg
xchg
dec
mov
mov
sbb
mov
sub
jl
fwait
lcall
xchg
int
nop
push
outsl
mov
push
mov
icebp
lcall
or
divl
pushf
pop
jne
xlat
mov
pop
push
and
pop
dec
push
call
xor
pop
rorl
inc
sarl
loope
xchg
push
das
and
pop
nop
mov
pushf
adc
shll
movsbl
imul
icebp
pop
cmp
pop
pop
pop
imul
aad
nop
outsl
into
call
or
or
jbe
rolb
sti
rcr
or
inc
shll
repz
popa
xlat
je
mov
fnstenv
inc
fildl
push
mov
pop
hlt
out
mov
rcl
push
pop
mov
int
xlat
jae
jae
les
divl
mov
pop
xchg
divb
and
add
arpl
adc
push
call
or
xchg
sbb
iret
or
bound
das
jbe
roll
cmp
adc
cltd
push
jecxz
loop
imul
int3
adc
add
fcomip
lods
sub
sub
mov
push
dec
hlt
mov
xor
addb
mull
aad
inc
cmp
pop
dec
mov
and
lock
push
push
xlat
mov
test
rorl
xchg
cmp
cld
xchg
stos
push
movb
mov
mov
call
in
rclb
insb
scas
testl
into
mov
insb
jp
ret
and
dec
push
dec
sub
fnstcw
cmp
hlt
sub
push
jl
aad
mov
and
leave
mov
jl
xchg
inc
lods
push
and
push
mov
scas
mov
loopne
xchg
fldz
xor
jl
nop
mov
push
pop
repz
add
pop
leave
js
inc
add
add
les
xor
aam
jae
int
mov
sbb
adc
into
shll
int
outsl
lcall
outsb
mov
mov
dec
int
pop
mov
dec
pop
sti
pop
arpl
jg
lret
mov
mov
loope
push
xlat
cmpsl
pop
mov
and
mov
je
ficoms
adc
xchg
xchg
push
flds
push
cmpsl
sti
mov
inc
mov
cli
jmp
push
jb
pushf
ja
setnp
and
inc
lds
idivl
push
mov
pop
jge
jecxz
jne
mov
imul
cs
cld
jnp
dec
mov
pushf
mov
jl
aam
outsb
dec
jg
adc
popf
adc
subl
xchg
push
sub
adc
mov
es
inc
inc
aaa
sbb
fsubrs
mov
mov
push
divl
shll
inc
sub
mov
pop
mov
mov
scas
fs
xlat
push
scas
pop
outsl
adc
and
push
xchg
fmuls
push
mulb
enter
lods
movsl
aas
and
fwait
push
push
mov
aas
adc
shrb
fidivrl
jg
adc
in
push
jnp
cwtl
push
adc
fsubr
mov
iret
and
jp,pn
sbb
scas
test
pop
add
dec
das
scas
jp
inc
sbb
sbb
and
fmuls
arpl
in
mov
out
iret
scas
int3
mov
inc
push
inc
aad
push
daa
aas
inc
ficomps
aaa
add
sti
push
outsb
imul
icebp
sbb
dec
push
add
repnz
mov
js
adc
cmpsb
pop
sbb
mov
add
mov
ss
out
mov
out
out
icebp
out
shlb
jnp
xor
adc
push
pop
cs
ja
sbbl
and
pop
and
out
pop
push
cmp
jle
mov
sbb
mov
adc
cs
xchg
push
xchg
jl
xchg
test
mov
mov
jle
adc
nop
mov
cmp
lea
leave
or
add
add
outsb
push
movsl
xlat
or
lea
je
fcoms
jle
daa
lahf
and
add
sub
sub
call
mov
mov
adc
lock
daa
or
test
aas
sub
out
jle
inc
pop
sbb
push
movsb
repnz
xchg
mov
lcall
daa
les
shrl
or
and
ffreep
int
push
or
sbb
into
aaa
icebp
pop
xlat
sbb
push
daa
fwait
int3
repz
cmc
sbbb
inc
adc
out
sarl
fisubrs
xchg
xchg
push
pop
into
jl
add
es
rorl
std
lock
fcoml
fistps
aas
push
in
mov
inc
repz
ret
cmpsl
fildll
xchg
mov
mov
icebp
dec
inc
cmp
setbe
fcoms
sub
dec
es
shll
sahf
test
mov
je
pusha
int3
std
jmp
add
pushf
cmp
scas
sbb
prefetch
jmp
push
cli
imul
test
mov
lea
cli
jno
dec
ss
and
xchg
jne
mov
jmp
aaa
jp
adc
add
jo
subb
push
jb
jne
xor
into
mov
in
xchg
and
in
enter
movb
jae
xor
loopne
movsl
xlat
mov
data16
incl
lret
sbb
scas
outsb
or
hlt
addb
int
icebp
mov
adc
mov
mov
sbb
add
mov
xchg
aaa
clc
jl
push
mov
loopne
adc
mov
sub
xchg
stc
adc
les
nop
subl
adc
shll
jecxz
adc
fwait
mov
cmp
and
and
jno
fisubrs
cmp
sti
pushf
and
push
fsubrl
sbb
or
xchg
adc
cmpsl
mov
aas
repz
push
adc
jne
sub
cmpsb
mov
cmp
jne
mov
cmp
stos
jb
pop
mov
int
jo
cltd
xchg
filds
lods
hlt
insl
jnp
ljmpw
inc
dec
mov
das
cmc
sbb
pusha
lret
push
ds
push
lahf
lds
mov
out
pop
xor
inc
pop
rep
je
jle
sahf
ret
fstps
jle
pop
jne
xchg
mov
cmp
repnz
or
fs
repz
insl
jo
cmpsb
pop
mov
push
daa
stc
into
lods
dec
jecxz
in
rcll
out
mov
sets
cld
xor
jg
inc
stos
inc
xchg
xchg
gs
movsb
sarb
mov
mov
or
call
inc
subb
sahf
popa
xor
scas
mov
dec
es
push
adc
push
jg
or
ret
xchg
jb
inc
movsb
data16
mov
sub
fucomip
mov
push
addr16
xor
or
cli
ds
pop
or
xor
mov
lea
out
sub
test
dec
and
pop
outsb
lods
stc
enter
fsubrp
stos
mov
and
sahf
mov
xchg
lods
shrb
xor
scas
xor
mov
ja
push
cmpb
outsb
mov
pop
rorb
inc
les
cs
shlb
and
sbb
xorb
xchg
mov
dec
dec
sarb
jo
sti
or
jbe
bound
dec
stos
xor
ja
pop
mov
cli
jl
dec
call
imul
arpl
or
lock
imul
jno
mov
rcrl
pop
lahf
fists
jmp
xchg
leave
mov
iret
push
inc
pop
add
mov
sub
push
pop
sbb
stc
fsubrl
enter
out
jnp
xchg
xchg
nop
mov
sbb
orl
enter
bound
cld
inc
sahf
lods
adc
js
add
shlb
jb
xor
test
jnp
jmp
push
sub
fwait
movsl
out
add
shl
mov
daa
cmp
lods
sahf
ret
scas
popl
add
outsb
rep
js
jl
jne
and
stc
dec
mov
bound
loope
rolb
push
mov
bound
push
hlt
mov
movl
ljmp
push
mov
fs
jmp
cmp
ss
push
xlat
ljmp
sbb
xchg
call
jne
cmp
adc
cmp
dec
xchg
rcrl
insb
and
mov
repnz
xor
jg
push
inc
push
enter
rcr
mull
pusha
aam
shll
and
decl
inc
scas
stc
in
sub
scas
push
inc
repnz
adc
dec
repz
stos
mov
push
cmpsb
stc
xlat
repnz
sarl
xlat
inc
inc
dec
daa
mov
movsl
jns
xchg
xchg
test
dec
xor
mov
pop
cmpsl
jb
xchg
test
jbe
jno
mov
stos
nop
je
xchg
xchg
ja
mov
dec
in
loop
mov
int3
fmuls
inc
pop
push
jae
sbb
sbb
and
mov
cmp
pop
iret
fadd
mov
jns
mov
sub
mov
push
push
xchg
jo
scas
adc
adc
sbb
pop
jge
jg
ficompl
xor
mov
jb
dec
inc
sbb
push
hlt
ljmp
jne
shll
aaa
sub
jns
pop
lcall
rclb
xchg
leave
iret
ret
and
int
xorb
or
les
push
pop
into
xchg
sti
jle
mov
pop
and
mov
push
cmp
iret
mov
inc
inc
cmc
inc
xchg
dec
inc
mov
leave
xchg
cmp
pop
subl
pop
lret
xor
ret
mov
pop
imul
hlt
mov
jge
lret
cwtl
rcll
push
fisubl
mov
pusha
call
and
jecxz
inc
mov
adcb
mov
xor
sbb
adc
xor
jb
pop
mov
adc
in
inc
nop
and
push
fmul
jp
out
cmc
fwait
in
xor
lods
or
mov
into
loopne
xchg
mov
insb
hlt
dec
pop
outsb
ret
ret
push
xor
lret
jne
lret
sub
fnsave
aad
push
cmpsb
test
xchg
js
mov
pop
or
popl
les
les
hlt
jmp
jle
xchg
or
xchg
sbb
push
ret
jo
lds
sbb
pop
leave
lds
mov
and
sbb
out
push
or
xor
pop
or
hlt
sub
sub
jmp
outsb
sbb
push
mov
rep
mov
cmp
xchg
push
pop
fidivl
cmpb
fmul
pop
mov
push
outsb
fbld
pop
adc
out
cwtl
aam
push
push
push
cmp
fwait
adc
mov
and
cmp
or
aam
sbb
or
pop
sahf
and
inc
lret
push
lcall
fwait
or
xor
jnp
aas
movsb
jge
mov
mov
push
mov
mov
incl
adc
pop
sahf
push
lahf
mov
mov
push
stos
in
das
cmovae
jo
fchs
mov
mov
push
sbb
xchg
mov
aaa
test
movsb
and
jg
outsl
and
and
add
sub
les
std
lods
dec
ds
pop
insl
dec
jle
xchg
cwtl
lods
mov
pop
push
xchg
shl
aad
xorl
xor
lcall
inc
push
clc
push
adc
lea
int
mov
mov
ficoml
mov
inc
loopne
js
cld
xor
enter
addr16
andb
out
xchg
jno
dec
ds
sahf
jmp
cmp
ficomps
lcall
dec
test
xor
leave
dec
mov
out
test
in
mov
cld
std
add
add
dec
lea
mov
cmpsl
push
sub
aam
mov
mov
nop
inc
call
and
pushf
in
adc
push
out
and
ds
or
and
orl
movsb
adc
mov
and
out
pop
mov
cmp
mov
mov
jne
shl
call
dec
xor
add
lcall
cmpsb
loopne
mov
pushf
cltd
mov
jnp
fs
cmp
cmp
dec
out
sbb
outsl
cltd
mov
sti
or
adc
push
iret
lds
sahf
mov
and
test
push
stc
add
cltd
lods
pop
movsb
cmp
call
movsl
pop
scas
bound
ds
jo
insl
push
inc
xchg
mov
fcoml
jle
jle
pop
xor
pop
fisubs
je
mov
or
les
stos
adc
jmp
cmp
jge
sbb
movsl
enter
gs
popa
jno
pop
mov
lock
mov
in
mov
cmp
vmwrite
push
add
test
fbld
in
sti
lahf
cli
pop
cmpsb
xor
cmc
sub
mov
jecxz
and
lods
fdecstp
ficoms
adc
in
ja
cmp
aad
dec
lods
mov
loope
sbb
sub
cmp
push
int
dec
jp
push
scas
adc
mov
mov
test
mov
mov
sub
push
sub
cmp
fadds
jmp
mov
insb
sub
and
dec
outsl
inc
aas
bsr
popa
lret
adc
cmpsb
ds
jmp
nopl
mov
mov
or
push
xor
mov
mov
xchg
mov
dec
mov
mov
xor
pop
call
cld
mov
xor
out
out
fldcw
push
adc
int
adc
test
dec
mov
mov
addb
outsl
and
out
fsub
pop
dec
shll
add
cwtl
xchg
adc
inc
cmp
adc
mov
shl
mov
cwtl
jmp
xchg
cs
dec
mov
mov
lock
pop
inc
dec
dec
enter
xchg
mov
ljmp
fcomip
ds
sub
ret
fdivr
repnz
pop
out
mov
ss
jo
sbbl
adc
repnz
adc
cmpsb
dec
repz
mov
cmp
mov
mov
jge
pop
scas
dec
outsl
insl
pop
aaa
lret
js
fcoml
cmc
stc
mov
mov
xchg
mov
xor
popf
shl
xorb
fnstenv
fstenv
cmp
frstor
insl
jbe
add
add
lret
jns
movsl
jno
into
or
xor
in
std
rclb
dec
xchg
pop
fbstp
in
fisubrl
mov
cmp
mov
xchg
lock
iret
haddpd
leave
xchg
lock
sub
loopne
mov
outsl
arpl
jae
jb
cmp
jo
mov
xorb
pop
and
pop
or
push
fwait
ds
pop
pop
xor
xchg
testb
loopne
cmp
cmp
push
dec
in
icebp
push
aad
mov
pop
xor
ljmp
movsb
dec
test
push
andl
push
xchg
push
aas
in
testl
push
push
sub
clc
mov
ja
and
lea
ja
test
pop
mov
dec
ficoml
mov
roll
scas
mov
push
adcl
test
and
in
lcall
xor
outsb
out
xchg
inc
sbb
sbb
mov
rcrl
cmp
add
mov
mov
inc
and
js
sub
aam
xor
enter
inc
or
xor
mov
xchg
add
dec
testb
cmp
test
loopne
sbb
pusha
cmp
pop
je
stc
sub
mov
jnp
xor
js
xchg
loope
sub
mov
les
imul
loope
pop
xor
dec
repz
sbb
xchg
je
jg
mov
or
ss
jnp
popa
sbb
ror
mov
pusha
dec
fistpll
popa
jo
popf
data16
xchg
mov
jle
and
push
mov
jnp
in
jge
fwait
push
lods
test
fs
aaa
pop
pop
mov
aas
adc
push
push
pop
jne
cmp
out
sbb
dec
xor
scas
adc
mov
orl
mov
pop
ljmp
xor
xlat
xchg
or
stos
adc
xor
xchg
adc
in
scas
jne
mov
adc
lds
xchg
xor
pop
xchg
lods
inc
cs
push
insl
adc
mov
out
lods
cmpsl
xor
xchg
push
iret
lods
shlb
jo
sub
repz
in
sbb
push
cmp
stos
mov
je
fwait
and
nop
pop
idiv
stos
test
test
push
dec
push
sub
mov
push
and
pop
mov
mov
mov
lret
mov
sub
outsl
and
cmp
mov
bound
repz
adc
popf
pop
aam
test
cmp
pop
and
cli
andl
add
adc
cmp
sbb
popf
fldl
xchg
stc
test
in
jnp
push
cmpsb
in
mov
push
push
and
mov
adc
rolb
addl
push
or
cli
aad
lds
add
add
cltd
pop
iret
mov
jo
out
movsl
and
push
mov
outsl
out
add
loop
les
push
in
stos
mov
movsb
sub
pusha
fs
dec
aad
inc
mov
enter
jbe
push
nop
mov
push
mov
xlat
mov
scas
push
js
es
iret
jns
jmp
test
xchg
data16
jne
jge
mov
sbb
inc
push
cmc
xor
and
mov
call
out
or
loope
dec
pop
dec
push
enter
cltd
sbb
or
push
push
test
lds
xchg
cmc
pop
jl
sbb
push
jae
push
inc
mov
or
insl
lret
mov
in
inc
and
scas
lods
jnp
scas
adc
daa
rol
mov
mov
mov
rorl
push
cmpsl
ss
xchg
and
std
sbb
mov
jo
and
xchg
mov
add
jo
movsl
aas
inc
xlat
or
push
int
bound
push
outsl
nop
xchg
outsb
cmp
lret
mov
stos
add
dec
insl
jns
mov
and
scas
sbb
push
xor
enter
xor
lahf
jge
jae
je
and
in
mov
sbbl
jns
dec
sub
mov
mov
popa
shll
sti
add
xor
int3
ret
fsubs
repz
mov
cmp
cmpsb
sub
ficompl
push
sbb
push
mov
into
pop
add
in
pop
adc
pop
mov
jne
repz
mov
fwait
mov
pop
sarl
cli
adc
cld
cmc
ret
popf
sarb
mov
sub
arpl
popa
shrb
enter
aam
bound
push
pop
cli
pushf
xorb
add
stos
loopne
aam
out
sbb
mov
mov
lret
insl
jecxz
or
sti
stc
test
and
mov
outsb
insb
outsl
add
xchg
insb
xchg
addr16
pop
sub
cmp
es
add
pop
outsb
aam
mov
hlt
into
movsb
sbb
lea
sbbb
lcall
jp
cld
loopne
into
jae
fisubrs
adc
xchg
push
cmp
addl
add
sub
out
jne
mov
sbb
les
stc
cwtl
sub
xchg
pushf
mov
mov
and
sbb
iret
int
inc
scas
mov
cld
and
mov
pop
pop
sub
dec
add
and
cmc
xor
cmp
xchg
add
jmp
and
add
pop
mov
pop
decb
pop
cmp
cwtl
cmp
fidivrs
or
pop
es
ret
sub
lcall
ja
fadds
or
cmp
xor
dec
shll
ret
xchg
jmp
in
jns
je
out
sti
out
pop
jno
push
cmp
xchg
inc
xchg
push
pop
inc
test
clc
or
loope
pop
ret
pop
rol
inc
imul
aam
pop
mov
mov
sbb
arpl
bound
lea
roll
and
fbld
push
jmp
mov
cli
je
adc
push
pop
push
mov
notb
xor
hlt
movsb
jae
push
mov
push
imul
insb
call
and
arpl
nop
inc
mov
rcr
pop
push
leave
negl
sub
aas
sub
scas
inc
dec
xor
or
lock
dec
fsts
je
repz
int
adc
rcr
mov
xor
push
addl
add
fcmove
add
jmp
ficompl
stos
inc
inc
mov
test
pop
divb
xchg
sub
xchg
jl
sub
das
gs
jmp
add
mov
fisubs
adc
mov
jmp
sti
lds
outsb
cmc
xchg
pop
arpl
mov
stos
push
jmp
and
mov
mov
add
fabs
ss
xor
inc
aad
bound
addr16
test
xorb
lods
or
nop
repz
loopne
mov
push
push
jo
inc
lcall
or
sub
dec
js
mov
pop
sbb
jb
dec
int
xchg
xchg
and
pop
pop
scas
loop
loop
sbb
pop
lea
mov
fcompl
and
inc
ss
xor
sbb
jecxz
arpl
inc
xor
sub
outsb
fdivr
lock
jmp
rorl
imul
lcall
and
shrb
shl
addl
mov
in
add
dec
mov
loopne
cmp
mov
cmp
bound
dec
mov
repnz
ss
and
fists
data16
mov
shll
jecxz
cmc
mov
xorl
aas
fnstsw
call
mov
outsb
call
scas
sti
or
into
xor
xchg
push
pop
pop
dec
inc
add
mov
minps
add
rcrb
fiaddl
xchg
adc
nop
sub
push
inc
es
inc
cltd
incb
or
push
stos
add
stc
jnp
mov
je
aas
pusha
cli
adc
xor
std
repnz
sub
xchg
sbb
jg
cmc
dec
mov
stos
ds
scas
push
fcmovu
xchg
ret
xchg
js
xchg
push
nop
jne
mull
push
test
dec
cmp
fwait
cmp
xor
andb
xchg
sbb
bound
jae
xor
cltd
scas
std
fldcw
pop
mov
push
and
sub
subb
or
mov
push
add
lret
gs
fdivp
shrl
in
xchg
and
clc
repz
out
mov
push
rcr
jmp
mov
outsb
daa
pop
adc
mov
mov
in
add
je
push
fldt
jbe
push
out
jl
jnp
lret
out
stos
pop
and
js
stc
push
sar
daa
cmp
inc
mov
lods
insb
sub
mov
push
fs
aam
fnsave
scas
nop
jle
repnz
add
xchg
jne
sub
sti
popf
xor
data16
adcb
mov
cli
and
inc
sub
dec
fstpl
xor
or
mov
dec
in
jb
push
into
sbb
mov
fs
movb
adc
jnp
outsb
jbe,pt
xchg
inc
test
dec
adc
cmc
loopne
out
test
inc
ficompl
bound
shl
add
adc
xchg
aaa
push
popf
jle
std
sub
mov
sub
negb
icebp
and
out
lea
rorl
cld
daa
and
clc
mov
xor
sbb
clc
and
andb
sar
in
sub
mov
clc
test
shll
ljmp
in
je
into
mov
movsl
dec
push
or
loopne
jge
pop
out
test
aad
rorb
int3
or
fidivs
cltd
mov
mov
mov
adcb
test
sub
bnd
push
lcall
mov
inc
inc
pop
jp
or
inc
adc
testl
stos
cld
mov
mov
cmpl
cli
loopne
add
mov
aaa
push
sub
cmc
ret
mov
xchg
cwtl
icebp
std
pop
ss
sbb
cmpsl
fsubl
sbb
push
add
jbe
cmp
ja
adc
je
stos
pop
sahf
and
pop
test
in
enter
inc
push
add
pop
scas
fwait
sbb
or
decb
inc
inc
add
cmp
jge
push
ror
adc
or
jmp
push
mov
xor
mov
cs
pop
dec
cmpb
push
inc
jmp
bound
sbb
mov
sbb
loop
test
push
push
cmc
push
inc
aad
orl
inc
sbb
sbb
adc
jmp
sbb
imul
mov
jmp
stc
shlb
mov
sti
jle
rep
dec
sahf
rol
std
jo
xchg
dec
lahf
and
outsb
cmp
lods
cmp
mov
mov
inc
and
mov
cmp
scas
sbb
pushw
ret
cmp
xchg
jbe
movsl
pop
dec
inc
sahf
hlt
jl
in
cmp
cmp
jg
idivb
mov
xchg
fldenv
iret
adc
cltd
dec
sub
xchg
test
push
movsl
addr16
out
lret
repnz
adc
inc
out
lock
ja
pop
xlat
cmp
jo
bound
mov
push
in
cmc
insl
rcll
xchg
or
cmp
dec
pop
cmc
sbb
fsts
pop
and
and
movsb
in
cmpb
xlat
dec
rolb
and
bound
xlat
jae
je
data16
movsb
pop
nop
jo
xchg
dec
popf
lods
xchg
sub
fimull
cmpsb
cmp
es
sbb
mov
sbb
jne
add
adc
jns
lods
or
out
mov
sahf
add
imul
inc
add
xchg
push
push
pop
outsb
pop
lea
or
movsb
shll
inc
mov
dec
and
popf
fstp
cmp
or
ret
add
pusha
call
jle
adc
mov
mov
adc
sar
mov
sbb
imul
jne
sbb
push
in
enter
xchg
pop
fdivrs
inc
pop
adc
shlb
mov
rcr
ret
aaa
int
stos
mov
mov
jb
shll
out
movsl
gs
pop
add
mov
sub
jle
or
add
mov
test
push
in
scas
sarb
repz
mov
insb
movsl
int
pop
or
ja
fwait
mov
or
rcrl
sbb
inc
cltd
ficoms
lahf
sub
dec
fwait
pop
push
loop
aas
jle
pop
dec
or
pop
sub
and
shl
or
and
adc
xor
sbb
mov
mov
jo
test
mov
jo
lods
lahf
fxch
adc
or
fsubs
add
cmp
call
test
mov
mov
cld
fiaddl
jns
icebp
insb
pop
js
mov
popa
pop
mov
jl
out
orl
daa
ljmp
imul
mov
pop
xlat
mov
sbbb
fwait
int3
inc
out
xchg
pusha
push
dec
mov
jo
mov
sbbb
jb
popa
jmp
outsb
ret
gs
mov
mov
roll
insl
jecxz
ficoms
dec
out
mov
insl
sub
mov
leave
inc
aad
inc
sbb
inc
jbe
vmovdqa
pop
stos
cmp
pop
inc
push
pop
jmp
xchg
dec
xor
insb
pop
out
dec
mov
sub
test
in
mov
shll
outsl
pop
pop
loop
cmp
xor
inc
lret
je
or
data16
lock
xchg
ret
leave
push
jno
mov
push
cmp
and
cmc
lahf
push
or
movl
jmp
negb
xchg
mov
add
cmp
mov
imul
repz
sub
mov
lret
lods
mov
xor
aaa
out
mov
out
test
cli
hlt
fsts
inc
or
fs
jge
loope
and
repz
and
leave
mov
rcl
and
mov
fstl
push
xor
mov
jmp
clc
jnp
test
imul
incl
sbb
mov
and
ficompl
push
mov
scas
fsubrs
sub
adc
adc
push
in
setbe
in
xchg
push
out
scas
mov
xchg
adc
test
ficompl
mov
imul
mov
scas
inc
push
sbb
js
mov
mov
stos
dec
xchg
out
cmp
inc
mov
ficoml
cmp
insb
fucom
dec
pop
test
test
sub
lods
lret
dec
or
out
push
out
jo
push
into
inc
push
or
loopne
lahf
or
ret
pusha
in
mov
loopne
mov
or
push
sbb
out
addr16
mov
addb
xor
cmpsb
xchg
sub
pop
and
pop
adc
cmpl
lods
inc
inc
fidivl
jp
scas
call
mov
sub
pop
icebp
dec
fstpl
cltd
adc
xor
out
pop
scas
mov
pop
sub
jmp
pop
test
cli
test
pop
popa
inc
aam
lret
pusha
xor
mov
js
mov
push
jg
jno
ja
or
pop
and
adc
inc
jg
or
sub
and
hlt
xchg
adc
sbb
jne
add
loopne
ds
xorl
nop
push
cmp
push
mov
add
lds
sbb
ret
je
jp
mulb
and
not
pop
mov
jns
push
sub
fs
fistl
xor
notl
aam
jle
dec
or
push
cmp
sbbl
adc
iret
cmp
jg
cltd
inc
stc
push
inc
lea
add
nop
mov
lret
dec
hlt
mov
popf
or
movsb
fcmovne
inc
scas
incb
xchg
ss
sub
pop
and
ja
fcmovb
jo
xor
sub
and
sbb
lods
inc
mov
ja
sbb
mov
push
aam
pop
mov
inc
loope
jns
mov
mov
xor
cli
repnz
pop
sbb
incb
lcall
inc
jg
arpl
push
lcall
dec
lret
pop
scas
in
test
shlb
mov
mov
mov
mov
dec
in
mov
insl
add
rcrb
mov
sub
push
sub
cmp
xorl
inc
dec
xchg
adc
out
cmpsl
insb
sahf
adc
xor
repz
leave
xor
cmpsl
test
stos
push
mov
add
std
inc
cmp
imul
push
mov
xlat
or
cmp
jge
dec
jmp
mov
add
xor
sahf
mov
imul
je
add
add
cmp
lods
jg
sub
incb
jb
xchg
cli
add
pop
push
addr16
subl
mov
jmp
and
push
jle
in
mov
lods
mov
xchg
lds
mov
rolb
stos
es
stos
push
adc
into
loop
xor
nop
push
xor
iret
icebp
shrb
xchg
lret
mov
adc
push
push
pop
sub
stc
ja
in
jbe
cmc
cmc
cwtl
mov
jb
cmp
push
add
pushf
cmpsb
shlb
bound
out
shl
pop
daa
jae
dec
jge
push
std
dec
cmp
jmp
pusha
jne
xor
inc
sub
pop
dec
adc
pushf
test
and
insl
adc
dec
fiadds
mov
inc
sub
and
in
sub
inc
mov
jnp
xchg
xchg
scas
gs
aam
add
ret
jl
jp
sahf
in
rorb
rorl
popf
rorl
mov
nop
adc
stc
jl
jns
leave
add
mov
push
lock
xor
lret
mov
pop
adc
icebp
stc
mov
in
cmp
push
test
cwtl
fnstenv
scas
mov
sub
mov
repz
xor
or
mov
adc
loop
data16
cmp
in
imul
fildll
out
xlat
push
in
mov
cmp
push
cmp
dec
or
sbb
enter
es
or
movsb
insl
jbe
bound
icebp
mov
aad
repz
dec
mov
push
fsubl
pushf
rcr
mov
pop
push
js
mov
out
mov
sbb
lods
subb
cld
sub
cmp
daa
je
or
negb
ja
mov
pop
int3
stos
mov
adc
loopne
leave
in
mov
mov
dec
ret
xchg
loopne
xchg
sbb
lret
nop
dec
add
xchg
mov
bound
hlt
das
fwait
in
imul
xor
adcb
sub
pop
ja
ficompl
xchg
inc
add
call
xchg
nop
cmp
fadd
int3
inc
stos
adc
leave
add
out
aam
push
gs
jmp
lods
scas
cmp
cli
mov
insl
clc
xchg
jae
mov
pushf
shlb
adcl
sbb
sub
divl
shrl
vmovupd
jle
sbb
sbb
cmpsl
les
int
xchg
shrl
mov
pop
sbb
pop
cmp
test
and
jbe
and
and
mov
mov
xor
ljmp
mov
lock
into
cmp
add
loopne
dec
outsb
mov
icebp
add
add
xchg
aas
aad
movsb
jno
rcl
and
test
mov
mov
sbb
xor
bnd
lods
enter
adc
fcompl
rclb
fmuls
jmp
movsl
mov
mov
dec
lods
add
in
cmc
fiadds
in
xorb
in
add
pop
add
mov
cmpsb
jecxz
ljmp
pop
cmc
xchg
mov
pop
shlb
dec
rcll
shr
insl
fsts
add
inc
dec
push
mov
int
bound
push
fcompp
outsl
and
jge
mov
int
enter
pop
mov
mov
fnstcw
mov
sbb
inc
jge
fdivrs
mov
cmpsb
cld
cmp
pop
push
mov
jb
insl
jmp
jg
inc
pop
stc
sbb
test
fdivl
pop
sub
data16
or
cmp
sub
mov
push
data16
or
filds
cmp
cmp
fs
in
bound
xchg
es
sub
and
pop
dec
addr16
insl
cmp
xor
or
not
push
add
testb
loope
loope
mov
inc
push
push
xor
pop
push
hlt
cmpsl
jnp
push
sbb
daa
mov
bound
or
inc
jecxz
fnstcw
sub
nop
and
mov
pop
rolb
insb
scas
adc
jg
popf
jnp
imul
js
pop
lods
lcall
pushf
adc
pop
pop
scas
movsl
mov
add
push
push
jl
es
pop
test
jle
xor
pop
shl
sub
gs
cmp
out
inc
add
and
lds
push
pop
sbb
cwtl
xchg
pop
nop
dec
push
sbb
icebp
out
jmp
dec
ret
and
pop
or
jo
sbb
push
int3
imul
mov
push
push
testl
and
in
or
es
aas
shrl
shlb
sub
adc
movsl
adc
mov
mov
lods
xor
dec
in
scas
cmp
cli
cmp
sbb
mov
sub
add
ret
pop
inc
stos
out
ficomps
inc
int3
jne
mov
adc
jno
lea
pop
dec
cwtl
lods
loopne
mov
pop
loopne
sub
push
popa
sub
sarl
sub
push
hlt
jge
adc
and
inc
and
dec
cwtl
scas
shll
data16
push
loope
and
add
aad
cmp
cwtl
lcall
lds
fstpt
roll
insb
xor
and
add
outsb
in
pop
mov
sub
lret
and
mulb
xor
add
push
es
in
movsb
jnp
cmp
ret
and
sub
cmp
rcr
push
jne
les
clc
stos
push
div
jne
xor
jb
addr16
or
in
popa
lret
push
les
mov
ds
push
xchg
sarl
rcrb
aam
pusha
adc
cltd
sbb
ret
loope
or
push
cltd
popf
out
movsl
lahf
push
popa
adc
leave
or
mov
loop
fsin
xchg
xchg
int
movsl
out
or
mov
hlt
push
sub
call
xchg
je
cltd
sub
add
adc
push
lret
ss
jmp
in
loopne
faddl
xchg
int
dec
fisttpl
dec
mov
sbb
cmpb
push
jnp
and
mov
popf
cmp
pop
out
xchg
and
subb
xchg
xchg
mov
pop
ds
hlt
adc
xchg
sub
repnz
loopne
adc
nop
jo
mov
maxps
add
pop
aam
mov
inc
fadd
mov
cli
dec
push
fmull
out
idivl
loopne
mov
sub
jp
push
sarb
pushf
adc
add
rclb
or
cmp
stos
inc
inc
rcrl
imul
and
mov
int3
pop
xor
and
cld
add
pushf
and
dec
push
and
cmpl
inc
ja
mov
dec
fsubs
sub
sub
andl
imul
lcall
ds
loop
shlb
in
mov
and
sub
dec
fstpt
cmp
in
and
xchg
imul
test
pop
inc
adc
mov
in
sub
adc
outsb
jb
jmp
inc
data16
mov
aad
sbb
jns
les
orb
inc
xor
mov
cmpsl
xor
xor
and
push
xchg
scas
dec
mov
loope
popa
pop
mov
xor
pop
mov
aas
mov
ficoms
loope
je
xchg
imul
jae
loope
jae
xchg
mov
mov
pop
dec
sub
ljmp
pusha
std
and
push
nop
out
fdivrs
push
adc
jecxz
xchg
fldt
scas
cmp
mov
mov
inc
push
cs
js
test
cmp
test
mov
pushf
dec
add
popa
std
out
movsl
mov
push
imul
adc
push
cmp
test
jmp
pop
push
pop
pop
lcall
int3
pop
sbb
pop
loopne
mov
lods
jle
outsb
jb
inc
loopne
push
cmp
jns
aaa
nop
mov
cld
stc
xor
jge
mov
mov
ljmp
ljmp
xlat
push
fmuls
lcall
or
adc
rolb
repnz
cwtl
xor
sbb
test
imul
xor
dec
gs
dec
repz
fistpll
loop
xor
cltd
pop
hlt
add
adc
sub
lret
ret
scas
mov
xchg
push
daa
mov
cmp
push
int3
cli
sub
fucomp
mov
xor
push
or
fistpll
movsb
stc
inc
pop
xor
fwait
jne
repz
or
or
mov
mov
xchg
sti
loopne
inc
lods
xchg
je
mov
addr16
icebp
aad
ljmp
jnp
repz
jns
push
pop
scas
icebp
cmpsb
and
xor
dec
inc
mov
xchg
and
fisubl
ficoml
push
lock
xchg
subb
lea
test
inc
mov
inc
mov
js
popf
les
sub
mov
xchg
xchg
xchg
cmp
popf
sub
add
lods
ret
xchg
jno
enter
sub
mov
popa
sub
cli
or
push
mov
jne
sbb
mov
mulb
add
scas
lret
aad
movsb
clc
mov
or
and
sub
sbb
sub
mov
push
cmp
pop
sub
popa
test
out
test
out
inc
gs
repnz
lock
and
mov
decl
mov
jbe
lahf
aad
xchg
cmp
fcom
loope
add
sti
inc
and
pop
xchg
lods
inc
mov
xor
test
sbb
cmp
lcall
mov
xor
and
add
aaa
dec
mov
adc
ja
xchg
push
mov
push
jp
movsb
ljmp
inc
add
adc
jo
test
test
psubw
dec
and
or
fisttps
imul
cmpl
inc
mov
popf
dec
adc
je
or
lock
sub
cmp
sti
sarl
inc
je
mov
movsb
mov
enter
and
xor
lock
push
arpl
mov
ja
fsubrl
scas
mov
jecxz
lret
orl
cmp
xorl
adc
xchg
outsl
push
dec
pop
push
dec
sbb
aaa
xchg
addb
je
mov
jecxz
and
aad
testl
test
das
cmp
mov
cmp
cmp
loopne
pop
adc
inc
daa
dec
pop
push
hlt
outsb
jne
push
mov
sbb
lahf
xor
add
pop
arpl
ficoml
das
mov
jae
mov
je
mov
std
sub
dec
nop
out
pop
out
rcrl
imul
incb
outsl
in
mov
or
cmc
and
bound
loopne
pop
dec
or
imul
xchg
jbe
sbb
sbb
cmp
repnz
mov
push
and
sbb
jnp
mov
sbb
hlt
pusha
mov
sub
int3
jne
push
loopne
xor
adc
jge
pop
sbb
insl
test
scas
pop
xor
sub
sub
sub
xor
inc
xchg
ds
or
inc
jl
pop
xor
push
jnp
loopne
cltd
cld
orb
daa
jb
lcall
adc
je
scas
or
pop
in
pop
in
push
in
iret
push
inc
outsb
sub
cmp
or
push
sbb
out
daa
fisubl
adc
add
pop
outsb
and
cmp
aaa
dec
xchg
fdivrs
jnp
xor
dec
inc
aam
push
mov
shrl
in
mov
sahf
xor
leave
mov
andl
push
jp
mov
mov
add
cmpsl
pushf
shr
mov
cwtl
mov
mov
outsb
push
das
xchg
test
insb
mov
lret
dec
cli
or
adc
push
mov
pop
flds
jo
scas
scas
and
sti
bsr
or
inc
or
aas
sub
stos
lea
jg
xor
call
aad
jbe
fwait
shll
sbb
test
jb
mov
mov
sarl
insb
insb
jmp
jl
call
xchg
dec
js
fwait
leave
or
jle
or
and
add
push
fisttpl
scas
mov
mov
cli
fiadds
flds
jae
and
rcrb
cmp
push
cmpsl
jae
push
push
popa
aad
fs
lods
ret
pop
adc
scas
dec
mov
jecxz
xchg
arpl
add
mov
out
je
enter
movsb
sbb
and
clc
or
mov
pop
mov
movsl
mov
in
mov
push
pop
push
pusha
dec
cmpsb
xchg
lea
sbb
add
rcrb
insb
adcb
filds
mov
int
dec
mov
mov
imul
outsb
aad
jns
push
aam
dec
xor
jge
xchg
sbb
loopne
ja
mov
je
cmpsl
leave
inc
sbb
out
lock
add
jg
fcomip
push
sbb
mov
test
push
clc
hlt
rorb
out
clc
sub
xchg
adc
inc
fdiv
xor
push
lcall
notb
inc
insb
test
lods
int3
dec
notb
adc
sbb
popf
dec
js
push
movsb
mov
sahf
lahf
stc
mov
ds
cmp
cmp
jl
and
and
jns
cmp
cmpsb
shrb
inc
and
or
inc
jbe
xchg
dec
aaa
mov
push
das
jno
pop
mov
xchg
jg
shll
scas
mov
ret
loopne
inc
jo
xor
fsubrs
ficompl
cmp
clc
dec
in
es
movb
out
das
jae
sub
adc
push
inc
ljmp
cmp
fisttpll
cmovns
add
mov
call
xor
mov
data16
pop
xchg
mull
jp
xchg
cmp
or
cmp
pusha
pop
lods
mov
into
insl
mov
fstl
jno
xchg
mov
call
data16
outsb
pop
push
push
sub
lret
mov
adc
lds
push
xchg
mov
cli
jp
adc
cs
scas
stc
mov
push
in
cmc
or
sub
pusha
data16
dec
fldenv
js
adc
pushf
add
mov
push
or
outsl
call
and
mov
mov
mov
mov
pop
dec
pmaddwd
and
jmp
mov
pop
and
je
adc
lcall
ficomps
mov
addb
iret
in
aas
mov
mov
shlb
mov
pop
jg
cmp
mov
xor
jb
out
bound
pop
imul
pushl
add
inc
jnp
or
fiaddl
js
call
les
or
ficomps
dec
push
maskmovq
cmp
mov
jb
fadds
mov
lea
cmp
rcrb
in
outsl
sub
pushf
stos
mov
sub
fcom
push
fisubs
shrl
and
push
sar
xor
es
pop
scas
pop
jno
sub
mov
nop
xchg
and
mov
add
pop
in
in
fsubrs
stos
cmpsl
icebp
lea
gs
into
dec
push
outsb
hlt
movsb
mov
loope
pop
sub
jle
jae
xor
xor
jg
mov
out
pop
mov
in
sub
cmpsb
aad
stos
sub
push
in
pop
dec
test
dec
adc
mov
cmp
roll
insb
rol
inc
dec
rclb
repz
cmpsl
xchg
sbb
popa
mov
xor
shl
es
pushf
xchg
jge
int
mov
shlb
xchg
shrl
aaa
sar
mov
xchg
jns
or
and
lahf
push
sbb
inc
cmpl
jl
leave
xlat
mov
sti
daa
mov
pop
movsb
daa
cmpsl
xor
test
pop
cs
enter
test
add
ss
aaa
mov
xor
pop
jle
test
stos
xor
xor
cs
jmp
mov
or
mov
lret
xchg
cmp
mov
and
mov
jne
cmp
jae
sbb
lahf
pop
inc
add
sbb
call
mov
jmp
adc
mov
jb
mov
mov
movsl
repnz
fldl
sub
imull
jns
jg
das
pop
mov
bound
xor
insb
cmpsb
hlt
sbb
cmc
mov
sbb
mov
cmpsl
dec
jecxz
shrl
push
adc
adc
cwtl
nop
cmp
push
jae
jns
in
jge
sub
jmp
pop
mov
fisubrs
mov
inc
sub
rcrl
cli
jle
stos
and
jnp
push
mov
jg
mov
ds
jne
mov
xchg
fucomi
jo
sti
pop
mov
dec
mov
pusha
jno
add
lods
mov
fs
inc
movsb
xor
inc
push
and
aam
stc
insb
inc
lcall
repz
sti
outsb
lret
cltd
in
notb
aad
rcrl
add
pop
or
sbb
push
inc
imul
mov
outsb
jl
adc
lods
lahf
pop
in
les
int3
les
cmc
int3
mov
dec
int3
mov
out
incl
scas
aad
bound
out
xchg
gs
mov
orl
jp
mov
dec
inc
xchg
mov
jnp
mov
xchg
shr
push
mov
js
fsubrs
mov
das
pop
sbb
push
jl
mov
dec
data16
mov
mov
ret
std
and
ret
cmp
jecxz
fadd
cmovle
and
stos
add
cltd
ss
out
pop
push
ds
cmp
cltd
sub
popf
ja
sub
add
or
inc
or
fstl
mov
mov
xchg
inc
sub
int
fwait
loope
xchg
ja
xor
stos
imul
jnp
push
mov
je
mov
cld
iret
cmp
mov
adc
inc
shlb
push
adc
rcr
aam
xchg
push
jg
adc
push
pop
scas
sbb
orl
push
sbb
or
cmc
jns
sub
cmp
xor
ss
arpl
movb
xor
nop
leave
and
add
lods
pop
pop
add
mov
pop
mov
lret
addr16
mov
out
mov
popf
inc
in
inc
lds
aam
test
stc
mov
and
cld
dec
jecxz
popf
aad
and
and
pop
lcall
shl
pop
test
jge
ja
or
add
je
outsl
test
mov
lods
ror
les
cmpl
and
jnp
ljmp
nop
push
xor
mov
xchg
lods
sub
loope
adc
push
rcrb
sub
cmp
sub
cmc
js
lahf
cwtl
sbb
mov
inc
mov
jae
in
popa
inc
dec
fnstcw
lods
or
adc
pop
jae
sub
stos
enter
xchg
mov
cmp
es
push
add
mov
and
and
mov
sbb
test
add
jb
rclb
xor
mov
or
std
pusha
and
add
jnp
push
adc
daa
mov
stos
ror
mov
aam
test
mov
repz
outsl
pop
mov
mov
lods
inc
mov
cmp
jbe
popf
enter
dec
push
rolb
aaa
mov
out
inc
sbb
pop
lods
xor
inc
es
pop
sub
cmpsl
push
pop
pop
test
aaa
iret
cmpsb
mov
addl
mov
movsl
mov
int
mov
fmulp
sbb
div
pop
fstps
cmp
mov
int
add
fisttpll
push
dec
jl
adc
push
bound
mov
lahf
sbb
ret
in
push
or
mov
mov
jmp
ljmp
aam
xchg
and
fs
and
data16
mov
lods
into
xchg
ljmp
inc
xchg
xor
xchg
lcall
lret
push
or
imul
adc
pop
pop
out
icebp
ud0
pop
aad
andl
mov
mov
add
inc
ret
or
clc
rcl
cbtw
cmc
cmp
rcrb
cmp
rorb
shll
push
fcoml
jecxz,pt
lods
mov
repz
lret
jp
inc
adc
js
mov
cmpsl
mov
or
xlat
out
cmp
sub
cld
mov
xchg
jae
push
repnz
adc
jns
pop
add
xchg
lods
rol
loope
aad
sub
aad
rclb
inc
jb
popa
push
pmovmskb
enter
sbb
xchg
stos
pop
out
dec
pop
adc
mov
xor
push
cltd
sub
sub
sarb
ja
xlat
push
popf
push
stos
push
in
pop
mov
daa
add
loopne
dec
repnz
push
or
cmp
push
jb
pushf
xlat
loopne
clc
push
nop
call
cmpsb
scas
stc
repz
jmp
add
pusha
repz
cmp
sbb
pop
and
fcompl
inc
stc
pop
adc
nop
enter
fildl
cmp
or
movsb
cmp
jl
or
and
add
xor
fwait
pop
xor
mov
jle
cli
push
jbe
inc
ret
rcrb
ss
push
pop
push
lret
xchg
loopne
or
popf
iret
sub
enter
ljmp
scas
sub
dec
pop
les
push
mov
les
out
add
dec
push
pop
cmpsl
loope
ficoml
pop
loope
xorl
add
xor
push
pop
and
xor
xor
aaa
inc
adc
mov
pop
cmp
js
mov
xchg
imul
jbe
push
inc
aam
fs
loop
mov
stos
mov
ss
inc
sub
lcall
jge
pop
dec
int
test
aaa
mov
dec
rcrb
push
xor
lds
lock
push
lds
push
in
dec
push
testl
or
lcall
inc
cltd
inc
sbb
xchg
dec
mov
dec
and
sbb
js
call
and
lret
sbb
jecxz
lret
xchg
iret
or
outsb
ljmp
dec
insl
sbb
push
leave
lahf
xor
frstor
sub
iret
jae
xor
cmc
sbb
mov
imul
ja
add
outsb
pop
inc
inc
xchg
int
loop
adc
sbb
sub
cli
rclb
ret
mov
sbb
inc
gs
sub
pop
mov
mov
add
xchg
xor
daa
inc
ljmp
and
aaa
jb
add
add
mov
scas
xacquire
in
jl
data16
mov
dec
adc
stc
mul
xor
jae
and
sub
jmp
push
mov
mov
mov
rcrb
cmp
mov
daa
stc
push
aas
cld
rorl
icebp
sbb
imul
jmp
mov
sub
repnz
inc
jp
or
mov
scas
and
mov
divl
in
push
xor
mov
mov
rol
pop
push
mov
ljmp
std
mov
or
or
xchg
sub
cmc
bound
push
aas
pop
dec
in
ja
aam
daa
testb
rcrl
xor
xor
mov
repz
aad
and
mov
push
clc
or
fidivs
cld
sub
bound
push
mov
mov
test
mov
andb
insl
cwtl
loopne
lds
dec
dec
jecxz
stc
jecxz
pop
je
test
mov
xor
lahf
push
inc
pop
mov
sub
nop
mov
sub
or
scas
pop
or
dec
mov
adc
je
sahf
mov
mov
scas
add
in
lcall
sub
adc
add
insb
mov
jp
sbb
or
push
mov
cmpsb
inc
xor
pop
or
push
inc
push
jp
xor
cmp
call
outsb
sar
les
hlt
mov
mov
popa
lea
add
lea
add
ds
dec
dec
in
cmpsl
lahf
sti
call
sub
notl
hlt
insb
mov
repz
das
push
mov
outsb
daa
aam
ljmp
in
dec
mov
imul
arpl
push
fildll
outsl
lcall
dec
push
add
adc
jns
lock
xchg
push
ret
dec
xor
pusha
jae
mov
xchg
xor
lods
cmp
stos
or
es
fcmovu
aam
mov
sub
add
and
xor
jno
in
lods
push
int
test
mov
push
jl
mov
lds
fsubrp
adc
dec
lds
nop
xchg
sub
psrad
jl
out
lds
scas
mov
cwtl
cmp
sbb
push
cmp
jbe
into
xchg
cmp
sahf
adc
sbb
pop
clc
inc
scas
push
mov
mov
mov
mov
scas
pop
mov
xor
sub
ret
outsb
add
faddp
and
jbe
mov
sub
mov
lret
cmpsl
fidivl
pop
adc
daa
outsl
mov
insb
fsubl
push
sub
iret
in
stc
and
in
mov
fiadds
dec
in
adc
mov
scas
in
push
mov
dec
test
push
lret
aam
jle
sbb
dec
mov
xchg
mov
pusha
inc
enter
cmp
notl
fwait
stc
pop
fildll
int
imulb
mov
jge
mov
jmp
cmp
sub
ret
ljmp
lahf
jb
mov
test
ss
push
lret
loopne
and
or
sbb
outsl
into
sub
mov
bound
shlb
push
dec
femms
and
add
imul
mov
test
fistpl
popf
stc
or
out
popa
jecxz
sub
xor
movsl
loope
in
and
mov
mov
and
xchg
test
gs
stos
mov
or
popf
jmp
jp
pop
adc
mov
mov
push
movl
leave
leave
push
std
loopne
out
jne
add
mov
cmc
jle
push
pushl
stos
paddw
mov
cmpsl
and
pop
ret
sbb
ret
test
sbb
mov
insl
inc
adc
popf
push
insl
sub
mov
and
mov
jbe
push
adc
push
xor
cmp
adc
lds
mov
push
lret
out
inc
sub
xor
xchg
mov
repnz
jg
jge
mov
xlat
fdivl
and
and
mov
movsl
xor
mov
jne
and
das
dec
outsb
xor
jg
add
xchg
cmp
sub
test
rcl
sbb
ja
dec
call
push
cld
jns
lods
aad
rcll
into
sub
ret
ss
lret
cmp
mov
test
stos
push
gs
sbb
lock
js
int3
inc
imul
mov
pushf
inc
push
imul
xor
jnp
mov
cmc
sbb
ret
inc
lahf
xor
stc
push
dec
test
xchg
test
frstor
inc
dec
loope
xor
mov
mov
int
scas
pusha
es
xchg
xor
fcoml
out
inc
xchg
mov
rolb
mov
pop
addr16
icebp
xor
rclb
add
jno
adc
xor
cld
dec
rcrb
mov
lcall
rcl
jl
fcompl
faddl
rorb
pop
ss
inc
jno
movsb
adc
cltd
int3
outsb
jp
or
aam
mov
aam
cli
pop
mov
test
out
daa
pop
inc
pushl
loopne
mov
insl
cmp
call
push
add
pop
pop
clc
outsb
pusha
hlt
dec
mov
pop
rolb
arpl
out
out
hlt
xchg
mov
les
test
repnz
filds
outsl
cmc
shlb
mov
out
and
lcall
and
daa
insb
dec
adc
les
xchg
xchg
or
add
cmpsb
mov
sahf
cmp
and
lds
mov
push
icebp
push
in
jo
or
in
aam
inc
mov
sub
mov
xchg
movsb
in
loop
aas
adc
ljmp
jno
xchg
jle
push
add
push
test
je
push
stos
insb
jae
add
imul
xor
adc
and
sti
xchg
inc
adc
xchg
xor
sbbb
push
adc
fldt
mov
mov
or
mov
jno
out
repz
mov
pop
and
in
dec
xor
cmpsb
rcll
pop
xchg
mul
fisttpl
ret
ds
xchg
adcb
adc
mov
add
cmp
pop
ljmp
cmp
sub
popf
and
dec
icebp
js
mov
sub
rcrl
ljmp
xchg
mov
push
push
fisubrs
mov
jnp
popa
bound
xchg
sbb
pop
lods
jmp
aam
mov
and
jno
mov
testb
gs
xchg
or
arpl
jno
bound
xchg
arpl
mov
jg
mov
popf
and
jmp
jnp
pop
xchg
in
jne
ja
mov
loope
xchg
dec
daa
cmc
inc
pop
repz
jecxz
cmc
test
jns
push
mov
loope
sar
push
jb
pop
mov
outsl
les
push
inc
push
rcl
shrl
lret
out
add
lahf
mov
pop
lods
xchg
xor
testb
pop
mov
mov
test
push
dec
call
mov
lods
mov
pusha
call
movsb
or
stc
pushf
pop
stos
lret
int3
adc
push
mov
sub
clc
push
push
incl
je
shll
lds
add
lea
jbe
jae
ss
inc
test
or
xchg
cmp
imul
int
fimuls
pop
push
jge
roll
dec
lcall
popf
and
jl
lret
push
mov
mov
call
inc
xlat
in
sub
jg
adc
sbb
cltd
outsb
pop
cld
jae
mov
stc
push
sbb
cli
or
and
mov
inc
cld
xchg
push
mov
pop
into
jmp
sahf
in
xchg
out
adc
lcall
xor
std
jmp
sub
pop
insb
arpl
add
or
inc
push
inc
jp
push
call
sbb
ret
stos
xchg
adc
outsb
shll
pop
imul
into
cmp
cli
cs
jmp
dec
add
xor
lock
fildll
dec
mov
ret
inc
ret
cmp
pop
insb
xchg
fnsave
aas
popf
or
and
and
sahf
dec
mov
and
dec
push
cs
or
jns
clc
insb
xchg
lret
ds
dec
sbb
out
inc
movsl
insb
push
cmc
inc
popf
mov
sub
xchg
pop
leave
add
and
sbb
push
std
add
cltd
test
fwait
pop
ret
arpl
jb
iret
lret
fisubs
fistpl
dec
xor
and
repz
lods
xor
push
mov
fmull
rorl
repz
insb
test
cli
mov
fistl
aas
rcr
push
dec
jg
aas
xor
xchg
jne
mov
cmpsl
cmp
mov
loopne
pop
cmp
shlb
repnz
pusha
jg
aad
es
aam
orb
mov
push
sbb
pop
dec
in
jle
jns
subl
push
jmp
jnp
lea
lret
out
xlat
sub
fwait
mov
enter
test
adc
movsl
pusha
les
push
notb
mull
addl
xchg
mov
addr16
or
std
mov
push
lret
jne
je
lret
data16
jmp
jle
xchg
outsl
rcr
fildll
insl
imul
repnz
sub
or
pop
test
pop
mov
jae
pop
je
and
inc
outsb
push
sbb
mov
lcall
ds
lock
in
lods
mov
jo
icebp
lahf
pop
int
xor
pop
jle
in
pop
sbb
sub
ja
scas
xchg
icebp
fnstenv
push
mov
cmp
cs
bnd
xor
dec
mov
sbb
xchg
int3
cld
rcl
rcrl
add
lea
addr16
das
dec
movsb
sbb
mov
mov
sbb
sub
or
cmpl
enter
mov
or
nop
shl
push
loop
mov
scas
syscall
xor
mov
lods
push
lret
xor
cwtl
stc
icebp
out
hlt
js
cmp
in
ljmp
dec
dec
popf
mov
rolb
movsl
or
cmp
fnstsw
cmp
ja
stos
jo
push
xor
push
pop
pop
and
leave
push
inc
test
xlat
pop
ds
mov
mov
js
leave
xor
cmp
movsl
insl
xchg
jne
xor
lahf
insl
adc
mov
popa
inc
jge
mov
mov
cli
or
cwtl
nop
ret
sti
push
jb
pop
iret
jne
in
shll
imul
cmp
adc
rcl
adc
pop
outsb
jae
scas
inc
sub
jg
movsb
push
sahf
mov
dec
adc
movsb
int
out
je
ficoml
lcall
mul
into
mov
idivl
dec
scas
mov
dec
in
xlat
cltd
pop
testb
lock
jb
daa
push
push
call
movsb
or
add
rclb
testl
dec
pushl
mull
in
notb
inc
out
and
xor
es
stos
sub
mov
adc
mov
stos
pop
xchg
es
adc
adc
adc
jb
inc
aaa
push
cwtl
cmpb
jp
xor
adc
repnz
ret
pop
adc
inc
in
add
push
out
aas
es
repz
iret
mov
cmpsl
shlb
test
mov
call
jns
add
inc
bound
mov
sub
scas
sti
in
je
adc
pop
pop
aam
push
inc
pop
int
mov
push
aad
clc
sbb
fildll
scas
int3
adc
xchg
sub
movsb
adc
mov
popa
push
mov
fistpll
push
bound
and
xor
cmp
push
jmp
je
je
pop
lret
mov
push
mov
pop
arpl
mov
push
mov
insb
pop
and
in
inc
lahf
add
cmp
cmp
decb
sbb
out
push
imul
jo
repnz
dec
repnz
cmp
loop
pop
rcr
pop
pop
out
or
ss
test
lea
mov
je
push
xchg
shll
lea
and
push
dec
mov
or
out
and
push
mov
sbb
mulb
aas
cmp
insb
stos
or
icebp
movsb
xchg
addr16
sub
je
push
inc
or
dec
add
push
pop
mov
push
ret
stos
ja
pusha
xor
ss
xchg
mov
insb
sub
ja
shll
fisttpl
pop
cmpsl
cmp
xchg
pop
divl
in
test
filds
notb
lret
js
es
out
mov
or
push
test
bound
cli
out
xor
xchg
xor
dec
jnp
mov
pop
pop
mov
js
jle
mov
adc
adc
jne
dec
push
popa
lock
or
xor
and
add
and
add
push
or
hlt
pshufb
test
add
ja
jnp
or
in
in
push
insb
nop
aad
mov
shr
in
cmpb
xchg
ljmp
mov
int
lea
push
shll
std
adc
aam
stc
adc
inc
stos
scas
cmp
dec
mov
nop
int
adc
cmpsl
mov
inc
or
stc
push
fs
shlb
adcb
lret
xchg
mov
inc
mov
jmp
push
das
xchg
mov
adc
push
stos
xchg
test
lods
fdivrs
lret
std
out
repnz
jl
setae
mov
xor
dec
and
in
sub
std
test
lahf
pop
das
ja
movsb
das
xchg
adc
mov
movsl
cld
mov
xchg
pop
mov
push
pop
push
ret
pop
adc
mov
bswap
sbb
sub
inc
dec
inc
sti
mov
lcall
stos
mov
jg
enter
sahf
mov
clc
xchg
test
and
out
test
mov
test
jnp
outsb
je
mov
testb
pusha
es
out
dec
nop
xchg
jo
pop
cmp
add
mov
mov
add
bound
or
push
adc
movsb
pop
repz
leave
loopne
lds
fistpl
jbe
dec
mov
push
xchg
pushf
dec
push
push
roll
pop
xchg
scas
shr
int
or
lret
push
hlt
xchg
mov
add
sbb
into
mov
sarl
inc
add
stc
mov
adcl
ret
mov
out
inc
dec
pop
fiaddl
mov
jae
dec
sub
dec
mov
pop
ljmp
inc
and
mov
mov
insb
add
ss
lock
mov
and
in
mov
mov
pushf
mov
fidivrl
xor
sti
lret
xchg
xchg
mov
jae
mov
push
jae
cwtl
cwtl
push
sbb
mov
add
testl
jecxz
and
sub
aas
xor
sub
adc
sbb
loope
out
jp
pop
dec
sbb
mov
pop
pop
sbb
xor
sbb
scas
call
cli
dec
xorb
in
xchg
and
out
xchg
jnp
sub
mov
add
xor
mov
dec
in
aam
pusha
push
sub
out
jle
movsb
xor
xchg
xchg
or
push
jns
fldt
sub
or
add
outsl
pop
roll
mov
pop
int
es
std
push
out
or
add
push
xchg
sbb
xchg
lahf
sahf
int3
inc
mov
add
mov
divb
test
mov
push
sub
push
lret
xlat
cld
lea
mov
inc
pusha
aas
dec
gs
jo
cmp
ret
push
iret
or
mov
jbe
or
xlat
jmp
cs
dec
add
dec
mov
dec
inc
jb
cltd
enter
popf
adc
orl
dec
push
inc
cmp
mov
inc
mov
lock
cmp
jle
lods
shl
test
jb
stos
mov
mov
mull
or
daa
push
sbb
push
ror
jnp
pop
push
out
popa
mov
inc
mov
xchg
inc
xor
adc
test
aam
outsb
mov
les
sbb
dec
outsb
popa
dec
sbb
sub
or
jge
push
arpl
in
arpl
imul
inc
insb
int3
cs
sub
pop
adc
roll
rol
lods
mov
jg
jo
out
push
mov
jbe
js,pt
flds
mov
fmuls
idivb
clc
pop
enter
pop
mov
xor
fcompl
fmuls
mov
mov
fsubp
push
cmp
cmp
ja
insl
mov
mov
push
or
sbb
test
orl
stc
dec
shrl
inc
xor
pop
and
mov
inc
push
adc
out
cmpb
outsb
cmpsb
out
adc
dec
cmp
inc
xorb
lock
sbb
repnz
xor
clc
popf
and
ds
jbe
js
inc
mov
sbb
sub
xchg
sub
pop
push
out
xor
xchg
int3
dec
pop
cmp
and
jmp
pop
pop
hlt
and
pop
push
call
insl
mov
les
or
and
aad
sub
dec
lret
inc
in
jne
or
sub
push
push
adc
cmpsl
in
rol
add
xchg
mov
dec
daa
xchg
cmp
scas
adc
and
fstpt
jae
test
and
lcall
push
pop
jo
push
xchg
jg
in
add
pushf
enter
jmp
lret
ror
lods
lock
add
inc
loope
cmp
mov
shrl
stos
dec
sbb
test
xor
sti
push
xchg
xorb
mov
dec
mov
sub
inc
nop
pop
cmp
loop
insl
push
and
int
rolb
lret
mov
dec
sti
jmp
int3
push
pushf
pusha
scas
sub
cld
xchg
xchg
out
sub
or
fistl
test
pusha
mov
mov
mov
push
jns
imul
inc
xchg
xchg
mov
xor
mov
mov
test
es
mov
inc
out
and
pop
mov
clc
scas
mov
js
insb
mov
add
pop
js
cmp
enter
gs
neg
xchg
jne
inc
and
mov
xchg
adc
sti
das
fcomps
mov
imulb
push
xor
sbb
or
mov
adc
stos
and
sbb
pop
fldcw
sbb
out
push
jae
insl
nop
test
mov
xchg
in
pop
mov
xor
jbe
sbb
insb
into
fst
jae
mov
sub
ret
add
add
cmp
js
in
sbb
nop
imul
es
mov
dec
mov
testb
xchg
inc
or
ss
add
jmp
repz
cs
sub
xor
scas
sbb
xor
outsl
arpl
xchg
andl
daa
sbb
add
push
imul
mov
les
out
mov
in
mov
or
icebp
xor
andl
dec
mov
xchg
sub
pop
addr16
sub
movb
cmp
jb
adc
pop
sbb
out
xchg
mov
cmp
jo
inc
cltd
mov
aas
mov
js
sub
repnz
mov
jp
push
loop
cld
cmp
dec
sub
jb
pop
sbb
shll
insb
push
sbb
bound
or
pop
push
sub
pop
outsb
push
mov
sti
in
fldl
sti
insl
adcl
aaa
push
inc
arpl
push
mov
mov
pop
pop
cmp
mov
pop
mov
jne
inc
out
hlt
in
push
cmp
mov
out
or
mov
jae
ss
lret
push
sbb
and
mov
popf
mov
add
jl
lds
push
and
incb
inc
out
inc
insl
sahf
rcll
push
push
popa
movsb
mov
lahf
sbb
jle
les
push
jge
lret
jmp
add
mov
dec
inc
mov
scas
fistpll
daa
inc
or
call
add
mov
pop
xor
popa
lds
sahf
cwtl
sahf
add
lods
dec
and
cmpsl
jle
test
mov
out
cmp
or
pop
lea
and
shrl
xorb
sub
es
or
loope
divb
les
mov
ret
inc
test
xchg
orl
cli
or
and
popa
push
mov
jmp
out
inc
jle
fdiv
nop
fwait
add
adc
mov
xchg
cmp
fstpt
iret
cwtl
pop
data16
arpl
ret
ret
pop
mov
out
testb
int
cli
test
loop
out
sbb
push
xchg
jb
leave
xchg
jge
push
jo
bound
and
repz
ret
std
ret
xchg
push
mov
aad
dec
in
xchg
sti
cmp
lcall
mov
dec
sbb
lods
mov
sahf
cmp
pop
lock
sbb
sub
and
cmp
fldenv
ss
fdivrs
jle
movsl
xchg
outsb
lods
lock
pop
mov
in
std
rcr
rcll
cmp
movsb
add
repnz
mov
idivl
pop
xor
mov
jae
add
push
mov
les
outsl
add
jnp
icebp
addr16
repz
sub
mov
xchg
scas
in
clc
xchg
add
js
add
in
jae
sbb
jnp
jl
and
popa
out
ret
dec
cli
mov
cs
push
add
xor
filds
cld
ret
in
add
fs
or
cltd
call
dec
jmp
cmp
dec
nop
push
dec
inc
xor
jbe,pt
nop
in
mov
test
cld
lahf
and
adc
test
fwait
pop
lods
mov
inc
lcall
jns
daa
or
add
inc
mov
pushf
rclb
xchg
or
adcl
loope
sbb
pushf
mov
xchg
imul
push
sbb
clc
iret
fst
mov
add
js
or
add
fimull
fs
ret
lods
test
inc
jns
das
hlt
ret
push
arpl
insb
std
rcr
out
sbb
rcrb
jl
sub
aam
scas
hlt
mov
lcall
in
pop
je
leave
or
lods
movsl
call
das
or
adc
icebp
mov
add
pop
aas
mov
jge
and
push
cmp
loope
cmpsl
or
stc
data16
scas
cmc
stc
shl
adc
mov
cmp
sub
xchg
sub
out
jo
add
xchg
sub
xchg
mov
mov
adc
cmp
jge
cmpsl
cmc
insb
jo
enter
ljmp
cmp
gs
mov
mov
cmp
jecxz
mov
jnp
cmp
lds
sbb
mov
jmp
movsb
jne
cmpsl
xchg
adc
jg,pt
xor
add
insb
gs
hlt
push
push
add
push
push
mov
sbb
mov
sub
mov
sbb
xor
xor
insb
push
hlt
add
rcrl
subb
cmpsb
dec
pop
repnz
sub
mov
and
mov
ss
icebp
lock
jno
push
scas
and
inc
call
xor
mov
iret
or
mov
dec
mov
and
cmp
in
xchg
fdivrs
mov
mov
push
jle
sbb
pop
iret
cmp
ret
mov
jno
ja
xchg
mov
mov
cmpl
push
sub
dec
cltd
and
in
pop
cld
mov
push
fistl
add
mov
sub
push
jo
sti
jecxz
push
pushf
int3
mov
xlat
adc
fs
mov
pop
or
aam
sub
ljmp
or
push
adc
ret
xor
daa
xchg
lods
adc
pop
pop
test
add
stc
xlat
arpl
jle
or
cmp
mov
in
push
or
and
sbb
and
arpl
sbb
faddl
or
ljmp
fldcw
mov
negl
es
sti
xor
sub
lahf
fcmovnu
dec
scas
add
stos
inc
hlt
jae
outsl
shr
stc
mov
stos
pop
mov
or
lds
arpl
testb
decl
in
mov
pop
jp
insb
xchg
cmp
push
or
pop
insb
xor
cli
mov
test
and
aaa
hlt
mov
xchg
xchg
lods
cltd
pop
ret
add
test
mov
fs
pop
push
cmp
jge
jge
push
popa
mov
clc
outsl
sarl
mov
jbe
das
sub
cld
inc
into
jae
rcrl
mov
sbb
and
mov
mov
in
inc
lods
push
call
mov
bound
xchg
call
shr
xchg
rcrb
jp
in
stos
cmpsl
jp
fsubl
in
cmp
mov
add
ret
sbb
lea
adc
mov
xor
adc
jmp
push
mov
xor
ljmp
dec
leave
popa
push
jp
add
mov
push
cmp
iret
jbe
mov
xchg
add
dec
mov
in
lret
push
sub
hlt
sbbl
sti
ds
inc
or
sub
jp
addl
xchg
jle
out
mov
mov
mov
aam
sub
iret
fwait
push
popf
rcr
adc
test
mov
sbb
add
insl
xor
fs
sbb
jp
rcl
je
dec
sbb
fmull
out
cmpsl
dec
cld
jns
inc
mov
cwtl
jae
add
call
dec
jno
lock
sbb
xchg
mov
fmul
mov
xchg
mov
sub
dec
out
popa
icebp
adc
fsubrs
xor
lcall
xchg
out
xchg
mov
sbb
rep
fs
es
add
lret
inc
cld
in
ljmp
cmc
fisubl
inc
pop
or
imul
rolb
int
in
pop
xor
out
pop
enter
push
mov
cmc
lods
out
add
fmull
mov
xchg
jmp
and
ljmp
leave
sbb
insb
pushf
mov
sub
ret
ret
andl
adc
xor
add
push
jb
outsl
pop
iret
dec
and
and
inc
mov
inc
adc
mov
stos
in
adcl
inc
test
jno
and
andb
test
push
sub
in
cwtl
stc
jae
daa
sub
ja
mov
cwtl
or
pop
jp
mov
mov
push
mov
and
jecxz
xlat
js
dec
sbb
pop
cli
push
inc
mov
or
rclb
movsb
xchg
divl
arpl
test
int
mov
xor
popa
and
test
movsl
cmp
shlb
pop
mov
adcb
iret
movl
jg
into
into
and
add
bound
push
andb
aad
out
lods
mov
xor
pusha
stos
xchg
aaa
stc
iret
sar
xor
add
adc
and
sbbb
int3
xor
shll
lcall
adc
imul
rcrl
sbb
inc
jmp
es
sub
pop
and
bound
je
jno
sub
fildll
mov
dec
jno
inc
lret
and
pop
adc
pop
insl
jns
push
inc
mov
add
lds
inc
push
mov
adc
rol
movsl
stos
movsb
cmpsb
mov
data16
dec
jle
repnz
aam
sti
jo
daa
fsubp
int
fistpll
cld
push
xor
mov
xchg
stos
cmc
or
fcmovnu
cs
fldl
mov
mov
mov
dec
dec
jae
xor
mov
pop
xchg
imul
sub
pop
cmpsl
rol
imul
push
sub
out
shl
dec
popf
cmpb
xchg
push
xchg
push
sub
mov
adc
orl
and
add
js
aad
pushf
add
or
inc
dec
movups
xor
jecxz
cli
hlt
insb
inc
cs
movsl
dec
ljmp
mov
rclb
and
add
push
cmp
aam
shrl
add
addl
sbb
mov
add
jae
stos
mov
addb
dec
lret
add
add
ficompl
imul
mov
add
lahf
out
pop
and
mov
mov
orl
dec
xchg
add
imul
sbb
out
fildll
add
mov
jle
inc
mov
add
dec
jno
jbe
adc
xadd
sub
loop
xchg
xchg
xor
dec
lahf
gs
in
pop
out
sti
cmp
push
das
ja
imul
sbb
cmpsl
lea
into
xchg
add
rolb
fsubrp
and
xor
xor
push
dec
cmp
push
ficoms
xor
loope
fsub
mov
mov
xor
dec
loope
notl
repnz
adc
inc
xchg
and
mul
pop
fsubr
xchg
sub
daa
arpl
mov
call
push
jae
out
cs
adc
or
shll
and
inc
jge
add
push
ret
pop
flds
and
push
insl
iret
dec
and
mov
pop
pop
cmp
stos
mov
cmpsl
imul
add
jno
ret
cmp
sbb
lds
movsb
xchg
jns
data16
push
fiadds
sbb
add
stos
xor
fstl
xchg
cmp
loope
xor
or
ljmp
sahf
testl
bound
push
imul
repnz
sbb
push
stos
insl
cmp
fiaddl
mov
xchg
out
fdivrs
popa
insl
scas
mov
push
lock
testl
daa
out
std
aas
mov
sbb
adc
fs
mov
cmpsl
add
xlat
xchg
and
js
xor
sub
out
popa
inc
and
sub
stc
pusha
lods
mov
stos
push
cltd
mov
mov
lcall
hlt
lds
fstl
mov
imul
dec
xchg
sarl
mov
fisubs
mov
out
push
sub
fildll
pop
jne
pop
or
pop
cld
icebp
enter
mov
pop
adc
inc
aam
ss
xchg
ss
hlt
movsb
gs
jg
ss
outsl
xchg
cmp
clc
pop
or
cmp
mov
and
jg
adc
adc
mov
pop
loop
pop
je
add
lcall
adc
and
jg
insb
ficoms
icebp
movsl
adc
lock
xor
sbb
push
mov
stos
fidivl
repnz
mov
jp
push
out
jae
and
sub
jecxz
sub
fisubrs
cmpsb
sbb
push
rclb
out
jae
outsl
lret
mov
cs
add
faddl
xchg
sub
ret
cltd
xchg
mov
loope
ljmp
sbb
mov
pop
cmp
faddl
mov
mov
pop
sub
rcrl
mov
hlt
ret
cmp
outsl
xchg
inc
sub
cmp
sub
pop
sahf
jae
loope
std
addl
and
push
push
pop
xchg
adc
scas
roll
stos
fmulp
jne
je
sub
pop
inc
jg
in
xchg
mov
add
push
jl
push
adc
xchg
add
adc
rclb
outsb
mov
sub
and
cwtl
dec
cmp
out
sbb
push
push
je
adc
js
xsaveopt
out
clc
fisubrl
xlat
xchg
in
add
cmp
mov
outsb
add
icebp
xor
fs
nop
repz
mov
xor
inc
bound
in
imul
cld
xchg
lds
jmp
popf
ds
loope
ds
pop
adc
enter
in
add
and
cmp
add
fcmovne
push
or
loop
lret
or
mov
adc
mov
mov
loop
jmp
imul
arpl
test
add
insb
in
call
pop
xchg
test
nop
xchg
jmp
add
popa
dec
inc
fcmovbe
shrl
push
incb
dec
pop
icebp
push
mov
cmpsl
movsl
gs
or
mov
movsl
cmc
pop
clc
mov
and
mov
stos
add
dec
pop
fisttpll
mov
push
arpl
insl
mov
cmp
popf
sub
clc
or
xchg
lea
imul
jge
and
xchg
cmp
mov
cmp
movsb
xchg
pop
fisubs
push
gs
mov
push
out
jmp
or
add
sub
test
test
fbstp
dec
jne
inc
dec
jae
ret
inc
shl
test
test
sbb
sub
pop
or
add
push
cmp
sti
add
sbb
loopne
inc
int3
bound
xor
add
cwtl
inc
xor
nop
pop
sbb
cmp
repnz
mov
xor
shrb
push
sbb
jecxz
xor
ds
outsl
lods
jae
test
mov
pop
pop
sarl
sarb
xchg
xchg
jmp
int3
jbe
pop
or
pushf
bound
int3
cmp
mov
ja
push
push
stc
addr16
js
stos
outsb
push
dec
adc
or
push
mov
stos
shrl
cmp
fcomps
mov
lods
rol
fnsave
mov
mov
nop
pop
sbb
pop
sub
ret
ret
push
shr
out
mov
dec
dec
mov
cli
pop
xchg
dec
idivb
rcrl
dec
das
push
jle
aam
in
out
jns
mov
roll
pop
push
stos
add
adc
adc
inc
stc
in
stos
dec
clc
lods
mov
loope
add
fdivs
lods
mov
jbe
sub
mov
sti
rol
sahf
jl
pushf
inc
lods
pushf
and
fcmovnbe
sbb
lret
pop
bound
jp
push
call
jo
dec
jnp
icebp
gs
fldenv
xchg
and
or
mov
fadds
mov
scas
leave
ds
mov
rorb
jbe
push
rcrb
fsubrs
xor
xchg
inc
lds
pop
push
repnz
xabort
repnz
js
xchg
dec
iret
or
push
add
mov
push
push
fistps
xchg
mov
adc
and
idiv
test
ljmp
es
loop
or
das
push
fcoms
adc
jecxz
adc
insb
fildl
mov
clc
dec
jl
mov
add
pop
ror
nop
mov
in
cmpsb
std
xlat
shlb
fbstp
imul
adc
iret
enter
fsubl
mov
xor
add
adc
or
ret
jp
in
aas
stos
cmp
push
mov
pop
mov
movsl
sbbl
in
aam
loop
scas
xlat
jecxz
lcall
mov
xchg
loop
cmp
sbb
jle
xchg
pop
test
and
fucomi
xchg
sbb
dec
push
pop
movsl
pop
cmpsl
cmp
cmp
arpl
mov
cmp
add
out
jle
or
std
mov
addb
sbb
notl
sbb
ja
push
mov
mov
gs
stos
in
cmp
sbb
add
push
jb
arpl
jnp
aam
lret
inc
fcmovu
fsubrl
cmc
xlat
outsb
or
lret
jb
cs
aaa
cmp
sarl
jge
cld
mov
hlt
add
push
fld
sub
dec
jl
ja
adc
add
adc
sahf
fmull
pop
out
dec
mov
or
cmpsl
xchg
adc
inc
gs
add
loop
mov
xor
fsubs
fistl
xor
jmp
mov
push
fistl
pushf
leave
filds
imul
mov
dec
aam
int
jmp
js
add
mov
cmpl
mov
push
push
ss
or
sbb
int
push
push
daa
push
scas
mov
mov
xor
pause
sub
add
push
loopne
int3
pushf
out
sbb
bound
stc
mov
dec
add
in
mov
lods
in
popa
lea
loop
sarl
mov
les
jae
mov
add
clc
in
adc
sbb
test
sbb
xor
jge
xor
scas
pop
popa
les
ret
cmp
cmpl
std
dec
call
xor
mov
popf
mov
or
testl
xor
fdivrs
je,pt
mov
rol
cmpsb
cli
call
aad
js
cmovne
sbb
insb
enter
inc
and
popa
iret
inc
inc
loopne
mov
jae
xor
push
pop
out
rclb
add
je
call
fsubrp
ds
ret
inc
test
nop
mov
jno
test
jl
xor
add
xlat
stos
or
mov
cmp
xchg
lods
cmp
cmpl
pop
repnz
add
cmpsl
lret
sub
xor
lret
enter
div
loop
mov
dec
out
je
xchg
rorb
pushf
into
inc
jbe
ret
and
sbb
cmp
jo
xchg
push
mov
sbb
insl
in
mov
cwtl
aaa
push
roll
stc
out
mov
sbb
shlb
jae
xorl
mov
jns
lahf
loopne
dec
adc
hlt
lea
and
sub
pop
adc
pop
lods
push
std
mov
xor
cmp
ds
push
mov
jb
pushf
xor
pop
dec
je
lret
mov
xchg
adc
les
sub
dec
jno
repz
jle
lea
jmp
mov
loopne
add
repnz
lahf
loop
testl
sbb
cs
cmp
es
loop
sbb
inc
xchg
fistpll
sub
and
mov
sbb
jb
test
jo
outsb
fcmovne
mov
push
or
dec
scas
out
roll
das
in
xchg
shrb
aam
fmull
cld
lds
ficomps
mov
xor
jp
pop
xchg
sub
loope
mov
mov
das
sub
mov
fisubrs
je
stos
xor
cmc
stc
xchg
pop
jb
inc
mov
push
cmp
inc
sbb
roll
fwait
les
jno
mov
jns
cs
jno
stc
lods
pop
iret
xchg
lea
cmp
add
pop
mov
sub
cwtl
movsl
ret
pop
shrb
aam
push
and
sbb
sbb
lods
and
xorl
dec
mov
fwait
in
and
cmc
pop
repz
mov
repnz
rcrb
lods
mov
and
bound
outsb
push
xor
ffreep
fldt
push
cmpsl
repnz
mov
dec
enter
push
std
addr16
inc
xchg
xor
es
cmp
adc
mov
cwtl
cmc
shrb
rol
inc
xor
xlat
xor
or
mov
test
call
or
jecxz
fdivs
lods
ret
pusha
in
shrl
mov
insb
dec
mov
int3
nop
popf
jecxz
lahf
outsl
pop
pop
lods
dec
aam
sub
adc
lret
hlt
test
push
notb
adc
sbb
cmp
jge
ret
lds
mov
xor
xchg
stos
adc
push
stos
fs
imull
jbe
sbb
push
mull
pop
inc
jne
mov
xchg
aam
pop
js
xchg
sbb
test
jne
negl
xchg
movsb
cmpl
fcompl
mov
pop
jg
add
mov
das
imul
and
outsl
shlb
sbb
adcl
sbb
or
lcall
inc
das
dec
loope
mov
dec
sub
push
pop
gs
xchg
and
dec
inc
inc
push
cmp
iret
jmp
pop
cmp
lock
lock
lods
out
lret
xor
fs
sbb
imul
mulb
movsb
mov
stc
lock
cmp
cmpl
mov
mov
dec
in
in
pop
cmp
pusha
and
lret
movsb
in
pop
dec
xor
cmpsl
or
ljmp
pop
pop
push
icebp
leave
sti
inc
xor
cmpsb
ljmp
imul
loope
outsl
inc
jle
nop
ljmp
lea
inc
mov
fstpl
shl
or
aaa
adc
fcomps
or
ljmp
and
adc
mov
imul
int3
outsb
in
lods
loop
sbb
cltd
sub
push
in
ret
pop
mov
popf
sbb
mov
mov
sub
mov
ljmp
loope
in
aaa
cs
or
cmc
lea
pusha
lret
jae
adc
xlat
inc
movsb
bound
movsb
shrb
sub
in
or
iret
or
push
jo
pop
paddd
sub
jno
inc
pop
push
lock
mov
stos
bound
sbb
add
in
mov
cwtl
rclb
int
scas
inc
mov
sub
fisubs
cltd
ds
repnz
gs
pop
es
jle
cmp
aam
pop
xchg
pop
add
fidivrl
push
outsl
sub
xchg
mov
mov
int
mov
test
insl
pop
clc
mov
xor
mov
jmp
jae
out
or
and
fwait
xor
popl
add
pop
decb
inc
and
push
sub
push
pop
xor
aad
shl
hlt
insl
ss
pop
xorl
pop
and
test
sbb
arpl
cli
sbb
outsb
jmp
cld
or
sbb
shrb
insl
inc
call
jecxz
dec
out
lods
mov
xor
nop
adc
or
jl
cmp
inc
mov
sub
mov
cmp
das
jle
mov
mov
add
rcll
cmp
stos
pusha
fwait
sub
mov
ret
imul
in
adc
loope
sub
outsl
sub
adc
xchg
cmc
pop
mov
insb
mov
es
ljmp
cmp
dec
mov
inc
push
movsl
pushf
sar
ret
or
sti
cmp
jnp
ret
aam
ss
pop
cmovs
je
xor
pop
inc
xchg
stos
cmpsl
mov
mov
scas
js
push
ret
addr16
sbb
mov
dec
pop
subb
int3
cmc
pusha
sbb
negl
mov
bound
in
inc
pop
mov
sbb
sbb
nop
insl
xchg
int3
push
loop
sbb
gs
mov
adc
popa
ss
xchg
inc
fadd
mov
insl
add
mov
adc
or
sbb
scas
loop
lock
push
mov
lcall
jge
add
push
lock
js
jge
push
cmp
inc
and
nop
daa
add
clc
pop
arpl
jne
aaa
push
dec
stc
mov
mov
pop
call
aaa
je
outsb
adc
cmpl
mov
push
rcrl
lods
or
clc
jns
orl
out
dec
sbb
adc
mov
imul
pop
sbb
jo
push
push
jnp
fcompl
xchg
ljmp
xor
cmc
jns
outsl
adc
pop
or
jo
loope
popf
push
int3
btc
add
and
loopne,pt
jb
and
mov
add
push
outsl
sti
fnsave
insb
xor
jo
int3
push
xor
push
push
inc
and
xchg
mov
pop
pop
and
gs
mov
lods
aas
sub
filds
lcall
loopne
lods
pop
fisubl
xchg
sbb
test
xchg
jnp
les
push
jne
repnz
loopne
xchg
into
push
jge
mov
out
jnp
jnp
test
loope
and
jnp
or
das
loopne
inc
mov
enter
add
data16
mov
push
mov
mov
testl
inc
push
mov
mov
mov
sbb
sbbb
hlt
or
push
and
and
mov
loopne
cmp
stos
cmpsl
mov
loope
cmp
dec
test
dec
incb
mov
lret
push
mov
std
cmp
in
movb
push
cmpsl
sub
out
dec
sti
in
fildl
xchg
movsb
test
ret
cmc
clc
mov
push
pop
mov
popf
lret
fimuls
mov
sub
sub
addr16
shrl
cmp
pop
xchg
loope
and
jne
stos
dec
iret
es
filds
cs
insb
push
jge
inc
jl
into
lods
mov
dec
fnstenv
stos
ja
mov
push
hlt
cs
xchg
push
and
movsl
xor
adc
test
cli
push
cmp
mov
add
and
sbb
sbb
xchg
jbe
cwtl
insl
jne
push
mov
cmp
cwtl
add
jle
add
mov
shr
js
sti
push
icebp
adc
mov
dec
loopne
mov
pop
xchg
call
jne
dec
pop
xchg
and
sub
sbb
and
push
xor
orl
lahf
sub
add
inc
ret
mov
js
jnp
fs
stc
pop
mov
xor
adcb
mov
sbb
mov
dec
pop
pop
pushf
insl
adc
sub
out
fcom
sub
mov
xchg
int3
in
movsb
dec
push
out
mov
ret
mov
cli
insb
xchg
sub
test
jp
subb
fs
pop
outsb
fnstcw
mov
push
push
bound
mov
push
lahf
gs
mov
leave
adc
scas
xchg
sbb
dec
or
jmp
mov
adc
iret
mov
pop
sbb
imul
arpl
fcmovnbe
cmp
push
loope
mov
sub
lds
adc
mov
scas
xchg
hlt
incl
je
sub
pop
sbb
mov
sub
pop
ret
dec
xlat
cmpsb
pop
movsl
push
fstpt
cmpsl
adc
in
or
xchg
and
addr16
sbb
fdivs
popf
jo
inc
test
lahf
fiadds
pop
mov
cli
call
mov
or
xchg
and
mov
ret
scas
xchg
sbb
push
jb
adc
sub
jb
inc
das
aaa
sbb
add
inc
aad
xchg
in
aam
jbe
sahf
push
ss
push
xor
pop
aad
int3
sub
dec
enter
sbb
cs
es
inc
shl
mov
and
cmpsl
pop
add
shlb
or
rol
movsl
pop
jb
cmp
jecxz
out
push
aaa
mov
sub
cmc
fisubs
xchg
dec
pop
add
lret
sarl
jae
sbb
or
scas
fldenv
mov
clc
imul
and
icebp
and
rorb
fwait
cmp
lcall
in
sbb
gs
shll
xchg
imul
dec
and
dec
mov
mov
xor
fdivrp
sub
xchg
xchg
mov
and
cmpsl
pop
pop
les
pop
mov
add
push
add
bound
pop
push
cmp
dec
sub
pop
stos
mov
sbb
xchg
xor
and
pop
outsl
cwtl
add
je
dec
in
and
test
jmp
xor
ret
loop
sbb
xor
mov
movsl
shlb
les
idiv
mov
adc
push
loope
rcll
in
nop
cld
mull
add
sbb
cpuid
pop
sar
arpl
sbb
jp
mov
xor
add
insb
sar
dec
aad
inc
mov
mov
pop
popl
pop
out
ret
jmp
test
ror
jmp
xor
cmp
xchg
or
fwait
mov
rolb
lods
outsb
or
cmpsb
shlb
push
jo
clc
cmpsl
xchg
mov
mov
lds
sti
cmp
lahf
inc
addl
int
push
lret
xchg
test
xchg
popa
pop
inc
inc
xor
xchg
ret
xor
outsl
sbb
imul
std
aas
ffreep
stos
lret
scas
sti
ja
aad
push
gs
xor
insl
daa
in
fsubrl
mov
shlb
out
sbb
lods
xor
inc
scas
psubd
das
cmp
data16
sbb
lret
xchg
loope
es
out
lea
lock
dec
add
pop
shlb
push
xor
mov
insl
push
gs
ljmp
or
inc
dec
push
jmp
aaa
pop
loopne
cld
les
cwtl
iret
out
stos
lcall
movsb
call
pop
fs
mov
mov
sub
outsb
xchg
dec
je
nop
test
xchg
pop
outsl
hlt
out
and
jle
movntps
mov
xor
adc
pop
dec
test
repz
push
push
sbb
push
adc
mov
js
add
cmp
popf
mov
mov
and
rorb
and
shll
dec
lock
int
xchg
repz
lods
in
in
mov
movsl
or
idiv
push
sahf
fcmovb
dec
aad
add
cmc
sti
adc
jecxz
out
repz
jmp
idivl
in
test
sbb
loope
rcrl
jns
ljmp
hlt
xchg
dec
es
rorl
call
add
mov
ja
sbb
imul
sbb
fwait
mov
pop
cltd
cmc
fwait
hlt
dec
xchg
je
stos
and
imul
xor
sub
xchg
xor
dec
les
ds
cmp
fimuls
jmp
dec
mov
test
cli
pop
iret
jle
cltd
cmp
push
mov
dec
adc
and
and
cmp
xor
jns
jo
dec
fldt
add
sbb
xor
jg
or
jg
dec
cwtl
jbe
nop
mov
xchg
sub
int
sahf
mov
cli
or
hlt
add
add
inc
shll
decb
lahf
lcall
add
mov
mov
cli
test
es
imul
call
pop
sub
loopne
les
adc
shrb
jb
outsl
jl
aam
testl
dec
sub
dec
pushf
lret
cmp
dec
pop
movsb
enter
mov
mov
mov
cwtl
and
jbe
test
fsubrl
mov
or
adc
cli
scas
aam
mov
jmp
testb
sysret
sbb
leave
inc
adc
inc
or
add
xchg
or
or
mov
lds
ss
int
cmovbe
clc
lea
push
movsb
pop
dec
xchg
in
cmp
or
jae
jbe
adc
xchg
and
shlb
jge
xor
lret
addl
test
test
das
out
sahf
aad
cmp
add
out
pop
inc
leave
xchg
mov
jne
pop
cmpsl
loopne
andl
or
pop
mov
and
loope
adc
in
imul
mov
mov
scas
add
mov
sbb
jp
lcall
int
mov
sub
add
mov
sahf
hlt
fwait
mov
jmp
push
orb
lock
jne
add
cli
aas
mov
cmp
leave
fidivl
and
dec
pop
mov
jle
lock
into
xor
inc
mov
jg
cmp
mov
inc
push
roll
outsl
push
dec
push
popa
andb
xor
mov
pop
emms
mov
mov
gs
mov
ss
fistpll
imul
cmp
pop
dec
dec
jns
and
pusha
jo
xor
mov
fidivs
xlat
movsb
xchg
xchg
movsb
sbbl
in
test
outsb
push
in
mov
outsb
sbb
ret
sahf
mov
cmp
dec
sub
xor
lds
adc
pusha
clc
insl
cmp
lds
orb
das
mov
lods
push
enter
adc
pop
push
mov
lods
xchg
addr16
push
xchg
mov
adc
std
scas
mov
sahf
mov
ljmp
mull
jns
sbb
push
mov
aas
jno
scas
je
dec
xchg
or
ret
mov
loope
mov
or
cmp
and
pop
mov
call
out
or
xchg
orb
cs
test
das
aam
inc
leave
rolb
xchg
in
or
mov
pop
fmuls
lret
int3
loope
lds
int
mov
adc
push
xchg
mov
sbb
add
cmp
sbb
test
xchg
stc
popa
scas
mov
sub
push
sbb
jbe
dec
test
sbb
push
pushw
and
cmp
fadds
lcall
mov
dec
cmp
and
ret
cmp
sbb
adc
sbb
sub
les
add
mov
out
mov
das
mov
lds
jl
paddd
mov
jmp
lock
fidivrs
sub
in
cs
popa
leave
or
jmp
hlt
cmp
fs
pop
adc
addr16
jg
mov
lods
cmp
add
fcmovbe
xchg
push
and
loop
mov
and
mov
bound
sbb
bound
pop
mov
std
mov
pop
out
repz
dec
inc
icebp
out
mov
jo
jns
xlat
aad
loope
cwtl
cmp
push
mov
ret
sbb
mov
xchg
popa
sbb
imul
and
fsts
movsb
sub
ficomps
int
cld
pusha
dec
fiaddl
imul
rcrw
cmp
jge
adc
cmp
push
sbb
cmp
pusha
lret
dec
adc
sti
jmp
daa
xorl
mov
mov
mov
sbb
jne
or
movsl
xor
lds
jp
mov
pop
fdiv
adc
push
mov
popf
sub
int
cltd
push
mov
cwtl
ret
negb
repz
and
jp
mov
popa
push
pop
mov
dec
jb
mov
xor
test
mov
repnz
in
mov
mov
cwtl
ret
cld
jecxz
mov
cmp
and
jno
inc
imul
xor
aaa
or
fdivr
jbe
bound
xchg
push
in
outsb
mov
shr
and
aaa
cltd
dec
ljmp
push
popa
xor
test
mov
mov
cld
imul
out
rcr
in
scas
sbb
hlt
sub
mov
ror
int3
stc
dec
stos
sub
dec
push
test
mov
aas
xlat
cmp
jb
movsl
in
adcb
icebp
mov
cwtl
push
out
call
fldenv
xchg
ret
cltd
les
dec
mov
jl
insl
fsin
sub
xchg
add
out
scas
popf
mov
mov
frstor
xor
stos
mov
movsb
dec
lock
mov
addr16
iret
adc
and
jecxz
sbb
xchg
pop
cmp
mov
in
fs
ss
fcmovb
bound
lea
xor
mov
mov
lock
jecxz
test
pop
xor
jmp
push
shl
dec
mov
dec
cmpsl
ret
pop
imul
jae
in
xorb
pop
popa
stos
mov
fisttpll
and
adc
scas
shrb
push
loop
ss
dec
cltd
test
cmpsl
fisubrl
cli
sbb
fidivs
nop
mov
inc
adc
fs
jns
pushf
dec
mov
gs
bound
cmp
hlt
fadds
pop
dec
push
sub
imul
mov
pusha
mov
lea
push
adc
jmp
cs
aad
inc
jo
mov
sub
iret
cmp
fldlg2
repz
aas
rcrb
fwait
shlb
pop
jge
and
mov
rcrb
ljmp
adc
aaa
out
clc
fisubrs
lods
sbb
inc
sub
inc
mov
xor
sub
daa
mulb
xor
decb
sti
xchg
jns
adc
or
dec
dec
in
pop
pop
or
lcall
loop
mov
mov
inc
mov
ja
mov
into
dec
nop
repz
inc
add
shrb
push
arpl
sbb
jbe
pop
pop
loope
mov
jb
mov
les
outsb
iret
fstps
daa
dec
xor
mov
mov
dec
pushf
pushf
jg
lock
cmp
xchg
xchg
sbb
ficompl
adc
iret
pop
lcall
stos
aam
or
pop
cli
outsb
inc
mov
jge
xchg
fldcw
scas
add
jb
mov
lock
mov
nop
ljmp
jo
mov
inc
cmp
inc
cwtl
jecxz
fs
pushf
repnz
push
sti
jg
adc
scas
or
inc
push
and
int3
bound
and
les
jae
scas
sub
pop
lds
shll
stos
lcall
jmp
adc
inc
jp
das
out
inc
pop
aad
dec
mov
fsts
pop
nop
cli
mov
jl
fs
mov
mov
sbb
mov
stos
xchg
pusha
xchg
dec
add
jo
push
xor
sbb
sub
jmp
scas
push
ja
sub
inc
push
mov
lret
movsl
fildll
xor
cmp
loopne
rcr
or
xchg
adc
out
in
pop
sbb
out
dec
sbb
dec
sahf
mov
jl
xchg
stos
sub
leave
sti
jl
daa
lret
jmp
and
loopne
add
sub
in
push
pusha
adc
mov
jnp
ds
dec
iret
push
call
push
jae
push
ret
add
bound
xchg
sar
pop
data16
mov
in
push
add
adc
fcompl
sarl
lahf
dec
mov
mov
ret
ret
pop
insb
stos
call
mov
or
out
jmp
rorl
repnz
into
and
sub
stos
xor
or
hlt
xor
sub
add
rorb
pop
cmp
jge
jmp
lods
pop
adc
push
lahf
int
or
or
mov
mov
stos
insb
shlb
xorl
pop
std
lret
addr16
bound
loop
inc
mov
push
push
fdivl
rolb
dec
push
loopne
stos
ja
test
pop
cmpb
pop
mov
adc
test
jb
xchg
gs
cmp
cli
inc
jae
jge
ds
lahf
lock
je
mov
jnp
dec
cmpsb
cli
jo
mov
mov
push
push
push
add
jp
jb
push
pop
pop
mov
in
stos
fcompl
lods
mov
js
inc
movsl
testb
int
jmp
inc
inc
adc
mov
sahf
xchg
loope
lock
adc
cmp
push
cmp
orl
fsts
mov
outsb
mov
pop
lret
setns
out
fcmove
jno
lcall
aas
aad
pushf
bswap
pop
int
adc
sahf
out
xchg
cmp
adc
ss
sub
inc
inc
into
dec
popf
or
das
int
sbb
andl
in
xchg
add
stc
orl
mov
sub
rolb
scas
jecxz
cmp
inc
aad
mov
lret
pop
mov
sub
loopne
pop
popa
loopne
push
jp
out
add
enter
les
fs
mov
add
xchg
jb
dec
lods
incb
loopnew
test
jno
out
pop
cs
add
lods
std
mov
and
add
mov
jb
mov
add
or
xchg
sbb
rclb
jnp
shlb
bound
push
mov
mov
mov
cld
jno
rcll
stos
dec
mov
in
imul
lret
daa
arpl
xor
push
nop
imul
mov
or
xor
mov
jg
adc
add
push
add
pusha
stos
lea
sub
adcb
sbbb
xor
fisubrs
pop
xor
add
ljmp
push
mov
xchg
arpl
cmp
adc
mov
repnz
or
push
xor
cmp
xchg
xchg
xor
leave
ficoms
cmp
or
inc
push
sub
lock
out
mov
sbb
xchg
into
sub
stos
pop
inc
jb
push
in
lods
ret
in
and
pop
fwait
lods
fnstsw
xchg
xchg
popa
push
mov
jae
xchg
stc
xor
popa
movsl
and
push
pop
dec
mov
xchg
int3
pop
cmp
mov
ja
jle
shl
sbb
ret
xor
xlat
pop
cmc
movsb
xor
es
sub
push
and
dec
pop
add
and
dec
push
push
mov
lret
aas
adc
sub
roll
dec
mov
dec
test
fdivr
stos
arpl
inc
dec
inc
mov
mov
lods
fwait
mov
out
fs
add
in
dec
jbe
pusha
or
xchg
cmp
push
lret
mov
sbb
push
jo
or
shrb
shr
cmpsb
int3
stos
mov
push
jns
pop
mov
enter
scas
xor
push
and
xchg
xor
nop
fwait
push
pop
fcompl
mov
sub
call
or
imull
xchg
push
in
lods
test
stos
mov
push
std
sbb
and
negb
inc
add
fcomi
add
test
insl
xor
jl
dec
pushf
jl
sub
push
stc
push
cli
fcoml
xor
push
dec
mov
int3
xchg
mov
lods
call
outsb
inc
fstps
arpl
mov
sbb
mov
xor
inc
addb
xchg
push
dec
mov
mov
push
sub
out
mov
ja
xchg
xor
sbb
jmp
xchg
aad
fwait
rorl
jno
and
shrb
push
mov
cmpsl
cmp
fisubs
mov
hlt
arpl
inc
pop
pop
xor
fstl
push
sub
sbb
pop
or
iret
mov
call
jne
xor
mov
xchg
cmp
adc
add
addb
es
scas
pusha
xor
loopne
cmp
sub
negb
xchg
sbb
enter
cltd
jnp
js
pop
popf
xchg
sbb
sub
and
xchg
das
lcall
cmc
dec
rcrl
xor
rolb
in
jp
out
lds
lret
cmp
addl
decl
lods
mov
push
div
dec
adc
and
inc
adc
pop
xchg
jne
add
aam
mov
mov
mov
cwtl
sbbb
fimull
mov
in
outsl
mov
pop
fsubrs
lds
popf
mov
xchg
adc
insb
sbb
push
jle
mov
cmp
add
jns
xor
lds
out
scas
popf
adc
sbb
adc
aaa
sbb
jg
pusha
pop
push
fstpl
mov
xlat
fs
push
icebp
sbb
loope
mov
sar
adc
fimuls
push
fcomps
sahf
std
hlt
inc
sbb
push
or
xchg
jae
pop
addl
popa
out
mov
incl
test
fsts
mov
je
xor
mov
fistps
das
push
mov
and
mov
mov
mov
lock
mov
les
sub
and
fwait
repnz
mov
mov
mov
jl
jl
aas
jno
cmp
dec
mov
mov
fdivl
stc
or
repz
push
xchg
arpl
and
cld
js,pn
stos
push
scas
pop
pop
mov
jns
cld
mov
fs
xlat
mov
jmp
add
pop
push
dec
inc
ret
jmp
rcrb
jae
cmp
ds
das
or
or
movsb
nop
xlat
add
and
jl
int
mov
inc
xor
test
jle
jo
pop
xor
in
or
insl
in
cmc
out
jecxz
mov
xor
or
or
clc
ljmp
in
push
pop
inc
in
lahf
and
sbb
xchg
psrlq
and
test
or
std
xor
fwait
mov
mov
dec
in
cmc
push
mov
es
testb
arpl
inc
idiv
loopne
add
jmp
mov
mov
js
lahf
push
mov
cli
pop
aas
sbb
sbb
push
divb
push
aaa
or
and
adc
fdiv
in
and
dec
in
int
dec
push
dec
mov
pop
scas
lret
sbb
imul
push
sahf
pop
inc
enter
gs
cwtl
mov
aas
outsb
or
mov
cltd
mov
pop
pop
or
sbb
cmpb
orl
idivb
fwait
cmpsb
out
in
dec
push
fcomi
xchg
xchg
push
loop
inc
jmp
loop
divl
pop
clc
xor
or
jmp
stc
arpl
or
cmp
jo
in
imul
sub
sub
mov
imul
push
xor
rcl
push
xor
jns
int3
sub
gs
data16
xchg
test
aaa
mov
andb
pop
in
adc
test
pop
mov
icebp
loopne
lods
jmp
fiadds
test
cmp
ja
ss
push
sub
scas
mov
out
xor
sbb
cli
or
mov
jae
jns
dec
jb
fisubrs
mov
mov
push
data16
or
push
jp
lods
cmp
adc
mov
dec
icebp
mov
pop
out
mov
mov
loopne
pusha
push
pop
fwait
pop
push
ss
or
jg
test
imul
pop
and
out
dec
mov
clc
roll
rcrb
cmp
xchg
imul
inc
push
test
hlt
inc
cwtl
jae
ljmp
and
mov
outsl
and
mov
lods
out
jl
cmp
jbe
push
and
and
scas
test
sub
mov
movsb
mov
js
sub
sbb
pop
aas
insl
push
loop
es
stc
cmp
stc
pop
jns
fucomip
dec
addb
push
pop
popf
dec
add
je
xchg
fsubl
cs
sbb
pop
in
shrb
jmp
push
stc
sub
mov
js
cmpsb
add
xchg
clc
xor
lea
aas
rcll
jl
and
aad
mov
jecxz
inc
cmp
lret
cmpsl
shlb
sarl
jmp
push
cmp
mov
and
sbb
stos
negb
sbb
rolb
push
arpl
cwtl
stc
mov
jns
out
xlat
jp
xor
es
sbb
lods
sbb
jo
jmp
pusha
jae
mov
cmp
push
sbb
insb
aas
inc
lods
sbb
lds
cmp
shll
push
xchg
sbb
inc
loop
and
test
mov
dec
in
scas
nop
sub
mov
lret
mov
in
or
adc
cmp
sarl
test
mov
inc
inc
cwtl
sub
loopne
imul
jae
in
push
mov
xchg
add
mov
imul
mov
jp
pushf
pop
xchg
dec
enter
cmp
adc
adc
in
insb
jo
out
mov
imul
cli
popa
scas
jmp
mov
xor
push
mov
mov
mov
sub
sub
pop
xchg
stc
dec
lock
xor
std
inc
push
sarb
leave
mov
xchg
inc
mov
xchg
jl
popf
pop
mov
dec
mov
std
cmc
pop
lock
xchg
and
aad
inc
repz
jbe
cmp
inc
xchg
stc
fcompl
out
sub
mov
cmp
xor
adc
shl
and
xor
ds
cmc
push
mov
dec
fstl
ja
and
imul
popf
std
jg
cmc
fisubl
setp
imul
fsubrs
mov
jge
ret
jae
xor
or
jl
in
daa
std
xlat
in
pop
adc
pop
movsl
cmp
push
sarl
xchg
jg
or
and
ret
cmp
inc
dec
stc
movsl
xchg
mov
lahf
or
mov
push
cltd
adc
xchg
mov
mov
adc
sahf
cmpsl
in
push
inc
lahf
cli
push
push
xor
lret
test
sbb
cwtl
insb
xchg
incl
in
pop
add
pop
fwait
call
and
jne
mov
and
movlps
or
adc
movsl
inc
andb
mov
lds
push
sbb
lds
jnp
dec
cmp
inc
fiadds
push
aas
jns
mov
mov
data16
ja
shrb
jnp
out
test
pop
pop
jecxz
cmpsb
fsubp
aaa
jne
jge
lcall
pop
mov
mov
gs
adc
sbb
bound
dec
jno
xor
dec
lcall
pop
jle
mov
xchg
rcll
sbb
adc
or
inc
jmp
es
mov
xor
fwait
test
js
shrb
scas
cmc
mov
pop
jnp
insb
mov
and
fcmovne
leave
repnz
in
add
lret
in
ret
mov
inc
inc
mov
push
fistps
pushf
out
pop
fbld
repnz
scas
dec
aam
lock
mov
jge
popa
mov
out
inc
lret
ficoml
mov
sub
mov
push
or
pop
nop
insl
fwait
stos
xor
push
push
das
call
pusha
mov
jl
dec
jecxz
pinsrw
neg
and
int
push
aaa
cmp
clc
int3
xlat
mov
loop
mov
nop
pop
shll
inc
ret
lret
push
lock
xchg
divps
dec
push
call
inc
pop
das
adc
or
rcl
nop
cmp
xor
mov
mov
pop
daa
js
lea
push
lahf
mov
stos
jge
add
adc
dec
lock
mov
sbb
dec
lret
test
scas
jne
cld
mov
xchg
rcll
pop
sub
inc
add
aad
inc
xchg
cmp
lds
repnz
xchg
mov
jno
and
push
ror
fisubs
inc
or
or
lock
jmp
loopne
push
dec
test
or
out
outsl
add
cmc
mov
lods
ss
xchg
sbb
inc
add
sub
je
ds
in
lahf
dec
das
or
jmp
cmp
jo
insl
mov
mov
xor
in
into
mov
insb
rcll
in
jo
jbe
loopne
lods
jmp
xor
outsb
pop
imul
add
cltd
jg
push
push
lea
int3
ja
cmc
ljmp
test
andb
and
adc
sbb
lods
xchg
inc
and
mov
cld
jle
jg
pop
sbb
in
cmc
push
insl
sub
inc
sbb
jle
lods
sbb
popa
jecxz
inc
and
scas
fisttpll
filds
or
mov
je
mov
sahf
push
xchg
lds
mov
add
icebp
lcall
data16
repnz
daa
dec
pop
int
or
push
mov
lods
xchg
sti
adc
dec
and
loop
adcb
out
pop
pop
and
xchg
lret
add
bound
sbb
fistl
in
inc
mov
sbb
into
and
stos
aad
daa
out
push
push
sbb
push
jo
cmc
or
jle
pop
mov
or
mov
loop
adc
add
pop
or
or
jg
sbb
notb
xor
add
jg
out
mov
xchg
popf
gs
xchg
adc
adc
fucomp
cmp
shl
xchg
xlat
cli
pop
mov
cmp
add
sahf
push
mov
faddl
sub
sbb
pop
sbb
push
sbb
lcall
aaa
pop
push
push
sub
adc
js
sbb
fiadds
hlt
loopne
cmp
push
jl
leave
mov
xchg
decb
inc
sbb
jg
adc
dec
ds
mov
clc
fsubrs
mov
add
inc
xchg
xchg
dec
adc
mov
std
outsb
mov
es
sub
lock
popf
lods
lret
mov
sub
push
pop
nop
bound
outsl
jbe
sub
jl
cmp
xchg
add
stc
xchg
js
rolb
and
push
push
push
pop
mov
jp
mov
mov
popf
adc
jecxz
xchg
inc
out
or
inc
sbb
lret
mov
ror
daa
stos
jns
fstp
das
stc
mov
mov
and
dec
inc
add
mov
xor
lret
in
jne
imulb
aad
dec
mov
rcl
popa
out
jle
test
out
lods
mov
mov
cmc
jb
mov
or
aaa
pop
orb
jbe
loop
mov
fldcw
pop
pop
cld
ja
ss
ss
inc
or
int
jae
clc
xchg
aad
dec
test
js
push
cmp
scas
cltd
jp
dec
sub
rol
cwtl
sti
inc
push
loope
xchg
xchg
mov
mov
stc
outsb
xlat
push
int
lock
mov
out
mov
out
add
add
sbb
dec
and
jno
jl
pop
outsl
mov
daa
sub
jge
mov
push
adcb
lea
cli
pusha
mov
add
mov
cmp
insb
push
movl
movsb
leave
pop
sub
out
or
dec
and
ret
mov
pop
inc
jg
outsl
xchg
cltd
xchg
jno
fs
adcl
incb
xor
inc
lcall
rorl
cmp
ss
mov
jno
dec
xabort
sub
inc
mov
dec
add
mov
gs
sti
push
leave
xor
fistl
out
xor
iret
call
adc
imul
sbb
jo
cmp
jecxz
mov
daa
sub
mov
mov
cmp
inc
jnp
push
cmpsb
cmpsl
pop
xchg
pushw
mov
xor
push
cs
inc
and
sub
inc
push
mov
mov
dec
xchg
mov
cmp
mov
in
fcomps
icebp
lahf
sbb
into
rorb
dec
adc
mov
xchg
rorl
adc
insl
mov
fwait
add
pusha
cltd
test
aad
addr16
repz
outsl
dec
adc
push
adc
jb
and
subb
je
cmp
popf
inc
les
popa
mov
mov
mov
outsl
or
mov
les
xchg
jo
pop
mov
cltd
adc
fidivs
outsb
enter
stos
mov
push
lea
imul
repz
sub
in
mov
cmc
cmc
xchg
mov
xchg
and
mov
or
les
lea
sbb
lea
mov
lds
ret
int3
js
xchg
or
pop
repz
jmp
jae
enter
pusha
jle
insb
mov
les
mov
and
adc
xchg
mov
enter
loope
or
pop
push
xor
sbb
jnp
cwtl
aad
fwait
inc
aas
arpl
enter
xor
mov
push
popa
test
sbb
sub
lcall
js
inc
idivl
mov
jo
rep
and
jecxz
jbe
js
add
das
push
jns
pop
out
lods
sub
cmp
push
test
insb
out
mov
pop
test
in
ds
or
xor
std
add
mov
fiadds
int
lahf
mov
orl
mov
inc
dec
cmp
and
enter
cmp
mov
pop
insl
hlt
rol
mov
mov
leave
imul
mov
inc
icebp
pop
sti
icebp
rcrb
scas
xor
mov
xchg
push
adc
and
xor
sub
repz
pop
sbb
mov
stc
sub
jge
mov
fldz
call
sub
aas
call
or
aas
and
daa
cmc
mov
insl
pop
fstps
push
pop
in
add
gs
aaa
inc
enter
sbb
aaa
cli
repz
or
lret
adc
dec
jp
pop
lock
sbb
pusha
sbb
pop
jge
pushf
mov
adc
fldcw
in
inc
loopne
in
daa
mov
lcall
xchg
jne
insb
jp
shr
repz
mov
es
lods
push
movsl
xchg
lret
and
repnz
adc
jmp
es
ret
jbe
xor
or
jne
les
xlat
mov
dec
jnp
pop
loope
xor
add
pop
dec
xorl
add
lcall
fcompl
pop
or
cli
fwait
xor
pop
inc
imul
cmp
add
dec
sub
xor
subl
stc
cltd
daa
dec
js
mov
out
sub
data16
shrb
xor
sub
cmp
in
out
pop
sahf
xor
or
rcl
clc
aam
inc
out
add
scas
lahf
enter
lods
inc
sbb
loopne
dec
mov
popf
cmp
and
jae
pop
stos
nop
aaa
mov
les
mov
repnz
push
pushf
push
clc
xchg
repnz
push
arpl
sti
into
adc
dec
mov
cmp
pop
adc
pop
sub
and
sar
es
scas
lea
pushf
ds
outsl
pushf
mov
lret
push
push
dec
je
jle
sub
repz
je
fidivrs
leave
leave
push
mov
dec
cmp
sub
loope
jnp
imul
push
mov
dec
repz
int3
ja
inc
insb
ljmp
js
cwtl
pop
fnstsw
adc
cmp
mov
mov
cmpsb
sbb
and
cmp
inc
leave
inc
lcall
push
pop
aaa
sbb
xor
adc
sub
push
or
sbb
outsb
ror
mov
inc
add
sub
popf
stc
cli
mov
ret
cmp
aas
inc
sti
or
xchg
popf
shlb
out
xor
jge
sahf
pop
cmp
xchg
push
inc
cmp
call
lret
lods
aad
mov
or
adc
mov
clc
mov
sbbl
pop
jo
mov
jmp
repz
cli
enter
js
jae
dec
into
lret
ret
push
cmp
cli
adc
loop
arpl
xchg
in
mov
pop
pop
stc
pushf
lahf
adc
jns
fistpl
push
mov
sub
xor
adc
or
loop
and
push
push
jne
adc
pop
cmc
mov
cmp
icebp
fadds
in
ret
ss
mov
out
loop
sbb
lods
cmp
push
ss
and
dec
outsb
xorl
mov
and
inc
mov
or
aam
mulb
outsl
jbe
inc
lret
jg
mov
cmp
and
in
mov
push
repz
pop
mov
xchg
push
add
xchg
mov
call
xchg
les
shrl
dec
xchg
adc
out
xlat
ss
pop
sahf
lret
sti
arpl
push
push
fisttpl
pusha
shll
outsl
iret
push
ret
movsb
cmp
cmp
and
outsl
pop
adc
mov
mov
fcompl
iret
out
mov
test
hlt
jns
gs
outsb
cmp
pop
stos
leave
xchg
sbb
mov
iret
pop
mull
test
test
shr
pop
sbb
insl
not
mov
ret
int3
pop
inc
imul
xor
adc
mov
add
cwtl
jnp
mov
xor
mov
or
inc
fdivr
dec
in
sub
ja
push
mov
add
sub
imulb
ss
inc
das
pop
arpl
ljmp
cmp
ljmp
push
fiaddl
test
pop
dec
pop
dec
loopne
mov
ss
mov
cmp
xchg
jecxz
fs
outsb
pusha
mov
das
inc
aas
test
and
mov
mov
pop
popf
stos
iret
fstl
pop
insb
mov
in
fcompl
jge
or
jl
xor
jle
scas
lahf
jns
inc
xor
andb
leave
inc
push
push
lock
subb
aam
aaa
test
jmp
shlb
push
in
aam
hlt
cmp
dec
inc
dec
jg
rolb
jne
cld
mov
add
xchg
adc
popf
scas
aam
shll
adc
rol
xor
movsl
lock
sarb
push
insb
pop
and
aaa
xchg
in
mov
test
adc
repz
mov
jge
mov
out
pushf
and
or
jl
dec
sub
rcrb
mov
pop
or
inc
mov
sahf
dec
aad
int
mov
lods
pop
xor
push
push
push
imull
mov
jmp
dec
adc
and
pop
mov
jns
mov
mov
dec
or
dec
das
push
mov
pop
es
pusha
add
xchg
sub
pop
out
cli
enter
mov
shlb
xchg
mov
ret
ljmp
cmpl
movsl
in
mov
adc
out
xor
push
fnstcw
adcb
out
mov
lods
aad
out
jns
push
cmp
inc
fwait
cmc
int
xchg
add
dec
fisubl
xor
gs
in
mov
lds
dec
xchg
mov
or
push
push
or
adc
push
cs
xlat
int
call
insl
and
sub
lret
ljmp
cmpsb
pop
inc
mov
aad
push
cmp
inc
call
aad
push
mov
xchg
push
gs
test
mov
inc
sub
pop
pop
outsb
fadds
mov
inc
das
sub
cmp
jnp
inc
pusha
lods
shll
pop
xor
xor
in
into
sbb
mov
sub
shlb
ret
sub
cmp
mov
add
jl
xor
inc
lock
outsl
pop
dec
lcall
cmp
pop
add
jns
stos
lea
sbbl
das
cltd
dec
mov
and
lcall
jl
dec
sub
in
adcb
and
cmp
cwtl
or
pop
test
sbb
ret
int3
jp
ret
movsl
and
sbb
xchg
cmpsb
jge
cmp
movsb
cld
pshufw
mov
out
xchg
arpl
mov
mov
icebp
roll
addl
adc
mov
lcall
sub
sub
sub
movsb
mov
dec
js
fwait
scas
jecxz
mov
mov
mov
in
cmp
out
xchg
movsb
pop
push
jecxz
ja
mov
call
mov
icebp
es
xchg
xor
loope
jo
fisttpll
test
push
and
cmpsl
jnp
mov
aad
jne
pop
rcll
fimuls
push
inc
jle
into
lcall
mov
in
fcompl
sbb
leave
icebp
fucomp
mov
or
jae
aas
subl
in
pop
add
loopne
cmpsl
push
pop
js
shlb
or
outsb
sbb
jno
call
add
mov
cmc
add
rcll
sbb
mov
cmp
xor
cld
dec
inc
aas
push
movsb
xchg
lahf
jnp
into
cmp
iret
pop
jbe
out
aaa
cmp
add
mov
leave
inc
enter
aas
xor
orb
mov
adc
xchg
inc
mov
aas
jns
sbb
mov
sub
repz
mov
xor
jmp
rcr
sbb
adc
das
jbe
lahf
loopne
lock
mov
fisubl
pusha
out
sub
fsubr
loope
sub
mov
mov
stos
cwtl
inc
sahf
leave
lcall
sbb
sub
cmc
leave
sub
les
popa
aad
jnp
cmpsb
cli
out
es
repnz
add
ljmp
ss
pushf
test
in
popf
push
ljmp
xchg
jge
push
out
sub
mov
imul
xchg
xchg
stos
pushf
xlat
xchg
cmc
aam
iret
inc
sbb
jecxz
cmpsb
push
dec
in
or
je
int3
stos
or
js
out
int3
adcb
outsb
adc
pop
mov
jmp
insl
or
inc
int
lods
outsl
pop
push
jno
mov
addr16
push
pop
mov
and
push
dec
xor
cmc
xchg
mov
push
mov
mulb
addl
cmp
ficoml
pop
inc
ja
movsl
adc
mov
xor
nop
pop
push
scas
in
mov
test
xchg
jne
sbb
fucomi
adcb
inc
sbb
inc
pusha
idiv
push
jecxz
pop
pop
jnp
fbld
mulb
push
loop
ja
outsl
loope
jp
and
add
xchg
test
sub
pop
pop
movl
mov
add
ds
daa
nop
dec
or
mulb
adc
mov
mov
add
fildll
test
mov
es
jecxz
xchg
mov
inc
lods
ret
ret
pop
leave
fsubrl
lea
test
lret
data16
adc
outsl
sbb
stos
dec
jge
adc
xor
cmp
clc
test
pop
je
stos
mov
lahf
stos
fistl
mov
fisubrl
jae
movsl
add
lock
xchg
in
dec
imul
adc
lcall
repz
mov
push
jmp
sbb
arpl
ret
lods
imul
mov
and
xor
inc
test
lret
lea
dec
mov
sub
cmp
wbinvd
mov
mov
and
push
cmpsl
loopne
stos
pop
lret
pushf
mov
sub
mov
ss
in
inc
dec
sub
icebp
mov
dec
pop
sbb
imul
jmp
mov
push
jl
in
xchg
pushf
xor
cltd
popf
loope
and
stc
aam
push
lcall
and
mov
mov
jae
andl
call
sbb
popa
xor
mov
jb
ljmp
lret
mov
cmp
rclb
test
mov
rol
mov
xor
xor
dec
stos
rorb
push
int3
rorl
sbb
adc
sbb
sbb
test
addr16
push
roll
shrl
jb
mov
ljmp
aas
pusha
jne
mov
outsl
imul
dec
inc
daa
sub
mul
pop
icebp
loopne
into
ljmp
loopne
repnz
jnp
repz
pop
sbb
aam
or
outsl
call
cmp
ljmp
shrl
lds
test
testl
stc
pop
fldenv
in
push
call
icebp
insb
push
inc
sti
lea
push
out
dec
and
pop
dec
mov
daa
lea
dec
cmp
in
cmp
or
pop
outsl
fistpll
ficomps
cld
lcall
int3
add
jne
dec
cli
call
xchg
inc
jbe
sub
es
xchg
mov
jg
sbb
jmp
cmp
insb
mov
pop
jmp
inc
movsl
iret
icebp
call
xor
lock
adc
mov
int
loopne
test
add
or
test
push
cmpsl
add
push
mov
outsl
fs
or
push
adc
imul
ret
scas
pop
imul
mov
arpl
call
repnz
js
sub
mov
add
sub
fadds
dec
or
pop
es
ljmp
add
adc
sahf
push
faddl
or
push
lahf
sahf
xchg
leave
lcall
sub
pusha
jnp
mov
loope
mov
es
mov
push
cli
fdivl
stc
or
and
test
out
mov
cmp
fimull
insl
jmp
inc
jns
xchg
in
mov
jnp
or
fdiv
add
adc
mov
int3
loope
pop
test
rorl
aad
adc
fldenv
jnp
xchg
je
mov
adc
das
sub
ljmp
js
sbb
push
paddb
push
jp
in
xor
mov
jg
push
mov
add
xor
mov
and
mov
ret
dec
into
mov
js
rcl
scas
ret
sti
gs
mov
cmp
stc
pusha
push
or
adc
pop
gs
or
pop
jle
cmp
xor
inc
mov
repnz
sub
scas
inc
add
mov
out
sbb
cmpsl
fildll
outsb
mov
adc
fsubr
outsl
add
cmpb
movsl
and
iret
int3
pop
addl
jne
repnz
xchg
and
sarl
not
mov
in
or
cmp
roll
mov
shlb
shll
mov
xchg
xchg
aaa
and
sub
aas
popf
adc
in
test
xor
sbb
pop
mov
movsl
cmp
or
mov
les
dec
imul
xlat
les
cmp
negb
scas
loope
add
lcall
test
push
gs
lods
add
cmp
fcoml
repnz
test
ja
mov
icebp
shlb
cmp
call
jno
imul
xor
mov
xchg
sbb
pop
mov
lea
pop
push
jae
cmp
adc
push
sti
jne
pop
jmp
mov
dec
dec
outsl
push
mov
or
arpl
adc
cmp
insl
inc
enter
add
mov
mov
hlt
rcrb
xchg
jp
stos
mov
mov
faddp
shl
popf
scas
dec
mov
xchg
xor
xlat
and
jns
imul
push
into
pop
cmpsl
jbe
jae
imul
and
orb
mov
sub
enter
and
xor
sarb
fsubrl
cmp
mov
jg
outsb
mov
int
scas
fcmovnu
push
add
rcrl
mov
rcr
imul
mov
test
cwtl
adc
dec
xor
dec
loope
push
and
ss
mov
mov
jmp
les
sbb
mov
test
xchg
xchg
pop
sub
loope
jp
call
xor
fstpt
mov
mov
or
jns
mov
lahf
jne
int
push
cmp
sbb
pushl
je
cmp
lds
sahf
mov
adc
fimuls
das
cmp
idivl
mov
sti
mov
mov
nop
les
outsb
sahf
or
mov
xor
ret
inc
popl
jg
les
icebp
jge
int3
jecxz
cwtl
push
mov
jp
push
daa
inc
fwait
xlat
mov
popf
mov
inc
ret
cmp
xchg
mov
ficoml
push
clc
mov
stos
jmp
lahf
pop
enter
loope
nop
xchg
hlt
sbb
lods
xor
ret
stc
jno
call
dec
or
sub
out
adc
and
ds
ret
pop
sbb
negl
inc
rcll
lods
cmp
lods
ret
rcll
rcrl
xchg
bound
xchg
inc
cld
mov
mov
outsl
sub
pusha
mov
mov
imul
insb
adc
or
pop
ss
jl
or
push
sti
and
mov
mov
or
sub
in
mov
mov
out
scas
fst
inc
lock
pusha
ja
dec
test
addr16
mov
fistpl
subl
lock
push
faddl
mov
and
mov
add
jmp
aam
lods
shlb
testb
inc
lods
imull
aas
jl
push
test
out
test
and
out
pop
mov
in
xor
inc
notb
insb
movsb
dec
cmp
bound
mov
icebp
inc
xor
adc
ss
mov
in
aam
iret
dec
out
bound
daa
repz
mov
jle
mull
mov
test
inc
out
ja
out
dec
pop
testl
xchg
and
stos
pop
icebp
jo
xchg
xchg
nop
sar
jnp
pop
icebp
mov
xor
and
mov
mov
inc
sbb
jg
xor
scas
push
dec
jo
lret
inc
mov
add
lods
nop
jmp
movsl
rolb
pushl
adc
mov
cmpsl
jle
or
in
jbe
mov
and
cmp
inc
pop
push
xchg
aam
sbb
add
xchg
cld
xchg
xchg
xlat
sbb
mov
adc
sarl
lods
scas
ret
inc
inc
js
insb
stc
adc
lcall
iret
push
movsb
xor
dec
xchg
adc
xor
jg
inc
push
lods
cltd
cmp
adc
leave
ret
or
test
or
pop
mov
xor
cli
dec
dec
arpl
push
fisttps
int
cmp
jl
in
das
leave
xor
data16
mov
cmc
sahf
mov
cmpb
xchg
aas
inc
sbb
and
xor
daa
scas
lret
xchg
enter
sbb
stos
out
inc
mov
int3
push
dec
mov
sbb
push
adc
mov
xor
jecxz
mov
popf
int3
sbb
fdivl
loope
js
jg
mov
in
test
ja
je
and
sub
stos
sub
mov
in
iret
lea
imul
fwait
cli
fsubl
sahf
and
roll
andb
sub
in
xchg
aad
fldl2e
inc
out
pop
pop
in
pop
cmpb
sbb
fucom
out
and
pop
mov
mov
or
jecxz
stos
mov
hlt
xor
ds
sub
adc
fmuls
lcall
sarb
loope
mov
mov
js
cmpsb
pop
fistl
jle
bound
mov
jle
xchg
popa
lock
and
sti
jp
out
jbe
dec
in
cmp
cli
lcall
jb
leave
add
ret
clc
cmp
mov
lods
add
cmp
cld
fdivrp
je
or
nopl
add
inc
test
jns
cmpl
cmp
adc
pop
mov
test
xor
js
ret
leave
das
and
sti
add
fwait
cs
sub
inc
insb
pop
dec
fiadds
out
repz
inc
xchg
bound
pop
xlat
pop
cmp
insb
jecxz
loop
dec
add
pop
negb
add
ss
call
jne
aam
lds
and
ss
mov
mov
xor
daa
loope
or
jecxz
inc
fnstsw
and
or
dec
fcomi
dec
jb
xchg
lret
mov
mov
inc
mov
dec
into
and
cwtl
inc
jmp
repnz
adc
dec
filds
jns
sub
mov
or
mov
aam
cmp
cwtl
pop
jb
mov
xchg
sarb
sarl
jnp
shr
sub
adc
and
pop
inc
lock
push
rcr
test
xor
into
xor
aaa
rclb
xchg
pop
popa
in
xor
mov
add
cmp
ss
insl
out
insb
push
lsl
push
es
fwait
sbb
jle
xor
xor
pushl
and
xchg
loopne
push
js
cli
cmpsb
stc
xor
cmp
jmp
shrl
pop
push
xchg
lods
aaa
pop
inc
pop
inc
xor
out
jb
mov
sbb
pop
push
cmpl
cld
and
repnz
fwait
add
fsubrl
pushf
in
sbbl
adc
or
mov
rclb
cwtl
pop
js
std
mov
ss
test
pop
js
add
out
inc
cmp
jmp
mov
cmp
js
mov
cmp
arpl
shll
or
fsubrl
mov
push
sbb
imul
sbb
out
xchg
and
jae
addl
mov
xchg
xor
xor
xlat
inc
jo
enter
in
fisttpl
sbb
lcall
cmc
inc
enter
mov
push
inc
int
jmp
test
stc
enter
inc
insl
fmull
jg
sub
jae
add
sub
jle
push
sbb
jmp
outsl
push
or
jg
dec
jns
dec
ljmp
xchg
pop
xchg
xor
pop
daa
push
inc
dec
cli
mov
mov
fwait
xor
pop
push
add
outsl
js
fwait
push
xchg
pop
es
iret
shrb
xchg
and
imul
nop
and
loopne
out
mov
movsl
in
fcomps
lds
loopne
sub
pop
mov
das
iret
addl
movsb
out
mov
inc
xchg
or
cmp
mov
push
xor
sbb
jbe
aad
sub
out
sbb
in
mov
dec
scas
xchg
push
push
mov
cmp
jmp
cs
dec
dec
adc
das
push
stos
xlat
sub
sub
mov
adc
popa
sub
dec
dec
mov
mov
sbb
lds
outsl
daa
ja
mov
mov
cs
add
iret
xchg
cmp
pop
jg
cmp
or
lds
adc
xor
testl
fwait
test
mov
sub
cwtl
hlt
test
and
mov
les
lahf
lar
in
xor
fwait
fwait
cmpsb
mov
sbb
out
stos
push
fwait
dec
test
pop
push
pop
daa
push
or
mov
add
push
inc
insb
stos
and
or
push
xor
and
and
xor
sub
xchg
out
push
cmc
bound
sub
cmp
shrl
sub
fs
pop
mov
jle
push
loop
ljmp
xchg
mov
jnp
das
cmp
cmpsb
mov
and
cmp
add
pop
aaa
mov
xor
push
fidivrs
lock
stos
cmp
mov
lcall
cmp
imul
add
scas
xchg
dec
push
mov
lds
adc
xchg
dec
sahf
pop
ret
test
adc
loopne
out
lock
add
ret
lock
cwtl
fcomi
sbb
cmpsb
ss
adc
pushf
sti
or
lods
test
cmp
iret
mov
jno
ja
das
out
bound
dec
fwait
push
jo
xor
mov
dec
stc
mov
loop
mov
repnz
mov
pop
sbb
or
xor
cmc
loop
arpl
sub
cs
cmc
push
nop
aas
mov
mov
out
les
scas
mov
xor
push
lds
inc
fcoms
mov
push
fsubrs
loope
xor
fimull
ret
iret
add
dec
scas
cwtl
xchg
mov
cmp
outsl
dec
and
roll
lcall
push
fiadds
mov
popf
adc
inc
xchg
pop
and
push
dec
mov
push
gs
jbe
or
cmpsb
mov
sbb
jmp
cltd
icebp
lcall
mov
mov
scas
sbb
dec
rcll
addb
lea
outsl
adc
xchg
fistpll
push
dec
scas
je
incl
jle
cld
aad
inc
cmp
cmpsb
repz
idivb
les
addr16
sbb
xor
testl
lcall
or
subb
hlt
mov
mov
or
push
inc
js
sub
cld
mov
lea
mov
lcall
push
push
pop
cli
imul
in
xor
or
enter
add
clc
add
test
stos
xor
xor
movsl
lds
lock
loope
imul
fprem
push
fstpl
mov
or
push
divl
out
and
in
sbb
das
cmc
push
out
add
insb
cmp
sbb
mov
xor
outsl
fmull
fsubrs
lret
mov
es
jne
adc
mov
jge
xchg
adc
cltd
cwtl
push
mov
push
push
ret
ss
dec
ds
dec
enter
ret
loopne
fildll
xchg
xchg
fcompl
jg
jp
jno
mov
negl
or
xor
out
mov
xchg
ljmp
mov
js
jmp
addr16
dec
xchg
js
mov
xchg
sahf
push
push
fstpt
xchg
imul
cmp
shr
xchg
jge
out
out
jno
icebp
dec
cmp
out
push
cwtl
js
mov
xlat
pop
or
and
test
es
or
fcmovne
das
xchg
rcrb
mov
add
inc
fisttpll
sbb
xor
cmc
adc
mov
leave
and
adc
pop
mov
cmpsb
nop
outsb
dec
pushl
push
mov
cmp
aaa
push
inc
jne
pop
add
xor
jmp
out
add
cmp
mov
xlat
int
adc
cmp
cli
in
xchg
pop
jl
lea
add
arpl
and
inc
jb
xor
add
addb
iret
mov
xor
inc
dec
mov
fcmovbe
out
nop
jns
test
cmp
inc
das
xor
int
add
lcall
rcr
out
scas
leave
add
mov
push
adc
dec
mov
xlat
jae
xor
push
or
xchg
je
lods
xor
sbb
out
fisubrl
pop
pop
add
push
sub
push
mov
add
adc
js
mov
or
fnstenv
adc
outsl
addr16
mov
adc
aas
je
sbb
ds
leave
dec
lds
sbbb
ss
arpl
push
jae
lock
jo
mov
aam
mov
cmp
xchg
cmp
jne
rol
mov
sahf
lock
mov
shll
jecxz
inc
lock
xchg
jg
cmpsb
and
stos
lcall
mov
lea
jns
add
daa
mov
or
cmp
add
call
imul
add
stos
ja
mov
sbb
push
sbb
inc
lock
das
in
push
sub
rclb
repnz
mov
daa
daa
xchg
fcoms
lret
hlt
stos
cli
lds
cmc
or
cli
jmp
cmp
es
jp
sbb
jge
xor
sbb
pop
jne
ss
mov
stc
and
shll
aaa
ds
into
sbb
outsb
mov
add
push
ljmp
test
and
sti
mov
imul
out
js
pop
add
mov
cli
divl
loopne
xchg
mov
in
xor
mov
test
aas
xor
pop
shlb
dec
shll
inc
mov
sub
lea
mov
rolb
call
mov
cmp
sbb
cvtps2pi
out
lret
cmpsb
dec
push
scas
pop
cmp
shl
insb
pop
inc
scas
leave
jno
sbb
xchg
ror
push
mov
mov
in
nop
fidivl
rolb
push
or
dec
rcll
jb
insb
jl
xor
in
dec
cltd
in
jns
or
xor
mov
int3
xor
inc
jmp
dec
imul
sbb
push
rorb
push
pop
adc
mov
out
adc
ss
pushf
iret
sti
testl
jmp
dec
pop
test
adc
pop
test
arpl
cmpsb
bound
repz
cmp
lods
inc
sahf
frstor
jp
lock
fstps
cmp
popf
out
mov
xchg
mul
jecxz
sbb
jnp
movsl
clc
mov
ret
and
pop
xchg
lock
in
loope
cmp
lret
dec
or
mov
cmp
or
fistpll
stos
stos
out
push
mov
mov
lahf
insl
mov
mov
stos
mov
lret
mov
pop
xchg
popa
outsb
lahf
loop
hlt
fcompl
test
outsb
xchg
pop
loop
loop
jne
adcl
fs
stc
jbe
inc
ss
mov
loopne
push
xor
and
and
out
mov
mov
cli
aad
mov
or
fisttps
std
sub
cltd
lods
sub
mov
lret
nop
mov
jecxz
or
adc
adc
lods
push
movl
sbb
add
push
ljmp
dec
mov
xchg
shrb
mov
push
imul
aaa
mov
mov
lock
push
push
xchg
push
push
jmp
jno
sbb
mov
repz
into
stc
mov
test
mov
cmp
les
cmpsb
inc
push
mov
add
nop
xchg
jmp
ljmp
mov
mov
lods
pusha
mov
repz
xor
movsl
add
ds
movb
mov
rolb
arpl
sarl
pop
insb
push
popf
les
jnp
inc
push
push
cmp
cltd
cs
imul
dec
lret
push
mov
loope
cld
dec
adc
lsl
stos
jge
les
movsb
daa
cmpsb
out
dec
mov
push
decl
dec
imul
xorb
xor
mov
pop
iret
or
je
int
cmp
repz
cmpsb
sarb
test
pop
or
test
loop
cwtl
test
cmp
testl
imul
mov
clc
in
xor
fdivr
andl
cmp
pop
fnsave
je
call
clc
adc
cmp
cmp
dec
xor
sbb
mov
cmp
in
fwait
sub
xor
sub
mov
iret
add
clc
dec
xor
jecxz
mov
fisubl
inc
jmp
pushf
in
test
insb
icebp
int3
inc
bound
dec
lret
icebp
inc
pop
in
sbb
pop
icebp
sbb
testb
test
adc
mov
dec
or
lds
iret
dec
push
stos
or
pop
xchg
and
arpl
int
cmp
insb
pop
test
push
lcall
mov
movsl
push
in
lods
pop
pop
or
stos
mov
pop
call
subl
or
cli
sub
push
add
or
push
ja
fldl
jne
leave
inc
int3
std
sub
jne
sbb
mov
xlat
lods
aaa
sub
cmp
dec
and
in
test
call
testl
adc
inc
insl
shll
add
les
int
rcrb
sub
xchg
shl
xor
jge
testb
fdivs
fabs
leave
sarb
jle
dec
pop
mov
adc
cli
lret
mov
and
xor
jge
stc
jecxz
adc
pop
shll
jno
or
jne
mov
shlb
scas
dec
outsb
shrl
dec
dec
sbb
xor
and
rorb
aam
inc
lret
aam
jns
sahf
rclb
jmp
mov
mov
out
mov
mov
dec
mov
push
pop
out
or
cmp
push
jle
dec
pop
dec
movsb
jecxz
xlat
mov
mov
stos
sub
fs
cmp
jecxz
jae
arpl
sbb
lahf
mov
jl
popa
data16
stc
dec
pop
stos
inc
add
sub
aad
stos
mov
cltd
pop
mov
addr16
std
mov
push
iret
push
jno
in
push
scas
fadds
shlb
xchg
xchg
xor
pushf
mov
addl
stc
pop
movsl
fmuls
sbb
inc
mov
stc
lds
stc
adc
mov
out
ret
jecxz
jne
sub
cmp
push
xor
out
frstor
mov
sahf
stc
ds
fidivl
fdiv
jmp
xchg
mov
xor
jb
sub
xchg
sarl
jp
repz
cmpsb
and
fdivrl
prefetchwt1
or
xchg
pop
fcmovne
sbb
inc
push
addl
ja
jecxz
inc
dec
mul
pusha
stos
rcll
mov
mov
btc
pop
cmp
pop
rcrl
insb
cltd
lea
je
push
sub
push
fldenv
mov
mov
cmp
rorb
ret
sbb
lea
addr16
call
cwtl
rcl
sbb
cltd
call
mov
sub
and
sbb
and
or
mov
in
inc
lret
pop
rorb
xchg
daa
dec
add
aam
xchg
push
push
lret
cmp
add
inc
xchg
lret
ljmp
mov
enter
pop
pushf
dec
enter
out
xchg
lret
test
rorl
test
adc
cmpsl
nop
popf
sbb
jmp
xchg
movsb
movsb
pop
jo
and
je
inc
xor
iret
xchg
add
inc
scas
mov
mov
imul
pushf
or
mov
stos
push
jne
pusha
push
pop
and
out
and
xor
scas
stos
cwtl
add
mov
imul
mov
sub
rorb
pop
mov
lea
adc
sub
in
dec
movsb
sub
jbe
imul
fsubrl
sub
pop
aam
ret
cmp
movl
jnp
jmp
xchg
mov
lock
cmp
cmp
inc
xor
int
add
pusha
or
push
popf
sbb
pop
xor
mov
xchg
xor
sbb
mov
xor
add
jg
dec
loop
inc
test
push
out
fistpll
cmp
pop
cmpsb
ja
ja
add
sbb
sbb
push
fldenv
push
xor
aas
xchg
fnstcw
rorb
jae
popf
jge
fwait
xor
std
adc
mov
mov
cs
loop
sub
shrb
enter
mov
jb
jne
orl
shll
and
jg
addl
arpl
fwait
pop
in
fiaddl
ja
movsl
inc
push
bound
jne
pop
push
mov
pusha
movb
and
cmpl
xor
sub
in
aad
cltd
outsb
fs
gs
and
push
pop
sub
std
and
ficomps
das
mov
ds
jb
mov
dec
mov
sti
imul
cmp
or
sbb
push
scas
push
lret
sub
stos
dec
lret
and
add
cs
pop
scas
roll
push
or
lds
fnstenv
inc
adcl
mov
push
loope
mov
imul
add
lods
xchg
ror
pop
sub
pop
mov
and
ss
add
imul
lret
pop
into
and
jmp
in
add
shll
push
in
aad
ja
xchg
fwait
popf
hlt
mov
lods
cmp
ret
cmp
inc
dec
inc
repz
rolb
mov
sbb
and
rdpmc
cltd
mull
test
jne
mov
mov
inc
push
orl
and
test
es
and
mov
leave
xchg
dec
xor
das
ja
xor
into
sbb
ficompl
rcrl
rep
or
cwtl
mov
stos
hlt
ja
push
adc
test
pushf
jb
xor
rol
rol
shlb
movsl
lea
adcl
in
iret
xchg
inc
ss
jl
xchg
scas
sbb
jmp
pop
movsl
mov
aas
mov
hlt
jno
ljmp
jae
push
dec
mov
xor
and
pop
sbb
call
lahf
push
lcall
je
xchg
int
jno
cld
and
jmp
mov
and
leave
outsl
adc
sbb
outsl
js
mov
push
jno
push
mov
ficoms
sbb
inc
mov
clc
fnsave
adc
cmp
incb
or
pop
dec
adc
push
adc
xchg
movsl
lret
inc
inc
push
into
mov
or
inc
pushf
mov
or
iret
mov
test
push
and
outsl
and
cli
push
sub
popf
pop
dec
adc
or
in
cmp
stos
shll
punpckhdq
push
pop
enter
fcmovbe
add
or
ds
in
sahf
cmpsb
out
mov
inc
aam
add
jecxz
outsl
loope
mov
add
shlb
leave
add
add
mov
sbbl
adc
movsl
in
sbb
cltd
loop
mov
jns
lds
dec
inc
push
cmp
or
dec
pop
sti
jns
filds
mov
jno
xchg
jle
cld
push
pop
cmp
xchg
inc
je
icebp
outsb
lcall
fsubs
int3
and
inc
mov
stos
pop
outsl
mov
pusha
test
mov
xor
push
or
cmp
icebp
push
mov
pop
jle
push
jns
jno
dec
bound
adc
lahf
outsb
jge
xor
mov
daa
push
lcall
or
movsl
movsb
sub
cmpl
add
push
std
dec
or
fstp
cmp
cli
jg
stc
dec
cmp
popa
xor
sbb
cwtl
inc
fisttpll
lret
cwtl
iret
jle
cmp
cmpsl
in
push
cmpsb
bound
sub
dec
pop
insb
movsl
addr16
lret
jb
bnd
jno
and
push
cmc
dec
jae
syscall
pop
pop
add
addr16
cwtl
jmp
mov
mov
or
and
fists
push
ficoml
inc
or
ret
sbb
push
scas
lds
adc
sbb
popa
movsl
popa
push
lods
xor
jmp
pop
lds
out
adc
push
xchg
fwait
and
inc
pop
push
ljmp
or
push
jns
loope
pop
addr16
mov
adc
enter
pop
int3
movsb
ret
and
shll
neg
call
lret
cmp
daa
cmc
jne
sti
sub
and
mov
push
loope
push
jge
mov
movsb
repnz
dec
jae
xor
push
int
and
inc
mov
xchg
cwtl
mov
imul
mov
aaa
lds
push
ja
mov
insb
clc
mov
mov
out
cmpsl
sbb
test
sbb
dec
add
add
in
sub
stos
add
adc
loop
push
scas
test
inc
je
repz
fcmovbe
pop
cmp
subl
mov
imul
add
push
push
mov
int
inc
mov
daa
cwtl
cmp
imul
outsl
iret
sbb
cmp
xchg
pop
xchg
add
dec
bound
push
scas
xchg
cmp
lret
pop
add
sbb
inc
bnd
mov
jne
sti
std
push
out
lahf
mov
shl
adc
shr
enter
mov
mov
dec
pusha
pop
aam
enter
int
test
push
jle
data16
stos
jo
sti
cmp
aam
loopne
jne
insb
sbb
test
cmpsl
sub
das
movsb
cs
cmpsl
mov
fcoms
adc
jne
jmp
insb
fwait
rclb
mov
push
aaa
push
daa
adc
push
xor
push
jae
ljmp
js
data16
fmull
push
push
shll
subb
test
mov
test
push
push
into
out
push
aaa
dec
jl
dec
arpl
fstpt
rcrb
pop
jo
jp
dec
jb
mov
push
sarb
test
push
push
stc
ja
push
xchg
cli
and
xchg
iret
push
push
hlt
pop
jge
in
fcoml
jmp
lret
fmuls
lret
mov
adc
ds
cmp
pop
jne
push
mov
orl
test
add
in
data16
and
cmp
jno
inc
out
inc
ljmp
lods
lret
jo
mov
mov
dec
mov
xchg
sbb
daa
jne
dec
dec
mov
arpl
push
aam
addb
cmpb
push
je
mov
mov
mov
out
test
pop
cs
cmp
adc
push
inc
sbb
or
loopne
sbb
mov
adc
adc
mov
pop
dec
pop
sbb
outsb
and
stos
imul
paddb
jno
cmp
push
push
mov
repz
rcll
mov
or
dec
out
imull
data16
addr16
dec
xchg
mov
and
jnp
gs
fistl
into
mov
repnz
xor
pop
je
add
outsb
adc
fsubrs
orb
jb
lahf
mov
jge
mov
enter
lret
mov
or
sub
sbb
dec
dec
mov
inc
xor
add
cwtl
push
scas
inc
mov
cmp
lods
sbb
not
andb
outsl
cmp
imull
and
sub
inc
fs
jle
sub
cltd
or
pop
loop
jl
test
and
js
loope
mov
dec
lods
adc
mov
in
ja
stos
jl
out
pop
out
adcb
das
cmp
sub
xchg
add
xor
je
sbb
xor
fisubl
sbb
imul
cmp
clc
dec
iret
int3
add
mov
or
rcrb
push
je
jp
sbbb
gs
lock
or
dec
aam
mov
xchg
push
xor
push
mov
popf
adc
sub
jno
sub
xorb
addl
jo
iret
jle
insb
leave
lods
pop
fdivrs
movsb
js
inc
xchg
cltd
in
mov
jmp
hlt
xor
ja
mov
adc
mov
jle
cmpsb
stos
movsb
cmp
or
pop
fcoms
dec
or
int3
xchg
mov
mov
dec
loopne
sub
push
mulb
sub
mull
lret
and
push
push
pushf
jge
int3
add
or
push
pop
cli
pop
outsb
aas
fidivs
xchg
bound
add
or
push
notb
sti
sbb
cs
push
dec
outsl
test
lcall
mov
stc
lock
das
mul
scas
cmp
pop
ret
mov
mov
push
ljmp
push
mov
es
push
xor
les
dec
lcall
adc
out
roll
xor
movsb
stc
clc
insl
xor
outsl
bound
sub
jl
jb
mov
xorl
movsl
xchg
adc
mov
dec
and
lcall
xor
inc
jbe
and
loope
cli
mov
fcmovnbe
sub
testb
movsl
or
repnz
test
mov
mov
sahf
mulb
or
push
in
push
jns
testl
push
loop
cmp
and
lock
mov
mov
pop
rclb
pushf
sbb
mov
cmp
pop
xor
fs
xchg
fsubs
fmuls
das
repnz
jno
stos
ljmp
mov
lret
std
sub
inc
testl
cmp
clc
xchg
addr16
xor
jns
add
sub
lret
inc
aaa
cli
scas
pop
cmp
mov
outsl
insl
xchg
xor
push
mov
ss
jg
test
cmp
lahf
lods
mov
add
mov
dec
pusha
push
enter
sub
aas
add
pop
cmp
inc
jns
mov
ret
dec
stc
sbb
mov
enter
pop
loopne
bnd
rclb
push
test
pop
fldenv
add
out
cmpb
dec
jb
insl
orb
xor
scas
sbb
lret
mov
fistl
mov
bound
adc
stos
and
or
sbb
push
pusha
mov
jne
sbb
lcall
pop
cmp
ficoms
and
pop
xor
scas
and
or
jg
add
push
mov
test
jg
mov
xchg
roll
out
dec
xor
repnz
test
mov
hlt
mov
mov
adc
out
cmpsl
sbb
lods
push
enter
jnp
and
add
testb
mov
stc
lahf
cmp
and
xor
mov
xor
cwtl
jl
in
test
mov
in
lds
cmpsl
inc
fiaddl
sbb
xchg
int
jns
mov
xchg
mov
mov
stos
fstl
cmpsb
dec
dec
in
pushf
pop
fdivl
jae
xchg
jmp
add
stos
sbb
popa
xchg
addb
push
je
mov
xor
fs
shll
ret
pop
stos
cmp
int
jnp
fldcw
dec
rcrb
push
daa
mov
lret
mov
dec
mov
imul
push
arpl
inc
inc
stc
mov
call
cmpl
divl
dec
test
or
pmaddwd
push
and
loopne
cmp
nop
test
xchg
adc
or
add
leave
test
mov
adc
pop
mov
mov
cs
out
add
adc
cmc
jno
xor
pop
cmpsb
or
daa
jbe
test
aam
and
mov
xor
jp
leave
xlat
pop
cmpsb
je
jo
ja
lods
rcrb
and
xor
cmpl
adc
mov
lods
shl
push
das
jno
cltd
push
fistl
push
lea
fsubp
mov
add
mov
and
mov
sahf
sub
lahf
jecxz
push
or
out
xchg
gs
cltd
jmp
call
pop
or
sbb
cs
inc
cmp
xchg
cmpsl
add
jmp
or
mov
jmp
je
aas
cli
test
cs
cld
sahf
mov
sbb
out
jnp
insl
mov
into
xor
cs
xchg
test
cs
enter
or
pop
out
mov
inc
add
or
nop
mov
in
xor
leave
sub
out
test
add
pop
jns
jbe
push
xchg
xchg
loopne
xor
and
ret
mov
sub
out
rclb
push
xor
add
xchg
adc
in
push
inc
arpl
in
data16
sbb
sbb
mov
imul
inc
jmp
inc
xchg
jbe
xchg
icebp
xor
rcrb
adc
stos
icebp
add
inc
jno
mov
rorl
sbb
in
or
jbe
lods
jl
pop
mov
xchg
lods
ficoms
lods
sub
loopne
bound
xchg
mov
and
push
inc
add
inc
jp
orb
mov
mov
mov
fadds
sub
lds
push
push
pop
call
push
xor
push
dec
mov
mov
lret
fdivl
mov
jmp
test
out
mov
mov
mov
test
fmul
pop
and
mov
push
imul
push
aam
jecxz
dec
mov
shrl
push
dec
fnsave
ljmp
xor
push
cmpsl
xor
pop
shrl
lock
and
test
sub
les
lret
pop
inc
xacquire
sar
cld
xchg
add
jb
push
hlt
lret
insl
cwtl
xor
mov
jg
jecxz
pop
inc
cmp
es
mov
jmp
in
xchg
xchg
xchg
mov
pop
sbb
xchg
jmp
out
ljmp
fldt
dec
cwtl
xchg
mov
xor
ja
or
push
repz
adc
je
int
int
cli
xor
cmp
pusha
xchg
xchg
outsb
sbb
jmp
jne
cmp
sub
cmc
insl
dec
mov
mov
lock
in
mov
addl
xchg
into
and
mov
outsl
adc
mov
rorb
sbb
and
push
xorl
ret
stos
jp
shrl
dec
jns
jle
and
jmp
test
adc
pop
neg
cld
pop
inc
lret
test
lret
xor
mov
pop
insb
stos
mov
push
movsl
jno
pop
sub
add
push
and
les
pusha
and
sbb
xor
pop
pop
shrb
sbb
jg
or
pop
lods
in
inc
cwtl
stos
mov
nop
inc
loop
bnd
test
fimull
jne
int3
repz
cmp
mov
push
cli
leave
stos
mov
cmpl
cmp
ljmp
sbb
xchg
int3
mov
imul
repnz
int3
bound
xchg
push
lods
ficompl
and
lock
pop
mov
inc
mov
sub
out
aad
push
nop
jp
dec
je
inc
pop
pop
push
adc
mov
mov
push
or
or
pop
icebp
pop
jp
dec
jecxz
test
xchg
add
xchg
int
test
mov
in
shrb
sbb
in
mov
cmp
and
inc
les
sbb
stc
mov
flds
leave
cmp
movsb
fsubs
jge
inc
or
mov
push
inc
les
adc
js
notl
aad
pop
or
cmpsl
repnz
neg
jle
stos
fdivrl
in
mov
xor
jno
jle
sbb
and
xor
cmpsb
cwtl
shll
repnz
dec
cmp
add
mov
mov
daa
dec
sbb
sbb
jno
loope
xchg
loopne
sub
fs
and
or
jmp
nop
jle
xor
sbb
pop
int
mov
and
sti
dec
add
xlat
sub
add
or
cmp
dec
aas
mov
les
imulb
frstor
test
mov
adc
fcompl
xchg
ja
add
mov
push
addr16
sub
enter
mov
jg
rorb
ljmp
mov
ja
sub
cmp
inc
jg
aas
sub
aaa
add
bound
jnp
out
rolb
insb
sub
cltd
cmp
and
pop
adc
clc
xor
sti
stos
or
fwait
aam
jmp
xor
dec
or
into
xchg
pusha
pop
xor
inc
es
mov
push
lahf
bound
nop
mov
pop
and
int
sbb
lcall
xchg
xchg
jp
ljmp
jecxz
mov
lock
mov
mov
adc
sbb
xchg
mov
pusha
mov
dec
in
cmp
xor
and
aad
scas
int3
mov
pop
clc
mov
repz
dec
shlb
xchg
add
push
xlat
mov
in
daa
mov
mov
pushf
cmp
sbb
jno
nop
sarb
cmovge
bswap
bnd
jb
fdivrl
mov
int
mov
mov
xchg
push
sarl
mov
pop
or
repz
jp
loope
bound
aas
xchg
fwait
jmp
aam
jo
jmp
xchg
cwtl
inc
add
jg
arpl
mov
push
sbb
sub
ds
fld
pop
and
negl
nop
add
stc
repnz
into
adc
icebp
push
std
fsubrs
mov
push
cltd
aam
adc
pop
xchg
cmp
mov
pusha
fwait
imul
pushf
jno
dec
xchg
sub
or
dec
dec
pop
jnp
push
leave
outsb
inc
int
inc
jle
das
repnz
pop
xor
pop
fst
ja
xchg
push
push
cmp
or
adc
lret
push
xchg
insl
ret
dec
int3
ficomps
ds
mov
mov
and
in
repz
repz
mov
bound
xchg
jne
xor
jmp
or
rcrb
add
popf
adc
adc
jmp
jp
push
fxch
pop
loope
test
rcll
push
fadds
inc
movsl
pop
daa
jns
sub
dec
insb
dec
std
push
fsubr
aam
push
adc
notb
out
sar
jmpw
ficompl
xchg
inc
push
stos
sahf
ljmp
shr
push
adc
fsubrp
xchg
cmpsl
fmull
test
xor
test
mov
or
mov
mov
push
inc
xor
insb
ss
mov
sbb
push
daa
movsl
cs
sub
cmp
cli
xor
dec
adc
movsb
sarb
sbb
sbb
inc
cmp
adc
out
lahf
adc
js
shl
ret
movsw
mov
adc
popl
mov
xchg
sbb
test
pop
sub
insl
test
xchg
les
stos
xchg
mov
cmp
xchg
test
dec
cmp
test
sub
jbe
lds
stos
xchg
cli
jmp
dec
jne
add
lea
push
stos
dec
add
jns
imul
jecxz
rolb
sub
jg
je
stc
mov
ljmp
loop
hlt
push
repz
or
and
cmp
mov
xchg
inc
sbb
leave
arpl
sbb
sahf
mov
jmp
fwait
in
and
loope
verr
inc
inc
pop
fisttpll
je
cs
inc
jecxz
fidivrl
mov
aad
pop
xchg
test
jmpw
addr16
int
fs
in
inc
mov
sbb
mov
and
mov
add
subb
jae
jne
insb
mov
or
add
cld
adc
mov
ret
clc
add
cmpl
sahf
jns
cmp
and
sbb
pop
popf
leave
jns
jb
mov
lcall
mov
fdivrl
dec
les
shrl
pop
std
pop
imul
or
dec
push
sub
test
imul
in
cld
shl
je
dec
insl
add
pop
outsl
jno
aam
mov
xchg
jb
dec
xchg
lods
pop
shrb
ljmp
xchg
mov
stos
movb
ds
jnp
lock
mov
mov
fcompl
mov
sub
das
pop
xlat
adc
push
out
jbe
leave
mov
scas
scas
jno
imul
fisubrs
fs
in
sub
cmp
out
aas
lods
inc
xor
adc
push
in
or
push
mov
popa
adc
xlat
mov
fwait
jg
mov
lahf
jno
mov
fsub
int
repz
mov
into
fsts
mov
or
cmc
lods
push
iret
mov
mov
aad
mov
rcrl
mov
push
xchg
scas
sbb
icebp
mov
test
xchg
dec
pop
dec
lahf
mov
lret
fldcw
scas
xchg
pop
pop
aas
pop
xchg
xchg
mov
ljmp
nop
in
into
inc
push
data16
adc
inc
sub
add
xor
push
and
adc
inc
pop
loope
les
lcall
sub
add
in
inc
mov
xor
enter
lods
shrl
ds
sub
inc
add
ja
and
jle
jnp
jb
ror
mov
mov
adc
mov
add
mov
iret
cs
push
push
scas
adc
sbb
cmpsb
xchg
adc
jbe
fbld
mov
mov
dec
aad
inc
pop
mov
pop
sub
into
test
mov
scas
insb
pop
sub
sbb
popf
xor
sahf
dec
jbe
pop
gs
mull
dec
mov
and
cmc
orb
data16
jp
xchg
sbb
jmp
mov
xchg
adc
mov
jo
sbb
jns
jge
lret
jno
call
mov
fidivrl
pop
adc
test
loop
sub
add
scas
push
jae
sub
aas
jno
insb
mov
mov
cmp
xchg
dec
jle
mov
out
testl
cmp
scas
stc
loop
jbe
jge
xchg
das
call
mov
push
cmpsb
push
mov
inc
jl
dec
scas
insb
inc
loop
call
xor
push
imul
adc
test
cwtl
lahf
popf
scas
test
leave
dec
or
in
pop
jle
mov
sub
sub
inc
sub
icebp
hlt
mov
xchg
rcrb
sbb
cwtl
dec
test
sbb
adc
lock
pop
aad
mov
mov
or
mov
lock
push
into
dec
xor
cmp
fwait
pop
inc
popa
ja
mov
xor
adc
nop
pop
pop
ret
mov
jle
add
rcr
push
js
xor
dec
into
cltd
lcall
ret
pop
popf
push
adcb
iret
aad
loopnew
lods
orb
adc
popf
nop
inc
and
notb
jle
pop
nop
rorb
adc
xor
lret
xchg
push
and
lret
ret
dec
dec
int
ja
mov
insb
push
movsl
xchg
sub
fs
adc
mov
pop
push
mov
pop
jecxz
mov
outsb
xor
push
mov
xor
pandn
stos
mov
notl
sti
mov
add
std
adc
popa
pusha
enter
sub
mov
adcb
xchg
repnz
inc
mov
cmpl
or
lret
out
out
pop
pop
scas
outsl
daa
cmc
cmc
jp
push
imul
mov
add
cmpsb
cmc
movsb
jns
pop
pop
loopne
rolw
jb
xchg
xorl
dec
sti
jg
jp
cmc
inc
add
push
jg
daa
std
push
lods
xor
sub
lret
lret
test
or
lcall
cltd
xor
push
adc
pop
lds
jle
jnp
pop
sbb
xchg
out
sub
leave
cmc
mov
dec
scas
push
jmp
pop
ja
jecxz
sub
pushf
out
rorl
shrl
aas
jecxz
call
add
repz
stos
in
sbb
repnz
in
shll
cmpsb
mov
fsubl
test
pop
mov
aaa
or
cltd
and
fs
adc
adc
mov
mov
xchg
aam
mov
and
xchg
nop
xchg
push
add
fidivs
push
sahf
sbb
in
out
mov
mov
mov
ret
push
movsb
shrl
hlt
mov
add
fiadds
push
cmpsl
pop
lahf
rorl
push
or
es
sbb
mov
or
push
les
add
or
mov
out
js
scas
mov
cmp
jbe
cmp
sahf
scas
inc
lret
ret
mov
cmpl
shll
popf
cmp
rolb
push
sbb
and
int3
or
mov
lret
xor
xchg
pop
mov
cld
mov
lret
dec
loope
fidivrs
pop
ret
jmp
mov
aaa
lcall
cwtl
push
enter
in
jae
dec
jge
xchg
mov
leave
mov
cmp
mov
cmc
xlat
and
pop
jns
stc
out
pusha
cmp
pop
inc
movsl
pushf
ss
fsubs
xor
lahf
jne
in
add
addr16
in
fs
repz
repz
cmp
movsb
lea
ret
js
mov
outsl
je
gs
loopne
adc
cmc
out
and
pop
and
out
cmp
or
dec
pop
mov
lock
jecxz
xchg
mov
jp
je
bound
jecxz
dec
xor
ss
add
je
dec
movsl
je
jnp
jmp
adc
dec
aam
mov
xor
das
adc
icebp
sarl
jne
adc
or
int
orl
das
adc
lock
adc
scas
and
mov
adc
paddd
out
scas
pop
jle
lock
cmp
mov
movsl
mov
insb
lcall
aam
xor
imul
cwtl
mov
ret
adc
lahf
or
dec
xor
inc
jnp
push
mov
insl
fmuls
inc
out
ret
jmp
push
or
and
lret
loope
aad
scas
lret
inc
xchg
rolb
ror
test
lods
ret
out
dec
clc
jmp
push
mov
mov
or
inc
xor
xor
adc
dec
data16
rcrl
stos
mov
xchg
sub
cld
push
shlb
inc
les
adc
cmp
mov
sub
popa
pop
sarl
adc
inc
inc
inc
scas
insb
push
xchg
rcrl
fucom
subb
mov
jg
stc
int3
and
mov
dec
out
scas
out
inc
mov
dec
mov
fs
xchg
pop
js
xor
cmp
dec
or
add
scas
mov
cmpsl
add
xor
iret
jp
push
clc
pop
mov
xchg
sbb
gs
cmpb
pop
pop
xor
movsb
lds
mov
mov
rorb
mov
xor
mov
and
arpl
sbb
jae
inc
in
aad
cld
or
push
mov
push
iret
out
daa
mov
or
divb
mov
std
jmp
scas
xor
pop
std
add
mov
lret
sarb
les
enter
ljmp
ja
push
cmp
pop
jecxz
test
scas
or
js
xchg
push
and
outsb
jg
push
scas
repnz
or
mov
mov
jns
xchg
mov
jae
cmp
sahf
ret
enter
clc
or
mov
divl
cltd
jg,pt
inc
popa
inc
pop
fisubl
or
mov
sahf
jne
inc
sbb
insl
int3
pop
in
pop
cmp
cmp
xor
xlat
fidivs
test
movb
cmp
mov
pop
inc
push
lret
sahf
shll
cmpsb
push
jmp
add
cmpsb
xchg
push
or
cmp
push
int
pop
call
sbb
enter
sbb
mov
test
vphaddwd
pop
outsb
int
or
xlat
push
inc
std
or
jae
adc
out
decb
fs
mov
in
xor
cmp
add
popa
jl
mov
mov
dec
je
cmp
jnp
adc
stos
pop
xor
and
xor
cmpl
mov
icebp
divl
loope
loopne
sub
pop
leave
test
test
mov
insb
jo
dec
addr16
lods
lahf
hlt
jmp
addr16
mov
pushf
add
xchg
add
dec
jecxz
mov
mov
test
mov
pop
xchg
loopne
pop
sbb
inc
inc
dec
mov
sub
xor
inc
fiadds
fcomp
fdivrs
inc
jbe
xchg
cmp
push
jo
pop
add
xchg
sub
enter
mov
cli
andb
and
adc
test
push
cmp
aam
arpl
js
jl
add
xor
mov
fs
js
pusha
sarl
dec
mov
lods
jo
push
or
sbb
je
test
es
iret
cmpsb
sti
add
ja
mov
jne
jne
xchg
test
lcall
xchg
ss
mov
les
out
aaa
gs
xor
ret
out
popf
js
push
mov
faddp
pusha
inc
outsl
flds
mov
cmc
lret
push
cmp
and
es
pop
mov
out
bound
or
mov
cmp
add
dec
xchg
cmp
out
sub
std
stc
stos
mov
int
outsl
cmp
lret
push
dec
stos
jg
push
cmp
xchg
pop
in
mov
in
adc
int3
jno
mov
sbb
ror
push
mov
push
test
imul
mov
sub
fistpll
add
mov
loop
gs
jne
imulb
out
mov
mov
fnsave
adc
dec
and
mov
xorb
and
xor
lret
pushf
mov
jae
out
fs
jmp
and
mov
in
mov
or
push
movsb
out
inc
jmp
jmp
fdivrl
shlb
mov
inc
notb
stos
or
adc
mov
nop
mov
inc
and
inc
pop
jbe
sub
jbe
es
das
or
lahf
push
add
sbb
mov
fs
sub
cltd
mov
icebp
mov
mov
adc
out
mov
pop
mov
mov
lea
and
bound
sub
xor
movsb
sub
mov
icebp
mov
inc
sar
dec
lahf
test
outsb
xchg
pop
rolb
aas
test
inc
sti
in
jbe
in
nop
faddp
into
clc
mov
imul
dec
sub
xchg
test
jg
pop
push
adc
ja
outsl
js
and
repnz
add
dec
lcall
shlb
loope
mov
jge
roll
into
stos
test
xlat
jge
pop
in
xor
add
ret
les
movsl
mov
fnsaves
or
and
out
adc
add
dec
push
mov
pop
xlat
sub
xchg
hlt
ret
push
in
pop
lcall
dec
cmp
inc
pop
out
clc
loope
cld
scas
ja
or
aam
aaa
adc
movsl
repz
ror
mov
bound
addr16
and
and
fcompp
lds
or
fidivl
fistps
out
movsl
adc
orl
filds
cld
arpl
dec
orl
mov
cmpsb
mov
push
in
int3
stos
adc
xchg
fistps
fists
cmpsb
je
pop
sub
std
mov
or
push
push
add
in
call
sbb
ds
pop
inc
mov
mov
add
sub
stos
mov
repnz
xchg
pushl
dec
adc
inc
mov
into
nop
shlb
faddl
ja
xchg
mov
pop
or
aaa
sub
aas
test
loopne
fmuls
or
rolb
dec
hlt
lds
movsl
scas
push
pop
scas
pop
and
xchg
movsl
inc
cli
add
movb
and
lds
mov
pop
xchg
mov
xchg
adc
daa
xor
cmp
inc
loope
xchg
mov
test
jl
jne
sbb
aas
filds
outsl
lock
dec
push
jp
dec
cmp
lcall
daa
mov
ja
out
pop
fidivrs
out
in
push
test
sub
stc
sbb
adc
into
inc
add
jmp
fsubl
push
jo
loop
and
in
dec
ds
fcmovnu
mov
lock
xor
lcall
in
inc
rcll
test
les
stos
data16
jecxz
mov
cmpb
inc
inc
and
arpl
jg
mov
lea
sbb
push
and
dec
mov
loopew
pop
xor
fisttpl
jle
inc
dec
jo
push
je
addr16
fwait
xor
stos
jle
popa
imul
adc
iret
shrl
mov
dec
int3
sbb
das
cli
je
outsb
or
and
xlat
sbbb
stos
xchg
ret
mov
enter
jnp
jns
ljmp
sar
outsl
add
lds
mov
dec
cld
in
add
lea
cwtl
std
aad
in
sahf
dec
loopne
dec
test
jl
daa
sbb
xchg
dec
jae
jae
adcb
pop
jno
imull
xchg
and
js
lahf
and
dec
mov
pop
or
jecxz
rol
xor
add
pop
dec
lret
and
hlt
cmc
clc
pushf
mov
and
add
mov
pop
cli
cmp
jbe
das
and
pop
mov
jecxz
pop
movsl
mov
stos
outsb
stc
fisubs
xchg
ret
insl
push
mov
push
mov
and
sbb
or
dec
add
sub
popa
dec
adc
dec
test
mov
jnp
and
and
mov
scas
sbb
sbb
push
cmp
out
xlat
aaa
and
dec
push
je
mov
addr16
negl
push
push
jl
add
out
arpl
out
fstpl
xchg
jg
push
xor
pushf
push
subb
iret
mov
inc
mov
mov
dec
fwait
pop
popa
push
leave
and
inc
add
out
fdiv
sbb
jl
pop
adc
pop
xchg
dec
lcall
or
rorb
inc
jl
ret
ret
push
xchg
mov
pop
sub
add
mov
dec
xor
inc
push
pop
xchg
mov
mov
orl
sub
icebp
fistl
pop
lahf
pop
mov
cmp
and
push
push
clc
push
fsub
mov
pop
push
fadds
hlt
mov
pop
mov
fdivl
mov
adc
mov
ja
mov
orb
addr16
lahf
imul
pop
test
sbb
jb
add
inc
mov
fmull
test
in
inc
xor
nop
rcrl
pop
pop
stos
pop
les
push
lods
out
lret
or
sti
imul
add
addr16
std
daa
fwait
lret
xchg
push
loop
movsb
mov
sub
add
jge
hlt
mov
jnp
fwait
jle
cmpsl
sub
add
jb
xchg
sbb
dec
jle
mov
ja
xor
fildll
adc
mov
jbe
stos
mov
das
sub
inc
pop
mov
xchg
daa
lcall
test
jbe
xchg
lock
leave
divb
mov
mov
ficoms
adc
xchg
cmc
dec
call
push
fnstcw
or
dec
ficompl
mov
pop
insl
cmc
pop
loope
pop
jmp
pop
mov
cs
cwtl
mov
push
xchg
or
call
sbb
add
push
imul
je
mov
test
shlb
and
mov
insb
repnz
mov
add
fistpl
xchg
rcrb
jb
sti
negb
xlat
dec
iret
std
cltd
mov
sub
jno
mov
repz
push
cltd
sbb
mov
lds
clc
add
or
cmp
and
ja
fwait
jns,pt
sub
mov
cmp
aaa
and
mov
ljmp
mov
mov
lcall
scas
push
jns
push
adcl
mov
lea
insl
mov
imul
les
repnz
pusha
inc
lds
int
insb
and
inc
sbb
cli
stos
jae
mov
addr16
sbb
cli
and
sti
push
mov
xchg
int3
dec
add
aam
inc
mov
xor
inc
filds
jb
jmp
imul
pop
or
out
jle
repz
ss
enter
mov
cli
cmp
test
and
push
pop
jns
adc
mov
mov
jp
ror
pop
xorl
jne
mov
mov
adc
or
cmp
js
push
xchg
movsl
pop
dec
or
dec
cld
xor
stc
or
push
popf
and
aas
cmp
fwait
fwait
add
fildll
dec
dec
out
stc
or
dec
sbb
fisubl
push
fucomip
push
pop
insl
and
loope
cs
sub
ret
jns
mov
out
xchg
outsl
adc
sbb
pushw
add
mov
sub
add
stos
add
mov
sub
dec
lea
orl
jbe
and
jbe
jne
mov
movsl
popa
pop
stos
add
mov
jmp
repz
dec
sbb
sub
and
pop
cmp
mov
add
pop
shll
imul
push
pusha
cld
gs
out
shrb
and
sbb
fstl
int
jp
movsl
clc
clc
cmp
mov
inc
outsb
pop
repz
movsl
add
das
fldcw
sar
sbb
or
mov
jmp
xchg
ret
outsl
mov
rcl
sub
jecxz
xchg
inc
mov
cmp
enter
shlb
jnp
pop
arpl
mov
cmpsb
out
ss
pop
or
xchg
imul
insl
pop
mov
mov
lods
cmc
stc
cmpsb
push
andl
mov
insb
aad
fbstp
jg
pop
jmp
mov
xchg
scas
jle
imul
cli
jecxz
mov
xor
push
pop
icebp
in
fisubrs
pop
dec
rcpps
xchg
push
sbb
insl
ljmp
lret
call
stc
into
push
xchg
mov
push
aam
cmp
aad
int
jae
idiv
dec
xchg
lock
in
sub
scas
xchg
xchg
pop
add
idiv
add
dec
mov
iret
in
cmp
lret
fisubs
jno
pop
mov
pop
arpl
aad
push
loopne
jno
aam
testb
and
or
das
data16
inc
out
leave
xor
imul
inc
rolw
je
loopne
jnp
mov
test
je
fucomp
imul
jmp
gs
sub
dec
rol
stos
shl
pop
add
andl
daa
cmp
pop
orl
and
inc
decb
jns
test
inc
or
pop
cmpsb
int3
push
fcmovnu
mov
cmc
add
je
repz
or
push
cmc
push
jno
cmc
push
cmc
iret
add
int
xchg
xchg
xchg
roll
test
mov
fcmovnbe
leave
stc
stos
addl
andb
nop
jl
cmpsb
test
pop
mov
and
and
pop
out
test
scas
mov
cld
ljmp
cmp
adc
jnp
push
jmp
adc
pop
sub
andl
into
test
pop
cmp
stos
adc
into
test
inc
movsb
add
lahf
loop
cltd
xchg
dec
xchg
hlt
jb
sahf
and
mov
movsb
sbb
iret
leave
addb
pop
divl
mov
push
in
mov
sbb
mov
nop
pop
fldcw
int3
mov
cmpsb
imul
dec
fiaddl
insb
cmp
or
add
jecxz
and
movsl
stos
popf
sub
mov
sbb
mov
subl
lret
push
pop
fisubrs
xor
push
sti
and
adc
push
mov
or
mov
dec
adc
out
das
jecxz
xchg
mov
add
outsb
push
dec
mov
sub
int3
cltd
adc
in
mov
mov
mov
adc
pop
ffreep
push
and
sti
jno
lret
fistpll
adc
addr16
and
push
push
inc
jb
push
push
shrl
adc
stos
js
test
aas
xchg
pop
pop
push
dec
fiaddl
icebp
push
xor
gs
add
mov
push
or
cltd
mov
imul
leave
cmpsb
and
dec
fwait
rdmsr
sbb
into
lods
xor
out
xchg
cmpsl
scas
call
jo
imul
inc
xchg
jne
pop
pop
movsl
fisubs
insl
fidivrl
scas
xor
daa
jge
inc
xor
jns
test
dec
cmpsb
jg
pop
stos
aam
lods
add
jmp
dec
rorl
scas
xor
mov
xchg
and
je
add
and
push
jecxz
dec
push
mov
test
mov
xor
repz
adc
arpl
incl
jp
and
xor
sub
lods
add
gs
push
jno
les
ds
loopne
in
stos
fistl
sub
add
mov
jns
add
lods
out
out
jnp
dec
ljmp
xchg
test
add
or
push
push
and
jg
push
mov
pop
pop
xor
sub
imul
xor
cmpl
dec
cli
stos
test
push
movsb
xor
inc
call
in
arpl
sub
insl
or
outsl
sub
dec
and
xchg
pushf
addb
adc
jo
out
fs
popa
sbb
scas
xchg
push
pop
test
rclb
or
ret
cmp
sub
not
lds
lret
adc
inc
ret
push
xchg
aaa
xlat
rorb
pmullw
pop
sbb
in
mov
push
call
cmp
dec
lahf
dec
addb
dec
and
sub
jae
shr
push
xchg
sbbb
push
adc
out
fcomps
mov
test
stc
aas
pop
lret
push
bound
xor
or
xlat
dec
les
shll
in
cmpsl
fadds
in
test
in
xchg
lock
in
pop
lea
sub
popa
fiaddl
push
jae
mov
sar
mov
pop
test
xor
or
or
sub
adc
out
ja
xor
cs
out
push
adc
xor
adc
popf
lahf
dec
mov
out
notb
push
int
inc
pop
lret
add
pop
xchg
wbinvd
cwtl
xlat
cmp
pushf
imul
jg
imul
ss
mov
out
and
add
xor
je
ret
out
sahf
adc
xchg
sti
hlt
dec
xor
mov
cli
dec
out
xchg
push
jbe
in
call
mov
xchg
dec
imulb
dec
jns
in
lret
jg
xchg
aad
jno
jbe
inc
loopne
arpl
pop
outsb
jl
mov
pop
cmp
inc
pop
jno
in
iret
inc
cmp
jp
adc
mov
mov
push
xchg
sbb
test
push
hlt
inc
or
push
roll
push
pop
dec
push
faddl
daa
mov
pop
fimull
out
push
jnp
jae
mov
mov
dec
dec
into
xor
pushf
mov
rclb
es
sbb
push
push
enter
mov
push
add
mov
push
mov
enter
insl
xchg
data16
dec
test
jns
xchg
adc
lock
xor
xlat
dec
mov
inc
cmp
fwait
mov
mov
ret
fimull
test
push
mov
call
mov
mov
mov
inc
jno
imul
fsubrs
popf
popf
mov
fs
add
ds
insb
jp
fisubl
mov
test
jl
mov
jge
push
sub
sbb
movsb
pop
mov
test
rcr
adc
sub
adc
aam
mov
fidivrs
cmpsl
adc
pop
lret
loopne
insl
xor
fidivs
dec
pop
adcb
outsl
shll
xor
fistpl
data16
dec
ds
sub
mov
int
xor
sbb
adc
or
sub
cmp
imul
push
aad
sbb
mov
sti
mov
add
sub
sub
in
dec
jp
loope
mov
lret
cmp
mov
mov
xlat
jle
vaddsd
adc
ja
loop
jo
or
and
jae
bound
outsl
sbb
js
pushf
cmpsb
cltd
mov
cmp
in
xchg
insl
xlat
cltd
bnd
fwait
jg
in
mov
inc
imul
sub
out
pop
clc
xor
sub
sbb
adc
sti
pop
repz
cmpsl
push
and
jae
std
bound
fistpll
test
lahf
sahf
mov
icebp
std
push
in
arpl
andl
dec
fistpl
enter
je
hlt
es
dec
mov
ret
std
sub
push
mov
push
movsb
sbb
test
loopne
lds
jl
bndstx
data16
sub
dec
repz
mov
cmp
pusha
push
and
das
in
jb
sbb
adcl
nop
jb
or
push
pop
fldcw
enter
inc
push
pop
xor
inc
nop
cmp
dec
jns
data16
cmp
and
mov
mov
dec
jg
jbe
dec
xchg
push
dec
lcall
adc
sbb
popf
lret
mov
sub
sbb
insb
mov
ret
clc
aad
cltd
xchg
popa
fisttpll
mov
sub
sbb
jns
lea
aaa
in
lret
or
pop
cmp
sti
xor
jl
xlat
xchg
mov
lahf
js
imul
subl
loope
jb
push
sub
lcall
scas
dec
pop
fwait
dec
mov
andb
mov
and
xchg
jnp
rol
fwait
dec
cltd
loope
push
pop
push
fcoml
mov
pop
xor
mulb
pop
pop
sub
add
repz
xor
into
pop
out
cmpsb
ret
lret
aam
mov
hlt
inc
pop
mov
ljmp
cmc
flds
cmp
pop
mov
addr16
sub
ss
std
fidivrs
inc
subl
iret
popa
jl
fwait
push
sbb
lret
lret
outsb
call
mov
add
dec
lahf
xchg
popa
out
out
mov
dec
jns
aaa
xlat
enter
xchg
or
nop
sti
rol
mov
mov
mov
outsb
dec
push
add
mov
xor
or
les
xchg
lahf
mov
sub
push
push
repz
sub
ficompl
rcll
in
pop
xor
pop
mov
arpl
mov
sti
cmpsl
or
push
je
push
pop
lea
ss
adc
roll
nop
or
and
cmpsl
mov
imul
mov
rcrl
sub
aad
ja
sub
inc
test
jae
jae
je
sub
jbe
mov
rcr
jp
mov
xchg
sub
jl
jo
mov
sub
sub
lea
jle
iret
jg
jp
push
jnp
repz
jle
lret
jae
pop
cltd
add
cmp
shrb
dec
insl
add
dec
lahf
arpl
xchg
rol
repnz
jo
fdivrs
inc
lds
jecxz
rcll
ret
shlb
ja
lea
add
push
sti
icebp
nop
mov
test
aaa
addr16
mov
imul
les
mov
cmp
out
or
xchg
les
mov
pop
js
pusha
xchg
push
pop
aas
jbe
call
push
mov
xchg
or
test
jmp
imul
dec
rol
xor
sbb
shlb
ds
popl
movsl
aam
push
jne
jae
or
rcrb
out
sbb
dec
add
xchg
das
adcb
pop
pop
inc
pop
movsl
ds
xchg
cmp
mov
arpl
incl
aas
out
mov
add
int3
gs
xchg
fsubrl
fs
push
rcll
xchg
cld
leave
fstpl
pop
or
cmpsl
test
adc
in
push
xor
repnz
in
mov
lods
mov
mov
xor
xor
mov
pop
inc
js
stos
idivl
aas
movsl
cmpsb
xor
add
add
adc
adc
xor
sbb
outsl
dec
jno
mov
and
add
sarb
xchg
negl
jp
pop
jecxz,pt
das
fisubrl
addb
fbstp
ds
loopne
xchg
leave
cwtl
xor
push
inc
das
jecxz
or
shlb
stos
hlt
or
ja
cmp
xorl
and
test
mov
dec
jge
and
daa
sub
test
pop
sbb
pop
aas
in
outsb
inc
data16
in
ljmp
inc
lds
xchg
in
pop
dec
andb
xor
cli
movl
in
imul
mov
dec
jns
xchg
mov
push
or
loope
dec
leave
pop
int
popa
push
jp
mov
xor
mov
xor
or
xor
and
gs
loope
jne
cmp
or
lds
loope
push
or
pop
xor
lods
nop
pop
inc
enter
mov
add
dec
loop
push
fistpll
mov
fdivr
jae
imul
sbb
nop
mov
pusha
inc
fldl
dec
ret
sub
ret
cmpsb
xchg
decb
inc
xor
daa
adc
jno
mov
sbb
nop
into
movsb
jno
lret
movsb
pushf
gs
call
pushf
movsl
jae
pusha
jbe
subl
push
arpl
mov
add
insb
push
xchg
cmp
ficoms
scas
cwtl
and
mov
bound
fs
andb
or
mov
inc
movsb
sub
jae
jb
push
pushf
aas
adc
sbb
fidivl
and
mov
lds
mov
std
es
pop
xchg
ja
dec
rcl
mov
mov
push
ljmp
in
adc
add
loope
insb
xor
mov
std
sarb
les
rol
das
xchg
in
shrb
add
mov
add
jno
cmp
insl
test
adcb
cmp
xchg
negb
sbb
loope
jnp
imul
dec
mov
aas
inc
fldt
int
test
je
aas
dec
movsl
mov
imul
les
mov
sbb
jnp
add
enter
dec
xchg
pop
inc
in
sbb
cmp
rol
int
xchg
mov
shlb
push
shlb
mov
jae
or
mov
aas
mov
pop
push
push
add
xchg
and
stos
cmp
cmp
cmp
or
jo
mov
xchg
cmpsl
pop
repz
das
outsb
or
mov
jmp
mov
inc
in
cmc
popf
cltd
mov
out
inc
int3
add
and
jno
xchg
push
scas
jnp
lahf
lods
imul
mov
addr16
ja
push
cmp
mov
and
mov
movsl
imul
sub
xor
sbb
fcomps
xlat
dec
jno
and
jb
movsl
pop
imul
mov
stc
cmpsb
mov
dec
inc
jo
jns
inc
std
mov
inc
or
ret
sub
sub
mov
inc
adc
in
pop
jmp
mov
repnz
jecxz
flds
lcall
mov
movsb
leave
aam
call
call
out
iret
or
xchg
mov
shlb
into
xlat
cmpsb
int
mov
mov
mov
mov
movsl
lods
jne
lods
shl
jle
gs
sti
add
movsl
cld
test
jns
incb
and
cs
adc
cmp
push
mov
sahf
lds
add
mov
push
push
lods
jno
lahf
out
sbb
jp
loope
jb
std
sbb
inc
lret
pop
inc
fnstsw
addr16
sbb
je
and
out
xor
xchg
icebp
lahf
cs
daa
jno
mov
or
ds
cld
outsb
lods
rcl
sbb
and
mov
jle
pop
sarl
stos
inc
cmp
movb
xchg
fwait
or
in
jae
pop
iret
scas
sti
dec
sbb
scas
jbe
jae
jmp
fimuls
mov
rcrl
push
in
repnz
jb
or
fcmovnu
stc
jb
mov
sbb
jl
and
or
test
sub
adc
or
mov
dec
xchg
mov
ljmp
mov
call
push
mov
jnp
in
test
jo
fisubl
aam
push
lahf
rcrb
popf
add
adc
mov
add
arpl
add
test
cltd
cmpl
loopne
mov
fstpt
data16
cltd
loopne
outsb
es
or
popa
jno
movsl
mov
mov
imul
int
lret
in
fcomps
das
lds
cltd
inc
xor
loop
and
cld
scas
xor
insb
hlt
or
lods
sub
pop
xchg
frstor
pop
movsl
call
gs
dec
int3
mov
pop
les
in
mov
push
incb
xor
jg
into
bound
sahf
lret
xlat
pop
sbb
sti
fidivrl
fwait
ljmp
jmp
mov
or
incb
stos
jg
cmp
out
and
cld
sbb
mov
sub
cwtl
add
mov
sbb
gs
cmp
test
inc
lcall
int3
out
enter
fldcw
cmpsl
loope
idivb
push
jbe
mov
rorl
mov
jg
xchg
mov
ror
shlb
or
into
inc
ficomps
adc
push
scas
jne
mov
ficoml
aaa
dec
xchg
cld
lock
push
push
cltd
pop
loopne
cmp
cld
adc
xor
cmp
repz
pop
adc
test
hlt
push
mov
and
and
mov
add
sbb
orl
fstpt
add
dec
sbb
and
xchg
hlt
push
inc
pop
mov
pop
icebp
pop
repz
sub
test
rorb
cmp
jae
push
push
hlt
mov
jl
adc
dec
imul
mov
jns
push
pop
dec
or
or
loop
dec
clc
outsl
sbbb
pop
jae
push
ja
jae
push
int
cmp
push
push
mov
jae
popf
sbb
adc
adc
mov
inc
xor
sub
jbe
out
mov
dec
lds
cs
sub
jp
popf
hlt
in
stc
andl
fwait
les
mov
push
popa
mov
push
jmp
mov
out
std
rcl
mov
mov
stc
dec
imul
mov
jp
stc
sub
loopne
jle
lret
jb
xchg
lret
aaa
gs
adcb
mov
dec
add
jno,pt
push
push
daa
nop
push
inc
jb
cmp
mov
in
jmp
fisubrs
cli
mov
push
bound
rcl
mov
cmp
cmc
sbb
cltd
mov
test
fistpl
stos
mov
loopne
dec
push
mov
mov
faddl
int3
cmp
mov
or
aas
ja,pn
xchg
insl
pop
pusha
lds
out
inc
fs
or
jle
sub
or
inc
dec
aad
and
jp
in
add
test
xor
mov
nop
fildll
sbb
aam
dec
in
sbb
mov
xlat
fdivrs
adc
inc
mov
dec
pop
ja
cwtl
inc
nop
push
sub
and
pop
popf
or
push
inc
sub
push
xchg
es
dec
ljmp
aas
mov
xlat
cwtl
loopne
iret
rclb
push
sub
mov
xor
in
push
xchg
mov
shrb
sub
in
push
aad
jnp
add
xchg
sub
in
in
jecxz
daa
xchg
clc
xchg
stos
mov
lret
xor
mov
mov
test
popa
xor
push
pushf
hlt
movb
push
push
or
mov
add
mov
lock
pop
imul
push
cmpsl
mov
das
nop
or
sbb
adc
ja
inc
les
cs
jecxz
mov
mov
pop
cmp
div
xor
cld
ficompl
addr16
inc
leave
inc
popa
mov
sub
adc
push
adc
pop
lcall
xor
adc
jle
xor
push
bnd
cli
push
outsb
jmp
mov
fcomip
inc
mov
jno
cmpsb
pop
imul
das
adc
popa
or
dec
rclb
adc
aas
cli
je
ja
xor
in
aas
aaa
push
dec
mov
add
cs
fs
lods
popa
or
jno
test
aad
ljmp
into
out
rclb
out
add
xor
cs
mov
shlb
xor
or
cmp
jbe
repz
psubw
cmp
push
or
stc
jns
inc
pop
sbb
or
cmp
mov
in
mov
xor
xor
cmp
icebp
mov
add
popf
pop
cltd
je
imul
lahf
xor
jnp
repnz
mov
push
mov
mov
jbe
js
dec
mov
cmpsl
test
jge
movsl
push
daa
lods
loope
lret
sub
pop
loopne
or
ss
call
mov
movsb
inc
push
testb
aad
stos
mov
int3
jns
mov
jle
pop
mov
ret
test
add
in
mov
xlat
dec
dec
jne
inc
pop
mov
xchg
scas
loope
mov
mov
xchg
adcl
cli
lock
xchg
inc
and
cmp
fldcw
lea
std
int3
jo
idivl
cmp
dec
mov
ss
xchg
fsubrl
jo
test
pusha
adc
rcl
aaa
dec
lahf
in
or
jno
push
sahf
mov
mov
mov
mov
test
jb
test
ret
xchg
ret
sub
cwtl
xor
inc
inc
inc
lods
lret
or
xchg
mov
fistps
test
mull
mov
jnp
jno
mov
cli
fstp
push
lret
push
xchg
imul
sar
or
adc
push
flds
pusha
dec
pop
js
inc
inc
push
sbb
bound
int3
xor
fdivrs
in
cmp
mov
popa
adc
pop
je
mov
lods
xor
pushf
sub
mov
or
das
xchg
rolb
out
and
out
mov
or
loope
mov
movsl
mov
adc
push
cmpsb
mov
xchg
dec
inc
int3
cmp
xchg
or
mov
pop
or
pop
mov
cmp
jae
inc
fcompl
or
xor
cs
jp
mov
adc
loop
sbb
jne
dec
test
ljmp
lret
fs
cs
clc
pop
xor
jg
fucom
sbb
pushf
dec
das
dec
cmp
fnstcw
sub
lahf
scas
adc
xor
out
dec
cmc
lea
jg
inc
or
cmp
sub
clc
lahf
pop
std
icebp
sub
pushf
and
and
dec
popa
cmp
dec
push
dec
add
data16
jb
mov
in
sbb
mov
xlat
xchg
mov
fs
lods
mov
iret
xor
sahf
ja
sbb
inc
loope
outsl
mov
pop
imul
jbe
insb
aam
loope
mov
mov
subb
dec
ror
rep
dec
loope
jge
mov
cmpsl
push
jg
push
pop
mov
mov
xor
and
insb
shlb
dec
push
sub
add
popa
cmpsl
nop
ja
push
rorb
scas
dec
xchg
clc
daa
sub
mov
jae
jbe
xchg
test
push
rcl
repnz
mov
dec
lret
jl
and
lret
pushf
adcb
jnp
rcr
inc
cmc
loop
or
aas
mov
mov
mov
push
push
ret
fcomp
xor
jp
call
inc
data16
es
nop
addr16
mov
jge
sbb
inc
shll
xchg
imul
mov
or
fidivrs
cmpsb
ret
inc
mov
pop
and
and
add
inc
mov
cmpsl
out
jo
pop
push
cld
mov
push
in
push
cltd
xchg
rorb
mov
xlat
stos
mov
mov
xchg
pop
dec
lret
inc
sbb
shll
daa
and
les
jg
out
xchg
out
popf
mov
and
adc
pop
fistpll
pop
je
xchg
sbb
inc
fdivrp
xor
dec
add
clc
jge
pop
cltd
bound
or
fists
pop
andb
lock
xchg
scas
es
adc
repz
cli
mov
jno
rcll
add
mov
iret
mov
adc
cmp
out
outsl
mov
lahf
push
hlt
cmp
out
pop
add
ja
testl
cs
pusha
inc
xchg
cmp
jne
ljmp
sti
jp
out
xor
jno
mov
adc
add
jnp
mov
cmp
cmp
push
in
mov
popl
aaa
add
xor
imul
or
cmc
push
loop
subb
in
repz
mov
add
scas
mov
jnp
sbb
add
pop
shl
xchg
popf
adc
mov
pop
ret
and
mov
lcall
xor
loopne
push
rorb
sub
mov
xchg
sti
xlat
mov
daa
dec
movsl
dec
add
push
nop
push
ffreep
mov
add
adc
xor
sti
cwtl
add
pop
lds
xchg
int
jge
mov
clc
out
lcall
push
add
lods
mov
pop
inc
pushf
dec
xor
test
rclb
mov
push
in
repnz
xchg
cmpsb
pop
xchg
into
aam
ja
movsl
inc
adc
test
clc
and
cmp
andb
jae
cltd
pop
cltd
int
out
daa
frstor
inc
or
pop
ret
std
out
lods
pop
cmc
insb
jecxz
ret
mov
cmp
imul
xchg
xor
inc
call
and
sahf
dec
xor
mov
ret
aad
pop
aad
push
jge
pop
jo
jmp
movsl
push
loope
xchg
jl
cmc
pop
xor
push
xor
dec
cmpsl
daa
jmp
hlt
dec
pop
or
incb
lcall
outsl
cmc
out
mov
jmp
and
nop
dec
enter
dec
or
adc
cmp
sub
movsl
cmp
stos
test
lock
mov
into
push
dec
movsb
sub
ret
movsb
fsubs
push
jb
xor
pop
mov
fstps
ret
fdivrs
xor
and
pop
push
pop
in
stos
lret
sar
loop
jo
pop
xchg
cwtl
sbb
xor
ret
fucomp
or
and
adc
jge
testb
inc
mov
in
test
sbb
sti
ljmp
jg
or
add
fstl
js
and
mov
or
pop
xchg
rcrl
insb
mov
xchg
jae
cwtl
and
xor
jno
jno
sub
roll
sub
dec
mov
xchg
adc
xor
mov
lods
nop
pop
sbb
xor
sbbl
ss
adcl
insb
or
insb
inc
mov
xchg
add
lds
fsub
jp
adcl
add
sub
jb
pop
pop
or
mov
and
movsl
xchg
push
pop
adc
ret
push
dec
daa
and
cmc
cmp
add
popa
cmp
mov
loope
cld
adc
push
inc
pop
sti
mov
or
xor
and
scas
iret
mov
hlt
and
push
nop
aaa
cltd
lret
pusha
movsb
cmp
lahf
or
outsl
insb
lret
cmp
lds
add
push
mov
push
xor
fistl
movsl
in
movsb
pop
mov
cmpsl
int3
mov
push
hlt
inc
push
bound
les
lock
add
xchg
push
mov
push
loope
xchg
sbb
js
rcr
pop
shlb
into
mov
rorl
and
mov
hlt
fisubrs
shlb
outsb
and
push
xchg
add
sarl
sbb
out
xchg
or
pop
mov
mov
add
mov
jb
les
push
lret
jns
mov
cmpsb
in
ficoms
repnz
in
mov
out
aad
push
mov
or
mov
sarl
inc
out
bound
xor
and
popa
and
stc
lret
sti
out
lret
mov
repz
sub
or
pop
xlat
pop
imul
in
inc
lods
jg
sbb
js
gs
rclb
lcall
pop
and
imul
xor
inc
add
mov
jl
outsl
adc
shl
jnp
inc
add
shll
xchg
pusha
xor
mov
or
mov
cs
push
sub
mov
clc
jns
sbb
inc
jecxz
pop
sub
in
or
bound
xor
daa
mov
lcall
xchg
cwtl
jl
loope
xchg
aas
pop
xchg
xor
sub
cli
aaa
js
xchg
lock
mov
incb
ret
mov
fiadds
fadd
pushf
push
das
ds
sbb
enter
icebp
cmp
xchg
mov
pop
xchg
sbb
sbb
clc
mov
imul
inc
xlat
subl
es
xchg
mov
ret
sub
push
cmp
jns
andb
pop
aam
jbe
lahf
xchg
daa
out
bound
call
sub
or
ds
sub
shrl
push
sub
.byte
.byte
test
