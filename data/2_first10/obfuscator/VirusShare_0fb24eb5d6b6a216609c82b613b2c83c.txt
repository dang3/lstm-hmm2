sub
shlb
add
shl
mov
mov
add
jne
in
popf
dec
xor
mov
or
in
aaa
popa
popf
mov
pop
xchg
and
ja
fcmovu
movsl
out
rclb
gs
pusha
stos
mov
stos
or
test
jmp
into
int
mov
inc
pop
ss
call
push
add
mov
imul
xchg
nop
adc
mov
fsubrs
sbb
lcall
lcall
lret
inc
dec
outsb
outsb
fwait
fs
fcompl
insb
fcoms
push
gs
cmp
imul
jmp
jl
jmp
js
in
scas
loop
loop
lea
movsb
jae
lahf
xor
inc
jno
and
sub
inc
sbbl
mov
add
sbb
cmp
shr
mov
sub
cmp
andl
stos
push
or
cmp
subb
ds
push
ds
jo
int
push
xlat
jp
leave
mov
pop
xor
in
ljmp
lods
cmp
mov
mov
jne
adc
dec
sbb
or
inc
sub
inc
or
movsb
pushf
push
or
push
mov
fmull
mov
mov
add
push
push
cmp
inc
movsb
sbb
pushf
adc
test
cli
stc
loope
in
iret
dec
inc
mov
or
clc
fimuls
lahf
lcall
notl
out
push
hlt
mov
test
xchg
xchg
jnp
push
bound
loopne
pusha
pop
sbb
mov
lahf
pop
lahf
or
mov
imull
cltd
add
mov
xchg
or
nopl
jg
cmp
sti
jb
fsubp
adc
ficoml
cld
scas
ror
pop
jmp
push
insb
jae
aas
jno
lret
cmp
cmpsl
icebp
mov
or
cltd
add
in
cmp
xor
cmp
test
lods
sub
int
sub
lock
sub
pushf
dec
cld
js
movb
adc
mov
mov
repnz
mov
mov
stos
stos
mov
adc
faddl
or
hlt
ds
push
adc
pushf
scas
dec
lds
decb
lea
mov
test
int
push
adc
xor
inc
pop
add
pop
mov
aam
sub
add
cmp
sub
aas
mov
fstl
ss
pop
fsts
and
jecxz
ret
js
in
fmull
mov
ret
xor
sbb
mov
popa
cld
fnstcw
add
add
sbb
mov
pushl
pop
push
or
xor
cmp
or
cmp
lds
xor
jbe
sub
adc
outsl
pop
cltd
out
test
outsb
setbe
roll
push
xchg
fwait
cmp
fisubrl
pushf
mov
test
lea
dec
or
mov
fimuls
push
adc
cmp
add
out
jno
add
mov
inc
mov
pop
loopne
sbb
leave
les
jae
jp
mov
lret
mov
ljmp
daa
ljmp
je
mov
pop
pushf
mov
int3
call
je
sbb
push
aam
call
les
fucomp
sahf
lret
mov
cmpsl
xchg
xchg
xor
add
not
js
repnz
test
mov
ljmp
scas
out
jl
insb
mov
sbb
clts
sbb
add
push
push
repnz
mov
jne
cltd
out
dec
jo
in
scas
jge
mov
xchg
or
push
sti
adc
mov
push
mov
hlt
lret
std
test
imul
pop
or
sub
and
test
lds
mov
jg
popf
cmp
aas
iret
jp
xor
push
out
and
pop
movsl
pop
pop
pop
push
jo
jnp
jno
imul
mov
mov
xor
rclb
scas
test
lcall
jbe
dec
loop
inc
aam
jg
mov
stc
xorl
pop
cmp
xor
cmp
pop
dec
add
cs
icebp
push
and
cs
inc
cmp
insb
jns
cmp
push
push
jmp
xor
add
xrelease
pop
xchg
push
cmp
push
lds
pmulhuw
vmovq
cmpsl
outsl
mov
cmp
pop
dec
movsl
xchg
fbld
add
stc
dec
dec
fsubr
mov
inc
dec
jle
push
movsb
pop
shrl
iret
aad
mov
shl
cltd
pop
inc
bswap
jne
fsubl
cmp
pop
lds
dec
inc
jae
mov
ficompl
push
cmp
cs
xchg
mov
sbb
cmp
mov
out
dec
arpl
aam
cwtl
cwtl
mov
div
mov
repz
pop
push
stos
addr16
pop
stos
int3
sbb
xchg
rorb
xchg
xchg
pop
loop
jb
mov
or
imul
mov
mov
push
push
xor
sbb
jne
scas
cmc
jp
divb
lods
cmp
mov
imul
enter
test
loopne
mov
mov
in
pop
add
mov
sbb
test
lret
outsb
into
lock
add
repz
or
sub
jno
push
jae
roll
pusha
mov
jns
stos
inc
xor
or
mov
mov
mov
mov
movsb
sbb
mull
mov
push
jl
xchg
insl
dec
nop
outsb
cli
aas
aad
sub
std
jle
addl
js
pop
pop
in
dec
xor
lea
mov
pop
or
pop
pop
add
bound
into
lret
or
xchg
ljmp
pusha
scas
jae
dec
mov
jno
xor
push
xor
sahf
repnz
jp
rcll
sub
xlat
das
xchg
pop
jle
loopne
xor
hlt
jbe
imul
loope
ret
xor
xlat
push
sbb
out
shlb
int
inc
jne
iret
adc
push
insl
xor
push
or
mulb
cmp
out
repz
adcl
mov
dec
push
movsb
and
xor
out
xchg
cwtl
pop
sub
push
popa
rcll
push
mull
push
cmpsb
and
sbb
insb
add
lret
test
add
rcll
pushf
and
mov
gs
sub
shl
xchg
inc
xchg
dec
mov
test
adc
cwtl
adc
fsubrp
repz
pop
and
scas
xchg
cltd
sbb
dec
dec
sub
mov
hlt
fs
cmc
lds
jecxz
aas
clc
push
test
cmp
in
push
data16
add
mov
ljmp
test
scas
sbb
scas
mov
ds
add
add
pop
mov
rcrb
xchg
jb
shlb
stos
sub
push
sub
mov
enter
sarl
xchg
dec
jg
sbb
dec
in
or
loop
stc
and
xlat
pushf
lcall
sar
dec
xor
jns
hlt
cmp
movsb
jg
jl
imulb
jne
adc
leave
inc
pop
insl
iret
jno
test
mov
sahf
stc
adc
mov
inc
leave
mov
mov
rcl
inc
push
xor
or
inc
mov
add
sbb
adc
popa
lret
cwtl
and
sti
or
popf
pop
stc
in
dec
ret
adc
or
push
imul
aas
in
and
mov
dec
mov
jg
xor
adc
divb
push
dec
arpl
ss
add
cmpsb
push
mov
mov
jle
repz
std
bound
aas
cmp
sub
adc
nop
cltd
in
test
out
jae
pop
mov
jp
nop
adc
mov
mov
mov
pop
mov
out
rcrb
cltd
push
jle
pop
sbb
movsb
scas
add
push
xlat
xchg
hlt
outsb
lds
in
cmpsb
lcall
dec
push
shl
adc
test
aam
adc
nop
or
fcompl
arpl
cmp
mull
je
adc
les
cmp
stc
mov
test
mov
xor
mov
out
push
cmpsb
or
ret
es
test
inc
xbegin
mov
lods
cli
mov
imul
mov
call
xchg
xchg
imul
outsl
imul
mov
test
adc
push
xor
pop
mov
mov
pop
dec
fldenv
mov
jbe
push
lahf
imul
jle
mov
cmp
pusha
and
xchg
pusha
xor
and
xchg
sahf
movsb
ljmp
mov
add
push
pop
or
mov
rcll
mov
and
pushf
in
in
mov
adc
adc
push
or
cltd
mov
or
test
mov
mov
into
jge
es
lcall
mov
dec
cmpsb
lds
aaa
shrl
jb
jb
dec
out
arpl
enter
push
or
stc
clc
jne
rcll
mov
fistpll
inc
dec
sti
mov
sar
jne
push
adc
bound
inc
scas
rorl
mov
lret
loop
arpl
adc
js
clc
mov
cmc
mov
aas
lods
pop
jbe
add
imul
pop
xlat
inc
mov
fisubrl
mulb
xor
add
aam
xlat
xchg
xchg
lcall
xor
push
xchg
jge
sbb
lds
ret
push
ffree
xchg
add
test
pusha
add
push
add
scas
and
filds
mov
cli
push
inc
outsl
shll
pop
in
sub
imul
mov
jne
stc
mov
shr
aaa
add
movsl
mov
adc
fldcw
xchg
ret
cli
into
xor
adc
sbb
mov
mov
fwait
adc
stos
cmpsb
dec
mov
into
scas
daa
xchg
fnstsw
fsubl
stc
int3
mov
scas
or
int3
inc
out
mov
mov
pop
shlb
push
pop
mov
movsl
adc
dec
dec
mov
push
push
scas
hlt
into
xor
repz
inc
arpl
inc
pop
jnp
sub
or
out
clc
clc
insb
mov
sbb
push
jne
push
mov
stc
outsb
pop
je
jne
sbb
xor
test
and
sbb
cwtl
test
popa
mov
push
dec
aam
imul
mov
loop
scas
or
lret
sbb
mov
sub
mov
int3
stc
sti
scas
dec
add
sub
dec
dec
fnstcw
outsb
lcall
mov
sub
in
fdivrs
inc
mov
lock
jae
inc
mov
mov
mov
push
and
cs
mov
mov
icebp
lcall
daa
not
jmp
cld
mov
jg
mov
mov
sub
cli
and
jno
enter
push
cmpsl
sbb
pop
scas
add
les
nop
testb
roll
mov
push
mov
pop
ret
into
js
inc
jmp
push
mov
pop
ljmp
cmp
jne
xchg
push
shll
inc
xchg
and
aaa
xchg
int
iret
mov
fildl
pop
pop
int
pop
mov
adc
stc
push
in
rol
mov
repnz
pushf
leave
scas
or
mov
xchg
imul
push
add
addr16
fadds
cmpsb
xchg
addl
cmp
xchg
pop
mov
mov
fistl
mov
push
nop
rcrl
jge
dec
cld
push
cwtl
mov
add
push
push
divl
add
cwtl
xor
flds
test
pop
loope
pushf
jmp
movsl
dec
call
fistl
hlt
xchg
mov
fbstp
mov
add
lods
pop
mov
aaa
movsl
outsl
add
maskmovq
imull
xchg
xchg
data16
popa
aad
iret
fwait
cld
cwtl
ds
or
in
aad
push
bound
pop
cmpsb
mov
adc
add
mov
fildll
inc
rcr
arpl
mov
add
push
push
sub
xchg
in
fldt
or
inc
dec
mov
mov
jno
mov
leave
or
push
repnz
cmp
mov
sti
shl
scas
pop
jnp
push
es
test
ret
stos
xchg
sti
add
in
mov
cli
gs
insl
scas
jmp
or
sti
inc
mov
pusha
lret
in
popa
sbb
sti
stos
pop
add
loope
icebp
cmp
dec
ret
movl
mov
icebp
push
cmpsb
or
inc
xchg
push
adc
pop
push
fiaddl
adc
jae
jne
cld
xchg
popf
adc
inc
sbb
inc
xchg
stc
imul
mov
cltd
fnstsw
push
in
mov
jp
jmp
les
push
dec
add
mov
jne
loope
and
sub
enter
leave
icebp
push
test
popa
and
mov
lds
lods
jnp
mov
and
jbe
fs
add
sub
adcl
lahf
rcll
xchg
sbb
inc
mov
leave
jnp
or
sbb
icebp
xchg
leave
xor
dec
sub
push
test
xchg
fsubr
outsb
sbb
xor
mov
and
pop
push
mov
mov
into
push
clc
add
jmp
iret
sti
pop
and
push
mov
dec
adc
jb
std
jle
cmp
fnstenv
xlat
inc
mov
mov
inc
popa
jmp
cs
mov
jle
stos
fcoml
test
jae
mov
pop
iret
sbb
xor
inc
xor
mov
add
xchg
mov
sbb
mov
les
xchg
mov
xchg
arpl
lods
push
xor
cmp
scas
divl
or
xchg
or
lods
push
movsb
pop
push
xchg
push
hlt
mov
das
mov
jbe
mov
mov
nop
sarb
or
mov
inc
js
mov
jecxz
je
pop
int
push
das
sub
mov
sahf
clc
jne
xlat
push
push
outsb
pop
lahf
pop
and
leave
nop
fdivl
ja
mov
jmp
mov
mov
mov
xor
mov
add
or
jns
fcmovne
adc
scas
xchg
mov
test
test
mov
inc
cmp
xor
clc
arpl
xchg
mov
push
mov
pop
repnz
or
jae
repz
inc
ljmp
jo
test
inc
pop
xor
cmp
pop
xlat
pusha
orl
cmpsl
xchg
ret
jbe
jae
rorl
mov
in
int
fucomi
mov
stc
sub
cwtl
dec
pop
adc
jg
push
ja
pop
movsl
mov
data16
dec
mov
dec
addr16
mov
xchg
mov
sub
push
mov
sbb
push
ds
daa
mov
jg
rcrl
insl
movl
or
scas
xor
je
add
rorb
into
mov
pop
mov
xchg
pop
lds
push
div
jmp
fs
mov
mov
adc
cmpsb
lret
clc
insl
out
pop
lock
loop
xchg
pop
fwait
push
lret
cmpsb
out
mov
sub
xchg
sbbl
subl
insb
test
xor
fs
add
jbe
mov
addr16
pop
pop
push
pop
rolb
xchg
aas
and
xchg
push
rclb
dec
mov
idivl
test
addr16
hlt
jecxz
int
into
jne
daa
lods
and
testb
jns
out
mov
xor
or
xchg
push
push
inc
adc
fldl
je
incl
adc
pop
insb
jl
xor
loop,pn
push
sub
lret
dec
mov
pop
pop
scas
inc
inc
aam
cwtl
xchg
data16
pop
movsl
popa
stos
lods
push
js
sar
fdivl
repnz
add
rcrl
sarl
jp
aas
lret
mov
repz
pusha
loopne
jl
or
cld
dec
cmpsl
push
push
cmp
pop
or
in
pop
sbb
std
or
call
xchg
pop
push
divl
xor
lock
mov
addl
add
push
jae
insb
jno
and
dec
test
fistpl
in
cmc
jmp
lret
and
cmp
cmpb
sub
test
stos
fbstp
mov
negl
gs
xor
push
fnstcw
hlt
jo
pop
ret
scas
push
mov
shl
nop
sar
and
lods
xor
shrb
xor
hlt
movsl
stc
push
mov
inc
adc
daa
into
daa
mov
punpckhbw
jns
ficomps
mov
push
mov
int3
aaa
mov
or
adc
or
stc
stos
xchg
fldenv
jecxz
fwait
cmc
out
xchg
daa
fcompl
repnz
xchg
dec
and
cmc
sarl
ret
sub
xchg
xlat
cmpsb
add
dec
sbb
jg
daa
xchg
pop
outsb
sub
pop
cmpsb
xchg
cmpsb
out
jle
add
and
cltd
inc
xor
inc
js
hlt
ljmp
push
int
lahf
hlt
mov
mov
fiadds
dec
jle
out
ret
cli
jge
dec
mov
out
xchg
lret
jp
jmp
mov
push
inc
data16
hlt
mov
sbb
imul
lods
cwtl
sbb
subl
mov
add
add
push
popa
sar
mov
dec
xor
enter
xchg
xor
nop
push
lret
dec
dec
pop
or
pop
lods
js
aas
negb
push
mov
sub
jge
sbb
cs
mov
xchg
push
or
cmp
dec
jge
fwait
xor
jo
sub
xor
xor
lcall
adc
mov
sub
fnstcw
dec
pop
frstor
insb
push
gs
hlt
push
push
mov
in
xchg
ja
imul
sbb
repnz
sbb
out
in
dec
or
xchg
lea
adc
in
inc
and
jno
inc
loopne
lret
movsl
lds
pushf
pop
mov
jp
test
xor
push
sar
jne
call
push
dec
out
lods
lahf
dec
int
jecxz
es
jp
dec
xorb
or
adc
mov
frstor
fdivl
mov
in
pop
mov
clc
scas
aad
xor
mov
cmp
add
rorl
pop
push
cmp
iret
repnz
mov
pusha
shrl
cltd
jbe
push
push
jne
hlt
faddl
ja
ret
add
pop
mov
dec
cld
stos
fidivs
ffree
pop
outsl
cwtl
mov
sub
and
inc
insb
fimuls
xchg
mov
mov
pusha
insb
popa
lcall
sub
pop
push
cmp
push
fs
xchg
or
stc
pop
jl
xor
inc
pop
mov
in
or
test
fwait
repz
scas
jne
cs
or
je
fwait
and
outsl
add
fisubl
daa
pop
or
incl
enter
popa
xlat
cmpl
call
cs
push
push
outsb
adc
nop
dec
xchg
scas
scas
and
or
icebp
jmp
sub
cmp
push
out
fs
inc
rcll
cmpsb
mov
lea
lcall
loop
sbb
call
std
inc
imul
test
sahf
cld
inc
mov
adcb
int
adc
jb
xchg
mov
popa
ljmp
shrl
pop
fs
cmp
int3
sbb
pop
mov
aad
jg
cmp
loopne
shrl
add
dec
push
adc
add
fdivrs
dec
mov
add
pop
cld
mov
leave
out
movsl
dec
cmp
ss
hlt
gs
cmp
lea
fs
lods
pop
xlat
dec
cmp
enter
nop
xor
fimull
adc
jmp
jnp
jae
sbb
repnz
sbb
pop
xorb
or
popf
cmp
push
jne
jnp
xor
or
inc
into
xor
jns
inc
lcall
xorl
inc
popa
in
lcall
bound
pusha
push
orb
hlt
mov
fisttpll
push
cmp
cmp
push
mov
iret
jo
std
imul
xor
out
push
jo
shlb
mov
or
add
sbb
imul
in
adc
inc
push
xchg
sti
cmp
movsl
daa
jmp
ds
inc
lcall
nop
or
adc
aad
mov
mov
sahf
pop
push
into
rorb
stos
mov
mull
cmpsl
xchg
cli
icebp
or
cmpsb
cmp
iret
push
out
push
mov
xor
pop
mov
stc
jmp
clc
inc
fs
jnp
push
outsl
dec
int3
je
mov
jae
ret
mov
js
out
outsb
adc
mov
movsb
adc
sub
add
mov
and
fsubp
and
fsubrs
mov
imul
icebp
dec
movsb
inc
rcrl
push
lds
repz
pop
mov
aas
sub
stos
jecxz
mov
roll
imul
outsb
dec
mov
enter
mov
enter
orl
getsec
das
adc
rol
jecxz
stos
mov
stos
xchg
xor
dec
dec
cmp
sbb
xchg
scas
sti
jbe
lcall
and
jo
out
mov
lods
add
ds
push
cmpsl
in
das
pop
in
push
dec
pusha
or
pop
cli
sbb
test
call
fs
out
push
jne
mov
dec
mov
pop
mov
adc
sbb
outsl
push
push
cmp
or
mov
scas
jbe
stos
mov
daa
jne
sub
mov
pop
add
or
mov
int3
mov
cmp
push
adc
lods
js
xor
test
outsb
inc
jecxz
fimuls
aaa
adc
or
mov
repnz
add
mov
sbb
mov
mov
jp
xchg
int3
movsl
xchg
mov
mull
cmpsl
or
inc
sti
add
jp
jle
das
mov
popl
cmp
cmp
jecxz,pn
fwait
cltd
xlat
xchg
addr16
mov
ja
mov
aas
imul
int3
inc
shll
ffreep
fs
xchg
cmp
loopne
dec
xchg
ror
mov
xchg
es
in
push
out
inc
loope
dec
xchg
ret
lods
shlb
popl
shll
loope
imul
or
in
and
lock
jnp
jno
adc
inc
inc
dec
sbb
bnd
loopne
pop
test
xor
mov
scas
adc
mov
sbb
adc
scas
cwtl
and
mov
push
adc
push
bound
sub
orl
add
loop
aad
jno
cltd
repz
push
or
sub
dec
fcmovu
and
xor
mov
outsl
cs
pop
imul
mov
pop
lds
icebp
pop
pop
insb
mov
mov
jecxz
adc
lcall
fwait
jae
icebp
test
stos
adc
xchg
jg
push
cmpsl
jge
and
add
pop
push
popl
mov
in
dec
shll
lods
scas
xchg
add
pop
mov
sub
fwait
dec
cmp
sarl
xchg
mov
and
jg
pusha
and
cs
dec
mov
dec
xchg
add
subb
aas
aas
xchg
push
les
aad
shl
xchg
jne
mov
pop
push
mov
insl
aaa
dec
in
ret
or
pop
in
push
faddl
or
int
jo
push
pop
adc
push
push
out
cs
fmuls
ja
out
pop
push
pop
cld
test
rorl
mov
into
lds
pushf
out
test
stos
lcall
in
cs
cmp
rcrb
add
imul
push
sbb
or
fsubs
dec
cmp
fildll
push
xor
cmpl
and
add
push
insl
xlat
popa
push
popf
mov
addl
dec
xor
repnz
xchg
enter
xchg
adc
adc
scas
inc
stos
adc
lock
cmp
cmc
stos
push
pop
xchg
jbe
mov
mov
arpl
sub
jnp
pop
jle
jecxz
pop
adc
cli
ds
mov
flds
or
mov
int
bound
je
xor
stos
dec
mov
inc
vpsrld
pusha
push
pushf
sbb
xchg
sbb
cmc
sbb
push
es
mov
outsb
sub
mov
daa
cli
push
cwtl
mov
add
cmp
cli
dec
push
push
js
pop
xor
das
jmp
and
sbb
cmpsb
dec
pushf
lcall
sbbb
add
test
test
jg
repz
sarb
into
mov
fidivrl
mov
fcmovu
out
mov
jne
hlt
or
dec
cmp
mov
and
pushf
out
xchg
lods
xchg
ret
jns
add
das
cli
sub
or
stos
adc
popf
pop
scas
cmp
mov
stos
mov
mov
mov
repz
mov
mov
adc
sub
sbb
mov
adc
cli
mov
movsl
out
in
shll
or
cmp
jmp
stc
adc
add
inc
psraw
mov
stos
in
mov
daa
mov
in
mov
std
dec
movsb
mov
nop
xchg
das
xchg
push
mov
inc
fwait
sbb
add
xchg
mov
imul
dec
ja
jmp
mov
jle
mov
popf
shll
les
add
sbb
cmp
push
fwait
in
dec
mov
js
jns
pop
sbb
int
mov
sahf
mov
inc
jb
decb
inc
dec
xchg
rol
pop
lds
jl,pn
loop
test
mov
fisttps
lods
dec
pop
je
push
pop
inc
cs
pop
lea
pop
add
xchg
filds
cmp
pop
inc
and
mull
mov
lahf
sar
repz
pop
jmp
inc
push
imul
loopne
add
add
cmp
or
and
cmp
jecxz
cs
fisttpl
fistpll
push
jecxz
push
mov
cmc
stos
jne
inc
jnp
push
repnz
and
sub
adc
sahf
lahf
je
enter
inc
scas
xor
fs
jmp
insl
mov
and
sti
shl
loope
cwtl
pop
dec
out
cmp
fs
inc
xor
mov
inc
adc
jnp
dec
adc
imul
add
jp
push
pusha
sbb
jp
imulb
inc
leave
cmp
lock
ret
je
inc
sub
jge
inc
stos
adc
ss
push
xor
adc
cmp
popa
mov
lcall
mov
fnstsw
pop
xor
mov
mov
xchg
negb
or
inc
mov
cmp
inc
stos
jecxz
xchg
clc
xchg
adc
pop
sbb
mov
ret
mov
das
ficoms
pop
adc
add
or
out
sbb
cwtl
mov
int
cmp
cmpsl
push
mov
dec
fdivrl
into
ret
xchg
cmp
and
cmp
cltd
fldl
inc
sbb
in
mov
sbb
sbb
mov
cmp
scas
lahf
push
gs
icebp
shll
insb
adc
mov
jg
add
in
inc
sub
xchg
call
push
dec
test
adc
mov
pop
ds
repz
cmpsb
jp
and
mov
pop
and
or
mov
imul
arpl
cmp
cltd
mov
clc
lea
sbb
bound
popf
push
xchg
jae
jecxz
push
ret
cmp
enter
mov
sub
ss
sub
cmpsl
mov
inc
enter
loope
lret
fwait
movsb
cmp
mov
shl
xchg
les
dec
inc
fidivs
and
out
stos
mov
xor
pop
ljmp
mov
xchg
xor
push
mov
rcll
aam
mov
in
cmp
hlt
cmp
lea
loop
fwait
xorb
sar
adcl
sub
mov
adc
rcll
inc
sbb
dec
inc
lea
sub
pop
mov
in
sbb
ret
fsubr
mov
loopne
les
arpl
jae
hlt
add
sub
and
mov
inc
cwtl
xor
stc
shll
cwtl
pop
call
popf
and
and
out
test
add
lret
ja
adc
inc
gs
jae
push
hlt
sahf
insb
das
int3
int3
psubsw
fwait
popf
es
dec
jecxz
adc
mov
dec
fs
mov
push
jnp
or
orl
fnstcw
mov
jo
stc
xor
clc
les
add
push
movsb
lcall
test
test
das
testb
pop
fmull
xchg
sub
xor
sub
cs
and
or
adc
imulb
sbb
inc
jne
push
push
das
sub
ffreep
adc
pop
jmp
jl
pop
cwtl
movsl
lcall
mov
dec
shll
jne
scas
push
cwtl
ror
xchg
lock
dec
mov
call
push
es
pop
push
loop
je
scas
sub
insl
inc
lahf
push
xchg
mov
fmull
scas
jae
push
push
repz
and
xchg
dec
rcr
sti
js
push
push
test
sti
mov
iret
sahf
and
mov
aam
andl
cmp
mov
sbb
lods
js
dec
loope
pop
inc
sbb
inc
fcmovbe
sbb
add
cmp
jp
push
idiv
jecxz
mov
hlt
add
bound
and
into
daa
cld
arpl
nop
andl
sete
jb
std
jg
ret
or
sbb
or
movl
xchg
mov
xchg
and
xor
jge
shlb
mov
insb
loope
in
shl
fimull
subb
in
add
subb
inc
cli
or
cwtl
jp
imul
jg
sub
ja
cmpsl
iret
shll
or
out
mov
mov
jg
sbb
sbb
call
dec
xor
push
mov
adcb
push
sbb
dec
orb
dec
mov
je
into
dec
cmp
and
push
gs
jns
shlb
out
adc
fimull
fsubrs
push
subb
mov
mov
ss
mov
gs
imul
stos
loopne
push
xor
mov
pop
mov
xchg
subl
ljmp
sbb
cmpsl
inc
cmpsb
scas
cli
lods
addr16
in
push
test
fidivrl
out
sub
loopne
movl
nop
mov
mov
or
or
or
sahf
fdivr
mov
repz
xchg
push
cmp
jmp
insb
rcrl
andb
jle
or
xor
or
loop
mov
add
lret
jne
fists
jecxz
cmc
inc
pop
sub
movsb
adc
push
retw
iret
out
bound
add
js
mov
or
lret
xchg
out
lret
mov
dec
jge
jle
mov
push
jg
and
push
xchg
vmwrite
clc
push
jbe
out
stos
inc
leave
test
xlat
push
push
sti
sbb
xor
es
mov
add
imul
outsb
lret
xor
loope
movsl
test
push
push
into
mov
xchg
ja
loop
out
jne
or
push
mov
adc
xchg
mov
ja
and
dec
inc
stc
das
out
hlt
adc
repnz
call
enter
push
or
das
test
adc
cmp
push
call
sbb
leave
cmp
xchg
int3
sarb
mov
mov
repz
das
leave
test
das
jne
push
repnz
mov
imulb
cli
aaa
inc
or
and
add
shrl
call
sub
pusha
jbe
mov
test
sbb
sub
or
mov
sub
sub
sbb
das
gs
iret
cmp
ljmp
xchg
adc
or
jecxz
aas
mov
or
xlat
push
lods
repnz
jl
jo
aam
pop
gs
out
out
mov
inc
inc
js
cmp
rcll
mov
in
addr16
into
cmpsl
mov
mov
in
sub
sub
outsb
jle
insl
loop
das
ret
sub
aaa
mov
mov
push
push
mov
aad
lret
rolb
movsl
xchg
test
mov
adc
mov
adc
xor
xor
in
xchg
mov
push
dec
push
cmp
mov
xor
test
xchg
mov
aam
movsb
cs
xchg
push
add
sbb
cltd
mov
inc
xchg
repz
push
jecxz
cmpsb
jge
push
dec
and
sti
mov
push
in
aaa
es
mov
imul
jge
out
jmp
xor
bound
movsl
int3
shr
sub
mov
cmp
sub
push
xor
mov
adc
mov
fcmovbe
std
sbbl
push
imul
lds
into
jmp
sub
cs
movsl
and
push
pushf
cmp
add
push
mov
lcall
jle
push
lret
dec
ds
push
mov
popa
std
dec
mov
add
cwtl
test
inc
or
and
inc
out
or
dec
or
aam
or
cld
dec
test
mov
cs
repz
rdmsr
popa
stc
subb
inc
negb
sbb
negb
stos
pop
push
test
imull
sub
jmp
into
daa
and
std
es
jnp
mov
out
call
call
adc
mov
fdivr
rorl
or
ljmp
xchg
ja
ljmp
push
mov
out
sbb
loop
fimull
test
dec
sbb
insb
in
and
mov
sbb
mov
or
mov
push
in
loop
or
sbb
adc
sub
mov
ljmp
lds
insl
mull
in
inc
ja
adc
jnp
push
xchg
cmp
sbb
fs
inc
adcl
sub
sar
add
dec
xchg
mov
movsb
cmp
sbb
fisttpll
pushf
and
int3
xor
and
aaa
ficompl
ret
nop
sti
sbb
mov
mov
sarb
mov
stos
loopne
test
das
adc
cmp
pushf
dec
lcall
dec
inc
lods
xchg
mov
jge
aas
push
lret
decl
sub
cli
mov
lods
adc
dec
adc
sbb
lea
data16
and
mov
movsl
aad
cmp
leave
stos
and
push
cwtl
loope
or
sbb
fldt
jno
or
jbe
and
lea
add
xchg
mov
stos
mov
inc
dec
addr16
aaa
adc
jle
inc
test
imul
mov
das
rcrl
mov
mov
test
pop
push
jnp
mov
stc
lret
pause
pop
leave
xor
sahf
or
mov
insb
add
jno
or
stos
sbb
xor
cmp
sbb
testl
add
add
dec
inc
data16
sub
outsb
fsubr
or
sub
dec
dec
or
push
mov
sbb
adc
ljmp
inc
mov
loopne
pop
xor
hlt
adc
adcl
inc
fsubrl
mov
mov
jnp
lods
stos
jbe
pop
adc
cmp
mov
in
sbbb
inc
push
repnz
jp
mov
dec
hlt
xchg
jne
and
jl
mov
shll
pop
mov
sahf
iret
mov
test
cmp
in
or
adc
sti
fisttpl
jae
and
jnp
inc
pushf
ret
lar
jmp
fldenv
daa
sbb
popa
or
adc
mov
std
out
sub
and
icebp
popf
pop
test
fsubrs
xor
sti
jmp
pop
adc
dec
out
adc
in
push
jae
push
fwait
out
jge
mov
mov
stos
mov
mov
ja
jnp
pusha
and
insl
or
and
int
push
leave
pop
xlat
jmp
aam
jl
test
cmc
sbb
adc
js
repnz
inc
je
sahf
inc
xchg
mov
xor
sbb
cmp
std
mov
inc
xchg
cld
daa
push
sbb
psllw
test
and
cltd
fwait
inc
xchg
adc
sahf
pop
jmp
sub
mov
pop
cmp
xorl
lret
imul
mov
mov
jnp
mov
cmp
cmc
mov
sahf
clc
mov
icebp
add
mov
sub
sub
lods
ljmp
loope
ficomps
add
fstl
les
lods
and
out
push
cmp
push
pop
push
push
or
lods
and
aaa
or
add
dec
mov
push
sarl
jl
dec
jnp
inc
jmp
xchg
shll
cmp
jl
pop
lods
cld
push
in
in
xchg
iret
or
push
xor
push
ror
mov
or
cltd
inc
lahf
jp
cmpsl
stos
lahf
adc
sub
push
mov
jp
mov
push
in
jle
outsb
sub
sbb
test
xor
outsl
aam
imul
lods
inc
push
push
or
fucom
adc
test
aaa
xor
fistps
movsb
xor
popa
push
fnstsw
and
lcall
fists
jp
nop
scas
mov
or
mov
jg
inc
out
sub
dec
je
push
out
xchg
jg
cwtl
fldenv
pop
cmp
rol
add
testb
jne
pushf
ror
in
cmp
mov
push
test
dec
mov
dec
mov
outsl
jne
and
fcoms
sbb
push
out
sti
or
xchg
cmp
mov
jb
mov
xchg
sahf
xor
mov
cmp
test
cmp
outsb
loop
push
push
mov
push
pusha
mov
aas
jnp
fstpl
xchg
out
shrb
and
call
add
fldenv
inc
out
add
push
movsb
pop
sahf
jo
push
lret
push
cltd
nop
or
jbe
fcomps
pop
je
mov
jae
cli
insl
sbb
xchg
lahf
mov
jnp
pop
mov
mov
mov
loopne
or
call
pop
dec
cli
aaa
test
cmc
js
imul
xchg
inc
xor
push
leave
ret
pop
cmp
xchg
or
sbb
pop
adc
push
mov
dec
sbb
mov
jbe
stc
in
or
cmp
cld
inc
lret
insl
mov
fwait
inc
in
sub
lret
mov
dec
xlat
leave
sbb
jl
test
adc
test
mov
sub
stos
mov
sarb
sarl
testl
jbe
mov
inc
mov
mov
cmp
sbb
aad
jmp
jbe
movsb
pop
mov
mov
mov
lret
or
xchg
adc
scas
ss
mov
inc
mov
mov
mov
sbb
push
aad
lret
lods
jbe
cmpsb
pop
xor
inc
push
cmp
lret
mov
jnp
sarl
testl
jbe
mov
inc
mov
mov
cmp
sbb
aad
jmp
jbe
movsb
pop
mov
mov
mov
lret
or
xchg
adc
scas
ss
.byte
.byte
.byte
