push
call
ret
ret
sbb
mov
push
xchg
jnp
enter
ret
out
cmp
cmpsl
jne
push
push
cmp
or
push
xor
out
xor
movsl
jmp
jmp
dec
cld
gs
mov
int3
add
mov
add
movsl
mov
imul
inc
stos
pusha
cmp
sub
cmp
and
adc
sbb
xor
call
inc
cltd
pop
cmpb
xor
ret
leave
xchg
jo
mov
inc
test
lret
dec
inc
ljmp
or
mov
stc
stc
inc
ret
into
bound
lret
mov
cmp
js
mov
mov
fstpt
rcrb
test
xchg
jg
shll
mov
dec
mov
xchg
jle
aam
movd
stos
mov
les
xor
loope
push
in
lret
mov
mov
outsl
add
xchg
imul
mov
sbb
les
jle
lods
xor
cmp
cmp
mov
in
mov
pop
cmp
sbb
data16
pop
ret
ret
scas
add
adc
adc
xor
dec
icebp
adc
enter
jns
push
popa
xlat
call
popa
jne
or
das
iret
mov
out
adc
ficoml
js
push
sbb
adc
inc
adc
dec
stos
fwait
adc
in
sub
lock
mov
inc
data16
mov
and
pop
ret
cmp
sbb
sar
jg
pop
pop
mov
sbb
repnz
ja
test
or
jb
mov
adc
jnp
arpl
pop
aad
inc
jp
add
mov
mov
pop
push
in
inc
fidivs
call
sub
lods
add
jg
jg
dec
lods
incb
pop
add
sti
pop
mov
add
in
inc
in
sbb
lret
adc
xchg
call
pop
out
xor
pop
jle
divl
sub
jge
push
ljmp
or
jbe
iret
or
nop
mov
ljmp
or
das
into
mov
in
scas
jg
push
xchg
negb
or
aad
jb
clc
cmp
mov
repz
xor
dec
out
xor
rclb
lahf
mov
mov
mov
pop
clc
or
mov
dec
cltd
rcll
mov
insb
test
paddusb
data16
cld
mov
loope
shrb
cli
inc
adc
popf
add
xchg
adc
mov
or
xor
dec
mov
pop
ret
pop
adc
fimull
inc
mov
sbb
ds
sbb
pop
das
in
aas
push
pop
xor
pop
test
decb
lahf
out
push
pop
fildll
cltd
xchg
stos
pusha
mov
idiv
xchg
daa
push
xchg
data16
adc
imul
inc
mov
int
jnp
shll
xor
xor
sahf
fs
or
xchg
add
dec
sbb
les
and
cmpsb
mov
adc
mov
cmp
xchg
add
push
lcall
push
cmpsl
and
sbb
jne
xor
int3
xchg
paddsb
sbb
rclb
in
or
xchg
mov
cmp
mov
insl
loop
pop
adc
sbb
pop
xor
mull
stc
es
pushf
cmp
pop
and
inc
jb
aas
push
xor
jnp
add
inc
mov
loope
stos
mov
lods
dec
lahf
mov
out
sahf
jle
cmp
adc
outsb
into
and
mov
dec
xorl
cmc
lahf
pop
fdiv
jo
xor
and
pop
repz
outsb
std
jge
push
je
push
xlat
pop
int3
pop
and
add
fisttpl
lods
push
inc
aas
orb
mov
sbb
ja
pushf
pop
loope
cltd
inc
aad
cmp
sub
stc
jl
xchg
dec
push
sub
sub
int
aam
mov
into
jbe
adc
xchg
mov
xor
cltd
xchg
or
sbb
sub
repz
jbe
fisttps
dec
adc
loop
add
push
mov
xchg
sub
push
mov
dec
push
hlt
jmp
jge
divb
sbb
push
and
mov
push
das
es
sbb
xlat
imul
cmp
std
icebp
or
sahf
scas
andb
add
daa
out
jp
pop
xor
jo
imul
pop
fsts
cli
repnz
mov
mov
cld
mov
and
jns
jbe
fcmovu
sbb
jb
inc
cwtl
jge
inc
es
shrb
inc
and
or
bound
std
int
add
movsl
fmuls
unpcklps
leave
dec
rcrb
inc
je
sbb
les
xchg
das
nop
lods
daa
lcall
cld
pop
jle
das
jl
mov
inc
cmp
dec
fwait
cmp
inc
pop
fistl
mov
inc
les
test
and
popf
sahf
sahf
ja
hlt
inc
decb
sarl
int3
in
push
xchg
scas
and
xchg
cltd
int3
mov
adc
jg
push
inc
loop
loopne
mov
add
sub
mov
inc
lret
mov
push
das
fildl
mov
jmp
sbb
mov
sbb
rorb
fmul
lret
test
jg
test
sub
into
adc
inc
movsl
inc
std
addr16
dec
and
adc
cmp
out
mov
test
mov
push
push
pop
sarl
dec
push
movsl
mov
fistps
outsl
fldt
cmp
jb
fbld
iret
jle
lods
inc
mov
pop
stos
sbb
loopw
fwait
cmpsl
insb
sbb
repz
stos
sub
jl
push
add
ret
mov
repnz
test
out
lahf
xchg
adc
movsb
or
imul
lret
pop
iret
lods
jge
push
mov
movsl
mov
cld
test
out
stos
mov
or
dec
dec
in
push
jmp
fidivs
add
jg
push
and
and
xchg
popa
jge
mov
jmp
pop
mov
lds
add
inc
jbe
jle
dec
imul
into
push
cmp
dec
out
or
lea
or
test
hlt
cmp
fwait
mov
jge
enter
mov
lock
ucomiss
mov
pause
push
jmp
mov
pop
cmpsl
mov
aad
push
push
stos
xor
cmovg
lea
mov
das
mov
sbb
lahf
jbe
push
ja
repnz
hlt
mov
js
pop
add
jecxz
xchg
call
inc
fnstenv
cmpsl
and
sub
cltd
cwtl
fs
adc
repz
lret
pop
ljmp
mov
xchg
xlat
jae
loope
inc
imul
out
ljmp
pop
cld
push
mov
les
push
test
inc
inc
inc
xchg
fstps
flds
jg
loop
aas
daa
pop
ret
bound
test
add
or
xchg
fwait
loop
push
jle
jmp
push
push
scas
aam
pop
mov
mov
mov
test
test
and
sbb
push
adc
dec
cmc
sahf
aad
push
fiadds
daa
movsl
dec
xchg
pop
sub
inc
or
jmp
sub
stos
into
mov
xor
shrd
sub
jge
cmp
xor
jg
and
add
outsl
mov
mov
inc
cli
shlb
in
add
addb
in
dec
hlt
adc
in
pusha
mov
cli
xor
inc
mov
cli
mov
loopne
addb
mov
push
jbe
arpl
das
xchg
or
add
xchg
xor
mov
xchg
sbb
scas
clc
pop
mov
xchg
aas
jb
mov
and
cmp
pop
add
mov
movsb
ljmp
pop
mov
ret
push
xchg
rorb
dec
int3
jb
mov
xlat
daa
call
mov
jmp
sarl
sbb
mov
rcrl
inc
das
adc
and
cmp
pusha
pop
xor
inc
cli
scas
jl
jl
adc
pop
div
popf
movsb
push
sub
adc
mov
sub
lahf
sbb
sbb
or
icebp
ds
lods
sbb
je
hlt
les
jl
sarb
addb
inc
xor
lahf
xchg
jecxz
pop
ljmp
scas
out
ds
xchg
andl
pop
push
mov
push
pop
add
jmp
adc
loop
fcmovnu
inc
sahf
in
mov
xchg
in
or
xchg
and
cmpsl
cmc
or
cs
xor
fnstenv
sub
rolb
mov
daa
and
mov
mov
repz
cmc
mov
out
jne
dec
push
add
insl
sub
dec
and
push
dec
adc
cld
mov
or
dec
push
push
sbb
mov
in
mov
fisubrl
cli
loop
push
mov
mov
xchg
pushf
dec
inc
int3
adc
stos
sbb
mov
cld
push
roll
jp
fwait
leave
insb
icebp
stos
sti
inc
mov
test
pop
xchg
shlb
daa
in
iret
fisubrs
sbb
loopne
pop
test
xchg
dec
repz
mov
aam
xlat
inc
add
add
sub
iret
outsl
ffree
xor
mov
test
mov
xchg
iret
mov
mov
loope
lods
mov
rorl
add
inc
pop
outsl
push
in
jne
out
push
cmp
xchg
xor
push
dec
je
push
imul
add
out
pop
test
jnp
sar
dec
daa
mov
dec
jno
and
add
insb
lret
lahf
cltd
testl
xchg
arpl
push
ljmp
in
in
jbe
sbb
jge
mul
xchg
call
cmc
or
fimuls
out
push
pop
jl
out
in
sbb
bnd
gs
dec
push
ljmp
sbb
jno
xchg
std
aaa
mov
adc
push
push
or
cmp
and
pop
dec
addb
inc
xor
flds
fwait
xlat
xchg
dec
fdivl
pop
xlat
aad
mov
das
mov
inc
pop
add
fnstcw
cmp
stos
shl
inc
loope
add
sbb
incb
push
into
pop
jno
sub
sbb
inc
out
call
sbbb
aam
sbb
sub
inc
dec
sbbl
cmpsb
and
nop
mov
in
mov
pop
ds
cmp
add
mov
enter
shl
and
lahf
mov
mov
aas
sub
jg
jnp
add
aad
out
xor
pushf
clc
imul
sbb
cs
cmp
and
add
jns
adc
adc
cmp
cld
jecxz
sub
fdivrl
mov
jbe
sarl
sbb
inc
mov
mov
imul
outsl
and
jb
mov
js
div
inc
stos
int3
scas
in
add
bound
dec
test
xchg
movsb
popf
into
mov
imul
test
aam
movsl
pop
stos
fcom
inc
push
imul
adc
mov
inc
add
push
mov
icebp
mov
aaa
pop
pop
popf
imul
mov
lcall
cld
mov
js
pop
or
push
push
mov
jae
outsb
push
fmul
lds
mov
cmpsl
pop
in
enter
aam
or
mov
push
rcrl
sbb
add
adc
pop
in
les
cmpsl
cld
inc
pusha
ret
stc
enter
adc
dec
rcll
je
pmullw
push
psrlw
mov
push
das
push
ljmp
xchg
jp
inc
mov
dec
inc
popf
adc
jb
ss
and
or
sbb
xor
andl
sbb
sub
push
adcl
inc
cmp
rclb
sbb
es
or
adc
dec
adc
lcall
insl
or
sub
movsl
lds
mov
fisttps
ret
lea
pop
jo
fists
and
je
jmp
cs
push
xchg
mov
add
sti
mov
xchg
dec
mov
int3
sub
stc
and
jl
nop
push
sbb
add
dec
out
add
xchg
sahf
xor
or
jl
jmp
imul
cmpl
xchg
ds
sarl
mov
inc
call
out
inc
cltd
adc
lahf
xor
cmp
imul
je
mov
mov
sbb
cmpsb
dec
sub
out
imul
add
ss
and
mov
sbb
push
mov
sahf
fisubrl
out
ljmp
jnp
sub
or
test
subb
ret
mov
iret
movsb
rorb
pop
aas
or
fiaddl
jnp
pop
out
jae
mov
xor
xchg
es
inc
in
add
mov
mov
pop
mov
mov
pusha
idivl
repnz
aad
dec
mov
or
scas
mov
in
leave
dec
and
pop
mov
mov
mov
test
jge
lods
lods
push
mov
mov
cmc
or
mov
mov
pushf
jns
fistpll
mov
call
leave
pop
mov
in
jecxz
dec
dec
dec
mov
ja
loopne
pusha
sub
daa
mov
int3
out
sub
cmpsb
lret
push
aas
movsb
mov
dec
movsb
jge
nop
aas
pop
jno
lret
jl
aas
mov
pop
imul
pop
enter
dec
int
aas
out
xor
rcll
xlat
mov
sbb
inc
xchg
mov
sub
cmp
repz
push
mov
out
stc
ss
ja
repnz
ficompl
mov
cmp
aaa
and
jb
pop
mov
popa
and
lcall
add
in
mov
fldcw
xchg
mov
xchg
mov
aad
push
push
push
cwtl
mov
in
fs
lahf
jno
dec
sbbl
adc
cld
mov
dec
sub
dec
inc
fmul
out
ds
xor
inc
push
sbb
jb
jnp
inc
aas
push
mov
inc
or
xchg
jge
cmp
clc
stc
call
xchg
sbb
std
add
cmp
xor
adc
mov
cwtl
mov
les
xor
arpl
pop
or
jne
mov
and
cmpsl
scas
dec
stc
and
in
fcoml
dec
sbb
test
rol
adc
mov
jmp
mov
mov
cmp
scas
fisttpll
sub
and
loope
jb
jl
js
rclb
js
pop
das
fbld
xchg
sbb
mov
sbb
in
cmp
xchg
mov
sarl
dec
int
jge
sub
push
inc
dec
aaa
add
ret
shll
xor
jbe
xchg
pop
mov
mov
push
and
jnp
int
push
xor
mov
xor
out
ja
repnz
jl
cltd
arpl
jl
icebp
mov
out
cld
dec
jae
push
rcll
jg
xchg
cmp
mov
out
pop
daa
mov
add
sahf
mov
xchg
insl
loopne
pop
enter
test
jecxz
inc
out
lahf
push
mov
scas
daa
cmc
call
cli
mov
pop
push
clc
cmpsl
daa
dec
xchg
lahf
outsb
pop
ret
les
pop
mov
jecxz
dec
insb
dec
scas
es
jl
montmul
cmpsb
js
and
dec
daa
jbe
dec
mov
jmp
aad
arpl
fiadds
cld
inc
es
push
stc
icebp
xchg
inc
mov
dec
int
sbb
ficompl
repnz
inc
ss
jl
js
mov
stos
xor
int
iret
test
cwtl
out
and
insl
sub
leave
xlat
lret
push
lods
in
mov
gs
test
pop
mov
sahf
push
jbe
sbb
mov
imul
in
repnz
cli
and
xchg
jmp
test
scas
xchg
dec
in
in
cmp
pop
stc
outsb
loop
fxch
pop
jl
fdivrl
mov
movsl
loopne
inc
push
xor
pop
mov
jg
pusha
cmp
mov
xchg
jmp
push
mov
dec
mov
lahf
loope
or
fisubl
dec
divl
movsl
add
mov
cmpsl
fists
mov
repz
pop
jnp
mov
das
jle
cmp
insl
in
cmpsl
loope
jne
jb
and
out
mov
lea
pop
dec
sbb
stc
dec
aam
sarl
call
out
test
xor
sbb
ret
rolb
mov
mov
mov
push
mov
out
add
loope
daa
cmp
pop
loopne
sub
xor
mov
test
cmp
rolb
in
mov
stc
aas
cmp
inc
mov
les
dec
lcall
test
push
aas
fdivl
mov
jo
dec
mov
mov
sarb
adc
pop
jbe
mov
adc
inc
fnstsw
and
dec
sbb
mov
and
pop
jbe
test
loopne
lcall
lods
fdivr
and
jae
push
mov
xchg
stos
inc
out
xchg
and
out
jnp
shll
leave
test
xchg
inc
das
dec
cmpsl
in
mov
movb
adc
pop
pushf
or
cmp
or
ds
sbb
dec
dec
mov
sbbl
fsubrp
ror
je
rorb
jne
or
fdivrs
hlt
add
lahf
sti
xchg
in
mov
or
jp
xchg
rclb
stos
xchg
cmp
call
push
inc
xchg
inc
adc
nop
jl
fwait
andl
push
adc
arpl
sub
cwtl
xchg
scas
inc
ret
dec
lods
fwait
push
or
push
adc
rcrb
cmp
sub
jl
in
test
mov
or
aas
pop
shll
fistl
jno
clc
jle
lcall
mov
scas
jne
fdiv
adc
loop
in
sub
pusha
nop
into
xchg
and
cmp
mov
dec
and
lcall
or
daa
imul
add
jo
and
push
or
cmp
cmp
in
add
into
push
add
sub
mov
pop
mov
xor
stc
add
das
repz
sub
and
mov
fidivrl
add
lock
add
and
push
dec
daa
dec
and
push
mov
inc
out
dec
insb
fmuls
mov
xchg
inc
push
inc
cmpsb
out
sbb
shlb
mov
in
push
jmp
cmp
mov
jle
push
aaa
std
sbb
rorl
cmp
out
lahf
sahf
lods
xchg
in
fadds
mov
cmp
out
or
pushf
arpl
xor
popa
xchg
lods
fisubrs
pop
pop
and
xchg
sbb
lea
mov
dec
idivb
add
push
pop
dec
into
sub
push
out
xchg
mov
mov
sbb
mov
loope
mov
dec
rorl
push
movswl
loopne
and
aaa
jl
mov
fldl
mov
ret
mov
sub
fisubl
aas
or
inc
in
or
fiadds
stos
or
adcl
sarb
dec
out
inc
imul
enter
enter
push
inc
pop
inc
adc
addr16
or
dec
lods
sub
xlat
adc
iret
pop
jb
mov
out
and
push
sub
xchg
jl
jmp
hlt
clc
sbb
aam
xchg
lret
push
sarb
cmpsb
mov
xor
clc
mov
mov
pop
out
mov
cwtl
int3
or
inc
lods
les
pop
lcall
xchg
jge
push
out
push
push
inc
mov
sub
inc
mov
bound
mov
aam
lods
je
lods
sbb
xor
and
push
push
mov
cmc
or
adc
fsubs
cmp
inc
loopne
jecxz
jne
push
das
xor
push
loop
stc
add
add
push
mov
outsb
jae
insl
scas
add
loope
ret
dec
inc
jecxz
push
test
ljmp
dec
sbb
and
pop
cltd
cmp
mov
jmp
test
mov
push
xchg
xor
stos
scas
mov
test
addr16
out
push
pop
sbb
leave
add
pushf
int
mov
xor
add
sbbb
lock
insl
jnp
roll
sub
xchg
stos
sbb
sbb
das
cmp
xchg
sbb
rolb
outsb
xchg
int
dec
cmp
fsub
jmp
push
inc
dec
xchg
dec
outsl
mov
jge
cmp
mov
mov
imul
test
lods
push
add
dec
mov
nop
ret
stc
test
lahf
lds
mov
lods
lds
ljmp
popa
sbb
xchg
sahf
pop
stos
mov
insb
out
lods
and
mov
add
push
jns
push
ret
xor
movsb
sbb
mov
movsl
xor
daa
fcoml
add
lret
int
push
mov
cmp
adc
pop
adc
fbstp
out
scas
sbb
outsl
out
pop
or
lods
mov
jne
cli
scas
mov
jmp
or
dec
arpl
cli
daa
xor
mov
imul
add
imul
lcall
setbe
adc
sbb
mov
cli
mov
lods
xchg
iret
pop
cmp
aad
int3
mov
push
sub
push
mov
cmp
test
mov
xor
lods
int
sahf
inc
add
or
sub
push
mov
in
test
outsl
test
dec
pop
enter
push
push
dec
mov
mov
sahf
cmc
test
cs
push
and
push
adc
mov
mov
mov
imul
cltd
or
or
out
and
adc
data16
mov
or
sbb
stos
iret
xor
lods
cli
pushw
fdivl
push
fs
pop
mov
test
mulb
dec
jae
movsb
sarb
int3
xchg
jne
xchg
fdivs
add
pop
out
mov
je
add
or
pop
jmp
mov
popa
int
lcall
xlat
lods
xor
mov
mov
cmpsl
enter
push
or
mov
cmpsl
fstl
or
arpl
scas
movsb
mov
je
cmpsb
jle
dec
adc
sbb
insl
sub
jo
jle
mov
aam
cmp
sbb
fidivrl
mov
xchg
sub
mov
xchg
xchg
fsub
cwtl
inc
mov
and
fistps
push
adc
cld
add
adc
dec
and
mov
xchg
insl
mov
pop
inc
pop
dec
pop
jno
sub
mov
xlat
daa
adc
push
shll
aam
stos
xor
lods
mov
sbb
pop
sbb
push
pop
shlb
cmp
xor
js
cmpsl
into
pushf
daa
inc
mov
in
and
movsl
js
cld
notl
ja
std
call
and
dec
repnz
dec
inc
mov
int
test
hlt
mov
in
cmpsl
into
push
jcxz
and
test
mov
repz
cmpsb
cld
jle
insb
xchg
fstp
mov
das
add
cmpsb
pop
mov
mov
jnp
std
cli
stos
lret
or
mov
jp
int3
xor
or
mov
sbbl
and
push
std
mov
into
jae
fdivs
mulb
das
test
push
int3
or
mov
mov
data16
test
scas
or
imulb
ret
outsb
cmp
sbb
ficompl
mov
popa
cmpps
lods
loop
std
or
or
lds
andb
cmp
mov
adc
loope
cmp
aas
mov
add
cmc
xchg
push
out
mov
xchg
stos
add
xor
xchg
jl
rorb
cmpb
push
adc
test
mov
je
pop
cmpl
jmp
mov
sub
adc
xlat
cmp
jnp
cmpsb
outsb
out
dec
jl
ret
ds
cli
shrb
leave
dec
or
jl
sahf
icebp
xchg
test
or
push
mov
inc
aad
test
cwtl
clc
xchg
testb
mov
cmc
aaa
addb
lret
subb
jmp
cli
inc
test
gs
test
dec
sbb
out
shll
or
das
add
xor
popf
imulb
xchg
ja
add
jg
sbb
sub
aaa
das
sbb
data16
adc
mov
pop
fisttps
lea
mov
adc
xor
xorb
pop
sahf
lahf
inc
bound
or
imul
in
xchg
jg
and
or
dec
aas
push
adc
lods
dec
lret
dec
inc
les
mov
divb
shrl
js
xchg
icebp
jge
test
dec
xlat
sbb
jl
and
inc
clc
pop
and
mov
and
dec
xchg
mov
nop
inc
pop
cmp
loopne
fidivs
aas
sbb
js
push
pop
mov
js
or
sub
or
in
mov
ss
pop
dec
test
dec
ds
in
or
mov
push
lock
ret
push
sub
jg
decb
dec
das
mov
sbb
adc
ja
cmp
arpl
nop
stos
out
and
sub
cltd
mov
jg
push
or
xchg
fidivs
jbe
pop
mov
rcll
add
or
nop
sub
mov
push
mov
xor
fists
pop
push
clc
data16
cltd
cmc
mov
dec
das
lock
ret
and
sarb
cltd
push
push
or
sub
test
mov
lock
fisubrs
or
jb
mov
sahf
icebp
inc
add
push
lock
out
rorb
dec
add
dec
xchg
xchg
inc
push
mov
sub
ret
mov
out
sbb
cmpsb
ficompl
orl
or
data16
push
add
imul
arpl
cmp
mov
les
adcb
lods
insb
out
fimuls
mov
imul
ljmp
sub
add
sbb
mov
sar
adc
popf
push
dec
pop
adc
sbb
and
sbb
pop
and
ja
cli
cltd
sbb
rolb
stos
test
cmp
pop
out
push
daa
lock
mov
and
test
movsl
in
push
pop
mov
shll
or
insb
jmp
cmp
icebp
stos
push
mov
movsb
scas
sbb
pop
fnsave
cmc
sti
lret
mov
xor
outsl
jecxz
xor
sbb
insl
pop
cli
dec
inc
dec
xchg
mov
cwtl
lods
jne
mov
into
inc
mov
lret
dec
push
jecxz
stos
dec
shlb
fcmovnb
jnp
jecxz
in
add
js
jae
push
rorl
pop
xchg
jmp
lret
add
notb
rcrb
mov
aas
outsb
cmp
fmul
ret
jmp
loop
ror
push
pop
or
dec
daa
adc
lods
test
ljmp
sti
aam
mov
cmpb
adc
cmc
push
jnp
mov
testb
in
add
xchg
test
movsb
gs
shll
jp
push
push
push
pop
lds
cmc
cmpsb
rcrb
test
pop
fs
shr
ljmp
bound
or
xchg
jmp
pop
mov
test
pop
adc
xor
paddusw
test
cltd
jne
xchg
lds
loop
ds
ja
fidivs
mov
jbe
jmp
mov
loop
lock
xor
imul
adc
mov
mov
test
xchg
pop
and
pushf
jno
arpl
fnstsw
or
pop
out
cmp
fsubl
imul
stos
dec
cmp
lcall
popa
and
repz
dec
mov
icebp
gs
fwait
jmp
movsl
inc
and
lock
dec
jno
or
movsb
inc
jl
movsb
pop
dec
inc
inc
lods
mov
jae
cmp
sbb
loopne
dec
out
jle
daa
mov
sbb
jge
scas
andb
movsb
fldl
test
sub
filds
and
xlat
pop
xchg
aad
lds
lret
and
inc
daa
cli
sbb
mov
leave
repnz
jmp
loopne
mov
or
into
inc
lea
jnp
or
idivb
scas
inc
lret
jns
fisubrs
jle
and
xor
scas
pop
mov
daa
mov
cli
pushl
cmp
adc
sbb
sub
outsb
leave
fisubrs
ret
push
mov
pop
les
mov
adc
imul
cmp
sbb
jae
icebp
cld
lret
or
sbb
pop
adc
inc
sbb
inc
adc
push
xchg
xchg
popf
lcall
fsubl
dec
xor
cli
cld
andl
cmp
push
imull
arpl
or
and
pop
push
inc
cwtl
rcrb
adc
rcr
pop
add
cmp
or
mov
ret
sahf
xchg
push
jecxz
cmp
nop
out
mov
fst
or
jl
mov
nop
fisubrl
mov
jb
out
mov
popf
xchg
jecxz
outsl
aas
or
sub
loopne
jmp
and
jb
arpl
xchg
imulb
pop
fs
arpl
fchs
mov
iret
lds
push
and
add
jmp
ds
scas
stos
fstpl
adc
shll
movsl
sbb
jnp
inc
stc
decb
popa
inc
in
loop
frstor
dec
mov
fwait
mov
popf
xchg
mull
pushf
int
xor
sub
hlt
jle
xchg
test
std
push
jp
mov
cmp
cmp
stc
cmc
pop
mov
push
sbb
lds
dec
rcrb
push
cmp
gs
xchg
ja
xchg
mov
and
mov
iret
dec
out
loop
into
mov
cmpsl
cmpsb
adc
popf
mov
aam
mov
cs
inc
call
sti
xor
xlat
push
mov
decl
pop
jmp
repnz
xchg
daa
adc
push
or
jae
fs
repz
inc
xchg
adc
repnz
push
cmpb
jno
cmc
rclb
add
mov
mov
xchg
test
jl
addr16
sbb
push
aad
add
bound
jg
mov
mov
push
mov
xor
cli
dec
inc
and
stos
xor
aad
jge
loope
stos
test
je
or
mov
push
add
popf
popf
add
sbb
and
mov
pop
ret
mov
fwait
pop
repnz
outsb
ss
in
or
aam
push
pop
ja
lods
jnp
cltd
dec
clc
jl
mov
enter
stos
mov
call
xor
loopne
sbb
lret
loope
js
lahf
inc
push
push
movsl
nop
mov
sub
add
orl
outsb
jle
dec
add
sub
cmp
insl
jl
enter
dec
gs
mov
in
leave
into
rorl
push
repnz
insb
mov
sbb
or
jecxz
mov
sbb
jno
dec
je
stos
xor
into
movsl
push
mov
add
fistpl
dec
jmp
mov
mov
push
mov
outsb
jmp
scas
mov
repz
inc
bound
imul
std
and
ja
sbb
rol
xchg
fnsave
push
mov
cmp
aam
ljmp
mov
ja
ja
and
fnstcw
int
and
or
mov
xchg
push
fdivl
pop
lret
sub
add
je
lods
leave
and
orb
ret
test
mov
xor
push
lcall
mov
nop
lcall
in
fsub
andl
icebp
jae
pop
pop
cmp
jns
iret
and
cld
sub
in
lcall
pop
ficoms
aas
add
sub
pushl
mov
mov
hlt
sbb
add
jle
lock
scas
outsb
cmp
mov
sbb
cmp
mov
stc
xchg
push
sub
jne
fiaddl
popf
mov
lret
sbb
into
movsl
fmulp
xorl
xor
daa
loope
dec
pop
loopne
adc
xor
pop
xor
ret
stc
out
fcoms
or
cmp
mov
cwtl
dec
arpl
mov
inc
and
jp
adc
jb
mov
mov
jne
xchg
push
mov
and
stc
sti
cmp
imul
ds
cmpsl
xchg
andl
ss
sbb
mov
aad
lcall
stc
adc
cld
add
in
cmp
adc
mov
jecxz
adc
loopne
pushf
icebp
call
loope
jno
xchg
mov
shr
rorl
gs
xchg
jmp
in
in
pop
jge
xorb
out
mov
lret
hlt
fidivrl
mov
cmp
in
dec
imul
shrl
xor
jle
rclb
ja
inc
push
cmp
mov
and
test
sbb
dec
test
das
sub
mov
or
int
cmp
inc
mov
sub
lods
movsl
addb
xchg
rolb
dec
jae
or
sarb
xchg
jge
imul
push
push
adc
and
xor
cmpb
inc
movsb
sbb
pop
xchg
sti
clc
mov
int
pop
push
stos
aaa
aad
je
shll
dec
or
dec
in
jl
std
sti
push
and
loope
push
mov
subb
idivl
adc
jecxz
pop
and
xorb
movsl
mov
or
cmp
mov
dec
test
mov
lret
inc
or
push
sbbl
inc
les
add
xchg
dec
jge
aas
pop
shll
jb
pop
mov
lahf
xchg
add
rolb
push
mov
shlb
dec
repz
or
inc
mov
popa
addr16
push
add
cs
pushf
out
cmp
call
sub
sbb
xor
mov
or
imul
shll
jne
dec
sub
sbb
or
aas
sbb
fnstenv
pop
in
adcl
aam
shll
cmp
aaa
and
jle
fmuls
rolb
mov
push
push
shll
push
pavgb
jb
faddl
push
xor
arpl
mov
sarb
add
cmp
jae
inc
jbe
outsb
jge
and
xor
mov
shrb
push
arpl
mov
rcl
sbb
push
pushl
cmp
daa
push
sbb
dec
add
outsl
or
push
sbb
adc
fs
cld
jge
inc
dec
shll
leave
gs
xor
push
movsl
gs
sbb
fsubs
and
cld
ror
sti
sub
test
mov
mov
xor
int3
mov
jp
mov
adc
mov
insl
stos
addr16
inc
shll
test
mov
aas
outsb
jne
popf
sub
push
bound
stc
mov
adc
cmpsb
and
sub
aam
gs
lea
jmp
repnz
xchg
jle
mov
xor
add
dec
daa
idivb
pop
cld
or
or
shrb
into
xchg
ror
mov
jo
mov
mov
and
icebp
mov
in
ja
jnp
fstps
mov
aaa
xor
mov
lods
cld
push
add
insb
mov
fs
out
fdivs
scas
arpl
mov
xchg
push
adc
arpl
adcl
sbb
inc
lahf
arpl
inc
push
loop
push
setns
enter
divb
mov
adc
pop
aam
shll
sarb
mov
add
push
cmpsb
xchg
mov
mov
ror
stos
xor
mov
cs
or
stos
mov
test
push
shll
sub
sbb
sbb
sub
das
lods
stos
inc
jmp
aad
pop
popf
adc
push
ljmp
cld
cmp
xchg
in
fsubl
mov
xchg
inc
adc
cld
inc
aaa
sub
sarl
inc
inc
call
pop
xchg
xchg
add
xor
and
cmp
jmp
push
pop
and
pop
add
outsl
sbb
mov
popa
or
cmp
and
inc
jb
jae
adc
sub
cmc
mov
leave
sbb
test
mov
gs
test
xor
pop
adc
cmc
into
icebp
lcall
fmulp
inc
cmp
jmp
scas
push
popf
jmp
aam
or
lret
add
jne
mov
mov
cmpsb
adc
ja
mov
cmp
fwait
fwait
sub
je
push
xchg
aaa
pop
test
out
push
scas
dec
and
cmpl
cld
sbb
daa
mov
test
adc
lcall
mov
mov
push
xchg
sbb
sbb
inc
cmp
mov
testb
and
nop
repnz
int3
fistps
jl
cmc
jp
stc
popf
arpl
bound
call
mov
fists
push
test
mov
mov
jno
adc
loop
and
imul
adcl
ret
xchg
mov
adc
js
mov
xor
daa
sahf
incl
int3
aaa
shl
aad
in
movsl
add
mov
xchg
data16
idivb
in
dec
jp
xor
cltd
mov
mov
push
int3
fsubs
sbb
push
test
mov
std
je
add
push
or
rcr
jmp
popf
push
cmp
js
xchg
pop
pop
das
pop
lea
subb
test
xchg
push
pop
imull
push
jle
sbb
or
and
daa
ja
dec
sbb
std
jno
repnz
sahf
adc
jmp
cmp
lcall
push
inc
sub
mov
cmpsb
and
js
and
fs
mov
sub
add
fadds
fsubrp
or
cli
out
sub
jnp
and
mov
ror
mov
or
push
lcall
pop
idivl
jns
jmp
pop
jae
in
jecxz
repz
stos
mov
or
pop
stos
sbbl
insb
out
push
push
mov
sbb
dec
out
push
add
mov
push
movsb
push
and
pop
test
in
in
popa
xor
lds
lahf
sub
test
insl
movsl
cmp
dec
in
mov
mov
bswap
adc
cmp
pop
imul
aaa
test
scas
arpl
mov
imul
mov
data16
cmp
cld
push
mov
cmpsl
js
out
mov
stc
orl
inc
popf
cmp
add
jbe
inc
or
ljmp
mov
push
and
push
and
jle
pop
mov
aam
push
mov
pop
sarl
xchg
pop
add
cmpsl
mov
inc
imul
and
insl
mov
lods
stos
lock
sar
aam
xchg
xor
xor
jns
xor
dec
mov
nop
pop
mov
pop
gs
dec
cltd
jno
cmpsl
push
mov
cmpsl
mov
repnz
outsb
je
mov
add
pop
bound
loop
aad
lret
fwait
jbe
decb
add
inc
cmp
pop
dec
cmc
push
lock
jge
sub
bound
pushf
out
lods
jae
test
cmpsb
data16
mov
loop
or
fistpl
mov
ret
sub
xchg
dec
pop
in
inc
lahf
inc
push
fidivrl
and
psrad
hlt
scas
mov
aam
or
xor
dec
sub
pop
jg
push
pop
mov
inc
test
cltd
cmpsl
sahf
lods
in
sbbl
out
jp
shlb
jg
pop
add
cld
in
insb
add
jns
call
xchg
out
das
mov
cmp
sub
xchg
shlb
and
push
add
xchg
xchg
inc
sbb
outsb
inc
dec
les
cld
mov
cmp
rorb
loopne
cs
xor
cwtl
leave
push
pop
into
jo
mov
mov
cmp
sub
push
or
add
arpl
divl
pop
xchg
lret
loope
jp
jo
lret
stos
movsb
adc
addb
cmp
mov
add
inc
in
lret
push
stc
fadds
mov
add
sbb
shlb
jb
loopne
jg
fs
fcmovnb
pop
xchg
in
andl
enter
stc
imul
jl
out
mov
push
jge
jne
mov
bound
fs
jecxz
loop
pop
mov
ds
dec
mov
icebp
stc
ss
imul
aam
pop
popf
mov
aam
xor
outsb
and
jne
mov
leave
jle
int
xor
push
add
outsb
fcomps
test
dec
ret
imul
mov
das
mov
push
pop
jp
arpl
cltd
stos
aas
stos
mov
and
out
or
jecxz
lods
scas
rcrb
adc
ret
jl
cmp
aaa
fs
add
shlb
nop
inc
ss
push
out
jae
mov
shll
and
int3
sbbl
jecxz
mov
fimuls
sbb
dec
repnz
or
pop
loope
xchg
data16
or
mov
lret
dec
add
shll
xor
fcoml
push
ja
in
cmpsl
or
es
jns
repz
loop
mov
fcomps
mov
test
sub
shlb
sti
sarl
bound
push
stos
in
mov
ret
mov
in
insb
dec
xor
pop
int3
or
push
out
jne
movsb
add
mov
pop
adc
sbb
inc
neg
imul
popa
dec
inc
push
xor
rorl
in
sbb
and
aas
xchg
outsb
adc
xor
mov
sub
int
cmc
sbb
mov
ficoms
xchg
jne
loope
sti
pop
cld
mov
sbb
int3
dec
in
lock
push
nop
mov
push
or
add
mov
mov
dec
lods
pop
or
pop
rcll
xchg
adc
jle
adcb
mov
loop
mov
ret
and
mov
xchg
push
and
inc
daa
je
imul
cmp
adc
lea
sub
leave
adc
inc
dec
sbb
mov
subl
mov
mov
xor
out
inc
das
outsl
pop
stos
adc
push
push
cmp
and
and
int3
std
in
push
mov
inc
sbb
popa
divl
cmp
push
shr
sub
adc
and
fs
sub
add
jbe
mov
or
sub
push
xchg
jae
addr16
mov
mov
cmp
inc
cld
sbb
das
push
shll
dec
xor
aas
test
mov
lods
push
mov
pop
push
ljmp
pushf
enter
and
mov
addr16
mov
jle
mov
dec
les
loope
filds
je
mov
inc
sub
adc
push
sbb
inc
push
jmp
imul
inc
jbe
fs
in
mov
testl
pop
insb
scas
dec
fwait
mov
push
add
xchg
or
sbbl
scas
rorl
dec
xchg
xchg
scas
fs
in
jmp
ficoml
xor
mov
push
lods
fiadds
adc
or
cmpsb
mov
mov
movsl
and
dec
inc
push
sub
and
std
add
pop
xor
outsl
or
mov
push
pop
roll
add
jno
add
test
pop
jge
jbe
hlt
push
lock
rcl
push
imul
iret
pushf
xchg
jno
popf
cwtl
inc
cmpsl
je
loope
push
and
xchg
dec
sbb
sub
mov
cmp
pop
sbb
leave
addb
scas
test
xor
into
cmp
pop
jmp
add
pop
out
mov
test
mov
mov
in
and
mov
loopw
shll
jae
inc
faddl
test
in
mov
mov
mov
mov
aad
orb
popf
lods
call
imul
push
mov
hlt
scas
fnstsw
mov
dec
movsl
or
test
adc
lret
pop
dec
in
fadds
aam
sub
sbb
arpl
shl
mov
pop
sbb
loop
cmpsb
dec
push
in
mov
mov
pusha
int
sti
inc
lds
lret
jo
mov
push
mov
icebp
mov
jne
movsb
sub
ficomps
mull
inc
shll
out
inc
aaa
nop
xchg
sahf
or
jo
mov
mov
fsubrs
pop
push
pop
or
icebp
dec
mov
jo
loop
push
dec
idivl
daa
movsl
sarb
cltd
inc
dec
xchg
inc
mov
rolb
add
cmpsb
aaa
imul
loope
les
out
pusha
test
enter
inc
pop
movsb
add
mov
push
pop
and
insb
sub
mov
mov
cmp
cli
mov
jp
sbb
sbb
jle
lret
mov
xor
flds
and
mov
cwtl
or
cmp
mov
pop
mov
add
push
out
shl
aam
sbb
xlat
sarl
ret
lret
sbb
fldl
fwait
push
in
inc
mov
xor
inc
movsl
in
ja
stos
jo
push
std
repnz
lock
sbb
lds
ljmp
hlt
outsl
or
cmp
fs
and
sub
into
inc
popa
rolb
testb
fcmovnu
adc
inc
xchg
out
pop
sub
lahf
fmull
adc
jne
ljmp
inc
pop
mov
fcompp
mov
ret
sbb
add
push
mov
add
inc
enter
cmp
test
test
das
cli
or
scas
inc
adc
cmp
xor
cmpl
xor
pushf
dec
cmpsl
xor
mov
cmp
bound
mov
popa
fsubs
dec
pop
popf
push
loope
dec
movsb
cmpsb
jnp
mov
shll
cmp
adc
call
and
imul
roll
cmpb
lea
cltd
jno
mov
push
mov
mov
pop
add
out
mov
sub
idiv
sub
mov
jb
imull
jnp
aaa
jne
sahf
and
loope
ja
test
inc
aam
or
leave
xor
dec
lahf
sbb
xor
inc
jb
dec
stos
mov
mov
adc
rol
inc
jb
cmp
repz
in
and
mov
pop
adc
icebp
lret
pop
inc
lahf
lret
lods
or
aam
sub
and
mov
jmp
xchg
jb
mov
push
mov
repz
ss
push
subb
mov
add
jne
jno
add
push
mov
sbb
stos
cmpsb
jp
sub
xchg
ret
dec
push
fistpl
inc
and
fsubrl
repz
fldenv
pop
jmp
scas
stos
je
mov
into
shl
fstl
pop
cmp
add
pop
push
lret
jb
xchg
push
cli
arpl
mov
dec
inc
mov
arpl
daa
xchg
loopne
sub
mov
nop
adc
sarl
sti
adc
cmpsb
jg
dec
mov
xchg
cmpsb
vmovaps
fcomps
sti
and
or
xchg
mov
out
mov
clc
inc
inc
sub
sub
arpl
rcrl
sbb
cmpsl
movsl
jl
cmp
orl
loope
sub
scas
mov
fldcw
add
incb
xchg
xchg
jmp
inc
cltd
test
shrl
jno
out
repnz
test
fisttpl
cmpsl
mov
fidivl
xor
lahf
jp
jg
into
dec
sub
and
fmull
es
dec
repnz
mov
call
cltd
push
cmp
data16
mov
clc
and
push
fcmovb
lods
cmp
imull
push
jb
adc
dec
and
sbb
hlt
fisttps
popf
xchg
and
std
ret
imul
mov
pusha
xchg
daa
shrb
iret
jle
pop
push
subl
outsl
call
cmp
mov
out
out
stos
pushf
pop
cld
insb
adc
ficompl
ds
or
lcall
dec
mov
xabort
inc
ss
sbb
push
push
push
fisubrl
mov
sbb
sub
loope
inc
std
pop
loop
in
movsb
shl
les
sub
bts
sbbl
fbstp
out
movsl
std
aaa
sahf
push
sti
int
lods
cmp
mov
sarb
xor
addb
sbb
loope
and
mov
out
or
xor
mov
cmp
cmpsb
adc
call
iret
movw
mov
pop
cltd
and
and
test
test
lock
lcall
movsb
cmpsb
sbb
int3
loopne
add
jg
cmp
adc
aad
fnsave
push
push
movsl
lods
dec
fldcw
out
xchg
xchg
arpl
aaa
and
into
ret
xor
jnp
sti
push
adc
add
pop
cli
pop
arpl
pop
xchg
mov
add
sbb
sbbl
adc
inc
stc
adc
push
xchg
sbb
adc
adc
dec
dec
mov
stc
pushf
adc
insb
dec
pop
repz
adc
sar
lods
mov
call
or
adc
aas
std
cli
daa
mov
lahf
xchg
iret
dec
ret
dec
shlb
mov
or
mov
mov
adc
jg
mov
lcall
int
sbb
push
add
fdivs
adc
push
ss
add
xchg
imul
xchg
dec
sub
dec
dec
call
mov
into
jae
fs
xchg
int3
mov
adc
iret
xor
adc
jge
repz
xchg
arpl
and
pop
pop
or
stos
rorb
rolb
cmpl
or
adc
andb
test
mov
or
mov
push
iret
jb
and
repnz
orb
mov
lea
std
mov
scas
cs
lock
fwait
das
jns
xchg
inc
mov
jp
xor
pop
jge
mov
adc
and
add
fcoms
sub
ret
lret
jne
cmpl
sub
jbe
aas
mov
imul
or
dec
or
sbb
mov
mov
nop
lds
mov
cmp
fdivl
or
imul
mov
fistps
aad
pusha
pop
inc
or
sub
add
int
imul
enter
jbe
pop
xlat
xor
sbb
inc
mov
adc
jnp
jbe
xchg
add
mov
fdiv
punpcklwd
pushf
mov
push
push
loopne
hlt
sub
sahf
loop
int
jo
iret
outsb
subl
lods
or
aad
sbb
insl
dec
dec
mov
cmpsb
jnp
into
out
dec
mov
adc
outsl
or
lcall
xchg
in
cmp
mov
outsb
lret
push
mov
push
loope
jne
adcl
push
sub
mov
jg
punpcklbw
sti
ret
adc
divl
cmpsb
in
push
push
sub
jo
cmp
cmp
leave
or
fstpt
dec
or
jmp
cmpsb
xchg
xchg
test
sbb
cli
jne
or
sbb
aas
jnp
inc
or
xlat
mov
adc
ret
ss
add
rcr
push
scas
adc
sub
mov
push
arpl
xchg
in
and
insl
or
icebp
xchg
loope
mov
jecxz
out
adc
call
sahf
jno
shlb
and
xchg
push
scas
das
jle
movsl
sub
ret
sub
lcall
jmp
add
int3
std
adc
xor
add
sbb
sbb
mov
cmp
mov
pop
push
and
ja
shll
or
pop
jl
and
sbb
push
int3
add
mov
sbb
nop
mov
ds
cmpsb
sbb
ficoml
and
push
push
adc
mov
or
sahf
jmp
hlt
test
jbe
fldt
xor
outsl
push
or
adc
icebp
repnz
dec
push
std
mov
jl
in
push
push
pop
inc
cmp
pop
ret
outsl
sarb
out
pop
jnp
jnp
lcall
in
or
outsb
mov
loop
enter
and
dec
cmp
stos
das
popl
inc
incb
inc
mov
pop
outsb
dec
inc
outsl
les
test
or
mov
in
pop
adc
push
movsl
xlat
sub
mov
mov
push
jns
mov
adc
jno
daa
test
jmp
jp
sub
and
imul
pop
cmpsb
fsubs
mov
sbb
sub
xlat
dec
pop
mull
sub
cs
rcll
mov
cwtl
mov
scas
cli
lret
adc
sbb
insl
js
adc
xchg
sbb
jge
adc
push
jns
loope
jp
cmpsl
pusha
fisttpll
adc
in
popf
ret
or
jb
dec
xchg
ret
adc
das
sti
xor
jne
into
cmp
sahf
test
out
dec
push
xor
int3
hlt
mov
test
add
lahf
mov
leave
add
adc
scas
stc
xorl
jle
test
movsl
scas
sahf
loopne
cmpsl
aaa
jae
mov
add
daa
or
rcrb
xor
push
pop
xchg
imul
pushf
mov
mov
loopne
shlb
xor
inc
adc
std
in
outsb
or
push
scas
inc
testb
inc
xor
cmp
push
jae
push
rorl
test
shlb
xlat
jbe
jle
paddsw
lret
adc
jns
js
push
mov
adc
fildl
stos
push
mov
shrl
orb
dec
fisubl
or
cmp
arpl
xor
int
lods
ret
jmp
pushf
adcb
mov
stos
imul
jae
mov
int3
dec
sbb
mov
and
add
jb
mov
sbb
push
rorl
mov
mov
mov
out
push
cli
fsubrs
ret
xchg
add
les
stos
mov
jbe
sub
mov
aad
jmp
les
push
arpl
subl
cmp
ret
je
push
lock
insb
test
and
sbb
lret
and
inc
sarb
subl
divl
test
movsl
fmul
stos
call
adc
push
lock
adc
icebp
js
jns
rolb
repnz
imul
aad
adc
jmp
mov
pop
imull
ljmp
and
roll
jb
idivb
cltd
stos
push
mov
addr16
push
outsl
sbb
lret
mov
ret
and
push
mov
jne
in
mov
imul
cmc
int
mov
push
adc
xor
pop
dec
stc
movsb
fdivr
push
mov
push
sub
stos
cmp
call
pop
or
inc
inc
fnstcw
fs
cmpsl
jecxz
dec
out
push
dec
or
rcl
push
shrb
inc
mov
fs
inc
adc
stos
repnz
fidivl
add
leave
sub
aas
fs
xor
pop
inc
adc
aaa
push
jmp
cmp
push
outsb
inc
pop
mov
js
shlb
popa
inc
or
aam
test
lret
sbb
cltd
mov
push
add
sub
sbbb
inc
lea
jecxz
cmp
mov
shrw
sub
cmpsl
cld
lock
sbb
cmp
mov
call
dec
mov
push
scas
cmpsb
in
test
pop
push
pop
adc
jp
mov
loop
sub
cmp
xor
inc
hlt
adc
sbb
addb
dec
shll
jne
and
mov
adc
repnz
sub
ss
push
push
mov
leave
dec
or
mov
fimull
xchg
outsl
scas
aad
cmp
andl
mov
mov
outsl
add
jl
arpl
mov
cltd
or
sbb
fxch
aad
inc
fdivrs
pop
stc
nop
sti
adc
fbld
inc
xor
mov
xor
lods
cmpsb
call
jne
pop
rcll
repnz
stos
mov
jmp
mov
mov
mov
lahf
jb
and
cmpsl
fdivrs
mov
inc
inc
lret
add
inc
mov
popf
mull
add
cmp
mov
sub
test
sbb
inc
adc
mov
cmp
jp
push
ret
jecxz
fwait
cmc
and
push
jns
lahf
loope
xor
gs
stc
xor
sub
pop
dec
in
fnstcw
scas
push
dec
rcrl
sahf
xchg
jge
das
adcl
mov
loopne
sub
mov
addr16
cmpsl
cmc
inc
test
rcrb
dec
daa
dec
js
fmull
dec
jl
sar
mov
sbb
mov
in
mov
outsl
out
outsl
mov
std
push
inc
sahf
cmp
jo
mov
dec
adc
add
and
pop
aas
fstl
cmp
inc
cmpsl
mov
subl
sub
sub
int
mov
enter
cmc
loop
xchg
inc
mov
jae
xor
leave
call
xchg
loopne
aad
repnz
stos
imull
xchg
sub
stos
jmp
xlat
imull
xchg
and
pop
out
in
mov
imul
bound
dec
imul
int3
jb
or
shrl
inc
xchg
pop
hlt
adc
mov
or
sahf
repnz
pop
push
leave
mov
inc
mov
imul
xchg
dec
mov
faddp
xor
test
call
cmc
sarw
shl
and
outsb
add
and
test
adc
shlb
xchg
and
xor
nop
jl
mov
push
mov
push
xrstor
sbb
pop
lret
adc
or
xor
sbb
popf
mov
stos
or
aam
hlt
cs
daa
jbe
mov
mov
jo
push
dec
dec
add
pusha
mov
xchg
cmpsb
imul
cmc
out
dec
add
enter
mov
mov
add
gs
stc
sub
xlat
jp
ljmp
rcpps
pop
and
mov
out
and
fnstenv
shl
pop
mov
fistpl
loope
std
jl
int3
inc
pushf
lods
push
or
push
data16
imul
sub
out
sbb
mov
jbe
sub
jo
pusha
rcr
es
push
inc
outsb
fucompp
pop
in
sub
pop
sahf
jb
int
inc
xchg
xor
jmp
gs
daa
inc
fldt
mov
inc
call
test
in
mov
cltd
sub
or
jne
out
jle
adc
pusha
scas
or
aas
jb
mov
popa
ja
push
mov
mov
pop
sbb
ret
jo
dec
ds
out
adc
adc
xchg
es
insl
outsl
les
and
mov
leave
mov
outsl
lret
repnz
xor
mov
fdivs
xchg
jp
pop
push
jnp
and
add
lods
lds
out
data16
and
sbb
out
push
xor
adc
add
xchg
stc
jnp
clc
adc
xchg
mov
mov
insl
roll
mov
xchg
andb
ss
cs
jbe
popf
scas
lahf
dec
adc
hlt
pop
inc
inc
xor
sub
cmc
out
popa
outsl
mov
test
sub
or
mov
fdivr
sbb
ficomps
hlt
mov
adc
push
jge
push
fcomps
in
push
pop
jno
mov
mov
es
push
cmp
push
cwtl
inc
test
es
or
jae
pop
mov
ss
pushf
mov
popf
mov
mov
and
adc
mov
aam
add
sub
into
ss
pop
and
xchg
fcomps
insb
rcrb
outsl
sub
test
ds
punpckhbw
xchg
fnstenv
ljmp
xchg
mov
pop
cmp
or
push
add
scas
pusha
js
imul
lea
mov
dec
leave
jae
xor
test
rcr
mov
inc
push
or
xlat
lea
out
add
leave
dec
jne
repz
inc
mov
pop
xchg
jecxz
sbb
and
sbb
int
dec
in
inc
leave
imul
inc
jge
stos
clc
out
dec
xchg
and
fcmovnu
xchg
xchg
ljmp
dec
mov
call
or
jb
lods
inc
lds
jo
sub
flds
scas
in
or
mov
cli
and
inc
bound
and
sbb
pusha
and
xchg
xchg
into
jbe
fsubrl
sub
repz
inc
std
add
cmpsb
sub
and
jp
lock
addr16
pop
cmp
or
jg
push
outsl
popf
or
aad
pop
adc
push
in
sarl
test
popa
scas
bound
int3
fsts
push
test
pop
aas
mov
stos
push
xchg
cmpsb
push
popf
dec
dec
and
in
xchg
leave
mov
aam
daa
pusha
push
scas
enter
pop
orl
jmp
sub
cmp
push
ret
pushf
sub
and
sbb
or
movsb
pop
fcmove
and
or
or
mov
sbb
loopne
mov
mov
popf
mov
cld
sub
cmp
push
jp
lret
xchg
jmp
mov
imul
fisubrl
out
mov
mov
cld
fwait
adc
int
loopne
hlt
xor
xlat
repnz
icebp
pop
mov
mov
add
out
mov
cmp
ljmp
inc
sbb
out
jmp
xchg
mov
inc
out
movsb
cmp
in
sbbl
loopne
sahf
or
fisttps
jp
xchg
mov
pop
xor
adcl
push
rcl
out
push
clc
loope
mov
sbb
mov
add
add
sub
jge
jae
push
aad
push
mov
mov
dec
cltd
dec
inc
pmovmskb
loope
sbb
mov
lods
les
cmp
push
subl
xor
clc
lret
inc
and
and
mov
and
adc
clc
cmp
scas
std
fcoml
enter
das
sub
in
or
sbbb
dec
outsl
popa
ljmp
add
jmp
fs
fnsave
lds
out
push
aam
push
leave
push
stc
xlat
pop
jo
int3
fidivrs
arpl
lods
push
sbb
dec
or
pop
and
jbe
mov
xor
dec
sbb
insl
sarl
push
and
shll
stos
adc
dec
pop
pop
lret
aaa
fdivrl
dec
sub
xor
cltd
mov
mov
mov
mov
mov
call
out
cmpb
call
out
xlat
adc
idivl
jo
lods
rorb
push
mov
ja
push
jle
cmp
cmp
enter
cli
loop
and
scas
lret
cwtl
cs
and
in
scas
popf
xchg
jnp
mov
pushf
aam
jmp
push
stc
bound
push
cmp
insb
mov
lods
xlat
sti
mov
push
imul
lret
shr
dec
push
jmp
out
loop
in
adc
sbb
lea
xchg
faddl
lds
add
stos
mov
or
dec
cmpsl
mov
cmp
outsl
sarb
aad
aam
in
stos
jle
mov
add
fisubrs
sub
stc
int
xor
popa
mov
mov
nop
shr
and
addl
add
and
fbstp
testb
pop
movsl
pop
movsb
ljmp
jp
fmull
cmc
push
jbe
lods
loopne
ret
xchg
movsb
xor
or
movsbl
nopl
loopne
pop
or
jo
sub
mov
inc
pop
fimuls
pop
sub
test
cmpsl
test
mov
mov
jns
cli
arpl
imul
mov
roll
jnp
call
js
adc
imul
cmp
lods
push
push
cwtl
outsb
ds
pop
cmpsb
frndint
adc
fstps
add
outsb
adc
repnz
jg
jge
les
repnz
outsl
xchg
stos
or
leave
inc
mov
subb
pushf
lea
nop
lret
dec
dec
in
sarb
mov
test
iret
bound
cmpsl
jo
push
fnstcw
sbb
scas
add
sbbb
into
sahf
mov
mov
lock
pop
aaa
mov
cmp
cmp
roll
push
sub
xchg
je
loope
push
ljmp
push
pop
jo
scas
jg
adc
shrb
outsl
mov
xchg
stos
imul
cmp
cmp
adc
insl
pop
jge
push
in
jle
test
mov
push
ds
arpl
repz
sbb
loop
pop
in
xor
das
loop
pop
scas
leave
xor
push
jmp
rorb
movsb
sub
gs
fistl
popa
aam
mov
pop
sbb
push
lock
push
int3
or
lahf
mov
push
rcrb
cmp
orb
sbb
dec
cmp
push
rolb
push
rorl
leave
adc
cmp
jge
pop
cmpsb
add
stos
test
leave
xor
cmp
or
jecxz
inc
mov
out
mov
cld
and
push
push
jb
rcrb
stc
mov
jge
insl
adc
aad
lods
das
in
lahf
cmpsb
js
pop
mov
inc
stc
and
es
out
movsb
dec
test
orb
pop
fsubl
and
shlb
jb
or
in
je
mov
into
xchg
lds
xor
mov
inc
pop
cltd
cmpl
add
loope
mov
sub
sub
fists
cmc
js
sbb
adc
push
jns
out
sub
dec
int
inc
std
repz
int
je
mov
rorl
jno
mov
imul
inc
imul
mov
insb
add
addr16
dec
roll
mov
test
in
scas
push
and
cmp
mov
orb
sub
fwait
inc
inc
push
rcll
jbe
inc
leave
pop
mov
mov
out
mov
negl
jle
lcall
jns
ret
ss
sub
stos
xchg
lods
adc
mov
cmpsl
xchg
jne
jns
dec
inc
mov
cmpb
xchg
add
fcompl
cmp
xchg
in
rorl
pushf
movsl
test
jmp
pop
adc
ret
flds
jl
leave
and
icebp
xchg
aad
xchg
ret
jns
push
xchg
or
xchg
ret
mov
jl
lret
out
push
xchg
push
shll
loope
into
imul
fcoml
xchg
jmp
arpl
sbbb
les
loopne
scas
dec
loopne
pop
insb
jle
orb
in
jecxz
stos
cmp
loop
jae
inc
mov
inc
xor
fwait
das
cmpsb
add
in
xchg
or
rorl
out
in
negb
fnstenv
lods
jns
aam
imulb
xor
sbbl
fdivl
sub
dec
jno
push
mov
in
shll
lock
or
fiaddl
add
fucomi
dec
andl
std
popf
scas
sbb
inc
push
pop
les
push
adc
push
add
sbb
inc
leave
pop
lcall
pop
sbb
xchg
repnz
minps
mov
sbb
scas
sub
loopne
dec
es
mov
divb
adc
jae
test
mov
aas
shll
ret
outsb
sub
adc
pop
inc
push
lret
push
hlt
cmpsl
jno
and
pop
cmp
imul
loope
incl
ret
xchg
sahf
out
mov
test
dec
dec
jmp
inc
popa
xchg
lret
add
int3
shrl
xchg
outsb
out
les
add
in
fsts
mov
sarb
sti
mov
orl
inc
xchg
loope
xor
or
mov
sub
bound
adc
jmp
push
inc
or
pop
pushf
std
push
add
mov
fcoms
shl
shlb
stos
sub
sbb
paddsb
mov
sbb
cmp
xchg
sub
or
cld
sbb
jp
and
cmpsl
xor
out
pushf
in
push
jecxz
test
lahf
push
jbe
cltd
js
push
xchg
je
mov
int3
jns
cmp
cmpsb
callw
cmp
push
sub
cmp
int
ja
sub
push
or
xchg
std
dec
mov
sub
xlat
clc
fdivl
aad
mov
mov
xlat
pop
mov
xlat
jns
inc
xchg
or
sub
lods
subl
aas
in
rorb
or
std
negb
mov
aaa
jno
out
xchg
clts
out
scas
ficoms
loopne
dec
into
lea
jmp
imul
cmp
xchg
and
push
and
cmpsb
mov
mov
push
pop
pop
fadds
jno
in
add
mov
add
lret
sub
jnp
jl
lds
pop
imul
dec
cmpl
dec
cs
mov
xor
in
ret
aam
add
insl
add
and
in
add
inc
popf
push
mov
fs
lea
lret
sub
cwtl
fst
mov
icebp
lods
into
cmp
idiv
dec
into
ss
inc
mov
nop
lods
push
pop
jmp
lods
dec
addl
mov
cmpb
hlt
mov
push
add
sbbb
jb
int3
push
pop
nop
mov
sub
mov
and
cmp
inc
add
xor
and
popf
aad
adc
xchg
and
scas
leave
pusha
xor
mov
and
sub
js
add
aad
clc
fcompl
cli
xorl
fisttpl
mov
push
pop
cmc
jne
hlt
movsl
imul
movsb
ljmp
ficompl
pop
sbbb
dec
pop
or
dec
lods
mov
cmp
jne
cmpsb
popa
loopne
mov
out
insb
movsl
popf
sti
fiaddl
adc
jnp
inc
xlat
push
and
stos
pop
jne
mov
dec
std
xchg
xchg
mov
or
jp
scas
push
xchg
xchg
jns
movsl
rcll
and
shll
nop
dec
aaa
lds
pop
sti
stos
and
bound
enter
je
rolb
xor
jno
popf
push
cmc
hlt
negb
movsb
aad
lret
lcall
dec
out
cltd
fs
push
lods
adc
xor
xor
xor
ss
cmc
jge
inc
pop
pop
enter
xchg
out
adc
dec
adc
push
dec
or
fisttps
loope
mov
pop
push
ret
ret
fidivrl
jae
lods
add
fdivrl
addr16
sarl
mov
mov
sqrtps
push
cmpsl
stos
out
stos
mov
pushf
outsb
cs
std
ds
popa
adc
sti
fnstcw
jb
xor
mov
scas
or
out
mov
xchg
mov
adc
or
or
mov
es
xchg
loope
cmpsb
or
fwait
mov
cmp
and
bound
jno
mov
popa
xchg
mov
adc
lea
insb
fsubl
stos
lock
or
loopne
filds
pop
notb
pusha
mov
stos
and
shll
out
sub
mov
jle
mov
inc
jecxz
sahf
add
xor
mov
inc
inc
xchg
add
xchg
ret
xchg
fsubrl
push
popa
addr16
fbld
lret
add
mov
dec
add
sbb
cmpsl
xchg
xor
lock
adcl
push
mov
test
in
and
xchg
pushf
test
pop
or
sbb
push
in
divl
add
cmpsb
mov
jl
and
push
pop
test
pusha
or
dec
jp
add
fildl
iret
dec
mov
mov
and
push
sub
cmp
xchg
xchg
pusha
xor
lods
out
addr16
cwtl
std
push
fisttps
xchg
imul
adc
jecxz
jo
int3
jl
pop
fwait
sub
aas
cmp
cmp
adc
mov
xorl
fisttps
mov
mov
xor
ja
adc
pushf
sub
sbb
imul
movsb
stc
ja
fisttpl
rcl
fwait
or
aas
popf
dec
orb
jno
enter
xor
icebp
xor
sub
mov
clc
mov
sbb
es
xchg
jnp
mov
or
in
clc
stc
or
sbb
aaa
sbb
mov
sbb
in
aam
cmp
add
dec
pop
push
inc
rcll
pop
mov
jmp
xor
pop
cmp
xchg
cmp
sub
jbe
repnz
add
push
cmp
gs
daa
mov
push
xor
or
pop
jle
xchg
mov
insl
cmp
lock
sarl
add
in
adc
jo
mov
into
movsl
test
inc
push
jae
test
mov
cli
pop
cmp
lods
pusha
jle
sbb
inc
or
mov
xor
or
jnp
or
into
loopne
loope
scas
xchg
dec
and
fnstsw
cwtl
jle
arpl
rcrl
popf
outsb
add
or
mov
cmpsl
fsts
jecxz
pop
insl
and
loope
sbb
sub
roll
out
inc
dec
roll
dec
adc
stos
sbb
jb
cmp
xor
insl
ret
imul
aad
jnp
andb
fiaddl
add
mov
mov
xlat
push
loop
jo
dec
sbb
xor
pop
adc
lock
nop
lret
das
inc
adc
pop
cmp
loope
rclb
mov
dec
jle
jno
insb
movsb
mov
rorl
fdiv
adc
insl
lahf
push
sub
xchg
mov
cltd
jmp
js
jnp
cs
push
das
push
xchg
rorl
loopne
addr16
mov
std
xchg
repnz
push
xchg
pop
push
mov
lock
fists
push
fidivl
jp
popf
sti
xor
xor
mov
std
rorb
sub
lods
sub
and
fstl
jbe
sbbb
fs
cmp
mov
cld
push
mov
adc
sub
xchg
inc
mov
xor
jns
dec
es
stos
cmp
mov
scas
sti
jle
cmp
and
or
jp
movsb
cmp
mov
jae
rcl
call
sbbb
cmp
sbb
jnp
outsb
dec
jo
pop
popf
mov
push
inc
je
and
and
imul
fmuls
mov
push
cld
jg
aam
sub
movsb
cmp
push
std
xchg
sbb
dec
sub
arpl
iret
mov
and
dec
dec
mov
cmp
pushl
add
mov
bound
xorb
out
xor
add
sbb
test
leave
scas
loope
mov
cmpsl
pop
imul
cmp
inc
fstpl
fsub
cmp
in
dec
sti
xor
pop
xor
iret
repnz
ds
xorl
xchg
add
mov
ffreep
xor
adc
mov
xchg
lods
xor
xchg
mov
ret
sbb
cmp
arpl
or
daa
enter
jnp
repz
lret
xlat
mov
adc
in
pop
push
iret
aas
pop
inc
xor
dec
and
scas
insb
flds
inc
sub
ret
call
xchg
add
jecxz
insb
shll
shl
pop
rolb
push
push
pop
lock
sbb
pop
in
push
call
lock
mov
inc
mov
xchg
xor
add
icebp
sti
pop
inc
push
test
adc
scas
jne
xchg
addr16
repnz
push
adc
mov
cmp
cli
sbb
lahf
push
pop
mov
stc
lock
or
add
ljmp
sahf
add
xchg
lea
cltd
and
popa
rcrl
fs
popf
mov
rol
pop
pop
sub
xchg
sbb
adc
xor
outsb
ret
sbb
out
daa
arpl
popa
in
xchg
repz
mov
loopne
cltd
outsl
cmp
int3
cmp
add
or
xchg
mov
scas
pop
arpl
cmpsl
call
sub
ja
sub
popa
jnp
xor
push
mov
push
pop
cmp
jb
inc
mov
cmpsl
jnp
xor
cmp
mov
pop
inc
jg
xchg
aad
movswl
negb
or
xchg
xor
int3
pop
mov
dec
sarl
pop
nop
adc
shlb
jbe
sub
mov
mov
je
jge
outsb
xor
lock
sub
repz
daa
loopne
pop
gs
push
outsb
andb
xchg
xor
test
ds
mov
repnz
push
icebp
sub
sub
lcall
sbb
lret
stc
gs
mov
xchg
sub
insb
mov
out
cld
fwait
call
mov
out
xchg
jge
lods
push
mov
or
movsb
pop
jmp
push
add
xor
ljmp
out
out
mov
inc
push
and
scas
pop
ret
xor
jae
sbb
sub
jmp
sahf
in
jne
add
fs
and
out
xor
clc
lock
aad
mov
out
loopne
clc
jp
into
pop
dec
add
jmp
push
mov
or
xor
mov
popf
adc
aas
or
in
adcb
mov
roll
int3
icebp
inc
mov
lea
loopne
jbe
push
and
orl
cmp
xor
cwtl
out
enter
xor
lods
lcall
clc
daa
cmp
dec
adc
push
mov
mov
scas
out
jne
insb
add
jne
leave
lods
shlb
inc
jge
lret
inc
loopne
fwait
mov
sub
movl
sbb
test
imul
adc
dec
dec
push
add
mov
arpl
cmp
andb
mov
add
add
ss
ljmp
xchg
sbb
dec
adcl
cltd
in
add
arpl
pop
mov
repnz
mov
sub
jmp
sbb
pop
jp
dec
lahf
push
daa
into
insl
sub
mov
ljmp
ss
outsl
in
sbb
xchg
shll
push
push
xor
or
adc
push
daa
mov
ret
icebp
mov
data16
jg
dec
addr16
arpl
and
subb
and
je
daa
js
divb
mov
xchg
pop
sub
xchg
pushf
push
stc
push
sub
and
addl
lret
xchg
jp
test
sahf
mov
roll
fdivs
lret
ss
data16
pop
sbb
lock
sbb
mov
pop
popa
mull
dec
movsb
push
aas
xchg
pcmpgtw
or
roll
rorb
push
cmp
xorl
inc
repnz
movsb
and
int3
mov
out
xor
mov
push
add
rcrl
test
fwait
cmp
loop
call
lahf
aas
imul
pop
adc
shrl
loope
and
jb
fstpl
mov
out
in
or
stos
dec
nop
mov
dec
lods
and
inc
xor
mov
mov
push
ljmp
imul
out
cli
jns
das
popf
push
ljmp
mov
xchg
mov
sbb
xchg
in
jl
ret
xchg
pop
pop
or
cmp
push
arpl
and
dec
pusha
xor
pop
inc
add
xor
into
cli
xchg
sub
xor
sub
push
popa
mov
push
bound
cli
repz
sub
popa
addb
loop
lods
cmpsl
mov
in
andb
xchg
add
xor
xlat
inc
shll
test
jne
lods
mov
pop
std
fbld
jmp
xchg
out
leave
aad
dec
bound
or
mov
cld
sub
in
jge
aam
dec
push
dec
out
sahf
imul
and
pushf
push
push
ret
xchg
hlt
mov
daa
test
xchg
stos
fsubrs
sub
fiaddl
aam
fnstsw
out
jle
jge
push
sub
xor
stos
push
sbb
pusha
out
fsubrs
cmp
mov
xlat
jno
divb
sub
pop
or
dec
rorb
sahf
mov
ljmp
and
test
imul
in
jne
xor
push
sbb
ljmp
mov
push
stc
ds
push
xor
mov
add
inc
push
rorb
icebp
int3
add
out
or
mov
lcall
mov
fldt
cmp
jge
mov
pop
call
cmp
shrb
or
mov
imul
push
mov
dec
mov
stos
testl
in
mov
mov
xchg
add
cwtl
pop
or
inc
test
jne
mov
or
daa
jo
shrb
js
les
xchg
push
inc
sbb
adc
push
mov
cmpsl
cmpsl
xchg
xchg
and
out
scas
pop
pop
push
ja
int
mov
jmp
in
lea
inc
push
pop
ret
sbb
rdmsr
add
les
push
fstps
mov
test
sti
insl
fstpl
inc
push
pop
aad
push
lods
xchg
cmp
sbb
mov
push
mov
stc
inc
mov
dec
jo
fcomps
mov
in
sbbb
push
dec
and
aad
scas
aam
xchg
cltd
xchg
fdiv
testb
test
jbe
lock
xlat
stc
sub
or
mov
mov
in
inc
lods
sub
fnstsw
ret
dec
icebp
repnz
mov
repnz
push
fldenv
imul
movsl
shlb
jne
test
lods
mov
cld
hlt
sbbb
jl
adc
js
and
lock
xorl
mov
cmpsl
sub
mov
mull
and
inc
cli
in
inc
jl
and
pushf
cltd
jle
pushf
outsb
icebp
dec
repz
sbb
int3
jne
sbb
outsl
mov
test
sbb
ffreep
cvtpi2ps
add
adc
pop
test
out
inc
cld
push
mov
icebp
cmc
and
dec
jbe
out
je
jo
out
push
hlt
push
inc
inc
int
xlat
mov
pop
cmpsw
jbe
gs
pop
jno
inc
adc
sub
push
xchg
jge
pop
movsl
inc
pop
test
sub
mov
add
rcrb
cli
and
sub
in
fwait
sbb
jg
and
xchg
push
in
into
mov
cmp
bound
mov
lock
rolb
xchg
push
popa
outsl
xor
cmp
mov
std
lea
std
xchg
sub
rol
push
mov
mov
in
add
into
sub
fwait
in
repz
xor
shrb
aad
cmp
xchg
popa
mov
xlat
cltd
call
and
hlt
mov
loopne
sub
dec
mov
loop
pop
mov
sbbl
sahf
in
fwait
ss
adc
or
insl
repnz
lret
sub
ljmp
dec
rcrb
shrl
fisubrl
adc
mov
or
pop
jo
xor
and
or
enter
sbb
adc
test
lret
mov
mov
leave
and
and
and
popa
pushf
out
push
aas
sbb
add
mov
adc
sbb
cmpsb
cmp
icebp
out
js
and
ret
jae
inc
push
mov
jo
add
je
lds
std
fistps
fisubs
mov
pop
dec
inc
sub
mov
mov
addr16
add
xchg
insl
movsl
pop
clc
rcl
mov
cld
les
fldt
jmp
subl
fists
fmuls
and
lock
mov
push
stc
or
aas
add
popf
daa
and
sar
jnp
pop
in
xor
mov
pop
mov
push
jle
ja
outsb
mov
shrl
dec
shrb
enter
in
dec
cwtl
bound
cwtl
adc
int
dec
xrelease
xlat
lret
decl
jge
inc
adc
in
cmpsl
mov
jns
fisubs
cmp
aas
jns
shlb
stc
in
sub
repnz
inc
pop
arpl
les
xchg
dec
sbb
subb
xor
pop
jo
jo
cld
test
roll
inc
fistps
lret
mov
stos
and
shll
adc
cld
cmp
mov
add
out
cli
ror
push
dec
mov
iret
inc
popf
dec
pop
and
and
ss
jb
add
out
sub
cmc
out
cmp
push
lods
add
sti
notl
push
je
pop
movsl
loopne
pushf
stos
in
xor
fistl
dec
in
pop
xor
mov
mov
dec
fstp
xor
cmpl
es
mov
xor
test
popl
adc
sbb
sbb
faddp
loopne
pop
arpl
outsb
push
mov
or
gs
add
shl
cmp
push
xor
inc
add
icebp
dec
cmp
add
pop
mov
xor
fldcw
test
jo
in
jle
mov
cmp
cmp
dec
lcall
ljmp
or
mov
rcl
sbb
mov
loopw
inc
xchg
call
dec
rcr
pop
adc
mov
dec
xchg
repz
div
cmp
idivl
scas
cmpl
dec
add
es
insl
call
incb
adc
mov
jge
cs
stos
jg
mov
sbb
icebp
fwait
push
mov
xchg
loopne
mov
test
pop
fucomi
aas
hlt
mov
add
cltd
inc
add
cmp
xor
cmp
int
add
pop
sub
jb
dec
and
ss
adc
clc
fxam
cmp
mov
outsb
jnp
mov
sub
aas
imul
xchg
js
adc
mov
sbb
loopne
jno
out
mov
jae
frstor
mov
pop
clc
xchg
fisttps
xchg
call
push
loop
push
repnz
mov
mov
outsb
jp
mov
rorl
push
sub
and
subb
push
dec
cmp
xor
lods
test
inc
arpl
pop
dec
mov
inc
test
jge
mov
dec
push
fnstsw
pop
scas
mov
dec
jecxz
adc
scas
into
in
cltd
mov
push
dec
dec
push
and
movsb
cmp
lods
push
xchg
add
xchg
xchg
mov
icebp
idivl
pop
inc
mov
cmp
add
cltd
aaa
lcall
fcomp
cmp
addb
jmp
sub
les
nop
loope
int
in
repnz
negb
and
test
stc
lahf
inc
lret
ljmp
dec
lret
or
or
mov
dec
ss
cmpxchg
out
sbb
adc
divl
mov
clc
push
pop
repz
adc
push
sub
xlat
and
cmpsb
shl
outsb
lahf
mov
aam
das
out
fcoml
test
mov
xor
dec
test
pop
daa
pushf
sub
push
repnz
js
bnd
pop
subb
and
pusha
jg
dec
push
sbb
or
push
insl
in
push
mov
xchg
push
sub
or
test
js
sbb
sbb
xchg
fsub
in
aas
add
insl
mov
rcll
add
test
mov
inc
enter
outsl
jle
test
mov
push
jae
mov
rcl
and
int
andl
sbb
ret
pop
sbb
mov
push
add
imul
adc
out
iret
mov
cwtl
mov
sbb
in
in
mov
xchg
les
pop
or
shr
dec
sti
adc
jbe
in
mov
and
or
sub
adc
pop
stos
pushf
xor
mov
mov
jmp
les
sub
jle
mov
out
in
xlat
ljmp
sbb
or
jns
lods
es
cli
lea
cmp
mov
xlat
addr16
or
sub
int
xchg
addr16
stc
lret
cwtl
and
or
inc
and
push
or
test
and
jne
les
xchg
push
dec
scas
out
rcrl
imul
dec
int
mov
lret
dec
pop
jne
mov
or
iret
lcall
lcall
clc
scas
pop
push
nop
movl
fcmovu
mov
push
or
inc
mov
enter
cwtl
imul
adc
ljmp
mov
jns
fsubs
in
jge
xor
adc
mov
mov
mov
lret
je
xor
sub
cmp
sbb
notl
sti
testb
les
mov
jle
push
dec
cs
sub
shll
in
xor
pop
jae
mov
outsb
nop
jge
stos
int
lahf
adc
xchg
dec
mul
push
cmc
shr
jl
test
stos
sbbb
mov
mov
je
test
or
cmpsb
lret
daa
mov
inc
lcall
ror
dec
outsb
jge
stos
xlat
fdivr
popf
aaa
pop
fcomp
loop
aas
push
sub
and
bound
stc
add
loope
shr
jnp
jb
xchg
xchg
pop
in
xchg
hlt
in
xor
mov
mov
dec
inc
xchg
or
insb
movsb
sar
adc
popa
mov
mull
cli
loopne
sub
aas
in
shr
scas
xchg
inc
cmpsl
popf
in
sub
mov
loopne
ljmp
in
xchg
and
pop
cltd
pop
in
fcom
les
imul
rorb
js
pushf
add
lcall
in
cld
pop
mov
sbb
mov
inc
dec
jp
jb
sbb
sbbb
or
out
loop
xor
hlt
adc
push
xchg
js
adc
and
pop
sub
lods
xchg
ljmp
ja
fs
sbb
xchg
ret
push
pop
xchg
xor
cmc
dec
add
insl
jecxz
push
sbb
lret
loop
inc
push
in
andl
ds
inc
sub
and
fisubs
mov
push
mov
leave
pushf
pop
mov
call
popf
pop
pop
cmp
mov
stc
mov
cmpl
lcall
push
sahf
push
stos
movsb
dec
inc
movsl
jne
and
jno
pusha
cs
mov
lret
cmp
add
sub
mov
pushf
ret
lahf
xchg
rol
ja
mov
and
pop
jg
add
mov
xchg
int3
add
mov
inc
mov
jnp
aas
and
lret
adc
dec
lock
and
xor
cltd
jne
lret
movsb
inc
mov
add
jle
test
rcr
push
adc
mov
xor
imul
push
pop
cs
andb
xor
pusha
fidivs
out
sbb
push
mov
mov
sahf
rorl
mov
xor
stos
mov
testl
xor
jp
pop
jbe
mov
in
jle
dec
out
pop
dec
sbb
lahf
mov
out
mov
or
and
imul
push
xor
movsb
sub
roll
stos
mov
outsb
cltd
and
mov
imul
insb
adc
lea
in
sti
movsl
cmp
in
int
and
int3
xor
mov
cmc
fucompp
int
int3
es
mov
inc
or
syscall
sub
jmp
or
cmp
ret
pop
fcomps
ds
xor
push
sbb
loope
push
mov
xchg
xchg
int
cmp
pusha
inc
stos
jecxz
xchg
lea
sahf
scas
enter
in
sbb
add
fimull
and
xchg
jae
movsl
add
inc
pop
in
cld
cs
int
dec
mov
cmp
adc
ljmp
nop
cs
sahf
and
and
inc
mov
mov
push
dec
out
insl
inc
sahf
rcrl
mov
lea
jne
test
in
insl
mov
jno
lret
divl
insl
sbb
ds
pop
pusha
out
or
data16
fisttps
cmc
inc
imulb
fnsave
mov
std
sbb
pop
jp
mov
mov
sti
push
mov
daa
jl
jnp
ret
jl
rcrl
std
sbb
xchg
add
jmp
mov
inc
fwait
cs
dec
push
popa
adc
xchg
cmp
jmp
push
cmp
inc
mov
xchg
xor
adc
inc
fs
mov
mov
dec
bound
pop
mov
dec
and
movsl
add
in
lcall
ss
push
ds
insl
call
jle
pop
xchg
cltd
pusha
test
fldl
sub
add
jle
dec
fwait
ja
test
or
shr
lret
xchg
mov
jnp
jmp
cmp
push
or
cmp
repnz
and
push
adc
fs
xor
mov
stos
push
mov
push
dec
inc
daa
pop
ja
fwait
icebp
mov
out
sub
inc
pshufw
sub
mov
scas
sub
test
mov
sti
add
cld
inc
sbb
cmpsb
sub
lret
add
stos
sbb
idivb
cmp
xlat
xor
sub
mov
dec
push
xor
inc
cwtl
push
adc
xlat
out
or
in
mov
xlat
adc
fsubl
mov
jbe
sub
jge
or
push
cmp
nop
pop
fadds
jge
mov
cld
cmp
test
push
cmp
jmp
imul
push
out
sahf
xchg
out
dec
add
stos
sahf
les
push
pusha
mov
rorl
mov
ljmp
sbb
inc
stos
sahf
cmpb
gs
out
lods
mov
xchg
inc
mov
jno
repz
xlat
hlt
outsl
call
cmp
lfs
or
js
out
mov
push
add
loope
imul
sub
insb
and
fxam
mov
pop
push
pop
pop
adc
add
incl
mov
sti
aas
jg
adc
sbb
scas
outsb
test
je
push
fsubrp
loope
and
cmc
lods
and
je
and
cli
je
adc
stc
inc
mov
sbb
add
cwtl
or
pop
hlt
cli
sub
push
inc
insb
cmp
fidivl
movsb
psrld
in
pop
movsl
idiv
cmp
and
mov
sarb
std
push
mov
mov
mov
sbb
addl
mov
nop
lcall
cmp
sbb
psubusw
jns
inc
sub
test
mov
mov
ja
out
push
add
scas
in
sub
hlt
inc
mov
mov
mov
in
pop
push
test
in
xchg
lcall
les
jno
cltd
cmp
mov
xorl
xlat
mov
fcoml
xor
jecxz
inc
push
xor
fldcw
sbb
jns
mov
sarb
jb
xchg
leave
jl
ja
push
inc
mov
or
sub
mov
aam
ficoml
cltd
les
cmp
movsl
fldl
add
add
push
push
sub
jb
outsl
pop
mov
jns
inc
push
jbe
mov
xor
pop
je
pop
mov
rcrb
mov
or
fisubs
cmpsl
lds
mov
imul
cmp
adc
jne
stos
cmp
roll
jge
fisttpl
inc
or
popa
push
mov
inc
bound
cmp
repz
sub
or
arpl
loopne
fmulp
lds
mov
loopne
adc
and
int3
dec
cltd
movsb
ljmp
mov
adcb
sub
sub
add
aam
xor
aas
out
pop
cmpb
pop
mov
dec
cmp
jle
cmp
jb
lea
adc
or
pushf
cs
divl
out
out
push
sbb
jge
andb
stos
js
pop
imul
adc
sub
xor
das
mov
or
or
sub
mov
rcrl
jle
outsl
mov
add
mov
inc
lret
add
into
mov
pushf
xchg
mov
pop
cmp
ss
lcall
rcrb
mov
aam
cmpsl
mov
and
jg
mull
or
jmp
cmc
dec
jns
mov
and
sub
stos
ljmp
je
fists
cmc
leave
sahf
push
sub
adc
jg
inc
jns
add
mov
sbb
mov
hlt
cmp
scas
add
out
daa
push
xor
and
es
mov
dec
sahf
test
pop
arpl
sbb
mov
ucomiss
fwait
sub
sahf
loope
push
das
or
shlb
stos
cltd
jl
and
rcrl
ds
mov
shll
jl
aaa
loope
ljmp
and
sbb
das
or
fmull
popf
mov
mov
cli
je
mov
mov
mov
sbb
dec
nop
pop
hlt
int3
mov
dec
call
inc
nop
mov
push
xor
mov
mov
mov
dec
cmp
and
push
popl
fists
mov
mov
cmp
adc
stos
cmp
adc
lock
mov
sbb
push
xchg
outsb
mov
push
lds
mov
test
sbb
ret
jl
loop
outsb
hlt
out
inc
fs
popf
dec
cmpsb
mov
inc
loope
xchg
adc
mov
ljmp
lds
mov
lret
cmp
ret
jb
jecxz
push
ss
insl
add
sbb
xor
inc
call
sbb
test
dec
mov
fisubrs
lret
xchg
xlat
xchg
frstor
mov
and
sbb
test
notl
out
adc
sub
cmpsb
movsl
imul
pop
dec
dec
jmp
mov
mov
inc
jmp
mov
movsl
or
mov
jo
call
and
je
push
jg
lds
push
jo
inc
popf
lock
and
loopne
mov
cli
cmp
enter
pop
fwait
sti
arpl
xor
mov
cmpsl
mov
mov
push
shlb
imul
push
mov
mov
repz
or
mov
out
mov
imul
test
dec
and
out
in
jp
jo
icebp
out
scas
adc
lock
dec
dec
dec
and
xchg
insl
jne
in
xchg
xchg
sub
shrb
loopne
xor
sti
aam
xor
in
gs
cmpsb
imul
cmp
adc
xlat
fbld
and
rcll
insl
int
fidivrl
jb
notl
jmp
add
sub
cwtl
lahf
scas
jle
add
push
sub
xor
xlat
xacquire
mov
fcoms
dec
mov
rcr
pop
or
inc
mov
sbb
xor
in
jmp
out
add
js
push
sub
jae
loopne
bound
xchg
loop
and
in
or
popf
inc
idivb
sbbb
test
arpl
inc
leave
sub
mov
or
lret
cmc
mov
jno,pn
push
imul
sbb
out
dec
pushf
mov
mov
push
pop
mov
cmp
cmp
adc
ja
loopne
mov
daa
push
aaa
lock
cltd
shll
jg
xlat
shlb
lock
jmp
dec
and
jge
dec
or
stc
shl
leave
dec
punpcklbw
pop
enter
outsl
mov
ja
jnp
hlt
xor
jmp
cmc
mov
xor
or
outsb
ja
call
inc
hlt
mov
fwait
mov
jae
add
xor
and
enter
sbb
enter
push
stos
pmulhuw
mov
or
dec
iret
cli
mov
adc
jmp
out
lret
mov
xchg
dec
loop
inc
lods
dec
jo
jecxz
aam
jmp
push
xchg
in
xchg
out
jne
das
mov
or
mov
pop
clc
add
test
mov
push
popf
xor
imul
fstl
dec
imul
and
push
pop
push
lea
outsl
and
mov
and
pop
in
pop
jae
in
xchg
cltd
and
push
add
push
or
flds
inc
push
and
and
gs
popf
arpl
ficoml
aas
insb
cmpb
jne
lret
mov
ss
stos
xchg
mov
je
sbb
sar
jmp
sub
repz
loopne
xchg
movsl
mov
test
jge
sbb
or
cmp
lock
sahf
sub
pop
dec
cs
fstpt
pop
mov
sti
xor
out
das
js
xor
add
xor
cmp
sbb
cmc
inc
xlat
push
pop
in
lcall
in
lds
inc
pop
pop
filds
hlt
pusha
in
jp
stc
ret
adc
outsl
sub
and
dec
pop
xor
jnp
sahf
cld
cwtl
add
movsl
xor
jl
sti
sub
sbb
dec
lret
xchg
push
pushf
loope
ret
fmull
and
mov
aas
mov
les
pop
pushf
stos
mov
sub
ficoml
adc
adc
mov
sbb
sub
jns
subb
lret
dec
movsl
addl
mov
sahf
xor
lret
mov
arpl
inc
mov
adc
mov
push
imul
xchg
cmpsb
pusha
xor
add
fisubrs
jno
std
lahf
loop
add
mov
mov
xor
es
lret
test
rcl
test
or
add
rcrl
mov
dec
ret
mov
sbb
pop
rcll
in
lcall
xchg
stos
mov
mov
test
mov
push
fldenv
inc
cmpsb
inc
mov
adc
inc
xchg
mov
or
into
mov
shlb
adcb
out
outsl
into
inc
bound
repz
jle
outsb
sub
add
test
loop
mov
cmp
rol
rcrb
in
sbb
cmp
fistpll
orl
mov
cmp
es
sahf
sbb
xlat
mov
lds
in
or
lds
lahf
ret
popf
dec
cmpb
adc
push
jg
push
icebp
insb
mov
sbbb
je
rorb
cmpsb
pop
cwtl
xchg
xchg
loopne
call
inc
xchg
adc
repnz
dec
std
and
lcall
push
aaa
fucomip
or
clc
mov
xor
fsubl
inc
or
rcrb
cltd
repnz
jecxz
movsb
jmp
sub
jmp
mov
int
jge
stos
push
pop
or
add
call
push
mov
nop
outsb
out
mov
cld
pusha
loope
jnp
dec
insb
test
jns
mov
cmp
xchg
mov
inc
mov
inc
or
mov
aas
pop
sub
test
ds
fdivp
rcr
mov
and
outsl
adc
mov
cmp
inc
xlat
loopne
mov
xorb
mov
push
ss
xchg
pop
cmp
fwait
pop
cmp
cli
ffreep
movsl
std
push
push
fldcw
dec
add
pop
call
test
pop
and
out
sub
push
sub
lods
lcall
mov
mov
ja
in
adc
xor
mov
cmp
lods
out
lahf
push
pusha
jbe
pop
mov
out
ja
and
adc
mov
fbld
imul
mov
or
inc
cwtl
pop
inc
pusha
roll
pusha
aad
adc
loop
les
mov
aam
adc
pop
out
mov
xor
xor
pop
fcmovb
mov
mov
pop
xor
mov
ss
pop
mov
fsubrl
notl
bound
inc
and
cmpsb
daa
push
pusha
mov
shl
jl
pop
mov
out
xchg
jae
jbe
outsl
cli
add
out
pop
neg
ret
jno
aaa
mov
xor
out
xchg
fstpt
fists
inc
insl
add
pop
jl
inc
stos
jmp
stos
fidivl
jge
mov
shrb
jae
leave
insl
insl
fucom
aam
loop
sub
mov
push
pushl
or
ljmp
push
mov
dec
cmc
add
test
je
adc
addr16
sbb
jno
das
ljmp
or
sti
push
xchg
mov
pop
ret
adc
out
push
ficomps
xchg
cld
dec
int
mov
cs
xchg
cmp
inc
cmp
ret
mov
pop
ljmp
cli
leave
dec
cmp
jns
testb
scas
loopne
pop
or
or
cwtl
cmpb
sbb
push
sub
cmp
and
rorb
mov
cmp
fwait
cmpsl
cmp
sbb
push
ja
or
dec
mov
dec
inc
pop
lcall
push
sbb
movl
pop
dec
out
xchg
fcompl
cmc
popa
test
imul
cld
mov
adc
xchg
and
jo
mov
pusha
push
push
pop
mov
stos
lret
imul
je
loopne
and
incb
add
mov
imul
mov
in
cmp
into
gs
lret
inc
cmp
je
jae
jno
xor
adc
es
inc
pop
fistpl
adc
test
add
jae
jns
xchg
in
cld
aam
addr16
sar
pop
jo
fldenv
in
popl
add
lock
fcmovb
into
pop
stos
imul
int
cmp
rclb
mov
sub
jl
daa
jne
lods
inc
mov
xor
dec
adc
xor
hlt
xor
cltd
lcall
and
mov
fistps
es
push
jge
aam
mov
popa
jl
insb
jns
sarb
dec
popa
cld
imul
xor
xor
push
push
lods
cmp
cltd
lret
pcmpgtw
push
adc
pop
jno
and
mov
inc
and
int3
adc
nop
stos
popa
sub
push
pop
ret
pop
cltd
add
out
into
and
push
daa
xchg
xchg
xlat
cli
dec
adc
dec
xchg
rclw
xchg
out
push
imul
dec
sub
mov
loopne
dec
jle
jne
xchg
pop
outsb
pop
jp
pushf
jg
arpl
inc
sti
sbbl
aaa
pop
sbb
mov
jbe
jl
ja
loopne
push
add
shlb
mov
add
lcall
mov
fistps
push
mov
imul
inc
xchg
stos
je
out
xchg
inc
in
xchg
js
stos
pop
outsl
xor
test
mov
in
pop
lds
cltd
in
pushf
stc
pop
mov
mov
adc
ds
aam
stos
or
aaa
xchg
sbb
daa
aad
or
in
xchg
sub
popa
push
fidivrl
nop
and
out
push
mov
sub
jno
dec
adc
icebp
sarl
insl
gs
mov
leave
sbb
cmc
jae
pop
test
jle
adc
lret
cld
ja
cmpsb
mov
xchg
into
or
inc
inc
dec
sti
mov
imul
js
or
mov
sbb
xor
outsl
adc
push
sub
mov
pop
pop
rorb
std
inc
stc
insl
lcall
fs
sbb
stos
cmp
xlat
mov
sub
pusha
fistl
xor
adc
adc
mov
push
das
sbb
sub
lods
out
cmpb
jns
stos
shll
jle
andl
cmp
gs
into
mov
inc
jmp
inc
jge
adc
mov
mov
repz
jnp
push
xchg
out
inc
mov
outsl
ja
pop
fsubrs
mov
mov
jb
sbb
mov
inc
cmpl
pop
pop
das
sub
cmp
mov
insl
faddl
or
out
push
pop
pushf
mov
es
sub
xchg
mov
add
sub
orl
lret
stos
insb
inc
repnz
cwtl
mov
sub
lret
sub
pusha
adc
adc
cmp
arpl
pop
mov
cmp
adc
inc
inc
test
jne
popf
or
dec
sbb
jnp
pop
lea
jmp
cltd
fucomp
mov
mov
nop
imul
sbb
loop
mov
jbe
sub
add
int
dec
inc
push
in
lret
cs
push
pushf
pop
movsb
aam
mov
xchg
js
dec
push
add
jmp
leave
cld
cmp
or
insb
mov
push
push
mov
inc
nop
out
mov
dec
adc
popf
pop
cmp
into
or
btr
adc
fisubs
imul
ljmp
xchg
loope
sbbb
mov
cwtl
push
iret
jno
test
in
add
sub
sbb
jnp
jmp
cmpsl
pop
mov
fimuls
pop
mov
xchg
pop
rol
rcl
cmp
outsl
popa
mov
inc
aaa
sub
psubusb
mov
mov
shlb
push
xchg
mov
xchg
xor
out
lahf
test
xor
xchg
jmp
add
push
xlat
sub
cmp
aam
dec
jmp
test
pushf
rcrb
test
jmp
jmp
enter
push
imul
out
dec
and
ret
aaa
add
sbb
sbb
lretw
icebp
repz
sub
leave
pushf
adc
xlat
in
mov
and
xchg
push
notl
push
test
out
push
mov
pusha
gs
repnz
cmc
fbstp
lock
lret
push
pushf
pop
sub
outsb
lods
and
sbb
push
es
call
shrl
adc
mov
rorl
sbb
in
out
lret
ja
das
mov
push
mov
xchg
mov
cwtl
jge
lea
mov
jecxz
jb
dec
mov
leave
adc
pop
fcomi
scas
xchg
jne
cmp
sti
push
enter
fcomps
mov
mov
cmp
aas
mov
mov
ds
mov
xchg
es
jp
mov
push
jns
in
pop
mov
test
push
stos
push
push
sub
sub
sbb
pop
ds
xchg
mov
out
push
adc
insb
mov
or
sbb
pop
scas
testl
stc
mov
and
add
movsl
cmp
cmp
aaa
scas
popa
pop
push
and
xor
mov
adc
add
scas
repnz
and
mov
add
ret
jecxz
out
fiaddl
movsb
or
mov
xor
xor
fxch
je
add
stos
gs
repz
testl
xorl
leave
shll
or
andl
sbb
or
adc
lods
push
dec
dec
xor
sub
stos
lcall
incl
sarl
mov
loopne
popa
xchg
icebp
inc
clc
lahf
rcr
scas
mov
sub
and
dec
dec
call
js
xchg
test
xor
push
xlat
adc
mov
lods
pop
popf
sub
mov
mov
add
mov
in
cmp
test
nop
cmp
xchg
lcall
addr16
mov
xchg
divl
pop
mov
inc
mov
mov
rcl
insl
jae
ss
addr16
push
dec
test
cltd
test
xchg
jns
cmpsl
cmp
jl
aas
mov
sahf
out
push
fs
das
push
xchg
fwait
mov
fisubrs
rclb
adc
push
ret
or
stos
push
adc
or
fisttpl
mull
xor
scas
test
movsb
or
sub
adc
pop
dec
pusha
call
out
pop
ret
ret
xor
sub
sbb
fimuls
dec
dec
mov
stc
jl
jmp
mov
push
cmp
sbb
gs
icebp
dec
pop
push
outsb
push
mov
repz
out
sbb
lcall
pop
pop
test
js
loope
push
push
mov
fisttps
cmc
test
repz
xor
mov
shll
and
sbb
repz
or
outsb
mov
jg
and
cs
pop
cli
nop
leave
ret
jg
loop
cmpsb
mov
dec
mov
pushl
sub
dec
mov
xchg
pop
mov
sarb
jp
xor
aad
lcall
shl
cmp
cltd
add
testb
sbb
mov
push
test
lea
daa
test
xchg
iret
mov
inc
or
push
sbb
scas
mov
ret
jb
mov
xchg
cmpsl
pop
aas
ljmp
cmc
mov
dec
mov
cmc
add
push
pop
adc
jp
pop
inc
mov
dec
imul
or
sbb
and
jmp
fdivrl
mov
jb
loope
in
and
call
insb
fs
adc
jns
subl
ja
cmpsl
sbb
sahf
mov
dec
pop
aas
xchg
psubb
sahf
inc
mov
cmp
cmovb
daa
pop
jge
push
frstor
clc
mov
and
shl
cmpb
mov
stc
insl
or
sub
nopl
push
lods
mov
xor
pop
sbb
lds
ret
inc
sub
mov
fnstenv
jmp
lods
xor
cmpsb
mov
mov
loopne
sub
xor
imul
lock
cltd
mov
push
stos
push
mov
jmp
mov
test
mov
movsb
mov
bound
scas
ja
sub
aad
and
xchg
xchg
or
sub
stos
or
pop
aam
aam
nop
cli
and
lods
cmovge
or
sbb
mov
insb
fs
sbb
popl
adc
cmc
std
sub
mov
mov
pop
mov
dec
jbe
pop
pop
gs
jb
jnp
ds
sbb
in
sub
mov
sub
cmp
jbe
or
mov
popf
bound
sub
pop
cmp
jb
es
inc
pop
pop
insb
push
push
pop
adc
xchg
ret
mov
xor
loop
xorb
fiadds
test
and
xor
xchg
sbb
hlt
bound
lods
cmp
or
push
cmp
or
push
xor
or
or
xchg
jns
push
arpl
rol
pop
gs
add
pop
dec
or
out
push
cmp
outsl
test
mov
insl
mov
push
pop
or
or
pop
popf
mov
int
push
outsl
cmpsb
adc
in
dec
ficoms
jge
test
out
xchg
push
push
mov
pop
pushl
mov
shll
not
jno
call
mov
in
pop
cmc
lds
push
push
jbe,pt
fimuls
and
out
ss
lea
test
mov
movsb
mov
xor
imul
dec
sbb
int3
mov
xchg
clc
repz
cmp
cltd
jns
mov
ss
ret
pushf
fucomi
bound
adc
dec
jp
dec
int3
rcll
sub
jecxz
mov
call
mov
jno
inc
pop
icebp
mov
repz
subl
cltd
ret
xchg
arpl
xor
cmp
clc
test
sbb
xor
ds
fbstp
sub
pop
or
push
in
lea
aaa
dec
cmpsl
pop
push
hlt
push
adc
adc
sub
pushf
aad
mull
hlt
lea
add
negl
adc
and
test
mov
test
clc
adc
fldt
enter
or
cmpsb
outsl
test
push
div
int
mov
imul
add
mov
add
lods
flds
hlt
mov
dec
mov
xchg
test
or
mov
push
and
push
mov
lds
test
fs
leave
icebp
dec
nop
mov
push
pop
imul
ljmp
pusha
shl
mov
out
xorb
add
fnstcw
scas
cmp
cs
ret
sub
cli
rcrb
fcomps
adcb
or
dec
leave
loop
insb
fcmovb
fcomps
inc
cmp
testb
or
mov
sbb
out
mov
loope
shll
inc
inc
add
rol
cmp
add
mov
mov
lcall
dec
and
fs
lock
push
mov
push
mov
movsb
fmuls
add
lea
imul
negb
cmp
pop
fsubs
xchg
pop
rolb
insl
xor
outsb
stc
decb
rcll
movb
cmc
daa
xor
add
ja
imul
mov
stc
test
xchg
dec
scas
sbb
push
jle
fs
jns
cld
mov
in
mov
push
dec
arpl
shrb
ffreep
or
jb
lcall
push
das
in
lds
xchg
notl
popa
mov
jae
out
lahf
repz
jl
dec
sub
jns
fisubrs
xlat
scas
push
xlat
fwait
loope
add
testl
push
lea
jae
mov
xchg
mov
mov
decb
jl
in
les
addr16
sub
jae
arpl
push
rorl
push
mov
inc
mov
xchg
mov
orb
out
stc
and
pop
jo
cmc
outsl
adc
bound
inc
jl
dec
or
out
testl
adc
mov
and
lahf
cs
in
addl
add
dec
jl
cld
pop
mov
ficompl
aas
int3
fdivrl
and
aad
push
inc
inc
and
jno
xchg
ds
loope
pop
and
outsb
mov
mov
mov
stos
jmp
pop
insb
stc
push
cmc
push
xchg
push
stos
mov
jp
or
mov
pop
mov
inc
cmp
mov
push
or
add
xor
mov
push
pop
mov
inc
mov
fistpl
or
dec
mov
dec
jae
fldl
inc
scas
mov
adc
dec
push
cltd
pop
nop
or
popf
push
cld
jle
or
ljmp
or
push
popa
sub
push
and
jnp
inc
rcrb
loop
push
pop
fwait
add
ja
add
adc
popf
push
or
jnp
repz
gs
inc
lods
mov
int
lds
test
out
out
sbb
jb
int
lods
leave
pusha
push
jae
inc
out
xor
lock
lcall
sbb
in
pop
int3
jl
testb
inc
and
xlat
aam
xchg
add
rcr
xor
add
jbe
ret
fistl
out
pusha
test
add
lods
movsl
fwait
mov
pop
sub
push
pop
and
stos
fcmovb
outsb
sub
xchg
dec
ss
jle
test
fdivrl
cli
mov
push
es
mov
js
sbb
dec
les
imull
xchg
pop
outsl
jae
gs
push
les
xchg
dec
or
pop
addl
xor
out
dec
add
xchg
sub
sub
add
jbe
sti
inc
inc
adc
inc
jecxz
shlb
fcom
pop
adc
out
xchg
xchg
or
xchg
mov
test
cmp
jmp
xor
adc
icebp
imul
lcall
das
cmp
nop
inc
addr16
push
cmp
fidivrs
ret
fnstenv
rolb
mov
sbb
push
inc
push
lods
sub
loope
or
cmp
lahf
leave
outsl
enter
dec
lock
fnstsw
jmp
lcall
iret
xchg
push
fiadds
into
dec
mov
rcrl
mov
xchg
arpl
mov
inc
add
add
negb
inc
ret
dec
cmp
and
adc
setno
push
xor
hlt
orb
jb
rolb
cmc
adc
push
pop
pushf
mov
insb
loopne
xor
icebp
mov
sub
in
cmc
ret
dec
out
repz
sbb
dec
jecxz
dec
hlt
stos
mov
fmuls
xchg
inc
jge
iret
std
mov
hlt
jp
push
insb
ret
in
ljmp
cmp
xchg
out
test
and
mov
xchg
aam
mov
pop
rcll
push
ja
add
sbb
add
or
or
insb
or
pop
out
dec
add
xchg
jb
pop
cltd
scas
inc
in
cs
jns
mov
mov
fcomps
lea
push
mov
movsb
cmp
jb
inc
xor
adc
xlat
pop
ss
nop
jae
pop
por
inc
leave
pop
push
jl
xor
test
shll
por
cmp
mov
jmp
shl
dec
ja
mov
xchg
enter
mov
xor
loop
int
inc
in
or
mov
jae
rclb
add
pop
jge
sbb
rcll
outsl
popf
push
ljmp
fidivs
or
jnp
aaa
aad
push
cmp
add
add
sub
mov
adc
pop
mov
or
out
inc
mov
and
lahf
cwtl
sbb
mov
sarb
mov
insl
fistl
jns
lcall
test
and
mov
inc
xor
call
btc
sbb
popf
mov
xlat
sete
test
xchg
sbb
mov
addr16
mov
test
insb
mov
int3
arpl
or
int
loope
fimull
push
inc
and
adc
jmp
mov
add
mov
xchg
fisubrl
xlat
pusha
faddl
and
aas
push
flds
mov
loopne
or
mov
xor
sbb
mov
inc
xchg
arpl
cmp
stc
xor
sub
into
dec
pop
arpl
xor
pop
arpl
pop
mov
fcmovnu
mov
cwtl
popa
mov
xor
mov
push
push
sbb
clc
mov
push
jns
mov
imul
xchg
pushf
pop
xchg
enter
hlt
icebp
cmp
inc
pushf
call
dec
jae
test
lret
pop
dec
mov
std
mov
pop
cli
inc
imulb
ret
das
lcall
pop
mov
xor
xor
mov
mov
es
sub
sub
imul
xchg
jo
push
cli
and
dec
scas
ss
push
jae
in
sarl
mov
addr16
ss
cltd
fnstcw
ret
fimull
pop
mov
loop
out
hlt
lea
push
sub
loope
xchg
shll
clc
clc
mov
mov
daa
mov
bound
fnsave
add
or
and
inc
adc
sbb
inc
mov
ljmp
xchg
out
movsb
in
jns
or
cmpsb
sub
fisttpll
pop
xchg
dec
je
xlat
xor
std
dec
adc
jecxz
pop
mov
cmpb
loop
sti
add
mov
or
mov
mov
pop
jo
dec
cld
adc
push
mov
lret
loopne
mov
push
int
imull
add
inc
insl
adcb
pop
adc
icebp
inc
outsl
mov
enter
xchg
jne
bound
inc
jnp
jge
lret
add
call
fildl
mov
adc
cli
loop
popf
in
and
mov
cld
das
and
fbld
dec
imul
sbb
fst
int3
out
push
mov
and
fistpl
das
test
inc
mov
push
mov
mov
bound
cwtl
in
sarl
stos
cmp
lret
add
sti
fsubl
shlb
mov
and
in
popa
xchg
dec
flds
jbe
es
mov
lcall
cmp
movsb
fnstsw
pushf
sti
fistps
les
negb
mov
cmp
pop
mov
clc
inc
data16
test
movsb
cmp
adc
push
sbb
js
movsb
adc
enter
in
out
orb
and
cmp
pop
jns
je
cmpsb
mov
std
fiadds
mov
lods
mov
dec
popf
fucom
popf
mov
adc
subl
in
inc
xor
pop
dec
lock
icebp
cmp
lods
mov
scas
xor
lret
or
test
cmp
insl
or
repz
inc
lahf
in
mov
lods
cli
xchg
scas
imull
pmaddwd
insl
pushf
movsb
dec
inc
popa
jae
push
adc
xor
aam
sbbb
cwtl
repz
adc
lret
inc
pusha
pushf
aad
cli
dec
pop
dec
adc
mov
mov
mov
imull
jb
movsb
or
mulb
mov
inc
push
cmp
loope
mov
aad
std
sub
jmp
cmp
push
movsb
mov
dec
repnz
add
arpl
mov
out
lock
jnp
push
gs
ds
aas
mov
stos
je
xor
fs
cmp
pop
mov
xchg
mov
xchg
cmp
push
inc
mov
enter
mov
ljmp
adc
add
pop
int
add
pop
xorb
stos
mov
les
mov
adc
cmc
xchg
roll
add
fwait
js
sbb
sub
mov
cmp
ljmp
cmpl
in
mov
ljmp
fs
lds
sbbl
les
add
lret
daa
fnstsw
arpl
clc
xchg
lcall
adc
mov
mov
stos
mov
rcr
add
add
clc
xor
cli
aas
ss
fnstcw
push
add
out
add
xchg
lcall
jmp
data16
rcr
push
insb
outsb
scas
movsl
daa
popa
call
push
push
shl
mov
sub
call
mov
test
push
mov
das
test
inc
out
ret
cs
xor
imul
jne
xchg
jne
in
adc
inc
jbe
data16
jno
jns
xor
hlt
mov
pusha
xchg
sbb
add
dec
in
in
adc
movsl
pop
mov
pop
lret
loope
push
sbb
aad
lar
cmpl
lds
out
aad
fs
add
das
lret
xchg
lret
jle
call
mov
test
aaa
fisttps
or
xor
sub
add
jecxz
sbb
lahf
mov
xchg
sbb
mov
xlat
mov
rorl
aam
and
dec
sub
int3
or
xchg
inc
pop
pushf
fnstenv
mov
std
pop
xchg
out
push
out
movsl
sbb
leave
into
add
imul
xor
popl
push
mov
arpl
mov
cmpsb
mov
sub
xor
ds
pusha
xchg
xor
or
rolb
push
cmp
dec
ret
out
push
push
adc
stos
ds
inc
jno
mov
idivb
out
push
pop
mov
pop
pop
mov
inc
subl
add
lds
pop
jbe
je
jo
pop
ljmp
push
sub
sub
sub
paddq
mov
jns
sub
push
popf
pop
aad
imul
xor
sbb
cmp
dec
popa
jae
or
sti
xor
or
test
dec
jb
fiadds
push
and
test
nop
or
mov
sar
xchg
inc
push
pushf
test
mov
mov
ss
dec
push
nop
mov
bound
xor
clc
ja
sub
fcomp
scas
test
push
push
cs
dec
out
js
xchg
sbb
sarb
lock
mov
mov
dec
push
dec
sbb
add
mov
stos
sbb
js
popa
movsb
jb
inc
gs
cltd
sahf
mov
fwait
mov
aad
pop
cmpsl
push
dec
mov
js
fcmovnbe
add
ficompl
int
and
outsl
into
hlt
mov
jecxz
inc
sbb
mov
ret
mov
outsl
fistpll
ss
xor
icebp
into
inc
into
pop
jns
hlt
fildl
push
mov
cmp
add
dec
lret
fldcw
ret
xchg
jns
hlt
cmpsl
xchg
in
xchg
or
gs
mov
jo
int3
sarb
jp
add
fstps
or
sbbb
mov
mov
push
mov
xor
cld
mov
mov
push
ja
xchg
pop
adc
cmp
loopne
nop
push
or
lea
imul
int3
mov
sbb
imul
mov
cmp
ss
jmp
xor
into
add
sti
lret
cmp
popa
mov
outsb
cmp
aam
xor
loopne
lret
and
movsb
add
mov
fwait
neg
xor
pop
in
fildl
xchg
cld
sbb
inc
out
cwtl
dec
inc
popa
ror
popf
or
add
ds
inc
or
jge
sub
out
sbb
scas
pop
ficomps
cmp
insb
and
or
push
js
jo
rclb
cwtl
dec
dec
add
mov
es
mov
cmpb
das
mov
jge
mov
lahf
sbb
mov
and
pop
daa
and
push
sub
imul
pushf
jmp
out
ret
xchg
sub
repz
mov
xor
jmp
subl
lods
mov
pop
mov
rcrl
sub
mov
int
xor
mov
jg
and
dec
inc
sbb
jbe
movsb
push
push
dec
clc
imul
mov
mov
cmp
dec
mov
imul
push
mov
inc
in
addr16
lods
sub
fidivl
mov
fdivs
inc
cmp
sbb
xor
jne
mov
aad
inc
lahf
jbe
mov
push
fmull
das
cltd
sbb
out
in
cmp
repnz
scas
push
dec
sub
xchg
push
movsl
call
mov
jne
out
jb
push
add
lea
push
pusha
imul
jmp
xlat
xor
mov
jg
jno
ret
sbb
lcall
inc
es
into
int3
push
popa
xchg
sbb
inc
jb
inc
int
dec
rolb
lcall
push
ret
pop
mov
mov
lods
fadds
or
test
dec
subl
stos
jecxz
movsb
and
in
inc
xchg
lods
inc
mov
cli
mov
inc
test
push
lds
push
rep
fsts
sub
ficoml
inc
dec
push
jnp
lret
push
jno
add
push
mov
in
adc
fwait
xchg
mov
and
test
jae
push
negb
out
fmuls
sbb
les
into
leave
test
jb
or
mov
pop
scas
inc
pop
bound
repz
loopne
enter
mov
cltd
loop
ljmp
adc
ret
adc
or
cmp
movsb
pop
sub
shr
xchg
test
gs
sub
push
jb
insl
mov
pushf
mov
adc
push
aam
mov
mov
lea
and
mov
test
fdivrp
sbb
jae
sahf
icebp
loopne
arpl
push
sub
aad
out
mov
push
mov
adc
add
push
xchg
lods
and
xor
shrb
stc
cli
and
ds
adc
or
movl
mov
cmp
and
enter
and
xchg
out
popa
cmp
lret
adc
cmpsb
jge
in
stos
sarl
lret
mov
mov
and
in
sbb
cld
cmc
jecxz
dec
call
in
stos
mov
add
sub
mov
test
jae
push
aas
jns
push
fistps
sub
repz
cvtps2pd
lds
add
ds
bswap
push
jbe
std
aam
cmp
cmc
jnp
loopne
cli
adc
mov
cs
shlb
or
shl
aad
test
stos
mov
data16
cmpsl
stc
push
jns
cmpsb
in
fcomip
sub
popf
adc
stc
cmpsl
xchg
sub
adc
xchg
push
fdiv
mov
cmp
imul
sub
ret
jl
mov
repnz
orl
aas
aad
mov
add
cmp
pop
push
enter
loop
mov
jns
es
inc
daa
jmp
xchg
and
ret
push
cld
stos
icebp
shlb
adc
mov
loop
js
jl
lahf
add
loop
imul
inc
orl
jns
int
add
cs
rorb
aam
inc
adc
pusha
je
fcoml
movsl
xchg
adc
jnp
sub
add
mov
mov
lret
orb
loopne
sbb
addl
into
cmp
mov
data16
jo
add
sbb
jg
insl
or
mov
loope
pop
repnz
jns
lcall
repnz
inc
xlat
or
stos
leave
in
mov
test
aam
cmp
ret
sarb
add
mov
push
lods
mov
mov
sbb
pop
dec
mov
xor
inc
xchg
or
dec
test
jb
lret
jae
ljmp
stos
pop
mov
stc
loop
es
pop
mov
sar
or
push
hlt
mov
lods
insl
icebp
stos
or
mov
jne
rorl
inc
lea
cwtl
ja
cltd
popa
sbb
repz
xchg
outsl
mov
pop
push
mov
jge
or
dec
dec
in
data16
arpl
jl
out
fstl
push
xchg
xor
in
xchg
push
mov
add
dec
ss
push
mov
push
ret
lods
jmp
jns
lock
ret
xor
jne
repnz
repz
in
sub
mov
insl
imul
int
call
sub
sub
cmp
push
insb
and
fistpl
add
add
mov
jns
loopne
insl
inc
xor
xlat
push
inc
fcmovbe
mov
sbb
or
sub
sub
popa
sbb
sarl
mov
sub
cmp
out
hlt
push
out
in
inc
mov
pushf
xor
out
std
inc
in
xchg
lret
out
jne
jbe
and
xchg
xchg
lods
and
cwtl
xchg
cmp
in
ficoms
jae
fdivp
int
mov
mov
mov
sbb
pop
mov
cld
stos
scas
pop
cwtl
int3
inc
daa
sub
jmp
movsb
xlat
sti
ret
jns
mov
es
stos
lea
jp
dec
inc
ds
adc
dec
sbb
sbb
aaa
iret
mov
push
xchg
jmp
mov
stos
pusha
lods
popf
shlb
mov
pop
scas
mov
add
add
inc
jecxz
enter
dec
mov
popf
fidivs
leave
shlb
inc
mov
adc
inc
lds
test
xchg
rcl
les
add
aaa
in
adc
or
or
out
dec
clc
inc
ss
lea
mov
add
aas
push
movsb
fbstp
pushf
add
daa
dec
inc
sbb
sti
test
addr16
fmull
push
push
pop
icebp
cmp
lea
jb
in
cmp
loope
clc
sbb
data16
imul
insb
imul
inc
xchg
std
cmp
sahf
jle
sti
mov
cs
rclb
enter
inc
les
adc
popf
ret
xchg
mov
lods
push
sub
and
pop
lahf
jne
nop
sub
push
in
movsb
add
loop
andb
aad
das
ds
ljmp
movsl
dec
ds
jge
rcrb
pop
mov
push
pop
ja
fimull
popa
jbe
xchg
or
fsubl
jge
dec
and
dec
jle
jns
movsl
in
adc
pop
and
jg
mov
xor
or
aad
add
and
or
push
shlb
int
fadd
lods
or
push
add
icebp
jo
fsubrp
into
xchg
test
outsb
ds
arpl
pop
enter
hlt
subl
pop
test
push
sbb
mov
mov
cltd
mov
and
mov
insb
sbb
push
dec
sti
push
dec
gs
dec
test
or
xchg
testl
add
sbb
fistps
adc
je
xchg
fs
insl
ss
daa
cmp
sahf
sub
cltd
and
js
push
xchg
cltd
adcl
nop
out
imul
mov
aaa
or
rcl
and
int
ljmp
fwait
jb
out
test
xchg
jne
imul
sbb
push
outsl
stos
sub
mov
stos
pop
rcrl
roll
iret
mov
cltd
jecxz
and
leave
mov
ret
cmp
shrl
lret
arpl
inc
mov
test
rcl
sar
das
pop
lret
js
inc
movsb
push
hlt
pop
pop
or
xor
mov
ja
cmpsl
xor
div
adc
jl
in
pushf
mov
inc
mov
movsl
imul
mov
nop
mov
fcmovbe
mov
push
scas
fwait
out
mov
nop
xchg
lock
lea
and
jbe
and
mov
lods
ds
inc
jo
loop
push
xchg
jbe
fistpll
bnd
shll
mov
and
out
jge
push
push
in
dec
xor
mov
lods
inc
mov
aaa
pop
in
sbb
mov
xchg
jnp
hlt
pop
dec
ret
mov
cmp
push
xor
repnz
inc
cwtl
scas
rcr
aas
clc
xor
jo
test
xor
and
fidivs
ljmp
sbb
mov
pop
push
popf
out
mov
mov
fistps
div
xor
sbb
cmp
cmp
loopne
adc
mov
or
mov
mov
icebp
movsl
mov
add
push
push
movsb
clc
je
lods
inc
xlat
daa
adc
fldt
mov
sub
jb
sahf
repnz
cmp
inc
xchg
or
cmp
testl
popa
add
loope
xchg
and
cmp
jp
sarb
dec
pop
hlt
cmpsl
xor
xor
adc
sub
fucomip
push
les
xchg
cmp
mov
test
and
and
fs
push
push
mov
arpl
push
leave
pop
insl
mov
add
out
shll
iret
cs
mov
and
test
and
andl
push
pop
add
pop
cmp
popf
xchg
fistps
ja
mov
leave
or
leave
push
shll
pop
and
jecxz
and
dec
std
out
lea
dec
pop
dec
sbb
ljmp
and
in
mov
testl
iret
mov
icebp
push
inc
dec
mov
mov
pop
fnstsw
mov
add
loope
mov
ljmpw
es
sbb
mov
add
fwait
mov
push
add
sahf
xor
ljmp
push
jbe
pop
int
cmp
int
nop
xor
sub
mov
lret
aad
insl
inc
fildl
dec
ja
lcall
dec
xlat
adc
and
push
add
stos
mov
mov
mov
outsl
hlt
idivb
daa
test
fnstsw
jmp
into
loopne
xchg
gs
mov
imul
mov
cmp
dec
fstps
ja
and
push
mov
es
pop
fdivrl
mov
adc
arpl
aad
arpl
dec
iret
jno
sub
push
fiaddl
or
jge
and
pop
mov
mov
or
mov
and
and
cmpsl
aad
dec
int
add
lods
bound
mulb
test
push
das
mov
mov
movsl
and
dec
or
lods
std
push
and
xchg
push
mov
sub
push
xchg
sub
mov
adc
xchg
jg
daa
or
sbb
push
popa
dec
xchg
cmp
jle
nop
ret
pop
insb
adc
xor
out
gs
adc
add
in
mov
pop
in
or
jno
dec
fstps
mov
and
xor
and
lcall
adc
mov
test
daa
sar
imul
sbb
dec
or
in
and
cmpb
mov
fstpl
mov
inc
loop
je
cmp
nop
push
repnz
push
ret
leave
xchg
leave
shrb
jmp
inc
jne
aaa
adc
cmp
lcall
fisubs
push
jp
jo
stc
lock
out
mov
stos
in
repnz
jbe
sbb
adc
movsb
sbb
pop
pop
and
xchg
lea
xchg
jo
mov
lret
mov
es
inc
sub
out
inc
das
fistpl
int3
into
lods
and
sub
mov
dec
mov
jb
fcoml
mov
loop
cmp
sbb
and
lcall
xchg
aaa
imulb
hlt
lcall
orb
xchg
scas
nop
push
nop
jns
iret
jb
mov
cwtl
mov
das
icebp
mov
jmp
in
mov
push
lds
ret
clc
std
loopne
sbb
or
andb
int
fwait
adc
xor
test
xor
mov
cld
cltd
xor
daa
ffree
ds
mov
test
test
xor
nop
stos
or
clc
and
mov
shll
in
add
dec
xorl
and
rorb
push
out
loope
ret
negl
lret
or
and
or
cmpl
test
jg
data16
jg
push
mov
cld
mov
push
outsb
adc
aas
pop
pop
pop
fcoml
adc
sub
into
inc
push
mov
lds
out
movsl
xor
xor
push
mov
outsl
cmpl
lret
xor
mov
mov
insl
in
cmc
lock
jl
in
push
xor
or
dec
mov
out
mov
mov
fistpll
and
inc
sbb
shrl
sub
insl
mov
xchg
sbb
test
rcrl
inc
dec
xchg
jecxz
sarb
data16
mov
mov
mov
mov
test
outsb
xorb
sbb
mov
shrl
andl
daa
mov
add
into
out
mov
cltd
dec
adc
adc
shll
sub
cmp
dec
mov
and
add
lods
sub
ljmp
pusha
xchg
int
int
mov
test
clc
sub
jge
hlt
dec
mov
lds
xchg
aam
mov
fs
pop
loopne
outsl
mov
jno
add
adc
push
imul
jge
test
vpcmpeqd
repz
jno
push
jns
mov
sbb
gs
fistl
and
jno
push
xacquire
fwait
mov
jns
xchg
lahf
and
ss
lret
push
add
adc
popa
push
inc
mov
inc
push
xor
mov
arpl
mov
push
ljmp
dec
and
sbb
rcll
push
jge
adc
lret
add
cs
mov
pop
jl
aad
push
lahf
push
jmp
mov
jne
mov
mov
mov
mov
test
call
jns
lea
adcb
into
fs
lock
sarl
mov
or
push
mov
movsl
sbb
lahf
out
ret
add
xor
xor
xlat
nop
mov
or
mov
repz
test
stc
pop
xor
les
or
dec
jne
cld
lock
arpl
jmp
jg
dec
shll
lock
aaa
mov
push
pop
lea
ja
mov
js
shr
push
xor
out
xchg
xorl
aad
pushf
lret
mov
test
icebp
sbb
pop
mov
std
orb
ljmp
js
icebp
test
mov
call
adc
adc
fidivrs
pop
mov
sub
popa
push
mov
lea
test
movsl
sbb
out
shlb
hlt
outsb
stos
rorb
or
fadds
inc
jns
mov
addr16
pop
imul
ret
adc
and
fdivl
lret
pop
mov
or
addr16
or
mov
imul
jl
mov
mov
jl
inc
mov
paddw
pop
adc
cmp
xchg
cmpsb
xchg
pop
int3
scas
or
sbb
imul
cmpsb
negb
outsl
rcrl
test
int
mov
aaa
jb
gs
pop
iret
mov
mov
push
adc
cltd
adc
and
mov
sub
jmp
push
negl
lret
mov
cmpsl
jge
rorl
mov
in
int3
fdivrl
mov
pop
mov
shl
stc
ror
pop
dec
stos
cltd
js
jo
dec
orb
push
xlat
and
adc
adc
out
pop
pop
push
int3
imul
pop
out
cmp
mov
loopne
dec
or
mov
iret
adc
rcrb
and
push
and
rcll
dec
insb
or
out
mov
shr
add
into
mov
mov
adc
in
or
popf
jne
test
orl
push
inc
pop
xchg
add
ret
lock
shrl
out
loop
cmove
xchg
xorl
fiaddl
cmc
test
mov
int3
cltd
mov
xchg
sbb
xlat
inc
push
int3
dec
aas
inc
inc
call
xchg
fstl
rolb
mov
jge
and
scas
xadd
dec
shlb
mov
fdivp
inc
mov
loopne
pop
mov
jbe
fdivrs
in
jo
jmp
xor
test
xor
aad
fildl
xsave
xchg
scas
mov
xchg
adcl
sbb
mov
xor
jbe
or
push
and
xor
sbbb
ret
pop
xchg
movsb
sub
and
xor
pop
out
xchg
inc
aad
dec
jmp
xor
test
jmp
fldt
xchg
jle
mov
dec
ret
fsubl
mov
mov
xor
inc
test
cltd
add
jge
notl
aad
add
iret
fs
cs
test
lods
scas
jge
aaa
je
lock
push
xchg
xchg
sbb
call
je
enter
inc
mov
inc
addl
push
cmpsl
pop
cwtl
mov
mov
sar
fstpt
sub
cmpsb
sbb
rcrl
daa
cmp
pop
jmp
aad
dec
cwtl
sbb
cmp
and
xchg
adc
dec
pop
and
in
lea
fildl
mov
ret
cmp
into
test
cmpb
aas
icebp
scas
lahf
jae
jno
and
dec
push
push
pop
mov
xor
mov
std
rcl
enter
adc
push
jns
adc
sbb
ja
mov
movsb
push
dec
cs
xchg
into
test
adc
js
aad
sbb
jns
ret
fnstenv
xorl
mov
inc
out
lretw
mov
pop
push
iret
scas
jo
insl
inc
or
sbb
loopne
fsubrl
gs
dec
outsb
movsl
jle
or
fwait
daa
dec
sbb
or
divb
cmp
stc
into
inc
insl
add
out
mov
and
daa
leave
jno
add
xchg
sbb
cmpsl
or
and
andl
push
mov
std
clc
ficoml
repnz
out
sub
pop
es
xchg
xor
outsl
lret
lahf
push
aas
and
mov
sub
shl
orl
lods
or
popf
test
mov
cmp
in
push
pop
sti
and
dec
aaa
jne
cmpl
aas
xor
mov
adc
outsb
or
pusha
iret
mov
xor
aaa
add
mov
sub
xchg
cltd
xchg
dec
jb
add
in
dec
xor
jns
idivl
add
and
jecxz
pop
mov
jbe
sbb
dec
inc
fsub
outsl
call
movsb
shrl
or
insb
out
cmp
loopne
in
push
movntq
out
das
mov
mov
add
pop
or
inc
xchg
add
push
xchg
and
pop
int3
mov
push
or
jae
dec
int
movsl
out
orb
rcrb
jge
loopne
xor
dec
add
xor
in
pop
mov
mov
or
bound
lret
rcll
push
hlt
add
adc
sti
jno
inc
mov
fdivl
adc
mov
int
sarb
fcompp
xor
xchg
rorl
and
addb
ds
xor
fnsave
xor
xor
lahf
or
jbe
out
or
mov
inc
in
adc
xor
or
or
call
imul
pop
rclb
mov
xchg
add
in
cmpsb
mov
in
xchg
gs
xchg
jb
jle
lahf
mov
movb
ds
les
sahf
push
mov
dec
xchg
and
aam
jge
or
adc
ss
movsl
std
push
and
sbb
xchg
int
pop
mov
add
inc
push
adc
xor
sbb
inc
sti
repnz
dec
movsl
add
insb
jecxz
es
in
jnp
mov
std
loop
cmpsb
stos
sub
cmpsl
imul
int3
jno
sub
mov
push
movsb
loope
push
push
cwtl
es
aaa
sbb
stos
jbe
popl
test
repz
add
mov
add
stos
push
xorl
jae
cli
inc
xchg
nopl
imul
sub
out
rcrb
aam
in
jno
mov
das
mov
leave
popf
icebp
clc
pop
je
pop
enter
cld
enter
shr
sbbb
imul
sahf
enter
loope
sbb
sub
and
mov
inc
xchg
fsubrs
and
out
pushfw
int
aas
dec
mov
and
dec
mov
lcall
call
cmp
les
or
stc
cmpsb
loopne
imul
arpl
lods
mov
out
lret
lods
adc
out
scas
nop
shrb
dec
pop
ljmp
lds
sub
push
aas
mov
outsl
aaa
aad
dec
sahf
das
xchg
sbb
xchg
fdiv
int3
mov
divl
xchg
fisubl
repz
data16
adc
jge
lods
jmp
das
dec
aam
shll
sbb
push
popf
add
fcompl
pop
inc
sub
fmuls
aad
call
popa
sar
fnsave
test
movsb
push
add
xor
popf
mov
cltd
shlb
sub
data16
inc
enter
fmull
sahf
mov
jns
icebp
push
inc
jo
aam
adc
push
add
shll
cli
dec
jmp
pop
in
jp
add
cli
lods
push
in
clc
mov
stos
ja
movsb
jns
loop
roll
lahf
add
adc
out
mov
cmp
stos
mov
xchg
pop
cmp
rcrl
out
in
inc
push
into
jmp
movsb
adc
mov
fadds
sahf
push
mov
add
data16
inc
or
pop
imul
xor
insb
jge
inc
enter
pop
out
movsl
add
repnz
add
inc
clc
mov
stos
or
iret
mov
lds
fstps
rolb
ret
inc
jb
jns
and
sub
push
movsl
push
sub
nop
xchg
adc
or
fildll
lahf
push
cmp
push
mov
stos
sbb
aas
cmp
or
mov
addr16
inc
xchg
test
pop
adc
ja
jecxz
xor
adc
call
movsb
xchg
sub
leave
out
in
aas
es
outsl
repz
repnz
mov
push
sar
addr16
adc
xor
fcom
dec
add
mov
xchg
mov
adc
sbb
add
fwait
pop
sarb
je
inc
stos
cld
and
push
mov
test
aaa
stos
push
jns
sbb
stc
fstpt
cli
xor
mov
dec
aad
push
pop
in
repz
repnz
shl
xchg
addl
sbb
mov
mov
push
iret
std
into
aas
pop
xor
aam
mov
ja
add
out
clc
xlat
sbb
loope
sbb
fs
test
jmp
add
sub
xchg
sbb
or
mov
push
movsl
push
sahf
fsts
insb
add
mov
sub
adc
fisubl
sbb
push
imulb
mov
sbb
js
movsl
fmuls
mov
push
test
mov
push
into
cmc
int
fisubrs
cmp
xor
and
sbb
inc
xor
xorl
into
jp
lods
scas
pop
div
subl
std
dec
xor
ss
push
sbb
and
xchg
and
imul
shlb
mov
add
jecxz
adc
test
hlt
cmpsl
imul
inc
vrcpss
call
and
dec
test
push
push
repnz
xlat
jge
adc
and
sahf
imul
jle
sbb
push
test
lods
adc
pop
in
fwait
mov
xchg
out
mov
pop
imul
icebp
mov
adc
xchg
xchg
loop
pop
sbb
jp
rcrb
pop
pop
add
xor
test
cmpl
mov
pop
adc
push
push
mov
cmpsb
cld
fwait
jl
inc
movntps
push
int
cmp
mov
and
arpl
test
je
pop
in
inc
out
lahf
pop
xor
sbb
xchg
pop
addr16
fstps
cmpsb
mov
pop
into
clc
and
jg
fstpt
or
pop
nop
sub
sarb
fdivrl
loope
into
jnp
popa
xlat
sbbb
mov
movsb
fwait
lcall
shlb
cmpsb
inc
lcall
jb
mov
mov
jo
mov
ret
xchg
out
or
aaa
jno
in
mov
xor
xchg
push
das
push
mov
or
es
jl
xchg
mov
lret
iret
mov
fs
mov
popa
add
push
stos
fprem
xor
pop
cmp
xor
jno
jns
imul
imul
sub
xchg
cs
add
dec
and
jge
adc
mov
pop
fisubs
sahf
popa
mov
enter
scas
push
pop
xchg
xor
in
nop
sbb
xor
cmc
stos
xchg
fs
xchg
inc
repnz
cwtl
les
xchg
jp
stos
daa
push
fldt
sbb
lahf
push
sti
fadds
das
sbb
mov
iret
xchg
movsl
jg
in
addl
mov
cli
ja
pop
jge
lcall
mov
jmp
inc
sub
popf
pop
ret
push
outsb
mov
pop
mov
shlb
sbb
sbb
dec
jp
mov
jmp
xor
call
mov
jb
mov
mov
sub
adc
jbe
in
mov
or
inc
xchg
jl
pusha
adc
add
add
ja
cmp
push
push
fmull
push
cmp
dec
ja
into
iret
mov
sub
cli
out
lds
jp
mov
adc
and
jae
fdivr
pusha
ja
es
shl
enter
or
and
push
mov
scas
sub
mov
shll
dec
mov
aas
into
cli
test
mov
jnp
pushf
xor
add
xor
pushf
ljmp
inc
ret
dec
aam
jo
add
cmp
jge
xor
xor
cmpb
sbb
aad
or
push
js
cmpsl
shll
fnstcw
push
mov
adc
jg
into
push
adc
lret
pop
sti
ds
cs
xor
mov
hlt
je
and
xchg
sub
pop
andl
inc
mov
sub
bound
outsl
imul
icebp
or
loop
mov
and
mov
loopne
movsl
jl
adc
pusha
les
inc
push
jmp
and
mov
sub
je
test
dec
push
sub
sbb
add
lret
dec
les
pop
roll
mov
or
sub
inc
cli
cwtl
cmc
mov
xchg
or
pop
data16
loope
mov
xchg
sbbb
mov
sbb
test
test
mov
pop
ja
cmp
lret
ss
add
outsl
rcrl
jbe
mov
daa
pop
sbb
mov
loopne
cmp
add
xchg
push
mov
rcrb
das
fistpl
push
or
adc
test
xor
add
jecxz
sbb
jmp
sahf
sub
mov
mov
idivl
and
stos
pop
ss
sbb
xchg
std
adc
ds
imul
mov
mov
popa
xlat
js
fiaddl
dec
aas
lcall
cld
mov
es
movsb
loop
rol
outsb
cld
lea
hlt
sarb
clc
repz
addb
mov
iret
dec
xchg
cmp
bound
pop
mov
pusha
cmp
mov
jae
daa
or
cmpsl
mov
push
stos
pop
addr16
pop
into
imulb
push
push
push
fcompl
mov
les
sub
sub
or
mov
sub
imul
aas
and
imul
fidivrs
fildll
shrb
int
out
stos
push
or
xchg
xor
je
icebp
sti
push
jbe
sub
pop
and
sahf
jno
sbb
dec
jl
inc
sahf
loopne
call
cwtl
hlt
imul
dec
and
xchg
mov
xor
mov
sbb
loop
insl
fisubrs
xchg
xor
mov
pop
mov
cld
gs
push
out
jmp
adc
rolb
incb
enter
mov
mov
out
fldcw
jbe
push
aas
out
ljmp
pop
cmp
movl
jl
cmp
fdivp
jp
dec
sahf
andl
or
jne,pt
push
cli
into
ljmp
xor
iret
dec
shll
idivb
fisubl
pop
jp
scas
jp
mov
push
pusha
dec
sub
dec
xchg
cmp
fldenv
cwtl
in
in
jmp
leave
inc
or
lret
pop
out
add
inc
pop
testb
sub
xchg
mov
mov
idivb
in
data16
lock
jns
cmp
rol
pop
sahf
cmc
imul
inc
xchg
cltd
sub
xor
add
add
add
test
cmc
jmp
push
or
or
xor
jbe
imul
cmp
add
shlb
lock
xchg
je
adc
mov
sbb
adc
adc
xchg
and
pop
xchg
movsl
sbb
fsubrl
pop
sub
loopne
cmc
jae
sbb
mov
mov
aam
jp
push
xor
xchg
jl
cmp
push
xor
push
ret
cmp
sub
into
cmp
jbe
push
cmp
fistps
lret
add
jae
sbb
lret
fstl
jmp
imul
insb
push
xchg
sbb
pop
movsb
jl
ret
push
leave
in
push
data16
push
ljmp
lcall
popl
lock
push
mov
inc
xchg
call
mov
mov
bound
imul
cltd
mov
iret
mov
xchg
in
test
dec
js
movsb
mov
or
imul
mov
lods
lock
ljmp
jg
mov
rorl
xor
mov
xchg
add
sub
mov
out
or
push
ret
cmp
movsl
ror
or
int3
pop
and
nop
mov
loope
xorb
daa
fisttpll
lret
ret
pushf
scas
ljmp
mov
jmp
aas
fnstsw
insb
aaa
xor
jns
xor
xorb
popf
fwait
inc
out
aam
insl
dec
fdecstp
fdivl
cld
mov
scas
pop
fwait
cld
mov
sub
pop
adc
test
cmc
pop
cmp
jbe
push
lret
mov
in
popa
sub
fstpt
sbb
sub
jo
pop
cmc
jae
xchg
aas
xor
lea
in
or
jl
aas
xchg
addb
sub
pop
mov
xchg
ja
pop
adc
out
or
sbb
mov
jbe
sahf
xorl
sbb
push
call
sub
orl
cli
adc
ds
mov
cmpsl
scas
shrb
cld
adcl
cmp
nop
mov
int
and
push
iret
mov
xchg
cmp
push
flds
pop
fdivs
adc
dec
cld
push
int3
loopne
sub
lock
iret
popf
adcb
stos
push
inc
xor
xchg
data16
ror
inc
jg
jbe
kaddb
add
outsb
stc
or
aad
test
mov
and
sub
cmp
xchg
shll
jle
imul
je
xchg
movsb
sbb
jno
add
cmp
cmp
hlt
adc
call
pop
shl
inc
add
cmp
and
mov
cli
xchg
cmpsl
mov
pop
rorb
xchg
pop
push
pop
es
pop
xchg
rorl
pop
lds
int
das
add
lods
pop
jmp
sti
sub
push
shll
pop
gs
cmp
fiaddl
test
dec
push
scas
or
pop
pop
int
shl
int3
in
dec
dec
cmc
aam
sarb
mov
mov
icebp
inc
gs
xor
adc
sar
fildll
push
cmp
call
fwait
movb
subl
inc
loop
pusha
adc
jmp
out
in
int3
loop
repz
push
mov
push
flds
mov
add
add
and
mov
fidivs
xor
jle
out
repnz
popf
push
jmp
outsl
mov
mov
out
or
mov
lock
negl
imul
jle
push
mov
adc
je
mov
jmp
imul
fsubrl
sbb
mov
xchg
push
adc
fdivrp
jge
test
mov
pop
out
aad
cmp
pop
dec
mov
lods
jo
mov
mov
test
loop
ja
xchg
sub
outsl
mov
jae
lock
sbb
pop
jp
ds
das
xchg
xor
mov
and
sbb
das
scas
in
rcrb
or
mov
lea
das
mov
insl
pop
add
pop
test
stc
rdtsc
pminub
jl
enter
sub
in
in
aad
roll
ret
jmp
out
mov
clc
mov
mov
sbb
or
stos
push
jns
or
pop
movsb
xor
in
ljmp
mov
in
dec
add
xchg
xor
sti
cs
xchg
sti
jb
dec
jp
imul
scas
and
mov
test
loope
enter
add
jo
dec
stos
mov
mov
add
pop
mov
push
or
jbe
or
adc
xchg
push
lock
jp
ss
jge
inc
dec
das
pop
test
mov
xor
ret
xchg
test
sbb
cmp
sub
mov
out
and
dec
xlat
jae
mov
dec
in
sub
hlt
inc
stc
lret
rcrb
xorb
xor
outsl
add
loope
sub
xchg
lahf
mov
mov
or
je,pt
test
mov
rorb
jne
call
mov
nop
mov
popw
outsl
jb
mov
dec
leave
push
sar
pop
fs
imul
push
push
nop
pop
cltd
das
sub
lret
pop
pop
sub
xchg
adc
in
lds
sbb
and
pop
xor
cltd
add
daa
rol
leave
int
movl
aas
pop
adc
pop
cmp
jne
out
cwtl
push
cwtl
add
push
dec
xor
sbb
mov
lods
ljmp
mov
or
mov
inc
jge
stos
xor
or
icebp
jb
push
and
dec
push
dec
mov
xchg
mulb
data16
jnp
fidivrs
jl
enter
push
fisttps
add
pop
inc
xchg
mov
pop
mov
in
iret
dec
js
xchg
fnsave
repz
imul
test
cld
fbld
ja
inc
pop
fcmovnb
imul
fidivrl
fsubrs
loop
mov
pop
std
xchg
test
loope
add
jge
mov
pop
xchg
xchg
imul
jnp
out
sbb
xor
push
fistps
adc
pop
rol
sbb
pop
insb
xor
cmp
cld
and
insl
xchg
bound
arpl
insb
push
cmp
mov
jno
mov
xchg
shll
rcrb
sub
dec
jo
or
push
xlat
test
fcompl
insl
inc
xchg
shr
mov
add
out
xchg
data16
and
hlt
dec
cs
in
scas
dec
insb
add
out
fnstenv
sahf
jno
inc
scas
repnz
scas
mov
mov
dec
and
xchg
cmc
fwait
mov
or
sbb
inc
dec
sahf
mov
call
mov
xchg
sbb
inc
out
jg
push
sbb
inc
xchg
jnp
add
aam
pop
xlat
mov
repnz
insl
stos
stos
push
cmp
fstpt
xor
cmpsl
cwtl
leave
fcmovu
nop
cmp
sti
mov
xchg
rcl
pop
inc
or
pop
xor
hlt
jmp
mov
dec
arpl
andb
xor
push
test
xchg
fwait
sbb
jno
fwait
jnp
push
shrb
test
clc
gs
popf
sub
push
pop
mov
or
frstpm(287
sub
sbb
decl
enter
dec
pop
outsb
arpl
ret
enter
inc
jmp
sbb
les
adc
adc
cwtl
fiaddl
mov
test
xor
mov
sbbb
cmp
gs
mov
or
sbb
fs
inc
add
out
nop
icebp
dec
idiv
jae
xor
ds
lods
xlat
jnp
fisubs
cli
pushf
test
and
push
pop
mov
pop
sbb
mov
push
lods
ss
push
rolb
jb
jbe,pt
cmp
mov
cmp
dec
add
dec
hlt
rorb
xor
inc
roll
add
xchg
push
ficoms
ja
dec
leave
movsl
ss
sbb
xchg
loop
ret
xchg
cmp
fidivs
movsb
sbb
arpl
adc
lods
jp
dec
fisttpll
inc
cmp
enter
iret
mov
inc
lods
cmp
cmp
jns
ss
inc
mov
out
sub
jbe
ret
or
inc
out
xor
orl
push
mov
fldcw
push
jb
test
subl
sbb
sbb
jg
push
sub
popa
add
test
and
enter
adc
ret
jns
push
fisubrs
aaa
push
dec
jnp
lahf
and
ret
stc
jo
scas
inc
test
cmp
sub
sbb
lret
cld
cs
inc
sub
pop
je
fmuls
lods
push
mov
cmp
sub
inc
mov
xor
push
xor
lock
fmull
pushf
fwait
jg
push
lock
inc
rcll
aam
das
movsl
ds
mov
pop
xchg
divb
sub
leave
or
sahf
jg
sub
shr
paddd
xchg
pop
hlt
in
mov
jmp
dec
pop
pushf
mov
ljmp
lods
jmp
mov
inc
lods
push
xlat
mov
bnd
cmc
add
jg
clc
cltd
mov
add
lret
mov
push
pusha
stc
mov
inc
or
repz
mov
pop
pop
inc
push
or
hlt
std
jo
mov
xchg
movl
es
xor
push
ret
or
ja
mov
add
andb
or
mov
shll
movsl
sarl
mov
mov
adc
mov
push
das
push
sbb
roll
push
ja
add
xor
out
xor
fidivrl
mov
nop
xchg
add
lea
rcr
or
sub
aam
fisttpll
jno
out
sbb
idiv
xor
mov
shll
mov
ror
sbb
or
mov
lds
mov
jne
push
pop
lret
aas
or
xor
sbbb
stc
or
or
push
inc
xchg
test
jo
jnp
out
pop
dec
lea
jo
in
adc
adc
ret
push
jne
or
call
in
jp
push
shll
cmpsl
pop
add
mov
mov
jns
sub
shr
mov
sarl
cmp
int3
shr
fiaddl
mov
add
lcall
push
adcl
nop
inc
pop
push
addb
xchg
inc
jge
dec
dec
mov
leave
inc
dec
cli
and
orb
popa
fdiv
and
fwait
jne
fwait
dec
das
pop
sbb
push
jno
int
cs
pop
adc
insl
xchg
xor
push
mov
mov
repnz
xchg
in
push
fucomi
bound
and
outsl
add
loopne
sbb
subl
mov
pop
stos
sbb
out
gs
mov
ret
test
mov
hlt
mov
add
test
sub
popa
add
pushf
lcall
dec
es
jnp
and
in
daa
fwait
push
sub
roll
popl
push
jne
pop
cmp
test
popa
leave
inc
maxps
dec
add
dec
lahf
jns
push
xchg
jnp
orl
scas
pop
mov
aaa
sbb
xchg
cmpsb
push
jp
mov
int3
jg
mov
mov
stos
adc
add
je
adc
pop
cmp
pusha
jle
ror
jne
xchg
add
leave
les
das
inc
cmpsb
loope
loope
mov
shr
inc
out
popa
sub
test
ljmp
fistl
xor
xchg
xchg
fcmovnu
mov
loopne
jg
andb
mov
lret
dec
sub
mov
push
cmp
jmp
ret
and
outsl
out
mov
sbb
push
cmp
or
jo
pushf
daa
je
jle
loop
mov
push
call
adc
les
insl
test
rorb
jnp
mov
and
mov
xlat
cmp
int3
mov
mov
pushf
enter
nop
pop
mov
cmp
idivl
cmp
movsl
stc
adc
and
sub
sbb
push
outsl
sub
dec
stos
mov
jecxz
inc
mov
jno
fisubs
add
pop
rorl
imul
aad
in
push
cmpsb
adc
mov
imul
repz
imul
xor
add
popf
cmp
and
mov
int
jno
sbb
int3
push
fbstp
test
xor
cltd
mov
out
or
jo
iret
jo
push
outsl
push
mov
mov
enter
jmp
mov
and
push
xor
sbb
inc
out
cmp
lret
cwtl
mov
push
jge
push
mov
adc
push
jl
dec
mov
inc
push
sarl
cmpl
icebp
mov
mov
jl
popa
scas
call
mov
sub
pop
mov
loope
pop
mov
pop
call
xchg
and
ret
xchg
mov
pop
sbb
xlat
fwait
sub
mov
xchg
sti
aam
dec
mov
adc
in
repnz
das
sahf
fists
and
push
in
gs
idiv
adc
loope
jno
xor
mov
or
int
in
das
das
sub
jecxz
mov
call
cmc
xchg
jno
nopl
adc
lret
imul
mov
iret
xor
push
mov
in
xchg
dec
arpl
push
ja
ret
dec
scas
mov
je
cli
pop
dec
or
adc
dec
sub
jno
sub
int3
cmp
xlat
loopne
push
fs
dec
and
pop
loopne
sti
shrl
addr16
fnstcw
int
dec
push
dec
clc
clc
in
sub
scas
mov
shll
insl
xor
add
lahf
div
in
cmp
idivb
and
pop
lret
int3
in
jne
scas
adc
xchg
push
cmp
xchg
cmp
and
jmp
bswap
inc
sub
mov
jmp
in
call
dec
popa
or
aaa
in
mov
cmpsb
or
testb
fisttpll
cmp
mov
and
in
repz
popa
inc
aad
cwtl
jg
das
inc
shll
test
les
mov
stc
xor
pushf
iret
adcl
dec
push
out
mov
idiv
pushf
mov
jae
xchg
pop
int
adc
mov
lret
mov
or
and
daa
mov
js
dec
lret
stc
gs
in
call
lock
inc
sarb
icebp
into
sbb
xchg
sub
aad
sub
push
mov
xor
mov
fsubrl
test
cmc
aaa
lahf
jne
insl
cwtl
sbb
stos
mov
sbb
xchg
mov
test
sti
add
scas
inc
or
insb
jne
rorl
clc
pop
cli
dec
outsb
mov
iret
pushf
jl
sub
and
nop
into
lar
dec
jne
push
push
dec
int
push
sbb
lods
call
ffree
add
stos
iretw
jns
cmpl
xor
outsb
fs
call
adc
sub
mov
adc
jb
inc
call
pop
fdivrl
mov
pop
sahf
mov
dec
aas
lcall
ss
inc
dec
xchg
mov
pop
push
mov
lret
sti
pop
sbb
lahf
test
xlat
stos
enter
rolb
loopne
clc
and
cmp
loopne
jl
dec
pop
push
adc
je
pop
lods
or
mov
fisubrs
push
ret
pop
xlat
xchg
pop
push
loop
sub
std
add
je
push
cmc
stc
hlt
add
popf
jo
push
fstpl
and
mov
divl
xchg
cmpsb
cltd
or
cmp
dec
or
cmpsl
cmp
cmp
scas
int
push
xchg
inc
out
lock
int
arpl
and
fmuls
and
bound
mov
lcall
sub
ss
clc
std
call
adc
dec
repz
in
in
lods
dec
aam
dec
fisttpl
cmp
cmp
es
ret
mov
fnsave
idivb
sub
inc
lods
insl
pop
ficoml
js
movsl
or
ret
push
fistpl
shl
cwtl
or
rcrb
jle
push
cmp
mov
xlat
mov
adc
cmp
sub
pop
push
fistps
push
xor
loop
ja
pushf
push
inc
dec
jp
mov
subl
inc
lock
test
stos
fwait
mov
stos
in
pop
js
dec
mov
sbb
mov
pop
add
xor
out
pop
rolb
lcall
aam
push
push
jecxz
or
jnp
jb
mov
xchg
mov
jl
js
lds
lock
mov
sbb
imul
push
lods
pop
js
adc
sbb
sub
ss
stc
imul
adc
adc
cmc
fidivrl
sub
cmp
stos
mov
filds
xchg
mov
add
push
or
clc
adcl
fwait
pop
pop
inc
jge
cmp
lock
into
insb
std
cmp
fistpll
pminsw
xchg
adc
xchg
lock
out
jp
subl
push
and
add
aam
mov
lea
and
dec
aad
fst
add
jmp
dec
movsl
jg
cwtl
scas
jmp
lds
lods
cmp
inc
jns
cmp
sbb
pop
pop
and
xor
jecxz
cwtl
enter
jl
pop
or
jne
loope
lods
es
dec
sbb
jne
or
int
mov
jecxz
pop
imul
push
imul
flds
mov
mov
lahf
das
ss
mov
repz
lds
pop
dec
mov
cmp
imul
incl
mov
into
jmp
pop
xor
dec
imul
xchg
sub
push
xor
xchg
sub
jnp
or
je
sub
push
xchg
iret
mov
jno
push
sbb
or
es
xor
inc
dec
cs
cmp
negl
or
push
and
pushfw
sahf
loopne
arpl
xorb
out
stc
inc
js
sub
int3
stos
fwait
pusha
iret
popa
xchg
ljmp
cld
inc
pusha
fistl
add
lea
pop
mov
sbb
cltd
adc
call
std
push
sub
xchg
sub
or
clc
addr16
in
xchg
cmpsl
into
add
jo
stc
adc
subb
outsl
sub
movsb
stc
cmp
cmpsb
dec
dec
cmp
hlt
add
push
cmp
nop
jb
imul
test
shll
imul
jge,pt
popa
xchg
mov
dec
mov
loopne
pop
cmp
stos
dec
mov
adc
ljmp
and
pop
outsl
push
in
fadds
les
or
mov
xor
pushf
rolb
sti
cmp
in
subb
pop
out
xor
cmp
jecxz
dec
sahf
sbbl
imul
cld
inc
repz
push
sbb
insb
or
pop
jnp
mov
call
rcl
jg
mov
adc
push
and
stos
sbb
fwait
cmc
aaa
and
int
sbb
xorb
inc
nop
and
pop
sbb
rolb
cwtl
pusha
lock
mov
jmp
je
lods
data16
bound
imul
xlat
jb
or
cmp
push
ret
inc
pop
loop
lods
cmp
imul
fs
sti
out
out
clc
jecxz
or
out
adc
push
jmp
sbb
cmp
mov
xchg
insb
sub
sbb
arpl
jmp
cmp
push
rol
push
and
adc
in
sbb
xchg
call
add
cwtl
mov
and
sbb
sarl
mov
out
pusha
leave
sub
hlt
push
cmp
sbb
jbe
scas
fcomps
or
xchg
adc
icebp
in
cmp
sbb
jo
repz
lods
pop
add
pop
adc
imul
fisttpl
andl
idivl
mov
repnz
cwtl
xchg
movsl
lea
mov
cwtl
fidivl
jp
rcrb
cs
mov
xchg
es
clc
adc
aas
ss
mov
out
or
cmp
sahf
outsl
cmpsl
or
gs
sbb
or
cli
adcl
pop
push
andl
xchg
xor
mov
fimuls
rcrl
sbb
fwait
mov
xlat
sti
popa
xchg
fsubr
ret
cmp
aaa
mov
clc
lcall
and
cltd
push
mov
add
adc
xchg
pushl
insb
jae
cmp
sbb
ret
mov
lret
sbb
add
sbb
jge
add
pop
adc
sub
and
int
dec
dec
outsb
add
jne
xchg
testb
icebp
pusha
or
aad
mov
mov
mov
sub
lock
mov
test
int
adc
add
push
mov
xor
xor
xchg
stos
sub
movl
inc
rclb
jle
mov
mov
pop
adc
popa
aad
mov
inc
pop
ret
mov
stos
push
and
pusha
lods
addb
cltd
loop
and
test
mov
es
and
dec
mov
pop
enter
ljmp
movsb
or
xchg
leave
pop
dec
inc
pop
movsl
pop
push
loopne
xchg
mov
inc
movsb
sbb
shll
jecxz
lods
mov
mov
push
dec
imulb
adc
add
cld
adc
nop
shl
lds
pop
add
adc
sub
sbb
cmpsb
div
rcrl
das
stc
fisttpll
or
inc
sbb
pop
insl
in
fistpl
or
jbe
xchg
ja
inc
push
or
lock
mov
dec
jo
add
lea
mov
or
bound
aad
push
sbb
scas
cmpsb
psrlq
shl
dec
int3
decl
pushf
xchg
dec
leave
or
or
gs
nop
mov
and
sub
mov
inc
push
sahf
outsb
sahf
sahf
xor
cli
sbb
mov
dec
sub
jmp
xchg
testb
sub
mov
stos
push
out
xor
mov
xchg
aad
insl
sbb
maxps
fs
pop
out
sbb
jo
mov
cmp
inc
js
xchg
mov
xchg
cmpsb
mov
inc
cwtl
jecxz
test
mov
mov
les
test
negb
addr16
or
pushf
mov
pop
call
fwait
pop
in
xchg
inc
push
mov
dec
hlt
loopne
test
sub
push
adc
cmp
inc
and
jg
and
sub
lahf
mov
inc
jge
mov
aad
jp
lea
idivl
imul
jl
xor
inc
pop
addr16
call
out
in
stos
nop
mov
sub
gs
mov
mov
pop
inc
or
pop
inc
sbb
push
les
lcall
fldenv
push
pop
xchg
add
in
mov
fidivs
lods
jno
inc
cli
xlat
inc
int
push
fisubrs
xor
and
sbb
pop
sahf
outsb
mov
stc
sub
sub
push
inc
jns
mov
ja
jecxz
icebp
stos
decl
mov
fnstsw
xchg
lret
repz
in
add
dec
clc
mov
scas
dec
xlat
push
cmp
sbb
xor
hlt
lahf
jle
and
ret
testl
test
shlb
fcoml
mov
add
jb
clc
add
xlat
push
cltd
jno
dec
xchg
fnstenv
xchg
jae
cmp
xchg
cmp
or
and
jl
xchg
inc
xchg
mov
mov
rcrl
cmp
rcll
sbb
mov
arpl
pop
pusha
sbb
and
outsb
xchg
xor
sbbb
xor
push
mov
in
dec
test
aaa
pop
es
push
negl
push
dec
mov
mov
jecxz
mov
je
icebp
and
int
mov
mov
into
inc
or
int3
jle
mov
add
xor
pop
xor
in
mov
sub
and
imul
jnp
in
inc
push
je
xchg
out
ficomps
pop
or
out
push
or
and
push
cmpsb
mov
adc
sahf
neg
xor
xchg
scas
inc
cmpl
pop
lret
dec
lods
pop
test
pop
dec
iret
fs
lret
rcr
in
rclb
sub
lock
dec
aas
mov
ret
adc
push
lret
mov
gs
xor
cmp
mov
lock
jmp
sbb
mov
push
jmp
cld
out
push
clc
pusha
mov
sbbb
int3
push
push
pop
jle
and
iret
outsb
stos
pop
das
das
adc
push
sti
lds
pushf
fildll
mov
inc
pop
out
loope
pusha
mov
bound
rolb
jo
add
lock
jae
jb
xor
xchg
jb
int
arpl
pop
cmp
js
mov
sub
or
sbb
pop
mov
lods
scas
mov
pop
int3
scas
and
into
dec
or
in
adc
mov
ficoms
and
xorb
sbb
dec
stos
xlat
mov
aam
cmp
mov
scas
sub
jmp
add
pushf
popa
dec
jnp
xchg
shrl
iret
lea
imul
fwait
setle
cmp
push
shll
stos
rcrl
jno
addl
push
dec
mov
dec
jb
lcall
jb
repnz
adc
insl
dec
or
ss
ljmp
push
or
fimull
push
sahf
hlt
mov
mov
jnp
clc
dec
scas
fsub
xor
and
or
dec
mov
add
cmpsl
jg,pt
or
push
test
aad
and
or
in
or
daa
xchg
out
pop
stc
mov
xchg
lcall
push
movsl
dec
mov
mov
test
enter
stos
push
mov
stos
sub
jl
outsb
mov
jle
lcall
cmp
cmp
cmp
mov
adc
rcrb
mov
lods
pop
sbb
bound
jno
push
xor
xor
sbbl
jo
xor
rcl
sub
je
in
repz
outsb
sub
call
push
push
dec
stos
inc
dec
mov
mov
jp
pusha
xor
push
jge
mov
push
cli
ficomps
inc
aas
pop
jle
xchg
push
sbb
test
mov
and
jmp
xchg
jns
insb
rolb
je
dec
pop
adc
mov
stos
jl
xchg
xchg
int
pop
and
out
loopne
or
xchg
mov
xchg
pop
lds
xchg
lods
enter
sbb
outsb
jns
dec
lret
pop
test
mov
mov
fnstcw
push
inc
std
inc
gs
jmp
cmp
cmp
out
dec
out
rol
mov
pushf
push
mov
movsl
out
jmp
and
mov
icebp
fisttps
adc
push
mov
orl
ss
push
repnz
and
xchg
inc
in
mov
sub
pop
xchg
clc
xchg
mov
sbb
cli
movsl
divl
jae
xchg
push
mov
movsl
mov
fs
aaa
lahf
mov
stos
or
rorw
lds
ret
int3
cmp
hlt
cmpl
mov
sbb
mov
lods
cld
dec
lods
jno
insl
push
scas
lcall
inc
divl
lahf
push
cmpsb
lret
mov
push
iret
repz
cmc
jae
orb
mov
xchg
push
pop
ret
dec
cmp
dec
and
ss
lods
dec
sub
mov
mov
xchg
std
xchg
sub
xor
repnz
int3
ljmp
rcrl
repnz
divb
neg
or
sbb
sbb
imul
cmp
push
push
dec
movsl
fldenv
nop
push
hlt
sbb
push
divl
xchg
xlat
in
dec
fidivrs
push
inc
sub
aas
cs
insl
cwtl
sbb
out
xor
dec
cmp
jb,pt
shlb
int
lock
sbb
idivb
add
mov
fdivl
mov
push
xor
or
mov
jne
mov
mov
idiv
mov
inc
or
fcomip
ds
lcall
xlat
rcll
push
stos
xchg
jge
out
mov
insb
movsl
fdecstp
lock
cmp
repnz
pop
mov
adc
cmpsb
int
shll
pusha
or
add
jmp
js
les
inc
decb
out
nop
movsl
into
xchg
testb
cmp
std
sbb
jge
loope
sub
sar
fadds
mov
shl
lret
mov
add
roll
cwtl
add
mov
mov
cmpsb
mov
add
mov
and
popl
lea
cli
inc
push
ret
in
mov
add
fnstcw
rclb
cmp
in
cmpsb
cmp
cmp
jae
pop
inc
js
addr16
mov
loop
xor
popa
adcb
lods
pop
or
shl
andl
pop
clc
jmp
add
xchg
mov
das
pop
add
cmovns
filds
push
push
lods
dec
and
sub
mov
jp
push
lea
sbb
mov
movsb
ficompl
xchg
xlat
outsb
or
test
xor
cltd
dec
mov
or
mov
xor
pop
stos
arpl
mov
aad
popa
xchg
pop
test
outsb
test
pop
idivl
jnp
movsl
shrb
push
cmp
or
and
jge
aaa
xor
xchg
cmp
push
push
scas
push
jmp
aas
dec
xlat
ljmp
iret
or
pop
out
sbb
push
je
outsb
cmpsb
inc
loopne
rcrl
jae
pop
test
pop
jg
mov
push
out
fsts
inc
pop
jbe
lods
data16
ffreep
jg
mov
push
xor
incl
test
jae
daa
lret
loopne
mov
cmpsl
cmp
mov
daa
mov
xchg
lock
inc
popf
cmp
add
pop
cli
rclb
pop
fists
cmp
xor
or
iret
ret
cmp
outsl
mov
push
inc
shlb
rol
mov
stc
jo
sbb
sub
mov
aam
pusha
add
mov
out
mov
test
sub
xor
test
mov
enter
pusha
and
ss
sbb
pop
arpl
xor
xchg
rorb
add
hlt
stc
xchg
rcrl
pop
int3
and
jbe
or
orl
adc
test
add
jns
fldenv
repnz
inc
cli
lds
ficomps
push
cmc
dec
cmp
inc
or
aam
in
push
xlat
jo
mov
leave
sub
fidivl
clc
cmc
add
fmull
outsb
and
jle
dec
pop
or
ret
sbb
out
int
punpcklbw
xchg
int
sbb
xchg
pop
or
and
adc
cmp
std
sub
mov
lret
mov
inc
xor
sbb
inc
dec
adc
test
push
icebp
sbb
insb
lock
add
std
imul
loop
mov
push
icebp
cmp
fisubs
mov
xorb
cmp
sbb
fistpll
test
rol
lds
shlb
scas
cmp
cmp
pop
pop
push
mov
popf
stos
cli
or
dec
out
xchg
out
fdivrs
aas
push
adc
push
movl
pop
clc
xchg
mov
or
jp
out
insl
dec
add
out
inc
fiadds
mov
mov
pop
mov
out
jg
sbb
loop
inc
mov
sbb
dec
xor
mov
jb
mov
pop
insb
and
shlb
mov
mov
pusha
movsb
loop
es
adc
nop
jle
dec
aam
lods
test
cmpsl
jmp
sbb
daa
enter
mov
cld
pop
cmp
stos
fdivrs
arpl
adc
dec
mov
mov
sub
pop
loop
std
lods
mov
pop
add
jne
and
jle
add
popa
les
xor
icebp
es
loopne,pt
shlb
shl
xchg
xchg
xchg
pop
rcrl
rclb
and
adc
inc
jmp
mov
pop
mov
repnz
lea
scas
cmpsb
mov
or
mov
aad
aad
add
push
les
outsl
shll
inc
jns
sub
data16
inc
shr
cld
lret
inc
lods
mov
aam
mov
and
jp
fs
out
ljmp
pop
pop
movsl
subl
mov
cmp
xchg
add
sahf
aam
jae
js
xchg
mov
push
pop
fadd
imul
pushf
xor
pop
lcall
inc
mov
sbb
lret
jb
test
xlat
insb
xchg
sbb
mov
pop
dec
cmpsb
pop
sub
xchg
push
shll
out
mov
pop
mov
arpl
push
in
and
jp
test
lods
dec
sub
jl
bound
pop
aad
add
xlat
push
sahf
in
mov
push
push
out
add
mov
mov
fs
dec
scas
loope
lahf
sbb
xor
xchg
lret
js
nop
cwtl
fs
mov
xchg
add
jecxz
add
pushf
out
incb
aaa
xor
pop
sbbl
inc
adc
dec
and
out
mov
sysret
sub
jb
xchg
inc
adc
sub
scas
movb
ret
xor
popa
mov
es
xchg
rcrb
out
jb
add
movsb
mov
ret
aas
xchg
adc
inc
dec
fnop
ret
xchg
into
dec
push
or
icebp
fldenv
jecxz
xchg
push
xchg
mov
cmp
in
or
leave
fnstenv
pop
add
and
or
pop
mov
mov
dec
xor
mov
popf
cmpb
adc
pop
dec
pop
mov
xchg
pushf
jb
mov
sbb
fs
in
cmp
rcrl
lea
test
dec
mov
shlb
js
push
xor
fcmovu
test
cmp
sub
ds
gs
pop
push
push
mov
xor
mov
pop
test
push
mov
mov
xchg
xor
lahf
cltd
pop
dec
adc
mov
cli
mov
icebp
popf
push
pop
out
mov
jle
mov
pop
pop
jne
ljmp
xchg
mov
sub
call
xchg
inc
add
aad
lea
ret
mov
sar
jne
and
pop
jno
sub
mov
sbb
jecxz
cmpl
push
arpl
mov
adc
fisubs
and
pop
mov
add
jae
int3
add
mov
cli
pop
sub
outsb
mov
adc
jl
sbb
sbbl
arpl
jle
and
ds
mulb
insl
push
and
xchg
lret
xor
fmuls
es
cmp
or
sub
mov
xchg
pushf
arpl
cmp
dec
ljmp
mov
mov
jns
test
jns
cmpsl
imulb
pusha
js
scas
jg
insb
xchg
jmp
sub
mov
je
call
sub
fnstenv
add
mov
cmp
add
inc
leave
push
push
loop
or
scas
test
sbbl
scas
addr16
push
mov
adc
pop
jno
cmp
pop
inc
push
xchg
add
loop
fstl
jp
xor
cmp
sbb
jp
cs
inc
inc
aas
test
xchg
inc
loope
pop
andb
push
xchg
repnz
test
inc
cmp
sarb
ret
data16
push
ss
jge
jb
into
fstps
mov
mov
sahf
inc
in
jns
fwait
mov
push
stos
mov
aaa
dec
push
cmp
and
out
idivb
bound
pop
loop
ss
xchg
andb
repz
xlat
mov
pop
fistpl
jge
jge
popa
pop
jbe
mov
sub
nop
insb
add
pushf
cmp
int3
decb
lea
pop
or
imul
je
add
sub
xchg
cmp
into
push
adcl
mov
pop
addr16
in
data16
mov
pop
inc
insl
push
xlat
sbb
add
ret
lcall
loopne
jge
cmp
pop
mov
scas
xchg
xchg
mov
jnp
ljmp
fsubl
cmpsl
xor
xchg
insb
cmp
mov
jns
sub
out
jle
cmp
test
sub
jno
mov
fldenv
cmpsb
ret
and
jno
mov
inc
adc
fistpl
adc
outsb
pop
xchg
adc
pusha
stos
push
push
and
nop
xchg
ja
add
xchg
xchg
movl
ret
dec
in
jg
mov
in
mov
ds
fidivrl
push
or
jl
out
loop
mov
out
xchg
int
jb
adc
sahf
sbb
in
jmp
cmp
ret
rclb
cmp
mov
sbb
and
test
test
imul
push
iret
mov
sarl
and
jle
js
fs
test
jnp
insb
and
pop
fsubrp
mov
loope
inc
mov
jmp
or
ds
repnz
sub
push
push
aam
bound
or
dec
nop
pusha
insl
dec
mov
add
dec
sub
int3
inc
stos
adc
xchg
and
cli
xor
mov
sbb
stc
imul
in
pop
aaa
repz
in
in
popa
into
stos
ret
outsb
inc
jg
rorl
test
mov
adc
mov
nop
mov
jecxz
mov
or
outsb
pop
out
arpl
mov
shr
ss
mov
lcall
outsl
xchg
test
push
lret
mov
mov
aas
mov
jne
mov
jp
push
push
je
add
pushf
bound
xor
je
bound
ja
sbb
sbb
aaa
adc
jge
lds
daa
fcomps
add
cld
test
fyl2x
nop
mov
mov
xchg
mov
rep
pop
jge
mov
int
mov
aaa
jle
and
sarb
mov
sub
mov
push
arpl
aaa
or
xorb
inc
sub
popa
or
cs
pop
push
pusha
inc
sub
xchg
and
insl
cmpsl
lds
xor
ret
mov
sti
xchg
adc
cmp
dec
stos
lcall
movsl
lods
or
jo
jns
adc
cmp
lahf
xchg
leave
pop
jns
pop
stos
in
mov
sub
js
jae
cwtl
or
push
inc
dec
mov
sbb
rolb
pop
sbb
out
pushl
int
or
dec
mov
mov
mov
loope
push
sahf
sbb
dec
push
adc
push
loope
pop
cld
xor
inc
scas
dec
lahf
or
lahf
xchg
mov
sub
and
pop
call
sti
aas
push
xchg
mov
ss
lea
xchg
adc
lds
jg
mov
mov
or
mov
push
cmpsb
dec
adc
mov
dec
inc
sub
test
sbb
jp
lcall
int3
ljmp
outsl
xlat
out
fwait
jge
cld
pop
fiaddl
jno
mov
fdivrl
lods
and
sti
and
data16
out
ret
jae
pusha
mov
add
mov
and
add
loopne
inc
ds
inc
mov
or
sbb
sbb
add
push
lock
les
mov
fcmovnu
fnstsw
adc
inc
xor
lods
push
and
dec
sub
shl
sti
adc
push
pop
cmc
arpl
mov
and
rcrl
inc
loope
addr16
and
adc
pop
mov
orl
or
pop
and
outsl
and
leave
test
das
or
add
es
xchg
es
sbb
dec
jecxz
imul
push
sub
mov
jnp
sbb
iret
aas
adc
sbb
out
std
into
cmp
xlat
sbb
xchg
movsl
jns
stos
pop
pop
loopne
jmp
orb
sub
push
push
outsl
inc
movsl
xchg
hlt
lcall
sub
jmp
sub
and
out
inc
jge
lods
sub
aam
add
stos
adc
test
cmp
jno
les
mov
and
imul
dec
into
aaa
pushf
cmp
push
shll
imul
popf
fs
and
fdivl
test
cmp
add
dec
mov
inc
daa
inc
or
fidivrs
std
mov
andb
pop
xchg
shrl
mov
daa
cltd
outsl
mov
int
cmpsl
xchg
in
xor
and
mov
cli
popf
orl
xor
dec
fsubs
xchg
dec
stos
sub
fcomps
jae
jae
enter
jecxz
dec
test
push
or
mov
pop
mov
insl
mov
and
lea
adc
call
aaa
push
cmp
mov
jge
sarb
sbb
mov
push
mov
cmpsl
cmp
cwtl
and
jae
clc
dec
jge
jecxz
cs
xchg
aas
inc
mov
aad
add
mov
dec
dec
cmpsb
fmull
add
push
test
cmp
pusha
mulb
sarb
aas
jl
cmp
and
pop
test
outsl
loop
mov
mov
adc
push
scas
in
jge
cmp
xor
bound
inc
pop
cld
and
add
jecxz
dec
sarl
sahf
xor
cwtl
dec
loope
sub
and
mov
dec
add
adc
fisubl
dec
iret
jp
xchg
outsb
cmp
fwait
loop
stos
xchg
js
adc
inc
mov
or
daa
mov
scas
fnstcw
in
mov
push
xlat
sub
lret
addl
add
and
inc
stos
scas
jo
sahf
mov
sub
pop
or
fisubrs
out
pop
xor
xor
loopne
mov
adcb
xchg
xchg
xchg
push
stos
and
ds
lret
scas
pushf
sub
arpl
into
jl
fcmovnbe
add
sbb
in
scas
sbbl
mov
out
adc
inc
inc
adc
in
cmc
sbb
fs
adc
push
pop
in
rcll
call
or
jecxz
fcompl
mov
ljmp
sub
and
jp
pusha
mov
push
jle
inc
das
or
in
sub
push
shrb
in
es
push
rcl
inc
xor
xlat
outsb
outsb
cltd
pop
add
cmpb
jbe
out
pop
add
lods
aam
mov
jb
sub
cwtl
dec
jge
outsb
jg
or
inc
inc
add
fcoml
mov
jns
adc
fnstsw
das
adc
xor
gs
cmp
jmp
outsb
sub
hlt
and
jne
imul
mov
scas
dec
jnp
or
sbb
ljmp
mov
fisubrl
and
xor
dec
sbb
dec
lock
pop
rcrl
mov
fisubrl
adc
movsb
aas
or
js
xor
mov
pop
mov
nop
ja
ret
in
jle
test
mov
jne,pn
cltd
loop
dec
cmpsl
inc
push
rolb
lock
fsubl
pop
pop
stos
push
leave
bswap
fistl
push
sub
pop
jg
push
or
pop
in
pop
test
cltd
mov
mov
cmpsl
fdivrp
cmp
add
cmpsb
inc
jbe
call
popa
inc
push
sub
outsl
out
clc
xchg
mov
lods
sbb
pop
idivl
scas
mov
push
xchg
fs
pop
dec
fwait
jmp
lock
mov
test
lret
popa
int
xorb
data16
sahf
mov
nopl
insl
fwait
and
daa
mov
scas
mov
mov
cs
cmp
bts
xlat
shlb
adc
mov
jbe
testb
and
aaa
xor
int
in
mov
aam
pop
mov
fxch
mov
inc
lcall
iret
movsl
scas
inc
and
mov
xor
pusha
dec
pop
ss
dec
shlb
in
inc
lods
imul
mov
adc
cmpsb
ret
inc
push
pusha
pop
rcr
nop
adc
pop
xor
test
adc
fldenv
mov
dec
roll
sub
outsl
int3
repnz
cmpsb
popf
inc
addr16
pop
push
out
out
adc
and
pop
jns
test
mov
sub
stos
mov
nop
adc
rclb
movsb
and
adc
mov
pop
cmp
sub
mov
roll
enter
cmp
sti
jns
xor
push
adc
mov
inc
adc
rep
xor
scas
fnstenv
mov
out
pop
stos
sub
xchg
mov
lret
outsl
ret
std
cmpsb
jmp
loop
mov
imul
pushf
daa
cwtl
pop
or
pop
mov
scas
add
mov
movsl
fidivl
repz
mov
mov
push
mov
fcmovnb
jb
nop
cmp
xchg
in
addr16
pushl
xchg
adc
mov
mov
je
cmpsl
push
roll
lret
fs
mov
push
in
jp
push
xchg
or
cmpsb
xor
ds
jnp
push
sbb
adc
adc
push
lock
xchg
imul
test
dec
sbb
imul
adc
stos
sbb
sub
jmp
addr16
mov
adc
adc
dec
andb
inc
imul
xor
mov
mov
in
adc
push
fsin
inc
pop
xchg
lods
adc
sbb
fldl
lea
pop
and
mov
push
inc
ret
mov
adc
scas
clc
bswap
dec
insb
rcrb
fists
movsb
pop
mov
fdivs
call
mov
xor
mov
cwtl
adc
push
in
mov
mov
inc
jae
and
add
adc
sbb
imul
xor
aas
test
popw
ret
mov
add
daa
pop
jl
aas
shlb
push
xorl
cmpsl
shll
stos
ret
int
jg
jae
adc
push
dec
xor
aam
and
shll
dec
test
cwtl
shll
sub
adc
pop
jecxz
lret
fsubr
xchg
stos
imul
xor
mov
popf
xor
mov
imul
mov
das
pop
pop
mov
jnp
sbb
dec
outsl
sbb
pop
popl
je
negb
lahf
and
dec
cmp
mov
jb
xchg
push
dec
fldl
sbb
lods
sbb
icebp
cmpsb
sub
push
xor
in
sub
pop
adc
out
xor
dec
jl
scas
stc
xchg
hlt
or
and
ljmp
add
cmp
rorl
sub
xchg
jae
outsb
shll
jle
xor
xchg
push
push
sbbb
pcmpeqb
call
sub
adc
repnz
push
push
cwtl
neg
inc
mov
sub
mov
mov
lret
repz
jmp
lods
or
rcrb
fmulp
sarb
xor
loop
lret
pop
fs
xchg
mov
xchg
and
mov
push
aam
xchg
and
int3
or
mov
xor
xor
adc
sub
repz
add
jnp
sub
iret
loope
ljmp
test
fistpll
test
xchg
and
cmp
xchg
mov
add
scas
stos
arpl
jae
push
fs
dec
adc
pop
test
dec
or
lret
out
int3
test
xlat
insb
mov
inc
xor
test
push
add
jne
stc
inc
push
sub
leave
outsl
lret
inc
inc
cld
test
fcoml
inc
es
push
mov
sar
jnp
test
inc
fwait
add
and
pop
cmp
out
sub
jo
push
cmc
push
popf
and
push
xchg
xchg
incl
pop
faddp
xlat
es
xchg
mov
jo
icebp
into
lea
adc
pop
popa
mov
and
ja
fstpl
mov
sub
mov
sbb
fldl
or
mov
pop
pop
push
push
in
and
cli
sbb
arpl
and
clc
push
push
int
aas
pop
dec
jno
scas
push
rorl
and
aad
loop
xchg
mov
jmp
dec
movsl
mov
sub
leave
enter
xor
stos
in
push
lods
push
inc
divl
rol
ds
jmp
lcall
pushf
sub
adc
push
in
jns
out
sub
push
fcoml
out
loop
sbb
xchg
lds
push
clc
xchg
push
and
xchg
add
jno
xor
sub
mov
push
pop
arpl
pop
and
adc
adc
dec
dec
lds
push
inc
adc
sbbl
sbb
pop
mov
adc
aad
mov
add
mov
inc
mov
xor
vcomisd
divb
into
jge
inc
sub
cmp
adc
fstl
jbe
mov
pop
stc
mov
in
outsb
aaa
std
in
movsl
loopne
fisubs
or
and
outsl
mov
adc
push
out
inc
mov
mov
sbb
push
mov
and
and
lcall
rcrb
in
dec
inc
lea
xchg
mov
dec
push
mov
xchg
mov
imul
mov
fcmovnb
and
cmc
notl
shlb
add
loope
outsb
mov
or
out
jmp
aaa
dec
mov
and
mov
imul
mov
addr16
jbe
cmp
fs
stc
pop
mov
out
dec
cli
fs
into
fsubrs
jl
sub
sub
add
ljmp
sbb
scas
decb
data16
cmp
adc
lods
xchg
and
pusha
xor
sub
stos
iret
mov
imul
jae
test
sub
adc
insb
imul
xchg
bound
shrl
aad
cmp
int
into
add
out
rcll
mov
and
and
into
mov
stos
cmp
jmp
enter
inc
xor
dec
adcb
and
fbld
aas
push
repz
cmp
fldlg2
jmp
push
out
mov
push
fistpll
ljmp
ja
mov
out
incl
dec
test
out
jns
imul
mov
add
hlt
xor
dec
cmpsb
xor
jecxz
add
fsubs
push
cli
sub
or
cmpsl
pop
leave
clc
and
scas
jmp
push
cli
pop
sbb
push
idivl
test
icebp
cwtl
ret
popa
jg
mov
out
mov
hlt
scas
stos
ds
arpl
pushf
xchg
xlat
push
stos
sbb
push
cmp
jae
xor
mov
cmpsb
jl
inc
test
es
in
movsl
and
inc
inc
pushf
jo
mov
in
lods
mov
mov
inc
push
pop
and
push
pop
enter
bound
push
sbb
pop
inc
outsb
and
mov
mov
jbe
add
xchg
sarl
scas
stc
sbb
inc
data16
test
inc
sub
dec
jg
pop
xor
mov
jns
addr16
jl,pn
push
nop
push
cmp
pop
cmc
xchg
mov
jecxz
dec
adc
aas
std
mov
or
push
xchg
mov
mov
and
js
sahf
sbb
lret
lret
loop
in
mov
mov
push
pop
pushf
insl
sarl
add
nop
mov
jle
in
nop
repz
fcomps
lret
jmp
sbb
fimuls
jbe
movsl
cmp
iret
rcr
orb
add
test
push
cs
cmp
adc
pop
out
jae
test
scas
xchg
sbb
aas
ror
mov
hlt
out
mov
mov
iret
jns
add
nop
bound
mov
mov
pop
inc
divl
jge
sub
and
mov
sbb
cmp
aas
adc
aas
icebp
orl
sub
fwait
adc
cmp
pop
sahf
out
daa
jl
frstpm(287
icebp
mov
adcl
cwtl
lock
clc
sbb
inc
int
mov
push
inc
or
xor
repnz
adc
push
mov
sbb
jb
mov
push
pop
or
fiaddl
cwtl
mov
mov
mov
xorl
cmc
sti
movsb
fisttpl
adc
pop
mov
push
popf
jecxz
dec
cmpsb
adc
aad
xchg
data16
dec
push
sub
cmp
cmp
fistps
mov
into
dec
pop
push
or
xchg
ret
pop
mov
push
jb
mov
pop
inc
sbb
je
push
fiaddl
cli
in
lock
stc
cmp
mov
leave
sub
mov
js
iret
shlb
ret
sti
out
out
pop
rcrl
mov
jl
scas
pop
sbb
scas
mov
lock
xlat
adc
mov
imul
rcll
jnp
test
mov
adc
mov
mov
mull
mov
inc
fcoml
cmpb
mov
lret
xchg
push
stos
pusha
sahf
mov
mov
out
mov
aaa
cli
or
addl
jns
fistpl
cmpsb
push
ret
scas
dec
aaa
out
sahf
out
mov
das
push
lret
mov
ds
in
dec
xorl
sub
pusha
lea
aaa
daa
gs
xor
loop
jge
aam
add
adc
and
test
divl
pusha
ret
inc
ficompl
xchg
or
lea
mov
dec
outsb
in
ret
dec
sahf
in
arpl
scas
dec
test
cmpsl
cmc
popf
pop
rcr
push
xor
pop
lods
inc
hlt
or
imul
in
sbb
fsubl
mov
adc
xchg
cmc
sti
xchg
cmpsl
daa
mov
cmpsl
add
inc
stos
jecxz
push
ret
ja
mov
dec
cmp
ss
repz
fs
mov
xor
pop
mov
rclb
andl
sti
cmp
movsl
inc
mov
cmp
stc
fstpl
pop
add
out
xor
mov
or
outsb
push
int3
ret
fistpl
cwtl
or
inc
mov
jb
adc
ret
aas
mov
jbe
push
inc
jecxz
mov
lods
jp
xchg
adc
adc
sbb
das
hlt
and
fstl
fidivrl
int
mov
fistpll
fisubl
xchg
cs
negb
js
icebp
out
sub
iret
push
fsubrs
js
int
mov
aad
popf
mov
or
in
ljmp
add
dec
bound
push
jge
std
std
cmpsb
std
or
fsubrp
aam
xchg
sahf
pushf
fmull
test
jl
pop
and
push
mov
rcl
in
jae
or
fnstcw
pop
ljmp
mov
int3
movl
out
repnz
mov
cltd
cmp
fnstenv
add
nop
das
stos
dec
jae
and
xor
dec
jg
pop
push
inc
dec
cmp
movsb
push
into
div
push
lea
daa
repz
enter
mov
nop
jb
lock
pop
test
dec
jmp
pop
fwait
cltd
out
test
pop
xchg
out
mov
sti
adc
mov
orl
and
movsl
nop
push
arpl
cmpsl
pop
repnz
arpl
inc
push
fs
cli
repz
ror
into
xlat
dec
aaa
out
mov
push
iret
sub
pop
or
and
pop
xchg
jge
push
inc
ret
roll
testb
bound
dec
repnz
push
scas
lret
pop
and
push
psrlw
push
mov
stc
mov
and
dec
popf
xchg
je
inc
mov
push
aas
mov
xchg
ja
dec
test
nop
notb
lahf
pop
or
int3
stc
aas
and
shrb
ret
fimuls
adc
xor
and
aad
inc
dec
cli
sub
xlat
and
jno
mov
push
mov
sub
push
pusha
mov
daa
cmp
cli
mov
cmpsl
aad
in
xchg
xor
sbb
add
fs
stos
mov
adc
les
cmp
pop
adc
shl
add
jmp
daa
dec
mov
das
mov
pusha
inc
adc
push
push
into
push
push
adc
dec
fbld
inc
das
out
adc
stos
data16
cmp
pushf
ljmp
jmp
cmp
cmp
xchg
xor
js
cmp
repnz
xor
enter
mov
adc
add
cmc
pop
sahf
or
push
add
and
sbb
mov
mov
popa
mov
push
sbb
movsb
adc
xchg
test
mov
xor
push
int3
jnp
ljmp
icebp
es
lds
lods
int
inc
dec
test
jnp
lret
push
add
pop
ljmp
in
jp
mov
jl
jae
inc
bound
mov
mov
xor
push
popa
gs
loop
cmpsl
pop
cmp
nop
shlb
scas
fst
mov
pusha
mov
sbb
addr16
ds
push
sbb
mov
mov
testb
ret
icebp
loopne
dec
cwtl
jmp
adc
cmpsb
pop
out
lods
out
jl
dec
iret
dec
jns
int
push
adc
push
mov
testl
mov
push
in
movsb
sarb
jns
outsl
mov
addb
int3
fsubl
push
and
xchg
xchg
cmp
ljmp
packuswb
lock
sbb
shrl
pop
xor
jecxz
arpl
cltd
ret
repz
dec
mov
nop
inc
lods
sub
incl
movsb
jmp
or
test
push
push
push
jecxz
in
clc
push
inc
and
cltd
sbb
xchg
pusha
shrb
and
and
dec
mov
les
fldl
mov
or
dec
mov
or
daa
add
loope
add
xor
dec
inc
mov
mov
loop
loopne
dec
jnp
cwtl
cwtl
shrl
add
test
std
jo
mov
and
mov
dec
loop
sbbl
jl
xchg
mov
xchg
in
lcall
jecxz
int
cmp
in
repnz
fsts
ds
jns
movb
fwait
out
inc
sar
push
xlat
mov
inc
xchg
inc
push
push
fisttpl
fnstcw
xlat
sbb
and
sbb
jns
push
cwtl
push
pop
adc
fcomps
loope
imull
in
cltd
leave
addr16
inc
fists
pop
ds
cmp
outsb
aad
leave
nop
dec
sbb
aam
mov
dec
cli
in
inc
mov
xor
xchg
hlt
jae
insb
imul
dec
sub
pop
push
insl
stc
xor
in
enter
dec
in
pop
push
cmp
ss
dec
sub
jnp
in
das
ss
inc
add
pop
xor
pop
popf
push
xor
shrb
push
and
out
daa
add
add
add
xor
sbb
fnstsw
std
mov
adc
xchg
sbb
mov
mov
jp
popa
adc
dec
adcl
push
iret
xlat
lret
cmp
add
add
jp
sbb
movsb
and
jle
pop
mov
mov
dec
sbb
sahf
xlat
inc
mov
call
pop
femms
pop
pushf
dec
and
cmp
mov
pop
cltd
mov
and
sbb
cmp
lcall
jmp
push
inc
dec
scas
mov
xchg
mov
xor
push
dec
pusha
loopne
pop
inc
push
pop
cltd
sbb
add
mov
mov
lock
jge
outsl
sarb
divb
push
xchg
das
fs
cwtl
dec
lods
jg
push
inc
dec
dec
shll
es
ljmp
and
cli
js
pop
icebp
outsl
inc
mov
popf
cmp
les
jecxz
stos
cmp
xchg
dec
cwtl
adc
jg
bound
mov
inc
cmpsb
fadds
pop
bnd
add
ja
mov
aaa
test
xchg
pop
fimull
mov
mov
cmp
jnp
fwait
dec
push
movsb
pusha
add
mov
xor
imulb
or
pop
jae
pop
aas
push
jl
scas
test
fstpt
aaa
stos
shrl
add
sbbl
add
or
addb
mov
mov
adc
insb
out
dec
ret
jnp
sbb
imul
jbe
pop
scas
stos
dec
adc
sub
loope
div
inc
adc
decb
cs
dec
gs
lret
add
mov
mov
push
out
stc
sbbl
jle
out
je
int
xlat
dec
sahf
aad
lods
ret
inc
sbb
test
les
push
sub
ljmp
add
push
jae
imul
or
rcrl
push
leave
enter
jo
sub
push
pop
test
inc
cs
push
inc
int
jg
les
icebp
cli
lea
mov
xlat
jmp
into
inc
push
fsubrl
or
push
dec
pop
sahf
push
test
mov
divb
loop
jge
shl
loopnew
incl
into
add
repnz
pop
loopne
sbb
mov
in
jge
pop
add
cmp
imul
popa
dec
repnz
repnz
arpl
dec
mov
repz
sarb
stos
sub
bound
rorb
jp
sub
or
out
inc
std
mov
iret
mov
test
loop
clc
push
or
lret
pop
fbstp
fwait
adc
clc
adc
sbb
stos
or
or
hlt
xor
cli
loope
push
in
iret
movsl
and
mov
pop
test
ds
sub
mov
pop
into
cmp
xchg
push
enter
inc
ret
jno
ret
loope
rcrl
subl
cld
pop
dec
fwait
cltd
arpl
mov
fnstcw
mov
jg
in
lock
int3
pop
sub
jne
lock
stos
cmp
adc
sub
dec
mov
pop
add
hlt
lcall
lock
jo
scas
and
aad
das
out
imul
inc
mov
in
in
rep
mov
xor
fwait
jle
pop
jle
add
in
inc
int3
inc
fsubl
and
call
xlat
mov
repz
out
push
jp
mov
subl
jnp
int3
mov
pop
or
jb
aaa
repz
icebp
dec
stc
and
pop
sbb
jg
push
and
faddl
je
mov
test
pcmpeqd
into
cmpsb
inc
nop
shrb
pop
mov
cmp
xchg
push
cld
or
jg
fisttpl
pop
jp
rclb
popa
nop
pop
dec
jl
mov
add
fdivl
and
xchg
lret
dec
cmp
enter
enter
in
or
sbb
int3
xor
sub
xchg
mov
cmp
fildl
nop
jg
pop
mov
add
popa
adc
pop
dec
and
mov
adc
mull
xchg
insl
mov
push
inc
je
mov
xchg
mov
ljmp
ud0
in
mov
mov
dec
and
cmpsl
pop
rcrb
mov
lret
pop
int
mov
pop
je
dec
pcmpgtb
mov
jno
mov
mov
clc
push
iret
jns
test
inc
out
adc
pop
push
mov
int3
jp
lds
pop
inc
pop
mov
sub
in
repnz
cmp
mov
mov
fsubl
rolb
cmp
jmp
xor
lar
or
fs
jo
lret
cmp
adc
out
pushl
xchg
jnp
out
jo
aaa
mov
pop
ficoms
jnp
push
lea
imul
jmp
ror
ja
push
loopne
cmp
jb
cmp
mov
and
cmpsl
loop
lret
stc
in
cwtl
dec
rol
adc
push
pop
cli
mov
ljmp
mov
mul
push
imul
mov
push
jno
jl
pop
jo
and
popa
popf
movsl
fiaddl
pop
incl
and
loop
nop
icebp
andl
jge
scas
inc
mov
pop
imul
jno
cmpsb
mov
hlt
add
leave
lods
inc
ljmp
and
popf
loop
out
jmp
repz
out
std
dec
nop
psubusw
addr16
adc
aaa
adc
mov
aad
push
dec
pop
push
and
sub
jl
adc
ret
pop
sub
push
fcmovnb
scas
testl
push
adc
mov
and
jns
les
mov
xor
jle
mov
or
pop
and
scas
in
push
icebp
sub
stos
xchg
jo
lea
loopne
adc
cltd
aad
dec
loope
mov
out
mov
loop
xor
aas
xor
mov
mov
mov
ret
dec
jnp
popa
dec
sbb
jno
or
cmp
sbb
xchg
int
fdivrs
adc
fists
fimuls
sbb
test
lds
pop
dec
std
aam
xor
and
push
sub
nop
dec
or
adc
test
rorb
mov
mov
aam
dec
lds
mov
pop
cs
fnstenv
cmp
mov
pop
jge
bound
mov
add
or
jne
adc
pop
add
xchg
sbb
cmc
test
lret
adc
lret
mov
jl
pop
rcrl
les
mov
aad
aad
cltd
and
xchg
lds
jo
mov
out
dec
inc
jb
adc
repz
xor
rclb
mov
test
cmpsl
arpl
xor
into
add
push
or
fsubrl
inc
push
outsb
popf
ja
add
cmp
out
xchg
sbb
dec
and
lahf
mov
jmp
sub
mov
xlat
sbb
jbe
mov
pop
add
imul
and
mov
inc
pop
cld
arpl
jns
lret
lret
xchg
mov
mull
test
cmovno
sahf
add
or
adc
cld
stos
pop
leave
fbstp
jmp
in
xchg
cmpsb
test
stos
lcall
add
out
iret
roll
mov
aaa
popf
out
mov
fisubrs
mov
add
insl
mov
mov
lock
icebp
outsl
pop
xchg
repnz
inc
jge
out
arpl
xchg
push
mov
lods
add
push
mov
popa
fisubrl
xor
fisttpl
enter
lods
aad
and
xor
dec
jns
adc
push
cmp
sbb
sub
fcmovb
jne
iret
pop
in
test
test
ja
add
and
stc
adc
mov
mov
dec
add
scas
mov
mov
xlat
leave
arpl
add
xchg
add
xchg
std
loopne
into
sahf
push
test
in
mov
add
scas
cmp
clc
loope
cmpsl
outsl
pop
pop
pop
push
dec
sub
out
inc
xchg
cmpsb
sbb
jno
jle
mov
out
es
add
push
pop
sbb
insb
xchg
add
ss
sub
adc
icebp
cmp
sub
ds
call
jae
push
cltd
and
mov
inc
pop
lods
fxtract
or
rolb
out
pop
hlt
cmpsb
shr
cs
mov
fisttpll
mov
push
cli
clc
test
push
ds
insb
rcl
test
xor
jle
or
push
shrb
cmp
and
out
fsub
out
mov
inc
and
mov
stos
outsb
pop
push
das
fwait
pop
popf
or
dec
and
ss
xchg
iret
movsl
dec
sub
mov
mov
jbe
cli
out
jge
jecxz
ljmp
inc
mov
mov
or
lahf
mov
add
cs
adc
lret
ljmp
add
in
adc
mov
pop
xchg
loopne
outsb
and
fldl
pop
les
jp
je
jl
dec
in
cld
dec
test
sub
test
and
cs
mov
test
in
mov
lcall
xchg
mov
add
pop
inc
dec
mov
gs
imul
mov
stc
in
gs
and
xchg
mov
cld
arpl
xor
jno
cmpsb
aaa
push
cmc
sbb
sbb
arpl
mov
addb
jnp
and
xchg
push
int
lods
sub
xor
fs
repnz
out
test
popa
mov
cltd
aas
or
iretw
sarl
rorb
es
int3
cmpsb
outsb
nop
fwait
xor
jbe
dec
clc
imul
fwait
mov
xchg
std
mov
paddd
mov
mov
dec
addr16
push
mov
fs
sbb
pop
mov
push
out
pop
dec
jg
fisttps
mov
mov
sub
push
sub
popa
push
xor
adc
fmul
dec
in
mov
out
in
lahf
and
mov
movsb
scas
shlb
jmp
scas
mov
push
or
cmp
dec
leave
lahf
loopne
sub
outsb
shll
iret
in
jo
pop
lock
add
popa
and
mov
mov
mov
or
inc
ds
mov
pop
cmp
mov
imul
rorb
ja
rorb
popf
cli
arpl
imul
jne
arpl
jns
repz
push
mov
into
sti
mov
mov
jecxz
lret
sbb
add
mov
ljmp
mov
addr16
jg
dec
inc
push
in
cs
xlat
inc
daa
test
sbb
dec
xor
dec
movsl
adc
shr
mov
jg
repnz
out
lret
cmc
jnp
int
push
add
jge
ds
mov
jge
nop
int
sbb
pop
xchg
xor
ja
push
out
cmp
gs
cltd
adc
lock
pop
clc
mov
in
ds
sarb
add
enter
and
pushf
xchg
push
mov
push
cmp
sub
dec
mov
mov
pop
loop
repnz
sbb
popf
scas
imul
stos
shll
cmp
gs
cld
nop
push
cmp
iret
mov
mov
jmp
dec
jecxz
fs
push
pop
mov
jp
inc
sub
dec
inc
and
cmp
mov
mov
int3
or
mov
aas
flds
shl
lods
in
jmp
mov
fbld
cmp
cmp
mov
or
stc
bound
pop
icebp
jmp
adc
xchg
mov
jl
cmp
dec
xchg
scas
xchg
and
jg
sub
mov
stos
je
sbb
ds
stos
jmp
pop
push
and
popf
aad
lahf
je
andl
mov
fadds
xor
xchg
insb
dec
jge
jbe
mov
insl
imul
push
leave
daa
aad
add
xor
loop
insl
jns
mov
inc
icebp
cmp
in
inc
into
mov
pop
add
nop
in
cmp
and
sub
pop
int3
jb
xor
or
mov
adc
or
jp
add
push
push
jmp
xchg
mov
add
push
dec
sbb
mov
jno
cmpsb
fucomip
dec
pop
out
ds
fldcw
aad
rcrb
mov
jg
lock
mov
xchg
add
cmc
mov
xchg
sub
xor
jl
mov
xchg
xor
jg
sbbl
mov
lcall
xor
cmp
imul
push
pop
call
lret
or
into
aaa
scas
mov
in
sbb
addr16
ror
sub
jb
call
mov
out
add
pop
mov
cmpsb
rcrb
xchg
popf
and
lcall
cmp
dec
scas
pusha
lret
lcall
test
mov
pop
inc
sbb
mov
xor
lods
mov
pop
inc
lret
adc
pop
movb
push
lret
cmpsb
or
lea
xchg
adc
fnstsw
test
stos
and
mov
xchg
out
xor
mov
incl
inc
fs
pusha
std
out
je
xchg
and
jns
into
inc
adcl
mov
out
cs
jg
add
jae
push
and
cli
xlat
mov
pop
leave
pop
or
icebp
fisubs
xchg
cmp
test
mov
sub
out
faddp
pusha
leave
shll
push
mov
sbb
mov
cli
out
lock
in
push
pusha
sarb
add
sub
rcr
xor
insl
fidivs
add
hlt
cwtl
mov
push
push
add
jge
clc
and
adc
xor
jle
and
dec
mov
and
jb
push
jo
mov
mov
rolb
adc
sbb
loopne
xchg
iret
add
adc
imul
nop
rorb
xchg
mov
stc
push
pop
sub
imul
push
xor
cmp
scas
mov
movsb
mov
jge
cli
add
movsb
es
sbb
adc
aam
test
and
int
stc
sti
mov
fs
outsl
filds
inc
stos
cld
fs
shlb
test
dec
dec
jmp
in
test
dec
cmp
call
mov
ficoml
rol
lahf
inc
xchg
iret
aad
pop
adc
adc
pop
add
push
mov
dec
xchg
push
imul
push
outsl
sbb
rorb
mov
lcall
loope
repnz
pop
add
subl
in
sub
std
cmc
aaa
add
nop
jp
fnstcw
sbbl
or
insb
mov
xchg
dec
test
xor
mov
sbb
push
jo
xor
loope
imul
shr
lahf
js
es
inc
lds
mov
dec
je
pop
jle
loope
mov
cmp
cli
adc
sbb
cs
mov
movl
int3
mov
test
push
stos
cmp
xor
push
or
dec
out
dec
sbb
inc
call
pop
mov
mov
jp
out
sbb
pop
fs
inc
mov
sbb
push
mov
mov
ljmp
mov
jg
inc
mov
xchg
mov
aam
insl
shrb
xchg
dec
lods
outsb
and
sti
call
mov
lock
mov
xchg
or
test
add
dec
or
out
xor
into
dec
lea
jae
sub
jae
cwtl
sub
jmp
jle
adc
mov
jno,pt
mov
leave
xchg
lcall
pop
dec
jo
ss
jge
push
sbb
in
xchg
pop
mov
adcb
mov
js
mov
xchg
inc
mov
out
popa
adc
repnz
push
adc
insb
mov
mov
lcall
js
inc
ficoms
adc
dec
scas
push
sbb
dec
ret
lahf
and
push
cli
mov
pop
fldcw
add
mov
lahf
or
or
inc
imull
xchg
shr
xchg
mov
dec
scas
mov
adc
dec
cmp
sete
xchg
jge
push
leave
cmp
popf
mov
stos
mov
outsb
or
loope
inc
mov
sar
xchg
nop
cmp
addr16
jne
fsubrp
sub
frstor
xlat
ds
loop
jno
jp
mov
push
flds
sub
cltd
and
cld
jle
outsb
ret
decl
push
popa
and
imul
push
xadd
and
std
add
movsb
push
sub
mov
shl
mov
int
and
push
or
add
adc
push
fisttps
ljmp
adc
ljmp
enter
mov
inc
add
roll
clc
and
aaa
mov
or
inc
les
out
inc
lcall
lret
stos
jns
xchg
fcomip
insl
test
cmp
xchg
pop
aam
sbb
push
or
daa
cmp
fdivrs
sbb
push
call
mov
mov
sub
mov
sbb
pusha
dec
bound
sti
jge
xor
adc
shrl
and
mov
imul
adc
dec
mov
xor
pop
repz
add
xor
loop
sbbb
sub
js
fwait
adc
pop
mov
inc
in
cmp
stc
ret
cmp
jge
pop
mov
xor
or
mov
popa
jg
out
mov
inc
icebp
popl
mov
adc
adcb
ds
rcl
push
lock
cmc
pushf
scas
cmp
int
ret
in
es
imul
loope
push
xchg
icebp
fstp
insl
repnz
inc
lss
cld
mov
add
mov
sbb
les
add
sub
jge
push
mov
push
ret
pop
loope
jne
outsb
fnstsw
adc
mov
sbb
sbb
or
scas
adc
insb
int
or
mov
jne
lds
in
pop
push
mov
jnp
pop
outsl
mov
sub
sbb
imul
sbb
adc
ljmp
stos
jbe
repz
divl
addb
xor
xchg
repnz
aam
jae
cmp
sbb
jb
ja
int3
fbld
popf
pop
xor
adc
adc
imul
mov
sbb
push
fwait
scas
mov
xlat
fildl
and
dec
addr16
pop
xchg
into
sysexit
les
stos
mov
out
jmp
fdivr
mov
add
cltd
dec
bound
mov
mov
add
shll
out
xchg
fdivs
push
adc
test
push
clc
ljmp
jge
loope
cmpsb
mov
mov
mov
sbb
adc
rcll
stos
pop
icebp
fstpt
xlat
mov
stos
aaa
sahf
out
lods
inc
mov
or
jne
inc
pop
lahf
loop
adc
scas
testl
add
imul
jecxz
mov
push
pop
fdivr
mov
add
jb
repz
cmp
xchg
push
mov
loop
xor
outsl
aad
fiaddl
sub
push
push
cmc
jge
in
sbb
xor
jle
jno
sbb
outsb
mov
pop
fwait
or
cmpsb
xchg
sub
fiaddl
mov
and
xor
or
pop
jg
arpl
jmp
push
add
jg
iret
outsl
xchg
inc
cltd
in
or
xchg
jmp
add
mov
jne
push
cmp
pop
sti
pushl
js
ret
dec
jl
inc
test
rcrl
sbb
xchg
lcall
insl
jnp
or
outsl
sub
pop
lods
test
sub
mov
jg
xchg
inc
pop
arpl
xor
mov
fwait
cs
cmpsb
filds
lods
push
outsb
cmpsl
push
loope
cmp
push
jno
cld
loop
cvtps2pd
fbld
xchg
xchg
enter
jo
es
movsl
pushf
xchg
mov
jno
sbb
push
xchg
jmp
jne
leave
mov
dec
lret
je
inc
je
out
mov
xor
pop
bound
jo
test
cld
push
mov
in
ffreep
pop
cmp
sbb
loope
cli
push
nop
pusha
pop
mov
or
in
mov
decl
sub
ljmp
jae
sarb
xchg
sub
loope
xor
jl
loopne
adc
pop
cmp
lds
call
mov
mov
int3
dec
push
mov
add
ret
nop
scas
dec
repz
or
push
arpl
and
mov
jb
pop
sub
icebp
xchg
icebp
ret
nop
adc
mov
out
xchg
inc
int3
cvtps2pd
movsl
js
pop
xchg
fnstsw
inc
icebp
xchg
xor
dec
xlat
push
xchg
stos
cmp
aad
add
or
sbb
ret
pop
sbb
sahf
cmpsl
adcb
cmpsb
jl
mov
mov
inc
lahf
sbbb
add
adc
jmp
pop
mov
mov
push
fnstcw
std
cltd
outsb
jmp
cmp
stos
sti
mov
inc
push
bound
sbb
repnz
mov
xchg
sbb
jl
adc
dec
imul
push
xor
lock
or
lea
and
mov
sti
mov
xchg
test
mov
xchg
aam
fstpl
sbbl
pop
je
ret
ret
xlat
dec
mov
je
adcb
or
test
mov
mov
fnstcw
clc
pop
dec
loopne
xorb
icebp
leave
mov
mov
inc
push
sti
mov
jle
pop
lock
inc
pop
pusha
adc
jg
sahf
jb
jmp
jne
jb
fs
push
scas
xchg
xchg
add
and
mov
scas
popf
in
or
test
pusha
into
out
xchg
leave
cmp
jl
hlt
sbb
in
je
in
je
leave
jge
pusha
dec
decl
mov
push
mov
cmp
push
shrb
push
xor
adc
push
xchg
xchg
repz
push
lret
cmpsb
popf
lock
mov
adc
ret
and
dec
push
dec
or
std
dec
jg
ret
das
and
cmp
loop
int3
xlat
mov
push
mov
fisubl
jbe
sarl
daa
jmp
sahf
mov
mov
cs
scas
lods
adc
jnp
add
sbb
xor
cmp
xchg
mov
pusha
pop
and
xlat
mov
adc
das
xchg
mov
or
lret
rorb
sub
mov
xor
mov
xchg
ret
stc
clc
outsb
ss
fucom
add
inc
pop
mov
cli
xchg
sub
fwait
clc
and
add
stos
jmp
mov
sub
xor
push
mov
icebp
sbbb
sub
cmpb
xor
xor
dec
dec
aad
in
into
rcll
aad
mov
jno
mov
mov
pusha
pop
xor
mov
push
out
cmp
inc
daa
out
sbb
icebp
push
xchg
shl
shrb
jbe
lods
push
sbb
outsb
sti
data16
cmp
int
mov
add
int
jmp
add
jae
jecxz
bound
cmp
xor
shll
push
mov
rcrb
jge
jnp
or
jg
dec
incb
dec
cmp
shl
cmp
mov
cmp
mov
mov
jns
aaa
iret
test
stos
cmp
xor
dec
pop
test
pop
jmp
std
lock
clc
mov
jo
inc
orb
adc
cld
jnp
jo
js
into
loope
xchg
cmpsl
dec
cmpsl
insb
es
cltd
xchg
xchg
cmpl
hlt
pusha
shl
add
aas
xor
lods
mov
mov
imull
lds
sahf
loope
jle
iret
xchg
lds
pop
mov
xorb
cltd
adc
mov
cmc
cmp
push
out
movsl
and
flds
imul
inc
xor
mov
inc
adc
push
add
pop
push
adc
cltd
adc
mov
std
inc
add
push
xchg
cs
in
inc
jnp
and
scas
pop
mov
inc
leave
xchg
andb
pop
push
popa
repnz
in
fbstp
add
in
xor
push
sti
cli
add
pop
lret
imull
dec
jns
jp
xor
mov
fdivrp
fucomip
inc
lcall
jg
lods
xchg
mov
mov
leave
and
dec
mov
mov
jns
jae
xchg
mov
sbb
mov
or
gs
or
scas
in
add
mov
lcall
fcompl
sbb
leave
or
fsubr
lret
cmpsb
add
fnstsw
dec
push
ss
jp
jl
jg
jnp
popf
movsb
out
subl
iret
andb
cmc
jp
xor
mov
enter
jae
ljmp
mov
out
inc
jp
mov
jge
insl
addl
mov
lret
out
cmp
sbb
mov
jmp
sub
clc
pop
loopne
fidivrs
xor
inc
dec
mov
mov
push
fimull
xchg
jg
mov
int
push
jb
dec
bound
pop
xor
loope
or
jg
cmp
xchg
fsub
cs
mov
push
popa
ret
lods
arpl
pop
roll
insl
iret
daa
pop
cli
insb
popa
pushf
xbegin
push
mov
lahf
leave
mov
mov
rcrb
or
and
or
push
jnp
leave
dec
dec
into
test
mov
xor
and
int
mov
mov
subb
adc
cmp
cwtl
pusha
cld
ds
mov
sbb
xchg
rcll
insb
inc
sub
in
pusha
aam
aam
scas
jecxz
jl
pop
aad
mov
outsl
push
xchg
mov
bound
fisubrs
or
rorl
rcrb
repz
int3
mov
fcompl
sbb
mov
mov
filds
add
dec
out
and
cwtl
sarl
sub
dec
adc
and
lahf
cmp
call
push
in
lret
and
mov
xchg
fistps
cld
push
mov
pop
rclb
xchg
and
divb
repz
out
push
subl
pop
push
push
pop
sbb
jge
cmp
jae
dec
loopne
mov
loope
ja
repz
imul
cli
dec
lcallw
add
xor
jbe
stos
ret
adc
mov
push
gs
insl
jnp
lods
pushf
pop
sub
push
je
scas
adc
mov
imul
adcb
jp
or
pinsrw
sbb
jmp
enter
add
out
or
lcall
insl
cltd
orb
jg
mov
jge
jge
ficomps
and
adc
sbb
popf
push
arpl
sbb
imul
pop
dec
scas
push
aas
pushf
fidivrs
mov
roll
out
rcr
sub
cli
out
ret
jge
iret
shl
orl
xlat
fisubl
punpcklwd
sub
lock
cmp
sub
cmpsl
push
insl
jo
mov
pop
jns
dec
ret
jmp
sbb
push
mov
rorl
xor
or
cld
cs
xor
jecxz
mov
jl
ret
test
out
test
and
loop
push
mov
dec
sbb
jecxz
sub
sub
outsb
rcrl
int3
add
stos
mov
sub
adc
fwait
daa
lahf
lods
fildll
push
mov
cltd
lock
xchg
cltd
mov
rorb
push
cwtl
inc
sbb
push
pop
dec
mov
lds
sbb
cmp
js
jnp
jns
lods
je
outsl
movsb
sarb
in
add
mov
mov
in
test
fs
rolb
je
mov
test
xor
dec
cltd
fcmovbe
jne
or
mov
vmovaps
mov
mov
adc
ljmp
or
loopne
xchg
mov
inc
lods
mov
adc
popa
in
xor
divl
jo
iret
pop
mov
dec
int
cmpsb
lods
aad
pop
dec
inc
add
mov
push
adc
adc
mov
into
fcoms
xchg
jl
fistl
jnp
lock
xlat
mov
mov
xchg
les
rcrb
fiaddl
in
or
lret
and
cs
loop
lcall
sub
lock
xchg
lds
and
loopne
cmpsl
lds
jp
push
dec
pop
cmpsl
nop
add
push
cmc
stos
insb
nop
sub
cwtl
daa
and
jbe
jns
repnz
dec
xor
clc
pop
jne
bound
mov
pop
int
stc
push
dec
adc
cmpsb
add
push
std
dec
mov
and
sbb
js
xchg
dec
xor
adc
fsts
fisttps
sbb
mov
rclb
mov
jo
add
and
outsl
push
add
out
in
sbb
cmp
rcrb
sti
push
cmp
pop
jmp
adc
outsl
or
lret
adcl
and
popl
aad
mov
jo
ret
out
adc
mov
std
mov
mov
jmp
pop
les
fdivrs
and
xchg
in
lods
test
sbb
mov
adc
int3
mov
cmp
and
mov
mov
aad
insb
mov
scas
mov
and
jp
dec
in
bound
jae
decl
popa
frstor
jmp
add
out
in
mov
inc
rcrl
out
shlb
mov
loop
mov
out
inc
icebp
xor
call
and
aad
mov
mov
jbe
push
xchg
imul
pop
mov
push
pop
jns
mov
inc
pop
mov
xchg
fwait
xchg
dec
adc
xor
je
sub
jb
loope
mov
xchg
scas
ljmp
icebp
jp
add
out
out
enter
xchg
in
fs
and
adc
sbb
out
sbb
or
dec
xchg
or
mov
inc
or
test
lods
mov
push
sub
cmp
sub
out
fnsave
out
dec
leave
cli
in
fincstp
inc
add
adc
adc
sbb
cwtl
cmp
pop
and
decb
movsl
sbb
jne
cmpsb
mov
adc
out
mov
stc
mov
nop
push
daa
push
xor
test
popf
sbb
jle
and
sub
lea
aaa
gs
test
sub
jmp
and
sub
jae
sarb
push
xchg
push
cli
jp
inc
stc
pusha
sbb
cwtl
dec
or
xchg
mov
pop
popf
pop
or
outsb
in
andl
outsb
sub
mov
xchg
push
aas
or
daa
subl
cmp
fcoms
and
or
sbb
pop
cmc
clc
cld
cli
in
or
add
mov
mov
push
lret
xor
out
scas
mov
adc
fsubl
fcomi
fwait
cli
pop
mov
out
pop
add
cmpsl
xor
jmp
sti
mov
pusha
xor
lahf
mov
and
sub
lods
fcomi
xor
mov
lods
imul
xchg
inc
imul
jge
xchg
xchg
mov
inc
clc
jp
pop
inc
jae
mov
add
jg
ljmp
jmp
fisttpl
lret
cmc
sub
popf
test
call
test
push
out
std
add
lds
or
sub
fst
out
xchg
gs
lock
test
adc
mov
stos
addr16
ficoms
movsb
nop
mov
mov
data16
icebp
adc
dec
testl
push
xchg
jns
popf
mov
mov
push
sub
jb
cmp
lcall
sub
inc
and
clc
inc
enter
mov
mov
cld
xchg
mov
xor
push
jns
scas
jmp
xor
push
movsl
out
cmp
hlt
dec
add
shrb
jno
pop
push
loop
xor
jns
int
pusha
xor
imul
xchg
out
inc
pop
mov
outsb
xchg
inc
dec
mov
rolb
jge
jo
or
pop
mov
lods
test
aam
push
fists
aad
mov
mull
cmpsb
stos
jns
mov
push
dec
add
dec
push
ret
stos
or
or
sahf
cmc
lock
mov
out
pop
je
out
pushf
in
pop
fsubrl
loop
dec
cmp
xchg
rcrl
lods
decl
or
pop
xor
insl
leave
lods
testl
lea
mov
adc
outsl
mov
and
cmp
fisttps
sahf
adc
lcall
inc
pop
sbb
mov
sti
lret
jne
sbb
push
std
push
shrl
jno
push
movl
ror
cmp
push
cmp
test
repz
int3
mov
cmp
or
or
out
inc
sbb
incb
leave
mov
ds
shlb
pop
aad
jns
aam
push
inc
daa
fucom
call
loopne
xor
add
aad
dec
or
hlt
mov
aam
repnz
fdiv
adc
sbb
in
fisubs
outsl
cmp
dec
out
pushf
fdivrl
and
dec
jne
and
cmpsl
enter
stos
sahf
leave
das
bound
iret
les
movsl
test
mov
repz
out
ret
jle
lcall
xchg
cmpsb
mov
sti
lds
push
rorb
mov
insb
scas
xor
push
xor
testb
jge
in
push
test
pusha
jnp
inc
in
mov
into
lret
lods
cwtl
add
enter
cmp
dec
test
pop
mov
scas
mov
xchg
int
mov
inc
das
xor
pop
ret
dec
outsb
bnd
popa
dec
out
inc
jle
into
xor
test
js
repnz
mov
enter
xabort
bound
mov
test
nop
loopne
xor
lods
loopne
out
shl
aas
mov
int3
xchg
cmp
ss
stc
stos
pop
dec
xchg
out
test
test
int
mov
and
add
push
iret
xchg
sub
push
lret
push
and
sub
nop
push
push
nop
scas
inc
add
push
add
leave
int3
jmp
pop
daa
sti
pop
adc
lods
push
in
inc
or
pop
popa
movsb
mov
enter
aad
add
pop
test
std
sub
call
sub
jl
jle
mov
dec
jns
dec
mov
mov
mov
fsubs
pop
dec
or
mov
ror
push
daa
mov
mov
ret
iret
loop,pt
xchg
roll
loop
cmpsl
dec
hlt
loop
add
into
jno
fwait
fs
mov
xor
ret
loope
repnz
fdivr
repnz
addr16
jns
faddl
int
scas
lods
mov
loope
mov
fildl
and
lea
popa
mov
sub
mov
sub
rorb
icebp
enter
or
sbb
pop
dec
sub
loope
int
adc
push
insb
mov
stc
scas
pop
iret
ljmp
push
cmp
push
lret
xchg
call
dec
cs
shll
cmc
clc
insl
pop
iret
and
sar
out
xchg
mov
xor
dec
adc
pop
ja
das
repz
mov
arpl
outsl
pop
int3
pop
jo
in
push
inc
xor
push
fcmove
stos
jmp
jg
and
out
scas
cmp
adc
lcall
pop
xor
xor
lock
mov
je
dec
sar
and
pop
addr16
lcall
push
cltd
ret
pop
mov
dec
cmpb
pop
jmp
adc
xor
popf
popf
lock
jns
dec
add
in
pop
xor
jb
cmc
mov
inc
mov
jb
gs
push
jns
add
test
xchg
addr16
jecxz
movsb
cmp
fnstenv
out
dec
xchg
outsl
xor
cmp
sub
xchg
sbb
test
cli
and
cmp
mov
imul
or
jo
push
add
push
xor
sbb
push
insb
imull
inc
jae
fsubrl
dec
pop
push
push
add
mov
inc
scas
ljmp
mov
dec
xchg
out
daa
cmp
jg
rcrb
stc
cwtl
ror
lock
into
sbb
mov
pusha
inc
rolb
and
pop
ss
popa
shlb
daa
xchg
fs
pop
mov
jno
add
fildl
cmp
cmp
inc
shrl
daa
inc
in
pushf
and
push
outsb
jge
cld
jo
xor
add
sbb
jo
cmp
push
das
mov
cltd
iret
sarl
lds
outsb
sub
sub
jae
adc
jb
add
sbb
fiaddl
test
mov
mov
imul
dec
inc
nop
mov
or
mov
adc
or
cmp
or
stos
or
push
dec
jge
xchg
inc
dec
sub
outsb
setnp
int
xchg
in
mov
cmp
pop
pop
test
repnz
or
pop
sahf
mov
sti
in
in
imul
imul
out
xchg
icebp
insb
and
jg
push
sbb
cwtl
sub
pop
cmp
imul
inc
leave
testb
loop
sbb
xchg
jle
pop
insb
fs
in
imul
jae
sbb
lods
jne
andl
mov
xor
addb
jmp
xchg
in
inc
icebp
lods
push
add
js
dec
sbb
in
push
das
das
cmp
adc
ds
pop
ret
xchg
out
sub
fsts
test
addl
jl
dec
les
negl
pop
mov
pop
jle
fisttpl
js
sbb
dec
inc
dec
pop
add
pop
push
stos
mov
xchg
pop
fwait
jae
add
shll
out
add
jnp
mulb
cmc
add
orb
test
imul
pop
mov
pop
sub
adcb
mov
popa
pop
jne
stos
dec
adc
lret
loopne
sbbl
sbb
int
mov
das
test
mov
xchg
sbb
stos
mov
push
js
sti
insb
or
mov
mov
fs
fimull
cmp
ja
shl
lret
mov
lock
cmpsb
ret
xchg
bound
sub
icebp
ss
imul
movsb
and
leave
sar
stos
inc
shlb
inc
cbtw
mov
mov
in
js
sbb
lods
and
inc
cli
push
inc
xor
mov
clc
movsl
adc
lock
inc
lahf
loopne
mov
js
outsl
sbb
push
out
pop
ss
test
ja
jecxz
mov
lock
and
mov
cld
je
clc
stc
sarl
mov
and
or
daa
add
push
testb
fst
cmp
jbe
test
ret
jecxz
dec
in
jnp
mov
rorb
sqrtps
bswap
mov
outsl
shrl
xchg
aad
shll
xchg
xchg
les
inc
xchg
pop
or
bnd
cmpsl
push
ds
ss
js
or
xchg
lret
sbb
call
jo
cwtl
hlt
add
sub
shlb
jg
xchg
popa
std
ret
cmp
mov
push
push
ret
xchg
int
popa
jns
idivl
inc
pop
pop
inc
inc
popa
cs
jl
cs
pop
pushf
jge
push
or
dec
mov
jbe
imul
and
or
pop
push
pop
fs
jp
jecxz
sub
mov
sarl
sbb
jns
dec
inc
or
or
adc
sub
sbb
dec
js
out
dec
popa
push
sarl
pop
pop
orb
push
push
mov
sub
stc
sahf
dec
cs
outsl
leave
inc
out
stos
push
sbb
mov
mov
je
mov
jbe
inc
test
icebp
mov
mov
roll
ficoml
in
jg
jmp
lcall
pop
mov
shlb
out
push
mov
pop
test
repz
ja
sbb
cmp
imul
push
pushf
mov
xor
mov
iretw
pop
jge
cld
pop
shrb
mov
mov
ret
idivl
mov
arpl
xchg
ss
sbb
push
jne
mov
xor
filds
sub
popf
pop
orb
sbb
repz
cltd
cmc
xchg
aad
wrmsr
ja
pop
adc
inc
or
shlb
add
shlb
leave
sub
inc
ret
loop
dec
mov
repnz
insb
push
adc
mov
xchg
mov
test
lahf
mov
xchg
jecxz
dec
xchg
mov
mov
imulb
jecxz
jb
mov
dec
push
sbb
pop
daa
add
lock
sahf
or
push
pop
sbb
cmpl
and
xchg
sbb
stos
inc
lcall
sub
int3
in
icebp
daa
inc
lds
sub
mov
lcall
outsl
inc
and
add
outsl
jae
mov
pop
int
fisttpll
cmc
insb
push
add
xchg
dec
mov
in
jge
dec
mov
fsts
pusha
fmulp
aas
cmpsl
test
addl
pop
adc
sbb
cli
sub
adc
es
aad
je
and
lahf
jno
mov
ret
bound
push
xor
call
out
jbe
pushf
aad
and
cmp
popf
andb
nop
mov
inc
test
xchg
mov
inc
push
mov
mov
ds
inc
inc
les
xor
aad
mov
push
add
adc
lcall
dec
ja
jecxz
cltd
jns
jge
push
inc
xchg
or
or
ret
icebp
scas
sbb
pop
fimuls
iret
jmp
add
dec
test
ret
sub
lds
add
in
sub
iret
in
xlat
adc
push
not
xchg
inc
movl
das
xor
das
loop
lods
sbb
push
adc
jmp
outsb
repnz
loope
cltd
lret
fcomps
lods
mov
dec
aaa
jle
xchg
ds
dec
stc
out
scas
cmpsb
pushf
fldt
ja
mov
rcrb
jle
insb
jne
lds
xor
adc
sbb
pop
jae
pop
mov
pusha
sbb
mov
fistpll
mov
add
sbb
shl
mov
xchg
addr16
xchg
sbb
inc
dec
adc
push
fnstcw
lcall
mov
popa
gs
outsb
push
jp
jae
data16
mov
inc
shl
add
test
setge
inc
sarb
mov
mov
pop
push
lds
test
pop
je
movsl
add
mov
test
gs
js
fs
cs
lea
cmp
pusha
pop
imul
sbb
mov
mov
pop
pop
mov
test
int3
ds
idivb
bound
cmp
push
test
in
leave
xor
sahf
xchg
dec
adc
gs
addb
and
inc
xchg
scas
dec
gs
push
mov
aam
imul
push
aam
loope
or
xor
ljmp
call
ret
lods
add
lock
imul
xchg
pop
rolb
adc
add
cmp
cs
sub
xchg
mov
in
pop
js
iret
mov
fadds
mov
int3
sub
in
add
inc
fisubl
std
sbb
cmp
stos
mov
out
or
movsl
mov
cmp
ret
stos
sarl
sbb
xor
cltd
xchg
add
pop
scas
enter
xor
fsts
repnz
fdecstp
add
shll
bound
push
icebp
cmp
jecxz
sub
push
jns
icebp
fwait
cli
imul
xchg
loop
aad
adc
addl
adc
or
sub
ds
and
dec
jnp
sti
push
sbb
aas
pop
sti
cltd
je
cmp
or
loop
clc
imul
sbb
mov
xchg
adcb
push
pop
push
xchg
adc
jle
mov
cmc
sbb
mov
fcomps
push
cmp
sbb
lahf
out
rorl
cli
in
sahf
sbb
not
gs
mov
out
push
and
push
xor
fildll
jge
divps
mov
or
insb
jecxz
je
pushf
test
sub
incl
inc
ds
scas
in
es
and
push
out
stos
loopne
cmpsb
and
lret
sbb
mov
aam
ss
test
rcrl
lea
ds
stos
test
xchg
fimull
std
xchg
scas
add
lcall
adc
mov
and
push
ds
std
xchg
out
adc
mov
sbb
dec
pop
mov
jp
cmpsl
or
xor
mov
cmc
ret
xchg
pop
scas
push
imul
jp
and
dec
inc
stos
loopne
mov
ljmp
repz
or
in
fcomps
rolb
jb
sub
mov
xlat
testl
mov
or
nop
add
lock
jae
rcrl
dec
xchg
sbbb
lods
pop
and
xor
hlt
mov
ficoms
cmp
or
orl
out
inc
xor
xlat
pusha
rcr
out
int3
sub
inc
cmp
inc
ja
jns
push
js
repz
dec
pop
jmp
icebp
pop
mov
sti
setne
xchg
dec
push
pop
dec
lret
adc
mov
ja
mov
ds
add
dec
sbb
jp
enter
data16
add
lods
cmp
cmc
insl
cmpsb
add
jo
sti
arpl
roll
mov
call
jnp
sub
scas
movsl
push
sub
jmp
xchg
mov
inc
jge
cmp
pop
add
popa
or
repz
jl
fdivs
stos
lret
lock
cmp
push
or
roll
outsl
fimuls
mov
jp
sti
or
dec
sub
push
insl
cltd
popa
leave
rcrl
outsl
xchg
sub
cmpsb
cmp
or
mov
loopne
popf
sub
mov
enter
inc
int
mov
fisttps
push
jmp
jb
dec
pusha
jg
dec
push
sbb
push
fbstp
add
dec
ret
pusha
cmp
enter
ret
in
pop
inc
jnp
in
leave
xchg
xchg
insb
out
loopne
subb
xchg
push
mov
sti
jp
subl
jbe
xor
mov
lcall
mov
nop
inc
inc
ret
lods
pop
pop
rolb
dec
daa
dec
ret
inc
xchg
sub
pop
aaa
insl
and
fstpl
imul
enter
es
ja
filds
fildl
imul
fs
jmp
and
xchg
cmpsl
sti
jl
shlb
sbb
dec
rcrl
into
mov
pop
or
mov
push
mov
add
xchg
shr
sub
mov
ljmp
sub
mov
inc
push
fstl
std
adc
std
jl
inc
loop
adc
xchg
outsb
inc
dec
or
push
lahf
mov
addr16
shlb
jp
mov
sbb
sahf
sub
xchg
jg
adc
push
mov
mov
popf
outsl
cwtl
pop
and
mov
dec
ror
add
push
push
nop
jle
call
dec
inc
std
out
xchg
imul
sbb
jecxz
add
or
xor
lock
sbb
out
out
das
push
cli
cmc
cwtl
mov
push
insl
ja
pop
in
popf
ljmp
mov
sbb
cld
mov
dec
movsl
pop
outsl
ret
or
imul
sub
je
inc
int
orb
mov
push
outsb
sbbl
aam
jbe
or
push
sub
pop
mov
int
jp
int3
xchg
mov
out
and
xor
fistpl
adc
outsb
popa
or
sub
sahf
mov
mov
mov
cltd
insl
mov
es
xor
int3
bound
aaa
mov
xchg
gs
loop
scas
ret
fnstenv
addr16
xchg
cmp
inc
mov
cwtl
bound
xor
dec
clc
or
adc
in
cs
sub
mov
xor
dec
das
pop
dec
inc
ja
push
cltd
imul
rcr
inc
js
xor
fsubl
and
arpl
and
dec
or
nop
shlb
movsl
jecxz
pop
and
std
sub
loopne
call
insl
lds
adc
xor
pop
jo
aam
pushf
push
out
jl
jns
sahf
ss
xlat
inc
jne
adc
cltd
fwait
mov
popf
pop
push
stos
push
icebp
mov
add
andb
sbb
mov
sub
cs
inc
aas
pop
bound
push
fildl
sti
adc
imulb
cmp
mov
add
push
std
or
pop
mov
out
mov
out
cmp
mov
and
mov
or
inc
inc
ss
shll
sub
mov
push
mov
popa
lcall
in
in
jp
xchg
jo
pop
add
jecxz
mov
jle
arpl
sti
leave
popa
popa
popf
popa
push
outsl
inc
and
lock
aam
xor
das
jno
xchg
fdivl
push
mulb
insb
and
xor
inc
pop
je
pop
xor
mov
mov
int
dec
xchg
outsl
repnz
xchg
xchg
cli
iret
lds
inc
mov
sbb
negl
std
lahf
mov
shlb
cmpsb
and
cmpsl
xchg
shl
xor
sub
test
lret
or
and
stc
lcall
mov
cmp
sub
push
push
jb
and
icebp
sub
inc
icebp
cmpsl
pop
mov
push
add
jne
sbb
mov
imul
stos
icebp
push
pop
cmc
dec
ds
mov
dec
or
adc
clc
std
sbb
xchg
sbb
push
out
pop
add
sarl
test
int3
sub
add
clc
jns
bound
nop
push
cmp
data16
dec
loopne
nop
add
in
cld
push
mov
popf
imul
adc
push
iret
adc
aaa
push
mov
lods
adc
pop
shr
std
lahf
mov
mov
mul
call
insl
adc
dec
call
jb
xchg
jl
dec
sbb
pop
shrb
sbb
jae
dec
cmc
xchg
aas
cmp
mov
jbe
mov
cmpsb
call
adc
les
sbb
fwait
imul
pop
inc
stos
pusha
adc
push
mov
xchg
jb
push
sbb
mov
add
xor
xchg
lret
cmp
inc
xchg
pop
ss
add
jg
xorl
ret
hlt
adc
pop
inc
leave
loop
mov
jnp
stos
xor
lret
jne
add
jp
lgs
in
aad
xchg
mov
leave
out
jo
pop
mov
jmp
xchg
imulb
lret
or
adc
test
and
dec
dec
stc
add
fs
and
jmp
lahf
dec
push
aaa
sti
sbb
js
xor
mov
ss
int
pop
or
xlat
sub
xchg
scas
popa
movsl
repnz
mov
add
mov
in
movsl
push
fildl
lcall
pop
pop
icebp
das
push
ds
xor
imul
jp
or
push
xor
les
mov
cmp
mov
mov
fcomps
dec
dec
dec
jge
cmp
fdivl
out
out
repnz
in
cmp
or
mov
mov
mov
xchg
fwait
roll
add
mov
sub
imul
loopne
adcb
iret
fnstcw
cwtl
scas
into
cmp
inc
mov
je
enter
xor
mov
inc
mov
in
jne
clc
push
adc
stos
cmp
cs
adc
cld
xchg
inc
cs
out
add
shlb
into
cmp
cmp
adc
mov
cmp
inc
cwtl
adc
fst
mov
pop
js
out
rcll
pop
and
cli
pusha
sub
andl
pminub
jae
xchg
sbb
pop
int3
iret
or
push
stos
push
mov
idivb
ftst
es
or
out
or
mov
inc
nop
repz
xchg
out
xchg
xchg
popa
jmp
or
repnz
cmp
jl
lods
sbb
fsubrs
shll
pop
rcr
mov
shrb
inc
imul
call
out
push
lds
xchg
xchg
fistps
bound
mov
pusha
inc
mov
dec
pop
cwtl
fwait
xchg
jge
mov
fwait
hlt
test
add
in
sub
fldenv
leave
push
pusha
inc
sahf
das
adc
and
insl
fdivr
nop
inc
fcmovnu
mov
ret
ds
daa
sbb
scas
mov
fdivl
pushf
mov
testl
dec
sti
outsb
push
jbe
inc
ret
icebp
and
cld
inc
push
into
pop
push
call
push
xchg
pop
call
mov
and
fisttps
in
cmpsl
ret
mov
test
cwtl
pop
xor
nop
std
aaa
mov
mov
xchg
imul
es
cmpsl
fwait
lret
int3
mov
add
cmpsl
cmp
add
and
out
loopne
cmp
movd
jns
cmpsl
mov
in
mov
das
sub
lret
mov
sub
js
loop
jnp
sbbb
inc
sbb
push
shrb
lret
sbb
rolb
cld
cmp
or
jp
mov
adc
stos
add
push
xor
jle
test
and
mov
js
or
shrb
stc
jg
test
xor
rol
sbb
mov
aam
into
das
adc
out
repnz
popf
call
jg
into
loop
fisubrl
divl
cmp
jmp
xlat
sarl
pop
aad
inc
pop
fidivl
push
lds
ret
ds
jo
jnp
dec
push
push
push
fnsave
cld
jl
test
fbstp
or
jo
pop
mov
jmp
cmp
mov
test
jo
inc
rcl
insl
adc
pushf
rolb
filds
dec
fcoms
or
jb
and
inc
add
loop
lret
ret
adc
xchg
cmp
mov
test
nopl
addr16
sub
cltd
sbb
mov
dec
mov
lahf
repnz
push
mov
push
jne
mov
out
xchg
sbbl
jle
jns
mov
and
adc
lcall
pop
gs
xor
inc
push
xchg
xchg
pop
cmp
sbb
test
push
lock
xor
mov
aas
xchg
xchg
fistps
in
xchg
push
dec
decb
xor
shlb
fdivrl
in
aaa
add
xor
insb
bound
insb
fcomps
cmp
negb
inc
xchg
mov
divb
in
imul
xchg
stos
es
clc
pop
ss
jne
pop
mov
and
sbb
dec
imul
bound
rcrb
and
jns
test
xor
adc
pop
jecxz
bound
int
and
sbb
mov
mov
pop
cli
and
rclb
lcall
mov
fsubrl
pop
inc
scas
jmp
add
dec
mov
mov
pop
cmp
fisubs
pusha
std
push
mov
inc
popa
and
loope
pop
jbe
leave
xor
sbb
cmp
cmpsb
dec
cltd
cmp
sti
popa
das
push
sti
or
pusha
and
add
fmull
adc
adc
push
inc
repz
ja
test
es
or
mov
je
xchg
push
cmp
push
jp
xchg
les
cmovae
les
mov
push
cmp
push
jne
jno
mov
jmp
stos
pop
dec
xlat
adc
out
xchg
push
inc
push
shlb
ja
inc
stc
mov
rol
push
lcall
stos
inc
and
int3
rolb
fdivrs
jne
lahf
popa
jae
sbbl
je
arpl
xor
push
sub
nop
scas
call
sbb
cltd
push
mov
and
or
xlat
jl
xchg
test
mov
dec
sub
lods
xor
data16
sahf
dec
call
js
sbb
hlt
clc
notl
mov
inc
mov
ds
cltd
xchg
inc
cli
out
dec
stos
movzwl
xchg
xlat
cmp
ss
jb
sbb
jl
loop
addr16
clc
push
mov
imul
push
cmp
into
lcall
push
ljmp
lods
std
dec
sub
mov
mov
jnp
adc
lods
inc
cs
pop
sub
pop
std
lahf
dec
daa
in
mov
mov
inc
je
pop
fbld
adcb
fnstsw
or
cmp
filds
gs
pop
sbb
cmp
pushf
std
dec
push
iret
dec
orb
mov
repz
lahf
mov
cmp
push
int
fcmovne
cwtl
push
mov
cmp
aam
jg
enter
sarb
mov
rorb
mov
push
daa
push
sbbl
out
leave
inc
add
stos
lret
and
or
ds
adc
push
filds
stos
cs
ret
push
pop
iret
mov
sti
push
test
pop
and
imul
xchg
mov
std
les
mov
sbbb
in
push
mov
xor
pop
dec
pushf
test
outsl
neg
mov
out
xchg
xchg
fs
iret
mov
push
push
out
imul
cmp
lret
clc
and
and
out
popa
xor
adc
add
ss
scas
dec
mov
dec
dec
xchg
dec
dec
add
ss
and
sub
push
push
xchg
push
push
xchg
sbb
cld
pushf
xor
imul
push
push
icebp
dec
cmc
dec
fcompl
out
pop
jle
adc
test
mov
ficomps
addb
int3
ja
push
push
push
test
cmpsl
jnp
mov
daa
rorl
push
pop
repz
push
inc
inc
sbb
shrb
adc
ficoms
sub
sbbl
movsb
pusha
popl
ja
push
sub
dec
imul
adc
sub
imul
lahf
mov
cmp
adc
mov
inc
jmp
lret
outsl
sbb
xchg
gs
stc
imulb
insb
subl
in
sbb
fldl
pop
xor
icebp
in
bound
lret
xor
sbb
xchg
aas
icebp
cltd
rorl
jns
inc
sub
push
sub
inc
xchg
xchg
js
sbb
imul
cmp
popa
insb
mov
cli
add
jae
pusha
mov
jg
inc
out
mov
bound
push
inc
testb
jge
ja
into
sbbl
pop
hlt
rolb
test
stc
pop
out
aad
cmovp
ret
lret
and
jbe
xchg
xor
sub
rcrb
sub
and
adc
cli
fdivrs
fimuls
lea
push
hlt
dec
adc
push
xchg
jb
or
in
push
fildll
sarl
sbb
mov
lret
mov
test
mov
ss
repnz
arpl
mov
add
push
scas
jecxz
mov
mov
stos
daa
pop
jle
jmp
sub
mov
jb
cmp
xor
add
add
mov
out
adc
gs
shlb
cmpsl
rcl
xchg
lds
pop
les
imul
push
outsb
jg
adc
jp
in
add
cmp
jmp
cmp
stc
push
jnp
xor
mov
dec
cmp
adc
mov
cmp
xchg
sub
shrl
pop
imul
cmpsb
fldcw
pop
mov
cmp
or
fucomip
pop
jmp
jge
rcr
addr16
dec
fs
xchg
add
pushf
dec
pop
je
sbb
xchg
into
mov
lret
adc
cmp
sbb
fiadds
or
repz
dec
call
inc
ja
stos
hlt
cld
subb
leave
pop
dec
jno
in
loop
sub
aaa
adcl
mov
or
xor
int
jo
xor
imul
in
sub
xorb
fstl
xchg
or
cmp
hlt
sub
test
js
push
xchg
mov
dec
push
xor
xor
xchg
pop
test
repz
add
arpl
xor
jmp
and
pop
mov
mov
scas
mov
sub
sub
dec
pop
pop
loop,pt
idivb
or
fimull
gs
and
and
jle
lods
push
or
sbb
lock
xchg
outsl
repnz
push
inc
cmp
in
in
mov
and
jecxz
js
xor
pop
mov
xchg
aad
pop
gs
and
les
pop
ja
xor
mov
jnp
push
mov
mov
sbb
push
inc
pop
out
test
mov
push
dec
test
cmpsb
cmp
push
lcall
stos
out
test
ret
sub
loope
jne
mov
dec
pop
mov
jl
mov
loopne
jmp
rolb
fwait
xchg
dec
data16
jmp
inc
das
add
cmp
test
test
arpl
pop
cli
popa
push
jmp
add
mov
lret
adc
push
scas
add
test
insl
fwait
xlat
call
cltd
fs
lcall
inc
push
jg
xchg
fsubr
mov
adc
fdivs
push
jb
mov
inc
or
inc
and
pop
cmp
sbbb
or
push
pop
pop
call
outsl
xchg
fnsave
inc
dec
dec
dec
dec
insl
loopne
out
insb
addr16
int3
rorl
lret
xor
xchg
rcrb
pop
loop
push
frstor
jns
jg
pusha
inc
push
mov
insb
cmp
inc
cmpsl
loop
pop
clc
jnp
add
mov
scas
or
in
and
xor
push
lret
outsb
push
mov
cmpb
mov
xor
dec
pop
mov
sbb
and
aad
enter
adc
dec
adcb
cmp
mov
inc
bound
push
push
push
xchg
jmp
test
lahf
mov
and
xchg
mov
ja
fwait
jns
dec
loop
inc
mov
rorl
mov
and
fistps
fdivs
dec
lods
in
push
mov
cmp
pop
add
test
cmp
ss
mov
adcl
jnp
cmpsb
pop
shl
inc
jne
mov
sub
ljmp
hlt
into
jg
jecxz
dec
dec
inc
mov
jle
push
adc
fwait
and
jp
outsb
out
cmp
sub
in
jmp
iret
sbb
adc
stos
dec
inc
push
cmpsl
sub
push
das
mov
xchg
les
xor
add
or
jl
mov
push
lcall
xor
loopne
andb
stc
sub
push
call
push
lea
inc
and
push
test
xor
jl
cmp
cmp
fstl
sarb
xor
jp
pop
mov
xlat
adc
sub
outsl
and
jne
aas
les
movsl
jns
sub
sahf
ret
fwait
or
push
xchg
mov
jp
pop
adc
mov
mov
ds
outsl
ret
sbb
dec
mov
inc
sub
pop
sbb
ret
lret
dec
pop
jne
cld
mov
lods
loop
jo
mov
inc
mov
jge
sarb
es
out
or
lods
nop
jge
add
mov
push
xor
inc
or
mov
pop
dec
test
xchg
mov
clc
xor
imul
mov
hlt
sub
imul
mov
in
out
pop
scas
test
adc
mov
cmp
cmp
sub
sbb
je
fsubrs
data16
xchg
jg
xchg
pop
std
or
shll
mov
xlat
fwait
int3
mov
cmp
jge
es
jns
push
add
add
movsl
inc
movsl
popf
mull
jo
mov
adc
or
decl
sarl
fsubs
cmp
pop
fcompl
adc
xor
jle
in
and
test
or
addl
lea
or
enter
sub
fwait
mov
mov
sti
mov
int3
sbb
gs
or
nop
jp
xchg
mov
push
add
sub
cwtl
enter
xchg
inc
jl
movsl
cmp
pushf
fisubrs
xchg
adcl
mov
or
call
jle
ds
mov
je
sub
cwtl
fstps
rcl
inc
das
pusha
daa
fadds
mov
jne
sahf
stc
mov
push
push
lret
sti
adc
fidivl
lods
das
rcll
jmp
and
outsb
pop
popa
aad
in
sub
jg
mov
lcall
roll
fwait
xor
lods
lods
inc
mov
pop
jle
add
cmpsb
aad
sbb
inc
jns
mov
shlb
imul
and
jp
xchg
rol
dec
shlb
test
mov
dec
add
jne
mov
stos
sbb
xor
aaa
sub
push
jb
push
stos
ljmp
cld
in
pop
xchg
popa
or
pop
lods
mov
xor
dec
inc
fadds
inc
jecxz
jnp
cmp
nop
lret
mov
push
sbb
inc
fists
cmpsl
js
movsl
mov
mov
mov
ds
fildll
daa
or
scas
repnz
adc
push
pavgw
push
aas
shlb
outsb
incb
mov
sahf
add
jne
or
and
pop
jecxz
lods
sbb
ret
fcompl
xchg
stc
jecxz
push
pop
mov
sbb
cmp
add
js
xchg
push
ds
sbb
sahf
clc
rclb
cmp
insb
adcb
push
dec
fdivrl
fs
iret
imul
mov
sbb
dec
popf
test
cmpsl
and
out
fs
pushf
adc
inc
lret
fldl
aas
push
sbb
ror
out
push
movsb
cmp
sub
mov
pusha
js
xlat
jge
outsl
add
popa
rcll
and
rorl
pushf
sub
pusha
mov
jno
and
cmpsl
add
cmc
outsl
mov
pop
mov
push
sahf
adc
stc
in
mov
inc
stc
cmp
push
les
mov
pop
stos
jne
enter
mov
inc
jecxz
xchg
inc
arpl
pop
sbb
popa
sub
mov
fs
into
addb
xchg
pop
and
jns
outsb
mov
stc
lcall
inc
inc
and
or
inc
mov
mov
int
cld
icebp
dec
adc
lcall
cmp
ds
xchg
mov
das
jb
rolb
xchg
inc
or
ficoml
sub
mov
xchg
adc
xchg
mov
inc
dec
testl
push
cmc
dec
dec
testl
out
imul
dec
mov
mov
mov
inc
or
push
pop
jg
mov
pop
cli
test
adc
cmp
adc
or
push
xchg
lcall
jbe
pop
sub
loope
adc
xlat
adc
outsb
xor
loop
fldl
mov
mov
repz
xchg
xchg
pop
cmpsl
fldenv
fdivl
test
push
not
sub
push
leave
jo
test
mov
ret
ja
or
ret
adc
xchg
push
xchg
std
out
inc
push
xlat
dec
push
enter
jbe
pop
push
and
pushf
mov
rcl
xchg
or
jne
shll
or
dec
dec
xor
je
adc
sub
icebp
sbb
ja
sbb
xor
fistl
sub
jno
sub
or
xlat
cmp
aaa
aad
shrl
ret
dec
and
lret
pop
xchg
outsl
inc
mov
mov
int3
in
jae
mov
cmpsb
out
mov
dec
xchg
ret
pop
xchg
jbe
insl
ret
cmp
movsl
or
push
sub
jnp
test
in
xchg
dec
dec
data16
gs
pop
js
insb
mov
mov
in
dec
mov
push
mov
jp
xor
dec
mov
outsl
stos
out
sub
repnz
cmp
loopne
pop
das
ljmp
insl
pop
jbe
push
ds
mov
jmp
cli
data16
xor
sahf
hlt
mov
adc
cmpsl
outsb
popf
adc
or
iret
dec
lods
inc
or
inc
jl
pop
pop
pop
xor
in
out
addr16
pop
mov
xor
sbbl
imul
fs
mov
orl
test
hlt
sub
pop
xchg
in
jno
out
xchg
pop
lcall
mov
inc
or
jb
jmp
aad
mov
pop
dec
sbb
mov
ss
mov
gs
add
test
jb
popa
push
mov
xor
adc
in
pop
repnz
lret
push
dec
or
mov
inc
out
daa
mov
cmpsb
adc
push
pushf
mov
mov
push
out
data16
dec
pop
xchg
xchg
lret
add
mov
vsubsd
int
enter
sbb
mov
adc
stc
add
cmp
mov
lea
sbb
push
dec
outsb
adc
add
xor
in
cmpps
sub
adc
xor
and
lock
mov
pop
sbb
mov
push
loopne
mov
rclb
add
in
inc
sub
jbe
lds
mov
jg
mov
xlat
insb
ljmp
and
xlat
sbb
divl
adcl
adc
and
jmp
fnstcw
ret
rclb
pop
xchg
pop
push
mov
gs
repz
sbb
push
lock
mov
mov
or
imul
mov
mov
add
test
push
xor
adc
sub
std
in
jmp
arpl
data16
in
jnp
aam
push
cmp
sarb
loope
sbb
fs
mov
adc
dec
in
in
adc
mov
cli
or
xor
mov
out
sub
loop
xchg
pop
lcall
mov
cltd
test
cli
dec
xor
aaa
or
push
and
xchg
jge
xor
in
inc
lea
jecxz
inc
hlt
mov
sahf
fs
fldcw
scas
add
negb
jbe
lods
sahf
inc
inc
sbb
mov
mov
pusha
mov
repnz
popf
sahf
ffree
pop
bound
js
xor
push
in
insl
mov
in
or
pop
jb
cmpl
adc
imul
pop
cmp
iret
cmp
loope
aas
nop
aaa
jp
adc
lods
mov
ds
movsl
dec
mov
nop
bound
jle
out
pop
sarl
push
ja
xchg
mov
mov
push
fwait
adc
jp
jl
push
push
test
mov
mov
and
jno
movsb
adc
inc
in
add
sbb
dec
in
in
decb
test
imul
mov
mov
sub
nop
orl
cwtl
cmp
jne
shll
ljmp
test
daa
in
sub
stos
cli
push
jge
addb
xor
div
outsl
dec
mov
popf
mov
lret
xor
mov
add
fcmovnbe
lods
in
mov
aaa
mov
addl
xchg
scas
and
cwtl
lcall
mov
jne
add
jmp
xor
loopw
mov
outsl
daa
ds
inc
int3
gs
pop
sti
push
or
subl
rcrb
subl
or
leave
in
out
mov
pop
xor
sbb
jmp
fsubl
fsubrs
outsb
jge
jg
in
sub
test
push
cmp
out
js
mov
or
ljmp
stos
sub
sbb
test
aad
xlat
adc
das
cli
push
hlt
movsl
stc
sti
nop
jns
dec
mov
out
ret
xor
and
mov
add
push
adc
jno
xor
ret
rcll
jle
inc
int
cmp
or
sti
mov
mov
jae
iret
cmp
repz
inc
cmc
int3
stc
pop
repz
xor
aad
pop
pop
push
fucomp
cwtl
imul
in
or
mov
sbb
enter
mov
shlb
jae
test
sahf
out
cmp
ljmp
outsb
xor
sbb
sbb
xchg
std
fisubrs
and
gs
rep
cmp
andb
roll
xchg
and
sub
jnp
push
jb
test
adc
pop
sub
scas
mov
add
inc
pushf
pusha
cmp
fwait
sbbb
rorb
push
mov
aas
int3
cmpsb
es
push
adc
fstl
das
adc
loopne
mov
cltd
mov
andb
lds
mov
jp
addr16
pop
loopne
rcll
jo
or
cmp
push
ja
mov
out
shlb
xchg
aaa
xchg
adc
push
mov
jae
inc
popf
loop
es
sarb
mov
pop
mov
inc
xor
mov
out
push
xchg
cmp
mov
and
lds
inc
repz
test
out
in
insb
add
popa
fldt
dec
mov
fcomps
lahf
xor
in
movsl
inc
mov
decl
mov
negl
stos
mov
xor
popf
adc
or
mov
add
push
stc
dec
imul
jb
cmp
push
push
in
pushf
inc
cmp
divb
mov
mull
ds
iret
aam
jp
lret
popa
jo
insl
xchg
andb
addb
pop
adc
cmc
js
das
les
dec
push
jo
pop
mov
loopne
push
xor
in
loop
or
test
in
cmp
sbb
rolb
push
out
aas
pop
xor
loopnew
and
stos
jg
push
push
or
mov
and
xor
jecxz
in
and
xlat
and
frstor
in
xor
and
scas
inc
fwait
xor
pop
pop
jmp
cmp
scas
loop
inc
adc
lds
push
sub
sub
mov
js
sbb
sti
jno
fistpll
pop
jecxz
push
adc
pop
adc
mov
cmp
pushf
dec
dec
add
lret
jge
adc
cld
mov
jae
inc
pop
les
pusha
push
xorb
cmp
pop
jno
mov
dec
shr
and
stc
adc
or
shl
shll
pusha
jmp
frstor
ds
aaa
lock
mov
jns
cmc
mov
jo
lret
push
dec
ret
push
inc
mov
ds
subl
xor
addr16
lret
sub
popf
mov
mov
aam
xlat
mov
mov
insb
sbb
cld
sbb
add
xor
xor
gs
lods
sbb
aaa
or
dec
aaa
popf
mov
hlt
mov
or
in
rcrl
or
int3
daa
jno
repz
and
mov
cs
ds
mov
and
ficoms
in
movsb
nop
das
dec
popf
shll
aas
add
push
mov
je
push
xchg
lock
aas
push
cmp
xchg
or
adc
dec
mov
gs
cmp
adc
push
loopne
orl
stos
mov
pusha
adc
inc
mov
popf
mov
shr
cmp
lret
mov
xor
sub
xor
push
in
fsubrs
pop
icebp
aaa
cmp
and
sbb
push
adc
jns
sbb
lahf
mulb
fucom
xor
and
jge
xor
jo
mov
and
rorb
iret
mov
mov
ljmp
pop
stos
out
add
repz
pop
int
xor
add
movsb
mov
arpl
lahf
adc
push
push
addr16
xchg
lods
push
pop
ss
mov
sahf
sti
and
dec
lahf
dec
jg
ret
adc
mov
gs
outsb
dec
sbb
and
and
or
mov
rorb
and
mov
lahf
pop
and
fdivrl
mov
sbb
xchg
loope
cli
or
mov
and
push
lahf
cwtl
mov
mov
sub
jne
lock
fdivrl
cmp
or
int3
add
xor
enter
scas
or
inc
mov
push
xlat
mov
adc
gs
add
iret
orb
mov
push
mov
xor
fmuls
leave
rorb
mov
cld
xor
mov
shll
repz
pop
sbb
bound
ret
and
cltd
xor
inc
mov
movsb
xchg
dec
fidivs
pop
test
and
push
fld
or
jmp
imul
cmp
aam
sub
lods
cltd
es
loop
std
arpl
pop
pop
les
shrb
xchg
popf
jno
jo
inc
mov
xchg
lret
cmp
sbb
cmp
ffree
addr16
cmp
std
xor
mov
loop
mov
jg
nop
mov
popf
cmpsb
outsb
psllw
dec
loop
and
inc
movsl
mov
sbb
xor
mov
fistpl
data16
lahf
mov
inc
stos
cmp
cmp
dec
inc
sarl
stos
enter
popf
add
cmp
in
loope
das
xor
bound
jmp
cltd
dec
xlat
mov
push
in
imulb
sti
in
xchg
in
sub
in
push
xchg
mov
mov
mov
jbe
rcl
mov
or
scas
bound
jns
inc
sbb
stos
mov
and
adc
jbe
and
pop
lcall
xchg
fwait
mov
sub
xchg
xchg
jmp
fisttpll
fistpl
and
insb
or
push
sub
push
dec
jg
mov
cmp
ret
or
and
push
mov
and
jo
subb
in
ljmp
dec
repnz
jmp
roll
sub
jo
cmc
pusha
xchg
stos
mov
decb
push
xchg
xor
jmp
imul
jecxz
ljmp
nop
push
jb
xor
mov
into
popa
jmp
mov
stc
xchg
mov
cmpsl
xor
inc
push
aas
pushf
push
xchg
aad
in
pop
bnd
ds
cmc
imul
xor
or
cltd
push
xor
test
jnp
mov
or
fs
pusha
and
inc
int
pop
fiadds
ret
in
in
icebp
push
shl
aas
adc
loope
insl
in
int
sub
sahf
aas
push
ret
icebp
arpl
push
inc
or
push
inc
dec
sarl
mov
cli
movsl
dec
mov
bound
movsb
popa
push
cmp
aam
push
icebp
loop
lods
or
cmpb
mov
test
sub
ret
xchg
xchg
lock
inc
jns
add
push
cld
pop
lds
jge
out
mov
dec
lock
or
arpl
lods
fbstp
mov
aad
test
dec
inc
and
clc
out
adc
sub
push
sbbb
xorl
lcall
outsb
fs
cmpsb
shlb
outsb
repnz
loop
sahf
pusha
mov
jbe
sbb
sti
ficomps
sub
outsl
rorb
loopne
mov
sarb
mov
aam
mov
in
add
inc
stos
mov
push
sbb
xlat
stos
lods
sub
jne
int
bndstx
fwait
or
mov
jmp
pop
into
pop
mov
jp
jo
sbb
xor
lods
add
mov
cmp
cli
out
and
cs
mov
xchg
nop
adc
push
xor
int
pop
and
cmp
divb
in
pusha
cmpsb
xchg
or
sarl
call
aaa
push
and
cmp
sub
inc
xlat
fs
sarb
sub
and
dec
add
inc
add
in
dec
sub
iret
fcomip
cli
sahf
jl
fiaddl
jge
stos
adc
jo
dec
popa
ljmp
dec
cli
incb
lds
dec
inc
repz
inc
addr16
loop
mov
dec
mov
sbb
das
aam
add
adcb
jge
push
in
mov
fcomps
sbb
lods
and
leave
cli
int
mov
inc
enter
je
lret
cli
add
adc
enter
inc
mov
rol
in
mov
xchg
xor
and
in
and
pop
lock
aad
arpl
mov
scas
in
add
sbb
sbb
popa
xor
cltd
jmp
pusha
outsb
orb
sahf
jmp
xor
outsb
arpl
mov
and
sbb
mov
fninit
es
leave
xchg
outsl
adc
fimuls
repz
js
in
addr16
and
loop
or
dec
bound
andl
test
ss
ss
dec
and
aas
fadds
inc
jnp
imul
and
cltd
dec
pop
xchg
out
xor
xchg
fs
ds
lock
jbe
enter
movsb
imul
push
sahf
push
sarl
mov
xchg
xchg
pop
mov
cmp
push
add
pushf
xor
mov
or
cmp
mov
cmp
mov
mov
subb
mov
jb
outsb
mov
xor
add
jno
repnz
adc
addl
data16
int
lock
and
aam
sub
loop
ret
xchg
jae
cs
xchg
jae
xor
add
loop
mov
clc
shl
sub
lods
and
pop
mov
push
mov
test
adc
lcall
cmp
dec
mov
xor
mov
iret
mov
mov
outsl
cmc
icebp
lret
mov
add
addr16
mov
out
aaa
inc
xchg
andl
mov
insb
jae
dec
icebp
xor
insb
xchg
faddl
add
adc
stos
inc
nop
sbb
dec
test
shr
jle
push
push
mov
cmp
ss
mov
lret
cmp
sbb
test
test
das
push
jno
cmp
add
adc
xchg
movsb
sub
jnp
jo
int
mov
movsl
fsubs
mov
cmp
nop
inc
push
movsb
das
je
pusha
and
fsubs
jmp
adc
adc
xor
xor
cmpb
movsb
stc
fmul
mov
sub
int3
push
sbb
imul
mov
int
popa
sbb
clc
rcrl
push
mov
cwtl
cmp
cmpsl
mov
sbb
add
mov
stc
cmp
ja
sbb
shrl
xchg
mov
mov
adc
test
sub
xchg
or
xchg
popf
push
xchg
mov
cltd
bound
jne
add
fldt
std
add
jns
sbb
mov
lret
pushf
lods
sbb
inc
jne
lods
push
or
mov
inc
mov
loope
imul
mov
gs
push
push
sbb
jmp
loopne,pn
lock
js
xorb
pop
mov
push
ss
psrlw
cld
pop
cmp
and
xchg
das
fistl
sub
inc
xchg
leave
pop
or
mov
pushf
mov
js
inc
jecxz
or
sub
jo
stos
or
sti
arpl
pop
or
mov
xchg
xlat
mov
mov
and
movsl
add
jp
adc
and
insl
inc
push
ret
sub
jg
hlt
dec
or
mov
or
cli
ljmp
sbb
jbe
push
xor
pop
aaa
push
inc
inc
daa
ds
xor
mov
sub
dec
pop
sub
clc
shll
dec
sbb
pusha
add
push
mov
enter
jge
sub
push
shlb
dec
dec
in
xchg
xor
add
inc
pop
mov
test
call
jg
imul
cmp
add
push
fwait
adc
add
add
cmc
iret
add
pop
test
stc
cmp
pop
ds
jbe
aaa
fcoms
scas
std
inc
xor
xchg
push
mov
mov
dec
mov
repnz
add
and
shll
jae
push
sub
push
add
xchg
movsl
imul
mov
jno
or
out
lods
popa
insl
shl
mov
sar
in
sbbb
mov
shlb
leave
jo
add
cmp
and
sahf
mov
mov
inc
mov
and
js
dec
dec
dec
mov
cld
adc
dec
or
mov
adc
mov
mov
out
in
arpl
les
and
into
leave
fmull
movb
mov
xor
shrl
cwtl
mov
aas
xchg
ficompl
xor
pop
xor
sbb
inc
enter
cmpsl
test
sbb
jmp
xchg
out
mov
add
pop
sub
imul
xor
push
xchg
pop
fstpl
jmp
imul
inc
int
push
mov
sbb
scas
cmp
xchg
mov
add
xchg
mov
lock
mov
cli
data16
pop
xor
nop
jl
jg
and
inc
jb
insb
call
mov
loopne
rcll
cmp
inc
xchg
or
lahf
andb
fidivs
call
lret
in
dec
xchg
mov
pop
fildl
xchg
sub
outsl
pop
jl
popa
push
mov
jae
stos
inc
jl
mov
imull
shrb
das
cs
mov
insl
scas
cmp
mov
sub
add
sub
mov
or
dec
jnp
xchg
cmp
dec
mov
and
into
mov
fsubr
inc
add
and
out
cmpsl
xchg
loopne
mov
pop
jle
mov
int3
sub
int
jmp
rcrb
xchg
add
fiadds
scas
push
sub
jge
mov
and
lahf
adc
test
mov
into
pop
cwtl
adc
je
pop
lret
push
mov
add
pop
test
dec
rclb
xlat
mov
pushf
jae
movsl
push
ljmp
mov
xlat
aam
dec
sarl
cmp
fcmovne
adc
test
mov
je
inc
iret
adc
add
rolb
pusha
sub
and
stos
push
and
inc
inc
pop
data16
ljmp
orb
add
add
lret
aam
ljmp
jae
mov
fisubs
or
cmp
pop
push
aaa
sbb
adc
xor
inc
insl
and
mov
ljmp
xor
dec
jp
shrl
sbb
dec
scas
inc
leave
pop
out
nop
cs
mov
push
add
xchg
or
popa
in
faddl
popf
pushl
xor
pushf
out
adc
cmpsl
daa
icebp
js
sub
call
adc
btr
test
cmp
cwtl
inc
aad
mov
push
and
shlb
xor
sub
inc
sbb
mov
sbb
inc
test
adc
jbe
int3
xchg
cmp
and
mov
inc
push
mov
xchg
sbb
cltd
test
aam
movsb
jo
test
cmp
fisubs
shl
xor
push
fwait
inc
clc
daa
ror
pop
or
daa
mov
movsl
subps
imul
push
sti
sbb
fnstenv
xchg
mov
or
push
mov
or
dec
bound
nop
in
xchg
mov
jae
xchg
xchg
pop
test
lea
cld
inc
dec
add
daa
jp
ffree
sbb
enter
push
hlt
fidivrl
mov
hlt
pop
in
or
cld
push
loopne
xor
dec
sub
lahf
roll
mov
shlb
movsl
xchg
loopne
mov
push
add
xchg
nop
jp
mov
xchg
nop
xor
stc
and
repz
fdivrl
or
push
cld
lahf
sub
andnps
dec
out
adc
mov
bound
add
scas
int
add
add
dec
mov
leave
insl
pop
mov
and
clc
imul
sub
xor
mov
ljmp
push
arpl
lret
adc
inc
ds
xor
pop
and
into
mov
ds
data16
cmovl
test
push
mov
xchg
push
ja
mov
and
mov
jp
insb
imul
call
xchg
mov
sbb
sbb
test
test
out
sbb
out
repnz
xchg
pop
jne
das
add
jecxz
mov
add
jnp
mov
rorl
dec
popf
and
adc
imul
aad
fdivrl
paddsb
push
add
xchg
lods
mov
add
sub
push
in
mov
cld
xchg
pop
sub
mov
push
sbb
jecxz
push
ret
xor
sbb
insb
movsb
mov
lock
and
pop
es
sarl
pop
jl
rclb
xor
into
fsubp
insb
add
inc
cmp
pushw
push
xor
bound
cmp
movsl
xor
test
mov
pop
daa
jno
sub
das
ret
shlb
sbb
cld
sub
xchg
bound
jnp
mov
and
xchg
jno
stos
fwait
lods
fwait
cli
imulb
lret
xchg
xor
jp
push
jge
lret
shrl
push
inc
xor
cmp
cmpsb
sub
pushf
lret
inc
dec
mov
test
mov
fldcw
or
cmp
dec
cmc
stc
xchg
or
cmc
mov
push
jo
repnz
add
cmp
js
insb
out
lcall
mov
jp
pop
jnp
push
cmp
rcr
push
sbb
setno
fdivl
xchg
pushf
inc
fiadds
ret
sbb
call
xchg
fnsave
push
push
pop
sub
and
stos
pushf
adc
cmp
mov
call
enter
mov
into
push
in
jp
push
mov
add
jnp
call
ret
push
loop
ljmp
out
bound
or
cmp
sbb
xchg
mull
inc
adc
int3
movsb
mov
xor
inc
mov
or
pop
push
push
arpl
xchg
movsb
mov
jg
lcall
add
jnp
scas
roll
adc
adc
inc
int
inc
loop
adc
adc
inc
adc
scas
jl
loopne
push
lret
cltd
ss
jp
pop
mov
lahf
mov
lock
mov
pop
fs
xchg
jne
inc
and
addb
adc
xchg
sub
insb
xor
jg
xchg
fidivl
testl
and
sahf
in
sbb
rorl
loope
or
addb
mov
notl
mov
push
stos
loope
cmc
aaa
lret
loopne
mull
pop
cmp
mov
lcall
cs
or
adc
and
mov
push
add
jmp
xlat
daa
inc
inc
mov
dec
fisttps
ret
rcl
xor
push
adc
sub
jle
mov
nop
mov
sarl
mov
test
or
repz
or
sub
movsb
loop
out
xchg
push
lea
icebp
cmp
pop
jbe
es
data16
cmp
adc
ficoml
mov
mov
pop
lods
in
inc
insl
jmp
dec
sti
pop
movsb
pop
mov
imul
xchg
jle
mov
out
sub
push
mov
cmp
mov
xor
and
fstps
cltd
popf
sbb
mov
mov
fisttpll
icebp
imulb
sub
push
mov
clc
mov
adc
and
sub
stos
mov
mov
rclb
cmp
and
cli
push
out
push
jns
test
xor
call
jno
push
popf
outsb
or
cld
loopne
shlb
mov
add
cmp
imul
mov
mov
fistpll
fists
push
ljmp
mov
icebp
addl
mov
test
xor
adc
fdivl
fimuls
in
jo
cmp
xchg
lods
scas
pop
popa
sbb
and
std
leave
push
in
mov
xchg
out
and
pop
testb
bound
into
lods
int
pop
mov
addb
shl
jecxz
lods
enter
aam
mov
pop
enter
fwait
pop
arpl
inc
lock
out
rcl
mov
dec
lahf
pushf
xor
in
xor
aad
cmp
xchg
sbb
pop
movsl
cs
xchg
add
sbb
cmpb
mov
in
push
mov
xchg
xchg
leave
or
xchg
jne
jmp
mov
punpckhwd
pushf
pop
add
sbb
mov
ss
mov
repz
in
call
push
test
scas
test
stos
sbb
jne
lock
iret
repz
int3
xchg
pop
ss
mov
add
dec
enter
pop
popf
or
xchg
ds
inc
push
inc
sbb
pushf
int
scas
jp
pop
mov
mov
hlt
rcr
jbe
mov
lret
lcall
out
jae
mov
add
mov
scas
loope
outsl
push
or
rolb
orb
push
dec
xchg
arpl
ss
push
into
push
push
sbb
xchg
cmc
dec
mov
cmp
movsl
pop
push
arpl
cmpsl
cmp
mov
mov
ret
adc
jno
mov
int3
mov
push
scas
push
int
cmp
cmp
jecxz
cmp
bound
dec
add
je
sbb
adc
push
nop
in
mov
add
fwait
inc
lds
loop
nop
mov
lea
gs
out
mov
jae
fcomip
popa
inc
mov
int
add
sbb
dec
test
jno
mov
pop
mov
ret
sbb
int3
sahf
leave
lods
mov
inc
inc
mov
xor
test
pop
mov
popf
bound
sub
movsl
shlb
ja
push
dec
idiv
adc
cwtl
out
add
fisubs
sbb
push
cmp
mov
je
das
and
lcall
mov
mov
out
sahf
xor
hlt
fstpl
imul
inc
mov
test
int3
jmp
dec
inc
outsl
pop
or
sbb
mov
or
or
cmp
add
sbb
pop
in
add
sti
fdivrs
cli
lock
lcall
decb
or
push
fs
fisttpll
push
or
fdiv
sbb
lods
cmpsb
cltd
cmp
lods
mov
fmull
aad
test
in
and
mov
cwtl
and
repnz
push
rcr
jle
pop
repz
shrb
aaa
jno
dec
out
imul
mov
push
std
xor
jecxz
add
and
outsl
lods
or
sbb
add
push
adc
and
cmp
arpl
popf
sti
mov
repnz
jle
cltd
adc
addr16
stos
arpl
pop
jle
mov
scas
mov
mov
inc
xor
cmpsb
jno
cmp
jmp
mov
lods
or
inc
shlb
inc
and
sbbl
jno
jns
add
fimull
xchg
inc
out
loope
cli
or
faddp
sarl
add
xchg
pushf
adc
stc
mov
or
and
adc
fcoml
add
test
test
sbb
jns
adc
lock
mov
stos
std
inc
rcll
push
sbb
int3
ss
sub
data16
dec
dec
jns
pop
jp
sbb
nop
and
lahf
add
test
pusha
je
subb
jns
iret
je
daa
pop
xchg
outsl
imul
jmp
push
stos
stos
and
cli
jnp
and
stos
push
rcrb
inc
stos
jnp
bound
iret
cmpsb
loope
xlat
push
sbbl
arpl
pusha
ja
lea
adc
mov
movsb
shll
outsb
ljmp
shlb
sbb
loop
mov
fldcw
lret
in
xor
jne
xor
popa
not
mov
sbb
imul
jo
mov
xchg
jle
in
jne
movsb
jmp
mov
cs
pushf
hlt
jo
mov
or
movsb
and
test
lea
jl
ret
pop
inc
mov
cmp
pop
mov
jle
orb
jge
cmp
mov
popf
jne
inc
pusha
cmc
loop
dec
dec
cmp
in
or
jmp
aam
lcall
imul
cs
xchg
push
lods
dec
popf
sbb
sti
mov
in
fldenv
or
fnstsw
aaa
outsb
jno
in
and
popa
add
arpl
shrb
insb
cli
loopne
aaa
stos
mov
fdivs
xlat
dec
idivl
in
outsb
sti
xchg
movd
xchg
xor
xchg
adc
mov
lcall
or
adc
mov
das
lods
int3
test
dec
js
mov
cli
mov
cmc
cmpl
push
adc
out
xchg
jg
rcrb
in
xchg
bound
pusha
imul
rclb
mov
insb
push
pop
pop
ja
imul
lret
xchg
xor
jbe
mov
test
xchg
jp
ficompl
je
adc
add
mov
xchg
jns
cld
imul
sbb
cmp
fsubrs
stos
repz
aaa
push
inc
test
add
cmpsb
lods
stos
mov
inc
out
test
or
and
cmp
xor
into
xchg
sub
xchg
sbb
in
push
cmp
cwtl
repnz
inc
jp
int
aas
andb
pop
je
cmp
pushf
les
rcrb
sar
pop
out
pop
popf
ljmp
jo
sub
mov
jns,pn
int
mov
sub
xchg
test
and
jnp
and
out
push
test
in
cmpsb
pop
pop
sub
pop
nop
mov
pop
outsl
and
sbb
sbb
mov
xchg
sub
inc
out
std
mov
pop
jo
push
mov
inc
inc
pusha
sbb
test
or
xorb
pop
loopne
pop
jb
out
popa
call
in
adc
pushl
fsubl
mov
cmp
fs
iret
push
pop
sbb
inc
sub
cmp
cmp
rcrl
xchg
adc
jo
int3
adc
fadd
mov
inc
jbe
pop
cmp
testb
mov
insb
xchg
inc
test
imulb
adc
scas
jbe
xor
shlb
mov
jbe
hlt
cmp
sbb
insl
add
add
pop
push
mov
leave
mov
push
insb
and
aam
xor
in
iret
or
lret
stos
inc
mov
cmc
test
add
lods
es
pop
lock
sub
loop
sub
repnz
ds
js
add
mov
les
mov
test
dec
push
aad
xchg
lcall
das
mov
pop
stos
aam
shll
out
pop
jne
neg
shll
into
bound
fs
int
inc
andl
cwtl
es
call
outsl
dec
mov
cmpsb
cli
mov
cmp
inc
decl
mov
or
xor
xchg
and
pop
mov
loopne
fmuls
sub
lcall
dec
mov
inc
jecxz
frstor
push
movsb
sarl
shlb
mov
mov
sub
int3
mov
loope
jmp
rcrb
push
push
aad
or
inc
loopne
jle
outsb
jbe
fstpt
or
adc
push
jb
pop
mov
arpl
mov
ja
inc
lret
lds
out
negl
mov
cmp
fcmovne
mov
bnd
jl
out
cmp
shrl
jno
mov
sub
cmpsl
repnz
xor
aaa
adc
add
aad
rcrb
into
paddb
mov
movsb
mov
sbb
popf
or
jo
adc
and
add
es
mov
cmpsb
sbb
arpl
sahf
mov
lret
cmpsl
mov
das
test
cwtl
aam
cmpl
out
jg
add
shll
inc
cmp
sub
clc
ret
test
jmp
fwait
cmpsb
and
xchg
ss
loop
pop
inc
test
adc
fstps
mov
fistpl
mov
lret
cmp
jnp
push
in
xchg
pushf
xlat
in
cmp
dec
rcr
xorb
xchg
hlt
hlt
lcall
add
sbb
int
or
xlat
inc
dec
cli
mul
out
loopne,pn
mov
push
test
inc
push
add
xchg
mov
nop
lea
js
test
jb
ret
mov
dec
xlat
xor
mov
outsb
adc
mov
add
stos
push
sub
add
or
aad
push
pop
repz
push
dec
xchg
xchg
pop
and
fmulp
inc
add
aas
jmp
dec
xchg
inc
faddl
pushf
std
mov
das
mov
add
mov
cmp
or
and
aaa
or
xchg
lock
mov
push
cld
inc
inc
push
and
push
xchg
call
mov
mov
jmp
shrl
mov
das
mov
ret
and
pop
mov
and
jmp
xchg
clc
lock
stos
arpl
cmp
and
adc
lods
ret
dec
jl
fcompl
adc
inc
sbbl
out
push
aam
jg
int
mov
ds
xchg
adc
enter
rcrb
std
lret
mov
dec
xor
shrl
icebp
ja
cmpsl
cmp
lods
push
in
sub
enter
ret
dec
xor
sbb
push
dec
push
adcl
cld
sub
sub
ret
xchg
pusha
xchg
insb
arpl
iret
iret
inc
xchg
xchg
sti
add
sbb
cmpsl
std
jb
fistpl
add
add
cmp
mov
inc
xchg
ret
adc
loop
add
xchg
cmp
fwait
inc
out
xor
cmp
pushf
mov
sti
xchg
add
adc
or
fistpll
int3
enter
or
out
call
lods
xor
lea
pop
cmp
test
mov
jb
adc
aad
call
popa
cmp
ljmp
pop
mov
orb
arpl
les
jns
outsb
inc
test
jb
addr16
dec
sub
ljmp
and
adc
into
mov
insb
inc
cmp
je
adc
sbb
inc
mov
out
mov
fdivrl
xchg
add
sub
push
mov
les
cmp
push
test
push
jnp
xchg
arpl
and
aas
xor
das
jg
inc
das
dec
mov
js
clc
jmp
mov
cmp
daa
cmpsb
dec
adc
mov
add
sub
mov
imul
pop
jne
hlt
jns
dec
test
das
das
test
stos
adc
push
gs
out
mov
incb
pop
or
outsl
lret
mov
jg
test
or
push
je
mov
mov
dec
hlt
push
push
push
dec
jae,pn
test
lock
sub
inc
lahf
dec
or
add
fimull
jl
or
mov
test
dec
push
add
fistps
push
or
aaa
mov
out
push
mov
sbb
sub
sub
add
mov
sub
or
insb
int3
or
cmp
lods
mov
loopne
cmp
into
js
leave
xor
mov
mov
cmc
fs
push
xchg
adc
les
rorb
loop
mov
fiadds
aaa
enter
adc
mov
and
daa
mov
mov
dec
fsubrl
mov
sbb
or
out
in
enter
cwtl
sub
iret
add
into
inc
pop
hlt
push
push
xchg
fldl
xor
xchg
xchg
scas
ljmp
cmp
jecxz
add
or
stos
movsl
pop
fstl
pop
xchg
or
push
test
jno
mov
inc
imulb
out
push
jbe
push
sarl
in
jnp
enter
mov
mov
mov
leave
pop
push
inc
cmpsl
mov
inc
adc
mov
push
mov
gs
ficoml
arpl
mov
pop
inc
sbb
std
je
cmp
popa
in
arpl
data16
sub
mov
mov
sub
sbb
mov
call
xlat
iret
aas
les
xor
push
mov
add
xchg
cmp
scas
jl,pt
xor
mov
sbb
mov
popa
or
push
push
jb
xor
cli
sti
and
sub
in
pop
es
pushl
and
shlb
movb
jae
and
roll
adc
mov
add
lock
adc
adc
pop
adc
xchg
call
xchg
xchg
pop
push
fisubrs
dec
testl
and
enter
jae
xchg
int
jbe
loope
test
jne
insb
adc
scas
xchg
out
xor
mov
mov
mov
loope
pop
xchg
jp
or
in
sub
imul
mov
pop
dec
jo
orl
es
lods
jo
jl
adc
bound
xchg
xchg
pop
or
into
mov
push
loopne
xlat
js
mov
or
test
rcr
fimull
mov
cmp
sbb
mov
and
push
dec
mov
sahf
sbb
xor
in
xchg
sub
jo
daa
mov
add
inc
dec
sbb
cmp
jae
push
jecxz
xlat
jle
adc
pop
push
xor
jnp
dec
jle
insb
xlat
mov
jae
ficoms
hlt
and
and
xchg
xchg
jno
inc
add
dec
mov
xor
xchg
cmpsb
jg
mov
into
jg
pop
ja
fsubr
or
lcall
sub
aad
jmp
xchg
loopne,pt
and
sbb
xchg
add
or
ret
cmp
xor
dec
and
aam
add
add
test
jae
lahf
jmp
sbb
xchg
or
sbb
repnz
and
and
iret
test
lock
imul
adc
mov
call
xor
cmp
out
mov
sbb
or
sub
leave
mov
mov
sbb
push
and
adc
sbb
dec
sti
mov
jns
neg
and
adc
and
sub
xchg
jo
sbb
xor
and
add
or
gs
test
dec
cmp
nop
add
aas
xchg
int3
push
or
js
sar
loope
ret
icebp
loop
aaa
push
fs
mov
fdivrs
inc
adc
test
repz
cmp
pop
and
ret
push
inc
imul
dec
lds
lods
inc
stos
xchg
adc
add
jecxz
lahf
dec
pop
lods
cmp
adc
and
mov
pop
pop
scas
xorl
add
pop
nop
xor
test
out
pop
mov
xor
xchg
sub
cmpsl
scas
into
sub
mov
xchg
je
pop
or
sub
cld
jb
test
dec
insb
lret
movsl
sbb
xchg
mov
xlat
xor
aaa
xor
dec
jl
leave
sbb
mov
mov
xchg
push
movsb
mov
imul
or
push
mov
add
shlb
cmpsb
cmp
mov
dec
xor
and
adc
jb
xchg
dec
bound
sarl
imull
cmpsl
aad
iret
mov
les
loope
test
ljmp
adc
jmp
fs
ja
push
push
mov
pusha
icebp
loopne
jge
and
xor
fwait
cld
sbb
push
add
popa
xor
and
mov
and
mov
mov
and
xor
les
jge
fcmovne
out
js
loop
adc
push
popa
in
outsl
or
sub
push
adc
cmpsb
pop
xor
xchg
out
mov
into
cli
adc
hlt
iret
mov
insb
repnz
cmp
ja
pop
daa
ret
mov
cmp
ss
inc
jne
fstps
add
ret
cmc
shrb
lds
dec
xchg
xchg
and
jnp
ja
imul
stos
movsl
into
cmovns
pop
mov
mov
cmp
mov
aad
lock
or
loopne
scas
fwait
lahf
pop
aaa
cmp
pop
in
lds
movsb
pop
test
jl
mov
mov
sub
xchg
fwait
xor
or
nop
inc
loope
xchg
xchg
inc
mov
xchg
sbb
add
lock
lods
and
mov
in
decl
jg
xchg
test
sub
mov
adc
fld
out
jo
dec
xchg
pop
adc
or
cli
in
push
add
test
cmp
jle
sbb
ficompl
movb
flds
imul
xchg
shl
mov
sbb
incl
pop
std
scas
fs
stos
mov
mov
test
sbb
xlat
xor
imulb
dec
fwait
lret
popf
aas
or
int
and
aaa
xchg
mov
mov
inc
cwtl
push
ljmp
dec
stos
inc
push
movsb
push
out
shlb
mov
cmp
pop
imul
adc
imul
test
out
pop
cmp
outsl
adc
dec
mov
cmp
lea
pop
and
negb
dec
dec
jecxz
mov
repz
in
cmp
mov
insb
mov
add
out
pop
cs
cmp
inc
fdivrl
sbb
add
loop
cltd
cmc
movsb
xchg
pop
scas
xchg
add
or
movsl
jp
loopne
aas
stc
test
push
mov
and
in
cmc
dec
jae
fildl
dec
repz
test
mov
repz
lret
jne
xchg
repnz
test
int
dec
test
mov
dec
out
xor
in
enter
mov
or
jno
out
je
lret
sbb
scas
dec
mov
xchg
sub
jp
cmp
in
ret
sarb
fbstp
inc
xor
or
outsb
push
add
shl
stos
push
movsl
repz
jo
insl
data16
jne
mov
push
mov
test
xor
fcmovnb
icebp
out
push
or
jnp
popaw
xor
push
and
lcall
and
sub
les
or
xorl
mov
cs
shrl
test
insw
lahf
jo
subb
bound
cwtl
iret
push
push
xchg
add
mov
adc
inc
iret
fstpl
sahf
aas
adc
mov
ret
insl
lar
xlat
ljmp
hlt
mov
pushf
jne
mov
cmp
sub
sub
roll
inc
ljmp
repnz
push
inc
push
push
adc
push
int3
into
mov
scas
push
mov
sbb
loop
and
icebp
nop
sub
xor
xor
pop
lods
inc
adc
fdivrl
fwait
lret
pop
lret
out
sbb
jecxz
sub
fsts
xchg
mov
sbb
cli
data16
cmp
cs
les
lea
ljmp
xchg
xchg
es
imul
aas
int
clc
mov
or
push
push
fs
and
imul
dec
add
inc
sbb
sbbb
pop
iret
je
aas
jecxz
inc
adc
mov
push
lcall
out
cld
xor
push
mov
xchg
pop
test
xor
dec
jle
dec
es
aad
test
xchg
loope
xor
pop
mov
aas
iret
loop
and
sub
inc
ret
cmp
fnsave
and
mov
add
insl
iret
ficompl
cltd
pop
add
sbb
lret
pop
sahf
shlb
jecxz
and
push
push
adc
into
add
jbe
les
insb
out
aad
push
pop
imul
movsb
pop
dec
and
mov
in
cmp
outsb
cs
dec
sti
fdivs
jo
sarl
je
and
mov
xchg
addb
out
xchg
aaa
ret
cmp
adcb
mov
jo
pop
jne
mul
sub
sbb
lods
ds
out
fiaddl
jg
pop
mov
pushf
xor
adc
pop
dec
out
pushf
out
insb
loop
mov
out
in
xchg
insb
fdiv
xchg
das
xor
insl
sub
dec
xchg
fsubl
cs
movsb
adc
test
mov
repnz
xchg
mov
aas
xor
pop
add
int
imul
mov
mov
jl
add
fwait
sub
mov
jmp
xor
imul
test
gs
push
cmp
outsb
in
jge
cld
dec
add
insb
mov
mov
fxch
inc
inc
roll
bound
xchg
inc
clc
out
cmpsl
xor
dec
jle
xor
cwtl
pop
dec
sbb
sahf
xor
mov
push
sbb
cltd
sar
mov
dec
leave
jmp
mov
test
pusha
nop
mov
mov
jmp
aam
loope
xchg
test
jo
sub
pop
push
lods
sub
inc
dec
and
mov
je
arpl
push
pop
jns
jl
ja
jge
aad
jb
into
jno
nop
insl
stos
add
movsb
push
pop
shll
cmovae
ret
pop
int3
lods
test
leave
icebp
push
mov
icebp
inc
stc
xor
xchg
xor
mov
out
mov
cs
ljmp
mov
mov
cmp
sbb
mov
jg
adc
mov
aam
push
mov
cld
je
mov
fwait
mov
cwtl
mov
cltd
ret
mov
sub
pop
push
push
push
dec
adc
push
adcl
pop
and
add
dec
inc
cmpl
sub
fstps
sbb
ret
xor
push
mov
ret
push
popf
mov
add
mov
add
jno
cmp
pop
pop
xor
pop
push
in
pop
leave
stos
stos
adc
push
push
and
dec
add
js
and
fbld
inc
push
mov
push
cmp
cmp
outsl
mov
scas
outsb
movsb
fmull
inc
xor
inc
pusha
push
xor
cmp
aam
pop
mov
enter
mov
xchg
mov
or
push
and
inc
push
sub
sub
and
jmp
inc
lods
push
mov
mov
sub
xchg
fldt
dec
ljmp
mov
mov
jecxz
xchg
add
inc
cmp
inc
cmpsb
into
jo
jp
xchg
jg
and
sbb
imul
jecxz
out
cld
mov
stc
mov
insl
out
lahf
call
je
or
push
mov
lock
jns
mov
fimuls
subl
js
mov
pop
cmp
sbb
and
movsb
aaa
jbe
and
xchg
iret
ficoml
push
lea
inc
mov
inc
mov
cmp
push
fstpt
nop
pop
test
aaa
sbb
dec
dec
jle
in
pop
mov
inc
ss
loopne
mov
lods
push
adc
xor
dec
mov
mov
out
mov
in
sub
popa
mov
push
xchg
movsb
fiadds
out
ret
aam
in
sbb
insb
sub
frstor
sub
mov
sahf
cmp
aad
lahf
and
cs
xor
hlt
fs
add
pop
mov
add
rolb
ss
movsb
inc
mov
mov
test
enter
jns
xor
ja
shrl
and
fidivs
adc
cmp
repz
imul
lods
repnz
gs
sbb
gs
sbb
jle
sub
dec
mov
jl
popa
ds
addr16
out
icebp
inc
cmp
popl
shlb
lcall
std
flds
mov
jp
ja
lcall
pop
cmp
adc
out
or
les
cwtl
pop
fldt
rclb
test
xor
jne
outsb
es
outsb
js
pusha
sub
stos
push
mul
sbb
mov
sub
hlt
inc
ror
scas
or
mov
mov
push
jl
cmc
das
mov
and
mov
and
call
int3
cli
cli
sbb
cmpsb
js
inc
mov
aam
push
out
cmp
mov
shl
pop
push
fisubs
jo
adc
cmp
dec
jae
mov
cmp
or
or
lods
xchg
push
loopne
xchg
cmpsb
dec
nop
mov
cltd
xchg
arpl
jae
and
mov
xchg
cwtl
mov
sbb
pop
push
or
ror
adc
add
inc
bound
test
ret
cmp
push
sub
scas
fcmove
fwait
outsb
pop
mov
fidivrs
xchg
in
or
flds
sub
stos
jmp
out
jns
mov
lods
lods
decb
push
lock
mov
mov
out
mov
xchg
inc
mov
scas
insl
xor
les
repz
aas
sub
ret
dec
cmc
fsubrs
jle
xor
out
andb
dec
pop
and
xor
or
dec
out
jnp
into
cmp
dec
adc
pop
mov
pushf
scas
push
sbb
adc
repnz
lcall
hlt
mov
push
mov
xchg
rcr
jg
jmp
dec
or
ljmp
cmp
xor
cmp
pop
jl
pop
mov
ljmp
ficoms
mov
sbb
into
mov
int3
xchg
pavgw
fs
sub
or
jbe
fdivrl
mov
rol
jo
fidivrl
xchg
sahf
repz
in
mov
push
pop
pop
mov
push
jb
ret
cmpsb
imul
mov
xchg
jmp
xor
jo
and
xchg
aaa
enter
test
je
std
xchg
out
in
mov
scas
imul
outsl
mov
incb
iret
ret
shrb
add
icebp
mov
mov
xchg
lock
sbb
xchg
or
xor
lods
stos
lods
jb
xor
cmc
outsb
imul
push
std
std
in
in
call
and
mov
adc
xor
pop
and
pop
xor
pop
pop
dec
inc
in
je
stos
inc
icebp
jnp
and
push
bound
push
inc
scas
bound
lret
xchg
sub
addr16
pop
lock
push
xchg
or
hlt
jnp
pop
out
xor
mov
mov
jne
lret
into
enter
arpl
and
inc
mov
jo
sub
pop
cmc
aaa
mov
xchg
jg
push
push
rorb
push
mov
rorb
lret
out
jge
aam
xchg
mov
test
mov
sbb
fdivrs
arpl
inc
cs
test
test
test
test
jb
adc
mov
and
inc
inc
adc
das
in
push
outsl
pop
cmc
shll
adc
cmp
cltd
jl
add
sub
add
aas
mov
fsts
or
cmp
test
mov
add
int3
outsb
or
lret
fstps
call
test
push
jbe
in
out
into
pusha
mov
repnz
mov
or
sahf
gs
sbb
notb
xchg
lods
popf
mov
xor
mov
or
lock
sbb
sbb
aaa
loop
jae
mov
lods
and
ds
jp
sbb
mov
mov
sbb
testb
outsl
bts
adc
insl
mov
loop
shll
stos
adc
xchg
hlt
stos
dec
jecxz
shlb
ljmp
sbb
xchg
sahf
pop
add
dec
sbb
cmpsb
dec
ret
in
ficoms
arpl
cld
mov
push
cmp
xchg
mov
ss
out
cmp
jmp
scas
pop
adcb
pop
mov
jb
stc
lods
dec
cmpsl
mov
sbb
loop
out
popa
sub
push
imul
repnz
pop
lahf
xor
xor
icebp
cmpsb
add
pop
lahf
test
in
insl
loope
cli
jne
add
push
popf
inc
inc
mov
into
or
movsb
mov
add
mov
rcr
jmp
std
mov
push
rorb
sub
iret
mov
pop
pop
jg
or
dec
cld
out
out
adcl
enter
fmull
leave
sub
mov
pop
loope
sbb
in
adc
and
pushf
xchg
dec
je
in
in
push
inc
ss
clc
push
pop
mov
push
sti
push
push
mov
or
push
jb
xchg
repz
xchg
cwtl
outsl
xlat
mov
jmp
ds
sub
sarl
pop
lods
scas
std
in
lds
mov
lock
sbb
push
and
push
push
stc
mov
jge
sbb
cld
lea
outsb
pop
mov
clc
stc
mov
push
addr16
cs
mov
gs
add
inc
dec
ss
add
cltd
cmp
cmc
push
pop
add
sub
xor
outsl
clc
les
negb
xchg
push
icebp
xor
add
push
lods
dec
xlat
mov
push
sbb
lods
test
xchg
int3
ficoml
xchg
loopne
push
es
push
cmc
into
ljmp
pop
addr16
mov
scas
push
xor
incl
cmpsb
push
xor
jno
mov
fs
arpl
push
push
movb
mov
inc
lret
out
das
std
cs
negl
iret
aaa
mov
pop
and
or
cmp
jb
pop
dec
or
push
mov
mov
dec
push
mov
cld
scas
inc
inc
in
push
lock
cmc
lods
sub
pop
and
in
or
jb
inc
push
xor
jae
inc
push
jmp
mov
pop
cwtl
test
push
mov
xlat
xchg
inc
cmp
stos
mul
adc
add
jne
xchg
test
call
mov
stos
insl
inc
jnp
sahf
xor
cli
mov
fmuls
popa
icebp
dec
add
mov
cmpsl
test
xchg
xchg
sbb
jl
stos
jbe
lods
cmpsl
xchg
lds
mov
addr16
sahf
dec
into
xchg
inc
pop
push
pop
sbb
lcall
call
popa
aas
nop
test
mov
and
repnz
cs
enter
sub
scas
lret
pop
mov
sti
mov
ja
pop
and
pop
adc
lret
loop
ror
pop
sahf
dec
dec
xchg
sub
jg
push
push
dec
cmp
lret
and
or
cmpsl
loop
pop
pop
insb
mov
ds
iret
add
jl
adc
dec
push
cmp
push
sub
fwait
dec
cmp
scas
iret
push
fists
xchg
push
push
or
test
aam
mov
icebp
xor
sbb
popf
repz
mov
divps
mov
push
js
test
outsl
adc
xchg
jno
clc
call
and
sub
stc
and
aas
jmp
cmp
aad
sub
dec
sub
in
push
sarl
test
dec
mov
dec
insb
sbb
inc
ljmp
repz
jnp
cmpl
and
jp
and
add
jl
pusha
addr16
dec
add
sub
push
jnp
or
ss
sub
lret
test
jbe
sub
and
cli
mov
mov
pop
push
mov
repz
dec
sub
xor
out
cmpsl
scas
pushl
rorl
sub
mov
in
push
xor
rorl
insl
sti
negl
daa
jmp
js
xchg
movsb
les
std
sbb
jecxz
repnz
fcmovne
push
pusha
inc
repz
out
dec
loope
xor
into
mov
rorb
cwtl
jbe
repnz
movb
shl
sbb
lea
scas
and
and
mov
fcmove
jno
lcall
nop
jno
mov
into
inc
pop
aas
add
xchg
sbb
jg
dec
xchg
movsl
push
iret
mov
xchg
xor
jmp
xor
xchg
push
into
arpl
mov
testl
dec
notl
icebp
in
mov
movsb
push
adcl
cltd
leave
loopne
add
arpl
loopne
push
xchg
push
insl
jecxz
push
sbb
inc
movsb
cmpsb
dec
lock
jmp
nop
cli
sbb
add
mov
fisubs
scas
repnz
lds
push
or
dec
lods
mov
in
dec
into
sbb
mov
push
xchg
mov
lret
mov
mov
jecxz
jno
pop
and
mov
pop
stc
fbstp
xlat
repnz
or
mov
out
insl
push
mov
addr16
pop
xor
inc
cld
adc
jl
add
jnp
cltd
aas
jbe
inc
xchg
shr
xor
icebp
jnp
push
dec
xor
sub
add
and
xor
cmp
popa
mov
inc
push
insl
hlt
push
test
rcr
cmc
enter
xchg
inc
fwait
pushf
stc
xor
aas
pop
inc
js
in
loopne
dec
xchg
jl
aad
inc
sarl
cs
mov
mov
test
xchg
into
hlt
or
cmp
mov
xlat
mov
cmp
add
out
ds
cmp
fs
lods
and
imul
pop
jbe
pop
push
jl
ds
ljmp
mov
insb
cmp
mov
test
jbe
mov
lock
or
xchg
sbb
or
pushf
add
imull
xor
jle
mov
mov
pop
push
jne
mov
inc
add
aam
and
sub
cmpsl
lods
aad
push
icebp
jbe
stos
lret
xchg
insl
pop
dec
cmp
lret
pop
xlat
hlt
das
add
fisubrl
xchg
mov
push
int
int3
sbb
push
push
call
and
mov
sub
xor
push
pop
in
xchg
int
mov
push
inc
or
mov
dec
mov
push
shr
ljmp
dec
mov
rcll
jmp
or
xchg
mov
pop
pop
xchg
shr
push
dec
push
flds
fsubrp
cltd
xchg
ret
mov
mov
inc
bound
outsb
mov
jecxz
aas
adc
dec
xor
mov
bound
icebp
xor
inc
push
in
ds
outsl
aaa
repnz
inc
fwait
call
xchg
ljmp
cmc
mov
pop
push
cmpsb
mov
shll
jmp
std
dec
fstpl
mov
xor
rcrl
xlat
add
incb
dec
div
jns
pop
ds
mov
mov
cmp
cmpl
sbb
sar
add
pop
inc
push
cmp
or
and
sarl
cmpsl
or
fwait
jl
and
cmpsl
int
test
clc
xorl
addl
mov
pop
imulb
inc
insl
les
mov
pop
movsl
subb
mov
lret
sub
testb
pop
lea
neg
xlat
xor
cmp
mov
sub
ljmp
shlb
or
push
cmp
outsl
test
jmp
lods
dec
dec
xor
sti
add
mov
and
pop
fidivrl
ja
popf
mov
jp
cmp
outsb
popa
leave
push
mov
test
adc
push
mov
or
xor
xchg
sub
push
xor
lods
jge
mov
loop
xchg
xchg
lods
jle
icebp
jge
jl
mov
or
in
pop
fwait
adc
repz
push
movsl
xadd
sahf
dec
sbb
popa
loopne
sti
rcrb
mov
cs
or
sti
jne
mov
sbb
adc
dec
aas
imulb
sub
mov
les
ss
sub
mov
sub
shll
insb
xor
fiaddl
mov
cmc
pop
stc
fwait
pushf
cmpsl
dec
push
arpl
hlt
sub
loopne
stos
xchg
cmpsb
inc
and
daa
push
jg
test
or
fidivrs
popa
xchg
jmp
mov
aaa
insl
add
and
inc
dec
popf
jae
imul
jecxz
cmpsl
insb
xchg
out
lret
imul
sbb
jo
mov
and
es
pop
jbe
sub
enter
jecxz
inc
cmp
int3
jae
aad
mov
sub
fucomp
std
pop
ret
test
ror
outsb
xchg
ljmp
adc
shll
int
mov
repnz
in
mov
stos
mov
lahf
mov
sub
lds
lock
mov
push
icebp
bound
jmp
enter
lds
mov
mov
mov
push
xor
pusha
pop
bound
outsb
pop
sbb
mov
out
mov
add
and
arpl
icebp
mov
xchg
sub
test
xchg
leave
jl
fldl
shll
sbb
xchg
shrl
mov
xchg
inc
out
xlat
mov
insl
cmp
jmp
pop
xchg
mov
inc
and
pusha
in
sub
loopne
iret
movsl
inc
data16
push
sbb
xor
cmpsl
repnz
inc
ja
cwtl
stos
lcall
mov
or
repnz
sbb
jg
sub
scas
jbe
jle
add
lcall
inc
push
push
inc
inc
rolb
fst
mov
jbe
dec
push
jne
out
movaps
cmpsb
or
fidivrl
dec
add
data16
fs
dec
test
shl
pop
cmpsl
cwtl
jmp
cmp
pop
callw
outsb
jmp
adcl
sbb
jo
push
inc
mov
into
mov
mov
jb
push
clc
or
leave
stc
std
jle
jb
imul
xchg
out
sahf
sub
pop
leave
sub
add
je
mov
jle
scas
and
xor
pop
rcrb
mov
pop
pop
or
jge
in
or
sbb
pop
sub
dec
xor
mov
cmpsl
into
cmc
or
xchg
cmpsb
sub
pop
ret
cmp
dec
xchg
cmp
push
fs
cmp
push
ret
lret
push
inc
push
sbb
scas
imul
jg
aaa
in
add
jle
movsb
fldln2
pop
icebp
xchg
xchg
xchg
repz
dec
out
int3
push
push
outsb
jp
scas
ljmp
mov
std
or
mov
add
dec
leave
into
mov
and
jne
push
push
sti
sbb
test
mov
std
nop
cmp
add
repz
push
jb
mov
cwtl
scas
mov
sub
jmp
and
dec
mov
sub
arpl
dec
adc
or
dec
das
mov
push
mov
rcll
cmp
lahf
gs
andl
js
mov
fwait
shll
dec
xlat
daa
xor
pop
add
adc
int3
bound
xor
imul
cmpsb
mov
out
dec
adc
dec
shlb
mov
cli
mov
outsl
in
mov
cmpsl
aad
stos
dec
pop
sub
test
adc
sar
dec
popa
les
mov
xor
push
jmp
clc
or
xor
in
pop
lret
loop
repnz
jmp
adc
iret
pop
out
or
xor
xchg
js,pn
inc
jne
int
cmp
sti
incb
aam
jge
mov
push
pop
jne
pop
mov
fdivs
gs
adc
scas
mov
in
and
xor
pmulhw
lret
lea
data16
mov
mov
dec
jns
out
nop
mov
cmp
jmp
and
fldt
pop
mov
jp
xchg
jno
mov
fldt
ds
xchg
adcl
mov
clc
enter
lock
mov
scas
std
push
and
fsub
mov
xchg
add
jl
shl
dec
xor
push
movsb
ds
test
stos
outsl
sbb
rcrl
sbb
stc
lods
inc
imul
enter
and
mov
in
mov
movsb
and
cmpsb
adc
sbb
cmp
jnp
in
mov
sbb
pop
clc
dec
cmc
mov
lea
fs
pop
sub
or
cmpl
movsl
icebp
popa
mov
xchg
mov
jge
mov
es
ret
lret
push
inc
lret
jnp
movsl
ret
push
lret
and
gs
xchg
fistpll
flds
cwtl
cltd
iret
arpl
scas
adc
push
fcomps
inc
in
sub
cmp
shlb
aaa
push
jmp
sub
and
jo
cmp
sbb
lods
pop
aam
daa
jl
push
dec
push
lea
loopne
or
push
sub
sti
adcb
fistpll
cwtl
and
fstpl
jg
push
int3
sbb
dec
mov
lahf
in
xchg
xchg
lods
or
shr
fstpt
or
sarl
jne
jle
sbb
inc
cmp
js
xchg
or
sub
inc
mov
fwait
testb
test
push
jb
mov
push
rcr
dec
popa
jl
out
add
mov
sub
sub
dec
or
mov
add
push
repnz
jne
mov
cs
push
add
std
fistpl
fistpll
in
addr16
and
pop
ds
cltd
add
or
add
call
mov
pop
sbb
cmp
imul
pop
mov
loopne
sub
push
scas
scas
xorb
fsts
pop
rcrl
inc
or
add
in
andl
mov
stc
ficoms
xor
hlt
push
fwait
cltd
mov
jae
push
in
inc
int
sub
ds
inc
call
repnz
sub
add
xor
mov
dec
iret
repz
enter
xchg
inc
inc
or
icebp
dec
into
cld
xlat
push
adc
sub
xor
cltd
ficomps
mov
ss
orb
adc
lock
mov
cmp
sub
jecxz
loopne
cs
or
js
test
jb
or
inc
xlat
add
push
dec
push
rolb
xor
jg
cmpsb
jg
cmp
cmpsb
scas
pop
sbb
int
pop
loope
test
and
stc
xchg
push
popa
push
clc
and
bound
pop
push
or
dec
fistpl
and
in
insb
adc
inc
je
cmpsb
lcall
and
es
ficoml
push
mov
inc
enter
les
popa
jne
xchg
push
out
push
pusha
jb
cmp
test
mov
ds
push
bound
push
aaa
cwtl
std
cmpsb
movsb
call
stos
mov
adc
dec
jg
sti
popf
lods
push
push
loope
ds
jno
add
stc
aaa
pop
jae,pt
sbb
imul
enter
xchg
mov
sub
dec
cld
push
xlat
pop
lods
mov
icebp
sbb
subb
ss
jl
cltd
clc
pop
lcall
mov
int3
lea
nop
mov
jecxz
sub
cmc
pop
or
test
mov
sub
xor
mov
fcoml
aam
pop
add
fiadds
mov
enter
push
rcpps
mov
inc
mov
mov
pop
enter
xchg
aaa
sub
or
push
jl
inc
xor
jg
mov
stc
mov
sbb
push
popf
push
in
in
stc
pop
dec
scas
mov
add
icebp
ljmp
insb
out
adc
lds
adc
fdivl
repnz
pop
lods
pop
les
push
movsl
das
or
test
pusha
add
rclb
pop
sbb
clc
xchg
insb
push
mov
jle
jb
pop
shl
inc
xor
dec
cmp
loop
xor
pop
sbb
push
mov
loopne
sahf
pushf
arpl
mov
daa
mov
mov
out
cmovae
fists
fbld
cld
or
out
ss
movsl
adcl
and
sbb
fldcw
mov
mov
icebp
push
int3
jno
sahf
insb
sahf
mov
loope
adc
iret
and
xchg
xchg
movsl
mov
jmp
test
cmp
imul
fstpl
cli
dec
bound
push
and
loop
mov
fwait
mov
dec
pop
xor
mov
out
lcall
cmpsb
popa
insb
xor
ficomps
popa
jns
xlat
repnz
cmpsb
pop
nop
jae
sbb
xor
inc
iret
fs
pop
dec
mov
addr16
leave
jno
outsl
lock
sahf
and
jl
fsubl
or
push
popl
sub
shll
xchg
data16
ljmp
leave
xchg
mov
je
fistpl
movsb
jae
cmp
and
jle
jl
jg
test
adc
je
pop
mov
sahf
stos
xchg
aad
xor
jo
pop
xchg
xchg
mov
aam
or
dec
pop
cs
dec
sub
inc
jne
std
int
test
jne
jmp
je
jle
xchg
add
fwait
lret
xchg
sbb
xor
cs
sub
mov
inc
mov
pop
or
lret
js
push
sbb
xor
loop
jne
into
jmp
jge
mov
shll
push
sub
dec
mov
mov
js
iret
sub
xchg
add
mov
adc
out
xchg
mov
negb
push
dec
cmp
adc
rcrl
inc
hlt
in
sti
nop
mov
push
xchg
xchg
scas
daa
cmpsb
out
jne
gs
inc
push
dec
out
in
mov
cli
xor
cld
jnp
fwait
adc
aam
cmpsl
jne
jmp
cmc
pop
mov
mov
dec
sub
call
insl
dec
push
out
cli
cli
repz
xchg
fs
xchg
xchg
lcall
insl
es
daa
sub
dec
outsl
sbb
dec
into
or
jle
or
push
adcb
sub
lahf
ss
ret
fsubrl
inc
mov
lcall
push
xchg
fs
jl
ss
in
ljmp
xor
loopne
inc
and
out
mov
aas
sbb
push
inc
or
leave
sub
fadd
fisttpll
sbb
jp
insl
inc
fisttps
sahf
int3
fcmovnb
jg
mov
ret
add
lea
push
pop
mov
mov
shrl
fistps
leave
xchg
and
stos
lahf
sti
fimull
mov
mov
js
std
mov
mov
inc
insl
mov
das
xorb
das
into
xchg
out
ret
test
pop
lcall
shlb
aam
add
outsb
je
inc
nop
ljmp
jg
stc
adcb
jbe
ret
xchg
ja
mov
mov
data16
jo
add
in
lcall
xchg
out
xor
or
mov
dec
mov
pusha
cmpsb
or
js
lods
xor
aas
out
mov
fsts
std
mov
add
cli
clc
lret
lock
clc
push
neg
dec
inc
inc
jp
xchg
addr16
mov
data16
addr16
cmp
mov
or
test
xchg
inc
inc
and
dec
popf
push
mov
lods
jg
xchg
xchg
xor
lcall
sbb
das
dec
jb
in
std
test
ficomps
jmp
pop
jne
into
inc
lea
or
out
sbbb
aam
dec
mov
fidivs
adc
icebp
xchg
xor
or
cmp
out
dec
lods
sub
mov
pop
cmpsl
jmp
mov
cld
ficomps
movsl
fnsave
addr16
rolb
in
enter
hlt
shlb
jno
jne
sbbl
push
daa
stc
in
jp
cmc
out
in
gs
imul
push
ds
push
mov
jl
sbb
pusha
ja
mov
xchg
mov
shlb
add
dec
cmp
pop
in
push
mov
xchg
movsl
pop
jmp
mov
mov
fldcw
push
mov
add
in
add
mov
push
mov
or
shll
aaa
xchg
pop
xchg
popa
repz
dec
int
in
popa
pop
outsl
lahf
movsl
or
cld
cmp
pushl
xchg
std
out
mov
loopne
sub
cltd
mov
data16
xchg
adc
push
cmp
xchg
pop
mov
ds
or
dec
push
dec
push
int3
jmp
aad
rep
sub
loop
adc
fistpl
movups
mov
std
test
sbb
and
xor
and
pop
scas
cmp
jmp
xor
jbe
push
or
mov
cmc
jne
gs
rorl
out
jmp
mov
or
pop
sahf
pop
aad
push
cs
jecxz
mov
or
dec
rcrl
xchg
inc
inc
xchg
mov
je
mov
dec
aaa
pop
lahf
mov
xor
push
or
mov
nop
or
shll
inc
jnp
pop
push
std
lods
pop
fmull
xchg
loope
mov
cmp
stc
inc
adc
lods
push
pop
mov
xchg
xor
pusha
inc
cli
cmpsb
mov
fs
lret
cmp
mov
es
inc
jae
xchg
xchg
iret
aas
jns
jae
orl
outsl
mov
mov
xchg
cld
mov
and
fs
cmp
and
aaa
mov
sub
repnz
pop
cmc
clc
push
fsts
sbb
pop
mov
mov
push
pop
lds
dec
addr16
push
aas
push
and
mov
pop
sub
aaa
and
mov
stos
out
jecxz
sbb
in
xchg
jns
loope
cli
shrb
mov
or
dec
xchg
les
data16
inc
movsl
outsl
dec
cli
jae
loop
pop
rcrb
and
lods
xchg
mov
and
stos
popf
mov
pop
fisubrs
jbe
and
inc
pop
xor
ljmp
dec
mov
mov
test
jb
dec
or
xor
xchg
or
jl
jecxz
xor
loope
dec
sarl
push
dec
mov
jle
add
push
xor
xor
adc
test
into
scas
aas
mov
mov
jl
push
cmp
data16
xor
and
inc
nop
ja
cmpsb
insl
pop
mov
ljmp
daa
mov
test
stc
push
mov
das
arpl
shrb
sarb
hlt
ss
out
imull
xor
mov
pop
aam
mov
sbb
popf
sbb
lret
xchg
jg
outsb
aam
xor
or
leave
pusha
push
es
add
push
pop
or
dec
or
mov
dec
xchg
fisttps
push
imul
mov
sbb
mov
cld
mov
adc
outsl
push
cltd
outsl
add
cli
jb
xor
movsb
and
xchg
test
int
push
dec
mov
lock
xor
dec
mov
push
test
xor
cmp
test
mov
dec
mov
or
cmp
and
int
inc
cmpsb
fxch
pop
cmp
clc
dec
mov
push
sahf
mov
sub
test
testl
sbb
sbb
mov
std
xor
cli
out
pop
stos
aas
dec
jmp
xchg
mov
push
and
jo
cmpsb
dec
jb
loopne
sub
mov
xchg
dec
sbb
in
sub
jecxz
or
jb
fisubrs
in
sub
int3
adc
jmp
fiaddl
jo
push
cmc
mov
inc
arpl
cmpsl
mov
or
cmp
sbb
fiaddl
icebp
xchg
jecxz
mov
inc
enter
cmc
adcb
xchg
sub
cmp
inc
mov
and
mov
or
dec
rclb
les
aad
and
push
lds
adc
fdivl
pop
inc
cmp
jbe
fcomps
insb
push
cmp
les
add
int3
andl
sub
je
sub
mov
push
jle
lods
inc
jmp
imul
out
testl
lret
int
jnp
ret
lods
xor
mov
pop
adc
sbb
adc
not
lods
and
push
add
pop
pop
icebp
movhps
insb
andl
lea
ret
push
cmp
outsb
nop
sbb
jnp
testl
push
jmp
jae
gs
cmp
sbb
jns
pop
dec
fsubrl
inc
test
popf
ficompl
sub
xor
stc
ret
mov
mov
ret
dec
mov
sub
adc
pusha
mov
push
dec
adc
push
scas
mov
adc
jns
push
dec
out
and
fcmovnbe
loop
rclb
into
jmp
fsubl
xor
jno
js
icebp
nop
xchg
mov
xor
hlt
sub
fisubrl
fdivrl
jmp
jb
outsl
jmp
xor
push
mov
ss
xchg
inc
xor
mov
and
movsb
mov
icebp
fucomip
rorb
xor
mov
sub
jmp
out
shlb
loope
jo
not
xchg
or
scas
dec
test
ffreep
gs
mov
xchg
lds
mov
out
cli
cmpsl
inc
shll
jo
sub
jae
add
sahf
cmp
push
xor
andl
xlat
fisubrl
push
cld
xchg
xor
jno
xor
pop
sbbl
lds
stc
out
out
lahf
cmp
aaa
mov
or
sub
les
loopne
iret
push
daa
mov
dec
dec
jle
test
lods
mov
pop
sub
mov
pop
jb
rcll
scas
stos
int3
inc
inc
adc
ds
sub
test
enter
mov
mov
push
insb
ds
ja
dec
pop
xchg
je
jnp
xor
mov
mov
mov
jnp
inc
test
sub
cmp
mov
mov
or
sbb
repnz
ss
cmp
idivl
loopne
push
pop
push
push
mov
mov
pop
loope
mov
adc
ss
rclb
pop
push
lock
jmp
cmp
rep
gs
push
mov
add
mov
jmp
hlt
fucomip
xchg
aas
inc
cmp
pusha
lds
jg
int
ret
xchg
pop
jo
push
js
mov
adc
sub
xchg
pmaddwd
sub
cmp
mov
push
cmp
stos
mov
mov
jp
fwait
cmp
pop
psubd
outsl
stos
out
std
ss
sub
push
adc
aam
insb
scas
imul
cli
add
xchg
mov
ljmp
mov
add
pop
cmp
jle
fadd
push
and
loopne
ljmp
ret
mov
dec
leave
in
fidivrs
xchg
xchg
and
mov
and
mov
daa
dec
pop
cld
fsts
xchg
test
jmp
pop
mov
add
dec
lods
aam
loop
inc
aad
inc
lret
fwait
js
testl
nop
jmp
repz
cmp
je
aas
call
push
cmpsl
in
xor
mov
adc
ja
pushl
jbe
shrl
lea
push
stc
sub
push
gs
or
add
inc
inc
adc
sbb
call
sbb
pop
repz
push
cmpsl
cwtl
inc
mov
insl
jb
imul
bound
xchg
sarl
rcll
push
iret
popf
popa
inc
in
push
rolb
push
xlat
aam
scas
and
push
and
cmp
xchg
fbld
jg
rolb
mov
jo
stc
clc
lret
mov
push
sub
aas
call
xor
pop
outsb
pop
jno
add
mov
filds
mov
jp
push
ret
or
outsb
aaa
sbb
shl
pop
fistpl
sub
or
inc
pop
movsb
mov
mov
ficoml
dec
or
cmpsb
xor
push
mov
lods
dec
and
insb
mov
mov
inc
rcrb
or
in
sahf
xor
mov
es
dec
mov
push
test
push
lret
in
cmpsl
insl
in
jae
filds
std
and
dec
sbb
xchg
js
jle
sbb
call
add
scas
js
ret
mov
sbb
jno
mov
clc
xchg
dec
movsb
fisttps
fucomp
add
sarb
rcr
loopne
ljmp
daa
adc
insb
lahf
sarl
sbb
mov
fldenv
popa
or
fwait
xchg
dec
cmp
cltd
loope
push
notb
ss
mov
jbe
mov
sub
scas
je
in
insl
mov
dec
in
jmp
sahf
add
insb
lods
jge
in
push
inc
sarl
rcl
dec
inc
xchg
lahf
pushf
inc
jns
mov
add
hlt
pop
jge
imul
fdivs
sbb
jno
test
push
js
add
or
push
and
sub
inc
and
sbb
pop
xchg
jb
cmc
add
xchg
imul
mov
sub
cld
mov
pusha
ds
xchg
repnz
lods
or
push
pop
push
cld
daa
jle
arpl
test
shll
jns
sbb
or
mov
ljmp
loop
lcall
aas
aaa
leave
int
cmpsl
je
fs
lea
aaa
adc
loopne
sub
push
xchg
adc
push
add
xchg
aam
aaa
fsubrl
ret
cltd
repz
test
adc
pop
call
jecxz
dec
jp
jl
xor
and
push
sbb
out
lods
sarl
add
xchg
out
or
mov
arpl
jnp
int3
clc
cmpsb
sbb
jnp
sbb
iret
cltd
mov
sub
lret
mov
dec
js
push
and
and
iret
mov
pop
enter
push
dec
das
push
test
xchg
jge
or
and
inc
stos
stc
and
adc
insl
and
mov
adc
mov
popf
push
int3
jmp
xlat
imul
data16
aaa
repz
lods
cmp
sbb
outsl
jge
and
cmp
cmp
lock
ret
pop
adc
or
ret
rolb
decb
pop
sub
out
fildll
mov
adc
inc
out
lock
arpl
push
push
ja
sahf
addb
out
imul
pusha
or
sbb
repz
jbe
push
in
sub
and
lea
mov
push
movsl
push
pop
loop
add
jmp
mov
daa
xor
push
add
mov
sti
dec
in
push
mov
js
mov
adc
cmp
orl
dec
in
pusha
mov
into
cmp
push
add
leave
je
lret
int3
dec
push
jbe
mov
add
add
cmpl
movsb
stos
aas
dec
cmpsl
lock
fwait
movsl
adc
cmp
inc
sbb
call
repnz
fiadds
out
mov
popf
mov
sbb
faddl
in
dec
fptan
mov
test
mov
xchg
xchg
cmp
push
or
xchg
mov
frstor
add
jb
inc
jae
add
out
aas
leave
in
or
add
lret
inc
repz
out
fdivl
ja
enter
inc
cmp
or
xor
popf
pop
push
jle
adc
sti
push
pop
mov
sbb
xor
repnz
xor
inc
cs
outsb
cmp
mov
outsb
stos
sbb
push
lahf
lock
iret
imul
add
jbe
shlb
clc
push
and
pop
cmp
pop
pop
lds
dec
adc
mov
mov
pushf
icebp
out
mov
jle
inc
daa
int3
sahf
hlt
jne
scas
repnz
push
mov
and
fucomip
jb
aad
in
ja
sarl
out
andl
add
mov
in
cli
rorl
sarl
cmp
popa
sub
and
outsl
mov
dec
insb
js
adc
inc
or
mov
mov
nop
xlat
xor
or
sbb
or
xchg
iret
scas
xor
push
push
adc
scas
adc
or
mov
jb
clc
notb
test
test
and
sub
imull
push
lahf
pop
enter
addr16
popa
cmp
push
inc
push
fdivs
xchg
into
or
sbb
shr
test
sub
mov
fistps
xor
test
into
xchg
push
pop
in
mov
mull
inc
popa
adc
fdivl
cmpsl
mov
int
inc
sbb
mov
sbb
nop
xchg
sub
add
gs
fsubl
call
aad
mov
outsb
pop
xchg
pop
lock
enter
sbb
cmp
cmc
enter
fucomp
mov
jecxz
or
ss
pusha
mov
pop
test
mov
add
dec
test
pushl
mov
or
int3
aaa
mov
add
divb
pop
adc
outsl
add
negl
lret
cmp
mov
fimull
mov
lret
mov
in
mov
jge
je
aam
or
adc
cld
xchg
gs
fildll
mov
fldenv
in
dec
and
outsb
arpl
fcoml
inc
xchg
sbb
jmp
jne
mov
lea
insb
inc
movsb
mov
push
add
cli
mov
out
insb
sbb
outsl
or
cmp
leave
and
xchg
ret
fildll
int
xor
cmpsb
push
dec
and
int
cmc
xchg
jbe
les
test
dec
pop
inc
pop
gs
jns
mov
mov
jmp
fwait
scas
in
loop
jnp
fwait
cmc
dec
cs
fiadds
xchg
xlat
dec
movsb
rorb
sub
push
das
aam
ljmp
clc
mov
leave
add
or
aad
dec
lods
pop
mov
add
cwtl
push
jl
pusha
adc
xchg
jg
stc
inc
push
cmc
ret
insl
xchg
inc
jno
cmp
cmpsb
mov
es
sub
insl
pop
mov
cltd
mov
xchg
xchg
stc
rcrl
or
pusha
and
out
dec
dec
push
andb
sub
sbb
cmc
jo
inc
or
xchg
pop
into
lret
cmp
fnsave
sahf
cmp
repz
jle,pt
push
cli
xchg
inc
push
orl
js
mov
mov
mov
cli
cli
inc
mov
jb
jecxz
or
test
dec
les
sub
nop
mov
div
xchg
xchg
or
xchg
push
out
add
nop
dec
push
pop
pop
sub
aad
fstl
xor
mov
or
cmp
imul
fs
pop
jns
subb
jge
scas
sub
sub
xlat
loop
enter
cmp
and
sbb
jb
push
sub
outsl
cmpsb
and
scas
and
aaa
and
mov
lcall
mov
mov
imul
xchg
mov
inc
cld
fcomps
pop
aas
nop
or
cs
out
fisubl
adc
stos
mov
xor
dec
dec
mov
sbb
cs
nop
push
faddp
outsl
cs
and
out
movsb
sbb
scas
flds
jl
mov
xor
cwtl
mov
mov
call
in
sti
sahf
jns
mov
sbb
add
fistpll
jmp
lock
sbb
adc
mov
inc
jle
and
ds
mov
lea
loope
inc
jge
movsl
sbb
out
les
into
xchg
adc
or
and
das
adc
cmc
popa
jge
enter
cmp
pop
xchg
lret
mov
in
adc
mov
rorb
call
test
xor
jg
sbb
rclb
push
jbe
bound
cmpsb
jecxz
in
sub
or
cmpsl
fiaddl
out
pop
icebp
mov
jl
mov
mov
mov
fptan
hlt
lret
mov
xor
add
xor
dec
inc
test
sub
xor
das
lock
int3
lock
sbb
les
add
xchg
aad
inc
jl
stos
pop
inc
popf
lcall
xor
add
mov
xchg
cwtl
cmp
mov
arpl
push
xlat
mov
stos
roll
and
pop
xchg
scas
loope
imul
fildl
outsl
addl
inc
pusha
inc
movsl
jmp
sub
imul
sahf
push
jo
inc
sub
test
inc
sub
sbb
faddl
jno
in
push
imul
mov
fnstsw
pop
js
dec
adc
fiadds
dec
ret
arpl
jne,pn
mov
dec
fstl
jo
sbb
pop
ret
push
cmp
sti
cmp
mov
adc
mov
pop
jmp
xlat
stos
addr16
icebp
xor
push
imul
imul
sub
loopne
jo
mov
add
mov
outsl
xorl
addb
xor
dec
mov
jmp
mov
lods
sbb
cs
cli
or
mov
xchg
roll
mov
in
bound
aam
add
sub
sbb
lea
inc
mov
mov
inc
pop
or
mov
cld
sbb
xor
mov
cmp
mov
icebp
mov
rolw
cs
test
fsubs
sbb
push
xchg
jo
adc
nop
testl
adc
sbb
pop
adc
sbb
insb
pop
std
ds
leave
lcall
xor
sub
sub
mov
test
jp
jle
add
movsl
popa
inc
scas
cmc
inc
and
sahf
aam
leave
into
mov
outsl
ficoms
addr16
xchg
dec
fwait
mov
add
mov
dec
mov
sahf
xor
xcrypt-ofb
cmpsl
jmp
jo
arpl
cmp
decl
xchg
cmpsb
out
popf
sub
adc
outsl
aad
sub
mov
jo
frstor
jo
int3
fdivrs
sbb
rcr
adc
and
in
bound
insb
lods
push
dec
mov
mov
push
pop
cmp
ficomps
jp
mov
jp
xchg
cld
lods
sub
jg
roll
in
push
adc
xor
push
xor
ficoml
aaa
js
cmp
aaa
nop
jmp
sub
mov
mov
add
xlat
incl
cwtl
mov
and
xchg
xor
pop
stos
cld
inc
int3
daa
ret
push
cltd
lcall
jge
push
and
xor
inc
pop
adc
bswap
adc
push
outsl
inc
jno
jmp
lods
jp
sti
push
mov
int
scas
mov
mov
push
jae
js
inc
mov
or
jne
dec
sub
mov
xor
cmp
hlt
lret
je
adc
dec
jo
add
cmpsl
dec
jno
sub
sub
mov
cs
jbe
mov
pop
dec
subb
icebp
in
int3
in
jbe
paddw
xchg
pop
ds
ds
add
ljmp
mov
aas
sti
outsb
out
andl
push
sbb
outsl
adcl
cmp
adc
nop
adc
cwtl
add
pusha
fwait
or
add
xchg
push
adc
fimull
inc
nop
gs
pop
push
mov
add
push
mov
inc
adc
xor
test
pop
lock
dec
rcrb
mov
loop
sub
push
movsb
outsl
add
out
inc
cwtl
push
mov
mov
jecxz
call
cmpsb
imul
mov
rclb
push
ret
cmp
push
xchg
cmp
add
or
sub
or
cmp
sbbb
inc
stos
mov
xor
xchg
adc
dec
add
inc
psllq
out
je
stos
push
cmp
pop
cmp
ljmp
pop
push
sub
jmp
iret
int3
je
les
xchg
sub
mov
mov
pop
xchg
faddl
jg
push
loope
or
and
and
jg
inc
push
popl
call
in
cmpsb
sub
lock
fmull
or
sbb
sbb
add
aad
addb
pop
jae
push
dec
mov
mov
rol
sbb
movsb
push
adc
xchg
out
jbe
and
lods
push
or
scas
clc
mov
add
inc
sub
repnz
adc
and
imul
imul
shrl
or
stos
adc
icebp
lcall
jbe
or
aam
bound
mov
sbb
add
pop
adc
stos
lods
and
mov
mov
ss
dec
pushl
iret
stc
cmpsb
or
mov
sar
fs
enter
lods
push
add
mov
stc
aad
mov
jmp
ja
fs
shlb
hlt
mov
push
cmp
xchg
ljmp
inc
jecxz
in
mov
jbe
test
mov
add
xchg
adc
paddb
movsb
sbb
cmpsl
enter
cmp
sub
lret
lods
mov
jecxz
dec
into
cmp
ljmp
push
adc
xchg
push
push
clc
jae
subl
addr16
pop
xchg
shl
push
fbld
test
mov
or
add
sub
mov
or
sarb
cmp
push
mov
push
dec
inc
push
mov
dec
and
fdivrs
and
jl
int
jnp
loop
int3
int3
jge
cld
sub
inc
lods
xchg
es
daa
arpl
test
dec
into
mov
outsl
inc
insb
adc
test
mov
outsb
cwtl
aam
leave
imul
dec
or
je
xorl
mov
add
lret
mov
push
xchg
fnstcw
pusha
loopne
cmp
jle
addr16
cmc
in
mov
fnsave
pop
mov
and
aad
andl
xchg
sbbl
push
lahf
fiadds
daa
push
jg
xor
pushf
stos
scas
cwtl
fstl
pop
xor
adc
into
inc
cli
mov
dec
mov
adc
in
loopne
mov
dec
dec
aam
xchg
inc
sbb
lahf
dec
xchg
lods
fcmovnbe
xor
shl
push
mov
movsb
jb
test
addr16
xchg
aad
sahf
xchg
sub
lret
int
outsb
cs
aam
ds
ss
fmull
sub
pop
aad
icebp
or
cli
scas
imulb
mov
lret
aas
mov
pop
pusha
movsb
xlat
adcl
sub
xor
or
scas
aaa
scas
pop
std
clc
scas
push
ss
lods
mov
data16
fbld
arpl
mov
pop
and
repnz
out
aam
sarl
mov
jge
ret
out
mov
mov
adc
fsubrl
loope
lret
out
and
fs
sbb
sbb
sub
jns
call
dec
dec
pop
inc
shl
enter
leave
jo
mov
fsubr
movsl
incb
adc
xchg
xor
retw
jmp
imul
adcl
stc
dec
or
mov
jns
pop
mov
mov
and
shrb
cmp
inc
and
inc
out
add
cmp
pop
fildll
jo
mov
adc
pop
loope
mov
scas
push
lock
or
in
ss
insb
fcompl
daa
lods
mov
or
push
adc
cmc
sub
fiadds
add
enter
mov
mov
icebp
lock
pop
cmpl
xorl
jbe
inc
pop
mov
xchg
test
iret
mov
enter
lods
popa
lahf
icebp
dec
pop
push
out
sub
mov
dec
xchg
arpl
mov
lock
mov
lahf
data16
cmpsb
jno
sbb
xor
fadds
sbb
arpl
xchg
cltd
add
cmp
int3
inc
dec
out
mov
lahf
push
xor
jb
dec
sbb
inc
test
adc
in
sub
and
imul
xchg
or
or
int3
cmp
jbe
ret
dec
pop
out
cmc
iret
loope
lea
jb
sub
es
fwait
outsl
xchg
imul
cli
adc
in
add
xchg
mov
repnz
mov
loope
aas
movsl
push
test
sbb
push
sbb
fdivp
sbb
dec
nop
shrb
test
mov
cmp
scas
andb
sti
sub
pop
mov
into
leave
faddl
mov
scas
out
dec
jmp
jbe
sbb
mov
cmc
loope
add
movsl
mov
cld
dec
pop
ret
leave
sub
rcr
mov
aaa
push
xchg
sbb
xchg
sub
inc
or
ja
and
sbb
or
shrl
nop
push
sub
or
int3
rcr
dec
lock
cmp
mov
inc
enter
jp
pop
mov
jne
jno
enter
xchg
bnd
sub
mov
lahf
inc
push
popa
mov
and
es
sub
inc
cs
scas
sti
stos
incl
daa
sub
call
mov
fsubrp
add
mov
das
outsl
leave
insl
pop
int
insb
clc
movsb
xchg
pop
mov
into
test
pusha
mov
cmp
cli
xchg
mov
cwtl
imul
and
repz
cs
adc
int3
vpaddusw
repz
cmp
insl
sub
xchg
daa
ret
adcb
in
sub
add
out
fistpll
or
inc
stos
ficompl
fmul
push
shll
add
mov
cmp
iret
ret
insl
mov
fisubrs
xor
dec
inc
push
adc
mov
dec
repz
leave
inc
mov
sbb
nop
dec
push
sti
lock
scas
ja
xlat
fwait
aas
loop
cmp
jle
or
test
or
sbb
test
and
in
push
pop
adcb
pusha
mov
hlt
mov
cltd
iret
inc
testl
jae
mov
push
dec
add
shr
xchg
mov
dec
push
sbb
cmp
mov
jae
mov
sbb
out
xor
shlb
pop
ss
or
mov
xor
adc
sbb
lret
test
int3
negb
insb
sahf
popa
mov
push
xchg
test
inc
sti
imul
sti
jbe
fwait
dec
int3
rclb
sub
cmp
pop
push
xor
push
cltd
sahf
xor
xor
push
jg
or
jne
fsub
popa
mov
mov
xchg
andl
cmpsb
or
xor
xchg
push
loop
mov
sub
lea
mov
dec
sub
mov
popa
and
rorl
cmp
bound
ljmp
pop
cmp
es
jecxz
fistpl
mov
mov
or
mov
nop
cmp
sbb
test
cmpl
sub
push
xchg
imul
cmp
or
je
ja
lahf
jae
mov
xchg
push
push
pop
aad
dec
mov
adc
rorb
rolb
mov
pop
push
inc
sti
and
rolb
mov
add
int
mov
pop
push
fsubrl
push
pop
fildll
xchg
lret
jg
pop
jb
dec
lea
mov
sbb
mov
outsb
xor
push
jae
loopne
hlt
idivb
dec
mov
in
sub
popf
inc
int3
pop
adc
jl
cmpb
sbb
cmp
dec
int
pop
mov
mov
ss
or
xchg
adc
xchg
jmp
dec
pop
rcl
sub
sub
cmpb
adc
sub
and
mov
je
adc
shl
test
jmp
add
and
je
xchg
test
outsl
add
sbbb
ret
outsb
fsubs
sbb
push
enter
dec
fsubs
pop
push
push
lret
mov
icebp
bound
decb
or
fs
nop
fs
jecxz
sub
ljmp
adc
sbb
or
push
mov
sub
bound
clc
pushf
mulb
nop
inc
sub
xlat
adcl
subl
and
mov
dec
mov
bnd
stc
mov
adc
rorb
lods
mov
out
mov
sub
xor
inc
rcrb
sub
xor
rclb
jge
xor
fisttpl
jne
into
sbb
sahf
shll
ficomps
pop
push
das
loop
or
pop
mov
mov
pop
jecxz
mov
mov
jo
mov
dec
call
sub
cmp
loope
cltd
hlt
mov
jae
ljmp
in
xchg
dec
pop
pop
push
pop
add
movsl
xor
adc
adc
or
loop
add
ss
xor
data16
xchg
inc
mov
int
and
mov
mov
fmull
sbb
mov
pop
inc
insl
movd
test
hlt
jo
pop
divl
ret
test
in
inc
cwtl
out
add
out
mov
dec
fidivl
fbstp
in
push
fnstenv
fbstp
mov
add
jecxz
es
and
repz
out
sahf
out
push
hlt
add
pop
dec
sub
sub
outsl
xor
es
push
or
add
fstps
xlat
cmp
cmp
xor
sub
dec
in
pop
jne
add
mov
pop
test
push
push
mov
sti
jne
pop
jle
inc
pop
sbb
xor
fidivl
or
add
jge
cld
ret
ljmp
cmc
jbe
leave
xchg
mov
mov
and
test
mov
or
js
outsb
scas
cltd
je
mov
cmp
mov
sbb
xchg
xor
into
push
ja
and
push
aas
adc
lods
inc
lods
popf
lods
xor
adc
fdiv
xor
and
popa
lods
mov
sbbl
in
jl
jl
and
inc
mov
inc
sahf
inc
lahf
std
fnstcw
lcall
push
test
stos
les
mov
or
mov
sbb
outsl
cmp
out
or
lea
bound
in
enter
rorb
pop
ss
leave
test
push
mov
ret
mov
popa
mov
cmp
data16
int3
push
and
scas
xor
fistps
rcl
mov
xor
test
lret
and
mov
cmp
add
cld
int3
pushf
sub
push
nop
jnp
xor
inc
push
cmpsl
sbb
fsubr
adc
push
xchg
mov
scas
decl
loop
sbb
inc
sahf
mov
in
push
xorl
in
mov
fisttpl
xor
or
push
mov
pop
inc
sub
mov
jecxz
sti
jp
cmp
ret
icebp
fcompl
jmp
sbb
ljmp
pop
jo
and
jl
add
mov
mov
jo
popaw
and
dec
fstpt
nop
movsb
cld
outsl
xchg
cmc
push
sbbb
rorl
jo
data16
add
test
loopne
ret
stos
xlat
push
rep
ss
pop
add
and
jecxz
push
pavgw
mov
push
mov
jae
icebp
idivb
fwait
movq
scas
sbbb
fistpl
and
mov
shr
push
pusha
repnz
idiv
les
cli
add
cmp
filds
xchg
mulb
mov
mov
pop
mov
out
arpl
push
dec
das
fsubp
ss
sahf
jns
lret
ljmp
add
sub
and
adc
lret
ds
outsl
es
and
insb
call
rolb
outsl
or
push
cmc
js
lcall
pop
xor
iret
shrb
das
aas
cmp
call
out
xor
push
jb
pop
cs
pop
lcall
or
inc
stos
push
pop
inc
test
adc
stc
mov
ficoml
jo
in
aaa
inc
xchg
lods
popf
scas
ds
je
add
cmp
frstor
or
mov
or
jg
jo
popf
xor
fs
inc
out
mov
stc
and
sub
jnp
jp
xor
sbb
roll
pop
sbb
mov
sub
cmp
orb
xor
and
cmp
fadds
aad
xor
dec
push
mov
sbb
in
into
test
pop
in
ret
xchg
imulb
push
lret
rorb
cs
cs
and
testb
sub
xor
jl
adc
jno
stc
mov
movsb
mov
xchg
fisubs
imul
fcmovne
ret
mov
popl
out
clc
jmp
loopne
repz
dec
or
paddq
notl
dec
ss
mov
cmpsl
inc
imul
mov
mov
divb
sub
sbb
andl
sahf
adc
ret
mov
cmp
mov
mov
mov
xor
subl
cmp
daa
nop
cmpsb
orb
std
arpl
xchg
nop
sti
dec
push
sbb
or
fsts
lret
ret
pop
add
ja
fdivl
mov
xor
push
pop
mov
out
hlt
adc
pusha
cld
sub
dec
mov
in
inc
and
mov
shlb
mov
pop
mov
add
inc
xor
das
int3
mov
orl
or
or
ljmp
xchg
mov
mov
dec
pop
aam
int3
mov
movsb
sbb
aaa
hlt
pop
jle
or
pop
pop
adc
sti
adc
or
fnstcw
test
daa
adc
adc
push
ret
mov
scas
and
ss
mov
dec
inc
fldl
and
out
scas
neg
jae
jns
fisttpll
sbb
popf
cmpb
or
jae
add
mov
in
and
mov
mov
add
sub
and
lock
out
ss
pop
ljmp
cmp
sub
cmp
xor
test
add
dec
jl
cmpsb
add
aam
add
data16
xor
fsubl
mov
sbb
jns
scas
arpl
ret
push
xor
adc
sub
test
xchg
mov
femms
xchg
lahf
loop
loope
shlb
iret
add
mov
lcall
xchg
and
scas
cmp
dec
into
das
ret
sub
add
test
adc
pop
mov
mov
push
push
mov
xor
dec
in
decl
push
and
sbb
add
jnp
jg
add
pop
mov
jb
and
shr
out
lods
std
lds
fs
mov
stc
push
mov
mov
into
mov
fs
add
pop
add
cs
stc
push
mov
leave
es
ja
movaps
jg
les
dec
outsl
repnz
fnstcw
stc
lea
mov
repz
je
xor
cmp
add
xor
das
dec
and
lock
fists
inc
lds
loop
adc
pop
sbb
ja
insl
mov
ds
test
data16
lret
movsb
out
pusha
loope
push
orb
or
cmpsb
sti
adc
or
lret
xor
jp
lret
mov
fildll
push
subb
popa
inc
addr16
cld
and
sbb
stos
sbb
or
mov
mov
jp
mov
sub
dec
sub
pusha
cs
xor
pop
xchg
adc
pushf
lds
xchg
jge
sub
add
sub
xchg
jmp
adc
mov
pushf
lcall
jecxz
sbb
sub
aad
outsl
outsl
movsl
fwait
adc
int3
push
xchg
cmpsb
scas
lret
jge
cli
popf
rcll
imul
fistpll
in
pop
jne
jo
fs
mov
dec
add
mov
shlb
inc
loope
lahf
fwait
push
dec
xchg
lcall
mov
rolb
pushf
inc
fmul
pushl
pop
inc
push
cmp
xchg
imul
repz
mov
push
add
in
je
stos
in
lret
test
out
cmc
shlb
dec
mov
mov
lods
les
mov
sbb
xchg
or
mov
inc
mov
push
jp
enter
ds
jnp
pop
sub
mov
mov
xor
into
xor
mov
push
leave
sti
mov
lcall
dec
push
or
testl
lcall
pop
fnstenv
inc
arpl
mov
ja
xchg
arpl
jl
lds
jl
ret
sbb
jmp
mov
iret
cld
cli
xor
dec
fcoms
or
dec
test
sbb
in
push
bnd
call
js
cwtl
imul
adc
xorb
mov
test
rorl
jg
add
mov
pop
adc
lcall
loopne
push
jg
enter
jne,pt
sti
out
in
shrl
push
rcrl
mov
enter
loope
lret
int
cmp
push
out
js
movsl
repz
cs
scas
sbb
popl
jmp
mov
sarl
imull
mov
rcl
inc
movsl
pop
fwait
and
out
fisttps
test
mov
pop
call
ss
scas
imul
scas
arpl
push
test
cmp
rol
int3
push
mov
xchg
out
inc
sarb
adc
jmp
test
aas
jmp
mov
arpl
xor
outsb
push
ljmp
mov
out
xchg
cmp
pusha
stc
or
fstps
nop
fisttpll
pop
add
movb
std
xchg
mov
adc
out
dec
mov
pop
inc
mov
stc
pop
dec
push
arpl
xchg
mov
stos
movl
dec
movsl
xchg
addr16
dec
imul
dec
cld
xchg
lock
pop
jge
push
pop
xchg
xor
cmp
in
jb
pop
push
out
mov
inc
out
sbb
or
mov
call
push
dec
lret
or
sbb
mov
dec
and
xchg
jp
pop
dec
mov
add
shlb
int3
clc
inc
bound
mov
lock
cmp
mov
rcrb
add
adc
jo
sbb
sbb
call
gs
int
ret
test
stos
cmp
loope
push
daa
pop
add
mov
push
mov
movsb
xor
or
je
lret
adc
jns
test
fisttps
cli
pop
mov
cmp
cwtl
lcall
leave
jb
in
push
in
data16
cmp
sub
ds
aad
inc
lea
in
stos
invd
loope
test
cld
jecxz
nop
mov
sbbl
ss
cmc
dec
pop
loope
dec
movsl
and
push
scas
or
jbe
movsl
dec
sub
mov
cmp
sbb
fwait
push
dec
mov
test
in
aad
mov
cmpsl
imul
add
xor
pop
xchg
loope
sub
jmp
mov
imulb
xchg
xlat
lahf
mov
pop
ljmp
pop
lgs
jmp
push
mov
loop
out
xchg
nop
or
fwait
mov
in
inc
push
cltd
lcall
loopne
xchg
adc
jp
mov
adc
and
adc
push
les
push
daa
add
and
outsl
rolb
dec
adc
xchg
int
mov
lds
fdivp
fiadds
jo
and
cwtl
fisubs
imul
mov
adc
dec
mov
cmp
mov
mov
sbb
mov
jmp
xchg
dec
stc
stos
fidivs
addb
daa
or
loopne
sub
fbstp
insl
cmc
adc
lahf
jle
xlat
pop
xchg
xor
mov
int
out
cli
mov
rorl
in
push
push
imul
test
in
push
std
jno
pop
arpl
add
cmp
ljmp
ds
adcl
js
pop
sub
decb
add
sub
ljmp
outsl
sbb
ss
dec
arpl
fcmovb
jns
outsb
loopne
lds
inc
push
sbb
jge
cmp
mov
repz
loopne
pop
and
push
mov
sbb
fldcw
pusha
and
mov
jge
mov
push
dec
xlat
test
adc
decl
sahf
and
sar
dec
pusha
bound
pop
enter
mov
and
or
sbb
shll
add
and
fcoml
mov
ss
mov
and
jae
and
mov
addb
les
into
sahf
cmpsl
jecxz
adc
and
cmp
icebp
jns
xchg
xor
adc
push
out
mov
mov
push
dec
adc
rcrb
adc
nop
pop
sbb
cmp
mov
push
cmc
test
hlt
inc
and
or
pushf
xor
pop
pop
ret
ss
push
outsb
xor
cmpsl
fs
jb
cmpsb
test
mov
xchg
xchg
cmp
mull
scas
inc
into
cmp
xchg
enter
icebp
xchg
mov
lcall
mov
sub
repz
pop
mov
adc
push
jnp
loop
imul
xchg
push
xchg
pop
add
push
pop
fcmovnu
dec
pop
or
adc
add
mov
mov
sti
cmpsb
pop
jae
call
into
mov
lods
lcall
daa
jg
out
add
cli
inc
nop
jg
push
fsubs
jmp
mov
adc
jge
push
or
jb
mov
adc
mov
lret
outsb
jmp
je
mov
xchg
cli
and
xchg
mov
in
sbb
mov
xchg
mov
sbb
jle
popf
jno
into
add
lods
cmp
fsts
repnz
mov
mov
push
and
push
in
jne
push
and
lret
xlat
or
pusha
cmp
idivb
lods
sbb
jbe
ljmp
pusha
xchg
adc
xor
lahf
mov
push
sbb
jne
cmp
pop
int3
pop
jo
mov
xchg
inc
inc
cmpsb
cmp
pop
mov
adc
add
out
sub
add
and
scas
repnz
repnz
aas
fld
ret
bound
push
inc
jns
cmp
adc
jp
sub
js
lods
mov
or
stos
inc
mov
dec
jp
add
outsb
mov
cltd
mov
or
inc
push
add
push
sbb
stos
fstl
add
push
push
pusha
es
push
push
xchg
xor
pop
mov
cmp
mov
push
pop
push
shlb
sub
xorl
or
dec
in
stos
cli
xchg
jae
lahf
pusha
sub
das
push
push
sub
cmc
xor
out
xlat
xor
gs
push
push
jmp
imul
or
js
in
push
xor
push
mov
push
mov
bound
in
and
sar
outsb
cld
mov
xchg
pop
je
xor
int
out
add
add
test
fnsave
pop
pusha
sub
push
stos
enter
mov
cmpb
fld
imul
andnps
rcl
mov
shrb
push
out
dec
mov
fistl
les
icebp
lret
es
mov
sti
mov
loop
push
pop
inc
imulb
dec
fimull
push
shrb
push
ds
xorl
pop
je
cwtl
pop
es
xchg
sub
fdivrs
mov
addr16
repnz
ds
pop
mov
push
xchg
mov
nop
movb
mov
and
lret
rcrl
mov
in
cmpsl
into
push
mov
sbb
sbb
lcall
cmp
sub
addr16
stos
add
inc
dec
addr16
lret
cmp
xor
xchg
js
pop
cs
mov
sbb
or
push
les
push
dec
mov
mov
xor
or
pop
inc
loopne
push
xchg
add
inc
clc
push
jbe
jecxz
loop
and
cmpsl
lods
sub
test
rorl
jg
mov
leave
inc
inc
fldt
mov
jmp
ja
stc
fs
pop
jge
or
les
sbb
ss
push
cld
and
mov
clc
xor
jecxz
out
in
pop
push
loopne
js
xor
das
inc
jg
mov
cmpsl
es
cli
inc
sti
pop
jno
and
jae
adc
add
jp
mov
add
roll
dec
pop
push
rorl
ljmp
lods
mov
push
mov
scas
jns
pop
sbb
mov
mov
add
pop
bound
or
fucomp
mov
insl
sub
dec
sbb
pop
mov
test
mov
mov
or
or
push
add
sbb
pop
icebp
jl
insl
popa
scas
push
loop
cld
pop
inc
loope
shr
or
testl
push
test
inc
mov
push
adc
js
push
mov
add
sbb
pop
or
add
cmovp
sub
cmp
fstps
addl
xor
sub
shll
push
sbb
stc
les
sub
xor
jo
or
in
adc
repz
cmp
lret
popa
mov
sub
shll
push
mov
mov
ja
scas
xchg
cli
push
or
jne
cmc
cmp
jp
dec
fnstenv
inc
lods
mov
out
add
mov
dec
pop
add
into
inc
dec
and
dec
fwait
adc
xor
xchg
jecxz
pop
mov
imul
dec
adc
popf
or
mov
mov
push
fimuls
mul
mov
popa
scas
rcll
test
inc
or
cld
lahf
je
es
ljmp
and
clc
lahf
lods
aaa
out
xorl
jmp
cmp
adc
sub
sbb
es
dec
repz
popf
das
cmpsl
mov
daa
sub
push
xor
ret
xor
dec
sti
outsb
mov
les
leave
xor
xor
ljmp
pushf
jns
fs
add
shrl
jnp
out
sti
cmp
mov
xchg
sbb
xor
or
push
jle
cld
cmp
aam
into
mov
pop
rorl
in
pop
xor
mov
jge
cmp
arpl
push
inc
ss
push
add
or
push
push
and
mov
adc
data16
xchg
repnz
pushf
popf
fmuls
daa
mov
jge
mov
cmc
orb
mov
push
xchg
sbb
pop
fildll
bnd
shll
outsb
ss
shll
aad
nop
dec
mov
cmpsl
lods
loop
fstpt
jo
sbb
push
mov
or
add
daa
push
pusha
mov
pop
cmp
lcall
xchg
loopne
addl
xchg
clc
xor
enter
outsb
out
adc
xlat
movsl
cltd
pop
sahf
push
xlat
out
or
arpl
addr16
sub
mov
sarb
js
xchg
cmpsl
cs
inc
lret
int3
and
cmp
lret
add
cmp
fdivrl
aaa
and
mov
dec
ret
xchg
jmp
int3
stos
inc
mov
jl
cwtl
insl
cmc
push
ret
nop
pop
push
inc
mov
int
imulb
loop
xchg
imul
xorl
mov
mov
mov
cltd
sar
enter
xchg
push
aam
or
aad
or
xor
repz
mov
lods
add
lock
lods
xchg
pushf
xlat
jp
sub
xchg
jle
mov
jne
aam
stos
push
sarb
out
xchg
adc
mov
jp
sbb
dec
lcall
ret
mov
push
bound
and
jmp
pop
sbb
push
loopne
add
test
pop
fwait
js
out
mov
jge
cmp
sbb
mov
bnd
pop
add
cmp
or
cmp
cmp
sti
mov
jecxz
popa
test
push
pushf
sti
orl
into
ret
add
pushf
xor
cmp
popa
pusha
inc
jbe
dec
adc
push
mov
ret
mov
icebp
sub
mov
xchg
push
in
sbb
sub
mov
hlt
dec
xlat
repz
push
jno
mov
xor
je
pop
push
bound
push
fs
push
sar
in
sbb
or
cli
and
stos
cltd
or
pop
movsb
mov
dec
jl
or
push
push
jns
xchg
ret
mov
and
mov
and
aaa
iret
call
testb
clc
dec
mov
dec
outsb
icebp
xor
or
lods
scas
or
xchg
insb
push
shrb
adc
jl
clc
push
xor
aaa
lods
cmp
xchg
int
pop
jb
jl
adc
or
in
jle
sbb
idivb
ret
stos
push
jmp
lea
test
or
mov
fcmovne
fs
cmpsl
daa
mov
mov
lock
pushf
inc
roll
xlat
test
loop
cmc
in
movsl
or
jge
jnp
or
hlt
aas
mov
xor
sbb
push
sti
je
xor
leave
or
add
decl
mov
dec
xlat
cmp
ss
adc
cmpb
jge
jmp
fadd
jnp
sub
add
adc
and
les
icebp
mov
jns
mov
movhps
xchg
out
or
jo
mov
stos
cltd
outsl
and
lock
cmp
mov
cmp
push
shr
lds
xchg
or
pusha
jb
in
adc
repz
cs
lock
mov
movsl
mov
mov
aad
aaa
cli
imul
loopne
xor
cmp
jmp
add
adcl
ret
mov
jge
test
adc
outsl
test
inc
pop
lret
gs
push
popa
imul
bound
lret
fstpl
lea
cmc
push
fsubs
cs
nop
arpl
jne
sti
or
out
daa
or
test
push
pop
or
pop
test
pop
sbb
insl
idivl
dec
movw
or
mov
cwtl
pop
repnz
cmp
lcall
mov
orb
out
cmp
mov
xor
mov
mov
jne
rcl
in
pusha
inc
add
das
sbb
cmp
dec
mov
adc
pushf
inc
and
ret
filds
es
xor
jmp
jmp
push
xchg
cmp
jp
aad
loop
adc
xor
jl
addr16
ret
pop
sarl
xchg
repz
add
test
mov
mov
cmp
inc
andl
scas
cmpsb
add
sbb
jmp
jbe
cmp
inc
dec
cmc
or
test
mov
ja
aas
jnp
mov
movsl
ds
idiv
sub
lcall
xchg
imul
dec
push
aas
popa
dec
sbb
and
ret
mov
xchg
pop
jb
iret
mov
dec
rcrb
xor
push
sbbl
sub
mov
or
jbe
into
xchg
movsl
adc
xor
ljmp
or
sbbb
or
addb
nop
insl
sbb
mov
popf
jle
outsl
in
push
ds
test
xor
pushf
push
jle
push
mov
cli
pop
jo
std
clc
hlt
mov
fisttps
jmp
outsb
out
leave
je
cmp
hlt
testb
aad
pop
lret
cmp
sar
mov
pop
je
stc
in
lods
xchg
imul
adc
sarb
push
cmpsb
xor
xchg
bound
nop
cmp
scas
xor
sub
dec
mulb
xchg
mov
xor
add
dec
or
mov
xor
repnz
mov
lods
sbb
ss
jne
punpckldq
mov
mov
rolb
pop
pop
cmc
mov
mov
addr16
subl
mov
sub
scas
popa
rcrb
cmp
lcall
arpl
lds
stc
dec
dec
test
mov
sub
dec
inc
lods
icebp
addr16
popf
addr16
arpl
xchg
dec
fsubrs
loope
fnstcw
and
mov
push
aad
pushf
xchg
inc
cli
imul
popf
sbbl
insb
lahf
clc
rorl
push
push
punpcklbw
out
lret
adc
testl
imul
sar
dec
fsubs
ficoms
xor
in
je
pop
fwait
mov
inc
jns
shlb
or
js
inc
sbbl
push
pop
pop
popf
lods
call
add
and
push
mov
sub
jns
sub
popf
nop
mov
xchg
sbb
push
shll
or
out
jge
cmp
xchg
in
inc
fcompl
pop
and
lea
fildl
mov
mov
pop
sub
in
and
jnp
add
mov
xor
ljmp
xor
pop
push
pop
icebp
xor
xor
inc
lock
ja
push
in
and
mov
pop
or
mov
mov
jge
dec
std
jg
or
stc
sub
push
iret
push
pop
shlb
adc
shlb
cmc
aas
cmpsb
lods
xchg
mov
sbb
inc
jle
out
fistl
lds
cmp
mov
in
stos
xor
ret
int3
or
into
mov
mov
out
adc
add
inc
mov
scas
clc
imul
test
mov
pushf
jno
push
imul
push
or
jg
inc
ret
ljmp
fadds
cwtl
aas
inc
int3
dec
pop
adc
insl
inc
xchg
xor
sar
push
ja
iret
inc
jne
sub
pop
inc
sbb
push
ljmp
scas
hlt
push
lahf
add
rcl
cmp
sub
iret
sbb
ja
in
aaa
lods
adc
sub
push
cli
or
fmull
jmp
lret
repnz
jb
bound
sbb
adc
lds
pop
mov
rorl
pusha
pop
repz
mov
push
adc
add
and
cmc
mov
clc
clc
mov
push
mov
add
movsl
or
add
je
out
rcr
cmp
adc
sahf
popf
mov
stos
push
movsl
or
fsubs
and
sbb
pop
jmp
pop
lret
inc
es
push
testb
and
je
push
adc
jne
sub
mov
fcmovu
iret
mov
push
mov
push
mov
loop
xchg
mov
out
dec
lahf
insb
xor
cmp
dec
fcmovnbe
orl
imul
lods
mov
adc
sbb
and
xchg
or
mov
fisubrs
dec
mov
fistps
testb
push
sub
adc
pop
sub
es
movsb
jns
in
stc
in
cmp
enter
pushf
cmpb
and
mov
jg
test
mov
fadds
jae
repnz
mov
lahf
mov
mov
xor
xchg
stos
repz
and
in
or
mov
sbb
adc
inc
std
jp
pop
sbb
jmp
or
push
insl
mov
xor
fsts
hlt
fstpt
sub
jmp
xchg
aad
xchg
xchg
cmpsb
mov
add
imul
dec
popa
jne
enter
lods
cmp
popf
dec
inc
sbb
je
xlat
mov
inc
sbb
cmc
enter
out
sbb
xor
negl
cmp
in
add
out
frstor
aas
imul
js
xchg
ficomps
iret
aaa
mov
and
out
decl
data16
xchg
clc
movsl
dec
push
jo
pop
add
mov
inc
pusha
mov
mov
xlat
push
xor
push
aas
enter
mov
sar
mov
stos
and
mov
xchg
enter
or
loopne
and
dec
fstl
sbb
pop
jl
out
nop
bswap
imul
mov
out
pop
xchg
lahf
sgdtl
out
xchg
repnz
sbb
mov
add
jmp
aaa
pop
mov
jnp
sarl
pop
adc
xchg
bnd
fs
xchg
and
subl
sub
ds
xchg
ljmp
je
add
sbb
nop
or
ja
adc
jno
aaa
push
push
sub
inc
sbb
mov
repz
loopne
sarb
pop
nop
rcll
clc
and
add
out
inc
rolb
dec
fcompl
sbb
scas
mov
arpl
lock
adc
pop
jge
test
mov
repz
jb
mov
mov
sub
insb
ret
int
out
push
in
sub
arpl
leave
jl
insl
popf
pop
or
mov
mov
cmp
fcom
mov
inc
mov
aas
dec
jns
inc
pop
data16
aas
es
stos
or
and
repnz
push
aas
sbb
mov
mov
sbb
xor
lds
mov
cmp
in
pop
enter
xor
arpl
inc
sti
mov
mov
insb
or
xchg
sarl
lahf
push
nop
adc
aam
cli
shl
push
xchg
push
mov
insb
or
mov
xor
cmp
aam
outsb
inc
pop
mov
or
mov
divl
xor
pop
filds
fcoml
out
pop
pop
dec
dec
sarb
cltd
or
push
fadds
mov
xor
dec
cwtl
bound
scas
add
pop
jmp
fists
push
mov
movsl
sbbb
aas
mov
inc
shrb
pop
mov
mov
ret
inc
dec
dec
mov
arpl
sub
dec
out
sti
sub
cmp
pop
cmp
push
push
xor
cmp
push
cmc
shl
sbb
lret
setno
and
mov
hlt
cld
push
add
rorl
xchg
mov
jae
aad
in
in
inc
and
xchg
pop
lods
sub
dec
mov
jl
popf
sub
jle
sbb
mov
fmuls
mov
in
and
addr16
daa
pop
push
xor
xchg
bound
pop
xchg
loopne
cmp
jl
adc
shl
xchg
aas
mov
sub
cwtl
jns
test
mov
int3
lods
loop
pop
mov
jbe
js
dec
add
mov
inc
je
xchg
inc
mov
mov
inc
push
sub
popf
lock
arpl
push
pop
ds
sub
sbb
and
xchg
mulb
enter
add
pop
ret
stos
call
lcall
add
mov
add
cmc
fstpt
or
shll
fcmovu
sub
mov
test
hlt
addb
mov
sbb
inc
dec
cmc
inc
lret
mov
push
subb
inc
mov
xor
mov
and
mov
gs
in
aaa
fistpl
jne
pop
adc
jmp
test
sahf
pop
iret
jbe
mov
lock
fldl
andl
inc
sub
scas
hlt
jo
add
fidivl
pushf
fcomps
popf
hlt
loope
std
cwtl
int3
pop
sbbb
push
inc
jmp
cwtl
mov
loop
pop
addr16
ds
xor
sub
pop
lahf
js
imul
add
jno
out
dec
dec
data16
lret
mov
xchg
js
cs
lahf
jns
cmc
pop
int
sbb
icebp
fisubl
sbb
pop
rorl
aam
dec
adc
inc
das
ret
in
mov
std
adcb
in
mov
mov
mov
dec
repz
adc
pop
sub
loop
or
and
and
pop
xor
push
ret
pushl
or
rorl
int3
mov
adc
mov
pop
sbb
adc
pop
insb
xchg
lret
sahf
or
add
xor
sub
sbb
js
lret
nop
sub
or
xchg
pop
dec
test
push
sub
enter
sub
mov
dec
adc
insb
or
dec
and
outsb
mov
ret
shll
add
lret
movsl
mov
mov
stos
xor
test
mov
mov
dec
xchg
in
fwait
ljmp
in
xchg
add
aam
dec
fs
mov
imul
push
data16
das
jno
es
int3
lcall
addr16
lds
xchg
push
cmpsl
neg
cmp
sub
push
jne
fisttps
jns
faddl
cmp
cmp
repz
inc
fstpl
out
or
dec
out
adc
adcl
xchg
xor
adc
add
sar
sbb
sub
dec
leave
mov
sbb
add
sub
cmp
aas
cmc
push
push
push
or
fdivrs
cmpsb
inc
adc
sub
dec
jo
dec
and
and
add
mov
movsb
addb
mov
aad
pop
mov
and
cmp
movsl
cmp
popf
addr16
in
out
jg
clc
loopne
xor
movsb
jne
add
inc
stos
xchg
mov
call
sub
pushf
add
out
out
mov
inc
mov
mov
cmpsb
mov
push
xor
mov
imul
cs
repz
icebp
out
add
mov
sbb
push
pushf
data16
inc
cmc
jb
mov
fwait
push
shlb
add
rolb
dec
shll
mov
xchg
out
pop
cmp
shl
dec
not
cwtl
in
sub
jl
adc
xor
jge
xchg
or
into
jle
in
pop
fmuls
gs
out
adc
xchg
jae
jmp
fiaddl
lea
icebp
inc
insb
add
cmpsl
dec
or
outsb
sub
push
das
test
lahf
lret
sub
sarb
test
and
pop
in
in
out
popl
sbb
stc
push
out
adc
jnp
rorl
mov
xor
sarl
sbb
iret
rcrl
out
jne
repnz
bound
inc
bound
insl
cmc
loopne
data16
in
jl
pop
sub
data16
vmovaps
lea
mov
fidivs
or
jecxz
dec
or
lcall
xchg
adc
out
loope
inc
adc
add
mov
in
pop
mov
mov
cmp
inc
cs
mov
jecxz
fidivrl
xchg
jecxz
insb
sbb
fimull
pop
xchg
push
nop
or
out
aam
out
push
es
or
fiaddl
test
sbb
pop
xchg
js
jns
pop
jae
push
inc
pop
mov
roll
pop
dec
dec
cs
xchg
data16
or
inc
ds
sub
pop
mov
movsl
sub
fiaddl
jmp
pop
dec
jg
test
mov
pop
lret
jae
or
out
lock
or
out
data16
cmpb
pop
mov
andb
lahf
inc
mov
dec
aas
ret
adc
sti
lret
pop
inc
mov
lret
xchg
in
repnz
and
cmpsl
testl
push
and
lods
or
add
add
lock
mov
jg
cmp
pop
cmpsl
arpl
nop
cwtl
cmp
sbb
xchg
add
mov
orl
add
cs
sub
pop
mov
into
or
aam
xchg
adc
pop
rcl
push
add
cmp
repz
arpl
test
dec
xor
ret
mov
add
mov
adc
stc
test
cmp
sub
jne
mov
je
popa
or
xchg
sub
inc
fstpt
dec
sub
testb
inc
pop
jno
int
dec
sub
inc
sbb
in
xchg
repnz
dec
clc
sbb
push
mov
lods
xor
add
das
movsl
lods
cmc
push
ret
fsubrl
in
fnstsw
jmp
pop
out
int
dec
inc
std
add
sub
sbb
xchg
js
xchg
mov
sahf
fs
sbb
test
mov
push
fiadds
pushf
daa
push
shlb
jo
xor
les
and
scas
or
adc
nop
mov
jge,pt
lds
fcom
popf
ljmp
ljmp
dec
fsubs
stc
shrb
xlat
jno
test
sbb
shll
loop
popa
jns
cmpsb
jge
dec
aaa
push
out
sbb
out
aad
rcrb
stos
aam
jns
sar
push
lret
jb
ljmp
mov
jo
data16
movsb
cmp
mov
roll
jmp
sub
orb
sub
push
inc
aam
xchg
popf
test
add
das
jnp
ljmp
mov
cmp
fcompl
xchg
scas
scas
addr16
cmp
dec
clc
jge
stos
dec
imull
push
xchg
cmp
fsubr
fs
xor
sbb
or
mov
dec
push
aas
cwtl
jecxz
lds
mov
test
nop
add
mov
dec
je
lock
xor
and
inc
scas
and
mov
iret
cmp
adc
and
fsubs
mov
push
cmp
mov
je
aad
xchg
push
enter
cmovg
mov
call
mov
negl
out
xlat
insl
dec
jmp
mov
in
lcall
xor
push
js
inc
xor
cmc
add
pop
cli
jnp
mov
rcll
lret
fnsave
cwtl
gs
incl
inc
loop
movsl
add
outsb
fldt
sbb
in
pop
popf
sub
cmpsl
pop
dec
xor
sbb
xchg
mov
xchg
pop
lock
bnd
punpckhbw
int3
xchg
cltd
mov
shl
test
in
inc
adc
dec
cmp
mov
roll
pop
xor
imul
push
and
lcall
cwtl
in
mov
xchg
pushf
rolb
sbb
popf
scas
sbb
fs
dec
push
fildll
aas
cmp
xchg
dec
cmp
in
test
imul
pop
mov
pop
push
inc
xor
jp
mov
mov
mov
pushf
sub
mov
bound
dec
in
ljmp
jle
mov
and
loope
mov
mov
movsb
add
and
out
call
lret
fcoml
aad
aas
lea
mov
insb
add
and
add
sub
pusha
movsl
cltd
mov
inc
fadds
xor
roll
lret
push
mov
popf
adc
cmp
pop
pop
call
in
lock
repnz
je
pop
sahf
shr
shlb
icebp
jae
jecxz
and
movsb
xchg
jbe
or
lods
cmp
mov
repnz
scas
sub
lods
repz
xchg
jo
mov
jbe
inc
xchg
mov
neg
sub
or
inc
aas
iret
push
jo
and
imul
data16
lahf
adc
test
push
mov
sti
xchg
sub
sub
into
or
add
ds
adc
test
testl
adc
add
adc
andl
jecxz
or
in
jns
shlb
cmp
lea
xchg
or
out
ja
and
dec
test
insl
imul
xchg
fisubrl
mov
push
ss
jl
in
xor
je
cltd
out
dec
int
inc
repnz
fwait
xchg
jns
push
outsb
mov
sbbb
push
dec
and
mov
or
xchg
jle
in
mov
dec
arpl
test
enter
cmpsb
xor
outsb
leave
sahf
xchg
adc
mov
roll
enter
nop
imull
test
inc
int
xor
sub
repnz
adc
lds
mov
and
scas
or
xor
bound
or
adc
jg
xor
mov
mov
cmpsb
sbbl
out
xlat
or
jl
clc
mov
push
mov
mov
lea
inc
andb
stos
iret
int
fs
insl
xchg
rcll
loop
push
lods
push
xchg
adc
bound
jge
xchg
js
xchg
adc
fdivrs
repz
popl
dec
jg
sbb
das
jl
jb
adc
lods
mov
xor
rclb
shll
mov
lea
jmp
push
fistpl
mov
test
dec
or
cmp
mov
aas
les
mov
dec
mov
adc
xchg
push
xchg
imul
fwait
testb
int
mov
cwtl
adc
sti
repnz
xchg
fincstp
int
cli
mov
cwtl
sahf
aaa
cmpsl
ss
mov
jbe
cmp
cld
aas
es
cltd
cmpsl
push
add
mov
ret
jp
add
outsl
add
test
fstps
cmpsl
mov
cmp
hlt
lea
sbb
mov
ja
mul
mov
jbe
mov
push
pop
ss
les
wrmsr
dec
lock
push
sarl
sbb
pand
xchg
ds
sub
push
and
push
outsb
les
scas
or
xor
mov
dec
jo
daa
mov
cmp
aas
add
imul
inc
pushf
push
lret
xor
mov
jns
mov
nop
mov
push
mov
push
std
sahf
in
xchg
pop
mov
clc
iret
push
xchg
cli
lret
test
mov
popa
dec
cmp
fcom
lret
daa
test
xchg
mov
pushf
mov
in
dec
xlat
mov
dec
out
dec
push
ljmp
dec
pop
fisttps
outsl
xchg
mov
dec
popf
stos
sbb
sahf
fs
movsb
loop
cmpsb
out
push
jbe
inc
psubw
cmp
dec
outsb
jle
mov
mov
add
fwait
bound
repz
divb
add
fsubs
inc
fildl
leave
int
push
ficoms
dec
jge
lea
js
mov
das
fidivl
push
sbb
les
push
je
stos
flds
outsl
roll
push
cwtl
sub
test
xor
push
mov
dec
lods
xchg
xchg
xchg
jge
or
inc
testl
push
mov
mov
or
lock
jge
mov
inc
lock
addr16
cmp
add
mov
lods
push
inc
bound
sub
mov
dec
ficomps
gs
test
add
ret
pop
dec
pop
lcall
or
push
pop
fstl
jb
sub
loope
divl
or
jl
inc
ja
lahf
inc
test
mov
idivb
addb
mov
mov
jle
insl
cs
mov
lret
sti
sbb
movsl
scas
xchg
and
jg
or
jo
mov
in
pop
test
out
xchg
sahf
insb
stc
bound
mov
repnz
xchg
lds
dec
dec
ret
scas
pop
push
mov
adc
lods
and
cmp
xchg
sbb
add
lcall
fbld
mov
mov
dec
pop
cmpsb
cmp
pop
inc
aaa
fcmovnb
je
dec
mov
repnz
les
sbb
dec
shrl
enter
push
rcrl
loopne
jne
push
add
pop
imul
stos
dec
pusha
outsl
xchg
inc
mov
or
lods
sub
mov
pop
xor
bound
mov
pop
lret
pop
addr16
cltd
or
sub
sub
pushf
jmp
or
cld
push
cwtl
insl
cmpsl
jg
test
lret
xor
cld
movq
int
inc
rcrb
int
jne
outsb
push
jns
and
mov
test
mov
sbb
inc
cmp
bnd
out
inc
in
call
mov
stos
or
icebp
pop
popf
jl
xor
int
call
cltd
insb
xchg
mov
mov
nop
pop
mov
push
pop
or
subl
push
movsb
lcall
push
lea
xchg
test
push
mov
cmpl
and
mov
pop
jmp
push
cli
lds
aam
mov
mov
andl
push
mov
cli
data16
popa
pop
inc
push
aas
pop
jno
popf
inc
popl
enter
dec
or
xchg
out
and
outsl
mov
ficomps
dec
lcall
pop
pop
mov
pop
xor
outsl
xor
ljmp
mov
ss
adc
bnd
add
mov
inc
pop
aas
fbstp
jne
shlb
mov
fcmovb
sbb
nop
call
mov
jge
in
xchg
lock
js
mov
pop
dec
or
and
cs
cmp
fisubrs
push
push
andb
cmp
push
pop
mov
sbb
repnz
out
mov
lods
lods
es
xchg
mov
fiadds
xchg
lcall
lods
and
mov
call
lods
sti
stos
shlb
cmpsb
pop
filds
test
mov
icebp
push
xchg
mov
push
xor
inc
push
test
xor
dec
push
dec
sub
mov
add
push
scas
outsb
insb
sub
push
aam
icebp
call
adc
popa
fwait
stos
sbb
mov
xchg
adc
xchg
push
movsl
movsb
into
fidivs
mov
xor
test
stos
dec
nop
xchg
sbb
sub
rcrb
push
or
jle
pop
pop
xor
sar
ficoml
and
cs
xchg
mov
xor
pop
imul
mov
lds
and
sub
stc
bound
pop
movsl
les
jns
jl,pt
or
hlt
stc
cwtl
and
pop
push
mov
cmpsl
ret
sbb
mov
dec
and
int3
jge
xchg
xchg
js
sbb
adcb
sbb
jnp
ret
mov
sar
push
inc
lods
push
jbe
ret
sbb
lcall
push
jp
call
icebp
sub
jmp
add
std
mov
mov
lahf
pop
mov
movsl
xchg
push
mov
push
push
sbb
push
jle
pop
fistpll
push
sbb
xlat
or
pop
cld
cmpsl
pop
mov
mov
sub
adc
sub
sub
lock
xor
stos
inc
and
cmpsb
in
std
inc
cmp
pop
xchg
jle
lret
loop
out
enter
add
adc
mov
stc
sti
lcall
leave
mov
push
ds
xor
mov
data16
mov
cmp
and
mov
adc
jmp
cmp
stc
lods
jg
sbb
jne
decb
and
fists
mov
mov
faddl
cmp
dec
dec
xchg
enter
mov
fs
push
sbb
and
test
ficomps
sub
and
xchg
sbb
pop
jno
dec
xchg
jmp
adc
bound
adc
scas
xchg
ljmp
push
iret
sahf
sub
in
fstl
pop
push
sub
sbb
sub
xchg
xlat
mov
jg
cs
and
incb
popa
int
in
ljmp
mov
inc
dec
movsl
pop
push
xchg
shrb
cmp
and
loopne
pusha
test
mov
bndstx
pop
sbb
in
pop
arpl
sbbl
imul
lods
out
fnsave
imul
or
and
outsl
in
mov
push
xchg
iret
mov
fldcw
xchg
pop
mov
test
cld
sti
mov
adc
fs
or
and
test
mov
mov
jns
add
inc
cmp
pushl
jo
loopne
pop
insb
test
add
in
scas
lods
in
xchg
mov
cltd
sbb
das
lret
test
out
jl
in
inc
scas
addr16
decb
adc
inc
xchg
repnz
cs
inc
pop
mov
push
mov
in
mov
mov
test
outsl
lret
push
cmc
push
nop
cli
imul
pop
mov
add
push
pop
std
stos
movsl
aas
bound
mov
inc
mov
fidivl
aad
or
fdecstp
mov
push
add
ja
fsubr
or
lcall
pop
ss
negb
std
xchg
ljmp
loopne
enter
ret
jns
mov
popl
sbb
test
das
imul
int3
add
jecxz
jle
pop
cmpsb
dec
cwtl
in
movsb
sbb
and
cld
popa
xchg
mov
xchg
cmpsb
stos
jge
lcall
inc
leave
dec
das
ja
pop
out
mov
imul
loop
lret
sbb
lods
mov
aad
aad
pop
lret
xor
xchg
rolb
inc
cwtl
and
mov
mov
fadd
repz
sub
cmp
das
add
mov
ds
and
icebp
xchg
mov
loopne
popa
jo
sub
mov
je
int3
in
push
es
pop
test
mov
mov
xor
fisubs
xchg
in
sub
rcrb
movl
xor
scas
mov
icebp
insl
inc
imul
mov
nop
les
call
and
pop
add
or
movsb
push
out
scas
roll
cmp
emms
loop
popa
int3
int3
cmp
xchg
inc
cmpsl
add
outsb
cs
loopne
adc
fmul
pushf
in
jecxz
ret
xchg
bound
in
cmp
sub
push
and
repnz
shll
shl
sahf
jmp
repnz
fwait
loope
and
stos
in
fildll
or
addb
icebp
out
cmpsl
push
xor
add
repnz
cmp
cmp
ficomps
add
cmp
xor
pop
push
imulb
fsubs
push
pop
fs
sbb
pusha
lcall
add
xor
fmuls
test
sub
adc
xchg
mov
push
addr16
jmp
pushf
aad
mov
cli
jmp
xchg
pushf
stos
jae
fisubrl
lds
and
sti
in
mov
ja
loopne
jb
pop
and
fistl
cmpsb
xchg
fwait
cmp
add
cmp
mov
out
push
dec
aaa
int3
pushl
aas
stos
inc
jb
dec
xchg
cltd
mov
push
js
jge
andb
xlat
scas
or
dec
cld
dec
stos
outsb
testl
mov
mov
jbe
int3
push
es
xor
add
dec
ja
push
adc
xor
lods
ljmp
ds
inc
inc
aas
outsl
dec
mov
test
xlat
mov
xor
mov
pop
add
mov
notl
add
shrb
mov
shll
sub
daa
nop
adcl
pop
mov
add
lret
sub
xor
jle
fadds
leave
dec
out
sbb
jbe
xchg
cltd
cmp
pop
loope
pop
dec
mov
fstl
cmp
jge
ficomps
or
sbb
outsb
jns
ljmp
sti
pop
aam
jo
inc
inc
inc
sub
leave
scas
sub
js
test
or
addl
icebp
add
je
loop
sub
jg
jns
jl
lods
inc
inc
mov
cmpl
mov
mov
xchg
in
clc
mov
mov
loop
sbb
int
adc
mov
and
adc
rorl
add
xchg
movsb
inc
xchg
adc
das
outsl
inc
cmp
cld
or
sbb
cmpsb
mov
or
scas
sar
sti
stc
xor
outsl
lock
mov
out
out
out
cmp
push
fidivrl
add
insb
xchg
sub
push
loop
or
or
push
cmpb
pop
sarb
xchg
push
sbb
dec
fidivs
xchg
xchg
mov
mov
dec
es
mov
mov
adc
xchg
jl,pt
inc
lods
leave
sub
jge
xchg
test
mov
push
sub
aaa
test
pop
cld
nop
std
push
and
and
jo
push
fcompl
cmp
rcrb
jae
cmpsb
iret
repz
push
ret
xor
lock
or
pop
pop
and
mov
jb
adc
adc
stos
cmp
sbb
stos
dec
incl
inc
xor
jne
mov
jnp
jle
lcall
sub
xchg
xchg
cmp
jne
pop
scas
mov
insl
or
sbb
mov
stos
push
stos
je
adc
mov
inc
sbb
dec
vpshufd
mov
adc
insb
aam
dec
dec
add
ret
mov
mov
mov
out
pop
leave
and
dec
movsl
hlt
insl
bound
mov
jno
mov
mov
sbb
ljmp
mov
ret
adc
das
bound
int3
mov
lcall
int
add
gs
sbb
cmp
std
push
and
popf
enter
insl
andb
loopne
pop
cmp
jno
scas
test
xor
push
clc
add
addr16
test
aaa
inc
jecxz
stos
push
jb
jle
es
sbb
mov
fadds
hlt
dec
cmp
or
dec
cmpsb
inc
sub
push
arpl
inc
inc
lds
test
enter
sbb
pushf
and
push
pop
adcl
loopne
push
pusha
push
decl
hlt
xor
arpl
lret
cmpsl
pop
add
push
inc
pop
test
jae
xor
adc
aas
pop
aad
jnp
cwtl
dec
xchg
pop
pop
loop
pushl
adc
enter
loope
popa
adc
idivb
pop
and
ret
shlb
jno
pop
sub
lcall
rcr
push
dec
mov
jmp
and
jmp
push
lcall
cmc
insl
inc
test
or
stc
inc
cld
mov
in
inc
sarl
ret
dec
add
dec
adc
outsl
push
icebp
mov
inc
dec
adc
mov
lods
cwtl
shlb
cltd
dec
js
mov
test
data16
sub
aad
adc
popa
testl
xor
sbb
xor
in
xchg
les
pop
cmp
inc
or
push
push
xchg
mov
outsb
test
pop
or
out
mov
sti
push
fs
xlat
shrl
insl
or
jecxz
cld
cwtl
cli
jl
jp
icebp
push
stos
pushf
in
jl
mov
ret
mov
or
push
dec
pop
imul
cltd
mov
rcl
mov
sbb
insb
jl
dec
mov
mov
fdivr
iret
stos
insb
int3
xor
addl
dec
sub
sub
cmp
sub
adc
ret
and
test
pop
lret
repnz
lods
dec
fs
xor
sbbl
mov
adc
fbld
push
test
leave
daa
aam
nop
cwtl
mov
cmp
mov
mov
jmp
add
insl
and
jo
pop
dec
test
lods
xchg
pop
xchg
pop
scas
mov
addl
or
int3
popa
inc
pop
push
mov
ret
shll
les
pop
test
dec
push
imul
push
repz
or
out
test
jne
lock
mov
out
cmp
push
dec
outsl
daa
ss
inc
or
xor
stos
add
push
out
pop
dec
adc
cmp
xor
repz
aam
iret
shll
jmp
test
inc
lret
xor
fistps
jae
lods
adc
iret
mov
or
xor
lods
push
icebp
and
test
leave
shrb
add
mov
push
ljmp
cmp
pusha
xor
pop
mov
lds
mov
data16
das
add
sbb
outsb
ja
add
pop
and
ljmp
call
jecxz
jno
sub
enter
xchg
popf
mov
jg
ljmp
arpl
mov
orl
fs
scas
mov
lods
adcl
sbb
popa
or
mov
clc
lret
adc
xchg
sahf
movsl
ja
inc
clc
sti
and
adc
cltd
lock
jbe
ret
add
adc
enter
mov
in
add
leave
in
ret
pop
mov
sub
pop
int
jnp
das
js
mov
lods
arpl
xor
sub
inc
push
mov
icebp
dec
call
movsb
gs
sti
push
cmpsb
movsb
mov
imul
pop
in
xchg
rorb
sbb
push
rcrl
cmp
rcll
inc
sahf
loopne
mov
negl
sti
mov
mov
or
iret
ret
lods
adc
outsl
mov
push
inc
xchg
popa
xor
xchg
outsl
dec
mov
movsb
mov
insb
push
and
xchg
cmp
cmp
push
stc
popa
inc
icebp
sti
pusha
pop
mov
enter
imul
dec
out
les
add
adcl
dec
fsubrs
fst
sub
inc
mov
pop
adc
sub
and
pop
push
xor
int
mov
ret
adc
andb
sbb
fiadds
fs
push
pop
mov
sbb
subl
and
pop
push
loop
sub
mov
cmp
addl
out
sub
sub
inc
lcall
add
mov
negb
mov
outsb
and
rcrb
cmpsl
xlat
push
ficoms
mov
popf
movsb
jl
shll
sub
push
lahf
jbe
aad
xlat
mov
lods
mov
jae
jg
adc
ja
add
lods
dec
pop
cmp
or
pop
pop
sub
xor
les
rcrl
xor
push
add
scas
sarb
leave
popf
dec
dec
push
push
mov
cmpsl
pusha
sbbl
bsf
cmp
add
push
sub
sbb
cli
gs
fcompl
pop
aam
fstps
xchg
xchg
inc
pushf
pushf
mov
data16
xor
rolb
loopne
mov
pop
stos
stos
in
inc
add
into
aas
scas
adc
repnz
xchg
add
sub
rcrl
jge
stc
push
je
cmp
cli
divb
xchg
mov
push
pop
add
clc
pop
add
imul
in
lret
sub
push
jb
push
lret
inc
in
loopne
xor
xchg
sub
xor
je
jge
repz
lock
mov
loope
push
fsubs
jno
rolb
inc
sub
adcb
cs
mov
jecxz
mov
jmp
push
aaa
gs
push
jbe
mov
pop
xor
push
aaa
pop
jbe
mov
das
pop
push
adc
xchg
cmp
push
dec
dec
jge
mov
cmp
cmpsb
fsubp
es
jp
int
aad
ss
lret
xchg
mov
scas
hlt
test
sti
movsl
xchg
aam
pop
aaa
jo
inc
fwait
nop
and
mov
and
movsb
test
jb
aaa
mov
leave
xchg
sbb
jno
pop
sub
xchg
stc
rclb
jns
and
pop
fmuls
imul
xchg
daa
mov
lret
shrb
pop
cmp
xchg
negb
lods
cmp
dec
sbbb
mov
aas
ret
xchg
push
jns
xor
out
pusha
push
es
fnstcw
pop
pusha
or
int3
pop
jno
mov
xchg
jecxz
mov
push
and
dec
in
adc
jl
lret
xchg
xchg
scas
loope
inc
icebp
jp
sub
inc
lock
stc
mov
call
ja
xor
ja
dec
jae
push
test
sbb
scas
jl
dec
or
div
sbb
sbb
add
mov
sub
shl
sti
lahf
inc
daa
jns
movsl
cmc
insb
das
hlt
test
push
gs
aaa
fisubs
lret
push
inc
mov
cmp
std
cmp
mov
cltd
sbb
sbb
xor
push
fstps
adc
inc
jmp
push
inc
add
sub
add
cmpsb
xor
stc
aad
xchg
cli
inc
adc
fimuls
cmp
ret
or
sub
inc
cmp
or
mov
arpl
bound
adc
jns
jg
testl
aaa
xor
mov
sarb
mov
fchs
frstor
les
mov
mov
int3
fldenv
iret
rcl
and
aaa
xor
xor
movsb
das
ret
adc
icebp
gs
mov
fistps
fwait
sbb
loope
std
inc
inc
jge
pop
and
sub
int
xchg
dec
sbb
rorb
fisubrs
fisttpll
pop
jnp
gs
std
jecxz
repnz
xor
cli
sub
dec
es
xchg
or
lods
in
jne
je
int3
sub
fwait
add
ret
gs
and
jg
mov
and
test
cltd
mov
dec
inc
das
mov
xchg
dec
shlb
cmc
push
mov
xchg
inc
out
outsl
hlt
ret
add
rcrb
ret
adcl
fs
je
add
jge
popf
xor
popa
mov
cmp
push
popa
in
bound
xor
ret
int
js
enter
cltd
xchg
sahf
cmpsb
or
repz
push
stos
mov
test
jmp
fstpt
sub
aad
jnp
mov
pop
stc
mov
repz
add
clc
loop
bound
hlt
xor
cmp
add
pop
movsb
in
pop
sub
cmp
jecxz
cs
add
pushf
and
ret
lock
xor
clc
adc
mov
sub
ss
sub
cmp
fiaddl
fldenv
ja
loopne
lcall
mov
cltd
xchg
lret
add
mov
xor
mov
aad
adc
outsb
push
scas
lret
push
fwait
cmpsb
inc
mov
and
adc
or
cmp
ret
dec
pop
mov
fbstp
cmp
xchg
push
jmp
inc
movsb
shrl
or
mov
xlat
mov
jns
jp
scas
test
xor
clc
inc
js
or
stc
test
loope
xor
jmp
testb
jg
lret
mov
and
mov
inc
out
sub
mov
int3
pop
lods
mov
mov
test
mov
mov
jns
push
push
lret
std
push
xorb
repz
fldt
adc
add
mov
or
xchg
or
or
stos
fwait
lods
add
ret
xchg
cmp
lcall
testl
daa
and
mov
stos
mov
jne
fxch
imul
jb
testb
data16
lret
sbb
mov
jmp
sub
adc
ds
add
jg
jo
and
dec
nop
test
les
push
rorb
lahf
inc
push
test
rorb
mov
stos
mov
cltd
sbb
dec
lods
mov
push
xor
icebp
mov
push
cmp
cmp
in
mov
xor
jno
mov
adc
test
mov
mov
stos
inc
and
movsb
push
lock
test
fsubrs
insl
jecxz
mov
mov
adc
pop
adc
into
sub
or
imul
xor
mov
daa
sub
and
pusha
jle
sub
jnp
fwait
push
leave
or
cmpsb
jo
addl
in
imul
cli
mov
jp
xchg
adc
and
vpacksswb
bound
inc
cltd
fwait
xor
mov
sbb
jnp
das
cmpsl
or
rcrb
sahf
mov
sbb
inc
lret
rorb
stos
repnz
inc
sbb
outsb
and
lret
outsl
inc
mov
insb
pop
lods
cs
fisubrl
pop
dec
add
rcrl
mov
push
rcr
in
sbb
mov
mov
cli
lahf
fcmovb
pushf
loop
or
aam
cmpsl
or
xchg
adc
adc
addl
sub
incl
loope
jecxz
push
sahf
scas
clc
fstps
push
jl
lods
add
mov
push
stos
xor
xorl
push
in
and
pop
dec
loope
jnp
add
call
add
ljmp
inc
mov
mov
mov
xor
int3
add
in
push
repz
dec
cmp
pop
loope
xchg
add
sub
inc
pop
or
lcall
js
adc
sarw
cmp
cmp
in
jae
testb
jmp
pusha
pushf
dec
sub
fmuls
and
sar
mov
push
imul
push
scas
inc
dec
pop
xchg
xor
cmp
push
ljmp
daa
cld
and
push
ja
stc
test
lea
adc
mov
cmc
add
push
adc
or
inc
out
fwait
push
dec
mov
pop
mov
lods
rorl
xorb
movsl
fbld
aad
jb
mov
push
fwait
fs
xchg
rclb
outsl
int3
mov
testb
dec
iret
pop
lcall
mov
fistl
adc
inc
enter
push
mov
in
mov
popa
or
jmp
cmpsb
xchg
test
adcl
jmp
orl
cld
and
xchg
addr16
push
insb
or
scas
push
test
add
je
sbb
imul
testb
ja
or
pop
jecxz
aam
push
dec
or
or
mov
call
mov
int
push
andl
outsl
xchg
xchg
push
pop
icebp
out
push
ds
push
cmpsb
add
inc
jl
outsb
jecxz
xchg
test
cwtl
pop
jo
shll
add
jns
sub
push
mov
mov
sbb
scas
loop
adc
cld
cmp
pop
mov
cwtl
popl
pop
adc
aas
cmp
fidivrs
out
lea
sub
jb
les
scas
pop
cmp
scas
pop
int3
cld
jle
and
mov
xchg
jg
push
iret
mov
call
lahf
push
fimuls
outsl
mov
or
pushf
sbb
xor
and
or
aaa
xchg
enter
adc
out
mov
sarl
popa
scas
dec
ljmp
test
sbb
fidivl
and
ret
pop
xchg
dec
gs
das
test
fidivrl
lahf
and
lds
xor
repnz
push
lret
enter
outsb
and
or
test
jbe
popa
nop
fwait
dec
jae
mov
ss
dec
popl
gs
adc
ljmp
jle
lret
shll
ljmp
out
cmpsl
shr
sbb
cmp
out
aas
movsb
aam
cmp
punpckhdq
sub
mov
jmp
pop
push
push
xor
movsb
out
cmp
pusha
mov
push
xor
adc
shll
inc
call
mov
inc
jb
imul
idiv
das
cmp
aas
mov
mov
xchg
fimull
iret
adc
and
movsb
lds
arpl
mov
xor
xor
and
sahf
ret
xor
loop
cld
ret
cld
inc
out
das
fnstenv
shrb
lret
stos
or
out
and
inc
sbb
or
insb
mov
cld
push
adc
cmp
outsl
movsl
sbb
jnp
pop
lods
add
mov
js
pop
push
fcoml
rcrl
lds
rorl
mov
pop
into
flds
xor
push
iret
inc
and
pop
bound
pop
stos
les
pop
mov
sub
jno
ljmp
pop
cmpsb
in
sub
xor
xor
nop
cltd
cmp
rcll
jecxz
add
cld
rcrl
outsl
mov
test
xchg
out
sbbb
out
pusha
pop
mov
fsubp
push
xchg
ja
mov
paddw
sbb
xor
xor
pusha
pop
push
pop
movsl
rcr
outsl
inc
mov
push
lods
and
adc
cwtl
aas
mov
sbb
adc
stc
lods
loop
sub
daa
scas
bswap
jmp
jecxz
mov
or
cmpsb
inc
ljmp
xchg
xchg
leave
mov
jae
movl
push
push
ror
ja,pt
imul
addr16
xchg
jmp
fsubrl
in
lret
pop
or
add
test
jp
xchg
xchg
mov
cltd
lods
push
xor
outsl
pop
jp
dec
sti
jno
mov
push
lret
mov
xchg
and
push
push
cld
cld
lcall
pusha
mov
leave
jg
push
arpl
jb
enter
roll
scas
sbb
push
ljmp
cmp
inc
das
sti
mov
ja
fnstenv
jg
jl
cmp
push
push
int3
test
mov
fdiv
shrb
pop
fsubr
mov
adc
lock
popf
insl
in
popf
pop
xchg
xchg
mov
mov
imul
xchg
cmp
or
push
pop
mov
push
xor
stos
dec
push
xor
push
test
negb
xchg
xchg
jle
aas
mov
pushf
cmp
pop
cmpb
repz
add
movsb
aas
mov
into
sub
cmp
in
and
lcall
dec
and
out
adc
scas
mov
icebp
es
scas
ss
cmp
mov
sbb
push
testb
pushf
adc
and
pop
sub
inc
in
or
pop
push
xchg
mov
mov
repz
addr16
push
stos
insl
pop
stc
inc
cmp
fnstenv
add
jo
arpl
xor
or
test
inc
cli
addr16
cmp
jo
xor
pop
fcmove
cmp
jg
push
dec
imulb
and
pop
mov
incl
and
add
mov
sbb
xor
pushf
jecxz
shrl
mov
mov
mov
pushf
scas
jb
xchg
dec
adc
lahf
in
int3
sarl
add
push
adcl
inc
push
rorb
or
mov
lds
mov
jne
rcr
push
sub
rorb
dec
dec
fadds
sbb
out
pop
push
iret
scas
bound
fisubl
stos
push
scas
adc
loop
mov
arpl
imul
xor
adc
ljmp
push
testl
popa
in
push
xchg
ret
loope
mov
lahf
inc
push
pop
push
loopne
cld
dec
jbe
push
cltd
mov
or
scas
jecxz
xchg
mov
lea
add
push
adc
add
xchg
adc
imul
and
inc
data16
mov
cld
adc
xor
mov
lahf
lea
mov
scas
loopne
push
stos
pop
movsb
ja
mov
jge
scas
jae
pop
dec
jg
xchg
iret
clc
cmp
ret
dec
jb
stc
cmp
inc
nop
sub
paddusb
add
pushf
popa
sbb
cmpsl
xchg
loope
in
bound
sub
or
shll
push
sbb
pop
ja
sbb
xchg
sbb
daa
xor
cmp
mov
mov
jge
and
and
inc
push
xchg
or
negl
cs
cltd
addr16
mov
das
rcrl
lahf
mov
jne
je
or
mov
pop
push
mov
sti
es
popf
inc
xor
cmp
ret
shlb
stos
add
or
aad
mov
enter
imul
mov
das
hlt
pop
and
inc
mov
lret
mov
cs
and
mov
enter
notb
or
inc
es
or
dec
lcall
mov
pop
ja
dec
daa
lock
data16
sub
push
rcrl
xchg
xor
pushf
xchg
push
pop
inc
adc
mov
in
scas
mov
xor
cmc
sbb
push
pop
test
mov
int3
lods
xor
xchg
mov
jo
int
push
sbb
bound
das
inc
in
dec
test
rcl
push
shlb
cld
lret
jmp
mov
mov
xor
xchg
ljmp
bound
in
ljmp
push
or
fisubs
cmpsl
jl
pop
xchg
lahf
mov
pop
xor
jecxz
add
push
cmpl
mov
sub
adc
hlt
xor
sbb
jbe
pop
frndint
arpl
fcoml
movsb
shlb
pop
pushf
adc
mov
or
xchg
nop
push
sub
adc
pop
and
xchg
shl
inc
mov
push
inc
fbld
outsl
pop
outsb
jle
clc
sti
ret
aam
inc
scas
adc
cli
outsb
mov
insl
fwait
imul
inc
ss
sub
cld
xchg
shlb
cmpb
add
inc
imul
test
out
leave
mov
xchg
add
xor
loopne
push
add
mov
stc
mov
test
pop
js
mov
in
pushw
push
dec
cmp
push
rorl
pop
adc
fadds
insb
push
jbe
cmc
xchg
jae
and
in
dec
push
pop
inc
cmp
lahf
aaa
out
jge
sti
sub
in
xor
push
mov
test
fdivr
stc
inc
cs
int
mov
or
jb
jne
into
lock
mov
mov
jne
pop
xchg
in
ret
or
jae
mov
mov
cmp
enter
push
mov
dec
enter
shl
or
mov
nop
add
adc
ja
cmp
nop
xor
sbb
fwait
cld
loope
pushf
push
sahf
push
push
fs
into
fwait
gs
cmp
stos
push
out
lret
cli
dec
cltd
sub
cmp
loope
scas
pop
mov
dec
pusha
loopne
and
test
mov
cmpb
adc
push
xor
mov
hlt
cmp
dec
xchg
and
bound
in
push
jae
xor
aas
jecxz
mov
imul
lods
jp
adc
js
ss
scas
dec
adc
loope
xorb
inc
sbbl
jg
sbb
clc
mov
int
int
out
loopne
shlb
cmpsb
out
test
cmc
test
ljmp
jnp
mov
rorl
push
lods
jns
repz
stos
inc
int
and
daa
int
adc
xchg
in
xchg
xchg
sbb
cmp
jo
cs
daa
xor
jge
adc
cld
xchg
jno
cmpsl
pop
int3
inc
mov
cld
cltd
clc
pop
cmpsb
xchg
pop
pop
cwtl
sbb
sub
pop
jge
test
das
test
out
push
lods
xchg
push
insl
pop
push
ret
stos
jp
int
jmp
into
dec
in
sub
push
movsb
fidivrs
bound
jns
mov
iret
mov
sbb
daa
pop
jmp
pop
movsl
and
mov
loop
or
and
pop
mov
hlt
loop
stos
inc
imul
sbb
cld
xchg
push
outsl
outsl
lret
push
outsb
mov
jge
lock
sub
mov
or
shrb
es
les
add
inc
jmp
les
mov
mov
ret
dec
std
cmp
adc
xchg
call
in
sbbl
nop
push
gs
inc
repnz
sub
add
test
sub
js
pushf
jl
dec
adc
rcll
mov
lret
mov
and
fstpt
lret
push
fsubs
mov
fmulp
hlt
jae
mov
fcompl
sbb
and
pop
gs
adc
xchg
push
imul
sub
repnz
adc
test
xor
movsb
shll
lea
lahf
xor
std
lret
pop
es
cld
imul
aad
aas
fnstenv
int3
mov
push
fisubs
mov
adc
mov
shl
and
pushf
add
shll
es
jp
cmp
jg
sbb
jecxz
or
cli
dec
pop
icebp
orl
sbb
sub
jl
push
adc
rolb
outsl
test
ficoml
lock
add
insb
mov
hlt
mov
frstor
rorl
push
and
rolb
xorb
sbb
and
cltd
push
insb
les
out
lods
sub
pop
sbb
outsb
and
jle
gs
scas
push
arpl
int3
dec
repnz
xor
movsl
push
fisttpl
sahf
jne
std
push
lahf
add
pusha
std
adc
jae
and
mov
rclb
pop
shrb
push
outsl
enter
push
push
sbbb
testl
cli
cs
cmp
mov
and
and
add
push
mov
lcall
dec
out
popa
inc
ja
jg
ret
mov
bound
mov
mov
loopne
outsl
test
and
fs
std
mov
mov
fwait
repnz
or
sub
rclb
cmpsl
mov
cmp
pop
iret
dec
inc
loopne
test
loop
inc
jnp
nop
bound
mov
mov
loopne
pop
test
cmp
cmpsl
arpl
cwtl
xor
lea
push
imul
xor
sbb
add
pop
movsl
stos
or
lret
lds
je
inc
sub
aas
dec
xchg
mov
out
adc
dec
mov
xor
popa
xor
mov
xor
lock
push
or
and
push
lcall
jl
add
shrb
add
arpl
dec
adc
add
rcrl
xor
sti
cmp
and
add
xor
mov
push
stc
fwait
push
in
pop
out
mov
out
aam
xor
inc
mov
out
js
push
mov
sub
insb
sub
mull
sub
iret
mov
lods
xor
cmp
out
gs
ds
sbb
lods
mov
rolb
movsl
nop
call
test
test
lods
fildl
and
mov
jne
cs
ret
in
jbe
mov
lcall
mov
push
pop
inc
int
xchg
mov
mov
roll
and
sbb
out
stos
jecxz
pusha
cmpsb
cli
andl
mov
xchg
lret
bnd
push
ljmp
imul
push
cmp
decl
jne
dec
das
push
sub
nop
lret
andb
jno
sbb
addb
dec
xor
out
xor
mov
xor
cmp
aad
stos
in
adc
stos
mov
std
sub
sbbl
cld
test
add
cmp
jle
in
sbb
xchg
jle
xcrypt-cbc
cmpsl
push
shll
and
inc
push
aaa
dec
in
fucomp
insb
xrelease
pop
btc
inc
xchg
push
popf
insl
xor
loopne
shlb
aas
mov
inc
mov
add
scas
xlat
or
push
filds
into
imul
arpl
ret
pop
sbb
icebp
mov
mov
dec
add
ficompl
gs
sbb
icebp
xchg
dec
mov
popa
jg
inc
sbb
pop
jae
cmovbe
sbb
mov
ljmp
popf
test
std
adc
shll
mov
inc
push
aaa
insl
cmpsb
mov
push
fs
jno
enter
mov
mov
push
xchg
lods
sub
in
fadds
rclb
mov
lret
enter
pop
pop
out
mov
pusha
cmc
lods
lods
das
in
or
notl
pop
enter
test
fucom
xlat
rolb
pop
jmp
ret
mov
lods
cmp
mov
adc
jmp
push
mulb
mov
xor
js
mov
outsl
xchg
xor
dec
sbb
xor
popa
notb
adc
repz
adc
inc
xor
push
or
js
xor
addr16
movsb
pop
pop
lods
jb
stos
cs
xor
stos
enter
xchg
xlat
pop
aas
inc
shl
mov
scas
mov
lret
sbb
nop
fistl
adc
push
aad
push
xor
fwait
mov
dec
mov
jle
outsb
ffree
fdivr
fcoml
sarl
and
xor
nop
and
cmpsb
sub
add
mov
clc
or
ret
inc
pop
adc
test
dec
imul
cmpl
test
into
xor
xor
mov
pop
insl
push
xor
repz
mov
inc
stos
adc
mov
xor
cmpsl
cld
andb
pop
setns
mov
pop
inc
push
mov
cmc
call
add
mov
mov
add
fnstsw
sahf
jmp
andl
ret
sbb
pop
jg
adcl
addl
icebp
sbb
sbb
lcall
mov
mov
mov
xchg
jp
lds
pop
loop
bound
repz
mov
pop
mov
mov
popf
fidivl
insl
mov
enter
dec
enter
push
mov
mov
outsb
add
or
push
dec
xlat
cmp
mov
pop
sub
hlt
xchg
mov
add
mov
dec
and
adc
mov
mov
push
xchg
fadds
roll
mull
pusha
cvttps2pi
cli
sbb
xor
cmp
mov
cwtl
xchg
mov
sbb
aaa
fs
sub
adc
testl
in
pop
xchg
pop
into
movsb
push
test
les
fdivrs
jg
lods
or
and
adc
gs
fisttpll
cmpsb
sbb
sub
mov
lret
dec
movsb
sbbl
add
fucom
xchg
fildll
cmpsl
test
lods
xchg
mov
sub
adc
cmpsb
push
fistpll
xor
cmp
rclb
gs
push
xor
mov
fisttpll
xchg
or
pop
in
sub
jbe
xchg
not
cmpsb
push
push
dec
in
mov
sbb
mov
pushf
mov
and
cmpb
into
test
fisubs
fwait
idiv
daa
pop
push
and
idivb
push
cmc
scas
clc
mov
adc
js
aam
xchg
mov
dec
loope
xchg
push
test
lahf
stos
lds
push
ds
test
adc
xchg
mov
and
and
dec
mov
gs
mov
jge
arpl
xor
inc
xor
mov
dec
scas
mov
cmpl
rcr
jne
lods
cmp
ja
push
inc
in
jae
sti
inc
out
pop
pusha
mov
xor
movsb
ret
sub
mov
jne
mov
sbb
xlat
xchg
movsl
push
adc
lds
in
loop
inc
push
lret
test
sub
sbb
mov
jbe
lret
dec
dec
jns
inc
repz
xor
xchg
into
call
mov
stos
sub
adc
fcoml
enter
fwait
scas
gs
fdivrl
sbb
mov
push
push
inc
sub
lock
inc
and
fnstsw
adc
inc
jno
mov
notl
mov
jmp
push
mov
cmp
enter
movl
pushf
jno
nop
sarb
push
insl
lret
cmpsb
mov
enter
test
jno
in
adc
ret
xor
test
movsb
pop
sub
ret
aam
bound
rorl
mov
hlt
aaa
imul
jecxz
rclb
in
mov
daa
mov
cwtl
cwtl
test
aam
cmpsl
aad
inc
pop
sub
mov
dec
aam
sub
lret
cwtl
les
in
fcmovnbe
subb
leave
outsb
xor
pusha
pop
sub
mov
mov
add
cmc
lahf
and
mull
inc
test
pop
mov
loop
in
xlat
xchg
push
add
test
scas
jnp
out
mov
leave
jnp
out
insl
and
lock
add
pushf
dec
out
xor
xor
xchg
xor
cwtl
xchg
push
sbb
xchg
inc
lret
insl
mov
insb
pop
mov
adc
ds
pop
pop
or
jmp
fidivl
xchg
sub
xchg
lods
aaa
xchg
push
dec
iret
ja
jl
inc
mov
sub
lds
sub
ss
nop
lret
lock
pusha
mov
pop
mov
jmp
ret
sub
sbb
mov
enter
stc
mov
cs
aas
das
pop
mov
std
add
xchg
cli
fildll
ret
inc
cmp
push
jno
sub
push
push
xor
pop
clc
clc
int3
xor
cmp
sub
test
rcll
dec
mov
mov
aas
pop
or
aam
mov
data16
pop
aas
daa
pushl
jne
lret
sub
cli
cmp
outsl
cmp
sbb
sbb
lahf
insb
push
mov
push
icebp
into
in
loopne
enter
xor
add
lcall
mov
popf
pop
inc
mov
js
jbe
mov
cmp
mov
hlt
hlt
add
jnp
insb
inc
in
mov
xchg
movsw
testl
adc
jge
sub
lods
or
dec
sbb
pop
push
call
xlat
insl
mov
mov
sbb
cld
outsb
sub
mov
out
fstp
out
lea
pop
sub
mov
pushf
pop
enter
inc
mov
cli
mov
and
cmp
dec
mov
adc
lods
aaa
pop
gs
add
push
cwtl
rcrl
es
sub
mov
leave
and
mov
xchg
scas
jmp
shrb
lods
rolb
mov
jno
sub
pop
cmovbe
cld
or
xchg
jg
jle
into
pop
in
out
jmp
and
mov
jg
ja
jle
pop
push
cmp
or
movsl
mov
pop
insl
fucomi
stos
and
and
xor
push
push
scas
or
xor
mov
aaa
pop
inc
mov
xor
mov
mov
mov
insl
cld
mov
pop
pop
shr
lods
leave
loop
jae
repz
andl
std
rclb
dec
addr16
sub
sbb
jmp
in
adc
mov
rcl
inc
cmpsl
pop
je
icebp
pop
mov
push
mov
es
adc
mov
dec
sahf
jno
fcoms
adc
mov
xor
ret
push
dec
aas
ljmp
add
sbb
in
or
dec
lahf
clc
sbb
inc
mov
pushf
push
sbb
ret
or
js
jo
lcall
sbb
sub
outsb
cmp
mov
ss
cs
and
sub
pusha
mov
xchg
or
xor
stc
popf
ret
inc
stos
test
rorl
lock
ja
or
lcall
shl
add
stc
loopne
add
mov
push
int3
ja
or
fdivrs
mov
adc
pop
sub
mov
out
mov
push
gs
lret
clc
bound
mov
and
sbb
dec
lods
repnz
mov
push
insb
jl
lahf
test
addb
cmp
jmp
rcrl
pop
data16
pop
loope
out
xchg
push
inc
gs
loopne
push
and
mov
jmp
outsb
or
cmp
sub
fistpll
lds
sbb
outsl
sbb
out
add
orl
mov
cwtl
jnp
and
mov
jecxz
repz
pop
lahf
mov
sub
push
aad
cwtl
pop
inc
jg
xchg
add
leave
jae
shrl
out
cli
call
mov
aaa
repnz
cmp
pushf
add
out
or
push
pop
jnp
pop
push
imul
cmpsl
scas
mov
loopne
xchg
push
int3
out
insb
or
pop
lds
jmp
imul
lock
cmp
jmp
fsts
push
xor
leave
out
ljmp
dec
popf
nop
pop
sbb
fdivr
fidivs
pop
cmp
jmp
sbb
sbb
cld
push
mov
fucomi
cltd
dec
lods
lret
lahf
in
jae
fwait
test
inc
jg
fiadds
hlt
ss
loope
and
pusha
cmp
jo
scas
dec
mov
push
lahf
inc
jbe
mov
js
inc
sahf
pop
div
stc
mov
push
push
outsb
sbb
mov
cmp
jl
repnz
sbb
pop
mov
in
cmpb
dec
mov
iret
mov
repnz
or
fs
adc
ljmp
leave
orl
testl
icebp
fwait
lret
cld
mov
pop
cwtl
aad
adc
push
mov
inc
decb
fisttpl
adcl
push
movsl
ret
xchg
mov
pop
cltd
pop
pusha
mov
dec
inc
pop
stc
aam
dec
nop
mov
inc
punpckhdq
mov
out
mov
lods
sub
imul
fiadds
mov
pushf
dec
sub
push
xor
push
cli
xchg
or
je
sub
jne
int3
push
or
mov
push
movb
shl
test
jle
jmp
pop
sbb
cwtl
shlb
stc
hlt
xchg
scas
xchg
push
dec
in
push
mov
movsl
imul
mov
jae
xchg
push
cmp
sub
loopne
adc
mov
mov
in
mov
dec
jecxz
flds
enter
js
and
pushf
inc
jb
cmpsl
adc
loopne
shlb
xlat
jo
stos
fwait
jecxz
push
fs
fwait
les
and
dec
or
aad
adc
push
and
or
inc
push
add
mov
pop
ja
cmp
dec
in
js
xorl
stos
in
js
inc
dec
push
shlb
or
sbb
lret
mov
nop
and
and
orl
cmp
adc
cmp
mov
sbb
sub
add
xor
add
adc
pop
xor
xchg
xlat
mov
sti
pusha
xchg
lock
xor
mov
ret
jbe
jo
mov
mov
push
xor
mov
pop
push
xchg
ss
dec
icebp
imul
inc
mov
gs
cld
nop
xor
js
jmp
jne
jae
mov
adc
mov
fdiv
or
cmpsl
imul
push
jo
mov
outsl
mov
shrl
mov
mov
jb
fs
xchg
xchg
stc
pop
jno
mov
inc
movsb
dec
bound
sub
jg
test
shlb
stc
stos
mov
pop
mov
pushf
sub
aas
iret
and
and
test
dec
jecxz
aaa
sahf
and
jl
mov
inc
lcall
ljmp
les
adc
xchg
push
mov
dec
inc
movsl
out
movsb
xchg
push
lea
jp
lds
push
mov
jo
inc
test
rclb
mov
out
jle
jg
mov
jbe
mov
out
sbb
cs
mov
inc
mov
maxps
xchg
rcrb
xchg
popa
or
cmp
push
loop
sub
popa
mov
test
add
mov
int3
faddl
pop
fmuls
stc
cmp
jmp
jecxz
fsubrs
sbb
stos
and
jae
popl
inc
fwait
fwait
jae
mov
and
movsb
mov
push
or
lret
mov
scas
lods
icebp
cli
loopne
sti
jb
pop
icebp
push
pop
add
cmp
xchg
xchg
cmp
dec
int
enter
push
push
mov
or
xor
icebp
ja
divb
mov
out
outsb
fcompp
aaa
shll
and
mov
mov
repnz
mov
fildl
imul
mov
fldpi
lods
inc
dec
and
mov
adc
adc
mov
in
dec
daa
and
adc
cmp
push
xchg
pop
mov
add
shrl
cmp
outsl
lock
cmp
cmc
sub
repz
mov
dec
or
push
cmp
data16
or
jbe
cmpsl
loope
mov
add
popf
inc
ret
stos
imul
adcb
dec
add
mov
and
dec
das
xor
cmp
int3
movsl
dec
lahf
andl
sbb
jmp
cmc
aam
xchg
xlat
add
push
mov
mov
xor
clc
add
hlt
leave
mov
call
in
xchg
daa
das
jne
into
aam
loope
mov
pop
rcr
xchg
icebp
dec
mov
pop
pop
inc
or
sbb
and
xor
dec
adc
xor
mov
push
and
add
mov
push
add
mov
jno
jg
push
xor
call
jle
loop
fucom
jo
outsl
jl
insl
xchg
sbb
leave
mov
mov
lahf
mov
push
xchg
mov
or
not
dec
jle
rcrb
jp
lods
outsb
pop
rcll
in
mov
es
sub
sbb
movsl
jno
inc
xchg
mov
scas
xchg
cli
mov
xor
pop
add
inc
pop
hlt
xor
pop
xchg
mov
push
scas
inc
inc
stos
mov
mov
lods
outsl
shrb
push
fsubrp
push
pop
leave
inc
sub
fwait
in
and
fwait
push
fidivrl
push
jmp
std
mov
pop
cmp
mov
sub
rclb
inc
outsl
mov
or
or
or
push
fsubl
test
std
out
inc
xchg
sbb
lret
pusha
scas
adc
mov
insl
adc
or
insb
popf
das
icebp
fiadds
leave
nop
or
mov
jnp
mov
adc
scas
pop
lock
mov
test
mov
mov
pushf
mov
in
sbb
jl
and
adc
clc
cwtl
pop
sub
xor
ljmp
sub
mov
and
xchg
sub
shrb
cmc
popf
movsb
outsl
data16
shr
mov
iret
out
xor
fisubs
mov
imul
stos
fs
mov
in
or
repnz
popf
inc
mov
test
inc
and
cwtl
add
push
mov
add
mov
lret
fnstcw
aad
sub
jg
cmp
fdivr
movsb
pop
add
addr16
jmp
mov
iret
fwait
or
jne
add
mov
mov
insl
mov
imul
and
jne
xchg
setp
or
div
retw
outsl
fistpll
xchg
popa
adc
daa
add
inc
out
shlb
push
rorb
and
mov
fwait
adc
sbb
mov
mov
mulb
inc
adc
add
loope
jl
test
and
add
or
test
add
loope
dec
xchg
mov
mov
xor
mov
push
cmp
cwtl
push
mov
jmp
adc
xchg
fs
mov
cltd
adc
lods
aaa
cwtl
and
pop
mov
aas
inc
sbb
aad
loope
sbb
icebp
cmp
out
test
pop
jp
mov
cmpl
sub
pop
inc
pusha
test
std
mov
mov
xchg
push
std
andb
jb
xchg
test
add
popf
idiv
jns
pushf
idivl
xchg
xchg
xor
mov
movsb
xchg
xchg
lret
aam
inc
addr16
push
xor
dec
xor
fisttps
push
push
push
lret
std
test
sbb
aas
mov
lods
xor
xchg
xadd
into
lock
jmp
test
ss
pusha
xor
lods
cwtl
gs
mov
push
adcb
in
pop
mov
pop
jmp
mov
call
pushf
sbb
filds
out
xchg
shl
in
notb
jecxz
push
lea
sub
xor
pop
aas
cmp
outsl
pushf
nop
mov
insb
les
adc
unpckhps
adc
icebp
lods
sbb
gs
iret
mov
or
cmp
pop
add
pop
jbe
ss
push
adc
inc
inc
daa
pop
cmpsl
fdecstp
xchg
push
jmp
jecxz
div
pop
pushf
lods
sub
mov
mov
jl
mov
mov
sub
push
xchg
sub
lods
inc
stos
mov
outsb
scas
std
call
and
ds
movsb
cmc
lahf
sub
ss
push
inc
jecxz
pop
add
shll
add
lret
pop
imul
xchg
ja
sub
idiv
pop
jo
sub
sbb
cmpsb
sub
fistl
test
cltd
pushf
push
pop
bound
in
mov
int
repnz
pop
fisttps
sub
lock
daa
xchg
xchg
addr16
and
pop
mov
lea
mov
test
xchg
cmc
xchg
xchg
repnz
icebp
pop
adc
inc
sub
pop
sbb
rcrb
or
sahf
fidivl
pop
stos
pop
mov
xchg
dec
add
adc
ret
or
dec
fsubr
xchg
nop
xchg
sti
fidivrl
jp
push
mov
mov
or
leave
xor
push
mov
push
gs
cmp
dec
push
daa
fcompl
mov
mov
jne
adc
mov
pop
mov
xchg
push
outsl
cltd
jmp
adc
lods
pop
loope
imul
inc
cmp
enter
cwtl
dec
out
xor
or
idivb
push
sub
fcoms
xor
in
cmpsb
jp
daa
mov
imul
iret
jo
push
jmp
pushf
pop
enter
mov
pop
dec
dec
jecxz
ret
mov
subb
mov
mov
bound
xor
in
sub
jge
pop
insb
xchg
ja
pop
xchg
das
loopne
enter
cmp
mov
sub
sti
pop
fldt
and
xchg
call
jno
fisubl
js
arpl
sub
into
jp
mov
mov
test
out
int3
xchg
mov
and
push
jo
mov
ret
lea
dec
lret
or
mov
inc
mov
xchg
and
jl
mov
pusha
mov
lahf
loopne
addr16
movsb
insl
fwait
popl
pop
shlb
bound
filds
ds
cld
fmuls
js
test
lea
daa
sti
fsub
pop
mov
push
ja
leave
scas
pop
jnp
shrd
xorb
xchg
adc
adc
fxch
push
js
adc
sbb
js
daa
pusha
fisubs
mov
dec
loopne
pushf
mov
std
in
sbb
mov
mov
jge
stos
push
jle
xchg
test
cmpsl
dec
fcompl
mov
mov
into
rcr
push
push
jecxz
mov
clc
pop
and
add
fists
xchg
and
xor
cmpsb
add
in
les
sbb
dec
sub
push
jno
mov
bound
hlt
out
inc
cmp
jmp
fdivrp
and
sbb
cmpsl
sub
xor
lahf
xlat
and
mov
xchg
and
xchg
jns
or
dec
mov
dec
fwait
xchg
int3
jg
xchg
xlat
add
cmpb
aaa
pop
pop
mov
outsl
into
out
dec
jg
ljmp
jae
clc
push
inc
adc
insl
int
jb
enter
pop
lods
inc
or
aaa
aad
repnz
jae
cmc
cltd
out
mov
aam
cwtl
mov
and
stos
das
jb
call
push
xchg
sub
pop
dec
movsl
in
fwait
sarb
je
inc
xchg
or
fcmovnbe
mov
xchg
cmp
or
cmp
test
cmc
aad
adc
out
pop
jle
inc
sbb
adc
sub
or
mov
icebp
dec
in
xchg
cmp
and
lea
mov
xor
mov
pop
jle
ljmp
mov
je
test
push
mov
mov
sub
inc
mov
fimull
in
push
jbe
in
jo
cwtl
lret
arpl
mov
ljmp
test
mov
int3
shl
xchg
ja
add
push
jae
jbe
mov
jns
lds
xlat
inc
push
pop
ja
adc
inc
test
fistpll
pop
ds
pop
repz
push
ret
sbb
or
cmp
add
fmulp
pop
repz
nop
mov
jbe
add
jp,pt
and
out
jmp
daa
mov
jb
xchg
inc
push
jns
xchg
divl
shl
dec
jnp
or
ljmp
cmpsb
hlt
push
mov
dec
xchg
test
out
jp,pn
leave
sub
sti
insl
jl
bound
dec
call
subb
push
xor
lret
sbb
sbb
mov
push
xchg
daa
and
test
ljmp
adcl
int3
testl
dec
hlt
int
mov
cmp
cmp
pusha
sbb
aam
push
lds
adc
jns
inc
or
sub
in
xor
mov
and
in
popa
dec
mov
insb
adc
mov
call
pop
data16
cmp
enter
pop
xor
loop
sub
push
inc
xor
inc
pop
sbb
xchg
mov
inc
js
stos
push
pop
fists
popa
adc
mov
sbb
cmp
popa
jecxz
xchg
daa
popf
and
cmp
imul
push
dec
xchg
jge
aas
sub
lods
sub
pop
icebp
lea
cmp
pop
xor
out
test
xchg
jg
push
pop
out
cld
pop
mov
bound
aam
adc
jl
lock
jne
mov
testl
jge
add
jle
test
sbb
int
icebp
mov
in
shrl
cmp
add
stos
xor
push
mov
mov
ret
rcrb
pop
jg
js
push
cmp
jl
je
subb
sbb
mov
mov
push
or
mov
sar
punpckldq
test
outsb
bound
mov
sbb
jnp
popf
pop
fnstcw
insb
adc
or
mov
jnp
adc
orl
sub
ds
inc
mov
mov
mov
or
icebp
int3
gs
hlt
sbb
cmp
jle
clc
dec
and
mov
xlat
pushf
mov
test
push
ret
mov
xchg
std
push
pop
mov
int3
sbb
pusha
jl
cmp
pop
sub
inc
leave
adc
inc
push
ss
stos
mov
xor
cs
aad
bndldx
pusha
jp
mov
and
inc
lds
push
and
push
adc
jmp
jb
add
mov
cmc
stc
cmp
adc
sbb
or
push
mov
stos
mov
or
inc
xchg
pop
pop
jo
lcall
js
xlat
sbb
inc
push
jns
pop
in
insb
mov
cmp
dec
lahf
and
xlat
call
xor
call
rol
adc
insb
sub
fcmovnb
fstp
cltd
negb
jp
leave
imul
nop
mov
or
or
insl
dec
inc
xchg
mov
sub
jnp
mov
push
das
ds
mov
push
test
add
aaa
fsubr
sub
dec
jmp
ljmp
xchg
pop
inc
enter
pop
pop
xchg
rolb
mov
test
xchg
mov
int3
scas
fstpt
lret
jnp
mov
inc
mov
sbb
sbb
inc
inc
imul
shrl
cli
jl
or
push
xor
add
and
push
push
icebp
int3
dec
stc
ret
xor
out
adc
add
mov
dec
xchg
enter
mov
das
sbb
shlb
and
sbb
inc
lods
repz
out
xchg
pop
mov
mov
push
pop
repz
aas
sbb
std
jecxz
leave
add
pushf
inc
xchg
mov
test
pop
sahf
mov
rcl
out
outsb
pusha
mov
xchg
jno
sub
or
xchg
std
fdecstp
andb
or
inc
inc
inc
add
add
dec
cmp
scas
shrb
mov
push
cwtl
imul
dec
adc
rclb
ds
push
jns
push
dec
sbbl
mov
push
ret
add
mov
in
push
in
int3
sbbb
cmpb
rcrl
mov
push
repnz
call
xor
int3
or
sbb
or
jne
dec
jle
scas
mov
fisttps
insl
jae
test
icebp
pop
cli
ret
arpl
pop
ss
test
out
fs
fldcw
je
jmp
push
mov
mov
or
xchg
fyl2xp1
xor
shr
outsb
adc
fadds
mov
mov
dec
push
cmpsl
or
loop
rorb
sub
sar
outsb
jle
das
mov
adc
sar
sub
out
loop
mov
data16
jne
aam
jmp
sti
and
adc
imul
popa
add
ss
ldmxcsr
inc
mov
out
repnz
xchg
in
pushf
mov
outsb
cmp
inc
pop
sbb
xor
mov
dec
or
and
dec
out
aad
mov
aam
in
add
imul
rcr
fisttps
adc
cmp
and
popa
and
jp
decl
jb
inc
mov
and
nop
and
popa
enter
addr16
inc
into
or
pop
sbb
adc
lcall
mov
and
sub
xchg
fcmovne
jno
ljmp
lret
xchg
ljmp
mov
mov
mov
push
ret
ljmp
in
xchg
add
cmp
shr
cmp
call
cmp
outsb
adc
or
push
rclb
jmp
nop
test
dec
sub
cmp
and
les
test
cmp
adc
xchg
lcall
adc
mov
adc
aaa
clc
daa
imul
rcrb
inc
rolb
addr16
imul
into
sbb
dec
sbb
cmp
sbb
xor
scas
mov
arpl
xchg
sub
inc
repnz
mov
dec
sbb
pop
rorb
scas
addr16
mov
aam
or
pop
push
and
das
sub
rorb
jp
data16
sti
adc
mov
push
dec
rclb
notl
pusha
or
jge
cmpl
mov
cmp
xor
mov
outsb
inc
idivb
mov
int3
fsubl
xchg
dec
mov
xchg
rcll
sbb
pop
xchg
and
scas
dec
mov
rorb
inc
lea
leave
dec
cltd
insb
fwait
ret
inc
mov
nopl
mov
gs
bound
xchg
mov
and
xchg
lods
iret
lods
shr
in
xchg
insl
scas
pop
call
pop
pop
out
iret
cmp
arpl
mov
mov
mov
mov
and
lret
filds
ss
cmpsl
bound
push
popa
mov
sahf
cli
inc
push
push
mov
cltd
add
mov
fmul
xor
mov
ss
out
adc
pusha
rorl
movl
scas
push
inc
out
and
test
pop
add
pusha
xchg
ret
outsl
in
lcall
sub
lds
clc
push
add
add
inc
inc
inc
mov
dec
movsb
ljmp
adc
pop
mov
mov
jge
movsb
sbb
sahf
jbe
and
int3
into
out
sahf
sarl
jbe
movsb
add
shll
test
les
xor
insb
cmp
xchg
or
or
jp
loop
push
dec
push
cmc
adc
gs
xchg
js
adc
movsl
mov
mov
and
out
cmp
test
inc
pop
inc
xor
inc
mov
xchg
icebp
mov
dec
lock
or
mov
movsl
stc
mov
jo
fwait
add
pop
loop
push
mov
inc
or
sahf
ljmp
add
push
xchg
dec
mov
mov
push
inc
cltd
jo
shl
pop
outsl
js
dec
dec
test
xchg
inc
imul
in
and
mov
and
push
lret
sbb
sti
jmp
bound
rcrb
mov
dec
mov
mov
out
mov
jle
add
pop
filds
inc
mov
test
flds
push
adc
fs
and
jmp
inc
sub
dec
mov
cld
cli
nop
aaa
sarl
mov
push
xchg
mov
and
pop
mov
dec
notl
arpl
test
insl
psubusb
lock
call
scas
insb
mov
xchg
xlat
andl
lahf
push
lods
mov
and
idivb
push
sub
stc
gs
xchg
pop
push
sbb
out
xchg
or
scas
jb
cmc
inc
mov
cs
jg
jge
cmp
add
mov
dec
xchg
sbb
jle
pop
pushf
adc
ja
push
xchg
mov
leave
push
add
xchg
cmpsl
div
pushf
fwait
adc
adc
pushf
push
pop
test
mov
push
sub
and
lahf
icebp
iret
jecxz
clc
jl
ret
sub
ss
pop
gs
testb
movsb
xlat
fs
cld
pop
add
sub
mov
push
jbe
mov
and
fwait
dec
movsl
pushf
or
pop
jl
xchg
pop
lahf
bnd
and
push
mov
jge
mov
jo
jae
insb
jo
sbb
pop
xor
std
xorl
add
dec
roll
xchg
cmpb
and
mov
sub
xchg
lock
pop
stos
mov
pop
push
scas
pop
clc
enter
sbb
andb
mov
inc
jo
pop
in
test
pop
pop
clc
mov
nop
imul
insb
cmp
pop
and
cli
dec
arpl
pop
jb
add
add
insb
xor
cmpsb
cmp
mov
ds
xlat
cmc
ljmp
in
dec
pop
aas
or
inc
and
fmulp
sub
or
arpl
jb,pn
test
jle
and
cmp
xchg
pop
and
ss
jecxz
ljmp
popf
dec
dec
stos
call
cld
or
fdiv
in
lcall
sub
mov
pushf
push
xchg
sbb
push
call
cmp
lods
cmp
fwait
and
lods
sub
xchg
insb
lcall
and
mov
push
cld
mov
lcall
fwait
ret
out
mov
cmp
xchg
lods
sbb
mov
addr16
cmp
dec
roll
adc
test
nop
cltd
sbb
mov
hlt
add
bound
sub
pop
addr16
jnp
stos
cwtl
ficoml
cmp
and
in
add
fcompl
cmpsb
push
mov
ljmp
sub
jecxz
or
fcmovnb
inc
push
test
jbe
insb
adc
cmp
js
sbb
sub
adc
out
decb
xor
add
les
aaa
xchg
lods
dec
lahf
add
loopne
cmp
ds
and
fdivrs
pop
push
mov
jnp
add
int3
sub
add
imul
rcl
mov
xchg
jo
repz
or
push
sub
into
xchg
pop
cmp
aam
rorb
or
mov
ljmp
mov
mov
pop
stos
inc
cli
mov
loop
and
leave
add
mov
pop
mov
jle
inc
jne
jne
xor
int3
sbb
lret
jmp
test
cmp
jge
push
sub
sti
push
jecxz
int3
cmp
fdivrs
stos
in
xor
xchg
aaa
or
xchg
mov
out
add
mov
cmp
lods
clc
fwait
jns
std
push
leave
push
data16
imul
lahf
out
aas
movsb
add
mov
cs
and
adc
popa
sahf
mov
jle
test
push
bnd
and
mov
cld
add
push
and
hlt
mov
xchg
fwait
dec
inc
push
xchg
sahf
and
sub
ja
push
xor
popa
test
daa
pop
lcall
fisubrl
inc
lods
cltd
je
add
xor
cltd
sbb
push
sub
xchg
into
push
cmp
cmc
test
int
movsb
pushf
dec
les
xor
lds
inc
add
jns
cmp
fs
outsl
fcomp
imulb
lods
push
mov
push
loop
jle
arpl
sbb
aam
aaa
popa
aaa
in
sbb
sbb
dec
inc
out
lock
rol
cmp
mov
sbb
add
adc
adc
and
out
add
cbtw
sbb
repnz
je
adc
add
inc
mov
cwtl
in
mov
mov
cmpsl
push
sub
pop
jnp
rcr
mov
fucompp
gs
lret
xor
inc
cli
rcl
inc
ret
xor
pushf
or
fs
pop
loopne
int3
loope
sub
in
repnz
adc
out
lret
mov
dec
test
ficomps
add
pop
cmc
push
clc
imul
cmp
sub
adc
int
repz
stc
push
hlt
cld
negl
sub
stos
call
cmp
cmp
pop
xor
ret
fisubs
or
adc
insl
xlat
jl
cmpsl
or
mov
movb
lods
xchg
mov
dec
pushl
mov
scas
pop
daa
jle
or
negb
jmp
cmp
fbstp
cld
fnstcw
xor
outsb
stos
dec
adc
stos
mov
xor
push
jecxz
mov
push
mov
cld
sub
les
push
pushf
mov
fidivrl
test
cwtl
ja
pop
xchg
push
push
pop
pop
sbb
dec
sbb
loopne
stc
xlat
popf
test
jle
rcrb
faddp
stos
jb
sub
inc
dec
mov
dec
mov
cs
mov
jae
lcall
adc
inc
push
das
scas
movsl
inc
mov
out
mov
orl
int
int
fdivl
incl
and
xchg
pop
adcl
push
enter
sbb
sub
sbb
lcall
or
aas
cwtl
or
daa
mov
out
outsb
sub
dec
and
and
jb
mov
lods
jmp
push
adc
sti
sbb
cmp
jbe
adc
fnstsw
arpl
int
hlt
call
jnp
push
cld
inc
cmpsl
dec
icebp
lods
fs
test
push
lahf
enter
xchg
mov
sbb
and
out
mov
insl
dec
pop
shll
dec
push
icebp
mov
bound
js
int
mov
lret
push
inc
jnp
mov
or
xchg
vmwrite
adc
xchg
out
test
aas
or
mov
push
cld
es
daa
mov
jno
xchg
xchg
mov
int
test
xchg
loopne
and
insb
mov
and
sub
dec
bnd
fcoms
jbe
call
imul
dec
cwtl
std
mov
jno
and
outsb
por
lds
mov
stc
or
or
xor
imul
jmp
pop
pop
xor
mov
dec
fmul
clc
mov
stos
lcall
mov
enter
push
mov
mov
adcb
and
fiaddl
dec
mov
pop
data16
cmp
dec
sahf
xor
add
iretw
jno
call
inc
xor
leave
add
mov
xor
ja
or
pop
mov
mov
push
fwait
xor
les
mov
lods
or
add
mov
out
add
xchg
lods
sub
sbb
adc
pusha
movsl
es
cmp
xchg
fsubp
cmp
cmp
shll
imul
notl
iret
xchg
repz
dec
cld
dec
cs
fucom
xor
or
adc
imul
jnp
ljmp
add
clc
mov
and
and
xchg
out
scas
cltd
cmpsl
dec
nop
icebp
aad
and
call
jns
add
inc
into
das
dec
mov
lock
jnp
gs
cmp
push
hlt
iret
adc
pop
rorb
fnstcw
aam
lods
test
in
lods
sub
jno
jg
shll
add
mov
test
push
dec
inc
push
addb
jmp
outsl
push
jb
and
push
push
das
cmp
xor
xchg
sbb
inc
repnz
mov
xchg
push
outsb
lds
mov
scas
adc
fnstcw
jp
cwtl
mov
lret
fiadds
xor
pop
xchg
lea
arpl
idivl
ja
pop
fists
mov
cmpsb
arpl
mov
jb
pop
aaa
je
cwtl
fisubl
lods
lret
mov
add
mov
sbb
loope
adc
ds
mov
enter
and
data16
fisubl
ss
int
nop
ja
orb
push
sbb
pusha
xchg
cmp
out
dec
cmp
out
mov
pop
ljmp
push
push
xorb
sbb
inc
les
and
test
mov
mov
mov
push
iret
xor
push
fidivrs
pop
dec
inc
xor
fidivrs
popf
adc
lcall
xchg
inc
push
call
push
push
cmpsl
ficompl
popf
push
es
mov
pop
xchg
fcomp
mov
cmc
dec
sub
stos
int
lds
stos
adc
inc
outsb
push
mov
pusha
ret
cmp
xchg
mov
loop
ds
movsl
aas
arpl
lods
pop
popa
subb
cmpsb
jo
jno
cs
jecxz
pop
icebp
cmp
test
cmpsb
jecxz
cli
mov
sahf
jle
pop
aas
aad
adc
inc
and
and
stos
inc
jno
int3
fwait
out
jle
mov
nop
jecxz
and
push
sub
movsb
andl
add
dec
aad
sbb
aam
mov
sbb
sbb
jp
lods
lahf
xlat
mov
fsubrs
mov
loop
lret
pop
inc
popa
fsts
enter
faddl
push
pop
idiv
mov
push
ds
lret
adc
addr16
fmull
into
sub
push
dec
repnz
add
setno
out
divb
and
sub
adc
jae
out
das
jo
cwtl
mov
jle
jbe
movsl
outsl
fildl
inc
fidivl
add
daa
andb
add
sub
sbb
adc
bts
or
sbb
mov
sbb
lret
add
push
mov
int
jecxz
push
sarl
fildll
sbbl
jne
sbb
std
not
mov
sub
mov
mov
mov
ret
xor
sub
adc
or
push
mov
jnp
mov
mov
pop
cmp
pop
mov
xchg
popf
jg
jg
repz
daa
jns
sub
movsl
pop
jecxz
ljmp
xor
dec
imul
and
call
push
sbb
sbb
dec
mov
lret
aam
cs
call
out
xchg
insb
inc
sub
fists
repnz
insb
gs
rcr
push
jg
cli
divl
cmp
addl
cmpsb
and
xor
sbb
imul
jno
stc
outsw
dec
push
enter
xor
sub
imul
jg
or
out
mov
jge
scas
icebp
cli
jno
inc
aas
dec
repnz
cmc
popf
mov
lock
jnp
inc
lahf
mov
push
lock
mov
cmp
add
sbb
leave
mulb
stos
scas
stos
out
test
xlat
addr16
fidivs
mov
loopne
imul
mov
xchg
int
cld
xchg
cmpb
xchg
xor
sbb
mov
add
das
sbb
pop
or
xchg
cwtl
call
popl
arpl
push
imul
adc
popf
adc
push
insb
or
sbb
mov
inc
mov
sbb
sarb
sbb
cwtl
lds
xchg
in
mov
rolb
xor
orl
sti
push
mov
fisubs
cmp
cld
inc
loopne
dec
or
push
pop
rcrl
ret
xor
call
pop
stos
mov
dec
js
push
jae
outsb
jo
pop
pusha
cmp
push
imul
add
js
cmpsb
mov
mov
push
test
push
push
subl
cmp
pop
xchg
sbb
sahf
sub
mov
sahf
sbb
movsb
sti
dec
test
mov
addb
adcl
cmp
pop
mov
test
popa
dec
andb
push
mov
negb
inc
jno
push
add
add
mov
iret
push
ja
jo
pop
xchg
mov
jnp
pop
xchg
and
imul
push
dec
shll
lods
rolb
xchg
lea
cmc
leave
mov
rol
jne
addr16
cltd
pop
dec
push
in
cmc
cmp
arpl
jg
das
cmp
pop
pop
aad
js
mov
dec
jno
rorl
xchg
pop
loop
pusha
fisttps
scas
stos
scas
icebp
incl
aad
jno
dec
xor
mov
std
test
repnz
dec
rcl
lds
stos
jp
cmp
js
jae
stc
test
or
cmpsl
loop
cltd
pop
sub
push
hlt
in
insb
xor
and
dec
stc
lret
gs
mov
xchg
fmuls
or
push
hlt
jge
lahf
leave
inc
in
je
jl
inc
ret
stc
sbb
cmpsb
pop
dec
loop
xchg
ret
pop
mov
cmpsl
out
and
aas
push
pop
nop
cmp
stc
imul
and
add
cmpsl
jne
repnz
test
or
cs
mov
add
lods
ficoml
push
out
fsubrs
sbb
lcall
ljmp
mov
mov
mov
xor
test
mov
push
stos
xchg
jns
or
sub
add
mov
lods
and
insb
fwait
jo
dec
iret
leave
xlat
int
ja
imul
std
cmp
inc
mov
jno
mov
fwait
ss
repnz
and
rcrb
enter
sarl
and
mov
cs
push
in
mov
std
cmp
fcmovnu
pop
push
xlat
xor
fwait
sbb
sbb
clc
cmp
cmp
lds
mov
test
xor
lods
xor
jecxz
movsb
and
in
cmp
xor
call
or
stos
nop
dec
fwait
mov
stc
pop
jge
rol
jle
jg
lret
pop
aaa
ja
lods
xchg
sub
sub
xchg
push
fwait
cmpsl
and
cld
dec
mov
xchg
cmc
jo
rorl
xchg
dec
and
pop
loop
push
out
ret
sbb
lods
loope
ret
xchg
sar
push
xor
aad
mov
fisubs
ljmp
mov
mov
pop
out
pop
lds
inc
mov
js
loope
dec
pushf
jle
sti
jnp
int3
out
sbbb
lcall
and
lret
cmp
lcall
xor
nop
std
mov
mov
pop
fidivrs
xchg
mov
push
inc
stc
das
jne
test
add
mov
popf
fistps
mov
add
or
add
into
test
es
add
adcl
mov
scas
mov
fucomp
push
rol
addr16
cs
stos
sarb
dec
inc
mov
and
inc
inc
cmp
mov
iret
pop
xchg
xchg
push
adc
jmp
sub
xchg
movsl
mov
mov
and
adc
shl
popf
and
push
mov
mov
dec
sub
adc
adc
fs
push
and
movsl
arpl
mov
mov
mov
pop
movsl
and
xchg
cltd
std
mov
push
lods
enter
adc
xchg
xchg
hlt
int3
popf
cmp
mov
dec
push
lods
popf
in
xchg
sub
cmp
sti
jne
jmp
sbb
xchg
mov
js
xchg
mov
sarl
xchg
cmpsb
lods
cs
add
xchg
xchg
mov
mov
push
ss
out
pop
js
and
in
nop
pusha
lods
push
mov
aaa
mov
jge
insb
nop
add
test
pop
sahf
inc
mov
inc
punpcklwd
enter
out
lret
testb
dec
xchg
jbe
cld
cmp
sub
sbb
lret
and
pop
jge
leave
jbe
adc
push
xor
es
and
adc
arpl
in
rolb
jl
int
pop
sub
dec
cltd
add
pop
ja
iret
sbb
xchg
shl
loopne
jmp
mov
xor
dec
sub
sbb
bound
adc
inc
or
and
push
repnz
push
je
cmpb
add
es
repnz
ds
pop
fstpt
cmp
push
inc
into
or
jmp
lock
fimull
mov
jecxz
push
es
cmp
lret
in
negb
pop
iret
jecxz
in
rolb
mov
sahf
stos
lcall
faddl
test
xchg
mov
fmull
add
icebp
push
stos
jne
add
push
jns
icebp
into
bnd
pop
ss
lret
or
pop
jne
loope
fsubs
mov
sbb
push
mov
sbb
dec
gs
adc
stos
push
xchg
pusha
xor
xchg
or
sub
fwait
movsl
pusha
inc
jl
mov
push
leave
int
pop
mov
push
pusha
cmpsb
mov
rcrb
jmp
cmp
test
mov
jo
dec
mov
push
add
addr16
jne,pt
gs
mov
test
mov
daa
pusha
add
sti
sbb
ret
insb
scas
lret
mov
loope
insb
adc
jge
pop
mov
loope
xchg
imul
pop
pop
out
jne
add
in
out
int
and
popa
push
add
xchg
pop
push
sub
flds
jbe
jg
bound
int
mov
and
jl
pop
push
cld
shll
data16
and
mov
push
aad
pop
cld
inc
rcr
jp
xor
inc
sarl
jecxz
ret
mov
add
jmp
xchg
icebp
out
pop
fucomi
rcll
out
js
push
add
int
arpl
cmp
das
pushl
jmp
shlb
insl
das
in
or
clc
inc
adc
fcomi
leave
sbb
fs
fwait
das
push
cmp
push
shrb
pushf
mov
imul
lds
ret
lea
test
xor
jb
outsl
ljmp
leave
mov
dec
shll
dec
ss
and
jmp
test
mov
in
fists
push
addr16
mov
pushf
push
fistps
es
sub
cmp
xchg
pop
getsec
mov
xchg
inc
mov
out
mov
je
pop
out
loope
mov
dec
incl
lods
and
stos
mov
je
into
cmpsl
dec
repz
mov
sub
push
outsb
and
jno
notl
mov
fmull
lods
adc
stos
lret
addr16
pushf
mov
mov
xchg
mov
sbb
xchg
sub
push
mov
ljmp
jmp
lret
mov
in
mov
cmp
test
or
cld
jo
or
int
xchg
xchg
fs
xchg
out
outsl
inc
jno
dec
and
into
test
jmp
rclb
and
adc
in
loop
jmp
add
ficomps
inc
js
mov
icebp
dec
in
or
pop
dec
fs
inc
cs
cmpsb
adc
das
sbb
cltd
inc
and
orl
int3
xor
lods
imul
shll
lret
push
mov
roll
test
inc
jbe
dec
jb
stc
lods
aam
fs
shr
adc
cmp
adc
mov
dec
leave
xor
mov
pop
mov
dec
into
xlat
mov
rorb
add
adc
test
mov
into
jp
mov
jb
insb
xorb
daa
jno
iret
int3
bound
jns
and
adc
mov
repnz
hlt
add
je
adc
jecxz
jo
jne
ret
adc
out
lcall
push
fisubs
and
iret
js
imul
xchg
dec
mov
cmc
sbb
adc
hlt
ja
pusha
xchg
mov
jo
ret
cmpsl
jl
ss
push
xor
jge
dec
jne
add
mov
ficoml
mov
in
add
fnsave
jno
aas
add
outsl
icebp
and
das
dec
dec
jl
cld
ret
push
sub
popa
testl
mov
popl
pop
stos
mov
sbb
mov
sub
cmc
jp
sub
dec
int3
scas
sbb
ja
sbb
cmp
pop
pop
ljmp
and
loope
movsl
inc
push
addr16
fcomps
adc
pop
ret
xor
fimuls
mov
mov
jno
addr16
inc
push
jno
ret
movsb
scas
int3
les
xor
and
xchg
stos
push
inc
xchg
xor
jb
fisubl
adc
mov
cmp
cld
ds
jae
ljmp
fadd
arpl
loopne
adc
dec
dec
ds
pop
call
insl
je
adc
addr16
push
imul
sbb
inc
lahf
jbe
dec
imul
push
jns
jno
fsubrs
lret
fstl
xchg
shlb
mov
xor
mov
gs
mov
insl
lods
fsts
mov
and
loope
ret
jns
xchg
mov
aad
xchg
fdivrs
jl
jo
sbb
sub
imul
std
popf
in
pop
stc
push
hlt
outsb
sub
shld
daa
cli
push
iret
std
popf
xchg
xor
mov
inc
lcall
sub
cmp
scas
rorl
imul
leave
pop
mov
fdivl
es
scas
rcl
inc
test
or
xlat
pavgw
ret
roll
mov
sti
aam
mov
mov
sub
sub
mov
sbb
mov
jecxz
aad
or
sub
xchg
and
inc
ljmp
pop
pop
dec
mull
outsb
inc
cvtps2pd
or
sbb
xchg
jno
cli
into
shll
mov
dec
mov
scas
movsl
mov
xor
loope
pop
cmp
pop
cmp
addr16
jmp
outsb
cwtl
insl
cli
dec
pop
mov
ja
jnp
ss
jne
sti
fucomi
push
fldl
cmp
pop
pop
in
mov
jg
popf
xchg
jne
add
ror
jle
adc
cmpsl
mov
or
mov
neg
into
jg
test
repnz
stos
inc
fadd
xrelease
inc
jns
icebp
mov
aas
mov
aam
sub
mov
inc
fs
dec
or
jb
shlb
lock
mov
ja
rclb
push
add
scas
cmc
xor
inc
cmpsl
dec
inc
cmc
scas
lcall
sub
mov
lret
loope
test
clc
jge
inc
jecxz
jo
out
arpl
outsl
pop
fstpl
stc
pmaxsw
or
lahf
xchg
push
xor
scas
lret
jno
lahf
repz
adc
xor
enter
inc
imul
adc
ss
lods
xor
push
jne
pusha
decb
mov
je
stos
pop
loop
mov
adc
scas
mov
xor
mov
rcrb
repz
jecxz
sub
pop
push
pop
je
xor
pushf
sbb
data16
rcrl
xchg
popf
mov
mov
filds
dec
mov
test
add
out
push
aas
dec
ret
cmp
dec
lock
push
adc
cmp
imul
dec
popa
dec
cmp
jecxz
sub
jecxz
mov
iret
mov
xor
and
xchg
mov
and
mov
sub
lcall
mov
imul
sar
aam
inc
stos
or
and
arpl
stos
je
sbb
hlt
pop
fmuls
dec
data16
insb
call
xor
push
dec
pop
or
inc
or
fistps
jnp
movsb
ret
dec
roll
push
fnstenv
icebp
stc
mov
lods
jo
inc
lret
inc
push
push
jl
mov
pop
cmp
sub
sahf
inc
mov
daa
lcall
mov
add
lahf
cs
xor
cmp
daa
mov
cmp
inc
inc
jo
dec
xchg
jmp
rol
mov
mov
sahf
loope
sbb
push
push
jae,pt
mov
outsb
daa
repnz
push
sbb
loop
or
mov
sub
mov
negl
jmp
mov
mov
adc
fst
jmp
dec
bound
fisttpl
inc
add
cwtl
cmp
repz
add
push
rolb
mov
lahf
insl
mov
jo
inc
and
or
clc
int
mov
dec
dec
cld
mov
mov
pop
add
jecxz
cmp
fisubs
push
cmp
xor
pop
jnp
push
dec
adc
mov
xor
push
ds
sub
mov
dec
fs
movsl
movsb
push
xchg
jb
fwait
xchg
xlat
xor
jl
pop
sbb
iret
aam
cmp
jnp
push
adcl
leave
add
je
rcl
and
addl
jle
mov
inc
hlt
and
pslld
xor
jae
mov
fnstsw
push
pop
dec
addr16
pop
jmp
sub
icebp
mov
outsb
mov
aam
adc
or
mov
jo
roll
cmp
inc
sbb
cmc
les
pop
xchg
cld
aam
cwtl
stos
push
enter
inc
insb
pop
xchg
stc
in
in
xor
outsb
inc
cmp
dec
stc
jno
repz
movsl
insb
cmc
cmp
xor
mov
out
sub
pop
mull
scas
dec
pop
fwait
rcll
jp
push
cld
or
push
out
adc
dec
fiadds
je
pop
push
notl
xchg
jecxz
sahf
and
mov
leave
inc
inc
jmp
test
ret
cmp
jp
jno
sbb
sbb
and
pop
mov
xchg
sti
pop
insb
mov
lcall
lods
xchg
add
into
dec
adc
jae
popa
sbb
add
inc
faddl
mov
repz
push
jb
addr16
ret
hlt
mov
lahf
lds
jnp
mov
orb
sbb
cwtl
inc
out
dec
repz
adc
sub
adc
outsl
and
pop
sbb
aam
xor
repnz
shlb
push
es
dec
adc
inc
jne
lods
test
adc
xchg
pop
mov
mov
push
mov
xchg
push
fst
xlat
jg
iret
cltd
adc
loope
xor
leave
xor
or
mov
mov
push
ret
pusha
out
mov
insl
jo,pn
insl
test
sbb
pusha
push
fdivrs
shr
or
out
adc
bound
int3
mov
mov
daa
cmpb
cmp
insb
mov
mov
xlat
andl
inc
mov
xchg
mov
xor
test
jge
jle
xchg
pop
cmp
inc
scas
iret
into
mov
out
fcmovb
pop
leave
cmp
cmp
mov
jb
mov
clc
lods
lcall
xchg
lock
push
xor
je
xor
push
mov
and
int
inc
inc
test
stc
mov
xor
ret
and
add
fsub
pop
dec
lea
and
mov
dec
in
outsb
movsl
pop
mov
aaa
and
or
test
pop
icebp
sbb
cmp
add
pop
push
popa
mov
dec
adc
mov
push
jl
fcmovu
xor
stos
gs
and
lds
mov
test
call
in
in
int
jmp
mov
jno
cmp
mov
inc
cmpsb
dec
data16
loope
mov
packsswb
mov
jge
cmp
outsb
xchg
jns
ds
cs
xchg
dec
and
inc
loopne
es
pop
cmpb
dec
dec
push
inc
cmpl
mov
fstp
cmpb
pop
jge
fistps
mov
xor
inc
inc
push
sbb
xchg
cmp
mov
clc
mov
xchg
xchg
into
pusha
fildll
test
mov
dec
lods
adc
mov
inc
sub
sub
ret
pop
fwait
mov
fcom
or
adc
dec
mov
push
daa
aaa
in
mov
or
push
rclb
push
pop
push
xlat
sbb
sbb
lods
inc
jo
popa
jbe
jns
jle
mov
out
jl
adc
pop
sub
sub
xchg
push
push
fwait
and
stc
imul
stc
insb
arpl
dec
xor
rcrl
pop
jae
ss
mov
xlat
mov
xor
mov
movsb
outsl
mov
inc
mull
inc
stc
stos
mov
filds
push
pusha
pop
in
test
push
movhps
movsb
repnz
stos
sbb
clc
cmpsl
mov
xor
out
add
movsb
mov
xor
movl
hlt
enter
add
ljmp
jns
cltd
pop
outsb
fs
jge
xchg
jle
js
lahf
dec
fs
and
fistpl
test
jo
int
cmp
cli
in
aad
sub
and
or
mov
addl
mov
pop
mov
jb
jne
cmc
and
shll
repz
adc
inc
sub
jbe
jecxz
sbb
popa
pop
and
pop
xor
pop
movsb
call
mov
cwtl
enter
dec
loope
inc
mov
jb
push
mov
dec
aas
sub
cmpsb
xchg
jno
mov
and
ljmp
inc
inc
loopne
jmp
js
push
mov
inc
jp
push
daa
dec
xchg
pcmpgtw
or
fildl
sti
aaa
mov
sbb
imul
ss
mov
sbb
fimuls
fwait
push
and
adc
test
bound
out
push
cmpsb
aam
cwtl
jg
mov
int
fs
aaa
lock
mov
and
sub
lret
loope
push
jne
mov
pop
adc
cmp
or
pop
ds
insb
or
pop
pop
mov
xorb
arpl
outsl
mov
mov
pop
fisubrl
fistpll
aas
loop
rcr
int
jne
test
xchg
insl
popf
add
es
orl
jmp
inc
and
dec
lret
dec
adc
lahf
mov
add
sbb
test
int3
jmp
mov
gs
pop
xchg
mov
jle
fs
insl
int3
in
cmpsl
jmp
dec
pop
es
addr16
push
ret
adc
sti
into
clc
jbe
orb
in
subl
or
jmp
or
mov
push
fstpt
and
imul
ja
leavew
add
sub
pop
jmp
push
inc
jl
cmpsb
inc
xor
out
sbb
and
and
inc
test
xlat
xchg
mov
jb
push
pushl
sub
push
add
mov
loopne
icebp
aad
push
push
jnp
mov
mov
and
adc
jno
pop
inc
mov
out
popa
mov
push
mov
push
outsl
pop
lahf
inc
cmp
fisubrl
adc
out
inc
lock
std
add
xchg
add
fsubl
pusha
xor
jmp
jp
mov
pop
xchg
loope
mov
jo
cmpsb
es
jp
js
insb
or
inc
mov
loop
sti
push
aam
sbb
dec
shll
dec
push
inc
xor
out
pop
pop
int3
fildl
fisttpll
xor
mov
mov
add
in
pusha
push
or
add
test
int
xlat
rolb
cmp
bound
clc
jae
into
scas
mov
pop
jmp
and
sbb
cmp
inc
mov
xchg
dec
out
js
dec
jle
test
test
lret
sub
sbb
stc
and
sub
inc
sti
mov
pop
imul
dec
js
cmp
push
xor
cmpsl
fimull
pop
test
and
int
hlt
inc
jo
jecxz
icebp
and
add
rcrl
jmp
arpl
sbb
cmc
aam
pop
aas
sub
sub
nop
popa
pop
leave
add
and
add
scas
ljmp
out
pop
ret
arpl
inc
popa
push
fsubr
lods
lret
pop
fsubs
divl
insb
call
pusha
sti
jg
test
int3
sbb
jmp
pushf
aas
insb
je
lret
aaa
test
nop
lock
xchg
punpckhbw
mov
cmp
and
mov
in
xchg
pop
mov
xlat
lods
pop
dec
or
jns
xchg
sub
enter
les
outsb
call
ds
ret
test
leave
and
inc
xchg
or
les
aaa
sub
in
dec
nop
push
push
or
mov
cs
shll
mov
jae
cld
add
pushf
mov
in
inc
aad
add
int
sti
or
icebp
dec
fildll
in
out
mul
mov
jmp
cmp
jp
out
mov
inc
je
test
cld
push
push
aam
test
pop
inc
sub
in
movsb
cli
fsubrs
dec
pop
fcomps
mov
fcmovb
imul
bound
push
aad
adcb
jb
std
leave
movsb
jns
stc
add
call
or
lods
repz
xlat
ds
out
imul
call
fwait
sbb
and
icebp
cmp
push
dec
jmp
push
push
jmp
xlat
mov
out
inc
gs
inc
push
frstor
insl
xlat
mov
cli
mov
jl
test
adc
pop
insl
sbb
lahf
pushf
dec
jne
mov
jae
jbe
xchg
mov
sahf
jmp
sbb
pop
jecxz
inc
insb
cld
shll
add
or
and
in
push
inc
jmp
cmp
ret
movsb
dec
push
and
jecxz
cwtl
jnp
inc
add
in
mov
test
test
jnp
scas
dec
sbb
negl
and
mov
push
inc
mov
leave
rcrb
mov
int
xor
fs
clc
in
cltd
divl
sbb
sub
inc
cld
aad
je
in
mov
cli
xchg
pusha
push
jnp
mov
dec
into
imul
repz
ret
rclb
push
jae
dec
sub
push
imul
mov
std
ds
xorb
and
daa
mov
inc
push
mov
call
push
lock
sbb
xlat
mov
popa
popa
fdivrs
push
or
lcall
jno
dec
sbb
push
mov
cmp
lret
insl
fldcw
mov
cmpsb
popf
aas
mov
int
xchg
sub
popf
bound
scas
mov
test
cmpl
inc
push
dec
inc
sub
pop
rcr
inc
mov
xchg
mov
addl
pusha
pop
sbb
inc
jns
movsb
cltd
sub
and
jno
jl
clc
pop
cld
repz
adc
cmp
cmp
nop
mov
push
cld
add
inc
sbb
xlat
lret
inc
sti
dec
clc
subb
dec
mov
sub
pop
fucomp
fiaddl
sarl
shl
push
cld
pop
xor
data16
stos
add
pop
sub
pop
xor
les
adc
push
dec
out
pop
and
push
fistps
and
lahf
mov
jle
lods
and
lahf
movsb
dec
xor
pop
or
popf
test
fwait
in
stc
js
movsl
sti
push
jbe
cmc
scas
andl
fwait
jp
xchg
push
pop
and
pop
das
inc
jbe
dec
rolb
inc
cmpsl
incb
outsb
and
into
mov
sub
popf
imul
orl
mov
ret
mov
jmp
jnp
mov
in
mov
jle
cmp
pop
pop
and
orl
sub
mov
ds
call
mov
movq
rorl
stos
negb
jge
fiaddl
pushf
xlat
sar
jo
dec
pushl
mov
cld
jecxz
lods
loop
lcall
loop
dec
outsl
ret
lds
ds
int3
cs
stos
aad
or
sub
jo
ljmp
xchg
std
hlt
sbb
mov
cmpsb
mov
insl
scas
stos
inc
js
xor
ret
fsubr
xor
mov
scas
xor
and
xchg
lds
lahf
fcoml
push
inc
jno
push
imul
mov
test
enter
push
mov
adc
pop
and
and
mov
test
xchg
jl
cmc
call
xchg
test
sti
pusha
rorb
push
cmp
aad
jle
mov
fcmovbe
ljmp
nop
mov
or
xchg
les
repnz
aas
mov
adc
cmc
insb
cwtl
xor
scas
xor
xchg
pop
sub
or
mov
and
ds
loopne
mov
mov
das
xor
out
movsl
cli
inc
f2xm1
xlat
sbb
inc
movsb
sahf
subl
negl
jb
loopne
push
and
mov
cwtl
movsb
xchg
add
fldl
sbb
pop
cmp
pop
inc
cmp
lock
insl
push
add
dec
push
dec
inc
lahf
hlt
adc
lea
int3
test
push
mov
fdivr
xlat
xchg
call
cltd
push
sbb
test
and
shlb
movsb
jbe
int3
aas
sarl
inc
clc
data16
insl
xor
arpl
jne
inc
jl
pop
mov
in
shld
filds
sub
adc
lret
adc
adc
jp
push
out
stos
xor
adc
push
sti
jecxz
pop
adc
es
out
addr16
jnp
mov
add
pop
stc
in
fpatan
out
xchg
rcrb
ja
sbb
mov
jae
add
insl
sarb
sbb
mov
sbb
fsubrs
movsl
mov
xor
fs
push
movsl
les
repz
xchg
xor
fsubrs
adc
inc
fwait
mov
jno
mov
into
das
or
mov
push
popa
cmp
idiv
lret
test
dec
daa
pop
cli
js
aam
fidivs
popf
jl
pop
sbb
push
mov
and
pop
outsb
ljmp
push
xlat
inc
fmuls
mov
enter
rolb
insl
stos
ret
mov
lahf
sahf
sarb
dec
popf
aaa
inc
inc
outsl
aam
dec
push
xor
add
test
add
es
cmp
inc
xchg
sub
leave
pop
out
aas
int
adc
cmp
in
and
jle
enter
mov
stc
pop
flds
movsb
sub
push
in
adc
int
mov
and
lret
pushf
mov
mov
jb
mov
in
pop
push
mov
or
fstpl
jge
cmp
push
rorl
aam
adc
int3
in
xchg
mov
ret
aas
or
sti
sbb
imul
imul
jae
outsb
dec
cwtl
fisubl
shr
out
aad
adc
pusha
sub
xor
inc
jns
jl
lret
adc
cmp
cli
jl
xor
mov
xchg
xor
fcomi
shll
andl
mov
push
mov
lret
push
int3
sbb
icebp
dec
fsubrl
in
mov
jns
cmc
lahf
ret
cmp
jg
ljmp
in
sbb
out
in
ljmp
inc
mov
and
jg
push
pop
orl
lahf
daa
push
sbb
add
jbe
cmp
mov
cmpsl
dec
lahf
iret
mov
jb
jg
mov
cmp
scas
dec
outsb
rcll
add
fsubs
lock
mov
mov
add
jne
mov
xor
cmc
icebp
inc
cltd
mulps
push
je
lods
imul
jns
fwait
sbb
or
push
or
iret
jmp
ret
es
sbb
xlat
add
inc
mov
or
mov
test
out
push
adc
sub
xor
mov
adc
mov
mov
dec
xchg
jno
int3
xor
outsl
enter
pop
mov
mov
xchg
jmp
add
sbb
sarb
pop
jbe
and
mov
jbe
ret
popf
cmp
adc
cmp
add
jmp
outsb
movsl
je
enter
imul
mov
cltd
js
mov
hlt
andb
mov
pushf
popf
jl
pusha
ja
mov
pushl
xor
cmp
jo
movhps
xor
jle
mov
fucomi
pop
fidivrs
orl
inc
lods
int3
sbb
push
pop
fcompl
lods
jecxz
ret
adc
sahf
mov
mov
push
lret
call
xchg
test
mov
mov
sub
dec
in
stc
dec
jge
gs
aad
out
xor
dec
rorb
pop
pop
xchg
loopne
in
sbb
fs
inc
push
cld
dec
jne
cmp
aam
inc
call
mov
in
push
sbb
call
mov
inc
sub
js
or
mov
sbb
jl
out
sub
mov
jp
mov
rol
dec
add
loop
or
das
inc
jge
lret
jbe
push
push
and
cmpsl
shl
and
lods
xchg
fistpll
pop
inc
pop
pop
andl
mov
push
inc
push
lahf
adc
imul
adc
inc
out
pop
pop
fidivrl
mov
cmovs
mov
mov
jl
xor
sub
xchg
arpl
fnsave
xor
jmp
mov
shrl
dec
call
out
push
loope
insl
sbb
add
shlb
arpl
inc
sub
ss
in
dec
jns,pt
loope
icebp
sbb
mov
int
mov
and
adc
fcmovne
out
pop
pushf
ss
push
adc
xacquire
sbb
movsb
inc
inc
pusha
outsl
push
sbb
mov
pop
xor
movsl
jge
out
clc
aaa
and
leave
jmp
dec
xchg
xchg
xacquire
aas
mov
lret
pop
out
repz
jmp
add
in
inc
in
xor
jnp
cmp
loope
movb
shll
dec
loope
xchg
pop
insb
ja
shl
stos
jae
jns
test
es
fcoml
iret
ret
and
push
scas
stos
mov
pop
xchg
add
movsl
mov
inc
or
adc
les
push
hlt
adc
inc
push
call
and
mov
sbb
jge
push
pop
mov
rolb
push
xchg
fimuls
repz
int3
subl
fidivl
pop
and
jne
out
fdivrs
rol
mov
loopne
xchg
fmul
fs
xchg
pushf
out
pop
inc
lret
out
cmc
inc
lea
mov
push
dec
rcrb
xchg
jbe
push
addr16
sub
xchg
sub
mov
rclb
loopne
dec
dec
dec
add
fs
cmp
mov
jo
inc
jb
in
aam
test
or
cld
xor
and
mov
jo
mov
xor
and
hlt
inc
pusha
leave
dec
insb
cmp
enter
mov
outsb
mov
je
mov
es
cmp
mov
fldenv
or
adc
mov
mov
test
pop
sahf
fcompl
adc
stc
inc
xchg
pop
mov
pop
sub
mov
inc
in
das
cmpsl
je
jl
xor
sub
jmp
dec
dec
out
and
fwait
sub
aad
stc
and
jns
ja
es
movsl
dec
mov
xchg
or
fsub
lock
out
dec
es
mov
std
adc
xor
in
push
je
das
fs
add
cmp
add
jne
jp
jg
xchg
xor
das
outsb
sub
jnp
push
aas
sarl
popf
push
insl
jp
push
jne
xor
out
nop
add
in
rolb
mov
in
leave
mov
jge
push
mov
cmp
stos
xchg
push
imul
mov
mov
lods
sbb
iret
jbe
fnstcw
insb
shlb
out
sbb
mov
test
int
adc
pop
fcomps
aad
gs
das
js
lahf
adc
stos
mov
addl
stc
sahf
dec
pop
sbb
fwait
loop
outsl
fs
cmp
cmpl
sub
dec
push
call
mov
aas
data16
repz
mov
mov
cltd
hlt
movsl
pop
adc
mov
fmul
add
sub
cwtl
fists
xor
clc
les
in
call
fwait
dec
mov
sahf
in
dec
inc
loopne
lcall
inc
fwait
dec
nop
in
inc
jae
int3
pop
aam
loop
scas
inc
dec
xchg
bound
test
test
fistps
hlt
inc
std
add
pushf
lea
repnz
mov
loop
jo
mov
push
aas
or
fidivrs
gs
ret
or
push
imul
dec
iret
test
fidivrl
pop
mov
lds
test
jecxz
jmp
lret
das
movsb
adc
or
fcomps
ss
jbe
and
push
pop
pop
sbb
and
or
cld
sbb
mov
xchg
push
mov
stos
out
pushf
dec
movsb
adc
pusha
cmp
adc
and
adc
mov
pop
xchg
repnz
sbb
int
lods
push
pop
cli
lahf
jns
jg
jae
pop
mov
sahf
push
pop
mov
iret
andb
adc
pop
jae
cmp
adc
push
lds
xor
sub
lret
cmp
xchg
lock
xchg
pop
ret
arpl
xchg
mov
ficomps
jle
cmp
adc
mov
adc
pop
jb
xor
mov
pushf
cmpsl
jo
pop
shl
fld
pop
mov
jb
les
test
movsl
jnp
and
lret
hlt
lea
imul
xchg
jno
divb
in
push
fists
xlat
pop
jl
cmp
scas
dec
stc
xchg
jl
mov
add
mov
in
push
adc
fidivrl
loop
dec
ret
aad
daa
jp
in
sub
dec
push
scas
popa
loope
jle
ror
pop
enter
sbb
add
stc
lret
cwtl
shlb
push
sbb
aad
push
xchg
in
bound
aaa
mov
nop
scas
idivb
mov
cld
scas
aas
stos
jle
mov
imul
ret
mov
fs
pop
adc
das
xor
sbb
mov
dec
xor
cltd
add
mov
lret
sahf
sbb
cld
adc
bound
xchg
or
ss
test
pop
add
sub
inc
loope
lret
push
mov
popa
in
pushf
cmp
cmpsb
dec
inc
icebp
out
aas
loop
mov
movsb
sbb
subl
lds
mov
shrb
mov
fstpt
fisubrs
leave
xor
mov
ljmp
je
dec
cmc
mov
mov
das
mov
enter
cmp
fistpl
scas
rcr
sub
dec
mov
inc
fs
xor
dec
iret
mov
sub
mov
iret
mov
sbb
push
in
scas
fbstp
xchg
into
xor
push
dec
pop
lea
stos
or
or
shrb
sbb
mov
pop
jae
testl
into
inc
push
and
push
lcall
daa
or
mov
mov
inc
inc
dec
inc
aad
ljmp
cmpsb
in
and
xor
out
andl
decb
gs
adc
hlt
pop
mov
cmp
movsl
shr
or
adc
pop
bound
lods
mov
fcmovnb
xchg
jo
loopne
cld
aam
or
sub
xor
jge
add
push
inc
in
icebp
and
iret
dec
xlat
das
push
nop
add
test
sbb
jecxz
fnstcw
bound
stos
aas
cmp
in
cmp
arpl
sub
dec
fwait
pop
sbb
jp
outsl
push
cmp
or
andb
lea
adc
mov
mov
mov
inc
out
sbb
pmuludq
out
movsl
sub
mov
dec
rcrl
in
jl
cmp
inc
sbb
mov
push
popf
call
mov
jne
cmp
mov
andl
add
pusha
outsl
push
mov
popf
shl
gs
mov
std
pop
xchg
lcall
rcll
push
cwtl
pop
and
cmp
add
cltd
push
imul
rolb
rcrb
xor
mov
cmc
xor
push
test
adc
inc
negb
xorl
add
loopne
jnp
inc
inc
ret
xlat
inc
das
dec
sub
xor
fisubs
mov
or
pushf
dec
enter
jne,pn
cmp
pop
jp
shlb
into
movsl
xor
in
mov
cltd
cltd
sub
inc
xor
xlat
sahf
out
loopne
in
xchg
jle
jae
ss
mov
loop
adc
test
inc
mov
xor
dec
aaa
bound
inc
addb
and
push
mov
sbb
xchg
loope
ret
adc
ret
xchg
adc
xor
xchg
add
repz
outsl
mov
lea
jg
imul
and
push
sub
xor
inc
in
cmc
loop
fcoms
es
push
cmpsb
hlt
inc
inc
mov
jae
cli
jge
add
imul
add
or
lret
or
cli
add
call
fisttpl
dec
je
pusha
pop
xor
lahf
cmp
jns,pt
cmp
test
pusha
cwtl
repnz
push
inc
mov
outsb
push
inc
push
hlt
cld
and
sbbb
imulb
cld
mov
sub
sub
mov
pop
cmpsb
xchg
int
jmp
jns
xor
addl
mov
iret
inc
decl
xorb
mov
fidivs
sahf
jecxz
and
mov
adc
in
cmpsb
pop
mov
add
andl
stc
jns
xor
push
mov
imul
jp
xor
outsb
sbb
aad
lcall
push
dec
jg
in
xchg
fs
je
lea
xchg
stos
xchg
jae
lahf
jmp
out
adc
or
mov
movsb
xchg
xor
call
xchg
fcom
inc
inc
and
test
in
cmc
pop
int3
cli
out
arpl
pushf
pushf
add
testb
xchg
jle
cld
mov
mov
add
test
push
inc
jg
inc
mov
popf
cmp
push
mov
push
sub
xor
cltd
jle
es
insl
xlat
cmp
loopne
gs
or
mov
sub
jnp
mov
fcoml
mov
les
pop
sti
ljmp
mov
xchg
push
inc
cwtl
ljmp
xor
lods
xchg
xchg
in
mov
cmp
mov
in
andl
orl
jle
xor
sbb
or
push
test
out
pop
jns
sbb
mov
adc
push
fcomps
pop
shlb
in
stos
sbb
cs
and
out
jnp
mov
movsl
lds
sarb
jp
jns
js
xor
negb
xor
imul
fsubrs
fcmovne
sbb
jne
loop
inc
xchg
test
jp
mov
mov
and
call
mov
xlat
in
dec
shrl
add
and
jns
hlt
jp
pop
mov
inc
jecxz
mov
popa
pop
add
insl
cmp
pop
test
adc
je
cmp
cmpsb
js
pop
cltd
xor
dec
notb
fildl
or
lods
dec
into
mov
sbb
xchg
lock
movsb
xor
dec
pop
adc
fstpt
push
push
or
xor
bswap
adc
xor
and
jne
cmp
pusha
pop
cmp
dec
dec
adc
adc
xlat
pusha
in
mov
fsubrl
adc
jg,pn
push
xor
mov
test
cld
add
mov
push
movsb
xrelease
pop
sbb
int3
movsl
lahf
inc
into
or
push
lock
lods
jp
jge
loop
cwtl
xlat
mov
jnp
roll
test
dec
xchg
in
jge
dec
or
or
stc
lods
bound
call
push
mov
imul
icebp
pop
test
in
xor
das
mov
add
jae
push
out
out
stc
outsb
ljmp
add
ficoml
lahf
cmp
ja
dec
scas
imulb
and
push
add
add
or
cmpsb
lds
sbb
aam
mov
stc
sbb
in
scas
pop
cli
pop
cwtl
mov
movsb
mov
adc
add
jecxz
cwtl
add
sub
les
repz
mov
test
stos
dec
ret
out
cmp
stc
loop
lds
cmpl
out
dec
mov
jnp
inc
jge
rcll
mov
test
cmc
daa
bnd
lds
sarl
and
cld
mov
xchg
pusha
neg
jl
lods
mov
andb
ss
push
icebp
sbb
sbb
fists
mov
jp
scas
shll
sarl
adc
push
sbb
les
jb
xor
or
inc
es
pop
or
mov
and
ljmp
add
jmp
mov
mov
push
pop
fimull
xor
mov
in
mov
push
out
adc
cmp
xchg
mov
subb
les
sub
mov
fsubr
and
movb
fmull
cmc
int
xor
aas
dec
and
sbb
cwtl
cli
mov
das
sbb
mov
stc
je
push
pop
iret
xorl
push
mov
and
ja
std
cmpsb
rorl
pusha
fsubp
sbb
inc
push
and
xchg
ror
out
xor
push
pop
jne
or
inc
mov
adc
pop
rolb
movsl
fadd
cmpsl
ret
mov
pusha
dec
pop
test
pop
js
popa
sarl
mov
cs
fcmovb
testb
in
sub
leave
sub
pop
icebp
xchg
repz
mov
sub
loop
push
popl
or
pop
pop
sbbb
pop
stos
cmp
cmp
fstpl
mov
adc
es
jmp
iret
cmp
hlt
aaa
push
mov
push
adc
pushl
jge
pushf
pop
std
loopne
pop
rcrb
iret
das
shll
inc
jae
sub
icebp
or
adc
xor
pop
cmpsb
jmp
clc
add
stos
and
sarl
jo
xchg
sti
loop
out
dec
mov
pop
dec
sub
xchg
sub
adc
add
test
mov
and
repz
test
sub
adcl
repz
push
pop
add
pop
movsl
iret
xchg
or
mov
dec
sub
rcrb
fs
xor
mov
in
std
sub
push
int3
xchg
xchg
aas
add
mov
push
xor
xor
jg
xchg
cmp
scas
xor
mov
cmpsl
mov
mov
mov
mov
cwtl
mov
pop
fisubl
stos
xchg
adc
in
adc
dec
xor
xor
push
out
sub
push
inc
lods
sti
stos
jnp
add
insl
mov
pop
out
int
pushf
add
test
inc
mov
roll
pop
lret
mov
push
pop
jno
cltd
mov
aad
ret
out
and
pop
pop
mov
or
jne
in
or
lcall
xor
aaa
sub
fldcw
test
into
mov
pop
add
inc
cmpsb
xchg
mov
pop
xor
nop
cmpl
push
pop
cmp
cmp
hlt
push
loopne
ljmp
mov
cwtl
stc
aam
inc
sub
jns
lds
mov
test
outsl
push
sub
jo
outsb
mov
add
mov
or
test
xchg
mov
xchg
and
sbb
aad
adc
lret
shl
popa
icebp
push
pop
mov
adcl
out
pusha
ficomps
add
sbb
cmc
push
inc
orl
in
scas
push
test
mov
ljmp
xor
ljmpw
mov
pop
xchg
aam
dec
pushf
add
cs
jmp
jl
pushf
xor
imul
mov
push
rorb
inc
out
les
mov
in
call
mov
lods
cwtl
inc
dec
lret
sub
lea
add
mov
jle
adc
aam
out
sub
pop
and
and
out
test
mov
adc
in
fsubl
les
inc
sub
in
dec
rclb
xor
push
pop
lods
jno
in
ljmp
xchg
sbb
outsl
outsb
cmc
push
flds
jb
add
cwtl
cmp
clc
sbb
mov
xchg
dec
and
mov
sahf
invlpg
into
dec
scas
pusha
mov
inc
xchg
or
int
sub
lods
shr
fcomps
mov
pop
xor
ret
scas
cmp
dec
xchg
and
inc
and
mov
jmp
ja
outsb
jae
mov
inc
mov
jle
roll
arpl
mov
mov
mov
jne
es
sbb
sub
aam
mov
mov
xor
fadd
adc
and
push
std
and
xor
adc
andl
popf
fwait
add
leave
mov
dec
jle
cmp
add
jecxz
jns
addl
shr
popa
test
mov
push
insb
add
aam
addb
or
out
and
dec
or
xor
pop
notl
hlt
cmp
add
clc
outsb
pop
adc
push
add
sub
rcpps
mov
fsubr
dec
adc
rcll
and
sahf
es
aas
xor
pop
jne
mov
ds
lock
daa
or
cmp
push
push
aaa
add
push
jge
xor
dec
loope
push
mov
aas
sbb
pop
mov
xchg
cwtl
into
stos
pop
xchg
mov
pop
push
lahf
loop
fcomp
dec
stos
imul
and
ljmp
cmpsb
int3
cwtl
ss
dec
test
bound
xchg
jne
jb
out
and
mov
ljmp
loopne
or
cmp
leave
pushf
xor
aam
inc
ja
cmp
xchg
xchg
inc
pop
stc
mov
rcl
mov
dec
iret
cwtl
xchg
jb
xor
sarl
jbe
hlt
push
pop
pop
pusha
push
xchg
imul
dec
sbb
push
arpl
fiaddl
shlb
outsl
pushf
sub
bound
xor
jne
add
lds
jp
push
icebp
push
jmp
mov
lahf
jno
or
fwait
in
mov
mov
into
fnstsw
mov
push
sub
cld
mov
outsl
or
ds
out
mov
cli
fwait
adc
xchg
xchg
loope
push
test
dec
xchg
sbb
pop
push
int
out
cmc
fildll
subb
out
stos
lret
jge
ror
pop
mov
loopne
pushf
jg
xor
out
xor
pop
ss
out
iret
mov
ja
aaa
push
fdivrs
mov
xchg
out
test
and
cmp
add
out
adc
les
mov
sub
lea
cmp
push
pop
and
adcl
adcl
jle
inc
push
xor
fistpll
jbe
mov
sbb
add
and
push
imul
std
movsb
imul
pop
mov
scas
xor
test
adc
jnp
les
xor
cmp
xchg
ja
shll
aas
ret
popa
cld
or
rol
adc
and
cmp
mov
or
out
mov
xor
std
pushf
push
jo
push
lea
pop
cmp
mov
dec
sahf
or
add
sti
xlat
loop
scas
shrb
shll
cmp
xlat
lcall
dec
pop
es
stc
jp
push
xchg
fiadds
shll
in
sbb
call
jmp
cltd
outsb
adc
iret
mov
pop
xor
dec
or
xlat
jns
fsubr
jbe
arpl
arpl
test
inc
fnsave
pop
and
in
adc
outsl
cmp
mov
loopne
xchg
push
xor
lds
push
inc
sub
sbb
jnp
jecxz
test
ret
lret
xchg
shr
js
in
leave
out
jecxz
sbb
aaa
mov
sbb
dec
sbb
stos
sbb
leave
pop
out
push
add
push
xchg
fnstenv
mov
dec
sbb
je
rcpps
add
insl
mov
data16
sbb
aaa
push
out
cmpsb
idivl
xor
outsl
stc
pop
push
repnz
fildl
lods
push
or
mov
push
pusha
rdpmc
ss
arpl
add
setb
sti
mov
cmp
sbb
mov
or
repnz
sub
loop
aam
sbb
pushf
jecxz
roll
pop
outsl
add
or
aas
in
out
push
shrl
jl
add
outsb
adc
rcrb
mov
jbe
das
sub
and
shll
push
es
lcall
add
dec
das
xor
negb
jl
add
arpl
add
or
cltd
push
inc
pop
dec
sbb
mov
add
aas
mov
xchg
and
mov
lea
lock
ja
stos
out
mov
fcmovb
test
iret
push
movsl
cmp
iret
adc
adc
mov
push
cmp
add
add
aaa
shrl
aad
xor
jo
jb
sbb
sbb
int
stos
fcmovnbe
push
or
stos
repnz
icebp
push
mov
dec
cmpsb
push
insl
out
cltd
push
jg
and
jb
mov
mov
test
imul
es
mov
sub
mov
dec
stos
push
fbld
lahf
add
fbld
mov
add
out
xlat
xchg
sub
les
jmp
aam
jge
pop
jmp
test
add
jnp
cwtl
add
data16
sub
fwait
mov
dec
cmp
jmp
mov
mov
daa
xchg
pop
aaa
add
jno
mov
repz
xchg
jmp
mov
dec
cltd
jo
or
pop
fs
push
scas
pop
mov
cmp
mov
jp
mov
and
mov
test
ss
out
les
leave
mov
inc
pop
int3
add
mov
popf
or
ja
or
out
repz
cltd
push
mov
cmpsb
fimuls
jo
sub
jge
xchg
movsb
lds
mov
adc
arpl
cmp
outsb
mov
mov
xor
lcall
xchg
ss
push
mov
mov
insl
out
ja
pop
xor
int
insl
mov
push
jmp
arpl
imul
pop
mov
xchg
cmp
sbb
insl
mov
lock
dec
dec
adc
lahf
mov
movsl
sub
inc
cmp
outsb
gs
push
cld
dec
imul
cmp
mov
mov
ret
repnz
dec
or
sahf
andl
fimuls
mov
push
jecxz
mov
fmulp
shll
sbb
pop
bound
cs
lret
les
pop
xchg
mov
or
out
fs
xchg
sbb
push
sbb
push
in
mov
fdivs
int
and
push
ret
call
dec
hlt
sub
xor
je
adc
sub
lods
cld
inc
cmp
pop
sahf
rcrl
insl
mov
and
movsb
fsub
add
jno
add
xchg
dec
loope
aas
and
gs
in
xor
loop
adc
mov
aam
pop
pusha
subb
aam
pop
pop
xlat
dec
pop
adc
fsubrl
sub
mov
and
ljmp
cmp
and
ret
jae
push
shll
leave
lods
mov
mov
int3
cltd
bound
mov
jns
aam
mov
out
loope
pusha
notb
out
and
jo
mov
lock
lcall
push
mov
push
enter
cmpsl
mov
mov
xchg
repnz
leave
sub
arpl
push
sti
sbb
rcr
sbb
and
and
dec
sbb
pop
cwtl
push
xchg
shlb
daa
pop
push
mov
loopne
mov
mov
shrl
test
push
jne
in
addb
fldenv
dec
or
insl
loopne
mov
lcall
bound
cmpsb
push
lea
inc
mov
dec
cmc
inc
mov
push
jnp
cmp
daa
lret
xchg
inc
mov
and
jcxz
mov
inc
sub
inc
lea
out
mov
hlt
mov
das
test
inc
xorl
fmuls
mov
mov
inc
push
dec
pop
rcrb
dec
call
sbb
shlb
pusha
xor
adc
mov
in
outsb
jmp
pop
shr
push
add
xor
xchg
and
cmp
pop
pop
mov
lods
xchg
ds
or
add
and
pusha
and
pop
in
mov
inc
aam
and
sub
dec
lret
lds
insl
dec
and
stc
aas
mov
bound
jnp
clc
mov
xchg
cmc
jne
clc
or
in
repnz
dec
jo
clc
call
dec
push
mov
fdivl
mov
pop
and
xchg
movsb
lret
iret
movsl
aam
or
in
rol
push
mov
aam
inc
mov
fcmovnu
lds
hlt
insb
push
aam
pop
icebp
mov
cmovge
jl
pop
test
lcall
test
inc
cs
and
cltd
add
in
jmp
xchg
mov
aas
test
lods
add
cmpsl
pop
in
dec
jmp
test
ds
xchg
mov
fwait
inc
bound
lods
cmp
or
push
cmpsb
stc
ljmp
arpl
dec
mulb
mov
mov
lods
adc
mov
inc
jbe
ror
mov
or
imul
ss
popa
pop
mov
and
dec
mov
in
and
mov
and
lods
addr16
cmp
xor
out
pusha
cmpsl
pop
xchg
aaa
push
aas
xchg
pop
inc
jge
sbb
xor
sub
lahf
or
xor
push
sub
iret
movsb
outsl
pop
lret
mov
ud2
xchg
out
pop
test
adcl
addr16
fdivs
dec
lret
mov
jno
scas
inc
and
repz
and
pop
cmpsb
sbb
adc
xchg
out
je
pop
rorl
out
adc
fwait
ret
cmp
in
push
cwtl
xor
fwait
out
mov
cs
data16
test
add
setp
cmp
xor
dec
rorl
enter
shl
add
cmpl
sub
add
mov
pop
daa
inc
pop
push
sti
xchg
and
adc
fnstsw
in
in
add
out
out
icebp
test
mov
inc
ret
outsb
cmpsb
push
jae
xchg
mov
in
sbb
call
lods
mov
ret
cmp
int
xchg
mov
sub
and
ds
xor
and
sub
xchg
insb
daa
out
hlt
punpckhbw
lock
bound
and
cmp
stc
orl
jp
movsl
mov
dec
and
test
jp,pt
mov
data16
std
and
push
mov
mov
jg
mov
add
xchg
mov
pop
aas
hlt
add
mov
fildll
and
mov
rolb
das
and
cmpsl
xchg
popf
xchg
mov
jl
out
aaa
orl
push
xor
ja
in
mov
das
add
xchg
jmp
loop
ljmp
lret
orb
mov
push
dec
mov
inc
jmp
flds
sub
lret
lahf
enter
into
stos
mov
cmp
xor
sub
push
pop
sub
adc
gs
jb
jae
icebp
push
mov
jb
xor
outsl
sbb
in
inc
pop
insl
sbb
push
add
pushw
stos
sbb
cmpb
ror
add
cmpsl
int3
or
outsl
repnz
mov
cmpsb
int
sbb
hlt
mov
ds
shll
push
ds
cmc
pop
int3
insl
jg
or
push
cmp
add
insl
pop
ss
adc
in
test
xchg
sub
outsb
pop
stos
cmpsl
add
jae
lds
cmpl
xor
or
pop
dec
sub
add
mov
inc
jb
push
out
cmp
pop
add
aam
fmulp
xchg
mov
sbb
andb
rclb
sbb
fadd
cmpsl
xlat
data16
pop
and
adc
dec
xchg
lds
xor
ljmp
les
and
adc
subb
dec
lods
pusha
jb
xor
dec
lret
inc
and
insb
add
xchg
notb
and
in
leave
out
dec
mov
adc
push
xchg
inc
lcall
loope
fldcw
sbbb
push
cmp
dec
fisttps
jnp
arpl
sub
mov
arpl
push
jl
mov
xchg
lret
insb
lods
adc
cmc
movsl
jge
or
mov
cmp
lret
repz
jmp
aad
sbb
xchg
aam
in
imul
sub
aam
xorb
cld
mov
dec
lods
or
xor
jl
dec
repnz
fists
xor
out
push
aaa
inc
push
fs
dec
mov
sub
and
mov
adc
loop
fmul
dec
nop
jne
pop
push
popf
xchg
xchg
arpl
decb
inc
mov
das
push
arpl
xor
adc
lock
adc
or
inc
loopne
adc
jb
add
repnz
jae
xor
sbb
test
ljmp
mov
cmpsb
jae
mov
dec
pop
add
dec
xchg
inc
inc
lret
stc
dec
inc
add
lcall
sbb
mov
cli
inc
repnz
lret
add
jle
add
stos
cmc
dec
add
mov
imul
mov
outsl
mov
cs
in
or
addr16
in
fdivp
scas
mov
ror
rcrb
sbb
fwait
in
pop
push
xchg
cli
push
cld
add
push
cmp
jmp
xor
sub
loopne
test
jno
pop
leave
mov
shr
sub
rorb
lods
jl
pop
inc
aad
daa
fiaddl
nop
push
stc
dec
pushw
dec
xchg
add
pop
cs
std
sti
inc
movsb
subb
fidivrs
adc
cltd
jmp
or
adc
sub
cmp
std
cs
test
pop
fwait
lea
cmp
push
cmpsl
xchg
add
fneni(8087
xchg
dec
cmp
into
push
hlt
ljmp
push
dec
add
mov
movb
adc
push
adc
jnp
or
adc
rcl
jae
xchg
mov
pop
mov
xlat
stos
cmpsl
sbb
mov
sub
imul
sub
sahf
outsb
loop
jg
sbb
jmp
inc
dec
add
add
jl
add
or
sbb
lret
insb
pop
subl
lods
ljmp
sbb
or
enter
and
test
and
hlt
das
mull
mov
je
dec
addb
jb
notl
mov
in
pop
inc
les
sub
jne
sbb
inc
jnp
movsb
xlat
dec
xor
icebp
faddl
push
lea
adc
enter
mov
jp
mov
cmp
xor
je
icebp
pop
add
js
les
xchg
out
pop
shrb
adc
add
pop
jle
mov
mov
adc
shrl
cmp
jnp
mov
xlat
mov
cs
push
mov
testb
sub
push
mov
cmp
mov
adc
aas
or
cmp
mov
rcll
or
fidivs
rorl
and
push
jne
sbb
movl
cli
mov
xchg
insb
cmp
fcomps
mov
mov
iret
push
xchg
sahf
loope
outsb
inc
arpl
leave
outsb
add
lea
jmp
sbb
and
and
out
mov
mov
mov
or
ficomps
mov
lret
je
xchg
push
xor
outsl
cmp
sub
scas
pop
dec
test
mov
imul
shrl
fimull
pop
ja
pushf
into
cltd
scas
aas
lcall
push
mov
cmp
cmp
test
lret
pop
out
es
outsl
mov
out
or
fstpt
jae
sub
shlb
xor
mov
jl
dec
jl
jl
mov
add
cmp
jno
out
sub
in
cmp
mov
shrb
dec
xchg
and
inc
pop
sbb
sbb
jb
imul
jmp
jbe
add
jmp
sub
aad
in
xchg
xchg
push
cmp
dec
stos
sahf
xor
pop
and
add
fisubrs
push
dec
mov
cmpsb
popf
xor
pop
inc
leave
push
ds
pushf
loopne
outsl
and
push
push
push
subl
or
ret
mov
mov
and
mov
push
aas
push
test
cmp
in
mov
mov
pushf
dec
sbb
xor
mov
push
dec
mov
lret
sbbl
mov
push
dec
jbe
inc
loopne
rcl
into
dec
aas
pop
cld
outsl
add
push
and
ja
lret
add
lds
jns
mov
stos
pop
adc
notl
scas
sbb
adc
mov
sti
in
jns,pt
hlt
adc
mov
adc
hlt
pop
mov
inc
sub
pop
push
popa
lock
aad
pop
fucomp
arpl
sti
sbb
icebp
or
pusha
jno
adc
fistpll
sub
sub
js
mov
jo
int3
xchg
pop
cmpb
lds
mov
pop
pusha
push
or
mov
imul
fldt
add
xor
jbe
pop
aad
pop
mov
mov
or
repz
lahf
lods
fstpt
outsl
sub
add
fdivs
inc
jb
stos
mov
loope
xchg
loopne
daa
movsl
outsl
push
shll
inc
sbb
rcll
or
inc
push
mov
sub
cld
imul
iret
sbb
add
sub
stos
lcall
inc
imul
push
stos
mov
rorb
sub
out
add
int
cmp
inc
fs
xchg
imul
inc
sbb
std
mov
push
jo
push
pop
je
repnz
or
ficoml
notb
mov
sahf
je
pop
mov
mov
mov
out
lahf
nop
das
cmp
sbb
and
inc
lcall
xor
pop
mov
popf
nop
jne
mov
adc
fwait
lret
push
mov
xlat
mov
mov
fs
loop
stos
cmp
enter
cmc
stos
je
add
imul
and
push
dec
pop
push
scas
nop
in
mov
cmpsb
repz
loope
sub
lret
cwtl
mulb
inc
push
test
or
out
xlat
dec
cmc
mov
jmp
push
jnp
inc
push
push
movsl
lret
movsl
lret
mov
mov
sub
mov
lods
mov
mov
or
inc
and
shll
repnz
popl
mov
jmp
mov
out
fisttpl
dec
sub
xchg
dec
xchg
mov
mov
cld
mov
mov
in
rorl
jb
cmp
cmc
jge
les
addl
jl
inc
out
inc
and
push
ret
pop
mov
ret
sub
ja
enter
pop
iret
and
mov
pop
mov
lahf
and
sbb
movsb
push
xor
int
push
xor
sbb
xchg
je
dec
xlat
std
ljmp
cmc
inc
hlt
in
ret
fwait
fwait
or
hlt
xchg
mov
scas
sub
out
loopne
push
lock
scas
jno
or
cmp
ljmp
and
push
outsb
nop
pop
bound
rclb
jge
fisubrs
jecxz
push
movb
je
add
mov
and
and
cmpsb
dec
sub
test
bound
in
dec
jg
out
cwtl
call
mov
cs
mov
test
fsubrp
jo
mov
dec
mov
push
inc
flds
rcrb
mov
fcmovnbe
xor
icebp
mov
xor
aaa
test
lret
adc
enter
push
sbb
xor
mov
imul
adc
inc
icebp
and
in
cmc
stos
jmp
pop
mov
mov
lods
pop
sti
shll
clc
negl
add
cmp
inc
pop
psrlw
lret
loopne
subl
stos
and
mov
je
cmpsb
mov
ja
cmp
sub
rcr
pop
divb
dec
push
fmuls
cwtl
push
decl
loopne
cld
sbb
adc
mov
in
mov
pop
cs
xor
ret
fidivrs
lret
dec
mov
push
cmp
shl
aad
call
enter
sub
mov
dec
scas
loop
jbe
adc
mov
je
repnz
pop
inc
in
sarb
pushf
adcl
dec
xor
ja
int
add
leave
mov
mov
cmp
lock
sub
sbb
out
in
test
jnp
jmp
in
mov
pop
sbb
adc
aam
clc
ljmp
mov
cmp
mov
frstor
adc
xor
in
pusha
mov
sub
push
xor
sbb
sbb
lods
orl
into
xor
or
push
add
dec
cmp
aam
xchg
dec
mov
and
xchg
push
ds
mov
icebp
xchg
cmpsb
jl
push
jb
push
mov
and
push
repz
fiadds
push
jnp
dec
adc
inc
mov
or
shrb
stc
jbe
xchg
mov
scas
xchg
pop
cld
cmp
arpl
lods
pop
mov
fldenv
and
xacquire
loopne
push
mov
clc
push
inc
sahf
mov
dec
and
pop
mov
add
adc
add
daa
fucomi
cmc
and
jbe
add
mov
xchg
pop
lahf
jbe
aas
cmpsl
dec
fbld
movsl
inc
hlt
out
fidivrs
xchg
sub
ljmp
shr
in
xchg
or
ret
shrb
cmp
loope
adc
popf
in
aas
xchg
add
and
mov
cmp
mov
pop
mov
and
xchg
push
jl
test
outsb
arpl
mov
repnz
pop
mov
xor
test
outsl
jno
imul
add
repz
dec
push
les
imulb
jl
lea
test
xor
sahf
out
jle
fidivl
mov
fnstsw
xor
jo
adc
sbb
xchg
sti
xor
mov
inc
push
mov
clc
ficompl
aad
adc
loop
or
insl
insl
xchg
or
aam
adc
pop
push
jae
cmp
adc
adc
hlt
sbb
jmp
rorb
xor
push
push
pop
ret
movsb
cs
push
ljmp
test
imul
adc
xchg
xor
push
stos
mov
lock
lahf
or
push
jl
sub
pop
jno
xchg
push
data16
repnz
pop
sub
pop
xchg
cmpsl
or
adc
into
clts
and
lcall
cmp
sbb
xlat
adc
jg
addr16
sbb
insl
arpl
add
xor
sub
cld
xchg
and
pop
dec
pop
sub
mov
xchg
cmp
mov
cmp
inc
out
fwait
and
push
or
roll
xchg
cmpsb
imul
clc
ja
push
out
mov
mov
sbb
fidivl
add
xchg
shrl
pop
or
in
push
pop
call
ds
add
aaa
cmp
fbld
jle
call
lahf
jecxz
stos
push
mov
scas
cmpsb
addr16
or
ss
mov
fnstenv
sbb
xchg
mov
jbe
mov
add
sahf
or
inc
pop
add
notl
dec
ret
inc
idiv
enter
or
dec
aaa
fdivr
out
test
aaa
in
jp
aaa
pop
int3
dec
into
xor
repnz
aaa
add
cmp
push
test
out
mov
pop
inc
ja
xor
stos
and
addl
push
nop
inc
test
out
shl
jl
pop
mov
repnz
lahf
int
les
sub
in
addr16
mov
cmp
in
push
adc
and
push
push
mov
xor
loop
mov
dec
pusha
cwtl
stc
push
cmp
inc
xorb
and
mov
test
pop
mov
cmpsb
dec
data16
jb
insb
push
or
jo
mov
adc
dec
pop
mov
ljmp
push
mov
imul
push
and
and
aam
push
arpl
in
mov
sbb
pop
in
push
sarb
cmp
loope
sub
test
pop
iret
bound
icebp
addr16
jae
xchg
mov
test
sbb
push
sbb
les
repnz
dec
fiaddl
bnd
and
fisttpl
adc
fdivs
out
ret
sbb
mov
mov
xor
ja
rcrl
je
xor
subl
stos
add
dec
mov
sarl
inc
cmpsl
inc
push
stos
mov
fs
xchg
movsl
mov
in
push
sub
aad
lock
imul
sbb
add
mov
stos
jb
dec
xchg
add
ror
inc
mov
push
mov
jae
xor
out
pop
cld
xor
adc
icebp
dec
aaa
push
mov
psubw
mov
xor
jo
les
fdivs
sbb
out
addr16
mov
js
cmpsb
stc
xor
dec
jo
add
lret
mov
jge
cltd
pop
pop
cld
jge
imul
push
test
sbb
jge
mov
sub
and
push
mov
cmp
xor
cmpsl
insl
enter
sti
idivl
inc
pop
repnz
push
mov
int
jno
jg
xchg
mov
jp
jne
sbb
cmc
movsb
test
xor
dec
enter
lahf
pusha
dec
sti
aaa
add
jns
mov
inc
out
xor
xchg
ds
and
je
imul
pop
int
sarb
jns
sbb
cld
cli
lock
cmp
lret
test
movsb
fdivrs
fldcw
sub
push
fidivrl
cmp
lds
dec
push
mov
mov
icebp
fstl
ljmp
ljmp
movsl
clc
test
dec
andb
cmpsb
outsb
shl
sub
outsb
sbb
and
lcall
cmp
xchg
andb
or
adc
insb
jo
daa
cs
mov
shl
mov
loop
shlb
cmp
jge
loop
in
adcb
mov
push
mov
popf
xchg
mov
and
jne
mov
lock
lahf
jnp
inc
cmc
mov
mov
push
js
sub
mov
mov
lahf
sbbb
ss
cmpsb
lcall
cmp
xor
out
int
rolb
mov
movl
and
mov
adc
mov
adc
inc
or
fisubrs
inc
push
or
adc
fistpl
add
cli
mov
push
push
je
push
mov
ret
xor
lcall
sub
lds
out
testb
test
jo
cld
jns
ja
ss
add
adc
call
or
mov
nop
pop
shrb
test
int3
push
push
cmp
or
fcoml
push
xor
cmpsl
dec
and
and
inc
cmp
ret
sbb
aad
sbb
scas
mov
out
sbb
fs
rorb
test
rcll
jl
pop
or
cmovno
icebp
dec
bound
inc
ret
cmp
sub
test
int3
mov
cwtl
pop
push
mov
incb
out
and
inc
dec
stos
jnp
mov
xchg
dec
shll
mov
fbld
cmp
dec
xchg
es
in
shll
fucom
imul
cwtl
push
das
das
jo
mov
cmp
dec
divl
xor
lcall
in
pop
jbe
ret
loop
cmc
inc
adc
mov
or
sub
adc
mov
cmp
leave
jnp
das
scas
lock
xor
repz
fistps
das
mov
fistpll
inc
incw
filds
test
inc
xchg
mov
xchg
mov
shrl
ret
or
in
or
shll
cmpsl
cwtl
xor
fdivrl
repz
dec
mov
sbb
stos
cmp
insl
shll
jg
sub
xor
pop
sbb
pop
adc
jne
add
fstpt
stc
mov
fldt
jb
in
pop
adcb
dec
in
sbb
pop
sbb
out
pop
icebp
icebp
xchg
shr
inc
push
ret
repz
popf
adc
and
xor
or
xchg
cmp
push
imul
ljmp
popf
mov
cs
sbbb
fmulp
mov
sarl
dec
mov
lock
ljmp
or
pop
repnz
int
mov
xor
dec
mov
shrb
loope
mov
rcl
js
out
dec
adc
xlat
movsl
lret
pop
cmp
inc
icebp
faddp
ja
pop
push
mov
mov
sbb
fstpl
pushl
shrb
stc
and
and
add
adc
in
lret
ret
addr16
stc
loope
aaa
movsl
gs
clc
loope
xor
decb
push
sub
mov
in
jecxz
sarl
in
xor
mov
in
insb
and
cmp
add
sbb
rolb
pop
adc
imul
xchg
add
xor
loop
xchg
pop
lods
ss
cltd
loop
stc
pop
cmpsb
xor
xchg
popa
out
jmp
ljmp
ret
je
clc
jmp
push
adc
mov
and
cwtl
dec
push
mov
fs
popf
mov
data16
mov
push
adc
scas
loopne
loop
jne
scas
inc
insl
lds
aaa
push
mov
inc
mov
lret
fs
mov
int3
mov
leave
in
mov
adc
xchg
mov
shrl
dec
sbb
mov
push
and
xchg
push
pop
xor
mov
pxor
out
mov
sbb
or
out
and
push
cmp
push
fstps
mov
sub
imul
dec
dec
mov
adc
cmpsl
inc
stc
out
xchg
adc
sbb
sahf
lds
imul
fmul
jnp
daa
int
dec
jge
sub
sub
mov
pop
xor
adc
mov
lods
nop
inc
sbb
rorb
push
dec
jb
idivb
sbb
mov
xchg
mov
add
nop
test
mov
add
scas
adc
xor
into
les
test
adc
loopne
jecxz
push
je
xchg
shlb
mov
inc
pop
in
dec
test
inc
testl
test
xchg
lods
or
arpl
out
inc
jge
xor
shlb
hlt
pop
repz
sub
and
test
fnstenv
arpl
out
sub
jmp
rorb
xchg
jl
popa
lret
repnz
xor
xor
pop
icebp
adc
sub
push
iret
mov
jmp
mov
push
test
xchg
flds
mov
cmc
xor
lods
mov
mov
sub
aaa
js
cltd
imul
mov
movsb
xchg
leave
lahf
jg
jmp
jae
inc
push
xchg
xchg
xchg
xor
xchg
loop
rcrl
adc
shlb
mov
int3
jp
lods
pop
add
repnz
mov
mov
jle
addr16
sbb
push
cmp
aam
mov
push
mov
jbe
jne,pt
xchg
test
sub
jg
int3
sub
xchg
loop
mov
movsl
dec
jae
out
ljmp
stos
mov
push
add
repnz
and
adc
int
nop
xlat
lea
mov
daa
dec
loopne
sbb
ret
mov
lods
mov
dec
dec
iret
pop
imul
andb
in
pop
cmpb
arpl
shl
adc
mov
lcall
frstor
sub
jbe
mov
jmp
sbb
jo
sub
js
cld
inc
cmpsl
or
jbe
inc
pop
int3
mov
push
cmp
mov
fstpl
in
and
ja
and
xchg
adc
inc
addr16
dec
pop
push
xor
outsb
in
sbb
jne
push
xor
adcb
lret
adc
movsb
insb
sub
leave
push
add
rcr
xor
fistps
mov
push
add
call
pop
stc
inc
jnp
add
inc
lods
xchg
fs
adc
mov
pop
lods
mov
lock
jle
movntps
push
mov
and
inc
ljmp
cld
fidivl
lock
fstp
out
lock
cmp
cltd
adcl
in
rolb
andb
adc
clc
mov
int3
mov
addr16
xor
adc
fistpll
out
mov
gs
insl
mov
jne
jp
sti
push
and
test
ljmp
cmp
fnstenv
fwait
jne,pn
or
loopne
mov
clc
xor
cmc
popf
sub
rcl
xor
cmpsl
shrl
frstor
fcoms
sub
sbb
or
mov
insb
iret
pop
xchg
mov
pop
mov
sub
pop
loop
arpl
popf
push
lds
jno
daa
sub
ljmp
add
das
outsl
bound
repnz
cmp
loope
and
inc
fwait
jmp
cmp
jns
loopne
add
imul
or
subl
push
adc
or
and
fcoms
rcl
mov
int3
lods
daa
arpl
fldpi
and
loope
pop
jmp
cmpsl
std
sub
xor
in
xor
out
mov
bound
mov
mov
int3
insl
adcl
mov
jno
mov
mov
f2xm1
xchg
dec
add
scas
data16
jg
fimull
cld
push
aad
cltd
jns
fidivl
pop
pop
adc
inc
test
jmp
inc
mov
or
lea
jl
insb
out
stos
movsl
mov
or
outsb
pop
shl
or
xchg
sbb
loop
rcl
add
les
int3
loope
sbb
jne
je
fwait
addr16
mov
ss
loop
and
adc
mov
push
inc
cltd
jnp
push
test
xchg
sub
xchg
sbbl
scas
insl
out
jo
imul
inc
push
mov
loop
inc
rorb
adc
inc
lea
jbe
jns
xchg
aad
pop
stos
popa
sti
shlb
xor
and
xor
stos
xchg
xor
xlat
nop
lods
pop
pop
subl
ds
fists
jg
jmp
aad
mov
aaa
mov
fildll
dec
push
mov
gs
popa
jb
and
cmp
psadbw
fwait
xchg
rclb
inc
jno
mov
jns
inc
mov
or
shlb
sub
iret
int
adc
inc
or
xchg
addr16
imul
mov
sbb
mov
iret
lahf
xchg
add
mov
ljmp
fistpll
in
cmp
sbb
sbb
and
gs
mov
mov
jmp
push
into
mov
insl
inc
imul
pop
je
pop
or
nop
jp
nop
cmp
imul
rol
push
push
pop
push
add
lods
rolb
pop
dec
xchg
ret
xchg
lret
inc
add
inc
xor
sbb
pandn
push
insb
mov
push
mov
inc
or
jle
jb
lods
aaa
ret
sub
sub
not
jl
add
cmp
push
test
adcb
and
fs
push
dec
jmp
jo
movsl
mov
fldt
xchg
movsl
pop
cld
cmpsb
xlat
jle
xchg
idivb
xor
scas
or
popf
movsb
in
jne
lods
pop
sbb
mov
popa
and
insb
or
and
fnstenv
jae
das
sub
cmp
lahf
add
les
add
mov
sbb
mov
adc
mov
cmpsb
jae
cmp
fisubrl
loope
shrb
mov
cmp
fsubrs
dec
fists
inc
pop
les
fdivrl
in
jmp
xorb
xchg
lds
sub
cmp
cmp
inc
cmp
add
sub
sub
mov
fwait
ret
adc
loop
loopne
pushf
jno
cltd
dec
adc
dec
call
jb
arpl
sbbl
ja
mov
cmpl
cwtl
adc
int
addr16
inc
jo
dec
filds
out
adc
xchg
mov
into
in
dec
aaa
and
ds
sbb
ffreep
jmp
xchg
xchg
adc
adc
jo
adc
jg
cmp
mov
test
jle
pop
mov
repnz
xor
imul
fldenv
and
xor
dec
scas
jp
fcomp
add
push
in
mov
xor
lahf
mov
sbb
bound
int3
mov
ficomps
dec
in
jmp
mov
dec
test
mov
lea
outsl
dec
inc
cmp
jl
sub
pop
push
aaa
negb
pop
jns
xor
push
xor
sahf
sub
bound
popa
sub
inc
cltd
mov
cltd
mov
lcall
loopne
sbb
xor
or
mov
popa
ret
dec
pop
mov
push
je
mov
inc
repnz
lods
sub
inc
sub
pop
xor
daa
inc
jo
fs
js
dec
inc
add
jae
inc
movsb
cmp
mov
das
test
sub
cmc
push
cmp
test
out
fcomip
xchg
data16
aad
dec
mov
jb
cmpsl
test
addr16
shll
sti
push
dec
and
or
pop
and
mov
stc
sahf
or
jmp
sub
scas
inc
lock
pop
jle
mov
dec
jle
or
rolb
int3
test
pushf
mov
ds
pop
ljmp
push
call
jne
sbb
cmp
int
ds
insb
data16
mov
fs
lods
cmp
nop
add
cs
or
pop
outsl
sub
and
mov
scas
mov
outsb
pop
lcall
push
sub
mov
push
es
mov
pop
test
dec
mov
cltd
mov
shlb
dec
push
ret
ljmp
adc
adc
add
loope
jne
adc
cli
subw
pop
cs
loop
push
fwait
in
cld
and
scas
cltd
or
dec
daa
inc
inc
out
outsb
inc
hlt
arpl
mov
insb
push
and
lods
jns
fidivrs
jae
and
aaa
cs
cli
aas
mov
xlat
stos
cmc
jle
inc
push
or
xor
dec
pop
dec
popf
add
scas
pop
mov
das
into
adc
filds
pop
jae
push
imul
mov
mov
mov
stos
cmp
call
and
popf
test
mov
ror
scas
pop
mov
inc
hlt
mov
mov
stos
push
add
out
and
xchg
push
addr16
inc
dec
jecxz
dec
sub
xchg
test
fcmovne
int
xchg
cmp
push
adc
pop
enter
scas
decb
aam
and
movsl
neg
fsubrs
push
adc
cmp
xor
repnz
cmp
arpl
std
lcall
les
push
out
cmp
push
inc
mov
or
xchg
adc
xchg
push
test
test
lods
fcmovb
cmp
mov
mov
push
movsl
jns
cmp
add
test
scas
fwait
dec
test
and
outsl
fsts
push
pop
add
and
cmp
pop
pushf
in
cmp
adc
adc
jp
cmp
insb
sub
clc
push
mov
lods
loope
pop
xlat
sti
and
hlt
out
cmp
fs
xor
ljmp
push
and
cs
sub
fists
inc
add
repnz
jno
mov
and
frstor
pop
jge
mov
insl
lret
sbb
into
jmp
bound
xor
lock
addr16
pop
adc
pop
idivb
fs
cmp
pop
insl
lcall
pop
test
hlt
mov
cmp
push
ja
pop
cmp
aaa
and
push
inc
bound
dec
inc
xchg
in
jae
push
out
jle
push
sbb
in
inc
dec
stos
add
or
ds
or
mov
test
les
jecxz
or
adc
push
sub
in
cli
popa
lidtl
dec
sub
push
lock
adc
inc
and
xchg
mov
les
std
pop
test
cmp
enter
jno
outsb
lcall
dec
subl
mov
push
push
mov
push
fs
inc
jle
sbb
cs
and
sbbl
cmp
add
outsl
enter
lods
mov
jnp
fnstsw
push
push
cmpsl
cmc
dec
sub
or
add
push
imul
pop
scas
sarb
lods
jge
xor
inc
dec
jecxz
cmp
and
stos
cld
test
sub
sub
arpl
outsl
xchg
inc
insl
push
repz
and
inc
pop
mov
pop
mov
mov
xchg
mov
sbb
sbb
cs
xlat
dec
jae
pop
clc
xor
rcll
dec
cmpb
sub
pop
addr16
outsb
or
pop
lcall
movsl
add
orl
insb
mov
add
stos
push
jo
inc
adc
fsts
cwtl
pop
outsb
push
ja,pt
dec
xchg
adc
and
mov
call
out
jl
adc
xor
sbb
fnstcw
and
push
push
pop
mov
pop
push
and
lds
shl
cmc
cmpsb
cmp
add
push
js
in
add
push
dec
fnsave
shll
data16
or
mov
adc
push
loopne
outsb
adc
and
cmp
cmp
les
mov
sti
cmp
test
cs
dec
aas
inc
movsb
les
add
lahf
jns
addr16
jno
mov
out
jo
adc
sbbb
ficoml
pop
ss
aas
mov
shlb
xchg
mov
mov
rorb
adc
js
fwait
call
aas
jmp
adc
lcall
push
lcall
push
hlt
out
daa
dec
das
push
push
out
inc
cltd
paddusb
sti
jl
push
leave
stc
pop
cmc
push
and
pop
enter
stc
ss
ja
xchg
hlt
out
cmpl
xchg
dec
test
loope
sbb
push
sbb
popf
cld
in
mov
lret
je
inc
jbe
adc
pop
mov
push
repz
cwtl
inc
jle
add
inc
push
fsts
insb
and
add
sahf
popf
adc
mov
adc
xchg
jle
xor
aad
aam
and
jmp
push
push
into
dec
or
pusha
push
mov
outsl
fildll
push
and
jno
cmpb
sub
add
pop
fnstenv
push
aam
jo
clc
xor
outsb
sub
lock
cmpsb
sub
dec
sub
dec
out
inc
inc
aad
push
orl
jge
je
in
aam
mov
loope
rcr
fdivr
or
mov
addb
cmpsl
mov
jmp
das
add
movsl
out
movsl
ret
dec
iret
clc
jp
dec
add
iret
test
sub
lds
xor
addb
jge
loopne
jg
jae
xor
sub
inc
jl
mov
fcoms
popf
pop
cmp
cwtl
rcrb
and
xor
bound
sbb
aas
hlt
fwait
inc
movsl
mov
imul
inc
sbb
pop
dec
bound
imul
mov
add
jne
add
cmp
sub
aam
mov
std
jne
cld
or
adc
int
sbb
movsl
ds
movsl
fcompl
shll
sub
jle
dec
mov
and
cwtl
loopne
xchg
xchg
or
jns
or
add
add
push
push
out
test
leave
ss
and
dec
icebp
pop
adc
cmp
xorb
adc
dec
pusha
cmpsb
stos
and
adc
jne
or
mov
push
jnp
fstps
adc
fldcw
dec
arpl
cmp
mov
sahf
mov
xor
inc
aaa
pop
ljmp
sub
ja
mov
cltd
ret
jecxz
cld
movsb
dec
sbb
pop
push
scas
aam
jo
xor
inc
mov
inc
xchg
stos
xor
mov
adc
negl
testl
mov
xor
cmpsb
ss
daa
pop
test
outsb
dec
dec
jle
aam
lods
mov
inc
cli
cmpsl
and
add
sbb
mov
leave
sbb
lahf
add
xor
mov
into
stc
mov
lock
cltd
std
xchg
stc
arpl
orb
repz
ljmp
out
inc
xorl
xor
jbe
mov
cmp
addr16
in
dec
loope
hlt
pop
push
ljmp
cmp
pushf
jg
add
push
test
adc
lret
in
loope
data16
mov
push
push
aas
test
jg
outsl
push
pop
repz
nop
fstps
scas
jmp
add
aas
aas
scas
xchg
or
push
les
xor
rol
outsl
adc
mov
xor
push
mov
jo
cwtl
loopne
fisubl
inc
mov
arpl
test
and
push
addr16
jne
adc
imul
xor
movsl
icebp
mov
jmp
dec
or
push
xor
sbb
cli
cmp
push
xor
jmp
xor
xor
add
sbb
test
mov
jo
and
outsl
and
mov
ljmp
mov
or
cs
mov
cmp
in
sti
fcmove
xchg
xchg
lret
and
xor
outsb
rcr
fiaddl
out
adc
int3
add
mov
sbb
adc
sbb
cmp
hlt
jmp
mov
add
popa
jno
loope
xchg
cmp
mov
std
repnz
push
sti
xchg
mov
xchg
mov
aaa
sbbb
push
and
sti
push
cmpb
jbe
pop
out
sub
or
jnp
xor
adc
adc
cmpsb
and
and
or
jnp
clc
ljmp
jle
adc
mov
jg
jo
pop
jne
cmp
frstor
mov
mov
add
xor
insb
inc
sahf
mov
inc
ljmp
and
aad
lret
adc
dec
je
ror
out
lods
pop
scas
das
jg
inc
cmpsl
xchg
sbb
xchg
repz
popf
adc
cs
xorl
or
outsb
sbbb
in
and
inc
nop
cli
test
loopne
int3
xchg
jecxz
push
fdivp
stos
mov
xchg
sub
jae
push
and
lret
push
jecxz
shlb
mov
pop
fldcw
push
mov
icebp
adc
and
iret
imul
movsl
jp
call
xor
out
mov
cmpsb
popa
lds
rclb
mov
jecxz
push
dec
dec
lcall
mulb
pop
jp
xchg
inc
ljmp
daa
adc
stos
js
mov
inc
mov
mov
stos
mov
addr16
into
xchg
jl
pop
movsl
jb
lea
sub
mov
aam
cli
popf
in
sub
sub
data16
aam
frstor
ja
or
mov
pop
cmpsb
jmp
dec
sub
xor
adc
stos
lock
xor
add
leave
fbld
das
lock
sbb
mov
in
testb
or
mov
and
std
int
icebp
push
movsb
in
lock
push
add
or
push
push
shl
ss
ja
aas
cmp
xlat
lahf
add
out
negl
dec
sbb
loopne
push
ret
mov
mov
pop
jbe
jbe
shlb
pusha
roll
pop
lahf
add
sahf
push
and
jno
mov
xchg
outsl
pop
movsl
sbb
push
xchg
pop
xchg
sub
outsb
sub
xor
ja
cmp
bound
imulb
cltd
in
sub
insb
cmp
cwtl
lods
imul
leave
pop
pushf
gs
push
loopne
addr16
es
jl
xchg
dec
fmulp
adc
rcrl
xor
xchg
cmp
out
jmp
jae
rorb
mov
fsts
pop
mov
push
xchg
pop
mov
cmp
push
mov
test
jo
out
int3
cwtl
in
cmp
adc
adc
pop
stc
mov
in
push
adc
ror
mov
call
cmp
insl
shrb
mov
adc
test
xorl
pusha
in
mov
mov
test
and
outsl
sbb
mov
outsb
jmp
out
xchg
arpl
sbb
mov
and
pop
clc
pushf
mov
das
out
sub
adc
rcl
push
rorl
add
xchg
xchg
pop
inc
push
mov
adc
cmp
inc
test
ret
ret
jns
jle
ds
pop
jp
mov
hlt
mov
push
outsb
out
loop
inc
sub
pop
sub
pop
movsl
jb
in
jl
sbb
push
enter
jmp
jbe
pop
adc
in
cld
xchg
and
xchg
movsb
sbb
inc
insl
xor
cli
enter
and
mov
cli
repz
lcall
repz
loopne
jae
mov
jge
mov
mov
loope
xor
ljmp
out
loope
lds
adc
or
repz
sub
jmp
pop
sub
aaa
sbbb
mov
aam
ljmp
inc
fadd
add
adc
and
in
xor
movsb
dec
xchg
sub
sub
loope
fsubp
cmpl
jno
rolb
pop
sbb
gs
mov
jge
sbb
sub
add
push
mov
mov
xchg
mov
adc
dec
clc
int
mov
das
xchg
orl
mov
push
and
xchg
xchg
sub
stos
ja
adc
mov
ljmp
ret
jecxz
outsb
icebp
mov
pop
adc
out
shrb
dec
push
push
add
in
jno
lret
mov
sahf
aam
push
inc
mov
mov
ljmp
fmull
sbb
xchg
loop
and
pop
add
popa
mov
push
jne
sub
mov
mov
or
and
sub
sarl
shlb
xchg
insb
pusha
out
aaa
fisubrl
jle
pop
icebp
or
bound
xchg
mov
xor
ret
add
jnp
fs
adcl
and
sub
and
in
mov
mov
adc
fstpl
scas
repz
das
leave
in
or
cld
cmp
sub
cli
and
cmp
mov
jno
imulb
inc
roll
clc
xchg
mov
inc
filds
xchg
fnstenv
arpl
adc
push
xor
popf
and
pop
cmp
push
mov
enter
push
pop
dec
or
icebp
shr
ror
call
xchg
outsb
fs
or
jmp
fnstcw
mov
rclb
xchg
pop
ret
imul
add
jp
icebp
test
and
mov
test
cli
sub
pop
fnstenv
lods
sub
jg
jb
sbb
movsb
add
es
std
cmp
cmp
pop
pop
daa
mov
fists
sub
lods
mov
and
cmp
insl
push
data16
cs
inc
push
fidivrs
or
adc
or
mov
add
cltd
or
lods
fstpt
out
std
ret
mov
dec
popf
sbb
lret
or
mov
rcrb
addr16
test
inc
das
mov
sub
cmpsb
aad
test
lcall
arpl
jle
jb
loopne
or
adc
fwait
xchg
and
sbb
pop
fstp
cmp
push
enter
push
insb
pop
push
out
sbb
and
adc
sbb
mov
sbb
and
adc
nop
xchg
sbb
insl
movsb
mov
arpl
fcoms
lcall
adc
notb
push
stc
or
stos
pop
test
das
push
cmpsl
out
fdivl
test
push
lods
mov
jnp
inc
ss
sarb
mov
cwtl
test
rcr
pop
rorl
xor
enter
inc
sbb
addr16
adc
out
inc
pop
cld
mov
jp
mov
mov
xchg
pop
dec
and
adc
loop
and
andb
mov
or
xor
jae
in
mov
inc
mov
jle
cmp
mov
add
jecxz
cmp
mov
sbb
push
scas
stos
push
mov
xor
cmp
sub
repz
cmpsl
aaa
push
inc
xchg
imul
xchg
aam
lahf
fistpl
push
daa
rcrb
leave
mov
lea
in
jp
inc
out
xchg
test
and
or
mov
ss
xchg
fs
in
stc
dec
std
in
jg
inc
outsl
shll
adcl
test
jbe
outsb
aas
iret
mov
in
lret
sbb
out
cs
sti
lahf
pop
repz
loopne
ss
sub
movsb
bnd
ret
popf
add
push
ljmp
mov
push
mov
pop
rcrl
neg
movsl
sub
xchg
xor
mov
addr16
sbb
hlt
rolw
or
inc
push
adc
xor
cmp
leave
imul
out
rclb
xor
cwtl
and
pop
and
icebp
or
orb
jecxz
scas
cmc
outsl
mov
adc
inc
cmp
ja
cli
outsb
lcall
int3
out
add
xlat
addl
dec
out
mov
out
in
call
push
xor
inc
dec
mov
loop
rep
ss
int3
popf
jno
xor
loope
dec
je
mulb
mov
hlt
out
rorb
hlt
data16
jge
mulb
jno
sbb
scas
mov
in
fdivs
cli
pop
out
repnz
in
fwait
sub
loopne
sub
cli
push
jl
repnz
sub
into
hlt
mov
ret
test
test
adc
mov
insb
jmp
sti
jle
adc
or
pop
jns
jns
mov
getsec
cli
mov
jbe
mov
fdivrs
and
repnz
jge
out
add
fwait
out
aas
in
dec
loope
lods
notb
push
scas
sbb
pushf
lea
lcall
push
test
addr16
cs
pusha
xor
push
insb
or
mov
adc
cld
xor
incb
pop
test
mov
dec
lock
xchg
pop
test
aaa
lahf
cmp
je,pn
movsl
rcrb
xor
mov
ret
jle
add
adc
add
fimull
mov
or
psubsb
dec
mov
pop
ja
inc
lret
decb
inc
lcall
out
jle
inc
sbb
int3
mov
jo
push
mov
cwtl
and
sbb
or
scas
in
mov
in
cmp
push
push
cmp
sub
in
out
pop
jecxz
xor
jo
iret
cmp
int
int3
inc
jl
js
icebp
stos
lods
imul
cmc
push
sub
imul
movsl
cs
addr16
orl
or
aam
es
pop
mov
jae
movsb
inc
inc
scas
or
sarl
cmpsb
iret
lret
movsl
mov
pop
es
in
mov
sub
test
mov
cmp
adc
jne
adc
cmpb
jle
pop
fildll
pop
cmpsl
call
in
imul
and
sub
inc
int3
les
jo
div
cli
jp
and
fidivrs
sbb
outsb
pop
xor
in
ficompl
stc
push
movsb
sub
push
addl
mov
movsb
ret
xchg
dec
js
shr
adc
sub
insl
das
loope
dec
mov
and
dec
push
jne
and
xor
test
gs
adc
clc
sbb
xchg
lds
and
into
push
jmp
in
cwtl
xchg
mov
iret
mov
lds
xchg
adc
mov
jae
pop
xor
or
adc
insb
insb
je
mov
sbb
mov
mov
jb
push
shrl
adc
pop
pop
adc
fstl
std
mov
imul
xchg
xor
jmp
inc
fnstsw
cmp
jo
fcmovnb
fadds
pop
orl
enter
jl
int3
pop
daa
adc
or
sbb
enter
jno
out
cmp
mov
cmp
sbb
stos
out
ret
dec
cwtl
adc
push
add
stos
xor
das
add
popf
inc
add
in
dec
aas
mov
push
cs
mov
repz
test
inc
inc
mov
or
bound
jnp
pusha
xor
and
les
out
xchg
stc
cmpsl
or
sbb
aam
mov
lock
pop
jns
arpl
fst
mov
lds
add
push
ss
xchg
adc
cmp
stc
inc
test
xchg
mov
push
out
cs
sub
pop
xchg
cmpb
mov
adc
mov
repz
lss
nop
fidivs
movsb
jns
cmp
enter
mov
dec
fistl
mov
fs
lret
push
popf
pop
jmp
dec
cmp
pusha
mov
loope
icebp
jmp
mov
mov
cmpb
dec
std
jo
add
inc
add
and
pop
push
insb
jge
or
xor
in
push
sti
cmc
je
pop
and
test
mov
jle
mov
lods
mov
push
xchg
cmp
fldcw
xchg
sbb
xchg
mov
pop
pop
add
sub
pop
xchg
out
mov
push
test
jb
jmp
dec
jmp
pop
iret
xchg
adc
xchg
inc
push
xorl
es
mov
push
or
fneni(8087
es
xor
xor
inc
loop
leave
rclb
xchg
sub
dec
sahf
loope
and
add
faddp
or
pop
jnp
jbe
and
lahf
and
popa
push
sub
mov
lret
pmulhuw
stos
push
int
dec
cmpsb
repz
addr16
cltd
mov
stos
div
jecxz
mov
loop
lods
pop
sbb
sub
add
cmp
shlb
add
jnp
lret
jnp
mov
scas
adc
add
dec
sub
or
jge
adc
add
in
inc
fmuls
in
pop
jne
cli
lret
xchg
pushf
pop
or
mov
mov
mov
out
pop
mov
add
xchg
sub
push
repz
out
outsl
test
mov
jp
push
push
lods
pop
sub
ret
leave
xor
inc
mov
add
and
movsb
jl
add
xchg
ljmp
sub
dec
cmp
pop
shl
and
or
scas
sub
mov
scas
mov
mov
adc
decl
pop
push
lcall
sub
faddl
addr16
jmp
pop
adc
adc
xor
jl
in
xor
hlt
push
lods
iret
bnd
roll
sub
or
xchg
enter
xor
push
cmp
add
lret
xchg
mov
insl
stos
mov
sub
push
adc
cli
cmpsl
fsubs
leave
popa
divb
jp
punpckhbw
mov
xchg
popa
loopne
rol
cmp
push
mov
jp
sub
cmp
jnp
or
push
xchg
or
in
and
sub
loope
ficompl
adc
jnp
in
dec
arpl
push
cmp
and
inc
into
or
enter
arpl
sub
and
or
xchg
pop
cmp
dec
sub
mov
sub
sub
out
pushf
push
aaa
lcall
data16
bound
xor
inc
adc
xor
xchg
push
push
and
inc
push
mov
sbb
aad
testl
pop
jl
pop
adc
mov
jle
mov
push
lock
hlt
icebp
push
sbb
fdivrs
cmp
jp
and
dec
and
or
es
pop
lahf
xor
add
xor
sbb
jmp
lock
mov
bound
xchg
adc
sbb
jb
cmp
inc
popl
push
sub
call
inc
jle
decb
xchg
mov
shrb
js
pushf
addr16
adc
and
jbe
push
aam
out
dec
dec
jb
aam
and
add
fstpt
mov
jmp
and
es
scas
in
and
lods
int3
add
push
fldcw
dec
in
ret
andb
xor
inc
test
cli
fsubs
add
lds
inc
loope
cmp
aad
xchg
mov
imul
int3
iret
mov
jecxz
arpl
cmp
mov
ja
call
and
stos
xor
jns
dec
popf
rorl
mov
bound
push
repnz
jle
mov
mov
ret
lods
mov
push
cld
das
icebp
cmp
aad
sub
lock
sahf
push
push
data16
ror
mov
and
add
pop
stos
cltd
call
inc
rorb
repnz
fidivs
mov
push
xchg
nop
push
inc
mov
adc
out
xchg
std
adc
ljmp
sbb
adc
mov
sub
pushf
je
xchg
jmp
and
mov
pop
je
repz
xorb
pop
mov
stos
movsl
push
in
xchg
outsl
mov
adc
lea
push
cmp
xchg
mov
scas
ja
dec
xor
dec
lahf
inc
mov
bound
orb
repnz
ret
xchg
jno
repnz
int3
imul
add
pop
lods
pop
iret
inc
addl
pop
xor
int
push
push
fnstenv
inc
push
or
into
xchg
jge
xor
cmp
ljmp
cmp
les
ret
ljmp
popf
fwait
xor
mov
pop
enter
mov
subl
cmp
popf
ds
in
mov
imul
jo
ss
mov
and
mov
xchg
push
loop
and
lret
fdivrs
pushf
mov
test
or
xor
cmpsb
and
adc
incb
enter
cmp
stc
cmp
mov
sub
push
and
sbb
fiadds
cld
lods
out
xchg
jns
jge
mov
fwait
dec
dec
mov
inc
into
lds
cmp
xor
imul
pop
mov
jge
xor
popf
or
insb
pop
dec
mov
xor
mov
push
pop
and
jge
mov
cmp
das
sbb
cmpsb
filds
mov
fst
sti
mov
pop
sbb
insl
pop
xchg
loope
xchg
jmp
cmpsl
xor
xor
mov
cmpsb
sub
xlat
std
cli
mov
lock
sahf
orl
loope
ret
icebp
movl
adc
sbb
cld
cmp
push
es
cmp
repz
mov
mov
pusha
pop
js
imulb
pop
das
mov
scas
fisttps
lret
mov
and
sub
xchg
icebp
rcl
in
mov
add
inc
push
mov
mov
adc
xchg
xchg
addr16
mov
jo
ss
insb
imul
pusha
adc
xchg
pop
stc
or
sbb
rcr
sbb
in
andl
push
mov
pop
outsb
jne
mov
pop
cmp
add
pop
into
out
decb
shl
add
mov
sub
push
lea
dec
daa
test
outsl
mov
shl
xchg
shlb
and
sbb
jb
xchg
imul
icebp
push
test
xchg
push
jmp
lret
cli
dec
lcall
xor
sbb
mov
shlb
iret
xor
push
pop
xor
sub
stc
ja
xchg
add
jnp
xor
mov
lahf
push
arpl
mov
dec
cmp
dec
cmpsl
jecxz
sbb
mov
cmp
dec
scas
adc
pop
repnz
mul
pop
inc
add
mov
dec
pusha
cs
lcall
test
xchg
lods
enter
leave
int3
lea
cwtl
jle
mov
movsl
ficomps
fwait
sub
movsl
or
cmp
sub
ret
sub
push
xor
out
lahf
int3
lahf
loop
or
xchg
sbb
fisubrs
test
outsb
xor
sub
jae
mov
addb
popa
or
mov
daa
mov
jle
xor
out
cltd
out
imul
incl
mov
loop
imul
add
pushf
cmc
mov
pop
and
jg
xchg
es
sti
ret
call
dec
xlat
aas
pop
popa
xchg
and
aaa
mov
sub
ds
std
fsubp
mov
lret
inc
icebp
ret
stc
icebp
imul
pop
jecxz
cwtl
jne
adc
or
iret
jle
and
in
fsubl
xor
inc
es
mov
rorb
lock
sbbl
out
adc
push
ss
movsb
sbb
mov
dec
sbb
inc
add
pop
sbb
mov
mov
sbb
or
shrb
jg
pusha
pop
inc
inc
jmp
mov
mov
imul
popf
std
scas
jecxz
repnz
mov
sbb
xchg
icebp
xor
sub
jle
test
jns
stos
imulb
out
xor
fld
push
lods
into
mov
add
repz
xchg
jp
pusha
cli
loope
pop
adc
xchg
xchg
int3
lods
jns
sub
ljmp
sbb
jmp
fstpl
push
add
lret
and
inc
adc
iret
lods
into
add
cmpsl
shl
pusha
mov
or
arpl
rcll
fldt
insl
mov
and
lcall
repz
pop
add
stos
dec
clc
push
repz
pop
lcall
pop
std
mov
lahf
aas
xor
addr16
mov
lds
aad
push
cmp
mov
mov
movsb
jo
out
lcall
addl
mov
cmp
cld
xchg
les
rcl
pop
xchg
mov
jp
dec
dec
shr
cmc
xchg
data16
flds
or
into
xchg
fcoml
insl
ds
push
xor
mov
fsubrl
mov
dec
mov
pop
add
xor
das
jl
es
ret
testb
imull
cmp
mov
sub
mov
cmp
mov
out
xchg
jge
fs
jmp
inc
or
jns
adc
pushf
ss
insl
mov
nop
cmp
iret
out
imul
jnp
cmp
lock
cmpsl
in
dec
fistpl
cmp
lret
test
fistps
in
cmp
xor
jp
jp
jl
xor
dec
stc
xor
addr16
xchg
pop
sbb
pop
clc
repz
decl
xor
jecxz
mov
pop
sub
in
mov
fwait
test
mov
adc
xor
pop
or
sbb
sbb
popa
in
add
das
mov
push
ret
out
adc
jbe
push
xchg
imul
pop
out
lcall
jmp
data16
lods
das
fidivrl
mov
and
pusha
out
mov
jg
ljmp
inc
mov
fisubrs
cs
aaa
mov
xor
fs
loope
js
mov
and
push
xchg
cmc
in
jno
outsl
mov
xlat
loop
mov
and
jecxz
adc
adc
out
and
or
shrl
mov
fsubr
das
in
popf
lds
and
mov
xlat
aaa
loope
jno
adc
fwait
cmp
fldenv
push
jno
outsb
nop
mov
lcall
push
jecxz
mov
push
leave
ljmp
dec
call
add
dec
ret
mov
enter
push
mov
imul
arpl
push
ljmp
cwtl
je
pusha
ja
jb
fsubrp
pop
jmp
addr16
imul
fnstsw
push
pop
sbb
int
pop
adc
filds
or
scas
cmpsb
dec
and
sahf
mov
dec
cs
insb
pusha
fs
ss
push
xor
pop
rolb
ja
arpl
cmp
test
cmpsb
mov
bnd
insl
add
pop
and
mov
and
negb
insl
sbb
push
rolb
shl
dec
int3
ret
and
jmp
inc
ret
pop
sar
ss
rcl
je
add
addr16
lods
or
add
aam
aaa
inc
pop
cmp
std
aad
decb
test
mul
sarb
gs
popa
mov
dec
sbb
pop
push
icebp
push
xchg
mov
or
adc
pop
daa
test
into
dec
cmpsl
pop
xchg
mov
inc
and
inc
mov
data16
shrl
ja
cmp
or
das
or
inc
dec
mov
push
and
mov
neg
aas
cmp
and
out
push
iret
fstpt
xor
jns
or
sbbb
push
dec
adc
loopne
jne
fldcw
sbb
dec
imul
shll
cltd
fwait
pusha
sahf
lcall
pop
dec
xchg
sbb
jns
xlat
pop
into
mov
dec
cmp
mov
call
movsb
fbstp
test
jmp
cmc
mov
add
fwait
sarb
adcb
das
nop
jne
jp
xor
aam
mov
jo
mov
mov
movl
repnz
adc
stos
iret
pop
add
lods
xchg
xlat
xchg
jle
enter
cltd
sahf
into
in
out
dec
ret
je
scas
pop
movb
add
repz
ret
lods
xchg
movsb
dec
ret
fildl
incl
mov
cmp
jae
repnz
adc
or
xchg
pop
test
xor
and
cld
xor
clc
dec
xor
lret
stc
mov
jo
mov
stc
std
arpl
xchg
hlt
push
mov
dec
sub
pop
pushf
mov
icebp
stos
cmp
and
lea
push
add
dec
in
fcmovu
lock
movsb
jmp
inc
mov
test
das
jae
xchg
adc
xorb
cmp
sbb
je
push
mov
test
sub
jbe
or
adc
ss
pop
push
xchg
int
mov
sbb
scas
inc
movsl
inc
cli
lcall
adc
jnp
data16
pop
rclb
insl
pusha
and
adc
inc
ret
jge
das
in
push
add
pop
cmp
jge
fstpt
arpl
int
sti
push
je
pop
insl
test
xchg
jbe
icebp
push
xchg
cmpsl
ja
stos
cmp
push
sbbb
fistl
icebp
pop
sahf
xor
pop
cmp
pushf
cmp
xor
fistpll
sub
or
push
and
mulb
add
dec
stc
inc
fldt
jns
xchg
into
out
cmp
es
push
push
stos
mov
jae
dec
int3
jl
out
es
notl
add
inc
lea
call
inc
mov
imul
jmp
movsl
pop
cmpsb
cltd
mov
cltd
pop
popa
mov
mov
lret
mov
sub
lahf
int3
xchg
aas
dec
cmp
jne
and
jbe
sbb
imul
push
rol
and
cmp
add
aad
jne
je
ret
xlat
out
push
cli
jne
adc
in
lret
jp
cmp
fisubs
mov
adc
jmp
in
push
push
rol
jmp
cwtl
cmpsb
inc
and
jl
dec
jp
js
lret
jecxz
mov
push
repz
mov
test
dec
ret
adc
sbb
mov
xchg
mov
jecxz
mov
je
jb
jmp
test
rcl
out
lretw
cmp
prefetcht2
sti
inc
cmpsl
insb
cmpsl
loop
aaa
xchg
hlt
jbe
cmpsl
mov
cli
arpl
pop
and
mov
mov
lret
cs
data16
stc
test
adc
adc
jl
and
cs
shll
fnstsw
mov
icebp
repz
mov
jle
cmp
pop
mov
pushf
jae
aaa
andl
xchg
push
test
cmp
and
sub
xor
mov
sub
sbb
adc
xchg
xor
in
sub
inc
outsl
test
adc
aam
push
negb
adc
lea
mov
jae
stc
insl
out
sbb
scas
sbb
push
mov
mov
push
nop
cltd
out
data16
add
mov
inc
repz
lods
int3
movsb
adc
xchg
xchg
arpl
out
xchg
cmp
pop
or
sbb
sub
xor
ja
das
mov
insl
lcall
adc
add
or
cltd
adc
rorb
mov
add
cmovle
add
add
push
je
fmuls
mov
insb
mov
in
dec
shlb
lea
int3
mov
fidivl
dec
pusha
dec
addr16
mov
jge
add
stos
and
adc
add
popa
sbb
rolb
sbb
pusha
fstl
or
shlb
int
xor
mov
push
jecxz
cmpl
or
lds
cmpsb
fadds
mov
test
push
adc
push
lock
or
lahf
adc
jle
shll
sbb
loop
sub
test
test
adc
pop
lea
mov
mov
xchg
mov
jae
push
mov
sti
mov
test
adc
dec
imul
das
push
das
adc
movsl
lret
sbbb
jl
dec
aas
or
cmpsb
dec
mov
jle
pop
aaa
and
test
add
jecxz
pushf
push
sbb
push
xor
pushf
loop
mov
jmp
shr
leave
dec
aas
mov
sbb
jae
fnstsw
sub
jns
sti
xchg
cmc
adc
fimull
stc
mov
shlb
lcall
cmp
sub
push
and
inc
sub
fmulp
pop
mov
mov
or
jae
fs
sub
sbb
mov
push
mov
shrb
mov
loope
xor
fbstp
pop
mov
jne
push
xor
mov
push
jge
xchg
lcall
test
in
ret
xchg
mov
int
mov
loope
jne
xor
stos
pop
pushf
sub
sarl
cmp
ds
popf
and
in
mov
loop
pop
insb
jmp
mov
pop
pop
mov
test
xchg
das
cli
or
icebp
cmpsl
out
inc
pop
cmc
mov
and
jb
xchg
mov
or
adc
mov
pop
cmpsl
adcb
xor
sti
lcall
loopne
das
js
ficoms
lret
insl
push
sbb
in
sbb
fnsave
mov
test
add
es
scas
sbb
movsl
mov
or
mov
gs
movsb
cmp
pop
and
mov
clc
stos
sub
push
mov
roll
dec
int3
ljmp
mov
shufps
call
test
xor
jns
shlb
scas
xchg
jmp
cmpsl
shll
shlb
stos
add
lods
scas
addr16
inc
fsubr
cld
add
dec
cmp
and
add
cmpl
mov
inc
repnz
sub
int3
bound
movsl
sub
sbb
jg
in
fnstcw
test
pop
pop
dec
ret
pop
test
pop
int
pop
aaa
inc
mov
pusha
fs
sbbl
clc
fwait
sbb
decl
jmp
xor
in
mov
mov
es
mov
mov
ljmp
xchg
mov
rorb
jg
mov
pop
push
dec
sbb
ret
daa
or
and
iret
setnp
movsb
ja
mov
lea
sbb
mov
mov
movsl
mov
aaa
xchg
inc
mov
inc
sbbl
fcoms
movsl
push
jne
jno
fidivl
or
in
jae
aas
clc
pusha
xsaveopt
mov
dec
mov
leave
or
sbb
test
mov
mov
pop
scas
lods
movl
sbb
dec
push
and
dec
push
shl
inc
inc
bound
xor
cmpsl
mov
sub
sub
ja
cmpsl
icebp
popa
out
lea
andl
ficoms
or
inc
sbb
adc
in
and
pop
clc
inc
call
lds
sub
pop
lds
test
cmp
add
sub
popa
ja
les
inc
aad
dec
fidivrl
jne
cs
cmp
inc
push
divb
adc
iret
sub
das
out
xchg
pushf
pop
mov
xor
add
sbb
fwait
mov
or
movsl
orl
mov
mov
xchg
push
sbb
inc
rcl
jns
jbe
stos
mov
jge
stos
lcall
cmpsl
mov
call
int3
and
fcmovb
mov
insl
in
mov
mov
sub
pop
sub
sub
fbstp
aas
std
pop
pop
sbb
push
xchg
push
das
es
nop
mov
xchg
or
xchg
cmp
pusha
fwait
mov
fs
loop
decl
or
fs
pushf
push
stc
insb
shl
and
mov
mov
and
xchg
dec
mov
rorb
xor
xor
cmc
xor
mov
cmp
hlt
inc
pop
sbb
enter
loop
out
ds
lock
adc
into
jne
test
popf
push
js
sub
addb
jbe
mov
inc
rep
sbb
test
dec
dec
xorl
mov
and
adc
scas
cmpsl
jl
cwtl
movsb
pop
aam
rcl
push
xor
inc
push
push
pop
pop
adc
xor
imul
in
incb
inc
sub
xchg
inc
pop
dec
and
mov
cmp
adc
mov
or
xor
sub
ret
xchg
cs
lock
lods
out
pop
jl
je
adc
lods
aaa
test
or
scas
mov
cltd
push
fwait
ret
in
cmpsl
sbb
addr16
jge
ss
lods
in
fcomps
cvtdq2ps
mov
inc
inc
testb
push
cmp
or
jecxz
sahf
ss
pop
and
sahf
pop
fistpl
sarl
das
in
mov
fistl
mov
xor
gs
lods
mov
push
mov
aad
xchg
das
arpl
ljmp
cmp
nop
jbe
stos
push
movsb
xchg
rorb
push
addb
ss
cmc
cmp
bound
rdtsc
aad
sbb
xchg
or
xor
adc
or
fwait
adc
or
pushf
scas
sahf
out
mov
jo
into
mov
pop
inc
jnp
cli
jle
inc
sti
idivb
cld
sub
stos
pop
or
mov
subb
aas
ret
mov
inc
ja
pop
adc
sub
fcoml
pop
je
mov
sbb
push
stos
insb
aas
pop
in
clc
ja
out
lret
fs
lods
mov
es
loop
popf
movsb
ret
sbb
xchg
sub
aam
dec
mov
lahf
dec
jno
xor
push
es
mov
fiadds
push
addr16
adc
adc
leave
lcall
jbe
cmp
movsl
xlat
aad
mov
rorl
inc
lret
enter
lret
and
pop
outsl
cmpsl
rcll
ret
insl
data16
inc
int3
pushf
mov
aas
dec
inc
leave
daa
xchg
xor
xchg
pop
ret
pop
cmp
sub
rep
cmp
dec
and
stos
aas
and
mov
daa
outsb
or
pop
sbb
iret
in
arpl
mov
fwait
stc
or
xchg
add
jmp
dec
push
sbb
sub
sbb
call
push
xor
test
pop
or
mov
bound
cmp
out
sti
and
outsb
cs
push
pusha
loop
push
or
cmpsl
bound
out
loopne
pop
sti
and
mov
sub
iret
jne
cs
inc
ss
call
outsb
mov
cmp
popf
je
mov
test
mov
or
and
mov
insb
icebp
popa
loopne
mov
icebp
mov
jnp
push
mov
mov
mov
decb
shlb
lods
cmpsl
jno
insl
lret
sbb
sbb
dec
jae
sbb
and
in
adc
and
jecxz
mov
repz
adc
mov
xor
jmp
out
pop
sbb
inc
gs
aaa
loop
out
adc
je
and
test
mov
xchg
stos
pcmpeqw
or
add
ljmp
scas
es
pusha
es
jno
repnz
imulb
loope
jo
loope
loopne
ds
push
fistl
sbb
cli
roll
or
sbb
xchg
shrl
cmpsl
dec
xor
lods
xor
and
lock
mov
in
pop
pusha
sti
cmpsl
pop
popf
jb
test
push
js
stos
das
shrl
xor
mov
xor
outsl
adc
movsb
jo
mov
pop
inc
or
lods
jmp
pop
mov
sarb
dec
mov
or
movsb
cmp
jg
je
mov
jae
add
cmp
pop
aad
mov
push
incl
xchg
xchg
popa
inc
data16
test
add
inc
movsl
cmp
push
adcb
nop
jp
adc
cmp
add
outsl
fwait
repz
mov
or
psubusb
dec
mov
dec
cmp
push
daa
dec
xchg
aas
lret
cmp
shll
mov
sbbl
pop
in
mov
xchg
push
mov
mov
int
and
insb
dec
loop
or
lds
fs
repnz
in
mov
dec
out
iret
ja
rol
out
shl
loop
add
xchg
stos
hlt
outsl
scas
int3
jl
hlt
mov
push
cmp
lds
jg
fmuls
mov
movb
pop
ljmp
data16
mov
repnz
and
dec
or
je
movsb
fildl
sarl
les
je
lods
jno
lahf
pop
add
les
adc
or
xor
sbb
ds
xchg
rcrl
stos
out
call
lock
scas
ret
dec
or
xchg
adcb
jb
cmpl
lcall
push
adc
scas
adc
jnp
pop
mov
dec
enter
fists
pop
shrl
outsl
xor
nop
or
push
push
inc
cmc
xor
push
mov
int3
cmpsl
fistpll
fs
pop
pop
lock
dec
lods
iret
xor
scas
stos
xchg
pop
fs
inc
dec
stc
mov
mov
loope
dec
xor
mov
daa
xadd
or
mov
aaa
cltd
add
out
sbb
and
arpl
ffreep
lret
movsl
or
mov
icebp
adc
inc
xchg
fstpt
jnp
out
mov
mov
cmp
fisubrl
pop
cltd
cmp
mov
lods
ficoms
pushf
push
xchg
int3
es
inc
xchg
fisubl
es
or
test
pushf
cmp
imul
lret
cmp
adc
dec
dec
xchg
mov
add
into
mov
jle
aam
mov
push
pushf
jns
roll
pusha
sub
jae
test
push
fs
jge
mov
adc
pop
add
dec
mull
cltd
arpl
mov
jl
mov
insl
mov
jg
pop
mov
mov
aas
push
cs
andl
jb
fisttpll
xchg
cs
push
testb
adc
movl
sbb
in
fidivs
mov
dec
xor
xor
mov
cmp
lret
stos
loopne
jno
ja
xchg
mov
and
sub
xchg
and
jle
scas
arpl
jbe
cmp
stc
dec
dec
insl
jno
inc
roll
scas
addl
lds
bound
pop
add
mov
dec
sbb
push
fistpll
sahf
cld
xchg
pop
sub
data16
call
mov
ljmp
bt
addl
dec
push
rcll
out
push
add
outsl
and
jge
stos
or
mov
xor
fmuls
inc
fsqrt
fisubs
add
jne
push
icebp
loopne
sub
pusha
mov
leave
imul
pusha
movsl
mov
lret
xchg
fwait
mov
pop
rclb
aas
sbb
dec
or
lret
mov
out
cmpb
xor
ror
mov
repz
stos
jns
adc
inc
adc
dec
mov
xchg
or
jns
push
popa
cmp
test
or
sub
add
or
sbb
addr16
insb
pop
push
mov
imul
cmp
pop
ficompl
mov
push
leave
inc
outsb
and
popa
jb
xor
fldl
stc
fwait
jns
pop
mov
pop
sbb
dec
mov
mov
jmp
int
sub
fcomip
inc
rolb
jb
les
pop
jl
aaa
int3
movsb
aad
ss
sbbb
hlt
aam
mov
hlt
out
push
sbb
xchg
bound
setne
orb
int
enter
out
or
pop
sub
mov
cltd
mov
xchg
lods
adc
stos
or
lea
mov
push
mov
cmpsb
cmp
add
test
dec
adcl
cld
pop
inc
inc
jle
add
std
jb
jb
add
lods
add
cmpsb
fsts
xchg
sub
mov
push
pop
and
push
jo
pop
out
incl
sbb
insl
mov
mov
out
lock
stos
pop
out
flds
xor
and
push
dec
imul
rorb
scas
loope
loop
mov
pushf
mov
out
leave
call
mov
dec
sti
cmp
scas
jl
mov
add
dec
xor
dec
inc
jge
push
mov
jp
xor
push
xor
push
test
mov
in
pushf
arpl
das
pusha
fadd
pop
cmp
scas
cmp
mov
loopne
test
notl
nop
mov
fcomp
or
shufps
sub
mov
sub
dec
lret
popf
or
pop
inc
imulb
js
pop
int
pop
in
fs
lahf
sti
icebp
pavgw
fldt
lret
xchg
or
cmp
sbb
sub
inc
mov
jns
mov
pop
adc
jl
sbbl
xor
jnp
jo
or
sbb
mov
cmc
test
ljmp
mov
bnd
popa
outsb
fucomp
cmp
insl
adc
jecxz
pusha
lods
ss
cmp
neg
adc
pop
push
aad
mov
rorb
push
and
popl
imul
xor
adc
mov
mov
adc
cmp
jae
std
leave
in
push
sbb
sub
mov
stos
inc
sub
cs
fwait
adc
dec
stos
leave
orl
push
mov
mov
imul
jns
jmp
daa
addb
test
add
pushf
add
lret
icebp
das
push
push
pushf
inc
nop
sub
adc
mov
sub
jns
cmp
and
icebp
mov
jno
cld
push
stos
fucomp
gs
fildll
lahf
xor
mov
dec
fs
imul
mov
call
aaa
jle
inc
jnp
pop
nop
jge
int3
dec
pop
loop
dec
xchg
sub
dec
imul
ljmp
cwtl
subl
sbb
std
sahf
push
or
xor
xchg
popf
xchg
loop
pop
and
sbb
pushf
ja
decl
inc
mov
pop
lods
jp
in
fisttpll
clc
pop
lret
mov
push
jb
pop
stos
lret
addr16
test
or
mov
cmp
xor
jecxz
in
sub
insb
xchg
jbe
leave
insl
pop
int3
sbb
fistps
int
mov
cmp
xchg
mov
push
mov
adc
outsl
movsl
lahf
mov
xchg
jg
push
xchg
sahf
out
shll
lock
in
push
xchg
stos
push
ret
cmp
mul
mov
call
pushf
int3
sahf
xor
pop
xor
jbe
out
enter
lock
rorb
fisubrs
aaa
lret
or
sub
out
push
ud1
push
or
mov
xchg
mov
inc
outsl
push
cltd
in
pop
push
pop
mov
mov
add
push
xchg
lret
out
xor
pop
fimuls
pop
push
insl
mov
mov
movsb
int3
xchg
je
cmp
jmp
loopne
and
sbb
push
dec
scas
push
sub
pusha
repnz
fld
sbb
sbb
pop
rep
cmp
mov
xchg
loop
ljmp
inc
dec
iret
jne
and
addr16
cmpsl
and
insl
jb
pop
iret
or
std
sbb
stos
stos
dec
mov
dec
orb
xchg
test
sar
jecxz
out
pop
mov
in
ds
push
lods
xchg
repnz
ss
test
add
lock
xchg
adc
addr16
pop
mov
sub
fs
cli
jns
ficomps
mov
stc
mov
push
fists
loopne
mov
inc
mov
or
movsb
push
addl
lahf
in
adc
lock
loopne
test
push
lret
aaa
sbb
fisubrl
push
sbb
add
sahf
aaa
out
fstpt
mov
cmpsl
push
bound
nop
xor
jo
jbe
sub
jns
cltd
jmp
or
push
addr16
fisttpll
data16
cmp
xor
add
mov
sbb
mov
mov
fildl
hlt
pop
adc
fisttpl
jnp
jmp
cmp
outsb
sar
inc
push
sub
pop
or
sbb
test
movsl
std
pop
pop
out
repz
or
fsubs
mov
popa
bound
lea
xchg
push
gs
repz
push
aaa
int3
push
cmpl
inc
hlt
xchg
cld
hlt
js
cs
inc
jge
mov
outsb
jnp
aam
fstps
cmpsb
xchg
and
nop
movsl
adc
jnp
inc
adc
adc
nop
mov
cld
xchg
iret
mov
loopne
mov
leave
cs
xchg
xor
mov
adc
jge
cmpsl
push
repz
lea
imul
int3
pop
cli
fwait
xor
mov
cmp
insl
jbe
adc
das
jne
loopne
loop
test
mov
jno
in
pop
orl
js
je
stos
jle
mov
je
les
add
mov
aas
or
jmp
cltd
sbb
sbb
icebp
pop
popf
das
aas
push
mov
fdivp
sub
sbb
pop
and
lods
xchg
sahf
cmp
mov
jb
ret
and
fwait
push
cmp
ret
add
test
push
push
xorl
dec
pushf
mov
lcall
lcall
pop
mov
inc
shll
xchg
sahf
dec
lea
fwait
test
cli
and
or
repz
or
xchg
jns
adc
test
test
aad
push
mov
mov
adc
out
mov
sub
js
call
xchg
and
add
dec
pop
mulb
sub
cmp
mov
inc
xor
stc
push
xchg
xlat
mov
ja
psllq
jns
xchg
jns
sbb
mov
aam
repnz
sub
scas
sub
outsb
and
push
mov
mov
mov
test
adc
into
data16
dec
popa
dec
aam
pop
dec
cli
fwait
ret
in
mov
adc
out
sbb
les
in
sub
and
data16
ja
mov
lods
sub
test
cmp
or
adc
add
dec
in
sbb
jl
cltd
jb
push
mov
arpl
pop
js
cmc
outsb
stc
xlat
xchg
sub
lds
aam
sbb
mov
pop
mov
dec
sub
add
jo
mov
jl
or
push
jle
jg
scas
push
cmpsb
pushf
mulb
test
or
pushf
add
xor
sti
lock
sub
popf
loop
jle
mov
xor
jp
lahf
mov
mov
icebp
cmc
push
mov
lret
sub
inc
in
and
fildl
pop
mov
fistps
or
or
ret
aad
test
or
inc
insb
push
lods
imull
sbb
inc
rcr
or
aaa
push
xor
push
das
or
mov
or
mov
mov
stos
and
test
shl
lahf
cld
int3
scas
sub
pop
repnz
fidivl
inc
add
or
jecxz
jmp
add
stc
lds
addr16
inc
adc
inc
test
mov
cmp
pop
adc
mov
sub
mov
leave
neg
push
call
jne
aas
pop
push
pop
sub
xchg
shll
mov
adc
cli
mov
pop
xor
sti
lods
fwait
data16
jne
xor
jg
fcmovu
mov
cmpsl
mov
cmpsl
adc
imul
adc
dec
idivb
cltd
fcomi
iret
outsb
ss
mov
lahf
test
push
lds
pop
xchg
ret
xchg
adc
lods
lret
mov
lock
fadds
mov
cmpsl
aas
repnz
jo
cwtl
mov
or
and
sbb
mov
pop
pop
popa
mov
pop
stc
and
and
hlt
jmp
ds
mov
inc
cmp
dec
lcall
into
pushf
push
outsb
ljmp
or
ret
xchg
push
jb
test
mov
fs
inc
ss
or
inc
and
fadds
test
in
jmp
aam
jo
jl
stos
pushl
out
lahf
mov
sub
pop
add
nop
mov
mov
xlat
sub
mov
adc
nop
push
rorb
insl
cmp
or
loop
mov
je
cmp
or
loope
inc
xchg
xlat
push
movsl
aad
shl
idivb
in
frstor
pop
out
jmp
fdivrl
stos
ja
mov
dec
dec
insl
lret
sahf
cwtl
dec
fsubl
int3
js
push
jb
sbb
fcoms
mov
loopne
push
sub
clc
xchg
fwait
loope
ja
subb
int
adc
icebp
jl
xchg
dec
aam
jecxz
aas
loop
out
icebp
adcb
jb
xchg
add
sub
sub
lahf
jle
xchg
insb
aaa
pop
fcom
cmp
stos
jmp
fcmovu
out
scas
pusha
inc
repnz
in
cmp
adc
pop
push
lahf
rclb
xor
dec
mov
cmpsl
jl
push
jo
mov
insl
push
jns
push
out
push
inc
int3
iret
jp
mov
mov
push
jb
mov
je
or
ljmp
sbb
jne
dec
std
mov
push
lock
lcall
int
call
scas
mov
pushf
cmp
popf
popf
loop
outsl
push
cs
adc
idivb
xor
jnp
das
fcoml
push
bound
mov
push
mov
nop
jns
in
pop
mov
adc
jb
xchg
push
xor
pop
jo
sub
adc
rolb
push
out
mov
xchg
fiadds
mov
movsl
add
loop
or
push
mov
push
test
inc
ret
jae
mov
add
dec
outsb
inc
push
push
inc
dec
insl
cmp
adc
cmp
push
or
les
sbb
popf
lahf
mov
repnz
push
je
repz
movsb
sti
push
hlt
cmp
popa
adc
cmpsb
iret
push
push
mov
push
adcb
xchg
jae
sub
lea
push
movsb
out
xchg
addr16
add
shrl
mov
into
ljmp
xor
add
xor
xor
sub
add
mov
fstps
sahf
ja
into
push
mov
in
push
das
ret
lods
mov
adc
aam
popf
jecxz
lret
rep
mov
jne
mov
in
mov
jge
and
or
mov
sti
scas
mov
iret
xchg
cmp
subb
add
mov
loop
cs
lret
push
ror
mov
sbb
push
push
sahf
sub
xchg
arpl
insl
or
add
aad
dec
aam
jge
test
dec
cwtl
pop
ja
mov
movsl
out
jge
test
mov
js
sbb
adc
push
ret
lock
sbb
pushl
xlat
mov
into
inc
gs
popa
dec
addr16
mov
les
in
inc
mov
lods
std
push
add
bound
mov
cmp
cmp
sahf
sbb
xor
mov
out
add
or
scas
cmp
decb
push
dec
add
sahf
xor
mov
ja
push
push
push
sub
dec
xchg
mov
inc
neg
jo
adc
cmp
cli
jp
cmp
cmc
mov
lea
setne
jecxz
inc
fisttpl
lds
xchg
xchg
imul
call
jle
push
aam
push
pop
xchg
lds
adc
mov
hlt
lds
outsl
ret
jae
jbe
dec
lods
dec
lret
mov
pop
inc
jnp
pushf
dec
xor
inc
movsl
push
adc
sbb
or
adcb
push
sbb
add
shll
into
mov
daa
cli
aaa
or
sub
punpckhwd
push
cmp
dec
mov
dec
fnstsw
in
cmpsl
jg
pop
sbb
mov
ret
bound
in
sbb
jecxz
test
inc
sub
mov
add
sbb
adc
mov
mov
lahf
sbb
out
test
or
inc
sub
cmp
dec
inc
stos
push
fdecstp
mov
ljmp
loope
insb
repnz
push
shrb
pop
in
jno
dec
sbb
popl
mov
pop
movsl
addb
popf
or
pop
lret
mov
jecxz
sub
repz
ljmp
repz
lods
ffree
mov
xor
sub
nop
inc
hlt
mov
add
subb
bswap
push
sub
sub
xor
mov
aam
outsl
ljmp
inc
ret
test
jo
icebp
cmp
pushf
mov
dec
fisttpl
inc
adc
push
incl
inc
add
inc
je
int
xor
inc
adc
push
repnz
js
clc
rolb
mulb
sti
pcmpgtw
xchg
into
scas
rclb
xchg
adc
pop
add
js
cmpsb
stos
lds
cmp
push
xor
inc
mov
fldenv
pop
sub
lahf
push
std
rcll
and
enter
loopne
outsl
je
les
push
dec
sub
adc
xchg
imul
jge
in
cmp
jg
movsl
adc
cmp
xchg
imul
xchg
mov
inc
imul
enter
mov
dec
dec
lret
arpl
inc
xchg
and
call
testl
sub
test
insl
adc
inc
flds
dec
dec
mov
mov
mov
data16
cmp
xor
out
fmull
or
pushf
push
mov
out
clc
sbb
loope
push
sub
cmp
in
xchg
sarb
lret
and
mov
test
xchg
lret
pushf
movsb
mov
xor
nop
lret
sti
in
inc
push
xchg
jno
fldt
push
xchg
cmp
shrl
mov
cmp
sub
mov
xor
daa
imulb
jae
insb
xor
bound
jmp
dec
xor
mov
mov
cmp
pop
dec
adc
mov
int3
jmp
jno
arpl
das
mov
sbb
fcomip
sub
push
loope
xor
iret
xor
aad
addr16
jbe
lahf
mov
push
mov
arpl
sub
arpl
pop
adc
out
imul
push
jb
jb
movsb
inc
inc
ds
addr16
ret
dec
mul
inc
sbb
cltd
ljmp
pop
pop
out
jb
add
in
dec
aam
add
cmpsl
dec
mov
xor
and
movsb
mov
mov
mov
and
out
adc
jmp
sub
adc
lcall
pusha
fimull
dec
pop
cmc
cmp
cmc
sub
pop
imul
insl
xchg
dec
adc
nop
scas
insl
or
adc
aad
inc
into
mov
rcr
xor
jne
ret
mov
test
pusha
cmp
pop
xorl
popa
movsb
or
pushf
rcl
mov
jne
adc
and
hlt
jl
sahf
stc
xor
lods
out
stos
pop
xchg
in
pop
sbb
add
lods
push
rcll
loope
sti
loope
pop
test
and
xor
xor
xchg
repz
lcall
and
pop
jmp
xchg
sahf
inc
xchg
xorl
inc
fstpt
cltd
cwtl
fisubrs
mov
jge
std
mov
mov
ficomps
out
movsl
cwtl
inc
lds
jns
adc
mov
add
aad
and
insb
bound
cmp
dec
cwtl
inc
dec
push
dec
mov
dec
jmp
sub
leave
mov
jne
loope
add
and
cmp
pop
aas
clc
lea
pop
pop
add
cwtl
aaa
outsl
push
mov
mov
mov
dec
jl
roll
jnp
jecxz
jno
repz
aam
daa
inc
mov
jmp
jge
jecxz
dec
add
jbe
xchg
fstl
hlt
add
push
pop
xor
les
jo
jne
push
jle
loopne
mov
sbb
or
icebp
xor
jo
pop
sbb
dec
adc
xor
jne
les
sbb
clc
js
in
popf
adc
mov
mov
cld
push
pop
or
aam
sub
in
int3
mov
push
enter
cmp
iret
scas
adc
adc
add
mov
icebp
movsb
rolb
int
cwtl
and
test
xor
fsts
fdivl
popf
sub
imul
jg
loopne
push
mov
mov
pop
pop
fiadds
pop
push
leave
es
jg
nop
stos
adc
dec
cmpsb
mov
dec
xchg
scas
jle
xor
mov
sahf
stos
fdivrl
cmp
jle
bnd
aam
vphadduwd
jg
push
popf
clc
shl
test
cmp
sub
xchg
fsts
jb
outsl
aas
rcll
loopne
unpckhps
dec
mov
mov
lods
test
push
stos
mov
add
in
hlt
mov
pusha
test
sbb
add
dec
xchg
pop
jnp
push
cmp
inc
cmp
inc
or
cmp
test
outsb
movsb
testb
mov
pop
cli
cltd
push
sbb
sbb
in
sbb
dec
ficoml
js
rorl
aaa
fsubs
jne,pt
push
outsb
jecxz
icebp
int3
or
or
mov
in
in
sti
mov
ljmp
adc
bnd
push
test
and
inc
es
push
sti
add
xor
cwtl
cltd
or
pop
xorb
cld
stc
or
daa
pop
jns
add
mov
pop
xor
push
jno
dec
rcl
adc
jo
data16
xchg
xchg
fwait
lds
jecxz
and
aas
js
fwait
or
ret
sub
cmp
push
mov
add
mov
mov
shlb
mov
push
stc
cmp
fdivrs
add
push
sub
fs
push
sti
dec
stc
cwtl
mov
or
adc
cwtl
xchg
fs
sti
movsl
or
js
push
shll
sbb
cmp
xchg
out
out
scas
cld
mov
lods
notl
pop
cmp
cmpsb
iret
scas
sub
test
add
xor
mov
mov
xor
lea
loopne
add
pusha
pusha
shlb
rol
sub
jns
jno
or
cmp
sahf
stos
rclb
daa
test
or
push
mov
mov
movsb
xchg
mov
jg
cs
pop
xchg
or
out
insb
dec
mov
stc
ret
cwtl
sbb
sbb
rolb
aam
and
mov
pop
push
xchg
pop
and
lods
filds
adc
mov
ja
sub
ss
jp
mov
adcl
adc
sub
bound
into
adc
jae
out
mov
ss
add
int
push
les
or
jne
ret
neg
mov
push
loope
daa
vsqrtsd
test
call
adc
movsl
pop
jecxz
daa
ds
into
addr16
add
inc
bound
xlat
movsl
aas
hlt
pop
cmp
pop
xchg
jp
cltd
fbld
or
push
add
movsl
in
xlat
loop
pop
xor
dec
and
add
stc
inc
xor
sbb
adc
sub
sarl
lcall
loope
sbb
cld
bound
inc
push
test
imul
push
cli
push
sahf
pop
mov
pop
fdivrl
movsb
cs
mov
shrl
mov
loope
popa
call
mov
insb
dec
out
inc
lods
add
pop
arpl
or
pop
add
push
jp
hlt
cmp
xchg
or
jns
je
or
push
popf
xor
imulb
mov
addr16
push
mov
insb
das
mov
xor
pop
cmp
adc
dec
push
cwtl
sub
ret
jo
inc
pop
xor
loop
fs
out
bound
adc
mov
jge
push
xchg
imul
shl
enter
or
or
jmp
push
push
dec
pop
mov
pop
add
xorl
or
xorb
and
jl
xor
in
clc
jo
push
jae
call
push
fimull
test
pushf
mov
sahf
arpl
les
lahf
das
out
or
lret
pop
int
cli
adc
mov
or
pop
mov
mov
pop
ds
lahf
js
stc
adc
lods
xchg
out
push
int3
push
ret
jg
test
mov
data16
mov
mov
cmc
addr16
in
inc
jmp
fsubl
aad
orl
xchg
add
mov
or
sub
stos
orl
movsb
scas
sbbl
aaa
cmpsl
stos
out
inc
int
cmp
and
mov
or
and
dec
js
mov
inc
and
push
inc
insl
rep
adc
pop
push
xchg
adc
push
adc
loope
lds
data16
in
inc
jo
pop
mov
lret
in
bound
dec
daa
test
cmp
das
push
sub
shlb
imul
xor
adc
ja
sahf
outsl
cmp
aad
jmp
mov
inc
in
jns
cmp
sbb
push
push
jbe
mov
roll
sub
and
repnz
lods
scas
jmp
jne
mov
inc
cwtl
push
add
add
inc
add
inc
or
or
xchg
movsl
mov
xchg
mov
pop
cs
add
daa
popa
arpl
leave
stos
fprem1
adcb
shll
mov
and
cwtl
cmp
into
pop
lret
inc
divl
inc
lcall
cmc
push
lahf
pop
xchg
mov
imul
jo
stos
jmp
icebp
mov
ljmp
xchg
lcall
into
fmuls
and
inc
cmpsb
dec
imul
pop
cmpsb
jns
jae
and
sub
roll
jp
xor
adc
into
jmp
mov
sub
add
cmovle
dec
fcompl
sub
mov
test
xchg
mov
mov
cld
mov
push
push
inc
fsub
nop
sbb
mov
aad
pop
jne
je
adc
dec
movsb
add
push
and
push
sub
movsb
cmp
call
pop
push
pop
dec
scas
inc
sbb
aam
dec
lret
or
mov
mov
call
or
and
aas
jecxz
xor
inc
push
into
stos
das
test
leave
scas
mov
sub
xchg
xchg
jle
xchg
push
mov
mov
js
movsl
cli
cmpsb
xchg
mov
data16
lea
mov
cwtl
cld
pop
js
cmpsl
jno
cmp
or
cs
add
pop
out
xor
ljmp
imul
arpl
pop
dec
cmpsb
loop
inc
jmp
dec
imul
mov
xor
pusha
mov
add
scas
or
push
out
cmp
mov
mov
fs
dec
mov
xchg
mov
fisttps
pop
jge
xor
sub
dec
in
cmp
push
aaa
enter
adc
test
add
push
bound
xor
push
popf
lea
shll
mov
adc
mov
cld
cmp
popf
ret
es
sub
stc
adc
imul
cmpsb
sbb
cmp
sbb
xchg
outsb
push
sub
mov
add
ja
mov
jnp
mov
lods
sub
and
inc
gs
bound
rcr
and
xorl
mov
data16
xchg
popa
shr
or
jle
cmp
dec
jns
data16
pop
dec
movsb
mov
push
cwtl
inc
mov
xchg
dec
fidivrs
xchg
repnz
test
sbb
mov
int
xlat
hlt
fmull
cmp
mov
fstpl
and
daa
or
insl
adc
daa
rorl
pop
add
xchg
and
jecxz
mov
bound
mov
push
decb
std
rcrl
sub
stos
mov
aas
in
lds
inc
xlat
lahf
sbb
sub
repz
outsl
int3
fs
lcall
test
and
mov
jne
leave
pop
hlt
push
scas
mov
movsl
mov
rcll
add
enter
push
sbb
xor
jb
in
jns
lahf
aas
mov
imul
imul
sub
lcall
mov
aas
sub
ja
ficompl
mov
fstpt
daa
test
or
nop
ss
movsb
xchg
jecxz
cmpsb
fwait
cltd
jno
sub
stos
jge
xchg
xor
loop
xchg
and
xor
fisubs
mov
int3
fldenv
push
insl
addr16
test
out
arpl
pop
push
push
push
je
add
cmp
mov
pop
jle
or
push
push
jl
cmp
cmp
in
or
shrb
mov
popa
dec
mov
aad
ficoml
push
cmp
movsb
cs
jp
stos
clc
cltd
push
jb
nop
push
addb
shlb
lea
rclb
nop
lock
movsb
fmull
fdivrl
addr16
jg
push
xor
in
jb
add
mov
out
imul
xchg
mov
ret
push
mov
mov
jl
or
imul
test
sub
clc
xchg
call
stos
adcb
repz
mov
lock
xor
adc
add
and
out
adc
rcrb
sbb
pop
pop
fcoml
mov
xor
pop
jae
sbb
out
jnp
or
loopne
add
rolb
pop
mov
scas
jmp
jbe
fnstsw
out
pop
or
data16
out
pop
sbb
cmpsl
xor
out
popa
sarl
mov
mov
addr16
fdiv
ds
insb
jmp
pop
leave
sbb
punpcklwd
inc
xor
inc
inc
sbb
lret
daa
mov
or
adc
adc
push
jno
std
nop
ds
cli
cmp
aas
idiv
mov
fldcw
add
mov
pop
les
repnz
inc
mov
xor
push
es
xor
mov
std
adc
xchg
sbb
ficoml
inc
pop
pop
xchg
and
pop
imul
pop
cmp
adcl
jmp
jp
mov
push
mov
adc
ja
aas
inc
cld
jns
pop
adc
and
push
or
insb
cmc
sub
mov
and
in
jb
and
push
out
iret
leave
cmc
inc
insl
fistl
or
loopne
test
das
xchg
mov
adc
lods
mov
sbb
jb
je
push
jp
mov
scas
arpl
icebp
data16
mov
rolb
inc
jb
push
inc
xchg
scas
push
es
fisubrl
inc
andb
sbb
ret
jns
adc
mov
jae
mov
mov
aad
and
out
or
fistl
and
lahf
inc
sub
cmpl
or
fistps
or
mov
mov
popa
popa
mov
xchg
ffreep
bound
jecxz
lods
sub
subl
sbb
lds
rcl
jg
inc
xor
dec
fsubs
mov
sub
sub
or
pusha
pop
sub
int
data16
scas
loop
insl
insl
inc
mov
in
pop
sub
mov
mov
adc
push
out
push
cmp
inc
pop
pop
dec
ss
or
loopne
rclb
sub
cwtl
addr16
sbb
cmp
add
cwtl
repz
rcrl
pop
stos
sti
xor
add
lret
add
orb
ja
mov
jne
cwtl
testb
aaa
mov
ja
ret
pusha
sbb
sbb
xchg
cmpsb
cmp
mov
loope
mov
scas
xchg
addr16
loop
and
push
mov
mov
test
mov
aad
dec
js
lret
push
or
in
imul
shlb
cwtl
jo
cmp
push
or
mov
ljmp
js
xchg
cld
outsb
or
mov
jmp
je
fidivrs
out
mov
cmp
lcall
push
cmp
lods
movsl
xchg
xchg
adc
fsubrl
scas
fcmovne
enter
push
shll
mov
cmpb
mov
push
call
popa
pop
shrb
divl
mov
sub
pop
cmp
xor
mov
xchg
xchg
mulb
loope
cwtl
mov
rorb
sub
and
mov
js
jb
out
cmp
pop
ss
shlb
lock
mov
xor
lea
mov
mov
scas
push
mov
lods
aad
mov
test
test
js
mov
repnz
loopne
or
rorl
pop
jno
jle
push
xchg
test
xchg
push
loopne
fwait
jg
mov
pushf
xor
jno
mov
filds
xchg
test
je
xlat
int
fmull
cmp
insl
adc
mov
mov
sub
aam
mov
dec
xor
inc
pop
push
sbb
mov
xlat
push
dec
sti
inc
cs
and
or
aam
lods
pop
aam
decl
mov
cmp
ljmp
xchg
pop
add
ss
xor
mov
and
sub
out
adcl
add
mov
mov
ret
sbb
and
mov
test
cmp
fs
repz
xor
rcrl
inc
popf
cld
add
inc
stc
fcompp
fwait
out
cmpsb
xchg
xchg
loope
or
clc
mov
add
sbb
je
jbe
fwait
pop
mov
inc
clc
sub
ret
mov
sub
adc
adc
jge
xchg
sahf
pop
faddl
and
pop
lods
or
loope
movsl
and
pop
fimull
jge
movsl
lods
test
test
add
sub
loope
sti
add
xor
lcall
dec
and
ss
add
stos
shll
xchg
jp
inc
add
les
into
mov
jb
fldcw
insl
xlat
or
cmp
mov
in
lods
orb
repnz
test
jle
sbbb
sbb
call
popf
movsb
test
lcall
and
shll
stc
jo
lahf
stos
into
repnz
jmp
and
inc
push
mov
insb
xor
ja
imul
loopne
insb
dec
or
xchg
xchg
inc
pop
leave
sahf
xlat
adc
nop
aam
es
cmp
add
bound
addb
jns
xor
dec
ss
imul
int3
lds
and
in
pop
fsub
xor
lock
hlt
aam
lret
sub
mov
push
mov
test
push
addr16
mov
fldl
aam
dec
subb
push
test
ja
mov
and
mov
add
cmp
sbb
out
dec
lds
int3
test
cmpsl
xor
jecxz
jp
into
sub
lds
push
cs
daa
loope
push
test
ret
mov
repnz
pop
in
inc
addb
sarl
pop
push
mov
and
hlt
in
aam
push
cs
into
roll
cwtl
sbb
mov
inc
and
mov
out
mov
dec
mov
dec
popl
pop
aam
addr16
push
shll
mov
add
fildll
jge
push
sub
pop
sbb
movsl
aam
ja
fiadds
call
jno
jp
fistpl
sbb
push
lock
jns
fcmove
jae
shrl
out
push
imul
nop
loope
sub
mov
into
in
push
fimull
and
adc
sahf
xor
arpl
add
sbb
cmpsl
lods
or
call
in
aaa
mov
int
mov
out
shrb
leave
jbe
test
add
insb
push
daa
mov
xor
gs
sahf
pop
stos
jp
int3
mov
cmc
mov
imul
fbld
sbb
shr
adc
or
mov
xchg
iret
inc
adc
jge
or
mov
dec
aad
clc
popf
inc
mov
nop
mov
mov
data16
adc
inc
in
out
dec
xchg
cltd
outsb
mov
or
fs
pop
daa
das
push
ret
sub
mov
inc
cmovle
push
mov
into
sub
inc
int3
rcr
je
loope
icebp
cmp
add
cmp
inc
js
in
mov
ja
mov
ja
repnz
mov
or
mov
stos
push
jno
cltd
and
pop
pop
loopne
rorl
insl
push
jl
cs
cld
loope
lret
push
out
push
push
fsts
ret
sbb
ds
outsl
sbb
testl
lods
or
mov
orb
cmc
jbe
mov
jl
cmp
mulb
push
or
pop
xchg
sarl
es
inc
adc
jecxz
cli
fucomip
cltd
cli
push
fcmovne
clc
inc
jmp
std
repz
sti
shlb
pop
sbb
fs
out
fistl
lds
pop
es
outsl
xor
jb
lret
pop
xchg
inc
sti
pusha
cmp
inc
incb
sub
push
dec
lods
xor
add
sub
jecxz
pop
adc
pop
test
add
inc
bound
incl
out
lahf
xchg
stc
js
jmp
jmp
mov
xadd
jmp
pop
fstpt
adcb
cmp
pop
mov
es
adc
or
pop
mov
mov
sub
add
in
lods
mov
xor
xorb
les
movsb
faddl
ss
inc
dec
or
sbb
fsubl
les
sbb
add
imul
sub
push
lcall
or
mov
push
cwtl
sbb
sbb
dec
lods
sbb
xor
rclb
js,pn
movsl
popf
pop
push
jne
cmpsl
adc
jg
aam
outsl
lahf
clc
or
xor
inc
leave
test
repnz
aaa
ds
call
out
xor
fisubrs
xchg
mov
mov
jno
mov
sub
cmp
lock
ds
xor
or
jns
cmp
jle
pop
test
jne
sbb
inc
or
hlt
fsubrs
out
loopne
cltd
dec
rcrl
out
loop
mov
out
mov
inc
and
cli
in
cmp
shrl
mov
andb
loope
in
push
shlb
negl
aad
xchg
cmpsb
jb
dec
daa
add
dec
jle
dec
les
das
iret
sub
pop
xchg
int
cld
jg
push
mov
jmp
xchg
xor
mull
mov
push
inc
jl
mov
xchg
adc
jecxz
jae
in
pop
dec
pop
test
pop
sub
xchg
out
jo
mov
fisubrs
ljmp
ret
pop
rorb
fimuls
mov
push
mov
xor
jb
std
jl
ret
mov
test
mov
push
mov
or
lret
push
add
xchg
sti
cwtl
xchg
or
icebp
mov
pusha
jl
cmc
fs
push
into
add
mov
pop
ljmp
cwtl
pop
js
sbb
dec
push
push
jg
and
mov
cmpsl
subl
call
test
pushf
push
and
inc
inc
orl
loop
jmp
push
inc
mov
inc
shrl
ret
dec
hlt
adc
rcl
jno
negb
inc
scas
in
push
and
sub
adc
adc
or
inc
pop
fwait
lock
scas
cmp
sti
xchg
frstor
push
addr16
xor
movsl
jo
out
out
daa
mov
mov
dec
pusha
sub
in
fidivrs
pusha
test
repnz
aaa
daa
mov
daa
loop
inc
lcall
les
xor
jae
xchg
cmc
inc
xor
ss
fists
js
mov
inc
mov
mov
mov
xchg
pop
jae
fsubl
pop
sbbl
out
or
test
sahf
xchg
aaa
inc
bound
in
sbb
es
cmpl
dec
test
mov
sub
push
sahf
std
popf
es
imul
xchg
inc
cmp
mov
pusha
call
cmp
in
std
ds
push
and
leave
xor
jnp
jne
in
or
xor
adc
scas
in
aaa
add
inc
sbb
push
pop
call
jne
hlt
sbbl
push
addr16
mov
push
cmpsb
xchg
push
pop
pushf
cli
xchg
jle
push
push
and
iret
imul
lret
cmc
scas
push
jns
shrl
mov
aas
scas
pop
mov
insl
mov
sbb
push
inc
and
jb
push
arpl
aad
xor
daa
in
push
pop
movsl
orb
scas
and
daa
shr
push
mov
mov
sbb
cli
inc
out
mov
cwtl
push
pop
sti
rcrb
push
xchg
adc
iret
cli
cmp
idivb
movsl
jmp
std
jo
lahf
int3
xor
mov
bound
in
push
lret
in
add
roll
and
add
sarb
imul
sub
mov
dec
cmp
rcl
jne
out
repz
adc
ja
outsl
and
and
es
scas
cmp
push
jo
jg
insb
jmp
mov
lcall
arpl
push
mov
mov
mov
stos
cmp
stc
jno
call
iret
or
adc
push
rcll
push
pop
out
sbb
outsl
mov
cmpsl
lock
imul
dec
xor
int
mov
xor
into
sahf
loope
cmp
scas
ret
testb
pop
jmp
jns
push
inc
into
dec
cmp
punpcklwd
in
xor
cld
arpl
jl
jno
sub
sbb
mov
mov
and
div
cmc
push
and
push
sbb
mov
jbe
pop
sub
fisubrl
adc
mov
repz
mov
cmp
rolb
rolb
ret
test
mulb
mov
inc
cmp
test
mov
push
pop
dec
out
aam
sbb
out
roll
dec
test
xchg
ljmp
icebp
ret
mov
push
xor
cwtl
lods
xchg
es
and
or
popf
push
sub
cmp
mov
fildll
xor
std
ret
push
in
dec
mov
jl
cmp
into
sub
loop
and
adc
sub
out
rolb
xlat
pop
cmpsl
sar
mov
and
mov
gs
inc
pop
inc
testl
gs
mov
xor
nop
jbe
mov
aam
insb
pop
sub
fimull
out
cmp
mov
jnp
aad
fwait
xor
cmpsl
push
mov
inc
imul
sub
clc
mov
xchg
inc
pop
sub
sbbl
or
mov
lock
aam
leave
mov
pop
xor
popf
outsb
bound
nop
adc
lahf
dec
xchg
sub
and
xor
jns
lahf
cwtl
les
xor
in
icebp
jns
and
in
sbb
mov
pop
fnsave
pop
je
rolb
shlb
mov
jl
xchg
test
mov
in
push
test
lret
stos
loop
push
addr16
into
or
xchg
adc
pop
daa
or
sbb
jg
mov
cmp
cwtl
sbb
push
or
pop
fldcw
mov
and
stos
jbe
jg
push
jnp
xlat
inc
sahf
mov
sbb
movb
inc
sahf
adc
adc
ds
les
inc
cmpsb
movsl
lea
lcall
cltd
adc
cmp
pop
fmuls
sbb
add
loopne
inc
add
push
adc
leave
xchg
xchg
sbb
xchg
arpl
sbb
mov
cmp
jge
ds
adc
jle
fnsave
sahf
cmp
sarb
insb
lea
inc
insb
mov
int
add
cwtl
mov
jp
dec
push
cli
push
mov
fwait
loop
aad
mulb
adc
call
loop
popf
mov
sub
vdbpsadbw
or
lcall
cmp
into
push
push
arpl
daa
and
or
sub
inc
adc
add
sarl
cs
add
cmp
mov
mov
sahf
inc
loopnew
and
stc
jmp
insb
mov
lret
hlt
jg
push
and
fiadds
and
out
or
inc
cmp
repz
popf
call
aas
lock
sbb
sahf
hlt
cmpsb
or
add
fucomi
pushf
and
sarl
cli
int
sub
mov
cmp
inc
mov
cwtl
sub
pop
or
add
test
clc
add
int
mov
shlb
sbb
adc
jge
jbe
int3
pusha
addb
mov
loop
or
std
nop
jp
inc
mov
mov
adc
add
fsubr
scas
aas
stos
lahf
cmpsb
inc
and
je
xchg
inc
mov
test
sbb
mov
int3
mov
rorb
inc
sbbl
lds
cs
es
fnstcw
icebp
ret
dec
std
cmp
xor
sub
stos
in
dec
adc
mov
sub
pop
aam
xchg
lods
push
or
cs
out
frstor
loopne
sub
sbb
mov
mov
and
mov
lods
mov
mov
aaa
jp
sbb
insb
push
inc
stos
cmp
sub
cmp
vpaddd
xchg
xor
test
dec
pop
fisubrl
fs
pop
and
adc
inc
pop
jmp
orl
mov
lahf
mulb
ret
xchg
sub
mov
lods
pop
pop
imul
leave
ret
bound
dec
arpl
jo
sarb
jle
jp
xor
cld
mov
ror
in
add
pop
jb
popa
stos
out
into
ja
out
push
mov
subb
loopne
shrl
push
pop
mov
adc
dec
pop
daa
fwait
popf
arpl
and
popa
adc
data16
pop
stos
fstp
inc
outsb
xchg
stc
mov
aad
mov
fldl
cltd
or
sub
xor
out
jmp
insb
cmp
sbb
push
dec
or
insl
xor
mov
nop
jl
fistpl
bound
in
fsubrl
inc
adcb
repnz
inc
or
decb
sti
lahf
fs
cltd
sub
cmp
xor
pop
mov
iret
xchg
xchg
call
mov
sbb
xor
xchg
mov
pop
lcall
inc
mov
scas
out
mov
cmp
add
ret
sti
add
roll
inc
jno
jl
rol
inc
int3
in
rcll
and
cld
adcl
jmp
mov
sbb
test
jo
and
xchg
ret
leave
rolb
arpl
cmp
jmp
fstpt
ss
cmp
mov
scas
xchg
mov
jae
or
int3
pop
loop
pop
movsb
push
pusha
lods
cmp
sbb
push
xchg
mov
or
cld
test
sti
cmp
mov
repz
add
js
cmc
jne
jne,pt
xlat
or
fwait
outsl
push
repnz
mov
sbb
add
sahf
push
push
jne
adc
adc
pop
jle
pavgb
lods
xchg
pop
sbb
fs
inc
push
xchg
push
shl
jae
dec
ljmp
loopne
mov
jg
xorb
loop
xchg
mov
dec
lret
lock
cmp
inc
and
fwait
xor
cmp
and
outsb
dec
push
sub
cmc
cltd
mov
insl
ljmp
mov
mov
addb
or
mov
and
xorl
push
xchg
movsb
dec
cmpb
xchg
xor
into
fists
dec
cmp
push
mov
loopne
outsl
xchg
dec
jecxz
inc
int
jne
mov
dec
ds
push
push
pop
ds
xor
mov
dec
lcall
in
repnz
and
pmaddwd
xor
adc
sbb
ss
xor
out
aaa
je
pop
jle
cmp
ror
xchg
push
in
mov
sub
sti
je
jle
jne
xchg
add
mov
icebp
iret
les
inc
mov
pushf
pop
jne
cmc
dec
sbb
std
addr16
or
mov
rolb
and
repz
loopne
cltd
adc
andb
xchg
or
add
sbb
int
jp
and
nop
jg
mov
inc
add
incb
roll
int
loop
push
test
push
out
popa
int3
add
inc
js
int
xor
clc
and
or
adc
in
jae
loope
out
and
cltd
mov
cmp
pusha
adc
jnp
sbb
sub
fisttpl
dec
jge
push
cmpsb
sahf
test
sbb
adc
pushf
movsb
sub
add
daa
fiaddl
jecxz
push
lods
xorl
xor
inc
mov
adc
xor
lahf
roll
dec
jge
in
dec
adc
jmp
push
inc
lea
nop
rcrl
or
xchg
fsubr
push
sahf
js
insl
daa
pop
lods
aam
sbb
dec
jp
sarb
pop
into
sub
aam
push
jnp
imul
cmp
das
lahf
pushf
cmp
repz
inc
popa
addr16
test
xchg
fwait
mov
shlb
sbb
push
imul
pop
lahf
psubw
jge
and
mov
push
mov
xor
add
mov
sub
hlt
outsl
xchg
cmp
dec
aaa
cmc
lods
out
push
or
fucomp
shlb
iret
jle
mov
leave
or
mov
rorl
aas
out
xchg
mov
xor
rcl
mov
cmp
mov
xchg
jnp
out
mov
jecxz
xor
pop
dec
les
mov
std
stc
stos
cwtl
js
jne
jno
addl
cmpsb
cmpsb
inc
push
xchg
push
cmc
les
inc
sbb
xor
pop
push
mov
les
icebp
inc
mov
mov
pop
dec
cmp
mov
mov
clc
push
insb
cmpsl
or
sbbl
and
rol
push
dec
lds
aad
inc
pop
push
lock
xchg
insb
aaa
enter
int
mov
mov
push
mov
and
inc
popa
or
xor
push
std
out
cmp
in
inc
mov
test
xor
negl
icebp
jbe
jae
les
pushf
lock
cwtl
cmp
dec
out
xlat
inc
stos
scas
xchg
clc
scas
enter
insl
mov
mov
fwait
dec
pusha
dec
xchg
xchg
pop
stos
jp
addr16
xor
negb
push
cmp
cli
repz
adc
inc
sahf
das
imul
test
pop
scas
dec
mov
sub
jp
xor
movsb
push
jp
sub
jl,pn
sti
popa
mov
sub
or
jge
mov
sahf
xchg
lock
fs
mov
ret
cmp
dec
sub
aad
pop
fnsave
repz
inc
imul
outsl
mov
mov
js
sbb
and
mov
push
mov
cmp
es
ret
mov
and
cli
or
out
stos
cmp
movsb
pop
sub
xchg
test
imul
jno
cmp
int
fsubs
inc
test
pop
and
fdivr
cmp
mov
xor
out
mov
sahf
or
stos
xchg
adc
aaa
je
dec
lahf
std
iret
cmp
imul
out
mov
push
movsb
jl
sub
out
cltd
mov
push
stc
aad
or
or
imul
sahf
int
scas
and
je
adc
stos
xor
daa
shl
dec
scas
gs
sub
cmp
adc
je
in
push
cwtl
inc
push
sub
mov
sbb
js
in
int3
xchg
pusha
mov
mov
adc
ljmp
pop
in
mov
pop
cs
imul
xor
adc
push
mov
sub
js
sub
js
mov
fistps
adc
jmp
xchg
xchg
loopne
inc
jmp
xor
dec
adc
jnp
add
repz
and
std
arpl
fistl
jp
out
xor
jle
insl
sbb
nop
or
cmp
in
rcrl
jg
jae
lea
jg
out
jnp
cld
aas
mulb
lahf
movsb
cmpsb
xor
stos
lret
popf
insb
movsl
test
repz
dec
lds
leave
and
push
call
xchg
push
mov
shr
adc
mov
imul
stos
xor
mov
xorl
into
cmpsb
pushf
xchg
jl
jnp
repnz
jo
jle
int
pop
xchg
mov
and
jle
adc
test
jp
xchg
pop
fcom
xor
or
arpl
outsb
stos
andl
jns
shlb
cmp
popa
fmulp
into
xchg
and
les
iret
push
fsubrl
pop
add
repz
pop
rcrb
scas
dec
cmp
cmp
lods
testb
inc
sub
addb
stc
imul
stc
dec
pop
stos
repnz
xchg
scas
push
nop
xchg
mov
xchg
push
jl
cmp
xchg
push
std
or
dec
dec
shll
push
jmp
pop
sub
cmc
int3
mov
jnp
jo
stos
fsub
add
and
fists
adc
mov
and
inc
mov
add
push
es
rcrb
sub
and
add
inc
push
jge
les
cld
sub
adc
jle
out
stos
jecxz
js
pushf
test
orb
mov
pop
add
flds
and
ja
subl
js
xor
sub
and
xor
add
scas
add
out
sub
sub
and
mov
mov
xchg
push
gs
stos
inc
daa
cs
lock
arpl
add
loope
out
das
add
add
leave
jecxz
jle
loop
ret
jbe
push
pop
jg
xchg
subb
add
in
add
xorb
call
lcall
jmp
xor
into
add
push
dec
push
add
ret
jne
or
stos
mov
add
mov
xor
jbe
flds
lcall
idivb
lgs
jno
xor
jne
movsb
jns
xchg
sbb
xor
adc
mov
push
pop
adc
arpl
leave
and
gs
sbb
scas
jae
dec
or
push
or
push
lock
or
mov
test
sub
sbb
aad
jp
pop
in
push
sub
cmp
xchg
movsb
dec
sbb
xor
lahf
test
scas
popa
mov
into
mov
cmp
in
cmp
and
insb
xor
std
ret
cld
push
pop
jmp
push
int3
push
arpl
rcrl
ret
xlat
xchg
or
gs
test
ret
mov
push
pop
jg
pop
xchg
xlat
add
lcall
push
ret
insl
pop
das
rolb
pop
pusha
stc
inc
adc
mov
sbb
arpl
lret
loope
dec
mov
test
jb
pushf
mov
push
or
mov
jg
mov
jp
leave
cld
insb
add
mov
mov
cmp
fldenv
jge
or
test
sub
add
mov
aam
xlat
mov
mov
sbb
int
rorl
pop
adc
idivl
dec
mov
sub
in
insb
loopne
repnz
mov
add
mov
jge
sar
lahf
cmp
leave
mov
add
fistpl
mov
jnp
mov
loope
jge
popf
adc
lds
jecxz
mov
sub
popf
hlt
nop
lahf
sbb
jbe
fcmovb
std
inc
in
mov
int
call
popf
xchg
xchg
pushf
cltd
dec
into
stos
cmp
inc
stos
movsb
mov
xchg
sub
push
stc
xchg
inc
sbb
pop
ljmp
lock
dec
or
add
xchg
les
pop
ljmp
add
in
insb
cmp
test
dec
cmp
push
outsl
mov
adc
pop
clc
sbb
pop
xchg
fistps
pop
movsl
jae
jmp
adc
cmp
icebp
and
cmp
cmp
add
dec
lea
inc
mov
push
or
mov
pop
jbe
bound
mov
cmp
sub
and
pop
mov
push
es
push
cmp
dec
adc
and
movsl
pop
icebp
mov
push
les
mov
sub
lds
push
cli
jae
into
cmpl
std
std
sahf
push
sbbb
repz
out
and
jecxz
pop
bound
jecxz
jno
lea
outsb
or
outsb
dec
jae
push
je
jge
fidivl
test
movsb
pop
sub
imul
ret
or
bound
lcall
cmpsb
pop
cli
cs
xchg
push
inc
push
pop
inc
aas
cwtl
ss
addr16
jge
imul
fnsave
xchg
push
cmpsb
jg
mov
inc
push
test
out
sahf
insl
push
lcall
int3
push
clc
cli
xchg
int
cmp
add
cli
shrb
inc
popa
xlat
fwait
jp
or
data16
insb
lods
aaa
ret
inc
lret
push
pop
sbb
push
xchg
repz
mov
lods
lods
cli
divl
dec
lock
jb
das
jbe
inc
loopne
movsl
lret
pop
mov
aad
ljmp
jns
cwtl
lret
pop
push
in
xabort
test
cmpsb
in
xor
push
pop
sub
out
adc
pop
fwait
and
and
xchg
outsb
jp
iret
sbbb
pop
lret
push
push
dec
cmpsb
iret
movsl
dec
jmp
jnp
add
pop
jb
fsubrs
sub
jb
cmp
andl
cwtl
hlt
mov
inc
push
or
inc
mov
push
out
aas
stos
movsl
iret
cmpsb
popf
lock
adcl
push
aas
pushf
cmc
xlat
and
pop
pop
mov
lret
jbe
and
scas
out
pop
repnz
jnp
push
lret
jmp
aaa
cltd
and
pop
call
or
movsl
jo
iret
into
popa
scas
scas
out
inc
cmpsb
shl
or
je
jle
xor
inc
data16
lahf
jbe
inc
fistl
jecxz
ss
loopne
movsl
xchg
clc
iret
inc
aaa
add
sbb
inc
pop
jl
and
push
daa
inc
mov
jnp
cmp
add
push
insb
mov
jne
pop
sbb
pop
cmp
dec
int
inc
jns
scas
movsl
fcomi
lret
ret
ljmp
aas
cld
out
ret
pop
sbb
ret
xor
pop
popa
jno
pop
rorl
mov
test
loope
inc
outsb
cwtl
out
add
jnp
inc
shll
lods
push
sub
mov
fldcw
pop
push
fucomip
mov
lods
sti
sub
ficoms
fdivr
sbb
outsl
fdivs
aad
adc
test
xor
lcall
sub
cmc
aam
mov
push
lret
cmp
shrb
push
mov
call
jae
jb
pop
sahf
mov
mov
scas
inc
pop
xor
mov
add
and
movsb
sahf
insl
mov
scas
xchg
push
lea
cltd
cmp
jle
bound
jge
in
mov
mov
sbb
jb
mov
in
cmp
add
sahf
addr16
cmp
arpl
iret
das
sub
addr16
pop
or
lahf
xchg
test
pushf
scas
xlat
out
je
out
sarb
in
mov
and
dec
jge
lock
imul
cmp
push
xchg
cld
and
lea
lcall
out
in
repz
sub
nop
cltd
addr16
divb
outsb
pop
fisubs
mov
fstps
insl
adc
call
jbe
gs
rol
das
xor
shlb
flds
lret
mov
imul
mov
cmp
adc
arpl
xchg
nop
mov
add
divb
push
jle
add
mov
and
xlat
enter
push
insl
xlat
mov
xorb
push
daa
dec
mov
clc
scas
push
xchg
int
sarb
jp
std
lods
aas
xor
mov
push
sub
bound
cmp
jb
mov
xchg
in
mov
leave
ret
pushf
and
mov
xchg
lahf
fldenv
enter
push
loopne
cs
xchg
push
ja
xchg
push
test
nop
push
push
xchg
out
sub
dec
adc
pop
pop
pop
jno
cmp
ss
pop
add
cmp
pop
or
inc
aaa
vprotw
mov
jmp
out
pushf
push
inc
ljmp
test
adc
loopne
insl
adc
adc
mov
mov
lods
mov
inc
frstor
sahf
or
dec
push
pop
xor
cmp
mov
insl
mov
or
icebp
and
jle
sub
mov
mov
inc
add
mov
xchg
test
imul
and
jo
imul
inc
sub
adc
adcb
inc
sbb
jl
push
cmpl
test
orl
mov
shll
fwait
sahf
xchg
add
lock
xchg
outsb
scas
inc
out
mov
fdivrl
arpl
lds
inc
and
xor
mov
or
negb
jno
pop
clc
cmp
xchg
into
sbb
pop
push
push
mov
divb
leave
mov
aad
mov
cmpsb
outsb
and
xchg
iret
push
rcrl
insl
sbb
add
mov
sar
dec
das
or
bound
mov
push
js
repz
xlat
out
xor
out
outsl
test
sbb
loopne
subb
test
ret
es
or
adc
sub
add
imul
xlat
bound
scas
lods
push
dec
and
jmp
lahf
mov
fs
sub
add
mov
jge
icebp
inc
fimull
cmp
sahf
sahf
lea
mov
and
gs
mov
add
or
pop
and
insl
test
lds
orb
fsubrp
test
stc
arpl
outsl
pop
ret
or
pop
inc
mov
icebp
or
push
mov
gs
shl
cld
jbe
dec
mov
sti
in
xchg
stc
dec
sbb
cmp
clc
dec
cmp
jge
test
enter
stos
and
ljmp
je
jno
jp
test
xrelease
xchg
test
push
jmp
and
inc
pop
in
jbe
clc
dec
sbb
pusha
add
aas
stos
mov
push
mov
and
jno
push
std
fcoms
inc
lcall
fucom
xchg
mov
popa
gs
sbb
push
popf
in
cmp
insl
mov
pop
aad
enter
mov
stos
xchg
lret
add
adc
push
insb
sub
push
aas
add
jge
push
adc
pop
andl
xchg
cmp
cmp
push
inc
sub
ljmp
sub
push
lods
mov
mov
mov
mov
xor
pop
push
pop
mov
cmp
notl
sbb
mov
sub
bound
and
cmc
jb,pt
sbb
pop
jne
ljmp
adc
icebp
aad
jne
addb
aaa
jl
xchg
sub
cmp
sbb
cmp
addl
dec
pop
push
adc
mov
cmp
ja
in
scas
push
mov
jle
mov
test
cld
cmpsb
inc
and
lea
fstp
imul
insb
mov
test
fwait
pop
add
rcll
insb
aam
mov
inc
adc
dec
push
push
push
push
out
test
pop
ja
ds
pop
jg
adc
insb
or
lds
xchg
sbb
inc
outsl
shrl
xchg
stos
inc
pop
cmp
mov
cmp
in
pop
cltd
and
cmpsb
call
imul
or
es
cmp
adc
popf
hlt
pop
pop
aaa
shrb
push
adc
jle
call
jb
xchg
xchg
pusha
std
mul
mov
lock
push
lret
in
push
test
movsl
ficoms
dec
into
cmc
ljmp
jne
or
cmp
sbb
aad
adc
arpl
jmp
lret
popf
and
mov
loopne
aas
and
xchg
cmp
xlat
cltd
out
push
jecxz
loopne
in
xchg
mov
sti
cli
xor
mov
pushf
xor
mov
xlat
jp
test
pop
fdiv
pop
cmp
andb
cli
sbb
and
sbb
push
pusha
decl
sub
cs
xor
cmp
loop
rorb
sbb
mov
rdmsr
jae
subb
das
cmp
je
sub
pop
dec
push
ud1
into
jg
insb
cmp
sbb
sbb
cmp
push
hlt
sti
adc
and
sti
ss
fwait
pop
jge
in
dec
mov
pop
mov
push
data16
lods
pop
pop
cmp
mov
push
sub
pop
jmp
xor
mov
and
rcrb
or
xor
adc
lods
jb
mov
outsl
daa
movsl
and
jne,pt
xchg
cli
add
ret
push
mov
es
cmpb
add
mov
xor
movsl
insl
xor
lahf
jp
cli
ret
out
sti
xor
mov
aad
mov
sti
cmc
mov
cs
pop
mov
xor
addl
shlb
pop
jae
lds
std
pop
sbb
xchg
sbb
dec
mov
xor
int
inc
dec
aam
addb
jmp
cmc
push
andl
dec
fsubr
inc
addr16
in
idiv
insl
or
mov
lods
jge
mov
sub
jae
sbb
jne
inc
pop
fsubs
add
shlb
mov
push
dec
outsb
sbb
outsl
mov
lods
jecxz
cmp
test
jecxz
aas
sub
outsl
loop
insb
fs
xor
mov
xchg
add
sub
ljmp
cwtl
neg
lret
push
shll
mov
mov
test
sub
jle
loop
sbb
cltd
es
insl
push
xchg
repnz
popa
imul
dec
shl
sbb
sbb
mov
jbe
aas
cmp
popa
xchg
aaa
push
add
repz
js
sub
adc
adc
test
mov
mov
dec
mov
sub
aaa
outsb
cmp
sbb
adc
or
and
cmp
push
movsl
push
cmc
cld
jne
mov
fldt
mov
push
pop
push
add
jae
jo
shll
inc
jae
outsb
cmpsb
mov
inc
cwtl
repnz
jno
popa
insb
hlt
nop
sub
mov
dec
sbb
mov
xchg
rolb
lds
cmp
xchg
push
mov
arpl
mov
je
cltd
lahf
pop
xor
add
leave
in
das
lret
jne
in
mov
dec
sbb
fisubs
outsb
push
enter
in
dec
add
dec
iret
test
push
push
ljmp
inc
aas
mov
fwait
and
xchg
mov
jo
and
fs
and
push
or
add
jnp
es
aad
or
mov
push
xor
in
xchg
montmul
cmpsb
lds
mov
inc
stos
jge
inc
jbe
or
and
sbb
inc
cli
in
sbb
lcall
dec
into
subl
pop
lea
fs
loop
es
sar
sbb
lret
out
push
test
cs
add
inc
pop
repnz
std
fsubs
push
xor
mov
and
out
sub
push
add
cwtl
jp
repz
cmp
jae
inc
sub
dec
ficoml
and
add
fwait
adcl
nop
stc
mov
sarl
mov
xchg
into
sub
mov
jo
les
aas
cld
xorb
pushf
mov
jg
fimuls
pop
mov
lods
lahf
cmpsl
fdivrs
bound
sub
or
mov
mov
ret
ficomps
rclb
push
mov
and
js
xchg
shll
imul
xor
filds
adc
jp
adcl
daa
test
adc
xchg
call
mov
pop
pop
js
adcl
insb
jg
jg
mov
sub
or
dec
adc
cwtl
int
or
inc
add
out
aas
inc
adc
cld
inc
cli
inc
mov
sbb
je
or
or
cmp
sarb
add
hlt
pop
xchg
jge
or
mov
rcl
imul
lahf
lods
ljmp
scas
push
push
testb
addr16
movsb
inc
sahf
rcl
lock
and
mov
jl
clc
fcoml
cmp
lcall
lcall
adc
jns
dec
lods
ret
loope
outsb
mov
test
xor
adcl
imul
mov
je
cwtl
mov
inc
icebp
dec
leave
addr16
sbb
push
pop
push
imul
xchg
clc
lret
sbbl
cmp
sbb
xchg
in
add
int
hlt
fs
sub
pop
sbb
insl
pushf
cmpsl
cli
faddl
iret
mov
jno
sbb
add
and
int3
aaa
stc
aaa
stc
outsl
mov
mov
pop
inc
repnz
pop
jae
xchg
mov
lods
jbe
dec
outsb
insb
mov
test
bound
imul
cwtl
stc
int3
inc
andb
out
mov
inc
push
test
sbb
cmp
cmc
bound
mov
adc
adc
out
out
mov
and
xchg
loop
or
jno
fcoms
xchg
push
into
push
cli
sub
scas
nop
sbb
movsb
inc
adc
fmulp
pop
cmp
mov
pop
cmp
fidivs
sbb
outsl
icebp
xor
aad
out
iret
jnp
pop
fcmovnb
adc
faddl
out
adc
scas
lret
push
in
sub
xchg
mov
mov
std
sbb
insl
adc
mov
test
pop
imul
add
sub
test
cmp
out
push
into
push
pop
sbb
add
hlt
push
fiadds
je
das
adc
mov
loope
fcomi
mov
adc
addr16
or
outsl
insb
pop
or
pop
test
xor
pop
xor
add
idivb
ret
adc
pop
mov
cmp
xor
or
scas
jae
push
lods
fwait
mov
les
stos
fnstenv
ret
cmp
jle
push
and
adc
fmuls
fsubrp
rcr
out
cmp
jle
movsl
in
movsl
mov
pop
jle
xor
dec
cmp
imul
mov
mov
fnstcw
or
cld
fldenv
pusha
jne
pop
mov
das
pushl
xchg
das
jp
out
jmp
std
dec
popf
sbb
mov
aam
xchg
loopne
mov
pop
insl
lret
pusha
out
mov
inc
cmp
ja
loop
push
dec
jae
push
std
mov
orl
mov
jge
test
out
fucomip
ljmp
inc
pop
pop
pusha
and
fdivs
pop
cmp
mov
mov
shll
add
add
out
mov
jl
mov
ljmp
mov
clc
pop
dec
mov
das
pop
add
jo
lea
in
and
xchg
sar
subl
imull
imul
punpckhdq
pop
jbe
cmp
mov
xchg
lret
js
inc
push
jl
js
xor
test
pop
mov
aaa
mov
push
movsb
js
xchg
aas
jnp
fimull
addb
pop
icebp
jg
jno
icebp
popl
scas
push
mov
or
dec
lcall
mov
push
in
aaa
jbe
push
mov
sahf
rcrl
jno
incb
hlt
pop
aad
ja
fwait
or
je
xlat
mov
outsb
fistpl
leave
fiadds
push
bound
push
rorb
mov
or
daa
arpl
adc
stos
cmp
js
jno
imul
in
addr16
jl
aaa
fldt
fidivl
dec
hlt
cld
lcall
stos
xchg
xchg
mov
sbb
jle
scas
mov
inc
incb
add
sub
andl
inc
jno
out
mov
mov
jne
mov
pop
aas
aam
pop
stc
std
xor
sub
xor
adc
pop
insl
int3
and
out
and
mov
mov
jmp
sbb
jp
lret
in
mov
pop
lret
pop
mov
lcall
ljmp
sahf
lock
in
or
out
mov
push
scas
outsb
jnp
mov
lahf
mov
aaa
push
fcoml
test
adc
into
arpl
mov
je
stos
cwtl
dec
icebp
dec
addr16
jmp
lahf
or
es
xchg
test
mov
cmpsb
xlat
dec
into
mov
aad
push
enter
push
mov
jecxz
out
cmp
les
push
pop
stos
mov
inc
mov
push
fidivrl
xchg
ror
mov
loope
jmp
std
cmp
adc
adc
and
pop
jl
jns
xchg
je
inc
push
addr16
mov
mov
sbb
cmp
pop
je
in
or
fstl
dec
iret
push
nop
fbld
cmovle
movsb
out
mov
pop
push
cmpl
mov
icebp
push
rorb
cmp
cltd
out
popa
ret
xlat
call
mov
jmp
xchg
push
fdiv
call
push
sbb
sub
stos
dec
xchg
imul
or
mov
mov
mov
out
lahf
push
mov
ret
mov
mov
ficoml
scas
dec
es
movsb
test
dec
xor
dec
pop
pusha
or
pop
mov
mov
xor
inc
adc
pushf
sub
daa
push
or
push
push
sub
jbe
cld
out
cmpsb
mov
adc
test
rcll
dec
fwait
pop
enter
push
pop
lods
mov
fcoms
or
jb
lahf
cld
pop
aad
jns
clc
addl
in
repz
xchg
mov
inc
sbb
dec
outsb
add
mov
sbbb
in
adc
cltd
aas
dec
push
sbb
pop
jmp
cmp
and
cld
mov
mov
negb
inc
mov
imul
mov
pop
sbb
movsl
andl
jns
pop
incl
or
sbb
cli
fs
sub
aad
iret
or
mov
pop
lret
pop
rorl
cmp
dec
or
xchg
pushf
sub
and
in
adc
jne
mov
mov
mov
test
mov
inc
movsb
cmp
jge
sbb
lock
push
jb
xchg
push
repnz
jno
ret
arpl
shr
sub
xor
loope
lds
mov
int
imul
or
push
popl
sbb
push
adc
xor
inc
inc
adc
pop
xor
mov
inc
pop
lock
mov
outsl
pop
in
pusha
insl
aam
mov
lds
jmp
adc
cmp
mov
pop
dec
scas
xchg
stos
jb
js
mov
arpl
mov
lret
jle
mov
add
pop
fs
inc
int3
push
dec
push
cmp
push
shlb
xchg
cmp
adc
or
lock
fists
inc
loopne
and
push
shll
clc
dec
mov
test
sub
jg
xorb
pusha
imul
inc
out
mov
adc
enter
adc
mov
testl
ljmp
or
ljmp
pop
shl
dec
roll
pop
mov
cmc
mov
jp
outsl
push
cmp
jae
aam
loop
sti
jl
cmp
sbb
inc
insb
mov
cli
mov
push
ljmp
cmc
cld
push
push
push
xchg
in
je
push
mov
mov
xor
lods
mov
int3
cld
fnstenv
push
inc
or
xchg
pop
sbb
pop
or
loopne
outsb
sbb
mov
dec
mov
repnz
sbb
cmp
mov
mov
loop
mov
das
jecxz
pop
dec
movsb
push
mov
and
loop
gs
mov
mov
stc
addr16
out
mov
mov
mov
sbb
xor
int
and
ret
ljmp
addr16
lods
push
sti
mov
mov
cmp
mov
xchg
pop
mov
lods
add
dec
xlat
xor
daa
xchg
adc
loopne
mov
pop
outsb
ret
loopne
xor
test
jbe
mov
in
daa
out
push
or
cmp
jmp
pop
mov
popf
nop
xchg
leave
repz
or
cmp
repnz
mov
mov
mov
sub
mov
or
out
popf
mov
mov
imul
inc
pop
push
in
sbb
shrb
lea
scas
test
sbb
pop
xorb
out
sub
xor
movsb
popf
xor
ret
sahf
ret
inc
jne
xorl
inc
aam
call
mov
mov
call
pop
aad
das
popf
mov
jmp
out
lea
arpl
out
lds
shrl
push
mov
daa
ret
mov
ror
or
scas
clc
in
jb
lret
adc
and
notb
xor
lock
mov
dec
bound
test
mov
jl
cmp
mov
icebp
fdivrs
push
test
adc
xorb
mov
and
je
mov
sbb
sbb
push
pop
nop
outsl
adc
xchg
mov
int3
dec
sti
testl
inc
loop
mov
cld
imul
dec
or
aaa
xchg
push
leave
les
aad
imul
dec
mov
push
jns
outsl
lea
sub
add
sub
pop
into
aam
mov
adc
sar
xor
cmp
mov
jno,pt
or
je
xor
imul
scas
add
xor
inc
pushf
fists
xor
loop
das
xor
cmpsb
cs
pushf
add
add
sub
roll
inc
cmpsb
loop
xchg
jmp
cmpsb
fs
sub
cmc
cmp
std
enter
mov
xlat
movsb
pusha
pop
repnz
inc
jmp
cmp
add
cld
pusha
mov
bnd
test
inc
insb
pop
xor
sub
call
add
cmpsl
sub
xchg
out
in
sarb
pusha
roll
sub
xchg
push
cmc
jecxz
les
inc
subb
xchg
cwtl
add
sbbl
cs
dec
inc
movsb
jg
call
add
add
mov
xchg
add
sub
es
cmpsb
mov
sub
sub
popa
movsb
loop
ljmp
mov
aad
arpl
clc
push
xchg
cmpsl
stc
and
testb
add
std
jnp
cs
lods
push
iret
pop
xchg
or
inc
add
in
addb
subl
lds
icebp
mov
mov
xor
push
in
and
add
stos
cld
inc
sub
jbe
in
and
push
insb
jnp
xchg
ret
xchg
ljmp
aas
xchg
lret
outsb
jo
mov
jp
and
insl
xchg
rorb
out
test
jnp
leave
ret
mov
and
out
imul
pusha
addr16
lock
adc
rcrb
add
iret
movsl
push
pop
test
push
xchg
clc
lods
lods
pop
xor
loopne
and
jne
pop
cmp
sub
testb
js
mov
dec
sub
popa
mov
je
xor
push
aam
imul
lods
testl
decb
sub
xchg
push
xorb
jns
adc
dec
mov
mov
sbb
aas
push
cltd
push
adc
mov
fwait
ds
movsl
subb
jl
and
xlat
or
or
rcrl
mov
cmp
fimull
pushf
mov
outsb
push
jmp
sub
pushf
pusha
int3
mov
dec
mov
insl
mov
and
inc
mov
mov
out
dec
fdivrs
cmpsl
pop
testl
sbb
cmpsl
hlt
pusha
faddl
pusha
test
int3
cmp
fnstcw
mov
jae
push
mov
mov
or
out
push
test
push
lock
sub
pop
mov
push
mov
leave
cmp
mov
fucom
dec
mov
sbb
cmp
neg
stc
push
mov
adc
in
or
mov
add
js
jp
ror
dec
cmc
icebp
stos
add
push
xchg
adc
movsb
je
inc
je
push
rcl
lds
lret
fbstp
mov
aas
inc
ja
mov
jl
dec
dec
ret
push
es
loopne
inc
std
xor
movsl
das
dec
push
inc
add
imul
push
mov
hlt
and
pop
pop
mov
cwtl
imul
lcall
sub
imul
mov
push
daa
dec
shll
xor
mov
and
cltd
or
dec
cmp
es
pop
lret
jl
adc
push
aad
pop
or
das
and
mov
sub
xchg
dec
mov
cmp
fidivl
xorl
jb
gs
adc
add
repz
push
jo
pop
repz
add
xchg
or
dec
je
cmc
test
xchg
add
mov
sub
xorl
lret
cmp
out
mov
call
jbe
cmpsl
pop
and
dec
cmp
pop
ret
pop
cld
aas
pusha
cmp
test
pop
imul
mov
fmul
aas
jp
out
out
xchg
push
mov
xchg
out
dec
sbb
cli
cli
dec
fwait
js
jl
add
iret
push
insl
aam
mov
xchg
jno
push
into
fiaddl
sbb
stc
fwait
negb
jle
inc
pop
popa
jg
lods
sbb
in
mov
mov
or
aam
sbb
std
fmul
aaa
sbb
lcall
clc
lods
aam
add
decl
sub
inc
sbb
data16
not
push
popf
inc
inc
pop
or
fs
int3
insb
nop
int
shr
jge
add
shll
clc
mov
in
scas
or
aam
icebp
iret
xchg
scas
xchg
cli
aaa
es
xlat
mov
dec
mov
xlat
pop
in
push
mov
fisttps
and
scas
iret
xor
out
repnz
ss
shll
ret
add
daa
ds
cmpsl
inc
ljmp
inc
mov
and
sub
sbb
jno
jnp
xor
outsb
push
mov
test
fdivs
movsl
in
fisubl
or
arpl
test
fstpt
in
pop
mov
mov
lods
cmp
in
sub
push
xchg
shrb
addl
ret
pop
pop
xor
imul
hlt
lods
mov
fcoml
push
test
data16
jmp
adc
mov
pop
adc
movsb
lcall
cmp
stc
jmp
fnstenv
fs
mov
enter
pop
inc
sbb
cmc
mov
stos
jno
shrl
fs
ret
add
xchg
lahf
fbld
mov
jns
std
je
sbb
loopne
insl
lahf
sarb
int
rcrb
fsubrs
inc
mov
lret
mov
mov
mov
mov
loop
jbe
lcall
aas
mov
fmuls
xor
inc
mov
xchg
sbb
mov
or
into
lds
lret
enter
cmp
dec
pop
xchg
lahf
aaa
in
jnp
sbb
in
inc
inc
inc
sub
mov
arpl
sbb
subl
rcr
aad
ret
jno
fwait
mov
adc
in
movsl
xchg
xorl
aam
pushf
mov
arpl
call
push
loopne
push
dec
jge
mov
jno
jae
mov
int3
inc
inc
nop
push
pushf
xchg
call
lret
mov
add
int3
jle
inc
int3
jl
sbb
outsl
int
add
jmp
sub
inc
mov
mov
gs
add
adc
ljmp
add
cmp
push
and
or
stos
loopne
lea
push
inc
mov
clc
fidivs
pop
sub
scas
sbb
ret
jg
loope
bound
aas
test
outsl
sub
push
pop
into
cmpsl
or
repz
ljmp
movsb
fcoms
jnp
dec
fsubs
cmc
or
mov
pop
rolb
inc
xor
int3
add
shlb
dec
sub
int
sahf
cmp
pop
test
xchg
and
insl
call
imulb
pop
fdivrl
pop
push
stos
fcoms
sahf
fiaddl
add
jmp
stos
inc
repz
rclb
add
ret
xchg
add
lods
imul
jbe
pop
adc
or
cmpsl
xor
adc
in
dec
jle
imul
fistl
mov
pop
and
inc
push
insl
ss
push
mov
out
pushf
imul
add
inc
jae
push
ljmp
xchg
fstpl
fcoms
push
cli
cmp
js
xchg
add
xchg
dec
or
lret
mov
imul
jo
adc
mov
rcr
adc
push
adc
cmpsl
mov
imulb
fldenv
fcoms
push
adc
std
pop
ljmp
aas
ja
cld
das
lds
cmpsl
das
mov
pop
fcomps
push
test
sbb
and
push
stos
xor
push
sub
mov
insb
repz
cmc
ret
mov
jb
cmp
hlt
cmp
outsb
popf
sub
stos
ljmp
cwtl
push
adc
jg
les
adc
vmread
pop
lret
pop
popf
inc
xchg
rorl
xor
daa
clc
push
in
dec
mov
repnz
adcb
insb
dec
add
dec
fiaddl
ljmp
xchg
sub
adcb
scas
dec
or
mov
shrb
jp
jge
gs
pop
push
arpl
inc
leave
fs
ret
cmpsb
imul
adc
decb
jnp
and
push
dec
cmpsb
and
mov
fiaddl
inc
mov
loopne
cmpsb
mov
rclb
nop
jg
repz
cld
frstor
inc
sub
outsl
insl
sbb
ljmp
shl
xlat
sub
lock
xor
pop
lock
shlb
dec
idivb
inc
cmp
leave
popf
xchg
jecxz
aam
je
jne
push
pop
in
in
and
cs
cmp
jmp
test
jae
mov
sbbl
scas
mov
add
add
mov
hlt
sub
mov
jge
sbb
lds
and
pop
mov
and
scas
push
xchg
mov
in
mov
ds
jns
jg
cmpsl
jecxz
call
sub
aad
inc
scas
mov
xor
leave
push
mov
test
js
pop
dec
jo
das
xor
fdiv
subb
inc
adc
adc
out
fwait
dec
cltd
xchg
fistpl
or
mov
movsl
lret
or
js
sahf
gs
dec
imul
in
dec
fmull
and
cld
cld
pop
xchg
scas
mov
aas
sahf
cmpsb
loopne
lret
cs
clc
xchg
subl
test
add
loopne
lock
jae
and
imul
cmp
xchg
loope
lret
cmpsb
or
repnz
out
or
sti
out
fdivs
or
fwait
testb
ret
jl
xor
leave
or
or
inc
popf
ja
mov
sbb
dec
aam
movsl
jl
loop
paddusw
mov
movsl
adc
jnp
cld
mov
jg
or
js
xlat
add
jno
jle
jecxz
ss
cmp
and
les
sbb
adc
inc
inc
xor
imul
mull
int
sbb
xchg
stos
pushw
sub
mov
mov
lods
cmpsb
aaa
fs
sbb
insl
fldenv
mov
pop
or
xor
mov
stc
add
std
push
push
insb
clc
inc
psubsb
dec
add
add
mov
sti
push
mov
push
inc
lret
pop
lret
vpcomw
js
enter
negb
stos
xchg
adc
pop
movsb
gs
testl
add
push
jne
out
adc
cmpsb
or
std
sbb
jbe
mov
sbb
mov
fld
sbb
xorb
je
mov
cltd
and
push
mov
or
aaa
jle
inc
popa
pop
ljmp
add
xchg
xlat
jg
push
arpl
cmc
xor
pop
mov
jp
into
fcomi
cmp
popf
cmc
rol
dec
cmc
sub
mov
sbb
jae
movsb
gs
dec
nop
sub
addl
sbb
xchg
imul
fisubs
pop
rcrl
adc
xor
jo
inc
or
jle
and
jnp
cmp
inc
ret
sub
xor
leave
stos
shll
jbe
or
or
push
bound
jmp
repz
dec
pop
in
sbb
lods
pop
xor
xchg
add
loope
add
adc
mov
lahf
cmp
fnstsw
fbld
repnz
fistpll
repz
insb
jg
dec
inc
jg
adc
scas
lcall
sub
dec
inc
jecxz
jae
jae
mov
lds
flds
pop
pop
pop
mov
xor
pop
pusha
sbb
push
or
out
out
mov
mov
add
in
sti
mov
inc
xchg
andb
das
sub
fcoml
push
lret
jo
xchg
outsb
jmp
pop
movsb
fisubrl
xchg
inc
shl
fimull
push
fldt
lods
ljmp
mov
push
cmp
std
push
or
mov
test
out
aaa
sbb
je
cmpl
popf
jecxz
test
lret
call
mov
adc
loope
dec
lcall
sub
or
movsl
xor
lret
int
lock
in
mov
in
push
sub
dec
fistl
sbb
pop
mov
push
mov
dec
inc
sbb
je
arpl
dec
or
pop
cmp
sbb
rcrl
sbb
data16
movsb
std
aad
lcall
iret
or
subb
in
or
repnz
dec
out
mov
push
test
bound
push
ret
dec
lds
rorl
das
sub
mov
mov
fwait
adc
test
pop
mov
mov
dec
jae
fwait
sub
insl
rolb
jb
mov
sub
cmpsl
adc
jbe
dec
xor
lock
dec
jp
jg
jne
addl
test
lea
pop
add
lds
sbb
mov
jge
dec
stos
mov
adc
sbb
pop
test
incb
pushf
cmpsb
js
mov
scas
pop
cmp
gs
adc
fsubp
push
dec
adc
hlt
or
leave
call
xor
int
ljmp
stos
mov
xor
int
call
pop
inc
pop
shlb
enter
dec
push
add
pop
push
out
dec
cmpsl
aad
sbb
cwtl
or
rcrb
std
jle
adc
cwtl
ja
mov
sti
mov
dec
mov
shr
andl
repz
and
std
or
add
jb
lahf
adc
jne
mov
clc
jns
sbb
sub
inc
into
push
pop
call
add
cmp
cmc
adc
cmp
push
dec
mov
mov
push
xchg
cmp
adc
pushf
mov
mov
int
imul
push
push
rcrl
call
and
in
xchg
dec
pushf
sbb
fisubs
dec
lea
sub
jbe
lds
lahf
cwtl
cmpsb
push
and
lret
clc
add
lea
sub
sub
xor
cmpsb
lods
push
dec
imul
xlat
imul
pop
sub
add
popf
cmpsl
sbb
test
lret
orl
int3
std
xor
mov
push
pop
push
inc
xchg
xchg
ja
jnp
mov
sub
pop
adc
lahf
mov
js
xor
jecxz
mov
imul
in
mov
sbb
das
addr16
jnp
push
xchg
jnp
dec
pop
pop
loopne
bnd
rcll
push
test
fisubl
jns
push
addr16
jge
mov
test
lea
push
jge
mov
out
sbb
pop
xor
lods
aas
inc
dec
addr16
popf
add
xor
jge
lcall
push
not
xchg
add
testl
push
cmp
aad
scas
and
dec
xor
loopne
mov
pop
cmp
lret
push
out
daa
cmc
jge
sub
ficompl
xchg
rorb
pop
aad
or
sbb
std
push
jno
mov
fildl
cmp
int3
cmp
cmp
jnp
xor
xchg
jp
repz
xor
hlt
lahf
in
sub
and
mov
pop
adc
sub
push
pushf
loope
xorb
mov
es
cld
shlb
std
mov
xor
push
jbe
ds
stos
loop
movsb
pop
dec
fistpl
xlat
cmp
adc
jle
mov
fsubs
ljmp
push
dec
dec
js
xchg
mov
pop
pop
or
adc
xchg
movsb
xchg
and
and
pop
cmp
arpl
fs
adc
mov
push
cmp
add
jnp
lret
add
push
adcb
cs
int
xchg
enter
xchg
push
int3
cmpsb
pop
adc
testl
sbb
imul
add
rorl
xchg
ja
movsl
mov
sbb
popf
adc
cmp
jno
dec
jbe
leave
pop
hlt
hlt
sti
inc
cli
loopne
and
pop
mov
mov
sub
std
dec
orb
adc
ja
sbb
or
and
inc
mov
cmpsb
jae
les
adc
mov
rorl
pop
pop
sbb
xchg
xchg
mov
add
push
imull
sbb
jbe
mov
dec
in
add
jmp
jno
jp
dec
cmpsb
add
push
cmp
rol
sub
cmp
push
xor
mov
sti
mov
jl
pop
push
mov
add
sub
mov
rorb
jnp
addb
int3
imul
cltd
push
fwait
pusha
addl
cmp
cmp
jge
flds
adcb
in
jns
outsl
out
test
mov
dec
lret
je
addb
fcompl
pusha
push
sbb
int
lds
add
sub
cmp
pop
mov
aaa
fucomp
xchg
sahf
test
xor
dec
mov
mov
rcl
xchg
inc
icebp
jg
xor
sbb
lds
cmpsl
ffree
xor
adc
loope
jno
scas
imul
mov
add
movsb
sub
lds
jg
aaa
pusha
std
and
pusha
pop
es
repz
xchg
sbb
sub
cmp
mov
mov
fnstcw
movsl
lds
mov
and
pusha
mov
mul
mov
mov
mov
inc
or
mov
push
jl
stc
sub
das
je
mov
test
xchg
xchg
inc
sub
int3
cmc
fs
daa
jmp
out
inc
jle
xchg
jne
movsl
mov
ljmp
test
stos
jmp
or
and
push
roll
into
frstpm(287
inc
xlat
rcr
cmp
test
sbb
bound
or
loop
mov
jb
test
dec
dec
ficompl
mov
lret
lods
cmp
ret
icebp
or
iret
mov
mov
cmp
dec
and
cmp
and
ja
pusha
or
push
xor
fbld
add
push
mov
jae
inc
fcmove
sub
sub
sbb
jne
call
mov
decl
lods
xchg
mov
cmpsb
add
test
cmp
xlat
lret
test
xor
and
xchg
push
sti
loope
dec
in
fldl
call
jmp
add
pop
stos
jge
and
aas
inc
int
scas
push
or
push
mov
jae
mov
js
aaa
mov
in
adc
mov
scas
xor
mov
lds
or
pop
push
mov
lods
movsl
jecxz
imulb
push
xchg
inc
push
sahf
enter
hlt
gs
xchg
jno
out
int3
repz
push
aam
mov
ficomps
lahf
cmp
and
cmpb
jb
cmp
jmp
cld
andl
push
mov
pop
push
das
jecxz
popf
mov
xchg
popa
call
std
mov
arpl
and
jmp
jmp
jle
mov
shlb
jp
scas
loope
cmpsb
lahf
inc
xchg
dec
filds
dec
cmpsb
adc
and
jne
jae
in
clc
ljmp
mov
mov
fldl
fstpl
adc
adc
leave
cs
mov
xlat
sbb
add
sub
xchg
lods
xorl
lcall
sbb
outsb
cld
call
jmp
pop
cs
jp
fsubr
lret
mov
adc
in
mov
mov
cmpsb
and
in
test
aaa
sub
repnz
ret
cmp
aam
nop
enter
mov
jo
sub
mov
sbb
outsl
lahf
dec
stc
mov
clc
add
stos
cmpsl
js
mov
nop
lds
dec
int3
aad
push
fs
loopne
frstor
pusha
call
or
nop
mulb
mov
adc
xchg
cmpsl
push
loope
insb
jb
out
jge
addb
mov
mov
push
popf
cli
sbb
mov
enter
pop
sbb
cmpsb
pop
ret
scas
popf
ffreep
lret
adc
xor
xchg
jns
test
lock
and
cmp
cmp
or
add
mov
dec
xor
nop
bswap
cs
popf
adc
movl
jp
and
xor
mov
in
sub
jp
dec
mov
mov
mov
mov
mov
es
or
cmp
movsb
jbe
loopne
lahf
scas
int3
mov
test
sbb
int
movsb
or
mov
in
ret
out
fdivs
aaa
jmp
mov
sub
icebp
pop
mov
cmpsb
sub
xchg
mov
scas
adc
pop
push
pop
call
fwait
outsb
scas
cmpsl
sub
jbe
and
adc
leave
or
dec
mov
pop
push
ret
cmp
push
movsl
pop
outsb
insb
cmp
mov
dec
push
inc
insl
jne
push
xchg
adc
mov
lret
ja
mov
hlt
mov
mov
xor
cmp
cwtl
push
shl
in
or
leave
rcrl
test
add
ja
cltd
xchg
andb
cwtl
adcb
push
jnp
pushf
pop
in
aam
jecxz
popf
dec
loopne
dec
push
outsl
dec
pop
and
aaa
loopne
mov
adc
int
jo
div
jl
rcl
xchg
pop
pop
out
je
cmp
lret
addr16
shlb
cmp
and
aam
and
mov
lock
addr16
dec
lret
fstps
loop
stc
dec
sbbb
fcomps
lea
inc
lahf
cwtl
xor
out
pop
sbb
scas
jge
jmp
fldl
out
fbstp
dec
sub
xchg
adc
push
mov
mov
pop
iret
pop
stos
aas
mov
hlt
mov
push
push
or
sahf
or
and
mov
xor
or
mov
jp
dec
add
mov
inc
mov
xor
mov
out
sub
jmp
cli
cmpsb
mov
inc
and
mov
xchg
push
mov
cld
or
jle
push
mov
mov
ss
ljmp
in
mov
sub
jle
std
push
xchg
add
add
fucom
inc
push
icebp
sbb
into
inc
rcr
inc
jle
aam
mov
aas
pop
rcrl
dec
fisubrl
mov
test
int3
stc
push
dec
or
inc
mov
pop
xor
jmp
out
dec
jnp
lret
jecxz
lret
fcomip
pop
push
push
xor
sbb
stc
xchg
adc
pop
imulb
andps
out
xchg
pop
or
decb
sub
add
push
mov
test
mov
std
mov
pop
lahf
lahf
shlb
mov
sub
out
sti
xor
mov
pop
movsb
pop
pop
in
aad
mov
ss
push
sub
test
cmp
cmpsb
orl
sub
cmp
mov
pop
and
cmp
xorb
sub
lcall
movsl
jmp
stos
add
nop
xor
push
mov
cwtl
cld
adc
mov
nop
push
mov
das
inc
mov
loope
pop
cmp
add
jns
leave
push
mov
xchg
pop
or
sarb
addr16
shlb
mov
xchg
in
fildl
add
mov
jp
inc
xchg
loopne
ror
std
sub
fsubr
cld
fwait
into
fistpl
movsb
xor
or
or
push
adc
data16
xchg
imul
arpl
xchg
js
adc
jecxz
add
dec
jae
fidivrl
xor
daa
pop
jno
mov
add
push
sub
jns
cmp
aaa
rcll
dec
cmpsb
insl
pop
jb
popf
out
pusha
mov
adc
insl
jle
and
les
scas
outsl
dec
stc
or
xchg
xor
into
sarb
std
sub
sub
addr16
shll
inc
inc
dec
idivb
aad
in
movsl
popa
fnstcw
idiv
stos
inc
xchg
pop
jg
ficoms
sub
pop
cmp
fmull
xchg
push
scas
addr16
push
mov
das
jae
ret
or
les
movsl
cmp
and
dec
inc
gs
movsl
movsb
jl
jb
fadds
lret
or
adc
jns
movsb
ret
sbb
in
shll
add
ret
add
xchg
add
stos
pop
inc
incb
fldt
nop
int
stos
ljmp
adc
dec
scas
je
leave
movsb
mov
xor
or
adc
lock
aad
and
inc
xchg
jo
mov
xor
cmp
pop
pop
test
pushl
ja
mov
adc
clc
out
aaa
js
hlt
arpl
adc
sbb
data16
rcrl
mov
lret
sub
xchg
push
push
lret
xchg
cs
ret
subl
popf
ja
enter
push
sti
pop
sarl
pop
cmc
xchg
pop
mov
or
scas
dec
xchg
cmpsl
or
cmpsb
mov
sbb
rol
shll
xchg
scas
std
ss
jno
imul
nop
mov
jns
imull
les
addl
mov
daa
or
das
test
das
sarb
imul
xchg
aaa
fwait
pop
lods
pop
jbe
push
adc
test
dec
pop
cld
pushf
jmp
adc
rcrl
pop
mov
out
xchg
xchg
sbb
stos
mov
cmp
push
cs
xor
popl
push
in
mov
jbe
jecxz
jle
pop
add
cmp
cltd
cmp
scas
push
fcomip
jp
into
pop
mov
stos
xchg
cmp
outsl
aaa
jg
mull
shl
imul
sti
add
int
mov
inc
sub
out
inc
leave
les
pop
xchg
push
neg
in
cmpsb
fistl
jle
inc
add
outsl
sub
int3
lahf
test
cmp
test
adc
inc
std
out
adc
dec
fidivl
xor
popa
sbb
jb
mov
cmp
popf
loop
dec
mov
add
xor
aas
xor
test
leave
and
cmp
cmp
xchg
mov
mov
sub
fcompl
subb
arpl
xchg
cli
fstps
inc
inc
xor
sbb
test
in
sub
clc
add
xor
jg
es
sbb
jno
pop
jge
mov
repz
xchg
data16
adc
call
mov
inc
pop
cltd
jnp
xchg
xorb
mov
insb
arpl
test
fistpll
loopne,pt
addr16
int3
or
mov
or
js
mov
mov
jnp
lods
sub
adc
push
cmc
nop
jne
mov
add
push
pop
mov
in
test
sbb
aaa
cmc
ret
mov
mov
jae
or
popf
push
pop
sti
or
fdivs
lea
inc
mov
mov
call
into
loope
mov
test
inc
jne
test
adc
stc
test
inc
pushf
sbb
fldt
pop
jne
cltd
test
mov
hlt
sub
fisttpl
sbb
dec
fdivrs
js
pop
movsb
push
ja
je
fwait
add
loopne
flds
outsb
cltd
add
push
jmp
loopne
mov
movsl
xchg
xor
jl
fsubp
pushf
out
aas
ljmp
cmp
mov
push
sbb
mov
leave
dec
inc
sub
push
stos
xor
mov
mov
jbe
and
mov
insb
arpl
jecxz
pop
out
or
repz
mov
xchg
dec
mov
sti
add
fistpll
mov
pushf
aam
test
sub
outsl
cmpsl
xchg
inc
leave
aas
mov
mov
std
shr
push
outsb
cmpsb
mov
mov
push
sbb
add
imul
mov
rorl
cwtl
pop
nop
xor
add
push
xor
pop
pop
mov
int
loopne
pop
loopne
push
jle
xchg
jnp
pop
dec
dec
jae
mov
sub
mov
loopne
outsb
xor
mov
or
rolb
mov
pop
adc
cmp
dec
bound
jg
outsl
scas
add
push
inc
mov
dec
and
out
sahf
imulw
lcall
stos
pop
jo
and
inc
sbb
sub
xchg
popa
mov
mov
mov
pop
xchg
push
add
pop
stos
ljmp
xor
gs
imul
sub
xorl
mov
aaa
inc
mov
shl
daa
outsl
push
push
dec
sbb
mov
mov
or
into
cmpsl
arpl
loopne
fisubl
test
iret
push
dec
inc
lds
jl
jo
mov
out
pop
pop
mov
test
pop
add
insl
and
hlt
xor
into
cmc
icebp
adc
sbb
jmp
fildll
test
dec
xor
inc
adc
jl
mov
pop
dec
movsl
xchg
in
fwait
push
jp
xchg
dec
rcrb
xchg
cmp
inc
fldl
ret
cmpsb
adc
lds
add
mov
hlt
mov
dec
js
jb
or
adc
inc
pushf
cmp
std
dec
xor
ret
jo
pop
bnd
mov
dec
sub
cmpsb
test
clc
mov
xor
iret
lahf
je
pop
push
inc
out
cld
xlat
repz
jnp
push
aad
add
jl
not
scas
mov
adc
fldt
fisttps
addr16
std
pop
pusha
sub
nop
fmuls
out
add
divl
sbb
mov
rclb
icebp
mov
outsb
hlt
or
xchg
jl
push
sub
or
imul
out
dec
push
pop
idiv
inc
jnp
add
fbld
testb
push
push
mov
dec
fists
js
mov
cmp
ss
mov
adc
je
inc
mov
adc
push
outsb
mov
js
dec
aas
mov
sahf
dec
test
push
mov
cli
insb
jge
inc
push
enter
cmp
pop
stos
lahf
mov
fiaddl
inc
je
and
test
dec
xchg
stc
inc
xlat
addl
sub
jg
leave
loop
pop
incl
lea
or
fwait
jne
mov
xchg
lock
loope
xchg
xchg
jo,pn
cmpsb
jl
inc
and
clc
mov
cmp
sbb
lods
imul
incb
outsl
sub
push
add
xlat
test
roll
cmp
aam
push
fcomps
pop
xor
and
cmpsl
add
xlat
pop
and
divb
mov
adc
cmp
mov
and
frstor
mov
mulb
push
into
mov
push
lock
push
sub
je
cmp
aad
popf
jl
xlat
scas
inc
int
jp
and
int3
clc
push
rcll
xlat
inc
call
pop
pop
add
sub
sub
fildll
mov
shl
cltd
push
sbb
adc
std
out
flds
mov
pop
sbb
loopne
ja
in
es
aad
sbb
jb
and
or
xchg
jbe
jnp
mov
aam
pop
cmp
jg
andl
pop
outsl
lret
push
loope
cmpl
push
lds
std
jg
loop
sub
jnp
loopne
or
decb
ss
pop
mov
mov
and
jp
inc
cmp
push
mov
orl
dec
mov
bound
aaa
in
xor
arpl
add
push
nop
aas
xor
pop
lret
hlt
mov
jb
push
int3
or
mov
aad
addr16
xchg
inc
xor
aad
push
ffree
cmc
push
push
fsubrs
loope
xor
test
icebp
cmpb
andb
and
es
and
es
mov
xchg
mov
loop
mov
add
dec
ret
mov
mov
movsl
jecxz
adc
sub
add
adc
mov
es
stos
fsubrs
scas
enter
and
jbe
test
jmp
push
or
arpl
jge
leave
sahf
pusha
pop
int
sbb
xor
std
xchg
push
out
inc
outsl
mov
stos
sub
adc
xor
jp
pop
and
dec
cli
push
insb
hlt
out
fbld
or
lods
mov
insl
push
scas
sbb
aad
push
dec
push
daa
inc
shrb
xor
int3
scas
xchg
push
loope
jg
ds
fwait
adc
or
dec
je
and
addr16
imul
adc
shll
aad
xchg
ffree
fadds
inc
shl
das
and
mov
mov
aam
xchg
ss
in
dec
out
insl
pusha
dec
cltd
push
cli
inc
sbb
fs
jne
dec
repz
xchg
cmp
push
jne
inc
adc
rcr
sub
shll
negl
cltd
mov
ja
mov
mov
or
ja
pop
lea
outsl
mov
xor
pushf
stos
push
push
out
push
shl
out
push
cld
mov
stos
cmp
in
jo
push
movsb
sbb
or
push
sbb
aad
mov
lcall
js
xchg
mov
call
mov
fwait
out
push
sub
mov
daa
stos
cmpsl
and
mov
inc
mull
lds
jecxz
mov
dec
push
movsb
or
push
pop
outsb
xchg
dec
mov
dec
nop
xchg
nop
sub
or
out
sbb
mov
call
bnd
fimull
mov
xchg
loop
clc
sub
clc
std
or
mov
xchg
pop
mov
or
loope
lods
and
sahf
xchg
mov
es
insl
sub
pop
and
rcr
iret
loope
fstps
add
add
push
out
divl
cld
ret
adc
sarb
add
lock
and
imul
or
sbb
fdivr
mov
and
jo
aas
sbb
into
repz
or
and
and
andl
popa
jmp
clc
rclb
cli
lds
cmp
xchg
out
mov
or
pop
shlb
popa
clc
xchg
inc
xchg
xchg
imul
pop
dec
jge
xchg
fcomi
mov
jae
incb
ficoms
and
aaa
mov
xor
mov
popf
jp
fisubl
scas
add
xchg
decl
sub
nop
psrld
in
js
clc
cmp
vmread
inc
or
popf
mov
mov
sbb
pop
leave
test
test
dec
pop
xor
fcmovbe
sbb
mov
into
dec
and
cmc
enter
leave
or
push
push
inc
mov
mov
pushf
fmull
sbb
out
mov
insl
fwait
lods
iret
in
shrl
iret
mov
rclb
insb
ss
outsb
jb
popf
pop
bound
pop
adc
inc
push
es
and
pop
cmp
movsl
push
leave
sbb
jge
mov
inc
stos
mov
push
nop
lds
mov
dec
out
inc
cmp
cmc
xchg
or
or
std
mov
mov
xor
loope
aas
cmpsl
bound
sub
dec
sbb
bound
inc
adc
sbb
jo
je
jl
pop
cli
popf
stos
rcll
lcall
data16
mov
add
lods
pop
cmp
and
xchg
sub
dec
unpcklps
sahf
in
ret
scas
in
jmp
lods
xchg
cmpsl
outsl
dec
mov
dec
xlat
push
mov
dec
cmp
add
xchg
loope
or
iret
cmpsb
je
jbe
adc
jge
sbb
mov
xchg
xor
jns
pushf
je
fdivl
idivl
sbb
add
imull
push
xchg
fcomp
loopne
in
push
call
mov
aam
mov
mov
addl
inc
dec
or
and
jle
in
pushf
add
out
mov
inc
test
jle
push
pop
adc
adc
clc
outsl
inc
cld
addl
fstl
push
lret
je
cmp
ljmp
add
imul
daa
movsb
mov
ljmp
add
jle
push
test
addr16
gs
mov
outsb
jge
dec
fisubl
sahf
sbb
test
imulb
jnp
aad
mov
or
mov
mov
inc
add
sarb
or
incl
xor
or
push
cmp
enter
cltd
enter
je
bound
enter
cld
mov
mov
xor
hlt
jge
and
adc
sbb
inc
bnd
arpl
push
push
mov
fidivrs
xchg
jmp
aad
push
and
ljmp
xor
lea
rcll
fwait
dec
adc
jno
cmp
imul
fldt
jmp
mov
ja
clc
popa
dec
cld
cmp
cmpb
inc
push
sub
add
lds
mov
and
inc
mov
push
xor
push
lcall
cmpsl
mov
call
pop
mov
jns
cs
adcb
adc
insb
out
jno
and
inc
xlat
js
adc
xor
cmp
fsubrl
push
daa
inc
jmp
sarl
stos
jb
aam
xacquire
cld
cmp
popa
ss
and
mov
mov
aas
vmovntdq
lock
movsb
cmovp
fdivs
mov
sbb
fxch
into
sub
sbb
xchg
cmp
sbb
inc
sub
in
xchg
jle
rorb
push
fcmovbe
notl
mov
cmp
insb
cmp
jp
or
inc
jmp
fisubrs
push
lcall
mov
cmp
pusha
sub
stos
stc
mov
test
or
push
mov
imul
insl
mov
out
xchg
dec
sbb
enter
push
or
scas
inc
fbstp
stos
adc
mov
dec
push
fidivs
mov
add
cmp
aad
cmc
nop
sti
aad
fldenv
and
fdivrl
ds
jne
in
xchg
xchg
movsl
and
xor
mov
adc
ljmp
fwait
jns
mov
out
data16
out
adc
stos
xchg
dec
mov
or
xchg
pop
or
scas
xor
jmp
jmp
sub
ss
out
xor
push
add
divb
and
stos
xchg
gs
lods
in
xor
scas
mov
stc
dec
out
bound
xor
lret
sbb
mov
sbb
cmp
add
push
adc
lods
jmp
in
jg
inc
clc
mov
sub
pop
jae
pop
sarl
into
push
xchg
cmpsl
dec
and
jb
mov
clc
push
fisubs
xchg
faddl
dec
fiadds
xor
ds
dec
rcrb
jg
cli
adc
jo
in
fisubrl
cld
sub
jle
xor
int3
fwait
pop
push
lds
movl
jg
orb
rcrl
adc
mov
clc
jno
sahf
jnp
fstl
pop
push
cmp
scas
adc
fcoms
sahf
leave
xchg
mov
shll
cmpsl
repnz
mov
add
cmp
aaa
xor
je
insl
cmc
inc
and
mov
out
gs
push
cmp
sbb
and
rcrl
jmp
cs
int
pop
dec
pop
and
add
inc
lea
xchg
xorb
cmp
bound
add
insb
fdiv
lahf
sub
mov
jg
cmpsl
es
mov
dec
xchg
mov
call
gs
jno
sub
inc
jnp
cltd
rorb
in
xor
mov
and
rcrl
int3
fdivr
test
push
rcr
push
push
jecxz
inc
pop
add
pop
xchg
mov
xor
xlat
ret
idivl
pushf
leave
xchg
jg
sub
add
mov
inc
mov
sar
mov
sub
pop
mov
pop
lea
enter
stc
fisttps
loop
push
flds
stos
sahf
addl
xor
out
cmp
arpl
jge
sbb
inc
test
dec
decb
or
pop
in
repz
ror
push
pop
call
ds
vmovdqu
fisttps
cmc
dec
cwtl
ja
push
adc
xor
jae
jae
jl
add
mov
lock
pop
test
jp
int
mov
mov
cmpsb
out
imul
lret
and
push
fildl
enter
mov
aam
js
jne
mov
pop
rorl
xchg
sub
hlt
adc
sbb
popf
stos
adc
outsb
cmpsl
cmc
push
cltd
sub
or
or
lods
pop
aas
and
mov
or
shl
frstpm(287
cli
shrl
xor
pop
pop
jnp
xchg
inc
mov
sub
call
mov
mov
xor
out
arpl
out
mov
push
je
aam
inc
sub
mov
stos
mov
xchg
imul
ret
sbb
xor
adc
clc
mov
add
add
mov
es
mov
jnp
insl
sbb
roll
mov
mul
push
mov
cs
inc
xor
insb
push
std
push
icebp
lods
scas
bswap
mov
dec
xchg
add
and
push
xor
cmp
mov
add
pop
mov
inc
test
pop
mov
leave
cltd
call
and
adc
jne
jo
repz
push
adc
or
call
mov
les
mov
pop
ljmp
push
add
push
xchg
repnz
stc
sbb
int3
push
jge
jmp
jmp
push
jmp
mov
jl
aam
test
xchg
mov
cmp
sub
xor
add
mov
jp
shll
push
test
test
sbb
mov
push
imul
insb
ret
mov
mov
dec
pop
ljmp
aaa
repz
jnp
push
in
fisubs
aad
and
ds
fsubs
pop
outsb
mov
pop
add
xchg
add
jno
fbstp
add
jnp
out
std
pop
cmc
jne
repz
mov
repnz
push
mov
ret
ret
adc
sub
int
adc
imull
lds
xor
xor
negl
jnp
xor
or
push
mov
test
or
inc
ret
fs
cwtl
adc
lea
jns
xor
xor
and
jmp
or
and
dec
sub
cwtl
pop
mov
imul
sbb
mov
xchg
xchg
push
fs
scas
pop
call
mov
xchg
dec
cmc
sbb
rorb
or
mov
fwait
out
in
and
jo
add
dec
imul
dec
sahf
adc
shlb
sti
xchg
mov
mov
cmp
lret
pop
lds
lods
push
lds
dec
sbb
fdivrl
divb
int3
ljmp
cmpsl
push
and
lock
and
jbe
adc
sub
insl
stos
inc
inc
in
sbb
push
fbld
cmp
xchg
enter
cmp
jns
cli
call
sbb
popa
gs
out
in
and
xor
dec
push
push
xchg
divb
adc
ret
out
dec
xor
sbb
aad
mov
shr
xchg
aas
sbb
mov
mov
pop
sbb
je
lea
sub
or
inc
mov
aas
push
pop
dec
mov
daa
lret
xor
or
fbstp
insl
xchg
lcall
and
adc
mov
inc
lahf
add
cmc
jg
lock
lret
xor
ja
loope
mov
fbstp
pop
test
add
adc
adc
jmp
jns
pop
mov
xchg
sbb
es
pcmpeqd
into
lahf
insl
cmc
add
and
or
repnz
sbb
or
xlat
repz
jg
repnz
add
pop
xchg
jp
shrl
fisubs
and
nop
push
jmp
movsb
lahf
divb
jb
ljmp
mov
and
xchg
sahf
add
mov
pop
fistps
push
movhps
fadds
loop
adc
jecxz
stos
and
xchg
mov
out
cmpsb
lds
add
call
or
icebp
cwtl
repnz
testb
sub
enter
aaa
leave
jg
inc
jo
dec
filds
ljmp
in
out
fsubrs
xor
dec
xlat
add
or
cmp
and
adc
xor
pop
cmp
sbb
test
cmp
sub
test
or
fists
loop
or
cmp
hlt
cmc
push
mov
mov
and
ficoms
in
test
sbb
jnp
data16
pop
movsl
cltd
testl
mov
dec
jae
bound
repnz
mov
add
loop,pn
cs
mul
pop
out
and
dec
mov
daa
mov
pushf
add
sub
repz
lods
and
in
mov
dec
and
adc
ret
icebp
sti
shrb
mov
push
xor
mov
popf
lahf
cs
jo
in
mov
scas
cmp
push
movsb
mov
das
pop
loope
inc
in
mov
mov
jge
fmuls
stos
cmp
mov
and
inc
ds
lcall
mov
sub
outsl
or
sahf
lret
sahf
or
cmp
aaa
lods
repnz
out
pop
push
daa
or
or
add
sbbl
mov
lods
push
jae
adc
mov
add
fldl
sbb
xchg
mov
shll
push
mov
ficompl
and
cmp
scas
pop
pushf
int3
in
jp
inc
mov
pop
mov
mov
pop
adc
xchg
out
mov
psubsb
sub
into
jbe
iret
mov
jl
mov
xor
fdivs
cmpxchg
mov
mov
push
mov
fsubrs
cmpl
imul
xchg
das
stc
js
rorb
xchg
lea
xorb
and
push
out
add
cmp
aam
xlat
mov
das
rol
shrb
mov
sti
das
jo
push
cmp
pushf
sub
clc
push
fs
pop
mov
scas
cmpsb
inc
jp
cmp
lock
push
cwtl
add
push
sbb
lret
jle
push
fs
sarb
xchg
mov
xor
in
and
outsl
cmpsl
jne
jge
lahf
aas
ljmp
call
dec
adc
adc
pop
fmul
push
mov
int
jge
popf
call
loop
fbstp
jle
lods
pop
icebp
push
testb
xchg
mov
xchg
in
lea
imul
pop
mov
jmp
shrl
sub
push
insl
in
adc
dec
mov
fdivs
scas
or
out
add
lahf
icebp
lock
lret
dec
sub
subb
pop
lods
test
jg
cmpsl
rsqrtps
add
jno
cmp
shrl
sbb
mov
dec
loope
inc
fstl
repnz
test
push
pop
dec
push
push
fnsave
sarb
or
into
dec
mov
pop
test
mov
cmp
cmp
mov
xchg
imul
loop
mov
arpl
pop
je
xchg
hlt
add
inc
add
and
fiadds
push
cwtl
mov
cli
jle
dec
push
push
into
clc
fistl
movsb
add
jno
sahf
mov
and
jp
inc
xchg
xor
xchg
jbe
sub
jae
xchg
pusha
cli
pop
push
in
or
insb
pop
sbb
ss
push
dec
scas
push
or
stos
test
ljmp
shlb
add
loop
loopne
adc
sbb
sbb
imul
dec
add
and
addb
pusha
in
mov
fildll
arpl
push
inc
pusha
dec
cli
inc
push
xor
inc
dec
bound
testl
out
add
imull
je
sbb
iret
enter
add
ss
outsl
inc
inc
shl
inc
dec
add
adcb
cmp
dec
scas
sub
inc
mov
pop
movsl
sub
cmpb
aas
ret
leave
test
lods
popa
mov
cmp
xchg
enter
jno
pop
xor
add
cmp
pop
mov
out
cmp
sub
repnz
fiadds
rcll
inc
lahf
mov
leave
loop
push
and
xor
pop
shlb
std
fs
and
adc
xchg
xchg
adc
jno
int
test
gs
dec
int3
mov
div
sbb
mov
sbb
sbb
sahf
ds
iret
xor
xchg
push
dec
and
adc
iret
mov
mov
scas
outsl
jbe
xchg
pop
sub
hlt
jg
or
insl
out
adc
sub
dec
lahf
stos
mov
jmp
test
cwtl
or
lea
bound
stc
out
pop
ficoml
daa
je
fcoms
xor
mov
in
jmp
jb
sbb
mov
int
mov
jnp
fisttps
push
pop
jmp
xor
pop
mov
and
enter
into
or
psrlw
mov
mov
push
cltd
cmp
outsl
jbe
inc
mov
repz
dec
lahf
mov
cmp
packsswb
push
insb
or
loop
lock
addl
cmp
mov
and
xor
pop
mov
and
ret
cwtl
jle
fdivrl
push
pop
lret
je
je
push
or
xchg
cltd
js
loop
push
sbb
imulb
pop
mov
and
and
push
clc
cmpsb
outsb
or
in
fwait
out
xor
xchg
push
pushf
inc
insb
int
and
sub
add
cmp
in
sub
cmp
mov
das
loop
pop
lods
call
test
push
aam
cmpsl
jns
push
pop
or
es
inc
dec
sbb
mov
mov
popf
dec
add
test
rol
fcomip
loop
cmp
mov
mov
testl
jge
mov
jno
in
test
sub
cmpsl
ja
mov
in
add
and
fdivrp
scas
sarl
inc
lret
push
cmp
mov
mov
shll
jno
sti
push
sub
test
clc
xchg
psrlw
call
ljmp
xchg
mov
mov
stc
loope
stos
xchg
or
jge
js
adc
mov
push
in
pusha
std
dec
sub
pop
test
pop
jbe
lret
lock
cmp
jns
sahf
fisttpll
push
sahf
repz
push
cmp
jbe
push
cmp
lret
test
push
mov
sti
fidivl
push
jns
daa
pop
cmpsb
mov
dec
push
sbb
out
pop
add
cli
mov
clc
dec
imul
lahf
outsl
fdivrl
mov
ss
dec
out
lea
aad
outsl
outsw
adc
cwtl
sub
mov
inc
mov
jae
inc
insb
mov
jp
dec
xchg
movsl
std
xor
aam
outsl
aam
paddd
out
testl
fsubr
push
xchg
push
mov
and
inc
js
out
lahf
in
dec
test
cmp
or
dec
cld
fdivrp
sbb
add
aad
shrl
sub
xor
inc
adc
jmp
xor
nop
hlt
adc
add
push
les
imul
fsubs
dec
push
push
je
jp
pop
nop
cmp
mov
add
mov
add
insb
repnz
ret
cmp
rclb
decl
pop
inc
lcall
in
mov
xchg
sub
pop
mov
fcoml
sub
enter
scas
lret
cmp
inc
test
xor
and
and
rcll
push
mov
jnp
jno
sub
aas
aaa
fsubl
cs
cltd
add
in
mov
call
xchg
push
les
dec
pop
ret
push
sub
adc
rclb
lcall
addb
subl
lret
or
insl
fdecstp
imul
inc
out
sti
mov
xor
gs
mov
mov
stos
out
pop
loop
sti
sub
mov
movsb
movsl
add
fsubrp
mov
cmpsb
test
js
subb
xor
pop
cmc
adc
xor
push
decl
sub
sub
pusha
cmpsb
clc
clc
mov
iret
cmp
popa
fwait
jb
inc
jbe
push
faddl
sub
mov
xchg
outsl
sbb
testl
stc
loopne
cld
mov
pop
rclb
sub
mov
sub
adc
nop
test
mov
pop
mov
sahf
stos
pop
orl
cmp
sbb
dec
jle
jecxz
mov
out
repnz
in
scas
test
fs
clc
idivl
sar
pop
cld
or
je
movsb
mov
pop
jae
inc
cmpsl
pusha
dec
pop
push
pusha
popf
insl
push
es
or
push
dec
out
mov
aad
seto
nop
push
pop
stos
inc
mov
imul
stos
push
cmp
cmp
gs
jmp
sbb
mov
repnz
dec
mov
and
js
loop
icebp
mov
movsl
push
sahf
fstl
xor
das
inc
out
arpl
mov
outsl
or
mov
pop
inc
scas
cmp
push
push
insb
push
and
xchg
mov
lret
add
mov
pop
xchg
jg
mov
sbb
and
outsb
push
subb
pop
push
cmpsb
sbb
jg
sub
out
mov
or
mov
pop
push
aaa
fwait
mov
adc
mov
lret
loopne,pt
mov
sub
test
and
xlat
pop
inc
scas
sub
push
cmp
les
and
mov
sbb
mov
icebp
mov
into
jbe
add
sbb
jg
ljmp
ds
push
mov
insb
cli
icebp
std
mov
dec
xchg
test
cmp
push
das
add
in
mov
add
mov
mov
cmpsl
sarb
pop
test
fs
frstor
add
lcall
or
mov
in
aad
mov
push
enter
scas
jne
imul
adc
sti
stos
aaa
mov
inc
popa
xor
dec
mov
div
adc
lods
imul
inc
cmpsb
je
jg
cmp
dec
imul
or
sub
add
int
ja
mov
cltd
shl
notb
jne
mov
enter
aad
cwtl
in
std
aas
xor
jnp
sub
ds
xlat
inc
xchg
sub
lret
sbb
adc
cld
add
enter
sbb
into
inc
movsl
or
or
loop
jmp
adc
shll
movsl
and
jno
jns
in
xor
movsl
mov
aam
push
aam
das
ss
loop
test
lahf
mov
xchg
mov
negl
hlt
or
aaa
add
cs
mov
pusha
cmp
adc
movsb
das
mov
addr16
fs
or
mov
pextrw
imul
movsb
jnp
mov
popa
ja
inc
sbb
jmp
inc
mov
cmp
mov
inc
imul
add
sub
test
jb
xor
stos
pushf
loop
data16
shrl
mov
rcpps
xchg
aas
mov
and
push
scas
xor
testb
or
xchg
lahf
xor
std
ss
roll
xlat
adc
mov
cmp
popa
adc
fmull
sub
jne
push
pusha
stos
inc
xchg
ds
push
mov
push
adcb
sbb
imul
sbb
int
sbb
or
sub
sub
and
enter
call
mov
xchg
pop
repnz
adc
outsb
scas
test
push
xchg
lock
loopne
out
mov
xor
repz
test
xchg
stos
xor
rorl
push
int3
hlt
ss
sub
std
fmull
adc
xchg
push
and
push
aas
xlat
cli
jl
iret
mov
sar
or
or
scas
lret
movsl
insb
sub
pop
mov
test
cmp
dec
add
and
jecxz
jecxz
xchg
jae
inc
cld
mov
sbb
aas
into
jg
cmc
out
jp
inc
out
cmc
lods
cli
xchg
and
push
sbb
pop
loopne
jbe
out
push
xor
cwtl
add
xchg
xchg
outsb
jg
jmp
mov
sub
sub
aaa
fwait
ss
out
adc
push
ficompl
fidivl
sub
call
nop
sbb
imul
mov
out
in
dec
jecxz
test
push
adc
xor
imul
shlb
fildll
fwait
push
insb
hlt
out
ds
cmc
add
stos
fsts
test
andb
add
jae
pop
in
mov
mov
gs
mov
add
bnd
in
out
int3
sbb
data16
std
ret
das
cmp
sbb
and
sub
xor
mov
aas
stos
addr16
out
sbb
lret
hlt
inc
xor
in
and
fisubrl
jg
xor
out
xlat
std
out
mov
mov
pop
aaa
test
mov
xchg
mov
insl
mov
mov
jo
shll
xchg
mov
xlat
mov
push
mov
lahf
loopne
push
sub
jmp
xchg
insl
jno
gs
sbb
mov
cwtl
sub
push
incl
rclb
shlb
scas
lret
adc
lods
xchg
cmp
shlb
pop
test
stos
mov
les
rclb
movsl
mov
loopne
jns
cmp
push
mov
repnz
sbb
xchg
jne
add
prefetchnta
pop
dec
mov
mov
cli
mov
mov
push
sub
xor
sbb
add
ficoml
sub
or
pop
or
adc
bound
in
ljmp
sbb
pop
addr16
pop
addr16
pushf
inc
enter
mov
add
in
sbb
mov
jg
dec
lret
mov
into
es
stc
ss
sarb
add
and
pop
xor
movsb
test
dec
scas
sub
cmp
sbb
xchg
sahf
ret
mov
fdivrl
sub
ja
shlb
data16
std
fsubrl
add
outsl
xchg
mov
iret
cmp
lock
mov
jne
or
xchg
and
push
dec
xchg
or
iret
or
add
add
mov
clc
and
into
imulb
pop
das
jle
mov
sbb
lret
adc
mov
je
sbb
std
or
movsl
int3
jbe
adc
mov
or
inc
jg
jo
or
pop
or
int3
add
mov
mov
cmp
mov
mov
jle
xchg
mov
adc
shll
mov
fs
je
mov
lods
inc
mov
sbb
mov
daa
and
mov
inc
fs
jge
or
lods
hlt
xorl
mov
dec
leave
daa
rorb
xor
push
mov
jbe
push
xchg
inc
jns
pop
xor
lods
hlt
pop
dec
xor
sti
jno
imul
add
sarl
in
and
stos
pop
jl
pop
stc
adc
dec
addr16
xor
jo
mov
jno
pushf
rorl
pop
jmp
cmpsb
outsl
inc
data16
pusha
fs
adc
cmp
mov
cwtl
or
pushf
add
sahf
jno
mov
xchg
test
push
add
sbb
add
cmc
js
mov
lods
mov
repz
fistps
fmuls
outsl
dec
push
mov
jo
push
daa
int
xlat
mov
je
insb
or
loopne
pop
cmp
test
sub
mov
mov
jbe
mov
mov
shl
pop
int
and
bound
cmp
adc
dec
nop
jl
xchg
add
add
jmp
dec
fmull
arpl
and
lods
daa
mov
jns
xchg
mov
xchg
push
mov
loopne
sarb
incl
mov
mov
mov
cmp
mov
pop
and
int3
push
adc
mov
sti
adc
xor
cld
les
cmp
sbbl
inc
cmpsb
mov
push
cs
fmull
clc
stos
in
jae
pusha
mov
sti
inc
arpl
mov
add
jp
jl
inc
pop
nop
sub
jb
mov
push
decl
insl
outsb
mov
mov
fucomip
scas
add
push
sbb
add
mov
adc
push
mov
and
fcmovnb
push
sub
sub
jmp
add
enter
enter
out
or
cmc
sbb
iret
ss
pop
iret
lahf
or
mov
dec
pop
dec
fnsave
adc
sar
push
adc
out
jp
add
xchg
adc
and
repnz
sbb
and
outsl
xor
shlb
test
xchg
out
data16
pop
test
adc
imul
or
xor
rolb
cltd
enter
scas
inc
xchg
push
scas
jo
mov
lods
inc
mov
icebp
sub
mov
pushf
aad
inc
popf
jg
outsb
loopne
shll
adc
xorl
and
into
pop
push
in
mov
xchg
test
mov
push
call
push
cmp
std
xchg
push
mov
pop
xchg
div
fistps
fwait
xchg
or
addb
dec
inc
add
mov
repz
imul
xchg
sub
rorb
in
fldl
mov
aas
sti
in
mov
pop
dec
jmp
xlat
push
ret
inc
push
cmpsl
sahf
inc
icebp
stc
cmc
mov
pop
out
lods
aas
cmp
mov
mov
mov
jns
mov
dec
or
mov
out
inc
in
fstp
and
mov
push
stos
das
xor
fdiv
mov
popa
mov
movsb
lock
mov
xchg
mov
jmp
nop
fsubrl
mov
cld
roll
in
lods
mov
fnstcw
xor
cmp
adc
pop
xor
adc
nop
add
je
push
push
and
movsl
mov
out
sbb
rcrb
mov
lods
sub
pop
and
fwait
test
stos
add
popf
cmpsb
fcomi
xchg
cld
pushf
out
mov
popf
in
push
sub
cmp
sarb
sbb
leave
xorb
movsl
out
sub
punpckhwd
and
loopne
mov
imul
and
jne,pt
mov
data16
inc
jne
and
addr16
pop
push
data16
jb
or
call
jg
lcall
mov
cmpsb
packssdw
or
fiadds
in
sbbb
xchg
pop
push
mov
stos
sbb
and
dec
mov
inc
aaa
ljmp
add
pop
addr16
out
call
mov
push
xchg
pop
cli
xchg
pusha
out
sub
sbb
icebp
pop
jge
or
into
outsl
jge
outsl
xchg
fadds
bt
mov
push
cmpsl
fwait
int3
jmp
imul
push
mov
cmp
data16
pop
popf
test
jmp
sbb
insl
subb
popf
xchg
push
dec
inc
jbe
lret
in
es
imul
rol
cmp
and
mov
ds
daa
shll
fucomp
in
imul
jb
and
mov
movsl
imulb
and
hlt
hlt
stos
hlt
adc
mov
or
flds
jge
mov
lods
sbb
sub
push
inc
push
xchg
repnz
mov
push
test
xchg
xchg
or
aas
es
push
xchg
and
add
push
add
in
sub
mov
sahf
push
hlt
pop
aas
pcmpeqd
push
in
xchg
invd
xor
pushf
aam
xchg
mov
fmull
pop
fcmovne
outsl
or
adc
or
xchg
orl
mov
jo
lods
inc
shll
mov
inc
dec
push
mov
pop
xor
pop
fwait
pop
and
addb
call
xor
dec
mov
andl
jp
dec
shrb
add
jae
mov
leave
mov
xlat
jp
repz
mov
ret
mov
stos
push
cwtl
mov
lea
jbe
xchg
mov
rorb
push
dec
xchg
dec
aaa
fisubl
cmp
sbb
gs
test
out
push
fmull
xchg
lock
xchg
pop
push
mov
lods
test
cmp
jns
cmc
and
fcmovne
nop
push
lds
ret
adc
call
je
iret
daa
add
and
cs
inc
enter
cmc
xor
sbb
or
xchg
ljmp
sti
fiaddl
ret
pushf
nop
stc
add
in
out
inc
jecxz
mov
pushf
and
mov
xchg
sbb
or
add
push
outsl
out
push
lods
out
loope
stos
cs
pushf
dec
add
outsl
fsubl
sub
mov
std
in
pop
fcomps
xchg
enter
mov
inc
adc
iret
and
addr16
shrb
lods
sahf
jbe
lods
pop
add
daa
sbb
pop
mov
scas
and
lods
scas
mov
movsl
xchg
add
test
lret
sbb
xor
rcrl
adc
sahf
lds
dec
inc
es
sub
jmp
outsl
ljmp
lcall
cltd
add
xor
insl
cmp
aaa
aam
dec
adc
sbb
xchg
lods
add
repz
stos
call
add
cmpsb
fs
cmc
fdivl
sbb
xor
push
mov
mov
rcll
jo
orl
mov
enter
sbb
mov
cltd
xorb
ret
and
push
pop
cwtl
test
jge
dec
loop
test
xrelease
and
mov
js
cld
pop
mov
sarl
shll
lds
xor
cmp
jns
mov
arpl
push
rcrb
ja
pop
cltd
enter
push
sub
mov
adc
ljmp
call
pop
jg
push
mov
mov
jne
dec
lret
push
mov
repnz
mov
mov
or
lods
jbe
xchg
jne
insb
cmp
cltd
add
sbb
mov
add
mov
push
imul
inc
flds
popa
sahf
adc
push
or
negl
xchg
push
int
dec
adc
sbb
cmpsb
or
aas
imul
std
mov
and
xor
int
adc
fcmovbe
adc
mov
add
pop
sub
inc
outsb
xchg
negb
xchg
jp
inc
test
jo
jns
mov
or
pusha
fldl
sbbb
and
xor
and
mov
mov
xor
scas
repz
lcall
or
sbb
mov
dec
addr16
mov
add
test
incb
pop
mov
mov
xor
mov
fsub
inc
mov
push
cvtss2si
cwtl
mov
scas
sbb
jbe
mov
ds
jno
jecxz,pt
ret
movsl
cmp
cmp
add
adc
pop
cmc
dec
push
pushl
and
pop
lock
mov
ljmp
sbb
sbb
mov
scas
out
sub
xchg
or
jmp
test
testb
lahf
xchg
fsubrs
call
and
mov
movsl
ret
aad
aas
out
xor
cmp
pop
lcall
xor
ret
test
arpl
loopne
call
and
fistl
cmp
pusha
xor
jns
mov
mov
les
and
add
sahf
mov
adc
add
xchg
jmp
mov
arpl
pushf
lea
and
mov
push
dec
test
cmpb
inc
shll
push
adc
inc
push
call
lods
mov
mov
sbb
mov
lods
lods
xor
sub
movsb
add
dec
test
nop
dec
sbb
cmp
sub
fnstcw
push
mov
and
pop
subb
or
xchg
push
adc
or
fcmovnbe
repz
pop
cwtl
gs
and
sub
gs
mov
pop
pop
pop
push
movsl
jmp
pusha
mov
mov
xlat
or
adc
test
shll
lock
mov
mov
addr16
xchg
ss
push
mov
xor
pop
and
cmp
call
mov
icebp
dec
sbb
ret
add
inc
and
leave
fisubrs
xlat
jo
lahf
fld
xchg
out
insb
or
mov
mov
out
mov
fwait
xchg
std
daa
and
cmp
push
jp
pop
sbb
out
xchg
xchg
cmpsl
cmpsl
and
cmpsb
xchg
push
outsb
and
imul
out
bound
add
into
pushf
aas
and
hlt
xchg
xchg
mov
mov
mov
inc
jl
daa
cmc
lcall
fdivs
jl
mov
dec
mov
ss
test
dec
cmp
jae
sti
jge
jle
or
cs
inc
sub
lods
push
cld
or
xor
dec
adc
cmc
xor
add
push
pop
rcll
push
insl
test
sbb
push
fsubrp
or
fcmovnbe
popf
cmpsl
jp
dec
push
lcall
sahf
or
mov
cmp
insl
shrb
jbe
sub
gs
dec
sub
orb
mov
and
inc
fistpll
repz
dec
jo
pop
popa
imul
in
add
mov
icebp
fwait
push
andl
inc
in
cmp
imul
ds
push
sahf
leave
lret
cmpb
push
sbb
loope
fs
and
mov
in
jmp
les
xchg
lods
outsb
xor
sbb
jecxz
dec
outsb
mov
int3
jbe
add
popl
test
jae
paddq
pop
add
sbb
sub
add
push
pop
mov
sub
push
in
test
adc
lret
js
mov
rcr
or
jne
or
mov
rcll
movsl
sub
nop
pop
xor
popa
xchg
shlb
dec
xchg
ret
dec
test
jae
imul
dec
add
pop
push
xchg
jo
lods
mov
scas
pop
add
xor
nop
or
jp
cwtl
lcall
js
xor
and
cltd
push
rclb
rcl
das
data16
and
data16
xchg
add
mov
sti
insb
ror
xor
or
dec
jmp
fsub
in
loope
push
pop
js
jmp
sub
aas
push
jmp
sbb
mov
mov
aam
pop
jno
pop
mov
xchg
rorb
mov
dec
movsb
dec
gs
or
sti
sbb
pop
data16
mov
xchg
rorl
iret
aad
movsl
jecxz
in
enter
ror
nop
dec
xchg
insb
cmp
testl
es
inc
xchg
fndisi(8087
pusha
incb
jmp
imul
or
or
jl
gs
lcall
and
in
sti
jne
dec
mov
ljmp
pop
jnp
jge
inc
cmp
ljmp
imul
icebp
lret
fidivl
mov
dec
test
arpl
addr16
mov
push
push
adc
cmc
add
lret
mov
push
jae
js
jb
repnz
adc
and
and
mov
mov
insl
xor
stos
rolb
inc
daa
movsl
xchg
xchg
pcmpgtb
out
mov
cltd
cmp
sub
add
add
fldl
scas
cmpsl
mov
pushf
pop
cmp
nop
rcrb
pop
movsl
clc
jge
aam
mov
push
xchg
adc
fsub
jne
ss
sub
mov
repz
mov
rcll
inc
xor
mov
shrl
mov
test
xchg
shll
push
mov
add
repz
test
sub
loopne
or
in
in
mov
imul
cltd
pushf
xchg
pushf
mov
or
scas
inc
push
xchg
in
add
mov
in
jmp
mov
jno
es
or
or
dec
adc
out
cmp
orb
jbe
pop
inc
mov
jae
xor
or
dec
xlat
dec
cmpsb
out
faddl
sub
popf
js
jbe
aad
pop
das
mov
repnz
cmc
jg
mov
pop
inc
cltd
jecxz
aam
pop
jmp
fimull
xchg
push
rorl
mov
faddl
cmpsb
fucompp
cmp
inc
loopne
and
addl
mov
test
aaa
cli
xchg
loop
lret
push
mov
jbe
mov
addr16
cmpsb
test
shrl
xor
lock
test
xchg
adc
mov
xchg
scas
inc
scas
mov
adc
fcmovne
ret
or
xor
lds
fbstp
pushl
out
ret
lods
and
push
pop
insl
jecxz
sbb
sbb
mov
pop
mov
sahf
cmp
inc
enter
pop
push
mov
lcall
mov
jne
int3
jbe
popf
stos
push
xor
jb
adc
pop
inc
jns
insl
nop
inc
arpl
loope
popa
fiaddl
fwait
adc
dec
xor
push
lods
orl
rolb
mov
addr16
shlb
xchg
mov
inc
lds
insb
das
lock
lea
out
mov
inc
adc
sbb
sbb
fdivrs
addr16
ret
ficomps
leave
aam
fnstsw
jle
arpl
mov
jae
jecxz
stos
enter
adc
pop
gs
xor
xchg
xor
lret
push
cmp
jb
pop
es
xor
sbb
in
jnp
pop
sbb
sbb
push
push
jbe
xor
pop
mov
or
xor
dec
lea
sahf
shll
cmp
pop
mov
sbb
sbb
cmp
bound
cmp
xor
inc
lds
xchg
pop
cmpsb
dec
rcrb
in
mov
dec
cmp
xchg
inc
inc
push
xchg
fadd
inc
int
sbb
jns
out
and
xchg
mov
fisubrs
test
sti
popf
call
mov
mov
or
test
or
push
sub
or
pop
jecxz
lahf
and
insl
enter
jecxz
push
sarb
jg
adc
xchg
daa
outsl
adc
int3
adc
ret
imul
out
cltd
or
out
mov
cmp
xor
imul
xchg
xor
idivl
fistps
les
outsl
mov
jl
cwtl
xchg
add
xor
movsb
decl
ret
cmc
jmp
lret
ljmp
jecxz
test
or
movsb
hlt
jecxz
mov
push
push
outsl
mov
mov
push
jg
orl
adc
dec
pushf
cmp
add
jnp
push
xor
or
shr
mov
gs
popf
cmpsl
popf
jne
jnp
arpl
jb
sub
lahf
xlat
mov
inc
in
inc
jle
mov
sub
lahf
out
icebp
lret
test
pop
jnp
fimuls
gs
add
mov
mov
or
inc
lock
cmp
hlt
adc
adc
jbe
sub
push
outsl
fs
mov
sbb
daa
push
repz
rorb
and
adc
jnp
in
movsb
ja
lods
stos
stos
jle
dec
cmc
cwtl
movsb
sbb
vmovdqu
sbb
loop
sub
push
into
sub
xchg
aaa
subb
dec
xor
lahf
push
xor
sbb
mov
sub
ljmp
repz
repz
mov
aas
adc
inc
xor
adc
pop
xchg
into
or
pushf
fidivs
mov
testb
jl
pushf
adc
test
sbb
ficoml
xchg
enter
or
push
les
mov
xor
pop
pop
cmp
jns
and
mov
cmp
lea
sahf
jle
lods
or
pop
dec
js
jge
mov
loope
mov
cmc
inc
lretw
neg
jne
inc
inc
loope
and
nop
fimuls
push
je
test
iret
inc
hlt
test
mov
or
or
or
xchg
mov
rorb
xor
inc
xor
pop
cmp
jmp
mov
inc
mov
fstps
add
mov
dec
jns
dec
xor
cmp
and
mov
stc
cmp
xchg
or
in
inc
test
out
popa
ret
xor
cld
ret
test
adc
add
cmc
jno
mov
out
out
leave
jecxz
inc
insb
les
in
scas
aas
push
dec
add
pop
inc
fwait
cwtl
cmpb
dec
or
cmp
pop
dec
loop
jge
mov
sub
xor
xchg
stos
ror
push
dec
fldenv
daa
mov
daa
jmp
inc
dec
xchg
ret
and
rclb
lods
fsubrs
in
cmp
loopne
jae
sub
ljmp
lods
jne
outsb
adc
das
repz
push
cmpsb
push
insl
mov
scas
fstpt
lret
mov
mov
sub
pushf
jnp
push
mov
loopne
and
rcrl
repz
xlat
push
out
xchg
lahf
mov
leave
jo
push
stos
mov
mov
jns
mov
in
test
or
mov
jg
jmp
sahf
test
icebp
mov
fwait
mov
dec
addr16
jecxz
add
out
fisubrl
out
xchg
pushw
fadds
int
cmp
push
jno
sbb
sbb
lods
cmc
cmpsb
popf
daa
push
dec
scas
jns
lret
inc
pcmpgtd
sub
mov
xchg
bswap
lahf
sarl
icebp
inc
dec
iret
ret
lock
sub
push
dec
lods
or
or
or
hlt
cli
inc
std
sbb
rolb
int
jo
fstpl
test
loope
arpl
pop
fwait
push
hlt
scas
loop
cmp
addr16
mov
push
pop
je
jbe
and
jbe
into
adc
xor
push
lock
push
out
and
pop
jmp
stos
jmp
popa
movsb
lds
xor
movsb
lret
insl
cltd
mov
cwtl
pop
xor
dec
mov
or
jne
jb
pop
or
out
stc
dec
bound
fwait
mov
fldenv
push
dec
mov
es
push
shlb
pop
subl
gs
xor
sub
or
mov
sets
jo
pop
jmp
sbb
ret
dec
mov
clc
call
cmc
jmp
mov
loop
xchg
hlt
jb
lock
sbb
adc
xchg
arpl
dec
jae
fiadds
mov
in
add
xchg
adc
jne
fldl
in
loop
sbb
adc
pop
fcmovnu
sbbl
mov
and
jl
stc
sbb
rcrb
and
adc
push
mov
in
pop
das
xorl
sub
inc
xchg
enter
and
std
jecxz
repnz
outsb
xlat
clc
in
mov
test
xor
ret
test
sbb
jnp
mov
xchg
sbb
ja
scas
test
testl
cmp
and
std
movsb
xchg
shl
push
hlt
mov
mov
mov
mov
inc
dec
push
idivb
xchg
pop
add
in
pop
and
inc
test
out
ds
sub
enter
pushf
loop
xchg
js
sub
cmpl
fisubrs
mov
ret
push
test
movsl
mov
or
movsb
shll
mov
loopne
mov
icebp
int3
shr
pop
push
lods
xor
push
subl
pop
mov
loopne
data16
fcompl
add
cmp
xchg
mov
mov
adc
add
jns
adc
jmp
imull
mov
inc
mov
jno
or
ja
or
stos
data16
fildll
xor
or
cmp
gs
dec
lock
cli
cwtl
jns
out
fisttps
mov
mov
xor
lret
push
js
loopne
iret
cmp
or
pop
rep
loop
mov
movsl
in
lods
sub
sub
addb
mov
stos
scas
aam
xor
push
shr
inc
das
xchg
shlb
or
xchg
mov
testl
and
mov
push
dec
add
sub
insb
inc
ret
mov
lret
push
call
call
add
dec
insl
in
inc
lcall
ds
push
lret
testl
loope
dec
ret
mov
sbb
or
jg
add
jbe
sbb
mov
inc
push
jle
mov
mov
mov
push
gs
in
lods
lret
test
negb
and
push
adc
sbb
test
add
cmp
pop
fsubl
iret
mov
stos
loope
sub
aad
dec
scas
xchg
add
das
pop
cmpsl
sbb
out
mov
cmpsl
lcall
test
nop
aam
cmp
mov
insb
aaa
icebp
cmpsb
movsb
jns
imulb
stos
jge
sahf
das
fsubrs
mov
and
cltd
in
mov
movsl
dec
icebp
pop
jo
inc
mov
insl
jge
mov
cli
push
cltd
add
int
rcrb
jae
mov
fstpl
mov
sbb
test
sbb
pop
ljmp
das
xor
cld
ds
and
in
stos
dec
jg
and
push
repnz
les
jle,pn
lahf
fidivrl
cld
or
out
adc
movsl
sbb
cltd
shlb
xor
adc
jge
mov
loope
fidivs
pushf
cmpsl
mov
sub
and
icebp
mov
dec
or
fs
sub
dec
sbb
vmwrite
push
imul
imul
dec
mov
inc
stos
pop
dec
push
inc
test
jge
or
movsb
inc
push
inc
rol
ffree
add
lret
pop
pop
mov
pop
gs
fucomip
jecxz
add
pop
arpl
enter
pop
xor
mov
add
cmp
pop
pop
mov
mov
es
es
push
push
call
jmp
xchg
pop
jno
fs
inc
jmp
jae
iret
clc
or
inc
inc
jns
push
pop
cmc
insl
cld
dec
loopne
inc
xor
lock
cmp
or
sbb
jae
jno
mov
jge
std
lahf
addr16
dec
jge
pop
stos
data16
dec
push
stc
mov
mov
sub
and
das
int3
imul
lock
and
pop
xor
inc
jecxz
or
cmp
pusha
orl
inc
je
aaa
mov
jle
lret
clc
push
pop
cltd
lock
pop
jno
cltd
adc
adc
cmp
lea
mov
jbe
dec
xchg
insb
dec
cmpsl
push
sub
lods
stos
add
adc
or
mov
leave
sub
pop
jle
inc
cmp
or
sub
jno
and
ss
iret
mov
pop
mov
and
xor
iret
fs
in
mov
fmuls
mov
and
pop
pop
mov
inc
cmp
lds
inc
push
test
push
jmp
jb
jp
push
cmp
pop
pushf
gs
out
jno
cmc
jl
mov
jb
or
pop
and
dec
hlt
sarl
aam
push
push
in
mov
jmp
xlat
pop
xor
mov
int3
mov
fisttps
inc
aas
cmp
lcall
inc
sub
and
sub
sbb
mov
lods
jp
sbb
xchg
mov
mov
sbb
in
mov
mov
mov
js
push
sbb
xchg
je
xchg
ret
out
cmpb
jmp
inc
cmc
ret
orl
xor
dec
push
scas
push
cmpsl
sbb
fwait
cld
push
jg
xor
hlt
fcoms
cmpb
xchg
pop
rorb
mov
insb
clc
movsl
adc
xchg
loope
sbb
xchg
es
arpl
leave
movsb
movsb
pop
call
and
push
dec
outsl
pusha
gs
add
mov
jle
add
sbb
mov
sub
imul
std
xor
and
lahf
push
dec
jb
sub
add
mov
jnp
dec
out
iret
inc
pop
out
es
in
enter
das
mov
or
pop
sub
lock
andl
jle
xor
xchg
out
out
or
and
idivb
cmp
pushf
fcomp
pop
xchg
xchg
loope
jl
mov
add
fnstcw
cmp
push
mov
dec
je
outsl
out
mov
sbb
inc
mov
loopne
pop
or
in
daa
mov
or
jae
aam
push
inc
aas
pusha
pusha
fnstcw
fidivs
pop
cmpsb
clc
mov
movsl
cmpl
push
inc
xchg
cli
xchg
arpl
mov
sar
cs
and
pop
ja
pop
lret
rcrl
js
sub
test
fnsave
mov
lods
lds
aas
sahf
fimuls
shl
sub
call
mov
xlat
mov
sub
dec
aam
outsb
lods
pop
inc
xchg
push
lcall
sbb
inc
mov
mov
jo
stc
frstor
insl
dec
jl
ja
ret
subb
ja
xchg
ja
gs
hlt
adc
cmp
fwait
push
cmp
stos
fstps
jns
push
mov
cmpl
cld
pop
cs
inc
jecxz
pop
pushf
cmp
inc
insl
pop
mov
stc
call
and
lock
rol
push
mov
jecxz,pt
xchg
test
pop
cmpsl
and
or
mov
ljmp
rcr
dec
mov
cltd
mov
aas
mov
out
sbb
jne
push
es
in
ret
sub
pop
cmp
adc
inc
iret
lret
insl
and
and
dec
mov
insb
jne
xor
scas
jae
mov
and
xchg
or
push
scas
dec
mov
inc
jg
or
mov
push
cmp
jo
pop
cmpl
aaa
test
jbe
insl
sub
mov
mov
int3
sbb
push
pop
cmpsl
xor
aas
repz
sbb
adc
add
aam
and
ljmp
mov
push
bound
adc
lcall
in
fwait
outsl
dec
ret
xchg
int3
pop
leave
outsl
xor
dec
fstl
shl
clc
xchg
ljmp
movsb
daa
xchg
mov
lock
stos
inc
test
cmp
cwtl
les
ljmp
sub
nop
xlat
or
push
pop
sub
cld
in
icebp
popl
mov
hlt
clc
lahf
sub
cmp
dec
stos
mov
in
jo
out
cmc
ret
xchg
xchg
aas
and
scas
insl
fwait
or
dec
dec
and
or
cmp
pop
inc
iret
in
xchg
test
lahf
repnz
repz
inc
jge
add
insb
mov
mov
adc
add
push
fdivr
push
enter
mov
adc
jbe
pop
add
xorb
xor
inc
add
addr16
push
and
jbe
pop
xor
or
mul
cmpsl
xor
pop
pop
cmp
gs
mov
rolb
sub
fsubrl
cmp
out
bound
pop
dec
bound
aaa
adc
fcmovnbe
push
sbb
ljmp
mov
data16
mov
leave
xor
sub
cs
pop
cmp
das
push
jl
sti
mov
aam
pop
rorl
push
inc
test
dec
xor
pop
fdivrs
xchg
jmp
push
cli
xchg
add
pop
gs
inc
pop
test
lcall
mov
mov
sub
mov
mov
or
xchg
xor
in
out
out
adc
and
dec
push
ss
cltd
push
enter
dec
test
xor
sahf
rcr
xlat
xchg
cmp
sbb
loope
mov
jbe
idivb
inc
push
into
push
mov
pop
loopne
mov
push
aad
lret
faddl
subl
dec
inc
daa
ds
pop
adc
call
aaa
jmp
pop
xor
mov
mov
sub
aaa
and
lock
push
or
les
int3
lahf
or
cmc
in
jp
add
dec
scas
fsubrl
div
mov
and
in
sbb
mov
fcmovne
push
fisttpll
add
mov
out
or
jmp
stos
into
mov
dec
out
lret
das
xchg
ficoml
mov
popa
mov
cli
arpl
sub
cmp
push
add
aam
ds
jb
adc
or
data16
gs
movsl
add
push
sar
cmp
mov
inc
imul
pop
push
pop
cmp
xchg
mov
xor
cmp
les
jle
cmp
jbe
lods
sub
loop
dec
jge
data16
mov
push
xor
lock
push
push
jno
pusha
sbbl
push
fisttps
outsl
in
ja
dec
jmp
mov
addw
and
mov
pop
into
jle
xlat
cmc
jmp
or
sbbb
cltd
push
pop
inc
dec
xor
xchg
xor
jns
popf
mov
mov
pop
loopne
fdivs
out
enter
sub
sbb
aas
lods
in
push
fbld
mov
adc
std
push
aaa
xchg
adc
stos
out
stos
pop
adc
call
mov
nop
xor
mov
int3
adc
cmpsb
rol
xor
lods
movb
mov
xchg
sbb
lea
cmp
sahf
decl
jae
in
jne
data16
pushf
test
sbb
movsl
mov
fwait
mov
xchg
iret
sbb
sbb
sub
cmpsl
inc
pop
pop
dec
mov
push
adc
or
jb
pushf
rol
dec
adc
jno
push
mov
sub
xchg
fstps
mov
roll
punpckhbw
and
jp
call
xchg
inc
ss
mov
test
repz
out
xchg
dec
aad
in
call
adc
sbb
loope
xlat
or
add
je
push
mov
sub
mov
imul
inc
mov
out
sti
test
aaa
mov
xchg
popa
jns
inc
rclb
sbb
imul
jg
jns
in
push
mov
mov
jl
or
pop
inc
arpl
mov
lea
shrl
rol
call
mov
leave
test
or
cltd
or
xchg
add
cld
adc
fsubl
mov
ljmp
stos
pusha
mov
jnp
xor
mov
inc
jmp
jno
add
fs
movnti
scas
inc
fidivs
jno
in
xchg
shlb
jo
jbe
cli
ljmp
add
push
pop
inc
fsubs
aad
pop
sbb
inc
pop
jl
mov
xor
push
bound
and
mov
fs
sbb
inc
lods
cltd
push
fcmovnb
mov
cmp
sub
adc
ror
jle
and
imulb
mov
pushf
and
stos
and
imul
imul
clc
push
les
sbb
pop
mov
nop
sahf
cmc
mov
mov
test
test
aad
jnp
ja
lahf
jmp
or
push
out
addr16
and
imul
pop
push
pop
xor
pop
movq
push
pop
jge
mov
clc
leave
push
int3
and
lea
test
add
int3
faddp
cmp
icebp
xchg
data16
push
mov
fs
sbb
sti
inc
call
fwait
xchg
or
xor
ret
mov
ret
and
insb
enter
loope
pop
imul
pop
jecxz
scas
gs
cmp
jg
dec
test
dec
cmp
mov
mov
int
or
sub
adc
push
in
push
sti
xchg
pop
mov
adc
sbb
jmp
xor
jmp
ja
fildl
test
add
ret
add
push
test
inc
out
rolb
cld
xor
repz
popf
cmp
cwtl
fcmovb
sbb
and
jecxz
outsl
stc
aas
xchg
mov
movsl
into
jmp
lock
sub
es
jb
pushf
std
mov
pusha
push
adc
mov
or
in
or
push
push
pusha
hlt
out
fbld
and
adc
and
jmp
imul
in
ret
cltd
and
js
inc
mov
out
mov
pop
in
inc
outsl
pop
jp
mov
jnp
insb
inc
stos
test
cmp
push
xor
and
insb
dec
dec
mov
jl
dec
int3
es
mov
sbb
inc
std
xchg
lock
inc
sub
js
pop
repz
mov
scas
outsl
scas
int3
xor
mov
xchg
fldenv
dec
xor
inc
dec
fcomi
sub
lods
cmp
xor
imul
aam
fists
enter
icebp
jae
dec
inc
push
fisttps
dec
add
into
outsb
cmp
andl
adc
xchg
cmp
dec
lcall
hlt
idivb
add
cmp
loope
inc
std
xchg
addb
adc
and
sbb
mov
xor
push
testb
or
pop
icebp
enter
cs
sbb
fadd
xor
dec
mov
sbb
push
dec
lret
push
lcall
movsb
lock
inc
jbe
xorb
insb
insb
mov
push
movsl
add
add
push
std
ja
fs
push
insl
xchg
sbb
sbb
dec
xor
and
in
addr16
add
divl
out
ret
jmp
iret
pop
xlat
mov
mov
sbb
xor
xor
movsl
jne
test
cmpl
or
stos
push
mov
jnp
mov
pop
or
and
xor
int3
xor
mulb
loop
adc
mov
add
sbbl
mov
and
xchg
mov
xor
jns
loopne
and
mov
xor
push
out
cmp
repz
mov
xchg
in
aam
arpl
and
into
movsb
pop
pop
xor
add
aad
push
pusha
inc
out
cmp
push
sub
jno
test
mov
testl
jg
dec
cmp
mov
push
ss
push
push
decb
lea
out
inc
scas
xchg
add
jl
lcall
iret
mov
xor
fimull
pushf
dec
mov
or
ds
or
xlat
popa
dec
dec
decl
aad
cltd
xchg
jo
dec
ja
mov
incb
pop
fcomi
clc
out
adc
icebp
outsl
jge
or
or
sbb
out
add
mov
ss
aam
sub
jb
dec
cmpsl
mov
and
es
stos
loope
jns
movlps
lds
inc
xor
dec
xchg
mov
scas
int
aad
daa
out
enter
and
js
loop
pop
and
out
lods
mov
lea
add
lcall
push
mov
jle
xchg
xchg
cmpsb
adc
sub
adc
push
es
negb
dec
xor
les
push
je
stos
fistps
je
outsl
xlat
hlt
je
dec
mov
jns
adcl
enter
jne
testb
mov
sahf
cmp
mov
in
pop
out
mov
rolb
pop
in
int
mov
sbb
je
lret
ret
and
cmp
sub
sbb
inc
adc
jo
sub
pop
or
push
fisubl
lods
xchg
mov
mov
inc
xorb
pusha
movsb
movsb
xchg
xor
imul
jle
xor
dec
mov
jecxz
icebp
inc
push
dec
test
and
jg
addl
shrb
add
lret
in
call
aam
cmp
fldcw
pop
dec
loopne
mov
mov
shl
sub
push
mov
hlt
in
push
mov
pusha
in
sbb
fimuls
push
insl
add
scas
xor
lods
iret
in
xorl
fptan
jecxz
sub
cmp
shr
movsb
xor
scas
pop
cld
mov
mov
jae
add
dec
or
sub
xchg
rorb
sti
add
xchg
mov
je
movsl
dec
cmp
loop
xchg
adcb
jge
pop
gs
inc
cmp
ljmp
xchg
jp
mov
or
mov
loop
xchg
addr16
aaa
push
pop
out
mov
inc
mov
cmc
and
push
jle
insb
rcr
dec
es
adc
into
jo
stc
in
mov
in
pop
insb
xchg
cmp
imul
cmpsl
loopne
shl
xlat
lds
xor
push
andl
stos
rorl
or
dec
es
adc
or
or
sarl
aas
ret
pop
cmp
add
iret
jae
sahf
cmc
arpl
inc
adc
lcall
ljmp
ret
mov
mov
xchg
call
jp
xchg
dec
ret
and
inc
in
add
outsl
inc
mov
pushl
xor
dec
nop
outsl
mov
push
cmc
adc
add
out
fs
stos
rol
fisubs
dec
and
sbb
mov
arpl
lcall
decl
cmp
testl
sub
pop
shrl
ds
mov
clc
ret
xor
xor
aad
push
lcall
shl
xchg
ret
push
fwait
and
lock
mov
sbb
fmulp
ss
test
out
sub
cmp
jp
fnsave
xchg
stc
testl
scas
add
sbbb
jnp
dec
sbb
or
aad
sbb
and
or
mov
int3
fistpll
jp
addr16
cs
adc
jns
mov
fwait
sbb
lods
push
cli
cmc
mov
test
lahf
add
dec
lret
and
repnz
dec
scas
jno
loopne
fwait
cs
mov
outsb
adc
cmc
xor
cmp
hlt
bound
xlat
addr16
es
sbb
dec
movsl
mov
rorl
shlb
scas
and
movsb
add
repz
orl
push
add
mov
sbb
lcall
aam
stos
cs
mov
ret
mov
into
and
jbe
cmp
jb
das
xchg
jae
sbb
mov
loopne
mov
mov
xchg
insl
pop
jle
inc
xor
pop
cmpsb
jg
or
add
lcall
dec
mov
stos
mov
push
insb
inc
sub
mov
int
loopne
mov
add
mov
sbb
lods
fisubrs
xor
out
sbb
scas
and
scas
push
xchg
mov
ss
js
out
add
clc
lret
sbb
xor
adc
lahf
out
dec
sub
dec
leave
add
cltd
mov
pop
sbb
mov
clc
jp
adc
add
fdiv
adc
jno
xchg
pop
gs
mov
repnz
shll
aaa
nop
mov
imul
bound
je
cmp
sbb
mov
mov
ret
out
or
test
rcll
shrl
push
dec
js
insl
sbb
stc
mov
push
xchg
shll
jns
xchg
imul
loope
je
jge
test
inc
jne
test
stc
mov
cmp
faddp
fstps
jae
xchg
or
ljmp
decl
xchg
pop
movsb
cmp
neg
pop
jb
and
ret
adc
mov
lods
fsubrs
cmp
sbbb
xlat
jecxz
out
mov
xchg
push
pop
or
pop
fdivrs
mov
or
mov
xchg
adc
pop
push
andl
cmc
hlt
mov
or
push
mov
sub
mov
xchg
add
aam
leave
aaa
stos
jecxz
and
stc
sub
out
xchg
adc
xor
jnp
or
sub
sub
inc
pop
in
scas
ret
nop
cld
sbb
insl
fs
mov
lcall
push
movsb
clc
std
and
add
mov
mov
scas
jp
movsl
cs
xchg
adc
in
xor
lock
pusha
xchg
pop
push
loop
pop
sarb
lock
jg
mov
test
ss
arpl
xlat
sbbl
jge
mov
mov
mov
adc
repnz
jb
mov
adc
shlb
inc
inc
dec
adc
sbb
fwait
xchg
lret
jne
add
pop
mov
dec
into
dec
dec
sti
je
dec
sbb
mov
out
test
xchg
inc
mov
or
in
sub
aaa
pop
push
push
jno
enter
and
mov
adc
andl
cltd
into
bound
addr16
inc
imul
push
dec
mov
pop
bound
jp
lret
stos
into
les
aad
mov
pop
sub
out
and
push
adc
test
pop
sbb
mov
cltd
adc
daa
dec
inc
sub
adc
adc
leave
les
fimull
pop
in
and
in
pusha
mov
stc
mov
movsl
xchg
arpl
xchg
out
and
arpl
cld
mov
jle
push
cmp
test
adc
clc
and
sub
jp
movsb
pop
pop
fnstsw
and
xchg
fwait
mov
add
inc
xchg
imul
push
push
xorb
push
cmpsl
imul
loopne
xorl
scas
loope
add
iret
xchg
or
shlb
push
mov
pop
test
mov
mov
rorl
mov
push
or
adc
inc
dec
pop
mov
cmp
lahf
sahf
dec
push
mov
mov
and
mov
jo
pusha
and
movsl
jmp
loope
xchg
pusha
les
add
inc
mov
mov
xchg
dec
xchg
push
jg
je
pop
mov
jno
adc
movsl
je
repnz
xchg
and
iret
inc
cmpsb
sbb
fisttpll
movl
in
pop
movsl
and
xor
add
mov
push
es
and
pop
stc
test
nop
xchg
insl
shrl
popf
jae
aaa
into
ja
mov
pop
jmp
cmpsl
test
sub
and
andl
xorb
lret
fidivl
sahf
cmp
xor
icebp
arpl
sub
sub
cmp
sti
xchg
add
xchg
sbb
add
jl
xor
imul
pop
aam
inc
and
jg
in
stos
in
dec
xchg
pop
roll
les
fs
cld
sub
repz
dec
imulb
jge
les
je
cs
iret
loope
jns
sub
push
add
movsb
push
xor
loop
cmp
mov
cmp
inc
std
inc
scas
imul
xlat
leave
in
inc
jns
js
std
into
push
inc
xorl
shrb
pop
mov
push
fwait
xchg
movsb
fisubl
cmp
loopne
ja
mov
cmpb
add
ficoms
mov
xor
stos
ficoms
hlt
out
pushf
insl
mov
add
iret
data16
jmp
cmpsb
pop
push
ds
mov
xchg
outsl
inc
repz
lret
es
xchg
ja
lods
xor
loope
cli
pop
fisubs
mov
rorb
jecxz
pop
cmp
das
rcl
adc
xor
fwait
xchg
fistps
pushf
cmpsb
xor
push
add
mov
fistpl
sbb
mov
xor
in
and
clc
lret
ss
mov
push
lods
xchg
pop
lods
leave
xchg
je
gs
cmp
int
scas
daa
inc
jns
pushf
aaa
sbb
adc
and
mov
xchg
push
scas
ja
adcb
stos
bound
out
jge
decl
inc
adc
insb
jge
arpl
cmp
and
out
fidivrl
jo
test
push
or
or
movl
cmp
mov
dec
repnz
sbb
ljmp
ljmp
cmc
enter
int3
xor
stc
jmp
iret
jle
sbb
icebp
scas
out
arpl
push
adc
gs
sbb
cmpsb
imul
and
jmp
test
jo
mov
cli
stc
jp
out
mov
popf
test
out
pop
adc
mov
shl
loopne
cmpsl
mov
mov
cmp
imul
inc
movsl
negb
mov
xor
adc
jne
pop
push
loopne
xchg
imul
clc
mov
mov
daa
mov
mov
lock
xlat
mov
and
or
sub
outsl
popf
clc
mov
out
shr
sub
jb
jns
xchg
lods
lods
xchg
push
rol
adc
mov
inc
inc
in
cmp
int3
mov
cmpsl
mov
nop
ret
frstor
daa
mov
mov
dec
and
sbb
pop
pushf
test
lahf
sbbb
mov
scas
mov
mov
dec
push
mov
pop
and
les
faddl
xlat
cli
pop
add
add
cmc
nop
mov
lds
jbe
into
jmp
adc
mov
dec
push
xchg
in
popf
addb
dec
arpl
xorl
cmp
cmp
inc
test
adc
cmpsb
cs
jno
das
xor
loope
add
mov
int3
fldcw
or
fsubs
jae
pushf
shl
pavgb
fdivs
sub
je
mov
cli
push
push
inc
sub
sbb
jb
jge
pop
jnp
and
pop
pushf
and
pop
pop
jb
fnstcw
add
mov
fs
sub
pusha
fnstcw
ret
out
insl
out
ljmp
stos
jle
xlat
sbb
sbb
mov
pushf
imul
int
cld
or
into
setae
es
xlat
je
jns
sbb
dec
mov
sti
cs
mov
lret
popf
outsl
js
jge
popa
iret
rcrb
push
pop
std
subb
repnz
loopne
dec
mov
inc
das
sub
test
jb
pop
xchg
jmp
addr16
adc
sbb
or
cmp
xchg
fwait
dec
fs
cmpsl
inc
mov
push
sub
add
negb
popa
mov
insb
add
inc
xor
adc
cmp
cld
or
stos
jns
ljmp
in
dec
ds
cld
xor
loope
cmp
cmpl
cli
xchg
mov
mov
inc
test
adc
das
lea
imul
and
sub
and
dec
push
jg
ficomps
ljmp
int
mov
xor
lret
js
sub
scas
dec
fldenv
out
in
mov
orl
fstpl
cmc
cmpsl
test
insl
sub
pusha
aam
mov
jnp
push
repz
in
subl
or
adc
rcl
stos
xor
mov
pushl
aad
jbe
sub
sarl
push
mov
fdivl
mov
in
fwait
mov
push
fistpl
loop
in
lock
std
out
push
lods
adc
mov
xchg
or
mov
inc
mov
mov
adc
sahf
call
xor
in
mov
cmp
shl
pop
data16
dec
fcmovnu
stc
mov
lods
inc
dec
inc
xchg
mov
stos
call
fstp
mov
hlt
pop
insb
xor
stos
cmp
aas
pop
dec
dec
rorl
ds
pop
pop
ret
mov
mov
mov
js
xchg
sahf
pop
addr16
inc
lea
xchg
cmpsl
jecxz
sub
xchg
xchg
movsl
aam
jnp
hlt
loope
jecxz
dec
lods
rorb
mov
lahf
and
sbb
repz
push
mov
scas
je
bound
lcall
lds
mov
pop
lcall
mov
ds
jmp
jnp
std
push
int
test
sub
mov
and
jno
test
jb
sahf
popf
or
mov
lcall
mov
data16
xchg
xchg
xor
dec
inc
ds
imul
jge
sbb
lret
cmc
add
popa
repz
cmp
push
pop
lods
add
jno
mov
notl
add
and
mov
inc
mov
lds
sti
sbb
imul
sbb
sahf
push
xchg
jmp
in
add
ret
stc
roll
cs
jecxz
loop
pop
icebp
and
cltd
xor
insb
pop
pop
inc
xor
mov
lret
push
call
popa
pushf
es
daa
clc
xor
xchg
loope
inc
cmp
repnz
cmpsb
iret
mov
lods
sbb
loope
aam
aad
clc
mov
mov
pushf
shll
xor
mov
imul
imul
push
lret
mov
repz
loop
movsl
testb
js
sahf
dec
inc
add
pop
cmp
push
sub
inc
sub
cmpsb
inc
mov
jle
insb
mov
insb
lods
out
and
cli
lret
sbb
inc
shll
sbb
scas
lea
clc
inc
outsl
dec
mov
loop
in
jae
pop
cmp
std
movsw
adc
rorl
and
jb
aad
pop
in
xor
loop
jo
xchg
mov
int3
jp
cmpsb
mov
sub
dec
repz
push
cmp
clc
pop
sti
aam
push
dec
sub
pop
dec
jae
in
imul
pop
cltd
fwait
adcl
cmpsl
popa
fs
inc
add
or
jb
stos
in
push
mov
xor
pusha
decb
int
cwtl
bnd
stos
sti
jno
cwtl
lock
xchg
int
xchg
mov
and
cmpl
push
mov
cmp
ret
fcmove
dec
loope
cmp
dec
push
lods
jae
out
xlat
fwait
cmpl
lds
mov
dec
jnp
mov
loope
inc
xorl
sbbl
mov
imul
jecxz
iret
popf
orb
int3
sbb
stos
pop
icebp
sarb
cmp
sbb
mov
lret
test
je
test
outsb
int
push
call
xchg
adc
dec
insl
and
push
jno
sbb
sahf
mov
jb
mov
and
js
sahf
daa
fistps
or
cli
pop
add
fiadds
mov
xor
mov
inc
jae
jb
jne
sub
xchg
ljmp
sbb
outsl
jne
sub
xchg
mov
cs
sti
mov
fisubrs
fstl
sub
out
or
adc
xor
push
sbb
pop
cmp
sarl
cmpb
out
loope
lock
mov
inc
fisubl
stc
sub
or
dec
test
in
mov
ret
in
xchg
fistpl
xlat
add
sub
aam
roll
cmp
outsb
cli
lds
mov
and
cmc
mov
push
push
ljmp
cmp
lret
xor
sub
mov
xorl
jb
cmpsb
mov
clc
mov
movsb
cwtl
xchg
sbb
jmp
jae
adc
push
mov
lods
add
adc
adc
stos
and
sub
mov
popf
imul
cmp
hlt
pop
cmp
call
xchg
gs
shl
enter
push
add
imul
and
aad
movsb
and
out
dec
cld
jbe
test
outsl
sub
aas
in
inc
sbb
in
scas
adc
jae
ficoms
inc
cmpsb
sahf
add
orl
mov
rcrl
mov
jb
shl
incb
pushf
mov
sub
push
inc
xchg
mov
idivl
into
and
xlat
jl
out
add
inc
ljmp
sti
cmpsb
stos
dec
inc
sub
push
das
pushf
push
sahf
xor
bound
inc
and
fadds
jb
sbb
mov
mov
jo
xchg
jne
mov
xchg
pop
adcl
mov
int
xchg
sub
rclb
je
icebp
sahf
mov
mov
xchg
rcrl
ss
popa
adc
dec
pop
iret
add
frstor
sbb
cwtl
cld
inc
sbb
loope
xchg
jne
sar
shll
fnop
xchg
out
inc
das
and
mov
push
mov
stos
jmp
pop
sub
and
ret
jo
xor
xor
scas
mulb
sbbb
mov
fistl
pop
pusha
sub
cmpsl
sarl
sub
dec
je
pop
sbb
jb
and
add
andb
mov
scas
adc
jmp
jmp
das
in
ret
cmp
mov
loopne
sbb
pop
imul
mov
fucomp
dec
das
jbe
xchg
inc
loope
add
or
loope
jae
inc
or
inc
outsl
xlat
inc
sbbb
ret
and
mov
inc
sub
das
addr16
insb
data16
outsb
lock
add
repz
das
fbstp
add
jmp
ret
and
repz
fimuls
pop
rcrb
and
inc
mov
and
cwtl
imul
lret
fcoms
inc
dec
fdivl
dec
lcall
ss
push
std
push
cltd
rolb
lcall
or
jge
add
movsb
imul
pop
sub
iret
sahf
mov
in
testb
insl
ja
mov
cmp
scas
test
movsl
push
test
jge
jns
cltd
ja
gs
mov
test
jle
not
push
in
push
xorl
push
cmpsb
test
and
inc
sub
test
rol
fdivrs
cmp
shl
xchg
pop
add
jle
mov
movb
aas
fadds
lea
aam
lods
iret
adc
rolb
pop
movsb
dec
xchg
mov
xor
pushf
push
mov
ds
int3
mov
and
decb
popa
add
xchg
xchg
daa
insl
sti
pop
fsubrp
or
xchg
pop
enter
sbb
jmp
inc
push
inc
pop
scas
adc
sbb
dec
push
jb
inc
dec
cwtl
flds
lods
lret
xchg
fwait
movsl
sti
fisubrs
enter
cli
in
shlb
ljmp
mov
and
xchg
jbe
adc
scas
fmulp
fsubr
inc
xor
add
jb,pt
cmp
lret
or
dec
insb
xor
sti
test
popf
popf
rcll
stc
outsb
adc
in
shlb
iret
fistpll
dec
sbbb
mov
inc
mov
and
xor
pop
mov
mov
sub
dec
pop
shlb
push
fbld
sahf
push
xor
in
cmp
jnp
lret
push
test
or
ret
xor
xor
rcrl
cmp
fidivs
dec
push
das
fnstsw
push
dec
shll
or
xchg
shrl
jne
sarl
rcrb
jle
sysexit
adc
lock
nop
mov
push
push
scas
aaa
rolb
cmp
mov
xchg
jae
mov
sbb
sbb
mov
push
jl
xchg
btc
add
cmp
xchg
mov
shll
jae
ds
fwait
lea
jno
or
subl
fcomps
ret
hlt
inc
push
sti
dec
mov
jo
ss
lahf
das
insl
inc
mov
lock
dec
sub
mov
sub
and
add
jg
data16
mov
cwtl
data16
mov
xchg
jne
roll
stc
loope
add
adc
and
ficompl
testb
push
jne
mov
mov
ja
mov
enter
pop
testb
enter
pop
iret
fisttps
adc
xchg
xchg
pop
jp
stos
dec
pop
xchg
add
aad
jle
add
rorb
pusha
lods
les
enter
xor
lret
in
jne
cmc
cmpl
mov
mov
arpl
pop
das
or
out
fsubr
cld
insb
mov
or
and
daa
loop
subb
and
ljmp
mov
insl
push
adc
pop
mov
mov
xchg
jne
cmpsb
shll
lcall
adc
movsl
adc
fidivrs
or
mov
mov
pop
or
sbb
cmp
xchg
loopne
das
ja
je
and
and
divl
in
loopne
and
scas
je
sbb
mov
jmp
icebp
mov
pop
push
mov
adc
negb
out
out
into
xchg
pop
and
bound
sub
aas
std
es
cs
xchg
call
sub
lahf
and
shll
stos
cmpsl
lock
mov
inc
stc
fbld
and
xchg
mov
pop
mov
xchg
inc
fldenv
pop
test
xchg
add
ds
inc
test
add
test
mov
pop
jg
popa
xchg
in
cmp
push
mov
xchg
rcr
imul
lea
loope
loopne
dec
rorl
scas
insb
sti
dec
pop
js
hlt
or
mov
sbb
xchg
lods
test
addl
rcr
out
cli
lret
test
movsl
dec
dec
scas
scas
ret
cwtl
cmp
cmp
xchg
xlat
xchg
andl
xchg
xchg
mov
push
jno
std
scas
arpl
cmc
movsb
scas
inc
mov
stc
add
or
aam
std
sbb
mov
fnsetpm(287
jb
push
stc
pop
mov
fsts
nop
push
xchg
jl
test
sub
and
aas
push
jns
dec
xchg
stos
hlt
cmp
repnz
and
ret
imul
lcall
xchg
and
inc
xorl
cmp
jmp
ljmp
enter
and
push
push
inc
xchg
jmp
stos
pop
sub
adc
in
cmovns
loop
out
dec
and
loop
ret
pop
cmp
out
adc
mov
adc
pop
insb
and
lret
adc
pop
jno
push
xchg
movsb
pushf
ja
stos
loope
out
mov
imul
add
sub
sahf
pop
push
ljmp
and
nop
jge
and
sub
dec
lcall
push
ret
mov
je
shlb
mov
sarb
clc
cs
test
testl
xor
dec
inc
push
add
js
subl
bound
cmp
mov
mov
pushf
cmpsb
pusha
test
push
or
sbb
cmc
or
fwait
cmpsl
dec
mov
mov
stc
add
add
add
in
repz
fwait
and
cmp
mov
xchg
mov
roll
aad
mov
push
push
enter
push
je
daa
cmp
out
outsl
cmpsb
test
cld
mov
jae
sub
push
push
nop
clc
or
cwtl
push
xchg
or
out
mov
mov
in
pop
pushf
filds
cmp
xchg
push
mov
and
xchg
std
cs
in
adc
cmp
adc
dec
and
xor
mov
and
cs
scas
pop
mov
xchg
sub
mov
jmp
jb
jmp
mov
adc
ljmp
out
mov
push
dec
fildl
or
mov
je
pop
cmpsl
mov
mov
clc
and
ss
pop
aas
push
cmp
jge
jb
dec
orb
add
negb
sub
out
pop
sbb
inc
insb
mov
xchg
dec
dec
popf
ljmp
jg
sti
insl
dec
gs
scas
xor
xor
clc
js
mov
aam
mov
and
fnstenv
pop
rcr
outsb
cmpsb
mov
or
ror
addb
xor
xchg
rcll
sub
ret
hlt
mov
mov
sbb
movsb
sub
mov
leave
add
and
insl
test
mov
lea
sub
mov
movsb
mov
cmp
lea
aaa
add
mov
repnz
insl
or
adc
test
mov
mov
cmpsl
mov
pop
outsb
sub
push
lcall
stc
movsl
lcall
jle
mov
sub
pop
aaa
adc
push
xorb
sbb
in
adc
test
cs
aam
call
sbb
push
xchg
mov
cmp
mov
mov
cmpl
cmc
mov
aas
push
push
repnz
sbb
aad
add
fsubrl
push
nop
test
aaa
adc
jle
fwait
addb
movsl
add
or
rol
movsb
inc
and
cwtl
mov
xor
cmp
adc
aad
or
xor
pop
jg
in
dec
ret
lret
fwait
shll
fcoml
sbb
xchg
icebp
mov
or
add
lods
jb
ds
sub
push
loop
cwtl
enter
shlb
sbb
pop
dec
std
in
sahf
test
das
test
and
mov
inc
and
test
sub
icebp
sub
mov
in
inc
mov
movsb
test
xchg
or
cld
mov
dec
sbb
dec
jnp
cmp
insl
mov
stos
lcall
adc
pop
std
sar
pop
dec
dec
push
pop
pop
shl
mov
xchg
push
push
aam
dec
aad
push
inc
dec
ljmp
cmpsl
js
sbb
jmp
pop
mov
into
sbb
cltd
add
andl
and
in
lret
lock
push
push
mov
scas
lds
fistpll
sbb
lea
push
test
and
popf
add
shll
mov
inc
mov
mov
fld
sbb
lea
ljmp
dec
cmp
ret
mov
out
mov
inc
push
sbb
xchg
push
adc
push
cld
inc
je
dec
push
mov
test
in
hlt
sahf
test
mov
daa
fisubrs
stc
pop
ret
orl
popf
xchg
add
pop
fidivl
add
int3
cmc
in
adc
mov
cmp
xchg
dec
fdivp
mov
push
popf
sbb
lahf
add
icebp
adc
mov
xorb
sub
ljmp
cmp
ret
or
sbb
ret
insb
mov
jo
push
mov
push
cwtl
add
push
clc
imul
lea
arpl
or
out
es
adc
dec
jo
test
sbb
lods
xlat
pusha
shrb
dec
add
pushf
dec
sub
sahf
add
out
push
inc
je
jecxz
loopne
cmp
mov
add
lods
add
out
dec
and
cmpb
repz
pop
orb
lock
adc
mov
sub
in
push
call
jne
shrb
mov
hlt
sub
sub
push
std
imul
xorb
inc
outsb
add
ja
aad
dec
pop
into
sub
mov
hlt
fs
mov
pusha
test
mov
loopne
mov
xor
xchg
pushf
inc
or
push
inc
push
pop
jge
ja
aam
mov
out
cmp
dec
jae
push
lock
dec
adc
xor
mov
push
sar
mov
xchg
aad
cmpsb
mov
sbb
stos
ss
push
stos
dec
jg
add
je
pop
into
test
sub
inc
pop
or
das
pop
or
in
and
fildll
rcr
dec
out
cmp
das
rcrl
jmp
int3
ss
ljmp
add
lods
jle
jmp
mov
push
jns
adc
movsl
aas
sub
mov
adc
add
ds
in
ret
inc
add
sub
xchg
outsl
cltd
aam
and
pop
push
inc
in
aaa
cld
mov
push
test
inc
iret
loopne
sbb
jb
xor
xchg
jno
out
add
sub
jp
jbe
ja
push
adc
lea
int
addr16
adc
imul
mov
jge
jo
shlb
mov
or
push
lock
hlt
nop
clc
or
fdivs
std
cld
jne
movsb
dec
movsb
iret
add
ficoml
and
rol
ja
test
adc
pop
mov
rep
push
fstpl
sbb
movsl
adc
cli
imul
clc
rep
pop
je
gs
push
mov
rorb
ljmp
lahf
dec
icebp
mov
xor
fs
xor
icebp
fldl
test
push
mov
fsubl
pop
loop
out
sarb
sbb
stos
mov
and
mov
add
jmp
fnstsw
adc
outsl
pop
popf
mov
mov
mov
aaa
dec
sub
imul
sahf
push
add
pop
mov
pop
int3
clc
pop
sbb
jmp
int
scas
sub
add
scas
lret
outsb
or
gs
out
mov
fisubs
sub
lds
fbld
orb
add
adc
jl
addr16
dec
pop
push
mov
cmp
aaa
ret
ljmp
aad
sub
inc
pop
push
push
mov
test
push
imul
or
lea
xchg
lods
mov
pop
paddq
mov
int
addr16
and
fcoml
xchg
mov
mov
jae
push
pop
sbbl
mov
fidivs
movsl
jb
sub
adc
sub
insl
sbb
and
outsl
add
sub
pop
inc
lret
cli
test
cltd
add
into
push
mov
loope
pop
mov
xchg
push
inc
arpl
arpl
test
mov
xchg
inc
pop
jbe
adc
test
mov
or
lret
icebp
shl
je
lea
adc
lret
push
jb
adc
add
popa
push
xor
shlb
and
pushf
add
pop
sbb
pushl
add
and
push
cmc
xor
ret
add
scas
jmp
lret
lret
adc
mov
xor
test
jg
enter
cmp
mov
loopne
movsl
or
adc
add
call
xchg
lock
sbb
in
sub
mov
call
push
push
cmpb
dec
inc
jge
or
push
sbb
or
test
dec
nop
cmp
negb
and
cmp
inc
lods
popf
je
sti
into
mov
sbb
fidivrs
std
popf
pop
mov
test
xchg
imul
sbb
fwait
cmp
push
cmpsb
and
movsl
pop
ljmp
int
mov
push
das
cld
mov
adcb
push
mov
add
shl
test
or
push
pop
mov
rcll
gs
sbb
add
out
adc
shlb
gs
add
dec
aaa
lcall
test
xor
iret
cmp
movsl
adc
pop
in
roll
ss
xchg
push
lea
in
pop
cld
push
ficompl
push
stos
aaa
inc
pop
arpl
fiaddl
cmpsl
in
jecxz
subl
pop
rcrl
outsl
push
mov
xchg
or
cld
fistpl
outsb
ljmp
sub
sahf
call
jp
sbb
shrl
fists
dec
jecxz
cmpl
js
xor
xor
add
flds
in
lds
add
xlat
inc
mov
pop
mov
push
test
mov
sti
sub
into
pusha
xchg
inc
xchg
cmpsl
ljmp
test
dec
xor
fdiv
dec
push
in
xor
fcmovnb
pop
sahf
lds
cmpb
loope
add
out
sbb
pop
cli
sub
in
adc
lods
add
add
mov
js
adc
shll
dec
jg
ror
sarl
dec
mov
negb
ljmp
push
xor
rcrl
popa
sbb
lahf
jge
in
lock
sub
push
push
fidivrl
sarl
mov
pop
shl
cmp
je
add
fwait
rcl
sub
pextrw
pop
cvtss2sd
xchg
pop
pusha
mov
shrb
xchg
imul
mov
or
dec
cmp
pop
hlt
inc
sbb
jg
int
ret
nop
das
add
enter
stos
add
xor
mov
scas
insb
sbb
cs
hlt
in
cmpsb
nop
push
xchg
push
test
out
sbb
sub
pop
ffree
movsb
lea
test
push
fldcw
idivl
ljmp
loopne
repz
aas
pop
mov
cmp
aam
mov
xchg
lahf
xor
dec
dec
sub
and
pop
fdivrl
adc
jg
add
aas
in
les
lret
dec
mov
add
lods
push
movsl
sub
movsb
leave
frstor
mov
cltd
inc
les
lock
out
or
mov
insl
cmp
test
in
mov
cwtl
xchg
addr16
or
int3
pop
lcall
adc
add
mov
mov
add
in
stos
sbb
pop
fs
ret
icebp
mov
cmp
sub
outsl
mov
lret
aas
mov
in
inc
cmp
insl
adc
test
sahf
loopne
adc
into
cmpsb
dec
jbe
lea
push
les
lret
dec
cmpsb
jmp
cmp
sub
rol
pop
jge
negb
push
aam
pop
dec
into
add
push
outsl
out
scas
pop
mov
movsl
xlat
jge
mov
dec
push
lahf
ljmp
ds
and
jmp
subb
int3
les
stc
test
lods
fsqrt
gs
pop
jl
jb
scas
mov
add
xchg
cmp
cmp
dec
push
leave
xchg
movsb
mov
inc
cmpb
lods
call
jne
push
xor
enter
xor
pop
ds
jb
test
rclb
xchg
or
loop
int3
xchg
lret
cs
shr
mov
mov
loope
mov
test
idivb
mov
aam
imulb
cltd
gs
cli
nop
leave
ss
stos
xchg
divb
jl
mov
sub
jo
push
ds
jmp
dec
adc
jnp
repz
sub
test
outsb
xchg
xchg
pushf
inc
frstor
roll
xor
daa
shll
add
push
mov
cmc
mov
lods
fidivs
inc
clc
ja
mul
inc
add
call
jle
pop
xlat
insb
push
xchg
cmpps
mov
imul
test
aad
std
mov
lea
loope
addl
sub
mov
jl
lock
clc
xchg
fnstsw
leave
adc
fsubp
add
in
pop
push
xchg
dec
mov
ljmp
cwtl
pop
inc
or
mov
aam
arpl
pop
lahf
lahf
ds
push
inc
mov
mov
nop
add
dec
filds
enter
dec
in
mov
dec
out
jp
cmp
cs
push
mov
outsl
lea
mov
movsb
pushf
pop
test
xor
sub
mov
in
ret
and
xor
push
jl
fcmove
and
ret
pop
push
dec
or
sbb
xchg
cmp
sub
stc
int
jb
lret
push
fs
fcmovnu
cs
mov
mov
jg
pop
dec
push
rorl
dec
in
icebp
adc
in
mov
jge
addb
jnp
jne
sub
fcompl
adc
popf
add
pop
pop
stc
gs
in
mov
add
push
xor
dec
shlb
mov
xor
push
ja
cmp
movsb
pop
add
push
sbb
xor
sahf
push
repnz
and
mov
inc
inc
test
es
mov
out
xchg
imulb
pop
insb
pop
adc
pop
into
and
sub
jle
push
mov
sbb
ret
cmp
xchg
jbe
inc
adcb
es
adc
hlt
insb
es
adc
mov
or
or
cmpsl
xchg
cltd
add
sbb
push
les
jns
popf
dec
scas
dec
jnp
fsubs
cmc
xchg
cwtl
repnz
loopne
cli
adc
mov
adc
cs
xchg
xchg
xor
inc
sbb
or
pop
cmp
mov
mov
movsb
fcoms
cli
sub
sub
shl
pop
stc
and
cmp
pop
adc
jo
mov
ds
sub
and
adc
xchg
jmp
lcall
dec
jbe
out
adc
dec
lcall
iret
xchg
cli
fcmovnb
sarl
mov
pop
ret
jl
lea
ss
out
repz
mov
stc
popa
xlat
nop
pop
and
and
sub
int
sub
out
iret
add
test
in
std
jb
out
aad
jge
mov
pop
push
cmpsb
std
loopne
adc
pop
mov
inc
lds
lret
dec
icebp
int3
stos
jns
mov
stc
popf
mov
mov
mov
jbe
sbb
sub
cli
mov
fcmovu
cmp
jne
jns
or
pusha
and
test
pop
xchg
xchg
cmp
cmpsl
or
bound
imul
in
lea
mov
cmc
lret
int
mov
add
jae
and
icebp
cs
push
test
fwait
or
push
xlat
in
add
out
xor
int3
sbb
cs
or
sbb
sti
cmp
sub
adc
sbb
out
push
adc
pushf
or
dec
stos
fdivp
cmpsl
bound
mov
roll
ds
stos
xchg
cwtl
cmp
and
mov
movb
inc
daa
add
andl
xor
jo
jnp
mov
xchg
movsl
cmp
ja
push
sahf
add
pop
cmp
test
sahf
ds
nop
les
fmul
mov
sbbl
dec
dec
pop
inc
fcomps
mov
popf
icebp
enter
dec
jne
aam
inc
jle
test
outsb
sub
mov
test
xchg
mov
std
push
adc
mov
sbb
mov
sub
jmp
jp
outsl
jns
jg
shlb
dec
out
pop
xchg
mov
lcall
xchg
test
data16
fbstp
jmp
inc
js
popa
jbe
jo
pushf
fwait
mov
mov
jae
pop
add
xchg
sub
loopne
rorl
pop
iret
movsl
repz
push
or
bound
and
or
mov
ljmp
fmull
int3
bound
pop
xor
notb
and
stos
js
cmp
sub
stos
jae
mov
lods
cmp
daa
or
push
aam
jg
xchg
xor
cltd
cmp
and
push
add
add
cs
jmp
jb
popl
sub
cmp
loope
adc
adc
fcmovbe
add
xchg
pop
fcoms
out
adc
xchg
mov
ret
cmpsl
cli
mov
orl
in
outsl
add
push
adc
push
xchg
or
adc
test
aaa
jns
xor
xor
push
imul
icebp
push
inc
loop
sub
inc
push
rorl
xchg
mov
shrl
das
imul
sbb
add
popf
cmp
mov
or
stos
mov
sti
in
push
cs
mov
mov
imul
mov
imul
jl
mov
scas
jecxz
sub
repnz
pop
lahf
dec
mov
out
jnp
jle
add
mov
and
jno
push
xchg
jne
xor
out
imul
int3
cmpsb
testb
push
xchg
mov
xor
mov
clc
cmp
sbb
sysret
shrb
push
and
cmp
es
lods
xor
loopne
pop
xor
shll
xor
xchg
js,pn
push
and
mov
or
push
dec
ss
aam
xorl
lock
imulb
movsl
add
cli
xchg
fmulp
iret
test
or
mov
aas
ret
ljmp
fidivs
mov
out
cvtps2pd
push
movsl
cmc
std
jle
inc
sbb
push
into
sbbl
js
fisttpl
fs
into
sub
add
je
add
mov
cmp
or
jno
out
das
shl
in
enter
sub
jno
xchg
data16
out
mov
fdivrs
push
inc
jecxz
fidivrs
mov
popa
pop
and
mov
mov
ljmp
adc
aam
sahf
lods
loop
popa
dec
fidivs
pop
lds
shll
jmp
dec
xchg
mov
std
push
test
imul
xchg
fs
lds
and
ret
jbe
mov
push
add
movsb
enter
xchg
sub
inc
cld
mov
sub
sbb
popf
or
pop
int
aad
adc
lahf
mov
test
loop
std
cmp
fld
inc
xchg
stc
mov
aas
cmp
jl
adc
cld
mov
lcall
test
and
pop
add
inc
pop
insl
in
xchg
cwtl
ret
int
inc
call
dec
jne
in
push
mov
ljmp
sbb
aam
das
adc
insb
cwtl
adcl
rorb
ss
cmp
sbb
push
add
or
sub
aam
cld
out
fisttps
stos
sbb
sub
sbb
sbb
xor
jl
sbb
sub
mov
imul
xchg
loope
or
xor
test
jno
aad
push
imul
adc
push
faddp
add
push
pop
cmpsl
mov
adc
sub
pop
ret
ljmp
xchg
and
int
push
lret
dec
insl
cmpb
outsb
aad
test
sub
loopne
inc
push
nop
lahf
movsl
pusha
inc
stos
jnp
jnp
cli
and
xor
ja
aaa
sbb
adc
mov
sbb
sub
or
push
mov
ss
jl
les
ljmp
aad
faddl
int
adc
xor
mov
mov
bound
jl
lock
dec
pop
and
mov
and
scas
std
fcoms
arpl
mov
lods
aas
lods
xchg
mov
out
lods
mov
js
adc
movsb
and
cs
lods
adc
dec
mov
decl
push
lods
xchg
into
cmp
mov
add
xchg
jbe
mov
jg
js
outsl
or
push
sbb
js
push
jge
pop
pop
scas
fidivrs
xchg
mov
jne
jmp
daa
dec
ret
pop
dec
jo
jg
test
push
xchg
leave
xlat
adc
mov
gs
inc
and
inc
mov
mov
out
shrl
inc
mov
jns
lret
out
fsubs
lahf
sbb
cmpsl
push
clc
in
xor
outsl
mov
sbb
add
lcall
jge
out
call
inc
jb
fwait
movsl
add
stc
push
mov
sti
stos
daa
ds
lahf
xchg
out
rolb
sub
test
decl
sbb
sahf
aas
xor
add
outsl
xor
xor
cmp
dec
das
adc
jmp
push
cltd
jne
xchg
fdivr
jp
adcl
enter
shrl
les
fdivr
stos
int
xchg
in
add
cli
jg
aaa
int
sbb
sbb
in
call
lret
xor
int3
iret
and
pop
fdivr
fsts
movsl
ret
test
lds
xor
roll
enter
cs
dec
rclb
cmp
cmpsb
mov
sbb
cmpsl
jl
lock
or
jbe
sub
and
adc
add
pop
leave
int
cmp
mov
mov
xor
push
jae
adc
mov
fbld
cmp
or
inc
test
cli
test
xor
or
and
cli
ret
scas
das
cld
cmp
mov
mov
rclb
xchg
dec
xchg
xlat
sub
icebp
imul
adc
mov
subb
mov
and
stc
pop
dec
rorb
add
and
push
mov
test
ficomps
cwtl
clc
cmpl
in
mov
xor
adc
pop
sahf
mov
mov
loopne
jmp
add
jno
loope
fstps
xchg
shlb
push
mov
loop
jb
aad
sub
push
mov
jle
mov
ljmp
mov
das
xchg
stos
insb
inc
out
leave
lds
mov
jae
in
push
sbb
sbb
das
dec
dec
push
fxrstor
loopne
int3
fwait
cmp
lahf
loope
lret
clc
mov
int3
nop
fmuls
inc
push
flds
jno
xchg
fisttps
divb
or
mov
mov
fdivrs
and
mov
stos
sbb
sub
pusha
stos
xchg
xlat
scas
push
ret
jle
sbb
dec
test
mov
test
xor
pop
xlat
movsl
in
rorl
mov
sbb
jo
mov
adc
bound
push
cs
sbb
xchg
js
mov
xchg
pushf
push
movsb
repz
fdivrs
jle
test
xor
es
int
sbb
jbe
insb
call
mov
mov
sub
and
mov
loopne
cli
sbb
lods
or
fdivp
sti
into
shl
mov
jg
xorl
pop
in
xchg
hlt
shll
mov
cltd
cwtl
call
xchg
sbb
lods
and
adc
push
lods
gs
and
push
add
addr16
mov
push
pop
arpl
adc
pop
ret
inc
mov
lds
shl
pop
dec
test
inc
adc
jge
jle
cmpsl
mov
xchg
aad
aam
and
in
adc
lahf
or
int
aad
aaa
dec
sbb
int
mov
sahf
pop
lds
add
dec
mov
pop
mov
rorb
xor
aad
cmpsl
push
jle
out
jmp
mov
out
inc
aam
xchg
sbb
call
lods
fistpl
xor
dec
mov
push
xchg
mov
mov
adc
mov
aam
and
mov
fimuls
xor
rcrl
sub
push
jmp
lea
lods
aaa
lds
push
push
dec
jo
arpl
add
fxch
adc
adc
mov
insb
inc
and
fistl
or
lea
mov
inc
jo
test
out
fcmovne
lret
and
jo
mov
mov
jg
sahf
fisttps
loope
and
nop
inc
gs
xor
xchg
add
add
xor
movsl
push
pop
dec
mov
and
scas
and
shlb
adc
fidivrs
insl
stos
out
sub
mov
xlat
mov
mov
dec
aam
lahf
inc
push
lods
mov
stc
add
fdivr
ret
jl
push
mov
pop
jnp
xchg
ret
pop
fs
leave
push
or
xlat
xchg
adc
aas
inc
lcall
cmp
mov
in
mov
xor
lret
xchg
repz
cs
pusha
lock
push
pop
movl
std
push
push
jno
push
mov
pushf
sbb
mov
ficoml
loop
adc
out
sub
in
jge
cmpsl
dec
nop
sbb
mov
imul
add
inc
pop
loop
sbb
inc
insl
lock
ret
shll
out
popa
xchg
sub
xchg
lcall
adc
xor
xchg
rcll
cmp
jnp
xchg
sub
mov
mov
mov
gs
cmp
and
inc
or
cmpsl
aaa
int
xchg
mov
jns
out
lcall
xlat
jae
sub
pop
mov
lock
pop
enter
and
stc
aaa
shrl
rorl
dec
mov
ret
call
or
movsl
cmc
outsb
jg
mov
and
flds
adc
scas
mov
sub
in
push
sbb
jb
insb
mov
arpl
sub
dec
lret
mov
int3
sbb
dec
and
scas
gs
inc
pushf
scas
in
push
xchg
stc
loope
xchg
pop
xchg
sub
inc
sub
add
jmp
das
dec
jp
mov
scas
sahf
add
lea
cmp
call
cmp
xchg
jae
ja
nop
jg
mov
fxch
pop
and
scas
jmp
inc
mov
xorl
push
push
gs
test
pop
icebp
push
pop
std
inc
aas
in
clc
inc
cmpsb
jnp
enter
aad
movsl
test
repz
inc
pushf
jne
pop
iret
jl
aad
lods
lret
loop
mov
cld
jg
std
out
sbb
cmpsl
lods
cs
mov
ds
int
pop
xlat
xchg
or
inc
loope
je
inc
aam
push
out
aam
insb
xchg
mov
cltd
fdivrs
dec
mov
mov
in
or
lods
daa
ss
mov
xchg
mov
fimuls
int3
jae
mov
gs
jg
addr16
lahf
inc
or
popa
xchg
adc
add
sarl
insb
jno
out
test
push
scas
fdiv
inc
mov
lea
mov
jb
ljmp
dec
loope
lahf
lock
sbbb
testb
lret
mov
xor
shrl
pop
dec
dec
aaa
test
aas
in
ret
or
sbb
and
pop
scas
xor
xchg
xor
and
out
jo
jmp
xchg
xchg
subb
fwait
push
sub
jae
inc
pop
jns
xlat
jae
jns
lcall
adc
dec
addl
ja
lahf
insl
cmp
cmp
mov
bound
stos
adc
lret
insb
leave
enter
mov
cmp
dec
fcomi
ds
btr
rolb
mov
and
mov
sbb
cmp
gs
mov
movsl
push
inc
or
or
enter
scas
or
in
fwait
pop
andb
mov
pop
add
movb
mov
repz
mov
out
inc
aam
adc
div
popa
inc
test
cli
adc
sarb
jne
js
push
mov
js
ljmp
xlat
jecxz
lcall
int
inc
fs
cmpsb
jle
push
out
mov
sbb
pop
aas
into
shll
sub
out
cs
int
mov
xchg
lds
cmp
push
int
sbb
cltd
out
popf
cmp
into
in
mov
or
pop
stos
sbb
pop
les
lods
dec
loopne
js
push
fisubl
ret
jmp
jnp
pushf
loopne
sarb
sub
xor
jle
aad
lea
stos
cwtl
jo
push
xorl
push
add
dec
sbb
outsl
bound
jmp
int3
adc
fdivrs
mov
fstps
jb
adc
pop
out
mov
pop
daa
cwtl
pushf
inc
mov
mov
sarl
fwait
shr
test
adc
push
sbb
adc
jmp
aaa
pop
clc
mov
jbe
pop
adc
add
mov
mov
mov
mov
add
gs
inc
lea
xchg
cltd
sahf
repz
fisttpl
mov
dec
test
add
lret
mov
sbb
imul
inc
inc
mov
add
jo
push
loop
test
or
dec
and
shlb
jecxz
mov
or
push
and
or
cmp
in
dec
xor
dec
mov
aas
xor
and
push
sarb
cli
push
cwtl
popa
add
mov
aas
pushf
cs
cmpb
dec
mov
aam
adc
mov
pop
mov
pop
ret
cmpsl
push
bound
inc
jnp
mov
cmp
clc
adcb
xchg
adc
push
shl
lods
cmp
inc
xchg
xor
mov
mov
enter
enter
pop
loope
xchg
dec
xchg
scas
dec
in
inc
fsts
scas
inc
aam
insl
std
test
inc
inc
xchg
or
cli
pusha
mov
shlb
add
movsl
cs
sbb
ss
mov
pop
bound
pop
xor
sub
aas
pop
lcall
sbb
mov
daa
mov
movsl
stos
xor
ja
fnstcw
sub
push
jl
subl
jbe
dec
pop
fmuls
mov
xlat
bound
insl
shl
test
leavew
and
and
mov
test
mov
xchg
and
inc
push
adc
sub
test
xchg
ljmp
inc
jbe
sub
jl
and
andl
jo
jmp
mov
push
cmc
push
cmp
pop
ljmp
adc
inc
gs
pop
jge
mov
xor
mov
adc
inc
pop
dec
lahf
or
sbb
adc
stos
xor
add
fildll
push
xchg
pop
test
sub
or
movsl
out
cltd
notl
mov
mov
js
arpl
stc
push
and
mov
dec
mov
stos
adc
mov
popa
pop
decl
push
cwtl
scas
sahf
sti
or
fcmovne
xor
jne
xchg
repnz
loope
adc
sbb
fs
daa
push
pop
pop
sbbl
adc
dec
je
xchg
hlt
mov
pop
adc
adc
jne
push
lret
orl
outsb
insl
or
repz
and
pop
mov
mov
push
sub
aam
mov
movsl
push
inc
inc
sub
pop
imulb
imul
pop
jle
aaa
sub
pusha
inc
rol
mov
in
call
mov
mov
mov
jnp
push
imul
sub
mov
das
fcmovne
out
shl
or
jl
int3
jl
adc
mov
push
lea
repz
mov
mov
xlat
sahf
ljmp
xchg
mov
jbe
push
push
mov
sub
adc
sti
into
cmp
push
pushf
pop
jb
lods
jbe
leave
mov
push
out
enter
fs
sbb
cmp
jge
adc
mov
mov
in
dec
mov
cmp
es
dec
mov
imul
jbe
insb
or
inc
cmpsl
sbb
jmp
ret
inc
add
fwait
les
inc
cmp
cmp
inc
jb
sbb
xchg
pop
and
cmp
test
push
inc
mov
lret
dec
adc
adc
jle
cs
push
adc
fisubl
jns
dec
jmp
sub
jp
bound
mov
dec
loopne
mov
shrb
and
cmc
sti
jg
cmc
inc
xchg
or
scas
add
xor
pop
dec
mov
lahf
add
aaa
jmp
push
outsb
xor
in
inc
sub
jl
mov
je
mov
jle
pop
out
imul
dec
lret
xchg
and
sub
out
inc
jns
sbb
pop
imul
mov
cmp
mov
enter
cmp
movsb
das
out
pop
add
adc
mov
mov
les
adc
and
movsb
mov
lcall
add
or
push
inc
and
sbb
faddl
cmpsb
mov
mov
test
loope
xchg
and
test
les
push
rcrl
cmpsb
jnp
xchg
jg
add
enter
imul
xchg
in
adc
xchg
aaa
xchg
push
aas
ljmp
dec
outsb
inc
dec
inc
mov
popl
push
in
push
test
sub
jmp
jmp
sbb
mov
jg
mov
sbb
lahf
lds
push
mov
dec
push
and
xor
in
jge
mov
loope
movb
arpl
stc
sbb
mov
jecxz
sub
push
add
pop
pop
in
push
icebp
mov
adc
or
sub
iret
shrl
adc
outsl
aaa
cmp
or
fsubp
fistpl
popa
inc
adc
fstpt
mov
mov
push
sub
adc
outsl
gs
mov
in
jne
out
adc
jnp
in
jbe
std
out
sbb
cmp
add
icebp
add
aad
lods
fcmovnbe
sbb
mov
stc
int3
and
and
and
aam
test
mov
mov
cmp
push
jnp
fnsave
mov
iret
inc
mov
imul
push
push
xchg
movsl
dec
jo
push
dec
into
and
lea
repnz
inc
lock
mov
mov
ds
shlb
hlt
lock
inc
vrsqrtss
in
pushf
lds
fiadds
lds
fistl
dec
out
mov
pop
dec
cs
mov
push
adc
inc
mov
test
lcall
jno
mov
xchg
inc
push
cmpsl
pop
adc
loopne
cmp
fsubr
ja
fistpll
sbb
movsb
sbb
repz
rcl
xchg
insb
jge
out
icebp
push
push
rcll
popf
ss
add
xor
test
jmp
mov
sti
cmc
cli
push
rcll
pop
and
pop
fidivs
loop
sub
scas
adc
imul
pop
iret
cmp
jmp
fbstp
arpl
sbb
jmp
std
push
cwtl
pop
cmp
pop
inc
lret
mov
xchg
cli
cmp
mov
push
roll
stos
les
ss
sahf
fldcw
pop
cmpsl
mov
ret
pop
fldenv
mov
outsb
negb
jle
and
xor
in
adc
push
mov
adc
inc
pop
xchg
test
test
push
les
aaa
and
nop
jle
les
inc
lock
sbb
push
idivl
jnp
popf
cmpsb
pop
jl
jl
push
push
mov
push
jae
loope
sub
popa
push
push
in
pop
and
mov
add
cmp
das
cmpl
sub
pusha
inc
pop
mov
jle
and
mov
shlb
and
cmp
mov
insb
mov
sub
sbb
popf
ret
push
xor
andb
inc
popa
test
out
testb
push
out
jns
mov
pop
push
inc
repnz
cmpsl
inc
mov
mov
inc
pop
and
fisubl
and
mov
shlb
pop
sub
add
pop
std
insb
or
cmp
and
push
sbb
nop
inc
mov
loop
jp
cld
mov
in
in
sahf
ret
sbbl
inc
or
xchg
std
dec
jnp
dec
inc
push
repnz
pop
mov
data16
pop
add
mov
divb
pop
lods
pop
imul
or
add
pop
data16
fnstcw
loope
jne
jl
mov
adc
pop
loope
lods
mov
xor
insl
in
popf
pusha
dec
sbb
mov
mov
mov
pop
mov
insb
push
mov
add
jg
jle,pt
pop
daa
jbe
or
out
rcrb
push
out
add
and
not
stc
in
pop
out
in
mov
je
jl
mov
je
adc
popl
repz
mov
cmp
adc
out
and
jl
mov
pop
pop
ja
add
cmp
scas
adc
mov
aad
jmp
lock
pop
pop
jnp
divb
xchg
test
clc
das
fiadds
pop
cld
inc
xor
imul
push
fiaddl
mov
mov
xchg
and
mov
daa
sti
outsl
in
data16
xor
sbb
push
mov
or
loope
cmp
test
jmp
mov
gs
int
pushf
xchg
in
jno
js
sbb
pop
dec
shll
xor
adc
scas
sbb
jp
mov
js
and
loop
cld
les
and
in
scas
or
pop
enter
loope
scas
and
push
test
les
hlt
test
aas
out
cli
or
stos
hlt
push
sbb
mov
cmp
outsb
or
pushf
cs
stc
jecxz
push
call
sar
dec
pop
cmpsl
arpl
out
fmul
cmp
mov
cmpl
std
jle
adc
lret
decb
push
adc
incl
pop
add
pushl
test
fimuls
inc
xor
xchg
cmc
sbb
mov
jno
xchg
adc
into
inc
xor
mov
mov
fsts
cltd
fildll
push
pop
dec
mov
pop
lret
clc
pop
sahf
and
mov
inc
cmp
push
iret
repz
repz
inc
cmp
nop
push
inc
sbb
sub
nop
leave
hlt
xlat
pop
arpl
adc
push
lcall
fimuls
test
ficompl
cltd
add
mov
add
xchg
dec
jl
xlat
int
or
mov
cmp
mov
ficomps
or
ficomps
sub
ffree
xlat
inc
out
pop
add
shrb
cmpsb
add
sbb
mov
xor
loop
int
inc
mov
jo
js
sarb
pop
xor
xor
inc
inc
into
sbb
dec
lock
stos
stc
les
pop
jmp
mov
out
inc
js
xchg
jno
cmp
xor
mov
xchg
xchg
and
orb
mov
outsb
or
or
aam
rol
mov
and
inc
push
data16
cld
les
sti
jle
into
add
rcl
xor
pop
ret
pop
ss
jge
shrl
dec
or
xor
adc
fdivrl
sbb
mov
lock
or
stc
mov
loop
push
xchg
cmp
lret
mov
xor
jp
gs
mov
dec
jo
outsb
fs
xor
mov
leave
int3
ss
pop
sbb
aaa
shll
aaa
dec
je
rcrb
mov
in
push
lods
dec
fsub
mov
pop
lods
xchg
add
push
movsl
xor
push
pop
push
mov
iret
sbb
stos
mov
cmpsb
retw
xorb
mov
dec
popf
subb
cs
dec
scas
add
jnp
pop
or
xchg
int
xchg
xchg
fidivs
int3
mov
nop
loop
sub
inc
cwtl
lret
add
inc
xorl
mov
gs
push
mov
mul
test
push
adc
fisubrs
sub
jecxz
xchg
pop
mov
xor
ffreep
ljmp
xor
mov
jl
popa
insb
push
cwtl
popf
adc
xor
xchg
aas
test
fs
insb
sub
repnz
lds
push
ljmp
inc
outsb
or
fdivl
xor
lcall
cmp
test
out
dec
lcall
or
scas
mov
inc
sbb
or
mov
pop
rorl
rorl
mov
lea
mov
int
jae
adc
int3
js
sub
xchg
and
fsts
or
mov
les
sti
jo
dec
test
fst
lods
xor
lcall
jne
inc
je
mov
add
dec
push
insl
mov
scas
sub
imul
mov
push
xor
gs
add
pop
or
and
imul
cwtl
jmp
imul
cwtl
pushf
addr16
in
add
inc
adc
add
xchg
push
dec
daa
cli
pop
push
aas
pop
dec
xor
gs
cmp
cwtl
into
data16
mov
inc
icebp
aaa
out
in
xchg
add
fstps
subl
outsl
into
adc
push
outsb
cbtw
adc
lods
addr16
je
cmp
jnp
rcll
sbb
lret
mov
dec
push
cwtl
pop
jae
jno
shl
inc
mov
add
clc
xor
jb
jmp
mov
push
cmp
push
xor
add
inc
jb
subl
sub
clc
mov
popf
addr16
lds
icebp
stc
sahf
lret
mov
iret
cmc
sbb
sets
sbb
cli
jg
prefetcht1
roll
fstl
rorl
push
aaa
xchg
pop
outsb
shlb
ds
sahf
cmc
mov
test
ficomps
leave
dec
leave
int3
scas
cmc
idiv
mov
cmp
pop
and
jle
mov
pop
cld
cs
pop
and
lods
stc
push
sti
inc
push
adc
cmp
add
xor
push
push
fcmovnb
ror
pop
push
and
pushf
or
mov
mov
es
add
jecxz
test
adcb
rclb
and
cmpsb
addr16
shl
adc
sbb
adc
fistpll
push
out
cmp
out
adc
dec
inc
push
shll
test
in
sub
fcmovu
xlat
push
sti
xchg
sub
in
pusha
fiaddl
mov
xor
dec
inc
mov
scas
xchg
rorl
xacquire
xlat
jecxz
enter
call
pcmpgtd
pop
ficomps
pop
sbb
in
roll
xchg
pop
shrl
mov
dec
nop
push
pop
push
arpl
inc
push
clc
das
inc
in
jno
add
push
jp
cmpsb
dec
add
movsl
jb
mov
push
or
imul
xchg
sub
pushf
movsl
push
aaa
jecxz
push
cli
out
xchg
lcall
and
sbb
jne
ret
xchg
sarb
imulb
arpl
stc
lods
ss
fsubs
mov
sub
test
lock
xchg
shlb
jnp
push
das
bound
sbb
xor
inc
nop
lcall
leave
int
inc
xchg
out
stos
mov
scas
sarl
lock
cmp
loop
sti
xchg
mov
and
or
and
sbb
aad
mov
inc
mov
inc
xchg
xchg
inc
push
stos
sub
ss
addb
push
stos
xor
jl
mov
std
pop
jmp
fs
sti
imul
dec
insl
adc
stos
nop
jge
inc
fidivl
and
aam
pop
push
movsb
ret
scas
fnstcw
stos
pop
xchg
mov
pushf
and
mov
jmp
data16
aam
mov
bound
add
fists
fnstenv
mov
lret
push
scas
test
stos
mov
fisubl
jge
mull
leave
addb
fidivs
lret
pop
fwait
and
gs
loopne
aaa
repz
aad
adc
push
pop
cli
add
pop
cmp
push
inc
out
xor
in
daa
clc
pushf
sbb
test
shrl
xor
je
xor
push
and
jge
add
and
push
cwtl
lcall
or
sub
in
inc
icebp
push
repz
and
mov
fwait
imul
mov
shlb
push
push
out
pushf
sub
je
pop
fnstenv
fstps
fsubrs
cmc
mov
repnz
test
data16
mov
push
mov
rorb
iret
sti
jge
nop
xchg
bound
xor
loope
or
inc
out
mov
in
and
es
add
test
jo
data16
push
or
mov
lahf
rorl
lea
hlt
jg
mov
pop
out
cmp
lret
jge
jbe
lods
inc
daa
push
cmp
in
ja
pop
dec
add
add
push
and
mov
mov
xchg
insb
andb
inc
sub
adc
into
mov
jb
loope
in
xor
mov
inc
jnp
xchg
jns
fcoms
dec
dec
jb
adc
and
inc
cmpsb
or
stc
xor
adc
xor
mov
cmp
mov
push
add
sbb
pop
mov
mov
jno
mov
lcall
xor
pop
cmp
adc
push
pop
shlb
jne
shr
icebp
jmp
aam
adc
inc
sbb
loope
sbb
das
fnstenv
js
or
mov
and
cltd
xor
test
ss
push
mov
call
sbbb
mov
dec
or
xor
fwait
mov
jle
clc
mov
gs
xor
in
fisubs
mov
test
lahf
inc
mov
cs
or
imul
mov
sub
sbb
push
xchg
cli
imul
leave
xor
sbb
or
mov
or
ret
arpl
jle
bound
pop
cmp
pusha
mov
push
xchg
hlt
ds
and
xchg
push
dec
fdivr
cmp
movsl
shrb
xlat
mov
mov
aas
je
cmp
xor
push
aas
inc
and
pop
fs
jle
push
lds
gs
xchg
ret
and
addl
inc
jecxz
add
fwait
inc
icebp
jnp
add
jo
sbb
mov
call
push
xor
icebp
add
jecxz
inc
movsb
lock
cmpsl
lds
push
mov
mov
inc
pop
out
out
and
xor
mov
test
imul
mov
rcr
roll
icebp
movsb
lock
aad
fdivl
in
popa
push
push
push
fs
fwait
mov
push
pop
xorl
lods
sbb
std
clc
test
mov
and
adc
andb
mov
mov
xchg
cltd
jecxz
cmc
push
leave
cmp
cli
adc
adc
in
sbb
and
cwtl
shl
push
cmc
int3
pop
add
pop
cmpsb
dec
mov
xor
jmp
clc
push
pusha
dec
out
scas
ret
es
mov
sub
xlat
les
sbb
cmp
adc
pop
and
lock
jge
addl
shlb
xor
jge
mov
inc
or
mov
sub
into
aas
jae
dec
mov
fimuls
sbb
push
mov
add
mov
movsb
shlb
aas
pushf
add
or
inc
iret
xchg
into
gs
jae
jne
sub
mov
outsb
mov
iret
ljmp
fwait
mov
sahf
fnstcw
rcl
inc
pop
ja
int3
push
xchg
ret
stc
or
jb
bnd
jmp
xor
repnz
in
insl
cli
pop
leave
mov
test
xchg
xor
push
cmp
cmp
lock
xchg
mov
subl
ficompl
out
cmp
imul
stos
xor
lahf
shll
cwtl
sbb
repnz
fstpt
mov
add
mov
inc
xlat
pushf
ret
sub
or
push
add
xor
notb
pop
xor
push
movsb
mov
push
pop
sub
cmp
push
dec
hlt
shl
lock
add
mov
jle
adc
sub
add
pop
gs
pop
and
sti
mov
mov
aad
mov
jne
push
popa
scas
std
std
or
iret
shl
push
fidivs
test
daa
jmp
pop
addr16
ds
jnp
test
popf
add
pop
ljmp
repnz
inc
push
stc
jp
out
dec
and
or
jb
push
xchg
mov
push
and
sub
add
or
data16
adc
jge
shlb
jp
sub
push
jl
and
hlt
aam
in
fistl
loop
mov
adc
fcmove
les
adc
ret
cwtl
mov
dec
scas
xor
xchg
filds
test
pop
xchg
inc
push
outsl
add
test
mov
xor
dec
rorb
jno
or
lcall
sub
mov
enter
dec
bound
ds
aad
sub
xor
jge
sahf
cmpsl
adc
lds
ret
xor
sub
jl
add
and
ljmp
scas
lea
xor
push
mov
popf
pop
sub
into
cld
testl
mov
jecxz
ljmp
repnz
dec
push
add
rclb
inc
rep
shlb
popf
andl
out
movsb
decl
es
mov
xor
pop
inc
cld
mov
shll
jno
inc
or
push
loopne
mov
dec
popa
stc
cmpsb
movsb
xchg
sub
adc
fs
and
in
lahf
arpl
xchg
fisttpll
aaa
mov
nop
cs
pop
and
xor
and
xchg
fcmovnb
mov
rorl
rorb
aam
lret
mov
test
idivw
push
mov
mov
es
pop
xchg
stc
enter
sbb
mov
dec
movsb
ja
fisttpl
movsw
mov
xor
xor
xor
stos
clc
xchg
adc
lcall
out
add
cltd
mov
jge
stos
sbb
xchg
jnp
call
imul
pushf
data16
insl
pop
pop
mov
xor
jecxz
pop
jne
cmp
hlt
mov
insl
fisubrs
push
mov
loopne
cmpsb
mov
bound
jg
lret
insl
sbb
pusha
out
iret
scas
jecxz
bound
cwtl
ljmp
inc
gs
dec
loop
pusha
inc
stos
loopne
das
push
sub
adc
mov
lcall
pop
loop
jle
sub
inc
shll
and
fdivs
lods
das
and
es
sub
inc
adc
jecxz
cmp
addb
sub
or
fidivrl
ret
adcb
out
sahf
sbb
enter
movsb
lods
mov
bound
dec
inc
add
push
push
sti
xchg
das
jp
pop
lahf
mov
shlb
ljmp
scas
jg
sbb
arpl
dec
mov
pop
jb
push
mov
stos
push
push
popf
cwtl
lret
insb
pushl
pop
test
fcmovu
sahf
popa
test
and
cld
shrl
in
sahf
and
test
orl
push
fdivl
add
mov
inc
and
ret
pop
and
xchg
out
mov
jp
mov
cmpsl
add
fs
inc
or
cmc
pop
stos
addr16
dec
jge
stos
fisttpl
lahf
jmp
add
test
daa
loop
test
mov
mov
push
mov
aas
add
and
es
pushf
rcr
adc
fiadds
push
dec
add
push
xor
scas
xchg
cli
push
fcoms
js
inc
stos
pop
add
and
push
jno
loope
out
lea
push
mov
daa
inc
cld
fstpl
xor
push
push
add
dec
mov
push
mov
insl
push
lret
pusha
sub
mov
lahf
xchg
rolb
pushl
mov
jle
incl
push
lds
jp
movsb
test
flds
and
lahf
pop
fcmovb
mov
xor
mov
dec
mov
lea
cltd
sub
mov
bound
sbb
popf
xor
cltd
xchg
enter
andl
and
insl
adc
and
push
icebp
mov
divb
ds
push
mov
or
cmp
dec
sbb
xor
lcall
hlt
push
repz
sahf
dec
dec
into
mov
dec
cltd
cs
arpl
pusha
into
ret
fildll
insb
ja
popf
or
cli
inc
jae
out
stc
adc
popa
push
adc
mov
mov
loopne
test
sbb
mov
fnstenv
in
ret
inc
jle
jb
aam
and
jne
out
cwtl
adc
cwtl
icebp
test
dec
dec
je
mov
lret
stos
push
xor
cmp
inc
out
add
mov
fsubl
mov
jge
dec
jb
pushf
add
dec
mov
pop
cmpsb
mov
in
scas
stos
mov
sub
push
lret
test
jno
rcl
out
rcrl
mov
sbb
cld
out
jo
nop
ja
xchg
sarl
inc
dec
sub
add
call
pop
cltd
mov
add
ret
into
xchg
mov
xor
rorb
lret
xor
outsb
xor
cmp
sub
inc
negl
ja
loope
sti
cs
imul
mov
pop
jg
insl
call
test
call
scas
xchg
add
cmp
fdivrs
cmpsl
sub
mov
push
or
sbb
cmp
push
mov
out
ss
out
mov
mov
mov
stos
bound
and
adc
shll
insl
popf
ret
mov
sub
decb
or
add
sbb
jle
push
dec
fwait
mov
push
stos
mov
ret
clc
ret
push
loop
dec
stc
and
adc
dec
adc
fistps
xchg
fs
iret
adcl
arpl
xchg
adc
call
imul
lods
lea
pop
bound
xor
pop
lods
xchg
cltd
movsl
into
sbbb
xchg
ja
iret
scas
inc
test
aas
dec
cld
arpl
xchg
sbb
lods
popf
mov
hlt
ror
jns
pop
mov
jle
dec
ret
cmp
cmp
bound
jp
icebp
xor
movsb
addr16
fwait
push
lock
jns
mov
mov
xor
lahf
push
mov
subb
dec
mov
fmuls
xchg
add
jle
out
or
or
or
jle
add
add
je
call
cmp
cmp
mov
fcompl
pop
pop
fwait
les
xor
out
mov
push
jb
lahf
test
incb
xor
add
enter
cwtl
pop
mov
gs
scas
sbb
stos
add
ffree
jo
test
aam
and
test
xchg
xor
arpl
cmp
aam
cmp
add
pop
mov
loop
out
fisubrs
pop
fwait
add
je
pop
push
jae
aad
lock
fcomi
add
nop
inc
idivb
mov
xchg
push
test
enter
popf
pop
xchg
sbb
sbb
add
mov
pop
xor
xchg
imul
mov
xor
nop
cmpsl
push
mov
lods
add
mov
fiaddl
pop
lea
fdivl
or
xchg
inc
xor
stc
and
adc
mov
fcomps
mov
cwtl
das
das
mov
movsb
xor
lret
and
aaa
fstps
sbb
mov
adc
leave
jl
pusha
rorb
cs
cld
je
orb
add
push
movsl
sbb
jnp
popf
jle
inc
scas
pop
rcrl
mov
mov
sbb
clc
rcrl
testl
jno
fcmovnu
pop
jl
mov
iret
inc
and
add
leave
icebp
imul
imul
arpl
cmp
je
lods
lcall
jp
aad
testl
jne
cmpsl
mov
xchg
test
arpl
aam
lea
bsr
dec
pop
pushf
sahf
pusha
pop
xor
mov
jl
mov
xchg
loope
adc
pop
mov
mov
pusha
and
mov
fsubrs
xchg
adc
adc
dec
pop
xor
repnz
jno
in
loop
cmp
pop
mov
adc
jmp
and
mov
scas
xor
push
adc
arpl
iret
lret
mov
dec
push
inc
aaa
addb
lods
movsb
aaa
insb
bound
mov
pop
xchg
inc
ss
out
or
dec
loop
cmc
mov
insb
xor
push
pop
mov
leave
loope
movsb
lahf
or
aam
mov
add
lcall
loope
arpl
mov
loop
dec
cs
jmp
push
lret
sahf
pop
subw
ror
shll
xchg
pop
lcall
ljmp
sub
or
call
fistpl
pop
jb
pop
and
and
push
push
push
fimuls
push
out
in
push
lahf
std
adc
add
pop
xchg
jns
xor
xchg
mov
repz
ret
inc
inc
mov
bound
movsb
rolb
jecxz
mov
pushf
mov
fmuls
or
sahf
in
mov
popf
in
jnp
lret
or
cmpsb
inc
pop
cmpsb
rcll
sbb
mov
push
lcall
push
mov
aad
add
adc
jo
arpl
push
nop
js
nop
jno
dec
push
shlb
repnz
push
mov
cmp
lock
fidivrs
add
sub
dec
xchg
imul
mov
mov
mov
add
sub
cs
clc
sbb
rolb
adc
inc
lcall
dec
xchg
mov
imul
mov
inc
inc
xor
pop
rcrb
rorl
mov
fldcw
push
sbb
sub
lret
mov
mov
fwait
mov
mov
mov
fisttps
cs
stos
push
pop
cltd
rorl
cli
push
outsl
cmp
mov
cld
mov
orb
inc
std
cltd
imul
dec
sbb
xchg
hlt
popa
clc
lods
push
pop
lock
xchg
push
loopne
push
fdecstp
jbe
jp
das
push
lds
adc
mov
and
and
fdivrl
repz
jecxz
push
adc
push
jle
or
xor
push
mov
push
jmp
or
jae
and
adc
mov
out
lds
mov
test
xchg
pop
xor
dec
negl
enter
popf
adc
mov
push
test
orl
xchg
dec
loope
ss
jg
push
push
mov
cli
negl
mov
cli
mov
fistps
fldcw
sti
mov
insb
out
cmp
mov
jecxz
addr16
mov
xchg
testl
lret
cmp
scas
mov
mov
add
jmp
shlb
xchg
stos
xchg
push
mov
jl
push
sarb
cmp
fs
jg
xor
orb
sub
aam
cmp
cmp
out
addl
fidivs
movsb
call
fcmovbe
add
jmp
pop
mov
jecxz
orl
shrb
imul
rcl
pusha
push
fistpl
dec
shr
lods
pop
cli
insl
jl
sub
fnstenv
notb
cmp
and
dec
dec
rolb
out
cltd
xlat
xor
jecxz
je
ss
mov
aas
test
pop
in
adcb
sbb
sbb
push
daa
cmc
mov
cltd
fisubrl
test
cmp
and
pop
sub
imul
insb
push
clc
je
jno
scas
icebp
mov
add
jno
testl
mov
or
repnz
subl
sbb
mov
ds
arpl
dec
push
adc
jl
mov
lret
inc
xchg
sahf
scas
lds
jo
ror
nop
dec
mov
xchg
sbb
je
pop
or
and
mov
enter
pop
ret
and
push
add
sub
mov
das
jle
dec
out
jo
sub
aad
les
add
dec
subb
mov
xorl
xchg
inc
inc
enter
mov
cmp
bound
pop
icebp
and
cmp
push
mov
cmpsb
xlat
adc
hlt
out
mov
test
shlb
sbb
push
enter
in
icebp
in
fstpl
push
xlat
out
mov
sahf
repz
fisttpl
jne
mov
lds
xchg
mov
das
jge
push
aam
lea
ficoml
imul
loop
dec
stos
pop
xchg
inc
mov
loop
xor
subl
push
outsl
adc
orb
lea
mov
cmpsl
les
mov
pusha
and
loop
enter
int3
jno
xor
add
popf
nop
xchg
hlt
shll
push
cmp
inc
clc
sbb
push
mov
popf
jnp
in
mov
or
aas
cmp
shr
movsl
sbbl
xchg
jb
or
sub
rorb
popf
xchg
and
call
insb
stos
pop
shrl
jecxz
push
inc
push
sbb
sbb
orl
test
loopne
daa
insl
push
adc
cltd
or
or
adc
loopne
lds
mov
nop
add
lods
or
nop
lret
aad
movsl
push
xor
lret
mov
fidivl
sbb
push
add
lret
std
cwtl
iret
pand
adc
inc
mov
mov
loop
sti
add
xchg
gs
jnp
xor
aad
sti
push
pop
enter
add
pop
test
shlb
mov
pop
push
mov
pop
rcrb
and
mov
jg
out
aad
cmp
or
or
ret
adcb
or
cmpl
out
push
insl
adc
aam
mov
xor
xlat
imul
clc
pop
jg
mov
sahf
push
push
push
sub
sub
imul
sub
sbbl
add
je
stc
push
pop
cwtl
mov
jl
imul
add
scas
mov
dec
sbb
fimull
ja
adc
dec
ja
pop
fwait
fs
lea
lods
addb
xor
mov
pop
into
lahf
cmp
pop
mov
push
in
out
movsb
pop
push
push
data16
pusha
and
xchg
xor
pusha
clc
add
add
jns
lods
and
mov
into
adc
ret
sub
stos
xor
jbe
cmpsb
mov
repz
mov
xchg
inc
imul
pop
dec
shl
inc
dec
lret
int
mov
mov
sub
sub
repz
stos
jae
lahf
fst
xchg
jb
sub
pop
subl
and
add
adc
movb
pop
mov
cs
pop
les
scas
ret
and
mov
in
inc
ret
mov
fsubrl
jne
jno
dec
lea
scas
divb
enter
shrb
jl
fsubrp
mov
jle
neg
jg
sub
divl
test
loope
sub
cld
popf
out
mov
cld
xorb
lea
out
aad
push
adc
push
sub
aam
sub
fimuls
mov
pop
inc
mov
jecxz
mov
jae
ret
inc
rclb
fildll
daa
in
sbb
incl
rcrl
rcrl
push
push
xchg
add
mov
mov
mov
and
dec
adc
ret
adc
nop
pop
ds
mov
pop
xlat
inc
sub
dec
push
push
mov
bound
arpl
bound
cmpsb
lods
loop
xchg
pop
ds
add
sub
frstor
sub
cltd
dec
bsf
mov
outsb
je
rep
push
cwtl
add
repnz
cmc
mov
test
push
out
lahf
push
add
in
lds
or
cmp
movsl
addr16
imul
jo
cwtl
push
mov
sbb
mov
push
adc
fldenv
movsl
inc
dec
xchg
mov
mov
mov
je
jb
xor
in
loope
mov
pop
cld
mov
into
rcl
popf
fwait
and
or
sahf
pop
add
cmp
jns
daa
std
jo
and
xor
nop
push
push
scas
jnp
clc
addr16
insl
cmpsl
jae
xor
sbb
mov
mov
in
mov
ja
inc
sahf
jne
sub
pushf
push
jno
pop
in
notl
addr16
jl
jno
in
sti
cmp
pop
scas
xor
insb
mov
adc
push
pop
xor
test
ds
insb
jnp
jno
jmp
rorb
lcall
xchg
mov
jge
rcrb
fnstenv
cmp
insl
or
call
mov
aad
scas
loopne
jecxz
sub
pop
fdivr
sub
rolb
sarl
xor
ljmp
jbe
cmp
shl
xchg
test
pusha
notl
sti
orl
ja
leave
stc
adc
inc
lds
xor
xchg
mov
sbb
mov
push
xchg
sub
call
jb
push
aas
in
and
in
sub
sti
mov
jbe
mov
pop
das
cld
or
testl
mov
scas
sub
nop
dec
sti
push
and
xorb
or
push
sub
mov
out
xchg
ja
fs
scas
arpl
je
pop
or
stc
les
or
sahf
xlat
jmp
mov
mov
lods
inc
mov
push
sarb
push
xor
pop
xchg
rolb
sbb
and
rorb
add
arpl
cwtl
fcoms
fcompl
cmp
push
mov
addr16
leave
jnp
es
or
inc
add
add
jno
jo
cmpsb
sti
inc
loopne
mov
and
jne
out
jl
pop
xor
pop
test
inc
sbb
sbb
insl
mov
xor
sub
fiaddl
shlb
push
jmp
lret
cmpsl
push
call
pop
pushf
pop
icebp
popa
shll
lods
pop
and
lods
fstpt
adc
or
movsb
lret
inc
data16
dec
sar
test
roll
xor
into
repz
fildll
mov
rcr
cmp
xchg
hlt
sbb
popf
popa
inc
mov
jns
out
xchg
sbb
cmp
mov
std
push
out
xchg
sub
stc
push
rcrl
push
push
jl
sbb
adc
inc
or
dec
rcll
push
push
push
push
xor
jbe
jmp
jne
cld
pop
sub
jmp
xchg
addr16
and
cmp
lret
jp
fwait
add
add
sbb
insl
mov
mov
test
pop
pop
mov
mov
jb
mov
push
int
cmpl
mov
fcoml
adc
mov
mov
xor
fcmovnb
mov
jge
pop
lods
lods
cli
add
xchg
les
pusha
loope
or
icebp
pop
add
gs
jmp
scas
xorb
dec
xlat
cmp
push
js
lock
jmp
xchg
cmp
ljmp
imul
push
jmp
inc
dec
lock
into
outsb
neg
xchg
dec
leave
pop
je
mov
adc
sti
fldln2
dec
popa
add
emms
add
dec
and
rorb
xlat
test
xor
lds
xor
add
inc
adc
cmp
sbb
test
outsb
or
mov
into
std
and
fmuls
lock
sub
sbb
mov
dec
jg
fs
and
pop
and
daa
or
fadds
in
insl
scas
cmpsl
dec
pop
test
sahf
shl
test
xor
push
or
sbb
or
testl
insl
xchg
or
mov
fsubl
cltd
fsubr
dec
ss
pop
cmp
and
and
pop
rcrb
pop
pop
or
adc
cmp
inc
or
addb
and
fstpl
mov
mov
leave
into
add
shll
dec
mov
sahf
push
fdivrp
popf
das
iret
inc
and
out
pop
ljmp
dec
adc
or
enter
stos
xor
loope,pn
inc
inc
mov
scas
push
lds
or
add
adc
lods
sbb
and
xor
or
cmp
jo
xor
push
mov
xor
fstpt
popf
into
mov
sbb
mov
push
cmpsb
mov
and
lret
lahf
push
mov
sbb
fwait
jae
xlat
add
out
sbb
push
fisubrl
mov
or
popf
push
hlt
add
mov
rorl
ret
sub
adc
or
and
and
lock
arpl
scas
sub
pop
and
xor
stc
fdiv
pop
scas
cmp
dec
xchg
es
popf
pop
xchg
push
inc
or
cmp
dec
or
push
pushf
rorb
jmp
mov
das
lahf
repnz
rorb
lahf
popf
adc
dec
fidivrs
orb
fcoml
add
push
xor
arpl
hlt
sbbb
cli
dec
lods
mov
xchg
fs
push
js
fstpl
cmp
push
push
sarl
cmp
mov
xchg
insb
adc
stos
push
mov
dec
fcompl
repnz
mov
sbb
mov
push
rcll
shld
dec
inc
jp
cmp
loopne
pop
inc
int
sbb
cmp
insb
xchg
xchg
mov
xchg
lods
and
insl
pop
int3
fcoml
stc
and
int3
sbb
cwtl
push
dec
push
pushf
pop
jne
adc
inc
jle
inc
push
mov
push
adc
sbb
scas
push
push
xchg
testl
repz
decl
sti
xchg
jg
or
cli
lock
xchg
xchg
arpl
fcmovbe
and
add
cmp
xchg
inc
dec
and
mov
xor
cwtl
lds
test
fsts
scas
rcrl
mov
cmp
jae
stos
std
adc
sub
mov
int3
fwait
sbb
lock
dec
fwait
cmpsl
dec
mov
xor
mov
and
or
ja
xor
cmp
enter
xor
adc
sub
lret
xchg
inc
andb
xor
pop
loope
repnz
cltd
jo
lret
sub
iret
cmp
mov
aaa
add
and
sub
pop
inc
loopne
pop
mov
ljmp
dec
in
pop
test
pop
lock
dec
inc
shll
fsubr
pop
push
pusha
sub
xchg
jg
addr16
mov
pop
adc
dec
jge
adc
push
bound
pop
mov
xchg
leave
test
into
lock
pop
cli
faddl
imul
lret
mov
rorb
cltd
adc
mov
pop
pop
xchg
inc
fmul
int
shrb
lock
movsl
mov
ljmp
jg
insl
cmp
mov
mov
jl
aam
mov
divl
shlb
mov
and
cmp
pushf
jno
lods
nop
sub
inc
lods
iret
jno
fs
fiadds
xchg
jge
mov
sahf
inc
gs
idivl
cltd
sbb
das
insb
jns
jae
pop
flds
xchg
popa
std
inc
mov
sub
fisubrl
sub
mov
inc
adc
or
call
or
das
leave
or
mov
cmp
sbbl
jmp
xorl
mov
fdivs
pusha
inc
pop
mov
mov
pusha
jg
shll
pop
push
jge
push
out
jnp
out
outsb
movsb
popa
jnp
xor
int3
pop
jg
out
mov
inc
pop
das
mov
loop
out
cmp
and
loopne
jae
mov
add
mov
int3
scas
cmp
push
scas
cltd
push
cmp
mov
ja
mov
inc
fdivr
jne
mov
fbstp
add
jno
xlat
iret
mov
jae
or
mov
call
pop
stos
lods
inc
and
xor
and
arpl
dec
push
cmp
mov
sub
inc
int
mov
xor
out
out
mov
pop
pop
cmpsb
mov
daa
cmp
xor
mov
adc
push
repnz
or
in
or
mov
enter
icebp
mov
data16
movsl
inc
shl
pop
test
or
enter
pop
mov
jg
rorb
jne
loopne
mov
mov
dec
jb
dec
mov
jbe
sub
sbb
inc
lock
movsl
les
lea
popa
adc
inc
fdiv
push
pmovmskb
cmp
xor
mov
jae
movsb
cmpsl
jnp
xchg
add
sbb
lods
aas
dec
sar
xor
lock
shrb
sahf
or
push
cmp
sub
sbb
inc
cltd
mov
es
mov
into
sub
sub
jp
outsl
mov
cmc
movsl
sarb
push
mov
cltd
inc
xchg
mov
mov
mulb
lock
lds
ret
push
inc
cli
add
jns
push
sbb
pop
sub
jp
movsb
je
call
and
jmp
cmp
xor
xor
inc
add
ja
iret
mov
jns
pop
lret
pop
popf
movsl
fs
or
loop
mov
aam
cmp
and
rolb
or
call
jne
xchg
icebp
loop
mov
sub
icebp
sbb
ds
sbb
dec
cmp
jbe
bound
jae
cmpsb
and
jp
xchg
enter
sub
push
cwtl
cmp
mov
and
mov
jl
sbbb
test
dec
mov
adcb
push
enter
add
and
fwait
adc
pop
addl
pop
cmp
fdivs
outsb
lea
mov
jmp
and
stos
daa
add
mov
push
cmp
push
std
sbb
xor
orb
adc
or
mov
divb
shll
sub
sbb
and
in
jp
and
jmp
sahf
mov
aas
aaa
ja
data16
push
xchg
movsl
adc
sub
dec
jle
add
rolb
push
jp
cmp
loope
sarl
ret
jmp
es
jle
outsb
fidivrs
add
sub
xchg
adc
imul
ret
dec
push
das
pop
adc
xchg
xchg
pop
in
xor
test
movsl
xlat
andb
pop
xchg
push
rol
stos
adc
mov
mov
cmpsw
sti
rcl
xchg
rcrl
jb
push
rclb
dec
push
fisubrl
adc
test
in
lahf
inc
out
std
mov
inc
test
sahf
or
sub
cmc
loopne
adc
xlat
mov
dec
inc
or
inc
pop
out
mov
cld
lcall
aad
repz
mov
lock
inc
inc
pop
or
pop
jne
mov
cmp
jle
cmp
ja
aas
pop
pop
fbld
jo
fsub
sarl
clc
xchg
shrl
mov
push
pop
std
adc
stc
xchg
negl
cmc
pop
iret
loopne
fimuls
or
and
es
and
aas
inc
ret
rcl
cmc
repnz
xor
clc
xchg
mov
addl
sbb
xchg
push
fs
test
sub
call
push
adc
adc
xchg
insb
shrb
aad
or
fwait
cmc
pop
push
push
add
outsl
out
xchg
outsl
cwtl
jg
loop
mov
or
out
mov
xchg
sub
adc
push
jae
in
insl
mov
xlat
out
mov
and
mov
fdivr
inc
dec
icebp
sbb
aad
ds
jp
aaa
push
lret
xor
insb
push
lcall
inc
shll
dec
mov
jns
jae
pop
push
iret
mov
or
insl
pop
mov
xchg
test
fdivrl
or
jmp
int3
inc
inc
rorb
fldcw
mov
mov
call
aad
sahf
sbb
int
imul
adc
insb
lret
aam
leave
add
aas
aaa
bound
or
and
inc
mov
in
push
xor
dec
pop
mov
lods
insl
fs
call
dec
jg
ljmp
dec
pop
and
cmc
mov
repnz
shlb
insb
adc
inc
add
and
mov
fildl
pop
dec
and
jecxz
push
and
clc
pop
cli
in
in
or
in
pushl
into
loopne
int3
sti
dec
addr16
mov
into
pop
aaa
dec
es
inc
aaa
aad
sbb
mov
dec
mov
xchg
nop
std
je
loopew
dec
cmp
fcompl
pop
inc
add
les
dec
inc
inc
push
lods
pop
std
sbb
xor
cmpsl
or
stos
cli
loopne
es
rorb
mov
add
ret
ret
popf
int
pop
xchg
push
out
ja
or
shl
and
repnz
lahf
aad
xchg
into
ss
mov
movsl
test
mov
jecxz
jmp
or
clc
pusha
fs
jbe
cmc
addr16
adc
inc
inc
xchg
loope
mov
push
pop
pushf
xchg
jne
mov
sbb
int
movsl
imul
cmp
adc
mov
lret
fwait
addb
mov
pop
jge
mov
sbb
inc
stos
call
jae
gs
cmp
daa
addr16
aaa
into
pop
daa
xchg
sub
fs
pushf
inc
subl
sti
and
pop
lahf
mov
sbb
imul
ljmp
and
adc
or
push
insb
and
mov
inc
out
repnz
inc
lds
cmc
mov
push
addr16
js
aaa
mov
inc
out
jo
orb
cmc
ds
pop
stos
ja
push
inc
sbb
or
rcll
mov
pop
les
imul
cmpsb
or
loope
fdivp
cli
cmp
lock
cmpsb
cmp
and
pusha
jg
push
mov
test
in
mov
and
in
movsb
out
cmc
fincstp
or
sbb
sbbl
data16
cli
pop
push
mov
push
or
jp
lods
setae
mov
movsl
mov
xchg
sub
data16
inc
xor
nop
lret
shlb
jg
and
ljmp
inc
jp
mov
fwait
imul
mov
cld
or
adc
xchg
mov
xlat
lcall
add
xchg
xor
fisubs
add
leave
stc
stos
idivb
push
dec
cltd
popf
jmp
mov
pop
jle
mov
js
pop
aas
and
gs
pop
and
cmp
jl
add
popw
jae
mull
and
or
push
sub
xchg
into
in
hlt
mov
imul
inc
cmpxchg
sbb
jbe
fisubrs
ret
ljmp
jp
push
or
push
outsb
pop
mov
pop
ja
inc
call
jg
mov
shr
cmp
mov
test
lock
mov
sbb
dec
mov
test
cmp
pop
dec
cmp
jnp
xchg
aad
in
push
and
dec
idivl
aam
stc
insb
divb
stos
nop
inc
xor
mov
mov
jg
mov
adc
rolb
roll
ljmp
cmp
or
pop
lods
fstpl
or
insl
rcr
mov
xlat
jno
scas
loopne
scas
mov
scas
decb
lock
mov
in
mov
sub
jns
sub
test
and
push
fsubrl
adc
and
loop
xor
aaa
pusha
movsb
cmp
ret
idivb
or
mov
xchg
or
ja
sar
xchg
es
add
je
mov
sbb
dec
sbb
xlat
inc
div
or
sub
or
sbbl
insb
lock
ret
test
or
or
repnz
dec
gs
sbb
inc
fnsave
lods
lret
insl
in
sti
aad
dec
stos
ret
movsb
fdivrs
push
ljmp
dec
or
add
pop
mov
sbb
lods
fnstenv
ljmp
or
loope
jmp
and
mov
jb
aad
mov
inc
mov
arpl
fisubs
cs
sahf
sub
inc
mov
push
out
inc
xor
sahf
adc
mov
mov
neg
push
rdmsr
sub
mov
in
scas
jns
fdivr
aas
les
ljmp
adc
mov
adc
dec
clc
or
inc
mov
repnz
fstpl
add
mov
stos
mov
lods
jp
adc
sub
int
mov
dec
pop
cli
inc
mov
pusha
adc
out
in
xchg
bnd
push
stos
scas
iret
arpl
sbb
add
fcmovu
mov
adc
cmp
add
cmp
scas
icebp
je
cmpsb
sbb
mov
cli
int
jg
pop
fs
es
cmc
xor
icebp
out
xor
ret
aas
mov
scas
dec
in
nop
and
sahf
sbb
mov
mov
fisubs
fwait
into
mov
les
rorb
lea
or
pusha
out
cmp
push
jno
pop
push
add
dec
call
mov
sbb
daa
jecxz
push
cmp
out
cltd
ficoms
mov
mov
stos
into
lock
fs
mov
outsl
aaa
mov
popa
das
inc
ds
lock
sbb
xorl
sahf
push
fwait
mov
scas
jo
inc
xlat
ret
push
mov
pushl
aam
lods
hlt
mov
push
mov
inc
into
and
adc
notl
sbb
xchg
loop
lcall
mov
mov
outsb
jbe
stc
std
xor
stos
jp
sub
pop
mov
popa
lods
loopne
lds
call
inc
sti
iret
pop
and
enter
fiaddl
in
and
je
mov
inc
aaa
mov
sbb
hlt
mov
in
push
sbb
jo
sub
jge
or
popa
flds
dec
or
adc
fsubr
arpl
mov
cmp
adc
mov
loope
adc
mov
aam
gs
push
add
sub
pusha
out
mov
or
jle
sub
mov
icebp
sbb
add
xor
and
das
sbb
sbb
cs
dec
xor
push
pop
rorl
xchg
fwait
push
pop
dec
add
shl
push
shrb
push
mov
inc
stc
lea
jle
push
insl
mov
lcall
jl
xchg
imul
xor
cmpsb
lods
dec
loopne
aad
push
in
movaps
shrl
push
inc
xchg
cmp
sub
lret
jecxz
lods
or
inc
fdivl
jbe
push
jg
mov
xor
mov
in
jnp
adc
xchg
fisubl
mov
and
add
fstsw
outsl
or
and
repnz
aam
movsl
pop
inc
cwtl
jae
lahf
flds
lret
lods
pushf
mov
xlat
dec
bound
pop
or
lock
sbb
imul
sub
mov
dec
les
lret
or
enter
aas
pop
inc
je
mov
jb
nop
sub
aam
fistl
xor
repz
xor
xchg
xor
xchg
ret
mov
mov
xchg
mov
jp
ljmp
pop
ds
mov
pop
test
pop
pop
insb
xchg
add
rcrb
and
cwtl
imul
mov
loope
push
inc
xchg
push
push
bound
addr16
lea
imul
cld
ret
mov
push
mov
add
out
sti
inc
std
test
push
cmpsb
dec
ds
sahf
out
mov
insb
add
insl
and
and
sar
cs
and
xchg
pop
sbb
out
call
adc
cmpsb
xlat
xor
adc
dec
lret
push
stos
dec
mov
pusha
int3
dec
sub
gs
push
push
jle
cs
pop
aas
in
xchg
push
inc
popa
es
dec
into
sub
sbb
and
sub
xchg
rolb
out
mov
repz
sbb
jne
pop
jp
subl
cmp
mov
aad
popf
jecxz
pop
jns
inc
mov
lahf
mov
std
mov
in
and
fisttpll
push
push
add
scas
divl
add
mov
nop
js
and
pop
xchg
mov
pop
in
and
dec
mov
inc
roll
cmp
xorl
xor
lods
and
std
inc
or
mov
shrl
jmp
jbe
in
fcomps
std
push
xchg
lods
push
pop
pop
hlt
pop
mov
fldenv
out
lods
and
sbb
outsl
inc
mov
inc
je
cmp
loopne
popl
mov
fs
lret
data16
sbb
inc
flds
sub
mov
lds
repz
pop
inc
dec
ret
fmul
test
xchg
fcmovnb
out
sbb
clc
fcoms
arpl
xchg
bound
lahf
rcr
ja
mov
pop
fmuls
addb
call
and
dec
ss
dec
mov
fildll
pop
mov
pop
and
shrl
add
or
mov
outsb
mov
int3
ss
lret
insl
test
movsb
stc
xchg
repz
decl
lcall
arpl
pusha
mov
cmpb
inc
ret
popl
jo
xchg
imul
test
push
xchg
aas
arpl
xchg
pop
scas
mov
fnstcw
loopne
and
aad
push
in
jae
add
shll
fnstenv
xchg
fwait
or
int
mov
addr16
into
xor
in
int
dec
pop
aas
jle
cld
push
dec
inc
mov
psrlw
lcall
sub
and
data16
jge
scas
pop
xor
cmp
or
je
movsl
ret
jae
jle
aaa
mov
inc
mov
lods
xor
icebp
fdivrs
cmp
cmp
jo
pop
lods
hlt
xchg
add
xor
sbb
rcrl
lods
and
jnp
inc
mov
jo
lret
scas
repnz
xor
jmp
sub
push
xchg
pop
rcrb
xor
aaa
push
and
sub
pop
call
adcl
push
cmp
xchg
inc
test
mov
test
pop
adc
inc
outsb
jle
xor
mov
add
cld
lahf
adc
ds
movsl
sbb
nop
sbb
cli
add
rorb
subl
loop
and
sub
frstor
in
es
sbb
into
mov
mov
rorb
push
inc
xchg
popa
mov
lock
insl
mov
cwtl
incl
xor
push
jl
popf
in
sbb
rcrb
sbb
sub
xor
pop
cwtl
push
ret
inc
shrl
cltd
jmp
sub
push
ja
add
sub
mov
jmp
and
stos
push
inc
mov
in
mov
das
xor
and
push
or
cmp
cld
xchg
cmc
gs
mov
adc
in
lret
adc
sub
adc
pusha
mov
add
sbb
call
dec
mov
pop
into
push
inc
std
jbe
enter
push
mov
insl
jno
mov
xor
pop
mov
data16
xchg
and
sbb
pop
iret
pushf
sarb
mov
stc
je
jno
fwait
push
hlt
cld
pop
mov
cld
je
std
mov
roll
leave
pusha
ds
and
les
push
shll
ljmp
xlat
add
sub
shl
dec
add
js
jle
jg
lds
fstp
xor
mov
pusha
push
push
add
cmpsl
push
push
jnp
cmp
xacquire
jno
pop
push
sub
sbb
xor
data16
mov
cmp
push
dec
jl
xchg
or
add
fistpl
cmp
add
sub
sbb
pop
mov
mov
pop
cmp
in
fldenv
stc
clc
push
jo
aaa
mov
adc
cmp
int
cwtl
jle
cmc
out
lds
repz
push
xlat
xchg
addr16
pop
je
lock
sub
add
negl
push
inc
push
ret
jge
jl
mov
cs
mov
add
jle
daa
sbb
mov
ja
dec
mov
jo
nop
in
mov
jns
push
mov
outsb
sbb
fnstenv
lds
mov
rorb
xor
sbb
in
adc
pop
mov
sub
dec
insb
pop
aas
add
les
jns
dec
lcall
lock
nop
in
outsl
mov
pop
incl
xlat
xor
xchg
test
daa
push
adc
push
je
rclb
jl
xchg
add
jmp
dec
sbb
jnp
add
lret
cmpsl
pop
jb
fldenv
outsl
mov
or
popa
out
mov
cmp
lods
arpl
xchg
mov
notb
jae
or
and
jns
pop
aad
test
and
pop
xabort
aaa
add
fwait
mov
les
mov
jle
mov
push
add
nop
shrb
out
icebp
jno
lea
xlat
cmp
pushf
in
inc
cmp
sub
or
xor
lock
and
jle
push
jns
sub
jge
jp
repz
rolb
int
test
mov
shll
ss
dec
add
jno
adc
cmp
stc
jecxz
push
push
inc
pushf
pop
mov
repnz
mulb
aaa
xlat
std
pop
jmp
pop
xor
sub
into
sub
sti
mov
xchg
fs
call
movsl
mov
fistl
lds
xor
loop
cltd
cmpsb
in
nop
cwtl
shl
int3
cmpb
push
mov
icebp
jecxz
shll
and
pop
or
pusha
test
pop
mov
insb
or
ret
xchg
es
xor
cmpsb
jo
cli
cli
add
pusha
cmp
add
loop
pop
dec
jge
jl
adc
cmp
js
xchg
outsl
mov
sub
inc
and
enter
push
imul
pushf
pop
add
sti
add
dec
test
aaa
shrl
rorb
arpl
inc
jmp
popa
fisubl
shlb
icebp
shlb
lret
jno
loope
pop
mov
out
test
div
pop
jb
mov
cmp
pop
push
add
stc
and
sub
aas
subl
push
call
mov
test
in
pop
test
in
mov
lock
out
adc
add
popf
or
sub
lret
jle
ret
mov
sbb
and
cmp
jb
mov
ss
mov
ljmp
pop
mov
shlb
scas
jnp
or
adc
cwtl
cmpsb
pop
add
mov
push
xor
je
and
mov
mov
jle
push
sub
add
loopne
mov
sbb
fsubs
xchg
rcrb
mov
mov
sti
movb
cli
sbb
pop
sub
or
aas
pop
jne
xchg
sti
pop
out
push
mov
cli
mov
and
sahf
dec
jp
mov
scas
xchg
ja
outsb
les
mov
jge
cmp
cltd
cmpsb
dec
pop
arpl
scas
es
pop
xor
nop
pop
jbe
inc
imull
add
into
fs
push
or
sub
sub
stc
xchg
or
cmpsb
lcall
jle
fisubrs
jecxz
popf
push
ja
mov
andb
les
sub
pushf
inc
mov
andl
dec
shl
push
jge
add
xchg
and
imull
pushl
jnp
mov
mov
and
adc
rcrb
xchg
cmp
push
out
push
pop
add
cmc
sbb
fiaddl
rcll
jp
fst
mov
orb
fiadds
popa
inc
dec
pop
mov
xor
rorl
adc
mov
mov
adc
sub
mov
cmc
rclb
lods
popf
dec
add
mov
mov
pop
sub
js
mov
pop
je
jno
lcall
cmp
divl
rcll
leave
les
sbb
dec
loope
lds
fimull
test
dec
cmp
dec
and
add
push
lea
pop
dec
xchg
jl
inc
lock
mov
ret
insb
and
clc
push
pop
mov
cmpsl
push
test
sub
cmpsl
add
mov
push
sub
dec
dec
movsb
jp
adc
push
dec
movsb
add
mov
dec
xchg
adc
subw
popf
andl
popa
inc
movsb
cwtl
aad
in
cmp
ret
adc
in
cwtl
daa
mov
xchg
sahf
mov
push
cmp
sbb
sti
add
push
pop
cmp
jns
icebp
adc
jbe
mov
vpsrlq
cmp
nop
je
lea
pop
or
cmp
and
cld
out
xor
shlb
popa
cmp
xchg
cs
shll
add
outsb
sbb
pop
xchg
and
js
and
jecxz
sbb
shrd
cmp
add
lds
push
sbb
out
xor
loope
sub
dec
xor
push
repnz
popa
xchg
in
fiaddl
cmp
out
les
adc
jae
test
fisubrl
in
rcrb
fstpt
mov
ret
fdivp
cmp
lea
inc
faddl
fdivl
stos
sub
pop
enter
ret
jno
dec
popf
mov
mov
pop
mov
scas
mov
fcmovu
xchg
sub
arpl
sub
adc
loopne
xor
dec
ljmp
sub
xor
push
cmc
xlat
popf
inc
or
les
add
popa
ret
cmpsb
test
mov
cmp
or
js
iret
les
fldt
ljmp
push
mov
lcall
bound
mov
ss
mov
add
stos
out
sbb
f2xm1
jns
dec
dec
pop
mov
push
movd
dec
sub
aaa
mov
lods
adc
sbb
repnz
xor
jmp
and
sar
and
pop
enter
jns
inc
lods
rolb
gs
fisubl
das
mov
shr
arpl
xor
or
fadd
ss
imul
xor
xor
mov
leave
push
push
and
je
or
xchg
cmpsb
and
nop
xchg
lret
pop
cmpl
fidivl
nop
sbbl
int
mov
aam
adc
aam
test
and
sbb
or
xchg
add
xor
push
nop
movsb
in
aas
ficoml
movsl
or
jno
cmp
or
mov
or
mul
lcall
jns
mov
cmpl
inc
mov
aad
movl
ror
in
mov
push
aaa
out
push
int3
outsl
mov
xchg
inc
addr16
mov
lret
ss
jns
push
lahf
mov
mov
pop
mov
jbe
push
js
xor
into
mov
inc
xor
in
les
push
les
cmovg
lods
clc
test
mov
fsubrl
xchg
gs
xchg
xchg
aad
and
sub
inc
xor
cmpsl
stos
faddp
insl
into
sbb
mov
pop
popa
cmp
mov
out
xor
cmpsb
mov
aas
mov
rcll
sar
popl
leave
stos
lret
jl
sub
sbb
lahf
rclb
adc
into
inc
mov
loop
xor
shrb
sahf
mov
int
ret
push
push
cmp
sub
ss
xchg
jecxz
pop
iret
test
jg
aaa
add
test
mov
shlb
dec
mov
nop
mov
enter
ljmp
cmpsl
pop
sbb
and
je
int
in
loop
inc
dec
and
add
cmp
adc
push
cmp
mov
mov
xor
and
jo
xchg
ret
cwtl
out
cltd
push
mov
jno
negl
mov
adc
push
shll
imul
push
mov
rcr
xorl
jb
roll
lcall
lock
jnp
sbb
lret
sub
jb
mov
cs
sub
mov
lret
xor
inc
stc
mov
xor
inc
jmp
cmpsl
mov
cmpsb
das
stc
lds
add
cmp
jmp
or
cld
push
xor
adc
pcmpgtd
mov
scas
inc
test
loop
inc
scas
pop
inc
or
sbbl
jg
lcall
fidivrs
in
inc
std
and
mov
add
int
mov
mov
rcrb
dec
cmc
push
xchg
loop
pop
shrl
inc
cmp
ljmp
ret
das
cmp
ret
stos
push
jge
aam
test
pop
xchg
or
fstps
out
jl
adc
lcall
cmp
xchg
dec
push
repnz
add
mov
testl
loope
sub
add
cld
push
fwait
cwtl
imul
popf
mov
scas
push
lcall
fstpl
out
inc
decb
sub
lret
stos
and
dec
lods
add
insb
lret
cmp
dec
das
dec
fdivs
adc
pop
mov
add
mov
dec
dec
mov
imul
out
rorl
jns
jbe
in
and
in
mov
pushf
scas
cmp
inc
inc
sbb
aaa
mov
pop
jg
lret
pusha
in
mov
and
and
ror
sbb
push
in
lret
imul
cmp
fucomip
cmpsl
int
dec
loopne
push
xchg
pop
jno
aas
cld
popf
adc
popf
nop
pop
sbb
mov
addr16
mov
rorl
inc
leave
dec
pusha
push
dec
dec
pop
pop
cwtl
lcall
rcl
xor
sarb
dec
inc
fwait
add
pop
push
data16
flds
and
ror
mov
mov
repz
jmp
cli
xor
jg
xlat
mov
xchg
xchg
jnp
jns
xchg
add
add
push
stos
mov
ja
sub
or
cmp
rcrb
hlt
mov
mov
mov
aas
cs
fs
mov
movsl
mov
stos
adc
loopne
jecxz
lods
call
inc
mov
cmp
push
cld
push
lock
pop
add
fnstenv
pop
rcrb
repz
xchg
sbb
add
and
mov
or
js
add
and
xchg
call
inc
push
jo
inc
add
mov
push
shll
sbb
movsl
sbb
mov
imul
icebp
jns
inc
fs
adc
mov
in
push
sbbb
cli
cli
inc
ret
divb
xchg
test
adc
inc
mov
sbbl
mov
call
inc
push
adc
jg
and
fistpll
pushf
ss
or
cwtl
int3
pop
fisubl
es
clc
xchg
sbb
hlt
scas
iret
pop
lahf
arpl
lret
ret
jbe
or
ret
and
xor
shlb
nop
mov
and
adc
in
addr16
test
mov
bsr
les
scas
pop
rorb
pop
in
dec
insb
lods
in
icebp
call
test
out
in
mov
cmp
aad
xor
push
and
rcl
std
add
sarl
pop
addb
imul
xchg
sub
cwtl
ljmp
sub
es
dec
lods
cmpsl
inc
nop
test
fwait
adcl
out
fwait
in
test
cli
lahf
outsb
popa
cmpsl
fnsave
lock
add
lock
xor
jge
je
push
dec
xor
adc
jg
sub
cmpl
mov
cmpsl
ret
inc
sub
inc
cmpl
mov
xchg
fwait
inc
fadd
mov
ja
mov
out
jmp
add
aaa
or
push
jb
mov
scas
in
or
push
dec
jl
sarl
test
jbe
stos
dec
shlb
bound
dec
lock
popf
adc
adc
out
push
mov
aad
dec
cmp
cmp
icebp
adc
in
dec
pushf
lea
test
ss
repz
shlb
pop
jae
loopne
fisubrl
sub
jb
jmp
inc
cmp
shrl
mov
xchg
in
mov
dec
mov
mov
dec
stc
add
xchg
call
dec
xor
cmpsb
or
lea
mov
and
stos
mov
xorl
lds
in
mov
out
add
iret
jmp
in
out
gs
mov
sub
sbb
mov
pop
out
cmp
shll
or
cmp
cmp
popf
stos
sbb
fs
cmp
shl
dec
jne
loopne
xchg
lea
sub
mov
in
ja
daa
pop
mov
mov
xchg
fwait
adc
loop
mov
cs
cmpl
stc
jne
cli
insb
cmp
fbstp
popa
insl
sbb
scas
paddsw
xchg
imul
sub
addb
bound
lds
jb
dec
ret
outsb
push
jae
add
mov
xchg
cmp
xor
mov
mov
pusha
aas
mov
data16
orb
pop
push
ljmp
pushf
es
ds
icebp
inc
inc
lock
repz
cli
push
cmp
fisubrl
das
and
or
jg
pusha
insb
stc
cmp
sub
push
loopne
mov
inc
js
dec
fistpll
jbe,pn
inc
out
mov
xchg
lcall
push
sbb
add
mov
pusha
fdivl
xchg
dec
test
sbb
push
addl
sbb
sbb
aad
push
cmc
sbb
lcall
mov
sbb
divl
xor
sub
mov
aam
in
and
dec
sub
scas
aaa
mov
push
movsl
mov
mov
mov
pusha
pop
out
or
cmp
stos
pop
outsl
test
or
mov
mov
sbb
aaa
pusha
insb
repz
nop
push
pusha
dec
or
shrl
out
xchg
imul
fstps
xchg
mov
es
in
lea
xchg
sub
jno
inc
adc
dec
xor
stos
test
and
inc
insb
es
jmp
aad
xor
decl
stc
nop
inc
lahf
push
shlb
aas
scas
mov
dec
push
jbe
mov
jl
int3
add
inc
in
nopl
add
mov
pop
cmp
cs
pop
xor
sub
push
xor
scas
or
je
xchg
push
inc
imul
add
outsb
add
ror
in
loopne
push
dec
fmulp
mov
and
sbb
cmc
rcl
popf
xor
push
sbb
pop
jno
fdivl
and
adc
cs
fstpt
xchg
xor
lock
scas
rolb
adc
fists
cmc
loope
loop
pushf
xor
cltd
test
decb
loope
pop
fisubs
fstps
inc
or
or
push
sahf
jecxz
std
inc
jo
negb
mov
movsl
fdiv
je
xor
jg
sub
dec
repz
sahf
fimull
inc
jmp
xchg
pop
shll
jae
jnp
dec
mov
je
mov
outsb
test
ljmp
aad
test
andb
sbb
and
cwtl
mov
adc
dec
dec
xor
mov
sub
hlt
test
push
fs
imul
les
in
ljmp
mov
mov
repz
add
or
or
add
lcall
mov
xchg
outsl
pop
fists
scas
add
fsubrs
pop
pop
lret
sub
into
xor
roll
inc
dec
cs
cwtl
sbb
mov
mov
mov
or
push
andl
pop
push
lret
cwtl
and
andb
dec
mov
js
xor
xorl
push
ds
in
xor
push
push
xchg
xlat
icebp
in
stos
cwtl
inc
bound
stos
jmp
ret
add
andb
cmp
fwait
pusha
mov
pop
int
cmp
xchg
jmp
add
dec
xchg
push
not
add
mov
call
faddl
cmp
ljmp
sub
add
enter
cmp
sarl
sahf
dec
cmp
test
mov
lahf
mov
insb
es
dec
mov
into
xchg
mov
adcl
hlt
xchg
mov
add
add
dec
jno
pusha
mov
xor
rolb
jmp
xchg
mov
popa
push
cli
pop
mov
xor
enter
push
leave
out
and
xchg
xor
push
and
mov
lds
icebp
mov
push
outsl
mov
add
lahf
jl
mov
dec
xor
pop
std
sti
in
shlb
fimuls
je
mov
daa
lcall
push
dec
lea
sbb
add
or
inc
and
subb
int
mov
adc
pop
scas
push
test
shll
mov
js
dec
dec
or
arpl
frstor
and
jle
mov
mov
jp
jecxz
jp
aam
push
push
mov
mov
movsl
jp
or
push
mov
js
sbb
hlt
add
hlt
push
fcmove
leave
out
dec
jne
lock
jmp
sbb
dec
rcll
push
xlat
sti
fidivrl
sbb
pusha
cmp
stc
add
mov
nop
xor
xor
pop
pop
jo
inc
into
push
jge
imul
aaa
adc
clc
mov
loop
shll
movsl
pop
je
int3
cmc
xor
sbb
adc
or
addr16
es
divl
sbb
outsb
jge
andb
mov
push
adc
adc
xor
add
push
insl
dec
xchg
pop
js
sub
dec
dec
in
imul
je
mov
add
or
aam
xchg
lret
out
sub
mov
add
jmp
jp
fldl
testb
sbb
loope
andb
cmpb
xchg
xchg
pop
pop
mov
push
aas
jmp
ds
and
push
int3
xchg
mov
jb
adc
mov
loope
push
push
push
stos
loope
jg
int
sbb
inc
addr16
lahf
lcall
push
aaa
push
jle
mov
pop
lret
sbb
push
or
xchg
or
ljmp
and
sti
repz
inc
cmp
arpl
sbb
ror
push
fcompl
cmpsl
mov
jge
dec
lahf
and
mov
hlt
cmp
out
into
mov
sbb
sub
rorb
in
jo
mov
fcoms
mov
add
add
add
repz
mov
inc
pop
cmp
dec
mov
call
mov
adc
pop
push
lods
faddp
or
in
push
lods
aad
push
pop
arpl
inc
mov
xor
adc
jns
add
pop
xlat
mov
jg
xor
mov
icebp
add
lock
cld
sarl
push
cmp
arpl
add
jecxz
or
testl
pop
cltd
insb
pop
mov
add
sub
pusha
mov
insb
mov
ds
or
mov
testb
xchg
sub
xchg
dec
cmp
rcrb
sahf
pop
sbbl
sub
fs
fsubl
pop
jle
or
add
dec
adc
ljmp
and
mov
scas
mov
test
adc
aad
xchg
in
mov
ss
xchg
cmp
inc
pop
mov
out
js
and
fbstp
cmp
mov
outsb
mov
fsubs
jne
bound
sbb
lcall
jae
shrl
ja
sahf
adc
xchg
aas
xchg
mov
cld
mov
cmp
pushf
xchg
into
or
mov
nop
mov
dec
push
pop
jno
xor
sub
sbb
and
loop
nop
pushf
mov
mov
sbb
xchg
xchg
adc
icebp
cmp
outsb
lods
or
adc
sbb
bnd
lea
into
inc
das
xchg
clc
mov
out
test
cmp
push
in
adc
add
iret
insl
mov
and
add
fcomps
lret
or
cmp
fcomi
insl
in
xchg
or
ds
jb
cmp
cmpsl
pop
rolb
and
imulb
and
repnz
lods
rol
push
mov
mov
shrb
loop
ss
imul
std
sub
das
mov
jle
mov
jae
int
jecxz
in
fwait
roll
sbb
movsb
das
jo
push
cld
mov
lcall
jle
pop
or
xchg
xor
call
push
inc
jmp
inc
addl
pop
pause
add
add
xor
lock
stc
push
push
xor
add
push
ficomps
icebp
popl
cld
xor
repz
or
das
jmp
hlt
cmp
ja
sbb
xchg
nop
mov
mov
loop
fistpl
scas
cmc
aaa
outsb
mov
sti
adc
cli
dec
mov
jns
mov
ljmp
fstps
sbb
xor
xchg
or
lahf
add
sar
call
xor
loope
adc
pop
add
addr16
shll
aam
aas
add
xlat
push
jge
or
or
jnp
clc
xlat
cmp
aad
inc
popf
test
lods
iret
xchg
mov
add
xchg
pop
xchg
jl
xor
dec
adc
into
adc
std
arpl
filds
rorb
jae
pop
shlb
or
int
negl
push
test
in
fcom
mov
stc
enter
sub
loope
in
loop
das
add
adc
sub
cmpl
lods
cmp
sahf
test
mov
sub
fdivs
push
aas
xchg
ja
xor
sub
outsb
test
popf
dec
adc
add
mov
rolb
mov
dec
pop
xor
fidivrs
lods
adc
mov
icebp
mov
jo
incl
pop
int
mov
fsubs
lock
jno
jb
popa
in
out
test
xor
lahf
sub
inc
mov
pop
push
in
xchg
jns
test
ss
mov
rcrl
push
push
and
push
cmp
pop
xor
adc
cmpl
shl
adc
pop
and
fistpl
dec
mov
lods
int
sub
lea
js
push
cmp
pop
lds
mov
loop
ficoms
mov
das
mov
das
add
jmp
xchg
xchg
mov
mov
lods
pushfw
es
test
into
test
push
ljmp
arpl
sub
mov
fwait
mov
mov
cli
adc
sbb
into
xchg
je
std
lock
sub
adcl
jge
decl
cmp
jge
push
addl
rcl
xchg
insl
in
jge
popa
mov
sub
pop
out
lret
outsb
and
cmpl
jbe
das
out
outsl
cmp
adc
xchg
out
push
mov
sbb
and
push
fs
aaa
jo
mov
inc
mov
fwait
pop
inc
clc
in
pop
mov
push
or
cmc
pop
sbb
adc
out
mov
je
jmp
loop
or
ret
in
or
mov
inc
adc
lea
xchg
jle
adc
cmp
mov
shr
xchg
push
popa
loop
cmp
mov
sub
pop
jo
fcom
popa
lods
dec
repz
out
cmpsl
or
sbb
aaa
xchg
out
aaa
xlat
aas
mov
jbe
mov
pushf
jae
mov
shrb
loopne
cmp
pop
sub
lret
imul
fmuls
in
out
cmc
sub
mov
jbe
pop
cs
lret
sbb
cmpsb
addl
mov
stos
shll
dec
lds
xchg
sub
or
xchg
mov
movsl
rorl
xchg
mov
jae
call
movsb
popa
jg
je
sub
icebp
adc
test
and
push
pop
test
sbbl
mov
xor
cmp
ret
ja
loopne
adc
xchg
sbb
lods
sbb
adc
xchg
int
ret
cmc
jg
scas
xor
push
repz
mov
ja
aad
nop
mov
test
lret
push
dec
mov
clc
repz
int3
test
pop
ljmp
push
jo
addl
mov
cmc
je
xchg
jge
fidivrs
push
jp
nop
lods
imul
stos
shlb
out
or
imul
data16
jbe
lahf
test
jo
pop
jle
je
rolb
dec
imul
or
std
inc
gs
sahf
jns
aaa
add
and
xchg
fcomps
pop
incl
fisubrl
call
popf
mov
mull
int3
lods
mov
sahf
jb
adcl
push
int3
mov
cmp
test
mov
pop
ret
mov
std
jle
cmc
inc
fs
movsl
push
je
adc
sbb
call
cmpsl
lods
jl
cld
sub
jnp
dec
jecxz
scas
mov
jnp
xchg
push
mov
pop
pop
add
addb
pop
test
sbb
add
inc
iret
aaa
stos
mov
push
dec
inc
xchg
adc
jns
jecxz
pop
mov
pop
push
outsl
push
cld
movsb
roll
scas
je
jecxz
mov
aam
cmp
cs
cmp
adc
jbe
fcom
addr16
xor
xchg
sarb
insb
repnz
pop
jb
addr16
and
fs
lds
addr16
cltd
jae
ds
cmpsb
push
push
add
inc
repnz
lea
or
test
xchg
mov
sbb
jmp
adc
sbb
rcr
das
push
sub
fcmovu
es
adc
ret
xor
int
jbe
gs
push
ja
enter
lock
push
lock
imul
pop
jno
das
mov
std
insl
push
les
mov
mov
shrl
sbb
mov
adc
in
test
jmp
rcr
dec
push
cmp
add
data16
sbb
sbb
add
xchg
insb
and
lds
stos
push
jo
loope
shl
shrb
jo
lea
data16
pop
lods
aam
lret
lcall
loop
test
pop
in
jecxz
sbb
lds
fistps
push
stos
repnz
and
push
sti
out
mov
leave
jo
jl
inc
stos
or
push
inc
sbb
out
mov
call
or
add
mov
mov
fbstp
outsl
adc
add
scas
pushf
out
push
jg
and
aaa
sub
mov
jle
cli
adc
sub
or
cwtl
xor
lock
arpl
xor
mov
in
or
xchg
mov
cmp
repz
in
or
sub
fnsave
sarl
mov
xrelease
mov
imul
xor
jae
jns
dec
loope
outsb
fisttpll
ja
cld
popa
adc
xlat
cwtl
push
sbb
cmc
repnz
pop
lds
imul
xor
adc
xor
jne
rorb
testb
and
mov
dec
add
sub
add
adcb
sbb
mov
push
lcall
ds
repz
cmp
jb
xchg
jge
fwait
aas
pop
pop
jne
movl
xchg
lahf
xchg
aam
cmp
fstps
testb
add
pop
push
cwtl
clc
fsubp
leave
lret
scas
xor
add
iret
aam
loop
aaa
inc
dec
jbe
mov
adc
addr16
fistps
inc
test
push
fwait
dec
pusha
jge
sbb
out
popa
leave
sbb
jg
inc
enter
xchg
adc
bound
call
adc
lods
xabort
and
sti
out
mov
pushf
into
or
dec
lods
push
fimuls
aas
jge
jo
in
fisttps
inc
mov
dec
sub
cmp
shrb
addr16
sbb
xor
bound
out
add
push
xchg
lret
jo
daa
sti
loope
push
xchg
cwtl
call
inc
jne
sbb
xor
ret
adc
cwtl
les
mov
popa
outsl
mov
pop
rcrb
jne
test
dec
sahf
incl
loop
pop
je
adc
es
insl
bound
rorl
es
or
mov
mov
push
popf
mov
nop
je
jecxz
dec
ror
push
aam
jno
inc
out
imull
js
popl
mov
aam
cmc
jle
cmp
dec
dec
fs
fistpl
gs
lods
cmp
fdivrl
pop
xor
push
cli
lret
and
rorb
lock
inc
js
in
enter
push
les
ret
inc
ljmp
pop
inc
add
ret
nop
ds
in
dec
adc
inc
inc
mov
sahf
into
jmp
inc
pushf
out
mov
cmp
dec
insb
gs
jg
aad
add
shr
stos
lock
lea
xor
cmp
ds
movsl
dec
jno
pop
shl
je
fstps
sbb
or
inc
pop
mov
mov
je
mov
pusha
out
test
jo
popf
out
cmc
and
cmp
mov
bound
lods
dec
or
xchg
push
repnz
lret
ljmp
stos
push
popf
lahf
adc
mov
in
or
lret
popf
in
dec
pop
les
jnp
mov
mov
out
ret
scas
subb
push
lea
lea
push
xchg
xchg
and
cld
xchg
dec
in
and
pop
mov
sub
push
fcompl
push
sbb
sahf
adc
sbb
and
movsb
push
dec
fs
adc
cmp
fwait
ja
call
adc
pop
xchg
dec
or
add
mov
mov
push
scas
inc
xor
xchg
data16
cmp
pop
dec
imul
lea
mov
inc
push
stc
popl
ret
cmp
lock
sbb
dec
cmp
out
cli
into
and
subl
ret
aaa
scas
pop
jge
jg
shrl
add
sbb
xchg
enter
xlat
ret
jge
xchg
sahf
xor
and
clc
cltd
in
orb
jg
orl
dec
pop
orb
add
inc
mov
fimull
jnp
mov
or
xchg
cmp
inc
vpmovsxbw
cmp
adc
inc
xchg
cmpsb
into
cltd
pop
push
jo
movsl
dec
or
mov
dec
fcomp
mov
push
cmp
ljmp
cmp
ret
xchg
push
mov
or
sub
subl
jmp
in
pop
mov
mov
xor
jl
les
outsb
js
adc
mov
xchg
xchg
incl
lds
jg
inc
dec
ret
ficompl
clc
dec
cld
sbb
pop
mov
cltd
adc
bnd
sub
adc
icebp
ljmp
pop
sbb
sahf
inc
pop
and
cs
cmp
xor
sbb
mov
shrb
push
xor
dec
push
jl
adc
mov
or
ds
es
jmp
mov
int3
dec
dec
aam
dec
shrb
loope
jne
loopne
sbb
movsb
adc
jno
scas
subl
test
pushf
lea
clc
pop
ljmp
fs
dec
ret
pop
lock
mov
pop
les
add
inc
mov
stos
mov
cmp
sub
sbb
notb
push
push
fimuls
inc
mov
sub
cmp
fsubrp
jmp
inc
loopne
shll
cmpl
add
or
das
mov
xchg
xchg
fdiv
adc
push
into
fs
push
mov
mov
ficomps
jb
jecxz
ret
fidivs
xor
pop
mov
mov
in
cmc
lret
xchg
in
or
cli
sarl
xor
daa
pusha
and
jno
mov
cmp
cli
lret
insl
movsl
inc
jno
sbbb
inc
call
jnp
repz
and
jl
call
jns
xchg
sbb
pop
std
rorb
jmp
xchg
inc
test
pop
je
loop
icebp
and
jp
popf
outsl
mov
sbb
cmpsl
or
test
subl
mov
daa
mov
xorl
std
and
mov
xor
pop
sbb
sub
and
or
cmp
add
inc
int
in
mov
aad
imul
pop
lret
inc
dec
dec
imul
sti
clc
sahf
cmp
cli
sahf
dec
hlt
push
mov
faddl
shll
cmp
mov
jne
sub
aas
popa
sbb
pop
mov
rolb
add
inc
jno
jge
add
pop
gs
out
repz
xchg
mov
pop
inc
sub
or
aam
loop
shlb
xor
shrl
icebp
in
sub
xor
out
mov
mov
push
jp
imul
fsubr
aaa
ret
mov
jns
add
mov
push
pop
pop
out
daa
scas
xor
stc
cmpsl
dec
imul
dec
jmp
cmp
push
dec
gs
ret
pop
cwtl
xlat
or
sub
dec
xor
and
fbstp
mov
pop
xor
in
lock
in
ljmp
or
sbb
xor
mov
into
sub
inc
outsb
lods
adcl
pop
sahf
cmp
push
add
int
std
push
xor
shrl
inc
jg
lock
lcall
dec
or
mov
and
std
and
push
and
sbb
insl
cmp
popa
cs
inc
es
mov
int3
test
fs
gs
imul
ja
push
popa
or
xchg
or
adc
enter
cmp
pushf
lret
xor
xor
cwtl
shl
jge
and
xchg
cmp
add
mov
or
adc
adc
and
ss
aas
sub
out
sbb
sub
dec
sub
outsb
xchg
ljmp
fcompl
insb
scas
pop
and
cmp
rolb
and
mov
sub
xchg
loopne
xchg
jg
insl
shrl
out
lds
pop
mov
push
fs
in
jb
xchg
addr16
jle
pop
imul
mov
cmc
push
push
push
xchg
push
es
mov
or
pushf
xor
xlat
inc
cmp
jo
lahf
push
jl
mov
in
cmp
dec
mov
cli
dec
pop
or
push
imul
adc
lods
cs
mov
divl
dec
ljmp
sbb
pop
push
jg
mov
mov
or
xor
push
pusha
not
push
pop
and
cs
sbb
jnp
push
push
js
mov
dec
xchg
inc
cld
sbb
and
in
popa
mov
adc
pop
lods
outsl
out
orl
push
mov
test
pusha
push
subl
pusha
cmp
sub
negl
sahf
dec
mov
in
mov
xchg
out
pop
sbb
xor
sub
sub
addb
pop
mov
fs
dec
and
xchg
outsb
frstor
mov
push
pop
jnp
and
or
jmp
rcrb
push
push
mov
pop
lret
bound
stos
popf
in
imul
imul
cmp
out
jecxz
test
dec
push
fidivl
mov
jnp
adc
mov
inc
xor
adc
cmp
push
adc
mov
repz
mov
dec
sbb
addl
mov
shlb
xchg
rcrb
shll
jno
jno
and
xchg
xchg
cmp
cmp
push
cmp
pop
popf
lcall
int
mov
or
and
or
mov
out
jne
into
add
mov
mov
rorl
xchg
bound
setnp
mov
push
adc
int3
gs
out
repnz
aaa
out
mov
xchg
shll
add
mov
out
aad
push
pop
lea
std
xchg
pop
adcl
jo
and
scas
ljmp
cmp
mov
sub
or
add
arpl
inc
pop
mov
inc
push
dec
adc
aas
cmp
cmc
sbb
push
pop
sub
add
arpl
scas
aam
dec
xchg
ret
pop
in
jle
loope
sbb
xchg
ret
mov
sahf
mov
cltd
cmpsb
ficompl
push
mov
xor
add
cli
ss
cmpsb
mov
cmp
pop
jb
in
arpl
push
stos
je
out
outsl
adc
lret
xchg
push
mov
sub
sub
idiv
and
mov
xor
subl
xchg
xchg
iret
sub
sub
push
xor
stos
adc
add
sub
out
lock
sbb
fidivs
mov
push
adc
lea
clc
pop
call
js
cmpsb
sub
push
push
push
ja
mov
ja
adc
aad
loope
iret
ss
sbb
ficomps
mov
lahf
jo
and
inc
dec
push
out
xchg
arpl
dec
jl
and
lcall
dec
sub
bound
mov
mov
jae
adc
outsl
int
arpl
inc
mov
popf
iret
mov
jg
in
jg
xlat
or
pusha
xor
imul
fmul
shrb
jmp
and
das
lret
lret
loop
ficompl
cld
dec
jo
lods
push
pop
lods
cmp
xor
mov
jp
mov
jne
aaa
mov
add
mov
jns
sbb
mov
in
lahf
push
fwait
jmp
or
int3
pusha
pop
fildl
or
ljmp
or
pushf
mov
jge
and
xchg
pop
ficoms
inc
fisttpll
cmpsl
mov
jmp
inc
inc
adc
scas
mov
pusha
sbb
dec
pop
div
subl
sar
xor
inc
mov
test
add
daa
jbe
pushl
mov
jle
cs
inc
sti
mov
mov
stos
jge
test
xor
sub
sbb
or
scas
jae
and
inc
sub
and
xchg
shr
mov
jmp
sti
jne
jbe
out
or
inc
ret
push
mov
loope
pop
sbb
in
nop
cmpsb
and
ret
ret
dec
sub
and
add
addr16
out
aaa
mov
stos
int3
stos
popa
jp
mov
popa
sub
inc
push
pop
lods
ret
es
lock
mov
inc
cmp
pop
push
and
push
push
cltd
push
fs
arpl
mov
int3
das
mov
and
stos
mov
push
pop
mov
bound
pop
pop
dec
and
xorb
lods
fnsave
rorb
inc
inc
out
into
iret
xchg
repz
mov
push
in
and
addr16
cli
adc
in
insb
dec
clc
gs
in
cltd
std
lret
pop
fcoms
inc
mov
inc
packuswb
imul
fnsave
mov
xor
mov
rorl
ret
ss
jb
mov
xlat
ret
xor
addr16
sbb
sbb
mov
pop
jg
jl
icebp
cmp
add
insl
fwait
in
cmp
movsb
fadd
test
or
or
mov
daa
std
pusha
dec
mov
cmpsb
sahf
loopne
push
cmp
popf
cmp
cltd
and
add
lods
popf
mov
bound
add
xor
mov
sub
addr16
aaa
into
out
outsl
sbb
shlb
dec
and
pop
jo
lods
stc
enter
loope
divb
or
or
test
andl
movsb
ret
lock
mov
in
lods
fadds
adc
sbb
dec
sub
lcall
leave
or
push
mov
or
aad
mov
movsb
inc
enter
add
clc
inc
sub
inc
sub
pusha
cld
sub
mov
sti
adc
push
fdivs
push
addr16
pop
arpl
fmuls
pop
movsl
dec
add
lahf
ljmp
xchg
jg
xchg
mov
cwtl
push
pushf
in
cmp
lcall
mov
push
mov
jbe
mov
sub
outsl
pop
mov
inc
jo
lcall
jno
incl
cmp
stc
pop
jg
sbb
in
pop
ja
mov
pop
out
push
cmp
sub
mov
data16
dec
sbb
add
sub
cmp
pop
idiv
mov
cmp
mov
push
popa
stos
adc
out
sub
sub
sbb
and
sbb
mov
movsl
add
xchg
add
or
in
int
add
int
orl
stc
cld
xchg
xchg
mov
jl
mov
cmp
pop
mov
test
test
xorl
cmpsl
cltd
nop
test
pushw
xadd
jecxz
xor
daa
sub
in
sub
fstps
push
mov
push
mov
lahf
pop
clc
xor
fisubrl
jp
xchg
test
xchg
mov
pop
cmp
sbb
mov
xchg
dec
xor
neg
lret
cld
cmp
movsb
inc
icebp
imul
outsl
push
dec
xlat
xchg
idivl
pusha
mov
gs
psubusw
or
mov
nop
xlat
mov
mov
mov
bound
ja
mov
outsb
faddp
flds
mov
cld
aam
mov
lcall
sti
idivb
add
xchg
mov
inc
sbb
scas
push
or
jbe
inc
adc
add
lcall
mov
roll
pop
cmp
and
pop
lock
sub
lcall
dec
jl
and
sub
les
push
jecxz
insb
mov
and
into
popf
fcompl
out
inc
lods
or
ljmp
inc
adc
shrl
cmp
mov
fcomi
imul
das
fucom
fs
test
outsl
call
lret
mov
fldenv
jge
adc
out
mov
mov
cwtl
outsb
jmp
push
and
sub
aam
es
aas
push
insl
cld
mov
add
lea
ret
jecxz
dec
pop
movsl
mov
pushf
push
or
es
push
xor
adc
test
mov
add
pop
push
sbb
sbb
pop
loop
ret
push
xor
xchg
dec
sbb
xor
xor
jo
rcrb
add
sub
divl
pusha
fisubl
outsl
aad
pop
cwtl
sub
mov
pusha
lcall
loope
and
je
pushf
pusha
adc
xor
push
pop
mov
cmpsl
sbb
sub
arpl
add
and
aam
lods
in
add
xchg
aaa
cli
adc
shlb
lods
pop
mov
lods
dec
xor
jmp
xor
out
shll
sbb
pop
clc
pop
out
aas
lods
sbb
cmpl
es
int3
cld
mov
xchg
into
xchg
movsb
mov
inc
pop
stos
test
aad
data16
das
cmpsl
dec
adc
pop
out
xor
pop
in
add
popf
inc
pop
sbb
mov
dec
addr16
loope
sti
andl
inc
call
cli
lods
test
cmp
ja
fdivs
sub
test
mov
adc
xchg
cltd
test
sbb
cld
jg
xor
mov
js
add
xor
inc
out
dec
lcall
xchg
mov
jno
scas
or
add
movb
mov
int
sub
outsl
dec
cmp
shlb
sbb
adc
cmpsb
xor
push
mov
add
scas
std
ljmp
pop
das
mov
xor
inc
ja
cmpsb
pop
sub
rcrb
dec
mov
lret
js
nop
pop
pop
dec
push
hlt
add
inc
sub
outsl
test
lret
pop
iret
cmp
mov
xor
inc
imul
or
mov
repnz
jbe
loop
dec
sub
cmp
inc
in
popa
es
jp
ss
xchg
es
addr16
add
xor
jne
aas
or
jae
jbe
imul
and
xchg
rorl
push
imul
xchg
sbb
stos
popa
insb
push
sub
and
int3
mov
nop
push
jo
jge
data16
test
imul
fstps
add
xchg
into
rorb
cmp
dec
jecxz
pop
decl
stos
cltd
jbe
in
dec
pushf
xor
add
mov
dec
xchg
and
fldcw
xor
cmpsb
mov
mov
xor
insl
xor
shll
fbld
sub
pop
int
add
js
hlt
outsb
xlat
mov
aam
into
jp
xchg
sbb
pushl
sbb
adc
inc
xchg
mov
cld
cmp
ljmp
sahf
jl
adc
jnp
sbb
in
dec
stc
sbb
and
imul
shlb
push
xor
jbe
push
movsl
shlb
cwtl
sbb
imul
xor
adc
std
in
pop
arpl
cmc
scas
add
add
mov
pushf
and
adc
and
mov
scas
daa
aaa
mov
xchg
addr16
xor
xchg
mov
inc
in
xchg
adc
push
mov
ror
imul
xchg
test
sarb
pushl
sbb
sub
ds
cmp
in
outsb
dec
jne
fcomi
sub
call
mov
pop
jl
dec
sub
in
popa
mov
mov
loop
bound
mov
mov
push
jae
mov
test
jl
push
inc
pusha
xor
sarb
add
stc
adc
jge
addl
mov
xor
xchg
testb
out
and
ret
inc
stos
cmpsb
cmp
sbb
mov
xchg
fnstsw
dec
ret
add
dec
es
pop
in
xlat
jecxz
inc
pop
and
push
jae
cld
testl
fisubrl
mov
sti
inc
xor
ja
ret
jne
mov
pop
je
das
xchg
xor
jnp
pusha
inc
loope
xchg
cmpsl
push
push
dec
or
sbb
cs
jle
inc
pop
call
popa
adc
mov
ret
and
add
stos
mov
into
push
movsl
fstpt
push
popa
gs
imul
xor
pop
or
push
jnp
lret
insb
daa
stc
orl
pop
jns
sbb
fcomp
add
push
push
pop
insl
add
jecxz
adc
cs
enter
popf
push
icebp
cwtl
xchg
loope
pop
ret
pop
adc
adc
cmp
cmp
and
push
data16
bound
pop
mov
popa
bound
push
lahf
xor
enter
jns
xor
jp
outsl
aam
enter
inc
addb
inc
cmp
in
scas
dec
or
pop
scas
push
push
in
iret
and
dec
test
xchg
sub
insl
loop
jo
pop
pushf
sub
mov
cld
sub
dec
jge
in
add
cs
call
sbb
xchg
dec
push
sbb
les
in
popa
push
lahf
rcll
push
xchg
pop
out
sub
es
jp
fiadds
dec
test
popa
jb
adc
push
in
push
fstps
or
mov
loopne
insb
sub
push
mov
clc
mov
fs
cmp
orl
repz
pop
sub
push
ss
lahf
scas
sbb
data16
aaa
pop
div
add
js
mov
xor
mov
pusha
push
inc
mov
xchg
stc
mov
int
xor
je
sub
sbb
push
stc
aad
sbb
cmpsl
mov
jne
or
ss
adc
add
jb
lds
loop
inc
movsl
dec
movsl
jg
nop
inc
add
or
push
mov
push
and
sbb
add
std
int3
inc
test
inc
jno
push
sub
jge
imul
xor
mov
into
scas
clc
iret
pusha
pop
imul
call
sbb
mov
in
push
ret
pop
lods
sbb
lahf
or
adc
xchg
or
iretw
pop
pop
int3
pop
mov
lahf
gs
push
push
sbb
mov
ja
xor
inc
icebp
in
push
xchg
dec
in
lahf
add
mov
inc
mov
cltd
cwtl
cmp
ds
xlat
jb
imul
scas
insb
mov
xchg
cltd
sbb
lea
into
mov
fstpl
and
mov
jle
push
jbe
loope
adc
in
orl
inc
mov
ljmp
dec
and
and
mov
lret
push
repnz
adc
sub
ficomps
xchg
xchg
insb
sub
dec
int
sbb
aaa
stos
mov
pop
mov
sbb
mov
inc
mov
pmovmskb
or
adc
jmp
fnsave
pop
mov
adc
bsf
outsb
jmp
lods
xor
push
fucomp
xchg
xchg
add
and
mov
xchg
xchg
clc
mov
imul
mov
adc
shl
out
sub
mov
xlat
sub
cmpsl
repz
adc
fldenv
shlb
stos
es
sbb
jmp
popa
mov
cmp
stos
jge
xor
stos
push
imul
jl
push
in
lods
lret
sub
js
jo
inc
mov
test
inc
shll
cmpsl
clc
mov
jo
adc
enter
cltd
sub
fcomip
sub
test
and
push
mov
mov
sti
push
js
shrl
bound
data16
sbb
mov
out
loope
mov
xchg
mov
mov
das
jl
adc
xchg
push
jl
push
push
jle
mov
sub
sbbb
xchg
dec
sbb
sub
das
imul
gs
daa
adc
dec
out
jae
shlb
addr16
pop
inc
pop
sbb
fiaddl
aad
inc
scas
jb,pn
dec
push
aam
push
mov
mov
mov
adc
and
pop
dec
xchg
mov
inc
add
sub
in
add
js
sti
pop
add
test
test
jae
int3
out
pop
test
mov
mov
lret
outsb
cmpsl
mov
lock
mov
cld
cs
cmp
mov
fs
outsb
insb
dec
mov
inc
fisubrl
hlt
and
cmp
sti
sbb
lret
dec
sub
adc
mov
sbb
jno
test
scas
sub
fdivs
pop
mov
dec
js
test
or
outsl
jmp
inc
js
sti
mov
aas
xchg
pop
aaa
dec
jb
cmp
or
cmp
xor
sbb
mov
sbb
add
or
or
mov
mov
das
xchg
jl
int
mov
lds
cmp
jne
pop
sahf
nop
push
xor
lds
jg
xor
or
pop
mov
jl
lret
dec
xchg
scas
sbb
and
mov
fidivl
sbbl
popa
xlat
ja
inc
inc
adc
and
in
mov
mov
lods
or
cs
rolb
ja
sub
xchg
bound
iret
pusha
pop
pop
xchg
shlb
gs
hlt
repnz
mov
daa
pop
stos
jle
xchg
adc
imul
leave
mov
pusha
jl
push
jb
mov
cmp
jle
imul
fisubl
sahf
orl
sub
lods
lahf
mov
xchg
fwait
dec
mov
xchg
pop
dec
jae
mov
xor
pop
cmpsl
ds
lods
xchg
lcall
cltd
jb
jno
and
arpl
cli
inc
outsl
data16
pop
xchg
aas
push
or
hlt
loope
ror
mov
pminsw
push
cmp
pop
movsb
notl
push
pop
jmp
and
jae
sbb
cmp
jg
xor
push
test
data16
cld
dec
adc
mov
lods
cmpsb
push
iret
and
xor
mov
sti
pop
test
jl
leave
fisubl
mov
sub
cltd
and
adc
loope
inc
cmp
in
mov
xor
mov
in
movsl
cli
decl
jp
lret
lds
mov
scas
sbb
xchg
jnp
stos
std
adc
mov
insl
cs
jae
mov
xchg
stos
inc
movsb
cmp
pop
addr16
mov
mov
inc
xchg
xchg
scas
cmp
and
lcall
add
xor
sahf
inc
sub
hlt
mov
aaa
into
adc
out
xchg
cmp
jp
jl
mov
xchg
testb
cmc
xchg
mov
pop
out
daa
or
inc
fisubrs
or
mov
dec
or
shlb
pop
dec
jbe
mov
jns
lods
cmp
mov
dec
out
dec
adc
andb
add
test
xchg
out
cmp
xchg
insb
adc
pop
adc
int
aad
adc
incb
xchg
xor
pop
ss
mov
push
xor
ss
fwait
lea
push
add
out
jns
loop
cli
outsl
inc
cltd
pop
jl
cli
push
and
sti
mov
jge
and
xchg
xchg
jge
mov
sbb
push
scas
xor
cltd
stos
push
jecxz
js
movsl
adc
push
sarl
inc
push
fisubs
aas
mov
and
mov
or
dec
dec
push
mov
repnz
xor
lret
insb
dec
jnp
test
lahf
add
jo
push
jae
fsubrl
lods
mov
pop
jp
in
out
mov
push
inc
outsb
stos
fnstenv
and
jae
call
testl
or
out
dec
fs
pop
add
and
dec
repz
ljmp
insw
push
xor
xchg
loope,pt
lods
or
ret
test
out
lods
inc
hlt
and
shlb
jmp
xor
mov
pop
lods
loop
sbbl
out
mov
mov
jbe
bound
arpl
mov
inc
popf
sub
ja
cs
movsl
cmc
xchg
mov
jbe
adc
push
gs
bound
lods
mov
inc
lcall
jmp
sti
mov
mov
fst
pusha
sti
push
mov
mov
outsl
data16
movsb
shlb
in
shrl
dec
xor
daa
or
gs
inc
es
cmp
in
jns
mov
xchg
add
push
mov
lods
push
push
push
pop
or
test
sti
xchg
call
fnsave
push
nop
or
mov
fldt
cs
fs
sbb
addr16
cmpsl
xchg
je
or
pop
xchg
jecxz
clc
outsl
out
cmp
out
xchg
call
jge
mov
imul
or
scas
mov
dec
mov
sbb
std
add
nop
sbb
or
push
sbb
js
or
mov
popf
adc
adc
xchg
int3
jnp
or
add
adc
inc
xchg
out
pop
sbb
adc
in
faddl
insb
push
cmp
mov
scas
scas
loopne
adc
out
xchg
lea
stc
icebp
sub
jno
mov
loop
rcrl
jnp
adc
ja
add
test
stos
popa
dec
mov
jle
jns
push
mov
cmp
push
dec
pop
or
aas
fisttpll
xchg
jae
mov
dec
mov
push
test
pop
push
jns
add
or
subl
pop
lret
es
xor
repz
mov
loope
push
push
fisttps
xor
loopne
push
lods
mov
jo
xchg
testl
xchg
mov
in
call
sbb
xlat
loopne
mov
mov
jbe
dec
dec
clc
das
push
lret
inc
imull
pusha
cwtl
call
pop
sub
imul
stc
data16
inc
jne
jmp
lods
stos
loopne
stc
out
push
mov
dec
rolb
ja
in
test
ret
mov
push
sbb
and
jl
cltd
sub
push
filds
rclb
cs
lods
pop
xor
scas
sbb
out
sarl
push
xchg
mov
movsl
into
inc
sub
dec
notl
inc
mov
inc
dec
scas
mov
fs
imul
pop
mov
add
addl
inc
jg
lea
dec
push
add
je
pop
push
sahf
nop
or
jmp
sbb
xor
pop
ds
add
dec
test
inc
xchg
lret
fcomp
fdivl
ja
xor
xor
cli
test
cmp
ror
and
mov
pop
gs
cltd
adc
xchg
push
popf
xchg
sti
add
aad
repz
pop
pop
out
pop
movsb
add
icebp
sub
stos
adc
neg
push
push
pop
imul
dec
outsl
es
or
rorb
outsb
dec
mov
rcll
test
mov
test
jno
jg
ret
call
test
int3
loopne
dec
bswap
cld
dec
xor
pop
cli
mov
leave
inc
insl
jns
ret
mov
sbb
mov
ret
out
dec
pop
pop
rcll
imul
fs
leave
add
test
mov
stc
lods
out
mov
lret
in
movsl
out
movsl
popf
aam
xor
idivl
addr16
jge
bound
push
adc
xchg
mov
xchg
fisubrs
scas
add
mov
mov
mov
pop
ljmp
mov
jnp
push
and
mov
lock
movsl
cmc
jp
iret
rolb
fadds
imul
lahf
cmp
xchg
sahf
popa
add
mov
ja
xchg
pop
idivl
mov
pop
dec
jp
daa
nop
inc
ret
fnstcw
movsl
xchg
and
jg
mov
push
fs
aas
flds
inc
ret
xor
push
sub
jne
imul
xchg
cmp
pop
sti
sbb
lock
nop
loopne
xchg
addr16
mov
dec
into
lcall
jo
mov
dec
bound
fistl
dec
dec
or
imul
hlt
test
inc
inc
xor
leave
in
arpl
lods
test
mov
mov
imul
xlat
pop
ss
repnz
sub
fstpl
aas
xor
in
int
pminsw
cmp
jecxz
xor
mov
mov
jl
mov
sbb
roll
shll
push
mov
rcll
inc
mov
mov
das
mov
and
stc
inc
gs
arpl
imul
fldenv
pop
pusha
sub
pop
pop
mov
push
imul
gs
dec
jnp
clc
stc
loop
sbb
sub
add
pop
pop
lods
sub
pop
lcall
sbbb
mov
inc
inc
sbb
mov
nop
stos
jb
jp
and
xor
data16
cmp
das
pop
test
call
adc
or
cmp
and
sbb
into
outsl
aaa
stos
in
orb
hlt
adc
and
and
addr16
movsl
jle
fwait
push
out
mov
jge
lahf
cs
xor
repnz
fimuls
lret
cmpl
jno
pop
push
scas
into
dec
mul
mov
lock
aas
mov
jl
fistpl
mov
loop
cmpsl
mov
push
sub
cmpsb
std
and
xchg
mov
ds
mov
cmp
jns
sbb
or
and
adc
push
or
ss
aas
xor
pushf
ss
sbbl
jmp
fsub
sub
sti
jae
mov
outsb
mov
add
testl
popa
pusha
push
pop
mov
pop
les
adc
xchg
clc
iret
fdivs
push
in
in
gs
in
loop
xchg
jb
out
in
imul
and
daa
fdivrl
outsl
subl
cmp
mov
mov
insb
int3
call
mov
fistps
rclb
adc
int
inc
dec
js
out
push
stos
cwtl
mov
mov
add
inc
and
add
mov
mov
pop
sbb
dec
mov
jp
jge
cmp
jne
fisubrs
push
or
stos
mov
rclb
push
dec
and
popa
leave
call
ret
cmp
pusha
push
sbb
insb
cltd
adcb
fsub
jo
dec
jb
std
push
test
dec
sub
imul
cmp
data16
inc
xor
es
ja
insl
sbb
add
ret
mov
lret
pop
xor
mov
addl
adc
and
movhps
push
mov
arpl
sbb
xchg
cmp
cmp
shll
aas
gs
movsl
sbb
and
pop
dec
push
or
inc
out
dec
and
mov
jne
pop
into
lret
cltd
test
mov
scas
cmpsb
sub
sbb
mov
js
sub
test
in
ficoml
in
stos
jnp
sbb
pop
dec
mov
adc
inc
and
push
and
and
je
mov
cmp
dec
daa
dec
mov
adc
idivb
mov
push
mov
in
cld
sbb
push
lahf
incb
clc
fdivp
rcr
ret
mov
adc
out
pop
cmp
loope
aad
movsb
dec
push
xchg
mov
fiaddl
stos
jo
push
cmc
shl
push
decl
jmp
mov
xor
sahf
cmp
sbb
xchg
adc
mov
divl
push
cmp
push
add
outsl
jns
leave
jnp
shrl
sbb
push
ret
dec
fisttpll
dec
mov
gs
clc
xchg
ret
pop
sub
stos
jne
sub
pop
adc
or
rcr
sbb
les
jo
aaa
aaa
stc
imul
lods
les
ljmp
adc
cwtl
decl
cmp
fwait
adc
sahf
std
inc
lock
out
fsubrs
enter
aam
jne
into
std
aas
fsubrs
mov
fs
push
adc
jb
iret
dec
adc
and
repnz
hlt
adc
cltd
dec
and
lods
clc
mov
hlt
pushf
xlat
push
std
xor
ret
xchg
fnstcw
lds
fildl
imulb
hlt
mov
inc
jge
iret
push
outsb
scas
pop
pop
pop
push
mov
sub
dec
inc
addr16
mov
dec
inc
data16
pop
add
xchg
sarb
jl
in
pop
xor
push
xchg
xor
mov
scas
lods
inc
fisubrs
shl
pushf
addr16
inc
call
loopne
sbb
and
mov
fsubrl
jg
adcb
jno
outsb
jge
ret
addr16
in
adcb
jg
pusha
lea
pop
mov
push
ja
xor
push
inc
xorl
mov
sbb
test
pop
xor
add
dec
iret
xor
pop
lock
stc
icebp
nop
fwait
hlt
mov
mov
movsb
je
push
mov
lret
push
test
clc
mov
cmpsl
sahf
jg
lahf
jae
adc
pushf
mov
in
cli
ja
mov
pop
es
bound
mov
push
fadds
xor
jecxz
ss
sti
inc
or
pop
push
adc
ret
xchg
cmpb
das
inc
xchg
push
shlb
popf
or
xchg
rcrl
adc
mov
cmp
fdivs
icebp
lahf
jne
sub
cmp
push
insl
jp
fcompl
jecxz
jae
inc
jl
pusha
clc
cmp
xrelease
ss
cmp
shlb
dec
mov
pop
push
push
dec
sbb
xchg
mov
andl
movsl
xchg
mov
jnp
out
das
fdiv
stos
out
add
iret
cli
jne
inc
das
lods
repz
fwait
jmp
pop
and
cmp
add
add
mov
filds
lock
ljmp
and
sub
mov
pop
outsl
imul
push
inc
js
aaa
or
lahf
es
mov
idivl
cmp
cmp
mov
insl
xlat
movsbl
fnsave
mov
lret
ds
ret
xor
test
sub
pop
inc
addr16
jecxz
rcrb
scas
es
mov
aad
test
sbb
enter
inc
sbb
shrl
sbb
mov
sub
ds
andl
sti
pop
out
lahf
cmpsl
xchg
jns
xor
jmp
je
cmp
lret
mov
xlat
clc
cs
jg
test
xchg
push
call
pop
pusha
pop
xchg
mov
jno
mov
mov
or
sar
inc
imul
es
ret
scas
aam
idivb
scas
cmp
add
rcll
data16
aas
adc
jle
sub
add
xchg
cld
sub
xor
xor
mov
jmp
xchg
jmp
fwait
test
loopne
in
ja
inc
sbb
jg
and
cmpsl
push
sbb
fucomip
test
mov
lods
adc
mov
sahf
pop
mov
insl
xor
out
and
in
cmp
test
sar
addl
call
mov
dec
dec
and
loop
push
pop
js
movsl
test
mov
dec
push
mov
enter
mov
inc
out
mov
mov
push
in
ficomps
push
jns
xor
jae
jne
cmpsb
jmp
cmp
fs
aad
push
mov
sub
jnp
pop
sti
arpl
mov
and
jbe
js
movsl
cmp
fistl
in
addb
cmp
movsb
mov
fcompl
aas
aaa
xor
int
fidivrs
gs
xchg
ret
or
lock
rorb
pop
loopne
push
in
cmp
cmc
fistpll
jbe
mov
adc
mov
jge
jge
push
mov
or
push
and
clc
dec
inc
out
dec
mov
mov
sbbb
bswap
repz
xor
xchg
mov
push
inc
jle
insl
cmp
pop
push
mov
adc
fimuls
jg
test
mov
leave
lock
mov
sub
stc
mov
and
lcall
hlt
dec
adc
shr
addb
movsb
pop
push
cmp
cmp
in
loope
addr16
pop
das
fidivrs
leave
inc
in
mov
xor
andl
or
and
mov
mov
leave
mov
mov
or
lahf
testb
test
jb
adc
pop
xchg
dec
out
divl
sarl
bound
adc
mov
daa
jmp
mov
jno
aas
js
jns
jl
push
adc
pop
call
lds
mov
push
test
push
ror
test
inc
je
inc
mov
mov
inc
inc
inc
push
aam
dec
push
inc
shll
sbb
call
insb
push
pusha
mov
xor
inc
nopl
pop
cmpb
dec
pop
push
dec
push
fidivs
std
fcoms
jl
xchg
lahf
scas
cmp
rcrb
xor
or
cmpsb
imul
push
fsts
mov
and
sub
or
push
dec
sub
divb
push
mov
jecxz
adc
push
sub
push
shlb
popf
inc
pop
shrl
scas
pop
jl
shrb
xchg
test
test
lcall
bnd
mov
fcmovbe
push
shll
out
xor
or
in
inc
enter
popl
out
shl
sub
cmpsb
stos
jnp
push
movb
test
sub
into
xchg
xor
ficoml
bound
lods
jp
add
mov
xor
addr16
jns
sbb
mov
jne
sbb
push
inc
ds
call
mov
shr
mov
fidivrs
movsl
xchg
mov
cmp
dec
lret
sub
push
sbb
mov
sahf
loop
inc
cmp
ljmp
scas
jo
addr16
mov
pop
stc
orl
or
stos
out
add
pop
mov
mov
adc
inc
rcrb
mov
xor
es
sti
sbb
fldt
cmp
cmc
fldenv
mov
mov
loop
push
lods
or
movsl
mov
ror
out
pushl
mov
mov
adc
sbb
popf
gs
push
xlat
add
ret
ret
test
add
mov
scas
ja
mov
mov
push
pop
outsl
divb
jo
loope
imul
or
mov
xor
cld
adc
hlt
pop
repz
mov
movsb
push
pop
dec
cmp
loopne
and
mov
pushf
in
ret
dec
lods
mov
lock
bnd
add
notl
shrb
scas
stc
pop
andb
mov
inc
xor
in
sub
fwait
outsl
mov
test
push
xlat
ja
jno
mov
xchg
cmpl
pop
push
dec
push
mov
std
fs
lret
test
xchg
bound
cmpsb
imul
outsb
test
cwtl
into
into
jne
xchg
jo
mov
shrb
sub
xor
pop
mov
les
xor
fidivrs
mov
test
rorl
aad
xchg
push
dec
mov
add
loop
jbe
outsl
xor
cmp
xchg
negb
mov
xor
pop
add
adc
jle
adc
out
lock
pop
push
fbstp
push
mov
xor
lock
pop
ljmp
scas
outsl
inc
xor
cmp
jns
lret
inc
dec
or
mov
rcl
push
test
adc
pop
cmp
clc
je
jnp
popa
jae
sti
push
adc
fiaddl
mov
pop
jg
nop
jno
add
ljmp
dec
pushf
popa
xchg
lds
jg
mov
or
jl
push
ljmp
adc
fwait
enter
flds
lods
mov
mov
ja
clc
mov
jl
lret
addb
notl
dec
jo
mov
es
fbld
pop
pop
negl
mov
or
je
dec
xor
dec
push
cmp
sarl
xchg
jb
clc
cmp
cmp
in
aas
mov
push
push
pop
lods
sub
mov
jp
xor
ficomps
cwtl
mov
rcl
adc
jg
sub
xor
int
pop
ja
mov
cmp
loopne
xor
and
cmp
icebp
bound
jno
mov
jo
cld
fcomps
jo
sahf
and
lods
imul
imul
call
add
pop
xchg
loopne
fs
xchg
ret
test
jne
push
test
leave
jo
mov
xchg
xor
adc
cmp
out
push
shlb
js
dec
pop
jecxz
sbbb
or
inc
into
repz
push
insl
outsl
int
mov
test
mov
ret
or
iret
mov
and
inc
pushf
mov
test
push
pusha
push
mov
leave
sar
arpl
inc
adc
cmp
jbe
in
ljmp
mov
xchg
dec
clc
test
loopne
lds
iret
aaa
shlb
sbb
fiadds
sbb
ret
ja
inc
mov
mov
push
rcr
mov
jl
xlat
jl
pop
dec
lods
arpl
mov
orb
cli
jle
sti
mov
jmp
dec
mov
jbe
scas
or
loope
jae
cmc
add
jno
ror
scas
sub
dec
xor
movsl
cmpsb
xchg
les
cmpsl
push
call
lods
adc
scas
mov
xchg
ja
pop
inc
les
add
sub
iret
cld
inc
sub
ret
fs
popa
jge
push
pcmpeqw
leave
outsb
fwait
pop
lods
dec
hlt
pop
jmp
add
js
ljmp
pusha
dec
mov
fcoms
push
fisttpll
xchg
push
or
shll
add
xchg
inc
sub
ss
sbb
add
adc
xchg
sarb
clc
xchg
mov
xchg
push
jmp
sub
inc
aas
xor
aam
mov
lds
jg
imul
xor
aas
in
add
dec
lea
inc
pop
mov
sti
clc
rolb
jb
push
push
mov
adc
xchg
lcall
and
push
adc
add
mov
addr16
sbb
cmp
push
std
cmp
fcompl
lds
call
pop
ds
cmp
sub
xor
clc
pusha
ljmp
ret
inc
mov
ljmp
push
cmpsb
dec
stos
mov
mov
push
lahf
mov
dec
bound
cmp
sub
or
mov
rol
cltd
in
mov
cli
pop
dec
scas
je
jge
inc
push
sbb
cmp
and
cwtl
outsl
into
sbb
xor
ffree
jae
in
sub
call
movsl
aam
movsl
push
cwtl
and
push
cld
mull
or
andl
pop
push
cs
sbb
sti
lods
jecxz
xchg
add
jnp
ret
xlat
or
adc
pop
mov
mov
sarl
or
cmp
nop
mov
ror
dec
pop
sbb
mov
or
cmp
out
rolb
lea
leave
arpl
add
orb
lahf
clc
xor
fwait
cmp
add
xchg
sbb
es
xor
inc
mov
inc
dec
xchg
mov
pop
xchg
inc
out
jle
xor
xor
xchg
dec
sti
jnp
cmp
push
fnstcw
sbb
xor
out
adc
addb
or
in
sub
push
pop
lcall
jbe
repnz
orl
inc
mov
push
call
out
jp
enter
sub
pop
jecxz
loop
push
sahf
dec
rcll
in
jb
and
lds
or
iret
js
scas
out
xor
movsb
mov
cs
pop
or
sub
xchg
test
daa
or
sbb
push
leave
fimull
rol
scas
in
popl
out
fwait
std
lea
stc
add
sti
cmp
lea
aam
dec
sbb
out
xchg
xor
adc
mov
bound
loope
ret
jae
xchg
notb
pop
imul
fidivs
push
nop
add
adc
stos
cmp
adc
mov
pop
out
js
int3
andb
movsb
incb
fwait
cli
cmp
sub
or
adc
inc
mov
addr16
addb
test
in
lcall
lcall
xor
push
movsb
xchg
sti
stc
push
loop
js
stos
fdiv
sub
sahf
push
scas
and
mov
mov
push
jbe
adc
mov
faddp
jno
adc
cmp
fwait
adc
inc
sahf
dec
cmpsb
push
aas
xor
cmc
mov
sbb
test
push
mov
fmuls
loopne
repnz
xchg
js
cmp
inc
in
faddl
jl
in
sbb
cmc
adc
ffreep
sub
jno
or
xchg
jns
scas
test
fisubrs
lahf
cwtl
push
cwtl
lcall
push
into
push
push
loop
sub
jmp
xchg
xor
sub
cmpl
rcr
sbb
xlat
cmp
test
and
test
ljmp
dec
xor
inc
fmul
jp
xor
mov
mov
and
mov
js
je
sbb
mov
cmpsl
insl
and
mov
dec
jns
lods
dec
mov
fcoms
clc
jle
jg
aas
and
dec
mov
inc
lds
push
dec
adc
add
pushf
cmpsb
scas
or
fsubrl
lock
xor
cmpsl
pop
test
mov
cmp
adc
mov
cmp
clc
inc
xchg
sbb
cmp
mov
arpl
mov
adc
xchg
push
out
fadds
inc
cs
and
xchg
mov
lods
add
rclb
cld
sub
scas
mov
ljmp
fbstp
push
or
lds
lods
push
aad
add
xchg
xor
pcmpeqd
xor
cwtl
or
inc
out
cld
mov
xchg
or
mov
cmpsb
scas
data16
cmpsb
pop
sbb
add
movsb
dec
dec
inc
es
and
jmp
mov
and
aam
outsb
dec
inc
cltd
mov
pop
cmp
fdivrl
fistpll
jmp
imul
and
mov
repz
lods
mull
outsl
push
lds
rcr
loop
insb
rorl
dec
pop
shl
int
imul
ds
add
jbe
jno
jb
lret
mov
pop
sbb
xlat
gs
repnz
sub
loop
mov
jo
fnstsw
inc
fcmove
cwtl
jl
pop
in
push
mov
pushf
or
sub
repz
shll
fsub
and
enter
or
cmp
adc
or
sti
or
mov
ljmp
mov
xchg
fdivr
dec
add
cmp
movsb
das
fsubrp
aam
mov
mov
xchg
mov
mov
add
jg
jno
jle
pushf
shl
dec
or
out
jle
mov
mov
mov
pop
mov
pop
cli
scas
aad
dec
xchg
or
and
jne
push
and
mov
les
push
inc
lahf
push
movsl
or
dec
sbb
jp
mov
lcall
adc
outsl
or
add
mov
jmp
shrb
dec
orl
scas
adc
mov
mov
fldln2
jp
fsubs
sub
pusha
fidivl
imul
je
lret
movsb
stc
test
addr16
jno
xchg
pop
in
jns
jo
call
nop
adc
jne
addr16
andb
mov
xchg
push
jns
lock
sub
mov
mov
dec
into
icebp
adc
sbb
pop
jae
dec
jge
in
inc
push
js
ret
and
mov
out
pop
rcrl
ret
loopne
mov
and
aas
dec
addb
std
adc
das
mov
int3
fwait
neg
push
loope
add
pop
add
jp
adc
dec
or
inc
lds
movsb
sbb
pushf
in
jae
jmp
push
dec
jp
cli
je
pushf
loopne
xchg
std
in
mov
pop
stc
sahf
movl
mov
pop
nop
addr16
xchg
insb
jb
jmp
cld
lods
push
out
enter
push
gs
and
shrb
or
test
popa
aaa
dec
repz
repz
xor
into
dec
jns
mov
add
adc
movsl
jae
and
xor
sbb
stos
sub
mulb
in
dec
pop
lcall
iret
mov
dec
or
sbb
lods
add
mov
ficoml
adc
das
mov
repz
cmpxchg
push
clc
jmp
push
into
push
inc
test
jo
jo
jl
inc
inc
loop
or
add
mov
jge
das
add
jg
scas
popa
xlat
popf
out
js
inc
cld
insb
xchg
mov
sub
dec
cmp
jecxz
lret
ja
cs
sbb
jbe
movsl
mov
mov
and
mov
lcall
enter
sbb
das
mov
push
stc
outsb
jle
and
inc
dec
or
push
sbb
into
jbe
xchg
xor
pop
inc
bound
xor
les
and
or
iret
cmp
jg
xchg
pop
sub
pushf
mov
jbe
jl
loop
cmpsl
xchg
jo
pop
xor
push
out
test
test
mov
push
leave
in
xchg
outsb
fnstenv
icebp
xor
movsb
mov
cs
in
mov
add
add
and
mulb
and
cmp
push
mov
sbb
sbb
rcrb
sub
xor
push
xchg
lea
cmp
xor
inc
gs
mov
hlt
xor
mov
lods
sub
movsl
mov
cli
mov
sub
test
mov
stos
fs
dec
outsl
scas
mov
out
jmp
inc
test
ljmp
jae
mov
outsb
popf
pop
pop
aaa
push
cmp
and
negb
mov
fisubs
pop
xchg
dec
sahf
inc
aas
inc
ficoms
jbe
dec
xor
xchg
inc
jno
xor
cld
jbe
into
adc
scas
push
js
pop
fsubrs
xor
cld
lret
push
fsubrp
inc
inc
push
dec
fimuls
mov
imul
insl
std
or
test
cmp
arpl
xchg
in
push
adcl
push
daa
daa
push
adc
mov
push
lahf
clc
out
jge
adc
aad
jno
rorw
xchg
xchg
mov
fldcw
push
mov
fmull
out
xchg
das
aas
cmp
daa
jmp
pushf
push
out
into
pop
dec
mov
pop
inc
mov
inc
jp
mov
sahf
dec
or
out
out
pop
push
mov
and
pusha
sbb
mov
pop
push
and
inc
ret
push
shl
cs
xchg
pop
push
ret
lods
dec
push
jo
inc
imul
iret
jge
shrb
pop
testb
imul
xchg
jno
sbbb
sbb
nop
lret
push
jp
popa
push
sub
add
mov
scas
pop
and
mov
data16
sti
and
cmc
bound
mov
daa
push
pop
and
test
push
cs
mov
push
inc
lret
xchg
push
jle
mov
fstpt
jae
cld
jp
shll
in
les
aad
and
sbb
rol
popf
shll
jl
shlb
xchg
xchg
jns
stos
or
in
sub
jb
mov
mov
pop
cmp
push
imul
fsubrp
dec
inc
repnz
or
mov
hlt
dec
xchg
inc
shlb
push
ret
popa
arpl
dec
xor
xor
dec
add
xchg
loopne
cmp
popf
sbb
sbb
jns
js
jmp
jge
xchg
fwait
mov
push
ja
push
lahf
outsl
xor
mov
ja
push
test
pop
or
xchg
lods
enter
jecxz
stc
popf
fsub
fdivl
js
int3
repnz
mov
xchg
jns,pn
das
and
push
movsb
addb
and
pop
push
je
mov
icebp
addr16
inc
repnz
inc
inc
lret
je
loope
dec
and
cwtl
test
and
xchg
mov
int
ret
test
orl
cwtl
jnp
sbb
and
cmp
insb
push
push
add
int3
dec
enter
inc
cmp
out
out
or
add
mov
ds
adc
jle
into
icebp
outsb
jp
loop
and
cli
pop
jae
sbb
mov
jp
into
or
mov
enter
outsb
aaa
pop
enter
fwait
aaa
or
aaa
push
mov
xor
cwtl
loopne
sahf
adcl
mov
fwait
mov
jno
mov
push
rorl
or
mov
cwtl
clc
lcall
mov
mov
negl
test
adc
mov
xchg
cmc
mov
test
jo
sub
dec
jnp
mov
pop
out
loopne
loope
test
pop
sbb
jmp
mov
fnstenv
lcall
push
cltd
inc
out
xchg
lods
dec
xchg
std
mov
je
cmp
mov
mov
jb
pop
outsl
test
push
cmp
xor
ret
mov
stos
shr
xchg
stos
in
mov
ret
bound
xor
jbe
mov
or
dec
and
outsl
xor
push
inc
dec
adc
and
cld
mov
push
std
cmp
jmp
inc
fsubl
or
loop
push
fs
adc
xchg
cltd
inc
les
dec
fisttpl
fwait
pop
aam
mov
jno
push
jg
sbb
repz
clc
mov
addr16
lcall
orb
push
hlt
cwtl
popf
aam
xor
push
clc
sub
sbb
jns
mov
xorl
enter
iret
cld
push
movl
cs
sbb
and
aas
mov
ds
loopw
inc
jle
fcomps
hlt
inc
mov
jg
mov
and
or
dec
mov
cli
int
xchg
scas
mov
jae
jmp
pop
sbb
ja
call
je
xchg
fcoml
inc
jl
rcrb
mov
cmp
rcr
jbe
fiaddl
cltd
xchg
ljmp
popa
stos
mov
sbb
mov
inc
fyl2x
negl
popf
ret
repz
idivl
movzwl
lahf
jmp
mov
outsl
repnz
cmc
lods
loopne
in
jmp
sub
in
test
sub
inc
jae
enter
and
ljmp
push
scas
xchg
pop
es
lock
adc
sub
cmp
gs
rcrb
jb
jmp
outsb
dec
xchg
jmp
xor
inc
popa
xchg
and
xchg
imull
cltd
add
mov
enter
push
icebp
aas
xor
pushf
out
mov
scas
cmp
sbb
jbe
aad
inc
jl
std
xchg
or
jo
lea
xor
les
pop
xor
add
sub
mov
outsl
adc
inc
mov
add
scas
mov
fcomi
shl
jno
pop
imulb
jno
adc
jne
call
pop
jne
ss
dec
rorl
hlt
int
pop
mov
dec
outsl
add
roll
mov
push
aad
push
into
icebp
mov
add
jmp
dec
jae
int
pusha
jecxz
xlat
push
test
cmc
outsb
jne
movsl
inc
jge
mov
in
and
aas
cld
fmuls
or
int3
cmc
fists
orl
or
push
inc
push
adc
les
cmp
jno
pop
mov
xchg
or
jmp
and
iret
loop
dec
mov
mov
imul
aaa
sahf
xor
dec
adc
and
mov
mov
inc
loop
dec
in
xchg
dec
inc
sub
xor
xchg
mov
bnd
sahf
scas
fmuls
add
test
jns
mov
dec
js
popf
cltd
out
jnp
imul
lock
dec
push
jbe
es
fdivp
mov
das
and
das
push
iret
mov
fadd
inc
push
push
push
push
jp,pn
iret
pop
adc
das
repz
sahf
lock
ret
push
fs
inc
adc
aad
sbb
dec
adc
mov
mov
loope
bnd
in
call
and
jo
lahf
lods
out
add
test
pop
out
aaa
mov
xchg
or
sub
jge
mov
in
adc
and
mov
lods
jb
mov
out
sub
ss
dec
mov
or
into
pop
scas
push
mov
shl
out
push
and
xor
dec
xor
sbb
icebp
mov
out
sub
xor
dec
mov
mov
dec
sti
fs
dec
mov
and
mov
imul
lret
sub
jle,pt
ds
mov
int3
add
inc
jne
vcvtsi2ssl
subb
inc
push
mov
pop
pop
shll
xlat
dec
std
pop
and
repz
cmpsb
adc
call
packssdw
movsb
jo
repz
sbb
jbe
aam
ret
cmpsb
and
mov
pmulhuw
pushf
push
in
dec
add
cli
and
imul
dec
xchg
add
jne
pop
lahf
jle
jge
pop
cmc
stc
mov
shll
sub
lods
daa
pop
in
pop
or
xchg
pop
sub
loopne
mov
push
xlat
test
sub
popf
lock
jnp
sbb
loope
pop
sbb
cmp
gs
jle
cmp
dec
call
jae
push
mov
movsb
fcoml
or
adc
or
jecxz
call
stos
xchg
push
xchg
sub
movsb
xchg
in
adc
mov
or
cltd
mov
data16
push
lret
sub
sahf
shll
nop
and
mov
pop
es
les
adc
stc
cli
push
es
mov
outsb
stos
data16
divb
clc
inc
maxps
xor
nop
or
call
aam
fnstcw
in
sbb
iret
mov
roll
jle
pop
jbe
xchg
setg
adcl
sbb
stos
ret
pop
imul
adc
sbb
mov
pop
cli
mov
add
push
dec
popf
insb
cmp
push
shrb
cli
lcall
sbb
es
cli
fwait
aaa
jecxz
and
mov
xchg
xchg
add
sub
sbb
push
data16
sbb
shll
in
loopne
jmp
mov
add
and
adc
test
mov
out
lea
ret
inc
js
adc
sbb
ss
mov
mov
dec
jns
sarb
fistpl
cwtl
lcall
sub
ds
int3
fidivl
imul
inc
jns
adc
sarb
ret
aad
lea
mov
adc
ret
push
ss
mov
xor
mov
fsubs
je
addl
jne
cmp
ret
jmp
cmpsl
push
xchg
clc
les
dec
or
inc
sbb
cmp
jp
dec
inc
xor
pop
les
pop
fcoml
fs
negl
xchg
test
xchg
pusha
adc
inc
inc
icebp
into
cwtl
out
lret
rcrb
push
adc
sti
xchg
mov
insl
jg
iret
ss
add
push
cmp
adc
insb
out
mov
out
push
stos
mov
arpl
sbb
test
ds
xchg
mov
adc
ss
cmp
ret
sbb
int3
pusha
fistpll
and
rcrb
ds
js
or
push
scas
sub
aas
xchg
sbb
sbb
dec
test
jo
pop
fwait
addr16
test
in
mov
arpl
add
movsb
out
out
push
aas
pop
pop
adc
sbb
icebp
xorl
or
pop
dec
mov
inc
lret
dec
lods
mov
push
dec
mov
and
jb
jmp
xor
mov
push
sbb
shr
mov
inc
aad
ja
ds
inc
ljmp
dec
sbb
repnz
inc
outsb
sbb
lahf
mov
or
mov
sarl
push
mov
mov
mov
out
int
cmpsb
addl
add
das
insl
mov
pop
xchg
adc
mov
xchg
xchg
inc
jnp
fistps
call
dec
mov
xchg
pop
sahf
testb
pop
adc
outsb
adc
fildl
push
rdtsc
sub
fs
cli
in
mov
shlb
jns
mov
push
cmp
or
inc
cs
lahf
xchg
insl
iret
cs
nop
popf
cmp
mov
pop
movhps
mov
and
mov
mov
ret
and
cmpsb
push
addb
popa
pop
xchg
cwtl
in
pop
inc
icebp
push
sub
popa
mov
mov
mov
jae
rorl
loop
adc
insb
into
cltd
mov
lods
add
mov
push
mov
imul
jg
cmpsl
inc
jae
sahf
mov
cmp
popa
ljmp
stc
negl
pop
test
fistpl
testl
push
pop
fdivl
dec
in
push
roll
cmp
lds
fwait
dec
out
out
enter
push
fdiv
clc
inc
out
out
fmull
repnz
adc
jg
aaa
adc
sbb
sti
bound
jl
lods
dec
xchg
aam
lds
cmp
lret
xchg
jnp
sahf
dec
mov
jnp
inc
jne
push
scas
and
scas
cmp
sbb
bound
pushf
out
jne
xor
pop
mov
xchg
mov
mov
popf
mov
jecxz
mov
mov
shlb
sbb
inc
scas
in
scas
pop
jp,pt
mov
and
inc
xchg
jmp
daa
out
mov
insb
xchg
pop
mov
jmp
mov
rclb
aas
and
mov
test
sbb
dec
test
stos
fs
xchg
mov
aad
repz
sub
mov
lock
inc
nop
test
imul
icebp
popf
in
bound
jo
out
je
xchg
gs
push
adc
sbb
out
inc
and
mov
inc
stc
mov
and
out
lret
add
xchg
out
inc
cmp
xchg
cwtl
adc
inc
scas
notl
xchg
imul
in
iret
ret
adc
ja
push
insl
push
dec
ds
xlat
into
mov
cmpsb
lret
pop
sub
xchg
js
scas
cmp
mov
xchg
stos
pop
inc
roll
aaa
fcomps
jl
cs
fbstp
outsb
aam
or
popf
cwtl
add
lock
inc
sbb
int3
in
jge
jno
pop
sub
mov
std
mov
mov
inc
adc
mov
scas
pop
aas
rorl
mov
add
pop
dec
xor
lock
pop
adc
loop
jge
in
femms
neg
sub
std
popf
add
je
or
movsb
xchg
sub
xlat
and
pop
cmpsl
mov
cmc
stos
inc
add
into
movsl
movsb
xchg
adc
jmp
lds
adc
fmul
pop
cwtl
mov
sub
pusha
sub
pushl
cmp
mov
mov
push
je
cld
mov
and
push
dec
mov
inc
push
insb
or
xchg
mov
or
and
int3
mov
test
pop
fisubrs
repz
fnstcw
inc
je
inc
bound
cld
jecxz
mov
push
jg
cmp
stos
test
xchg
negb
xchg
and
fcoms
stos
cltd
jmp
cmp
mov
adc
imul
mov
mov
int
adc
xor
shll
jnp
mov
stos
movsb
shrl
jo
aas
inc
jp
mov
decb
push
rcrl
je
add
les
mov
xchg
push
jb
rol
jecxz
cmp
xchg
inc
lahf
push
cmp
cmp
test
sbb
cmc
adc
sbb
fimuls
cmpsb
pop
push
jbe
loope
jl
push
add
mov
add
fs
sub
int
pop
dec
lret
movsb
add
xchg
ja
repz
cmc
loope
bound
insb
cmpsl
out
mov
popa
push
stos
and
insl
add
fnsave
pop
and
or
repz
or
xchg
cmpsl
mov
cs
iret
addr16
into
imul
test
daa
cmp
fwait
rep
jl
or
iret
sbb
iret
gs
loopne
jne
mov
and
sub
stos
stc
jecxz
mov
es
sbb
xorl
imul
or
and
add
jae
cwtl
sub
cmp
cmp
daa
rcll
test
enter
pop
and
lahf
lahf
cmp
dec
subb
popf
xchg
rorb
out
jno
ret
dec
cli
int
mov
iret
jle
dec
in
push
leave
lret
jne
in
sbb
lret
xor
test
sub
inc
test
repnz
out
xchg
test
sbb
dec
shlb
out
lds
out
sbb
adc
mov
inc
cmpsl
mov
cmp
lret
cwtl
mov
insl
sub
test
mov
jmp
stos
aam
ret
out
js
ret
mov
icebp
popl
cwtl
xchg
ja
daa
int3
xor
fdivrp
xchg
repnz
fildl
sub
vzeroupper
cmpsl
jne
push
xchg
push
mov
pop
mov
mov
adc
dec
push
insl
lds
inc
rorl
sbb
cli
mov
insb
popa
jg
push
xor
pop
fiaddl
lret
repz
out
orb
mov
pop
test
inc
and
mov
dec
aam
stos
in
push
jle
out
jp
mov
lods
mov
push
mov
out
push
test
sbb
fcmovu
loope
aas
pop
push
and
adc
subb
dec
pop
jl
xor
jge
mov
mov
shrd
fs
xchg
leave
flds
push
mov
lret
movsl
xchg
add
loope
and
xor
mov
xchg
pop
rcl
add
xchg
cmp
int3
test
jae
sub
sub
pop
xchg
mov
js
sti
in
xchg
icebp
arpl
push
fcmovnu
stos
inc
dec
mov
dec
mov
shll
push
arpl
sbb
iret
ret
sub
sub
cmp
xchg
adc
push
jge
cmp
adc
dec
push
stc
xorl
cmpsb
loope
nop
into
cmpsb
fisubs
aas
lret
mov
cmp
orb
or
sub
roll
add
movsb
adc
pop
inc
mov
sbb
push
and
xchg
sbb
xchg
rorb
lods
out
inc
mov
mov
xchg
inc
repz
inc
jno
sub
sub
dec
std
sbb
pop
adc
sahf
in
lock
cmpsb
dec
pushf
cmp
jg
xchg
mov
ds
xchg
push
mov
sbb
mov
push
jnp
sbb
push
and
push
ljmp
mov
pop
or
mov
sbb
adc
fnstsw
pop
stc
inc
jnp
cs
insb
cld
lods
xor
sarl
and
imul
gs
jb
mov
xchg
rolb
js
mov
movsb
in
push
jo
jno
sub
fcomp
mov
test
push
sbb
enter
xchg
call
test
xchg
mov
imul
jmp
pusha
mov
dec
mov
jl
loop
pop
adc
push
out
jns
in
pop
arpl
outsl
test
mov
push
pop
xchg
and
or
in
jmp
aam
ss
push
inc
shll
pop
shl
jne
push
in
mov
fucomip
pop
jbe
sub
mov
pop
sub
jge
enter
ret
ret
enter
lret
jecxz
rcl
jbe
mov
data16
mov
pusha
fdivp
inc
rolb
into
sub
inc
mov
cld
mov
popf
xchg
adc
fs
jnp
adc
aad
out
or
xor
add
pop
mov
mov
push
dec
cs
push
mov
hlt
push
xchg
in
inc
sbb
movsb
insl
lret
push
dec
arpl
gs
xchg
cmp
insb
pop
pop
push
cltd
mov
xchg
jmp
mov
into
lcall
push
les
adc
push
dec
mov
xchg
dec
cmpsl
mov
movsb
pop
xor
xchg
pushw
xor
jae
add
add
int3
mov
push
mov
adc
enter
sbb
outsb
lods
scas
int
popf
mov
mov
adc
xchg
aad
popa
movaps
mov
lock
mov
fistl
push
mov
ds
insl
push
fsubr
test
leave
sbb
adc
add
loope
nop
cmpsl
ljmp
fs
shrb
sub
stos
dec
pop
cmp
xchg
and
sbb
aam
jecxz
xchg
ret
lods
cmp
jns
aad
cmc
adc
mov
xor
dec
mov
xor
mov
dec
dec
jge
dec
ljmp
xor
test
js
jns
in
lods
mov
pop
and
push
sti
in
jb
mov
psubq
gs
or
jecxz
inc
pop
sbb
in
scas
pop
ficoms
and
xchg
or
and
bound
cmpsl
push
sbb
jnp
pop
testb
out
fwait
cmp
and
out
aas
icebp
inc
loopne
cs
inc
shll
shll
add
das
movsl
adc
lret
andb
sub
adc
mov
jb
mov
mov
pop
pop
neg
xchg
int3
les
movsb
and
loop
int3
cld
repz
push
sub
mov
xor
xchg
loop
lock
sbb
sarl
test
and
sbb
fdivl
js
pop
cwtl
mov
push
jp
cmp
jl
in
push
pop
dec
test
lea
pop
orb
pop
stos
mov
push
dec
int
pop
cmp
sub
push
lcall
shlb
xchg
popf
out
dec
mov
cmpsb
xor
push
sbb
imul
call
jo
mov
cmc
jl
mov
lea
lock
in
aam
daa
in
pop
push
or
mov
xchg
out
pop
fst
out
add
mov
pop
cmp
xchg
jg
mov
sub
repnz
sub
dec
je
sbb
cmp
push
mov
rclb
xchg
pop
shl
lcall
add
xor
fucom
mov
test
clc
xchg
cs
pop
add
adc
dec
mov
push
clc
pop
jge
lahf
cmc
aad
mov
pusha
sti
pop
cmpsb
out
mov
push
mov
lahf
mov
imul
xchg
mov
popa
jmp
cwtl
or
fisubl
push
cmp
jbe
pop
sahf
xchg
lret
enter
push
repz
and
aaa
addl
inc
mov
test
push
cs
push
xor
shl
and
fldenv
push
cld
dec
cmpsl
inc
stc
and
mov
mov
dec
cmpsb
imul
imul
rcrl
adc
inc
lret
adcl
mov
test
mov
push
sbb
cltd
aam
adc
jb
and
call
test
mov
loop
cs
js
cmc
push
sub
dec
ret
dec
aaa
jns
mov
cmp
adc
addr16
inc
mov
mov
bswap
pop
mov
xchg
lcall
add
ljmp
sub
aaa
sbb
lods
adc
cmp
push
fnstcw
sbb
cwtl
test
and
addr16
dec
sbb
adc
mov
inc
lret
add
cmpsl
push
dec
jo
push
and
fldenv
scas
jmp
sub
adc
cmpb
imul
jl
and
jmp
push
int3
xchg
pusha
push
call
push
stos
cltd
mov
or
icebp
sahf
pop
jns
push
jbe
ss
sbb
inc
adc
xchg
mov
xor
mov
pop
sti
stos
lret
sub
add
mov
pushf
lock
push
cmp
pop
insb
adc
addr16
adc
sub
bound
mov
add
adc
push
jp
xlat
adcb
xor
or
jecxz
ffreep
cmp
add
and
jae
pop
cmpsb
lods
and
xor
mov
add
outsb
in
add
test
mov
sbb
mov
lock
fdivs
jge
data16
jge
xlat
addb
rcpps
iret
ret
mov
or
icebp
cmp
rcrl
lahf
call
jbe
or
jp
jnp
insl
pushf
add
and
add
xchg
sub
popf
lret
or
push
mov
popa
mov
roll
pop
bound
mov
add
lds
ds
cli
lret
jle
and
push
rclb
sub
sub
int3
mov
xor
out
repz
jmp
sti
cwtl
cmpl
enter
jg
call
cli
add
scas
ss
lods
mov
xor
into
xor
adc
jae
stos
cwtl
es
or
jo
fsubs
add
sbb
daa
inc
adc
xor
inc
scas
scas
loope
ret
loop
jge
mov
cwtl
push
incb
xor
fidivs
pushf
xchg
sub
or
jae
mov
movsl
cs
imul
jno
push
cmp
mov
cs
mov
loope
or
iret
lock
stc
or
and
out
andb
jle
add
jo
ret
aad
jb
xor
push
mov
cmpsl
insb
and
popa
mov
pop
lret
dec
je
dec
push
mov
cs
lret
shll
push
inc
loop
jl
push
sbb
subl
adcb
push
cmp
or
xchg
imul
enter
rcll
ffree
aad
nop
popf
sbb
fs
scas
and
lahf
dec
xor
mov
enter
adc
lods
call
mov
lret
loop
adc
pushw
das
mov
hlt
sub
add
sub
pushf
jge
stc
call
bound
aaa
pop
pop
pop
sbb
dec
mov
cmpl
adc
stc
pop
push
mov
clc
xor
jle
clc
ret
in
cmpsb
sub
and
jne
pop
pop
xchg
mov
and
and
mov
add
add
jle
and
scas
loop
jmp
fistpl
stos
inc
xchg
shll
cmp
dec
dec
scas
mov
adc
mov
mov
mov
je
add
push
mov
aas
mov
jmp
mov
stc
jae
pop
mov
popa
mov
push
adc
inc
xlat
cmp
stos
std
fmulp
jp
repz
repz
fstps
icebp
and
xchg
loope
sub
js
shrb
inc
sbb
add
cmp
mov
mov
fstl
stos
mov
xor
test
call
imul
sti
xchg
xor
arpl
dec
fdivs
cmpsb
jns
enter
gs
ret
leave
xchg
jmp
pop
test
testl
pop
xchg
mov
jno
movsl
push
jnp
into
loope
adc
and
adc
xchg
xchg
sub
and
adc
scas
push
lds
sub
testl
xor
inc
aad
cs
cmc
mov
pop
cmpsl
xor
xchg
pop
adc
push
and
cli
lret
cmpsb
xchg
pop
mov
push
mov
xlat
cli
in
stc
into
fidivl
imul
bound
xor
dec
addr16
repz
jb
fsin
adc
ret
jmp
vorps
push
jae
adc
push
and
jge
sbb
loope
jg
cmp
les
test
and
dec
int3
hlt
out
bound
push
adcb
jae
sbb
cmp
rcll
cli
xor
popf
pop
rcr
cmp
cmpsb
lea
sahf
mov
sub
mov
test
xor
mov
mov
int
insb
test
fdecstp
in
in
pop
and
pop
lcall
xor
dec
sub
add
test
push
pop
adc
test
sbb
sbb
mov
jecxz
andb
xchg
orl
sbb
insb
xor
sub
sub
jbe
popa
pop
sbb
je
orl
fdivl
in
and
pushf
mov
dec
jge
bound
push
xchg
imul
test
decl
je
pusha
testb
adc
xchg
pop
mov
mov
shlb
cld
decb
push
cmc
orl
adc
cmpsb
cld
xchg
les
add
xorl
pop
les
sar
xor
pop
xor
addb
outsl
ja
xor
cmpsb
stos
lcall
mov
sub
mov
in
mov
scas
mov
jae
sbb
cld
repz
call
decb
add
push
push
adc
push
arpl
mov
or
pop
mov
lods
icebp
mov
pop
adc
paddusw
lds
outsb
fptan
pop
xchg
push
aas
mov
xchg
pop
orl
mov
pop
mov
lock
es
add
jecxz
imul
mov
stos
xchg
xor
jne
xor
push
mov
mov
es
int3
pushl
icebp
or
and
cltd
adc
orb
test
pusha
jnp
jbe
cmc
sbb
pop
in
adc
cld
cmc
inc
mov
cmp
mov
inc
imul
push
sbb
push
cmp
jns
pushw
subb
pop
cmp
pop
push
aas
imul
out
mov
mov
adc
adc
test
in
xchg
ret
fidivrs
data16
das
mov
bound
and
push
mov
push
ds
and
jge
xchg
dec
or
loope
dec
test
xor
jl
pushf
inc
jno
loopne
mov
rcl
push
push
push
fistpl
inc
in
jb
fs
xlat
loope
xchg
mov
mov
dec
decb
in
push
nop
push
cmp
and
cmp
mov
push
push
pop
jmp
scas
imulb
pop
in
test
icebp
fdivrs
and
jl
clc
or
pop
mov
adc
add
call
cld
test
mov
leave
sbb
mov
xor
scas
ljmp
out
clc
sub
mov
out
sbb
pop
out
push
xchg
cmp
pop
dec
sub
pop
arpl
js
inc
add
jae
out
push
pop
xchg
shll
stos
shrb
lret
int
xchg
pop
std
rcl
xchg
sbb
sbbl
or
inc
push
cwtl
xchg
and
aad
sahf
in
mov
aam
jae
adc
fnstcw
add
loopne
movsl
pop
test
pop
push
ds
mov
jb
adc
fidivs
movsl
repnz
lods
push
push
outsl
mov
push
add
imul
fs
mov
je
addr16
daa
or
ljmp
ds
adc
jp
xchg
adc
ljmp
arpl
addr16
ret
mov
inc
ret
negl
or
mov
repz
mov
push
push
in
sbb
ljmp
xchg
or
cmp
int3
xchg
cmp
lcall
mov
andl
jne
push
xor
and
fwait
scas
es
shll
sub
hlt
rorb
in
repnz
cmp
test
mov
sbb
cmc
repnz
scas
cmp
call
and
shrb
push
or
lea
sti
or
lea
fstl
inc
cwtl
jb
pop
or
xchg
push
test
pop
or
cmpsb
mov
mov
int3
sub
lcall
bound
xor
int3
mov
lea
jae
mov
in
lret
jecxz
xlat
loope
push
test
mov
sbb
sbb
xchg
add
fisttpl
xor
movsb
inc
outsb
inc
and
in
jge
mul
das
imul
add
xchg
or
push
popf
cmp
imul
lds
mov
mov
ljmp
aas
dec
rcl
dec
and
and
lret
xchg
cmp
sahf
sbb
ficoms
repnz
sub
fildl
xchg
dec
pop
sti
les
mov
cmpsb
jg
hlt
mov
imul
cwtl
push
cwtl
add
add
cmpsb
or
cmpb
adc
xor
or
sbb
fs
out
sbb
push
xor
cmp
call
out
push
pop
lds
inc
mov
push
icebp
or
scas
push
std
pop
scas
jle
imul
inc
pop
inc
and
in
test
scas
sub
push
xchg
mov
jbe
add
ficomps
xchg
lea
rorb
loop
das
push
cli
flds
repnz
sbb
stos
and
int3
into
xor
pop
and
xor
push
sub
jmp
ljmp
cld
ret
nop
push
mov
shlb
inc
adc
fiaddl
mov
or
pop
aaa
lods
aam
insw
movb
push
push
sbb
dec
fs
xchg
ja
iret
ret
rol
xchg
loopne
push
add
arpl
mov
ret
jns
add
leave
stc
and
cltd
lahf
imul
add
addr16
enter
push
loopne
inc
jecxz
sub
pop
or
repnz
dec
or
mov
gs
cmp
adc
jl
adc
aaa
dec
push
push
and
inc
sbb
adc
fwait
jae
dec
xor
push
jecxz
lds
mov
jno
arpl
mov
addr16
push
stos
imul
xchg
shr
dec
pop
popa
sub
xor
cmp
mov
ficoml
ficoms
push
sbb
inc
mov
add
ja
test
ss
cwtl
mov
push
mov
adcb
mov
cmp
dec
fs
dec
scas
leave
sti
jns
out
jp
xorb
imul
sbb
mov
pop
notw
dec
adc
mov
mov
mov
rcrb
popa
mov
jge
mov
das
push
stc
mov
push
add
push
xor
adc
mov
push
nop
shrl
aas
cli
push
mov
cmp
xlat
cmc
xchg
mov
or
push
out
bound
cmpsl
push
pop
mov
sub
pusha
pop
daa
xor
xor
insl
popf
into
repnz
dec
adc
mov
ds
int3
fidivrs
in
xor
inc
xchg
faddp
arpl
movsb
inc
insl
call
or
push
cs
das
xor
sub
jecxz
cld
js
out
jae
pop
icebp
xorb
push
sbb
push
jecxz
add
arpl
push
inc
rorb
das
inc
pushf
rcrb
sbb
dec
lret
cmpsb
lret
test
stc
leave
push
sub
lea
repnz
add
or
test
fistl
popf
xchg
int
xchg
idivl
and
sbb
sbb
movsl
lock
popf
js
stos
rorl
xchg
mov
push
cmpl
push
lret
lcall
sbb
sub
lahf
xor
add
icebp
js
pop
sti
jne
and
shll
aas
daa
and
push
xor
push
aaa
sbb
mov
adc
inc
sub
inc
imul
fabs
inc
add
rclb
test
icebp
mov
sbb
out
fmul
add
cmp
mov
dec
outsb
and
sbb
in
dec
aam
iret
cmpsl
xchg
negb
dec
and
insb
lcall
cmp
lock
lods
js
xlat
jp
cltd
add
es
push
cmp
insl
repnz
insb
cmp
js
insl
lahf
cmp
fidivrl
push
xlat
aaa
inc
testb
mov
ljmp
push
dec
and
add
mov
shll
movsl
xchg
ss
add
sahf
and
cmp
fdivl
and
in
pop
aas
sbb
rcrb
mov
cmpsl
into
cmp
jnp
lret
jae
sub
outsb
bound
or
xor
dec
and
fstps
in
add
mov
pop
dec
aam
mov
sbb
xor
inc
fwait
pop
or
pop
cmp
out
mov
lcall
jns
push
xchg
ds
or
arpl
push
fbstp
and
ss
mov
cltd
and
jg
push
sbbb
cmp
jns
lcall
arpl
cmp
inc
lock
add
jnp
insb
testl
jae
pop
push
leave
push
adc
mov
push
out
dec
imul
lcall
pop
fists
adc
ret
movsb
movsl
rol
les
cltd
shrb
sahf
les
ss
jle
es
inc
jnp
fdivs
dec
lcall
outsl
lahf
jecxz
pop
icebp
or
lods
daa
in
pop
mov
mov
cwtl
out
mov
cmp
sbb
and
int3
xchg
sbb
adc
mov
xchg
test
mov
jp
fbstp
sbb
pop
outsb
sbb
sub
pop
lods
aaa
btr
rclb
mov
loopne
pushf
sub
pop
inc
out
xor
mov
mov
mov
mov
ret
in
mov
push
mov
jbe
pop
cld
jo
or
arpl
xlat
test
cmp
repz
lahf
cmc
into
mov
pop
outsb
scas
in
mov
ds
sbb
fistl
in
movsb
fs
cmpsl
jecxz
sub
cmp
dec
test
in
adc
mov
testb
or
scas
outsl
jmp
mov
jb
int
cmpsb
xchg
shll
bound
sahf
xor
cmp
lock
das
insb
xor
or
sbb
push
xchg
icebp
jge
data16
clc
cmpsl
popa
aad
mov
leave
inc
mov
jb
dec
cmp
pop
scas
imul
fmuls
in
in
cs
stos
add
fbstp
xchg
std
pop
and
enter
outsl
or
int
push
xchg
and
jge
scas
mov
xchg
mov
mov
push
xchg
dec
mov
sbb
subb
popf
loop
stos
imul
ja
in
inc
ja
and
gs
push
nop
xor
test
ret
gs
pop
mov
pop
outsl
sub
mov
dec
rcr
lcall
stc
jo
add
xchg
push
cmpsb
mov
mov
xorl
cltd
jp
mov
int
mov
jecxz
icebp
int3
int3
xor
cli
scas
cmp
jmp
enter
xor
idiv
sub
sbb
xor
mov
or
stc
jg
mulb
push
popa
push
xchg
std
mov
xchg
andl
fadd
cmp
xchg
xor
add
inc
loope
mov
popa
pop
jg
and
loop
mov
ljmp
imul
lahf
push
cltd
out
pushf
mov
xor
jmp
dec
mov
js
iret
ljmp
adc
cmpl
xchg
daa
add
in
push
lcall
cltd
icebp
jbe
ret
ret
xor
test
imul
mov
mov
daa
add
setge
cmp
inc
out
mov
pop
fsubrs
or
test
push
cmp
fildl
negb
pop
cmp
jl
or
xor
popa
adc
inc
sub
popa
push
jnp
mov
xor
leave
test
ja
and
xor
imul
sbb
call
mov
mov
mov
rcrl
mov
mov
lods
jecxz
cmp
jb
jne
and
xor
mov
push
mov
imul
jg
insb
shll
iret
sub
sbb
shl
jae
sbb
or
out
and
dec
ljmp
xor
outsl
ret
repnz
adc
mov
mov
hlt
xor
and
pushf
cs
in
int3
cwtl
lret
fs
js
cmpsb
ret
xchg
fnstsw
xchg
dec
xchg
aas
dec
cli
add
pop
push
cltd
sbb
xchg
cmpsl
lcall
cmp
cmc
and
jecxz
sub
lods
cltd
sub
mov
daa
out
mov
xchg
sub
dec
dec
fisubrl
sub
inc
pop
xor
add
jnp
push
lds
in
fisttps
int
cli
fdivl
dec
and
hlt
dec
cmc
pusha
fiadds
xor
cli
cmpsl
daa
mov
sbb
loope
stos
daa
mov
pop
jl
leave
and
loope
fcmovnu
scas
add
cld
sbb
or
adcl
sarl
lret
mov
shll
and
das
dec
add
cmc
sub
push
adc
out
addr16
pop
jp
adc
call
mov
jge
ffree
negl
sub
testl
xchg
and
rcrl
inc
aas
dec
inc
mov
imul
jb
pop
xchg
cmp
sbb
xor
mov
adc
inc
adc
pop
xchg
outsl
pop
xchg
outsb
popf
mov
or
fldenv
pop
hlt
pop
les
jl
push
popf
adc
pop
lret
xor
push
adc
lea
rolb
cmpsb
push
push
jl
cmc
out
pop
fwait
push
mov
sbb
leave
icebp
xchg
outsl
sub
cmp
add
sbb
fmuls
and
sub
lret
es
fs
and
mov
int
add
dec
xlat
outsb
ljmp
jp
std
adc
push
call
shll
xchg
add
aas
pop
enter
push
and
xor
add
popa
jecxz
popa
daa
adcl
imul
mov
sbbl
pop
je
xchg
add
fimull
mov
jns
cmp
sahf
test
mov
sub
in
jbe
jg
shlb
push
lock
sbb
lods
cmp
shr
stc
jp
shll
sahf
xchg
aaa
mov
inc
rol
inc
pushf
outsb
xchg
push
push
fidivrl
pop
mov
cmp
mov
fsts
sub
cmpsl
out
xchg
jmp
inc
mov
outsb
mov
inc
pop
movsb
dec
xchg
or
aam
aas
xor
dec
pop
aaa
cmp
in
ret
sub
outsb
aam
popf
xor
inc
fs
xlat
jne
cmp
mov
jb
das
add
jl
sarl
cmp
insl
pop
lret
mov
mov
cmp
out
ljmp
data16
add
daa
or
cmpsb
push
pop
mov
xor
stc
shl
mov
orl
xchg
xchg
cmp
cli
in
adc
cmp
jp
mov
aad
fdiv
dec
daa
jl
add
inc
outsb
jo
lods
shlb
push
mov
repnz
mov
insb
or
xchg
mov
jbe
jns
jnp
mov
aas
xlat
sub
lahf
sbbl
inc
inc
insl
int3
arpl
cltd
pusha
popa
arpl
mov
jbe
repnz
mov
enter
cmpsl
dec
mov
mov
aas
in
movsb
call
sbb
imul
popl
and
dec
hlt
mov
xchg
faddl
and
sub
inc
lds
jbe
cmp
icebp
push
inc
mov
fs
adc
stc
push
or
das
ds
dec
xor
and
outsl
notl
cs
movsb
fcom
sbb
xchg
jns
mov
xchg
add
nop
sub
cmp
push
mov
cmc
lahf
in
push
sar
fisttps
cmp
or
jbe
mov
add
ss
and
nop
or
cld
popa
test
jl
push
xchg
lahf
sbb
stos
shl
cmp
push
adc
es
stc
mov
fstps
push
push
mov
dec
adc
mov
pusha
test
fisubs
and
jnp
jge
mov
bnd
mov
icebp
lock
jecxz
push
xor
in
pop
int
data16
mov
sub
dec
flds
rol
add
sub
jmp
mov
lds
into
popl
xchg
mov
cwtl
cmc
fimull
push
pop
lods
xor
push
dec
inc
aam
or
inc
in
aas
xor
xchg
jne
sub
inc
adc
push
aad
ret
xlat
cmp
cmp
mov
mov
lahf
es
les
popa
in
test
and
pop
in
mov
cmp
loope
sub
inc
and
rcrb
leave
mov
xchg
xchg
jecxz
sahf
cmp
xor
outsl
pop
push
icebp
fcompl
push
imul
rsqrtps
push
sub
mov
push
aad
lahf
mov
negl
in
adc
test
inc
mov
imul
add
mov
leave
add
adc
mov
push
xor
shld
jl
pop
push
jnp
push
mov
aad
sbb
movsl
dec
push
in
ja
bound
stc
xchg
lods
adc
daa
push
mov
aad
jae
inc
call
dec
xlat
loop
mov
aas
test
aaa
and
sbbb
int
movsl
or
push
mov
jge
mov
mulb
inc
xlat
inc
ljmp
mov
and
jo
mov
enter
xchg
or
insb
loope
cmc
push
ret
fwait
lret
lods
std
inc
sub
fists
dec
and
mov
mov
pand
iret
push
ss
hlt
adc
cmp
cmc
cmp
mov
mov
sti
push
dec
stos
pop
mov
xor
pop
pop
push
xchg
lret
je
shlb
outsl
jo
sbb
mov
shlb
int3
fisttps
sbb
and
push
pop
and
push
imul
and
sub
jle
cmpsl
cmp
xchg
addl
nop
ja
scas
push
sub
jb
push
lds
in
inc
mov
loopne
pusha
xchg
inc
push
inc
divb
test
addr16
adc
xchg
fs
pop
xor
jno
cmp
int
mov
aas
xchg
push
xchg
inc
stc
je
mov
out
dec
fistpl
xchg
push
repnz
inc
pop
inc
leave
ds
mov
loopne
mov
shrl
jle
sbbl
rclb
jae
js
add
push
or
lea
stc
add
mov
push
mov
lret
test
jp
xchg
adc
sub
gs
and
or
add
fidivs
fsubl
mov
popf
jl
cltd
sbb
inc
enter
shrl
jno
or
in
rcr
imul
mov
and
sarb
aaa
add
shlb
mov
in
push
dec
adc
scas
cmpsb
sbb
dec
or
push
cmp
stos
scas
ss
out
xor
into
outsl
xchg
dec
xor
jmp
cmp
movsb
out
repz
leave
push
xchg
clc
nop
mov
fistpll
mov
mov
lods
int
xchg
cmpsb
cli
adc
mov
inc
loop
mov
and
inc
pop
sbb
popa
lret
nop
pop
jns
inc
insb
outsl
movsl
and
int
ret
pop
mov
hlt
subb
and
mov
fidivl
sbb
mov
add
mov
ds
mov
push
mov
pop
out
inc
add
js
pop
inc
xchg
vmwrite
cmc
mov
cmpsb
hlt
bound
push
cld
popa
and
or
mov
mov
dec
jno
pop
ja
lret
cltd
jnp
mov
pushf
pop
jmp
pop
xchg
ret
adcb
mov
xchg
in
std
xor
in
cmc
mull
stc
fcoms
mov
xor
subl
add
loop
push
sbb
push
fidivs
out
cwtl
insl
fcmovne
cmp
loop
in
push
cmp
adc
inc
mov
jns
pop
fdivl
sub
icebp
insb
addb
dec
push
jle
fdivrs
jnp
sbb
push
repnz
orl
lds
stos
in
xchg
hlt
xor
jbe
ja
gs
hlt
loope
out
xor
lods
push
adcl
mov
ja
loop
fstpl
sbb
mov
add
or
or
mov
dec
fisttpl
push
pop
push
fstps
xchg
pop
scas
fwait
push
lods
dec
daa
lods
fisttpll
cmp
shlb
sub
sarb
mov
fisubrs
dec
mov
pop
sbb
dec
pop
jmp
jnp
ret
push
xor
movsl
fcompl
es
xchg
mov
out
xchg
mov
stos
out
lahf
aad
push
call
loope
es
inc
lods
repnz
rorb
xchg
xor
pop
pop
test
pushf
daa
faddl
shrb
xor
cld
lea
xor
call
xchg
add
sub
pop
xor
mov
push
roll
inc
and
fdiv
sti
cli
ja
jne
cmp
push
lea
and
mov
cmp
stos
add
xchg
das
pop
mov
dec
lds
sbb
pushf
jbe
jae
cwtl
aas
push
adc
mov
dec
insl
cmp
pop
int3
aas
sub
movsl
xor
add
dec
xor
aaa
fiadds
push
out
lock
test
xchg
fisttps
cmpsl
pop
mov
push
std
pop
mov
pop
mov
movsb
cmp
jns
push
shrb
in
in
jmp
es
mov
or
jl
mov
into
hlt
imul
loope
psubusw
jo
jae
jne
aam
imul
test
repnz
cltd
add
mov
cmpsl
fst
aam
imul
mov
xchg
or
jecxz
cmpsb
jo
lock
sub
xchg
xor
int3
test
enter
das
pop
stos
lahf
mov
mov
sbbl
sbb
mov
loopne
popf
cmc
and
aaa
aam
dec
mov
cmp
movsb
add
sahf
mov
sbb
inc
mov
push
mov
push
pop
inc
mov
out
sbb
push
xor
pop
jle
sbb
test
cmp
and
test
cmp
jg
pop
imul
repz
mov
movsl
jo
bound
adc
sarl
jne
dec
pop
loopne
push
pop
xchg
sbb
sbb
in
in
call
add
mov
inc
xchg
rolb
mov
int
pop
xchg
loopne
leave
aam
adc
mov
push
stos
lds
adc
jno
cli
and
fidivrl
out
cltd
aad
out
sbb
call
bound
sub
int3
mov
lods
or
insl
mov
arpl
mov
cmp
jae
dec
std
add
mov
addr16
shlb
push
mov
mov
cmpsb
addr16
into
ret
insb
xor
adcb
push
xchg
xor
test
out
test
mov
add
pop
xor
mov
push
and
stos
stos
xchg
adc
xor
pop
fdivrl
out
xchg
faddl
mov
sbb
dec
in
loopne
jmp
push
mov
ljmp
and
insb
pop
dec
je
sub
js
rcll
and
shlb
jecxz
sub
sbb
fldcw
mov
inc
arpl
sarb
xchg
inc
dec
in
ret
out
and
mov
or
jo
push
hlt
loop
xchg
repnz
repnz
push
xchg
inc
cmp
and
nop
or
stos
dec
push
out
outsl
fcmovnbe
or
dec
push
mov
push
lcall
mov
out
push
testb
lret
nop
arpl
xchg
adc
xor
mov
lods
mov
bound
nop
or
or
mov
into
sbb
dec
xor
jge
inc
repnz
jge
xor
mov
jl
inc
pop
movsb
jae
popf
push
fwait
inc
in
sbb
dec
mov
adc
loopne
mov
jecxz
ficoms
sub
dec
insl
pop
stc
cs
push
mov
sub
icebp
test
jnp
subb
inc
mov
mov
jg
icebp
lcall
cmpsl
and
rol
mov
sahf
and
adc
dec
pop
cltd
mov
imul
sbbb
scas
sbb
leave
gs
xor
bound
mov
adc
orb
in
push
push
or
in
aas
outsl
lahf
scas
movsb
scas
jno
mov
loope
sub
pusha
ljmp
jb
xor
cmp
popf
jbe
cli
rorl
add
xor
loop
hlt
in
aas
test
lcall
imul
pusha
std
push
int3
or
mov
cmpsl
sbb
jmp
jo
jl
pop
inc
and
mov
add
pushf
imul
sub
bound
cmp
sub
cmpsl
mov
jl
sbb
mov
push
out
inc
iret
cmp
fisttps
xchg
push
leave
jnp
adc
pop
popf
xor
es
or
pop
call
mov
arpl
xchg
mov
shr
hlt
hlt
cmp
and
push
hlt
push
popa
xor
mov
pop
call
repz
adcl
cmp
jg
ret
dec
jae
sub
iret
fadd
lret
mov
lea
or
out
xor
imul
and
jae
mov
faddl
insl
inc
es
test
lret
movsl
jo
xor
clc
out
inc
jmp
sub
fldcw
mov
sub
and
lcall
insb
pop
cmp
stos
rcrl
inc
pop
rcrl
gs
push
pop
daa
jecxz
mov
lds
adc
iret
dec
cmp
pusha
pusha
das
mull
push
push
cmp
jg
add
int
pop
jns
pushf
rcl
jae
xlat
jno
jle
mov
mov
mov
jp
lea
pushf
insl
jno
je
sbb
or
push
jne
cs
cmc
jne
cmp
mov
jb,pt
adc
outsb
mov
sub
lds
dec
mov
imul
negb
jae
sub
ret
sub
outsl
loopne
push
mov
mov
push
sub
icebp
inc
xor
fisttpl
lods
xlat
pushf
enter
test
push
popf
mov
or
push
stc
in
mov
popf
jg
or
mov
jge
or
pop
inc
xchg
dec
fcomps
inc
sub
adc
lds
or
in
push
les
lea
iret
mov
and
adc
inc
jbe
cmpsl
lods
jge
cmp
or
pop
xchg
lret
test
xchg
mov
sbb
push
movb
pop
shr
and
das
jb
out
dec
aas
xlat
ja
mov
lds
je
aad
sbb
xor
add
addr16
push
jp
lahf
lret
and
xor
cmp
push
rol
loopne
sbb
jge
cmp
mov
gs
xchg
jno
and
aam
imul
out
ret
mov
pop
dec
mov
jo
mov
xchg
lea
jb
jns
mov
push
gs
adc
scas
xor
mov
sbb
out
sahf
rcll
add
out
push
jbe
fucom
cmc
add
sbb
sub
imul
ds
ss
pushl
je
sub
dec
inc
mov
push
out
or
in
bound
and
test
dec
inc
mov
jg
sub
in
es
and
in
jg
int3
mov
inc
test
xchg
je
mov
jmp
scas
pop
jno
mov
mov
popa
xchg
stc
adc
and
xchg
loop
daa
imul
dec
xor
xor
gs
out
or
enter
inc
imul
aad
dec
xchg
mov
adc
in
push
lahf
cli
call
xor
rcl
movsl
pusha
out
mov
mov
dec
push
mov
sub
call
and
mov
mov
pop
popf
dec
leave
and
lods
sbb
ja
xchg
adc
jno
pop
out
stos
jb
cmpsb
pop
ds
testl
mov
jnp
mov
or
orb
add
cli
pop
add
hlt
jl
sbb
aaa
movsl
cltd
or
fidivs
push
out
clc
dec
insl
sahf
add
test
test
xchg
mov
xchg
xlat
fs
add
xchg
leave
les
push
je
rorl
test
push
clc
bound
pop
sub
mov
cltd
aam
adc
into
cmp
mov
pop
call
stos
push
or
mov
sarl
jb
add
pop
mov
add
lret
add
push
scas
add
shll
jbe
int3
mov
lcall
pushf
mov
pop
or
pop
xorl
stc
and
and
mov
mov
add
repnz
push
mov
jns
outsb
pop
pop
out
or
jle
out
fidivl
popf
movsw
fdivs
lahf
test
jno
das
jge
std
xchg
and
fisubrs
mov
pop
test
adc
cmp
mov
loop
movsb
inc
out
daa
test
adc
out
mov
rcll
imul
add
enter
mov
jnp
clc
adc
andl
psubd
pop
scas
stos
stos
fnstenv
subb
repnz
ss
and
shlb
sub
rclb
mov
jne
mov
jbe
cmpsl
mov
shll
adc
or
jg
pop
xor
rcr
out
inc
cmp
sarb
sarb
insb
jae
adcb
xchg
lcall
xchg
add
outsl
mov
lds
sub
cmp
fcomi
test
mov
ljmp
aam
pop
dec
mov
shrl
xchg
stc
adc
insb
hlt
mov
mov
cld
mov
shrb
imul
daa
dec
and
rcll
enter
loop
mov
cmp
into
je
jle
push
loope
out
sbb
jns
repz
out
and
pusha
repnz
gs
xchg
sbb
inc
inc
mov
iret
pop
inc
cmpsb
pop
jne
pop
lods
and
inc
lret
or
adc
rorb
incl
xor
sub
imul
out
jb
cmp
loop
xor
or
cltd
mov
dec
mov
rcrl
scas
and
push
int
mov
orb
mov
dec
repnz
ds
cmpsl
and
add
rcll
and
mov
dec
sbb
push
push
sbb
push
fyl2x
and
stos
and
and
mov
neg
int3
scas
pop
cs
mov
xchg
and
and
pop
lret
or
outsl
outsb
rorl
dec
jb
jnp
shr
dec
sbbl
loopne
popa
mov
or
xor
pop
jo
cmp
bound
fwait
rcll
mov
in
mov
cmp
lcall
cwtl
mov
cmp
xchg
add
sub
sbb
xchg
pop
xor
xor
jecxz
xchg
nop
mov
xchg
movsl
push
jmp
sub
jo
mov
lret
dec
leave
mov
jecxz
cmpsl
nop
sub
adc
and
mov
shr
bound
pop
fnstsw
aad
mov
inc
fdivrp
xor
sbb
mul
int
cs
movsl
inc
cmp
adc
push
lahf
xchg
daa
sbb
hlt
xor
sub
jb
mov
outsl
ljmp
and
cmp
pop
pop
xchg
xor
mov
mov
in
mov
xchg
push
pop
outsl
nop
popf
jb
dec
xor
outsb
adc
jb
popa
pop
pop
cmp
daa
and
dec
ss
mov
insb
push
lret
daa
xlat
out
mov
mov
stos
out
xchg
into
arpl
sub
xchg
push
std
jae
lods
or
and
pop
pop
test
xchg
push
adc
pop
cmp
inc
es
jl
pop
stc
mov
push
mov
mov
out
in
stos
fdivrl
subb
es
cmc
sbb
inc
xlat
push
cmp
sub
or
ror
sahf
idiv
cmc
sbb
xchg
movsb
out
cmpsl
xor
jno
roll
mov
loope
add
addr16
loopne
push
sub
dec
das
mov
lods
fimull
movsl
xchg
fimuls
jle
and
jl
ja
inc
lcall
mov
in
pop
cmp
data16
or
xchg
jbe
es
mov
mov
inc
sbb
aad
in
ret
leave
push
xchg
add
mov
addl
ja
jne
sbb
jno
cmp
fisubl
inc
test
xor
cmp
out
pop
insb
notb
adc
mov
pop
jecxz
pop
mov
pusha
movl
nop
mov
mov
orl
divl
mov
lcall
dec
cs
mov
fnsave
int
cld
ror
movsl
push
sub
fcmovnbe
push
sub
clc
jne
xchg
fidivs
pushf
xor
lret
lds
pop
and
out
mov
adc
adc
movsl
ss
sub
sbb
fmul
pop
pop
jne
push
imul
dec
jb
imul
xor
test
jecxz
push
mov
pusha
or
ja
cwtl
outsb
fidivl
repnz
movl
push
stc
out
jbe
in
addr16
push
or
pop
cmp
lret
and
inc
mov
or
push
cmp
mov
dec
jge
std
xorb
or
mov
outsl
inc
insl
jne
jae
insl
lret
in
loopne
push
dec
mov
bound
mov
frstor
dec
dec
push
movsl
push
ret
cmc
ljmp
std
in
orb
mov
mov
xor
mov
dec
in
sub
ja
xlat
fidivrl
or
cmpb
jp
fbld
mov
push
ljmp
inc
addb
cmpsl
xchg
jmp
ljmp
push
xchg
or
mov
push
ljmp
mov
aas
push
test
or
movsl
xlat
aaa
adc
fldl
xor
fadds
pop
dec
pop
sti
add
and
test
stc
pusha
add
adc
std
add
adc
sub
in
das
inc
mov
mov
sub
mov
dec
dec
daa
cmp
dec
or
out
sbb
shll
xchg
push
imul
bound
addb
loop
les
ss
or
mov
int3
ret
xchg
ror
popf
cmc
lds
aad
add
pop
pop
jecxz
lods
cli
xchg
push
outsb
sub
leave
cmp
rcr
mov
adc
or
in
je
aas
and
cmpsl
mov
rcrb
dec
dec
fldenv
into
push
pop
pop
push
xor
jns
push
sbb
mov
sbb
xor
jle
or
push
test
jg
imul
cmp
loopne
jb
stos
pop
sub
mov
rcll
daa
sbb
push
cmp
and
adc
dec
inc
mov
push
xor
adc
outsl
mov
popa
mov
push
insl
mov
rcl
pop
pop
push
jb
cmpb
xor
jecxz
call
mov
dec
dec
fdivp
push
cwtl
push
lds
fcompl
rcrl
pusha
ss
jmp
adc
imul
mov
in
mov
mov
daa
mov
data16
addl
jg
sub
jp
push
into
lock
ljmp
or
jmp
adc
insl
pop
sbb
push
mov
fldt
jno
add
mov
ds
bound
js
aad
mov
int
leave
or
aaa
xchg
popf
cmp
stc
mov
loope
lds
pop
aaa
mov
mov
pop
lret
xor
add
fucomp
cli
mov
mov
out
cmp
dec
inc
inc
sbb
pushf
daa
push
pop
push
cmp
pop
mov
mov
leave
popa
mov
add
out
push
push
add
pushf
sub
clc
icebp
sub
mov
xor
mov
call
fs
push
cmp
cmp
inc
push
mov
jne
inc
es
jp
lahf
fnsave
sbb
test
xchg
mov
push
in
mov
rcr
inc
sbb
xor
cmp
and
add
nop
xor
jecxz
cmpb
mov
xor
inc
fidivrs
xor
jb
cmp
aam
call
mov
imul
push
sbb
in
mov
push
cvttps2pi
dec
or
mov
iret
cmpsb
push
dec
jo
sbb
pop
movsl
sub
jg
test
sti
int
dec
sti
xchg
push
clc
out
add
gs
xor
inc
inc
and
movsl
mov
jae
cmp
fsubs
mov
aam
mov
pop
or
cld
push
jbe
imul
test
cltd
inc
adc
pusha
or
xchg
xchg
ss
or
jnp
push
jb
cwtl
dec
int
cmp
lret
and
pop
movsb
mov
xchg
outsl
clc
xchg
xlat
dec
or
orl
mov
dec
push
mov
int
or
dec
add
inc
lahf
cli
lahf
bound
loop
fildll
aas
stc
out
dec
adc
mov
mov
mov
test
loopne
and
pop
rolb
insl
fildl
fistpl
mov
xchg
inc
pop
ljmp
ret
sbb
in
pop
loopne
enter
movsb
xlat
es
mov
add
xor
mov
mov
adcb
sub
mov
jns
ds
xchg
push
adc
enter
insl
inc
add
lods
shrb
lret
negl
imul
xchg
xor
sub
mov
in
mov
clc
inc
jecxz
mov
push
enter
jae
sub
mov
or
outsl
fwait
jg
jns
je
push
sbb
out
mov
sub
scas
fmul
out
xchg
fnsave
insb
dec
xor
mov
jne
or
daa
mov
ss
mov
or
test
inc
cld
inc
test
mov
je
pop
fisttps
ret
mov
es
stos
mov
aas
add
popf
arpl
cmp
ljmp
pop
lret
int
push
mov
sub
ficoml
and
leave
mov
std
lock
sahf
addb
iret
rcll
into
fxch
stos
ret
jle
outsb
cmc
sahf
scas
nop
arpl
je
inc
adc
jecxz
imul
mov
pop
push
into
aas
xor
in
jns
ret
fnstenv
sub
stos
and
xor
jge
pop
nop
jnp
in
mov
addr16
push
sarb
add
push
outsl
push
aaa
mov
push
push
gs
push
adc
ficoms
sar
movsb
pop
adc
jnp
adc
inc
scas
icebp
ret
pop
cltd
lds
nop
dec
jp
jbe
mov
xlat
mov
inc
aad
or
aam
mov
iret
xchg
inc
or
clc
js
repz
int
iret
adc
insb
jle
sbb
and
push
mov
add
inc
mov
or
mov
lret
pushf
adc
cmpsb
dec
adc
lds
mov
jbe
lock
xchg
mov
inc
ss
insl
xchg
mov
inc
sbb
mov
jns
mov
fs
inc
incb
mov
imul
aas
fisubl
bound
aam
adc
or
mov
xor
cmc
int
fimuls
test
mov
loop
push
and
sbb
xchg
hlt
dec
lret
sbb
jnp
cmp
push
ljmp
imul
lock
sbb
stos
or
jle
ret
xor
cwtl
jae
inc
push
mov
stc
popa
out
enter
sbb
cmp
push
inc
dec
fstp
out
test
out
xchg
mov
xchg
pop
aad
and
repz
and
sub
sahf
lods
ret
gs
inc
cmp
inc
mov
or
pop
cmp
mov
mulb
xchg
sbb
cld
hlt
mov
lock
out
lock
sub
jge
push
loope
mov
push
sbb
fists
add
jb
push
fildll
lods
and
popa
pusha
sbb
stos
sarb
sbb
cmp
pop
mov
xchg
cmp
xchg
add
push
popa
mov
es
adc
jbe
add
mov
jnp
jbe
out
insb
imul
out
fwait
ds
fdivs
lea
and
add
inc
arpl
outsl
int3
xor
sub
xor
mov
jae
jae
pusha
ret
lock
or
push
pop
xor
mov
push
test
lret
mov
jmp
mov
out
jl
jae
sub
outsl
in
rcl
fisttpl
xchg
mov
xchg
mov
std
add
mov
rcll
std
mov
dec
ds
dec
mov
pop
das
clc
and
ss
pushf
fisubl
test
add
std
cmp
lcall
xor
pop
jmp
test
faddl
cmp
test
jb
pop
xchg
sbb
mov
push
out
mov
or
inc
sub
inc
outsl
test
out
pop
pop
out
std
jmp
mov
or
lret
push
jle
pop
adc
push
pop
icebp
push
cmc
lods
ljmp
push
stos
adc
movsb
xchg
or
pop
repnz
fldcw
inc
mov
bswap
pop
cli
repz
mov
sbb
inc
testl
ret
inc
repnz
cld
cltd
lret
jae
mov
add
dec
mov
adc
push
clc
ss
in
inc
xorb
iret
adc
pop
adc
lock
dec
sub
dec
adc
mov
cli
mov
adc
out
adc
inc
lds
mov
jne
shlb
and
or
dec
pop
and
sahf
jl
jno
in
inc
insl
jo
xor
movsb
mov
jb
lea
int3
dec
sub
scas
jmp
and
hlt
mov
cmp
mov
icebp
in
imul
mov
ja
sbb
gs
inc
adc
dec
lcallw
jp
rsm
lock
fwait
inc
jno
mov
into
add
stc
mov
mov
imul
call
mov
addr16
push
adcl
dec
mov
jg
dec
fwait
dec
sbb
and
jb
inc
add
mov
lret
xchg
push
ja
mov
clc
and
js
push
jg
inc
cmpb
xor
xor
mov
xor
out
inc
mov
push
pusha
stos
out
stos
outsb
popa
pop
adc
loope
push
movsb
jl
icebp
in
daa
pop
add
pop
jge
ja
iret
sbb
cmc
push
sbb
fadds
xor
sub
mov
jp
loopne
lods
mov
or
and
mov
xchg
ds
stos
addr16
sbb
ret
sub
aas
in
lret
mov
cmp
mov
pop
orb
lret
cmp
jo
or
pop
mov
push
sub
pushf
psubq
scas
push
jae
mov
mov
test
outsb
call
mov
cli
sub
pushf
cmp
mov
push
pop
testl
call
dec
fimull
incl
push
movsl
cmpl
gs
loope
nop
pushf
aaa
lock
dec
test
lret
out
test
rorb
arpl
jl
add
testb
cld
jp
out
das
insl
lret
iret
mov
xor
xchg
pop
pop
ret
mov
ds
movsb
mov
lea
or
rolb
jecxz
leave
out
sub
inc
dec
jg
mov
rorl
push
stos
xor
dec
push
push
lahf
movsl
sub
leave
mov
movsb
aam
mov
adcb
js
pop
int3
xchg
ret
xor
sub
jns
nop
repz
xor
std
jae
push
pop
and
push
bound
loopne
fldl
cmp
mov
mov
sub
sub
adc
dec
pop
xchg
mov
rolb
test
and
jecxz
inc
mov
push
xchg
mov
or
cmp
outsl
mov
push
sbb
cs
pop
aas
and
push
fstpt
ret
sbbl
leave
add
gs
mov
adc
arpl
fstps
movsl
cmpsl
xchg
lods
pop
pop
cwtl
loop
out
mov
aas
sbb
pop
bound
imul
mov
ds
cmc
xor
push
test
mov
in
push
adc
mov
jle
fisttps
movsl
popf
orl
sub
testl
xor
xchg
ficompl
sbb
sti
mov
cmp
dec
inc
adc
xor
add
fmuls
loop
cwtl
movsb
mov
inc
xor
jg
adc
call
pop
rcrb
lock
insb
and
in
lock
insl
jo
push
and
lods
mov
adc
fldenv
insb
outsl
cld
adc
stos
push
cmp
sub
jae
push
jl
fisttpl
out
ror
dec
les
lcall
inc
sub
pop
loop
and
mov
pop
scas
pop
pop
fidivl
push
or
das
cltd
adc
dec
not
jae
pusha
xor
cwtl
pusha
in
ret
xor
lds
xor
jo
xlat
or
inc
xor
mov
add
mov
xor
sub
inc
into
jnp
mov
dec
sub
lret
sbb
fdivs
cmp
testl
sbb
idivl
mov
lds
pop
shrl
mov
mov
push
inc
dec
pop
push
push
popw
pop
js
or
mov
cmp
dec
js
xchg
sub
adc
dec
data16
stos
aam
movsl
or
lods
pop
ss
jge
in
cmp
dec
stos
mov
test
mov
out
imul
mov
fstps
popf
mov
jns
in
push
dec
jbe
iret
mov
push
lock
test
incb
cltd
and
rcll
lcall
scas
test
mov
fidivrl
pop
push
mov
cmp
push
add
or
ljmp
cmpsl
mov
pop
cltd
push
jae
fsubl
and
and
xchg
andb
jnp
cli
or
add
pop
jmp
ficompl
aaa
fmuls
sbb
iret
stos
push
inc
loopne
dec
sub
add
adc
in
insb
enter
filds
sub
push
nop
dec
jle
push
xor
sub
sbb
leave
fwait
inc
add
aad
dec
aam
inc
jno
dec
mov
das
cld
shrb
dec
mov
jp
push
nop
push
sub
scas
inc
fstl
pusha
rcrb
mov
push
stos
lea
mov
mov
jb
and
cld
scas
fsubl
mov
in
sbb
mov
popa
popf
xor
std
or
sahf
pop
cmp
fiaddl
fs
ficoml
dec
cli
xor
out
out
orl
mov
push
js
ret
repnz
mov
iret
hlt
push
mov
jle
in
xor
lods
daa
mov
mov
cmp
cmp
or
xchg
jne
add
stos
int
loopne
xchg
pusha
imul
jno
push
mov
in
adc
movsb
sub
nop
fistl
in
negb
test
or
mov
mov
cmpsl
dec
cmp
insw
or
out
inc
mov
pop
or
inc
pop
repz
xor
daa
and
push
enter
fiadds
shrb
in
repnz
push
xchg
xchg
adc
xor
mov
test
pushf
push
bound
cmp
jg
mov
sub
ja
lea
bound
negl
cmp
fbstp
xor
sbb
mov
das
aad
mov
int
mov
int
rorb
ficompl
test
ficoml
sbb
int3
cmp
dec
out
mov
stos
je
outsl
in
dec
pop
xlat
outsl
stc
mov
lahf
call
sbb
cmp
into
stos
into
hlt
movsl
adc
data16
cmove
sub
jle
push
or
and
std
int
adc
ret
int
shll
inc
icebp
mov
nop
ljmp
push
inc
inc
fimull
outsb
icebp
fsubr
lret
je
jne
sub
cs
es
jne
cmp
sbb
adc
lcall
mov
cmp
fs
and
jge
and
add
arpl
fnstcw
adc
ss
xor
ljmp
lock
fdivrs
cmp
pop
add
out
stos
sbb
ljmp
rorb
imul
pop
cmpsb
shlb
adc
pop
mov
cltd
pop
add
lahf
pop
enter
mov
arpl
mov
loop
dec
mov
aad
repz
pop
inc
movsb
mov
in
push
or
push
xchg
pop
xor
mull
dec
icebp
enter
adc
jbe
fidivl
popa
xchg
into
movsb
stos
mov
ss
out
push
pop
iret
push
stos
cmp
mov
cmp
test
incl
test
cmp
jmp
pop
cmp
cltd
jl
loopne
jo
pop
xor
push
out
test
inc
leave
sarl
sbb
xchg
lds
push
test
test
cltd
or
push
addb
mov
adc
jbe
mov
stos
negl
lahf
fdivr
stos
mov
sbb
addl
cwtl
mov
jl
pop
fmulp
or
cli
mov
mov
stos
mov
inc
xchg
pop
cltd
pop
sahf
mov
mov
sub
data16
inc
jbe
or
scas
into
icebp
fnsave
ror
xchg
dec
sub
pop
stc
sahf
sbb
push
psubw
dec
dec
sbb
xchg
mov
jg
in
add
xchg
pop
pop
dec
inc
sbb
cmpsl
sub
xor
das
mov
scas
cli
adc
add
int
pusha
xchg
push
cmpsb
adc
imul
gs
shrl
ret
mov
fsubs
dec
in
mov
mov
cmpsl
inc
dec
cmp
jno
pop
pop
or
add
lret
mov
mov
dec
dec
int
fisttps
xlat
arpl
and
ret
sbb
out
ss
fwait
inc
pushf
jne
lcall
div
shlb
cmc
mov
xchg
mov
rcrl
loopne
xor
mov
push
and
les
imul
cli
adc
pop
mov
push
sub
xchg
rclb
sbb
fcomp
push
das
push
lock
adcl
fcomi
in
in
imul
ret
popf
push
ja
out
lea
or
insb
xchg
inc
aas
out
jmp
push
xchg
test
jle
inc
add
loop
xor
pop
inc
or
mov
mov
jb
push
mov
fisttpl
push
or
out
xorl
shl
sti
hlt
fiadds
add
ds
test
xor
lea
inc
jmp
mov
data16
lds
mov
xchg
sbb
insl
push
shll
sarb
outsb
in
dec
mov
dec
popf
pop
add
mov
in
push
push
leave
dec
orb
cmc
jmp
addb
adc
arpl
dec
adc
jl
dec
xchg
out
push
repnz
in
fldcw
ret
dec
mov
mull
dec
and
mov
lret
ret
push
imul
pop
push
leave
mov
mov
xor
push
mov
enter
cmp
scas
and
ljmp
mov
mov
xchg
xor
pop
pusha
ja
insb
lret
aas
icebp
int
data16
in
ljmp
pop
xchg
inc
mov
insl
sahf
cmp
arpl
jecxz
pop
fdivp
test
in
ficoms
fs
dec
scas
mov
and
ficomps
into
lcall
pushf
popf
stos
mov
and
or
push
xchg
fisttpll
in
adc
adc
lods
mov
test
ret
jne
lret
dec
or
clc
inc
sbb
xor
sbb
dec
push
test
iret
orb
out
shlb
mov
jae
inc
push
jne
ljmp
inc
ss
cwtl
inc
data16
imul
jne
imul
in
inc
adc
and
fisubs
rorl
aad
jnp
in
ljmp
push
in
fwait
inc
std
mov
xchg
ja
cmp
loop
pop
enter
jle
jl
fwait
lcall
jno
std
xchg
fs
xchg
mov
mov
pop
pusha
test
es
sbb
ja
insb
mov
cli
jmp
cld
mov
push
jbe
sub
cmp
ds
push
jno
mov
mov
add
add
out
fiadds
pop
imul
cwtl
dec
scas
push
cmp
aam
insl
add
fs
mov
cs
add
inc
test
add
push
push
loop
xor
adc
test
jl
test
mov
push
or
mov
cmp
inc
cld
cmpsb
int
xor
loop
sbb
lds
scas
popa
mov
imul
popf
inc
out
scas
mov
aad
outsl
adc
xor
add
ss
add
mov
std
cmpsb
jb
jle
xchg
mov
jl
mov
testl
sub
fstpl
popa
ficomps
mov
cmp
pusha
pop
add
dec
cmp
push
mov
jnp
rorb
or
movsl
mov
ss
sub
adc
cmp
in
repnz
clc
scas
dec
cld
xchg
xchg
out
dec
jecxz
mov
test
mov
imul
xchg
or
scas
shr
jmp
rcrb
adcl
or
js
jno
cld
push
add
aam
movsl
stc
icebp
lret
test
cmpsl
cld
xchg
push
aad
dec
sbb
mov
jb
lods
xor
jle
outsb
call
fmul
lods
mov
subl
push
mov
mov
fdivl
je
shl
xor
repz
jecxz
in
rol
sahf
xor
jo
arpl
push
jl
lcall
fimull
popf
cmp
jg
mov
add
bound
rol
push
xor
mov
mov
fstpt
push
loope
xor
out
in
in
adc
into
or
fistps
aad
rorl
out
fmul
sbb
mov
stos
test
cs
testl
and
sbb
inc
mov
mov
sub
sbbb
jg
stos
pop
pusha
dec
jb
and
ja
jg
repnz
je
mov
push
stc
mov
jno
pop
dec
ret
dec
loopne
pusha
imul
push
addr16
sarl
pusha
lock
sbb
stc
add
push
add
mov
sar
mov
sahf
mov
and
cmp
icebp
dec
or
lahf
mov
cmp
rclb
mov
cmpb
psraw
shr
mov
ret
test
aam
fwait
inc
cmp
jge
in
arpl
lret
movsl
adc
lahf
out
std
je
or
pop
xchg
adc
in
adc
xor
mov
jnp
int
in
popa
div
cmpl
out
or
jnp
adc
cmp
js
insl
insl
adc
push
mov
jns
shl
cwtl
push
dec
sbb
dec
int3
pop
andb
mov
pop
out
adc
mov
adc
jmp
aas
aas
dec
push
push
lahf
out
movsl
push
daa
cmp
sub
pop
lret
fisttps
frstor
js
sub
shrb
leave
xchg
mov
data16
add
mov
xor
loopne
push
sbb
and
lds
aad
outsb
gs
mov
jmp
cwtl
fimull
add
call
xor
roll
popa
outsb
jb
push
clc
sbb
add
pop
int3
repz
jl
add
in
sti
aam
adc
xchg
mov
inc
aaa
in
jecxz
movsb
jne
jae
xor
sahf
mov
andb
cmp
xchg
es
cmp
cmp
jg
jne
in
lds
loop
out
mov
aaa
xor
dec
push
cltd
outsl
mov
mov
adc
test
loope
mov
fisubl
dec
mov
push
xor
xchg
sub
push
ss
xchg
xor
and
xchg
popa
push
nop
ret
ret
mov
cltd
push
stos
dec
xor
lahf
fcompl
jns
ficoms
cmp
ret
std
lds
cmpsl
mov
sbb
xor
ficoml
test
sub
sbb
xor
aaa
pop
std
sub
jecxz
enter
mov
push
inc
int3
xchg
scas
and
js
fidivl
inc
add
push
cmp
mov
shrb
mov
xor
mov
mov
jae
and
mov
test
loop
sahf
cmpsb
nop
pop
mov
js
shrb
cmp
mov
nop
sub
scas
aaa
add
subb
data16
xor
jae
mov
dec
cmp
pop
xchg
loopne
push
repz
ror
movsl
mov
jecxz
aaa
imul
adc
shlb
ret
jge
lret
out
xchg
fucomp
loop
test
add
bound
imul
mov
and
and
lds
push
fucomi
push
outsl
sub
sbb
sbb
mov
adc
and
xchg
aad
jno
mov
xor
lret
cmpsw
scas
movsl
mov
imul
out
inc
lds
xchg
cmp
cmp
or
out
arpl
jmp
push
push
cmp
push
faddl
pop
adc
scas
xchg
cmpsl
sub
sbb
xchg
repz
shll
xchg
and
icebp
jl
out
dec
test
add
ficoms
ror
dec
into
push
aad
push
lcall
lock
jl
mov
xor
xchg
push
and
xchg
push
fs
adc
pusha
lea
mov
push
flds
ret
adc
lahf
jge
les
dec
in
cmp
int
push
pop
aam
push
mov
in
les
mov
mov
fsubl
mov
inc
pop
das
adcl
outsl
sbb
arpl
xchg
add
pushf
arpl
mov
sub
std
jne
mov
setp
outsl
mov
push
dec
mov
out
out
testb
mov
rorb
jg
loope
cs
clc
shl
out
sti
mov
mov
pop
jmp
mov
sub
pusha
adc
sahf
inc
jae
lcall
and
adc
xchg
dec
add
pop
mov
mov
lret
ret
sahf
mov
jo
test
imul
dec
sbb
mov
loop
lea
outsb
test
outsb
iret
icebp
pop
jmp
popf
jecxz
stos
and
mov
sbb
pop
outsb
mov
and
add
push
insl
xchg
ds
fisubrs
dec
rcll
and
mov
icebp
mov
lods
push
roll
jmp
in
arpl
sub
cld
decb
leave
xor
inc
inc
int
dec
cmpsl
sub
sbbb
in
aam
scas
lea
cmp
fld
je
pop
shrl
addr16
cwtl
mov
fs
aad
mov
or
fildll
orl
jbe
and
xchg
mov
rorl
test
mov
lcall
xor
adc
filds
adc
inc
gs
jae
mov
scas
leave
dec
ljmp
xor
push
add
lods
push
shlb
jl
add
push
fsubrl
or
cmpl
jecxz
dec
mov
into
fdivs
movsb
roll
xlat
jne
xor
int3
push
stc
pushf
ficoms
iret
cmpsb
ss
enter
scas
mov
mov
lods
xor
push
push
outsl
aam
dec
push
push
jns
and
xor
cmp
test
xchg
mov
jae
jb
cmp
xor
lahf
cltd
aad
cmp
test
fsub
fcompl
xchg
popf
mov
rclb
and
sub
std
test
in
push
mov
cmp
jbe
push
ljmp
lret
popf
cmp
in
add
pop
dec
imul
xor
mov
and
clc
inc
mov
out
jecxz
ret
xor
clc
clc
mov
cs
sub
jae
or
fwait
bound
cmp
rol
out
pop
test
dec
nop
push
jae
mov
or
jns
push
fdivr
push
sub
inc
mov
push
lcall
inc
jmp
sarl
popf
subl
clc
repz
js
in
jae
adc
ret
scas
test
xchg
jnp
mov
or
out
ret
pusha
ret
push
clc
ss
pop
sub
cltd
push
jp
sbb
xchg
sub
xlat
stos
xor
adc
stos
push
cmc
jnp
sarb
sahf
or
out
ss
jg
ret
pop
sub
inc
push
int3
inc
pop
add
cltd
xor
dec
arpl
je
cwtl
or
jge
loope
or
test
mov
subb
lret
dec
cmp
insl
adc
adc
cmp
jae
in
test
ffreep
call
mov
pop
sbb
mov
sbb
add
repnz
push
shl
jo
gs
inc
ss
jmp
sbbl
jno
jmp
imul
and
mov
jg
pop
ss
or
scas
or
scas
call
aad
xor
add
inc
sub
xchg
mov
fidivl
cmp
es
dec
inc
das
imul
in
ljmp
enter
xor
fadd
popf
xor
lods
insb
jmp
jo
cmp
pusha
pop
xor
loop
imul
sahf
fs
int
and
test
and
mov
and
ret
pop
popa
test
cmc
jp
xor
into
dec
pop
pusha
pop
addr16
mov
loope
mov
lea
xor
fiaddl
jg
out
jbe
sbb
mov
xchg
mov
mov
xor
loop
sub
xchg
xor
std
mov
cmp
dec
jle
je
push
or
ret
fcomi
mov
iret
aam
rorl
or
pop
ja
sub
lret
inc
push
out
cmc
xchg
push
cmpsl
or
mov
push
ret
mov
fistpl
stos
inc
movsb
loope
nop
sub
cmp
pop
movsb
out
sub
loop
ds
jecxz
loopne
pop
aad
fsubl
pop
add
mov
fildl
sahf
aam
out
mov
xor
stos
inc
rcrl
xchg
pusha
loop
lods
xchg
stos
in
and
js
or
enter
addr16
ret
pop
loop
mov
popf
rorb
or
sbb
push
push
fstps
insb
scas
je
movsl
es
mov
repnz
jmp
pop
pop
dec
adc
leave
lods
jb
nop
push
pop
inc
stc
mov
mov
and
mov
fidivl
mov
xchg
sti
cs
pop
pop
mov
lods
mov
pop
pop
cwtl
call
dec
add
sub
lret
loop
mov
nop
jge
imul
out
push
dec
adcl
push
xchg
gs
lock
dec
pop
jo
das
push
jle
jecxz
adc
adc
and
mov
bound
mov
inc
movsl
movsl
push
in
xor
mov
out
pop
int3
ret
xchg
sbb
jl
xchg
adc
aad
inc
out
lahf
fwait
js
xor
out
cmp
popf
and
push
jbe
js
clc
pop
loope
out
sub
inc
sbb
clc
mov
repz
imul
repz
mov
push
aas
sbb
jge
xchg
jns
mov
cmpsl
out
lods
cmpsb
xchg
insl
xchg
jl
sbb
lret
mov
and
clc
mov
cmp
and
into
lret
das
movsl
xchg
sbb
inc
cwtl
lcall
fsubr
mov
or
mov
ret
into
in
aas
and
push
enter
les
or
jmp
mov
call
stc
fadds
mov
or
call
dec
inc
sti
or
mov
popa
loope
sbb
sub
stc
aam
fdivs
and
sbb
icebp
add
mov
icebp
icebp
xchg
cmp
fldt
out
into
stos
sbb
jnp
cmp
jbe
es
fwait
stos
fsubl
mov
cmp
jmp
pop
sub
lea
aas
mov
movsb
test
pop
loop
jecxz
and
fwait
test
mov
mov
jae
ficompl
jmp
outsl
ficoms
xor
xchg
cmpb
jecxz
sti
jnp
push
push
clc
fwait
in
push
insl
or
dec
xchg
xchg
xchg
pusha
cmp
lret
xlat
pushf
stos
push
pop
or
adc
xlat
leave
out
divb
out
sub
mov
ficompl
jo
inc
jmp
fcom
jne
std
pop
pop
loope
out
mov
call
cmp
negl
fstpl
nop
sar
cltd
inc
ret
pusha
fsubrl
add
popf
mov
orl
xchg
jno
mov
mov
movsl
insl
dec
xchg
ja
add
scas
xchg
mov
gs
sbb
xchg
outsb
jmp
jecxz
push
adc
cmp
push
enter
fmuls
push
push
xor
fptan
dec
aad
stos
jmp
add
pop
int3
je
in
int3
outsb
clc
mov
xor
fldcw
in
out
cli
and
jb
jge
sub
lock
or
lahf
jns
fisttpl
cmp
xor
mov
ret
jns
and
jo
push
push
jb
pop
push
out
jo
or
cs
dec
int
xchg
cmpsl
test
imul
cmp
mov
aam
sarb
ret
sbb
adcb
iret
mov
push
push
ljmp
das
fimull
mov
daa
in
icebp
jmp
ret
mov
sarl
mov
fcmovbe
xor
out
iret
push
popf
into
or
adc
lret
mov
xor
daa
daa
inc
icebp
psllq
add
sub
jbe
mov
aaa
fcoml
cmpsl
or
mov
ret
hlt
int3
and
lock
xchg
mov
arpl
je
loop
xchg
push
pop
outsb
push
imul
inc
jmp
add
mov
mov
sbbl
cld
rorb
rcrb
shll
inc
pushf
pop
mov
pop
popf
fnsave
jnp
jmp
xchg
cmpsb
pop
ljmp
fwait
mov
es
xchg
dec
or
adc
fsub
mov
add
or
ret
or
pop
mov
adc
inc
or
das
aad
inc
push
popa
insb
jae
lea
mov
sahf
aas
adc
push
es
pop
clc
adc
xor
and
xor
mov
xor
out
push
mov
xchg
into
lcall
loop
add
loope
mov
fsubl
or
ud1
jp
movsb
push
lock
jbe
int3
xor
mov
outsb
in
ja
mov
sub
sahf
notl
int
mov
dec
mov
inc
sbb
fwait
cmp
fs
push
cld
fcmovnb
pusha
mov
mov
pop
pop
mov
pop
lcall
das
push
add
aas
into
lret
lods
cmp
pop
lcall
sub
push
adc
sub
jns
lock
in
sbb
lods
sbb
dec
popf
leave
aam
fldenv
je
xor
mov
into
bound
ret
pop
xlat
sbb
lcall
and
sarb
scas
push
mov
in
mov
mov
push
stos
fnstsw
jmp
pavgb
mov
adc
cmp
mov
jl
jecxz
sarl
dec
dec
jo
push
push
push
lret
dec
push
mov
fnstcw
lods
test
pop
inc
mov
int3
xor
mov
push
xlat
push
insl
gs
out
dec
or
adc
lods
sub
or
dec
sti
pop
sti
ficoml
mov
adcl
cmpsb
cmpsl
dec
imul
call
rclb
xor
enter
cli
sub
jne
cmpsl
decl
divb
insb
or
jmp
loopne
add
xor
lods
or
mov
fcmovnbe
sub
xchg
ret
and
xchg
jbe
scas
mov
jo
pop
mov
test
mov
xor
rorl
imul
sbbl
and
xchg
fldcw
and
les
mov
mov
xchg
or
lret
inc
in
or
idiv
rclb
mov
jne
xchg
push
mov
jno
pop
lahf
cs
lahf
lods
arpl
stc
inc
mov
lret
into
dec
or
mov
and
pop
mov
repnz
jb
rolb
xchg
xor
aad
icebp
arpl
fcmovne
xor
xchg
inc
cmpsb
ret
xchg
into
push
jne
stc
inc
insl
xchg
jl
pop
xchg
jo
push
pop
add
add
lods
dec
sbb
push
ror
cmp
add
xor
jmp
mov
movsl
sbb
and
jns
out
sub
rorb
jbe
cmp
adc
arpl
call
add
mov
add
adc
push
jbe
lods
push
mov
sub
adc
sbb
in
bound
adc
cmpsl
outsl
pusha
aam
fdiv
insb
fsubs
scas
insl
push
imul
xor
pop
adc
stos
inc
pop
loopne
ljmp
and
xchg
cmp
dec
cltd
inc
iret
arpl
inc
ret
jne
mov
pop
rep
out
sbb
sbbb
icebp
or
mov
add
icebp
mov
popf
popa
idivb
pop
mov
mov
jmp
mov
xchg
mov
imul
xchg
std
fs
test
fisubrl
mov
sbb
xchg
mov
out
and
and
pushf
push
stc
arpl
mov
imul
in
jecxz
cwtl
and
adc
xor
mov
inc
icebp
dec
sbb
jle
push
rcrl
int
push
in
cmpsl
xchg
add
ret
adc
daa
and
push
in
out
cli
xor
ret
mov
loop
jmp
sbb
mov
call
mov
add
fistpl
pop
sbb
xor
js
or
pop
in
divl
test
mov
adc
insb
sub
pusha
adc
fnstcw
mov
pop
lods
mov
adcb
shlb
repz
cld
push
leave
xchg
and
cli
in
add
fistl
push
inc
push
in
test
push
push
je
pop
aam
mov
jge
stos
sbb
insb
mov
mov
or
mov
mov
sub
pop
lds
aas
jg
dec
adc
cwtl
and
ss
fs
jno
inc
mov
adc
jge
repnz
ret
mov
inc
fwait
fnstenv
xlat
sbb
into
pavgw
iret
mov
sti
in
out
pusha
mov
mov
and
sarl
push
and
shrb
sub
fsts
mov
scas
sub
or
jle
cmp
loope
push
jmp
xchg
ret
mov
sbb
stc
inc
jge
arpl
push
cmc
fnsave
cvtdq2ps
out
scas
jmp
push
xchg
leave
imul
xchg
or
xchg
test
mov
xchg
lea
les
adc
xchg
insl
mov
inc
dec
mov
sub
cmpsb
test
or
push
insl
or
aas
sbb
dec
ss
push
add
jmp
arpl
jo
subl
pop
cld
icebp
in
js
lcall
xor
mov
fisubrs
jecxz
inc
adc
test
jmp
mov
cwtl
pop
ja
or
ss
cwtl
cmpb
out
scas
or
mov
in
mov
ds
push
mov
adc
bound
pop
and
jae
pop
adc
imul
js
jle
or
sub
cmp
out
lret
jne
inc
ja
cmp
adc
or
test
pop
inc
sarb
inc
sbb
dec
std
incb
fldl
out
mov
out
stos
jle
scas
lods
in
push
mov
test
adc
insb
rcrl
inc
orl
adcl
push
cld
pop
lahf
fisubl
or
loope
test
jne
dec
fmul
cmc
dec
addr16
xchg
xor
mov
push
push
pop
jns
jge
cli
jae
mov
push
add
add
mov
dec
add
xchg
jp
jecxz
dec
in
dec
sub
fneni(8087
and
cmp
dec
jmp
add
icebp
jnp
data16
lret
xor
enter
enter
aas
cwtl
add
xchg
push
inc
or
mov
insb
and
push
jecxz
xchg
test
pop
sbb
mov
ds
jnp
push
cmp
push
xchg
faddl
dec
lea
xor
lock
scas
mov
icebp
xchg
push
cmp
inc
movsb
frstor
test
shll
pushf
inc
lods
xor
outsl
sub
hlt
les
fstl
jmp
xchg
sahf
fdivrl
cmpsb
mov
inc
jns
in
add
push
and
inc
push
and
lcall
or
xchg
aad
lock
andl
mov
test
push
cmp
sub
add
subb
lock
lret
shl
ljmp
fsub
stc
and
add
sbb
push
test
xor
filds
fs
bound
pop
inc
mulb
pop
insb
cmp
pop
sbb
mov
mov
and
xchg
add
mov
pusha
xor
aas
jb
dec
jge
pop
cmpsb
pop
xor
xor
mov
in
mov
fisubrl
imul
fstl
in
xor
hlt
mov
xchg
loopne
sub
mov
mov
or
mov
inc
mov
test
pop
or
mov
sahf
jnp
ds
cld
xlat
pop
lret
enter
mov
add
jp
test
out
loop
and
jle
stos
dec
repz
inc
loop
xor
sbb
xor
loop
xchg
push
mov
mov
leave
fs
or
cmp
ja
imul
shl
xlat
jp
movsl
fsubs
xlat
xor
loopne
std
push
psraw
out
sub
sbb
lahf
fst
ss
cli
in
out
inc
jnp
mov
mov
push
xchg
dec
cs
inc
pop
mov
sub
mov
or
mov
inc
stc
cmp
out
jae
push
test
pop
js
test
jne
sbb
and
shl
fcos
je
push
rcl
in
addr16
lea
push
pop
xlat
sbb
pop
xor
aaa
aas
or
cmpsb
data16
in
out
daa
out
cld
xor
sub
jle
pusha
sbb
pusha
dec
sahf
add
mov
in
test
gs
pop
aad
mov
add
fiaddl
jg
dec
es
lea
lods
mov
adc
insl
sahf
dec
fdivrs
outsb
or
les
test
out
and
cmp
insl
jecxz
movsl
push
adc
lret
jle
rcr
jl
jmp
mov
test
mov
mov
sbb
leave
stc
sbb
adc
add
sbb
dec
hlt
and
int
push
cmp
cmpsl
mov
jne
sbb
inc
je
enter
dec
stos
arpl
rcll
cmc
sub
lock
cmp
das
push
push
ret
dec
iret
push
add
dec
icebp
sbb
jno
jl
and
dec
inc
es
ret
test
inc
xchg
xor
in
ror
inc
and
aas
and
mov
mov
je
and
iret
int
dec
lods
ja
push
enter
inc
std
sbb
movl
or
jl
sarb
and
mov
aas
out
cs
and
jb
mov
mov
sbb
bound
cwtl
lods
mov
outsl
xlat
xchg
dec
sbb
add
fnstcw
dec
mov
sbb
mov
bound
pop
in
jmp
repnz
and
xchg
jp
mov
push
lods
dec
mov
push
xor
pop
in
pushf
xlat
popa
fs
mov
inc
daa
shll
xor
ljmp
test
sub
scas
mov
mov
lret
pop
inc
rolb
mov
outsl
xlat
daa
fadds
in
cmp
out
sub
lret
movsl
cmpsb
push
loop
mov
gs
bound
jl
orb
pop
xchg
aaa
mov
das
nop
mov
dec
sub
ljmp
adc
mov
enter
xor
shlb
mov
cmp
adc
adc
jg
daa
vpsubb
xlat
ret
pop
fdivp
int
pop
dec
add
sbb
aad
xchg
xchg
xor
mov
lods
aaa
hlt
inc
out
xchg
mov
mov
pop
push
pop
sub
insb
jae
dec
andl
std
or
aaa
dec
sahf
mov
shl
jmp
stc
lea
test
and
sub
ficomps
sub
cmp
mov
sbb
pusha
or
xor
aad
mov
movb
cmc
push
pop
inc
cmp
sub
jmp
nop
inc
outsb
fadd
sbbb
test
fadds
outsb
repz
popl
ja
pushf
mov
mov
mov
jne
fistl
push
aam
add
pop
pop
or
jl
enter
xchg
and
jb
jmp
push
add
sub
mov
sub
cmc
mov
dec
and
testl
jl
xlat
ja
inc
mov
sub
icebp
mov
ds
pop
adc
push
adc
push
dec
add
ds
xchg
out
pop
cmc
pop
loopne
mov
xchg
test
sbb
icebp
cwtl
aas
push
test
sub
adc
out
and
sub
mov
pop
pop
ret
pop
or
push
mov
push
xchg
dec
pop
mov
mov
add
dec
xor
xchg
mov
aad
data16
cmp
ret
mov
adc
hlt
or
or
cmp
fimull
mov
cs
push
shrb
inc
inc
ret
data16
cmp
xchg
clc
repz
cld
inc
and
xlat
mov
daa
and
mov
pop
jbe
xadd
negl
popa
mov
dec
ljmp
shl
or
repnz
mov
loope
sub
das
push
push
rclb
fdivr
xor
cmp
xchg
pusha
loopne
adc
xlat
out
sub
pop
or
aaa
pusha
cmp
xchg
bound
idiv
aam
out
jnp
and
aad
stos
imul
leave
inc
int
ror
je
mov
rcrl
jns
ljmp
xchg
adc
mov
xor
cld
lds
jmp
and
sbbl
lds
aad
data16
pop
pop
sbb
sbb
ss
fxtract
ljmp
push
stos
cmp
addr16
pop
jge
mov
fnsave
ds
pusha
cld
aas
xor
mov
sahf
cmp
sbb
mov
subl
rolb
jp
dec
fmull
xor
rorb
sbb
mov
jle
or
cmc
iret
insb
inc
addb
cmp
sbb
push
jecxz
sub
jl
mov
insb
or
adc
roll
sub
dec
into
and
xorb
shl
int
cmp
out
dec
lret
jae
sub
pop
xlat
mov
rcr
adc
loope
es
iret
cmp
jno
rcrl
jmp
loopne
or
mov
gs
test
imul
add
mov
leave
pop
push
sub
lock
add
adc
repz
arpl
jg
push
jo
psubw
pop
or
mov
mov
dec
adc
lret
inc
add
cwtl
push
icebp
dec
xchg
xchg
and
and
push
jle
push
ret
sbb
and
sbb
or
iret
sub
inc
or
js
sbb
pushf
gs
int
mov
dec
sbb
push
xchg
rolb
inc
xchg
pop
mov
pop
jp
jb
imul
dec
jecxz
adcb
cld
repnz
inc
test
movsb
roll
jno
pop
pop
push
addl
jl
jnp
fistl
pushw
mov
push
dec
push
jbe
xchg
fidivrl
stos
inc
mov
mov
in
das
lds
xchg
xlat
xchg
mov
mov
rclb
xchg
lds
inc
push
push
cwtl
out
das
push
testl
inc
imul
cmpsb
sbb
xor
inc
in
iret
mov
xchg
xchg
push
cmc
insb
movsb
sub
mov
sub
movsl
xchg
sbb
mov
or
sbbl
es
adc
push
cmp
mov
cld
ja
fldt
add
add
pop
xchg
arpl
dec
mov
xchg
icebp
jl
bound
dec
dec
jl
or
ds
mov
jl
mov
fs
rcll
icebp
push
mov
adc
push
out
mov
fisubrl
pusha
push
cmpsb
mov
pop
jnp
xor
pushf
imul
popf
bound
aad
dec
stos
ret
mov
or
sahf
push
out
fisubl
bound
pop
je
in
repz
les
sbb
mov
cmp
adc
test
jmp
mov
shll
lcall
mov
and
sbb
mov
and
pop
add
rolb
inc
js
add
gs
cmp
and
rcr
cwtl
lds
rcrb
in
sahf
adc
lret
fisubl
jmp
sub
mov
xchg
cmp
icebp
adc
lea
lahf
jb
sbb
leave
xor
mov
cmp
sbb
cmp
xchg
in
inc
xor
mov
icebp
mov
xchg
pop
dec
xor
jo
xor
add
lea
jmp
addl
mov
sahf
sub
sbb
js
cmc
pop
ficomps
neg
imul
dec
out
outsb
gs
jb
daa
sub
fsubr
push
mov
test
or
push
orl
mov
dec
std
push
cmp
pop
ret
cmpsl
xor
lods
adc
adc
xchg
arpl
mov
mov
iret
aaa
mov
stos
cmc
clc
roll
pop
mov
aam
dec
xor
push
jp
push
pop
fcmovne
insb
fisttpll
out
and
popf
jecxz
insl
repz
fdivrs
or
test
cs
jne
ja
test
mov
pop
add
test
out
jb
ret
and
inc
pop
jge
sbb
sub
popf
add
js
cs
mov
test
dec
loope
arpl
fucomip
adc
lcall
mov
jnp
bound
sub
stc
shl
jp
mov
pop
inc
cwtl
add
rcrl
lahf
inc
iret
aaa
int
stos
and
lods
push
leave
daa
outsl
dec
add
fnstcw
int
jge,pt
jmp
push
fwait
stos
sub
or
mov
fisttps
outsb
push
add
jnp
bswap
fwait
lock
dec
jmp
add
push
out
add
outsl
pop
push
mov
cli
or
sub
call
sahf
or
push
mov
roll
push
adcl
xchg
pop
cld
sahf
out
iret
jnp
push
or
cld
cmp
lods
jae
lahf
xchg
stos
int3
stos
adc
addb
sbb
imul
imul
adc
imul
sbb
in
insl
lds
mov
cmp
push
pop
aad
rep
push
add
cmp
mov
ret
mov
and
xchg
dec
call
xor
imul
mov
add
xchg
jp
into
in
jg
sahf
cltd
into
sub
outsl
push
retw
xchg
fstl
mov
mov
pop
sub
sub
lret
es
leave
sub
popa
outsl
jb
mov
cmp
push
push
sub
enter
les
scas
in
lahf
inc
push
fs
pop
fldl
xchg
jae
and
enter
lahf
sub
leave
mov
out
pop
and
clc
loop
inc
cli
add
test
pop
fsubs
out
ja
nop
test
mov
sbb
loope
fsubrs
lcall
mov
scas
hlt
jecxz
repz
or
or
lds
sbb
push
xor
mov
inc
mov
sub
andb
fbstp
stos
mov
cld
aaa
mov
jle
or
xchg
cmp
lahf
int
sbb
inc
jge
aaa
fsubrl
push
cmc
sbb
popl
fstps
lret
jo
xor
out
pop
outsl
or
adc
sub
mov
dec
ljmp
test
cs
mov
lods
push
js
outsl
jmp
fucomi
fdivs
daa
ret
sbb
sub
and
jno
xchg
in
xor
fs
mov
mov
roll
pop
jno
or
or
add
js
lcall
cltd
jmp
jecxz
bound
or
dec
lret
sub
sub
cmp
dec
sub
and
sbb
loope
in
xchg
fucomp
cld
icebp
push
fwait
adcl
dec
scas
test
mov
and
iret
mov
nop
les
and
into
test
loope
xchg
stc
inc
or
sub
mov
mov
lret
xor
hlt
push
push
insb
sub
pop
sbb
repnz
inc
lds
test
out
jg
in
sub
imul
dec
gs
mov
cmp
adc
adc
jl
jno
cmp
mov
xlat
cltd
cmp
aam
dec
or
mov
fldt
insl
movsl
sbb
xchg
mov
push
int3
test
or
cld
push
lret
pop
insl
mov
add
stos
js
cmp
lahf
mov
stc
mov
stos
in
cmpsl
inc
loop
daa
rolb
test
pop
or
je
push
fisubrs
push
stos
push
ret
jno
jecxz
mov
mov
idivl
mov
jns
enter
repnz
or
or
adc
xor
or
fwait
daa
loope
int
pusha
pop
cs
addr16
divb
cs
mov
notl
lahf
xchg
mov
fs
pop
jae
push
or
cmc
pop
pop
mov
or
out
into
xchg
xor
jno
cmpsl
lock
sub
fcoml
enter
inc
mov
sbb
loop
cld
lods
loopne
cmp
add
scas
pushf
es
pop
daa
sub
lds
add
pop
jbe
pop
stos
bound
add
fldt
arpl
clc
mov
mov
loop
adc
ret
clc
jno
or
je
popf
mov
mov
push
mov
and
sti
xchg
xchg
shr
insb
clc
or
aaa
xor
lahf
aas
jbe
sbb
and
aam
push
mov
mov
fdivrs
ds
mull
sub
dec
rcrb
roll
xchg
mov
pop
adc
aam
cmp
jnp
andl
push
sbb
lcall
mov
mov
lods
js
adc
cwtl
or
clc
stos
sbb
fdivs
lea
mov
pop
jg
gs
jge
cli
or
push
pushf
add
aam
xchg
hlt
xorl
pop
das
sub
dec
pop
jbe
xlat
icebp
mov
inc
and
inc
outsl
add
dec
das
sub
popf
mov
gs
lret
out
jmp
lods
fistpl
mov
xchg
mov
lret
add
mov
jecxz
das
sahf
mov
outsl
daa
push
jge
push
xchg
add
inc
loope
and
adc
aad
inc
andnps
call
adc
push
cmp
hlt
sbb
pop
pop
lock
pop
lea
fs
int3
mov
and
xchg
xchg
outsl
pop
jbe
sbb
dec
test
jmp
mov
fnstcw
adc
shl
enter
push
adc
stos
sub
stos
mov
sub
inc
or
outsl
sub
or
in
lods
outsl
sbb
mov
and
enter
mov
cmp
dec
js
xchg
jb
jae
lret
stos
mov
mov
inc
mov
jnp
sbb
add
pop
adc
and
and
ss
mulb
adc
bound
xchg
shrd
cli
sbb
in
sbb
sub
mov
pop
jg
and
addr16
lods
jl
in
or
rorl
test
mov
dec
push
ss
mov
mov
adc
mov
ds
cmp
xchg
sub
orl
movsb
dec
jl
rorb
sbbb
add
mull
inc
inc
iret
data16
add
sbb
ret
pop
inc
dec
es
imul
inc
push
pop
inc
jle
cmpxchg
cmp
mov
sbb
jae
pop
std
cmp
inc
inc
loopne
mov
mov
cmp
cs
int
pop
cmp
or
clc
and
jg
xor
ja
aad
inc
leave
movsl
sub
aas
jge
mov
xchg
push
daa
popa
popf
inc
das
std
inc
mov
add
fcoms
jp
xchg
push
jnp
xchg
mov
cltd
test
inc
aaa
jmp
pop
or
in
je
xorl
pushf
push
lahf
inc
cwtl
cld
imul
inc
mov
cmp
jbe
jnp
aad
jns
mov
insb
test
in
mov
dec
in
mov
clc
xchg
std
jbe
and
cmp
int
mov
mov
mov
jae
pop
sbb
xchg
pop
lds
mov
add
rcll
push
mov
in
or
add
cs
mov
xlat
roll
jle
aas
adc
shrl
add
jp
jo
jnp
add
sub
aam
fwait
cmp
rcrb
cltd
dec
addb
lahf
pushf
jge
daa
cld
ds
sub
je
jl
bound
fs
out
jg
mov
es
dec
cld
mov
ja
push
ficomps
push
cmp
adc
sub
inc
mov
mov
xor
add
cmp
test
mov
mov
cmp
jp
inc
or
insb
sbb
add
cmp
push
gs
bound
subb
mov
outsb
shrb
pushf
repz
push
jb
mov
jb
fwait
pop
sbb
jg
pop
sub
repz
popa
push
ss
dec
push
push
filds
inc
stos
mov
aad
frstor
scas
pop
xchg
faddp
in
xchg
negb
sub
insl
pusha
sbb
jno
mov
cmp
pop
sbb
sbb
fimull
negb
movl
add
or
push
jl
rorl
in
mov
dec
xor
xchg
stos
out
and
aas
cmp
push
mov
movsl
pop
mov
ss
movsb
loope
std
xchg
ret
sub
out
xor
jb
jmp
in
jnp
movsl
sbb
xchg
mov
xchg
ret
cmp
adc
daa
ret
repz
mov
xor
add
xor
pop
mov
inc
fisttpll
ret
inc
lcall
sbb
dec
lods
aas
jmp
xchg
and
xor
push
xchg
loopne
and
adc
es
push
dec
daa
push
cmp
xor
or
push
xchg
and
mov
popf
insl
repz
mov
mov
mov
pop
clc
daa
sti
mov
jmp
call
mov
mov
mov
insb
push
push
test
in
mov
push
lea
jle
or
sbb
outsb
jno
jno
stos
mov
push
aaa
outsl
cmpsl
arpl
in
sarl
sub
push
das
mov
cmc
and
pop
call
es
adc
movl
or
scas
cmp
outsb
lret
in
fnsave
sub
outsb
xchg
imul
cltd
push
mov
inc
popf
in
in
jge
lods
icebp
dec
xor
fidivrl
test
decl
roll
addb
xor
imul
sti
push
dec
dec
dec
jne
jbe
pop
pop
enter
in
addr16
aam
mov
add
jbe
mov
sbb
addl
jbe
popf
dec
mov
fistpl
rclb
jbe
sub
xchg
adc
push
mov
gs
and
inc
iret
sbb
jmp
xor
adc
xchg
daa
scas
inc
inc
sbb
stc
not
inc
iret
lret
ds
test
std
push
xchg
int
push
cmp
mov
inc
adc
fldt
sbb
in
xlat
sarl
lcall
cmp
movsl
mov
jmp
mov
scas
aam
dec
sub
into
jbe
or
mov
cmp
xorl
dec
or
inc
scas
sub
loop
xchg
xchg
push
out
or
adc
pop
fidivs
mov
gs
xor
outsl
flds
push
sub
sub
dec
out
sub
xchg
notb
add
shr
push
pop
pop
and
repnz
xor
jl
iret
scas
in
lret
xchg
movsl
clc
lret
mov
jno
pop
or
mov
jecxz
ds
and
ud2
adc
in
jle
mov
ds
pop
lods
mov
aaa
das
pop
jmp
ret
popa
call
out
mov
pop
cmp
cmp
sbb
addr16
or
inc
dec
in
hlt
dec
or
dec
iret
ret
add
xchg
xchg
sub
push
fstpl
cmp
mov
lds
inc
stc
imul
test
mov
dec
arpl
mov
sti
sbb
lcall
inc
and
sbb
rcrl
cltd
cs
lea
jecxz
mov
rcll
out
shlb
arpl
mov
inc
loopne
jmp
sbb
add
inc
outsl
mov
or
es
icebp
sub
pop
and
inc
ret
lahf
jle
mov
mov
mov
das
scas
jle
mov
repnz
pop
js
test
pushf
add
inc
sbb
mov
inc
pop
into
clc
ja
add
add
insb
lea
or
movsl
das
add
in
adc
into
inc
scas
add
int3
inc
and
lret
imul
sub
push
mov
push
or
add
mov
or
adc
xor
mov
and
add
repz
outsl
mov
repnz
fldl
dec
in
mov
popa
dec
cmpsb
add
mov
mov
jae
pop
dec
jo
cwtl
jne
rorb
xchg
and
gs
or
add
pop
pushf
int3
rclb
es
popa
call
xchg
test
jl
sbb
pop
push
popa
fs
loope
enter
pop
sbb
shll
sbb
add
test
adc
or
es
rcll
lea
xchg
cmp
lock
pushf
sbb
leave
mov
xchg
lret
adc
iret
in
imul
xor
push
mov
mov
or
leave
sahf
gs
lods
aad
push
lahf
inc
mov
mov
rolb
adc
mov
test
daa
in
dec
pop
fldcw
lret
pop
and
sub
sub
jae
sbb
icebp
xchg
inc
arpl
inc
or
pop
cmp
cmp
cmovb
xchg
scas
repz
sub
cmc
mov
in
pop
stos
je
push
and
push
hlt
sar
andl
dec
xchg
push
and
enter
inc
xor
xchg
cmpsl
adc
mov
mov
mov
jecxz
out
aad
jg
mov
jl
adc
adc
jp
into
fs
cmp
insl
jg
jle
jl
mov
out
or
push
mov
pop
jns
sbb
int3
popa
sarl
daa
xchg
push
sbbb
gs
dec
inc
mov
mov
test
cmpb
xchg
rcr
dec
dec
test
xlat
lret
aad
cmp
xchg
mov
scas
jmp
and
mov
in
cli
jb
les
sarl
xchg
cmp
add
loopne
bound
pop
push
loop
daa
arpl
arpl
mov
xor
xor
sahf
in
and
adc
and
push
xor
adc
xchg
push
ja
nop
sbb
sbb
inc
cmp
mov
fdiv
mov
inc
cmp
cs
out
pop
xchg
xchg
test
cmc
andb
mov
enter
fs
mov
pop
sbb
xor
shll
sahf
push
cwtl
mov
jb
sti
adc
loope
or
jg
and
xor
dec
orb
and
mov
in
je
inc
push
pop
int3
jae
push
cmp
mov
ds
divl
xlat
adc
addb
push
dec
xchg
sub
mov
cltd
ret
push
ret
lods
sbb
stos
das
mov
sub
add
andl
add
aaa
sub
adc
sbbb
cmp
xor
scas
sbb
sub
hlt
dec
mov
roll
and
sub
rcll
sbb
clc
mov
xor
ja
pushf
mov
mov
ret
pushf
pop
pusha
mov
push
mov
lock
or
ljmp
adc
or
or
inc
in
fdivp
sbb
adc
xchg
pusha
pushf
ret
push
cmpsl
fistpll
inc
or
imul
testb
xor
xor
adc
jns
xor
scas
pusha
or
sbb
pop
sub
fisubrl
dec
loop
or
push
and
lret
sahf
insb
adc
push
mov
cmovns
popa
out
insl
fmull
icebp
in
cmp
ret
imul
aaa
cmpsb
or
push
inc
pop
adc
push
mov
xchg
shl
add
inc
xchg
pop
dec
xchg
cmp
fistl
add
add
aam
or
sbb
push
jmp
cmpl
out
add
cmpsb
mov
mov
jbe
xchg
mov
call
adc
xlat
das
or
push
add
andl
sub
push
scas
mov
scas
push
mov
add
mov
outsl
cltd
push
pop
pop
mov
cmc
pop
scas
and
stos
enter
add
pusha
mov
lock
xchg
fbld
push
jno
out
lret
pop
clc
aam
fisttpl
mov
xchg
sub
hlt
sbb
and
fcomp
cmp
pop
xchg
jb
sbb
imul
inc
lret
mov
rcr
mov
rorl
sub
popa
repnz
push
popa
inc
je,pt
orb
dec
fistpll
mov
and
mov
imul
out
xchg
sahf
push
nop
test
push
lds
mov
movsl
cmp
pop
movsb
lock
in
dec
jno
push
ss
mov
call
mov
pushf
data16
mov
je
or
xor
xchg
mov
adc
push
out
cmpsb
mov
add
ret
aaa
rcll
xor
sbb
push
mov
or
incl
neg
jmp
loop
inc
scas
fld1
test
movsb
xor
sbb
in
cmp
mov
nop
fldt
cmc
addl
aaa
fdivrs
inc
mov
lds
test
loopne
dec
jnp
aad
stos
add
or
jle
jnp,pn
inc
add
jb
sub
add
aaa
icebp
subl
cmpsl
lcall
sti
mov
jecxz
hlt
loop
jbe
std
mov
xchg
lds
xor
popf
rcrb
dec
add
jo
je
sbb
popa
dec
lock
into
cmp
fwait
add
or
push
push
add
leave
or
movsl
lock
int
int3
push
cmc
cwtl
outsb
mov
inc
es
jmp
loop
xchg
bound
shlb
xchg
movsl
mov
lcall
lcall
sub
loop
stos
and
mov
mov
ret
dec
add
push
or
mov
xchg
aas
fmull
push
dec
lds
idivb
push
cmpsb
xlat
push
inc
pop
les
push
pop
in
cmp
jmp
lock
aam
inc
cld
pusha
or
mov
lret
cmpsl
add
loope
sbb
out
loopne
shlb
out
mov
and
or
mov
fstp
or
and
jecxz
cmpsl
mov
cmpsl
lcall
and
lock
int
dec
pop
cli
cltd
in
test
cmp
inc
hlt
jne
out
mov
push
lret
test
lods
stc
movsl
mov
mov
sbb
cmp
sub
sub
in
adc
cmpsl
imul
stos
mov
andb
outsb
sbb
push
add
aaa
hlt
or
push
mov
movl
mov
mov
xor
and
jns
test
cmpsl
nop
mov
int3
sbb
icebp
cmp
mov
push
sti
adc
outsl
xchg
insl
jne
jb
js
pop
mov
call
xor
inc
sub
repnz
mov
jecxz
cmp
push
and
notb
aas
jle
xor
out
lock
inc
fnsave
ret
and
sbbb
mov
mul
and
xchg
mov
jo
jbe
and
mov
cmpsb
das
jae
xchg
add
mov
sqrtps
enter
pushf
lods
out
mov
cmp
sbb
sti
add
jp
jns
jno
testl
or
je
gs
jb
jecxz
add
push
or
dec
adc
push
sahf
les
cmpsb
scas
cli
es
aad
xchg
sub
out
sbb
or
push
mov
cmpsl
xchg
sub
add
in
mov
insl
adc
fildll
or
ss
cmpsb
jnp
xorl
mov
loope
loop
nop
push
lcall
add
fs
push
lahf
add
pop
mov
push
mov
lcall
cmc
sub
or
xchg
jge
pop
xchg
jno
mov
add
fadd
xor
push
push
jns
push
or
jecxz
outsb
cwtl
scas
sbb
jne
mov
cmp
pop
andl
fstp
push
lea
adc
cmc
sub
sub
xor
mov
fisttpll
jnp
cmpb
addr16
sub
pop
xchg
mov
sbb
push
mov
das
mov
dec
iret
mov
inc
jnp
sbb
into
push
or
mov
adc
mov
outsb
add
enter
inc
jne
les
cmpb
in
cli
mov
int3
fdivrs
je
sub
stos
jns
fstpl
mov
mov
pop
lret
and
sub
push
cmp
cli
in
sahf
mov
std
xchg
or
xchg
out
mov
call
xor
mov
sbb
in
xchg
push
dec
dec
jb
lea
jmp
pop
rcrb
adc
jge
aas
push
not
dec
push
mov
xor
arpl
ror
push
loopne
jno
ret
jne
dec
and
repnz
push
imul
fsubrs
hlt
or
xor
mov
mov
mov
xchg
scas
mov
cmp
fwait
test
test
ret
mov
xchg
les
clc
sarb
push
in
jne
mov
leave
cmc
pop
imul
jmp
roll
sbb
sbb
test
adc
mov
sbb
pushf
cmpsl
mov
pop
push
ljmp
add
pop
or
pop
jne
push
dec
hlt
into
xchg
cmp
dec
or
pop
jbe
jle
mov
mov
pop
into
adc
or
inc
popl
xor
lods
lahf
jl
into
mov
push
mov
repz
decb
je
cld
dec
and
adc
std
inc
outsb
mov
sbb
or
jg
pop
test
mov
fstp
in
and
mov
pop
mov
fidivrs
pop
les
divb
adc
and
ficoml
pop
subb
mov
test
dec
adc
xchg
rcl
or
les
inc
push
rcrb
sub
push
sbb
pop
cli
popf
xor
and
or
pop
fisubrs
add
repz
add
mov
dec
jnp
int
adc
cmp
sub
cwtl
lcall
mov
insl
fiadds
and
jb
dec
out
pop
dec
push
shll
push
inc
add
repz
sub
xchg
gs
movaps
or
imul
jmp
adc
xlat
pop
or
xchg
sbb
scas
aad
ds
mov
pop
jmp
jo
aaa
jecxz
jno
mov
cmp
jae
inc
test
sub
mov
mov
into
cwtl
push
pop
inc
aas
mov
sub
and
imul
jge
aam
out
jae
lcall
cmp
xor
lods
adcb
adc
cmpl
xor
shrb
sub
inc
fs
cmp
push
mov
popa
sbb
and
add
sbb
cmp
mov
push
xor
testl
out
pop
sub
arpl
mov
popa
cmp
sarl
and
inc
movsl
and
stc
pop
dec
push
sub
dec
add
ss
insb
sub
es
dec
loope
lret
xchg
iret
mov
cmpb
cmp
adc
adc
mov
stc
popl
sbb
shl
test
scas
fsqrt
push
pextrw
push
out
std
adc
sub
rorb
and
xchg
jg
js
cwtl
sbb
jo
jp
sub
or
ds
leave
outsl
cltd
xchg
inc
dec
scas
shl
cld
or
mov
inc
dec
mov
cmp
rol
pop
cmp
int
inc
in
leave
adc
mov
xchg
call
repnz
mov
dec
add
xor
pop
inc
push
pop
imul
jb
test
pop
xchg
enter
ljmp
repz
sbb
or
xlat
int3
sti
push
mov
push
aas
test
xchg
lock
pop
jae
jge
and
int
mov
xlat
lods
sub
sub
pop
ds
push
jbe
fimuls
or
and
mov
cmp
inc
cltd
cld
xchg
mov
arpl
xchg
test
aad
inc
dec
jnp
das
popa
mov
mov
push
shll
std
fstps
dec
mov
sub
imul
dec
jns
test
test
lss
push
or
xor
gs
jecxz
ds
mov
fimuls
sbb
xor
loope
repnz
jge
jmp
rcl
and
push
dec
pop
dec
repz
arpl
xor
sbb
int3
js
cltd
adc
ss
or
pop
fcoms
call
je
add
outsb
test
fstps
inc
jb
loope
iret
sbb
hlt
mov
adc
dec
add
push
mov
ret
movsb
loopne
rorb
cmc
mov
cmp
daa
cmpsb
pop
adc
imul
dec
cmpsb
and
sbb
xchg
xchg
stos
rcrb
jns
xchg
pop
jb
sub
sub
movsl
in
adc
sub
jb
pop
out
push
mov
push
jge
jnp
addl
out
add
sbb
adc
and
outsl
pop
cltd
stc
jle
or
in
shrb
movsl
pop
iret
xchg
mov
jns
jbe
cmp
cmp
out
jae
or
int3
pop
sub
mov
mov
repz
xchg
mov
inc
push
jnp
mov
mov
push
mov
pop
leave
iret
scas
and
and
push
into
pop
jno
mov
jae
fildll
pop
pop
sbb
cmp
jp
mov
and
sub
mov
inc
outsl
sbb
and
fwait
out
push
nop
fistps
sub
dec
xorl
adc
push
cmp
push
xlat
lods
xlat
fiaddl
pop
int3
jnp
loope
ret
inc
fdivl
jge
xlat
push
jle
test
sti
sahf
mov
out
leave
ror
sti
mov
jns
cmp
icebp
pop
jp
pop
inc
dec
adc
fadds
test
aas
cmp
dec
or
das
stos
lock
xchg
out
lret
insl
add
mov
rol
lock
pop
jbe
dec
mov
xor
lock
dec
std
lret
sub
mov
ficompl
test
and
fnstsw
rcll
lcall
fildl
in
in
adc
xchg
mov
cmp
and
scas
sti
mov
lahf
xchg
adc
cmp
pop
fnstenv
insb
adc
xor
movsb
test
loope
pop
loope
push
push
aaa
and
and
cmp
jae
adc
adc
gs
jae
inc
mov
sbb
pop
sub
adc
mov
jge
pop
mov
fxch
lret
fcomi
inc
sub
aam
and
enter
in
cltd
bnd
jb
cwtl
sub
mov
sbb
imul
mov
outsb
testb
mov
fprem1
xchg
mov
xchg
fiaddl
inc
sbb
rcrl
adc
jb
aam
dec
repz
push
mov
scas
ds
outsb
mov
jge
cs
clc
add
in
movsb
push
jns
in
jbe
add
sbb
or
jle
mov
xchg
int3
mov
add
shll
aaa
mov
cmpsl
jl
dec
shr
add
mov
xchg
mov
adc
fucomp
cs
icebp
mov
and
aad
push
pop
out
mov
cmp
sti
and
add
add
jnp
jp
mov
outsb
movsb
aas
outsb
push
in
jbe
push
movsl
shll
int3
ljmp
dec
lods
jp
in
xor
push
inc
out
xor
roll
jecxz
mov
adc
xchg
imul
sub
shlb
lcall
mov
and
mov
and
outsl
dec
lahf
stos
mov
ds
es
es
pop
inc
mov
int3
add
mov
aam
rcr
and
adc
mov
out
div
adc
fsubs
pop
adc
fidivrl
lahf
jne
cs
pop
sbb
std
aas
cwtl
sbb
push
mov
out
mov
push
dec
sub
adc
pop
and
pop
mov
mov
push
push
daa
jne
jmp
sbb
xor
or
mov
and
out
fcmovnb
cmc
mov
out
rol
out
loopne
cmp
ret
sub
cmp
out
mov
ret
mov
sub
scas
cmp
mov
subl
sbb
jmp
add
mov
fistpll
bound
jnp
dec
cwtl
nop
lds
pop
push
xorb
das
fidivrs
pop
push
imulb
mov
adc
jne
sbb
mov
insl
mov
stos
push
sbb
sbb
dec
popa
push
mov
test
dec
in
add
jb
jl
fdivl
fistpll
xor
pop
enter
arpl
scas
adc
iret
loop
in
shl
pop
test
lods
hlt
jne
or
aaa
jnp
ja
mov
or
dec
stc
inc
pop
push
pop
es
popf
dec
icebp
icebp
cmpsb
mul
dec
fcoms
pop
sub
lods
repz
loope
rcll
or
movsb
lods
lea
rorl
and
push
repnz
inc
mov
add
in
jge
or
inc
and
sub
jl
movsl
push
push
push
or
mov
mov
stc
js
push
pop
and
testl
cmpsl
push
sbb
cmc
iret
push
mov
in
int
cmp
add
cmpsl
mov
js
mov
mov
ds
jg
cmpl
dec
fstpt
mov
ret
xchg
das
icebp
add
dec
mov
jns
lahf
mov
test
sub
add
mov
je
xlat
jecxz
xchg
test
inc
rorl
push
lret
out
lahf
loop
xor
pushf
push
cmp
inc
dec
dec
fmul
fisttpl
pop
shll
xor
mov
pop
in
shll
lods
sub
orl
and
nop
popl
and
mov
test
mov
fisttps
and
inc
int3
cmp
sbb
jg
icebp
test
xchg
mov
cmp
mov
into
out
pop
sti
fisubrs
pop
decb
dec
sbb
test
and
mov
in
cmovg
pushf
enter
add
cli
xor
popf
mov
push
xchg
imul
dec
or
sti
repnz
fcmovnbe
push
loopne
sub
jmp
ret
cs
in
movsl
popf
push
push
xor
inc
test
aaa
in
rorl
xchg
mov
jne
mov
push
jmp
lds
mov
mov
dec
sahf
testl
jnp
jns
jae
fbld
cmp
pop
dec
push
cld
cmc
or
sub
rcl
in
lcall
in
gs
sti
sub
cmp
std
sbb
jae
jl
lret
push
mov
mov
out
push
or
es
jle
push
pop
aam
sbb
js
fcomi
pop
jnp
push
cli
push
sub
sub
pop
sbb
stos
mov
sub
fnsave
stos
add
xor
mov
adc
cld
cmp
adc
fidivrs
icebp
or
nop
test
repnz
and
sbb
stos
sub
xchg
call
into
arpl
lds
and
imul
sub
ret
xchg
shrl
es
mov
and
jmp
adc
je
adc
leave
inc
mov
icebp
into
cmp
xor
push
aaa
test
loope
or
fsubrs
jge
mov
shl
fstl
cmp
rcl
cmp
pushl
fcoml
adc
aad
ret
pop
xchg
adc
arpl
pop
cmp
add
and
adc
or
xor
shlb
sahf
out
addr16
xchg
mov
jl
pop
loopne
je,pn
or
sub
xchg
and
add
sub
rolb
insb
fstps
mov
call
pop
dec
mov
sub
mov
cltd
cs
mov
loop
push
out
mov
cli
mov
dec
mov
dec
stos
test
push
jp
shrb
sbb
fs
pop
int3
stos
adc
pop
idivl
inc
sbb
add
jl
sub
or
push
add
and
or
test
notl
ljmp
xor
out
fildll
mov
adc
ljmp
inc
inc
fwait
sbb
mov
mov
xchg
jnp
or
add
dec
inc
dec
pop
test
loop
cmp
cld
add
cmp
je
sbb
idivl
inc
aad
lods
ret
add
into
mov
cmp
imul
and
rcl
mov
dec
sbb
popf
data16
popf
mov
and
lods
aaa
cs
sub
jno
or
or
jg
and
inc
leave
clc
shll
in
sub
push
fs
pushf
cmp
cwtl
pop
xchg
enter
mov
mov
loope
push
adc
fs
es
mov
push
cltd
mov
sub
lret
fwait
stos
sbb
inc
lret
sbb
gs
mov
hlt
fdivl
xlat
cmp
or
or
cs
sahf
icebp
sbb
das
lods
jb
jmp
jl
rorl
push
mov
test
cmc
push
stc
sub
inc
mov
adc
mov
jle
cli
std
pop
mov
iret
mov
ljmp
ficoms
push
repnz
mov
popf
arpl
ret
imul
xlat
ljmp
inc
mov
fldl
push
or
fdiv
inc
daa
in
mov
jle
stc
sub
jecxz
jbe
pop
mov
popf
or
and
lock
jae
ja
jbe
push
inc
aas
nop
imul
xchg
aaa
imul
es
cld
add
icebp
or
pop
mov
inc
inc
push
dec
add
adc
dec
mov
in
or
fmuls
mov
or
jmp
icebp
insl
imul
faddl
add
push
outsb
jmp
jle
mov
pop
repz
xor
dec
test
shl
pop
push
push
cmp
aas
lcall
outsl
push
sahf
testb
sbb
xchg
pop
pop
lret
mov
mov
jge
stos
call
mov
loopne
loopne
mov
dec
push
popf
cmp
stos
addr16
mov
xor
inc
loopne
xchg
cmpsb
and
aam
enter
mov
das
xor
sti
sahf
aad
loop
add
xor
outsl
jo
mov
pop
aam
cmp
rcrl
pop
xchg
cmpb
cwtl
cld
inc
mov
xlat
fsubrs
cmp
cmp
cli
mov
dec
add
inc
lret
loope
seta
rolb
mov
into
mov
mov
add
sub
push
lods
test
es
int
cmp
add
jle
mov
movsl
daa
add
add
xchg
rol
pop
ret
insb
loope
test
mov
jbe
lods
sbb
mov
or
addr16
pop
jbe
inc
mov
adc
pop
xchg
aam
sahf
cmp
pop
sbb
push
in
and
and
jp
push
push
rcrb
fdivl
notl
gs
xor
pusha
test
sbb
scas
add
and
movsl
je
lods
xchg
adc
cmp
js
es
insl
out
add
xor
mov
lods
adcl
pop
pop
cmpsb
push
push
pop
mov
mov
sbb
fadds
fisttpl
xor
jae
lea
lock
or
rol
jp
je
and
and
push
mov
dec
enter
ret
jne
into
mov
flds
jbe
cmp
jns
mov
sbb
pushf
dec
das
lods
xchg
jmp
dec
sub
inc
icebp
mov
iret
daa
loopne
std
cmpsb
cmpsb
sub
stos
in
fiaddl
cmp
imul
shll
and
cld
push
push
fucomi
fcomps
or
lds
mov
xorb
pushf
mov
mov
push
mov
sbb
aaa
push
xchg
sbb
clc
or
sbb
mov
mov
sub
lock
dec
xchg
out
xchg
cmp
cmp
inc
xchg
push
pop
push
jg
out
push
daa
das
jmp
xchg
bound
cwtl
dec
sub
mov
fldenv
pop
jg
mov
shll
js
adc
jmp
mov
ljmp
xchg
aaa
inc
cld
adc
xchg
mov
mov
cmp
push
jo
daa
cmp
nop
and
stos
sbb
movsl
sbb
push
inc
pusha
lds
cmc
shlb
dec
mov
and
mov
mov
or
enter
ret
jle
fbstp
push
add
or
xchg
loope
or
shr
loopne
rorb
int
insl
loop
push
int
imul
rorb
jae
cwtl
stos
jb
or
sbb
cwtl
cltd
sbb
repz
faddl
insb
lcall
jp
in
jmp
dec
shr
cmp
jns
xor
stos
sbb
xchg
push
mov
xlat
add
adc
jmp
push
inc
or
out
fadd
lock
rcrl
add
rcrb
dec
out
mov
mov
and
enter
mov
inc
roll
dec
jns
cltd
imul
shll
mov
fsubrl
js
leave
add
xchg
sub
iret
mov
fdiv
pusha
loope
cwtl
pusha
mov
xchg
outsb
jle
mov
lret
cmp
jg
xchg
ja
cltd
ret
daa
mov
rorl
daa
fistpl
hlt
xchg
aad
xchg
std
mov
push
ret
xchg
fiadds
mov
gs
sbb
mull
adc
push
jl
or
int
mov
xchg
mov
push
ja
mov
adc
adc
fnstenv
or
ja
in
sbb
and
les
sti
mov
jmp
pop
mov
xor
xor
push
mov
mov
not
test
jmp
dec
fcmovnbe
jle
sahf
ljmp
xor
xor
daa
jae
adc
test
fcomi
aad
or
ss
ret
xchg
les
mov
dec
mov
add
std
add
sahf
daa
clc
enter
pop
dec
push
aam
repz
fcompl
jb
rcr
repnz
inc
and
xchg
stos
sub
jae
fistl
jbe
push
pop
cs
xor
dec
or
dec
dec
cmp
aad
fcmovb
add
push
or
pop
adc
pusha
or
aas
mov
sub
xorl
cmp
test
fwait
inc
lock
sub
pushf
adc
shrl
iret
aas
shrl
push
mov
data16
mov
pushf
call
adc
fsubrs
rorb
out
jle
pop
in
and
ljmp
jae
or
lods
enter
ss
xor
icebp
out
push
jl
sbb
test
xor
xor
out
int
out
daa
jmp
xor
xchg
daa
sbb
mov
mov
sbb
add
ss
movsl
lret
pop
lds
mov
xor
loop
mov
sub
jbe
fmull
jg
sub
pop
pop
fstps
cmp
es
push
push
xchg
jo
dec
mov
cltd
lret
adc
cltd
or
rcll
sub
pop
cwtl
jne
pop
jbe
lock
jnp
addb
fiaddl
sub
push
sub
jae
mov
cld
mov
pop
cmpsl
rol
aam
es
bound
mov
mov
int
mov
dec
xlat
ljmp
pop
shll
push
in
sbb
test
data16
cli
and
pop
popa
fs
sub
cld
inc
add
in
xchg
cs
fldcw
jnp
add
push
xor
xchg
and
cmp
pop
push
adc
cmp
pop
das
inc
int3
mov
test
mov
add
gs
int3
mov
xchg
xorl
xlat
mov
jnp
or
pusha
fldt
mov
mov
pop
add
xor
jo
fisubs
outsb
xchg
ljmp
pop
dec
cmp
rol
xchg
fiaddl
movsl
insl
inc
das
loope
jecxz
pusha
pop
loopne
inc
push
xchg
shrb
clc
gs
mov
push
icebp
pop
in
xchg
in
lret
jg
movsl
mov
mov
mov
cmp
mov
cli
repnz
pop
push
dec
popa
movsb
jne
or
mov
dec
fcomps
mov
pop
movsl
sub
jbe
enter
inc
pop
add
outsl
push
out
fsubrl
fdivrl
lret
arpl
pmulhw
adcb
js
gs
inc
push
ret
and
or
xchg
aas
xchg
addr16
adc
pop
dec
in
jp
fcoms
test
xor
adc
lret
xchg
fistl
mov
stos
mov
imul
pop
push
cmp
nop
and
lods
jbe
out
xor
call
lods
pop
xlat
outsl
insl
adc
addl
das
xor
cmp
inc
jecxz
pop
pop
xchg
mov
dec
mov
dec
test
enter
mov
je
inc
pop
sub
into
push
jae
xchg
dec
push
je
loope
lcall
pop
mov
std
fadd
fucomip
push
into
or
movsl
sahf
cli
mov
das
arpl
out
push
mov
test
jecxz
ja
movsb
add
cmp
adc
fcmovnb
or
mov
out
mov
jl
stc
xor
nop
sub
jo
fcmovbe
mov
adc
sbb
dec
out
dec
dec
ror
add
xchg
add
adc
add
mov
cmp
cmc
test
pop
jne
stos
scas
mov
dec
cli
test
inc
mov
and
fdivl
call
mov
sbb
cs
xor
shrl
in
jno
insl
cmpsb
push
shlb
cmp
out
daa
or
test
xchg
mov
aad
push
fwait
add
jne
and
data16
xor
orl
xor
xchg
dec
bound
inc
mov
movsb
mov
cmc
jge
inc
fucomip
lods
rolb
dec
mov
scas
xchg
lock
imul
lahf
mov
mov
xor
repz
andl
iret
mov
xorl
mov
out
jns
sti
mov
xor
lcall
add
push
in
inc
mov
ret
mov
dec
enter
sbb
or
cmc
jns
push
lds
dec
leave
jno
js
pop
out
test
lock
out
loopne
sub
out
std
add
mov
mov
test
mov
xchg
les
popa
fwait
and
or
sub
stos
leave
cmp
rol
stos
sub
cmpsb
jge
jae
mov
stos
mov
cmp
sub
lcall
and
clc
cli
addr16
lret
and
sub
xlat
pusha
repz
mov
lcall
xor
mov
push
mov
cltd
adc
lods
push
stos
mov
xchg
adc
loop
xor
push
jmp
mov
js
rclb
subl
cmc
aam
jl
and
and
dec
inc
or
sahf
adcb
int
pop
lea
rorl
aad
divb
data16
ficompl
xchg
repz
pop
pop
pop
xchg
and
jne
sub
je
push
and
movsb
cmp
mov
pusha
jb
mulb
lods
xchg
fs
icebp
shlb
mov
push
out
or
xchg
mov
scas
cmc
inc
sarl
jno
ljmp
mov
pop
mov
xor
outsl
jne
mov
push
ret
aaa
mov
mov
scas
xchg
sbb
push
pop
out
cli
or
mov
test
subb
jg
dec
icebp
mov
ljmp
sbb
jbe
out
imul
push
xchg
jp
inc
cmp
adc
sti
push
in
jno
xchg
sub
stos
add
sub
sub
inc
and
sahf
adc
mov
xor
nop
fldl
out
inc
stos
ret
mov
jg
mov
push
xor
xlat
jle
jbe
mov
mov
xor
cld
cld
out
sub
stos
push
pop
adc
std
and
mov
into
xchg
nop
insb
xchg
pusha
movsl
xchg
jne
out
ljmp
push
lea
bswap
sahf
cli
jl
xchg
mov
mov
mov
popa
ljmp
out
stos
bound
bound
xchg
popa
mov
pop
dec
jmp
call
or
shrl
cmp
andl
sahf
pop
outsb
outsb
pop
gs
lods
aaa
fwait
xchg
or
xchg
mov
ret
xchg
push
imul
inc
ret
inc
pop
fs
push
cmc
in
add
scas
and
sbb
jo
bound
xchg
sub
fisubrl
insl
jno
dec
mov
and
add
adc
out
or
xlat
jl
stc
stos
dec
jmp
hlt
mov
testb
aam
out
pop
bound
int3
mov
sbb
push
adc
and
out
xchg
xor
xchg
xor
jae
mov
aad
mov
or
cmp
fisttpl
and
shl
push
xchg
cwtl
lds
jg
mov
push
dec
lret
fisttps
and
jnp
mov
mov
adc
scas
gs
pop
jne
mov
popf
add
adc
adc
mov
mov
xor
int3
aad
push
mov
inc
jbe
stos
icebp
pop
cmp
jmp
cmp
pop
pop
loop
cld
outsl
iret
jmp
lods
outsb
js
adc
out
aad
xor
mov
sbb
pop
out
inc
stos
popa
add
fcoml
lahf
mov
push
push
xchg
test
jmp
or
hlt
push
adc
test
outsb
cmc
and
cmp
daa
outsl
std
mov
sbb
lcall
daa
push
xor
jl
push
push
push
jae
or
pushf
inc
push
xchg
mov
call
test
add
decb
clc
ljmp
shr
xchg
jbe
mov
enter
cwtl
and
lods
pop
ret
adc
dec
mov
les
mov
sub
xchg
pop
aad
fnstenv
mov
aam
into
add
push
mov
repz
lea
inc
push
sahf
mov
fmul
and
loope
jb
les
xor
aam
add
inc
dec
daa
sbb
xor
cmp
pop
aas
sarl
fcoms
fldenv
inc
push
mov
pop
aaa
dec
mov
mov
sbb
out
fidivrl
out
push
movsl
add
pop
iret
sub
push
jnp
and
insl
aaa
mov
fldt
insb
pop
cmpsl
mov
mov
and
sbb
mov
sbb
out
in
inc
call
add
pushf
lds
add
push
xchg
in
daa
push
and
mov
aad
ss
sub
hlt
mov
aam
icebp
aam
cmc
push
sub
sub
inc
jb
sbb
fnstsw
movsl
movsb
movsb
daa
jno
pop
mov
mov
mov
jecxz
subb
daa
mov
data16
sbb
sbb
repz
mov
insb
push
sbb
mov
push
cwtl
scas
jae
movsl
jo
mov
or
and
xor
outsb
jge
pop
js
push
mov
roll
lods
sbb
int
out
cmp
adc
gs
mov
sub
and
push
stc
mov
into
push
sub
pop
add
mov
adc
pop
sub
jl
stc
int
sbb
mov
das
xor
mulb
rorb
outsb
add
adc
stos
cmpsb
ss
jae
in
inc
mov
ljmp
roll
sbb
or
mov
push
pop
sub
pop
adc
ret
scas
xchg
jmp
sub
popa
pop
jb
loope
jle
sbb
in
sub
xor
lcall
mov
adc
aad
ficompl
inc
adc
icebp
pop
lods
jns
adc
xor
adc
mov
imul
ret
jns
push
xlat
int
and
pop
dec
adc
sub
xchg
lcall
pushf
jmp
cmpsl
lods
outsb
pop
lock
and
jl
mov
inc
scas
mov
pop
or
xchg
inc
push
sub
add
cmp
mov
mov
out
enter
sbb
aas
js
or
cmpl
xor
sub
push
mov
push
jnp
mov
inc
push
ja
roll
das
jecxz
mov
xchg
pop
sahf
outsl
mov
arpl
cmpsl
testl
es
lea
in
fwait
cld
mov
shl
lock
ret
test
pop
sarl
mov
into
fdivrl
push
mov
adc
adc
neg
shlb
ret
pushf
cmp
or
sub
sarb
sbb
movsb
add
jnp
sahf
scas
adc
jmp
fmull
mov
push
ja
out
in
cmp
and
cmp
mov
mov
rorb
mov
sbb
ret
and
lcall
dec
mov
frstor
mov
jo
cmp
add
xchg
mov
and
lods
inc
jo
and
arpl
add
xor
aas
push
sahf
push
xchg
push
mov
or
out
sahf
out
cmc
test
jle
mov
mov
stos
dec
mov
lods
mov
mov
pop
sbb
sub
mov
loop
adc
in
push
roll
imul
ljmp
mov
mov
fdivrs
xchg
or
and
js
lcall
dec
es
xlat
sub
and
mov
sub
dec
sub
add
cmc
outsb
inc
div
das
jne
jb
rcll
in
inc
ljmp
mov
inc
xchg
jae
ror
arpl
or
fwait
pop
dec
repz
in
lods
jb
aaa
jb
ja
push
mov
adc
xchg
push
sbb
mov
dec
adc
or
addr16
xor
adc
addl
xchg
ret
gs
mov
fnstcw
enter
pop
outsl
scas
mov
mov
popf
or
mov
mov
pop
rolb
cld
dec
xchg
mov
std
imul
inc
jmp
lea
dec
shll
inc
mov
loop
xor
pop
test
sbb
push
lret
pop
add
pop
lea
jge
stos
inc
and
sbb
sbb
add
int3
xchg
aam
xchg
addr16
add
or
xor
icebp
lret
daa
mov
dec
xchg
push
push
pusha
inc
dec
aad
nop
add
sbb
lcall
outsb
cmpsl
add
xchg
inc
in
mov
gs
rcr
test
mov
arpl
mov
or
std
divb
and
push
fcoms
rorl
ds
jb,pn
xor
je
sbb
push
push
shr
bnd
out
mov
jb
add
and
mov
sbb
push
js
lds
loop
test
stos
loopne
mov
cmpsb
jo
out
in
bound
pop
and
loop
push
sti
push
pop
call
dec
stos
out
jne
push
sbb
iret
and
js
jns
and
stos
and
mov
xor
ret
fcomps
sbb
jo
cmp
punpckhwd
popf
jo
add
push
push
dec
sar
insb
jmp
push
jl
out
pop
mov
xor
cmpsl
mov
dec
xor
or
pop
push
fisttpl
jns
test
cwtl
stos
or
inc
int
cmp
andb
test
fs
es
aas
xchg
call
mov
rclb
andl
nop
out
test
xchg
xchg
adc
out
cmp
pop
or
enter
inc
xor
nop
repnz
cmp
mov
jge
in
test
adc
sub
add
inc
aad
sarb
mov
mov
mov
mov
movsl
jmp
cmp
adc
xchg
and
lcall
ljmp
or
jmp
clc
adc
cmp
test
mov
mov
inc
cmpsl
dec
bound
dec
ret
fstpt
out
mov
xor
mov
pushf
mov
or
in
inc
add
xor
xchg
cmc
cmpsl
das
push
mov
push
push
pop
cwtl
test
ss
and
shll
push
js
and
repz
sub
bound
test
scas
push
pop
and
jnp
xor
out
sbb
cmc
not
loop
fisubrl
push
push
lock
out
or
or
xor
dec
fnstcw
or
leave
push
xor
jbe
popf
and
cmpsl
stos
inc
xor
mov
push
test
add
xchg
test
cmp
xchg
hlt
mov
inc
add
lea
jae
sbb
shl
jl
mov
cmc
loope
cmp
lea
xchg
lcall
push
push
insb
mov
mov
jbe
ds
nop
dec
push
xor
ss
inc
push
dec
mov
sbb
pop
mov
pop
pop
adc
arpl
sarl
xchg
lret
sbb
int3
push
or
mov
loop
xchg
sub
dec
xchg
pop
cltd
pop
inc
adc
lods
ja
out
xchg
jl
push
jne
subb
cli
outsl
adc
notl
cld
lahf
xor
ret
int
add
sar
in
jl
je
sbb
cmp
repz
sti
cli
push
aad
dec
pop
or
jnp
fwait
jb
scas
pop
lock
cmpsl
pop
cwtl
movb
pushf
mov
push
mov
lcall
aas
pop
and
cmp
mov
mov
pop
ds
repnz
shlb
out
cmp
sar
ret
nop
lock
enter
jo
mov
sub
jp
jg
xor
icebp
movsb
js,pt
mov
mov
push
xor
sub
fwait
push
imulb
hlt
in
push
and
or
adc
fcompl
adc
push
push
sub
jbe
mov
ret
pop
sub
cmp
xor
dec
gs
sbb
cmp
xchg
loop
clc
cli
mov
or
push
aas
stos
add
mov
sbb
inc
pop
nop
lea
mov
iret
dec
lea
std
sub
sbb
sub
jmp
stc
test
jmp
fs
mov
xchg
dec
fistps
idivb
mov
outsb
mov
and
test
lds
scas
dec
js
fistpll
test
push
push
adc
sub
xchg
popa
mov
inc
movsb
aam
sub
repz
das
xchg
divl
or
int3
lods
or
xor
inc
ret
loop
xor
nop
push
rorb
ja
icebp
clc
cmp
lahf
lods
lret
dec
int
dec
adc
jo
lds
roll
outsl
pushf
subl
rclb
orb
sub
xchg
cmp
dec
sub
cmp
je
in
clc
jae
addb
stc
cmp
scas
push
inc
lds
loopne
fs
test
imul
mov
icebp
sti
test
aas
jecxz
mov
and
in
addr16
inc
ljmp
mov
cld
sti
outsl
mov
mov
inc
or
sub
dec
jmp
das
jecxz
inc
xchg
andb
ss
popf
push
adc
cmp
jge
sub
insl
pushf
dec
push
jge
jne
hlt
leave
repnz
cmc
mov
scas
in
add
mov
test
mov
cmpsb
into
jp
mov
fldl
inc
sbb
popf
rcll
inc
mov
lds
ljmp
add
fcoms
rol
push
lahf
jg
std
mov
inc
inc
imul
out
xchg
pop
lret
sbb
add
insl
jle
rolb
mov
clc
sub
push
in
repnz
xchg
adc
pop
xchg
jne
mov
mov
std
cwtl
xchg
sub
in
outsl
fwait
push
mov
loopne
ljmp
insl
loopne
shll
xchg
cmpsl
jnp
fsubs
scas
inc
out
call
or
push
or
mov
bswap
out
mov
inc
sub
and
scas
pop
dec
jo
cwtl
xchg
mov
mov
test
cltd
mov
add
cmp
cli
imul
int
mov
mov
mov
sahf
aas
rcrb
lcall
cmp
adc
bound
xchg
cmp
in
cmpsb
pop
dec
push
sbb
pop
cmp
gs
jge
inc
je
add
fcmovbe
stos
dec
mov
pop
inc
mov
sahf
shlb
out
xor
sbb
orl
cmp
mov
or
outsl
outsl
adc
jge
in
xchg
ror
dec
push
aaa
push
mov
push
jg
ljmp
cmp
xor
xor
fildll
cmp
dec
stc
dec
mov
cmp
daa
jns
ret
enter
mov
orb
jle
mov
cmp
dec
aas
push
fisubrs
mov
int
mov
ret
ds
in
and
adc
movsl
add
cmp
test
push
jmp
hlt
lret
lock
or
int
and
jmp
out
xchg
dec
mov
dec
or
loope
daa
je
jb
dec
fsubrs
call
out
stos
subb
pop
fstl
out
inc
repnz
and
jp
mov
imul
js
mov
addr16
cltd
and
or
cmp
pop
cmp
addr16
inc
mov
and
dec
cli
adc
xor
aas
xchg
mov
cld
clc
cmp
jns
movsw
dec
push
faddp
lret
call
pop
repz
into
jg
pushf
cmp
enter
cmp
je
notl
gs
outsb
mov
lahf
movsl
cmpsb
loopne
jne
out
in
repnz
jns
insl
jmp
insl
mov
stc
push
call
add
notl
stos
lret
mov
fs
push
add
pop
fildl
stc
scas
pop
mov
dec
xchg
fldenv
xor
ds
xchg
cmp
jb
and
div
aad
jl
sub
dec
push
inc
mov
pusha
pop
xor
js
out
sub
out
sub
movsb
sbbb
jnp
cmc
bndldx
mov
mov
xchg
es
stos
mov
mov
sbb
mov
xor
pop
mov
cs
inc
xchg
ljmp
mov
cmpsb
cwtl
cmp
imul
aas
inc
int
mov
cmpb
xchg
imul
adc
dec
mov
sbb
pop
sub
out
xor
mov
test
inc
lods
xchg
push
scas
xorl
dec
je
movsl
leave
mov
sbb
cmp
movsl
outsl
pop
aad
cmp
fcomi
sbb
or
cltd
imul
or
iret
cmpsb
loope
cmpsl
js
mov
sub
mov
cmp
mov
sti
push
lahf
in
ja
xchg
lahf
scas
mov
test
add
clc
adc
sub
setno
scas
xchg
rcl
scas
imul
test
inc
and
dec
or
mov
mov
xchg
sub
mov
jg
aaa
hlt
mov
cmpl
imul
repnz
clc
sub
ss
mov
or
lods
jne
pushl
mov
push
movsl
push
stos
cmp
insl
pop
and
sbb
sbb
dec
xor
and
inc
xor
scas
insl
pop
popf
and
mov
or
gs
out
cmp
mov
xorb
pop
sti
push
push
test
jo
mov
cmp
pop
add
xor
dec
mov
sub
cmpsl
and
pop
cmp
push
iret
nop
pop
lret
or
inc
or
scas
sub
imulb
cmp
pop
xor
imul
je
cmc
sbb
out
fisttps
xor
cmp
jecxz
cmpsl
data16
popf
and
stc
pusha
mov
add
dec
xchg
rclb
or
dec
pusha
xchg
clc
mov
adc
int
sub
push
xchg
test
jno
xchg
js
add
testl
mov
scas
sarl
lret
int3
out
adc
lcall
cmp
and
and
addr16
mov
out
test
mov
xchg
xor
and
mov
lret
pushf
sub
in
adc
popf
aas
cmp
cmpl
push
jo
pop
push
dec
inc
jae
out
popf
into
and
cld
cld
push
les
call
flds
repnz
dec
in
pop
out
jmp
sbb
pop
cmp
cld
xchg
test
or
adc
jno
iret
xchg
or
xor
lds
dec
lea
push
or
test
add
and
fs
icebp
mov
push
std
imul
push
pop
push
cmpsl
sbb
int3
les
pop
test
xchg
movsl
aaa
add
ficomps
sub
test
mov
dec
arpl
xchg
fsubrs
movsb
add
cwtl
mov
mov
arpl
insb
hlt
out
popf
jbe
xor
add
pop
and
movsl
sbb
and
stc
jb
xor
sub
and
mov
inc
ljmp
fwait
aam
push
dec
popa
mov
dec
test
cwtl
js
movsb
adc
xor
mov
push
xor
dec
xchg
sbb
and
test
in
cmp
mov
jmp
mov
stos
subb
pop
jo
lods
jne
rcrb
xor
cmp
cmp
or
cmpsb
jne
mov
cmc
jg
inc
dec
lret
incl
repnz
sbb
mov
cmp
fisttpll
sbb
add
cmp
mov
mov
aas
iret
add
and
and
mov
stos
xchg
enter
jae
pand
cmp
enter
mov
popf
out
jne
aam
push
pop
adc
or
pusha
loope
int3
sar
jl
repnz
push
cld
outsl
sbb
nop
dec
and
cwtl
fisubs
or
leave
or
in
aaa
shl
mov
mov
push
dec
je
dec
lahf
mov
in
aas
int
int
cs
pushf
cs
xchg
fsubrp
mov
mov
push
gs
lcall
aam
fisubs
mov
lea
and
stos
std
lcall
jecxz
mov
xor
pop
popa
int3
cmp
mov
jae
pop
insl
stos
push
out
popf
out
pop
mov
call
nop
xchg
cmp
and
stc
xchg
decl
movsb
sahf
mov
jge
sarl
dec
push
rcrb
fisubrs
sub
pop
aam
xchg
imul
scas
cmp
int
or
cli
int
int
mov
jnp
pop
cmp
xor
xor
inc
inc
and
mov
cmp
pop
jno
test
ret
aam
jbe
sbb
dec
mov
fldcw
xlat
out
in
pop
inc
test
mov
ljmp
add
or
int3
cmp
xchg
iret
pop
imul
ret
rcll
push
loope
repz
outsl
fistpll
fwait
push
cmpsl
mov
fucom
cmp
jmp
ds
leave
lahf
shr
jns
outsl
sarl
fiadds
cwtl
lahf
xchg
aas
aas
xor
test
es
dec
test
fisubrs
bound
add
or
push
scas
popa
out
and
mov
xchg
cmc
add
or
leave
xor
test
xchg
mov
subb
mov
jp
xchg
pop
mov
pusha
movsb
and
and
xchg
xchg
xor
xchg
jmp
iret
or
adc
inc
shl
lret
dec
pushl
popa
out
stos
sahf
dec
pop
add
cmp
in
jle
inc
push
fsqrt
idivb
cmp
sbb
sbb
inc
mov
fsubrl
sub
aad
mov
xchg
gs
lcall
dec
sub
adc
mov
fistl
data16
cmp
push
ficoms
pushf
setb
pop
dec
stos
xor
dec
pop
sub
das
lret
push
in
fwait
dec
xchg
cmp
lock
xor
jp
rol
mov
ja
add
in
mov
enter
bound
pushf
pop
cmpl
dec
push
je
sbbb
pop
test
add
adc
addr16
lahf
sbb
lcall
xlat
dec
mov
mov
dec
data16
out
pop
mov
in
aaa
adc
cmp
loop
pop
stos
push
jae
lret
mov
add
imul
fstps
int
sbb
sbb
imul
jge
dec
out
sub
and
and
mov
mov
xlat
cwtl
out
iret
or
mov
jbe
sti
sub
movsb
out
adc
cmp
stc
mov
pop
xchg
jne
inc
sbb
push
add
aam
fwait
movsl
xchg
jl
sub
mov
int
fsubs
add
jecxz
sbb
addb
push
push
mov
es
inc
gs
and
xchg
lret
arpl
inc
mov
xchg
or
imul
ret
xchg
movl
pop
jl
push
les
dec
mov
adc
test
sbb
or
push
lds
xchg
clc
std
cmp
mov
adc
dec
ja
stos
mov
and
inc
icebp
dec
fcomp
int3
push
jns
jo
adc
test
and
sub
test
pop
xor
pop
inc
ja
sub
into
in
aas
ja
cmp
inc
mov
cmp
xchg
xor
aaa
and
fisttpll
sti
ss
xor
lret
repz
rorb
in
and
sahf
jae,pt
dec
lret
out
notl
ljmp
jo
xor
aaa
cmpl
cmpsb
or
fidivl
sbb
fcompl
add
stos
sti
lods
test
and
mov
pop
xchg
or
mov
in
jge
jg
inc
push
out
pop
cwtl
jo
scas
jbe
mov
pop
scas
aas
mov
int
pop
adc
jnp
lock
bound
clc
dec
pop
add
out
add
lds
cmp
add
dec
or
stos
mov
xchg
sbb
jbe
aad
pushf
xchg
xchg
ret
pushf
jg
enter
icebp
xchg
mov
popa
pop
iret
push
fchs
sbb
pop
push
aam
nop
divl
add
dec
les
xchg
sbb
imul
sahf
loope
mov
and
in
sub
loope
cmpsb
imul
xor
sbb
nop
outsl
ja
leave
push
push
lods
mov
sahf
movb
stos
roll
aaa
jno
dec
push
mov
and
in
fstl
jp
aad
lods
stos
fsubl
adc
xor
pop
hlt
sbb
jnp
fscale
xchg
enter
flds
dec
sbb
data16
push
add
fcomp
mov
xchg
pop
mov
cmp
call
xchg
aad
fisubrl
dec
imul
cmp
enter
call
iret
sbb
test
adc
mov
cmp
lods
dec
stos
ja
call
push
out
in
push
xchg
and
out
cld
jo
adc
cwtl
sub
shld
cmp
jecxz
add
adc
or
push
sahf
xchg
scas
aam
mov
xor
mov
xchg
fdivl
push
xchg
sub
push
add
addl
xor
aad
xlat
pusha
add
cltd
imul
cmpl
imul
dec
repz
sbb
add
xor
inc
leave
mov
test
sarb
adcl
popa
xlat
lea
dec
xlat
out
cwtl
cmp
fs
cld
and
or
xchg
testb
inc
js
adc
int
movsl
mov
fwait
adc
mov
shlb
dec
adc
lods
or
iret
jmp
adc
push
movsl
push
scas
mov
in
dec
jns
mov
loopne
in
hlt
xor
adc
hlt
sarl
adc
gs
cmp
jmp
cmp
cli
gs
push
xchg
es
jo
mov
loopne
mov
inc
mov
scas
mov
aaa
in
mov
xchg
test
icebp
cmp
jne
sahf
iret
mov
repz
mov
jns
addb
stos
bound
mov
jno
bound
cli
mov
sbb
gs
push
fwait
cmp
cmp
xchg
mov
or
movsb
pop
cltd
mov
mov
les
inc
xchg
scas
lds
out
inc
xchg
mov
add
and
mov
pop
and
stos
popa
ret
pop
xchg
dec
gs
mov
fwait
jne
je
insl
std
ret
dec
loop
aaa
shll
fldl
cltd
inc
lods
mov
sub
jp
mov
xor
or
pop
sub
or
cwtl
push
mov
mov
jo
push
nop
cwtl
iret
cmp
jne
je
leave
data16
or
mov
jecxz
fldt
cmp
push
cmp
inc
call
push
push
stos
cmp
test
sub
adc
mov
pushf
pusha
cmp
in
lds
xchg
ret
lret
cltd
mov
insl
sub
ss
inc
mov
jge
push
inc
aam
mov
das
in
lcall
xor
aas
dec
and
dec
add
mov
jmp
ljmp
jecxz
dec
in
stos
fsubrs
pop
fdivrp
in
pop
xor
daa
iret
jg
jp
repz
ret
ret
fists
add
aaa
aaa
pop
ret
mov
push
inc
or
and
or
push
lcall
mov
out
mov
mov
shrb
push
insl
jnp
push
mov
scas
in
xchg
daa
sbb
insl
push
lock
jns
stos
mov
das
dec
fs
push
out
cmp
div
mov
in
add
popf
xchg
out
adc
in
push
rorb
pop
xlat
mov
or
sub
out
movsb
je
jl
and
dec
inc
pop
mov
jge
cltd
loop
push
jle
jne
or
mov
jns
push
jl
ss
add
pop
loopne
stos
xor
outsl
loope
cwtl
pusha
cld
je
jle
inc
mov
testb
jnp
leave
jno
nop
fwait
xchg
jns
mov
push
test
push
sbb
jbe
push
pop
push
test
push
outsb
repz
ret
mov
icebp
data16
sahf
mov
sub
das
lret
xor
or
mov
stos
mov
inc
ss
add
cmp
xor
and
jns
sub
inc
loopne
push
or
inc
inc
out
mov
xchg
test
js
inc
leave
add
jle
insl
sub
mov
and
fildl
and
hlt
ret
into
mov
jno
sub
nop
xchg
push
push
xor
mov
mov
sub
es
inc
adc
xchg
inc
sub
sub
pop
push
fstpl
gs
in
jno
repnz
aad
fsubs
fldl
xor
into
or
loop
inc
cmp
push
xchg
imul
dec
shlb
test
or
mov
ret
sbb
jbe
sbb
aaa
in
mov
jne
dec
push
push
add
loopne
pop
xor
aaa
xchg
jmp
sub
data16
fldcw
aas
adc
or
xor
call
mov
lret
xorb
pushf
scas
dec
jns
adc
xchg
xor
test
in
mov
mov
push
xor
jge
imul
stc
insl
fidivs
stc
jnp
xlat
jg
outsb
ljmp
call
dec
xor
outsb
in
mov
pop
loopne
iret
mov
mov
mov
movsl
xchg
dec
je
ljmp
mov
mov
repnz
fstpt
mov
mov
or
jns
pop
mov
dec
ljmp
and
sub
ret
mov
xor
addl
ret
xchg
jo
jg
outsb
mov
in
ret
sahf
fsubl
xor
xor
mov
enter
push
xchg
insb
pop
sbb
mov
cmp
out
sub
cwtl
pop
lcall
push
mov
xchg
push
fnstsw
rorl
mov
scas
xchg
dec
ret
outsl
mov
lods
push
fimull
cmpsl
iret
insl
ja
pusha
lods
enter
insl
xchg
imul
lods
jle
xchg
and
lahf
push
outsl
dec
mov
call
shrb
fidivs
insl
std
inc
push
cmp
sahf
popa
mov
jb
mov
pop
mov
mov
jnp,pt
add
and
xor
push
add
lret
popa
pop
int
into
pop
dec
mov
scas
icebp
mov
cmp
cmpsl
lret
mov
dec
outsb
jecxz
aaa
jb
xchg
mov
loope
stos
lods
dec
jl
pop
and
xlat
iret
cmp
pop
sub
bound
fbld
lea
fstl
insl
scas
sub
pop
xchg
mov
sbb
inc
or
fisubrl
xor
repz
and
add
jb
sub
mov
js
adc
out
mov
enter
xor
shrl
xchg
adc
mov
xchg
adcl
pop
jg
mov
or
mov
xor
out
insb
jno
adc
out
mov
pop
aam
push
lahf
xchg
add
pop
pop
sub
data16
cs
push
or
test
add
ds
hlt
jp
dec
mov
xor
jns
fs
dec
lods
frstor
dec
mov
pushf
enter
add
jmp
jge
movsl
imulb
add
ja
jo
dec
fwait
pop
pop
and
sub
mov
dec
std
ss
icebp
or
adc
enter
cmpb
rcrb
sbb
movsl
std
scas
ja
daa
push
das
mov
test
xor
xlat
mov
push
ds
xchg
scas
jae
adc
lds
movb
bswap
and
mov
sub
jg
mov
test
shl
pop
mov
push
fmull
fnstsw
pop
push
sbb
xchg
cli
and
lods
lret
xchg
cmp
popa
loope
ret
add
adc
mov
mov
dec
mov
push
pop
xchg
lea
gs
call
cli
mov
pusha
addr16
mov
insl
arpl
pushf
and
push
insl
jle
xor
mov
mov
adc
cli
sub
outsl
jp
jecxz
cmp
subl
js
dec
push
push
out
push
sub
rcrb
test
pop
and
imul
test
push
and
jmp
cmp
mov
xchg
pop
adc
xor
addr16
jle
cmp
inc
mov
adc
mov
lret
and
pop
push
sub
jp
mov
mov
xor
cmovg
and
jge
imull
and
adc
js
jle
sbb
hlt
jbe
mov
daa
jecxz
adc
xchg
cmp
inc
outsl
scas
daa
jbe
dec
xor
out
loopne
lds
sub
lds
xchg
fldt
and
inc
and
and
sub
aad
jo
enter
cmpsb
popf
push
repz
mov
add
pop
push
mov
sub
aam
pop
add
sahf
paddusw
dec
jne
add
data16
aam
pop
inc
out
fs
sahf
cs
cmpsb
test
out
in
es
dec
jmp
stos
jl
stos
jns
mov
dec
push
repnz
mov
pop
lahf
adc
push
xor
jmp
jge
mov
dec
icebp
lret
add
mov
pusha
ds
xchg
jne
pop
std
dec
sub
aad
clc
roll
stos
mov
adc
movsl
pop
pop
insl
cli
ds
in
test
jle
rorl
or
rorb
cmp
ficomps
push
or
cld
xor
pop
in
xchg
cmp
int
cmc
in
inc
and
lods
cmp
jmp
jl
mov
in
push
cmp
push
arpl
sub
push
dec
shrl
mov
and
shl
dec
push
lods
or
movsb
adc
hlt
sub
jp
push
stc
xchg
iret
insb
sub
sub
or
fucomip
fs
lea
mov
cmp
push
push
xchg
testl
fcoms
repnz
jl
and
sbb
popf
pop
pop
or
xchg
sbb
sbb
xor
sti
cwtl
mov
inc
iret
and
xchg
sbb
push
test
add
push
lret
pop
insl
aad
pop
cvttps2pi
xlat
xchg
lcall
pop
sbb
repz
aad
pop
jmp
cmp
xchg
roll
jecxz
cmp
sbb
and
pop
mov
dec
add
pop
push
dec
leave
rolb
std
daa
dec
es
and
xchg
movsl
push
xchg
adc
push
mov
mov
pop
les
xchg
xor
adc
imul
out
rorb
scas
mov
rorl
xlat
mov
xor
scas
jno
in
lock
or
xor
ret
test
test
in
mov
cmp
xchg
mov
neg
mov
out
stc
cmpb
test
loope
add
push
aam
icebp
dec
call
in
xchg
fisubrl
loope
sub
sbb
movsl
mov
out
sbb
repz
sub
je
or
mov
movsb
mov
ror
pop
add
cli
icebp
aad
sub
mov
and
test
jmp
test
pop
jp
pop
mov
aaa
mov
lods
lds
iret
mov
pop
adc
in
jle
cli
popa
in
xor
aaa
sbb
push
mov
add
dec
mov
xchg
test
dec
int
lret
int3
mov
and
jge
mov
jg
pusha
pop
sarb
dec
mov
xchg
movsl
imul
div
repz
cmp
mov
push
cmp
test
sahf
insb
clc
pop
dec
ret
pop
out
dec
adc
push
call
jmp
mov
call
lea
xor
stc
leave
add
sbb
mov
mov
dec
adc
int3
push
sbb
mov
add
jae
sub
push
fistl
sbb
jno
mov
stc
das
stos
adc
fwait
sbb
addb
mov
xlat
lahf
dec
inc
push
mov
in
data16
out
adc
loopne
sub
dec
pop
fcmovbe
in
fnstcw
adc
mov
cmp
popa
insb
lea
lds
mov
and
jne
and
xor
or
pop
scas
or
test
loopne
mov
or
out
rcrb
test
and
sbb
andl
and
sbb
aas
into
add
aad
mov
push
mov
pop
xchg
mov
mov
pop
jmp
lods
jbe
lods
pop
scas
sub
gs
and
cli
nop
cli
fldt
xor
cwtl
fmull
movsb
mov
not
loop
testb
aam
lods
or
push
sahf
fld
sti
jg
lahf
data16
in
das
das
js
mov
pop
std
enter
lods
mulb
mov
ficomps
fnstcw
xchg
or
xchg
sbb
imulb
and
in
jmp
clc
hlt
outsl
and
sahf
jmp
shr
adc
mov
dec
test
shll
mov
xchg
fistps
push
push
imul
test
xchg
pop
int
int
jo
or
dec
push
xchg
mov
mov
imul
movsb
movsl
jecxz
dec
xor
repnz
fwait
push
pop
xchg
je
push
mov
mov
sub
mov
add
mov
pop
jecxz
sbb
scas
sub
test
aam
inc
insl
sahf
movsb
dec
pop
inc
adc
mov
sbb
or
xchg
negb
adc
add
cmpsb
mov
hlt
jg
nop
test
fdivrs
cmp
push
mov
xchg
int3
aaa
mov
and
cltd
mov
jle
fnstcw
outsl
popa
mov
xchg
mov
int
fldcw
jge
addl
jge
jo
fcompl
xor
inc
popa
in
or
adc
dec
add
pop
cmp
jecxz
mov
mov
sahf
pop
outsl
test
test
test
aas
or
int3
dec
popa
fcompl
push
movsb
push
cmp
clc
out
addb
mov
iret
cmp
sub
aam
call
and
xchg
je
xchg
fwait
jo
fsubl
sahf
cltd
fneni(8087
dec
movb
push
stc
insb
add
fdivrp
inc
jp
push
cwtl
push
into
cli
and
mov
ret
out
andl
add
shll
mov
hlt
mov
les
outsb
pop
je
push
test
rolb
data16
shlb
frstor
push
dec
inc
and
iret
rcr
push
sbb
push
fmul
cmc
loopne
mov
sbb
and
jp
out
mov
dec
ror
data16
mov
faddp
dec
inc
jmp
mov
andl
lret
subb
cmpsl
push
mov
xchg
ja
cmpsb
and
test
pop
mov
aad
std
mov
repnz
out
aas
mov
test
jg
fisttps
inc
inc
pop
mov
push
pop
push
push
sbb
aam
dec
sbb
adc
cmc
cs
daa
sub
mov
pop
mov
ja
dec
cmp
cld
insb
sub
adcl
jge
mov
dec
inc
inc
andb
push
sbb
jae
lret
mov
adc
mov
jno
popa
add
sti
mov
mov
fsub
push
adcb
ja
xchg
push
arpl
pop
js
out
clc
lret
cmp
xchg
popa
xchg
sub
mov
mov
cmp
sub
lret
fcomip
fs
cmp
popf
and
imul
jnp
xor
jg
shll
push
test
sbb
sbb
cmp
mov
dec
sahf
pop
push
sbb
inc
sub
adc
push
mov
out
movsl
or
aaa
add
and
data16
hlt
mov
adc
js
mov
and
ficoms
ja
test
mov
push
mov
inc
jbe
jo
mov
mov
lods
lds
push
xchg
mov
mov
fisttpll
jnp
sbb
outsl
aaa
xor
int
popa
scas
and
lcall
sbb
in
push
push
stos
and
add
push
jg
mov
xchg
dec
pop
ja
or
inc
mov
ret
add
dec
xchg
addr16
mov
mov
mov
movsb
push
add
in
inc
out
adc
jne
insb
out
stos
pop
mov
cli
and
fstps
hlt
in
xchg
dec
js
rorl
hlt
mov
pusha
clc
movsl
sub
inc
cmp
jle
sbb
push
orl
sbb
adcb
mov
jne
aas
imul
and
dec
fs
sub
mov
je
jl
imull
cmpsl
sub
push
xchg
test
cld
mov
mov
lods
jbe
mov
or
or
shrb
pop
sarb
out
or
cmp
leave
fmuls
inc
loopne
repnz
sub
xchg
out
lahf
jns
rorb
inc
mov
jae
movsl
dec
sbb
mov
sub
mov
xorb
ret
pop
jae
mov
mov
fbld
seta
xchg
movsl
inc
inc
shll
shll
sbb
pop
andl
jb
scas
and
insl
xor
mov
jns
in
lods
push
mov
ret
mov
rolb
pop
push
cwtl
cwtl
fsubs
jecxz
outsb
sbb
pop
nop
add
and
adc
setne
ret
push
out
arpl
and
ret
jg
div
mov
push
mov
stc
inc
adc
adcl
loope
int
adc
mov
std
in
adc
lret
mov
arpl
cs
pop
mov
dec
inc
sub
aam
fnstcw
call
dec
push
mov
lods
dec
sub
mov
mul
popf
out
enter
icebp
ja
jl
insb
mov
das
or
lret
jnp
sub
mov
das
push
mov
dec
mov
aas
mov
stos
mov
push
rcrl
and
bound
das
mov
xchg
lods
sub
lods
jge
jp
out
adc
add
jnp
jbe
xor
aad
jne
nop
jecxz
lea
or
iret
cmp
xchg
push
lods
cli
xchg
daa
inc
xchg
ljmp
cli
ds
int
mov
shlb
shll
aam
adc
stc
mov
aas
jne
push
movsb
mov
push
ret
cltd
mov
repz
push
and
mov
frstpm(287
dec
sbb
imul
sahf
xor
xor
mov
jmp
mov
call
xor
add
jno
pop
lret
rcrb
loopne
lock
mov
sub
pop
xor
push
pop
addr16
ljmp
popf
jecxz
sbb
mov
aad
sahf
dec
test
push
fs
adcb
gs
sahf
addr16
cmpsb
stos
add
insb
jns
pop
fcmovnu
xchg
shll
mov
lahf
lss
loop
aad
xchg
sub
fbstp
lret
cltd
xor
cmpsl
rol
orl
lods
jmp
sub
jnp
fsubl
call
test
out
cs
sbb
and
dec
adc
xor
sbb
gs
out
idivl
xchg
dec
or
in
nop
cld
dec
lods
and
sbb
cmpl
ret
xor
test
sbb
jae
int
fisubrl
sbb
or
or
push
fidivl
and
cld
jg
jb
fnstenv
jmp
in
mov
inc
insl
outsb
jmp
adc
push
movsl
orb
inc
pop
scas
cmpb
std
std
rcll
aas
out
mov
leave
dec
lcall
arpl
push
push
outsl
add
sti
pop
inc
xor
push
in
mov
repnz
rorb
sbb
mov
cmpsb
je
sbb
or
cmp
xchg
call
cld
popa
sti
sub
push
lcall
in
shll
mov
xor
lcall
out
dec
push
add
imul
dec
cli
mov
popl
nop
stos
inc
lock
mov
xorl
push
mov
movsb
xor
sbb
cmp
lock
mov
push
loopne
mov
addr16
push
dec
pop
in
cmp
xor
inc
lahf
outsl
faddl
ret
lcall
fnsave
pop
xor
ficompl
fidivrl
pop
mov
lods
or
mov
andl
xor
mov
push
lcall
in
pusha
xchg
xchg
test
xchg
jns
mov
mov
ja
adc
add
mov
negb
icebp
and
out
sbb
nop
cmp
sub
enter
push
xchg
loop
fisttps
xor
mov
xchg
sbb
sub
and
mov
xor
popl
mov
enter
sbb
lds
decb
cmp
pop
shrb
jl
sbb
push
or
pop
cmp
cmpsb
adc
dec
dec
in
fucomp
cmp
cmp
cltd
test
test
fchs
xchg
lret
sub
push
mov
int
out
mov
loop,pn
sub
dec
xor
pop
je
add
pop
add
js
lods
aam
xlat
test
stc
pop
fcompl
movsb
inc
subb
nop
sbb
movbe
cltd
popl
rcll
mov
cmp
rorb
xor
jg
nop
fists
pop
or
cltd
or
repnz
add
icebp
cltd
fsts
sub
aam
aaa
ja
push
push
fsubrl
cs
jle
iret
test
out
aam
xchg
ret
dec
cmp
lds
test
jo
aam
cmp
mov
lods
inc
adc
jo
jns
dec
test
inc
loope
out
mov
popa
cli
movsb
in
jle
xchg
cmp
repz
inc
inc
cmp
je
pushf
data16
pop
outsl
sub
jae
inc
jge
dec
in
mov
pusha
shlb
daa
sbb
scas
dec
mov
xorb
and
flds
clc
iret
loopne
fsubs
gs
in
das
idivl
pop
dec
jp
and
sub
jae
jmp
cmpsb
enter
dec
jns
pusha
test
leave
gs
lods
inc
jbe
flds
out
ret
out
popw
push
push
sarb
ret
cmp
jp
in
decb
sub
sub
add
nop
push
mov
les
ljmp
mov
test
shrd
cwtl
ficoms
push
push
lret
xchg
sarb
andb
push
subb
ret
shlb
out
sub
mov
mov
or
adc
mov
sahf
out
sbb
dec
test
xchg
mov
push
push
dec
in
lock
push
xchg
push
push
cmp
mov
jo
movsb
jo
and
sub
popf
ds
sti
sub
lahf
xchg
add
mov
mov
mov
mov
pushf
jg
xor
mov
cmp
dec
cmp
insl
enter
mov
or
addr16
in
add
add
lods
aas
mov
sbb
mov
inc
and
cwtl
cmpsb
pop
fwait
inc
sahf
cld
cmp
jmp
fsubl
dec
incl
hlt
jae
loopne
xor
xor
adcb
je
jl
push
test
jge
sbb
fcompl
sub
lret
pushf
jp
lds
bound
cs
rcrl
or
mov
sbb
aas
adc
xor
ret
inc
addl
and
mov
jns
jne
inc
in
jns
dec
aad
test
adc
test
jmp
inc
aas
movsb
roll
sub
mov
xchg
repz
dec
pop
test
movsl
cmp
cmpsb
mov
movsl
xrelease
push
xchg
jg
dec
pop
cmp
lea
sub
loope
shll
xor
bound
orb
cld
insb
xor
push
sub
or
sbbl
xor
arpl
bnd
dec
fisttps
adc
mov
mov
push
sub
fs
mov
mov
adc
enter
movsb
jmp
lds
xor
xor
xor
mov
rcrb
add
dec
ret
adc
stos
sub
dec
mov
or
sbb
inc
mov
dec
cmp
mov
xor
aas
sub
xchg
pushf
push
pop
fwait
inc
lret
add
cmp
cmp
mov
js
mov
cmp
insb
movsb
jp
out
pop
jmp
add
ljmp
and
ds
jg
iret
push
rolb
mov
push
xor
rdrand
cmp
nop
cmp
cs
sub
add
push
loopne
or
mov
xchg
sbb
jecxz
push
xchg
sub
insb
pop
add
jnp
push
mov
jecxz
maxps
ror
js
mov
sbb
std
leave
or
push
pop
shrl
lahf
popf
out
bnd
inc
pusha
insb
stc
mov
std
pushf
lea
shlb
jno
mov
arpl
divl
push
pop
ja
incb
lret
xchg
ds
xchg
out
lods
xchg
dec
imul
or
jp
mov
imull
cmp
pop
gs
movsl
rcrb
jle
inc
adc
outsl
jg
and
or
mov
or
cld
push
mov
lods
adc
xor
imul
dec
lods
ja
xchg
repz
repnz
push
les
mov
daa
jge
pop
add
nop
jle
adc
mov
ljmp
cmp
or
jg
sbb
fisttps
in
push
sub
imul
xor
push
xor
pop
cld
cmpsb
xchg
xchg
mov
xchg
sub
adc
xchg
inc
mov
xor
mov
pop
adc
mov
arpl
cmp
es
adc
je
mov
fidivrl
mov
ds
out
xchg
insb
into
mov
mov
cmp
cmc
fcmovu
or
mov
aad
sbb
sub
mov
mov
sub
dec
push
push
sub
pusha
decb
or
push
addl
push
push
fists
cli
out
pop
mov
inc
pusha
push
jle
jb
cmp
and
test
shll
not
fldl2e
fiadds
or
mov
push
jnp
push
dec
inc
cmpsb
sub
cmpsb
mov
add
push
push
sbb
push
jb
mov
out
repz
out
or
fnstsw
push
xor
out
loopne
pop
lahf
popf
cwtl
mov
adc
sub
mov
or
outsl
test
loop
cmp
sub
mov
frstor
jmp
ret
add
xlat
bnd
adc
scas
adc
int3
mov
and
sbb
clc
scas
pop
cmpsb
in
into
fucomip
and
repnz
dec
rol
mov
outsb
cli
ret
sahf
sub
jae
xor
loope
jo
fadd
sahf
cld
daa
mov
push
mov
addb
xor
mov
popa
insl
movsl
jle
pop
sbb
cmpl
or
loopne
mov
push
cmpsl
cwtl
sbb
rcrb
ret
pop
mov
push
cmp
inc
sbb
adc
inc
mov
js
lcall
movsb
dec
cmpsl
lret
adc
adc
scas
xor
inc
and
das
sub
xchg
in
and
jle
shrb
shrb
scas
cmpsl
cli
sahf
xchg
lock
pop
mov
pop
dec
imul
aam
test
arpl
cltd
xchg
cmpb
or
xor
mov
adcl
mov
mov
adc
insb
add
rolb
lds
mov
jbe
repnz
jmp
pop
out
or
test
lock
inc
sub
fsqrt
push
pop
pop
sub
cwtl
roll
push
nop
mov
outsl
sub
or
sahf
push
unpcklps
lds
rcll
lods
xor
les
xlat
leave
mulb
mov
xchg
inc
and
or
jg
cmp
pusha
jecxz
dec
inc
je
dec
int
test
shrb
push
call
lret
pusha
jns
pop
adc
jae
xchg
addr16
das
pop
fidivrs
js
dec
outsb
pop
sbb
pop
sub
fldcw
cli
mov
push
insb
jne
jp
add
push
fldcw
movsb
pop
mov
aam
jmp
add
and
imul
pop
mov
pushf
out
das
mov
cli
pop
xchg
xchg
jbe
repz
push
xchg
call
xor
cmc
cmp
rcrb
pusha
push
test
pop
dec
stos
ret
cld
pop
inc
xchg
mov
pminub
and
lret
aad
sub
jno
push
sub
out
and
mov
arpl
mov
mov
test
xor
sahf
xor
adc
scas
push
pop
pop
arpl
das
js
jo
xchg
adc
leave
mov
loope
andl
jp
and
inc
das
push
add
inc
stos
dec
shl
arpl
stc
xchg
xor
sarl
imul
stos
cmp
scas
ret
sub
inc
mov
outsb
ss
xor
popf
dec
out
test
add
jnp
out
dec
push
adc
jle
mov
cmp
push
inc
sub
inc
cmp
std
not
gs
hlt
cmpsl
mov
cs
inc
arpl
cmp
mov
movsl
bound
mov
sub
ret
fdivrl
into
aad
or
aad
inc
mov
xor
mov
into
xor
mov
arpl
add
aas
mov
popf
adc
outsb
xchg
loopne
xor
nop
test
adc
std
add
popl
and
xor
mov
lds
jns
cld
pusha
cmpsb
aam
cli
pop
enter
xor
xchg
enter
xchg
pop
sti
xor
jne
jmp
pop
ds
sub
add
jo
imull
fmull
lret
sbb
dec
shlb
dec
insb
ret
in
push
adc
mov
inc
std
mov
sbb
pop
dec
inc
mov
outsb
push
pusha
xchg
pop
enter
adc
imulb
xchg
leave
out
sbb
subl
mov
int
mov
mov
ds
ret
fidivs
push
add
enter
jnp
sarb
jl
mov
lods
in
bound
leave
and
nop
aam
add
xor
push
outsb
sbb
xchg
xchg
sub
shrl
repz
jge
adc
mov
mov
add
cld
inc
imul
aas
icebp
je
loope
and
hlt
cwtl
jae
mov
das
or
fadds
es
daa
ljmp
lock
and
ja
pop
fwait
ret
hlt
dec
push
fisttpl
test
sahf
or
imul
das
pop
mov
stos
dec
lods
jb
xor
push
in
out
sbb
mov
ja
dec
iret
mov
out
in
sbb
push
xchg
sbb
adc
mov
pusha
mov
pop
std
jecxz
std
ljmp
adc
lods
jbe
adc
out
pusha
in
adc
xlat
sarl
push
cmp
rol
cwtl
cld
pop
mov
jp
or
cmp
and
stos
insb
mov
adc
inc
cmpl
or
js
jg
pop
popa
mov
and
adc
and
mov
sbb
adc
out
mov
pop
scas
dec
add
repnz
mov
ret
lea
sub
addb
add
mov
and
imul
jns
push
jmp
lods
mov
xchg
nop
mov
roll
adc
sub
call
lret
mov
cmc
fildll
imul
testb
jo
jns
addr16
mov
mov
insl
mov
dec
mov
fs
xchg
std
cli
push
sbb
je
pop
xor
out
call
mov
mov
int
out
and
jecxz
push
rol
push
and
jp
les
rcr
cmp
fadds
popf
flds
sub
dec
pop
bound
pop
push
insl
clc
dec
ret
push
xchg
scas
lods
pop
out
sbb
or
adc
out
call
mov
jnp
cwtl
stc
jb
sub
mov
decb
aad
sub
gs
sbb
pop
pop
daa
jne
adc
or
dec
mov
cmpl
xor
rolb
addl
push
aam
mov
stos
push
xor
into
jg
in
and
cmpsl
mov
xor
ja
outsb
xchg
mov
pushf
stos
and
icebp
cmp
in
mov
xlat
pushf
or
int3
push
mov
ja
jno
in
sub
cltd
movsl
gs
cmp
xor
sub
and
mov
jae
test
stos
lds
push
test
rcl
xchg
sub
scas
insl
xor
or
inc
add
mov
and
cmp
mov
leave
pop
sahf
adc
lret
sub
leave
lahf
in
popf
repz
pop
imul
or
cmp
test
adc
mov
xlat
xor
cmp
mov
repnz
mov
xor
jmp
push
jae
pop
xchg
pop
cmp
mov
sbb
and
mov
scas
negb
arpl
rcr
add
repnz
xor
xchg
or
mov
loopne
or
xchg
es
in
and
pusha
orb
push
sti
or
lret
push
xchg
or
ss
sub
fists
jmp
test
mov
push
xchg
and
push
dec
shll
hlt
ja
or
sub
sbbb
mov
jns
push
pushf
mov
fnstsw
push
push
ret
mov
clc
scas
pop
fldenv
or
enter
repz
popf
mov
push
cmpsl
inc
out
inc
ret
jge
mov
nop
inc
add
lods
jnp
sub
adc
adc
push
mov
fxch
ret
fcomps
fadds
mov
insb
mov
jae
jb
movl
pop
mov
in
leave
dec
mov
mov
fimuls
or
in
roll
jae
iret
fst
arpl
leave
fnsave
xorb
roll
dec
das
in
shlb
mov
lcall
lea
ljmp
les
dec
mov
mov
and
or
leave
addr16
dec
andb
ss
add
test
aas
mov
std
jbe
in
mov
fnstenv
int3
test
pop
ss
test
mov
sbb
fmull
aad
mov
xor
out
fwait
xor
cld
leave
push
pusha
mov
inc
fld
mov
test
sbb
in
or
mov
pop
das
je
in
es
jl
insl
mov
and
js
out
or
fistps
fxch
pop
nop
pop
dec
mov
and
mov
stc
icebp
in
sbb
adc
jo
pusha
fdivrs
pop
iret
inc
aad
in
mov
mov
data16
test
jb
mov
popa
movsb
inc
adc
insb
ljmp
cmpsb
ficomps
mov
psubsb
xlat
push
xchg
imul
ficoml
xchg
inc
popf
adc
or
addr16
cmp
mov
push
hlt
shrl
cltd
cwtl
push
loope
jle
push
cmp
fwait
cmp
mov
xor
rol
mov
in
les
test
cmp
sbb
es
xchg
aaa
mov
sti
mov
inc
jns
aaa
dec
loop
xchg
inc
arpl
test
dec
das
sub
mov
or
xor
mov
loop
in
or
dec
sub
push
jg
cs
les
inc
push
out
test
or
xor
and
hlt
jp
inc
mov
clc
cltd
lock
or
and
aaa
inc
push
daa
sbb
aam
and
mov
push
test
adc
inc
push
mov
lds
nop
in
negb
negb
xlat
dec
adc
aad
hlt
ficomps
pop
call
into
outsl
dec
inc
jg
popf
jne
mov
shlb
xchg
stc
les
xchg
mov
lock
fnsetpm(287
lahf
ftst
cmp
ficompl
cmpsb
sbb
inc
cwtl
mov
fsubs
cmp
daa
dec
push
popf
jp
sbb
ret
loope
lods
cmc
pop
jg
push
xchg
mov
push
dec
add
shl
mov
jne
stos
test
test
jp
mov
add
stos
sbb
xchg
andl
mov
or
mov
or
insl
scas
faddl
adc
icebp
jae
dec
add
jle
push
mov
mov
sub
cmp
xor
ficompl
enter
or
repnz
sub
arpl
sub
cmpl
jno
adc
xor
in
aas
cmp
mov
jo
call
jge
mov
andb
xchg
in
sub
mov
sbb
fbstp
jecxz
pusha
push
jg
push
or
xchg
fdivrs
cmpl
jg,pn
add
hlt
ljmp
jo
repz
xchg
cmpsb
loop
add
fwait
sub
mov
clc
les
test
cmp
ret
jl
imul
xlat
insl
test
jmp
push
mov
fwait
outsl
ret
add
stos
push
in
loop
adc
jecxz
pop
out
in
out
push
add
in
adc
jns
cld
mov
dec
adcb
popf
icebp
jb
cld
or
out
mov
xorl
jne
xchg
jecxz
clc
frstor
sub
xor
adc
inc
push
test
out
xchg
ret
add
es
test
xor
push
fstl
push
ret
add
repz
addl
jmp
into
in
mov
add
rorl
test
in
subb
jge
test
in
movsb
mov
cmp
movsl
or
fistps
outsb
sub
mov
test
mov
adc
fldl
repz
std
sar
popa
pop
add
sbb
xchg
inc
push
inc
arpl
jge
insl
mov
iret
cltd
push
shrl
in
shrl
jns
sub
jl
cltd
xlat
out
or
ss
mov
das
mov
outsl
sub
sbb
and
rol
sub
test
iret
or
ja
push
stc
mov
orl
inc
inc
stos
push
pop
clc
cmpsl
inc
daa
fisttps
and
xor
mov
push
sbb
loope
mov
aam
sbb
xchg
fnstenv
ficoms
aaa
aad
inc
ret
lahf
mov
in
ret
and
in
jne
inc
fisttpll
mov
inc
or
jne
clc
mov
test
push
es
test
cmp
das
negl
push
add
int
adc
mov
mov
adc
lret
xchg
out
mov
cli
xlat
psrld
imulb
shll
imul
loopne
outsb
pop
sbb
pop
mov
jmp
andl
mov
mov
jge
daa
sbbb
or
pop
jo
xor
fsubrl
leave
jnp
jo
fstps
fiaddl
inc
inc
mov
adc
xchg
sbb
and
loopne
std
into
lods
sub
inc
jmp
add
ds
mov
movsb
imul
mull
push
outsl
jbe
sub
fadd
sub
lods
leave
jg
and
aam
adc
xorl
mov
jo
xchg
sti
mov
xor
push
aas
lret
pop
loopne
mov
adc
inc
movsl
out
dec
and
lock
dec
adc
mov
mov
jmp
bound
in
lds
and
js
mov
mov
mov
int
mov
push
jae
rcll
je
cmpl
jno
push
imul
mov
push
push
sub
mov
xchg
mov
mov
mov
aad
movsl
scas
in
mov
pop
fidivl
cmpsb
lock
push
ja
jmp
stc
lahf
push
adc
hlt
ljmp
push
mov
xor
popf
shlb
lcall
je
add
negl
push
leave
int
xor
inc
ja
sub
outsl
clc
cli
jge
jmp
mov
and
and
outsb
add
adc
cmp
mov
push
pop
test
jge
nop
das
mov
ja
mov
and
cld
pop
cli
push
push
in
xchg
jecxz
sbb
sub
js
iret
nop
pop
mov
int3
pop
clc
adc
popf
aaa
and
hlt
leave
xchg
inc
repz
mov
fimull
ret
popl
adc
jp
aas
lret
inc
sub
pop
lret
dec
arpl
push
pop
sbb
cmp
stos
xchg
mov
adc
jnp
push
xchg
sub
cld
sahf
jae
ret
cmpl
ret
shll
or
je
xchg
adcb
lock
in
addl
push
std
push
test
sbb
es
in
loopne
xchg
ja
call
mov
int3
dec
loopne
sub
or
adc
mov
mov
dec
sti
popf
pop
xlat
cmpsb
pop
repnz
nop
lcall
push
cmp
enter
lods
or
pop
push
inc
and
jg
or
mov
xor
push
dec
xchg
imul
lret
adc
inc
jle
add
lret
mov
aad
pop
in
stc
inc
cmp
retw
cmp
ret
pop
shrl
cmp
lock
repnz
data16
push
lcall
mov
push
bnd
insb
scas
lock
inc
mov
push
sbb
leave
add
pop
imul
mov
push
divl
call
insb
daa
icebp
inc
outsl
cli
lret
inc
jno
rorb
inc
and
imul
fnstenv
cmp
sub
push
push
ss
dec
pop
inc
test
lahf
repnz
pop
push
mov
sub
rorb
pop
mov
addr16
je
cmpsl
jecxz
lods
mov
cs
xor
stc
mov
mov
mov
adc
adc
imul
popa
mov
xchg
mov
or
jmp
ss
push
pop
sub
scas
insb
sub
adc
xchg
sub
mov
stos
loopne
xchg
test
ret
pop
dec
mov
inc
rol
repnz
push
out
pop
jge
mov
mov
pop
adc
std
or
xchg
fstl
sub
nop
imul
xchg
loopne
fsub
or
dec
sbb
popf
xchg
jo
xchg
rcll
cmp
inc
push
sub
xchg
lret
sub
inc
adc
or
fsubrl
sarb
icebp
mov
push
pop
ret
mov
lcall
aam
cli
sbb
test
decb
iret
xchg
or
js
inc
sbbb
fs
mov
ret
jecxz
jl
mov
ja
xor
pop
or
aaa
xchg
loopne
insl
rclb
stc
jne
jle
mov
popf
jb
xchg
aas
mov
cs
cltd
sub
cs
jae
ds
icebp
jmp
mov
sbb
jecxz
pop
mov
add
or
ss
fdivl
shll
das
aad
nop
pop
push
cmp
adc
add
lods
lret
lods
repz
jae
or
inc
cli
dec
mov
loope
jmp
sub
add
je
pushf
push
inc
push
dec
add
addr16
mov
push
call
push
sti
mov
mov
outsl
dec
push
popa
push
loope
push
or
jne
push
lds
or
push
pop
and
enter
lds
xchg
inc
insb
hlt
test
and
pop
mov
fistps
shlb
xor
repnz
jp
mov
push
inc
push
dec
pop
fldcw
jne
push
dec
dec
mov
repz
pop
icebp
jl
or
xchg
lret
mov
mov
lods
sbb
mov
cvtpi2ps
cwtl
mov
add
mov
pop
in
aaa
ljmp
pop
jmp
in
test
dec
fdivs
out
xor
stos
inc
ds
push
jbe
pop
fnstcw
popa
ret
add
xor
jo
push
or
mov
adc
int3
or
adcl
cmp
in
mov
popf
fidivrl
cld
pop
jl
jge
xlat
cmp
mov
dec
int3
lahf
pop
daa
jg
inc
and
les
out
lcall
xchg
ja
push
out
sbb
push
icebp
or
mulb
pop
or
xor
mov
cmp
xor
push
add
das
sarl
xor
fistps
leave
orb
pop
push
outsl
scas
pop
cmp
push
mov
aam
shl
imul
adc
mov
pop
je
mov
leave
pop
jle
adc
add
rclb
daa
aad
lods
addr16
inc
cwtl
mov
gs
popf
clc
and
xchg
adc
push
mov
sub
mov
pop
cmp
fst
or
adc
pop
pop
and
jbe
dec
mov
dec
push
inc
mov
aam
std
rcrb
mov
repz
adc
push
cwtl
out
in
subb
mov
jg
xor
fldpi
push
add
xchg
pop
mov
lods
mov
add
mov
movsb
enter
int
sbb
or
add
or
test
sti
clc
push
pop
sub
push
jno
add
dec
mov
cltd
out
popa
rcrl
sbb
int
insb
add
test
inc
rcl
pop
mov
sbb
subl
xlat
fs
sub
cmp
inc
lods
aam
ljmp
cwtl
push
push
mov
arpl
test
and
sbbb
sahf
lea
jne
mov
jg
jecxz
xor
popf
pushf
pop
outsb
fcompl
ds
test
outsl
push
clc
sbb
call
push
into
test
lret
fstpl
pop
adc
cmc
je
inc
icebp
and
loop
ret
mov
pop
outsl
pop
pop
out
dec
sarb
sbb
call
mov
test
push
test
outsl
jbe
sub
mov
mov
xchg
jnp
sub
sub
push
insl
xor
xchg
pop
push
inc
push
cmp
jp
cmp
jge
push
outsb
jne
clc
pop
pop
lahf
push
int3
out
dec
mov
xor
cmp
test
push
sbb
xor
dec
cwtl
xchg
into
cld
mov
and
jbe
cmp
xchg
cld
xor
mov
pop
dec
inc
add
movsb
and
int3
sub
adc
adc
shl
imull
es
es
out
cmc
test
jno
movsl
fdivl
xchg
jge
push
clc
cmpsb
push
jecxz
push
xchg
cmpsb
out
inc
fstpt
out
sub
mov
jbe
in
xchg
test
data16
mov
roll
dec
jbe
cmp
int3
out
outsb
or
adc
loop
pop
sarl
or
or
insl
jnp
push
dec
jmp
lret
cmp
sub
mov
inc
sub
xchg
cltd
mov
mov
icebp
pop
xlat
into
lahf
imul
adc
adc
pop
xlat
fcompl
das
sub
mov
add
lret
mov
mov
jmp
faddp
sub
imul
push
out
jae
mov
loope
jnp
adcb
pushf
xchg
les
shll
icebp
out
sbb
fwait
add
lds
lea
push
subb
into
arpl
jp
sub
xor
lock
lea
es
sub
push
or
inc
inc
xlat
dec
clc
out
adc
mov
popf
mov
pop
icebp
cmp
out
sbb
inc
xchg
push
dec
xchg
mov
out
bound
pop
mov
cmp
sub
xchg
mov
pop
mov
rcrb
shrb
mov
xchg
leave
lods
pop
jae
fcomps
insl
cmpsb
xor
mov
jae
sbb
filds
adc
leave
addr16
cmpsl
cs
jbe
and
push
call
dec
rcrb
adc
xor
jnp
notb
movsb
inc
mov
sub
push
rol
test
dec
adcl
or
add
sbb
xchg
test
es
fldenv
xchg
fsubrp
movsl
pop
mov
mov
cmp
push
pushf
rcr
xlat
mov
mov
push
sbb
fs
jbe
xchg
cmp
push
out
test
mov
xchg
les
sbb
cmp
dec
out
and
sub
cmp
jecxz
lret
js
test
and
ja
decb
cmpb
flds
xlat
or
test
jno
sub
aam
rcll
xchg
int
testl
mov
loopne
push
out
jmp
iret
xor
push
mov
jns
aam
inc
cmp
pop
gs
jge
les
inc
arpl
and
std
xor
jmp
lret
pop
cs
pop
scas
xor
scas
sub
shlb
test
pop
and
es
jb
sbb
and
arpl
lds
adc
pop
fadd
outsb
into
cmp
jmp
mov
bound
xchg
jmp
jae
mov
pop
jbe
mov
loope
sub
ret
pop
out
mov
push
and
push
stos
in
push
jl
dec
xor
in
ljmp
mov
lock
inc
inc
mov
out
dec
jbe
or
push
add
fs
xchg
pop
mov
jno
fimull
ret
aam
enter
xor
inc
lahf
shll
arpl
mov
mov
xchg
sahf
rolb
test
fsts
ret
lods
xchg
sbb
jmp
ss
sub
and
dec
mov
and
mov
fidivrs
leave
jbe
loopne
mov
mov
jl
mov
dec
cs
jp
mov
push
xchg
clc
cmp
loop
std
ja
pusha
add
aam
orl
dec
insb
js
add
jp
les
mov
mov
cvtpi2ps
test
fsts
pop
jmp
ret
mov
lock
mov
xchg
rorl
push
sub
sub
push
push
mov
out
lret
fs
fs
lahf
lcall
in
inc
adc
mov
dec
decl
mov
dec
ljmp
clc
mov
lret
fisttpl
shll
call
mov
pusha
iret
movsb
orb
in
out
jbe
xorl
inc
cmp
mov
scas
pop
add
test
or
stos
outsl
es
and
xor
xor
cmp
cld
jle
and
mov
stc
outsl
orb
test
popa
push
pop
mov
lods
negl
mov
xchg
mov
fwait
xchg
push
or
or
add
jp
cmpsl
and
xchg
enter
jge
lea
mov
dec
mov
jl
movsl
test
fnsave
mov
jbe
ja
dec
ficompl
cli
or
push
adc
pusha
sub
xchg
mov
loop
pusha
push
inc
pop
mov
cmp
mov
imul
mov
sbb
sub
fadd
movsb
xchg
pop
lea
or
cli
mov
rcrl
xor
mov
push
pop
fs
lods
out
mull
cmpsb
jne
push
pop
sbb
mov
mov
dec
das
ja
mov
pop
cmp
adc
sti
movl
lea
mov
pop
push
inc
push
jbe
lea
xor
pushf
sbb
xchg
jae
movsb
ss
enter
dec
cld
negl
das
lock
rolb
add
inc
mov
aam
int
adc
outsl
stos
pop
sbb
add
mov
sti
xchg
lret
rolb
out
dec
dec
xchg
jno
divl
push
dec
nop
xor
mov
out
aas
pop
cltd
add
pop
push
js
js
pop
lea
gs
cmp
adc
add
insb
cmp
pusha
pop
add
dec
stc
pause
aaa
enter
jl
int
push
sbb
sbb
or
or
cmpsb
movsb
in
sti
or
roll
xchg
inc
outsl
push
pop
cmp
inc
mov
jnp
cwtl
jp
jo
stos
xor
std
or
mov
out
or
or
in
lahf
repz
and
or
iret
fstp
ret
je,pn
sub
inc
hlt
sbb
sbb
rcr
mov
rcrl
pop
clc
test
fcomps
lcall
push
and
xlat
cmc
xchg
or
sub
fcmovnu
jnp
lds
sub
jbe
movsl
fnstcw
push
test
inc
andb
pop
loop
imul
fdivrs
inc
sub
and
xorl
cwtl
sub
xchg
pop
lcall
ja
add
mov
pop
aas
sub
das
adc
mov
pop
in
test
inc
xor
jecxz
aas
mov
ja
inc
int
aaa
gs
mov
cmpsb
loope
in
mov
mov
xchg
pop
int
sub
inc
add
and
inc
pusha
popa
cmp
lahf
adcl
inc
in
push
das
add
mov
fadds
arpl
pop
adc
pop
ljmp
imul
cmp
sub
mov
iret
rcl
inc
mov
pop
icebp
sub
insl
test
es
mov
test
loopne
add
ret
cmp
insb
mov
mov
pop
pop
push
and
dec
js
sbb
call
ss
rcr
jge
aas
jbe
mov
dec
fcomps
sub
jle
cltd
lods
jne
xor
push
push
pop
sbb
addb
or
out
jle
es
dec
test
jp
cmpsl
inc
lcall
sbbl
leave
jg
jle
push
fstpl
push
mov
testl
lods
mov
inc
mov
pop
mov
pop
cs
jge
add
jb
sbb
cli
or
movsb
add
pop
dec
mov
add
enter
adc
lds
cld
cmp
aam
jae
adc
jns
mov
fiadds
dec
dec
stc
aaa
popa
sbb
add
jge
leave
pop
rcl
sti
sbb
ret
add
jo
sarb
sub
mov
rcll
inc
lock
fstl
dec
adc
xchg
jl
push
dec
mov
icebp
gs
outsl
sub
jns
mov
insb
mov
inc
dec
pop
sub
cmp
in
push
insl
cmp
ror
or
repnz
or
xorl
dec
jnp
sbb
out
mov
xor
addl
in
ds
pop
push
xor
ret
jmp
daa
insb
bswap
mov
xchg
fstpl
mov
ss
jmp
scas
arpl
mov
and
clc
out
lock
out
push
movsl
lea
add
pop
dec
mov
adc
lds
or
out
mov
cld
pop
and
jge
pop
and
pop
xchg
mov
push
cmc
ss
inc
xlat
sub
xchg
xchg
ret
mov
aad
aad
push
sti
loope
out
je
sbb
xchg
jmp
insb
les
jno
and
in
int3
push
and
cmpb
inc
in
pop
mov
leave
push
inc
push
dec
xchg
add
outsl
stc
test
mov
or
sub
mov
cwtl
repnz
sbb
push
lods
or
add
xor
jnp
mov
icebp
sub
dec
subb
in
jne
scas
pop
cs
in
push
or
or
stos
mov
pop
imul
fwait
pop
test
lea
dec
ds
xor
mov
lock
sahf
sbb
push
test
xchg
xor
cmp
dec
add
cs
les
inc
jns
jmp
movsl
stos
xor
ds
cmp
or
sbb
movsl
sbb
push
mov
popf
outsl
out
addr16
cli
sti
int
pop
mov
xchg
jmp
sbb
jo
int
sub
popa
push
pop
push
jae
test
fucomi
sub
dec
or
stc
sub
xchg
sub
adc
push
xor
xor
sti
sbb
enter
xchg
ret
add
jge
sub
pop
mov
and
pop
push
jae
daa
loope,pn
scas
adc
shl
jp
into
cmp
loop
sti
xor
mov
xchg
iret
add
pop
loopne
leave
addr16
and
sbb
sbb
daa
insb
xchg
pop
jnp
xchg
inc
mul
and
ret
adc
js
and
pop
call
sub
int3
ss
jle
or
sbb
push
cmpsb
sbb
adcl
mov
aad
inc
pop
enter
loop
push
mov
cs
lods
loop
adc
pop
mov
xlat
xor
outsb
pop
into
xchg
ss
sbb
sub
cwtl
mov
mov
jns
mov
iret
push
into
pop
rclb
dec
fcomp
in
push
stos
dec
icebp
push
dec
adc
js
les
ljmp
fsubl
aam
jne
test
aas
test
pop
popf
sbb
pop
sarl
fstl
ja
mov
push
es
sub
pop
ds
test
jbe
test
adc
test
mov
pop
popf
lret
popf
rorl
pop
test
dec
das
pop
jne
iret
les
push
xor
push
dec
popl
mov
das
cwtl
je
push
jno
inc
add
lock
test
and
xchg
lcall
sahf
leave
and
pop
or
pop
addr16
lret
sarl
roll
hlt
aas
pop
inc
inc
repz
or
das
add
insb
test
les
ret
loopne
repnz
outsl
test
stos
cmp
cs
sbb
fwait
aam
sbb
ret
sbb
mov
imul
popf
or
std
lods
dec
inc
fdivr
in
rclb
jecxz
mov
data16
or
loop
jo
sbb
ret
pop
cwtl
push
pop
pop
sti
in
out
mov
mov
push
inc
rol
ljmp
movl
add
jl
imul
dec
fbld
inc
and
hlt
bound
mov
mov
lcall
xchg
xchg
inc
test
lods
mov
outsl
sub
mov
inc
mov
into
les
jo
xchg
stos
pusha
adc
loop
mov
out
xor
mov
xor
dec
out
push
cmp
mov
mov
dec
into
adc
jno
adc
mov
mov
in
add
cs
jecxz
jle
xor
push
inc
mov
jecxz
in
sahf
adc
xchg
xor
dec
jo
dec
stos
mov
pop
lcall
bound
inc
mov
cltd
out
sbb
inc
xchg
mov
das
or
add
xor
pop
inc
push
pushf
jb
stos
std
cmp
push
push
in
xchg
loope
repnz
js
cmp
enter
popa
ret
mov
xchg
data16
xchg
add
fiaddl
popa
iret
sbb
dec
out
jb
xchg
push
stc
or
ja
stc
aam
frstor
mov
int3
dec
fildl
jecxz
pop
lock
xchg
pop
popf
sbb
clc
mov
imul
orl
push
ja
adc
or
xor
stos
dec
cmp
js
dec
jmp
scas
mov
xchg
xor
stc
pop
mov
push
pusha
das
lods
pop
dec
ds
mov
mov
jae
jmp
fisubrl
sub
inc
sahf
fwait
xlat
sbbl
cmp
rcl
loopne
shrb
jg
js
cmpsl
mov
or
gs
mov
sub
sbb
into
xchg
call
fnstcw
cmp
xor
push
inc
xor
insb
adc
mov
outsl
or
dec
fs
cs
jmp
jmp
lahf
lahf
xchg
sbb
push
xchg
jecxz
cmp
lods
loopne
mov
mov
mov
pop
scas
adc
aam
test
maxps
jns
push
mov
mov
pop
jl
inc
cli
or
fidivrl
sbb
mov
divl
std
push
or
mov
pop
sub
es
pop
ret
jp
jb
packssdw
cmpsb
push
sti
xchg
xchg
jb
jb
loop
loopne
sbb
lret
dec
add
xchg
in
js
push
loopne
xchg
cs
jg
cltd
mov
inc
enter
pop
lahf
div
add
pop
cli
sub
int3
decl
popf
lods
imul
jle
cs
fsts
and
xchg
test
xor
jle
ljmp
sbb
mull
test
add
dec
orb
iret
xchg
fistpll
int
adc
adcb
jmp
jl
movsl
adc
add
stos
xlat
loop
or
js
mov
sub
jnp
dec
xchg
ljmp
xlat
js
sti
pop
xor
icebp
xlat
jo
xorl
dec
xor
add
jmp
adc
pop
in
xchg
sub
jecxz
dec
or
scas
ret
add
dec
mov
mov
mov
lds
cli
dec
xchg
arpl
xchg
and
fildl
cmc
fdiv
fldt
gs
xor
pop
cmc
push
cli
mov
rcl
mov
out
fildll
imulb
jns
negb
stc
push
arpl
sub
cmc
loopne
js
xchg
insl
push
dec
aaa
popf
int
insl
mov
xor
imul
mov
push
sub
add
test
dec
and
and
jmp
into
xchg
iret
cmp
nop
aad
int3
mov
out
ja
mov
aam
ret
fadds
mov
mov
fnstsw
scas
stc
push
xlat
and
push
jns
cli
xchg
xor
imul
sbb
outsb
lret
je
sub
xlat
xor
leave
add
lods
xchg
or
loopne
rcrb
cli
lock
add
loope
sub
out
mov
xor
xchg
adc
sub
xchg
fisubrs
pop
sarb
gs
cmp
stos
loope
cli
inc
jbe
stos
insl
movsl
in
lret
lret
in
sub
mov
fucom
pavgw
test
outsb
mov
mov
and
test
dec
cwtl
or
cmp
mov
mov
xchg
and
xchg
ljmp
jg
inc
out
push
icebp
jae
cmpxchg
adc
jno
pop
mov
jmp
mov
mov
ja
fistl
mov
jb
sbb
mov
mov
cmc
or
pop
rclb
sti
aad
push
mov
mov
xchg
adc
leave
push
push
jbe
pop
add
in
push
loop
sahf
mov
add
ret
scas
repz
data16
lahf
leave
mov
loop
hlt
loopne
mov
mov
lock
sbbb
sti
dec
jbe
push
and
mov
cmp
sub
push
mov
popf
je
out
cwtl
pop
push
add
popf
orl
and
pop
fidivl
mov
aad
ret
fsub
mov
mov
cmp
sahf
or
mov
xchg
mov
adc
sbb
loopne
push
mov
xor
addr16
dec
lea
add
push
xlat
repnz
gs
add
adc
xchg
jecxz
push
aaa
push
and
movsl
fwait
dec
xchg
je
js
push
cli
jnp
push
shr
xchg
rcll
pop
out
inc
jg
ljmp
xor
sub
and
or
push
pushf
and
mov
mov
mov
bound
idivl
lock
push
es
inc
xor
outsl
ja
and
xor
sub
lods
mov
enter
jns
mov
or
and
aam
dec
xchg
xchg
push
fmulp
lret
stos
lcall
sub
scas
loop
imul
pop
sbb
pop
mov
iret
incb
subb
push
jb
imul
dec
inc
stos
addr16
mov
inc
icebp
jbe
add
dec
push
sti
jno
fisttps
sub
mov
fldt
outsl
cwtl
mov
sbb
loope
addw
dec
mov
mov
and
ds
dec
dec
mov
lahf
push
arpl
mov
aaa
mov
sbb
add
ret
out
or
pop
cmpsb
icebp
push
jno
in
movsb
xchg
sahf
mov
xchg
jge
filds
es
ret
outsb
cmpsb
aam
call
out
sbb
dec
pop
insl
mov
nopl
pop
out
pop
leave
aas
adc
dec
stc
jp
pop
mulb
mov
aas
push
gs
notb
nop
sub
out
fisubs
mov
lock
mov
pop
pop
jns
jne
das
pop
pushf
and
test
adc
or
xchg
or
mov
mov
xchg
pop
leave
or
mov
pop
fcomip
sbb
cmc
mov
mov
sti
mov
test
clc
mov
jae
pop
mov
shrl
lock
pop
lods
xlat
adc
sub
stc
fdiv
jo
aaa
mov
mov
orb
pop
insb
outsb
stos
mov
flds
sbb
or
inc
pop
push
aad
sub
out
mov
push
repnz
mov
push
mov
aam
mov
bound
lock
adc
lcall
inc
inc
fildll
jecxz
fwait
sub
into
pop
and
aad
repz
lcall
bound
xchg
jno
popf
out
stc
or
shrb
mov
mov
sbb
movsl
adc
push
sbb
pop
and
jl
xor
loopne
int3
ss
inc
adc
mov
sbb
imul
jb
lods
add
enter
push
cltd
dec
cmpsb
mov
idiv
cmp
popa
jb
fisubrl
pop
add
push
or
iret
mov
loope
mov
sbb
or
sbb
lret
sarl
sbb
cmp
or
pop
push
and
mov
std
ljmp
int
push
mov
dec
push
adc
cli
test
xchg
or
jne
adc
mov
inc
daa
movsb
adc
xchg
lcall
leave
sahf
data16
rclb
cmc
dec
cmp
movsl
and
mov
imul
xor
fisttpll
dec
mov
lret
pop
hlt
mov
lds
dec
lret
repz
pop
inc
sub
rcll
cmp
xchg
loopne
cmp
mov
in
cmpsb
outsb
add
pop
dec
or
mov
imul
movsb
iret
mov
outsb
loop
out
inc
inc
mov
cmp
repnz
jmp
fcmovnbe
push
arpl
dec
mov
in
sub
or
ficompl
rolb
mov
icebp
scas
and
push
pop
mov
lods
mov
ret
loope
jmp
fdivs
jne
sub
lds
dec
rorl
xlat
add
xchg
pop
xor
or
iret
or
arpl
out
andb
cwtl
pop
and
sarb
mov
jle
imulb
inc
push
mov
faddl
inc
xor
push
inc
xchg
call
jmp
addr16
das
test
pop
fidivl
xor
je
pop
or
or
or
add
test
mov
pushf
gs
inc
ror
scas
or
jno
popf
push
or
pushf
mov
rol
fwait
popf
mov
sbb
daa
cwtl
mov
dec
sahf
xchg
loopne
mov
xlat
pop
decb
mov
lods
loop
loope
or
inc
mov
push
dec
ret
push
or
pop
fcmovnu
fcmovu
dec
and
cmpsl
stos
xchg
xchg
imul
mul
test
sti
in
push
into
cmp
movsb
mov
push
mov
test
sbb
fiadds
jg
inc
jle
rcrl
mov
xchg
repnz
fsqrt
dec
push
inc
lds
mov
add
push
push
cmp
add
shl
push
fidivrl
adc
lahf
cmpsl
lret
xor
cmpsl
fbld
pop
cwtl
loope
sub
aas
rolb
lret
xor
xchg
leave
inc
cmp
lods
mov
js
mov
cmpsb
adc
pop
js
cmp
jne
add
jns
dec
mov
xchg
popf
fcomps
shr
jecxz
int
cli
dec
in
pop
push
pop
sahf
subb
repnz
mov
cli
and
sub
xorb
push
sbb
pop
fcomps
mov
mov
in
jns
xor
leave
std
mov
xor
push
pushf
cmpsb
ss
mov
sub
leave
xchg
jg
cmp
es
mov
xchg
xchg
dec
dec
lock
loop
loopne
icebp
mov
sub
pop
or
ja
mov
test
ret
and
scas
and
jecxz
push
in
fiadds
xchg
test
or
lret
std
insb
push
mov
std
leave
jp
scas
adc
inc
in
dec
jp
dec
lcall
scas
pusha
out
pop
mov
mov
fiaddl
popf
mov
jge
call
mov
push
loope
or
or
inc
lock
sub
ja
xor
pop
cli
test
aaa
sti
gs
cmp
roll
sbb
cmpsl
mov
dec
cmp
imul
test
int3
rorl
sub
xor
jle
sbbl
sti
into
cmpsl
jp
sbb
push
and
or
fldl
std
pop
or
cwtl
xchg
mov
mov
pop
dec
fs
sub
mov
jae
xchg
mov
ljmp
jecxz
aas
sbb
jnp
in
int
mov
dec
mov
lds
in
sbb
mov
jecxz
inc
aam
xor
fimull
cli
xlat
xor
pop
dec
dec
fidivrs
sbb
pmullw
lahf
ja
decb
adc
je
add
lcall
pop
inc
mov
adc
or
mov
aam
adc
cmpsb
xor
shr
push
packuswb
jo
test
mov
push
jo
insl
popa
pop
or
or
dec
jge
cmp
or
das
rorb
mov
inc
bound
outsb
cld
sub
les
arpl
sub
popf
shlb
mov
or
mov
mov
cltd
push
dec
loop
pop
sub
sbb
aam
mov
sub
out
adc
sti
mov
xchg
popa
clc
fsubs
dec
aaa
xchg
insb
push
inc
icebp
jnp
xchg
push
orb
rcl
cli
mov
pop
xchg
shlb
in
add
mov
pop
lock
jmp
and
imulb
fld
xchg
into
lret
cmp
dec
xchg
cltd
xchg
pop
cmp
inc
adc
inc
xorl
xchg
xchg
stc
dec
gs
mov
ja
add
sub
xchg
repnz
pop
pusha
pop
inc
inc
dec
cs
into
xchg
es
mov
xor
xchg
inc
add
mov
xchg
push
xchg
repnz
bound
lea
and
adc
int3
icebp
mov
adc
pop
pop
repnz
xchg
aad
mov
lcall
data16
sbb
out
test
push
mov
shrb
sbb
push
sbb
xor
je
in
pop
add
fwait
cltd
shrb
in
dec
push
jbe
pop
push
fisubs
pop
test
lock
and
xchg
addl
scas
add
sub
shr
addr16
stos
repnz
and
call
jno
xchg
loope
dec
xchg
sub
cmp
xchg
mov
ss
add
mov
pop
subb
cmp
jns
cld
das
push
gs
sub
lcall
or
popf
dec
xor
sar
mov
pop
sbb
sub
xor
inc
mov
pop
bound
mov
arpl
pushf
lock
sti
outsl
ret
lock
test
ljmp
xlat
fidivrs
icebp
mov
leave
loop
por
adc
in
xchg
lret
mov
ljmp
pop
loope
cwtl
popf
lds
cmp
pushf
pop
addl
sub
or
dec
sub
outsb
lcall
test
adc
sti
movsb
xor
idivb
mov
mov
and
mov
fisubrl
scas
pop
ljmp
mov
arpl
hlt
dec
es
mov
int3
add
mov
fildl
fcmovnu
or
dec
faddl
or
push
jge
xor
or
repnz
mov
std
lods
jecxz
je
in
sahf
mov
or
imul
in
imul
lcall
xchg
and
jp
lock
mov
mov
dec
inc
repz
popa
cmpsl
or
fnstcw
mov
or
int3
andl
shl
adc
rorb
insl
cmc
adc
push
in
xor
xor
scas
push
push
dec
inc
sub
lods
and
mov
and
test
cmp
mov
lret
sbb
fisttpl
and
mov
rclb
lock
add
ret
inc
or
fldl
ret
pop
mov
push
or
sbb
int
cmp
pop
jl
outsb
sbb
out
push
shlb
out
xchg
aam
lret
or
sbb
nop
sahf
sbb
mov
xor
xchg
sub
inc
jl
push
cmc
in
dec
in
aad
outsl
adc
and
pushf
mov
jl
push
das
movsl
mov
mov
dec
test
sub
out
cs
pop
dec
cmp
out
enter
mov
push
mov
mov
dec
add
aam
pop
lods
imul
or
pop
add
jp
rcrb
movsl
add
ret
out
add
int3
push
mov
jg
adc
fimuls
sbb
cltd
lret
mov
adcb
loope
mov
push
jmp
xchg
aas
xor
test
cmpsb
in
je
inc
sarl
fisubl
fwait
cli
lcall
rcrl
mov
shll
inc
repz
jne
push
sbb
and
stos
sub
clc
cmp
js
cli
jmp
xchg
subl
inc
inc
aas
mov
or
pop
imul
imul
out
loopne
xchg
adc
sar
in
xor
mov
aas
rol
or
mov
aad
iret
and
cld
js
ljmp
popf
repnz
pop
addb
jmp
mov
pop
shlb
test
or
mov
leave
and
mov
cli
add
pop
hlt
dec
push
insb
aaa
aaa
lock
jle
sbb
dec
shrb
push
inc
sbb
movsl
imul
subl
xlat
int
mov
sbb
jl
sarb
scas
cmp
call
mov
shll
call
dec
aas
in
cmpb
test
mul
bound
xlat
fsts
testl
data16
lret
sub
icebp
and
nop
jmp
inc
dec
hlt
ljmp
cli
pshufw
xchg
cltd
cmpsl
sbb
dec
in
ljmp
mov
pop
jbe
mov
loopne
loope
jbe
fwait
lods
fisttpl
aad
shlb
jecxz
sbb
mov
mov
inc
popf
add
cmp
enter
xchg
inc
mov
mov
repnz
xor
js
icebp
push
adc
stc
adc
sbb
icebp
fwait
fs
fisttps
ljmp
push
push
fcomps
push
dec
cwtl
jnp
movb
xchg
gs
sub
mov
push
scas
inc
dec
or
jge
push
into
aaa
pop
jne
popa
out
shlb
lock
dec
push
push
sub
dec
lret
sti
testl
inc
filds
cs
add
aam
iret
pusha
shr
int3
insb
lret
add
pop
add
pop
lahf
sub
push
mov
xchg
fs
pusha
in
rclb
outsl
imul
xchg
stc
dec
in
or
ret
push
pop
push
pop
add
dec
int3
xor
ucomiss
sar
mov
test
and
rclb
ds
dec
sub
jae
xchg
test
ret
sub
push
dec
fsubs
cmp
mov
jbe
jbe
push
fiadds
ss
xor
dec
xchg
dec
lds
cwtl
movl
adc
das
inc
and
sbb
roll
dec
negl
mov
xor
pop
jle
push
cmc
loopne
cltd
rclb
jns
cwtl
xchg
daa
movsb
push
pop
fs
fiaddl
sbb
scas
idiv
push
jo
arpl
pop
adc
lahf
mov
or
popf
stos
lret
loopne
int
sbb
xchg
and
stc
xchg
lock
mov
xchg
inc
rcl
mov
stos
sbb
mov
pop
enter
stos
pusha
mov
xchg
jecxz
pop
mov
sbbl
add
push
arpl
lods
xor
pop
xor
cmp
lea
add
in
not
pop
cmpb
test
adc
and
pop
mov
popf
xorl
nop
aaa
push
xchg
cmpsl
iret
push
mov
lahf
repz
int
arpl
adc
js
arpl
int3
cli
push
push
in
and
mov
push
push
xchg
loope
cli
inc
test
adc
jo
and
xchg
adc
mov
insb
mov
lea
jmp
push
pop
sub
jp
push
pushl
xor
jge
jb
lahf
ret
out
pop
lret
ja
notl
mov
pop
cmp
inc
or
mov
cli
adcl
dec
in
and
inc
mov
aaa
push
jl
mov
mov
and
dec
sub
pop
cmp
ret
mov
mov
sahf
pushf
push
or
negl
xchg
aam
lcall
xor
pop
pop
inc
aad
jle
rcr
cs
cmpsl
xor
pop
jecxz
fldln2
pop
shl
notl
sarb
adc
fwait
in
and
je
push
sahf
cwtl
and
int3
cmp
mov
mov
and
jmp
xchg
inc
cmp
idivb
rcl
mov
adc
mov
mov
push
jns
mov
xor
jne
loope
int
cmp
push
push
jp
jns
push
xchg
insb
fsub
or
or
add
xor
mov
popa
add
xchg
xchg
loope
shrl
jae
cmp
aad
repz
add
movb
mov
push
jecxz
filds
xchg
imul
pop
xchg
jl
fwait
jecxz
bnd
push
fcomp
inc
imul
mov
das
out
cmp
mov
jo
mov
mov
lea
pop
aad
aam
popa
mov
mov
sti
add
push
sbb
fwait
xor
xchg
push
dec
push
sbb
xor
cmp
pop
ficompl
jle
mov
daa
loopne
cmp
sarb
clc
loope
addl
aaa
lods
mov
cld
ljmp
mov
into
cli
cli
jmp
push
jmp
pop
mov
or
out
pop
fistps
dec
and
int3
aas
cmpsl
push
ret
mov
sbb
cmp
ret
in
jae
dec
and
lret
into
aas
sub
icebp
jo
hlt
mull
mov
scas
fldcw
jno
cmp
jle
mov
add
sbb
push
adc
jnp
ffree
cmp
and
aas
add
xchg
mov
sahf
out
rcll
sub
stos
xor
mov
sub
lret
scas
std
cmp
imul
pop
cltd
push
out
ds
mov
out
sbb
inc
jne
or
pop
lcall
sarl
xor
adc
dec
inc
mov
inc
and
mov
dec
push
cmp
dec
dec
and
movsb
sbb
adcl
lods
pop
sti
mov
jbe
subb
lock
stc
mov
mov
or
cmp
pop
decl
mov
shrb
xor
or
push
fcmovb
and
adc
fimull
xor
pop
addr16
and
or
and
mov
push
dec
ds
sbb
bound
jb
nop
push
sbb
out
mov
pop
or
mov
cs
leave
int3
icebp
daa
pop
clc
lods
xor
inc
push
mov
xchg
inc
movsl
jl
jb
fucomi
mov
pop
lahf
daa
push
xchg
xor
pop
inc
adc
ljmp
push
xor
xchg
xchg
adc
pop
in
lea
push
das
push
iret
cld
inc
adc
lahf
in
lret
mov
lock
imul
in
fisubrl
jle
test
lea
out
in
int3
push
dec
ss
pop
popa
jb
add
pop
mov
inc
aad
and
test
jle
popf
add
push
lds
pop
xchg
cli
cs
stos
xchg
popf
in
ret
hlt
sbb
arpl
jmp
cmpsl
cmp
stc
mov
mov
cs
cmpsl
jno
jp
mov
push
enter
loop
sar
add
mov
jmp
pop
js
push
lcall
imul
out
xor
test
push
jle
dec
cmp
rorl
iret
mov
inc
addl
lea
push
ss
xchg
or
add
dec
test
pop
or
insl
xor
nop
icebp
add
lock
mov
jbe
je
mov
les
push
leave
lahf
push
in
sub
mov
sbb
sbb
adc
add
aaa
sub
mov
es
cmp
pop
pop
lret
mov
fdivs
ficoml
das
outsb
cmp
pushf
daa
add
sub
int
jg
out
or
add
xchg
inc
push
or
push
xor
mov
sbb
inc
mov
outsl
arpl
inc
sbb
fmuls
push
pop
out
sbb
lods
add
call
jo
sbb
pushf
outsl
int3
add
cmpsb
jno
pusha
xchg
mov
outsb
mov
movsb
daa
mulb
sti
adc
out
iret
std
pop
inc
ret
cld
dec
repnz
jo
xchg
push
add
jae
push
orl
push
and
popa
mov
pop
call
arpl
andl
js
dec
arpl
push
cmpsb
mov
rorl
add
jmp
sbb
jno
pop
pusha
hlt
sahf
stc
ds
xchg
cmp
loop
sbb
push
mov
push
cltd
stos
divps
mov
cmpsl
repz
fldl
push
cwtl
repz
lret
push
iret
aad
add
cmc
mov
test
adc
out
push
out
push
xor
std
push
movsb
lds
aas
pop
xorl
cli
mov
repz
loop
xchg
out
adc
orl
int
jb
or
imul
jnp
lret
or
into
push
stos
cwtl
xlat
lret
or
push
in
outsb
test
cmp
andl
adc
and
pop
pusha
push
testb
sub
dec
pop
and
xor
ljmp
mov
mov
inc
fmull
and
mov
pop
insl
xor
push
or
xlat
xchg
shl
cwtl
imul
cmpsb
cmp
sub
mov
add
jns
aaa
es
icebp
xchg
out
in
or
std
arpl
sbb
and
std
icebp
popa
pusha
out
gs
dec
js
push
mov
xchg
frstor
sbb
push
outsb
and
rcr
push
js
mov
flds
sbb
out
and
sub
pop
lcall
fsubrp
call
aam
pop
sahf
fnclex
pop
lret
cltd
ficompl
js
mov
cmpl
push
ret
ds
push
aas
push
cmp
dec
mov
scas
jne
mov
pusha
repnz
arpl
inc
jne
adc
jb
push
mov
ljmp
sarl
stc
addb
inc
repnz
mov
leave
subl
nop
jle
dec
mov
std
and
mov
sub
pushf
popa
add
jae
and
mov
mov
mov
insl
aas
dec
cmpsl
and
outsb
and
jg
inc
cwtl
stc
jb
les
push
das
in
adc
stos
add
jecxz
dec
cmp
outsb
pop
cmc
sub
dec
aad
fnstenv
or
stos
js
sbb
scas
int3
stos
cwtl
mov
pop
lret
push
in
mov
into
xor
inc
leave
in
gs
jne
das
push
push
mov
addr16
and
dec
mov
ds
mov
xchg
orb
mov
repz
sbb
ficomps
into
adc
aam
cmc
sbb
es
pop
lock
and
mov
dec
cmpsl
inc
push
cmp
shrl
mov
cmp
addb
xchg
xchg
push
xchg
sahf
mov
icebp
cmpsb
outsb
push
jecxz
repz
lret
inc
mov
sub
movsb
insl
inc
adcb
call
and
mov
push
cltd
dec
insb
inc
imulb
push
mov
adc
inc
pushf
cli
push
shll
adc
sti
push
lahf
cmpl
add
enter
add
inc
imull
push
aas
sti
mov
ret
adc
mov
or
add
dec
sbb
mov
stos
mov
aaa
int3
or
push
rorl
gs
daa
or
jno
cltd
mov
pusha
inc
or
test
ja
xor
add
decl
scas
sbb
and
leave
jbe
test
add
mov
cmp
mov
or
imul
leave
dec
enter
pushf
or
cmpsb
jno
fisubrs
ljmp
mov
cltd
cmp
shrl
cmp
mov
repnz
xchg
cwtl
push
cmp
ja
lahf
cmp
pop
out
das
pop
and
mov
loopne
dec
fstps
xchg
xchg
popa
cmpsl
andl
or
inc
movsb
idivb
inc
cmp
pop
mov
jno
push
xchg
arpl
add
dec
jecxz
and
fstpl
inc
jecxz
pop
bound
movl
rclb
fnstsw
loop
lods
push
or
mov
fwait
sahf
popf
loopne
push
cmp
sbb
lret
jo
or
mov
add
out
mov
jns
push
cmp
leave
mov
or
add
mov
test
sub
push
pop
fldcw
test
pop
add
jb
scas
cld
mov
jmp
rclb
test
pusha
pop
repz
and
xor
cltd
in
mov
adc
push
dec
xchg
idiv
add
mov
cmp
fsubrl
push
flds
pushf
hlt
xchg
arpl
and
mov
sbb
mov
jmp
or
loope
inc
and
das
xor
cmp
jl
adc
bound
orb
daa
sbb
adc
mov
pop
inc
pop
addr16
inc
xchg
popa
sbb
xor
dec
in
rcl
ss
cmpsb
mov
sbb
out
enter
xor
adc
mov
clc
repnz
sub
jb
addr16
leave
loope
sbb
aaa
mov
nop
outsl
in
add
data16
push
outsl
fstpl
jbe
lea
mov
shrb
addr16
call
sbb
mov
fldenv
or
fs
mov
stos
jge
jbe
sbb
rcl
ljmp
stos
push
sbbl
cmp
pop
aad
inc
call
imul
xchg
mov
fistpll
pop
cs
cmp
sahf
sub
scas
lret
jnp
sbb
cli
mov
and
loop
sub
dec
mov
inc
aaa
xchg
mov
cwtl
repnz
out
xorl
adc
mov
mov
xor
dec
out
add
les
std
push
push
inc
nop
int
xchg
hlt
dec
movsl
in
jg
lods
je
mov
pop
fcoms
pop
out
cmp
xor
mov
scas
sub
add
pop
fsubrs
mov
adc
adc
jle
lds
int3
pop
inc
sbb
push
movsb
stos
test
pop
mov
adc
ror
pop
inc
aad
jae
popa
addr16
push
cmp
push
scas
ret
jmp
lcall
outsl
mov
push
js
sbb
push
leave
xor
adc
mov
cmp
pop
cmpsl
jbe
in
sti
movsl
insb
and
inc
dec
inc
sub
cltd
dec
mov
stc
and
cmc
loopne
sbb
push
sahf
add
dec
pop
or
ds
aad
daa
cmp
and
cmpsl
jl
repz
sbb
add
ficomps
mov
test
mov
xchg
pop
out
cmp
cmp
pop
icebp
dec
cmp
add
inc
ds
mov
jb
int
roll
inc
int
push
inc
xchg
call
push
incl
insb
fldl
and
lret
cli
pop
dec
cmp
dec
sbb
cli
stc
pop
push
fsubl
ja
fisubs
cld
pmullw
jne
stos
enter
cli
cmp
inc
movb
jge
fcomp
lds
enter
ljmp
test
imul
dec
hlt
add
dec
mov
sub
xchg
popa
cltd
dec
pop
cmp
lcall
push
dec
fwait
or
push
aaa
dec
inc
sub
pop
jecxz
pop
jp
insl
sub
mov
sub
xor
int3
sub
jns
jnp
stos
jbe
jmp
fs
mov
sbb
lret
addr16
in
jecxz
jns
sbb
mov
xchg
xor
insb
js
pop
sub
cltd
test
imul
mov
pop
add
xchg
mov
xlat
nop
rcrl
push
inc
daa
mov
dec
leave
test
push
xchg
sub
lods
roll
sbb
or
xchg
mov
xchg
add
adc
daa
xor
xor
mov
lock
sub
mov
aam
addr16
mov
add
xchg
mov
int3
imul
imul
jo
outsb
outsl
mov
je
mov
push
lcall
in
sub
mov
mov
je
pop
or
mov
sub
cs
add
and
in
mul
cmp
dec
jl
imul
lock
jns
aas
xchg
lret
inc
pusha
xor
shr
xchg
lret
mov
jmp
push
loop
push
xor
test
std
stc
lcall
int
cmpsl
sar
and
out
movsb
push
mov
push
xor
sub
pop
fwait
pusha
test
dec
xchg
pop
mov
out
xor
push
int3
push
in
int
jbe
lods
jge
mov
test
js
test
cltd
aad
call
jb
jmp
cmp
and
sti
movsl
lods
cmp
push
pop
push
mov
out
repnz
test
scas
or
mov
or
adc
cmp
cmp
and
inc
icebp
sub
shrb
ljmp
sbb
ljmp
iret
mov
or
rcrb
jo
cmp
xchg
and
inc
outsb
mov
and
loope
pop
js
repz
cmp
xor
hlt
das
cmc
adc
mov
xchg
xchg
ljmp
popf
xor
mov
or
outsl
or
xchg
shrl
sub
push
xor
jmp
xlat
mov
stos
fs
push
loop
adc
sbb
fadds
add
cltd
lsl
xchg
mov
addr16
aam
movsl
aas
lods
mov
ss
xchg
loope
ja
pminsw
dec
adc
es
push
pop
mov
inc
sbb
jge
and
insl
ds
mov
add
push
push
in
xor
cmp
and
push
fs
inc
cmp
insl
lods
xchg
cmp
lea
scas
out
dec
pushf
mov
add
mov
mov
outsl
lds
xor
dec
inc
xchg
lods
lods
mov
iret
icebp
xor
xor
or
scas
push
pop
loope
test
in
jecxz
lods
stos
orb
jb
cmp
out
popa
sti
inc
fldt
push
test
jp
sub
mov
mov
mov
mov
and
mov
in
jmp
out
sbbb
add
dec
lods
mov
and
cmp
gs
ret
lcall
pop
ja
fwait
jle
jle
scas
jg
push
pop
ss
test
adc
repz
push
pop
outsb
cltd
pop
lods
outsb
popa
xor
mov
incb
fimuls
mov
inc
or
mov
lods
movsb
xchg
lods
push
stos
in
jno
andb
sub
add
out
fidivl
enter
in
test
cmp
push
inc
lods
icebp
in
mov
and
popa
mov
aaa
adc
mov
cmp
mov
pop
jnp
lahf
stc
frstor
inc
insl
mov
dec
pop
outsb
inc
sbb
xchg
fsubl
fs
sub
je
pop
mov
in
enter
xor
jbe
dec
cmp
mov
out
or
push
jne
xor
ss
ljmp
and
out
pop
rolb
sub
jno
iret
xor
lock
daa
sub
lock
mov
dec
scas
sbb
fbstp
btr
in
int
mov
mov
cld
push
rcrl
movsb
lods
test
ret
clc
xchg
sbb
inc
xor
mov
jl
test
fstpl
and
iret
sub
mov
adc
popa
pop
subb
add
mov
pop
sbb
xor
pop
lcall
and
sbb
cmp
les
push
push
pop
mov
and
add
mov
or
cmp
lods
and
jnp
scas
xor
sub
cmpsb
xchg
outsl
scas
lret
dec
dec
xchg
or
xchg
inc
cs
dec
fs
jmp
cmpsl
les
dec
out
and
out
push
lcall
push
xor
stos
aad
jg
bound
adc
fwait
test
xor
dec
sahf
mov
or
ja
rorb
xchg
jp
call
jp
fistpll
fcomp
add
mov
jne
fnsave
in
clc
in
lods
test
lcallw
adc
mov
mov
xchg
inc
cld
js
jnp
addl
popw
out
adc
repz
xor
inc
cmc
sarb
cmp
scas
shll
insl
dec
insb
adc
mov
inc
jno
xchg
dec
jo
outsl
sahf
iret
adc
outsb
cmp
shrl
xor
mov
frstor
jle
lods
xchg
lods
loop
int
add
fistpll
lds
iret
sbbl
ljmp
ret
ja
pop
adc
xchg
push
outsb
fcmovnu
clc
add
and
fwait
mov
add
popa
xor
stc
in
inc
fcom
add
jg
pop
xor
outsl
xchg
jo
mov
push
sub
add
add
push
rolb
repnz
lock
xor
mov
fadd
mov
jae
pop
inc
ss
adcl
xlat
and
ss
ljmp
cmpsl
mov
gs
or
out
push
sbb
fsubrl
das
inc
mov
cltd
sub
sub
adc
adc
sbb
adcl
adc
sub
das
ffree
or
out
gs
inc
jl
adc
inc
cmp
fisubrs
mov
inc
xchg
dec
scas
sbbl
push
push
cltd
sub
adc
outsl
ret
popa
insl
iret
and
mov
xchg
dec
imul
dec
in
inc
imul
test
jne
sti
mov
pop
mov
cmp
jge
jge
xlat
stos
push
es
scas
push
add
adc
inc
ljmp
divl
rcrb
neg
imul
movsl
xchg
jg
in
push
adc
or
push
xchg
movsl
cmp
mov
popa
mov
cmp
dec
mov
mov
push
mov
fwait
push
add
cmp
bound
fxch
ficomps
ret
mov
jae
incb
and
jl
mov
in
fwait
outsb
fcoml
in
sbb
insb
sbb
movb
pop
lds
bndstx
sbb
mov
int
cmp
int
mov
rcr
inc
insl
mov
jle
xchg
cmp
mov
adcb
call
movl
xchg
sub
pop
pop
cmp
aad
sbb
dec
sbb
mov
fistl
xchg
pop
gs
hlt
mov
xchg
mov
mov
outsb
iret
inc
adc
mov
push
add
sbb
push
dec
das
cmc
or
lea
mov
fs
dec
cmp
sbb
insb
fsubl
aaa
stos
cwtl
fcoml
push
mov
mov
add
add
push
int3
pop
mov
add
rcr
enter
sub
jns
in
mov
int
xchg
pop
mov
sub
xor
fwait
nop
add
inc
arpl
mov
sbb
arpl
repz
sbb
jg
cmc
mov
cmpsb
xchg
sub
shrb
ds
mov
arpl
mov
jge
push
mov
popa
repnz
stc
enter
hlt
sbb
stc
lret
cltd
dec
sarb
cmpsb
pop
rcrb
pop
les
lods
mov
sbb
mov
cwtl
ficoml
adc
jo
push
cmp
mov
loopne
jl
push
lcall
cld
or
push
mov
in
fcoml
arpl
adc
jecxz
adc
stc
xor
adc
jle
mov
add
xchg
mov
mov
out
jb
pusha
mov
mov
sub
jge
dec
mov
test
sub
rorl
add
std
mov
dec
sub
push
sbb
ret
mov
jmp
loopne
jecxz
sub
loopne
outsl
xchg
hlt
and
mov
jp
or
sub
arpl
inc
cwtl
cltd
mov
movsb
das
and
pop
inc
lahf
imul
sub
stc
lret
and
xchg
jnp
inc
in
lods
jl
decl
loopne
ds
stc
mov
mov
adc
push
cltd
fistpll
es
cmp
mov
lret
jbe
stc
ss
fcmovnb
movsl
cmp
sbb
fdivrl
inc
dec
mov
sbb
jae
test
leave
mov
ja
and
xorb
stc
nop
inc
add
in
xchg
cmp
add
js
jp
pop
jle
iret
mov
fcmovnbe
mov
and
lret
stc
out
dec
icebp
loopne
loope
dec
testb
cli
mov
icebp
imul
pop
pop
js
pop
test
mov
ss
jo
and
adc
mov
push
or
cmp
xlat
insl
mov
in
std
or
cmpsl
decb
out
enter
mov
mov
push
cmp
sub
mov
jg
mov
xchg
call
into
xorl
xlat
sbb
pop
aas
lahf
cmp
pop
pop
and
jo
insb
pop
mov
sti
in
mov
cmp
adc
sub
iret
cmpsb
test
jno
pop
pop
movsl
je
rcrb
push
int3
iret
jg
fwait
mov
cmp
dec
mov
xor
jmp
fisttps
out
stos
psadbw
adc
repz
jl
xor
aaa
mov
mov
in
fdivrl
jg
push
mov
and
movsb
xor
rorl
pop
call
out
nop
fwait
adc
dec
aaa
jmp
es
inc
sbb
std
aam
mov
sti
cs
mov
push
jno
addr16
daa
sub
and
les
cli
or
push
xchg
and
lock
test
mov
lds
pop
hlt
mov
and
sub
and
lock
add
jmp
repnz
mov
fs
aad
and
hlt
add
outsl
lea
gs
aaa
mov
cli
cmpsl
mov
mov
cltd
out
lcall
orl
cmpsb
jge
nop
sbb
add
aad
popa
xchg
add
lds
xor
mov
cmp
ja
cmp
mov
lea
xor
dec
pop
push
imulb
lcall
ljmp
jecxz
pop
cmp
mov
inc
cmpsl
pop
sub
sti
popa
scas
mov
movsl
loope
jb
hlt
out
mov
icebp
lret
mov
fcmovbe
leave
inc
add
imul
fbld
inc
mov
lea
aaa
gs
or
lock
sbb
lret
mov
aas
and
jmp
jns
daa
mov
cld
add
fs
and
scas
add
mov
mov
push
mov
jg
mov
imul
cmp
inc
xor
push
add
cli
shlb
add
mov
xchg
mov
cmp
sub
in
js
stos
fs
dec
lods
ljmp
xor
or
ss
subl
decl
mov
and
jle
push
aam
pushf
cmpsb
out
mov
inc
shr
pop
ja
hlt
jg
test
xor
add
outsb
push
mov
mov
rolb
xor
movsb
shrb
dec
mov
in
rcr
fldl
mov
mov
imul
data16
xchg
scas
ret
jnp
cltd
lods
lods
jmp
loop
and
mov
int3
mov
jb
notl
dec
mov
fwait
lahf
inc
cmp
push
movaps
enter
sbb
or
addr16
add
ficoms
test
movsb
inc
setp
mov
je
fcmovbe
add
inc
cmp
es
sarb
test
xchg
sub
scas
jno
ljmp
gs
mov
lods
sahf
jae
insb
test
dec
inc
mov
dec
arpl
xchg
leave
xchg
in
xor
cmpxchg
loope
or
sub
rorl
addb
orl
mov
dec
aas
inc
adc
stos
int3
js
in
or
push
pop
imul
xor
adc
pop
stos
outsl
insb
insb
sarb
cld
push
jbe
push
dec
cmp
dec
cwtl
ljmp
mov
je
jge
jp
mov
push
xor
sahf
mov
outsb
popa
dec
cli
xchg
dec
mov
imul
cwtd
enter
xlat
sbbl
push
enter
xor
sub
sbb
xor
pop
dec
jge
sbb
dec
xchg
inc
test
dec
pop
mov
les
test
ja
sti
call
mov
imul
adc
in
rcr
data16
xor
jbe
in
hlt
es
icebp
je
scas
mov
rorl
into
outsb
cwtl
adc
cmp
aaa
push
sub
push
lods
test
sbb
mov
in
pop
daa
mov
outsb
jno
add
pop
lahf
pop
in
push
sbb
subl
jae
fwait
xor
in
loopne
mov
sbb
pop
and
pop
pop
push
add
fs
fistl
adc
out
das
mov
loopne
pop
push
add
repz
mov
daa
cmp
test
mov
cld
stc
lea
das
jg
hlt
mov
inc
movsb
lods
and
int
adc
gs
imul
jecxz
nop
aas
fwait
pop
scas
or
push
jmp
xlat
or
fxch
cwtl
xor
mov
das
mov
ja
push
xchg
decb
mov
in
cmp
sbb
xchg
lods
repnz
adc
dec
pop
movl
rcll
loopne
jbe
cmpsb
in
push
loop
adcb
out
in
ljmp
fistl
mov
push
jno
aaa
mov
push
dec
cli
ror
pop
push
pop
inc
push
cmp
cmpsl
subb
outsl
test
mov
sub
call
pop
das
or
push
mov
outsl
iret
xlat
xor
fcomps
ja
stos
mov
imul
mov
fnstenv
cmpsb
movsl
ret
adc
jle
jmp
pop
lsl
lahf
outsb
es
sbb
pop
lahf
jle
mov
sub
and
and
addr16
aas
outsb
lcall
into
mov
cmp
cmp
in
fisubl
and
faddl
or
jg
xor
enter
jae
jo
inc
shrl
xchg
push
clc
fnstsw
enter
sub
jg
out
cmp
scas
test
lock
mov
movsl
inc
mov
mov
scas
jg
in
sub
dec
sbb
pop
cmp
mov
xor
fistpl
and
stos
inc
jl
sbbb
sub
jnp
jp
or
push
dec
arpl
pop
lods
fcmovu
lock
push
mov
out
add
pop
pop
call
je
lret
or
push
add
or
in
pop
aaa
loop
fisubrl
push
scas
inc
dec
or
mov
lcall
xchg
jb
ljmp
call
cmp
pop
inc
sbb
adc
scas
mov
loop
push
cmp
pop
inc
xor
movntq
sti
push
adc
and
sbb
in
rcrb
or
aam
cld
cmp
jl
xchg
and
pop
enter
jae
cmpsb
aam
mov
pop
std
mul
arpl
data16
outsb
jp
inc
icebp
inc
push
lods
aam
in
imul
jge
jno
mov
xchg
lods
xor
rcll
cmp
mov
mov
xor
je
xchg
mov
sbb
cmp
xchg
sbbb
jecxz
or
pop
lcall
repnz
loop
sbb
mov
daa
sar
in
sbbl
and
es
loope
in
jno
cmpsb
xor
fwait
lret
and
bnd
stos
loop
mull
subl
push
cmp
mov
dec
push
mov
loope
xchg
fcompl
cmp
xor
repz
stos
loope
jo
or
mov
and
lahf
xor
adc
cli
sub
jb
inc
aaa
lods
imul
pop
and
mov
sub
aas
ret
es
ss
sbb
push
orb
push
enter
inc
ficompl
xchg
fcmovbe
daa
fildll
mov
test
cmp
and
sarb
pop
mov
aas
in
cmp
ret
int
pop
xchg
xlat
ljmp
repnz
orl
mulb
pop
mov
or
fidivrs
jns
xchg
cmpsb
ret
sbb
add
xor
std
mov
mov
or
aam
push
mov
jnp
xorb
loopne,pt
pop
mov
and
clc
int
or
fidivs
pushf
lods
lock
call
subl
popf
pushf
leave
xor
test
add
cltd
stos
inc
jno
scas
loop
mov
pop
lcall
vcvtss2sd
or
mulb
adc
and
xor
mov
negl
ret
push
push
daa
rolb
fwait
pop
and
shll
rolb
mov
inc
mov
inc
adc
or
lahf
lods
and
jge
movsl
dec
into
mov
mov
cmp
jo
stos
xchg
add
and
jae
add
in
aas
cmpsl
cmpsl
aad
lcall
adc
push
pop
pop
imul
dec
mov
bound
and
dec
mov
cltd
xchg
mov
add
lea
inc
lahf
jne
pop
mov
pop
movsb
decl
xor
call
cmpl
fcomps
pop
pop
xor
and
mov
dec
push
push
mov
and
cmc
push
sbb
jge
mov
aaa
mov
adc
leave
jecxz
mov
out
inc
jo
xchg
addr16
sbb
js
in
out
mov
dec
icebp
in
sarl
mov
cwtl
out
cmp
iret
push
imul
gs
in
dec
std
and
cmpsl
fcmovbe
xchg
cli
pusha
add
stc
xchg
mov
adc
fidivrl
lods
fidivl
and
cmp
imul
jl
sbb
mov
ret
outsl
addr16
pusha
aad
xor
pop
push
sub
fnsave
dec
in
sbb
push
lods
xchg
jns
je
imul
xchg
inc
or
cmpsb
mov
in
fcoml
mov
stos
movsb
xchg
movl
xchg
cmpsl
dec
mov
inc
daa
cmpsl
and
pop
adc
insl
test
mov
addr16
insb
push
sub
cmpsl
fisubl
js
fistpl
mov
and
jg
ds
pop
mov
popf
xor
cld
lret
jns
arpl
bound
lcall
lret
xor
mov
sub
mov
cmpb
sbb
stc
mov
mov
pminsw
popa
and
pop
cld
rcrl
orb
cmpsb
sbb
dec
mov
mov
and
dec
gs
insb
cmp
in
popa
jbe
push
cmpl
dec
jmp
jge
data16
sbb
adc
mov
ret
ja
xor
mov
add
jae
fisttps
sbb
xor
jae
jne
dec
imul
decl
xor
imul
mov
loopne
ret
clc
mov
adc
sub
fmull
xor
gs
jge
lea
insb
push
jmp
inc
nop
pop
xchg
dec
outsb
jnp
hlt
lea
pop
ljmp
in
ret
arpl
adc
rorb
xor
fcmovnb
out
in
movsb
xchg
xchg
jmp
loop
mov
notl
into
enter
bound
push
xchg
not
inc
fs
jae
inc
xor
mov
inc
jle
xor
hlt
pop
xor
test
mov
xchg
push
cmp
stos
stc
cmp
aam
push
push
outsb
add
push
sbb
rorb
daa
clc
out
xchg
loope
push
sbb
adcb
mov
xlat
fwait
loop
pusha
clc
xorb
fwait
shll
pop
bound
fs
mov
and
jo
adc
adc
shlb
cmpl
cltd
hlt
mov
and
fisubrl
push
hlt
mov
ljmp
push
xor
dec
mov
testl
cmpsl
ja
je
jae
js
push
shrb
out
xor
fnstcw
into
ds
outsl
cmp
shrb
lret
mov
out
fbstp
push
out
cmp
cwtl
insb
sbb
addr16
jae
sbb
hlt
mov
mov
mov
sbbb
jbe
mov
inc
fnstsw
jae
mov
xchg
push
mov
insb
adc
lcall
in
pop
or
push
xchg
xchg
or
cmc
divb
sub
jp
mov
loope
rcll
test
push
loop
cmp
sub
xor
add
xor
push
add
pop
dec
inc
daa
mov
into
insl
jnp
pop
adc
jnp
jl
cmp
jecxz
test
pop
shl
outsl
pop
fwait
cmp
loopne
pushf
mov
mov
insl
cmp
cld
pusha
lret
jmp
inc
dec
scas
cmp
outsl
xchg
mov
xchg
inc
je
add
std
inc
or
fidivrs
imul
push
xor
and
sbb
aam
inc
inc
stos
imul
cmpsb
inc
out
cmpsl
and
jno
pop
punpckhwd
push
repz
test
xor
sbb
inc
inc
push
ja
repnz
jb
push
xchg
pushf
or
in
inc
cmp
rcrl
mov
adc
sub
mov
pop
add
rcll
adc
daa
jne
fdivl
cmp
xor
out
ljmp
out
jnp
nop
sub
cmpsl
cld
jle
inc
xchg
outsb
jne
shl
rol
jno
gs
adc
jmp
sbb
adc
dec
cmpsb
fistps
out
loope
adc
push
xchg
add
pusha
sbb
jp
cmove
jb
outsb
clc
adc
test
lods
sahf
push
push
cltd
mov
test
mov
test
xchg
mov
pop
xor
bound
into
mov
mov
xor
jle,pn
push
iret
ret
jecxz
xlat
sbb
lds
loopne
mov
mov
push
js
jne
mov
jb
xchg
daa
mov
dec
xchg
cli
dec
mov
sub
sub
push
int
cwtl
stos
add
cmc
cld
frstor
popa
jbe
pop
test
xor
shr
mov
add
pop
outsb
sub
cmpsb
dec
lock
sub
cmp
test
sbb
jle
jp
das
mov
push
mov
andl
cs
mov
xchg
cmp
lea
inc
imul
cmp
popa
xlat
or
or
addr16
fldl
push
js
xchg
cwtl
decb
aaa
and
rolb
bound
stos
test
pop
mov
ja
jo
std
test
das
pop
xor
xor
mov
xchg
mov
xorb
and
mov
stos
pop
movsb
xor
loopne
mov
cmpsb
xchg
and
sti
getsec
cmp
pop
call
sub
jbe
shlb
adc
adc
popf
in
xor
sahf
pop
cmpsl
dec
hlt
mov
loope
movsb
es
mov
test
inc
jnp
out
dec
adc
ss
repnz
movsb
inc
popf
or
imul
mov
popf
pop
mov
data16
mov
sub
mov
add
or
jae
mov
xlat
imul
lret
jb
mov
loopne
mov
aad
stos
je
lock
test
add
fldcw
sub
addr16
divb
xor
fstpt
push
shlb
cltd
out
inc
jne
jmp
iret
lds
call
ss
idivl
sub
enter
xor
sbb
dec
pop
sub
push
inc
sub
mov
in
imul
leave
add
push
mov
fildll
adc
jle
mov
lahf
test
push
aaa
nop
jmp
insl
xor
mov
enter
fistpll
scas
leave
aad
test
push
mov
sbb
in
fs
mov
lock
bound
cmp
out
inc
push
adc
jp
push
test
mov
icebp
dec
mov
push
mov
and
mov
add
xchg
dec
shl
xor
jecxz
sbbl
push
mov
jl,pt
inc
xor
ret
xor
add
mov
in
imull
or
in
push
loopne
stos
je
inc
push
push
filds
outsb
xchg
dec
ret
orb
aad
push
stos
push
out
xor
xchg
jno
add
fnstcw
cmp
stos
xor
out
pop
xchg
adc
cli
pop
xor
push
mov
cmpsl
adc
push
rcll
mov
stc
popa
scas
pop
inc
sbb
push
rdtsc
jecxz
dec
xor
sbb
and
sub
mov
lods
inc
jl
lret
lods
leave
pop
in
imul
movsb
xchg
outsb
test
cltd
enter
jb
scas
pusha
jecxz
cwtl
inc
aad
out
mov
pushf
cli
in
dec
dec
sub
jns
adc
pop
incb
mov
add
sbb
nop
je
gs
adc
push
pop
cli
cmpl
into
jbe
popa
push
xchg
dec
cmp
movsl
pop
cmp
stos
jo
sbb
push
nop
out
out
sbb
popf
mov
mov
ljmp
popa
push
xlat
rcrb
xchg
mov
mov
or
bound
adc
mov
or
mov
adc
pop
iret
adc
push
mov
cmp
sahf
pop
movsb
jmp
push
outsl
pop
or
stc
scas
or
xchg
pusha
pop
inc
out
js
cli
dec
push
loope
sub
mov
mov
stos
pop
push
int
mov
loope
cmp
mov
push
ljmp
stos
ds
movsb
fbld
push
xchg
or
mov
sub
jnp
cld
sub
mov
and
cmpsb
fidivl
xchg
inc
in
mov
in
cld
adc
jns
sahf
pop
lea
jmp
adc
fs
popl
aad
push
fiadds
dec
je
push
jge
pop
cmpsl
mov
out
dec
in
daa
cmpsb
mov
int
mov
unpcklps
arpl
adc
test
xchg
fildll
fstpl
into
lock
inc
in
mov
cs
imul
xchg
or
je
push
ss
adc
mov
mov
cmovae
lret
shlb
and
jno
mov
ljmp
mov
imul
xchg
mov
lcall
dec
test
outsb
hlt
adc
out
incl
out
or
xor
pop
lock
adc
sub
jmp
jb
and
test
ss
jae
int3
rcrb
xchg
jmp
inc
shll
cmpl
mov
fwait
xchg
test
out
xchg
sbb
xor
adc
inc
rorl
out
fisttps
inc
sarl
jnp
xor
push
sub
mov
dec
pushf
dec
outsb
and
adcl
push
rol
out
mulb
ljmp
sub
cmpsb
loop
dec
jle
mov
mov
stc
ljmp
inc
mov
pusha
pop
cld
in
adcb
sub
jmp
cld
stos
and
fcompl
mov
push
push
sub
dec
push
shlb
lods
rclb
scas
fildll
add
and
xlat
movsb
add
xor
jne
sbbl
outsb
jnp
lock
cmp
mov
cli
cwtl
fwait
addr16
or
psllw
call
mov
add
mov
adc
sbb
mov
lods
scas
stos
xchg
mov
mov
popf
adcb
sti
fildll
add
mov
inc
test
inc
sub
jle
repz
adc
push
jns
or
mov
push
mov
lods
jp
jbe
aad
sbb
cmpl
sti
mov
loope
jg
popf
ficompl
jp
cmpsb
adc
shlb
jge
int3
fcompl
lret
out
pop
je
pop
sti
movsb
lcall
push
sbb
xor
shll
repnz
mov
sbb
ret
bound
dec
repz
push
stos
push
les
push
dec
popa
jle
dec
cmp
adc
in
dec
clc
icebp
and
sbb
or
arpl
xchg
les
and
pop
mov
fcompl
and
outsb
jecxz
mov
ret
lock
cmp
icebp
dec
cli
inc
mov
fldt
sub
in
sbb
or
or
mov
mov
sbb
push
sbb
ret
fsts
sbb
cli
loop
xchg
pop
xlat
out
push
sub
aas
and
add
pop
sub
lahf
sub
jne
in
xor
out
push
mov
jb
in
mov
arpl
pop
fdivrl
pop
aas
sub
jmp
jbe
test
cmp
mov
adc
ds
lods
lret
jns
add
cmpsl
das
loop
imul
pusha
mov
pop
xor
dec
cmpsl
fwait
inc
and
aam
jl
stos
jl
sbb
jecxz
aas
shrl
push
outsl
jle
mov
insb
cmp
sbb
in
pop
push
mov
adc
aas
mov
cmpsb
js
xchg
icebp
pop
or
imul
mov
es
add
xlat
je
mov
dec
jno
xchg
mov
xor
aaa
jne
push
imul
mov
movsl
test
rclb
fadds
pop
and
insb
dec
or
popl
sub
pop
xor
or
rorb
adc
dec
lea
imul
push
cltd
inc
cmp
push
mov
ret
fs
orb
pop
orl
xchg
sbb
sbb
mov
push
adc
or
lea
push
movsb
cmpsl
dec
pop
adc
mov
out
mov
cmc
xor
into
adc
sahf
sbb
cmc
jb
pushf
stos
lahf
ret
dec
rclb
inc
mov
and
pusha
jp
fdivp
inc
int
test
sahf
sub
adc
pop
dec
fcompl
int3
rolb
mov
fbld
or
ret
imul
insb
or
push
push
mov
je
mov
sub
fmuls
popa
ds
mov
mov
loopne
hlt
xchg
loop
adcl
jmp
outsl
push
sarb
inc
sub
jmp
mov
sbb
pop
cmp
mov
dec
sbb
inc
push
addr16
shlb
repnz
aam
negb
mov
out
or
repz
and
mov
mov
int3
into
dec
jmp
mov
cmp
les
cmp
out
testl
push
xchg
inc
jne
mov
add
sbb
jecxz
outsb
cmp
and
mov
dec
popf
repnz
arpl
cmpsl
sbb
cmp
imul
xor
xor
rclb
pushl
xchg
icebp
mov
std
xor
popa
mov
push
lahf
imul
movsl
cwtl
dec
jp
inc
psrlq
addr16
jnp
and
mov
add
ret
jl
xor
and
adc
or
dec
inc
sub
mov
add
and
and
inc
ljmp
call
gs
hlt
ret
out
mov
mov
out
push
repnz
imul
mov
sti
mov
adc
mov
adcl
sbb
and
sbb
pop
pop
push
test
jb
ja
mov
and
stos
dec
sahf
sub
je
sbb
mov
mov
push
pop
movsb
rorb
add
cmp
fwait
insb
or
cltd
stos
cwtl
push
xchg
popa
push
mov
adc
rol
pop
mov
stos
xlat
leave
mov
xchg
add
jle
mov
xchg
inc
jmp
sub
js
out
cmp
in
in
jg
push
aad
lock
xchg
sub
jecxz
rcl
mov
lock
stc
mov
mov
shr
mov
inc
inc
xlat
jmp
xchg
lcall
cmp
pop
push
jns
outsl
in
adc
sbb
jp
dec
and
or
repz
les
push
xchg
xor
mov
gs
loop
xor
subl
sbb
pusha
sub
push
xchg
test
js
scas
mov
outsb
push
mov
xchg
cmpsl
xchg
shll
mov
testb
xor
movsb
fs
aas
aam
test
rolb
inc
and
mov
mov
out
call
inc
pop
test
icebp
xor
lret
loope
add
pop
xlat
adc
shll
mov
dec
int3
dec
nop
and
sub
or
mov
jg
mov
mov
mov
xabort
stos
or
inc
in
pushf
arpl
call
ja
out
sub
push
inc
test
sbb
fdivl
mov
lea
nop
lcall
jbe
sub
sbb
mov
pop
add
mov
stos
movsl
mov
sbb
mov
shll
movsb
rcrl
push
adc
inc
inc
pusha
xchg
es
fists
push
sbb
mov
add
jne
aaa
mov
out
lds
xor
jge
stc
cmp
scas
scas
mov
push
mov
jge
out
in
push
mov
shrl
mov
stos
enter
lret
sub
fucomip
lock
lods
rolb
dec
mov
es
insb
cmp
push
scas
xor
dec
aad
shll
dec
iret
aad
adc
cmp
sub
ds
subl
jo
lea
ret
mov
pop
out
push
mov
pop
je
xchg
out
adc
mov
mov
fcoml
insb
sti
fs
bound
adc
js
andb
nop
insb
push
mov
or
jle
xchg
cmp
test
fidivrs
lcall
cli
push
lock
pop
dec
fs
push
orb
mov
push
xchg
push
loope
xor
shrl
xchg
push
lret
and
movsl
lods
nop
pop
in
sub
pop
fistpll
and
push
sub
sub
fnstcw
adc
pop
stc
sbb
push
jge
mov
add
iret
push
clc
into
les
repnz
push
fbld
mov
pusha
popa
xchg
scas
mov
mov
or
push
add
scas
jle
fwait
cmp
jge
test
push
sahf
lret
arpl
cmp
adc
testb
cli
ljmp
cmp
gs
xor
mov
mov
imul
arpl
or
loop
stc
add
jnp
pop
test
mov
iret
outsb
rep
mov
clc
sub
dec
nop
jne
xchg
adc
sar
rorl
mov
es
lea
jbe
mov
sar
imul
sub
cmp
lret
bound
ds
fidivrl
and
fidivl
or
pop
sub
mov
addr16
test
push
fisubl
push
adc
rcrb
ret
or
sub
fwait
mov
or
cmp
sub
cmp
popl
cmp
push
push
mov
xchg
pop
aas
jo
out
arpl
push
xlat
loope
mov
gs
movsl
pop
mov
dec
jle
add
ret
inc
ficoml
nop
mov
daa
mov
js
iret
xlat
imul
pop
rol
lahf
mov
mov
sbb
mov
cs
daa
dec
dec
jge
scas
add
xor
mov
pop
ja
pop
in
xchg
pop
pop
fcompl
and
inc
pop
jo
push
xchg
mov
lret
add
rcrb
dec
jo
mov
mov
xchg
xchg
iret
fistpl
mov
jbe
and
scas
push
stc
and
aas
lahf
test
js
inc
dec
push
pop
and
add
mov
leave
dec
sbb
loopne
int3
jno
jg
nop
out
mov
adc
sbb
push
xor
push
pusha
out
mov
out
imul
mov
or
aad
inc
lods
mov
cmp
sti
fidivs
rorl
xchg
mov
shrb
sub
cmpsl
cld
cld
jo
fisubl
xor
mov
div
xor
mov
les
hlt
stc
fimull
out
push
jge
jmp
mov
pusha
sub
iret
adc
outsb
ss
movsb
outsl
test
dec
sbb
in
sbb
push
push
or
inc
or
daa
push
or
outsl
mov
ljmp
jno
inc
add
cltd
inc
inc
pop
test
mov
pop
in
cmc
mov
dec
movsl
enter
cmpsb
jge
repnz
or
jp
and
cltd
pop
sub
lea
fwait
lret
xchg
sub
xor
clc
and
in
or
cmpsb
inc
jbe
rcl
inc
sbb
filds
jmp
push
ret
bound
movsb
and
in
jnp
rol
das
mov
out
fistps
and
push
sbb
in
mov
outsl
test
ljmp
int
shl
ret
sub
pop
imul
xchg
dec
mov
mov
xlat
xlat
mov
clc
mov
insb
dec
movswl
js
test
lret
mov
pop
rcrb
shlb
subl
loope
cld
push
sbb
or
ret
jnp
hlt
rcll
adc
inc
sbb
pop
mov
ljmp
pop
push
push
int3
and
push
cmp
mov
pop
cli
cld
mulb
mov
stos
jmp
push
daa
imul
xchg
aad
imul
add
jbe
mov
jge
mov
jne
adc
movsl
xchg
xchg
fcoml
mov
out
movsl
in
shl
ja
scas
idivb
scas
pop
mov
stos
sbb
sbb
xorl
lcall
ret
mov
push
mov
sahf
dec
add
scas
push
or
xor
repnz
fcom
xchg
fs
pop
adc
sar
jae
jne
pop
or
pushl
stos
sub
sarb
dec
std
pop
adc
jl
or
jbe
mul
xchg
dec
jge
cmp
test
hlt
movsl
xchg
mov
pop
aad
cmp
xor
data16
add
push
jmp
dec
mov
popa
or
and
in
fprem1
push
jbe
mov
mov
daa
stc
cmp
mov
and
mov
adc
fnsave
adcb
push
xor
mov
bound
sti
insl
dec
fildl
mov
xor
lcall
jge
cmp
das
push
das
out
pop
cli
addl
js
mov
inc
ror
lahf
adc
leave
add
adc
fdivrs
push
gs
int3
mov
dec
shll
sub
call
cltd
jge
cwtl
dec
mov
xchg
sbb
jmp
mov
jle
lods
nop
leave
cwtl
sub
and
xchg
sbb
inc
xor
test
stos
out
sub
in
hlt
or
ja
adcl
cmpl
das
loope
xchg
pusha
and
out
loop
fcomps
pop
jnp
cmp
in
test
leave
cmp
sub
repz
xchg
leave
adc
loope
repz
cli
fwait
cwtl
out
repz
pop
cld
xor
add
mov
cmp
xchg
mov
fsubs
pop
xchg
sarl
jne
sti
outsl
inc
fiaddl
push
arpl
mov
stos
test
inc
enter
xchg
icebp
andl
cmp
outsl
pop
into
jno
imul
or
pusha
jb
add
fidivl
lcall
dec
cmc
int3
fnstcw
or
adc
lea
popa
or
std
push
rcll
fnstcw
icebp
cmpsb
xchg
xor
lahf
jl
daa
xor
int3
cmpsb
popa
das
jp
dec
mov
push
jno
in
cmp
adcb
clc
adc
sarl
shll
or
mov
push
pop
rcrb
pusha
scas
outsl
int
sbb
out
sub
shll
lods
or
test
jae
mov
pop
mov
mov
fstpt
dec
flds
or
mov
int
jno
push
sub
mov
mov
mov
jmp
sarl
aas
aad
cmp
sbb
fs
scas
push
shlb
add
fcmovnbe
jns
push
call
dec
ret
pop
ret
xchg
insl
insb
dec
push
aas
arpl
cmp
aad
enter
test
lds
dec
cs
mov
adcb
test
test
fucomi
jno
inc
jle,pn
dec
in
pop
insl
int3
xchg
pop
jns
push
mov
adc
jnp
cs
out
mov
adc
fwait
mov
dec
xor
pop
add
imulb
std
pop
jmp
or
add
xchg
adc
xor
std
sbbl
jg
push
cmp
movsb
aad
xor
fcmove
lahf
sbb
xor
in
mov
mov
add
sbb
repnz
mov
push
jne
test
mov
movb
repnz
xchg
je
jl
test
scas
inc
sbb
fisubs
or
loope
dec
and
add
mov
nop
hlt
adc
lcall
ret
stos
push
loop
sub
mov
mov
and
out
adc
enter
incb
into
scas
xchg
xchg
lock
add
pop
mov
mov
repz
in
lods
xchg
or
cli
and
stos
rorl
sub
test
push
out
cs
outsb
andl
fmull
lds
rol
sar
adc
sbb
and
frstor
jne
and
jo
jge
inc
outsb
sbb
mov
and
jno
repnz
xchg
movsb
jmp
js
inc
cmp
ret
inc
out
fsubrl
scas
aam
fistl
cltd
and
shlb
lret
icebp
gs
cmpsl
aam
adc
fdivr
xchg
xchg
mov
ficoms
or
adc
addr16
cmpsb
pop
pop
popf
or
cmp
jno
push
xchg
and
pop
cwtl
xor
xlat
pop
dec
stos
adc
ret
lods
stos
mov
popa
inc
sahf
je
mov
xor
nop
cli
ficoms
mov
inc
xor
jge
push
jns
jb
push
lods
sbb
sbb
lcall
fwait
out
mov
js
stos
sub
pop
mov
push
push
cld
mov
sbbb
adc
sbb
xchg
adc
adc
and
icebp
push
mov
repnz
andb
xor
adc
mov
out
inc
or
fistpl
mov
and
inc
sti
fistpl
lret
leave
iret
add
cmp
cltd
jno
loopne
and
sbb
dec
aaa
popf
movsb
and
loop
mov
dec
xchg
push
mov
imul
jns
and
push
cld
xchg
dec
addr16
jo
xchg
sub
push
or
fsubrs
dec
xchg
mov
outsb
add
push
mov
daa
mov
sbbl
cltd
inc
push
and
mov
pop
push
jno
jp
add
repz
jmp
and
mov
fnstsw
aas
sti
jno
sarl
out
into
rcrb
scas
insb
fisubl
fcomps
xchg
xor
mov
mov
imul
ss
test
aam
bound
sub
inc
mov
push
pop
dec
jbe
dec
lcall
aad
xchg
sub
sub
xchg
das
jne
nop
into
pop
push
cmp
idiv
xchg
xchg
insb
mov
and
ret
jge
inc
pop
or
pop
mov
mov
xchg
pop
scas
xor
mov
xchg
stc
cmp
push
stos
mov
js
das
int3
push
rcl
adc
repz
xchg
aad
faddl
and
fidivrl
stos
sbb
test
cld
and
add
bswap
fcmovu
xchg
test
das
fsts
push
mov
ret
or
or
mov
ss
lods
popl
data16
xor
cmpsl
jnp
rclb
hlt
xor
scas
mov
sbb
test
xor
sbb
imul
xchg
cmp
jnp
jno
sub
cmpsb
sahf
and
pushf
mov
out
aam
and
xchg
or
adc
cmovp
std
inc
cs
mov
and
adc
xlat
fs
mov
aam
cmp
add
dec
sub
cmc
addb
or
lret
imul
enter
mov
sbb
jnp
iret
push
jno
sub
dec
inc
js
aaa
imul
cmpsl
mov
push
jp
shlb
mov
out
pop
les
mov
das
ljmp
and
lcall
shll
xor
and
cs
mov
xlat
push
xchg
cmp
outsl
rcll
test
sub
adc
lret
xor
mov
mov
mov
push
daa
shll
xor
dec
inc
cmpsb
adc
loop
movsl
inc
push
xor
sub
sub
filds
xor
out
movsb
push
mov
test
jp
mov
pop
cmpsl
fcmovb
fs
int3
add
aam
call
sub
in
or
daa
cwtl
mov
xor
jae
dec
ds
sub
cmp
shlb
add
mov
inc
inc
xor
adc
lock
mov
sbb
dec
dec
ret
mov
pop
xor
sub
sbb
sbb
icebp
and
cmp
sbb
sbb
stc
das
mov
pop
fnsave
and
push
adc
adc
mov
movsl
mov
inc
shl
lea
repnz
jg
xchg
aam
push
in
lea
xchg
sahf
lcall
rclb
cmp
and
mov
movsb
sbb
imull
push
testl
movb
xor
mov
jae
shl
pop
mov
add
cmp
dec
jg
cmpsb
pop
pop
and
arpl
inc
pop
insl
mov
rolb
xor
shll
or
shr
cmpsb
movsb
test
rcrl
popf
clc
iret
add
mov
xchg
test
xor
mov
xchg
lock
flds
cmp
iret
out
jl
sti
loop
cmp
jge
in
mov
out
rorl
mov
mov
in
or
in
leave
fsubl
es
leave
inc
into
mov
mov
inc
jne
mov
jb
cmpsb
push
push
push
mov
xor
cli
xchg
mov
pop
andl
aaa
and
push
xchg
ds
outsb
xchg
ds
mov
ss
jl
mov
mov
ljmp
jne
shlb
sbb
mov
js
insl
fwait
push
bnd
sbb
add
xor
mov
xchg
cli
icebp
in
or
add
cmpl
mov
into
shl
pop
daa
jnp
xor
lcallw
cltd
push
pop
xor
mov
outsb
xchg
add
out
sub
pop
pop
or
shll
movsb
rcrl
mov
sarb
bound
sbb
movq
xlat
insl
xchg
push
aad
inc
aaa
inc
mov
or
push
das
cs
int3
inc
or
jge
pop
fcmovne
inc
test
shl
jb
or
imul
jbe
loope
cwtl
lds
sbb
repz
inc
je
insb
popf
sbb
inc
push
jo
gs
sub
dec
jo
jp
in
jne
inc
dec
jp
sbb
xchg
das
lret
sbbb
test
addr16
mov
je
es
sub
add
and
sbb
or
je
push
push
mov
cs
pop
sub
and
fadds
stc
cwtl
test
dec
mov
pop
nop
int
mov
pushf
jmp
ror
movsl
jp
xchg
xor
fs
jno
pusha
arpl
lea
pop
mov
jmp
mov
pop
push
pop
and
xchg
arpl
je
mov
stos
repnz
pop
mov
sub
scas
nop
lgs
scas
jmp
movsb
push
sbbb
popf
test
cmp
out
negl
jae
add
mov
jb
leave
xchg
xor
cltd
push
mov
cmp
imul
xchg
icebp
xchg
push
aad
push
and
push
sbb
aas
mov
mov
push
vmwrite
sub
push
mov
rcrl
sahf
loop
loope
jbe
xchg
clc
xor
pushf
test
add
or
or
repz
xor
leave
or
repnz
das
inc
ss
scas
stos
out
stos
cmp
fnstenv
xchg
int
push
aas
xchg
mov
jns
mov
xchg
sbb
push
out
adc
cmpsb
pop
loopne
out
mov
inc
test
inc
test
inc
out
shlb
push
and
jle
icebp
jg
xchg
addl
gs
out
pop
dec
cwtl
dec
xor
inc
push
xchg
call
push
or
inc
pop
popa
loopne
inc
adc
mov
sub
sbb
mov
inc
in
jns
test
xchg
outsl
jmp
int
into
inc
and
cwtl
jmp
add
sbb
aaa
mov
inc
xchg
sub
ds
lahf
aad
cmpsb
xor
ficoml
inc
repnz
arpl
in
and
and
out
xlat
and
inc
negl
rolb
mov
aaa
sbbl
dec
aas
daa
in
idivb
lds
add
andb
sub
and
ds
ja
mov
into
mov
sahf
out
imul
fisttps
jbe
jnp
popf
mov
cmp
push
dec
or
ljmp
mov
ljmp
pop
or
mov
inc
pop
pusha
daa
bound
mov
or
enter
nop
repnz
dec
mov
and
sub
ror
and
inc
xchg
mov
pop
mov
and
lret
scas
mov
insb
add
adc
jae
stos
push
bound
int
shll
mov
ret
jo
xchg
push
xor
fadds
jmp
out
stc
nop
movsl
and
lret
mov
ret
mov
adc
fsubrl
add
push
test
xchg
mov
xor
js
shl
outsl
push
jne
lahf
cltd
sti
daa
hlt
pop
stos
and
mov
add
mov
sub
push
jl
lret
jmp
xorl
in
or
enter
xchg
lcall
cltd
lcall
cmp
leave
or
mov
push
pop
mov
sbb
sub
fimull
pop
jbe
imul
faddl
xor
cmp
add
das
dec
push
popf
popa
ror
adc
cld
pop
cmpsl
jge
pop
fistl
cltd
jbe
shlb
js
push
lahf
mov
jae
hlt
or
test
adc
jle
inc
das
imul
stos
into
aam
dec
in
fldl
xchg
in
sub
push
scas
cmp
into
sbb
jl
dec
test
mov
imul
add
mov
imul
hlt
aas
iret
test
adc
or
pop
out
rorl
stos
mov
push
scas
fbstp
pop
outsb
bndstx
add
xor
mov
mov
iret
dec
popf
mov
out
xor
test
push
jnp
outsb
pop
and
sub
pop
jge
xor
or
lods
mov
ds
pop
jle
lods
addr16
aad
adc
stos
dec
mov
arpl
jg
call
jmp
orl
push
mov
sbb
pop
iret
pop
xchg
dec
dec
fcoms
or
add
cmc
fwait
sbb
mov
adc
gs
testb
jmp
mov
jge
push
out
inc
pop
pushf
cs
ss
jae
push
jnp
aas
mov
ficoml
jp
enter
or
dec
push
fwait
push
inc
movsb
scas
sbb
dec
lods
mov
adc
daa
xchg
cmp
push
pusha
cmpsl
rcl
sbb
xchg
cmpsl
jg
clc
loop
jge
mov
cmp
lea
add
inc
or
sahf
mov
pop
mov
mov
dec
in
fcoml
push
in
mov
dec
or
ljmp
and
fwait
adc
inc
popl
lock
imul
and
stos
ss
xchg
and
into
ret
jp
cmp
lds
sahf
mov
arpl
in
sbb
adc
aad
mov
je
cmp
mov
pop
jo
inc
lock
jno
inc
jp
adc
adc
add
aam
aam
and
daa
mov
int3
filds
test
pop
mov
jg
xlat
dec
rclb
push
jo
mov
loopne
dec
je
add
imul
icebp
enter
jns
mov
inc
add
clc
fdivrp
dec
ret
jbe
scas
inc
dec
shlb
push
pop
cmp
aam
inc
and
cli
daa
mov
je
mov
xor
ficoms
dec
sub
daa
enter
adc
jnp
jmp
mov
int3
mov
out
cmpsl
aam
mov
xchg
pop
rorb
clc
push
nop
lods
arpl
add
test
mov
inc
jb
or
movsl
fwait
adc
hlt
jmp
push
sbb
movsl
into
bound
dec
and
pop
mov
sub
ds
sbb
xchg
imul
rorl
xchg
cmc
mov
in
or
out
lcall
jnp
aas
lahf
mov
jb
add
add
nop
imul
pop
roll
push
xchg
push
sbb
adc
jnp
mov
xor
lock
jo
xchg
adc
pop
adc
push
pusha
and
fisttps
mov
pop
imul
dec
cmpsl
mov
sahf
mov
adc
dec
jmp
xchg
xchg
cmp
test
push
xor
out
adc
xchg
jmp
dec
pop
inc
ds
pop
shll
lret
dec
dec
xor
imul
scas
sub
daa
in
fildl
mov
fidivs
subl
jnp,pt
or
mov
pop
mov
mov
or
fwait
shl
jge
pop
cmp
imul
ljmp
leave
orl
rcr
pop
mov
mov
into
pop
cmp
ret
cwtl
aas
dec
mov
or
mov
xchg
add
pusha
add
fdivl
dec
in
cmp
int
cmp
xchg
out
cmp
mov
inc
pusha
test
mov
lcall
sub
out
dec
cmpsb
pop
mov
stc
pop
xchg
insb
cld
or
es
cwtl
loope
sub
lea
lahf
fadds
shrl
mov
or
out
mov
gs
xchg
out
push
fnstcw
sub
push
aaa
ljmp
jecxz
adc
mov
adc
adc
mov
aas
jae
ljmp
jno
sub
loopne
sbbl
ljmp
jno
cmp
outsl
push
jbe
out
inc
sbb
cmp
sbb
xchg
and
jp
or
cmovs
fcoms
mov
sbb
or
insb
mov
sti
jmp
icebp
adc
mov
rorb
adc
jmp
pop
dec
arpl
cmp
and
icebp
mov
add
test
negl
lods
sub
ss
int
loopne
mov
in
jae
jmp
sarb
mov
movsl
dec
test
and
ljmp
cmp
cmp
cmp
xor
in
nop
dec
inc
roll
adcl
xchg
pop
add
xor
jae
mov
clc
xchg
fcomp
lea
cmp
lret
ret
stc
sub
xchg
push
xchg
push
inc
cli
cmc
fldt
sahf
mov
stos
cmp
mov
popf
mov
cmp
mov
rclb
cmp
xor
popa
outsb
inc
lds
xchg
movsl
pop
push
nop
push
in
loopne
jo
ss
pop
cmp
push
ljmp
cmp
nop
shll
mov
cmpsb
inc
imul
mov
test
xor
cld
xchg
cmp
or
insb
mov
mov
cmc
and
iret
sahf
mov
rol
pop
loop
pop
cmpsb
insl
jmp
mov
test
push
sbb
dec
loop
pop
sbbl
push
movsl
dec
imul
clc
add
imul
dec
xlat
mov
fs
adc
mov
fistl
nop
and
repz
out
rorl
and
push
jno
aam
js
sbb
inc
sub
pushl
cltd
mov
pop
inc
lods
lods
push
inc
cmp
mov
pop
mov
out
push
ficomps
fnstenv
loopne
adc
and
rcll
enter
push
jg
mov
or
lods
sub
dec
sub
mov
rolb
jnp
xchg
out
les
pop
enter
xor
pop
mov
add
das
and
pop
outsb
aad
jns
faddl
lcall
in
in
push
pushf
xchg
or
lods
mov
int
in
aas
pop
scas
and
lea
mov
inc
in
push
repz
sbb
cs
daa
xor
daa
adc
into
xor
gs
sbb
xorb
mov
ret
jo
cmp
sbb
movsl
sub
fdivl
mov
in
int
ja
mov
flds
scas
mov
lret
add
jle
lahf
cmpsl
aaa
test
cmp
loop
adc
dec
cs
sbb
cmpsl
jno
aad
add
cmp
mov
push
insl
enter
bound
xor
xchg
in
pusha
mov
adc
mov
or
int
push
aam
sbb
out
roll
inc
loop
inc
les
fs
inc
sub
xlat
xchg
arpl
in
pusha
bound
pop
mov
bound
outsl
sub
call
test
gs
pop
dec
push
imul
xchg
data16
cmp
and
lods
mov
mov
add
add
shrl
push
mov
add
jno
jno
dec
sub
roll
push
pop
lea
cs
jecxz
lods
add
mov
out
adc
or
push
xchg
in
xorb
jne,pn
test
out
mov
or
add
push
js
jecxz
add
inc
lods
daa
push
cmc
dec
add
addr16
adc
ja
fstps
icebp
fidivrl
cmp
add
aam
fs
loop
mov
lock
pop
pop
mov
test
int
loope
icebp
int
push
insb
push
fisttps
pop
xor
add
add
invd
fisttpl
and
shlb
inc
jne
test
push
sbb
movsb
add
push
adcb
stos
inc
xor
leavew
in
je
inc
cmp
jmp
ljmp
repz
jno
xor
or
sbb
xorb
add
jae
into
dec
cmpsb
insl
push
adc
shll
jl
jns
pop
std
cwtl
mov
and
movsl
xor
cmp
dec
jp
cmpsl
pop
xlat
inc
sbb
jae
adc
dec
in
sbb
lret
cltd
dec
stos
mov
insl
pop
sub
or
xor
inc
ficoml
mov
negb
pop
call
jne
int3
ret
push
sub
lcall
push
jmp
xor
insl
xchg
fcmove
push
clc
jns
xor
cmp
cmpxchg
cmp
lods
into
ror
mov
sahf
popa
inc
addr16
call
pop
mov
leave
sbbl
sbb
sub
jne
jle
js
insb
add
mov
pusha
cmp
push
popa
sbb
filds
xchg
adc
cmp
cld
jbe
jne
lcall
inc
add
shrd
mull
push
aad
cmc
dec
aaa
and
enter
call
popa
mov
pop
sbb
in
jl
mov
clc
mov
or
pop
mov
ret
cmp
sub
dec
fsubs
xchg
sub
dec
les
push
adc
aam
xor
pop
inc
lock
bound
or
fwait
shll
mov
popa
pop
sub
sub
fimull
cmc
sti
jae
icebp
es
sub
mov
cmc
jnp
in
iret
shr
addr16
popf
push
jecxz
cmp
fs
aam
scas
pusha
movsb
dec
arpl
dec
cltd
sub
cltd
push
add
lret
xchg
and
cli
and
mov
push
dec
add
mov
cmpsb
add
mov
movsb
cmovo
jmp
aas
inc
adc
fldcw
add
mov
movsl
ljmp
decl
and
repnz
bound
mov
mov
dec
test
pop
movsl
lahf
sti
leave
jo
adc
xchg
cmc
jnp
nopl
sahf
dec
xor
repz
cwtl
add
sub
mov
xor
add
std
popf
mov
jl
cmp
inc
push
mov
inc
xor
jg
or
lods
mov
insl
xchg
shrl
jecxz
mov
fnstsw
mov
xchg
aam
mov
adc
cmp
pop
mov
inc
mov
xor
sub
and
hlt
fidivs
cltd
repz
in
xchg
sbb
pop
stos
xchg
imull
pushf
pop
lods
sbb
mov
jae
adc
mov
movsb
movsb
aas
jp
and
addr16
cmc
lods
shr
lock
jp
jne
xor
mov
aas
mov
sbb
cmpsb
xchg
cmp
jns
sbb
pushf
jne
movsl
sub
dec
pop
sub
adc
cmpsl
shrl
repz
inc
add
je
mov
jl
js
xor
xor
or
push
add
cmp
mov
icebp
mov
xchg
or
stc
push
push
or
out
aam
sbb
jg
jb
ret
add
mov
xchg
lcall
out
out
cmp
inc
andl
sbb
cmc
mov
sbbl
cmp
mov
andb
movsl
das
xchg
ljmp
sub
imul
mov
mov
dec
mov
scas
addr16
lahf
xor
mov
enter
push
sti
cmp
jae
push
hlt
push
cltd
je
setns
sbb
mov
jmp
repnz
int
inc
push
rorl
adc
sbb
mov
int
xor
les
sarb
pop
pop
shrl
jb
sub
mov
rol
sbbb
in
mov
idivl
cmc
sbb
int
jle
sbb
repz
adc
ret
iret
stos
jge
inc
xchg
inc
push
push
sub
lock
add
dec
add
and
movsb
add
jbe
and
cltd
xchg
add
pusha
mov
loopne
andb
jmp
hlt
add
sbb
sarb
push
test
inc
xor
pop
mov
outsl
pusha
mov
adc
and
cltd
push
aas
imul
dec
jecxz
jmp
jns
mov
enter
out
adc
daa
loope
adc
imul
ret
mov
push
lds
cltd
jmp
xor
sub
mov
test
push
lret
pusha
and
int
negl
mov
sub
adc
mov
in
mov
inc
mov
ljmp
in
icebp
inc
xlat
in
sub
int3
scas
adc
xchg
mov
jle
or
mov
fisubrl
mov
lcall
sub
sarl
xchg
lock
sbb
cwtl
subb
sahf
dec
outsl
add
scas
sbb
inc
ret
fnsave
and
dec
dec
icebp
loop
adc
in
sub
mov
hlt
mov
mov
adcl
mov
popa
jns
sar
xchg
push
jge
rcll
movsb
sbb
push
pop
int3
stc
or
ret
push
push
test
bnd
outsl
sbb
or
jnp
mov
fdivrs
mov
fs
rclb
pop
xor
cmpsb
dec
orl
lods
mov
outsl
pop
pop
sbb
push
or
and
push
adc
push
aad
sub
pop
jbe
mov
dec
test
sbb
outsl
xchg
div
in
sub
xchg
jbe
or
xchg
xorl
std
mov
sbb
mov
xchg
push
lods
jno
in
pop
in
pop
insb
in
pop
xchg
inc
fstl
std
dec
dec
loopne
daa
repnz
gs
push
push
repnz
push
aad
inc
push
mov
in
fsubp
flds
cmp
cmp
adc
jae
das
mov
sbb
gs
mov
inc
adc
adc
cmp
inc
fldcw
adc
inc
mov
pop
mov
jns
inc
sbb
test
popa
popa
aaa
sbb
jge
jmp
shrl
ret
hlt
sti
add
fildl
lea
sub
add
sub
mov
pushf
test
je
sub
xor
mov
push
xchg
or
inc
push
and
mov
mov
cltd
push
adc
lret
xchg
jbe
jbe
fs
loopne
or
es
mov
fs
pop
push
jo
adc
ret
push
cli
xchg
dec
call
outsb
cmp
je
popf
and
mov
jno
mov
sub
mov
imul
jne
sti
cmpsl
pop
ret
cmpsb
movsl
ja
sub
sbb
jnp
sub
insl
jns
push
icebp
fbstp
add
inc
dec
xor
mov
push
pop
scas
inc
mov
movups
xchg
sbb
daa
dec
stc
std
mov
aas
inc
lcall
cmpsl
mov
xorl
cmc
adc
add
add
ffree
lods
push
xchg
or
add
mov
lods
lcall
scas
push
stc
mov
mov
bound
test
jle
sbb
cmp
daa
sub
add
sbb
inc
movsb
popa
dec
dec
flds
es
pop
xor
mov
popf
jnp
aam
cltd
stos
mov
pop
adc
std
cld
js
rol
aaa
loope
imul
jmp
leave
negl
inc
xor
and
inc
ss
and
xchg
push
adc
movsb
xor
mov
xchg
sbb
xlat
cli
ret
lcall
stos
icebp
sbb
mov
inc
mov
loop
sbb
mov
mov
jbe
or
mov
jne
in
mov
es
push
stos
adcl
scas
mov
insl
add
xchg
shll
ds
mov
jb
or
repz
jne
cwtl
pop
out
data16
mov
test
pop
fxch
add
xor
inc
mov
push
jnp
mov
repnz
fsubs
mov
and
iret
push
dec
jle
fbstp
sub
je
push
lods
out
jnp
shrl
and
shlb
in
jb
mul
shrb
cmp
push
in
js
mov
rorb
mov
cmp
jmp
push
sub
das
in
mov
xor
repnz
in
ret
imul
mov
mov
pop
leave
out
ret
cmpsb
rcrl
jae
mov
fwait
adc
push
loope
inc
push
cmpsl
rorb
gs
nop
aad
add
fbstp
inc
cmp
mov
in
out
rolb
jo
test
push
adc
call
dec
addr16
cmp
out
add
mov
sub
lret
rcll
pop
add
inc
out
mov
outsl
xor
in
jae
movsl
popa
push
push
lcall
stc
and
and
ret
xchg
insb
inc
cmpsl
lcall
mov
jle
into
dec
mov
lea
cltd
call
dec
andb
ret
mov
repnz
push
mov
mov
xchg
mov
cmp
xor
dec
loope
sbb
mov
test
lcall
insb
push
xchg
push
mov
mov
in
insb
add
mov
sti
aaa
cmp
lea
cli
add
sub
test
sub
push
or
fnstsw
inc
cmp
stos
hlt
ljmp
mov
xchg
in
js
test
cmpsl
adc
loopne
dec
mov
das
or
mov
cmovo
loop
push
mov
setnp
sahf
xchg
sub
pushl
pop
cmp
inc
mov
sub
lds
je
xchg
test
sub
adc
sbb
loopne
clc
cwtl
xor
pop
ds
or
mov
pop
rorl
adc
and
and
jg
ja
lock
nopl
outsb
sub
push
daa
add
mov
cld
jle
loop
mov
iret
dec
push
mov
repz
jg
cmpsb
xor
pop
xchg
orl
ljmp
xchg
sub
lock
push
enter
stc
cltd
jbe
fwait
adc
and
fs
stos
inc
dec
inc
inc
inc
cmp
and
call
mov
lods
mov
pusha
mov
dec
mov
sarl
or
pop
sbb
mov
jge
sbb
out
push
xchg
lret
popa
mov
xchg
orb
mov
jge
int3
dec
test
xor
and
es
inc
adc
or
enter
pop
push
mov
out
xor
push
int
jae
addr16
jg
js
scas
sub
int
jg
mov
loop
cmc
pop
insb
xchg
cmp
lcall
or
jae
test
test
mov
dec
int
fwait
jnp
ret
or
jl
xchg
imul
pop
jl
iret
and
imulb
push
push
ljmp
jno
fxch
xchg
movsl
popa
adc
dec
iret
jno
dec
repnz
lret
add
adc
aaa
lret
mov
imul
nop
mov
pop
and
cwtl
imul
cld
inc
lods
mov
xchg
pop
xchg
pop
and
mov
push
popf
pushf
mov
jnp
mov
std
dec
mov
scas
rcr
fcomi
rorb
xlat
stos
es
xor
fists
jle
cmp
cmpsl
or
inc
es
adc
sbb
call
pop
mov
mov
jbe
jge
ljmp
inc
sbb
add
je
ss
xchg
xor
inc
into
push
loopne
hlt
pop
or
mov
pop
or
stos
mov
sbb
cltd
sub
lcall
or
push
ljmp
call
iret
out
push
inc
mov
xor
test
mov
and
pop
jbe
xchg
out
jecxz
outsb
test
cmc
add
add
arpl
sahf
inc
push
adcb
les
les
mov
xchg
leave
mov
cltd
stos
jp
pop
mov
adc
add
push
lret
pusha
mov
lods
push
lods
stos
loope
and
shll
xchg
add
fimuls
sbbl
pop
cltd
pop
adc
jle
scas
xor
das
cmp
jbe
rclb
fcoml
aam
and
pop
inc
xor
mov
inc
xor
push
nop
cmp
lock
in
popf
mov
sti
and
and
dec
ljmp
aas
dec
mov
out
xchg
fs
adc
gs
inc
push
sahf
shll
int3
jne
cmp
jmp
icebp
pop
push
dec
repz
fwait
rcll
ljmp
mov
mov
sbb
repz
jg
mov
mov
and
rcrb
out
jo
xchg
push
mov
mov
sti
cmp
jo,pt
and
mov
aaa
call
mov
ljmp
xor
aad
out
stc
pop
lcall
xor
aaa
pop
lds
jnp
testl
inc
fidivrl
fcoml
or
or
jl
inc
cmp
les
fldl
pop
jnp
push
loopne
lock
cmp
test
das
jmp
hlt
adc
ret
adc
out
jge
cmp
xchg
decl
xor
cld
add
pushf
daa
in
aam
popl
add
sub
pop
inc
pop
clc
sub
hlt
sti
jbe
sbb
sysret
ret
outsl
jecxz
clc
faddl
xor
xor
sub
fidivrs
gs
fcom
push
cmp
aad
pop
les
dec
js
movsb
arpl
shrl
mov
cld
push
dec
cmp
popf
push
cmp
or
sti
int3
in
dec
stos
add
cmp
scas
aam
cmp
push
loope
fwait
mov
add
mov
test
xor
or
pop
push
pop
lcall
sbb
fidivrs
ficoms
sbb
sahf
sub
xchg
mov
in
sahf
pop
dec
adc
fcoms
and
add
xchg
insl
or
push
cmp
lret
adc
ficoms
nop
mov
ds
imul
popa
shr
fwait
pusha
shll
fidivs
mov
xchg
stos
pushl
sub
xchg
adc
sub
jecxz
adc
mov
push
or
dec
push
icebp
int3
jno
mov
out
stc
imul
xchg
cmpsb
lret
pop
sub
mov
loope
push
jp
sub
push
jp
xchg
mov
iret
xchg
xchg
jb
sbb
lahf
or
jo
or
les
out
push
out
push
stc
xlat
cmp
dec
iret
insb
pop
mov
scas
and
push
jbe
pop
pushf
sub
sbb
jmp
push
outsb
add
ret
pop
xchg
push
sub
xor
dec
add
pop
data16
jecxz
aam
movsl
ljmp
add
add
bound
and
push
xor
and
inc
rcr
test
xlat
into
outsb
in
jle
sahf
jnp
and
xor
test
xchg
mull
pop
out
and
sbb
fidivrl
fiadds
or
mov
xchg
flds
xchg
mov
push
inc
fsubrs
jl
mov
dec
les
sahf
idivb
in
dec
cmpsl
daa
inc
push
inc
test
out
fcmovb
sbbb
movsl
or
inc
out
out
lock
sarl
addr16
sbb
dec
xor
aas
imul
push
movsl
inc
xchg
cli
js
jns
sbb
inc
or
pop
pop
sub
mov
daa
pop
xor
or
mov
jge
lock
cmp
add
add
add
sar
or
sbb
mov
inc
pop
pop
or
pushf
mov
leave
in
and
inc
popf
mov
and
test
data16
out
idivl
sub
aam
pusha
jmp
xor
ja
repnz
pusha
les
and
xor
stos
bnd
xchg
adc
inc
repz
jno
mov
fstpt
aad
pop
push
rep
sbb
cltd
mov
testl
cmc
xor
mov
jecxz
insl
dec
add
mov
push
rcrb
cmc
leave
scas
adc
daa
mov
iret
jge
push
sti
or
jne
imul
mov
cmpsl
iret
xchg
les
ret
dec
adc
jno
mov
fxch
lea
ja
xor
pop
je
and
dec
lcall
in
hlt
lret
jmp
outsb
cmp
in
xor
arpl
and
imulb
and
mov
and
add
icebp
add
or
sti
push
push
or
jno
add
ss
mov
xchg
mov
xchg
cmpsb
pop
jns
gs
push
jne
or
push
jle
ljmp
add
sbb
outsl
in
out
sub
mov
in
adc
lods
insl
inc
mov
out
inc
stc
push
icebp
repnz
mov
neg
cmpsl
imul
inc
sbb
pop
inc
mov
cmp
xchg
sbb
sbbb
insb
addr16
mov
setge
adc
jmp
mov
jbe
adcl
and
pop
out
sti
sbb
mov
jle
clc
inc
out
jle
stos
lods
xchg
jo
push
pop
xor
jno
icebp
arpl
sti
dec
out
out
sarl
dec
sub
cmpsb
xchg
jmp
dec
jbe
add
jp
test
bound
xchg
xor
fstps
mov
fdivrl
jno
mov
or
push
loope
aas
mov
mov
outsl
push
dec
dec
test
jnp
pusha
stos
je
rcll
or
lcall
loopne
sub
xchg
sarl
jp
pop
mov
cld
and
sub
mov
pusha
push
outsb
or
xchg
sbb
fistpl
aam
mov
test
mov
jno
out
dec
jle
movsl
jp
int
mov
sbb
outsl
sbbl
mov
xor
imul
repnz
out
xor
xor
movsl
jns
xlat
mov
cmpsl
cmc
call
xchg
push
iret
mov
stos
mov
sbb
pop
sub
xlat
mov
mov
xor
inc
rorb
jmp
repz
lds
int3
fadd
inc
dec
in
mov
sbb
call
mov
cmp
cmp
inc
aaa
push
inc
xchg
insb
gs
add
jae
cmp
push
sbbl
fs
add
mov
add
jl
sbb
aaa
fmull
lods
es
push
insl
lahf
fst
ret
sqrtps
addr16
imul
daa
aam
jo
cmp
pop
loope
lods
adc
cmpsb
out
popa
rcr
jb
pushf
push
cmp
lea
add
shrl
enter
jle
xchg
icebp
pop
jle
push
mov
inc
mov
mov
mov
jp
sbb
popa
inc
roll
xor
inc
mov
das
fmuls
mov
movsl
std
xchg
mov
ss
push
jecxz
push
testl
xor
sub
xchg
inc
sub
lea
mov
cmp
cmp
push
inc
push
inc
repnz
add
jmp
pop
out
push
jg
push
dec
fisubs
test
xchg
addr16
jmp
cmp
es
ret
add
test
in
xchg
movsb
and
aaa
insl
xor
mov
inc
ret
fxch
add
xchg
out
jo
mov
cltd
mov
mov
cwtl
fiadds
in
mov
mul
aaa
inc
add
and
dec
inc
mov
mov
push
bsf
aam
pop
ret
mov
cmc
aam
jb
out
pop
cmp
lahf
jecxz
and
adc
xchg
scas
xadd
pop
cmp
sub
mov
push
lock
sbb
ss
jl
pop
cmp
in
mov
dec
push
jmp
cmp
cmp
xor
inc
push
rcl
push
data16
mov
adc
xchg
xchg
add
mov
mulb
or
pop
push
pop
outsb
sub
and
push
sub
aaa
hlt
push
push
lret
jns
fistpll
dec
jnp
fucom
jl
lahf
lea
mov
jnp
data16
pushf
insb
fcmovnbe
or
out
adc
mov
rcr
lahf
pop
xchg
push
inc
or
mull
enter
add
add
mov
add
pop
and
fistps
lock
cltd
mov
in
xlat
xor
test
push
and
aad
int3
pop
sub
dec
dec
clc
scas
cmp
sub
jo
push
outsb
cwtl
inc
test
pop
inc
xor
cmp
pop
and
sbb
mov
pop
ds
sub
scas
mov
push
es
lock
aaa
add
lock
test
jo
mov
mov
pop
or
xchg
or
sub
ret
cs
in
jb
shrl
dec
sub
aas
lret
lods
mov
cltd
daa
inc
mov
sbb
das
shlb
mov
aaa
jns
mov
aaa
div
sub
ja
pop
adcb
lret
fistl
mov
mov
daa
jns
jg
push
ret
dec
pop
out
les
dec
dec
jnp
test
inc
sarb
xlat
xchg
mov
insb
cmp
adc
adc
mov
fldt
popa
mov
aaa
adc
movsb
push
cs
mov
xor
shrb
test
cmp
popa
cmp
sub
cld
sub
sub
mov
std
pop
pop
mov
jno
movsl
sbb
clc
aas
lcall
sbb
or
pop
and
rolb
mov
and
add
clc
into
shlb
jp
mov
mov
gs
repz
dec
mov
dec
aas
xor
dec
mov
jge
jg
push
lcall
mov
in
pop
xchg
fistps
cs
xor
and
test
fidivl
cltd
sub
add
sbb
mov
pop
gs
ret
xor
mov
pop
dec
std
js
imul
inc
dec
lcall
aaa
push
fsubp
jno
pop
leave
js
mov
and
test
sbb
mov
ds
imul
pop
imul
cld
test
adc
les
paddsw
arpl
add
imulb
jns
js
adc
rorl
daa
mov
jp
fwait
dec
mov
lret
lea
mov
mov
push
mov
xor
push
xchg
dec
inc
ss
sbb
push
cmp
mov
nop
adc
sbb
xchg
pop
and
repz
and
mov
enter
xchg
jns
fnsave
orb
xchg
xchg
push
cltd
mov
insb
cmp
cltd
cmc
les
sbb
stos
push
xor
rcrl
stc
rolb
jnp
orb
insl
std
sti
iret
jl
add
test
lahf
divl
test
ljmp
jg
mov
das
inc
xchg
call
sbb
push
test
jo
cmp
sti
lods
add
inc
fmuls
pop
in
lock
in
jecxz
lret
xchg
scas
jbe
mov
xor
dec
sub
sbb
push
dec
call
sahf
inc
pop
pop
inc
leave
push
out
insl
rol
pop
cmp
mov
clc
and
xor
pop
outsb
sbb
mov
out
pop
inc
mov
fnstenv
push
push
push
xchg
adc
cld
lcall
imul
mov
jns
pop
pop
push
mov
insb
sti
jp
mov
ds
loopne
dec
cmpb
lods
mov
inc
xor
cmp
jnp
dec
jmp
add
cmp
ret
mov
mov
adc
cmp
inc
sbb
outsl
pop
inc
mov
pop
hlt
mov
popfw
adc
into
loop
xchg
dec
imul
lock
xchg
add
test
cmp
and
cmpb
int3
fdivs
and
out
mov
scas
mov
lret
int3
push
aam
mov
ljmp
dec
shlb
ljmp
inc
push
inc
gs
cmpsl
ret
sbb
sahf
xlat
jge
nopl
test
sub
mov
pop
lods
push
or
mov
cmp
leave
fildl
xchg
aas
xchg
mov
mov
xorb
sub
movb
push
mov
cmpsb
xor
sbb
repz
call
test
lahf
jg
push
xchg
sarb
enter
mov
retw
rcrb
aas
sub
fisubrs
jp
cmp
int3
daa
and
jo
dec
xor
inc
outsb
outsb
mov
jns
push
hlt
addb
std
sub
cmp
pop
outsb
movsl
dec
push
push
jbe
rcrl
clc
ss
adc
insb
add
xchg
cs
loopne
adc
movsb
leave
ss
pushf
pushf
inc
repnz
js
mov
rorb
testb
add
shr
mov
sub
jecxz
mov
and
je
fisubrl
mov
fsubr
xchg
add
pop
and
jb
outsb
loop
mov
xchg
xorb
mov
mov
inc
dec
add
daa
or
jnp
scas
adc
xchg
je
cmpsl
iret
pushf
addr16
sti
data16
in
jp
push
int
push
pop
mov
or
popa
lea
aas
fsubp
push
jb
call
lods
cmp
cwtl
ja
aam
outsl
sahf
xchg
mov
dec
das
ja
in
out
jnp
lret
mov
addr16
insb
mov
push
pop
lods
aam
mov
mov
pop
out
add
xor
js
inc
out
cmpsb
outsl
addb
ss
sub
jo
push
inc
xor
addr16
or
shlb
stos
aam
not
fistl
enter
test
in
mov
out
cs
shrb
shlb
loope
inc
cli
andb
mov
in
ja
xor
in
movsb
mov
leave
or
int3
ret
repz
jp
scas
fs
fdivs
dec
inc
test
xor
or
imul
jl
mov
add
in
pop
movsl
add
adc
into
mov
sbb
ja
mov
or
jno
aas
rcrl
stos
xchg
xchg
dec
cmp
mov
lret
inc
or
xor
adc
ret
sbb
popf
arpl
mov
pop
inc
rorl
pop
xchg
pushf
roll
insl
aas
dec
mov
inc
mov
data16
inc
dec
dec
repnz
add
mov
aaa
orl
or
je
push
into
mov
cmc
inc
cmpsl
xchg
mov
call
xchg
or
xor
or
shll
outsb
mov
jne
inc
ret
out
sti
sub
jb
push
movsb
cmp
cltd
push
push
les
daa
out
mov
sbb
jae
gs
ret
pusha
push
dec
cmp
ret
ficoms
cmovb
xchg
adc
aaa
lcall
add
or
cmp
loope
or
in
scas
cmp
stos
jae
test
add
decl
shll
testb
jecxz
mov
repnz
mov
dec
xor
in
mov
icebp
xchg
xchg
push
lods
jo
inc
cmc
jle
divb
jae
jmp
addr16
pushf
rcll
loope
jmp
mov
hlt
lods
aam
sbb
ficomps
push
cmp
inc
push
cld
xor
adc
push
div
loopne
js
add
push
sarb
das
jno
xchg
nop
sbb
xor
dec
iret
sub
xchg
cmp
scas
shr
jae
cmp
mov
test
mov
and
pop
dec
pop
imul
ds
xchg
fisttps
aad
pop
jge
into
in
inc
lock
cltd
clc
je
adc
in
jo
stc
cmp
faddl
orb
xchg
mov
pop
mov
push
pop
psllq
js
mov
adc
dec
in
push
lds
enter
scas
loope
adc
imul
bound
aad
xchg
push
dec
imul
dec
mov
fcompl
out
mov
das
push
or
cmp
fists
mov
ret
adc
push
mov
loopne
jge
push
add
in
ucomiss
cltd
orl
scas
in
jp
lock
jl
fwait
stos
xchg
adc
outsl
sti
sub
loop
stos
loop
inc
mov
sti
inc
mov
jl
fildll
enter
xchg
imul
push
int3
mov
cltd
pop
sbb
and
pop
call
push
pop
and
xchg
in
lret
jg
push
xor
sub
mov
or
les
mov
jnp
fldenv
and
mov
inc
and
xor
popl
jmp
sub
rcl
mov
mov
xorl
mov
and
sbb
or
dec
int
mov
or
stc
leave
call
xor
jno
push
cmp
insb
pop
shl
pop
pop
inc
dec
int3
setle
outsb
rolb
je
sub
cld
iret
pop
add
jnp
daa
cli
dec
cmp
jne
or
add
test
pop
mov
push
shl
cs
sbb
pushf
ds
jmp
xchg
pushf
jo
mov
andl
lock
pop
push
insb
add
push
jb
aad
dec
scas
or
mov
push
aad
or
xchg
aas
xor
pushf
mov
test
or
scas
es
or
add
sbb
fdivs
xor
insb
ror
nop
adcb
adc
xor
push
mov
cmp
adc
sbb
aas
and
dec
mov
mov
pusha
add
out
xor
jle
sbb
sub
pop
sbbl
xlat
lock
adc
push
int
mov
sbb
aaa
pop
hlt
outsl
mov
das
mov
fnstsw
inc
mov
xor
mov
jge
ja
cltd
dec
ja
mov
rcll
pop
and
mov
in
mov
divl
dec
addr16
pop
push
outsb
insb
sub
xor
ret
mov
ss
and
fwait
and
jge
gs
mov
add
jo
push
cld
or
fcompl
mov
loope
fdivrl
add
loopne
aas
sub
mov
mov
xchg
pop
fucom
cli
add
gs
pop
imul
stos
lods
inc
cmc
sarb
outsl
mov
pop
ds
mov
sti
repz
push
addr16
pop
std
fistl
xchg
out
push
bts
aas
pop
mov
fmull
fldl
aaa
mov
test
jmp
jmp
jg
clc
pop
mov
scas
xor
popa
jmp
fwait
sbb
clc
mov
or
out
pop
or
or
and
sbb
cmpsl
ja
inc
scas
mov
es
mov
mov
sahf
hlt
rorl
inc
cmp
hlt
imul
bts
dec
ljmp
pxor
cli
mov
sbb
xchg
adc
cmp
icebp
mov
sti
les
pop
mov
sbb
dec
and
mov
xchg
mov
push
and
and
adc
xchg
rorl
repz
inc
mov
movsl
jae
mov
sti
adc
mov
ret
sub
andl
xor
cwtl
repz
jecxz
out
push
and
push
dec
test
xchg
pop
lahf
addr16
mov
outsl
lds
lock
stos
fdiv
add
inc
loope
imul
in
icebp
cwtl
cmp
cmp
bound
cmp
test
sub
mov
adc
pop
mov
hlt
jg
int
xor
jno
sbb
jo
dec
inc
xchg
into
jbe
jns
test
and
out
mov
sub
callw
loope
je
add
shr
add
lods
cmp
out
sbb
mov
outsb
call
movsl
mov
sbb
pop
inc
data16
xchg
aaa
xchg
arpl
add
imul
jle
adc
test
mov
dec
mov
xor
cmpb
pusha
dec
xor
test
cltd
shll
enter
mov
fldenv
call
or
sahf
frstor
sub
add
or
loop
leave
xchg
addb
push
outsb
dec
mov
cwtl
dec
push
leave
and
mov
add
in
insb
or
mov
insl
fisttpll
pop
lcall
cli
std
push
insl
dec
mov
std
sub
sbb
xchg
push
lods
or
pusha
jbe
arpl
dec
add
repnz
sub
mov
je
inc
add
add
inc
popa
mov
aad
addr16
rcll
fildll
pushf
shlb
cli
or
sub
jns
loop
shll
jnp
dec
stc
shl
incb
sbb
jne
pop
cwtl
insb
push
daa
jnp
sbb
outsb
stc
lret
fcmovnb
mov
xchg
inc
mov
mov
jp
movaps
movsb
out
loope
aaa
ds
fwait
jl
push
ljmp
or
call
xor
iret
test
jg
and
lods
jbe
push
mov
aas
push
subb
pop
out
mov
adc
push
jae
movsl
mov
cmp
fistpl
adc
into
data16
jecxz
lods
fnsave
add
xchg
hlt
call
push
push
pushf
pushf
adc
sub
test
ret
iret
aaa
push
push
test
mov
or
scas
test
out
jl
xorl
xor
adc
call
gs
and
cld
and
jecxz
jns
pop
js
out
or
sub
rcr
stos
mov
push
mov
push
or
add
add
scas
outsl
xchg
mov
sbb
bound
into
jns
lcall
loopne
cmp
ljmp
ret
dec
push
mov
shlb
push
leave
add
push
mov
movl
scas
out
jmp
dec
cmp
subl
cld
int3
nop
sub
adc
pop
pop
mov
aad
sub
push
jb
pusha
mov
outsl
rcrb
outsb
xchg
xor
stc
mov
clc
mov
hlt
movsb
mov
lahf
pop
adc
mov
jmp
jl
call
mov
xchg
ss
push
fmull
sbb
pop
xor
jl
sbb
pop
adcb
adc
fstpl
dec
jp
jns
inc
mov
adc
cs
pusha
dec
nop
xchg
xchg
dec
into
pusha
mov
xlat
insl
inc
jl
in
scas
add
in
fisubrs
and
pop
notl
xchg
jg
repz
mov
lahf
mov
cmp
out
cmp
in
push
adc
stc
mov
vpunpcklqdq
cli
sti
push
mov
call
into
add
scas
je
jg
clc
in
mov
jae
hlt
lcall
xchg
test
insb
aad
lea
mov
sub
push
addl
gs
test
test
pusha
and
and
das
popa
dec
dec
and
mov
mov
push
stos
int
xor
jb
cs
jmp
inc
ret
in
adc
pusha
fsin
fists
lds
fmull
cmp
jo
mov
jbe
inc
rol
sahf
xor
pop
mov
hlt
rol
and
fsub
and
cmp
jg
lret
adcl
cmc
fnsave
mov
mov
mov
mov
inc
pop
add
push
or
xchg
mov
pop
lds
cs
cmc
in
adc
leavew
xchg
push
addr16
pop
pop
mov
pop
notl
fs
fnstsw
idivb
jns
push
lret
mov
sub
or
aam
leave
mov
pusha
mov
sbb
dec
aas
lods
aam
test
sbb
fwait
pop
into
out
dec
lahf
and
lcall
mov
gs
div
sub
and
push
and
mov
out
test
add
xchg
repz
int
pop
pop
and
cmc
push
cwtl
add
push
adc
lcall
in
cmp
sub
push
sub
jae
sbb
test
pop
movsl
mov
arpl
stos
inc
sub
jmp
and
xchg
movswl
mov
repz
xchg
pushf
fsubl
cwtl
mov
gs
dec
pop
addr16
push
sub
stos
push
bound
jle
sub
and
in
ljmp
inc
inc
leave
push
mov
sub
xchg
call
stc
dec
add
sub
lahf
push
dec
lds
imul
mov
dec
mov
push
mov
cltd
inc
movsl
mov
cwtl
mov
sub
adcl
pop
jecxz
mov
out
xchg
xchg
or
jnp
mov
xchg
mov
nop
in
jp
mov
std
nop
ficompl
push
test
mov
vmovapd
ret
push
int3
es
add
sub
or
jne
insl
push
aam
lods
imul
xchg
dec
mov
imul
sbb
jle
in
adc
fsubl
jp
push
addr16
adc
repz
loope
andb
into
in
sbb
insl
mov
loopne
cld
pop
mov
lods
or
push
xor
popa
mov
lods
loope
pop
mov
pusha
inc
hlt
ss
sbb
into
or
lea
out
add
ret
xchg
cltd
lea
out
out
add
sub
or
leave
xchg
aaa
xor
mov
pusha
dec
lods
addl
or
mov
je
es
lcall
dec
push
pop
lahf
mov
gs
dec
pop
loop
pop
hlt
stos
or
dec
imul
pop
movsl
scas
stos
mov
pop
jmp
pop
sbb
jnp
loopne
adc
es
xchg
nop
jmp
loope
imul
out
sub
ret
inc
frstor
cltd
out
imul
mov
loopne
mov
ret
nop
outsb
sbb
jns
sbb
xcrypt-ofb
cmpsl
insl
iret
and
loopne
movsb
fstp
int3
popa
pop
or
popa
add
jns
jmp
push
icebp
ret
and
je
xor
xlat
inc
mov
push
loopne
rcrb
test
push
cmp
imul
test
adc
dec
pop
inc
pop
or
clc
mov
jno
in
insl
dec
and
mov
scas
std
mov
jb
stc
sti
push
subb
shrl
enter
repz
pop
jl
cmpsb
cmp
push
xchg
add
xor
orb
aad
sbb
mov
push
jl
or
add
cmp
and
scas
clc
pop
dec
imull
cli
movl
imul
sbbb
in
shrl
notl
sti
pop
xor
popf
xlat
cwtl
call
popf
cwtl
inc
cli
mov
mov
add
cwtl
ss
fwait
ljmp
mov
dec
inc
jo
scas
loope
call
clc
fs
push
xor
imul
stc
enter
xchg
ficoml
inc
add
into
je
addr16
mov
adc
add
jg
push
jo,pn
fdivrs
sti
decl
sub
add
mov
mov
dec
add
sub
mov
pop
or
sti
cmpl
je
sub
and
repnz
rcll
inc
adc
pusha
decb
in
push
ds
pop
inc
add
das
sbb
cmp
sbb
int3
sbb
mov
dec
sub
js
int
mov
loopne
out
insb
sub
jo
out
out
rorl
adc
push
lock
xchg
adc
cmp
std
or
mov
stos
inc
sbb
add
sbb
mov
aad
mov
mov
or
adc
xor
lods
rolb
addr16
sub
pop
mov
jb
insl
mov
pop
outsl
sti
lds
mov
cmp
mov
mov
loop
pushf
call
lds
add
jmp
cmp
or
lds
mov
jge
test
xor
xor
ds
ret
jne
rcrb
loopne
push
sti
inc
ja
pop
sub
sub
pop
mov
loope
in
out
mov
mov
bound
js
or
vmwrite
ja
inc
push
shll
mov
das
gs
in
insb
scas
jae
out
gs
lea
push
push
lods
mov
stos
xchg
push
int
movsb
pop
fnstenv
sub
notb
test
add
filds
mov
neg
xchg
orb
mov
mov
jno
xchg
mov
xlat
xchg
push
pushw
imul
add
pushf
data16
sahf
xchg
xchg
or
and
sub
sarb
pop
xor
pushw
mov
dec
jo
xchg
aad
inc
xchg
dec
mov
mov
roll
mov
inc
pop
push
mov
jle
and
loopne
imul
add
jae
or
mov
daa
sbb
inc
stos
int
and
sarl
sbb
sub
aas
imul
push
pusha
fisubs
ret
pop
orb
mov
or
nop
sub
mov
daa
inc
inc
sub
mov
test
xor
and
sti
or
cmp
push
pop
xor
scas
ljmp
enter
mov
imulb
adc
push
cmp
pop
loopne
cwtl
mov
jg
sub
xor
xchg
movsl
rcrl
push
ljmp
cltd
cmp
jbe
mov
dec
adcb
lods
test
pop
pop
loopne
push
fwait
push
sub
ret
mov
aad
divl
aaa
inc
sbb
rcrb
sbb
dec
repnz
clc
fcomip
enter
andl
push
xchg
mov
lcall
sti
mov
add
inc
ja
loop
add
movsb
jmp
nop
jle
hlt
inc
mov
xor
mov
mov
or
movsl
insl
fiadds
xor
push
mov
pop
cmp
inc
xor
xchg
dec
pop
orb
push
popf
aas
jecxz
jg
lods
call
cmp
inc
sbb
hlt
push
sbb
cmp
inc
xor
mov
mov
xchg
stc
loope
cmpsb
and
mov
lret
cli
push
and
movsl
ret
xchg
stc
js
cmpsb
dec
ss
stos
cmc
lcall
mov
and
mov
add
mov
mov
and
popl
ljmp
dec
cmpsl
andb
sub
bound
ds
adc
sbb
jae
add
and
xchg
jmp
cmpsl
push
pop
fcoml
addr16
dec
sbb
fwait
dec
dec
xchg
mov
je
xchg
ret
mov
xor
fistpl
push
dec
fsubrl
test
sahf
pop
cmp
xchg
test
lret
popa
cmp
mov
lods
mov
scas
lret
jle
cmpl
out
sub
in
lcall
ret
outsb
mov
test
stos
negl
pusha
sub
mov
add
mov
or
call
sub
jmp
int
rcrl
sbb
mov
cmp
test
pop
mov
std
clc
pop
shll
adc
insb
stos
adc
add
push
imul
cmp
insb
icebp
dec
pushf
xchg
js
sbb
xor
fstpt
or
push
jbe
das
cli
pop
insl
xchg
gs
jae
push
jne
push
mov
ds
add
adc
and
jo
mov
jmp
fistps
sub
cmpsb
call
dec
mov
out
pop
test
test
push
shll
sub
ljmp
shrl
or
ret
dec
cwtl
pushf
pop
xchg
sbb
dec
push
xor
adc
xchg
adc
loopne
mov
icebp
ret
scas
or
cmpsl
in
sub
lock
add
cs
mov
ds
sbb
mov
fwait
adc
rorb
sbbb
xor
cmpsb
xchg
push
jnp
out
and
cmp
aad
cmp
push
dec
add
mov
push
sbb
mov
fisttpl
bound
sarl
test
mov
push
ret
sti
lock
test
jb
cmp
inc
mov
lock
adc
lds
jg
ret
pop
cwtl
mov
adc
std
data16
ret
mov
mov
add
mov
mov
push
test
insb
adc
xchg
lahf
push
ja
pop
adc
mov
pop
push
fidivrs
into
push
cmp
lahf
cli
loope
mov
or
rolb
jns
stc
ret
and
lock
mov
orl
xchg
dec
pmaddwd
cmp
mov
imul
and
xorb
mov
inc
add
inc
fdivs
adc
daa
std
add
xchg
fstl
cli
test
stos
subl
cmp
mov
call
sbb
popa
mov
jae
lods
push
xchg
mov
outsl
mov
push
inc
push
and
inc
setl
or
in
lods
iret
lret
pop
inc
rcrb
add
adc
inc
dec
es
mov
lcall
sbb
jno
inc
addr16
sub
cli
cmpl
in
andl
lcall
cmp
mov
cltd
paddb
scas
push
dec
jge
mov
cmp
jle
mov
push
cmp
cmp
pop
mov
bnd
sbbb
mov
int
call
arpl
sub
ficoml
lods
xlat
mov
mov
lret
dec
loopne
scas
mov
cltd
jne
cs
mov
es
sbbl
sub
mov
sub
idiv
and
add
lock
test
push
daa
lret
cmp
or
pushw
inc
cmpsl
jne
xor
adc
dec
lret
sub
subl
and
mov
mov
aam
dec
mov
mulb
add
hlt
jo
fcomi
or
nop
inc
popa
jae
call
pushf
loope
hlt
mul
sub
fistps
stos
push
je
pop
adc
push
fs
inc
loopne
insl
mov
jbe
in
mov
test
lcall
addr16
lret
leave
hlt
sub
sub
mov
dec
sub
mov
lahf
jmp
daa
test
pop
leave
ret
cmpsl
rcll
mov
xchg
cmpsl
jl
pop
movzbl
stos
dec
inc
mov
pop
mov
cmp
adc
sub
movsb
adc
dec
addr16
sbb
pop
pop
mov
push
repnz
test
loopne
dec
pop
push
cmp
pmulhuw
aam
fs
mov
sub
adc
dec
cwtl
fcompl
movl
jnp
iret
shlb
push
std
jle
cmp
lret
aaa
or
sub
cmc
cld
std
lods
jb
push
jp
adc
outsl
push
arpl
push
aam
jl
push
cltd
or
mov
pushf
pusha
popa
mov
jp
shll
ja
jg
mov
in
add
mov
sub
imul
daa
je
or
bound
xchg
jmp
sbb
test
xor
add
arpl
inc
mov
leave
fcmovnb
push
sbb
arpl
shll
jle
mov
xor
in
adc
pop
int
pop
pop
leave
ja
ds
xor
ret
icebp
in
sbb
xchg
int3
aad
adc
into
pop
jmp
gs
ret
mov
cwtl
fwait
insb
jecxz
push
adc
jge
sub
sti
insb
shrb
gs
fs
inc
das
call
into
lahf
ds
rorb
aam
sarl
js
fs
inc
lods
subb
push
jge
loopne
or
je
enter
pusha
push
cmp
leave
addr16
sub
add
loopne
in
pop
dec
inc
fninit
sub
add
int3
mov
xchg
jl
inc
adc
sbb
orb
jge
mov
int
lret
les
mov
jo
inc
pop
mov
sub
xlat
cmp
fucomp
lret
xor
cmp
mov
jp
fnstsw
mov
fisttps
sahf
push
or
xor
inc
rcrb
outsl
lahf
xor
test
fdivrs
mov
cld
test
pushf
fisubrs
loope
mov
sub
mov
mov
lods
int3
lcall
test
test
out
icebp
aad
aas
nop
mov
rcll
cmp
lcall
sbb
sbb
sub
rorb
js
mov
dec
into
xchg
fistl
dec
lds
push
imul
rorb
jbe
xlat
mov
mov
in
sarb
data16
and
cmp
xchg
sbb
aas
dec
mov
jl
mov
push
adc
or
call
jbe
fldl
dec
push
andb
jg
cwtl
jl
clc
aaa
or
xchg
pop
xor
add
test
loop
xlat
cs
jmp
xorl
test
mov
test
ret
xor
clc
dec
jg
repz
push
and
sahf
inc
lret
imul
dec
pop
ret
jnp
push
mov
test
pusha
test
mov
stos
rcrb
and
andl
ja
jnp
add
fs
rcll
lods
xchg
adc
dec
data16
cwtl
jg
js
cli
ret
mov
fiadds
imul
neg
jle
fprem1
out
push
xchg
nop
popa
adc
pop
fstps
orl
dec
iret
adc
and
iret
jo
rcrb
xchg
pop
sub
inc
rolb
xor
fldcw
test
lea
outsb
jnp
inc
pop
dec
repnz
ja
test
add
mov
clc
lahf
dec
push
mov
mov
loopne
pop
arpl
sahf
mov
mov
cmp
pop
push
stos
fsubrs
mov
push
bound
loopne
aam
jmp
std
divb
aam
mov
out
jecxz
xchg
frstor
jmp
les
mov
hlt
fidivrl
je
mov
push
jp
sub
lahf
cmp
insl
loop
push
xor
push
inc
or
jge
les
lcall
xlat
popa
lret
repnz
xor
sub
or
icebp
jo
cmp
test
or
cmpsb
mov
cld
fsubs
shll
inc
push
cmp
adc
sub
inc
jge
xchg
mov
fs
push
aaa
test
or
jo
adc
push
ja
movsb
dec
sbbb
ret
jmp
fcmovnu
mov
jns
adc
or
xor
nop
jns
ds
sub
jge
js
inc
sub
ja
in
movsl
hlt
xor
inc
jmp
mov
push
mov
sbb
clc
divb
int
xor
ficomps
insl
mov
mov
jne
insl
mov
scas
inc
push
rcrb
jl
in
cmp
pop
bound
push
xlat
out
fstpl
ja
lock
xor
lahf
loope
dec
scas
repz
ds
or
iret
xlat
in
int3
rolb
popf
roll
aas
xchg
lea
mov
dec
loopne
pop
jae
xchg
cmp
in
push
das
push
popf
push
jno
push
jmp
jg
mov
inc
je
mov
mov
inc
xchg
xchg
fisubrs
jg
add
adc
bnd
out
movsb
jp
adc
xor
add
and
jle
imul
idivb
dec
pop
mov
mov
mov
adc
inc
scas
push
xchg
cmpl
cmp
std
pop
xor
dec
mov
scas
out
inc
dec
cmp
call
in
int3
leave
inc
dec
nop
pushf
dec
fidivrs
mov
mov
pop
jmp
loop
push
push
movsb
int
imul
push
or
gs
or
cmpsb
in
push
cwtl
andb
mov
dec
push
add
xor
mov
pop
andb
fwait
mov
xor
jp
push
fs
mov
add
jle
xchg
cmp
push
push
mov
xor
std
pop
sbb
mov
push
bound
std
add
das
arpl
hlt
xchg
fistl
lret
add
add
jge
mov
push
mov
in
inc
fadd
outsb
int3
jnp
stos
mov
aam
js
mov
push
or
sub
and
leave
mov
add
scas
lods
arpl
or
sbbb
nop
fidivrs
rorb
pop
push
xchg
je
add
or
test
and
and
jns
mov
rclb
mov
push
and
std
frstor
ss
fstpl
jb
hlt
outsb
adc
or
lods
add
insb
enter
je
call
sbb
nop
adc
pop
fcomps
cld
cmp
inc
xchg
negb
inc
bnd
jmp
arpl
jmp
psrlq
fcmovne
out
jo
mov
adc
pusha
mov
pop
inc
inc
into
sbb
cmp
fs
stos
mov
sbb
mov
adc
mov
mov
pushl
stos
aas
outsb
sbb
rcl
cmp
mov
jp
daa
das
adc
xor
es
mov
bound
pop
or
gs
loopne
leave
inc
imull
lret
pop
data16
cmc
mov
jg
inc
jbe
pop
jge
aad
cmp
xchg
out
lods
jns
fcom
mov
ret
cltd
int3
mov
mov
gs
push
cmp
jmp
add
testb
fsubl
and
out
fdivs
mov
adc
pmullw
adc
enter
gs
cltd
mov
mov
xchg
out
sub
adc
imul
cmc
call
sub
pop
push
popa
fucomp
movsl
or
into
sbb
jp
xor
int
hlt
add
nop
je
cmpsb
sub
push
fnstcw
outsb
add
popa
or
lock
xchg
mov
cwtl
lret
std
push
jmp
push
jns
into
sub
lock
int3
add
pop
sbb
data16
jb
stos
mov
in
test
mov
mov
mov
xor
add
ds
cmpsl
xor
mov
inc
mov
lods
xlat
fisttps
int3
out
pop
mov
and
and
fcompl
xchg
jp
icebp
shrb
in
aas
test
lret
inc
push
jmp
ret
mov
xorl
jno
xor
sbb
sbb
cs
pop
jb
clc
je
cmp
shll
in
push
and
and
inc
scas
and
cs
inc
fldl
fstps
mov
push
aam
imul
arpl
mov
aas
sbb
dec
ljmp
filds
mov
insl
jne
push
xchg
movsb
das
jmp
push
movsl
cmc
pop
jae
ja
mov
push
lock
push
stc
into
rorl
adcl
adc
or
xlat
xchg
jnp
lock
pusha
hlt
add
leave
nop
or
inc
mov
sbbl
pop
aam
imul
sbb
ljmp
xchg
xchg
pusha
outsl
mov
jbe
xchg
dec
push
ljmp
and
xchg
test
xlat
int
cmp
pop
pop
or
xor
push
mov
aaa
mull
jp
mov
in
mov
pop
add
loope
inc
or
out
cs
and
fwait
mov
sbb
xchg
negl
sbb
jmp
and
test
lret
and
mov
cmpsl
sbb
mov
cs
pop
sti
lcall
loope
imul
mov
jnp
jle
mov
and
outsl
jbe
jmp
cmpsl
xor
insb
shll
hlt
pushf
sub
aad
rcll
mov
xor
mov
in
sbb
and
mov
ja
nop
mov
mov
push
xchg
gs
data16
jmp
sbb
aad
idivb
jmp
mov
inc
mov
and
iret
jp
mov
stos
cltd
adc
int
cld
test
xor
jae
jns
loop
in
mov
fsubl
mov
jecxz
js
fwait
mov
sub
es
jo
pop
in
add
call
inc
jle
mov
mov
inc
pop
dec
xor
stc
push
jo
and
std
xor
fldz
dec
xor
add
mov
push
emms
scas
popa
xchg
cmp
lcall
or
stos
pop
movsb
and
loope
cmpsl
adcb
sarl
fisubrl
sbb
or
test
shl
xchg
int3
add
push
cld
cli
ljmp
out
cli
fisubrl
adc
sbb
jne
sarl
int
stos
xor
or
lret
mov
cmp
insb
dec
xor
fisubrs
jl
repnz
cmp
ljmp
ljmp
negb
int3
mov
mov
outsl
mov
ljmp
loop
fldcw
bound
insb
cmp
mov
cmp
mov
shll
xchg
adc
cmp
jnp
or
ds
shl
arpl
es
push
loope
fistpl
sbb
in
sbbb
cmp
arpl
dec
pop
sub
notb
and
push
inc
adc
jno
fnstsw
jmp
xor
xor
iret
add
sbb
imul
iret
js
int
xor
pop
imul
sub
dec
and
ja
push
and
aas
out
cmpl
shrb
cmpsl
push
mov
adc
jg
xchg
add
mov
push
movsl
adc
pop
jne
cli
mov
fsubp
xchg
dec
ljmp
dec
cmp
adc
imul
test
lds
jo
aas
in
push
stos
pop
jle
sbb
mov
mov
in
popf
jecxz
sbb
pop
adc
adc
popf
push
xor
mov
je
cmp
data16
jb
outsl
mov
xor
test
stc
mov
add
out
test
mulb
add
and
inc
popf
push
clc
push
mov
dec
stc
shrb
aaa
arpl
fsubp
xchg
push
jb
and
loopne
scas
mov
pop
and
xchg
adc
push
rol
stos
xchg
sbb
mov
fs
adc
gs
lock
clc
mov
out
jns
ja
gs
pop
or
xor
cwtl
loop
jns
pop
negb
scas
mov
mov
movl
add
add
or
in
mov
push
lcall
xchg
pmaxub
in
out
mov
adc
leave
loope
scas
std
lea
xor
loope
xchg
xor
daa
rorl
inc
imul
mov
dec
pop
cmp
sti
jbe
shrb
pop
jmp
lcall
sbb
pop
push
imul
test
negb
outsb
addl
sub
inc
je
xor
cmp
adc
and
hlt
addb
sub
pop
or
mov
mov
aam
jmp
rorb
aaa
cmpsb
push
outsl
daa
pop
adc
dec
push
jns
jbe
js
js
dec
popf
add
push
pop
int
cmp
mov
imul
mov
outsb
sub
mov
jnp
loop
push
jae
adc
imul
je
int
pop
test
jmp
pop
xor
mov
pop
sub
pop
insb
inc
inc
fs
jae
dec
mov
inc
and
repnz
dec
sub
jge
lahf
popf
pop
push
arpl
inc
divb
mov
fisubs
daa
or
pop
mov
fildl
lods
and
add
cli
pop
add
lahf
push
cmp
fs
mov
mov
test
loop
cmc
cmpsl
and
xor
ret
add
jae
jb
inc
ss
xor
pop
fwait
mov
cmp
jmp
cmp
and
and
jo
add
or
ret
shrb
stc
or
call
mov
or
movsb
aam
mulb
xchg
jb
xchg
inc
imul
sub
inc
jb
inc
aad
arpl
and
sbb
xor
outsb
std
out
cmp
les
mov
add
jecxz
adc
int3
test
mov
outsl
lods
xor
xor
push
imul
nop
push
and
sahf
inc
jae
imul
stos
inc
push
inc
imul
je
test
or
les
push
xor
jmp
sbb
ljmp
outsl
nop
ret
sub
leave
dec
jno
test
mulb
paddd
js
sbb
and
sub
xor
pop
jecxz
or
lret
xor
cmp
mov
shrl
bound
stos
shl
mov
fisubrs
jae
sbb
cmp
in
iret
into
ss
mov
sub
cmp
movsb
test
xchg
mov
push
push
and
inc
push
jbe
jmp
sbb
repz
jno
into
sbb
push
mov
repnz
js
xchg
mov
leave
cmpsb
scas
fwait
lods
in
inc
pop
sbb
dec
push
adc
sbb
and
fidivrs
push
dec
xor
dec
les
in
cmp
popa
cwtl
pop
enter
xchg
cmp
je
push
scas
add
sub
jmp
dec
fnstsw
mov
add
pop
mov
and
gs
sbb
out
in
data16
mov
cmpsl
xor
dec
lahf
adc
sub
or
aam
rcl
lcall
std
fcom
and
orl
or
scas
aad
mov
pop
or
jmp
mov
test
lahf
loopne
outsl
les
pusha
or
test
mov
stos
sub
clc
inc
or
inc
cmpsb
or
cmp
loope
jle
aam
adc
rorb
adc
inc
mov
test
gs
pop
repz
subl
loopne
adc
gs
xchg
mov
stos
hlt
arpl
and
mov
test
stc
jbe
daa
inc
popa
fidivs
cmpsl
sbb
cld
jg
xor
jge
add
adc
lock
xor
mov
jb
fwait
adc
and
mov
push
test
fwait
sub
mov
lahf
cmp
dec
mov
sbb
in
pmaxsw
loope
dec
xor
ljmp
out
sub
xchg
cmp
xchg
xor
or
xchg
sub
push
mov
clc
mov
jecxz
pop
daa
testb
mov
dec
dec
cli
mov
fstpl
popf
ficomps
mov
pop
jp
add
insl
je
insb
cmp
mov
or
scas
xchg
mov
test
adc
push
and
jno
jl
aad
aas
cmc
je
jns
clc
jne
or
mov
fwait
and
loop
je
std
outsb
sub
sahf
xor
jmp
mov
cmp
dec
adc
xor
mov
pop
outsb
push
scas
nop
lcall
inc
filds
mov
sbb
pop
mov
push
into
cmp
scas
orb
add
xchg
lods
es
inc
nop
lcall
repnz
and
int
in
mov
daa
jb
pop
sbb
sbbl
out
inc
pop
stos
inc
jo
dec
jecxz
push
mov
xchg
xchg
pop
push
int
mov
xor
mov
lcall
dec
subb
insl
sub
js
mov
rcrb
and
pop
adc
in
cmp
jns
sahf
xchg
test
outsb
nop
dec
push
push
push
shlb
daa
bound
adc
adc
fs
push
cmpsb
in
sub
cwtl
jae
test
fimuls
inc
and
and
push
pop
lock
push
daa
cmpsl
xchg
arpl
mov
call
in
outsl
mov
movsb
leave
ljmp
xor
push
add
pop
mov
ret
mov
jmp
push
mov
dec
pop
jecxz
mov
out
pushl
stc
dec
mov
adc
ret
fucomi
loope
xchg
nop
aas
decl
mov
pop
testb
inc
xchg
outsl
jae
mov
push
leave
incb
jmp
popf
incl
cmp
xor
add
pushf
fcoml
lock
addr16
leave
cmp
xchg
dec
insl
push
jae
es
push
cmp
in
jo
push
jmp
xchg
addr16
cmpb
ja
mov
jle
daa
popa
cmp
sub
xlat
dec
movsl
andb
sub
pop
inc
mov
mov
pop
aas
shl
in
dec
enter
dec
ficoms
pop
fsubl
leave
sbb
das
mov
sbb
filds
fwait
dec
out
jg
call
out
sub
mov
and
mov
sub
add
xor
jnp
cwtl
push
sbb
les
or
mov
in
push
xchg
and
sub
push
out
out
xchg
ret
xor
ror
jne
xor
and
popf
mov
movsl
adcl
push
movsl
jmp
les
imul
push
and
cld
push
rcll
mov
pusha
mov
rcrl
adc
lods
int3
in
lods
lea
jge
and
int
ljmp
loop
out
push
inc
xchg
cs
cmp
push
jp
lock
ja
cmpsl
jl
mov
sbb
jle
mov
imul
cwtl
addr16
xor
test
jo
or
xchg
inc
jbe
mov
mov
subb
xchg
pop
cmp
push
stos
mov
push
shll
dec
lds
jg
icebp
push
repnz
jp
pop
inc
mov
and
push
pop
sub
jle
adc
mov
push
and
ljmp
mov
mov
cmc
add
push
or
or
lods
sub
inc
cmc
push
mov
popf
mov
and
ljmp
and
and
cmp
outsl
fcoms
push
mov
pop
div
jns
ret
add
insb
ret
fdivrp
dec
fisubl
dec
enter
lea
repz
dec
inc
sbb
std
push
cmc
fprem
cwtl
test
inc
mov
push
repz
pop
mov
and
fists
int3
fwait
cmp
cmp
mov
xor
push
repz
shlb
scas
icebp
fwait
jge
or
mov
inc
jl
add
outsb
movsl
adc
movsb
dec
ret
out
out
out
out
and
adc
movsl
fcom
jbe
xor
daa
ss
mov
es
insl
mov
out
xchg
mov
fwait
inc
push
iret
adc
and
iret
mov
sbb
out
cmpsl
lret
enter
repz
out
in
js
or
popf
sbbb
fldl
cmp
cmp
shll
in
loope
jns
cli
and
repz
scas
jl
add
cld
aaa
mov
fnstsw
xor
cmp
push
push
push
cmp
sahf
adc
out
and
adc
or
stos
jp
mov
xchg
fadds
cli
divl
jle
stos
jmp
inc
dec
jb
push
lods
mov
in
call
pop
mov
cmp
or
jno
mov
rolb
call
adc
lods
les
mov
push
ret
mov
push
imul
push
rol
faddl
cltd
push
jg
push
adc
jbe
popf
in
out
mov
mov
sbb
cmpsb
jmp
dec
jp
sub
in
fnstenv
mov
adc
es
sbb
cmp
dec
xchg
fbld
xor
inc
adc
rol
fwait
das
add
xlat
pusha
pop
jmp
jge
jno
mov
add
add
sbb
leave
repz
cmp
mov
jg
mov
dec
bnd
and
in
test
pop
test
xchg
sahf
sti
push
push
dec
sbb
adc
sbb
xchg
add
les
ficompl
addr16
and
mov
sbb
stos
xor
in
jns
push
frndint
mov
lret
sbb
pusha
bnd
push
sbb
jns
jmp
inc
pop
idivb
xor
jnp
filds
dec
xchg
adc
inc
dec
or
and
adc
or
fs
mov
cmp
xchg
out
sbb
lret
popa
mov
jl,pt
fucom
inc
out
sarb
pop
outsl
and
jae
xlat
cltd
stos
frndint
or
out
stos
mov
pop
xchg
mov
mov
mov
popf
fdivl
mov
inc
and
lods
fldcw
frndint
into
cmpsl
xor
mov
ficompl
cmp
ficompl
js
mov
add
sub
lock
mov
dec
sarl
lds
or
cmp
adc
repnz
jne
test
cld
sarl
int3
aas
jecxz
push
repnz
out
movsl
shl
test
flds
mov
mov
ficompl
adc
inc
fiaddl
dec
pop
sbb
push
pop
pop
orb
jno
and
push
repnz
int3
mov
mov
sar
aaa
shlb
loopne
inc
push
jmp
jl
sahf
je
fdivl
loop
cli
subl
cmpl
push
cli
jge
jbe
push
sub
shll
into
lea
inc
pop
inc
xchg
nop
rolb
fistpl
add
push
mov
jns
ja
push
pusha
shlb
gs
xor
aas
push
xchg
arpl
xchg
lock
testl
ds
xor
loope
aad
addr16
xor
js
cmp
out
mov
cmp
sub
popf
cs
sti
std
inc
jmp
pop
or
or
push
cmp
add
sub
cld
mov
mov
scas
push
mov
into
inc
movb
jecxz
cmc
addr16
jb
pop
xchg
mov
dec
push
sbb
and
les
mov
sti
dec
mov
dec
hlt
adc
add
adc
adc
sub
fwait
loope
lcall
fdivs
sbb
and
leave
clc
inc
inc
js
jg
xor
mov
or
ja
cmpb
pop
hlt
mov
pop
std
push
sub
cmpsb
xchg
lock
daa
sti
addr16
dec
imul
add
pushf
fsubrs
or
nop
fisttps
mov
xchg
sub
add
dec
cld
shl
bound
xchg
loop
inc
pop
pop
sub
sbb
jno
fistpll
sub
lods
mov
cs
repz
stos
leave
nop
mov
outsl
cvttps2pi
pop
add
jne
jge
push
add
pop
jecxz
jbe
xor
jl
sbb
icebp
adc
add
outsb
lds
add
insl
push
mov
jno
lods
lods
dec
push
mov
inc
sub
pop
loop
adc
push
hlt
sub
out
xchg
insl
adc
hlt
jecxz
jmp
jno
adc
sbb
jecxz
cmp
icebp
ja
into
jle
pushf
dec
loope
inc
dec
push
aaa
fwait
and
ret
xchg
push
in
push
pop
ss
jbe
pop
inc
jmp
dec
xchg
add
mov
movsl
insb
or
mov
cmc
adc
adc
aaa
hlt
lret
enter
lea
in
add
push
ret
sbb
inc
pop
and
pop
adc
outsl
in
push
test
pusha
rcrb
stos
adc
ss
jbe
cltd
stos
sar
ja
subb
dec
call
jge
ljmp
imul
out
lds
dec
add
pop
mov
inc
jnp
jl
or
popa
popa
repnz
push
mov
sbb
in
push
push
gs
pop
cmp
daa
inc
call
test
pop
inc
pop
mov
arpl
pop
stos
lock
mov
pop
lret
cmp
adc
mov
or
pop
aad
pop
jecxz
stos
dec
popa
pop
mov
sub
jno
mov
dec
roll
aad
mov
and
xchg
popf
inc
adc
std
push
inc
mov
inc
aad
aas
mov
sbb
mov
sub
xorl
sti
mov
pop
xchg
sar
sbb
call
cld
jbe
add
or
dec
xor
sbb
sbb
shrl
out
sbb
cmc
xor
mov
int
or
inc
das
pop
add
test
cmp
pop
in
push
inc
sub
out
movd
mov
js
mov
es
out
mov
sub
int
mov
fidivs
pop
jb
pop
data16
fstpt
cmp
pop
pop
pop
jbe
in
rolb
jne
xlat
movsl
push
imul
aad
jp
mov
lock
in
mov
out
mov
lea
hlt
xchg
inc
jo
loopne
push
inc
sub
jp
sub
sbb
or
add
cmpsl
cltd
dec
je
fisubrl
shl
les
mov
leave
cltd
xchg
cmp
int3
outsb
loope
ja,pn
out
imul
popa
inc
cmpl
mov
xor
push
sarl
and
fstpl
cmp
and
jne
push
pop
call
or
sub
or
call
inc
out
dec
pusha
scas
aaa
cmp
stos
inc
es
test
data16
rol
aas
or
and
jo
push
in
jo
fnstsw
aam
cmp
mov
lcall
aas
rolb
push
sbb
mov
lock
xlat
mov
aad
and
pushf
mov
mov
lods
dec
in
xlat
mov
cmpsb
arpl
mov
add
mov
mov
hlt
jnp
divb
cwtl
inc
adc
mov
push
test
mov
jae
inc
jg
fbstp
jge
call
test
sti
adc
dec
fcomps
ret
jl
dec
pop
sbb
mov
and
into
dec
pop
je
push
decl
jmp
scas
test
repz
cwtl
lea
push
and
popa
add
aam
leave
pop
add
mov
cmpsb
int
push
push
add
ss
lret
movsl
add
jno
mov
add
sarb
ljmp
lahf
sahf
sbb
stos
pop
aam
ret
pop
incl
cmp
and
push
outsl
sbb
pop
out
xchg
mov
xchg
fistps
push
sti
push
add
pop
mov
imul
dec
popl
and
cmp
dec
inc
subb
and
out
repz
pop
add
imul
adc
call
push
aaa
add
gs
shl
inc
scas
pushf
xor
dec
push
mov
and
popf
pop
repz
loope
fsubp
inc
mov
and
xor
push
inc
dec
data16
pop
out
fstps
into
lret
pop
inc
outsl
popa
movsl
imul
into
and
shlb
aas
xorb
pop
add
cmp
push
call
sarb
mov
in
push
rol
sar
sar
inc
xor
lret
aaa
int
mov
cmc
mov
inc
stos
mov
sbb
add
out
ret
scas
sbb
out
stc
sbb
roll
push
ljmp
dec
hlt
jno
jns
pushf
dec
leave
stc
insl
jne
inc
sub
mov
adc
rorb
mov
cmpsl
fstpl
cmp
mov
sub
or
mov
addl
adc
mov
push
sar
jae
or
ret
mov
add
mull
adc
cwtl
inc
daa
mov
jg
fidivs
movsl
leave
int
push
lret
testl
xor
arpl
icebp
push
fistpll
push
in
xor
nopl
fldl
cmc
adc
packsswb
or
mov
int3
xchg
data16
pop
ja
mov
xor
adc
pop
cmc
xchg
movb
cli
test
aad
repz
xchg
fwait
xchg
jp
shrl
add
dec
add
inc
das
aad
adc
inc
sub
movsb
push
or
scas
lods
lcall
xchg
dec
xor
test
inc
mov
scas
cmp
xor
and
gs
imul
pop
fimuls
rorl
test
ss
movsl
adc
dec
mov
popa
or
movsl
sbb
mov
add
add
push
xor
sbb
sbbl
scas
lods
sub
or
ljmp
rcll
jg
movsl
rcrb
adc
pushf
jae
test
xor
cmpsl
inc
aam
mov
in
out
jno
jle
insb
pop
push
rcrb
pushf
xor
shl
inc
repz
in
addb
sbb
push
lock
push
sbbb
sarb
mov
xchg
mov
rclb
inc
mov
outsl
lahf
ljmp
cmpsb
fistl
mov
pushl
test
mov
bsr
cmp
and
loope
adc
leave
mov
jae
jnp
icebp
sub
je
daa
mov
xor
jmp
subb
je
int
scas
cwtl
ds
in
push
cmc
add
cli
jg
repz
and
out
stos
jle
fildll
or
add
arpl
js
push
sti
stos
mov
push
jno
dec
test
xor
cmp
stc
std
pop
cmp
ljmp
scas
shr
sbb
test
stos
jle
sbb
sahf
add
fs
int
or
or
in
add
out
dec
out
add
xor
rolb
add
mov
mov
adc
popa
imul
sub
cmp
adc
addr16
push
pop
and
stos
mov
push
outsb
xor
stos
xor
ds
in
dec
xchg
nop
mov
rcll
add
and
enter
test
fdivrs
cmp
or
pop
fdivp
scas
inc
addb
add
dec
dec
mov
jns
in
mov
push
scas
lret
out
sbb
out
out
out
call
sub
dec
fmul
std
and
not
aam
loopne
aas
les
mov
adc
fisubrl
or
or
jge
push
pop
pop
inc
dec
popl
rorl
testb
and
pop
imul
add
ror
xchg
dec
jl
ljmp
ljmp
testb
cmp
adc
xor
sub
pop
bound
test
mov
aaa
mov
jo
adc
call
fldl
jmp
test
mov
out
out
cmp
inc
in
mov
ds
ret
pop
mov
jo
xchg
insl
fbld
mov
mov
adc
subl
daa
imul
call
cmp
clc
lahf
mov
mov
jecxz
pop
xchg
js,pt
daa
or
scas
xchg
aas
pusha
mov
push
and
leave
push
add
lahf
mov
add
push
mov
mov
jns
push
cmp
jne
ljmp
jmp
es
stos
adc
test
mov
int
push
adc
jmp
jno
out
pop
insl
hlt
adc
sbb
adc
cwtl
leave
mov
sub
sub
in
mov
lret
rcl
sbb
outsl
notb
inc
out
or
cltd
pop
fwait
jb
sub
test
xchg
jb
xor
mov
outsb
cwtl
mov
sub
and
jp
cmc
jo
xchg
pop
jb
jnp
dec
inc
rcrl
mov
in
xor
sub
subl
pop
outsb
push
fucomi
inc
loopne
inc
inc
in
inc
imulb
fnstenv
popf
loope
sti
mov
fistl
iret
push
in
mov
jmp
xor
mov
sub
sti
mov
xchg
mov
stos
mov
daa
sbb
es
jae
data16
xchg
mov
fcmovbe
lock
push
in
push
outsl
sub
lret
xlat
bswap
push
sub
xor
fmuls
mov
popf
xchg
or
jo
add
enter
or
sbb
pop
pop
hlt
mov
imul
cmpsl
mov
fadd
hlt
lds
and
or
jo
movsl
mov
xchg
push
das
sbb
loopne
pusha
loopne
fs
outsl
int
dec
ror
dec
in
jp
inc
mov
dec
sti
xchg
lret
mov
mov
call
mov
sub
xor
add
jno
cmpsl
aaa
add
cmpsb
mov
pop
mov
jns
shrb
pop
dec
or
and
xchg
add
and
or
imul
mov
ds
inc
js
aad
lret
dec
lret
xchg
jge
push
pop
mov
inc
fldenv
inc
inc
incb
sub
inc
in
and
scas
xchg
xlat
shr
addr16
and
test
mov
inc
add
xor
fstl
lock
inc
pushl
arpl
test
lock
test
pop
ret
arpl
jo
mov
dec
jae
or
lea
jae
repz
mov
add
xor
enter
loopne
push
adc
inc
push
add
and
or
cmpsb
mov
mov
lret
ja
cmp
rsqrtps
fnstsw
cmpb
cmp
subb
loop
pop
sarb
popf
xor
xor
addl
jbe
mov
mov
stc
bound
mov
shll
lds
test
mov
fdivrl
xchg
rcll
sarb
xor
insb
ret
jge
xchg
xchg
dec
push
loopne
xchg
rol
push
js
inc
stc
int3
push
adc
dec
in
inc
mov
add
push
pop
out
sub
stos
mov
xchg
xor
pop
mov
pushf
scas
cmp
jne
jl
scas
pop
xchg
in
push
sub
arpl
xor
xlat
fisubl
xorl
dec
repz
pop
sub
outsb
sbb
lret
aas
iret
push
adc
mov
cwtl
push
pop
add
ss
push
jecxz
test
scas
das
inc
ret
sti
ds
lret
jnp
add
add
pop
pop
int
es
xor
idivb
fcomip
ljmp
jecxz
stos
dec
mov
movsb
or
test
dec
dec
push
daa
stos
popa
jbe
mov
pop
cltd
dec
inc
inc
mov
fisubrl
jge
dec
loop
dec
lods
mov
xor
subl
fwait
xor
inc
aam
pop
fidivs
lret
inc
xchg
jb
xchg
push
fwait
mov
jno
inc
bound
repz
mov
jae
faddl
sub
mov
pop
xchg
fidivrs
mov
addb
int3
lcall
sbb
push
inc
mov
sub
pop
mov
lret
testb
mov
adc
mov
lods
xchg
pushf
and
pop
pop
data16
pushl
je
xchg
cld
mov
adc
adc
inc
inc
stos
xor
and
push
das
in
fwait
stos
test
dec
insb
and
out
dec
jl
sub
xchg
inc
arpl
jbe
inc
js
jp
je
aam
push
pusha
mov
aas
inc
add
test
xchg
inc
xlat
insb
sbb
ret
in
pxor
jmp
adc
arpl
dec
fdivl
or
cltd
sti
xchg
xor
notl
xor
das
les
pop
cmp
mov
pop
rcl
out
adc
or
in
xchg
dec
test
int
cwtl
sti
mov
subb
pop
in
leave
arpl
and
xor
cltd
xchg
clc
dec
fsub
pop
pop
dec
lods
out
leave
and
pop
movsl
mov
pop
mov
movsb
sbb
and
test
mov
jp
mov
mov
sub
add
in
inc
orl
stc
xchg
jmp
mov
add
push
leave
hlt
push
sarl
lcall
jl
aad
mov
jl
push
pop
and
lea
movsl
inc
push
pusha
pop
inc
dec
mov
sub
rorb
rol
test
push
jns
loop
filds
mov
incb
and
repz
testb
inc
lret
inc
test
mov
rolb
sub
sub
cmp
cmp
lods
and
icebp
nop
lret
xchg
add
dec
arpl
int3
mov
orb
xor
xchg
enter
fmul
push
push
pop
fsubrs
ljmp
cmc
cmp
mov
je
xor
pop
xchg
sbb
cmp
dec
out
xrelease
movsb
mov
and
fisubrs
mov
and
int
push
scas
arpl
cwtl
push
test
mov
sub
inc
or
pop
cmpb
sub
sub
in
cmp
int
ljmp
call
test
aam
mov
and
mov
mov
jp
fdivs
mov
cmpsb
outsl
dec
and
loopne
in
aas
add
mov
sbb
sbb
add
ljmp
lret
push
imul
sub
and
lods
push
mov
das
xchg
xorb
push
in
jge
test
or
addr16
pop
dec
dec
cmpsl
push
mov
pcmpeqd
into
cmpsl
mov
adc
push
inc
inc
cmc
jl
pop
sub
mov
shl
fisubrs
orb
addr16
arpl
add
sub
jl
sahf
jno
test
mov
mov
fcompl
or
mov
sub
sub
addl
jne
test
inc
outsb
pushf
nop
fs
pop
movl
stos
das
icebp
cmpsb
ljmp
dec
sbb
pushl
xor
xchg
push
mov
fsts
jecxz
jmp
dec
call
stc
test
aam
stc
fists
pop
fisttpl
shl
adc
scas
dec
sub
into
sub
lods
shll
jl,pn
inc
cmp
ljmp
sub
inc
cmp
adc
fldl
jmp
pop
xor
xchg
jne
scas
push
pop
out
xchg
push
gs
pop
add
in
test
cwtl
push
jns
xchg
testl
jmp
mov
push
jno
lret
movsb
cmp
adc
call
mov
ss
mov
test
pop
cmp
sbb
fwait
ret
add
pop
shlb
inc
ss
out
sbb
shlb
lahf
mov
jle
push
stos
fnstenv
mov
sbbl
das
dec
lahf
sarl
sub
and
adc
iret
mov
pop
fdivrl
xchg
hlt
popf
xor
xchg
jge
cmp
aad
or
adc
xchg
daa
divb
imul
dec
dec
sub
xchg
jp
and
jae
pop
sub
xchg
xchg
or
je
mov
push
mov
bound
xchg
in
xor
inc
pop
xor
gs
lret
xor
xchg
cmp
cmp
pop
icebp
lret
push
jnp
mov
ljmp
sbb
mov
lea
cs
lock
mov
or
sbb
andl
shrb
cmpsb
push
jb
xchg
cmc
scas
lods
jae
pop
mov
out
pushf
jecxz
popa
pop
jb
pusha
inc
cmp
mov
lret
test
sti
sbb
mov
lret
out
ret
mov
jb
loopne
push
jmp
fiadds
mov
xor
pop
es
pop
pop
cmp
insl
fcoms
mov
jp
adcl
and
push
dec
call
push
test
add
cmp
lahf
mov
movsb
cmpsl
sub
je,pt
sti
call
ror
pop
js
int3
push
sub
xchg
xor
jnp
sti
inc
and
sbb
sbbl
and
xor
adc
pop
adc
shrl
push
les
adc
in
cmpsl
push
aaa
in
mov
mov
das
mov
stc
xor
cs
mov
dec
outsb
add
mov
negb
les
das
push
repz
push
and
out
sub
mov
icebp
mov
addr16
mov
lret
movsb
lods
pop
hlt
mov
pop
ljmp
lods
cmpsl
shrl
subl
das
rcrb
insb
cltd
ret
cmp
push
scas
popf
cmp
enter
xchg
subb
mov
scas
cmpsb
nop
in
gs
pop
je
pushf
mov
ljmp
int3
imul
xchg
inc
cmp
inc
stos
fstps
ja
fcomi
pop
mov
negl
adc
fdivrl
sbb
or
les
or
and
lods
xchg
call
out
daa
dec
ret
cli
push
dec
ljmp
nop
imul
xchg
hlt
cmp
add
dec
ljmp
insl
or
cmp
ret
hlt
mov
leave
inc
rclb
lret
rcl
mov
push
push
syscall
mov
jp
lea
lahf
sub
dec
jl
fnstsw
pop
ds
leave
call
repz
adc
mov
xchg
imul
fdivl
mov
sub
adc
sub
rcrl
lds
rcrb
mov
enter
adc
je
insb
push
jnp
test
jmp
push
sbb
cltd
mov
stos
or
mov
adc
repnz
pop
lds
aas
and
jb
inc
in
inc
pushf
addr16
call
sbb
mov
xor
jecxz
test
das
negb
pop
lods
les
ds
pop
fsubl
add
dec
mov
jg,pn
lds
mov
sbb
inc
add
xchg
scas
sbb
cs
nop
out
lahf
cmp
orl
subb
dec
nop
push
mov
mov
fwait
push
mov
jge
push
popa
jae
mov
aam
xchg
rorb
mov
dec
fwait
jmp
pop
pop
int3
xchg
repnz
int
lods
sbb
fildll
outsb
outsb
xchg
jl
insl
pop
pop
mov
popf
lahf
xchg
pop
ljmp
inc
jnp
and
sub
inc
sub
pop
push
loopne
cltd
sub
jno
imul
jns
dec
out
add
ljmp
mov
mov
adc
nop
lret
scas
inc
or
cli
lock
lea
test
js
in
fidivrs
pop
push
loop
push
jle
push
ret
mov
mov
dec
nop
cmp
mov
pop
cmpsl
leave
orl
pop
lock
adc
mov
adc
pushf
push
jg
push
xor
aam
xchg
movb
xchg
inc
jnp
outsb
ret
xchg
mov
mov
jle
cmpl
push
mov
or
test
test
mov
jp
stc
jl
mov
sti
out
and
mov
add
push
repz
aas
add
popa
or
push
or
fnstcw
negb
push
enter
rcll
lahf
jle
call
insl
out
mov
adc
jnp
adc
mov
js
push
test
and
hlt
inc
mov
out
aaa
add
test
xor
imul
mov
inc
or
cmp
pop
pop
mov
mov
jbe
and
je
lret
mov
adc
or
test
sbb
and
inc
inc
xor
call
sub
movsl
ret
mov
fsub
mov
or
pop
dec
aam
sbb
cld
cld
popf
dec
addr16
push
int
andl
jo
movsb
add
stos
xchg
insl
int3
xlat
ds
xor
cli
mov
adc
rcr
push
add
jbe
ficomps
js
sbb
jp
dec
nop
daa
adc
cmp
sahf
sbb
dec
pushf
dec
mov
and
cwtl
out
movsb
xor
inc
sti
dec
shlb
jae
rcrb
ret
jae
insl
push
filds
inc
or
pop
stos
cmp
mov
shll
imul
cmp
dec
add
inc
pop
mov
and
xor
cmc
sub
xor
rol
sahf
scas
xchg
pop
mov
mov
mov
pushf
ds
fs
out
icebp
dec
dec
leave
pop
in
xchg
out
inc
fstps
data16
mov
inc
mov
shlb
sbb
stos
out
or
and
jmp
js
cli
aaa
and
inc
pop
fstp
inc
adc
fwait
mov
int
and
sub
inc
mov
xorb
test
insl
cmc
shr
data16
pop
cmp
pop
adc
das
and
xor
imul
push
notl
xchg
pushf
daa
xchg
or
xchg
out
mov
gs
mov
pop
cwtl
cmp
xchg
mov
jae
stos
pop
xchg
pop
dec
jae
into
add
pushfw
pop
push
ret
inc
enter
dec
sub
xor
push
std
fs
ss
arpl
fisubl
adc
aam
outsl
sbb
stos
fistpll
xchg
rcrb
xor
js
push
les
dec
xlat
mov
push
inc
arpl
cmp
aad
add
sbb
stos
rclb
arpl
je
aam
popf
js
xor
sbb
xchg
push
jns
jno
js
inc
arpl
inc
mov
popf
or
scas
divl
pop
sub
out
dec
adc
sbb
push
pushl
gs
mov
inc
mov
das
ja
pop
aas
out
addr16
imul
mov
jns
mov
push
aas
xchg
ja
cmp
jae
ss
decb
or
test
pop
int
pop
push
mov
addr16
adc
leave
sbbb
xor
fdivrp
movntq
out
push
sub
jle
push
or
out
push
dec
cs
mov
sub
jo
insb
dec
dec
fimuls
inc
sub
push
insb
push
fs
jecxz
xchg
int3
jle
fldl
xor
pushw
or
push
stos
push
xchg
rcrb
sub
fs
repnz
mov
xor
pop
adc
lahf
push
lahf
dec
lahf
aas
push
pop
push
fimull
and
test
sti
outsb
dec
sbb
jp
push
les
rolb
pusha
adc
add
insb
cltd
call
sub
or
in
sbb
sbb
fbstp
jbe
pop
xchg
call
fcomi
jl
xchg
mov
icebp
dec
in
inc
js
or
addr16
mov
sub
lahf
push
or
ljmp
jne
ljmp
cmpl
rorb
sub
cmpsb
fwait
add
addr16
daa
adc
pop
sti
mov
fs
ret
movsb
dec
pop
mov
dec
cmc
push
sub
ret
cwtl
jmp
mov
lea
mov
pop
data16
inc
out
imul
xor
cmp
ljmp
and
cmp
scas
out
cli
repz
lret
jle
xchg
pop
mov
mov
sbb
push
mov
shrl
fsubrs
add
dec
mov
idivb
stos
addr16
imul
out
adc
mov
cmp
js
xor
sub
je
push
pop
push
xchg
cmp
push
insb
mov
jae
mov
rcr
iret
mov
push
icebp
fildll
mov
xlat
cmp
xchg
loope
test
lcall
pop
pop
pop
lds
and
outsb
shll
scas
jne
data16
jle
sub
push
add
adc
push
aaa
or
and
inc
out
les
and
sbbl
jecxz
int3
jp
arpl
sbb
sub
leave
daa
icebp
rorb
popf
push
mov
leave
int
jmp
fidivrl
insb
inc
scas
jne
adc
jp
jl
aas
push
cltd
mov
imul
push
mov
pop
mov
shrb
fdivr
imul
xlat
cmp
in
in
lds
loope
dec
add
std
adc
hlt
dec
mov
inc
jle
leave
jnp
or
jge
ret
aaa
nop
idivl
adc
lds
mov
filds
das
and
sbb
cmc
push
int3
dec
lods
lods
push
bound
decl
sub
ds
into
jge
inc
fsubs
and
lock
sub
lahf
jbe
das
mov
sbb
jle
and
out
shrb
pushf
inc
xor
lds
cmp
mov
lahf
in
mov
lret
push
jmp
pusha
rcll
fstps
in
xor
insb
outsb
repnz
xchg
lret
data16
mov
jl
repz
mov
pop
jns
jmp
mov
xor
adc
insb
or
sbb
sub
jb
pop
cli
cmp
xchg
inc
test
or
call
inc
pop
jo
xchg
loopne
cs
and
shrb
cmp
fmull
xor
aam
mov
push
and
mov
xchg
dec
ret
mov
pop
dec
push
cli
xchg
inc
gs
pop
out
add
cmc
out
call
pop
mov
rorb
push
pop
mov
sarb
mov
mov
add
xchg
outsb
or
bound
clc
aaa
movsl
push
or
or
dec
pop
repz
add
daa
cmpsl
movsb
mov
shll
or
stos
pop
sub
imul
sbb
jne
cmp
sub
scas
ss
mov
rclb
scas
mov
inc
jp
pushf
lcall
lock
mov
adc
xchg
cwtl
mov
add
xchg
test
fucom
insb
insl
dec
enter
arpl
fisubrs
push
sub
enter
jbe
loop
bound
into
add
pushf
call
add
mov
popa
bnd
inc
fadds
lods
jns
pop
fdivrl
xchg
push
jmp
rorl
cld
sarb
subb
fadd
xor
dec
bound
cmc
test
test
cwtl
lods
andb
std
out
hlt
push
xor
ss
dec
pop
mov
cwtl
nop
cld
pop
repz
cmp
in
inc
nop
jle
pop
insl
loope
cld
jge
cmp
int3
xor
xorl
stc
sti
inc
repnz
cmp
dec
mov
adcb
xchg
jae
icebp
js
dec
mov
out
jnp
mov
mov
imul
in
fimuls
inc
inc
sub
mov
push
jae
je
mov
jp
bound
push
sbb
add
dec
arpl
repz
es
ror
fcomp
xlat
add
add
hlt
sbb
adc
test
aad
pop
ret
lds
push
iret
lahf
xor
push
imul
sti
sub
cmpsl
es
mov
xor
xor
pop
jns
ret
push
adc
test
cmp
mov
pop
mov
rcrl
je
sbb
xchg
adc
hlt
xor
lock
clc
cmp
jb
xlat
pop
jge
js
push
push
and
jno,pn
test
roll
xchg
jl
inc
loopne
jecxz
add
mov
inc
and
push
je
stc
imul
adc
dec
test
jb
rcll
fucomip
clc
je
mov
jne
scas
scas
cmp
push
int3
sbb
xchg
imul
adc
push
insb
sub
jno
sbb
mov
pop
cltd
loope
adc
fimull
xorb
sub
add
push
push
mov
or
in
mov
cmp
adc
and
imul
ljmp
iret
dec
rorl
xor
stc
cmpsl
and
inc
push
subb
stos
push
push
dec
mov
addr16
jp
or
push
jo
adc
stos
xchg
cmpb
int
cmp
cltd
sbb
adc
shlb
into
outsb
cmc
mov
out
in
cmpsb
dec
mov
adc
inc
inc
sti
adc
loope
mov
out
xchg
lahf
fwait
ror
test
xchg
jb
scas
repz
mov
sub
push
sub
mov
add
inc
dec
mov
mov
je
test
xor
outsb
shl
scas
ss
shll
mov
rcll
cld
pop
inc
cmpsl
cld
mov
jp
incb
imul
xchg
ja
sbb
cmp
sti
lea
pop
push
or
dec
and
fstps
pop
cmc
out
xor
imul
push
addl
mov
out
sbb
in
aas
or
adc
daa
xchg
lea
jns
out
leave
push
jg
repz
popa
jae
push
fisubrs
cmpsl
push
jmp
mov
into
push
mov
jb
or
dec
test
and
mov
pop
mov
jge
stos
pop
daa
mov
imul
push
in
pop
call
pop
arpl
in
inc
or
push
loop
mov
push
shr
or
gs
xor
mov
lret
lret
mov
add
jae
sbb
inc
outsl
lds
cmp
js
pop
ret
and
and
adcb
add
and
cli
arpl
push
jmp
cs
ja
dec
ja
aaa
scas
mov
shll
push
add
add
push
clc
mov
divb
scas
or
out
or
mov
mov
cwtl
pop
rcrb
push
cmpsl
push
adc
inc
mov
div
movsl
mov
push
xor
movsb
outsb
fistps
mov
pop
fbld
sbb
dec
jae
sahf
push
push
movsl
adc
test
andb
and
sub
or
mov
cmp
mov
pushf
in
enter
popf
jne
scas
push
add
bound
loopne
je
mov
es
stos
inc
movsl
xlat
fiadds
aad
or
jp
movsb
fcmove
daa
ret
mov
ret
cmp
xchg
mov
add
cmp
jp
sub
rcll
in
push
ror
adc
ss
nop
cmpsb
fs
xchg
dec
mov
ret
mov
cmc
cmp
fwait
dec
sbb
ret
mov
int
jne
test
cmp
flds
ret
cmp
jle
jne
aam
pushf
jo
mov
scas
add
fs
push
jg
mov
sbb
mov
or
xchg
fisttpl
mov
lret
sahf
enter
notb
sub
data16
mov
xor
inc
mov
jmp
pop
xor
out
jle
lods
imul
enter
mov
cmp
mov
jg
add
les
jo
sbb
pop
xor
xchg
into
into
je
pop
leave
movb
shll
stos
jbe
repnz
cmpsl
inc
test
shlb
push
nop
inc
popf
mov
inc
adc
sti
leave
int3
dec
push
stc
push
push
xor
movl
stos
fdiv
cli
push
dec
jp
inc
pop
inc
mov
push
xchg
jp
mov
jne
inc
push
loope
xor
or
jb
jg
cmp
mov
and
mov
ljmp
jg
xchg
out
mov
inc
iret
or
sub
jo
out
dec
scas
push
mov
xor
xor
cmpsb
lods
lods
bound
xor
add
fcmovnb
adc
stos
mov
push
sahf
mov
ljmp
sub
mov
icebp
sarl
lds
arpl
mov
sbb
cmp
sbb
mov
sub
je
cmp
push
sub
mov
ja
mov
loope
roll
push
ret
sbbb
jne
dec
outsl
cmc
enter
les
aad
push
imul
mov
jae
call
cmc
sbb
cld
xor
inc
mov
js
fnstenv
inc
cli
negl
and
xchg
mov
adc
or
xchg
scas
jnp
adc
cld
stos
leave
add
jmp
xor
mov
inc
aad
outsl
fwait
push
ret
inc
xor
aam
loope
scas
imul
push
push
sub
fs
ret
sbb
mov
pop
jns
leave
lds
pop
mov
pop
mov
inc
gs
sub
cmp
sti
xlat
bound
dec
popf
dec
subb
or
jp
dec
cmpsb
std
adcb
cmp
lods
aad
stos
das
ja
mov
maskmovq
negl
mov
xlat
scas
int
call
stc
jno
arpl
movsl
cwtl
or
sub
into
pop
cmp
cmp
loope
or
leave
or
bound
test
andl
scas
or
fistpll
add
jno
push
les
pop
test
sub
sti
jnp
hlt
mov
push
call
shl
or
js
mov
mov
mov
mov
sti
cmc
outsl
fwait
xlat
adc
inc
bound
sbb
imul
je
fcompl
push
sarb
mov
test
jns
inc
push
out
pop
test
bound
cmpsl
jbe
cld
pop
sbb
dec
loopne
xchg
mov
lret
sub
jle
int
sub
pop
std
sub
dec
sahf
stc
lret
sbb
xchg
and
test
outsb
into
cmc
dec
and
leave
subb
or
ss
fucomi
adc
cmpsl
shrl
sti
and
outsb
dec
jne
fstps
repz
xor
mov
xor
sub
stc
test
jnp
push
das
ficoms
push
imul
mov
adc
xchg
lcall
cmpw
jo
and
pop
xor
popf
and
loop
iret
mov
cld
add
xor
das
and
pop
stc
cld
add
arpl
sub
jb
mov
mov
stc
push
call
add
andl
inc
scas
xchg
out
ds
lret
call
fidivrs
inc
lea
push
sub
dec
push
int3
rolb
mov
gs
imul
sbb
lods
sub
inc
dec
insb
call
mov
outsb
pop
inc
and
xor
stos
cmp
in
push
add
jge
jge
test
out
mov
lret
ja
int
imulb
mov
xor
leave
lock
cmpsb
out
pop
add
mov
stos
mov
fcmovu
lcall
ljmp
mov
stos
xlat
lds
in
dec
rolb
adc
stos
or
ret
jmp
mov
push
sbb
sbb
mov
hlt
mov
ret
push
push
and
sub
fidivrs
sub
mov
add
xchg
hlt
xor
ficompl
clc
xor
arpl
in
scas
outsl
or
loopne
or
sub
xchg
ss
je
mov
lahf
imul
mov
leave
mov
mov
dec
push
loopne
mov
mov
sub
mov
adc
inc
and
hlt
jno
jnp
and
ss
jecxz
pushf
repz
and
test
mov
das
cmc
jns
movsb
push
dec
and
int3
sarl
pop
cmp
mov
mov
jnp
pop
decb
mov
mov
mov
fwait
dec
jl
ror
inc
sti
push
call
stos
sar
sub
sbb
ret
add
inc
cld
cmc
andps
fidivrs
xchg
fbstp
mov
leave
sub
inc
in
sub
lret
inc
inc
lahf
jbe
sub
int
xchg
xchg
movsl
int
stos
mov
dec
ljmp
in
out
lret
leave
inc
outsl
inc
pop
xchg
sub
cmp
loope
dec
pop
outsl
or
sub
jecxz
xor
cmpsl
gs
mov
dec
dec
movsb
xlat
mov
cmp
leave
jnp
mov
inc
mov
pop
inc
and
xchg
scas
mov
stc
pop
loopne
ljmp
fwait
add
loop
imul
push
inc
jmp
push
cmpsl
xchg
cli
ds
repnz
dec
pusha
cmp
add
out
pop
lods
dec
cmpsl
sahf
adc
inc
sar
cwtl
pop
cmpl
push
aam
jb
dec
mov
ficoml
shll
mov
fbld
out
mov
rorl
mov
stos
cmp
pop
mov
xor
pop
sti
clc
lret
pushf
mov
adc
inc
outsl
xchg
xor
xchg
push
imul
cwtl
lods
cmp
and
push
pop
mov
ds
sbb
cltd
ljmp
stos
pop
insb
lahf
mov
add
push
or
mov
scas
clc
push
repz
pop
ljmp
js
pop
popa
int3
xchg
adc
mov
enter
inc
mov
xor
and
push
iret
jl
mov
jmp
push
jecxz
push
xor
xlat
mov
hlt
cmpb
pop
cli
loop
pop
mov
out
mov
in
fcmovne
inc
aas
ror
or
pusha
push
xor
mov
lcall
dec
out
inc
out
cmpsl
call
mov
pop
push
insb
lret
mov
push
std
pmullw
jge
imul
repz
jg
jb
xchg
mov
jo
pusha
cltd
jp
clc
xor
lods
xchg
or
inc
test
dec
stos
pop
or
xor
sbb
dec
and
push
stos
add
add
loope
iret
adc
mov
cmp
mov
loop
rcll
movsl
lods
jbe
push
sub
test
and
xchg
sti
jbe
jno
inc
mov
xor
lock
mov
fsubl
mov
lret
sub
mov
cmp
sahf
jecxz
mov
pop
insb
mov
aas
loopne
into
inc
mov
xor
inc
mov
jb
xchg
std
icebp
sar
lds
cmp
sti
fwait
int
jg
stos
push
xchg
cs
mov
cs
outsl
xor
mov
mov
push
decl
cmp
sahf
shlb
push
subl
ret
arpl
adc
stos
fisttpl
leave
jb
mov
pop
pusha
push
loope
scas
pop
loop
lds
add
iret
jne
jle
fstpt
cld
dec
scas
test
jg
adc
mov
or
test
loope
out
pop
aaa
into
cwtl
or
leave
jns
dec
fistpl
les
lret
dec
into
lods
mov
or
int
xchg
test
mov
jo
dec
and
jae
xor
mov
jge
ror
or
out
and
adc
dec
pop
jno
add
inc
mov
loope
dec
mov
or
ret
pop
push
leave
pop
scas
ljmp
cmpsl
cs
add
and
dec
mov
or
and
pop
mov
pop
jmp
rcl
xchg
sarl
jecxz
aad
cmp
inc
jns
addr16
ss
sbb
subl
add
arpl
mov
or
outsb
ret
out
jp
outsb
xor
ds
xchg
in
push
mov
and
leave
push
mov
push
addb
out
loope
push
mov
test
out
in
adc
adc
out
hlt
fbstp
adcl
into
jmp
cltd
pop
push
cmpb
push
ret
in
mov
pop
inc
test
adc
mov
add
shr
xchg
shrl
pop
adc
xchg
enter
incl
int
push
movsb
mov
sub
jmp
mov
mov
icebp
pop
movsl
sarl
mov
jo
mov
pop
mov
jns
rcrl
cmp
dec
in
fistl
cwtl
push
sbb
pop
insb
outsb
test
or
jle
cmp
mov
mov
aam
rcrb
icebp
jp
and
mov
nop
out
jne
call
les
je
adc
loopne
or
cmp
gs
or
xor
dec
add
cs
pop
or
dec
cs
sub
mov
xchg
xchg
mull
lahf
lock
les
movsl
jmp
cltd
adc
insb
xor
adc
cmp
data16
mov
out
push
sbb
rcll
ljmp
xor
jmp
jl
jge
mov
ficoml
ds
orl
loope
cld
nop
imul
dec
stc
jne
aam
arpl
loope
in
cmp
lahf
mov
or
mov
loope
push
xchg
ja
dec
cmpl
pop
movsl
mov
cmp
das
incl
cmovl
add
loope
nop
mov
in
enter
inc
adc
pop
dec
bound
adc
cmc
jbe
add
cltd
mov
movsb
popa
and
xorl
fidivl
lock
loopne
jb
or
lcall
mov
jp
cmp
outsl
pop
arpl
fbld
out
push
xchg
mov
es
insl
pop
jge
lahf
stos
push
test
inc
adc
ja
cltd
mov
mov
js
push
shrb
mov
shrb
mov
lret
pop
frstor
outsl
mov
push
or
mov
jns
mov
movsl
sub
lea
mov
pop
dec
add
lock
and
mov
mov
pop
jl
sahf
xchg
pop
push
inc
xor
int
adc
ljmp
out
rcrb
fisubrs
mov
ja
xor
or
jmp
add
lods
fdivrl
fstpt
mov
sbb
jae
pop
push
sbb
sub
mov
mov
call
cli
and
inc
arpl
pop
test
jne
add
pusha
xchg
sub
add
jecxz
add
pop
jae
xchg
and
xchg
mov
mov
and
mov
outsl
or
test
outsb
cmp
testb
repnz
pop
cmp
xor
fmull
pop
loopne
ja
push
subb
stos
mov
push
mov
jbe
cmc
push
lods
inc
popa
ret
push
jecxz
fnstsw
cs
sbb
mov
repz
clc
sub
pop
add
lods
mov
and
adc
adc
sbbb
adc
movsb
inc
mov
into
mov
shll
adc
sbb
jnp
adc
mov
repz
test
hlt
pop
mov
std
or
ret
gs
xchg
dec
mov
test
sbb
add
lds
testl
jmp
mov
and
or
adc
dec
js
xchg
jecxz
mov
fs
mov
sbb
mov
daa
movsb
jmp
adc
data16
dec
and
js
mov
jecxz
in
movsb
and
cld
push
int
into
ret
enter
cltd
jge
dec
fwait
ss
push
repnz
lods
pop
jno
cmp
mov
xchg
sbb
mov
test
dec
insl
jg
inc
mov
inc
and
cmp
jge
dec
jmp
mov
arpl
movd
push
adc
ss
imul
fisttps
or
lods
sbb
inc
add
dec
je
pop
inc
sub
nop
mul
mov
jo
inc
xor
popf
repz
sbb
push
jl
push
fwait
and
jno
and
fisubrl
in
shrb
lock
mov
pop
cmc
fs
dec
pop
pop
ds
les
xchg
fisubs
jmp
pop
lahf
stos
jne
out
and
and
mov
ficomps
pusha
pop
sbb
adc
jmp
stos
or
push
sbb
enter
xchg
or
popa
es
aam
call
push
rcrl
test
pop
lret
insb
jnp
pop
xor
int
nop
fsubl
popf
xchg
and
sub
cs
je
inc
sahf
mov
dec
in
out
dec
lds
push
call
jne
sbb
fisttps
popa
insb
adc
call
mov
sub
xor
mov
and
repz
mov
jge,pn
popf
push
xchg
or
daa
or
insl
ja
jns
inc
or
sbbl
pushf
xor
das
paddq
push
sbb
push
fnsave
mov
xor
sbb
insl
add
mov
fildll
pop
movsb
push
nop
fdiv
sub
pushf
pop
push
sarb
test
popf
adc
cs
and
xor
cmc
imul
mov
out
dec
xchg
add
cmp
cli
jo
popf
dec
adc
xchg
shrb
mov
mov
add
cmp
inc
test
pop
shrb
shlb
fstps
testb
mov
pushf
testl
insw
mov
add
cld
sbb
leave
cwtl
outsl
xchg
jns
pop
and
pop
enter
cmp
mov
mov
nopl
stos
popa
sub
mov
movsb
shll
jbe
out
stos
lahf
lock
mov
cs
test
test
fdivr
adc
cmp
add
dec
test
outsb
xchg
push
jns
sub
sbb
int
mov
ret
mov
cmp
adc
and
push
pop
sub
adc
mov
mov
xor
cld
aas
fldcw
and
mov
push
test
arpl
push
aam
pop
stc
jle
cmp
pop
cmp
mov
clc
mov
jno
xor
test
mov
or
sbb
xchg
pop
repz
mov
outsb
jmp
xchg
fstps
nop
cwtl
ja
cmp
mov
mov
bound
add
aad
rcr
mov
andb
out
inc
fstpl
aam
xor
in
xor
jecxz
scas
aaa
hlt
std
pop
aam
loope
pop
fisubrl
inc
mov
jo
divl
aas
inc
jl
stc
ficoml
xlat
or
add
xchg
nop
dec
mov
test
mov
addr16
lcall
lock
mov
pop
mov
add
mov
cmpsl
aaa
jmp
pop
pushf
fbld
mov
shlb
loop
sub
cmp
ja
mov
out
popa
insl
xchg
sbb
mov
popf
sti
xchg
int
ljmp
rcll
xor
adc
dec
out
loopne
roll
adc
pusha
scas
repnz
xchg
test
bound
sbb
push
mov
jbe
dec
in
fisubrl
inc
xchg
sub
inc
lods
jo
in
sarl
shrb
xchg
es
push
sbb
or
jmp
loop
rcrl
jo
out
sbb
or
inc
mov
xor
add
push
insl
dec
iret
aas
pop
xchg
cmp
jae
or
lret
mov
xor
out
jmp
and
mov
repnz
xchg
cmpsl
and
les
sbb
cld
jg
xchg
push
mov
xor
xchg
rolb
push
cmc
or
jg
test
in
cmp
dec
rolb
pop
mov
cmpsl
adc
arpl
popa
add
ret
dec
xchg
popf
or
pop
dec
and
out
sub
mov
xchg
xor
inc
outsb
sub
sti
mov
jle
mov
push
pop
pop
xchg
imulb
cmp
cmpsl
or
data16
movsl
jno
rcl
es
ret
mov
fsubl
loope
sbb
in
ja
push
xchg
and
lock
xor
inc
cmp
pop
loopne
mov
mov
mov
inc
add
scas
cmp
or
xchg
hlt
xchg
fwait
adc
mov
sub
jae
cmpsl
aaa
out
test
lret
shl
dec
xchg
mov
test
rcr
and
bound
lods
push
mov
lret
cmp
add
sub
or
fldl
mov
push
iret
ror
pop
mov
je,pn
or
iret
out
popa
fisttpll
jmp
mov
dec
sbb
hlt
xchg
loop
pushl
dec
or
mov
fidivrl
pop
imul
xor
cmpsl
push
arpl
cld
inc
pushf
ficoml
push
pop
fstpl
xchg
dec
jmp
pop
or
and
jns
in
in
je
jo
inc
sub
jnp
inc
add
ja
not
cmp
lods
jo
xor
push
ja
add
setp
rorl
push
pop
push
loop
and
js
and
cs
and
inc
imul
pop
xchg
cs
add
xorb
cmp
negl
sbb
sbb
jg
xchg
push
in
lcall
out
test
sub
cmp
xor
mov
js
rcrb
daa
pop
out
jmp
or
ja
cmp
aas
cli
mov
pop
lret
cwtl
fsubr
shl
out
xchg
push
sub
lahf
cmp
out
sbb
pop
mov
rol
adc
lret
jne
pop
sub
sub
sub
imul
push
push
ljmp
add
arpl
lcall
mov
das
adc
rcrb
jns
jns
mov
inc
aaa
or
jns
call
sbb
not
fs
sti
xor
xchg
mov
mov
mov
aad
xor
pop
sub
xor
and
or
xchg
mov
in
in
cld
xor
dec
or
repz
mov
call
loop
inc
jbe
in
scas
xchg
mov
or
jl
movsl
inc
outsb
fistl
add
data16
scas
stc
push
aam
test
outsb
rcrl
inc
sbb
cmp
xchg
idiv
imul
mov
mull
out
and
mov
jns
fidivrs
loopne
rcll
jno
inc
test
jne
pop
dec
inc
pusha
jo
les
fdivrp
or
xchg
enter
mov
cmp
mov
cmp
xchg
js
jb
fcomps
fidivl
iret
dec
scas
shll
sti
xchg
outsl
sar
aaa
js
rcrl
or
call
xchg
lea
jbe
jmp
popa
out
cmp
xorl
push
or
outsb
icebp
adc
sbb
and
fisubrs
pop
in
sbb
push
fsubs
mov
fbld
sbb
xlat
stos
pop
push
idivb
adc
adc
subl
ret
iret
mov
lret
pusha
mov
rcl
in
lret
test
sbb
cmp
jmp
jne
sbb
add
jnp
ljmp
xor
enter
and
add
dec
js
mov
mov
nop
sub
jecxz
movsb
or
repnz
movsl
and
cmc
pop
xor
aam
dec
or
out
adc
pop
call
inc
dec
xchg
mov
movsl
adc
jmp
inc
imul
aas
out
ljmp
sbb
push
xchg
jns
xor
fcoml
push
dec
loop
xchg
ficompl
mov
xor
adc
adc
aam
mov
push
out
xchg
xor
jg
pop
imul
int3
sub
xchg
xor
mov
pusha
push
xorl
lock
add
mov
dec
adc
xor
flds
lds
sub
divb
mov
pop
cli
inc
movsl
aam
jl
lds
inc
push
jle
js
ss
cmp
lds
scas
or
cmp
iret
pop
repz
test
or
fstps
out
mov
gs
sbb
xor
pusha
test
dec
jle
dec
sub
mov
cmp
mov
mov
jns
adc
sub
out
sahf
test
dec
fldl
je
push
inc
and
nop
inc
cmc
in
sub
and
inc
loopne,pn
addl
jo
cmp
daa
sub
das
sub
enter
pop
or
pushf
in
ret
leave
hlt
xor
mov
xor
cmp
adc
mov
aaa
and
movsl
xor
in
adc
sub
dec
fs
repnz
lods
ja
rolb
lahf
jg
cmp
mov
jo
test
enter
jmp
xchg
xlat
sarl
loopne
mov
sbb
ret
mov
popf
les
xor
mov
mov
mov
or
jmp
iret
jecxz
repz
int3
mov
push
mov
cmp
mov
cmp
fdivs
and
pusha
and
sub
xor
rcrb
loop
loopne
aas
movb
mov
sbb
dec
inc
jae
xchg
xor
mov
cmp
jecxz
int3
push
out
xchg
ss
add
outsb
mov
mov
std
gs
cmp
cmpsb
js
js
test
das
loope
int3
xor
fsub
or
mov
xlat
jge
mov
adc
lcall
icebp
in
pop
add
sub
aam
and
dec
lods
sub
cmpsl
add
jne
call
cli
push
sbb
cmp
xor
rcrl
add
outsl
xchg
insl
inc
dec
cltd
les
cmp
xchg
push
add
pop
pop
sub
sahf
pop
out
or
mov
sub
in
into
and
ds
xchg
and
fcmovnbe
fwait
clc
pop
repz
pop
adc
push
loop
je
ss
pushf
or
dec
roll
mov
cmovle
fadd
xchg
push
adc
mov
mov
mov
lret
cmpb
or
or
cli
lds
xchg
xchg
xor
std
and
lods
jae
jl
fs
cs
out
fmuls
and
pop
rcrb
pusha
jb
mov
mov
lret
lock
shll
repz
cs
leave
pop
test
cmpl
xchg
mov
mov
xchg
xchg
push
lret
add
call
pop
sbb
insl
mov
jle
sbb
cmp
inc
mov
aad
fimull
mov
mov
jae
test
jns
es
out
jns
sbb
jo
jb
mov
dec
cmovs
push
out
xchg
lcall
inc
rorl
out
push
outsl
stc
stos
test
popf
sar
rorl
mov
ja,pn
mov
imul
mov
push
scas
mov
adc
jmp
insb
cmp
mov
dec
cmp
test
push
pusha
push
cmp
mov
mull
jno
add
loop
jmp
lds
mov
jge
cmp
cmp
cli
pop
flds
add
bnd
push
xchg
xchg
ret
push
ret
xor
lock
dec
mov
jnp
inc
mov
pop
popa
cld
lret
ret
sub
pop
ss
push
outsl
aas
insb
sub
loop
popa
gs
inc
push
pop
jmp
mov
iret
jnp
inc
or
mov
std
negl
bound
lret
notl
mov
cmpl
or
or
dec
mov
scas
cmpsl
shrb
jno
mov
ja
add
add
push
push
cs
mov
sub
das
sbb
mov
push
jp
and
test
insl
mov
sub
ja,pt
jg
and
int3
popa
imul
movsl
leave
mov
cmc
testl
xor
or
jp
in
mov
lds
pop
fisttpll
add
lcall
sahf
repz
cs
out
lods
and
inc
mov
mov
idivb
inc
dec
sbb
mov
cmp
mov
sbbb
add
rcll
xchg
rcll
sbbb
nop
lcall
insb
sub
xchg
adc
pop
repz
bound
xor
popa
jnp
clc
pusha
mov
mov
sbb
xor
mov
ficomps
mov
ss
xchg
iret
insb
daa
hlt
or
xlat
and
cmp
arpl
arpl
jo
stos
mov
mov
pop
repz
das
scas
fiadds
mov
jecxz
or
pop
jl
outsb
lods
push
sub
int
sub
jecxz
push
jo
neg
in
test
ja
rorb
mov
adc
loopne
aaa
lock
scas
aam
cmp
imul
mov
lret
sbbl
xlat
stos
sub
inc
rorl
inc
pushf
ret
shr
push
mov
cmpsw
daa
cld
mov
push
mov
mov
dec
push
mov
sahf
cmp
pop
imul
jae
roll
jns
stc
shlb
fwait
dec
das
mov
jno
sub
mov
sub
aaa
lcall
mov
dec
fbstp
dec
iret
ret
fsts
stos
jl
dec
or
adc
inc
roll
push
and
dec
xor
aam
mov
fisubrs
cmp
and
and
test
movsl
pop
push
insb
enter
imul
inc
ljmp
mov
push
mov
mov
mov
fildl
gs
stc
sarb
cmp
fneni(8087
mov
jbe
inc
leave
stc
rolb
push
mov
or
addl
scas
inc
mov
and
cmp
mov
into
xchg
popa
aam
incb
mov
mov
stos
xchg
js
mov
mov
mov
outsb
push
jnp
jb
sbb
aas
xchg
fwait
lcall
idivb
pop
mov
cmc
mov
cmpsl
inc
add
inc
sti
xchg
lods
cmp
mov
mov
mulb
fdivs
dec
fistpll
sbb
cmp
ret
test
xchg
jg
ss
xchg
enter
scas
dec
outsb
fistpl
gs
push
aas
addl
fimuls
adc
stos
std
xlat
mov
lods
popf
adc
xchg
inc
or
add
shll
xchg
dec
out
data16
repz
setb
out
push
pop
int3
das
push
xchg
mov
mov
adc
cld
cld
fdivrl
mov
sbb
lret
jno
movsl
fisubrl
mov
icebp
popa
dec
call
push
mov
mov
or
nop
ds
addb
cld
add
inc
cmp
popa
or
mov
fwait
out
data16
sbb
push
add
fisttpll
push
xchg
jne
or
inc
repnz
cmc
dec
adc
pop
les
cli
popa
adc
pop
notl
cs
push
jnp
outsb
in
pop
ss
dec
cmpsb
adc
jl
ja
pop
leave
ljmp
fsubr
xchg
xor
jne
xchg
addb
cli
sbb
adc
push
popa
dec
pop
inc
notb
cmp
xchg
ljmp
icebp
imul
sub
ror
testl
imul
fsubrs
loop
inc
fidivrs
adcb
inc
pop
xor
sub
adc
mov
shll
lock
in
lea
leave
pop
jae
jecxz
mov
or
je
jbe
in
daa
mov
adc
push
cmp
xchg
ja
stos
roll
pop
or
icebp
ljmp
aaa
push
or
xor
leave
sbb
aas
rcll
fdiv
jg
fs
mov
insl
shll
jno
imul
pop
or
rcll
std
jp
dec
rcll
ficomps
jns
inc
pusha
std
cld
in
cmp
sub
pop
fucomp
and
sti
mov
sbbb
ret
jne
js
test
push
frstor
loope
pop
or
push
subl
ja
or
mov
lahf
out
cmp
jl
xor
inc
cld
jp
dec
sbb
pop
dec
je
inc
xor
jle
xlat
jle
fldenv
mov
stc
sub
push
cmc
pop
out
rcr
pop
push
cmp
test
popa
out
inc
jg
or
dec
stos
cmp
push
jae
sbbl
add
xor
dec
jno
mul
xstore-rng
cmpsl
add
into
test
mov
xchg
jo
or
push
pop
shll
mov
cltd
movsb
push
xchg
das
jg
es
inc
sbb
mov
popa
outsl
inc
cltd
pop
cmc
aam
out
jnp
jp
pushf
imul
dec
lcall
inc
in
mov
les
out
dec
xchg
test
xor
xchg
mov
xor
arpl
js
aam
vxorps
xor
aad
jae
add
cmp
shll
std
jns
mov
mov
enter
aam
popa
rclb
pushf
sub
cmc
lcall
and
mov
popf
fwait
leave
test
addr16
sub
xchg
cwtl
add
js
dec
aas
insb
lahf
fst
pop
repz
lea
add
ret
inc
outsb
lret
pushf
ss
pop
testb
push
rol
icebp
mov
mov
cmp
add
in
jno
sbbl
sub
outsb
dec
int
or
add
fdiv
push
xor
repnz
inc
add
cwtl
and
dec
jns
mov
aam
subl
negb
fwait
pop
loope
daa
into
push
stos
mov
js
inc
decl
mov
adc
jl
test
mov
aas
cmp
mov
out
mov
arpl
sub
mov
and
mov
jmp
dec
gs
jo
mov
xchg
sbb
mov
enter
enter
mov
in
ret
dec
jo
jmp
mov
stos
cmp
and
mov
pop
mov
mov
jo
lea
loope
pusha
pop
xchg
adcb
mov
outsb
cmp
mov
lcall
notw
cmp
push
dec
imul
int3
fwait
leave
dec
je
cmc
add
inc
in
mov
shrb
stos
lods
dec
mov
add
add
sub
sub
mov
jne
mov
inc
ljmp
mov
push
clc
push
shll
mov
fs
push
adc
gs
xor
orl
or
adc
cmp
stos
mov
dec
inc
pop
lock
sbb
fnstenv
cmp
das
fdivrs
inc
hlt
jnp
sub
xchg
mov
rorl
xor
dec
add
cmp
std
add
inc
icebp
sub
mov
outsl
scas
in
out
in
ja
push
pop
daa
push
js
jo
bound
sub
jl
pop
jmp
test
arpl
cli
test
imul
adc
dec
fbld
dec
inc
or
fbstp
mov
sahf
outsl
mov
stos
ljmp
iret
cli
pop
pushl
jp
nop
jbe
xchg
out
sub
arpl
or
push
jb
in
bnd
sti
mov
in
cli
push
pushf
aas
adc
shll
add
mov
shl
add
add
repnz
dec
test
pop
insb
out
adc
fwait
cltd
das
mov
arpl
ret
loope
or
push
inc
es
loopne
rcrb
push
mov
mov
std
mov
jnp
xchg
fidivrl
rol
mov
mov
cmp
jae
add
cwtl
clc
push
stc
decb
sbb
inc
lock
test
mov
and
mov
sbb
push
lods
lds
ret
icebp
fwait
sub
pop
loop
lahf
and
je
xor
sub
test
mov
hlt
adc
je
fiaddl
dec
bound
add
inc
mov
cmp
mov
jg
adc
cli
int3
stos
test
rclb
xor
pop
push
cmpsb
jle
negb
call
fsubr
mulb
rclb
mov
adc
inc
jne
jb
std
lret
adc
ss
cmpsb
and
bound
mov
sbb
icebp
add
xchg
hlt
rorb
dec
lret
adc
jnp
add
push
push
xchg
mov
js
push
cs
and
lret
lret
lea
cmp
cmp
inc
mov
dec
xor
add
push
and
dec
cs
adc
clc
inc
jl
neg
jo
sbb
out
jnp
dec
xor
add
pop
test
xchg
fs
jae
test
mov
sub
mov
fistpll
cld
fs
adc
mov
lret
xchg
push
imul
xor
mov
mov
sarl
pop
sbb
fisttpl
and
cmpsl
popf
std
push
nop
cltd
sub
fbstp
push
aam
negb
into
dec
icebp
pop
sbb
pop
test
push
pop
scas
imul
je
cmp
loopne
sub
mov
shlb
mov
mov
pop
pop
daa
mov
scas
adc
loopne
mov
inc
insl
testb
push
lahf
out
cwtl
iret
mov
lahf
test
imul
mov
adc
lahf
das
push
popa
cwtl
in
sbb
js
sub
stos
stos
fstpt
push
cmc
pop
lods
adc
push
pop
push
mov
fcoms
cmp
pop
or
xchg
outsl
in
mov
inc
test
push
in
pusha
mov
and
pop
sbb
les
xor
ljmp
in
les
es
fwait
into
mov
faddl
jecxz
out
mov
mov
pop
lods
xor
xor
imul
lock
pop
test
dec
inc
outsl
dec
movsb
xchg
inc
fiaddl
cs
sub
sbb
xor
sti
cmp
cmp
push
or
decb
mov
mov
clc
inc
in
pushw
mov
repz
cmp
stc
and
hlt
sub
call
aaa
inc
out
fwait
popa
mov
add
and
in
xchg
add
cmp
insb
loope
scas
mov
shr
adc
jae
sbb
out
or
es
imull
lret
mov
add
add
cmpsb
aas
das
mov
dec
mov
inc
stos
jae
imul
ljmp
push
neg
sub
fwait
sbb
test
jecxz
inc
adc
dec
pusha
and
notb
pop
inc
mov
imul
pushf
pop
test
inc
insb
fcompl
xor
jmp
lret
and
aad
repnz
jge
dec
cmpsl
orl
mov
adc
lret
mov
cmp
fisubl
cmpsl
jl
or
lea
pusha
adc
sub
cmp
fidivs
in
and
ja
loope
pop
imul
xchg
jle
fwait
das
sbb
cmp
fst
inc
sub
xchg
sbb
negb
mov
push
mov
pop
bound
mov
cmp
test
or
push
iret
xor
imul
sub
sbb
pop
xor
inc
js
repnz
or
jno
and
hlt
enter
test
mov
push
push
push
jle
leave
adc
sub
mov
cltd
adc
dec
push
sbb
pop
push
cli
mov
hlt
adc
arpl
imul
xchg
lcall
enter
ficompl
mov
and
stc
fxch
xor
lret
xchg
dec
loope
xchg
pop
mov
mov
data16
cwtl
lcall
loopne
negl
js
shrb
mov
xchg
push
loopne
sbb
push
pusha
incl
or
stc
dec
inc
pop
push
stc
test
test
sbb
shll
jge
inc
sahf
or
cmpsl
aas
pop
mov
push
aas
push
jmp
xor
int3
jmp
ficoms
cmp
lods
sub
lds
mov
fldt
daa
cmp
push
bound
jge
mov
xchg
ds
or
xor
add
xchg
test
daa
lcall
aaa
inc
test
jo
mov
lods
ficompl
sti
mov
js
ds
rol
addr16
jl
cli
test
fmul
inc
jl
push
shl
or
xor
jne
mov
mov
into
fstps
mov
push
and
inc
dec
or
inc
mov
decl
or
fnstenv
fsubr
shll
clc
ret
pop
mov
jne
daa
incl
mov
repnz
fwait
dec
pop
repnz
out
cmp
sub
aas
imul
out
xchg
or
in
adc
repz
das
sub
mov
inc
push
mov
into
rcll
cltd
icebp
andb
push
or
and
shll
ret
jl
add
dec
shrl
js
xchg
adc
push
cwtl
push
sbb
and
push
lret
jl
js
repnz
add
enter
push
sub
sub
shrl
jle
push
fs
je
xchg
je
jne
lods
out
xchg
ret
popf
xor
scas
xchg
arpl
testl
stc
pop
dec
in
pop
loop,pt
imul
faddl
dec
xor
jmp
add
js
cltd
add
push
in
les
out
imul
xor
aam
inc
cld
or
push
loopne
les
inc
sarb
inc
in
sarl
add
push
pop
ficoml
scas
xor
in
das
sub
or
insb
aad
or
cmc
outsl
insb
mov
xchg
dec
or
push
cmpsl
jb
aam
and
enter
enter
lahf
mov
aam
jnp
mov
or
xlat
scas
add
push
pop
pop
push
xchg
std
sbb
cmp
jl
xchg
xor
jp
jb
and
je
mov
jle
inc
pop
pop
mov
jne
cmpsb
lock
sbb
lds
aad
adc
xchg
test
sarl
dec
mov
daa
cmp
xchg
cmp
dec
fsubs
pop
in
mov
pusha
fnsave
cltd
in
cs
push
movsl
scas
mov
outsb
push
pop
jnp
add
push
or
bound
mov
xor
pushf
adc
in
sbb
cmp
repz
clc
andl
lods
mov
roll
mov
pop
sahf
repz
adc
enter
pop
sub
in
fmuls
pushf
pop
je
out
jmp
mov
push
dec
xchg
push
jnp
imulb
mov
out
xchg
sbbb
push
pushf
add
add
fldln2
inc
jge
adc
les
vmwrite
cmpb
xchg
aas
hlt
adcl
or
push
dec
mov
dec
stos
mov
nop
or
xor
movsb
inc
frstor
sahf
pusha
stc
xchg
sbb
scas
or
aad
or
sub
inc
lods
cmpb
or
orb
dec
ficompl
sbb
xor
notb
roll
xor
imul
sub
mov
jne
xorl
insb
insw
ret
sbb
cmp
popf
and
jno
pop
pop
add
mov
xchg
cmp
mov
pop
int3
ret
cmp
lds
jnp
push
fs
sub
add
mov
jnp
out
jge
xchg
sub
cli
lock
xchg
popf
dec
fs
loopne
mov
sub
add
ljmp
outsl
sbbb
add
cmpsl
push
scas
pusha
loopne
gs
insl
mov
aas
mov
iret
inc
mov
push
ja
test
jae
add
mov
pop
out
cmp
mov
mov
inc
inc
cmp
inc
xchg
out
fs
jns
dec
add
insl
xor
andb
repz
movsl
addl
jge
fcmovne
push
ffreep
ds
aaa
jg
ja
push
mov
loope
push
je
mov
jno
cmp
icebp
test
adc
inc
push
out
mov
inc
mov
sub
dec
jo
xor
push
sub
push
jle
lret
mov
insb
out
jns
cwtl
shrl
cwtl
addb
insb
inc
push
jle
mov
dec
mov
jb
mov
xchg
push
push
adc
jl
pop
inc
aam
add
and
sbb
adc
mov
adc
sbb
mov
dec
lods
jb
mov
or
daa
mov
ret
jmp
sub
xchg
jb
decb
lret
push
inc
adc
or
decl
int3
jl
movsb
aaa
shrb
ret
ds
or
xchg
in
repz
inc
and
inc
pop
mov
imul
test
dec
inc
das
sbbl
cmc
xor
inc
test
in
fwait
and
ds
icebp
adc
cs
sbb
fsubl
sbb
xchg
repnz
lcall
loop
insb
cli
daa
inc
pop
xchg
imul
sub
pop
cmpb
xlat
jl
sub
and
jge
mov
push
ds
jecxz
jecxz
fisubrl
jl
mov
xor
or
dec
sahf
ret
push
mov
dec
pop
cmp
dec
add
dec
dec
pop
add
jno
popl
scas
test
pop
jl
aad
rcr
inc
cmc
xchg
push
or
xchg
push
xor
adc
dec
sub
les
cmp
jb
lea
dec
ret
push
jge
xor
jge
cwtl
repz
rcrl
imulb
pop
in
repnz
adc
clc
data16
pop
out
outsl
cmpsl
dec
dec
ds
insl
cmpsl
adc
cwtl
loop
in
shlb
sbb
mov
push
sbb
popf
inc
fwait
pusha
jae
clc
push
jg
popf
dec
fstl
add
push
das
sahf
or
mov
xchg
adcb
js
in
jo
jg
ja
imul
inc
adc
push
jbe
inc
mov
jle
mov
adc
push
test
into
repnz
test
pop
scas
dec
sub
xchg
jecxz
pop
mov
dec
loopne
mov
stos
mov
push
adcb
push
xchg
adc
cmp
int3
push
or
lds
test
test
xchg
mov
push
push
loope
cltd
sbb
fwait
mov
aas
mov
test
mov
mov
ja
pop
add
mov
lods
jae
shlb
sub
push
testb
sub
repnz
pop
jno
fiadds
mov
jnp
jp
int
mov
mov
out
push
daa
outsb
adc
pop
test
outsl
rcrl
pop
jp
sbb
sub
or
bt
in
xchg
jmp
cmp
sub
dec
xlat
insl
fiadds
rolb
call
adc
mov
jl
jecxz
test
xor
repz
jge
rcrb
adc
cmp
imul
push
add
pushf
pop
pop
jl
in
xchg
imul
pop
lds
mov
inc
dec
mov
ss
xor
push
and
test
jne
inc
mov
adc
int3
mov
fdivs
ffreep
enter
in
cld
push
arpl
dec
cmp
mov
aaa
insl
add
ret
mov
mov
loope
or
jno
lcall
and
dec
push
cmc
xchg
xchg
push
push
mov
fdivs
loop
mov
ret
jae
mov
mov
or
ffree
ljmp
gs
cmp
cmpsb
push
mov
push
mov
int3
pop
xor
xchg
out
push
lods
dec
mov
dec
jg
sbb
stos
pop
or
clc
cmp
sub
pop
push
dec
stos
repnz
push
xchg
insl
daa
sbb
icebp
in
sahf
test
xchg
orl
jae
pop
dec
loop
sbb
aam
inc
push
insl
repnz
sahf
and
lods
lea
xchg
mov
cmp
cmp
in
test
cmp
push
push
sbb
aas
gs
xor
xorl
and
sbb
mov
shl
sub
test
scas
and
pcmpgtw
pop
shr
or
inc
ds
inc
aas
add
das
sub
loopne
movsb
xchg
sti
hlt
jae
call
daa
dec
inc
xchg
jmp
sarl
data16
xor
loopne
push
adc
movsl
dec
pop
cli
sti
lods
sbb
ljmp
mov
push
mov
mov
std
outsb
pop
xorl
scas
dec
cltd
xchg
int
lret
ds
cmpsl
push
add
xor
mov
cltd
adc
test
dec
arpl
sbb
clc
mov
sar
pushf
dec
int
or
test
lods
push
ds
stc
inc
jnp
dec
daa
js
cltd
cmpb
in
xchg
inc
stc
add
jb
jl
jne
xchg
cld
or
rorl
dec
icebp
aad
shrl
out
adc
mov
xor
adc
aas
jnp
mov
rcrl
mov
inc
jae
ljmp
icebp
ret
aam
addr16
sub
adc
popf
push
cmp
push
imul
inc
and
shlb
das
push
cwtl
insl
enter
bound
lods
and
sbb
mov
lret
push
imul
insb
pop
xchg
mov
xor
jl
mov
loopne
pop
inc
fiadds
add
icebp
movb
int3
in
inc
cmp
cmp
cwtl
ljmp
dec
imul
mov
sbbl
stc
lcall
stc
insb
stos
sbbb
sub
mov
orl
sarb
fisubs
out
ror
es
adc
sarl
lods
jle
sbb
pop
fwait
cmpsb
bound
xchg
xor
loope
or
jle
test
jp
inc
loopne
mov
push
mov
adc
pop
daa
out
clc
jnp
and
nop
adc
dec
shl
out
out
out
inc
inc
aas
lcall
sahf
sbb
data16
les
mov
inc
sbb
fs
pop
pop
mov
mov
out
insl
or
daa
pop
cmp
add
subl
cmp
add
xor
in
loop
lods
push
jno
sti
and
mov
imul
ret
insl
push
xor
and
or
les
and
cld
sub
cli
adc
shl
rcl
imul
dec
inc
xchg
dec
push
or
fstl
std
popa
sbb
xchg
cmp
notl
xchg
das
les
or
cmpsl
ret
sahf
inc
jae
adc
jmp
lret
add
or
sbb
repnz
or
mov
mov
mov
dec
outsb
fs
addl
cli
pop
dec
fists
std
out
scas
iret
mov
faddp
pop
jg
pop
subb
jo
je
xor
mov
and
stos
aam
sub
mov
pop
in
fsts
ficomps
mov
aaa
cmp
xchg
inc
aas
arpl
mov
mov
sarl
jecxz
jbe
push
inc
dec
pop
pop
sub
mov
dec
push
jae
hlt
cwtl
imul
es
sub
rolb
fcoms
lcall
add
nop
adc
pop
aad
fistl
les
mov
and
in
scas
dec
dec
mov
adc
pop
stc
xchg
clc
mov
and
outsb
andb
cmp
inc
jae
pop
inc
pop
push
and
mov
jmp
xchg
pop
cmp
outsl
cmp
sbb
xlat
rol
xchg
clc
add
lds
ficoml
jns
dec
test
dec
mov
call
pusha
imul
jbe
scas
xchg
sbb
xor
gs
mov
or
mov
lds
int3
push
pop
lods
push
int
xchg
mov
jmp
inc
and
mov
outsb
lcall
sarb
ret
mov
jl
je
sahf
sub
xchg
sub
test
int
jne
lea
fstpt
mov
int
ss
jno
mov
pushf
and
pop
in
daa
add
cmpsb
scas
mov
es
ss
add
fdivrs
sbb
sub
dec
mov
pop
fiaddl
out
xchg
cmp
mov
aas
insl
pusha
imulb
and
add
xchg
fdiv
jnp
inc
popf
pushf
lds
movsl
add
pop
cmp
popa
andl
pop
out
push
pop
mov
pop
js
int
call
inc
adc
push
sbb
cld
arpl
fidivrl
inc
and
rcrb
sbb
push
arpl
inc
les
jle
aas
stos
and
je
fnsave
rcrl
xor
in
jnp
movsl
imul
shlb
es
test
arpl
and
aam
nop
mov
jle
orl
out
loopne
scas
and
fwait
sbbb
xchg
pop
add
jno
sbb
xchg
xchg
xchg
int3
adc
xlat
pop
mov
cli
daa
xchg
jo
jmp
mov
mov
xchg
insl
scas
subb
daa
divl
dec
pop
and
jle
dec
stos
xlat
jno
inc
add
mov
arpl
jle
repz
and
cmpsb
testl
and
jno
lock
xacquire
inc
iret
xchg
jg
movsb
sub
clc
sub
cmp
cwtl
lods
call
insl
jbe
cmp
mov
dec
popf
fadds
inc
test
sub
jnp
adc
popf
outsl
jg
xor
sbb
jge
mov
jecxz
xor
sahf
pop
lahf
mov
out
and
out
jl
push
lock
push
lods
push
jmp
int3
lea
pop
fsubrs
mov
mov
insb
lds
mov
mov
pop
inc
pop
xor
popa
int
fnstsw
xchg
imul
stc
int
fwait
xchg
jecxz
mov
and
push
data16
xchg
push
pop
dec
jbe
insl
or
jl
pop
into
xor
mov
aaa
inc
mulb
rcl
xlat
cmp
out
push
ret
inc
mov
cmp
push
cmp
mov
sbb
xchg
es
adc
lret
rcll
cmp
sbb
sub
sub
cmpsl
lock
outsl
in
mov
xlat
push
loop
js
fldcw
xchg
iret
rcrb
mov
arpl
pop
add
lahf
mov
daa
lret
mov
mov
faddl
sub
fnstenv
jge
cmpsb
sbb
loope
pop
pop
sub
sub
xor
mov
xor
push
cmp
out
mov
inc
adc
int
negb
hlt
cmp
rcl
xor
cwtl
and
jge
cmp
stc
imul
jno
aas
mov
xchg
imul
dec
push
ror
mov
in
push
dec
fs
aad
insb
jge
call
in
pop
mov
pop
icebp
test
and
aam
dec
dec
outsl
inc
stc
sbb
lea
sub
fs
lret
pop
sbb
adc
loop
mov
push
js
pop
out
adcl
mov
mov
inc
sub
in
mov
mov
jb
mov
leave
mov
leave
lods
leave
jecxz
pop
push
sub
xchg
lods
push
scas
lds
or
add
push
leave
sahf
pop
aam
mov
sub
adc
aas
maskmovq
scas
cmp
mov
mov
or
addr16
outsb
fiadds
dec
push
mov
insl
into
adcl
or
inc
dec
inc
bound
mov
insb
mov
bound
sub
pop
insb
mov
test
fwait
test
jmp
mov
xor
inc
dec
add
scas
xchg
lcall
sub
daa
scas
std
add
xor
aad
jns
loopne
cmp
cmp
inc
insl
or
rcrl
push
mov
in
decb
mov
dec
lret
js
into
dec
jbe
or
or
loop
cmp
jle
mov
jg
fstl
icebp
sbb
dec
rcrl
ret
dec
pushfw
sub
xchg
sub
call
dec
mov
addb
mov
fisubrs
pop
push
inc
in
jnp
cltd
test
cmp
jp
push
pop
lcall
cmc
aad
add
pop
push
fdivrl
sub
dec
jl
cmp
out
psubw
xor
ficoms
cs
dec
loop
cltd
and
and
out
sub
insb
pop
loope
pop
push
and
jmp
add
test
adc
ds
idivb
pop
mov
and
test
test
xchg
pop
test
std
clc
xor
mov
mov
imul
mov
sbb
cmp
mov
lret
outsb
rcrb
pop
pop
ds
mov
andb
mov
pop
imul
imul
out
outsl
movb
inc
sub
pop
insl
test
subl
pop
xor
arpl
cwtl
jne
imul
subb
jmp
lea
rcll
shl
sahf
mov
pushf
ficoms
pop
sbb
jbe
sbb
sbb
mov
fs
xchg
aas
or
push
inc
scas
and
insb
pop
mov
bound
ljmp
add
dec
scas
mov
push
or
orl
push
int
and
in
xor
in
xchg
mov
in
pop
dec
push
adc
ds
fsubrs
loopne
pop
mov
lcall
int
push
sbb
mov
ljmp
fsts
aad
xor
push
dec
data16
hlt
movsl
shlb
xlat
dec
pusha
sbb
cwtl
and
ja
add
out
dec
pop
xchg
in
xchg
mov
scas
add
xor
lods
mov
jae
call
pop
dec
ret
inc
dec
and
dec
add
fldenv
mov
mov
dec
test
xchg
jmp
push
push
add
daa
sbb
or
out
sub
icebp
and
and
std
fistl
outsl
lahf
shll
dec
dec
push
mov
adc
nop
bound
or
jae
js
mov
mov
aad
sub
mov
movsb
pop
dec
lret
or
sti
cld
out
sub
decl
faddp
xchg
pop
inc
adc
push
in
mov
fucomp
outsl
mov
lods
xor
mov
rorb
js
mov
leave
or
mov
add
push
sti
push
cmc
inc
adc
lret
push
cmp
sbb
std
sbb
repnz
mov
xchg
dec
in
outsw
fcmovbe
add
test
lods
xchg
inc
jnp
or
pop
jns
mov
pushw
mov
bnd
adc
insl
push
sub
ja
push
fisubl
jle
movsb
sub
pop
scas
xor
shlb
popa
xchg
mov
mov
out
mov
push
cltd
xor
movsl
ret
sub
push
inc
jmp
or
xchg
lods
ror
cltd
cmpsb
pop
aas
push
sbb
sub
mov
sub
inc
or
mov
xchg
lret
jo
pushf
ret
aad
stos
mov
mov
pop
mov
push
cwtl
inc
mov
dec
lds
notl
jle
stos
jne
push
movsb
ret
adc
cmp
xor
bound
std
xchg
jnp
fsub
loop
int3
test
pushf
lcall
sahf
adc
lcall
outsw
cmp
js
or
mov
jmp
mov
lret
xchg
cmpsl
pop
push
xor
and
mov
xchg
mov
cmp
and
adc
dec
daa
cmpsl
pop
inc
loop
ljmp
dec
mov
sub
clc
subl
insl
xchg
jnp
jo
sbb
and
jp
sbb
adc
aam
fs
mov
xchg
setno
xlat
movsl
test
sbb
iret
xchg
jnp
inc
loop
jmp
test
stc
sbb
sti
dec
xor
test
orb
and
cmpsl
add
popa
push
jae
mov
inc
cli
xchg
cmp
loop
shll
and
mov
std
jno
cmc
mov
sbb
mov
or
push
push
jnp
dec
in
sub
into
xchg
test
and
jae
sub
and
ret
cmp
dec
add
es
jge
icebp
decb
xor
pop
stos
inc
shll
dec
mov
loopne
push
sub
sub
xor
jl
cmp
or
or
test
adc
add
pop
jmp
inc
and
jne
insl
jno
inc
rcr
lods
ret
xor
mov
leave
movsb
sub
ffree
rol
leave
cwtl
cmpsb
mov
jns
enter
lcall
or
jge
mov
pop
adc
iret
mov
mov
cmp
loopne
lahf
inc
sahf
repnz
pop
enter
pushf
sub
jge
fbstp
mov
pop
out
xor
adc
xchg
jmp
scas
mov
jecxz
push
ds
jmp
cmpsb
and
in
jle
hlt
ds
mov
faddl
cltd
add
adc
sub
cs
cmpl
call
dec
mov
add
or
cmp
adc
mov
out
adc
pop
pop
repz
mov
push
jae
sbb
push
aad
jnp
arpl
bound
subb
mov
mov
push
adc
sub
rolb
cmp
jmp
loopne
sub
xchg
scas
scas
adc
lea
pushf
sbb
adc
inc
sbb
inc
mov
pop
lahf
shl
mov
mov
push
aam
jae
xchg
das
cmc
inc
repnz
pop
cmp
adc
push
mov
ss
mov
lret
mov
push
jge
ror
in
pushf
imul
push
inc
mov
mov
cmp
ljmp
je
scas
mov
jne
xor
mov
xchg
in
ja,pt
mov
cmc
cwtl
mov
ret
outsb
icebp
cs
mov
jecxz
push
es
xor
imul
xchg
or
mov
mov
add
xor
lret
iret
xchg
inc
jg
sbb
mov
or
sub
add
roll
cld
mov
or
ds
add
inc
xchg
jecxz
nop
dec
dec
in
outsb
inc
cltd
mov
fwait
lea
adcl
jns
inc
sbb
inc
shr
pop
int
in
mov
sti
nop
cmpsb
icebp
das
inc
gs
mov
mov
leave
push
sti
mov
jnp
shlb
cmp
inc
ret
cmpsl
adc
aas
aad
xor
and
test
bound
fimuls
cmp
pop
orb
adc
mov
sbb
fldenv
xchg
in
jne
dec
popa
mov
cmp
in
dec
enter
ficomps
push
pop
imul
sbb
mov
popf
out
dec
mov
adc
push
addr16
aaa
movsl
xor
mov
dec
cmp
std
les
rcrb
pop
es
push
call
or
mov
and
dec
insb
fwait
pop
into
aaa
or
adc
cli
dec
xchg
fbstp
dec
dec
mulb
mov
mov
adc
and
loopne
icebp
insl
add
xor
imul
sahf
and
or
fisubl
sub
movsb
repnz
test
jmp
stos
out
mov
mov
sub
pop
scas
es
mov
fdivs
lea
cmp
or
loop
and
and
pop
ja
iret
arpl
cwtl
jp
adc
mov
mov
fs
cmp
clc
mov
cmc
sub
lret
sti
sti
lds
inc
in
cmpl
repz
jmp
inc
pop
aam
or
or
in
pop
sub
cmp
push
xor
add
mov
lret
scas
bound
jb
shll
pushf
inc
adc
imul
mov
pop
mov
clc
movsb
jno
adc
pop
icebp
jp
push
mov
jmp
out
jno
je
pop
addb
cmp
inc
sbb
ja
mov
jbe
repnz
pop
rcrb
repnz
sti
outsw
add
sbb
cmpsl
popf
fisttpl
pop
cwtl
mov
mov
sti
cmp
jo
pop
mov
roll
and
jle
xchg
popf
aad
jb
ret
xorl
test
pop
mov
popa
sub
xor
out
pushf
outsl
into
mov
dec
popw
dec
loope
push
xchg
dec
xlat
idivb
popf
and
mov
lcall
jg
cmpl
orb
int
arpl
or
mov
movsl
popf
xchg
movsl
sbb
ja
in
xchg
cld
leave
or
daa
daa
aas
mov
out
mov
movsb
sbb
fninit
mov
stc
mov
xchg
pop
cmc
jae
sbb
push
xchg
add
dec
es
jae
pop
mov
mov
movsb
int
mov
or
adc
or
push
mov
sub
xchg
sub
int
lahf
addb
movsl
lock
dec
cmp
mov
fistpl
fwait
add
aaa
mov
sbb
popa
sbb
pop
add
lods
test
mov
sbb
adc
jns
stos
mov
int3
pop
aas
or
addr16
xchg
mov
lcall
adc
fcmovb
or
gs
and
jne
push
cmpsb
insl
adc
divb
lock
jp
int
mov
addb
inc
aam
sbb
cmp
push
inc
xchg
fcmovne
cmpsb
imul
inc
stos
sub
popf
push
xchg
mov
add
es
call
repnz
push
and
insb
movsb
mov
mov
out
mov
fs
fdivrs
divl
xchg
add
out
or
mov
inc
add
pushf
xchg
mull
imul
out
subb
mov
or
sub
cltd
sbb
cs
jne
dec
xor
jo
scas
ret
sub
adc
add
push
lea
and
pop
push
fiaddl
xorb
out
adc
into
sub
cld
dec
out
jne
loopne
adc
jmp
js
cwtl
jp
or
cmp
sti
daa
and
in
mov
dec
movsb
in
fsubp
mov
adc
pop
in
js
mov
es
add
inc
sbb
popf
shll
mov
and
test
iret
syscall
dec
pop
test
es
cmp
jecxz
or
jecxz
adc
stc
mov
in
out
pop
arpl
aaa
in
roll
mov
leave
scas
dec
inc
xchg
adc
sbb
pop
stos
insb
mov
cld
out
jmp
insb
and
outsl
push
mov
cmp
inc
scas
jmp
mov
push
cmp
testb
jg
stos
stos
popf
mov
jne
rep
repz
sub
ds
pop
mov
jle
js
aas
mov
test
sub
and
or
jae
fcomps
xlat
sbbl
insl
les
orl
xchg
nop
stos
jbe
dec
xchg
or
shrb
pushf
pushf
pop
add
fldt
fxrstor
sub
cmp
xor
xor
mov
push
addr16
adc
imull
ret
stos
jp
loop
icebp
sbb
jae
adc
popf
and
mov
popf
ja
lea
jnp
icebp
push
inc
dec
push
inc
push
pop
stc
cmpl
out
mov
cs
push
cltd
loop
xlat
testb
rolb
pop
test
lods
cmpsb
mov
push
adc
pop
dec
jbe
mov
mov
cmc
out
and
nop
mov
and
repz
pop
adc
inc
xchg
movsl
sbb
pop
es
repnz
dec
xor
std
inc
push
add
add
mov
flds
in
loopne
xor
notb
mov
roll
jne
out
xlat
sub
movsl
inc
fdivrl
mov
sbb
xchg
jg
jb
lods
mov
and
sub
jne
and
sub
je
pop
test
sbb
stos
shll
jl
clc
aam
cmovge
daa
dec
and
fiaddl
sahf
pop
cmp
jbe
mov
mov
mov
ljmp
out
mov
scas
xchg
in
pop
addb
mov
adc
gs
insl
push
cs
adc
push
andb
jge
into
in
mov
jle
sahf
add
pushf
mov
xlat
and
sub
test
sbb
nop
xchg
sahf
in
int3
lods
mov
fisubrl
add
xor
rcrl
sub
add
jno
fucom
sbbl
nop
je
mov
aaa
notl
dec
pop
jg
inc
ljmp
cmp
les
fstpt
pop
or
fcoms
repz
rcll
inc
loope
sub
lds
sbb
xchg
sub
mov
or
adc
pusha
adc
xlat
xchg
js
cmp
jnp,pt
sbb
and
iret
inc
push
out
mov
or
je
jmp
mov
aam
dec
add
fdivrs
xchg
jp
or
std
xor
xlat
lea
cmp
push
dec
or
push
call
jmp
mov
lods
cwtl
cmp
daa
mov
fs
mov
data16
nop
in
inc
cmp
das
sbb
xchg
popa
mov
adc
xchg
or
loope
loopne
push
mov
imul
scas
prefetch
aas
push
mov
lahf
push
cmp
xchg
out
dec
mov
xor
xchg
fistpl
adc
jl
cmpsl
pop
out
push
jmp
aas
and
mov
add
jmp
or
insl
sbbb
ret
pmaxsw
scas
pop
js
inc
push
js
fsubs
scas
je
ud1
push
mov
adc
adc
inc
fbstp
stos
xor
push
mov
pop
mov
aad
xor
sbb
cld
xchg
push
inc
push
out
es
xor
lcall
mov
fs
cmpsl
idivb
xchg
aad
sub
mov
mov
xchg
xchg
sbb
mov
and
mov
add
mov
mov
out
mov
jae
add
xchg
xchg
lods
ficoms
test
mov
pusha
clc
je
js
aaa
test
or
push
pmaxsw
into
ja
cmp
fmulp
outsb
mov
add
sbbb
pop
inc
xchg
arpl
push
pop
cmp
fstpt
jae
jl
sbb
and
andb
mov
adc
imul
inc
sub
aam
add
jne
enter
xor
das
adc
dec
out
aad
sub
int
or
lcall
pop
aad
add
sbb
sahf
es
lcall
mov
xor
push
hlt
mov
add
pop
dec
jmp
sahf
jno
cmp
adc
fdivl
in
addb
data16
clc
sub
sbb
cmp
sbb
mov
stos
clc
lret
push
inc
xchg
shlb
int3
filds
in
push
jecxz
xor
xchg
adc
sbb
pop
sub
cmpsb
pop
adcl
inc
arpl
shrb
push
and
dec
iret
add
mov
ljmp
lods
int3
lret
xor
xchg
lods
pop
fs
dec
inc
aad
rorl
sub
cld
aam
clc
scas
cmc
scas
and
dec
in
mov
mov
fnsave
or
bt
jge
test
cmp
out
outsb
mov
sub
mov
call
and
push
xor
aam
push
insl
cld
push
cmpsb
out
lcall
xlat
sub
add
jbe
push
add
dec
mov
sbbl
and
rorl
test
jp
cmp
in
das
xchg
or
jmp
mov
sbb
mov
shrl
push
loope
mov
jbe
jae
mov
or
in
ret
pop
lret
sbb
cmp
mov
repnz
and
std
fs
enter
sbb
xor
jp
and
gs
lds
pop
dec
mov
rolb
out
xlat
push
daa
subl
test
mov
push
call
dec
fwait
mov
cmp
fildll
adc
ja
loopne
adc
mov
lahf
aaa
cmc
int
cmp
lds
jae
ficomps
mov
add
mov
aas
pushf
jns
je
ficoms
aad
lods
loope
sub
cltd
pusha
sub
and
fs
pop
add
push
stos
arpl
jae
jmp
insb
hlt
mov
and
pushf
arpl
jge
mov
jo
xor
mov
lea
ljmp
sub
or
cmc
movsl
adc
je
and
ret
mov
je
sbb
jle
insb
hlt
xor
jmp
push
jp
jns
or
mov
xor
pop
fisttps
daa
fldl
add
mov
pop
repnz
int3
pop
inc
stc
divb
insb
aad
adc
enter
push
cmp
and
mov
lods
dec
out
pushf
imul
aad
outsl
xchg
int3
insb
outsb
jnp
cli
push
shl
cwtl
dec
cmc
mov
xor
gs
jo,pn
cmc
lods
cld
or
or
jnp
or
push
mov
push
inc
adc
inc
and
in
popa
movsb
add
adc
mov
pop
pusha
xchg
pop
mov
adc
mov
sbb
jmp
cmp
mov
or
scas
adc
sub
fdivl
mov
andl
sbb
push
lods
sub
les
mov
fisubrl
pop
stc
enter
sbb
mov
push
dec
jge
inc
loopne
xchg
jmp
and
hlt
cmpl
stos
in
aas
out
lods
xor
icebp
dec
daa
push
test
sub
mov
pop
fldt
sbb
rolb
xor
xchg
addl
ljmp
xor
inc
jb
mov
pop
movsl
pop
ljmp
inc
xor
lcall
ja
nop
sub
dec
outsl
mov
pop
cmpsl
cmp
sbb
jne
mov
adc
idivl
mov
hlt
push
icebp
adc
xor
hlt
enter
cmp
jo
gs
add
mov
loopne
jns
add
lods
das
in
cmpsl
mov
in
push
pop
call
mov
mov
cmp
aam
fsubrl
mov
shlb
jne
fisttpll
or
popf
fstpt
scas
out
in
xor
inc
or
xor
or
loop
jo
lock
out
xor
pushf
movsb
sub
pop
dec
pop
sbb
pop
test
mov
xor
cmp
hlt
bound
sbb
aas
mov
outsl
not
rolb
in
rclb
icebp
subb
add
fsubrl
xor
adc
int
add
inc
js
fs
jl
adc
scas
out
addr16
mov
cmp
mov
add
fsub
lretw
mov
sti
push
mov
insb
data16
sub
jmp
sahf
push
pop
xchg
dec
sub
popf
pop
add
xor
cmp
testl
js
in
sub
sbb
ret
hlt
arpl
int
dec
imul
add
dec
xchg
mov
jns
inc
inc
fdivrl
push
push
push
test
dec
mov
jno
cltd
adc
sti
jmp
in
movsl
add
fdivl
rclb
cmpsb
imul
mov
adc
repz
xchg
test
adc
aaa
leave
mov
rorb
add
cmc
push
adc
clc
aaa
enter
mov
loopne
jo
adc
lcall
xor
cwtl
adc
push
cld
adcl
push
dec
movsl
pop
dec
ret
stos
iret
mov
inc
jae
loope
xchg
movsb
mov
or
clc
in
in
mov
jae
sbb
addb
sub
inc
and
sbb
ret
xor
jne
push
cltd
cs
push
in
mov
push
push
scas
xchg
jp
mov
repz
std
inc
mov
stc
and
das
xor
pop
fists
loopne
out
adc
push
or
popa
adc
jecxz
or
fdivrp
mov
jae
addr16
or
jae
or
sub
mov
xchg
dec
mov
jmp
pop
xor
and
push
and
dec
fxch
or
mov
xorl
cmpsl
ss
orb
add
cmpsl
outsb
dec
ja
add
ljmp
push
sub
dec
mov
ds
adc
outsl
or
mov
and
lahf
ret
xchg
sub
js
mov
cmp
ds
out
sub
jmp
fisubrs
xchg
mov
fwait
jle
mov
jns
cmc
xchg
mov
pop
jmp
dec
aaa
outsb
adc
pop
cmc
sub
incb
push
jle
dec
icebp
pusha
fcmovu
adc
imul
or
ret
jns
loop
sbb
sub
xchg
jnp
in
and
or
nop
fdivrs
fistps
ret
push
hlt
test
or
fstpt
pusha
xor
les
stc
mov
insb
ljmp
inc
addb
mov
xchg
repz
stos
xchg
adcl
out
mov
push
jg
add
movsb
pop
xchg
jae
sub
cwtl
xchg
adc
mov
lods
das
outsb
lea
cmpsb
jl
lds
mov
pop
add
scas
lcall
jge
or
lahf
xchg
gs
ds
dec
xor
shrl
popf
popf
call
xchg
or
dec
mov
or
dec
mov
and
adc
rcrb
das
out
xchg
incb
cltd
or
filds
pop
mov
or
mov
in
in
add
fnstcw
add
cmp
stc
and
jno
int
add
mov
dec
mov
out
xchg
add
out
jae
push
addr16
aas
xor
xor
scas
push
sbb
gs
cmpsl
and
mov
outsl
or
call
sbb
add
inc
rcrb
inc
push
aaa
imul
leave
mov
sti
cmp
xchg
movsl
or
fwait
mov
inc
mov
shr
cmp
mov
sbb
lock
in
call
and
insb
sub
jnp
fnstcw
rcrb
daa
sub
dec
loop
pop
jb
mov
test
and
dec
ss
enter
sbb
and
aas
add
rorl
ss
push
addb
out
mov
adc
aas
mov
movsb
cmpsb
sub
push
out
sub
or
int3
mov
adc
jb
nop
ret
mov
movsb
arpl
test
lock
stos
jo
push
and
dec
das
cmovge
nop
loope
leave
ja
adc
dec
ss
sbb
jmp
mov
loope
adc
or
xor
repnz
push
fidivrl
mov
repnz
dec
add
add
push
mov
cmp
shll
and
cmc
aad
shrl
jne
ljmp
addl
xchg
pop
xchg
xchg
mov
jge
dec
mov
push
sbb
cmpsb
push
jge
data16
dec
push
pop
dec
lock
loopne
mov
add
add
insb
pop
rolb
test
idiv
xor
xor
mov
shrb
jbe
pop
enter
mov
xor
inc
inc
cmpl
int3
out
in
das
mov
cmp
sbb
scas
cmp
es
cld
dec
inc
dec
xchg
xor
cmp
sbb
test
pusha
jecxz
cltd
inc
stc
pop
or
fdivr
jmp
rorb
jecxz
popf
lea
jl
cltd
push
add
dec
jb
call
sub
pop
or
scas
mov
leave
push
orl
in
jecxz
push
add
jbe
mov
cmp
aas
lret
dec
and
fld
jg
mov
call
mov
out
jbe
pop
xor
in
xor
test
fst
xchg
icebp
aad
push
outsb
add
or
nop
dec
out
bound
pop
incl
ss
xchg
add
push
mov
fildll
in
or
hlt
into
mov
ret
xchg
cmpsb
xor
cmp
inc
repz
mov
pop
in
repnz
movsl
push
inc
or
pop
shlb
push
inc
mov
mov
pusha
lock
cmovg
push
and
jns
mov
sub
xchg
lds
sbb
movsl
insb
cmp
arpl
sbb
sub
ss
push
cmp
aam
mov
mov
push
add
xor
outsb
cli
lahf
jns
outsb
xchg
push
push
and
inc
ds
popa
call
cmpb
pop
orl
cmpsb
ja
add
xchg
inc
int3
dec
enter
mov
cmc
lea
dec
jnp
mov
push
ja
mov
xor
add
loop
add
cmp
lahf
push
mov
inc
push
push
sub
sub
push
cli
inc
cwtl
mov
push
rcrb
inc
xor
inc
loopne
or
test
add
jne
inc
pop
addb
dec
incl
int3
sub
popf
jae
cs
int3
stos
jle
inc
movsbl
dec
xchg
sub
fs
fisubrl
pop
and
sub
adc
enter
jnp
dec
jl
hlt
xor
adc
or
pop
push
dec
mov
les
mov
jae
mov
dec
fbstp
xchg
push
subb
xchg
or
daa
addr16
nop
and
bsf
cmp
dec
or
jb
aad
mov
pop
bound
xor
mov
ds
insb
outsl
daa
cmp
lds
dec
and
test
sar
mov
jo
fsubrl
aad
pop
insl
ljmp
push
push
mov
jecxz
mov
insl
mov
das
xchg
leave
repz
test
xchg
push
lock
mov
in
repnz
xor
inc
mov
mov
cmp
das
mov
dec
je
jb
sbb
add
and
jmp
xlat
jno
xchg
popa
and
xchg
sub
fdivrl
sub
hlt
leave
adc
sbb
insl
mov
pop
out
ret
adc
outsb
data16
mov
mov
sub
jl
fists
aas
addr16
sbb
cmpsl
ja
fmul
mov
pop
pushf
ds
pop
xor
and
test
pop
pushf
or
lea
jnp
test
das
iret
mov
pop
sub
mov
xchg
and
popf
test
out
cmpsl
inc
mov
xchg
push
dec
adc
fs
and
xor
cwtl
jl
lods
int3
pop
mov
sub
fwait
out
xchg
xor
and
js
and
cmc
cmp
scas
lds
xchg
loop
xchg
jle
add
out
pop
adc
cwtl
mov
dec
xchg
addr16
sarb
mov
adc
clc
cmp
in
aad
out
mov
movsl
pop
or
movaps
insb
shrb
jb
out
lods
push
std
scas
and
in
daa
dec
insl
lret
hlt
xor
xchg
test
rcr
ljmp
pop
push
aad
ficoms
or
jae
or
mov
icebp
test
lds
sbb
pop
enter
rolb
jns
xor
mov
mov
sub
int
cmp
shlb
test
pop
stos
daa
repz
lcall
outsb
stc
adc
push
dec
movsb
mov
push
fidivs
ficoml
stos
gs
icebp
jp
xchg
js
or
or
add
jmp
stos
out
loop
mulb
fcoml
out
adc
ds
adc
mov
mov
mov
dec
subl
add
test
mov
dec
or
loop
jge
fwait
mov
xor
push
repz
pop
fimull
pop
push
ljmp
and
je
mov
mov
sub
xlat
jo
test
fstps
push
inc
imul
fstpl
cmpsb
cwtl
fwait
sub
js
ret
outsb
dec
pop
jge
dec
enter
orl
xor
insl
mov
jne
rcrl
js
aaa
inc
mov
push
ljmp
dec
xchg
aam
mov
repz
clc
out
lret
xchg
mov
adc
ret
dec
xorl
nop
or
sub
fnstcw
mov
xor
stos
in
movsl
jp
loope
mov
jp
xor
std
mov
lea
and
addr16
inc
test
mov
enter
test
les
inc
pop
ret
push
mov
dec
push
sahf
je
mov
dec
das
xor
roll
aad
adc
adc
idivb
pop
testb
rcll
pop
dec
insb
cmpsl
sbbl
or
in
imul
xor
scas
out
cmp
into
push
loope
imul
pop
int3
mov
adcb
mov
dec
adc
inc
inc
fldl
mov
sub
xchg
pop
jne
insl
add
inc
xchg
das
ja
dec
js
lods
inc
clc
fisubrl
sti
cmp
and
pop
add
filds
ficoml
fisttps
daa
pop
pop
sub
add
or
push
push
xchg
mov
cmp
subl
out
adc
mov
adc
jle
std
dec
stos
cmp
shl
gs
dec
cmpsl
mov
pop
inc
dec
xchg
inc
js
mov
push
push
jbe
xor
cltd
sub
mov
jg
faddp
xchg
inc
repnz
mov
ljmp
mov
loop
jmp
pop
rorl
cs
xor
xchg
popw
lfs
and
mov
clc
and
pop
and
xchg
shlb
jl
outsl
push
insb
xchg
xchg
stos
jle
out
bound
push
cmp
xchg
cwtl
adc
mov
pop
imul
inc
shl
sbb
testl
sti
cwtl
fldenv
aas
dec
loop
jle
mov
push
out
push
arpl
adc
fdivrp
inc
cmp
xor
insb
outsl
test
sub
pop
sub
mov
aad
call
cltd
push
fcmovb
icebp
jmp
arpl
bnd
xchg
pop
inc
fimuls
mov
out
ljmp
data16
or
popa
mov
pop
xor
loope
out
dec
xchg
xchg
fimull
fldcw
adc
jne
sub
xchg
push
sub
sbb
push
push
arpl
loop
inc
mov
sahf
in
mov
lock
add
loop
lcall
loop
aad
gs
ljmp
xor
cwtl
or
jp
mov
shll
orb
xor
ds
test
or
shl
mov
xor
jl
js
sbb
pop
xor
ret
or
xchg
sbb
push
imul
mov
ljmp
mov
out
and
push
or
cmpsb
subb
lahf
xchg
mov
sub
jns
ficoms
pop
pop
ljmp
imul
std
sbb
daa
jae
ret
xchg
and
in
outsl
ljmp
adc
mov
add
push
xchg
xchg
mov
loopne
cmp
xchg
outsb
out
test
push
mov
mov
stc
dec
jns
pop
cwtl
add
mov
mov
push
subb
add
jmp
jno
pop
xlat
cmp
dec
enter
cmp
mov
mov
test
loope
in
sbb
je
popa
push
dec
sub
add
xchg
addr16
fistl
sub
shrl
push
leave
lock
sbb
aam
fcoml
push
bswap
out
or
sbb
fxam
repz
add
xchg
fwait
xor
subl
lods
dec
mov
sub
or
aam
mov
movl
ja
mov
dec
xor
xor
sbbl
and
pop
push
or
std
add
cmp
call
mov
mov
mov
nop
xchg
pop
mov
jbe
xchg
int
mov
inc
mov
push
test
pusha
mov
adc
mov
mov
call
mov
fisttps
xor
leave
sbb
icebp
mov
rol
xor
or
inc
xor
sti
xchg
and
dec
or
iret
xor
aas
fstpl
leave
outsl
ljmp
mov
inc
xor
push
out
jp
lea
out
repnz
and
ds
jmp
std
cmpsb
test
xchg
mov
cmp
in
fisubrl
xor
das
cmp
or
mov
xchg
and
push
popf
mov
pop
cli
or
dec
mov
rclb
call
fs
jmp
mov
cmp
fldl
daa
std
and
fs
push
aas
lret
cld
jge
mov
mov
mov
scas
filds
lds
cmp
xchg
cltd
and
out
mov
js
test
ja
push
pop
fiaddl
jns
sbb
scas
outsl
xor
fimull
movsl
dec
lods
mov
add
add
mov
sub
dec
add
pop
dec
fistpll
ljmp
test
or
push
test
xor
outsb
push
mov
test
push
das
aas
out
out
xchg
push
pusha
mul
inc
filds
mov
popa
jmp
and
psubb
shll
scas
mov
cmc
inc
pushf
stc
add
jo
cmc
xor
lahf
jl
sbbb
mov
xchg
inc
ds
and
xrelease
jbe
lcall
cltd
pushf
or
inc
sbb
sub
cmp
iret
push
adc
fstps
cmpsl
cmp
aam
leave
arpl
fldenv
adc
and
call
xchg
push
scas
push
mov
outsl
add
leave
popf
movsb
inc
or
mov
pop
mov
das
adc
mov
jne
scas
jo
mov
sbb
incl
jge
jmp
mov
adc
dec
cmc
ja
not
sbb
jne
cmp
jl
iret
mov
pop
fbstp
sti
mov
xlat
fstpl
sbbb
pop
sbb
or
nop
pop
fcoms
fstpl
inc
mov
shll
xor
test
jge
jb
and
sahf
gs
int3
icebp
mov
rol
push
pop
scas
add
xchg
pop
out
lods
movsb
inc
mov
inc
out
out
inc
jno
jg
xor
arpl
cmp
outsl
or
xchg
es
loop
lret
inc
rcrb
and
push
dec
dec
pop
cmc
emms
aas
xor
cmp
fucomp
hlt
pop
pusha
dec
fmul
jb
cmp
xlat
stos
cld
cmp
mov
mov
inc
or
jnp
mov
pop
sub
movsb
or
dec
into
push
xor
pushf
push
cltd
and
and
stc
sbb
pop
dec
and
or
jmp
mov
mov
shrb
fwait
cmp
ja
pop
jmp
inc
movsl
fwait
add
jno
popf
bound
cltd
push
dec
or
xor
sti
stc
mov
inc
mov
icebp
movsb
mov
mov
pop
cmp
cmp
mov
mov
mov
jl
bound
jns
xchg
mov
cmp
xchg
movsb
loop
mov
aas
push
pushf
mov
sbb
pop
andl
cli
dec
pop
mov
xor
fists
aad
xor
inc
js
ja
sbb
std
xor
mov
pusha
rolb
sbb
sbb
cmpsl
out
cmc
cmpsl
stos
pushf
inc
loope
push
repnz
xor
push
jle
adc
popa
adc
jp
and
jb
push
xchg
test
add
aas
clc
sbb
ds
mov
push
and
call
sbb
je
mov
mov
fcoms
mov
pop
xor
out
push
mov
lret
mov
cmpsb
rcrl
add
std
or
inc
sbb
and
mov
jle
repnz
pop
ss
cmp
pop
jno
fstp
sahf
cltd
push
fwait
insl
mov
adc
mov
mov
pop
pop
addb
cmc
sahf
sbb
and
dec
mov
xlat
xchg
jl
stos
arpl
push
loopne
push
int
xor
mov
pop
cs
fcomp
inc
testl
push
pop
inc
call
test
or
enter
and
or
pop
push
repnz
and
mov
and
jb
or
dec
pop
data16
xchg
cli
cmpsb
ds
movsl
out
cmp
xchg
les
test
test
outsb
mov
neg
xor
addb
jl
shl
mov
mov
mov
stos
mov
and
mov
xor
orl
dec
jne
sub
push
enter
push
pop
jle
pop
jo
mov
mov
cmp
jmp
shrl
sbb
mov
push
into
xor
in
sbb
mov
push
sub
cmpsl
iret
shrl
stos
lds
insl
add
in
ss
sbb
dec
rol
dec
test
imul
jle
pop
imul
cli
leave
xor
jb
fdivrl
loopne
test
xlat
hlt
jmp
insl
mov
cmp
xor
pushf
cmp
adc
lret
cmp
add
inc
lods
push
loopne
stos
es
sub
and
xorb
enter
push
inc
xchg
sbb
outsb
mov
mov
push
stc
push
mov
xor
rcrl
jae
dec
mov
add
insl
insb
rolb
outsl
sbb
scas
call
or
and
pop
jbe
fidivs
jg
inc
or
iret
daa
iret
nop
or
add
and
dec
cmpsl
dec
jle
add
jecxz
out
outsl
pop
fldt
mov
push
lahf
cmpsb
popl
pusha
loopne
rolb
sbb
pop
sarl
lret
aam
fsubs
add
jge
pop
shrb
mov
sbb
movsl
out
outsb
rcll
mov
scas
mov
xor
xlat
cmpl
inc
clc
xchg
push
xchg
and
xchg
es
jp
lock
or
loopne
pop
sbb
mov
mov
sub
iret
fidivrl
mov
pop
cmpsb
lock
ficomps
mov
cmp
push
xchg
jb
std
or
pop
dec
mov
js
mov
movsb
stos
adc
xor
call
mov
andb
push
aaa
enter
push
imul
fstpt
js
imul
bsf
fistl
xchg
popf
pop
sbb
enter
in
aaa
clc
gs
clc
xlat
lret
lret
pop
in
lock
jmp
jnp
add
cmpsl
stos
in
push
mov
leave
insl
lds
pop
sti
cmpsl
scas
jnp
mov
fnstenv
mov
add
ss
inc
adc
add
inc
and
push
std
jnp
mov
xlat
and
gs
xchg
or
push
xor
fisubl
jecxz
jns
mov
mov
movsl
inc
leave
mov
sub
test
movsb
scas
pop
dec
mov
jle
push
xchg
inc
sub
and
in
sbb
loope
fistps
lea
cmpsb
fldenv
or
dec
lret
iret
aad
mov
adc
inc
inc
push
push
xchg
push
scas
clc
xor
sbb
cmpsl
xchg
dec
sub
scas
or
add
mov
xchg
and
mov
rclb
inc
xchg
xor
loope
add
xchg
cmp
aad
push
jmp
fldenv
in
fldl
inc
adc
push
jg
dec
mov
aaa
shl
xchg
pop
mov
add
fs
jne
adc
jne
add
lods
movsb
jo
mov
pusha
adc
icebp
mov
dec
cli
std
loope
stos
push
loop
jbe
sub
fadds
sub
or
imulb
mov
xor
dec
pop
ljmp
insl
sub
out
dec
lret
xchg
icebp
iret
inc
icebp
push
fimull
mov
cmp
cmp
lahf
aaa
movsb
arpl
mov
pop
mov
xor
nop
loope
dec
push
sub
and
sub
pop
xchg
cwtl
lds
cmc
dec
xor
lret
jnp
or
add
sub
stos
in
daa
mov
ds
outsl
and
scas
in
andl
repz
test
aam
sbb
ret
adc
jp
and
sbb
fwait
fwait
dec
cld
int
push
into
incl
and
push
psubsw
sti
inc
in
pusha
sbb
lds
or
sbb
fsubrs
fdivrl
data16
ss
sub
pop
cmpsb
xchg
rcl
and
insl
mov
mov
jp
in
jmp
std
push
xchg
pop
xlat
xchg
xor
jno
imul
flds
push
and
addb
sbb
cli
lods
sbb
push
pop
cltd
mov
frstor
data16
aad
in
pop
lahf
test
test
stos
adcl
xchg
add
mov
inc
adc
in
pop
mov
push
cmpsb
mov
sbb
sbb
and
xor
mov
add
push
insl
movsb
or
xchg
push
test
pop
outsb
lret
cli
and
rorl
push
in
sub
xchg
push
jmp
push
fsubr
jno
outsb
xlat
mov
dec
lds
mov
loope
pop
leave
or
clc
or
inc
lret
movsl
sarl
and
inc
mov
adc
mov
dec
mov
jmp
scas
aaa
test
outsl
inc
cltd
aad
mov
out
xchg
sub
inc
jns
test
aas
into
sbb
ret
mov
push
mov
sub
out
inc
addb
in
cld
and
movsl
add
mov
lods
mov
inc
and
nop
movsb
xor
cmp
mov
cmc
mov
dec
mov
adcb
je
movsb
mov
and
lea
dec
mov
push
xorb
in
popa
push
push
pop
je
lea
scas
gs
xchg
outsb
dec
ss
push
fcmovu
mov
into
xor
daa
xlat
fwait
xchg
xor
stos
push
scas
mov
mov
daa
daa
lahf
pop
les
fs
fldt
sti
lock
std
mov
jnp
push
insb
pop
inc
cmp
or
or
mov
lahf
pop
mov
out
push
cwtl
fsubs
loopne
mov
out
imul
push
imul
fcoms
out
sbbb
fdivs
adc
ljmp
push
insl
ret
jns
pop
mov
xchg
pop
scas
sub
cmp
out
pop
or
sub
call
mov
ds
popf
shl
inc
push
or
in
add
jg
push
sahf
loop
cli
das
xor
scas
xchg
in
sbb
fsubrl
xor
xchg
xchg
mov
and
in
aam
cmp
xchg
dec
mov
add
jle
pop
ss
pop
dec
and
xchg
sarb
fwait
adc
fcompl
dec
outsl
mov
mov
push
push
adc
sbb
jo
fwait
loop
push
xchg
mov
mov
aaa
vunpcklpd
or
jns
aam
mov
lret
out
mov
lds
jb
inc
and
data16
sbb
insb
pushf
xchg
das
adc
int
fwait
add
sub
sub
jns
leave
pop
mov
push
ret
repnz
cltd
mov
xor
imul
adc
mov
mov
and
movsl
push
push
test
std
in
out
mov
in
mov
hlt
cmpsb
adc
pusha
loope
cmp
pop
fnsave
stos
pop
adc
sti
rolb
inc
add
pcmpgtw
loop
in
inc
jne
pop
ret
lds
and
dec
outsb
test
xchg
mov
push
js
stos
ds
loope
mov
bound
test
mov
jno
stos
jp
xchg
mov
stc
xchg
pushf
mov
sti
lods
cmp
xor
aam
mov
xor
and
dec
int
movsl
or
cmp
jns
call
in
cmp
arpl
inc
jmp
mov
outsl
sub
adc
and
jae
mov
mov
ja
test
mov
sbb
xchg
push
out
mov
sub
rorl
jbe
or
movsl
loopne
adc
orb
dec
mov
aam
pop
out
ljmp
stos
cltd
lock
sub
outsl
cwtl
addr16
jecxz
push
xchg
xchg
mov
mov
test
movsb
sbb
jae
pop
pop
adc
or
repz
mov
cmp
addr16
mov
jnp
incl
scas
pusha
fs
sbb
push
sbb
test
out
pop
add
pop
xchg
xchg
dec
xchg
sub
add
push
xlat
movsl
fwait
cli
xchg
mov
cmc
push
call
push
mov
cmp
push
mov
out
movsl
pop
aam
mov
push
pop
lcall
ss
xchg
sub
int
bound
movsb
les
mov
inc
xlat
bound
aad
leave
jg
adc
rorb
adc
xor
mov
fbstp
sub
jb
xor
out
adc
sub
mov
test
mov
test
data16
fdivs
jne
das
gs
insb
xchg
andl
je
test
rcll
scas
lds
xchg
stos
rcrb
add
sbb
pop
xchg
sub
mov
and
dec
lds
mov
mov
rclb
cmp
out
lea
pop
fwait
jnp
cmp
pop
das
adc
xchg
insb
push
push
add
xchg
jl
inc
xchg
fucom
rcrl
cmp
xchg
xor
hlt
and
and
xor
adc
jg
mov
out
or
push
lods
inc
subl
adc
adc
mov
mul
ja
gs
pop
repz
rolb
lods
fs
roll
mov
adc
cli
jl
jp
ret
mov
int3
shrl
push
insb
sub
mov
mov
jl
and
sub
jge
jp
add
and
ljmp
dec
xor
jecxz
ret
into
or
flds
and
jg
adc
andl
mov
call
popf
mov
cmp
mov
je
int3
out
lock
dec
add
ljmp
cmpsb
es
or
or
xor
es
and
jo
ds
test
xlat
dec
ds
lahf
add
clc
arpl
cmc
xchg
call
fwait
aad
insl
call
push
pop
sti
jnp
mov
mov
ss
ljmp
sub
xor
mov
ror
scas
les
dec
fisubrs
ficoml
out
lods
cmc
out
stos
add
and
mov
cmp
inc
inc
sub
notb
imul
aaa
add
aad
sub
add
lods
insb
mov
jno
mov
and
fistps
cmp
cwtl
leave
or
cmc
cmp
inc
push
mov
stc
mov
and
cs
fldt
add
clc
push
repz
fdivrs
cld
xchg
pop
test
sbbb
cmp
sahf
inc
mov
mov
adc
hlt
mov
mov
stos
and
xlat
mov
out
jnp
mov
mov
pop
and
or
jnp
xchg
sqrtps
mov
inc
push
and
pop
add
add
push
jmp
adc
sti
repz
sub
ljmp
call
adc
push
fstpt
outsl
testl
loopne
lret
insb
or
mov
xor
je
pop
arpl
insl
adc
cs
lret
lock
test
xchg
sub
lds
sbb
jmp
mov
std
cmp
push
mov
popf
adc
pop
dec
aad
sbb
imul
out
incb
jg
jne
mov
xchg
xorl
adc
pop
enter
xor
pcmpeqw
pusha
bound
push
pop
push
call
mov
sbb
das
mov
add
jmp
adc
icebp
ret
push
call
faddl
lods
jno
cmpsl
mov
negl
ja
pusha
add
int
stos
cmpsl
dec
sbb
out
dec
call
fimuls
add
adc
xor
inc
nop
sub
stos
clc
idiv
enter
shl
pushf
icebp
mov
mov
stos
and
and
fs
test
jae
inc
ret
add
jo
jp
add
shll
add
out
addr16
outsb
push
xor
repz
cmp
xchg
adc
imul
sbb
popl
mov
xchg
mov
fnstsw
inc
addb
pushf
add
sub
ja
push
ds
outsb
lods
push
popa
jno
sub
pushf
sub
mov
jle
cmpl
ror
lahf
xchg
cli
lahf
push
imul
and
addr16
jno
pop
icebp
add
fs
outsl
fidivrl
loope
sub
mulb
fst
inc
sbb
and
add
popf
pop
aam
sub
flds
stos
cmp
sub
jmp
ss
fdecstp
outsb
ljmp
iret
ret
mov
nop
lock
mov
loop
and
adc
jecxz
inc
jg
inc
push
push
inc
push
bound
fldt
and
jle
push
push
icebp
out
adc
ljmp
lcall
mov
stos
cmp
imul
or
push
xchg
out
mov
pushf
or
aas
fdivrp
lea
xor
lods
or
ss
xchg
into
cmc
jecxz
pop
ss
jb
xchg
out
test
stos
in
xor
xor
lret
shl
or
cltd
or
jbe
hlt
scas
repz
xchg
mov
xchg
sbb
or
xchg
mov
std
cmpsb
jo
jg
pop
scas
pop
adcb
mov
lret
inc
ret
lods
es
adc
sub
js
pop
loopne
cmp
adc
jo
std
xor
stos
cmp
xchg
fistpll
js
repnz
sub
test
sbb
cltd
rcr
into
jno
xchg
leave
into
aaa
loopne
mov
dec
mov
out
inc
xlat
cld
test
xchg
mov
rcll
dec
sbb
fstl
ljmp
push
mov
or
ret
mov
sub
mov
mov
xorl
inc
outsb
xchg
jmp
add
fcmovnbe
fsubrl
pop
xor
sub
cmpl
jecxz
pop
cmp
xchg
enter
push
sbb
push
jp
or
dec
push
leave
pop
jg
ret
or
push
andb
das
mov
hlt
xor
incb
pop
mov
testl
xlat
push
push
movsl
xchg
adc
bound
stos
dec
jo
movsb
ja
mov
ljmp
xchg
inc
adc
vpaddusb
repnz
jmp
adc
add
and
cmp
push
xlat
aaa
xchg
jnp
xor
int
stos
ss
or
test
jb
and
cmp
sub
movsl
push
push
cmpsl
inc
mov
js
xor
push
lock
sahf
imul
scas
aam
rcrl
lea
dec
test
lods
imul
arpl
adc
ffree
mulb
rol
adc
es
mov
xorb
icebp
scas
or
inc
push
sbb
mov
pusha
xchg
push
sub
pop
loopne
mov
push
push
ret
sahf
flds
lea
mov
mov
jg
in
das
scas
out
add
mov
mov
in
and
mov
pop
xor
and
or
inc
ja
pop
rcll
or
fadd
push
loop
ret
divl
fdivs
pop
mov
jle
cwtl
je
lret
insl
jbe
lahf
flds
hlt
dec
jae
pop
push
stos
sbb
jl
data16
aas
pop
pop
add
and
add
in
mov
sarl
jmp
lods
out
lods
mov
add
test
dec
jb
std
mov
cmp
cmp
push
mov
adc
pop
data16
imul
mov
out
and
out
ficoms
xadd
dec
idivb
mov
pusha
sahf
mov
sarb
push
data16
sub
or
and
insb
cmp
fnsave
sbb
rclb
in
rcrl
outsl
push
sub
insb
cmp
mov
push
mov
sub
xor
inc
cmpsl
pop
add
xor
pop
cld
sub
sbb
gs
leave
fwait
push
ljmp
and
mov
test
test
fcomps
in
mov
push
loopne
xor
xchg
xchg
xchg
mov
push
mov
leave
or
xor
popf
iret
popf
ss
cmpl
sbb
mov
xor
sahf
shlb
fucomp
mov
lock
or
add
dec
aaa
mov
xor
pop
inc
sbb
pop
adc
repnz
in
adc
sbb
inc
cmp
push
imul
scas
lods
test
rcll
pop
ficompl
js
add
imul
out
push
mov
xor
ret
adc
push
pop
sbb
out
bound
pop
push
or
dec
jecxz
inc
cmpsl
mov
js
outsb
xchg
fdivrs
pop
inc
into
in
mov
int
jnp
cli
mov
test
jp
cmpsb
call
test
mov
cli
repnz
mov
stos
mov
pop
daa
aas
out
cmp
pop
insl
mov
rolb
ds
fsubr
inc
mov
faddl
shll
mov
movsb
inc
mov
mov
std
cmp
add
enter
nop
in
aas
sbb
add
push
xchg
pop
fcoms
rorl
jo
adc
xlat
outsb
or
and
int3
dec
lods
movsl
add
cmp
in
jge
pop
sub
jne
jmp
push
icebp
imulb
push
xlat
movsb
mov
jmp
push
adc
add
xchg
arpl
jno
and
jbe
mov
inc
imull
fistps
xchg
jne
sbbb
negb
inc
ficomps
xor
push
dec
mov
fiaddl
shlb
pop
cmc
mov
mov
pusha
test
cmpsb
jns
or
lahf
cmc
shll
pop
lret
push
ds
xchg
fmuls
sti
lods
roll
in
inc
repz
dec
xchg
add
mov
add
lret
insl
lahf
jbe
loop
xchg
pop
outsl
movsl
jge
into
mov
or
leave
mov
sbb
mov
or
filds
loope
les
cmp
ja
jae
popf
scas
leave
imul
lds
lods
sbb
fsubs
call
mov
fistpll
inc
inc
cmpsl
dec
inc
xchg
rorl
cli
aas
sbb
sar
stc
addl
push
movsl
cmp
sub
adc
out
ljmp
iret
mov
cli
insl
pop
sarl
dec
shl
adc
ds
pop
mov
call
sbb
xchg
popa
lock
bsr
push
clc
push
mov
ret
mov
xchg
pop
enter
xor
ja
cmp
cmc
jecxz
adc
ret
cmp
ret
jecxz
pop
call
movb
das
imul
stos
mov
addr16
dec
insb
pop
inc
push
cmpsb
inc
cmp
xchg
js
leave
rcll
xor
loop
xor
jl
cmp
lea
clc
mov
fiaddl
out
mov
xchg
or
leave
dec
jge
aas
sub
jge
lea
mov
addr16
sub
xchg
dec
and
xor
jns
xchg
cmp
movb
pop
xchg
jmp
in
aas
in
xchg
aad
cmp
or
jo
sbb
xchg
mov
enter
mov
push
outsb
int3
negl
outsl
jno
fiadds
push
les
pop
imul
fstp
test
leave
sbb
maxps
arpl
mov
add
mov
mov
inc
adc
pop
push
aas
sbb
dec
xchg
mov
jge
into
jns
sub
add
cmpsl
push
adc
popa
cmp
ljmp
mov
loope
sbb
sbb
xchg
or
pusha
mov
or
roll
lea
cltd
pop
daa
and
cwtl
xchg
pop
sub
jae
and
mov
out
push
mov
mov
cwtl
sub
fidivrs
out
push
sub
dec
imul
mov
jl
sub
mov
js
fstpl
push
mov
call
mov
shr
mov
pop
xor
orb
jne
inc
jle
jnp
push
test
ja
test
in
xor
dec
imul
lock
adc
dec
mov
or
cmp
pop
adc
jmp
je
dec
jbe
or
in
mov
mov
test
jg
scas
lods
jp
jp
mov
rcrb
ds
cmpsb
cmp
fbstp
sahf
shll
mov
js
and
push
jb
outsb
push
adc
mov
and
data16
and
inc
iret
enter
test
and
fadd
and
scas
jge
mov
sub
inc
push
fidivrl
inc
loop
insb
loopne
cmp
pop
mov
mov
les
add
cmp
aad
mov
ljmp
mov
loop
cmp
fdivl
cmp
mov
clc
jno
mov
add
scas
enter
xor
dec
mov
movzbl
shrl
xor
or
loop
out
lret
mov
in
test
dec
fldenv
push
push
sub
jle,pt
repz
enter
sbb
mov
inc
xchg
repnz
and
das
jp
sarl
sub
cmpsl
inc
dec
mov
mov
lahf
xor
outsb
mov
insl
shrb
sub
cmp
push
cmp
sub
repnz
imul
rclb
xorb
daa
push
rorl
cs
mov
loop
movsl
sbb
imul
push
pop
mov
bound
scas
mov
pop
int3
loopne
test
sbb
mov
xchg
xchg
mov
movl
and
mov
sbb
sub
mov
pop
adc
fsub
int
mov
loopne
int
xchg
jno
adc
sub
js
adc
cmp
add
push
push
sbb
xchg
in
push
inc
dec
sub
repz
fidivrs
mov
xchg
icebp
adc
icebp
jge
clc
xor
and
and
popf
out
mov
inc
sub
repnz
adc
mov
notl
out
aad
cmc
icebp
pop
leave
cmp
daa
movsb
jl
sahf
std
mov
sub
cmp
lahf
mov
mov
ds
rorl
or
pop
stos
jg
inc
lea
xor
mov
pop
testl
pop
iret
negl
inc
mull
pop
inc
cli
cs
mov
dec
aas
sti
dec
faddp
or
cwtl
inc
stc
mov
adc
push
add
pop
xchg
arpl
decl
mov
outsl
inc
jmp
inc
mov
inc
dec
or
mov
adc
int
fs
ret
arpl
sbb
out
js,pn
and
pop
jo
insl
out
outsb
movb
mov
adc
pop
sbbb
push
dec
push
das
test
out
push
and
cmp
addr16
cli
test
clc
lahf
and
inc
sbb
cmp
out
or
fldl
mov
xor
pop
call
dec
pop
nop
mov
mov
in
rclb
or
stos
add
pop
pop
loopne
inc
pop
inc
pop
data16
rolb
call
sbb
into
js
and
in
push
das
or
ja,pt
es
mov
insl
sbb
clts
sub
fidivl
test
sub
mov
mov
les
out
fnstenv
jecxz
adc
xor
and
mov
mov
add
and
or
icebp
lahf
mov
aas
add
not
rolb
and
add
xchg
fstl
cmp
insl
stos
scas
xchg
inc
pop
xor
mov
mov
ljmp
adc
cld
adc
inc
outsl
nop
lret
bound
mov
push
mov
cmc
clc
sbb
clc
mov
test
pop
mov
mov
sub
shll
dec
mov
jno
mov
lcall
adc
push
pop
push
push
jne
roll
add
xor
xlat
dec
mov
xor
jae
ret
ljmp
sub
jecxz
jecxz
cwtl
lds
cli
xor
daa
jmp
adc
cmp
adc
or
xor
mov
clc
pop
lods
dec
js
outsl
push
dec
adc
xor
decb
pop
aaa
push
sbb
xor
mov
fwait
adc
lods
xor
loop
popa
mov
dec
int
sub
pop
enter
jge
sbb
aad
cmp
mov
jmp
enter
imul
fdivrl
ss
aam
push
inc
sub
push
ds
add
outsl
movl
outsb
pop
hlt
push
sub
xor
push
xor
add
popa
and
push
xchg
mov
push
cwtl
lret
cltd
or
lds
andb
mov
inc
inc
lahf
scas
inc
int3
sub
aad
xor
sahf
xor
std
push
les
movsl
sub
mov
lcall
pop
fs
mov
cmp
cld
mov
mov
loop
addr16
jns
fidivrl
aam
ds
mov
push
dec
sub
or
fistpl
xor
sbb
adc
ficomps
stc
loopne
add
pop
inc
loop
shrb
push
fwait
mov
daa
pusha
adc
jb
fistl
pusha
adc
std
loope
push
push
push
lret
sub
ljmp
jo
cmp
ds
mov
scas
pusha
outsb
icebp
xchg
inc
xlat
and
int3
repnz
mov
sbb
lret
xchg
mov
sub
push
push
xchg
dec
iret
lahf
push
clc
mov
adc
fildll
cmp
lret
shrl
xchg
fldt
jns
dec
andl
cmp
icebp
mov
jle
cld
xchg
ljmp
dec
out
or
sbb
movb
in
imul
adc
leave
pop
sbb
ret
hlt
icebp
lret
mov
dec
or
jp
out
or
jge
dec
jecxz
jno
sbb
stos
mov
or
icebp
xchg
idivl
push
sahf
xchg
in
push
ds
in
mov
jbe
stc
inc
in
test
out
lods
pop
pop
lock
negb
inc
mov
mov
inc
mull
pushf
scas
movsl
or
stos
and
mov
or
cmpsb
call
mov
push
sbb
jbe
mov
cmp
and
mov
dec
stos
in
mov
pop
in
adc
inc
push
xchg
shll
sub
out
out
nop
fwait
jp
ljmp
das
xor
iret
cld
add
cmp
into
xor
test
cld
ds
adc
xlat
sub
lock
pop
out
repnz
jmp
lret
movsb
out
add
jns,pn
sub
out
jnp
std
into
push
xchg
and
push
cmp
add
and
mov
out
sbb
out
aad
mov
sti
cmp
push
lcall
dec
out
in
add
fmull
mov
push
sub
jle
movl
cmpsl
pop
xor
imul
sti
pop
pop
jnp
leave
ljmp
xor
push
scas
mov
mov
sbb
ret
insl
and
iret
xor
aam
inc
push
cmp
ljmp
popf
lds
hlt
daa
xchg
cmp
mov
orl
movsl
ljmp
cmp
cmpb
mov
mov
mov
std
jo
popf
mov
inc
movsb
jb
jnp
mov
mov
jmp
fwait
enter
repz
mov
leave
mov
andl
mov
cmpsb
stc
cmp
jbe
int3
and
rcl
mov
mov
mov
mov
rorl
out
jo
es
push
push
cld
idiv
pushl
mov
mov
dec
mov
add
leave
xchg
in
and
inc
arpl
ret
mov
cmp
mov
dec
cwtl
push
cli
inc
pop
mov
mulb
mov
mov
inc
loop
int3
popa
xor
test
inc
and
adc
rcrl
in
sub
js
sub
and
cmp
ret
xchg
rolb
xlat
fs
out
ret
xor
insb
inc
xor
inc
outsl
out
insl
dec
sub
cmp
fnstenv
dec
xchg
imul
add
das
shrb
mov
les
scas
stos
ja
push
xchg
mov
ret
sbb
xchg
in
insb
out
push
mov
call
pop
fldt
cmc
push
jns
or
inc
les
or
sub
jbe
mov
jo
xor
inc
mov
lcall
pop
testb
imul
cmpsb
push
pop
cmp
mov
nop
mov
pushf
js
fs
or
adc
shl
ret
in
and
pop
lret
rcll
inc
add
mov
popf
mov
inc
in
pop
pop
or
cmp
cmp
test
lods
ss
cmp
mul
pushf
push
mov
cld
out
jo
pop
add
pusha
js
outsb
loop,pt
add
sub
cmp
cld
js
mov
add
in
xor
adc
ljmp
fwait
lods
cmp
ss
aad
ja
cltd
sbbb
aam
in
sub
adc
arpl
cmpsb
push
jl
and
mov
std
fnstcw
inc
jae
movsb
testl
jo
cli
cld
cli
add
loope
or
scas
test
into
jno
cli
sbb
aas
outsl
mov
movsb
xchg
adc
push
fs
jb
cmc
rcrb
out
or
cmp
in
leave
movsb
rcr
jmp
add
pop
nop
test
cmp
pushl
pusha
dec
adc
ss
roll
dec
das
add
push
ss
lods
inc
sbb
imul
mov
xor
cmp
mov
adc
aas
and
pop
insl
cs
mov
test
test
lahf
push
jnp
pop
bound
pop
push
bswap
nop
xor
inc
xchg
test
arpl
add
inc
shlb
mov
xor
scas
inc
and
loopne
pop
test
xchg
jns
stc
xchg
or
add
andl
icebp
sti
xor
inc
cli
jl
loop
repz
pushf
dec
adc
pop
mov
shl
sbb
jne
mov
push
imul
loope
ds
pop
mov
adc
js
test
jg
and
push
gs
ss
jno
leave
test
mov
and
mov
xor
je
andl
jl
js
mov
movsb
loope
cmp
dec
aas
fstps
outsb
sub
pop
ja
jle
mov
push
nop
xchg
adc
cmp
scas
shlb
cmp
jne
push
mov
enter
sahf
loopne
push
xlat
inc
sub
cmc
in
int
sbb
insl
cmpsb
or
rclb
out
ss
mov
aas
roll
mov
jmp
mov
mov
movsl
jl
add
repz
ret
adc
cwtl
inc
and
mov
lea
std
out
out
stos
insb
jo
or
xor
sub
insl
jmp
je
iret
out
or
js
xor
xchg
jp
cmp
aaa
and
enter
das
and
xor
push
mov
icebp
push
fs
cmc
popa
and
adc
inc
sar
xor
outsl
leave
bound
jmp
push
lds
shrb
lcall
aam
push
mov
jae
popf
pop
mov
fcmovne
std
push
sub
xchg
xchg
int3
dec
adc
shl
mov
dec
dec
lds
loop
push
adc
insl
lods
ret
xchg
dec
add
add
out
das
cmp
iret
test
mov
inc
lcall
xor
mov
sub
dec
imul
or
mov
testb
int3
sub
sub
cmpsb
mov
mov
mov
adc
sahf
dec
insb
inc
sub
adc
outsb
push
jo
into
push
push
push
cmp
pop
mov
in
test
cld
test
mov
ror
adc
lahf
push
mov
mov
stc
pop
ljmp
in
test
mov
jno
xchg
aas
dec
cmpsb
xchg
jg
iret
flds
and
andl
rorl
int
xchg
mov
insb
loop
pusha
fildll
mov
stc
push
jae
ficoms
push
stc
mov
lcall
ret
xchg
shrl
fimuls
pminub
fwait
and
lcall
cld
sarl
mul
sarl
call
ja
dec
es
add
or
in
xchg
add
cmp
nop
test
xchg
push
inc
loop
cmc
jmp
inc
popa
enter
or
inc
xor
insb
insl
xchg
fistl
es
dec
pushf
mov
addr16
iret
stc
mov
fsubs
into
rolb
add
sbb
sub
and
jle
fiadds
dec
inc
enter
mov
xchg
xor
cmp
stos
sub
popa
or
fisubrl
aad
bound
adc
sbb
movsb
jmp
cmp
popf
out
cmp
pop
dec
adcl
and
pushf
and
fisubrl
lret
pop
mov
inc
out
push
ret
in
lea
call
pop
loopne
dec
xchg
mov
mov
inc
pusha
xchg
cmc
rorl
mov
mov
std
sub
les
mov
stc
sbb
and
mov
leave
xor
jp
popa
pop
std
mov
jns
fistpl
xor
and
rorl
in
jl
shrl
popa
or
lret
pop
into
push
sbb
mov
push
or
sub
iret
xchg
idivl
gs
jnp
movsl
cmp
xchg
loop
ja
inc
and
push
push
incl
jp
push
mov
loop
les
imulb
mov
in
mov
icebp
out
roll
add
fs
fsubrl
nop
inc
push
scas
test
pop
xchg
mov
push
pushf
pop
push
test
and
ret
sbb
add
jns
push
cmp
out
in
jbe
sahf
or
shr
int
pop
push
ljmp
jmp
and
fisubrl
insl
fcompl
pop
inc
into
in
pop
pop
fistl
shll
and
pop
pop
loop
bound
cmpsb
popf
mov
mov
add
scas
je
and
popa
and
ss
and
js
divb
mov
filds
stos
dec
popa
and
inc
push
adc
mov
movsl
das
mov
mov
lods
test
jle
push
or
or
dec
mulb
mov
fistps
cli
lret
pcmpgtb
pop
insb
rorb
jmp
test
lahf
cli
fs
loope
jno
arpl
aaa
cli
je
adc
out
or
cmp
mov
lea
mov
jae
xchg
pop
jg
and
jae
xchg
ret
repz
mov
jp
out
daa
test
sbb
push
pop
test
lea
imul
push
jmp
xor
xor
cmp
sbb
ficoms
enter
push
push
test
adc
add
mov
ss
mov
out
jnp
sub
scas
data16
pop
fstps
lea
mov
enter
fs
jg
popa
and
inc
cmp
lods
dec
sub
aaa
mov
mov
loope
push
out
mov
cltd
out
jae
inc
pop
add
add
lds
jl
add
enter
mov
fs
and
xchg
or
jne
add
add
adc
sub
in
xchg
xchg
lods
stos
roll
mov
jo
aaa
inc
lahf
push
mov
lods
sti
cli
jmp
addr16
ja
push
cmp
pop
es
dec
jb
xor
or
mov
test
jl
xchg
xchg
andb
mov
fucomip
inc
mov
cmc
cmp
mov
loope
mov
sbb
mov
xchg
aas
xchg
adc
add
push
sub
sub
mov
xor
scas
jmp
insb
push
inc
aad
fistps
notb
jge
or
mov
fnstcw
pop
rcll
iret
jmp
andl
adc
jb
mov
aas
dec
adc
push
adc
aad
sub
sub
adc
mov
xchg
outsl
stos
pop
push
leave
xor
insl
pop
divl
mov
push
add
mov
inc
mov
cmpsb
subb
std
sub
push
xor
fisubrl
out
iret
popa
sub
pusha
hlt
mov
inc
mov
shll
mov
xlat
adc
dec
enter
add
or
mov
imul
dec
jb
jl
scas
data16
sub
je
xor
loope
icebp
adc
loopne
fsub
fcmovnu
jg
pop
inc
or
fs
mov
xor
push
cltd
xchg
mov
or
xor
xchg
push
mov
insb
pop
sub
xchg
push
ret
pop
sub
mov
lods
xor
add
scas
sub
lret
enter
pop
fisubrl
dec
jno
sbb
mov
arpl
addr16
mul
ds
inc
sbb
or
xchg
lea
hlt
adc
push
mov
mov
xchg
icebp
jecxz
std
push
jns
push
pop
jbe
rclb
data16
inc
inc
lcall
lret
das
mov
shl
and
mov
dec
push
push
inc
xchg
jge
icebp
loop
dec
push
aad
les
mov
mov
pop
pop
fidivl
dec
stos
jb
xchg
daa
ljmp
pushf
mov
mov
jno
pop
cmpsb
loop
adc
bound
stc
mov
fs
bound
jnp
clc
icebp
xchg
xchg
xchg
fisubrs
inc
sbb
sti
pop
adc
test
sub
xchg
shll
inc
mov
dec
fstp
in
loopne
mov
mov
add
and
daa
push
mov
subl
test
jp
fisttpll
dec
call
cmp
ret
add
mov
mov
sub
test
fistpll
dec
shlb
ljmp
inc
scas
testl
dec
and
push
lret
jb
mov
inc
push
pop
insb
ret
ret
adc
cmp
mov
sub
out
shrl
mov
pop
ljmp
push
jg
fcoml
divl
jnp
sub
xor
dec
dec
incl
adcb
inc
jl
lods
outsl
and
pop
push
cmp
xor
test
dec
cmp
int
es
push
ret
xchg
xlat
sub
add
in
lahf
and
scas
popf
mov
fcomps
sbb
stc
push
and
pop
cmp
sub
imul
shr
jge
mov
mov
and
ja
xchg
push
jns
mov
xchg
jns
mov
push
enter
shlb
lldt
add
mov
jle
mov
ret
les
mov
cmp
fiaddl
mov
in
bound
xchg
lods
jp
xchg
mov
out
packssdw
scas
rorb
add
cmpsb
divb
adc
aas
or
sub
push
out
push
inc
mov
push
mov
out
xchg
jge
lahf
hlt
dec
repnz
mov
gs
mov
and
sub
insl
in
or
xor
or
pusha
or
xchg
dec
cli
push
movsl
sahf
leave
sti
inc
xor
ret
scas
xchg
cli
jp
adc
rcl
hlt
xchg
das
push
sbb
outsl
orb
movsb
xchg
jg
inc
popf
ds
mov
pop
lret
in
add
inc
sub
test
jmp
stc
fwait
or
mov
fisubs
push
xchg
repz
rorb
test
jne
leave
jecxz
leave
dec
cs
pusha
adc
insb
bound
cmc
dec
loop
daa
mov
mov
hlt
lods
cmpsl
adc
or
pushf
ds
dec
or
xor
lods
add
push
add
fwait
in
mov
adc
int
addr16
jae
out
stos
js
cmp
out
xorl
jecxz
loop
ds
shrl
imul
pop
sub
adc
outsl
pop
addr16
inc
outsb
push
std
fdiv
imul
mov
iret
mov
cmc
jns
outsl
outsl
fsubr
stos
sub
adc
sbb
adc
aam
sub
cwtl
cmp
lods
mov
cmp
inc
xchg
cmp
sbb
gs
xorl
adc
test
pop
les
enter
dec
mov
xor
daa
lret
add
dec
or
jge
mov
and
and
dec
xchg
nop
and
imul
cmpsb
data16
and
nop
mov
lea
shrb
pop
jae
xchg
into
je
cltd
dec
test
inc
or
cmc
orb
insb
push
std
add
clc
gs
imul
jo
lods
icebp
pop
mov
sbb
sbb
pop
lcall
mov
test
push
add
dec
inc
xchg
mov
popa
push
mov
rorb
jnp
and
inc
fistpl
jne
dec
mov
rcll
and
je
arpl
jl
out
lea
adc
popa
push
xlat
xor
pop
fwait
xor
inc
push
push
inc
scas
inc
test
int
jle
adc
adc
mov
or
mov
add
cmpsl
cltd
cs
jb
je
scas
or
jl
or
rcr
jb
sub
or
testl
add
std
xchg
xchg
add
gs
mov
cmp
push
mov
aam
insb
pop
mov
ficompl
daa
js
lods
inc
sahf
xor
inc
jb
jnp
repz
mov
inc
sbb
mov
adc
push
inc
fldt
pop
arpl
jge
push
je
jmp
fs
in
add
dec
add
icebp
inc
fdiv
dec
mov
xor
xchg
and
lahf
icebp
outsb
aas
bound
pop
jg
movsl
aad
cltd
mov
mov
jmp
rcll
stc
add
pop
clc
xor
shll
fcoml
test
xchg
xor
jne
cmpsl
pop
xor
pusha
xchg
add
mov
xor
fcmovnb
adc
loopne
mov
push
pop
xchg
cmpsl
inc
mov
mov
dec
out
loope
repnz
add
xchg
out
push
inc
les
imul
xor
stos
mov
mov
sub
clc
jae
lea
popf
popa
scas
es
test
adc
fdivrs
pop
mov
xor
stc
out
pusha
mov
lret
stos
aaa
and
shlb
sahf
int3
arpl
xchg
or
cmpsb
mov
movsl
outsl
fwait
sub
mov
add
out
test
dec
into
es
movb
sbb
outsb
and
xchg
sbb
addr16
mov
mov
jmp
and
pop
push
mov
add
or
add
xor
data16
fiaddl
fidivl
inc
jnp
movl
insb
in
push
pop
xchg
pop
mov
in
mov
push
or
push
mov
daa
xor
nop
lret
inc
ror
stos
and
cmc
popf
push
leave
icebp
xor
icebp
push
mov
mov
mov
push
mov
pop
mov
inc
clc
push
test
mov
adc
push
icebp
es
sub
mov
insl
pop
lods
inc
sub
in
xor
push
rorl
sbb
mov
cmp
es
repz
ret
mov
popa
fstps
add
push
movups
dec
cmp
adc
cltd
sub
xchg
ljmp
fnstenv
fisttpl
mov
sbb
ret
rorb
and
dec
cmp
inc
adc
call
add
scas
inc
mov
test
sbb
jo
outsl
jle
fucomi
leave
test
push
pop
pavgw
testb
shrb
mov
testb
sub
aas
push
cltd
outsl
cmpb
push
call
push
ret
xchg
lret
xchg
mov
in
sahf
icebp
nop
sub
or
pop
popa
mov
loop
add
mov
in
scas
jo
cmp
call
ret
lods
dec
xchg
mov
xchg
lret
adc
aad
fcoml
iret
inc
pop
or
cld
push
stos
stc
jecxz
sbb
or
lret
cmp
mov
or
jne
push
inc
js
cmp
cmc
mov
mov
cmpsl
and
or
adcl
lcall
sbb
das
leave
outsl
fimull
mov
cmp
fmull
jl
outsl
jg
je
xor
mov
or
sbb
pop
call
cmp
out
xor
and
lods
push
fnsave
std
and
sarl
mov
mov
jg
mov
pop
pop
cmpxchg
gs
aaa
fsubl
jg
les
jae
gs
lods
add
mov
jne
in
and
lcall
ljmp
xchg
cmp
fisttps
es
fs
in
push
das
xchg
cmp
cmp
jne
sub
xorb
or
lret
sarb
inc
pop
repnz
dec
mov
push
and
cmp
mov
pop
mov
xchg
jnp
gs
jo
fisubrs
push
adc
leave
push
and
cwtl
loop
xadd
lahf
into
mov
jle
addb
fwait
xor
mov
fstps
mov
mov
sbbl
sub
mov
fmuls
jl
icebp
into
das
jo
and
cmp
std
js
outsl
sbb
bound
test
fstl
stos
cmp
fisubl
mov
sbb
or
imul
mov
lcall
mov
adc
jo
movsb
shlb
xlat
into
xchg
pop
fiaddl
inc
pushf
ss
setns
sahf
aam
int3
fisttps
mov
adc
dec
testb
imul
push
fiadds
sbb
mov
jbe
scas
outsb
sbb
inc
ret
mov
gs
push
and
mov
mov
js
jecxz
adc
pop
adc
pop
std
pminub
jmp
mov
pop
sar
pop
inc
pop
pop
rorl
mov
cmc
das
into
loop
popf
jge
nop
sbb
xorl
pop
jns
movsb
or
push
daa
popf
call
mov
cmp
lahf
mov
sbb
mov
pusha
cmc
push
dec
outsl
adc
fiadds
add
fs
adc
cmp
ret
pop
push
add
jnp
ret
fcompl
mul
insl
push
push
std
out
divl
jae
inc
add
popa
mov
inc
push
cmp
dec
or
jg
test
mov
sbb
fisubs
jne
ror
clc
push
sbb
push
mov
or
in
pop
inc
cli
add
add
xor
std
dec
mov
repz
rol
jecxz
cmp
repnz
into
dec
insb
push
mov
add
jmp
mov
xchg
lret
push
mov
das
mov
mov
idivl
cli
xor
mov
rcr
xlat
sbb
imul
loope
loop
ficoml
rclb
leave
aam
dec
xchg
xchg
sub
in
pop
stc
inc
lret
add
xchg
fldl2t
xorl
sub
and
dec
stos
dec
cld
ja
or
fbld
push
cmp
xchg
fnstsw
hlt
outsl
mov
jne
in
adcb
or
xor
push
stos
imulb
in
lret
outsl
lret
ficoml
push
andb
repnz
cmpb
jle
cmp
mov
jl
xchg
gs
sarb
leave
push
sub
xchg
iret
mov
xchg
inc
stos
jmp
add
sbb
adc
fsub
xor
push
fwait
xor
inc
push
xchg
inc
or
lods
mov
add
push
xor
divl
int3
xor
filds
sub
inc
nop
pop
cmp
es
fmul
and
push
lds
or
mulb
lods
jns
xchg
loopne
aaa
push
and
popa
or
jle
mov
arpl
scas
push
aas
mov
pushf
mov
dec
dec
icebp
mov
jmp
or
add
and
rclb
xchg
sub
adc
cmp
enter
dec
cmp
add
adc
cmpsb
aam
cmp
negl
jae
fadds
insb
movsl
xchg
or
pop
iret
inc
sub
push
mov
neg
sahf
aas
sub
inc
push
out
add
jl
arpl
daa
mov
push
and
dec
dec
cmp
fwait
cmpb
dec
gs
mov
and
call
gs
push
mov
add
repz
mov
lea
movsl
fdivrl
xor
xchg
jb
sbb
popf
sub
lcall
cmpsl
into
inc
gs
pop
xchg
insl
and
adc
out
push
xlat
sbb
out
mov
sub
push
js
push
and
lods
xchg
lcall
or
fcomi
xor
xor
nop
in
xchg
in
mov
push
loopne
sub
int
je
inc
inc
hlt
inc
stos
jp
stc
std
scas
or
mov
cs
xchg
hlt
aaa
hlt
pop
stos
dec
sub
fimuls
or
gs
add
ret
insl
mov
in
fcmovu
xor
mov
jae
mov
cwtl
xchg
add
out
push
or
nop
add
mov
mov
jecxz
std
mov
les
inc
adc
mov
pop
loopne
int3
shll
xchg
repz
inc
mov
mov
mov
in
xchg
jno
adc
lods
cli
enter
or
push
scas
jne
fnop
repnz
sti
jmp
mov
xor
out
vmovlpd
push
test
out
mov
enter
push
mov
call
xchg
xlat
jo
jo
sub
xchg
inc
mov
cmp
pop
and
cmc
mov
add
mov
xlat
aam
out
pop
cmp
jno
add
jbe
sbb
sarb
iret
push
jno
imul
mov
jae
fimuls
push
inc
sub
mov
mov
push
int3
les
sub
and
fldt
jecxz
int
inc
test
push
jp
cs
cmp
jbe
xor
shlb
jnp
push
rorb
push
out
shll
mov
neg
jae
imul
stos
sahf
mov
ret
mov
and
fistl
repnz
movntq
out
insb
fimull
xor
xorl
stos
fcoml
fs
lds
dec
and
cli
mov
mov
aaa
inc
xor
out
xchg
iret
jp
repz
fisubs
lock
or
and
pushf
xor
out
mov
adc
xor
out
mov
cmpsl
inc
adc
mov
dec
mov
sub
mov
movsb
fbld
inc
xor
out
push
push
subb
jge
push
or
cs
daa
movsb
fimull
cmc
sbb
mov
rolb
mov
rol
mov
inc
insl
rclb
cltd
pop
cmp
xor
cmp
or
mov
mov
and
and
jbe
dec
xchg
mov
lods
jo
repnz
sub
dec
inc
push
ret
xor
mov
cmp
mov
sbb
cmpsb
call
je
mov
int3
std
imul
cmc
xchg
aaa
xchg
sbb
out
mov
cltd
or
jge
mov
lods
pop
or
xor
xor
adc
and
andl
xchg
lret
pop
je
ret
push
or
cmp
cwtl
dec
and
mov
dec
mov
sub
cmpsl
and
xorl
mov
pop
in
nop
add
adc
sub
scas
or
outsb
push
incl
adcb
std
popa
add
push
pop
rcrl
mov
mov
popa
push
shlb
xor
daa
iret
sbb
dec
sarl
loop
mov
mov
jb
sub
push
ret
stos
sbbl
in
aad
shl
add
lahf
loope
jne
popa
dec
nop
stos
mov
push
pop
icebp
dec
lahf
movsb
jno
hlt
out
pop
or
and
mov
cmp
add
cmpsb
stc
mull
inc
cmp
sbb
inc
outsb
bound
or
stc
cld
xlat
xor
sbb
jl
xchg
cli
adc
cmpsb
fidivs
cmp
mov
jg
pop
mov
and
sbb
ret
into
insl
test
call
lahf
mov
jb
xorb
lea
repz
shrl
fwait
jnp
negl
pusha
pop
dec
jnp
fwait
or
xorb
mov
cmpsl
rcrl
mov
fwait
cmp
loope
in
mov
adc
push
mov
ror
out
or
mov
cltd
mov
pop
fidivs
sub
mov
scas
add
nop
push
sbb
insb
les
mov
mov
hlt
push
call
js
movsb
xchg
inc
mov
or
loopne
mov
cmp
mov
fisttpll
and
adc
push
fistpl
push
pop
mov
rcrb
cli
fsubs
mov
aam
mov
cs
pusha
rcr
adcb
shlb
push
clc
jo
ja
jo
fildll
sub
cwtl
iret
data16
scas
lea
cmc
mov
jle
mov
mov
push
xor
mov
push
hlt
clc
jmp
xor
dec
sarl
pop
mov
mov
rcll
adc
shlb
jmp
sub
and
sub
sbb
and
sbb
fistpll
push
add
push
in
xchg
fiadds
rcll
inc
jae
jle
and
subb
mov
xchg
push
icebp
fnstenv
sub
jns
push
pusha
or
pop
adc
mov
dec
jp
repnz
mov
mov
rcr
mov
out
enter
xchg
leave
cltd
in
sbb
dec
pop
dec
mov
aad
sbb
cwtl
rorl
and
pop
pop
mov
loop
fstps
icebp
mov
fbstp
fsub
cli
dec
lods
add
in
mov
jl
xchg
movsl
sub
xchg
imul
dec
push
ss
imul
mov
pop
lret
icebp
adc
inc
fimull
aaa
sub
adc
jl
inc
jge
ss
xor
rcll
add
outsl
mov
inc
push
in
addl
mov
push
push
jle
cmp
sub
arpl
jge
mov
xorb
js
sti
mov
adc
fstpl
cli
sbb
pop
push
movsl
and
push
pop
orl
xchg
push
shl
aaa
pop
xor
rcl
cs
fisubl
sbb
or
inc
mov
fisubl
pop
push
push
out
xchg
cwtl
sub
in
lcall
xor
xchg
or
or
loop
in
pusha
loope
mov
lods
mov
xchg
add
in
cmpsl
push
or
mov
or
and
adc
subl
imul
roll
push
adc
imul
and
cmp
outsb
lds
xor
mov
cmp
push
in
lcall
lret
xor
push
jo
je
inc
rorl
ret
ja
in
mov
push
aaa
or
lods
sub
jns
sbbl
adc
stos
fcmovbe
hlt
enter
sbbb
test
inc
xchg
jp
daa
mov
aam
dec
dec
pop
lret
shrl
adc
mov
ds
mov
adc
pop
mov
xchg
dec
fistpl
outsl
cmp
cwtl
xchg
sbb
ljmp
scas
cmp
mov
pop
ret
add
xchg
push
and
orl
pop
jle
jno
cmp
mov
rorb
and
mov
enter
shl
cwtl
daa
shrd
jl
pop
adcl
lods
jg
cmp
push
repnz
adc
ret
lahf
adc
adc
xchg
push
cli
js
sbb
xlat
inc
xchg
pop
cmp
test
mov
xorl
mov
hlt
mov
out
cs
outsb
hlt
sahf
cmp
gs
sbb
adc
cmpsb
push
lret
add
mov
test
lahf
xor
dec
adc
inc
jge
dec
mov
ja
repnz
popf
dec
sub
cmp
mov
mov
fstl
je
inc
popa
in
inc
das
cmp
mov
mov
fiaddl
stos
enter
sub
cltd
mov
je
test
jmp
shl
xor
sarl
test
addr16
xchg
rcr
and
scas
aas
fcompl
out
ja
pushf
xchg
decl
jp
add
jmp
jp
test
lret
xor
notl
arpl
out
cmp
das
sahf
or
test
cmp
stc
pop
pop
int3
add
jb
mov
adc
out
jb
add
pop
cmpl
adc
and
push
sub
push
mov
sub
jle
or
ja
int
dec
sub
cmp
sarb
adc
in
xchg
lretw
sub
or
jp
mov
and
xchg
mov
gs
out
pop
cli
cmpsb
push
adc
clc
rclb
add
ret
fsubp
push
sub
addl
jmp
imul
ljmp
fwait
add
xor
inc
and
cmp
in
push
into
mov
xor
sbb
insl
and
shr
pop
cmp
fcmovnb
mov
aam
xor
pop
or
add
add
imul
sub
cs
mov
lds
fsubr
fimull
cmp
das
sub
mov
in
mov
fnstsw
addr16
dec
mov
lahf
out
inc
mov
pop
xlat
das
adc
dec
add
lcall
gs
lock
pop
test
fstps
xchg
xlat
std
cmp
mov
cmp
bound
push
pop
push
in
decb
jno
add
dec
and
sub
mov
xchg
in
sti
mov
pop
sub
sbb
adc
in
xlat
or
fsubs
xchg
fsubrl
cwtl
fsts
rolb
jecxz
adc
jno
lods
pop
mov
scas
xchg
pop
mov
imull
mov
mov
inc
icebp
notl
mov
lret
negb
in
jp
mov
pop
sbb
shlb
mov
xlat
xchg
int
fnstsw
mov
dec
xlat
pop
pop
add
insl
jecxz
sbb
ljmp
mov
dec
push
cli
mov
xor
mov
jl
fldt
fwait
push
mov
aas
pop
jg
sub
or
sahf
pop
mov
outsb
fimull
push
dec
sahf
movsl
int
femms
jns
xchg
std
cmp
cmp
out
xor
cmp
lcall
movsb
lcall
dec
jecxz
repnz
clc
mov
pop
popf
cmp
cmpsb
outsb
setb
add
cli
movsb
mov
out
jle
dec
sub
adc
push
inc
movsl
ficompl
mov
mov
jle
xchg
mov
push
mov
xorl
dec
add
in
inc
push
push
jl
and
cmpsl
sub
push
add
mov
ds
je
inc
mov
jp
fxch
jb
xchg
cmpsb
adc
ds
cs
xchg
scas
mov
dec
sub
push
mov
or
repnz
lea
mov
jmp
jne
rolb
enter
stos
fwait
xchg
mov
stos
jnp
das
mov
sahf
std
leave
je
out
add
jae
cwtl
cltd
mov
cmp
rolb
fsub
jmp
sub
mov
fisttps
dec
insl
cmp
push
adc
mov
pop
test
lods
xchg
pop
pop
push
stos
incl
mov
dec
add
cwtl
adc
push
add
jle
xor
dec
and
pop
aas
hlt
rcrb
xchg
loopne
sub
inc
imul
roll
mov
pushf
lcall
in
dec
dec
pop
or
stos
mov
mov
dec
fsubrs
adcl
mov
dec
cmp
popf
pop
xchg
lret
movsl
jle
lods
add
ja
push
shlb
fs
call
cmp
lret
pusha
or
les
ds
test
ljmp
dec
add
and
jmp
jo
fnstcw
iret
cltd
and
out
hlt
mov
lahf
fistps
popf
add
lcall
in
or
dec
mulb
pop
xchg
xchg
arpl
fnstenv
cmc
push
or
pop
aad
orb
mov
mov
sub
adc
add
cmc
jge
jnp
jnp
adc
push
add
imul
mov
dec
inc
dec
and
xchg
xor
mov
insl
jg
mov
jl
or
sub
xchg
mov
sarb
imul
xchg
mov
cltd
lahf
nop
inc
pavgw
sbb
mov
mov
adc
adc
jo
xchg
mov
or
enter
mov
ds
aam
sbb
lahf
orl
leave
jl
lods
adc
out
push
mov
ljmp
fwait
shll
out
jge
adc
lods
push
push
jmp
test
add
and
mov
sti
sarb
push
out
rol
sti
fists
xchg
and
fsubr
pop
pop
inc
lods
cmp
movsb
je
popa
push
add
cmp
lock
and
pop
mov
lds
lds
loop
add
or
std
in
pop
imul
subb
lahf
repnz
outsb
mov
cmc
fstpl
inc
ret
sbbl
aas
fwait
in
scas
or
xchg
add
lret
or
out
xchg
in
push
psllw
test
cmp
lret
mov
out
call
mov
xor
mov
into
cmp
pop
and
in
inc
push
jae
inc
sti
push
mov
pop
sbbl
xor
incl
outsl
rcrl
or
iret
xor
push
stos
or
shrl
or
push
add
call
push
ret
jmp
mov
pop
stc
cmc
push
cs
mov
fmuls
mov
roll
pop
or
xor
push
out
pushl
out
mov
and
in
insb
cmc
hlt
or
add
daa
add
and
cmc
pop
push
aas
pop
sbb
add
cmp
js
scas
test
xchg
pusha
in
sbb
cmp
test
add
jle
test
xchg
jb
add
js
psubsw
fdivrl
sbb
movsl
push
inc
ret
sub
xchg
insl
lods
sbb
repnz
cmpsb
sbb
jbe
in
out
or
xor
inc
repz
daa
loopne
mov
add
add
sub
mov
insb
lock
aam
inc
xor
mov
fwait
cmp
dec
add
scas
ja
push
dec
xor
lea
push
repz
sub
push
loopne
dec
orl
into
cmp
in
enter
scas
cmp
push
add
sub
nop
cli
mov
out
repnz
jmp
jmp
enter
add
cmpsl
mov
les
loope
data16
lahf
fiadds
push
ds
decb
or
je
ss
ret
enter
fs
aad
mov
jmp
sahf
test
call
push
cmp
cmp
clc
jle
cmp
cli
repnz
lock
clc
push
cltd
test
dec
xor
mov
dec
mov
lret
sub
fiaddl
mov
call
xlat
mov
pop
pop
fcmovnbe
hlt
fucom
mov
sbb
jmp
xor
pop
js
cltd
aam
popf
shl
data16
jge
stc
dec
jno
or
movsb
es
mov
xchg
psubb
ljmp
mov
cmp
lds
repnz
adc
gs
shrl
mov
test
sbb
imul
test
filds
ret
xor
and
or
cmp
xor
pop
xchg
repz
sub
lock
leave
push
ljmp
add
jg
mov
lock
shlb
mov
mov
aas
pop
ljmp
pushf
push
inc
lock
popf
and
push
lods
popf
pop
shrb
ljmp
ret
fs
xchg
dec
jle
mov
push
nop
out
ja
cmpsl
popf
div
push
push
push
in
iret
daa
or
loopne
andl
adc
push
nop
xor
loopne
hlt
arpl
or
popa
shrl
mov
dec
dec
cmp
xchg
adc
jo
popa
fs
mov
into
ljmp
jp
cmpsb
clc
fnstsw
insl
jno
cli
add
or
and
inc
cmp
jbe
ret
pushf
cmovnp
neg
mov
fs
mov
push
pop
mov
jns
lds
jae
scas
into
test
jbe
mov
popa
pop
push
fwait
xor
and
add
mov
and
dec
jo
int
jecxz
repnz
sbb
mov
xor
jno
cmp
push
rcrb
cmp
inc
imul
or
fs
stc
jne
inc
insb
pop
add
dec
repnz
xchg
in
xor
and
leave
jmp
lods
or
pushf
test
fistpl
fstpl
lds
xchg
and
inc
jmp
add
call
rorl
popa
jns
adc
fdivp
int3
push
imul
iret
and
xor
sub
inc
ss
lcall
xchg
movsb
mov
scas
out
mov
sbb
in
rorb
xor
inc
xchg
stos
or
inc
jnp
cmp
pop
mov
jae
lret
jl
mov
mov
add
lods
pop
arpl
imul
lods
sbb
mov
lret
dec
nop
lds
out
and
in
xchg
pushf
sti
jl
imul
ljmp
pop
sub
gs
adc
cmpsb
mov
push
scas
int
dec
add
int
mov
fst
xchg
xchg
gs
iret
sbb
jecxz
adc
sub
lods
pusha
je
out
xchg
pop
mov
or
mov
pop
sub
lods
sbb
sub
mov
insb
push
scas
push
inc
hlt
dec
jp
fstpl
pop
test
pop
imul
data16
shll
dec
scas
pop
xchg
lret
sub
repnz
negb
mov
xlat
pop
sbb
test
in
push
mov
xchg
dec
scas
sahf
cmp
lcall
and
fimuls
je
push
sbb
xor
scas
dec
pop
pop
sbb
push
rclb
scas
mov
ret
sub
loop
and
xchg
cs
icebp
mov
push
ds
pushl
dec
out
into
addr16
aad
and
outsl
repz
xorb
rclb
xor
outsb
sub
scas
mov
gs
stos
adc
sub
jmp
mov
ficompl
test
clc
addl
movsb
popf
jbe
push
enter
enter
cs
push
aaa
stos
mov
ss
out
jae
cltd
xor
jnp
sarl
jle
jle
and
xchg
stos
gs
insb
mov
dec
arpl
data16
sbb
scas
and
addl
sbb
jp
add
stc
arpl
push
inc
jbe
mov
pop
lret
adc
cwtl
pop
in
mov
and
aaa
mov
cwtl
mov
lret
dec
mov
cmp
or
in
fsubl
jp
mov
ret
out
or
mov
xchg
and
push
ret
inc
jl
div
sub
fwait
lahf
rorl
test
or
inc
in
sub
pop
adc
stos
insl
cmpsb
cs
xor
negl
call
inc
sbb
out
cli
push
xchg
inc
push
push
loope
vpmullw
or
jg
cmpsb
or
mull
sub
pop
push
mov
inc
jg
sbb
popf
jbe
mov
daa
andb
cmp
sbb
dec
xchg
ljmp
nop
ss
cmc
ret
pop
shll
jg
aas
mov
test
or
inc
aas
js
insb
dec
insl
pop
adc
mov
into
xchg
lcall
mov
or
mov
lret
adc
fbstp
pusha
dec
xor
jne
add
fisttpl
pop
test
clc
dec
iret
cmp
mov
ss
outsl
lcall
leave
sub
xorl
mov
jp
rol
xor
into
lcall
pop
sub
aam
sbb
mov
adc
xor
mov
mov
xor
xor
test
je
aaa
shll
ret
jmp
cmp
das
cmp
aas
fstpl
movsb
and
push
iret
cmc
inc
inc
sbb
into
call
mov
xchg
lock
ret
popa
popf
mov
jl
hlt
mov
jnp
inc
adc
or
cmc
mov
pop
clc
out
scas
and
fistps
shlb
lcall
testl
sar
push
xor
lock
in
mov
mov
adc
scas
fdivs
mov
decb
bound
lock
push
sub
add
scas
out
push
cmp
sbb
push
addr16
pusha
js
aam
mov
sbb
or
inc
in
lret
es
pop
insl
push
dec
jmp
jns
popa
cmp
stos
mov
push
imul
xchg
xor
jns
push
sub
mov
jns
call
in
cmpsl
xchg
mov
adc
in
outsb
loopne
and
test
mov
inc
rcll
movsb
mov
xor
into
sbb
sahf
outsl
popa
jecxz
pop
mov
adc
fwait
rorb
enter
dec
mov
jle
sbb
push
in
ret
lahf
ret
sub
mov
test
mov
fisttpl
push
push
mov
sbb
or
xor
xchg
mov
add
test
push
js
pop
out
sub
in
out
aad
arpl
xchg
aas
xchg
cmp
xchg
xchg
aaa
lahf
dec
pop
lods
xchg
jnp
jl
test
or
mov
jns
push
mov
add
xchg
loopne
icebp
pushf
into
xchg
push
inc
andb
push
sub
jo
mov
scas
adc
or
adc
sub
fwait
enter
fisttps
negb
push
xchg
mov
mov
cltd
pop
test
mov
dec
jo
lds
jno
into
icebp
fstl
iret
cli
ret
or
inc
pusha
mov
and
mov
roll
sbb
push
cltd
andl
in
and
mov
mov
mov
mov
adc
mov
add
lret
addr16
push
into
test
inc
ret
mov
sub
fs
pop
jnp
nop
js
jo
lahf
sub
jl,pn
vandps
sbb
out
out
aad
jb
aas
arpl
popf
mov
push
fwait
mov
dec
inc
sbb
inc
xchg
pop
rcrl
mov
jbe,pt
mov
sub
mov
inc
mov
push
sub
push
sbb
mov
lock
add
adc
push
cltd
jbe
andb
into
jne
fsubrs
mov
or
xor
aad
lahf
rorb
test
sub
push
addr16
xor
pop
mov
sbb
or
and
cmpsl
and
je
pop
dec
sbb
stos
and
out
mov
pop
push
inc
test
stos
cmp
cmp
cmp
mov
adc
popf
loope
addb
fadds
xor
push
fdivrs
outsb
dec
inc
sti
ret
fnsave
mov
push
roll
dec
les
roll
in
inc
sub
mov
xor
mov
mov
fcom
pop
mov
cmp
xchg
aad
pop
sbb
jb
rcl
lds
mov
daa
ret
int
xchg
xorl
adc
jp
push
shll
leave
lods
dec
scas
dec
lret
xchg
fisubl
pop
sbb
stos
stos
push
sub
insb
dec
call
mov
in
lods
lret
js
in
je
ret
xchg
movsb
std
dec
mov
adc
popf
and
lds
ss
or
xlat
cmpsb
mov
sarb
in
mov
mov
aam
jb
rorb
inc
cltd
in
in
js
dec
pop
ret
push
daa
jne
push
repz
pop
fsubrs
dec
daa
jns
cmp
cmp
mov
sub
cli
jne
js
or
mov
mov
pop
fadds
mov
clc
sub
mov
fisubrs
test
sbb
out
jg
inc
nop
push
xchg
test
add
dec
mov
lds
cmp
sbb
push
icebp
cmc
mov
jno
movsb
mov
or
cmp
mov
jns
and
adc
int
fs
loopne
sbb
iret
or
insl
test
sub
xor
sub
add
js
in
xchg
xchg
sar
jnp
ss
mov
and
sub
or
jg
movsb
fucomi
push
mov
mov
fstpt
pop
push
dec
xchg
push
das
in
cmpl
sbb
sub
mov
push
testb
fwait
mov
sahf
orl
in
push
les
arpl
adc
popa
sub
mov
xor
add
mov
fldcw
into
sarl
lods
fistl
mov
push
jg
pop
loopne
sbb
movsw
imul
cmp
xor
aam
pop
rolb
xchg
dec
shll
fistps
jb
movsl
sbb
xor
cmpb
data16
jg
pop
jne
or
jmp
popf
jno
les
jns
dec
iret
lods
mov
jp
clc
sarb
stos
sbb
stos
adc
push
ljmp
or
adc
cwtl
push
mov
jmp
or
outsl
inc
mov
popf
fwait
call
mov
subl
xorl
data16
movsl
aas
push
in
cmpl
and
dec
jnp
jbe
and
sbb
into
add
mov
pop
mov
or
jne
icebp
xor
mov
mov
pushl
fs
pand
in
jg
jle
xchg
jecxz
in
inc
int
aas
cmpxchg
sbb
lret
sub
popf
lds
or
sarb
inc
imul
out
dec
cmpsl
xlat
adc
jmp
push
js
hlt
jle
mov
xchg
stc
inc
dec
in
daa
and
jmp
test
inc
dec
push
mov
xor
in
fcom
or
pop
pop
pop
and
daa
xor
dec
inc
mov
int3
fbld
movsb
jnp
mov
cmc
mov
cmp
jbe
xlat
arpl
mov
inc
add
xor
pop
xor
fidivl
fildll
jae
push
mov
mov
dec
mov
mov
push
pop
push
bound
pop
imul
sbb
test
inc
push
mov
xor
xchg
in
sar
jo
mov
xchg
jns
and
cld
daa
andb
jg
jb
mov
mov
pushf
cmp
cwtl
testl
pop
cs
adc
js
rolb
and
jo
scas
in
sub
roll
mov
jns
pop
or
js
clc
jo
lret
fs
fwait
sahf
test
cld
pop
xchg
xchg
cmp
lods
es
out
test
pop
ss
jns
and
loopne
fcmovu
aam
mov
call
sbb
aad
out
subb
aad
add
fdivr
inc
xor
sar
pop
and
rep
xor
lret
ljmp
mov
fldt
sub
lods
xchg
xchg
inc
push
shl
out
pop
out
sbb
xlat
xlat
push
data16
test
or
into
mov
int
repnz
data16
dec
insb
loope
shl
and
out
pop
sub
sub
mov
into
mov
or
sub
jae
filds
ret
movsl
out
ret
jl
aaa
mov
imul
xchg
dec
iret
inc
outsl
pop
or
mov
jns
jb
cmpsb
xchg
pop
or
test
jnp
dec
sub
cltd
push
in
test
mov
sub
jmp
sarl
mov
fucomi
xlat
lcall
or
int3
and
mov
inc
pop
pop
jb
add
mov
dec
shll
and
std
sbbb
xor
cmp
out
lods
dec
adc
hlt
rcr
hlt
inc
jmp
adc
leave
dec
dec
movsb
dec
lahf
pop
in
outsb
sbb
sbb
mov
push
adc
int3
mov
pop
pop
hlt
nop
lods
mov
out
aaa
jmp
push
and
add
daa
adc
icebp
inc
ret
xchg
aad
jp
in
mov
xchg
in
push
push
aam
xchg
ret
out
xor
xor
jmp
mov
sbb
xlat
sub
mov
movsl
stc
cld
mov
sbb
cmp
push
xchg
push
mov
rcll
pushl
sbb
cmp
add
dec
cmpsb
inc
pusha
mov
lods
sub
inc
pop
cmpsb
mov
jo
xchg
test
sub
rorb
cld
mov
faddl
push
bound
jp
icebp
es
aad
mov
insb
ret
ror
dec
dec
int3
add
or
clc
jl
out
mov
mov
fisubl
sbb
cmc
pop
loopne
cwtl
enter
mov
cmp
pop
icebp
push
sbb
lret
clc
lahf
inc
sahf
std
cmpsl
ds
shl
lock
insb
sahf
add
in
imul
imul
cwtl
pop
mov
scas
or
mov
jmp
lods
sar
push
aas
pop
jns
xchg
cvtdq2ps
mov
cmp
add
adc
add
inc
mov
sbb
sti
inc
ss
xor
call
jecxz
adc
adc
pop
outsl
mov
cmp
cmpsb
xchg
cmpsl
add
icebp
loopne
ficoml
mov
mov
xchg
add
pop
push
popl
mov
lds
xchg
pop
mov
mov
pop
sbbl
shrb
ljmp
mov
int
cli
test
cmp
add
int
shlb
xor
adc
cmpsb
mov
jns
mov
pop
cmp
scas
jmp
enter
ljmp
into
test
std
repnz
xor
pushf
int
sub
filds
rcrl
inc
mov
adc
xchg
sbb
pop
jl
out
scas
push
xchg
aam
out
insl
hlt
sahf
pop
outsb
into
mov
scas
pop
cld
xchg
lea
mov
sub
and
and
xor
pop
cmp
outsb
xchg
fcoms
inc
iret
mov
sub
and
jmp
lahf
mov
fstpt
mov
clc
adc
jg
lcall
cmpsl
mov
cmpsb
jmp
dec
and
dec
fdivrl
leave
loopne
add
sti
mov
xchg
sbb
cmpsl
push
mov
repnz
push
jb
cltd
push
test
js
insl
loope
xor
add
pop
out
xor
notb
je
aam
and
inc
jg
xor
inc
test
das
xchg
stc
lock
sbb
test
or
cmc
stos
ljmp
in
lret
dec
inc
clc
and
or
std
aaa
and
push
xor
movsb
xchg
cmp
xor
adc
mov
adc
xchg
sbb
ud2
dec
outsl
fisubl
ret
outsb
faddl
cmpl
out
pop
inc
jnp
inc
sub
cmp
pop
outsb
dec
in
in
xchg
shr
arpl
xorb
or
add
pushf
mov
fs
dec
and
sub
push
and
cmp
insb
in
sbb
or
cmp
call
movsl
andb
sbb
cltd
ja
mov
pop
enter
mov
mov
ljmp
rcll
mov
dec
imul
pop
clc
hlt
addr16
gs
loopne
cs
mov
cwtl
arpl
insb
push
mov
jno
rcll
mov
and
push
in
push
inc
out
push
adc
xlat
les
cmp
inc
push
clc
and
xchg
jl
and
test
sub
shrb
clc
mov
mov
insb
lahf
xor
ret
jg
popa
adc
fwait
and
xor
test
test
mov
pop
cs
shlb
popa
out
fldenv
jne
xor
dec
cmc
adc
es
mov
jg
flds
stos
shlb
sub
les
sbb
jg
or
aas
and
stos
dec
jle
push
sbb
push
das
lds
fcomps
icebp
shl
sub
dec
adc
mov
or
aam
hlt
repnz
incl
jle,pn
inc
int
and
mov
and
add
insb
add
test
lret
pop
mov
mov
push
ljmp
inc
dec
sub
xlat
dec
mov
adc
mov
popf
jns
pop
lret
movsb
lret
cmp
loop
repz
mov
inc
jp
xlat
popf
arpl
cmpsb
call
push
dec
popf
popa
stos
and
mov
mov
cmp
adc
sub
push
mov
mov
les
inc
xor
jne
fs
pop
or
rcrb
negl
daa
jge
sub
clc
ret
fstpl
xchg
jo
call
sbb
insl
cli
mov
xor
and
xor
das
xchg
clc
mov
xlat
inc
ficoms
and
cmp
sbb
mov
mov
push
jmp
jle
jnp
scas
rorb
or
stc
stos
dec
hlt
add
add
xchg
jmp
ljmp
or
adc
ficoms
mov
add
jmp
mov
xchg
cs
rolb
sub
shll
out
inc
scas
dec
pop
fs
jb
les
lods
sub
xor
sbb
bound
shlb
testb
pusha
in
aas
pushf
je
fcom
and
std
pusha
leave
xor
sub
inc
dec
mov
mov
rol
sahf
xor
inc
pop
xchg
arpl
fnsave
push
ret
adc
fisubrl
dec
aad
xor
ds
mov
inc
fildl
jbe
inc
adc
xor
pop
fldcw
or
mov
xor
clc
das
popa
out
subb
dec
xchg
clc
adc
adc
stos
aas
sbb
xor
sbb
push
rcrb
ds
imul
mov
and
loopne
cmp
xchg
dec
xor
pop
cmc
flds
in
cmp
jb
jmp
addr16
push
out
mov
mov
pop
aad
dec
jno
xchg
or
aad
cmp
push
loopne
imul
mov
movsl
mov
daa
loop
mov
dec
outsb
mov
cmc
cld
sub
imul
in
lret
add
adc
inc
or
push
addb
inc
push
push
adc
cwtl
ret
mov
or
xor
add
call
into
sbb
or
cmp
iret
inc
adc
popf
loopne
fistpll
xlat
fsubs
cmpsb
jbe
std
mov
mov
into
lret
leave
sti
pop
dec
lret
sbb
out
in
mov
movsl
shlb
movsb
loop
pop
mov
aaa
addr16
leave
scas
push
inc
pop
sub
inc
mov
aad
mov
popa
test
fsubrs
out
inc
xor
lahf
ja
pop
inc
lods
popf
inc
pop
pop
mov
mov
dec
subb
and
lods
sub
hlt
xchg
and
lock
insb
ss
jge
mov
add
adc
insb
test
jg
jno
cwtl
loop
jge
decb
push
jl
and
sbb
jnp
pop
inc
aad
pop
and
inc
pop
add
mov
xchg
in
imul
cmp
bound
sub
out
adc
add
mov
lods
js
scas
ds
orl
rcrl
cmp
loope
adc
cmp
sub
int
adc
stos
mov
sbb
mov
dec
pop
xchg
lret
jg
jb
dec
insl
xchg
cmc
daa
adc
cmp
shlb
dec
push
nop
xchg
cmpsl
outsb
mov
or
add
xchg
xor
add
mov
js
xchg
xchg
push
ret
inc
add
and
test
cmp
pop
scas
sub
xchg
test
out
mov
push
adc
scas
mov
xorl
fadds
rclb
bound
aas
xchg
or
sbb
xchg
cmp
xchg
loope
mov
adc
iret
rcr
xchg
repnz
add
scas
daa
lret
arpl
movsl
mov
or
inc
xchg
pusha
subl
fs
inc
pushf
js
xor
int
jle
push
into
in
test
cld
imul
je
inc
xchg
incl
repnz
pop
gs
in
inc
mov
movsb
xor
roll
stos
mov
sub
ja
imul
xor
pop
dec
ret
in
pop
into
pop
adc
cmp
dec
lods
lea
dec
cmpsl
or
cs
adc
ret
add
in
rcll
rcrl
cmpsl
gs
mov
pop
inc
rcl
in
repz
je
fs
adc
outsl
pop
iret
mov
mov
lahf
arpl
cmp
cmp
or
movsl
jle
rorb
sbb
cli
push
pop
lock
cld
or
sbb
push
sub
lea
inc
mov
xchg
lock
mov
push
in
adc
jne
stos
shrb
out
pushf
fistpl
dec
dec
dec
or
sbbb
xchg
loopne
mov
lret
push
fcmovb
sub
jp
ret
xlat
sahf
jne
outsb
cld
es
outsb
jp
push
inc
ss
xor
insl
je
mov
scas
adc
sub
mov
xchg
inc
add
int3
js
fwait
mov
mov
push
call
mov
add
push
or
pop
mov
imul
test
push
push
scas
or
iret
jb
leave
sbb
stos
push
add
jmp
lret
shl
pop
data16
xchg
loope
sub
mov
js
add
rcr
or
mov
int
lahf
mov
out
mov
fdivl
stos
dec
xlat
paddq
cmp
inc
out
adc
js
sarb
repz
lahf
mov
pop
xor
cli
sarl
scas
mov
sub
negb
sbb
sbb
pushf
cli
lret
mov
adc
push
sub
mov
mov
lock
imul
mov
pop
xor
lahf
push
mov
xor
cwtl
aad
or
sbbb
jb
fwait
test
in
ljmp
jo
cmp
lea
mov
mov
cmp
xchg
nop
mov
sbb
loopne
sahf
sti
ja
leave
cmc
pop
aam
inc
lea
fcompl
cmp
imul
iret
cmp
inc
mov
or
fchs
jmp
xor
movl
dec
pop
push
fs
pop
xchg
mov
fsts
and
adc
fcompl
mov
mov
cmpsl
das
add
call
fcomi
add
gs
mov
xchg
cmc
push
xchg
ret
imul
clc
ss
jb
xchg
push
mov
stc
xchg
pusha
shr
pop
pop
stc
lea
cli
jbe
jae
inc
fisttpl
testb
loopne
cltd
fstpt
adc
int
mov
sbb
idivl
in
mov
aaa
mov
xchg
cwtl
jb
in
jo
data16
lcall
pop
xchg
lods
sti
xchg
add
andb
cmp
stos
test
nop
fisubrs
xor
movsb
xchg
lret
jecxz
push
stos
fsub
test
out
ss
mov
in
xchg
cmpsl
mov
dec
xchg
or
dec
outsb
lock
jl
inc
test
xchg
sub
pop
pop
sti
cld
out
rorl
rcr
adc
jecxz
push
mov
xor
dec
daa
or
and
jmp
ljmp
or
out
jmp
in
ss
jae
out
jl
mov
inc
xor
or
jmp
or
mov
push
faddl
mov
xor
mov
mov
iret
stos
imul
xchg
mov
dec
test
or
dec
cmpsl
sahf
pop
andl
dec
filds
sub
sarb
adc
push
or
adc
icebp
mov
push
sbb
mov
addr16
rorl
shl
cmp
movsb
mov
xacquire
mov
fimull
pop
dec
lret
lret
ret
cli
cmp
sbb
push
jmp
cld
movsb
iret
jle
push
outsl
cli
pop
xchg
int3
mov
fisubrl
loope
add
pop
dec
jno
int3
leave
push
jnp
push
in
repz
loope
hlt
in
mov
adc
pop
aad
sub
mov
lcall
mov
insb
add
lods
adc
push
fdiv
shll
in
jmp
fstpl
jbe
sbbb
adc
sub
daa
clc
pop
leave
jno
popa
inc
das
rolb
mov
push
mov
loopne
leave
push
pop
or
lock
xor
test
testb
jo
cmp
push
inc
fsubrs
xchg
out
push
cmp
xchg
xchg
mov
popf
xor
add
xchg
icebp
and
or
mov
inc
int
fs
jp
fdivs
ss
ret
daa
push
or
leave
push
dec
shl
aas
and
inc
enter
je
push
sbb
jo
dec
leave
outsl
in
xchg
xlat
adc
push
mov
jb
jne
out
fmuls
mull
sub
std
push
or
pop
add
jge
aaa
adc
int
or
mov
push
fcmovnbe
mov
cmp
push
popl
stos
dec
inc
pop
int3
test
test
lret
add
in
dec
xlat
inc
fwait
dec
add
popa
repz
loopne
into
lea
xor
xor
fwait
and
xchg
push
mov
or
jecxz
mov
ss
jo
mov
adc
imul
xor
mov
popa
ficoms
sbb
dec
test
push
sbb
repz
pushf
lds
adc
xor
stc
rclb
loope
std
hlt
lods
push
add
cs
repnz
inc
push
jns
inc
stos
mov
jnp
adc
inc
mov
sub
movsb
int
ret
xchg
icebp
pushf
popa
loop
lahf
ss
fs
push
xor
iret
fs
push
adc
or
repz
cmp
push
loopne
pop
in
out
xor
fistps
xor
dec
je
xchg
mov
adcl
cmp
shlb
mov
shl
loop
sub
mov
leave
shll
cmpsb
push
sbbb
insl
adc
fnstsw
mov
jle
xor
inc
adc
adc
stos
lahf
dec
cltd
xor
repnz
lods
daa
mov
aam
adc
sahf
add
lea
aas
jp
cltd
andb
add
fldl
pop
and
loope
int
sbbb
gs
sub
sub
std
jns
ss
push
es
pop
mov
cld
repz
std
fistpl
dec
dec
push
jae
shl
test
mov
rcrl
sub
dec
out
cmp
adc
push
or
sti
fisubrs
jns
mov
lcall
std
cmp
jp
mov
sub
cmpsl
push
pop
xchg
jl
xchg
push
mov
dec
cwtl
lods
adcb
inc
outsl
sbb
popa
dec
fs
jne
cmp
js
mov
or
fbstp
dec
sbb
xor
daa
fldt
insl
andl
cmpsl
or
roll
cmpsl
mov
fs
cwtl
sub
adc
sahf
out
xchg
or
dec
out
jp
jge
fcmovb
mov
adc
call
imul
jg
xchg
jecxz
add
jl
and
stos
add
iret
inc
sbb
add
sbbb
pop
or
lcall
xchg
push
push
pop
adc
adc
ret
stos
dec
xchg
mov
insb
mov
dec
xor
lds
dec
sbb
mov
push
outsb
sub
in
add
in
pop
xor
mov
pop
sahf
lock
sub
cmp
and
xor
push
and
arpl
leave
adc
push
out
mov
call
or
jns
adc
pop
gs
bnd
daa
sub
xor
int3
lods
xchg
orb
js
push
and
inc
mov
jbe
xchg
adc
aaa
lock
jne
push
nop
sti
xchg
mov
int3
fs
loopne
sub
bound
add
sbb
mov
ds
inc
and
jge
loopne
inc
adc
fcomps
add
jecxz
int
stos
mov
jmp
mov
xchg
popa
inc
icebp
adc
inc
mov
bound
ffree
xchg
mov
jle
push
cmp
loop
sub
movsl
pop
les
mov
lds
sub
xchg
and
sti
outsl
sub
pop
fdivs
mov
outsl
mov
out
into
cmp
lds
pop
cmp
sub
lock
lock
or
fiadds
rcrl
inc
outsb
sbb
data16
ret
sbb
in
inc
jnp
unpcklps
or
sbb
adc
jo
pusha
fisubl
and
lahf
sub
and
pop
or
sbb
or
pop
int
inc
in
sbb
gs
sbb
xor
sub
ficoms
dec
pusha
pop
pop
jnp
int
cmpl
adcl
fcompl
or
dec
jl
inc
add
icebp
lods
lret
addr16
cli
test
pusha
enter
repz
or
and
mov
stos
ror
inc
sti
mov
add
fstpl
ret
pop
pop
loop
addr16
pop
sahf
xchg
scas
iret
ja
mov
in
mov
mov
ja
mov
fdivrs
and
cli
pop
jmp
inc
int
rep
fdivrl
sub
push
ss
lret
mov
sbbl
cmp
and
inc
xchg
inc
sub
dec
pop
jg
mov
popf
jnp
sub
xchg
mov
cltd
cmp
dec
mov
jne
loopne
int
mov
lds
add
xchg
or
hlt
imul
dec
insb
xor
hlt
xchg
adc
xor
mov
sbb
push
jae
outsl
ja
orb
push
push
pop
dec
ret
jecxz
fmulp
and
add
cmp
mov
data16
push
ffree
cmpsb
xchg
imul
mov
aas
clc
mov
mov
push
mov
test
jecxz
ret
mov
inc
loope
inc
pusha
lods
fwait
mov
leave
aaa
movsl
gs
jne
sub
shll
cmovp
mov
lcall
jb
mov
jp
in
push
mov
add
dec
sar
sbb
clc
testl
sti
ja
jae
lret
push
mov
or
dec
mov
adc
mov
adc
mov
ret
jp
pop
and
daa
jge
js
lea
cmc
das
mov
push
fs
outsb
js
xor
repz
mov
jnp
mov
pushf
popa
add
pusha
mov
and
push
inc
inc
scas
inc
cmp
and
cmc
xchg
movsl
xor
pop
inc
jmp
jae
fadd
ficoml
divb
xor
add
pop
pop
fs
lea
rdpmc
mov
sub
sub
jae
daa
push
dec
add
sub
loop
lds
test
push
inc
pop
jo
lret
mov
xchg
push
inc
stos
mov
lahf
mov
push
in
cmpsb
insb
mov
mov
mov
sub
xor
call
mov
pop
push
add
scas
cmc
imul
dec
jmp
aas
cmpsb
inc
or
xchg
push
rorb
scas
cmc
test
xor
int3
mov
enter
mov
inc
mov
mov
arpl
gs
push
clc
inc
xor
lea
lcall
clc
cwtl
xchg
cmp
popf
xchg
xor
add
lods
imul
xor
ss
xchg
sti
xlat
jle
mov
pop
js
cwtl
or
push
sbb
cmp
jo
aas
les
cli
push
mov
ffreep
imul
stos
cltd
jo
add
adc
movsb
fiadds
rorl
inc
cltd
imul
mov
lcall
sbb
movsb
xchg
or
jg
lods
sti
add
out
push
inc
jp
xchg
ficoms
mov
fs
add
fstps
cmp
jne
push
push
imul
outsl
lcall
mov
sub
push
dec
dec
ror
sbb
sub
push
push
inc
test
out
fildll
push
xor
xor
test
xchg
inc
mov
and
cwtl
repz
call
adc
sti
jmp
inc
and
subb
movsb
cld
add
mov
adc
out
lahf
push
gs
sbb
scas
add
ror
je
pop
jge
data16
ret
notb
sbbb
lds
cmp
andl
xchg
inc
pop
jae
lahf
mov
movb
rcll
lahf
gs
movsb
cwtl
pop
ficoml
add
lret
push
inc
insb
xorb
or
aad
xor
or
sbb
pop
jle
scas
or
xor
lods
repz
cli
adc
mov
lods
stos
je
insl
push
xchg
dec
imul
push
mov
cmp
xchg
in
and
and
mov
jne
xorb
and
mov
cwtl
mov
sub
jecxz
jecxz
fs
mov
pop
mov
mov
in
test
scas
or
aas
cmc
icebp
out
gs
outsl
push
and
xlat
mov
std
ret
call
mov
inc
push
mov
sarb
inc
add
jl
sub
call
cltd
mov
call
mov
inc
adc
pop
push
jle
pop
outsl
mov
mov
out
aaa
pop
js
xchg
xchg
mov
ret
adc
xchg
pop
popf
in
cs
mov
fcmovnb
and
pop
sub
adcl
int3
loop
inc
decb
dec
mov
cmp
jo
enter
pushf
push
and
and
mov
out
shl
arpl
pop
xchg
iret
push
inc
push
outsl
or
nop
movsl
jb
scas
sbb
imul
dec
dec
cmpb
and
outsl
add
arpl
daa
enter
insb
out
mov
bound
imul
push
cmp
xor
in
stos
pop
repnz
bound
faddp
inc
iret
sub
std
mov
or
sub
inc
addb
fnstcw
or
dec
push
xchg
inc
push
repnz
movsl
xchg
cs
cmpsl
test
jl
sub
lds
std
inc
fnsave
andb
mov
daa
mov
sbb
mov
xchg
dec
pop
enter
ss
lock
int3
jae
movl
and
or
xor
or
ret
cld
cwtl
inc
mov
mov
bound
fs
mov
int3
mov
inc
jno
mov
inc
push
out
add
fmull
ja
insl
int
adc
push
xchg
imul
in
loop
stc
sub
mov
je
cmpsb
pop
xchg
jae
inc
xchg
mov
pop
fisttpl
repnz
xor
pop
sub
mov
std
xchg
out
sbb
dec
cld
stos
push
adc
call
fisttpll
adc
or
push
fistpl
dec
jb
jmp
imul
jno
pop
js
or
pop
mov
mov
xchg
mov
shlb
icebp
mov
insb
xchg
lret
addr16
imul
aas
cmpsl
daa
es
popl
sahf
push
lods
call
mov
sbb
sbb
push
jbe
pop
ljmp
cli
popa
cmp
push
dec
movsb
cmp
nop
divl
jo
aas
mov
aam
pop
mov
cmp
icebp
fimull
and
add
pop
xor
xor
xorb
je
mov
scas
push
ljmp
outsl
xchg
inc
sahf
dec
mov
loopne
sub
add
shlb
cwtl
fisubs
mov
sbb
mov
daa
xor
and
and
add
outsl
sbb
ds
test
dec
popf
sbb
orb
sub
repnz
fs
push
in
dec
mov
ljmp
aaa
mov
jb
push
mov
lret
sbb
fsts
mov
pushf
aas
fcoms
outsb
stos
push
xchg
cld
sub
movsb
stos
mov
push
mov
std
mov
cmp
mov
sbb
push
pusha
mov
jg
jbe
sub
cmpsb
mov
mov
dec
repz
js
scas
mov
adc
xor
and
mov
cmp
inc
aas
jecxz
fsubrp
xchg
or
adc
mov
pop
adc
sub
jae
jbe
dec
in
mov
hlt
or
push
imul
pop
stos
jo
dec
lea
dec
dec
inc
sub
pop
adcb
and
push
inc
sbb
int3
mov
out
shl
in
mov
out
or
popa
mov
cmp
add
adcl
in
mov
int3
push
iret
sbbb
inc
push
cmp
aad
addr16
or
xchg
out
xchg
push
stos
or
xor
and
addr16
fstpl
or
fs
or
mov
lret
clc
or
mov
insl
ljmp
imul
jb
add
insl
sub
mov
aad
iret
aas
mov
fisubrs
push
popa
sbb
fwait
mov
push
shll
les
add
pop
dec
lods
sub
mov
aad
decb
cld
movsb
neg
adc
cmp
je
and
fildl
xor
incb
jnp
inc
sarl
xchg
into
cmpsb
xor
out
sti
call
sbb
repz
loope
xlat
dec
lea
pop
sub
aam
sbb
ss
aad
push
sti
rep
lret
sbb
dec
jbe
pop
push
mov
clc
bound
mov
fbld
fisubl
mov
std
ficompl
lods
mov
sub
scas
int3
add
mov
je
imul
out
pop
adc
lods
add
inc
fsts
cmp
adc
cmpps
adc
movsl
xor
push
mov
fnstsw
je
push
cltd
mov
dec
loopne
ljmp
dec
out
loope
cmpsl
test
and
and
jae
into
cmpsb
cs
xchg
xchg
xchg
inc
push
insb
mov
mov
rclb
or
jb
ja
push
mov
xchg
push
mov
mov
addr16
aam
daa
pop
es
fwait
xchg
lea
in
sub
popf
fisubs
dec
js
ja
or
pop
iret
fcomps
daa
iret
or
dec
call
aam
test
out
pushf
or
repz
ss
ror
xor
stc
push
add
ja
repz
bound
fs
push
cmpsl
in
jae
jnp
sub
pop
sbb
fwait
sub
pushf
dec
mov
add
dec
cltd
stc
js
or
add
ljmp
jg
and
dec
lods
cmp
push
cs
cmp
jmp
xchg
stos
inc
sbb
pusha
gs
cwtl
rcrl
add
lcall
or
or
or
push
lcall
sub
repnz
sub
inc
pusha
xchg
movl
pop
pop
or
mov
movsb
decb
jae
xchg
mov
iret
mov
loopne
jp
out
pusha
pop
push
adc
mov
shl
imulb
mov
dec
mov
mov
or
mov
mov
sbb
push
adc
pushf
xor
in
scas
cmp
or
notl
pop
in
pop
aaa
sbb
fwait
mov
cltd
push
mov
test
fiaddl
mov
in
add
sub
hlt
jns
test
lcall
mov
push
or
mov
call
adc
iret
jp
shl
dec
and
xchg
sti
js
jne
addr16
in
push
add
cmp
shrl
rolb
es
adc
sub
inc
pop
in
dec
pop
push
mov
in
dec
outsl
into
mov
xchg
dec
sbb
or
loope
or
mov
lahf
in
fbstp
es
pop
out
jl
cmp
push
mov
loope
push
repnz
xor
add
in
or
pop
dec
mov
divb
aam
jb
stos
xor
into
cmp
adc
mov
jge
push
les
mov
nop
push
das
pop
xchg
mov
int3
sub
cld
push
sti
pusha
ds
push
rolb
sbb
out
mov
.byte
xchg
dec
mov
add
add
add
add
sub
add
cwtl
add
adcb
add
fadds
add
add
add
add
add
dec
add
addb
add
jo
add
add
add
add
add
pusha
add
add
push
add
add
add
add
add
add
mov
add
push
icebp
push
add
add
add
add
add
add
addb
add
add
add
enter
sub
push
add
add
add
add
add
add
addb
add
add
add
or
add
in
in
push
add
add
and
add
add
add
arpl
mov
dec
es
jae
loop
xchg
mov
sbb
mov
and
xor
outsb
test
addr16
and
jl
cli
xor
test
loope
push
inc
lret
mov
cmpsl
jmp
into
ja
imul
lret
lods
adc
cli
cmp
adc
push
sahf
and
cmp
pop
bound
and
in
or
mov
adc
jne
stos
cmpsl
por
loop
out
in
arpl
movsl
shrb
mov
stos
add
mov
cmc
push
stos
daa
sbb
xor
cli
sbbl
int
cltd
dec
dec
in
fldl
fbstp
cmp
lcall
cmp
sub
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
js
add
call
sbb
xlat
les
cs
pop
gs
movzwl
pop
add
mov
sub
mov
mov
jo
sub
sub
add
js
xor
mov
mov
add
mov
sub
movzwl
dec
mov
cmp
jne
push
mov
pop
jmp
stos
fwait
cmp
jbe
in
add
push
add
pop
jmp
adc
mov
cmpb
jnp
and
xchg
popf
mov
jle
fwait
adc
or
dec
cmp
scas
jl
nop
and
and
sbb
jle
cltd
scas
mov
lea
outsb
jae
mov
xor
add
adc
test
jle
iret
mov
and
inc
insl
je
mov
push
stos
fnsave
cwtl
adc
mov
push
fstpl
sub
dec
jge
adc
test
add
out
dec
fistpll
outsb
jo
mov
cmp
mov
mov
dec
fstpl
and
mov
mov
or
cltd
and
sub
pop
enter
insl
jl
mov
jae
jge
jle
cltd
scas
xchg
addl
loope
mov
std
push
mov
stc
jns
ss
xor
lea
cmp
popf
xor
data16
sahf
or
mov
inc
adc
sbb
or
mov
xor
sarb
arpl
popf
push
jg
lret
in
jo
xchg
sbb
and
ret
xchg
dec
push
or
test
aam
jbe
sbb
mov
adc
xor
push
jo
adc
stos
sub
xchg
xor
into
push
fistpl
imul
ss
dec
mov
jo
inc
add
jne
mov
jns
mov
pop
mov
sub
fs
jne
bound
repz
xor
jae
xchg
idivl
jne
gs
mov
jl
adc
imull
xchg
out
jnp
fcoms
sbb
inc
sub
mov
jo
decl
mov
mov
sub
or
xchg
and
mov
push
adc
out
sub
and
xchg
sub
push
push
push
mov
pop
jb
cmp
faddl
inc
test
sub
sub
das
outsb
roll
popa
gs
pop
push
test
daa
xchg
fs
inc
sbb
inc
adc
dec
mov
pop
lock
xchg
sub
adc
rclb
cld
push
jmp
xchg
lret
pop
sub
and
sti
cmp
out
and
sub
js
xchg
and
loopne
ret
ret
cli
sub
mov
clc
enter
dec
pop
push
outsl
scas
add
xlat
insl
outsl
add
fnsave
shll
inc
push
out
cmp
xlat
and
pop
dec
insb
push
out
shrb
dec
pop
movb
and
sbb
fsubs
pop
rcrl
dec
int
clc
scas
mov
scas
call
lahf
loop
sbb
fsts
je
push
out
int
add
movsl
lahf
ret
push
out
inc
push
out
inc
push
pop
movsl
push
jne
test
jae
jecxz
movsb
pop
out
test
dec
xlat
ds
out
imul
push
inc
push
out
or
ss
and
inc
and
mov
inc
inc
pop
cmp
adc
mov
add
dec
fnstenv
xchg
push
sbb
xlat
push
push
inc
push
add
dec
in
mov
dec
inc
push
fistpll
adc
sahf
dec
aas
push
out
ljmp
cmp
push
shlb
out
dec
push
push
mov
pop
out
out
jle
inc
push
add
dec
dec
js
dec
inc
pop
push
push
out
add
test
out
test
out
icebp
sbb
inc
int3
es
sbb
icebp
neg
dec
inc
and
in
and
lea
jmp
call
in
daa
aad
insl
cmpsl
rorb
pop
aad
insl
xchg
sar
and
testb
neg
jl
fistps
or
lahf
jae
inc
test
adc
jmp
jge
add
add
inc
push
add
push
inc
push
add
aaa
and
dec
jae
in
sbb
pop
add
push
out
add
test
out
ja
test
les
dec
dec
push
sbb
int
push
and
shl
dec
dec
push
fcompl
test
dec
inc
imul
inc
push
lahf
dec
inc
push
out
inc
push
out
in
testl
fmuls
pusha
push
mov
pop
or
jbe
aad
sbb
loopne
and
pop
loopne
mov
aad
sbb
pop
dec
inc
push
loopne
and
pop
add
rcrb
es
or
or
mov
aad
sbb
rclb
lods
outsb
aad
sar
add
inc
jecxz
push
out
es
or
or
mov
aad
sbb
pop
xor
jae
out
push
out
es
or
or
inc
dec
mov
fcmovbe
push
sbb
scas
mov
pusha
or
movsl
sbb
push
xchg
data16
jle
inc
sbb
out
inc
pop
lock
jb
pushf
xchg
jne
das
or
out
or
movsl
pop
inc
sub
dec
push
add
dec
imul
cltd
sbb
push
pusha
or
movsl
inc
fldenv
mov
inc
in
test
sbb
cmp
mov
or
cmpsl
fwait
sahf
dec
pop
or
and
sahf
inc
in
test
sbb
cmp
movsl
push
sbb
lods
add
sub
ljmp
dec
in
pop
mov
sbb
cmpsl
out
aas
push
jno
inc
pop
out
cmpsb
arpl
test
push
fyl2x
mov
not
mov
es
pop
fisttps
fisubl
and
clc
fisttps
int3
loope
loopne
inc
jmp
dec
inc
push
push
shlb
pop
push
fs
mov
in
or
push
scas
sarb
in
ret
dec
inc
push
adc
subl
xchg
lea
ret
js
inc
movsl
push
sub
out
test
lahf
pop
fistps
insl
pop
cmp
push
pop
scas
fs
sub
mov
imull
call
icebp
iret
push
mov
sahf
push
adc
xchg
and
ret
xor
adc
mov
xchg
hlt
rcrb
pop
lcall
inc
push
out
inc
push
out
inc
push
out
inc
push
out
inc
push
out
inc
push
out
cmp
out
mov
pop
out
add
out
inc
push
out
inc
push
out
inc
push
out
inc
push
out
inc
jne
dec
inc
push
out
inc
push
out
inc
push
out
inc
push
out
cmp
dec
xor
add
lea
lret
int
push
test
movsl
sub
call
and
xor
scas
mov
pop
jne
push
and
mov
dec
push
in
cld
mov
int
push
mov
or
int3
imul
sti
movsl
xchg
add
jns
fimuls
outsl
add
aaa
push
std
xor
loop
sub
pop
jp
push
mov
ret
fidivrl
jo
lret
push
cmp
and
pop
data16
std
dec
gs
addb
fwait
dec
pop
cld
jg
add
out
mov
and
xchg
lcall
mov
xorb
ret
mov
shll
pop
pop
loopne
or
ficomps
sbb
xor
push
lock
leave
mov
out
dec
aaa
fidivl
imul
int3
in
cmc
repz
inc
cmp
xlat
pop
mov
mov
inc
sub
xchg
add
outsl
cmp
mov
inc
xor
cwtl
push
ds
hlt
and
push
in
fldcw
fsubr
pop
loop
mov
or
cmp
in
sub
sbbl
adc
push
mov
addr16
nop
aad
pop
ljmp
sbb
hlt
cmpsb
lret
out
cld
popa
pop
cwtl
xchg
pop
push
mov
dec
stos
push
lret
idivl
lahf
xchg
add
icebp
cmp
xor
insl
lods
push
test
out
popf
lods
outsl
stc
xchg
xor
jecxz
adc
mov
ficomps
pop
mov
lahf
push
aam
inc
pop
pop
push
xor
push
ds
out
sti
faddp
sub
sbb
push
aam
gs
sub
ljmp
jno
inc
jae
dec
inc
jne
dec
inc
ljmp
cmp
sarl
mov
ret
adc
out
imul
cli
call
inc
clc
lahf
nop
mov
jecxz
adc
or
adc
sub
inc
sahf
in
gs
fabs
push
and
je
jp
dec
roll
mov
mov
mov
xchg
inc
imul
outsb
pop
es
cmc
imul
movsb
out
pop
cwtl
addr16
add
dec
lods
adc
add
mov
clc
mov
nop
xor
sbb
push
push
mov
push
cmp
int3
lods
mov
insl
pop
mov
mov
jge
cmp
push
popf
shl
arpl
ja
nop
out
orl
mov
test
pop
outsb
pop
adc
lods
mov
jg
push
fs
sub
aad
iret
mov
sub
and
add
add
add
in
push
add
in
push
add
jb
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
in
push
add
jmp
add
in
push
add
in
push
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
in
push
add
add
add
in
push
add
add
add
add
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
inc
add
add
add
push
add
push
add
push
add
dec
add
dec
add
dec
add
inc
add
add
add
mov
add
add
add
add
push
add
add
add
add
add
add
add
add
mov
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
jl
add
add
xor
cmp
xor
xor
xor
xor
inc
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
outsb
add
add
add
add
popa
add
imul
je
and
push
add
insb
add
sub
add
add
arpl
je
outsl
add
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
add
je
sub
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
jae
jo
pop
add
jo
xor
pop
add
je
insl
add
add
add
xor
cmp
xor
xor
sub
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
add
je
jb
popa
add
je
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
add
add
test
xor
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
sub
inc
add
add
add
imul
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
insb
add
add
imul
je
jae
and
jb
add
add
jbe
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
pop
add
add
inc
add
add
pop
add
and
and
and
and
and
and
and
and
and
and
and
and
add
add
je
sub
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
sub
push
add
add
add
imul
outsl
add
jae
sub
push
add
add
add
jo
add
popa
add
add
add
add
jns
jae
je
add
add
add
inc
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
mov
add
add
add
and
adc
add
add
call
add
adc
add
add
sub
add
add
xchg
aas
sub
add
adc
add
and
add
add
add
add
add
addb
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
add
add
add
add
add
add
add
add
or
pushl
jo
xor
jo
push
aas
addb
idivl
divl
addb
icebp
pop
data16
dec
addb
stc
pop
out
dec
addb
incl
inc
add
addb
inc
inc
inc
jo
addb
mov
rcrb
jnp
jnp
pop
xor
rolb
add
add
mov
add
xor
add
add
add
loopne
xor
loopne
mov
loopne
xor
loopne
add
loopne
ja
sub
add
and
add
inc
add
add
add
add
add
add
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
xorl
xor
xor
xor
add
add
add
add
jnp
jnp
add
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
mov
xor
xor
xor
xor
xor
ja
addb
xor
aas
pushl
xor
push
addb
jg
aas
push
add
push
orb
div
aas
push
xor
push
addb
xor
xor
xor
add
testl
push
xor
testl
clc
mov
addb
xrelease
push
maskmovq
testl
incl
lock
addb
add
mulb
incl
addb
add
ljmp
cld
in
addb
add
jmp
cld
testl
push
addb
add
mov
xchg
ja
ja
ja
ja
ja
ja
add
add
inc
inc
inc
add
add
addb
add
inc
inc
inc
jo
pop
jo
add
add
inc
inc
inc
jo
pop
jo
add
add
inc
inc
inc
inc
inc
inc
inc
addb
add
ja
ja
ja
ja
add
add
mov
mov
lock
push
add
push
add
push
add
jg
add
aas
lock
aas
lock
aas
lock
aas
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
xchg
add
add
add
out
mov
inc
and
dec
pop
and
stos
jae
add
cltd
push
leave
sub
pop
mov
sbb
lods
enter
dec
pop
out
cmp
repz
test
stc
pavgw
hlt
fldcw
icebp
sub
push
jno
xor
push
cltd
fildl
push
inc
enter
outsl
inc
mov
pushf
inc
add
jae
test
es
jg
movsb
fs
pop
cltd
sahf
cmpsb
das
int3
adc
add
cltd
jb
out
inc
push
pop
pop
stos
sti
hlt
fdivs
jb
je,pt
cmp
js
mov
insl
addr16
lods
push
dec
addr16
icebp
xchg
insb
jnp
ret
push
or
cmpsl
or
fsubrl
add
mov
xor
jp
adc
jbe
mov
xchg
push
cs
mov
sti
adc
or
add
mov
jl
xchg
xor
mov
mov
sub
repnz
repz
pop
dec
xchg
cltd
repz
push
mov
iret
jne
fisubl
cmp
int3
add
sub
xor
sub
lock
xor
and
sahf
cli
mov
cwtl
sarb
clc
xchg
push
adc
fwait
ret
cld
pop
jl
and
loop
stc
cmp
pop
jae
jb
leave
call
cld
and
mov
jns
pushf
push
in
aas
jnp
out
cli
push
push
into
ret
lock
push
stos
daa
sub
cmp
imul
clc
fidivrl
inc
pushf
pushf
fsubs
mov
rdtsc
adc
jnp
xchg
sbb
xchg
fwait
push
rcl
cwtl
fistps
jmp
jl
movl
pusha
cwtl
call
xchg
adc
dec
push
gs
or
mov
dec
inc
cwtl
js
mov
xor
stos
mov
push
lahf
pop
pop
jle
sub
xchg
cmpsb
cltd
cmp
bound
adc
in
test
and
pop
clc
jle
cmc
cld
mov
sqrtps
movsb
aaa
sbb
mov
lcall
cltd
int3
dec
lods
lods
ret
pop
cs
dec
mov
int3
rcrb
ss
cmc
fidivl
pop
in
lods
cld
test
and
add
lahf
mov
xchg
jecxz
scas
fwait
mov
cmpsb
aad
incb
aad
sarl
dec
repz
das
out
mov
pop
push
cmpsl
sub
adc
fnstenv
xor
arpl
mull
stc
and
adc
pop
mov
pop
xchg
lret
sub
je
fstp
xchg
mov
mov
ljmp
lcall
xchg
inc
jecxz
xchg
xchg
xchg
adc
adc
lcall
cmc
dec
jle
mov
outsb
pop
jecxz
push
out
or
push
inc
das
je
loope
push
insb
mov
shrl
mov
add
inc
lods
jmp
xchg
cmp
mov
sub
mov
ljmp
adc
mov
inc
hlt
loope
lcall
xor
fwait
mov
and
lret
repnz
rcll
addr16
lahf
pusha
fstl
pop
push
nop
lods
std
imul
sbb
lods
mov
pop
jmp
repnz
ja
gs
cmc
ds
cmp
add
jns
stos
cmp
lods
add
mov
mov
movsb
xorb
sub
shl
add
or
in
out
imul
or
je
mov
ljmp
arpl
rorb
aas
int3
into
jge
icebp
call
cmp
test
out
xchg
scas
das
push
ja
repnz
repz
std
push
ljmp
cmp
call
inc
ror
add
jb
sub
rcll
das
sbb
notl
cmp
data16
out
mov
jns
test
cmp
mov
lret
mov
out
aam
lock
shlb
push
sbb
mov
push
jne
jmp
push
imul
mov
ljmp
popf
mov
mov
aam
xor
push
dec
mov
xor
jbe
mov
hlt
aaa
rorl
orb
lret
cmp
mov
jno
lret
xor
sahf
dec
insl
pop
mov
mov
cmpsl
mov
sbb
mov
xor
movsb
push
dec
xlat
push
xchg
out
pop
loopne
int3
scas
xchg
add
les
jae
icebp
inc
test
xor
in
jno
daa
ret
popf
aas
repnz
sub
cmp
sub
pop
int
mov
sti
mov
pop
lods
pop
xchg
dec
add
fwait
pop
notl
adc
movsl
push
mov
es
and
jle
xchg
mov
mov
inc
cmp
jecxz
and
pop
dec
jmp
test
sbb
jecxz
inc
jmp
int
push
rorl
hlt
out
push
je
out
insb
loop
or
ds
and
bound
addr16
aaa
out
idivl
leave
dec
cmpsl
xchg
push
ja,pn
xchg
les
addb
lea
sub
xchg
cmp
mov
xor
test
loope
dec
out
roll
and
into
imul
ja
fstpl
dec
mov
jmp
mov
lret
add
fiaddl
les
out
jecxz
jne
add
cmp
out
nop
les
xor
or
mov
push
out
mov
pusha
xchg
popf
lret
fisttpll
mov
in
add
push
fsub
or
mov
stos
test
dec
and
cwtl
stos
mov
addr16
xchg
test
bsr
jnp
cmp
jg
insb
cmc
outsl
jge
mov
sarb
cmp
xchg
adc
mov
sub
shll
lret
mov
call
hlt
xor
dec
push
inc
cmp
out
jecxz
jg
outsb
or
jp
cmp
xchg
out
stos
mulb
and
icebp
out
mov
sub
cmpsl
fists
jne
pop
lock
sti
mov
mov
cmpsb
cmp
paddw
lahf
scas
sar
cmpsb
andb
push
push
sbb
xor
cmp
cmp
movsl
adc
fcompl
in
cmpsl
dec
outsl
push
xor
pop
sub
dec
dec
mov
fbld
mov
mov
cmp
xor
lret
add
stc
mov
xor
mov
bound
dec
incb
or
in
lret
out
inc
pop
xor
rcll
ret
shl
sub
fimull
fdivl
sbb
int3
std
fwait
sub
push
jns
jnp
popf
fdivrl
dec
mov
int3
inc
mov
pop
push
pop
inc
xchg
dec
popf
and
daa
fxch
outsl
jecxz
movsl
mov
mov
mov
movsb
mov
lahf
add
add
sub
test
out
push
ret
sbb
sub
rorl
jmp
cmp
loope
mov
mov
mov
sbb
mov
mov
leave
pop
call
push
std
ror
fcoms
push
pop
pusha
lock
push
imul
pop
and
es
xchg
loope
or
inc
bound
push
les
orl
inc
push
push
bound
cmp
pmullw
hlt
mov
dec
lods
jg
rorl
xchg
lcall
fnsave
xchg
xchg
repz
negb
invd
out
loop
jl
dec
jmp
mov
pop
sub
dec
xchg
hlt
add
jle
mov
stc
xor
lea
and
daa
outsl
fwait
xchg
mov
dec
clc
shlb
ja
in
lahf
add
jne
jg
lds
addb
scas
cmp
pop
pop
scas
xchg
jmp
cmp
pop
sub
lcall
ret
and
sti
icebp
fstpt
push
gs
out
inc
mov
sub
movsb
nop
ljmp
mov
inc
inc
mov
jl
add
sbb
mov
ficompl
mov
mov
imul
cmp
xchg
out
stos
mov
imul
mov
jmp
insb
inc
xchg
jmp
dec
inc
cmp
outsb
cmp
push
adc
xchg
sub
ja
xchg
pop
stos
or
cltd
adc
mov
xchg
inc
push
mul
popf
and
and
outsl
mov
mov
lods
sahf
inc
add
pop
pop
push
lea
jmp
out
sub
push
mov
mov
mov
loopne
mov
pop
dec
insb
mov
and
mov
stos
push
dec
das
and
push
jns
fcmovu
mov
xlat
repnz
and
lea
jno
mov
fcmovne
mov
jb
out
cmp
test
lea
push
in
mov
xor
enter
out
adc
pop
iret
sub
rclb
mov
jp
or
int3
pop
cmp
cmp
cmp
cwtl
sahf
mov
cmp
inc
ss
adc
js
add
jmp
and
mov
push
das
pop
sub
je
pop
repz
shrb
sbb
adcl
and
push
jl
dec
and
in
dec
inc
lods
mov
fsubs
test
movsl
sub
rcrb
jle
fisubl
or
pop
mov
hlt
push
push
inc
clc
inc
pop
or
mov
dec
cmc
rcr
add
push
std
pop
push
iret
test
mov
repz
rolb
out
adcl
dec
jb
jl
imul
xchg
or
mov
lods
inc
mov
sub
pop
je
pop
jb
sub
mov
mov
pop
int3
push
cmpsl
addb
xchg
shrl
pop
sti
ja
pop
aad
xor
jp
xchg
leave
rclb
pusha
insl
in
rclb
into
js
xchg
pushf
ret
or
test
and
enter
and
gs
inc
xor
mov
movsb
icebp
mov
outsl
imul
lods
xor
into
arpl
out
adc
push
push
idivb
ret
sbb
in
ret
adc
push
in
maxps
cmp
adc
hlt
sbb
pop
into
data16
fadds
sti
popf
loopne
pop
dec
je
sub
aas
inc
mov
cmp
and
and
and
je
pop
jnp
or
mov
inc
insl
mov
jno
sub
mov
cltd
test
repz
pop
sub
aam
xchg
add
adc
push
xchg
in
pop
ret
or
movsb
ds
mov
out
insb
push
in
sub
cmpsb
pop
add
aam
push
daa
rcll
aad
bound
lods
cmpsl
repnz
scas
xor
xchg
int3
rorb
fisttpl
pop
es
sbb
add
repz
movsl
cmpsb
xchg
stos
sarb
mov
sbb
push
xchg
and
add
lret
sarb
aad
loopne
insb
shll
or
cmp
pushf
push
sbb
sbb
sub
sub
dec
cld
out
lret
jmp
mov
sahf
inc
cmp
lcall
push
movsl
push
pop
out
cmp
mov
mov
out
dec
cmp
dec
sub
stos
sub
mov
push
pop
xchg
cmpsb
inc
pop
sar
adc
dec
nop
inc
and
cmpsl
adc
adc
mov
sbb
lret
jno
xchg
ss
in
mov
insl
mov
adc
in
sarb
pop
pop
loope
scas
pushf
pop
push
cmp
in
push
or
clc
or
cmp
inc
adc
inc
test
mov
call
mov
int
ret
mov
icebp
std
adc
lods
cmp
imulb
aad
xchg
pop
das
inc
pop
mov
sbb
pop
int
cld
ffreep
lret
sub
sub
adc
lds
sahf
repz
inc
cli
mov
adc
dec
clc
idiv
dec
hlt
icebp
jbe
mov
inc
adc
pop
lods
add
in
aas
sbb
movsb
inc
adc
lods
daa
xor
xchg
dec
adc
cmpsl
cmpsl
clc
mov
ret
mov
adc
adc
inc
fistl
insl
mov
jbe
aad
out
hlt
mov
jo
cltd
jns
icebp
add
sub
adc
jg
or
popa
imul
sbbl
fidivrs
sub
enter
jne
roll
in
sub
push
cmpsl
pop
aaa
mov
adc
adcb
mov
in
out
xor
jnp
movsl
cmpsb
cltd
aaa
xor
mov
shrl
lods
dec
dec
jecxz
xchg
int3
and
ret
cmp
bnd
mov
jle
xor
and
adc
pop
mov
leave
mov
dec
daa
mov
mov
loopne
xlat
dec
jnp
subl
ja
xor
mov
andl
adc
cmp
push
xor
test
push
in
stos
jne
push
inc
add
scas
xor
mov
imul
in
dec
cmpb
mov
rorb
lock
aad
idivl
in
adc
ret
leave
or
aam
cmp
xchg
pusha
add
stos
push
mov
jg
jecxz
lcall
addr16
push
sbbl
xchg
es
sub
rolb
pop
push
inc
inc
cmpl
push
jle
xor
test
sbb
add
lods
inc
orl
cmc
or
lock
sbb
sbb
mov
test
push
js
std
mov
sarl
and
cmc
dec
sbb
jno
inc
daa
add
and
sbb
push
pmaddwd
add
dec
mov
fists
xchg
cmp
cwtl
add
movsl
xchg
les
int3
shll
inc
iret
jno
lods
and
fadd
shrb
dec
cmpsl
std
test
sbb
sti
push
push
or
test
sbb
mov
roll
push
jbe
sahf
lret
adc
mov
jae
push
mov
push
in
in
outsb
mov
in
jle
or
lods
cwtl
in
mov
push
insl
push
mov
sbb
enter
adc
mov
out
test
push
pop
mov
pop
inc
and
hlt
hlt
dec
ret
aad
xor
mov
adc
lcall
lret
nop
fcmovbe
mov
mov
push
test
jnp
repnz
pusha
mov
inc
adc
aam
ficompl
jmp
xchg
add
add
test
loop
cmpsl
xchg
xlat
ret
mov
and
lods
push
js
lcall
cmp
or
fwait
inc
push
or
mov
xchg
mov
movsl
push
lcall
xor
shlb
xchg
sub
aad
adc
ret
fcmovnu
sub
scas
ret
arpl
adc
xchg
mov
pop
or
cmc
shrb
add
dec
jge
repz
aad
mov
cli
mov
push
sbb
sbb
add
int
jg
pop
or
icebp
jbe
loope
mov
jl
out
sub
mov
out
jl
inc
mov
mov
rcrl
sbbb
gs
xchg
jg
fs
call
mov
xorb
mov
adc
push
lcall
xor
dec
sbb
push
and
xor
sub
lahf
add
dec
jae
adc
push
aaa
mov
aam
imul
push
lods
xlat
ja
and
ds
lcall
out
ljmp
scas
jno
lret
mov
scas
enter
xlat
jl
inc
bound
leave
add
outsl
push
and
jp
call
and
fistpl
cmp
lret
arpl
cmpsl
nop
lcall
add
stc
add
cwtl
sbb
mov
dec
jmp
dec
aad
inc
clc
movsl
inc
loop
mov
xchg
jge
lds
lret
cmp
js
mov
repz
lods
dec
xchg
xlat
add
es
mov
das
ja
into
push
cmp
jle
cld
out
int
xor
mov
mov
call
xchg
and
in
std
addr16
jne
fs
stos
cmp
mov
and
lock
scas
adc
pop
jmp
roll
cli
mov
int3
sub
in
movsb
gs
cmp
stc
lods
mov
jns
ss
incb
cmp
stos
sbb
inc
xor
insl
es
cmp
push
sub
arpl
mov
mov
sub
stos
jns
push
sub
in
fs
adc
loop
loop
sbb
sub
fnstcw
cs
inc
mov
dec
mov
jae
sti
push
adc
push
and
xlat
ret
xchg
jnp
push
ficompl
mov
aad
or
pop
cmpsb
or
call
cmpsb
adc
out
out
cmpsb
stos
mov
dec
xchg
adc
pop
push
xor
inc
mov
lea
icebp
sbb
out
xor
orl
sti
lea
and
cwtl
out
lds
jno
xor
rcl
xchg
pop
loope
leave
rclb
cmc
imul
ss
inc
mov
mov
bound
push
adc
iret
cmpl
inc
hlt
xor
fsubr
stos
loopne
mov
fsubrl
scas
stos
cmpsl
adc
sub
xchg
sti
xor
stos
mov
jmp
inc
add
shrl
out
pop
push
mov
lret
cwtl
sarl
ficoms
mov
lods
mov
insb
mov
decb
adc
mov
ds
cmp
push
cmpsb
sub
inc
cmc
repz
pop
out
imul
add
shr
pop
mov
mov
loopne
dec
dec
pop
mov
orb
xchg
insl
hlt
les
sbb
inc
sbb
mov
daa
pop
leave
popf
imul
pop
dec
imul
xor
inc
fs
mov
inc
daa
xlat
mov
lea
sub
xchg
cli
xchg
sub
inc
hlt
ds
into
inc
sbb
xchg
fcmovu
jecxz
icebp
movsl
inc
repz
test
mov
push
fldt
lea
je
decb
movsl
push
inc
jp
jo
mov
lods
fdivrl
mov
mov
push
cmp
mov
jl
out
push
stos
xlat
lret
cmp
pushf
add
jno
fwait
or
jbe
jno
xlat
bswap
sub
data16
inc
test
jmp
mov
cmpsb
add
xchg
lret
mov
push
int
jg
xchg
lahf
mov
jl
pusha
and
sub
push
pop
dec
jo
and
mov
jnp
pop
jns
sbbb
jge
call
mov
add
ja
rcr
jmp
stos
iret
jg
rorb
sub
adc
mov
or
ret
mov
mov
push
inc
jge
or
mov
push
ret
cmp
adcb
cmc
adc
fs
pop
dec
cmpsl
push
faddl
dec
sbb
xor
dec
enter
xor
jae
push
sbb
mov
push
pop
inc
call
in
sbbl
mov
push
mov
div
pop
icebp
pop
mov
fisttpll
cmp
cltd
sub
std
cmpsb
xchg
dec
mov
xchg
lods
xchg
sbb
lods
sub
imul
push
sbb
mov
out
mov
xor
fstpt
lret
mov
mov
ljmp
fs
loopne
jle
imull
jae
jmp
and
jmp
mov
mov
loope
push
xor
pop
pop
xor
outsl
and
mov
adc
movsl
in
pop
sbb
inc
inc
cmp
cmp
jecxz
popf
sub
or
movsl
xchg
dec
mov
in
stos
cwtl
pop
ja
popf
fs
inc
add
xor
inc
xchg
mov
lret
ljmp
cld
jnp
outsl
test
jnp
int
mov
in
divb
and
shlb
mov
mov
push
xor
insb
sbb
dec
enter
mov
mov
push
jp
sahf
ss
or
jmp
addr16
dec
dec
add
fs
cmpsb
js
repz
lret
aas
fisubl
push
inc
push
push
inc
mov
pop
repz
xchg
mov
and
repnz
dec
mov
andb
xchg
dec
jg
pushf
cmp
add
mov
push
xorl
call
jo
out
push
push
daa
sub
ds
dec
sarb
push
jp
xor
loope
pop
mov
xor
call
in
jmp
push
mov
fcmovu
test
insl
cmpsb
xor
adc
pop
insb
cmp
jne
add
pop
mov
int
sub
addr16
mov
mov
inc
sbbl
and
sub
fnstcw
sub
xchg
sub
out
and
mov
cmp
pop
inc
cld
xor
sti
adc
jb
lods
jno
jbe
popa
lods
sarb
cmp
jmp
add
loopne
shlb
sbb
iret
out
lods
inc
insb
test
mov
push
movsb
insb
sbb
loope
out
mov
push
not
sub
in
arpl
sub
add
addb
out
sub
repnz
add
cld
or
testl
ffree
and
jle
fsubl
lock
push
mov
push
out
test
push
sahf
cwtl
xlat
push
fidivrl
aas
imul
jg
ljmp
dec
lahf
dec
add
sahf
xchg
lds
rclb
push
or
push
inc
dec
cwtl
adc
and
das
jmp
rorb
cld
jp
insb
cmp
jecxz
pop
mov
jmp
dec
mulb
xchg
dec
cmpsl
sbb
mov
stos
push
mov
rcrl
mov
stos
push
std
mov
shrl
ret
mov
fstp
and
dec
push
mov
jle
mov
gs
jle
leave
or
fistpl
cmovl
pop
push
cwtl
xchg
pop
push
fisttpll
pop
inc
push
xlat
xchg
jmp
mov
icebp
rorl
mov
test
imul
sbb
test
pop
in
xchg
xor
sbb
sti
dec
pop
test
adc
inc
cmp
lcall
out
sti
popa
pop
mov
inc
mov
shlb
cld
fwait
mov
sub
fyl2xp1
out
addr16
test
adc
xor
xchg
popa
sti
outsb
cmpsl
lods
push
pop
pop
xchg
mov
adc
sub
pop
xor
xor
out
lahf
cmp
jecxz
dec
push
xchg
test
push
mov
cmp
xchg
cli
xchg
adc
xor
int
es
adc
in
aam
punpckhdq
int3
insb
scas
out
cld
xor
stc
mov
cmpl
cmp
cmc
add
out
movsl
lcall
inc
test
jge
push
stc
scas
xchg
shl
scas
mov
faddl
subb
mov
jne
jle
jl
jmp
xlat
stos
jnp
bound
dec
pop
in
ja
mov
and
mov
add
mov
push
dec
mov
imul
cmp
test
cmp
jg
or
pop
xchg
mov
shl
shl
in
and
mov
pop
lods
add
shlb
push
mov
popa
loope
jg
dec
movsb
add
pop
outsb
jle
aad
or
cmpsb
repnz
test
cmp
pop
sbb
enter
or
cmp
inc
lods
mov
xchg
xchg
aad
not
xor
sti
hlt
jno
cmp
je
adc
lds
sub
mov
add
or
push
test
fcmovnbe
inc
lcall
push
mov
arpl
sub
pop
sarb
in
out
test
mov
hlt
push
out
push
das
sbb
pop
xchg
jle
fcomps
inc
aam
out
fs
sbb
or
or
int3
les
outsl
in
inc
sti
sub
vpunpckhbw
xchg
mov
fs
pusha
inc
test
movb
retw
lods
aaa
cmp
sbbb
pop
int
xor
adc
mov
mov
decb
mov
xor
mov
ja,pt
es
into
pop
and
repz
aaa
cmp
cli
dec
and
je
les
mov
fimuls
mov
cmpsl
insb
outsl
mov
fbld
movsl
ror
push
loope
push
mov
push
pop
fidivl
fidivl
mov
xchg
loop
gs
outsb
jecxz
loop
std
xor
mov
enter
mov
test
lahf
inc
or
popa
dec
inc
adc
gs
fistpll
out
mov
xchg
outsb
jecxz
pop
daa
outsl
push
shll
mov
cs
mov
mov
inc
aas
icebp
push
in
pop
inc
out
inc
insl
imul
xlat
popf
iret
daa
mov
ss
cs
fcomps
test
xchg
jg
data16
push
jne
fcomps
int3
mov
xor
loopne
sbb
cmp
clc
int3
rclb
rcr
shrl
sysexit
es
testl
mov
xor
sbb
fldcw
pop
xchg
jae
mov
pusha
movb
jle
or
jne
sub
mov
jmp
cwtl
ret
mov
cltd
inc
loop
xor
xchg
jmp
fsubl
movsb
ficoml
test
mov
pop
or
jb
or
insb
inc
neg
in
mov
in
xchg
fdivrl
or
repnz
sbb
imul
lret
jo
repz
fcoms
out
cmp
jns
cmpsb
mov
cmp
inc
or
cld
mov
mov
push
int3
imul
dec
xlat
je
inc
fcomps
daa
adc
and
inc
xchg
jecxz
lret
cli
inc
cli
loopne
sbbl
fcoml
or
mov
sbb
or
sbb
leave
roll
add
mov
pop
adc
sahf
mov
mov
out
test
and
jmp
mov
in
mov
mov
sbb
aam
andl
lret
shll
lods
dec
iret
out
adc
xchg
sbb
jnp
cmp
sbb
add
jecxz
fmull
in
ja
mov
pop
add
arpl
or
imul
insb
push
aaa
push
cs
fildll
dec
pop
orb
jecxz
inc
cmp
out
push
js
mov
ja
push
or
repz
jmp
fs
adc
and
cld
insl
into
cmp
mov
out
in
out
and
or
roll
push
cld
jmp
loope
or
fists
ffreep
mov
cmp
rolb
fld1
fcmovb
mov
test
jecxz
arpl
pop
sar
sbb
lret
icebp
scas
adc
scas
jecxz
aas
and
aam
ret
pusha
mov
iret
mov
add
stos
mov
push
xor
out
jne
mov
pushl
push
cmp
push
dec
mov
nop
xchg
push
mov
call
fnop
or
sbb
xchg
jbe
cmp
mov
dec
ja
adc
pop
imul
lret
mov
cmpsb
pop
fs
push
pusha
ds
stos
or
rcrb
lret
outsb
nop
inc
mov
inc
cltd
or
dec
cs
lds
hlt
jns
jecxz
push
xor
jns
jge
xor
inc
mov
scas
ret
cmpsb
in
rcl
sub
fdivrl
dec
inc
dec
push
xor
adc
add
mov
add
jle
adc
ret
adc
pop
mov
pop
aad
pop
leave
sarb
insb
mov
bound
addl
ljmp
jnp
cmp
mov
fsubl
jmp
lock
mov
repz
cmpsl
loope
cmp
or
xor
js
inc
call
scas
test
lcall
daa
add
loope
aas
loope
cltd
sub
bnd
lods
xchg
and
xor
gs
mov
sarb
add
add
fwait
icebp
mov
jge
mov
inc
mov
pop
les
mov
imul
push
test
dec
jo
inc
lods
mov
xor
popa
and
mov
or
push
mov
repnz
lock
adc
cwtl
jae
outsb
jg
jp
lret
cmpsl
pop
in
jmp
dec
add
mov
xlat
outsb
and
mov
stc
es
addb
outsl
fs
mov
repnz
enter
pop
pop
pop
sar
leave
stos
pop
mov
cmc
fucomp
outsl
mov
loop
jle
dec
mov
dec
xchg
pop
sbbl
inc
pusha
int3
jb
xchg
inc
and
pop
stos
push
iret
pop
ja
scas
lret
repz
shll
xor
cmpsl
and
adc
push
outsb
xchg
insl
jle
cmp
pop
jmp
js
lods
test
push
jl
sub
pop
test
cwtl
jbe
outsb
or
dec
adc
movsl
lret
mov
lds
xor
or
add
ret
incl
or
sub
fwait
out
dec
xchg
inc
cld
pop
lret
stc
lods
into
xor
data16
movswl
ljmp
push
sub
sub
hlt
dec
jns
lods
shll
xor
push
inc
insl
fdivl
mov
and
sub
loope
pop
insl
inc
div
mov
jle
in
xchg
mov
inc
je
imul
jnp
pop
mov
icebp
fdiv
test
jmp
shr
je
or
dec
scas
out
cmpsb
add
xor
sub
xchg
in
and
pop
sbb
xor
dec
int
mov
jl
mov
out
push
xchg
or
pop
push
push
jae
arpl
xchg
mov
add
and
and
pop
and
dec
cld
sti
push
test
sbb
lods
not
dec
sbb
fcoml
js
mov
inc
pop
jo
dec
cmp
in
fld
mov
push
movsl
xchg
and
scas
cmp
cltd
xor
int3
push
in
sarl
add
popf
jp
inc
mov
inc
adc
mov
ja
scas
add
mov
popa
sub
jb
mov
mov
gs
push
in
repz
xchg
lcall
push
jmp
jl
rcrb
shl
pop
fwait
pop
xchg
push
scas
xchg
enter
nop
imul
outsb
sub
leave
scas
adcl
in
mov
enter
adc
ljmp
insl
add
idiv
push
cs
jle
mov
popa
push
push
inc
sub
icebp
lds
cmp
push
aaa
push
push
mov
js
mov
jmp
xorl
add
mov
scas
sbb
sbb
nop
xor
out
sbb
fcompl
loope
dec
fisttpl
lahf
mov
movsb
push
ret
out
into
xchg
pop
sbb
dec
fs
loope
push
inc
adc
or
sbb
cmp
pop
xchg
pop
add
jg
sub
insl
xchg
push
out
adc
pop
push
rcll
adc
or
inc
sti
stc
fld
sbb
jecxz
cmc
outsw
out
push
cli
rorb
scas
push
dec
mov
cmpsl
ficoms
dec
jp
push
aad
popa
pushf
enter
cmpsl
jno
add
sub
cmp
test
jnp
sbb
xchg
jnp
mov
test
and
dec
repz
dec
push
mov
push
addr16
cmpsb
sbb
cmp
in
cli
test
imul
and
pop
fidivrl
jp
bound
aaa
pop
cmpsb
repnz
ficompl
sub
or
fsubrs
push
stos
mov
pop
mov
ja
test
icebp
das
sets
pop
ffreep
add
or
mov
inc
fcmovnu
adcl
mov
sub
add
mov
repz
xchg
adc
inc
test
insb
cmpsl
adc
out
das
ja
and
out
push
and
lahf
fwait
jp
adc
pop
rol
fsubs
lret
cmpsb
and
ljmp
xchg
or
dec
stos
sbb
pushf
aad
push
pop
movsb
popf
sti
cmp
scas
mov
inc
sbb
int
jge
add
test
ljmp
mov
sbb
cmp
sbb
hlt
int3
out
lock
mov
int3
je
sub
mov
sbb
dec
gs
js
pop
nop
or
inc
add
mov
repz
bound
xchg
shlb
popf
xor
push
add
aam
xchg
jg
js
movl
push
ret
and
jb
scas
push
mov
jecxz
insb
shr
imul
mul
pop
mov
dec
lcall
inc
jns
push
scas
mov
sahf
ss
push
adc
leave
mov
in
jp
xchg
sbb
or
cld
sahf
gs
fstpl
push
cmp
lea
jmp
lea
les
push
je
es
lock
push
pop
jp
sbb
xchg
mov
or
xor
or
push
or
cmc
adc
lea
subl
or
and
testb
rcrb
cmp
and
xchg
cmp
addl
mov
stos
insl
inc
jecxz
test
popa
mov
and
push
sbb
std
cmp
add
cmpsl
jmp
mov
inc
push
mov
jns
or
xor
dec
jmp
xchg
je
es
dec
lahf
arpl
push
fdecstp
xchg
adc
stc
ret
imul
sbb
cs
inc
lods
into
mov
pcmpeqd
mov
in
sub
jo
dec
pop
fldenv
mov
outsb
push
addr16
daa
movsl
es
mov
pop
mov
in
aas
inc
outsl
add
xchg
sub
push
int3
jnp
mov
push
inc
inc
mov
cwtl
daa
xor
pop
mov
cmp
xor
adc
lret
jecxz
shlb
inc
sub
int
imul
inc
xchg
daa
js
pushf
pop
cwtl
outsb
or
sub
adc
mov
and
scas
push
sub
mov
sub
dec
fidivrl
outsl
pop
scas
stc
movsb
push
adc
lcall
movsl
aaa
dec
aaa
jo
flds
add
test
xor
jb
fiaddl
push
ret
mulb
push
cld
out
pop
in
shrb
pop
push
mov
stc
push
and
cltd
cltd
pop
fsub
xlat
fcomp
push
xorl
xor
xlat
stos
dec
cmp
lock
mov
jns
test
dec
sarl
lds
xor
rorb
popf
adc
xchg
fs
or
mov
sbb
ret
pop
mov
jb
loope
int
fwait
lds
xchg
ljmp
popf
movsb
addr16
and
test
sub
outsl
mov
add
xchg
fbld
adc
orb
push
jo
stos
mov
es
inc
fldcw
add
xor
mov
loop
and
gs
in
or
outsb
mov
mov
inc
dec
mov
or
mov
cmp
xchg
fsubrl
ljmp
xor
xor
out
lds
aaa
arpl
pop
outsb
mov
cmpsl
sub
mov
xor
mov
cs
scas
adc
mov
dec
out
movsl
and
test
and
aas
xchg
fadds
sbb
test
testl
das
mov
das
fstpl
adc
out
pop
lods
insb
sti
push
sti
xchg
stc
in
sub
mov
dec
repnz
fbld
lds
push
addb
sub
into
xchg
push
int3
emms
sbb
fisttps
sub
loope
pop
ljmp
push
jns
jnp
jecxz
lock
lcall
push
test
dec
int3
sbb
pop
pop
lahf
sbb
push
pop
outsb
rcrl
mov
int
jg
mov
roll
call
hlt
cmpsl
fnsave
adc
cmc
addr16
clc
addr16
jne
lcall
gs
jae
pop
fistpll
xchg
dec
add
lods
sub
mov
repz
leave
test
nop
sbb
dec
mov
xchg
jb
cmp
pop
je
or
push
enter
sub
stc
mov
inc
outsb
jle
adc
fcomps
out
jg
xchg
cmp
add
pop
test
lcall
dec
ds
lret
lods
rclb
into
test
inc
mov
adcl
loope
icebp
mov
pop
push
std
insl
test
add
xor
stos
and
or
rorb
or
imulb
adc
dec
push
jmp
div
push
pusha
sarb
daa
push
nopl
push
xor
stos
xchg
icebp
and
mull
jne
cmp
loopne
ror
insb
insl
sub
and
mov
flds
mov
rolb
fldcw
fs
add
pop
xchg
pusha
aam
shlb
dec
les
sub
mov
mov
cmpb
dec
enter
jecxz
insb
dec
fs
cmp
icebp
outsb
mov
push
mov
sub
ljmp
aam
adcb
jno
add
test
mov
sbb
pop
sbb
push
add
scas
fbld
shlb
je
dec
add
xchg
cmp
and
idiv
pop
cmp
inc
mov
in
jp
xchg
repnz
and
sbb
fstp
sub
mov
in
dec
adc
out
cmp
enter
inc
sub
fcoml
add
push
aam
mov
out
int
sti
adc
cli
and
gs
in
das
jmp
push
cmp
repz
es
fstpt
or
push
add
cs
jecxz
add
dec
jmp
gs
push
jnp
loop
push
cmpb
pop
mov
pop
mov
ret
shll
mov
test
cwtl
and
mov
sub
adc
aam
mov
sarl
mov
sarb
mov
repz
jno
jno
pop
mov
out
push
push
lds
cmpl
add
js
push
lcall
xchg
pop
gs
fwait
aam
xor
mov
mov
int3
or
fistps
arpl
popa
setg
push
sub
mov
ret
pop
add
dec
pushf
pushw
les
pop
xchg
into
enter
sbb
mov
sbb
mov
mov
dec
cli
flds
aam
repz
jle
cmp
sahf
out
mov
imul
cld
or
jle
jg
mov
and
xlat
test
inc
mov
pop
mov
fadds
sar
repz
inc
filds
outsl
mov
add
imul
xchg
int3
xchg
in
pop
faddl
sub
mov
pop
shll
cwtl
pop
adc
sub
adcl
xlat
mov
mov
in
add
xchg
cmc
sbb
xor
inc
mov
sbb
sbb
xchg
rorl
sub
adc
mov
ret
cs
aaa
xor
jae
ret
sbb
add
inc
push
insl
mov
pop
gs
xchg
addr16
pop
mov
cmp
stos
jb
lods
sbb
ja
je
iret
nop
xchg
pop
xlat
dec
popf
and
imul
jge
xor
ret
leave
mov
test
mov
xor
pop
daa
mov
lret
ficoms
fsubl
cs
imul
mov
loopne
mov
mov
jne
push
cmp
jno
pusha
pop
xorb
int3
jmp
ja
lret
sti
fsubl
mov
lea
in
insl
adc
popf
push
dec
jo
pop
cmc
push
call
into
mov
xchg
push
pusha
jmp
jmp
and
ljmp
add
mov
mov
jecxz
cld
dec
ret
sub
mov
and
aas
mov
rclb
mov
or
adc
dec
and
ja
xchg
mov
push
das
in
mov
and
mov
xchg
adc
cltd
mov
lock
dec
ss
int3
pop
jl
jns
pop
jl
mov
push
xor
imul
scas
aad
iret
inc
xor
mov
les
push
das
push
add
sahf
mov
adc
mov
or
pop
or
dec
push
xor
in
int
or
out
inc
cmpsb
fcoms
dec
xchg
jl
sub
mov
jle
push
xor
shrb
sub
or
les
sbb
sub
hlt
jne
mov
js
push
gs
aam
sub
imul
cmpsl
cli
imulb
push
push
scas
inc
push
insl
fsubl
adc
xchg
inc
add
aam
and
cmpsl
loope
loopne
or
outsl
mov
mov
push
andb
jae
adc
clc
enter
mov
pop
push
inc
mov
aam
or
lods
jle
xor
xor
hlt
xor
call
insb
sbb
faddl
fcmove
cli
call
or
push
push
mov
or
jp
jmp
cmp
cmp
sbb
xor
das
aaa
insl
mov
mov
mov
cmpsb
push
cmp
rclb
insb
in
mov
divb
lods
mov
mov
divl
rorb
je
movsb
push
jbe
test
mov
sub
xchg
cmp
xor
addr16
leave
pop
fmull
pop
rorb
cmp
es
mov
jne
in
push
jns
imul
push
dec
mov
xor
out
pop
fistpll
mov
jp
pop
add
pusha
clc
ds
sbb
out
aas
dec
and
leave
xchg
cmpsb
aaa
scas
sub
xlat
sahf
sub
js
cli
popa
stos
cli
mov
dec
cltd
pusha
mov
cmpsl
pop
inc
dec
adc
jg
leave
loopne
cltd
cmp
dec
sub
in
imul
addr16
pushf
in
cmp
arpl
imul
xor
mov
test
or
inc
clc
cli
nop
or
xchg
jp
loop
sbbb
test
fdivrl
lds
imul
cmp
test
scas
sbbl
xchg
sub
ja
test
or
sbb
loopne
insl
nop
std
ds
xor
fs
fwait
push
mov
xor
cmc
loope
cmpsb
stc
cmp
or
dec
jle
jae
dec
adc
jo
mov
and
into
inc
in
aam
loopne
push
stc
into
fsubrl
xchg
je
push
mov
ja
mov
push
xor
push
movsb
movsb
mov
add
fucomi
repz
or
loopne
jne
xor
ja
dec
mov
ljmp
jg
adc
aam
bound
adc
jo
in
push
decl
imul
cmp
outsw
icebp
out
cltd
jg
pop
out
int3
xlat
push
gs
and
mulb
out
shrl
xchg
out
adc
mov
stos
psadbw
clc
bnd
outsl
add
rcrb
jmp
xor
js
cmp
sarl
push
mov
imul
loope
mov
scas
dec
pusha
mov
das
scas
aam
adc
xchg
lcall
dec
jo
inc
cmpsb
ljmp
sub
lcall
in
xchg
push
xchg
mov
iret
add
pop
xchg
push
arpl
nop
iret
scas
add
pop
mov
pop
not
andb
in
adc
sti
jae
ja
pop
and
cli
shlb
cmp
dec
sub
scas
cmp
inc
ljmp
inc
sbb
roll
jmp
xlat
inc
pop
daa
mov
and
rcl
fld
push
xchg
pop
fwait
dec
ds
std
mov
ja
push
inc
xchg
jl
imul
repnz
mov
adc
outsl
inc
js
aaa
scas
dec
dec
stos
in
lea
cmpl
fwait
xchg
jmp
das
ss
out
lods
push
outsb
pop
int3
or
loope
pusha
xor
test
xor
sbb
mov
and
cld
in
mov
fisttps
rorl
test
xchg
mov
ret
xor
sti
adc
lret
adc
insb
jbe
imul
adc
jp
jp
jbe
fs
cmp
mov
push
push
mov
mov
es
and
jo
mov
je
push
push
sub
sub
cmp
push
jae
mov
jns
es
jns
arpl
call
xor
mov
add
repnz
les
cs
sbb
fdivl
push
and
ds
hlt
push
cmc
and
pusha
sahf
push
hlt
mov
nop
aam
jno
arpl
sar
mov
jle
or
mov
or
pop
lcall
and
jno
jg
fcmovu
jle
mov
pusha
xchg
cmpsl
mov
imul
and
addr16
cltd
push
mov
and
cltd
ljmp
out
mov
cwtl
pop
and
lods
jle
add
insl
iret
aad
xchg
xlat
jno
adc
xrelease
aaa
dec
xchg
xchg
and
push
je
mov
mov
jge
mov
les
adc
push
mov
xor
pop
lods
dec
mov
mov
aaa
mov
push
jae
cwtl
fstl
push
or
inc
decl
leave
mov
add
pop
aaa
mov
push
int3
xchg
add
jge
inc
lcall
adc
push
int3
stc
mov
int3
inc
lds
add
lret
dec
imul
in
pop
mov
mov
iret
xor
lcall
in
add
int3
adc
mov
test
aam
inc
xchg
mov
shll
ret
outsl
or
jo
movsb
sbb
loop
out
xchg
pop
add
pop
adc
scas
imul
and
mov
dec
xor
push
mov
ret
cmp
mov
push
jecxz
outsl
mov
push
add
sbb
inc
pop
in
jp
add
mov
sub
jno
xchg
sahf
or
out
xor
adcl
btr
imul
iret
fsub
mulb
pop
jge
mov
jp
sbb
pusha
mov
dec
xor
jge
mov
mov
insl
mov
popa
lods
inc
push
or
repnz
and
add
jge
ret
imul
int3
arpl
and
mov
push
dec
arpl
xchg
dec
push
repz
pop
sbb
mov
xchg
repnz
sti
lock
in
mov
mov
lock
pop
push
mov
inc
mov
lds
sub
mov
xor
decb
or
lods
jnp
mov
popa
mov
pop
mov
cwtl
mov
jmp
out
es
jp
in
punpckldq
jecxz
je
jecxz
addb
sub
push
push
sbb
hlt
adc
jb
inc
aam
push
arpl
je
and
fistps
and
enter
daa
call
lcall
daa
enter
mov
push
shrl
aam
pop
jecxz
sti
lahf
sti
mov
xchg
xchg
sahf
out
ret
scas
les
fs
push
and
mov
cmp
je
fstpt
loop
ss
lea
lds
out
adc
or
push
mov
std
idivl
test
mov
inc
enter
push
imulb
cmp
jmp
push
scas
loop
fstps
xor
pop
test
sub
dec
clc
loop
sub
xacquire
add
je
xor
dec
leave
out
sub
xchg
loop
imul
mov
or
lret
stos
dec
negb
and
pop
dec
pusha
lea
or
cmpsl
mov
int
adc
outsb
es
js
out
xchg
sub
xor
jecxz
ficompl
repnz
lods
ret
clc
dec
mov
std
and
hlt
iret
test
mov
jno
jns
fcoml
jmp
inc
push
xchg
fbld
data16
add
jb
xor
in
mov
inc
dec
xchg
pop
loope
in
mov
sbb
sahf
cmp
xor
mov
mov
xchg
fnsave
jge
jl
lcall
jecxz
les
adc
jbe
or
scas
lods
dec
sub
aad
mov
pop
pop
pusha
xor
in
sub
fidivl
dec
jg
pop
sub
fmul
stc
lea
jae
mov
push
pusha
inc
aas
subl
mov
fisubl
mov
cmp
jns
inc
sbbb
xor
lahf
inc
sub
in
mov
push
int3
cs
mov
dec
add
rol
shrl
dec
sub
mov
pop
cmpsb
mov
push
fwait
mov
fwait
leave
pop
jecxz
jbe
sbb
jecxz
or
inc
and
out
inc
cmpsl
sub
jge
xchg
mov
cld
loop
lahf
test
sbb
outsl
and
mov
jp
pushf
int
push
mov
lods
cmc
fadd
xor
loop
scas
jg
sbb
xor
sub
and
mov
push
notb
cmpsl
push
inc
hlt
cmpsl
fsubr
in
mov
pop
or
mov
imul
in
mov
lea
aaa
and
shrb
or
mov
int3
mov
jl
ficoms
adc
notb
clc
mov
pop
test
adc
mov
xor
popf
leave
jg
rcrl
jae
dec
sub
dec
push
out
dec
shl
mov
sbb
stc
in
enter
sub
fmuls
insl
inc
jp
push
sbb
mov
outsb
outsb
pop
insb
xor
dec
pop
stc
fisubs
inc
pop
adc
in
push
aaa
cmp
dec
or
dec
enter
push
mov
div
daa
cld
fwait
jne
es
pop
push
mov
loopne
nop
jbe
mov
cmpsb
mov
inc
jne
cmp
aas
adc
out
call
inc
dec
shr
les
mov
jecxz
push
sti
cli
pushf
adc
sub
cmp
out
outsb
mov
rolb
imul
mov
cmp
push
and
fistpll
daa
sahf
xlat
leave
in
inc
sbb
addr16
out
mov
xchg
int3
mov
mov
or
fsubp
rolb
out
jle
test
jno
insl
jb
clc
into
and
sarl
stos
test
inc
and
nop
jecxz
pushf
mov
mov
scas
in
insb
and
cmp
add
jnp
daa
xchg
jmp
or
push
inc
push
cltd
xor
clc
and
inc
in
int
lcall
push
and
addl
mov
add
push
add
mov
aad
mov
lret
xchg
push
loopne
cmp
sbb
fildl
mov
enter
jbe
sti
xor
lock
add
cmp
xchg
xchg
jo
mov
orl
insl
insl
dec
icebp
or
jns
in
bound
add
int3
sbb
or
loopne
mov
adc
lock
outsl
lods
pop
lcall
test
cmpsb
push
xchg
push
rolb
dec
and
xchg
movhps
adcl
and
ret
jle
push
bound
adc
push
lret
cltd
mov
add
dec
out
pop
add
cmpb
sahf
insb
testb
cmp
mov
add
mov
jbe
jne
cmpsl
push
and
push
negl
lock
sbb
sub
fildll
fwait
or
mov
cld
out
outsl
shl
mov
jnp
cwtl
cmp
stos
sbb
jae
mov
cltd
lahf
adc
icebp
les
push
push
mov
push
in
gs
mov
mov
mov
mov
mov
inc
dec
mov
xchg
addl
insl
mov
or
push
addr16
sbb
loopne
fwait
std
pop
sub
data16
lret
in
dec
lret
push
lods
flds
dec
mov
push
inc
adc
lock
cmpsl
fs
jns
push
test
pop
test
lret
xchg
add
lea
mov
ss
dec
inc
push
les
scas
sarb
pop
mull
adc
fcom
aaa
pop
xlat
pop
sti
scas
mov
enter
xchg
imul
dec
in
aad
lret
sbb
xchg
std
sub
lret
pop
in
lahf
es
push
scas
lods
cmp
mov
cwtl
je
aad
leave
shlb
aad
int
dec
sbb
aad
mov
mov
lock
mov
fidivl
sub
dec
call
mov
add
fdivs
lret
xchg
add
ja
push
gs
xchg
sbb
cli
jmp
popa
adc
test
dec
sub
xchg
es
sbb
pop
pop
mov
mov
stos
or
sbb
push
in
jo
fs
inc
xchg
int
cmpsl
jno
jmp
fdivrp
cmc
ss
push
pop
out
lcall
or
xor
scas
fisttpll
mov
ret
add
xchg
and
daa
cs
js
pop
mov
push
xchg
leave
out
adc
and
movsb
mov
in
inc
cmpsl
push
push
sub
mov
cs
dec
sahf
sub
repz
xchg
scas
loop
es
popa
mov
jp
imul
jg
xlat
pop
cmp
and
lret
test
sbb
rclb
mov
fadds
cmpb
cwtl
shlb
dec
dec
lock
push
sub
mov
push
xlat
cmpsl
sub
or
sub
pushf
ja
repz
cmp
aad
sbb
inc
fcmovnbe
fucomp
cmp
out
mov
movsb
dec
fwait
in
test
idivb
dec
pop
sbb
pop
aaa
insb
in
mov
cs
stos
jge
leave
data16
xchg
pop
mov
stos
out
pop
xchg
adc
xorb
sbb
mov
mov
iret
mov
mov
divl
add
dec
dec
addr16
les
mov
test
test
add
add
hlt
imul
notl
in
push
jle,pt
daa
fnstenv
jmp
pop
mov
filds
jo
push
gs
insb
repz
jnp
test
int3
add
pop
add
mov
mov
aas
ds
add
aaa
loop
mov
fwait
mov
pop
cwtl
add
adc
mov
iret
test
push
add
mov
fwait
sub
lock
cltd
mov
sbb
sbb
scas
cmc
xor
or
and
pop
test
mov
cmc
test
jnp
mov
pop
mov
int
push
dec
int
stos
jne
mov
cmp
loopne
push
gs
pop
mov
mov
xchg
jae
sbb
sbb
repnz
pop
call
mov
cs
pop
cmp
mov
sub
xchg
adc
pusha
sub
fldl
mov
jns
imul
test
dec
mov
ss
rorl
out
jne
scas
pusha
shl
cltd
insl
insl
lds
ja
bound
xor
lods
mov
pop
cld
in
loop
out
out
cli
movsb
test
dec
cmp
mull
dec
pop
repz
andl
jmp
push
xor
jmp
icebp
roll
daa
int3
push
sbb
lret
jmp
das
push
xor
xor
mov
jge
fdivs
pushf
xor
mov
jbe
mov
leave
add
inc
gs
cltd
sbb
xchg
movsl
cli
inc
pop
loope
daa
cmpsb
mov
pop
scas
sub
insl
mov
sbb
call
and
fcomip
push
mov
imul
mov
test
cli
dec
xor
dec
arpl
push
mov
nop
das
cmp
out
sahf
cmpsb
stos
mov
arpl
or
mov
jb
xor
lea
push
mov
jae
mov
sbb
fisttpll
std
shrb
mov
pop
xorb
repz
dec
popa
fidivl
notb
enter
orb
sub
xchg
ja
in
sti
dec
sti
mov
icebp
fmuls
out
rcrb
xchg
jecxz
push
std
push
mov
lret
imulb
inc
das
inc
sbb
xor
dec
ficomps
inc
add
sbb
popa
ja
jae
fcomip
mov
out
xor
dec
jg
mov
aas
cmpsl
rcrl
into
lahf
sbb
sub
jmp
lock
out
adc
inc
adc
test
adc
stos
and
push
jmp
ret
ja
pusha
aaa
and
pop
fistps
mov
pop
pop
xchg
pop
or
imul
add
sti
mov
push
xorb
fs
shrl
lahf
cmp
mov
test
insl
nop
aad
ret
xchg
pop
js
sub
insb
fs
adc
rclb
xchg
daa
jns
push
rclb
xchg
lea
repz
adc
popa
push
and
cwtl
sub
xchg
hlt
cltd
mov
repnz
pop
imul
popa
pop
stos
xor
das
pop
flds
ret
dec
and
leave
pop
sbb
sub
inc
ss
xchg
jle
pop
lret
inc
push
pop
aad
ss
add
sbb
push
adc
mov
mov
je
inc
add
sub
add
out
mov
xchg
jne
js
jae
push
adc
mov
into
out
daa
fistps
shr
ds
rclb
pop
or
xchg
stos
jb
addr16
dec
jge
pop
sti
repz
jbe
inc
movlps
or
adc
push
sub
imul
in
sub
lods
dec
pushf
test
cld
dec
mull
push
xor
or
scas
pop
add
dec
jb
mov
out
cmpsb
xchg
mov
jb
and
mov
outsl
test
lret
mov
mov
sti
repnz
xchg
outsb
push
rcrb
stc
negl
dec
jns
loopne
push
sbb
mov
inc
inc
cli
subb
push
fdivrs
mov
ret
cmc
inc
lcall
mov
outsl
out
dec
movsl
data16
faddp
adc
ss
shll
mov
inc
jb
mov
shl
mov
fistpl
int
dec
repz
cmp
xchg
notl
push
fcoms
mov
cmp
ret
sbb
cld
mov
lcall
xchg
aas
testb
test
scas
inc
push
cmpsb
jnp
pop
js
xor
lea
insb
xchg
mov
sub
sbb
jg
push
and
outsb
fisttps
out
push
push
push
int
lock
bound
cmp
pop
mov
add
jns
into
lock
mov
cmp
jne
rcrl
dec
add
push
push
je
fdivl
ljmp
inc
fmuls
out
ds
mov
ret
jb
das
repz
ljmp
mov
or
mov
xor
lods
mov
inc
pusha
push
sbb
fildl
loopne
xor
stc
movsb
js
in
xor
push
fidivs
push
jno
mov
int
insb
or
mov
sub
data16
pop
pop
mov
leave
mov
fists
ret
mov
out
mov
notb
insl
sbb
dec
jmp
xchg
add
jmp
pusha
xchg
fcomi
lret
dec
mov
push
xchg
xchg
shlb
cmp
into
mov
dec
sub
das
xchg
and
call
orl
jecxz
inc
sbb
call
stos
jae
int3
mov
mov
fs
mov
leave
adc
inc
daa
xchg
aas
ffree
popf
stc
out
add
icebp
pusha
inc
fs
jle
push
add
jbe
xor
outsl
lcall
or
push
outsb
out
call
xchg
jl
xchg
xchg
dec
and
and
sarl
xchg
jae
and
ja
pop
sub
cmp
rorb
pop
inc
test
push
out
mov
dec
jg
es
in
je
jnp
add
add
shlb
repz
pop
jge
push
scas
outsb
jo
add
scas
cld
test
movsl
pusha
fsubrs
push
aas
lahf
jne
test
outsb
lock
cld
outsl
sub
loopne
cltd
jo
cmpl
and
sbb
imul
clc
push
pop
pop
fcoml
rcl
xor
adc
pop
inc
mov
in
mov
cltd
iret
test
sahf
xor
jae
clc
aaa
jecxz
fiaddl
jg
xor
insl
movsb
mov
dec
mov
shrb
adc
cmpsl
push
enter
ret
cwtl
mov
dec
pop
jg
pop
into
out
and
and
sbb
adc
and
in
dec
dec
jl
mov
sub
lock
push
push
xorb
sub
adc
xchg
test
or
push
sbb
and
aaa
adc
xchg
jbe
lcall
push
movsl
xchg
pushf
fsubs
adc
test
dec
or
dec
repz
aas
mov
jmp
clc
enter
jne
cmpsb
add
mov
ja
inc
fiaddl
insl
xor
push
lret
icebp
jnp
in
shlb
fisubrl
sbb
xchg
mov
test
icebp
nop
int3
mov
mov
lret
mov
push
clc
jmp
and
mov
mov
mov
les
sbbb
ja
xchg
sbb
mov
lret
adc
inc
int3
xchg
cmpsb
subl
jne
orb
mov
xchg
scas
repnz
adc
jp
push
rcl
es
hlt
out
ret
pusha
test
hlt
scas
xor
sub
inc
and
test
push
push
jae
mov
push
mov
dec
adc
shlb
mov
test
pop
and
shlb
xlat
xchg
pop
stos
jae
in
jecxz
mov
cmpsl
xor
fldcw
hlt
stos
enter
mov
sbb
vandnps
das
pop
inc
jg
shl
sub
lods
jae
push
or
lsl
jne
jl
sbb
decb
xor
aas
xor
cmc
mov
call
mov
mov
sub
sti
mov
add
and
dec
push
xchg
in
mov
in
pop
sub
in
lock
std
sub
mov
xlat
push
rorl
lods
xchg
inc
out
lods
inc
mov
mov
test
aas
jbe
xor
jnp
and
inc
lret
sti
lahf
std
xchg
pop
push
pop
inc
jecxz
and
movsb
jb
push
aam
icebp
les
leave
mov
pop
jnp
jg
jmp
pop
adc
out
in
loop
fcompl
pop
cmp
adc
push
shrb
data16
xchg
das
mov
outsb
decl
lcall
mov
sub
cmp
cld
jmp
jnp
mov
jno
cmp
loop
push
adc
rcrl
sub
jmp
mov
popf
xor
xchg
adc
sbb
rcrl
popf
xchg
or
ds
loop
sbb
in
or
out
out
push
push
inc
loop
mov
dec
xorb
test
orb
push
sahf
js
xor
int
cli
repz
lods
adc
nop
imul
pop
xchg
mov
jle
cmpsl
xchg
repz
add
dec
add
inc
cmp
icebp
xor
lock
cmp
sarl
movsl
cmp
mov
xor
and
mov
pop
sbb
jnp
and
cmp
push
orps
push
mov
xor
aas
mov
rcll
out
and
lea
push
lahf
nop
mov
jbe
mov
mov
push
push
icebp
lock
jnp
mov
add
imul
pop
xchg
gs
aad
and
push
rcll
sub
jb
xor
jle
push
xorb
test
mov
test
lret
pop
sbb
aaa
push
jge
dec
ror
add
shrl
mov
mov
jnp
lds
xchg
dec
lret
xchg
or
ljmp
js
in
aas
sbb
lods
and
fnstcw
cltd
fsts
push
aas
lahf
iret
aaa
sbb
pop
arpl
in
sbb
jbe
cmp
cbtw
aas
sub
mov
stos
push
push
jno
push
push
pop
mov
push
or
xchg
das
mov
push
dec
aam
inc
repnz
dec
loopne
decl
scas
add
xchg
xchg
push
cltd
ret
pop
cwtl
mov
push
add
mov
movsb
adc
in
cmc
mov
mov
jne
adc
fisubl
xlat
adc
cmp
sub
jnp
cmp
outsl
aad
lcall
idivl
push
dec
mov
and
test
push
fcomps
mov
jnp
enter
jge
or
mov
jle
xchg
xchg
addl
lret
sarb
roll
popf
jns
dec
push
add
add
mov
and
ljmp
dec
push
push
push
mov
scas
std
into
shr
cmp
inc
push
xor
cmp
mov
xchg
pop
jg
xchg
sub
xlat
les
add
adc
jns
in
out
add
and
aas
pop
repnz
stc
dec
cwtl
add
repz
test
es
incb
fwait
mov
sub
jne
ret
rcrb
cmpsb
pushf
jo
xchg
or
iret
mov
mov
sahf
scas
jp
je
fadds
insl
or
orl
dec
outsl
jae
fnop
clc
ljmp
adc
imul
les
clc
push
mov
and
lea
sbb
shrl
pop
ljmp
mov
cmp
outsb
or
cltd
out
mov
push
pop
rclb
adc
inc
cmp
dec
inc
push
sbb
sbb
hlt
cmpsb
jl
and
mov
pop
xchg
jns
sbb
xchg
push
pop
mov
gs
xlat
mov
cs
or
xchg
call
inc
inc
push
push
lahf
scas
xchg
into
movb
int3
or
inc
xchg
roll
cltd
es
jge
cmpsl
js
sahf
adc
test
sbb
fldl
push
cltd
icebp
ljmp
data16
push
clc
pop
jae
aaa
mov
subl
or
js
mov
inc
shlb
dec
ljmp
fucom
rorl
dec
lds
jo
cmpb
xchg
call
pop
mov
test
cmp
jns
rclb
sbb
and
leave
sbb
in
ret
sub
and
sub
push
leave
int
sarl
push
pop
pop
pop
fisubrl
mov
jno
in
lods
loope
and
sbb
lret
sti
push
adc
rcll
push
lret
in
cmovne
cld
fisubrl
rcrb
in
and
mov
test
xchg
ss
jo
dec
call
inc
jl,pt
sbb
ret
loope
inc
in
sbb
loope
pop
and
adc
mov
mov
popf
xchg
notb
xor
cmpsl
dec
mull
subl
repz
or
jno
cld
xchg
lcall
std
rcrb
fldl
xchg
pop
pop
or
popa
mov
shrl
stc
scas
pushf
out
sbb
inc
fldl
loop
iret
fnstcw
sub
mov
clc
sub
sahf
mov
fs
adc
fwait
xlat
cmpsl
movsl
and
dec
in
test
jg
or
cmp
mov
jne
adc
mov
icebp
out
jg
les
int
ss
xlat
pushf
pushf
call
jae
inc
mov
mov
movsb
mov
decl
mov
ret
movsl
mov
cmpsb
adc
shrb
dec
jecxz
or
arpl
cmp
jecxz
paddq
adc
push
insl
sbb
scas
lret
push
scas
scas
cmp
cmpsl
dec
cmp
or
xor
mov
popf
xlat
mov
icebp
inc
int3
fsts
or
addr16
adc
mov
mov
in
in
ret
cmp
pop
cli
stos
fs
sbb
xchg
popf
psubq
ds
fwait
cld
jmp
popf
pusha
inc
sub
push
fwait
jno
pop
aas
jb
inc
cs
pop
outsl
xlat
mov
inc
rep
mov
dec
movsb
ret
mov
ja
dec
xchg
jg
mov
mov
call
jmp
loopne
or
lods
push
loope
xchg
sarl
mov
xchg
cmc
push
inc
dec
das
mov
outsl
cmpsb
shrb
rcrl
jnp
dec
je
inc
dec
lods
cmpsb
push
sbb
lods
dec
jne
mov
mov
push
push
jecxz
cmpsb
or
and
cmp
inc
movsl
sbb
pop
adc
sub
movsb
xor
fcoml
sbb
lods
lahf
pop
pusha
imul
dec
je
sub
and
xor
jb
add
mov
pop
xchg
adc
or
lods
jbe
hlt
ss
jae
out
cltd
mov
xor
mov
jp
mov
push
pop
sub
pop
adc
stos
inc
subb
nop
and
movsl
cmp
out
inc
push
mov
adc
subb
insl
dec
shll
test
push
mov
dec
aaa
daa
enter
mov
ja
rcll
outsl
aad
lcall
push
mov
bound
call
addl
lock
add
mov
jno
dec
and
mov
lcall
ja
aad
mov
sbb
xchg
mov
insb
add
sbb
leave
shl
xor
cmp
dec
iret
cmpsb
push
xor
orl
xchg
cmc
sub
fs
pop
stc
std
fst
dec
add
mov
pop
jle
cmpsb
sub
pop
cld
dec
dec
leave
div
pop
xor
pop
fstpt
js
or
fwait
cmp
xchg
mov
mov
dec
push
push
push
sub
add
dec
cmp
add
or
sbb
sub
ret
pop
lcall
and
icebp
xor
pop
in
cmp
lea
add
pop
and
mov
jne
pushf
inc
add
push
fwait
jg
cltd
mov
sbb
push
jb
mov
out
inc
mov
aas
cmp
mov
pushf
aaa
pop
les
arpl
add
fdivl
xchg
pop
out
gs
dec
shrb
inc
test
dec
sbb
xchg
xorb
lds
test
das
hlt
ret
scas
loopne
push
fistl
hlt
xor
arpl
scas
cwtl
stos
sbb
adc
popa
and
inc
add
cmp
test
xchg
arpl
arpl
xor
lea
sbb
and
dec
das
xchg
inc
repz
leave
and
inc
sbb
jb
stos
imul
inc
lret
mov
sub
es
outsb
aas
push
imul
incb
or
cmp
loop
or
rclb
push
push
push
push
mov
or
dec
test
out
jnp
push
lods
mov
jnp
in
rcll
insb
aas
mov
push
arpl
xchg
sbbb
je
andb
into
mov
adc
jmp
and
outsb
lret
jp
movsb
or
scas
or
xchg
mov
jb
inc
loopne
pop
sub
imul
out
add
imul
pop
subl
and
mov
sub
pop
rorl
sbb
xchg
dec
aas
mov
inc
ja
push
mov
adc
movsl
fstpl
mov
cmp
jo
inc
clc
rcrl
sahf
bound
lahf
inc
push
xor
push
mov
in
test
and
data16
mov
movsb
iret
les
jne
jl
pop
xorb
pop
outsb
xchg
fdecstp
push
shl
mov
ds
les
xor
inc
pop
loope
xor
sub
loope
mov
mov
fnsave
mov
stc
sahf
ret
subl
sub
lret
push
outsl
mov
cwtl
je
mov
repnz
jp
xor
mov
jle
push
mov
and
push
xchg
fiadds
mov
pmaxub
popf
outsl
aam
sbb
fwait
pushf
push
sub
inc
lahf
outsb
dec
push
div
pop
rep
js
and
push
fildl
inc
jnp
leave
cmp
clc
push
movsb
adc
lods
mov
stos
jns
fs
xchg
mov
cmp
jmp
push
js
lea
xlat
outsl
jo
adc
or
and
sbb
nop
data16
and
cmp
fistpl
ficoml
dec
xor
jmp
pop
sub
jns
xor
pusha
shlb
icebp
pop
data16
rclb
enter
lock
iret
jge
mov
rcrb
push
push
in
jmp
rolb
mov
pop
pop
sbb
nop
dec
xchg
es
sub
jnp
sbb
imul
popf
iret
inc
mov
imul
jnp
adc
pop
sub
xchg
xor
imul
xchg
jp
add
jmp
dec
ljmp
ds
incb
orl
jle
lods
and
xchg
fdivrs
adc
xchg
sti
icebp
fcmovne
out
fmul
adc
out
sub
out
out
xchg
bound
scas
adcb
dec
es
xchg
inc
outsb
les
fmul
or
pop
fldt
mov
jo
cltd
xchg
push
jno
push
fwait
lcall
mov
jmp
cmp
ficoml
ds
loop
xor
sbb
cltd
xchg
mov
test
int3
sub
ja
jle
popa
int3
arpl
mov
push
call
fnsave
adc
movsb
sahf
cmpl
cmp
iret
add
jp
int
gs
xchg
call
ds
test
sbb
ss
cs
add
ficoms
sub
cmp
jle
and
add
push
push
frstor
leave
mov
je
fdivrp
cmpsl
sahf
pop
xchg
ret
push
adc
add
push
inc
mov
mov
xor
or
adc
xorl
push
ljmp
inc
sbb
sub
pop
mov
mov
or
jo
cmp
sarb
cs
mov
ds
xchg
add
ja
dec
sbb
imul
and
mov
jp
mov
lret
cmp
mov
inc
mov
rolb
add
add
push
adc
xchg
lcall
cmp
cli
push
stc
in
push
lds
sbb
push
loope
xchg
arpl
rolb
xlat
pop
mov
into
push
fs
mov
mov
mov
popa
xchg
lods
mov
xlat
addr16
xchg
mov
imul
movsl
jb
inc
mov
inc
sub
mov
test
mov
jo
in
ja
test
pop
lock
mov
xchg
pop
push
mov
clc
out
std
clc
sahf
out
fnsetpm(287
out
rcrb
enter
scas
out
icebp
push
imul
xor
lea
imul
lcall
push
push
stos
out
xchg
fwait
arpl
pop
jge
cmpsb
stc
sub
push
outsb
cli
sarl
mov
filds
bound
or
movsb
ljmp
mov
repz
and
cmp
scas
jo
xor
pusha
andl
into
or
rcll
dec
push
add
dec
mov
out
mov
cmp
daa
adc
decw
xor
add
js
inc
lods
push
out
lock
and
test
mov
stos
cld
ret
cld
fisttps
enter
adc
mov
dec
repnz
std
xlat
not
sbb
outsl
or
aam
test
adc
lock
arpl
rcl
fdivrs
mov
pop
sub
jae
xchg
fimuls
rcr
pusha
daa
xchg
xor
cli
and
jecxz
add
jnp
loop
js
adc
mov
arpl
cmpsb
clc
mov
pop
nop
divl
jecxz
sbb
or
shl
mov
jae
pushf
leave
inc
fsts
mov
mov
ljmp
pop
mov
sub
ret
or
sub
in
xchg
add
or
adc
push
dec
fwait
dec
mov
xor
sub
aaa
mov
stos
sbb
dec
sbb
popf
pop
and
jo
loopne
lock
sbb
pop
ficoml
les
outsb
in
adc
cmp
adc
adc
adc
inc
pop
jg
lock
scas
push
nop
dec
rorl
adc
mov
or
or
fmull
pusha
test
mov
jns
test
jbe
jmp
sub
push
mov
fsts
xor
add
pop
shrl
ss
test
jns
xchg
mov
icebp
fbstp
cmpxchg8b
jnp
lea
cmp
std
popf
lcall
mov
cli
popf
xchg
push
pop
or
dec
xchg
es
cli
scas
dec
jae
stos
mov
dec
repz
ret
stos
and
sbbl
add
xor
add
add
pushf
dec
adc
push
xchg
fisubs
dec
cmpsl
out
inc
cld
pop
adc
dec
loope
push
testl
push
jnp
repz
pusha
arpl
jnp
dec
je
lret
lock
inc
lret
test
cmpsl
inc
dec
adc
add
jmp
jns
sbb
xchg
mov
inc
fisttpl
mov
mov
cmc
xor
lods
repnz
bnd
pop
mov
repnz
pop
and
sub
pop
paddb
inc
push
mov
mov
cmp
mov
ror
sti
jle
inc
test
mov
lods
push
fcompl
in
loope
repz
loope
sahf
scas
lods
lcall
enter
bound
sub
aaa
mov
pop
std
jge
push
je
int
inc
insb
pop
push
movsb
cltd
push
popf
flds
jb
fisttpl
dec
mov
mov
clc
xor
and
insl
push
pop
repz
in
mov
je
imul
or
bnd
xchg
cltd
mov
ret
ljmp
daa
xor
fldt
popa
mov
or
inc
pushf
int3
or
fwait
sahf
rcrb
sbb
sub
or
divl
sub
icebp
je
inc
push
sbb
inc
aad
fcmovbe
movsl
jecxz
leave
fimuls
sarb
xor
ret
mov
push
fs
jbe
lods
push
loopne
jae
in
and
jbe
xchg
lea
push
xchg
lods
cmpsl
dec
mov
inc
cmp
sbb
popl
movsb
aaa
stos
xchg
daa
imul
scas
adcl
sbb
pop
jecxz
or
mov
sbb
dec
jno
lret
pushf
or
adc
ljmp
rcr
add
inc
jbe
or
push
mov
xchg
clc
nop
inc
cli
mov
mov
mov
pop
pushf
hlt
enter
out
pop
inc
fistps
inc
jmp
mov
add
xor
dec
and
adc
ds
int3
add
sbb
xchg
inc
sbb
jp
mov
rol
es
ret
push
dec
or
sub
mov
add
fimull
jb
jle
and
jbe
jb
cmp
sbb
test
bound
pusha
mov
xor
cmp
cwtl
insb
ds
cmp
movl
xchg
sub
fcomps
in
decl
js
xor
fdivrl
mov
xchg
addr16
fistpll
imulb
pop
mov
inc
xchg
jb
xchg
test
inc
insb
scas
ret
je
and
jecxz
fst
incb
orl
lea
aaa
mov
mov
jno
icebp
scas
inc
popf
push
addl
or
mov
or
jecxz
dec
aam
add
adc
inc
jg
and
jbe
cmp
fnsave
hlt
aam
lods
idivl
lods
and
adc
aam
mov
xor
int
jmp
xchg
cmp
xor
jl
sar
add
jne
cmp
sub
mov
sbb
xchg
inc
jge
adc
stos
fildl
jle
les
out
nop
aam
daa
cmp
add
xchg
jb
stos
lock
mov
sbb
cmpsl
cmp
jbe
xor
iret
loope
add
pop
pop
pop
js
push
mov
xchg
leave
sub
inc
mov
pusha
xchg
insl
sub
in
mov
pop
mov
and
nop
cmp
xor
mov
pop
adc
mov
loop
pop
mov
jae
cwtl
mov
notl
push
dec
push
push
jp
stc
pop
or
mov
dec
loop
xchg
cmc
test
jno
xlat
paddd
test
sub
sbb
in
or
jp
mov
insb
push
bound
lahf
popa
in
push
arpl
xchg
mov
sbb
inc
shll
push
jbe
daa
scas
pop
xlat
out
mov
xchg
repz
lea
mov
or
loop
aaa
movsb
sub
adc
mov
jp
int3
ficomps
sub
pop
scas
fldenv
lahf
push
xchg
rclb
cli
divl
sub
xlat
jns
fcoml
jge
jo
cmp
xor
mov
imul
scas
repz
pop
xor
and
pop
idivl
pop
loop
sahf
push
inc
push
mov
fsubp
pop
lcall
das
pop
lods
fistpl
pop
mov
fstpl
pop
cmp
xchg
jl
stc
adc
iret
mov
jg
fadds
movsl
and
outsl
pop
sub
popf
dec
xor
cwtl
ss
xor
mov
outsb
test
xrelease
dec
fildll
outsl
mov
xor
jp
fs
and
or
std
xor
push
push
xlat
inc
pop
repz
mov
out
adc
ja
push
jb
cmp
pop
ret
jl
jne
mov
or
cli
jp
pushf
mov
popa
lret
dec
jb
fistps
jnp
in
inc
sub
imul
fstps
fwait
lret
jo
iret
stos
test
sub
enter
xchg
xchg
outsl
mov
mov
push
mov
pop
mov
mov
mov
xchg
sub
mov
fildl
add
mov
clc
repnz
mov
cmc
pop
cli
scas
imul
leave
mov
loope
arpl
and
das
cwtl
pop
loopne
push
cmp
xor
ret
lcall
dec
lock
or
lret
or
pop
mov
sti
shll
ss
xorb
push
xor
push
sbb
xor
je
daa
je
scas
fisubl
pop
movsb
js
push
rep
movsb
cltd
dec
xchg
or
inc
bound
jp
fisubrs
out
loopne,pt
cmp
jmp
rol
lods
in
xor
sbb
dec
xor
lea
xchg
jnp
cmpl
rorb
in
aad
insl
xchg
jge
jmp
aam
pop
mov
ljmp
aad
ss
sbb
mov
mov
repz
test
lahf
jo
outsb
lahf
movups
ds
xchg
mov
push
push
lds
push
xchg
arpl
push
les
out
rclb
adc
xor
push
sbb
leave
mov
je
clc
ret
shlb
xor
jmp
cmpsb
push
aad
mov
cmpsb
fidivl
cld
push
or
inc
push
das
lock
adc
stos
xchg
jbe
pop
cmp
xchg
sbb
lea
xchg
lcall
decl
lods
cmp
jae
push
jae
inc
mov
into
mov
fs
orl
inc
add
pop
or
aad
clc
cld
jns
add
xor
lahf
lds
bound
mov
mov
push
ret
cmp
stos
fdivrp
add
aad
out
push
cld
clc
int3
jne
mov
inc
fwait
add
fimull
or
mull
test
aam
testb
jp
add
add
sbb
add
sti
adc
test
in
xchg
or
into
push
filds
rcl
mov
jecxz
sbb
mov
out
xchg
xchg
loopne
sub
gs
insl
pop
cmp
scas
addr16
insl
in
in
jp
aam
enter
aaa
jb
xchg
rcrl
out
test
fidivrl
sahf
jns
jl
dec
push
add
cltd
pop
sub
sar
stos
push
add
mov
jge
inc
mov
dec
adc
lahf
add
shlw
push
adcl
cmc
mov
adc
add
inc
int3
pop
xchg
push
out
mov
mov
sub
cs
inc
xchg
nop
andb
or
fdiv
mov
xchg
leave
cmp
mov
cld
cli
jg
aaa
inc
and
jle
sub
sub
mov
and
je
xor
mov
les
add
leave
mov
pop
lea
sub
xchg
xor
pop
daa
dec
jl
sub
cmp
lea
shll
pop
outsb
cmpsb
fs
fsts
mov
shll
dec
or
loope
jp
or
inc
loopne
fcoms
adc
int3
xchg
push
sahf
out
repz
pop
popa
in
pop
lret
add
enter
adc
mov
out
fdivl
insb
mov
stos
outsl
push
pop
addb
nop
xchg
adcb
inc
lahf
cltd
pop
hlt
enter
pop
inc
rep
push
mov
xor
xchg
pop
cs
sbb
pop
sbb
add
xchg
sbb
or
jecxz
in
push
mov
jle
lcall
js
dec
sarb
push
in
push
push
fists
loopne
sub
icebp
lds
xchg
loopne
test
std
orl
ror
mov
jmp
cmp
lods
popa
in
sbb
mov
jp
adc
pop
aas
in
sub
rorl
shll
and
mov
es
add
es
or
sarb
test
mov
fmuls
rclb
pop
push
das
adc
rorl
mov
pop
pop
scas
adc
jne
inc
jp
jmp
mov
mov
pop
xchg
and
cmp
xorb
push
push
cld
sahf
shr
js
adc
ror
mov
add
hlt
mov
lds
inc
idivl
cltd
and
or
stc
sbb
push
pop
mov
sahf
sahf
jns
lret
test
and
icebp
xchg
repnz
je
xor
addr16
cmp
and
out
cli
xchg
mov
sub
pop
push
mov
push
mov
rcll
notb
push
pop
pushf
sahf
sahf
loop
sbb
jp
mov
xor
xchg
cmpsb
fnstcw
mov
mov
inc
dec
cmp
pusha
mov
xlat
xorl
or
orl
shrl
pop
mov
test
lret
loope
icebp
imul
aad
test
pusha
sbb
and
mov
ficomps
je
js
ljmp
testb
cmp
popf
push
fildl
jmp
mov
or
sub
and
dec
cmp
leave
push
int3
test
movsl
je,pn
dec
push
aas
mov
pop
sbb
and
xchg
cmp
or
pushf
jle
pop
ljmp
push
pop
aaa
push
test
test
inc
add
push
mov
and
push
push
jne
lret
jae
insl
sub
int3
xor
movsb
xor
push
jo
mov
dec
arpl
dec
mov
lcall
or
ret
mov
test
push
int3
les
loope
movsl
inc
jecxz
add
and
xor
adc
jp
push
add
xlat
fidivl
jno
cmc
push
stos
push
push
rorl
mov
testb
sahf
mov
cld
movsl
sahf
or
sub
jge
sub
push
dec
mov
loop
xchg
sbb
jo
iret
lea
repz
mov
and
leave
sbb
ss
inc
fistps
stc
mov
xchg
imul
sbb
xor
adc
cmpsb
adc
pop
psubsw
xchg
pop
and
popa
jne
push
push
xchg
jp
es
cmp
push
dec
int3
jp
sti
pop
add
and
xor
ret
pop
lret
dec
popa
ret
std
xchg
sbb
xor
jnp
xor
aaa
mov
add
sti
sbb
or
imul
push
add
jg
mov
sbb
imul
lcall
and
inc
ja
jnp
xchg
dec
xchg
sbb
popfw
jmp
fldpi
pop
testb
lahf
in
xchg
out
dec
aam
loopne
gs
xor
or
clc
and
mov
test
fisubrs
inc
jne
add
clc
stos
jns
xchg
add
stos
stc
jb
js
repz
cmp
sbb
lea
adc
cmp
daa
xchg
adc
icebp
pop
movsb
iret
xor
clc
or
aad
andb
mov
push
test
xor
inc
imul
sbb
loope
jle
mov
rclb
mov
mull
jp
and
test
add
int
sbb
push
movsl
cmc
andb
mov
je
lret
imul
sbb
sbb
subl
orb
jne
sbb
test
lods
ljmp
jp
pop
cmpb
inc
add
xchg
mov
xchg
adc
jo
pop
xor
insb
aam
les
push
imul
push
scas
repnz
and
pop
mov
jbe
leave
ficompl
das
test
dec
ljmp
lea
xchg
xor
je
dec
outsl
insb
jno
fistpl
iret
jne
dec
pusha
push
popa
mov
scas
inc
sbb
adc
xchg
jg
js
and
mov
sti
das
xchg
inc
jp
cmp
pusha
lds
add
sub
push
pop
mov
bound
adc
out
test
dec
outsl
cld
aam
mov
ja
sub
pop
aad
xchg
or
lret
dec
push
mov
dec
mov
mov
cmp
sbb
xor
sub
lahf
jnp
adc
jg
dec
mov
int
add
dec
rcrl
enter
jmp
push
or
adc
cmp
insb
add
into
sub
popf
lods
out
shr
shr
mov
lcall
and
mov
or
mov
test
push
adc
shrl
into
cmp
and
inc
xor
xor
dec
in
dec
mov
cmpsl
cld
cli
inc
jmp
mov
xchg
sti
out
sahf
pop
push
data16
adc
or
xlat
notl
bound
out
or
and
dec
xor
mov
sub
dec
xor
push
or
fistl
loop
hlt
scas
fcomip
dec
or
in
js
loope
fcompl
fstpl
mov
inc
cmp
nop
popa
fdivl
xor
xor
jmp
adc
cmp
add
pushf
mov
out
mov
test
add
fucom
fadds
fisubrl
daa
je,pt
das
inc
push
call
testl
jg
fldcw
je
mov
lret
cmp
sbb
adcl
lods
fdivrs
lods
mov
inc
mov
ret
jmp
dec
test
jo
mov
cmc
pop
cltd
imul
mov
or
or
dec
in
aaa
lods
cmpl
mov
aas
add
stos
gs
mov
daa
in
mov
in
mov
nop
jecxz
xchg
xor
xor
push
sub
or
dec
mov
clc
cmp
and
les
test
and
jge
sbb
inc
inc
lea
mov
sbb
adc
scas
or
push
jge
scas
mov
or
xor
loopne
icebp
xchg
fsts
fbld
cs
cld
stos
jb
gs
pop
or
add
push
mov
sub
in
cld
in
xchg
mov
lahf
cmp
mov
scas
sarb
jecxz
js
cmp
les
test
add
movsb
idivb
add
and
mov
pop
and
es
dec
leave
cwtl
aas
test
inc
fucomi
addr16
loop
mov
xlat
inc
push
fs
shl
cwtl
inc
inc
inc
mov
mov
repz
ror
jmp
jecxz
push
shrl
or
xchg
jo
mov
sub
lods
sbb
or
mov
jle
subl
push
aas
inc
ret
pusha
push
sbb
xchg
popl
inc
roll
adc
inc
sahf
scas
rolb
scas
ss
fisttpll
add
das
push
les
add
or
jmp
xchg
mov
fs
out
fs
repnz
or
sub
add
mov
xor
jge
xchg
pusha
cli
jae
and
cli
xor
lret
outsb
inc
aaa
and
repz
jmp
imulb
lods
pop
mov
pushf
neg
pop
movsb
nop
rolb
aas
mov
subl
mov
popa
sbb
sbb
fsubrp
add
sbb
mov
jl
out
and
enter
out
xor
fcom
jo
sub
shlb
xlat
adcl
scas
stos
or
mov
inc
adc
lea
and
jg
mov
js
out
prefetch
sbbb
scas
sbb
mov
push
cmp
in
xchg
clc
pop
int3
nop
lock
inc
cmp
sbbl
jge
fcompl
rclb
fwait
mov
inc
lds
pop
adc
inc
mov
call
xchg
and
push
or
lea
inc
cwtl
add
pop
push
jno
dec
lock
jl
mov
rep
pop
cltd
dec
inc
xor
add
mov
pop
sub
mov
mov
cmpsl
add
frstor
mov
and
lds
fwait
lcall
push
dec
mov
add
pop
sub
iret
jae
shlb
shl
gs
ret
and
in
sti
pop
and
in
xor
movsl
mov
shll
mov
sub
lds
cmc
pop
sbb
adcb
mov
fs
cmp
repnz
mov
xor
mov
divl
daa
test
subl
aam
lahf
push
xchg
xor
insl
xchg
dec
or
pop
fimull
mov
scas
and
add
pop
cwtl
pop
test
or
adc
loope
add
cmc
gs
dec
inc
adc
push
add
jp
adc
mov
popa
cs
popa
je
push
les
pushf
mov
arpl
ss
cld
pushl
xchg
stos
pusha
dec
add
pop
xor
sub
mov
out
pop
jg
mov
mov
mov
lahf
mov
mov
lods
mov
sub
mov
aad
call
adc
pop
sub
into
movsb
mov
popf
loopne
out
mov
mov
mov
lahf
rcl
push
adc
mov
and
pop
add
lret
in
adc
out
repz
cmpsl
mov
pop
insl
das
scas
push
add
pop
jge
cmp
decl
xorb
dec
pushf
stos
loopne
div
push
cld
adc
adc
scas
mov
arpl
imul
lods
pop
ficomps
pop
fwait
into
xchg
enter
push
sahf
aad
inc
mov
xchg
rorb
and
outsb
dec
pop
nop
jbe
pop
lcall
mov
sbb
xchg
dec
test
jno
dec
in
sub
pushf
mov
popa
jecxz
or
adc
shl
divl
dec
push
inc
bound
in
jo,pn
cltd
nop
clc
cmp
dec
dec
sbb
mov
hlt
lahf
sbb
in
ds
popa
sub
rorb
dec
jecxz
jne
test
mov
pop
cmpl
js
je
in
cmpsb
xor
ret
inc
jp
je
xlat
shrl
mov
aam
or
cmp
loope
loopne
jmp
inc
sub
xchg
mov
pop
mov
pop
pop
xor
dec
lret
pop
out
enter
mov
bnd
xchg
addr16
xchg
adc
mov
lcall
fldt
repnz
sbb
dec
test
repz
sub
jle
dec
loop
in
or
popf
pushf
push
xchg
push
mov
test
push
xchg
lods
imul
loopne
jb
lahf
fsubrp
xchg
pusha
and
xor
nop
push
push
mov
out
fs
inc
mov
sbb
stc
fcoml
dec
push
cmc
or
movsb
or
or
lods
insb
cmp
jb
das
in
xchg
outsb
arpl
dec
adc
pop
dec
adc
test
ljmp
push
cmp
inc
and
pop
or
imul
imul
push
imul
int
cmp
imul
dec
test
pop
mov
out
mov
mov
push
mov
adc
jae
outsl
add
pop
push
sub
or
inc
out
jbe
fstps
jp
mov
insb
dec
jl
xchg
cmp
mov
inc
mov
sbb
aaa
xchg
leave
cmpsl
mov
sbb
shl
into
popa
add
icebp
or
aam
dec
sub
add
sub
sti
mov
mov
idivl
cmpsb
pop
fsubs
add
cmc
shl
jbe
pop
inc
add
jns
xchg
sub
fdivl
fstp
or
cld
loop
rcrb
xor
adc
ret
xchg
mov
sub
fstl
int3
mov
lahf
sbb
sets
push
inc
out
mov
xchg
cmc
inc
push
push
insl
pop
xchg
inc
insb
sbb
mov
mull
xchg
cs
pop
xor
xchg
jne
or
frstor
sub
add
lea
das
clc
sarl
add
in
les
cwtl
icebp
jno
add
or
aad
cld
or
jmp
aad
bound
decl
cmpsl
jmp
insl
adc
mov
lock
pusha
jecxz
mov
aad
jl
pop
pop
cmp
sub
notb
mov
pushf
add
push
es
dec
ss
stc
push
shld
pusha
loope
sbb
pminub
add
jecxz
jmp
je
in
cmp
pushf
icebp
mov
push
jp
and
ret
jecxz
lret
mov
jb
push
or
jmp
mov
add
dec
bound
mov
adc
stc
push
pusha
jg
sub
in
adc
iret
mov
add
push
fcoms
add
popf
or
icebp
data16
jne
lods
add
bound
sarb
mov
cwtl
adc
fistpl
jmp
and
sub
loopne
rcrb
test
xor
push
pop
pop
mov
jnp
adc
inc
dec
aad
jmp
test
out
std
jle
sub
enter
mov
test
in
data16
mov
mov
std
mov
dec
ljmp
orb
or
test
mov
push
ret
jp
pop
mov
mov
aad
push
shlb
mov
and
xchg
xor
push
mov
arpl
dec
push
loopne
popa
cmp
ljmp
test
jbe
mov
dec
xchg
adc
inc
fcmovbe
push
mov
mov
jbe
arpl
cmpsb
add
popf
add
outsb
xor
push
leave
xor
imul
cmp
jbe
sarb
xchg
jae
push
xchg
xchg
lods
gs
es
ficompl
jne
movsl
fistps
cmc
hlt
shlb
cmpsl
mov
jnp
xchg
out
cmc
scas
hlt
or
das
pop
int3
clc
mov
jnp
sti
mov
lret
repnz
adc
jns
dec
inc
imul
fs
cmpsl
xor
mov
sti
inc
call
cmpsl
cld
add
addr16
adc
add
nop
jmp
mov
dec
ja
adc
mov
nop
dec
shlb
jp
xchg
aas
and
jmp
push
xchg
shll
mov
out
mov
push
mov
imul
push
xlat
test
call
mov
popf
mov
popf
dec
adc
ds
mov
lods
add
push
cli
mov
push
addl
aad
fs
rcrb
repnz
insb
cli
push
loopne
jl
cmpsl
cmp
iret
popa
movsb
xchg
xchg
jo
push
divb
outsl
jp
mov
pop
mov
push
dec
dec
and
jl
cmpsb
dec
inc
dec
pop
pop
bound
jle
pop
xor
or
cmp
pop
pushf
shr
dec
push
push
cmc
push
mov
out
push
call
xor
movsb
add
js
lret
adc
jg
popa
sbb
cmp
pop
lock
fidivl
clc
sahf
push
iret
mov
imul
in
jne
test
jbe
int3
stos
insb
sbb
mov
xor
inc
and
and
pop
mov
ljmp
add
icebp
movsl
or
push
lods
pop
pusha
sbb
loop
aaa
jecxz
call
xlat
ss
repz
jecxz
jle
and
or
mov
sbb
adc
addr16
stos
xchg
add
fwait
daa
mov
inc
ljmp
lret
inc
jnp
push
xchg
adc
sbb
inc
lock
int3
mov
insb
adc
fstps
cmpsb
cmp
cmpsb
inc
jae
xchg
iret
push
push
xchg
mov
xchg
dec
cli
fwait
cwtl
xor
rolb
es
clc
and
push
dec
leave
imul
test
loop
ret
stos
popa
adc
xorl
jecxz
mov
dec
xchg
fbstp
stc
andb
adc
loopne
ret
ja
cltd
mov
push
and
inc
add
js
sbb
loop
aas
and
fidivl
pop
lcall
ja
dec
mov
pop
xor
iret
es
ret
hlt
stc
or
je
mov
ret
mov
fnstsw
aas
jo
add
int3
es
sub
pop
mov
orb
dec
adc
mov
leave
mov
jo
jo
adc
in
aad
sbb
cwtl
dec
sub
push
inc
xchg
fwait
adc
scas
div
seta
dec
dec
jb
jmp
xchg
les
sbb
mov
ds
adc
mov
push
cld
pusha
clc
dec
push
cli
mov
inc
test
lock
xor
mov
push
int
movsl
ret
test
cmp
ljmp
push
lret
ljmp
lret
mov
mov
add
adc
jge
pushf
sbb
nop
lds
dec
and
fnstsw
or
xchg
insb
xchg
out
fs
mov
ror
aaa
out
aaa
sub
in
repnz
loope
push
add
adc
jo
inc
int
mov
leave
dec
cs
aas
clc
mov
sbb
shrb
sub
fnstcw
or
sbb
or
mov
mov
inc
jecxz
add
insl
ljmp
or
pop
loope
dec
and
les
mov
sub
outsb
mov
push
xor
cld
in
dec
rcll
cmc
jae
std
inc
xchg
jne
sahf
pop
lods
pop
cmp
cli
and
or
xor
mov
cmc
adc
mov
cmp
and
pop
xor
lea
dec
mov
aam
jae
xor
lds
subb
out
xor
mov
ret
out
lcall
sub
xorb
sub
movsb
lock
mov
ds
int3
push
mov
fdivrs
sti
cmpsb
fbld
add
sub
rol
popf
lret
and
jne
imul
aad
mov
pushf
jae
push
cmp
push
pop
fstpt
dec
lods
ret
xchg
aaa
xchg
fists
cmp
lahf
dec
adc
mov
cwtl
dec
xchg
dec
fs
push
rcl
xchg
dec
lea
in
icebp
shl
xor
sti
js
inc
xor
xor
out
out
push
push
cmp
fldenv
dec
sub
mov
and
cmp
mov
mov
or
scas
rorb
xchg
mov
sbb
lret
jbe
mov
daa
fdivl
add
notb
pop
lahf
fs
nop
test
dec
into
adc
mov
xor
mov
push
iret
sub
imull
pop
sub
sbb
or
cmc
lahf
fsubp
adc
push
jno
jle
cmp
mov
repnz
test
pop
mov
xchg
sarb
inc
xor
push
shl
push
ret
mov
cmpsb
sbb
cmpsl
xchg
push
adc
aas
adc
xchg
jge
xchg
test
xchg
movsb
mov
sbb
jmp
pop
and
xchg
lods
roll
daa
into
pop
or
insb
add
adc
lods
lea
mov
rol
sbb
dec
arpl
and
movsl
push
sahf
jmp
xchg
jo
cwtl
or
mov
cmp
pop
popf
lret
adc
inc
rcr
fildll
cmp
mov
cmpb
and
mov
jmp
in
mov
pop
ja
insl
mov
push
or
mov
adc
sub
adc
sub
push
enter
mov
mov
or
outsl
mov
fsts
cmp
js
inc
lods
mov
into
test
scas
mov
lock
imul
lret
lock
xchg
in
imul
adc
push
test
cmpsl
rolb
xor
divl
xchg
push
xchg
sub
fbstp
imull
cmpsl
iret
xchg
jbe
mov
mov
int
inc
lcall
jmp
ss
mov
je
fwait
pop
push
fiaddl
aam
sub
push
jle
inc
es
adc
loope
fucomi
sbb
jb
test
xor
ss
jmp
mov
dec
cmp
jg
sub
mov
ss
in
mov
mov
pop
imul
xchg
out
outsl
pop
inc
in
frstor
insb
pop
sub
adc
jl
insl
xchg
addr16
lret
aam
pop
sub
shlb
or
fnstcw
mov
fadd
pop
and
and
or
movsb
or
pop
xchg
ja
push
aaa
cmpsl
dec
xchg
enter
pop
std
test
dec
cmp
sub
test
rolb
loop
sbb
stos
xlat
or
ljmp
aad
mov
mov
arpl
out
int3
jbe
jae
pop
dec
leave
les
sarb
xchg
sub
inc
xorl
jae
stos
jge
push
ss
mov
pusha
repnz
imul
mov
cmp
push
std
daa
mov
or
stos
mov
les
pop
or
cwtl
repz
mov
push
add
es
je
dec
mov
pushf
add
cmpsl
push
ja
popf
mov
sub
jne
dec
xchg
xor
sub
jg
cmp
and
push
xor
outsl
fistps
cmp
dec
sbb
or
cmp
jno
clc
push
fwait
mov
push
and
mov
pop
int3
mov
daa
loope
mov
adc
push
push
or
xchg
shl
jl
pop
xchg
aas
cmpsl
gs
data16
pop
xor
psrlw
xor
mov
dec
pop
movsb
cmp
jle
push
sbb
shlb
repnz
addl
lea
sub
stc
mov
push
cld
push
sub
out
into
lret
data16
jne
lods
or
xor
les
lods
lret
dec
mov
in
xchg
outsb
mov
mov
js
in
push
mov
mov
jnp
arpl
fsub
mov
stos
adc
jno
fadd
sarl
cmc
xchg
sub
bound
pushf
gs
sbb
fmuls
sti
movsl
inc
pop
jae
mov
addr16
and
ss
aas
xor
jmp
mov
push
pop
xor
xor
mov
inc
and
rclb
faddl
pusha
nop
fistl
jmp
xchg
mov
mov
inc
scas
sbb
cmpsl
cs
out
aam
jnp
dec
bound
decl
addb
and
mov
cli
inc
js
lcall
mov
repz
mov
call
jbe
sub
sbb
bound
ja
xchg
imul
data16
pop
add
mov
adc
xor
bound
jl
sbb
dec
jg
mov
idivb
leave
and
loope
cmp
out
pop
or
xchg
test
jb
push
popa
sbbb
cmc
subl
push
mov
mov
pop
test
in
jbe
dec
mov
sbb
sub
hlt
sbb
aam
inc
out
ficoms
mov
push
ret
aaa
sbb
ret
test
aam
hlt
dec
out
dec
hlt
stc
lahf
cltd
mov
pusha
add
mov
mov
mov
push
xor
sbbl
mov
std
ret
out
in
test
push
hlt
cwtl
dec
test
lret
sub
scas
push
sahf
adc
and
out
aad
les
add
fs
xor
cmp
dec
pop
pushf
fnstenv
daa
je
adc
dec
shll
movsb
mov
imul
lret
and
test
sub
sbb
aad
mov
adc
scas
jge
aam
pop
or
vmwrite
inc
pushf
or
lea
insl
repnz
insl
pop
ljmp
jp
push
scas
popf
jle
rcll
inc
daa
pop
sbb
clc
and
fdivrs
inc
in
jg
adc
sub
bound
ss
sub
fsubs
cmpsb
adc
jmp
xor
cld
add
push
loop
jnp
push
or
xchg
push
imul
fsts
add
jg
mov
mov
sbb
loop
push
mov
ret
sbb
xchg
xor
jp
les
repz
jne
gs
out
insb
arpl
sub
xchg
and
pop
subl
lahf
std
cmpsb
test
je
sbb
gs
loop
or
hlt
stos
pop
mov
xchg
and
pop
or
and
mov
test
sbb
sbb
dec
roll
pop
ret
pop
sub
lahf
daa
lret
push
nop
mov
popa
cmp
xor
ffreep
shrb
pop
mov
cltd
movb
push
imul
adc
popf
pop
ss
dec
jae
in
and
add
xchg
push
mov
mov
inc
pop
addr16
mov
xor
mov
aaa
scas
bound
sarb
insb
movsl
lock
in
xchg
scas
mov
in
fstpl
lds
movsl
add
pop
or
dec
fs
jl
rcl
cmpsb
cmp
inc
push
mov
xlat
xor
and
cltd
push
inc
pusha
ss
ds
push
push
mov
mov
jge
and
sub
vprotb
push
shll
lret
imul
cwtl
mov
mov
add
lahf
ror
hlt
adc
fcoms
ljmp
jae
mov
xchg
cmpsb
xchg
into
loopne
scas
leave
test
mov
out
dec
dec
xor
mov
cmpsl
lahf
in
xor
lret
pop
mov
adc
and
cmp
pop
pusha
sbb
dec
aad
sbb
xchg
jp
scas
and
pop
cwtl
or
push
or
cmpsl
jmp
sarl
lahf
adc
xchg
push
inc
bound
xor
xchg
jp
sbb
add
icebp
es
mov
test
je
insl
ret
xor
jne
or
or
rcrb
loop
xchg
fisubl
call
divb
lods
mov
repnz
je
mov
mov
inc
lock
clc
ss
in
leave
mov
and
xchg
dec
das
or
mov
push
movsl
mov
test
aam
vmread
cmc
nop
repz
xchg
sub
popf
mov
cmpsl
bswap
xchg
sub
icebp
scas
je
adc
push
nop
aaa
jbe
out
xor
pop
or
add
xchg
jecxz
push
shl
lahf
mov
jl
or
jne
or
mov
imulb
sub
outsl
cli
mov
xlat
aas
mov
icebp
adc
icebp
push
sbb
lods
push
fimuls
mov
aas
xor
jp
clc
sbb
scas
jnp
adc
or
scas
lock
xchg
pusha
stos
aad
addr16
ss
pop
test
into
mov
add
dec
sub
push
loop
jle
js
add
mov
adc
jl
jno
lret
mov
xlat
int
jg
adc
dec
jl
lret
mov
lahf
pop
xor
and
jmp
sahf
inc
test
in
cmp
icebp
jne,pn
pop
lods
cmc
pcmpgtw
xchg
jge
pop
cmpsl
mov
fsubs
push
xor
push
jmp
enter
cmpsl
test
xchg
sti
xor
rcrl
dec
push
push
addr16
mov
inc
cmpb
mov
mulb
and
pop
dec
nop
mov
jb
out
flds
mov
movb
xchg
adc
xchg
adc
insb
push
push
ljmp
in
xchg
add
inc
mov
push
mov
jle
inc
cltd
or
addr16
das
jmp
test
pop
mov
out
mov
dec
lock
ret
outsb
adc
inc
nop
cmp
popf
mov
xchg
add
sbb
mov
mov
idivl
and
adc
into
cpuid
out
xor
jo
adc
fidivs
jle
sub
jp
test
push
xchg
ret
sahf
inc
or
scas
add
mov
hlt
and
mov
in
loop
testb
pmulhuw
in
xor
adc
and
cmc
lret
icebp
iret
loope
xor
bound
mov
andl
insl
leave
jns
mov
sti
int3
clc
mov
xchg
and
shll
xlat
xchg
jge
repz
lods
push
dec
xchg
icebp
sub
inc
roll
shl
out
inc
sub
xchg
dec
pop
or
and
les
out
sbb
fbstp
cli
popa
lcall
or
enter
lret
push
and
sub
push
push
movsl
xchg
in
sar
js
mov
jmp
shrl
js
pop
push
xchg
push
add
dec
es
in
ss
mov
std
cs
movsl
test
icebp
enter
ret
int3
inc
cmpsl
imull
test
push
mov
sti
push
push
je
mov
dec
mov
rorl
mov
sub
mov
lds
push
inc
movsb
add
adc
inc
enter
mov
push
movsl
jge
dec
push
test
js
cld
dec
lods
addl
icebp
dec
sub
cli
lret
push
rcll
hlt
mov
cltd
hlt
or
in
fstps
jmp
jbe
mov
sbb
lods
roll
aas
jecxz
js
popa
cmp
pop
add
inc
pop
test
ds
shlb
je
inc
mov
fs
xchg
mov
push
insb
jbe
mov
out
mov
xchg
sti
insl
sahf
fidivs
or
fdivrl
mov
ja,pn
outsl
aam
leave
int
into
out
lods
pop
lea
sahf
mov
xor
xchg
ss
sarb
add
popa
daa
or
dec
lock
inc
dec
xor
lods
mov
cli
call
xchg
out
fsts
daa
cmp
jns
out
pop
jle
repz
xor
xchg
dec
push
out
adc
adc
scas
pop
xchg
mov
xchg
jo
lds
ss
dec
popa
xchg
push
call
mov
adc
in
pop
dec
out
enter
dec
in
cld
cs
dec
inc
xchg
ret
push
pop
pop
mov
or
mov
mov
leave
enter
pop
sub
jge
sbb
jne
test
out
js
lods
arpl
pop
or
dec
pusha
test
cmp
inc
sbb
sub
jns
arpl
ficoml
fcomps
jno
pop
add
sbb
pushf
shll
adc
mov
jg
pop
cmpsl
or
movsb
mov
jns
pop
fadds
xchg
outsl
xor
into
mov
mov
dec
add
adc
sbb
call
gs
lahf
out
cld
outsb
cmp
push
add
jae
sahf
cmp
aad
adc
shlb
cmp
in
shlb
xchg
pop
lret
mov
test
pushf
sbb
add
pop
les
mov
leave
hlt
pop
mov
ss
into
jmp
loopne
inc
sub
adc
aaa
mov
pop
pop
sub
loop
imul
int3
pop
inc
xor
scas
add
jmp
xor
dec
daa
adc
test
out
jns
outsl
fs
or
jmp
pop
mov
dec
mov
aaa
aaa
push
mov
xchg
cwtl
daa
mov
dec
dec
add
inc
popf
pop
into
mov
ljmp
sub
mov
mov
out
rclb
repnz
adc
add
sbb
arpl
inc
lcall
push
fdivr
cmp
jmp
jmp
mov
cld
pop
cmp
cmp
mov
test
lds
aam
adc
nop
addl
jecxz
popa
fsub
pop
mov
int3
sub
js
fimull
rcrb
lods
mov
mov
rorb
mov
in
adc
jp
sub
jo
add
xchg
mov
mov
xor
xchg
dec
xchg
xchg
cmc
adc
test
add
or
cmp
cmp
add
fsubl
cmpsb
mov
js
in
inc
pop
xor
cmp
outsl
adc
sub
mov
mov
rorb
mov
pop
mov
and
aam
daa
mov
fisubrs
outsl
push
xor
adc
or
mov
mov
sub
mov
fldenv
pop
jmp
push
notl
cmp
call
sbb
pop
push
int3
push
sbb
int
adc
cmp
mov
add
inc
in
mov
sbb
in
sarb
shrl
movsl
adc
adc
fldenv
sbb
push
mov
jmp
inc
popf
dec
inc
lahf
add
test
push
fnstenv
push
sbb
xor
negl
enter
xchg
jg
in
call
mov
add
push
xchg
loope
or
pushf
sub
fsub
push
mov
mov
dec
gs
inc
shll
push
movsl
mov
cmp
ds
orl
cld
sti
sbb
pop
repz
mov
jge
fdivrl
xchg
pop
dec
mov
insl
ljmp
jecxz
jo
lahf
pop
lods
fstps
mov
lods
jle
xor
imul
push
stos
jle
push
scas
pop
jne
xlat
add
hlt
subl
or
mov
xchg
xor
js
ja
movsl
cmpsb
push
xchg
ss
xchg
into
add
sub
push
xchg
jmp
subl
rclb
add
lds
adc
dec
lcall
popf
inc
out
repz
fwait
or
push
into
mov
fs
dec
sbb
pushf
mov
sub
mov
pushf
xor
out
lods
mov
movsl
test
sti
fadds
mov
push
sbb
xchg
inc
neg
inc
push
jae,pt
pop
xor
xchg
and
call
shll
push
lock
or
pop
pop
in
pusha
sbb
xchg
inc
js
lds
jns
nop
or
stos
adc
mov
mov
dec
xchg
vmwrite
sub
test
mov
dec
sbb
pop
adc
dec
cwtl
dec
jg
in
jg
loope
pop
dec
dec
dec
or
xchg
sbb
jbe
jbe
push
jge
xchg
in
jl
imul
popf
sub
hlt
clc
orb
out
xchg
jno
xor
xorl
sub
dec
hlt
sti
inc
gs
outsb
jmp
pop
subb
hlt
stos
sbb
scas
dec
xor
and
push
loopne
mov
dec
ljmp
lahf
or
aad
xor
jge
out
inc
xlat
or
inc
xor
mov
push
xor
xchg
scas
dec
insl
sbb
fwait
stos
ja
mov
and
inc
adc
dec
jb
or
test
cli
jl
es
pushl
and
dec
cmc
adc
mov
push
sub
or
add
xchg
gs
arpl
push
andl
pop
scas
inc
stc
and
in
fldt
inc
das
mov
into
fucomip
jbe
shl
inc
scas
add
int
jp
inc
icebp
mov
push
push
xchg
jl
test
cmp
cli
ja
fucom
push
jge
aaa
scas
inc
mov
inc
test
pop
mov
xchg
pop
push
fdivrs
sahf
or
rcrl
testb
xor
xchg
sti
xor
lock
jecxz
mov
and
pop
sti
in
mov
push
stc
xchg
push
jno
je
ds
scas
int
and
cmpsl
fwait
imul
outsl
adc
test
cltd
jae
je
mov
lahf
mov
popa
shr
cltd
in
idivl
mov
or
sbb
mov
nop
pop
je
inc
in
js
mov
sub
mov
mov
push
xor
out
sbb
pop
pop
or
cmp
mov
mov
add
adc
dec
imul
out
add
dec
xchg
adc
inc
movsl
and
popa
cld
std
push
inc
stos
or
shlb
fcomip
in
call
push
jne
icebp
xorb
adc
mov
jbe
or
out
pop
cs
mov
lcall
sub
js
out
sub
iret
adc
test
adc
push
and
fadds
mov
sbb
mov
add
ljmp
push
sub
sub
mov
inc
loop
int3
in
cmp
dec
jg
lret
shr
scas
pop
ljmp
stos
inc
icebp
test
mov
pop
sbb
jae
fsubl
xor
inc
outsb
movsb
push
pusha
jmp
mov
aas
notl
in
dec
push
jle
in
cs
ret
push
pop
cmp
icebp
inc
shl
sbb
push
jo
mov
pop
ss
pop
ss
inc
aaa
and
clc
inc
mov
sub
lcall
in
mov
push
mov
xchg
push
add
orb
dec
push
fldt
xor
lret
jecxz
addr16
gs
push
xchg
cli
push
pop
jge
pop
in
inc
mov
call
xor
inc
pushf
mov
xchg
jae
sub
popf
aas
pop
cli
dec
pop
gs
mov
aaa
fmuls
notb
imul
xor
mov
scas
lcall
mov
aad
fbstp
inc
pop
pusha
outsb
and
out
or
cwtl
xor
mov
and
sub
imul
pop
cmp
jp
daa
sub
paddusb
add
div
push
repz
sub
pop
jo
fisubrs
stc
ljmp
pop
mov
imul
or
lcall
push
iret
in
push
mov
add
dec
add
leave
push
mov
adc
in
jge
and
in
int3
cmp
test
es
dec
or
mov
pop
cmp
push
sbb
repnz
pop
xchg
sbb
push
or
out
xchg
cld
add
and
shrl
rcl
jp
and
inc
mov
inc
test
add
add
scas
or
xchg
cltd
roll
cmp
movsb
js
push
jl
lea
jae
sub
jno
inc
fprem
adc
cmp
jno
dec
and
or
lret
xor
das
inc
fldenv
mov
xchg
popa
xchg
pop
ljmp
push
mov
adc
fbld
mov
ljmp
add
in
mov
sbb
jb
xor
dec
add
mov
inc
lea
outsb
push
mov
in
aas
aas
xchg
into
xchg
in
lret
rcrl
mov
sbb
pop
jp
fbstp
adc
mov
cmp
dec
movsl
data16
jg
xchg
xor
in
insb
cmp
push
sbb
inc
arpl
mov
inc
stc
lock
dec
pop
or
in
xacquire
push
pop
xchg
gs
inc
and
jge
int3
test
scas
nop
lcall
cmp
je
inc
mov
loop
mov
neg
lods
dec
dec
or
scas
test
push
lock
int
jne
mov
mov
mov
dec
je
pusha
imul
ror
mov
das
push
mov
js
adc
decb
push
push
add
inc
stos
add
inc
mov
xchg
rcrl
pop
lods
imul
insb
jge
inc
das
lea
out
lods
adc
cltd
mov
mov
jno
sub
xor
mov
fcomp
xchg
xor
mov
and
movsbl
sti
jae
jge
sbb
das
test
lahf
xchg
push
clc
xchg
pop
and
in
mov
xor
movsb
out
movsb
stos
push
movsl
mov
fsubs
inc
xor
push
fidivl
or
jno
loop
jmp
psrld
rcll
dec
sub
out
xlat
push
neg
lcall
popf
gs
cmc
push
mov
in
out
xor
cmc
out
gs
dec
pop
dec
pop
pushf
cwtl
je
fcompl
lds
add
cltd
std
sbb
or
lahf
inc
xchg
xchg
loopne
mov
in
lock
adc
pop
dec
xor
push
sahf
repz
mov
movsl
pop
sti
cmp
cmpsb
mov
or
call
mov
and
pop
dec
mov
test
push
shll
jo
fistl
adc
les
push
stc
cli
in
out
push
imul
lret
aaa
mov
cmp
inc
enter
add
inc
xchg
je
push
loope
scas
pop
movsl
mov
insb
adc
pop
pushf
cmpsl
ret
push
mov
inc
lret
mov
pushf
aad
mov
inc
sahf
pop
into
push
sub
and
mov
pop
insb
inc
sti
repz
sub
sub
mov
pop
jno
call
aas
in
aaa
jge
pop
shlb
dec
sbb
repz
mov
or
jg
push
fistps
push
sbb
test
hlt
and
sbb
outsb
dec
nop
je
lahf
dec
push
dec
cmc
mov
cld
leave
das
push
jl
mov
cld
jle
das
rcr
cmc
mov
jb
add
dec
or
mov
and
mov
or
ljmp
push
xchg
rclb
decb
cmp
lock
add
into
stos
inc
xchg
mov
ljmp
adc
mov
or
pusha
jo
cmp
jmp
inc
cs
in
mov
mov
inc
push
shrl
adc
xor
movsl
fsubl
stos
icebp
rolb
je
nop
add
add
push
ljmp
cmp
arpl
lock
inc
mov
mov
leave
inc
sbb
leave
xor
shlb
cmp
pop
push
mov
mov
into
out
and
mov
sbb
dec
fwait
inc
outsb
out
imul
push
or
jnp
lcall
movsl
push
mov
popf
pop
testl
andl
pop
daa
dec
push
inc
hlt
push
ret
loopne
push
int
loope
bnd
les
or
adc
ss
push
jbe
iret
mov
cmp
inc
test
push
pop
ja
pop
inc
mov
xor
push
pop
cli
adc
lods
or
cltd
dec
fadds
int
cmpl
ja
ret
xchg
lret
fwait
or
xchg
testb
int3
rolb
icebp
pop
xchg
mov
aas
fldl
push
out
xchg
stos
mov
repz
cli
xchg
adc
inc
test
pushf
ficoml
xlat
sbb
lret
addr16
xchg
fwait
xor
das
pop
js
push
inc
add
shll
sti
bound
int3
movsb
mov
cmp
bound
dec
pop
jb
imul
leave
arpl
arpl
lods
stos
lds
lock
adc
lea
jmp
and
xchg
outsl
movsl
dec
xchg
add
fisttpl
jnp
lock
mov
pop
jecxz
sub
or
test
int
sbb
outsl
test
shlb
xor
mov
mov
cmp
sub
fildl
dec
dec
sti
mov
push
fs
dec
int3
cld
pop
xchg
pop
dec
orb
sbbb
mov
cmp
orl
xor
sbb
mov
cmp
dec
push
push
ret
adc
ja
mov
cltd
je
pop
fwait
xchg
xorb
xlat
push
pop
sti
mov
mov
xchg
push
inc
cmp
loopne
mov
shll
mov
nop
das
mov
and
push
ljmp
or
cld
jp
enter
int3
mov
ljmp
cmpsl
rcr
mov
mov
mov
mov
fnsetpm(287
pop
cwtl
call
aad
pop
jae
add
mov
loop
cld
adc
and
jbe
mov
xchg
rcll
popa
push
sub
mov
xor
adc
imul
mov
xchg
push
push
loope
aaa
xchg
andl
and
xchg
lret
cmp
sub
cmp
int
add
mov
xchg
pushf
xchg
inc
je
jno
push
mov
clc
in
inc
xor
jmp
add
loopne
fildll
pop
movsb
int3
fiaddl
bound
shr
test
mov
or
sbb
je
lock
pop
mov
shrl
dec
and
in
mov
cmp
xchg
aas
push
call
enter
adc
ds
sub
cmc
and
pop
adc
aad
clc
mov
adc
jo
mov
orb
in
lock
mov
or
and
outsb
imul
inc
jno
inc
lds
cld
push
in
mov
mov
or
cmp
fsubs
adc
add
mov
stos
fs
sbb
movsb
loope
mov
push
pop
cmp
lock
push
xchg
ljmp
add
ret
push
adc
push
mov
add
mov
inc
mov
xor
icebp
adc
xchg
jno
aad
mov
dec
pop
pop
ret
jmp
ror
insl
test
or
xor
loop
test
std
dec
jmp
sub
lods
in
je
fwait
mov
dec
repz
xor
cwtl
cmp
jne
inc
sbb
shl
mov
or
into
test
pushf
inc
out
and
cmpsl
loopne
aaa
xor
in
pop
xchg
das
cmp
mov
dec
jb
loope
pop
sbb
jae
rorl
out
lock
out
xor
loop
ljmp
mov
loopne
ror
lret
imulb
outsb
mov
testb
bound
xchg
xchg
popf
les
adc
daa
bound
popl
test
iret
push
faddl
mov
leave
loop
or
jge
add
scas
sub
outsl
mov
cs
dec
lea
sbb
lcall
icebp
mov
sbb
fisttpl
jb
xchg
je
and
sahf
leave
push
sbb
lret
leave
mov
mov
idiv
out
int3
cmp
mov
and
rolb
cmc
mov
clc
ja
pushf
mov
jmp
push
jno
pop
repz
rorb
fs
das
lods
mov
pop
and
inc
cmc
jl
mov
pusha
lods
es
lcall
imul
ja
out
jae
lret
bound
lahf
inc
je
test
inc
pop
loopne
mov
sarl
addr16
adc
in
push
rorl
std
ljmp
add
in
mov
repnz
xor
and
fldcw
imul
into
pop
mov
inc
imul
add
adc
lret
mov
les
ret
cmp
popf
jle
stc
and
dec
in
fdivr
adc
xor
rclb
sub
or
testl
scas
xor
pusha
mov
cmp
data16
test
fbld
fsubs
dec
push
dec
sti
cwtl
clc
inc
xchg
push
cmp
or
mov
lock
xlat
mov
push
inc
fisubs
out
shlb
pop
fmul
and
push
sub
jge
sbb
jp
fisubrs
ror
ljmp
leave
ret
mov
dec
push
xchg
aam
outsb
mov
popaw
mov
ret
push
sub
lods
es
push
and
stos
push
sbb
ds
popf
aad
mov
cltd
push
popf
out
xor
imul
dec
xor
and
out
sbb
enter
mov
arpl
loopne
lods
jp
cwtl
jg
shlb
movsl
xchg
pop
add
push
out
add
fs
arpl
add
gs
test
push
add
jo
push
push
sub
xchg
das
idivl
inc
dec
jge
xchg
adc
dec
fbld
data16
rclb
push
push
test
repz
mov
dec
scas
jo
mov
fildl
cmp
jns,pt
pop
mov
loop
ljmp
lret
sbb
inc
aam
jl
outsb
push
push
adc
xor
cld
jmp
mov
dec
xor
test
and
add
and
jecxz
andb
lods
dec
mov
ljmp
sbb
stc
rclb
adc
xor
stos
add
xchg
mov
adc
push
fmull
cmp
mov
inc
adc
add
jno
in
jo
add
sub
rolb
cmp
add
push
xor
xchg
jns
loope
and
lahf
ja
xchg
mov
adc
fdivp
and
add
add
adc
mov
cmpsl
sbb
and
add
inc
or
pop
aad
mov
push
xchg
stc
or
mov
shl
or
mov
loope
adc
outsl
cmp
insl
es
out
loope
xchg
jns
mov
xor
out
clc
pop
sub
shrl
enter
popa
hlt
cs
adc
inc
stos
cmc
fstps
cli
mov
xor
cmp
jnp
xor
jmp
jmp
cmpsl
and
insl
mov
fstps
in
xchg
shll
sub
or
movsl
andb
insl
mov
mov
and
enter
cltd
xor
or
pop
ss
jbe
inc
cmp
bound
jo
mov
mov
add
sub
popa
addr16
fs
mov
sub
mov
dec
push
xor
ja
mull
dec
sbb
daa
adc
push
inc
std
lock
cmp
push
or
js
ret
lock
push
repnz
cmc
cmpl
pop
insl
xchg
out
push
int
mov
fnstenv
cmc
xor
push
jo
adc
jbe
add
xchg
rclb
sbb
and
fsubs
xor
mov
int
shl
add
lods
lahf
call
sub
leave
pusha
mov
lcall
pop
pop
push
repnz
and
mov
push
orl
bound
icebp
xor
test
rcll
ret
push
xchg
int3
dec
addr16
lea
pop
movsl
scas
in
mov
and
mov
cmpsb
add
inc
jns
movl
sahf
and
ss
push
mov
andb
shll
mov
cmpsb
ret
insb
mov
mov
sti
jmp
push
lret
popa
push
inc
insb
pop
mov
out
inc
outsb
cltd
mov
ret
mov
jge
into
sub
add
nop
add
dec
sbb
xchg
mov
dec
movsb
mov
sub
jbe
mov
fiadds
fwait
fwait
push
cmpsl
mov
rcll
jle
loopne
pop
mov
jb
gs
mov
cmpsl
adc
push
loop
fwait
pop
xchg
adc
aad
dec
mov
pushf
in
loope
in
lcall
aam
mov
rcrb
ret
pop
inc
iret
notb
xor
mov
dec
out
pusha
in
xlat
xorb
adc
stos
mov
push
shll
xchg
push
lcall
sbb
mov
add
movsl
test
pusha
jp
shlb
cmp
outsb
add
ds
inc
inc
inc
pusha
sbb
loopne
inc
sbb
xor
mov
fbstp
xor
lahf
faddl
hlt
xchg
test
mov
inc
insb
and
out
test
rcrb
push
push
xor
es
jno
push
cmp
mov
jmp
mov
in
dec
repnz
dec
outsb
adc
dec
cmc
fidivl
sti
xor
pop
mov
rcrb
imul
dec
dec
gs
inc
jns
insl
sbb
into
mov
push
mov
test
pop
sbb
push
pop
jl
insb
push
xor
cld
xor
mov
fwait
out
push
mov
pusha
out
hlt
jge
fwait
cmp
xor
es
and
imul
jge
pop
mov
cld
add
cmpsl
cmc
xor
push
lock
lret
aad
or
inc
pop
fistl
mov
dec
mov
lds
mov
orl
lret
dec
inc
sbb
mov
rolb
fldenv
stc
aad
andl
pop
es
test
xchg
dec
xlat
xchg
aaa
xor
subl
cmp
in
and
push
scas
dec
lcall
movsb
and
sub
out
pusha
outsb
test
cmpsb
adcb
lret
movsb
jle
push
mov
jmp
mov
or
mov
and
mov
scas
inc
test
cmp
or
roll
fsubl
ret
fs
aam
adc
test
fstpt
pop
repz
popf
xchg
iret
jge
shl
arpl
dec
mov
push
jge
loop
push
filds
push
mov
inc
dec
in
inc
mov
mov
movl
clc
leave
mov
jbe
xlat
test
sub
mov
xchg
and
cmp
dec
addr16
repz
cmp
dec
lcallw
inc
add
or
jno
adc
mov
insl
cmp
mov
inc
mov
fwait
mov
adc
and
dec
xchg
sub
jl
push
sub
filds
push
les
ficompl
xchg
bound
mov
or
lahf
and
lret
mov
fnstenv
mov
aaa
pop
lods
sub
mov
mov
mov
fdivl
lods
stos
test
aas
inc
lods
gs
sub
lcall
jo
jp
mov
xlat
test
dec
xchg
xor
or
fldl
lea
jge
bnd
stos
daa
daa
cmpsb
fldt
mov
cmp
insb
mov
pop
push
xchg
jmp
push
out
push
cmp
xchg
ffreep
dec
pop
inc
clc
sti
popa
add
testl
push
push
imul
mull
lods
shlb
or
cmp
or
popf
daa
shlb
test
inc
mov
nop
int3
subb
jecxz
or
ja
pop
ret
mov
mov
scas
es
mov
xlat
jnp
dec
imul
push
out
movsb
add
xchg
loope
adc
sbb
push
loope
daa
popl
inc
mov
fwait
dec
daa
sarl
or
or
lret
aam
xchg
add
sbb
repnz
lahf
addw
int
push
jb
push
mov
ss
mov
ljmp
sbb
xchg
test
mov
add
nop
rol
rorb
into
es
enter
cltd
rolb
add
cli
jp
xchg
dec
ss
cmc
mov
aam
jmp
lea
cmc
cwtl
or
sahf
loopne
das
sub
add
call
stos
dec
cmp
outsb
mov
mov
jge
sarb
cmp
and
and
paddd
sbb
mov
outsb
jecxz
lcall
dec
je
inc
cli
xchg
sahf
pop
shlb
daa
daa
fsubp
loope
mov
mov
dec
mov
dec
mov
outsb
add
popa
shr
adc
outsb
daa
test
aas
add
dec
pop
xlat
pop
outsl
daa
pop
shl
subl
fcomps
dec
cs
pop
inc
and
lretw
pushf
add
mov
cmp
mov
callw
cs
xor
addr16
jmp
mov
mov
iret
clc
mov
bound
rolb
roll
pop
and
mov
int
push
mov
fwait
pushf
or
and
mov
pop
sbbb
xchg
push
inc
mov
inc
int3
pusha
mov
xchg
mov
dec
and
es
repnz
das
adc
cmp
out
push
xor
push
loope
jmp
shlb
sbb
pop
in
jnp
scas
cs
add
cmp
ss
cmp
out
push
push
int3
dec
in
jb
sarl
xlat
mov
cltd
inc
pop
xchg
cld
cmp
fstl
loope
ret
cmp
add
cmpsl
dec
jp
mov
dec
test
push
xor
aad
mov
ja
or
add
hlt
ss
jge
mov
test
test
lcall
movsb
int3
pop
mov
data16
jle
jae
pop
xor
clc
ret
rclb
jo
sub
call
inc
hlt
lds
scas
jns
jns
aaa
xor
ds
xor
push
and
mov
cmp
ja
sub
test
adc
cmp
jl
ss
jmp
pop
inc
cli
push
scas
sbb
sub
and
mov
in
cmpsl
imul
scas
push
scas
ss
xchg
sbb
addb
out
call
repz
int
add
sub
stos
adc
pop
or
lods
pushf
aas
pop
gs
push
and
xchg
cmpsb
adc
sbb
mov
jl
nop
xchg
pop
and
jmp
in
icebp
xchg
testb
pop
stc
shlb
and
loop
push
lret
push
sbb
outsl
mov
pop
in
xchg
jo
push
aam
and
mov
in
scas
sbb
jle
outsl
push
daa
std
or
cli
lahf
mov
imul
aad
mov
shlb
outsl
jp
movsb
in
xor
aam
dec
sbb
mov
jl
xchg
inc
pop
sti
mov
xor
cmpsb
xchg
mov
sbbl
jnp
cmpsl
mov
jne
in
shrl
faddp
loope
addr16
les
fnstcw
mov
jge
pusha
outsb
fs
xchg
scas
mov
jmp
xchg
ja
fs
cmp
scas
sahf
mov
mov
jae
aad
lea
push
mov
icebp
mov
cwtl
es
jge
fdivrs
push
xchg
pop
ret
xor
lret
insb
mov
ret
loop
mul
ja
ja
scas
aas
sub
jo
test
pushf
xor
pop
add
sub
or
pop
in
int
leave
shl
ljmp
hlt
adc
lret
incb
sub
adc
mov
hlt
xor
or
insl
push
xchg
or
fimuls
xor
adc
stos
xchg
scas
xchg
in
jno
pop
push
pop
pop
icebp
les
dec
aas
xchg
out
sub
add
mov
sub
stc
loopne
cmp
mov
out
loope
lahf
mov
lret
mov
adc
movsl
xor
mov
cmp
or
inc
rcrb
push
mov
jl
mov
scas
fldl
xor
sbb
fs
mov
add
lret
or
mov
adc
jmp
shll
rsm
hlt
orb
ja
or
sbb
mov
ror
add
push
sub
dec
sub
test
push
ret
adc
jecxz
mov
jg
outsl
data16
jle
cmc
sub
mov
jecxz
inc
sub
sti
xchg
out
andb
mov
std
fsubs
or
inc
push
mov
in
sub
sbb
xchg
mov
lock
pop
pop
loope
xchg
add
popa
stos
movsl
pop
sbb
arpl
lds
add
cmp
lahf
jae
jge
pop
mov
sub
cmp
jno
es
out
cmp
frstor
lret
or
int
fsts
outsb
xchg
xor
mov
clc
or
fsubrs
xchg
leave
pop
jnp
aam
xchg
pushf
ljmp
in
ds
dec
inc
sub
dec
in
and
lea
fsts
mov
stos
pop
jnp
mov
loope
mov
les
or
sub
sub
pop
xchg
out
sbbb
and
enter
sub
adc
jb
pushf
dec
call
cli
jg
mov
xor
inc
sub
sub
xor
or
pop
adc
dec
mov
sub
bound
jo
sbb
out
jnp
push
xchg
loope
push
mov
lods
ss
data16
push
fimull
stos
iret
lds
inc
sbb
mov
cli
push
cltd
fwait
nop
jb
cmp
dec
out
dec
push
lret
add
fisubs
les
mov
mov
pop
cmpsb
stos
imul
popa
dec
and
mov
or
imul
aad
sbb
cli
jmp
lret
inc
sbb
dec
std
gs
push
out
repz
push
lods
push
ds
push
sbb
test
push
sub
mov
jg
test
scas
mov
cli
mov
mov
jl
stc
es
cwtl
pop
sbb
stos
inc
pop
mov
enter
mov
mov
cmp
divb
xor
stmxcsr
dec
sbb
pop
cmp
loop
adc
fiaddl
sub
pusha
pop
pop
dec
add
push
pop
subb
or
xlat
jnp
or
out
push
dec
mov
ficompl
int3
mov
add
sub
cmpsl
mov
cwtl
mov
inc
int3
jmp
mov
xchg
decl
push
stos
popa
shl
fldl
mov
in
loop
rorb
insl
and
out
shlb
and
xchg
fsubs
pop
push
enter
in
dec
popf
sub
mov
xor
int3
adc
pop
push
je
shr
xlat
dec
xlat
ret
add
sbb
shll
hlt
push
daa
xor
inc
insl
xor
sarl
out
scas
pop
push
gs
or
movsb
cmp
dec
push
dec
cmp
sbb
decl
pop
xor
imul
jb
cmpsl
xchg
movsl
lret
xorb
pop
ret
insl
sbb
lcall
adc
imul
jecxz
gs
fcmovnbe
out
roll
orl
push
add
ret
inc
imul
and
negl
pusha
mov
out
inc
into
lcall
imulb
sub
insb
subb
jg
in
push
mov
in
mov
sbbl
adc
lods
xor
xor
cld
mov
pop
mov
arpl
push
scas
daa
mov
imul
sti
aas
inc
insl
lret
sub
cmp
sub
lea
mov
or
sarl
pop
sbb
fstps
hlt
pushf
pop
js
jmp
dec
divl
xchg
outsl
outsl
mov
bound
test
adc
imulb
aas
test
jg
fmul
mov
outsl
imul
clc
lods
mull
test
loop
nop
daa
ds
add
scas
call
cmp
lahf
jb
adc
jnp
int
lea
iret
jge
int
xor
gs
push
pushf
mov
adc
sti
out
inc
lret
sbb
lds
jnp
push
rorb
movsl
lret
xchg
sarb
mov
mov
hlt
xchg
cmp
dec
push
mov
repz
std
or
cmp
pop
cmp
and
mov
jl
cld
hlt
cmp
and
fdivrs
int3
cmp
xchg
push
jecxz
loope
hlt
mov
mov
shll
shll
cmp
mov
bound
push
jb
inc
inc
and
repz
lret
jecxz
sbbb
imul
mov
mov
push
push
aaa
pop
cmp
mov
lret
fs
inc
mull
les
cltd
scas
wrmsr
pop
sub
fsubrl
scas
push
cmp
mov
dec
sub
pop
insb
fmull
call
mulb
stos
mov
popf
lods
pop
mov
loopne
mov
mov
or
or
inc
repnz
repz
push
and
inc
or
sbb
push
out
es
pop
or
push
inc
mov
leave
push
ds
cli
lea
arpl
popf
sti
daa
sub
or
outsl
lods
or
mov
nop
ret
scas
sub
xor
cmp
fwait
adc
inc
ljmp
dec
cmc
cmpl
mov
rorl
roll
dec
int3
and
mov
and
sbb
and
add
addr16
sub
sub
or
mov
push
or
dec
sub
and
je
push
xchg
notl
in
adc
inc
dec
push
aaa
loop
daa
adc
push
leave
xchg
sarl
and
pop
cmp
int3
movsb
mov
sbb
jbe
and
xchg
sbb
pop
cli
mov
xor
out
out
add
push
xor
sbbl
or
dec
shlb
pop
std
dec
icebp
cmp
mov
rolb
jg
sbb
pop
cmpsb
mov
into
jno
xor
movd
cmpsb
mov
icebp
push
lods
rcrl
mov
in
pusha
js
cmp
jb
imul
add
xchg
rol
cs
add
loope
or
jmp
push
xchg
mov
addl
out
inc
sbb
imul
jp
sbb
ja
imul
jae
push
icebp
fucomp
sbb
and
out
xchg
mov
cmp
cvtps2pd
stos
out
stos
cmpl
push
out
jbe
adc
mov
and
loopne
cs
push
out
dec
xchg
adc
inc
ds
stos
or
mov
repnz
scas
pop
sbb
push
pop
xor
jg
adc
shl
add
cli
add
call
sub
ss
pop
adc
repnz
dec
fsubs
es
ret
xchg
inc
cmp
lods
mov
emms
and
stos
sub
jg
pushf
sbb
pusha
sub
mov
xor
into
lods
lret
mov
sub
fistl
cmp
mov
sti
cmpsb
push
cmp
sarb
daa
in
loope
sub
lret
dec
xchg
jle
jno
pop
arpl
xor
inc
lods
push
push
orl
aam
fucomp
ss
push
inc
dec
adc
out
pop
mov
idivl
les
or
ret
arpl
outsb
test
mov
popf
mov
or
js
imul
jecxz
pushf
lret
sahf
popa
sbb
mov
sub
jecxz
dec
and
xor
fcmovnbe
incl
rorb
lahf
push
int3
mov
out
adc
cltd
add
mov
or
inc
loopne
out
out
mov
sbb
inc
lcall
jno
outsb
test
sub
dec
data16
xlat
cli
xchg
push
cmp
add
bound
xor
jl
pop
insl
or
or
aam
mov
xor
in
inc
loopne
cmpsl
adc
pushf
ficomps
ja
inc
lds
pop
mov
ds
and
adc
and
repnz
popa
popa
inc
sub
es
aas
in
in
mov
lret
into
jno
mov
push
mov
pop
jecxz
xor
lds
push
ret
adc
cld
insb
jno
xor
push
pop
ret
aam
xor
das
es
scas
jp
push
gs
cltd
icebp
mov
xlat
popf
ljmp
cmpsl
cwtl
mov
cs
add
xor
and
nop
push
or
dec
jb
repz
mov
add
ja
inc
ljmp
cwtl
sub
dec
and
mov
inc
js
adc
fistps
sub
push
mov
mov
xor
out
lea
stos
lret
xchg
cltd
arpl
leave
sbb
stc
mov
notl
mov
add
or
out
jns
xchg
cmp
mov
sbb
les
movsb
shrb
sti
aam
inc
jecxz
xor
insb
adc
pop
xchg
gs
ja
add
enter
stos
dec
lea
push
xor
pop
dec
aaa
inc
sbb
push
push
and
shrb
mov
rcr
mov
mov
jp
fistl
sub
icebp
jge
in
iret
std
jae
pop
pcmpgtb
pop
jnp
push
pop
mov
into
arpl
mov
hlt
cmp
sti
dec
aad
aad
adc
inc
pop
sbb
xchg
jl
mov
sbb
cmp
in
mov
aaa
bound
push
dec
push
mov
pop
lret
add
bound
out
adc
nop
out
inc
mov
int3
test
xor
ret
or
inc
lret
pop
dec
jp
cmpsl
push
dec
mov
cmp
cli
pop
mov
shrb
inc
inc
movsb
shrl
dec
lret
sub
leave
fists
and
xchg
jo
in
mov
adc
push
js
xor
and
aam
push
pushf
dec
outsb
mov
push
inc
push
fcompl
add
test
mov
lds
dec
jo
scas
jo
mov
jnp
inc
push
ja
mov
mov
inc
mov
cmpsb
aas
pop
xchg
lods
clc
stc
cmp
sbb
push
insl
stc
dec
or
push
mov
adc
cltd
mulb
daa
data16
stc
mov
push
xorb
out
lea
push
movsb
outsl
cmpsb
addr16
mov
mov
cmpsl
imul
insb
mov
ja
xlat
xchg
push
xchg
mov
pop
inc
adc
mov
mov
xor
cmp
dec
outsl
jb
fwait
inc
cmp
in
cmpl
and
and
mov
cmp
pop
popa
sub
inc
mov
out
inc
cs
jmp
and
push
psubd
test
pop
sub
into
nop
sbb
mov
stc
xchg
push
pop
fisttpl
aam
lret
test
cmp
js
scas
pop
xchg
add
bound
pop
fbstp
xor
mov
push
imul
lea
pop
int
pop
loopne
xor
enter
and
adc
into
mov
and
jge
int
add
adc
adc
mov
loopnew
out
dec
movsl
jno
cmpb
add
aas
fldenv
inc
jbe
add
push
cmp
inc
jge
aaa
xor
push
mov
inc
cmpsl
lods
leave
lods
or
push
mov
mov
aad
rorb
in
adc
jno
jnp
test
icebp
dec
push
bound
mov
je
test
insl
mov
pop
ss
repz
jg
lods
nop
jl
jle
outsb
test
js
call
add
pop
sub
scas
lret
push
ja
inc
in
pop
cmp
mov
rcll
cs
into
dec
out
loope
in
insb
xor
mov
movsb
shll
mov
inc
addr16
dec
popf
ja
insl
inc
jmp
dec
add
mov
lds
xorl
jl
negl
jns
insb
lret
loop
movsl
inc
aas
jecxz
pushl
mov
inc
lea
out
push
lret
iret
xor
jo
push
cld
pop
ds
cltd
sahf
ljmp
aam
das
or
sbb
adc
lcall
int3
ret
pusha
rorb
sbb
sbb
cltd
js
test
mov
mov
dec
cli
mov
aam
sbb
or
faddl
xor
fs
push
fstpt
mov
insb
fisttpll
imul
sub
fildll
ss
dec
stos
cwtl
pop
sahf
cli
out
aad
scas
stos
int
push
cmp
dec
add
idivb
pop
es
jge
loopne
imul
jecxz
mov
push
inc
cld
fistl
outsb
xchg
xchg
loope
call
inc
adc
add
arpl
dec
xlat
adc
out
dec
adc
mov
lods
in
sbbl
sub
add
gs
stc
js
xchg
es
sbb
cmp
in
and
sbb
in
popaw
ja
fimull
adc
shlb
inc
icebp
jno
xor
jb
push
aad
mov
mov
cmp
xchg
xlat
inc
fnstcw
add
push
mov
xchg
mov
xor
sti
add
jnp
dec
mov
pop
or
mov
add
xor
mov
cmc
sbb
adc
add
cmp
mov
movl
cmpsb
xor
mov
jo
xchg
mov
test
sub
ficompl
jmp
sbb
jp
andl
aad
ss
je
mov
lods
push
xlat
int3
or
inc
pop
cmp
sbb
push
cmp
test
mov
push
xchg
jnp
lret
xor
aad
cmc
scas
jb
xchg
mov
cmp
cmp
cmp
test
xchg
dec
mov
jbe
xlat
imul
stc
dec
jo
sar
jno
adc
jbe
mov
xchg
xlat
or
mov
je
scas
enter
add
push
dec
outsb
or
mov
mov
xchg
jne
call
pop
adc
xor
cwtl
mov
in
cli
sbb
xor
adc
shrl
mov
shlb
pop
aas
mov
into
mov
mov
leave
cmp
sbb
stc
or
jle
dec
fbstp
adc
mov
jl
jle
movq
je
mov
pop
pop
push
aam
test
stos
mov
mov
cmp
scas
std
lds
xchg
ret
mov
shl
inc
and
mov
cmp
insb
push
repz
pop
mov
mov
sub
push
mov
inc
mov
jle
pushf
cmp
jns
pop
insl
push
mov
mov
movsl
push
cwtl
jle
xchg
xchg
cmp
mov
enter
sub
jne
pop
adc
out
fisubrl
push
and
cmp
mov
lds
aam
jge
loopne
nop
or
mov
lret
push
xor
imul
sub
addl
imul
xor
push
push
jno
pop
or
sub
lahf
mov
mov
cmp
arpl
hlt
mov
lcall
jmp
or
int3
outsb
popf
mov
sub
iret
hlt
mov
mov
add
into
pop
adc
adc
add
dec
cmpl
inc
cmc
test
ja
imul
sbb
paddusb
mov
stos
jp
cmp
mov
pop
inc
fildll
mov
mov
jae
xor
popf
mov
mov
cmp
inc
pop
loope
mov
push
aam
ret
lods
mov
add
mov
xchg
or
rcl
cmp
pusha
shl
lret
rolb
frstor
repnz
xchg
sbb
inc
mov
in
mov
ja
mov
add
jbe
add
xor
push
inc
int
out
mov
test
imul
testb
sub
fisubs
add
jg
mov
pop
lds
mov
daa
sbb
sub
mov
popf
add
and
into
xchg
ficoml
cmp
mov
leave
int
jecxz
repz
mov
pushl
es
jns
loope
mov
gs
aad
out
lahf
imul
sti
subb
adc
scas
jmp
aas
add
data16
push
mov
jl
lods
nop
incl
adc
jb
push
and
ljmp
inc
mov
stos
xchg
mov
push
mov
jo
jmp
aas
stc
lock
hlt
push
xor
push
stos
out
adc
ret
rorl
inc
divb
inc
nop
rorb
xchg
cwtl
push
jecxz
stos
sbb
mov
testl
dec
cltd
mov
mov
add
mov
int
notb
mov
sbb
jmp
jae
push
sbb
arpl
add
lret
inc
xor
inc
inc
pop
test
jp
mov
jp
bnd
inc
fs
pop
sbb
jle
call
scas
mov
cmp
mov
mov
int
icebp
or
popl
cmp
mov
adc
fidivl
out
orl
jg
ljmp
xchg
or
xor
cmp
mov
stc
stos
push
sub
ret
lods
xor
in
cmpsl
out
and
push
xor
rolb
js
or
adc
clc
fs
scas
test
out
adc
sub
xor
popf
cmpsl
or
lahf
aad
xchg
jns
push
out
dec
and
out
popf
aad
jne
fmull
cmpsb
dec
out
jl
xchg
mov
push
mov
movsl
inc
push
cs
mov
mov
data16
ret
lret
mov
and
mov
pusha
mov
or
jno
cmp
cs
repnz
das
jle
xchg
dec
xchg
pop
xor
int
test
pop
cli
into
inc
cltd
adc
and
pushf
and
mov
outsb
pop
fcompl
cmp
lret
cmp
movsb
jb
enter
loop
inc
push
push
inc
imul
fucomp
ss
mov
loopne
mov
jg
jns
jne
xchg
sub
popa
cmp
in
pop
dec
mov
ret
sbb
jmp
adc
movsb
and
nop
mov
jae
shrl
fbstp
std
mov
or
and
rcll
shrl
and
xor
fcoms
jnp
pop
inc
lret
or
adc
mov
jb
sub
sbb
xlat
and
inc
dec
pop
push
stos
sub
lds
outsl
bound
mov
xorl
icebp
sbb
mov
inc
add
mov
sub
push
test
fisttps
push
sahf
mov
xlat
jo
adc
xlat
cmpl
inc
sub
idivb
sahf
arpl
mov
int
call
in
int3
andl
mov
lcall
lods
add
inc
dec
mov
xor
jecxz
out
dec
xlat
out
add
dec
pop
lods
loop
dec
xor
sti
xchg
int3
lock
and
rorb
repz
leave
jle
mov
dec
and
lods
mov
mov
jnp
inc
mov
icebp
scas
adcb
pop
mov
lods
or
in
push
shrl
add
pop
lea
into
insl
mov
pop
je
je
jne
ret
movsb
scas
mov
mov
test
push
loop
mov
ljmp
lahf
outsl
add
mov
jno
push
lods
fdivp
lea
xor
lods
and
cmp
out
insl
fsubl
inc
arpl
test
loop
aam
rcll
push
add
lret
in
jmp
ret
ds
push
bound
fldcw
outsl
insl
outsb
dec
sbb
in
mov
jb
fldl
pop
fistpl
mov
mov
add
inc
stos
xor
mov
insb
test
cmp
nop
xor
xor
imul
cmp
ljmp
pop
aad
or
movsb
gs
call
cli
cmp
dec
sbb
add
pop
adc
xchg
fs
ss
addl
jne
push
repz
adc
sub
jb
cmp
lds
mov
es
pop
pop
jnp
in
mov
sbb
mov
gs
mov
jle
lret
arpl
sti
jnp
sbb
loope
mov
dec
andb
out
sub
xlat
adc
popa
inc
push
rolb
aaa
jmp
push
and
sub
dec
mov
icebp
cmp
push
jnp
inc
sti
out
std
loopne
imul
popa
and
mov
movsl
and
sub
jne
movsb
mov
inc
ret
lods
loopne
in
mov
xor
aam
jge
popf
sbbl
add
mov
leave
insb
sbb
pop
jge
mov
mov
roll
fld
sarb
xchg
fs
xchg
jno
lret
add
ret
bnd
in
pop
aad
cmpsb
std
fdivrs
sbb
adc
stos
das
inc
mov
repnz
push
fidivs
ljmp
jecxz
popf
xchg
jnp
xorl
xchg
push
aas
popa
push
lret
mov
lret
repz
push
pushf
push
add
stos
fstpl
mov
cmp
adc
stos
stos
dec
cmp
or
mov
add
repnz
add
in
sbb
cmp
push
jle
iret
js
loope
fimuls
xor
fnsave
jg
xchg
mov
mov
dec
push
mov
add
dec
sbb
mov
jl
cmpsl
push
pop
fcoms
mov
lret
les
pop
push
js
xchg
sbb
popf
push
push
data16
mov
push
cmp
pop
push
add
adcb
and
test
je
test
das
loopne
xchg
sbb
ss
dec
add
dec
add
or
add
popf
dec
sarb
loop
popa
mov
test
popa
ret
xor
sbb
add
sub
jne
leave
lahf
mov
pop
popa
in
test
lea
mov
xlat
adc
add
mov
movsl
stc
dec
scas
mov
int3
add
out
cltd
int3
adc
sbb
insl
dec
jp
iret
in
xchg
pop
dec
and
push
out
mov
mov
dec
int3
push
fwait
jge
mov
imul
xorl
push
in
push
cltd
int
xor
xor
add
mov
pop
pop
jl
divb
mov
and
mov
push
sahf
popf
mov
pop
or
out
push
sbb
sbb
xchg
and
cmp
dec
leave
and
dec
sub
lock
mov
add
sbb
cmova
outsl
movsl
dec
dec
jmp
ret
inc
jmp
push
xchg
hlt
and
rcrb
add
and
outsb
inc
fiadds
jno
mov
pop
test
add
pop
jae
sbb
pop
inc
stos
movb
lds
mov
pop
adc
pop
sbb
fsubrl
mov
aaa
call
ljmp
fidivrs
and
sbb
shlb
call
test
jno
cmpb
popf
jecxz
mov
sub
nop
arpl
fwait
and
jmp
sti
aaa
push
dec
push
inc
inc
xchg
jne
out
push
jae
pop
outsb
in
cmp
mov
push
insl
xor
mov
mov
fwait
jl
into
sub
add
jmp
dec
xor
sbb
dec
inc
out
mov
and
xor
iret
pop
inc
cli
outsl
mov
jne
dec
mov
jg
jo
jnp
sbb
lock
fsubrl
mov
add
push
sbb
bound
sub
add
adc
adc
mov
jo
dec
movsb
jecxz
bound
and
adc
and
add
jo
jmp
mov
das
loope
mov
cmp
aas
aas
bound
cmp
scas
gs
mov
incb
mov
and
stc
test
sub
cmp
rorb
mov
mov
inc
cmp
xor
jbe
lret
dec
int3
push
aas
mov
sub
push
rcrl
mov
xchg
and
push
lcall
sub
fadds
sti
jno
outsl
xchg
cmp
xchg
aas
insl
clc
ret
movsl
xlat
jle
xchg
xor
jo
addr16
sub
and
jnp
pop
out
cmp
mov
dec
mov
mov
mov
adc
daa
cmpsb
es
les
mov
or
sbb
outsl
filds
movsb
dec
sbb
inc
mov
jmp
outsl
pop
lods
dec
int3
fcomps
dec
dec
fwait
icebp
shll
fstl
or
clc
fstps
icebp
popf
fwait
arpl
inc
repnz
or
fidivs
popf
sti
lcall
mov
push
jnp
imul
mov
gs
rorb
xchg
sub
pop
sub
addr16
mov
pop
sub
mov
dec
jge
rorl
nopl
sbb
push
dec
push
pop
out
sbb
lret
inc
mov
jge
adc
mov
mov
cmp
int
dec
add
and
pushl
pop
test
xor
inc
jge
mov
jg
dec
cmpb
sbb
testl
xchg
lock
mov
sub
test
mov
push
leave
daa
xchg
pop
lret
pop
repz
add
sub
sbb
dec
std
ljmp
lcall
mov
andb
mov
xlat
test
stc
xchg
rcrl
test
sbb
iret
daa
mov
mov
mov
cltd
ja
lret
scas
inc
outsl
subb
lcall
aam
pcmpeqb
xchg
roll
or
push
cltd
pop
cmp
sub
sbb
jae
cmp
pushf
cmp
js
aad
out
ret
cli
xor
xchg
or
pushf
push
enter
cmp
jmp
fimull
xchg
pop
lret
movsl
jle
mov
xor
mov
sub
shl
fimull
ret
pushf
mov
stos
negl
gs
dec
int
fmull
bound
xlat
mov
xor
incb
push
cmpsl
sbb
stc
sub
push
rcr
push
push
clc
aaa
mov
xchg
jae
fcompl
inc
mov
outsb
fistpl
stc
mov
ret
mov
add
dec
insb
cmpsl
daa
cwtl
aaa
adc
inc
mov
pop
xchg
pop
dec
mov
rcll
mov
fidivs
inc
outsl
lods
pop
sahf
mov
cmpsb
loop
xchg
sub
xchg
cld
neg
movl
sti
fisttps
jl
into
fisttpll
insb
ds
lods
sub
xchg
imul
je
mov
or
out
pop
ds
mov
xchg
std
xchg
fisubrl
or
js
xchg
mov
ljmp
push
out
cmp
xor
mov
roll
jno
mov
sbb
inc
push
adc
xchg
sahf
sub
mov
sbb
pop
sbb
mov
loop
fsts
test
mov
or
cmpsb
fsts
rcrl
and
jge
push
jg
push
imul
sbb
mov
mov
mov
test
jbe
pop
dec
mov
lods
bound
icebp
jo
popl
jge
jmp
mov
iret
xchg
pop
mov
dec
sub
insb
das
pushf
push
mov
xor
push
xchg
xor
ss
pop
aad
call
stos
mov
imul
jmp
push
fstps
lahf
mov
movsl
rcll
xor
sahf
shlb
xor
cmp
pop
negb
aam
xor
sahf
xchg
sbb
ds
add
mov
or
mov
xor
adc
push
jno
scas
push
pop
fwait
sub
into
mov
out
push
xor
jmp
jb
sbbl
mov
mov
gs
pop
pop
dec
mov
inc
ret
sub
jle
push
negl
jnp
mov
add
enter
out
fnstcw
out
mov
mov
aaa
js
std
into
xchg
loop
mov
sub
mov
mov
inc
mov
dec
push
xor
fwait
or
insb
xor
dec
clc
repnz
aas
xchg
mov
jo
out
mov
xchg
sbb
test
lock
xor
pushf
imul
jb
add
mov
js
mov
scas
sbb
push
pop
or
mov
cmpsl
xor
xchg
xchg
clc
les
xchg
sbb
dec
or
sti
sahf
lahf
xor
adc
pushf
xchg
pop
jl
dec
push
scas
pop
repnz
pop
and
fsubrs
pop
cmc
lret
or
fimull
lahf
pop
int
mov
fs
jne
inc
pushf
push
imull
add
jnp
sub
sbb
jae
xor
jecxz
cwtl
xchg
pop
nop
imul
sbb
inc
movhps
imul
sbb
repz
rcll
push
cld
sbb
or
rolb
psllq
imul
xchg
aas
pop
xor
out
or
and
fisubrl
scas
xchg
xchg
push
adc
cwtl
in
lods
ret
adc
mov
xchg
jl
push
addb
shll
or
insl
out
aam
out
es
fs
lods
dec
enter
adc
mov
or
imul
pop
fwait
je
int3
loopne
sub
inc
aaa
shrb
aas
pop
out
push
fimull
dec
dec
inc
push
xchg
or
sub
mov
jg
loopne
xchg
mov
outsb
into
xchg
shlb
and
mov
mov
test
or
daa
pop
icebp
jge
call
sarl
xor
aad
pushf
pop
int3
insb
outsl
pushf
es
stos
enter
subb
js
or
jg
xchg
fmuls
cmp
cmpsb
mov
clc
mov
and
scas
shlb
xchg
fimuls
cmc
or
das
in
ss
mov
sub
cmp
imul
pop
ljmp
fsubs
cmp
mov
xor
test
imul
cmpl
adc
lret
adc
mov
xchg
cmpsb
mov
js
mov
outsb
lahf
xor
jl
scas
negl
out
ret
into
pop
push
sub
movsb
sbb
push
xor
pop
sbb
fisttpl
pop
mov
add
lret
mov
add
sar
test
cmp
lcall
mov
pop
cltd
cld
aad
xchg
and
mov
xchg
sub
lock
cwtl
mov
jp
enter
or
adc
les
pop
or
jbe
xchg
cs
ret
sub
push
mov
mov
movsb
add
out
leave
sahf
push
mov
sbb
inc
push
in
mov
dec
pop
sbb
inc
xchg
mov
push
cmpsb
sub
out
mov
cmp
out
ja
cltd
or
mov
push
push
dec
sub
fisubrs
das
push
imul
dec
xchg
mov
pop
int3
jae
sbb
mov
cmc
mov
popf
imulb
movsb
in
push
fidivs
adc
ret
sbbl
cmc
outsl
or
cltd
add
cmp
pop
dec
adc
out
enter
jns,pn
xchg
adc
ret
shrb
movsl
ljmp
out
test
arpl
inc
mov
jge
movsl
inc
arpl
inc
cmp
fwait
mov
pop
push
enter
clc
idivb
fsts
inc
lods
aam
add
dec
mov
hlt
fldt
push
subb
jne,pn
jns
cmp
jae
cmp
loop
cmc
jne
mov
mov
xor
jge
cmc
sahf
rorb
xchg
jle
enterw
ror
cmp
jl
mov
rcrb
pop
mov
push
ljmp
stos
mov
shlb
inc
ret
aad
or
nop
xchg
mov
mov
mov
add
mov
shll
cmpsb
sub
jecxz
adc
lcall
sahf
sub
push
mov
push
in
push
dec
add
pop
das
sti
movsb
fisttpl
pop
xchg
js
test
push
in
call
dec
xchg
cs
jne
scas
inc
dec
jns
ss
xchg
and
jg
push
stc
add
and
pop
out
xor
shrb
adc
sbb
in
sbb
xchg
fiaddl
cli
mov
pop
loopne
mov
scas
jg
loopne
sbb
fwait
dec
sbb
lods
xchg
fadd
rcr
stos
mov
push
jmp
sbb
sbb
std
add
add
mov
mov
aam
repz
adc
fsubrl
leave
sbb
mov
iret
std
fnstcw
test
push
push
jg
loopne
test
ja
ret
insl
inc
add
ss
movsl
pop
repz
jb
push
adc
cmp
xchg
push
mov
xchg
pop
repz
lcall
mov
push
lcall
fimuls
cld
dec
add
into
call
push
mov
shlb
jae
icebp
sub
mov
cmp
or
mov
aaa
pop
or
loope
ficoml
push
enter
leave
jge
setge
mov
pop
sbb
pop
js
lcall
out
xchg
in
pop
inc
sti
jl
xchg
push
inc
lea
xor
movsl
testb
push
fisttps
std
inc
jl
movsb
repz
sbb
xor
shrl
sarb
xadd
jecxz
push
mulb
test
cmp
dec
roll
dec
in
push
loop
mov
xchg
inc
jo
iret
xlat
sub
dec
xor
or
aas
mov
xor
push
popf
subl
jge
fcomps
nop
in
xchg
sbb
popa
ficomps
cmp
or
in
and
cwtl
mov
insl
mov
push
int
sbb
jle
adc
loopne
sub
inc
jg
inc
ljmp
lods
add
pop
sbb
sub
ret
outsl
jbe
jl
push
aas
push
jo
push
xor
jne
mov
stos
pop
push
inc
lds
sbb
and
outsl
fidivl
shlb
lds
loope
dec
mull
ret
sbb
cmpsl
sbb
inc
outsb
pop
mov
sti
sbb
push
pop
lahf
in
fdivrl
sbb
cmp
adc
test
sbb
push
ds
lret
add
ss
clc
je
pusha
mov
fmuls
stos
daa
jmp
jl
mov
ret
or
pop
shlb
cmp
and
rcll
cld
pop
fdecstp
imul
mov
inc
push
leave
pop
mov
pusha
mov
lock
adc
jb
mov
scas
scas
sbb
jbe
pop
lods
sti
mov
mov
inc
push
or
mov
xchg
inc
push
out
call
xlat
scas
sub
fwait
lods
repz
and
push
cmpsl
xchg
mov
repnz
adc
push
dec
jge
scas
dec
dec
ret
xor
sub
add
mov
xlat
jmp
es
popl
push
pop
cmp
rcrb
adc
lahf
pop
jle
push
xor
jmp
push
js
imul
sbb
adc
jge
jnp
lods
sbb
mov
fisubrl
dec
jnp
mov
fldl2e
mov
fptan
call
sbb
mov
or
cwtl
add
fisubrl
inc
or
sub
pop
lret
bound
push
jbe
test
xor
push
xlat
mov
dec
jg
ja
inc
jo
inc
push
or
push
mov
lret
pusha
dec
lods
sub
mov
pop
repnz
out
movsl
out
cmp
movsb
sahf
or
mov
pop
xor
fstp
test
or
mul
orl
in
inc
fistpll
mov
ja
hlt
and
ds
sub
call
or
imul
mov
jge
lret
inc
fsts
lcall
mov
xor
addr16
or
cwtl
fsubrs
movsb
lock
into
fmull
pop
pop
and
mov
subb
ficoms
push
xor
push
adc
mov
and
pop
mov
stos
cmc
add
clc
test
sbb
xchg
daa
fstl
dec
inc
popf
inc
mov
sahf
adc
adc
insl
insl
das
fists
lea
daa
cld
dec
xor
into
fldl
xchg
out
ret
rcrb
ficomps
dec
push
jae
xor
or
int
lock
xor
mov
imull
lds
lea
and
movsb
pusha
out
sub
and
or
inc
jae
add
aaa
pop
stos
dec
lds
adc
sub
mov
fwait
std
outsl
push
test
call
enter
lret
cmc
and
xchg
dec
in
sub
idiv
scas
xchg
mov
xor
and
xor
daa
dec
pop
out
push
inc
sub
mov
or
fldenv
js
jb
push
inc
popl
and
inc
fdivrp
insb
inc
sbb
add
std
sub
lcall
dec
mov
or
jbe
xor
push
cmpsl
or
mov
je
ds
fs
std
sahf
daa
pop
scas
in
nop
mov
test
je
pop
or
sub
clc
out
sarl
pop
push
lcall
and
xchg
shr
cmpsb
rcrl
jns
dec
cmpl
mov
cs
filds
adc
or
shl
xor
aas
lock
add
mov
int3
sahf
jp
pop
mov
sarl
xor
mov
pop
ja
jecxz
rorl
fbstp
mov
loopne
js
mov
push
out
scas
and
int3
xchg
mov
add
ror
pusha
stc
inc
cmp
inc
cmp
mov
or
ret
arpl
fildl
js
loopne
neg
mov
xor
scas
or
dec
adc
mov
push
sub
dec
xor
adc
and
push
and
sbb
movsb
and
jae
sub
xor
lock
icebp
jbe
and
cmpsl
add
jnp
mov
jb
or
mov
dec
sub
pusha
inc
outsl
les
aaa
rcrb
sbb
js
jno
pop
aas
or
push
in
add
add
dec
fadd
les
loopne
push
cmp
rcrl
jecxz
xchg
iret
push
inc
push
cmp
lods
add
loopne
cmpsb
xlat
mov
imul
sahf
enter
inc
loop
stc
fsubs
nop
xchg
mov
in
movsb
mov
out
ffree
mov
push
push
clc
jno
push
hlt
movsb
mov
push
push
out
sahf
out
pop
fcmove
mov
imul
push
cmpsb
mov
push
fsub
sbb
fsubrp
sbb
xchg
adcl
js
inc
push
aas
mov
adc
mov
out
adc
cmp
add
mov
aas
xchg
mov
lock
std
mov
ret
adc
pop
push
adc
adc
in
rcll
cwtl
cmp
andb
sbb
aaa
push
addr16
out
loopne
or
int3
mov
adc
mov
fsubs
dec
sub
out
ljmp
jp
daa
xor
jae
xor
xlat
sahf
ds
movsb
pusha
and
sbb
jmp
and
xchg
nop
mov
cwtl
and
mov
das
add
mov
enter
outsl
in
and
or
and
fwait
test
cmp
in
mov
mov
and
jns
fucomip
push
ja
sub
jl
fcoml
jno
in
sub
andb
fsubs
adc
xlat
bound
push
or
dec
mov
cli
xorl
xlat
mov
push
sti
lods
dec
call
fists
fildll
in
xor
aad
pop
inc
pop
sahf
sub
les
dec
adc
dec
subb
cltd
xor
fwait
mov
int3
sti
adc
xchg
enter
dec
negl
stc
stos
push
test
mov
scas
jb
push
cmp
repz
push
cld
cs
and
out
shlb
sbb
adc
sbb
dec
pushf
jg
sar
addb
pop
xor
loopne
mov
pop
je
mov
stos
andb
and
and
ret
nop
xchg
lock
push
push
sub
jnp
fidivs
jmp
movb
pop
push
int
bound
jae
adc
ud2
outsl
jne
lret
lods
lea
pop
mov
mov
cmpsl
push
dec
pop
in
ja
mov
lret
fcoml
jle
jg
xor
loop
pop
insl
std
gs
aas
test
or
fists
add
sbb
sti
jle
mov
mov
jg
gs
sbb
adc
and
sub
roll
cmc
ret
iret
popf
cmp
fs
mov
push
push
dec
mov
js
sbb
stos
int
push
psubusw
mov
aam
mov
mov
loop
aas
jl
cmc
lods
inc
mov
imul
aas
add
and
cmpsb
or
dec
pushf
pushf
movaps
mov
add
insl
push
pop
xor
loope
jb
jns
sub
es
hlt
in
mov
dec
dec
xchg
hlt
pusha
xchg
sahf
in
add
xchg
bound
pop
out
mov
sub
cmc
fisttps
ja
dec
mov
mov
pop
push
adc
fmull
add
in
fsub
orl
pop
lock
in
ficomps
outsb
cld
push
mov
sbb
or
jae
mov
jns
test
pop
xchg
sti
sbb
ret
dec
fwait
mov
shrb
pushl
les
sub
mov
jge
repz
xchg
mov
mov
cld
loopne
mov
loope
sub
int3
xchg
loope
sbbl
cmc
push
cld
fidivrs
xor
and
dec
icebp
mov
call
aaa
pop
outsb
movsl
in
mov
add
rcl
test
fisttpll
in
push
insl
pop
aas
mov
xor
or
imul
push
mov
xchg
push
dec
lods
enter
stc
in
push
aam
fcomp
jbe
scas
and
sub
fcoms
jge
push
repnz
ss
add
sbb
into
xor
repz
pop
cld
adc
subl
popa
in
xor
mov
and
test
aaa
or
aaa
sbb
sbb
or
sbb
mov
add
shll
gs
stc
push
or
inc
or
sbb
in
stos
lcall
cld
inc
call
daa
pop
rorb
rorl
enter
mov
int
cmp
dec
jg
in
xor
fstpt
in
mov
pop
movsl
and
cmp
movsl
or
cmpsl
mov
cld
stos
xor
rorb
sub
jp
sub
arpl
jge
push
enter
jns
push
pop
stc
lret
push
jle
push
mov
xor
xchg
in
or
mov
mov
scas
lods
mov
push
test
push
inc
jne
rcll
xsaveopt
sbb
aam
jno
xor
jle
ss
inc
loop
inc
loope
mov
cld
mov
in
or
arpl
jb
adc
movsw
sbb
ret
push
stos
imul
xlat
pop
cwtl
and
sbb
adc
xor
mov
ficomps
mov
test
lds
scas
adc
fldenv
xlat
dec
xchg
push
xchg
cmp
xchg
ret
icebp
insb
adc
and
sar
cltd
lret
addr16
inc
jb
imul
aam
mov
outsl
pop
adc
insb
inc
fcomip
pop
fwait
cmp
int
sbb
dec
sbb
inc
or
inc
sub
mov
sub
mov
xchg
sbb
and
lret
adc
bound
dec
xchg
imul
sub
xchg
cmp
xor
adcl
popa
gs
insl
inc
jecxz
or
cmp
arpl
out
js
sbb
mov
adc
push
ljmp
push
mov
sbb
inc
cs
andl
adc
or
xchg
push
insb
loope
xlat
mov
push
xchg
sub
xchg
push
aam
mov
adc
sub
pusha
dec
sub
test
jmp
inc
sbb
mov
aas
lods
hlt
pop
cmp
add
or
push
das
push
cmp
xchg
leave
leave
inc
xor
adc
xchg
insl
cmp
sahf
and
movups
test
inc
mov
push
push
mov
jno
mov
inc
jge
bnd
pop
movsl
stc
dec
lods
mov
test
mov
aam
call
fcmovnbe
das
or
lret
stos
adc
in
sub
mov
aaa
scas
aad
mov
pop
and
jae
and
fnstsw
lret
sbb
out
outsb
and
jmp
cmp
cltd
out
mov
add
scas
dec
in
pop
rcl
mov
outsl
ja
push
xlat
das
cmp
pop
fisubrl
dec
jne
aas
inc
addr16
xor
mov
sbb
pop
adc
and
lods
inc
lea
hlt
sub
push
shr
out
cmc
cmp
mov
mov
xor
mov
pop
and
divl
call
and
pop
test
mov
mov
and
jle
mov
std
out
xchg
add
vminsd
imul
out
push
scas
ficompl
in
test
movsb
jge
dec
mov
test
xchg
pop
xchg
xor
outsb
mov
cld
jae
clc
jae
mov
in
cmp
push
rolb
test
xchg
adc
jge
movl
lods
fcmovbe
pop
xchg
dec
xlat
ficoml
fidivrl
movsl
pop
sbb
adc
repnz
xchg
xchg
pop
clc
in
scas
cmpsl
or
stc
dec
ds
mov
sbb
pusha
mov
addl
sbb
in
adc
dec
xor
bnd
into
dec
lahf
pushf
xchg
outsb
insb
push
nop
mov
subb
sbb
inc
clc
xchg
movsb
pop
jo,pn
or
dec
out
repz
ds
push
pop
add
jg
mov
cmp
mov
add
dec
xchg
and
das
stc
sbb
sub
scas
mov
nop
pmaxub
loop
in
je
inc
aas
push
cld
dec
push
stos
popf
and
push
addr16
adc
push
std
sub
inc
sub
mov
dec
mov
mov
stos
repz
subb
ljmp
jbe
lds
dec
lret
fnstenv
es
jnp
sub
adc
or
or
lret
jb
test
push
ror
mov
lods
xchg
daa
imull
cmpsb
outsl
cmp
das
dec
push
add
push
js
xlat
mov
dec
adc
jno
pusha
sti
lret
repz
inc
xchg
xor
or
jb
or
xor
jne
dec
xor
out
push
sti
push
cmpl
repnz
mov
inc
dec
jle
insl
cmp
xchg
scas
inc
and
cmp
in
sub
jns
and
adc
cltd
shlb
jmp
mov
test
daa
loope
lret
and
dec
push
addr16
loop
xor
mov
loope
and
adc
call
loop
ss
scas
in
and
loop
notl
push
into
cmp
xor
scas
dec
das
xor
jne
adc
xor
cmp
dec
ss
add
lret
add
jge
inc
mov
mov
mov
loopne
and
into
aad
jbe
xchg
loop
pop
leave
mov
aas
xchg
lock
fiadds
cltd
mov
jge
cmp
nop
xchg
in
inc
mov
rcr
mov
jno
and
mov
push
in
imull
paddw
xchg
push
mov
es
addr16
sub
std
les
adc
daa
int3
imul
add
int
and
aaa
pop
mov
xchg
xchg
sub
sbb
enter
in
sub
push
js
sub
icebp
add
push
adc
mov
jae
push
movsl
push
ja
pop
or
cmp
xchg
fidivrl
and
hlt
stos
movsl
xchg
and
decl
dec
enter
ret
ja,pn
jnp
push
mov
rcl
cmp
or
or
mov
jge
adc
ficompl
dec
in
push
fisubl
ss
and
jbe
sbb
jbe
and
mov
cmpsb
addl
cmc
sti
and
adc
inc
ja
xor
pusha
popa
data16
jg
jmp
lret
mov
mov
data16
xor
sbb
fists
outsb
mov
repnz
xchg
fcoml
ficoml
out
push
arpl
sti
sub
xor
in
ljmp
add
push
push
xlat
mov
sbb
testl
or
jbe
jbe
cltd
cmp
ret
in
aad
ljmp
cmp
mov
addr16
inc
dec
aam
aas
xchg
xchg
xchg
call
mov
sahf
jge
sbb
mov
sti
adc
add
lahf
jecxz
ret
cmpsb
push
fldt
cli
loop
into
cli
divb
pop
mov
jle
xchg
xchg
iret
mov
fdivrl
insl
pop
loopne
adc
sbb
dec
mov
mov
or
imul
mov
data16
shrb
test
sbb
loop
cmp
cmp
xor
icebp
xor
inc
xlat
lds
ss
popf
mov
sbb
mov
movsl
lds
fwait
addb
faddl
lods
add
sbb
xor
or
dec
lret
aaa
mov
dec
cmp
shl
ja
addr16
mov
leave
sbb
sub
repnz
mov
inc
mov
cmp
decl
jno
data16
add
ljmp
and
in
and
in
or
sub
int3
test
cli
mov
pusha
pop
shll
and
push
mov
cli
daa
bound
stos
mov
xchg
data16
jp
arpl
lahf
pop
sub
sub
out
lock
xor
pop
loopne
mov
sub
push
lret
negb
sub
es
loop
xchg
xorl
sbb
push
lds
mov
les
xchg
in
add
ds
testl
das
cld
xor
push
mov
xchg
jns
rcll
enter
pushf
pop
stos
jno
lret
sbb
cmp
xorl
stos
mov
jmp
dec
dec
dec
fldenv
in
xor
push
mov
inc
push
xchg
scas
cmp
dec
pop
push
addr16
add
aas
add
add
xchg
mov
pusha
imul
icebp
loope
mov
dec
add
sub
mov
dec
jl
pop
adc
sar
mov
xchg
pusha
in
or
or
pop
insl
cmp
insl
iret
cmp
mov
andl
into
fcompl
pop
setbe
add
fs
fiaddl
sbb
xor
loope
pop
add
mov
xor
dec
das
aas
jg
std
int3
and
dec
lret
jbe
lea
scas
cmp
aas
mov
into
rorb
dec
inc
movsb
lds
ja
pushf
push
stos
sbb
outsb
in
out
or
push
xchg
fcmovbe
movsl
sub
popa
pop
ss
mov
jo
popf
pop
mov
test
xchg
mov
xor
hlt
sub
cmc
sbb
stos
fs
dec
mov
jns
xor
sar
push
xchg
dec
jns
fmull
in
fstps
lret
fimuls
mov
shr
movsl
push
push
jle
fdiv
lds
in
es
adc
mov
hlt
add
xchg
aaa
hlt
push
mov
in
out
std
push
stc
aam
fisubs
push
pushf
xchg
sub
mov
aad
push
jl
aam
xor
ds
in
sbb
xorl
out
aam
mov
int3
jbe
and
xchg
mov
test
icebp
adc
inc
push
insl
iret
mov
addr16
dec
push
add
pop
ss
sahf
inc
mov
xor
or
inc
jge
iret
leave
mov
sbb
mov
adc
xchg
aad
mov
sarl
popf
movsb
and
dec
pop
stc
adc
pop
mov
dec
inc
fidivrs
mov
add
xor
pusha
je
cmp
cwtl
sub
mov
repz
adc
mov
and
xchg
fdivs
mov
or
imul
fistpll
data16
mov
sub
jb
xor
cmp
mov
clc
in
hlt
jge
repnz
fucompp
les
sar
iret
cmc
rcrl
fcmovb
fdivrs
repz
adc
nop
int3
ja
nop
stos
and
repnz
cs
in
cmp
mov
sar
arpl
add
pop
cmp
dec
sbbl
mov
push
xlat
sbb
and
add
jb
add
scas
in
and
xchg
leave
cmp
test
adc
dec
push
ljmp
out
scas
xor
inc
scas
pushf
into
insl
cmpsl
or
jae
ljmp
into
imul
sub
pop
add
imul
and
mov
jo
out
call
movsb
pusha
pcmpeqw
enter
arpl
cwtl
mov
mov
cmpsl
nop
test
or
ret
stos
xlat
int
inc
cmc
shl
mov
iret
cwtl
rcrb
xor
jnp
in
xor
ja
shlb
jl
push
push
push
shrd
or
imul
inc
test
or
arpl
cmc
push
cmp
xlat
xchg
cli
pop
xor
xchg
and
in
pop
pop
mov
xchg
into
add
jl
imul
push
rcrl
push
es
insb
inc
fs
das
cmp
js
out
mov
cld
rcl
cli
cmp
jne
test
out
rorb
mov
fadd
vrsqrtss
sub
subb
lahf
sub
mov
xchg
adc
pop
pop
testl
mov
dec
mov
sbb
mov
sbb
stc
int
sarl
cmp
es
xchg
sarb
jg,pn
cltd
sti
mov
clc
xlat
xor
or
sub
imul
or
dec
outsl
ret
sub
jmp
add
int3
mov
mov
in
mov
pusha
mov
les
mov
test
adc
arpl
sub
jge
rclb
das
push
jmp
push
cmp
dec
popf
adc
push
movsb
es
cli
sub
mov
das
inc
data16
dec
cmp
lds
sub
xchg
jo
mov
inc
or
push
jg
and
insb
pop
or
jo
push
inc
insb
adc
cltd
mov
fs
pusha
cmp
in
outsb
popa
loopne
inc
pop
pop
es
mov
mov
inc
stos
pop
push
leave
ljmp
and
jp
mov
movb
loop
repnz
pusha
inc
mov
jmp
and
sbb
lret
das
and
out
lods
iret
mov
out
jge
js
cmp
pusha
jbe
sub
adc
out
push
incl
sub
scas
jo
push
dec
jnp
and
jge
push
roll
push
test
mov
push
mov
mov
aam
cmp
sub
xchg
sbb
dec
outsl
ds
data16
xchg
sub
inc
cmp
cmpsb
push
xchg
lahf
lods
jle
out
push
sbb
push
push
stc
or
rcll
add
je
jle
push
rolb
pop
fwait
mov
dec
cli
in
jae
adc
out
iret
sbb
and
std
xor
js
sti
xchg
sub
fs
inc
sbb
out
nop
fwait
sahf
ss
add
cmc
mov
movsl
pop
lcall
leave
pop
pop
push
add
out
push
push
xchg
jecxz
aad
mov
js
jl
gs
and
dec
inc
jmp
lods
fs
cld
lret
rorl
lret
aaa
clc
inc
into
sbb
inc
jnp
enter
mov
loope
push
xor
ret
mov
lods
and
sub
stc
mov
lret
xor
rcrl
sbb
adc
push
and
xchg
and
jno
call
xchg
subl
andb
aam
sbb
add
jnp
pop
lea
loopne
or
sbb
mov
adc
outsl
xor
mov
push
and
popa
mov
das
jb
dec
mov
jmp
and
test
in
jbe
sbb
testl
push
ja
mov
stc
sbb
mov
jge
inc
cmpsl
shrb
adc
pusha
sub
test
xchg
sub
cmp
out
mov
xor
addr16
bnd
ret
adc
cmp
pop
cmp
fstl
bound
inc
inc
mov
aaa
mov
pop
sub
aas
jmp
lock
std
mov
or
insl
loope
mov
sbb
mov
mov
jge
das
pop
dec
mov
rcl
stos
clc
icebp
sub
enter
fistl
xchg
lods
pop
xchg
je
repnz
dec
nop
imul
jge
cmp
ret
pusha
lret
add
push
dec
sbb
out
xor
test
cmpsb
inc
xchg
mov
mov
sbb
jne
mov
lods
mov
aad
lods
xchg
sbbl
adc
rep
call
jb
lods
or
xor
jge
sub
inc
mov
jns
popa
mov
clc
dec
repnz
call
adcl
sub
xor
sbb
hlt
sbb
int
sub
js
cld
ljmp
jg
repnz
jae
cmp
jmp
sub
out
clc
test
pop
addr16
pop
jecxz
popf
inc
popf
mov
mov
lcall
scas
inc
not
hlt
adc
lods
lea
cltd
cwtl
cmp
loope
ja
fidivl
sub
js
jno
test
scas
mov
mov
mov
ss
test
cmpps
mov
xor
dec
jmp
xchg
jo
mov
js
int
in
push
push
fildll
inc
pop
lret
divl
sub
repz
xlat
push
adc
stos
push
idiv
imul
mov
inc
cmp
sub
add
xor
pop
das
push
adc
clc
icebp
stc
cld
mov
and
add
cmp
mov
dec
sub
lea
mov
scas
loopne
sbb
hlt
mov
pop
add
icebp
push
hlt
nop
pushf
dec
dec
rcrl
testb
fimull
int
sahf
mov
outsb
push
mov
sub
loope
adc
sahf
movsb
mov
fmull
ret
push
push
mov
pop
mov
scas
faddl
xchg
pop
sub
pop
mov
leave
inc
xchg
fisubrl
or
xchg
out
icebp
mov
push
sarl
aad
xor
lea
cld
mov
stos
daa
push
mov
cmp
lahf
out
pop
ss
mov
dec
ret
push
xor
or
pusha
sub
pop
inc
adc
dec
sarl
outsl
mov
xchg
lock
mov
ret
outsl
jge
cwtl
and
pop
pop
mov
adc
mov
mov
enter
sbb
jecxz
sarl
mov
push
mov
inc
mov
das
cli
lahf
mov
dec
inc
or
loop
fcmovu
and
imulb
adc
icebp
imulb
push
mov
dec
cld
mov
scas
rcrb
jmp
xchg
xchg
fwait
push
pop
xchg
jecxz
dec
mov
xchg
jae
scas
mov
pop
mov
in
loope
mov
js
push
sbb
fs
mov
xchg
and
nop
inc
xchg
jnp
jns
dec
insb
test
mov
mov
scas
push
in
fisttps
jle
mov
dec
icebp
js
sbb
sarl
xchg
popf
push
aas
dec
jmp
ja
jne
mov
notl
insl
dec
jno
cmc
sti
push
cmpl
mov
testl
xlat
fsubrp
xor
fwait
add
ficompl
stos
and
mov
add
ret
fs
dec
fcomp
arpl
jae
adc
push
jmp
xor
andb
mov
and
push
lods
enter
push
sub
shrl
mov
and
mov
adc
sub
inc
and
subb
xor
mov
adc
pop
pushf
fisubs
pop
pop
push
shll
xchg
sbb
xor
insl
and
xor
mov
loopne
imul
jl
inc
dec
ljmp
jle
lahf
and
dec
jg
gs
je
pop
data16
adc
push
cmpl
lcall
mov
push
add
jnp
xlat
push
fninit
rcrb
sbb
insb
and
dec
fwait
enter
scas
mov
xchg
dec
push
jno
iret
mov
mov
enter
roll
xor
xchg
jb
test
add
sub
mov
dec
nop
or
jne
cmc
cmp
mov
xor
add
movzwl
mov
add
pushf
sbb
jns
jmp
mov
lock
mov
adc
xor
inc
notb
add
loop
push
stos
fiadds
aad
rclb
mov
mov
aam
mov
pop
mov
xchg
mov
xchg
test
adc
loope
sub
jge
leave
sbb
loop
sbb
jmp
lds
mov
xchg
dec
inc
andb
or
bound
test
je
xlat
mov
dec
rorl
fldcw
sbb
sahf
out
or
fwait
out
je
into
decl
lret
aam
lods
xor
test
movsl
jmp
daa
into
aad
jmp
in
jnp
notl
pop
lock
nop
mov
mov
scas
test
mov
push
cli
subl
pop
or
shlb
inc
lea
je
mov
test
daa
cmp
ror
sub
in
cmp
int
add
stc
push
or
mov
repnz
dec
pushf
popa
jmp
fcomi
shll
push
add
xor
je
cld
shl
mov
dec
leave
pop
mov
xlat
leave
mov
add
adc
mov
call
pop
hlt
and
ret
out
lock
dec
jmp
enter
rclb
xor
mov
push
sbb
loope
mov
insb
adc
cli
or
and
and
or
mov
mov
adc
mov
in
cmpsl
cvttps2pi
mov
or
xchg
nop
in
movsb
xchg
push
fdivl
push
jmp
dec
cli
loop
aas
sahf
jne
out
and
in
add
sub
push
mov
and
cmp
mov
push
inc
pop
dec
xchg
sbb
and
out
dec
daa
add
shl
pop
adc
daa
mov
mov
cmp
lods
mov
sbb
jb
xchg
push
std
cltd
xor
lcall
xchg
aad
mov
daa
xchg
or
cld
dec
into
arpl
mov
pop
cld
jbe
cs
cmp
mov
ficoml
xchg
test
pop
fdivrs
test
aaa
add
insb
jbe
iret
mov
ret
aas
fisttpl
jg
cmp
mov
adc
inc
nop
es
xchg
mov
push
shll
push
mov
push
or
cwtd
fisubrl
mov
xchg
sahf
dec
nop
js
sub
enter
push
mov
jecxz
xor
aas
jae
imul
lea
inc
rcll
or
xchg
popf
aaa
or
fdivrl
push
sub
clc
cwtl
sub
push
inc
insl
pop
lret
jmp
pop
leave
das
add
out
adc
int
pop
lret
pop
push
pop
loopne
nop
xchg
xor
xor
dec
add
nop
jns
inc
cltd
mov
mov
cmp
cld
test
or
push
out
sahf
test
add
xchg
mov
scas
cmp
js
mov
pop
jns
sbb
add
sub
cmpsb
mov
xor
out
rclb
adc
call
or
jmp
mov
aas
call
imul
jl
add
outsl
dec
pop
mov
gs
ja
outsl
aad
cmp
push
loop
lret
notl
clc
jecxz
scas
jmp
inc
mov
dec
ficoml
xor
mov
mov
hlt
inc
xchg
fiaddl
outsl
mov
imul
loope
sbb
xchg
mov
dec
fwait
adc
mov
adc
test
pop
mov
xor
cmp
iret
jae
test
push
iret
push
xchg
add
jmp
test
loop
mov
jne
push
push
adc
jmp
and
and
mov
sub
fwait
out
iret
shl
clc
sbb
test
or
stc
or
push
movsl
sbb
push
lods
cmp
sub
cmp
fsubrl
jns
jg
xor
adcb
or
imull
mov
sbb
fucomip
pop
sub
mov
ja
push
andb
dec
fcmovne
arpl
xchg
out
addl
cmp
jmp
stc
sahf
out
mov
outsl
jge
iret
cmc
push
rol
outsb
roll
sbb
int3
ja
imul
cmp
adc
fwait
xchg
xor
cmpsl
push
gs
mov
mov
aad
pop
hlt
loop
jmp
xchg
fadds
xorb
ds
push
mov
inc
scas
xor
and
data16
lcall
fcom
sub
mov
xchg
and
adc
jl
cmp
push
movsb
or
mov
pop
aas
movsl
mov
ss
pop
mov
sahf
mov
ljmp
mov
fisubrs
pop
mov
xor
adcl
test
cmc
enter
je
clc
adc
or
inc
mov
mov
jge
sar
movsb
xchg
mull
in
arpl
int
imul
idivl
sbbb
in
lret
in
and
and
pushl
cld
testb
out
adc
outsb
aad
movsb
insb
cltd
rclb
mov
stos
adc
addr16
nop
pop
cs
xchg
arpl
adc
shl
pop
insl
add
pop
lret
enter
jmp
jl
xlat
jno
mov
clc
mov
lods
enter
fcmovu
imul
pop
push
mov
sarl
push
jge
push
sub
pushf
inc
xor
pop
daa
add
push
ret
sub
hlt
push
iret
lahf
cld
xchg
data16
add
xchg
test
pushf
test
inc
sbb
adc
lods
scas
xchg
push
cmp
mov
mov
jl
mov
adc
aas
sbb
jns
mov
jne
or
popf
shlb
mov
xchg
outsl
lret
data16
dec
mulb
or
lods
sub
inc
out
std
mov
sahf
pop
and
ds
arpl
stos
push
and
add
hlt
jp
mov
cmpsl
xchg
jl
push
sub
mov
ja
movsb
cmc
mov
sub
std
push
xchg
inc
lods
sub
push
xchg
movsl
das
jmp
inc
jmp
mov
ret
cmpsb
pop
dec
mov
adc
rcll
fmulp
insb
ficomps
jge
pop
repz
rcrl
or
push
shll
enter
and
in
mov
dec
es
or
sbb
sbbb
sub
ret
ljmp
cwtl
and
jbe
mov
jle
jl
sub
add
add
mov
icebp
pop
popa
and
jmp
push
daa
mov
push
push
shl
mov
sub
mov
pop
xchg
push
fwait
cmc
fadds
or
push
sbb
cmpsb
jns
or
jecxz
jmp
mov
fdivrs
bound
xor
sbb
loop
push
pop
das
aaa
daa
fdiv
xor
mov
push
push
aas
fisubrs
into
int3
adc
ret
dec
gs
movsb
repnz
outsl
jmp
sbb
clc
mov
pop
std
lods
jp
xchg
out
test
test
sub
push
mov
stos
push
test
and
mov
jp
in
popa
stos
add
jp
jno
push
roll
or
adc
pop
push
xchg
mov
aas
aaa
lea
mov
mov
scas
sub
xlat
xchg
xor
mov
neg
push
mov
sub
aas
mov
and
sub
xchg
lret
dec
test
jp
pop
xlat
sub
sbb
leave
mov
pop
mov
sbb
in
pop
add
xchg
stc
orb
testl
out
cs
push
movl
add
sub
test
loop
mov
ret
dec
mov
cwtl
dec
shll
int
out
subl
cmp
push
or
in
adc
in
cld
mov
pusha
or
icebp
incl
push
cmp
ss
adc
inc
xchg
sub
out
movsb
xchg
imul
jmp
in
cmpsb
addb
insl
div
mov
and
sbb
mov
sbb
je
adc
imul
andl
dec
or
test
sub
mov
fnstsw
lcall
ljmp
cld
push
stos
outsl
mov
sub
ljmp
in
and
cmp
jno
es
mov
movsb
cmp
inc
sbb
sub
fistl
dec
inc
cld
mov
rcl
push
jns
jo
adc
xchg
scas
cwtl
pusha
lock
add
test
sahf
int
push
movsb
rcrl
notl
cli
loopne
orb
xchg
adc
inc
and
cmp
jge
sbb
jb
xchg
sub
in
sbb
mov
add
gs
rol
jb
pop
jns
jbe
xchg
das
xchg
or
iret
arpl
in
jne
movsl
js
mov
shlb
mov
xlat
xor
movsb
mov
xor
adc
push
xchg
and
inc
adc
cmp
add
dec
pop
in
movsb
jecxz
push
int3
out
fcmovne
add
cli
add
cmp
xchg
push
loop
iret
in
mov
inc
in
pop
pop
or
or
xor
adc
xchg
std
xor
sub
mov
push
mov
jmp
and
cmp
nop
movsl
mov
jne
push
xlat
lds
mov
jmp
dec
sbb
add
xlat
add
sbb
xchg
mov
cmp
and
and
cmc
or
sub
pop
and
pop
xor
mov
hlt
subb
push
sub
adc
rcrl
in
divl
cs
cmp
bound
jne
mov
mov
sbb
ret
lds
mov
xchg
inc
imul
mov
cmp
orl
int3
clc
and
xor
xchg
pushf
shrb
lods
mov
mov
das
fisttps
jno
jns
jno
xor
ljmp
in
nop
repz
lret
or
adc
loop
jbe
mov
adc
sbb
and
lods
jge
jno
test
aad
and
outsl
xchg
mov
sbb
fs
out
scas
das
idiv
xlat
adc
xchg
dec
mov
jnp
out
or
pusha
loop
jmp
insb
push
mov
or
repz
ss
inc
jmp
mov
jecxz
cmp
cmp
data16
dec
repnz
adc
or
add
pop
mov
test
sub
jns
mov
repnz
inc
dec
cmpsl
push
addr16
mov
int3
stos
or
enter
inc
jbe
leave
mov
jno
add
imul
rcrl
mov
mov
into
jae
fmull
cmpsb
mov
and
sbb
mov
scas
cli
xor
popa
or
insl
jp
push
xor
add
push
insb
scas
push
in
add
addr16
pop
and
adc
mov
loope
cltd
inc
ret
lret
insl
push
xor
clc
push
cmp
mov
push
push
xor
sbb
xor
add
xchg
sub
clc
fdivrs
xchg
ja
dec
fisubs
fnstenv
push
mov
xchg
jecxz
test
xor
and
dec
cmp
mov
inc
push
data16
adc
mov
aas
lret
dec
mov
sbb
mov
sub
cmp
mov
int3
ret
icebp
add
and
popf
cmpsb
sbb
test
gs
mov
inc
add
leave
int
repz
orl
adc
xor
pop
sub
pop
pop
or
decl
mov
push
jno
mov
mov
adc
popa
test
aam
sub
xchg
les
mov
pop
pop
push
xchg
jmp
out
xchg
push
std
and
cmp
mov
das
enter
inc
aam
xor
mov
sbb
mov
pmullw
mov
xchg
inc
stc
cmp
adc
out
adc
adc
pushf
cmpsb
or
mov
cmpsb
inc
add
add
inc
xchg
mov
sbb
push
sbb
fildll
pop
xor
mov
xchg
sbb
mov
insl
pop
roll
into
orb
mov
dec
cmp
in
push
js
aad
pop
cmp
mov
lds
movsl
pop
mov
jbe
jns
inc
pop
mov
sub
fs
xor
mov
aas
pop
xor
scas
ror
aam
aad
jne
loopne
rorb
sbb
sub
dec
ret
xor
jbe
and
daa
add
pop
cli
ss
dec
adc
dec
ljmp
cld
push
ljmp
jae
rep
das
icebp
inc
shrb
call
jae
fwait
mov
aaa
xchg
mov
jo
push
inc
in
ret
mov
push
adc
jl
loopne
ds
sbbl
sarl
cmp
pusha
mov
jno
mov
movsl
sub
push
dec
mov
dec
lods
ljmp
add
nop
aam
test
es
fiaddl
push
sbb
out
jmp
and
xlat
pop
mov
rcrb
xchg
lret
mov
mul
dec
mov
fidivl
cltd
pop
insb
push
cmp
xchg
rorl
inc
fmull
out
add
repnz
mov
xor
dec
pand
xor
ja
or
inc
sbb
ljmp
push
push
cmpb
das
clc
sbb
xor
cmp
scas
jbe
cmpb
pop
and
push
aas
je
scas
or
mov
leave
les
rclb
and
loope
or
mov
cld
mov
call
add
and
js
aad
das
push
sbb
vprotb
js
jno
cmpsb
mov
loopne
push
sti
xor
dec
xchg
adc
cmpl
lcall
insl
push
cmp
pop
sub
lcall
mov
rol
sub
rcr
mov
dec
in
adc
cltd
pop
lock
in
jle
adc
xor
mov
mov
sbb
sub
pop
mov
sbb
insl
lods
mov
adcl
popf
adc
cld
xchg
inc
fldcw
inc
mov
jae
lea
and
aas
repnz
aas
dec
sub
loopne
or
inc
or
cld
push
xchg
mov
inc
xchg
cmpsl
cmp
ret
dec
sub
shll
in
sub
jns
and
outsb
xor
mov
add
add
bound
sbb
xchg
loopne
in
cmc
bound
out
dec
adc
push
and
inc
xor
pop
xchg
repz
rclb
or
push
xchg
push
in
rcr
jns
out
mov
push
push
icebp
mov
xor
sub
pop
ja
pop
jp
sub
out
mov
sbb
cmp
sbb
xor
mov
sub
xor
dec
cmp
shlb
in
add
xchg
jns
cmp
dec
xor
jmp
add
test
loope
lods
mov
mov
mov
hlt
cs
das
movsl
out
inc
leave
and
into
lds
test
xchg
add
xor
out
and
push
and
mov
clc
pushf
incl
shrl
sbb
mov
icebp
shr
inc
les
incb
test
repnz
imul
push
push
dec
and
pop
dec
aad
fldcw
popa
ret
ds
dec
rcrl
int
mov
movsb
cmp
sbb
test
iret
outsl
icebp
sbb
xor
or
pop
xchg
mov
or
push
cmp
popf
pop
in
cld
cs
jbe
imul
pop
push
nop
or
xor
xchg
adc
lret
data16
sub
push
pop
push
mov
xlat
xor
movsb
mov
push
repz
out
notl
mov
fstpl
rol
out
mov
mov
jbe
sbb
add
test
outsb
inc
addr16
das
xor
mov
inc
push
imul
sbb
data16
mov
jg
inc
test
loope
cltd
mov
dec
fstl
inc
pushf
lret
ljmp
mov
das
xlat
fs
sahf
sbb
pop
mov
stos
in
cmc
mov
aaa
jp
jmp
sub
sub
xchg
dec
cwtl
push
push
mov
xor
inc
sbb
or
inc
cmp
xlat
pushf
add
inc
pusha
test
bnd
cmpsl
or
xchg
push
shr
add
or
add
xor
cli
pop
jns
xchg
push
cmp
xor
jmp
cs
lcall
cmp
xor
cld
imul
cli
icebp
decl
jecxz
cmpsl
lds
mov
mov
xchg
aaa
push
mov
pop
addr16
shl
fstpt
mov
fnstenv
adc
cmp
sti
mov
adc
outsl
cmp
aaa
roll
js
lea
inc
xorl
cmp
icebp
add
aam
addr16
jb
push
mov
push
cmp
rcrb
fs
cmp
mov
in
push
pop
mov
test
cmp
pop
mov
jmp
ret
xchg
loop
aaa
es
hlt
push
dec
fwait
mov
mov
pop
ret
cmp
out
mov
les
gs
das
inc
add
mov
pop
jne
xor
lods
jo
js
je
adc
xchg
lahf
int3
cmpsl
stc
fisubrs
or
inc
sbb
pop
aaa
movsl
jne
nop
xchg
dec
hlt
sub
fdivrl
rcl
lahf
aas
and
cmp
inc
and
adc
push
into
mov
or
std
mov
or
xlat
stos
hlt
cmp
rcrl
sbb
and
cmp
add
in
testl
push
test
jg
stc
imul
inc
sbb
jbe
add
sbb
jns
xchg
cs
test
decl
pop
insl
jle
pop
mov
pop
mov
loope
clc
repnz
mov
mov
movl
push
cmp
push
je
mov
mov
les
pop
pop
inc
push
xor
jmp
pushf
push
lock
pop
xchg
call
sub
hlt
lret
jmp
cmp
pusha
repnz
enter
icebp
insb
sub
fiaddl
dec
or
jno
icebp
stc
addr16
mov
movsb
ljmp
mov
pushl
mov
fcmove
outsb
mov
outsb
es
and
cmc
sbb
adc
cmp
out
into
test
jmp
dec
pop
stc
cmc
aam
xor
xor
in
in
dec
add
sub
pop
clc
jno
jne
rorl
fldt
mov
mov
push
push
jb
jb
in
push
xchg
push
mov
aam
scas
aam
jecxz
in
adc
ret
jb
and
jp
cltd
imul
fidivs
call
sbb
sti
imul
inc
pop
loopne
jle
push
lock
push
sub
lcall
add
mov
push
ljmp
and
sbb
mov
xchg
cmpl
pop
stos
xor
cmc
scas
and
rcr
jp
cwtl
and
mov
shl
cmp
sbb
cmp
dec
fsts
cmp
leave
and
adc
inc
ljmp
in
dec
in
xchg
out
movsl
dec
mov
mov
mov
loope
mov
jl
lea
stos
fildll
mov
adc
jecxz
out
mov
mov
xchg
xor
hlt
jne
popa
pop
or
mov
sbb
arpl
dec
out
sub
push
push
mov
jns
and
pop
xor
dec
fdivrs
mov
and
or
xchg
xchg
iret
mov
adc
in
fyl2x
in
adc
insl
sbb
mov
mov
jmp
sub
cmc
ret
ljmp
add
cmp
xor
sub
in
hlt
jbe
lret
add
xchg
dec
mov
xchg
ret
xchg
out
xchg
dec
int
adc
inc
or
xlat
leave
and
add
sbb
icebp
repz
add
test
sbb
sahf
mov
lret
fdivrs
aaa
scas
adc
pop
loope
xlat
subb
repz
or
fstl
inc
pop
mov
lods
cmp
fmuls
shl
adc
pop
lods
dec
pop
and
lahf
pop
mov
cmp
pushf
fsubr
jnp
lods
push
hlt
xchg
inc
mov
xchg
sahf
fstp
xchg
lods
stos
adc
sbb
mov
inc
into
daa
add
cmc
sub
jo
flds
push
cld
sti
scas
mov
lret
mov
leave
test
loopne
mov
lea
pushf
dec
mov
and
in
daa
lahf
push
in
lods
add
lret
out
push
add
movsl
xor
lds
das
cmpsl
dec
dec
xor
rcr
jmp
xor
xor
mov
xchg
cmp
jl
mov
bound
mov
xlat
mov
ds
mov
enter
loope
push
or
adc
ror
jns,pt
dec
cld
int
loop
or
sbb
adc
fs
bound
dec
cltd
and
test
aad
sti
inc
sub
sub
mov
faddp
ljmp
jne
mov
fs
into
cwtl
das
outsl
push
adc
mov
les
daa
repnz
or
sub
and
loop
ja,pt
inc
push
fprem1
mov
movl
cli
mov
lods
push
xchg
mov
test
ss
icebp
jne
outsb
dec
pop
aad
cmpsb
and
add
sti
test
fnstenv
push
enter
jge
or
lods
push
pop
sbb
icebp
outsb
dec
cs
inc
inc
add
sub
xor
sahf
aaa
lret
lcall
xchg
push
and
sub
push
cmp
cmpsb
sbb
outsb
mov
mov
lret
mov
dec
ds
push
jns
push
addr16
dec
in
push
jg
sub
push
scas
test
loopne
lods
jg
in
push
add
scas
xor
sahf
inc
mov
pop
inc
push
ljmp
cmp
cltd
jge
stos
pop
stc
and
push
xlat
test
imul
and
mov
xchg
insl
or
add
fchs
stc
adc
mov
pop
inc
sub
sub
mov
mov
cmp
mov
mov
cwtl
add
mov
js
mov
or
mov
lret
test
jnp
into
pop
xchg
mov
mov
push
hlt
ja
xor
popa
sub
stc
rcr
xchg
jbe
or
aaa
icebp
inc
or
sti
inc
dec
shrl
push
mov
loope
pop
lock
push
sbb
into
pop
mov
or
jne
int3
cmpsl
out
jnp
xor
inc
sub
loop
mov
test
int
inc
das
stos
cmp
lahf
out
push
out
test
mov
gs
mov
cmp
ret
pop
sbb
cmc
xor
pop
cwtl
xchg
mov
movsb
mov
cmc
mov
sbb
jecxz
lods
jno
pop
lret
xorb
rcrl
mov
jbe
xor
and
int
fs
out
iret
roll
or
out
cltd
jne
adc
das
out
insl
xchg
insb
push
test
pop
pop
mov
mov
mov
cmp
in
pop
adc
pop
ret
loop
sub
push
fistpl
inc
mov
lcall
scas
sbb
sbb
inc
pop
movsl
adc
jne
dec
pop
shrb
rcl
cmp
mov
data16
lea
dec
js
push
addb
das
cmp
je
sbb
sub
push
popf
cmp
xor
int
loop
xchg
mov
gs
push
push
mov
lcall
jmp
xchg
dec
cwtl
rorb
fucom
sti
cmp
inc
test
push
inc
jl
cmpsl
inc
in
lahf
repz
jmp
mov
sbb
lret
pop
les
push
push
and
mov
hlt
or
xchg
stc
cltd
jb
loopne
hlt
roll
jo
inc
or
mov
mov
and
bound
sub
xor
jle
jmp
lea
repz
mov
mov
mov
in
inc
popa
es
fmuls
sub
xchg
add
lods
or
inc
add
ret
cmp
lods
scas
f2xm1
ss
push
push
ljmp
imul
lods
or
out
pop
rcrl
jmp
fwait
aam
or
aam
iret
and
or
xor
and
loop
mov
sbb
inc
mov
sbbb
and
dec
pop
mov
jbe
pushf
int3
xchg
inc
cld
push
jle
prefetch
pusha
out
ss
js
in
push
fwait
lret
add
fldt
testl
or
int3
inc
arpl
mov
adc
inc
in
imul
subb
mov
sbb
pop
mov
data16
mov
lock
leave
shrb
mov
ss
ja
jne
mov
jae
sarl
mov
and
shr
inc
and
mov
sbb
inc
hlt
or
xchg
into
fs
jmp
xchg
bound
sub
mov
fmuls
push
lahf
inc
rol
sarl
out
loope
test
fucom
movsl
push
push
inc
mov
in
outsl
nop
pop
pop
in
shr
ljmp
adc
adc
aam
inc
test
sub
adc
lret
insl
in
fsubr
xchg
fisubrl
shlb
add
lcall
mov
testl
mov
dec
inc
ja
popa
jb
mov
pop
lock
adc
pmuludq
sbbb
mov
push
aad
test
test
insb
mov
jbe
lahf
lcall
shlb
sub
imul
xchg
mov
in
ret
inc
push
frstor
and
or
dec
or
sub
cmp
jg
loope
pop
ja
jg
jne
and
xor
jno
dec
adc
inc
nop
and
xchg
js
jb
push
andl
mov
iret
sarb
inc
or
mov
mov
hlt
cld
jge
inc
inc
jecxz
ret
inc
push
dec
shll
xchg
dec
sahf
ret
scas
sub
xchg
int3
ret
stos
mov
int
test
dec
je
not
sti
push
mov
andb
push
jbe
lock
movsl
cld
mov
adc
loopne
rol
loop
stos
cwtl
or
push
pop
pop
rorl
xor
and
and
jno
cli
popf
shl
pusha
push
cmpsb
mov
cmp
lret
jmp
ss
pop
cli
mov
jno
xor
xchg
mov
cmc
rolb
lock
lds
and
cltd
aaa
sbb
inc
jmp
xor
xchg
inc
mov
add
jle
cmp
xchg
xchg
mov
cmp
sbb
negb
mov
jae
out
adc
mov
ljmp
sbb
dec
insb
push
jbe
mov
or
xchg
pop
ss
mov
loope
xchg
or
dec
or
inc
iret
pop
sub
ret
pop
pop
pop
ljmp
addr16
and
pop
pop
add
stos
cli
adc
gs
insb
push
sbb
mov
cmc
inc
pop
or
pop
dec
sub
ja
xor
push
sarl
lock
mov
int
inc
incl
leave
imul
test
add
cmp
pop
xchg
into
stos
stos
xchg
notb
lret
add
mov
leave
xor
xchg
push
xchg
ret
fdivs
repnz
push
inc
xchg
fcmovbe
call
jbe
push
repnz
fldcw
xor
insl
in
in
lret
imul
inc
sub
mov
scas
hlt
mov
mov
mov
inc
loope
dec
mov
push
xchg
push
mov
jb
sbb
dec
gs
cs
mov
shl
mov
or
ficoms
push
or
scas
fmul
and
lret
ja
dec
subl
call
imul
std
cmpl
add
sbb
out
xor
and
push
sub
inc
enter
iret
arpl
mov
mov
sbb
push
mov
ret
mov
and
inc
push
dec
nop
sbb
xchg
out
or
inc
rcl
scas
add
mov
inc
out
pop
pop
jbe
sbb
pop
les
and
fidivrs
enter
jno
out
push
hlt
std
test
sbbb
or
mov
cld
lods
addr16
fs
xchg
in
fwait
dec
fnstcw
test
xchg
jmp
test
loopne
lcall
in
pop
aaa
mov
outsl
in
repz
dec
hlt
jecxz
test
lret
xor
dec
ds
cwtl
jp
outsb
addr16
insl
leave
add
in
xchg
xor
idivb
hlt
in
mov
push
add
clc
pop
add
repz
imul
test
je
insl
xor
add
jb
mov
or
jge
jae
pop
movsl
scas
mov
mov
jge
dec
pop
shrl
push
sbbl
dec
mov
jge
dec
or
mov
popf
shrl
int
dec
jecxz
leave
adc
push
jae
push
and
test
rol
xlat
inc
sbb
mov
adc
mov
cmp
call
jns
je
mov
sub
adc
daa
or
dec
jge
into
shr
cltd
call
ja
sarb
std
jo
js
pusha
cmc
xorb
rcrb
adc
push
sub
jne
dec
out
adc
xor
cmpsl
test
fucomi
sub
daa
add
xchg
cli
cmc
xor
mov
mov
icebp
imulb
andb
negw
adc
cmpsl
push
and
inc
push
inc
inc
inc
shll
or
icebp
inc
mov
push
rcrl
mov
test
and
and
negl
xor
lret
sub
es
jp
add
in
pushf
cmc
xchg
test
rcrb
jns
mov
xor
js
adc
inc
sti
xchg
pop
aad
leave
imulb
mov
mov
jns
int
mov
sub
and
stc
rorb
sub
pushf
add
stos
fwait
addl
shll
mov
out
inc
bnd
sbb
add
cli
adc
adcl
jl
insb
inc
je
push
fisubl
inc
cmp
iret
jmp
pop
lds
xor
add
jmp
push
inc
pop
hlt
movsl
jle
or
ja
push
fcomps
sbb
lahf
cmp
add
push
cmp
mov
stos
test
sahf
lcall
rclb
cmp
mov
lcall
lods
add
pushf
pop
fstps
and
gs
clc
stc
scas
pop
cmpsl
jnp
outsl
jae
psubd
lock
jle
push
jecxz
in
arpl
ljmp
mov
int3
push
popa
fwait
mov
stc
addl
cmp
jbe
mov
ret
push
mov
xor
pusha
mov
div
jno
mov
xlat
fwait
loopne
sbb
pushf
shrb
fists
ficoms
jle
insb
mov
jge
and
shl
imul
or
and
cmpsl
insb
js
fwait
mov
sarb
dec
icebp
pop
fs
mulb
xchg
std
sub
in
push
xchg
jmp
and
aam
inc
movsb
adc
xchg
push
ret
out
das
sti
pop
push
inc
imul
dec
pop
mov
jbe
in
movsl
nop
addr16
out
push
ret
fs
sbb
mov
lods
rol
and
xchg
cmp
jl
sub
push
icebp
in
inc
mov
xor
jl
cmp
outsl
fistl
lret
lret
sub
mov
xchg
lds
jg
pop
dec
adc
sub
push
pop
xor
pop
push
sub
mov
xchg
xlat
jge
mov
mov
addr16
leave
mov
es
insb
jne
inc
inc
sbb
ret
pop
addb
dec
or
add
jge
arpl
lds
out
pop
into
stc
call
push
clc
mov
mov
lods
lods
sub
scas
cmp
das
mov
lea
clc
jmp
ljmp
addr16
icebp
stos
mov
push
mov
mov
loop
mov
fstpt
in
int
aad
fcmovnu
mov
mov
in
leave
adc
cmp
fwait
and
mov
test
or
addr16
aaa
and
or
aam
dec
scas
jl
idivl
ss
je
dec
jae
les
je
sub
jns
pop
cs
mov
pusha
insb
in
mov
cmp
push
jnp
in
dec
ret
jmp
lcall
bound
gs
adc
dec
xor
push
push
fidivrl
ret
shl
jbe
push
ret
popa
clc
jp
insl
xchg
pop
pop
nop
aam
adc
sbbb
cs
test
fsubrp
xchg
jb
nop
pushl
enter
jae
pop
push
sbb
data16
negb
mov
mov
jno
cmp
cmpsb
mov
dec
or
test
outsb
or
or
jbe
cmpsb
mov
stos
outsb
or
mov
xchg
dec
nop
call
dec
push
jp
fistpl
in
xchg
sbb
mov
cmp
xor
pop
inc
dec
jnp
push
jb
sub
ret
mov
push
pop
aaa
inc
push
xor
push
popf
dec
rclb
aaa
jbe
pop
jg
cmp
mov
mov
xchg
mov
fsubrp
dec
dec
inc
repnz
jmp
call
mov
and
cmpsl
inc
xor
cmc
jge
imul
testl
call
aam
mov
adc
ja
cmp
jp
dec
popf
jns
push
jmp
fcmovne
sub
xchg
test
or
in
lods
cmp
in
lea
push
pop
inc
pop
shlb
and
pop
mov
fwait
popf
mov
add
or
jle
movsb
lret
aas
mov
push
insb
sub
push
or
jo
ss
outsl
repnz
scas
pop
xchg
mov
mov
pop
jno
fistpll
dec
jae
or
dec
loop
in
scas
mov
jecxz
leave
iret
leave
adc
add
loop
mov
pusha
mov
mov
mov
pop
sub
sub
ror
pusha
pop
xor
or
popf
add
mov
test
call
inc
sbb
and
lds
or
push
cmp
add
xor
and
xor
out
out
ror
mov
ds
in
lret
add
es
sub
inc
push
mov
push
idivl
push
adc
in
rcrl
adc
dec
roll
testb
and
inc
or
mov
inc
cmp
mov
and
xchg
mov
jnp
test
gs
jmp
es
inc
icebp
inc
test
mov
pop
and
cmc
repz
mov
sub
xor
mov
mov
mov
cwtl
pushf
mov
sbb
jge
or
add
in
dec
jg
push
std
mov
fs
nop
add
cmpsl
shlb
shrb
jnp
pop
lds
pop
jo
pop
mov
ss
sti
arpl
mov
lods
out
mul
xchg
addr16
pop
or
inc
fwait
push
push
mov
dec
aaa
xchg
movsl
repnz
pop
cmp
fs
or
shlb
bound
mov
mov
cmp
ret
ficompl
lods
aas
andl
lcall
movsl
jne
mov
push
mov
mov
jle,pn
inc
sbb
xor
movsl
mov
xor
les
gs
jns
stos
cwtl
adc
and
push
fldcw
mov
scas
and
stos
push
bound
fldt
mov
in
roll
or
adc
mov
pop
inc
jl
xor
das
xchg
mov
in
mov
stc
xchg
lock
mov
test
insl
aad
movsb
pop
or
les
nop
idiv
inc
jp
shr
pop
push
and
rorb
mov
adc
fisttps
push
or
dec
aad
fisttpll
adcl
repz
enter
sahf
mov
pushf
xor
xchg
andl
or
sbbb
jo
jmp
and
jmp
int
roll
stc
mov
sti
mov
rorb
mov
inc
sbb
call
sub
xchg
mov
xchg
xor
in
inc
lock
imul
insl
popa
add
fucomp
mov
shrl
outsl
jmp
fsubrl
jns
aaa
push
add
lds
jp
add
adc
add
pop
sub
pop
inc
xchg
mov
out
into
pop
push
movsl
pop
dec
push
fldl
xor
mov
loop
cmp
pop
outsb
add
adc
mov
push
cmc
mov
jnp
push
lret
cmp
xor
adcl
and
xchg
fisubl
jae
out
mov
repz
call
int3
pop
nopl
pop
jg
into
xchg
inc
mov
cmpsb
jne
aad
sub
or
dec
mov
mov
jl
sbb
shrl
and
mov
cwtl
cmp
testl
add
adc
pop
mov
lret
pop
fldenv
fidivs
out
dec
jo
dec
fisubl
inc
sahf
mov
jb
es
rcl
cmp
pusha
insl
in
sbb
xchg
nop
xchg
fstpt
inc
and
jb
aad
fadd
xchg
aaa
fwait
push
idivl
jl
int
add
test
pop
cli
imul
mov
inc
inc
movsb
sub
imull
lret
jge
sub
mov
test
addr16
jns
mov
pop
mov
cmp
cs
ds
movsb
subb
mov
adc
jno
or
mov
adc
xor
lret
insl
xor
cmpsb
mov
pusha
mov
xor
pop
dec
lret
ficoms
inc
mul
add
aad
stos
out
jns
mov
sub
rsqrtps
jno
jmp
pop
scas
or
jns
sbb
insb
sub
pop
add
adc
fdivs
mov
and
std
lcall
and
pop
movsl
sbb
push
das
cmpsb
xor
push
in
fwait
jl
xchg
xchg
test
xchg
push
mov
fdivrs
pusha
ss
jnp
imul
fs
iret
movsb
je
stos
inc
ret
sub
idivb
adc
jns
jbe
pop
dec
loopne
mov
sbb
pusha
pop
fbld
mov
js
fincstp
fistl
push
mov
ljmp
sti
mov
xor
pop
fistl
cwtl
arpl
test
cld
or
xchg
fwait
inc
jge
sahf
add
rclb
and
mov
data16
mov
fisubl
mov
out
scas
sbbl
lods
es
add
sub
cmp
inc
xchg
mov
mov
xor
nop
mov
cmp
stc
mov
cwtl
test
jbe
dec
xchg
jp
fcoms
pop
cld
push
rolb
add
jns
sub
xor
adc
jle
pusha
inc
test
ss
mov
sbb
xchg
add
pusha
in
inc
jns
fcmovnb
jbe
xor
cmp
jp
inc
das
add
ljmp
xor
dec
fs
mov
jns
jae
mov
xor
and
pop
stos
add
in
shlb
icebp
mov
imul
test
dec
inc
les
and
xorb
pop
pushf
aad
outsb
mov
mov
mov
sub
or
int3
mov
push
xor
xchg
xorb
adc
jl
popf
jp
sbb
lret
loope
dec
loop
aam
fisttpl
dec
or
incb
jmp
pop
and
sti
push
dec
or
ds
mov
call
add
mov
inc
xor
fwait
jp
mov
mov
fs
pop
jle
sbb
lds
test
pop
add
add
and
stc
cli
inc
stos
gs
pop
movsl
mov
pop
jle
or
cmpsl
inc
xor
sbb
xchg
sbb
mov
mov
je
repz
xlat
mov
arpl
stc
shrb
les
call
ljmp
cmp
psrlq
push
clc
jo
xchg
push
and
xchg
and
pop
outsl
inc
xor
sbb
xchg
push
mov
pop
sbb
sahf
sbb
inc
clc
js
stos
fcmovne
add
cld
sti
mov
ss
movsl
mov
lods
loopne
ss
push
inc
pusha
add
paddusb
add
test
xor
sub
or
nop
clc
xchg
pop
sarb
jmp
cmp
mov
mov
cmp
clc
fs
enter
inc
mov
inc
pop
jecxz
lahf
es
fnstenv
aaa
rcrb
inc
sub
xchg
cmpsb
or
and
pop
push
jge
movsb
xor
push
and
xor
jle
mov
repz
or
iret
scas
sbb
cmp
dec
sub
aas
shr
or
cltd
inc
push
dec
stc
out
pop
xchg
push
pop
into
les
insl
jmp
imul
or
push
xor
movsb
addr16
dec
fwait
cli
xor
es
je
push
setg
push
push
fsubrl
cs
dec
mov
cltd
cmpsl
sbb
cmp
in
loop
fsubrs
mov
in
mov
in
lret
or
test
inc
mov
ret
sti
mov
insl
adcb
xor
and
mov
lods
jb
out
jg
and
or
rcl
das
imul
dec
mov
popf
sub
or
cld
mov
pop
test
shrb
jns
lcall
in
inc
mov
pop
mov
adc
adcb
cs
in
std
pop
jbe
pop
xlat
xor
push
imul
xchg
fmuls
or
sub
mov
lret
mov
jae
add
fadd
ficompl
out
and
iret
sub
mov
add
push
in
int3
sbbb
sbb
mov
sub
les
out
jle
inc
and
pop
sti
adc
dec
mov
andb
pop
jl
cltd
cmp
cmp
daa
cld
inc
sar
mov
xor
inc
mov
loope
add
sbb
pop
mov
jp
sbb
inc
lds
cmp
jnp
push
mov
push
push
scas
mov
sarb
nop
ret
into
xchg
cmpl
inc
add
fwait
out
push
scas
or
pop
scas
dec
mov
mov
push
jg
outsb
out
loop
adc
not
sahf
sub
mov
push
xlat
imul
cmp
cmp
mov
dec
mov
mov
xlat
xchg
loopne
add
sub
push
sarl
cwtl
out
jbe
cmp
and
sub
movsb
inc
adc
pop
outsb
xor
dec
filds
jb
mov
outsl
push
int3
cmp
jnp
mov
insb
scas
pop
adc
or
or
dec
flds
sub
loop
daa
pushf
arpl
cmpsl
repnz
sbb
fadd
push
outsb
xor
in
movsb
in
nop
daa
jmp
xor
das
lcall
les
dec
jp
adc
lcall
ret
data16
push
pop
mov
popa
stc
lods
leave
jmp
insl
mov
ret
cltd
dec
xchg
fisttpll
aam
jns
aas
test
pushf
sub
fidivrl
es
xchg
dec
mov
rolb
push
sbb
inc
orl
fbstp
add
test
sbb
rcll
pop
pop
lahf
pop
inc
in
pop
xchg
adc
sarb
jno
mov
ds
inc
pop
jl,pn
jmp
and
cmc
jg
ret
filds
dec
data16
dec
sahf
inc
mov
dec
dec
test
mov
push
lock
fwait
add
adc
sbb
xchg
inc
pop
sub
jo
pop
mov
lret
jp
add
xchg
ret
or
call
scas
cmpsl
ljmp
mov
in
mov
sub
test
and
adc
arpl
mov
sub
xchg
and
adc
mov
fimuls
sbb
hlt
jmp
pop
inc
pop
and
shl
cmp
xor
mov
cwtl
mov
es
mov
outsl
inc
xchg
cmp
xchg
push
lock
fwait
rorl
fmuls
mov
add
pushf
pop
dec
lea
mov
int
test
stos
fldlg2
imul
xchg
mov
fidivl
mov
mov
mov
enter
xchg
iret
dec
cmpsb
cmpsl
mov
sbb
ja
jae
hlt
dec
imul
and
adc
mov
jp
dec
mov
or
mov
add
adc
mov
lock
pop
and
sub
pop
arpl
dec
scas
inc
mov
sub
jbe
movsb
into
fcoml
fwait
testb
mov
cmpsl
sub
dec
mov
loope
js
mov
outsb
clc
mov
xor
lds
xchg
lret
mov
inc
add
mov
inc
adc
int
ret
dec
lods
iret
dec
inc
dec
jle
clc
addr16
push
pop
out
push
inc
dec
or
cmp
ljmp
and
sbb
xchg
popf
ret
dec
sbb
sbb
sbb
cmp
rcrl
movsb
push
sbb
ret
cmpsl
sub
adc
sti
stc
mov
test
jmp
pushf
mov
je
mov
push
and
xchg
fneni(8087
and
insl
pop
and
mov
sub
jmp
cs
ret
cmpsb
test
lea
gs
test
lahf
mov
je
mov
sub
mov
test
jp
test
movsb
mov
pop
inc
sub
and
pop
xchg
xor
cmp
ret
cmp
sbbb
out
or
in
mov
sbb
call
mov
xorb
test
add
test
ret
cmp
test
xchg
push
jno
pop
lea
cld
mov
arpl
mov
push
lods
mov
nop
fstpt
adc
inc
xchg
ret
adc
mov
pusha
inc
sbb
fdivrl
xchg
lea
xor
add
sahf
push
sbb
jmp
mul
js
xchg
aad
lods
cs
rorl
jo
cltd
rcrb
jmp
dec
outsl
xchg
sbb
pop
mov
jle
ficomps
mov
fsubrl
stc
xchg
daa
cmc
cmp
sbb
shrl
pusha
or
outsl
add
je
cmp
fldl
rcll
mov
movsb
shlb
cmc
or
inc
movsb
sahf
cmp
popf
sub
inc
shll
fisttpll
test
insb
stos
ss
xchg
sbb
pushf
adc
sub
jno
or
cmp
or
and
inc
xor
mov
sub
iret
std
jl
addr16
jbe
and
lea
pop
daa
inc
push
mov
pop
add
outsb
add
inc
push
pop
sbb
movsb
and
xor
lods
lahf
faddl
popf
dec
or
sbb
and
in
subl
push
fisubrl
push
jo
loop
adc
xor
xor
sbb
mov
lods
call
xchg
mov
cmp
aam
loope
jp
mov
xchg
out
rolb
inc
fldl
adcl
xchg
stc
ret
mov
mov
pop
lods
bound
dec
jno
xor
ret
add
mov
jge
lcall
sbb
or
lods
and
and
xchg
addl
aas
out
xor
imul
in
lock
unpcklps
je
out
push
xor
ss
sub
dec
mov
imul
add
nop
aad
insl
popa
stc
xchg
sub
sub
sbb
push
add
push
push
ljmp
enter
inc
xor
lea
stos
rolb
out
inc
ja
pop
popf
adc
sub
sub
lods
lahf
sub
mov
xchg
stc
adc
out
movsl
pop
fidivrs
subb
xor
xor
mov
aaa
movsb
push
cmp
jno
imul
and
out
fmull
add
and
in
cli
loope
mov
mov
sbb
mov
jmp
push
xchg
bndstx
cmp
sti
fcomip
nop
dec
mov
lds
fmull
add
clc
and
dec
mov
xchg
sub
mov
push
cmp
mov
lods
pop
adc
inc
pop
xor
ja
sbb
push
add
in
adc
rcrl
fwait
imul
loopne
cmp
cmp
dec
mov
or
in
inc
loopne
xor
lret
orl
pop
cli
mov
lret
int3
nop
sub
leave
sub
push
mov
insb
sbb
cmp
fcompl
pop
insl
addl
and
pop
xchg
push
push
aaa
adc
sbb
xorb
ret
xchg
jmp
inc
adc
mov
push
xchg
test
push
cltd
inc
lahf
rcll
outsl
int3
add
pop
add
ljmp
lcall
and
ret
repnz
inc
pusha
sti
push
and
call
ljmp
popa
cmp
addr16
ror
sub
mov
add
jle
lods
mov
scas
cli
jb
mov
cmpsb
in
xchg
adc
rcr
or
jae
dec
js
sub
lock
syscall
lahf
je
xchg
jmp
pusha
cmpsb
xor
xchg
sub
cltd
arpl
cmp
mov
cli
in
jno
mov
das
popa
xor
jne
mov
mov
xor
aaa
or
lret
insb
mov
jge
mov
imul
aas
and
inc
ret
sub
push
bswap
push
scas
sub
jp
pop
and
repz
icebp
in
lea
mov
adc
sbb
daa
add
lret
adc
jb
xor
mov
int3
jbe
sub
movd
mov
xor
or
pop
enter
sub
or
mov
sbb
mov
mov
scas
dec
lea
xchg
xchg
xchg
call
clc
lods
sbbl
push
adc
bound
or
js
mov
scas
push
sbb
or
push
addr16
sahf
cmp
mov
cmpsb
je
mov
xor
lea
push
or
cmp
jg
out
dec
repz
jno
xchg
in
jle
push
insb
mov
cmp
mov
leave
insl
sbb
jnp
mov
pop
call
pop
mov
sbb
adc
xlat
div
or
sti
fs
xchg
lret
pop
subl
push
in
pop
xor
cmp
icebp
hlt
pxor
cs
mov
sbb
mov
daa
int
push
iret
xor
jb
ret
jb
arpl
or
mov
ljmp
das
xchg
cmp
stos
inc
sbb
mov
mov
xor
dec
sub
mov
leave
leave
movsb
dec
movsb
cmp
cmp
mov
xor
cmpsb
pop
push
mov
mov
cld
repz
cmc
pop
mov
xor
mov
pop
movsb
xor
cmpsl
jno
pop
adc
mov
add
xchg
fiaddl
cwtl
or
adc
aad
cmpsb
mov
inc
decb
les
stos
push
sahf
lret
jp
data16
jo
inc
cmpsl
aas
inc
dec
loope
xor
fnstcw
xor
leave
push
mov
push
mov
push
jo
add
pop
jle
hlt
push
into
pop
and
imul
mov
mov
bound
insb
pop
pop
es
fidivrs
add
lret
shr
daa
test
repnz
jmp
sub
sbb
cmp
orb
loopne
inc
and
pop
lds
in
loopne
es
lock
adc
xor
cmp
ss
mov
mov
or
pusha
std
mov
add
clc
enter
icebp
movsl
out
jg
xor
jo
mov
xchg
frstor
push
add
sbb
mov
out
pop
push
lret
fidivrl
clc
jmp
inc
jne
nop
mov
test
dec
mov
lods
aas
jbe
jge
in
into
jmp
icebp
pusha
loopne
sub
clc
into
stos
jle
or
push
lahf
cmc
pop
jbe
shl
push
test
insl
mov
repnz
or
push
mov
cltd
sbb
jae
push
sbb
lret
sahf
lods
sub
mov
sub
pop
sbb
add
sub
jb
loopne
es
lret
arpl
xchg
aaa
pop
ds
inc
inc
aad
cmp
cltd
inc
insb
cmp
repz
or
cmc
mov
mov
icebp
sbb
jbe
jb
pop
jge
stos
pop
xchg
fidivrl
dec
push
xchg
cmpsl
hlt
imul
adc
fwait
mov
and
mov
jnp
cmp
mov
mov
mov
dec
std
inc
xor
out
iret
sbb
dec
ss
test
add
adc
inc
cmpsl
and
arpl
fldl
push
imul
sbb
jmp
dec
shl
mov
push
pop
fidivl
popa
popf
mov
fldt
adc
mov
and
push
cmpsb
xchg
inc
or
cmpsl
dec
push
outsl
mov
jnp
lods
aad
call
or
int3
mov
push
and
cmp
enter
arpl
out
and
imulb
or
cmp
dec
stc
sbb
das
out
test
mov
addps
cmp
jecxz
shrl
test
mov
cmpsl
mov
test
stos
sub
divl
adc
dec
push
adc
shll
sbb
xorl
ret
jb
scas
mov
shlb
sbbb
lret
cmpsl
mov
and
lret
adc
add
sbb
rcl
lods
imul
mov
inc
dec
push
movsl
test
cli
jne
aaa
dec
int3
add
mov
fdiv
pop
or
outsl
push
into
int
cmp
movsb
cmpsb
mov
mov
add
dec
and
push
scas
cmp
into
jge
nop
xchg
or
ret
xor
xor
inc
mov
sub
dec
mov
xchg
dec
and
xchg
test
into
xchg
arpl
cltd
mov
pop
push
mov
or
xlat
rcrb
mov
pop
mov
jo
lock
sbb
sbb
jle
push
push
pop
adc
out
pop
leave
ret
out
stc
repnz
addr16
es
cmp
sub
push
and
pop
ss
cltd
std
inc
stos
xor
push
dec
pusha
push
sub
fs
add
stos
xchg
push
lret
xor
in
and
push
into
lret
cmpsb
and
mov
lret
adc
pop
jp
mov
andl
ljmp
jno
cmc
add
call
push
clc
mov
dec
mov
out
outsb
js
popa
in
aam
xchg
cs
push
std
adc
xchg
arpl
pop
popa
ss
lods
loop
pop
imul
adcl
adc
cs
xchg
lock
push
or
sbb
jle
fdivs
out
iret
pop
or
and
out
addr16
jg
imul
mov
loope
leave
movsb
push
mov
jb
jnp
rolb
inc
fldl
add
jo
loopne
mov
cmp
sbb
mov
rcll
je
in
jae
test
sbbb
mov
mov
bound
ret
mov
mov
or
pop
pusha
in
into
adc
dec
daa
mov
in
push
mov
pop
pop
add
mov
imul
ret
subps
jg
adc
mov
imul
dec
cmp
movsl
xchg
cmp
int
dec
iret
cmp
mov
daa
mov
aas
and
test
xchg
xor
es
inc
jl
inc
sbb
jl
jns
mov
push
and
cmp
sub
push
ljmp
sub
flds
pmuludq
sarl
mov
insl
stc
xchg
mov
mov
sahf
mov
cs
or
lods
test
add
shll
sbb
test
cmp
dec
xchg
jno
or
out
inc
add
scas
sbb
jno
fstps
lret
out
insb
push
in
add
mov
ss
add
mov
jne
insb
inc
out
inc
gs
fwait
dec
pop
std
fsts
mov
loopne
sub
mov
movsl
jecxz
mov
mov
int3
and
inc
cld
sub
or
cmp
pop
mov
cmc
and
cmpsb
daa
inc
sub
inc
mov
xor
xlat
lret
or
iret
and
inc
ljmp
push
lods
and
int3
xchg
and
leave
out
clc
cmp
cmp
fdivl
das
and
pusha
cmp
not
dec
notl
cmpb
mov
add
leave
aaa
fwait
add
push
es
scas
mov
push
call
mov
pop
xor
lahf
cwtl
flds
xchg
pop
pop
push
pop
mov
pop
mov
ljmp
mov
dec
jb
cli
pop
data16
or
outsb
jecxz
adc
xchg
and
adc
dec
imul
add
paddw
add
cld
test
xlat
and
insl
mov
aam
and
imul
scas
cmpsb
xor
bound
mov
sbb
or
mov
inc
dec
mov
mov
fadds
jecxz
pop
add
sub
pop
in
sbb
add
or
jp
ss
cmp
popf
lods
jae
xor
push
rcll
shll
imulb
scas
pop
sar
into
mov
shlb
mov
idivl
adc
inc
lods
sbb
pop
xlat
and
xlat
jle
pop
cmp
or
xlat
dec
xchg
jle
repnz
lds
lret
leave
lahf
mov
scas
mov
aaa
add
mov
je
test
inc
sahf
fwait
jle
cli
adc
iret
xchg
cmpsb
cmp
sti
pop
mov
dec
pop
test
adc
fdiv
leave
cmpsl
in
fcoml
jle
sub
pop
or
popa
lods
sub
stos
lock
lods
dec
inc
fisttpll
add
lcall
and
xchg
scas
mov
rolb
out
fldcw
out
scas
out
cwtl
dec
sub
add
cltd
add
push
mov
xor
add
push
sub
inc
inc
cwtl
fildll
and
jp
xchg
loopne
aad
ret
and
lods
inc
jno
xor
push
outsb
mov
daa
lret
test
gs
adc
cli
pop
into
into
or
and
nop
cmpsb
or
push
mov
stos
std
leave
das
test
and
insl
fldcw
negl
jecxz
dec
push
adc
push
or
mov
or
xchg
pushf
cld
int3
shrl
fxch
pop
es
imul
call
inc
outsl
loopne
mov
ss
and
adcb
fwait
mov
and
and
test
mov
rcl
fistpl
lds
sbb
nop
shll
movsb
dec
jns
int3
into
in
ljmp
jp
pop
rcll
xchg
mov
std
jns
push
shll
mov
mov
xor
mov
pop
stos
dec
aad
je
push
imul
push
int3
lods
mov
xchg
jle
add
mov
icebp
and
insb
push
mov
jae
mov
rcll
xor
dec
aam
nop
mov
cld
and
sub
scas
or
int
in
pusha
arpl
cmp
or
repz
or
into
scas
int
dec
jne
sbb
pop
and
lea
inc
mov
push
mov
inc
lods
cmpsb
int
dec
mov
mov
cmc
sub
mov
in
out
mov
mov
mov
jp
repz
cmpsl
das
xlat
xchg
je
cmp
jne
bound
subl
cs
push
cmp
in
cmp
and
subl
sahf
data16
leave
loop
jle
mov
push
sub
imul
imul
sub
andb
test
cmp
dec
and
fwait
xorl
je
add
clc
cmpsl
stc
es
loope
dec
cmp
in
pusha
stc
ret
into
or
push
and
pop
scas
scas
add
lcall
dec
mov
mov
aad
scas
dec
inc
iret
daa
shl
hlt
lds
inc
mov
lock
inc
push
mov
pop
lds
pusha
movsl
loope
jmp
jecxz
ds
fs
add
mov
mov
jmp
cmpsl
inc
repz
lret
aam
das
push
lock
adc
adc
xor
adc
push
xor
in
in
ja
sub
cmp
pop
iret
lods
push
cmpl
pop
sub
cld
jb
adc
mov
rclb
ret
test
lahf
adc
xor
sarl
and
add
jo
cld
iret
ret
insl
out
int3
jb
js
scas
xchg
pusha
mov
repnz
inc
subb
rol
ljmp
xchg
add
mov
test
xchg
xlat
sbb
iret
clc
mov
push
xchg
ret
and
inc
stos
xchg
ret
sbb
cltd
mov
movsl
adc
xor
or
sub
mov
xchg
pushf
iret
xor
dec
jae
jg
pusha
adc
pop
push
sub
xchg
adc
and
aad
and
dec
outsl
das
insl
loopne
jge
pop
int3
fdivrs
out
xor
int3
push
cmp
add
lods
push
jae
push
clc
test
jecxz
xchg
pop
pop
test
xchg
sbb
or
cli
sub
xchg
pop
mov
xchg
push
cmc
xchg
xchg
nop
std
pop
imul
dec
imull
push
in
jno
adc
jecxz
sbb
shrl
mov
les
mov
fsub
xor
ljmp
adc
notl
lods
test
fldl
pop
mov
jnp
dec
add
in
or
sbb
or
jmp
or
lods
mov
cld
inc
mov
dec
cs
leave
push
fs
mov
mov
add
hlt
mulb
call
je
mov
cmpsl
imul
inc
push
test
dec
out
je
ja
addr16
push
cwtl
movsb
imull
mov
mov
das
xlat
pushf
out
sub
push
imul
lds
inc
xchg
aam
pop
stc
xchg
xor
xchg
in
push
orl
daa
fs
shl
mov
mov
psraw
int3
mov
sbb
iret
nop
cmc
in
sbb
jmp
jmp
daa
jo
movsl
orb
cmpsl
mov
jbe
out
xor
fstl
cs
inc
fdivl
scas
stos
iret
rcr
jbe
xchg
mov
js
dec
mov
stos
mov
jge
inc
fsts
inc
rolb
mov
or
lock
dec
shrl
and
stc
imul
dec
xchg
jns
cmp
mov
and
mov
gs
sbb
enter
mov
bound
nop
pop
or
pop
aas
push
jne
fildll
sbbb
fnstsw
inc
push
and
testl
push
adcl
iret
xchg
push
adc
shl
push
jno
sbb
ss
ja
xchg
mov
cmc
jl
repz
imul
mov
inc
dec
test
dec
das
int3
dec
dec
dec
xchg
inc
cmp
loopne
mov
dec
add
push
mov
jb
js
fwait
sbb
leave
push
push
mov
mov
repz
and
scas
xchg
mov
mov
push
ljmp
mov
jns
out
cwtl
test
adc
aam
in
jo
stc
icebp
iret
repnz
jns
jg
das
mov
mov
pop
jp
fs
push
fistl
jb
shll
aad
testl
loopne
push
jge
fsts
lret
xor
sbb
sbb
fs
shlb
rcrl
jg
fsubrl
mov
test
stos
iret
popf
or
sti
in
test
push
pop
mov
push
xchg
sub
in
out
xchg
push
mov
int3
push
mov
mov
es
dec
jmp
adc
pop
adc
push
pop
mov
jnp
add
out
push
adc
fsubl
sti
and
lock
pop
aad
out
cld
sub
sub
out
repz
mov
sub
sbb
add
popf
lret
ret
insb
cli
xor
jno
mov
pop
mov
cwtl
sub
rorl
mov
add
lahf
in
mov
mov
xor
mov
inc
pop
xor
out
sub
sub
mov
push
push
push
in
or
aaa
inc
pushf
loopne
jb
sbb
pop
xor
push
les
das
das
les
hlt
add
pop
fmuls
fisttps
mov
in
sbbl
dec
adc
shll
push
dec
mov
cmp
cmp
andl
repz
cmpsl
in
jnp
ja
mov
ds
sbb
pop
adc
jo
mov
mov
lcall
ror
push
je
and
int3
lea
sete
mov
add
or
not
push
xlat
out
sbb
lret
mov
and
push
stc
fsub
dec
test
fidivrl
pusha
sbb
adc
inc
and
nop
inc
sti
dec
jecxz
sbb
std
filds
mov
sub
fwait
pop
rorb
movsl
inc
rol
bound
dec
mov
in
fdivs
sbb
mov
jg
dec
mov
mov
adc
push
fldenv
mov
idivl
pushf
movsl
ficoml
aas
rorb
sub
cmp
push
shlb
mov
movsb
shll
add
sahf
stos
ret
and
xchg
dec
push
loopne
scas
adc
rcrb
out
push
cld
jo
or
mov
insb
ss
dec
push
add
test
dec
lret
out
and
mov
dec
inc
jae
dec
aad
xchg
ljmp
test
js
loope
cmp
push
les
aas
xchg
pop
stc
jno
mov
mov
repnz
mov
sbb
sahf
push
xor
mov
das
negl
jbe
xchg
or
mov
sahf
mov
or
pop
ret
inc
fisubs
lcall
jle,pn
sbb
xor
cmpsl
outsb
or
xchg
xor
xchg
pop
je
push
adc
ja
rclb
dec
xor
push
clc
ja
ret
sub
jne
and
pop
mov
hlt
dec
jns
scas
lahf
lods
sbb
pop
loopne
subb
mov
out
xchg
xchg
mov
out
xchg
and
jno
movsb
mov
jns
inc
fs
rolb
xchg
addl
xlat
push
dec
cmp
scas
mov
jae
ret
add
pushf
pop
fs
or
dec
scas
scas
pop
out
mov
pop
test
inc
inc
cmc
arpl
out
mov
cmp
sub
movsl
roll
bound
test
mov
inc
mov
dec
and
adc
jo
movsb
mov
cltd
rclb
add
mov
or
out
loop
xor
mov
and
cmp
lock
push
and
sub
enter
cmp
in
push
xor
outsl
add
inc
mov
inc
cmp
sbb
xchg
shr
mov
ret
fdivs
ret
pop
jns
fs
js
inc
jae
cli
loope
hlt
xor
aam
es
and
xchg
test
test
xchg
pop
xchg
ss
mov
jge
adc
dec
add
mov
test
sbb
mov
mov
dec
movl
inc
lahf
jmp
test
or
out
nop
mov
int3
cs
or
mov
sahf
and
jmp
jns
es
sbbb
push
and
jns
xchg
mov
pop
mov
xor
scas
pop
xchg
and
sbb
dec
fsubrl
popw
loope
or
sbb
cmpsb
in
push
xchg
push
pop
stc
rcr
fisubl
fimuls
popa
mov
outsb
pusha
xor
out
add
mov
popf
mov
out
imul
call
dec
aad
adc
mov
aaa
sbb
pop
xchg
outsb
popa
aas
xchg
jmp
pop
sbb
enter
mov
into
outsl
xchg
mov
jae
test
xor
mov
push
jp
pop
enter
lret
test
xchg
add
xchg
add
mov
dec
mov
rcll
jmp
test
movsb
je
ret
inc
and
pusha
leave
popa
repnz
rcrb
mov
aad
aam
lcall
movsb
mov
push
cmp
gs
adc
inc
dec
aad
and
add
into
add
dec
rolb
rorl
sti
pop
in
mov
sub
push
jnp
mov
jne
cwtl
vcomisd
sbb
sbb
je
ffree
push
rol
cli
shlb
outsl
mov
cmp
lods
insl
mov
adc
shrl
dec
mov
dec
and
mov
xor
jnp
sbbl
mov
xchg
push
mov
loope
pushf
mov
cmp
or
mov
mov
add
mov
test
mov
jg
cmp
cmp
sub
dec
sub
das
mov
pop
pop
adc
mov
add
mov
aaa
hlt
xor
es
stc
mov
pop
iret
jmp
ds
xchg
inc
add
pusha
int
stos
pop
sbb
cltd
mov
sub
insl
inc
ret
mov
out
aaa
push
mov
rcll
xchg
pop
sbb
mov
push
jg
fsubrs
push
aad
sub
push
call
adc
cmp
fldt
in
push
pushf
dec
and
daa
push
nop
pop
popf
inc
outsb
pusha
int3
aas
pushf
adc
and
jge
jo
fs
cmp
rorb
fstpt
push
xlat
cli
and
sbbb
stos
test
adc
xchg
cltd
add
das
scas
inc
jg
mov
ja
inc
xor
repnz
test
dec
cmp
movsl
int
loopne
xchg
mov
xchg
jne
or
ss
mov
mov
test
pushf
mov
mov
dec
idivb
das
bound
xchg
rcll
ret
xchg
adc
and
or
cmp
push
orb
adc
push
adc
shlb
lahf
sub
push
adc
in
xchg
and
sbb
pushf
pop
not
jo
push
in
mov
mov
jae
mov
adc
adc
outsl
or
pop
xor
push
fwait
push
lea
inc
pop
push
push
imull
pushf
movsl
inc
dec
add
xor
clc
call
clc
or
packuswb
dec
push
bswap
and
fdivl
sub
mov
ja
mov
aas
dec
sti
fadds
pop
daa
mov
test
loope
iret
in
add
mov
lds
lret
adc
cltd
scas
cmp
push
xchg
pusha
sbb
fstps
jno
add
dec
insl
fwait
dec
cli
xor
cmp
inc
cmp
vdivsd
cmp
xchg
push
aaa
mov
addr16
enter
push
mov
es
pushf
call
fistps
pop
fistpll
adc
jnp
push
mov
cmp
mov
cmpsb
addb
mov
int3
pop
icebp
ja
je
mov
mov
ret
cmp
cmp
insb
pusha
push
sbb
jmp
cmp
mov
mov
xor
push
adc
inc
fsubr
imul
ficoml
inc
mov
je
push
jle
es
push
jg
mov
lret
lcall
push
leave
test
add
arpl
daa
jnp
mov
test
fiaddl
push
fstps
push
rcrl
or
popa
inc
xchg
andl
inc
fnstcw
stc
pop
loopne
pop
and
jmp
mov
scas
jnp
add
out
test
nop
cmp
jo
adc
nop
pop
aam
dec
xchg
stos
pop
mov
cltd
pusha
pop
push
movsl
pop
sbb
das
les
popa
mov
pop
fcmovnu
xor
negb
dec
mov
daa
and
jbe
int3
dec
iret
mov
xor
xchg
xchg
in
xor
sub
pusha
sub
xor
jle
push
mov
fwait
mov
leave
les
test
inc
add
sbb
push
xchg
int
lret
scas
cmp
ret
or
add
add
push
dec
gs
or
sub
fstps
or
stos
cmp
std
iret
call
into
lahf
into
ss
sbb
leave
add
and
push
sub
testl
mov
insb
enter
dec
cltd
jno
lcall
inc
push
mov
sahf
scas
push
movsb
mov
leave
out
leave
ffreep
popa
shll
pop
rcrb
test
or
imul
hlt
mov
sub
into
mov
sbb
daa
aas
mov
int3
hlt
xor
dec
adc
andb
or
mov
dec
adc
out
aam
cmp
sti
out
dec
sbb
js
out
add
adc
push
adcl
test
inc
add
mov
mov
xchg
aaa
adc
mov
sub
jbe
and
je
xor
xor
jle
jl
out
cmpsl
outsl
xchg
push
xor
mov
mov
call
repz
pop
ficoml
mov
jns
push
rcrl
cmp
mov
shrl
stos
test
push
mov
and
pop
inc
mov
mov
mov
bound
push
cmpsl
call
add
cmpsl
dec
jecxz
jae
adc
mov
and
pop
scas
jae
jbe
xchg
cmp
sbb
stc
mov
test
insl
inc
push
loop
jmp
fdivl
adc
sbb
jle
push
aaa
sbb
xor
mov
sub
push
leave
mov
jp
insb
pop
gs
out
iret
push
or
mov
inc
adc
jge
bound
out
sahf
stos
sub
lret
iret
in
cmp
fwait
or
mov
jne
shlb
dec
stos
xor
fbstp
mov
aaa
dec
pop
sbb
and
pop
jae
lods
mov
jge
insb
rcll
popa
std
arpl
cmp
jl
lods
xchg
repz
test
mov
aas
mull
nop
xchg
pop
call
imul
mul
lcall
lods
jl
movsb
cltd
jle
cltd
mov
sbb
movsl
shl
inc
lea
sahf
ret
jecxz
imul
mov
inc
test
pop
mov
insl
movsb
push
je
in
sub
movsl
jg
mov
and
inc
push
xor
xchg
lcall
icebp
mov
mov
paddq
outsl
mov
cmpsl
test
cmp
cli
pop
sub
xchg
lods
mov
lods
mov
repz
int3
xchg
jbe
mov
bound
dec
scas
pop
clc
cltd
xchg
xchg
mov
xor
push
imul
mov
and
pop
jmp
out
arpl
ficompl
fwait
les
sbb
sub
js
xchg
nop
or
cmp
fwait
js
sar
hlt
sub
pop
cmp
daa
mull
push
std
fisttpll
dec
orl
fnstsw
repnz
adc
cwtl
pop
fld
repz
pop
pop
fldl
fs
push
fstl
adc
and
repnz
xor
movsl
movsb
adc
adc
pusha
sahf
jmp
out
movsl
lahf
int
adc
in
cmp
inc
xchg
iret
sbbl
loopne
test
push
fimuls
xchg
lock
cmpsl
loope
and
mov
int3
cwtl
push
sarb
andb
in
sub
faddl
inc
inc
inc
mov
repz
xchg
jge
mov
ds
mov
or
and
imull
lcall
repz
push
lods
popa
cmc
mov
pop
mov
sub
daa
lcall
push
push
imul
icebp
in
cmp
int
call
neg
sbb
lea
loopne
or
sub
mov
ds
jl
dec
mov
roll
addl
data16
add
pop
ret
inc
push
or
jns
inc
out
insl
addb
push
jns
fiadds
mov
mov
nop
cwtl
pushf
fisttps
leave
add
jno
sbb
clc
adc
push
xchg
in
pop
mov
je
sbb
sbb
adc
lds
lahf
stc
mov
leave
sbb
in
daa
xchg
int3
sbb
jne
mov
mov
loope,pt
subl
push
popf
sub
xlat
cmpsl
lods
loopne
shrb
gs
xchg
hlt
scas
and
cwtl
sub
xor
and
jecxz
clc
push
testl
sub
sbb
rcr
sub
cmpl
jmp
movsl
jmp
sub
enter
cmp
jnp
outsl
lret
sub
div
mov
jge
jnp
mov
mov
out
lods
shrl
cld
dec
cmp
ret
data16
and
loop
inc
jo
mov
pop
jp
shll
xchg
sbb
ficoml
mov
js
sbb
sbb
es
repnz
insb
adc
mov
xlat
dec
mov
jle
int3
les
or
bound
dec
aam
and
push
lds
pop
mov
loop
repz
or
jbe
shll
jl
nop
pop
stc
pop
xchg
fcomp
mov
data16
rcrl
movb
lock
push
std
sub
cs
fwait
or
aaa
mov
enter
mov
shl
mov
cmp
sti
scas
mov
xor
sub
pop
ret
mov
xchg
push
int
outsb
cli
loop
js
stos
sbb
xor
cmpsl
in
jge
push
fwait
add
test
jle
dec
test
push
nop
insl
shr
dec
daa
and
test
adc
enter
mov
or
jnp
or
lods
cmp
pop
lret
cmp
mov
mov
and
sti
shlb
arpl
ljmp
cmp
dec
pop
cld
cmpsb
mov
xchg
push
orb
fldcw
inc
pop
sti
and
lea
pop
and
cmc
add
cmpsb
or
inc
aad
insb
fidivs
negl
push
push
popf
cmp
into
mov
ret
jg
cli
pushf
dec
pop
lret
fldcw
xchg
lcall
mov
inc
mov
out
jle
mov
pusha
mov
mov
outsb
cmpsl
dec
xchg
pop
mov
pusha
test
xor
cs
inc
in
xor
enter
cltd
mov
jle
inc
pop
idivb
rcrb
out
ljmp
fstpt
insl
lock
out
lahf
lock
push
out
fwait
xchg
scas
enter
mov
xchg
js
pop
sbb
hlt
adc
mov
xor
test
jno
gs
xor
mov
gs
mov
ret
scas
fs
xchg
adc
aam
add
inc
call
test
je
cld
rorb
mov
xor
fadd
icebp
enter
sbb
loopne
or
pop
mov
xor
add
iret
push
sbb
xchg
lods
jno
push
or
jnp
add
movsb
dec
fwait
cmpb
cs
fdivrl
push
xchg
dec
jl
jge
ljmp
orl
inc
out
in
in
gs
cmp
jge
pop
notl
pop
jo
mov
pop
xchg
xlat
imul
add
outsl
pop
add
push
xchg
data16
and
sbb
pop
jne
mov
dec
xor
sbb
dec
push
cmp
in
ret
in
adc
jns
push
mov
iret
icebp
mov
in
jnp
insb
cld
pop
and
lock
movsb
pop
arpl
sahf
bound
ljmp
cmpsl
inc
std
imul
sub
pop
movsb
imul
ret
out
xchg
pop
test
ret
jnp
lock
push
add
out
mov
in
add
mov
js
mov
scas
jmp
int
jo
xor
push
ret
push
mov
xchg
mov
sarl
sbb
xchg
sub
inc
sub
mov
ds
test
mov
xor
andl
and
fcomps
xchg
xchg
sbb
xor
inc
inc
inc
in
jnp
cmp
pop
and
push
pop
aaa
int
jecxz
data16
pop
push
or
and
mov
sbb
adc
mov
push
push
push
js
inc
fwait
mov
out
jb
fwait
cmp
scas
repnz
pop
call
in
pop
add
push
or
jno
ret
fmull
add
mov
add
push
jle
cmp
push
loop
push
sbb
xchg
and
push
stos
inc
mov
xchg
sbb
cmp
sarb
inc
dec
ss
loop
lea
nop
jecxz
lds
scas
pusha
cmp
adc
jnp
test
popf
das
jb
xchg
mov
cmp
mov
mov
addr16
dec
fcomps
cmp
dec
sbb
fs
pushf
jno
cmp
xchg
dec
xchg
mov
pusha
gs
aas
xchg
into
or
outsl
jne
cwtl
jno
dec
dec
cwtl
mov
popa
fists
std
call
scas
lock
mov
out
iret
repnz
jne
stc
xor
adc
pop
js
rcrb
inc
lock
cltd
push
jge
out
or
shlb
cmpsl
out
jge
loop
xchg
les
pushf
push
movsl
xor
dec
cmp
adc
jmp
cmpsl
mov
jge
ja
mov
cmp
test
xor
mov
jnp
jae
jge
jmp
mov
mov
cmpsb
in
or
stos
sbb
jge
sbb
inc
xchg
rclb
and
adc
mov
popf
cs
in
fs
xchg
adc
lcall
pop
insl
fcmovnu
or
sub
add
fsubl
cltd
add
enter
gs
rorl
insb
loopne
push
cmp
lret
stc
mov
cmp
sbb
pop
inc
xchg
mov
mov
mov
push
fiaddl
add
aaa
dec
add
xor
jp
mov
hlt
out
fistpl
mov
ds
push
adc
sub
push
ret
or
adc
loop
jp
jl
cmp
dec
mov
stc
inc
cli
xor
and
push
cmp
popa
bound
xor
jnp
ret
dec
lcall
repnz
xchg
mov
mov
and
pop
call
aaa
sbb
xlat
mov
mov
inc
aam
or
sbb
dec
imul
inc
mov
fsubrl
sbb
jb,pn
inc
xorb
arpl
fwait
inc
shlb
push
fimuls
or
test
jbe
sbb
lods
mov
test
punpckhdq
ret
loop
xor
mov
movsl
addr16
fimull
mov
pop
lods
inc
sub
dec
fldl
adc
icebp
sub
nop
pop
cmp
dec
es
sbb
js
mov
iret
hlt
aad
pop
cmp
dec
push
in
popf
flds
stc
cmp
add
out
out
setb
jnp
bound
out
arpl
and
decb
ja
jecxz
cli
out
mov
mov
xlat
aad
pop
pop
fcompl
fisttpl
xchg
pop
and
es
push
mov
jmp
xor
cmp
daa
add
and
sti
add
outsb
xchg
incb
mov
push
add
push
popf
fadds
cmp
xor
jnp
sbb
mov
sbb
shrb
mov
add
mov
das
in
xlat
popf
sahf
push
cld
inc
repz
scas
andb
sub
sbb
xchg
ret
lods
push
ret
or
clc
icebp
jae
scas
out
mov
sti
adc
cmp
push
jp
cmpsb
mov
idivl
jg
lahf
int3
out
xor
hlt
shrb
sub
push
xlat
lahf
mov
cmp
daa
int
sbb
pop
jmp
cmpsl
inc
push
push
sbb
iret
sbb
xchg
test
xchg
insb
sar
fcmovnb
popa
jge
dec
jp
arpl
mov
mov
cmp
out
out
xchg
and
popa
test
pop
leave
mov
mov
add
test
hlt
push
popa
ret
xchg
add
jb
xor
enter
das
popf
movsb
stos
stc
jle
mov
insb
ficomps
fdivr
mov
jg
rorl
adc
and
inc
inc
jl
int3
dec
push
cmp
xchg
or
inc
mov
or
push
faddl
clc
push
xchg
jne
icebp
pop
inc
shl
les
out
out
push
cmpsl
shlb
fstps
or
xchg
push
and
cld
push
pop
or
cmpsb
jl
repz
scas
jg
out
adc
push
mulb
cmp
and
mov
pop
je
inc
push
test
stc
shll
rorb
incb
sbb
cli
jl
cmpsl
js
mov
pushw
dec
ret
js
push
inc
bnd
cwtl
fcmovbe
enter
je
xchg
aas
rorb
notl
test
jbe
mov
lock
loope
or
ja
inc
cld
lock
out
cltd
jle
test
imul
inc
sub
imul
in
mov
ja
jns
xor
xchg
mov
in
aad
xlat
out
xor
jb
repz
test
jae
shlb
dec
ss
insl
push
cmp
ljmp
push
dec
insb
roll
pop
adcb
adc
xchg
xchg
mov
adc
sub
mov
inc
pushf
cmpsb
shlb
inc
hlt
adc
adc
shll
inc
cld
mov
dec
xchg
jecxz
sub
addl
and
pop
xor
xor
shlb
xchg
icebp
arpl
or
pop
inc
pop
orl
push
push
insb
lea
lds
inc
jmp
ret
and
mov
int3
pop
flds
shl
jl
pop
and
pop
add
sahf
dec
mov
imul
jmp
test
inc
loop
sbb
jle
pop
push
sub
dec
movsb
stos
add
jns
jl
icebp
pop
nop
cmp
aad
in
fstl
cmp
push
cli
add
fs
sub
ja
pushf
ret
dec
xor
inc
popa
mov
xchg
mov
fcoml
std
sub
stc
popf
es
data16
pop
daa
add
xor
inc
xor
bound
out
ror
push
imul
push
movsb
mov
cltd
adc
push
insb
out
mov
ret
mov
push
imul
sarl
imul
push
leave
sti
insb
mov
mov
cs
push
cmp
xlat
out
push
sbb
xchg
mov
pushf
mov
movsb
jg
pushl
in
inc
mov
cmp
sarb
xlat
scas
mov
movhps
out
cli
cs
lret
fmuls
sub
cmp
pop
out
mov
fistpl
mov
and
cld
adc
cmc
dec
aad
push
enter
das
jmp
mov
dec
lret
js
hlt
lods
rcll
pop
jae
loope
add
out
pop
stos
add
jbe
fwait
xchg
mov
mov
into
jge
pushf
inc
mov
mov
xchg
add
mov
test
out
cmpsl
cwtl
int3
mov
push
lret
mov
fcomi
inc
or
leave
inc
jb
into
stos
ss
mov
xchg
pushf
in
cltd
sbb
rol
jp
scas
gs
fcoms
adc
inc
xchg
pop
jnp
test
and
mov
aam
fnstenv
in
mov
jl
repz
out
or
or
adc
mov
adc
out
movsb
sahf
and
aas
xor
mov
imul
or
int3
nop
out
mov
in
mov
add
test
es
les
fdivrl
in
jnp
fisubs
sbb
loope
ret
xchg
inc
in
scas
jns
lret
sarb
xchg
cmpsl
ja
rcll
and
testl
nop
jnp
shrb
sbb
dec
mov
sbb
pop
mov
nop
xchg
cltd
and
mov
add
mov
dec
fs
mov
mov
push
into
xchg
xor
pop
or
stos
iret
dec
mov
cmp
out
mov
loope
pop
jle
outsb
and
test
or
adc
mov
rolb
roll
js
div
out
mov
lods
push
mov
or
jbe
fucompp
cmp
push
enter
loopne
je
imul
mov
mov
xlat
imul
enter
ss
or
pop
jg
sub
push
sbb
sub
fldenv
mov
or
dec
cmp
xor
pop
mov
jecxz
cmp
stc
xchg
jb
loop
daa
and
inc
jmp
idivb
sbb
xor
cs
add
fimuls
or
xchg
lods
xor
or
mov
mov
pop
pusha
and
outsb
xlat
cmp
fistl
sbb
or
inc
xor
test
pop
mov
call
jnp
xchg
imul
std
call
sub
mov
jmp
popw
push
inc
lock
adc
adc
iret
loope
test
popf
pop
mov
cli
xlat
xchg
mov
dec
pusha
inc
xor
mov
ja
push
pcmpgtw
bound
mov
push
mov
pop
and
daa
or
enter
scas
mov
test
jmp
das
xorl
cld
rcll
sbb
shr
mov
fdivrs
popa
xchg
clc
push
or
pusha
icebp
xorb
pop
out
popf
rcl
fwait
into
sbb
jae
jg
and
jmp
jmp
lods
ja
sub
dec
push
sbb
enter
cmp
mov
cltd
rorl
arpl
or
push
xchg
adc
push
shr
es
movsl
out
mov
jecxz
mov
push
sbb
and
add
cmp
adcl
jns
mov
js
sub
cwtl
adc
sarb
mov
cld
sbb
push
sub
insl
xchg
shlb
adc
sub
insl
es
push
lcall
jg
jge
xor
sub
xchg
shll
int3
pop
out
push
cld
or
add
sbb
das
roll
lods
jne
inc
sarb
mov
in
push
imull
jbe
popa
adc
xchg
sub
lock
stc
xor
sub
add
in
lcall
dec
popf
inc
xchg
push
xor
lret
mov
jno
nop
gs
outsb
pop
clc
in
es
pop
xor
aaa
popa
mov
cmpsb
cmpsb
imul
xchg
lds
add
aad
add
push
les
adc
ret
jnp
adc
mov
sub
lcall
pop
call
pop
adc
les
mov
push
push
xchg
hlt
aas
arpl
xor
aas
push
rcrb
sub
xor
xchg
xor
lea
lret
je
inc
pop
add
rclb
and
mov
add
push
or
sub
mov
cltd
aam
add
xchg
mov
movb
mov
scas
ja
inc
out
iret
addr16
test
in
cmc
jnp
fsts
testb
icebp
push
jmp
xchg
sbb
leave
sub
dec
fdivp
aaa
cmp
outsb
dec
fmuls
jge
jle
inc
rcr
mov
in
mov
cmp
sub
push
out
xor
out
mov
cmp
dec
or
xchg
in
icebp
hlt
scas
adc
ficompl
push
sbb
mov
mov
cmpsb
push
inc
sbb
xorb
add
xor
or
xor
jecxz
mov
popa
scas
jns
cs
sub
rcll
sub
ja
testb
in
pushf
pop
xchg
inc
xchg
jno
dec
cld
sub
daa
cli
mov
int
dec
inc
rcl
fmull
mov
mov
shrb
push
ja
mov
test
mov
xor
mov
pop
pop
mov
add
daa
push
push
mov
sub
call
push
in
enter
or
adc
sbb
push
fimuls
adc
mov
scas
ret
dec
pop
adc
pop
push
xchg
mov
xor
and
ret
mov
inc
cmp
dec
xlat
lock
sbb
rclb
add
and
fcmovb
popa
pop
adc
fnstcw
xchg
add
sub
shrb
sub
out
stos
les
orb
adc
add
fsubs
jmp
pusha
cmpsb
jge
stc
mov
sarl
insl
in
test
addr16
jb
pusha
push
cs
dec
mov
pusha
popa
ljmp
addr16
cltd
fnstenv
pushf
push
in
xchg
js
movsl
pop
test
pop
adc
lret
push
std
mov
out
sbb
addb
in
loope
xchg
out
and
mov
das
xchg
lods
cmp
xchg
inc
sub
stc
jne
adc
lret
mov
push
xchg
test
test
or
pop
mov
or
xor
xor
add
cmp
mov
in
and
inc
xchg
insb
repz
jno
jae
inc
mov
addr16
lcall
fcoms
filds
repnz
test
dec
sti
in
shrl
mov
jg
int
shlb
sti
push
push
inc
sub
mov
jne
pop
rorb
add
loopne
push
sub
loopne
into
jb
mov
enter
jnp
push
cltd
fadds
icebp
cmpsl
and
xchg
lcall
adc
sbb
std
lods
in
mov
lret
sarb
cmp
icebp
dec
and
jo
fiadds
dec
lret
cltd
mov
rcrb
cmp
jp
dec
sub
rcrb
dec
es
sub
rep
sbb
mov
out
imul
dec
imul
adc
mov
inc
and
out
stos
or
je
pop
inc
hlt
xchg
inc
pop
int3
cmp
sbb
inc
ja
iret
faddp
mov
lods
mov
jne
ljmp
and
ret
or
test
pusha
not
xor
adc
push
ds
cld
or
arpl
shll
or
dec
shll
ss
imul
addl
in
sub
outsb
mov
daa
mov
negl
cli
hlt
mov
mov
pop
cld
push
and
ja
sahf
add
mov
rcrb
jecxz
je
cli
mov
repnz
adc
cs
push
cltd
std
je
push
movsl
dec
das
mov
pop
push
xor
daa
or
dec
fucom
and
rol
xor
clc
mov
scas
fidivs
lcall
fimuls
sub
fnstenv
sub
sub
cltd
dec
sti
push
mov
sub
dec
xchg
out
ljmp
rolb
dec
lret
in
lret
adc
jp
xchg
cld
or
jecxz
mov
cmp
xchg
pop
mov
ret
jb
mov
jbe
mov
cmp
push
inc
enter
and
lea
lods
dec
adc
mov
ret
dec
push
mov
cmpsl
adcb
in
cli
jp
cmc
inc
xor
mov
jae
jg
inc
xchg
and
add
push
mov
xchg
sahf
xchg
shlb
mov
dec
push
lahf
or
mov
mov
sti
incl
icebp
dec
pop
mov
mov
and
leave
inc
mov
clc
sarl
cmp
cmp
mov
inc
test
sbb
mov
adc
push
jb
push
jecxz
fnstenv
jno
cwtl
pop
das
sub
and
or
sub
outsb
in
icebp
xor
jo
or
add
iret
add
sub
inc
test
shlb
xchg
call
fdiv
psraw
jecxz
repz
sti
daa
in
adc
loopne
in
test
mov
test
ljmp
push
xor
push
xchg
test
les
jle
aam
in
mov
dec
mov
addr16
or
add
test
cmp
call
pop
mov
incl
enter
incb
stos
nop
or
mov
bound
insl
nop
rorb
adc
imul
notl
jns
add
fcoml
push
cmpsl
loop
fimuls
sub
pop
inc
sbb
pop
imul
cmp
notb
mov
adc
mov
adc
mov
push
pop
mov
xor
xchg
addb
scas
pop
leave
f2xm1
movsb
xor
in
adc
stc
loopne
mov
dec
inc
pop
pop
lods
push
xlat
push
lret
sbb
push
call
idivb
xor
js
push
out
mov
sub
in
cmp
add
outsb
mov
ds
jb
les
negb
add
or
insl
inc
mov
jle
sti
add
loope
lcall
mov
or
out
jle
ljmp
loope
jae
add
or
cwtl
inc
jp
lea
inc
int
in
jecxz
or
add
lret
jecxz
pop
call
scas
pop
mov
pop
test
in
jmp
mov
jp
jmp
mov
jmp
lret
inc
inc
sbb
movb
sub
xchg
jl
xchg
jne
sbb
fiaddl
cmpsb
das
sbb
add
mov
ss
call
adc
or
sbb
mov
or
lods
add
movsb
pop
addr16
js
pushf
add
mov
mov
xor
addr16
arpl
xchg
fildl
push
dec
cwtl
cmp
leave
movsl
mov
sbb
addr16
js
xchg
int3
pop
inc
jno
in
les
test
mov
push
or
xchg
ds
repz
js
ljmp
push
test
mov
mov
sub
dec
and
pavgw
push
mov
nop
mov
lret
test
int3
inc
mov
jno
add
push
push
out
jae
scas
lcall
xchg
mov
outsb
pop
scas
sar
int
loopne
push
in
xchg
mov
pop
aas
or
cmp
inc
sub
dec
xchg
pop
jle
pushf
inc
dec
stos
push
cli
xchg
repnz
test
lock
popa
jg
in
and
xor
xor
test
xchg
and
or
lcall
xchg
sarl
idivb
sbb
clc
ja
sub
inc
push
pop
testl
jnp
aam
test
cli
leave
mov
mov
mov
in
mov
mov
out
lret
jbe
js
push
scas
jns
sbb
add
aad
ror
sbb
pop
test
fadds
pusha
push
hlt
mov
push
stos
add
int3
stos
lea
cmpsl
pop
cltd
adc
ss
insb
daa
mov
gs
or
add
fnsave
arpl
test
mov
outsl
call
mov
or
mov
xchg
mov
aas
xlat
outsb
adc
mov
or
loope
inc
ficoml
push
push
stc
mov
fsubrs
rcl
jae
lods
xchg
or
pop
gs
popa
cli
dec
aaa
shlb
adc
cmp
inc
jmp
cmpsb
add
nop
out
shlb
cmpb
daa
not
dec
popa
mov
jns
fs
pop
mov
mov
decl
fimuls
add
add
test
ret
rcr
pop
push
push
xor
js
xchg
lahf
imul
test
mov
imul
and
adc
cmpb
pop
rorb
mov
mov
mov
jl
pop
mov
dec
pop
push
or
imul
lahf
mov
es
fisubl
sbb
enter
mov
pushf
mov
jae
bound
xchg
subb
cltd
dec
mov
fisttpl
xor
lret
xlat
push
or
inc
stos
repnz
repnz
xchg
stos
cmc
lods
fistl
mov
sub
mov
push
in
out
pop
pop
paddb
scas
subb
mov
adc
inc
xchg
xchg
and
xor
in
ss
sub
or
mov
inc
fists
aam
mov
mov
ret
imul
mov
sub
lds
inc
push
cmp
pop
aad
xchg
jg
in
psrad
lods
es
xchg
dec
pop
lods
cmc
jne
push
xorl
jg
pop
rcll
xor
in
icebp
push
lock
push
xor
in
add
xlat
mov
std
push
cmp
insl
aam
outsb
mov
xor
adc
and
lret
out
pop
out
adc
xchg
jns
inc
sub
jmp
cmp
repnz
lret
enter
aas
mov
fstps
js
push
push
bnd
sbb
mov
cmp
pop
sar
mov
loopne
xchg
loopne
inc
leave
test
cmc
rcll
lods
pop
fadds
jp
add
mov
xchg
add
pop
jo
push
fiaddl
or
pop
popf
push
cld
pop
outsb
fucomi
in
adc
pop
add
insl
push
mov
lea
outsl
push
mov
mov
push
sbb
imul
and
test
mov
mov
adc
in
mov
jmp
dec
test
inc
pop
fs
jno
pushf
mov
dec
fdivrp
test
dec
pushf
push
sub
loope
jle
xchg
fdivr
hlt
mov
stc
pop
or
sbb
mov
add
pop
sub
fmull
fidivrs
inc
cmp
and
xchg
fcoml
xor
repnz
adc
mov
outsl
sahf
mov
int3
ret
adc
je
in
std
cmp
adc
push
xor
sub
dec
out
push
out
xor
fisubrl
lcall
sub
repz
aas
xchg
pop
loopne
push
fadds
ss
imul
fisubrs
loopne
arpl
es
jb
sahf
out
xchg
xchg
mov
adc
sub
jns
icebp
mulb
mov
lea
mov
aad
jnp
push
lahf
in
sub
mov
cmpsl
outsl
pop
bound
jge
xor
dec
mov
adc
inc
ret
sbb
sbb
push
sub
pusha
dec
scas
jnp
sub
push
nop
inc
stos
push
mov
push
sub
push
lods
cmp
cmp
jl
arpl
sbb
xor
aas
cld
inc
mov
add
and
fmull
cmpsb
shlb
mov
sbb
jns
add
pop
mov
adc
add
popa
js
shrb
ljmp
adc
push
push
mov
xor
mov
daa
daa
add
loope
mov
imul
dec
enter
dec
sub
insb
fdiv
sub
inc
jl
sbb
inc
cs
cli
push
cltd
push
jb
fnstsw
cli
je
sbb
outsb
sub
repnz
fucomip
mov
movsb
lret
imul
mov
fs
aad
mov
repz
lods
out
xor
cli
sbb
mulb
rclb
popa
push
inc
xor
push
sub
std
movsl
cmp
jb
sbb
test
sub
adc
es
cmp
push
or
pop
call
ror
movsl
loope
call
fisubs
outsb
mov
adc
cltd
mov
push
jp
lret
repnz
adc
pop
push
outsb
lods
and
iret
sbb
cwtl
out
xchg
ret
adc
xor
scas
fldenv
aas
test
sbb
stos
xlat
call
or
jmp
push
lahf
jb
inc
adc
flds
leave
dec
fdivrl
jle
dec
in
cltd
inc
jmp
fwait
icebp
jno
xchg
mov
out
sahf
mov
scas
mov
add
adc
aad
dec
inc
in
lea
fcmovb
shlb
lahf
repz
push
xor
mov
loop
aam
into
pop
hlt
jns
fs
sahf
dec
jge
divb
shrb
mov
mov
add
sub
push
inc
push
call
push
int3
mul
adcb
push
mov
mov
ret
test
mov
mov
lods
xlat
mov
sbb
cmp
adc
mov
lods
dec
imul
pop
repnz
cmpsb
sahf
jecxz
flds
test
jae
lods
add
andb
lods
pop
mov
and
cmp
rcl
adc
or
jge
jo
xchg
addr16
inc
mov
lods
mov
test
cmp
lds
mov
push
popa
sub
pusha
xchg
test
aam
sub
jecxz
out
xor
ret
xor
dec
insl
test
push
ds
loope
inc
sbbb
ljmp
jecxz
fwait
test
sub
test
pop
fs
cmc
push
loopne
push
sbb
xchg
aad
push
nop
stos
pandn
pop
mov
cmc
out
std
jmp
xchg
xchg
push
or
lods
ljmp
cmp
or
jp
adc
and
lods
xchg
jo
sahf
xchg
icebp
andl
fwait
and
stos
and
add
aas
bound
push
sti
dec
outsl
cmpsl
popl
xor
loop
mov
cmp
enter
cmp
mov
aam
in
and
stos
frstor
mov
icebp
test
mov
inc
xor
rolb
loope
pop
xor
or
or
lods
cmpl
in
bound
jp
mov
sbb
xor
pop
cmpsb
inc
idivl
jge
mov
pop
cli
lahf
repnz
in
test
xchg
jp
outsb
xchg
out
daa
in
fisubs
subl
push
imul
add
dec
jb
cmp
aad
je
dec
jge
push
xor
mov
or
sub
and
jnp
data16
or
sub
aad
jecxz
cs
sub
pop
mov
arpl
insb
mov
sbb
daa
out
jne
cmp
jl
cwtl
mov
pop
jmp
jae
or
inc
es
loope
mov
pop
or
jns
nop
sbb
movsb
rorl
cmpb
push
fistl
mov
aad
in
clc
adc
popf
mov
in
mov
xchg
and
xlat
jb
mov
lods
sbb
lret
imulb
idivb
test
fprem
stos
add
push
insl
ljmp
adc
mov
scas
icebp
push
jno
sar
fs
es
clc
and
sub
or
inc
mov
inc
repz
jmp
fwait
push
mov
pop
mov
add
sbb
hlt
fiadds
jbe
andl
xor
shlb
mov
loop
stos
in
aad
mov
mov
xchg
movsl
loopne
inc
sub
adc
fsub
cmp
inc
push
xor
lock
mov
pushf
sbb
call
leave
jge
inc
test
mov
cmpsl
mov
cmp
pop
insb
pop
test
callw
and
xchg
sbb
aam
and
loopne
test
mov
sbb
mov
aaa
push
dec
xchg
mov
ljmp
cmpsb
push
dec
mov
or
fincstp
pop
mov
dec
pop
ljmp
into
lods
xor
pop
xor
out
push
xor
or
inc
arpl
and
popa
scas
push
jno
mov
xchg
dec
rdtsc
and
rcr
pmaxub
adc
int
aas
or
lock
mov
push
rorl
outsl
mov
test
pop
fdiv
ret
fisubrs
movsb
cli
aam
lea
lods
cltd
scas
push
shl
sub
mov
test
xlat
xlat
decl
push
cltd
andb
cwtl
sub
imul
mov
push
push
cmp
lods
xchg
xchg
lds
pop
or
jge
hlt
fsubs
cmp
push
stos
outsb
mov
xchg
dec
xchg
pop
jns
adc
decl
mov
fsubl
xor
std
and
out
ret
fiaddl
hlt
loop
or
push
pop
push
jo
xchg
ret
ret
jmp
xchg
pop
in
mov
fbld
push
jno
xchg
mov
leave
ja
mov
sahf
popa
loop
xchg
push
mov
int
negl
arpl
xor
mov
inc
dec
lahf
mov
mov
je
sbb
out
mov
sbb
pop
movsb
cmp
cmp
mov
push
cwtl
push
jg
inc
out
cmp
fcomps
xchg
scas
fidivrs
xchg
push
lods
scas
imul
out
ss
pop
or
rcrl
add
aaa
xchg
mov
xor
mov
or
movsb
jg
ds
dec
pusha
push
fwait
daa
mov
pop
add
mov
adc
pusha
loopne
movsb
mov
imul
or
lahf
divb
into
adc
les
add
fiadds
dec
loopne
or
out
jb
js
add
repz
pop
and
add
pushf
ja
addb
shlb
adc
dec
ret
mov
or
xor
in
mov
lret
movsb
cmp
mov
lahf
inc
mov
cmc
aam
addl
adc
jle
loope
add
cwtl
jbe
pop
and
cmpsb
dec
bound
mov
pop
fcomps
sub
and
ret
inc
stc
int
out
mov
mov
xchg
scas
mov
and
cmp
call
dec
arpl
inc
mov
popf
jg
aam
aaa
rolb
sbb
xor
xchg
fstl
into
pop
stos
cs
mov
test
mov
cmp
xor
xor
mov
notl
popa
dec
test
movsb
popf
sahf
hlt
xchg
sbb
cmpsb
clc
mov
lods
adc
jl
repnz
mov
jnp
bt
mov
cmp
push
mov
incl
imul
enter
sub
in
xchg
popa
xorl
jo
les
arpl
and
jnp
enter
sti
push
add
fcoms
dec
mov
push
fadd
test
les
dec
xor
in
shlb
dec
mov
xchg
lds
dec
push
cmp
addl
popaw
dec
lods
push
fnstcw
cmp
rol
jp
add
push
sub
addb
jp
cmp
mov
mov
arpl
pop
inc
xor
popa
xchg
mov
jl
ljmp
jae
outsl
hlt
adc
jecxz
jae
push
jmp
fcoms
jb
cmp
shll
daa
lahf
test
pop
imul
add
xor
adc
leave
arpl
jae
mov
movsl
fs
or
inc
jp
mov
pop
mov
sbb
sub
xchg
jno
scas
mov
aam
add
lahf
mov
cmpsl
aaa
sbb
rorl
dec
sarl
rcl
mov
inc
inc
nop
jae
push
lea
lods
sub
mov
adc
push
sub
sub
mov
jecxz
lea
or
bound
icebp
mov
xchg
jmp
sub
sti
fnsave
lods
cmp
mov
orl
jecxz
fistpl
lahf
cmp
in
pop
outsb
cmp
or
or
and
and
outsb
jmp
jbe
mov
mov
cmp
sub
insb
push
jne
imul
mov
loop
cld
mov
mov
dec
sbb
fcmovu
in
inc
mov
ljmp
ret
jge
sub
sbb
lods
jmp
mov
jge
cli
dec
adc
test
jmp
loopne
int3
xor
out
and
add
jl
sarb
lret
lea
lods
add
or
push
adc
scas
test
and
push
fimuls
flds
push
pushf
sbb
cmpsl
movsb
or
stc
jg
ljmp
jge
pop
inc
adc
popf
andl
movb
adc
jnp
mov
notl
mov
jg
gs
adc
push
es
sub
icebp
inc
insb
push
adc
cmc
inc
les
jg
xor
xchg
das
fidivrs
adc
lahf
sub
pusha
je
dec
into
adc
ljmp
les
jl
push
fnstsw
jnp
xor
add
fistps
sbb
fcoms
mov
lea
in
mov
clc
push
add
mov
inc
push
xchg
out
in
les
pop
das
add
test
mov
aaa
dec
jle
or
into
mov
addl
push
movsl
outsl
xlat
je
imul
inc
mov
push
jle
lods
fs
pop
sbb
jmp
stc
in
mov
and
pop
sbb
clc
in
dec
insl
rolb
xor
pop
imulb
orb
stos
outsl
lret
popa
dec
dec
testl
mov
push
add
xor
xlat
jle
fdivrl
ja
xchg
xchg
mov
addb
icebp
lock
jbe
popa
mov
dec
inc
xor
mov
test
loope
stos
int
fcmove
push
fistl
inc
idivb
mov
lock
aad
sbb
xor
jecxz
sbb
mov
push
push
shl
fstpl
or
insl
rorl
sub
sub
mov
into
jle
inc
xchg
adc
movsl
bound
xchg
xchg
pop
std
fiaddl
inc
mov
ss
popa
pop
xchg
xchg
movsb
push
xlat
leave
mov
xchg
lret
sub
into
xchg
sbb
adcb
jle
mov
faddp
scas
lods
mov
xchg
shll
repz
ret
xchg
push
mov
inc
push
out
adc
sahf
sahf
push
jg
mov
gs
dec
ja
or
push
pop
fbstp
pop
adc
mov
cmpsb
inc
das
and
js
push
or
bound
fs
mov
std
lahf
cmp
clc
cmc
sbb
adc
xchg
out
lahf
push
xchg
leave
into
xchg
out
pushf
fdivl
add
lahf
add
movsb
mov
xor
adc
adc
test
push
mov
push
dec
jmp
arpl
int3
sub
repnz
xchg
pop
and
fiadds
lcall
invd
rorl
and
sub
fldl
in
insb
mov
jb
ja
push
mov
mov
mov
fs
dec
jecxz
mov
bound
int3
and
xchg
dec
out
aaa
clc
xchg
dec
lahf
dec
fcompl
nop
xchg
pop
jb
add
movsb
mov
jg
inc
mov
jg
frndint
out
xlat
je
jg
inc
xchg
adc
adc
mov
iret
push
sbb
or
push
popf
ds
mov
dec
mov
cmpsb
cltd
addb
fisttpl
push
enter
fimuls
outsl
ds
stc
jbe
or
inc
pop
sbb
adc
sbb
mov
bound
dec
pop
mov
sbb
test
jmp
fidivrs
jge
loop
cltd
scas
scas
dec
push
pop
sbb
cwtl
adc
sbb
movsb
ja
sub
daa
xlat
icebp
pop
loopew
insl
ret
movsl
cwtl
or
push
and
pop
fwait
jle
xchg
shlb
testb
jecxz
imull
adc
or
cld
jnp
aam
imul
dec
jmp
inc
xchg
das
cli
cmpsb
push
data16
ret
inc
inc
add
sbb
js
xor
movsb
and
xlat
cld
ljmp
pop
xchg
inc
jle
inc
fs
es
inc
arpl
jbe
pusha
fidivl
jo
shll
add
jnp
push
sbb
or
pop
mov
and
or
push
les
bound
adc
rorb
xchg
pop
xor
mov
inc
inc
lods
mov
dec
fnstenv
mov
dec
push
clc
add
jl
popa
push
push
xor
insb
mov
push
cltd
sub
test
ret
scas
out
mov
cmp
ss
cmpl
inc
cmpsl
mov
mov
xchg
cli
sub
hlt
dec
push
mov
push
je
stos
cs
mov
xor
pop
mov
jns
jns
dec
xchg
and
push
dec
cmp
cld
outsl
add
ja
mov
cs
clc
push
sarl
push
xor
mov
xor
mov
clc
inc
or
cmp
adc
mov
xor
push
out
sbb
push
cmpsb
add
das
jne
and
or
ljmp
mov
and
cld
dec
xchg
adc
jg
test
jecxz
idivb
loope
dec
push
popf
sbbb
cli
in
and
inc
pop
in
enter
fisttps
fisubs
cmp
push
mov
jb
cmpsl
adc
or
adc
fsubrl
jb
cltd
lods
shrb
dec
lods
rolb
mov
pop
in
inc
gs
xor
and
mov
sub
fadds
mov
in
pop
push
mov
add
sbb
orl
pop
test
push
xchg
dec
xor
stos
adc
sbb
movsl
adc
fsubr
in
pop
imul
les
sti
mov
jle
repnz
scas
leave
sbb
imul
sub
add
add
inc
stos
lods
repnz
test
mov
fistpll
dec
cmp
xor
test
aad
aam
mov
pushf
imul
jg
cmc
jg
into
notb
je
repz
int
add
sbb
fwait
mov
mov
ljmp
mov
sbb
pop
sbb
movsl
sbb
lret
cli
aas
jae
xlat
les
clc
cmp
jmp
mov
adc
add
std
xorl
outsb
sub
nop
fistps
lret
fimuls
jne
xor
mov
mov
sub
idiv
mov
lret
push
data16
jge
mov
inc
cmp
cmp
add
es
sub
fwait
std
loopne
mov
in
fwait
mov
in
cs
outsl
xchg
adc
sub
fdiv
and
jae
bound
repnz
sub
inc
mov
inc
shrb
test
adc
fmull
in
add
and
mov
scas
mov
aaa
jbe
pop
mov
jae
movsl
aaa
push
adc
in
fs
xchg
cli
pop
clc
fldt
dec
lea
orl
mov
jae
leave
cmp
popf
cli
xor
adc
mov
inc
movsl
inc
mov
pop
adc
sahf
lcall
cmp
sti
sbb
push
adc
mov
jle
mov
and
adc
push
add
rcrb
jle
popf
cmp
mov
sbb
and
xor
addr16
push
not
push
mov
outsl
push
mov
addb
add
ja
jno
in
or
in
or
cmp
fs
dec
cmp
push
dec
out
inc
xor
mov
popf
cmp
dec
sbb
aad
inc
dec
mov
xchg
dec
out
mov
mov
fsts
fs
movsb
inc
nop
mov
imul
addr16
fwait
in
inc
mov
or
imul
shrb
cltd
inc
dec
cmp
push
cmp
xor
jl
mov
jecxz
adcb
les
insb
test
mov
cwtl
jnp
out
repz
add
mov
daa
or
xchg
loopne
idivl
not
inc
adc
int3
cli
sub
out
pop
jmp
ret
dec
sbb
ficoms
cli
sti
xor
pop
addr16
inc
dec
rorl
enter
add
adc
clc
sub
mov
push
mov
mov
insl
inc
leave
adc
pop
pop
jg
inc
sti
shlb
mov
jp
adc
sub
stos
sub
pop
clc
outsb
mov
into
jbe
int3
sti
jge
jecxz
mov
insl
test
inc
add
mov
cmp
push
out
imul
jb
jmp
call
stc
addr16
xor
sahf
leave
or
mov
cmp
nop
dec
repnz
inc
dec
push
stos
or
add
sub
add
mov
mov
lcall
sbb
dec
or
push
adc
or
or
inc
sub
ret
lcall
out
sti
jae
sbb
aaa
push
sbb
test
ss
xor
mov
xor
test
adc
rorb
scas
xchg
jne
jne
mov
int3
xchg
lock
aas
fisubrl
and
ja
lret
sbb
dec
push
cs
leave
js
insl
movsl
call
filds
mov
mov
xor
cltd
inc
push
inc
sub
outsb
daa
mov
rcr
or
cmp
pop
inc
or
lea
mov
or
mov
or
sub
jge
dec
dec
sub
sub
lods
jns
popa
repz
lret
out
pop
sbb
sub
enter
ds
jge
not
push
fst
pusha
data16
adc
daa
insl
mov
std
bound
jg,pt
sbb
pop
mov
popf
add
mov
pop
inc
jl
push
in
sti
inc
jo
mov
sub
cld
ljmp
rclb
mov
ret
ds
lcall
andl
lods
ret
jg
adc
xor
xchg
aas
or
mov
mov
mov
test
data16
sahf
mov
lods
pusha
add
push
cmpb
cld
xor
pop
xchg
lret
sub
dec
lock
push
xor
iret
adcb
test
call
sub
pop
adc
mov
mov
shrb
xchg
pushf
inc
loop
dec
inc
inc
jbe
or
mov
fidivl
add
jnp
or
pop
fldenv
test
nop
pop
xchg
adc
sbb
fbstp
xchg
xchg
into
add
jb
stc
sbb
sahf
es
mov
filds
bound
mov
adc
add
sbb
into
dec
arpl
imulb
push
in
ja
movsl
je
mov
fstps
jb
jne
cltd
and
sub
pop
movb
roll
jne
scas
inc
test
sub
sub
cmpl
loope
cmc
and
notb
mov
add
xchg
lcall
stos
mov
es
int3
sbb
xor
ljmp
xor
pop
and
outsl
jmp
sub
pusha
lods
inc
cmpsb
pushf
sub
into
adc
mov
mov
push
fsubrl
cmp
lds
add
xchg
test
mov
rclb
ret
lock
lahf
and
mov
les
mov
cmpl
in
push
add
cwtl
pushf
mov
sahf
jae
les
aas
add
sbb
test
add
adc
sar
mov
xchg
cmp
das
sbb
cmpsl
pop
bound
mov
in
adc
dec
push
mov
jmp
in
stos
or
xor
or
mov
fcmovnbe
xor
mov
mov
test
push
mov
scas
and
daa
and
enter
fwait
ds
mov
aaa
lods
cmp
dec
xor
sarb
cld
movups
add
pop
addr16
cmp
jmp
pop
mov
add
scas
cmpsl
lock
stos
cli
insl
test
insb
sbb
mov
ficoml
lds
orb
xchg
arpl
pop
and
cwtl
dec
jp
mov
jns
jnp
scas
sbb
xchg
pop
sbb
ret
pop
nop
je
and
cmpsb
jmp
sub
enter
mov
xchg
sbb
in
cmpsb
rcll
push
xchg
mov
xor
or
pop
cmp
imul
cltd
add
jle
mov
pop
pop
adc
adc
ret
insb
xchg
out
fsubrl
add
xor
lods
xchg
mov
div
fldl
insb
xor
leave
aas
jb
aad
std
pop
shl
or
lods
sbbl
jno
bound
arpl
lock
das
dec
push
fs
cmpsl
xchg
fidivrl
sahf
jne
sbb
ror
pop
test
arpl
adc
xor
fwait
into
gs
cmp
test
in
popa
xchg
mov
movsb
imul
pop
mov
sub
dec
mov
pop
jg
mov
adc
aad
aas
pop
test
cli
shll
ja
test
cmp
add
mov
das
inc
insl
jbe
in
inc
ret
push
mov
mov
inc
sbb
xchg
fcom
into
stos
fimuls
sub
insb
mov
cmp
pop
iret
mov
outsb
out
popa
ret
dec
test
mov
pop
add
xchg
adc
mov
call
mov
stc
subb
in
xor
xor
and
test
insb
dec
je
test
adc
cwtl
sbb
rcll
xchg
xchg
sub
ja
clc
dec
fs
sbb
pop
arpl
sbb
fildll
jl
pop
stc
enter
pop
clc
xchg
mov
dec
xor
or
push
scas
lods
cmp
insl
loopne
pop
scas
repnz
ja
out
add
lret
mov
xchg
add
mov
mov
xor
cltd
popa
mov
popf
jbe
adc
pusha
and
jge
jb
loop
mov
jnp
pop
ds
push
data16
dec
mov
iret
int3
out
mov
jo
dec
popf
or
leave
sbb
add
mov
cltd
dec
cmp
cmc
push
arpl
aam
xor
and
mov
lods
mov
std
arpl
stc
mov
notl
imull
dec
movsl
out
js
fsubrs
cmc
inc
lret
dec
cmp
addr16
sub
cmp
push
jae
pop
hlt
xor
push
xor
cld
cld
mov
or
xorb
xchg
xchg
inc
push
dec
fnstsw
and
xchg
pop
clc
xor
movlps
rorb
sti
adc
inc
add
dec
inc
dec
fadds
std
push
hlt
int
dec
push
jnp
or
jnp
add
movsl
sbb
out
xor
xor
daa
push
lods
jae
insl
orb
xchg
cwtl
or
fdiv
sbb
out
pop
or
fisttpl
jo
roll
push
sbb
push
es
loop
mov
repnz
mov
int3
mov
ljmp
cmp
es
inc
loop
and
nop
sbb
sbbl
dec
pop
stos
mov
stos
fwait
int
ljmp
push
push
call
roll
add
scas
pop
scas
pop
out
cmpsb
lods
add
aas
inc
aas
ficompl
push
fneni(8087
pop
sahf
jns
add
mov
lea
add
dec
dec
pop
sahf
insb
inc
fdivl
ret
call
push
fcmovnu
mov
cmc
leave
out
addr16
test
push
cmp
push
lock
mov
push
pop
dec
cmpsb
ljmp
adc
mull
sbb
sub
movsl
xchg
add
push
cmpsl
cmp
fcompl
outsb
dec
xchg
stos
add
cmp
mov
xchg
add
pop
lea
jp
or
fdivr
ds
jae
ret
pop
cmp
sub
adc
imul
aad
mov
out
aaa
jmp
push
ss
cwtl
in
lcall
cmpsl
lret
iret
mov
fmulp
pop
dec
dec
jns
jle
pop
sbb
pop
pop
data16
cmp
dec
cmp
adcb
sbb
movsb
pop
cmp
inc
out
xor
daa
mov
fcom
fsubs
decl
xor
sub
cld
dec
mov
test
fmulp
insb
push
mov
push
jp
shr
adc
mov
jge
fnsave
loope
in
push
and
arpl
sbb
xchg
add
pop
inc
lods
mov
sub
dec
ret
sahf
icebp
repnz
adc
sub
test
fwait
cwtl
repnz
repz
sarb
movsb
stc
jno
xor
pop
or
or
sahf
inc
sub
adc
push
sahf
clc
sub
adc
fsubrl
leave
loope
js
aam
je
aam
out
add
push
push
or
lahf
mov
sti
and
jge
jmp
ljmp
mov
pop
inc
testb
mov
xor
dec
pop
jp
sahf
add
into
cltd
mulb
adcl
sub
jmp
sar
and
mov
inc
test
sub
fsts
je
push
mov
rcl
cmp
int
xchg
sarl
push
bswap
pop
push
sub
imul
test
leave
mov
push
in
popa
dec
fsubrp
pop
push
pop
ja
mov
icebp
hlt
or
xchg
test
mov
lcall
pop
mov
mov
dec
jo
sub
scas
outsb
inc
lock
movb
cmp
iret
je
clc
adcb
fdecstp
fists
pop
add
and
mov
add
mov
inc
push
push
nop
hlt
loope
pushf
mov
push
cmpsl
add
rcrb
in
or
jmp
pop
push
jbe
lret
push
cmpsl
inc
icebp
in
mov
and
enter
std
or
mov
push
cmp
push
cmp
pop
add
mov
jp
mov
or
imul
enter
ss
push
push
pop
xchg
aas
push
iret
mov
cld
inc
sub
push
adc
hlt
scas
push
dec
xchg
jle
ret
mov
data16
inc
jns
js
push
sbb
mov
xchg
pop
int
adc
mov
jo
scas
fisubrs
inc
movsl
pop
pop
mov
xchg
mov
dec
inc
cwtl
insl
call
or
inc
and
xor
inc
clc
int
test
mov
negb
mov
mov
hlt
push
xor
push
mov
ss
sarl
movsl
ljmp
je
dec
dec
dec
cmp
into
mov
mov
mov
loope
ja
mov
lret
jne
inc
cwtl
loop
dec
jecxz
xchg
fidivrs
fadds
mov
rcr
cltd
hlt
pop
inc
mov
ffreep
mov
mov
scas
xchg
and
outsl
add
pop
fdivrl
js
or
ret
or
jp
scas
xchg
rorb
fmull
fstps
jle
shlb
sub
lahf
adc
mov
xchg
fdivrl
or
bound
sub
mov
sbb
sti
imul
popf
jb
ficomps
add
test
add
aas
lds
sub
cld
fwait
dec
mov
out
movsl
rorb
fs
fstpl
fwait
dec
mov
mov
or
aam
ficomps
jmp
lcall
xor
xchg
in
lcall
mov
jg
aaa
pop
inc
insl
test
ljmp
sbb
mov
mov
inc
mov
bound
ret
in
leave
pop
int3
xchg
adc
mov
inc
in
mov
add
sub
cmp
popf
insl
decb
rcl
adc
scas
add
cli
xor
xchg
cltd
movsl
sub
aaa
cmp
push
cmpsl
xor
dec
xchg
mov
subps
popf
repnz
xor
rclb
pop
cmp
push
test
imul
jge,pt
sbb
jp
mov
out
and
lret
xor
rorl
lret
mov
popf
sarl
sub
out
and
arpl
xchg
pop
xchg
jge
jo
scas
dec
jns
jecxz
repz
shll
inc
xor
movsl
jl
pop
xlat
nop
and
pushf
inc
mov
mov
push
mov
popf
aas
and
stos
dec
pop
or
pop
test
scas
js
loop
popf
jno
sbb
cwtl
push
das
or
cmc
rol
jecxz
mov
push
adc
sbb
xchg
jnp
pop
mov
adc
jmp
leave
sbb
add
xlat
lahf
into
xchg
xor
dec
xchg
inc
push
notl
inc
test
aaa
push
sti
jl
inc
js
push
push
shrl
clc
xchg
testl
jae
jno
sub
in
xor
or
and
rol
ds
pop
ret
je
xchg
add
rolb
cmpsl
cmp
mov
cmp
adc
jg
out
inc
pop
das
jae
mov
and
iret
sbb
fists
negl
das
mov
aas
jo
jbe
mov
push
sbb
inc
sub
icebp
pop
outsl
mov
adc
mov
aad
add
xchg
mov
sub
sub
pop
pop
adc
out
daa
mull
jle
mov
incl
jae
out
pop
repz
cmp
cli
pop
cmc
lret
sub
xor
out
in
outsl
jge
movb
hlt
shll
pop
cmp
roll
loopne
std
pop
jmp
push
push
out
stos
adc
mov
jecxz
dec
jle
or
out
mov
testb
mov
jb
std
xor
push
ds
outsb
xor
xchg
cltd
inc
adcb
sti
lret
lock
jp
lahf
sbb
aaa
jp
jge
in
and
stos
jge
cmc
mov
mov
push
je
movsb
das
sub
add
push
addr16
and
sub
adc
stc
leave
cmpsl
das
push
ret
xchg
jp
clc
adc
mov
or
icebp
js
push
cltd
fldl
into
and
lret
mov
mov
stc
push
cmp
sub
push
or
jo
mov
mov
shrl
maskmovq
imull
jno
sub
test
xor
jns
out
fstpl
jp
cmpsb
mov
out
dec
sbb
cltd
cmpsl
leave
js
sub
shrb
add
jbe
ss
fimuls
ret
inc
pop
xchg
addr16
dec
imul
fucomip
adc
and
xor
stos
sbb
and
adc
cs
push
addr16
jno
popf
pop
pop
add
ljmp
out
sub
rorl
dec
ds
mov
test
loopne
cmp
aaa
ret
fistpl
xchg
clc
aam
xchg
cmpsb
lods
lods
pop
xchg
lahf
inc
mov
aad
cmp
xor
mov
lahf
mov
loope
xor
pusha
and
sbb
pop
jl
or
repz
mov
jl
inc
pushf
mov
bound
xor
jo
cmp
out
mov
int3
adc
roll
mov
mov
mov
in
js
fidivl
stos
cmpsl
add
sub
imul
push
mov
lcall
lret
xor
lds
mov
xchg
pop
inc
add
adc
lods
cli
mov
or
insl
sub
mov
inc
and
nop
lods
mov
cmp
test
pop
pushf
xchg
rcll
push
movsb
int3
mov
in
aas
mov
pop
mov
mov
xchg
scas
je
push
daa
js
int3
loope
insl
mov
mov
and
in
into
xor
xor
jmp
cmp
xor
sbb
cmpsb
cmp
mov
dec
enter
lret
hlt
xchg
rcl
push
cmp
xchg
lret
in
aas
adc
fildl
int
rcrl
stos
pop
lea
add
jnp
jno
add
pop
addr16
nop
push
mov
hlt
push
test
addl
sti
je
lret
cmc
cli
adc
jp
xchg
jp
and
dec
lods
lea
xchg
pop
ret
push
in
out
ret
xor
inc
iret
sub
cmp
xchg
mov
sbb
sbb
out
inc
addr16
xchg
or
jmp
jge
sub
loop
adcl
jmp
push
ret
test
int3
sbb
pop
cmp
loopne
jae
movsl
lret
xchg
jne
push
push
loop
xor
jo
int3
or
mov
jns
mov
push
cmp
lret
xor
out
ret
xchg
pop
add
sbb
ret
jo
cmp
mov
push
sbb
or
push
pop
add
sbb
push
add
mov
test
sbb
incl
add
rcll
mov
xor
adc
adc
hlt
imul
mov
loop
movsb
mov
mov
mov
mov
fs
addr16
sbbl
mov
or
jmp
fbld
add
in
sbb
dec
adc
mov
or
ficomps
nopl
dec
jo
lock
jno
test
cs
sti
add
and
xchg
enter
stc
mov
cld
xor
add
xor
mov
rclb
mov
imul
test
mov
mov
std
les
mov
aam
and
add
inc
fwait
mov
cmp
sub
ljmp
dec
inc
fwait
add
jmp
pop
mov
pop
adc
sub
lret
adc
pop
and
outsl
int
and
es
mov
xchg
pop
pop
or
daa
out
and
push
add
mov
adc
aaa
adc
jno
add
inc
pop
les
mov
into
xlat
mov
or
cmc
inc
jge
out
push
stc
mov
mov
or
xchg
adc
add
fidivrs
inc
testb
pop
mov
or
sub
les
mov
test
jmp
adc
pushf
mov
dec
sbb
sub
mov
mov
lret
and
xchg
mov
gs
mov
rorl
mov
popf
sbb
mov
leave
cmp
int3
cltd
lods
mov
sbb
test
mov
adc
sbb
push
out
xchg
daa
ja
push
xor
cmp
jmp
inc
pop
mov
in
or
in
cld
sbbb
int
cmp
xchg
aad
mov
pop
test
popf
sub
je
pop
mov
test
icebp
call
cmp
nop
mov
fists
xor
cmp
ja
xor
xchg
out
mov
scas
dec
jae
fsubrs
jp
scas
push
inc
shlb
daa
scas
inc
in
stos
lcall
adc
xor
adc
inc
loopne
lds
push
sub
repnz
mov
shl
inc
call
sarb
xchg
jp
add
sbb
add
cmp
adc
jle
sub
icebp
std
repnz
imul
fdivs
cmp
das
ljmp
pop
push
xchg
mov
repnz
movsl
add
push
fisubrs
ljmp
jl
mov
jbe
cmpsl
pop
push
fcomp
pop
cli
imul
and
xchg
mov
mov
push
inc
mov
inc
add
daa
out
xchg
mov
and
imul
xor
cmpsl
fucomip
xor
enter
nop
add
adc
into
and
fsts
xchg
out
rcll
pop
push
inc
jno
pop
bound
pop
inc
sbb
jb
test
inc
das
sarl
mov
mov
mov
push
hlt
pop
aad
jns
jle
leave
aam
add
lahf
mov
mov
idiv
loope
inc
shr
cmp
inc
int3
xchg
mov
loop
sub
sti
inc
repnz
outsl
imul
lret
stos
cld
and
fnsave
sbb
mov
xchg
sbb
mov
stc
adc
xor
aam
xor
mov
lcall
dec
test
ficomps
push
insl
sahf
leave
cmp
jp
and
push
adc
mov
dec
test
dec
jb
mov
lret
pop
mov
cmp
xor
out
rcrb
pop
fcoml
or
aas
fstpt
leave
sub
test
pop
ds
cmp
lret
xchg
pop
fiaddl
into
sub
int
dec
cmp
jo
cwtl
stos
ffree
out
inc
fcom
stos
mov
mov
cmpsl
test
js
cmp
add
repnz
fnstsw
je
lret
cmp
xchg
es
in
mov
sbb
divl
psubusb
cmp
dec
push
mov
sbb
test
or
mov
nop
mov
ret
push
and
lock
push
inc
mov
ds
addr16
arpl
std
inc
sub
jg
ret
ret
add
adc
mov
mov
jmp
cmp
cmp
mov
mov
and
out
movsl
fsubrs
push
imul
push
fstpt
add
out
jle
lret
shrl
pop
add
repnz
xor
xchg
dec
xchg
icebp
je
adc
dec
push
iret
negb
add
fiadds
mov
and
sub
jnp
scas
ret
divl
jo
cmp
push
cltd
xor
je
mov
scas
mov
push
fisubrs
fwait
mov
dec
pusha
sub
add
cltd
data16
mov
leave
ret
addr16
ja
mov
sub
adc
in
ljmp
inc
pusha
cs
pop
adc
sbb
insb
hlt
out
movsl
inc
fisubs
xchg
jae
in
dec
mov
mov
outsl
ficoms
iret
dec
mov
lea
dec
std
sub
xchg
xorb
jecxz
xor
inc
das
out
scas
in
inc
in
aas
mov
inc
call
mov
stc
psadbw
sbb
inc
pushf
dec
mov
std
dec
dec
pop
pop
out
flds
mov
movsl
movsb
jns
out
push
push
mov
shrd
mov
sub
int
fisubrl
nop
ja
push
inc
mov
sbb
or
sbbb
addr16
into
lret
push
movsb
or
add
mov
jp
kmovw
mulb
adc
les
adc
mov
jecxz
push
mov
push
xchg
std
dec
mov
outsl
in
les
outsw
sbb
push
or
cmpsb
sub
cmp
call
scas
shrl
into
mov
aam
clc
fwait
in
push
inc
pop
inc
dec
clc
jmp
scas
push
xlat
mov
fmuls
cltd
push
stos
mov
fndisi(8087
inc
ret
scas
fwait
jnp
mov
movsl
outsl
outsl
inc
fsubl
push
test
imul
mov
inc
xor
shrl
add
adc
add
xchg
test
fs
xchg
and
dec
mov
pop
cltd
push
xorb
cltd
imul
ret
pop
test
insb
fwait
ljmp
stos
mov
cmpsl
sbb
in
mov
jg
adc
leave
mov
je
or
popl
xchg
pop
push
add
cmp
inc
mov
scas
cmpsb
movsl
ja
cli
adc
xchg
stos
aam
loop
sub
mov
test
push
inc
jae
or
rcr
inc
mov
sti
jmp
call
push
inc
mov
int
sahf
sbb
orb
pop
dec
dec
fsubl
insb
and
dec
add
mov
pop
mov
imul
test
testb
push
pop
or
pop
sub
lahf
sbb
imul
mov
mov
decb
xchg
add
mov
sbb
xchg
and
inc
mov
push
dec
and
movsb
jne
xor
adc
outsb
lret
mov
testl
jnp
pop
mov
lock
fisubs
pop
shll
andl
scas
clc
xchg
lock
mov
mov
popa
movsl
or
mov
push
shlb
fistps
cmovg
or
dec
jl
push
loop
xlat
imull
xor
fsubl
dec
negb
sti
mov
push
add
imul
pop
je
jge
lods
cld
adc
adc
leave
and
cltd
enter
push
xor
pop
test
add
in
or
scas
test
inc
js
and
iret
jo
pop
loope
jno
popa
ror
lea
jo
fdivl
push
mov
mov
lea
imul
in
mov
xor
add
cmp
add
mov
ret
subb
inc
mov
xchg
movsb
ds
popa
inc
loope
fidivl
pop
and
inc
xor
mov
movsl
js
mov
cmp
mov
mov
cmpsl
mov
fldcw
je
ret
fsub
jno
gs
fstps
iret
push
testl
std
mov
je
insl
mov
test
in
fisubrl
jno
push
and
stos
xchg
xor
push
mov
mov
cmp
insl
mov
out
xchg
cmpsb
and
pusha
repnz
cmp
movsl
cmp
mov
je
adc
push
adc
add
cltd
jl
negl
or
xor
lea
mov
aas
pop
push
lcall
xchg
ret
sbbl
imul
daa
out
inc
cli
das
fs
repz
lods
jno
leave
cli
repz
mov
lea
pop
ss
cld
scas
into
xchg
test
jb
stos
loope
jmp
sub
shlb
pop
pusha
test
mov
fcompl
scas
lret
mov
sub
xlat
icebp
adc
jo
and
shrb
and
arpl
xchg
mov
mov
jl
inc
mov
inc
out
pop
std
insl
dec
stos
fbld
jmp
mov
cld
arpl
dec
shll
and
loop
subl
mov
add
jmp
stos
lcall
jge
add
and
jl
dec
sbb
inc
sub
push
inc
movsl
ja
shrl
push
sti
xchg
dec
in
lods
cmpsl
popa
mov
in
sti
and
imul
push
push
push
dec
jp
jns
fwait
dec
sbb
mov
inc
add
add
in
js
jge,pn
mov
adc
and
mov
mov
jb
loop
xchg
adc
ja
adc
loope
andl
mov
insl
dec
push
lds
mov
pop
fstpt
adc
int
jp
inc
frstor
jle
xchg
idiv
ss
jno
mov
mov
mov
sub
xchg
rol
mov
outsl
xchg
movsb
jmp
loope
sub
aas
sub
jge
xchg
inc
and
push
dec
ret
inc
push
popf
cmc
or
data16
cli
mov
lahf
push
mov
sbb
xchg
fisubrl
insl
dec
dec
mov
pusha
pop
mov
pop
fsubl
rclb
ret
mov
je
mov
inc
xor
push
pop
sbb
inc
dec
ljmp
psllq
aad
loopne
cli
hlt
je
adc
popf
or
xorb
test
aas
jne
push
adc
push
rcll
sbb
mov
lods
inc
hlt
insl
popa
add
mov
cli
mov
lock
mov
call
mov
cwtl
sub
xchg
hlt
inc
inc
mov
testl
adc
pop
dec
aam
mov
cmpsl
or
sub
getsec
mov
mov
adc
jae
xor
aad
pop
insb
int3
loope
xchg
lret
sbb
and
mov
das
insl
inc
repz
xlat
in
sub
and
loop
mov
push
lldt
arpl
mov
outsl
scas
outsl
sbb
jecxz
and
mov
push
fstpl
mov
outsl
into
cmp
std
out
xor
add
repnz
or
insl
push
loopne
xchg
jge
xchg
into
rclb
or
cwtl
xchg
dec
push
fisttpl
and
jecxz
rcrb
cmpb
icebp
cmp
addr16
cmp
pop
push
jmp
and
jecxz
xor
sbb
sub
repnz
dec
jg
adc
cmp
push
out
out
lret
push
fists
pop
call
cmp
fnsave
ss
add
and
insl
ja
and
leave
int3
push
repnz
gs
stos
outsb
or
xor
je
mov
loope
test
jns
das
pusha
mov
pop
push
ret
js
dec
jge
add
rcr
xchg
jae
adc
dec
cwtl
pop
xor
mov
xchg
scas
inc
lods
in
jns
dec
cmp
mov
and
pop
jbe
test
repnz
movsb
jae
test
jmp
cli
jp
dec
inc
dec
adcb
btc
int
or
push
and
daa
out
les
jne
stos
loopne
cmpsb
inc
dec
clc
push
sbb
aas
mov
scas
jg
fs
sub
mov
inc
cmp
xchg
adc
out
push
xchg
xor
inc
mov
push
pop
mov
lods
jg
stc
mov
and
and
ror
lods
sub
mov
or
in
test
lret
stc
mov
push
mov
aas
mov
in
dec
or
jb
repz
popa
pop
cltd
ret
sbb
dec
cs
inc
in
or
cmpsb
popa
aad
and
int
adc
cld
das
fldt
test
in
sbb
fnstcw
pop
bound
mov
lcall
rorb
aam
pop
adc
sahf
or
xor
scas
jo
loop
fimull
bound
insl
incb
scas
or
mov
fstl
inc
xor
mov
jg
jecxz
enter
cmp
add
cmpsb
cmp
dec
loop
lea
test
dec
loop
sbb
pushf
ljmp
push
xchg
add
add
cli
lods
fwait
xchg
movsb
mov
imul
jle
mov
cs
adc
stc
push
add
das
cwtl
rcr
dec
std
sahf
mov
xor
addr16
jno
push
and
arpl
sbb
cmpsl
push
mov
ficompl
xchg
jnp
js
sub
and
push
cmp
cmpsb
jns
xchg
repnz
aas
fucom
aaa
fs
push
pop
xchg
insl
xchg
into
push
push
inc
pop
mov
mov
jp
insl
das
inc
push
lock
fiaddl
push
mov
cwtl
in
roll
mov
mov
inc
test
les
jae
das
repz
mov
cmp
dec
add
rclb
iret
xor
repnz
fldl
xor
jecxz
sbb
xor
idivb
push
pusha
adc
cmp
sbb
jg
test
movsb
gs
testl
xlat
xor
inc
dec
inc
sub
pop
ss
push
adc
pop
fidivl
sahf
pop
mov
fxch
xchg
mov
push
fisttpll
pop
js
in
inc
or
pop
lods
pop
out
xchg
cmp
dec
mov
or
test
xchg
inc
inc
pop
sub
ja
and
mov
xor
popf
movsb
test
test
mov
aas
int3
push
lea
fisubrl
adc
mov
inc
mov
pop
mov
call
out
enter
mov
sbb
mov
inc
inc
xchg
cli
adc
roll
sbb
ss
xchg
gs
and
xor
inc
vrcpps
dec
adc
jp
and
lahf
xor
cwtl
dec
mov
push
aaa
std
sbb
int
push
jbe
subl
popa
or
xor
jp
mov
loopne
mov
mov
fldln2
push
mov
call
jp
inc
fs
cld
pop
in
xor
or
xor
mov
push
push
jp
xchg
or
or
fisubrl
mov
daa
movsl
cmp
or
call
ret
ret
clc
out
in
mov
cmp
mov
in
jns
and
rolb
jo
adc
jecxz
out
cmpsb
out
test
mov
pop
xchg
mov
in
adc
int3
cwtl
inc
dec
xor
push
mov
sahf
gs
imul
dec
mov
pop
mov
sub
clc
inc
and
push
inc
mov
xor
lret
sbb
pop
pop
fdiv
ss
es
mov
mov
mov
mov
jns
insl
stos
leave
sub
hlt
decl
pusha
das
not
call
sub
test
sub
js
shlb
push
punpckhbw
add
iret
and
xchg
or
js
pushf
mov
lret
enter
clc
pushf
bound
mov
test
adc
rorl
or
popa
cmp
sbb
inc
in
repz
dec
das
sarb
pop
aas
mov
stc
rcrb
fsubrl
sbb
out
mov
in
lods
dec
pusha
filds
movsb
cwtl
push
cwtl
sbb
mov
rol
xor
negb
or
mov
jecxz
cmpsb
jno
and
leave
std
and
adc
mov
inc
aas
dec
add
ja
pop
push
in
cmp
mov
es
inc
push
clc
dec
iret
pop
fcomip
cmpl
testl
and
push
jbe
shl
inc
cwtl
int
push
mov
in
adc
add
je
out
sub
std
sahf
lret
mov
in
out
loop
sub
inc
jge
je
mov
fildll
add
cmp
push
sub
xor
push
and
jno
lods
das
adc
adc
andl
pop
sub
movb
daa
sub
xchg
mov
fildl
push
pop
sub
cmp
sti
les
lods
js
inc
les
xor
lea
icebp
pop
cltd
sbb
cmp
mov
call
pop
inc
inc
test
or
jle
and
mov
adc
out
jnp
jb
lahf
test
inc
and
mov
push
and
cmp
cltd
mov
bnd
mov
loop
mov
stos
int
rorb
adc
mov
or
dec
adc
dec
pop
jbe
into
inc
xor
inc
clc
and
and
and
daa
mov
or
loopne
dec
or
shll
or
bt
int3
xor
repnz
sbb
or
pop
mov
scas
jo
test
xor
mov
and
adc
inc
fcmove
jle
add
movsl
push
push
fisttpll
sub
addl
test
jl
ja
cltd
fmuls
fnstenv
push
mov
aaa
scas
xor
mov
ja
ljmp
jmp
adc
dec
pop
aam
sti
push
shrl
pop
lds
jle
push
push
mov
fstpt
add
xor
jno
fwait
out
add
and
jae
outsl
div
push
jnp
fwait
xor
pop
jbe
mov
dec
sbb
sbb
mov
dec
dec
push
arpl
mov
test
out
out
inc
ljmp
je
pop
add
cmp
movsl
inc
shrb
dec
pop
das
inc
shll
loop
or
sbb
test
lock
adcl
sub
nop
mov
add
imul
fsubrl
ljmp
enter
pop
lcall
popf
jmp
pop
movsl
jnp
andb
inc
jecxz
rcrb
dec
sti
mov
pop
bound
adc
ret
jecxz
jae
cltd
js
jl
imul
jb
mov
adc
enter
repnz
out
inc
pop
add
cmp
adc
pop
nop
cs
cmp
add
outsb
cmp
sbb
roll
xchg
daa
adc
mov
sub
and
xor
leave
xchg
sbb
andl
sub
fistps
test
sarb
mov
cmp
adc
mov
fistpll
push
jl
sbb
inc
xchg
int
pop
fsubrs
mov
sbb
je
jnp
pop
push
mov
dec
add
and
stc
push
out
jae
jae
add
call
pop
inc
xchg
ret
nop
roll
fwait
int
jo
ja
shl
ret
cwtl
sub
jae
stc
imul
mov
or
aam
outsb
pop
mov
jno
push
xor
mov
pop
repz
cmp
dec
sub
call
int
pop
repz
lds
divl
out
loop
dec
add
outsb
or
sub
cmp
mov
and
and
repnz
popa
or
pop
pusha
notb
push
cltd
adc
xor
fisttpll
insb
sub
imul
jae
or
leave
mov
xchg
jnp
mov
inc
ss
xor
loop
dec
and
mov
pop
lds
popf
dec
cwtl
mov
pushl
jb
inc
rcrb
loop
xchg
or
out
add
mov
pop
nop
icebp
or
arpl
pop
adc
mov
add
ja
adc
movsl
repz
stos
cmp
sahf
ffree
jp
mov
xor
add
dec
test
cwtl
inc
fcompl
divb
negb
dec
daa
das
sbb
add
xor
adc
push
repz
test
mov
subl
mov
cli
movsb
sahf
testl
mov
and
inc
mov
push
in
sbb
mov
leave
mov
int
outsl
je
mov
push
fwait
mov
mov
call
push
or
inc
or
pop
insl
xor
pop
add
cs
push
inc
aaa
and
movsb
sub
xchg
cmpsl
fwait
adc
icebp
idivb
push
repz
cmp
or
jl
cmp
imul
lock
jns
sahf
divb
stos
sbb
fstps
dec
sub
cwtl
xchg
add
pop
fcoms
sbb
cmpsb
out
inc
outsl
mov
lea
add
add
sbb
fnstsw
inc
je
dec
test
or
ficoml
mov
dec
sbbl
push
icebp
scas
sub
cmp
jb
fiadds
push
daa
lahf
push
and
pop
xchg
jle
sub
or
mov
sar
pop
adc
pop
push
lock
rcrl
mov
push
ficompl
pop
cmp
dec
inc
or
dec
repz
out
sbb
or
or
cwtl
xchg
push
jg
outsl
mov
sub
mov
shrb
sbb
xor
iret
dec
add
fdivs
or
lock
test
fists
mov
cmp
inc
push
js
jle
mov
push
aad
adc
cmpsl
adc
cltd
adcl
mov
xor
jmp
arpl
test
mul
repz
or
or
rcrl
cmp
cli
popa
sub
subb
cwtl
adc
loopne
adc
cmp
das
dec
test
and
imul
fbstp
push
sbb
mov
mov
fidivrs
and
sub
stos
cmp
push
in
xor
adc
inc
or
mov
dec
or
sub
mov
mov
xor
data16
adc
adc
jbe
std
ds
fadd
outsl
in
cmp
adc
cmp
fincstp
cmpsb
add
jmp
mov
fcomp
sub
pusha
jge
out
rol
sub
ret
std
mov
push
sub
out
cmc
jle
imull
jmp
movsb
inc
sarw
into
xchg
daa
and
pop
mov
in
stc
pop
cmp
or
les
and
mov
sub
xchg
inc
mov
gs
push
jecxz
pop
mov
pop
xchg
arpl
pop
ljmp
andl
cmp
and
mov
shll
and
filds
insl
shl
in
fs
je
xchg
cs
sub
xchg
bound
mov
loope
xchg
sysret
fistl
repz
cmp
mov
pop
test
inc
or
cmp
je
inc
lret
sub
xor
inc
sbb
popa
mov
jmp
push
or
mov
pop
fnsave
mov
add
sahf
jg
popf
pop
out
cltd
popa
inc
inc
or
imul
clc
xor
es
movsb
aaa
mov
cmp
jge
dec
sub
imul
or
push
loopne
mov
jmp
ret
mov
gs
repz
lret
cli
mov
jp
mov
jl
pop
in
ljmp
mov
loope
push
or
adc
jle
adc
cld
pop
shl
sub
or
sub
outsb
loopne
inc
and
pop
dec
mov
xor
ljmp
std
insb
push
sbb
nop
iret
out
sbb
jge
loopne
pop
into
and
sub
push
add
or
out
fistpl
xchg
or
add
pop
jns
cmp
push
xchg
loopne
pop
sti
sub
jecxz
mov
jo
mov
and
push
testb
pop
fbstp
xchg
sarb
and
into
sarl
fsub
lods
mov
jbe
and
loop
push
mov
dec
hlt
repz
xor
cmc
xrelease
mov
cmp
mov
mov
rolb
in
xor
xchg
sub
outsb
addb
test
arpl
push
push
enter
loop
mov
inc
mov
cld
dec
cltd
divl
mov
scas
or
gs
fwait
iret
pushf
mov
or
pusha
mov
dec
pusha
add
xchg
pop
dec
dec
pop
mov
adcl
pusha
sar
fcoml
loopne
filds
pop
sbb
loopne
shr
or
sub
daa
test
push
push
xlat
or
pop
mov
jae
insl
loop
movsl
popf
xchg
xchg
aam
mov
adc
or
int
icebp
ja
je
or
leave
xor
ds
rclb
imul
pop
movsb
cmp
push
ret
and
aaa
add
pop
pop
pop
pop
pop
cmp
pop
mov
sbb
rclb
shll
ljmp
movsb
add
xchg
mov
dec
or
ljmp
cmc
lods
mov
sub
leave
sbb
addb
int
in
dec
popa
in
jecxz
push
es
lret
pop
aas
mov
je
lcall
mov
fisttps
jbe,pt
idivl
pop
test
out
in
xor
push
or
ret
pop
cmpsb
and
adc
sahf
or
xchg
lahf
cmpsb
xor
xchg
es
data16
out
push
sti
pushw
shrl
cli
sbb
call
cld
xchg
mov
shrl
dec
jmp
mov
or
std
mov
add
pop
push
sarl
in
cmp
aad
add
jae
mov
adc
jo
inc
pushf
dec
cmpsl
xchg
sub
push
jp
or
add
mov
fs
fcompl
pop
sti
mov
cmp
cmp
mov
jno
out
sti
fnsave
cwtl
loope
cmp
add
movsb
push
test
je
and
sub
adc
pop
je
mov
in
inc
mov
ljmp
xchg
cmp
sbb
cmc
jecxz
mov
dec
xchg
test
mov
xchg
outsl
adcl
cmove
dec
hlt
sqrtps
add
shr
std
scas
add
xchg
pop
and
sub
lock
aam
or
add
mov
cmp
add
cmp
test
adc
std
ds
jle
test
mov
or
rcr
bnd
dec
ret
aaa
insl
jno
dec
mov
xor
jle
sub
loopne
xchg
sbb
mov
xchg
pusha
insl
dec
cltd
push
lds
cs
ret
aaa
mov
adc
jmp
icebp
lcall
cmp
push
imul
lret
inc
movsl
std
jbe
dec
repz
into
push
mov
add
mov
outsb
das
inc
inc
aad
push
je
mov
and
inc
xchg
mov
jecxz
popf
js
bound
push
push
adc
mov
push
sbb
js
int3
xchg
cmp
enter
gs
pop
pop
mov
test
mov
test
out
push
fidivrl
cmpsb
icebp
not
leave
insb
pop
call
cltd
movsb
sbb
pop
leave
frstor
inc
fs
adc
jb
hlt
pop
inc
pop
push
dec
inc
sbb
pushf
pop
add
and
loopne
pusha
int
jbe
inc
shll
fmulp
repz
test
ret
xor
pushf
enter
movsb
cli
dec
inc
in
and
xor
shll
sbb
les
jbe
mov
jg
lods
ret
xor
aas
adc
pushf
jl
add
inc
add
mov
mov
leave
mov
cltd
push
xor
js
jnp
pop
sbb
repz
out
stc
cmp
adc
mov
rcll
bound
scas
pop
mov
int
mov
lcall
stc
cmp
xchg
fwait
push
fs
push
mov
mov
popa
pusha
daa
pop
push
iret
adc
aad
mov
add
cld
push
jnp
xor
cwtl
out
jnp
imul
adc
ss
ret
jmp
push
mov
imul
jmp
mov
sbb
sbb
sbb
out
js
les
cwtl
les
daa
mov
inc
pop
sbb
nop
push
outsb
push
push
pop
or
andl
adc
cmpsb
pusha
ja
outsl
push
popa
aas
int3
dec
pop
popa
addr16
pop
jo
xchg
adc
adc
mov
jl
pop
cs
insl
loope
mov
fnstsw
popa
push
lods
or
into
push
ja
mov
pop
outsl
or
push
data16
sbb
adc
into
cmp
aad
stos
pop
sti
mov
scas
mov
fnstsw
mov
push
std
negl
pop
ret
push
push
adc
shl
cmc
mov
ljmp
movsb
in
jle
xor
repz
push
jo
xor
push
pop
pop
lods
jl
dec
ljmp
sub
and
leave
mov
iret
jecxz
shrl
mov
jno
mov
dec
pop
xchg
lret
xor
stos
es
xchg
mov
push
faddl
scas
loop
sbb
push
mov
loop
add
fadd
mov
fstpl
mov
je
mov
pusha
xchg
clc
sbb
push
jae
lahf
inc
xchg
adc
cmp
cltd
dec
cmp
ret
mov
mov
pop
and
pushf
enter
scas
hlt
cwtl
and
sti
je
or
mov
mov
cs
fimuls
cmp
cmp
pop
fimuls
mov
mov
and
scas
movsl
mov
add
lods
pop
or
es
jb
addr16
xchg
lret
mov
sbb
popf
sbb
mov
loopne
push
movsl
je
mov
notb
jb
adcb
mov
cld
cmpl
data16
jge
mov
fwait
fwait
cmpsb
and
add
push
sbb
test
enter
dec
shl
xor
cmc
cmp
add
jnp
dec
jge
dec
lock
mov
lods
ss
cs
gs
enter
mov
pusha
and
test
push
dec
shrb
xlat
inc
sbb
xchg
fsincos
mov
ret
fisubs
ja
xor
jl
fiadds
fbld
pop
sbb
leave
fdivl
sub
lea
xchg
pop
mov
inc
mov
pop
dec
das
cltd
outsl
test
lret
mov
or
xchg
sub
xor
arpl
sbb
push
cmp
push
xor
pop
fiaddl
outsb
in
jmp
sbb
lcall
int
sbb
pop
mov
dec
xor
xor
loop
lods
push
addr16
mov
mov
and
pop
push
or
jmp
cmpsb
pushf
jge
cmpsb
cmc
xchg
hlt
push
test
stc
iret
nop
testl
dec
inc
cltd
push
inc
jae
dec
in
movsl
jmp
pop
hlt
std
adc
pop
int3
and
lock
ds
lods
pop
sarb
sub
jle
push
rcll
iret
out
xchg
inc
outsb
rcrb
ret
dec
and
push
pushl
inc
xchg
inc
mov
mov
mov
rolb
jne
loop
in
ficoms
repnz
insl
lds
dec
pushf
adc
inc
jae
cmp
jb
std
push
into
andb
mov
out
int3
dec
in
mov
pop
loop
xchg
mov
xor
cmp
inc
cld
or
pop
sub
push
call
arpl
mov
pop
mov
sti
insl
bound
mov
in
ljmp
enter
or
push
pop
push
call
sub
adc
les
shll
push
dec
push
popf
shll
fwait
xor
sub
and
sub
cmp
lret
addb
mov
movsl
dec
dec
mov
leave
sub
inc
push
ret
xchg
jg
aas
or
push
iret
cmp
in
sbb
jb
jbe
testb
push
lcall
mov
jg
fimull
inc
mov
pop
push
out
movsl
mov
pop
outsl
dec
leave
push
clc
loope
shll
dec
cmp
cmp
mov
pop
adc
sbb
popa
mov
or
addr16
imul
insl
dec
cmp
vmovntdq
mov
pop
cs
shrl
aad
jecxz
mov
xor
push
pop
andl
cmp
es
jb
or
mov
arpl
and
push
sub
and
sub
add
stos
mov
pop
xchg
js
imul
dec
push
lods
mov
shrl
int3
inc
add
inc
lahf
mov
outsl
pop
out
pop
sbb
shlb
and
imul
les
sbb
out
dec
movsb
mov
push
jns
mull
xor
cltd
add
lahf
je
faddl
dec
inc
bound
xor
adc
push
xchg
mov
add
dec
mov
mov
xchg
pop
cmpsb
bound
cmpsb
mov
and
inc
cmp
inc
inc
out
pop
pop
dec
jge
stos
test
mov
icebp
xchg
add
or
int
pop
or
imul
iret
cld
clc
push
xor
or
adc
test
sbb
xor
fs
sbbl
enter
and
inc
cmp
cmpsl
jbe
and
fstpt
cmpsl
adc
es
in
pop
lcall
in
out
insb
or
sbb
inc
mov
mov
xchg
ljmp
ret
add
sub
mov
add
lahf
adc
cmp
push
push
pop
xchg
lds
pop
enter
popa
or
mov
adc
daa
push
mov
test
xchg
and
xchg
cmpsl
movsb
fisubrl
or
pushf
mov
ljmp
testl
in
inc
adc
pop
xor
xor
mov
cmp
jle
sbb
push
jle
adc
add
outsb
inc
and
cmc
cmp
insl
outsb
lret
sbb
mov
lock
cmp
je
sub
ja
sbb
mov
push
inc
lcall
cmp
call
jb
xor
into
fldcw
xchg
mov
inc
push
xlat
iret
pop
jmp
jl
in
push
scas
outsl
clc
sbb
xor
mov
hlt
dec
stos
sub
inc
lods
pop
in
cli
jmp
xor
sbb
fmull
or
xor
icebp
daa
js
jmp
jbe
jb
arpl
dec
cmp
rcrb
mov
sub
pop
bound
pusha
xchg
adc
jb
mov
jno
sbb
out
mov
jge
push
scas
jecxz
xchg
dec
mov
add
cmp
add
push
repz
push
xchg
lret
add
lcall
ds
jge
cmp
aam
cmc
add
rcrl
sub
cli
roll
fsubr
sahf
adc
push
loop
pop
mov
loop
ficoml
mov
ljmp
mov
popf
popa
xchg
push
xor
mov
cld
jmp
dec
gs
bound
movsl
pop
adc
bound
cltd
or
cmp
movb
insb
adc
out
iret
lcall
leave
leave
cmp
aam
dec
dec
aad
sub
fwait
adc
jmp
in
xchg
leave
icebp
leave
in
push
sti
stc
stos
add
lds
mov
andl
fiaddl
sbbb
frstor
dec
dec
rolb
push
out
lods
xor
sbb
cmc
fucomip
mov
cmc
mov
mov
rorb
mov
sarl
push
jo
enter
test
adc
pop
and
leave
fldt
adc
int3
fildll
ss
in
push
push
rcrb
sub
aas
jp
dec
rcrb
cli
adc
mov
sysenter
les
into
xor
fwait
cld
das
ja
xchg
or
in
test
sub
nop
std
xor
xchg
or
mov
icebp
icebp
lret
dec
sahf
fiadds
xor
arpl
js
mov
in
cmp
ljmp
mov
scas
in
fistpl
inc
bound
sbb
xchg
sub
pop
inc
adc
inc
movsl
es
fcomip
dec
xor
imul
jg
jl
sub
and
xchg
out
fstl
pop
loop
cld
daa
and
test
push
cwtl
out
dec
cltd
or
sub
push
lret
out
sub
mov
cs
lds
fcoms
add
sbb
jae
andb
cmp
adc
add
test
jb
leave
dec
push
add
and
jp
out
or
push
sub
xor
cmp
in
ds
push
mov
push
or
jb
sbb
jne
xor
adc
inc
sti
lret
adcl
lock
cwtl
add
enter
inc
addr16
std
or
sub
pop
pop
cmp
sub
scas
addb
push
out
push
xlat
sbb
push
out
cmp
mov
push
xchg
faddl
inc
faddl
sub
sub
ret
cwtl
lahf
and
sbb
ret
jecxz
ja
mov
sahf
loop
mov
cmp
call
pop
mov
lcall
xchg
imul
cwtl
xor
mov
mov
xlat
lods
int
mov
test
das
arpl
sub
lock
sbb
dec
pop
repnz
sub
adc
insl
int
out
xchg
push
adc
sub
xchg
dec
add
mov
dec
cmp
adc
sbb
leave
jmp
or
and
xor
mov
outsb
cmpsl
sbb
popa
bound
inc
or
mov
jp
mov
je
dec
xchg
inc
pusha
mov
inc
subb
add
hlt
sub
je
jg
push
dec
push
dec
in
mov
cmp
fists
pop
fs
mov
loopne
mov
mov
lahf
and
dec
lahf
mov
jmp
ret
push
fdivr
mov
sub
bound
xchg
dec
inc
mov
lcall
xorl
iret
inc
xchg
fmuls
jge
ss
xor
mov
pop
call
inc
fcmovne
dec
out
lods
or
ds
mov
outsb
inc
push
cmpsl
add
add
je
inc
xor
lret
cs
mov
aas
call
xchg
and
leave
push
cmp
lock
test
icebp
cltd
out
mov
inc
in
add
jno
stc
sbb
repz
jg
std
addw
es
aam
mov
mov
leave
push
shl
cmp
cmp
add
add
add
and
lret
gs
frstor
sti
mov
bound
mov
pop
mov
inc
adc
sbb
imul
mov
and
and
jge
icebp
adc
lock
stc
shll
sbb
jo
stos
test
lods
daa
or
cwtl
cli
lret
out
aas
add
ret
stos
add
sbb
inc
xchg
mov
jae
jbe
sub
cmp
insb
sbb
shl
mov
adc
xor
and
loop
pop
test
fcmovnu
repz
pop
roll
out
test
mov
push
lahf
mov
or
mov
mov
mov
orl
stc
into
jbe
cwtl
adc
call
jecxz
jge
cmp
pop
cmpsl
aaa
inc
test
popa
and
and
mov
lds
adc
shll
push
mov
insl
pop
add
jae
push
mov
cld
pop
add
xchg
sbb
fldenv
rorb
clc
sar
jp
stos
xor
test
mov
push
cs
lods
sub
cmpsb
push
shrl
faddl
test
and
sub
fnstenv
jp
push
and
pop
xor
mov
mov
mov
push
xchg
mov
dec
shrl
sbb
jp
cltd
subb
or
mov
push
shlb
ja
pop
out
or
dec
add
jne
gs
mov
push
push
and
inc
or
cmp
mov
test
adc
mov
jns
jge
int
sbb
test
or
aad
mov
int3
pop
jne
inc
leave
or
sti
lret
mov
stc
jae
mov
mov
pusha
sub
dec
push
or
scas
mov
mov
inc
jo
imul
mov
std
shrb
push
mov
sub
mov
into
ficoml
sbb
cmp
push
es
push
test
mov
in
lods
fidivl
or
jle
push
lds
aam
dec
repz
aad
nop
dec
lds
ror
pop
jb
inc
pop
mov
jecxz
mov
adc
and
das
sbb
mov
rorb
mov
fiadds
sbb
movsl
jmp
dec
pop
aaa
out
je
adc
jns
call
stc
sub
in
push
xchg
popa
lock
ret
xchg
aas
xor
std
xchg
fiaddl
jae
sub
mov
adc
cwtl
adc
jns
mov
in
xchg
add
frstor
sbb
popf
outsb
fdivl
aad
push
cmp
fstl
jnp
jno
inc
adc
and
popf
xlat
mov
test
sbb
mov
sbb
loope
in
stos
jne
cmp
pop
inc
fsubl
enter
sub
cmp
shl
sbb
xor
insb
daa
aaa
jbe
popa
int3
ret
dec
je
in
and
dec
lret
lods
pop
mov
and
dec
out
pop
add
cmp
fidivrs
mov
add
pop
lahf
push
xchg
inc
add
jp
adc
int
stc
addr16
gs
cmp
pop
or
xor
das
push
inc
inc
and
pop
dec
fildl
dec
clc
push
and
dec
fxam
insb
mov
sub
and
push
xchg
push
dec
inc
adc
std
sub
mov
sub
mov
xchg
mov
popl
adc
push
out
daa
push
lahf
dec
js
mov
xor
je
mov
cmp
iret
lods
add
and
inc
out
sbbb
inc
inc
push
add
jo
cmp
push
mov
jl
and
dec
push
out
dec
hlt
repz
out
sbb
gs
fsubs
lods
mov
jmp
adcb
inc
sub
pusha
iret
daa
xor
jns
fadds
mov
fisttpll
out
dec
mov
xchg
fdiv
and
sub
mov
mov
mov
mov
mov
scas
test
stc
or
xchg
sbb
adc
loope
jns
adcb
hlt
dec
cltd
repz
sub
les
sbbb
hlt
test
cmp
fnstsw
mov
jbe
xchg
cwtl
loopne
jp
roll
sub
cld
xchg
mov
jge
xchg
leave
cmp
push
sub
data16
fcmovnbe
pop
mov
ds
outsl
xchg
add
jecxz
add
or
jae
xor
decb
mov
popf
mov
mov
dec
dec
xchg
pop
imul
sbb
lock
pop
dec
sub
sub
fisttpl
and
sub
gs
xor
out
jne
sub
and
popa
pusha
dec
into
flds
inc
or
lea
push
sbb
xchg
in
outsl
je
jmp
adc
lcall
pop
mov
push
mov
dec
icebp
inc
mov
mov
jl
adc
and
rolb
xchg
or
aam
mov
sbb
adc
mov
xchg
cwtl
mov
imulb
mov
adc
fdivs
and
cmp
dec
mov
and
pusha
jge
and
sarl
inc
sbb
lahf
js
test
jmp
mov
push
inc
xor
xchg
add
mov
add
or
cmp
cmpsb
mov
rcrl
inc
jnp
push
rcll
push
jecxz
adc
or
cmc
das
add
std
int3
fidivrs
push
mov
adc
stos
cs
add
rcr
dec
sub
sub
jg
dec
xor
test
mov
test
dec
mov
and
ficoml
inc
adc
out
mov
and
lods
inc
stos
jb
cli
push
movsb
call
push
je
jg
mov
shll
pusha
jmp
addr16
gs
mov
inc
aas
and
lahf
jb
icebp
rcrb
jmp
leave
pop
jbe
jle
adc
bound
out
mov
imul
rcll
dec
push
rclb
bound
lcall
push
les
cmp
and
add
dec
iret
iret
clc
sbb
stos
xor
mov
jae
out
test
xchg
out
lret
jmp
dec
aaa
add
test
hlt
and
jle
push
xchg
ret
icebp
movsl
sbb
adc
dec
jbe
dec
push
mov
xchg
push
sbb
movsl
jl
leave
ficompl
imul
xlat
inc
jl
je
xor
pop
outsl
js
or
inc
or
shrb
mov
fs
pusha
push
out
mov
data16
std
mov
dec
sbb
mov
lea
fwait
jae
sub
pop
fs
and
rcll
mov
sub
shr
cmp
jp
add
cwtl
xlat
repnz
rolb
jge
es
push
push
xor
je
rcr
out
cld
sub
shr
popf
ret
testb
lods
fidivrs
or
or
fildll
jecxz
mov
lcall
shr
ficompl
xchg
cltd
and
call
xor
ret
xchg
lret
adc
leave
jge
xchg
mov
rol
mov
rorb
out
add
in
arpl
lods
mov
fadds
add
repnz
pop
and
repnz
in
mov
mov
pop
mov
fwait
pop
cwtl
dec
shrl
pusha
cmpsb
xor
adc
dec
push
and
adc
hlt
scas
jae
sahf
jg
jge
mov
jne
sbb
sar
stos
dec
sbb
cltd
xchg
or
mov
sahf
sub
movsb
in
scas
dec
xchg
idivb
movsb
dec
jmp
mov
push
adc
add
sub
pop
xchg
fwait
inc
xor
pop
mov
enter
mov
aam
xchg
xor
mulb
adc
xchg
sbb
dec
sbb
jecxz
sbb
mov
out
in
mov
mov
fiaddl
loope
jnp
out
ljmp
pusha
jb
in
pop
sbb
fld
xchg
jns
scas
shll
pop
mov
rol
adc
dec
insl
stc
add
xchg
popa
cltd
or
cmp
pushf
mov
sbb
ret
mov
arpl
add
in
pop
lret
push
stc
ror
shlb
scas
mov
adc
mov
cmp
daa
mov
jnp
mov
xchg
jnp
in
aaa
cmp
cs
mov
icebp
xchg
rcll
and
flds
popf
enter
xchg
stc
inc
and
push
push
pop
pop
jae
ret
pop
mov
xchg
and
loope
aam
test
mov
sbb
sub
lret
pop
push
cmpb
or
testb
xchg
xor
popa
shrl
sbb
mov
bound
add
aad
jecxz
push
xchg
mov
xlat
mov
dec
out
dec
loope
push
enter
fisttps
inc
loop
mov
inc
xor
xchg
outsb
mov
aad
dec
ret
xlat
sub
hlt
cmp
adc
mov
push
push
addr16
ret
add
mov
or
test
sbb
mov
pop
mov
fwait
push
lret
ja
sbb
lahf
sbb
mov
jae
sub
fucomp
pop
cmc
dec
xchg
xchg
add
sti
jecxz
shlb
xchg
xor
sbb
pop
das
mov
dec
mov
and
mov
jl
cmp
mov
icebp
add
cmp
ds
inc
sbb
addr16
push
rcrl
divb
js
lea
push
mov
lcall
pop
push
fnstenv
add
sti
dec
push
sti
xor
roll
rcrl
jge
clc
out
sub
cmp
cmp
into
sub
aad
mov
bound
push
out
xor
push
or
and
mov
out
sbb
or
pop
sub
and
fisttpll
sub
push
dec
ja
push
sbb
sbb
push
pop
scas
inc
mov
enter
mov
jns
jo
lods
jne
scas
aas
outsb
mov
jns
call
xchg
sbb
pop
mov
mov
sbb
lret
xchg
mov
test
fcomps
push
pop
inc
or
fincstp
jo
out
add
sbb
push
inc
dec
xchg
ficoml
pop
loopne
pop
pop
pop
clc
jne
clc
dec
fwait
bound
data16
cmp
repz
in
nop
and
and
or
xchg
jo
cmp
jno
jecxz
mov
clc
mov
mull
cmpsl
icebp
call
add
mov
mov
xor
mov
xlat
cmp
aad
xchg
pop
inc
aam
lahf
dec
loop
inc
add
data16
mov
es
fstpl
sahf
xor
sbb
push
mov
adc
inc
rcrb
inc
or
movsl
mov
jno
lods
push
jnp
mov
ja
enter
addr16
xlat
cmpsl
mov
xchg
sbb
enter
dec
xchg
inc
or
push
mov
test
xor
cmp
mov
ds
daa
fs
cld
fdivrl
lock
push
sbb
pop
dec
sbb
jecxz
and
mov
std
dec
aas
mov
aad
or
test
sub
xchg
hlt
dec
arpl
cmc
jb
sub
cmpsl
xchg
outsl
xor
aaa
pusha
divb
mov
sub
scas
flds
stos
lret
imul
icebp
negb
shlb
stc
fldl
popf
cmc
pop
out
add
rclb
dec
xor
sahf
shrb
ret
cvttps2pi
ret
lcall
dec
and
jnp
cmp
xchg
adc
call
out
cmp
mov
jl
out
das
xchg
push
mov
jle
pop
test
xlat
hlt
imul
bound
mov
dec
testl
sub
scas
scas
add
sub
pop
outsb
push
negb
dec
cmp
cld
rcrl
lcall
mov
shr
and
in
push
jnp
adc
ret
bound
mov
scas
rcr
mov
mov
fstp
jno
dec
ret
xchg
jmp
stc
push
push
inc
pop
inc
in
shl
mov
mov
iret
aad
or
lods
inc
xchg
mov
push
fldenv
jl
xchg
dec
xor
fcomi
push
and
add
sbb
lods
adc
pusha
in
pusha
int
lret
addr16
mov
fcompl
ret
cmp
and
push
orl
enter
stos
iret
cmp
jp
xchg
rorb
sub
es
fcomps
push
imul
mov
inc
clc
sub
adc
insb
lods
xchg
sbb
adc
jno
mov
out
jo
xchg
pushf
push
pop
add
mov
jmp
or
pop
arpl
xor
lods
movsb
movsl
addl
dec
sti
test
inc
dec
sub
popa
sbb
sarl
leave
ljmp
lcall
push
dec
gs
sarl
int3
inc
in
and
sbb
cs
repnz
enter
push
jl
pusha
sub
outsl
sbb
shl
and
psrlq
addr16
add
shll
dec
test
lcall
pop
adc
or
fwait
cmpsl
pop
mov
xchg
sub
loopne
in
scas
or
and
aas
mov
jne
jno
aas
xor
sub
pop
cltd
sarl
stc
adc
cmp
sbb
xchg
sti
sbb
loopne
mov
adc
mov
mov
nop
adc
into
ja
bound
shlb
add
fidivs
enter
xchg
leave
pop
lds
out
dec
adc
adcb
lea
out
adc
and
sahf
test
adc
loop
inc
cmp
testl
scas
push
pop
test
adc
aas
std
ds
fnstsw
add
jl
adc
ja
clc
and
andl
notb
dec
or
inc
mov
mov
cmpsb
test
xchg
xchg
mov
insl
push
ds
das
sti
test
loop
fnstsw
fistl
xor
xchg
enter
out
jns
push
lret
mul
jae
inc
hlt
sbb
pop
out
loopne
or
inc
pop
mov
fistl
icebp
push
dec
inc
add
sbb
shrb
mov
xchg
fiadds
adcb
in
sub
jno
xlat
mov
xchg
bound
dec
add
sub
loopne
into
nop
and
stc
mov
mov
cltd
mov
xor
adc
test
cwtl
std
push
jl
and
xchg
mov
fcom
lahf
outsb
cmp
inc
xchg
into
adc
jmp
mov
gs
ret
and
into
sub
dec
inc
js
js
xor
in
dec
xor
jae
stos
jno
xchg
lods
pop
test
scas
mov
repnz
pusha
and
ja
mov
jno
repz
mov
cld
fmuls
fdivr
test
xor
cmpsl
sub
cs
push
mov
push
in
cs
rorl
test
scas
je
inc
adc
out
push
mov
pop
sub
sbb
cld
mov
int3
add
mov
or
aas
fldcw
cld
test
mull
cltd
ds
xchg
mov
stos
add
int3
xchg
inc
popa
subl
cmpsb
icebp
fmuls
mov
adc
fcomip
mov
fstl
mov
jmp
adc
data16
mov
xchg
add
or
movsl
fcomi
cmpsb
sahf
sub
fwait
cs
push
dec
pop
mov
loopne
sub
test
arpl
jg
into
mov
adcb
mov
adcb
inc
call
aas
scas
xchg
test
orl
cmp
iret
xchg
xor
inc
sti
adc
test
idiv
dec
jmp
aas
fisttpll
sbb
flds
fwait
divb
mov
inc
aaa
insl
fcmovbe
ret
cmp
pop
shlb
jno
lcall
add
jbe
xchg
mov
imul
orb
mov
repnz
jno
stos
in
jp
pushf
mov
fidivs
rolb
add
or
cmp
jp
jb
dec
movsl
jns
shll
test
mov
aad
mov
in
sub
addl
pop
aad
cmpsl
out
pop
loope
xor
and
ret
loop
js
ror
jno
cmp
and
jo
pop
sbb
xchg
jns
out
movsb
cmpsl
adc
test
push
xor
test
xchg
loopne
nop
pop
add
add
out
pop
sub
data16
sbb
rolb
jp
sub
and
adc
out
add
push
movb
inc
insb
mov
ret
cmp
inc
mov
orl
mov
mov
jbe
nop
and
fidivs
jg
cwtl
lock
adc
mov
cs
push
mull
and
sti
push
xchg
int
jo
lcall
lods
cmp
or
sbb
mov
inc
pop
enter
mov
sbb
cmp
xor
push
jo
push
cmc
fiaddl
test
inc
push
filds
enter
adc
jns
sub
dec
jge
imul
das
mov
xchg
sti
outsb
negl
xchg
fdivs
xor
push
or
xchg
xlat
jb
add
popa
hlt
jl
sbb
push
mul
bound
jb,pt
into
or
scas
bound
lcall
mov
daa
inc
sarl
test
mov
fstpl
push
cli
dec
lods
push
cmp
push
js
ret
dec
adc
inc
adcl
xchg
mov
mov
adc
push
ret
enter
sbb
iret
pop
mov
jo
jecxz,pn
dec
fldl
jl
adcb
sub
pop
fdivrs
xchg
int3
int3
ret
xchg
cld
stc
loope
dec
scas
add
xor
sbb
xchg
sahf
jp
mov
mov
push
cmp
enter
jo
fdivr
xor
fidivs
mov
ud2
mov
pop
stos
sub
subb
sbb
pop
loope
pop
lahf
and
icebp
ret
adc
and
aam
test
xor
push
out
xor
xor
sbb
and
xor
rcll
es
subb
push
enter
push
pop
sub
stos
ds
push
xchg
outsb
inc
dec
pop
clc
outsb
sub
aam
je
cld
mov
iret
cltd
jecxz
mov
iret
mov
or
mov
in
xor
popf
sub
je
dec
out
int
cli
js
ror
push
hlt
fadds
jo
pop
iret
mov
in
jnp
jno
fwait
push
mov
in
inc
mov
cs
sbb
test
mov
sbb
movsl
and
push
pop
inc
ret
sahf
dec
lock
notb
aas
call
lock
add
sub
push
les
jl
adc
stos
ja
xor
imul
push
xchg
adc
mov
jp
cmp
cmc
xor
sub
jmp
and
mov
jl
inc
dec
fstl
aam
pushf
inc
call
adc
out
dec
sbb
mov
xor
lahf
push
sub
or
daa
repz
and
iret
outsl
cmpsb
and
in
insb
and
rcll
jo
pop
mov
dec
cmp
outsl
xor
sub
ljmp
dec
jge
adc
inc
lfs
pop
inc
jo
sbb
fstl
mov
orb
cwtl
aad
push
subb
dec
mov
add
mov
loop
sahf
fisubrl
out
int
cmp
jo
fs
aam
out
mov
and
push
pop
sbb
lret
pop
push
sub
push
pop
sub
pushf
push
repz
pop
jae
jge
dec
lds
adc
inc
fwait
ja
or
cmc
sbb
dec
xor
and
mov
mov
cld
mov
addb
test
jle
shr
loope
ja
loopne
int3
insb
xchg
sbb
mov
sbb
dec
sbb
ret
stc
mov
fdivrs
adc
mov
shl
fcompl
stos
xor
jge
or
in
test
rorb
std
ss
push
add
negb
cmp
pop
pop
scas
scas
orb
dec
cmp
jne
adc
repz
les
adc
cwtl
psadbw
movsl
cmp
das
shrl
and
test
and
dec
in
std
stos
or
punpckhdq
orb
imull
loopne
fs
dec
mov
stos
call
ljmp
mov
sub
mov
push
leave
mov
clc
or
xchg
and
or
and
jecxz
dec
sarl
pushf
inc
fcoms
cs
fwait
adc
inc
aas
push
push
jbe
xor
orb
pop
xor
push
sub
mov
ds
mov
daa
or
push
add
pop
mov
add
and
pop
test
dec
jl
push
mov
add
int
sbb
dec
imulb
enter
pusha
sbb
dec
test
mov
je
jns
faddp
xor
mov
fldenv
ret
pop
sbb
stc
aas
pop
pusha
or
add
dec
dec
cmp
call
cmp
inc
cmp
sbb
rcr
in
mov
pop
mov
ljmp
fstl
movsl
xchg
jnp
fmull
iret
xorb
gs
xchg
loopne
jbe
mov
mov
xchg
popa
fistpl
out
int
pop
gs
mov
out
inc
sub
add
js
vminps
mov
dec
popf
push
insl
in
cmp
xchg
or
outsl
lret
mov
push
sbb
cmpsb
ds
inc
dec
mov
mov
cli
cld
aam
arpl
and
cmp
jne
mov
jne
lods
sbb
lods
xor
dec
lds
xchg
mov
xchg
mov
mov
addr16
pop
push
je
xchg
movsl
stos
out
mov
mov
addb
fildl
sub
cmpb
lods
xchg
mov
or
lret
xchg
pop
pop
dec
mov
adc
and
mov
outsl
push
insb
and
xchg
lods
fnstenv
mov
jae
shlb
jno
mov
mov
jle
sbb
pushf
outsl
adc
int3
and
adc
xor
lret
xor
in
mov
test
aad
xchg
sub
sbb
out
fs
inc
lock
data16
das
movsb
xchg
and
into
in
lock
jno
insb
pop
imul
mov
insb
iret
or
jp
fdivr
enter
ds
and
xchg
nop
and
incb
and
sti
pop
mov
pop
jg
popa
jns
xor
mov
lret
jp
jnp
and
inc
inc
adc
mov
lret
pushf
pop
sti
into
jo
pop
jns
in
jo
or
fwait
nop
shrl
mov
xor
push
clc
jbe
adc
lds
inc
mov
es
or
data16
imul
xor
ja
jbe
bound
out
fdivrl
sbb
dec
jae
add
idiv
sbb
popf
jp
gs
sub
hlt
mov
mov
and
test
mov
cld
and
outsb
push
lret
mov
lds
jp
pop
jbe
fsts
dec
sub
pusha
rcrb
pop
sbb
add
repz
and
insl
rcrb
pop
pop
sub
lcall
jns
pop
jno
jg
das
lret
test
popa
add
xchg
dec
push
and
push
cmp
add
aaa
scas
dec
adc
dec
dec
sub
inc
sbb
loope
mov
stos
movsl
pop
push
divb
inc
mov
les
jo
lods
jnp
pushf
aam
outsb
xchg
cld
daa
scas
pop
js
cltd
and
add
lods
push
pop
and
mov
out
or
mov
mov
in
pop
jno
popa
xchg
xchg
daa
sbbb
fsubrl
mov
pop
loop
mov
mov
clc
xchg
lock
testb
stc
movsb
jnp
pushf
adc
pop
cmp
push
fldcw
xchg
js
js
push
mov
cld
inc
nop
testb
jecxz
fs
out
inc
aam
add
cmp
hlt
jmp
cmpsl
imulb
cmpsl
or
sbb
xchg
out
xlat
xchg
xor
fisubrs
fwait
lea
lods
add
repnz
clc
out
dec
inc
and
sub
gs
inc
mov
movsb
cmp
stc
cli
pop
stos
ds
mov
sub
inc
hlt
dec
jns
lret
je
shlb
push
loope
jae
aaa
lods
hlt
dec
icebp
mov
mov
sbb
mov
int3
movsl
outsb
mov
fwait
scas
mov
sub
test
stos
cmp
xor
xchg
or
mov
cwtl
mov
dec
mov
test
or
jns
jne
bound
mov
in
ret
cltd
shr
in
adc
std
sbb
mov
nop
and
imul
fs
mov
or
sub
int
pop
mov
push
cwtl
mov
pusha
rolb
mov
cmp
sub
les
adc
int3
scas
pop
mov
xchg
sti
fucomip
dec
dec
fwait
xlat
mov
sub
jno
icebp
xchg
dec
cmp
push
mov
xchg
pop
out
stos
mov
jns
mov
push
mov
jo
xorl
mov
adc
notb
pop
int3
sbb
sarl
clc
and
jbe
sub
outsb
shll
dec
mov
fimuls
pop
dec
loopne
movsb
enter
push
mov
jmp
decl
fmull
outsl
push
mov
add
int3
lods
icebp
repz
push
fisubrs
or
sahf
add
aas
daa
repz
out
fs
fwait
xchg
mov
push
or
inc
push
add
push
popa
dec
mov
cmp
xchg
in
jle
push
mov
sbb
movsl
xchg
mov
mov
cld
int
push
sub
aam
xchg
in
movsb
jmp
lret
mov
pop
data16
push
or
inc
cs
push
xchg
mov
test
push
sti
int3
xchg
sbb
or
cmp
ljmp
xor
inc
mov
pop
xchg
fsubr
std
sub
push
fwait
out
push
cwtl
inc
popf
mov
pop
test
int
mov
sbb
push
jmp
inc
inc
pop
imul
pop
fisubl
decb
roll
mov
andb
lea
std
daa
es
rcrl
mov
loopne
js
lret
xor
jmp
shlb
aad
push
movsl
or
mov
jne
or
mov
jecxz
jne
in
mov
push
sahf
je
test
dec
addr16
mov
mov
dec
pop
inc
out
sub
stc
shll
leave
out
pop
and
mov
mov
icebp
aaa
xchg
sbb
xchg
sbb
lds
mov
popa
rorl
and
in
mov
add
push
sbb
push
cmpsb
pop
lcall
popa
sub
pushf
mov
mov
mov
addr16
adc
mov
mov
push
int3
into
adc
cmp
pop
pop
lock
insl
ljmp
add
adc
sbb
adc
imul
int3
call
jo
shlb
mov
dec
add
insb
push
mov
daa
push
push
xchg
ljmp
dec
sbb
cmc
or
mov
adcl
pop
or
pushf
gs
std
nop
into
push
adc
add
je
xchg
mov
mov
cmp
mov
rclb
popf
pop
or
outsb
xchg
repz
out
sub
fs
loopne
or
push
or
mov
push
icebp
jecxz
inc
jp
mov
adcl
je
pop
mov
hlt
cwtl
pop
scas
sub
pop
inc
leave
jmp
scas
add
sbb
ret
add
inc
test
testb
aaa
add
cmp
pop
and
or
loopne
mov
push
push
sbb
or
mov
xlat
sub
xor
adc
mov
xlat
aaa
in
push
pop
dec
dec
pop
sti
in
sbb
lret
mov
mov
repnz
popf
jns
lcall
test
jno
dec
dec
and
mov
xchg
movsl
fldenv
stc
cmp
mov
sbb
dec
sarb
cmpsb
mov
scas
cltd
mov
pop
adc
xchg
leave
stc
rorl
cmp
mov
je
mov
pop
push
add
sbb
xchg
xchg
loop
jae
mov
enter
dec
jns
pop
subb
push
fldt
stc
das
out
jo
mov
mov
fcmovnu
imulb
xchg
cld
push
sti
fisttps
fdivrs
out
cmc
add
xlat
popf
pop
xchg
xorb
jb
or
jnp
dec
movsb
pop
movl
fidivl
sub
cmp
lock
cwtl
xchg
es
scas
inc
mov
mov
popf
jl
xchg
cmp
in
call
js
jge
lret
out
loope
mov
lea
xchg
jns,pt
inc
mov
inc
hlt
outsl
ret
dec
xchg
inc
and
cmovns
loop
jle
lret
mov
xchg
and
add
jecxz
and
les
ret
mov
sahf
int
inc
inc
push
sub
pushf
jl
sub
cld
cld
and
fldt
icebp
out
jmp
test
mov
cmc
jecxz
dec
sbb
sub
inc
pop
pop
jns
rcrb
inc
lahf
test
mov
fisubrs
shr
int3
mov
cmc
jae
in
cmp
jne
imul
in
lret
fsubs
push
jne
xor
adc
iret
fstps
fistpl
inc
fwait
add
sbb
movsb
in
mov
mov
icebp
sti
lods
test
pushf
cmp
pop
aas
inc
adc
push
xchg
cmp
test
js,pt
dec
xlat
subl
xchg
ror
mov
mov
push
jae
cli
aam
dec
mov
cmp
adc
pop
movsl
or
push
add
pop
add
dec
inc
lcall
ret
jae
cli
push
push
loop
cmp
pop
fists
fcmovb
dec
addr16
adcl
pop
mov
adc
hlt
mov
xor
cmpsb
out
nop
xchg
lods
pop
loope
mov
stos
mov
pushl
inc
fnstsw
out
cmp
stos
leave
fidivl
cmp
jg
and
orl
js
jmp
xor
scas
loop
mov
jne
sub
inc
sarl
cmc
cld
fidivl
sbb
push
xchg
sub
dec
testb
xor
nop
leave
inc
cltd
mov
pop
loop
imul
aam
mov
lods
or
and
push
dec
xchg
test
push
dec
sar
jne
test
xchg
test
xor
push
stos
jg
mov
fdivrp
testl
or
adc
sbb
popf
test
mov
xor
outsb
js
into
push
jo
cld
or
movsl
std
test
mov
xlat
cmp
addr16
xchg
xor
sub
bound
ljmp
gs
lahf
shrb
sarb
rorl
sbb
sti
and
fnsave
mov
imul
sbb
shl
sbb
iret
fdivl
in
insl
inc
cmp
ficomps
add
ret
sub
ss
mov
inc
outsl
shl
and
xor
add
sbb
es
inc
mov
and
xor
inc
cmp
mov
iret
cmp
jge
inc
jg
pop
les
lcall
mov
or
out
push
hlt
push
imul
jnp
or
cmpsl
mov
outsl
es
push
cmp
stos
das
arpl
xchg
loopne
fninit
pop
mov
cs
xchg
push
cld
xor
sbb
sub
mov
nop
cli
pop
lret
sub
jns
or
cmp
loopne
or
pop
cmpb
daa
data16
mov
std
in
lea
xchg
mov
jo
mov
test
sub
mov
jmp
adc
or
aad
pusha
push
cwtl
loopne
xlat
dec
test
clc
cwtl
xchg
cmp
cmp
push
jmp
inc
ret
sub
sub
add
ds
and
add
xor
shlb
fdivrl
ds
push
mov
lahf
dec
cmp
ds
andl
fwait
or
loope
jne
cmpsb
xchg
xchg
push
xchg
xchg
ds
inc
inc
or
mov
insb
xorb
cmp
pop
data16
sti
mov
arpl
jmp
cmpsb
aam
pop
cmp
mov
cmp
sub
mov
stc
mov
cmp
adc
or
push
cmp
aaa
xor
repnz
scas
add
imul
pop
imul
mov
xchg
shll
add
in
cmpsb
bound
popf
mov
mov
sub
jp
or
mov
add
mov
xchg
imul
inc
insb
mov
lahf
rorb
push
je
lock
add
or
aam
out
jl
dec
or
sub
or
aam
mov
or
pop
push
int
jb
jae
arpl
mov
jb
mov
lds
insb
addl
mov
mov
int
inc
xor
test
mov
aad
and
xchg
xchg
or
cs
push
mov
cmpsb
mov
inc
add
sbb
lods
je
fcomps
fs
loope
aad
rcr
clc
lock
add
xchg
test
pop
mov
std
outsb
cmp
loope
jae
sbb
pusha
loopne
add
mov
lock
test
adc
jno
jnp
pop
sub
add
fcoms
xchg
pop
repz
add
call
shrb
punpckldq
rol
int
mov
and
xor
mov
insl
and
and
xchg
iret
dec
or
and
jb
mov
sbb
mov
adc
pop
lock
fisubs
jne
inc
inc
mov
out
in
aam
sbb
dec
xchg
std
adc
ljmp
push
stc
push
mov
xchg
adc
incl
adcl
bswap
idivl
and
dec
and
leave
lock
pop
xchg
loope
int3
std
hlt
pop
mov
pop
std
pop
xchg
out
add
sbbb
fdivp
ja
subl
jae
cmp
lea
lcall
bound
imull
scas
iret
negl
and
cmp
adcl
daa
or
in
sbb
and
xchg
push
and
ljmp
fwait
adc
inc
popf
lea
push
outsb
sbb
mov
push
mov
xor
adc
mov
mov
jo
aaa
push
aad
aam
fstl
jle
inc
fisttps
std
jns
sub
hlt
sarl
push
mov
and
mov
cli
xor
cmp
es
in
mov
and
lcall
and
add
adc
call
mov
mov
test
jg
jo
out
xor
leave
int3
xor
enter
ja
pslld
fisttps
pop
jmp
mov
int
into
rol
dec
arpl
dec
push
jecxz
lret
mov
lahf
or
rorl
jl
add
repnz
popf
xor
xchg
add
mov
or
sub
xchg
cmp
cmp
outsb
jbe
mov
mov
mov
ds
lds
jmp
add
push
ds
add
lock
xchg
add
xor
kmovw
dec
outsb
jp
fdivrl
and
cmp
sbb
fnsave
gs
fstpt
mov
test
mov
mov
and
inc
mov
out
test
ds
inc
inc
push
pop
add
lcall
imull
fdivs
les
jmp
loop
adc
subl
fcoml
out
popf
cmp
xchg
xlat
sbb
arpl
loopne
dec
in
pushf
push
pop
xchg
into
cli
pop
cmp
push
xchg
xchg
and
dec
push
lock
das
cmp
sub
and
arpl
popa
pop
hlt
mov
insb
push
pop
dec
fwait
jle
out
inc
mov
in
pop
mov
add
dec
test
mov
pop
mov
sub
enter
dec
cltd
mov
sarb
add
loope
cmpsb
xchg
movaps
cmp
pop
cwtl
pushf
punpckhwd
jo
dec
cmc
mov
mov
mov
popf
repnz
aaa
movsb
pop
leave
popa
mov
sbb
add
mov
stc
jle
dec
sbb
pop
mov
fdivs
pop
sub
xor
and
hlt
mov
shrl
mov
into
lret
sar
nop
ljmp
jmp
outsl
lock
out
lcall
mov
mov
xchg
in
outsl
adc
lds
pushf
or
push
adc
out
fwait
pop
xchg
jecxz
xchg
arpl
fstl
adcb
add
sbb
add
clc
cltd
dec
out
add
mov
xor
pop
test
shlb
nop
pop
xor
add
test
adc
mov
push
mov
mov
jl
loop
iret
je
lods
dec
popa
jg
jae
inc
fdivl
fdivl
sub
jmp
fsubl
js
jle
fsts
clc
movsb
or
jae
push
xchg
rorl
sbb
bt
loopne
or
repnz
sti
outsl
mov
pop
stos
ret
jecxz
divb
push
fstp
addr16
test
lahf
mov
adc
xor
mov
or
xchg
jnp
push
xrelease
cs
sub
pop
inc
ja
xor
sahf
jae
jns
repz
pop
jno
clc
movsb
arpl
pushf
popf
imul
sbb
shl
mov
pop
lods
push
pop
sub
lcall
js
in
sbb
negb
in
sub
and
jmp
out
dec
mov
clc
cli
adc
jae
scas
push
jmp
cmp
es
mov
mov
xchg
shrl
pop
mov
dec
fs
adc
cmovns
adc
or
ror
lods
add
fwait
scas
mov
insl
push
loope
mov
iret
and
mov
adcl
adc
loopne
xor
repz
lds
pop
mov
inc
push
jbe
lret
and
inc
gs
cld
jle
inc
stos
sub
fisttpl
icebp
cmc
mov
push
insl
fmuls
pop
hlt
mov
pop
mov
test
adc
push
jns
jl
add
movsl
xlat
pop
enter
mov
mov
jno
cmp
pusha
in
xor
jg
mov
gs
push
movsl
aas
add
out
inc
jns
mov
in
addl
dec
push
add
sbb
pop
or
adc
loop
cwtl
xchg
or
inc
out
xchg
mov
fcmovbe
nop
and
add
adc
jns
push
mov
in
cmp
jecxz
sub
arpl
pop
mov
loopne
lods
sahf
and
push
add
insl
hlt
lea
mov
push
cmpsb
dec
ret
aam
movsb
test
int3
mov
mov
add
mov
add
mov
sub
dec
and
adc
sahf
jg
mov
dec
xor
loop
push
cmp
push
sub
popf
rcrl
cwtl
mov
jne
and
or
and
mov
push
push
xor
pop
lods
adcl
jbe
movsb
test
xlat
aam
lock
jb
pop
cmpsl
sub
cltd
fisubl
mov
adc
jg
jmp
data16
and
and
in
ds
cmp
je
ljmp
imul
dec
and
cs
clc
lahf
icebp
adc
add
jle
inc
fwait
int3
ja
aad
and
adc
inc
push
in
xlat
mov
mov
lret
ja
mov
data16
lret
push
xchg
jno
or
xor
pusha
jg
and
out
pop
jg
dec
pop
mov
je
outsl
jae
cmp
in
jmp
push
es
sbb
and
jne
adc
xor
sub
sarb
in
mov
lret
dec
or
sub
add
lods
outsb
push
out
gs
pushf
int3
mov
frstor
xchg
xchg
sbb
xchg
nop
adc
mov
cmpsl
sub
lret
push
data16
ljmp
lds
sub
pop
lods
out
sub
xor
and
dec
insl
sbb
add
and
adc
sbb
jae
fisttps
push
stos
jmp
aad
mov
adc
stc
push
cmp
lea
cli
out
ret
shll
imul
mov
cwtl
mov
adc
incb
cmc
and
clc
mov
js
pusha
pop
out
or
lcall
pop
cmp
in
js
jo
cmp
jmp
mov
fidivs
fdivrs
daa
pop
cmp
nop
repnz
sbb
mov
jmp
leave
push
push
push
and
push
insl
jne
hlt
iret
mov
ss
add
add
mov
jno
ror
add
rcr
mov
jo
rcrl
stos
push
arpl
repz
adc
xor
mov
dec
ljmp
xchg
test
enter
jns
test
out
or
lea
adc
popw
mov
mov
pop
cmp
dec
mov
rcll
imull
shll
or
jbe
out
inc
aad
and
cmp
lret
cwtl
lods
sbb
arpl
mov
jo
mov
mulb
fisubl
das
pop
fcompl
mov
push
leave
in
call
lock
xor
push
jno
aam
inc
cwtl
sbb
or
fisubrs
dec
adc
push
enter
cmp
lcall
rcll
add
insl
pushf
stos
push
ror
mov
push
aad
xlat
pop
test
sbb
jg
mov
jecxz
or
clc
cmc
sub
adc
mov
sub
and
or
adcb
bound
mov
push
cmp
mov
out
data16
negb
xchg
fidivrl
xor
add
movsl
imul
inc
mov
dec
cmpsl
dec
lods
addr16
jmp
iret
sbb
cmc
push
or
lock
mov
push
imul
mov
sbb
arpl
pop
add
das
cld
test
fcomps
lods
mov
push
jb
push
fldcw
pop
icebp
ss
pop
lods
je
aas
cmp
xchg
mov
adc
mov
lock
xor
cmc
push
pop
scas
jns
out
cmp
movsb
mov
lahf
loop
lcall
ret
sbb
lcall
push
cmc
dec
push
imul
cmpl
stos
or
clc
cmp
adc
insl
incl
loopne
int
push
sub
rclb
and
xchg
shrb
fisubl
sub
out
mov
arpl
into
xor
xor
push
lret
in
dec
fdivs
imul
mov
js
aas
mov
cli
test
jle
scas
call
clc
jle
pop
iret
pushf
mov
icebp
cmp
pop
mov
orb
add
jns
dec
dec
iret
jnp
mov
faddl
and
rolb
fildl
ret
inc
cwtl
out
fmul
fs
std
lock
add
push
int
scas
or
inc
insl
lods
shlb
fstpl
jbe
mov
mov
roll
ret
insl
cltd
popa
sub
xchg
and
cwtl
xchg
into
pop
jmp
push
dec
scas
mov
arpl
sub
pop
xor
ds
adc
add
ficoml
mov
stos
add
cs
lds
outsb
movsl
pop
repnz
aas
insb
in
sbb
inc
xchg
mov
insl
negb
inc
stc
in
push
mov
ljmp
repz
fucomp
xchg
pop
adc
in
test
ja
push
jns
adc
in
xorl
inc
movsl
out
icebp
into
gs
add
cmp
cmpsb
or
shll
lods
sbb
icebp
into
aam
mov
cmp
jne
cwtl
sbb
jmp
insl
rcrb
dec
cwtl
cmp
mov
jne
iret
push
cmp
pop
jbe
je
sti
xchg
mov
shlb
fcompl
into
in
mov
pop
push
jl
mulb
and
stos
pop
out
jg
mov
leave
xor
lds
fcmovbe
sub
jg
inc
cmp
lret
mov
fdivs
mov
dec
int3
dec
es
pop
or
and
das
cwtl
je
cmp
rcrb
and
or
sub
dec
fdivp
xor
fmuls
add
push
out
mov
inc
mov
push
push
lret
cmpsl
and
jg
dec
int3
mov
mov
inc
push
inc
aas
daa
insl
aam
out
xor
mov
inc
pop
and
mov
mov
and
std
lcall
ret
pop
mov
popa
xlat
push
mov
arpl
or
push
loopne
mov
std
loope
sub
in
les
mov
push
subb
dec
iret
dec
mov
out
aas
jmp
and
xor
mov
add
cmpsb
mov
cs
psrld
mov
pop
in
ds
lret
and
rcr
add
jge
jg
daa
icebp
sti
popa
and
mov
out
nop
jo
cli
push
mov
sbb
int
jae
into
repnz
iret
fsincos
inc
jnp
mov
xchg
jns
ret
stos
out
out
es
xchg
notb
stos
inc
in
mov
icebp
mov
icebp
xor
ficoms
neg
pop
icebp
lods
loop
xor
mov
push
in
sub
push
adc
and
sahf
and
cmp
push
mov
jb
sub
mov
push
lcall
test
and
in
xchg
test
hlt
xor
mov
dec
cwtl
pushf
or
cwtl
ror
pop
push
add
rol
xchg
data16
imul
bound
out
repz
xchg
int3
js
xor
jo
std
popf
stc
ret
mov
ljmp
xchg
mov
xchg
repnz
dec
push
xor
shlb
mov
add
mov
jecxz
shll
call
out
les
movsl
jbe
dec
push
and
movsb
int
hlt
in
test
jecxz
mov
or
sbb
sub
je
out
or
ret
sub
fidivrs
leave
std
aad
cmpsb
sarl
xchg
mov
mov
cmp
notl
iret
repz
cmp
adc
ret
mov
mov
push
adc
pop
jg
in
stos
test
pop
push
stos
es
sarb
cmp
adc
mov
push
nop
push
mov
fists
mov
mov
cs
jmp
xlat
mov
lds
shrl
lahf
pop
pop
imul
stos
jno
cltd
mov
sbb
stc
and
cld
aad
and
push
cltd
scas
rolb
scas
sub
fucomp
int3
and
add
push
out
mov
mov
mov
cmpsb
fwait
dec
in
loope
mov
jbe
mov
pop
imul
add
scas
mov
xchg
push
add
icebp
fcmovbe
mov
push
mov
fnsave
pop
push
pop
and
lock
inc
pop
ret
clc
push
icebp
outsl
cmp
movb
out
outsb
ror
sub
xor
jo
mov
mov
pop
jp
aam
cmp
dec
cmp
sbb
mull
in
xchg
inc
int3
ret
daa
or
cmpsl
push
adc
jno
mov
push
lret
cmp
add
ds
adc
aam
or
xchg
repz
fs
sbb
xchg
out
jbe
push
adc
out
adc
push
sti
scas
fidivrl
rcrl
sub
adc
cmc
daa
push
into
into
les
fldcw
push
or
jno
lret
gs
push
rcll
out
xchg
mov
push
mov
data16
sbb
mov
fsub
iret
stos
out
push
je
es
test
rolb
cmp
nop
test
adc
jle
repnz
cmc
cltd
push
data16
rorb
aas
and
lds
inc
xor
or
mov
and
jne
pop
test
fdivrs
out
mov
adcb
or
inc
popf
or
mov
push
jns
mov
mov
outsb
stos
daa
sub
push
add
in
sub
imul
mov
shrl
mov
inc
xchg
add
das
aas
lret
mov
adc
lds
xor
sub
xchg
shll
inc
push
sub
daa
inc
cltd
aas
jne
nop
cld
cmpsb
mov
cli
push
sub
sbb
pop
leave
dec
push
push
ja
ret
mov
pop
out
clc
pusha
dec
push
adc
pop
jae,pn
stos
leave
repz
sbb
sub
xlat
fidivrl
aad
fwait
or
adc
les
sbbl
rolb
cmpsl
fnsave
std
inc
xchg
pushf
cmp
cld
cmp
cmp
push
pop
cmp
or
adc
xbegin
pushl
pop
cli
lret
lahf
repz
xchg
pop
lret
jl
cli
insb
xlat
or
and
mov
ja
std
vcomiss
jno
popa
xchg
ret
push
aaa
mov
aad
lods
fdivrs
pop
imull
addps
dec
jmp
xor
dec
arpl
mov
lds
xchg
popf
or
push
cltd
enter
in
or
mov
push
rsm
fwait
lret
testl
mov
adc
out
push
jo
mov
addr16
mov
push
insl
add
aad
subl
xchg
xchg
and
scas
sbb
cmp
fwait
jne
mov
add
fldcw
loopne
xlat
loop
push
push
xchg
pop
insl
lods
mov
adc
les
inc
lods
out
inc
and
in
aas
cmp
imul
ds
and
ret
jns
out
dec
mov
jns
mov
inc
jo
xchg
xor
dec
sub
add
xchg
and
xchg
dec
aam
mov
sub
mov
jne
aam
pusha
cmpsb
cmp
fadd
xchg
push
lods
in
cld
in
popf
jns
roll
adc
popa
push
fisubrs
imul
add
mov
mov
push
mov
cmpsb
xchg
inc
repz
out
divl
jb
rcl
out
scas
and
lds
cltd
jno
jnp
mov
mov
jge
sbb
cvtps2pd
or
das
adc
fldl
push
aas
push
movsb
aaa
push
in
in
xchg
or
push
out
or
testl
cld
stc
ds
xchg
ss
xor
jnp
sbb
pop
or
or
push
int3
bnd
pop
test
popa
scas
lea
pop
push
push
outsl
push
mov
cmp
mov
test
les
sbb
push
pop
sbbl
xor
or
or
mov
movsb
test
mov
inc
mov
sarl
sub
mov
push
adc
sbb
sbb
ss
and
dec
mov
inc
cli
or
divl
push
popf
mov
mov
xchg
mov
std
fadds
fstps
dec
jae
mov
sbb
dec
inc
push
jnp
movsb
pop
mov
rclb
pop
cmp
mov
fs
mov
loop
xchg
and
popf
inc
push
inc
loopne
fs
or
stc
mov
daa
sub
ss
cld
dec
lret
imul
push
sbb
ret
movsl
and
in
dec
sbb
mov
jns
loop
lods
inc
sbb
sbb
lcall
out
dec
ss
lret
sarb
and
jo
loopne
pop
clc
xchg
mov
add
mov
cmp
cmp
loop
ficomps
and
pop
mov
retw
jne
cmp
sbb
test
sbb
xor
mov
xchg
ljmp
insb
sbb
dec
ret
inc
rcrl
cs
dec
and
out
loop
ret
inc
movsb
mov
nop
push
dec
movsl
js
sarb
mov
nop
xor
cwtd
push
pushl
dec
mov
fdivr
imul
sub
mov
pop
lahf
mov
or
ficoml
call
call
xor
sub
aas
and
cmp
mov
stc
outsb
das
fprem
in
xor
cmp
sub
push
ret
inc
push
jle
movsb
insl
ret
mov
xlat
inc
adc
ja
in
mov
or
stos
pop
push
shl
add
andb
push
pop
xchg
add
outsl
leave
fildll
testb
and
in
jl
movsb
aaa
sbb
loope
addr16
sbb
ret
loope
stos
lret
dec
pop
xor
and
pushf
dec
mov
loop
and
shrd
shll
push
js
loope
cli
adc
outsb
lods
pop
xor
into
mov
sbb
dec
dec
push
jle
pop
das
xor
jno
or
lock
xchg
adc
bound
and
jns
sub
xchg
inc
cwtl
xlat
in
lahf
inc
leave
and
cmpsb
ja
push
popaw
xor
out
add
scas
xor
mov
pop
xchg
cmp
push
inc
in
test
cmc
movsb
or
pushf
add
mov
xor
dec
or
insb
out
pusha
adc
sub
push
or
scas
dec
xchg
xchg
insb
push
jno
dec
inc
xchg
mov
andl
rcrb
aaa
test
js
adc
negl
sub
mov
popf
sbbb
pop
and
addr16
outsb
pushf
push
and
clc
adc
repnz
das
or
testb
test
add
ja
and
test
cmp
mov
dec
push
xor
or
dec
pop
pushf
jmp
inc
jmp
das
inc
test
pop
icebp
pop
imulb
cs
mov
and
loop
or
decl
shrl
mov
xchg
xchg
add
sbb
add
and
sub
sub
lret
or
adc
xor
sub
push
fs
jns
fs
stos
mov
and
pop
mov
adc
dec
pop
xchg
roll
and
addr16
repnz
insl
clc
cmp
push
repnz
cmp
or
inc
mov
mov
fdivrs
sbb
xchg
adc
sub
add
int3
inc
jmp
insl
push
sub
or
shrl
daa
setl
movsb
xor
aas
cmc
je
popf
mov
and
sarb
mov
imul
xchg
daa
mov
jmp
testb
xchg
scas
lock
sbb
js
xchg
hlt
fstp
cmp
adc
stos
sbb
cmp
mov
out
nop
addb
pop
enter
mov
cld
and
les
inc
cmpsb
push
dec
sbb
mov
sbb
xor
cmp
sbb
sti
cmpsl
pop
out
rcr
jnp
dec
dec
sub
sbb
dec
sub
pop
push
das
int
and
pop
push
cs
movsb
pushf
lcall
sti
out
mov
test
cmpsl
and
pop
xchg
sbb
mov
mov
pop
mov
fucomp
ja
mov
jb
and
pop
mov
jle
lret
sbb
sbbl
fnstsw
andl
test
dec
imul
push
outsb
push
hlt
push
lea
push
idivb
aam
cwtl
ret
and
push
xor
and
lods
aaa
out
sbb
mov
sub
sub
cmp
ret
jo
mov
xchg
cli
push
push
inc
xchg
or
push
dec
cltd
lods
rorb
popf
cmpsl
and
fcmovnb
cld
test
mov
jb
and
or
push
inc
mov
fwait
pop
in
push
jno
lcall
adc
add
popa
mov
inc
bnd
xchg
pop
pop
stos
dec
inc
test
out
iret
sti
jge
inc
inc
ucomiss
inc
ja
jb
lret
ljmp
scas
mov
mov
js
xor
clc
in
inc
cmp
push
dec
scas
std
mov
inc
mov
lock
sub
mov
jge
test
mov
jae
fdiv
ret
sbb
scas
jecxz
iret
int
mov
adc
js
gs
test
sti
aam
pop
mov
mov
cmpsl
dec
mov
dec
xlat
sbb
lods
mov
mov
jbe
jbe
push
ljmp
aad
jo
hlt
dec
leave
mov
faddl
sub
adc
adc
es
or
sub
icebp
or
inc
ljmp
dec
xchg
nop
adc
add
fmul
mov
cltd
adc
aaa
in
sbb
lods
rcr
mov
ret
test
mov
loope
or
mov
push
test
or
xor
push
out
repz
push
jg
push
xlat
dec
lods
mov
inc
rcl
repz
loop
sbb
pop
xlat
xor
es
pop
and
in
push
mov
jb
push
push
cmp
dec
arpl
fldl
int
sbb
dec
sti
or
mov
loop
sbb
addr16
or
test
push
loopne
fwait
mov
adc
repz
call
xor
fidivrl
cmpb
pop
pop
out
mov
aas
lock
push
adc
mov
icebp
xchg
and
mov
jmp
pusha
and
cmc
xchg
in
mov
push
cwtl
les
push
je
test
scas
mov
pop
add
out
pop
out
daa
jo
mov
icebp
xchg
cmc
sti
lods
inc
cmc
lds
cmp
rcll
jecxz
test
ds
out
sbb
mov
pop
sbb
xor
loope
out
nop
test
inc
lds
inc
sub
icebp
sbb
jp
jmp
int
mov
cmp
jle
pusha
lock
imul
xchg
add
int
dec
xor
and
sub
mov
icebp
pop
xor
dec
adc
jg
sbb
mov
jge
int
inc
mov
fsubrs
leave
mov
fisubrs
jae
push
cmp
push
out
xor
mov
fwait
rclb
add
jg
cmpb
incl
push
dec
and
bnd
push
cmp
aad
jle
test
push
jbe
mov
mov
punpckhdq
fcmovne
inc
iret
outsl
nop
in
and
inc
or
xlat
push
fs
cli
push
iret
push
test
mov
insl
imul
adc
mov
lret
cmp
gs
xor
xor
adc
inc
mov
jge
jns
cmp
and
test
out
jo
aas
fwait
rol
sub
std
cld
andb
jge
mov
test
push
mov
mov
fwait
stos
jae
js
negl
xchg
aas
mov
adc
or
pop
mov
xchg
rorl
or
test
ret
arpl
test
dec
stc
or
cmc
call
aas
orb
mov
jecxz
inc
ja
push
adcl
jg
imulb
lods
fsubrs
or
sbb
mov
push
in
push
adc
das
int
sahf
out
out
pop
xchg
push
mov
pop
es
mov
mov
adc
or
popa
adc
out
mov
push
enter
jb
bnd
bound
inc
in
push
adc
int3
aad
fs
loope
gs
add
inc
inc
adc
into
pushf
cwtl
data16
inc
insb
add
mov
inc
andl
mov
outsw
mov
inc
into
dec
sub
add
mov
xor
push
jno
lock
mov
mov
dec
test
and
adc
pop
adc
int
and
xor
adc
sub
jg
dec
call
jg
mov
pop
scas
scas
mov
testl
pop
sbb
cs
adc
pop
sub
cmp
addr16
dec
fcmovb
call
punpckldq
pop
test
xlat
xchg
sub
xchg
and
dec
cmpb
pop
push
ss
push
vpmaxub
jg
mov
lret
sub
imul
push
stos
add
push
pop
lods
icebp
movsb
shrl
dec
adc
out
mov
xor
sbb
adc
jl
bound
adc
push
sti
jno
lods
andb
jge
mov
mov
or
insb
adc
fnstcw
int
push
fwait
and
and
ds
inc
push
mov
mov
sub
pop
in
popa
mov
mov
nop
mov
cwtl
cs
and
dec
mov
push
xchg
and
pop
fldl
div
pop
sbb
movsl
jo
iret
add
rcrb
popf
into
lock
pop
xchg
xorl
insb
in
mov
fcoms
sub
in
sbb
test
clts
in
sbb
pop
sbb
jno
repnz
xorl
xor
sub
mov
cmpsl
call
mov
sbb
add
mov
stos
inc
xchg
test
cmpsb
jg
ret
in
xlat
dec
lods
cld
aam
jb
push
arpl
popa
stos
gs
leave
andl
in
ja
stc
dec
jge
push
mov
xlat
nop
xor
popf
clc
xor
cli
sub
mov
or
loope
aam
mov
pop
ffree
jmp
jle
sub
dec
push
cmp
inc
push
fnstenv
jl
mov
cwtl
cltd
ret
rorb
jmp
or
mov
int
cltd
shll
sub
jns
push
dec
mov
arpl
fldenv
xor
incb
nop
popf
cltd
mov
xchg
push
cld
pandn
mov
adc
data16
mov
xchg
fldt
fstpl
inc
arpl
popf
mov
pop
gs
ret
iret
sub
ret
xlat
fsubl
push
cltd
mov
stos
scas
popf
divb
out
out
xchg
leave
mov
xchg
cmp
cmp
aam
ds
push
call
repz
sub
ficompl
sarl
inc
dec
add
add
lods
pop
mov
leave
nop
jl
lret
xlat
xorl
pop
repnz
push
lea
enter
loope
sahf
xor
jo
imul
xchg
xchg
imul
xchg
pop
or
sti
aaa
jecxz
test
bswap
and
mov
jle
push
fisubrl
incb
movsb
adc
andl
cmp
test
mov
xchg
cmp
out
out
pop
push
sub
fwait
shr
test
arpl
imul
or
push
pop
sti
ja
mov
push
leave
add
iret
shlb
icebp
out
sbb
stc
bound
je
mov
pop
push
das
sub
sub
sub
dec
test
or
mov
ss
out
loopne
inc
adc
push
aad
pop
or
mov
scas
add
clc
push
movsl
dec
repz
loop
xor
push
inc
je
add
fadd
call
int
inc
add
xchg
adc
insl
xchg
out
dec
adc
jp
pop
mov
data16
lret
js
icebp
xchg
fs
jne
je
loope
sbb
mov
xchg
mov
ja
mov
xor
loop
sub
test
or
mov
lea
out
rclb
in
pop
movsl
test
jae
push
push
std
repz
sub
aam
or
andl
inc
or
mov
enter
rcrb
rorb
imull
aam
repnz
andb
push
inc
jne
out
and
cmp
mov
jnp
stos
add
std
jmp
sbb
xor
pop
test
fsub
jecxz
cmc
adc
xor
push
imul
fstpt
cmp
mov
and
dec
jmp
dec
and
std
rorb
test
cmp
add
sbb
sub
dec
jae
adc
int
xchg
or
xor
inc
cld
shlb
mov
scas
fwait
cmp
insb
jbe
pusha
stos
loop
das
jmp
mov
pop
add
xor
bound
js
jbe
sarb
or
jo
std
pop
sbb
jo
and
ficoms
sub
fmuls
enter
inc
inc
pop
sbb
dec
xlat
js
xor
stc
popa
mov
sub
jecxz
dec
movsl
mov
insb
icebp
adc
push
xchg
sub
mov
push
rorl
or
pop
push
xchg
xchg
mov
cmp
in
data16
sub
add
jae
push
mov
pop
cmp
dec
push
push
pop
sub
inc
push
hlt
nop
push
sub
or
js
sub
loopne
push
shl
aad
fsubl
lahf
test
inc
test
lahf
mov
mov
rcr
fldcw
sub
ficoml
pop
xorl
popf
add
imul
movsl
notl
inc
inc
aad
push
dec
xchg
inc
lods
ja
xchg
jb
icebp
outsl
cwtl
into
inc
adc
es
dec
jae
js
sbb
mov
or
outsb
loope
xchg
sbb
rolb
push
and
jl
stos
jmp
push
test
xor
and
pop
sbb
cmp
mov
xchg
daa
insl
cmp
cmp
adc
rolb
cltd
test
mov
mov
push
jg
imul
orb
mov
and
adcl
shrl
jne
push
push
pop
jle
pop
mov
jb
pop
push
mov
add
jnp
aas
jbe
rcrl
and
jo
int
and
in
push
leave
out
popa
imul
sbb
mov
mov
dec
in
sbb
outsb
adc
test
repnz
adc
enter
cmp
in
imul
fucom
add
push
into
aam
sub
push
pop
aaa
out
pushf
enter
test
sbb
jnp
fcmovne
sub
dec
mov
pop
divl
iretw
inc
into
sbb
xchg
inc
push
mov
dec
or
mov
or
mov
dec
pop
scas
jmp
imul
inc
addr16
jle
pop
or
xchg
and
or
stos
add
mulb
dec
neg
mov
out
add
push
out
sbb
aaa
and
pop
mov
jle
mov
ds
daa
dec
jecxz
jmp
mov
stc
mov
cmp
lea
mov
in
dec
push
push
outsl
and
dec
jne
data16
mov
pop
mov
mov
sub
xor
out
fsubrs
insl
mov
les
xor
mov
mov
inc
cli
pop
xor
push
aad
mov
scas
mov
pop
cmp
in
cmpsl
jne
adc
shlb
stos
pop
push
das
adc
mov
aas
inc
cmp
mov
add
push
orl
popa
fdivrs
hlt
cmc
insb
arpl
in
arpl
xlat
adc
insl
jle
jb
outsb
dec
loop
pusha
cmp
xor
adc
pop
pop
out
lods
insl
push
inc
cmc
sahf
jg
arpl
mov
sbb
or
xor
std
iret
jbe
mov
or
imul
sub
jbe
pop
xor
push
cmp
icebp
test
bound
gs
shl
cli
mov
adcl
and
std
xor
adc
outsb
into
outsb
adc
adc
mov
pop
gs
lahf
mov
pop
fcmovb
pop
ret
in
pop
xor
aam
pop
pop
jnp
sbb
adc
jl
mov
out
arpl
sbb
nop
loope
divl
loopne
push
loopne
adc
lahf
bound
ljmp
cmp
out
xchg
xchg
pop
dec
subb
insl
cmpb
pop
fisttpl
movsl
jmp
mov
adc
stos
inc
js
dec
aas
xchg
adcb
sbb
mov
je
decb
mov
outsb
in
pop
inc
pop
adc
out
mov
jns
sbb
mov
sbb
adc
jns
xchg
pop
cmc
je
add
inc
enter
push
jl
add
mov
sbb
out
dec
or
lahf
pop
jns
mov
shll
fcoml
pusha
adc
xor
test
in
cmp
cmp
mov
xchg
mov
dec
mov
std
dec
pop
jae
jmp
icebp
jg
push
sbb
sbb
in
or
in
cld
shll
cmp
lret
push
dec
inc
mov
xlat
push
aaa
sub
xchg
rorl
pop
mov
or
jmp
sbb
repz
pushl
inc
sbb
cs
lret
pop
mov
cmp
shll
lret
stos
sbb
hlt
mov
bound
pop
jmp
daa
lods
lret
xchg
sti
shl
repnz
ficompl
ficompl
xchg
xorb
and
cmp
push
cld
out
out
fsubrl
cmp
inc
sbb
les
in
ljmp
push
leave
repz
or
xchg
sbb
ficoms
inc
lcall
and
aad
rorb
fs
subb
jmp
repz
out
pushf
inc
jnp
cmp
cmp
cltd
fidivrl
in
icebp
lods
insl
shlb
loopne
cmp
cltd
mov
dec
loope
pusha
fidivrs
cmp
andl
xchg
repnz
cs
sub
sub
mov
das
popa
jne
xchg
mov
out
cli
lret
cld
push
out
push
mov
lea
dec
loope
mov
int
mov
mov
xor
adc
lret
cmp
mov
es
bnd
dec
out
jnp,pt
aas
fsts
pop
adc
loope
xor
insb
mov
pop
int
iret
shlb
fstpt
fildl
adc
xlat
shrb
push
sub
mov
jae
fs
out
xor
ret
or
dec
stos
cmpb
sub
fisubrs
inc
jp
xchg
mov
sbb
jne
push
or
push
jno
mov
sbb
repz
pop
jl
inc
jnp
loop
mov
mov
je
mov
test
addl
or
rorl
test
cmp
pusha
scas
xchg
cmpsb
xchg
pop
cltd
dec
adcl
jae
sti
sbb
or
pop
shlb
aas
loop
mov
aam
jbe
xor
mov
insl
add
mov
adc
cmp
xchg
jnp
jp
sti
imull
loopne
stos
jle
aaa
and
fsubrp
hlt
xchg
mov
out
loope
out
and
push
shrl
movsl
mov
and
sub
inc
mov
ret
sub
mov
jbe
pop
sub
jp
pop
ds
bound
inc
sub
cmc
jl
mov
lahf
pop
lea
adc
imul
es
cmc
push
xor
js
mov
push
push
popf
sahf
int3
leave
lea
adc
ds
cmp
loopne
sub
mov
jmp
aad
mov
imul
insl
dec
dec
sarl
sahf
pop
xor
lea
loop
jle
inc
ror
inc
pop
sbb
mov
mov
or
in
fnstcw
mov
or
or
sub
push
fisttpl
mov
inc
cmp
add
xor
sbb
in
adc
or
cmp
hlt
ljmp
js
pop
imul
or
jmp
insb
xlat
xchg
inc
and
lret
and
and
cwtl
cmp
xor
push
loope
cld
int3
stc
mov
sub
lds
clc
pop
jo
cmp
sti
jbe
rcll
mov
mov
hlt
pushf
xchg
xchg
imul
fistpll
pop
pop
jle
pop
cli
mov
roll
cmp
movsb
loop
push
fwait
sub
jge
dec
sub
cld
int3
and
stos
pop
je
lods
jl
pushf
xchg
add
xor
jno
dec
daa
adc
jecxz
xor
pop
data16
xor
cmpsl
push
test
bound
inc
cmp
jbe
sub
ficoms
into
add
cmp
cwtl
mov
ja
sub
mov
mov
inc
jl
negb
jecxz
xchg
xor
movsb
xchg
mov
inc
adc
inc
xchg
arpl
sub
mov
mov
and
sbb
push
adc
scas
aas
xchg
movsl
test
xchg
cmp
imul
inc
pop
add
cmpsb
push
dec
add
or
rolb
imul
andb
frstor
sub
es
cmp
xchg
mov
insl
test
xlat
fdivrl
arpl
or
sbb
pop
add
mov
push
jae
mov
mov
fwait
inc
add
xor
stos
or
adcl
sti
mov
lods
mov
mov
subl
out
add
pushf
call
jbe
test
arpl
cmp
out
dec
mov
xchg
pop
fimuls
hlt
push
rcll
xchg
int
mov
push
cmp
test
dec
lea
popf
stc
gs
pop
out
cmp
dec
mov
leave
aad
cmp
mov
enter
adc
test
jnp
shll
out
and
and
in
mov
arpl
jge
out
jae
fdiv
pusha
or
mov
mov
fcmove
std
movsl
cwtl
adc
ret
fwait
popf
or
outsb
std
pop
adc
cmpsb
cmpsl
mov
dec
int
lret
loope
scas
daa
call
pop
lret
movsl
jne
movsl
cmp
xor
imul
mov
call
push
stos
jle
xor
mov
push
xchg
push
push
in
shll
jne
jo
test
xchg
out
jae
mov
add
jnp
inc
std
sbb
jne
or
idivl
ret
sbb
cmc
std
mov
xor
stos
add
pop
or
or
jb
iret
dec
sar
push
mov
pop
loope
adc
addb
pushf
add
jmp
lret
mov
fwait
ret
cli
inc
out
mov
sub
or
insl
adc
imul
nop
or
mov
stc
sahf
rclb
les
arpl
xorb
cmpsl
push
pop
iret
mov
mov
or
aas
popf
int3
cmpsl
btsl
adc
sub
mov
jmp
pop
aam
jmp
mov
lret
pop
sub
xlat
inc
sbb
fsub
xor
adc
icebp
or
adc
ss
pop
mov
rclb
icebp
pop
xlat
pop
clc
lret
loop
xchg
cmpsl
test
gs
xor
lcall
adc
jb
jge
movsl
rcrb
xchg
xor
jne
jecxz
mov
test
jmp
jae
shlb
rclb
mov
out
in
jo
or
popf
jnp
rclb
inc
stos
ret
ss
bound
fidivrl
lods
cmpsl
in
cwtl
mov
mov
cmp
fs
xchg
shrb
push
out
cmc
ja
js
dec
enter
stos
stos
mov
inc
pop
xor
xor
push
insl
or
sahf
hlt
add
add
fildl
jecxz
adc
sti
xor
cmp
shrl
jns
mov
rol
jb
push
aam
call
imul
push
or
into
data16
mov
lcall
or
pop
xchg
andl
add
jge
shlb
mov
int3
jge
call
dec
or
sbb
scas
out
mov
and
out
test
shlb
mov
jmp
inc
mov
xor
popa
mov
pop
push
movsl
mov
stos
add
cmp
inc
fistl
test
cwtl
jecxz
jle
jecxz
cmp
cmc
mov
mov
pop
push
lret
pop
pusha
shl
mov
and
mov
movsb
outsl
and
ret
stos
jae
stc
mov
sub
in
inc
lods
pop
aaa
push
xchg
out
push
addr16
sbb
jg
mov
or
adc
mov
std
fs
jo
push
mov
into
cmpsl
mov
aam
mov
jb
dec
enter
pop
jae
push
add
xlat
and
pop
sbb
xchg
mov
mov
pop
test
add
xor
rcrl
cltd
jge
insl
mov
sub
xor
sub
mov
dec
inc
inc
addr16
jge
loop
aas
roll
cwtl
cwtl
push
xchg
adc
adc
cmp
stc
stc
push
movsl
xor
xchg
vunpckhpd
push
cmp
mull
xor
xchg
sbb
movsl
pop
loope
pushf
mov
fidivs
lock
std
fnstcw
pop
dec
rorl
std
mov
xor
jno
mov
fs
or
push
cs
in
xchg
fs
out
push
mov
pop
test
test
jns
add
cmp
into
ss
arpl
leave
test
iret
int3
lahf
push
and
inc
aaa
fs
ds
adc
and
and
sahf
push
dec
loop
jmp
xchg
out
and
mov
sbb
cwtl
add
pop
dec
jp
loop
xchg
jge
mov
addr16
stos
mov
sahf
and
push
loopne
mov
pop
inc
pop
inc
push
lret
dec
adc
out
daa
xchg
mov
xchg
sti
in
dec
flds
aam
pop
and
mov
int3
pop
xchg
sub
mov
xchg
insl
pop
pop
and
scas
inc
shr
jp
into
cld
lret
fmull
out
push
dec
pusha
outsb
pop
mov
add
data16
dec
jl
cmc
xor
aas
sbb
fdivrl
xor
repnz
repnz
and
xchg
mov
push
lds
sbb
add
iret
jge
add
cltd
out
jmp
xor
test
loope
fcom
loopne
jne
mov
hlt
popa
mov
inc
push
push
paddusb
iret
mov
out
push
aaa
adc
jmp
inc
flds
scas
push
insb
mov
les
dec
es
aas
test
imul
je
cli
test
jae
inc
dec
xor
clc
inc
lods
fsts
sub
jecxz
or
adcb
mov
test
arpl
inc
stos
in
inc
push
cmp
js
sbb
mov
gs
iret
mov
push
or
sbb
push
scas
add
aam
mov
cmp
mov
out
push
adc
jno
out
jmp
jnp
loope
pop
mov
push
cli
psubsb
push
fdivrs
mov
daa
notb
and
mull
inc
or
cmp
dec
cmc
jl
jo
and
xor
push
lock
rcrb
push
arpl
push
out
ret
lods
jge
and
enter
addl
sahf
aad
jmp
push
dec
pinsrw
adc
sub
shrb
jle
inc
or
xor
lds
cmp
push
mov
xlat
mov
jae
in
pop
sub
in
and
stos
xchg
ss
inc
mov
mov
insb
decb
rcrl
xlat
mov
stos
in
pop
and
jle
mov
pop
xor
ja
int3
or
mov
mov
and
stos
pushl
cwtl
mov
sub
lock
adc
ss
ljmp
push
shlb
pop
push
fidivrs
rcll
xlat
push
popf
repnz
lds
sub
mov
addl
mov
push
push
mov
pop
jle
imul
fs
fmulp
lds
addb
jecxz
adc
rorl
fdivp
mov
hlt
or
inc
push
pop
test
mov
cmp
xor
push
ds
inc
js
lret
test
push
pushf
push
jbe
sub
lock
in
inc
call
mov
push
xchg
inc
pop
sbb
mov
fcmovb
push
dec
fstl
adc
in
gs
loop
cmp
pop
pop
pop
iret
pop
pop
mov
add
int
data16
xchg
movsb
shlb
cmp
ja
clc
mov
xchg
dec
sub
imulb
push
icebp
push
lods
popf
and
mov
add
xor
sbb
inc
int3
out
xchg
cmp
sti
aam
push
sub
sbb
add
cmp
popa
and
mov
mov
sbb
pop
clc
iret
daa
pop
or
jl
adc
cmp
mov
push
dec
mov
lret
cmp
jmp
xchg
pop
mov
add
add
mov
push
sbb
sti
or
into
xchg
rolb
mov
cltd
movsl
lods
dec
repnz
nop
je
mov
std
fcoms
test
fdivr
aaa
xchg
sub
push
add
xchg
loop
adc
mov
and
test
rcrl
out
lea
adc
jecxz
insb
adc
xor
stos
mov
or
xchg
mov
lcall
aad
or
mov
jg
mov
loopne
nop
ror
jecxz
dec
jle
loopne
xchg
fcom
sub
call
das
lock
sti
mov
pop
mov
rcl
test
sub
push
clc
pop
js
cld
mov
cmp
ljmp
mov
aad
dec
fcomp
cltd
pop
out
xchg
pop
in
xor
sbb
dec
push
jmp
mov
or
mov
popl
clc
adc
into
mov
and
sbb
js
add
mov
dec
mov
inc
ficomps
cs
dec
jl
dec
out
es
push
mov
mov
call
xlat
push
mov
pusha
roll
xchg
in
push
stc
adc
or
loope
or
inc
out
sub
clc
push
outsb
jmp
fldl
sub
scas
push
rcrl
lock
mov
cmp
mov
mov
push
scas
pusha
mov
cmp
out
push
test
cmp
sahf
push
decb
and
mov
ja
xlat
cmp
inc
jl
xchg
ss
insl
dec
fmulp
cwtl
in
xchg
jp
std
lcall
sub
popf
fwait
out
sub
ja
sbb
mov
or
push
fadds
les
cpuid
adc
cmp
sbb
or
in
cmpsb
out
icebp
pop
jmp
leave
aad
sub
cld
test
sub
xor
or
jno
je
imul
stc
imul
pop
pop
aam
ljmp
js
out
std
push
adcb
out
adc
out
testl
mov
xchg
and
jg
mov
mov
mov
movsl
ret
adc
scas
jl
movsl
cmc
js
adc
enter
stos
cwtl
or
lods
push
pop
iret
mov
stos
out
fldl
push
cli
cmpsb
loopew
pop
lods
aam
gs
jb
test
fcoml
mov
push
xor
mov
sub
sbb
mov
pop
pop
inc
in
inc
aam
sub
add
popa
clc
sub
ds
aas
jg
adc
push
cli
shlb
dec
arpl
push
pop
insb
add
shll
dec
push
int3
stos
jmp
mov
sbbb
pop
xchg
fwait
cmc
ficoml
aas
sub
nop
aad
aaa
push
sbb
jbe
fcomps
adc
popa
jmp
in
mov
jp
cmp
decl
pop
aaa
jl
ss
addr16
jl
dec
mov
or
sub
hlt
sbb
loopne
sbb
mov
sub
loopne
fidivrs
imul
out
cmc
divl
ljmp
pushf
ds
cmp
and
shll
sub
out
jns
sbb
test
xchg
fcomps
push
call
outsl
rcrl
scas
pusha
jb
jae
fsubr
sbb
mov
or
sti
fistl
xchg
into
or
pop
sub
lea
shll
xor
je
outsl
roll
xchg
sub
ja
inc
push
adc
pop
ret
and
jl
mov
cli
pusha
shrb
call
and
stos
or
mov
aad
je
cltd
adc
cwtl
cmc
ja
inc
sbb
mov
push
xchg
or
outsl
and
into
mov
out
leave
mov
pop
inc
icebp
call
push
mov
cli
push
jle
cmp
sub
test
leave
mov
lods
fsubl
mov
jecxz
add
cs
add
mov
jmp
mov
sbb
xchg
das
jno
rorl
repnz
inc
je
jbe
sbb
and
jne
add
fwait
in
jp
push
out
mov
loopne
sub
imul
stc
dec
sbb
out
pushf
int
fimuls
push
outsl
ds
xlat
pushf
lea
fwait
ret
lahf
cmp
xchg
or
scas
es
aad
nop
mov
dec
mov
filds
push
clc
mov
out
cmp
mov
dec
es
jecxz
sub
dec
inc
mov
cmc
lea
test
shrl
sbb
inc
mov
into
stos
and
jle
cmp
je
adc
stc
mov
test
sbb
mov
sub
bound
scas
or
fldt
testl
and
fisttps
jns,pt
adc
daa
or
sahf
cld
in
mov
addr16
stc
imulb
imul
jbe
mov
imul
add
pop
aad
mov
mov
and
jmp
fscale
shlb
push
call
and
pop
mov
mov
xor
push
in
jg
and
push
mov
int3
addr16
mov
je
add
mov
xor
dec
rol
mov
stos
aas
mov
mov
push
jge
mov
jnp
and
test
or
pushf
sub
movsl
aad
push
mov
dec
adc
movsb
dec
add
cmp
lods
cli
sub
lods
xrelease
insl
or
inc
cmpsb
data16
sar
jo
xchg
nop
pop
jb
xchg
imul
push
data16
aad
sti
dec
cmp
rcll
or
daa
std
lret
rorb
iret
leave
mov
xchg
add
sahf
fiadds
test
cmp
and
fwait
xor
jno
pushf
xor
mov
pop
imul
jge
ficoml
cmpsl
dec
sbb
xchg
mov
sti
mov
inc
pop
jp
movb
cltd
repz
xchg
add
jne
jnp
or
xorb
sbb
cmp
inc
in
pop
mov
mov
adcb
adc
call
es
mov
stos
cwtl
mov
mov
sub
call
ja
inc
sbb
xchg
scas
sbb
adc
push
mov
scas
sbb
push
mov
out
lret
hlt
jno
push
fldenv
mov
sar
sbb
popa
roll
or
lcall
push
cli
inc
cmpsl
xchg
push
mov
aam
rol
push
lcall
in
insb
adc
lods
adc
cmp
in
addr16
icebp
dec
lods
cmp
call
pop
mov
insb
xlat
xor
imul
test
mov
and
jns
fildll
xchg
adc
inc
cmp
cmp
out
aad
jmp
dec
sbb
inc
dec
rcrl
xor
loopne
push
ds
xchg
xor
mov
je
mov
xor
loop
mov
cmp
inc
std
sub
fnstenv
push
rclb
sahf
mov
adc
aam
mov
addr16
push
test
popf
das
pop
incl
mov
lods
dec
xor
cld
xchg
and
mov
push
cld
push
ret
test
and
dec
orl
insl
sub
and
pusha
xor
pop
sub
or
jp
out
movsl
sbb
sbb
insb
xor
mov
mov
push
pop
mov
cmpsb
pop
push
pop
push
mov
pop
inc
pop
mov
imul
mov
xlat
repnz
jg
xchg
idivl
mov
mov
push
push
loop
adc
mov
test
jb
mov
inc
in
jg
jl
mov
cli
ficoms
test
inc
push
xor
and
testb
filds
icebp
push
mov
mov
sub
and
mov
push
cwtl
push
jmp
mov
shlb
sub
fists
lret
pop
test
mov
loope
dec
lds
faddl
rolb
dec
popa
or
sbb
jbe
or
ja
xor
mov
frstor
clc
pop
xchg
mov
pop
sub
divb
cmc
lret
xchg
lods
jns
sub
mov
pop
ret
popf
cmp
inc
loopne
mov
out
movsl
mov
shr
cmp
das
subl
mov
int3
xor
xchg
xchg
rorb
addr16
outsl
pop
popf
aam
je
push
adc
movsl
xchg
mov
adc
xor
pop
cltd
adc
mov
icebp
ljmp
stos
adc
mov
jnp
insl
popf
inc
adcb
cmp
orl
scas
mov
mov
mov
mov
stc
xor
std
or
push
scas
and
adc
lcall
lahf
inc
enter
or
xchg
push
cltd
jle
lea
pop
cmp
es
adc
es
bound
mov
in
push
jne
in
mov
fwait
push
dec
loop
jle
mov
add
rclb
imul
in
out
or
setbe
inc
out
es
lcall
leave
lcall
and
xchg
jg
shll
in
inc
imul
divb
xor
ss
sbb
not
add
inc
shlb
jb
out
in
outsl
lea
outsb
sbb
push
inc
inc
xor
xor
sbb
xor
sbb
div
cwtl
push
rcll
bound
add
adc
ja
fimull
orl
and
nop
jle
inc
jbe
aaa
push
cmp
out
dec
push
mov
ja
cmpsl
pop
repz
xchg
pop
cmp
push
xchg
daa
mov
in
ror
dec
in
mov
mov
arpl
jns
dec
push
pop
addr16
ljmp
insb
mov
inc
leave
sub
add
inc
push
inc
aad
dec
mov
icebp
push
pop
pop
sub
stos
popa
push
mov
jmp
outsl
fwait
or
in
fisubrl
add
inc
data16
mov
jnp
mov
pop
stc
scas
pop
adc
pop
mov
add
or
rcr
jmp
pop
pushw
mov
or
dec
sahf
xorb
xor
inc
scas
divl
and
nop
sub
lea
hlt
jp
sub
pop
out
jns
fs
pop
fbld
jb
push
mov
icebp
loope
xorl
push
xchg
inc
fs
pop
sbb
shrl
or
imul
add
pop
sti
dec
xchg
out
inc
mov
hlt
js
or
pop
das
std
adc
xchg
push
test
lods
and
adc
mov
movsl
xor
sarb
push
pop
test
or
repz
in
cmp
ret
mov
into
push
mov
jmp
and
shl
jb
pop
and
stc
test
push
mov
test
dec
data16
das
nop
jp
mov
clc
and
cmp
icebp
pop
outsl
scas
inc
in
das
sti
je
das
xor
inc
outsb
xor
add
pop
lret
lea
pop
push
int3
mov
cs
test
mov
mov
loop
mov
in
mov
or
repz
mov
test
or
iret
lea
inc
cmpsl
lret
imul
out
and
and
dec
inc
pushf
mov
pop
cs
sahf
div
fcoms
xchg
xor
adc
mov
adc
or
jmp
ds
pop
xchg
mov
xchg
stos
xchg
sub
sub
or
inc
xor
and
xchg
and
dec
andb
or
addr16
mov
jae
cmp
mov
in
fmull
adc
lods
lret
test
push
loope
pop
lds
cmp
mov
mov
das
pop
or
dec
out
in
push
roll
mov
dec
mov
jg
adc
dec
sbb
pushf
pop
int3
xchg
xchg
arpl
testb
cwtl
adc
lret
ss
out
aas
inc
imull
cmc
and
repz
nop
cli
xchg
add
mov
pop
or
les
movsb
mov
arpl
jbe
pop
adc
in
fwait
jne
addb
stc
shrl
mov
pop
pop
or
outsb
mov
or
aas
shll
adc
dec
and
sbb
mov
je
jo
sti
das
stos
movsb
inc
shrb
nop
mov
sbb
pop
mov
divl
adc
dec
mov
xlat
js
mov
sub
push
adc
xchg
fsubr
pushf
ficoms
push
adc
pusha
and
mov
or
xchg
shll
jne
pop
sar
xor
mov
jbe
xchg
das
sub
cmp
mov
pop
ret
inc
idiv
cld
mov
inc
xor
pop
add
cmc
enter
mov
jnp
sar
lret
push
hlt
push
xchg
popa
sub
xor
dec
lods
je
xor
notb
fnstenv
scas
bound
push
stos
arpl
sahf
inc
cld
push
inc
mov
loopne
fisttpll
sub
xor
jo
xor
test
jmp
icebp
pop
mov
sbb
in
cmpb
mov
mov
or
xchg
jp
mov
mov
rorb
jne
dec
inc
leave
je
je
xorb
sbb
lea
xorb
fsubs
or
movsb
fs
inc
mov
jp
das
jle
les
mov
mov
jo
dec
out
cmp
repz
cltd
mov
adc
les
out
cwtl
mov
sbb
cwtl
andl
int
inc
push
sub
adc
shlb
test
xor
mov
mov
lret
ret
push
aaa
mov
sub
xor
sub
pop
fwait
shl
ret
aam
xor
adc
add
ja
inc
add
adc
jle
adc
sub
movsl
push
les
push
jo
scas
lret
sub
dec
mov
inc
aam
adc
insl
mov
and
addl
jg
pusha
and
in
sub
add
imul
inc
sbbl
sbb
mov
sub
iret
ds
in
lret
pop
in
pop
ja
push
sub
mov
out
adc
mov
jmp
adc
movsl
in
mov
xlat
testb
cli
inc
or
popa
subb
sub
out
cmpsl
dec
call
jle
aam
andl
push
adc
movl
out
das
enter
sbb
cli
rcrl
popw
in
xchg
sbb
scas
dec
clc
mov
or
mov
mov
cmp
pusha
push
xor
mov
icebp
push
leave
mov
jae
and
cmp
jl
insb
xlat
decb
mov
bound
std
xchg
es
mov
and
cld
jl
das
push
mov
in
or
arpl
outsl
int
loop
ret
testb
xor
repz
call
mov
stos
jge
push
loop
pop
mov
jmp
mov
jp
push
adc
subl
fistpll
test
pop
add
insl
ds
jecxz
adc
adc
xor
add
xchg
test
adc
mov
jecxz
mov
lods
sub
dec
insl
mov
dec
sbb
sbb
aaa
push
out
fildll
nop
call
adcl
xchg
cmp
lea
jnp
out
mov
popa
mov
arpl
mov
sub
imul
pop
mov
stc
inc
push
xor
add
push
sub
sub
daa
outsl
ss
rorb
inc
xchg
cmp
mov
xchg
icebp
add
dec
addr16
inc
test
add
xchg
mov
jge
add
dec
push
mov
sub
add
sbbl
mov
or
pop
ljmp
insl
enter
ror
jecxz
adc
inc
xor
add
xor
out
mov
inc
out
mov
mov
add
in
mov
cltd
jp
add
cmpsb
fcoml
adc
std
xchg
addb
int
cmp
iret
sub
mov
nop
rcl
leave
bound
mov
lcall
mov
test
adc
aaa
pop
sub
or
ja
mov
test
xor
nop
sub
pop
cmpsb
mov
dec
or
mov
mov
xor
orl
cmp
xchg
sti
xchg
mov
dec
addr16
sub
xlat
sbbb
daa
adc
insl
sub
outsb
pop
dec
inc
xchg
and
dec
js
add
mov
or
inc
jb
cli
fs
mov
loopne
add
adc
test
xchg
dec
xchg
xor
adc
aas
add
mov
sbb
pop
fcompl
pushf
faddl
cltd
push
sbbb
in
xchg
popa
cmp
dec
stc
jle
lret
cltd
gs
aaa
mov
sti
mov
addr16
mov
pop
dec
sub
loopne
movsb
xchg
jnp
call
adc
pop
mov
lret
les
cmp
push
lret
mov
push
mov
in
push
icebp
out
test
add
stc
xor
movsl
cli
xchg
or
mov
dec
mov
mov
bound
leave
and
mov
scas
rcll
lea
pop
jle
or
mov
jbe
inc
adc
or
rorl
pop
xor
fwait
je
inc
cmp
and
dec
or
mov
xchg
fs
or
data16
pop
jns
popf
jmp
into
test
lea
adc
ljmp
hlt
cmp
mov
sub
mov
dec
dec
test
cli
daa
xlat
mov
aad
add
mull
stos
xchg
pushf
gs
mov
das
ja
xlat
inc
adc
shrb
jmp
xor
mov
outsl
je
pop
fimull
sbb
cmp
push
adc
lahf
jb
jecxz
mov
sub
je
pop
xchg
das
aaa
test
sub
bnd
mov
mov
adc
mov
add
cmp
into
dec
fstps
inc
jbe
dec
cmp
clc
in
repz
mov
cmovo
pop
loopne
in
leave
test
mov
fmul
cwtl
ret
lea
lock
cmp
int
xor
rcl
inc
mov
fidivs
mov
push
inc
xor
push
not
lods
cmpsb
push
push
xorb
cmc
std
into
jg
cmpsl
or
in
in
int3
bound
inc
jne
enter
pop
sub
sbbb
mov
sub
inc
or
or
adc
jle
jl,pn
inc
mov
sub
dec
add
notl
xchg
mov
pop
push
adc
and
jg
inc
and
out
test
add
pop
dec
icebp
push
xlat
dec
aam
ljmp
mov
stc
cmpsb
pop
scas
mov
mov
cmp
xor
gs
repnz
and
int3
jmp
test
xchg
sbb
inc
bound
sbb
pop
leave
subb
dec
iret
fldt
add
xchg
sub
push
adcb
packsswb
cmp
jecxz
adc
add
xchg
push
insl
lock
hlt
or
dec
in
leave
sbb
out
mov
push
sub
add
cwtl
pop
add
adc
bound
orl
cmp
or
or
lods
andl
pushf
lret
cmp
test
mov
pop
bnd
push
cmpsb
cmp
cli
aam
fwait
movsb
dec
jbe
clc
jo
je
enter
mov
mov
mov
loope
testb
repnz
scas
cmpsb
es
insb
aas
in
sti
movsb
pop
adc
xorb
loope
mov
pop
xchg
adc
neg
lret
lret
sbb
imul
das
xor
lahf
inc
cltd
cltd
int3
lcall
sahf
xor
iret
sbbl
jg
test
dec
push
mov
scas
dec
sub
daa
push
rolb
pop
fistpl
lcall
push
jne
loopne
loope
xlat
bound
xor
rorb
jge
sbb
je
jne
fmuls
sbb
lods
pop
jnp
adcl
and
xchg
ja
stos
shll
fdivrs
les
punpckhdq
out
mov
out
lods
pop
cmp
test
xchg
in
mov
jl
stc
mov
xchg
adc
sbb
pushf
shl
dec
mov
mov
je
mov
adc
stos
xor
mov
icebp
ficompl
insl
div
icebp
jmp
jge
sarl
add
sti
pop
jmp
aad
jo
mov
pop
pop
insl
mov
add
test
cmpsb
pop
ss
dec
orl
imul
rclb
insl
push
mov
sbb
ret
pop
test
pop
xchg
les
test
sub
out
mov
dec
stos
sbb
dec
and
dec
mov
inc
imul
cmp
cmp
and
push
stc
xchg
rcrb
test
int
les
aas
test
mov
mov
cwtl
mov
or
fincstp
enter
xor
jg
ror
sbb
and
add
mov
cmc
sub
bound
add
aaa
int3
sub
out
xor
mov
push
faddl
push
mov
push
out
jb
loopne
jecxz
xchg
repnz
xchg
pop
lods
scas
js
pushf
jmp
ss
mov
inc
and
bound
adc
nop
loopne
arpl
inc
mov
loop
movsl
or
dec
push
mov
inc
pop
aaa
mov
jge
lcall
stos
rcrb
or
fidivrs
push
arpl
jle
mov
lret
popf
fidivrl
repz
adc
xlat
aas
xor
decl
dec
mov
dec
subl
fldenv
mov
jne
xorb
cs
fsubs
pop
mov
fsubp
in
js
pop
cld
jnp
std
clc
sarb
out
mov
mulb
push
xor
cmp
rcrb
xchg
mov
sarl
xchg
fcoms
lret
adc
bound
dec
pop
es
mov
int3
sbb
insl
ret
mov
sbb
add
stos
gs
push
das
sub
adc
cltd
jmp
and
xchg
inc
cld
lcall
lods
call
cld
dec
out
pop
mov
mov
mov
movsb
push
adc
fwait
mov
fbld
mov
in
jb
fwait
dec
jl
call
xchg
sbb
mov
and
jne
xchg
jl
mov
mov
dec
jne
pop
cli
cmp
mov
xorb
adc
inc
adc
mov
dec
sub
stos
fcoml
jbe
aaa
repnz
cmp
rorb
sub
mov
imul
dec
fstpt
cmpsl
js
outsb
loope
jb
cs
xor
js
sub
push
shrl
fsubr
and
cwtl
shrl
push
mov
or
xchg
enter
push
adc
sub
fildl
xchg
mov
test
mov
sahf
stos
lock
mov
xor
insl
xchg
mov
dec
testl
popa
aad
dec
mov
js
cs
call
lods
lock
mov
inc
jg
add
sahf
add
jb
adc
sub
cmpsl
cmc
mov
and
mov
dec
stos
xchg
push
mov
push
xchg
nop
scas
dec
std
pop
cld
data16
sub
clc
jns
mov
pusha
insl
fwait
loopne,pn
jg
lea
jmp
mov
fucompp
scas
mov
dec
ljmp
inc
mov
jge
test
jb
mov
ds
das
into
dec
jnp
test
adc
clc
jmp
cmp
push
jns
dec
sub
mov
inc
out
call
lahf
jno
xor
xchg
cld
sar
xor
inc
jge
pop
scas
mov
fwait
lds
cs
sbb
sub
sbb
les
inc
dec
not
xchg
cltd
inc
sarb
lods
add
aaa
and
xchg
pop
fstpt
xor
mov
iret
std
xchg
cli
scas
and
push
in
and
xor
mov
dec
les
fisubl
jle
cmp
fidivl
push
jg
jg
ljmp
or
fwait
hlt
dec
pop
sub
shr
bound
add
jb
dec
lret
cmp
ljmp
and
fists
popf
mov
sub
scas
mov
push
pop
sbb
xchg
in
xor
test
jle
dec
xor
es
sbb
sbb
mov
daa
add
sbb
mov
dec
rorl
pop
push
jl
sub
cmp
mov
push
sti
dec
idivb
add
lret
outsl
cs
imul
lret
addb
adc
sub
fidivl
cmpsl
loopne
xchg
push
clc
arpl
ret
or
orb
aas
cltd
das
sbb
lock
xchg
push
mov
insl
rolb
rorb
in
dec
call
cmp
cmp
or
cmp
jbe
cld
call
icebp
aas
imul
xor
shlb
cmpsb
cmpsb
cmp
jne
cltd
and
js
jg
jle
das
mov
lret
pop
push
or
mov
push
jle
leave
enter
xchg
fdivrs
jg
xor
movsl
insl
pop
sbb
inc
data16
fsts
lods
jl
and
mov
fwait
jge
jmpw
xor
adc
cmpl
fidivrs
pop
lock
pop
out
sbb
jmp
add
push
pop
sub
into
lcall
subb
sub
out
es
aad
jno
push
adc
out
lret
pop
out
push
push
push
pop
mov
add
push
and
lods
cmp
dec
mov
cmp
inc
test
pop
pop
roll
or
loop
adc
dec
pop
inc
mov
dec
negl
movb
dec
cmpsb
ret
xor
bound
or
call
out
mov
leave
push
stos
les
dec
mov
xchg
pop
mov
jg
outsl
mov
bound
fs
pop
jb
dec
pop
or
fidivrl
mov
mov
jo
jnp
ret
dec
clc
sub
or
mov
rol
int3
out
lcall
orb
xchg
jp
sub
cmp
jno
mov
jne
sub
or
test
adc
shrl
call
cwtl
or
arpl
mov
mov
test
outsb
dec
pop
test
pushf
add
mov
mov
mov
lcall
xchg
rclb
ja
loope
mov
test
fisubs
popf
ficompl
pushf
and
xchg
loopne
mov
xlat
lods
cli
dec
cmp
bound
or
lret
outsb
and
push
rolb
xor
ret
std
lea
into
out
sar
cmc
add
fs
gs
shrb
mov
mov
mov
shll
enter
loope
mov
dec
xor
sbb
mov
mov
aas
mov
sub
adc
ss
xchg
test
stos
cwtl
js
pop
frstor
orb
xchg
outsb
stos
inc
and
mov
mov
test
pusha
push
hlt
repz
cmp
xchg
jne
outsl
or
add
and
fsubs
sub
pop
clc
enter
or
test
inc
and
fidivrs
fisubrl
je
and
or
scas
rcrb
inc
ljmp
pop
imul
mov
lock
inc
mov
jle
movsb
daa
pushf
cld
push
leave
xor
push
push
mov
insb
pop
xor
mov
or
pop
jle
fisttpll
push
roll
cld
sbb
or
push
fsubl
cmp
adc
imul
ljmp
ret
add
sahf
cmpsb
xchg
bound
sti
mov
divb
and
inc
ret
xlat
cld
lock
fnstenv
lret
shrb
xchg
add
pop
adc
in
fwait
popa
jns
mov
aaa
xchg
adc
mov
nop
jmp
xor
in
out
sub
dec
test
addr16
jmp
lds
xlat
xor
lds
xchg
add
cmp
or
dec
sti
sbb
mov
mov
mov
sub
adc
jno
pop
jge
jmp
cs
jnp
pop
fwait
daa
rclb
sbb
jb
mov
jne
cmpsl
xor
iret
fwait
pop
aad
loope
push
jnp
shll
or
inc
jl
call
pop
sti
test
decl
jmp
int
mov
out
or
aas
xor
rcll
mov
xor
adc
mov
shl
sahf
adc
nop
sbb
push
jecxz
fsubs
sub
test
sar
movsb
std
imul
add
je
pop
xchg
std
mull
aas
jb
dec
in
pop
das
sbb
dec
cli
faddl
mov
test
hlt
jecxz
sbb
ljmp
daa
fistl
movsb
mov
xchg
scas
aaa
popf
shll
cmc
jmp
push
sarb
mov
ljmp
mov
push
arpl
jo
push
push
jmp
adc
int3
add
dec
inc
mov
jle
xchg
pop
clc
adc
out
push
cmp
mov
mov
jmp
mov
inc
repnz
push
fsubr
ret
fdivl
add
icebp
sbb
pusha
dec
lds
ja
shrb
dec
jbe
xor
sub
sahf
push
xor
xchg
and
pushf
jnp
nop
xchg
pusha
mov
xchg
or
push
iret
mov
xchg
sbb
hlt
in
push
xor
sub
jnp
call
fidivrl
dec
xchg
in
test
ja
les
aad
xor
out
add
jnp
add
sbb
sarl
imul
fucom
loop
pop
jae
out
dec
sbb
cmpsl
test
adc
sbb
mov
jns
pop
xor
jmp
mov
mov
addl
cmp
dec
inc
cmp
aad
data16
out
subl
shr
mov
sbb
xchg
fadd
pop
cli
out
imul
ss
cmp
xor
shl
out
clc
jne
adc
dec
push
enter
sahf
mov
inc
fdivr
xchg
arpl
sbb
repz
or
loope
ror
popf
xor
das
sbb
enter
popa
mov
adc
dec
dec
xchg
mov
testl
xchg
ljmp
shl
das
push
fiadds
cmp
pop
test
into
enter
stc
inc
jmp
lea
clc
inc
jmp
mov
movsl
and
mov
cmpsl
add
dec
pop
jno
cmp
imul
cltd
sti
sub
sub
lock
lods
push
xchg
xor
ljmp
andl
pop
sub
sarb
iret
push
pop
in
arpl
fstpt
in
shl
mov
mov
and
cmp
dec
ror
out
outsl
popl
dec
fistpl
sbb
adc
push
push
std
insl
push
shrb
add
test
and
push
pop
popa
les
cmpsb
pop
lock
cmp
cmp
push
push
popf
jle
fcoml
dec
pop
jecxz
adc
mov
adc
xchg
adc
pop
fsubrs
adc
add
scas
nop
sti
inc
mov
push
addr16
xchg
mov
and
push
push
pop
pusha
clc
jge
into
addl
fs
lds
or
jb
pop
inc
push
scas
lock
call
cmpsl
setp
cmp
repz
bound
pusha
push
push
dec
pop
adc
aas
lcall
sbb
stos
lea
cmp
pop
or
jmp
push
inc
lcall
movhps
cs
add
jmp
push
jp
jl
sbb
pushf
movsb
imul
sub
mov
es
xchg
in
fnsave
push
lahf
jo
xlat
dec
imul
jle,pn
lcall
lcall
roll
mov
lock
or
in
rcl
cs
sbb
into
out
int
and
cmp
daa
inc
test
push
testl
adcb
inc
cwtl
pushf
fs
jp
out
jne
cmpsl
and
dec
jbe
stos
nop
jbe
repz
into
dec
pop
ret
rcr
pop
aam
sti
dec
roll
push
pushf
sbb
jae
push
jecxz
sbb
push
shl
lret
jns
mov
sub
leave
data16
addl
daa
adc
jne
xor
aad
test
cli
fbld
cmp
and
stc
fadds
mov
add
test
adc
mov
dec
push
xor
jmp
testb
mov
test
push
sbb
out
jne
mov
lret
cmpb
nop
or
outsl
in
xchg
sub
xchg
cmpsl
sub
aad
ja
and
repnz
sbb
xchg
std
xchg
cli
pop
add
bound
sub
inc
outsl
xor
mov
scas
adc
jp
inc
mov
mov
out
enter
test
js
and
rorb
adc
loop
xor
dec
addb
pop
pop
inc
mov
pop
fnsave
ja
push
call
and
sarb
jae
cmp
push
aas
cmc
or
lcall
lds
sbb
es
std
iret
test
cmp
sarb
loop
sarl
pop
popa
subb
push
insl
aas
sub
or
addr16
sbb
fwait
iret
in
push
sub
fisubrl
add
ret
addl
pop
xor
loope
pushl
decl
shll
dec
inc
into
jge
xor
bnd
mov
xchg
das
mov
int
cld
xchg
int
and
xorl
iret
out
lock
push
rcrb
scas
out
rcrb
add
jbe
cmp
dec
lods
jmp
sti
dec
sahf
sub
pop
mov
sarl
cmp
arpl
xchg
sub
or
cmp
es
push
push
popa
pop
mov
jmp
shl
cmp
and
dec
insl
mov
jmp
dec
and
fisttps
mov
push
stc
xchg
mov
daa
test
and
and
lcall
arpl
int
cmp
jo
xlat
dec
pop
xchg
dec
jle
cmpb
lds
mov
xchg
call
pop
outsl
push
mov
sub
das
ljmp
jnp
and
pop
and
xlat
sahf
or
adc
push
movsl
pop
outsb
xor
lods
cmp
inc
sahf
pop
popl
inc
xchg
cmp
into
loopne
cmpsl
arpl
mov
imul
jle
bound
jnp
cmpsb
xchg
and
mov
xchg
fimull
pop
xchg
pop
cli
leave
js
in
mov
adcb
or
pop
sbbb
testl
mov
push
rorl
dec
mov
pop
imul
lods
mov
and
hlt
imul
mov
cmp
es
adc
jae
ror
inc
xor
enter
test
and
xchg
jl
in
inc
nop
sub
ret
mov
cs
int
sbb
lods
es
jmp
sub
mov
xor
test
movsb
sbb
xor
aam
bound
cmp
dec
scas
adc
test
jg
ss
aaa
scas
fadds
imul
sbb
adc
popf
inc
mov
cmp
hlt
mov
jge,pt
lea
cmp
push
cwtl
movsb
push
push
push
scas
pop
pop
mov
sbbb
stos
xor
arpl
lahf
jno
cmp
cmp
inc
pop
dec
push
xchg
xchg
and
cli
test
aas
xchg
insl
push
shll
mov
cmpsl
mov
jno
mov
test
mov
mov
inc
ljmp
leave
stos
je
leave
jmp
negb
add
push
movsl
jb
mov
mov
inc
push
push
les
jb
into
or
pushf
lret
iret
out
mov
mov
jmp
sub
clc
aaa
inc
fucom
xor
rcrb
std
xor
lods
xchg
mov
jbe
xchg
xor
insl
and
and
adc
dec
cmp
cmpsl
mov
std
int
insb
xor
xor
rcpps
xor
mov
ljmp
xchg
std
jmp
mov
stos
int
js
pusha
mov
fcomip
jne
sbb
cmc
lock
in
fwait
or
or
les
and
xor
mov
test
sarl
add
sub
cmpl
adc
insb
out
cmp
xor
add
in
mov
pop
insl
mov
xor
in
pop
in
fistl
popf
xchg
mov
jbe
mov
lret
ja
and
xchg
pop
xchg
lahf
daa
cwtl
inc
lds
and
mov
iret
sbb
loopne
jge
and
and
ljmp
jno
out
mov
test
dec
divb
mov
inc
pop
xchg
cmp
stos
rorl
jmp
push
xor
aad
rdpmc
cmp
dec
push
ds
repnz
mov
jo
jae
cmp
movsl
imul
adc
sub
jbe
push
sbb
adc
or
scas
jns
inc
cltd
or
mov
adc
inc
push
ficomps
mov
pop
movl
dec
ret
xor
push
fstps
leave
aad
mov
sbb
jnp
or
xor
xor
repnz
cmp
dec
in
cwtl
sarb
cmp
ror
mov
cmpsl
or
sti
icebp
push
frstor
inc
int3
int3
jns
jbe
in
add
fnstenv
aas
out
addb
or
lahf
add
ret
cmp
sbb
sbb
mov
push
push
sbb
cmpsb
jbe
mov
dec
xchg
adc
loopne
fmulp
sub
mov
loop
fmull
fwait
sbb
xor
outsb
cmp
call
pop
jns
subb
cltd
bound
inc
rcrl
push
ja
xor
outsb
sub
stos
mov
add
inc
leave
cltd
mov
outsl
aam
js
imul
mov
jno
or
into
je
cmp
sub
je
add
loop
cmp
push
inc
leave
mov
nop
shrb
mov
ret
ror
inc
and
fnstenv
cmp
jnp
pushf
jo
enter
jnp
mov
jecxz
scas
adc
aam
leave
xor
cs
test
or
inc
popf
pop
or
loopne
xchg
std
cmpsb
sub
aad
push
dec
call
out
nop
cwtl
test
sahf
or
sarb
mov
and
cltd
pop
add
xor
and
add
mov
loope
imul
or
pop
cmp
test
sbb
pop
jns
cs
jmp
and
daa
enter
sbb
fcmovnbe
std
push
lret
mov
add
or
add
movl
sbb
cwtl
das
mov
stc
cmp
cld
daa
mov
cwtl
adc
es
mov
and
cmc
movsb
into
xor
xor
and
in
adc
in
jbe
fdivs
in
cs
repz
sub
subb
push
xchg
sbb
fcomps
mov
cmp
mov
push
xor
ja
cld
call
push
inc
out
mov
js
xchg
fcmovb
push
aas
sbb
inc
jns
leave
aaa
adc
pop
data16
jecxz
loope
popa
mov
fidivrs
jmp
xchg
loopne
push
pop
add
int
xchg
and
sbb
fs
mov
inc
cwtl
sbb
loope
mov
jecxz
lods
cmc
scas
std
jle
aas
push
or
pop
fcomp
pop
mov
sbb
movsb
and
xor
add
and
loope
ljmp
hlt
cwtl
xor
pop
repnz
adc
fidivs
lock
push
adc
cmp
es
je
xchg
rolb
jb
cmpsl
cwtl
pop
test
pop
xchg
data16
rcrl
inc
mov
scas
jge
inc
and
fnsave
xchg
and
adc
loope
popf
scas
enter
out
ret
jp
cltd
cli
or
imulb
fs
push
mov
popf
hlt
and
fisttps
stos
mov
jmp
inc
and
in
aas
dec
insb
cmpsl
test
lret
and
leave
cld
out
xlat
out
xchg
add
in
jp
push
cmp
lods
and
mov
sbb
inc
mov
sub
jl
repz
or
mov
add
add
pop
into
jno
int
stos
in
repz
cmpsl
shl
or
sarl
mov
inc
add
xor
pop
push
je
adc
sbb
or
or
stos
pop
push
mov
or
push
fstpt
sarb
mov
sub
outsb
xor
cmp
sbb
shl
addb
hlt
lret
lret
and
add
mov
enter
sbb
sbb
mov
int
pushf
inc
in
sahf
sbb
jg
inc
jge
xor
sbb
shll
nop
push
inc
das
mov
into
int
shr
idivl
por
frndint
cmp
adc
hlt
test
jo
in
into
mov
shlb
lods
push
cld
jmp
add
push
adc
je
mov
push
out
repnz
mov
pop
mov
lds
cmp
inc
jne
inc
push
adcb
lods
mov
fcoms
mov
push
in
out
push
xchg
icebp
xchg
addr16
add
prefetch
or
movsl
mov
call
daa
jg
das
and
shl
mov
xchg
push
call
pop
cmp
mov
xor
xor
push
xor
pop
subb
push
daa
enter
lods
in
mov
cmp
divb
aam
mov
cmpsl
push
and
in
adc
inc
repnz
cmp
aas
divb
insl
outsb
xor
pop
mov
push
loopne
aam
xor
sti
xlat
sub
jl
add
test
mov
ror
or
mov
lret
icebp
popa
je
dec
jg
fwait
movsl
cmp
push
mov
sbb
cmp
icebp
mov
push
lds
hlt
movsl
mov
sub
sbbl
mov
testb
jb
push
jge
test
je
and
or
add
dec
pop
sub
je
ljmp
xchg
data16
jge
push
ror
jnp
bound
mov
into
cmp
std
xchg
jmp
cmpsb
lea
fistl
ljmp
inc
in
dec
mov
icebp
daa
lods
mov
repnz
clc
ss
push
dec
les
daa
repnz
cmpsb
mov
lcall
push
jge
rorb
lea
sbb
add
popf
insb
push
sbb
pop
aas
ja
mov
mov
ljmp
add
jmp
lahf
sbb
jb
inc
in
or
xor
js
ret
inc
mov
ljmp
popa
in
xor
mov
data16
jecxz
mov
dec
ljmp
scas
mov
nop
push
test
add
xor
fbld
cmp
dec
nop
jmp
cmpxchg
jb
xchg
inc
rcrb
xchg
mov
les
sbb
test
imul
inc
xor
mov
pop
scas
inc
mov
mov
shlb
lret
mov
mov
ja
cmp
test
xchg
enter
cmp
add
inc
inc
aam
sub
mov
imul
inc
pop
jle
mov
fadd
aam
mov
sub
sbb
add
fcomps
mov
scas
stc
sub
mov
pop
call
xor
sahf
pop
cmc
pop
shl
shrb
adc
push
sahf
test
shlb
push
cmpsb
dec
xchg
adc
adc
xchg
imul
pop
push
bound
and
fstps
adc
cmp
xlat
cmp
fcoml
iret
je
mov
fisubs
lahf
fcmovnb
sbb
sub
pop
aad
cld
lret
in
or
mov
daa
sti
mov
lds
repnz
icebp
mov
pop
jnp
mov
cs
mov
jae
cmp
xorb
cmp
mov
push
xchg
mov
test
aam
inc
xchg
mov
xchg
sbb
or
dec
lock
xor
imul
fwait
mov
fcoms
xor
pop
mov
nop
fadd
or
and
inc
dec
dec
push
jl
or
pop
gs
or
mov
pop
data16
pop
pusha
lahf
dec
push
mov
mov
and
pop
sub
mov
test
pop
stos
lret
and
bnd
mov
lret
scas
add
sbb
jae
fucomp
push
mov
ljmp
fcomps
roll
push
mov
and
fwait
cs
jo
or
jge
ss
push
dec
fs
mov
mov
sub
and
ret
pop
sub
xor
dec
movsb
iret
movsb
mov
aaa
mov
xor
or
gs
addr16
cli
mov
lret
rolb
cmp
bound
fmull
jns
orb
aas
nop
ret
mov
push
push
in
scas
fs
mov
in
push
push
xor
cli
or
xchg
sbb
cwtl
imul
rolb
sbb
popf
fisttpll
decl
cmpb
and
lods
imul
clc
shl
in
shrb
das
sub
inc
out
mov
jp
xor
lret
or
or
xorb
gs
jo
mov
iret
lret
lahf
xlat
cwtl
or
pop
add
and
ja
jp
addr16
aam
and
and
and
ret
pop
mov
push
xchg
sub
pop
ds
cmc
ljmp
ss
mov
dec
xor
mov
enter
sub
out
jle
mov
dec
push
push
xor
dec
push
jae
cltd
loope
inc
inc
mov
xchg
out
movsl
loope
xor
cs
or
rorb
fs
mov
outsb
sub
mov
nop
xchg
jo
or
mov
imul
adc
repnz
lret
pop
out
addr16
sub
or
test
mov
out
inc
iret
or
sub
sub
fildll
inc
sbb
cmp
cmpsl
ret
dec
dec
and
sbb
movsl
sbb
jb
inc
inc
popa
inc
pop
imul
or
iret
gs
iret
cmp
popl
xlat
out
mov
cs
sub
xchg
es
out
mov
jb
call
imul
insl
add
mov
pop
and
rolb
xlat
data16
lock
out
lret
fldlg2
xor
sub
jae
push
inc
mov
push
int3
mov
icebp
inc
lock
sub
mov
int3
or
outsb
mov
cltd
setge
mov
loope
pop
in
mov
icebp
aaa
mov
pop
rcrb
mov
dec
imul
and
cmp
push
jae
cmpsl
out
setne
adc
clc
inc
ret
wbinvd
subb
xchg
cmp
jge
and
loop
xor
push
ss
movsl
cmp
loop
cld
ja
scas
ljmp
push
lods
ret
xchg
out
in
push
or
enter
imul
in
in
fsubs
loopne
insb
xchg
jae
add
int
mov
stos
jae,pn
repz
jge
add
push
fcom
inc
mov
imul
dec
jnp
das
jecxz
xchg
outsl
inc
adc
push
das
ret
adc
out
sub
dec
pop
popa
lret
mov
stos
push
adc
arpl
out
enter
jmp
inc
xchg
leave
test
xchg
add
sub
add
out
adc
iret
fnstcw
dec
xchg
das
gs
into
cwtl
xchg
dec
mov
inc
mov
test
subb
daa
test
fstpt
add
sahf
push
pop
loopne
sub
sarl
jmp
adc
into
lods
pop
cmp
lahf
xchg
jle
in
ret
cmpsb
sub
xorl
stos
adc
fucomp
mov
push
xchg
enter
or
fcmovu
add
repz
test
cmp
insl
fldt
sbb
or
adc
pop
xor
outsb
sti
jno,pt
pop
mov
clc
mov
xor
pop
push
repz
and
mov
imul
cmp
pop
out
into
fldt
test
lds
sbb
jl
sub
pop
notb
sbb
arpl
rolb
lret
stos
call
mov
faddl
adc
jnp
push
add
test
push
jmp
push
stos
ljmp
mov
shll
orb
dec
sbbb
je
mov
fldt
inc
ss
mov
inc
test
xchg
cli
mov
push
inc
ret
bound
mov
cmpsl
jp
pop
adc
jbe
mov
pop
lods
nop
or
xchg
es
sbb
leave
dec
jl
adc
jb
mov
jge
repz
xchg
mov
ds
outsb
inc
lcall
std
movl
dec
lret
sub
aas
lea
adc
and
sbb
jecxz
sbb
and
mov
stc
sbb
daa
lea
rcr
pop
dec
dec
xor
gs
ljmp
shr
mov
fsubs
push
jmp
xchg
xor
shr
mov
fsts
and
sub
or
dec
inc
test
fdivl
adc
mov
mov
mov
fdiv
cmp
cmpsb
rorb
cmp
dec
repz
test
push
adc
xchg
mov
pop
into
cli
sub
push
inc
in
mov
xchg
push
leave
sub
mov
mov
cmpsl
cmp
sbb
dec
test
insb
cmpsb
pusha
sahf
in
fsubp
mov
cmp
lock
xor
add
ds
sbb
add
sbb
dec
je
mov
insb
or
sub
dec
jle
lcall
add
imul
sub
xor
and
cmp
mov
andps
add
pop
sbb
xchg
inc
daa
ret
pop
inc
add
adc
out
iret
jb
jl
ret
lock
popf
mov
cmp
jge
or
xor
mov
leave
mov
adc
test
scas
mov
lea
or
scas
mov
push
in
dec
inc
add
pushf
add
add
mov
mov
es
pop
and
rorb
xchg
inc
outsb
pop
jl
jp
imul
das
or
nop
lds
repz
dec
dec
or
and
addr16
xchg
dec
inc
loopne
or
mov
out
mov
enter
pop
ficomps
inc
adc
and
js
jo
movsl
lds
add
adc
in
mov
inc
cltd
pop
shlb
sarb
imul
sbb
sub
pushf
clc
lods
or
mov
inc
dec
cld
sub
ret
gs
jnp
cli
jmp
arpl
xor
push
mov
cwtl
lds
pop
xor
test
pop
call
pushf
rcl
gs
je
lahf
dec
xchg
push
lock
fcoml
pop
inc
shr
push
sub
fistpll
jns
inc
hlt
push
iret
adc
xor
outsb
in
ffreep
rol
pop
cmp
jne
out
lods
pop
sbb
lcall
mov
cli
or
xor
add
enter
mov
js
mov
jae
inc
scas
xlat
pop
pop
repz
lds
or
clc
inc
cmpl
mov
popa
mov
xchg
call
mov
mov
adc
adc
jo
xor
sbb
push
aam
lahf
mov
fistl
in
mov
and
loope
sarl
xchg
push
test
jno
movsl
hlt
neg
repz
stos
jnp
and
gs
mov
lea
in
fwait
popf
cmp
mov
lret
call
les
xchg
fwait
lahf
jmp
dec
adc
push
loopne
sarl
repz
dec
xlat
add
movsl
aad
das
iret
addr16
repz
sahf
xchg
inc
jb
out
dec
and
sbb
jno
dec
pop
inc
xchg
add
jb
test
cld
dec
int3
inc
fidivl
jl
mov
add
sub
mov
ss
xchg
mov
jg
mov
lcall
xchg
stos
ss
pop
mov
ret
scas
jb
mov
push
pop
fmuls
mov
inc
mov
adc
mov
push
sbb
xor
sub
jp
ret
loop
inc
subb
xchg
test
test
xchg
mov
adcl
lods
arpl
leave
test
mov
push
jbe
dec
xor
sti
and
loopne
cmp
inc
xor
bound
push
push
popf
adc
pop
or
test
mov
adc
mov
pop
fwait
call
out
loope
lods
inc
loopne
sub
sar
fidivrl
rclb
repz
insb
push
outsl
mov
push
mov
push
cwtl
pop
fdivrl
fwait
jle
cmpsb
movsl
jl
ljmp
adc
jmp
inc
inc
mov
add
or
aad
pop
mov
lahf
adc
sbb
pop
mov
push
ror
test
aas
ret
fdivr
aam
test
inc
jae
into
mov
jae
add
mov
pop
push
out
shrl
and
mov
test
mov
adc
adc
fmull
mov
or
mov
mov
movsb
jnp
int
iret
add
movl
and
cmp
pop
scas
xor
add
je
shll
xchg
pop
stos
or
into
pop
sbb
in
icebp
sbb
faddl
insb
jmp
jg
push
outsb
cmpsb
popf
dec
xchg
jle
movsb
ja
and
cmp
dec
mov
mov
or
adc
fcompl
jge
ret
mov
pushf
push
lods
sbb
movsb
movsb
popf
or
fnsave
pop
in
xor
cltd
xchg
stc
aam
cmp
mov
shll
call
jl
push
jne
rorl
data16
mull
aad
fwait
je
out
xchg
adc
sub
cld
lret
popa
pop
testb
mov
es
xchg
or
lret
xor
out
jno
stc
outsl
std
outsl
jg
push
mov
pop
add
pop
leave
push
and
fsub
add
cli
loopne
roll
dec
dec
imul
jl
mov
cmp
mov
repnz
int3
mov
out
xchg
test
mov
jmp
mov
shr
fprem1
sub
sub
push
test
push
out
in
mov
mov
mov
repnz
pop
ljmp
sub
out
lret
dec
jecxz
popf
jne
cmp
in
xchg
adc
out
shr
lret
pop
xor
mov
int
pusha
or
xchg
dec
mov
adc
int
outsl
mov
movsl
insb
cmpsb
shlb
inc
popa
stos
lock
out
inc
pop
aas
add
mov
jmp
ds
test
test
daa
outsl
fimull
fmull
lcall
repnz
imul
lods
jne
add
sub
outsl
in
lea
mov
adcl
or
mov
rcll
push
jo
adc
into
pop
mov
out
pop
push
xchg
nop
sub
or
nop
pop
loope
cmpsl
sbb
ljmp
pop
in
xchg
mov
hlt
pop
popf
repnz
enter
mov
xchg
pop
adc
cld
ret
pop
ret
shl
enter
dec
push
into
stc
push
stos
out
mov
push
cmpsl
mov
adc
push
and
push
xchg
and
jno
cli
jb
nop
pop
dec
or
lahf
mov
dec
cmp
loope
inc
lea
add
fcmovnb
dec
sub
mov
push
sbb
mov
inc
mov
aas
testb
pop
and
pop
in
clc
lods
sub
aas
adcl
sbb
and
std
gs
jge
test
xchg
mov
sub
js
imul
out
pop
insl
or
sub
and
mov
lds
sbb
jae
js
repz
jl
push
push
data16
xchg
mov
test
lahf
push
jp
not
iretw
daa
mov
mov
sub
pop
mov
and
sbb
jecxz,pt
stc
sub
mov
mov
andl
jecxz
add
inc
add
rcr
int
xor
aaa
jno
inc
out
cld
or
cmp
jge
fidivrl
push
adc
mov
cltd
mov
cltd
out
mov
fisttpl
jmp
jo
js
xor
cmc
xor
fidivs
adc
insl
sarl
repnz
xchg
and
sahf
je
mov
push
enter
test
test
add
mov
or
loope
add
aaa
cmp
pop
or
jno
rcr
insl
outsb
push
sbb
call
sbb
scas
pop
test
dec
stos
push
ficoml
dec
push
sbb
mov
push
xor
js
push
mov
test
sbbl
ret
ret
aam
sbb
mov
xor
scas
stos
fildl
dec
cld
adc
xlat
and
insb
add
int3
inc
fs
ret
test
xor
stos
push
jecxz
mov
and
xchg
jl
decb
mov
push
addr16
je
dec
loope
movl
andl
test
xchg
cmp
loop
call
push
dec
ja
mov
inc
xorl
inc
pop
mov
fsubl
scas
addr16
imul
jle
push
cwtl
and
sbb
les
mov
mov
data16
cld
adc
cltd
push
mov
mov
lods
add
xor
push
fnstcw
bound
mov
mov
scas
leave
xchg
sub
ja
pop
rcrb
jbe
mov
lcall
mov
je
roll
add
mov
jecxz
or
fcomp
sub
mov
ret
push
aaa
pop
cltd
xchg
fmull
loop
pop
pop
and
push
mov
arpl
sub
in
rorl
aas
cltd
icebp
xchg
lahf
mov
addr16
aad
insl
or
push
pop
lahf
mov
test
add
test
outsl
stos
xor
data16
pop
adc
call
outsl
test
in
pop
adc
mov
mov
xchg
mov
call
out
or
mov
xor
or
jmp
jge
ljmp
mov
adc
pop
ss
xchg
cli
mov
ret
inc
out
xchg
pop
sbb
ret
and
popf
mov
les
and
cmp
ret
lret
push
push
call
jl
mov
add
jno
jge
enter
pop
sahf
mov
mov
into
mov
cmp
dec
loopne
sar
inc
cmc
dec
xchg
mov
ret
sti
arpl
sti
inc
je
pusha
in
pushf
mov
pop
jnp
dec
insb
mov
xchg
or
popa
pop
int3
push
ja
inc
inc
xor
cmp
push
addr16
push
mov
cmp
data16
mov
mov
cmpsb
lret
cmp
adc
push
lret
sub
sbb
adc
cmpl
enter
lds
xor
mov
insl
lods
sbb
ja
mov
inc
add
test
cmpsb
adc
adc
add
pop
imul
ss
mov
popf
adc
out
mov
int
inc
mov
sbb
mov
and
and
lret
in
decl
aaa
pop
lret
cmp
jae
std
adc
cmp
jb
adc
test
test
sbb
sub
sahf
jnp
jecxz
insl
test
rclb
or
jp
js
mov
push
adc
and
pop
rclb
out
xchg
psrlw
jo
pop
popa
dec
addb
ljmp
dec
inc
mov
in
cltd
daa
shrb
xchg
xchg
imul
inc
loope
inc
fsubs
add
mov
xchg
and
lret
mov
pop
ss
insb
or
cmp
xor
cmp
arpl
mov
cmpsl
mov
loope
notl
xlat
mov
lea
loop
pop
shr
stc
cmp
xchg
clc
push
xchg
movsb
add
jno
fistps
into
test
out
cmp
xor
fcmovnb
mov
add
repz
dec
xchg
fiaddl
xor
and
xchg
sbb
hlt
ds
or
hlt
pop
sub
inc
inc
adc
push
adc
scas
push
inc
pop
dec
inc
add
jp
mov
xor
fisubrs
cs
lahf
cmp
mov
popf
jnp
mov
dec
push
fnsave
cmpsb
add
cmp
rclb
lret
inc
xor
push
outsb
loop
dec
sbb
mov
pop
xchg
pop
addr16
jo
jo
or
arpl
jmp
out
push
aad
repnz
lea
xchg
ljmp
push
push
adc
dec
push
int
stos
and
inc
mov
push
mov
repz
inc
cmp
push
pop
aas
mov
orl
adc
jg
and
fucomp
cmp
xchg
neg
mov
test
out
int
dec
das
addr16
sub
adc
test
pushf
outsb
or
pop
aaa
sub
mov
adc
jl
sub
mov
rolb
lods
cmp
cmpsb
es
call
sbb
lret
loope
fimuls
jmp
xor
mov
mov
popf
js
scas
sub
mulb
mov
cmpsb
push
adc
enter
xchg
fs
fbstp
jns
xchg
mov
imul
xor
movsl
jb
pop
jecxz
test
loop
xor
or
jno
inc
imul
jecxz
outsb
movsb
xlat
pop
xor
xor
outsl
jp
xchg
sbb
pop
xchg
in
mov
arpl
dec
movsb
mov
ljmp
xchg
xor
imul
jp
or
and
inc
cmp
sub
dec
adc
dec
out
outsb
and
neg
aaa
imul
sbb
xchg
in
scas
call
push
jae
sub
ja
fs
mov
mov
or
into
push
push
push
mov
daa
pop
sub
pop
inc
mov
add
sbb
mov
loopne
adc
and
mov
out
movsb
lret
cmp
pop
mov
clc
sbb
inc
aaa
popa
call
ficomps
jg
stos
popa
sbb
int
outsl
mov
sub
xchg
pop
or
imul
or
sbb
movsb
mov
enter
sbb
and
dec
and
push
incb
pop
dec
mov
jbe
cmp
jg
xor
in
stos
cmp
test
mov
jo
movsb
dec
mov
mov
xor
jae
jne
mov
push
mov
ret
lods
popa
push
fdivr
rorl
fnstcw
pop
popf
and
dec
inc
mov
push
mov
pop
cmp
or
pop
stos
fcomps
dec
xlat
je
filds
xchg
xchg
lret
lcall
js
rcl
sar
inc
mov
mov
dec
loopne
imul
xchg
test
mov
pop
inc
jecxz
xchg
repnz
mov
lahf
jne
cmp
adc
loop
mov
mov
pop
std
xchg
notl
sbb
mov
fiadds
rorl
pop
mov
sub
dec
orb
inc
xchg
pop
imul
push
pop
mov
mov
jo
add
negb
lret
das
filds
inc
xor
mov
enter
jg
sub
mov
jle
cltd
or
cmc
ss
arpl
adc
and
out
dec
insl
mov
addr16
test
lods
je
mov
aaa
dec
add
jge
mov
pop
or
pop
mov
adc
sbb
cmp
sahf
xchg
sub
jno
mov
jmp
test
cld
roll
lcall
xchg
mov
jp
jns
adc
je
xchg
clc
mov
popf
gs
stc
adc
cmp
sub
test
popl
mov
mov
push
xchg
cmpsl
int3
aam
popa
enter
test
aaa
sub
ret
jb
pop
xor
xlat
xor
jnp
push
cmp
xchg
mov
and
pop
and
add
mov
call
sub
call
clc
inc
outsb
jne
and
xchg
dec
pop
pusha
mov
mov
out
or
fidivrs
sarb
mov
pusha
and
sbb
lea
enter
dec
pop
loop
addr16
ds
negb
idivb
sbb
shll
sbb
sbb
pushf
mov
jne
mov
mov
ja
insl
cs
cwtl
and
repz
mov
adc
loope
cs
mov
pop
xchg
jne
jae
and
or
out
repnz
and
mov
stos
and
popa
mov
mov
loopne
mov
inc
sbb
jl
ret
mov
add
out
add
cmp
pop
adc
je
das
sbbb
add
xor
lods
lods
add
das
dec
nop
lret
mov
in
xchg
add
adc
into
cmc
mov
dec
inc
mov
jg
sbb
fcomp
fisubrs
call
or
inc
add
pop
sahf
cld
inc
ret
mov
sarl
jae
outsb
ss
or
push
aas
push
mov
push
cltd
cmp
jg
aaa
imul
jle
or
jg
rorb
and
mov
adc
jp
int3
ret
popa
inc
lock
aas
sbb
xchg
test
pop
mov
xor
adc
sbb
std
fsubr
add
inc
out
pop
adc
leave
sahf
xlat
push
jge
mov
shll
mov
mov
push
mov
into
pop
insb
and
loope
call
jmp
pop
cld
xchg
jmp
inc
mov
hlt
pop
mov
imul
xchg
and
in
aaa
ljmp
insl
inc
ret
sub
or
pop
or
sti
push
int
clc
jns
leave
data16
mov
jmp
xor
js
mov
outsb
outsb
pop
jle
daa
ds
out
jmp
dec
and
xchg
pop
outsl
sbb
cld
sub
outsb
xor
ret
cld
in
vpunpckhqdq
adc
test
bound
test
mov
xchg
imul
add
lahf
fidivl
icebp
jp
mov
inc
or
push
lret
jb
push
sub
xor
and
xor
stos
and
pop
icebp
xor
idivb
addb
sub
inc
cmp
lock
test
lods
mov
aas
xor
stc
inc
mov
jge
rcl
gs
xchg
push
push
enter
iret
test
shlb
mov
imull
inc
loop
gs
fs
pop
mov
mov
addr16
jle
add
and
lret
sbb
jp
mov
repnz
ret
fidivrl
movsb
mov
dec
sub
mov
mov
jno
lock
add
jmp
in
inc
enter
in
dec
shll
int3
bound
dec
inc
xchg
xchg
or
std
sarl
inc
add
fs
push
jne
pop
dec
xlat
cmpsl
cmp
mov
and
push
pop
jmp
sbb
or
jl
fcoml
push
xchg
mov
adcl
jno
sbb
sub
fcomp
loop
sbb
jmp
movsb
xor
out
ficoms
lcall
ss
ret
and
and
insb
or
mov
xchg
inc
dec
or
in
fdivrl
xor
add
pop
test
test
mov
xchg
subl
cltd
push
adc
data16
sub
sub
out
les
inc
xchg
or
xorl
mov
push
xor
scas
push
xchg
jbe
mov
popf
shl
bnd
addl
or
cli
aad
mov
push
mov
loopne
adc
sti
lods
add
dec
dec
sbb
add
ss
fildll
pmullw
or
jae
dec
inc
ss
and
jp
lods
jne
jl
fwait
pop
push
cltd
push
cmp
movsb
push
push
ljmp
stos
push
shll
jmp
xchg
scas
mov
jo
push
inc
lret
xor
cli
aad
lahf
aaa
cmp
in
mov
jmp
ljmp
and
cmc
in
cvtpi2ps
shl
mov
push
xchg
sbb
call
xor
dec
cmp
pop
xor
lcall
lahf
jl
loop
cmp
stos
xor
insl
inc
mov
xor
mov
mov
dec
mov
mov
in
add
xorl
mov
imul
popa
dec
gs
mov
shlb
aas
xor
bound
cmp
adc
pop
jecxz
das
mov
popf
and
mov
mov
push
lods
outsl
lods
call
mov
mov
in
ds
adc
loope
add
sbbb
popa
jnp
fistps
lock
and
jle
stos
jno
jnp
scas
pushf
and
test
orb
fcoms
dec
mov
fs
add
lods
jmp
into
leave
sub
jns
sbb
inc
sub
xor
jle
push
mov
outsb
les
xchg
mov
push
out
das
sub
test
sbb
lcall
movsb
add
aaa
es
addr16
div
dec
pop
inc
ds
rolb
mov
dec
cmpsl
adc
pop
jne
cmp
into
je
lods
fwait
aam
js
and
pop
jae
loop
sbb
jb
adc
jp
mov
dec
movsl
das
ja
push
push
cld
cmp
pop
idiv
mov
aaa
fists
in
out
je
and
iret
leave
adc
add
inc
xchg
pop
push
rorl
aaa
jecxz
dec
mov
mov
xor
enter
mov
sbbl
lret
xor
rorb
arpl
jp
and
dec
xchg
cmpsl
and
cmpl
cwtl
push
mov
xor
movsl
outsl
aaa
decb
mov
in
shrl
lret
sub
adc
shll
xchg
push
icebp
xor
sti
add
fwait
sub
int
in
bound
outsl
ja
xor
cltd
dec
bound
add
push
dec
imul
stc
push
loopne
data16
test
add
rcll
cmp
inc
dec
lahf
pop
pop
les
and
dec
add
ljmp
pusha
cli
iret
stc
std
adc
xchg
mov
scas
xor
cli
jge
dec
leave
jp
imul
add
xor
mov
sub
loope
xor
adc
pop
xchg
xor
rcrl
sub
ljmp
jne
mov
aas
addl
fs
stc
imul
jmp
rcrb
enter
jle
rcrl
aad
rcrl
insb
jae
in
pop
je
adc
lret
rcll
jbe
cmp
and
push
iret
push
pushf
sbb
mov
test
lock
inc
addr16
insb
xlat
in
nop
rcll
xor
lds
lods
je
stc
icebp
dec
jno
mov
mov
xchg
or
test
mov
mov
jns
ss
push
or
insb
cmc
sub
rclb
aad
inc
lock
cmp
inc
mov
fbstp
push
xlat
loop
push
shrb
xchg
cltd
mov
xor
fidivl
sbb
pop
inc
mov
pushf
xchg
dec
or
add
or
xchg
arpl
mov
sbb
inc
jb
xor
daa
sti
and
fsubrl
jle
cmp
or
arpl
mov
test
orl
xchg
push
sahf
insb
push
cmc
stos
jb
cmpsl
out
ja
in
jmp
das
mov
jg
jns
ljmp
dec
jg
cmpb
mov
cmpsb
or
mov
lea
xorb
aam
xor
sub
pop
dec
push
add
push
cli
and
and
and
pop
jecxz
xor
adc
sub
adc
hlt
fildll
imul
add
add
mov
aad
pop
aaa
cmc
std
jecxz
clc
enter
roll
add
cmpsb
aaa
dec
add
ja
xchg
stc
lret
stos
aaa
dec
decb
arpl
cmc
xor
pop
movsb
xlat
enter
jne
mov
orl
dec
jp
popa
sbb
popa
push
jo
push
popa
push
in
dec
setae
pushw
push
dec
sbb
or
andl
icebp
mov
call
lcall
xchg
out
fistl
lods
xchg
jmp
adc
fmuls
inc
jae
in
ss
stos
fnstenv
fcoms
addr16
loope
pop
gs
clc
inc
dec
enter
notb
fs
pop
push
fcmovb
test
cmp
push
je
inc
jns
call
insl
je
test
pop
into
and
adc
cmp
iret
inc
hlt
and
dec
dec
jge
lret
mov
xchg
call
jmp
call
sahf
mov
es
add
bound
jb
test
into
sub
iret
dec
movsb
mov
mov
mov
loopne
pop
lahf
aad
cmp
orl
pop
mov
adcl
shrb
es
clc
jp
fcmovne
adc
sbb
ljmp
jnp
add
mov
jnp
rcrl
enter
outsl
fmuls
mov
mov
dec
xchg
cs
aaa
adc
int3
pop
cli
popa
lcall
es
pusha
adc
cmp
repnz
fs
loope
icebp
stos
scas
call
icebp
repnz
cmp
mov
mov
sub
repz
ret
sar
sub
adc
lret
inc
mov
call
pop
mov
mov
in
mov
aas
test
mov
and
sbb
aaa
dec
ror
jmp
adc
jbe
test
cmp
push
push
xor
rcll
test
bound
cmpsl
jmp
mov
inc
pop
pop
fidivrl
test
add
ret
lahf
push
fnstsw
and
inc
sbb
loop
pusha
xchg
lret
xor
push
dec
popf
add
mov
jge
gs
aad
pushf
lret
lahf
dec
repz
jl
cmp
in
out
aam
sbb
cmpsb
sub
mov
inc
testb
adc
inc
hlt
in
mov
pop
jae
sub
mov
ja
outsl
xchg
loopne
enter
jnp
mov
out
pop
inc
sahf
test
push
jnp
pop
mov
decb
sub
int
pop
push
or
jmp
popa
mov
mov
cwtl
imul
mov
das
jne
sub
imul
xchg
and
jle
iret
dec
fdivs
pop
xor
push
mov
xchg
mov
icebp
and
pushf
rcl
lods
jle
in
and
add
subb
inc
jno
inc
inc
bound
dec
sub
loopne
clc
dec
jg
sarl
mov
ja
outsl
mov
mov
dec
push
inc
sti
pop
mulb
sbb
xchg
push
cmp
ss
add
xlat
inc
add
test
sub
test
add
dec
xchg
xchg
in
test
push
jno
out
adc
loopne
mov
inc
xor
mov
test
sub
and
int3
fistl
ss
and
movsb
dec
jbe
sbbl
sub
test
cwtl
mov
cli
fwait
mov
aas
enter
in
jmp
xchg
xor
leave
mov
pusha
or
cmpsb
or
fs
fwait
pop
ss
push
nop
mov
hlt
aas
shlb
mov
mov
cltd
dec
xor
enter
out
dec
dec
or
insl
push
cmc
data16
lahf
int3
adc
test
in
les
loope
cmp
in
sub
mov
stos
or
pop
adc
mov
mov
jmp
movsbl
inc
scas
lds
mov
pop
out
call
xor
cld
stos
mov
and
dec
mov
fisttpll
pop
jnp
sahf
aad
jo
push
test
setb
iret
popf
cmp
mov
hlt
cmp
enter
xchg
test
ficoml
outsl
add
jp
sub
imul
cmpsb
adc
mov
loop
inc
add
int
ret
mov
sub
xorb
and
jge
mov
sbb
mov
mov
xchg
aad
mov
repz
loopne
mov
push
rcll
mov
mov
cs
scas
adc
fisttpll
sbbl
aaa
sbb
add
lret
std
pop
sbb
fcomp
and
shl
sbb
pop
mov
jb
repnz
mov
or
sti
mov
ret
mov
popf
std
xor
dec
push
inc
mov
mov
xor
sar
mov
add
call
mov
pop
daa
in
lret
sub
mov
mov
das
mov
inc
pop
and
sbb
mov
hlt
jle
inc
aaa
dec
mov
aam
dec
fsubrs
out
xchg
rcrl
aaa
cmp
arpl
js
inc
xor
dec
icebp
pop
pop
cmp
add
clc
xor
movsl
mov
jbe
cltd
jmp
and
dec
sub
mov
or
cs
insb
sbb
fwait
mov
fisubrl
out
xchg
cmc
mov
scas
movsl
and
movsb
push
push
pop
pop
stos
push
cmpsb
lahf
add
inc
mov
mov
loope
adcl
rolb
dec
hlt
scas
adc
xchg
shrl
icebp
jns
adc
cli
out
repnz
icebp
and
aam
pop
out
cmp
pop
das
and
jno
addr16
sub
rorl
outsb
rcrl
orb
or
xor
jb
cmc
push
mov
mov
add
xchg
leave
xchg
outsl
shrl
flds
add
pop
sub
cmc
sub
and
sub
test
cmp
movsb
jb
in
loope
imul
add
jle
je
repnz
gs
loopne
mov
and
out
loope
cmpsb
mov
js
and
cmp
jo
insl
insb
and
dec
and
enter
addr16
xchg
outsb
xchg
or
ss
pushf
popl
sbb
test
xor
ret
or
js
cmpsl
xchg
sbb
bound
add
jge
adc
clc
xor
mov
xor
jne
cltd
imul
fwait
pop
test
lret
cli
leave
les
in
and
jbe
repnz
mov
or
repnz
mov
jo
xlat
fld
inc
out
jbe
and
faddl
ret
inc
pop
push
aas
pop
mov
adc
pop
in
sub
out
out
xchg
enter
or
inc
frndint
mov
lret
and
cs
sahf
imul
movsb
xchg
pop
in
test
in
push
ret
testb
mov
or
imul
fwait
inc
lods
push
lods
push
cmpsb
test
aaa
mov
out
xchg
cmp
add
roll
inc
inc
stos
xchg
jns
lods
imul
add
shl
push
inc
dec
ds
bound
inc
cmp
pop
add
loope
push
cld
mov
bound
into
pushf
jmp
xlat
scas
dec
inc
stos
nop
mov
cmc
in
test
mov
mov
cmp
int3
dec
cmp
or
dec
ja
sub
mov
inc
push
and
xchg
inc
adcb
dec
lods
jl
scas
pop
sbb
mov
push
lock
xchg
insb
in
in
dec
push
aad
int
cwtl
add
dec
mov
pop
push
and
fs
pop
xchg
fldenv
jno
movsb
cwtl
cwtl
push
jmp
ljmp
fucomp
sbb
loope
loope
daa
popf
mov
mov
decl
in
pop
rcrb
shr
sahf
test
cmp
sahf
mov
mov
ljmp
sbbb
sahf
cmp
imul
fstpl
cli
fs
lret
das
xchg
loope
int
mul
dec
adc
mov
push
xchg
lock
movsl
jg
popf
or
pop
std
popa
outsb
enter
shl
stos
loopne
cmp
dec
lods
xchg
andl
ror
jb
out
ficompl
mov
sbb
xchg
outsb
mov
cmp
ret
jecxz
fs
dec
sub
out
das
fnsave
inc
stos
outsb
test
adc
mov
pop
cli
adc
xchg
adc
lea
xchg
xor
pop
xor
add
jmp
jp
int
ljmp
insl
andb
sbb
hlt
inc
out
fists
mov
stos
jmp
imul
std
xor
xor
jmp
lahf
mov
movsb
lods
dec
cmp
inc
scas
push
test
xor
cmpsb
pop
cli
dec
xchg
mov
pop
pushf
cli
cld
mov
rcrb
push
gs
dec
insl
repz
jg
mov
cltd
cli
insb
cwtl
imul
fstpt
rorl
add
pop
loop
pop
das
adc
cmpsb
scas
mov
icebp
dec
sti
clc
cltd
insb
xchg
jg
and
pushf
mov
insl
add
xchg
dec
or
mov
dec
orb
sub
inc
xchg
out
push
push
lods
dec
cltd
jae
jl
xlat
fs
mov
cmp
popf
lds
dec
jno
add
or
lods
hlt
arpl
pop
lods
cmpsl
jb
cmp
or
repz
pushf
mov
rol
pusha
pushf
movsb
dec
shlb
sti
xchg
inc
test
es
sub
cld
outsl
pushf
sub
sub
scas
sbb
rcrl
test
adc
mov
jne
rcll
adc
mov
pop
lds
stc
jbe
pop
leavew
mov
add
inc
add
lahf
jbe
mov
mov
sbb
test
shll
ds
in
iret
xchg
rol
lea
in
push
outsl
add
adc
push
repnz
das
push
sub
cs
add
adc
and
sbb
popa
mov
fistpll
les
mov
lret
jb
inc
imul
and
mov
leave
jnp
cmp
andb
pop
cltd
pop
repnz
aad
mov
inc
mov
in
inc
iret
nop
sub
push
enter
mov
push
movb
dec
jecxz
or
cmpsb
sub
movsb
sarb
je
pop
fistps
jge
movsb
fstpl
stc
hlt
cmp
iret
push
adc
xlat
stos
mov
adc
cmp
xchg
lahf
adc
imul
testl
push
outsb
rcrb
outsb
cmpsl
mov
out
into
lock
mov
xchg
movsb
scas
jecxz
ss
push
es
sub
daa
dec
cmp
icebp
scas
shlb
jne
pop
mov
pop
push
dec
cmpb
popf
mov
or
mov
scas
jo
iret
inc
or
jns
jo
inc
daa
dec
pop
xor
adc
in
pop
mov
bound
pop
loopne
mov
fcompl
test
or
mov
mov
nop
scas
scas
jo
pop
inc
mov
sbb
icebp
dec
push
cmp
cmp
inc
sbb
clc
sub
stos
or
movb
incl
adc
push
dec
sbb
dec
in
hlt
or
mov
sub
or
jge
xchg
lahf
mov
aad
xchg
adc
fwait
idiv
sub
inc
int3
add
mov
cmpsb
mov
fdivrs
call
cmpl
loopne
orb
repnz
loope
es
push
sahf
push
imul
pop
sbb
and
sti
push
aad
rclb
cltd
lcall
dec
mov
and
rcl
outsb
cmpsl
and
cmp
pop
and
xorl
pop
adc
stos
pop
cmp
nop
cld
sub
xor
cwtl
sub
enter
call
mov
push
out
push
mov
imul
fldl
mov
subb
rcr
pushl
loopne
xchg
mov
aad
sbb
mov
stc
cmp
ret
push
or
mov
pop
cli
add
and
fistpl
push
fcomps
push
and
aam
mov
mov
outsb
mov
enter
test
pop
dec
addl
ret
push
pop
push
in
adc
or
add
pop
test
jg
sbbb
push
rcr
dec
xchg
imul
popf
in
mov
sbb
insb
jnp
lock
cwtl
dec
fcoml
lods
arpl
push
repz
test
es
enter
mull
ret
and
or
cmp
or
imul
dec
xchg
mov
stos
push
ret
insl
je
lods
pop
gs
cs
xchg
sbb
xor
test
mov
mov
add
xchg
xor
jns
mov
test
in
dec
push
gs
shrl
loop
sar
jo
pushf
cld
dec
sbb
cs
sbb
fdivl
jae
push
adc
out
mov
test
lea
inc
in
sub
dec
outsb
emms
out
lock
arpl
dec
mov
mov
lea
fwait
jb
sbb
mov
pop
xor
sbb
xchg
lds
mov
sub
cmpsb
or
sub
jno
filds
pop
xchg
bound
mov
test
add
sbb
lret
inc
mov
dec
movsb
ret
jns
and
faddl
repnz
cmp
inc
adc
sbb
jmp
mov
lret
sbb
and
outsb
mov
dec
cli
inc
das
jb
pop
xor
int
jnp
cld
in
adc
les
sub
or
sti
adc
inc
inc
mov
adc
jmp
cmp
mov
pop
push
lahf
or
sub
mov
inc
or
lcall
lahf
shrl
pop
mov
sub
pop
aam
push
add
movlps
cmpsl
popa
out
cmp
dec
das
leave
bnd
repz
lret
adc
jno
mov
hlt
add
mov
jno
out
mov
or
and
sbb
insl
icebp
or
aas
sub
push
adc
sub
jp
jge
push
sub
jmp
dec
push
add
ret
mov
mov
mov
mov
dec
test
fistl
out
xchg
jne
bound
pop
pop
jl
addb
xlat
je
lcall
pop
sbb
and
cli
xor
outsb
ss
loopne
mov
cmp
mov
loopne
lcall
pop
adc
aaa
mov
ja
pop
leave
inc
sbb
and
lea
stos
daa
cmp
mov
mov
inc
rcrl
push
sahf
and
leave
popa
aam
or
shl
add
popa
or
mov
jns
rcl
adc
test
mov
scas
pusha
xor
mov
and
jne
and
test
push
addr16
and
loope
in
stos
xor
ss
inc
out
adc
xchg
roll
ret
scas
add
xchg
xor
data16
cwtl
lahf
xchg
ljmp
daa
jns
inc
mov
aas
ja
je
jnp
pop
xor
movhps
out
cmpb
sub
adc
divb
jnp
add
pop
into
push
into
jnp
shlb
cs
pusha
arpl
mov
sub
out
movsb
push
and
lcall
fsubrs
stc
push
pop
jmp
es
mov
jecxz
movsl
dec
cmp
lds
in
pushf
or
sahf
add
inc
or
sub
xchg
mov
mov
push
and
ror
andb
mov
push
sub
cmp
inc
inc
icebp
test
pop
push
mov
int3
cwtl
dec
mov
adc
in
fcoms
sbb
aaa
sub
cmpsb
iret
mov
das
mov
push
inc
xchg
test
movsl
dec
idivb
xor
iret
add
scas
lods
mov
jbe
lcall
insl
in
sbbl
dec
mov
xor
repz
andb
lahf
into
cmpsl
loope
adc
dec
dec
aad
leave
cmp
xlat
add
scas
jns
push
sub
ss
dec
mov
rol
dec
cltd
sub
mov
inc
pop
stos
out
ds
popa
dec
pushf
xchg
pop
insb
sub
and
jno
and
add
insl
push
push
cltd
in
lahf
cld
fwait
xchg
mov
xchg
divb
sub
jmp
jo
or
or
mov
dec
mov
rep
inc
pop
add
jbe
lea
push
int3
inc
lds
in
imul
mov
sub
test
inc
mov
fstpt
mov
push
dec
jp
inc
mov
mov
mov
mov
jne
dec
addr16
cmp
jmp
popf
jl
imul
out
leave
push
iret
mov
xorl
iret
or
cmp
dec
jnp
xor
xchg
mov
sbb
xor
ljmp
adc
sbb
pop
cmp
cli
int3
testl
add
int
sub
shrb
sarb
mov
cli
jns
mov
out
inc
mov
cmp
and
xchg
xchg
mov
test
cltd
mov
mov
aas
add
in
inc
pop
cmp
xlat
mov
xor
rcl
js
mov
inc
add
inc
leave
fs
scas
cmp
sub
fwait
es
mov
jb
cmp
inc
lea
outsl
pop
inc
pop
orl
push
mov
fdivrl
dec
shl
test
aaa
loopne
and
jge
push
icebp
pop
mov
lahf
sub
out
pusha
icebp
inc
xor
ss
or
gs
mov
mov
cmp
and
mov
imul
mov
sbb
xor
aaa
cli
adc
fidivl
mov
out
ss
mov
lock
dec
sub
and
or
fsubp
outsl
xor
mov
xor
pop
mulb
jnp
insb
mov
sbb
cmpsl
cs
xorb
mov
cmp
mov
ss
insl
shl
or
lods
adc
mov
out
and
adc
bound
mov
mov
xchg
inc
adc
sub
pop
push
stc
add
push
adc
xor
test
pop
sub
cmp
jecxz
push
and
xchg
repz
fsubrl
add
jg
test
push
outsl
pop
in
clc
adc
jmp
mov
mov
mov
test
jae
cmp
lret
mov
mov
push
or
or
add
ljmp
lock
stc
shl
jo
hlt
xor
sbb
mov
push
jne
out
dec
mov
pop
add
sub
jo
scas
ss
pop
pusha
adc
hlt
popa
fmuls
ret
push
or
lret
sar
outsl
stos
je
xchg
in
push
fdivrp
xlat
popf
sahf
jnp
xchg
cmpsl
adc
inc
ljmp
mov
bound
gs
js
clc
hlt
notb
pusha
bound
jns
and
sbbl
jle
popl
pusha
nop
cmpsb
insb
pop
arpl
ror
jne
pop
insb
movsl
mov
ljmp
push
pop
popf
push
aad
lock
jg
mov
mov
add
out
mov
pop
out
pop
add
popa
mov
xor
shlb
mov
push
dec
dec
in
mov
les
xchg
outsb
mov
sahf
jmp
mov
lret
je
stos
test
jae
dec
sub
das
cwtl
js
idiv
daa
out
or
out
push
add
scas
push
insb
sahf
outsb
fwait
test
or
jns
decl
cmp
jb
sub
mov
dec
inc
insb
lret
xchg
cli
cmp
push
xchg
adc
mov
sbb
fisubrs
mov
pushf
or
sub
mov
and
pusha
iret
int
jne
out
mov
ja
int3
mov
and
test
or
cmp
push
jp
arpl
jmp
fs
mov
in
mov
clc
test
lcall
dec
pop
mov
jmp
add
xor
pop
and
hlt
jo
out
xor
rcl
int
in
xor
adc
add
lods
jae
jo
out
sbb
and
lret
sbb
xchg
xor
out
js
inc
adc
add
xchg
aaa
cmpsb
push
jbe
outsb
adc
aad
push
cld
mov
popf
xor
test
icebp
cmpsl
daa
movsl
stc
jg
inc
inc
test
xchg
pop
mov
mov
cmp
lret
fcoms
in
mov
bound
xchg
sub
mov
imul
cwtl
mov
fwait
add
add
and
push
jle
inc
xor
mov
aam
aam
fidivrl
cmc
mov
rcr
into
divl
sub
mov
cwtl
test
adc
adc
pop
stos
lock
or
clc
mov
and
ljmp
inc
cmpl
mov
enter
stos
aas
push
fstl
stc
jo
imul
push
pop
mulb
adc
mov
xchg
mov
lods
lcall
and
movsl
insl
jne
jnp
xchg
cmp
leave
sti
xlat
xor
pop
mov
pop
push
popa
pop
stos
or
xchg
pop
pop
mov
inc
movb
xchg
fsubl
dec
push
ficoml
loope
dec
int3
sub
mov
jmp
scas
repnz
jge
sbb
out
andb
xchg
xchg
push
sti
cmpsl
and
cmpsb
xor
test
ljmp
mov
leave
inc
cmp
clc
jno
jp
dec
inc
lods
into
jge
pusha
sbb
movsb
pushf
push
setnp
aad
mov
dec
jbe
jns
lcall
xor
jnp
mov
inc
dec
inc
push
ss
xchg
int
lods
test
add
xchg
mov
sbb
ret
push
addr16
fcoms
cmp
push
adc
in
imul
mov
xor
cwtl
jnp
mov
jns
cltd
and
sbb
fldcw
and
ret
sbb
imul
and
icebp
mov
out
popa
ljmp
push
inc
je
push
push
sub
adc
mov
adc
inc
cmp
and
fincstp
fdivs
ss
sub
cmp
sbb
cltd
insb
clc
test
cmp
test
push
mov
adcb
cmpl
lock
enter
adc
xchg
cmp
mov
scas
sub
pushf
sbb
jmp
jl
lds
movsl
cmpsb
lcall
outsl
push
movsl
sbb
cld
cmc
inc
mov
out
aam
les
and
or
je
fcoml
lret
frstor
lds
push
lods
or
test
pop
or
sahf
sub
movsb
popa
push
in
or
lods
push
rorl
fstps
das
sub
out
dec
mov
int3
imul
mov
adc
push
jp
stos
enter
jl
lcall
jae
js
cwtl
pop
jl
sbb
xlat
hlt
and
jb
ret
movsl
or
sbb
push
and
in
addl
sbb
cmpsb
dec
push
sti
cmp
xor
ss
movl
add
add
mov
int
imul
xor
xchg
mov
sbb
lea
leave
or
pop
adc
clc
fmul
mov
mov
inc
mov
aas
aaa
push
sbb
scas
pusha
pop
mov
outsb
xchg
nop
pop
adc
loopne
mov
cli
imul
sub
lret
and
cmpsb
imul
into
sbb
clc
mov
sti
fdivrp
popf
shrl
push
jnp
in
push
xor
out
ljmp
out
call
mov
mov
cld
arpl
fsubrl
dec
fiadds
aam
xchg
mov
sarb
notl
outsl
repnz
pop
lea
mov
fwait
gs
mov
xchg
shrl
data16
outsl
dec
or
test
cmp
jbe
fwait
rorb
fiaddl
inc
iret
out
mov
mov
push
mov
dec
sub
push
and
push
popf
inc
ljmp
out
fldenv
mov
sbb
sahf
rcl
xlat
cmc
cmp
mov
mov
pop
jns
pop
xor
js
xor
es
mov
andb
data16
sbb
arpl
inc
push
inc
and
pop
sbb
test
adcl
cmc
test
xchg
pop
cmp
scas
dec
or
test
shlb
inc
push
push
cld
nop
lahf
insb
rcrb
mov
jl
xchg
mov
lods
icebp
loop
sub
hlt
insl
arpl
cmp
sbb
mov
push
jns
scas
test
and
outsb
xchg
sbb
ss
mov
daa
adc
cmp
add
data16
ret
adc
add
pop
mov
jl
mov
imul
jmp
cld
jmp
in
icebp
lods
imul
ja
cmpsb
lock
pop
inc
outsb
mul
shrb
test
test
cmp
inc
cmp
pop
outsl
jbe
cmp
fnstsw
mov
lods
jne
add
popa
iret
inc
mov
dec
dec
mov
fcompl
aaa
inc
mov
sbb
and
fiadds
xor
or
pop
popl
ljmp
in
enter
les
add
imul
or
stc
sub
cwtl
pop
les
fbld
lods
push
adc
fildll
push
ficompl
adc
sbb
inc
data16
addl
loope
in
cmp
jno
fs
test
sbb
mov
push
lahf
jnp
mov
aad
outsl
sahf
cmp
xor
mov
mov
fistps
push
jmp
cs
sbb
push
adc
inc
xchg
std
loop
adcb
test
push
stos
sub
cmp
out
cmp
mov
fisttpll
test
ss
mov
push
mov
gs
mov
out
popf
inc
cwtl
mov
push
push
sbb
pop
push
mov
xchg
imul
mov
mov
test
rcrl
jg
and
push
or
pcmpeqd
arpl
mov
fisttps
push
sub
add
arpl
mov
xor
add
mov
stos
inc
jne
pop
push
ja
adc
lret
ret
add
pop
and
jb
test
jecxz
push
iret
cmp
inc
or
jns
stc
mov
xchg
or
pop
repnz
mov
adc
adc
out
ja
data16
addl
jmp
je
popf
mov
pop
mov
test
fs
jge
out
jl
push
or
jmp
dec
push
imul
pop
stc
mov
mov
outsl
add
xor
push
cmc
push
ret
mov
lret
xorl
data16
fs
add
add
or
in
sub
mov
insb
pop
outsl
mov
xor
fnstcw
mov
jg
cwtl
fcomp
pop
jnp
cli
out
xchg
push
lock
js
mov
inc
xchg
cmp
xchg
sub
fistps
shlb
shll
jns
daa
inc
xchg
sub
ret
pop
jno
and
hlt
std
enter
scas
seta
push
mov
add
pop
jb
dec
mov
dec
jmp
lods
cmc
lret
shlb
sub
addr16
in
adc
je
add
dec
fsubp
xchg
bound
pop
sbb
arpl
into
popa
inc
daa
daa
mov
in
sub
adc
mov
lods
mov
rcrl
mov
movsl
addl
mov
shrb
jo
jp
mov
sbb
test
push
pushf
mov
loop
and
mov
push
mov
fisubl
mov
call
mov
outsl
gs
pushf
test
xchg
lock
xor
cli
jge
mov
es
pop
or
in
lods
xchg
dec
mov
mov
aam
adc
movsl
mov
mov
loope
insl
scas
dec
adc
mov
fiadds
je
jmp
mov
outsb
leave
test
push
into
sbb
dec
pusha
imul
cmp
fsts
mov
push
add
mov
inc
and
scas
push
inc
mov
into
sti
xchg
xchg
int
add
mov
outsl
rcrl
popa
pop
ja
sbb
xlat
sbb
iret
push
jae
rcr
xchg
jp
pop
shr
adc
mov
pop
cmp
sbb
int
lds
push
inc
pop
jge,pt
jne
mov
les
adc
add
movsb
addr16
movsl
imull
pop
pop
mov
sub
dec
push
les
sub
pop
mul
adc
mov
cmp
inc
xor
call
mov
cmp
mov
sub
test
xor
and
mov
movsl
mov
jnp
scas
lods
jecxz
mov
out
mov
sbb
fcoml
jmp
or
ret
int3
or
into
mov
push
pushf
xchg
dec
cmp
or
xor
xor
orb
cmp
in
stos
or
xchg
cmpsb
add
adc
dec
xchg
push
inc
push
scas
dec
shlb
repz
ja
add
aad
add
in
imul
pop
xor
inc
repz
int3
push
jl
loope
inc
xor
mov
lds
cld
and
jg
xchg
inc
scas
ljmp
call
movsb
inc
neg
cmc
fmull
mov
xor
xlat
je
ffree
dec
mov
add
and
int3
and
mov
mov
sbb
inc
cwtl
cld
rolb
jo
jmp
into
pop
adc
adc
mov
jp
lods
aas
inc
mov
push
mov
dec
xchg
mov
lods
or
pop
addb
aam
sub
cmc
in
sub
fdivs
mov
aas
repz
fwait
ja
pop
push
dec
jae
mov
lds
movsl
sti
test
inc
sbb
xor
lret
out
std
nop
jmp
lret
sbbl
loopne
pop
sbb
aaa
loopne
adc
rorb
das
aad
scas
adc
div
mov
das
mov
pop
das
lret
mov
add
pop
data16
dec
or
outsb
ret
and
in
add
out
dec
xchg
cltd
nop
xchg
imul
dec
pop
daa
cmp
testb
xor
jbe
mov
jmp
adc
outsb
rcll
dec
fsubrs
js
addl
shlb
fnstenv
enter
jae
inc
push
mov
popa
stc
add
pop
and
jae
adc
bound
stc
dec
or
or
pop
cmp
sbb
sbb
out
shll
sub
jmp
sbb
and
negb
jne
insb
inc
sbb
adc
push
lcall
cmp
xor
popf
out
aas
pop
call
fiadds
pop
xor
sti
mov
jp
fwait
push
icebp
pop
xor
dec
arpl
cwtl
add
icebp
mov
movsl
pop
aas
negl
mov
test
xchg
jle
jbe
ljmp
and
and
pop
inc
loopne
mov
scas
shll
jp
js
int
pop
sbb
and
or
jb
test
cli
jns
jmp
mov
push
adc
pop
loope
loopne
jae
fwait
mov
je
insl
ss
xor
mov
adc
enter
outsb
insl
outsl
fdiv
insl
mov
push
inc
xchg
rcrl
jp
ja
clc
ds
call
orl
pop
cmp
cmc
adc
sar
cmc
push
lret
mov
js
push
dec
cmc
inc
jne
rolb
mov
pop
in
pop
mov
jp
pop
pop
andl
push
mov
dec
cmp
mov
fnstenv
outsb
add
loop
ret
jg
out
xor
out
scas
and
and
mov
mov
and
inc
daa
xlat
movsb
xchg
xchg
addb
gs
ret
cmpsl
fistps
mov
fdivl
in
mov
adc
inc
sbb
das
push
mov
movsl
add
lods
pop
mov
imul
fstpt
add
daa
cmp
sub
pop
int3
xchg
shlb
lds
incl
fbld
mov
sbb
xchg
sbb
ljmp
add
repnz
mov
mov
icebp
inc
adc
and
repnz
jecxz
fldcw
sub
dec
mov
pop
data16
ret
dec
fnstcw
adc
test
and
insl
jb
sbb
xlat
push
cmp
xchg
push
push
stos
mov
cmpl
cmp
sub
rolb
iret
js
mov
shlb
sub
mov
gs
in
push
pop
adc
dec
push
clc
jle
imul
imul
mov
out
sub
negl
mov
mov
fisubs
sahf
mov
cmp
ljmp
pushf
pop
decb
fisttps
fisttps
std
add
or
fimull
pop
ljmp
mov
mov
mov
outsb
scas
aaa
xor
pop
jb
sbb
cltd
xchg
mov
jnp
push
in
mov
imul
mov
jnp
push
pop
enter
push
jg
data16
jmp
pushl
std
cwtl
add
jmp
int3
mov
ret
js
iret
push
movsl
xlat
pop
sbb
mov
mov
gs
and
inc
lods
add
adc
and
jge
hlt
loope
adc
xlat
inc
repz
xchg
jp
mov
jne
daa
xchg
jbe
stos
dec
push
test
popf
loop
dec
mov
std
adcb
inc
ds
sahf
cmpsb
xor
icebp
mov
fs
loop
insb
mov
leave
push
xchg
mov
sub
jb
repnz
pop
add
xchg
push
jno
xchg
cmpsb
fstps
nop
pop
or
ss
sbb
adcl
bound
cmp
movsl
xchg
mov
jp
mov
push
sub
into
test
ja
jno
mov
cmp
and
dec
mov
addb
xchg
fwait
pop
cld
and
test
push
sub
gs
sub
mov
inc
push
or
adc
in
mov
leave
and
loopne
cwtl
mov
dec
dec
data16
scas
push
inc
out
jge
pop
ss
sbb
adcb
movb
jno
jmp
cwtl
lahf
mov
insb
or
int3
xchg
cmp
dec
movsl
movsb
sub
ret
mov
rol
and
and
inc
das
and
mov
test
mov
sub
stos
cwtl
lea
lods
or
or
sub
cs
adc
mov
shl
faddl
mov
cwtl
mov
or
stc
mov
jb
aam
mov
stc
rcrb
xor
cmp
shl
sbb
xchg
stos
sti
inc
mov
daa
divb
in
mov
sbb
push
ret
or
jns
fisttps
pop
add
xchg
jge
pop
jmp
aaa
adc
mov
call
lods
js
mov
cli
les
jns
dec
sti
arpl
adc
cwtl
pusha
mov
dec
inc
in
jno
outsb
cmp
sub
cmp
lds
pop
push
out
or
lcall
es
jne
mov
jne
jnp
adc
rorb
and
dec
xor
jno
xchg
nop
jo
inc
rcr
addb
mov
call
inc
ss
shll
aas
push
shl
int3
xor
mov
xchg
or
sub
or
or
dec
mov
cmc
orl
xchg
and
rorl
js
push
mov
mov
pop
orl
pop
add
and
in
in
xchg
push
lods
loope
pop
xor
add
xchg
pop
and
test
clc
pop
lea
fwait
mov
mov
mov
mov
mov
xchg
adc
xchg
pop
je
fcmovnb
mov
cli
lds
ds
jge
or
push
mov
repz
cmp
out
dec
into
popa
add
jne
bound
push
ss
push
inc
mov
jbe
insl
inc
addr16
inc
or
and
vsubsd
xchg
add
dec
dec
mov
lret
pop
mov
nop
push
in
pop
jecxz
repz
sbb
sbb
push
or
mov
insl
sub
mov
rolb
mov
and
lock
call
xor
cmp
cmp
pop
js
js
add
iret
jo
push
adc
gs
roll
aaa
inc
out
lods
cmp
fstpl
jno
popf
mov
sbb
sbb
mov
leave
das
nop
aaa
cli
fistpl
mov
loope
movsl
add
rcr
int
lds
imul
jmp
dec
mov
inc
js
dec
fidivl
push
cvtdq2ps
sub
jmp
xor
cmp
push
xlat
mov
pop
dec
out
or
dec
or
enter
push
sbb
adc
jecxz
xchg
int3
dec
fadds
pop
test
js
das
mov
push
and
test
jp
cmc
lahf
mov
pop
mov
aas
sub
dec
push
and
mov
dec
mov
das
stos
push
jnp
rolb
pushf
mov
std
gs
push
mov
push
dec
clc
je
fiaddl
leave
in
lret
jo
imulb
or
mov
fistps
flds
sub
fcoms
aam
mov
loop
inc
inc
jnp
mov
cmpsl
pop
dec
aad
push
mov
sub
fmull
cltd
sub
jns
repz
xor
push
adc
mov
imul
jne
jae
dec
mov
push
push
sti
mov
inc
mov
lret
dec
jg
xchg
pop
xchg
ja
ja
cmp
ja
push
.byte
dec
.byte
