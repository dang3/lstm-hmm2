sti
call
in
sub
incl
pushl
push
push
lea
push
push
push
push
es
lcall
sub
add
xchg
iret
leave
ret
sub
not
neg
jmp
jnp
sti
dec
not
mov
mov
jmp
mov
add
push
push
in
in
scas
add
adc
push
pop
add
sti
in
in
mov
push
fcoms
clc
lea
ljmp
fdivr
lahf
xor
push
dec
mov
dec
inc
push
imul
mov
mov
lock
fwait
insl
js
and
push
andl
push
or
push
push
outsb
pop
add
add
fs
in
push
mov
mov
fsubrs
add
out
rcrb
jmp
decl
mov
pop
pop
lock
out
fs
insl
push
jne
cmp
adc
pusha
sub
jbe
dec
dec
sbb
sbb
push
test
mov
mov
or
pop
test
push
cs
cld
fucomi
loopne
add
lock
dec
add
mov
cld
fstl
sar
sub
js
push
cmpsb
sar
inc
inc
addr16
pop
cmc
fmulp
push
aas
cmp
dec
call
in
push
dec
sub
insb
jle
in
push
je
push
mov
jo,pn
inc
popa
cmc
mulb
xlat
mov
outsl
pushf
inc
je
dec
ret
push
insb
insb
push
dec
ror
ret
mov
sub
in
jo
mov
std
pusha
dec
loopne
or
push
imul
push
in
in
and
push
idiv
push
adc
xchg
push
push
or
mov
insl
js
outsl
jmp
sub
stos
pushf
data16
push
insl
cld
jecxz
call
jge
jns
add
dec
pop
stc
incl
sbb
not
sub
dec
movl
dec
out
sbb
es
push
push
push
test
pop
aaa
push
repz
add
dec
or
fs
sub
not
neg
push
fiadds
outsb
mov
neg
cltd
icebp
les
sub
pop
roll
fisttps
cld
push
test
jae
ss
adc
pop
jg
sti
fwait
mov
add
mov
push
inc
cmp
add
sti
cli
lea
fmuls
jg
dec
pop
mov
movsl
jo
and
cld
test
fsubl
xlat
in
pop
xchg
cmp
dec
andl
push
push
push
test
push
push
add
cs
sbb
addr16
jae
sti
pusha
sbbl
push
add
dec
push
mov
outsb
dec
test
push
icebp
bound
das
clc
nop
pop
into
inc
jns
clc
xchg
xor
pop
mov
pop
xor
dec
push
cmp
jl
das
push
adc
xchg
jl
push
or
xchg
outsl
inc
pop
lcall
imul
clc
jp
subb
fcmovne
in
push
andl
hlt
cmp
in
push
cmp
pop
loopne
lret
daa
out
ljmp
cmp
out
fs
cmp
xor
jecxz
inc
push
jmp
sub
hlt
adc
cld
push
jle
or
mov
mov
jnp
push
push
inc
std
mov
pop
and
fsubrs
jb
xor
jo
xor
fincstp
jg
push
push
je
imul
add
gs
data16
push
mov
xor
cmpsl
pop
scas
testb
popa
push
xor
sub
xor
push
and
sub
mov
fs
inc
mov
cltd
sub
or
leave
sbb
mov
arpl
dec
lock
movsl
repz
mov
repz
mov
xor
mov
fiaddl
pusha
xorl
mov
dec
es
cmp
and
pop
ja
scas
nop
jbe
dec
cwtl
popf
mov
dec
inc
movsl
jp
lds
adc
inc
in
cs
adc
pop
adc
cmpsl
or
sub
jo
xchg
cmpb
movsb
mov
and
and
out
dec
xor
adc
cmp
cwtl
nop
push
dec
test
jae
mov
out
enter
ljmp
mov
and
push
or
adc
bound
mov
iret
sti
pop
imul
scas
arpl
leave
stos
xor
into
add
iret
popl
xor
dec
roll
and
insb
inc
dec
fidivrl
in
inc
sarl
cld
adc
inc
sub
sbb
fnstsw
mov
nop
nop
mov
pop
mov
mov
adc
les
add
xor
sbb
xchg
cmp
jbe
push
mov
stc
push
adc
and
xor
or
push
add
dec
adcl
mov
sti
popa
mov
sbbb
in
fwait
in
shll
scas
out
sub
dec
arpl
adc
ret
sub
push
rcll
pop
sti
inc
shlb
mov
pop
push
mov
es
cltd
lods
ja
push
out
add
sub
lret
and
out
mov
or
sbb
jbe
pusha
pop
pop
shrl
leave
mov
mov
stos
sahf
pop
pusha
xchg
xchg
and
popf
inc
jo
or
out
movsb
push
xor
shrb
cmp
fsubrs
xchg
cltd
sbbb
dec
jb
sbb
jns
jmp
aas
and
les
sbb
add
adc
dec
xchg
mov
push
shlb
fildll
daa
jns
sbb
xor
jmp
xchg
pop
pop
adc
adc
imul
es
outsl
ret
shll
fs
daa
jno
sbb
inc
pop
testb
mov
mov
push
xchg
subl
and
mov
imul
push
or
inc
pop
inc
xchg
mov
jge
nop
or
sbb
adc
ret
lods
ss
pop
and
sub
adc
leave
adc
push
push
xchg
xor
mov
sbb
pop
pop
jns
daa
or
bound
mov
popf
jnp
jl
jo
pop
lahf
adc
xchg
jecxz
daa
add
shll
jno
int
das
enter
cmp
push
loope
enter
fnsave
cmp
frstor
cltd
sub
insl
aas
in
xchg
xchg
pop
cmp
mov
ficoml
xchg
cmc
push
lahf
test
es
cmp
cli
push
mov
sti
jns
shrb
xorb
and
mov
ja
pop
dec
cmpsb
or
push
fnsave
jno
adc
mov
daa
jae
lds
jb
pusha
subb
ficoms
xor
leave
mov
mov
pop
popa
add
xor
inc
test
nop
pushf
test
in
push
fwait
into
and
leave
mov
mov
sub
sbb
clc
in
cmp
shlb
sub
mov
mov
mov
xchg
add
and
mov
sbb
xor
or
adc
fwait
xchg
mov
adcb
scas
ja
jmp
mov
icebp
inc
jl
arpl
mov
pop
and
je
or
add
mov
or
jg
or
shl
and
scas
shlb
fwait
dec
scas
and
push
repnz
cmpsl
leave
mov
std
inc
or
movsb
dec
xchg
mov
jmp
cmpsb
pop
push
ficoml
adc
push
jnp
xor
pushf
mov
out
movsb
push
rcrb
add
daa
push
jb
cmp
push
arpl
mov
or
ds
sub
or
push
adc
cwtl
xor
jmp
arpl
rcll
mov
and
ss
arpl
rolb
or
cmp
and
pop
and
sbb
adc
and
xor
inc
je
popf
rep
dec
cmp
orb
add
pop
and
add
adc
cmp
add
data16
and
mov
es
lea
add
test
dec
xor
addl
pop
xchg
notl
rolb
inc
or
mov
lods
sbb
mov
sub
popf
shrl
subl
dec
sbb
sahf
fwait
sub
fs
sbb
cmc
mov
or
sbb
sub
sti
repnz
mov
and
fstl
cmc
cmp
mov
jmp
xchg
xor
sub
inc
dec
push
out
xchg
addb
dec
pop
popa
popf
fimull
aaa
jmp
add
test
sub
xor
sbb
push
push
sbb
pop
sub
fadds
roll
jb
sub
add
mov
jo
fcoms
adc
jno
jns
inc
xor
roll
dec
dec
mov
add
pop
add
in
js
loop
lahf
or
sbbl
push
push
dec
xchg
or
adcb
push
cmpsl
xor
stc
sub
inc
mov
enter
jns
jns
mov
pop
sbb
aad
dec
imul
adc
les
and
cmpsl
es
es
pop
mov
mov
imul
inc
push
ret
repz
lahf
andl
cmpsl
cmc
lea
andb
adc
popf
lds
mov
xchg
sub
jo
or
push
roll
das
or
cmp
adc
xor
jne
sub
push
jge
imull
bound
pop
and
repnz
sub
arpl
sbb
aad
cmpsl
inc
sbb
dec
shlb
xchg
pop
cmp
loopne
dec
jmp
sti
jmp
orl
or
add
and
add
in
add
inc
or
adc
lock
push
jmp
ret
lahf
sbb
mov
jo
xchg
pop
xchg
das
dec
add
jl
iret
mov
rcr
mov
add
mov
sub
popf
xor
sbb
das
xor
push
loopne
xor
mov
push
jae
shrb
and
and
xor
inc
add
imul
enter
or
adc
sbb
add
leave
in
test
lahf
subl
sub
mov
xor
pop
sbb
add
sbb
xor
sub
add
sbb
shrb
xor
push
add
and
jle
pushf
xor
add
scas
lcall
imul
dec
and
add
add
repnz
aam
adc
rcll
push
hlt
rolb
mov
sub
scas
lahf
in
cwtl
cmp
movsl
cmc
sub
lds
roll
xchg
adc
push
sbb
xchg
adc
sti
shll
sar
jmp
jecxz
inc
dec
push
mov
ljmp
push
and
cmp
add
enter
add
les
dec
shll
pop
or
pop
cmpl
pop
lds
jg
mov
leave
push
sbb
push
popa
dec
in
sbb
xchg
sub
mov
cmp
dec
xchg
cmpsb
sub
sub
jp
add
dec
pop
inc
add
adc
int3
rclb
stc
push
jmp
jge
pop
add
jno
sbb
stos
popa
sbbb
xchg
push
leave
or
sub
add
add
mov
pop
loopne
sub
aas
pop
stos
pusha
sbb
xchg
imul
push
loopne,pn
sbb
ljmp
mov
sub
in
dec
lea
jo
int
cmpb
shll
adc
add
mov
push
lahf
and
aas
push
push
cmpsb
stc
popa
mov
ljmp
pusha
je
lret
mov
mov
pop
mov
test
mov
daa
int
test
insl
xor
mov
pop
and
adc
mov
dec
xlat
pop
into
adc
decl
xchg
cmp
ja
pushl
popf
pop
add
fmuls
in
dec
mov
jno
jmp
loopne
add
and
test
mov
sub
jecxz
xor
push
xchg
jo
sub
dec
inc
dec
dec
or
sbb
int3
lahf
mov
inc
gs
or
mov
xchg
fstps
xchg
jns
addl
popf
or
clc
test
push
lcall
jp
dec
and
pop
in
sbb
inc
outsb
adc
inc
mov
pop
pop
cmp
mov
movsl
rcll
push
popa
stos
sbb
mov
inc
imul
or
inc
enter
add
shrl
fildl
push
sbb
in
rorl
push
stc
rcrl
mov
adc
shl
loopne
out
xlat
mov
adc
adc
fcmovbe
mov
pop
and
inc
lea
ficoml
pop
add
out
lea
and
dec
fwait
in
mov
adc
les
test
jg
mov
test
xchg
xchg
imul
movsl
insl
rorb
inc
and
lea
sub
dec
mov
ss
int
icebp
lods
inc
jmp
push
xor
push
sub
imul
dec
ffree
push
mul
pop
inc
mov
fbld
mov
pop
mov
and
aaa
or
xchg
cmp
or
adc
mov
pop
adc
adc
popa
mov
loope
push
enter
adc
out
addb
pop
mov
test
cltd
in
bound
jmp
rcl
mov
mov
push
test
sahf
adc
sbb
or
inc
or
aaa
xchg
mov
mov
mov
testl
cmpsl
add
test
push
bound
push
int
aaa
jp
add
pop
push
mov
inc
lods
mov
pop
in
xchg
pop
adc
xchg
cwtl
mov
std
jno
xchg
pop
movsb
into
pop
sti
xchg
add
test
rcrl
sub
sbb
jp
dec
sahf
in
shll
test
stc
push
inc
sub
imul
xor
add
inc
out
gs
movsl
add
sbb
das
adc
bound
in
mov
stos
xor
jns
and
aad
imul
js
lds
mov
lcall
out
push
cs
movsl
ffree
mov
bound
inc
popl
cmp
mov
sub
adc
lret
sbb
dec
outsb
pop
mov
cmp
lcall
pusha
inc
push
or
in
jo
jno
xor
out
dec
xchg
xchg
jl
ret
push
popf
es
and
sbb
xchg
outsb
push
or
ss
or
inc
adc
aam
aam
mov
test
and
test
fwait
dec
cmpsb
loope
jge
inc
inc
sub
movb
push
xor
fstps
inc
nop
test
arpl
jnp
mov
test
lret
cmp
loope
pusha
sahf
inc
out
dec
test
jmp
mov
ret
sub
pop
pop
int3
enter
push
daa
mov
push
push
ret
pop
in
add
dec
dec
jo
lods
insb
and
movsl
dec
rolb
pop
testl
pop
and
ret
mov
inc
cmp
sbb
aaa
ljmp
mov
cmp
stos
xlat
xchg
sub
and
mov
cmp
inc
lds
inc
mov
repnz
cmp
dec
mov
nop
push
sbb
add
sbb
xchg
jae
mov
push
pop
mov
pop
mov
add
adc
jo
cmpsl
mov
jb
xor
dec
mov
push
jmp
dec
repz
int3
mov
ja
jl
and
adc
vpshad
shrb
out
add
sbb
mov
mov
jecxz
xchg
stos
add
mov
or
adc
inc
andb
add
mov
lahf
and
movsb
not
lods
mov
movsl
xor
mov
cmpsl
sub
xor
lds
pop
push
shr
and
arpl
dec
movsl
xor
push
pop
xchg
pop
push
sbb
push
mov
and
lds
rclb
stos
loope
imul
adc
xlat
sbb
xchg
nop
jno
imul
mov
mov
sbb
jno
sbb
dec
or
nop
lea
pop
xchg
ds
mov
and
ljmp
popa
orl
mov
imul
addl
nop
fstp
add
mov
mov
enter
loope
rolb
push
mov
testl
subl
sbb
shlb
push
push
mov
or
adcb
or
jp
inc
shr
inc
push
mov
pop
dec
sbb
pushaw
mov
subl
and
mov
sbb
sub
iret
adcl
mov
xchg
outsb
pushf
sub
xor
mov
test
xor
pusha
xchg
pop
pop
push
inc
sbb
icebp
fldcw
inc
dec
pusha
jg
and
sub
test
daa
push
lods
data16
jge
push
pop
push
pop
icebp
rcrl
or
loope
leave
repz
fwait
imul
adc
push
in
and
test
mov
daa
jecxz
xchg
inc
cmpsb
sbb
sub
push
insl
or
mov
xor
jae
xor
dec
or
scas
sbb
xor
push
out
in
or
imul
push
stos
out
sbb
insb
stos
jno
jmp
outsl
jns
test
ljmp
aaa
pop
mov
mov
mov
sbb
xchg
jo
push
mov
sbb
cwtl
andb
and
jo
or
scas
add
or
aaa
sub
adc
cmpsb
push
dec
popf
cmp
mov
pop
xor
mov
adc
rclb
movsl
out
repz
adc
mov
inc
sbb
pop
pop
dec
sti
pusha
adc
sub
lret
adc
cmc
stos
imul
xchg
jns
or
inc
andl
pop
je
rcrb
and
mov
xor
sbb
dec
sub
and
sti
push
sub
inc
lahf
cmpl
roll
dec
and
sub
xchg
shlb
cli
mov
push
andb
adc
jne
adcl
stos
movsb
xlat
jp
pop
lret
rcll
mov
sub
xchg
xchg
sbb
inc
rol
test
pop
pop
sub
xchg
je
inc
daa
pop
cwtl
sbb
sbb
xor
mov
sbb
mov
lock
add
int
sbb
cmp
push
dec
cmp
mov
mov
sbb
lcall
rorb
fidivrs
lea
xchg
ret
cld
fmuls
movsl
pop
fwait
mov
imul
pop
jg
push
inc
jmp
test
and
mov
aam
mov
push
add
mov
adc
mov
shrb
jg
jmp
lret
or
loopne
jmp
inc
mov
xchg
pop
push
xor
add
sti
test
je
cmp
cmp
lea
push
ret
mov
out
sbb
add
jne
jbe
fwait
cmpsb
push
out
push
stos
inc
stos
add
cmp
sbb
xlat
sub
jmp
sbb
push
leave
mov
pop
sub
aad
dec
arpl
cmp
fdivrs
adc
mov
stos
sbb
or
cmp
xor
and
dec
sbb
iret
add
movsl
fidivrl
lods
movb
inc
mov
mov
and
and
mov
and
mov
ss
dec
xor
lcall
push
sbb
push
sbb
mov
pusha
sub
add
add
xchg
xchg
xor
orl
dec
xor
enter
daa
out
cmpsb
es
movsb
xor
xor
adc
xlat
mov
jo
pop
mov
cmc
mov
dec
sbb
ret
imul
imul
int
aad
jo
or
ret
out
push
adc
mov
pop
mov
jmp
sbb
popf
pop
jl
addb
cmc
xchg
filds
push
xlat
dec
dec
add
cmp
mov
inc
ret
push
jns
add
fs
ret
cwtl
add
pop
fsubrl
xor
icebp
push
xor
dec
mov
mov
stos
test
xor
push
inc
adc
or
mov
lods
jae
outsl
add
mov
pop
xchg
shlb
dec
pushf
les
mov
adc
jne
mov
push
rcll
js
sbb
aam
add
loope
mov
adc
dec
cli
insb
les
mov
pop
cltd
and
pushl
add
rolb
adc
sbb
in
mov
andb
dec
pop
and
out
stos
inc
cmpsl
das
add
and
fnstcw
sbb
enter
push
mov
push
pop
mov
shrb
mov
or
sbb
repz
movsl
add
jns
add
xchg
repnz
je
xor
cmc
lcall
cmp
add
sub
adc
cmpsl
or
in
dec
jns
sbb
or
mov
jmp
inc
and
in
adcb
jo
lods
xchg
setp
mov
loope
mov
cmpsl
pushf
clc
and
push
jo
jo
pop
popf
insb
cld
mov
cmp
push
inc
iret
xchg
scas
mov
clc
inc
mov
test
pop
xlat
and
push
jns
or
lea
push
pusha
pop
push
or
rclb
fsub
les
pop
sbb
push
mov
push
outsb
add
imul
jge
aaa
push
fiaddl
out
lea
cmpb
subl
mov
and
sbbb
inc
mov
rcl
add
jl
fadds
dec
or
div
cmp
leave
dec
xor
std
mov
mov
dec
pop
push
insl
mov
inc
addr16
push
push
sbb
xchg
aaa
mov
cs
mov
and
psllw
adc
mov
inc
add
push
rorb
test
xchg
loop
mov
push
adc
jae
add
xchg
add
or
movsl
xchg
out
add
stos
mov
mov
cmp
push
addr16
push
loopne
and
mov
or
shrd
and
pop
dec
xor
mov
cmpl
add
inc
mov
cmp
es
pop
aaa
add
icebp
jg
insb
xchg
xor
add
sbb
sbbb
pop
lds
sbb
lea
popa
pushf
add
mov
and
add
push
cmpsl
push
scas
add
pop
sub
and
or
jne
sbb
inc
mov
xor
cmp
std
xlat
in
inc
jecxz
lret
xchg
aad
mov
roll
push
scas
dec
push
add
outsl
rorb
leave
aas
push
inc
or
sbb
sub
xor
cmp
mov
push
cmp
cmp
push
adc
arpl
imul
lret
lret
inc
arpl
jmp
mov
imul
test
mov
lods
jmp
add
bound
xor
add
xchg
pop
mov
sub
cmp
mov
adc
out
out
test
pop
rcrb
pop
and
int
mov
mov
fld
repz
rolb
and
popf
add
and
inc
adc
sbb
js
inc
sahf
dec
jmp
cli
push
jmp
sbb
aad
pusha
mov
mov
insl
test
lds
cmp
add
mov
mov
sbb
add
scas
inc
push
xor
adc
push
jle
jmp
ss
sbb
rolb
std
test
in
xor
or
pusha
dec
aad
sbb
shlb
lock
cmp
stos
xchg
aas
and
and
sti
roll
inc
or
or
xor
rcl
and
cwtl
jmp
inc
and
inc
loopne
sub
inc
test
add
int
mov
mov
jns
ret
insl
add
sub
test
xor
sar
cmpsb
lds
jo
js
sub
jo
jnp
movsb
outsb
ljmp
jmp
cmp
xor
fld
mov
rcr
mov
adcl
push
add
pusha
sbb
add
mov
je
outsl
sub
pop
push
call
pop
xor
inc
add
or
or
inc
lds
pop
add
add
cmp
movsb
insb
test
or
shll
lods
or
jno
loop
add
test
icebp
pop
subb
test
loopne
lds
dec
loope
ds
mov
test
adc
sbb
jns
jae
inc
outsb
add
push
mov
aam
adc
xchg
xchg
stos
mov
nop
cmp
and
pop
xchg
in
les
cmp
push
sbb
sbb
mov
adc
inc
sub
and
sbb
iret
aas
dec
rclb
sub
nop
inc
adc
bound
sbb
sbb
dec
jo
sar
test
sbb
mov
inc
jno
mov
xchg
iret
mov
clc
xlat
and
sub
add
aad
or
mov
scas
pop
aad
sub
ret
mov
pop
pop
fildl
xchg
adc
imul
pop
adc
sub
dec
inc
repz
aam
adcl
orl
je
adc
add
dec
or
cltd
sbb
pop
fstl
inc
aad
fwait
push
add
sbb
push
xorl
cmp
lcall
or
lea
sbb
sbb
and
sbb
cs
cmp
unpcklps
sti
mov
sub
sub
and
add
mov
out
add
xchg
push
fistpll
or
mov
ret
adc
push
and
loope
xorl
mov
xchg
xor
push
xor
xchg
add
cmp
sbb
mov
rclb
add
cltd
add
inc
int
jnp
or
shrb
dec
adc
stos
xor
pop
lret
and
or
sbb
ret
std
imul
cmpb
add
test
mov
movsb
in
movsb
cltd
rolb
bound
adc
pop
add
mov
mov
stos
das
test
sub
mov
insl
add
sbb
add
sbb
push
dec
xchg
es
jle
and
ja
cwtl
mov
add
cmp
jp
push
cli
shl
inc
push
aad
mov
leave
cli
inc
fucomi
push
popf
aam
call
push
cmp
cwtl
add
mov
inc
arpl
rol
aad
jmp
in
xor
mov
test
xchg
dec
fwait
push
push
fadd
inc
dec
jns
outsb
push
mov
dec
enter
arpl
jae
push
or
or
shrb
mov
pop
les
les
rolb
add
movsb
dec
inc
sub
xor
call
jno
or
leave
jl
mov
add
fs
testb
or
jl
and
sbb
pop
mov
dec
loopne
pop
sbb
fistps
pop
or
loope
sarb
and
ret
ss
iret
popl
daa
aaa
push
push
mov
mov
add
rolb
inc
adc
push
in
inc
mov
lret
cltd
test
dec
cmc
out
mov
adc
lahf
xor
xor
push
dec
outsl
lods
imul
imul
test
aad
gs
lods
add
xchg
lret
jo
pop
adc
int
jne
mov
je
ljmp
pop
mov
movsl
and
sub
xchg
cmp
outsl
xor
mov
dec
aam
jp
inc
pop
adc
mov
xchg
mov
sub
push
inc
mov
mov
mov
imul
sub
mov
push
sub
and
lea
push
xor
sub
or
in
add
shr
popa
xchg
sbb
mov
pop
adc
adc
test
cmpsb
mov
mov
mov
insl
cmp
shrb
adc
leave
adc
ljmp
cmpsl
test
fimull
add
inc
push
xorb
and
inc
add
inc
stos
add
orl
pusha
inc
adc
or
jne
add
out
les
push
sarl
push
data16
test
roll
or
and
mov
pop
adc
pop
enter
pop
xor
jne
xor
xor
xchg
push
sahf
mov
push
inc
jno
sub
lods
sub
jne
push
and
xor
dec
mov
lea
inc
pop
jo
and
subl
jns
pop
bound
mov
scas
cmp
xor
aas
out
decl
add
adc
inc
pop
pop
inc
mov
add
test
int3
inc
ror
loope
imul
xor
xchg
and
push
dec
and
ds
mov
xchg
add
mov
push
leave
dec
push
icebp
lea
sub
dec
fs
push
sub
pop
es
scas
add
ljmp
addb
cmpsl
test
and
and
sub
mov
test
add
xor
adcl
sbb
inc
sarb
shll
icebp
outsl
push
cmp
shlb
pop
rcrl
or
pop
push
mov
sub
sbb
add
or
or
mov
imull
or
test
cwtl
xor
sub
or
dec
insl
ret
jno
scas
js
adc
addl
push
push
dec
adc
lret
std
inc
sbb
pop
insl
xor
sub
inc
jo
dec
and
fsubs
mov
jg
push
fucom
imul
inc
pop
mov
test
gs
insl
rcr
sub
repnz
loope
sbb
pop
and
push
xor
popa
pop
inc
cmp
sbb
sub
pushf
xchg
xor
jno
dec
shlb
arpl
mov
adc
jmp
add
aad
xchg
mov
rolb
in
push
inc
mov
xchg
ret
sub
adc
sub
push
stos
test
inc
test
sbb
sub
repnz
sub
and
push
insb
pop
inc
sbb
sbb
test
insb
dec
sub
xor
sub
mov
ret
adcl
vmread
adcb
int
pshufw
mov
loope
adc
aaa
xchg
push
push
ret
jae
pusha
cmp
mov
mov
inc
or
test
adc
ja
or
and
ja
xor
es
or
xchg
mov
push
scas
adc
xor
outsl
test
les
addr16
pop
push
xchg
adc
scas
bound
inc
inc
lds
inc
add
sbb
iret
pop
pop
fildl
adc
inc
imul
dec
pop
add
cmp
es
sub
and
add
xchg
mov
push
in
iret
mov
aaa
adc
das
inc
push
dec
and
mov
gs
mov
inc
add
test
stc
je
sbb
pop
sub
mov
mov
loope
cmpl
lcall
add
paddsw
dec
lock
xor
add
and
xchg
ja
adc
add
xchg
lods
push
add
ffreep
push
push
jmp
mov
add
add
mov
dec
push
add
lahf
outsb
add
stos
pop
nop
rcll
inc
and
movsl
adc
fisubl
or
jo
repnz
mov
add
or
movsl
outsb
add
and
xchg
or
pop
mov
add
add
repnz
xlat
movsb
inc
dec
rolb
subl
test
add
push
mov
test
adcl
in
movsl
push
xchg
xor
repnz
sub
inc
idivb
add
mov
push
add
daa
int3
ror
dec
pop
and
pop
push
lret
add
xchg
insl
in
test
inc
enter
push
mov
cmp
pop
ror
inc
adc
lock
or
lahf
dec
dec
or
jae
pop
and
lret
cs
testl
mov
mov
pop
pop
push
dec
lahf
hlt
xor
lret
jecxz
ja
and
sbb
jg
cltd
or
xchg
dec
ret
call
jno
add
xor
jb
sbbb
call
lds
les
aaa
dec
out
lret
loopne
sti
or
sub
mov
scas
iret
rclb
rcll
pop
repnz
add
dec
insb
mov
rolb
es
pop
sbb
inc
add
xchg
xor
imul
add
pop
dec
xchg
addb
add
push
ss
ficoml
daa
out
enter
stc
stc
loopne
pop
and
and
jo
add
push
pop
xchg
fistpl
arpl
sbb
xchg
mov
mov
add
sub
test
jp
imul
pop
call
add
and
stos
add
cltd
sbbl
pop
fstl
inc
dec
xlat
or
push
jmp
adc
fsubrs
and
es
or
jae
ja
add
jo
or
test
repnz
jne
and
loope
fwait
mov
fadd
rcll
nop
cli
pop
sub
add
mov
push
daa
rolb
add
xchg
loope
push
dec
add
scas
stc
incl
das
call
in
jg
outsb
lcall
and
jp
sub
movsl
je
dec
pop
cmp
sbb
leave
mov
cmp
cwtl
cmp
test
subb
push
xchg
adc
adc
push
aas
negl
mov
xor
xor
insl
jo
push
pusha
mov
adc
pop
and
pop
pop
inc
add
mov
addr16
sub
mov
lods
add
sahf
ffree
lds
outsb
sbb
insl
adc
push
sub
dec
mov
cltd
dec
add
inc
cltd
aaa
add
test
xor
push
lret
push
fwait
dec
sub
mov
jno
xor
dec
xor
test
es
inc
jbe
jne
mov
mov
in
push
or
sbb
and
or
xlat
xor
xor
or
mov
fs
in
movsl
orl
cmp
std
xchg
mov
and
adc
push
sbb
mov
inc
mov
sbb
inc
popf
xor
add
test
adc
or
or
pop
leave
add
mov
mov
mov
inc
adc
lds
sbb
or
movb
dec
xchg
push
and
or
shrb
aaa
das
nop
adc
and
adc
add
jno
push
add
adc
movsl
sub
test
int
pop
push
mov
cmpb
pop
add
movsl
xlat
add
jno
inc
mov
popa
sbb
cmp
adc
sbb
or
sub
lret
inc
or
lock
repnz
sahf
int3
add
cmp
sub
mov
push
xor
pop
pusha
xor
and
pop
jg
nop
stos
mov
adc
dec
adc
and
dec
or
sbb
mov
inc
push
jne
jae
jns
cs
lea
mov
pusha
ljmp
and
loope
icebp
loope
scas
sub
fs
xchg
popa
sbb
movsb
sub
pop
lock
popa
inc
and
jecxz
dec
int
aad
movl
clc
loopne
cs
xchg
sub
cmp
pusha
movsb
and
fwait
sbbl
xchg
fstps
daa
inc
rolb
movsl
sar
int3
jbe
add
mov
xor
out
dec
xlat
sub
pop
jno
cltd
mov
xchg
adc
test
xor
pushf
andl
sub
mov
adc
or
cltd
aam
fwait
dec
or
sbb
inc
stos
add
lock
or
xchg
and
jnp
mov
pop
dec
sub
xorl
mov
sub
adc
adc
pop
pop
daa
mov
jp
aam
loope
inc
icebp
push
test
inc
dec
push
cmpsl
xlat
mov
sbb
in
test
int
jne
cwtl
or
gs
fnstenv
fstps
push
sub
add
and
add
les
psrlw
or
adc
dec
imul
add
and
cs
mov
arpl
push
mov
sbb
loope
xchg
mov
or
fcoml
and
mov
xor
mov
mov
mov
out
iret
adc
enter
call
add
xchg
dec
outsb
cmp
mov
test
negl
or
and
xchg
sub
cmpsb
xchg
cs
popa
mov
in
cld
mov
add
rcrb
xchg
lea
lods
rorb
add
insb
stos
or
lret
pop
jno
imul
adc
stc
push
push
aas
orl
loopne
push
lea
mov
xor
lock
inc
pop
cld
loope
mov
rclb
das
pop
adc
in
loope
loope
sbb
je
outsl
push
pop
gs
pusha
and
dec
and
or
incl
rclb
lods
push
dec
and
add
mov
sub
inc
pop
xchg
dec
and
orb
dec
mov
mov
sub
mov
inc
push
shrb
jge
rcll
fsub
add
inc
cli
pusha
aam
mov
lea
add
inc
jg
and
jg
mov
or
mov
dec
push
out
jne
sbb
aas
mov
lods
sbbl
push
dec
sarl
push
xchg
mov
add
lahf
cmp
jo
aam
push
jno
inc
mov
push
mov
sarb
lea
adc
or
loop
inc
mov
addb
scas
add
jne
xchg
cwtl
and
aad
cmp
je
data16
mov
and
add
jg
dec
cmp
lds
or
sbb
nop
outsl
and
jno
sti
or
sbb
sbb
inc
adc
sbb
pop
dec
sbbb
aad
fldl
push
daa
push
add
mov
inc
arpl
sar
std
pop
sarl
xor
stos
cmp
roll
ret
mov
inc
xchg
inc
scas
mov
adc
inc
push
jno
inc
sub
sbb
inc
pop
mov
lcall
xor
in
push
inc
add
add
jns
sbb
aaa
adcl
sbb
jno
outsb
sbb
xor
cmpsb
enter
arpl
or
jle
mov
jb
cmp
mov
push
shlb
or
nop
or
inc
imul
xor
cmp
in
insl
add
adc
sub
loopne
jp
shrb
or
aam
mov
adc
fldt
mov
pop
cs
call
add
xchg
cs
pop
inc
orl
daa
xor
fadds
shrb
pushf
adcb
pop
addb
xor
push
xor
pop
aad
jl
xchg
adc
movsl
sub
andb
add
andl
push
loop
ret
mov
jno
xor
and
mov
scas
shl
inc
adc
jo
or
cmp
ja
fs
aas
inc
clc
daa
mov
xor
shrb
shlb
and
test
and
inc
roll
add
inc
negb
pop
and
and
lock
mov
out
fiadds
dec
jae
hlt
stos
or
dec
sub
lea
inc
loope
push
push
sarl
lods
push
and
mov
fnstsw
push
and
scas
sbb
scas
xchg
xlat
repz
xchg
add
loopne
outsb
sbb
mov
xchg
mov
mov
add
cmp
cmp
push
in
gs
stos
rorl
push
pop
inc
addb
jmp
cmp
and
and
nop
xlat
cmpsl
xchg
inc
aad
scas
repz
out
pop
aad
fwait
add
or
add
sbb
inc
imul
clc
and
xchg
dec
jns
push
enter
push
pushf
icebp
xchg
mov
movsl
mov
add
xor
cld
pop
sahf
push
xchg
mov
dec
or
push
inc
pop
jb
aas
cmp
xor
add
push
ret
add
add
popf
push
sub
pop
xor
into
test
int
dec
imul
push
xor
mov
or
sub
in
jb
adc
loope
lret
push
add
mov
imul
das
cwtl
jg
orl
jbe
or
lcall
lods
sub
and
jmp
add
adc
orb
sahf
pop
jno
in
xchg
mov
jae
dec
js
cmp
subl
or
mov
das
jp
add
orl
std
cwtl
xchg
pop
ret
ss
lret
xchg
sbb
cld
idiv
ds
mov
cmp
pop
sbb
mulb
repnz
push
stc
lods
add
adc
bound
xor
aam
adc
das
mov
jmp
sbb
lea
xor
insb
or
gs
push
sbb
sbb
jmp
out
cltd
movb
xor
mov
and
add
xor
adc
xor
cmp
daa
xor
and
xchg
cmp
mov
out
and
jno
jno
pop
push
xchg
sbb
loope
aad
dec
pusha
sub
add
aam
jecxz
mov
aad
shrl
jmp
jmp
add
test
mov
mov
jne
leave
and
lcall
and
adc
leave
jns
xor
enter
inc
das
ja
push
adcl
adc
xchg
sub
ret
add
push
xchg
mov
dec
es
inc
addr16
and
adc
test
push
add
fcmovnbe
sub
insl
or
roll
cmp
xor
sbb
xor
cli
push
stos
addr16
mov
cmp
sti
dec
test
dec
fistpll
sub
mov
inc
ljmp
rclb
and
xchg
gs
repnz
int3
std
je
pop
pop
addb
xorb
mov
jne
push
mov
sbb
push
pop
imul
adc
adc
fisttpll
pop
sbb
fs
mov
mov
loopne
mov
call
ret
xchg
sub
jne
xor
aad
mov
fldl
add
adc
or
jo
fbld
inc
icebp
out
or
sub
iret
add
dec
and
mov
and
add
dec
int
int
or
adc
inc
ljmp
xor
mov
repnz
adc
outsl
push
test
cs
arpl
xchg
stc
cmp
rcrb
lods
and
add
adc
jge
inc
mov
out
mov
jmp
pop
movsl
mov
jb
xor
loop
iret
lahf
loope
mov
outsb
push
scas
inc
scas
rol
jg
and
push
cld
test
xor
sbb
push
jmp
sbb
xorl
inc
add
inc
or
dec
mov
orl
pop
inc
movsb
loopne
int
int3
mov
orl
inc
inc
mov
mov
mov
adc
rolb
adc
or
jne
mov
add
jne
inc
or
inc
mov
or
lods
or
add
dec
mov
and
dec
add
sub
cmp
xor
sub
bound
call
movsl
cmpsl
xor
imul
stos
loope
inc
push
lcall
cs
push
hlt
fs
aam
or
and
enter
sub
dec
cwtl
push
popa
sub
es
or
loop
outsl
stos
inc
push
mov
xchg
or
push
and
fidivl
adc
push
sbb
cmp
adc
mov
in
and
push
push
aad
and
inc
repnz
or
push
jo
and
repz
pop
test
xor
js
sbb
hlt
add
or
jb
push
sub
push
daa
or
xchg
push
sub
mov
cs
cmp
lea
test
inc
xchg
addl
add
das
cs
mov
insl
push
addl
stos
or
inc
popa
call
je
sub
jns
jne
aas
idivl
lds
nop
or
sbb
add
rclb
addl
nop
scas
les
mov
nop
das
mov
cmp
adc
push
jecxz
or
push
sahf
out
addb
jbe
sub
test
push
mov
adc
pusha
cmp
jge
push
bound
jecxz
or
aaa
jbe
repz
pop
shrl
or
xor
or
and
cmp
lock
jmp
inc
aam
ret
cmpl
dec
sub
leave
or
add
inc
sarb
lock
test
les
dec
push
popa
and
adc
pop
rorl
cmp
mov
jae
cmc
ds
xor
push
fnsave
stc
fstpt
stos
cmp
scas
and
rcrb
es
push
xor
mov
out
push
aad
mov
sbb
leave
negb
stos
cmpsb
imul
test
jo
insl
arpl
inc
mov
shrb
je
cmp
arpl
adc
dec
mov
lods
xor
push
lods
mov
push
adc
dec
pop
in
add
or
popf
mov
test
push
pop
iret
dec
jbe
pop
cld
dec
pop
test
xorl
fstpl
mov
dec
addr16
sub
mov
push
imul
ss
call
and
sbb
sub
push
les
in
inc
cld
inc
mov
xchg
sub
cmp
add
sub
dec
sbb
sahf
inc
dec
adc
ja
fcoml
pushf
dec
shll
inc
lcall
push
push
lds
stos
testl
loopne
adc
das
xchg
adc
adc
nop
in
movsb
inc
inc
adc
ret
add
jge
mov
and
orl
es
rcrl
shl
add
pop
es
mov
pop
push
sub
sbb
rclb
jmp
jne
mov
dec
cmp
sbb
cmp
loopne
xorb
in
or
cltd
outsl
jnp
xchg
push
and
adc
cmp
sub
inc
inc
xor
jns,pt
and
cmp
imul
or
jg
call
sbb
ss
outsb
ret
push
stos
adc
xchg
lcall
or
mov
cmpsl
scas
leave
mov
test
xchg
add
xchg
jl
and
dec
dec
adc
pop
es
and
rclb
enter
adc
push
xor
je
rcrb
scas
sub
xor
aam
enter
sbbb
pop
sti
or
adc
or
daa
insl
popa
adc
cmp
cmp
or
sub
call
push
imul
xor
or
stos
cmpl
add
inc
test
dec
or
leave
jns
jae
push
rcrb
bound
call
dec
mov
add
push
cmp
loopne
movsl
out
mov
xor
sbb
push
out
test
add
push
or
xchg
dec
pop
jecxz
mov
imul
dec
ss
cmpb
popa
push
dec
sub
adc
cmp
cltd
lret
sbbb
sbb
mov
pop
adc
addr16
mov
and
adc
mov
mov
add
add
into
imul
cmp
pop
out
push
or
adc
js
dec
pop
inc
mov
sub
pop
movsl
sahf
inc
mov
mov
loop
shrb
stc
inc
pop
pop
repnz
mov
push
xchg
movsb
mov
and
jnp
xor
mov
mov
pop
je
test
sbbb
mov
sbb
fisttpl
xchg
xor
xor
pop
incl
int
cmpsb
movsb
testl
jo
or
push
fdiv
and
jmp
adc
je
sbb
andb
sbb
add
out
jae
lahf
cmp
mov
repnz
int3
mov
inc
cwtl
movsb
out
cmp
sbb
cwtl
and
push
in
test
ss
lret
scas
and
cmp
sbb
sbb
sbb
xor
xor
popa
imul
sbb
inc
and
xor
int3
rcrl
add
lea
sub
xchg
dec
loop
cmp
xchg
pop
lds
and
adc
and
and
dec
loop
fisttpll
mov
rorb
jle
adc
cmp
sub
les
movsb
or
adc
jl
adc
pop
pop
pop
push
inc
jmp
adc
int3
imul
cltd
iret
daa
sub
pop
or
add
aad
icebp
or
mov
dec
cmpsb
dec
pop
inc
gs
pop
sbb
and
dec
adc
test
leave
jae
adc
rolb
rol
call
bound
pop
aas
or
sahf
push
jge
dec
and
adc
xor
jb
std
add
sub
sbb
aad
inc
adc
dec
pop
enter
movsb
and
pop
add
in
pop
subb
sbb
add
jecxz
pop
sub
push
push
sub
push
mov
ret
imul
test
popa
stos
inc
orl
dec
lret
inc
push
mov
dec
test
aaa
addr16
mov
dec
adc
dec
rolb
xor
or
sbb
dec
adc
leave
call
dec
and
mov
test
test
sub
ljmp
dec
test
add
sti
add
add
mov
push
cmp
dec
fsubl
push
xchg
out
mov
jecxz
loope
adc
cmp
and
and
cs
jb
movsb
andl
outsl
sbb
xlat
inc
and
jno
sbb
test
xchg
or
ret
inc
addl
addb
fcoml
adc
loopne
add
xor
mov
jb,pt
in
mov
sbb
inc
fwait
negl
test
popa
sbb
or
push
pusha
jb
dec
xlat
ljmp
pop
adc
popa
das
roll
stos
push
jo
pop
das
inc
jmp
movsb
insl
mov
loopne
andb
push
sbb
pop
inc
mov
sti
sbb
scas
cmp
jecxz
or
mov
xor
add
inc
dec
mov
cs
jns
inc
fldl
dec
mov
adc
pop
cld
ljmp
sub
sahf
mov
movsb
loop
movsl
rolb
jecxz
test
sbb
or
dec
or
mov
imul
xchg
scas
mov
into
sub
vmwrite
ss
add
xchg
xchg
xor
and
movsb
mov
or
call
and
jns
mov
ja
outsb
or
iret
pop
frstor
and
add
mov
jb
jns
outsb
popa
roll
test
cmp
imul
cmp
repz
inc
xor
pusha
push
pushf
and
loop
xchg
sarl
mov
mov
dec
adc
pop
pop
cld
mov
and
addl
mov
add
mov
push
jg
and
fmull
or
popa
xor
insl
icebp
pop
sbbl
or
stos
ret
pop
sub
push
lds
xor
addr16
xlat
mov
inc
aas
scas
out
fld
aad
adc
push
cmp
or
mov
test
stos
into
addl
in
adc
mov
scas
xchg
or
sbb
rorl
call
iret
js
adc
jp
push
lea
sub
test
ljmp
jecxz
jmp
push
jnp
and
aad
mov
dec
inc
popa
lock
xlat
push
and
hlt
mov
loopne
leave
fildll
adc
rcrl
inc
xor
loope
sub
leave
cmp
inc
aad
movsl
cmp
xchg
cmp
rolb
pop
cltd
mov
mov
push
insl
mov
mov
loop
and
pop
jmp
add
pop
sbb
adc
cmpsb
imul
loopne
cs
push
pop
addl
xchg
adc
rcll
mov
sbb
adcl
sbb
xor
in
loop
aad
inc
pop
outsl
jae
jne
sbbb
xor
stos
push
out
pop
sub
jge
xor
and
mov
notl
pop
sbb
lods
dec
and
or
adc
push
int
adc
adc
adc
sbb
xchg
movsb
pop
adc
mov
std
dec
sub
insl
add
jb
and
xchg
xchg
jle
mov
xchg
inc
jns
add
inc
orb
push
sub
test
scas
dec
inc
push
sbb
popa
sbb
fs
add
push
pop
roll
adc
mov
cmp
aam
adc
sahf
cmp
push
aaa
jo
cmp
inc
mov
push
nop
inc
xchg
cmp
cmpsl
or
add
lods
lea
sub
dec
mov
test
jae
and
popl
sbb
xor
and
lret
call
sbb
andl
adc
decl
adcl
lds
xor
pushf
dec
in
fs
mov
and
mov
stos
pushf
cmp
sbb
pop
add
in
add
cld
dec
pop
orl
mov
outsb
push
sbb
pop
xor
sbb
lds
imul
es
xchg
or
inc
adc
adc
adc
es
int
sbb
adc
sti
rolb
jl
pop
and
test
xchg
sbb
cwtl
sbbb
testl
sbbb
stc
nop
movlps
pop
test
imul
pusha
pop
test
jne
push
add
add
jno
bswap
shlb
or
or
int3
add
inc
icebp
adc
movsb
cmp
aad
and
dec
jb
repnz
je
addl
pop
adc
out
repz
and
sub
xlat
push
ret
sti
cmpsb
test
xlat
das
jne
lods
or
push
test
pop
movsl
cmpsb
or
add
sub
and
mov
jmp
cmp
sbb
xlat
insl
ds
pop
enter
mov
adc
fnstenv
jbe
pusha
xchg
or
push
sbb
dec
roll
sbb
inc
and
mov
dec
fs
adc
and
je
shrl
mov
mov
xor
cmpl
pop
imul
mov
and
dec
inc
push
pop
pop
cli
mov
sarb
jle
out
or
lea
in
or
mov
addb
adc
ret
pop
lret
pop
pop
dec
lds
or
push
lds
and
push
push
and
mov
lods
stos
jecxz
sbb
jae
or
movsb
add
stos
insl
xchg
xchg
hlt
cwtl
ljmp
mov
cltd
mov
add
jle
push
xchg
shl
xor
mov
arpl
lods
inc
mov
mov
push
adc
dec
mov
into
leave
jnp
rclb
mov
leave
push
mov
cmpsb
inc
pop
inc
mov
jp
cwtl
xchg
nop
imul
cmp
mov
int
push
mov
sub
sub
adc
sub
in
mov
lds
xchg
cltd
jnp
xor
jmp
sub
in
pop
mov
test
int3
jmp
push
pop
adc
pop
je
pop
jecxz
xchg
jo
jne
sbb
or
add
jecxz
mov
jl
lahf
mov
mov
fwait
or
push
and
push
cmp
mov
lcall
fwait
imul
xor
and
arpl
jne
add
rolb
inc
adc
test
sub
sub
pop
xor
icebp
je
ficoml
push
pop
out
movsb
add
pop
xchg
mov
push
imul
loop
push
daa
addr16
stc
sub
push
pusha
loop
or
testb
cmp
xchg
or
stos
leave
push
adc
xor
push
push
xor
das
mov
aam
ja
jge
mov
push
jb
icebp
dec
xor
adc
push
sub
les
repnz
test
add
mov
and
push
inc
insl
sbb
mov
data16
in
xchg
lds
mov
leave
mov
dec
inc
mov
aam
add
xchg
test
dec
mov
rclb
adc
mov
adc
sbb
and
ret
in
fidivrl
leave
shrl
lahf
mov
mov
mov
and
pop
les
adc
cltd
cmp
fcomps
cs
or
ret
data16
xor
out
dec
jge
add
xor
xor
pop
cli
push
mov
jns
ret
inc
popf
xchg
aas
loop
cmc
mov
cld
clc
scas
or
sub
sbb
imul
adc
aam
push
cwtl
aam
dec
push
jo
imul
in
fisubs
add
push
les
push
or
insl
xchg
int
push
mov
mov
sub
pushl
add
bound
sbb
ffree
jae
dec
xor
sbb
pop
orb
xchg
in
popf
or
xor
cmp
inc
inc
inc
and
pushf
xchg
sub
mov
inc
ljmp
adc
push
dec
test
stos
fildl
and
sti
cmp
mov
mov
jne
rorl
inc
xchg
fwait
xor
push
in
adc
xor
mov
mov
call
cwtl
and
bound
xor
pop
scas
and
add
push
add
sbb
mov
ss
test
mov
sbb
mov
outsl
bound
outsb
dec
inc
daa
lea
sbb
flds
inc
call
jecxz
fwait
ret
pop
sbbb
sub
mov
mov
imul
mov
adc
jl
pushf
and
xor
mov
jns
push
daa
cmc
or
movb
popa
addb
in
push
pop
andb
mov
dec
ret
test
jp
pop
xor
xor
add
outsl
add
add
mov
out
lds
rcrl
cmp
aad
sbb
xor
movsl
push
js
sub
inc
cmp
into
imul
jb
dec
inc
xchg
xchg
enter
push
mov
add
sbbl
adc
mov
in
mov
test
int
sub
xor
xchg
sub
pusha
inc
cmpsl
gs
gs
fnstsw
movsb
cs
inc
adcb
mov
cmp
or
popf
iret
adc
mov
pop
cmp
outsb
loope
aaa
xor
cmp
and
xchg
dec
xor
push
or
add
lret
rolb
out
and
lods
or
aad
push
arpl
and
lret
mov
xchg
mov
adc
and
data16
sbbb
dec
adc
loop
mov
and
xorl
pop
imul
addl
dec
add
pusha
movb
cmpsl
sub
xchg
hlt
out
pushf
test
mov
add
sbb
mov
adcb
mov
inc
mov
push
add
push
add
aas
int
mov
rolb
lods
lea
sub
jns
popa
or
add
add
adc
lods
mov
in
insl
xor
add
dec
dec
aam
mov
cmpsb
mov
fwait
cld
adc
mov
or
arpl
lods
mov
cmp
mov
loopne
or
sub
cmp
xor
cmpsb
add
mov
cltd
mov
rclb
and
mov
std
adc
inc
cwtl
inc
mov
jb
adc
mov
dec
test
cs
mov
jae
test
orb
test
bound
xor
jb
cmp
xchg
sbb
outsb
popa
neg
xchg
push
adc
aad
das
dec
jo
lea
add
sub
inc
and
loopne
gs
aam
pop
pop
xor
and
xchg
lcall
std
lret
mov
jmp
sub
repz
cmp
je
hlt
mov
mov
jne
inc
popa
pop
sub
sub
push
pop
cmp
loopne
je
enter
or
or
in
mov
shrb
inc
or
sub
into
shlb
and
ret
inc
push
aas
in
mov
mov
xchg
lahf
push
or
aas
pop
aaa
mov
enter
xlat
inc
push
jp
aam
mov
sub
adc
add
ret
or
sub
inc
cs
xor
add
xchg
sbb
xchg
pusha
bound
fcmovnbe
orl
and
loop
test
and
iret
cmpb
jns
mov
and
adc
xor
or
xchg
clc
mov
loope
xchg
or
inc
jne
cwtl
sub
push
cmpl
or
push
adc
add
scas
bound
int
icebp
roll
lea
adc
arpl
pusha
lahf
add
or
pop
mov
push
xor
jne
inc
push
gs
push
lcall
movsb
add
add
dec
mov
adc
cmp
fwait
mov
cmpsb
mov
fs
sub
mov
dec
jmp
sti
inc
dec
push
or
ret
jns
cmp
lds
ret
add
xchg
outsb
sbb
movsb
repnz
out
jg
subl
mov
jecxz
xchg
or
add
xchg
mov
pop
push
mov
test
test
aad
not
popa
push
gs
jp
sub
sub
and
bound
mov
loopne
movsl
loop
test
dec
xor
and
fldl
stos
or
mov
xor
int
pop
adc
cmp
push
mov
adc
mov
decl
mov
aam
in
into
stc
mov
and
mov
aas
cmpsl
push
adcl
cltd
insb
imul
jmp
or
jne
inc
das
sbb
ds
xor
mov
jne
pop
jns
mov
dec
dec
jno
or
into
aas
divl
mov
shrd
mov
push
rcrl
sbb
lods
adc
test
push
xor
sub
dec
std
std
cmp
pop
push
rorl
test
and
ret
push
mov
adc
insl
and
or
addl
xlat
dec
loop
dec
xchg
cwtl
or
xchg
mov
cmp
or
sbb
dec
je
arpl
movsl
les
mov
aas
and
push
jns
inc
test
cltd
pop
addl
bound
cmp
mov
mov
iret
orb
pop
in
push
test
add
or
add
cltd
inc
or
inc
jp
adc
test
adc
cmp
push
test
dec
xor
jecxz
and
jb
inc
jb
mov
add
inc
add
pop
loop
or
push
dec
movsl
sti
sbb
add
mov
test
outsb
movsl
lods
push
dec
scas
rcl
stos
sbb
mov
push
sbb
mov
inc
mov
test
das
sub
lea
es
sbb
and
jecxz
pop
adc
ja
es
and
sbb
leave
sbb
inc
jno
in
daa
jne
add
rclb
and
push
or
loope
pushf
fs
cmpsl
mov
xchg
push
xchg
and
pop
mov
dec
shr
pushf
test
xchg
or
andl
pop
test
xor
mov
sub
leave
push
iret
scas
cmp
xchg
push
xor
shrb
imul
push
into
inc
call
stc
adc
jne
js
add
add
pop
pop
leave
xchg
mov
rclb
out
in
test
repnz
movb
jg
xor
or
dec
jo
and
sbb
xor
sub
mov
mov
and
mov
dec
jmp
jmp
rorb
mov
adc
in
mov
scas
aas
imul
inc
cmp
adc
jno
imul
xor
pop
sbb
inc
sbb
jnp
lahf
bound
loope
adc
cwtl
push
lods
or
push
and
sti
cmpsl
mov
test
dec
jmp
clc
adcl
push
push
cs
xlat
and
mov
pop
sbb
push
and
cmp
ret
mov
pop
les
add
sbb
aam
jl
ret
cmp
adcl
xor
adc
sub
out
xchg
popl
inc
add
sbb
shlb
mov
sbb
add
inc
pop
int
movsb
repnz
sbb
pop
and
scas
lods
bound
xchg
addb
popl
jo
cmp
jmp
and
jl
scas
add
xor
insl
add
bound
sbb
xor
pop
je
addps
arpl
fmull
pop
das
xor
adc
daa
jno
bound
sub
loopne
aad
mov
cs
in
push
adc
into
je
fstl
mov
add
test
xor
push
imul
add
sub
jo
popa
inc
and
inc
xchg
xchg
sub
push
addr16
inc
inc
mov
mov
xor
mov
ret
in
lods
adc
mov
cs
mov
sbb
popa
mov
jg
and
loop
stc
add
test
pop
xor
and
jmp
fadds
xor
mov
cmp
cmpsl
sbb
push
add
test
fabs
sahf
repz
add
mov
pop
jno
or
popf
and
daa
lea
xchg
sub
fsubl
add
pop
test
lret
lea
and
aad
and
inc
test
push
or
aas
shrl
roll
pop
rclb
pop
inc
push
jns
popa
jnp
xlat
inc
add
es
rorb
or
lock
pop
inc
mov
pusha
xor
push
popa
in
push
adc
xor
sub
xchg
xchg
jns
pusha
xlat
aad
jnp
std
adcb
in
inc
mov
ret
sub
inc
push
mov
mov
add
jo
filds
test
pop
cmp
pop
jno
dec
pop
adc
and
mov
cmc
dec
push
movsl
jne
mov
add
shll
iret
sub
add
add
jae
pop
push
xor
and
cltd
or
lods
ds
or
lahf
aam
sub
sar
cmp
xor
sbb
adc
mov
arpl
int
mov
aad
jo
cmpsb
scas
imul
sbb
xchg
mov
lds
fwait
out
mov
xchg
bound
mov
stos
pop
or
stos
push
daa
mov
cmpsb
or
sbb
add
mov
or
jo
xchg
pop
adc
sbb
adc
lds
movsl
in
sub
mov
inc
jmp
adc
arpl
pusha
jmp
mov
popf
xor
and
into
xchg
pop
pop
inc
sti
pop
nop
pop
sbb
mov
adc
lds
adc
sub
inc
jbe
mov
lret
loopne
int
push
mov
xchg
and
adc
sub
lcall
add
nop
adc
add
les
adc
cltd
jns
sbb
pop
inc
sbb
dec
xorl
push
push
sub
and
nop
inc
xchg
adc
xchg
lret
aam
push
pop
mov
arpl
ds
js
outsb
mov
push
pusha
dec
add
push
push
sub
push
xor
test
add
add
mov
shrb
and
lcall
fisttpl
xchg
lods
mov
dec
jge
add
and
shll
or
popf
les
mov
add
adc
in
imul
aad
add
out
mov
rclb
mov
repnz
jl
add
sub
pop
or
dec
scas
cmpb
rolb
xlat
rcrl
aad
sbb
mov
pop
orb
popa
das
and
mov
ljmp
adc
and
add
daa
add
xchg
sbb
cmp
rsm
sbbb
ljmp
xchg
mov
add
xchg
lahf
std
aad
mov
add
add
sbb
orb
xchg
add
scas
xchg
jno
xor
xchg
test
sarb
daa
stos
and
imul
mov
cmp
push
dec
lret
push
mov
lahf
sbb
adc
dec
pusha
sub
adc
sub
popf
adcb
adc
or
sbb
mov
pop
jne
push
adc
stc
xlat
addr16
sub
and
test
jne
xchg
push
dec
pop
adc
sub
push
mov
or
jne
push
inc
std
jecxz
or
adc
jp,pn
outsb
addl
sti
ja
sbb
and
push
aad
test
sub
inc
repnz
sub
xchg
movsl
mov
lds
push
jns
push
jecxz
dec
ss
cltd
or
mov
mov
and
xchg
push
xor
inc
inc
sbb
mov
test
lcall
and
in
imul
je
and
xor
sub
sbb
fldcw
and
loope
rcll
enter
dec
add
jno
add
xor
or
inc
shl
add
xchg
cld
nop
scas
push
leave
movsl
add
gs
lea
sbb
cld
and
add
outsl
xchg
inc
ljmp
push
jecxz
jnp
or
andb
mov
xor
sahf
xchg
mov
pusha
mov
icebp
shrb
cmpl
pop
adc
mov
dec
cmp
push
xchg
cmp
add
inc
sub
rolb
or
sbb
adc
sbb
or
push
and
rolb
xor
mov
adc
mov
mov
push
dec
cmp
pop
pop
dec
xor
xchg
add
std
xor
dec
adc
je
sbb
inc
add
pand
mov
cmp
jo
pop
rclb
mov
pop
add
ljmp
and
mov
enter
adc
push
or
push
outsb
stos
stc
das
in
sbb
gs
rorl
inc
inc
push
and
xor
sbb
dec
rcrl
cwtl
push
dec
dec
adc
dec
dec
jge
pop
shlb
inc
push
or
adc
or
xchg
adc
mov
mov
add
outsl
mov
add
pop
stos
dec
cmp
mov
sub
cmpsb
scas
or
repz
xchg
wbinvd
push
pop
adc
scas
subl
push
js
adc
xchg
sub
inc
push
add
pop
je
sbb
sub
or
jns
jae
stos
inc
inc
add
sub
adc
sub
push
sahf
lret
jae
jne
shll
or
arpl
jo
repnz
pop
push
adc
jne
mov
and
and
pop
cmp
cmp
add
mov
pop
push
orb
test
lea
mov
lcall
jo
jnp
lods
mov
rclb
cmp
push
or
in
popf
mov
sub
mov
das
out
popa
pop
inc
sub
mov
sub
jmp
popf
xor
daa
dec
inc
lea
sub
sahf
push
jns
repnz
int
pusha
adc
inc
stc
jnp
mov
inc
js
sub
sub
popa
add
sbb
movsl
ljmp
aas
mov
jl
inc
push
mov
sub
inc
test
adc
inc
add
xchg
out
push
cltd
add
inc
outsb
push
les
sbb
iret
jne
sbb
divb
cmp
jae
rcrl
loope
adc
add
dec
stos
test
repnz
or
sub
popa
lods
lret
or
push
mov
or
lds
jno
dec
pop
popf
mov
push
ja
adc
rcrl
adc
lret
and
loopne
pop
je
cmp
lahf
xchg
ljmp
or
mov
stos
inc
jo
inc
dec
inc
push
lock
sub
aad
gs
dec
bound
push
ss
xor
xor
adc
add
pop
in
mov
xor
ret
push
loop
lret
dec
push
mov
imul
xchg
adc
pop
sub
ret
ljmp
nop
sub
and
xor
dec
jg
jge
and
adc
xor
or
push
cmp
cmp
adc
sbb
cmp
shlb
in
add
orb
cmpsl
das
mov
xchg
shll
and
inc
xchg
push
jo
mov
aad
add
add
jae
rcll
mov
ret
stos
jl
shrl
pop
xor
movsl
inc
aam
push
add
fsubrs
nop
or
and
lods
adc
mov
imul
ror
mov
bound
loopne
scas
bound
adc
and
pop
ret
arpl
jns
dec
adcb
mov
jns
mov
icebp
sarl
adc
pop
push
pop
out
push
pop
jo
enter
pop
mov
pop
adc
pop
icebp
mov
cmp
cmp
pusha
pusha
sub
cmp
iret
cmpsb
mov
arpl
pop
jne
mov
data16
add
mov
inc
sbb
mov
push
adc
inc
xchg
adc
nop
inc
xchg
lods
xlat
pop
pop
xor
xor
pop
lods
data16
adc
stc
adc
dec
pusha
mov
add
jo
add
dec
pusha
lds
inc
pop
sub
push
aas
push
lds
mov
dec
loopne
aad
lea
es
or
arpl
test
add
inc
out
pop
jecxz
bound
pop
rorb
outsb
pop
inc
int
jae
push
and
mov
addb
jne
inc
lret
and
add
movsb
dec
ret
xchg
adc
xor
pop
rcl
insl
mov
lretw
aaa
mov
inc
xchg
movsl
sbb
movsb
fcmovnb
loop
stos
xchg
test
rolb
je
push
ret
test
push
dec
xor
sbb
orb
cmpsl
mov
mov
adc
mov
sti
outsl
inc
insb
add
xchg
andb
xchg
mov
mov
arpl
inc
sarl
inc
and
sbb
push
xchg
pop
xor
sub
imul
xor
push
jmp
xchg
mov
sbb
dec
pop
add
test
add
aad
xchg
adcl
add
shll
cmp
xor
addr16
push
xchg
or
nop
inc
leave
pop
data16
cmp
movsl
jno
inc
sub
cwtl
stos
mov
lods
adc
sbb
leave
and
or
push
loop
dec
or
add
sub
jp
inc
and
scas
jp
push
cltd
dec
popa
mov
add
jno
and
ret
fiadds
mov
shrl
xor
fwait
mov
addl
loope
push
imul
dec
sub
and
repz
or
jg
sbb
xchg
adc
xchg
or
jge
push
dec
loopne
xorl
test
pop
xchg
test
or
pop
add
adc
sbb
nop
popl
adc
dec
xorl
add
stos
pop
mov
cmp
adc
ror
add
mov
rcr
inc
xchg
pusha
xor
or
mov
xchg
or
cmp
add
inc
or
xor
mov
fwait
enter
mov
adc
xchg
hlt
add
popa
inc
add
je
jg
das
push
dec
clc
lcall
dec
jnp
add
pop
and
dec
btsl
pop
mov
aam
orl
rolb
pop
or
adc
mov
sub
shlb
ret
xlat
and
imul
xchg
andb
cmpsb
popa
scas
in
mov
test
scas
mov
mov
xor
xorb
sub
sbb
add
lods
or
or
pop
insl
cwtl
jno
mov
jo
dec
or
add
jne
jge
rolb
mov
add
js
sub
push
movsl
icebp
push
inc
pushf
push
push
pushf
imull
push
pop
es
inc
add
adc
jno
add
xor
sub
mov
cmpsb
pusha
adc
imul
dec
imul
or
dec
je
orb
loope
push
adc
add
xor
repnz
mov
stc
mov
rclb
inc
jo
sar
adc
dec
dec
pop
in
fidivrl
iret
imul
push
adc
jne
mov
sub
pop
or
cmp
xor
mov
popf
rorl
ret
pop
pop
sbb
bnd
lret
addl
fld
in
jno
dec
push
cmpsb
mov
inc
sub
lods
xchg
sbb
mov
test
leave
mov
jl
bound
pop
aaa
push
inc
or
jno
adc
into
push
mov
xor
adc
or
iret
fisttpl
mov
loop
jecxz
rclb
xchg
mov
or
sti
push
xor
sub
je
rcrb
pop
lret
sub
adc
ret
and
or
inc
inc
loopne
bswap
in
xlat
sbbl
add
subb
mov
outsl
pop
sub
push
adc
les
fsubs
stc
push
and
les
inc
sahf
sbbl
outsl
lea
pop
xor
out
ret
mov
enter
jno
jecxz
jle
add
fsub
adc
dec
popa
test
xor
sbb
push
jb
pop
add
xor
push
mov
lds
mov
test
mov
popf
mov
xor
outsb
mov
loope
dec
jmp
inc
pop
mov
andb
xor
mov
scas
test
sbb
add
xchg
divb
cmpsb
sub
add
mov
divl
orl
lds
cmp
push
pop
scas
shl
jmp
push
add
mov
pushf
out
fsub
add
and
xchg
or
add
cmp
popa
daa
mov
mov
sbb
inc
add
cmpb
leave
andl
or
cs
rorb
mov
sbb
fs
or
push
and
mov
dec
add
jne
or
mov
es
fiaddl
adc
mov
and
repnz
ret
mov
sbb
shll
fdivrs
sbb
movsb
and
dec
frstor
popa
test
test
add
or
inc
inc
ret
lret
or
or
sbb
pushw
iret
imul
adc
cmc
dec
xchg
adc
loopne
aad
lea
mov
inc
fildll
xadd
stc
sbb
mov
push
pop
and
lods
xchg
pop
fnsave
ljmp
jmp
lods
adc
pop
mov
push
or
aaa
ljmp
mov
imul
push
jp
aas
loopne
call
sub
jns
lds
mov
add
push
mov
xor
insl
dec
sbb
mov
arpl
loop
inc
and
cmp
lds
xor
cwtl
inc
sahf
or
or
andl
incl
data16
aas
lahf
jmp
mov
jo
or
cs
jno
dec
bound
arpl
sub
test
or
cmpsl
rcrl
lret
outsl
adc
xor
mov
adc
into
or
add
pop
adc
mov
insb
aam
repz
sbb
mov
push
mov
push
mov
rcll
and
in
lahf
sub
xor
repnz
rcrb
popf
jmp
fldt
or
add
ret
shrl
les
incl
ljmp
popf
push
add
xor
mov
add
add
mov
ret
pop
loopne
test
dec
mov
pop
ret
stos
sbbb
or
mov
imul
test
mov
iret
pushf
inc
or
nop
out
sub
mov
inc
ret
cwtl
insb
mov
mov
xorb
push
inc
dec
imul
mov
lds
or
sub
mov
roll
jns
lret
dec
sahf
xor
and
sbb
stos
adc
mov
push
jne
lods
ljmp
adcb
adc
and
push
gs
out
loopne
push
pop
sbb
add
daa
les
jge
mov
push
out
cmp
push
sub
shlb
add
lods
popf
xlat
push
test
push
mov
or
or
adc
jno
out
sub
adc
int
andl
pop
repnz
push
fcoml
jo
repz
xor
push
pop
push
cmc
sub
inc
test
add
xchg
mov
pushf
xchg
adc
iret
adc
add
jmp
sbb
add
ret
dec
mull
notb
or
mov
push
pop
push
leave
fisttpll
adcl
push
sbb
rolb
push
imul
push
sbb
mov
xchg
xchg
mov
xchg
ja
stos
and
nop
or
sarb
jo
mov
pushf
xor
fldenv
test
scas
sbb
mov
push
sbb
mov
in
add
xlat
push
mov
out
xor
mov
les
mov
or
push
add
out
shlb
sbbl
aam
stos
inc
jno
inc
or
loopne
ret
inc
movsl
xor
lods
pop
aas
addl
jo
push
push
orb
in
add
cltd
shrb
cmp
jge
or
cmp
add
xor
mov
mov
fldcw
mov
clc
mov
push
mov
or
andl
jae
push
sub
adcl
and
jle
and
pushf
cltd
dec
arpl
mov
je
or
mov
and
or
add
jae
lret
inc
mov
add
out
jno
adc
in
addb
lret
pop
mov
movb
jns
and
xchg
pop
jb
bound
jmp
jle
je
shrl
loop
mov
mov
les
add
dec
mov
xor
jae
xchg
pop
iret
popf
pop
or
pusha
push
jne
test
or
add
pop
aad
dec
mov
mov
pop
push
cmpb
xor
lahf
and
adc
push
pop
ret
sbb
mov
ja
je
int3
inc
and
jl
in
xchg
rolb
in
mov
mov
jno
sbb
pop
or
inc
icebp
or
inc
ret
and
push
andl
dec
mov
test
jno
xor
testl
mov
adc
nop
xchg
xor
jo
pop
mov
loopne
loopne
mov
dec
xchg
mov
cltd
jp
or
xorb
adcb
pop
ret
scas
lea
add
sub
sub
push
jp
push
xchg
lds
test
inc
mov
jo
sarb
dec
xchg
cmp
sbb
inc
sbb
cmp
test
add
dec
loopne
repz
les
aaa
sbb
jnp
xor
push
add
jne
sahf
and
inc
dec
imul
sub
xchg
inc
sbb
cmpsl
stc
xor
add
push
or
cmc
xadd
jns
and
sbb
test
or
shlb
or
jne
stos
or
or
jge
mov
lds
inc
and
mov
pop
pop
mov
stc
jmp
cmpsb
fs
fsubs
shrb
fsts
push
xchg
mov
lcall
ds
test
in
test
cmp
or
test
jne
mov
mov
adc
pusha
fstpt
std
stos
mov
movsl
or
ret
mov
jno
in
push
push
inc
orb
add
xor
out
repz
iret
je
mov
pusha
jecxz
dec
mov
inc
dec
mov
mov
dec
idivl
dec
cmp
imul
add
and
stos
sbb
es
xchg
push
add
test
add
add
mov
push
sahf
xchg
mov
pop
xchg
add
sbb
and
adc
mov
aaa
mov
test
mov
dec
or
das
pop
adc
or
dec
sub
and
and
jnp
bound
adc
inc
aad
jmp
inc
sbb
das
xchg
dec
in
push
cwtl
fdivs
jns
xchg
stos
ret
or
cmp
sbb
iretw
scas
insb
mov
mov
jno
add
and
sub
mov
ljmp
jg
and
xchg
add
pushf
or
test
pop
adc
ljmp
dec
and
and
mov
push
shlb
enter
popa
adc
aaa
aaa
cmpsb
mov
adc
pshufw
jg
or
inc
scas
push
stos
leave
add
and
inc
sbb
pop
xor
imul
xlat
jnp
mov
mov
mov
in
lods
ss
fmul
pop
adc
mov
cwtl
sub
test
inc
and
movsl
movsl
test
cwtl
aad
aad
jo
outsl
add
adc
xor
adc
pop
adc
fwait
lcall
enter
inc
imul
loopne
test
sub
stos
and
pop
sbb
mov
cltd
decl
adc
xchg
or
push
das
adc
mov
in
pop
lahf
stos
sbb
cmp
add
add
or
or
ljmp
icebp
inc
je
sbb
iret
rolb
cmp
add
mov
adc
mov
xorl
add
or
cmp
rorb
in
pushf
sub
and
mov
push
adc
push
enter
add
add
mov
mov
ja
stc
or
iret
pop
js
cmp
mov
imul
mov
xor
jmp
dec
leave
mov
push
or
add
add
xchg
pop
dec
shrl
dec
xchg
add
add
and
cmc
mov
fwait
xchg
and
rorb
sti
cmp
xchg
shll
cmp
pop
fmuls
int3
dec
test
and
cwtl
addb
loop
stos
data16
mov
add
mov
jb
mov
dec
xor
push
push
leave
xchg
stos
or
xchg
int
push
js
add
push
mov
mov
movsl
aam
ljmp
push
or
sub
scas
and
inc
js
cmp
aas
fwait
jb
add
xor
inc
xorb
pop
fsts
mov
or
and
mov
sbb
jmp
xchg
adc
jb
rcr
inc
pop
mov
jne
lret
les
mov
and
inc
or
jae
test
adc
out
sbb
adc
mov
adc
icebp
jl
stc
xor
inc
and
orb
adc
push
sub
add
dec
dec
jmp
cmp
rcl
pop
dec
push
dec
pushf
or
test
xchg
xchg
aad
jns
sbb
ret
test
inc
leave
xchg
jge
shll
psrld
xchg
ljmp
and
xor
stos
test
leave
adc
es
jmp
xchg
xor
pusha
jns
adcb
test
xor
cmp
push
enter
jecxz
xor
or
push
add
push
mov
sub
rorl
js
ret
daa
mov
orb
out
test
orb
cmp
jo
jne
sub
dec
popf
mov
aad
sbb
cmp
shrl
cmp
adc
shrl
add
mov
push
push
sbb
dec
and
mov
rorb
mov
mov
dec
xor
loope
dec
or
movb
add
adc
push
cmpsl
test
push
daa
xchg
cmc
cmp
ret
xchg
shlb
xchg
and
out
add
inc
jae
jne
shrb
je
xchg
mov
mov
orb
lods
cmp
sbb
xchg
xchg
fdivl
xor
adc
clc
in
or
pop
add
add
xor
fisubrl
sub
xchg
popa
daa
pop
mov
inc
pop
dec
mov
adc
mov
std
inc
mov
scas
and
push
push
inc
out
pop
cmpsb
cs
pop
push
jne
sahf
out
adc
cmp
loopne
mov
inc
push
or
add
dec
adcb
fs
jnp
bound
movl
rolb
aaa
rclb
sub
repz
or
mov
lock
dec
mov
aam
mov
adc
test
movsl
dec
clc
repnz
jecxz
xor
xlat
dec
jg
push
mov
ret
test
or
sbb
icebp
and
mov
gs
addb
xlat
mov
xor
mov
or
cmp
test
inc
testl
add
and
and
and
push
push
and
jle
fcmovu
inc
sub
mov
mov
sbb
adc
adc
fwait
dec
dec
dec
xchg
mov
movsl
shlb
adc
add
inc
test
adc
or
rcl
add
loope
jo
ret
mov
add
cmpsl
data16
pop
push
pusha
mov
add
mov
add
jne
insl
stos
rorl
pop
jnp
loopne
test
xor
add
add
add
addb
les
mov
pop
push
and
ss
xchg
test
sbb
push
fwait
lahf
inc
sub
adc
lea
adc
adc
iret
mov
dec
push
or
aad
es
loope
repz
cwtl
sub
mov
and
das
rclb
dec
and
mov
push
mov
orb
mov
add
lret
test
adc
fs
pop
pusha
and
dec
and
std
stos
jmp
loope
sub
adc
fstpl
mov
movsb
stos
ret
adc
mov
mov
insb
cmp
add
and
mov
and
sbb
adc
sub
cld
pop
daa
andb
or
mov
jecxz
add
mov
inc
and
push
sbb
add
popa
in
shrb
jge
xorl
out
and
sbb
dec
int
loopne
jo
roll
add
int3
popf
ret
pop
fcom
stos
cmovnp
pop
cmp
enter
jmp
inc
push
arpl
das
out
xchg
xchg
and
mov
cmpsb
dec
iret
mov
and
pop
iret
jecxz
add
add
icebp
stos
addr16
dec
lahf
das
and
mov
jbe
push
pop
push
and
inc
or
inc
push
xchg
xor
dec
sahf
push
add
or
fbld
add
ss
cmp
jecxz
jo
bound
je
sub
mov
hlt
repz
or
dec
jg
pop
imul
stos
inc
imul
inc
add
leave
enter
inc
add
mov
push
mov
mov
rorb
movsb
add
jp
mov
inc
sbb
imul
stos
mov
xor
jecxz
push
das
push
stos
dec
pusha
rcrl
xchg
xor
mov
mov
xlat
test
pop
or
jno
sbb
jo
ret
cmc
stos
xor
xchg
scas
add
sub
rolb
test
add
add
xchg
jno
and
and
push
pop
lods
jbe
rcr
mov
push
popa
stos
mov
test
jecxz
mov
in
push
add
jge
sahf
in
stos
gs
or
mov
add
and
stos
pop
inc
jmp
adc
push
leave
and
outsl
push
mov
adc
arpl
in
inc
sahf
jo
jne
fmulp
mov
xchg
test
dec
adc
sti
lods
loope
ret
sub
stos
adc
rorl
inc
mov
orl
and
mov
inc
add
bnd
dec
sbb
or
push
add
dec
add
adc
movsl
int
dec
sbb
inc
cs
mov
mov
add
cmp
add
rorb
pop
mov
bound
lret
aad
mov
xor
sbbb
mov
je
mov
sbbl
loop
pusha
stos
fistpl
or
jmp
dec
lret
pop
jb
adc
xchg
xchg
aam
mov
clc
add
lods
cmp
pop
in
xor
xchg
adc
mov
cmpl
or
shrl
scas
fsubrs
xor
jne
stos
das
dec
adc
call
in
adc
pop
pop
movsl
or
mov
or
push
pop
popf
push
push
rorb
add
add
inc
cwtl
mov
cmc
or
mov
inc
out
movsb
inc
push
push
jecxz
xchg
mov
sbbl
and
adc
or
or
jne
mov
inc
imul
cmp
sub
out
aas
ds
push
sub
and
push
push
or
mov
cmp
xlat
out
or
add
lea
inc
and
add
dec
push
mov
push
add
mov
pop
adc
jp
loope
jno
pop
pop
sub
push
xchg
cmp
rolb
mov
pop
mulb
dec
xchg
cmpsb
xchg
xchg
xchg
pop
xor
sbb
cmp
inc
scas
fadds
mov
lea
ret
arpl
dec
cmp
push
dec
test
xchg
or
roll
push
add
adc
pop
sbbb
inc
mov
loop
jecxz
and
cwtl
and
dec
filds
adc
sub
mov
sub
popf
xchg
mov
cmc
sub
mov
mov
push
popa
cmp
push
add
add
sub
xorb
stos
jb
test
or
and
test
cmp
xor
push
pop
mov
add
lcall
loopne
jnp
mov
adcl
mov
pop
test
cmpsl
insl
bound
cwtl
inc
into
outsl
aaa
in
les
icebp
shll
dec
add
and
cltd
jl
push
sub
mov
das
jge
rol
jns
adc
cmp
xor
cwtl
iret
daa
test
inc
pusha
mov
push
sarl
daa
sub
jo
dec
lds
pop
sbb
aaa
mov
stos
shll
jbe
ret
test
mov
add
jecxz
dec
or
xlat
add
or
roll
addl
inc
aad
adc
scas
dec
xor
or
or
mov
or
mov
push
cmp
and
mov
iret
xchg
add
add
loop
arpl
dec
std
and
fstpt
pop
pmulhuw
rorl
mov
dec
push
jo
mov
adc
lret
push
addb
lcall
test
sbb
and
add
movsl
or
pop
pusha
scas
mov
mov
sub
or
fwait
sti
test
sbb
leave
jnp
xor
pop
dec
in
outsb
fildl
rclb
ljmp
and
mov
inc
les
roll
jge
enter
cmc
orl
xchg
and
scas
aam
push
xchg
sub
loope
iret
sbb
ljmp
pop
je
into
add
in
or
mov
ret
pusha
push
add
jmp
outsl
icebp
jo
inc
jno
xlat
lret
dec
repz
enter
lret
sbb
push
mov
sub
popf
mov
and
inc
add
jecxz
xchg
and
push
jo
and
and
inc
cmp
stos
mov
inc
push
or
mov
mov
pop
test
addl
rcrl
dec
add
lea
adc
test
int
dec
mov
mov
push
add
push
das
mov
imul
lahf
mov
mov
pop
adc
outsb
jno
dec
add
xlat
xchg
cmp
and
inc
aad
add
jl
mov
xchg
add
adc
xchg
mov
adc
pop
inc
mov
xor
rolb
pop
dec
pop
mov
mov
fistpll
add
push
mov
sbb
and
and
jmp
pop
mov
lds
pop
outsl
sti
arpl
adc
add
test
pop
push
and
imul
pop
sub
push
inc
lods
push
incb
shrl
or
xor
aam
lret
and
repnz
mov
rclb
imul
or
movsb
xchg
push
cmp
push
inc
lahf
cmp
add
inc
add
sbb
push
adc
ds
cmpsl
leave
and
and
in
xchg
movb
aad
ret
xchg
lods
dec
addb
push
or
push
sub
pop
aaa
mov
sub
clc
mov
inc
aad
adcb
mov
insl
xchg
push
dec
or
es
mov
movl
xor
gs
aas
push
inc
lds
scas
xchg
aad
outsl
xchg
popf
sbb
mov
cmp
push
arpl
icebp
shll
mov
push
add
pop
loop
cltd
fwait
imul
pusha
loopne
mov
adc
and
in
add
inc
push
xor
xchg
add
mov
in
adc
pop
ds
xor
call
adc
mov
push
mov
push
mov
inc
add
pop
or
nop
out
push
inc
js
mov
aaa
mov
loop
in
rolb
adc
jl
insb
add
dec
mov
in
shrb
leave
adc
add
or
jae,pn
pop
dec
inc
stos
sbb
inc
mov
int3
in
or
xchg
dec
xor
add
adc
jle
jecxz
push
popf
jns
cmpsb
lds
imul
mov
pop
xor
sub
ret
and
xlat
jnp
hlt
frstor
xor
mov
clc
daa
jo
sbb
dec
xchg
lret
pop
outsb
std
cmp
inc
cltd
push
adc
imul
pop
aaa
sub
das
and
xchg
or
iret
mov
imul
icebp
adc
cmpsl
fistl
sbb
test
daa
and
pop
add
stos
add
imul
adc
sub
dec
mov
push
jns
fldenv
adc
test
mov
jne
adc
add
mov
shll
mov
push
adc
fcmovnbe
sub
adc
scas
lods
jmp
mov
mov
push
sti
pop
sub
pop
data16
cmpsl
insb
adc
mov
inc
add
test
mov
test
and
or
cmpsl
ret
rolb
out
sub
inc
dec
push
sbb
cmpsl
test
outsb
popf
jae
xchg
push
sub
insb
or
shlb
or
push
popa
or
vmovaps
mov
push
cmpsl
inc
insl
inc
cltd
dec
jmp
xchg
lea
inc
scas
push
lcall
movsl
loopne
test
and
pop
loop
cmp
jp
daa
xchg
jp
mov
xor
adc
mov
jne
push
jge
enter
sbb
test
adcl
mov
cmp
in
xchg
xor
jae
les
adc
shrb
and
mov
dec
dec
pushf
stos
fwait
js
adc
test
shlb
mov
pop
je
mov
xor
push
dec
addr16
jo
flds
add
xor
dec
mov
push
mov
leave
mov
aad
jl
push
bound
and
shll
scas
cltd
add
add
imul
mov
xchg
xor
cmpsl
test
dec
pop
mov
sbbl
addr16
test
in
clc
mov
push
pop
lea
fstl
adc
mov
add
inc
int
lea
xlat
push
bound
cmp
lcall
outsl
adc
inc
mov
push
or
adc
mov
mov
cwtl
mov
aaa
add
xor
sub
outsb
add
or
leave
push
adc
add
dec
pop
push
rcrb
cmp
push
and
jae
sbb
inc
jge
push
xor
dec
loope
add
cwtl
leave
lods
xchg
mov
xchg
lahf
xor
out
mov
mov
jo
sbb
sahf
test
xor
sbb
cmp
dec
or
push
jnp
adc
dec
push
or
sti
adc
xor
daa
add
rolb
mov
mov
adc
mov
addl
pavgb
push
and
scas
mov
mov
sub
xor
or
movsb
inc
inc
pushf
lea
addl
mov
xchg
xchg
imul
pop
inc
jne
test
cltd
adc
xor
ret
push
xchg
xor
adc
scas
inc
sahf
sub
push
sbb
lods
andl
mov
in
ret
xor
aad
das
dec
push
add
add
adc
leave
test
rcrb
pop
mov
adc
cmc
icebp
cmp
lds
or
add
inc
pop
xor
jne
adc
insb
inc
lcall
mov
xchg
jo
push
push
add
in
loope
lea
add
das
add
les
push
int3
ds
dec
lret
fwait
push
sub
push
pusha
loopne
dec
cmp
repz
push
test
iret
xor
jmp
add
pop
lahf
pop
dec
sahf
test
and
pop
add
test
mov
fldcw
xchg
pushf
xor
pusha
movsb
xor
push
cwtl
jecxz
mov
xchg
cmp
movb
inc
jns
inc
pusha
xchg
jge
orb
mov
or
adc
jno
dec
mov
sbb
icebp
mov
dec
jl
test
push
es
je
repnz
or
lret
mov
adc
ljmp
mov
xchg
jmp
addl
mov
inc
cmp
mov
dec
iret
pop
inc
sbb
adc
test
repnz
inc
rol
xor
xchg
inc
jp
ja
or
and
adcb
data16
adc
ss
push
leave
int3
push
inc
inc
mov
add
jae
cmp
sbb
imul
pop
push
mov
mov
push
or
mov
ljmp
cmpsb
pusha
xchg
mov
inc
test
lret
cmp
sbb
push
mov
jg
jmp
sbb
adc
les
test
sbb
rolb
call
xor
shlb
adc
add
stos
sub
mov
ja
cmpsb
inc
loop
jnp
cmp
mov
xor
push
add
push
dec
movsl
xchg
out
inc
out
sbb
jno
cwtl
xchg
fisttpl
iret
or
mov
dec
sbb
push
mov
mov
aaa
or
pop
push
inc
aaa
rcrl
mov
or
sub
sbb
dec
mov
xchg
inc
test
lds
mov
pop
pop
nop
cmpps
or
and
and
or
bound
imul
xor
loope
dec
dec
push
xchg
inc
jae
cmpsb
xchg
stc
push
add
scas
cmp
or
push
sub
iret
orl
sub
pusha
mov
ret
les
adc
ret
clc
and
pop
cmp
or
adc
jno
test
cmpsb
stos
add
add
push
and
test
in
or
mov
inc
fs
pop
and
ret
inc
ds
mov
fninit
clc
sub
pop
jno
sbb
pop
mov
push
pop
sub
hlt
push
and
inc
pop
push
sub
xor
and
faddl
dec
adcl
dec
sbb
push
inc
pop
xlat
stos
loopne
mov
sub
or
les
jo
mov
call
inc
push
aad
xor
dec
jo
orb
add
ja
cmp
dec
adc
out
loop
or
into
push
adcl
jnp
popf
mov
jns
sub
mov
sub
or
repz
sub
and
cmp
and
cwtl
mov
sbb
aas
cmovl
push
arpl
mov
lea
rclb
inc
or
xchg
xor
mov
push
push
mov
and
or
popf
mov
xor
orl
pusha
pusha
arpl
test
mov
or
imul
xchg
xchg
sub
pop
loope
into
mov
sub
sbb
inc
add
pop
aam
fstl
add
dec
lcall
flds
mov
push
leave
push
dec
sbb
pop
jmp
leave
xchg
sub
jns
xchg
rclb
aam
mov
mov
jge
stos
inc
inc
addb
add
or
add
add
outsl
in
lds
jo
jge
les
mov
and
sub
cmp
rorl
push
fsubrs
sub
adc
adc
adc
rclb
mov
push
ret
or
or
xor
gs
stos
mov
or
dec
gs
inc
push
enter
repnz
jecxz
xor
lahf
add
inc
push
fnstsw
jo
jo
insl
popf
sahf
adc
in
pop
shrb
scas
in
mov
frstor
jecxz
and
insl
or
adc
jae
imul
push
inc
fs
fstps
xchg
test
sub
test
cmp
popf
push
mov
add
mov
loope
or
push
mov
mov
lods
inc
mov
xchg
test
roll
push
push
sub
sub
and
cld
push
lret
movsl
jb
idiv
out
ror
gs
and
jmp
jae,pt
cmpsl
addb
and
insl
add
test
or
dec
mov
sub
jns
orb
jno
add
push
dec
sbb
std
pop
mov
cwtl
sub
out
jo
mov
orb
pop
push
pop
xchg
add
leave
dec
movsl
push
pop
test
mov
jnp
sbb
loope
sti
push
dec
xor
cwtl
call
mov
sahf
mov
adc
ds
shll
lods
lods
mov
daa
or
sub
sbbb
xor
adc
add
inc
mov
ss
es
mov
fwait
add
sahf
push
and
and
jnp,pn
push
and
inc
xchg
pop
pop
pop
xor
rclb
mov
sub
std
inc
xor
sub
dec
cmpsb
lods
and
or
mov
cmpsl
xchg
scas
sub
jae
lock
stos
add
and
or
pushf
pop
add
mov
mov
inc
adc
je
sarb
dec
rol
inc
sub
sub
das
loopne,pn
add
das
and
xchg
fadds
cld
xchg
mov
jecxz
cwtl
mov
inc
add
add
pop
adc
loop
push
pop
pop
icebp
adc
push
and
pop
inc
xor
jnp
in
inc
pop
and
xchg
push
nop
cmp
dec
hlt
jns
dec
adc
cmp
or
jecxz
jg
adc
xor
flds
or
lret
add
pop
js
add
cmp
cmc
cmp
jg
add
jo
or
aaa
rclb
mov
mov
adc
shrb
pop
or
movsl
pop
pop
and
shrb
mov
and
in
cmpsl
dec
pop
adc
mov
xchg
xor
sbb
or
and
or
dec
mov
adc
cmp
push
push
pop
cmpsb
xor
mov
push
mov
nop
adc
mov
repnz
and
push
inc
loopne
adc
test
push
sub
push
push
adc
imul
adc
xor
lahf
mov
int
adc
xchg
jne
inc
cmp
je
xor
aas
inc
sbbb
dec
rorl
adc
push
sub
sub
or
out
js
sbbb
jecxz
cmc
sbb
pop
push
pop
enter
xor
daa
sub
cmpl
inc
and
dec
pop
xor
test
and
jecxz
add
add
or
or
test
popa
out
add
adc
repnz
lods
mov
xchg
mov
pushf
leave
add
fcompl
mov
xchg
or
xor
add
and
xchg
xlat
ss
repz
and
xor
into
orb
js
pusha
push
adc
add
or
cmp
add
dec
cmp
mov
inc
xchg
jle
xchg
xor
sbb
mov
aaa
add
xchg
xor
sub
inc
lcall
fwait
pop
sub
and
jns
jno
sti
das
inc
xor
nop
subl
or
stc
adc
mov
sbb
inc
xor
inc
add
push
out
inc
int
add
mov
mov
loope
inc
jo
aam
nopl
or
rol
pop
test
adcl
and
mov
ret
dec
mov
xchg
adc
adc
jecxz
cwtl
and
jle
mov
adc
mov
loopne
jg
and
fs
sbbb
xchg
rcl
mov
std
mov
sahf
mov
dec
add
test
fisttpl
lret
pop
cwtl
ljmp
stos
dec
pop
aaa
jns
adc
and
pop
popf
xorl
mov
xchg
push
test
cmp
and
mov
mov
or
mov
push
cmp
add
push
test
inc
pop
loop
stos
adc
inc
sahf
ffreep
pop
rorl
outsb
mov
inc
insl
stos
pop
je
rclb
pop
shrl
cwtl
sbbb
push
adc
or
pop
adc
add
movsb
add
dec
adc
lcall
fnstenv
inc
ret
push
movsl
stos
je
subl
sub
jae
push
orl
push
push
pop
cmpsb
aad
dec
movsb
jae
stos
sbb
movsl
pop
movsl
and
lret
push
dec
jmp
add
cwtl
scas
fsubl
sbb
push
test
lahf
rclb
cli
jns
mov
add
sub
mov
push
dec
add
scas
test
imul
stc
leave
loope
mov
and
pop
fldl
inc
leave
cmp
jo
xchg
leave
add
and
jae
mov
orb
inc
dec
mov
adc
movsl
adc
push
and
or
outsl
insb
test
mov
pushf
push
push
xchg
mov
andl
js
test
dec
aam
test
lahf
les
inc
push
shlb
fs
xchg
jl
ret
sbb
inc
js
or
jns
push
and
in
loop,pn
add
jp
inc
dec
fstl
jno
out
push
push
mov
addb
jnp
mov
pop
data16
into
pop
pop
adc
sti
or
push
insb
adc
add
adc
and
xchg
aam
pushf
dec
lods
int
sbb
add
sub
add
pop
inc
push
sahf
imul
jae
test
adc
loopne
lea
ret
and
lds
pop
imul
outsb
stos
fstpl
stc
inc
imul
sub
mov
cmove
push
and
add
dec
mov
lahf
jo
stos
xchg
push
push
mov
inc
in
cmp
aad
gs
mov
pop
xor
movsl
sbb
or
lea
add
push
jge
repnz
pop
cwtl
nop
mov
bound
inc
inc
dec
xor
lret
inc
add
call
mov
inc
pop
and
jge
xor
pop
iret
lret
fsubs
cs
add
pop
xchg
and
mov
inc
jnp
popa
sub
xchg
jne
push
test
mov
adc
pusha
xchg
rorb
orb
out
dec
test
jb
dec
bound
ljmp
cwtl
pop
mov
inc
add
mov
pop
push
xchg
sub
js
pop
and
or
and
adc
xchg
jge
push
dec
add
jle
and
mov
addl
inc
mov
insl
and
jmp
test
lea
out
inc
bound
cltd
adc
add
ret
dec
add
cmpsl
add
or
lds
xchg
rcl
imul
mov
pop
add
or
test
mov
push
xor
and
pop
sahf
adc
or
xchg
and
cmp
ror
fists
push
cmp
insl
push
les
jae
or
andl
pop
les
stos
outsl
inc
or
xor
rcll
arpl
pop
xor
rclb
rclb
aam
das
sbb
aad
test
xchg
roll
or
push
lret
jmp
mov
call
scas
push
aaa
inc
inc
loop
adc
mov
stos
roll
leave
xchg
xchg
mov
mov
or
add
and
jne
sbb
and
jno
icebp
in
and
or
lods
add
and
mov
sub
mov
pushf
sbb
jecxz
sbbl
pusha
add
adc
jp
into
push
cli
mov
inc
and
or
dec
add
movsl
adc
jns
or
push
sbb
rolb
sbb
addl
mov
adc
das
sbb
in
xor
xchg
sub
lock
aad
orl
movsl
push
add
fwait
pop
inc
repnz
push
sub
sub
adc
bound
mov
ret
test
fwait
and
push
test
loop
lret
inc
sub
popf
sub
rolb
cmp
push
jae
sub
scas
add
push
add
dec
push
pop
movsb
andl
lret
mov
sub
ss
inc
sbb
stos
inc
out
xchg
mov
cmp
packuswb
pop
icebp
mov
pusha
add
inc
add
lahf
cmpsb
jo
and
aaa
popl
movzwl
cmp
sub
mov
stos
xor
subb
pop
and
fwait
cmp
xor
jmp
sub
mov
adc
adc
sbb
xor
test
adc
ret
mov
sub
inc
loop
cmp
outsl
push
or
loop
sbb
cmpsb
mov
adc
je
pop
cmp
adc
mov
mov
decl
in
cmpsl
inc
outsb
push
arpl
cmp
push
test
or
in
cltd
cwtl
ljmp
pop
cltd
add
sbbb
adc
xchg
sbb
repz
or
rolb
push
jl
fwait
outsb
ret
mov
jno
cmp
pop
test
inc
lea
sbbl
dec
ret
cltd
xor
inc
inc
mov
jo
fwait
jno
jo
lret
adc
push
test
push
mov
mov
insl
repnz
int
cmp
inc
scas
xor
jp
mov
sbb
mov
or
pusha
mov
bound
mov
mov
xor
sbb
pushf
dec
in
rclb
adcl
popa
inc
lea
sbb
cmpsb
enter
loop
stos
cmp
jbe
test
inc
xor
add
mov
adc
cwtl
sub
add
out
jno
stos
mov
adc
adcb
loop
cmp
jae
push
and
cmp
das
cwtl
and
dec
stos
andb
cmp
sub
mov
jge
outsl
dec
lcall
push
pop
pushf
sbb
ret
mov
push
arpl
nop
cmp
cmp
add
and
cmp
sarl
dec
sbb
mov
fadd
rcrl
xor
and
cmp
xor
or
sbbl
inc
ficompl
dec
ss
push
dec
or
xchg
or
push
orl
cli
adcb
addl
insl
nop
jecxz
and
ret
js
sbb
adc
cmc
mov
addb
loopne
jg
pop
call
insb
and
and
dec
dec
or
nop
push
lds
add
call
ret
and
adc
fmuls
lods
adc
sbb
push
jmp
dec
pop
aaa
aad
and
imul
stos
sbb
in
lock
or
cmpsl
mov
nop
push
sbbl
sti
outsl
leave
xor
pop
insb
dec
dec
dec
pop
xor
mov
scas
adc
inc
mov
or
mov
roll
mov
and
jmp
scas
mov
lods
push
rol
mov
xchg
xchg
and
mov
rsqrtps
inc
push
mov
jne
les
sbbl
mov
adc
adc
inc
push
push
aam
mov
inc
test
and
jmp
sub
push
nop
addl
test
xchg
sbb
dec
push
add
cmpl
push
andl
je
xor
lcall
imul
pop
xor
xor
and
ret
les
add
mov
inc
es
mov
repnz
mov
adc
pop
sbb
imul
inc
xchg
imul
rcl
push
repnz
add
push
cli
jne
adc
mov
mov
frstor
or
pusha
and
sbb
push
and
into
mov
jo
imul
push
int
mov
bound
adc
mov
fistps
xor
pop
push
sahf
push
mov
pushf
repz
movsl
push
in
rorb
and
ljmp
je
shlb
or
loope
adc
int
push
or
imul
or
popf
mov
pop
xchg
lret
loop
fwait
adc
sbb
cmp
cwtl
or
add
test
xor
add
outsb
push
dec
iret
mov
dec
add
add
xor
jno
inc
push
mov
mov
xlat
bound
shrb
inc
bound
or
fstps
push
and
lahf
les
popl
lahf
jg
lods
mov
dec
push
das
lea
icebp
testl
xor
stos
xor
and
jns
mov
lahf
mov
jmp
rolb
push
rorb
cmp
movsl
push
and
xorb
cs
or
mov
aas
jmp
and
lcall
sarl
sub
inc
aas
addb
dec
loopne
mov
fnstsw
rorb
or
je
pop
lods
and
fnstsw
stos
xor
xchg
cld
dec
gs
push
addr16
pop
cs
orb
inc
lds
daa
sbbl
rorb
inc
push
adc
xchg
call
lcall
sub
imul
add
push
roll
hlt
sub
inc
add
ret
scas
pop
sbb
andb
mov
adc
test
adc
das
xor
sbb
adc
sub
push
cmp
mov
mov
adc
data16
fstpl
roll
adc
shlb
mov
xchg
dec
cmp
fwait
int3
mov
test
lret
or
jo
stc
xchg
push
jge
movsb
inc
push
out
std
mov
outsb
icebp
xor
mov
sbb
lea
xor
xor
adc
xor
dec
adc
sub
lea
xor
push
add
mov
push
inc
imul
cs
and
mov
jg
jmp
add
or
xor
push
lea
loopne
add
test
mov
add
aaa
adc
inc
loopne
iret
pop
xor
xchg
sbb
movd
and
repnz
add
dec
cwtl
dec
out
mov
loopne
mov
push
insl
sub
or
add
in
data16
mov
pop
add
sub
sbb
mov
and
xchg
jo
inc
jg
sbb
mov
out
int
mov
test
inc
aam
push
or
pop
dec
push
enter
scas
dec
adc
mov
or
mov
mov
mov
xchg
push
push
and
xchg
lret
outsb
adc
cwtl
jg
in
xor
xor
or
pusha
movsb
sub
sub
movsl
movsl
jne
add
cmp
inc
iret
daa
adc
cmp
push
jmp
jp
loope
inc
or
decb
and
dec
icebp
bound
add
lcall
adc
test
arpl
xchg
cwtl
or
inc
sub
jecxz
inc
loopne
daa
imul
push
push
imul
xchg
pop
xor
lods
imul
pop
out
mov
push
cmp
inc
push
xor
leave
adcl
cmpb
push
dec
ret
leave
xor
push
xor
roll
or
shrb
xor
arpl
sti
test
in
sti
rcr
inc
mov
sbb
inc
sarb
inc
test
les
or
and
stc
xchg
cmc
pop
pop
inc
jb
push
xor
and
lcall
mov
dec
inc
pop
or
andl
ss
add
test
push
addr16
xor
dec
adc
pop
jecxz
sbb
mov
cmpsb
adc
loop
or
mov
adc
sbb
push
inc
ret
push
rcrl
and
push
push
xchg
jecxz
fistpll
pusha
icebp
aam
push
dec
repz
and
dec
cmp
inc
and
sub
lds
cwtl
leave
pop
push
cmp
cvttps2pi
xchg
and
out
cmp
dec
mov
adc
fisubrl
dec
sbb
cmp
daa
cmpsb
pop
dec
sbb
push
and
jno
jmp
fmuls
jno
sbb
jl
mov
test
movb
dec
cwtl
or
pop
mov
or
push
cmpsl
pushf
add
cltd
cmpl
sbb
xchg
mov
mov
mov
adc
sub
sbb
adc
sbb
xor
es
and
movups
inc
mov
cmp
aas
int3
fldl
dec
or
mov
inc
mov
cmp
fcomp
xor
push
and
xchg
inc
xchg
sbb
imul
rcl
subb
pushf
xchg
mov
insb
adc
add
push
sub
or
sub
test
push
pushf
xchg
popf
mov
xchg
sarl
stos
js
adc
push
lods
mov
loop
push
sti
cwtl
sbb
inc
popf
roll
mov
sub
cmpsb
aas
jne
std
inc
roll
movsb
adc
add
out
scas
push
loop
inc
test
add
test
sub
lea
push
push
adc
inc
imull
push
testl
add
pop
fwait
jge
andl
sbb
mov
jno
add
xchg
xor
test
cmp
test
push
int3
arpl
lods
add
add
and
ret
sbbl
mov
push
add
popf
xchg
mov
push
lcall
adc
push
dec
jne
add
xchg
jecxz
inc
flds
push
mov
mov
bound
les
cmp
dec
xor
test
mov
and
stc
xor
mov
dec
cwtl
and
or
es
rol
sbb
repnz
in
xor
mov
add
jecxz
ficoms
push
aaa
insl
inc
add
cwtl
add
jo
push
and
sbb
and
inc
jns
sub
int
aam
lods
or
sahf
mov
pop
les
popa
stos
dec
mov
mov
cwtl
cltd
sbb
or
push
add
sbb
imul
add
add
sbbl
add
jae
mov
cmp
add
mov
or
into
jno
mov
xlat
xor
xchg
sbb
movsb
cltd
xor
mov
xchg
faddl
inc
dec
adc
add
ss
jmp
std
lods
lret
mov
ret
xor
push
xchg
adc
add
dec
rolb
xchg
inc
pop
xor
xorl
jno
lods
ficompl
and
xchg
push
cmpb
dec
xchg
sbb
push
sub
mov
movsl
lods
inc
dec
loopne
mov
xor
mov
or
cmp
test
and
cld
pop
movb
push
xchg
iret
jmp
das
pop
pop
dec
sahf
ja
flds
movb
cltd
arpl
adc
mov
pop
adc
aaa
imul
movsb
xor
imull
or
sbb
fidivrs
inc
mov
and
daa
ss
adc
cmpsb
push
pop
push
cmp
arpl
inc
sbb
add
xchg
xchg
ljmp
add
jo
cltd
xlat
xchg
mov
or
insl
loope
ret
rcl
icebp
cltd
test
push
sbb
fimull
dec
dec
sbb
push
lds
add
adc
and
cmpsb
add
inc
adc
sbb
pop
and
mov
and
mov
xor
and
sub
mov
stc
jae
cmpl
adc
xchg
jnp
mov
xor
mov
sub
push
add
shlb
sub
add
mov
dec
std
cmc
and
sbb
add
push
aad
add
add
and
add
or
jecxz
sbb
test
dec
mov
stos
xor
pop
push
cltd
cmc
std
xchg
xor
loop
imul
push
sbb
andb
sbb
xor
dec
adc
popa
iret
in
lcall
stos
and
inc
adc
add
frstor
cs
dec
adc
addl
out
sbb
sbb
or
not
add
dec
add
ret
js
pop
and
lea
inc
dec
fldl
inc
mov
sbb
pop
push
adc
movsl
mov
pusha
ljmp
loope
cmpsl
push
movsl
or
sub
mov
jne
cs
pop
xlat
push
cwtl
movsb
mov
push
or
inc
sbb
addl
data16
insl
loope
cmpl
xorl
sbb
xor
rorl
cmp
push
jns
mov
adc
adc
xchg
cmp
int3
rcl
add
inc
test
je
rcrb
ret
cmp
sbb
std
inc
and
jl
push
and
sub
pop
pop
sbb
mov
push
mov
xor
out
jne
rcrw
adc
fld
scas
ror
outsb
ret
dec
mov
pop
nop
cmpsl
inc
sub
in
push
lea
push
xchg
and
arpl
sbb
cwtl
popa
pop
cmp
sub
cwtl
dec
in
sub
orb
vprotb
xchg
aas
mov
inc
and
xor
jno
icebp
ja
lea
or
add
cltd
cmp
ret
dec
jmp
pop
xor
cmp
mov
adc
out
or
cmp
mov
lret
cmpl
loope
push
mov
popf
movsb
xor
sbb
leave
jmp
pop
push
sub
or
xor
mov
add
push
inc
and
lcall
jg
and
or
mov
dec
xor
or
popf
pop
mov
adc
loop
xor
and
mov
jbe
rol
roll
push
outsl
jns
jo
dec
push
jg
mov
dec
sbb
outsl
inc
or
dec
sbbl
or
lods
jne
cmp
cmp
xchg
stc
inc
pop
pop
xor
in
stos
leave
inc
stos
pop
mov
push
jmp
addb
inc
sub
lret
fisttpll
dec
sbb
jge
mov
cmpl
aaa
pusha
dec
dec
pop
and
lods
jle
lret
pop
adc
jnp
insl
or
push
add
pop
dec
sbb
sub
jns
adc
and
ret
insl
adc
dec
push
jo
or
subb
fs
or
push
popa
inc
pop
dec
or
lahf
push
xor
sub
rcll
test
push
scas
test
cmp
mov
insl
dec
pop
lea
loopne
mov
rcll
rcrb
adc
and
adc
pop
xlat
in
xorb
xchg
test
inc
pop
push
leave
pop
and
aaa
adc
test
pop
movb
inc
add
push
add
jmp
mov
rolb
pop
stos
test
xor
test
push
ds
xchg
xor
add
loope
lcall
pop
or
sbb
adc
loope
aaa
mov
adc
cld
push
cmp
ret
xorb
test
pop
mov
ljmp
jno
push
mov
and
push
aam
je
test
add
imul
push
adc
sbb
daa
inc
dec
and
subl
ret
cwtl
mov
sbb
pop
rclb
xchg
or
rcr
adc
add
aam
lahf
add
fimull
add
adc
pop
mov
imul
popa
mov
cmpl
xchg
pop
pop
arpl
pop
pop
fstl
inc
sbb
jbe
adc
adcl
pop
sbb
add
cmp
lods
nop
xor
dec
mov
and
sbb
mov
repz
test
push
sbb
and
xchg
adc
test
sbb
adc
loope
mov
mov
das
ljmp
mov
sbb
repnz
and
mov
bound
sbb
inc
cmp
cmp
lods
mov
ds
rorl
jecxz
repnz
nop
xor
pushf
jp
fisttps
rolb
pusha
adc
dec
pop
pop
scas
xchg
lret
dec
cmp
adc
lds
mov
or
add
imul
dec
mov
clc
or
and
pop
lea
out
test
mov
mov
addl
jne
test
mov
push
test
fsubrp
insl
sbb
in
ret
and
js
sbb
or
xchg
ret
icebp
and
pop
jo
int3
cltd
mov
and
sub
lods
lock
cmp
movb
sub
fcompl
cmp
push
lret
fstps
push
add
mov
cmpb
inc
or
imul
pusha
inc
sbb
mov
cmp
or
es
push
les
cs
cltd
mov
mov
addl
out
movsl
add
jo
mov
push
pusha
and
xlat
leave
or
enter
push
sub
and
movsb
cmp
jecxz
jns
xchg
outsb
and
mov
test
jmp
or
mov
test
and
js
adc
nop
lods
xchg
arpl
push
and
rolb
lods
nop/reserved
das
push
mov
and
mov
jnp
mov
push
and
sbb
xchg
xor
jb
mov
lea
sub
adc
mulb
cmpsl
cmp
dec
cmpsb
sbb
sbbb
cmp
inc
movsl
popa
adc
inc
jae
loope
sbb
int
and
inc
arpl
adc
lds
nop
dec
sti
or
add
ja
mov
test
je
imul
mov
imul
or
inc
test
sbb
jge
aam
dec
xchg
jmp
imul
and
mov
cmpsl
popl
sub
sbb
mov
addr16
std
inc
sbb
lea
push
and
ljmp
mov
and
dec
lcall
or
out
call
adc
lret
sbb
and
jmp
mov
fdivrl
ds
pop
jno
sub
inc
and
xor
add
adc
cld
js
lods
mov
sbb
gs
lock
rolb
popf
xor
in
and
sbb
movsb
adc
inc
sahf
dec
in
jo
cs
mov
sub
push
daa
dec
mov
jno
ds
mov
sbb
xor
insl
or
inc
xor
popf
fisubrl
cmp
inc
sub
test
movsb
or
or
or
movsl
dec
movl
add
aam
cltd
out
and
outsl
add
movsl
mov
lea
sarl
and
adc
or
jb
xor
xchg
push
adc
imul
je
test
ret
stos
and
add
jns
sahf
arpl
mov
scas
add
ljmp
ret
icebp
test
sub
xchg
or
dec
mov
cmp
and
mov
or
add
mov
cmp
cmpsb
push
xchg
push
imul
mov
mov
dec
cmp
and
test
popa
and
je
shll
jmp
and
loope
test
cwtl
or
stos
and
mov
leave
dec
sub
jb
into
inc
pop
and
cmp
adc
jns
loopne
push
test
inc
insl
cmp
mov
cltd
in
adc
int
rcrl
jns
repz
addr16
stos
and
imul
sub
imul
adc
or
cmp
push
pop
pop
test
lea
lea
imul
xchg
pop
mov
cwtl
mov
dec
push
xchg
push
out
int3
cmp
daa
cwtl
cmp
inc
jmp
addl
test
rcrl
push
inc
movsb
mov
push
or
xchg
inc
push
pop
test
fwait
test
jmp
fwait
es
pop
bound
add
or
jnp
inc
pusha
lods
mov
mov
dec
aad
mov
insb
insb
pop
jb
mov
cmp
xor
mov
inc
sbb
lea
sbb
jo
xor
roll
dec
fst
shrl
loopne,pn
subl
negl
jmp
fistpll
mov
test
mov
mov
rcll
dec
sbb
add
or
push
iret
clc
push
add
inc
sub
xor
and
repz
rolb
arpl
xor
push
sbb
jns
or
nop
inc
roll
enter
or
push
cmp
loop
pop
imul
ljmp
insb
outsl
inc
mov
cld
mov
cmpsb
push
imul
and
pop
je
pop
dec
sbbl
das
push
and
mov
pusha
cltd
xchg
and
out
xchg
and
mov
mov
add
cwtl
in
lcall
inc
dec
adc
std
dec
jo
and
mov
xor
repz
movl
sbb
inc
les
js
mov
sub
sub
xchg
fnsave
pop
add
and
mov
lods
outsb
test
test
sub
loopne
orl
subl
shll
mov
cmp
mov
scas
test
cli
cmp
rcrl
scas
mov
inc
and
arpl
rcll
movsl
les
aas
fmull
inc
mov
mov
lret
in
and
pop
cmp
adc
sub
adc
addr16
es
rcll
jo
sbb
add
add
faddl
aaa
test
stos
adc
cmp
xorb
sub
xor
repz
cli
dec
mov
and
adc
int3
mov
jne
inc
sbb
js
sub
cmp
adc
sbb
push
and
rol
cmp
pop
stos
jl
mov
movsl
in
fwait
push
or
test
addr16
das
adc
pop
movb
push
or
jmp
jnp
jbe
xor
or
or
or
and
cmp
push
xor
mov
or
ret
mov
push
into
loopne
push
inc
outsl
mov
and
add
lret
enter
stos
or
push
jo
and
test
sbb
testl
mov
js
nop
pop
shr
xchg
lock
inc
sbb
clc
mov
mov
xor
adc
mov
inc
sbb
add
and
sub
adc
fs
loope
inc
jmp
movsl
lahf
add
mov
test
pop
and
mov
mov
stos
xchg
cmp
imul
or
ret
mov
pop
stos
pop
xchg
hlt
or
mov
pop
js
dec
test
stc
cmc
aaa
cmpsb
cmpsb
cmpb
push
stc
testl
push
fimull
jae
push
push
mov
xorb
fwait
mov
mov
add
imul
sub
or
scas
mov
xchg
repz
mov
jmp
or
shlb
adc
add
ret
cmp
movb
sti
push
xchg
cmp
scas
jns
add
popf
andb
lods
leave
aaa
sub
movsl
rorl
or
lods
popa
or
fwait
cmp
shll
or
pop
orb
pop
mov
mov
or
or
xchg
sub
add
xchg
push
cmp
jno
test
add
bound
and
out
dec
sub
inc
adc
pop
movsl
xchg
push
stc
shlb
inc
sbb
test
imul
cmp
and
test
ret
and
push
add
aad
mov
xchg
aad
stos
ret
add
ror
daa
push
fistpl
fst
inc
rclb
xchg
xlat
cmp
and
and
repz
add
repz
inc
cwtl
cmp
inc
sahf
addr16
adc
xchg
jge
dec
mov
in
jne
fdivrs
rolb
pop
inc
jo
push
test
add
dec
pop
adc
add
inc
repz
nop
push
add
imul
push
mov
fcoml
cmp
jae
jecxz
or
cmp
xchg
rolb
lcall
imul
enter
lcall
sub
xchg
push
lods
jno
inc
xchg
pop
pop
es
mov
and
sbb
test
cltd
mov
das
lret
mov
sub
cmp
add
sub
sub
push
cmpsb
pop
jns
push
pop
je
mov
jno
xor
jl
lret
or
mov
mov
rcrb
mov
test
loop
sub
in
jge
fidivs
push
jnp
les
sbb
or
mov
or
rcrb
sti
stc
lods
lods
subl
xor
and
inc
cs
xor
movsb
dec
inc
dec
je
cmp
popa
or
movsl
or
icebp
dec
fisttps
mov
es
popf
pop
mov
loop
in
mov
hlt
xorb
cwtl
mov
xchg
lea
add
sbb
imul
add
dec
pop
push
and
leave
cld
es
jo
xchg
mov
sbb
dec
pop
das
mov
pop
mov
lds
add
add
sub
daa
test
xchg
jmp
addr16
sub
lret
dec
enter
loopne
in
insl
aam
mov
fwait
and
cmpsb
xchg
mov
inc
shll
mov
mov
lahf
rcll
lds
arpl
push
addb
adc
outsl
push
and
jmp
mov
cmpl
dec
int
mov
push
xchg
mov
push
pop
inc
or
and
mov
ret
stos
xchg
stos
adc
out
xchg
xchg
test
add
pop
pop
icebp
adc
xor
pop
dec
add
push
add
xlat
lods
stos
adc
push
test
adc
add
dec
insb
loop
out
pop
jnp
push
inc
xor
insb
dec
divb
adc
push
addb
push
add
mov
movl
mov
cmp
rcll
repnz
add
inc
shrl
sbb
add
mov
cmp
mov
out
imul
insb
dec
and
or
push
icebp
or
cmpsl
leave
cwtl
test
iret
mov
sbb
push
arpl
sbb
push
rcrl
xor
sbb
sub
mov
push
adc
fadd
and
daa
movsl
lahf
mov
pop
insl
jecxz
xchg
or
sub
or
cmpb
fwait
push
sbb
mov
mov
shrb
bound
mov
pop
mov
cltd
or
jnp
aad
dec
testl
sub
jecxz
rolb
lret
mov
pop
pop
lds
mov
sbb
pusha
cmp
push
add
pop
daa
mov
mov
mov
lods
cmpxchg
orb
orl
adc
roll
push
mov
push
bound
jg
add
ljmp
cmpb
inc
fwait
sbb
adc
loope
test
stc
xor
out
add
add
xor
nop
xor
sbb
rolb
lea
push
jno
adc
mov
jmp
push
mov
cmc
and
cmp
stc
pop
lcall
add
mov
push
mov
xchg
cmp
jne
jno
imul
test
sbb
cmp
rolb
addl
sbb
adc
fs
imul
jg
js
inc
pop
sti
push
insb
imul
dec
stc
mov
shll
je
push
push
jp
cwtl
mov
or
xor
rolb
mov
leave
or
dec
js
pop
jne
jecxz
jae
enter
jmp
inc
loope
movsb
push
dec
outsl
xchg
fwait
jb
adc
xchg
das
push
pusha
mov
sar
shlb
imul
mov
aam
inc
xlat
xchg
dec
mov
xor
cmc
cli
stos
nop
push
mov
nop
ss
popa
xor
clc
addr16
push
xchg
lahf
lahf
dec
pop
pop
add
mov
pop
fwait
dec
inc
or
adc
xchg
or
inc
or
jns
xor
xor
or
stos
lret
xlat
adc
fwait
outsl
inc
test
push
add
dec
loopne
into
jg
xor
mov
test
ja
and
xor
scas
and
pop
sub
cmpsb
push
adc
in
enter
fcomp
add
inc
push
mov
add
mov
gs
pop
and
les
inc
sbb
xchg
dec
int3
lahf
leave
add
stc
dec
sbb
mov
and
sub
pop
movl
imul
aam
test
pop
sbb
inc
lret
inc
rclb
xor
mov
lea
movb
mov
dec
adc
mov
mov
jb
mov
mov
and
fstps
jp
add
and
xchg
imul
stc
dec
rclb
stos
jns
mov
sub
lods
rorb
dec
sbb
js
push
arpl
movsb
bound
add
pop
dec
and
pop
jne
movb
insl
lea
mov
push
pop
inc
inc
loop
adc
popl
orb
cmpsl
sub
das
adc
push
cmpsl
dec
pushf
add
test
and
xchg
insl
adc
mov
ret
test
fsubs
cmpsb
xor
fldl
and
and
pop
adc
rclb
sahf
ljmp
popf
ljmp
adc
adc
out
jae
outsl
sbb
dec
test
jno
push
dec
xor
lahf
cmp
leave
or
test
xchg
subl
shll
inc
cmp
cs
sbb
cmp
xchg
fdivrs
add
and
push
adc
jge,pn
adc
push
sub
addb
push
cmp
push
lea
ds
leave
das
fldt
or
push
push
test
mov
jle
push
mov
xchg
pusha
or
inc
mov
test
adc
xchg
int3
lea
cmp
jno
int
xor
add
xchg
pop
sbb
sbb
rolb
hlt
dec
push
pop
je
dec
jecxz
xchg
cmp
dec
lds
mov
iret
scas
repz
pop
sbb
pop
dec
and
les
mov
enter
rolb
xchg
in
push
lods
adc
inc
dec
inc
bound
test
add
sbb
adc
jl
les
and
or
gs
add
mov
inc
adc
jns
or
xchg
pop
sbb
shll
imul
mov
sarb
mov
mov
xchg
cmp
int3
gs
adc
sti
jnp
adc
add
sbb
scas
sbb
lcall
hlt
mov
inc
xchg
add
nop
popl
inc
scas
dec
mov
addr16
lret
pushf
jp
push
jecxz,pn
add
mov
add
mov
or
das
or
push
xor
or
mov
pop
and
iret
cmc
lock
out
pusha
movsb
inc
push
sub
test
push
sbb
add
adc
push
push
inc
daa
mov
leave
or
and
inc
pushf
test
add
mov
stos
adc
in
sbb
sbb
sbb
cmp
mov
bound
jl
mov
or
pop
and
lods
mov
scas
cwtl
gs
pop
cmpsb
xor
dec
repz
cmpsb
xchg
aad
or
pop
leave
cmp
mov
iret
popf
inc
xchg
sbb
das
add
or
push
hlt
andl
inc
dec
xchg
lahf
pusha
add
inc
insl
pop
pusha
and
jnp
movsb
jne
bound
dec
std
lods
es
inc
jnp
dec
or
jge
mov
stos
adc
and
in
shrb
loopne
pop
sbb
adc
roll
iret
or
sbb
sub
xchg
pushf
pop
cmp
and
or
jbe
mov
arpl
sbb
jmp
inc
inc
popa
pop
pop
xor
fcoms
jb
sbb
jnp
sbb
pop
cmp
adc
sbb
jns
sub
dec
push
leave
cld
pop
sbb
xor
push
add
cmp
cwtl
stos
inc
fists
movsl
cmp
xor
dec
sbb
jecxz
inc
insb
lahf
fwait
test
xchg
sbb
add
xor
push
leave
sub
mov
test
dec
rclb
sub
sbb
out
scas
lea
enterw
xor
mov
jle
jne
sbb
sbb
test
or
dec
fsubl
dec
ret
popa
aam
xor
test
popa
leave
inc
xchg
mov
adc
xor
movsl
sub
cmp
and
push
inc
cmp
adcl
dec
dec
push
add
sub
add
sbb
shlb
mov
ja
dec
test
cmpb
mov
pop
mov
xchg
add
xchg
pop
loopne
add
mov
es
sahf
add
test
mov
adc
popa
mov
mov
es
adc
xor
test
jns
fbstp
sub
pop
addr16
repz
inc
leave
pop
sub
add
mov
push
leave
jle
xor
or
inc
adc
push
mov
push
jns
inc
push
inc
leave
xchg
dec
jl
push
pop
jno
adc
xor
adc
mov
adc
in
mov
xchg
mov
or
xorb
and
and
popa
jecxz
es
test
adc
push
rolb
or
subb
jmp
xorl
adc
sub
sti
enter
sub
test
stos
mov
adc
add
inc
movsb
xchg
sbb
rorb
aam
jmp
fwait
adc
cmc
aaa
shrb
adc
or
xor
inc
and
pusha
push
xchg
or
daa
jg
sbb
jne
mov
dec
mov
repz
and
mov
imul
mov
test
aam
cmp
mov
jmp
lods
cmp
popa
and
test
ds
mov
sbb
cwtl
subb
inc
leave
inc
lds
xor
mov
iret
push
test
dec
push
and
add
and
test
jbe,pt
rorb
scas
cmc
sbb
mulb
mov
es
dec
pop
leave
sub
sbb
test
inc
xchg
inc
pop
out
sbb
enter
xchg
inc
and
in
xor
jns
pop
add
jnp
insb
pusha
stos
add
mov
dec
cmp
mov
push
and
and
imul
sysret
adc
jo
mov
movsb
icebp
sub
pop
jle
loope
adc
mov
insb
ret
xchg
lea
daa
pop
push
addl
nop
and
test
bound
inc
popa
add
inc
sub
cmp
arpl
lret
dec
repnz
imul
jns
xchg
in
andl
fldt
imul
mov
mov
jmp
test
adc
xor
std
cmpsl
outsl
push
or
lret
cmp
mov
sarl
ficoms
subl
fcmovnbe
cwtl
and
add
add
sub
mov
adc
cld
mull
push
and
sbb
sbb
push
loopne
adc
xchg
mov
push
sbb
push
cmpsb
add
rcrb
ljmp
xchg
mov
inc
pop
sub
stos
push
test
mov
mov
test
gs
int
mov
sbb
cmp
rclb
push
push
leave
movsl
dec
pusha
mov
jmp
mov
add
je
aas
mov
or
sub
or
andl
and
std
shll
cli
xchg
jb
sbb
or
sti
fdivp
shll
mov
mov
ret
daa
and
sbb
lea
push
ljmp
out
inc
xlat
or
add
mov
xor
push
ret
dec
sahf
mov
push
loopne
data16
push
inc
loope
push
cmp
out
adc
mov
incl
stc
add
inc
inc
xchg
cmp
mov
adc
and
add
loope
stc
inc
sahf
push
cmp
mov
out
rcrb
es
jge
pop
rol
inc
lret
add
xchg
adc
mov
dec
in
xor
inc
rorb
cmp
scas
in
and
xor
js
sub
pop
pop
leave
jne
pop
pop
mov
out
or
adc
or
add
and
pop
cmpsl
xchg
inc
sub
xor
pop
rol
test
ret
in
in
adc
cltd
push
cli
or
dec
or
aaa
mov
out
mov
add
dec
rclb
sub
xchg
mov
mov
push
mov
aad
loopne
popa
jg
add
or
mov
nop
push
data16
push
and
test
lea
aam
imull
push
mov
cmpsl
add
mov
mov
nop
add
and
stc
dec
lret
xchg
decl
addb
fcoml
je
adc
and
rclb
test
pop
in
iret
pop
inc
or
rorb
daa
jnp
adc
or
push
sbb
sbb
adc
or
insl
or
sbb
popa
or
add
cwtl
push
das
fdivrs
in
xchg
das
hlt
ds
scas
xchg
push
sbb
push
test
dec
test
inc
popa
adc
scas
xchg
pushf
mov
add
and
stos
add
jmp
jnp
mov
subl
mov
xor
roll
test
stc
add
dec
sbb
sbb
leave
nop
mov
ja
cmpl
add
int3
xlat
bound
push
loop
js
jg
test
sub
movsl
lret
test
adc
dec
adc
fstps
pop
cmp
add
mov
movsb
xchg
inc
inc
movl
xor
adc
std
mov
add
pop
mov
cwtl
pop
pop
jno
sbb
xchg
sub
in
or
shlb
add
mov
jno
insl
push
adc
xor
add
ja
aas
push
lahf
scas
dec
dec
add
jae
mov
inc
jns
addr16
shll
add
jmp
rolb
movb
sbb
sub
bound
mov
push
mov
adc
and
loopne
sbb
nop
dec
cmpsl
ja
cmp
fadds
push
or
push
jo
jae
popf
xchg
xor
cmp
movsb
lret
loope
inc
add
pop
mov
jno
movsl
cmp
sub
xchg
out
mov
imul
imul
andl
adc
movsb
mov
adc
dec
xor
je
pop
push
sarl
bound
imul
xor
xor
mov
adc
xor
pop
lcall
movsb
call
addr16
imul
imul
sub
inc
push
and
push
xchg
pop
fsubl
xchg
pushf
and
in
mov
imul
ljmp
or
lods
test
dec
adc
mov
shll
rcr
xchg
mov
cmpb
push
and
mov
lea
push
lret
and
xor
mov
inc
enter
jmp
xchg
out
std
cmp
xor
sub
dec
pop
adc
test
pop
cmp
test
adc
sub
rclb
inc
mov
mov
mov
add
push
icebp
movsb
adc
data16
and
and
or
inc
xor
add
mov
mov
xchg
sbb
cmpsb
push
xchg
jne
dec
add
arpl
push
or
mov
and
movsl
addl
xchg
orb
cltd
iret
fistl
mov
lret
lret
cmp
and
roll
xorb
xchg
jno
xchg
jae
xor
add
arpl
jecxz
jns
mov
or
mov
test
lock
jbe
imul
mov
or
pop
add
or
clc
jle
loope
inc
cmc
popa
sbb
jno
and
push
and
add
push
jns
mov
dec
cld
sub
sbb
inc
add
cmp
data16
nop
sbb
push
ja
mov
mov
ss
mov
sbb
cmpsb
es
xor
lds
mov
jg
inc
xor
in
ret
cmp
push
rcll
nop
inc
xchg
insl
stc
addb
add
adc
repz
jb
xor
jae
imul
xchg
in
rorb
cli
fsts
dec
mov
in
xor
jns
xor
add
insl
xlat
fistps
popf
cmpsl
lea
inc
inc
jo
mov
or
mov
add
lea
add
inc
sbb
or
jo
mov
nop
xchg
sbb
or
mov
adc
add
dec
mov
adc
adc
add
cltd
fdivl
test
cmp
mov
aad
stos
outsl
inc
adc
adc
dec
sbb
push
in
dec
push
out
test
mov
cmp
cmp
sub
or
mov
fnsave
adc
sub
test
adc
or
iret
stos
cmp
pushf
xor
das
mov
push
jae
add
or
aad
add
leave
add
sbb
add
sbb
jmp
dec
dec
gs
sub
push
cmpsl
add
add
mov
and
mov
or
lahf
mov
loop
fdivrs
mov
ljmp
push
adc
and
jns
push
movsl
push
jle
repnz
add
int
and
cmp
jmpw
shll
inc
andl
push
les
dec
jne
sbb
pop
push
mov
mov
adc
mov
sub
mov
test
add
jno
pop
jg
mov
fcmove
and
mov
sub
add
inc
or
les
cmp
icebp
mov
xchg
repnz
dec
sbb
mov
loopne
add
mov
in
add
movsl
and
repz
sub
mov
push
xlat
and
push
sbb
mov
push
mov
jl
mov
or
fwait
xor
insb
push
cmpsl
dec
out
nop
lock
es
jns
nop
inc
or
inc
sub
int
sub
inc
push
mov
inc
and
pop
jecxz
mov
mov
mov
and
pop
sub
loopne
xchg
sbb
xor
dec
push
add
lea
in
or
fisttpll
jno
adc
inc
add
fwait
add
nop
push
sub
popf
aad
cmp
ret
mov
and
nop
sbb
xchg
mov
add
pop
dec
mov
daa
orb
mov
popa
mov
enter
sarb
daa
popf
cmpsb
jmp
pop
push
fstl
sbb
push
pop
sbb
add
cs
clc
add
nop
out
fisubs
cmp
cmp
push
sub
jp
and
mov
dec
push
test
or
lcall
movsl
les
xchg
mov
xor
mov
mov
xchg
mov
xor
cli
ret
add
test
repz
jo
pop
dec
inc
cwtl
jmp
mov
in
fcoms
mov
insl
imul
aaa
lret
mov
push
adc
jne
add
push
pop
insb
dec
cmpsb
mov
daa
push
adc
xor
sbb
sub
lods
or
and
adc
add
sbb
push
jge
dec
test
pushf
mov
adc
bound
lods
mov
inc
xor
xor
subl
mov
adcb
push
mov
xchg
inc
mov
push
dec
rorl
adc
lret
cwtl
push
and
jnp
es
xor
nop
jae
sbb
stos
fwait
pusha
lods
test
bound
cmpl
cwtl
sbb
or
inc
jp
iret
movsb
rol
les
mov
test
cwtl
rolb
xlat
mov
add
xor
and
ret
inc
push
jnp
repz
jmp
add
in
mov
mov
jns
shrb
xchg
adc
push
lods
cmc
arpl
popa
sbb
xchg
sub
mov
lcall
add
aam
jg
mov
pop
jecxz
dec
sbb
cmpsl
sbb
push
sbb
xchg
fidivl
inc
adc
inc
sbb
pop
lret
iret
lock
bound
lds
inc
inc
fcmovnbe
int
xor
pop
aam
add
insb
and
bndldx
out
inc
xor
inc
stc
push
ljmp
test
xor
rorl
iret
add
adc
stos
fadds
pop
sbb
xor
or
xor
sbb
rolb
lahf
into
pop
mov
jp
jge
mov
xchg
mov
and
leave
xor
xor
cmp
lea
loope
mov
push
mov
popa
mov
dec
pop
mov
sti
addb
ljmp
push
dec
mov
or
inc
movsl
add
pushf
xor
mov
dec
rclb
push
jo
add
addl
dec
adc
sub
inc
add
ljmp
pop
mov
test
out
fisttpl
popa
data16
sbb
test
rol
test
push
outsl
jo
dec
or
or
xchg
jnp
mov
and
shrb
xor
sbb
ret
std
mov
jno
sahf
les
inc
adc
test
xchg
xlat
xchg
cmp
sbb
cmc
rolb
and
out
add
dec
or
pop
cmpsl
cmp
sub
gs
sbb
jnp
adc
jno
test
adc
jne
inc
xor
lcall
push
leave
push
xor
stos
mov
lds
adc
adc
xorl
xchg
or
push
adc
fwait
cmp
movsb
mov
repz
xor
inc
or
push
or
sbb
fmul
or
or
daa
inc
push
cmp
pushf
mov
inc
sbb
or
adc
out
stos
filds
adc
aas
dec
aad
dec
lods
outsb
add
cmp
int
lret
inc
xlat
push
or
adcl
pop
pop
xchg
inc
add
mov
cwtl
movsb
sbb
sub
nop
les
out
mov
pop
lret
sbb
xchg
adc
push
push
rcl
push
shlb
and
adc
fisubs
sbb
dec
cmp
mov
orl
mov
sahf
xor
mov
in
les
rcl
andl
adc
sbb
push
out
out
xor
pop
stc
test
cmpsl
sbb
gs
xor
xorb
int
cltd
push
sbb
sbb
mov
and
mov
xchg
dec
or
aad
push
mov
add
enter
mov
es
add
inc
push
jecxz
lret
mov
aam
roll
fisttpl
mov
leave
xchg
xchg
cwtl
and
gs
dec
add
add
sarl
sbb
or
add
push
cltd
in
dec
adc
lcall
les
and
push
mov
rclb
jo
shlb
gs
bound
xor
xor
add
jnp
inc
xchg
movl
sub
and
subl
cmc
adc
mov
movsl
xchg
sbb
push
popa
dec
call
clc
xchg
stos
dec
leave
outsl
test
stos
sbbl
sbb
push
mov
stc
pop
or
in
mov
es
inc
add
or
jns
aad
inc
or
sarl
mov
sbb
nop
mov
mov
je
adc
push
bound
cmp
adc
push
je
in
out
dec
dec
xor
shll
mov
cmp
add
and
lods
adc
push
test
mov
cmp
add
or
pop
push
xlat
bound
and
stos
mov
sub
mov
xor
and
sbb
addb
and
mov
xor
or
inc
sbb
xlat
test
addb
push
mov
movsl
stos
leave
adc
adc
mov
jg
mov
mov
pop
sub
mov
sbb
inc
cmp
gs
fs
mov
imul
mov
inc
lret
dec
in
outsl
dec
adc
adc
cmpl
and
stos
xchg
test
adc
in
push
pop
fadd
mov
pop
and
or
faddl
inc
or
movsl
jo
pop
mov
cltd
inc
dec
jae
dec
jo
or
push
aam
popa
mov
in
dec
add
mov
add
push
int3
outsb
fs
adc
aam
xor
sahf
repz
push
les
push
xchg
or
jo
push
jae
imulb
out
inc
and
lcall
imul
test
cli
mov
xchg
cmp
sahf
fstpt
movsb
je
sub
daa
adc
add
push
or
fistpll
iret
pop
push
cmc
mov
xchg
jmp
sarb
pusha
aad
cmpsl
scas
sub
ret
loope
xchg
cmpb
aas
fwait
dec
cmp
dec
loopne
imul
xor
dec
jmp
add
in
stos
mov
mov
add
xor
repz
pop
cltd
ret
sbb
xor
push
mov
cld
pop
out
and
and
int
push
es
and
pop
int3
sti
adc
cwtl
xor
adc
pop
repz
aam
mov
inc
inc
or
jmp
xor
stos
add
les
pop
cmpsl
push
pop
inc
mov
mov
and
andb
xor
mov
add
rcrl
sbbl
inc
inc
mov
inc
pop
scas
pop
mov
mov
or
arpl
fwait
xchg
xor
sahf
shll
adc
mov
jge
and
push
or
mov
cwtl
push
inc
sbb
bswap
add
test
out
lods
adc
pop
sbb
adc
stc
imul
push
and
and
mov
mov
cmp
sub
ljmp
add
mov
push
xor
inc
das
adcl
xorb
insl
imul
imul
and
mov
xor
dec
test
xor
sub
fwait
sbb
int
xor
rcrb
fs
xchg
nop
in
adc
add
mov
inc
inc
shrl
test
popa
add
outsl
and
lock
xor
and
lds
cmp
or
sub
nop
inc
pop
add
test
or
and
push
push
or
push
daa
add
xor
jb
add
test
add
push
and
dec
call
pusha
mov
pop
jno
call
popa
push
dec
dec
sahf
push
shlb
inc
cmp
cmp
and
push
pop
jo
rorb
ljmp
orl
or
rorl
lods
sub
psraw
pop
pop
add
xchg
jo
mov
jne
test
push
xor
jae
movsb
adc
sbb
mov
dec
xor
push
sti
sbb
sbb
repz
xchg
push
xor
imul
pop
fistl
inc
push
sub
sub
push
mov
insl
adc
or
les
repz
loopne
sbb
inc
cltd
leave
sbb
stc
mov
inc
push
mov
std
aam
bound
pop
sbb
push
and
loopne
sub
adc
adc
popf
inc
cwtl
mov
sbb
rcl
sbb
shrb
loopne
mov
scas
in
mov
dec
xchg
and
inc
cmp
xor
daa
cmpsb
adc
cmpsb
pop
mov
sbb
adc
je
test
push
xlat
add
hlt
inc
popf
add
xchg
adc
pop
stos
mov
add
addl
lcall
mulb
xchg
pop
mov
and
or
sbb
xor
add
xor
repz
or
mov
rolb
in
cmp
pop
je
push
inc
ljmp
xor
dec
cmp
insb
orb
mov
pop
inc
enter
leave
xor
or
dec
lock
adc
and
mov
popa
sub
std
xor
or
mov
dec
or
shl
pop
xor
jb
pusha
mov
pop
xor
inc
inc
in
test
push
and
sub
xor
idivl
mov
xor
or
mov
push
pop
mov
int
das
iret
push
mov
out
and
sub
cmp
fstl
ret
jnp
mov
daa
sti
hlt
fcmovb
inc
adc
adc
inc
xchg
ljmp
iret
imul
or
js
mov
lea
add
add
push
cmpsl
pop
outsb
or
sbb
lods
cmp
and
and
aam
dec
jecxz
flds
inc
add
ljmp
and
loop
pop
push
add
lcall
or
or
or
sub
adc
movsb
sub
mov
xchg
repnz
les
fldt
xchg
rclb
test
xchg
in
add
aaa
sti
fcoml
sbb
push
test
pusha
cmpsl
imul
adc
es
and
cwtl
fdivrp
mov
mov
push
lret
or
ljmp
mov
ret
stc
adc
pop
in
jmp
inc
sub
xchg
add
sbb
shrl
mov
mov
aaa
xor
mov
fists
adc
mov
mov
popa
test
pusha
inc
out
jmp
cmp
jno
push
cmp
cmp
xchg
adc
xchg
jo
lret
inc
mov
push
outsl
or
add
dec
shll
ja
stos
aaa
orb
xor
jp
add
or
add
stos
and
and
or
in
testb
sub
lea
push
mov
adc
dec
lret
pop
jmp
call
lret
dec
rorl
jge
add
xchg
inc
xor
sbb
push
add
push
je
inc
pop
xchg
cmp
push
xchg
sub
add
pop
add
aaa
adc
and
adc
stos
sarb
movsl
mov
fs
mov
or
mov
xor
push
das
add
loopne
test
mov
pop
add
test
imul
rolb
sub
fwait
jo
loope
les
push
or
movsb
or
pop
push
and
cmp
mov
lock
and
add
push
lea
jne
adc
dec
adc
sbb
add
movsl
icebp
scas
pop
shrl
in
add
sbb
adc
add
ljmp
je
push
les
xchg
mov
push
jmp
jmpw
movsl
in
mov
imul
cmpsl
and
loopne
dec
mov
or
stc
adc
add
mov
mov
adc
mov
jbe
mov
dec
sbb
and
add
rclb
push
nop
push
xor
bound
fisttpll
or
movsl
adc
out
sahf
push
push
sub
sahf
pop
adc
sub
loopne
inc
mov
pop
ret
jecxz
fistl
fs
sub
dec
cwtl
cmp
xor
in
sbb
lds
add
mov
jns
mov
lahf
outsb
pop
inc
adc
lods
imul
adc
shld
pop
and
sbb
test
and
mov
sbb
nop
outsl
in
mov
adc
pushf
sbb
lret
dec
inc
test
adc
int
or
xchg
mov
push
push
mov
movsb
add
stc
adc
adc
adc
outsl
dec
inc
sahf
and
cmp
xchg
es
fadd
movsl
adc
fldt
test
test
cmpsl
cwtl
lods
and
lahf
stos
repnz
mov
xchg
push
add
jge
xor
pop
mov
push
pop
xorl
push
mov
xchg
xchg
or
popf
pusha
adc
test
sbb
test
push
cltd
les
out
or
xchg
mov
adc
xchg
and
rolb
add
mov
test
je
jns
cwtl
inc
test
mov
int3
sub
add
xchg
xchg
lahf
adc
pop
cwtl
movsl
jo
and
movsl
or
add
cmp
and
movsl
add
dec
pop
or
leave
fadds
es
cmpsl
and
loope
adc
pop
push
xor
dec
pop
arpl
mov
add
aaa
movsl
or
in
inc
and
push
pop
xor
in
lahf
add
test
rcll
and
loope
push
in
cmpsb
int3
lock
insb
test
mov
lret
jl
mov
jge
push
xor
test
jecxz
cmpsb
in
ret
mov
push
andb
mov
add
lds
inc
mov
cmp
push
inc
push
nop
push
or
jnp
movsb
sbbb
outsb
sub
sub
xchg
or
add
lahf
add
scas
mov
or
cmc
inc
arpl
frstor
cmc
cmc
jmp
sub
ficoms
scas
adc
ret
popf
and
push
push
inc
mov
sarl
and
dec
loop
xor
pop
orl
sbb
push
pop
enter
fwait
scas
ret
scas
adc
pusha
mov
adc
and
mov
mov
repz
pop
xor
mov
icebp
clc
repz
sub
xchg
hlt
cwtl
adc
shrb
pop
add
mov
rorb
add
inc
jnp
mov
movsl
inc
mov
mov
ljmp
cmpsb
loopne
xor
leave
inc
sbb
lds
pop
sub
pusha
add
popa
fsts
mov
cmc
rcl
xor
cmc
sub
jmp
inc
push
and
rolb
add
shlb
sbb
scas
cs
mov
adc
and
xor
int
fcmovb
aad
jmp
dec
xchg
and
shlb
xchg
fwait
ror
add
add
ret
jns
stos
add
ja
lods
add
adc
and
leave
ret
sbb
iret
test
scas
add
pop
rol
xor
sbb
insb
popa
addr16
xchg
push
bound
xor
add
movsb
es
cmp
dec
adc
stos
das
aad
adc
sub
dec
mov
and
clc
adc
push
sbb
incl
sarl
push
ja
and
xchg
adc
add
pop
sub
je
arpl
mov
mov
movd
or
sbb
shll
adc
adc
leave
jae
enter
insl
leave
push
insl
imull
imul
cmp
inc
mov
imul
arpl
pop
aas
add
add
mov
aad
dec
cmovnp
nop
sub
mov
stos
ret
push
lcall
mov
or
lock
jns
ret
leave
arpl
mov
xor
stos
aad
dec
push
imul
pop
mov
push
aaa
sub
mov
fistpll
add
push
adc
popa
loope
hlt
mov
mov
cs
into
sbb
lcall
pop
stos
orb
inc
mov
addb
shl
and
test
popa
std
xchg
add
add
sub
out
mov
inc
fnsave
pop
xchg
and
dec
leave
mov
inc
notl
push
stc
mov
add
push
mov
in
sbb
adc
mov
sbb
mov
nop
lds
jmp
add
xchg
test
sarb
out
aas
stos
mov
movsb
sbb
pop
jno
add
sub
push
add
repz
push
mov
pushf
sbb
add
ljmp
pop
push
jmp
and
es
inc
xchg
jmp
mov
pop
xchg
xchg
mov
das
sub
shlb
fimull
sbb
cwtl
mov
xchg
je
inc
jmp
daa
jl
inc
or
add
lea
and
mov
icebp
fisubrs
movsl
sub
push
test
and
lcall
adc
sub
inc
dec
pushf
sub
hlt
dec
shl
mov
test
jno
and
test
pushf
adc
mov
or
mov
inc
pop
sub
or
les
inc
imul
xchg
mov
jmp
je
lcall
push
and
insb
jmp
cmpsb
fldt
sub
xor
sub
into
mov
xchg
jae
add
fs
xchg
mov
adc
adc
mov
out
leave
mov
mov
test
cwtl
sub
push
sub
shll
cmpsb
sub
xor
ret
or
adc
bound
or
mov
lcall
movsl
les
pop
fadds
xor
ja
sbb
and
cwtl
push
inc
sbb
enter
cmpsl
outsl
or
xor
mov
sub
popa
dec
je
push
imul
xchg
pop
push
enter
lds
sbb
jae
adc
jge
jno
js
and
bound
or
jns
ficoml
ret
or
inc
or
adc
sub
lcall
dec
add
aam
add
push
mov
aam
loop
add
adc
jne
cmpsl
loopne
jb
pop
repnz
je
mov
imul
or
push
jle
mov
dec
cltd
dec
pop
test
adc
outsb
iret
xor
ret
test
xchg
inc
in
mov
dec
mov
cltd
loope
add
xchg
mov
stos
rclb
pop
out
adc
dec
inc
sub
pop
pop
inc
mov
mov
pushf
jbe
push
and
and
cltd
repnz
mov
xor
or
inc
inc
pop
imul
push
push
dec
mov
adc
les
add
adc
shlb
outsl
lcall
xchg
pop
mov
mov
fs
cmp
sti
xchg
stos
and
popf
or
fs
cmp
sqrtps
nop
movsb
inc
mov
add
shll
adc
ds
jmp
or
jae
inc
and
dec
push
mov
mov
or
pop
pushf
mov
aaa
and
js
xor
xor
scas
push
or
dec
and
insl
rorl
xor
or
pop
add
sub
adc
xlat
and
sbb
add
and
jnp
fstpl
test
inc
adc
pop
pop
jno
test
cmpsb
sub
dec
or
xor
pop
adc
sbb
push
add
outsl
leave
das
pop
dec
in
test
mov
sbb
and
add
stos
xchg
mov
pop
inc
add
insb
cmp
mov
repz
sub
sub
cmpsb
add
fistl
test
pop
inc
cs
popf
mov
insl
dec
or
adc
decl
and
repz
mov
aad
test
loop
or
jge
filds
lods
cmpsb
xchg
xchg
adc
cltd
push
xlat
sahf
mov
and
pop
sbb
push
mov
aas
push
mov
imul
and
inc
jge
js
popf
mov
aaa
dec
scas
mov
add
les
sbb
push
xor
cmpsl
xor
sbb
cwtl
mov
push
lods
or
rorl
popa
std
sbb
js
test
jo
mov
mov
sbb
lcall
imul
rolb
mov
jns
push
nop
jno
movsb
jns
xor
lods
mov
mov
or
and
popf
shrl
xchg
inc
xor
mov
fcomps
sbb
pop
push
push
enter
aaa
rcll
das
ret
fadd
sub
dec
mov
arpl
push
fadd
ror
jmp
outsb
adc
sbbl
shrl
pop
sarb
addl
cwtl
das
add
mov
ljmp
xchg
cmp
mov
lret
add
pop
mov
enter
or
test
lea
sub
push
xor
xchg
into
aas
jnp
sub
sbb
loop
mov
movsb
mov
inc
insl
fmull
or
mov
add
cmpsb
mov
cmp
add
xchg
push
cmpsb
leave
mov
addl
inc
push
pushf
adc
lods
sbb
adc
mov
sub
not
xchg
insb
mov
cs
sbb
add
stos
or
jno
jne
or
nop
push
cmp
push
lds
dec
mov
aam
adc
subb
sbb
aas
add
push
mov
push
push
sbb
push
imul
and
cmpsb
movsb
jns
andb
popa
or
inc
sahf
push
mov
push
jne
add
repnz
je
test
adcl
shl
push
dec
pusha
push
popa
test
fwait
mov
pop
fdivl
xchg
jns
lods
inc
add
add
adc
adc
popa
inc
dec
jmp
sub
add
mov
fisttpl
xchg
cmpsb
mov
inc
rcrb
jne
dec
mov
in
movsl
mov
fbstp
xchg
and
arpl
inc
jp
add
xadd
outsb
cltd
xor
mov
mov
je
adcb
mov
inc
subps
cmpsl
jne
sti
add
sbb
rcl
lock
je
or
xor
pop
jo
das
sbb
inc
or
jae
and
mov
inc
dec
test
jg
sub
movsb
sub
ret
mov
pop
adcl
out
into
scas
dec
wbinvd
js
fsub
test
incb
pop
inc
sub
das
xchg
mov
push
pushf
mov
sbb
rorb
dec
mov
cmp
dec
cvtdq2ps
lret
add
pop
mov
sub
outsl
int
roll
xchg
jae
add
addr16
rclb
xlat
das
stc
cmp
dec
mov
lods
xor
orl
mov
add
inc
mov
outsb
cmpsb
scas
ds
orl
repnz
lret
inc
movsb
cmp
roll
or
mov
pop
mov
mov
aad
loope
mov
outsl
push
jle
sbb
add
loopne
jmp
addr16
and
push
test
stos
fstl
pop
jo
bound
push
or
sbbb
das
mov
jb
mov
fcmove
xor
popf
loope
test
add
push
mov
adc
sbb
and
mov
leave
jns
addl
cmp
mov
and
loop
mov
movsb
movsl
sub
dec
or
sub
pushf
inc
dec
xchg
sub
and
addr16
mov
iret
xchg
push
mov
push
int
pop
or
ret
cmpsb
adc
ja
or
adc
add
xor
lds
fildll
cmp
mov
xchg
sbb
sarl
sub
fldt
pop
das
pusha
pushl
mov
mov
dec
call
mov
mov
sahf
test
aad
fisubs
or
cs
shrl
cmp
xor
xor
pop
cltd
repz
dec
jae
sub
mov
push
sbb
in
rcrb
gs
ret
leave
dec
sub
jns
data16
lea
das
adc
andl
or
cltd
jp
and
push
lods
xorl
add
cmp
test
or
sub
or
fistps
aas
repz
add
das
cmpsl
adc
popf
inc
push
or
ret
pop
mov
dec
add
fcompl
and
pushf
xchg
xchg
mov
jmp
xor
rolb
ret
in
dec
adc
jae
jl
or
mov
add
and
loope
pusha
mov
cmp
lods
add
push
imul
pop
and
jl
pop
pushl
popf
sbb
xor
nop
add
fsubs
xchg
sarl
cs
or
adc
inc
and
aaa
test
inc
xchg
add
and
sub
and
mov
mov
fimull
inc
mov
mov
add
jo
dec
xchg
xor
adc
add
stos
cmp
popa
pushf
jecxz
test
cmc
out
jp
lods
addl
sbb
xor
shrb
mov
in
xor
out
pop
rolb
test
fmull
push
cmc
fstl
movsb
stos
pop
idivb
test
repz
faddl
mov
xorl
jns
and
bound
jns
mov
mov
add
vpsrld
pop
jle
xchg
add
fistl
or
fbstp
sub
addl
fstpt
inc
shr
and
add
jno
adc
shlb
loop
mov
adc
xor
xchg
mov
push
lcall
and
xchg
ds
push
adc
movsb
jmp
pusha
sbb
rcpps
icebp
out
loopne
push
data16
mov
sub
dec
loope
outsl
push
rcrb
data16
xchg
dec
sahf
dec
dec
aam
loopne
pushf
jl
loop
ficoml
and
push
jge
dec
sub
xor
insb
loope
mov
scas
or
xchg
jg
gs
jb
lock
add
inc
pop
stc
pop
pop
push
xor
add
dec
sbb
mov
arpl
popa
cmpsl
pop
pusha
push
iret
adcb
xchg
sbbl
movsl
xchg
add
mov
mov
fs
xchg
adc
add
inc
inc
arpl
es
subl
ss
inc
and
xor
jecxz
adc
movsb
mov
test
test
add
shl
cmp
mov
movsb
mov
ja
jne
nop
data16
in
rorb
int3
ret
andl
push
test
std
dec
inc
push
xchg
or
add
and
jge
and
cmp
jo
xor
mov
mov
jae
test
mov
sub
addl
mov
dec
pop
rolb
mov
stc
add
bound
jmp
lods
sub
mov
push
push
push
shl
add
mov
std
add
xchg
and
adc
add
mov
push
xor
xchg
fwait
nop
out
dec
sub
xchg
jne
movsl
or
popa
in
addb
repz
sbb
xor
rclb
sub
jae
test
xchg
xor
lods
adc
aad
scas
cmp
dec
push
push
movsl
or
push
mov
pop
push
sbb
sub
sub
xchg
and
mov
insl
int
jns
lea
ret
push
sub
cs
cld
add
and
sti
push
xor
pop
xchg
test
or
addb
push
nop
shlb
cli
mov
and
movsl
xchg
out
addr16
pushf
and
stos
xor
cmp
or
and
or
xor
jo
sbb
mov
xchg
sub
aaa
es
adc
frstor
or
inc
or
cmp
or
cmp
push
lods
out
and
dec
mov
jecxz
aam
mov
xchg
insl
inc
rclb
jne
inc
sub
adc
and
lahf
sbb
out
insl
iret
jbe
pusha
shll
mov
dec
push
inc
rorb
add
mov
rcr
cwtl
sub
shrb
inc
test
incb
ret
push
sahf
add
add
add
push
sub
or
mov
xor
add
push
arpl
and
popf
add
push
sub
addl
subb
lcall
add
push
je
inc
inc
push
clc
or
nop
mov
sbb
rolb
mov
loop
xchg
loopne
fistl
add
cmp
xor
and
aad
and
pop
les
dec
pop
sbb
mov
add
xchg
cmpsl
hlt
movsb
das
cli
movups
push
inc
inc
leave
in
aad
dec
leave
pop
jecxz
dec
dec
push
mov
and
lcall
xchg
push
jae
mov
pop
mov
sbb
xor
jne
iret
dec
adc
xchg
xchg
add
inc
mov
stos
movsb
mov
adcl
sub
add
jecxz
rcll
pop
pop
stos
inc
xchg
cs
cs
pop
adc
mov
hlt
xchg
dec
pop
std
push
and
gs
or
shrl
mov
or
or
sub
dec
sbb
cmpsl
cltd
rolb
mov
dec
pop
adc
and
loopne
iret
cmp
xor
pop
popa
jne
out
jbe
aam
dec
inc
lcall
insl
in
lcall
cli
stc
add
test
rolb
mov
dec
mov
jg
mov
push
add
mov
cld
sub
test
dec
mov
and
test
mov
orb
jae
sti
mov
sub
fstpt
push
mov
lret
orb
mov
add
or
rclb
jl
sbbl
cltd
call
cwtl
mov
lods
stos
inc
push
ret
inc
adc
scas
push
or
xor
xchg
push
leave
repz
fldl
sub
mov
imul
and
jecxz
rorb
and
add
add
shrb
adc
add
in
adc
popa
ljmp
fadd
mov
inc
or
test
dec
inc
dec
fidivrl
push
and
inc
dec
adc
inc
xchg
or
movsl
push
int3
lahf
pop
sub
jns
mov
test
mov
add
or
dec
sub
add
adc
sarb
stos
push
push
push
adc
jo
pop
add
dec
jg
hlt
add
pop
cmp
outsb
push
mov
and
or
push
add
push
mov
aad
ljmp
add
dec
and
test
push
or
aaa
inc
hlt
mov
mov
or
call
push
xchg
cmpsb
insl
xchg
nop
es
cwtl
dec
jp
push
gs
add
cmp
lods
cmp
mov
jnp
lds
xor
sbb
inc
xchg
les
and
jmp
scas
andb
in
shll
fucomp
or
or
and
hlt
ljmp
sub
scas
ja
sbbl
out
add
and
xchg
lret
aad
pop
xchg
enter
ss
pop
push
or
inc
fcmovnu
cmp
push
rclb
pop
inc
xchg
cld
xchg
add
xor
test
movsl
andl
mov
dec
inc
int3
test
cltd
inc
or
rcll
cmp
push
orb
xor
das
je
inc
loop
iret
and
inc
dec
imul
mov
lea
test
and
jp
cmp
notl
jg
xor
aam
push
in
ret
sbb
cmp
subl
or
pop
xor
loopne
loope
xlat
mov
add
lock
inc
mov
ss
push
mov
add
test
lret
scas
cs
xor
mov
pusha
dec
daa
push
xchg
xchg
std
andb
stos
adc
ljmp
popf
mov
add
outsl
push
inc
mov
mov
iret
bound
test
jnp
aad
sbb
jno
sbb
ds
fisttpl
test
or
jno
test
sbb
add
hlt
push
push
lcall
loope
or
or
inc
sbb
jl
mov
inc
mov
and
pop
je
mov
or
mov
xchg
adc
sbb
push
mov
add
sbb
push
and
jnp
inc
dec
das
adc
add
adc
dec
ljmp
test
test
cwtl
les
out
es
mov
mov
jo
adc
and
and
cmpl
ss
mov
mov
mov
xor
or
pop
cmp
lahf
into
add
mov
mov
xchg
mov
movsl
xor
loopne
lods
dec
das
jb
mov
or
mov
leave
repz
jo
push
add
sub
shlb
test
xchg
push
push
adc
push
ret
mov
mov
xchg
or
add
sbb
frstor
popa
xchg
push
adc
ds
cwtl
mov
out
inc
add
sbb
addl
or
mov
sub
xchg
mov
cmpsb
mov
and
dec
jo
in
adc
mov
es
adc
jmp
dec
cs
stc
scas
cmp
pop
sbb
add
fisttpll
sub
inc
jno
roll
loope
clc
push
mov
inc
dec
lds
mov
xor
lcall
jl
mov
mov
insl
adc
je
mov
push
cmp
jmp
mov
mov
repnz
mov
ret
push
mov
dec
outsl
xchg
sbb
or
insl
dec
mov
inc
add
lods
push
pop
adc
push
pop
nop
cmp
push
inc
mov
and
add
mov
lahf
lea
adc
sbb
lcall
stos
test
cwtl
loopne
cmp
arpl
mov
xor
cmp
cmp
adc
jmp
add
aas
mov
adc
push
add
fcomi
push
es
mov
dec
mov
mov
inc
push
addr16
pop
pop
nop
lds
pop
mov
notl
jo
aam
test
push
and
stc
or
test
push
imul
xchg
mov
pop
addr16
jne
dec
imul
mov
outsl
int
inc
sbb
mov
add
pop
or
cltd
cmp
fmuls
aad
mov
xchg
mov
lcall
pop
movsl
push
xchg
dec
mov
adc
mov
or
andl
rcll
das
add
rorb
inc
inc
aas
loope
dec
jnp
xchg
loope
sub
or
movsl
sbb
nop
cmp
fcom
mov
pop
jge
sub
sub
jo
jns
repz
test
repz
mov
int
mov
jmp
cli
dec
push
fcmovb
je
lret
orb
mov
cltd
mov
or
xchg
sub
and
daa
data16
or
mov
pop
fwait
sbb
dec
rolb
inc
mov
pop
pop
cld
jp
mov
nop
push
cmc
pop
dec
pop
mov
push
sub
or
shrb
pop
out
mov
jp
daa
inc
rorl
or
inc
jne
inc
dec
cmp
ja
ret
mov
pop
jne
mov
adc
mov
sub
mov
jb
fs
add
or
inc
leave
push
ret
jmp
cwtl
mov
repz
movsl
sbb
je
jp
xchg
push
lock
mov
sub
fwait
arpl
xor
cmpsl
jl
push
pusha
mov
pop
outsb
jge
call
add
imul
test
push
scas
orl
sub
or
ja
pop
adc
fwait
add
xchg
or
or
xor
sbb
sbb
mov
loope
in
sti
mov
dec
cmpl
sub
mov
sbbb
arpl
ds
add
adc
push
inc
xor
stos
pop
out
mov
movsl
pop
jl
xchg
sbb
lea
cmc
push
cltd
cmp
mov
jecxz
loopne
dec
jmp
les
ret
dec
xchg
test
test
xchg
nop
scas
out
pushl
scas
sahf
xchg
inc
sahf
mov
xchg
out
sub
nopl
sub
shlb
pop
rolb
mov
pop
pop
xchg
inc
sbb
xchg
adc
adc
pop
push
dec
inc
inc
sarb
scas
mov
adc
aaa
stc
ret
xor
mov
or
push
inc
pop
adc
test
orl
mov
cmp
xchg
xor
lahf
add
cmpsb
adc
mov
scas
push
push
ret
lret
pop
lock
test
hlt
cmp
sbb
xor
jmp
inc
add
add
lods
adc
rorb
jnp
imul
mov
hlt
cmp
adc
add
movsb
mov
stc
sub
adc
fimull
dec
adcl
fucomi
aaa
imul
stc
es
mov
push
jp
pop
jo
fnstenv
sbb
aad
or
sub
and
out
inc
sbb
loopne
inc
insl
daa
out
rolb
iret
xor
add
pop
inc
movl
lods
std
mov
add
jl
int3
das
sub
mov
pushf
or
add
sbbb
and
flds
xor
icebp
daa
bound
add
push
cwtl
dec
push
lods
inc
sub
mov
or
popf
push
mov
sub
push
mov
adc
aam
mov
sbb
out
inc
loop
or
and
add
cmp
push
pop
or
rolb
adc
and
or
mov
mov
mov
push
add
xlat
mov
mov
test
inc
or
sbb
shll
or
pop
leave
mov
xchg
cmpsb
sbb
and
nop
out
sbb
add
test
adc
push
les
adc
inc
or
or
test
and
imul
adc
cmp
sub
xor
mov
cmp
cmp
adc
push
arpl
in
mov
mov
mov
cwtl
cs
mov
jl
xor
shlb
push
out
dec
sub
pop
sub
lahf
sarl
mov
ljmp
pop
subb
stc
or
lcall
adc
scas
push
arpl
cmp
dec
rclb
notl
scas
test
jecxz
mov
sub
xor
inc
test
inc
add
pusha
mov
ss
aaa
adc
push
dec
dec
mov
in
xchg
dec
dec
dec
xchg
gs
sub
movsl
and
popa
sub
inc
push
and
xchg
push
repnz
cli
adc
fmuls
or
mov
mov
jns
dec
arpl
lods
scas
xor
gs
aaa
mov
into
fldcw
or
cmp
dec
xrelease
pusha
jg
xchg
mov
fwait
jno
test
or
jne
aad
inc
sahf
add
mov
or
xor
std
cld
jno
imul
int
icebp
pop
dec
and
cs
dec
stos
repnz
pop
ljmp
addr16
jmp
or
add
mov
leave
sub
inc
lcall
or
xor
pusha
or
push
and
and
mov
and
imul
push
add
add
nop
aaa
iret
es
mov
das
nop
sbb
aam
std
dec
aas
dec
sbbb
js
mov
cmp
push
mov
pop
aaa
mov
nop
in
xchg
addb
add
stos
pop
jecxz
bnd
sub
add
jmp
dec
sbb
pop
call
or
sub
mov
les
mov
shrl
fimuls
stc
mov
push
jbe
lods
adc
cmp
inc
inc
frstor
test
mov
ljmp
add
test
and
xor
cmp
add
lcall
push
add
sub
in
sbbb
iret
cwtl
xor
pop
mov
out
lcall
daa
and
inc
mov
in
xchg
inc
or
adc
xor
test
dec
cmpl
adc
pop
rorb
push
dec
dec
out
cmp
jno
sub
leave
arpl
enter
je
or
push
call
aaa
test
sbb
and
inc
lret
sub
pushf
jl
popa
jo
les
inc
mov
mov
cs
aas
cwtl
daa
fwait
xor
add
pop
adc
mov
pop
xor
push
xor
push
jp
dec
mov
fldenv
or
inc
and
pop
push
sbb
push
imul
and
dec
mov
add
push
repz
loop
jmp
mov
sub
cmp
cmpb
lea
ss
lretw
inc
mov
pop
mov
outsl
mov
adc
cmp
push
addb
add
mov
sub
inc
test
addr16
and
in
push
jmp
xchg
int3
inc
pop
nop
test
and
pop
add
add
xchg
mov
or
loope
inc
std
pop
mov
push
xor
inc
test
aaa
mov
lret
dec
fsubrl
xchg
mov
sub
icebp
std
sbb
and
jmp
inc
jmp
stos
add
leave
add
pop
jb
test
cmp
outsb
sbbb
test
and
scas
sbb
bound
adc
rcll
out
xchg
adc
pusha
sbb
xchg
push
cmp
add
addr16
sbb
pop
pop
lods
pop
shlb
das
loope
or
and
mov
nop
mov
fistpl
test
push
adc
lods
pop
mov
inc
insb
dec
cs
push
sbb
mov
or
add
and
add
sub
bound
stc
cmp
test
inc
gs
mov
ljmp
mov
sbb
cmp
inc
dec
aam
sarl
add
inc
push
dec
mov
sbb
push
mov
inc
lea
in
inc
les
push
popf
sbb
pop
jecxz
push
sbb
cwtl
test
iret
and
adc
scas
sbb
inc
std
add
out
leave
sarl
test
orb
dec
test
sbb
xchg
leave
mov
das
xchg
loopne
mov
fsts
jmp
dec
dec
sti
popa
test
ljmp
xchg
lea
or
xor
mov
sbb
fsubrs
inc
mov
or
popa
jmp
fnsave
sbb
mov
fnstenv
inc
dec
mov
and
pop
les
lret
bound
add
scas
pop
ja
mov
std
cmpsb
inc
sbb
pop
xorl
cs
mov
ja
inc
or
repnz
pop
lret
lret
pusha
push
and
pop
nop
and
fnstsw
xchg
xchg
hlt
test
cmc
inc
push
push
pop
adc
test
adc
inc
les
je
popf
pop
xchg
or
sub
popa
inc
sbb
inc
imul
mov
out
jno
pop
ret
xchg
and
mov
and
popf
cwtl
loop
pop
bswap
pop
adc
sbb
cmpl
sub
xchg
jae
add
dec
add
inc
inc
aas
test
pusha
scas
cltd
push
test
mov
push
dec
xor
fcom
adc
jg
mov
inc
inc
pop
inc
sahf
xlat
jg
arpl
je
push
push
das
test
adc
sub
movsl
pop
mov
rcrb
movl
add
sbb
cltd
insb
push
enter
inc
add
mov
rcl
add
xchg
xorb
jns
int3
and
mov
imul
push
loope
add
roll
fnstenv
sub
push
inc
mov
sub
or
test
cmp
add
int
inc
insb
mov
pop
je
ret
push
mov
adc
mov
cwtl
lcall
movsl
mov
inc
pop
xor
dec
and
or
push
add
int3
mov
iret
fdivp
std
sahf
andb
mov
pushf
jno
lar
cmpsl
int
test
mov
cmp
inc
xchg
mov
jle
and
mov
dec
pusha
shlb
push
aad
aam
scas
in
cwtl
inc
dec
dec
adc
dec
inc
adc
sbb
inc
std
rorb
out
jne
rorb
int
addb
xor
ficoml
pop
and
xlat
adc
rcl
xorl
inc
mov
xor
test
pop
adc
cmp
sbb
dec
inc
cvtps2pi
mov
rcrl
push
pop
adc
mov
jo
jne
pop
mov
add
test
xchg
mov
push
cwtl
ljmp
jo
add
inc
and
movsl
dec
xchg
enter
movsl
idivb
jg
inc
pop
pop
or
dec
or
les
cmp
sub
mov
push
add
mov
lcall
mov
pop
mov
adc
test
aam
sbb
mov
pusha
push
sub
jo
stc
sbb
and
and
adc
inc
or
loope
mov
push
inc
mov
push
shrb
mov
add
je
test
dec
inc
loopne
push
jecxz
add
jmp
dec
sbb
cli
xor
fnstenv
sbb
pusha
mov
in
inc
jp
rcrb
and
inc
mov
adc
rcrl
mov
cwtl
adc
fcoml
jmp
in
sbb
jne
jno
sub
adc
lcall
sub
adc
xor
inc
lcall
aam
push
cs
int3
xchg
xor
sbb
pop
int
inc
stos
test
and
adc
mov
jb
stos
mov
or
cmpsb
push
mov
aam
popf
popf
loopne
or
add
and
stc
imul
xchg
popf
dec
cmpb
inc
or
popa
mov
loope
jns
mov
stos
inc
arpl
daa
add
addl
movsb
test
ret
js
iret
imul
jno
test
mov
ljmp
add
push
imul
inc
aad
hlt
lret
inc
dec
sub
andb
push
jl
inc
pop
repnz
jmp
jecxz
cltd
xchg
es
push
dec
test
adc
lds
mov
add
sbb
in
inc
or
cmp
push
add
jmp
cmp
aad
std
stc
push
enter
outsl
and
mov
and
inc
popf
std
fadds
add
jns
jno
sbb
sub
sbb
or
pop
xor
es
or
pushf
xchg
mov
scas
push
fisubl
mov
mov
movsb
inc
enter
sbb
jae
out
sub
daa
imul
jae
fst
add
test
and
aam
or
push
loopne
arpl
orb
fwait
into
xor
shl
inc
xchg
push
insb
adc
dec
inc
es
aad
push
push
push
add
stos
fidivrl
ret
mov
pop
aam
repnz
mov
call
imul
add
adc
xchg
pop
jg
in
and
imul
or
call
in
mov
icebp
inc
xor
dec
add
call
or
scas
push
mov
xor
andl
popf
out
rcll
loope
cltd
std
and
push
sub
and
call
mov
test
jg
sbbb
push
mov
mov
mov
mov
or
xor
or
cmpsb
pop
xor
imul
xchg
add
or
testl
dec
pop
pop
inc
dec
test
inc
imul
sub
sub
mov
and
push
and
and
add
and
push
adc
cmc
cld
mov
std
pop
das
loopne
lahf
lahf
mov
pop
packssdw
outsl
xchg
add
or
das
mov
stc
jne
xchg
jg
lret
je
jo
movsb
cmp
fwait
push
loop
lret
mulb
fs
jl
ljmp
add
cmp
adc
xchg
and
cmp
test
add
sbbb
dec
pop
mov
lods
test
ret
pop
mov
arpl
mov
push
pop
cmpsb
aas
in
inc
aaa
mov
inc
and
rorb
inc
xor
sbb
in
xorl
dec
xor
dec
pop
test
sub
aas
add
test
dec
lcall
mov
cmp
add
jg
push
test
push
addb
shlb
outsl
lahf
sub
jmp
mov
fwait
mov
inc
xor
push
rolb
jmp
cmp
sbbb
push
test
stos
jecxz
cmp
test
int
sub
dec
or
xlat
push
xor
jp
popa
cmpsl
mov
xchg
cmpsl
mov
scas
jns
xchg
insb
arpl
mov
shr
pop
pop
ss
lcall
stc
jp
xor
push
bound
add
mov
or
mov
sbb
xlat
data16
in
push
xlat
mov
cli
xchg
lock
mov
or
std
out
sbb
inc
ds
push
lcall
jno
xlat
push
dec
dec
pop
jp
mov
dec
bound
out
rolb
rcr
add
sub
adc
mov
lods
sbb
in
xlat
andl
mov
int3
adc
push
out
ja
pop
xchg
xor
sub
add
xchg
mov
add
pop
lret
dec
sbb
mull
or
jns
sbb
iret
cmp
cmp
push
je
mov
inc
xchg
add
push
imul
test
addl
stos
sub
or
add
mov
data16
mov
dec
ret
and
or
jnp
dec
arpl
xor
bound
dec
pop
sub
push
dec
mov
popf
test
repnz
fidivrs
cmp
loop
lahf
push
jns
mov
or
pop
cmpb
popa
pop
test
jnp
add
jecxz
mov
xlat
loop
xor
or
aad
sub
or
iret
fstl
xchg
iret
mov
xor
lret
icebp
and
test
sub
sbb
xor
shrb
xorl
das
and
mov
xchg
inc
sbb
push
popa
pusha
inc
test
mov
add
outsb
loop
loope
sub
not
pop
or
add
xchg
mov
sbb
sbb
push
jo
mov
les
pop
inc
and
xor
cmp
ret
push
fdivrl
jo
aam
dec
hlt
sti
rorl
inc
movsb
unpcklps
add
dec
test
into
and
adc
and
sub
cmp
cmpsb
add
adc
adc
gs
test
fstpt
cltd
add
pop
shrl
add
push
popa
xchg
es
cmp
push
add
and
jo
leave
cli
and
out
cmp
mov
dec
addr16
xchg
test
xor
aad
mov
xlat
imul
les
rcl
pop
negl
les
mov
adc
xchg
cmp
and
sub
cmp
adc
les
mov
pop
push
fldcw
add
adc
push
popa
in
pop
popa
mov
pop
int
mov
test
xor
mov
pop
xchg
mov
shlb
dec
fs
bound
sub
and
jo
and
inc
adc
sub
iret
popf
fistps
xor
push
dec
add
add
xor
xchg
mov
push
inc
pushf
xchg
cmc
dec
push
adc
sub
mov
or
out
ja
dec
dec
and
add
aad
cmp
sti
dec
inc
andl
es
inc
and
mov
test
and
lret
sub
and
adc
or
and
pop
xor
call
mov
arpl
xor
repnz
movsb
popf
lahf
cmp
push
adc
gs
adc
adc
mov
adc
cmpsl
lds
gs
inc
add
jp
das
pop
fiadds
out
das
jno
insb
mov
push
push
push
bound
out
or
lcall
repz
dec
dec
loope
lods
cmp
incl
lods
lds
inc
sub
rclb
xchg
push
pop
test
dec
dec
ss
sub
inc
jne
pushf
add
pop
inc
or
rcl
roll
jns
push
adc
cmpsb
in
sbb
xor
lea
lea
movsl
adcb
dec
stos
rorb
mov
std
lds
lods
test
mov
add
mov
sbbl
pop
cmp
cmc
sbb
dec
add
mov
scas
push
add
adc
ret
shlb
sbb
jp
mov
data16
inc
xor
inc
clc
test
adc
cmp
xchg
mov
lea
mov
or
and
push
mov
add
pop
imul
loopne
jmp
xchg
mov
insb
mov
or
xchg
out
add
adc
mov
add
cmp
sub
insb
dec
push
mov
jecxz
aas
aad
cmp
adc
imul
inc
push
and
nop
insb
dec
add
push
outsl
xor
cmp
jno
pop
ja
dec
dec
outsl
add
movsl
je
add
rolb
jns
dec
add
pop
je
adc
test
or
add
and
pop
jo
jnp
mov
shrl
arpl
sbb
mov
aam
mov
xor
pop
das
imul
mov
dec
mov
out
sti
pavgw
jl
sbb
sbb
fsubl
adcl
es
cmp
jns
pusha
push
sub
add
ljmp
addl
cmp
lcall
xlat
add
fwait
ret
dec
xor
xor
xchg
rcll
stos
lcall
in
add
sub
add
sbb
stc
dec
xor
rolb
shll
rcrb
insl
xchg
into
jno
aad
cli
pop
mov
add
mov
sbb
cld
leave
leave
scas
mov
fcoms
ffreep
adc
lods
push
push
in
pop
lods
dec
jecxz
xchg
xchg
mov
sub
mov
jns
loop
xor
mov
shrl
andl
mov
xchg
cltd
and
xchg
mov
xor
jl
rorb
inc
xor
sbbb
stc
sub
rol
push
mov
inc
aas
in
mov
les
jne
dec
mov
mov
jb
dec
outsb
xchg
xor
add
ljmp
jge
xchg
xor
cmp
hlt
push
stc
sub
add
mov
xor
cld
xor
out
mov
mov
add
push
cmp
ja
sub
daa
xchg
xchg
or
inc
cmp
cwtl
and
cld
in
lods
inc
stos
jl
lahf
les
add
mov
sbb
test
hlt
sbbb
mov
inc
adc
adc
test
or
jnp
test
sbb
fadd
lods
cmp
imul
and
repz
xor
add
xor
sbb
das
push
mov
loop
bound
add
lea
movsb
cwtl
rcrb
enter
imul
push
ss
andl
shrl
add
adc
push
enter
jo
inc
out
sti
add
shll
xor
or
int
and
lods
and
inc
loope
dec
lcall
inc
add
add
std
mov
xchg
test
pop
adc
orb
out
mov
adc
dec
and
mov
addr16
dec
mov
shll
push
rorl
and
sub
push
sub
push
imul
mov
lds
es
pop
out
incb
inc
cmp
sbbl
mov
jb
push
xchg
cs
sub
inc
cmpsb
add
jno
push
adc
arpl
or
cmp
push
jb
lods
popf
shll
aas
jno
scas
push
and
xchg
cltd
push
mov
mov
or
adc
shll
imul
cmpsb
es
sahf
sbb
shlb
xchg
out
cmp
cmp
xchg
syscall
pusha
stos
jge
xchg
jno
xor
aas
popa
push
mov
je
test
je
cltd
jno
call
xor
cmc
inc
fdivrl
xchg
ss
add
xchg
mov
sbb
cmp
mov
mov
int3
xlat
xchg
and
out
insl
pop
adc
leave
ljmp
pop
loopne
rolb
gs
aam
lods
xlat
out
sub
lea
xchg
mov
push
lods
adc
or
scas
and
hlt
rorb
inc
popf
mov
mov
add
rolb
test
sub
cmp
test
stos
sar
rolb
fidivs
push
mov
sbb
mov
mov
pop
sub
push
jle
test
and
sti
add
pop
lcall
addl
ss
adc
inc
mov
test
pop
xor
out
lea
cmp
inc
mov
pop
mov
add
push
push
sbb
dec
mov
cmpsb
push
and
outsl
mov
repnz
jmp
test
sub
adc
imul
xchg
aam
pop
xor
add
lea
subb
add
add
cwtl
dec
movsb
push
or
cmp
or
imul
popf
push
cmpsb
inc
arpl
incb
mov
xorb
push
dec
lcall
dec
sbb
xchg
inc
mov
call
push
xchg
dec
adc
lea
push
inc
add
jnp
movsl
das
les
scas
mov
and
xchg
leave
jmp
shll
fimull
adc
rolb
xchg
mov
push
or
push
test
movsl
and
and
gs
inc
repnz
out
pop
inc
adc
sysexit
sub
cmp
stos
lods
test
dec
add
ja
stos
mov
loopne
inc
mov
and
mov
movsb
cmpsb
loopne
pop
mov
movsb
mov
in
xor
xchg
mov
sub
insl
adc
mov
pop
adc
nop
pop
enter
pop
iret
mov
sarl
rclb
push
add
sahf
pop
loope
push
aaa
xor
mov
add
adcl
mov
aad
aad
pushf
imul
add
or
andb
xlat
cmp
inc
jecxz
lret
sbb
fildll
adc
add
ret
sub
cmp
cli
lea
or
mov
push
xor
rcll
push
mov
sbb
pop
cmc
lahf
sar
in
add
dec
shrb
dec
sub
or
or
ffree
call
pop
jns
sub
or
and
lret
mov
adc
cwtl
lods
out
adc
sub
push
ret
xor
adc
sbbb
xchg
bound
aad
add
or
pop
jbe
sub
jmp
shll
rcll
or
lds
mov
adcb
pusha
dec
xlat
mov
imul
scas
or
sbb
mov
lret
xchg
push
aas
push
in
add
into
push
dec
pop
aas
imul
push
lret
rclb
jecxz
orb
adc
fsubrp
cmp
inc
and
add
jno
push
inc
into
inc
in
mov
cmpsb
and
imul
xchg
cwtl
jo
or
pop
cmp
inc
mov
shlb
push
aaa
test
jmp
push
or
pusha
xchg
test
mov
lods
add
orl
xor
leave
xchg
sub
pop
popf
cmp
inc
test
cmpsl
out
out
lds
rcrb
jae
lahf
pop
fisubs
dec
inc
sbb
imul
mov
and
cmpsb
push
and
dec
fstpl
adc
jno
mov
cmp
dec
mov
popa
es
xor
push
rcrb
adcb
lea
enter
repz
je
add
xchg
push
inc
pop
jo
xchg
push
dec
push
roll
dec
xchg
dec
imul
lcall
cmp
add
and
test
mov
sahf
push
into
or
outsl
or
inc
call
or
cmp
sub
sub
nop
in
cs
xchg
pop
in
jns
or
daa
idivb
sub
inc
adc
inc
andl
pop
push
pop
or
mov
inc
push
xlat
pop
push
leave
dec
subl
or
or
lcall
adc
jo
leave
pop
or
mov
aaa
cmp
scas
mov
sti
xor
addb
pop
mov
cmp
xchg
xor
dec
push
insl
inc
aaa
jo
rcl
xor
retw
pop
ja
xchg
fs
mov
push
and
mov
mov
sub
rorb
and
out
push
cmpb
clc
not
pusha
loope
xor
adc
jg
and
lahf
imull
xor
inc
movsl
test
inc
int3
test
rorl
push
cmp
mov
or
pop
movsl
sti
cmpsl
pop
push
mov
inc
daa
and
inc
das
addr16
adc
push
bound
add
add
mov
hlt
ja
cmp
movsl
or
dec
sti
push
aaa
movsb
push
loope
aaa
and
daa
dec
mov
lea
jns
les
xor
pusha
dec
dec
pop
jb
fucomi
daa
adc
pop
repz
cmp
inc
push
leave
rcpps
add
inc
push
icebp
add
lds
sub
jae
cwtl
je
int
pusha
sub
pop
xchg
movsl
pmulhuw
adc
test
cmp
inc
test
sub
mov
jae
push
mov
mov
lcall
add
mov
repnz
push
movsb
or
xchg
push
add
pop
cmp
xor
ret
movsb
mov
loopne
mov
shrl
push
push
dec
push
xor
xchg
mov
sub
cmp
jb
pop
enter
scas
ss
lretw
ret
dec
xor
xor
addr16
xchg
dec
add
fldcw
push
test
add
pop
andl
adc
cwtl
xchg
fcoms
outsb
jne
ljmp
sbb
test
cwtl
pop
call
jo
sub
push
gs
dec
rol
jl
roll
leave
xor
or
push
xchg
push
ret
pop
sbb
sbb
add
dec
stos
xchg
je
fnsave
ljmp
addr16
cmpsb
push
mov
or
adc
mov
bound
lods
fstps
js
inc
adc
enter
xchg
xor
xchg
cmp
imul
es
or
imul
pop
xor
rolb
cmp
dec
movsl
sbb
imull
bound
adc
pop
lods
pop
dec
in
or
xchg
loope
dec
pop
jo
pop
aaa
and
les
insl
or
les
rcrl
pop
dec
int
mov
jno
fisttpll
mov
movsb
dec
test
xor
add
cmc
add
addl
and
pop
dec
rol
inc
ret
pop
ret
rep
xchg
stos
jo
mov
inc
enter
dec
imul
adc
inc
cmp
or
aam
cltd
sbbb
stos
sbb
aaa
or
inc
mov
xchg
sub
lods
xchg
aas
sbb
mov
mov
mov
cs
inc
outsl
pop
out
push
es
loopne
push
inc
cmp
mov
test
movsl
test
sub
and
fcoms
push
sub
cmp
push
shlb
in
push
sbb
and
popa
dec
jne
incl
and
sub
cmc
xor
or
sbb
aaa
ss
inc
dec
shlb
inc
ret
mov
sbbb
lret
and
dec
push
imul
adc
sbb
fbstp
and
js
enter
out
lcall
sbb
push
push
aas
aas
add
scas
int
dec
cs
dec
and
sbb
subb
in
cmp
scas
mov
xchg
rclb
or
mov
in
mov
inc
test
mov
mov
jnp
push
aas
pop
pop
and
sub
add
lahf
adc
dec
das
sbb
test
repnz
xor
bound
inc
daa
inc
push
and
xchg
and
test
daa
jge
sbb
addr16
add
inc
add
pop
xchg
minps
cld
bound
movsl
xchg
mov
sub
cmp
movsb
jp
add
pop
mov
mov
xor
jl
mov
aam
jmp
dec
xchg
test
xchg
or
cmpsb
in
jns
shll
mov
sbb
loopne
sbb
fldenv
shrl
add
inc
xor
fcmovne
jo
imul
mov
cmpsl
pusha
and
push
mov
fs
xchg
inc
sub
mov
and
dec
nop
sub
inc
lahf
mov
sbb
xchg
out
subl
imul
and
add
bound
sbb
cmp
sub
pop
inc
test
xor
mov
les
orb
and
mov
cltd
jno
sub
sbb
dec
dec
xor
insl
mov
nop
daa
xor
dec
cmpb
repnz
add
add
das
add
pop
mov
adcb
mov
fstl
divl
adcb
xchg
lahf
scas
popf
add
bound
dec
shll
pop
mov
enter
lods
mov
popa
and
sub
movsl
stc
jae
mov
je
add
add
dec
adc
popf
mov
lods
leave
and
insb
bnd
jo
add
sbb
pop
flds
mov
or
and
fadd
into
lea
scas
es
adc
cmp
lcall
daa
insb
cmp
ret
test
add
mov
push
and
std
dec
fyl2xp1
popa
sbb
mov
sub
xchg
leave
inc
pusha
sub
inc
inc
outsb
nop
stos
xchg
test
dec
adc
aaa
add
pusha
loopne
xchg
xor
sub
test
insl
jns
lods
loopne
mov
sub
in
int
pop
mov
roll
lahf
add
stos
pop
push
cmpsl
mov
sbbl
je
sbb
or
pop
inc
sub
imul
add
mov
mov
orl
andl
inc
jp
push
movsl
add
pop
int
mov
sub
mov
shrl
add
repz
inc
addl
push
add
mov
add
loopne
inc
pop
adc
xchg
stos
add
dec
and
in
ss
loope
and
mulb
sub
mov
and
xor
or
mov
ret
adc
loop
ret
je
ret
adc
and
sbb
ret
mov
test
sbb
les
ja
mov
subl
sahf
leave
xrelease
dec
dec
pop
dec
in
push
inc
arpl
and
sub
dec
addr16
lock
dec
arpl
sub
sarl
ret
inc
or
sub
inc
jg
addb
rorb
pop
pop
mov
sbb
push
dec
lods
pop
xor
xor
stc
stos
daa
pop
push
movsl
cmpsl
dec
xor
aam
call
das
leave
dec
jp
scas
ret
mov
shll
ss
ficompl
insl
and
mov
cmp
sbb
or
into
jge
or
ret
fldt
cmp
lcall
pop
push
xor
add
or
or
cmp
and
aaa
outsl
pop
imul
lock
adc
pop
inc
or
movl
push
faddl
imul
pusha
stos
jae
aas
jne
mov
push
or
add
fs
adc
lds
jg
and
scas
lock
lods
or
es
mov
xchg
gs
xchg
addr16
lret
js
jmp
lods
inc
cmpsl
stos
gs
lcall
iret
mov
cmp
daa
loope
movsl
or
scas
in
movsb
rorl
push
fwait
shlb
cmp
mov
subb
popa
dec
adc
add
loop
or
fimull
and
imul
dec
and
xor
insl
and
push
cmc
test
cwtl
or
jns
push
addl
lret
xlat
cmp
inc
int3
inc
mov
stc
jl
and
mov
push
pusha
mov
cmp
add
push
xor
shlb
mov
dec
call
dec
pop
imul
and
mov
mov
adc
test
inc
dec
pop
push
ss
xchg
push
push
pop
inc
sub
inc
lds
mov
or
pop
add
insb
dec
pop
mov
inc
pop
jl
inc
ret
xchg
or
jmp
lock
pop
xchg
dec
shrl
mov
xor
inc
or
in
cs
add
inc
dec
xor
rcll
jns
mov
inc
xchg
loopne
inc
bound
sbb
lahf
mov
pop
leave
repz
jmp
jecxz
sub
pop
push
out
cmpsb
xor
cltd
sub
pop
push
mov
adc
sbb
inc
subb
mov
sbb
push
pop
pusha
or
dec
enter
sbbl
dec
adcl
push
out
testl
es
dec
lods
mov
lea
dec
jns
and
movsl
and
enter
adc
movsl
sbb
and
adc
fldt
dec
les
push
sbb
fists
inc
inc
xchg
jae
sbb
les
imul
lcall
sbbb
push
adc
push
mov
jecxz
popa
push
add
bound
test
lcall
pusha
or
fldt
xor
in
cmp
dec
xor
movsb
scas
mov
sbb
xchg
pop
and
adc
sub
push
bound
imul
cmpsl
sbb
inc
sub
mov
mov
andb
push
push
push
adc
imul
ljmp
mov
pop
dec
insb
pop
adc
mov
push
add
sahf
push
cwtl
xchg
aaa
mov
les
sbb
mov
aas
bound
dec
add
xor
sub
test
aaa
je
push
fs
insb
inc
enter
cs
cwtl
in
xor
movsb
xor
mov
adcb
add
mov
jmp
dec
push
in
push
push
sub
adc
lds
pop
in
sbb
test
dec
jne
mov
adc
cmp
xchg
jno
sub
fildl
cmp
dec
wrmsr
jne
aas
call
xor
inc
test
add
les
mov
or
mov
cli
and
shrl
jno
jge
or
fcoml
cmpsb
outsl
mov
mov
adc
push
dec
sub
or
and
inc
sar
jne
cwtl
add
push
add
shrl
lret
cmp
xchg
inc
dec
inc
cmp
inc
mov
cmp
enter
pop
pop
shrl
or
cmp
dec
mov
loope
aaa
lods
adc
push
mov
adc
or
mov
add
loop
vprotb
mov
or
sti
fisubrl
outsb
mov
pop
add
xchg
cmpxchg
xchg
push
or
inc
pop
jne
pop
and
mov
dec
pop
push
xchg
pop
dec
popa
or
adc
mov
ja,pt
daa
inc
jo
mov
push
xor
loope
pop
sbb
nop
pop
jns
push
push
popf
push
pop
dec
or
test
xchg
movsl
sbb
test
sub
repz
pop
scas
cmp
pop
cmp
and
orb
pop
repnz
ss
inc
dec
pop
cmp
test
hlt
sub
ds
fwait
pop
sbb
xor
dec
cmp
scas
or
cmp
ss
aas
xor
adc
jge
add
add
and
inc
mov
clc
sarl
stos
rclb
add
sub
adc
add
in
pop
movsb
int
add
subl
push
xor
add
imul
or
pop
add
and
push
test
pushl
mov
das
cmc
movsl
add
inc
add
add
cwtl
imul
mov
addl
fistps
push
sbb
add
mov
scas
push
dec
add
rcll
pusha
jnp
xor
or
pop
daa
les
push
pop
test
sbb
cmpsb
and
adc
out
lods
mov
add
inc
xor
lret
sbb
xchg
push
dec
inc
push
movsb
or
inc
lock
mov
xchg
xchg
mov
cmp
push
cmp
int3
gs
sbb
bound
lods
aad
test
push
stos
addl
fs
xor
stc
aad
jecxz
xorl
jp
lods
cmp
jno
andb
xchg
cmp
inc
mov
imul
dec
test
stos
je
dec
dec
jo
stos
or
iret
pop
xchg
mov
inc
pop
lcall
dec
and
adcl
push
and
lds
dec
adc
dec
sbb
int
push
mov
cmpsl
stos
nop
xchg
lret
and
lea
push
or
insb
inc
fs
add
popa
leave
and
mov
and
fcompl
jo
inc
add
dec
out
adcb
cmp
or
mov
out
xor
ffreep
loop
je
gs
leave
pop
fnstcw
xchg
xlat
dec
add
call
fisubl
or
mov
push
dec
addb
pop
mov
and
cmp
pop
inc
or
imul
fucomp
mov
sbbl
inc
test
and
aas
std
repz
or
test
es
filds
add
lea
arpl
out
inc
pcmpeqd
rclb
add
pushl
push
push
dec
cmp
mov
popa
dec
mov
mov
ss
lods
lea
mov
cmpsb
add
std
rcrl
mov
in
rorl
sti
jge
push
dec
push
inc
dec
and
adcl
rcrl
dec
push
add
in
mov
pusha
dec
push
adc
xlat
test
push
or
or
imul
sbb
popf
and
push
rolb
leave
sub
movsb
jb
jmp
sti
out
mull
nop
movsb
mov
or
notl
daa
addb
leave
xchg
subb
xor
and
gs
add
jbe
cmpsl
cwtl
les
into
and
je
ret
mov
push
xchg
cwtl
bound
xlat
pop
enter
or
jp
ds
int3
push
cwtl
sub
jg
push
inc
test
cmpsb
add
dec
xor
shrl
test
and
jg
js
adc
sub
pop
xchg
scas
frstor
pop
out
mov
push
xor
js
test
das
or
pop
adc
jg
add
add
sahf
loopne
je
inc
rorb
out
daa
lea
xor
movsb
xchg
mov
inc
xor
les
mov
add
sbb
xor
push
pop
sub
lcall
inc
fisttps
xor
outsl
movsb
into
mov
bound
shrb
mov
test
pop
je
call
pop
push
or
and
mov
pop
rorl
sub
mov
inc
add
cmp
mov
xor
ljmp
sbb
or
cwtl
xchg
pop
sub
sub
xor
cmp
inc
mov
addl
push
rol
sub
push
xchg
mov
insb
sbb
in
cltd
xorl
mov
cmp
sbb
subl
int
popf
adc
xchg
mov
mov
add
lret
xor
or
push
rcr
rorl
push
push
sbb
orb
and
movsb
mov
or
loopne
add
call
out
and
insl
mov
enter
xor
clc
adc
cmp
test
fcmovnu
mov
add
aad
lahf
sbb
sbb
jmp
pushf
subb
push
sbbl
lds
xchg
dec
dec
inc
pop
mov
enter
and
mov
add
cs
rolb
ret
cwtl
aaa
or
inc
push
pop
mov
adc
inc
test
add
stos
or
pusha
or
arpl
movsl
inc
push
adc
das
int
xor
or
movsl
roll
aad
push
xchg
cmp
push
fwait
sahf
xor
inc
jne
lahf
cmp
pop
push
mov
push
mov
mov
and
sbb
mov
xchg
and
out
aam
push
rcrl
dec
adc
push
int3
jo
inc
ljmp
inc
xchg
jno
and
movsb
push
out
xlat
adc
movsb
push
mov
subb
cmp
pop
mov
jecxz
stos
bound
push
leave
lcall
lock
or
rorb
and
mov
xchg
mov
test
dec
lea
pop
idivl
js
sbb
out
mov
dec
xor
test
les
inc
mov
jno
xor
push
push
lods
or
js
lods
ret
les
lods
push
mov
mov
push
call
pop
in
nop
or
push
mov
pusha
sbb
push
fdivrs
aaa
add
push
nop
mov
movsb
subl
cs
mov
int3
jno
push
inc
pop
adc
and
xchg
addr16
cmp
shrl
cli
ret
xchg
xor
aad
sub
push
dec
jno
add
sbb
popa
cmp
movsb
sub
sbb
and
sahf
popf
sbbl
andl
jecxz
push
xchg
push
mov
rcrb
adc
sbb
lds
push
jno
cmp
mov
imul
js
mov
inc
and
scas
aad
loope
in
or
repz
mov
pop
pop
les
xchg
push
dec
pop
inc
xor
push
cmp
jb
stc
pop
loop
sbb
push
xchg
xchg
lret
xor
inc
mov
imul
add
inc
mov
insb
sub
and
cmpsl
pop
and
shrb
pop
stos
pop
imul
pop
mov
or
add
xchg
je
jle
roll
sbb
jno
sub
push
lret
cld
xchg
or
mov
push
pop
dec
push
mov
jno
mov
push
loopne
xor
imul
fnstcw
push
dec
push
pop
mov
add
mov
xor
xor
movsb
rol
add
lcall
pop
lods
xchg
mov
push
cmp
pop
in
mov
or
out
xor
xor
ljmp
mov
in
pop
cld
dec
scas
inc
xchg
and
das
push
jns
sub
repnz
daa
addr16
xchg
cmp
add
and
inc
pushf
setno
add
push
movsb
stos
lods
aad
or
imul
xchg
orb
pop
adc
mov
xchg
xorl
sti
imul
cmp
cmp
push
popf
mov
sbb
sbbb
cmp
pop
cmpsl
xor
ret
aad
pop
adc
insl
add
cmp
push
loopne
sti
mov
jne
pop
and
mov
pushf
push
add
push
add
push
add
and
and
adcb
sub
inc
mov
xor
dec
aaa
aam
repz
sub
add
lods
or
mov
jmp
cmpsl
mov
leave
xchg
mov
mov
std
mov
adc
sub
add
popa
dec
sbb
lea
push
xor
inc
adc
adc
dec
sbbb
movsb
daa
dec
push
pop
cmp
jns
and
jo
jecxz
inc
inc
cmp
dec
and
cmc
leave
mov
notl
jo
cmp
or
cmp
adc
mov
xorl
adc
push
das
adc
xchg
imul
inc
dec
push
cmpsl
cmp
leave
jno
xchg
mov
or
clc
pop
push
inc
jo
dec
cld
inc
push
orl
mov
xor
repz
paddw
push
enter
and
rorl
pop
mov
inc
cmp
xchg
dec
das
cmp
js
sub
out
adc
add
or
ss
dec
enter
sti
dec
dec
mov
insb
push
scas
arpl
xlat
inc
enter
push
mov
pop
rorb
std
sub
and
sub
rcrb
adc
pop
enter
pop
lcall
repz
mov
or
pop
mov
popf
jg
shlb
jns
loopne
popa
test
push
insl
shll
or
imul
stos
xlat
rclb
ret
xchg
ds
popf
popf
dec
orl
inc
inc
mov
add
inc
loope
jnp
popa
inc
add
jmp
add
rcl
adc
icebp
mov
xchg
add
rclb
lea
xchg
jo
stos
sub
dec
cmpsl
inc
int
xchg
adc
mov
mov
add
xorb
xor
add
add
imul
and
jp
xorb
inc
xchg
and
push
scas
inc
and
xor
and
pop
xor
push
dec
loope
dec
sub
xchg
sbb
add
sbb
pop
sub
and
popa
cmpb
dec
push
mov
inc
push
lods
int
adc
cmp
and
icebp
shrb
sbb
and
std
jns
andb
bound
inc
sub
rcrb
sub
aaa
sbb
push
jp
loopne
xor
xchg
cmpsl
sub
insb
push
loopne
or
lods
cmpsb
and
orl
scas
sbbl
or
adc
pop
int
les
xor
dec
mov
or
jecxz
sub
add
sbb
addr16
in
aam
iret
jns
or
out
loopne
sub
cmpsl
insb
popa
sbb
rcl
adc
adc
or
pop
rcrl
xor
stos
repz
inc
mov
push
lahf
stc
test
je
int
push
and
inc
imul
xchg
sbb
cmp
xor
and
sub
loopne
push
test
addb
pop
push
movsl
jb
in
sbb
mov
sbb
cmp
or
push
sbb
loop
cmc
arpl
stc
mov
xchg
fsubl
inc
sbb
adc
in
test
or
xchg
pop
push
pusha
pop
test
push
shlb
sbb
pop
enter
test
int3
iret
mov
jo
push
sub
mov
in
pop
mov
sbb
call
sbb
jge
jp
dec
inc
xchg
andl
inc
push
ret
test
mov
rcrl
adc
push
push
mov
jns
dec
stc
or
push
mov
xor
and
adc
add
xchg
popf
pushf
and
or
dec
dec
jg
subb
inc
sahf
add
aad
daa
push
dec
xor
rorb
jmp
or
add
jle
xchg
ljmp
hlt
je
fcomip
test
push
push
loopne
repz
cmp
jmp
jb
or
lcall
dec
daa
inc
cwtl
xor
imul
push
adc
sbb
lods
sbb
adc
insl
lret
sbb
outsl
popa
push
dec
jne
mov
pop
mov
xchg
and
loop
stc
aas
push
aad
inc
fnsave
lahf
pop
jmp
lds
push
lods
adc
push
inc
add
mov
inc
mov
push
aam
mov
subb
test
popf
cmp
shrb
lods
repz
ds
xchg
aaa
sub
xchg
cs
mov
outsb
sbb
enter
fnstsw
mulb
movl
sub
push
sbb
pop
test
add
popl
pop
dec
push
sbb
popa
fsubs
adc
out
sbb
es
and
lds
add
inc
enter
push
inc
cmpsb
divl
test
pop
xchg
outsl
mov
mov
test
add
inc
mov
jmp
rclb
jmp
out
pusha
pop
aaa
call
add
or
rorl
mov
cmp
sub
or
sbb
lds
jo
adc
test
xchg
and
dec
inc
stos
or
jne
je
stos
cmp
mov
notb
sub
pop
jle
xchg
cmpsl
cmp
or
mov
insb
cmp
mov
imul
outsl
xchg
out
aam
outsb
add
lret
lret
sbb
xor
mov
gs
stos
add
sbb
adcl
mov
bound
insl
xchg
mov
pop
push
dec
or
xor
xchg
xor
daa
inc
lea
fldcw
inc
lods
mov
jne
or
test
icebp
mov
adc
cltd
jecxz
lea
push
rorl
lds
daa
arpl
popa
push
mov
cmpsb
cs
push
jl
rolb
or
in
inc
dec
cwtl
loopne
arpl
fwait
sti
xor
lea
push
ret
cmpsb
loop
xor
xchg
adc
push
and
int3
pop
inc
add
or
dec
add
push
daa
inc
pop
sub
or
arpl
aam
inc
pop
and
cmp
adc
push
or
aaa
sahf
or
cmp
test
lock
xchg
cmp
pop
lds
imul
jno
js
pop
sub
or
and
inc
xchg
and
cmpsb
sub
xor
sbb
jno
mov
xor
add
pop
cmp
push
jge
adc
add
jmp
adc
sub
lret
pop
pop
dec
lahf
or
jo
ret
lock
push
mov
inc
out
loope
cli
sub
es
mov
mov
xor
imul
test
dec
enter
shlb
jecxz
and
dec
or
test
subb
popf
ljmp
arpl
lahf
or
jne
or
cwtl
roll
push
test
xor
inc
mov
jo
inc
add
lret
rolb
les
jmp
inc
sbb
mov
addl
cmp
jne,pn
aad
add
shll
inc
aas
or
shlb
xor
add
cmp
inc
or
dec
daa
inc
test
jns
push
aam
inc
pushf
addl
aaa
rcrl
push
leave
repnz
dec
outsl
sbb
jo
addb
movsb
xchg
imul
insl
rcll
pavgb
cmc
clc
pusha
aam
sbb
xor
pop
add
adc
in
repz
mov
adc
and
fucomp
mov
inc
pop
push
pop
mov
adc
xchg
inc
or
mov
add
cmp
or
adc
rolb
imul
sub
sbb
sahf
inc
mov
inc
pushf
stc
sub
add
jl
mov
test
xchg
push
sbb
insl
iret
add
ljmp
scas
add
adc
add
xchg
mov
xor
lcall
mov
add
mov
or
shl
adc
mov
or
and
inc
add
outsl
pop
mov
lret
mov
shlb
xchg
adc
push
push
or
popa
or
aas
inc
add
inc
and
sbb
sub
jl
xor
push
insl
lea
popl
cmpl
adc
xlat
dec
xchg
mov
xor
mov
cmc
push
or
sub
ret
xlat
dec
das
aad
adcb
push
xlat
xor
test
shlb
push
les
out
aaa
shll
xchg
pop
dec
pop
aaa
mov
icebp
out
jns
push
dec
pop
out
decl
mov
scas
pop
pop
dec
das
adc
inc
movsb
imul
les
or
jnp
dec
outsl
or
jo
es
add
dec
xor
push
sub
inc
das
jne
sahf
in
adc
shrb
and
inc
inc
push
out
jno
pop
push
sar
dec
in
mov
adc
dec
pushf
lods
xchg
insb
pop
mov
ljmp
es
cmpsl
decl
iret
push
and
roll
mov
add
xor
subl
adc
push
mov
mov
sbbb
cwtl
inc
dec
adc
or
add
xor
rolb
adc
dec
hlt
test
and
mov
loopne
mov
sbb
leave
cmp
scas
fmul
cwtl
and
lods
das
stos
adc
pop
xchg
adc
lret
sbb
out
mov
mov
dec
and
sub
xchg
outsl
push
pop
lahf
add
lret
dec
sbb
or
data16
add
cmpsb
testl
inc
roll
jb
sbb
pop
mov
clc
or
mov
add
add
scas
mov
sti
mov
xchg
or
nop
jno
lods
pop
push
int
cmpb
scas
sbbl
push
xchg
add
jg
sub
add
sbb
mov
scas
dec
and
sub
adc
push
add
push
push
or
jno
mov
adc
xor
pushf
jo
sbb
and
and
sarl
mov
sbbb
add
jb
loop
xchg
fs
add
push
jb
lcall
andl
icebp
jl
dec
adc
cwtl
movsb
rcll
imul
ret
push
inc
pop
or
jge
sbb
leave
add
dec
xchg
lcall
les
push
add
sbb
push
das
push
mov
arpl
inc
xchg
add
push
ret
sub
push
outsb
pop
lcall
dec
jmp
stc
gs
pop
and
and
pop
popa
gs
je
mov
xchg
das
imul
adc
ret
add
xchg
jp
insl
add
fsubrs
divl
out
mov
adc
rorl
add
ss
pop
test
or
popf
inc
ret
cli
das
negl
fmul
inc
mov
test
insb
popf
iret
add
inc
jb
clc
push
and
scas
push
rorb
mov
lock
ficoml
fs
xor
mov
adc
lods
lcall
repz
add
xchg
dec
and
jg
hlt
mov
ja
je
sbb
cmp
ret
xor
pop
push
pop
add
fstl
push
stc
rorl
lcall
or
icebp
jp
pop
or
rclb
in
mov
xor
icebp
aam
jmp
imul
imul
fcoml
mov
xchg
es
inc
mov
test
test
add
mov
push
push
mov
icebp
sbb
jo
imul
insb
loope
test
pop
jp
xlat
xchg
stos
ljmp
xor
mov
pop
movsb
mov
in
or
aad
cmp
adc
es
cmp
xor
pusha
add
mov
lds
pop
add
int
fsub
das
dec
push
fistpll
mov
lods
mov
sbb
sar
sub
mov
lods
roll
mov
js
icebp
mov
loopne
adc
in
push
inc
push
dec
sub
cli
adc
add
int3
or
lock
ret
test
aam
sbb
cmp
fs
xchg
pop
int
shl
jb
sbb
dec
push
mov
lret
xlat
push
mov
jl
test
gs
int3
jecxz
and
or
cwtl
mov
jno
fs
lahf
lds
adc
push
mov
adc
jne
out
scas
cwtl
sub
jne
add
popf
in
fs
xor
movb
pop
push
mov
gs
inc
cmpl
add
or
xor
cmp
sub
mov
xlat
addr16
adc
push
inc
inc
sbb
jge
mov
xchg
pop
les
test
aad
adc
imul
jnp
xlat
xor
stc
icebp
add
pop
test
cwtl
inc
pop
or
loopne
mov
adc
jns
aad
dec
adc
es
shll
add
push
scas
add
inc
inc
std
int
nop
outsl
dec
cld
cld
xchg
cmp
xchg
and
cmc
andl
cmpsl
cltd
test
add
pusha
mov
xor
int3
jp
jb
fwait
lea
cmpb
stos
daa
inc
addb
add
jb
lahf
cmc
jb,pn
mov
pop
mov
sbb
or
and
push
je
in
insl
and
shr
test
rcrl
push
icebp
out
add
jns
out
mov
and
imul
add
mov
cmpsl
mov
add
dec
repnz
hlt
or
xchg
mov
pop
inc
rcrl
je
sbb
adc
add
cmp
test
mov
sub
lods
ds
popa
jne
mov
pop
test
rorl
pop
sub
add
les
shlb
mov
xor
addl
and
icebp
sub
add
aaa
outsl
xor
mov
stos
ret
xor
cmpsl
clc
stos
jo
push
sub
ljmp
push
xor
insb
sbb
lea
sbb
and
jecxz
cwtl
insl
imul
and
xchg
jns
andb
sub
rorb
push
in
sbb
sub
in
xchg
shll
jb
adc
sub
inc
je
sub
rolb
ret
and
adc
pop
xor
dec
add
mov
sub
bound
popa
adc
leave
hlt
adc
fistps
shlb
cmp
mov
lret
jo
xor
stos
adc
nop
movl
push
orb
push
int3
adc
out
dec
adc
sbb
pusha
push
mov
xor
sub
push
pop
lret
add
jae
and
cmp
aaa
jb
pop
fwait
stos
fwait
in
pause
hlt
mov
sahf
xchg
push
push
cmpsl
or
xor
add
or
xchg
cmp
gs
push
xchg
test
push
add
add
pop
cmp
add
sbb
imul
push
pop
test
dec
jno
cmp
dec
outsl
lods
movsl
xor
add
mov
push
test
stos
inc
adc
and
mov
or
push
sbb
ret
insl
popa
mov
add
jno
adc
test
cs
dec
adc
in
movsb
repnz
xchg
add
push
inc
inc
and
repz
add
pushf
push
jae
dec
lret
pusha
aam
or
cltd
cmp
cwtl
push
sub
mov
ret
cwtl
dec
mov
cmp
sbb
inc
add
jno
inc
ret
movsb
pop
xchg
jge
pop
shll
mov
or
dec
cmp
iret
mov
inc
pushf
or
and
fistl
adc
or
test
jno
inc
verw
push
xor
dec
dec
adc
inc
hlt
jmp
cmp
int
pop
adc
jmp
pop
xchg
xchg
xchg
movsl
pop
add
pop
inc
cltd
aad
pop
xor
xor
adc
lock
adc
push
std
mov
adc
mov
jmp
xor
movsb
sarb
ret
in
and
test
mov
adc
dec
xor
adc
popf
inc
mov
shrb
bound
and
bound
js
ret
or
sbb
mov
mov
std
xchg
xor
and
pop
push
and
cmpsb
mov
test
loope,pn
mov
push
xchg
sbb
inc
dec
in
sub
push
pop
data16
inc
xchg
dec
xchg
push
adc
ret
lods
adc
push
push
xchg
jne
fwait
mov
in
pusha
sti
lods
inc
and
or
add
xor
or
fnsave
or
add
add
addl
xchg
cmpsb
sbb
sahf
ret
les
pop
pop
xchg
mov
sarl
nop
dec
mov
pop
xor
pop
and
inc
mov
add
arpl
lods
cmpsb
outsb
bound
jns
mov
les
aad
int3
or
inc
adc
lods
and
inc
ror
lods
push
jne
aam
dec
fwait
jge
or
rorl
or
push
inc
mov
mov
outsl
add
movsb
in
fldenv
xor
ja
ffree
and
lods
test
subb
stos
adc
or
sbb
add
push
xor
test
test
in
nop
push
xchg
in
test
inc
or
rcrb
adc
mov
pop
clc
push
add
ret
add
jmp
xor
xchg
xlat
nop
push
jecxz
xchg
sbb
add
pop
sbb
xchg
in
cmpsb
adc
mov
add
sub
mov
inc
xor
loopne
jne
xor
pop
add
push
mov
or
sbb
popf
inc
je
out
jbe
cwtl
push
bound
imul
aaa
add
mov
scas
sub
aaa
or
push
rorl
sub
fisttpl
jecxz
add
or
les
cmpsl
push
adc
stos
fwait
andb
das
mov
mov
inc
movsl
loopne
dec
adc
inc
movsl
adc
cmp
xchg
add
bound
lods
subl
popa
cmp
jmp
add
push
fistps
dec
jne
movsl
dec
mov
les
and
daa
in
lds
mov
or
inc
add
jge
xor
pop
sub
fstl
adcl
mov
and
int
cltd
into
or
fstl
jns
sub
inc
stos
outsb
jecxz
imul
xchg
push
and
xor
inc
cmp
cmpl
cmp
test
inc
adc
rcl
xor
fsqrt
dec
cwtl
mov
and
les
adc
loopne
je
pusha
xchg
and
push
jb
xchg
scas
xor
or
cs
inc
dec
dec
test
jo
movsl
or
push
test
lahf
cli
adc
fs
arpl
out
mov
sbb
nop
pop
inc
cmp
adc
push
orl
or
lahf
xchg
sbb
mov
dec
add
insb
pop
test
push
xor
jne
mov
sbb
dec
mov
mov
sbbb
les
dec
push
dec
bound
scas
mov
add
dec
pop
adc
adc
add
mov
sahf
ja
addl
xor
pushf
add
push
adcb
add
push
cwtl
lahf
mov
lahf
sbb
inc
rorl
mov
push
divl
xchg
insb
pop
inc
push
sahf
jmp
es
je
adc
lret
sbb
pop
jge
repnz
fwait
stos
inc
cmp
ljmp
push
rolb
xor
mov
adc
cmpsb
roll
or
out
rcr
imul
add
lea
inc
sub
roll
fnstenv
loope
and
fs
add
daa
cmpsb
xchg
mov
pop
and
std
mov
repz
jns
dec
loopne
ret
push
outsl
orl
stos
cltd
pop
les
mov
movsl
cmpsb
mov
shll
and
int
aam
cwtl
stos
roll
mov
lcall
push
xor
push
outsl
sbb
sub
mov
mov
cmc
add
sbb
add
dec
mov
rcr
xor
inc
or
pusha
dec
rolb
frstor
pop
popa
in
add
imul
inc
push
test
dec
adc
sub
aad
popf
mov
adc
xlat
push
or
dec
movsl
loop
dec
loope
into
xchg
push
push
sahf
lret
pop
adc
pop
movsb
add
or
pusha
dec
imul
sub
lods
add
outsl
dec
and
sub
xorl
cmp
subb
cwtl
cld
sbb
mov
lret
adc
mov
inc
pop
lock
jmp
add
adc
pusha
push
dec
dec
popf
xor
pop
dec
clc
das
cld
lea
xchg
loopne,pn
inc
in
adc
rclb
inc
cmp
mov
fnsave
xlat
jo
pop
dec
inc
mov
cltd
mov
mov
xchg
sub
dec
test
test
xor
mov
movsl
icebp
add
test
cmpl
ljmp
scas
and
mov
dec
rol
sbbb
lds
pop
mov
cltd
dec
adc
in
jmp
push
imul
push
add
stos
jae
add
imul
inc
sbb
inc
sub
xchg
pop
mov
rcrl
push
and
pop
mov
jecxz
inc
aas
xor
cmpl
sbb
ja
inc
push
jns
jecxz
sbb
push
aas
scas
xchg
sub
pop
jb
adc
or
sbb
lods
dec
pop
movsl
mov
sbb
mov
scas
cmpsl
pop
gs
in
mov
xchg
xchg
or
push
in
test
add
and
cwtl
sub
inc
and
xchg
addr16
sub
mov
enter
push
mov
push
push
push
inc
xor
cs
add
dec
sbb
test
or
into
lock
mov
ror
mov
dec
mov
add
xor
xchg
addr16
push
or
int
int
scas
add
add
mov
movsb
inc
repz
xchg
in
adc
inc
aam
and
ret
and
aas
push
popa
insl
stos
inc
and
mov
loopne
pop
xchg
ret
mov
xchg
and
sub
jno
cmp
dec
dec
inc
or
xor
fsubrs
jae
es
les
mov
push
xchg
mov
movsb
in
add
dec
addl
cmp
pop
and
sbb
xchg
pop
insb
pop
pop
sub
and
iret
sti
ljmp
jno
sub
dec
lahf
rolb
popf
inc
pop
enter
call
xor
pop
jmp
or
orl
add
lods
or
and
sub
xchg
sbb
push
cs
out
inc
sbb
or
iret
rorb
push
movsl
int
sbb
and
aad
sub
cmpsl
push
jmp
xlat
add
fwait
sbb
sbb
outsl
in
hlt
pop
and
sbb
mov
inc
pop
dec
test
cmp
add
xor
sub
jg
rclb
pop
add
sahf
mov
push
das
dec
in
dec
add
movsl
sub
aam
push
test
loopne
outsb
and
xchg
and
add
push
ja
push
mov
stc
test
inc
pop
xchg
ljmp
add
out
rol
xchg
and
push
dec
loope
xchg
sbb
test
dec
mov
sub
xchg
add
rolb
mov
push
loop
inc
adcb
pusha
sub
inc
mov
cmp
dec
pop
sub
or
lea
cmovns
add
mov
adc
lods
loope
jno
mov
aad
pop
push
repnz
popa
aas
lcall
inc
xchg
xor
data16
sub
pop
movsb
push
imul
xor
shrl
loop
inc
rcl
adc
cmp
dec
mov
and
mov
shrb
stc
xor
and
add
jne
add
ret
adc
icebp
lret
notl
test
fwait
je
sub
out
repnz
out
out
adc
fists
jecxz
je
jnp
shlb
xchg
add
cmc
sub
inc
adc
orb
aas
ss
adc
lret
les
outsl
inc
test
jp
or
dec
mov
call
sbb
pop
pop
mov
and
pop
in
inc
mov
es
cmpsb
jae
sub
aaa
jns
inc
add
jns
pop
popa
aaa
je
cmp
ljmp
popa
xchg
adc
jae
xor
and
adc
inc
push
mov
jmp
mov
in
inc
add
dec
outsl
test
test
sub
dec
dec
xchg
push
dec
inc
outsb
lret
push
sbb
les
imul
or
fstps
mov
scas
dec
movsl
push
repnz
test
xchg
gs
push
out
jb
adcb
es
ja
or
xor
or
jmp
rol
push
xchg
push
enter
imul
rorl
push
mov
movsb
bound
or
adc
mov
push
inc
outsl
popa
shrb
cmp
mov
movsl
and
lcall
mov
xor
push
cwtl
inc
adc
aam
add
and
inc
lret
ret
sbb
pop
xor
mov
xor
jo
add
inc
insl
loope
or
pop
adc
les
lods
mov
roll
mov
and
pusha
ljmp
cs
add
push
lcall
or
mov
add
js
and
fs
adcl
xchg
jne
pusha
shrl
inc
adc
ja
mov
sbb
andb
or
addr16
adc
adc
mov
or
dec
mov
ds
aas
pop
xchg
es
addb
sub
push
addb
inc
push
dec
pop
mov
aad
je
add
inc
and
cmp
cmp
aad
mul
and
bound
jb
fcomp
push
sub
ret
sbb
or
push
ljmp
xor
or
cld
push
movsb
sub
mov
mov
aas
sub
inc
stos
add
stos
mov
lods
pop
sbb
add
repnz
push
test
sahf
pop
add
in
inc
arpl
cltd
mov
fimull
sbb
scas
adc
rolb
and
mov
lcall
mov
test
jo
fisubl
shll
aas
xchg
push
dec
or
lods
xchg
sub
mov
lret
add
into
int
and
popf
xor
jge
repz
orl
and
ljmp
add
repnz
mov
jmp
sbb
jno
add
and
mov
stos
xchg
lds
push
add
popf
xchg
xor
fwait
lea
mov
inc
sbb
cmp
mov
aaa
add
jne
or
inc
sub
dec
and
jecxz
xchg
je
xor
lret
pop
and
stos
lret
sbb
aad
jp
sub
jge
stos
or
add
xchg
cmpsl
mov
sub
or
outsb
jecxz
or
movsl
test
inc
leave
mov
cltd
es
rclb
or
jne
or
lea
sub
cltd
test
adc
imul
or
imul
cltd
sbb
mov
dec
mov
jp
xor
xor
mov
add
pop
push
dec
or
push
lods
adc
cwtl
sub
jb
pop
xchg
cmc
out
push
and
push
call
add
loope
sbbl
adc
mov
dec
push
xor
incb
in
jnp
inc
or
mov
aas
push
bound
add
pop
repnz
inc
jecxz
sete
mov
xchg
push
inc
xor
sti
inc
add
ret
daa
sbb
pop
inc
mov
xorb
pop
pop
sbb
loopne
xor
dec
ror
shrl
or
popf
push
pop
xor
sbb
mov
dec
inc
inc
imul
aad
int
xchg
es
mov
ljmp
addb
push
in
jge
or
mov
dec
inc
rolb
xchg
push
mov
dec
cltd
cwtl
rorb
movsb
jne
push
test
push
pop
mov
and
and
push
rcl
mov
test
pusha
add
adc
das
mov
mov
push
movsl
or
sarl
inc
rcl
es
adc
lret
inc
andl
pop
movsl
rorl
or
or
repnz
test
add
mov
sbb
inc
fstps
and
cmp
out
bound
icebp
inc
outsl
pop
sbb
or
cmp
add
mov
xor
pop
mov
inc
movb
or
add
addb
push
adc
mov
sbb
xor
ret
mov
rcrl
cmp
sbb
or
adc
add
push
pop
push
fcomip
jecxz
inc
lret
add
lods
xor
stos
insl
fildl
push
xchg
jo
add
shlb
push
sub
or
mov
mov
shrl
sbb
sbb
fs
sub
and
rorl
jns
jae
inc
push
cmpsb
stos
add
ljmp
lea
jnp
mov
adcb
out
outsb
loop
add
dec
push
push
sub
xor
xor
push
mov
adc
adcl
adc
scas
add
pop
cmp
mov
outsb
popa
or
lret
aad
jmp
xor
cld
aad
push
inc
sbb
xbegin
fs
push
mov
icebp
or
and
add
sub
or
sbb
sbb
in
mov
aam
add
iret
cmp
insb
add
bound
popa
movsl
xlat
cmp
xchg
xor
mov
pop
test
jge
push
nop
addr16
stos
inc
add
sbbb
mov
shll
sbb
jge
jge
arpl
in
cmpsb
inc
orl
dec
push
xchg
int
sub
or
es
and
sbb
test
mov
and
testb
adc
mov
push
inc
loope
xor
xchg
dec
call
inc
cwtl
cmp
orl
cmpsb
dec
or
lcall
bound
mov
push
repnz
xor
or
popl
xor
push
aaa
sti
pusha
adc
pusha
call
stos
aam
dec
out
adc
pop
add
out
push
add
arpl
cwtl
jo
and
sub
lret
dec
sbb
popa
das
cmpsl
xlat
add
xor
sub
push
pop
add
roll
fwait
lea
cmpl
ja
xchg
add
icebp
cmp
sti
xor
inc
xorl
sahf
add
pushf
xchg
movsb
inc
dec
push
mov
and
add
movsb
movsb
inc
dec
out
add
push
sbb
push
flds
fcmovbe
icebp
cltd
push
loopne
test
fstp
loope
sbb
jnp
test
inc
jmp
test
pop
mov
daa
aas
sub
nopl
es
pusha
push
sub
mov
xor
pop
jge
mov
mov
stos
xor
jo
popf
stos
cld
sub
fidivl
inc
inc
dec
gs
scas
xor
loope
or
add
ljmp
mov
sqrtps
fistpll
jp
sbb
rcll
push
jecxz
xor
pusha
add
ljmp
je
mov
les
sbb
cwtl
sarb
mov
fsubrs
dec
adc
aad
dec
xor
aad
add
mov
pop
and
xchg
xchg
icebp
test
mov
inc
xchg
pop
xchg
push
stos
nop
pop
mov
test
dec
push
in
les
xor
and
stos
sub
cmp
jnp
loop
popf
pop
inc
or
mov
sbb
or
adc
xor
adc
mov
movb
incb
mov
scas
push
xchg
xchg
push
add
repnz
std
mov
imul
cmp
cmpsl
xchg
mov
mov
ret
cltd
xchg
jo
insb
dec
pop
adc
mov
outsl
pop
cltd
dec
cmp
adc
enter
cmp
das
or
and
mov
fistpll
rcll
adc
nop
popf
or
lahf
das
or
sub
jo
mov
dec
xchg
rclb
xchg
push
pop
mov
sbb
add
cld
leave
xor
inc
repz
icebp
shrl
sub
and
repnz
add
jne
shlb
je
test
mov
add
nopl
add
sub
inc
dec
loopne
pop
and
nop
fucom
cmpsb
call
jmp
mov
rclb
xor
subl
inc
repz
or
cmp
add
arpl
xor
mov
add
mov
or
inc
xlat
xor
loop
out
push
xor
or
sbb
mov
or
sub
lret
pop
jo
add
pop
jne
mov
dec
dec
jne
stc
pushf
fidivrl
add
jg
mov
fists
mov
ss
jns
xor
rclb
dec
dec
and
xchg
popf
pop
jmp
push
xor
dec
sbb
movsb
loope
nop
mov
cmc
inc
repnz
add
les
fistl
repnz
push
and
add
loop
and
adc
push
rcll
or
mov
mov
lret
mov
imul
add
and
stos
inc
inc
add
mov
xor
and
fildll
jp
inc
clc
mov
mov
dec
xchg
push
add
test
inc
and
mov
pop
mov
fldenv
push
dec
pop
and
sub
cltd
gs
and
enter
cli
dec
dec
jbe
or
mov
inc
insl
jmp
addps
das
cmp
into
test
xor
movsb
adc
test
jo
shlb
notb
insl
mov
nop
inc
loopne
jp
fmulp
dec
or
or
or
inc
gs
in
push
aam
xor
inc
jo
fwait
loop
nop
cmp
adc
mov
adc
stos
cmpsb
add
stos
les
cmp
add
sub
dec
inc
pop
jbe
popa
sub
pop
je
pop
sbb
sti
test
mov
mov
shll
mov
lret
xor
and
jg
cwtl
nop
sti
lea
push
ret
adc
je
adc
in
and
xchg
xchg
cmp
test
push
test
sub
mov
push
mov
mov
mov
rcl
and
data16
mov
mov
xorb
push
shlb
and
mov
mov
and
repz
repz
jo
xchg
out
mov
mov
add
loope
sbb
dec
in
xor
jno
decb
in
inc
inc
pop
jl
les
mov
sahf
jno
imul
inc
insb
pop
dec
jae
popa
mov
movsl
loopne
push
mov
push
insl
pusha
stos
mov
stc
or
pop
ss
add
test
inc
loopne
mov
enter
add
mov
sub
mov
dec
add
jmp
xchg
out
push
jo
xorl
test
dec
dec
add
rcrb
cmpsb
pop
cmp
add
aas
sub
cwtl
test
int
mov
and
mov
roll
add
pop
fdivrl
push
mov
repz
sbb
pop
or
mov
mov
push
iret
shl
push
cltd
add
dec
dec
xchg
test
and
push
cmp
lret
mov
xchg
sbb
mov
adc
outsb
cmp
push
inc
ret
push
jnp
out
sbb
orl
add
sbb
dec
mov
add
nop
cmp
add
dec
pusha
xor
adc
aam
in
sahf
dec
add
scas
sub
jns
daa
xchg
inc
dec
test
dec
inc
in
push
pusha
or
lods
jbe
test
icebp
shrb
xchg
xor
mov
and
shll
and
xor
pop
fcmovnbe
adc
mov
lock
adc
movsb
add
movsb
sbb
push
subl
or
xchg
in
add
or
push
mov
sbb
xor
inc
loopne
andl
inc
mov
filds
inc
enter
push
xor
lcall
mov
add
mov
xchg
jge
add
rolb
dec
inc
inc
pop
xchg
push
std
pop
dec
xchg
inc
inc
sbb
iret
pop
mov
add
xchg
mov
xor
inc
aaa
inc
loopne
and
bound
test
lret
shlb
fldcw
add
rorb
negl
or
inc
xchg
lcall
and
add
jne
scas
push
inc
mov
jmp
cmc
bound
add
push
push
pop
popf
push
jne
sti
sub
pop
adc
int
pop
in
es
or
and
adc
sbb
es
mov
add
xor
mov
push
pop
outsl
imull
rolb
test
jno
dec
lahf
jnp
mov
dec
sub
mov
outsb
add
mov
lret
xchg
addb
in
pop
adc
jb
xor
movl
add
cmp
lods
lds
mov
add
or
lds
pop
enter
inc
and
pop
jecxz
test
cld
aaa
inc
push
and
adc
in
add
xor
push
jp
sbb
mov
test
add
fnsave
or
rorb
iret
js
fs
jge
push
add
mov
ret
push
push
test
std
mov
cmp
roll
nop
add
or
ja
les
dec
sub
jb
pop
js
or
dec
sub
aas
or
ljmp
adc
push
or
shlb
and
je
int
mov
rolb
mov
or
pusha
les
mov
push
lea
lods
stos
cmc
mov
mov
pop
dec
and
pop
cwtl
inc
js
cld
push
add
add
inc
fdivs
cmpsl
stos
dec
add
mov
xor
mov
ss
mov
pop
inc
adc
pop
mov
push
mov
ljmp
dec
cmp
xchg
lret
adc
push
dec
stc
insl
mov
mov
cmc
enter
sbb
jns
jp
inc
mov
mov
stos
add
jmp
mov
stos
and
pop
sub
inc
sbb
jo
cmp
shll
addr16
sub
mov
push
rolb
dec
xchg
imul
insl
out
cmp
test
inc
inc
sbbl
or
cmp
sarl
pusha
mov
das
mov
add
xchg
imul
inc
ret
fwait
repnz
mov
sbb
sub
add
clc
add
add
cwtl
movsl
jb
push
aaa
jecxz
jl
cmp
mov
sahf
jo
mov
inc
int
inc
pop
sbb
ss
add
xchg
mov
mov
cmp
xchg
and
mov
roll
add
in
add
test
int
add
push
inc
add
pop
imul
cmpsl
mov
mov
adc
jae
hlt
xor
aad
shll
mov
scas
push
xor
mov
add
adc
stos
inc
pop
js
imul
test
or
rcrb
push
inc
fcom
test
and
xchg
push
mov
xorl
xchg
xchg
das
mov
movsl
mov
adc
aad
mov
lret
pop
shl
pusha
daa
xchg
insl
cmp
mov
push
or
repnz
stos
xorb
and
add
sub
inc
and
mov
test
and
outsb
xchg
sbb
sub
or
and
clc
xor
sbb
stc
inc
nop
movsb
mov
xchg
std
xlat
mov
xchg
addr16
xchg
jne
cmp
mov
mov
cmpl
jge
adc
scas
pop
or
add
mov
cmp
lahf
inc
dec
stos
add
push
dec
jo
add
movsb
fadds
xchg
and
popa
adc
out
icebp
add
or
push
mov
mov
nop
cmp
push
fcoml
lret
sarl
xchg
or
push
mov
mov
jge
cwtl
mov
leave
push
adcb
push
mov
movsb
adc
or
or
push
mov
cmpsb
push
pusha
add
stos
movsl
rcll
dec
mov
mov
addb
pop
adc
push
stc
push
mov
push
adc
mov
lods
or
cmpb
cmpsb
test
aad
or
adc
movsl
or
cmpsb
push
cmp
sub
mov
shll
xchg
mov
sbb
add
sbb
outsb
pop
adc
xchg
dec
push
adc
or
jne
repnz
cmpsl
popa
add
rorb
adc
jne
add
push
inc
mov
out
adc
mov
adc
mov
adc
jno
ret
sti
mov
sub
rclb
add
pop
adcb
or
and
inc
enter
jp
sub
int3
lret
and
inc
xor
imul
mov
mov
roll
xor
pop
sbb
pushf
xchg
testl
sbb
push
punpckhbw
bound
dec
jecxz
or
lods
aas
jno
xor
movsl
mov
xchg
add
arpl
jmp
inc
gs
adc
inc
imul
loope
leave
push
jo
xchg
add
jno
add
push
add
pop
daa
rcrl
in
jno
xlat
insl
add
test
xchg
adc
adc
rorb
movsb
push
or
xchg
push
dec
dec
add
jo
push
sbb
int
fsubrl
mov
adc
add
pop
in
inc
loopne
cmp
mov
mov
add
cs
add
outsb
jmp
in
gs
dec
cmp
arpl
rolb
jno
xchg
mov
xor
or
or
test
inc
dec
and
std
adc
mov
sbb
sub
dec
dec
adc
cwtl
and
jmp
rolb
push
mov
or
lea
sbbl
shrl
dec
cmpsl
test
xor
mov
xchg
and
jns
sub
adc
jmp
inc
and
lahf
inc
das
xor
stos
adc
inc
xchg
dec
sbb
or
push
lret
mov
inc
jp
inc
lods
ret
jns
lods
ja
xlat
mov
xlat
lds
test
sub
nop
push
icebp
mov
loope
add
addl
mov
or
inc
add
and
xor
add
int
xor
jecxz
addr16
loopne
ss
add
cwtl
adc
mov
cs
dec
out
scas
inc
lods
in
dec
out
imul
jo
sar
out
inc
movsb
fisubrs
push
test
pop
dec
aaa
push
mov
in
pusha
nop
notl
test
insl
leave
jp
push
std
iret
mov
pop
mov
sbbb
lret
in
push
cs
mov
mov
outsb
ss
addr16
push
adc
test
pop
or
pop
nop
mov
sbb
rol
icebp
or
daa
pusha
iret
out
pop
sbb
and
addl
scas
adc
stos
es
pusha
push
mov
aad
cmp
adc
mov
mov
inc
sub
adc
test
aam
ret
call
push
push
imul
lock
adc
dec
loop
push
das
and
shll
cwtl
xchg
aad
mov
push
cmp
fmuls
push
mov
je
add
xor
cwtl
push
cmp
dec
xlat
push
sub
jno
inc
jmp
cwtl
fistpl
stos
mov
sbb
jo
fstpt
xchg
outsl
push
and
test
rcrb
cmp
mov
or
aad
jbe
mov
mov
or
push
or
es
jecxz
loope
lods
imul
and
jne
add
cmpsl
xor
or
loope
push
mov
shl
imul
mov
sbb
or
jne
inc
stos
push
add
pusha
pop
jae
lcall
cmp
popa
sbb
cmp
xor
repz
xchg
and
or
push
fcmovnu
pop
adc
or
into
mov
leave
ja
je
lcall
jne
add
test
loop
jg
clc
lods
rclb
push
mov
aad
xchg
dec
inc
sbb
add
mov
jae
popa
add
cwtl
jg
xchg
sub
addl
mov
push
add
lods
adc
jp
cmp
add
pop
jne
call
inc
shlb
addb
addr16
dec
rolb
jo
xor
stos
nop
addr16
aas
sub
pop
adc
lcall
add
subb
jae
add
lock
xor
lods
add
inc
xor
dec
and
and
inc
add
mul
test
and
ja
push
push
fyl2x
stc
sahf
adc
add
bound
movsl
pop
es
sbb
and
test
and
xor
mov
jno,pt
and
orb
dec
add
add
or
xor
adc
loopne
outsb
lret
push
stos
jecxz
outsb
imul
and
mov
dec
fdivrs
sbb
inc
pop
add
mov
stc
inc
add
jo
outsb
push
mov
and
daa
pusha
and
sti
pop
dec
mov
and
pushf
orl
pop
push
inc
mov
xchg
movsb
xchg
cmp
fwait
cwtl
add
or
icebp
rol
add
dec
and
fiaddl
push
add
sbb
and
lahf
rcrb
add
or
mov
lcall
stos
mov
nop
dec
inc
or
stos
cmp
pop
adc
and
jnp
add
xor
sbb
adc
push
test
jno
adc
scas
add
sub
mov
shlb
mov
or
cmp
insb
or
hlt
cmc
mov
rcll
pusha
adc
inc
sbb
add
sbb
test
rclb
jl
inc
pusha
adcb
jge
sub
push
loope
add
and
inc
gs
push
xchg
inc
nop
lret
sbb
lods
das
mov
xlat
sbb
stos
add
inc
out
ret
cmpsb
mov
cmp
movsl
or
or
or
lcall
imul
dec
pop
push
sbbl
dec
test
adcl
jno
or
sti
push
or
add
add
add
pop
les
adc
add
fdivrl
test
loope
pop
addr16
enter
add
adc
cmp
or
push
or
sbb
add
dec
loopne
inc
outsb
and
dec
andb
adc
arpl
inc
stos
adc
dec
mov
mov
cmp
and
leave
xor
inc
push
xchg
mov
test
es
rcl
add
inc
jb
outsl
pop
add
cmp
mov
enter
add
stos
or
popf
adc
push
jmp
or
and
jecxz
adc
sbb
xlat
add
push
scas
push
ljmp
mov
dec
popa
mov
xchg
cwtl
or
add
and
ja
cmp
adcl
add
adc
mov
sub
pop
mov
xor
xor
jbe
test
inc
sub
fcmovbe
xor
popf
sub
daa
lods
sbbl
icebp
add
xor
add
pop
daa
mov
mov
add
out
inc
push
cmp
nop
dec
bound
sbb
inc
push
movsb
pop
mov
jo
shrb
xor
aaa
ret
mov
push
or
popl
sbb
push
test
imul
and
mov
test
xchg
xchg
mov
xchg
test
lahf
pusha
xchg
cmp
pop
movb
jnp
push
or
loopne
mov
ret
bound
das
sbb
iret
lret
fdivs
cmpsl
aam
xor
adcb
push
aaa
mov
push
xchg
pop
sbb
or
mov
adcb
jg
xchg
fbstp
lcall
add
mov
sub
xchg
cmp
lcall
adcb
out
cmp
rclb
jo
inc
rolb
xor
cmc
sbb
lods
sub
and
inc
mov
jo
and
sbbb
xlat
push
gs
add
and
dec
bnd
lret
push
adc
xlat
mov
or
push
jmp
lret
aaa
push
push
pushl
or
insl
leave
mov
lds
repnz
mov
xor
dec
xor
mov
subl
movsl
sahf
dec
pop
cwtl
lds
xor
pop
or
xchg
push
lcall
addl
add
sub
lods
or
or
mov
add
es
mov
jg
mov
sbb
xorb
adc
stos
push
inc
dec
xchg
push
inc
or
movsb
movsb
mov
dec
stos
mov
stos
lock
jbe
test
push
adc
push
test
aad
iret
pushf
loopne
mov
inc
or
popa
loopne
push
int3
add
push
jb
jnp
scas
test
mov
jns
sub
and
dec
or
movsbl
adc
sub
test
or
dec
inc
adc
sarl
and
insl
sub
mov
jmp
rorb
andl
xor
adc
mov
into
mov
dec
movsl
push
and
mov
arpl
and
fstp
sbb
subl
xchg
adc
pop
xor
and
sub
subb
mov
add
out
sbb
mov
sub
adc
cmp
and
jp
push
daa
imul
dec
sbb
jns
or
push
mov
pop
sub
mov
pop
loope
add
inc
pop
sub
stos
push
mov
adc
pop
adc
pop
adc
xchg
outsb
inc
js
leave
add
outsb
popa
inc
cmp
sbb
push
inc
jae
pushf
cmp
add
push
sub
out
jbe
add
mov
mov
cmp
ret
pop
sub
xchg
push
bound
jmp
sbb
adc
sub
test
push
push
ffree
push
subl
dec
push
sub
stos
xor
test
add
push
adc
push
loopne
xor
ret
lea
sub
mov
cltd
inc
ljmp
lret
stos
sbb
mov
scas
add
sbb
pusha
test
test
sub
add
mov
mov
cmp
shll
movsb
inc
cmpsl
dec
dec
out
adc
sbb
sub
inc
neg
mov
sub
mov
dec
jne
subl
fwait
pop
pop
adc
orb
adc
cmp
push
sbb
arpl
pop
or
and
and
dec
jg
movl
xor
push
test
ss
fimuls
xor
push
mov
aad
add
nop
scas
mull
push
rol
lea
xlat
mov
or
pop
ja
mov
add
mov
fldl
insl
jmp
mov
jg
cmp
out
add
adc
xlat
dec
push
inc
das
jecxz
or
cltd
inc
cwtl
leave
es
mov
popa
sbbb
or
lcall
fstps
add
or
pop
insl
push
pop
movsl
je
mov
nop
imul
xchg
push
je
and
dec
push
xchg
push
nop
xor
cwtl
jmp
sbb
mov
pop
jl
sarl
popf
dec
inc
jno
mov
sbb
loope
inc
xchg
push
jno
shll
jne
xlat
loope
pop
cs
sbb
inc
jle
aam
and
testl
fldl
or
cs
sub
or
ret
mov
xor
sbb
sub
inc
and
dec
xchg
ja
shrl
and
jae
jns
xchg
push
push
mov
add
jl
inc
sub
mov
jno
mov
inc
lods
sub
add
cmp
adc
lock
push
xor
rol
cmp
add
inc
add
or
cltd
lret
cld
add
push
add
and
jmp
dec
add
shlb
and
xchg
xchg
pop
pop
loopne
stos
jo
sarl
mov
pop
nop
or
aas
pop
mov
xchg
add
and
into
movsl
cmp
mov
insl
movsb
dec
std
add
jge
push
and
aad
movsl
inc
xor
sub
add
sub
stc
orb
enter
icebp
push
add
adc
xor
jo
rcrl
pop
cmp
cmp
adc
inc
adc
jbe
add
inc
add
dec
inc
popa
adc
subb
std
stos
lret
and
jno
fistpl
or
roll
stc
add
adc
sbb
and
pop
int
jno
jae
pushf
adc
sub
data16
add
cmp
mov
mov
notl
stos
mov
jg
loopne
es
in
test
addb
aad
inc
cmpsl
push
jl
xor
int
gs
rolb
mov
xadd
pop
push
push
fisttps
imul
aad
sub
adc
dec
cmp
in
mov
inc
pushf
addb
addl
in
clc
mov
sub
mov
adc
add
jl
dec
fcompl
fs
sbb
xor
insl
dec
or
inc
fcoms
pusha
rol
xchg
push
cwtl
sub
mov
dec
mov
add
loope
dec
mov
gs
dec
push
and
jle
adc
mov
cltd
dec
push
jne
out
and
mov
not
repnz
and
jmp
inc
ret
dec
cmp
or
or
add
fldcw
dec
test
adc
adc
call
mov
add
or
xchg
jmp
pop
xchg
into
test
nop
mov
mov
adc
and
add
test
notb
add
daa
xchg
enter
cmp
jo
mov
lcall
inc
sbb
add
arpl
rcl
popf
mov
and
inc
xchg
push
loope
cwtl
sub
inc
sub
or
bound
repz
dec
adc
sub
nop
push
rorl
outsb
mov
jg
xor
in
sub
push
xor
aaa
lods
push
stos
dec
arpl
pop
cmp
push
pop
adc
test
xchg
adc
jo
adc
pop
rolb
sbb
fwait
movsb
ret
imul
xchg
cwtl
lcall
xor
inc
les
inc
add
and
dec
imul
or
gs
stos
push
adc
inc
inc
lcall
mov
lahf
shl
sub
mov
sbb
push
xor
jg
sub
stos
push
xlat
cmp
push
add
or
mov
add
jo
sub
out
jb
and
sbbb
popa
pusha
sbbb
pusha
orb
inc
pop
jnp
test
les
sbb
nop
test
mov
pop
pusha
push
push
xchg
push
or
shlb
sub
lods
cwtl
sub
push
rorb
add
les
sbb
xchg
cmpsb
arpl
mov
dec
outsl
or
and
mov
push
and
push
scas
addr16
sbb
aaa
dec
adc
pop
imul
jno
xlat
lahf
adc
pop
pop
and
xor
cmpsb
mov
pop
mov
cltd
add
mov
cmp
fstps
loope
daa
addl
orl
push
cmpsl
xchg
test
push
sbb
and
in
aad
or
and
pop
inc
and
pop
mov
pop
pop
pop
jg
fsubl
xor
adc
lods
cmpsb
movsb
dec
sbb
ret
iret
repnz
mov
inc
and
shll
lods
shrb
iret
pop
inc
inc
add
aad
gs
dec
pop
ret
add
and
or
dec
adc
add
mov
inc
pop
xchg
adc
or
je
imul
add
add
pushf
fs
add
mov
pusha
nop
sub
daa
mov
xor
sbb
push
arpl
insb
push
adc
mov
sbb
add
and
mov
add
xchg
ret
mov
mov
jnp
and
dec
adc
lea
push
xchg
rclb
cmp
loopne
jne
push
pop
push
push
mov
rcll
xchg
or
ljmp
add
gs
cmpsb
push
or
pushf
sbb
test
cmp
sub
aam
xchg
mov
aad
cmpl
mov
pop
push
call
push
xchg
lret
push
add
sub
nop
push
dec
aas
in
inc
fwait
or
shlb
mov
or
add
or
dec
sub
dec
scas
pusha
cmp
adc
add
xchg
pop
insl
pushf
stc
jo
pop
xchg
cmp
push
pop
inc
mov
or
dec
push
leave
push
adc
jg
add
sub
pop
xchg
xorb
xor
mov
push
leave
mov
shll
xor
iret
stc
hlt
sub
imul
addl
aas
jns
or
inc
ret
add
orl
dec
push
test
add
scas
or
stos
adc
adc
into
cmp
push
inc
and
fcmovnbe
push
cmp
add
push
ss
adc
ret
mov
or
mov
dec
iret
pop
cmc
inc
mov
sub
add
adc
mov
into
das
in
inc
or
adc
cmp
orb
add
loopne
xchg
out
cmc
mov
inc
sbb
pop
lret
mov
nop
and
call
cmpsl
xor
jno
lods
mov
push
push
jecxz
add
fmull
stos
insl
inc
scas
push
dec
push
xor
pop
push
rclb
add
fwait
push
stos
mov
pop
rclb
repnz
addr16
movsb
push
pushf
shrb
push
jae
cmpsb
andl
aam
adc
dec
fwait
mov
dec
inc
xchg
xor
sub
jae
mov
sbb
add
leave
xor
xchg
pop
jg
mov
dec
xlat
popf
xchg
inc
fcoms
pop
dec
aad
pop
dec
loopne
sbb
fists
fiadds
in
or
push
adc
or
mov
xchg
rorb
addr16
fdivl
movsl
dec
xor
xchg
sbb
sub
cmp
flds
loope
mov
or
arpl
pop
dec
test
push
bound
fcoml
and
lds
sub
leave
popf
dec
mov
cmc
arpl
cs
roll
andb
test
les
xor
xor
push
cmpsl
xchg
push
xchg
in
iret
repz
ss
push
push
push
sub
rcll
push
xor
add
dec
cmpsl
jno
daa
xor
icebp
and
push
pop
jo
shll
cmp
jns
mov
pop
outsl
fwait
adc
lcall
add
mov
pop
push
xor
xchg
xchg
push
xor
sbb
xor
mov
test
jmp
or
mov
movsl
adc
mov
cwtl
sbb
cmpsb
shll
iret
or
daa
ret
jno
gs
and
add
push
and
hlt
in
pop
push
pop
add
shlb
inc
or
fcoms
and
cltd
sub
add
add
xchg
inc
add
add
pop
je
mov
sub
pop
xchg
sub
and
sub
xchg
es
sbb
push
enter
inc
or
push
test
xchg
adc
fnstenv
pusha
movsb
cmpl
and
or
jno
sub
movb
clc
daa
xor
je
push
jns
mov
cltd
adc
sbb
push
mov
shrb
adc
icebp
sub
lods
mov
add
xor
jl
pop
push
xchg
nop
dec
jns
loope
sbb
pop
sbb
xchg
add
xchg
add
rol
lea
loopne
test
test
popa
test
movsl
cmp
jo
rolb
out
cwtl
bound
and
and
sbb
mov
pop
and
sub
add
imul
jae
sub
or
out
xchg
jne
inc
repz
add
clc
xchg
pop
roll
pushf
push
cmp
mov
sbb
insb
or
add
and
cld
jecxz
xchg
add
bnd
ret
clc
stos
sbb
add
sbb
mov
imul
pop
adc
aam
sbb
xchg
mov
aaa
not
push
jne
xor
out
and
nop
mov
sbb
cmp
rorl
lret
inc
popa
push
xchg
xchg
rolb
xchg
faddl
push
test
pop
jo
push
pop
sti
jno
dec
sub
roll
cli
mov
mov
in
rol
shlb
mov
mov
scas
shlb
insw
hlt
mov
imul
iret
inc
lea
jns
pop
shlb
jb
jne
mov
inc
xor
inc
dec
pop
incl
addb
xchg
and
aaa
and
pop
shl
ret
mov
pop
adcl
jecxz
pop
add
push
jmp
xchg
push
jno
lret
inc
pop
lcall
add
push
movsl
mov
ret
test
add
add
add
push
or
imul
mov
rolb
mov
cmp
or
push
jne
lods
mov
je
mov
pop
das
inc
ret
jecxz
test
adc
loope
inc
jbe
push
push
or
xchg
xchg
orb
shlb
jns
sub
push
test
inc
jge
pop
scas
xor
sbb
or
imul
push
push
xor
sahf
cmp
add
mull
jns
cmc
fbstp
xchg
rorb
sub
mov
mov
cmp
jl
ja
add
lahf
jno
aam
xor
adc
xchg
xchg
adc
pop
xchg
mov
sub
shll
xchg
test
imul
dec
and
shll
int3
adc
or
and
pop
popf
mov
adc
xor
push
inc
dec
stos
lret
inc
xor
jns
jno
xchg
push
popa
or
es
dec
shlb
enter
xchg
dec
push
ss
add
add
and
cmp
mov
push
add
xor
sub
adc
adc
xchg
test
jns
or
loope
popl
sub
sbb
sbb
xor
outsl
pop
je
push
scas
dec
sub
ljmp
cmpsl
inc
sti
mov
xchg
push
xchg
cmp
and
int3
lahf
lcall
repnz
and
ficomps
xor
and
jecxz
mov
pop
adc
mov
xlat
mov
ja
push
xor
mov
dec
push
scas
xchg
movb
loop
ficomps
adc
pushf
lret
repz
dec
and
and
jmp
adc
rorb
hlt
rorb
jne
push
leave
jae
inc
add
scas
fildl
jp
cmpsl
pushl
cltd
sbb
sbb
sti
dec
or
imul
xor
mov
add
and
sub
mov
movsb
ret
mov
icebp
xor
sbb
sbb
add
inc
lcall
leave
pop
sbb
dec
lret
stos
subb
inc
add
and
xor
add
xor
fsts
cmpsl
mov
sbb
pusha
scas
push
push
loop
movsb
imul
call
pusha
or
xchg
cmc
lahf
xchg
inc
dec
mov
movsb
repz
jle
mov
outsl
dec
jne
rcr
add
andb
stos
inc
jecxz
adc
or
popf
mov
and
add
mov
call
jmp
mov
test
dec
sahf
pop
rclb
xchg
pop
jnp
xchg
jb
inc
adc
xchg
out
inc
cmp
jge
inc
popa
bound
push
adc
adc
outsb
popa
add
imulb
cmpsl
or
push
cmp
push
or
pop
test
sub
adcb
xchg
and
inc
jmp
xlat
push
push
sub
or
xlat
mov
and
in
shrl
in
push
aam
sbb
dec
push
in
pop
lea
aas
sub
stos
in
and
adc
sub
mov
sub
and
test
ffree
add
cwtl
addb
in
push
push
mov
mov
xor
pushf
pop
xor
sbb
mov
ja
xor
sub
rclb
out
jb
xor
mov
sbb
dec
xchg
or
add
xorb
addb
add
fstl
dec
adc
sti
lock
add
lahf
sbb
and
loop
and
inc
or
stc
scas
mov
adc
dec
add
adc
pop
out
inc
sbb
sbb
rolw
add
xor
popf
pusha
add
daa
or
test
xchg
cmpsl
xchg
jo
and
mov
leave
xchg
cmpxchg
pop
dec
daa
je
repz
pop
mov
jo
les
into
in
xlat
adc
subb
mov
cmp
scas
loopne
jp
mov
jmp
xor
nop
addl
clc
xor
dec
sbb
sbb
add
ret
cmpb
sbb
inc
mov
inc
fwait
adc
inc
sub
jo
and
gs
rcrl
and
push
push
add
pop
jmp
sbbl
xor
cmp
stos
push
mov
bound
adc
inc
dec
jae
adc
inc
mov
add
and
adcb
out
psllw
jmp
xor
pop
adc
stos
inc
loope
add
jns
push
inc
and
imul
subb
xor
inc
sub
mov
sbb
cs
loopne
dec
push
ficoms
add
test
mov
push
mov
repnz
xor
fcmovbe
cmp
aaa
mov
pop
outsl
jb
push
xchg
pop
mov
xorb
mov
add
sub
sub
daa
cmp
push
cmp
mov
xor
pop
jns
pop
mov
adc
lret
and
stos
cmp
mov
mov
shrl
inc
pop
push
ret
jo
add
and
lret
add
dec
jge
lods
int
sbb
add
mov
push
cmpsb
xchg
rcrl
sbb
mov
test
adc
cmp
imul
pop
push
mov
imul
inc
sbb
push
ss
leave
mov
xchg
jno
sbb
testl
inc
das
lea
cmp
std
je
loop
aad
inc
add
push
lcall
and
cmp
or
jne
jmp
cmp
mov
mov
pusha
adc
loopne
mov
inc
xor
bound
xor
cmp
add
xor
loop
pop
and
pop
lea
leave
es
std
into
jp
dec
imul
push
mov
adc
test
cmc
cltd
cmpsb
bound
mov
andb
inc
xor
adc
adc
cmp
and
mov
repz
bound
lods
add
loop
cs
leave
adc
cltd
fwait
mov
lds
inc
or
or
clc
lret
mov
pop
and
adc
sub
push
cmpl
pop
cmc
jmp
loopne
insl
add
pop
or
inc
push
shll
in
es
push
sub
jmp
insl
cmp
jne
push
arpl
adc
cld
dec
push
lcall
test
mov
mov
mov
fcomip
fwait
daa
dec
inc
and
sub
test
lea
adc
pop
sbb
push
adc
movsl
xchg
repnz
mov
xchg
dec
xchg
jne
fiaddl
aam
and
mov
sti
jns
add
or
pop
jmp
xchg
mov
xor
iret
push
lret
fstpl
ds
sub
packsswb
addr16
add
add
andb
and
imul
dec
sahf
dec
outsl
or
fildll
lret
and
scas
inc
pop
leave
xchg
adc
in
push
sub
fcoml
orl
roll
jmp
nop
mov
sbb
jecxz
add
inc
inc
xchg
or
inc
lds
insl
in
mov
imul
xor
jmp
sbb
jne
xchg
les
enter
dec
icebp
or
test
mov
scas
ja
icebp
cmp
mov
xor
mov
add
cmp
sbb
or
shrb
dec
dec
mov
rorl
cmp
mov
dec
mov
or
mov
and
adc
pop
dec
and
inc
pop
and
in
mov
iret
push
shlb
sub
frstor
divb
xchg
push
ljmp
stos
sbb
aad
aam
jp
xor
aas
inc
repnz
test
aaa
adc
ficompl
mov
inc
push
mov
ljmp
sub
adc
loope
xor
sub
xchg
inc
imul
out
pop
pop
push
or
jno
jmp
push
shrl
inc
and
jne
sbb
xchg
jno
cmp
js
add
xchg
push
and
shrb
pop
cmc
loope
or
inc
or
dec
orl
test
mov
mov
xchg
je
in
xor
inc
out
xchg
mov
adc
mov
inc
stos
or
xchg
gs
mov
imul
lcall
dec
adc
and
push
pop
rclb
movsl
dec
sbb
mov
inc
popa
inc
add
and
scas
repz
or
sub
subl
adcl
mov
mov
inc
addr16
add
arpl
xchg
cwtl
ljmp
and
ljmp
push
xchg
xchg
dec
pop
and
push
shrl
xor
cltd
push
push
cmp
les
or
push
pop
mov
pop
xlat
xchg
dec
adc
sbb
das
cmp
mov
aad
test
imul
mov
xor
loope
adc
es
push
cmp
adc
and
cmpb
fisubs
popa
add
adc
push
rclb
mov
roll
push
xor
bound
xchg
in
popa
ja
rorl
xchg
das
ret
fdivl
ss
scas
xor
xor
dec
jl
sbb
pop
dec
repz
out
addr16
adc
push
dec
test
movsb
outsb
stos
cmc
std
pop
mov
test
cmp
mov
rcrb
and
mov
repz
shll
in
add
dec
pop
in
test
orb
and
mov
cwtl
rolb
xlat
jge
cwtl
ret
nop
xchg
out
imul
sbb
cmp
mov
jns
push
nop
out
jae
lea
mov
mov
sub
loopne
std
jbe
adc
inc
test
jge
inc
dec
xor
aad
ja
roll
aam
pop
sub
inc
sahf
or
jns
es
pop
adc
inc
sub
js
loopne
fcmovb
popf
dec
imulb
in
fs
push
faddl
mov
xor
aaa
cmp
cmp
cmp
mov
rcl
xor
popa
lea
or
rcrb
pop
dec
jmp
movsl
cmp
and
flds
arpl
push
xchg
xchg
xorb
add
cmp
adc
mov
arpl
xchg
add
test
xchg
xchg
and
cltd
fsubl
push
cs
mov
adc
adc
xchg
add
orb
punpckhbw
les
test
mov
sub
test
sbbl
adc
sub
or
sub
filds
andl
dec
push
xor
xchg
out
cmpsl
xchg
addb
add
sub
add
mov
push
sbbl
insl
enter
jnp
add
mov
movsb
add
pop
popf
prefetch
adc
sub
repnz
cli
dec
stos
leave
shl
inc
int3
xor
or
js
ror
add
or
xlat
xor
subb
mov
adc
push
aad
popa
js
stos
dec
or
mov
leave
enter
pop
push
pusha
xor
jo
scas
imul
flds
sbb
mov
mov
gs
adc
das
daa
push
adc
daa
int3
inc
cmpl
mov
xchg
xor
mov
mov
mov
cwtl
or
inc
imul
xor
add
sub
shlb
cmp
cwtl
and
add
fstl
add
or
pop
or
inc
add
stos
fisttpll
data16
scas
sbb
mov
dec
dec
rcrb
cmpsl
bound
stc
inc
inc
ja
pop
cmp
popa
sbb
ffreep
mov
inc
jl
or
mov
movsl
push
add
dec
inc
add
aad
das
cwtl
xchg
adc
shrl
adc
add
add
push
sub
stc
and
xchg
dec
add
cmpl
sbb
stos
sub
sbb
jbe
and
dec
arpl
mov
jno
fldt
sbb
int
and
push
leave
add
insb
jge
iret
mov
add
test
popa
add
xor
mov
and
pusha
cwtl
sub
or
les
fs
daa
inc
inc
dec
adc
push
add
or
pusha
call
js
mov
jp
test
pop
adc
imul
addr16
sub
xchg
call
push
xor
pop
adc
daa
xor
aam
inc
inc
xor
loopne
outsb
ja
jmp
imul
aas
enter
cmp
loopne
cmp
bound
xor
sbb
sub
jmp
imul
inc
imul
nop
daa
xor
test
leave
xlat
adc
xchg
pushw
xchg
dec
je
test
add
je
popf
loop
cld
add
in
mov
push
xchg
insl
mov
or
pop
fwait
jecxz
adc
or
jnp
leave
lea
lea
stos
and
test
fildll
mov
jnp
or
push
mov
jl
test
out
lock
test
add
mov
aaa
ret
insl
add
int3
rcl
loope
add
jno
in
pop
cmp
cmp
cmpsl
inc
insb
push
sub
push
or
dec
pop
popa
andb
dec
sbb
movsb
rclb
int
lods
andl
ds
mov
rorb
jae
mov
test
inc
fcomps
mov
sahf
pop
push
cmp
mov
mov
xchg
sub
shll
add
movsb
xchg
or
xor
test
xor
cmp
cwtl
cwtl
jmp
pop
mov
fwait
xchg
jne
pop
push
popf
mov
inc
mov
pushf
rolb
ret
nop
das
rorb
ret
push
and
test
sbb
les
aaa
push
xor
shlb
ljmp
adc
je
rorl
or
mov
divb
mov
add
test
mov
test
insl
jmp
adc
mov
and
repnz
inc
call
push
lea
xlat
sub
loope
stos
inc
mov
cmp
jns
add
push
shlb
daa
or
sub
and
dec
jno
mov
iret
mov
or
sbb
lea
lahf
sub
adc
ret
lea
cmpsb
sub
fwait
std
test
and
pop
cltd
mov
lods
push
sub
mov
and
mov
mov
sbb
xor
mov
pop
sbb
loope
dec
sbb
mov
inc
mov
push
pop
push
roll
pop
pop
adc
or
adc
pop
sbb
push
outsl
mov
add
nop
icebp
sub
adc
inc
imul
mov
popa
mov
pop
adc
sub
and
scas
std
pusha
aam
jno
bound
rcrb
iret
dec
push
cmpsl
daa
in
mov
inc
ds
sbbl
decl
jo
mov
inc
sub
loope
sahf
orb
and
inc
or
or
push
xchg
dec
push
dec
jne
add
push
xchg
mov
sub
or
cmp
dec
fmull
mov
push
lahf
inc
cmp
iret
cli
fisttps
inc
scas
and
rolb
les
xchg
adc
rcrl
xor
jl
int
mov
loop
add
push
sub
push
dec
addr16
mov
push
ja
dec
test
adc
test
fdivrl
dec
add
movsb
aad
in
sbb
movsl
je
gs
dec
and
sbb
jns
pop
and
add
mov
shll
xor
xchg
ret
outsb
rol
in
xor
inc
mov
rolb
adc
cmp
fstpl
xor
sub
popf
xor
nop
shrl
lcall
roll
leave
addl
pop
movsb
sbb
jnp
mov
add
jbe
xor
mov
xchg
pushf
loopne
or
sti
add
or
je
mov
sub
cli
xor
dec
pop
jecxz
lea
sub
cmp
inc
pop
in
adc
pop
fdivs
sub
dec
jge
dec
and
dec
mov
or
jo
fstpl
pusha
fistpll
popa
int
add
je
aam
orl
add
sti
repnz
shll
pop
push
xchg
pop
fwait
test
and
pop
and
and
mov
push
add
lret
adc
xor
xlat
movsb
inc
orl
adc
sti
divl
dec
mov
mov
loopne
cwtl
ljmp
adc
dec
bound
mov
or
adc
pop
fildll
aad
pop
clc
jecxz
lret
sbb
nop
orl
and
adc
sbb
or
sbb
aad
bound
mov
nop
movsb
or
lods
mov
stc
or
pusha
push
and
and
push
adc
sub
inc
pop
jge
mov
loopne
sbb
mov
push
xchg
push
dec
sbb
pop
or
push
scas
add
fwait
xor
psrlq
cmp
les
jmp
loope
cmpl
or
cmc
cmp
inc
lds
and
mov
xchg
ret
cmp
leave
add
xchg
fnstenv
rolb
mov
iret
xor
test
inc
ss
xor
push
mov
sbb
jecxz
pop
add
aad
mov
and
adc
xchg
loopne,pn
hlt
js
pop
adcl
lcall
sub
lods
mov
adc
and
jae
andl
sahf
lret
test
add
jecxz
mov
sbb
cmp
in
cmp
rclb
mov
add
subb
testl
mov
inc
test
test
adc
mov
xstore-rng
cmpsl
ret
push
mov
mov
stos
add
fildll
mov
jl
mov
mov
popa
sbb
xchg
add
stos
loopne
jb
mov
push
cmpsl
sub
dec
or
outsl
inc
add
or
and
add
dec
mov
jo
setge
cmp
add
test
xchg
mov
mov
shrb
rolb
jge
bound
popa
popa
test
or
push
rorb
movsb
cmp
mov
jae
int
jle
mov
add
xchg
out
es
lcall
hlt
sbb
or
mov
aam
dec
call
inc
stos
push
push
xor
aam
aas
int3
add
add
push
inc
clc
nop
or
jge
xlat
stos
adc
and
arpl
popf
or
sahf
imul
andl
lds
xlat
add
inc
mov
add
xlat
ret
call
in
or
cmp
test
subl
sbb
jecxz
lods
or
mov
pop
adc
add
push
add
sub
inc
adc
ss
mov
orl
stos
movsb
repnz
into
cmp
sub
orb
add
add
inc
or
or
jg
ret
sub
pushf
push
fnstenv
add
push
adc
sub
jns
cmp
or
xchg
mov
cmp
jge
movsb
adc
pop
xor
mov
pop
test
sbb
inc
mov
pop
push
mov
adc
add
adc
lcall
and
imul
sub
cmp
test
and
push
xor
inc
repnz
daa
leave
mov
mov
sbbb
mov
out
or
cwtl
and
dec
jae
sbb
test
push
adc
adc
sbb
adc
sub
mov
repz
add
push
dec
cltd
pusha
movsb
xchg
fwait
std
add
inc
loopne
imul
loopne
adc
add
mov
mov
popf
shr
inc
aas
cmp
cmpl
push
mov
dec
jns
adc
or
movsl
aad
xchg
cmpb
add
mov
jo
stc
xlat
or
lcall
sbb
and
cmpsb
loope
dec
mov
arpl
add
push
jo
ret
cwtl
sbb
imul
inc
inc
shll
shll
ret
mov
pop
mov
push
mov
rolb
or
bound
and
nop
sub
inc
mov
and
shlb
les
push
mov
and
aad
xor
sbb
test
jns
or
rclb
mov
mov
pop
pushf
movsl
movsb
jne
je
aas
sbb
mov
lahf
popf
jg
stos
adcl
sbb
xchg
sbb
add
dec
enter
adc
ss
mov
popa
out
insl
jo
inc
adc
gs
out
pop
cmp
add
in
xlat
sbb
ja
jne
packssdw
out
sbb
adc
dec
push
pop
dec
xor
mov
mov
stos
or
inc
sbb
jmp
loopne
or
or
inc
loopne
push
dec
pop
push
stos
add
adc
xor
lea
and
outsl
push
nop
cwtl
mov
add
adcl
movsl
lcall
mov
cmpsl
add
push
ret
or
lods
bound
mov
fstpt
pop
or
pushf
push
push
xchg
add
cmp
and
dec
pop
test
ret
mov
les
lods
adc
adcb
mov
adc
xchg
fsubl
push
es
inc
rclb
xor
ret
mov
inc
jp
sbb
in
xor
mov
std
cs
add
mov
dec
adc
insb
lret
aam
sbb
mov
shrb
insl
iret
test
adc
mov
cltd
out
add
xor
adc
lret
jae
fldenv
shl
jl
cmc
mov
in
js
push
test
fcmovb
test
sub
mov
push
inc
fcmovb
inc
fwait
loope
and
mov
or
out
in
push
or
and
arpl
adc
pop
jl
push
xor
add
insl
sub
mov
ret
add
push
scas
lea
push
mov
rcrb
test
inc
sub
sbb
or
mov
sub
enter
in
add
jmp
and
dec
cmc
xchg
jbe
mov
cmp
mov
cld
inc
push
rcrl
pop
sbb
iret
adc
sbb
push
add
outsb
push
jno
add
and
cmp
mov
add
push
push
jp
xor
inc
inc
decl
ficompl
add
push
xor
test
jge
decl
cmpsb
push
sbb
xchg
push
lcall
jne
add
cs
test
push
and
pop
mov
stos
ds
stc
xor
imul
xor
loopne
mov
dec
or
scas
adc
dec
das
push
insl
xchg
jle
mov
rorb
rclb
loop
dec
loope
lods
push
stos
nop
sahf
cmp
add
or
movsb
and
loopne
add
inc
push
pop
push
dec
scas
xor
fwait
mov
add
ret
ds
adc
push
inc
and
push
or
mov
push
shrl
dec
add
popa
inc
mov
inc
add
xor
lds
push
lds
mov
aad
inc
dec
mov
inc
mov
je
jne
mov
sbb
push
lcall
loope
xchg
push
sarl
js
enter
sbb
shlb
stc
xor
or
inc
cmp
es
xor
add
mov
and
je
es
imul
mov
jne
push
mov
sub
or
jns
add
push
push
push
fwait
bound
sbb
fiaddl
xchg
fiaddl
int
sbb
jno
pop
cmp
dec
inc
mov
cmp
push
mov
and
xchg
add
rclb
inc
add
push
outsb
mov
xor
aad
mov
inc
push
dec
movsl
jmp
stos
jo
xor
jmp
mov
and
movsb
pop
icebp
cwtl
popa
inc
add
mov
dec
add
movsb
adc
add
adc
mov
rclb
mov
fldenv
inc
cmc
sub
je
push
sub
sbb
dec
jmp
stc
push
add
push
imul
mov
dec
and
adc
ljmp
popa
in
xor
test
pop
fiaddl
inc
cmpsl
push
push
and
inc
notl
mov
lcall
dec
jp
clc
mov
scas
bound
adc
sbb
sbb
and
xchg
jl
shl
mov
dec
pop
sbb
pop
adc
lods
jae
xchg
dec
pop
clc
xor
adc
orb
pop
subb
and
jo
arpl
test
mov
xchg
sub
adc
stos
add
test
mov
jl
bound
and
mov
cmp
mov
jecxz
out
adc
jb
xchg
push
rclb
push
test
dec
js
stos
adcl
ffreep
sub
roll
nop
test
push
push
sub
jecxz
xchg
stos
sahf
mov
pop
adc
ret
cmp
inc
lods
arpl
mov
or
add
adc
jo
push
insb
add
jle
inc
dec
adc
iret
inc
les
add
cmp
xchg
orb
push
xor
leave
movsb
adcl
enter
jns
xor
mov
cmp
or
adcl
enter
sbb
xor
sbb
push
stos
ficoml
mov
cmpsl
fldt
push
dec
adc
and
aad
mov
and
xchg
fcoml
pop
leave
mov
imul
data16
fdivrs
push
inc
lds
fildll
wbinvd
add
jno
sub
or
std
or
popa
jmp
enter
ja
sub
aas
enter
int
arpl
pop
push
pop
and
and
gs
mov
enter
rclb
pushl
in
add
adc
pushf
adc
ljmp
cmp
add
mov
xor
adc
xor
mov
flds
pop
ss
jne
cmpsl
add
aam
ljmp
jp
daa
push
sub
pop
pop
xor
pop
lds
sub
dec
push
fcompl
cltd
shlb
push
add
jns
fbld
xchg
xor
inc
mov
add
adc
xor
icebp
pop
xor
mov
rol
dec
stos
fwait
adc
movsl
sub
test
movsb
out
stos
dec
es
test
sub
or
inc
mov
mov
and
adcl
inc
mov
rorb
sub
shrb
insl
loope
pop
cmp
pop
xchg
mov
testb
sub
mov
cmp
and
push
ret
sub
in
and
sarb
push
sbb
inc
jb
mov
inc
movsb
mov
fstpl
rolb
mov
push
inc
or
stos
and
mov
jne
mov
sub
ss
xor
jns
adc
mov
bound
cmp
insl
btr
mov
lds
xor
popa
adc
cmp
addb
mov
xchg
std
or
jae
sub
aaa
jo
lods
out
add
add
fldt
outsl
or
std
scas
orb
and
xchg
sbb
aaa
mov
pop
mov
pop
inc
rclb
xchg
dec
sub
scas
outsb
inc
pop
mov
pop
pop
add
icebp
aam
mov
sub
imul
cs
xor
in
mov
stos
dec
mov
xor
sbb
pop
push
sub
ljmp
add
jnp
stos
mov
push
adc
sbb
add
arpl
adc
lret
xor
aad
nop
mov
lret
xor
xor
push
mov
addr16
fdecstp
sbb
inc
dec
gs
adc
andb
aam
mov
pusha
fsts
sbb
das
subb
es
dec
mov
xchg
inc
sbb
arpl
push
lret
test
stos
dec
lcall
pop
cwtl
cmp
push
scas
nop
lret
or
mov
push
push
lea
ss
add
mov
push
cwtl
sbb
clc
and
ljmp
pop
xchg
mov
cwtl
mov
fcoml
outsl
imul
cwtl
cmp
push
pop
fs
push
leave
add
and
push
add
inc
pop
data16
add
dec
dec
pop
xor
fcmovnu
jmp
fidivrl
dec
shll
stc
fdivp
ret
and
lock
xor
jmp
xor
push
and
insl
pusha
inc
jp
mov
xchg
inc
leave
and
dec
push
mov
orl
ret
add
les
xor
and
and
in
xchg
sbb
pop
dec
jne,pn
popa
and
jge
lods
inc
scas
ja
xor
mov
inc
pop
lods
sbb
fists
cmpsb
sbb
dec
in
sbb
pop
and
addl
movsl
push
jno
clc
pop
inc
sub
data16
push
dec
add
push
cmp
notl
add
test
or
xor
pop
aad
test
addb
pop
rorb
cmpsb
inc
idivl
nop
ja
daa
or
cli
and
andb
adc
xor
pop
in
into
mov
xor
cmp
inc
stos
sbb
or
out
inc
cmp
mov
adc
dec
mov
mov
push
and
sub
dec
cmpsl
pusha
aad
inc
mov
xor
icebp
add
bound
push
xchg
dec
add
repnz
mov
push
or
adc
in
or
xchg
inc
push
aaa
std
lret
sbb
mov
adc
aas
jns
mov
sbb
pop
dec
add
scas
ret
xchg
jg
sub
mov
loopne
movsb
xchg
adc
outsb
and
or
shll
sub
movsl
sti
adc
cmp
test
mov
lods
sub
cmc
sti
and
pusha
mov
inc
aam
movsl
add
sbb
push
mov
std
inc
jmp
inc
test
lds
in
mov
lods
ja
adc
stc
xor
add
and
test
jno
mov
and
ret
add
sbb
aaa
cmc
mov
mov
mov
aam
mov
inc
xchg
in
sub
xchg
cmp
lock
sub
aam
std
ret
push
lods
sub
test
inc
xor
lods
push
addr16
add
lea
cmp
wbinvd
push
xor
cmpsb
add
mov
hlt
jo
popa
loop
leave
lods
notl
add
push
xchg
lret
cli
pop
lcall
pop
xlat
adc
test
dec
or
std
rolb
xor
movsb
rclb
lcall
sbb
and
sbb
pop
push
adc
add
adc
xorb
sarl
cli
adc
add
orb
jo
mov
add
je
add
sub
xlat
dec
push
addb
adc
push
cmp
lds
dec
adc
loopne
push
xor
pop
stc
iret
inc
inc
out
int
push
test
jo
mov
xor
rclb
insl
or
dec
aas
or
push
stos
pop
int
add
sbb
and
mov
pop
test
sbb
das
mov
cmpsb
lcall
insl
xor
insl
jno
dec
pop
mov
mov
inc
xor
mov
adc
insl
pusha
add
aas
push
cs
stos
push
jl
add
ds
and
xchg
outsl
scas
test
push
xchg
or
xor
inc
ret
fistl
and
std
push
push
jno
jg
jl
sbb
add
aad
je
sub
call
stos
or
mov
cs
inc
mov
les
push
test
fucomi
dec
jbe
xor
stc
dec
mov
push
adc
pop
sbb
push
into
test
iret
dec
push
push
jg
mov
adc
mov
or
test
or
inc
subl
push
pop
inc
push
fdivrs
sub
loopne
add
movl
dec
pop
and
loope
loope
jno
xor
pop
dec
pop
lahf
adc
dec
test
or
or
xor
xor
mov
push
lea
jmp
sub
jne
dec
jg
mov
dec
aaa
jmp
adc
or
sbb
pop
mov
inc
inc
adc
hlt
xchg
ljmp
test
repz
add
imul
cmc
popf
inc
or
xchg
cmp
lods
cwtl
pusha
test
repz
seto
subb
mov
les
cmpsl
fbld
dec
adc
sub
cs
jae
or
fcomp
push
push
rclb
mov
push
pop
jo
dec
insl
ret
mov
lea
inc
jo
adc
in
stos
and
cli
fnstenv
test
stos
mov
icebp
adc
push
sbb
jno
hlt
loopne
andb
dec
andb
int3
or
push
imul
jno
inc
adc
inc
adc
pop
cmc
sbb
test
or
or
rorl
and
popa
xchg
cld
and
iret
out
jo
std
dec
pop
rclb
inc
pop
enter
icebp
or
aad
out
ret
ret
sbb
jne
inc
test
imul
in
inc
fucom
and
mov
shrl
shll
inc
jo
and
rorb
sub
mov
fs
mov
or
dec
or
jo
mov
xchg
and
push
xchg
pop
mov
jmp
loope
adc
aam
fs
test
pop
call
pop
pop
mov
and
lea
jne
xchg
pop
push
and
xor
roll
hlt
or
das
xchg
push
repz
lcall
adc
in
lret
andl
or
push
inc
cmpsb
scas
or
push
lods
mov
and
lds
fucomp
aaa
jno
jecxz
mov
shrl
pushf
mov
es
jmp
or
dec
rcrl
pop
pop
add
push
and
imul
fstpt
push
imul
add
je
cmpsl
jae
arpl
leavew
ror
or
jne
ret
rcll
mov
leave
clc
cmp
or
or
movsl
andb
mov
aaa
adc
aad
dec
xchg
shlb
mov
and
in
cmp
dec
adc
or
sbb
outsl
stos
jecxz
ret
jp
nop
inc
lret
js
out
push
adc
add
cltd
jo
fwait
dec
rorl
leave
mov
rorb
loope
adc
popf
es
or
test
xchg
mov
mov
stos
adc
imul
mov
cltd
push
add
xchg
cmp
je
xchg
dec
add
dec
inc
add
mov
movsl
bound
cmpsb
push
out
cmp
xor
add
loop
loop
test
stos
gs
pop
dec
mov
inc
dec
cmp
jo
mull
or
rclb
out
aad
nop
cmp
iret
adc
cmp
movsb
xorb
cmp
mov
xor
faddl
test
jno
pop
mov
xor
add
nop
push
push
or
cmpsl
sbb
pop
dec
xor
pop
pop
add
sbb
imull
mov
fimull
test
fs
xor
lds
or
or
shll
add
jo
adc
sbb
inc
adc
cmp
sbb
enter
cwtl
pusha
dec
sbb
push
and
dec
sbb
inc
and
insl
cmpsb
cmp
std
pop
cmp
scas
or
push
scas
or
bound
pop
push
or
mov
cmp
dec
daa
loope
cmp
add
inc
sbb
es
or
mov
sub
in
pop
sub
adc
push
adc
mov
out
dec
mov
cwtl
and
repnz
ss
push
dec
pop
aam
frstor
dec
mov
adc
inc
or
add
pusha
stos
pop
add
mov
inc
adc
and
xchg
int3
or
xor
cmc
cmpsb
cmp
cmp
mov
dec
fiadds
xor
aas
rcrb
out
aas
dec
pop
test
andl
clc
xchg
lahf
leave
pop
xchg
jno
or
mov
aaa
lds
inc
and
js
subl
add
push
sub
or
cmc
mov
shlb
in
jne
cmp
das
nop
sbb
inc
dec
mov
lea
mov
mov
add
iret
aas
inc
mov
je
inc
inc
icebp
push
mov
push
inc
jecxz
jecxz
xchg
add
adc
pop
xchg
xchg
lock
inc
pop
and
add
and
push
pushf
lds
pop
test
push
cmpsl
lcall
push
popa
pop
iret
out
pop
add
adc
xor
dec
xor
movsl
fists
loope
inc
imul
es
sbb
es
imul
test
int
add
and
popf
cmp
or
rclb
sbb
add
adc
movsl
leave
aaa
or
add
and
or
ds
test
add
inc
inc
push
outsl
std
add
rol
adc
lock
add
filds
push
rolb
xor
insb
mov
fldl2e
fdivs
lcall
dec
aaa
cltd
add
jo
lret
sub
inc
sub
idiv
rep
push
mov
cmc
cmpl
or
rolb
inc
sub
or
test
aas
ret
test
push
sbb
lcall
adc
xor
mov
and
lcall
addb
inc
pop
pop
sbb
dec
stos
or
test
jle
adc
sbb
jo
dec
or
mov
and
pop
in
adcl
and
repnz
add
rclb
mov
out
hlt
mov
in
inc
daa
test
adc
adc
scas
popa
sbb
adc
out
push
ds
inc
xor
add
xor
and
pusha
dec
mov
xchg
dec
cwtl
dec
add
sahf
insl
xor
pop
and
mov
das
fstpt
add
mov
mov
or
cwtl
mov
icebp
andl
repnz
mov
cwtl
push
add
xlat
sub
pushf
cmp
gs
loopne
push
and
push
lea
jno
mov
jg
sbb
mov
outsb
cwtl
shlb
ja
xorb
idiv
aaa
push
mov
mov
test
cmpsb
roll
inc
lea
mov
jae
cmp
inc
fldl
add
stos
mov
call
popf
movsb
or
mov
inc
and
aas
sub
sbb
jne
sub
jbe
inc
jnp
rclb
sub
push
adc
sti
aaa
rcrl
shll
dec
inc
ja
fldenv
aad
dec
xchg
sbb
sub
jno
ret
push
loopne
sbb
ret
jb
pop
fcoms
dec
inc
js
and
lods
push
sub
loope
mov
jno
stos
push
mov
add
jns
pusha
add
repnz
mov
inc
mov
pop
inc
sbb
adc
push
daa
imul
sbb
jbe
sub
sahf
xchg
mov
pop
inc
sbb
in
dec
mov
adc
lcall
and
es
std
mov
adc
mov
adc
cmp
xor
pushf
gs
fadds
aam
aad
test
pop
stos
xchg
cmpsb
nop
mov
lods
das
nop
pop
je
fisttpll
iret
out
xchg
xor
ja
mov
pop
add
scas
and
and
xor
inc
aad
sbb
or
adc
sub
cmpsb
jno
loopne
ljmp
xchg
add
sub
dec
push
rorb
sub
push
sub
or
xor
inc
cltd
lcall
imul
inc
sbb
push
in
loope
jmp
gs
fadds
int
mov
and
sbbb
jnp
cmp
sub
test
and
cmp
test
sub
and
xor
lea
out
pop
push
cmpsb
sub
stc
mov
or
inc
lods
or
push
jmp
daa
mov
cwtl
xchg
inc
stos
out
rolw
xchg
cmp
icebp
les
add
mov
rclb
out
xlat
sti
pusha
add
sbbl
xchg
iret
mov
lahf
push
inc
movsl
xchg
out
pop
imull
cmpsb
lods
jge
adc
mov
mov
lock
adc
and
ret
add
xor
xor
rorb
cmpb
cmp
je
inc
and
and
sub
mov
sub
add
adc
sbb
cmpsb
testl
xor
add
fildll
nop
hlt
push
out
dec
adc
test
pusha
les
xor
out
xor
sbb
lods
arpl
cmp
lods
push
rcrl
pop
xor
xor
or
pop
ret
jge
inc
xor
outsl
xchg
pop
sbbb
test
inc
shlb
xlat
cltd
sarl
jo
pop
call
mov
leave
popa
cmp
xor
dec
dec
in
push
orb
es
push
adc
mov
jmp
mov
inc
sub
xchg
xor
sbb
lret
cmpsb
xchg
addr16
insl
add
dec
fnsave
fcomi
iret
lret
add
sbb
adc
push
push
jle
out
das
pop
add
rcr
add
stc
test
jmp
daa
sbb
addb
je
dec
mov
push
lea
and
mov
popf
daa
pusha
xchg
add
stos
mov
adc
inc
enter
adc
dec
adc
push
loop
jo
xchg
dec
push
pop
add
test
sbb
rclb
mov
popf
repz
pusha
les
lea
adc
adc
loope
jnp
int
mov
xchg
cmc
mov
lret
and
cmp
xchg
push
mov
in
fildl
and
push
imul
xor
add
mov
inc
sub
xor
mov
xchg
movsb
shrd
push
test
mov
aad
inc
xor
xor
add
dec
es
cmp
je
jne
sub
xor
pop
xor
stc
pop
std
call
dec
hlt
push
mov
inc
or
andb
adc
inc
dec
movsl
arpl
mov
sub
xchg
dec
into
mov
mov
adc
ss
test
push
xor
mov
idiv
imul
stos
popa
cwtl
test
and
xor
dec
inc
ret
add
sbb
imul
dec
xor
orl
popf
cmp
jge
dec
adc
and
mov
push
and
movsl
and
cmp
arpl
jno
or
rcll
ss
clc
nop
fadd
loope
call
and
sahf
lock
xor
and
sbb
pop
inc
popa
xchg
scas
loopne
movsb
pop
xor
mov
or
mov
sbb
scas
mov
push
push
dec
sbb
mov
mov
jae
dec
adc
cmp
fcmovbe
xor
and
xor
mov
daa
movb
add
mov
dec
cmp
bnd
or
test
and
cmp
pop
adc
adc
dec
jne
xchg
idivb
mov
add
adc
push
scas
pushl
xchg
jecxz
xchg
rclb
js
dec
popf
les
inc
push
mov
xchg
fmull
mov
test
push
dec
inc
and
out
dec
sbb
mov
cmp
subb
cmp
daa
lock
mov
xor
and
fldcw
xchg
xor
xchg
loop
sbb
or
or
mov
mov
adcb
inc
dec
jl
bound
loop
xchg
add
add
lea
mov
add
loopne
sub
jns
jno
rolb
ljmp
lock
call
sahf
jl
jne
rclb
rorl
lret
adc
xor
out
sar
ret
stos
dec
inc
inc
repnz
add
or
fildl
add
sub
xlat
inc
pop
inc
mov
test
jg
sub
daa
inc
add
sbb
inc
les
xchg
and
jne
jle
push
jo
jno
sub
aam
sub
cmpsb
inc
icebp
icebp
adc
add
cmp
mov
mov
shlb
fucomip
out
mov
sahf
enter
movsl
mov
sbbb
pop
imul
pop
xchg
iret
stc
mov
lea
pushf
iret
int
int3
sahf
addr16
stos
or
int
xchg
xor
outsl
dec
push
adc
push
dec
lods
inc
mov
xorb
in
and
sub
pop
inc
imul
push
sarb
xlat
sub
cmp
nop
hlt
fnstsw
or
imul
das
mov
or
inc
xchg
popa
inc
mov
inc
cwtl
mov
pop
xor
leave
adc
nop
jo
imul
dec
insl
inc
push
dec
andl
sbb
pop
and
and
pop
lcall
add
mov
pop
xchg
push
out
jg
mov
push
movsb
jge
fwait
pop
inc
add
sbbb
je
dec
sub
sbb
dec
int
inc
or
inc
aaa
mulb
cmp
sbb
sbb
mov
xchg
inc
mov
or
je
mov
fs
add
mov
aas
mov
adc
push
push
mov
jp
imul
pop
ret
or
test
aas
mov
adc
shlb
fisubs
stos
mov
pop
aas
xchg
adc
cmp
insb
adc
jp
and
sbb
or
sub
rcr
mov
and
mov
js
jbe
add
adc
adc
test
leave
cmp
scas
xchg
into
inc
dec
xor
jbe
sbb
mov
xorl
cmpsb
in
rcrl
ret
roll
ja
aaa
push
popa
stos
dec
rorb
ret
ss
adc
shlb
adc
add
mov
add
and
lea
push
testl
mov
int
jmp
mov
adc
and
js
mov
sbb
dec
and
adc
push
adc
pop
xchg
xchg
or
leave
rcll
adc
add
and
mov
inc
add
data16
pop
adc
cmpl
and
aad
shrl
rcrb
cmp
inc
add
pop
cmc
mov
add
dec
rcll
xor
xor
into
sbb
adc
cmpsb
cmp
xchg
xor
jmp
into
xor
ja
les
mov
push
mov
adc
rorb
nop
mov
add
sub
pop
adc
lods
les
cmp
adc
call
decl
and
pop
push
jecxz
xor
mov
pop
arpl
jl
leave
jge
xor
loop
push
mov
stos
add
adc
pop
ja
sti
mov
and
or
out
push
sub
push
cmp
fsubrp
and
sbb
cmp
inc
pop
mov
movl
or
rclb
add
or
inc
dec
add
pusha
or
sahf
repz
mov
inc
push
push
out
sti
test
add
adc
inc
jne
and
outsb
pusha
xchg
cmp
dec
out
leave
lcall
pusha
add
push
mov
pop
sub
sbb
pop
xor
imul
mov
xchg
push
mov
adc
aad
push
das
sub
inc
outsl
xchg
lcall
sub
sub
sub
push
or
cmpsb
loope
dec
xchg
and
xor
inc
push
fs
jb
xchg
sub
add
inc
xchg
pop
sub
ret
test
sbb
jo
add
or
xchg
movsl
stos
aaa
out
push
mov
leave
imul
loopne
pop
and
inc
por
inc
pop
mov
push
pop
icebp
push
roll
ret
vmovups
lahf
cltd
sbb
add
test
cmp
xchg
jns
sub
and
sub
add
lds
and
xchg
pop
inc
jb
push
cmp
xor
aam
push
in
push
arpl
push
add
inc
ja
xor
cmp
cwtl
orb
jnp
inc
pop
xchg
repz
repz
mov
ret
push
add
adc
add
xor
loope
inc
fldenv
lds
xchg
scas
call
icebp
jg
addr16
ret
and
sub
aam
inc
in
jg
mov
add
pop
xor
shlb
jecxz
xor
dec
lods
push
dec
lcall
adc
adc
jnp
dec
arpl
sbb
pop
sbb
or
icebp
xor
push
add
sub
add
mov
lcall
imul
movsb
adc
mov
loope
in
mov
adc
add
inc
sbb
orb
andl
test
adc
add
inc
pushf
sbb
xchg
add
or
mov
inc
rorb
or
cwtl
cwtl
dec
movsl
mov
jne
pop
popa
mov
jae
adcb
dec
enter
jge
sbb
add
dec
jae
std
les
push
or
aaa
mov
sbb
mov
or
in
xlat
pop
cmp
sbb
lret
xor
mov
sbb
sbb
rclb
xchg
pop
loop
cmp
rorb
jnp
or
ss
ljmp
mov
jb
xor
sbb
xor
jo
cmc
mov
ret
stos
call
jo
jae
rolb
pop
jnp
call
cmp
add
sub
pusha
les
jg
addb
sub
cmp
and
mov
movsl
aad
loop
leave
outsl
loope
rolb
inc
jne
push
cmp
ficompl
inc
cmpsb
dec
loope
inc
mov
mov
mov
mov
dec
lcall
or
sbb
mov
adc
mov
aas
or
flds
daa
aaa
inc
jp
fadd
sbb
addb
fbld
sbb
pusha
fisttpll
ds
adc
add
lock
or
add
inc
sub
pop
or
cmp
imul
push
jmp
jns
lods
test
add
shrb
add
mov
stos
or
cmp
xlat
cs
and
sub
rorl
add
sbb
sti
mov
pop
jns
fstpl
int
jns
pop
dec
add
mov
mov
sysenter
and
leave
loope
push
inc
jb
pop
rorb
cmp
push
push
push
sbb
cmpl
test
push
jno
push
add
ss
adc
inc
ret
in
bound
cmc
mov
pop
mov
mov
add
or
aaa
popa
test
adc
addb
int
xchg
adc
sbb
std
or
jb
test
das
mov
lock
inc
dec
in
test
inc
cmp
movsl
imul
movsl
cltd
stos
lcall
mov
js
lods
mov
and
dec
pop
dec
bound
fsubs
cld
xchg
mov
xor
push
add
mov
mov
test
dec
loope
stos
enter
aaa
lcall
and
lret
sbb
sub
adc
roll
adc
push
add
js
inc
imul
or
inc
leave
xlat
fnstenv
xor
inc
pop
aas
xor
add
xor
adc
adcl
fists
pushf
loopne
push
fwait
xchg
pop
addl
push
pop
or
push
adc
add
sbb
aas
cltd
lds
mov
jo
adc
sarl
adc
js
dec
and
test
adcl
sub
ss
jl
jno
cmp
xchg
scas
xchg
addr16
or
adc
or
sbb
arpl
xchg
mov
loopne
inc
rcr
push
jmp
xchg
add
cmp
mov
je
add
fwait
xor
lcall
imul
rcr
push
imul
mov
xchg
mov
cs
push
loope
in
push
outsl
push
icebp
push
add
and
ret
mov
cmp
mov
out
push
push
repnz
and
adc
xchg
xor
stc
xchg
adc
and
dec
pop
popa
xchg
or
ljmp
inc
sbb
add
xchg
add
or
leave
stos
add
inc
insl
aaa
mov
adc
sub
add
adc
sbb
mov
inc
in
inc
or
jge
fisttps
jae
out
adc
popf
filds
dec
lret
out
inc
ret
out
ja
fadd
and
stc
les
rolb
rcrl
mov
int
rorl
add
inc
jecxz
pop
xchg
inc
cmpsl
pop
dec
mov
jle
popf
rclb
mov
pop
out
fldenv
push
cmp
rcl
or
or
fwait
mov
cld
imul
adc
ret
lahf
sbb
mov
mov
add
pusha
jge
shrl
pushf
les
loope
insl
dec
dec
or
add
ja
roll
loop
addr16
test
inc
rolb
adc
cmp
push
adc
fwait
popa
push
inc
or
jno
push
test
mov
mov
lods
inc
or
add
andb
push
dec
mov
cmc
add
mov
pop
pushf
ror
fstps
sbb
push
mov
adc
lea
pop
dec
sbb
int3
cmp
sub
mov
insb
mov
repnz
addr16
fcmovbe
add
adc
adc
push
rorl
inc
cmc
out
sub
xchg
pusha
push
sbb
lcall
mov
mov
push
xchg
cmp
fmull
lcall
and
jmp
push
test
jne
icebp
sti
std
mov
adc
and
mov
add
ss
xlat
ljmp
xor
and
mov
ja
push
pop
jb
xorb
cmp
lret
and
xor
inc
movsl
test
int3
test
inc
sub
push
adc
aam
mov
dec
push
dec
pop
adc
nop
push
dec
jecxz
int
jmp
mov
adcb
enter
stos
mov
das
sub
adc
cmp
jb
push
inc
mov
mov
and
test
xor
cmp
aam
add
xlat
jbe
xlat
aad
sbb
pop
or
xchg
xchg
add
xor
cmp
addl
bound
rolb
pusha
inc
push
icebp
mov
rclb
or
lea
jno
pop
inc
xor
cwtl
mov
inc
add
addl
lea
aaa
sbb
add
xchg
imul
pop
xor
jge
mov
jnp
push
adc
mov
sbb
lahf
pop
inc
dec
dec
pop
mov
push
sbb
adc
std
xor
push
inc
test
adc
pop
xchg
add
or
enter
push
aaa
movsl
xchg
loopne
and
rolb
movsb
mov
shrl
negl
in
pop
cltd
hlt
push
pop
xor
popa
sbb
add
sbb
cld
xlat
into
add
jne
sbb
aad
jno
ret
std
mov
xchg
cmp
dec
cmp
push
pop
inc
hlt
ret
arpl
push
in
mov
rorb
add
sub
sbb
cmpsb
loop
pop
pop
icebp
jb
or
inc
push
js
out
pop
mov
jge
xchg
out
popf
pop
xor
adc
test
mov
test
nop
andb
cmovb
adc
and
sti
add
subb
pop
or
roll
sbb
mov
dec
and
scas
sub
push
xchg
and
hlt
cmpsl
scas
cmp
mov
iret
or
pop
cltd
adc
add
cmp
test
fldcw
movsb
imul
lret
xor
xchg
push
mov
lcall
imul
fldl
cltd
in
push
andb
xchg
mov
mov
adc
pop
movsl
je
test
in
gs
out
rorb
test
cmp
and
jae
adc
sub
push
xchg
movsb
mov
stos
cmp
inc
test
xlat
jne
lods
xor
shll
test
inc
andl
xor
jbe
sbb
jecxz
or
cmp
arpl
lcall
inc
movsl
add
lea
sub
icebp
cmpsl
add
and
push
popa
push
push
adc
inc
mov
or
cmp
popa
les
push
dec
mov
aam
lods
push
push
adc
adc
sahf
adc
test
xchg
cmpsb
jno
inc
push
mov
sbb
popa
cltd
mov
push
and
movsb
push
add
push
push
dec
xor
lret
arpl
sub
mov
stos
out
jno
mov
test
dec
out
je
lock
or
and
dec
jl
xor
loopne
or
movsl
sbb
xchg
jno
add
pop
dec
out
xor
addb
mov
sub
sub
pop
or
push
jmp
daa
test
popf
imul
and
dec
inc
int
out
adc
push
cmp
inc
xor
sahf
loopne
push
movsb
xor
push
jb
inc
mov
jecxz
leave
aam
outsl
jo
stos
add
out
popa
out
aam
inc
aaa
and
mov
inc
shlb
add
mov
sub
je
rolb
jg
in
sbb
mov
push
inc
js
or
rorl
xchg
cmpsl
mov
and
lahf
ss
and
push
and
lcall
rcll
mov
insb
add
cmp
pop
jns
test
sbbl
push
pop
mov
xchg
int
dec
test
jge
push
fildl
iret
cmp
leave
xchg
or
ljmp
jb
imul
inc
cmp
xor
in
pusha
movsl
push
adc
cmp
int3
cmp
test
movsl
test
and
test
push
push
mov
add
subb
add
mov
adc
jno
pop
xor
mov
bound
dec
add
pop
sbb
inc
dec
add
cmp
push
pusha
jae
outsb
sub
jne
dec
push
pop
pop
dec
or
jns
and
icebp
adc
and
add
mov
push
shlb
mov
mov
xor
hlt
mov
sbb
dec
ret
inc
sbb
scas
mov
add
inc
push
in
outsb
push
jp
push
popa
cmp
jmp
int
and
inc
ds
sbb
pop
or
jg
add
dec
das
clc
sub
mov
fwait
cld
or
push
lods
pop
or
mov
lcall
dec
xchg
mov
insl
data16
adc
movsl
sub
sbb
arpl
dec
ret
shlb
jbe
mov
push
loope
sbb
pusha
inc
lds
arpl
push
cmc
aam
int3
xor
or
push
fiaddl
jbe
das
mov
adc
cwtl
sub
jmp
repz
sbb
mov
and
in
xchg
jecxz
adc
push
repz
inc
ret
cmp
pop
lea
cs
lret
sbb
and
jecxz
push
adcl
push
cltd
shll
iret
gs
pinsrw
les
pop
ja
les
jo
inc
sub
orb
xor
cmp
mov
or
inc
pusha
push
inc
ret
in
mov
or
or
or
dec
lcall
enter
xor
stos
add
in
cmp
sbb
lods
add
test
loope
rcll
mov
adc
int3
adc
lret
inc
cmpsl
mov
cmp
lock
jmp
adc
pop
pop
xchg
addb
add
push
int
push
int
xor
xor
stos
rclb
int
cs
lcall
pop
leave
pop
adc
aad
push
or
add
mov
scas
loope
notl
mov
loopne
lret
iret
pop
je
mov
jno
ret
mov
ret
sbb
dec
imul
clc
jae
push
adcl
sbb
mov
rclb
loop
push
inc
jns
jl
in
dec
sbb
adc
xchg
xchg
pop
or
pop
xor
mov
dec
bound
int
popa
and
test
mov
sub
jl
xor
shrb
xchg
fcmovb
and
pop
iret
or
imul
repz
shrb
and
or
push
mov
or
jno
cwtl
xchg
adc
add
push
xchg
shlb
cmp
rol
or
lcall
jns
dec
les
add
mov
mov
adc
pop
rclb
pop
xchg
ret
testl
adc
in
lds
inc
pop
mov
cltd
cmp
pop
xor
push
jne
jne
sbb
lret
push
repnz
aad
xor
cmp
xlat
push
adc
mov
jne
sub
cmp
jmp
push
inc
loope
insl
dec
enter
dec
adc
rol
and
pop
lods
adc
adc
in
js
mov
shrb
xchg
and
aaa
mov
xchg
or
xor
push
sbb
cmp
adc
xchg
xor
addb
xchg
rorl
mov
jg
mov
cmp
add
jbe
add
add
enter
cmpsb
nop
adc
inc
mov
pop
and
stos
icebp
imul
mov
jp
cmpsb
in
sbb
inc
clc
push
jbe
adc
xor
add
mov
adc
decl
jo
or
adc
cld
sbb
mov
xor
sarl
bnd
inc
aas
js
inc
ja
and
das
mov
repz
dec
adc
adc
dec
loopne
push
sub
cmpsb
xchg
cmpb
mov
jb
xor
and
and
mov
mov
add
nop
bound
cmp
push
dec
jnp
or
addb
mov
orl
les
test
sub
xor
ret
xlat
test
mov
fidivrl
or
or
pusha
and
gs
push
pop
push
jno
sub
sub
and
or
fisubl
imul
repnz
es
fstpt
cmp
out
cli
xchg
adc
orb
and
push
or
xchg
xchg
adc
movsb
cmp
stos
mov
inc
scas
and
inc
pusha
call
orb
dec
int
jo
lea
xor
insl
lea
sbb
jno
shll
jae
dec
imul
jmp
xor
sbb
ret
test
add
dec
lods
or
aaa
mov
cmp
add
shrb
popa
pop
and
mov
stc
inc
sub
or
xor
adc
sbb
jno
es
popf
inc
lods
mov
dec
pop
insl
add
pop
inc
or
je
repz
insb
stc
fistl
dec
add
roll
leave
pop
test
dec
jmp
dec
fsts
push
movsl
inc
jmp
adc
seta
dec
add
pop
aad
and
loopne
pop
xchg
inc
popa
xor
adcl
frstor
mov
xor
imul
sbb
xor
popa
mov
xor
repz
das
xor
jg
cmp
je
jo
loop
arpl
jecxz
jle
pop
repz
arpl
xchg
pop
popa
sbb
adcl
add
jo
pop
xor
pop
xorl
cmp
cltd
leave
add
loope
dec
sbb
mov
sub
loopne
cmc
dec
insb
loopne
pop
push
push
pop
pop
mov
sti
das
add
orl
inc
dec
and
pop
subb
sub
adc
test
xlat
ret
fistpl
dec
adc
add
mov
add
dec
or
test
sub
hlt
mov
out
inc
int3
adc
xchg
xchg
add
daa
nop
add
sahf
add
sti
movsl
rcrb
inc
addr16
push
xor
mov
rolb
xor
sti
popa
mov
mov
jne
ja
les
push
push
pushf
loope
scas
mov
sbb
icebp
cli
pushf
cmpsl
add
sub
add
adc
add
add
fistpll
pushf
pop
test
adc
mov
dec
inc
jecxz
push
pop
sub
andl
and
mov
adcb
rclb
rcrb
add
inc
daa
imul
jae
sbb
cmpsl
xor
leave
push
inc
dec
mov
dec
adc
test
xchg
jp
pop
ret
shr
dec
or
in
int3
cmpsb
push
sbb
add
dec
mov
jmp
nop
pop
ret
pop
mov
test
adc
test
rol
jp
inc
adc
lea
inc
sbb
xor
cmp
or
add
pop
rorl
aaa
sbb
mov
xchg
push
push
add
lret
sbb
bound
jo
xchg
ret
leave
fwait
gs
pop
xchg
mov
mov
push
inc
lods
xor
dec
popa
or
lret
xchg
stos
adc
sbb
movsl
or
inc
pop
mov
mov
iret
sti
lods
rorb
movsb
xor
and
ffree
push
or
pop
jae
loope
xor
sbb
lods
push
xchg
sub
add
inc
clc
fs
dec
add
add
cmp
dec
test
repz
pop
jnp
loope
aad
adc
lret
ss
cmp
cmp
dec
push
cwtl
ljmp
add
inc
inc
and
jo
addl
add
lods
movsl
jecxz
mov
jo
push
dec
xchg
push
inc
lret
mov
lea
sub
ret
dec
inc
cwtl
mov
fsubrl
push
int
das
inc
and
push
add
jo
add
lds
inc
sub
jnp
mov
inc
subb
jae
adc
sbb
xchg
shrl
inc
dec
or
mov
xchg
push
xor
adc
adc
pop
adc
and
and
and
aaa
lret
adc
add
jmp
cwtl
stos
lea
adc
xlat
dec
jb
pop
push
lret
adc
pusha
jns
push
rorb
inc
orl
pop
ret
xor
inc
xchg
inc
pop
scas
and
inc
aam
push
add
outsb
popa
nop
push
xchg
jnp
mov
adc
js
xchg
jno
inc
popa
xchg
out
xchg
sub
or
or
xchg
fiadds
sub
rorl
push
mov
jae
pop
test
pop
ljmp
movsb
test
cmpsl
inc
jmp
and
mov
icebp
push
mov
fadds
inc
mov
insb
xchg
jo
pop
inc
inc
adc
pop
daa
imul
xchg
adc
insl
dec
jne
orl
and
cmp
or
stc
cmp
add
sbb
sarl
test
xchg
xchg
lret
cmp
imull
mov
into
xchg
lret
xor
jmp
push
mov
test
negl
pop
sbb
or
inc
daa
and
sub
loope
pop
shrl
jns
enter
jbe
pop
movsl
mov
outsb
sbb
inc
xlat
inc
xchg
xchg
mov
jno
inc
inc
add
mov
hlt
daa
sbb
push
or
dec
mov
push
jo
adc
push
adc
addb
push
add
mov
rcll
dec
xorl
stos
sub
shrl
cs
sbb
dec
popa
xor
mov
adc
push
leave
push
adc
add
aaa
pop
jp
and
std
dec
add
filds
jb
adc
imul
adc
pop
xor
cmpsb
add
cli
adcb
scas
inc
icebp
in
shll
xchg
idivb
mov
dec
add
ds
or
xchg
sub
sub
sub
aam
xchg
movsl
add
movswl
cmp
mov
addl
dec
and
test
add
pushf
sub
sub
inc
mov
pop
xor
incl
or
inc
and
imul
mov
lods
inc
test
dec
sbb
stos
add
mov
sub
pusha
test
mov
cmp
xor
mov
cmp
shlb
les
inc
or
or
xchg
add
sbb
sbb
ret
push
bound
outsb
orb
dec
push
imul
and
cmp
sub
testl
inc
lret
mov
sti
add
inc
aad
mov
mov
dec
or
dec
push
add
sub
jno
sbb
out
mov
and
jno
adc
cli
pop
ret
aaa
fs
shlb
in
xchg
xchg
stc
testl
push
adc
sub
and
sbb
and
jb
in
adcl
inc
cmp
sbb
shll
push
sbb
xchg
test
dec
loopne
or
adc
sub
mov
pop
pop
fwait
pop
or
or
push
sub
pop
dec
adc
cmp
adc
xchg
loopne
add
push
mov
add
repz
test
repnz
out
or
sbb
aam
rolb
push
and
mov
nop
mov
popf
and
in
and
sbb
or
ret
aas
subb
xor
sub
pop
pop
imul
dec
inc
cmp
push
in
push
dec
mov
repnz
and
and
arpl
addl
mov
sub
and
push
push
jbe
push
xchg
mov
inc
mov
add
clc
aam
in
jl
movsb
mov
dec
mov
or
push
jno
lret
ljmp
movsl
inc
inc
ja
mov
test
testl
inc
adcl
xchg
sub
adc
pop
in
inc
les
mov
daa
call
or
sbb
test
adc
scas
jbe
pop
pop
gs
and
jp
inc
cmp
lods
inc
add
xor
mov
push
jns
jno
in
mov
xor
iret
out
inc
add
into
sub
pop
mov
test
sub
pushf
mov
sarb
push
add
out
sub
dec
roll
aad
cs
sbb
loop
push
movsl
mov
outsl
scas
lods
stc
cs
jmp
das
push
lods
mov
sbb
dec
xchg
andl
add
jge
ja
or
nop
bndstx
mov
rcl
adc
movsb
pop
inc
in
test
lods
pop
dec
sub
sbb
add
adc
daa
dec
lods
xchg
or
ret
sbb
nop
out
mov
mov
xchg
or
or
adc
maxps
mov
rorb
repz
xor
sbb
cmp
jbe
add
sub
ja
lret
mov
out
std
lahf
and
add
mov
inc
loopne
xchg
xchg
inc
push
dec
cs
dec
jne
and
sbb
mov
and
inc
jmp
adc
xor
push
cs
push
cmpsb
ljmp
test
lods
adc
sbb
xor
or
daa
popa
xlat
test
push
aad
test
and
arpl
mov
add
mov
push
push
or
inc
sbb
adc
and
xor
mov
mov
arpl
shlb
and
test
and
bound
movl
insl
dec
into
xor
rol
mov
rclb
jb
push
xchg
sbbl
popa
add
jmp
cmpsb
test
mov
sbbb
lods
cmp
das
sbb
addr16
sbb
xorb
add
mov
or
cld
pop
add
pusha
adc
sub
fwait
add
xor
scas
shlb
adc
pushf
jne
push
xchg
jae
mov
nop
es
scas
cmp
cmpsb
xchg
pop
add
movb
pop
xchg
xchg
sahf
stos
ja
jne
add
dec
ficoml
push
imul
jne
jno
mov
xchg
push
cltd
aad
pop
test
dec
add
lahf
xchg
xchg
test
push
add
mov
test
xchg
mov
or
xchg
stos
and
pop
xlat
sub
mov
dec
sbb
arpl
call
sbb
mov
pusha
push
push
push
aam
mov
jo
dec
and
pop
push
jp
push
or
lea
aas
adc
movsb
xchg
push
push
sbb
leave
xor
mov
adc
add
and
imul
fcmove
mov
repz
pushf
cmpb
xchg
sbb
leave
push
jnp
stos
push
inc
mov
test
sbb
jmp
add
cmp
push
outsb
push
shlb
daa
xor
int
fimull
jns
lods
ja
push
jb
rorl
insl
test
and
xadd
sbb
repnz
mov
roll
cmp
clc
cmc
xchg
adc
into
lret
sbb
mov
imul
sub
adc
adc
sarl
adc
aas
add
test
xor
sub
jnp
xor
adc
leave
rolb
movsb
mov
push
das
pop
std
lcall
lods
pop
sbb
and
rcrl
add
jg
dec
inc
add
or
add
xor
jbe
jno
stos
or
inc
fwait
xchg
das
enter
jecxz
test
bound
pop
adc
idiv
push
or
ror
dec
xor
and
inc
in
cmp
adc
push
shlb
mov
add
pusha
and
or
push
repnz
inc
add
nop
and
rolb
test
adc
or
mov
ret
aad
je
xchg
outsl
roll
ljmp
rorl
sub
xchg
aam
daa
ss
push
jno
aad
pop
dec
rol
xor
sub
bnd
inc
or
mov
jo
dec
or
xchg
or
sbb
sub
push
add
adc
and
inc
xorb
xchg
push
inc
or
ret
cmp
inc
pop
sbb
imul
dec
jo
ss
mov
imul
inc
aad
ljmp
je
add
sub
stc
sub
adc
adc
movaps
aaa
fildl
arpl
sti
adc
pop
add
gs
inc
gs
addb
mov
test
sub
fdivp
sub
nop
xchg
popf
adc
mov
popa
mov
shlb
add
ret
push
lea
insl
subb
sbb
fwait
sub
les
push
xchg
mov
or
lahf
add
xlat
call
ja
imul
addb
filds
mov
cmp
sub
insb
pop
repnz
es
std
xchg
push
and
mov
stos
pop
mov
inc
mov
push
loope
and
and
cmpsl
loope
xor
fistpll
fsubrl
aad
adc
sbb
shrl
cmp
inc
fmull
mov
pop
mov
sub
in
and
outsl
mov
aam
and
or
sti
inc
aam
mov
pop
mov
cwtl
dec
sub
mov
push
shll
test
loopne
inc
dec
loopne
xchg
stc
adc
or
mov
push
push
adc
sub
into
dec
and
dec
lret
and
jo
sub
imul
lret
in
inc
mov
fists
pop
xchg
js
ret
loop
push
movsl
mov
les
mov
loope
icebp
and
mov
rorb
dec
push
mov
aad
imul
pop
imul
add
movsl
inc
xchg
aaa
cmp
mov
or
mov
nop
add
adc
cli
outsb
inc
lcall
test
shl
cmp
test
push
add
jno
sub
adc
sub
adc
sbbb
ds
and
jno
add
mov
jnp
jno
loop
adcb
sbb
loop
pop
imul
sub
xchg
xchg
movsb
je
stos
mov
dec
dec
mov
jnp
lds
and
jecxz
js
das
rclb
pop
mov
sub
add
jns
mov
rcrl
cli
test
inc
push
xchg
adc
dec
loop
aam
sub
xchg
sub
mov
sbb
push
loop
jae
jp
adcl
xchg
mov
js
sbb
or
add
mov
lock
adc
jno
sbb
push
adc
icebp
pop
test
int
mov
or
ja
dec
jno
add
cmc
test
push
pop
or
and
or
cmpsb
inc
push
ja
cs
inc
fidivl
mov
sbb
test
mov
out
and
into
imul
movsl
xorl
sub
inc
add
xor
jecxz
outsl
stos
add
leave
pop
sti
xchg
repz
shlb
shll
or
dec
mov
xor
xchg
xor
lret
mov
pop
ja
mov
add
jno
stos
scas
sbb
insl
ret
or
xor
add
popa
push
and
and
shrl
test
cmp
in
or
loope
and
xor
leave
movsl
dec
dec
xchg
jo
mov
jne
inc
mov
dec
and
mov
xor
mov
push
inc
mov
rcl
push
cmpsl
cmpsl
sub
out
sub
adc
shl
imul
lcall
sbb
push
add
add
xor
mov
inc
sbb
inc
push
test
aam
sub
cmp
pop
cmp
adc
cwtl
xorb
jge
dec
push
cmp
sub
notl
add
mov
or
xor
mov
bound
test
pop
and
cmp
add
arpl
inc
and
test
mov
mov
dec
add
adcl
push
push
push
imul
out
and
test
sub
addl
test
push
in
movsb
and
test
push
dec
loopne
or
push
rcrl
add
mov
ss
insb
shll
sub
je
mov
xor
in
imull
inc
lcall
sbb
sub
push
jmp
daa
add
inc
fiadds
testb
sbb
lds
and
daa
stc
mov
aas
push
lahf
imul
inc
and
mov
cmp
mov
cwtl
ljmp
xor
push
pushf
lcall
jg
out
push
pushf
shlb
lret
aas
in
jp
fstpt
cmp
xchg
add
packssdw
jge
jle
cs
popa
sarl
add
popf
stos
dec
add
push
mov
sub
aam
dec
inc
or
cld
pop
insl
lcall
loopne
jnp
loope
add
sub
xchg
cmp
or
call
insl
loopne
jb
cmc
and
cmpsb
mov
xchg
and
mov
sub
test
adc
popf
add
sub
mov
roll
add
xchg
mov
pop
enter
loop
imul
jne
inc
cmp
push
jo
dec
addr16
sub
pusha
add
nop
outsb
incl
push
lds
dec
sub
xor
aam
add
jae
jg
inc
sahf
or
mov
inc
enter
xchg
xchg
cmc
sbb
and
bound
outsb
leave
cmp
call
dec
repnz
mov
test
inc
hlt
pusha
lea
push
mov
lcall
loopne
or
jle
and
loopne
sub
mov
je
xor
mov
xchg
adc
push
jg
into
unpckhps
and
aas
cmp
jne
mov
dec
cltd
mov
adc
subb
pop
or
vandnps
addl
test
lret
movsl
ds
pop
adc
mov
mov
sub
or
mov
push
es
adc
shrb
or
xchg
dec
push
inc
or
cmp
fnstenv
xor
bound
jmp
test
mov
adc
cmp
popf
sub
pop
sub
dec
xor
inc
xchg
push
out
mov
adc
test
dec
and
and
cs
and
addl
or
mov
inc
mov
lds
add
sbb
inc
cmp
sub
sub
cmp
xchg
jo
add
xchg
fcompl
dec
insl
pop
cmpsb
pop
inc
xchg
loope
cmpsl
push
fwait
rolb
jge
sbbl
loopne
xor
sbb
cmp
loop
sbb
movsb
xor
sbb
dec
rcll
cwtl
or
stos
inc
xchg
mov
or
scas
aad
fldcw
outsl
mov
roll
in
popf
sbb
scas
push
out
addb
adc
xchg
xchg
pop
mov
ret
mov
add
ds
cld
rclb
sbb
pop
xor
ret
pop
inc
pop
ret
movsl
sti
je
inc
or
loope
xor
roll
push
shl
fnsave
cli
out
add
sub
out
inc
sbb
shlb
cwtl
stc
test
pusha
out
arpl
xchg
push
add
stos
add
sbb
jno
inc
push
test
pop
inc
inc
dec
inc
sarl
test
push
lds
or
or
inc
jne
not
dec
loopne
and
subb
inc
stc
mov
aad
insb
fucomip
js
rorl
test
adc
aam
xchg
test
sbb
xchg
in
test
sub
cmp
cli
dec
push
mov
push
movsl
or
sub
ror
mov
repnz
pop
push
repz
pop
aam
add
int3
xor
sbb
test
test
fistl
call
push
outsb
mov
and
sbb
add
lahf
nop
cmp
add
rcrl
and
aaa
adc
repnz
mov
lds
mov
push
das
pop
ret
push
mov
sub
or
mov
sbb
or
inc
sti
imulb
imul
into
lret
add
sbb
push
dec
scas
or
cmp
xor
mov
xorb
xor
xchg
jl
mov
ret
jmp
add
push
or
or
push
or
or
mov
cmovl
xor
push
and
jns
and
push
dec
pop
in
rclb
mov
call
mov
test
cmp
mov
mov
popf
inc
sbb
or
cli
mov
lods
pop
lds
xchg
ret
push
rolb
jge
adcb
inc
push
mov
daa
push
xor
or
push
cmp
add
nop
inc
dec
cmp
testl
jne
push
adc
xchg
in
sbb
out
loope
cmp
adc
or
or
inc
scas
jg,pt
inc
xor
push
das
fstpl
push
mov
mov
dec
test
xchg
jne
push
pop
mov
sub
or
adc
mov
xchg
cmp
rorb
adc
jne
cmpsl
cmp
sbb
inc
xor
mov
cmc
mov
mov
int
sub
lock
sbb
arpl
push
lahf
aam
push
push
push
gs
add
mov
lods
inc
scas
and
and
inc
insl
adc
push
sbb
out
sbb
jecxz
stc
inc
lret
lea
fstp
rorb
subl
or
push
mov
and
adc
add
les
cmpsl
fisubrl
pop
fistps
or
or
adc
pop
mov
inc
or
push
sub
sub
and
mov
sbb
fadds
mov
and
mov
and
mov
inc
test
xchg
jae
add
movups
sub
jbe
int3
mov
lds
sbb
rol
fcoms
xchg
rcrb
mov
lds
add
pop
in
imul
push
test
pusha
aaa
std
bound
dec
sbb
out
out
jno
les
mov
sub
mov
dec
xor
rolb
push
fldcw
push
pop
imul
insb
or
lds
jmp
and
xchg
shrb
dec
add
xchg
xlat
sarb
push
add
push
sbb
clc
jge
mov
shl
dec
push
movsl
or
movb
jl
loopne
add
and
add
adc
jg
nop
and
xor
daa
stos
and
mov
out
and
inc
add
xchg
xchg
ret
dec
jecxz,pt
dec
sub
outsb
adc
shl
mov
push
jg
xor
lds
pop
icebp
movsb
out
inc
scas
stos
fs
or
xchg
inc
cmpsb
xchg
and
and
les
mov
lcall
dec
push
dec
cmp
inc
dec
jle
dec
daa
je
ret
js
cmpsb
mov
and
orl
outsb
sub
and
fists
inc
inc
mov
xchg
jo
dec
xor
leave
sti
fwait
dec
cmp
push
or
jb
and
jns
push
mov
inc
mov
add
jno
jns
imul
pushf
xor
mov
jae
gs
xchg
loope
sti
mov
cltd
push
inc
and
cltd
gs
adc
dec
adc
shlb
aas
add
aad
imul
dec
daa
push
adc
out
inc
mov
xlat
ljmp
xchg
test
cwtl
xor
mov
pop
mov
arpl
in
sbb
int3
ja
pop
rorb
cld
mov
and
pop
call
xchg
jbe
add
dec
lahf
add
mov
popf
and
mov
stc
test
test
rolb
movsl
gs
js
mov
adc
jne
int3
or
sbb
pop
ret
movsl
or
cmpsb
xlat
and
ret
add
mov
mov
xchg
btsl
shll
add
loopne
add
sbb
and
mov
shlb
fistpl
xchg
sub
mov
xor
push
jp
cltd
mov
and
adc
out
or
scas
sub
inc
movsl
call
or
inc
scas
test
xor
loop
pusha
les
add
lcall
lock
xor
pop
adc
and
sub
dec
sub
jle
test
std
add
add
or
mov
push
aas
das
movb
jne
test
jne
pop
pusha
pusha
sbb
rclb
popa
shlb
mov
shrb
ret
push
call
push
notb
js
lret
dec
loopne
or
push
int
xchg
xor
xor
das
adcl
mov
xorb
pop
push
mov
cmp
mov
call
ds
and
orl
or
ds
sub
pop
mov
sbb
add
and
dec
ja
je
call
clc
sub
mov
or
inc
mov
mov
add
add
sub
int3
iret
aam
punpckhdq
or
and
orl
or
clc
jp
xchg
mov
ret
xor
cltd
lea
nop
bound
iret
stos
add
or
sti
fucom
dec
in
mov
add
add
or
mov
sbb
out
and
add
jns
cld
xor
movsl
test
dec
xchg
mov
push
cltd
xor
mov
cmpsb
push
cltd
std
jmp
fstpt
aaa
hlt
mov
add
pop
and
xor
or
add
jmp
out
push
sbb
push
sub
adc
xchg
xchg
pop
mov
add
jno
or
or
add
add
or
adc
or
popf
and
mov
ja
jns
daa
and
mov
push
mov
mov
stos
pop
imul
aad
pop
cmpb
hlt
bnd
dec
sahf
test
sub
mov
sbb
cmp
cmp
adc
xor
push
nop
xchg
or
test
inc
stos
addl
inc
xchg
jmp
and
lret
push
and
add
mov
add
movsb
arpl
ffree
enter
pop
pop
pop
xor
lods
aad
ret
inc
mov
mov
adcl
cmp
mov
test
cld
cmp
or
mov
je
aad
inc
cwtl
dec
call
dec
addr16
push
add
dec
add
jb
bound
nop
push
ja
aam
push
cmp
jno
pop
jo
out
mov
add
test
jae
cmpsb
push
dec
pop
jle
push
insb
dec
mov
jne
fnstenv
leave
sbb
jbe
out
inc
sbbb
rol
push
cmc
lock
dec
pop
loope
xor
mov
stos
push
rolb
pop
xchg
movb
push
test
and
pop
mov
bound
imul
or
pop
add
mov
cmpsb
bound
jne
pop
inc
outsl
mov
lods
push
repnz
inc
int
cmp
scas
sub
mov
int3
adc
fstpt
push
xchg
xor
test
inc
push
addb
mov
dec
fdivrp
stos
mov
or
lahf
inc
mov
rolb
rorl
xchg
xor
cmp
les
fwait
push
fstpt
lea
xchg
jo
sbb
add
test
add
inc
add
cmp
adc
sub
dec
sbb
rol
adc
int
movsb
push
imul
mov
imul
mov
xchg
shll
je
add
clc
jmp
jp
push
imul
fwait
inc
loope
mov
pop
push
cwtl
andb
fsts
dec
imul
stc
popf
cwtl
sarb
sub
lods
adc
inc
sbb
in
nop
pop
sbb
sub
inc
add
push
movsl
mov
lret
mov
add
add
or
gs
mov
push
jo
sub
test
lcall
xor
movsb
dec
sahf
mov
shlb
xlat
mov
add
cmpsb
sti
hlt
jno
insb
inc
cmp
xor
dec
pusha
dec
or
pop
insl
addl
arpl
cltd
cmpsb
lock
push
scas
out
addb
repz
mov
cltd
xchg
mov
in
push
mov
xor
xchg
in
or
dec
andb
sti
lcall
xchg
cmp
testb
push
nop
cs
jmp
stos
movsl
int3
add
sub
mov
xor
pop
inc
add
mov
xchg
and
sbb
mov
pop
aam
outsl
adc
jl
xor
and
mov
mov
stos
es
dec
mov
orl
mov
dec
lcall
lods
push
and
mov
jno
lret
ljmp
xchg
int
add
xor
push
adc
xchg
nop
dec
imul
mov
dec
pop
daa
pop
leave
add
xchg
imul
ret
xor
push
push
in
cmp
jno
sbb
and
xchg
ret
or
ret
test
gs
daa
jno
inc
push
lods
add
jg,pn
inc
dec
push
repz
in
or
pop
lds
sbb
inc
pusha
lret
adc
adc
mov
inc
popa
mov
push
mov
in
cs
movsl
adc
or
push
dec
imul
or
sub
pop
sbb
add
or
jg
lcall
mov
cmpb
loopne
test
sti
aad
mov
xchg
or
ret
jp
inc
mov
bt
mov
pop
xor
add
stos
or
mov
push
jns
mov
ljmp
cmpsb
sub
mov
out
mov
xor
ficoml
test
jnp
xor
pushf
lret
and
sub
or
sbb
jo
jno
insb
dec
xor
pop
pushf
mov
rorb
sbb
mov
or
sbb
mov
xor
addr16
add
sub
cwtl
scas
fidivs
inc
cli
add
add
adc
adcb
xchg
cmc
pop
cltd
push
cmp
mov
cmp
insb
mov
lret
add
sub
shlb
add
mov
dec
cmc
lods
or
push
scas
xchg
dec
mov
push
inc
sub
test
mov
mov
xor
test
mov
test
sub
and
movsl
push
and
jmp
dec
adc
push
xchg
jecxz
pushf
fdivs
test
loope
xor
cmpsl
mov
mov
sbb
inc
push
shrb
loopne
int3
lea
or
or
or
les
add
add
addr16
jo
movl
insl
scas
mov
testl
nop
sets
fcompl
sbb
shrl
sbb
sbb
movsb
xor
add
inc
mov
sub
test
dec
push
push
dec
pop
xor
dec
jnp
lea
cmpsb
inc
add
mov
push
sbb
mov
sub
pop
pushf
bound
adc
and
pop
inc
jle
push
mov
cmp
inc
dec
test
and
inc
cmpsl
inc
stc
mov
push
out
out
cmp
mov
rclb
push
cs
pop
adc
movsl
pop
or
sbb
add
sub
stc
sahf
pop
xor
add
imul
adc
in
adc
xchg
push
cmp
xor
push
dec
pop
loop
xchg
jmp
sub
mov
jmp
lods
mov
jmp
test
cs
and
mov
daa
xchg
cwtl
fiadds
adc
in
inc
xchg
and
stc
lahf
xor
pop
ucomiss
adc
dec
xor
push
jmp
ja
test
and
push
push
push
das
cs
dec
inc
lods
in
sbb
add
xor
ret
sub
push
ret
pop
xchg
pop
ret
or
dec
incl
mov
les
in
inc
pop
xor
sarb
or
xchg
xchg
and
nop
cmp
loope
sbb
ret
int3
fistpl
inc
mov
out
movsb
stc
xchg
cmp
aad
ret
cld
jbe
ds
sbb
or
pusha
and
rorb
mov
inc
and
adcl
push
mov
imul
mov
ret
xchg
movsb
jo
add
pop
sbb
inc
and
add
adc
add
xor
sub
add
dec
cmpl
adc
xchg
sarb
adc
outsb
in
xchg
and
xor
mov
es
jae
jb
rclb
aam
mov
or
enter
push
lds
std
les
inc
mov
add
mov
mov
push
sti
es
call
adc
pusha
mov
sub
xor
pavgb
loopne
mov
imul
cmpsl
movsl
loopne
adc
shll
rol
dec
add
shrb
inc
or
mov
xchg
jbe
hlt
adc
roll
mov
dec
dec
adcl
sbb
test
out
out
arpl
xchg
popa
out
pop
push
daa
call
lcall
adcb
and
jmp
xchg
imul
bound
ret
rclb
aad
rolb
andl
pop
dec
adc
sub
dec
jg
inc
bound
mov
mov
inc
or
rorl
bound
jp
xchg
mov
push
aad
xchg
or
pop
pusha
aaa
shrl
xchg
imul
or
pop
jge
nop
lret
subl
sbb
out
sub
mov
and
movsb
cs
mov
mov
js
push
pop
add
shrb
mov
mov
hlt
daa
xchg
gs
mov
fsubs
xchg
push
add
push
adc
pop
mov
lahf
jl
adc
loop
sub
adc
lea
lods
outsl
in
sub
sbb
mov
mov
movsl
push
cs
or
sar
mov
cmp
jno
sbb
or
push
and
xor
lods
inc
imul
mov
or
insb
out
inc
adc
out
xchg
fcoml
subb
xchg
out
add
or
pop
and
push
add
std
dec
scas
add
mov
inc
test
xchg
inc
aad
inc
xchg
dec
push
mov
das
mov
sub
popf
xor
das
mov
dec
ret
mov
addl
add
or
aad
inc
jmp
push
jns
mov
js
gs
pushf
push
and
adc
cwtl
sbb
jg
mov
jne
stc
xchg
and
mov
inc
or
arpl
push
jge
sub
push
lods
subl
xorl
xor
fstpt
insb
xor
or
loope
popa
loope
inc
mov
inc
pop
out
lea
bound
mov
sub
and
adc
sahf
push
sub
pop
bound
sub
push
mov
jne
insl
pop
lds
or
dec
dec
dec
and
add
cmp
test
pop
inc
mov
sub
inc
and
sub
push
cmp
pop
lods
or
cmp
lods
sbb
dec
or
add
lods
dec
sub
jne
inc
std
jno
add
enter
cmp
fiaddl
cmc
dec
shll
in
mov
mov
xchg
sbb
jne
or
mov
divb
bound
inc
sbb
add
imul
loope
lods
sub
out
or
add
es
jae
loop
aam
int
mov
jo
mov
xchg
xor
adc
mov
scas
stos
fs
cmpsl
rcrl
gs
dec
call
push
sbb
xor
push
push
out
shll
push
jns
adc
inc
out
jg
and
sub
dec
mov
push
int
outsl
movsb
rorl
fistl
stos
lea
or
daa
insb
mov
xor
mov
enter
in
jg
pop
int
test
xor
sbb
inc
push
adc
es
sahf
out
dec
jne
jae
adc
mov
movsl
mov
push
pop
lock
inc
sbb
push
pop
out
cwtl
sub
cmp
and
add
and
test
cwtl
movsl
jl
inc
popa
or
mov
mov
testl
lods
pop
pop
push
push
mov
loope
ss
dec
mov
fidivl
adcb
ljmp
push
pop
mov
sbb
movsb
stos
pop
data16
sbb
cmp
out
ret
mov
shrl
adc
xor
sub
popa
mov
sub
add
leave
mov
rcrb
mov
xor
add
in
mov
adc
add
repz
int
je
sbb
mov
push
out
sbb
sub
push
mov
cmp
and
aam
and
push
cmpsl
out
jo
aam
leave
dec
cmp
mov
test
subb
fs
mov
cs
nop
cmc
mov
jge
push
sarb
push
aam
das
mov
aad
pusha
mov
add
test
les
testl
aas
lcall
sti
push
xor
pop
mov
addl
sbb
mov
sub
pusha
dec
xor
inc
mov
sub
mov
dec
pop
outsb
comiss
mov
daa
xchg
add
sti
push
stos
lcall
lret
xor
frstor
dec
fwait
notl
mov
ds
sub
pop
lds
push
xchg
sbb
out
and
add
jns
inc
xchg
jo
and
adc
fldcw
adc
insl
es
popa
or
mov
fld
jo
movsb
pop
xchg
dec
add
jmp
mov
cmpsb
inc
imul
sub
push
or
or
mov
les
imul
pop
aaa
lods
mov
cwtl
or
popf
sub
adc
or
fcmovnbe
sub
int
xchg
and
mov
out
loope
iret
sbb
les
jle
nop
xor
mov
ss
leave
sbb
or
dec
jg
addl
dec
addl
dec
test
icebp
adcl
mov
nop
dec
mov
scas
jae
outsl
ret
not
cmpsb
adc
cmp
pop
or
jle
pop
adc
add
adc
fcoml
cmp
sbb
adc
mov
add
and
mov
fistl
add
push
adc
add
clc
aas
adc
push
movsl
adc
xor
imul
add
jb
call
push
and
popf
cmp
adc
sbb
out
roll
sub
call
inc
jne
xchg
mov
daa
mov
pop
or
cltd
sbb
jecxz
lea
xchg
cmp
push
aam
add
test
xor
push
dec
shlb
stc
ljmp
xchg
mov
dec
popl
scas
loopne
cmp
mov
cmp
jb
pop
push
or
cmp
xor
icebp
pop
mov
lret
dec
mov
cs
add
imul
adc
adc
sub
and
mov
pop
add
std
and
add
mov
cmpsb
es
sti
std
xchg
cs
dec
loope
aas
enter
pop
mov
leave
ret
add
adc
xor
add
fs
rorl
inc
mov
add
mov
add
sub
inc
jb
bound
mov
jg
inc
mov
and
cs
lods
cltd
pop
mov
scas
les
je
cmp
loopne
adc
js
dec
dec
int
dec
iret
outsb
or
inc
shrb
jge
lods
inc
ds
inc
add
xlat
inc
or
and
xor
pop
scas
bound
inc
idivl
xor
add
adc
push
dec
and
mov
adc
inc
in
mov
mov
sbb
adc
inc
pop
push
or
lcall
push
push
xlat
add
xchg
es
pop
test
xchg
inc
inc
and
pop
icebp
or
sarb
and
stc
jno
insl
or
add
push
inc
pusha
xchg
xchg
gs
xchg
bound
addr16
pop
push
cmp
xchg
loope
int
and
jae
or
loope
sahf
dec
pop
mov
cmp
pop
mov
mov
lods
push
orl
mov
or
push
or
xchg
sub
ret
in
out
mov
jbe
add
cmp
xchg
lds
sbb
and
lea
pop
lds
mov
adc
add
dec
xor
stos
inc
mov
pop
inc
inc
push
or
leave
sub
ret
add
je
pop
fldt
push
scas
xchg
iret
inc
jmp
xorl
bound
bound
dec
xlat
mov
les
jno
adc
push
popa
ja
dec
add
dec
in
and
xchg
mov
mov
and
leave
leave
cmpsl
cli
cmpsl
xchg
pusha
mov
jo
xchg
out
sub
inc
sahf
rolb
rolb
xor
push
xchg
sub
cmp
add
fists
out
sbb
push
xor
roll
loope
cwtl
xchg
push
mov
inc
xlat
gs
sub
imul
and
push
jo
mov
add
mov
popa
ret
inc
lods
inc
pop
stos
outsl
lcall
arpl
jmp
jae
aaa
popa
sbb
mov
and
jg
adc
sbb
lods
jge
fnstsw
add
add
dec
sub
dec
aad
ss
rolb
push
popa
stos
adc
mov
pop
sbb
add
fucomip
lret
ret
int
dec
loope
dec
and
and
push
adc
sbb
add
dec
and
popa
jno
pop
push
jb
push
bound
xor
lock
loopne
jmp
in
cs
paddusb
sub
sbb
jo
movaps
popa
in
stos
jno
fwait
in
add
xchg
lcall
pusha
mov
test
imul
mov
fwait
adcb
or
shlb
test
pop
lock
xor
aas
sub
popa
sti
clc
dec
mov
sahf
and
dec
or
sbb
shll
clc
mov
sbb
imul
jns
push
addb
aad
dec
push
or
fcmovnu
push
int3
rcl
or
xor
pop
jge
xchg
push
cmpsb
arpl
inc
xor
xorb
scas
aad
mov
lret
jnp
lds
lea
push
lahf
lea
es
sbb
imul
push
push
mov
xlat
xchg
scas
xchg
test
adc
shll
insl
add
rolb
push
int
imul
jno
add
xchg
leave
addl
mov
dec
push
push
loope
mov
divb
add
pop
cmp
xchg
pop
sbb
jo
jae
cmc
pushf
cmp
push
jo
test
jo
mov
out
dec
es
pop
insl
and
inc
fisubl
add
rolb
mov
popf
cmp
jo
pop
flds
mov
ret
in
sub
scas
mov
dec
iret
push
jge
add
enter
mov
and
adc
fs
push
int3
xchg
adc
shrb
pusha
push
ret
and
test
add
pusha
and
stos
sbb
cli
push
imul
add
lods
cmp
jl
jbe
loop
add
fnsave
push
jnp
dec
mov
sub
leave
dec
negl
call
outsl
push
xor
dec
popa
js
push
mov
orb
scas
xchg
dec
dec
dec
pop
and
dec
mov
push
add
gs
mov
xor
add
push
repnz
xor
sub
xchg
dec
add
sbb
movb
pop
test
or
aad
pop
jnp
inc
stos
nop
sub
pop
jnp
push
add
pusha
aad
push
push
cmp
sbb
jne
inc
inc
out
inc
add
jg
xchg
xchg
cmpsb
lcall
aad
inc
pop
imul
xchg
xchg
ljmp
cmp
push
sti
push
inc
xor
pop
or
shrl
xlat
xchg
push
lods
xor
daa
movsb
ds
jae
or
mov
inc
loop
pop
xchg
mov
loop
out
inc
cmp
and
add
aad
es
fs
mov
push
or
and
icebp
or
orb
adc
test
or
add
mov
inc
and
imul
rolb
mov
jo
push
mov
inc
sbb
cmp
sbb
lahf
dec
mov
sbbl
push
jmp
and
cmp
sub
cltd
mov
cmp
repnz
sbb
ret
and
aad
mov
jmp
mov
xchg
rorl
pop
movsb
fdivrp
jg
test
mov
jle
leave
xor
jns
pop
cld
sbb
mov
inc
lcall
loopne
ds
cmpsb
aam
sub
xrelease
sub
pop
je
inc
xor
push
mov
sbb
shr
jmp
push
fldt
and
rcrb
lods
imul
push
inc
movsl
testl
arpl
push
test
jno
pop
popa
outsb
orl
mov
xor
mov
fst
jnp
in
mov
dec
jne
dec
pop
jmp
adc
and
test
cmp
adc
pop
pusha
in
outsb
pusha
push
fwait
lret
nop
outsb
lods
dec
test
or
arpl
daa
mov
and
sti
or
sub
loop
data16
mov
push
jns
and
ret
mov
add
pop
mov
test
dec
mov
pop
sbb
mov
lds
daa
test
insl
enter
sub
xchg
jmp
je
xchg
and
movsb
pop
loopne
push
mov
inc
loopne
and
daa
jmp
sbb
xor
jo
jg
push
add
scas
inc
xor
xor
push
sub
aad
push
and
sbb
push
mov
push
dec
out
inc
mov
pop
cmp
jg
fdivl
inc
mov
dec
add
xchg
aaa
xchg
push
test
dec
shll
sub
mov
cwtl
stos
push
sub
inc
mov
adc
cmpb
inc
popa
loopne
add
hlt
mov
movsb
aad
fs
fdivs
xchg
insl
xor
andl
cmp
or
lods
ds
jecxz
das
aas
or
or
cmp
leave
adc
xor
lds
inc
jmp
jmp
lods
lret
addb
mov
inc
and
sbb
rcl
mov
lods
mov
sbb
dec
ds
dec
and
or
cmp
inc
jp
cmpsb
sub
popf
or
add
outsb
sbb
testw
call
aam
rolb
imul
test
jmp
sbb
xchg
xchg
sub
or
mov
pusha
addr16
test
ljmp
push
popa
sub
pop
outsl
jae
sbb
cmp
jnp
shrl
dec
rclb
adc
push
mov
dec
xchg
push
add
test
loope
add
inc
lods
dec
test
sbb
loopne
mov
mov
mov
adc
lock
subl
std
stos
xor
rorl
or
push
add
jge
stc
add
in
push
mov
mov
jecxz
jo
inc
mov
cmp
addb
repnz
or
outsb
test
inc
xchg
adcl
cmc
pop
or
in
inc
push
leave
hlt
xor
mov
lcall
mov
mov
sbb
sahf
mov
inc
loope
jg
in
push
lea
adc
test
out
push
ljmp
gs
sbb
xchg
lods
xor
orb
std
dec
adcl
pop
pop
mov
fists
dec
das
mov
test
lea
arpl
and
mov
pushf
fdivl
add
jmp
cmp
xor
push
push
mov
enter
sbb
rcrb
fnstsw
mov
add
inc
lcall
insl
inc
xchg
movsb
push
test
dec
stos
add
mov
jge
sbb
sub
test
popf
and
sbb
sbb
mov
lods
adc
scas
xchg
sub
call
fbstp
lcall
repz
add
lds
cmpsl
popa
loopne
sti
lods
imul
loop
jl
popa
mov
sbb
pop
add
and
cmpl
xor
mov
invd
jecxz
cwtl
jne
and
das
sbb
and
mov
bnd
or
rcl
faddl
xor
push
pop
push
inc
add
loopne
les
push
jl
sbb
mov
scas
movaps
insl
xor
scas
pop
icebp
mov
adc
lods
mov
adc
push
scas
rclb
lret
fnstcw
loop
nop
add
and
push
insl
iret
in
push
je
les
lods
pop
jl
mov
dec
scas
jns
mov
sub
mov
js
inc
pop
mov
addb
and
add
dec
sarb
negb
mov
fcomps
pop
xchg
mov
push
jb
or
test
repz
test
into
inc
xlat
add
bound
mov
sbb
mov
inc
inc
mov
xor
jl
inc
push
add
out
adc
mov
pop
bound
repnz
xchg
ljmp
sub
sub
stos
loopne
xchg
jo
push
xchg
dec
xor
xchg
xor
adc
pop
test
pop
adc
addr16
icebp
inc
push
push
inc
push
mov
adc
jo
aad
xor
cmp
movsb
jne
mov
pop
int
pop
add
ja
pop
test
mov
cmp
orb
cmpsb
test
clc
lods
mov
adc
mov
and
adc
outsb
out
mov
mov
je
jno
fs
jmp
pushf
push
int
mov
repnz
dec
sbb
nop
cmpsb
and
rclb
mov
les
test
mov
push
or
mov
jnp
fcmovb
xchg
mov
push
dec
out
pop
mov
or
movsb
or
sbb
leave
mov
xchg
outsl
imul
add
add
or
fisubrl
sub
adc
push
sti
loope
cmp
fs
dec
or
ljmp
mov
cmpsl
adc
xor
andl
xor
popf
bound
jge
adc
bound
cmpsb
lcall
push
dec
adc
addr16
lret
orb
mov
test
scas
push
outsl
jne
sbbl
mov
fwait
lea
mov
push
lcall
andl
dec
test
inc
cmp
xor
gs
arpl
cs
jecxz
pop
push
inc
je
sub
mov
js
mov
cmc
add
scas
xchg
pop
push
push
test
pop
lods
shlb
sub
mov
nop
jb
cltd
out
test
incl
inc
sub
push
xor
pop
jo
and
push
lret
and
stos
rolb
mov
dec
mov
inc
or
das
jge
xchg
popf
ljmp
xchg
nop
test
mov
mov
orl
leave
rcrb
cmp
add
push
mov
mov
and
mov
dec
pop
sub
mov
push
pop
enter
ret
dec
fdivrs
rorl
iret
bound
mov
jne
sub
nop
and
add
hlt
add
push
imul
sbb
pop
jp
push
mov
jne
or
pop
mov
aam
mov
test
or
inc
add
inc
mov
mov
and
sbbl
inc
lods
push
adc
orl
add
push
add
mov
push
jl
push
add
lods
jno
test
and
xchg
mov
loopne
js
jl
xchg
int
outsb
add
int
xor
mov
inc
lret
popa
rolb
add
lret
or
and
ret
test
icebp
clc
push
xchg
adcb
scas
xor
daa
mov
in
adc
out
subl
push
mov
test
sbb
mov
popa
inc
insb
test
and
push
sub
adc
or
or
and
inc
xor
pop
mov
lods
mov
or
add
xor
sarl
xchg
mov
repnz
enter
outsb
cwtl
pop
sub
xchg
dec
jb
adc
mov
roll
stc
sbb
sbb
inc
jnp
add
push
xor
mov
stc
sbb
or
fldcw
or
add
pop
in
jno
jg
add
pop
xchg
pop
and
inc
in
jae
cmp
sbb
xchg
xor
push
daa
push
je
test
sbb
lea
fbstp
fcompl
je
rclb
scas
rcrl
cwtl
push
and
inc
mov
paddusw
or
sbb
stc
adc
jmp
leave
mov
cwtl
outsl
fmul
push
push
cmp
addb
and
add
inc
mov
rclb
xchg
fwait
mov
or
jecxz
in
cmp
and
cmc
es
popl
mov
mov
jle
out
add
adc
mov
jne
aam
and
or
mov
jno
arpl
outsl
cmc
and
popa
dec
cs
adc
dec
test
sub
add
ret
add
cmp
mov
testl
imul
mov
pusha
push
jo
stos
cltd
push
rolb
and
pop
sub
xor
xor
aad
outsl
dec
roll
push
or
xor
and
pop
icebp
mov
mov
mov
add
sub
aad
jl
sub
dec
jne
dec
vphaddubd
sub
dec
push
xor
cmp
jns
cmc
bound
or
shlb
lock
inc
aam
xchg
add
jge
rclb
out
cmp
pushf
sbb
jg
cmp
jmp
mov
test
imul
push
cmpl
pop
scas
jp
dec
and
loopne
inc
test
or
loopne
xor
mov
mov
pop
adc
insl
push
addl
xchg
pop
insb
lcall
rclb
movl
push
mov
mov
imul
lds
add
mov
and
movsb
sbb
aaa
inc
dec
leave
push
or
data16
xlat
inc
mov
adc
mov
ret
and
pusha
push
pop
inc
jg
sub
or
movsb
add
aam
aam
jb
fldl2e
subb
cmpsb
mov
pusha
cmp
push
aas
sbb
sub
adc
dec
stos
inc
xor
aaa
aas
je
inc
add
and
sub
push
xchg
jne
mov
push
dec
mov
rorb
pop
jo
aaa
xchg
test
icebp
jo
dec
push
adc
out
xchg
adc
popf
jb
stos
and
pop
imul
testl
stos
movsl
cmpl
stos
gs
aaa
xchg
and
add
inc
and
add
or
test
push
rorb
dec
pop
or
loope
flds
or
iret
cltd
and
scas
and
and
aaa
xor
movsl
inc
push
outsl
or
cmpl
xor
or
test
mov
or
lahf
dec
test
stos
stos
adc
sbb
in
test
nop
cwtl
mov
rorl
enter
add
cmp
mov
dec
or
lds
dec
ret
ficomps
inc
pop
add
out
sbb
xchg
push
sbb
loope
addr16
mov
jbe
fnstenv
mov
fisttpl
dec
int3
mov
mov
scas
sahf
fcoms
lods
push
int3
insl
add
mov
enter
sub
push
rolb
cltd
push
test
add
cmp
lret
js
es
mov
into
int3
orb
out
aaa
cmpl
or
rcrl
cmp
rolb
xchg
ret
inc
jle
mov
mov
cs
js
lods
into
xor
mov
sbb
xor
adc
pusha
pop
adc
sub
clc
or
pop
and
pop
push
push
sub
das
andl
cwtl
mov
fisttps
cwtl
push
ds
aaa
jp
push
inc
sub
inc
jae
inc
xchg
rclb
inc
add
subb
adc
add
repnz
mov
les
test
pop
add
push
xchg
or
cltd
rorb
mov
xchg
and
scas
aaa
push
mov
push
adc
sub
mov
fcomps
in
xor
push
loope
xchg
pop
add
je
fcoml
lret
jae
inc
mov
pop
jge
dec
pusha
add
xorl
lods
stos
mov
cmp
xchg
mov
and
mov
push
orl
sbb
mov
rcrb
insb
or
popa
shrl
fcoms
push
ja
pop
mov
dec
les
add
mov
cmc
mov
ret
pop
ja
add
lods
mov
cmp
loopne
pop
mov
pusha
rcl
push
jmp
mov
fistpl
xor
cvtps2pd
push
test
add
push
ficomps
cmp
movsb
sbb
mov
and
jns
and
xchg
push
nop
es
ret
inc
es
pusha
add
inc
test
in
add
mov
push
imul
push
sub
sbb
xchg
xchg
cmp
in
mov
fiadds
subb
add
push
xlat
push
inc
pop
dec
mov
pusha
xchg
xchg
cmpsb
push
lahf
inc
and
mov
pop
sbb
fimull
movsl
stos
dec
in
repnz
lds
xor
cmp
or
pshufw
popf
add
sub
xchg
dec
movsb
out
xchg
push
pop
enter
leave
pop
cmpsl
pop
dec
sti
jbe
xchg
dec
dec
or
inc
or
sbb
leave
adc
or
sahf
jae
dec
or
fnstenv
mov
fucom
test
pusha
test
pop
gs
ret
jne
inc
cmp
cltd
mov
das
pop
loop
pusha
mov
adc
repnz
jp
push
mov
cmp
add
sbb
ficomps
dec
inc
das
adc
adc
mov
ror
mov
hlt
aad
inc
mov
mov
dec
sti
ffreep
cs
inc
repz
xchg
icebp
and
rorl
inc
les
and
daa
jno
mov
push
test
lods
inc
out
orb
cmp
xorb
sbb
and
push
add
adc
and
imull
lret
mov
adc
cs
or
fldl
fwait
adc
push
scas
bound
addr16
and
xchg
inc
mov
cmp
sbb
outsb
push
inc
inc
ljmp
sbb
imul
pop
dec
and
mov
adc
push
inc
mov
add
add
jg
pop
popa
xchg
dec
cmp
orb
mov
imul
inc
scas
cmpps
xor
xchg
sbb
push
jo
addr16
outsl
jno
push
js
ret
bound
adc
push
adcl
inc
dec
fsts
leave
push
jg
mov
xor
imul
add
roll
bound
popa
in
jns
xlat
mov
mov
adc
cmp
rolb
subl
lods
dec
jns
adc
jne
cmp
mulb
popa
lods
in
aaa
pop
push
pop
adc
je
and
mov
push
into
jo
lds
rep
pop
sbb
ffree
shrl
mov
xchg
mov
jns
sbb
movb
jo
xor
loop
fwait
idivb
lea
jle
push
xchg
sub
dec
cmpsl
push
pushf
xchg
xor
clc
mov
sbb
imul
cmp
xchg
or
lods
inc
inc
sub
insl
mov
mov
aam
adc
add
add
add
add
orb
pop
dec
daa
mov
push
call
mov
or
pop
xlat
push
jp
sbb
jo
mov
imul
and
in
add
push
inc
inc
add
dec
pop
xchg
mov
cmp
ret
lret
sbb
push
dec
dec
loope
mov
mov
adc
mov
mov
scas
add
pop
fstp
stos
bound
cmpsb
jo,pn
xor
xor
adc
xor
aad
inc
mov
dec
int
movsb
inc
mov
sub
insl
inc
or
pop
dec
int3
fs
rcll
test
cmp
and
adcb
or
inc
ud2
dec
test
and
rorl
sbb
cmp
jg
es
fidivrs
pop
jmp
inc
sbb
pusha
cmpsl
add
jno
mov
and
fildl
shll
xor
dec
popa
adc
nop
in
mov
push
mov
lret
mov
cmpsl
ficoml
inc
xchg
xor
pop
mov
push
repnz
or
xchg
in
jbe
mov
sbbl
jecxz
xchg
cmp
pop
pushf
popf
push
cmp
pop
sub
inc
and
sbb
ret
adc
mov
imul
xor
jno
sbb
fsubl
ror
pusha
xchg
mov
lahf
je
mov
jmp
adc
es
imul
clc
pop
add
jno
scas
stc
lahf
and
cmp
les
mov
stc
mov
or
mov
jno
sub
popf
jg
sub
pop
mov
mov
xchg
push
push
sbb
push
test
aas
xchg
sbb
and
movsl
int3
insb
push
inc
push
xchg
inc
cmpsl
xor
push
mov
or
cld
or
mov
inc
jmp
cs
ja
arpl
mov
and
sbb
sbb
inc
je
bound
insl
mov
xchg
iret
or
sub
aad
pusha
and
adc
mov
sbb
imul
and
rcrb
mov
mov
jbe
or
adc
jp
pop
imul
xor
sti
dec
add
test
cmp
pop
inc
addb
adc
jnp
cmp
inc
adc
sbb
add
movsb
popa
adc
push
fisttpl
sub
xchg
dec
idivl
sub
rol
int3
lret
popf
popa
pop
xchg
andl
jmp
or
pop
adc
inc
adc
jae
jno
inc
ja
movsb
mov
and
or
or
adc
push
jno
shr
lea
sub
pop
inc
das
scas
push
xchg
mov
fwait
cltd
fcomi
inc
xchg
or
or
gs
mov
inc
pop
and
nop
push
in
stc
mov
les
clc
mov
movb
mov
scas
sti
mov
popl
cltd
pop
lcall
jg
push
sub
bnd
fdivl
test
sbb
lock
fs
cmpsb
movsb
imul
movsb
or
sbb
loop
mov
pop
push
xchg
xchg
sub
lret
cld
sbb
inc
test
loope
xor
cwtl
sbb
std
push
lea
mov
jo
jae
adc
loopne
xlat
jo
and
push
dec
shlb
shlb
addr16
add
lods
arpl
movsl
or
gs
mov
mov
dec
cmp
dec
jne
test
bound
adc
int3
not
rclb
in
ret
or
and
mov
push
ret
sbb
mov
shl
mov
in
das
aas
jo
cmpsb
pop
ret
and
es
scas
fcompl
std
dec
popa
sbb
das
add
insb
out
add
adc
stc
xorl
xlat
divl
lret
pop
jae
pop
and
mov
lea
add
mov
add
cmpl
lahf
out
mov
outsl
push
test
add
leave
add
xchg
fadds
xchg
shlb
or
cpuid
dec
jne
push
dec
lds
daa
int
decl
and
cmp
jmp
sbbl
dec
xchg
lock
push
rclb
or
mov
arpl
add
data16
ljmp
add
fstpt
lock
jns
jno
xchg
rcl
adc
mov
push
ljmp
or
push
pop
add
fstp
pusha
arpl
pop
jb
test
mov
mov
xchg
test
popf
add
push
jne
sbb
add
and
xchg
push
mov
mov
dec
mov
mov
or
inc
jecxz
mov
push
cmp
mov
inc
scas
ljmp
dec
add
outsl
pusha
adc
sbb
fnstenv
cmpsb
xor
shlb
add
sbb
sbb
mov
bound
push
pop
lret
test
loope
sbb
inc
jno
in
jg
cmp
or
adc
xor
test
fadds
inc
shll
xor
and
test
insl
mov
or
mov
or
add
rcll
out
arpl
int
cs
in
adc
adcl
sbb
cmp
jp
sbb
push
jno
gs
push
ret
arpl
pop
lea
cmp
cltd
jecxz
adc
xor
out
mov
add
cli
jno
mov
test
inc
xchg
not
xor
xchg
cmpsb
nop
out
inc
and
or
enter
cmpsb
leave
ljmp
sbb
xchg
mov
or
xchg
insb
andb
inc
mov
addl
jno
sbb
adc
pop
add
cwtl
and
pop
pop
mov
dec
in
xchg
push
pop
mov
add
scas
adc
add
adc
test
mov
jno
or
out
push
add
add
stc
stos
pop
jae
lret
fsincos
cmpl
imul
or
push
add
dec
sub
jne
iret
adc
mov
movups
mov
je
dec
mov
jl
push
xchg
push
sbb
lock
and
push
and
iret
jo
cwtl
ljmp
push
or
mov
mov
add
inc
cltd
or
push
out
in
cwtl
and
jmp
loopne
test
and
mov
sarl
dec
pop
ss
mov
adc
xchg
jnp
mov
aad
sub
push
add
test
and
dec
mov
icebp
mov
push
gs
dec
inc
pop
ret
and
loopne
psrlw
mov
ss
and
outsb
mov
sbb
sub
lret
inc
xchg
test
dec
mov
inc
pop
pop
and
and
mov
pop
add
fstpt
add
inc
adc
pop
int3
add
bound
add
mov
xor
dec
ja
hlt
xlat
push
dec
mov
mov
adc
add
les
adc
push
inc
lahf
mov
es
out
xor
add
add
or
addr16
inc
test
test
dec
mov
mov
add
xchg
xchg
adc
xor
sar
or
jecxz
mov
loope
cmp
fildl
jo
jge
jo
pop
adc
mov
sub
jge
add
mov
insl
rorb
std
in
loopne
xchg
aam
xor
loope
dec
dec
sub
insl
dec
or
mov
scas
push
pop
test
imul
sbb
xchg
test
pop
test
pusha
ja
mov
repnz
xor
xor
iret
std
push
jnp
fwait
push
mov
in
daa
addb
pop
sbb
add
out
and
mov
repz
push
xor
xchg
and
aad
test
dec
inc
jno
orl
adcb
bound
sbb
in
mov
sub
push
sub
imul
jl
and
pop
test
fs
loope
lea
jno
pop
cltd
pop
lcall
inc
or
fistl
pop
leave
mov
mov
les
pop
sbb
rolb
gs
mov
out
inc
inc
fisubl
aam
jb
mov
cmp
ret
pushf
shlb
xchg
daa
adc
rclb
mov
pop
add
pop
xlat
data16
mov
xor
or
or
push
xor
icebp
jno
hlt
test
inc
adc
sahf
or
inc
pushf
jge
cmp
imul
sbb
sub
inc
pop
mov
in
fisttpl
jbe
cmpsl
or
sarl
or
mov
mov
lcall
or
daa
shll
subl
and
push
cwtl
pop
cwtl
mov
and
les
mov
mov
push
lret
xor
xchg
sqrtps
or
pop
daa
cmpb
mov
push
jnp
dec
push
xor
cmp
mov
loopne
xor
loope
mov
jae
enter
mov
add
pushf
sbb
add
or
out
imul
je
cmp
imul
loopne
lcall
and
gs
int3
cmp
cmpsb
jne
dec
mov
dec
pushf
sbb
xor
imul
inc
inc
or
push
and
mov
ret
adc
adc
add
mov
ja
pop
and
aam
pop
data16
movsl
adc
scas
xchg
cmpl
mov
mov
lret
inc
and
and
adc
inc
adc
dec
imul
cmpsb
xchg
and
push
jecxz
pop
cwtl
cmp
dec
fiadds
mov
sub
ret
add
sbb
and
repnz
popf
cmc
fisubs
jns
mov
sbbb
adc
adc
cmp
aad
mov
hlt
rolb
lods
lods
cld
ret
pushf
jmp
or
add
shll
popa
fdivs
pop
fistl
dec
sbbl
rcr
and
push
mov
add
aaa
and
pop
dec
xchg
ljmp
lahf
sarl
lods
test
sbb
roll
jae
add
adc
roll
mov
fbld
iret
cmp
pop
jbe
mov
and
mov
loope
xchg
cltd
pop
int3
rolb
out
push
bt
jno
arpl
pop
adc
inc
out
inc
popa
mov
rol
adc
ds
minps
add
cmp
sti
test
pop
es
pop
outsl
mov
call
add
add
nop
lock
cmpsb
fildll
lret
add
scas
test
xchg
add
pop
adc
xchg
adc
and
mov
mov
push
int3
jl
push
loope
stos
cmp
pop
xchg
inc
rol
xchg
lea
jg
lds
sbbb
or
insb
sbb
push
sbb
jmp
les
outsb
es
stc
sbb
mov
nop
xchg
xor
imul
jb
inc
stos
inc
mov
xor
mov
jno
jl
add
lret
pop
push
cwtl
ljmp
add
arpl
cwtl
mov
pop
shrb
inc
lea
jbe
or
add
sbb
cmp
and
mov
sbb
push
mov
shr
adc
sbbb
jno
test
repnz
dec
sbb
or
test
adcl
adc
jmp
popf
sub
sbb
add
sub
pop
gs
inc
push
xchg
andl
mov
mov
and
push
jns
es
scas
xor
push
sub
cmp
push
pop
and
sub
push
arpl
xor
insl
ja
mov
xchg
push
mov
xor
ret
add
scas
jno
lods
push
cmp
sbb
inc
xor
adc
inc
and
or
inc
push
pop
popa
loope
mov
add
sub
lret
or
jmp
or
xor
adc
adc
lods
dec
add
xor
out
orb
sbb
cmpsl
adc
push
or
repz
mov
and
inc
outsl
sub
or
mov
adc
push
or
bound
cmp
rcrb
mov
jno
sbb
pop
xchg
pmulhw
test
inc
xor
test
pop
xchg
rolb
inc
nop
dec
loope
inc
cmpl
outsl
inc
xor
cmp
divl
mov
js
sbb
arpl
mov
mov
int3
pop
sbb
inc
or
or
stos
mov
or
cmp
dec
fists
or
xor
lahf
leave
rcl
rolb
incl
incl
ja
lea
fisubl
or
sub
sbb
mov
dec
aad
clc
jo
pop
push
cmp
rcrl
popa
movsb
mov
pusha
or
xor
fs
push
add
aad
mov
dec
inc
mov
aas
pop
test
and
pop
cmpsb
loop
movsb
mov
push
loope
loope
dec
leave
pop
movsl
and
cs
jp
adc
pop
aaa
push
lret
add
int
clc
leave
movsl
push
mov
and
or
adcb
and
subl
roll
movsb
cwtl
or
dec
and
movq
adc
sub
inc
push
icebp
pop
pop
and
aam
dec
fwait
add
mov
mov
outsb
je
push
popa
popf
and
xorb
and
inc
dec
add
test
insb
mov
jecxz
and
mov
inc
enter
loope
mov
nop
cs
lcall
lcall
adc
push
dec
loope
insl
or
xor
dec
cmp
popa
mov
adc
rorb
test
or
cltd
or
push
jmp
and
js
pushf
cmc
inc
pop
leave
shl
je
dec
je
test
add
test
sbb
icebp
test
pop
adc
jmp
pop
adc
test
mov
mov
popa
sbbb
pop
add
test
or
push
aam
neg
mov
sub
jo
mov
aad
sub
push
or
lea
pusha
adc
or
xor
cwtl
add
fwait
popf
push
add
push
push
push
ret
xchg
jno
add
outsl
inc
sbb
and
xor
outsl
pop
xlat
mov
in
pop
jo
adc
inc
pop
xor
jl
xchg
sahf
sub
add
jne
inc
mov
or
in
dec
clc
mov
adc
push
js
stos
push
movsl
daa
movsl
jecxz
js
dec
add
mov
aas
js
xchg
int
aad
xchg
inc
shl
stos
jo
imul
cmp
scas
cmp
sbb
add
xor
sub
pop
rolb
fiaddl
and
cwtl
xchg
jo
cmpsl
mov
xor
lret
sbb
or
mov
pusha
jmp
xchg
test
push
mov
sub
add
jns
rolb
push
into
outsl
loop
test
idivb
imul
add
sbbl
push
dec
adc
ss
add
add
dec
pusha
xchg
sbb
in
add
rorl
orb
les
push
in
fistpll
mov
imul
push
sahf
rep
in
inc
out
inc
cmpb
movsl
xor
sbb
pop
add
mov
orl
adc
sub
or
loopne
xchg
xchg
pop
xchg
mov
fucomi
xor
enter
fadds
adc
sahf
inc
push
mov
sub
shrb
and
leave
jae
shlb
fwait
xor
dec
outsl
adc
sbb
sti
std
xchg
movsl
aaa
push
push
or
test
dec
inc
pop
add
adc
outsl
add
or
les
lret
xor
or
mov
sbb
xor
sbb
mov
sub
mov
pop
sbb
pop
pop
pop
xchg
adc
dec
pop
movsl
lds
pop
add
xor
push
mov
imul
mov
inc
rcll
sub
adc
mov
ret
test
and
out
cmp
push
int
sti
dec
ret
stc
mov
dec
imul
or
push
mov
cmp
lret
push
cmp
mov
inc
movsl
aad
icebp
or
outsb
cli
or
sub
dec
dec
aaa
mov
inc
aaa
add
xchg
sub
sbb
jnp
add
imul
pop
jno
adc
fsincos
je
sbb
cmc
aas
aas
fisttps
or
test
push
arpl
adc
push
sub
ret
inc
orl
jae
sbb
and
nop
cwtl
xor
lret
or
cmp
addl
mov
or
cmp
std
je
sbb
loope
cmpsl
ja
sub
sti
leave
sbb
inc
xor
out
lds
mov
in
add
hlt
push
dec
sbb
icebp
sahf
mov
popf
dec
stos
adc
les
pop
inc
mov
cltd
or
jo
mov
adc
nop
add
and
test
popa
and
test
insb
xor
xchg
push
add
cmp
push
xor
xor
aam
inc
outsb
cmp
inc
insl
mov
cmp
or
lods
addr16
or
push
lock
js
add
push
cmp
ljmp
sbbl
andb
pop
ret
pop
in
inc
pop
sbb
xor
idiv
cmp
cltd
ret
cs
inc
pusha
and
pop
stos
sub
leave
fwait
inc
mov
cmc
loop
dec
inc
pop
jnp
test
sub
int3
and
mov
mov
mov
cmp
pop
sub
ret
sbb
jecxz
aaa
sub
leave
mov
dec
repz
sbb
push
lahf
xchg
rclb
jnp
int3
mov
scas
jne
mov
aaa
mov
or
stos
ud0
cmpl
mov
jle
or
pop
insb
sbb
hlt
xlat
xchg
popa
mov
push
xchg
xor
fildl
jg
or
les
or
les
stos
ja
mov
mov
ret
mov
pop
rcl
sub
xchg
mov
popf
xchg
out
or
inc
arpl
dec
aad
roll
movsb
test
inc
es
movsb
fsubl
and
mov
mov
and
sbb
daa
fwait
js
mov
ja
je
adc
aad
movsl
add
pusha
and
pop
cmp
push
jl
and
js
sub
rcll
lods
or
scas
test
mov
scas
cmp
ror
jae
add
test
test
xor
cmpb
push
mov
stos
xchg
jns
add
inc
sub
scas
xchg
addr16
scas
mov
fisttps
inc
dec
sbb
jbe
cmp
adc
adc
movsl
or
bound
leave
sub
dec
lea
and
roll
pcmpeqb
push
sbb
or
test
and
jge
addl
pop
mov
cmpsb
outsl
push
xchg
les
shld
addl
mov
movb
or
loope
orl
mov
adc
push
and
pop
xor
xor
movb
fucomip
and
dec
pop
aaa
xchg
or
jnp
xor
push
test
mov
mov
punpckhbw
shrb
mov
add
push
stc
pop
int3
idivl
xchg
or
leave
jbe
dec
adc
lods
adcl
inc
jae
movsl
xchg
sbb
inc
inc
push
push
or
or
mov
push
ret
mov
stos
mov
scas
dec
jae
das
adc
fcmovnu
repz
add
sub
repz
xlat
sbb
dec
xchg
shll
or
mov
push
add
inc
add
ret
das
and
ret
sbb
int3
cltd
pop
jo
cwtl
or
jo
ljmp
movsl
popf
jnp
cmp
and
inc
sbb
sbb
cmpb
cmp
mov
leave
int
sbb
adc
adc
or
or
pop
and
dec
ss
adc
inc
dec
cltd
and
clc
mov
scas
stos
and
xchg
test
cwtl
mov
jb
lcall
push
add
jns
inc
and
loope
pop
inc
in
rolb
add
push
fistl
push
int
aad
jbe
mov
mov
fmull
dec
out
push
jae
push
loopne
pop
push
mov
pushf
fistl
adc
cltd
rcr
movsl
stos
adc
sub
mov
push
dec
sbb
sbb
or
or
xlat
dec
add
lods
testb
rcrl
aad
push
sbb
mov
sbb
or
push
xor
aam
and
insb
jmp
mov
inc
lret
mov
mov
sbb
add
scas
cmp
sbb
mov
add
nop
leave
andl
sbb
mov
pop
push
add
sbb
pop
outsl
cmpsl
jo
test
cltd
nop
daa
xchg
xor
shrl
faddl
push
xor
and
or
and
add
lcall
xchg
xor
call
notb
pop
lods
add
shl
inc
push
movl
jo
xor
mov
xor
mov
cmpsl
in
rorb
add
xchg
pop
xor
popf
add
pop
addr16
popf
sbb
cmpb
and
and
push
jno
sbb
inc
adc
outsb
dec
test
pop
mov
addb
cmpsl
mov
rcrl
xor
aas
pop
jecxz
or
orl
adc
stos
jle
dec
cli
add
test
cltd
inc
stos
ret
js
adc
in
in
imul
pop
push
lcall
cwtl
enter
inc
add
imul
inc
dec
test
xor
add
cmp
mov
lock
xchg
ds
test
and
xchg
cmpsl
fwait
mov
adc
jg
xlat
push
dec
sbb
push
add
adc
dec
enter
or
aam
dec
dec
lahf
and
test
in
sbb
sub
inc
xchg
mov
daa
mov
bound
jmp
add
mov
pop
dec
xchg
ds
jle
add
rorl
imul
pop
fisttpll
pop
adc
cmp
xchg
addl
and
test
imul
xchg
mov
and
lods
jmp
push
cmp
sbb
cwtl
outsb
popa
xchg
leave
sbb
lahf
rclb
mov
sbb
push
and
inc
lret
ljmp
cmp
pop
adc
sbb
shll
xchg
sub
scas
add
and
imul
push
adc
sbb
inc
jecxz
aad
adc
xor
insl
jmp
push
jecxz
jnp
testl
add
movsl
mov
push
add
fsubl
shrl
mov
enter
cmpsb
and
sub
les
pop
adc
lds
add
ret
mov
sbb
test
loope
pop
popa
loopne
and
push
std
test
lahf
adc
andb
push
sbb
and
adc
adc
pusha
stc
inc
aad
dec
dec
add
mov
fs
nop
cmp
push
adc
add
jbe
xor
stos
push
ds
and
mov
dec
sbb
xor
stc
insb
in
cltd
push
fnstenv
movsb
inc
movsb
push
ret
push
mov
iret
add
loopne
cld
dec
push
adc
jae
into
cltd
pop
xlat
movsb
and
icebp
dec
movsb
repz
lods
sub
lahf
adc
iret
add
cli
rclb
add
pop
and
inc
dec
xor
cmp
jno
fstpl
mov
add
loope
loopne
xchg
cmc
mov
cwtl
test
lds
jmp
pop
pop
inc
or
push
pop
adc
inc
mov
movsb
sub
xor
or
andl
jno
pop
cs
add
push
or
mov
mov
mov
in
push
xor
mov
pushf
repnz
and
dec
es
inc
roll
push
xlat
sub
movsl
sub
and
jmp
xchg
push
adc
xchg
bound
jp
inc
in
pushf
jns
mov
pop
cmp
sbb
popf
dec
jg
and
sub
inc
push
cmpsb
and
push
sbb
ja
dec
adc
mov
adc
or
les
xor
sbb
dec
loope
fildll
pop
pop
sbb
fisttpl
lods
mov
call
inc
movsl
inc
xor
frstor
or
mov
push
lcall
pusha
mov
sbbb
sbb
xor
xor
fsubl
cwtl
sub
push
loope
xchg
pop
xor
add
decl
cli
xchg
scas
mov
out
cmp
and
jno
repz
loopne
push
mov
ficomps
sbb
enter
jmp
push
rolb
inc
lcall
insb
add
lret
pop
and
sbbb
insl
pop
dec
dec
inc
jno
cmp
sub
sub
mov
sbb
rclb
sub
cmp
ret
dec
pop
fldenv
test
clc
inc
xchg
aam
orb
sub
lcall
cwtl
aam
imul
pop
ret
xchg
mov
gs
pop
aam
add
popa
sub
push
push
movb
ret
orl
jae
fcoms
and
jnp
dec
pushf
inc
loopne
add
sub
inc
pop
adc
xor
sub
pop
cmp
sbb
lcall
adc
xchg
fucom
inc
xlat
test
lret
pop
lea
inc
adc
cmpb
cmp
ja
mov
and
mov
cmp
add
daa
and
sbb
lret
jo
inc
shl
popl
sbb
lcall
and
xchg
negl
push
jecxz
flds
icebp
lcall
enter
test
iret
push
cmp
pushf
add
add
pop
and
aad
xor
popa
shrl
and
lret
imul
ret
dec
in
rorb
or
mov
inc
dec
inc
jne
inc
mov
push
out
and
pusha
jns
mov
sub
and
test
mov
xchg
or
push
fsts
arpl
aam
stos
adc
lds
mov
push
ret
lods
inc
popf
mov
mov
les
xor
sbb
cmp
fcoms
sub
dec
aad
add
decl
sti
xchg
int
add
adc
sbb
daa
mov
jnp
pop
es
dec
push
xchg
inc
inc
adc
push
adc
or
and
cmp
into
or
out
or
inc
mov
sarl
pop
adc
nop
icebp
int3
test
mov
mov
mov
sub
push
pop
or
sbb
shll
or
cmp
adc
popa
cli
icebp
pop
inc
aam
adc
loopne
push
jecxz
sbb
enter
mov
push
fwait
cmp
xchg
cmp
ja
nop
and
mov
inc
cli
lcall
jae
cmp
add
dec
jmp
loope
pop
sbb
adc
shrl
xor
or
pop
xchg
je
push
and
dec
lea
inc
movsl
mov
push
popa
jmp
xchg
mov
clc
dec
adc
rorl
sub
roll
xchg
loopne
orb
rolb
mov
lahf
xchg
je
jno
std
pop
inc
leave
inc
test
push
sbb
lcall
xor
popf
shll
inc
push
int
xor
jns
xor
mov
movsl
mov
leave
mov
inc
lret
andl
dec
jb
sub
pop
dec
push
mov
lods
xchg
cmc
insl
pop
mov
lods
cmpsl
fldl
inc
out
xorl
add
xor
pop
mov
mov
imul
sbb
fcoml
mov
dec
ret
xor
movsl
insl
mov
xchg
sbb
inc
add
lret
cmp
rorb
lods
les
pop
or
mov
xchg
push
mov
int3
jns
push
xor
sub
movsl
or
push
lcall
test
std
das
out
or
repnz
lods
and
imul
inc
sbb
push
inc
cmp
inc
lds
mov
inc
mov
or
push
add
cmp
push
or
adc
add
or
adc
int
lea
cmp
push
rcrl
jmp
popa
cmp
push
out
push
ret
cmp
sti
adc
lds
mov
or
pop
sub
sub
rcrl
and
pop
jo
cwtl
mov
test
push
and
push
jmp
cltd
popa
and
cmpsb
loop
mov
sbb
movsl
ret
lret
adc
movsb
aas
cli
lds
das
in
mov
and
sahf
out
pop
std
insl
pop
dec
pop
std
push
rcll
sbb
mov
jae
xlat
or
mov
inc
jno
xor
xchg
mov
inc
adc
aaa
fs
lods
mov
dec
and
jns
xor
jecxz
cmpl
mov
int
imul
add
cld
imul
hlt
add
call
aam
xchg
shl
imul
add
push
and
or
scas
push
rcrb
xor
or
imul
rolb
push
or
push
sar
clc
xor
jmp
cltd
pop
or
pop
js
adcl
and
push
dec
mov
ljmp
rolb
xor
pop
fdiv
or
repnz
add
dec
adc
and
jge
jmp
cltd
pop
xor
and
push
shll
inc
shlb
insl
sbb
or
and
test
cs
pop
out
ret
pop
mov
aas
push
je
add
cmp
outsb
adc
cmp
stos
xlat
sbb
mov
or
aas
fisttpl
lcall
roll
dec
push
pop
out
xchg
push
aaa
gs
imul
jne
dec
mov
xchg
add
mov
push
adc
add
lods
andl
sub
push
jno
xor
es
inc
adc
sub
mov
jmp
xchg
ss
add
lods
test
je
push
pusha
lds
mov
insb
ret
jg
out
push
push
inc
sbb
in
ja
dec
push
ss
imul
jne
dec
dec
mov
divl
pop
xor
xchg
sbbl
add
ss
and
xchg
and
xor
adc
mov
es
pop
loopne
lea
sub
and
leave
cltd
push
mov
add
mov
push
ja
test
inc
xchg
push
adc
add
dec
or
adc
inc
lds
mov
or
les
xlat
popa
sub
add
cmpl
jp
sub
aas
leave
rol
sub
inc
frndint
mov
sub
sbb
or
sbb
inc
add
cmpsl
mov
or
sbb
sub
pusha
loopne
cmpsb
decl
gs
lods
jnp
xor
inc
imul
shlb
adc
pop
pop
jp
sbb
rclb
fsts
sbb
sub
popa
or
rorl
lods
pop
xchg
jno
push
fsubrs
lea
inc
or
imul
jno
lds
aad
jne
andl
jmp
mov
jecxz
adc
inc
pop
stos
push
jnp
mov
push
xchg
push
mov
or
mov
mov
push
sub
ficoml
sub
sbb
aad
mov
mov
push
mov
push
andb
lds
mov
popf
lret
mov
dec
mov
dec
imul
aas
test
popa
stos
mov
out
pop
jno
cwtl
testl
mov
rol
rcll
ljmp
adc
stos
aam
sub
xor
inc
push
rolb
sub
push
nop
repz
loop
push
mov
add
and
or
add
and
xchg
pop
icebp
ljmp
add
mov
mov
mov
inc
inc
jl
sbb
push
jmp
or
mov
mov
sbb
add
sahf
sub
push
cmp
cmc
and
inc
xor
add
hlt
jno
sbb
dec
sub
addb
or
test
sarb
andl
lea
cltd
sbb
inc
lock
insl
cmp
dec
ja
test
pusha
xchg
mov
mov
or
fnstcw
sub
sub
rol
rcr
pop
movsl
and
shll
xlat
push
or
sub
mov
adcb
and
xchg
roll
jnp
sbbl
shll
rclb
or
jae
rcl
push
xor
cltd
mov
xor
int
fadds
inc
leave
pop
jb
push
sbb
rolb
or
imul
xchg
scas
cmp
sbb
not
adc
xchg
add
shl
xchg
pop
jb
mov
push
jo
ret
into
daa
xor
repnz
pushf
xchg
xchg
xor
push
or
enter
rcr
inc
lds
in
mov
push
lock
jmp
xchg
pop
insb
inc
popa
xor
fwait
adc
pop
and
mov
lock
mov
shlb
push
test
daa
in
push
add
movsl
sub
outsl
orl
dec
cmp
data16
push
lcall
loope
test
add
jg
and
xchg
mov
adc
inc
sbb
add
or
sbb
bound
dec
stos
mov
mov
sahf
add
mov
sahf
int
mov
mov
inc
cmp
mov
pop
or
ss
cmp
adc
jb
or
mov
fmul
pop
xchg
call
and
jecxz
mov
adc
sbb
push
repz
and
ffree
popa
pop
sbb
inc
fxch
in
movsl
scas
lea
test
aam
xor
loopne
mov
loop
inc
and
add
push
shll
xor
mov
or
test
rorb
inc
inc
test
test
jmp
enter
jg
jno
mov
push
add
js
test
push
roll
push
inc
push
rolb
add
popa
stc
les
inc
pop
shlb
sub
test
ret
inc
or
pop
stos
nop
ss
inc
pop
jno
imul
add
or
xchg
push
push
rol
sbb
shrb
jmp
jns
or
jbe
adc
cmp
or
fwait
inc
scas
out
pop
sub
xchg
or
push
and
or
shlb
dec
ret
and
dec
push
push
add
or
mov
add
cmp
sbb
out
loopne
lcall
and
cmp
sub
sbbl
call
lods
push
add
mov
xor
cmp
pop
imul
push
insl
jne
inc
add
bound
inc
aam
arpl
pop
sbb
mov
inc
and
shlb
mov
js
xchg
mov
xchg
push
inc
dec
adc
stos
mov
xchg
sti
dec
ret
bound
test
les
mov
in
dec
loope
mov
mov
push
inc
leave
test
pushf
xor
dec
add
cmpsb
jle
inc
add
cmp
inc
xlat
aam
jns
sub
mov
xchg
jae
xor
xchg
cmc
pushf
xchg
loopne
xor
nop
icebp
fdivr
ret
add
mov
or
sub
adc
in
push
jno
sbb
push
aam
orb
xchg
or
mov
orl
ret
inc
lods
sbb
addl
sbb
out
addb
and
dec
dec
ss
stc
inc
pushf
and
xor
in
mov
scas
add
mov
push
rcl
js
andl
adc
addl
push
xor
mov
sbbl
jmp
sbb
xchg
adc
push
sub
rol
test
xor
pusha
aad
jecxz
movsb
cld
int3
sub
popf
jmp
test
fs
sbb
and
je
pop
pop
push
shlb
popa
mov
pop
or
pushf
pop
mov
cmp
pusha
inc
lcall
arpl
jae
shrb
hlt
push
mov
inc
enter
jns
add
adcl
sbb
xchg
dec
mov
adc
dec
rcrl
pop
mov
pusha
aad
dec
clc
cmp
decl
mov
movd
push
xchg
push
mov
cwtl
in
inc
leave
jp
inc
stos
roll
push
inc
adc
ljmp
repz
mov
adc
xor
ret
in
mov
mov
add
mov
push
popf
sub
or
adc
mov
jno
and
movsb
or
inc
movsl
sbb
add
test
and
add
push
in
int3
inc
adcl
lea
pop
mov
enter
stos
das
stos
and
cltd
pusha
call
push
aam
lret
add
popf
fs
mov
sub
push
xor
imul
in
pop
jne
push
or
repz
and
push
hlt
sub
push
iret
add
cmp
outsb
dec
adc
in
mov
dec
in
push
adc
add
cmp
int
dec
or
mov
dec
push
xchg
sub
cltd
insb
xchg
push
mov
mov
jno
adc
and
adc
js
or
push
sti
jl
sbb
inc
lea
mov
cmpsl
lea
orl
fidivrl
rcrb
loope
arpl
mov
or
rorl
and
xor
jnp
and
pusha
pop
xor
mov
lret
dec
xor
addl
push
sub
rclb
or
cmp
je
daa
dec
sahf
dec
pop
push
int3
adc
add
dec
sub
sbb
stos
mov
imul
mov
pusha
xor
pop
pop
cmpsl
jno
jecxz
inc
add
sub
pop
and
xchg
mov
or
imul
pop
rol
dec
mov
es
sbb
pop
imul
xrelease
ret
aad
clts
icebp
xor
sub
jmp
mov
test
imul
stc
push
inc
pop
loope
mov
roll
or
or
sbb
add
xor
jns
and
aas
bnd
mov
dec
xlat
es
add
lcall
imul
mov
pop
test
xor
das
adc
cwtl
sbb
test
push
add
add
push
sbb
adc
leave
loopne
mov
imul
xor
xchg
cltd
out
fists
and
inc
cmpl
xchg
out
sarb
out
cli
mov
mov
mov
mov
mov
sbb
jecxz
ret
das
and
adc
push
push
push
cmp
pop
inc
leave
pop
add
mov
pop
dec
push
xor
sbb
push
test
test
jae
push
loopne
movsb
cltd
xchg
aaa
xchg
sbb
adc
int3
dec
imul
test
mov
dec
adc
pushf
cmc
pop
pop
sub
les
std
outsl
mov
inc
cltd
ret
mov
and
mov
and
out
and
loop
out
xor
nop
sbb
sahf
cmp
nop
and
je
adc
mov
push
add
rorb
inc
dec
cwtl
sub
and
or
stos
and
or
or
push
addl
xor
popa
push
mov
adc
icebp
bound
adc
adc
and
inc
daa
out
push
cltd
push
xchg
and
or
pop
les
mov
sbb
daa
stos
mov
nop
cltd
leave
andl
cmpsl
inc
xor
inc
and
add
dec
sbbl
or
mov
push
sbbb
mov
pop
fdivp
pop
dec
lcall
push
bound
repz
or
lea
or
push
pop
adc
aaa
jo
cmpsl
adc
add
stc
les
jecxz
fildl
jmp
push
notl
dec
jmp
sar
jne
pop
test
sub
pop
adc
aad
movsl
push
jo
cmpsl
adc
mov
mov
aam
push
and
aas
push
xchg
mov
and
adc
inc
loopne
push
sbb
and
xchg
repz
jecxz
repnz
pusha
test
lcall
pop
imul
xchg
sbb
imul
sub
cmp
jg
test
push
mov
xor
jo
imul
mov
sbb
cmp
add
adc
insl
adc
sub
sbb
ljmp
repnz
inc
adc
xchg
add
xchg
ss
add
or
sub
add
ds
jg
orb
push
pop
lods
and
adc
pop
int
andb
push
in
pop
std
or
int
jmp
sbb
into
or
add
fisubs
cwtl
and
loope
icebp
adc
add
roll
xchg
pop
push
pop
rorl
and
or
leave
mov
dec
addr16
mov
fdivs
inc
lods
popf
xchg
dec
and
dec
orb
adc
cs
stc
adc
dec
lcall
enter
loopne
xlat
ss
pop
pop
push
xchg
adcb
pusha
mov
jmp
shrb
or
or
mov
and
push
sub
sub
paddd
dec
inc
dec
adc
or
add
ret
mov
aas
dec
push
sbb
out
test
push
dec
or
mov
ret
pushf
jecxz
addb
push
js
sub
adc
pop
mov
push
add
dec
roll
adc
popa
xchg
add
or
cmc
or
das
dec
jecxz
rorb
stos
xchg
cmp
jne
and
loope
xor
cmp
push
cwtl
mov
pop
adc
xor
ret
or
daa
cmp
jb
mov
jns
mov
js
add
mov
test
sbb
push
mov
push
mov
out
mov
loopne
adcl
push
jmp
jno
js
mov
xor
inc
stos
mov
rolb
xchg
subl
jmp
sbb
or
insb
adc
xchg
mov
push
and
dec
add
adc
mov
add
sub
adc
sbb
and
fisttpll
or
add
lods
mov
sbb
sarl
jno
jne
rol
cs
adc
pop
mov
pop
mov
xchg
and
push
scas
inc
in
cmp
jge
aaa
mov
and
add
in
cmpsb
jmp
roll
rolb
jmp
mov
adc
addl
stos
loope
dec
jae
add
jns
fmull
or
xchg
mov
leave
sub
addl
mov
in
push
add
mov
ret
cld
shll
test
call
mov
mov
jno
stos
lods
adc
push
insb
or
inc
lock
xchg
aam
cs
jmp
nop
sbb
data16
pop
and
push
je
or
inc
enter
imul
aaa
inc
sub
sub
push
lea
loop
cmp
or
inc
pop
scas
cmpsl
imulb
mov
jne
sub
iret
mov
sbb
movsl
push
push
adc
and
jns
mov
xor
inc
popa
and
movsb
push
xor
rolb
mov
jne
ret
scas
mov
push
mov
inc
cmpsb
cmpsb
add
sti
aaa
pop
dec
inc
test
jno
or
rolb
pop
fstps
sub
xchg
and
dec
in
imul
je
pop
push
rcrb
imul
rcll
jno
and
cmpsl
test
in
and
and
roll
adc
mov
xchg
jno
sub
fld
sub
sbb
xor
and
sbb
cmpsb
sub
lods
inc
or
dec
mov
or
or
or
cmc
dec
cmp
test
add
mov
dec
dec
xor
pop
minps
ret
or
xlat
rcrb
std
je
mov
cmc
imul
aam
xor
sbb
jg
or
cli
jecxz
mov
adc
xchg
scas
js
push
sub
cli
cmp
sbb
push
push
aas
add
test
jno
cmpsl
inc
movsl
insl
jl
add
pusha
ljmp
bound
pop
xlat
and
lret
gs
cltd
mov
sahf
out
int3
jmp
or
in
xchg
cwtl
inc
adc
mov
mov
inc
es
adc
andb
push
ret
sbbl
imul
scas
add
and
sbb
mov
add
test
mov
loop
xor
repz
adc
lea
push
pop
pop
xchg
mov
les
jmp
test
xchg
jo
xor
sub
sti
lock
xorb
and
mov
sbb
fisttps
dec
pop
repnz
push
test
cmp
rorb
add
jns
jle
sbb
sbb
lods
outsl
cmp
movl
xorl
jae
or
popf
dec
mov
push
xlat
mov
ret
sub
shrb
xor
mov
mov
divl
sub
bound
sub
add
inc
dec
xlat
mov
push
xchg
cmp
xor
aad
aas
rolb
cmpsb
add
sbb
sbb
sub
or
nop
fimuls
sarb
arpl
add
rcl
or
or
cmpl
add
dec
ljmp
add
lahf
mov
sbb
add
lock
inc
sbb
rclb
sbbb
push
mov
daa
or
xchg
mov
pop
ss
cmpsb
mov
inc
lcall
cmpsl
loopne
in
test
dec
push
test
out
aad
pop
sbb
mov
xor
aam
dec
pop
and
mov
dec
mov
test
daa
nop
arpl
xor
push
ljmp
je
add
cmp
movsb
xchg
cltd
movsb
mov
and
sub
sti
fwait
sbb
mov
or
mov
fstl
push
mov
aam
cmp
cmc
je
call
arpl
ret
sbb
jno
push
dec
mov
pop
push
js
mov
sbb
imul
add
cltd
lcall
lcall
mov
cs
and
or
enter
xchg
loop
push
or
jb
add
scas
push
and
and
push
adc
push
or
dec
cmpsb
out
add
xor
subb
mov
push
xor
js
and
cmc
lahf
xor
lds
imul
dec
adc
adc
cmp
sub
movsb
loope
fwait
outsl
dec
xchg
pop
arpl
das
mov
add
cmp
xor
andl
nop
cmpsl
add
pop
inc
mov
pop
xchg
xor
andl
sbb
or
scas
sbb
mov
adc
adc
out
cld
imul
test
mov
adc
test
stos
cs
mov
cmp
sub
jg
or
push
shr
lea
shrb
shlb
pop
test
cmpsb
mov
cmp
mov
aam
jg
in
or
mov
push
add
cmp
adc
fimull
ss
ret
test
fwait
mov
imul
addl
mov
fmulp
mov
shlb
jnp
cmp
adc
loope
sbb
imul
add
dec
sub
or
add
inc
inc
movsb
mov
out
adc
mov
mov
xor
and
mov
movsl
mov
jno
xchg
pop
rcll
cmp
add
std
mov
dec
jae
xchg
adc
sbb
mov
or
roll
lahf
jno
xchg
jl
scas
mov
cmc
pop
adc
rorb
sbb
sbb
insb
adc
shr
je
ret
cmp
ss
xor
xor
cmpsl
gs
aaa
aaa
mov
push
mov
lds
cmc
mov
adc
pextrw
addb
xchg
mov
nop
dec
xchg
lret
inc
loop
sbb
jne
rclb
rcrl
pop
add
mov
lret
mov
roll
adc
sbb
cmp
lods
xchg
arpl
inc
out
add
xor
loope
shrl
and
lds
inc
jnp
pop
lds
ret
cmp
sub
fsubl
dec
adc
bound
ret
add
dec
rcrb
fldcw
and
mov
not
and
aas
aad
aad
cmpb
enter
daa
mov
aam
and
lock
dec
or
jb
sub
jbe
push
shlb
inc
or
mov
sbb
push
insb
add
dec
testb
dec
shrb
arpl
dec
adc
or
ret
movsl
jge
mov
or
iret
jno
or
ljmp
dec
inc
cmp
or
mov
push
or
nop
xchg
repnz
test
test
dec
cmc
jecxz
xor
clc
dec
fisttps
or
movsb
sub
aaa
shll
push
je
es
xorl
mov
andl
cbtw
sub
cmp
xchg
out
push
ss
add
mov
adc
or
pop
mov
dec
dec
inc
data16
adc
add
adc
jg
and
lahf
stos
andl
or
dec
inc
mov
xchg
push
lods
push
movsb
scas
rorl
mov
and
add
lock
and
pop
fnstenv
mov
and
lods
arpl
xlat
movsb
adc
inc
cmp
test
mov
loope
rolb
xchg
aaa
cwtl
xor
lea
rol
xchg
scas
shrl
stos
mov
mov
lret
adc
cltd
mov
add
add
adc
push
mov
xchg
mov
mov
pop
sahf
sub
test
or
scas
or
push
add
adc
mov
call
int
mov
mov
adc
xor
nop
inc
insb
es
nop
bound
add
pop
andw
sbb
nop
mov
ret
inc
xor
cltd
pop
imul
jo
adc
mov
push
and
xor
push
cmpsl
cli
add
jg
and
stos
jge
sub
add
pusha
lret
xor
ljmp
adc
mov
andl
loope
pushf
aaa
call
adc
mov
orb
xchg
inc
mov
lcall
cs
mov
movsb
addl
lcall
add
pop
and
mov
mov
repz
xchg
test
or
or
lret
adc
bnd
loop
or
push
xchg
adc
imul
and
cmp
aaa
dec
les
cmc
imul
push
push
push
xor
and
adc
mov
outsb
cwtl
insb
sbb
inc
insl
lods
enterw
pop
xor
mov
mov
cmp
add
mov
in
xchg
scas
addb
adc
dec
lea
mov
shrl
les
ret
sbb
rorb
sub
shlb
call
lods
out
test
loop
aas
sbb
scas
jno
push
stos
dec
adc
insb
sub
xor
sub
inc
sbb
or
xor
or
push
dec
xor
jne
adc
jb
adc
cwtl
out
mov
and
aam
insb
and
or
mov
mov
add
test
jns
outsb
sub
mov
loop
sub
sub
add
pop
inc
test
xchg
rol
cltd
imul
cmpsb
fists
adc
cmp
or
xor
cwtl
adc
jnp
push
and
movsl
sbb
subl
ret
adc
adc
addl
xor
nop
pop
jg
cltd
and
stos
push
mov
mov
fists
xor
cmp
jns
cmpsb
sarb
cmpl
outsb
arpl
cmp
xchg
sbb
popa
cmp
daa
add
sub
xor
jmp
add
push
mov
int
movsl
adcb
fldt
sbb
mov
daa
xchg
push
jecxz
in
in
je
shlb
adc
pushf
rorl
packssdw
test
orb
xchg
xchg
mov
or
push
sarl
jge
push
adcl
and
sbb
dec
adc
rcrl
add
subl
xlat
xchg
add
out
sbb
ret
insl
and
inc
mov
mov
mov
addb
and
mov
jge
lret
test
pop
and
add
add
and
insb
jg
push
movsb
test
mov
and
inc
mov
cmpsb
stos
popa
out
and
push
sbb
mov
pop
inc
gs
fs
add
loop
hlt
jo
mov
ljmp
add
mov
push
imul
aaa
add
xchg
sahf
push
lcall
adc
cmc
pop
jl
push
sub
xor
mov
cmpsl
shrl
std
xor
and
push
mov
test
fldcw
mov
xchg
push
je
and
insl
in
inc
or
add
push
shll
push
pusha
xchg
movsl
sbb
push
inc
pop
dec
adc
divb
das
ret
dec
int
inc
test
fcoms
mov
test
jp
pop
rcll
fcmovne
mov
sti
or
iret
adc
jg
xchg
and
cmp
pop
jae
outsb
sarl
pop
lods
jmp
add
jns
nop
push
push
sub
pusha
push
movsl
cmpsb
test
xchg
jmp
out
imul
aam
mov
pop
jp
adc
xchg
ror
and
push
aas
ret
movsl
xorb
xor
jno
in
and
mov
les
add
adcl
cmp
mov
fldenv
cld
or
js
and
sub
insl
dec
sub
xchg
pop
jecxz
push
movsl
push
inc
sti
outsl
dec
sbb
les
into
shrb
test
andb
push
cmp
sub
orl
push
dec
les
aaa
sbbl
inc
sbbl
dec
repz
shrb
or
ret
or
cmpb
movsl
sub
and
insl
inc
and
shll
add
int3
int3
dec
sub
test
jo
adc
sbb
jno
and
inc
sub
popf
inc
and
mov
test
popf
or
test
int
adc
repnz
or
push
mov
adc
arpl
ret
adc
outsb
dec
push
or
pusha
mov
sub
mov
push
addr16
adc
add
cmp
and
test
and
rclb
js
orb
sub
cmp
mov
xor
adc
adc
orl
scas
loopne
jecxz
and
adc
pop
inc
xor
mov
pop
xchg
pop
lcall
les
xor
mov
sbb
std
add
jno
inc
xor
dec
cmpsl
push
loopne
loopne
popf
dec
sbb
lea
push
iret
add
sbb
pop
nop
divl
insb
imul
rclb
fistps
sub
dec
in
adc
aas
inc
xchg
and
das
repnz
imul
test
and
jo
jmp
mov
bound
dec
push
add
or
push
movsb
dec
adc
mov
jno
rol
and
xor
mov
push
xchg
and
fwait
xchg
aas
xor
jo
add
dec
gs
lds
push
or
xor
push
adc
mov
dec
xor
inc
dec
lret
imul
fldcw
xchg
cmp
push
add
sbb
sbb
xchg
xchg
add
push
pop
je
and
push
add
loop
cld
mov
dec
imul
je
dec
push
add
test
mov
xor
ljmp
mov
popf
fwait
roll
add
xor
sbb
aam
mov
in
inc
fs
cmp
or
gs
sbb
pop
xchg
movsl
xchg
push
sbb
jo
int
jne
daa
rorb
fwait
and
sbb
orb
or
and
cmp
test
iret
jmp
adc
pop
and
sub
inc
push
jge
loop
dec
andb
rclb
mov
lea
push
push
adc
push
mov
subl
add
inc
adcl
xorb
inc
pop
sbb
adc
sbbl
ret
mov
stos
mov
daa
add
push
xor
daa
xor
addr16
iret
mov
mov
xor
insl
notl
addb
cmc
mov
adc
inc
xchg
daa
pmullw
cmp
pusha
ret
push
nop
imul
mov
add
dec
inc
bound
ret
sahf
mov
push
orl
xchg
shll
es
cmpsl
lret
in
sub
daa
jno
mov
and
mov
jae
add
lods
push
faddp
mov
dec
adc
fstl
in
rorb
or
inc
lods
xchg
dec
out
bound
test
and
or
cmp
mov
je
dec
sbb
mov
sub
dec
cs
lods
add
sbb
lock
sbb
add
adc
cmpsl
insb
test
scas
or
adc
push
dec
inc
xor
add
inc
push
pop
mov
cmp
lods
push
xchg
adc
lret
hlt
cmpb
repnz
movsl
dec
imul
scas
pusha
movsb
nop
add
add
sarb
push
leave
out
sbb
and
jmp
shr
sub
daa
call
or
mov
jb
xor
mov
gs
or
inc
ret
daa
lods
bound
and
adc
xor
dec
sbb
fsts
xor
push
mov
aaa
mov
or
sbb
add
push
xchg
push
add
rol
nop
les
add
xchg
adc
cs
adcb
movsb
imul
xchg
push
xchg
sbb
jecxz
push
test
addr16
add
inc
popa
dec
loope
mov
aad
test
sbb
adc
add
and
lea
push
in
mov
inc
push
fwait
dec
xor
sbb
sbb
dec
aaa
gs
mov
mov
lret
rorb
insl
or
jno
add
movsb
cs
or
inc
int
ja
adc
xchg
dec
mov
or
pop
adc
cs
les
mov
add
adc
scas
mov
push
xchg
call
ror
add
sbb
cmp
and
xor
pusha
adc
xlat
mov
cmpsb
lcall
xchg
loope
and
adc
and
sahf
pop
dec
je
push
mov
dec
test
cmc
pop
rorb
jno
pop
sbb
push
add
push
ret
xor
test
inc
inc
pop
mov
popa
loope
inc
daa
push
dec
aad
inc
aas
fs
test
pop
sub
dec
call
adc
or
pop
je
mov
or
mov
popa
leave
test
mov
add
rcll
adc
sbb
mov
and
add
add
or
and
sub
and
pop
les
aad
je
mov
fadds
push
mov
sbb
pop
pop
dec
rorb
mov
jge
pop
and
test
bound
popa
stos
lods
sub
xchg
dec
in
push
sub
movsl
jne
aaa
cmpsb
sbb
aaa
jnp
xchg
sub
dec
or
out
jecxz
mov
push
cs
and
or
les
add
inc
xchg
mov
sub
push
push
xor
xor
mov
inc
sbb
dec
test
and
adc
jge
add
lea
jae
inc
sub
inc
inc
or
adc
add
or
js
out
adc
adc
add
arpl
xchg
jle
inc
cs
jno
xor
add
mov
and
and
lahf
jno
test
adcl
les
inc
daa
dec
dec
jle
or
add
add
mov
ljmp
inc
cld
adc
cmpsl
mov
or
or
push
adc
loop
add
mov
cmp
adc
jl
adc
nop
or
sub
icebp
imul
and
mov
or
mov
outsl
or
or
xchg
inc
cmp
adc
into
xor
pop
ret
xchg
in
mov
ja
add
mov
stos
xor
fsts
mov
icebp
popa
mov
or
sub
mov
adc
imul
xchg
and
dec
and
adc
inc
mov
in
popa
adc
popa
inc
mov
aaa
and
xor
mov
push
loop
mov
lds
mov
pop
dec
jne
inc
iret
xchg
push
and
popa
sub
add
xchg
cmp
dec
cmp
push
cltd
adc
leave
adc
adc
or
dec
sbb
cwtl
sub
xlat
xlat
fwait
inc
jnp
sub
mov
icebp
mov
xor
jb
mov
dec
pop
cmpb
mov
sbb
cmp
mov
push
lock
add
adc
push
xlat
add
mov
lods
mov
push
mov
pop
sub
and
mov
pop
and
imul
pop
lret
jg
inc
dec
arpl
in
sbb
push
test
adc
imul
xor
xchg
out
mov
clc
adc
rol
sbb
cmp
and
xor
dec
movsl
pusha
xchg
mov
mov
push
inc
add
ret
lahf
mov
inc
add
adc
lahf
xor
add
dec
xor
push
out
orl
xchg
es
mov
je
mov
adc
aas
xor
arpl
repz
bound
iret
fs
test
cmpxchg
jns
outsb
fwait
or
dec
pop
enter
pop
inc
insb
imul
ljmp
cltd
in
add
shr
and
enter
mov
out
rcl
mov
lret
inc
fs
add
xor
lea
ret
jb
xor
subb
dec
rol
xchg
stc
add
test
mov
shrl
push
jle
pop
add
fldcw
filds
mov
mov
add
aam
xlat
insl
test
ret
dec
pusha
add
xor
sbbb
lock
push
sbb
sub
es
ret
lahf
pop
add
mull
stc
fcomi
insb
adc
mov
push
push
popa
aad
cwtl
pop
mov
and
adc
les
xor
sti
les
bound
push
cmp
xchg
mov
dec
push
pop
lds
dec
push
rolb
inc
dec
jae
bound
pop
arpl
cmp
push
add
movsl
lcall
jle
leave
addl
aad
bound
or
xor
mov
adc
outsb
or
mov
out
push
addb
cmp
loop
fistps
dec
add
rolb
sbb
mov
dec
popa
push
mov
adc
push
imul
cld
fnsave
or
adc
fxch
adcb
push
fwait
orb
cmpsb
adc
cmp
inc
adc
mov
sahf
push
cs
sub
clc
les
jb
dec
orb
adc
sub
xchg
jmp
out
mov
cmpsl
mov
rcl
push
sbb
or
rol
shl
ja
adcl
adc
adc
ret
adc
stos
or
pop
inc
sbb
inc
push
adc
push
sbb
xchg
mov
cmp
mov
inc
xchg
daa
mov
cs
or
test
and
push
xor
push
dec
pop
xchg
lea
sbb
test
add
in
inc
mov
filds
inc
push
fldl
and
or
cmpsb
pop
jmp
mov
xor
inc
dec
shl
xor
cwtl
loopne
outsb
cmp
push
test
adc
out
add
jno
jmp
dec
fstpt
enter
add
add
adc
andb
test
or
sbb
add
dec
sub
sub
lods
sub
adc
mov
je
and
mov
fs
pop
and
sbb
lcall
sub
addr16
push
ljmp
subb
xor
sbb
adcl
sbbl
aas
mov
pop
pop
arpl
cmp
dec
inc
or
dec
repz
xchg
mov
bound
aaa
maskmovq
mull
mov
jns
push
add
fs
inc
xorb
add
xchg
or
adc
xchg
and
ret
pop
bound
rclb
or
mov
movsb
jne
cmpsl
rcrl
mov
pop
andl
aad
test
adc
dec
adc
sbb
push
inc
dec
cwtl
dec
adc
lahf
dec
inc
inc
lods
and
and
jbe
test
adc
jns
pop
push
pop
adcb
sub
stos
rolb
sub
fiaddl
mov
inc
jns
mov
add
inc
ja
mov
xchg
jg
sbb
jnp
push
subb
add
mov
scas
add
test
fbld
cwtl
add
test
add
and
sbb
rclb
out
enter
sbb
push
push
or
inc
jge
rcrb
or
mov
mov
add
pop
mov
mov
movb
mov
add
adc
filds
incb
dec
sbb
imul
inc
nop
sbb
lret
cwtl
stc
pop
stos
or
push
xchg
adc
and
mov
adc
mov
imull
and
add
scas
push
and
je
xor
test
inc
sbb
mov
sub
jbe
mov
stos
mov
loope
xor
adc
ljmp
movl
or
outsb
and
pusha
notl
inc
bound
mov
push
and
push
and
xorl
mov
add
aam
sbb
pop
mov
cld
adc
cwtl
add
jle
inc
jp
xor
add
inc
mov
test
or
pop
test
adc
inc
and
xor
pusha
adc
dec
pop
rcr
add
cli
fisttpll
or
xor
add
mov
xor
and
inc
loope
and
push
sbb
nop
inc
mov
and
rol
push
add
inc
inc
mov
push
or
fcmovnb
jno
dec
xchg
aad
mov
bound
xchg
popa
loop
les
inc
add
add
add
sbb
mov
adc
mov
lods
adc
inc
js
xchg
or
xchg
mov
add
shlb
and
cmpsb
shll
mov
stos
push
shrl
leave
lret
xchg
std
les
jno
push
mov
add
pop
add
or
cmpl
xchg
pop
test
mov
movsl
push
add
push
add
iret
loop
in
int3
or
enter
or
es
pusha
add
nop
push
les
pushf
push
jno
add
mov
inc
adc
es
add
xchg
jae
mov
inc
insl
add
int
arpl
push
xor
sti
lahf
inc
add
test
test
and
inc
add
rclb
and
sub
mov
lods
push
ss
mov
inc
add
test
js
push
outsl
adc
loopne
push
xchg
popa
sub
es
jo
sbb
dec
push
dec
das
push
xchg
adc
and
cmp
in
push
mov
pusha
and
mov
pop
sbb
mov
adc
pop
xchg
mov
faddl
arpl
adc
sbb
inc
fists
fmull
rcll
push
cltd
add
cwtl
les
add
shrb
test
cmpsb
scas
int
xor
fistpll
inc
cmc
xor
bound
lods
or
rorl
outsl
inc
popf
mov
inc
cmp
jecxz
imul
mov
mov
inc
dec
inc
cmp
les
cmpsb
or
add
or
mov
xchg
xor
push
xor
dec
add
repnz
stos
xchg
jno
sbb
shrl
jecxz
mov
mov
inc
repnz
mov
mov
loope
jae
inc
inc
inc
rclb
fisttpll
add
mov
scas
and
popa
out
cwtl
adc
test
push
rorb
adc
fistps
rcl
gs
rol
popf
movsl
dec
jge
pop
les
sarl
or
inc
pop
maxps
push
add
ljmp
xchg
test
xor
add
pushl
int3
stc
sub
shll
push
or
and
xchg
dec
mov
cmp
add
xchg
mov
or
jno
or
les
test
movb
das
test
or
sar
loope
rorl
int
test
dec
push
aad
xor
mov
outsl
sbbb
nop
sti
and
mov
inc
das
jmp
lock
aas
pop
xor
sbb
or
lahf
mov
xchg
and
mov
push
sub
popa
lods
push
mov
jg
sbb
or
add
fwait
xchg
loope
jg
adc
push
mov
rol
push
aam
test
subl
popa
bound
stos
lods
push
push
scas
and
addb
mov
mov
inc
sub
inc
std
arpl
inc
jmp
pop
push
cmpsb
xchg
cwtl
icebp
xchg
lea
cltd
inc
cmp
push
add
loop
test
add
or
mov
pop
dec
imul
imul
push
or
test
pop
add
scas
sbb
mov
jo
sbb
sbb
fwait
pop
xchg
mov
inc
test
and
xor
adc
neg
adcb
cmpsl
aad
or
or
jnp
xor
fsts
and
pop
xlat
inc
mov
in
sbbb
sbb
sbb
les
sub
mov
cwtl
test
mov
mov
or
push
add
mov
xchg
scas
mov
addb
rolb
inc
add
cwtl
adc
jb
mov
cmc
sbb
pop
leave
adc
test
or
inc
mov
xor
adc
mov
adc
sub
jecxz
inc
mov
push
push
pushf
push
inc
mov
ss
mov
loop
xchg
mov
xchg
mov
jo
scas
jb
arpl
mov
shll
jae
dec
fwait
paddq
es
inc
jo
add
mov
les
dec
cmpsb
in
nop
add
lret
pop
arpl
scas
inc
cmp
cmp
inc
stos
xor
and
inc
push
push
xchg
ret
or
sub
sbb
sti
inc
or
mov
loopne
lret
push
rcl
mov
sbb
aaa
push
popa
push
and
mov
push
xchg
or
fmuls
daa
push
cmp
test
fwait
push
cs
dec
movsl
jns
test
jecxz
add
add
push
clc
pop
mov
sbb
push
cmp
pop
test
es
arpl
adc
and
sub
leave
mov
mov
xchg
or
sub
mov
test
pop
jae
int
sbbb
std
adc
and
mov
sub
mov
enter
bound
pop
test
jle
or
mov
outsb
stc
popa
cmp
and
or
and
sub
sub
repnz
ss
es
add
lahf
sbb
mov
mov
dec
push
iret
cmpsb
mov
mov
scas
jl
cmp
jo
inc
push
and
leave
pop
dec
imul
sbb
inc
or
add
fisubs
sbb
test
mov
inc
repnz
out
mov
adcb
aad
add
pop
dec
cli
and
adc
sbbb
stos
mov
pop
addr16
and
jecxz
ja
dec
add
inc
pop
jno
sbb
and
dec
jmp
in
jmp
or
inc
add
cwtl
xor
adc
std
addr16
mov
push
mov
mov
and
into
or
xor
outsl
sbbb
mov
xchg
push
inc
jecxz
mov
or
cltd
mov
orb
lea
sbb
push
insb
and
jo
aad
test
fcompl
nop
lret
imul
dec
push
cmp
pop
xor
sub
xchg
push
movsl
mov
dec
test
pop
lods
add
pushl
inc
xlat
fldenv
pop
sub
dec
push
and
lret
mov
add
sti
adc
dec
pop
and
mov
pop
scas
push
dec
add
and
aad
cmp
add
xor
test
push
daa
and
dec
or
mov
movsl
shrl
data16
subl
shrb
pop
sbb
int
rorb
ret
jns
dec
mov
mov
add
sub
cs
or
inc
xchg
adc
pop
push
adc
out
and
mov
adc
popa
roll
aam
jecxz
inc
push
cmp
or
or
xchg
jno
lock
test
movsb
dec
pop
add
pop
dec
xor
mov
mov
lcall
insb
adc
rol
or
in
xor
sub
xchg
dec
mov
inc
std
add
arpl
mov
or
aad
xor
shrb
dec
and
pop
adc
add
xchg
stos
int
imul
jmp
loope
mov
insb
test
and
pop
es
test
sbb
xor
add
mov
add
pusha
jmp
push
xchg
push
add
inc
add
cmpsl
sbb
hlt
push
mov
sbb
cmp
cmpsb
loopne
sbb
daa
push
jo
dec
jge
xor
add
mov
roll
xchg
sub
sbbb
sub
sbb
dec
test
dec
xchg
dec
sbb
and
gs
test
cmpsl
popf
pop
xor
or
jmp
ljmp
add
jo
and
aaa
aaa
mov
adc
xchg
mov
xchg
orb
xor
dec
mov
movb
push
cmpb
jo
mov
aam
mov
push
rclb
dec
jmp
mov
sub
adc
jno
mov
loopne
test
test
dec
in
sbb
sub
pop
lods
orl
fidivrs
outsb
add
and
cmp
xchg
or
pop
xor
aas
subl
inc
lods
lcall
nop
inc
stc
jo
adc
jg
mov
add
push
inc
in
rorl
adc
and
int3
movsb
mov
leave
add
adc
or
mov
dec
push
cmc
mov
sbb
sti
mov
ljmp
mov
mov
nop
inc
ja
orb
add
dec
mov
inc
or
daa
popa
loop
arpl
sub
add
rorl
lret
push
cmp
movsb
subl
gs
inc
mov
add
lods
sbb
popa
and
loopne
in
aas
xchg
mov
ror
mov
sbb
mov
scas
or
sbb
icebp
movsb
mov
sbbb
mov
push
xor
out
stos
fdivs
bound
sub
jp
and
add
inc
stos
xchg
or
imul
shll
pop
nop
outsl
inc
cmp
mov
orl
scas
mov
inc
stos
adcl
addr16
es
repz
add
jnp
icebp
inc
sub
sbb
xchg
clc
push
xchg
sub
push
fsubrl
lret
movsb
push
or
test
inc
stos
adc
push
inc
and
adc
inc
mov
add
mov
mov
push
push
push
cmpl
push
or
fcmovnbe
sub
decl
and
xor
pop
add
jno
imul
loopne
xor
es
loope
rclb
xchg
out
sahf
and
test
pop
in
add
mov
mov
add
jle
inc
pop
inc
add
test
push
test
popf
or
mov
and
adc
andl
dec
mov
test
subb
pop
mov
lods
xchg
sub
popf
or
int
cmp
push
and
mov
test
aam
lahf
xor
int3
adc
adcl
dec
sub
inc
jne
mov
pop
inc
inc
xchg
cwtl
sub
push
je
mov
jo
scas
lea
adc
cwtl
sub
dec
pop
std
adc
push
mov
mov
and
mov
aaa
pop
inc
cmp
or
xor
es
sbb
rcrl
add
outsl
or
and
dec
lcall
dec
and
popa
cmpsl
pusha
rolb
int3
sbb
es
dec
enter
adcb
add
cmc
cmp
push
sbb
and
or
mov
inc
out
imull
mov
pop
loop
cmpsb
sub
mov
dec
and
in
adc
add
test
jecxz
bound
adc
add
add
ror
dec
das
nop
pop
ret
mov
mov
test
adc
push
aam
es
cmp
adc
stos
gs
adc
and
inc
sbb
mov
add
stc
cmp
out
pop
pop
adc
popf
and
xchg
jne
dec
inc
data16
push
or
das
and
sub
pushf
sbb
dec
cmc
sub
cmpb
inc
adc
sub
pop
sbb
arpl
mov
fwait
inc
in
bound
lods
dec
imul
fistpl
leave
sbb
adc
sbb
push
pop
scas
jnp
dec
adc
jp
push
xor
and
inc
sahf
ja
ja
cmp
inc
dec
mov
fisttpl
add
cmp
fnsave
in
out
mov
rorl
or
test
fstl
xchg
xlat
popa
and
sahf
repz
pusha
popa
bswap
sub
paddusw
dec
cmc
sbb
mov
push
jle
pop
mov
add
mov
jl
adc
test
sbb
or
push
cs
loop
and
mov
dec
xchg
xor
js
adc
mov
lahf
push
es
xor
inc
jne
imul
ret
cmp
push
int
mov
add
sbb
push
adc
adc
shlb
pop
mov
or
sub
pop
jno
popa
loop
daa
ror
sbb
dec
sbb
imul
cmp
xor
das
in
popl
test
mov
or
mov
cs
mov
dec
xor
or
lcall
lea
adc
lock
popf
stc
adc
in
outsl
mov
adc
xchg
sbb
sbb
mov
cltd
testl
mov
insl
mov
int
leave
shlb
jnp
int3
mov
push
or
push
add
mov
addl
sub
inc
sbbb
ret
cmp
inc
pushf
orb
adc
sub
or
dec
cmp
sbb
loop
aas
inc
mov
test
lods
or
js
enter
pop
mov
cmc
les
mov
cmpsb
stos
fwait
je
sub
xlat
aas
jp
test
loopne
inc
aam
fs
cmp
xchg
or
mov
inc
out
xchg
xor
jb
popa
nop
dec
loop
dec
pop
or
sub
fwait
ss
push
push
rclb
cmp
push
sbb
add
mov
jge
inc
adc
add
sbb
or
cwtl
bound
mov
pop
sub
add
xorb
xchg
clc
xor
dec
xor
testb
add
and
add
aam
pusha
loopne
xchg
stos
jno
lods
sub
int
push
int
sbb
inc
or
test
and
push
mov
add
in
cmpsb
inc
aad
jne
or
movsl
and
int
es
les
inc
adc
xor
dec
scas
add
pop
and
roll
or
jp
and
fstp
adc
adc
leave
xchg
add
jecxz
orl
fnstenv
or
sub
add
add
mov
or
fdivs
xchg
jae
inc
add
push
movb
inc
pop
push
jno
mov
test
mov
pop
mov
sahf
insb
inc
dec
fcoms
imul
jge
inc
and
jns
add
and
jne
add
fmull
popf
and
or
sbb
xchg
mov
sbb
and
add
add
mov
push
sub
inc
mov
inc
mov
es
xor
sbb
mov
mov
movsb
sbb
imul
and
clc
rclb
fdivs
addl
cmp
xchg
add
js
xchg
sbb
inc
les
sbb
popa
scas
sbb
sbb
dec
cmc
jbe
mov
add
nop
nop
lcall
xor
jecxz
push
push
and
add
or
sub
cmp
add
cmp
shll
add
dec
adc
push
xchg
std
orb
mov
mov
lods
sbb
jmp
sub
push
add
iret
xchg
and
mov
sbb
adc
add
mov
mov
or
repnz
and
gs
hlt
and
dec
push
adc
popf
sarb
rol
cs
dec
lods
xchg
or
push
push
gs
mov
stos
scas
in
cmpb
sbb
sbb
out
popf
push
xchg
jecxz
mov
adcl
mov
push
mov
inc
push
pushf
scas
push
adc
mov
inc
sub
test
stos
lds
dec
adc
xlat
cwtl
rclb
mov
rolb
pop
sbb
mov
xchg
adc
scas
loopne
cmp
sub
jecxz
sub
pop
inc
movl
inc
xchg
aam
push
stos
mov
addr16
mov
pop
mov
dec
je
sub
xor
and
add
lods
inc
shll
lods
inc
inc
push
cmpl
subb
and
dec
add
xchg
or
loope
pop
push
dec
fwait
xor
inc
or
pop
push
adc
pop
iret
xor
aam
movsl
push
or
adcb
sbb
fwait
mov
pop
dec
test
adc
loop
or
fsts
stos
bound
aaa
mov
xor
add
push
push
pop
add
mov
sub
loope
movsb
jno
push
sub
test
and
stos
adc
dec
lods
mov
loopne
xor
xchg
xor
sti
les
pusha
sahf
jo
inc
movsb
mov
sbbl
add
pop
xor
mov
lcall
loope
mov
push
add
adc
xchg
fstl
popa
test
lret
icebp
xchg
sub
inc
movsl
sub
inc
or
popa
or
push
add
popa
adc
jne
adc
cmp
and
xor
or
mov
je
add
xlat
jno
or
xchg
sub
andl
hlt
xor
xchg
mov
and
popa
frstor
lret
les
xchg
sub
cmp
je
jp
inc
mov
mov
insl
pop
mov
mov
xor
fstp
sub
or
adc
aaa
pop
and
lcall
add
sti
and
add
push
jns
mov
popa
arpl
adc
xchg
sub
inc
adc
push
popa
inc
add
adc
xor
aaa
adc
and
or
pop
movups
push
cltd
push
sbb
jno
lds
gs
xor
push
mov
cltd
icebp
xchg
mov
jb
xorb
push
push
xlat
pop
rorb
mull
and
cmp
or
lock
xor
je
jno
rcll
and
inc
stos
pop
fldt
xor
jno
pop
stos
cmpl
inc
add
cmp
or
jge
inc
adc
lahf
push
pop
jno
push
shll
push
inc
dec
jg
cmp
je
push
pop
xor
cwtl
add
inc
test
and
mov
mov
fldl
xor
imul
xchg
adc
popa
lods
dec
mov
dec
outsb
enter
test
xchg
scas
inc
rclb
bound
adc
rorb
jecxz
mov
push
pop
adc
mov
and
pop
add
and
dec
cmp
mov
popf
sbb
or
ret
and
dec
je
mov
or
adc
pop
and
outsl
orb
jns
add
movsb
push
rorb
outsl
leave
xchg
add
jmp
adc
cmpsb
xor
jns
pop
rolb
aaa
xlat
out
imul
dec
mov
std
lock
out
adc
lods
adc
cmpb
dec
xor
add
push
out
sbb
inc
loope
inc
push
scas
xor
pop
xor
jge
fadds
push
push
xchg
or
pop
jmp
push
push
dec
pop
ja
inc
jo
xchg
test
cmp
rorl
idivb
or
add
jo
xor
xor
fdivs
xchg
push
push
and
mov
pop
add
daa
scas
mov
or
and
add
mov
inc
pop
and
cmp
int
push
and
lret
jo
scas
push
jge
sbb
xor
cmp
adc
or
es
adc
cwtl
or
add
shrl
pusha
mov
inc
inc
or
push
add
out
pop
fs
lret
movsl
xor
adc
xchg
test
add
or
mov
push
mov
or
and
stos
pop
dec
rolb
lds
xor
addr16
pop
inc
pop
xchg
leave
fwait
aad
push
mov
push
inc
aad
add
add
leave
xor
stc
push
bound
inc
movsl
and
or
mov
inc
int3
dec
push
loopne
and
loopne
sub
add
pop
or
and
inc
or
or
jne
pop
cmp
cwtl
dec
push
insb
out
or
scas
push
xchg
je
aam
movsb
mov
in
sbb
lcall
jo
or
mov
cmp
loop
sub
loope
pushf
push
cmp
aad
hlt
xchg
cwtl
add
xchg
pop
or
rorl
rolb
xchg
add
les
ret
cmp
jmp
or
xor
aad
and
test
add
icebp
jb
push
test
sbb
pop
orb
imul
inc
inc
fcompl
sbb
inc
popa
sbb
bound
jg
and
addb
jg
or
adc
inc
pop
sub
lahf
jle
and
pop
inc
push
mov
orl
shrb
rcrl
test
gs
andb
imul
cmp
pop
push
mov
sub
jo
test
aad
dec
loopne
inc
popa
out
ret
pop
adc
inc
ds
mov
xchg
mov
pop
xor
sbb
stc
add
add
add
fnstcw
or
mov
inc
sub
or
adc
add
push
adc
push
mov
filds
xchg
cwtl
dec
add
test
dec
push
out
pusha
test
mov
xchg
mov
pushf
jnp
pop
push
mov
es
jno
rolb
add
hlt
ss
pop
shll
xor
adc
movsl
cltd
rolb
imul
xchg
test
sbb
cmpsb
push
pop
xor
je
cmp
add
pop
xor
cmp
lahf
xor
add
cmp
and
es
loopne
pop
test
push
popa
pop
mov
test
bound
add
cmpsl
add
and
dec
push
cwtl
rolb
or
scas
movb
rorl
and
sbb
int3
xor
sub
and
jns
mov
movsl
adc
adc
lret
mov
adc
iret
outsw
subl
std
mull
cmp
sub
sbb
sbb
rorl
imul
xor
jl
loop
jns
xor
add
add
cmpsl
xchg
popa
or
rol
push
xor
mov
sbb
add
or
out
push
and
mov
inc
imul
xchg
dec
push
lea
sub
aad
sbb
jo
imul
fs
xor
pop
xorb
shrb
fcmovb
xchg
dec
je
sub
xor
lret
cmp
inc
add
push
dec
jns
mov
and
mov
adc
jb
lods
and
jge
ret
and
dec
xchg
inc
pop
push
pop
or
test
sub
jne
add
and
insb
in
or
test
lods
pop
add
mov
mov
cltd
insl
shrl
xor
pop
push
mov
orb
test
sub
inc
ror
loop
adc
mov
inc
lods
or
sbb
dec
jnp
add
or
shll
and
xor
es
dec
pop
xlat
xor
add
cs
add
jmp
mov
aam
dec
or
mov
mov
neg
pop
dec
aam
mov
sub
add
fwait
shlb
add
dec
pop
fnstenv
jnp
dec
add
inc
shlb
xchg
xchg
jno
aas
fisttpl
aad
mov
sub
popa
lods
cmp
or
or
xchg
gs
mov
out
inc
mov
leave
gs
cmp
bound
inc
and
push
xchg
or
sbb
ret
adc
mov
mov
lds
add
add
push
mov
sti
and
push
mov
scas
test
arpl
add
pop
sub
fbstp
and
das
loopne
je
out
sub
cwtl
inc
jg
call
mov
cltd
stc
sbb
or
and
sbb
int
and
mov
and
lods
dec
xor
inc
inc
sub
mov
mov
add
mov
iret
dec
push
in
or
add
movsl
xchg
pusha
insl
lahf
iret
lock
inc
jb
cmp
cmp
or
cs
ds
xor
or
inc
add
pop
leave
xchg
and
pop
test
and
push
jne
test
sbb
xchg
sti
xchg
mov
xlat
mov
xchg
jmp
pop
out
popa
mov
sbb
xor
inc
and
out
xor
sub
xor
push
add
adc
iret
dec
jb
add
leave
add
or
inc
pop
and
add
add
cmp
mov
movsl
add
inc
xorb
clc
xchg
das
addb
xchg
mov
cmp
or
scas
mov
jecxz
push
xchg
xchg
fwait
addb
push
dec
int3
mov
mov
pop
adc
dec
xor
mov
inc
add
mov
sarb
or
rolb
aam
mov
push
mov
cmp
rorb
cmp
cmp
inc
les
jns
stos
shll
and
inc
jmp
leave
inc
test
mov
push
sub
adcb
inc
mov
push
repz
sub
in
test
adc
add
cmpxchg
lods
fidivrl
movsb
sub
push
or
mov
test
jne
and
pop
movsb
pop
sub
xor
pop
and
mov
aam
lods
ret
imul
mov
sbb
mov
xchg
popa
mov
push
adc
add
xor
and
xor
insb
loop
ret
pop
jmp
andb
and
lcall
jae
cmp
xchg
dec
js
xchg
jne
sbb
cwtl
and
adc
sbb
xor
push
roll
cmp
add
dec
adc
mov
mov
adc
mov
inc
daa
sbb
or
bound
dec
sub
sbb
nop
and
mov
movb
mov
adc
mov
inc
aam
imul
inc
xor
sub
inc
push
popf
in
sub
or
mov
adc
test
push
add
rcrb
pop
push
and
aam
add
cltd
cltd
pop
jne
test
jg
scas
leave
mov
arpl
test
inc
jmp
mov
sbb
leave
xchg
arpl
sub
inc
scas
in
rorb
add
addr16
subb
mov
mov
sub
and
test
mov
add
inc
test
out
pop
inc
mov
fistpl
rcrl
jns
xor
and
repnz
add
jecxz
push
and
into
jne
add
inc
or
or
xchg
arpl
rolb
fwait
xor
push
cmp
and
in
dec
movsl
xchg
sub
jo
inc
add
dec
sub
xchg
push
mov
lea
out
adc
push
jl
dec
xor
inc
cmp
inc
cmp
push
insl
sbb
sub
cmp
rsqrtps
fstps
pop
fists
and
xor
stos
in
pop
inc
or
sbb
xor
adc
adc
popa
rorb
cmp
test
jmp
dec
out
add
fldenv
sbb
test
shrb
push
dec
out
mov
subl
lcall
cmp
jb
dec
rorb
test
imull
xlat
insb
lods
daa
mov
sbb
pop
push
push
mov
sub
mov
popa
in
xorl
arpl
adc
stc
inc
xor
xor
sbb
fnsave
and
cmp
jle
aaa
es
mov
cs
out
or
iret
and
imul
dec
sahf
and
adc
subb
add
insl
mov
adc
lds
movsl
les
and
pushl
dec
test
push
in
dec
outsb
push
push
xor
es
adc
sub
pop
push
or
inc
or
cmp
mov
andb
xor
xor
jbe
insb
sbb
jo
sub
mov
sub
lret
and
cwtl
movsb
xor
adc
stc
mov
adc
xor
ret
shlb
test
cmp
adc
in
std
popa
loop
add
shlb
inc
xor
jnp
jnp
daa
or
test
bound
movsw
shlb
ret
sti
push
adc
ljmp
push
push
lcall
mov
inc
add
and
inc
mov
nop
addr16
xor
addl
sti
mov
jg
add
mov
lret
xchg
sahf
mov
xchg
aad
push
loopne
lods
imul
mov
dec
int
inc
je
pop
push
push
or
push
jge
cmp
mov
test
jnp
cmp
cltd
inc
mov
mov
mov
mov
sahf
mov
mov
push
inc
xchg
jo
dec
mov
sahf
enter
push
inc
test
dec
fstpl
sub
rol
je
lea
pop
in
imul
sti
std
mov
loope
and
mov
mov
jae
adc
movsb
add
push
pop
xor
jmp
xor
movsb
mov
aaa
das
fwait
mov
xorb
hlt
or
xchg
add
es
add
lods
loope
shlb
nop
out
das
or
add
icebp
and
jo
shll
inc
xchg
adcl
orl
mov
inc
jae
lods
stos
xor
sub
and
add
inc
xchg
in
sbb
shrb
jae
adcb
sti
int
pop
and
sbb
leave
mov
add
add
adc
dec
and
and
inc
daa
adc
cmp
pop
and
movsb
xchg
dec
pop
and
movsb
imul
loope
sub
push
add
xchg
out
and
push
mov
loop
dec
add
inc
rorb
enter
mov
lods
stos
sub
and
xchg
inc
out
xorb
jne
push
xor
lcall
cmpl
test
imul
and
bound
lea
xlat
les
push
pop
or
xchg
add
rclb
xchg
jae
pusha
adc
pop
cmpsl
xor
inc
add
and
add
fldl
mov
xor
adc
ror
mov
mov
or
leave
push
xor
pop
aaa
pop
subb
lods
loopne
test
xor
mov
xor
gs
cwtl
and
and
sub
add
test
jecxz
std
in
or
adc
lock
adc
ja
push
add
or
xchg
mov
in
jns
fnsave
jne
jae
cmp
add
or
sbb
cmpl
and
les
mov
add
push
dec
add
jl
push
jo
in
jne
push
push
inc
sbb
dec
add
inc
stos
push
adc
push
jns
enter
mov
mov
pop
ftst
fiaddl
icebp
pop
sbb
push
push
lds
add
ja
test
pusha
rclb
push
loope
mov
adc
jmp
stos
orb
rclb
mov
pop
lds
dec
dec
or
or
jnp
ljmp
xor
mov
les
lods
lcall
sub
add
fcmovb
xor
bound
fildl
ja
lods
and
mov
adc
or
pop
hlt
xchg
xchg
iret
mov
insl
loop
sahf
jge
sbb
sub
lea
push
xor
rcrb
and
cs
mov
xor
push
inc
jo
scas
inc
mov
pop
adc
inc
pop
and
or
push
sbb
lds
xchg
subl
sub
add
push
jbe
or
cmc
jne
test
jg
inc
adc
mov
cli
mov
sub
shl
inc
es
jb
dec
cwtl
ret
divl
inc
movsb
mov
inc
lea
adc
mov
and
data16
sbb
lds
aaa
push
test
dec
xor
iret
cmpsb
mov
lods
and
sub
jbe
inc
test
push
push
push
sbb
or
pop
ffree
loope
mov
popa
adc
inc
mov
cltd
jmp
or
pop
inc
out
add
es
subl
push
push
add
lds
les
add
adcb
mov
push
xchg
dec
rol
dec
jg
divl
loope
sbb
add
jmp
push
add
push
or
adc
js
test
add
jmp
mov
fstpt
xor
test
sbb
add
dec
mov
push
jmp
and
inc
or
mov
xchg
and
daa
lds
cmpsl
jmp
test
dec
xchg
xor
adc
mov
inc
xchg
push
imul
add
rorb
test
add
sub
sub
add
int3
add
pop
xchg
xchg
inc
mov
or
add
aam
test
test
sub
lret
inc
imul
add
mov
or
pusha
push
cwtl
mov
adc
scas
rclb
inc
xor
lea
adc
xlat
xor
add
or
jns
test
pop
mov
adc
es
cwtl
push
pusha
sub
cmpsl
jnp
add
push
sub
ret
jecxz
mov
loope
sbb
mov
adc
add
stos
aad
and
pop
inc
int
adc
and
xchg
xchg
mov
test
or
sbb
xchg
ret
test
jns
inc
push
lea
jmp
sbbl
idivl
add
shlb
hlt
data16
inc
inc
sar
test
push
movsb
adc
or
pop
mov
nop
pop
sbb
sbb
dec
push
aam
mov
aam
mov
sub
pop
or
sbb
mov
nop
cmpsl
adc
insl
xchg
push
or
sub
inc
pop
shrb
adc
icebp
in
push
adc
cwtl
cmp
fldt
inc
push
inc
xor
mov
cmp
nop
addr16
xor
adc
xor
int
and
loope
sbb
inc
rclb
dec
xor
enter
mov
loopne
ja
bound
shlb
jo
lock
sbbb
pop
mov
shrl
xor
and
push
and
pop
dec
pop
add
mov
add
jnp
mov
or
jb
adc
inc
lcall
add
enter
out
mov
adc
imul
adc
dec
test
insl
add
add
or
add
mov
pop
shlb
or
push
cmp
mov
pop
pop
and
mov
and
adc
add
mov
dec
inc
aad
in
push
sub
add
loopne
adcb
inc
lcall
lea
in
dec
enter
shlb
inc
sub
pop
mov
pop
or
mov
dec
int
dec
sbbb
ret
mov
cmc
lock
nop
xchg
adc
inc
pop
stos
inc
test
icebp
jmp
mov
inc
and
lods
mov
mov
xchg
scas
gs
or
jo
jnp
int3
or
or
das
xor
mov
dec
pop
xor
leave
push
sub
xchg
inc
mov
push
add
pop
mov
add
sub
cs
and
cmp
cmp
push
pop
sbb
mov
dec
aam
sbb
adc
dec
and
push
pushf
xor
lds
roll
and
dec
adc
lods
or
mov
sbb
or
inc
nop
xor
lcall
adcb
fldl
pop
inc
and
pop
pop
add
sbb
call
pusha
xchg
in
mov
mov
sub
cmp
and
cs
daa
sbb
sub
nop
adc
ljmp
cmc
stos
in
xchg
cmpsb
mov
xlat
jge
pop
cwtl
adcb
adc
mov
xchg
stos
dec
mov
jno
subb
mov
mov
arpl
or
push
xor
xor
rorb
ret
or
or
push
gs
adc
fwait
ss
xor
ficoml
dec
inc
sbb
popa
subl
bound
pusha
mov
push
dec
xchg
dec
and
xor
xor
dec
loop
mov
mov
test
xor
cmovl
mov
and
mov
adc
or
xchg
fwait
xchg
adc
lcall
push
test
sub
sbb
sti
and
test
jmp
xchg
mov
das
popa
push
xor
in
or
inc
pop
adc
push
lcall
and
sub
es
pusha
inc
test
jne
push
notb
pop
bsr
inc
sub
inc
sbb
sub
imul
mov
int
add
mov
bound
xor
arpl
add
mov
jno
cmp
jne,pn
test
mov
or
iret
push
dec
mov
push
shlb
enter
dec
sti
mov
mov
ret
add
rclb
adc
aam
jo
mov
andb
dec
das
push
push
loopne
xchg
push
test
and
pop
push
or
int
ret
push
adc
add
lds
test
add
adc
sti
mov
or
sbb
xchg
test
push
popf
xor
and
cmp
je
movsb
icebp
mov
lcall
inc
cmp
xor
rorl
push
int
add
fisttpl
jo
rolb
mov
and
xor
pop
dec
fadd
inc
test
inc
add
add
pushw
pop
push
inc
jne
insl
xor
jne
mov
popf
ss
call
movsl
push
stos
lret
cmpsb
lock
mov
inc
sbb
pop
push
sbb
mov
mov
out
mov
stos
and
mov
lahf
mov
mov
mov
mov
sbb
int3
xchg
lods
or
subl
mov
and
das
push
inc
dec
je
cmp
addb
les
test
out
xor
fstps
mov
adc
lahf
add
test
jns
outsb
xchg
rcl
dec
daa
sbb
test
adc
push
mov
hlt
pop
and
sub
pop
jno
jmp
xchg
push
jno
xor
movsb
ret
and
and
and
and
pusha
sbb
fnstenv
rclb
test
sbb
push
mov
and
and
sbb
cmp
jo
cli
jae
stos
sbb
add
push
inc
nop
jle
jp
mov
dec
push
dec
ljmp
add
jmp
dec
sub
inc
ficompl
xor
test
add
add
mov
test
test
enter
inc
inc
or
es
and
inc
enter
scas
std
push
add
and
fdivl
or
sbb
inc
adcl
les
xchg
jne
push
or
test
adc
enter
dec
pushf
cmpsb
or
push
es
mov
je
push
pop
bound
fwait
in
scas
add
lods
push
mov
push
cwtl
mov
sbb
aaa
jecxz
push
adc
xorb
scas
movsl
jno
jno
or
sbb
mov
mov
repnz
add
and
add
sub
outsl
mov
rcll
pop
movsb
mov
mov
inc
movsl
insl
or
push
and
repnz
or
mov
and
xor
orl
xor
mov
scas
mov
insb
addb
and
fld
push
inc
loop
sahf
mov
inc
xchg
gs
imul
and
or
mov
adc
bound
jns
stos
push
popa
nop
scas
test
dec
push
inc
or
mov
pop
push
xlat
ss
push
mov
dec
call
loopne
adc
mov
cmp
rclb
sbb
and
pop
fcoms
push
cmovnp
cwtl
dec
and
aad
addb
dec
inc
dec
leave
clc
insl
ja
rcl
inc
mov
adc
dec
dec
push
popa
dec
les
mov
out
mov
pusha
add
aaa
test
or
fs
lret
and
cmpsb
jge
inc
mov
mov
adc
jno
and
rolb
pop
mov
jle
andb
mov
cmp
cmp
mov
xlat
xchg
lds
push
and
or
xor
sub
dec
bound
push
ja
insl
bound
dec
sbb
sub
sarl
inc
leave
sbb
jnp
and
add
cmc
push
mov
adcb
mov
insb
fwait
xor
imul
dec
dec
jmp
xchg
pop
xor
or
and
adc
out
popa
or
jns
and
cwtl
or
insb
daa
mov
xor
scas
lods
adc
adc
pop
jg
int3
mov
inc
add
in
cmp
or
pop
js
and
xor
push
push
mov
and
loope
mov
push
dec
pop
dec
mov
out
fwait
shrl
adc
dec
iret
leave
dec
push
mov
sbb
sbb
test
fs
or
inc
daa
mov
xchg
inc
dec
adc
lds
mov
pushf
mov
lea
subl
stc
adc
inc
dec
jo
fs
push
add
jo
aam
push
cltd
ret
mov
in
or
popa
ja
inc
or
ret
xchg
pop
sub
inc
cmp
cmp
fs
push
jne
dec
add
push
sbb
push
es
ret
jb
rolb
adc
xor
push
aaa
test
mov
add
adc
push
test
push
int
mov
stos
inc
inc
push
adc
and
jno
cmp
insb
push
imul
sbb
push
xchg
es
sarl
push
js
dec
aam
in
add
push
fildl
imul
and
fldl
or
adc
dec
cmpl
leave
add
xor
jo
xor
pop
test
mov
add
sbb
xor
mov
adc
adc
xor
xor
data16
push
rcr
jmp
cmp
dec
push
add
fwait
adc
es
adc
ret
push
sbb
and
pop
sub
push
xor
sbb
add
sbb
fldl
or
sub
mov
mov
imul
push
cmp
mov
nop
das
xor
push
inc
xchg
clc
xor
pop
ss
xchg
xchg
rolb
xor
inc
mov
jns
subb
push
clc
dec
repnz
adc
es
shll
xchg
mov
movsb
mov
cmp
stos
dec
in
mov
push
or
fiaddl
arpl
les
or
add
inc
imul
pop
add
add
pop
mov
and
and
jl
inc
xchg
adc
arpl
inc
push
ljmp
and
call
in
dec
mov
lods
dec
pop
outsl
ret
or
cmpsb
popa
cmp
imul
ds
lea
and
or
or
les
subb
adc
mov
jecxz
faddl
scas
or
inc
ljmp
jne
sub
rol
addl
lds
adc
pop
adc
insl
mov
and
mov
dec
cmp
and
or
sub
and
lret
or
or
dec
xor
mov
int
out
ret
inc
add
rorb
jno
icebp
pop
and
lods
loopne
and
jo
add
test
stos
fsubs
pop
sub
cmp
or
sbb
sbb
adc
jns
push
inc
nop
and
inc
adc
movb
mov
push
or
mov
subl
xor
mov
int
push
arpl
rolb
dec
cmp
movsb
pop
adc
sub
and
mov
sub
add
xor
mov
popa
leave
cmp
jo
int
icebp
xchg
and
mov
sub
popa
sbb
es
jbe,pt
andb
out
pop
add
popa
ja
or
test
xchg
jl
jmp
aad
lret
sub
xchg
inc
insb
sti
adcl
nop
xchg
push
mov
sbb
pop
cmp
push
cmp
mov
xchg
push
adc
push
xchg
mov
loop
jge
imul
pushf
and
dec
pop
jno
dec
cli
call
pop
inc
adc
inc
pusha
imul
add
inc
inc
imul
fisttpll
sub
inc
lds
push
push
inc
xor
roll
test
xor
loopne
sbb
pop
cmpsl
push
pop
leave
mov
mov
cmp
inc
sbb
xor
pop
xor
jns
lds
lcall
mov
jno
test
jle
rcl
leave
sbb
adc
jecxz
adc
sbbl
lcall
stos
dec
inc
inc
enter
call
aam
mov
adcb
cmc
fistl
outsl
pusha
les
push
pop
push
push
mov
add
inc
sarb
lds
loop
jo
mov
add
push
xor
adc
stos
push
jmp
xchg
xchg
mov
movsb
cmpb
mov
std
addr16
imul
bound
test
push
add
mov
xor
xor
add
movsb
scas
fs
lods
sbbl
and
mov
mov
mov
xchg
dec
pop
mov
dec
sarb
daa
dec
in
mov
leave
mov
orb
popa
jmp
imul
sbbl
dec
rolb
dec
adc
stos
sbb
add
lods
xor
jl
mov
jnp
adc
push
push
adc
test
data16
adc
inc
push
cwtl
dec
adc
lret
sbb
fcomip
dec
rclb
pop
xchg
adcl
cltd
test
pop
push
pusha
dec
ficoms
dec
stc
mov
loopne
mov
or
fs
test
xor
test
jno
or
inc
imul
push
andb
rorb
fsubp
cmpb
dec
popf
sub
imul
lea
or
stos
or
mov
mov
adc
popa
lods
jno
xchg
xor
leave
pop
outsb
add
sarl
mov
test
iret
repz
neg
push
mov
cmp
adc
sbb
js
cmc
idivb
test
dec
dec
mov
sbb
add
cltd
push
pusha
add
std
sub
loope
js
sbb
sub
mov
jo
mov
mov
inc
adc
adc
ficompl
pop
gs
dec
enter
test
sub
pop
mov
push
or
push
inc
pop
test
outsl
push
dec
cwtl
mov
scas
mov
arpl
cmpsb
xor
mov
inc
adc
movb
sub
jle
nop
xchg
mov
jo
xor
les
nop
or
add
fwait
test
aad
sbb
inc
and
and
je
mov
loop
jle
pop
pop
decb
xor
pusha
or
pop
or
push
and
jns
add
push
inc
ret
pop
pop
add
mov
adc
pop
pop
fwait
cmp
sub
push
mov
or
adc
xchg
aad
sbb
sub
and
mov
icebp
add
push
add
call
and
stos
ja
dec
adc
lret
mov
inc
pusha
xchg
cmp
lcall
mov
pop
ret
aad
inc
or
push
cmpsl
push
add
test
mov
adc
cmpsb
or
and
or
and
fsts
push
add
cmc
inc
add
add
push
pop
and
add
jo
adc
dec
sbb
add
cwtl
cmp
jl
inc
gs
les
push
inc
lea
inc
add
mov
ret
cmp
xor
and
loopne
push
lods
add
ss
sub
shlb
ljmp
adc
inc
mov
dec
stc
mov
or
sub
push
sub
cmp
dec
jl
int3
test
sbb
repnz
adc
and
lds
push
mov
loop
sarb
add
xchg
andb
inc
or
rol
and
test
xchg
test
and
sub
call
mov
jo
and
stos
adc
adc
fsubrl
add
push
aaa
dec
bound
cmpsl
or
imul
cmp
sbb
xor
out
dec
push
inc
push
mov
loopne
sahf
xchg
pushf
or
push
lea
and
mov
loope
jns
lcall
cmp
fcoml
and
mov
xor
inc
and
xor
sub
int3
ret
mov
mov
add
stc
in
or
jmp
adcl
insb
mov
inc
pop
dec
ret
inc
and
fcmovnb
ret
daa
test
mov
and
jmp
out
adc
xor
orb
mov
cmp
add
add
popa
enter
test
pop
xor
imul
mov
dec
xor
mov
pusha
nop
mov
loope
xor
je
add
or
out
arpl
enter
mov
push
adc
mov
fs
dec
pop
add
add
pop
push
or
enter
je
stc
sbb
push
jae
mov
add
pop
in
pop
xor
xor
dec
and
movsb
and
mov
xchg
sbb
sub
jns
pop
add
orl
xchg
aad
pop
add
xor
vxorps
arpl
lret
push
jmp
mov
add
shlb
xchg
flds
adc
repz
push
test
jmp
xchg
jmp
adc
dec
xor
cld
xchg
je
lcall
mov
shlb
dec
roll
adc
push
insl
sti
test
lods
sbb
sbb
or
add
push
xchg
addl
dec
roll
rorw
sbb
shl
mov
mov
jp
test
mov
or
mov
shlb
adc
das
push
mov
or
add
in
dec
sub
cltd
movsl
mov
les
cmpsb
push
outsb
pusha
pop
adc
push
cmp
mov
add
add
leave
in
and
loope
xchg
adc
inc
repnz
arpl
adc
adc
vmulps
addr16
daa
test
adc
jo
push
int
sbb
int
pop
adc
dec
sti
test
test
sub
in
nop
data16
imul
push
add
add
adc
adc
inc
mov
and
js
aas
add
mov
bound
add
xor
xchg
sub
cmpl
mov
push
fs
pop
pop
or
enter
dec
xor
cmp
or
daa
mov
add
test
inc
adc
adc
inc
add
insl
cmp
mov
mov
out
lods
inc
daa
or
xchg
aas
push
push
pop
test
pusha
add
dec
adc
mov
xlat
xchg
sti
and
sbb
jl
and
cmp
sub
adc
jns
cs
mov
xchg
and
push
xor
inc
fsubl
mov
and
mov
dec
xchg
dec
mov
pusha
jns
inc
les
push
les
or
es
or
cmp
loop
loop
sbb
jne
and
icebp
inc
push
fs
pop
inc
rolb
jno
adc
inc
out
xor
mov
mov
cmpsb
mov
movb
les
dec
std
popf
lods
adc
mov
pop
xor
inc
fnsave
inc
movsl
aas
add
sub
gs
std
std
jne
les
cmp
shlb
and
inc
jp
addl
ja
push
test
imul
lsl
adc
hlt
xchg
mov
mov
test
xchg
addl
adc
insl
sub
lea
je
push
imul
add
push
jmp
add
inc
dec
ljmp
es
pop
mov
and
jno
sbb
adc
sbb
jle
sbb
add
arpl
add
jne
shlb
stos
add
icebp
rolb
sub
dec
stos
movsb
pop
cld
xor
test
or
mov
cmp
sub
pop
xchg
les
dec
jnp
mov
and
cs
rorl
jns
loopne
fstps
scas
inc
je
dec
cltd
xor
and
and
js
out
and
sub
sbb
inc
ja
repz
push
fildl
push
lret
cmp
leave
or
mov
adc
cmc
mov
arpl
jae
arpl
and
and
mov
stos
xchg
cmp
xchg
js
test
inc
mov
dec
or
mov
sub
add
loopne
inc
mov
add
adc
and
dec
mov
push
lea
and
in
sub
cmp
lods
add
loope
popa
add
xlat
adc
push
rol
add
shll
add
jne
add
push
and
inc
xchg
loopne
mov
jecxz
xor
sbb
xor
test
ss
add
add
add
call
rorb
jge
push
or
inc
push
das
sbb
lret
xor
add
sub
sub
mov
add
pop
pop
aam
scas
mov
aad
test
daa
sub
aaa
dec
xchg
mov
hlt
push
lea
sub
jo
bnd
insl
mov
sbb
std
pop
dec
pusha
or
shrl
fldenv
lds
shlb
dec
roll
shrl
loope
xor
insl
popa
mov
mov
rcll
mov
movsl
lret
mov
inc
pop
inc
imul
mov
es
jno
lds
lahf
fists
test
inc
lea
aaa
add
sbb
push
loopne
mov
mov
test
inc
xchg
and
sub
enter
jns
dec
mov
jp
jecxz
aas
cld
lret
jae
aam
enter
je
and
xor
xchg
test
cwtl
xlat
add
sbb
adc
pop
ja
inc
loop
xchg
push
fst
mov
xchg
ja
movsl
push
push
ret
fwait
push
les
rolb
sbb
push
dec
rsqrtps
or
xchg
and
adc
mov
xchg
out
test
pop
add
or
xchg
adc
jne
or
jne
loopne
sub
or
sub
sub
adc
mov
add
pop
jp
xor
pop
cmpsb
sbb
int
in
inc
xor
and
enter
cmp
mov
popf
rclb
jecxz
xchg
out
lds
lcall
scas
xor
dec
xor
repz
inc
call
push
jno
imul
rol
dec
mov
and
pop
addb
pop
repz
sbb
xchg
push
insb
push
inc
jnp
jecxz
ret
cmp
mov
outsb
ja
cmp
pop
rcrl
mov
adc
cmp
push
out
daa
test
cltd
cwtl
sub
inc
and
loopne
test
push
jno
daa
or
mov
test
jno
testl
shll
xorl
adc
xchg
mov
fildll
cltd
clc
xor
gs
addr16
nop
sbb
aam
sub
hlt
addr16
mov
mov
mov
or
push
cmpsl
jne
mov
add
xor
sbb
inc
pushf
test
jp
mov
mov
jmp
sub
push
mov
mov
cmp
inc
cmp
or
ds
and
nop
xor
add
mov
outsb
bound
push
iret
outsl
test
lods
push
sub
popf
jle
mov
dec
adc
sbb
cwtl
test
test
popf
orl
dec
push
pop
adc
daa
mov
out
lods
fbstp
popa
push
or
or
pushf
rolb
std
adc
lcall
arpl
sbbb
xchg
cmovno
or
inc
ja
movb
xlat
sbb
fnstsw
les
shlb
pop
dec
push
jo
ret
xchg
repnz
or
adc
and
cmpsl
in
add
adc
xor
mov
sbb
add
es
out
sub
jo
std
dec
sbb
xorl
xchg
xor
lahf
and
xchg
in
sbbb
scas
mov
adc
insl
mov
subb
jns
push
out
push
dec
xchg
mov
mov
xor
pushw
sub
pop
repnz
push
test
test
sub
push
add
and
adc
xchg
xor
xchg
out
or
fadds
movsb
sub
xchg
xor
gs
outsb
rolb
cs
aaa
xor
push
xor
push
ja
roll
sbb
dec
outsl
lods
push
or
inc
mov
arpl
lock
or
fcmovbe
out
dec
xor
sub
cmp
mov
cltd
stc
push
push
sub
mov
pushf
gs
sub
adcb
sub
jno
add
pop
inc
scas
mov
xchg
in
adc
sbb
call
jmp
addl
pop
adc
pop
inc
in
sub
in
addr16
mov
or
add
jo
adc
or
movsl
rolb
adc
les
bound
xor
jl
adc
idivb
test
and
adc
scas
repz
cmp
and
xor
jae
push
cltd
inc
andl
inc
adc
push
dec
loopne
or
in
cmp
ret
xchg
ljmp
inc
dec
dec
mov
inc
mov
dec
pop
jecxz
repnz
lret
gs
andb
loope
adc
fbld
scas
rclb
add
push
dec
test
rol
repnz
loop
pusha
sub
pop
inc
mov
sbb
push
adc
int
mov
xchg
inc
roll
fsub
test
jno
or
dec
cwtl
push
orb
xchg
div
les
xchg
or
outsb
jno
and
test
mov
or
scas
cmp
lea
xchg
rorb
mov
add
daa
jne
leave
sub
enter
mov
and
xchg
dec
movb
rorb
add
dec
repnz
jb
push
dec
movb
sbb
mov
or
sub
mov
mov
dec
adc
mov
push
imul
jbe
cwtl
xor
jo
outsb
adc
push
inc
ror
repz
sub
mov
dec
add
pop
lds
int
lea
into
xchg
cmp
push
push
nop
xchg
add
fnstenv
les
add
push
and
pop
xor
xchg
insl
cmp
lds
adc
pop
push
xor
dec
push
adc
mov
ljmp
xorb
jl
pop
aad
sub
inc
es
cmp
arpl
jns
jmp
imul
inc
popf
add
mov
inc
push
and
gs
jns
pop
cmpsb
mov
inc
mov
add
pop
xchg
add
pop
test
mov
xchg
jno
hlt
popa
dec
test
rolb
sbb
pushf
cmp
loope
sub
sbb
cltd
repnz
and
test
add
mov
push
add
xchg
dec
push
dec
mov
andl
add
push
nop
push
add
cmpsb
pop
pop
xlat
jbe
mov
rclb
inc
sub
mov
push
stc
cmp
lods
adc
imul
and
inc
sbb
mov
dec
mov
stos
sbb
stos
and
sbb
add
and
sub
adc
mov
push
sbb
jo
adc
sbb
add
fucom
and
or
inc
pop
sarl
shll
sub
inc
scas
or
addr16
push
xchg
pop
mov
or
jl
outsb
add
cmp
xor
and
stos
cmp
repz
inc
movb
mov
xchg
xor
or
pop
adc
test
daa
push
xchg
or
jge
add
faddl
xor
adc
sbb
add
sub
lods
mov
xchg
adc
icebp
rorl
imul
or
jge
leave
or
mov
jecxz
pusha
xchg
inc
cltd
andl
push
into
leave
add
xchg
xchg
jno
mov
dec
push
inc
test
outsl
xchg
and
sub
adc
or
xchg
lds
and
daa
pop
xchg
je
pop
add
lahf
jb
lods
mov
mov
cmpsb
pusha
xchg
orb
cli
sbb
addb
push
sahf
mov
popa
sbb
or
lea
cmpsb
adc
or
sub
test
inc
cmpsl
into
sbb
inc
out
ret
mov
add
and
xlat
and
jo
or
jne
xor
add
popa
add
xchg
cmp
fwait
loope
repnz
test
pop
add
xor
das
and
adc
andb
cld
dec
mov
adc
mov
popf
in
test
xchg
pavgb
sub
xor
test
cmpsb
dec
imul
enter
push
stc
decl
sbb
add
adc
fsubrl
fisttpll
jbe
mov
fnstcw
testl
rorb
ss
inc
rclb
push
sub
dec
mov
mov
bound
pop
and
xchg
lcall
rorl
int
mov
or
jne
inc
insl
lods
das
jmp
add
pop
jb
sub
loop
cmpsb
push
stos
push
inc
add
repz
xor
inc
sbb
push
push
mov
xchg
mov
cmp
sub
rcrl
sbb
es
inc
sub
jae
jb
stos
rcll
and
fs
ja
mov
dec
mov
js
adc
fistps
adc
lret
arpl
fst
sbb
ret
sub
or
movsb
or
push
jns
ret
bound
inc
xor
jb
add
sub
xchg
mov
push
inc
stos
sub
iret
fnstenv
xchg
addl
mov
mov
or
xchg
je
popf
fiadds
lock
movsl
add
xor
jg
or
outsb
shlb
add
pop
push
lea
mov
and
loope
adc
std
rcrb
je
rolb
imul
push
adc
insb
bound
aas
xchg
mov
and
outsl
xor
orl
jmp
jecxz
xor
popa
jmp
inc
dec
ljmp
sbb
mov
stos
mov
sub
roll
mov
adcl
inc
adc
xchg
pop
dec
movsl
jmp
push
subl
insb
lret
mov
xorb
cmp
aad
mov
pop
popa
and
pop
xor
mov
or
cmc
lds
cmpsl
and
cmpsb
mov
iret
adc
xor
inc
test
sbb
add
or
mov
insl
insl
roll
jno
dec
out
sub
sbb
or
out
rorl
add
fsubl
push
pop
and
nop
mov
mov
mov
movsb
add
or
clc
ffreep
mov
xchg
push
mov
out
push
add
imul
and
cmp
cmpsl
jne
sbb
mov
mov
lea
roll
icebp
decl
adc
imul
pusha
and
mov
and
insl
mov
flds
mov
mov
or
rolb
mov
adc
sbb
pushf
jl
mov
test
imull
retw
les
add
mov
les
and
in
inc
xchg
and
cmpsb
mov
push
lcall
leave
jg
mov
lea
sub
sbb
inc
repnz
xchg
dec
sbb
lods
sub
test
xor
add
mov
and
cmpsb
push
cli
imul
fs
cmp
movsl
pop
push
sub
xchg
and
sbb
dec
stos
push
pop
sub
xchg
push
xchg
pop
xchg
cmp
xor
adc
sbb
outsb
mov
push
cmp
sub
push
scas
xchg
mov
jp
sbb
dec
movsl
test
rcrb
rclb
sbbb
and
popa
dec
xchg
add
sub
fst
add
push
mov
shlb
in
je
popf
test
jno
das
shll
adc
dec
rorl
fwait
inc
loopne
or
arpl
or
std
insl
sub
inc
push
mov
fisttpll
aaa
insb
jmp
jmp
inc
push
lea
dec
mov
jnp
xchg
jno
rcrb
sbbb
lods
shrl
or
and
nop
jbe
xchg
push
push
sub
adc
dec
xor
test
adc
and
mov
sub
pop
std
rorb
sbb
push
xor
jae
rorl
dec
imul
fsts
push
and
mov
dec
pop
or
dec
cmpsl
sbb
xorl
out
and
cmp
nop
out
push
test
imul
mov
dec
and
dec
ret
push
incb
xor
addl
push
in
sahf
jne
int3
imul
xor
xor
sbb
and
out
mov
pop
adcl
pusha
mov
inc
adc
clc
lds
add
dec
add
cmp
and
imul
and
xchg
cltd
enter
adc
lea
or
loope
mov
sbb
and
data16
cs
cmp
test
mov
nop
mov
loopne
das
sbb
mov
add
stos
mov
dec
repz
xchg
sbb
sub
pop
mov
loopne
mov
inc
test
sbb
dec
jecxz
cs
idiv
adc
sub
mov
rol
lcall
xchg
push
add
and
loopne
jecxz
mov
add
pop
stc
ret
add
je
inc
pop
or
pop
addr16
fs
or
sub
loop
cmpsl
outsb
mov
jno
inc
add
adc
add
mov
and
fwait
cmpsb
mov
inc
jne
and
cmpb
or
xor
in
icebp
aad
sbb
scas
push
cmp
pushf
and
push
add
divb
push
mov
push
movsb
mov
stc
add
push
mov
sub
cmpsb
dec
xor
cwtl
sti
incl
out
push
inc
inc
push
jecxz
or
or
inc
lods
stos
fisubrl
xor
or
mov
sub
and
shll
lea
push
repnz
shlb
push
loopne
xor
popa
movsl
mov
inc
mov
jl
or
jg
sbb
pop
mov
and
loopne
shll
xchg
xchg
mov
cmp
loopne
stc
sub
cmpsl
push
sbb
movsl
sub
xchg
test
or
arpl
rol
add
mull
fadds
adc
xchg
jne
fs
das
loope
fsts
fistl
or
roll
mov
flds
adc
adc
push
mov
and
inc
arpl
inc
ret
in
adc
test
xchg
adc
sbb
xor
les
cmp
or
sub
adc
add
ret
inc
pop
adc
mov
rolb
int3
mov
push
ja
das
repnz
pop
and
in
sub
add
cwtl
xchg
push
xchg
imul
pop
leave
jae
data16
in
stos
pop
push
stos
pop
arpl
add
lods
jae
cmp
xor
mov
loop
inc
das
inc
add
scas
aad
xor
inc
mov
ljmp
push
sub
mov
aad
push
mov
cmp
adc
fisubl
mov
aas
mov
stos
mov
inc
dec
mov
pop
les
or
lahf
repz
xchg
and
out
enter
mov
mov
add
sub
or
add
jns
es
sbb
dec
jecxz
orb
call
and
sub
fcmovnbe
adc
cmp
test
mov
imul
outsb
add
sbb
and
sub
mov
ss
dec
daa
fnstcw
inc
cmpl
stos
xor
lock
jecxz
ret
pushf
push
mov
xchg
imul
test
mov
stc
cwtl
pop
jno
ret
arpl
sti
iret
lea
les
leave
mov
or
adc
mov
mov
push
cwtl
sub
add
popa
adc
mov
and
stos
push
adc
mov
add
test
cmp
sbb
or
pushf
pop
sbb
outsb
lods
negb
add
loopne
cmc
mov
inc
lods
add
cmpsl
and
inc
lcall
cmpsl
mov
dec
pop
popa
adc
mov
add
cmpsb
mov
add
mov
dec
pushf
and
adc
or
adc
mov
stos
mov
push
jg
ret
arpl
xchg
ret
mov
arpl
adc
mov
adc
inc
adc
sbb
outsl
fsubs
xchg
push
pusha
xor
sub
add
aad
or
sbb
add
sbb
add
mov
rclb
mov
pusha
xchg
jo
fwait
insb
xor
shl
jge
xor
add
mov
aad
inc
mov
or
add
pop
inc
loop
sub
jmp
call
dec
add
lds
adc
int3
cltd
mov
dec
imul
add
inc
and
push
and
rolb
test
pusha
adc
inc
xchg
adc
jno
cmp
cmp
xor
es
dec
push
fstpl
and
and
loope
call
test
and
out
or
push
mov
xchg
xchg
imull
inc
popf
mov
cmp
cmp
popa
jo
dec
and
pop
mov
push
push
mov
xchg
adc
mov
sbb
push
mov
adc
sbbl
pop
xor
adc
rolb
sbb
nop
rorl
les
test
push
shr
cld
xor
sbb
inc
test
orb
test
cmp
sbb
dec
sti
fwait
ret
mov
imul
sbb
lcall
push
or
mov
lods
subl
addb
jno
aaa
sahf
inc
inc
cmp
sbb
dec
sbb
inc
loope
xor
mov
mov
aas
repnz
pop
jns
movsl
mov
and
addl
jno
imul
push
popf
lods
ljmp
lods
cwtl
sub
fisttpll
testl
and
test
push
adc
pop
lea
dec
mov
inc
imul
xor
adc
mov
mov
dec
add
sbb
mov
test
inc
push
scas
shrl
lea
cmp
pop
mov
add
lahf
pop
cld
dec
mov
or
inc
jb
mov
mov
sbb
adc
test
loopne
add
add
or
cmpsl
filds
or
jno
test
inc
add
jno
sub
das
gs
cwtl
pusha
ror
xor
push
mov
xor
pop
and
lahf
mov
pop
adc
lcall
inc
shl
jb
or
frstor
inc
test
add
xor
hlt
stc
adc
mov
adc
push
or
shlb
enter
jo
or
sub
inc
jns
or
in
popa
movsl
mov
xlat
cmpsl
or
mov
movsb
dec
xchg
xor
aam
mov
test
push
shrb
imul
xor
pop
repnz
mov
lcall
in
and
dec
inc
dec
push
dec
sbb
dec
xor
add
test
outsl
push
xor
and
xor
or
push
jns
add
fldt
push
cwtl
inc
aaa
dec
jnp
ret
mov
dec
test
inc
cmpsl
cs
mov
push
cltd
jnp
aaa
enter
mov
or
inc
pop
mov
mov
gs
movsl
testb
xor
add
sbb
mov
or
add
adc
dec
jo
mov
xchg
das
or
movsb
lea
nop
mov
adc
push
icebp
cmp
push
shrb
hlt
jmp
outsl
filds
test
les
subl
inc
add
hlt
inc
dec
adc
pop
pop
add
mov
lock
add
push
in
pushf
xorb
and
fdivrl
cmovae
adc
jno
push
xor
test
mov
movsl
pop
aas
adc
push
ret
lds
fld
xor
push
sub
fwait
mov
xor
pop
stos
cmc
into
fistpll
rorl
inc
jecxz
and
mov
push
mov
test
push
test
inc
cmp
addr16
xor
jne
sti
imul
pop
add
cwtl
push
xchg
sbbb
inc
lret
int3
insb
sbb
add
mov
leave
sub
inc
add
sbb
sub
xor
imul
cs
mov
sub
addr16
call
mov
test
test
sub
repz
adc
mov
nop
inc
ss
cmp
pop
inc
cwtl
inc
adcl
xchg
in
mov
loop
loope
mov
cltd
cmp
mov
push
add
mov
dec
cltd
shl
adc
imul
sub
and
mov
mov
lea
adcl
mov
jne
push
adc
or
fwait
les
mov
adc
pop
rclb
and
aaa
mov
sbbb
xchg
push
test
cwtl
test
scas
xchg
rclb
inc
inc
mov
scas
inc
sub
fcomps
adc
push
sti
inc
add
add
xchg
mov
out
xor
push
xchg
push
leave
sub
test
test
test
ss
rcr
stos
test
fistl
jb
inc
leave
mov
xor
les
sbb
rsm
daa
sub
mov
scas
inc
sahf
adcl
mov
sbb
adc
adc
jns
stos
rclb
xor
adc
push
shll
push
add
jns
in
cmp
mov
sub
leave
push
mov
sbb
movsl
add
sbb
scas
mov
shlb
xchg
ret
and
or
push
lcall
sub
add
cmp
pop
jo
mov
and
and
addl
movb
insl
loope
loop
inc
add
or
lea
push
movsl
movsl
inc
xchg
xor
rorb
add
out
loop
imul
push
orl
jno
push
repnz
orl
xor
jo
and
or
jnp
outsb
add
loopne
add
addb
xor
mov
dec
mov
cmpsb
push
add
xlat
cmpsl
cmp
ja
and
scas
adc
inc
dec
fndisi(8087
add
mov
fisttpll
or
push
test
jmp
and
and
fwait
jo
sub
jno
inc
or
sub
jnp
inc
pusha
push
popf
push
shll
cs
in
leave
and
push
adc
popa
stos
xor
push
adc
sub
pop
sahf
or
xchg
push
sub
imul
test
ja
and
loop
dec
jmp
lahf
xor
and
push
sub
add
pop
push
xor
xchg
mov
arpl
in
ljmp
cmp
shrb
test
repz
rcrl
fwait
sbb
push
add
sbb
pop
lea
mov
inc
mov
inc
lret
lds
sub
les
inc
inc
add
shl
push
rolb
lret
icebp
sub
push
add
and
inc
les
mov
or
popa
add
xchg
adc
xchg
sbb
insl
add
andl
shll
lea
leave
lods
pop
pop
jne
push
mov
or
xchg
aam
xchg
lods
pushf
mov
adcb
shll
push
loop
pop
movsl
and
leave
les
sbb
add
xor
adc
add
cltd
sbb
stc
sub
iret
xor
es
add
ljmp
or
mov
out
gs
jno
sub
test
ljmp
push
add
mov
loopne
push
pop
js
sub
push
mov
xchg
push
sbb
mov
movsl
shll
adc
inc
inc
jnp
ds
dec
jge
imul
pop
or
mov
pop
pop
and
add
pop
dec
push
mov
xchg
sbb
mov
and
adc
inc
je
addr16
xor
ret
sub
test
dec
pop
sub
or
mov
adc
bound
leave
mov
push
mov
adc
xchg
test
rclb
loop
jp
jne
or
push
dec
cmp
inc
sbb
lcall
inc
les
push
sub
out
add
repnz
test
jecxz
sbb
inc
jb
xchg
mov
jae
addl
cwtl
cmc
in
and
outsb
sub
and
lret
or
sub
loopne
icebp
shrb
adc
push
cmp
movsb
scas
mov
mov
sub
enter
inc
int3
mov
mov
xchg
lret
and
add
adc
adc
std
or
inc
and
or
add
ret
xchg
ss
jno
daa
pop
mov
shlb
xchg
pop
adc
jecxz
sbb
sub
sub
and
mov
sahf
mov
test
in
pop
xor
sub
lret
rcl
push
daa
and
xor
mov
test
add
push
in
loopne
inc
adc
push
inc
and
xor
mov
sti
loop
adc
push
test
and
enter
xchg
mov
orb
test
fldenv
fstpt
add
sbb
pop
push
xchg
pop
xchg
lea
outsl
int3
pop
leave
add
or
movsb
xor
xor
ljmp
dec
jae
fldenv
les
xchg
inc
pop
push
sbb
cmc
ja
lcall
nop
sbb
fs
insb
popa
sub
cwtl
nop
sub
andl
test
lret
les
add
xor
imul
push
cmpl
cmpsb
or
aad
inc
lcall
inc
jmp
inc
js
hlt
ret
add
andb
xchg
or
sbb
sbb
adc
xchg
sub
push
test
push
lcall
xchg
fstl
cmp
or
sbb
test
dec
arpl
cmp
popf
cs
push
ror
mov
inc
popf
xchg
je
movl
stos
mov
insl
sub
inc
inc
pop
sub
xor
and
sbb
add
ss
add
jno
push
push
nop
jno
scas
sarb
mov
pop
xor
lds
xor
out
bound
xchg
inc
sbb
sti
loope
mov
add
sarl
mov
adc
sub
lea
cmp
lds
fwait
inc
jl
and
fsubl
push
sbb
movsl
dec
add
or
mov
sub
jge
and
pop
lods
jne
nop
test
push
iret
sbb
shlb
cmp
inc
cmpb
cltd
or
dec
or
mov
movsl
push
pop
or
rorl
rclb
pop
xchg
shrl
sbb
xlat
mov
or
jecxz
mov
jno
lea
add
adc
dec
xchg
mov
fwait
jl
or
inc
xor
cmp
sub
rcl
mov
popa
aam
add
and
sbb
add
pop
xor
sbb
xor
add
dec
jae
enter
cmp
and
mov
dec
dec
orb
dec
mov
or
xor
xor
jle
pop
add
adc
psrlq
lahf
lcall
and
inc
lds
and
aam
and
or
inc
repz
mov
movl
sub
mov
cmp
jno
xor
sbb
mov
mov
push
inc
xchg
push
push
jmp
fwait
inc
add
mov
xchg
lcall
inc
add
das
dec
popa
push
subb
cmp
inc
mov
nop
or
push
jecxz
mov
and
cmp
jnp
out
rclb
or
movl
mov
adc
pop
stos
lret
pop
ret
pop
xor
adc
push
mov
int3
sub
dec
xorb
push
cmp
sub
cmp
shlb
loope
add
inc
adc
popa
or
lods
push
orl
int
ret
icebp
popa
jo
xchg
filds
xor
jae
add
push
sti
pusha
or
fsts
inc
das
out
mov
sbb
ffreep
les
outsl
mov
push
push
lcall
les
cs
xchg
cmpb
fsubrs
inc
add
xchg
je
sbb
jg
js
add
add
roll
test
lea
insl
in
cmp
fwait
and
cld
mov
mov
lods
dec
repnz
adc
imul
xchg
dec
and
sub
xchg
adc
inc
test
mov
adc
arpl
mov
sarl
sbb
pusha
mov
cltd
test
or
leave
or
adc
cli
adc
inc
dec
push
xchg
add
in
dec
add
mov
sbb
fsincos
jno
add
adc
gs
pop
cwtl
lret
lods
loope
jo
or
test
xlat
push
and
add
pusha
push
xchg
loope
push
xchg
mov
arpl
pusha
jmp
xchg
push
int
dec
cmp
stos
or
sarl
add
stos
dec
loopne
pop
movsb
mov
inc
test
jne
aad
in
pop
adc
stc
lea
xlat
jle
pop
xor
jae
add
adc
mov
push
inc
test
add
xchg
and
pop
sbb
fs
dec
in
jne
sbbb
dec
xchg
loopne
loope
cltd
cmp
loopne
je
jno
dec
pop
ss
pusha
mov
sbb
push
addl
jnp
pop
inc
push
add
ret
cmc
sbb
push
adc
test
sbb
jecxz
movsl
add
sbb
inc
andl
and
sub
adc
sbb
push
mov
sbb
pop
mov
sub
mov
mov
es
pushf
add
push
xor
and
repz
and
dec
sbb
xchg
cmp
xchg
inc
or
jno,pt
inc
mov
repz
or
ret
cmpsl
or
push
outsl
add
add
inc
sbb
add
test
sbb
idivl
aas
xchg
or
leave
inc
lods
mov
push
adc
mov
mov
or
mov
xor
adc
popa
in
and
sbb
sbbl
add
pop
xchg
and
es
jg
mov
roll
jecxz
movsb
shll
les
add
push
pop
imul
es
dec
or
adc
jne
pop
inc
test
shrl
ret
cmp
test
jb
or
add
or
jns
pop
xor
add
adc
scas
or
mov
jp
add
aam
dec
mov
pop
out
movsb
iret
addr16
jo
add
imul
cwtl
std
andl
cmpsl
pop
cmp
fisttpll
cmp
jae
push
mov
fistpl
dec
cs
lea
les
push
adc
imul
inc
add
add
push
ret
loope
push
and
shlb
stos
js
cmp
cltd
mov
lock
and
jo
adc
lea
adc
sub
scas
adc
xchg
cmpsl
popf
xor
xchg
pusha
xchg
inc
dec
jecxz
and
xchg
pop
inc
inc
decl
sbb
sub
cwtl
inc
or
push
xor
push
sub
out
and
mov
loopne
andb
es
mov
jg
mov
cmpsb
out
sub
mov
or
pop
insb
push
mov
and
adc
push
or
cmp
adc
loope
mov
insb
sbb
push
mov
aad
add
jno
xchg
aam
adc
or
jne
push
jl
mov
es
cmp
sbb
and
lods
xchg
xor
adcb
mov
mov
lods
xchg
mov
xchg
jge
cwtl
add
scas
or
xor
or
lret
dec
xchg
sbb
lds
cmpsb
mov
inc
test
push
cltd
sbb
jno
or
test
ret
or
sub
dec
inc
jecxz
rol
sub
icebp
inc
mov
add
fs
cmpsl
movsl
or
xor
or
add
push
loope
test
mov
adcb
mul
dec
rcll
xor
xchg
orl
cmpsl
add
inc
popa
and
pop
lock
in
push
add
and
sbb
sbb
push
cmpsl
adcl
adc
ja
out
add
pop
pop
adcl
sbb
movsb
push
push
cmc
cmpsl
popa
loopne
push
mov
dec
jb
push
movsb
adc
sbb
lea
mov
seto
jo
lea
or
jnp
mov
pop
movsl
mov
mov
xchg
addb
push
cmp
daa
int3
push
sbb
xor
in
rclb
or
loopne
mov
xchg
or
sbb
aam
adc
push
les
inc
fldl
pop
mov
sub
jbe
stos
xchg
mov
mov
push
mov
mov
jge
xor
add
xlat
mov
lods
jae
fisttpll
jae
mov
je
pushf
scas
adc
cmp
fwait
dec
shll
mov
xchg
pop
pop
dec
adc
jmpw
cli
or
inc
add
jp
jno
xchg
add
xor
int
mov
mov
in
adc
bound
add
les
mov
add
jnp
roll
jle
in
add
inc
inc
loop
jmp
sub
mov
mov
std
mov
movsl
inc
xor
mov
add
add
xor
add
repz
pop
shll
sub
popl
adc
popa
and
pop
inc
repz
xor
push
test
insb
jecxz
dec
xchg
sub
or
movsl
mov
mov
shrl
fadds
push
pop
adc
xchg
sbb
xor
dec
jg
inc
dec
push
cltd
insl
dec
dec
sbb
sbb
xor
mov
mov
movsb
imul
mov
sub
dec
loopne
sti
push
mov
jns
lds
dec
fwait
loope
or
add
push
mov
mov
or
xor
inc
dec
adc
inc
xor
push
adc
xchg
cmpsl
mov
push
ja
push
test
sbb
stos
mov
icebp
scas
arpl
cs
cmp
mov
stos
add
cltd
adcl
rolb
sub
ret
mov
push
mov
out
xor
push
cmp
imul
out
add
push
cmp
push
add
xor
sti
add
mov
mov
shll
adc
mov
jmp
repnz
sbb
and
pop
inc
push
ret
push
push
push
mov
xor
mov
inc
pop
gs
and
jns
cmp
leave
lds
mov
int3
lret
sbb
cs
pop
sbb
loopne
ljmp
test
add
push
addr16
push
sahf
dec
insb
popf
mov
pop
jmp
mov
shlb
int
adc
inc
and
xchg
mov
mov
test
in
dec
xor
test
loopne
icebp
test
js
je
ss
orb
test
mov
cwtl
sub
adc
les
xor
sbb
mov
aaa
adc
mov
add
mov
adc
insb
loop
mov
xchg
mov
adc
jno
mov
and
add
test
sub
xchg
xor
insl
mov
xor
push
dec
xor
test
mov
pop
cmp
sbb
inc
gs
test
jne
or
loopne
ret
out
popa
loope
jp
or
xchg
adc
sub
add
hlt
into
add
jo
add
xor
xor
sub
push
dec
cmp
icebp
jl
loop
or
pop
cmpsb
lea
jne
repnz
iret
lahf
out
out
add
repnz
outsb
and
jne
sub
push
lds
pop
movsl
and
andb
data16
jecxz
jge
push
gs
fildll
mov
xchg
lret
xchg
sbbb
pop
arpl
pop
or
mov
add
jno
jno
mov
sub
add
xchg
lods
enter
flds
pop
adc
mov
cwtl
xchg
inc
hlt
adcb
aas
cmp
xchg
inc
popa
or
mov
push
pop
les
sub
adc
or
ljmp
rorb
mov
push
jno
mov
stos
cmpsb
and
bound
nop
and
imul
test
add
and
sbb
fbld
test
imul
and
gs
and
les
scas
xlat
mov
sub
pop
arpl
imul
mov
imul
orb
add
nop
adc
sbb
repnz
ja
stos
and
sbb
shrl
sub
lret
inc
or
mov
imul
dec
or
xor
repz
or
pop
cmp
and
jecxz
inc
push
xchg
mov
mov
stos
xchg
int
push
nop
pop
mov
sub
les
xchg
inc
inc
cmp
push
sbb
pop
mov
add
movsl
or
pop
dec
movb
xchg
add
or
and
call
leave
rep
cmp
mov
push
xorl
cmp
stc
gs
rol
test
subl
add
add
bound
push
dec
adc
and
mov
nop
les
les
mov
ljmp
iret
xor
add
push
test
adc
or
push
xor
or
add
push
sub
or
mov
mov
inc
and
stc
xor
stos
jmp
xor
add
loope
or
arpl
movsb
or
insl
push
and
and
rol
cmp
mov
and
gs
xchg
mov
aam
test
cmpsb
mov
xorb
dec
mov
push
sbb
dec
shlb
inc
xchg
sbb
test
pop
mov
sbb
dec
xchg
cmp
sub
inc
or
adc
jl
movups
jp
cmpsl
outsb
test
dec
movsl
addl
adc
or
mov
insl
dec
inc
inc
add
dec
and
pop
shl
and
pop
xchg
xor
jmp
push
je
sbb
xchg
push
xchg
aad
mov
pop
add
aas
es
mov
and
pusha
pusha
int
sbb
pushf
test
dec
xor
xor
xor
fistl
daa
cltd
shl
nop
and
mov
inc
dec
adc
and
dec
or
jmp
mov
or
fwait
push
adc
adc
andb
inc
shll
cltd
ret
xchg
sub
call
cwtl
dec
sarl
dec
mov
lret
inc
mov
push
and
add
add
xor
add
rorl
call
imul
dec
lea
lcall
or
push
sbb
rclb
jno
jnp
mov
sbb
test
arpl
push
and
fldenv
dec
adc
loope
and
add
inc
lea
add
pusha
adc
stos
js
popa
jo
movb
pop
jno
stc
mov
cs
and
dec
xchg
repnz
cwtl
and
pop
sub
xor
xor
enter
and
mov
pop
lahf
add
jno
inc
cltd
into
add
mov
enter
push
add
stos
leave
cmp
push
gs
fsubrl
or
xor
mov
imul
or
mov
in
test
inc
testl
pop
lods
scas
bound
es
pusha
push
or
dec
jecxz
out
lret
lods
test
test
imul
mov
add
jp
nop
push
sbb
adc
adc
add
andb
or
and
push
mov
fisubrs
adc
adc
lods
mov
and
cmp
pop
je
dec
push
mov
sbb
adcl
dec
jne
xchg
adc
mov
lret
loop
arpl
xchg
inc
xor
ja
sub
add
sub
adc
mov
push
aaa
mov
or
xlat
aad
je
and
leave
pop
and
jecxz
push
push
add
xchg
mov
or
add
inc
pop
add
test
mov
inc
mov
or
push
inc
sbb
inc
iret
add
pop
ds
movsl
fs
sbb
mov
bound
aam
sub
call
orl
push
add
test
shr
cwtl
xchg
jo
adcl
inc
lds
sbb
adc
je
mov
stos
push
data16
pusha
push
cltd
push
sub
cmpl
sub
test
jecxz
test
and
out
ret
push
xchg
dec
sub
pusha
inc
add
add
aad
movsb
xchg
adc
loope
aam
das
xchg
adc
jno
push
push
and
roll
int3
adc
dec
add
xor
jae
mov
or
inc
lods
xor
sar
shrb
nop
wrmsr
push
std
xor
ret
inc
and
mov
push
les
aad
inc
inc
loopne
sub
cmp
loope
xor
xor
enter
and
dec
inc
mov
in
adcb
cmp
lcall
insl
sbb
mull
das
mov
sub
xchg
cmp
cltd
mov
sbb
xchg
xorb
xchg
sbb
mov
iret
fcoml
add
sbb
add
add
add
inc
stos
or
push
push
mov
fbstp
jno
pop
lods
repnz
fistpl
and
sbb
inc
mov
out
dec
pop
lds
pop
mov
jae
push
xor
xchg
imul
push
nop
jl
or
fadd
xchg
mov
adc
repz
daa
add
mov
fildl
cmc
push
mov
rcll
popf
sub
dec
movsb
pop
xorl
lcall
in
push
nop
stos
pop
xor
arpl
xchg
repz
adc
sbb
mov
addr16
xchg
push
mov
lea
push
jmp
cs
mov
add
test
test
mov
xchg
arpl
xchg
dec
or
outsl
iret
sbb
adc
inc
lods
adc
rcrl
and
lcall
sbb
jecxz
cmc
xchg
mov
xchg
mov
lcall
rorl
mov
es
mov
inc
push
inc
aaa
lea
cwtl
iret
jne
mov
shlb
test
mov
push
push
shll
adc
adc
imul
sbb
inc
add
loopne
das
add
mov
lock
rorb
scas
mov
outsb
es
cmpsb
push
mov
cmp
mov
add
dec
cmp
les
jae
sub
mov
jne
pop
test
addr16
and
push
pop
cmc
addb
add
dec
and
xlat
addl
inc
dec
inc
inc
cltd
pop
jo
imul
add
pusha
mov
or
add
or
fildl
mov
pop
adc
test
shll
and
and
mov
movsb
xor
add
or
xor
sbb
scas
lods
movsb
lods
stos
jne
sub
ds
popa
das
jno
dec
pushf
or
dec
mov
movsl
cld
or
sbbb
mov
repz
pusha
lods
cltd
jno
xor
push
out
cmpsb
cmpsb
mov
adc
push
xchg
push
xor
mov
xor
pop
cwtl
pop
push
add
xor
and
nop
lret
xchg
add
pop
add
cmp
aaa
loopew
xor
xchg
shlb
pusha
mov
push
loop
jg
stos
or
rorl
mov
mov
push
je
loope
sbb
push
mov
add
xor
dec
push
and
and
in
cmp
in
aam
mov
sbb
and
lds
mov
pop
in
and
or
ret
mov
and
mov
push
call
adc
ret
push
pop
cmpsb
ret
pop
adc
and
out
fwait
and
fstps
or
add
arpl
pop
xor
fnstcw
cltd
sbb
dec
xor
cld
sbbl
test
in
dec
push
push
and
push
dec
add
sub
mov
popa
dec
mov
add
mov
test
sub
pop
incb
push
mov
dec
xor
sub
lea
push
pop
push
scas
cmp
fcoms
and
cwtl
sub
test
sbb
gs
inc
cmpsb
sub
add
jnp
inc
and
add
mov
pop
fisubrl
dec
rorl
rorb
cmp
loope
add
stos
popa
loopne
lahf
jle
jmp
sbbb
or
rclb
cmp
test
fldenv
cmp
mov
mov
dec
add
flds
or
xchg
ss
xchg
push
xchg
hlt
das
and
push
push
or
mov
pusha
sbb
sub
xchg
imul
push
add
rcrb
test
lea
loope
scas
add
push
test
push
cmp
mov
mov
test
insb
icebp
and
add
popa
push
mov
inc
sarl
jne
shlb
cmpl
imul
mov
loopne
mov
inc
scas
cwtl
pusha
arpl
pop
adc
and
mov
xor
lods
mov
nop
leave
fmul
aam
popa
or
test
or
inc
in
orb
and
dec
xor
mov
mov
dec
mov
jbe
add
les
subb
jne
aam
adc
xchg
hlt
inc
stos
leave
std
dec
add
cmp
nop
out
imul
in
cwtl
je
push
add
jge
sbb
adc
loop
xor
xor
call
push
add
fwait
movsl
add
or
shll
add
addl
fs
mov
mov
test
dec
sahf
xchg
cmpsl
mov
mov
xor
mov
in
lret
cwtl
mov
pop
rorb
movsb
orb
or
push
aaa
insb
add
call
push
xor
and
mov
push
rcrb
out
jp
pop
add
leave
inc
xchg
sbb
dec
jae
lds
jns
sub
pop
mov
add
push
leave
add
xchg
addl
bound
popa
test
lods
or
cmp
icebp
rorb
or
and
mov
aas
cmc
pop
or
cmc
cmc
std
mov
or
stc
pop
mov
adc
and
or
loopne
movsb
adc
xlat
inc
add
stos
push
add
inc
cmp
sub
fstl
loope
inc
movb
adc
sbbb
xor
inc
sarl
rol
mov
sub
aam
xchg
jmp
mov
mov
or
rcrl
and
sub
sub
bound
std
and
dec
pop
mov
jmp
inc
and
adc
mov
popa
test
pop
es
push
cmp
es
ss
loopne
or
push
adc
add
xchg
lods
aad
mov
sub
loopne
jnp
xchg
mov
dec
and
mov
stos
int
and
and
dec
adc
jmp
and
sub
xor
and
loope
mov
dec
and
daa
mov
imul
loop
test
sbbb
and
xchg
mov
inc
insb
adc
pop
sbb
push
and
lds
or
jo
cmp
lods
push
sbb
xchg
pop
xorb
stc
add
add
push
pusha
gs
jne
pop
adc
cmp
xor
sarl
or
pusha
add
or
movsb
and
adc
es
inc
xchg
out
xchg
or
and
push
faddl
mov
loope,pn
xor
lock
add
push
xor
push
mov
sub
out
dec
ret
jnp
xor
bound
push
les
inc
inc
mov
test
and
rorb
dec
and
jno
xor
sahf
xchg
clc
xor
push
mov
xchg
adc
cltd
int
outsl
lret
and
dec
sbb
in
sub
or
xchg
jb
mov
jne
adc
gs
popf
rclb
or
push
mov
add
jno
xor
dec
push
rclb
stos
or
dec
sub
les
or
loop
lods
mov
inc
mov
add
insl
movsb
ja
sbb
std
jmp
adcb
adc
cmp
sub
push
outsb
mov
pop
xor
mov
push
add
dec
shlb
xor
mov
xchg
push
pop
je
mov
push
or
lahf
pop
in
pop
xor
xor
push
enter
aas
shlb
mov
or
push
sbb
pop
push
add
cmp
add
inc
enter
dec
dec
lock
cmp
aam
shrl
push
jmp
shlb
pop
and
divl
or
popa
pop
pop
cmpsl
popa
sbb
inc
cmp
xor
mov
mov
call
add
sbb
and
test
or
and
sbb
mov
leave
pop
sbb
out
popa
push
fisttpll
jno
inc
pusha
adc
inc
divl
xor
sbb
je
sub
stos
rorl
mov
or
cmp
sbb
insl
iret
add
jnp
and
pop
leave
dec
sub
jns
ret
in
cmp
mov
jo
loop
pusha
stos
mov
movsb
adc
outsb
loope
cmp
test
push
mov
sbb
and
inc
sbb
mov
push
insl
and
push
frstor
jne
or
es
inc
aad
sbb
icebp
loop
shrl
lds
cmc
jle
loopne
add
inc
jecxz
add
xchg
mov
movsb
icebp
faddl
dec
insl
pop
adcl
mov
shrb
pusha
push
inc
inc
fsubs
dec
xor
out
push
fidivl
movsl
cmpsb
stos
cmc
mov
add
xchg
insb
adc
lds
sbbl
daa
popa
and
sbbb
enter
pushf
es
movsb
inc
les
test
dec
adc
or
and
mov
add
stos
movsl
cmc
push
les
push
loopne
push
or
mov
mov
rorl
add
or
xor
adc
jnp
or
lahf
mov
xchg
or
dec
mov
scas
cmp
and
mov
popa
xor
inc
dec
cmp
push
add
test
or
pusha
mov
xchg
adc
mov
ret
mov
push
and
adc
lods
pop
sub
add
adcb
push
in
xchg
jno
push
inc
xor
cmp
addl
loope
inc
pop
roll
ljmp
add
int
jp
into
jo
call
add
jo
sbb
pop
jg
roll
adc
iret
jl
inc
mov
popa
or
mov
mov
sub
pop
adc
rolb
mov
dec
push
or
gs
cs
call
enter
adc
mov
adc
dec
xchg
stc
lea
sbb
mov
or
inc
pop
ret
add
jne
dec
ja
aad
sub
adc
sub
mov
pusha
pop
mov
ljmp
ret
nop
push
jp
add
sub
test
aaa
movsb
rolb
pop
pop
insb
push
nop
xchg
ret
mov
inc
add
das
enter
andl
adc
lahf
adc
mov
ret
push
out
bound
lea
insl
and
lds
cmp
cmp
pop
sti
or
jmp
sbb
cmp
adc
mov
lret
mov
scas
push
dec
push
inc
leave
shrb
xor
or
or
shlb
inc
add
or
mov
lea
std
insl
push
mov
adc
xlat
push
subl
adc
push
xor
xchg
push
dec
arpl
inc
and
call
mov
sbb
push
jae
push
call
xor
inc
add
icebp
inc
pop
mov
mov
fs
push
aam
mov
sub
insb
and
pop
xchg
and
dec
dec
subl
mov
sub
push
xor
daa
and
adcb
sbb
add
mov
mov
or
and
add
scas
daa
xchg
jne
dec
insl
stos
xor
fldcw
mov
in
je
rcrl
jno
sar
mov
aas
aaa
bound
inc
and
pop
dec
or
sub
push
roll
mov
lret
je
and
int3
sti
jne
or
or
pop
add
and
stos
or
sbb
stos
inc
inc
xchg
dec
aad
mov
stos
or
enter
les
jae
pop
sbb
push
inc
xor
cmp
and
push
adc
xor
cmpsb
or
or
jl
rorl
xchg
je
shlb
dec
pop
ss
inc
mov
ret
jne
mov
dec
cmp
and
adc
mov
push
or
jnp
xchg
rclb
xchg
pop
aam
xchg
xchg
cs
inc
mov
lret
sbb
add
and
sahf
add
or
push
insb
leave
or
adc
and
out
pop
add
adc
xor
adc
cltd
dec
xor
stc
dec
sahf
test
mov
nop
imul
rolb
and
dec
xor
fwait
xor
add
jmp
or
sahf
push
jo
daa
jmp
mov
or
pop
mov
or
enter
test
add
pop
repnz
xchg
cmpsb
imul
shl
loopne
push
std
popa
dec
mov
pop
sbb
xor
inc
popa
addl
push
and
mov
push
je
xlat
jno
fistpl
sbb
cmp
push
inc
mov
imul
mov
xor
inc
xchg
scas
pop
enter
xor
push
inc
rolb
sbbl
rorb
out
push
xchg
add
and
push
add
push
mov
movb
pop
and
cli
cs
inc
imul
cltd
jb
adc
imul
lods
roll
inc
pop
pop
fcoml
repnz
add
jo
or
pop
xchg
xor
xchg
cmp
push
dec
or
and
adc
jecxz
pop
addr16
jl
loop
shrb
inc
dec
add
es
in
adc
out
mov
or
add
lock
push
and
sub
mov
pop
jne
mov
pop
fsubrs
sub
push
push
and
mov
mov
fscale
in
mov
shlb
cmpsl
stos
mov
les
adc
out
inc
rolb
rorb
add
lahf
icebp
adc
test
xorl
inc
mov
add
inc
mov
pop
je
lahf
popf
adc
cmp
xchg
mov
xchg
or
push
aad
adc
enter
insl
stos
mov
cmp
mov
xchg
xorb
lds
inc
adc
fcomp
movsb
ret
outsb
and
testb
imul
add
outsl
adc
in
xorb
add
adcb
and
mov
jno
lods
in
add
nop
frstpm(287
or
add
add
sbb
mov
and
les
sub
rol
add
dec
fisubs
xor
iret
xor
dec
mov
and
jns
push
outsb
leave
adc
test
icebp
xor
sbb
cmp
lret
push
mov
mulb
sbb
xchg
adc
leave
popa
pop
pop
xchg
push
add
aad
inc
scas
repnz
xor
ljmp
icebp
pop
sub
add
cltd
faddl
test
sbb
add
mov
pop
mov
push
xchg
pop
xchg
push
pop
das
mov
cs
mov
adc
loope
or
mov
push
xchg
sahf
xor
or
cld
add
addb
xchg
push
push
xor
xor
sbb
icebp
iret
ret
and
or
stos
std
loop
add
data16
lds
inc
inc
movb
ja
xchg
jno
loop
xor
test
loope
adc
rcrl
inc
and
and
aam
add
ret
mov
addl
push
pusha
and
scas
jo
pushf
ret
daa
repz
add
insb
jmp
mov
ret
mov
pusha
ds
neg
or
jg
dec
jo
pop
adcl
adc
shrb
dec
mov
stos
push
test
pop
ljmp
dec
jne
dec
daa
and
and
pop
aas
xchg
push
lret
shlb
jmp
inc
and
cmp
fadd
loope
popf
dec
push
rorl
adc
mov
sbb
into
jmp
sbb
jae
les
pop
and
mov
popf
add
push
jecxz
dec
add
mov
pushf
sub
insb
or
or
sbb
sbb
das
mov
repz
nop
xchg
inc
cs
sbb
lahf
arpl
cwtl
cmpsl
das
jnp
or
push
pop
sbb
addl
dec
pop
cmp
jg
or
out
jo
xchg
test
daa
movsb
add
fimull
adc
xor
or
loope
inc
jecxz
inc
add
loopne
push
movsl
mov
ljmp
xor
mov
addb
push
cmpl
push
mov
inc
cwtl
mov
or
sbb
mov
mov
xor
ret
xor
adc
add
fs
sahf
push
mov
std
arpl
movb
loopne
add
jb
rclb
mov
adc
pop
addb
xor
push
pop
add
dec
imul
xor
lcall
mov
lds
out
xor
adcb
dec
mov
dec
and
bound
loope
or
or
and
xor
add
mov
imul
mov
inc
adc
ret
xlat
cmc
adc
sub
gs
test
xor
ss
xor
or
rolb
dec
cmpsb
jne
ret
imul
and
jecxz
pop
push
std
xorl
dec
lret
mov
adc
jae
xchg
jl
xor
dec
leave
bound
rorb
sbb
push
push
mov
cs
xor
cmpsb
leave
dec
pop
and
lcall
push
mov
dec
xor
sub
push
inc
mov
stos
sub
or
stos
cmp
fcmovnb
pop
mov
cmpb
jo
inc
adc
mov
dec
out
xor
adc
pop
jno
and
xchg
xor
mov
adc
jge
mov
or
xchg
enter
adc
je
lods
mov
mov
pop
adc
cs
cmp
push
std
and
test
add
ljmp
xor
mov
imul
add
fs
cltd
xchg
push
sbb
loope
insl
sub
ror
cwtl
sub
push
insb
mov
pusha
rcll
sbb
movsb
dec
mov
jns
inc
push
or
xlat
mov
dec
rorl
mov
into
inc
orl
dec
inc
movsb
jns
data16
pusha
sub
andnps
mov
lods
insb
adc
test
lea
xor
addl
inc
inc
jo
mov
lret
push
cmc
xchg
in
xchg
int
emms
loop
enter
mov
cmp
aad
loopne
mov
add
adcb
sbbb
ja
inc
add
popa
dec
push
popa
and
es
aad
jp
pusha
inc
xchg
leave
mov
add
dec
push
test
loopne
lea
jb
xor
and
in
decb
xorl
popa
and
add
inc
adc
sbb
push
cltd
test
jo
xchg
sar
cmp
sbb
rorb
mov
push
jo
rolb
cltd
mov
push
inc
inc
mov
daa
add
repnz
aad
push
cmp
stos
and
inc
into
push
sub
fsts
mov
or
adc
mov
or
push
leave
test
out
mov
aad
mov
mov
sbb
add
cwtl
lcall
jecxz
sbb
int
mov
mov
cmpsl
negl
and
pop
mov
pop
lret
test
faddl
mov
cmp
mov
adc
aam
shll
xor
fwait
cmp
sub
or
and
add
sbb
lds
mov
or
push
icebp
out
loopne
imul
add
inc
das
seta
adc
pop
jecxz
lods
or
loopne
in
pop
or
out
subl
inc
mov
daa
popa
cmp
arpl
sbb
in
les
or
stos
in
stos
andb
jge
add
and
lret
inc
enter
sub
stc
dec
shlb
fcomi
jecxz
add
push
sbb
xchg
dec
inc
push
jae
mov
cwtl
inc
andl
pusha
or
inc
mov
sbb
imul
mov
mov
add
xor
jecxz
cmpl
bound
stc
cmp
scas
fldenv
lds
xor
stos
or
addr16
cwtl
mov
movsb
test
pop
lea
adcb
inc
sub
xchg
jnp
fmull
cmp
push
imul
and
rcl
push
pop
mov
movsl
out
rol
and
mov
test
int
shll
sarb
stc
inc
pop
inc
pop
addr16
jno
pop
mov
xor
pop
mov
add
pop
sbb
insb
inc
push
ret
or
or
je
test
mov
or
jne
adc
jns
mov
cvtps2pi
loop
ss
or
inc
addb
adc
mov
push
and
push
inc
adc
inc
sub
xchg
repz
cmp
jbe
pop
cmp
bound
or
add
lcall
hlt
fisttpl
pop
mov
cmp
sbb
pop
pop
aaa
or
sub
in
cmp
push
ss
or
lret
and
xor
cwtl
cwtl
dec
loope
push
inc
loop
dec
sbb
push
movsl
js
add
cli
sub
cmp
stos
cmp
push
adc
add
cwtl
mov
shrl
shlb
xor
int
dec
sbb
inc
add
or
aad
adc
inc
jmp
stos
dec
sbb
movsb
adc
flds
add
jae
dec
rcl
lahf
lahf
jmp
adc
add
dec
pop
mov
cmp
add
or
or
jo
xchg
mov
jne
add
imul
sbb
insb
add
xor
aas
sbb
pop
mov
call
xlat
bound
ret
rcrl
cld
subb
sub
cmp
add
ljmp
fldenv
cwtl
call
dec
rorb
adcl
aam
xor
es
jno
jmp
inc
pop
lods
in
daa
or
add
mov
mov
adc
cmp
test
scas
loop
leave
xchg
xor
push
mov
add
or
inc
shl
test
push
and
push
aam
adc
inc
add
push
or
cmc
xor
loopne
je
adc
xchg
or
pop
pushl
roll
xchg
add
xchg
and
or
add
adc
test
adc
mov
mov
sbb
bnd
rorl
add
dec
mov
fdivl
push
xor
and
pop
dec
cltd
fucomi
xchg
mov
push
push
dec
movsl
inc
inc
sbb
push
inc
adc
stos
and
subb
or
add
jecxz
sbb
and
or
mov
rorl
sbb
inc
push
pop
rorb
xchg
pop
push
adc
lret
sbbl
push
dec
or
push
lahf
push
add
jno
fsts
mov
xchg
sbb
in
pop
sbb
xchg
subl
rol
mov
icebp
mov
xchg
sbb
fdivs
es
push
cmpb
pop
in
mov
dec
das
dec
add
cmpsl
sbbl
add
dec
in
mov
push
mov
divb
subb
fs
dec
packsswb
shl
js
push
dec
mov
js
or
pop
inc
add
sub
add
sub
loop
js
mov
cmp
rcr
test
lahf
add
push
sub
test
dec
xchg
inc
fstpl
pop
repnz
dec
add
or
push
arpl
mov
and
and
test
xchg
andb
add
xor
jp
jo
add
pop
mov
add
or
cwtl
or
repz
sub
push
testl
add
jmp
push
jmp
loopne
mov
fisubl
and
int3
rolb
sti
imul
sub
stos
test
or
sbb
xchg
sub
add
xor
test
mov
les
push
xchg
and
scas
pop
xorb
mov
pop
mov
push
cwtl
stos
inc
mov
or
cmp
xor
cmpsl
lds
adc
mov
ret
pop
adc
fld
stos
mov
jnp
int3
xchg
loopne,pn
mov
sub
loop
mov
push
jne
gs
lret
aad
cmp
nop
or
or
or
mov
imul
sub
pusha
stos
add
aad
inc
push
lahf
subb
imul
ficompl
mov
push
daa
inc
adc
pop
inc
or
dec
sbb
test
push
or
adc
and
push
mov
imul
inc
sub
and
stc
arpl
dec
or
out
cs
or
pinsrw
mov
gs
lret
dec
jnp
push
mov
fwait
xchg
iret
jne
sahf
cmpsb
adc
ret
cmpl
add
jo
adc
lods
adc
inc
ret
xchg
push
push
add
ss
sub
jl
adc
lods
outsl
mov
or
pop
test
or
add
add
lods
cmp
loop
push
or
add
mov
xor
mov
lea
jecxz
stos
dec
adc
andb
or
cltd
movsb
mov
and
cwtl
dec
mov
sbb
push
call
pop
iret
inc
and
add
sbb
mov
lret
cmp
xlat
add
push
sbb
adc
sub
adc
push
mov
mov
or
mov
xor
jg
push
xor
add
nop
mov
rcll
sbb
sbb
pop
xchg
dec
adc
aad
mov
mov
push
sbb
jbe
addl
popa
out
mov
shlb
adcl
test
mov
aad
orb
mov
push
xchg
int3
add
jno
addr16
fidivrs
ss
add
mov
cs
fs
dec
adc
xor
popa
sub
xchg
or
sub
in
pop
mov
dec
mov
test
add
lahf
popf
adcl
loope
xchg
xchg
test
ljmp
test
add
and
in
and
aaa
push
in
jo
sbb
cmp
sbb
mov
mov
loopne
cld
mov
add
orb
rolb
adc
push
pop
lock
mov
cmp
push
ret
pop
xchg
or
gs
lea
shlb
sub
outsl
add
addb
cwtl
xorb
push
lods
jo
test
nop
icebp
push
pop
ja
cs
push
jne
imul
sbb
cmpsb
enter
sbb
imul
jge
xor
mov
sbb
xor
dec
jmp
leave
push
rcrb
jo
push
pop
aam
push
mov
or
push
jmp
push
loopne
enter
cld
xchg
mov
push
iret
add
jle
xor
mov
shll
scas
pusha
pop
mov
inc
lcall
mov
mov
lods
adc
add
sub
adcl
roll
sbb
das
push
push
andl
add
leave
movsl
xchg
ret
xchg
dec
mov
and
adc
jge
mov
mov
adc
je
push
push
inc
inc
into
sub
xchg
and
inc
imul
test
popa
add
push
xchg
push
mov
and
sbb
shr
adc
adc
out
test
mov
out
inc
add
or
mov
popa
or
cwtl
stc
xchg
dec
test
out
aas
pmulhuw
leave
rclb
and
or
movsl
in
push
dec
dec
sbb
push
roll
jp
xor
dec
adc
mov
or
adc
adc
add
sub
daa
push
sub
cmpsl
pop
or
mov
mov
stc
inc
adc
loopne
and
sub
push
adc
add
test
stos
test
mov
inc
test
or
mov
xor
imul
fiadds
push
jns
fidivs
nop
mov
adc
movb
lds
and
adc
push
sub
popf
add
dec
xchg
stos
pop
dec
xor
inc
rcll
add
add
sbbb
adcb
push
daa
cmp
adc
test
or
sbb
sbb
mov
arpl
push
push
dec
rolb
push
outsb
sbb
push
mov
lcall
add
stos
xchg
push
scas
pop
mov
lahf
adc
aaa
or
push
iret
mov
inc
addb
inc
lds
nop
pop
jmp
or
or
dec
cmp
in
stos
adc
or
leave
xchg
ret
xor
add
cmp
stos
dec
lock
cmpl
push
or
in
push
popa
call
adc
inc
xchg
hlt
push
test
lcall
popl
nop
out
jp
ds
cmp
push
xchg
and
rolb
inc
pop
les
adc
rolb
sbb
nop
pop
inc
adc
add
mov
ret
or
sbb
insl
adc
xchg
cmp
pop
rorb
add
stos
pop
add
xorb
inc
push
movsl
aam
mov
cltd
pusha
pushf
cmc
jp
adc
sarl
lods
inc
cmp
inc
adc
in
jp
sbb
sub
fs
jnp
pop
and
loopne
movsb
inc
add
xchg
cmp
add
aam
add
mov
xlat
cmp
add
adcl
push
cwtl
add
dec
xchg
add
and
ja,pn
test
inc
out
sub
add
mov
inc
or
and
pop
test
add
jno
gs
fwait
shrb
sbb
outsl
jo
add
or
add
iret
mov
ja
orb
shll
test
push
and
test
mov
sbb
sub
inc
xchg
out
add
inc
stc
cmp
cmp
xchg
shll
jnp
pusha
sbb
lods
push
xor
dec
js
rcr
js
or
scas
iret
mov
jmp
inc
adc
inc
sahf
pop
xchg
mov
scas
or
mov
mov
xorl
mov
add
mov
mov
in
fistps
inc
loope
pop
xchg
pop
xor
dec
mov
aad
or
mov
and
test
cld
push
add
add
out
mov
fistl
or
inc
imul
movsl
rclb
cmpsl
sbb
or
xor
xchg
rorl
and
cmpsb
mov
add
push
insl
mov
roll
mov
and
loopne
push
rcll
icebp
scas
pop
sub
loopne
nop
and
mov
push
cmc
mov
aaa
lea
add
xchg
fadd
inc
adc
jae
inc
adc
mov
shlb
data16
and
mov
cmp
xor
sbb
inc
sbb
lret
sbb
lea
repz
push
xor
orl
or
adc
setg
call
push
push
adc
mov
adcb
adc
popf
jo
inc
mov
leave
orl
mov
xor
cmpb
inc
and
jg
pop
and
mov
repnz
add
lret
xorb
mov
lods
push
dec
sub
sub
xor
xor
loope
xchg
and
mov
mov
push
pusha
jmp
or
orb
insb
or
sbb
shl
rolb
xor
es
outsb
pop
or
or
jnp
dec
shrb
les
pop
test
mov
mov
jmp
and
mov
rolb
test
sub
cmp
mov
sub
leave
jp
cmp
je
sub
or
and
das
lock
sub
insl
std
add
addb
je
fcoms
fcmovb
sar
outsl
in
sub
inc
jmp
shlb
adc
xchg
cmp
or
push
or
inc
jmp
sub
xchg
shlb
pop
and
add
iret
inc
orl
adc
push
add
or
adc
lret
and
shrb
ret
mov
adc
std
pop
or
cmp
lods
cld
popa
test
add
or
dec
shlb
out
mov
push
xor
jge
adc
push
push
and
jmp
aad
lret
sbb
test
inc
movsl
popl
into
scas
or
or
adc
jg
aam
or
cwtl
je
jmp
inc
pop
rolb
imul
rcll
add
push
pop
add
loopne
pop
xor
mov
xor
xchg
aam
imul
jo
mov
push
xor
sbb
inc
leave
sbbb
xchg
jg
mov
adc
and
jne
hlt
dec
inc
sub
push
add
sbb
int
sub
scas
mov
mov
add
dec
repz
pop
push
adc
stos
test
add
push
sti
std
lret
mov
inc
mov
sti
icebp
in
push
inc
sbb
sbb
inc
cmpsb
xor
loop
rcll
je
push
jo
cwtl
add
xchg
push
sti
std
xchg
xor
and
inc
pop
stc
and
fs
push
xchg
popa
std
add
rcll
loopne
inc
dec
dec
xor
ljmp
sahf
push
cmp
imul
xor
inc
adc
inc
rcll
sub
or
sbb
sub
sub
les
push
lds
popa
popl
jno
xchg
je
dec
adc
orb
jno
pop
dec
pop
ss
inc
shrb
in
add
pop
mov
xchg
or
xor
ret
rorl
andnps
in
test
and
ficoms
lea
add
xchg
fiaddl
push
add
add
loopne
push
sbb
mov
sub
orb
popa
sbb
jp
or
in
imul
adc
cmp
test
sub
jne
sub
and
lock
xchg
loopne
adc
cmpl
enter
add
adc
push
aad
scas
mov
fimuls
inc
jmp
rolb
dec
add
sbbl
inc
mov
sbb
sub
add
and
repz
loopne
sbb
jmp
push
movsl
adcl
bound
push
xchg
and
or
test
pop
test
lods
stos
imul
pusha
and
in
and
add
ret
clc
mov
xor
cmp
pop
rolb
pop
stc
sub
xchg
xlat
and
addl
jmp
repnz
adc
push
cmp
test
mov
stc
push
mov
sti
push
rolb
jp
lds
and
or
adc
add
vmovsd
jne
sub
lods
scas
dec
ds
pop
rolb
or
push
inc
add
adcl
inc
push
jg
test
add
push
movsb
inc
cmc
jp
pop
push
aam
pop
jno
cmp
rcl
lcall
cs
sahf
mov
add
adc
add
add
xchg
or
insb
adc
inc
inc
push
rcl
pusha
add
or
push
cmp
adc
push
cmpsb
into
jno
je
or
sub
adc
push
test
lods
xchg
mov
sbb
int
movsl
and
jae
xchg
cs
lea
mov
xchg
adc
out
lds
add
imul
arpl
or
xchg
push
rolb
xchg
cmp
xchg
rorb
or
xchg
add
movsb
and
add
dec
mov
gs
insb
push
inc
ds
shlb
xor
lods
mov
xor
inc
stos
inc
mov
mov
cs
and
insl
push
cmp
push
add
loop
daa
in
pop
or
stos
in
add
cmp
mov
loopne
and
loop
arpl
add
arpl
add
rol
test
inc
mov
sub
mov
dec
and
add
sub
nop
cmp
jno
rcl
movsb
add
or
mov
adc
inc
sbb
roll
sbb
mov
cmpsl
fwait
sbb
adc
cmpsb
stos
shr
imul
or
adc
movsb
data16
lcall
xorl
or
lahf
xchg
sbb
sbbl
and
cmp
xchg
lods
lds
or
fcmovnb
dec
packsswb
adc
orl
xchg
cmp
xor
cmp
pusha
adc
sbb
adc
ss
sub
insl
decl
loop
or
cli
gs
sbb
sbb
jl
inc
cmp
pop
dec
and
test
scas
or
cmpsb
dec
or
sub
mov
xor
inc
sub
sub
sub
dec
aaa
push
ror
insb
xor
sbb
lods
pop
inc
mov
addl
mov
or
add
nop
mov
mov
movl
inc
mov
cld
mov
aad
push
fs
mov
cmp
dec
aam
stos
pop
int
mov
or
add
jmp
add
pop
sbb
add
das
mov
xchg
cmp
inc
mov
mov
shlb
stos
cs
fbld
ja
add
or
adc
dec
and
mov
xor
shlb
add
add
std
adc
push
cltd
in
pop
sub
add
push
bound
jne
in
inc
gs
cwtl
aaa
in
inc
xchg
cmp
adc
mov
add
mov
or
in
add
cmp
imul
mov
pop
cmp
movsb
xchg
pop
rorb
jns
sub
add
sbb
and
add
cmpsb
lret
mov
sbb
scas
stos
mov
pop
xor
jo
push
mov
xchg
adc
lcall
xchg
or
das
testb
add
je
imul
mov
jne
outsl
mov
call
jo
les
daa
push
stos
sub
pop
psrld
or
xchg
lret
mov
insb
inc
icebp
adc
daa
imul
inc
lea
cmp
dec
and
xor
sbb
popf
adc
dec
inc
insb
nop
mov
das
std
add
dec
ret
jne
xchg
inc
cltd
adc
inc
push
xchg
inc
or
add
insb
xor
xor
popa
sbb
add
cmp
sub
add
dec
std
cmp
outsb
or
jns
push
ret
lret
sub
decl
daa
in
js
or
test
jae
rolb
pop
dec
mov
std
lds
add
adc
pop
xchg
aas
pop
add
or
test
dec
mov
pop
movb
dec
inc
int
sahf
repz
stos
add
xor
arpl
addl
fs
adc
test
inc
dec
lahf
adc
adc
pop
xchg
mov
pop
pop
jge
sahf
cmp
push
xchg
ljmp
fnsave
pop
in
sbb
bound
rorb
out
add
insl
adc
jl
mov
sub
xchg
cmpsb
sbb
je
sub
test
add
inc
movsl
and
movsl
test
es
or
cmp
mov
adcl
shll
lahf
bound
mov
subl
mov
push
cmc
xchg
orb
test
fnstenv
arpl
add
aam
add
dec
cli
xchg
fisubl
xchg
dec
inc
int3
insl
xor
out
cmp
adc
xchg
sbb
adc
hlt
mov
push
lds
popa
push
xor
dec
mov
pusha
pop
jp
and
mov
xor
xchg
jnp
or
cltd
inc
push
orl
lret
dec
insl
pop
bound
adc
adc
movsl
es
push
or
sbb
test
dec
xchg
jl
jmp
inc
andb
sbb
mov
js
or
cmp
lods
test
pop
cli
fcmovbe
add
mov
cmpsb
mov
cmp
or
es
std
icebp
ljmp
add
pop
xchg
sub
push
mov
adc
scas
cwtl
sbb
or
sbbl
lods
frstor
sub
dec
rol
and
mov
loope
jno
dec
ds
jl
xor
test
inc
pop
sbb
mov
or
aad
add
lahf
xor
fimuls
adc
sbbb
and
sbb
ret
pushf
arpl
fbstp
pop
lea
cmpsb
xor
jne
sbb
sbb
jle
xor
cltd
xor
or
cmc
dec
daa
push
je
out
ror
cmpsb
add
out
inc
imul
push
and
repnz
jecxz
xor
mov
je
es
sub
test
dec
mov
jns
inc
sarb
ror
cwtl
lea
xlat
cwtl
int
jmp
pop
bnd
mov
es
xchg
popa
pop
adc
lds
xchg
mov
add
mov
mov
add
lods
push
out
add
subb
lahf
add
xchg
inc
les
adc
pop
sbb
sbb
mov
scas
and
pop
push
sub
sub
mov
push
lds
fwait
sub
clc
in
cmc
jnp
popf
aam
das
nop
push
lahf
bound
cmpl
dec
js
or
xor
les
adc
mov
ret
mov
jns
push
popa
dec
and
sub
mov
inc
test
je
inc
dec
in
cld
and
lea
jo
pop
pop
xchg
mov
orb
std
or
cmp
pop
or
sub
aam
cmpsl
shlb
test
icebp
fistl
pop
inc
dec
adcl
test
xor
add
xchg
cmp
nop
lret
out
fwait
dec
subl
mov
xchg
scas
mov
aam
dec
dec
pavgw
arpl
inc
mov
jo
cmpb
sti
push
sub
sub
sbb
xorb
fimull
inc
add
xchg
sbb
or
xchg
add
sbb
fwait
loop
cmpsl
and
push
filds
inc
xor
push
add
loope
dec
adc
sub
in
mov
inc
pop
movsb
test
ret
ljmp
sbb
lret
imul
pop
pop
sbb
inc
aad
icebp
lret
pop
xchg
cltd
and
pop
pop
ss
or
fbstp
shlb
jmp
sub
and
add
sub
add
mov
in
dec
pop
lock
sahf
mov
and
jns
xchg
cmpsb
mov
dec
inc
push
arpl
or
push
lea
inc
jmp
add
mov
pop
or
mov
data16
ret
mov
push
or
jne
and
loop
es
addb
push
adc
mov
jo
cmc
pop
les
xor
stc
push
push
cmpsb
dec
and
js
lods
scas
in
ljmp
xor
push
pusha
es
sbb
fadds
fstps
xor
popa
sub
push
lret
das
and
inc
lret
repnz
jge
loopne
add
mov
movsl
addl
xor
sub
std
or
or
add
lods
xchg
or
lcall
sub
mov
test
cltd
and
gs
xor
call
mov
add
adcb
inc
jge
mov
adcb
inc
xor
cmc
test
push
cmp
jo
cmp
popa
push
sub
stc
test
mov
or
or
jle
loope
mov
out
jno
xor
xchg
mov
loope
jbe
dec
addl
loope
inc
add
sbb
xchg
dec
or
xchg
or
and
sbbl
aam
mov
adc
xorb
lretw
shrb
dec
mov
cld
rolb
aas
lods
dec
lcall
jbe
xchg
arpl
jno
sbb
adc
lods
pop
idivl
cli
test
in
add
pop
fisubl
outsb
ret
cmp
inc
inc
adc
sbb
sbb
les
or
ret
andl
fcom
adc
movsb
lcall
cwtl
xchg
cwtl
push
std
dec
jmp
or
addl
cmp
movsl
cmpsl
xchg
and
mov
or
cmpsb
addb
movsl
add
sbbb
cmp
adc
repz
loop
mov
pop
add
sub
dec
adc
es
xchg
mov
loopne
int3
shll
mov
loope
add
push
in
stos
adc
jo
lods
pop
push
adc
adc
movsb
pop
or
stc
adc
fidivrl
mov
imul
xor
push
add
xchg
fwait
in
inc
adc
push
jno
jmp
cltd
jecxz
shll
push
xchg
scas
inc
cmp
stos
dec
cmp
out
or
xchg
dec
adc
inc
popf
test
aam
inc
fwait
into
pusha
adc
mov
lcall
subb
dec
xor
or
push
imul
xor
or
push
or
aas
out
fnsave
pop
lds
mov
adc
and
gs
adc
pop
adc
fadd
mov
bound
xchg
add
push
jo
ret
inc
jo
xor
adc
xchg
mov
test
or
popf
test
lret
mov
add
and
inc
xor
test
mulb
rol
inc
pop
js
scas
mov
imul
mov
dec
jno
sub
or
sbb
rol
xor
test
sub
test
lahf
loope
add
out
ja
leave
mov
mov
add
push
adc
push
jb
adc
inc
mov
in
adc
out
xor
dec
sbb
mov
mov
add
mov
cs
adc
pushl
mov
add
ret
mov
add
arpl
aam
mov
repz
mov
pop
std
cli
adc
jae
lea
test
sub
fldl
mov
push
sbb
mov
fwait
sub
cmp
mov
shlb
mov
mov
xchg
aas
mov
or
mov
lods
js
shlb
loope
jne
cmpsl
adc
les
mov
mov
scas
sahf
adc
and
aad
sbb
mov
and
or
mov
imul
xor
xchg
push
add
mov
sahf
dec
fisubrs
fisubl
push
ret
addr16
add
neg
jno
jp
cltd
pop
sub
push
insb
cmpsl
enter
add
mulb
jo
test
xchg
sbb
push
add
das
test
mov
sub
push
pop
sub
xor
out
or
je
inc
lea
push
das
jecxz
and
in
add
lret
pop
xor
loope
cmp
scas
lods
add
inc
and
add
xchg
test
sahf
push
sbb
nop
pop
stos
mov
push
mov
cltd
jno
add
cmp
pop
xor
sub
pop
xor
xorb
stc
mov
repz
push
inc
pop
subl
int
ljmp
sub
and
ret
mov
nop
add
inc
repnz
test
fnstsw
shrb
jmp
add
imul
ljmp
or
dec
rcrl
sbb
lods
enter
popa
add
jg
inc
leave
aaa
pusha
mov
or
dec
cmp
mov
test
or
aas
sub
pop
or
sbb
xor
inc
xchg
push
inc
sub
lods
scas
daa
add
cmc
adc
add
push
imul
dec
jbe
sub
xor
adc
cmp
pop
rclb
dec
test
xor
xchg
or
push
test
ror
sbb
aam
les
xorl
in
inc
pop
and
adc
rorl
dec
add
push
shll
adc
jecxz
hlt
bound
out
enter
mov
adc
loop
es
inc
leave
fldt
adc
sub
sub
out
xchg
push
outsb
jp
mov
push
lret
sub
loope
mov
dec
push
xchg
mov
je
lahf
movb
lahf
add
adc
xchg
bound
jg
fwait
push
insl
sub
icebp
adc
xchg
les
adc
outsb
fwait
imul
sub
addr16
push
xor
add
rolb
loopne
aaa
cmpsb
pop
cwtl
addb
and
add
test
xchg
sub
mov
out
add
jmp
add
addb
push
xchg
cmp
dec
pop
cltd
aad
xor
inc
mov
les
and
add
and
rcr
or
mov
test
dec
add
or
jo
mov
inc
add
negb
mov
or
aas
sub
or
push
cmpl
inc
cmpsb
fisubl
ret
sub
ret
mov
mov
ds
adc
jns
cwtl
xor
push
sub
stos
in
imul
cmpsl
and
imul
add
out
loop
fwait
fwait
ret
sbb
push
shl
pusha
das
sahf
xchg
insb
loopne
call
inc
out
add
push
cmpsl
clc
movsb
mov
aam
push
and
std
adc
jns
mov
outsl
adcb
push
mov
mov
aad
jns
sub
xchg
out
imull
adc
pushf
sbb
or
gs
bound
push
rclb
sbb
sub
inc
push
sub
lcall
int3
es
cmp
xor
std
xor
adc
and
xor
mov
jno
aam
jns
mov
adc
aad
or
mov
push
subb
xor
scas
push
leave
movb
jns
ret
rcrl
test
push
add
enter
ret
arpl
cmp
and
test
lahf
push
push
nop
rsqrtps
push
push
movsb
and
mov
pop
bound
fstps
inc
add
push
cltd
rclb
xor
jns
icebp
add
shll
adc
or
imul
mov
rclb
xchg
or
lea
xor
addb
popa
and
mov
aad
cwtl
and
imul
enter
shlb
xor
sbb
test
adc
mov
popa
in
rolb
push
mov
or
adc
dec
adc
push
or
test
adc
mov
cmpb
ret
test
outsb
push
js
xlat
push
add
jno
pushl
jo
lods
jmp
or
or
rcrb
inc
dec
pop
rorl
movsl
or
add
mov
test
inc
or
sbbl
stc
pop
jae
dec
rorb
sbb
xor
or
and
inc
test
push
dec
pop
je
inc
shrb
push
and
inc
push
xor
shl
lea
call
addl
subl
cmp
push
mov
dec
push
pop
inc
push
movsb
mov
mov
sbb
loopne
leave
jns
jne
leave
mov
inc
daa
mov
into
jno
sub
adc
xor
mov
add
jecxz
daa
xlat
rclb
push
adc
xor
cmp
aaa
andl
addr16
inc
insb
les
ret
std
pop
test
rolw
adc
loop
add
je
cli
inc
sub
subl
inc
call
jne
mov
cmp
addb
out
dec
add
icebp
xchg
push
sub
insl
pop
add
loope
push
and
sub
dec
add
shll
jno
dec
add
push
aad
ficomps
mov
mov
mov
dec
into
mov
call
ljmp
and
add
sbb
xchg
sub
adc
adc
out
xor
lods
inc
adc
sbb
frstor
pop
ret
pop
pop
es
orl
rclb
add
xor
int
push
xor
pop
cwtl
mov
mov
sub
test
xor
sbb
pusha
inc
adc
sub
add
mov
jae
out
sub
push
sub
cmp
and
push
les
or
daa
je
sbbl
pop
cmp
mov
dec
push
dec
out
rol
push
push
lcall
push
stos
loope
xor
inc
adc
xor
dec
sbb
or
mov
mov
sbb
bound
adc
push
in
and
dec
and
xor
cwtl
sub
jo
push
test
add
divl
add
popa
mov
sub
imul
inc
dec
mov
and
insb
rcll
or
nop
test
sarb
pop
xorb
mov
and
mov
xchg
xor
stos
rcrl
inc
push
sbb
aaa
push
ljmp
push
mov
pushf
xor
cmp
add
shrb
inc
mov
pop
push
push
mov
les
push
inc
stos
or
roll
adc
or
rclb
inc
inc
pop
xor
push
arpl
test
adc
lret
sbb
daa
xchg
repz
dec
addl
lcall
push
insl
test
sub
inc
sbb
push
push
adc
xchg
sbb
xor
push
jg
mov
and
and
and
pop
adc
pop
inc
or
inc
pop
xchg
adc
sub
add
or
out
cmc
push
sbb
push
or
lods
loopne
dec
and
cmpsl
mov
cmp
dec
es
cmp
mov
loopne
aaa
mov
ror
loop
and
test
or
dec
adc
push
rcll
rol
fistps
cmove
test
jne
mov
cs
and
cmp
aad
mov
popa
jmp
jg
push
adc
iret
jmp
sbb
cmpsb
xchg
dec
stos
stos
cmpsb
cltd
push
es
cmp
roll
mov
loopne
jge
setae
xchg
mov
sbb
fadd
arpl
add
sbb
jno
lods
mov
cli
fiaddl
jo
push
hlt
mov
mov
stos
push
jge
mov
ret
es
inc
add
sbb
adc
or
push
sahf
mov
dec
add
pop
movsl
aad
loopne
inc
sti
lcall
adc
inc
sbb
adc
cmpsb
add
sub
shlb
dec
adc
pushf
push
or
push
sub
pop
pop
add
roll
loop
xchg
add
add
mov
out
xchg
or
das
or
jo
cltd
push
xchg
and
test
jecxz
cltd
adc
stos
xchg
lods
loop
mov
xchg
cmp
std
add
adc
and
lret
add
mov
test
movsb
inc
test
add
ds
rcll
push
pop
insl
pop
and
sub
divb
stos
popf
cmpsb
xor
rolb
jo
jle
das
pop
push
ljmp
int3
add
mov
pop
cmc
shlb
xchg
adc
dec
or
mov
roll
outsl
pop
les
repnz
pop
fs
adc
scas
imul
add
fs
dec
or
xor
add
enter
lret
or
cmc
daa
or
repz
jno
and
add
repz
aaa
lea
mov
or
shll
add
cmp
and
pusha
lahf
loopne
lock
push
inc
mov
add
push
push
jno
push
lods
dec
shrb
mov
or
inc
das
sub
adc
outsl
dec
cs
push
mov
mov
mov
mov
pop
cli
mov
loopne
stos
pop
mov
cmp
push
sbb
xor
add
test
xchg
lcall
aas
sbb
popa
mov
dec
sbb
test
movsb
arpl
pop
inc
imul
add
addl
cmp
or
es
dec
cmc
jb
dec
or
inc
notl
sarl
dec
push
add
lea
add
mov
push
xor
es
cmp
xor
adc
and
sbb
xchg
movsl
orl
inc
fstpt
sub
sbb
xor
mov
rcr
inc
stos
addr16
inc
in
out
enter
dec
test
cmp
lret
or
movsb
push
inc
test
sbb
cmc
jmp
mov
sbb
sbb
test
jae
stos
dec
jo
add
je
mov
mov
leave
pop
adc
stos
or
repnz
insl
aaa
shrb
or
sahf
push
xchg
pop
pop
sbb
or
xchg
ret
or
repz
pop
mov
dec
and
push
jns
test
sbb
mov
loopne
gs
stos
sbb
adc
sarb
pop
mov
in
aam
pop
aaa
stc
mov
dec
movsl
jecxz
cwtl
dec
call
ja
ljmp
inc
loopne
orl
mov
xchg
fwait
xchg
es
daa
loopne
adcl
add
arpl
dec
xlat
mov
adc
loopne
and
es
andl
fsts
sub
xor
mov
sub
insb
arpl
inc
popa
outsl
sub
xchg
mov
xchg
roll
mov
inc
add
mov
nop
add
xor
mov
dec
mov
fistpll
push
les
idivb
roll
or
sbb
scas
fildl
mov
lret
xchg
cmpsb
pusha
add
sbb
or
push
xor
mov
movsb
sbb
mov
imul
and
add
or
sbb
push
jo
repz
adc
insl
std
adc
pop
jnp
mov
adc
xor
pusha
aam
or
popf
fidivl
stos
add
dec
add
add
mov
insl
mov
cmp
fcmovnbe
roll
sbb
or
insb
adc
sub
mov
sub
or
add
repnz
lea
jno
outsl
sar
ret
dec
mov
cmc
and
pusha
xor
loope
push
push
sbb
pop
or
cwtl
mov
insl
sub
mov
mov
mov
dec
xchg
mov
xor
aas
add
sbbb
sbb
arpl
popa
xchg
cmpsb
cmp
inc
addl
sbb
push
mov
or
pushl
mov
aad
add
cmp
pop
ret
push
das
sbb
in
pop
pxor
stos
xlat
push
movsl
repz
adcb
les
repnz
fldl
mov
arpl
pop
rcl
fs
inc
pop
jnp
aam
xchg
adc
and
xor
movsb
dec
add
lock
push
imul
stc
js
loopne
daa
cmp
imul
push
inc
push
imul
xchg
addb
adc
adcb
jo
and
push
dec
cmp
mov
mov
sub
sub
fstps
sub
pusha
and
out
ret
jno
rorl
sub
sbbl
gs
adc
test
call
adc
enter
push
xor
loop
ja
bound
loope
and
xchg
aaa
sub
adc
lods
shll
es
test
adc
mov
inc
mov
jmp
adc
adc
leave
or
and
mov
sbb
test
xchg
sub
or
add
mov
lret
adc
push
lods
movsb
mov
adc
out
flds
stos
mov
ret
mov
mov
repnz
xor
and
mov
ss
or
mov
pop
mov
les
pop
movb
sub
outsb
or
mov
test
mov
je
lea
lea
xchg
wbinvd
lods
or
lea
push
bound
xor
ss
outsl
mov
jns
dec
xor
ja
adc
cmp
andl
adc
mov
addr16
mov
mov
test
cltd
xchg
std
xchg
sbb
or
add
lock
scas
mov
mov
bound
cmpxchg
popa
and
dec
dec
flds
inc
enter
fstpt
imul
popa
bound
dec
movsl
inc
and
adc
push
inc
push
cmp
out
or
inc
test
adc
xor
adcl
xorl
stos
sbb
pop
pop
jno
pushf
and
test
inc
dec
lcall
scas
add
or
add
add
adc
mov
shlb
daa
or
call
or
jb
inc
outsl
movsl
mov
inc
sbb
pop
adc
or
push
arpl
add
and
test
mov
mov
pop
lods
sub
loopne
scas
test
mov
sub
dec
cmpl
xor
insb
add
cwtl
mov
xchg
addb
mov
shll
mov
pop
mov
inc
add
in
xchg
pop
adc
add
jb
or
adcl
sbb
mov
sub
dec
or
cmp
sbb
and
dec
pop
or
sbb
orl
cmp
inc
or
or
add
dec
rolb
ret
xor
xchg
xchg
mov
push
xchg
test
int3
xchg
sub
mov
clc
sub
or
aad
push
jns
and
push
test
add
inc
push
mov
mov
pop
outsb
and
fnstenv
iret
pop
inc
les
das
dec
aad
out
les
fadd
leave
cmp
test
jne
pop
mov
sbb
inc
sbb
and
rcll
je
popf
and
dec
xchg
mov
cmp
mov
das
pop
mov
repnz
lret
hlt
mov
in
and
or
cmp
and
sub
fnsave
or
mov
push
cmp
dec
rorl
sub
pop
pusha
jae
adcl
pop
popa
gs
ror
enter
jb
in
lds
pop
gs
add
push
mov
or
je
pop
sub
out
push
add
cli
insl
add
sbb
or
push
lea
xchg
add
xor
sub
andb
mov
lret
cli
cmp
insb
jns
adc
cs
or
xor
dec
xor
mov
ret
cmpl
pop
aas
sbb
dec
mov
sbb
and
imul
roll
cmp
filds
sbbl
rcll
stos
ret
mov
jne
mov
sub
and
push
add
pusha
pop
or
test
shlb
push
lods
enter
imul
adc
xlat
mov
or
xchg
push
push
andl
mov
arpl
and
test
ror
inc
aam
mov
sbb
sbb
push
dec
push
add
sub
test
push
fdivrs
pusha
add
sbb
pop
xchg
mov
pop
imul
int3
frstor
adcl
nop
movsl
sbb
jns
mov
or
mov
push
loope
jns
inc
mov
and
insl
sbb
adc
push
xor
test
pop
and
xchg
adcl
sub
daa
fxch
jmp
cmp
jg
addr16
adc
test
xor
xor
adc
mov
test
cmc
adc
movsb
adc
add
add
adc
cmp
pop
testb
add
add
mov
jmp
adc
inc
scas
stos
or
je
jno
adc
aaa
inc
seto
inc
fcoml
frstor
xchg
out
je
ret
lret
mov
mov
cwtl
push
andb
or
sarb
push
adc
xchg
mov
push
jne
xchg
xor
and
adc
xchg
insl
xor
cmpb
mov
lds
adc
sub
mov
and
shll
xchg
mov
inc
stc
sbbl
dec
stos
inc
and
push
inc
daa
jne
xchg
dec
mov
mov
adc
enter
lock
jns
xchg
jo
dec
loop
je
add
fs
cmpsl
aam
dec
add
bound
popf
out
inc
dec
push
sbb
push
xchg
xchg
or
jne
incl
or
xchg
mov
mov
mov
jns
mov
int3
sbbb
push
andl
gs
xchg
and
adc
stc
pop
inc
or
and
dec
sbb
xchg
add
jns
or
mov
xlat
jge
mov
clc
stos
call
and
xchg
ss
sub
scas
jg
adc
test
mov
bound
imul
mov
imul
or
movb
je
push
std
pop
popa
pop
push
sbb
dec
mov
inc
cmp
iret
cld
pop
int
jno
sub
push
xchg
sub
xor
sub
nop
pop
dec
adcl
jge
pushf
xchg
adc
and
and
sti
daa
push
push
dec
movsl
add
movsb
mov
jne
cmp
addb
fwait
add
movsb
push
xchg
pop
in
mov
rcrl
pop
adc
xor
inc
cmp
out
sbb
xchg
scas
out
push
mov
addr16
stos
push
aam
push
mov
sub
imul
mov
mov
push
test
mov
out
pop
adc
lods
nop
or
inc
inc
xchg
movsb
arpl
and
stos
adc
or
test
sbbb
add
xchg
or
movsl
add
cmp
les
and
or
mov
mov
or
jno
push
sahf
inc
sub
imul
mov
sub
xchg
xor
orb
pop
jp
fsubrl
cmc
aad
xor
lods
pusha
xchg
andb
loop
or
mov
mov
pop
xor
cld
add
mov
cmp
lcall
or
xor
insb
subl
xchg
or
bound
push
jl
fldcw
jb
add
imul
push
dec
pop
movsb
cwtl
and
jge
sbb
xor
repnz
arpl
mull
roll
and
fnstenv
nop
sbbb
nop
std
shrl
cmp
mov
rorb
inc
xchg
aaa
leave
mov
cmp
xor
loopne
push
push
pop
mov
sbb
mov
sbb
push
inc
in
mov
adc
std
sbb
mov
mov
iret
add
xchg
add
sbb
fbld
sub
pop
pop
test
and
aam
adc
dec
push
movsb
cmp
fisubrs
hlt
push
fisttpl
in
jbe
sahf
or
stos
rcrl
sub
pop
xchg
aas
inc
dec
xor
xor
test
sub
dec
cmp
test
mov
test
push
jo
ret
in
push
mov
rcll
sahf
sub
and
mov
or
inc
pop
pop
jno
iret
stc
xor
jns
mov
mov
adc
orl
pop
and
aaa
jne
sub
mov
pop
and
addl
pop
inc
adc
loop
out
xchg
dec
and
add
es
popa
xchg
add
xor
and
dec
das
cmp
and
bound
popf
dec
sbb
rolb
sbbl
jae
xor
imul
sub
jns
hlt
adc
jo
mov
loop
ret
pop
and
xchg
js
iret
adc
xchg
jo
das
fidivrl
shr
or
xor
mov
xchg
dec
fdivrs
jge
adc
jno
insb
and
aaa
and
sub
out
push
sub
push
pop
dec
or
test
add
mov
call
pop
push
adc
or
arpl
sub
lahf
dec
pop
dec
cmp
aam
and
adc
or
xorl
leave
inc
arpl
bound
or
mov
lcall
sub
xchg
sbb
adc
mov
cs
adc
gs
mov
mov
push
jno
popa
adc
mov
frstor
xor
or
test
les
rclb
nop
test
fwait
jle
enter
cltd
adc
ds
add
rorl
xchg
stos
subl
inc
push
jno
adc
adc
and
xor
adc
in
add
rolb
inc
das
loopne
pop
push
mov
ja
jmp
in
mov
pop
testl
sbb
out
and
lahf
aad
nop
cld
fs
adc
jmp
add
es
shll
loope
xor
mov
adcb
sub
add
pop
pop
in
inc
or
pop
sarl
adc
pop
arpl
xchg
push
push
aad
sbb
xor
test
fldl
rcl
popa
inc
int3
enter
add
add
xchg
pusha
mov
and
lods
xor
sbb
nop
mov
inc
test
sbb
add
stos
cmpsb
inc
fbstp
test
add
test
and
orb
mov
push
and
inc
and
or
add
adc
insb
loopne
ret
xlat
pop
or
sub
xchg
add
push
jecxz
jle
adc
shr
adc
sbb
cmp
les
mov
add
ret
shl
ss
jne,pn
pop
xchg
aas
or
push
mov
imul
xchg
mov
adcl
daa
scas
adc
inc
lcall
adcb
mov
dec
xchg
adcb
dec
add
ss
xor
push
or
lea
leave
cmp
cmpsb
mov
mov
imul
xchg
inc
rorb
mov
dec
or
xor
and
and
mov
mov
add
adc
mov
ja
inc
xchg
gs
jl
insl
and
mov
or
add
sar
sbb
fwait
or
dec
popa
adc
bound
mov
push
aam
ljmp
testb
adc
dec
and
dec
out
frstor
xchg
push
sbb
add
popa
dec
dec
sbb
dec
and
rcrb
sub
add
mov
mov
push
sub
mov
add
rorl
cmc
loop
inc
dec
enter
and
movsb
cmpl
sub
cwtl
int3
sub
xchg
fistl
and
mov
aam
cmp
movsb
mov
jo
inc
mov
arpl
movsb
dec
add
sub
xchg
xor
adc
and
test
or
pop
data16
cmpsb
mov
adcb
repnz
mov
int
test
xchg
es
mov
rorl
lock
push
mov
inc
xor
mov
xchg
mov
or
adc
gs
or
ljmp
adcb
adcb
mov
lock
mov
leave
sbb
pop
adc
xchg
pop
add
insb
adcl
mov
ds
cli
push
add
add
cmpsb
aas
xchg
bound
and
mov
bound
jne
addr16
or
or
rcr
je
dec
sbb
push
push
cmpb
lcall
insl
popf
cmp
mov
lcall
movb
and
adc
stc
add
adc
outsb
dec
dec
imul
addr16
mov
jo
in
rolb
inc
dec
and
xor
insb
sub
mov
fisttpl
popf
or
mov
cmp
xor
jmp
lcall
mov
inc
push
mov
in
cli
dec
mov
aam
add
adc
pusha
pop
push
dec
bound
or
mov
adc
lods
lea
mov
or
dec
or
mov
or
or
xchg
rorb
inc
ss
mov
fisttpll
dec
mov
xchg
or
push
cmp
repnz
imul
mov
or
cmp
mov
xorb
add
and
dec
and
fimull
sbb
inc
add
imul
xchg
addb
xchg
movhps
pop
push
jg
inc
addb
fistpll
scas
jo
and
out
lods
xchg
sub
cld
push
pop
push
jns
dec
mov
gs
and
lds
andb
mov
pop
imul
sub
cltd
add
add
lods
xchg
sbb
bound
mov
sub
pop
sub
or
mov
jno
inc
cmp
push
push
pop
repnz
sahf
pop
adc
jno
sbb
adc
and
or
arpl
rcrl
add
dec
sbb
adc
fwait
push
adc
scas
inc
sub
movsb
loope
and
lahf
push
push
add
aam
xlat
adc
xor
adc
and
shll
es
adcl
xchg
cmp
inc
data16
cmp
or
lcall
add
push
jae
mov
inc
pop
cltd
movl
and
negl
mov
test
xor
out
andl
jae
add
nop
std
pop
addb
fcoms
lods
dec
arpl
pop
or
or
fadds
adc
repz
or
fcoms
dec
jns
push
movsl
pusha
inc
mov
test
inc
cltd
movsl
fnsave
mov
test
xlat
sub
mov
test
add
sahf
ret
int3
adc
imul
push
and
mov
cmpsb
push
orl
dec
jno
sarb
push
popa
loop
jne
rolb
sub
inc
pop
xor
incl
push
and
shll
inc
xchg
xchg
mov
add
rorb
adc
add
js
insb
pop
xor
mov
add
loop
dec
add
aam
xchg
scas
and
mov
imul
add
pop
arpl
sbb
inc
dec
lods
mov
ds
ss
or
mov
adc
mov
out
jbe
cmp
adc
push
aad
movsl
adc
inc
inc
xor
or
outsl
adc
xor
sbb
mov
and
mov
dec
dec
daa
sub
test
add
and
mov
shl
sahf
mov
pusha
and
pop
jo
in
daa
xor
jo
and
in
fs
mov
roll
dec
sbb
rolb
or
arpl
pop
inc
mov
mov
adc
icebp
sarl
push
sbb
daa
dec
bound
int3
mov
rclb
and
xchg
inc
lods
xchg
dec
push
adc
push
hlt
lahf
lcall
cmpsb
dec
add
gs
sbb
xchg
leave
mov
aaa
stc
mov
in
imul
adc
adc
mov
rcrb
andb
mov
sbb
mov
sbb
imul
sbb
push
push
mov
cmp
inc
pop
fwait
pop
push
or
adc
xor
and
xor
es
orl
jae
repz
inc
test
jo
or
lods
into
ret
mov
sbb
sti
xchg
nop
fsubrl
xchg
mov
addb
loope
gs
dec
xchg
sub
stos
repz
sbb
xchg
hlt
pop
xchg
mov
sub
add
adc
or
cmp
les
pop
and
or
test
xchg
imul
mov
sub
hlt
movb
mov
mov
push
test
xchg
mov
sub
xchg
push
stos
sbb
or
mov
pop
in
adc
jnp
add
adc
sub
xor
add
mov
adc
rol
test
push
aas
adc
or
cmc
xchg
inc
jmp
sub
loope
movsb
and
adc
xchg
pop
and
mov
lret
aam
add
test
push
or
pop
daa
mov
or
add
dec
add
fidivrl
fnop
sbbl
push
out
nop
test
rorb
pop
pop
scas
inc
push
ret
mov
loope
rclb
sub
jge
add
or
test
roll
add
sbb
adcb
sub
pushf
xlat
cmp
imul
sbbl
sub
stos
inc
inc
stos
outsb
add
test
mov
push
adc
mov
adc
adc
shll
and
sahf
xor
add
inc
mov
inc
push
pop
push
or
sub
push
mov
sbb
inc
mov
dec
pop
rclb
inc
adc
lock
adc
and
mov
jmp
xor
cmp
inc
js
push
adc
cmp
lea
aam
push
jno
sbb
add
or
call
test
adc
xor
cmp
adc
inc
adc
das
nop
xorb
adcb
xchg
int
inc
loop
inc
dec
aas
adc
fwait
jno
das
or
mov
inc
pop
mov
jecxz
in
fsubl
pop
and
insl
add
std
and
sbb
out
xchg
in
add
add
push
mov
js
dec
jo
rcl
push
rorb
int
jmp
push
mov
xchg
popa
inc
mov
add
dec
adc
adc
inc
or
mov
mov
add
lret
sbb
mov
xlat
cmp
in
cwtl
sub
sub
or
subl
sbb
add
xchg
rorl
sbb
rorl
test
in
add
mov
mov
push
jb
dec
dec
add
ja
pop
dec
movsb
dec
jp
in
jae
test
int3
add
btsl
movsb
add
mov
and
leave
xchg
xchg
xchg
or
push
push
pop
add
rcll
cli
icebp
insb
jecxz
in
or
outsl
test
xor
sbb
and
adc
rorl
jg
cmp
movsb
jno
je
dec
jg
add
shl
stos
add
jno
xchg
jecxz
xor
sbb
fs
pop
adc
test
sbb
lds
dec
pop
add
jne
loope
idivl
movsb
movsl
adc
and
adc
add
xlat
push
mov
pushf
add
aaa
in
cmp
divb
sbb
cmp
inc
test
sub
cmp
mov
xchg
push
outsl
arpl
ss
sbb
orl
push
daa
imul
pusha
add
jns
fidivrl
mov
mov
adc
leave
xor
sub
lock
mov
mov
adc
imul
aad
loopne
and
gs
dec
dec
sub
push
or
and
stos
out
pop
cmp
imul
lahf
stos
je
ret
sbb
xchg
push
pop
in
or
lea
or
inc
adc
daa
idivl
mov
mov
xchg
push
mov
loopne
mov
aas
flds
xor
popf
mov
add
jns
xchg
mov
mov
rol
push
pushf
xchg
mov
lret
mov
inc
and
je
pop
push
adc
mov
addb
mov
xor
test
pop
rolb
cli
test
or
mov
adc
xchg
test
cmp
stos
adc
adc
rcll
pop
dec
rclb
bound
xor
or
push
cmp
or
mov
push
enter
sub
sub
cmpsb
inc
xchg
jo
daa
xchg
and
mov
loop
sbbl
xchg
mov
and
adc
pop
mov
xchg
mov
xor
fwait
xor
pop
out
pop
sub
imul
xor
aaa
pop
gs
adc
add
mov
add
add
lds
pop
popf
mov
push
and
cmp
mov
mov
xor
add
enter
xor
lret
nop
sbb
and
jp
repnz
cmp
sbb
or
test
and
es
or
add
push
sti
dec
popf
movsb
lea
and
inc
jo
lea
stos
jecxz
or
adc
mov
and
cmp
jno
inc
popf
push
xor
add
adc
add
add
pop
rorb
sub
cmpsb
sub
movsl
xor
add
push
out
push
sbb
inc
dec
fidivl
bound
movl
and
push
or
xorl
add
lds
or
es
add
dec
imul
mov
xor
sti
add
xchg
and
adc
enter
xor
xchg
pop
push
mov
push
add
inc
rclb
popl
xor
cli
push
mov
ja
mov
in
dec
sub
pusha
sbb
stos
dec
xchg
es
push
push
bound
xor
cli
push
or
mov
repnz
push
mov
mov
xchg
mov
xor
dec
popf
xor
sub
pop
push
pop
or
jbe
rolb
sbb
and
sbb
sbb
repz
roll
or
gs
pop
rcrb
shl
sbb
add
test
imul
xor
pop
xor
or
xor
mov
loop
inc
int3
sub
movsb
add
repnz
mov
or
add
fcomi
or
inc
mov
xor
push
mov
movzwl
test
xchg
sub
add
cmp
adc
ret
sbb
imul
das
popa
ret
test
jnp
sbbl
inc
mov
mov
or
cmc
pop
xor
subl
int
pop
int
in
pushf
mov
in
sub
jne
push
popa
int
jo
cmp
enter
rolb
mov
mov
xchg
and
or
push
inc
adc
add
jnp
adc
xchg
mov
popa
test
imul
leave
xchg
inc
xchg
loope
scas
insb
pop
adc
adc
rol
sub
fdivl
push
mov
movl
pop
enter
jecxz
or
mov
xchg
mov
jo
jmp
imul
push
sub
cmpsb
jecxz
shrl
pop
daa
aas
push
push
shlb
negl
int3
sub
pushf
or
gs
mov
ljmp
in
push
add
add
in
std
lcall
sbb
cmp
movsb
and
adc
inc
sbb
out
push
mov
insl
hlt
and
pop
xchg
and
sbb
imul
out
or
adc
cmp
repz
inc
cwtl
ret
xor
fisttpl
out
loope
lret
les
sbb
pop
daa
push
add
rcl
stos
test
lea
nop
sub
nop
push
dec
sbb
pop
pop
mov
mov
lret
js
call
add
jns
inc
lds
cmp
pop
push
dec
sbb
or
mov
jecxz
imul
cmc
orb
push
mov
and
cmc
add
lock
inc
push
mov
int3
jmp
sbb
push
and
sbb
mov
ljmp
dec
dec
push
pop
stc
shrb
or
out
jmp
inc
adc
movsl
or
loope
add
cs
xor
ss
mov
mov
add
das
jg
dec
cltd
shlb
insb
rorb
sbb
pop
inc
xor
lea
mov
xor
call
aam
adc
sbb
adc
imul
jecxz
push
pop
js
xchg
inc
enter
push
xor
jg
pop
add
add
sbb
jo
or
push
add
or
and
fbld
add
push
sub
xor
rcr
shr
jp
add
into
inc
push
pop
je
mov
sbbb
sbb
dec
std
mov
jg
test
push
cmp
add
and
ljmp
dec
sbb
mov
shrl
sub
orb
inc
jmp
insl
pop
adc
xor
sub
inc
test
mov
mov
xchg
xor
movsb
test
adc
jmp
adcl
or
or
stc
sbb
sbb
sub
jecxz
test
movsl
jo
or
mov
adc
iret
and
jmp
add
stos
adc
xor
pop
dec
incb
inc
aaa
xor
and
sub
fadds
shrl
or
add
or
inc
inc
outsl
fcmovbe
add
dec
movsb
mov
mov
mov
lea
sti
xor
inc
jle
xchg
or
push
dec
sbb
xchg
movsb
sub
dec
jns
pop
push
aaa
movsl
stos
cmp
dec
xor
sub
cmp
and
lods
push
enter
inc
rclb
push
or
ljmp
dec
or
jo
push
jle
ja
dec
adc
in
adc
pop
rclb
or
sub
jmp
adc
mov
popa
ljmp
mov
mov
cltd
addr16
adc
sub
pop
sub
xchg
and
push
les
rep
daa
or
sbb
mov
push
pushf
pop
dec
or
addl
inc
lods
inc
fmull
dec
leave
pop
push
fs
js
std
xchg
dec
pop
popa
adc
xor
lods
int3
add
push
xor
divl
mov
mov
adc
and
or
arpl
sahf
int
sbbl
cwtl
mov
sbbl
sub
ja
xor
push
dec
xor
and
ret
pusha
pop
lock
push
and
and
mov
cmc
sub
or
adc
xchg
or
cmp
ss
shrb
mov
stc
push
jg
push
imul
jb
jmp
ja
mov
ret
movsl
dec
decb
sub
push
dec
in
fcomp
jbe
add
inc
xor
adc
addb
and
repnz
and
mov
pop
sbb
cmpl
sbb
mov
push
push
or
loop
movsb
arpl
out
shll
adc
sar
nop
mov
andl
dec
fadds
cmp
test
pop
xor
xchg
mov
add
mov
pusha
ljmp
ret
aam
ret
mov
cmp
adc
aad
sbbb
xchg
xchg
xlat
xor
sbb
sub
jo
lods
fcmovnbe
inc
int3
arpl
sbb
xchg
xorb
push
sbbl
cmp
pop
adc
imul
push
fcmovnbe
add
push
dec
and
andl
mov
inc
orb
test
jnp
mov
je
in
mov
add
mov
pop
sub
test
jo
xor
jg
enter
daa
jne
mov
cmp
scas
or
addb
sbb
loop
mov
mov
jns
aad
mov
mov
xor
push
pop
cmp
cs
movsl
cmp
mov
sti
mov
fmull
cmp
sbb
push
cmpsb
sbb
xchg
jno
adc
nop
int
adc
fld
inc
add
add
add
and
test
sbb
loop
repz
mov
cmpsb
test
movsb
fwait
jae
push
mov
push
ret
mov
add
push
in
mov
xor
xor
lods
add
stos
push
pop
add
inc
mov
arpl
push
rcl
nop
nop
lahf
std
rorl
stos
pop
mov
push
mov
cmp
or
pop
pop
lahf
fisttpll
mov
xor
inc
je
add
jg
push
mov
out
cmpsl
loop
mov
mov
adc
es
jns
repnz
dec
or
movsl
pop
push
push
popa
pop
pop
mov
popa
mov
adc
movsl
or
adc
lcall
xchg
orb
inc
xchg
pop
push
cmp
mov
add
test
cmpsl
cmp
adc
sub
add
or
mov
add
xchg
push
leave
add
ret
pop
std
int
jl
add
xor
xor
jecxz
adc
cli
adc
inc
or
enter
aam
test
aaa
fs
or
sbb
into
xchg
es
mov
inc
push
xorb
enter
push
cmp
add
cmp
stos
push
xorb
xor
dec
mov
scas
add
or
out
push
xchg
sbb
sbb
cmc
imul
orl
dec
add
or
add
adcl
add
iret
cmp
or
mov
push
popa
push
xor
mov
xor
pusha
add
mov
xchg
dec
in
rcrl
inc
arpl
out
test
xor
loope
inc
sbb
adc
imul
aas
push
and
lret
dec
loope
adc
cs
and
xor
push
lea
mov
loopne
sbb
roll
movb
pop
inc
mov
xlat
push
sub
inc
and
inc
aam
mov
add
imul
xor
and
add
xor
and
scas
sub
sbb
lea
dec
xchg
mov
scas
inc
gs
je
std
cmc
dec
xor
or
dec
subl
inc
daa
add
test
nop
into
pop
add
add
cld
and
sub
aam
shrl
dec
shrb
out
sub
pop
adc
mov
jnp
jecxz
sub
pop
in
lods
adc
xchg
shrb
mov
adc
stos
inc
inc
add
scas
fsts
mov
push
js
mov
addl
mov
mov
dec
sarb
xchg
mov
dec
and
xchg
test
jo
test
pop
cmpsl
std
repnz
movsb
cmp
jbe
sbb
dec
popa
bound
dec
rcl
or
inc
call
or
cmc
dec
inc
xor
addr16
out
test
cwtl
test
pop
lea
adc
adc
sub
aas
das
jmp
add
test
pushf
repz
movsb
add
sub
mov
inc
test
add
out
add
jp
cmp
bound
adc
mov
into
mov
orl
xchg
adc
pop
adc
sbb
adc
push
xchg
adcb
stos
pop
dec
adc
add
push
test
inc
inc
pop
jbe
xchg
mov
and
sbb
cmpl
cmp
adc
push
rorb
pop
adc
mov
adc
fidivrl
or
stos
int3
add
add
in
xor
sbb
cmp
and
inc
ja
test
insb
jae
ljmp
mov
push
clc
xchg
insb
or
pop
sbbb
and
xor
or
cld
push
je
add
xchg
iret
pop
dec
test
cs
aad
rol
inc
xchg
arpl
repz
popf
add
add
movsb
mov
or
mov
jno
xlat
test
push
add
pusha
mov
stos
cmp
imul
mov
cmp
pop
arpl
adc
es
or
sub
test
pop
dec
fistpll
gs
add
inc
and
xchg
xor
adc
loopne
movsb
shrl
mov
push
pop
mov
jmp
dec
or
inc
pop
rorl
dec
xchg
es
jmp
loope
xchg
fsubl
mov
add
movsl
jecxz
and
adc
push
cwtl
add
sbb
add
cli
and
stc
subb
imul
stc
movsb
movsb
test
ret
adc
jne
rolb
or
shrl
mov
push
sbb
in
int
imul
adc
fsubs
in
mov
nop
sbb
mov
mov
xchg
mov
mov
sbb
jne
mov
js
add
and
adc
pop
add
cmp
mov
mov
rcl
int3
daa
decb
out
les
jmp
xchg
adc
out
orl
push
xor
subl
sbb
sub
dec
push
mov
dec
mov
mov
push
sub
loope
xchg
pop
or
cmp
dec
shrb
daa
fsts
add
adc
bound
add
jmp
xor
mov
cwtl
lret
jnp
sti
scas
xor
bound
aad
imull
test
jge
push
or
call
movsb
dec
sbb
lds
jb
fldenv
mov
push
mov
rolb
and
dec
fwait
inc
mov
xchg
in
xlat
les
xor
pop
jmp
imul
fwait
mov
mov
je
dec
cmp
xor
or
or
and
or
pop
inc
inc
or
lods
stos
lahf
dec
add
ljmp
mov
flds
leave
xchg
or
add
stc
mov
xorl
add
adc
leave
mov
add
xor
les
pop
lahf
cltd
pushf
push
pop
adc
jns
push
mov
lcall
sub
sub
mov
sbb
aaa
push
aam
sub
jne
inc
dec
test
sub
push
sub
adc
mov
cld
mov
call
ljmp
or
adc
xor
aaa
sbb
sbb
mov
movsb
add
mov
inc
add
and
inc
outsb
mov
add
inc
fs
pop
test
mov
aam
add
lcall
fcompl
xor
dec
pop
and
scas
fmull
test
movsl
dec
pop
xor
test
and
dec
jecxz
enter
push
push
lods
movsb
repnz
cmc
fstpl
dec
andl
repz
ljmp
pop
ljmp
leave
pop
inc
dec
ljmp
mov
gs
je
mov
stos
sbb
test
movsl
js
xor
lods
in
mov
xchg
outsl
add
pusha
test
adc
xor
out
lods
inc
rorl
pop
jo
adc
mov
enter
outsl
push
push
and
std
xor
cwtl
adc
ljmp
out
and
dec
or
push
cmpsl
dec
cmpsb
jno
add
pop
cwtl
mov
enter
lods
or
in
jecxz
push
inc
add
mov
addb
cmp
push
push
and
or
jecxz
jecxz
inc
adc
dec
and
or
and
mov
lcall
sbb
les
pop
cmpsl
sbb
ret
sbb
ffree
shl
rcll
in
pop
rolb
jns
jbe
sbbl
ficomps
xchg
pop
je
test
mov
sbb
sahf
jmp
xchg
or
inc
or
out
test
xor
inc
mov
mov
xchg
and
add
test
nop
test
xorb
scas
arpl
or
jne
mov
xchg
lret
or
mov
mov
and
mov
or
movsb
fidivl
popa
sbb
add
sub
stos
push
mov
xchg
mov
or
call
mov
push
sti
mov
push
nop
mov
xor
push
mov
push
push
xor
dec
lret
mov
pop
mov
inc
add
insb
bound
xor
mov
inc
or
cmp
xor
add
jl
xchg
xchg
mov
mov
add
push
lret
dec
rclb
xor
mov
mov
adc
push
and
cltd
es
lret
lret
pop
xor
xchg
mov
add
sbb
push
inc
mov
sbb
sub
popl
les
lock
or
pop
and
adc
push
icebp
dec
mov
add
test
add
in
cmp
movl
lea
push
mov
mov
bound
dec
aad
scas
mov
and
mov
movsb
mov
dec
sub
adc
cmc
mov
ja
dec
inc
sbb
sbb
mov
pop
and
pop
add
mov
add
leave
subb
hlt
popf
test
out
pop
add
cmp
movsb
fldenv
movsl
sbb
subb
popa
sbb
inc
xor
mov
ja
es
in
xor
and
add
push
cmp
pop
or
call
lret
adc
sub
daa
xchg
inc
mov
imul
adcl
and
lods
push
enter
inc
gs
xor
mov
adc
stos
push
mov
xor
sbb
lods
add
outsl
inc
push
rolb
lods
mov
and
push
jne
or
or
bound
xor
sbb
addl
adc
inc
cli
dec
hlt
aam
sub
test
add
push
and
pop
push
aad
or
push
mov
cmp
push
lds
sbb
subl
rolb
mov
test
mov
sbb
jns
repz
sarb
aas
bound
push
and
shll
push
add
xor
xchg
sub
mov
and
out
dec
jns
outsb
stc
push
sub
bound
movsl
mov
or
xchg
iret
test
push
mov
mov
push
and
and
mov
add
push
stos
dec
ret
daa
push
popa
or
and
rcl
imul
inc
and
or
lret
dec
cmp
push
jne
sbb
adcb
std
xor
cs
idiv
push
mov
or
mov
and
cmpsb
jmp
shlb
mov
push
push
mov
push
jno
lods
dec
mov
daa
mov
call
loope
inc
adcl
test
rol
andl
lea
aaa
mov
add
aam
rclb
mov
cmpsl
inc
les
inc
sbb
xchg
jo
cmp
adc
stos
xchg
imul
js
mov
dec
pop
push
xor
and
out
test
push
lods
adc
mov
rorb
and
bound
out
xor
dec
mov
adc
aad
aaa
inc
and
mov
add
xchg
push
nop
rorb
sti
push
xor
xorb
sub
inc
sarb
dec
test
xchg
jmp
mov
mov
push
mov
mov
xchg
and
jmp
mov
push
pop
or
add
jbe
pop
inc
and
and
test
sarl
push
add
mov
mov
inc
xchg
stc
xor
rclb
xchg
lahf
sbbb
push
es
xorl
add
inc
outsl
test
nop
push
sahf
mov
sbb
arpl
test
mov
rcrl
inc
push
dec
xchg
imul
sbb
adc
mov
mov
xchg
movsb
push
out
and
mov
in
sbb
shlb
les
jg
jno
hlt
in
add
jb
adc
inc
loop
movsb
nop
adc
and
push
aaa
and
pop
mov
or
mov
xlat
in
mov
push
scas
bound
add
sub
imul
test
add
jno
inc
ret
fstpt
loop
imul
inc
repnz
pusha
mov
xchg
jg
xchg
lea
or
adc
sub
dec
cmp
push
icebp
xor
movsb
inc
or
push
push
xor
pop
lods
loopne
lock
cmp
xchg
dec
sahf
mov
stc
leave
pop
jmp
or
mov
cmp
inc
add
sub
cltd
push
and
mov
mov
cmp
cld
inc
into
or
push
lea
adc
jmp
or
push
sbb
and
xor
cmpsb
xor
dec
add
les
loopne
ret
adc
lods
adcl
xor
xchg
cmpsb
mov
fists
adc
shl
ss
xor
cmp
nop
addr16
mov
cmp
or
or
push
or
jmp
cmp
add
xchg
mov
sbb
sub
sub
test
in
inc
xor
mov
cmp
dec
clc
pop
fldl
sbb
gs
mov
out
xchg
sbb
or
mov
mov
xchg
mov
add
jno
imul
cmp
inc
xlat
dec
or
lods
add
mov
push
mov
mov
je
nop
dec
fstps
mov
and
idivl
dec
daa
push
popa
jmp
or
adc
or
sub
adc
and
leave
shrl
cmp
dec
mov
and
push
and
sbb
mov
xorb
adc
imul
jmp
movsb
xor
shrb
cwtl
mov
sub
mov
ret
in
sbb
adc
cmp
sub
add
xor
push
add
sbb
stos
ja
mov
mov
push
push
rolb
mov
movsb
xchg
adc
or
out
sbb
lret
sbb
inc
movsl
out
mov
nop
es
or
inc
mov
or
sbb
fnstenv
pop
add
push
in
or
jecxz
and
sbbl
test
push
mov
add
and
and
adc
pop
stc
push
mov
push
xor
aam
popf
adc
add
jne
int
mov
xchg
leave
add
mov
cmp
ja
je
lods
fstpl
add
mov
pop
or
pop
mov
adc
clc
jecxz
push
push
loop
cmp
and
dec
add
lea
mov
inc
sub
inc
dec
push
insb
inc
ljmp
cmpsb
hlt
and
movl
lods
or
sbb
add
push
fsts
mov
cmp
dec
pop
and
cmp
xor
fwait
ss
mov
lds
xor
cmp
xchg
outsb
mov
out
popf
movsl
fnstenv
stos
dec
lds
insl
push
movsb
push
addl
pushf
xchg
cmp
pop
cwtl
sub
or
je
xchg
lret
mov
mov
push
pop
mov
jp
jo
inc
movsb
pop
sbb
orl
andl
sbbb
xchg
addl
cmp
pop
scas
movsb
orl
inc
or
adc
popf
push
ret
push
nop
je
shll
out
inc
sub
or
cmpsl
add
sbb
stc
sbb
mov
pop
inc
addb
add
out
adc
test
jne
pop
inc
lods
cltd
dec
sarb
sub
or
pop
mov
rclb
sub
mov
add
inc
add
sub
imul
popf
xor
lcall
and
mov
add
int
popf
push
or
jae
mov
dec
jb
scas
and
stos
xor
inc
ret
xor
sub
mov
add
sub
mov
jnp
add
add
cmp
scas
pop
sbb
pop
ret
pusha
sub
and
jge
cmp
xchg
ret
adc
cmpsl
jo
xchg
sbb
arpl
mov
nop
add
cmp
inc
xor
outsl
repnz
adc
dec
cmpsl
cmpsb
cld
mov
imul
mov
add
and
xor
or
mov
mov
int3
xchg
jnp
les
cmovle
and
rcrl
add
adc
inc
or
or
xor
faddl
push
add
and
shlb
setle
xchg
je
enter
orb
loope
mov
jne
sbb
es
cmp
xor
int
push
enter
jns
dec
inc
inc
inc
sub
mov
push
push
push
daa
pop
xor
repnz
les
jo
loopne
je
sub
je
cmpsl
popa
aaa
sbb
sub
jno
pop
cmp
dec
xchg
or
sbb
inc
add
and
sbb
sbb
mov
add
inc
dec
pop
lret
cmpsb
add
ret
add
out
fisubs
push
shll
std
add
jne
cltd
push
mov
or
xchg
xchg
cmp
jb
inc
add
adc
aam
stos
lods
les
rcrb
push
fwait
jg
and
mov
adc
inc
pop
lcall
rclb
sub
mov
and
inc
scas
leave
sbb
cmpl
ss
dec
shll
dec
in
pop
adc
addr16
inc
les
xchg
xchg
add
jns
push
es
sahf
cmpsl
ret
add
mov
mov
sub
in
imul
ljmp
inc
jecxz
andl
push
push
pop
mov
popf
or
in
push
cmp
and
push
adc
and
pop
andl
and
push
mov
pop
cmpb
or
outsl
outsw
add
xchg
adc
inc
inc
pop
nop
scas
loope
xor
or
leave
or
aaa
mov
sbb
sub
shlb
js
push
movsb
add
test
or
xchg
jo
adc
popf
lcall
pop
addl
sbbl
fldt
loope
add
inc
test
and
imul
lcallw
lods
pop
lods
xor
lret
or
mov
sub
ds
icebp
mov
cs
pop
cli
inc
dec
xchg
sahf
xchg
cmp
and
mov
add
or
subb
and
dec
cmp
movsb
orl
push
pop
or
sub
lods
jecxz
dec
addl
inc
push
xchg
xchg
or
shlb
addr16
pusha
jg
xor
fs
jp
pop
push
fadds
lds
lret
sbbb
xor
rol
dec
or
pushf
pop
adc
fisttps
or
iret
mov
or
mov
sub
in
sub
add
rcll
sub
dec
and
push
adc
ucomiss
mov
imul
jno
or
dec
pop
pop
mov
adc
lea
mov
pop
lea
out
jp
or
dec
and
mov
inc
inc
daa
xor
mov
inc
mov
daa
loopne
xchg
push
add
ljmp
or
inc
xchg
mov
mov
sbb
pop
inc
loope
adc
out
fwait
rclb
lods
and
or
push
cmp
rdmsr
je
push
aaa
rorb
and
push
insl
lcall
lea
ret
in
in
bound
sub
aad
int
pop
add
inc
cmp
dec
movsl
pusha
xor
inc
insb
add
or
cmpsb
push
jne
shlb
cmpsb
add
inc
lcall
jns
xchg
dec
outsl
xchg
add
adc
dec
sbb
imul
add
pop
mov
adc
daa
mov
bound
or
xor
inc
and
xchg
je
enter
addb
mov
dec
iret
rcrl
push
cmp
jne
xor
push
mov
call
inc
cld
add
lds
xorb
out
inc
fnstsw
push
add
out
sbb
mov
and
or
sub
mov
mov
add
add
inc
push
je
adc
cmp
sbb
mov
imul
adc
cmp
nop
mov
add
adc
or
movsb
adc
test
test
adc
mov
sbbl
scas
or
testb
xchg
lret
nop
pop
push
adc
test
mov
or
pop
inc
sbb
pusha
and
movsl
fildl
iret
stc
dec
pop
and
pop
and
sub
jo
add
rclb
push
sbb
fstpl
adcl
pop
xorb
push
mov
les
push
pop
jmp
arpl
xchg
inc
adc
test
mov
mov
push
loopne
mov
pop
inc
xchg
jmp
xchg
sbb
and
ret
and
or
mov
lahf
jge
test
inc
movsl
aas
xchg
jns
inc
fadd
and
ret
xor
movsl
or
nopl
les
xor
sub
sub
sub
dec
sahf
dec
out
mov
sub
push
test
in
pop
pop
adcl
pop
rol
pop
adc
and
movsb
lret
dec
scas
jle
ret
pop
or
and
sub
add
mov
ret
add
imul
sub
rcrb
dec
add
cwtl
jae
jle
icebp
rorl
test
fldt
add
stos
dec
es
jbe
or
mov
xchg
add
pop
mov
imul
iret
sub
data16
or
push
dec
daa
cmpsl
mov
mov
nop
inc
lea
xor
cmp
das
push
xchg
push
push
sub
sbb
mov
cmp
scas
stos
dec
inc
jge
push
adc
mov
push
testl
inc
jle
mov
or
add
inc
sbbb
jecxz
mov
xor
pushf
pop
mov
insb
cmc
rclb
rol
sub
jge
pop
xor
add
pop
pop
repz
xchg
popa
jae
les
in
jae
les
aas
dec
add
pusha
push
or
and
push
inc
xchg
push
and
fldenv
dec
or
adc
andb
ret
adc
lea
mov
aad
or
and
jbe
or
push
aaa
or
rolb
mov
loope
call
xchg
inc
and
xchg
xor
dec
cmp
fnop
adc
jge
pop
or
loope
dec
and
test
adc
add
dec
push
push
adc
sbb
aaa
pop
dec
mov
pop
push
pop
add
inc
adc
xchg
cmpsl
jb
fists
test
and
or
daa
gs
inc
dec
inc
aas
add
pop
sub
sbb
mov
repz
push
inc
and
jge
sub
test
push
andl
sbb
test
xlat
sti
mov
mov
add
cmp
sahf
ret
nop
cltd
xchg
test
cmp
pop
mov
jnp
dec
mov
dec
xor
push
xchg
or
rcl
pop
movl
xchg
cmpsb
xor
mov
sbb
adc
xchg
out
ljmp
adc
cmpsl
mov
dec
ja
lea
das
pop
jecxz
movl
rcrl
rorb
xchg
sub
sub
add
lock
out
and
push
sub
imul
sbbb
and
adcb
jcxz
add
mov
dec
jo
mov
sub
and
dec
push
inc
fisttps
scas
add
jnp
xchg
aaa
fwait
sub
push
pusha
pop
outsl
stc
mov
out
mov
push
cmp
or
dec
or
mov
mov
aas
popa
dec
lea
cmp
aam
andb
sbb
sbb
dec
lods
push
pop
mov
mov
sub
pop
mov
xchg
rclb
mov
sub
sbb
arpl
jo
inc
and
ss
das
iret
add
xchg
push
dec
shlb
int
xor
dec
frstor
je
xchg
imul
sub
and
push
daa
cmp
sub
mov
sub
push
xchg
pusha
sahf
mov
adc
js
push
call
repz
mov
push
mov
push
inc
test
inc
adc
call
mov
adc
pop
push
popa
pop
xor
cltd
mov
ret
xor
daa
sub
mov
into
push
cwtl
and
test
pop
cmp
inc
fucom
mov
stc
add
inc
or
movsb
dec
mov
push
pop
sbb
inc
sbb
adc
inc
fs
and
or
cmpsl
cmpsb
fmuls
shrl
arpl
test
std
das
ss
mov
add
pushf
imul
aam
push
cwtl
fisubrl
xor
stos
andb
mov
test
push
xchg
cmp
je
sub
jecxz
add
inc
fwait
lock
pop
add
scas
subl
fstl
jne
and
push
mov
jmp
inc
les
stc
fildl
bound
xchg
movb
mov
pop
mov
enter
or
jecxz
adc
test
test
add
jne
js
pop
pop
pushf
pop
adc
sbb
and
and
in
stc
push
add
push
sbb
mov
push
loope
jno
addb
pop
pop
push
loop
out
add
push
cmp
test
push
lahf
and
cmc
add
jmp
xchg
mov
call
mov
fs
jo
xchg
dec
dec
jne
add
in
dec
movsl
push
loop
stc
mov
inc
xchg
add
and
mov
add
loope
sbb
pushf
test
sub
jns
aam
jbe
add
insl
pop
adc
bound
pusha
or
add
inc
xor
pop
inc
repnz
scas
sub
xorb
cli
sub
jb
imul
adc
xor
dec
inc
mov
int3
xor
or
push
mov
push
cmpsl
mov
add
fnstenv
sub
ss
sub
mov
xchg
cmp
mov
sub
push
sbb
movsb
push
and
in
push
in
adc
movl
aad
in
inc
xchg
jecxz
loope
pop
addr16
std
mov
mov
test
and
aam
jne
rcll
sub
xor
je
dec
lret
outsl
xor
xchg
orb
das
sahf
in
and
xor
xchg
sarb
add
cmp
or
mov
nop
mov
xor
add
arpl
pop
push
add
sub
mov
adc
movsl
jmp
fwait
pusha
add
shrb
or
add
loope
mov
mov
adc
lret
mov
add
or
jecxz
or
adc
adc
das
fnstcw
lods
xchg
xchg
or
test
adc
mov
test
inc
imul
add
lods
dec
sub
mov
add
jecxz
lcall
mov
popa
test
jmp
sub
sbb
cmpsl
inc
mov
xor
xchg
movb
pop
cmp
mov
pop
adc
or
or
jbe
mov
sbb
aad
mov
sahf
in
ja
add
adc
cmpsb
jo
inc
inc
icebp
or
push
inc
sub
pop
in
in
js
jno
or
or
out
xor
or
sbb
cmc
scas
shlb
cmpl
or
es
sbb
dec
in
sbb
xchg
inc
cmc
inc
leave
es
inc
xchg
les
mov
aad
jne
cmc
cmpsb
mov
lcall
fbstp
lea
or
xchg
dec
enter
xor
jmp
test
xchg
lods
jle
xchg
test
jecxz
cmpsb
xor
pop
sub
xchg
mov
add
imul
jno
and
popf
lcall
mov
imul
add
push
or
jnp
rolb
xor
or
test
inc
popa
cmp
and
mov
add
or
cwtl
stos
xchg
mov
push
add
inc
rcrb
dec
aaa
add
xor
add
add
dec
leave
mov
popf
ret
cmc
sub
leave
sub
mov
loope
sub
mov
add
imulb
mov
nop
lds
push
shlb
pop
sub
movl
inc
stos
jecxz
push
dec
xor
mov
add
stos
xchg
mov
add
mov
xchg
les
adc
jns
and
jo
mov
xor
stc
push
sbb
add
in
push
pop
pop
in
mov
enter
imul
add
add
lahf
test
inc
add
aad
loop
xchg
xchg
dec
pop
and
add
rcll
subl
rolb
in
xor
xor
popa
dec
push
pop
out
mov
xorl
cmp
or
add
xor
adc
push
mov
jmp
adc
loope
mov
and
enter
inc
scas
bnd
and
inc
sbb
push
lds
dec
subl
test
test
lret
xor
adc
mov
shrl
fistl
cmpsl
mov
inc
xor
sbb
or
stc
and
pop
inc
or
inc
dec
inc
and
pop
mov
fmulp
xor
sbb
add
add
or
sbb
add
xchg
xor
and
add
iret
inc
and
sub
mov
cmp
and
push
dec
icebp
sbb
adc
push
decl
popl
add
dec
shrl
or
sbb
xor
mov
mov
sbb
outsb
sbb
and
pushf
xor
fstpt
sub
popa
adc
in
jns
adc
push
sbb
rcr
xor
fldl
roll
movsb
test
insl
xchg
cmp
adc
fwait
adc
ja
ret
scas
sub
add
nop
push
push
push
lea
mov
add
aad
dec
sahf
insb
in
inc
icebp
test
and
popa
sbb
push
and
fwait
push
fcomps
mov
add
and
adc
jns
orb
add
cmp
lods
push
enter
fisttpll
fisttpll
mov
sub
push
cmpsb
xor
sub
movsb
lods
sub
sub
andb
in
pop
mov
inc
push
cmc
or
inc
adc
mov
add
test
and
inc
push
dec
pop
aam
roll
and
movsl
push
cmp
xchg
lods
ss
stc
add
jno
xchg
lds
xchg
push
bound
and
in
cmpsl
mov
add
push
adc
aad
mov
call
push
inc
test
sbb
or
and
mov
aaa
aas
and
mov
or
mov
xchg
pop
leave
xchg
mov
aad
lcall
jno
push
scas
mov
jmp
jno
xchg
and
add
and
cwtl
addr16
pop
pop
push
mov
sbb
or
rorl
xor
imul
ret
es
jl
les
add
dec
push
mov
mov
adc
repz
stos
sahf
cmp
test
insb
inc
mov
sbb
mov
push
jge
int
mov
xor
shlb
cmpsl
add
mov
js
xchg
data16
inc
stos
cmc
mov
or
mov
xchg
adc
movsb
cmpl
and
aam
pop
xlat
xor
loop
mov
xchg
and
add
aam
or
push
xor
cmpb
iret
mov
pop
sbb
rorl
cmp
imul
add
mov
mov
inc
sub
mov
popa
fildl
pop
dec
inc
mov
mov
xor
jno
pop
test
rol
mov
movsb
mov
sub
or
mov
fwait
popf
add
push
push
sbb
lret
mov
xchg
addl
dec
outsl
adc
decl
add
adc
lea
xchg
imul
sub
pusha
jmp
loopne
adc
push
lret
lea
je
test
or
push
add
test
inc
sar
imul
or
mov
movb
sti
shlb
or
cmp
mov
pop
push
mov
xchg
nop
test
push
insb
jecxz
push
push
lods
sbb
out
cmc
or
or
mov
sbb
in
in
xchg
sub
xchg
add
mov
cmp
jo
or
push
xor
lret
dec
and
insb
test
and
subb
add
and
push
inc
push
clc
sub
adcl
mov
sbb
xor
and
adc
mov
cmpsb
add
mov
fiaddl
push
inc
sbb
inc
cmpsb
ljmp
push
mov
hlt
shrb
lods
and
jae
inc
push
inc
adc
xor
cmp
jecxz
or
repnz
cmpsb
mov
adc
or
jmp
leave
cmp
cltd
cmp
pop
adc
rolb
and
and
sbb
fsubrs
xor
lret
idivb
jnp
sub
repnz
inc
pop
mov
mov
mov
add
subb
addr16
sbb
call
nop
outsb
mov
nop
test
clc
nop
adc
popf
imul
lret
aam
add
inc
or
jno
orl
mov
pusha
dec
cmp
adc
or
push
scas
packsswb
or
addb
aas
movsb
sub
dec
add
jno
xchg
push
dec
push
sbb
dec
xor
add
aaa
xchg
icebp
xchg
pop
jo
cmp
and
pop
sub
xlat
lods
aam
or
cmp
sub
and
and
sarb
dec
inc
xchg
or
add
inc
es
xchg
outsl
test
gs
dec
adc
adcb
popa
bndldx
adcl
mov
mov
mov
adc
movsl
sub
mov
cmp
cmp
cmp
jns
and
out
push
or
test
pop
xor
rcrb
xor
repnz
jo
test
pop
jmp
push
subl
dec
lcall
cmpl
xor
mov
lods
dec
push
repnz
add
fiaddl
push
loopne
push
jnp
pop
adc
pop
mov
cmp
add
cmp
or
sub
movsl
xor
add
and
mov
dec
pop
in
ror
jecxz
mov
pop
out
mov
lea
mov
mov
test
sti
fwait
nop
dec
pop
ss
mov
cmp
sti
in
in
adc
xlat
adc
xor
xor
and
dec
xorb
movsb
test
dec
inc
inc
xor
sbb
sub
and
adcl
cwtl
mov
xchg
sar
inc
cmp
movsl
loope
imul
xor
rorl
and
cmp
push
pop
inc
add
mov
pop
roll
daa
outsl
test
pop
xchg
lock
add
add
testl
mov
inc
and
dec
repnz
and
xchg
xchg
add
add
jb
mov
outsl
add
stc
jo
movb
push
addl
sbb
mov
std
aaa
fldt
xchg
test
or
stos
add
push
mov
xlat
inc
and
or
das
jns
pop
and
inc
daa
mov
adc
iret
jmp
ret
push
push
mov
mov
dec
icebp
test
or
lea
test
xchg
adc
mov
push
or
mov
cmpsb
xor
insl
add
hlt
xchg
ljmp
adc
int
dec
xor
add
pop
icebp
pop
cwtl
add
push
adc
pusha
sbb
sahf
aam
push
mov
rorb
adc
cwtl
cmp
cmp
mov
jmp
add
test
or
jne
addl
ss
sbb
in
imul
add
sub
dec
push
les
pop
add
mov
in
lea
adc
or
push
mov
add
les
inc
sbb
push
stos
add
mov
cmp
adc
clc
sahf
orl
add
mov
test
inc
pop
adc
sarl
sti
xchg
bound
les
aaa
lods
inc
sbb
outsb
imul
mov
sub
xor
xchg
sbb
xchg
mov
es
xor
mov
orb
mov
dec
or
xchg
lea
or
add
adc
xlat
out
andb
sub
xchg
or
mov
cmp
test
sub
movsl
pop
cltd
and
sahf
add
and
add
add
push
mov
sub
push
xor
addr16
jne
cmpb
jge
push
sbb
test
dec
sbb
jle
std
ljmp
imul
lahf
lret
bound
adc
sbb
push
repnz
pop
dec
insl
mov
fldcw
adc
dec
push
sub
jo
pop
lods
subb
shrb
test
test
lds
test
xor
and
inc
pusha
pop
test
dec
adc
pusha
adc
mov
test
adc
push
mov
cltd
stc
inc
push
adc
or
lahf
or
add
movsb
cld
icebp
pop
push
cltd
add
or
dec
clc
aaa
xchg
in
xor
les
cs
test
inc
fnstenv
sbb
pop
xchg
test
push
or
adcb
adc
mov
dec
add
inc
add
cs
cmpsb
add
jae
pop
bound
lcall
adc
sbb
pop
xor
rclb
orb
mov
pusha
adc
and
add
adc
dec
push
fildl
pop
xor
push
dec
fwait
inc
push
mov
adc
xchg
imul
mov
pop
pop
jne
xor
xchg
cmpsb
lods
rorl
push
pop
scas
adc
cmpsl
je
adc
or
dec
fstl
inc
ss
cmp
dec
pop
xor
cmp
add
ret
roll
test
jg
arpl
jg
enter
ljmp
popa
dec
cmp
dec
pop
sub
cmp
call
jae
int3
adc
mov
movsb
mov
adc
lret
mov
inc
push
inc
jae
fldenv
stos
xchg
and
and
sbb
or
pop
jns
orb
and
sahf
mov
popa
sbb
or
mov
and
adc
dec
push
out
mov
out
cmp
sub
push
mov
cmp
sub
insl
sub
sub
inc
dec
inc
adc
cmp
or
stos
mov
nop
rolb
xchg
and
xor
hlt
inc
jmp
pop
test
and
mov
sub
das
adc
or
mov
nop
leave
add
mov
dec
jmp
es
aas
mov
push
test
or
add
dec
lea
sub
add
cwtl
and
mov
mov
pop
jne
sub
cmpb
sbb
xchg
mov
sub
movsl
xor
out
or
cmpl
rolb
aad
sti
fistpl
dec
sbb
push
xor
fbstp
mov
sbb
in
or
mov
add
inc
push
fwait
int
ret
popf
push
push
adc
jmp
and
or
loope
mov
test
cwtl
mov
ret
xchg
je
or
push
and
shlb
test
add
sarb
mov
or
inc
add
dec
push
xchg
mov
adc
dec
cwtl
lods
hlt
sub
cmpsb
stos
sbb
movsb
sub
dec
inc
add
jbe
lea
push
adc
or
cmc
sti
test
dec
add
test
and
cs
add
dec
in
sub
dec
mov
popa
rol
andl
fistl
dec
xchg
adc
rcll
pop
adc
xchg
dec
mov
jne
ret
push
mov
inc
sub
shlb
sub
xorb
stos
jmp
sub
outsb
mov
add
lods
lret
movsb
push
inc
pop
jmp
repnz
in
repnz
push
mov
popa
loopne
xor
cs
adc
add
inc
pop
test
push
jmp
add
xchg
mov
sub
add
adc
test
les
dec
in
push
xchg
inc
loope
testl
movsl
popa
loope
sahf
jp
js
mov
jg
mov
scas
aad
adc
out
addb
hlt
popa
or
xor
inc
loope
outsl
xor
add
xor
mov
add
inc
or
add
repnz
adc
dec
fisubs
xchg
sub
add
and
sub
inc
les
inc
movb
add
mov
adc
add
ja
arpl
arpl
add
sbb
stc
jmp
aas
arpl
pop
clc
xor
pop
and
adc
mov
and
dec
popf
jl
mov
pushf
jno
push
das
sbb
ret
sub
int
push
sub
test
rolb
dec
xchg
jp
mov
sub
push
cs
xorl
xchg
cli
adc
push
ja
daa
movsl
jno
mov
inc
dec
add
mov
imul
inc
inc
mov
sub
and
adc
call
shlb
sub
lahf
cmp
push
pop
and
xorl
xchg
in
pop
rclb
dec
and
leave
in
test
bound
pop
sbb
jo
inc
mov
pusha
mov
xchg
xor
inc
xlat
add
outsb
mov
sub
imul
adc
push
adc
jmp
enter
jge
lar
adc
xchg
mov
xor
inc
sbb
aas
adc
or
or
adc
jno
xchg
sbb
lret
aad
imul
lcall
rclb
mov
mov
adc
xor
add
lcall
nop
push
aaa
out
pop
xchg
sub
sub
or
sbb
enter
cmpb
cmpsb
sbb
adc
les
fnstenv
adc
sub
lea
xor
and
and
pop
iret
push
pop
es
cs
and
sti
push
xchg
and
and
inc
mov
xchg
jmp
add
shll
sub
insl
mov
adc
leave
mov
test
sbb
aad
xchg
fs
bound
mov
sbb
mov
adc
das
cmpsl
fcoms
cmp
lret
movsb
and
dec
pop
sbb
mov
sub
adc
pop
movsl
shlb
and
cli
arpl
push
ret
int
xchg
add
test
xchg
lods
or
fldl
push
aaa
das
add
lahf
jge
xor
roll
adcb
push
movsb
inc
sbb
dec
dec
pop
adc
cltd
xor
pop
mov
movsb
std
repz
cmc
fiaddl
popf
xorb
das
and
or
sub
sub
add
xor
sub
mov
ljmp
sbb
xchg
mov
icebp
repz
mov
push
mov
mov
inc
jae
or
push
adc
jecxz
filds
imul
adc
cmpsb
jo
ss
test
fmuls
je
push
pop
insl
push
lcall
mov
mov
mov
ss
outsb
mov
test
cmp
adc
aaa
repnz
pop
add
mul
pop
and
sbb
subb
dec
xor
dec
and
movsb
push
stos
jo
das
sub
sbbb
ret
xor
nop
lret
cmp
je
ja
xor
repz
or
adc
test
xor
in
inc
pop
test
rol
lea
stos
mov
jp
dec
push
int
or
mov
add
or
pusha
add
daa
test
xchg
in
mov
inc
rcrb
and
xor
scas
push
ja
sub
add
cmp
scas
cwtl
les
dec
xlat
cmpsb
adc
push
pop
es
push
mov
sbbb
and
rcrb
inc
mov
lods
lahf
xchg
push
or
sbb
outsl
ret
pop
je
xchg
cmp
loop
or
popa
pop
psllw
loope
push
or
rol
mov
lods
add
cmp
mov
or
mov
push
add
add
cmpsb
in
xorb
push
push
mov
dec
out
mov
fnsave
or
push
repz
push
add
mov
outsb
clc
xchg
add
aad
je
or
out
test
adc
dec
xchg
je
lcall
xchg
mov
xor
or
adc
loopne
cwtl
xchg
adc
add
imul
ret
movsl
roll
add
xchg
sub
mov
xchg
xor
inc
mov
dec
inc
imul
jbe
test
mov
dec
dec
mov
push
cmc
stos
xchg
add
mov
add
movsb
and
rolb
sbb
mov
inc
pop
and
dec
mov
or
mov
push
pop
movsb
add
jle
loope
test
and
push
cwtl
shrl
mov
fidivl
mov
mov
addb
xor
mov
push
mov
or
incb
inc
test
stos
cmpsb
test
mov
cmp
daa
inc
lods
cs
in
sub
or
sub
pushf
cmp
sub
or
movsb
adc
ljmp
ja
mov
int
mov
test
lret
add
lea
jae
push
jno
aaa
mov
ja
inc
or
sub
inc
in
sbb
and
or
das
out
dec
ss
mov
loop
imul
add
daa
es
popa
xchg
popa
lcall
mov
sbb
nop
mov
and
push
xchg
rcr
jecxz
cmp
add
push
fistpll
sub
rolb
mov
add
add
shll
xlat
stc
mov
inc
loope
or
and
push
sarb
mov
xchg
lldt
or
pop
or
aad
inc
or
jb
adc
test
pop
pop
push
ret
mov
sbb
adc
sbb
ret
call
mov
sbb
aam
adc
mov
and
pop
fwait
xchg
xchg
jl
jne
add
imul
dec
and
movsl
aam
push
push
inc
test
add
out
rol
shl
sbb
and
cmpsb
lcall
dec
dec
pop
addr16
movsl
mov
inc
sub
mov
or
add
add
mov
movsl
cmp
adc
sub
push
insl
inc
test
pop
xor
dec
pop
mov
push
sbb
rclb
addb
in
stos
sbb
mov
push
test
push
sarl
cwtl
inc
mov
pop
loopne
test
testl
xor
push
cltd
rcr
stos
mull
les
aad
dec
aaa
push
scas
push
sub
add
movsl
jnp
adc
push
jo
loop
sub
adc
sub
adc
inc
test
call
and
mov
and
or
push
inc
cmp
subl
adc
orl
or
add
cs
or
xor
lods
bswap
xchg
movsl
aam
cli
lds
test
adc
and
adc
notl
push
movsb
addl
and
fsubl
mov
adc
sbb
adc
push
push
add
cmp
jno
xchg
and
nop
fidivrs
dec
aam
jns
add
adc
xlat
fldl
or
les
sbb
push
ret
push
shlb
mov
push
adc
jl
add
int
jo
shlb
xchg
cmp
shl
dec
jp
fxch
xchg
orb
movsl
mov
add
mov
add
sub
rolb
push
pop
jnp
repnz
push
add
add
dec
inc
clc
cltd
cs
lods
fldt
fs
inc
es
test
mov
xchg
add
lds
inc
cltd
push
stos
mov
adc
push
mov
adc
loop
mov
jmp
lods
lock
fldenv
xchg
cmpsb
inc
ljmp
jl
mov
or
xor
and
rclb
xlat
popa
aam
push
xchg
sub
add
pop
inc
add
or
scas
inc
jb
sub
scas
andl
in
in
adcb
cmpsb
adc
mov
push
dec
and
push
jmp
pop
jae
jno
add
pop
pop
push
xor
popf
sbb
add
inc
adc
mov
movsl
mov
cmp
sbb
rorl
sahf
adc
cltd
out
mov
sbb
lret
xor
jae
pop
xor
stos
xchg
je
cli
pcmpeqd
push
push
cmp
sub
xor
ret
mov
jecxz
enter
jmp
dec
shrl
and
pop
sub
fildl
dec
inc
test
push
jmp
xchg
sub
das
push
push
xor
and
dec
xor
add
insb
popa
inc
sub
je
xor
push
xchg
add
pminub
sub
push
adc
sub
push
ret
inc
mov
inc
into
fcomps
mov
movsb
push
pop
inc
shrl
das
or
test
add
inc
dec
andl
lcall
loope
mov
or
adc
mov
mov
scas
add
leave
leave
xchg
movsb
adc
xor
sub
add
add
repz
aaa
lods
xchg
hlt
ljmp
test
dec
sbb
jmp
xchg
push
push
popa
push
inc
pop
xor
xchg
inc
movb
add
dec
mov
mov
cs
aad
push
or
pusha
dec
mov
sub
sbb
and
mov
inc
inc
pop
sbb
lcall
es
in
aas
adc
inc
loopne
in
loop
xchg
mov
inc
test
imull
add
imull
inc
pop
nop
xor
sbb
cltd
xorb
adc
adc
mov
cltd
adc
fisttpl
push
inc
dec
sbb
pusha
pop
fists
xchg
test
les
add
repnz
pop
dec
enter
sub
aas
xchg
inc
push
repnz
bound
or
jno
sub
ja
xor
popf
jno
or
jnp
mov
inc
and
imul
dec
imul
je
cmpsl
lahf
pop
jne
sub
dec
sbb
xor
xor
leave
icebp
adc
or
lret
mov
push
lahf
xchg
cmpsb
cmp
push
jne
movsl
add
mov
inc
inc
aad
stos
imul
add
sbb
xor
pop
stos
inc
stos
adcb
idiv
jae
rclb
mov
cmp
or
dec
je
dec
arpl
jns
mov
dec
add
mov
cmp
and
cmc
push
dec
rol
add
or
adc
insl
stos
fs
arpl
jns
lea
jmp
popa
stos
rorb
aam
imul
test
pushf
mov
nop
inc
cmp
mov
pop
xchg
shlb
adc
pop
xchg
notb
enter
dec
inc
push
cwtl
andb
test
ret
ds
faddl
sbb
or
dec
dec
sbb
mov
jl
add
int
insl
mov
cltd
sarl
sbb
leave
xor
scas
or
push
xor
add
sbb
jo
ffreep
test
or
into
subb
lods
test
push
test
mov
insl
notl
lods
add
mov
push
ret
xchg
in
bound
dec
bound
adc
iret
xor
add
nop
dec
or
in
je
or
mov
dec
lret
subb
xchg
pop
xchg
xchg
incl
cmp
xchg
jmp
stos
xchg
pop
lcall
jb
bound
test
sub
mov
pop
lods
add
cwtl
shr
add
add
dec
or
add
lea
loopne
mov
incl
adcb
inc
mov
bound
imul
sbb
mov
cs
sarb
push
or
test
sbb
inc
cmpsb
mov
arpl
xchg
inc
push
cmp
fnsave
push
jns
sahf
or
movsb
jmp
push
add
add
adc
bndldx
popf
sbb
inc
and
pusha
aad
int
dec
inc
mov
les
cmp
arpl
add
lea
mov
jo
inc
cltd
lods
in
stos
inc
movsb
shll
dec
xor
fisttpl
scas
sbb
rol
shrl
insb
sub
inc
push
or
jg
orb
add
movsl
xor
in
out
cmp
mov
das
mov
mov
rorl
xor
push
add
sub
add
mov
lea
shrb
mov
jmp
nop
sub
mov
fisubrl
shlb
mov
cmp
xlat
sbb
inc
cmp
roll
or
fildll
lods
pop
and
jo
push
imul
test
fnsave
push
jno
shrb
add
add
gs
add
cmpsb
lcall
shrl
int
xor
repnz
sbb
mov
add
dec
xlat
movsb
sub
dec
cmp
xchg
jmp
imul
dec
sahf
sbb
xor
pop
sub
mov
ret
xchg
xor
scas
pop
inc
fcompl
and
mov
andl
xchg
addb
insl
and
rorb
xchg
imul
and
jecxz
sbb
xor
and
dec
mov
lea
stos
mov
and
add
push
int
cmpb
and
dec
pop
jg
jo
xchg
adc
cmp
stos
inc
mov
mov
push
and
pushf
inc
fimuls
xchg
std
pop
push
cwtl
rclb
inc
sub
adc
jg
mov
jne
push
push
and
pop
or
pop
orb
int
cmp
cs
enter
les
aaa
andl
ficoml
dec
jp
addl
jno
adc
xchg
add
lds
add
inc
lret
xchg
push
push
push
mov
pop
jg
push
push
test
sahf
vphaddwq
movsl
add
mov
mov
adc
sub
jge
dec
aam
add
mov
dec
int
inc
aad
sbb
stos
loopne
push
sub
outsb
cmp
sub
and
mov
sbb
rcl
inc
ret
vunpcklpd
or
call
xchg
mov
push
mov
movsb
jo
insl
pop
jo
arpl
aam
pop
cmp
cltd
or
xorb
add
mov
imul
sbb
jo
pop
and
mov
mov
popa
dec
push
push
fwait
divl
xchg
lret
test
mov
sub
in
add
mov
xor
test
and
adc
cmp
inc
sbb
adc
sub
sbb
inc
add
or
icebp
pusha
ds
dec
ret
adc
inc
or
test
add
mov
inc
push
push
sbbb
ja
jg
or
dec
gs
popa
sub
sbb
push
dec
lret
jg
loope
and
mov
xor
ja
xchg
mov
adc
orb
or
gs
xchg
mov
jecxz
mov
pop
test
rolb
add
and
inc
adc
lcall
and
or
loope
sbb
add
mov
leave
push
inc
dec
push
gs
jb
mov
es
sbb
mov
mov
sbb
adc
or
cmp
ljmp
mov
adc
pop
or
xlat
cwtl
jne
test
xorb
xchg
mov
clc
adc
ja
iret
insl
and
sbb
in
mov
jo
mov
das
inc
add
push
lcall
ret
rolb
xchg
mov
xchg
xchg
adcl
jge
add
les
or
aad
adc
adc
xor
sbb
popa
sbb
rol
stos
pop
xor
add
inc
int3
push
das
inc
and
jae
jmp
jne
shlb
int3
dec
shrb
or
dec
and
jo
daa
jbe
xor
leave
orb
cld
imul
out
int3
dec
pop
inc
lds
xor
stos
std
int
jne
in
and
mov
jno
mov
enter
sub
adc
jb
xor
add
ljmp
jne
xchg
or
add
lods
shrl
daa
je
imul
addr16
add
cmp
and
lret
lret
and
sbb
sub
and
test
nop
das
or
icebp
xor
es
and
sbb
sub
xchg
aaa
inc
adc
xchg
pop
fmuls
push
movl
lahf
push
add
mov
or
and
xorb
mov
add
xchg
push
fldcw
ss
and
push
pop
enter
push
and
or
pop
adc
pop
xor
mov
add
stos
movsl
cs
push
lcall
lds
pop
inc
inc
push
popa
pop
repnz
fwait
xchg
data16
sahf
andl
inc
stos
fucomip
jo
inc
inc
test
cmpsb
sbb
xchg
stos
imul
inc
cwtl
push
sub
adc
les
inc
lea
into
add
shrb
push
leave
pop
or
mov
xchg
add
sub
lret
jmp
or
mov
mov
dec
popf
xor
cmp
lods
add
decl
dec
or
inc
leave
push
sbb
push
dec
cmc
inc
sub
pop
shll
and
dec
scas
xor
pop
mov
cmp
or
movsbl
cmp
mov
addr16
dec
push
and
sbb
xor
xor
pop
je
pop
outsl
ror
mov
les
jo
ret
inc
mov
jge
add
stos
inc
insb
call
sbb
pop
mov
lods
icebp
les
ror
dec
or
leave
in
and
push
sbb
sbb
xchg
push
inc
insl
int
mov
loop
rcrb
nop
sub
mov
repz
daa
imul
sahf
mov
cmp
addps
jb
or
mov
mov
mov
shl
dec
mov
mov
mov
xor
cmp
xor
inc
arpl
mov
mov
pusha
and
sub
inc
mov
push
xorl
mov
inc
dec
inc
or
xchg
sub
add
xchg
inc
mov
mov
or
xchg
imul
jnp
cmc
push
jns
sahf
sub
cli
mov
sbb
das
faddl
jne
fwait
icebp
add
sub
push
sbb
or
pop
in
add
xchg
xchg
pop
mov
es
xor
int
test
mov
bound
movsl
mov
in
sbb
fisttps
xor
push
lret
jns
ret
mov
imul
sbbb
pop
push
fdivl
iret
into
xchg
std
insb
dec
push
xor
inc
pop
jo
pop
push
xchg
pop
and
jno
xchg
cmpsb
repz
shrl
xchg
dec
add
push
sub
mov
jg
add
mov
adc
xchg
mov
sbb
inc
push
rol
pop
push
or
push
jno
add
jge
cltd
pop
xchg
xor
vfrczpd
sub
repz
or
xchg
lea
add
adc
and
adc
jne
add
mov
cld
jne
add
push
ret
xlat
sbb
cld
test
inc
test
mov
aas
movsb
mov
ret
shlb
pop
adc
cmp
mov
xor
mov
xor
stos
fdivrs
jp
aad
adc
aad
add
cwtl
mov
addl
bound
rclb
stc
addb
push
lcall
mov
xlat
fnstenv
and
xor
mov
inc
pop
xchg
les
in
sub
lahf
xchg
adc
inc
push
shrl
push
andps
sub
lods
repz
push
mov
subl
or
xor
sahf
addl
cwtl
popa
dec
dec
lea
insl
inc
xchg
mov
mov
test
loope
dec
negl
hlt
inc
fistpl
testl
sbb
mov
xchg
and
xor
pop
and
pusha
inc
lcall
and
aad
notb
or
std
add
rcrl
sub
stos
xor
lea
iret
cmp
adc
mov
jns
pop
and
jns
and
jo
adc
cmp
push
xchg
sbb
mov
out
cmpsb
stos
xchg
and
ret
jne
mov
cmpsl
and
subb
into
fistpll
cmp
xorl
push
aam
push
and
push
sub
or
xchg
cmpsb
add
mov
sbb
mov
pusha
and
cmpsl
pop
lds
fidivrl
mov
test
bound
imul
popa
lret
xor
repz
sub
adc
adc
sub
and
mov
sbb
adc
mov
add
or
sbb
push
adc
fsts
mov
popa
hlt
xchg
mov
movsb
sbb
dec
pushf
ljmp
mov
mov
andl
fldl
inc
mov
sti
inc
mov
inc
sbb
insl
inc
das
imul
xchg
add
test
push
mov
add
xor
xor
pop
cwtl
orb
and
fimuls
dec
mov
xchg
jo
dec
jnp
inc
sbb
hlt
cltd
add
stos
mov
dec
jmp
or
xor
inc
test
cmp
adc
rep
inc
dec
popf
inc
mov
jb
imul
pop
xchg
push
push
xlat
mov
leave
loop
scas
xchg
dec
ja
and
push
xor
dec
xor
jbe
subl
mov
push
push
aam
fmull
in
loopne
push
jnp
pop
xor
mov
es
mov
xchg
cwtl
dec
mov
inc
scas
fsubrs
mov
and
insb
jmp
imul
xor
mov
add
cmp
cmp
add
dec
xchg
jo
fldt
popa
xor
xchg
and
sub
push
mov
mov
out
mov
cwtl
cmp
jae
outsb
sbb
dec
dec
fucomi
mov
pop
cmc
push
cmc
mov
movsl
adc
and
imul
dec
cmpsl
mov
stc
test
inc
les
dec
or
mov
mov
sub
jns
sub
and
lods
outsb
mov
rcrb
arpl
pop
xchg
push
add
xchg
out
add
sub
int
scas
les
jle
pop
stos
bound
add
mov
mov
lahf
ficompl
lret
add
xchg
cmpsl
dec
mov
jae
inc
stos
or
jo
pop
add
push
movb
insb
fwait
push
movsl
and
out
sbb
mov
adc
mov
mov
mov
int
cwtl
fdivrs
insb
dec
rolb
push
adc
mov
sub
xchg
xor
push
mov
pop
test
push
push
xor
add
sub
and
mov
push
pop
pop
adcl
add
sub
and
add
cmp
inc
fcomps
or
sub
scas
pusha
or
pop
dec
and
aam
arpl
je
add
sbbb
hlt
mov
push
jecxz
push
push
movsb
rcrb
add
xchg
jmp
xchg
rorb
inc
sbb
cs
shlb
xchg
fnsave
lret
pop
and
add
mov
je
and
xchg
mov
push
pop
or
cmp
mov
adcb
test
cmpb
mov
mov
mov
and
or
push
sbb
bound
aad
pop
and
movb
jne
push
xchg
inc
adc
test
inc
pop
xor
inc
pop
sbb
xchg
xor
adc
and
xchg
jo
push
int
or
pop
movsb
repnz
or
cmp
mov
mov
inc
add
add
je
jns
ljmp
xor
fs
add
insl
loop
gs
pop
and
or
add
fwait
pop
push
jno
push
mov
mov
gs
or
push
mov
add
add
adcb
inc
push
movsl
mov
addb
add
lahf
inc
or
cmp
lods
sub
popa
imul
jno
out
mov
mov
arpl
dec
push
mov
pusha
push
adc
hlt
add
sub
sbb
subps
xchg
pop
add
shrb
rclb
cmpsb
or
cmp
bound
lods
cwtl
or
add
adc
sbbb
cmp
fidivrl
and
inc
or
mov
add
inc
add
dec
push
outsl
stos
or
imul
and
cmpsb
xchg
insb
adc
push
mov
es
cwtl
adc
loop
push
mov
pop
and
js
loop
mov
push
jo
mov
movsl
out
cmp
or
or
jno
sbb
and
enter
xor
pop
mov
stos
and
stos
or
psrld
or
pop
add
mov
xchg
rolb
es
loop
test
pusha
adc
pusha
add
sbb
leave
mov
movsb
adc
es
push
xchg
imul
ret
loopne
shll
pop
mov
les
pusha
nop
push
das
mov
inc
pusha
xchg
fistps
cmp
int3
pop
ret
or
jecxz
push
add
pop
adc
loopne
xor
iret
dec
add
sbb
dec
lahf
lcall
cmp
loope
add
mov
jnp
inc
and
pusha
push
mov
dec
orl
mov
and
and
mov
xor
add
mov
mov
ret
popa
das
bswap
pop
xor
imul
sub
inc
dec
or
mov
inc
insl
xchg
or
or
pop
xor
or
test
sbb
in
pop
add
add
push
lar
loop
fidivrs
xorb
jge
fwait
dec
sbb
pop
cli
add
fdivl
add
movsb
inc
mov
jo
adc
out
add
add
movsl
inc
or
jmp
inc
dec
sbb
sti
stos
adc
cmc
in
jno
sahf
shll
cmp
xor
or
sub
cmpsb
iret
nopl
xchg
dec
in
and
cmpl
test
loope
push
dec
xor
xchg
inc
or
mov
push
pop
and
inc
scas
inc
sub
and
sbb
rorl
outsl
pop
xor
push
or
adc
inc
add
mov
loope
xchg
loope
pop
jecxz
sub
repnz
loopne
dec
stos
dec
cmpb
outsb
pop
stc
adc
add
popf
pop
adc
movsl
ljmp
mov
jmp
xor
xor
cld
inc
xchg
dec
push
and
mov
int3
mov
add
or
pop
sti
mov
imul
dec
add
enter
les
push
jns
dec
mov
fimuls
ja
popf
lds
daa
sbb
jo
jle
fcmovbe
add
out
push
inc
in
sub
sub
pusha
lods
loope
and
or
mov
inc
mov
aad
in
xor
repnz
pop
and
dec
mov
xor
rolb
inc
pushf
mov
push
or
adc
push
xchg
jo
int3
dec
ret
mov
push
adc
add
loop
jmp
adc
pop
fldl
add
leave
mov
xchg
cltd
xchg
lea
fld
aad
pusha
push
xor
pop
cwtl
aaa
icebp
pop
mov
and
add
lahf
mov
adc
movb
adc
or
fisubl
sbbb
adcl
mov
pushf
pop
push
adc
aad
pop
scas
push
mov
pop
scas
inc
xor
cltd
pop
adc
and
loopne
jge
mov
jne
xchg
sub
pop
lds
test
xor
rorl
push
or
adc
jns
pop
ljmp
cltd
mov
push
leave
movsl
push
xchg
xchg
push
rolb
xorl
insl
lahf
or
sbb
aam
inc
ret
movsl
adc
dec
mov
arpl
cmp
outsl
imul
sub
cmp
mov
or
nop
addl
sbb
adc
add
push
fnsave
mov
dec
orb
add
aad
pop
adc
scas
push
sub
xor
add
xchg
cmp
and
xchg
and
pop
and
inc
dec
and
xchg
jae
xchg
out
push
xchg
add
xchg
scas
or
out
dec
xor
aaa
cmp
or
pop
xor
push
add
inc
movsb
mov
mov
inc
js
and
popf
js
xor
sub
rorl
test
lret
test
or
pop
int3
add
movsl
and
shr
movups
lods
sub
dec
imul
mov
lahf
add
lea
add
fldl
ljmp
pusha
add
cmp
leave
mov
jo
js
fidivrs
adc
popaw
sbb
sub
sub
inc
jne
cmp
popa
stos
and
lea
xchg
scas
std
jg
or
adc
sbb
adc
test
inc
pop
lahf
add
mov
xor
imul
dec
sbb
sbb
es
aad
add
jns
and
je
add
sub
imul
sub
push
sub
icebp
inc
or
mov
mov
cwtl
sbb
adc
dec
cmpl
sbb
lcall
inc
add
cmp
and
push
dec
sbbb
pusha
mov
ret
mov
mov
jge
or
cwtl
sbb
or
sub
icebp
sbb
subl
add
dec
enter
lret
xor
stos
inc
pop
test
ja
jo
sbb
push
cltd
es
jo
sbb
add
in
rol
sbb
fists
inc
dec
inc
sbb
push
adc
inc
movsl
or
push
shlb
lods
add
cmp
xchg
push
repnz
sbbb
adc
sbb
sar
jne
sbb
sbbb
lock
sbb
pusha
xor
into
rcrl
shrl
push
add
xor
shll
inc
repz
in
adc
xchg
mov
mov
or
addb
push
jo
jno
add
pop
mov
adc
leave
les
add
xor
add
pop
mov
call
push
stos
xchg
sub
sbb
xor
cli
rclb
mov
sbb
inc
sbb
adc
sbb
ret
cmp
in
cs
stos
pop
test
out
sbb
inc
inc
cmp
inc
add
adc
cmpsb
xchg
andb
sbb
and
add
cmp
add
out
arpl
in
inc
ret
imul
or
repz
mov
mov
ljmp
sub
pop
jno
jo
dec
imul
add
repz
push
data16
adc
cmpsl
rcll
and
jbe
shll
jno
sub
adc
sub
inc
push
pop
test
or
int3
cmpsb
jno
jg
inc
inc
pop
push
xchg
sti
sbb
daa
dec
and
rcrb
xchg
ret
imul
and
and
movsl
dec
test
xor
add
imul
cmc
or
rorb
dec
sbb
mov
and
inc
lods
pop
sub
or
cmp
cmp
nop
push
inc
mov
stos
mov
mov
sub
repnz
pop
pop
lret
popf
cmp
sbb
pop
xchg
mov
aas
xchg
and
push
fs
jp
jne
aaa
cmpsl
push
sub
lret
out
shll
frstor
cmpsb
add
loop
xor
sbb
cmp
xchg
or
sub
rorb
shlb
push
pop
fs
mov
pop
or
and
pop
xchg
add
dec
push
pop
insl
xor
xor
icebp
add
pop
daa
add
jno
sbb
mov
push
mov
mov
add
mov
jno
inc
jo
dec
js
add
sbb
mov
push
inc
aaa
loope
stc
test
adc
imulb
push
pusha
cmp
add
or
inc
cmp
push
cmpsb
stos
gs
popa
sysenter
rolb
popa
popf
add
add
les
sbb
repnz
cld
dec
cmc
mov
xchg
test
test
push
push
or
mov
jae
inc
add
and
sub
loop
cmp
inc
inc
cmpsl
sub
ds
data16
or
inc
adc
pop
add
jge
mov
sub
cmp
dec
inc
shll
or
rorl
sub
and
push
push
andl
dec
icebp
push
addl
sarb
and
leave
mov
push
push
sub
sbb
dec
sbb
xor
shrb
mov
adc
mov
ret
add
cld
jns
pop
mov
not
xchg
or
mov
imull
inc
pop
mov
inc
dec
imul
insl
or
and
or
cmc
mov
xchg
add
sbb
add
sbbl
das
xchg
pop
leave
iret
xchg
ja
jl
cmp
adc
mov
mov
fs
push
popf
fwait
sub
out
in
inc
inc
sub
mov
cmpsb
icebp
xchg
jbe
or
sbbl
andl
vmovaps
push
sub
mov
xor
inc
adc
loope
adc
or
cmp
arpl
and
sub
stos
cs
add
cmp
fcomp
inc
add
and
jnp
pop
jno
jb
inc
push
jbe
stos
fcoms
sbb
pop
mov
stos
cmp
movsl
dec
in
adc
or
loope
add
cwtl
jno
xchg
cmpsb
stos
cltd
cmp
mov
add
inc
mov
xchg
popl
sub
xchg
popa
test
adc
sbb
add
lret
dec
push
mov
xorb
shlb
mov
mov
dec
dec
rolb
loop
or
loope
jg
dec
mov
dec
jne
push
pop
shlb
rolb
loope
outsb
fidivrl
xchg
and
inc
lret
repnz
xchg
push
aaa
sub
mov
inc
lea
icebp
pop
jmp
sbb
mov
jnp
add
loopne
jp
mov
pop
push
adc
inc
xor
or
dec
out
add
and
jno
out
xchg
dec
lods
push
add
push
rorl
aas
xchg
mov
insl
mov
dec
dec
jo
mov
xor
push
sub
repz
es
stc
xorb
cmp
sub
enter
shlb
sahf
mov
ss
aad
or
adcb
and
add
xchg
popf
scas
push
movsl
test
in
xor
iret
es
add
cmp
in
fs
je
and
adc
rcrl
pop
add
pop
je
je
sbb
movsl
mov
sbb
aam
or
sti
js
lock
push
dec
jl
aam
xlat
mov
jge
fimull
pop
sbb
inc
fcomps
push
or
push
inc
inc
ficoms
sub
push
pop
adc
rolb
pop
xchg
mov
xor
mov
rolb
stos
dec
inc
cmp
mov
inc
roll
xchg
xor
adcl
jno
adc
add
popf
adc
xchg
mov
stc
lret
nop
and
add
xor
sub
and
xor
cmp
jo
push
test
sbb
dec
sub
push
movsb
or
mov
push
and
dec
adc
stos
push
enter
fbld
into
je
adc
pop
cmpsb
test
movsb
mov
addl
or
xchg
cmp
xchg
cs
movsb
je
je
cmp
inc
or
pop
cmp
enter
mov
push
sbbb
inc
pop
pop
inc
inc
add
mov
sbb
repnz
pop
add
adc
imul
mov
add
push
dec
out
in
or
pusha
pop
dec
and
or
or
sub
mov
xor
sbb
sub
orb
xchg
inc
jo
sbbl
cmc
icebp
pushf
lret
es
pop
adcb
aas
movsl
push
loopne
lods
ret
int
push
js
jno
mov
lods
outsb
jmp
or
mov
jecxz
ret
popf
mov
filds
outsl
testb
inc
inc
and
sbb
adc
sbbb
xor
subl
pop
pop
jecxz
sbbb
and
lcall
adc
add
es
jg
mov
dec
lret
inc
add
inc
rcll
punpckhwd
bnd
cmpsb
pop
mov
imul
mov
pushf
insl
add
out
cmp
andb
adc
push
enter
inc
xchg
push
scas
inc
sbb
and
mov
or
jmp
push
test
push
sub
and
xor
lds
xor
scas
stos
leave
xorl
push
cmp
add
scas
pop
mov
xor
cwtl
out
shrl
dec
push
mov
jne
aam
out
push
test
aad
and
pop
je
sbb
ret
divl
rclb
inc
shll
dec
inc
push
and
rclb
enter
mov
gs
test
stos
sub
rcl
mov
xor
cltd
pushf
test
mov
movsl
jno
dec
cmp
pusha
push
dec
lret
loop
ljmp
xor
mov
addb
movsb
ss
cmp
or
add
enter
xlat
mov
sub
bound
movsb
sbbl
push
lret
push
push
int
enter
std
adc
xor
andl
add
and
mov
int
or
mov
adc
cmc
xor
ret
push
insl
push
sbb
cmp
cmp
sahf
lret
or
hlt
inc
xchg
xchg
mov
cmp
pop
add
das
adc
aam
jmp
mov
stos
inc
add
sub
push
adc
cmp
jge
inc
test
xorl
nop
fwait
or
outsb
jns
sbb
arpl
sbb
dec
sahf
movsl
imul
jge
lea
sub
pop
mov
fcmovnb
jl
mov
inc
fsubrs
adcb
rorb
lret
testb
add
dec
pusha
add
and
fnstenv
inc
xor
push
inc
test
in
add
mov
sbb
push
sub
adc
and
mov
les
xor
scas
loope
cmp
stos
mov
sbb
std
and
inc
sbb
mov
out
pop
les
mov
adc
cmpl
pop
or
mov
xchg
mov
popl
lret
mov
dec
dec
lods
pop
mov
andb
push
jnp
adcl
adc
dec
stos
mov
jne
mov
sub
jns
add
cmp
xchg
rclb
jmp
pusha
sti
pop
and
add
pop
fmuls
movsb
push
jb
nop
sti
adc
nop
out
das
mov
jns
or
mov
xchg
pushf
addl
mov
ret
xchg
xor
mov
inc
or
push
lret
pop
jo
rclb
jo
nop
push
and
add
add
cmpsb
rolb
xchg
or
jnp
and
dec
mov
inc
add
movsl
sub
dec
mov
adc
and
or
mov
jns
popa
out
clc
lds
mov
adcb
aad
mov
popa
mov
mov
push
sahf
add
xchg
inc
popa
lods
mov
test
jo
gs
inc
mov
sbb
push
push
fidivrl
push
cmpsb
xchg
add
cmpl
lcall
dec
adc
mov
insb
call
add
add
xchg
rolb
in
inc
sahf
inc
je
mov
or
bound
mov
fsubl
subl
add
ljmp
and
lret
push
out
jne
inc
insl
jns
rclb
daa
jecxz
and
mov
ljmp
out
mov
outsl
ret
inc
addb
cmc
xchg
dec
sub
pop
inc
or
mov
jns
mov
stc
xchg
subl
mov
jmp
imul
scas
mov
inc
mov
cmpsb
xchg
jo
jmp
and
lcall
bound
xor
and
mov
pop
xchg
mov
test
test
in
adc
arpl
push
movsl
stos
add
movsl
mov
loope
add
lret
gs
jecxz
adc
push
xor
test
add
nop
cmpsl
lret
insl
adc
frstor
mov
shlb
push
push
adc
jl
test
jno
testb
insl
loopne
cltd
pop
aam
cmp
adc
jp
je
rcrb
adc
lea
iret
dec
sbb
xor
inc
or
sbb
mov
sbb
sub
movsb
mov
cmpsl
push
in
adc
sub
adc
pop
movsb
or
adc
addr16
add
adcl
nop
or
orl
jnp
adc
mov
pop
add
jg
xor
arpl
xor
stos
mov
xor
jno
push
in
mov
mov
jb
push
or
xchg
in
push
pop
or
sub
jg
jne
mov
pop
adc
mov
push
or
into
lds
subl
movl
sbb
mov
inc
fimull
jo
add
int
rclb
adc
push
add
loopne
dec
scas
xchg
xor
pop
and
test
lea
loope
adc
push
pop
mov
jge
push
les
aad
adc
ds
and
movsb
mov
int3
mov
jb
dec
ret
pop
add
sbbb
pop
arpl
pop
xchg
sub
adc
push
out
scas
sbb
jb
xlat
leave
pop
push
push
xchg
ret
or
adc
in
sub
mov
stc
rolb
add
mov
inc
push
mov
inc
js
stos
xor
and
and
inc
inc
push
in
add
rorb
mov
icebp
fisubs
test
scas
adc
add
insb
sbb
or
pop
adcb
loope
mov
test
pop
xor
sbb
lcall
push
adcb
mov
and
leave
fldl
leave
out
add
lods
add
add
inc
and
push
cmp
imul
pop
cwtl
inc
jno
jne
jecxz
fistpll
fadd
test
mov
inc
imul
aad
or
imul
shl
mov
push
test
movsl
fs
loopne
lret
loop
lea
inc
adc
movsb
lcall
mov
xchg
sbbb
mov
bound
push
ds
dec
sub
xchg
sbb
jo
adc
or
cmpsl
or
add
sbb
ja
dec
stos
inc
add
sbb
jmp
push
adcb
ret
lock
and
mov
pop
mov
and
xchg
mov
rolb
mov
imul
mov
cmpsl
xchg
jmp
add
loope
loopne
test
sub
cwtl
dec
mov
xor
push
add
add
addb
push
nop
cld
sub
push
pop
shlb
imul
and
mov
push
mov
pop
roll
leave
dec
xor
test
xchg
mov
test
inc
sbb
or
jne
add
mov
add
test
dec
xor
adc
xor
xchg
adc
mov
xchg
inc
inc
xchg
jo
mov
dec
imul
mov
stos
xchg
pusha
arpl
sub
sbb
xchg
test
mov
or
xor
aam
in
and
adc
popa
sti
and
inc
and
add
cmp
test
jmp
jl
add
sarl
stos
orb
or
and
add
xchg
adc
xor
lods
xchg
pop
rolb
lods
or
push
scas
subb
adc
push
loopne
xchg
mov
insl
adc
or
cmp
inc
xor
cmpsl
inc
xchg
sbb
mov
sbb
loope
adc
push
pop
push
xchg
or
mov
pop
xor
push
and
cmp
popa
idivl
ret
dec
push
mov
std
repz
lret
or
mov
mov
leave
aas
je
cmp
mov
mov
and
enter
sbb
add
aam
jmp
mov
and
cmpsl
adc
aam
sub
lahf
dec
inc
add
sti
cmp
cmpsb
dec
in
lds
dec
jmp
rol
add
les
sbb
and
fmulp
ror
or
sbb
lahf
std
inc
cmp
and
sbb
push
stc
nop
push
xlat
dec
xor
xchg
pop
data16
sbb
inc
xor
stos
es
mov
mov
add
imul
add
xlat
sub
jne
iret
mov
inc
push
lds
push
movsb
mov
mov
inc
mov
jge
incl
sub
jmp
inc
fists
ja
and
or
imul
inc
xchg
mov
cmp
shrb
add
and
pop
aam
inc
shlb
dec
popa
add
imull
jo
mov
jae
out
or
leave
imul
dec
fdivrs
ucomiss
push
pop
roll
or
jle
cmpsl
xchg
xchg
push
lock
inc
pop
mov
fbld
sbbb
mov
mov
repz
mov
rorb
xor
in
test
add
scas
stos
sub
sub
pmulhuw
sub
push
push
add
add
mov
rol
inc
stos
shll
or
push
mov
push
xchg
pop
push
push
jnp
or
sbb
add
fwait
orl
sub
movsl
jg
dec
and
adc
xchg
enter
push
cmpl
icebp
sahf
xor
sub
dec
mov
out
push
ljmp
test
roll
es
movsl
and
aam
pop
cmpsb
sbb
push
cmpsb
xchg
mov
call
popf
push
inc
and
dec
push
rclb
arpl
xor
mov
fs
and
inc
adc
cmp
ret
jo
test
fst
pop
aas
rol
inc
aam
mov
mov
push
push
orl
jo
jge
push
and
jne
cmp
je
fdiv
in
adc
mov
add
ss
lods
adc
test
jecxz
pop
add
push
mov
add
and
xor
add
sub
cli
addr16
pop
fnsave
movb
scas
mov
sbb
mov
ficoms
loop
roll
mov
sub
in
mov
movsl
stos
mov
sbb
push
cmc
mov
jo
and
xchg
mov
push
fsubl
or
imul
jmp
and
insb
cmp
mov
sub
push
jecxz
sub
push
sub
outsl
inc
push
inc
or
cmp
inc
add
mov
and
or
push
lcall
ljmp
pop
mov
push
add
mov
lcall
dec
inc
pop
xchg
daa
jo
add
in
aaa
inc
push
inc
movl
dec
sub
aam
adc
inc
add
add
lret
pop
mov
shlb
mov
lods
pop
popa
leave
push
xchg
test
dec
dec
xor
lcall
push
and
sub
adc
dec
or
push
outsl
inc
add
xor
addr16
add
xor
popf
loopne
xchg
insl
pop
adc
push
and
pop
int
dec
adc
loop
mov
push
insl
push
sbb
sub
xor
test
adc
ror
test
add
mov
jb
inc
push
adc
xor
test
inc
add
lcall
or
push
push
movsb
fisubrs
shrb
sbb
jo
inc
mov
mov
push
dec
pop
jecxz
sbb
push
inc
dec
mov
aam
cmpsl
out
and
loop
sbb
jecxz
mov
jo
cmp
xor
and
ds
test
xor
cwtl
inc
or
xor
push
mov
cmp
rorb
jno
mov
adc
insl
in
sbb
adc
add
cs
xor
cmp
sub
das
cmp
mov
adc
cmpsl
mov
inc
lcall
mov
mov
inc
ss
test
and
or
inc
cmp
mov
pop
adc
mov
add
dec
jp
out
jbe
cmp
scas
int3
sub
xchg
jne
rorl
rolb
dec
sub
add
and
adc
mov
xlat
xor
arpl
xor
add
inc
addb
mov
jmp
dec
rclb
popf
push
sub
sub
cmp
gs
icebp
bound
shlb
sbb
mov
or
adc
push
sbb
int
push
roll
test
push
xor
adcb
fildl
mov
pop
adc
xor
aad
rorb
xchg
jmp
pop
adc
dec
movsl
inc
mov
loopne
aaa
inc
cmp
imul
mov
idiv
mov
xor
inc
mov
push
insl
fimull
aad
add
ss
jo
sub
das
or
mov
add
popa
aam
mov
jne
orl
mov
push
aam
add
lock
inc
mov
jo
add
mov
enter
into
mov
stc
sub
sbb
and
xor
sub
inc
rcl
call
inc
subb
push
inc
xchg
pop
shlb
pop
push
mov
xor
andb
test
sbb
pop
mov
int
mov
jne
dec
pop
push
popa
cmp
cltd
push
int
xchg
imul
jecxz
xchg
lds
arpl
addl
inc
xchg
push
dec
push
xor
mov
sbb
push
pop
or
enter
test
pusha
ret
orb
xor
and
in
sbb
lcall
adc
mov
mov
loopne
jne
shrl
push
arpl
xorl
gs
and
loop
pop
addr16
cmc
or
mov
sub
addb
pop
dec
daa
mov
sub
dec
roll
xor
andl
dec
sbb
and
add
test
or
xor
xchg
add
adc
test
push
add
arpl
sub
add
sbb
bound
or
pop
rorl
dec
cmpsl
test
inc
dec
adc
mov
mov
xor
xor
add
pop
sub
fs
xchg
or
jne
jbe
sar
loop
xchg
sub
arpl
inc
or
inc
fcomp
shlb
xchg
es
cmp
add
adc
adc
mov
jae
icebp
fcmovb
add
jno
cs
fnstenv
xchg
jge
cltd
inc
or
cltd
std
add
cmpsl
std
adc
dec
ror
and
xor
cmpb
xchg
sbb
test
and
mul
test
jo
rorb
add
nop
stos
enter
inc
pop
xor
sub
push
enter
inc
pop
fadd
daa
pop
shll
sub
jbe
pop
cmp
aam
test
push
sbb
sti
daa
sbb
fsubrl
iret
and
adc
cwtl
bound
test
adc
jo
pop
ja
es
lods
dec
fbld
aas
and
sub
adc
loope
movb
adc
outsb
add
xchg
cmc
sbb
dec
push
or
adc
cmp
cli
add
and
leave
and
enter
mov
mov
and
sbb
adc
ret
in
mov
pop
sahf
idiv
cld
xorb
mov
add
or
enter
or
test
insl
cmp
cmp
xchg
clc
push
xor
aaa
add
je
daa
adc
cld
xor
int3
fldt
bound
fbstp
jle
add
or
mov
push
push
enter
push
mov
jo
roll
add
rcrb
ds
mov
pop
mov
lea
sub
mov
ljmp
pop
lods
mov
mov
adc
adc
push
add
jbe
inc
and
pop
jae
leave
imul
sti
cltd
test
sub
sub
imul
jo
leave
or
push
rorb
int3
lret
pusha
xor
sub
lods
push
stos
and
xchg
cld
push
lcall
mov
add
insb
and
dec
out
push
cmp
daa
or
push
or
adc
mov
jbe
inc
pop
jne
ds
push
lcall
sbb
sbb
dec
hlt
sub
popa
xchg
imul
push
and
or
insl
add
xor
xorl
cmp
add
stos
inc
repnz
add
loopne
movsl
inc
jecxz,pt
add
jmp
loope
daa
adc
and
jge
jmp
leave
ret
rclb
mov
inc
push
pusha
inc
lock
adc
dec
bound
push
jne
xor
sub
mov
push
je
test
adc
xchg
mov
mov
icebp
enter
orl
lea
add
jecxz
popa
jp
mov
or
std
mov
cmp
push
daa
adc
lea
dec
xchg
add
test
cmpsb
ds
rclb
stos
pop
insl
popa
xor
les
add
aam
jno
adc
sub
dec
pop
std
dec
test
popa
adc
test
stc
cli
mov
xor
les
push
pop
and
push
and
xor
stos
outsl
int3
dec
jl
mov
mull
adc
scas
sbb
aam
cmp
dec
and
repnz
sbbb
mov
mov
adc
jg
dec
inc
cmpsb
xchg
add
sbb
and
push
push
aad
xor
sbb
orb
push
les
jmp
std
dec
fmuls
and
add
or
cmp
enter
aas
cwtl
push
sub
jne
roll
push
stos
mov
pop
repz
gs
xchg
push
cs
mov
cmp
adc
cmp
div
jecxz
sub
mov
add
je
dec
jg
dec
jecxz
in
jecxz
fidivl
and
fs
mov
mov
and
mov
sbbl
push
add
ljmp
movsb
xor
jne
ret
xchg
xor
sbb
test
push
sbb
xchg
add
into
cmpl
negl
pop
dec
inc
dec
pop
and
add
icebp
or
mov
jo
push
sbb
jne
push
out
testl
repz
add
mov
lds
inc
mov
or
mov
les
jae
inc
pusha
xchg
cmp
xchg
jne
mov
stos
jl
pop
or
sbb
int3
mov
dec
push
adcl
lea
out
mov
test
sub
or
xor
dec
mov
cmp
mov
gs
xor
mov
cmpl
cmpsl
xchg
add
fimull
inc
lcall
rolb
push
add
aam
sub
pop
sbb
push
pop
test
cmp
push
inc
subl
insb
jecxz
scas
sti
adc
xchg
push
jne
inc
dec
sbb
inc
cmp
icebp
fldenv
or
in
lods
add
sub
mov
sub
cmp
sbb
sbb
xchg
sbb
repz
mov
mov
insl
sub
xor
sbb
and
inc
xor
adc
fcoml
jns
ret
insb
lret
xchg
inc
test
xlat
nop
ljmp
cs
add
rolb
mov
aad
imul
xchg
inc
sbb
inc
push
adc
fildll
jno
xor
inc
pushf
lds
push
jo
cltd
dec
jmp
inc
push
add
int
je
aam
sub
or
dec
mov
or
leave
test
inc
pusha
sbb
and
push
xor
cmpsl
pop
lret
adc
pop
jne
es
pusha
pop
inc
test
out
addl
in
sahf
push
shll
cmc
pop
out
add
aam
mov
inc
sahf
sbb
and
xchg
in
out
imul
ljmp
iret
mov
mov
and
test
sub
lods
or
add
out
sub
loop
mov
mov
data16
adc
pop
xchg
xchg
inc
or
lcall
fcomip
mov
stc
jg
movsl
add
loopne
js
sbbb
popl
or
or
aam
aas
and
insb
popa
mov
add
arpl
addb
aam
inc
aas
xchg
mov
subb
push
push
addb
outsb
andl
or
add
imul
xchg
cmp
jmp
inc
dec
xchg
popa
test
adc
xor
xchg
add
adc
adc
stc
push
in
push
andb
pusha
add
fs
xor
dec
xor
or
pop
xchg
or
aam
clc
pop
daa
roll
in
mov
push
cltd
aad
inc
adc
mov
lock
add
iret
fst
scas
shrb
pop
insl
pmulhuw
xchg
jno
or
sbb
pusha
add
xchg
clc
pop
shll
xor
jnp
push
sahf
inc
mov
or
inc
in
sahf
mov
outsl
inc
pop
inc
test
movsb
mov
or
jg
inc
adc
xor
add
das
mov
fbstp
lret
inc
jge
add
xor
lret
xchg
ljmp
xor
cmpsl
xor
dec
mov
fs
adc
lds
adcl
inc
and
into
adc
ljmp
add
sub
sub
test
dec
sahf
xor
in
out
jo
and
adc
xchg
lret
jb
repz
sbb
dec
fldt
mov
sbb
cmp
xor
and
xchg
jne
aam
mov
inc
jno
inc
inc
mov
rorl
sbb
lcall
mov
stc
adc
sbb
in
sbb
fwait
push
das
jno
int
xor
sbb
sbb
lods
test
mov
add
sbb
or
adc
adc
pusha
xchg
test
add
adc
fisttpll
push
ljmp
ljmp
push
pusha
or
xchg
pop
int
mov
das
int
xor
test
nop
xchg
dec
adc
cmp
adc
xor
or
adc
mov
es
insl
das
in
test
sbbl
addr16
daa
push
sub
fcoms
sub
or
out
arpl
push
add
ja
and
inc
pop
imull
rorb
ret
mov
dec
mov
add
dec
fisubs
outsb
int3
jae
in
test
int3
cmp
adc
imul
push
test
mov
and
sti
frstor
test
das
rclb
dec
dec
lcall
xchg
je
push
adc
pop
mov
shll
and
xchg
push
xchg
or
mov
ljmp
pop
mov
popl
xlat
lods
adc
sub
sbbl
sbb
mov
sub
push
cmp
inc
stos
sbb
dec
xchg
sbb
fnstsw
cmpsl
xchg
mov
add
push
lea
pop
test
mov
stos
ret
and
push
cltd
dec
stos
gs
and
movsl
push
cltd
or
shlb
je
lret
or
imul
cmp
push
popa
xor
mov
adc
sub
jl
xor
xor
jns
fisubrs
enter
adc
pop
dec
jb
loopne
or
insb
or
ljmp
int
ret
shlb
mov
imul
jnp
std
inc
and
pop
fcmovne
insl
jmp
push
xor
mov
movsl
jg
xor
push
sbb
gs
cwtl
adc
dec
mov
fwait
gs
iret
inc
and
aad
cmp
sbb
test
adc
enter
adc
add
jno
popa
dec
add
mov
loopne
mov
mov
mov
cs
lods
adc
lcall
mov
add
int3
test
push
dec
dec
imull
or
jmp
dec
aaa
loop,pn
mov
data16
pop
sub
cltd
fnstcw
mov
sub
lds
or
shl
push
pop
mov
or
pop
out
in
fists
xor
scas
decl
sbb
lcall
ret
test
int
pop
insl
pop
sbb
sbb
cmpsb
add
dec
inc
stos
mov
or
mov
or
inc
mov
pop
and
adc
jmp
xchg
dec
ss
jmp
add
std
mov
sub
push
and
adc
mov
dec
sbb
addr16
and
add
pop
addl
sbb
shr
xchg
aam
lcall
xchg
and
or
lods
adc
adc
add
xchg
ret
mov
shrl
dec
sub
dec
or
shll
mov
push
pop
push
dec
stc
popa
and
test
test
sub
add
movsb
xor
je
sub
xor
mov
orl
insl
sbb
mov
mov
aas
mov
and
add
xchg
dec
adc
sbb
cmpsl
adc
add
mov
in
cmp
ret
pusha
dec
inc
lea
jmp
mov
frstor
ret
adcl
inc
or
in
pop
hlt
mov
test
or
rol
cmp
fimuls
notl
dec
dec
jmp
mov
stos
pop
sti
lahf
xchg
and
mov
pop
mov
adc
ret
adc
popf
pushf
xchg
icebp
lods
arpl
movhps
iret
dec
sti
gs
cwtl
sbb
adc
pop
shll
loopne
adcl
aam
loope
shl
lea
js
sub
inc
daa
mov
sarb
mov
mov
xor
push
dec
lds
dec
xchg
fisubl
xor
or
mov
pop
std
imul
ret
add
jb
scas
inc
lods
adc
movsl
in
jne
add
add
sbb
mov
mov
testb
das
sbb
push
cltd
mov
fwait
or
shrb
aam
lods
and
push
or
xor
leave
sbb
iret
inc
mov
clc
lock
test
mov
dec
and
xchg
ljmp
inc
fs
leave
sub
or
lahf
insl
mov
push
and
inc
sahf
and
adc
or
xor
orb
xor
xchg
fildll
mov
sbbl
test
sbb
xchg
cmp
dec
xchg
jmp
and
xor
call
int3
mov
add
gs
xorb
fldenv
mov
or
xchg
scas
and
xor
mov
repnz
into
inc
mov
adc
sub
inc
pop
sub
dec
roll
mov
in
add
add
int
pop
pop
adc
sbb
fstl
jb
cmp
pop
xor
ljmp
leave
xchg
push
in
and
adcl
mov
pusha
bound
test
arpl
addl
jae
dec
push
sub
out
pop
xor
add
cmp
or
mov
xchg
jo
js
push
loop
test
lret
cltd
test
test
and
movsb
cld
dec
dec
lods
add
mov
xor
mov
lret
mov
js
nop
dec
pop
add
inc
dec
rolb
mov
sahf
and
jno
rcrb
or
fisttps
add
vmovq
leave
lret
aad
sub
xchg
jp
ljmp
inc
mov
add
shlb
inc
je
lods
inc
subl
dec
aad
popl
cmpsb
or
rol
mov
push
xchg
xchg
nop
xor
ret
cmpsl
adc
repnz
inc
inc
imul
lods
stos
inc
mull
in
inc
sub
pop
xchg
add
push
dec
xchg
lret
loop
orb
push
xor
add
mov
fdivl
popf
or
push
rcll
icebp
icebp
test
test
jne
rorb
adc
adc
or
adc
and
inc
push
jo
imul
loopne
or
cltd
les
subl
sbb
push
adc
fmull
sbb
mov
jo
add
shll
inc
aam
mov
mov
pop
shlb
sahf
adc
test
sahf
in
mov
and
add
cmpl
dec
popa
add
and
xor
jecxz
add
cmp
mov
cmpl
push
fstpt
mov
jl
push
vpacksswb
add
les
push
stos
mov
incb
sbb
icebp
xchg
addr16
sub
subl
sub
and
mov
add
shll
das
rorl
movsl
dec
andb
adc
push
xor
adc
scas
bound
mov
xor
and
or
cmpsb
xchg
or
mov
dec
push
adc
mov
ss
and
andb
mov
pushf
lret
dec
rorb
stos
mov
fdivs
and
ficoml
pop
xchg
and
mov
lods
mov
gs
lcall
add
cs
or
add
ljmp
ja
push
cmpsb
imul
and
fldenv
cmpsb
outsb
or
jno
adc
insb
mov
push
stos
inc
insb
pop
lcall
xchg
in
imul
pop
jno
rcr
or
movsb
xchg
imul
add
rorl
jae
add
xorb
or
and
pop
cld
xor
xchg
push
inc
xor
adc
inc
and
push
je
int
stos
inc
add
inc
xchg
rorl
mov
mov
mov
orl
inc
cmp
cmp
movsl
fwait
mov
xchg
jno
leave
cmp
test
stos
or
xor
and
stos
adc
or
add
xchg
pop
bnd
pop
cmp
cmp
mov
js
mov
nop
icebp
lods
pop
pusha
xor
dec
cmp
test
es
je
add
or
push
mov
xor
mov
push
frstpm(287
jne
test
flds
bound
pop
insl
and
inc
mov
add
sbb
mov
or
mov
mov
mov
and
xchg
mov
ljmp
and
adc
mov
xor
icebp
sbb
xor
loope
fs
add
sub
cmpsl
test
xchg
rolb
cmc
test
andps
inc
lcall
inc
sbb
push
push
lret
fstps
fiaddl
in
or
shr
mov
sbbl
scas
push
ljmp
inc
sub
pushf
mov
dec
push
pop
pop
or
and
push
or
cmp
sbb
xchg
orl
imul
xor
lea
fsubrs
mov
pause
arpl
sub
sbb
loopne
mov
inc
adc
imul
xor
call
mov
add
mov
loop
fmull
cwtl
sbb
popa
adc
sbb
jecxz
popa
push
add
add
inc
or
push
xor
stc
xchg
insb
pusha
stos
mov
cmp
dec
pop
xor
clc
out
add
popa
fldcw
add
and
add
jae
test
jne
shll
pop
push
daa
xor
lret
dec
push
pop
mov
push
fsubrs
dec
add
inc
fidivs
leave
xor
mov
and
les
push
out
inc
les
ret
jno
and
out
or
or
sbb
xor
dec
xchg
mov
adc
aad
aad
nop
and
test
outsb
add
mov
add
add
fxch
int3
and
inc
add
inc
shrl
dec
repz
pop
bound
xor
sub
stos
mov
inc
insl
xlat
inc
sbb
pop
push
cmpsl
xchg
sbb
mov
adc
or
dec
xchg
dec
lcall
mov
mov
inc
push
adc
push
cltd
and
and
out
jmp
adc
in
lods
cmp
lods
mov
adc
or
add
jp
xchg
jbe
jns
adc
add
fisttpll
push
scas
add
test
xchg
jmp
movsb
fldt
or
lock
xchg
ja
iret
daa
or
push
popa
xchg
pop
or
adc
iret
je
push
aas
vmwrite
pop
andl
test
lea
push
out
sbb
dec
xor
xchg
lret
ret
mov
inc
or
and
and
movsb
sbb
and
repz
and
fstl
aaa
lret
aam
and
dec
xorb
mov
add
add
mov
sub
pusha
in
out
mov
mov
pusha
adc
xlat
or
mov
mov
add
and
rolb
lea
or
les
pop
jmp
cmp
pop
jne
mov
and
pop
adc
xchg
push
inc
sub
dec
pop
and
aaa
aam
stos
cmp
xchg
aad
inc
mov
add
inc
and
mov
mov
pop
out
aaa
add
mov
sbb
je
dec
outsl
orb
inc
xor
cmp
lods
call
or
dec
jecxz
xchg
xor
cmpsl
adc
mov
fistl
jno
fwait
stos
fwait
movsb
adc
xchg
xchg
inc
and
add
dec
pop
int
jp
aaa
push
push
ret
adc
jnp
rolb
jo
fwait
sub
xor
ficomps
xor
ja
or
push
sbb
sub
mov
mov
sub
cld
pop
push
jo
ret
sbb
xor
nop
out
sahf
das
cmp
sub
sub
movsb
add
sub
add
test
xchg
inc
adc
movsb
push
push
push
adc
orl
dec
adc
sub
out
add
lods
sub
sub
dec
xchg
dec
cmpsb
cmp
mov
push
hlt
pusha
add
sbb
push
add
ret
xor
adcb
and
inc
ljmp
lods
iret
pop
mov
nop
movsb
mov
lds
mov
mov
push
sbb
xchg
imul
mov
push
aad
ja
push
shlb
jmp
adc
rolb
cmp
add
dec
fs
and
cmp
fadd
xchg
xor
cmp
xor
pusha
mov
movsb
imul
cmp
push
xchg
movsb
or
leave
es
pusha
mov
xchg
loopne
dec
iret
xchg
and
add
mov
adc
xchg
adc
jae
xchg
push
xchg
rolb
push
adc
push
lods
jb
inc
add
je
dec
ret
xlat
pop
or
cwtl
pusha
push
xchg
lods
and
add
shrl
mov
les
dec
test
or
add
rclb
sbb
adc
sub
xchg
sub
inc
adcb
mov
xor
adc
mov
je
or
and
and
push
cmp
dec
add
cmpsl
sub
push
jo
mov
je
xor
xchg
push
popf
push
sbbl
adc
sti
fnsave
das
adcl
inc
sbb
pop
pop
mov
push
imul
mov
popa
inc
shlb
adc
xchg
cmp
xchg
jl
cltd
and
mov
arpl
push
add
adc
dec
and
xchg
daa
add
xchg
andb
mov
push
cmp
adc
inc
hlt
pop
push
jne
cmp
xchg
addr16
nop
fs
inc
cmp
test
test
insb
pop
cwtl
cmc
xor
adc
orl
lea
cmp
push
xchg
fimuls
test
inc
dec
aas
popa
push
mov
nop
cmp
jg
imul
sbb
sub
or
add
rolb
aad
dec
pusha
subb
ficoml
repnz
jge
jno
dec
push
shlb
mov
or
mov
jecxz
jp
push
inc
add
add
dec
cwtl
xor
test
or
add
sub
pop
push
jo
popf
pop
ret
sbb
cmpsl
test
add
cltd
add
arpl
adc
cmp
adc
add
adc
fdivl
add
add
loopne
xor
test
adc
push
sarl
adc
test
or
add
mov
je
pop
jne
popa
mov
test
add
jno
add
sbb
rclb
xchg
cwtl
lea
or
xor
imul
add
les
pusha
mov
lds
push
add
jo
popa
adc
sti
sbb
daa
push
dec
add
push
dec
lea
nop
lock
gs
xlat
ja
popf
push
shlb
push
add
sbb
jne
inc
pop
xor
mov
dec
scas
xor
cmp
adc
xor
push
cld
jg
roll
stos
dec
cli
push
adc
jo
insb
adc
adc
push
loope
cmpsl
push
fs
orb
push
repnz
sarl
fs
inc
repnz
aaa
idivl
inc
and
and
or
sub
xchg
or
push
xchg
cmp
cmpsl
mov
add
inc
pop
loopne
ja
jo
or
imul
jg
xchg
push
sbb
pop
sub
jg
adcb
dec
mov
fildl
std
fbld
les
fsubrs
xchg
cmp
or
nop
mov
repz
push
add
iret
add
pop
and
add
clc
imul
les
aam
mov
dec
shll
or
pop
popf
adc
cwtl
stos
mov
add
pop
pop
popf
and
mov
push
dec
ret
arpl
cmp
dec
sbb
pop
mov
enter
cli
jg
and
sbb
and
pop
loop
and
les
pop
stos
push
movsb
adc
out
and
mov
jo
in
shll
das
mov
sahf
add
push
and
popa
adc
mov
nop
sbb
mov
push
insb
xlat
push
and
es
xor
xchg
adc
fists
mov
cmpsl
inc
and
insl
jge
sub
or
jge
scas
push
or
inc
into
insb
pop
or
push
add
xchg
or
js
and
scas
mov
cld
adc
pusha
stos
add
or
add
and
testb
data16
loopne
fildll
adc
jnp
push
jp
xor
mov
inc
rcrb
adc
in
xor
cli
inc
ds
arpl
xlat
das
rorl
sbb
sbb
out
mov
lahf
push
orl
or
pop
jno
adc
adc
xchg
aas
pop
push
or
sbb
nop
cltd
inc
jmp
dec
filds
cs
cmc
rcl
add
mov
movsl
and
movsl
xor
dec
xchg
cli
mov
or
pop
repnz
jecxz
subb
aam
lds
add
push
dec
addr16
dec
add
and
cmp
mov
dec
push
add
add
dec
jle
add
lret
scas
xor
pushf
cwtl
aad
lret
and
xchg
jo
dec
cmp
cmp
push
push
rolb
inc
jp
push
adc
add
push
push
push
enter
scas
sbb
jl
hlt
xorl
popa
add
stos
aaa
pop
js
push
and
fsubl
add
icebp
push
xchg
dec
inc
dec
add
stos
cwtl
gs
testb
add
and
and
lcall
hlt
inc
sbb
scas
sub
mov
jo
mov
push
test
mov
clc
out
aaa
inc
ljmp
ret
int
ljmp
or
sbb
inc
ret
sbb
xchg
jno
add
jmp
dec
sbb
adc
addb
adc
call
xor
ret
jmp
xchg
in
stc
inc
or
xchg
addr16
movsb
xor
push
dec
mov
mov
idivl
test
dec
lcall
in
fldl
jmp
mov
rol
rorb
rorb
aas
pushf
inc
lcall
sub
push
jo
sbb
jne
aam
push
xor
addl
lea
mov
test
mov
pop
repz
dec
rorb
push
ljmp
add
imul
daa
add
dec
rolb
mov
xchg
cs
xor
inc
inc
push
lcall
lods
xorl
cwtl
je
pop
pop
popf
and
sub
inc
mov
inc
pop
push
jne
adc
push
jmp
mov
push
jo
and
and
xchg
stos
rcrl
jmp
xchg
movsb
mov
mov
cmp
mov
bound
inc
jnp,pt
js
test
push
inc
wbinvd
mov
pusha
sub
xor
imul
mov
cmpsb
or
arpl
scas
pop
mov
pop
xor
inc
adc
cli
adc
dec
xchg
jmp
xadd
cs
sbb
stos
mov
jecxz
dec
and
add
lret
or
imul
inc
cmpsl
dec
fwait
dec
popf
call
filds
call
inc
dec
mov
pop
js
popf
popa
aas
adc
in
popf
lret
adc
jne
imul
push
sbb
ret
pop
dec
orl
stos
jb
inc
push
or
cmp
sbb
mov
push
andb
push
sub
lret
sub
dec
cmp
mov
jnp
or
test
adc
lahf
mov
andb
dec
cmpsb
mov
sti
xchg
seto
mov
aam
pop
out
pop
repnz
jo
and
or
add
or
rolb
or
fldt
push
or
sub
adc
movsb
jo
xor
mov
sbb
adc
xor
lret
xchg
push
jmp
stos
mov
sbb
loope
dec
jmp
push
ljmp
stos
aas
and
add
add
jb
jno
cmpsl
loop
dec
xor
pop
repnz
push
addr16
mov
dec
sub
rol
mov
xchg
or
fwait
stos
bound
inc
dec
shr
jecxz
mov
pusha
push
mov
or
cmpsb
mov
adc
cmp
or
nop
out
inc
xor
xchg
xchg
mov
cmpsb
inc
lods
push
add
lcall
pop
inc
adc
adc
mov
push
dec
mov
mov
repnz
daa
outsb
std
mov
insb
loop
xchg
rolb
fsubp
test
test
xlat
cltd
mov
push
test
imul
cmp
lcall
imul
dec
mov
test
das
pop
push
inc
dec
pop
sub
cmpsl
xchg
inc
mov
add
dec
pop
add
test
sbb
push
lahf
pop
mov
adc
cmp
adc
inc
popa
pop
push
cmp
mov
or
adc
xorb
mov
push
pusha
push
mov
push
mov
call
ljmp
pop
cmpsl
xor
inc
jp
int3
sub
test
xor
mov
je
inc
push
adc
cmpsl
jno
in
ret
add
adc
mov
push
pop
dec
and
popf
inc
lcall
mov
add
push
movsl
adc
nop
mov
inc
add
jb
push
or
sub
mov
adc
adc
sub
mov
rcrb
loop
jecxz
les
xchg
loope
nop
pop
inc
or
push
lods
jns
xor
je
lds
adc
or
sub
int
adc
hlt
xor
and
and
sbb
lea
sbb
hlt
imul
xor
shrb
or
test
popl
adc
repnz
mov
or
push
mov
sub
sbb
fadd
mov
xchg
in
and
addr16
pop
fisttpl
push
xor
pusha
xchg
shrb
psrad
enter
aam
dec
jmp
ret
inc
daa
dec
ljmp
push
popf
jne
dec
aaa
xor
cmpb
aas
lahf
pushf
sbb
mov
mov
mov
pop
iret
in
shll
dec
push
add
rcll
xchg
test
stos
lea
sbb
xchg
adc
call
inc
pusha
push
daa
inc
adc
push
add
lea
push
xor
sub
push
pusha
bound
push
lcall
or
push
or
dec
mov
lods
mov
add
or
xlat
xor
add
in
sub
ror
movsb
repz
xlat
test
mov
xor
insl
scas
mov
xchg
ds
rcrb
lods
test
nop
push
adc
cmp
sbb
pusha
or
xlat
sub
or
sbb
fucomip
aaa
and
xchg
jp
inc
cmp
xor
test
cmp
mov
mov
push
mov
xchg
arpl
pop
and
lods
inc
or
sbb
push
rcl
inc
mov
je
lds
lea
sub
push
testb
sbb
push
jo
or
in
sub
cmp
loope
xor
rcll
cmp
xor
rcrb
adc
xor
push
and
and
repnz
leave
repz
pop
lahf
mov
mov
xor
mov
push
iret
test
add
jb
sub
stc
xor
or
xchg
add
mov
test
jecxz
pop
jne
xchg
ret
movsb
jno
cmp
sbbb
adc
pushf
add
mov
jne
dec
pop
pop
cmp
shll
fnstsw
or
pusha
and
push
fs
sbb
imul
mov
adc
inc
and
sbb
sub
push
xor
or
dec
ud0
mov
add
jno
cmpl
dec
mov
push
pusha
inc
sbb
mov
or
in
sub
mov
jno
test
test
call
add
adc
sub
nop
out
notl
mov
stos
cwtl
adc
cs
sub
movsl
or
in
lods
addl
mov
inc
enter
push
and
sbb
adc
mov
sub
insb
mov
test
xchg
scas
xor
inc
and
cli
or
cwtl
rorl
and
jne
adc
cltd
inc
add
mov
add
dec
add
inc
mov
or
leave
adc
pop
add
aas
das
shrb
cmp
leave
or
lret
or
lods
cmp
roll
popa
shlb
aam
mov
dec
push
xchg
scas
pusha
push
orl
pop
pop
pop
ret
cwtl
mov
add
je
add
adc
inc
mov
push
test
jno
mov
aad
dec
or
gs
nop
pop
inc
cmpxchg
ret
out
dec
jp
pop
mov
ja
push
movsl
inc
and
jg
daa
nop
ljmp
or
fbstp
test
mov
jae
loopne
mov
mov
inc
insl
les
shl
mov
sub
inc
or
rcrb
and
stos
push
and
cmpsl
sbb
and
push
test
jp
adc
lret
aaa
data16
or
subl
in
add
pop
inc
ds
cmp
test
les
xor
repnz
adcb
xchg
sub
outsb
mov
sti
inc
add
je
push
mov
push
jno
and
stc
push
outsb
mov
in
add
fildl
rclb
or
adc
or
es
roll
sbb
inc
subl
pusha
sbb
andb
dec
pop
inc
ror
and
scas
pop
fcoms
adc
sbbl
adc
xchg
icebp
scas
inc
inc
adc
push
xchg
push
jae
orl
cs
add
mov
loopne
sbb
cmp
push
add
movsl
jo
xchg
or
add
pop
addr16
nop
orb
xchg
cmp
cmp
imul
jne
or
fs
ja
pop
push
mov
push
and
inc
or
adc
aas
fnstsw
cwtl
data16
add
pop
dec
pop
rclb
sub
and
inc
movsl
test
addl
adc
inc
scas
xor
pop
test
ljmp
sub
fwait
test
je
out
loopne
stc
or
lcall
jo
mov
sub
in
dec
fdivp
xor
es
inc
inc
dec
shll
divl
subb
sbb
mov
jecxz
xor
and
add
je
bound
je
cwtl
jge
or
and
pop
cmp
or
xlat
bound
cmp
sub
xchg
out
jnp
stos
leave
xchg
mov
fldl
rolb
shll
cmp
test
inc
loope
add
mov
sahf
addr16
fwait
or
dec
xchg
test
or
xchg
in
cwtl
dec
add
subl
inc
inc
popf
cmp
inc
mov
mov
repz
and
rolb
adc
sbb
stos
shr
push
cwtl
cmp
or
push
aam
int
cltd
and
inc
or
xchg
inc
dec
pop
push
push
lods
fstl
stc
mov
aad
inc
lods
ss
and
test
out
mov
xchg
cmp
leave
push
cmpsb
push
or
loopne
cltd
sbb
das
push
mov
rorb
lods
movsl
add
sub
test
or
sbb
test
sub
dec
push
and
jecxz
ss
or
xchg
push
dec
add
push
dec
add
adc
fwait
dec
push
adc
orl
les
or
rorb
sbb
test
ret
int
adc
enter
test
or
push
insb
jns
and
xor
fld
sub
mov
ja
loope
xor
je
shrl
push
inc
cltd
dec
push
dec
sbb
or
cmp
ret
outsl
in
incb
add
dec
shll
pop
xchg
xor
xor
or
cwtl
aam
test
adc
mov
test
push
popa
in
aaa
or
cmpsb
pop
fcoms
pop
add
nop
jne
jns
push
and
or
adc
xchg
rorb
adc
add
mov
insb
add
movsb
sbbb
jmp
jp
dec
jb
lcall
test
andb
shlb
mov
xchg
jne
test
and
push
xor
xchg
inc
mov
andb
xor
xor
lret
sbb
cs
std
add
or
sub
pop
add
stc
dec
and
xor
xor
and
fldcw
addb
or
adc
and
rcll
add
push
repz
xchg
nop
mov
mov
mov
push
adc
cmpsb
fnstenv
adc
add
push
shr
lret
xchg
adc
mov
dec
xchg
int
dec
sbb
xchg
add
lret
mov
pop
rorb
nop
lods
xchg
fstpl
out
fisubl
loope
mov
add
leave
popa
shrl
stos
rol
jmp
test
js
push
adc
orb
mov
push
out
or
mov
or
add
pop
dec
das
cmp
movsb
test
mov
dec
rorb
icebp
clc
fs
dec
outsl
sbb
mov
sub
mov
cmpsb
xchg
and
in
sarb
xor
scas
mov
addr16
adc
add
jp
mov
pop
jns
dec
in
dec
pop
cmpsb
xor
xor
jns
cs
push
lahf
subb
or
and
pop
mov
inc
in
inc
mov
cmp
or
in
andl
fcomi
push
loop
jno
or
mov
pop
dec
push
cs
pop
mov
pop
xchg
adc
inc
int
je
add
mov
jo
sbb
jo
rolb
aad
push
adc
push
mov
and
mov
sub
mov
mov
aaa
dec
loopne
mov
xchg
movsl
rolb
add
adc
mov
add
adc
or
iret
leave
stc
and
movsb
xchg
scas
inc
sub
mov
add
addr16
shl
jae
push
mov
jge
rolb
push
sbb
stos
mov
push
mov
mov
mov
or
jo
mov
fidivrs
aam
subb
pop
mov
sub
lcall
xchg
int
pop
xor
mov
leave
mov
add
pop
xchg
mov
test
dec
add
cwtl
add
icebp
dec
fistl
daa
dec
or
lret
insl
xchg
dec
sbb
jae
gs
imul
mov
sub
xchg
or
cs
sub
outsl
sub
dec
push
imul
sbb
inc
pop
stos
es
pop
cmc
add
mov
sub
lcall
les
sbb
mov
dec
push
pop
fidivrl
rol
movsl
dec
nop
aaa
je
or
mov
jno
push
xchg
inc
jecxz
sbb
or
add
mov
push
std
imul
mov
jl
cs
pop
js
jnp
leave
or
push
and
jne
xchg
cmpsl
andl
xchg
out
sbb
lret
inc
adc
push
je
xor
imul
nop
mov
pop
rorl
and
jg
xor
mov
pop
jbe
xchg
cmp
inc
push
and
mov
and
rcll
and
mov
and
mov
dec
xor
test
icebp
adc
je
jno
repz
add
arpl
movb
addb
bound
leave
gs
stos
and
jno
xchg
and
push
sub
bound
loopne
sub
aaa
lods
cmp
add
add
push
cmc
sub
dec
jmp
pop
and
jae
pop
xchg
outsb
repz
dec
mov
cs
jno
mov
sub
mov
or
add
sbb
pop
mov
and
cwtl
sarl
xor
mov
or
sub
push
jo
or
dec
add
inc
or
outsl
add
mov
push
imul
add
add
cmp
mov
dec
push
mov
push
sbb
ret
add
rorl
xchg
mov
pop
aad
addl
pop
aad
addl
or
xchg
insl
or
jno
push
pop
xor
cmp
cmp
jmp
add
stos
or
test
test
push
sub
and
aaa
icebp
mov
pop
dec
sbb
lcall
pop
and
rclb
mov
nop
inc
mov
cmp
or
fstpl
and
test
imul
nop
int
dec
and
adc
adc
out
adc
test
imul
cwtl
call
insb
push
mov
mov
mov
sub
addr16
dec
call
flds
inc
stc
add
outsl
dec
jge
push
jge
add
adc
xor
adc
jns
cmp
pop
adc
xchg
jns
dec
dec
ret
je
lods
test
mov
aad
xchg
addb
mov
adc
adc
sarb
adc
shrl
ja
iret
inc
ljmp
push
xchg
sbb
mov
pop
shll
pop
sub
cmpsl
jno
mov
inc
adc
xor
xlat
fsubp
sub
push
imul
dec
inc
pop
sub
arpl
sub
xchg
cmp
or
fbld
pop
pusha
cmp
push
movsb
cmc
in
push
xor
outsb
fcmovnbe
push
fisttpl
add
push
les
add
jge
imul
pop
insb
sub
jo
mov
lea
jnp
push
adc
es
sbb
push
repnz
push
push
xchg
sbb
or
pop
pop
addb
cmpb
xor
push
test
jl
jecxz
or
mov
scas
scas
sbb
call
cmp
jmp
inc
sub
nop
xchg
pop
data16
adc
mov
pusha
push
adc
adc
jecxz,pn
js
sbb
add
lods
or
add
inc
pop
sub
push
xor
ljmp
push
or
jle
ret
rclb
repnz
shrb
adc
push
xor
push
add
add
popa
adc
adc
cmc
adcb
pop
shll
addb
cwtl
stos
shll
sub
aaa
arpl
or
aam
jne
ljmp
or
mov
mov
ljmp
pusha
adc
xchg
popa
pop
or
mov
inc
or
mov
loopne
ret
adc
cs
ss
jno
leave
and
inc
pusha
je
push
adc
mov
and
mov
sti
ja
pop
and
inc
mov
adc
sub
es
add
cmpsb
and
push
pop
add
sub
cmp
xor
xchg
cmpsb
push
pop
pop
orb
sti
push
dec
sbb
sub
xchg
iret
and
cmp
scas
fnsave
movsl
or
aaa
mov
add
arpl
xorb
lods
push
and
popa
mov
add
jmp
pop
push
or
add
or
test
mov
sbb
pushf
inc
lcall
sbb
add
or
enter
push
scas
cwtl
jg
jne
nop
mov
xchg
dec
addr16
stos
pop
xchg
movsb
adc
leave
or
adc
xchg
pop
loopne
xchg
add
and
dec
or
jl
mov
loopnew
xor
imul
mov
mov
test
add
es
jmp
pop
xor
rcll
enter
fwait
imul
mov
push
rolb
mov
inc
add
mov
xchg
mov
ret
mov
push
mov
pop
add
nop
inc
add
rcll
sub
mov
ret
mov
pop
nop
loopne
xor
mov
dec
gs
mov
pmuludq
sbb
call
int
test
push
lahf
mov
stc
and
loope
or
lea
mov
stc
dec
inc
cli
jo
and
inc
jmp
sbb
xchg
pop
xor
in
rolb
push
div
dec
xchg
or
xor
push
test
sub
loopne
mov
cmpsl
sti
ret
orb
jecxz
sbb
aad
dec
repnz
or
fs
lods
push
dec
pop
andb
or
adc
adc
xor
sbb
stos
push
lret
or
dec
sbb
movsl
adc
or
pop
rorb
jnp,pn
inc
sub
xchg
pop
mov
and
or
orl
dec
je
int
xchg
xor
xchg
sub
outsl
lret
or
outsl
jmp
push
xchg
sub
in
dec
and
adc
or
imul
or
lcall
push
pop
aam
loope
xor
mov
hlt
lds
mov
cmp
pop
mov
les
or
pop
adc
sbb
add
push
xor
pop
leave
mov
push
and
pop
sbb
inc
adc
lcall
inc
pusha
push
sbb
sub
shrl
sbb
cwtl
addr16
mov
in
ret
dec
sbb
int
and
test
sub
and
roll
adc
insl
xchg
xchg
test
movsl
mov
push
inc
es
aam
int
imul
test
cld
xor
pusha
loop
inc
pop
inc
and
and
repz
push
or
test
mul
insl
or
sbb
inc
mov
mov
sbb
leave
fsubl
mov
jae
mov
push
mov
mov
test
and
mov
push
xlat
outsb
aad
movsl
test
sbbb
xchg
mov
and
adc
leave
push
and
adc
imul
adc
xor
push
xor
imul
fdivs
add
loopne
sbb
cmpl
add
imul
jo
les
xchg
cmpsb
and
inc
sbb
mov
pop
je
addr16
and
mov
lret
cmp
lea
addr16
dec
pop
add
sbb
push
sub
pop
jmp
mov
shl
add
addb
cmp
adc
or
pusha
and
ret
sub
dec
xor
or
dec
xchg
mov
and
pusha
jne
xor
in
add
xorl
das
mov
adc
insl
sub
ljmp
pop
shll
fnstenv
cmp
in
sub
addb
loope
or
cmp
inc
repnz
ja
jo
or
add
stos
push
ja
adc
cs
inc
mov
dec
movsb
xor
or
lcall
sub
mov
add
xchg
sbb
xchg
inc
sub
dec
sbbl
test
xor
xor
push
inc
mov
lds
xor
or
mov
dec
lods
inc
sub
sub
in
add
dec
mov
xchg
es
dec
in
xchg
nop
test
ss
xchg
mov
xchg
push
and
addr16
add
cs
push
add
pop
push
jmp
movsl
mov
or
xor
inc
cmp
sub
jecxz
and
popa
sbb
sub
jne
cltd
mov
inc
test
mov
jp
push
int
adc
inc
test
mov
xor
sub
adc
adc
push
test
adcb
dec
xchg
loopne
adc
sub
jno
dec
iret
inc
pusha
push
daa
cld
into
mov
sbb
push
pop
push
leave
shrl
dec
data16
sbb
push
cmp
imul
push
sub
and
aam
mov
sti
sub
xor
and
xchg
movsb
es
pop
pop
addl
daa
push
daa
and
and
or
cwtl
arpl
push
movsb
pushf
xor
jns
inc
jb
xor
lods
inc
insl
inc
or
sub
mov
leave
adc
dec
and
mov
sti
shlb
or
dec
dec
xlat
jne
and
repnz
or
dec
or
scas
lea
cwtd
pop
jne
cmp
test
add
add
mull
sub
add
je
sbb
sub
inc
mov
rcl
out
adc
scas
xchg
sbb
leave
xor
lahf
adc
lret
inc
and
inc
add
repnz
jo
addr16
out
dec
les
pop
mov
orl
sbb
push
xchg
cmp
jne
sub
mov
push
adc
sub
outsb
xchg
xor
inc
test
push
pusha
stos
xor
pop
push
sbb
jns
ljmp
add
loop
jno
push
add
aas
xchg
dec
movsl
cwtl
xchg
inc
sahf
addb
xor
outsl
pop
rolb
or
mov
dec
push
rorl
aam
xorb
or
stos
bound
sub
and
sub
pop
mov
aaa
bound
jo
mov
sbb
fsubl
or
add
push
adc
cmc
pop
inc
sub
push
or
mov
inc
xor
mov
jle
inc
je,pt
sqrtps
adcl
pusha
cmpsb
lods
in
dec
and
mov
sahf
mov
cs
andl
aas
mov
mov
sbb
jnp
sbb
adc
jae
push
cmpsb
or
xorb
xchg
nop
bound
xchg
jle
dec
mov
and
adc
mov
mov
cs
xor
or
xchg
call
dec
inc
mov
lods
insl
lret
cmp
in
inc
pop
or
add
sbb
inc
push
andl
inc
jo
jmp
lea
add
sbb
pop
fdivr
pop
push
and
test
or
adc
adc
adc
jb
pop
xchg
lea
and
add
and
stos
xchg
jmp
xor
sbb
imul
xor
xor
lds
in
ss
push
loopne
add
and
jmp
inc
add
jne
addb
jno
imull
pop
mov
push
test
mov
jp
das
test
sbb
fxch
mov
xchg
popf
or
add
jg
lret
sahf
movsl
sub
xorl
fmul
aam
inc
sbb
xor
push
adc
mov
fcomps
mov
nop
aam
stc
dec
daa
xor
es
and
pop
push
add
cmp
xchg
xor
rolb
xlat
xchg
sbb
cmp
xchg
sub
xor
shlb
jns
sbb
adc
inc
bound
lds
sub
psrlq
pusha
dec
mov
and
mov
lcall
sbb
pop
test
mov
test
loop
mov
cwtl
mov
mov
ret
scas
and
inc
xor
mov
pop
mov
aam
add
loopne
mov
rcl
and
test
test
ret
imul
add
mov
mov
dec
sbb
nop
fisttpll
ja
add
jo
hlt
insl
subb
loopne
es
sbb
test
add
inc
dec
and
xchg
push
add
rcrb
push
enter
and
adc
mov
lahf
fistpl
lcall
dec
push
mov
enter
scas
addb
rcl
pop
push
inc
ret
sub
push
mov
jns
cmp
pushf
in
xchg
and
add
mov
je
mov
xchg
leave
shll
mov
dec
aaa
sbb
cmpsl
adcl
popf
add
pushf
xchg
dec
mov
test
adc
jns
test
imulb
inc
inc
adc
add
cmp
push
push
dec
nop
sbb
push
les
or
dec
test
or
mov
or
imul
adc
sub
es
orb
cwtl
dec
xor
aaa
insl
xor
popa
sub
test
bound
adc
or
and
mov
mov
push
adc
adc
add
sub
addr16
xchg
int3
rcrb
lahf
int3
push
mov
push
inc
and
push
popa
or
inc
ja
jnp
pusha
push
xchg
jns
add
inc
test
orl
and
push
sub
movsb
rolb
loopne
sbb
mov
and
imul
mov
movsl
gs
movsb
adc
jb
mov
test
js
sub
loop
inc
adc
test
pop
mov
pop
sbb
aam
mov
and
or
sbb
rcl
icebp
xor
jle
nop
push
cmp
nop
lcall
jl
add
sub
cmp
in
mov
push
lea
sub
lods
stos
push
add
push
pop
push
mov
fmull
inc
jns
shr
mov
push
and
inc
in
pushf
lret
pop
xchg
test
mov
or
mov
and
add
add
add
or
inc
inc
mov
popa
xchg
sbb
xor
cmc
pop
roll
lahf
pop
dec
jo
ret
ret
mov
cs
mov
inc
cmp
jns
or
movsl
or
sbb
insl
es
or
movsl
mov
mov
rcr
pop
xor
xchg
jecxz
mov
mov
inc
add
outsb
loope
ret
daa
stc
jnp
arpl
mov
repz
lods
incl
sahf
jmp
outsl
pop
iret
or
jecxz
xor
add
ret
xchg
jg
dec
jne
xchg
dec
in
push
mov
sti
sarb
or
movb
mov
jecxz
test
adc
mov
scas
and
and
jmp
leave
jge
inc
push
and
jo
test
mov
test
mov
ffree
add
addr16
cmp
push
mov
jp
add
add
icebp
in
inc
cli
mov
push
jecxz
xor
mov
addb
xlat
xchg
and
add
fnsave
orb
subl
das
and
aam
cmovge
data16
cmp
inc
lods
mov
jns
mov
xor
xchg
les
fwait
push
dec
addl
push
or
fmul
sbb
adcl
jb
push
cwtl
orb
pop
push
repnz
sbb
cmpsb
ret
sti
adcl
dec
je
cmpsl
or
xchg
adc
jne
in
or
in
test
test
add
cli
cmpxchg
cmpsl
insb
sub
subl
mov
dec
adc
adc
loopne
add
adc
add
lock
sub
jecxz
bound
and
or
loope
subb
adc
lods
inc
or
adcl
add
addr16
push
ret
cmpsl
jae
orl
or
xchg
mov
add
add
xchg
push
adc
pop
inc
inc
and
movsl
mov
dec
push
pop
scas
arpl
xor
loop
and
pop
pop
aaa
jg
mov
push
or
jns
divl
xor
imul
mov
and
add
inc
and
sub
lret
movsb
and
adc
add
fisttpl
pusha
mov
cmp
pop
cwtl
cmp
and
sub
das
xchg
push
icebp
dec
sub
pop
test
dec
inc
test
sbb
pop
inc
ljmp
xchg
or
mov
rcrb
push
inc
cld
roll
or
xchg
xchg
jo
neg
jecxz
jns
push
pop
adc
test
mov
pop
test
jp
xor
and
mov
nop
out
mov
fcomp
cmpl
enter
pop
adc
dec
rorb
sub
bound
cwtl
in
ja
cs
test
je
or
cmc
mov
das
loope
mov
adc
scas
pop
cmp
or
movsl
into
jne
lea
push
sarl
inc
popf
fbld
ss
mov
mov
sbb
or
xchg
cltd
sbb
add
push
or
mov
addb
aas
out
push
or
cmc
push
push
mov
nop
xchg
test
push
ficompl
sub
mov
scas
in
mov
lods
mov
cwtl
cwtl
stc
aad
test
rcll
xor
adc
popa
xor
pop
mov
dec
mov
loope
scas
inc
js
popa
lds
imul
nop
push
aad
cwtl
or
mov
mov
xchg
decl
pop
add
aam
push
mov
shrl
and
into
add
fmuls
mov
pusha
sbb
jg
dec
test
sub
dec
stos
add
mov
dec
les
lcall
pop
mov
and
inc
mov
mov
jo
inc
fdivl
jmp
and
mov
dec
and
mov
add
inc
mov
shlb
decl
jbe
jno
scas
scas
inc
adc
add
setl
pop
fwait
mov
sbbb
or
dec
bound
inc
push
adc
xor
pop
inc
inc
pop
adc
xchg
jmp
mov
add
jns
sub
pop
mov
ljmp
sub
push
adc
mov
adc
mov
sbb
mov
and
inc
subl
xor
or
mov
mov
ss
and
adc
dec
addb
jne
mov
test
je
cmpsl
out
push
mov
sar
jo
cmp
les
mov
sahf
test
cmp
mov
adc
sbb
int3
pop
pop
push
xchg
mov
sbb
adc
cmp
outsb
push
mov
cmpsb
xor
sub
mov
pushf
fiadds
pusha
add
cmp
mov
mov
push
mov
in
xor
push
movsl
xchg
add
ret
stos
adc
sub
in
add
popa
inc
add
dec
add
movsl
fdivl
jecxz
xchg
mov
loopnew
push
adc
mov
add
sbb
movsl
inc
mov
adc
push
or
xchg
jb
nop
jo
addr16
add
aam
loop
out
jno
mov
or
or
pop
arpl
pop
into
or
shll
stos
sub
insb
xchg
test
and
xchg
xlat
movsb
xchg
push
cltd
rorb
aam
and
shll
fiadds
mov
jb
dec
out
sbb
mov
cmpsb
xlat
shrl
adcl
adc
push
lds
ss
test
and
into
stos
in
mov
fbstp
push
pop
mov
pop
repnz
into
add
mov
and
pop
pop
outsl
xchg
rolb
adc
pop
lea
and
stos
cwtl
sbb
popf
cmp
xchg
stc
pusha
mov
push
loope
xchg
cmpsb
jmp
cmpsb
add
add
xor
and
or
lcall
push
data16
sbb
xor
aad
sbb
sbb
xchg
push
sub
or
push
adc
out
stos
mov
faddl
xchg
cmpsl
sqrtps
mov
dec
scas
add
mov
push
mov
testl
mov
pusha
ficomps
xor
or
dec
sbb
jl
cmp
add
jecxz
add
aam
mov
addb
orl
push
addb
jecxz
add
sbb
pop
shl
cld
mov
out
inc
mov
leave
inc
test
jne
dec
shrb
xchg
test
fwait
push
loop
adc
das
cwtl
sub
push
add
inc
adc
ja
xor
inc
movl
scas
cmp
mov
cmp
dec
xchg
xor
scas
sub
sti
scas
mov
pop
pop
ljmp
inc
mov
fldl
int
movsb
mov
xor
addl
or
mov
push
vmovupd
add
jo
mov
das
movsl
add
inc
jg
cmp
and
das
scas
scas
xor
pop
arpl
lds
icebp
or
sbb
and
pushl
outsl
call
das
xchg
dec
test
test
sub
mov
in
mov
pop
xchg
add
xchg
inc
cmp
adc
mov
push
stos
nop
pop
xor
test
add
xorb
orl
and
push
and
add
add
push
jmp
dec
cmp
xchg
sub
cli
sbb
rorl
aam
sbb
and
cltd
pop
loope
cmp
sub
pop
lret
rolb
pop
pop
add
lds
nop
xor
stos
adc
cmp
fs
movsl
inc
jmp
and
insl
inc
cmpl
ret
ja
cmpsl
ret
stos
dec
or
sub
stos
test
inc
stos
add
mov
aam
leave
push
and
loope
pop
lahf
mov
or
pop
lcall
push
or
xchg
loope
inc
stos
and
push
std
mov
or
daa
inc
shrb
jp
insb
xor
cmp
add
add
xor
xor
cmp
outsl
movsb
jno
adc
das
mov
shrb
adc
and
jae
dec
cvtps2pd
addl
or
imul
or
or
test
addb
xor
lcall
sbb
arpl
addb
xchg
mov
adc
inc
pop
frstor
mov
push
sub
inc
pop
test
push
xor
inc
sub
inc
xchg
sahf
cwtl
or
pushf
roll
test
xor
imul
push
sbb
adc
inc
push
call
mov
cmpsb
mov
sub
push
adc
dec
repz
daa
mov
or
pop
dec
sub
bound
dec
cltd
pslld
inc
jmp
mov
lahf
sub
aam
mov
out
int
sub
gs
dec
fidivrl
and
jo
dec
push
sub
mov
sub
loopne,pn
movsl
jl
push
xor
or
mov
inc
pop
push
or
xchg
and
jne
adc
adc
or
dec
test
scas
es
inc
push
add
mov
test
add
pop
and
movb
xor
push
pop
mov
jge
cmp
inc
test
into
gs
dec
and
fwait
jg
or
cmp
sub
movb
ret
sub
mov
push
and
cmpl
sub
sbbb
inc
cmp
xchg
mov
subl
jmp
movsb
xchg
sub
sub
xchg
fs
sub
xor
stos
jae
ljmp
test
movsb
mov
push
add
scas
pusha
ss
lea
inc
orl
andb
ret
or
push
xor
movsb
mov
outsb
push
sub
mov
ljmp
adc
and
push
fcoms
mov
cmp
ljmp
test
pusha
add
push
ret
mov
test
test
aaa
add
push
jae
xchg
test
lret
xchg
in
and
rorb
test
jl
shlb
cs
lea
or
mov
inc
pusha
test
dec
pop
xlat
add
mov
movsl
mov
ja
ja
fcmovnb
add
jmp
xchg
cmpsl
push
add
mov
es
or
push
add
mov
add
sbb
and
jb
inc
dec
add
cwtl
rcrb
mov
cmp
lahf
add
nop
pop
xchg
icebp
test
cmp
std
std
insb
daa
mov
loop
jmp
outsb
sub
mov
jne
adc
or
and
sub
push
scas
in
add
pop
jg
ret
jo
pop
outsl
jge
leave
inc
cmpb
jle
inc
mov
inc
pop
push
loope
movb
adc
add
inc
out
inc
cmp
add
add
adc
mov
shlb
lcall
or
movsb
cltd
dec
xchg
push
mov
dec
jge
lahf
mov
or
insb
or
mov
out
addl
or
jmp
add
repnz
popf
add
lods
nop
popf
rcll
push
inc
rcrl
or
mov
insl
jmp
frstor
add
nop
cmp
inc
push
aaa
popf
nop
jne
push
mov
pop
popa
add
lret
insb
xor
mov
or
ret
jmp
and
shlb
mov
aas
dec
test
adc
outsl
pop
adc
add
stos
nop
out
mov
pusha
addl
jne
and
mov
push
and
aad
sbb
xchg
sub
add
mov
push
xor
movsl
cmpsl
inc
loope
aas
mov
test
test
add
sub
sarb
icebp
or
pop
adc
inc
xchg
mov
pop
adc
dec
sahf
repz
ljmp
sub
stos
dec
jb
stos
inc
dec
les
adcb
adc
or
push
repnz
mov
bswap
test
dec
adc
imul
cmp
add
lahf
sub
push
inc
jnp
adc
xchg
or
add
mov
push
add
ds
pop
xchg
or
or
inc
aad
adc
add
imul
cmpsb
sbb
daa
xchg
fstl
push
flds
adc
mov
inc
push
or
cmp
push
je
es
mov
dec
aam
mov
gs
xchg
xor
inc
inc
mov
mov
inc
stc
add
adc
add
icebp
outsb
sbb
add
cmpsb
je
and
sub
push
inc
enter
jnp
lds
inc
sbb
jne
and
mov
xor
lcall
add
sbb
inc
xor
mov
mov
nop
mov
xlat
hlt
cmp
xchg
xchg
aas
mov
mov
add
loop
pop
dec
or
gs
mov
push
xchg
pusha
imul
test
mov
insl
add
lods
in
inc
pop
sub
dec
adc
or
stos
roll
mov
adc
inc
pushf
and
add
inc
test
pop
pop
sbb
cmp
or
and
or
mul
orl
sub
test
or
jl
fsub
rorl
add
jae
scas
push
add
inc
push
and
lods
ja
and
mov
or
mov
sub
stos
popa
popf
jns
add
rclb
push
test
adc
shll
mov
xor
cmp
sbb
icebp
nop
pop
add
sub
jle
sub
or
xor
xchg
sbb
dec
imul
mov
jmp
push
xor
mov
rcrl
pop
mov
add
pop
push
sub
and
or
inc
sbb
pop
inc
mov
cmc
sahf
rcrl
imul
dec
call
jo
xchg
mov
orl
decb
rcl
jo
dec
pop
call
jge
sbb
sub
je
sbb
push
add
mov
movsl
dec
sahf
adc
mov
sub
dec
pop
mov
push
mov
rcrb
add
imul
and
push
insb
dec
cmpb
lret
add
push
jg
cmp
movsl
xchg
or
pop
adc
mov
jo
xchg
or
into
cmp
int
push
loope
aad
mov
test
es
mov
sarl
sub
and
addr16
inc
lea
pop
mov
sub
movsb
pusha
icebp
add
xor
and
jg
pushf
std
or
je
or
mov
and
std
sub
pusha
ret
jle
add
push
inc
loopne
or
add
push
fcmovb
mov
mov
dec
rclb
inc
adcb
nop
or
mov
xor
xchg
mov
pop
aas
int3
addb
mov
push
jns
or
sub
add
orl
inc
enter
add
lcall
or
xor
pop
adc
xor
and
or
mov
inc
sub
cmp
insb
dec
jo
inc
mov
push
dec
scas
adc
pop
out
sub
cltd
inc
xchg
push
xchg
movsl
or
or
inc
sbb
mov
leave
test
mov
add
sbbl
pop
add
mov
add
test
or
and
cmpsl
add
and
stos
sar
push
clc
push
add
sbb
inc
xchg
testl
xor
outsl
cmp
xor
add
or
lret
mov
adc
insl
test
test
add
mov
leave
and
dec
or
xchg
push
cmc
divl
sub
inc
inc
mov
popf
xchg
xlat
xor
adc
xchg
adc
inc
sahf
jmp
xchg
cmp
subl
sbb
fldenv
test
push
sub
add
icebp
mov
add
or
jno
xor
push
cmpsl
push
inc
add
sbbl
movsb
dec
cwtl
insb
dec
shl
inc
jno
or
mov
movsl
lahf
mov
lods
or
fs
inc
xchg
fbstp
push
push
sahf
or
ficompl
insl
popa
ljmp
xor
enter
loopne
dec
rol
cmp
jecxz
imul
mov
rorb
push
or
repz
and
mov
cmpsb
lea
dec
sub
inc
add
les
add
inc
dec
shrb
popf
xchg
add
rorb
dec
mov
add
jecxz
imul
roll
test
fs
cwtl
xor
and
cmp
push
inc
sahf
daa
insl
pusha
mov
rcr
add
push
pop
adc
les
and
adc
add
dec
xorl
xor
in
pop
sbb
pop
inc
test
sub
jns
mulb
mov
mov
sbb
sub
dec
push
xor
fists
sub
leave
pop
cmpsb
xor
out
mov
or
rolb
sub
and
out
call
xor
inc
jge
sub
aaa
sbb
scas
es
adc
sub
adc
dec
pop
mov
lods
mov
shll
cmp
lds
cmpsl
add
insl
adc
push
push
and
ss
push
mov
imul
mov
pop
cld
aaa
add
mov
mov
xorb
mov
loop
loopne
mov
push
sub
and
xor
mov
loope
orb
stos
sbb
std
mov
inc
sub
les
imul
adc
rcl
test
sti
js
mov
movsl
stos
ret
push
push
insb
sbb
adc
daa
fsubs
rorb
sbbb
adc
aaa
sub
gs
fwait
rclb
fwait
lret
adc
fwait
mov
mov
adc
test
and
dec
roll
je
and
cltd
pop
movsb
and
and
and
inc
add
add
inc
push
cmp
sub
mov
cmpsb
inc
mov
jne
dec
movsl
dec
lds
stc
inc
push
imul
mov
insl
call
add
sub
or
insb
jno
push
pop
inc
rolb
dec
adcb
nop
subl
out
lea
push
dec
movsb
push
fnstenv
jg
les
sbb
imul
push
adc
mov
or
fldcw
je
adc
sub
add
sub
test
adc
xor
xchg
xchg
cmp
popa
icebp
insl
into
xchg
test
in
pop
ret
cmc
add
jno
pop
shlb
mov
lea
and
dec
iret
and
lret
punpcklbw
or
bound
inc
push
push
loopne
jno
adc
push
xchg
pop
gs
adc
outsl
mov
and
dec
or
add
pop
cmp
imul
and
je
adc
pop
mov
push
pusha
bound
jno
inc
jp
xor
mov
pop
mov
jl
int
sbb
jnp
test
in
fcoml
sub
cmpsb
sub
mov
and
add
cmpsb
dec
pop
push
fldt
imul
ret
fsts
sbb
push
loop
or
xor
xorb
adc
inc
cmp
out
cltd
add
mov
add
push
push
inc
jmp
adc
int3
idivl
add
lds
jnp
xchg
dec
jmp
mov
xchg
add
adc
add
jo
or
gs
adc
pop
test
pop
xchg
mov
out
and
pop
adc
cmp
push
mov
inc
xchg
fldcw
cmp
andl
xchg
push
inc
pusha
adc
add
sub
sub
pop
and
and
cwtl
and
cwtl
sbbb
push
xor
pusha
lcall
adc
mov
adc
xor
imul
negl
dec
sub
pop
xchg
mov
test
test
rol
arpl
mov
sahf
inc
cs
addr16
and
pushf
mov
add
mov
arpl
adc
jb
mov
push
add
inc
adc
pop
jne
fistps
push
movsb
mov
sbb
stc
lahf
mov
or
mov
or
outsb
add
scas
test
cmp
mov
and
lods
mov
mov
adc
xchg
cs
push
addb
cmpsl
adc
sbb
test
sarb
adcb
in
xor
jle
cs
aam
dec
sahf
mov
adc
test
nop
mov
xlat
sbb
add
lahf
push
add
cwtl
cwtl
sub
orl
jnp
jbe
iret
shlb
push
add
lcall
xchg
mov
subl
sbb
xchg
jnp
sub
cld
or
push
leave
or
out
das
repnz
sub
xchg
sbb
push
mov
movsb
repnz
add
lds
mov
jne
push
inc
mov
iret
nop
aam
push
xor
sbb
movsl
add
testl
adc
and
add
cwtl
push
leave
add
jno
in
xor
and
lods
mov
cmp
mov
in
jle
mov
sub
adc
sbb
movsb
pop
pop
rcll
mov
inc
mov
push
jg
inc
ret
sbb
aam
and
dec
xor
stos
xchg
ror
or
push
sbb
dec
and
xor
and
xchg
lods
jmp
add
mov
fmuls
rol
rolb
mov
xor
rclb
inc
push
pop
jle
add
xchg
out
or
dec
or
and
xchg
adc
dec
and
sub
xchg
pop
out
inc
sub
or
test
adc
dec
xor
xchg
inc
add
add
sbb
inc
or
mov
mov
push
test
repz
add
inc
jge
push
scas
inc
in
pop
adc
cmc
add
and
loopne
fidivrs
nop
out
jmp
in
inc
cltd
ret
mov
add
les
add
arpl
jbe
or
cmp
xor
add
push
xor
xchg
mov
imul
dec
or
xor
sub
add
mov
mov
std
lock
loope
jp
js
and
leave
xor
add
xor
add
adc
mov
add
cmpsb
inc
mov
lea
and
cmp
adc
xchg
test
cmc
dec
inc
or
xchg
inc
stos
fiaddl
push
seto
popa
or
xor
push
mov
aad
push
ffreep
add
lods
out
or
stc
mov
jne
ljmp
aaa
popa
adc
movsb
sub
int3
xlat
push
adc
xor
mov
stos
jno
movsb
mov
adc
ljmp
cmp
fs
mov
into
clc
cs
mov
inc
push
mov
cwtl
add
add
mov
lahf
inc
pop
scas
or
xor
clc
and
push
dec
dec
loope
iret
push
mov
std
add
xchg
mov
das
jo
mov
sub
jo
adc
mov
leave
cmovns
xchg
test
add
push
push
daa
repnz
sbb
sub
and
ret
test
fnstenv
jo
mov
lods
jmp
pop
loope
mov
pop
sbb
inc
inc
icebp
daa
jne
jb
les
subl
jae
sub
jp
mov
pop
jb
pushf
aam
push
mov
and
jmp
aad
mov
add
xchg
sub
xor
loop
popa
loopne
or
movl
lock
das
and
add
insb
adc
sub
or
je
lret
jmp
aas
push
or
in
push
cmp
mov
in
push
jl
ficoms
lea
xlat
xchg
cltd
and
dec
or
add
sub
scas
popl
xorl
adc
add
lcall
mov
dec
add
fs
jb
roll
mov
movsl
adc
xor
pop
dec
loopne
xor
cltd
jae
xchg
movsb
mov
movsb
mov
rcrb
sub
push
roll
in
cmpb
or
aas
test
pusha
inc
dec
jmp
mov
rcl
stos
aam
adc
push
push
mov
cs
leave
inc
mov
imul
adc
adc
lcall
and
adc
repz
add
sub
test
inc
pop
xchg
inc
add
pusha
mov
and
or
xor
aad
mov
test
cs
sub
add
fcoml
popa
aas
mov
mov
or
lds
adc
mov
fstp
shlb
mov
test
nop
dec
enter
pop
xor
arpl
add
scas
insl
add
adc
and
lea
fnstsw
les
fdivrl
inc
int
cs
inc
jo
xchg
cltd
inc
jle
test
jmp
aas
scas
add
test
adc
jno
xor
cmp
dec
mov
xchg
js
mov
test
cmp
push
sbb
push
cmp
ss
adc
lods
mov
sbb
dec
mov
inc
sbb
add
push
lret
das
push
pop
and
inc
jo
push
adc
add
and
cmpsb
adc
adc
mov
add
and
adc
aad
and
pop
stc
cmpsb
add
stos
testl
sbb
push
pop
add
and
es
je
aam
or
mov
addr16
adc
add
cwtl
inc
cmpsl
scas
cmp
mov
adc
mov
xor
sub
movswl
push
mov
jmp
add
pop
sbb
or
xchg
pop
mov
stc
adc
in
test
sub
ss
sbb
imul
dec
add
sbb
sbb
mov
mov
mov
repnz
in
push
adc
or
dec
sbb
lods
dec
xchg
and
les
xchg
add
scas
pusha
sti
mov
imul
dec
add
mov
inc
adc
and
push
les
inc
mov
add
or
adc
cmp
pusha
add
adc
cmp
ja
mov
push
or
aad
aam
sub
fs
adc
lret
mov
pop
rolb
adc
inc
add
mov
xor
xchg
arpl
sbb
sbb
dec
or
cmp
std
dec
xor
inc
fs
dec
lret
test
movsl
sbb
sbb
lds
mov
adc
test
adc
pop
xor
sub
es
and
nop
lock
xchg
and
bnd
int
and
mov
sbb
add
sub
sub
dec
xor
sub
sbb
fwait
orl
movsl
xor
and
jge
roll
dec
pop
cmp
das
lea
push
or
lahf
inc
rolb
xor
and
cmp
mov
xchg
add
sub
roll
pop
rorl
fstps
add
rcrl
add
dec
sbb
jno
xchg
and
mov
xorb
bnd
imul
mov
or
pop
xorb
mov
aad
push
out
cli
adc
or
hlt
and
xchg
and
mov
add
and
outsl
arpl
mov
add
push
popl
xor
mov
add
jg
sub
fs
sub
pop
out
das
or
cmp
cwtl
push
sbb
add
pop
inc
imul
push
loope
and
adc
imul
pop
mov
xor
and
jne
stos
xchg
jo
and
nop
int3
lahf
sub
gs
jne
and
icebp
fnstcw
sub
push
or
xchg
divl
aam
addb
test
clc
xchg
push
sub
cmp
sub
mov
dec
enter
pushf
cld
inc
push
test
add
and
popa
dec
pop
pop
jecxz
test
and
cwtl
inc
icebp
add
test
gs
pop
pop
pop
inc
jp
push
sbb
push
pop
add
fcomps
adc
iret
andb
jmp
xchg
xor
push
stos
cmpsb
or
aad
add
fisttpl
dec
adc
pop
repz
dec
pop
and
les
xor
mov
aas
sbb
pop
and
or
aad
xchg
cmp
mov
je
pop
jecxz
adc
sub
insb
loope
fwait
and
xchg
push
orb
inc
pop
inc
and
xchg
add
push
cmp
xor
fdivr
adc
dec
insl
push
push
adcb
jl
adc
sub
adc
xadd
push
or
inc
sub
inc
inc
ret
lcall
dec
bound
adcb
mov
pusha
movsb
xor
or
mov
adc
add
adc
frstor
add
mov
stos
movb
lcall
cmp
mov
inc
xlat
dec
or
lds
jns
add
bound
push
or
xor
add
mov
test
jo
test
loop
dec
bound
movsb
add
adc
xor
and
pop
push
push
xor
sbb
ret
rcr
sub
inc
pusha
icebp
sti
cmp
mov
scas
pop
popf
std
add
outsb
ret
ret
lcall
imul
and
jge
fisubl
adc
lea
or
inc
sub
scas
sbb
dec
sti
fcmovnbe
inc
aaa
mov
or
pop
jo
add
lret
sub
and
or
push
dec
sub
mov
loope
cs
adc
lret
and
adc
push
bound
pop
push
fdiv
mov
popf
add
sarl
pop
lds
pop
mov
mov
xor
hlt
add
or
ret
nop
and
rcll
lret
push
enter
and
cmp
sbb
and
or
add
inc
lds
inc
xor
cmp
push
jo
add
sbb
fwait
lds
nop
stos
xor
add
or
add
dec
jmp
dec
sti
int3
and
push
mov
fimull
push
mov
bound
sub
ret
fnsave
add
and
add
add
stc
xchg
push
sub
adc
mov
sbb
xor
movsb
xchg
mov
or
sub
inc
add
adc
lret
inc
dec
and
jno
sbb
test
mov
rolb
xchg
inc
sbb
pop
pop
test
add
test
test
mov
xor
jne
and
jg
add
lcall
inc
inc
add
sub
pop
adc
push
loopne
js
outsl
inc
add
dec
out
out
rcl
movb
jbe
lods
sub
hlt
ret
and
inc
mov
rcl
adc
call
and
jo
xchg
xchg
popa
lea
sub
sti
les
or
dec
add
imul
sbb
push
mov
and
adcl
es
jbe
xchg
cmp
jo,pt
pop
push
add
cmp
negl
push
repz
mov
pop
pop
mov
sbb
jmp
rolb
adcl
jbe
adc
add
dec
fstl
and
stos
imul
sbb
sbb
push
inc
or
aas
jg
add
push
loopne
mov
pop
aaa
mov
adc
std
pop
push
adc
movlps
aam
popf
gs
or
cmp
fwait
movsb
lock
xchg
pop
lods
stos
shlb
mov
cmp
mov
inc
mov
movsb
adcl
arpl
add
jno
push
cwtl
dec
stc
fldt
outsb
jmp
cmp
gs
sub
and
push
and
and
cli
iret
push
test
push
lahf
aaa
sub
imul
pop
mov
or
addl
or
push
inc
or
cltd
cmp
push
scas
mov
lcall
cld
lret
jmp
mov
js
inc
test
inc
sub
dec
or
cmpsb
popa
lods
and
cmpl
inc
imul
ret
test
add
je
in
or
jnp
xchg
sbb
lods
pop
repz
push
and
rcll
lock
push
or
sub
insl
pop
ss
pop
movsl
or
lcall
sub
cmp
xor
mov
xlat
test
popf
or
xorl
push
sbb
dec
shll
push
pop
out
xchg
adc
mov
or
add
enter
orl
inc
test
aam
add
mov
enter
add
pop
shll
or
cs
ljmp
xlat
js
adc
add
dec
inc
leave
push
mov
pop
mov
xor
fiaddl
inc
jae
mov
inc
adc
sahf
test
xchg
adc
rclb
fwait
dec
shlb
imul
enter
cmpsl
aas
cwtl
test
cwtl
mov
ret
fbstp
pop
sbb
mov
push
push
ds
mov
lods
notb
push
aad
punpckhwd
inc
imul
and
xor
cmp
add
mov
js
xor
xchg
add
add
sbb
xor
cmpl
stos
push
push
sub
mov
push
sub
and
or
ja
imul
sub
xor
iret
mov
pop
idivb
adc
scas
sub
and
pop
and
rclb
xchg
and
xlat
jns
mov
jmp
and
mov
nop
inc
ss
ja
sub
pop
fisubl
inc
and
jb
jecxz
rorl
pusha
xchg
and
mov
cmpsb
sub
aas
dec
movsl
inc
add
aam
clc
test
adcl
pop
adc
inc
and
push
xchg
or
adc
pusha
test
lds
lret
insb
push
add
sub
ret
push
mov
push
leave
movsl
and
fimull
xlat
mov
dec
inc
dec
adc
adc
imul
cmp
and
call
stos
xchg
mov
aad
or
dec
inc
push
adc
push
xor
movb
xor
pop
jno
pop
ss
mov
cmp
sub
mov
push
push
sub
hlt
and
jo
cmpsb
adc
lods
rolb
adc
pop
adc
or
stos
mov
aad
or
aam
nop
xchg
test
in
rcrb
inc
xor
bound
rclb
cmpsl
aam
adc
gs
sbbl
mov
in
add
xchg
mov
dec
mov
lcall
lea
sub
add
shl
ja
test
jo
ja
or
and
add
dec
push
pushf
and
in
call
inc
adc
xor
and
lret
push
adc
push
adc
dec
push
and
inc
or
mov
loop
test
push
pop
xchg
ror
movsb
push
push
sub
ret
adc
xchg
sub
mov
stos
jne
push
les
ljmp
xor
pusha
pavgb
add
xchg
pusha
dec
sbb
or
enter
push
movsb
les
loopne
sbbl
jle
inc
mov
inc
adc
mov
mov
mov
mov
int
jns
add
lods
stos
push
mov
int
lods
inc
out
lds
pop
and
call
xchg
movsl
adcl
movsb
test
sbb
xor
clc
xlat
test
adc
sbb
test
sbb
adc
call
xchg
xor
jnp
and
push
jns
rclb
and
xchg
dec
pop
xor
mov
pusha
mov
mov
imul
jns
stos
cs
shll
popa
imul
jg
xchg
add
sub
ja
and
sub
inc
sub
mov
aad
inc
push
adc
sbb
movsb
mov
push
xor
pop
mov
jmp
inc
dec
test
mov
jne
ret
movsb
push
vmovaps
sbb
and
add
and
or
insb
adc
push
inc
adc
idivb
bound
xor
imul
rcl
test
lret
das
pushf
adc
adc
and
dec
daa
add
mov
ljmp
fs
jne
cmpsl
test
dec
adc
lret
add
cmc
add
mov
in
dec
inc
or
cmp
stc
add
add
jne
xor
bound
add
or
leave
ret
xchg
ljmp
mov
pop
xchg
jno
movsb
dec
cwtl
imul
sbb
add
push
test
sarl
jae
leave
aam
adc
vmovaps
inc
sbb
or
mov
dec
mov
sub
notl
inc
adc
push
cwtl
test
lds
inc
bound
loopne,pn
jnp
xor
fcomps
movsb
inc
xlat
andb
add
lea
sbb
mov
adc
add
mov
adc
jo
sub
aad
mov
rcll
and
outsl
add
or
rcll
mov
rorl
pop
and
imul
xlat
inc
or
icebp
adcb
icebp
scas
and
sbb
sbb
lock
xor
adc
xor
stos
cmc
inc
pop
push
pop
add
add
xorb
orb
adc
mov
or
sbb
add
pop
and
rcrb
mov
lahf
xor
xor
add
loope
les
imul
add
inc
int
int
je
push
aad
test
scas
shld
mov
push
adc
push
dec
loope
adc
inc
xchg
je
lods
sub
or
and
inc
rolb
iret
cltd
gs
adc
xorl
push
add
pop
pop
sbb
or
xor
xchg
repz
xorb
rolb
mov
pop
pop
xor
insb
inc
sbbl
mov
pop
cmp
sbb
popf
push
or
xchg
mov
test
movsl
add
movsb
mov
and
js
mov
lods
movsb
rcrl
add
mov
sbb
sbb
and
pop
pop
inc
xchg
add
cmp
and
xchg
mov
jp
shll
arpl
dec
adc
inc
out
adc
mov
xor
cmp
pop
sub
notl
dec
dec
sub
sbb
xchg
inc
popa
sbb
and
push
cmp
mov
cmp
xchg
mov
and
nop
and
shll
or
xor
rcrl
mov
lea
mov
cwtl
fistl
sbb
rolb
push
push
and
mov
jecxz
mov
add
popa
sub
push
or
push
inc
lret
movb
inc
ret
inc
xchg
cmc
add
orl
das
mov
and
add
sub
addb
mov
mov
adc
jo
inc
or
and
aam
int3
cmp
test
cmp
xchg
mov
shrl
mov
inc
xor
sub
mov
or
xchg
lds
jge
push
dec
sbb
adc
adc
adc
mov
sub
mov
es
jge
adc
add
cmp
popf
lods
adcb
pop
test
es
fildll
or
xchg
je
roll
je
or
popf
movsb
dec
js
test
bound
add
stos
or
mov
jno
inc
and
into
cli
and
push
and
dec
adc
hlt
aad
add
add
sbb
add
adc
inc
test
rorb
stos
roll
inc
push
sbb
jno
addl
and
xor
movsl
add
hlt
and
test
movsl
mov
mov
lds
or
popa
mov
push
push
nop
xor
jmp
enter
dec
movsl
mov
pop
cmp
adc
xchg
push
loope
rolb
sbb
and
mov
and
add
pop
shlb
inc
xor
bound
inc
add
dec
push
clc
jne
xchg
scas
mov
jns
mov
add
sub
pop
add
mov
dec
sub
loope
xchg
jne
add
popa
nop
shrb
dec
shr
popa
add
push
subl
or
add
xor
bound
xor
shlb
pop
adc
mov
xor
mov
mov
add
pop
leave
inc
xor
mov
xchg
je
or
push
dec
pop
adc
add
std
test
or
pop
movsb
loopne
gs
dec
ret
xchg
bnd
aam
push
jle
dec
stos
inc
pop
in
add
shll
add
inc
xor
lods
sub
pop
pop
fisubrs
push
aaa
xchg
mov
fimuls
or
cmp
xchg
add
popf
mov
cbtw
mov
lret
xor
ret
jmp
mov
xchg
cmp
lret
ficompl
aaa
push
push
pop
adc
movsb
mov
or
or
mov
test
push
sbb
ljmp
inc
push
mov
stos
addl
xorl
pop
dec
out
test
and
lcall
add
pop
dec
ljmp
or
adc
add
sbb
xor
mov
jne
mov
ret
and
add
sbb
dec
add
mov
push
and
dec
adc
sbb
lds
xchg
pop
add
sbb
and
pop
sti
gs
mov
test
aas
sbb
sbb
push
add
lret
adc
dec
xchg
dec
push
fwait
or
adc
sub
jecxz
mov
ret
add
jns
add
pop
lret
icebp
push
inc
or
mov
loop
mov
adc
push
fldenv
add
test
push
cmp
xchg
and
jmp
add
xor
loopne
in
lcall
inc
test
xchg
loop
dec
pop
aad
pop
addl
add
movsb
or
xor
add
mov
das
push
pop
adc
test
mov
test
lret
testl
xchg
push
add
mov
imul
add
mov
push
inc
push
jmp
or
cwtl
mov
adc
xor
jne
sbb
add
jbe
inc
repnz
mov
enter
test
xor
das
or
mov
test
xor
jnp
inc
push
sub
xchg
or
rorl
and
adc
pop
add
lds
loope
std
das
add
ror
mov
lods
adc
pop
lret
sub
sbb
jns
rolb
test
movsl
adc
or
and
enter
rorb
push
xchg
or
fwait
sub
aas
test
sbb
gs
les
dec
adc
add
dec
aam
jp
cmp
or
add
dec
testb
push
rol
xchg
pop
mov
inc
adc
movsb
add
mov
fdivp
add
mov
adc
push
pop
icebp
imul
movsb
mov
jns
add
test
or
jno
popl
jb
add
leave
je
dec
xchg
dec
xchg
je
dec
lret
xchg
jne
inc
xchg
cmp
xchg
mov
jns
pop
dec
add
and
outsl
out
mov
mov
in
and
xor
and
jo
inc
movsl
push
jmp
mov
mov
stos
inc
xor
loop
in
sub
sub
mov
dec
adc
jecxz
mov
in
xor
or
mov
add
aas
inc
pop
hlt
lods
stos
fs
xchg
mov
inc
dec
cmpsl
push
inc
sub
je
outsb
mov
sub
xchg
xor
rorl
movl
push
ret
adc
push
add
pop
inc
int3
xor
repz
test
jno
push
push
pop
xor
or
inc
push
jge
pusha
adc
add
cmpsl
nop
popl
inc
in
imul
test
aad
sub
or
dec
imul
mov
lods
push
sub
adc
testb
pop
insl
test
or
ror
iret
and
jnp
out
and
adc
xor
or
repnz
mov
mov
and
in
scas
es
in
pusha
adc
les
loopne
mov
mov
push
inc
jae
lahf
inc
inc
sbb
dec
outsl
pop
call
and
ret
sub
sbb
adc
lods
push
rcrl
test
adc
mov
stos
adc
ss
or
adc
xor
sbb
and
stc
adc
xor
stos
lea
sub
pminub
lods
pop
js
ret
add
cs
adc
and
stos
jo
pop
pop
mov
xchg
imul
dec
sub
rclb
sub
les
int
aam
adc
push
add
mov
pop
mov
and
dec
or
cmp
or
shll
sbb
or
mov
or
and
sarb
pop
daa
mov
add
xchg
inc
sub
mov
push
xchg
push
add
mov
repnz
aam
add
add
jl
movsb
scas
fxch
add
and
mov
xor
pop
xchg
xor
test
adcb
popf
adc
adcb
test
push
lea
push
pop
add
pop
push
and
dec
sub
test
mov
sbb
xor
jnp
dec
add
jae
popa
test
andb
push
mull
cltd
lods
mov
push
popa
stc
aas
jno
mov
das
stc
jne
xchg
adc
insl
push
xchg
ss
add
add
movsl
inc
adc
imul
cld
add
mov
pop
arpl
fwait
ljmp
mov
pusha
xor
sbb
pop
das
add
add
jne
inc
test
inc
mov
insb
and
or
pop
call
lods
sub
cmp
push
dec
inc
cmpl
pop
add
addl
movb
and
add
inc
inc
aas
mov
or
sti
push
xor
inc
loope
les
in
ja
loop
inc
mov
mov
sub
jb
movsb
sub
ret
and
es
aam
push
sti
addb
cltd
push
xchg
dec
loope
cmpsl
sbb
adc
icebp
pop
sub
pusha
cwtl
mov
ss
enter
inc
add
xor
out
stos
cwtl
mov
mov
xlat
inc
dec
xor
mov
adc
pop
sub
mov
flds
push
nop
in
lea
add
shrb
adc
push
leave
es
or
orb
pop
mov
or
add
or
clc
cmp
lods
and
lds
sub
push
push
cmp
xor
and
ret
add
ss
xor
sub
enter
cmp
inc
mov
pop
sbb
popa
test
and
or
push
test
adc
or
or
stos
mov
sti
xor
orb
adc
push
aam
mov
rolb
lcall
cmpsb
mov
and
mov
ret
fdivl
mov
adc
push
mov
and
or
xchg
and
add
inc
lds
jl
aaa
mov
push
mov
mov
mov
dec
push
push
les
mov
pop
aaa
dec
push
xor
cmp
push
int3
adc
sbb
add
dec
repnz
rcl
xor
cmpsl
pusha
dec
push
shlb
add
fistl
inc
gs
push
inc
sbb
inc
or
test
mov
or
bound
dec
lods
mov
dec
add
push
inc
lock
sub
leave
andb
and
popf
xor
lds
stc
dec
xchg
lods
dec
mov
push
push
mov
xchg
mov
and
mov
in
add
xor
rorb
jbe
xor
xchg
shlb
mov
add
mov
lahf
rorb
sub
popf
sbb
add
gs
add
push
push
mov
adc
inc
dec
push
out
inc
inc
stos
inc
pop
sbb
pop
faddl
and
pop
add
rcrb
mov
mov
and
andl
mov
xor
add
adc
test
xor
dec
push
stos
loop
xchg
loopne,pn
pop
fs
adcb
dec
sbb
cld
icebp
sub
movb
adc
pop
test
add
add
repnz
insl
cwtl
adc
mov
cmp
dec
inc
or
inc
xchg
in
xchg
or
xchg
and
cwtl
int
add
jo
add
adc
push
sbb
jge
or
dec
sub
inc
jae
cmpsl
movsl
sub
arpl
jecxz
mov
lcall
push
xor
roll
lds
or
ret
subl
incl
adc
leave
cmpsb
or
pusha
lret
push
dec
in
push
add
add
dec
pop
or
mov
jp
bound
inc
pushf
stos
test
xchg
adc
fcomip
xchg
insl
xor
mov
add
mov
add
xor
jmp
mov
lret
xor
imul
xor
adc
xor
or
test
and
sub
mov
adc
leave
mov
adc
xor
jne
ret
mov
stc
sbb
xchg
pushf
rclb
imul
outsb
or
push
and
adc
fistl
out
sbb
stos
mov
loopne
aas
jns
push
push
sbb
test
fstl
cmc
or
dec
xchg
mov
inc
pop
inc
add
inc
add
cltd
repnz
fld
jb
ja
outsb
push
push
bswap
lcall
add
scas
ja
and
hlt
xchg
and
pop
test
add
push
out
inc
je
pop
inc
pop
inc
stos
ret
add
push
subl
sbb
sub
xchg
inc
add
mov
movsb
mov
flds
test
ret
and
jmp
inc
pop
mov
add
movsl
sub
cmpsb
sar
lea
enter
xchg
xor
aam
push
adc
mov
lods
mov
aaa
and
add
push
repnz
or
dec
push
and
cli
mov
add
xor
cmp
push
or
flds
adcb
notb
shrb
or
pop
or
push
scas
data16
sub
shrb
add
mov
adcb
mov
leave
push
push
lea
subl
ret
xchg
cmp
xor
inc
add
sbb
adc
push
addb
add
test
andl
xorl
inc
pop
dec
fisttpl
inc
sbb
test
stos
mov
andb
push
int
cs
or
scas
cld
adc
and
repnz
popf
hlt
imul
or
mov
jb
adc
rorb
test
push
rcll
push
mov
xor
sub
test
pop
jge
gs
bound
xlat
cmpsl
sub
inc
jg
inc
imul
and
or
adc
cwtl
and
dec
jno
scas
mov
jb
xor
add
mov
movsl
push
and
add
jne
or
inc
or
cmp
mov
stos
sub
push
rorb
add
sbb
sbb
data16
xchg
xor
popa
iret
es
add
les
shll
adc
dec
push
pusha
subb
and
leave
mov
dec
inc
subb
xor
and
jmp
xchg
add
ljmp
dec
xor
and
and
dec
shrb
cmpsb
mov
xchg
dec
push
push
fldenv
mov
dec
cltd
aas
loopne
mov
xor
cs
sbb
and
sub
test
or
jecxz
inc
or
and
ret
and
adc
add
test
cmpb
lcall
or
pop
jne
add
mov
and
test
add
jge
inc
push
sub
lea
push
sbbb
rcrb
sub
std
mov
mov
test
or
je
and
lods
add
lcall
and
and
dec
xchg
add
fnsave
gs
xchg
and
mov
add
imul
ror
mov
adc
jne
add
loope
xor
mov
leave
mov
gs
xorb
dec
fsubrs
xchg
nop
xorb
imul
mov
sub
pop
adc
add
psubusw
add
push
xor
add
arpl
les
and
dec
adc
jle
pop
adc
test
sbb
sub
jno
xor
sbbl
mov
dec
jno
add
xor
test
roll
xor
pop
cmp
and
or
and
push
jne
adc
les
fstpl
rclb
mov
in
mov
in
sbb
icebp
popa
cmpl
mov
inc
jmp
pop
push
pop
adcl
lods
movsl
jo
movsb
icebp
sub
repz
cmp
xorb
dec
push
inc
and
pushf
shl
mov
push
push
xor
adc
adc
push
rclb
add
mov
pop
xchg
push
or
inc
and
sbbb
arpl
cmpsb
stos
xchg
fbstp
das
into
sbb
and
mov
mov
les
repz
rolb
and
es
divl
adcb
jno
in
movb
dec
in
mov
test
xchg
push
dec
movsb
push
addr16
adc
nop
sub
add
push
orl
add
arpl
movsb
nop
pop
or
pop
sbb
or
lds
xchg
mov
mov
rep
mov
mov
dec
and
test
xchg
or
inc
add
or
and
and
inc
xor
pop
push
xor
xor
and
sbb
pop
les
mov
push
popa
add
push
push
push
and
add
inc
dec
das
xchg
xchg
fildl
sub
loop
push
inc
jge
mov
pop
jno
sub
adc
mov
adc
adc
iret
jb
push
insb
add
cmp
adc
ret
xor
add
dec
aam
fildl
bound
pop
sbb
pop
xor
add
dec
xchg
xchg
xlat
or
sub
pop
mov
dec
movsb
jmp
ret
dec
push
jno
mov
dec
xchg
xor
xor
stos
or
sbb
or
mov
sbb
movsl
and
add
mov
sub
jne
mov
add
or
bound
nop
addl
xchg
movsb
mov
iret
mov
push
jmp
mov
sub
dec
loopne
movsb
mov
imul
scas
cmpsl
stos
scas
rclb
jno
pusha
sub
sti
pop
mov
add
inc
or
mov
ret
pop
nop
outsl
and
dec
xchg
push
fdivrl
add
jge
test
mov
adc
dec
les
push
push
imul
cmp
lods
and
aad
adc
pop
mov
mov
and
sbb
aam
sbb
pusha
or
cmpl
lcall
mov
dec
jmp
push
sub
mov
inc
xor
mov
add
inc
push
call
lds
and
inc
nop
daa
mov
xchg
sub
add
or
aam
or
out
inc
sbb
or
stos
mov
add
scas
sbb
aaa
and
jno
std
arpl
loop
fwait
or
inc
loope
sbb
es
adc
rcrl
sub
mov
add
push
or
inc
leave
leave
inc
enter
int
sahf
dec
test
xor
cmp
lret
sbb
jo
adc
mov
lods
call
les
push
mov
mov
inc
xchg
movsb
or
aas
mov
mov
xor
cltd
or
adc
xor
or
adc
pusha
and
pop
push
add
add
pusha
jnp
adc
mov
add
jno
or
xchg
dec
nop
ret
mov
xor
and
int
in
sbb
add
inc
pusha
and
pop
mov
andb
inc
adc
sbb
xor
sub
add
xchg
add
mov
addb
call
inc
adc
sbb
and
pop
push
inc
aas
mov
pushf
xor
dec
jno
shrb
dec
sub
arpl
push
adc
xchg
mov
insb
dec
xchg
aad
aad
mov
pushf
mov
out
adcl
cltd
cwtl
or
or
fidivl
pushf
xchg
bound
inc
xor
mov
les
or
nop
add
xor
int
and
jmp
sbb
mov
stc
and
stos
pusha
lret
add
inc
cwtl
test
push
inc
cwtl
push
push
hlt
pop
pop
inc
sub
or
in
xchg
push
push
imul
push
mov
test
add
add
dec
push
xchg
xor
es
mov
xchg
mov
shlb
mov
loope
adc
rolb
je
add
add
mov
cmpsb
fs
daa
fwait
add
shr
outsl
and
add
subl
rclb
fwait
or
dec
and
xchg
sbb
or
sbb
and
popa
arpl
mov
cwtl
adc
xor
sbbb
inc
mov
mov
bound
or
jmp
mov
pushf
aas
test
push
repnz
push
xor
dec
cwtl
pop
in
cmp
add
pop
xchg
add
xor
inc
sbb
mov
mov
mov
inc
jmp
inc
lahf
popf
movsl
test
adc
xchg
pop
adcb
mov
dec
mov
lods
ss
cwtl
add
push
or
mov
push
sti
cld
jnp
add
arpl
roll
cmpsl
pop
sbbb
fcompl
sti
arpl
or
dec
push
pusha
add
mov
inc
orl
stos
lret
xchg
xor
dec
add
push
int3
inc
sbb
sub
loopne
bound
add
and
cwtl
push
les
sub
mov
push
adc
scas
repz
in
jo
and
cmpsl
xchg
adcb
xchg
es
popa
aam
mov
mov
add
rcll
rolb
roll
fs
cmpsl
push
and
imul
insl
aas
mov
stos
mov
les
mov
dec
in
sub
and
out
add
dec
pop
jmp
push
inc
add
rcrl
or
test
inc
or
test
dec
inc
aaa
insl
fwait
sub
mov
mov
popa
jmp
cmp
push
fprem1
rolb
mov
and
add
gs
jb
cs
pop
sbb
cmp
jae
xor
stos
leave
xor
cmp
je
pop
cmpl
add
pop
mov
cmp
subb
ror
pop
push
add
insl
nop
jmp
and
adc
adc
mov
test
push
mov
loopne
pop
mov
nop
je
sub
shlb
lret
gs
sbb
pusha
mov
inc
inc
add
or
push
add
dec
inc
mov
and
or
add
lods
popa
sbb
adc
mov
xchg
cmp
adc
and
subb
add
push
popa
add
je
xchg
adcb
mov
adc
mov
lds
sbb
lea
push
roll
std
push
mov
movsb
mov
mov
test
jnp
addb
push
inc
jne
imul
les
nop
addr16
rorb
or
cmpsl
add
sub
cmp
daa
push
add
mov
imul
add
sub
mov
dec
mov
push
adc
sbb
pop
sbb
adc
and
in
add
xchg
inc
imul
add
pop
sbb
dec
ret
add
adc
or
imull
or
lcall
mov
movsb
cmp
pop
mov
and
sub
test
mov
cmp
xchg
adc
fstl
add
adc
adc
add
test
nop
movsl
cmpl
jecxz
mov
inc
sbb
lcall
movntps
push
cltd
sar
mov
xchg
shlb
adc
add
repz
invd
mov
cmp
inc
jae
mov
pop
push
sbb
add
rolb
sub
daa
cmp
push
push
push
pop
pop
nop
xchg
sbb
mov
jmp
sub
sub
cmp
loopne
xor
xor
dec
cltd
mov
movsb
adc
pop
mov
adc
and
dec
or
cmpsl
lods
sub
pop
xchg
addb
sbb
or
pop
and
mov
xchg
mov
gs
xchg
xchg
xor
test
shlb
add
dec
push
cmp
inc
pop
push
pop
xor
fldl
lods
and
and
jl
add
ss
pop
inc
and
or
inc
mov
loopne
and
dec
xor
push
mov
dec
mov
adcb
mov
pusha
xor
and
add
push
adc
out
mov
pop
and
inc
and
bound
push
add
nop
arpl
rorb
fmuls
pop
dec
inc
and
pop
pop
aam
xor
push
les
mov
popl
fcoml
cwtl
sti
and
adc
pop
mov
imul
outsl
sbb
rolb
mov
orb
loopne
fdivl
or
pop
lea
or
add
and
push
push
lods
inc
lret
push
sbb
adc
cmp
call
and
andl
data16
mov
or
lret
add
add
or
inc
pop
inc
fsincos
lods
stos
insl
and
add
dec
addl
cmp
sbb
gs
pop
mov
cmpsl
dec
or
ret
cltd
or
or
rcrb
pusha
and
lret
or
mov
add
cmc
dec
fnstcw
pusha
sbb
mov
xchg
les
inc
xor
cmp
add
nop
mov
or
roll
pop
xor
mov
sbb
bnd
xchg
and
and
add
sub
cmp
je
iret
or
je
and
sbb
loope
es
popa
aad
add
xchg
loopne
pusha
lea
xchg
std
or
cmpl
cmpsb
inc
subl
push
xor
inc
add
or
inc
add
adc
orb
mov
xor
lods
rolb
inc
cmp
or
sub
nop
popf
pop
sbb
sbb
ret
jns
cs
push
jb
scas
rolb
subb
add
or
pusha
arpl
imul
pusha
das
loope
adcb
add
les
das
push
or
dec
xor
xchg
cmpsb
lret
ficomps
or
and
in
ret
fst
les
test
aam
adc
push
ror
jge
or
adc
cltd
jl
xchg
adc
imul
push
insb
fstps
test
add
addb
dec
ficompl
sbb
or
inc
or
push
inc
adc
add
adc
cmp
leave
and
insb
cmp
sub
dec
orl
and
push
rol
inc
lds
xchg
aad
and
push
nop
shrb
scas
add
push
push
adcb
mov
push
mov
push
lods
inc
mov
push
orb
inc
movsb
inc
cmc
out
or
add
pop
mov
mov
cmpsl
push
in
dec
xchg
movsb
pop
push
inc
call
add
aas
mov
jne
inc
lds
cmp
pop
inc
dec
lret
ret
sub
andb
sarl
mov
add
adc
ss
insl
push
sbb
sub
xor
ret
jns,pt
aad
sbb
adc
xor
push
or
and
sub
ret
dec
add
inc
dec
sub
outsb
pop
mov
addb
dec
jmp
lret
dec
mov
dec
adcb
xchg
test
push
test
add
adc
sbb
add
xor
call
and
in
xor
cmp
push
sub
xor
pop
dec
pop
add
add
std
jecxz
add
xchg
sub
xor
or
sbb
cmpsl
sbb
push
add
inc
sbb
dec
mov
xor
popa
ja
adc
mov
mov
mov
addr16
xor
sbb
xor
inc
and
addb
dec
add
mov
sub
xchg
push
or
ja
aam
adcl
rcl
idiv
adc
add
ja
add
pop
xor
inc
pop
adc
jg
pop
xor
adc
out
mov
or
dec
adc
movsl
add
xchg
and
bound
add
jo
fbld
push
mov
pop
adc
dec
mov
adc
call
shlb
add
or
cli
mov
cmp
adc
hlt
add
fildl
xor
mov
imul
fbstp
mov
addr16
mov
bound
pop
push
and
and
or
les
in
push
inc
sbb
mov
jecxz
test
push
and
into
adc
sbb
push
adc
inc
fcmove
les
fucom
inc
popa
xchg
pop
inc
dec
push
xor
mov
mov
sbb
pop
push
dec
xor
lret
in
pop
push
xor
xor
lods
add
jmp
inc
mov
adc
adc
inc
or
inc
and
pop
dec
rolb
pusha
aad
or
cmpsb
xor
sub
xor
and
adc
adc
push
shlb
add
mov
push
gs
sbb
xor
xor
or
test
pop
adc
movsl
push
dec
push
mov
aam
lret
and
fs
pcmpeqw
xchg
pop
add
popl
adcl
inc
add
inc
mov
push
ret
inc
subb
mov
mov
cs
sbb
andl
jns
rolb
data16
pop
sbbl
pop
inc
sub
push
mov
xchg
enter
pop
and
push
jo
imul
mov
imul
mov
sub
rcl
movsb
imul
and
cmp
repnz
inc
imul
roll
popa
mov
add
or
stc
andb
cs
xor
cmp
xlat
push
add
inc
pushf
mov
sub
orl
add
sti
and
cmpl
push
and
pop
or
cwtl
movsl
mov
xchg
lods
imul
mov
mov
sbbb
dec
sub
xor
cmp
jg
popa
inc
xchg
loope
mov
inc
vpavgb
outsb
lods
and
stc
jecxz
es
add
cmp
inc
adc
xchg
arpl
cmc
inc
sub
cmp
add
add
adc
inc
dec
inc
test
mov
xor
and
jae
dec
mov
cmpsl
push
push
ret
push
lods
sub
icebp
sahf
imul
and
es
sub
jmp
inc
stos
lret
imul
pop
push
test
or
jo
test
jnp
and
adc
movsb
mov
or
xchg
and
xor
add
mov
adc
push
inc
out
push
sbb
sbb
bound
push
push
mov
std
dec
loope
mov
aam
pusha
inc
sub
sub
mov
rcrb
popl
mov
xchg
xor
push
push
cmp
inc
or
inc
imul
sub
adc
xor
push
inc
pop
popa
adc
popf
add
iret
xchg
enter
mov
leave
dec
repz
sub
sbb
xor
aam
inc
out
aam
sub
adc
lcall
push
inc
push
xor
rcrl
inc
mov
cltd
stc
jns
sub
repz
loopne
sub
sub
and
mov
lret
mov
test
xor
or
and
outsb
sbb
sbb
loope
imul
mov
xchg
xchg
xor
subl
mov
adc
mov
xsaves
test
jge
xchg
adcb
pop
ret
and
dec
and
and
xchg
or
movsl
jg
les
pop
adc
or
and
and
adc
jns
sbb
push
push
test
popf
leave
outsl
filds
mov
aas
dec
cwtl
and
inc
pop
lods
sub
insl
mov
mov
adc
mov
add
inc
rolb
sub
and
push
dec
sub
nop
mov
nop
lock
mov
subb
mov
orb
pop
mov
jmp
jne
push
daa
cltd
fildll
movsb
mov
sar
push
or
or
aam
fwait
roll
gs
add
mov
shll
aad
jg
push
cmpl
adc
jns
cmpsb
out
mov
jno
and
sbb
lods
rcrb
mov
loop
sub
adc
test
push
inc
xchg
inc
lcall
das
and
sub
in
mov
add
int
cmp
aaa
aam
add
and
inc
and
fldcw
push
adc
inc
test
out
ret
dec
add
cmpsb
insl
or
test
pop
sub
jne
and
addb
mov
or
xor
sbb
mov
and
sub
dec
inc
stc
push
ds
xchg
sub
add
or
cwtl
mov
mov
lds
sbb
push
mov
je
or
mov
out
jle
mov
dec
lea
ret
in
les
test
subps
das
out
mov
cmp
mov
sbb
rorl
xor
cmp
lods
or
add
xchg
mov
jo
xchg
popa
out
stos
mov
lcall
mov
push
and
pop
dec
push
push
add
or
pusha
ss
aaa
pop
stos
cltd
adc
ret
addb
addr16
dec
and
popf
add
sub
or
lock
sub
imul
mov
data16
mov
addl
or
cmp
pushf
xorb
movsl
adc
add
or
add
or
pushf
ljmp
push
or
dec
pop
aad
fwait
sti
mov
lods
push
sbb
jne
insl
ja
lcall
imul
jge
push
push
add
xor
or
mov
push
xchg
sub
fsubs
or
sbb
movsb
sbb
inc
sub
adcl
push
add
jp
sbb
stos
lcall
sbb
jmp
cmp
es
aam
cld
ret
add
addr16
popa
add
jbe
adc
or
inc
sbb
inc
lods
add
mov
jnp
add
and
pop
xchg
mov
dec
pusha
imul
adc
xor
lret
inc
add
shrl
jns
add
sbb
sbb
je
shlb
mov
cmpsl
jle
adc
inc
stc
pop
ret
adc
mov
stos
inc
rclb
lea
sub
mov
filds
repz
shll
rclb
xchg
and
imull
sbb
pop
sbb
xor
mov
ljmp
fs
movsb
xor
gs
lds
mov
pop
sbbb
mov
jo
cli
sub
push
xor
add
xor
adc
jmp
add
or
push
push
addl
lods
or
aad
or
rcrl
jg
stc
sub
jecxz
mov
add
pop
jl
in
cld
mov
push
popa
jb
push
pushl
push
push
add
and
push
pop
push
scas
ds
push
out
mov
clc
push
insb
dec
cmp
hlt
push
pop
xchg
fiadds
clc
inc
std
lcall
fldcw
neg
adc
sub
neg
movl
not
adc
inc
add
not
sbb
jge
inc
mov
push
lock
cmp
mov
adc
jmp
leave
je
dec
pushf
add
into
rolb
in
pop
or
lock
push
push
push
dec
loopne
into
adc
lcall
cli
clc
push
push
lock
ja
add
jbe
push
and
out
sti
mov
sbb
mov
add
jmp
add
outsb
lock
dec
call
insl
push
add
lock
push
cmp
jle
push
push
ret
sbb
sub
cs
sti
in
sbb
inc
sbb
xlat
dec
not
inc
or
out
sbb
stos
push
js
popa
inc
xchg
cmpsb
dec
push
sbb
jo
push
iret
in
xchg
push
scas
inc
andl
popa
jo
cld
add
in
add
je
in
add
add
sub
adc
pop
inc
add
dec
fiaddl
add
out
add
mov
inc
insl
pop
jae
je
dec
add
test
hlt
push
fs
pushf
incl
test
shrl
into
sbb
add
add
sub
cld
add
orb
sti
sub
sbbb
jns
dec
in
outsl
push
or
je
jae
push
loopne
add
lahf
decl
jno
push
push
jae
or
shrb
cld
lock
mulps
jp
push
outsb
xor
ja
jo
push
or
push
push
xchg
cs
adc
dec
xor
negl
jno
shl
dec
pushw
stc
jp
mov
xchg
in
jge
push
mov
mov
clc
loopne
lods
mov
add
pop
cmp
cmp
push
jbe
sbb
aaa
xor
add
pop
test
ffreep
int3
ret
std
jo
dec
cwtl
mov
loop
xor
dec
sub
sti
std
call
dec
push
xchg
mov
dec
sbb
mov
cs
push
mov
jne
cmpsl
jae
push
mov
fwait
push
repnz
add
mov
dec
popf
ss
inc
in
jo
ret
divb
xchg
icebp
std
loop
fistps
sti
mov
neg
dec
cli
push
addb
jbe
jae
jp
push
cmp
mov
dec
pop
jns
rcr
sbb
mov
sub
shrl
cli
mov
sub
mov
cli
stos
cmc
push
sbbb
pop
in
jne
xor
dec
mov
mov
pop
sbb
stc
cli
cmc
popa
cmp
outsl
popa
sub
sbb
push
cmpsl
jns
xor
push
movsb
pop
xor
jl
cli
xchg
inc
push
aaa
xor
into
loop
fmuls
je
shrb
hlt
ljmp
sbb
pop
aam
incb
or
stc
xor
cmp
iret
push
sub
lods
aad
bound
sub
xchg
call
insl
aam
push
jo
cs
in
stos
addr16
dec
jl
push
dec
xor
push
jns
push
adc
inc
push
jb
jmp
dec
dec
pop
rdmsr
bound
jb
gs
movsl
cmpsb
leave
xor
insl
clc
sarl
fwait
stc
adc
sub
fs
jne
mov
dec
cmp
in
push
loopne
aam
lea
sub
sbb
cmp
shll
cmp
jbe
ds
xchg
mov
add
clc
mov
sub
jo
xor
jo
cmp
lods
ret
dec
int3
jnp
dec
imul
dec
push
outsb
and
and
mov
push
loopne
push
loope
das
mov
sbb
pop
push
outsb
cmpsl
mov
cs
enter
imul
jecxz
inc
sub
dec
je
gs
pop
cltd
scas
mov
loopne
dec
inc
insl
ret
cmp
xor
icebp
mov
std
add
dec
roll
clc
mov
add
xor
jmp
fmuls
shl
add
mov
notl
fsubs
xor
aad
pop
pop
jno
call
push
out
jne
adc
neg
mov
mov
mov
inc
and
pop
sti
inc
neg
mov
inc
in
sbb
dec
jb
mov
push
imul
dec
push
jb
jp
pop
xor
adc
js
daa
daa
and
xor
ja
popf
repnz
orb
sbb
ret
push
inc
call
fdivrs
sbb
lds
push
and
xchg
enter
pushf
push
cmp
add
dec
fwait
cld
negl
aad
push
adc
test
xlat
push
pop
sbb
fiadds
jne
inc
int3
jge
popa
popa
into
or
test
dec
inc
dec
inc
adc
clc
bound
loopne
xchg
pop
rcll
dec
push
movsb
xchg
inc
xchg
dec
fdivrl
repnz
arpl
mov
sbb
arpl
add
jne
or
adcb
and
mov
mov
push
pop
jmp
lret
fldl
pop
jl
inc
cmpl
mov
or
and
add
je
ret
inc
mov
sub
jo
orb
out
push
out
ja
jne
xchg
gs
push
and
enter
push
ss
int3
fsubl
ds
arpl
cmp
inc
or
or
dec
push
pop
cmp
push
dec
xchg
lcall
mov
enter
add
not
push
jp
aas
fists
filds
lock
sub
lret
dec
mov
aaa
shl
shlb
sarl
jnp
pop
add
xchg
dec
inc
jbe
sbb
mov
dec
jl
add
add
and
in
lret
lcall
or
pop
jbe
push
mov
jle
bts
loop
addl
popa
sbb
jbe
mov
dec
and
inc
jo
add
add
push
mov
lods
ss
xor
mov
xor
repnz
push
push
push
enter
inc
dec
popa
aaa
push
cmp
hlt
test
and
into
jmp
or
rcl
jmp
pop
xchg
stos
push
pusha
sbbb
push
pop
lods
stc
and
jns
or
add
cld
insl
loopne
movsb
adc
and
popa
xor
pop
js
mov
jns
push
mov
inc
ja
pop
or
pop
aas
push
dec
jb
outsl
outsb
popa
pop
sbb
movsl
jecxz
andb
xchg
adc
jp
push
push
fcomps
push
aas
push
and
dec
jno,pt
jbe
adc
dec
gs
cmp
jmp
bound
xchg
dec
mov
xor
add
or
pop
es
inc
int3
and
scas
xor
jecxz
sbbl
dec
xor
cmc
mov
je
dec
in
xchg
xchg
rcll
mov
js
fisttpll
outsl
xchg
cmp
push
jg
negl
aad
addr16
dec
ficoms
decb
jmp
cld
sub
ret
inc
mov
dec
pop
movsb
xchg
jbe
add
insl
sbb
and
sbb
dec
mov
or
push
jne
test
nop
imul
pop
orb
aaa
js
pusha
mov
xor
mov
pop
dec
loop
call
inc
divl
fs
jo
jmp
mov
test
fs
inc
repz
fadds
jg
sarb
js
mov
inc
xlat
adc
mov
pop
add
mov
jp
push
jecxz
inc
pop
subl
sbb
push
jecxz
adc
pop
rolb
push
test
inc
fmul
arpl
jae
dec
jge
push
in
cs
mov
sbb
lret
cli
xor
push
jg
aas
repnz
sub
bound
imul
lock
jne
push
idiv
popa
in
negl
aad
outsb
inc
xor
fs
xor
jns
outsl
in
mov
cmpsb
js
nop
sub
adc
shll
test
rcrb
mul
fistps
outsl
clc
cs
lock
push
je
sarl
sbb
mov
inc
add
cmpb
jb
test
arpl
pop
pop
mov
stos
pop
adc
addb
push
rorb
arpl
sub
dec
mov
daa
incb
xchg
push
adc
push
jo
aaa
adc
pop
je
xor
mov
sbb
dec
push
add
dec
inc
mov
add
xor
test
inc
cld
inc
dec
aad
leave
stc
mov
orl
outsb
inc
dec
inc
aaa
sbb
add
cmp
dec
push
dec
nop
inc
add
arpl
test
push
fimull
shlb
or
out
repnz
sarb
adc
inc
push
subb
push
cmpb
adc
cmp
xor
inc
pop
cld
rcrl
cli
inc
jecxz
inc
sub
daa
cmc
sbb
inc
shrb
test
insb
jo
cmp
clc
mov
les
and
jae
popa
push
jno
inc
std
xchg
push
dec
mov
inc
dec
sub
inc
add
fcmovbe
cld
clc
aam
cmpsb
stc
sbb
ffreep
cmp
jnp
push
jae
adc
mov
mov
cmp
jno
jle
cmc
cmpsb
out
mov
pop
mov
push
push
jns
notb
jbe
loope
rcrl
dec
enter
scas
or
xchg
testb
push
mov
sub
jp
dec
sbb
das
hlt
iret
add
adc
into
popa
cltd
push
inc
add
rcll
ja
fists
xor
mov
bound
sbb
popa
or
rcrl
jecxz
dec
hlt
mov
jbe,pn
cmp
dec
inc
imul
xor
sub
aaa
cmp
cmp
insl
or
lock
repz
mov
inc
push
cmp
decl
push
into
sbb
adc
dec
adc
or
mov
aad
mov
mov
loope
gs
adc
pop
sub
je
cld
cld
loopne
add
and
xchg
in
mov
arpl
mov
subl
lock
xor
rcl
jecxz
push
push
inc
in
add
in
rolb
sub
mov
inc
sub
cmp
dec
lea
cwtl
lods
dec
dec
push
xor
mov
test
push
cmpsl
push
addr16
jmp
mov
arpl
loopne
jbe
bound
sbb
aaa
out
push
or
and
inc
out
or
fdivp
dec
inc
xor
ja
xor
fisubrs
xor
lods
dec
mov
dec
arpl
vandnps
bound
popa
xchg
jnp
nop
paddd
lret
dec
cli
adc
and
repnz
frstor
cmc
push
ss
inc
inc
test
sbb
rolb
adc
cmp
sbb
dec
leave
push
or
repnz
push
jb
dec
ret
sbb
int3
sub
mov
popf
dec
jbe
mov
fimuls
filds
inc
cmp
jg
arpl
clc
in
jns
push
dec
daa
mov
test
mov
outsl
push
int3
pusha
je
adc
fs
push
test
lods
jbe
push
lock
js
sub
les
jae
push
outsb
les
cmp
jne
xchg
pop
scas
cmp
repnz
idiv
incl
push
dec
mov
inc
inc
or
jne
inc
pop
pop
mov
or
sbb
dec
fisubrs
sub
add
dec
inc
jns
adc
mov
jl
add
push
sarl
mov
sub
push
cmp
sbb
or
jae
push
lock
and
jp
loopne
fstl
sub
sbb
aaa
push
dec
rclb
adc
daa
jbe
push
cmpsb
std
jg
incl
push
incl
pop
mov
mov
filds
and
pop
clc
fsubs
cmp
cmp
push
pop
dec
xor
mov
inc
out
fbstp
les
out
in
pop
jb
inc
push
mov
inc
dec
add
out
dec
and
cwtl
lahf
mov
sti
data16
hlt
sti
movups
xchg
jp
mov
pop
pop
stos
pop
loop
repz
shlb
lret
stos
fidivrl
sti
mov
movsb
and
xchg
sbb
mov
inc
cld
pop
adc
sbb
jb
cmpsb
pushf
loopne
lcall
test
jmp
mov
inc
mov
mov
lret
mov
mov
cmp
jge
push
test
pop
mov
nop
xor
mov
xor
dec
sbb
dec
scas
xor
iret
xchg
loopne
sbb
in
mov
inc
pop
aam
repz
jge
jmp
filds
ds
dec
popa
xchg
sub
popf
add
push
inc
mov
inc
pop
mov
push
jmp
adc
push
add
dec
movsb
inc
cli
icebp
mov
sbb
int3
outsl
cmpsb
xor
loop
and
stc
push
sbb
cld
mov
shll
inc
cmp
jns
dec
push
mov
mov
dec
shrl
das
mov
loopne
jecxz
in
insb
xchg
mov
dec
push
lock
cld
push
sti
cmp
and
dec
mov
sbb
rolb
ss
push
mov
loope
ja
cmp
cli
push
push
test
iret
loop
pop
or
cld
pop
ffreep
xchg
repz
push
mov
inc
outsb
and
arpl
cmp
cli
pop
inc
push
adc
rorl
insl
es
scas
or
adc
ret
cwtl
repnz
pop
insb
sbb
in
lahf
mov
dec
nop
inc
push
loope
aaa
adc
xor
maskmovq
repz
bound
lods
test
clc
test
mov
lock
inc
int3
cli
cld
mov
jnp
dec
mov
fwait
push
add
cmp
push
jmp
fcoms
outsl
out
mov
addb
adc
or
rep
outsl
loop
push
add
add
test
mov
lahf
push
enter
and
hlt
inc
jl
inc
inc
add
loop
pop
shr
inc
adc
decl
and
push
shll
das
mov
mov
lret
jne
sub
pop
jle
push
sar
call
std
add
pop
cmp
adc
sti
and
shll
out
mov
push
lods
stc
jl
cltd
lods
mov
test
push
mov
arpl
add
push
jmp
ja
add
fcoms
cld
jmp
pop
stos
push
lcall
ss
sbb
mov
jb
dec
adcl
std
fnstsw
mov
enter
sub
xchg
push
cmp
or
fs
mov
adc
sbb
sbb
outsb
lret
mov
push
push
dec
sarl
and
inc
xor
in
call
jae
jle
lahf
add
jno
lods
dec
xor
shl
or
pop
ja
mov
in
cs
sub
cmpsb
rcl
lods
repz
fidivrl
jge
sti
out
adc
mov
cld
std
pop
jle
cmp
or
fmull
mov
imul
data16
jb
mov
mov
or
inc
imul
cmc
aas
or
lock
mov
lret
jmp
ja
jo
sahf
sub
rolb
push
scas
add
aaa
sub
cmp
xchg
mov
insb
rcr
xlat
push
divl
cmpsl
jg
scas
xchg
push
movsb
in
push
mov
xchg
hlt
xor
cmp
std
out
decb
ret
dec
mov
jnp
cmp
int
scas
stc
stos
sub
mov
es
push
cmp
mov
or
leave
jg
incl
adc
mov
inc
pop
sarb
jecxz
cli
out
sbb
dec
mov
ss
and
pop
inc
cmp
and
ljmp
mov
jne
hlt
fstl
push
inc
xor
or
js
mov
std
fcmovnb
push
adc
and
int
scas
adc
ret
push
pop
pop
cmp
fnstcw
and
inc
in
mov
add
imul
jg
jnp
outsl
and
scas
adc
add
cltd
fistpll
aaa
cmp
fdivs
xor
fcos
inc
outsl
cmp
hlt
xor
adc
cmp
or
add
int3
lds
jg
maskmovq
jno
es
cltd
imul
push
lret
aad
sti
or
es
loope
cs
dec
mov
add
mov
mov
arpl
adc
mov
cld
bound
into
or
ffreep
add
cld
adc
jg
jg
add
push
stos
incl
mov
test
loop
xchg
in
jnp
ljmp
call
dec
cwtl
outsl
push
add
loop
std
or
adc
iret
jge
scas
pop
or
decl
sub
xchg
jbe
out
add
jg
pop
aad
inc
jns
pop
adc
scas
sbb
loope
lods
or
pop
push
addr16
lcall
mov
mov
mov
faddp
ljmp
iret
iret
aaa
test
and
jns
loope
scas
add
pop
ret
jge
iret
sbb
je
test
pop
jne
test
mov
sbb
mov
fs
cmc
or
fldt
aad
movsb
inc
out
lahf
rorl
sub
outsb
jle
icebp
cs
call
ret
lods
pop
fstpt
test
mov
notl
in
imul
or
jg
iret
cltd
stc
cli
fistpl
pop
pop
xor
mov
sbb
lret
rolb
lret
mov
ljmp
dec
pushf
pop
roll
loop
fwait
xor
xor
ficompl
and
or
cmp
int
outsb
xchg
inc
mov
cltd
repnz
sti
lahf
faddp
jae
pop
mov
sub
inc
inc
pop
mov
test
mov
or
ja
xor
repz
adc
pusha
movl
adcl
scas
sub
cmpsl
mov
mov
jae
clc
sbb
add
push
xchg
inc
pop
inc
fwait
jns
insl
jge
xchg
jge
rcr
or
loop
add
dec
mov
xchg
mov
iret
jle
aas
and
push
call
fists
movsb
push
imul
jg
sti
push
pushf
mov
andb
repz
xor
jmp
ficoms
ret
mov
pop
rorl
mov
sarl
inc
cltd
or
inc
loope
push
dec
in
xor
dec
push
cmp
pop
out
jg
out
sub
in
and
add
pop
or
ja
and
scas
lock
push
cmc
add
out
and
dec
test
aad
xchg
push
inc
pop
inc
dec
stos
imull
xchg
and
cmp
sbb
and
incl
jg
add
js
xchg
push
lret
aam
sbb
aas
lock
sbb
lea
scas
xchg
or
movsl
xchg
jne
sarb
fidivs
or
mov
and
ret
mov
xor
or
stos
lock
or
jmp
out
stos
pop
xlat
sbb
fdivrl
mov
insb
adc
les
jbe
lcall
lcall
push
addl
div
inc
aas
aad
mov
and
sbb
out
xchg
mov
cmp
pop
and
jae
dec
inc
jmp
or
ffree
test
scas
sub
push
push
clc
sbb
cs
jo
inc
leave
ret
fnstsw
sar
movsb
cmp
enter
into
sbb
sub
hlt
or
int
xchg
push
dec
cld
out
jno
add
lret
test
call
or
fstpl
mov
aam
rclb
xchg
mov
jmp
jmp
xor
aaa
push
fs
ffree
mov
lret
test
in
js
add
dec
icebp
stc
and
xchg
cmovne
movsl
roll
or
adc
aas
stos
mov
pop
test
loope,pt
fisubl
gs
jmp
data16
je
neg
push
addl
or
imulb
rolb
mov
push
xchg
cmp
inc
popf
mov
les
fcoms
gs
sbbb
out
lock
jl
inc
dec
push
stc
or
aas
jo
jb
pushf
mov
sub
jle
bnd
cs
out
js
fs
out
inc
pushf
add
std
mov
sti
punpcklbw
mov
mov
pusha
xchg
xchg
mov
jmp
test
mov
mov
mov
push
lods
sbb
mov
daa
cld
push
push
das
in
and
icebp
in
loop
xor
sbb
cs
fistpll
pusha
sub
mov
sub
pop
fsubrl
xchg
inc
dec
or
push
mov
pushf
pop
cld
or
mov
jb
test
dec
pop
mov
mov
and
add
push
lret
les
sbb
mov
shl
jae
sbb
jo
pmaxub
cmp
ljmp
fstpl
inc
aas
mov
and
jno
mov
mov
or
cmp
inc
or
mov
or
jbe
movsl
and
test
fistps
dec
pop
add
lods
pop
and
popf
test
mov
dec
dec
mov
push
hlt
fsubrl
out
inc
clc
inc
jg
dec
shl
pop
inc
xchg
bound
xchg
xchg
jg
popf
push
mov
addr16
pop
add
pop
jle
jmp
cmp
clc
loop
xor
xchg
dec
addr16
decl
divl
callw
or
jge
push
loop
mov
jns
or
ficoms
inc
outsl
clc
out
cmp
pop
cli
dec
push
repnz
enter
dec
xchg
mov
subb
ja
push
jp
add
imul
std
fs
inc
or
lret
loope
mov
mov
scas
and
jg
repnz
fdivr
into
inc
scas
sbb
jg
les
pop
outsb
inc
pushf
push
cmp
sarb
clc
jmp
mov
and
jg
out
pop
loop
imulb
cmpsb
or
pop
jecxz
and
repz
std
pop
inc
mov
test
inc
sub
cli
in
or
loope
or
mov
ret
decl
mov
das
ss
aad
cmpsb
inc
inc
inc
or
ror
sbb
sbb
pop
divb
jno
jmp
ret
jge
mov
or
inc
lahf
sbb
ret
dec
jmp
in
dec
ljmp
mov
jg
clc
into
mov
push
or
mov
ljmp
dec
adc
das
add
pop
testl
imul
fwait
add
not
push
aas
cmp
lea
dec
lea
mov
sub
push
inc
jnp
mov
xor
sbb
insl
mov
adc
sub
scas
push
aad
mov
call
pop
loopne
sbb
push
outsb
push
filds
jo
call
dec
idiv
loop
cli
inc
stos
pusha
addr16
mov
dec
pop
jl
mov
sub
adc
icebp
aas
jae
dec
dec
test
mov
mov
sahf
test
in
in
or
push
stc
mov
cwtl
fistl
inc
loopne
in
cmpsb
push
pushf
mov
stc
pop
mov
sahf
cmc
push
in
mov
dec
jl
jne
fidivs
sbb
ja
jp
mov
push
add
daa
aam
push
jno
loopne
lds
test
mov
stos
nop
push
sub
lods
movsb
call
mov
or
add
jl
xorl
rclb
jb
ret
iret
jecxz
mov
out
xor
cs
xchg
aam
dec
cmc
fdivs
push
push
stos
inc
cmova
out
das
jne
sarb
or
lea
sbb
mov
push
inc
pop
ret
ljmp
outsl
roll
inc
adc
clc
ljmp
into
into
and
ss
pop
mov
xchg
cmp
outsl
js
aas
xor
mov
inc
push
lock
mov
jmp
decl
dec
fimull
push
jae
cmovno
ja
rol
jae
and
dec
xor
mov
sti
mov
xor
push
push
inc
xor
push
loop
mov
out
jle
cld
mulb
pusha
stos
pop
jecxz
test
call
mov
and
jnp
lods
leave
inc
dec
jno
jecxz
adc
xchg
mov
jmp
gs
jno
sbb
mov
hlt
rclb
jae
cli
sub
dec
fcomps
xor
lock
jmp
or
pop
lds
push
hlt
cmp
mov
repnz
popf
andl
mov
paddsb
cs
mov
sub
xchg
add
jle
mov
data16
jno
lds
or
jmp
jg
mov
mov
mov
out
lock
in
inc
bnd
dec
or
out
and
loope
cmp
mov
movsb
push
sbb
pushl
test
jmp
cmp
lock
sarl
ljmp
mov
fidivl
add
jne
stos
adc
or
stos
sub
jecxz
aas
cmpsl
jg
cmp
pop
jnp
pop
lds
ja
mov
inc
iret
add
in
repnz
xchg
sbb
cvtss2sd
rorl
add
inc
decl
subb
fs
mov
arpl
jne
mov
leave
aam
das
mov
dec
cmc
cmc
or
shll
lret
pop
pop
push
mov
xlat
and
inc
loop
repnz
lahf
mov
ss
add
push
xchg
dec
mov
int
add
fidivs
push
clc
inc
mov
movsw
nop
cmp
jl
pop
cmc
inc
ret
push
mov
jb
fwait
sbb
pop
add
aad
sub
std
sti
lods
mov
xchg
cmpsb
cmpsl
sbb
mov
call
lcall
mov
out
rcr
loopne
pop
sub
or
mov
mov
sbb
icebp
lahf
mov
pop
leave
xor
cmp
jg
in
jns
ret
cmpsb
int
pushl
loop
mov
mov
mov
daa
repnz
clc
stos
nop
add
ret
jg
push
decb
push
adc
sub
arpl
pop
push
jns
sbb
pop
leave
lods
dec
sbbl
fisubrl
and
fwait
dec
sbb
fdivrs
orl
sub
jle
jns
sub
icebp
push
movsl
lcall
jle
xor
sbbl
ja
jge
lods
icebp
outsl
repnz
out
dec
mov
inc
fildll
mov
jl
adc
popf
adc
sti
ja
xor
cwtl
cmp
mov
sar
aam
sbb
ret
cmp
int3
lock
enter
into
loop
lods
inc
lods
int3
cmp
lock
inc
clc
scas
mov
mov
popf
sbb
js
ja
pushf
addr16
jnp,pn
add
xor
shrb
jg
push
push
and
adc
mov
sub
stos
and
addr16
and
push
jecxz
xor
fs
call
fistl
fists
sub
int
pop
in
pop
inc
js
mov
cmp
addr16
decl
pop
sbb
out
add
cmp
sbb
loope
out
mov
sahf
mov
sbb
cld
sbb
in
sbb
mov
nop
dec
inc
xor
pop
cld
out
test
stos
inc
and
mov
xchg
lods
sarl
mov
pop
jbe
lcall
lahf
test
lret
dec
mov
mov
clc
adcb
hlt
sub
rorl
cmpsb
lcall
enter
stos
out
mov
out
fdivrl
stos
xor
adc
xor
sbb
mov
fdivrl
clc
push
popa
inc
pop
push
fnstenv
mov
repz
cmpsb
inc
repz
call
mov
rol
js
jl
xchg
das
sub
xchg
adc
sbb
push
clc
sub
decb
lea
xchg
and
sbb
lds
mov
dec
pop
std
aaa
sbb
stos
or
shll
js
ljmp
lcall
adc
cmpsl
scas
mov
daa
push
movsb
jge
call
pushl
and
out
lahf
insb
pop
and
push
mov
sbb
pushf
in
xchg
outsl
hlt
mov
leave
je
cmpsb
mov
cmp
rolb
xchg
vmovq
jle
ja
imul
loop
dec
mov
sub
cmp
subl
adc
outsb
add
out
jnp
cld
or
xor
int
popf
std
cmp
std
mov
fistl
push
es
adc
sti
femms
cld
out
xchg
pop
scas
adc
and
je
push
cmpsb
aas
orb
insl
sub
imull
loope
mov
jg
iret
push
psrlw
xchg
jnp
inc
dec
add
inc
rcr
std
fbstp
mov
mov
jb
sbb
adc
repz
out
sbb
jge
add
out
mov
mov
sbb
cli
fisttps
cs
test
jecxz
push
pushf
hlt
jmp
and
ss
loopne
incl
aas
mov
fcomi
sahf
or
push
sub
cli
cmpsl
ficoms
movsl
mov
sub
fldl
sub
jne
das
or
xlat
sbb
push
xchg
mov
rcrb
mov
xor
pop
cmc
pop
fsubr
dec
nop
adc
cwtl
mov
loopne
pop
cli
aas
out
jg
les
dec
and
sbb
xchg
ja
add
xchg
add
loopne
scas
mov
scas
lret
cmp
dec
add
lret
mov
fldenv
in
les
outsl
fistpll
cmp
sub
sbb
in
aaa
mov
mov
push
out
mov
loopne
mov
sub
xor
dec
inc
xor
out
ljmp
hlt
push
jns
gs
or
mov
mov
fildll
ds
mov
aam
stos
push
or
daa
ja
push
std
mul
lea
push
jmp
adc
mov
jl
jg
pusha
cmp
xlat
jle
dec
cli
xchg
mov
inc
clc
lret
pop
insl
sbb
sbb
add
insl
pusha
arpl
adc
or
paddw
cli
sbb
xchg
add
test
outsb
hlt
test
pop
or
lods
aaa
push
add
cmp
jp
pop
and
jle
dec
cmpsl
inc
inc
mov
ja
aas
xchg
sti
mov
movsl
mov
add
out
daa
stos
in
jp
idivl
adcl
xchg
or
cld
adc
test
lock
and
and
adc
inc
xor
mov
jg
aam
adc
enter
mov
jge
mov
out
out
sub
jns
fistl
push
leave
mov
loop
inc
mov
rcr
sbb
pop
adc
or
push
popa
in
sbb
or
dec
xchg
icebp
dec
nop
add
sub
pop
jno
pop
sub
ficomps
jle
push
ds
stos
lcall
sub
ret
xchg
test
add
popa
lock
sti
rorb
inc
loope,pt
dec
fnstsw
daa
dec
sbb
ret
les
stc
shl
sbb
jp
sbb
lcall
jp
mov
lea
outsb
jmp
je
xor
pop
imul
fidivrl
shlb
negl
popa
xchg
adc
jecxz
loopne
mov
pop
sub
out
dec
mov
dec
clc
xor
test
movsb
imul
pop
pop
test
jl
mov
or
dec
sbb
sub
push
sbb
adc
ficoms
orb
gs
mov
hlt
sbb
pusha
push
inc
outsl
pop
and
pop
test
lea
sbb
mov
inc
dec
cmp
mov
add
jg
loope
pop
pop
fs
mov
ss
cmpsb
imulb
dec
sti
inc
jge
sbb
sbb
pop
clc
add
loop
and
in
dec
test
sbb
push
test
mov
jmp
mov
xor
iret
sub
mov
loopne
fwait
sbb
jns
rorl
xor
mov
or
jmp
xor
or
lods
fadds
inc
fsubrl
lods
xor
inc
decl
leave
leave
int
push
jns
sbb
push
cmp
inc
ret
xlat
sti
decl
idivl
inc
imul
call
mov
and
stos
loope
sbb
ret
and
lret
fnstsw
int3
nop
inc
out
lock
cwtl
pop
jmp
sbb
push
and
jo
out
pop
cmp
inc
xchg
decb
das
xchg
sbb
loope
dec
ret
pop
ficomps
orl
mov
pusha
shrb
ja
cmp
pop
mov
fadd
mov
es
or
mov
hlt
jbe
cmp
shr
in
gs
fcoms
or
fcos
addb
dec
mov
das
pop
jb
xor
add
out
lret
jbe
scas
out
jg
lock
mov
addr16
push
hlt
aaa
pusha
test
ds
sub
mov
fnstsw
jle
fildl
sub
in
pushl
add
xor
std
pop
rcrb
imul
dec
fsubp
popf
push
adc
andl
sub
cmp
daa
stc
or
mov
adc
in
mov
and
or
imul
sbb
enter
pop
sbb
mov
insl
xor
pop
mov
and
or
inc
jns
sbb
ds
pop
mov
push
aad
lea
incb
lock
cmp
mov
lods
cmpsb
add
xchg
into
out
mov
stos
xlat
pop
push
lcall
jno
or
push
lret
push
jg
rcl
mov
jne
jp
jae
mov
push
enter
lcall
insb
mov
dec
aam
ljmp
aas
pushf
sbb
lret
sbbb
enter
ljmp
fisttpl
push
roll
cmp
xchg
int3
xchg
mov
lcall
mov
fnstsw
mov
dec
lods
lock
add
dec
push
popa
or
negl
imul
push
iret
rcl
mov
iret
loopne
rorb
data16
shlb
es
xor
pop
sarb
cli
inc
hlt
shrl
adc
aas
sar
adc
mov
xchg
inc
or
xchg
pop
out
das
outsb
xchg
inc
lods
cld
roll
xchg
shr
add
or
xchg
nop
xchg
outsb
mov
fs
xchg
pop
push
xor
addr16
mov
add
adc
jnp
add
data16
or
mov
cmp
mov
pushf
ror
pop
push
js
jge
into
xchg
psubb
xabort
xor
testb
pop
jle
sti
cmpsl
insl
sub
add
gs
inc
sbb
addl
pushl
or
in
incl
add
or
in
cmp
out
mov
mov
jmp
sub
aam
lock
inc
xchg
adc
sbb
adc
push
jno
neg
in
adc
insb
ljmp
cmc
out
lods
call
cmp
pop
sbb
inc
xor
ja
scas
iret
add
adc
add
ja
mov
loop
rclb
mov
stc
sti
adc
sbb
or
mov
xchg
mov
and
sub
mov
out
fisubs
cmpsl
xchg
loope
ficomps
out
push
mov
jl
sub
pop
adc
mov
gs
fistpl
sub
incl
pop
aas
mov
xor
push
ljmp
shll
mov
das
and
mov
add
push
clc
mov
xor
cwtl
mov
mov
hlt
iret
jge
cmp
lahf
dec
cmp
mov
sub
mov
stc
jge
pop
xor
imul
fwait
pop
jecxz
xor
add
push
aaa
adc
loopne
adc
mov
or
mov
sahf
add
add
fidivs
xchg
lock
add
push
pop
aam
in
cmp
outsb
push
jg
sti
jg
lods
pop
leave
subl
addr16
mov
incl
idivl
xchg
or
pop
push
dec
call
mov
iret
pusha
mov
loope
loop
int3
mov
cmp
pushf
and
inc
add
les
movsl
dec
cmp
cld
lahf
xchg
cltd
xor
xor
inc
xor
aas
es
push
push
inc
fdivr
xor
fwait
and
xchg
jo
shlb
ljmp
cli
mov
clc
fwait
repnz
lock
iret
imul
xor
mov
inc
pushl
push
aam
xchg
push
daa
push
lcall
xchg
mov
lock
iret
daa
daa
cld
aas
add
mov
pop
fwait
data16
mov
jge
xor
pop
test
xor
inc
mov
aas
ja
and
loopne
andl
push
push
test
adc
idiv
adc
sbb
and
cmpsl
shrl
xchg
pop
out
in
pop
cmpb
mov
or
jg
jmp
inc
arpl
das
mov
adc
push
push
adc
lahf
aad
out
in
js
sti
mov
adc
mov
loopne
inc
stos
pop
cmp
jno
imul
xchg
addr16
fnstsw
test
or
mov
scas
jmp
sbb
mov
inc
jle
xor
mov
sub
and
call
fisubrl
xor
mov
jecxz
mov
or
fucomip
dec
pop
incb
pop
data16
push
sub
pop
dec
cmp
rcrl
lahf
std
das
fnstcw
cmp
ljmp
sub
sbb
jg
jecxz
push
das
adc
loope
or
sub
jmp
adc
in
inc
cmp
movsl
xchg
mov
hlt
push
mov
movsl
push
sub
jae
iret
popa
vmwrite
fstpl
jnp
inc
std
fistpll
inc
lods
das
dec
xchg
mov
jle
push
out
repnz
mov
mov
loope
jae
xchg
xchg
pop
xchg
mov
lock
jae
mov
faddl
fdivr
mov
sbb
lret
jb
xor
and
xchg
ret
enter
adc
jge
ja
leave
leave
pushf
sub
mov
loopne
cmp
sub
jb
pushf
pop
adc
jp
daa
loop
mov
jmp
out
mov
out
test
icebp
pop
scas
das
lret
adc
jg
scas
xchg
pop
push
xchg
outsl
scas
nop
repnz
fisttpll
pusha
push
pop
mov
aaa
inc
jmp
aas
bound
pusha
add
jg
pop
jl
mov
jbe
inc
xchg
jp
popf
sub
outsl
test
pop
dec
and
ljmp
ret
push
in
ljmp
xchg
mov
jns
call
xor
jb
xchg
sbb
xor
and
jg
adc
rcrb
clc
aad
into
push
mov
jb
aas
fildl
inc
and
cmpsb
negb
out
pushl
clc
xchg
sahf
mov
mov
sbb
adc
aaa
jmp
leave
and
sbb
pop
loopne
jne
pop
clc
sbb
sbb
mov
pop
dec
outsl
inc
pop
idiv
aad
sahf
sti
inc
mov
addr16
inc
pop
pop
loop
aam
sbb
outsl
rcrb
xchg
cmp
xchg
jno
mov
lahf
test
fistps
call
lods
jecxz
sbb
cmp
mov
shll
cwtl
dec
cmp
std
or
test
pop
mov
loope
cmp
xchg
pop
inc
mov
and
xor
js
add
dec
xchg
xchg
in
mov
decl
jle
sub
and
hlt
pop
xlat
dec
jne
dec
lods
loop
inc
repz
jmp
push
sbb
or
sbb
sbb
repz
adc
mov
lods
or
decb
icebp
cmp
lcall
sub
pop
cmpsb
pusha
add
ja
test
fsts
inc
lock
ficoml
push
std
addl
clc
mov
cli
cs
jmp
pop
add
cmp
pop
push
fwait
jp
adc
inc
arpl
pop
lods
call
adc
repnz
xchg
in
pop
jp
shll
pop
add
repnz
pop
add
mov
adc
jg
arpl
or
xchg
cmpsl
sbb
or
sub
inc
cltd
push
push
push
lahf
add
mov
and
mov
iret
pop
push
or
ljmp
test
cmp
mul
jmp
lret
lea
or
cmp
incl
cmp
fsubrl
cli
mov
clc
lahf
gs
out
jo
push
jg
fisubs
jle
or
ss
adc
inc
cmp
sbb
mov
fsubrl
cli
mov
mov
sbb
add
lcall
jnp
sbbb
cmpsb
push
or
pop
jle
cmc
xor
jns
aad
xchg
pop
int
sarb
add
jg
mov
push
loope
add
ss
cli
sbb
jge
push
lret
mov
int
addl
aas
lock
test
lahf
add
xchg
sub
add
jmp
jecxz
inc
test
fildl
sti
jle
divl
in
add
xor
nop
add
lods
outsl
into
mov
jbe
les
push
adc
aad
add
out
fistps
mov
imul
cmp
ret
das
or
daa
mov
jmp
or
cmc
lock
jle
mov
in
shlb
gs
or
out
daa
adc
addr16
lcall
cmp
jg
aas
xlat
ret
cltd
test
jmp
sarl
das
ficomps
sub
push
dec
inc
mov
stc
cmc
mov
imul
pop
sbb
or
testb
int
pushl
ja
loopne
pop
jb
into
add
inc
repz
cmp
cmpsl
sti
add
add
sub
rcll
xor
lods
das
icebp
nop
fwait
mov
adc
enter
out
lods
adc
add
mov
out
mov
cwtl
clc
paddd
jecxz
fbstp
dec
sub
add
xchg
push
pop
sub
mov
call
idiv
addl
cltd
inc
xchg
ds
cmpsl
push
cld
sar
push
out
add
jno
dec
movsb
mov
repnz
fdivrs
fisttpl
rclb
insw
rorl
arpl
cli
cmp
decb
push
add
insb
lret
push
mov
ljmp
push
cmp
mov
inc
mov
and
stos
jle
jne
cld
sbb
js
add
bound
xchg
sbb
in
mov
rcl
jae
fists
js
mov
adc
xchg
inc
push
add
pop
pop
dec
ljmp
popa
push
cmp
sub
lcall
push
pop
jne
fsub
mov
out
mov
cmp
and
mov
adc
sahf
lahf
jo
ljmp
mov
test
fistpll
and
fucomip
mov
xchg
testl
cli
jg
ret
pop
scas
xor
xchg
xchg
mov
ljmp
int3
ret
cmp
jle
scas
push
sub
jle
fwait
jne
clc
jmp
sbb
adc
xor
mov
push
les
leave
mov
aaa
sbb
cmp
dec
mov
inc
jae
lcall
pop
cs
push
mov
mov
pop
add
cltd
loop
or
fdivrl
add
ret
cmc
mov
add
loope
mov
subl
sub
aas
add
xor
push
dec
push
inc
arpl
les
mov
push
jb
cmp
inc
or
std
fistps
ja
dec
imul
xor
lods
hlt
popf
lcall
inc
js
mov
push
sbb
stos
push
xchg
jmp
shll
add
scas
fdivp
jo
nop
xor
pop
shl
jo
dec
jb
ljmp
iret
rcrb
push
sub
jecxz
mov
jecxz
scas
cmp
je
scas
or
add
jecxz
inc
imul
sbb
aam
dec
bound
mov
mov
pop
mov
xchg
pop
ds
ss
lock
out
sbb
sbb
add
xchg
andb
xchg
iret
out
loope
das
mov
sti
push
mov
jne
hlt
cmp
or
mov
cli
inc
mov
mov
cld
xor
std
leave
fnsave
mov
sub
cmp
add
ffreep
imul
fistl
xor
xchg
out
pop
pop
mov
dec
dec
jne
xchg
jp
inc
mov
inc
das
xlat
inc
jbe
and
out
inc
cld
paddusw
cmp
repnz
mov
push
add
data16
mov
sbb
xchg
lods
add
xchg
mov
xor
sbb
push
push
scas
je
add
test
adc
mov
movups
in
pop
call
call
fbstp
mov
andl
or
jbe
aas
mov
sub
gs
negl
sbb
popa
xchg
adc
inc
mov
sub
imul
sbb
das
pop
add
or
lods
lock
mov
sqrtps
jp
cmc
push
pusha
fnsave
cmc
into
jo
aas
sar
jmp
adc
pop
cmc
inc
dec
add
mov
aaa
mov
adc
jne
mov
add
movsl
adc
cld
cmc
clc
dec
sub
iret
std
cmpsl
pop
je
mov
and
testb
cmp
mov
adc
inc
jp
pop
out
decl
inc
ljmp
add
aas
mov
fstpl
mov
cwtl
xlat
mul
xor
incl
add
mov
pop
and
mov
insb
inc
hlt
vmaxpd
jl
loope
cmp
dec
mov
movsl
call
out
ficomps
not
inc
fwait
sbb
xor
test
cmpps
pop
testb
jle
andl
ret
std
es
mov
ret
insb
sbb
loop
popa
pop
adc
sbb
fdivl
mov
mov
imul
ljmp
mov
inc
and
lods
dec
popa
xchg
das
mov
test
push
dec
xlat
shrb
mov
adc
out
bound
lds
shl
mov
lahf
mov
out
push
ret
push
imull
cwtl
push
sbb
mov
and
iret
mov
add
and
cmp
jg
adc
sahf
jmp
jle
add
test
or
cmp
jmp
jg
outsl
pop
roll
popf
aas
aad
mov
adc
or
mov
mov
xchg
and
push
jecxz
out
test
movsl
sub
rclb
add
mov
test
mov
out
nop
jl
push
jmp
or
adc
faddp
test
testl
jae
inc
rorb
fisttpl
pop
cmp
jmp
pop
loope
cmc
fs
mov
shrb
fidivs
lods
nop
decb
mov
ds
jo
mov
lret
movsl
mov
pop
or
pop
outsb
or
iret
mov
fnstsw
pusha
or
je
jg
cmpsl
and
gs
cmp
xchg
pop
adc
mov
push
jmp
adc
adc
sbb
or
adc
jl
xchg
mov
test
sub
out
dec
in
cwtl
xchg
negb
cmpl
dec
fsubs
pop
std
fcmovnbe
ja
mov
std
sub
mov
fiadds
push
shlb
add
mov
dec
aad
inc
or
and
stos
pop
call
add
les
inc
sbb
sti
in
fldt
cmpsl
dec
inc
mov
adc
mov
std
jg
inc
push
push
mov
dec
cltd
imul
pop
sub
mov
loopne
or
or
push
out
arpl
jbe
mov
adc
outsl
mov
or
addb
daa
cmp
gs
idiv
and
pop
movsl
call
aam
cli
clc
adc
fists
insb
stos
call
adc
cmc
out
dec
aad
iret
pushf
mov
call
ret
loop
jge
test
je
dec
lahf
add
sbbb
sub
jne
inc
shll
nop
sarb
mov
lcall
mov
sti
outsl
pushf
jnp
mov
icebp
inc
push
inc
lahf
adc
fisttps
xor
or
adc
inc
and
adc
dec
ss
fsubr
adc
mov
pop
addr16
popa
mov
mov
test
test
sbb
jle
cld
pop
xor
push
fwait
cmp
mov
inc
clc
mov
jmp
fdivs
outsb
orl
cld
fs
test
test
jo
mov
incl
hlt
jg
sbbl
icebp
and
ja
orl
aas
jmp
pop
out
insb
and
xor
jg
pop
ljmp
ds
lods
popf
stc
and
addr16
repz
or
movhps
mov
clc
mov
xchg
mov
pop
dec
call
out
mov
sbb
mov
cmpsb
insl
mov
push
mov
data16
mov
cmpb
adc
test
loope
mov
fistl
fldl
dec
push
mov
pusha
aaa
decl
pop
andb
push
out
sbb
cli
icebp
mov
inc
or
mov
or
outsl
sahf
decl
mov
rorl
rorl
jg
icebp
out
jmp
push
jae
pop
ss
push
scas
push
shlb
out
scas
jns
add
into
cwtl
addr16
icebp
pop
xchg
iret
jp
mov
mov
loop
jp
fnstsw
pushl
fistpl
pop
xchg
out
mov
dec
ja
dec
add
into
lods
mov
orps
push
xlat
and
and
ss
call
gs
jmpw
mov
js
inc
dec
mov
mov
jle
imul
jo
in
xor
dec
cmpsb
xor
out
mov
ret
and
jmp
jne
jl
pop
xchg
mov
xchg
repz
call
jb
mov
jecxz
addr16
or
iret
lock
out
pop
mov
sti
xchg
pop
out
out
sahf
adc
aas
aad
or
out
repnz
pop
int
daa
push
sahf
std
aaa
clc
jg
dec
pop
insl
js
add
pop
and
cmp
rclb
stc
jmp
arpl
inc
pop
incl
push
lcall
and
loop
sub
sysret
out
jbe
push
addb
lock
and
loop
stos
mov
mov
insl
out
add
scas
int3
aad
add
and
mov
dec
negl
rol
cmp
rcrb
sbb
or
pushl
gs
dec
jmp
clc
loop
or
lcall
jbe
add
aas
shl
inc
dec
outsl
stos
ja
add
cmp
xchg
xchg
repz
and
in
sub
iret
sbb
add
insl
data16
loope
nop
jo
ljmp
lret
incb
mov
inc
gs
push
cltd
das
sarb
decb
xchg
aas
mov
lock
add
aaa
out
jb
std
loop
test
fistps
bound
xlat
inc
jbe
data16
mov
out
pop
iret
imul
jo
or
mov
push
jecxz
sarl
inc
orl
push
shrb
sbb
push
sbbl
adc
fistl
xchg
sti
fs
bound
inc
pop
xchg
dec
push
jg
clc
mov
lock
inc
cmpl
call
dec
adc
inc
cli
int3
in
add
dec
jae
imul
push
lcall
outsl
cld
sbb
mov
pop
xchg
fndisi(8087
sarb
cmp
lods
mov
popa
dec
js
in
aam
iret
or
sti
std
and
pushf
mov
xor
add
cmp
jge
cli
fimuls
ljmp
lods
inc
cmp
inc
dec
dec
cli
in
std
cmp
and
pop
push
sbb
clc
dec
inc
loopne
lahf
mov
daa
pusha
out
incl
mov
gs
lret
lock
cmp
jg
hlt
inc
sub
popf
sahf
fistpll
jmp
ljmp
sub
aaa
int
out
out
daa
lahf
jmp
or
loopne
push
jns
scas
loope
inc
inc
cmp
pmaxsw
loopne
jl
imulb
jp
pusha
les
stos
lcall
inc
jg
insl
ss
jno
adc
sbb
ret
mov
mov
sahf
xchg
cmpb
inc
jmp
pop
jnp
std
jg
fbstp
pop
xchg
inc
adc
sbb
mov
lcall
repnz
cmp
leave
fistpl
push
test
dec
xchg
dec
lea
mov
ds
aas
incl
in
out
shrl
cmp
dec
add
aaa
fcomps
icebp
inc
jo
mov
adc
pop
pop
gs
pop
adc
push
ja
xchg
jge
lret
jle
fs
jg
lock
pop
dec
push
xor
jg
pop
add
push
or
movsl
popf
sbb
js
cli
jno
decb
fimuls
test
xorb
cmp
pop
rol
sbb
lock
cld
adc
jo
push
addb
fs
dec
clc
ja
mov
or
adc
xor
pushf
xor
mov
into
push
loope
cld
push
cmp
lcall
cmp
repnz
sti
gs
out
insl
jmp
xor
mov
and
mov
mov
dec
push
fcomps
xchg
dec
scas
loop
or
out
sub
jle
mov
fwait
lahf
xlat
xor
aas
arpl
decb
sbb
fptan
or
sbb
sti
sub
push
push
and
sti
push
in
jmp
jmp
pop
add
lods
fwait
iret
out
insl
incb
xchg
jb
jge
push
in
lret
mov
dec
imul
cmp
jg
cli
push
outsl
ffreep
pop
addl
xlat
mov
mov
rcrb
mov
in
jnp
xchg
daa
loopne
lods
lock
out
adc
shlb
pop
mull
xchg
test
stos
loope
jns
pop
mov
fisubl
sti
xchg
pushl
pop
pop
pop
push
sarl
push
sub
out
xor
mov
loop
pop
mov
int3
sub
cmpsb
test
popf
sub
cld
adc
pop
xchg
stc
pop
cmp
in
or
xor
push
push
add
push
inc
mov
out
mov
cmp
test
adc
rcl
mov
xchg
dec
rorb
into
std
shl
dec
in
sbb
pop
and
outsb
cmc
imul
idivl
inc
mov
test
test
daa
fwait
jg
lock
cld
fisttpl
shrb
bound
mov
pop
loop
xchg
jp
jb
xor
cmp
icebp
das
icebp
lss
test
sub
stc
xchg
or
add
sub
xabort
fwait
ljmp
and
lahf
adc
add
pusha
lcall
xchg
fsqrt
mov
dec
lahf
mov
clc
in
lea
sahf
mov
in
lahf
lods
cmp
push
das
mov
setbe
add
push
pop
jno
mov
int
xor
push
les
xor
xor
xlat
int
pusha
popa
nop
jle
fcomip
call
xor
mov
mov
aaa
dec
lock
cmpsl
mov
pop
idivl
inc
xor
pop
mov
data16
pop
idiv
fnstcw
int3
dec
rorl
pop
aad
arpl
mov
imul
xchg
addb
pop
addr16
je
ljmp
lahf
push
clc
incl
sti
dec
fistpll
xchg
jb
mov
divl
cmpsl
cmpsb
popf
mov
pop
test
dec
les
mov
or
add
xlat
decl
pop
aam
sar
pop
adc
or
fildll
fnsave
sbb
ss
cmp
add
and
lahf
mov
add
imul
mov
ljmp
mov
das
sub
mov
push
bound
repz
aas
ficoml
mov
repz
ret
jmp
xor
out
mov
sub
sub
mov
mov
sbb
jge
pop
addr16
mov
add
test
sub
jne
stos
dec
jp
xchg
xor
mov
push
mov
mov
cmp
hlt
or
mov
loope
pop
addl
xchg
sbb
pop
adc
outsb
jp
fidivrs
jg
call
loope
adc
inc
stos
pop
sub
or
pop
pop
filds
xchg
not
outsb
daa
pop
imul
add
and
lcall
in
push
outsb
add
cmpb
cld
sbb
and
mov
out
fistps
fs
filds
inc
lahf
jg
or
mov
aas
and
aaa
push
movsb
lods
inc
push
scas
xchg
pop
cmp
xchg
out
inc
and
ret
mov
cli
and
pop
idivl
adc
pop
inc
test
dec
insb
inc
popa
push
dec
je
ffree
bound
inc
jo
fwait
or
sbb
sbb
cmp
lock
stos
xchg
fnop
lret
and
dec
addb
pop
jl
filds
repnz
mov
bound
insb
xchg
decb
inc
add
dec
insb
insl
mov
daa
repnz
rol
stos
add
stos
mov
stc
pop
push
jb
or
test
in
push
notb
sub
ja
repnz
xor
incb
jmp
adc
inc
repz
sar
std
not
test
push
jne
jl
mov
mov
into
jb
mov
jo
rorl
and
aaa
cmpsb
mov
test
icebp
push
lods
mov
loop
hlt
cltd
imul
std
jge
movsb
repnz
jmp
add
push
addr16
and
je
mov
int
xor
iret
mov
sbb
ud1
clc
addr16
or
push
stos
xchg
mul
and
repnz
loope
dec
push
jg
mov
roll
mulps
cmpsb
xchg
xchg
add
cmp
adc
aad
pop
loopne
or
jle
hlt
and
pop
call
lcall
push
es
fwait
in
cmp
sub
xchg
mov
shlb
loopne
stos
imul
push
mov
sbb
insb
stos
xrelease
or
test
push
sub
fsubp
jg
ja
sub
inc
nop
gs
insb
push
addr16
aad
cld
sub
push
loop
int3
arpl
lret
push
pop
lcall
enter
int
scas
movsl
cmc
int
decl
icebp
loop
sti
out
and
fxam
pop
add
into
xlat
xchg
lds
add
jge
push
dec
inc
jmp
add
shrl
push
aas
pop
dec
pop
mov
stos
sbb
into
xchg
idivl
out
jg
xchg
mov
outsb
jle
xchg
xchg
mov
mov
call
rorl
xor
aas
push
test
xor
xor
jg
lea
cmp
pop
adc
jo
sbb
sbbl
dec
test
aas
adc
es
roll
add
addr16
aaa
or
sub
aas
and
jp
cmp
stos
fidivrs
hlt
push
out
aas
xor
pop
cmp
xlat
mov
inc
ss
jae
and
das
mov
sbb
aaa
fcoms
xor
inc
push
addr16
jp
cmp
lcall
push
scas
jg
sub
fdivp
push
sahf
inc
aaa
loope
add
in
mov
mov
enter
pop
xor
add
into
leave
cmp
xchg
mov
and
add
addr16
pushf
leave
rorl
cli
lahf
rorl
xor
jbe
iret
int
inc
mov
sbb
mov
jmp
lods
imul
ljmp
decl
inc
scas
scas
insb
lcall
test
jecxz
cmp
dec
jb
add
push
pop
test
jo
leave
pushf
or
jg
mov
test
mov
dec
pop
sub
mov
cmp
pop
xchg
and
mov
lret
xchg
in
inc
sarb
jmp
jle
addps
movl
cmp
gs
sarb
and
sub
pop
sti
xchg
ret
decl
sti
rorb
xor
xchg
rcrl
icebp
pop
es
fldenv
cmp
push
sbb
loop
nop
mov
aas
sbb
ss
inc
xor
dec
aam
pop
cld
aas
loopne
cmp
aaa
daa
sti
in
xor
adc
lcall
or
mov
fwait
lcall
jl
sbb
mov
sbb
mov
stos
adc
adc
mov
movb
inc
xor
sub
hlt
nop
or
popf
mov
jo
lret
push
xor
push
loope
inc
popf
insb
cmp
test
jge
cmpsl
cmp
aaa
xchg
push
xor
sbb
icebp
inc
std
or
lcall
clc
ja
mov
mov
bound
sar
xor
imul
lock
jo
movsl
sti
sub
mov
ja
pop
inc
jbe
inc
test
popa
mov
popa
sar
imul
std
mov
adc
movsl
cmp
cmpsl
mov
js
daa
pop
sbb
mov
pop
pop
aad
sbb
in
xchg
adc
push
xchg
cmp
sub
adc
sbb
cwtl
inc
mov
mov
jns
out
shl
out
mov
push
add
ficoms
loope
mov
out
inc
sub
mov
sbb
neg
mov
lret
shlb
mov
jecxz
enter
fdivr
push
jne
jo
push
sbb
dec
jns
xor
xchg
pop
mov
daa
lcall
incl
or
mov
jg
xchg
movsb
pop
shll
mov
cmp
loopne
jo
enter
fmulp
xchg
and
jns
jg
pop
sbb
inc
imul
lods
mov
daa
mov
adc
jecxz
lods
jb
adc
adc
push
xor
ret
std
jg
lcall
outsb
add
je
push
pop
dec
and
push
or
out
jo
icebp
incl
ret
pop
aaa
mov
mov
mov
adcb
sbb
aas
into
push
fildll
aad
fs
cmp
andl
std
jnp
inc
mov
push
xchg
xor
filds
inc
sbb
fmuls
fists
jae
xor
test
jne
lods
cmp
bound
sbb
mov
loopne
and
xor
mov
lock
pop
push
mov
leave
pop
nop
popa
xchg
clc
pop
fdivrl
hlt
iret
jbe
sbb
outsl
inc
movsl
pop
or
and
and
pop
xchg
incl
jg
pop
imull
dec
int3
lds
sbb
jg
xchg
out
mov
movsb
push
and
lcall
lcall
adcb
push
mov
scas
and
test
stc
add
test
jge
jnp
mov
fsubl
pop
dec
inc
cltd
into
and
fists
xor
and
rorb
stos
sub
xchg
in
enter
mov
rclb
aaa
mov
xor
and
pop
dec
ret
mov
xor
dec
aad
adc
push
cmc
cmp
jge
jns
jo
fs
test
jg
scas
mov
sub
mov
sar
out
in
dec
adc
out
in
inc
mov
cli
inc
call
push
push
sbb
imul
decl
les
ret
movsl
mull
push
jecxz
adc
aaa
ret
es
lock
mov
aad
loopne
push
ret
loope
daa
aam
sub
icebp
pop
adc
mov
imul
sub
push
jno
insl
xchg
lahf
or
dec
xor
cmp
cli
pop
xchg
push
adc
daa
leave
stos
xchg
leave
fstpl
rcrb
or
jp
pop
cld
ja
arpl
xchg
pop
push
add
jnp
sbb
xor
push
mov
fcomps
fiadds
inc
je
ret
imul
pop
mov
xchg
test
mov
and
incb
repnz
lahf
cmc
insl
roll
loop
pop
hlt
mov
add
incl
icebp
pop
inc
dec
push
xchg
stc
lahf
in
sbb
incl
addr16
mov
lods
nop
push
rol
jmp
pop
jne
test
jne
dec
mov
pushl
push
in
pop
or
lahf
sti
push
aad
push
subl
mov
dec
cmp
or
inc
pusha
aaa
stos
sbb
ficoml
dec
or
inc
inc
add
popf
fdivrs
fisubrs
and
mov
scas
idivb
pop
incl
xor
scas
xor
sub
mov
mov
lds
jp
sub
les
lahf
and
sbb
or
pop
jmp
pop
and
dec
dec
aas
popa
nop
fwait
adc
sarl
call
inc
fisubs
xchg
push
insl
fs
mov
arpl
in
dec
jl
repz
pop
pusha
aas
dec
adc
loope
loopne
jo
sub
lods
das
xor
add
lahf
lahf
imul
daa
inc
and
arpl
lahf
mov
daa
sub
gs
mov
cwtl
adc
jmp
pop
popf
dec
sub
icebp
sub
lods
and
add
rcrl
int
sbb
mov
dec
mov
jns
ljmp
das
mov
mov
inc
fs
ret
and
incl
jmp
aam
aaa
negl
arpl
sub
lret
in
ljmp
pop
inc
jns
cmp
xchg
repz
testb
mov
adc
dec
arpl
xchg
fs
dec
test
outsb
pop
adc
sbb
shrl
das
imul
jb
pop
arpl
call
cmp
jae
cs
aaa
push
das
sbb
sub
jg
cld
xchg
data16
loop
xorl
insb
mov
jg
mov
idivb
stos
cmp
mov
inc
pop
js
scas
incl
loop
xor
lahf
fwait
clc
imul
iret
negw
pop
mov
in
stos
insb
stc
mov
aas
dec
dec
adc
xor
mov
in
mov
cmovb
mov
mov
call
cmp
ja
adc
sarb
insl
push
cmp
inc
imul
mov
call
inc
pop
imul
xor
fadds
cld
jmp
ljmp
or
or
sub
scas
xor
mov
shlb
cmp
pop
std
loop
mov
lods
shl
add
das
mov
jecxz
push
pop
dec
adc
dec
popa
lea
sbb
ja
in
outsl
pusha
hlt
adc
iret
xchg
pop
dec
fs
mov
aas
stos
mov
add
or
dec
jge
mov
xor
aad
jno
push
push
andl
pop
push
push
cwtl
mov
aaa
ret
repnz
ss
or
xor
mov
mov
pusha
int3
icebp
js
cmp
cmp
lret
jmp
and
fs
cwtl
cmpsb
sub
cmp
adc
movsl
dec
cltd
lock
jge
call
outsl
mov
bound
jge
xlat
testl
shll
xchg
adc
rclb
cltd
sub
std
jg
push
add
xchg
push
arpl
sti
xchg
ret
push
iret
mov
xor
cmp
lods
jmp
mov
enter
or
xor
sbb
loope
ficomps
pop
jns
pop
adc
sbb
cmp
cli
cmp
test
out
cli
cmp
add
das
cmc
loope
hlt
sti
cmp
mov
mov
jno
xchg
test
decl
xchg
push
mov
cmpsl
mov
xchg
ja
shrb
bound
clc
push
add
add
jge
jne
inc
push
rorl
sarb
push
test
hlt
dec
sub
std
cs
aaa
jmp
xor
adc
jle
pusha
mov
cmpl
and
xchg
dec
pop
add
sbb
decb
push
mov
outsl
mov
xor
jnp
mov
les
cmp
add
outsl
maskmovq
notl
mov
add
in
pushl
push
outsl
rcrl
lds
inc
adcb
in
adc
adc
xor
cmpb
xchg
jg
cli
incl
in
push
add
mov
jg
mov
les
xlat
test
lret
push
pop
add
call
call
js
outsb
cmp
jno
pop
aad
mov
push
nop
sub
ljmp
test
xor
sti
inc
inc
push
fists
add
in
and
aaa
jmp
imul
jge
bound
andl
or
pop
jge
repz
aam
mov
or
jno
dec
mov
dec
les
inc
outsl
or
bound
jae
loop
fsubr
in
cmp
mov
dec
xchg
cli
mov
inc
and
push
cmp
cli
call
mov
jp
inc
or
add
mov
cmp
pop
fsubl
fwait
mov
pushf
arpl
ret
fnsave
lcall
incl
push
jle
xchg
xchg
je
js
xchg
mov
int3
pushf
pop
rcr
shr
and
xchg
push
imul
inc
push
push
xchg
jnp
pop
sbb
jbe
or
incl
or
cli
pop
lret
adc
jo
dec
sub
clc
or
lret
sbb
mov
push
push
icebp
cmp
add
scas
cmp
popa
jmp
pop
xchg
dec
xor
ret
xor
fcmove
test
push
inc
std
add
pop
xchg
push
add
push
mov
rorb
stos
and
icebp
out
loop
faddl
sahf
or
mov
jno
fs
ljmp
arpl
das
jo
jge
fcmovu
or
aad
icebp
adc
dec
sub
pop
xchg
push
cmp
jbe
cmpl
mov
lea
inc
fidivs
shll
popa
jmp
pop
add
inc
aad
lcall
std
push
mov
jmp
jle
js
push
jne
rclb
call
jg
ret
xor
add
popf
sbb
push
jle
mov
in
mov
pop
jns
das
lea
clc
cltd
inc
loop
adc
mov
cmp
adc
outsb
insl
lods
cmp
pop
sti
into
jecxz
dec
mov
sbb
xchg
sub
cmp
mov
xor
mov
loopne
push
adc
mov
outsl
or
mov
push
push
cmp
das
mov
mov
loope
lahf
cmp
dec
jp
push
jb
and
scas
inc
jmp
push
jne
xor
aam
iret
cmp
cld
mov
pop
push
lret
bound
mov
lock
jns
push
into
xor
dec
jmp
cmp
out
stos
inc
cmp
jb
push
mov
jmp
fnsave
in
shll
aad
xor
cs
mov
clc
sti
repnz
testl
idivl
mov
push
daa
mov
sub
call
loope
mov
mov
ffree
mov
pop
dec
xlat
dec
addb
push
mov
loopne
fwait
dec
cld
jae
sub
xor
push
inc
clc
adc
xchg
lcall
insb
pop
in
sub
push
sub
lret
xchg
clc
out
sub
inc
js
inc
cld
stc
sbb
pop
or
lcall
mov
rcrl
jle
xchg
cmp
sbb
call
shr
jae
cmpb
lahf
xor
std
jecxz
in
test
mov
mov
in
xchg
in
rcl
mov
add
incb
dec
inc
adc
push
call
add
in
loope
sbb
fdivrs
pop
adc
push
ficomps
xlat
mov
lcall
test
mov
adc
adc
loopne
adc
ds
xchg
xchg
in
cmp
pop
std
mov
shlb
sub
or
mov
lret
js
add
dec
ficoms
inc
iret
nop
jo
xchg
jne
cmp
aad
ds
xor
pop
sub
cmc
jg
loopne
cmp
subl
faddl
shll
aaa
push
ljmp
fstps
movsl
scas
add
xlat
xchg
aas
aaa
hlt
jnp
xchg
sbb
fwait
aaa
pop
addl
or
lods
jne
out
mov
js
pop
out
xorb
je
shll
push
mov
std
dec
mov
xorl
aas
jae
fistps
inc
sbb
ss
in
lea
decl
negl
fcoms
add
add
pop
add
mov
icebp
pop
pop
push
cmp
mov
pop
out
mov
xorl
lock
cwtl
sti
hlt
mov
loope
jg
dec
inc
push
add
or
sbb
out
mov
inc
aas
decl
add
cwtl
add
sub
lcall
out
mov
loop
mov
cmp
ret
jo
add
loope
hlt
arpl
test
scas
cmc
push
call
in
jnp
push
incl
sar
push
dec
das
clc
ja
mov
inc
addr16
mov
scas
cmp
jae
and
outsl
test
cs
decl
push
shr
dec
mov
xchg
shlb
pop
push
pop
sbb
xchg
imul
test
arpl
sbb
hlt
daa
aaa
jmp
je
in
fists
shll
int3
icebp
ja
loopne
pop
fdivs
loopne
xor
dec
icebp
sahf
insb
mov
cltd
push
xor
clc
push
iret
dec
push
xchg
fs
cmc
out
mov
mov
scas
outsl
paddw
dec
mov
lcall
out
jbe
pop
out
and
pop
add
push
lock
adc
loope
cwtl
cmpsb
in
sub
pop
ljmp
dec
pop
pop
jnp
sub
xor
iret
add
cld
ds
test
lods
mov
mov
lods
js
andb
adc
sbb
cmp
jg
cmp
sub
iret
or
or
je
inc
jno
push
push
lock
aam
aad
xchg
dec
mov
xor
xchg
cwtl
jg
sbb
cmp
mov
jge
cli
push
dec
mov
call
repz
jg
sti
arpl
cmp
test
jp
push
cmc
aaa
lock
shrb
out
and
das
mov
cld
jg
sbb
adc
dec
add
dec
mov
push
mov
roll
sub
mov
add
jno
cmp
cld
cmp
aas
or
ljmp
stos
repz
add
sub
ficoms
insb
pop
cwtl
test
addr16
ljmp
imul
stos
imul
call
jae
fs
daa
sub
ret
cmc
movsb
xor
jmp
and
xor
clc
aas
push
jg
mov
sti
mov
lcall
mov
jne
pop
sbb
mov
loop
add
inc
mov
rcr
jo
sbbl
xchg
in
inc
or
addr16
and
incl
xlat
or
popf
xor
pop
mov
mov
mov
es
ret
fbld
in
arpl
inc
sub
stc
and
iret
mov
jno
dec
fs
or
lahf
mov
jne
in
lret
loopne
adc
mov
cmp
add
into
insb
jg
push
sti
aas
xor
sbbl
outsl
clc
insl
hlt
fldt
mov
mov
pop
mov
sub
cld
hlt
add
mov
xchg
mov
jl
and
dec
add
insl
call
mov
es
dec
sub
repnz
in
xor
mov
call
jae
mov
sub
shl
aaa
jo
insl
test
sbb
ror
std
dec
jnp
lock
sub
push
shlb
cld
sbb
iret
clc
aad
int3
fcmove
insl
call
clc
bswap
push
ds
cmp
pop
lea
sti
or
push
xchg
sub
sub
inc
cmp
enter
xchg
fsubrs
in
mull
dec
test
push
outsb
xor
lret
jmp
or
stc
jo
sub
fisttpl
stc
jnp
jmp
test
inc
sub
je
clc
clc
cmp
cwtl
fisubs
jle
xchg
sub
mov
xor
mov
sar
xchg
and
fstp
pop
mov
mov
sbb
push
leave
seto
enter
and
cmp
jns
fwait
inc
lahf
and
mov
out
and
mov
adc
mov
roll
xchg
in
sbb
jg
movsl
ret
mov
sarb
ss
movsl
add
shll
push
arpl
cmp
lock
pop
ss
ret
jmp
adc
inc
inc
shl
std
add
add
dec
lahf
xlat
aas
loopne
dec
push
push
mov
dec
sub
mov
sti
or
shll
inc
adc
cmp
mov
sbb
pop
sub
add
xor
in
mov
xchg
movsb
push
int
std
sarl
fistpll
cltd
xchg
sbb
pop
mov
ret
mov
mov
ljmp
addr16
fistpll
jne
inc
jne
ret
xchg
cltd
add
mov
dec
jb
cmp
cmp
mov
mov
movswl
stos
fbstp
icebp
ror
push
fdivrl
shl
aas
cli
mov
sarb
lret
call
fdivr
sbb
mov
sbb
into
push
lret
arpl
add
pop
xchg
jecxz
jecxz
push
mov
jecxz
adc
jg
aas
outsb
xacquire
xchg
mov
clc
mov
ffreep
decl
insl
in
and
pop
mov
shrl
jle
inc
inc
std
das
faddl
add
mov
jg
movsb
and
jg
push
jns
push
lahf
jecxz
aas
or
std
push
and
rclb
cmp
xchg
or
incl
mov
pop
and
dec
or
push
lret
sbb
jecxz
mov
shll
xchg
popa
in
inc
test
push
insb
subl
xlat
inc
add
cld
sub
dec
cs
cmp
jl
pop
clc
and
push
les
xlat
jo
loopne
xchg
sub
mov
outsl
xor
mov
ret
cli
pop
push
pushf
daa
sub
sti
popa
push
ja
jno
or
movsb
inc
inc
jle
jmp
xchg
ds
lods
or
xchg
cltd
pushf
mov
mov
jb
int3
test
cli
imul
jp
sub
cmp
sbb
xor
aad
mov
aaa
out
mov
pop
mov
js
stc
es
test
add
loope
xchg
jg
cld
pop
add
inc
adc
add
or
cmp
xor
mov
subl
fimull
push
imul
pop
inc
mov
xchg
popf
pop
xor
dec
lods
icebp
jg
cmp
mov
out
clc
div
sub
xlat
push
add
dec
mov
test
cmp
out
daa
cmp
sub
fisubl
push
popf
arpl
or
fbld
pop
sarl
nop
lock
sub
movl
mov
mov
into
shrb
stos
xor
lcall
sbb
xchg
lret
ret
inc
push
aas
sbb
sub
cmpsl
jg
daa
xchg
or
dec
push
mov
add
les
and
ds
dec
pop
lods
fwait
arpl
adc
mov
decb
mov
arpl
cmp
je
loop
mov
bnd
outsl
add
loopne
rorl
and
xchg
ds
ja
nop
rol
int3
mov
fisubrs
inc
dec
push
insb
jl
xchg
jmp
xchg
jo
mov
loope
clc
cmpsl
lds
adcb
leave
jle
xor
sbb
pushf
out
dec
xchg
jmp
es
cmp
dec
or
ret
lods
adc
leave
call
cmp
daa
inc
sub
and
clc
pop
test
inc
out
pop
gs
addr16
aad
mov
mov
scas
enter
xchg
or
sti
dec
push
inc
pop
cltd
and
loope
jle
imul
les
mov
ds
test
mov
dec
mov
cmpsl
call
jg
insl
outsl
mov
add
insb
in
xor
add
push
shll
iret
sbb
loop
jnp
or
mov
nop
cmpsb
insb
lods
sbbb
xor
loopne
mov
cmp
xchg
push
ret
mov
call
or
adc
inc
ds
mov
sbb
xor
fstpt
pop
std
or
das
mov
inc
fists
jge
insb
fdivr
testl
ljmp
call
sub
scas
and
mov
add
dec
xor
cmp
cltd
jo
cmpsb
out
stos
jecxz
mov
out
push
lods
fdivrs
pop
inc
aaa
cmp
imul
pop
xchg
incb
mov
pop
adc
push
xchg
push
mov
xchg
and
andl
loope
mov
roll
negl
jns
fisubrl
cmp
cld
mov
and
aaa
test
or
aas
push
lret
push
and
js
pop
push
es
dec
pusha
push
add
and
xlat
sbb
mov
arpl
sub
sbb
mov
add
cmpsl
adcl
lock
sub
xor
pop
hlt
xor
test
mov
arpl
xor
out
xchg
scas
mov
sub
addl
dec
add
je
neg
xor
push
add
sub
dec
xor
add
icebp
adc
les
test
sbb
push
loope
addb
add
xchg
xchg
xlat
sub
push
std
std
sti
pop
adc
neg
mov
enter
not
sub
and
loopne
add
lods
andl
jo
gs
stc
lcall
push
lcall
xor
dec
jmp
outsl
inc
negl
clc
ljmp
xlat
dec
add
not
sbb
sub
mov
add
mov
jg
repnz
testl
push
sbb
push
sti
inc
pushf
loope
sarl
stos
dec
inc
adc
pop
inc
sbb
inc
imul
mov
sub
inc
xor
and
or
push
adc
xorl
subl
jno
inc
pop
cld
ret
inc
inc
pop
push
test
mov
sarb
je
ret
addr16
fisttps
ret
push
sub
test
out
movsb
mov
push
push
inc
js
jle
push
inc
popa
inc
bound
insb
fs
insl
and
inc
sbb
adc
push
dec
add
sbb
push
rcll
xchg
push
pop
add
add
daa
test
ficoms
push
inc
sbb
sub
add
sub
insl
js
xchg
or
loopne
cmp
dec
jp
jns
dec
inc
add
dec
pcmpgtb
inc
faddl
jo
jo
inc
jbe
push
inc
push
adc
aaa
inc
lock
sub
call
fbld
nop
adc
dec
add
mov
mov
repz
xor
loope
scas
popf
repnz
lods
sub
fcomip
fcmovnb
pop
push
inc
add
sbb
je
scas
enter
fmuls
jle
xor
icebp
dec
insb
dec
dec
push
mov
ret
xor
add
nop
jo
sbb
pop
insl
xor
insb
push
push
jns
sbbb
mov
fildll
icebp
add
adc
push
out
es
out
xchg
mov
cmp
sub
push
outsb
dec
push
sbb
sbb
cmp
insb
pusha
scas
rcpps
stos
pop
sub
xorb
xchg
ss
inc
sub
lret
pop
xorl
push
popf
push
dec
push
lret
push
testb
and
fwait
jge
sbb
mov
jg
shr
loopne
mov
inc
jg
stos
fisttpl
je
xor
mov
ret
ret
out
adc
outsl
pushw
lcall
push
cmp
xorb
ret
push
jae
pop
xchg
cli
xchg
mov
aam
insb
arpl
jns
push
push
inc
loope
lsl
outsb
jae
sbb
cmpsl
ret
popa
push
push
stos
inc
push
push
clc
cmp
xchg
push
ss
inc
test
daa
cmp
popa
test
js
cld
and
add
outsl
mov
dec
fisubrl
test
push
notl
push
lcall
data16
stos
data16
and
mov
push
outsb
or
inc
lock
stc
mov
jo
dec
jo
adc
add
addps
dec
rorb
jecxz
or
cmp
jne
jo
std
repnz
mov
stc
mov
addb
cmc
add
sbb
mov
movsb
faddp
call
loope
inc
inc
jo
add
pop
pop
jl
xor
in
push
push
insb
pop
mov
adc
xor
or
inc
call
psubb
andb
rolb
inc
xchg
loopne
inc
xchg
pusha
imul
sub
scas
dec
inc
inc
jle
inc
push
pop
subl
add
rol
adc
sbb
inc
push
pop
jbe
hlt
imul
subb
aam
stos
and
inc
loopne
xchg
mov
and
cs
inc
cmp
add
cmp
jo
xchg
inc
push
push
cmp
aas
push
sbbl
sub
rcrl
into
jne
push
mov
mov
fldl
mov
fwait
push
or
outsb
dec
push
push
nop
std
movsl
orl
incl
add
repnz
add
popf
adc
adc
lret
push
rclb
stos
popf
incb
fistps
cli
add
jnp
cli
lods
mov
outsb
jne
dec
dec
push
dec
hlt
aad
sbb
mov
addl
add
popl
pop
mov
push
inc
insl
rcll
mov
adcl
rcll
mov
mov
je
gs
push
popa
scas
mov
arpl
jne
mov
push
push
mov
inc
add
pop
ret
jo
add
jge
loop
push
jb
lods
mov
pusha
push
adc
or
in
add
les
addr16
add
lods
inc
push
incl
mov
sbbb
xor
in
outsl
scas
insb
addr16
add
sub
push
add
jmp
popl
int3
and
jle
hlt
push
mov
cmp
inc
xchg
shll
sub
jge
insb
and
cmpb
enter
add
jb
idivb
jne
adc
add
dec
aaa
mov
add
fwait
jmp
mov
xor
out
test
mov
aaa
test
jns
lock
cld
inc
and
add
sub
dec
repz
neg
sub
add
pop
in
scas
dec
std
inc
or
xor
fistpl
cld
push
pop
mov
imul
pop
xchg
xor
popf
shll
mov
cli
xor
sub
push
jno
lock
mov
push
inc
aam
add
adc
pop
pushf
ficoml
fsubl
push
jge
loopne
xlat
arpl
xor
enter
cmp
inc
imul
sarl
dec
xchg
pop
lds
push
sub
inc
inc
push
pop
je
push
incb
add
mov
mov
cmp
push
mov
cs
push
push
inc
add
xchg
fimuls
sbb
ss
dec
jns
jo
push
dec
mov
xchg
test
clc
aam
inc
js
outsb
cmp
mov
arpl
push
mov
jle
fdiv
jno
inc
hlt
aam
fdivs
fs
repnz
scas
jle
fs
jne
clc
inc
jb
dec
inc
pusha
nop
and
sbb
lea
add
sbb
push
jae
aas
mov
data16
int
push
push
inc
adc
stos
push
sarb
pop
ficoms
pop
push
cmp
ljmp
xchg
pop
hlt
jl
and
test
ds
add
dec
loopne
nop
lahf
out
hlt
add
ret
pop
pusha
jb
pop
add
or
cmpsb
adc
xor
mov
dec
mov
cmpsl
xchg
in
popf
in
insl
mov
sbb
inc
inc
push
xor
mov
cld
adc
dec
aad
push
xor
mov
andl
imul
addr16
imul
jge
pop
arpl
out
shl
mov
and
rcll
xchg
add
hlt
imulb
in
add
mov
leave
dec
lahf
xchg
mov
sarl
or
pop
inc
lea
add
adc
lahf
lock
pop
sbb
imul
adc
cmp
sub
roll
adc
aam
mov
add
push
mov
sbb
jecxz
jecxz
add
or
push
shlb
inc
xchg
xor
cmp
inc
push
inc
std
xchg
sbb
or
and
xchg
outsl
movsl
ret
and
xor
cld
imul
aas
loopne
pop
shrb
or
or
add
adc
push
sbb
and
sbb
insb
inc
inc
dec
daa
xor
cmpsb
push
rcl
adc
mov
push
xor
sub
or
inc
xor
sbb
mov
cmpsb
stc
adc
mov
daa
inc
cmc
aas
sbb
stos
dec
add
cwtl
and
add
push
subb
inc
sbb
sbb
mov
aam
fisttpl
mov
adc
inc
sub
push
mov
push
inc
mov
mov
xchg
xchg
add
jb
or
lcall
push
mov
out
inc
test
inc
cltd
fsubs
xor
fsts
xchg
fists
or
std
pop
testl
stos
mov
in
or
enter
add
inc
cmp
movsl
subl
pop
push
lods
mov
test
popf
mov
decl
adcb
mov
ret
lcall
rclb
rclb
aaa
test
adc
cltd
mov
mov
mov
into
dec
pop
sbb
out
sbb
add
cmp
mov
adc
push
and
sbb
and
inc
cld
movsb
call
xchg
or
jmp
inc
mov
sbb
xorl
lea
inc
push
aad
dec
add
fsubs
and
add
bound
or
push
enter
rorl
subl
pop
inc
in
les
mov
mov
imul
fiadds
adc
movsl
imul
pop
aam
movsl
icebp
push
mov
ficoms
mov
movsb
mov
aam
fcmovu
jnp
mov
mov
rolb
pushl
or
pop
adc
movl
shll
xor
lcall
fldenv
add
sbb
dec
sahf
dec
rorl
mov
inc
addl
mov
xchg
fistps
cmpsl
sub
loope
pause
push
xor
add
lea
lea
popf
mov
and
pop
fs
insl
stc
or
in
lcall
or
je
push
sbb
push
push
mov
cmp
mov
roll
jno
rorl
xchg
jne
sbb
roll
xor
mov
push
shlb
out
cwtl
adcb
mov
mov
orb
mov
jns
pop
cmp
mov
hlt
mov
inc
add
add
xor
sbb
cmp
mov
or
xchg
mov
xor
cmp
sub
mov
mov
mov
les
mov
sub
movsb
jecxz
adc
out
andb
sub
lret
push
inc
enter
gs
xchg
sub
cmp
mov
call
out
inc
dec
inc
aad
mov
and
mov
cmp
jae
aas
ficoml
mov
pop
mov
nop
sub
inc
push
adc
add
nop
inc
mov
hlt
popa
jns
mov
push
ret
add
add
push
push
dec
outsl
aad
dec
test
add
bound
add
mov
adc
mov
sbbl
xchg
mov
jge
adc
ret
add
arpl
add
xchg
sub
filds
adc
cmp
or
pop
leave
sbb
aam
or
cmp
enter
faddl
es
cmpl
sub
inc
pop
inc
dec
mov
cmp
add
int3
pop
sbb
inc
stos
and
inc
addr16
out
or
sbb
push
xor
popf
add
mov
add
in
mov
add
or
aad
shlb
mov
push
jno
leave
push
add
push
jg
and
cmp
stos
inc
and
xchg
push
inc
push
scas
mov
sub
rcll
add
repz
cmpsb
xchg
and
mov
gs
add
adc
add
mov
pop
push
add
or
outsl
add
les
or
cltd
lret
loop
mov
or
int3
movsb
push
push
repz
test
mov
rclb
adc
push
negl
cmp
imul
sub
nop
add
outsl
stos
or
mov
xor
jns
mov
je
stc
add
add
adc
ret
push
ja
pop
ret
test
orb
stos
inc
fisttpll
or
sarb
js
xor
pop
shll
or
cmp
or
addr16
xor
add
stos
nop
fwait
negb
adc
sub
repnz
adc
stos
sub
jno
fadd
cmp
pop
and
xor
and
jp
outsl
mov
xor
sbb
xor
mov
leave
lock
push
adc
adc
jge
dec
stos
in
mov
nop
scas
mov
outsl
test
imul
sbb
cmp
and
push
lods
adc
lods
push
enter
inc
mov
dec
lea
mov
movb
dec
ret
ffree
or
sbb
pop
mov
aam
add
dec
ret
movsb
mov
and
movsb
and
and
std
out
in
subl
sub
add
sub
fwait
loope
and
and
adc
icebp
adc
xchg
repz
out
pusha
jo
adcb
jb
xchg
jns
dec
cmp
cltd
push
loopne
dec
daa
loope
dec
mov
xchg
mov
call
push
movsb
das
jb
xchg
pop
addl
out
xchg
xor
call
mov
xchg
lcall
cmpsb
or
sbb
dec
cmp
xchg
jns
mov
orl
add
arpl
mov
andb
hlt
pop
mov
or
jecxz
xor
inc
adc
sbb
jecxz
add
jecxz
lods
mov
sub
mov
inc
xor
push
adc
and
aam
scas
rcl
leave
mov
or
inc
jmp
mov
inc
dec
mov
push
dec
in
cmp
or
pusha
xchg
dec
dec
and
add
mov
sub
in
ds
lahf
pop
aad
jo
jge
adcb
test
sub
mov
ret
sub
sbb
call
dec
or
xcrypt-ctr
cmpsl
sbb
test
mov
shll
sbb
mov
pop
aam
xor
push
pushf
lret
leave
mov
fadd
inc
repnz
push
andnps
fldl
mov
dec
jl
sbb
and
sarb
sub
sbb
push
icebp
in
sub
test
add
mov
pusha
dec
int3
mov
dec
mov
adc
pop
add
leave
and
inc
pusha
fnstsw
sti
and
shlb
test
icebp
gs
push
pop
push
ss
arpl
xchg
sub
add
lods
lcall
dec
jbe
fcoml
pop
mov
or
and
mov
fstl
adc
adc
icebp
and
or
mov
mov
add
add
xchg
adc
push
pop
xor
push
mov
test
xor
and
push
repnz
xor
mov
pop
rol
sub
sbb
mov
shlb
xor
add
push
add
xor
and
mov
ret
mov
or
or
sub
xor
into
fwait
add
or
je
dec
fsts
outsl
movsl
outsl
fs
push
push
or
pop
dec
rcrl
xor
fstl
push
mov
pop
mov
mov
je
and
out
sub
loope
inc
add
or
add
or
cmc
lods
addr16
adc
daa
inc
cmpsl
adc
pop
push
insb
gs
adc
call
stos
and
arpl
mov
fistpll
push
adc
or
shl
xchg
lods
imul
or
push
repz
cmp
rclb
push
sbb
pop
push
dec
sbb
sti
nop
cmp
cmpsb
int3
fistps
xchg
iret
or
mov
aam
mov
ret
cwtl
and
aad
ret
mov
mov
sub
imul
push
lea
test
pop
insl
add
sbb
sbb
sub
mov
aad
inc
movsb
cmpsb
test
cmpsb
or
pop
push
pop
and
ja
leave
dec
push
shl
ret
xor
pop
insb
pop
adc
enter
xchg
sbb
push
ret
push
add
inc
jns
rclb
push
cwtl
sub
push
loope
adcl
pusha
in
imull
or
imul
adc
or
sbb
cmpb
jns
lds
shlb
push
jp
loope
dec
push
adc
add
or
inc
andl
mov
jns
je
dec
or
jecxz
and
sbb
inc
loope
push
add
dec
data16
popa
popa
add
cmpsb
or
push
lock
and
cmpsb
lcall
lret
inc
sub
aad
orb
fidivrl
mov
sbb
andb
rol
sbb
jno
imul
es
add
shlb
nop
jns
mov
sbb
pop
rolb
ss
push
add
dec
inc
dec
mov
les
inc
adc
push
and
test
test
adc
and
scas
add
addr16
jle
mov
aas
cmpsb
lahf
loopne
adc
inc
mov
dec
xor
js
mov
icebp
jmp
test
or
mov
push
addl
jae
int3
fsubrs
and
sub
inc
xchg
adc
xchg
mov
aaa
mov
or
insl
cmc
push
add
add
in
adc
jno
inc
andb
sbb
pop
adc
mov
int3
xchg
movsl
pop
loope
mov
xchg
movsb
mov
add
pop
xchg
inc
lcall
add
xchg
inc
cwtl
mov
pop
sahf
inc
int3
nop
or
rcrl
sbb
adc
rcrl
pop
push
push
push
fs
ja
xor
adc
pop
sbbb
nop
push
add
push
inc
push
adc
add
clc
add
or
and
xor
rcl
sub
sbb
pushf
std
or
cmpsl
add
push
jecxz
inc
or
inc
or
in
dec
mov
push
push
movsl
add
pop
js
pop
xor
pop
add
or
rcll
xlat
xor
add
ret
inc
dec
sarb
and
mov
or
add
add
add
and
mov
jno
inc
mov
and
xchg
or
jge
and
sub
mov
addb
cmp
sbb
scas
xor
sub
jnp
and
mov
xor
mov
add
rol
rolb
and
sub
loopne
mov
mov
add
push
mov
aad
inc
fs
test
es
pop
pop
add
sbb
cmp
xchg
push
and
stos
push
xchg
jmp
inc
inc
stos
bound
mov
adc
cmpsl
out
adc
jge
cmp
insl
jo
inc
push
dec
sbbb
xchg
imul
test
enter
or
mov
pop
push
mov
dec
add
dec
xor
je
sub
push
ss
into
sub
add
inc
popa
jo
pop
fwait
push
push
mov
mov
push
sbb
or
mov
pop
add
rcr
dec
adc
sbb
sub
shlb
jmp
adc
test
sbb
dec
inc
inc
movsb
cmpb
mov
test
xor
lea
jae
sbb
sub
loope
jg
and
in
adc
mov
dec
or
adc
jno
or
and
cmp
inc
inc
lods
addr16
and
inc
fdivl
or
inc
jbe
je
pusha
xor
mov
add
lcall
sub
test
push
cmpsl
aaa
sub
sarb
jns
mov
jns
rorl
sub
imul
stos
and
add
dec
jecxz
add
stos
addb
inc
push
jp
fistpl
fs
xor
icebp
mov
add
adc
out
dec
in
rorb
mov
cwtl
pop
push
jns
je
call
push
gs
jns
insl
sbb
add
cmp
sbb
daa
dec
repnz
jne
orb
add
pop
jno
add
adc
scas
sbb
xor
hlt
mov
inc
sub
sbb
scas
xchg
test
outsb
add
leave
cmp
push
shll
or
push
aaa
pop
ret
push
ret
xchg
push
mov
mov
cmpsb
inc
xchg
mov
push
dec
pop
test
jg
add
addb
lahf
jle
sahf
xchg
or
push
xor
inc
in
and
cmovs
rorl
addb
inc
dec
nop
iret
daa
jo
pop
sbb
mov
adcb
xchg
xchg
subl
and
lods
jl
rclb
inc
mov
in
arpl
xor
insb
xor
dec
daa
add
loop
inc
push
sti
in
add
leave
push
mov
les
out
popf
addr16
lahf
lcall
add
push
loope
adc
pushf
dec
or
xor
and
mov
jno
stos
mov
add
jne
inc
lret
es
imul
mov
addr16
int
xor
inc
aam
movsb
rcl
push
pop
or
mov
ja
loope
dec
jmp
sub
adc
rolb
xchg
nop
cmpsb
add
mov
mov
popa
or
mov
add
rcrl
add
pop
jg
cmpsb
xor
pop
cmp
inc
scas
cli
stc
cmpsb
xor
and
iret
push
jbe
idivl
decb
and
add
xor
fldt
sbb
sbb
pop
xor
lods
lds
and
inc
outsl
dec
fdivrs
xorb
dec
mov
sub
sbb
jno
add
adc
or
sub
rolb
rcl
adc
arpl
inc
pusha
ret
or
xchg
cli
xor
add
mov
cmp
xor
add
jnp
and
enter
add
dec
aam
out
mov
cmp
repz
or
adc
xor
mov
push
adc
pop
cmp
test
outsb
sub
sbb
add
mov
jg
imul
rorb
add
mov
mov
pusha
gs
inc
clc
mov
dec
xlat
scas
pop
fwait
test
imul
or
addb
sbb
push
inc
ficoml
push
and
and
xor
mov
sub
mov
subb
fldcw
cmp
je
inc
in
sahf
mov
add
xchg
cmc
xchg
and
clc
adcl
mov
mov
xor
xchg
fsubrl
adc
or
fdivp
adc
add
popa
and
cwtl
and
and
add
xor
xor
lods
rorl
nop
mov
sbb
inc
lods
cmp
xor
pop
adc
dec
outsl
pop
inc
pop
mov
lcall
sub
leave
pusha
jmp
adc
cmp
je
and
insl
loope
inc
loope
ljmp
mov
stos
jb
sbb
sub
dec
fwait
cwtl
fs
in
dec
mov
js
jb
xor
and
imul
sti
or
scas
or
sub
test
in
mov
scas
lahf
xor
xchg
adc
mov
xchg
outsl
fld
rorb
pop
or
add
movsb
inc
pop
fdivrl
ljmp
or
aad
addr16
adc
dec
jnp
add
sub
mov
inc
inc
adc
icebp
xchg
movsl
add
push
rcl
push
insb
shll
jb
mov
sbb
cmpsb
imul
jne
js
and
loop
push
lods
stos
push
add
add
push
mov
xlat
add
sub
add
popl
movsl
gs
pop
gs
add
or
and
pop
arpl
xor
test
nop
arpl
dec
add
add
cltd
sub
xchg
je
shll
pop
sub
sub
jg
pop
xor
mov
xchg
add
lea
rorl
or
dec
jmp
testl
pop
inc
xlat
adcb
dec
fwait
cmp
add
xchg
fistpl
icebp
mov
gs
leave
inc
pop
or
sub
push
add
sub
rclb
mov
pop
cmp
and
popa
adcb
adc
stos
add
in
inc
pusha
add
inc
fldl
cmpsb
or
jns
nop
xchg
sub
mov
insl
inc
and
dec
or
scas
jecxz
mov
das
rclb
cs
into
and
dec
sub
dec
pushf
imull
rcll
subb
stos
cmp
orb
stos
push
test
adc
loopne
push
xchg
jb
push
test
sub
sbb
xor
mov
popf
mov
imul
movsb
orl
out
jo
pop
adc
stos
inc
cmpsb
or
push
or
stos
mov
or
xor
outsb
mov
bound
jb
xchg
adc
jb
mov
xchg
shl
mov
push
mov
xchg
sbb
or
cmpsb
jno
xorb
icebp
js
mov
hlt
imul
daa
and
xchg
nop
stos
mov
mov
xor
cs
inc
mov
push
add
push
popf
adc
cs
or
sbb
daa
popl
mov
sbb
push
pop
dec
add
in
jge
sbb
dec
dec
or
arpl
add
jo
adc
push
mov
or
movsb
es
cld
add
add
sub
std
shl
and
dec
movsl
mov
xchg
dec
inc
add
add
in
push
iret
imul
add
and
xorl
mov
push
dec
sbb
sub
sub
xor
stos
out
and
or
mov
popf
mov
push
lock
push
adc
or
push
push
adc
dec
inc
lods
in
enter
sub
das
jg
sub
add
push
test
and
push
sarb
inc
pop
les
jnp
pusha
orb
insl
je
mov
xlat
arpl
int
xchg
mov
icebp
sbb
inc
mov
mov
xchg
xor
xchg
adc
cs
add
and
dec
xchg
mov
push
dec
rcll
adc
mov
adc
dec
pop
inc
xchg
lret
jae
inc
ftst
or
nop
add
andb
push
and
rcll
or
add
pop
sbb
push
mov
dec
pop
insb
sbb
jns
stos
adc
loop
sbb
push
lock
fisttpll
sub
push
mov
push
repnz
xlat
add
test
aam
dec
mov
push
and
xchg
lods
imul
repnz
loope
mov
xchg
adc
push
add
pop
in
popa
add
xor
fiaddl
es
xchg
das
sub
sbb
lret
mulb
inc
andb
add
imul
xchg
cmp
lahf
xor
add
scas
adc
adc
adc
inc
aam
and
xchg
addb
mov
inc
push
or
push
shrl
push
xor
push
arpl
jno
repnz
rolb
lea
xchg
add
mov
or
icebp
mov
inc
pop
lods
adc
popf
inc
scas
cmc
jne
cmpb
jns
and
dec
mov
xor
fisubs
jno
adc
sbb
or
inc
add
lea
and
jl
sub
push
inc
dec
jge
mov
and
movsl
mov
xchg
gs
arpl
dec
sub
lret
and
shll
pop
mov
xorl
mov
add
sbb
mov
lds
jg
sbb
pop
push
dec
mov
push
and
mov
add
scas
xchg
and
and
les
sbb
dec
dec
push
mov
icebp
nop
jo
dec
dec
jl
adc
leave
xor
mov
in
sbb
mov
dec
popl
rolb
out
xchg
pop
xor
jge
push
add
sub
push
repz
inc
mov
es
lret
int
adc
push
or
mov
sbb
mov
push
cmp
xchg
and
add
cmp
add
ret
mov
add
adc
test
or
jo
fsubl
lock
test
push
dec
inc
add
mov
loop
mov
add
mov
sub
fwait
push
test
cmpsb
mov
mov
cmp
mov
rolb
or
leave
decb
inc
jne
dec
jne
clc
bound
leave
lea
dec
add
orb
mov
sti
imul
add
push
mov
push
ret
dec
jns
sbb
cmp
stos
daa
inc
movsb
test
bound
inc
addb
add
scas
mov
add
sbb
ret
inc
cs
adc
pop
and
stos
jg
roll
nop
pop
add
ljmp
sbbb
fstpt
imul
sbb
xchg
add
out
mov
lods
sub
rcrl
mov
sbbb
adc
pusha
inc
and
sbb
inc
push
aad
push
jbe
xchg
jns
pop
add
nop
dec
mov
pop
ret
lea
mov
shrb
lock
sbb
inc
or
mov
addb
inc
sahf
push
jmp
add
add
sbb
rorl
mov
jne
dec
nop
pop
scas
add
test
xchg
adc
fdivrl
fs
or
inc
mov
mov
inc
movsl
mov
dec
push
xchg
je
mov
cmpsb
or
push
or
popa
scas
inc
and
add
adc
mov
xchg
xchg
inc
orb
push
or
push
mov
add
mov
push
push
mov
push
leave
jae
call
pushf
xor
add
mov
scas
sub
sbbb
rcl
and
xchg
addr16
inc
mov
or
mov
sub
inc
mov
sub
sbb
movsb
mov
cmp
pop
in
and
gs
cmp
ljmp
mov
lods
cmp
les
arpl
pop
rcrl
inc
adc
dec
mov
sub
lods
rolb
scas
xchg
jb
pop
sahf
inc
and
sti
push
mov
ljmp
movsb
and
mov
mov
and
sub
les
test
or
bound
mov
add
mov
je
in
and
push
bound
or
xor
test
or
xor
mov
or
xor
cmpsb
inc
adc
xor
jecxz
add
mov
xchg
rol
es
adc
mov
mov
and
adc
pop
xor
inc
icebp
arpl
mov
xor
xchg
push
inc
gs
pop
and
adc
aad
mov
and
inc
jmp
sbb
pop
add
loopne
push
jo
fistl
nop
add
pop
or
add
xor
int
insl
enter
lret
xor
nop
xchg
inc
es
cmp
jne
mov
out
lahf
nop
dec
jmp
or
decb
push
xor
jno
shrl
imul
mov
sub
ljmp
daa
lods
push
mov
mov
loopne
lcall
mov
pop
or
xor
faddl
adc
add
adc
add
pushf
push
dec
or
cmp
adc
inc
cltd
mov
movsb
popa
repnz
cmp
adc
xorb
add
jne
xchg
and
cld
or
popa
push
rorb
add
inc
jo
xor
pop
and
push
test
add
adcl
movsl
xor
and
out
xor
stos
dec
cmpsl
nop
rorb
and
or
push
push
bound
ljmp
icebp
xorl
gs
push
add
jmp
push
and
adc
dec
aaa
and
and
insl
push
dec
cmp
test
loope
xchg
adc
cwtl
les
repz
push
push
es
dec
push
adc
subl
leave
jae
sub
mov
les
mov
mov
test
aad
mov
and
rcrb
and
add
stos
shl
or
dec
push
adc
aad
das
bound
cltd
jecxz
imul
mov
ret
sub
mov
mov
lcall
jecxz
aaa
pusha
loopne
stos
movsl
dec
or
push
sbbb
lds
push
inc
push
mov
inc
add
out
inc
data16
sub
jbe
pop
inc
fucom
dec
adc
adc
add
movsb
rcll
dec
cmc
jne
add
mov
cs
leave
unpckhps
jge
xchg
mov
das
sbb
sbb
jo
mov
mov
push
popa
pop
push
or
xor
daa
dec
adc
bound
add
and
pusha
xor
mov
leave
push
mov
xor
nop
out
adc
and
push
xor
add
push
adc
jno
aad
push
sub
sub
loopne
loop
or
jnp
sub
mov
cltd
inc
xchg
jno
fstl
roll
inc
add
or
pusha
mov
imul
subl
cmp
std
sub
or
mov
xor
cmp
fwait
hlt
push
rolb
xor
bound
mov
popf
repnz
jo
pop
es
mov
inc
int3
and
cwtl
pop
sub
mov
cwtl
push
xorl
and
push
xchg
or
repnz
sbb
rcrb
add
orb
sub
add
jb
sbb
sbb
mov
xchg
xor
sub
insl
sbb
pop
sbb
lcall
cmp
pop
sahf
jge
sub
xchg
adc
mov
icebp
adc
out
and
and
push
inc
lds
xor
rorl
loope
aam
or
fs
scas
test
call
push
cmp
mov
insl
sbb
jne
jae
rclb
das
xor
sbb
xchg
out
mov
mov
jno
popl
push
or
jno
sbb
andl
fwait
pop
pop
sub
popf
lea
rclb
enter
stos
xor
push
das
mov
cmp
or
bound
mov
adc
mov
sub
xor
mov
sub
push
mov
iret
add
lret
test
and
rcrb
mulb
push
and
xchg
push
test
add
jge
mov
xorb
in
mov
rclb
adc
add
fwait
jae
mov
xor
xor
pop
and
inc
pop
pushf
mov
mov
aam
xlat
in
mov
lret
pop
andl
or
les
add
dec
push
add
jns
popf
bound
cmp
loopne
lods
out
jg
jno
xchg
inc
out
loope
sbb
cmp
mov
sbb
rorl
xchg
or
dec
pop
insl
sbb
mov
cmp
into
inc
xor
shlb
jg
movsb
test
pop
mov
sbb
xorl
inc
adc
dec
and
mov
stc
repnz
sub
in
mov
inc
movsb
dec
push
push
movsb
testb
loopne
insb
mov
stos
orb
pop
out
in
or
add
ds
mov
pop
bswap
add
aam
lret
or
push
jo
adc
xchg
hlt
push
sub
mov
inc
jge
ds
adc
push
loopne
jl
test
cli
sub
rclb
sub
xchg
andl
leave
leave
sbb
sub
mov
push
mov
pop
sbb
ret
loopne
adc
add
test
xlat
adcb
addb
dec
inc
int3
add
cmp
inc
inc
lea
cmpsl
insl
inc
pop
shrb
push
movsl
mov
sbb
push
sub
sub
xchg
aam
adc
mov
es
in
ret
cmp
and
imul
mov
call
dec
add
cmp
test
or
or
jne
imul
mov
out
push
mov
adc
jno
xchg
push
pop
xchg
pop
daa
shll
push
push
rorl
add
pop
repnz
pop
mov
and
xor
inc
cwtl
sub
jae
inc
xchg
fdiv
andb
mov
adc
cwtl
sub
dec
imul
mov
add
dec
pop
js
jmp
xchg
adc
mov
and
test
cmpsl
pop
fstl
adc
pop
jnp
test
xchg
sbb
ljmp
test
ret
xchg
orb
scas
or
add
popa
xchg
pop
es
push
lods
mov
jmp
pop
mov
sub
and
mov
push
or
cwtl
and
sbb
add
shll
std
inc
cli
inc
int3
pop
and
lods
in
jle
test
rcll
dec
dec
pop
cmpsb
add
inc
pop
adc
call
fs
cmp
mov
popa
lock
outsl
imul
mov
or
cmp
add
int
push
add
sbb
or
push
je
inc
imul
addl
sub
add
xchg
and
dec
pop
mov
pop
dec
test
stos
shll
leave
adc
ja
dec
bound
rol
ret
dec
pop
jno
ret
adc
add
popl
clc
cmc
mov
ret
lods
mov
scas
lods
or
insb
call
add
xchg
and
sbbl
xor
pop
les
adc
mov
fs
xchg
pop
and
mov
add
and
loop
dec
add
add
sbb
aad
pop
mov
or
xor
iret
mov
push
and
jnp
sub
adc
dec
cwtl
es
cmp
dec
push
xchg
sub
test
cmp
outsb
jno
rclb
xor
cmp
pop
adc
xor
arpl
movsl
and
iret
and
bnd
aam
or
repnz
xor
push
xchg
sub
lods
jmp
mov
mov
jns
dec
cld
adc
add
mov
xchg
adc
fwait
add
push
shl
add
shrb
jae
out
lahf
nop
xchg
stos
subl
fistpll
inc
pop
and
sbb
or
xchg
mov
cmpsl
jmp
andb
lcall
mov
cmp
jno
xor
pop
and
pop
xchg
loope
jb
add
or
or
sbb
push
and
movsl
aad
lret
adc
test
push
lcall
inc
sub
sti
add
ja
add
push
or
inc
scas
dec
add
inc
and
and
adc
adc
and
dec
addr16
icebp
mov
pop
mov
xchg
popa
sbb
scas
sbb
push
xchg
ds
mov
movsb
and
and
or
inc
movsb
sti
inc
cmp
stc
insb
mov
sbb
notl
or
mov
stos
jmp
fwait
add
les
cld
leave
sbb
adc
xchg
mov
pop
inc
stos
dec
and
es
push
push
push
jmp
pop
and
fwait
ss
les
rcl
in
or
adc
xor
rolb
nop
inc
or
add
sub
mov
dec
inc
sti
add
adc
mov
jle
subl
sub
sub
add
push
roll
sbb
jo
jnp
add
xchg
push
mov
popf
xchg
inc
adc
pop
and
mov
out
cmp
xchg
into
inc
add
adc
sbb
lds
or
inc
adc
xor
das
push
sbb
das
pop
add
fcmovnb
ficompl
jns
or
inc
xchg
jg
sbb
leave
or
dec
mov
mov
push
and
sbb
mov
cmpsb
inc
shll
lea
andl
test
aam
mov
sub
inc
loopne
idivb
dec
insl
fwait
mov
movsl
daa
cmpsb
push
mulps
xor
or
das
test
test
add
or
rorl
scas
dec
adc
movsb
pop
push
leave
xchg
aaa
imul
add
mov
icebp
les
loopne
push
sbb
sbb
inc
cli
sbb
jg
jb
or
add
addl
xchg
jae
add
xor
movsb
bound
das
xorb
sub
aad
loope
nop
shl
rcrb
or
inc
sub
stos
stos
and
and
or
and
sbb
or
movsl
sbb
cmp
mov
bound
nop
and
pop
sbb
addb
add
nop
addb
jno
test
add
sub
imul
and
pop
pop
xchg
test
loopne
mov
imul
or
dec
dec
inc
mov
jle
push
jb
loope
dec
xchg
clc
aam
push
jo
adc
pop
je
mov
rorb
xchg
add
mov
mov
sbb
rclb
xor
push
dec
cli
mov
mov
outsb
movsb
stos
sub
inc
cmp
dec
ja
fadds
push
fabs
dec
stos
add
mov
and
push
addb
mov
mov
adc
shrb
xchg
add
mov
or
sub
inc
jne
add
pop
push
push
loopne
pushf
inc
inc
inc
xor
push
and
aaa
or
test
adcl
inc
xor
scas
shll
jne
xchg
mov
lods
fwait
mov
xor
add
in
and
imul
loop
add
scas
lods
xchg
mov
xchg
inc
xchg
fstpl
pop
push
rclb
inc
lret
out
leave
inc
dec
imul
xchg
cmp
cwtl
sub
jno
push
push
inc
test
and
mov
inc
adc
inc
pop
and
rolb
dec
sbb
in
and
movsl
push
sub
xlat
cmp
jo
pop
in
sti
out
or
add
or
rcrb
mov
sub
mov
pop
or
and
and
nop
movsb
push
push
mov
sbb
fwait
and
inc
pop
cmc
mov
xchg
xchg
leave
xchg
push
inc
adc
cmpsb
outsl
lods
mov
mov
cmc
and
mov
movsb
jne
icebp
push
mov
lock
insl
sbb
sbb
aas
in
sbb
cld
loopne
add
sbb
imul
fwait
rolb
test
dec
xchg
test
ret
pusha
xchg
lret
mov
push
loopne
or
jp
pushf
or
mov
push
xor
loop
pop
pushf
les
mov
add
xchg
lea
or
inc
mov
jo
sub
xchg
add
sbb
call
or
cmp
pop
mov
jmp
lcall
xchg
lahf
add
adc
test
sbb
es
out
enter
ja
aad
pop
and
jg
sbb
je
add
fadd
shrb
bound
pop
fistl
les
add
inc
add
or
add
and
pop
adc
dec
cltd
push
adc
inc
leave
gs
daa
xchg
xor
pop
mov
rorb
jle
sbb
inc
push
lcall
mov
dec
mov
in
push
stos
xchg
push
push
inc
add
insl
jmp
mov
jmp
lcall
pop
cmpl
inc
cltd
les
cmp
inc
sub
sub
fwait
mov
xchg
or
into
or
rcl
push
sub
ja
xchg
sub
iret
dec
mov
cmpsl
push
or
cmp
stc
xor
dec
push
and
inc
and
int3
shl
or
clc
jmp
enter
mov
les
aaa
xor
sub
mov
sbb
cmp
imul
cwtl
lea
push
or
xorb
rcl
cmpsl
and
test
xor
mov
dec
push
xchg
adc
push
sbb
movsl
sbb
and
leave
jae
sbb
adcb
sbbl
ror
and
sub
nop
and
and
add
es
stc
sets
sbb
movl
es
mov
and
test
test
ljmp
inc
mov
inc
pop
nop
loope
or
or
xorl
mov
sub
cltd
push
inc
sbb
aad
lods
lds
pop
outsl
roll
adc
aaa
es
adc
mov
and
add
xorl
dec
dec
pop
vshufps
inc
sub
dec
inc
sti
lods
push
or
dec
dec
imul
ljmp
add
push
sbb
and
push
inc
add
cwtl
sub
dec
addr16
push
cld
cmpsb
es
test
ret
mov
pop
xchg
jmp
addb
pusha
and
out
xor
mov
imul
mov
cwtl
rorb
adc
jo
testl
inc
adc
int
add
jb
or
aam
mov
insb
add
add
lret
mov
aaa
popf
or
mov
or
and
nop
or
aas
movsb
daa
in
push
xchg
loopne
lods
sbbl
pop
add
gs
or
ljmp
add
or
scas
and
push
xor
push
adc
mov
add
sbb
sub
pop
aad
cltd
cmp
lahf
lds
pusha
mov
sarb
xchg
aaa
icebp
push
test
mov
movsb
jmp
inc
pop
lea
cmc
and
rclb
cwtl
or
jnp
ret
inc
add
xor
sbb
mov
xchg
cmpsb
jmp
leave
inc
push
and
movl
adc
push
sbb
inc
jp
cmovs
push
or
rcll
popa
negl
test
inc
dec
xchg
sbb
and
add
sub
inc
sub
test
pop
mov
rorl
pop
or
test
imull
dec
and
xor
cmc
inc
sbb
loop
pop
and
sbb
ret
xchg
in
pop
mov
add
push
jae
sub
lcall
cmpsl
and
push
jmp
or
cltd
sub
andl
orb
adc
or
cmc
test
lea
insb
mov
test
cli
outsb
push
cmp
and
mov
xchg
popf
dec
adc
mov
and
xor
jne
mov
stc
and
mov
mov
push
mov
stos
cs
aam
pop
outsb
rol
sub
push
inc
and
enter
or
mov
xchg
ja
add
das
cs
or
pop
adc
and
jno
lea
mov
insb
mov
dec
mov
enter
mov
mov
push
adc
add
mov
and
add
mov
pop
dec
add
or
push
lret
adc
movsl
mov
or
shlb
add
xor
xchg
adcl
dec
mov
lret
sbb
push
adc
add
jecxz
rcrl
stos
pusha
jno
dec
rorb
loop
jnp
push
or
pop
popa
dec
movsb
loopne
or
sbb
xchg
or
rsqrtps
mov
dec
add
mov
or
or
inc
arpl
rclb
popa
popa
mov
test
mov
push
mov
jo
stc
adc
dec
sub
es
leave
jmp
lret
mov
push
xchg
jo
lret
inc
add
dec
xchg
ficoml
fmull
add
jnp
aad
and
movl
rcrl
jne
cs
roll
jnp
jb
add
popf
mov
aam
mov
mov
and
popa
push
mov
mov
add
and
cmp
sbb
sub
sub
or
ret
cmpsb
sub
scas
lds
pop
add
push
sub
and
ja
adc
sub
rorb
xchg
pop
cmpsl
xchg
cltd
xor
mov
mov
or
xor
out
subb
in
es
pop
ret
fisttps
push
lods
shlb
sarb
add
dec
test
loopne
or
xor
adc
scas
mov
adc
addr16
and
cld
aaa
dec
dec
sbb
push
pop
and
std
les
filds
mov
shll
mov
test
add
push
xchg
dec
in
sti
jl
xor
xchg
push
orb
fnstenv
fwait
addl
adc
cmp
xor
ret
add
mov
lods
xor
lahf
ss
jnp
aaa
push
sub
fidivrs
add
aas
dec
cmovnp
in
mov
lods
add
mov
test
push
inc
cmpsb
dec
dec
sub
ret
sub
aaa
sar
jl
push
adc
sbb
jge
fcoml
xor
or
subl
or
push
sbb
add
inc
leave
imul
fldt
or
push
xchg
sbb
push
sub
adc
cwtl
mov
in
ret
je
lret
out
add
dec
xchg
fistps
imull
stos
les
pop
jo
mov
jne
out
cmp
nop
jl
sub
insb
pusha
ljmp
and
mov
xchg
lret
sbb
sbb
cmpsl
pop
jb
iret
push
ja
adc
sub
and
cwtl
nop
lret
adc
push
repz
pusha
or
mov
push
xor
jo
pop
xchg
dec
js
xor
fdivs
mov
in
cmpsb
sbb
sti
ficoms
cltd
in
xchg
rorb
jnp
mov
adc
pusha
jno
rorl
data16
dec
sbb
in
nop
dec
sahf
add
gs
lcall
movsb
rcr
xchg
test
std
push
imul
lret
in
xorl
subps
add
aam
jnp
addb
xor
pop
leave
loope
dec
pop
cmp
fiadds
fwait
or
or
xor
mov
scas
test
les
add
add
and
icebp
push
mov
xor
stos
mov
pop
fnsave
cltd
xorb
iret
js
loop
fsts
aaa
jne
test
jl
shrb
sbb
int3
fcmovnbe
sbb
sbb
jns
push
adc
dec
pusha
shll
popa
push
in
xchg
push
xor
xchg
inc
dec
push
sub
add
jo
sbb
and
ret
sbbb
sub
bound
scas
push
and
xor
out
pop
and
mov
dec
and
and
sub
sbb
mov
or
adc
or
popf
dec
movsb
pop
push
jno
shrl
or
and
inc
pop
or
lahf
rcrb
and
adc
pop
adc
lret
adc
sbb
mov
std
add
inc
inc
lcall
dec
sbbl
xchg
inc
mov
ja
and
pop
push
mov
jmp
push
inc
pop
adc
xchg
jns
xchg
xor
loope
test
popf
add
jne
daa
add
jbe
inc
ja
mov
xlat
sub
xchg
insb
inc
lcall
aam
pushf
insb
sbb
gs
insl
les
dec
add
lahf
cmc
or
cmpsb
mov
scas
dec
dec
sbb
xchg
es
inc
insl
cmc
rclb
les
push
sbb
or
sbb
sbb
adc
rcrb
sub
and
jmp
xchg
or
in
inc
lahf
dec
add
mov
jmp
in
or
pop
adc
xchg
std
push
movb
push
pop
popf
xchg
lods
xchg
push
adc
push
pop
push
ja
test
mov
in
xchg
add
and
pushf
adc
dec
mov
mov
in
xor
jmp
inc
rcrb
sbb
sbbb
sbbb
addb
push
pop
and
stos
test
test
and
inc
out
lods
and
inc
divl
mov
stos
or
mov
xchg
pop
les
add
test
test
orb
test
and
add
stos
add
sbb
aad
xor
jo
add
sbb
add
mov
or
daa
xor
mov
pop
pop
setge
and
xor
inc
adc
xchg
js
push
cmc
or
adc
cmpsb
xchg
nop
andl
adcb
xor
xchg
jl
loope
dec
mov
ret
or
pop
and
push
icebp
pop
jg
add
and
pushf
add
mov
jmp
jnp
ficoml
cmp
repnz
stos
and
sub
lea
add
pusha
mov
xor
jns
push
leave
mov
cmpsb
test
xor
push
or
stc
movsl
and
shlb
and
push
fst
andl
jb
add
sbb
mov
sub
dec
xchg
push
push
fstpt
add
andl
outsb
adc
fadd
lods
cmp
cmpsb
add
jg
inc
popa
pop
mov
and
cmp
pop
push
xchg
push
add
inc
mov
jns
and
mov
in
add
int
cmp
pop
cmp
popf
cmp
stos
addr16
scas
cmp
bound
mov
dec
cmp
mov
add
inc
dec
or
andb
and
sbb
adc
push
repnz
sbbl
arpl
mov
mov
mov
ret
jae
adc
stos
add
or
jno
dec
add
push
mov
push
and
lods
and
rcrl
push
mov
pop
mov
adc
pop
jo
lods
imul
adcl
add
inc
cmp
add
add
adc
xor
adc
movsl
or
xor
add
dec
jge
mov
cmp
and
inc
leave
inc
shrb
mov
rol
subl
push
rolb
addl
mov
sub
clc
jbe
push
dec
cmp
adc
jns
mov
fdivrl
enter
andl
add
jne
insl
adc
mov
add
cmpsb
lcall
add
add
and
xchg
jecxz
nop
mov
je
cld
add
mov
stos
cs
decb
andb
adc
xor
and
push
add
adc
sbb
jmp
sub
adc
jne
dec
pop
rolb
gs
repz
and
sub
inc
lds
clts
rcrl
xor
mov
inc
sub
lds
jmp
or
test
add
jae
sbb
insl
adc
xchg
cmpb
test
pop
adc
push
adcb
lock
push
pop
add
icebp
push
mov
pop
mov
das
inc
pop
push
adc
mov
roll
sbb
add
mov
add
aaa
test
mov
sbb
dec
push
adc
cli
mov
push
xor
fdivr
and
sbbl
or
inc
cmpsb
insb
push
push
lea
std
mov
loop
mov
sub
inc
sahf
lea
add
mov
mov
scas
mov
xorl
bound
movsb
stos
scas
adc
in
adc
nop
int
adc
push
bound
sbb
inc
mov
jo
xchg
or
pop
xchg
and
sahf
cmpl
sbb
and
fmuls
rclb
pushf
nop
orl
inc
inc
push
push
sub
push
pusha
aad
xchg
cmpsl
repnz
shlb
dec
cmpl
adc
rclb
arpl
add
and
dec
sbb
add
sbb
orb
add
cmp
push
pusha
arpl
adc
jo
and
cmp
adcb
lret
andl
popa
or
sbb
xchg
cmp
inc
cld
xchg
ljmp
xor
and
es
mov
cwtl
dec
dec
cwtl
notl
push
movsl
add
test
push
mov
fwait
iret
cmp
and
nop
dec
jl
negl
adc
add
adc
sbb
push
xchg
popa
sub
and
xor
push
and
or
jno
outsl
jno
adcb
push
mov
cwtl
fs
inc
int
mov
cs
movl
sbb
test
mov
push
adc
sub
cmc
xor
lahf
subl
dec
adcb
push
lcall
rorb
sbb
popf
lds
std
in
or
push
inc
mov
aas
mov
xchg
popa
cmpsb
lcall
cwtl
and
fnstsw
dec
stc
and
add
iret
fcmovnb
sub
stos
pop
mov
leave
pusha
jg
push
push
xchg
jne
push
and
inc
stc
cld
roll
dec
add
in
rcl
inc
adc
sarb
add
add
add
addr16
push
int
mov
xchg
movsb
adc
add
and
sub
and
add
inc
inc
pop
push
mov
push
xor
sub
xchg
ret
push
mov
dec
jns
movsb
mov
mov
sub
xchg
lods
xor
rorb
je
sarb
insl
inc
cmp
jo
sub
adc
dec
pop
fcmovbe
test
add
stos
dec
add
or
cmp
punpckhbw
push
outsb
xchg
pusha
and
mov
andb
sub
mov
adc
pusha
xchg
outsl
and
and
mov
mov
cmpsb
loopne
inc
dec
inc
mov
adcb
pop
stos
les
bound
sbb
movsl
stc
mov
or
lcall
mov
inc
adc
popf
xchg
xchg
lahf
adc
push
out
dec
sbb
aad
xor
mov
aas
push
addb
xchg
gs
movsl
outsl
mov
movsb
loop,pn
stc
test
adc
inc
add
cmpsb
jge
rolb
xchg
jmp
leave
inc
sahf
in
and
adc
enter
inc
mov
add
cwtl
mov
orl
jno
mov
shrl
mov
mov
and
xor
xor
outsl
push
mov
orb
inc
inc
jle
add
mov
test
pop
ja
lods
cs
insb
test
jmp
jno
sbb
inc
xchg
ret
mov
or
mov
and
dec
push
jb
cmp
xchg
sub
sub
adc
fldcw
inc
or
inc
lea
and
and
jecxz
adc
inc
cmp
push
ljmp
fbstp
orb
mov
ret
sub
and
inc
dec
cmp
add
mov
sbbb
subb
xchg
fs
inc
cmpsl
movsl
push
filds
fsubrs
mov
push
loopne
leave
and
addl
loop
xor
sbb
or
inc
sbb
pop
and
popa
dec
adc
and
jns
stos
scas
mov
mov
jns
inc
push
jo
leave
push
es
movsb
ljmp
cmp
add
mov
adc
push
das
mov
inc
cwtl
pop
adc
inc
fwait
insb
nop
or
aaa
and
jecxz
mov
aaa
dec
adc
xchg
cmpsl
sub
xor
xchg
jo
push
add
xchg
hlt
or
lcall
adc
dec
rorl
mov
cmp
sub
cltd
xchg
lods
loope
inc
mov
pop
les
add
stos
arpl
movsl
mov
and
scas
loope
cmp
addb
subb
outsl
dec
inc
mov
rclb
dec
mov
lds
jge
cmp
ds
les
inc
in
loopne
push
lods
add
dec
in
stos
jno
dec
pop
dec
and
inc
shll
movsb
and
xchg
mov
addb
sub
push
adc
test
sbb
aaa
pop
sbb
cmp
push
out
dec
out
sub
lcall
and
inc
pusha
sub
sbb
xor
push
add
pop
xor
adc
stos
or
fucom
and
rolb
add
sbb
mov
inc
xor
cltd
mov
add
fdivrl
cmc
imul
add
push
fwait
mov
mov
jecxz
in
shr
aad
or
push
dec
pop
sbb
mov
or
addl
adc
ljmp
cmp
xor
add
ss
sbb
or
and
and
and
cmpsl
enter
fildl
iret
xchg
sub
fsts
mov
out
xor
xchg
lahf
daa
pop
add
out
xor
nop
adc
xchg
cmp
adc
sbb
loop
movsb
dec
mov
ret
push
xchg
pusha
pusha
stc
mov
ljmp
dec
mov
mov
add
adcl
and
lods
aam
and
cmp
jns
push
and
shrl
cmp
repz
push
loop
xchg
or
push
lcall
mov
mov
mov
fprem
pop
movsl
pop
and
inc
or
dec
dec
jns
iret
stos
shlb
rcrb
jl
cmp
inc
push
or
mov
stos
push
mov
xor
arpl
pop
push
xor
pusha
imul
push
sub
and
bound
sub
imul
pop
add
repnz
and
add
jp
jo
pop
xor
cltd
jo
xor
adc
jbe
out
sub
push
inc
and
je
xor
adc
xor
dec
sbb
jno
loope
adc
popa
andb
push
push
push
push
adc
je
pop
scas
mov
icebp
stos
add
pop
and
add
imul
dec
mov
adcl
and
xor
aam
add
fbstp
xchg
cmp
dec
sahf
or
adc
mov
shr
mov
cmp
pop
xor
movsl
push
mov
and
cmp
cltd
mov
sbb
sub
ja
xchg
cmpsl
sbb
adc
mov
rorl
cmp
inc
inc
xor
pop
sbb
push
test
or
fildll
push
aaa
xor
pop
sub
adc
bound
mov
je
sbb
pop
shl
les
imul
adc
lret
mov
jo
jno
push
cmp
inc
push
xchg
nop
popa
pop
sbb
imul
bound
or
xchg
fstps
pop
sub
popf
gs
lcall
inc
das
dec
push
sub
rclb
daa
xchg
in
mov
lea
es
or
mov
lods
and
int
popa
push
rolb
xor
and
xor
add
mov
adc
mov
or
pusha
sbb
sbb
mov
lods
and
aaa
and
pop
cmp
pusha
repnz
xor
pushf
mov
adc
dec
mov
pop
imul
stos
sbb
or
lea
shl
movl
pop
or
sbb
ret
pop
mov
sahf
mov
lock
cld
pushf
pop
lea
popl
notl
inc
je
leave
shr
pop
push
or
test
inc
sbb
dec
cmc
sub
roll
shrl
add
xchg
test
mov
push
add
pop
stos
mov
subl
stos
or
aam
ljmp
mov
push
pop
je
adc
insl
shrb
mov
sbb
dec
cltd
adc
sub
lret
mov
fdivrl
adc
out
mov
test
xchg
ljmp
dec
test
ret
lods
loop
test
mov
les
imul
xchg
and
sub
mov
or
push
add
or
ret
test
push
movsb
push
and
orl
sti
sub
xor
jecxz,pn
leave
add
arpl
addr16
xchg
sbb
push
repnz
push
fxch
adc
mov
lea
push
leave
mov
pop
sbb
cmpsb
jne
xor
and
sbb
sbb
mov
and
push
push
mov
xor
add
or
adc
pop
push
inc
pop
mov
and
aas
dec
lds
mov
mov
xor
dec
jae
inc
sub
push
dec
or
stos
inc
add
mov
iret
fstps
test
and
xchg
add
movsb
jno
push
aaa
dec
imul
adc
inc
adc
pop
pop
js
rclb
int3
adc
inc
lods
sbb
arpl
push
push
and
addr16
jns
pop
push
add
icebp
and
scas
in
sbb
push
repnz
xor
addb
ss
fildl
stc
aam
mov
movsl
insl
outsb
movb
std
out
imul
push
jb
mov
rorb
test
push
pop
add
mov
push
jecxz
out
jae
in
and
and
cltd
insl
rolb
pusha
sbb
fwait
dec
push
adc
pop
lea
sub
sub
cwtl
sub
or
add
add
test
ret
lds
or
shll
icebp
fildl
lahf
out
rolb
adc
sbb
mov
push
xor
ret
fisttpll
cmpsb
lods
mov
outsb
sbb
sti
adc
push
add
adc
push
and
fisubs
mov
push
sbb
fwait
nop
rclb
dec
sbb
inc
jp
xor
add
lds
cwtl
sub
mov
pop
sbb
adc
add
add
adc
test
inc
adc
inc
lods
enter
shll
and
and
or
or
xchg
lret
test
add
adc
subb
or
pop
add
adc
jns
jp
sbb
repz
adc
sbb
add
push
aas
aad
add
xorb
lcall
pop
add
popf
scas
and
inc
mov
cmp
insb
add
cltd
aad
sbb
adc
pop
in
les
jmp
rcll
push
mov
inc
mull
jp
outsl
lea
jge
xchg
xor
adc
push
test
dec
mov
cmp
cmp
pop
and
clc
popf
add
mov
or
adc
nop
ret
aaa
push
push
fbstp
ror
rclb
adc
inc
stos
setge
mov
cmp
in
push
cmpsb
push
or
xchg
stos
das
out
es
cmp
add
movsb
mov
aaa
dec
in
fisubrs
test
adc
mov
movsb
xchg
cmp
and
mov
jge
mov
roll
xchg
mov
xor
dec
inc
dec
and
in
mov
sub
mov
add
sbb
rorl
mov
cli
dec
xor
inc
bound
sbb
test
rolb
inc
add
pop
adc
sbb
add
idiv
les
int
mov
mov
pushf
mov
loop
push
repnz
andb
das
mov
cld
mov
cmpsl
aad
mov
add
addb
mov
and
stos
adc
jno
dec
or
pop
xor
add
inc
pusha
sub
std
cmp
subb
orb
sbb
xchg
lret
xor
fldl
test
cwtl
lcall
mov
gs
dec
inc
cmp
leave
jae
popa
stc
dec
mov
sbb
mov
and
or
sbb
test
nop
fdivrl
cmp
xchg
adc
rolb
add
and
jns
or
sarl
mov
sahf
add
cmp
stos
sbb
xchg
inc
mov
or
jno
nop
add
loopne
adc
sbb
inc
xor
movsl
ja
test
loopne
or
stc
insl
dec
adc
adc
push
and
pop
inc
daa
sbb
stc
into
inc
inc
sbb
adc
adc
cwtl
xor
pop
popf
inc
addr16
xchg
and
or
inc
mov
adc
sbb
xchg
adc
mov
insl
jp
sub
movsl
add
add
andb
and
orb
jp
xchg
mov
mov
orl
inc
cmp
fists
and
jns
sub
dec
push
sub
popa
test
or
aad
lods
add
lret
fcmovnu
add
cmp
adc
xor
test
cmp
ret
loopne
pusha
jne
call
mov
popa
in
inc
add
jo
out
sbbl
adc
stos
or
in
and
rclb
in
fstpt
mov
pop
sti
xor
xchg
push
inc
leave
ret
xor
pusha
sub
and
and
push
push
movsb
sbb
leave
shrd
xchg
outsl
sub
push
sbb
push
pop
lahf
imul
and
xchg
cli
cs
mov
and
pop
push
cmp
or
or
xchg
add
sbb
inc
pop
and
mov
xchg
sbb
enter
adc
fs
mov
add
add
xor
xchg
or
lods
sbb
add
push
xor
lret
inc
bound
and
rcrl
flds
xlat
dec
add
push
xchg
pop
inc
shrb
mov
shrl
adc
dec
lcall
xor
ja
mov
sbb
pop
pop
aad
jecxz
test
dec
movsl
sbb
add
add
sub
in
push
add
ret
pusha
adc
sbb
push
mov
xor
sbb
movl
test
fistl
jb
xchg
add
push
das
mov
rolb
mov
lret
cmp
mov
lcall
mov
cmpsb
imul
scas
and
sub
stos
mov
push
mov
and
sub
or
xchg
xor
cwtl
sub
adc
es
sarb
arpl
lds
push
popf
adc
add
push
add
sub
out
pop
outsl
rolb
add
or
push
mov
mov
or
adcl
loope
outsb
mov
hlt
insb
lea
pop
sbb
push
ljmp
cmp
fisttpll
push
add
imul
mov
xorb
dec
repz
add
loopne
or
scas
sbb
inc
or
xor
test
test
pop
scas
or
out
movsl
js
test
cmp
cmp
adc
in
cmp
je
cmp
add
add
and
jo
jo
adc
push
insb
push
ret
aaa
dec
dec
push
dec
data16
std
jno
and
push
jo
enter
enter
cld
mov
push
mov
mov
push
dec
xchg
jg
push
or
mov
arpl
fsubr
pop
push
cli
movsl
push
rcrb
jo
jnp
push
inc
inc
add
inc
adc
and
rcrw
push
cmpl
dec
inc
xor
dec
add
incl
sbb
inc
push
imul
mov
shll
push
xchg
sbb
loope
fisttps
mov
addl
js
dec
push
ss
dec
or
hlt
jno
dec
adc
sbb
dec
je
test
lds
inc
cli
clc
jne
je
push
call
test
push
int
jge
add
sub
mov
mov
mov
jne
mov
inc
cmp
test
inc
dec
push
xchg
xor
dec
dec
dec
push
nop
imulb
mov
lock
sub
sbb
inc
jbe
enter
push
xchg
cmc
pop
loopne
add
repnz
imul
xor
outsl
popl
xchg
pop
push
xor
mov
push
fs
xor
add
mov
sti
sbb
sub
jmp
and
adc
xchg
or
pop
popf
jno
dec
sub
adc
aaa
aas
mov
inc
add
mov
adc
add
push
and
and
and
fisubl
inc
adc
fcmovnu
sbb
bound
inc
adc
mov
lods
xchg
or
mov
fwait
mov
add
pop
adc
mov
sbbb
mov
adc
mov
addr16
sbb
pop
pusha
jbe
data16
jns
add
mov
mov
add
inc
and
mov
add
push
mov
out
call
dec
add
jb
gs
xor
cs
insb
add
lcall
xor
jmp
lods
in
ror
fcmovu
adc
cmp
mov
lcall
inc
loope
jnp
adc
cmp
pop
adc
xorb
adc
push
sub
add
mov
xor
push
push
scas
incb
popa
pusha
data16
sbb
xor
or
subb
adc
inc
mov
dec
fsubl
je
mov
mov
ficompl
xor
inc
data16
mov
lods
adc
cwtl
or
sar
adc
outsb
xchg
mov
adc
pusha
sbb
cltd
cltd
test
sbb
xor
cmp
inc
mov
cwtl
insb
push
outsb
mov
loope
in
loop
adc
int3
and
fs
mov
popf
inc
popa
sbb
repnz
and
xor
sub
inc
js
int3
loop
insb
mov
pop
mov
sub
or
call
loope
pushf
rorl
xorb
add
jl
pop
les
push
add
inc
push
jnp
xor
out
xchg
ret
mov
inc
sbb
cmp
cwtl
cmp
add
sbb
inc
call
jnp
dec
in
out
pusha
js
xchg
test
ficompl
outsb
pusha
or
sbb
mov
mov
in
insb
pop
mov
scas
fchs
pusha
jo
and
ret
in
repnz
xor
ror
and
mov
pusha
lods
out
call
lds
xor
add
insb
je
push
popa
jbe
pop
pushf
shlb
mov
lcall
push
nop
ret
ss
cwtl
fnstsw
add
push
push
xchg
cmp
add
enter
test
cmp
sub
jp
cmp
addl
rcll
pushaw
mov
popf
mov
sub
stos
fld
push
add
hlt
push
and
or
push
int
inc
mov
sbb
dec
pop
sub
movsb
pop
and
sbb
mov
push
enter
inc
sbb
inc
pop
xchg
in
pusha
out
add
sub
push
inc
jbe
lods
mov
sti
push
push
push
cs
xchg
dec
cmpsl
jnp
les
mov
cmp
add
into
xchg
jo
movsb
dec
cmpsl
or
sub
jo
pop
lea
jbe
push
out
pushf
add
sti
mov
sbb
das
pop
mov
jb
lock
jnp
into
xor
out
sub
inc
mov
sbb
fldcw
fmuls
lock
dec
mov
push
in
pushf
sbb
or
lods
lret
jp
popa
mov
or
push
sbb
or
sub
idivl
xor
pop
add
push
gs
data16
outsl
pushl
outsb
dec
outsb
outsw
inc
es
gs
push
dec
or
outsl
ja
lahf
std
arpl
jae
jb
popa
jo
push
popa
jb
insl
adc
and
inc
jo
insb
gs
jne
dec
push
outsl
nop
je
insl
pushl
push
push
gs
popa
mov
jo
in
scas
dec
push
sbb
jo
inc
je
addr16
mov
gs
imul
lea
add
imul
cwtl
dec
add
mov
insb
mov
dec
je
bound
push
imul
ja
subb
push
les
jae
mov
dec
cmp
imul
mov
dec
data16
and
arpl
in
testb
ss
push
push
imul
mov
sti
adc
gs
outsb
insb
and
dec
adc
dec
imul
inc
bound
mov
push
push
sbb
sbb
shrb
decl
daa
jp
push
je
dec
popa
outsb
int3
sub
sbb
pop
or
add
inc
data16
jns
jae
pusha
jbe
outsl
das
imul
ret
pop
out
add
test
cmp
out
testb
gs
and
insb
je
dec
jne
bound
std
mov
inc
push
insl
je
and
cmp
xchg
pop
fnsave
jo
icebp
inc
clc
jns
cmp
in
rolb
imul
lret
data16
mov
popa
addr16
ds
xor
mov
inc
push
xchg
dec
dec
imul
pop
pop
inc
jae
in
sbb
insl
insl
inc
jne
mov
mov
enter
addr16
or
fdivs
das
inc
inc
pop
negb
lods
shrb
and
push
inc
test
cmpsl
push
sub
mov
pop
jecxz
lods
sub
jb
int3
adc
dec
sub
fdivl
pop
aam
andb
sbb
sbb
js
xchg
data16
push
insb
cmp
xchg
fs
imul
mov
bound
xchg
les
and
mov
pushf
mov
sbb
xor
push
push
jb
gs
lcall
cmp
loope
loop
outsb
inc
or
aam
enter
pushw
addr16
xlat
mov
xchg
push
xor
popa
sub
addr16
cmp
mov
push
outsl
daa
or
push
stc
cmp
popf
mov
push
add
mov
stos
jne
push
jb
fadd
lcall
push
xchg
ss
inc
sub
mov
insb
sbb
sbb
iret
xor
outsl
je
sbb
sub
gs
dec
mov
ds
dec
jae
push
rolb
outsl
das
pusha
in
adc
aas
sub
lcall
mov
dec
dec
or
sub
subl
addr16
add
mov
sub
or
jns
pop
inc
dec
push
dec
pop
push
dec
dec
inc
push
lock
inc
inc
pop
mov
sbb
pop
push
dec
push
shrb
js
movsl
je
push
sub
repz
je
pop
and
int
xor
push
out
or
arpl
aaa
pop
mov
push
dec
inc
nop
imul
cli
jbe
xchg
pusha
loope
inc
cs
mov
mov
inc
mov
dec
mov
mov
pop
insl
jo
insl
stos
dec
out
outsb
jo
dec
test
or
insb
mov
outsb
pop
cmpsl
test
imul
scas
mov
jnp
loopne
cmp
push
and
adc
dec
sub
fs
lret
dec
push
pop
jnp
or
outsb
in
inc
insb
xchg
mov
add
pop
dec
xor
adc
xchg
cmpsl
sbb
jp
add
jle
shrl
push
jae
push
orl
mov
dec
mov
push
gs
dec
xchg
xor
divb
shll
daa
pop
jae
jo
cmp
sahf
mov
push
xchg
outsl
pop
in
pop
push
sub
sbb
inc
fsubrl
push
add
inc
mov
aaa
rcrl
fsubrp
xchg
jae
clc
in
cmp
jne
push
cwtl
loopne
in
jo
pusha
add
sbb
ss
xor
rcll
xor
hlt
je
popa
fists
push
rcrl
inc
das
pop
in
and
addr16
sub
jl
or
rclb
je
arpl
push
sbb
sbb
imul
insb
xchg
xor
xchg
or
inc
inc
add
inc
dec
jb
pop
inc
sub
imul
inc
xor
cmp
pusha
pop
shll
inc
add
mov
mov
pop
mov
pop
hlt
pop
push
lea
gs
stos
jbe
ds
push
out
xor
pop
cmpsl
pop
test
jbe
pop
rolb
pop
cmp
shll
jae
inc
jle
push
test
jo
jns
inc
and
mov
jbe
lret
xchg
or
dec
sbb
insb
inc
jo
jns
push
das
or
ja
shll
push
jo
adc
test
adc
sub
adc
push
inc
shrl
and
jg
js
dec
jo
inc
outsl
outsl
insb
push
push
push
dec
fdivl
inc
adc
sbb
and
sub
pop
pop
xor
sbb
dec
popa
jns
jo
pop
pop
push
inc
test
cli
jns
add
in
fs
xor
adc
lods
jbe
jae
inc
inc
mov
sbb
push
pop
and
add
jmp
mov
fwait
xchg
sub
dec
scas
lock
xorb
inc
fadds
inc
imul
ret
jne
and
es
adc
add
add
push
push
mov
mov
sub
pop
sbb
xor
mov
jmp
pop
jbe
jge
mov
push
scas
sbb
subl
addr16
cs
arpl
arpl
xchg
dec
push
imul
inc
jo
add
mov
mov
scas
pop
adc
les
mov
stos
imul
mov
sub
adc
cli
aad
cli
xchg
insb
mov
xor
sub
push
inc
sub
cmc
mov
fbld
fadds
jae
sbb
xchg
inc
negl
adc
mov
imul
and
sbb
xchg
dec
xchg
xor
pop
mov
je
and
push
pop
inc
sbb
aas
dec
dec
imul
fs
sbb
push
cmp
jbe
cwtl
test
rclb
xchg
jae
scas
pusha
aad
jns
cmpsb
dec
add
or
into
imul
xchg
imul
pop
jecxz
insb
pop
inc
incb
outsl
data16
je
gs
jo
jo
mov
push
neg
je
es
inc
cs
inc
addl
int3
adc
loopne
movsb
daa
pop
push
mov
outsb
inc
jb
repnz
xor
fs
lock
dec
in
rcrl
add
sbb
mov
stos
mov
lret
xchg
mov
pop
jnp
xchg
insb
sbb
xchg
and
adc
or
inc
mov
pop
xor
imul
and
push
jne
add
add
jae
inc
xor
shlb
push
and
fistps
popa
mov
push
sub
adc
push
dec
add
mov
aad
xor
das
adc
loopne
lsl
add
fs
mov
adc
jle
xor
mov
pop
sbb
and
out
dec
or
add
stos
addl
mov
push
mov
scas
lahf
sbb
pop
out
add
pop
and
and
pop
cmp
mov
dec
add
sahf
pop
dec
out
fidivrs
inc
add
dec
dec
sub
sahf
push
mov
arpl
jne
fstpl
xlat
loopne
mov
and
lock
mov
incl
add
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
