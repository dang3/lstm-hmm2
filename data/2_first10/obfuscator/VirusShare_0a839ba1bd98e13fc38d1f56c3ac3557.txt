mov
sub
mov
cmp
test
test
push
mov
int
jae
iret
xchg
dec
mov
mov
adc
int3
popa
pop
xor
insl
fsubrl
cmp
test
mov
pop
shlb
les
xor
cwtl
lods
inc
lcall
cltd
into
and
xchg
test
cmp
xchg
outsb
das
add
lahf
or
xor
lea
jg
jno
push
stc
push
add
imul
xchg
inc
cwtl
stos
test
sub
rcll
sub
enter
dec
sbb
cmp
xor
dec
fnstsw
or
push
mov
xchg
mov
out
stos
sub
fcoms
jnp
cmp
enter
mov
sub
repz
xchg
dec
in
inc
mov
movsb
gs
loopne
cmp
mov
add
mov
jo
cmp
nop
cmp
mov
dec
mov
mov
jl
or
cli
mov
fldpi
stos
aam
push
mov
mov
cmpb
mov
in
jae
outsb
push
fsubrl
sub
movsb
cmp
inc
xacquire
lahf
pop
jo
stos
mov
and
mov
fwait
repz
mov
xchg
fidivrs
rcll
test
push
xchg
mov
xchg
mov
inc
arpl
adc
ja
gs
popf
dec
pusha
and
xor
cmp
fiaddl
aad
xor
test
inc
sub
push
roll
xchg
mov
xchg
sub
jecxz
and
lret
je
lea
push
js
fwait
adc
mov
push
cwtl
push
or
lahf
xor
mov
pop
aam
jmp
or
or
mov
cmp
pop
hlt
sub
xchg
pop
imul
mov
jnp
jmp
or
fs
sub
mov
fidivrl
ljmp
dec
mov
fcoms
mov
push
mov
pop
les
and
sbb
mov
xor
sbb
adc
data16
adc
aad
or
add
mov
rorb
inc
mov
aad
jb
loop
adc
mov
movl
je
ja
repnz
ds
adc
mov
cltd
js
lods
aas
cmpsb
mov
mov
in
push
ret
pop
dec
mov
mov
stos
jb
mov
adc
ja
out
cmc
sub
mov
and
mov
inc
cmp
mov
adc
mov
inc
pushf
sti
fistpl
mov
addr16
or
or
push
mov
jg
xchg
pop
mov
mov
aas
shrl
adcb
xor
test
js
jae
fildll
jb
testb
xor
inc
inc
imul
inc
daa
lret
pop
mov
ds
insl
inc
or
mov
xor
sub
mov
leave
movsb
push
adc
xchg
pop
add
pusha
sub
mov
imulb
xor
movsb
jo
lea
js
call
mov
shrl
leave
adc
adc
out
roll
call
push
test
ljmp
dec
cmpsl
xor
mov
or
test
mov
lock
ljmp
clc
cli
out
call
sbbl
aaa
aaa
in
addr16
test
call
mov
and
sbb
xchg
mov
pop
jns
cltd
xchg
stos
jecxz
mov
fstpl
stos
in
out
notl
fiadds
xor
rcl
imul
ja
add
and
adc
cli
sbb
mov
call
call
sbb
mov
jecxz
das
mov
push
icebp
repz
jo
sahf
imul
ficompl
lret
push
mov
add
inc
clc
sarb
or
adc
and
fwait
das
arpl
cmp
iret
xor
mov
pop
inc
mov
movsl
lods
pop
sub
add
scas
mov
adc
lea
pop
or
lods
pop
imul
sbb
ret
movups
mov
test
sbb
pop
iret
pop
mov
ret
insb
fldz
mov
push
jno
xchg
push
and
cmpxchg
shll
aam
movsl
mov
jg
cmp
pop
adc
push
enter
xchg
lods
dec
push
ja
inc
xchg
fsubr
add
das
sub
in
cli
pop
jl
cmpb
push
sub
dec
mov
and
in
ret
aaa
cwtl
adc
mov
rclb
mov
sub
mov
test
seto
mov
inc
cmp
divl
cmp
ljmp
mov
dec
jp
push
mov
adc
jg
lock
test
xchg
call
or
test
stos
negb
inc
les
mov
imul
cmpsw
pop
cmp
mov
arpl
sbb
mov
xor
cld
xor
ficomps
dec
daa
jae
and
mov
jne
sbb
lods
clc
mov
ds
insb
fstpt
arpl
pop
fsubrl
aas
inc
sbb
enter
call
std
fwait
xor
and
and
xchg
mov
pop
testl
sbb
sbb
xchg
push
int3
lret
aas
push
sti
repz
mov
sub
inc
addr16
mov
and
dec
mov
inc
repnz
ja
test
repz
scas
add
inc
xor
mov
enter
and
negl
sub
adcl
mov
aaa
mov
out
xchg
paddsb
lahf
popf
iret
clc
jg
mov
mov
test
cmp
mov
adc
les
imul
in
sbbb
movsb
cmc
sarb
imul
aas
xor
cmc
jns
or
xchg
sbb
addl
jo
pop
sbbl
xor
fnstsw
loopne
mov
lcall
sub
pusha
pop
inc
push
mov
call
jo
enter
dec
into
cmp
mov
mov
mov
cs
jge
mov
mov
mov
or
and
push
cs
mov
fldt
add
fistpll
mov
mov
sub
cmc
cmc
sub
stc
loope
add
mov
sub
jl
enter
scas
xchg
mov
test
test
dec
in
add
cltd
mov
cmpsl
sbb
mov
mov
in
pop
divb
cs
cld
sbb
or
xor
or
into
or
xchg
fisttps
in
and
repz
lahf
imull
stos
jbe
pop
shll
arpl
jecxz
aad
les
mov
jb
cwtl
cmc
pop
add
into
rorl
movl
aas
xchg
inc
mov
movsb
pop
dec
dec
loope
or
loop
pop
sub
in
sbb
sub
pop
cmp
jo
sub
add
mov
testb
sbbb
sub
jecxz
jo
xor
sub
cmpsl
mov
or
xlat
adc
iret
cs
sahf
push
xchg
popa
mov
sbb
bound
adc
pop
cmp
sti
cmpsl
out
or
mov
loop
mov
xor
push
rolb
pop
lret
mov
push
jecxz
adc
repnz
aaa
imul
into
dec
cmpsl
adc
mov
call
int3
rorl
fistpll
sbb
mov
fadds
repz
cwtl
push
or
mov
cs
jb
cmp
ret
mov
dec
xchg
fstpl
shlb
pop
stos
adc
test
sbb
adc
and
and
pop
pop
add
movsb
lcall
loopne
pusha
stc
enter
cmc
test
das
or
push
cltd
negl
bound
xor
js
dec
jne
xchg
jns
std
pop
cltd
or
lcall
repz
mov
fnsave
xor
jo
adc
shl
jo
mov
cmp
scas
cwtl
jns
mov
jp
imulb
dec
lcall
add
mov
fdiv
mov
pop
xchg
mov
andl
add
jle
dec
push
cmp
jo
mov
mov
and
loop
jb
addr16
sub
insl
lcall
pop
movsb
sti
sbb
sub
imul
adc
aad
enter
mov
cmp
test
or
push
add
sahf
sti
mov
arpl
test
sbb
dec
adc
sub
mov
cmc
out
cmc
repnz
aam
or
cwtl
in
inc
clc
mov
cltd
push
popf
mov
scas
sbb
jnp
pop
sub
push
mov
lods
lahf
xchg
mov
nop
loopne
scas
xor
int
clc
dec
and
nop
insl
insb
test
sbb
and
sbb
mov
loopne
dec
cmpsb
insl
shlb
ret
push
scas
add
lock
out
pop
movsb
popa
fwait
cmp
and
push
sarb
repnz
sahf
cmpsb
imul
addr16
add
jb
clc
mov
and
in
xchg
pop
sub
or
mov
das
in
mov
sub
test
repz
mov
mull
test
add
sbb
decb
jg
xchg
cmpsl
bound
roll
adc
adc
push
xchg
push
ja
rorb
adc
xchg
js
call
sbb
aad
cmc
es
xor
fwait
mov
adc
mov
add
mov
pop
stos
ret
loopne
dec
negl
paddsb
ror
mov
punpcklbw
les
lods
add
mov
nop
loopne
lock
push
out
cwtl
push
ss
dec
in
ficomps
cmpsl
mov
out
das
push
mov
int3
lahf
mov
lret
setge
std
mov
mov
mov
mov
leave
scas
sub
ds
sbb
and
mov
mov
movsl
loope
dec
sbb
add
lock
push
sbb
nop
add
push
adc
dec
popf
push
cmp
mov
out
loopne
dec
incb
sti
shll
insb
adc
add
and
mov
loopne
cmpsb
lods
jno
js
outsb
stos
mov
out
daa
or
inc
clc
or
shlb
mov
xchg
cmc
or
mov
call
clc
xor
inc
rcl
inc
add
rolb
orb
js
out
mov
cmp
rcll
bound
nop
dec
orb
mov
mov
pop
mov
jecxz
pop
nop
push
dec
stos
lds
dec
fwait
leave
sub
mov
mov
shrb
pusha
std
adc
les
pop
xchg
hlt
and
or
lcall
test
pop
cwtl
push
mov
inc
adc
cmp
or
aas
mov
mov
xchg
push
cmp
mov
aam
dec
cmp
scas
mov
mov
bound
pop
xchg
iret
dec
sbb
cmp
jp
test
popl
jb
lock
sbb
out
addr16
cmp
xor
or
mov
add
les
jmp
xchg
ss
mov
lcall
xchg
xchg
stos
pop
xchg
jle
sti
sub
sub
clc
mov
int3
inc
jg
pop
push
dec
adc
sbb
cs
fdivl
enter
sbb
fisttpl
negl
inc
cwtl
dec
and
iret
out
fcmovnu
iret
test
js
loopne
dec
int
add
lret
mov
or
out
sub
push
adc
lods
mov
lock
jge
fistpll
mov
cmp
sub
mov
sub
daa
cmp
sbb
sub
mov
pushf
sub
pop
mov
dec
mov
or
cmp
fstps
lock
bound
insb
xor
outsb
or
out
jns
xchg
mov
cltd
pop
loope
pop
mov
clc
aam
rorb
sbb
in
jp
xlat
idivl
dec
je
fidivs
sub
mov
cmp
into
fbld
dec
rcrl
sti
sti
es
mov
icebp
lret
adc
lahf
cmp
cld
inc
jl
jo
pop
mov
mov
int
fwait
test
loope
sub
mov
int
pop
add
dec
inc
jnp
inc
xchg
pop
jge
dec
xor
inc
xchg
or
pop
out
mov
pop
repz
fiaddl
dec
mov
xor
in
push
arpl
and
pop
xor
aad
insb
cmpsb
aad
xchg
test
cwtl
jp
vphsubwd
xchg
lods
jae
decb
push
mov
and
jmp
loopne
fwait
mov
push
jo
dec
shl
addr16
imul
mov
out
jmp
es
movsb
jb
sub
dec
add
fistpl
out
xorb
add
or
jo
pop
das
out
js
popf
push
or
jae
inc
or
lret
mov
pusha
xchg
mov
or
sbbl
or
dec
loope
lahf
fadds
pop
fdivs
xchg
inc
nop
xchg
lods
dec
sbb
xor
scas
inc
or
jne
or
mov
push
das
cmp
pop
push
xchg
push
xorl
mov
mov
dec
adc
or
in
dec
les
cmp
adc
pop
and
sbbl
bound
call
js
xchg
cmp
jbe
and
or
lods
testb
mov
push
loopne
xorb
jl
inc
in
das
int3
popa
loope,pn
or
sub
fcompp
dec
out
mov
inc
pop
in
mov
aad
push
pusha
inc
push
jmp
xor
xchg
pop
xor
xor
repz
call
mov
xchg
add
jecxz
adc
repz
mov
adc
add
dec
stc
nop
into
je
dec
add
lock
sbb
test
repz
outsb
add
fs
rolb
push
ds
adc
dec
mov
sub
xlat
adcl
test
aaa
hlt
sbb
iret
out
push
jecxz
js
aam
or
mov
stc
scas
insl
sbb
ret
or
sahf
nop
or
xchg
pop
sbb
push
sub
scas
inc
add
mov
xor
cmp
dec
jbe
enter
ror
repnz
test
push
adc
cwtl
jg
ret
insb
mov
push
sarb
data16
or
andb
out
xchg
es
mov
or
xchg
jno
rorl
add
mov
push
sti
scas
inc
add
lahf
sub
mov
aas
ds
insl
das
rorb
test
dec
fadds
imul
cwtl
lcall
cmpl
scas
bound
addl
mov
or
jne
icebp
mov
in
lahf
sbb
mov
outsb
div
cld
test
push
std
pop
or
fcompl
out
pop
adc
xlat
lock
sbb
enter
or
adc
mov
cmpsl
add
push
sbb
cwtl
fsubrl
lea
jge
xor
fwait
pop
scas
jg
jg
inc
push
jae
or
int3
xor
out
call
mov
shlb
clc
lahf
fdivrs
mov
pop
notb
xor
in
dec
mov
xor
dec
mov
add
pop
cmc
hlt
fwait
sub
xor
sub
xor
pop
xor
jae
shr
cli
mov
aas
loopne
call
je
inc
pop
push
mov
fs
hlt
test
sub
xchg
leave
mov
je
test
cwtl
sbb
inc
shrl
sbb
push
es
dec
repnz
inc
inc
rcl
adc
addl
push
pop
inc
fucomi
mov
enter
shl
jbe
pop
pop
bound
ret
ss
add
bound
mov
push
jmp
inc
cltd
inc
and
aaa
jp
ljmp
cltd
outsl
pop
js
stc
mov
jb
add
dec
adc
jmp
aad
arpl
incl
repnz
sub
addb
mov
and
mov
pop
fisubs
ret
or
pop
cwtl
mov
insl
js
push
sub
xchg
sbb
cmp
jg
xor
icebp
add
inc
iret
mov
shlb
cmpsb
jmp
jle
lret
push
sbbb
pop
or
cmc
and
aaa
dec
cwtl
cmp
fimull
iret
imul
xor
cmpl
sub
or
mov
xchg
mov
xlat
int
mov
cmpl
popl
mov
fistpl
cmp
mov
aaa
and
mov
fisttps
push
sbb
xchg
pop
sub
mov
movsl
sbb
inc
mov
mov
add
icebp
loope
dec
fs
stos
nop
xor
push
mov
cmp
in
cmpsl
jge
aaa
xor
cmc
mov
pop
loopne
test
adc
call
xchg
lcall
mov
insl
jecxz
xor
jne
dec
pop
mov
jnp
push
sti
or
negb
shlb
cmc
std
std
add
cmpsl
mov
sub
in
jge
out
pop
sbb
lds
mov
rolb
or
inc
mov
out
adc
scas
mov
pop
jg
mov
call
roll
inc
shlb
jmp
add
cmp
mov
jge
cwtl
gs
ljmp
mov
gs
rcl
mov
or
cmp
sti
dec
sub
ja
pop
jns
xchg
mov
pop
mov
roll
fmuls
jp
sbb
mov
jne
pop
dec
push
or
pop
pop
cmpsb
fwait
es
pushf
sub
push
inc
push
and
test
fimuls
jnp
add
add
pop
jmp
aaa
adc
fdivrl
cltd
xlat
popa
andb
call
push
dec
xor
ss
mov
cs
lods
sbb
mov
pop
mov
xorl
adc
test
testl
div
insl
xlat
fcompl
mov
das
xor
stc
jo
test
in
nop
ds
lods
loopne
out
jns
pop
clc
mov
mov
mov
das
sbb
sbb
mov
xchg
iret
adc
add
xchg
rsqrtps
mov
dec
notl
dec
push
repnz
loopne
pop
ljmp
stc
add
push
fwait
cmp
and
xchg
mov
clc
lds
enter
or
inc
xchg
xchg
mov
ret
sbb
ds
inc
mov
shrl
cmpsl
add
mov
inc
mov
cwtl
js
xor
dec
fs
push
pop
cltd
jle
cld
scas
sub
jnp
push
mov
adc
lods
xor
jns
mov
lock
dec
cwtl
cmp
in
push
sbb
cmp
hlt
lock
mov
adcl
in
xor
adc
xor
fst
sbb
pop
jno
cmpl
pop
std
je
mov
in
dec
push
fwait
rorb
fcoms
xor
xchg
pusha
fs
cmp
movsb
pop
pushf
sbb
inc
fs
imulb
dec
and
add
or
stc
pop
cmpl
xor
sub
cmpsb
pop
leave
push
testb
inc
mov
jmp
pop
dec
mov
vmfunc
pop
jne
adc
push
ror
mov
pop
hlt
mov
int
rep
je
push
cmp
pop
mov
push
jmp
and
mov
mov
out
jno
inc
push
mov
inc
xor
mov
xchg
xchg
pop
negb
mov
dec
loope
add
js
movsl
add
pushf
xor
or
rorb
lock
or
xor
pop
cmp
xlat
inc
sbb
repnz
fs
xlat
push
mov
es
push
stos
add
mov
lret
mov
add
test
mov
mov
cmp
in
faddl
push
adc
push
dec
negb
dec
movsb
nop
mov
sub
ds
fistpl
push
xor
pop
hlt
lods
aas
out
xchg
mov
inc
push
pushf
out
or
leave
fs
jl
jo
add
push
jecxz
gs
or
imul
pop
push
sub
cld
mov
jnp
dec
pop
push
lahf
mov
aad
pop
aam
sub
pop
lods
movl
fsubl
jecxz
or
inc
leave
xor
sbb
pop
imul
loopne
divb
mov
push
pushf
mov
or
pop
std
jne
pop
sbb
lcall
jne
mov
clc
imul
cli
call
push
mov
mov
adc
jmp
xchg
es
fmulp
out
xor
dec
dec
std
pop
inc
pop
sub
add
hlt
mov
hlt
rclb
and
ret
mov
frstor
xchg
mov
out
or
insb
push
dec
add
mov
cwtl
or
cwtl
jg
xchg
lahf
enter
pop
popf
xchg
sbb
outsl
rcrb
jo
sub
nop
in
and
fwait
dec
and
js
sbb
sbb
add
jae
in
pop
add
int
mov
xchg
test
adc
cmp
adc
repnz
mov
lock
aad
int3
mov
pop
mov
jns
int
rcll
sbb
rol
cmp
sub
bound
cmp
testl
inc
mov
dec
cmp
mov
cmp
inc
mov
xor
sub
mov
enter
push
dec
fsubs
loope
jecxz
sub
pop
add
mov
je
pop
repz
jae
mov
adc
pusha
popf
or
in
pushf
cmc
add
xor
or
icebp
push
inc
pop
xor
lock
cmp
sub
push
lods
or
fscale
jae
add
push
pop
mov
dec
dec
cmp
and
inc
or
scas
je
ret
adc
rcrb
fildll
push
decl
js
and
push
and
iret
dec
cmp
aam
int3
push
sub
clc
mov
jo
cmpsb
pusha
jae
data16
push
imul
pop
adc
loop
cs
cmp
int3
jmp
pop
add
not
add
push
adc
pop
jb
sub
lods
movb
out
out
and
dec
out
loopne
jbe
pushf
pop
sbb
sbb
dec
mov
aad
xchg
fstl
or
lock
lret
lea
and
jp
dec
push
add
or
add
cld
inc
cld
rcrl
outsl
lahf
lcall
xor
dec
in
insb
dec
lods
clc
or
lea
and
imul
sbb
jmp
popa
scas
pusha
jae
nop
push
mov
out
xchg
das
sbb
scas
gs
mov
ret
dec
lret
mov
mov
repnz
and
pop
jmp
mov
dec
int
call
jl
fs
or
sbb
repnz
lcallw
int
repz
jl
jo
cld
dec
enter
repnz
adc
dec
mov
aas
mov
out
das
lods
adc
adc
inc
pop
mov
fcmovu
sub
outsb
pop
cs
mov
sbb
xor
xchg
in
xchg
xchg
jl
jo
inc
and
into
adc
addr16
cltd
push
xor
sahf
and
jbe
in
scas
pop
push
push
jle
xchg
test
lahf
jne
mov
jg
sbb
jne
shr
enter
pop
pop
sbb
xchg
fisubl
jp
cmp
rolb
inc
adc
pop
loopne
movsl
inc
loopne
test
dec
shrb
sti
test
ret
pusha
pop
push
or
or
add
push
ret
mov
sbb
fidivrl
mov
push
daa
sbb
mov
outsl
jecxz
xchg
jmp
clc
cmpl
outsb
sub
shlb
fidivrs
push
sub
mov
jb
and
movsl
fdivs
ljmp
pop
and
inc
pusha
les
mov
out
fsubrl
ja
ror
std
and
cmp
daa
mov
xchg
addb
inc
nop
mov
dec
lock
cltd
loopne
mov
sbb
adc
mov
dec
mov
or
adc
scas
lock
iret
and
sub
xchg
mov
leave
pop
mov
xchg
shlb
sbb
push
imul
mov
es
add
mov
sub
xchg
mov
adc
lods
test
sbb
mov
pushl
cli
sub
mov
xchg
xor
sar
ficomps
push
insl
sarl
xor
test
or
xchg
clc
mov
out
adc
cmc
in
mov
rcrl
push
xor
fwait
test
lret
pop
mov
inc
jle
mov
aam
test
aas
lods
ljmp
xor
push
addb
mov
dec
adc
sbb
popf
cwtl
pop
repnz
roll
cld
pop
dec
lret
mov
pop
sbb
je
and
dec
push
dec
cwtl
jbe
std
sub
adc
cmp
std
js
test
push
or
sbb
push
data16
clc
ror
mov
cwtl
mov
aam
sbb
in
cmpsb
adc
out
mov
cmp
fcoms
mov
ret
fyl2xp1
push
lahf
push
cli
sahf
jl
repz
outsl
adc
fucomip
insl
in
sahf
add
jl
adc
xor
in
rcrb
inc
insl
imul
mov
xchg
jb
add
mov
fsubl
xor
pop
mov
inc
or
inc
and
xor
test
rcrb
push
add
and
jo
xor
and
add
sub
lds
inc
or
lret
or
push
in
adc
and
adc
jae
and
stos
mov
loop
mov
cwtl
mov
jb
addb
and
xor
mov
test
mov
adc
pop
add
mov
xor
sbb
repnz
mov
cmp
rol
dec
aad
dec
pop
in
sub
xlat
xor
sbb
fldl
pop
push
add
push
js
mov
test
fdivs
jnp
lods
outsb
iret
xor
and
mov
call
icebp
adc
jl
ret
xchg
cmp
into
adc
fwait
dec
mov
inc
mov
movsb
fcomp
pop
repz
popf
daa
dec
dec
mov
les
cmp
inc
jecxz
push
cmpsb
js
js
sub
les
jbe
and
adc
adc
adc
xchg
popa
loopne
pfcmpeq
out
jmp
adc
ds
loope
aas
sub
xchg
sub
lods
cwtl
outsb
sub
in
or
shll
stos
push
sub
sbb
push
mov
pushf
inc
xor
pop
je
aas
test
rol
das
js
xorb
ss
xchg
pusha
and
mov
inc
mov
in
push
in
icebp
pop
popf
idiv
push
loope
pop
mov
or
push
xor
add
aad
push
and
push
jnp
sub
mov
outsb
jl
inc
mov
test
inc
cmp
daa
pop
mov
inc
mov
cmpsb
fbld
pop
sub
push
aas
inc
test
std
js
mov
sbb
imul
cld
mov
inc
ror
jle
adc
cmp
add
loope
push
ja
cmpsl
in
dec
or
ret
das
xchg
fwait
dec
test
insl
cmc
xchg
inc
sbb
lcall
jnp
cmp
mov
mov
aam
in
or
out
fstps
mov
push
jp
sub
aam
mulb
rorb
lods
je
negl
out
popa
mov
inc
xor
xorb
cmc
lods
pop
xor
out
call
push
or
inc
mov
cmp
jbe
xchg
lods
pop
loopne
clc
add
push
xchg
fs
pop
fdivp
icebp
into
das
cld
addr16
xlat
fsubrs
add
cwtl
lock
dec
call
outsl
cmpsl
lahf
cmpsb
fcomps
imul
out
jb
sbb
gs
out
cmp
rep
xchg
insl
movsb
pusha
mov
inc
int3
xchg
push
dec
cs
jg
sub
cmp
and
push
lock
push
lea
call
or
mov
or
add
adc
daa
inc
sub
daa
in
xchg
rol
xchg
pop
loopne
scas
arpl
cmpsl
lcall
aad
mov
imull
pop
xor
cld
icebp
repnz
xor
outsl
sahf
fistl
inc
data16
fimuls
cwtl
adc
jmp
and
mov
sbb
cmp
or
popf
pusha
sub
cmpsb
mov
fwait
mov
adc
pop
lods
jne
mov
pop
pop
out
sub
in
sbb
fwait
cmpsl
cwtl
mov
push
test
out
shlb
mov
daa
mov
cmpsl
pop
push
aad
xor
fmuls
je
sbb
push
xchg
fs
pop
inc
mulb
test
stos
cmpl
idivb
test
mov
loope
add
stos
jnp
mov
add
pop
mov
gs
stos
movsl
cltd
or
arpl
jb
add
sub
mov
mov
daa
and
xchg
adc
dec
lea
xchg
xor
inc
jg
lahf
mov
outsb
addr16
add
sub
rolb
and
sub
inc
sti
sub
mov
push
jno
cmp
mov
sahf
jl
jmp
cmp
cmpb
movsb
add
jb
mov
mov
into
loop
cmpsl
cmp
pusha
sub
mov
lock
fs
bndstx
xlat
leave
ss
in
cmpsl
adc
mov
push
iret
lock
xor
add
xchg
lret
xchg
sbb
sti
nop
pusha
ss
out
dec
js
jl
testb
rcl
repnz
dec
add
in
icebp
daa
xchg
lcall
add
sbb
gs
add
pop
sub
inc
sahf
sub
js
pop
cmp
inc
push
mov
mov
pushf
inc
aam
shrl
fwait
mov
inc
sub
jno
push
mov
aas
dec
fisttpll
scas
push
sub
sbb
cmp
clc
or
mov
xchg
lods
pop
add
movsl
rol
sbb
push
add
or
sub
movsl
and
fdivs
and
mov
dec
mov
jecxz
cld
es
and
enter
push
fwait
jns
cmpsb
ljmp
in
fists
ds
mov
mov
cmpsl
add
repnz
es
loop
or
xorb
addr16
outsl
repz
shl
daa
jg,pn
jne
cwtl
pop
mov
gs
dec
fdivrl
mov
fildl
ljmp
int
fcomip
pop
dec
sub
stc
stos
mov
jge
sub
mov
mov
xor
pop
sbb
adc
cmc
sbb
xor
push
push
hlt
inc
dec
jge
add
ljmp
aad
lods
scas
mov
jne
add
mov
aam
mov
dec
jecxz
sub
add
rcl
fcompl
and
testb
inc
std
repnz
ss
aad
push
scas
lea
lock
js
cwtl
data16
sub
cmc
nop
fwait
xor
ss
les
sahf
imul
adc
lret
sbb
int
pop
ja
push
and
enter
mov
in
push
fs
pmulhw
rcll
dec
or
and
hlt
mov
pop
iret
cld
fmul
adc
push
adc
adc
mov
outsb
cmpsb
adc
movsl
hlt
ljmp
mov
adc
bound
mov
pop
or
es
push
jb
add
mov
sbb
les
out
out
ja
enter
mov
dec
jg
popf
cmc
mov
aas
scas
movsb
jl
mov
icebp
mov
xchg
je
test
fnstcw
push
jbe
lods
test
mov
dec
push
test
bound
xchg
xor
pushf
outsb
test
sbb
dec
aas
mov
into
dec
shrl
dec
test
cmp
enter
push
lods
push
rorl
es
test
loopne
or
dec
push
imul
repz
out
jo
into
or
mov
pusha
leave
insl
cmp
mov
jp
das
sbb
and
sbb
jge
outsl
dec
mov
pop
in
bound
mov
pop
mulb
sbb
inc
pop
lods
out
nop
mov
push
idivl
adc
adc
das
or
fldcw
imul
mov
test
dec
xor
mov
adc
mov
mov
lods
push
aas
xlat
int
loope
jmp
lea
adc
xchg
dec
loopne
jnp
xchg
popa
aam
adc
cmp
xor
mul
leave
dec
mov
mov
in
jnp
ret
or
xor
fbld
popa
dec
sbb
mov
mov
or
outsb
repnz
jmp
jp
push
pop
mov
repz
adc
insl
sarl
nop
add
xchg
mov
in
jg
sub
dec
bound
scas
mov
xchg
jbe
and
jle
sub
mov
mov
adc
sub
cmp
mov
int3
pop
mov
jge
in
inc
and
or
call
bsf
and
fmuls
ror
movsl
cwtl
lock
push
dec
js
mov
repz
ja
sub
out
mov
xor
xor
std
cmp
mov
inc
adc
int
pop
sub
rorl
loop
movsb
faddl
in
adc
xlat
addr16
jne
enter
jnp
pop
or
sbb
push
negb
inc
mov
in
lret
dec
push
sub
xchg
dec
push
jne
lea
nop
iret
fwait
movsl
lret
dec
sbb
cld
ret
dec
les
cmpsb
aaa
js
xorb
test
cmp
xchg
aam
cld
cld
xchg
and
pop
addr16
pop
xchg
movsb
or
push
sbb
fstl
int3
rorb
insb
push
scas
movsb
lock
mov
pop
adc
mov
mov
rcl
sub
mov
push
andl
sub
mov
push
and
ds
mov
and
adc
dec
ret
mov
jl
or
call
fcoms
inc
xchg
out
jae
push
mov
es
rcll
xor
into
ja
xchg
hlt
dec
orb
rolb
in
mov
push
mov
sbb
dec
mov
enter
insl
pop
fnstsw
cld
fsubrs
in
ljmp
lcall
or
fwait
sub
fcmove
push
lcall
sbbb
stos
popa
adc
mov
sti
nop
cmp
mov
cld
jb
mov
in
bound
pop
dec
sbb
sarb
call
xabort
or
cmp
loop
push
mov
jo
pusha
cmp
dec
fidivl
add
xchg
sub
mov
mov
mov
pop
test
mov
stc
push
or
sub
push
jmp
ss
pop
cwtl
in
decb
flds
cmp
xchg
sub
push
jns
push
sub
cwtl
pusha
xor
aad
inc
adc
bound
jns
jmp
in
dec
jbe
sub
xchg
sub
adc
test
popl
dec
xor
test
sbb
loopne
mov
addr16
mov
std
movsl
xor
push
xor
cmpsl
pop
sbb
adc
mov
push
xchg
push
pop
add
aam
lcall
je
test
stos
jb
es
mov
jp
clc
cwtl
mov
mov
stos
jae
jae
inc
jne
mov
jno
sub
scas
xor
mov
fcmovnu
dec
shr
jo
xchg
dec
xchg
lret
mov
fildll
mov
sbb
jge
in
cltd
dec
fbstp
jae
scas
pop
pop
orb
pushl
lods
lds
or
arpl
lahf
xchg
or
adc
pop
pop
ss
lds
ficoml
mov
movb
in
xor
adc
mov
sbb
rcrb
push
adc
xlat
push
or
or
mov
xchg
mov
sub
xchg
outsb
es
pop
and
lahf
cwtl
ret
pop
ret
aaa
mov
aaa
sti
push
andps
popa
pop
push
or
sbb
jecxz
jno
jl
jns
mov
push
std
pop
shrb
jno
test
aaa
inc
faddl
inc
sub
fcomps
aaa
ja
lcall
mov
or
add
les
or
test
mov
fwait
aaa
cmp
pop
inc
sti
lea
loope
jmp
lock
xor
dec
ljmp
pop
mov
stc
ds
pop
mov
xor
dec
cwtl
inc
cld
test
shl
mov
inc
sbb
jne
sti
xor
push
out
sbb
lock
push
lret
push
adc
and
cs
pop
pop
popa
and
jmp
jno
call
cmp
adc
lods
jmp
mov
dec
mov
inc
jmp
cli
sub
cs
mov
pop
inc
push
mov
loopne
mulb
in
dec
xor
out
pop
push
insb
pushf
pop
lods
mov
in
push
pop
pop
and
xor
out
lods
or
sar
jecxz
jo
cmp
aad
int3
mov
mov
inc
clc
mov
and
nop
dec
add
push
or
js
call
cmpb
test
sbb
mov
mov
and
nop
dec
add
push
or
js
call
cmpb
test
sbb
mov
mov
and
nop
dec
add
push
or
js
call
je
xor
add
adc
adc
lock
cmp
mov
mov
and
nop
dec
add
push
or
xor
mov
cmp
test
sbb
mov
mov
and
nop
dec
add
ficomps
jb
test
lock
sbb
fs
mov
pop
jo
loopne
jmp
jns
out
push
push
mov
rorb
scas
push
sbb
xchg
pop
in
jno
push
or
js
jg
aam
push
adc
jle
sti
sbb
cli
lock
mov
pop
stc
jns
out
fdivl
cmp
mov
lahf
inc
xchg
sub
and
lret
mov
inc
cli
pop
jg
push
clc
mov
lock
movsb
in
popf
and
enter
shll
xchg
aas
test
sbb
movsl
push
stos
je
pop
testl
xchg
fistpl
arpl
rclb
cmc
xor
push
pop
jae
jne
add
or
lods
xor
mov
push
jno
in
in
cmp
dec
repnz
xor
cwtl
inc
aam
subb
dec
sbb
jl
fsubs
push
ret
mov
mov
in
lods
add
ja
sub
sub
adc
mov
mov
scas
dec
mov
mov
dec
sbb
icebp
mov
add
xchg
mov
pop
jl
adc
mov
dec
push
jl
repnz
push
sub
jno
xchg
lcall
clc
lcall
icebp
aas
in
fdivrl
loop
mov
dec
jl
dec
xor
mov
arpl
dec
repz
fstp
sbb
enter
sub
in
jne
mov
jl
push
mov
loope
mov
insl
adc
mov
inc
fsubl
lods
sbb
fisubl
test
pusha
movsl
push
mov
cmp
pop
mov
stos
xchg
stos
xor
sub
pop
aas
mov
aad
les
clc
pop
idivl
jmp
iret
or
dec
sbbb
xchg
pop
jle
add
or
or
and
inc
ror
ret
inc
fstps
adcb
loope
jb
hlt
ljmp
mov
hlt
push
mov
out
cmc
dec
pop
aaa
and
mov
fistpl
jmp
add
mov
xchg
addr16
addr16
lock
loope
out
test
adc
sahf
and
mov
adc
int3
sub
xor
in
mov
popf
adc
jb
test
sub
aas
pop
push
lcall
inc
mov
jg
hlt
mov
fdivrs
in
sub
xor
cld
frstor
dec
es
pop
or
inc
xchg
adc
pop
jno
xchg
and
jp
lcall
cmc
mov
sahf
xchg
cmp
mov
dec
push
es
jne
mov
popf
pop
add
mov
insl
bnd
lret
sbb
inc
sbb
pusha
mov
mov
in
push
jp
jecxz
xor
test
xor
jne
and
imul
cmp
jecxz
xchg
test
cmp
inc
ficompl
mov
outsl
jnp
mov
or
xchg
xor
jg
mulb
sarl
jmp
enter
or
lock
mov
dec
cmp
pop
xor
js
cmp
cmp
fimuls
xor
jle
inc
repnz
shrb
cmp
or
sub
xchg
xor
enter
mov
iret
ror
push
pop
lea
pop
loop
mov
adc
imul
mov
xor
or
push
ficomps
xor
add
xorl
int
pop
aas
xchg
add
adc
fdivrl
sub
adc
xlat
jbe
add
std
and
mov
xchg
and
insl
or
dec
push
out
test
lret
jb
dec
mov
pop
ljmp
sub
lret
dec
cmc
sbbb
subl
cmpsb
cmpsl
in
xchg
xor
and
sti
js
jmp
pop
sub
in
scas
inc
push
pop
mov
cwtl
and
testl
jns
in
mov
je
in
hlt
addr16
outsl
nop
cld
shr
jmp
fsubrs
dec
je
mov
mov
xchg
enter
mov
adc
lret
mov
enter
test
orb
mov
inc
pop
push
mov
jb
add
dec
xchg
cmpsl
inc
mov
sbb
lcall
fcoms
jb
and
xchg
frstor
inc
aas
cmp
ret
lcall
call
adc
adc
cmp
lods
dec
mov
js
fwait
dec
repnz
bound
mov
and
adc
test
dec
pushf
jne
pop
lea
jmp
pusha
cmpsl
and
push
cmc
hlt
sub
sti
lahf
repz
shlb
mov
sbb
ret
ja
roll
shll
rolb
mov
sbb
daa
add
out
push
xchg
test
cld
xor
out
or
shlb
jg
and
sub
movsl
inc
aad
int
xchg
pop
pop
ljmp
aad
pop
jbe
lods
gs
pushf
fmull
gs
scas
jmp
das
movsl
popf
cmpsb
dec
adc
fnstenv
cmp
mov
call
add
popa
leave
mov
jecxz
inc
xchg
mov
ret
fdivs
lds
mov
subl
daa
sub
loope
lahf
daa
pop
std
mov
jmp
cld
or
lods
and
jns
xor
mov
ss
sbbb
mov
adc
aas
jg
mov
inc
pop
test
inc
push
scas
fmuls
cmpsb
imul
fcmovb
aam
jae
enter
mov
cmp
mov
and
rorb
jmp
push
les
inc
iret
pushf
je
mov
xor
jge
push
sub
mov
sar
and
sub
inc
and
in
arpl
cmc
ds
sbbl
popa
sub
mov
das
dec
mov
fcoml
xor
mov
push
fistl
mov
sub
sub
mov
arpl
test
pop
icebp
mov
jb
icebp
sbb
scas
push
sbb
insb
hlt
lcall
inc
inc
mov
insl
and
daa
leave
inc
dec
jno
testl
test
mov
mov
mov
je
insl
push
push
cwtl
cld
jecxz
pop
mov
pop
pop
add
or
cmp
pop
popf
ret
add
sbb
rorb
add
test
lods
add
sub
pop
adc
dec
push
imul
std
push
loopne
push
mov
adc
repz
iret
ret
pusha
sbb
add
loopne
inc
dec
add
rorb
rolb
enter
test
push
cmc
in
lret
test
std
xchg
sti
rorb
or
fildl
add
mov
ds
xchg
fmul
hlt
hlt
add
outsb
cld
sarb
in
js
enter
test
out
mov
loope
push
hlt
cwtl
jo
loopne
nop
or
pop
xor
pop
js
enter
push
scas
clc
inc
pop
lahf
daa
in
faddl
adc
scas
pop
mov
das
cmpsb
int3
dec
js
loopne
mov
data16
nop
xor
dec
xor
cmpsb
mov
cltd
push
mov
xchg
test
mov
mov
lods
and
dec
jne
adc
in
scas
or
fiadds
adc
gs
pop
insl
sub
cmc
sbb
aad
and
xchg
and
fwait
sbb
cmp
push
enter
xor
lods
sub
mov
lock
cli
lock
les
testl
cwtl
xor
sub
jle
mov
push
mov
push
cli
mov
and
sbb
mov
mov
and
nop
dec
add
push
or
js
call
cmpb
test
sbb
mov
mov
and
nop
dec
add
push
or
js
call
cmpb
test
sbb
mov
mov
and
nop
dec
add
push
or
js
call
cmpb
test
sbb
mov
mov
and
nop
dec
add
push
or
js
call
cmpb
test
sbb
mov
mov
and
nop
dec
add
push
or
js
jne
or
in
and
jmp
das
xor
mov
cmp
ret
jb
mov
add
lret
mov
pushf
xchg
xor
sbb
data16
shll
outsl
out
push
loop
lds
inc
shll
mov
fcompl
inc
test
jmp
mov
pop
push
sbb
cmp
xor
addr16
shlb
pop
xor
jno
push
xor
scas
test
mov
testl
popl
and
repz
pop
mov
add
and
std
xor
add
adc
mov
add
cmp
xor
and
xor
mov
mov
add
mov
or
mov
add
mov
xor
jo
mov
mov
add
mov
and
add
inc
push
pop
mov
cmp
jne
push
add
jp
add
sub
inc
pop
inc
and
push
pop
cmp
jne
add
call
and
sti
outsl
add
pop
or
mov
js
xor
lock
or
imul
xor
jo
or
loop
jmp
js
and
leave
repnz
cs
mov
xor
add
lret
rcrl
lret
xor
dec
xor
leave
sbb
xor
lret
add
pop
jo
xor
lret
add
add
dec
xor
pop
lret
mov
adc
xor
xor
lret
jmp
jo
lret
aad
flds
xor
mov
xor
shll
jecxz
sti
rcrb
dec
lret
xor
mov
inc
mov
add
dec
sbb
dec
xor
cwtl
dec
mov
xor
popa
or
inc
das
dec
das
in
sub
sub
les
rol
les
or
cmp
inc
add
repz
push
or
xlat
lock
clc
and
or
sbb
sbb
or
jmp
in
push
out
or
or
or
push
notl
stc
adc
adc
push
lcall
mov
xor
push
cmp
push
int3
lcall
mov
pushf
jle
fmull
add
mov
je
jno
mov
dec
repz
loop
jnp
mov
loopne
sbbl
mov
into
in
aas
test
repz
gs
push
mov
movb
sub
data16
out
inc
imul
sub
inc
lea
and
aas
cwtl
mov
sbbb
mov
cwtl
hlt
std
andb
out
stos
xchg
sub
hlt
mov
and
sbb
movsl
mov
cmp
jb
pop
outsb
in
mov
xor
mov
ds
rcr
push
dec
xor
pop
xor
arpl
ja
pop
out
fpatan
xchg
cmc
xchg
insl
sbb
aam
or
inc
orb
enter
mov
dec
jecxz
idivb
sbb
sbb
mov
test
dec
and
clc
jecxz
mov
sti
jb
arpl
sahf
je
fs
jg
dec
push
stos
aaa
mov
.byte
