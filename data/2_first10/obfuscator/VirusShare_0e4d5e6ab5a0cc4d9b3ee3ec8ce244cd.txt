push
call
ret
ret
push
push
xchg
or
jo
dec
add
and
aaa
fdivl
fidivrl
loopne
mov
mov
dec
idivl
sub
ljmp
inc
and
dec
pop
clc
sub
cmp
push
mov
cmpb
sbb
jno
sub
sub
mov
pop
adc
pop
outsl
adc
xor
lock
std
adcb
dec
sbb
adc
fisttps
inc
inc
xchg
dec
cmp
mov
stos
ljmp
add
outsl
mov
push
fstpl
pop
scas
push
mov
jg
hlt
inc
dec
mov
scas
popl
jns
inc
mov
and
push
fwait
xchg
mov
add
ja
or
dec
push
cmp
xor
lret
sbbl
aad
test
mov
jmp
mov
add
outsb
fmull
scas
jl
add
jo
pop
rorl
push
aad
push
jae
icebp
fcomip
insb
sar
xor
cmpsl
int
icebp
pop
fcoml
arpl
cwtl
inc
mov
xchg
fdivrs
adc
in
leave
and
ds
cld
jae
insb
shlb
and
xchg
mov
xchg
clc
adc
xchg
cmp
aaa
shrl
xor
packsswb
sbbb
inc
lods
add
push
aaa
mov
vmwrite
je
addr16
mov
adc
jp
pop
pop
es
xor
inc
gs
cmc
dec
mov
test
jl
shlb
add
or
jbe
pop
xor
xlat
sahf
test
adc
nop
and
lods
and
and
pop
push
in
sub
adc
xlat
out
insl
sub
push
repnz
in
fst
bound
loope
push
xchg
repnz
mov
fmuls
ja
mov
jmp
mov
jmp
push
mov
divb
test
scas
mov
jnp
jbe
mov
ja
data16
xchg
mov
test
out
push
push
movsl
repz
addr16
and
mov
das
pop
nop
sub
cld
sub
lds
rcll
call
lret
arpl
push
sbb
cmp
outsl
or
movb
xchg
push
fidivrs
fimuls
pop
mov
out
add
insb
leave
lods
push
sbb
fstpt
mov
lcall
cli
adc
and
mov
scas
mov
push
xor
fidivl
ljmp
mov
mov
push
insb
mov
dec
pop
jg
rolb
scas
in
test
sbb
push
or
pop
inc
dec
mov
dec
or
dec
arpl
or
inc
cmp
push
jb
sbb
dec
aam
lahf
xchg
sbbl
cmp
jns
pop
pop
imul
xlat
stos
pop
push
aam
xchg
out
jno
jp
xchg
out
jbe
sbb
and
mov
xchg
push
inc
es
fs
jb
movsb
popa
push
ss
imul
sbb
fwait
stos
fdivrs
sbb
out
cmp
or
and
push
ss
mov
ja
imul
pop
out
pop
add
orl
jnp
jmp
jno
mov
push
adc
cmp
loop
out
xchg
sti
lods
lods
jae
mov
sbb
push
xor
push
mov
push
ss
dec
bnd
dec
mov
ja
mov
xchg
hlt
xchg
mov
mov
and
loopne
sbb
ljmp
fs
xchg
mov
pop
push
and
repz
mov
popf
clc
or
push
mov
push
lock
es
movsl
addb
adc
loopne
xchg
mov
sahf
inc
lds
jle
cmp
out
dec
pop
push
adc
and
repz
mov
fs
jecxz
popa
add
or
jae
mov
stos
pop
fisttpl
fmuls
jbe
jnp
pop
cmp
sub
int
inc
popa
test
rolb
rorl
outsl
out
gs
loope
shll
mov
xchg
das
daa
xchg
outsb
testb
dec
or
adc
add
fidivl
cmpsl
out
std
cmpsl
lods
shll
sbb
js
jle
lods
rol
scas
push
mov
mov
mov
or
outsb
inc
jae
cmp
mov
sbb
cld
fwait
repz
aam
cld
sub
add
popa
sbb
mov
hlt
pop
jbe
sbb
xlat
sarl
dec
or
fstpl
lock
jns
shrl
cltd
adc
fnstenv
ret
ja
loope
icebp
sbb
push
test
pop
cmp
dec
sbb
ja
jns
insb
pop
mov
push
mov
jb
add
mov
cwtl
sub
xor
mov
and
dec
fldcw
bound
test
rcr
xor
mov
shrl
test
out
jp
testb
sub
enter
rcll
inc
or
jno
sub
ret
movsb
sbb
es
out
fwait
std
outsb
loop
xchg
jp
mov
cltd
fs
adc
insb
jecxz
sub
arpl
mov
mov
scas
arpl
xchg
dec
push
ja
adc
movsl
inc
mov
movsb
mov
test
push
push
dec
or
testb
les
lds
mov
lods
dec
mov
jne
pop
jmp
mov
mov
mov
and
pop
jp
and
adc
inc
push
jp
lock
fidivl
cltd
and
push
fisttpl
mov
imul
in
sub
xchg
pushf
sub
and
into
pop
jnp
or
scas
nop
js
enter
add
xchg
outsb
push
repz
push
cmp
stos
std
xchg
rcrl
xchg
lret
sbb
in
or
jae
jl
in
arpl
dec
sub
mov
mov
jle
cmp
mov
outsl
jno
dec
clc
sub
aam
ret
jl
jae
lds
jmp
jne
repz
loopne
popf
mov
ss
in
jg
into
dec
inc
xor
fwait
in
xor
jmp
fwait
sub
lea
dec
pop
add
ret
stos
adc
test
out
lock
sub
clc
stos
push
adc
push
aaa
cmp
adc
shlb
dec
adc
cmp
jp
inc
rcll
mov
or
inc
scas
mov
mov
inc
xchg
sub
fwait
xchg
test
add
imul
cltd
and
imul
mov
wbinvd
loop
cmp
test
stos
push
int
sti
inc
push
sahf
jle
popf
mov
mov
loop
adc
jge
sub
jo
shrl
mov
add
nop
ljmp
and
sub
clc
outsb
xor
or
cmpsb
ja
sbb
es
adc
push
xor
popa
lock
loopne
cs
neg
cmp
xchg
mov
and
push
loope
sbb
addl
in
add
in
mov
in
popf
push
rcrl
xchg
xor
or
bound
hlt
pop
fidivl
jp
aad
pushf
repnz
dec
stos
fiadds
std
out
andl
xchg
mov
test
or
dec
sbb
rclb
jmp
cmpsb
mov
xchg
repz
das
mov
mov
or
jecxz
sbb
mov
cld
int
addl
stc
sub
adc
flds
fidivs
or
test
push
jg
outsb
cli
shlb
cmp
xchg
pop
test
sub
xlat
mov
add
leave
xchg
jb
and
imul
insb
dec
mov
lret
add
hlt
fdivl
sbb
jae
loope
mov
fcomi
repz
testl
insb
repnz
es
fmull
rcl
ds
xchg
rcrl
lock
push
dec
mov
push
arpl
lods
repz
jl
lods
jle
push
xchg
into
pop
nop
fs
jb
lods
mov
sahf
std
push
jae
add
pop
leave
adc
cmp
mov
adc
cmc
in
mov
push
mov
mov
jge
jno
bound
lcall
pop
ds
das
dec
xchg
push
xor
outsl
test
pop
jns
in
mov
jbe
shl
in
sbb
dec
lcall
in
les
add
mov
outsl
mov
xor
mov
and
cmp
incl
sbb
in
and
movsl
adc
or
add
sub
mov
sti
out
aaa
in
dec
adc
in
mov
add
sbb
mov
mov
int3
rorb
adc
sahf
mov
mov
mov
insb
mov
rol
cmp
imul
mov
push
test
mov
push
add
fistps
xor
pop
mov
push
dec
shlb
jae
add
jecxz
mov
and
jns
cmpsl
add
ret
arpl
pop
and
pushf
fld
inc
add
ljmp
test
nop
ret
cltd
aam
cmp
dec
popa
fs
jecxz
popf
push
out
mov
add
sar
pop
mov
rcrb
push
sbb
push
sbb
rcrl
push
rcll
mov
loop
inc
pop
shrl
push
sbb
push
leave
scas
xlat
mov
sbb
call
mov
cmp
dec
xchg
outsb
add
popa
dec
int
test
ret
mov
fmull
cmp
popf
imul
outsl
xor
sbb
icebp
out
idiv
rcrl
add
mov
cmp
lds
push
mov
jb
mov
gs
nop
out
jne
cli
stos
mov
fcomip
ret
icebp
xchg
sub
stos
out
cmc
test
push
in
xchg
push
sbb
inc
shl
add
mov
es
cwtl
movsl
jo
cs
xor
jge
jg
cld
sbb
bound
pop
mov
jb
cld
fcmovbe
test
mov
fiaddl
inc
mov
faddl
fldenv
lret
and
fnstcw
cmp
ficoml
add
mov
psadbw
in
lods
pop
ljmp
pushf
xchg
sbb
cmp
idivb
aad
std
pop
cmp
stos
xchg
mov
mov
loope
iret
int3
loopne
imul
mov
dec
stc
mov
push
inc
je
pop
push
outsl
dec
stc
sbb
sub
js
dec
out
dec
push
xchg
sahf
mov
aam
movsb
dec
sbb
add
fdivrp
sbb
jge
lahf
mov
mov
mov
sub
sbb
int3
test
push
xchg
jns
fxch
xlat
jp
int3
sbb
add
xchg
sub
es
jl
xor
inc
push
in
dec
jno
mov
dec
xor
adc
sub
or
or
mov
add
add
outsb
mov
in
jns
cltd
xchg
in
mov
filds
lret
insl
repz
sbb
out
out
sahf
adc
fnsave
sbb
xchg
std
jmp
push
push
xchg
jno
xchg
push
mov
lcall
test
aas
mov
rcr
xor
es
lret
js
hlt
adc
stos
push
js
pop
xchg
call
fdivl
add
add
sqrtps
or
pop
lahf
or
cmpsl
rcrb
pusha
std
dec
sbb
pop
mov
roll
lods
jmp
fcoms
pop
xchg
and
and
mov
sbb
cs
enter
pushf
pop
idivl
aaa
subb
adc
mov
stos
int3
addr16
or
pop
jp
loopne
cmc
stos
sub
xchg
in
add
and
dec
enter
ljmp
mov
xchg
add
fisubs
les
add
sbb
sbb
add
cld
mov
shrb
sbb
inc
js
adc
xchg
sbb
jmp
push
bound
jbe
iret
xlat
insb
test
sub
adc
inc
psrad
and
add
in
lock
inc
dec
pop
scas
adc
sbb
jo
in
cmp
jge
int3
and
push
cmp
addr16
sub
xor
inc
mov
sarb
fs
mov
mov
xchg
cmp
inc
mov
and
sbb
js
je
mov
mov
inc
jecxz
xchg
loope
xor
js
adc
xlat
and
pop
jns
jecxz
stc
movzwl
add
xchg
add
add
insl
sub
add
add
inc
push
or
ss
outsb
xchg
xchg
xor
xor
push
hlt
stc
out
fcoml
sub
xor
jno
and
cmpb
fbld
sbb
icebp
xchg
aaa
jge
xorb
and
push
aas
gs
or
loop
mov
pushf
mov
in
mov
mov
lahf
cli
daa
outsl
lods
mov
sub
push
jno
cmpb
frstor
test
hlt
mov
daa
sbbl
and
jecxz
aad
pop
dec
rcrb
outsb
adc
stos
xlat
sahf
cmpsb
in
or
mov
rcr
test
fadd
ret
test
jp
jae
add
lock
or
arpl
xchg
mov
inc
and
fs
outsb
jecxz
aaa
xchg
stos
or
mov
xchg
dec
inc
movsb
jns
adc
lock
scas
or
or
xor
mov
loope
mov
aas
shrl
imul
and
mov
pop
pushf
sub
subb
jmp
add
int
es
loope
and
fstpl
mov
adc
sbb
pop
fdivl
daa
xchg
out
rcll
in
and
push
xor
ljmp
insb
and
aas
nop
cmp
mov
mov
xchg
jp
jbe
repnz
mov
hlt
popa
jg
sub
fisttpll
mov
pop
dec
xchg
pop
fnsave
test
push
xchg
mov
sub
push
push
xchg
sub
test
xor
add
or
lret
sbb
cld
fiaddl
orl
push
cmp
fsubs
imulb
sbb
inc
aam
sub
leave
imul
pop
mov
jmp
cld
fldt
and
mov
outsb
bound
mov
arpl
aaa
fucomi
in
lahf
wbinvd
cmp
and
push
dec
adc
lods
je
fadd
gs
mov
and
jo
outsl
push
into
dec
movsl
inc
loop
mov
sub
jecxz
clc
subb
call
neg
mov
in
adc
sbb
adc
je
jmp
negb
scas
iret
aaa
scas
aas
push
xlat
loop
sbb
movsl
sub
out
aam
out
scas
adc
and
add
lds
rcrb
fbld
in
sbb
or
push
xchg
repnz
outsl
mov
fldt
sub
bound
mov
rclb
adc
ret
sub
sub
cmp
enter
jne
inc
ss
cmp
mov
addr16
into
in
xchg
rorb
adc
lcall
mov
cs
adc
xor
inc
mov
lock
jge
sar
int3
sahf
out
push
inc
loop
jne
data16
lds
jg
int3
iret
mov
pop
add
adc
xchg
add
mov
lea
insb
repz
shrb
mov
js
push
xchg
push
xor
fwait
movsl
test
lcall
pop
xchg
jmp
mov
mov
mov
push
push
addr16
mov
call
movl
push
fiadds
xor
test
adc
fistpll
imul
inc
sbb
hlt
jmp
pop
push
mov
inc
shll
push
fidivl
inc
add
sbb
cwtl
cmp
movsl
add
sbb
and
shr
pop
xor
mov
movsb
addr16
xchg
mov
mov
adc
lret
dec
or
inc
mov
insb
push
movsl
push
jge
inc
mov
mov
sti
pushf
mov
push
mov
stc
in
lock
push
push
lods
cmp
imul
shll
xchg
xor
ret
divl
pop
dec
outsl
adc
inc
outsb
scas
and
and
out
test
pop
es
fs
iret
push
ret
mov
pop
fmulp
adc
add
or
push
cltd
hlt
repz
adc
adc
xchg
dec
or
es
outsl
sbb
aad
ds
lock
sahf
pop
divl
data16
cmp
je
or
cli
push
push
jecxz
xchg
mov
das
cmpl
cwtl
imul
cmp
mov
ficoms
pop
cmp
popa
dec
mov
mov
pop
inc
out
and
in
test
jae
or
outsb
in
xchg
aaa
icebp
sub
dec
adc
imulb
in
leave
popfw
out
out
push
sbb
std
inc
sbb
or
les
xor
add
gs
fwait
pop
pushf
inc
inc
sub
shr
rorb
sbb
add
jge
inc
add
ja
mov
repnz
mov
or
jae
movsl
mov
jg
gs
adc
mov
dec
adc
add
xchg
enter
js
orl
fsubs
repz
cltd
jmp
leave
xchg
lret
pushf
rorb
mov
and
sbb
sbb
and
push
push
adcb
sbb
pop
push
imul
lea
jge
or
cmpsl
inc
jne
add
mov
jbe
ret
cmp
or
aam
cmp
out
push
mov
ljmp
loop
insl
aam
inc
or
stos
mov
mov
push
add
sbb
in
or
je
out
dec
dec
fidivl
push
xchg
scas
or
sub
mov
mov
cltd
or
dec
pop
mov
loopne
dec
pop
orl
shrb
xor
push
out
in
cmp
dec
pop
inc
je
pop
inc
rolb
push
mov
pop
movsl
inc
mov
jl
lods
add
mov
orb
dec
cmp
push
sub
je
fwait
and
in
add
xlat
xor
fs
cltd
sbb
paddd
loopne
imul
nop
jns
mov
mull
push
and
rcr
jg
out
pop
ret
outsb
xor
imul
pop
fistpll
scas
adc
jb
cmpsl
sbb
sub
shr
clc
sbb
xchg
js
fwait
inc
lds
add
jno
and
mov
jg
test
cmp
and
scas
lds
loop
and
sbb
sbb
leave
aaa
out
and
jne
xchg
icebp
pop
jno
push
inc
cmp
xor
jge
and
pushf
daa
jns
ds
pop
and
jmp
addr16
jnp
enter
push
mov
jnp
xchg
cmpsl
inc
stc
pop
mov
inc
shll
xor
add
std
ss
je
push
outsb
shlb
dec
and
mov
and
cmpl
pop
in
pop
xor
dec
mov
ret
xchg
xor
inc
jae
push
jns
cmp
fcmovne
stos
and
adc
dec
dec
mov
cmp
fwait
push
dec
les
test
mov
inc
hlt
push
jl
in
adc
shlb
mov
lods
fucomp
stos
xlat
pop
mov
jg
outsl
shll
xchg
jge
jae
pop
xchg
mov
cmpsb
jmp
push
ret
or
movsl
imul
cmp
xchg
jb
repz
mov
call
pop
pusha
pusha
dec
mov
movlps
out
push
inc
addr16
lahf
jno
jl
sub
mov
push
bound
stos
push
lds
data16
sbb
push
and
into
mov
sbb
scas
jb
xchg
lret
add
out
lahf
jg
scas
out
andl
sbb
push
add
ret
mov
imul
jge
jp
iret
loop
outsl
outsb
adc
adc
scas
lret
mov
and
icebp
sbb
mov
push
pop
mov
mov
mov
mov
jecxz
scas
sub
clc
dec
jp
push
popf
dec
and
mov
sbb
icebp
cld
inc
repnz
dec
rcll
call
shrb
in
out
imul
or
sub
cmpsb
and
mov
test
and
gs
dec
outsl
mov
fldl
mov
sbb
sahf
and
xlat
mov
test
inc
xlat
sub
sbb
push
out
popa
rcl
std
cmp
sbb
negl
sbb
push
test
movsb
jne
pop
mov
gs
loope
cmp
hlt
mov
orb
aad
fists
mov
jl
mov
outsb
not
fildll
cli
push
xor
cmp
jl
add
iret
loopne
sbb
call
mov
mov
jmp
outsl
insb
pop
add
cld
adc
mov
inc
push
push
lods
in
dec
daa
mov
aam
in
shl
in
jae
sub
cmp
int
mov
or
mov
mov
cmpsb
inc
sbb
mov
xchg
xchg
cmp
fwait
cmp
push
and
ret
adc
cmc
mov
push
or
ss
push
inc
and
outsb
in
sub
xor
repnz
or
gs
xlat
inc
shrb
out
mov
push
xchg
adc
in
cmp
push
iret
xor
ret
jg
inc
mov
pusha
aad
sbbl
dec
add
push
sarl
orl
fmull
pop
cld
nop
pop
mov
sbb
push
pmovmskb
lahf
sub
shlb
dec
cmp
cld
push
cwtl
out
je
or
icebp
das
xchg
sub
int3
xchg
xchg
jne
imul
test
or
imul
adc
enter
sbbb
cmp
mov
imul
push
pop
xchg
pushf
in
or
outsb
push
es
rcll
push
imul
xor
aaa
aam
dec
push
clc
orb
dec
loope
xchg
lea
mov
jecxz
rorb
jle
imul
xchg
inc
cmp
mov
mov
add
in
mov
jge
pop
popf
xor
pop
mov
jne
jno
mov
push
sbb
repz
mov
xchg
int
std
sbb
cld
data16
test
mov
mov
dec
into
sbb
xor
cld
sahf
sbb
xchg
in
fsubrs
cmp
dec
clc
pusha
mov
hlt
xchg
pop
inc
pop
testb
xchg
mov
incl
fadds
sbb
fistps
das
xor
sahf
insb
std
insb
mov
push
xor
je
ror
mov
arpl
pop
jl
fwait
mov
adc
scas
insl
out
stc
or
add
fs
and
xor
ljmp
daa
lahf
std
mov
ds
stos
notl
jb
rcl
and
out
jae
inc
ss
jns
test
std
movsl
or
push
rorb
push
mov
sbb
imull
lods
ljmp
imul
stos
fcompl
mov
nop
loop
pop
mov
mov
xor
or
xlat
rorb
xchg
adc
ss
pop
cwtl
cmp
test
and
and
out
inc
ljmp
and
inc
stc
roll
push
test
cmc
cmp
addr16
sbb
mov
sbb
add
lds
das
cmp
or
jne
push
add
loopne
ret
in
ror
jge
push
js
adc
xor
sub
pop
jg
adc
lcall
stc
pop
shlb
je
outsl
and
out
mov
dec
fdivl
and
and
or
cmp
aam
mov
or
pusha
cli
jno
sbb
fstpt
push
inc
addr16
pop
ret
les
rclb
fildl
test
mov
push
aad
call
xchg
and
cmpsb
cs
enter
sbb
test
aaa
pop
fcompl
jne
push
jno
inc
mov
mov
mov
xchg
push
imul
push
insb
test
aas
in
add
xchg
hlt
jns
mov
pop
xchg
mov
data16
lds
mov
dec
out
sbb
movsl
sub
ja
bound
add
call
jbe
or
lock
xchg
sub
and
adcb
push
pop
or
lret
xchg
and
mov
outsl
jecxz
cmp
sbb
xchg
pop
xor
add
mov
xchg
cs
dec
lock
xor
cs
sub
sub
inc
or
insl
outsl
out
push
cli
jmp
mov
sub
mov
pop
xor
xchg
loope
ficomps
push
pop
pusha
mov
pop
cmp
or
mov
ret
outsb
cmpsb
call
xchg
sbb
push
call
mov
dec
mov
loop
fisubs
and
pop
imul
enter
mov
pop
add
adc
sahf
cmp
scas
jb
mov
fdivl
pop
inc
mov
xchg
jb
cld
mov
jle
repnz
sahf
insl
xchg
sbb
xchg
pushf
cld
lcall
ror
and
es
inc
mov
popa
ja
roll
sbbl
int
fsubp
test
adc
mov
pusha
push
cmp
dec
arpl
cmp
ss
adc
out
punpcklbw
pop
dec
sbb
or
push
or
xchg
sub
loope
push
scas
jg
rcl
clc
jbe
icebp
mov
in
xchg
sbb
and
rol
pop
pusha
push
cmp
fadds
aas
mov
ja,pn
imul
jnp
aad
pop
mov
call
jl
pop
or
fdivrs
insl
mov
imul
test
pop
lcall
pop
int3
or
adc
dec
add
add
jae
mov
xchg
aam
cmpsl
aas
xchg
xor
inc
inc
push
sbb
pushf
mov
and
mov
out
sti
jns
xchg
popf
popa
iret
or
jg
push
mov
lds
out
mov
sub
icebp
mov
adc
or
sub
pop
xlat
stos
imull
repnz
loopne
adc
or
enter
lods
movsl
pop
pop
xchg
sbb
xor
pop
insl
sti
jge
cmp
cmp
pusha
out
ljmp
or
pop
sti
call
and
sub
and
xor
and
inc
jns
fstpl
std
and
pop
jge
xchg
mov
mov
inc
ja
inc
sub
dec
adc
leave
mov
sub
cmp
add
cs
inc
test
pop
xchg
iret
lds
jl
popa
ds
scas
ds
cwtl
jge
push
mov
adc
int3
out
pop
xchg
clc
icebp
inc
rcl
pusha
or
adc
add
jl
add
lcall
rclb
xchg
cmp
inc
inc
sbbl
scas
repz
sbb
add
push
xor
insb
add
push
cmc
loopne
gs
mov
lock
or
mov
xlat
dec
jno
shl
mov
xchg
xlat
add
cs
cmpsb
jns
lret
mov
shrb
iret
cmp
insb
xorl
jmp
imul
add
push
rol
out
mull
lret
lahf
pop
and
or
sub
fs
sub
hlt
dec
andl
arpl
adc
sarl
loopne
js
inc
jno
pop
mov
dec
jg
mov
pop
add
dec
jg
mov
or
lahf
ljmp
rcl
push
dec
iret
pop
aad
mov
std
mov
xchg
adc
icebp
dec
cli
shrl
or
pop
add
int
imul
mov
dec
out
into
or
mov
lods
mov
fsubrp
dec
stc
add
enter
adc
push
negl
mov
mov
pop
mov
rcrl
lods
inc
outsb
or
in
pop
mov
add
or
jge
cmp
xlat
or
add
les
dec
pusha
sbb
out
adc
hlt
outsb
add
sub
mov
rcr
push
rclb
mov
push
lds
repnz
xchg
xchg
out
sbb
nop
fisttpll
daa
push
pushf
loop
imul
or
jle
mov
ja
loope
jno
inc
stc
pop
jge
mov
leave
sbb
xor
dec
jne
sahf
mov
popf
cmc
mov
mov
in
sub
mov
das
rorl
sbb
lret
and
mov
and
and
daa
lret
mov
xor
ja
ret
adcb
add
call
dec
adc
insb
or
sub
pop
xor
je
mov
xor
adc
insb
push
fbld
je
aam
insl
fnstcw
ficompl
out
or
or
je
popf
cmp
mov
lock
cmp
mov
xchg
push
popf
in
bswap
insb
jo
icebp
repz
call
rorb
pushf
sbb
mov
and
std
dec
xchg
cmp
or
sub
jmp
out
insl
repnz
cltd
fiaddl
sbb
cmp
fimuls
push
sti
mulps
pop
mov
pop
mov
lahf
push
imul
mov
daa
sub
fiaddl
pop
pop
push
iret
ja
pop
lret
loopne
pushf
das
lods
lret
xchg
dec
inc
mov
and
cmp
inc
sub
test
cld
bound
sub
sub
inc
insb
addps
in
aaa
jnp
leave
mov
jne
adc
mov
xchg
fisubs
add
jne
pop
jecxz
pop
xchg
jle
das
and
inc
pop
dec
xor
mov
push
xor
imul
adc
cltd
outsl
inc
orb
mov
in
rcrl
or
xchg
mov
mov
or
enter
xchg
negl
jb
mov
mov
ja
ret
daa
lahf
sti
and
lahf
test
test
cmp
sub
scas
pop
shr
sub
rclb
cwtl
and
xor
pushf
inc
js
in
add
testb
jmp
jmp
test
stos
loopne
ds
lds
ret
sub
daa
and
out
mov
add
cwtl
cmp
xlat
out
shlb
push
mov
daa
gs
mov
int
scas
mov
out
sarb
xor
xor
jo
dec
js
cwtl
fwait
adc
add
nop
push
pop
inc
push
xor
int3
pop
inc
and
scas
out
push
add
repz
gs
rorl
stos
leave
rcr
inc
xor
sub
jbe
add
xor
lods
sti
and
stos
or
int3
xchg
hlt
push
out
in
rcrl
dec
ds
mov
fcmovb
pop
in
xchg
lods
js
inc
inc
mov
pusha
daa
and
repz
pop
mov
jno
and
adcb
jo
lahf
add
bound
insl
sub
adc
pop
loop
cmp
lods
call
int
aad
sub
data16
lods
pop
cltd
mov
cld
std
pop
or
add
je
or
outsb
into
jge
repnz
and
adc
dec
sbb
gs
xchg
sbb
inc
jmp
in
cwtl
pop
pop
sub
cmpl
mov
mov
add
mov
push
pop
adc
dec
xlat
xchg
mov
jmp
inc
jne
xor
cmp
inc
cmpsb
pop
add
xor
fs
rol
cwtl
cmp
cmc
ret
in
jae
push
addl
push
adc
xchg
dec
cmpl
int
les
cmc
jge
or
mov
out
testl
arpl
xor
mov
xor
mov
shlb
mov
mov
xorps
push
fwait
mov
dec
cmc
incl
pop
divb
ret
cmpsb
ret
push
xchg
lret
dec
repnz
hlt
jbe
in
rorl
rcrb
xchg
pop
inc
loopne
pop
aad
ja
and
mov
xchg
cmc
fsubrl
stc
or
in
sub
lods
pushl
out
xchg
sub
movsl
pop
cmpb
cmpsb
pop
mov
mov
and
rorl
rcl
loopne
dec
insl
mov
adc
xchg
push
xchg
rorb
repz
cmp
and
fcmovnb
les
sbb
xorb
xor
xchg
jmp
dec
mov
frstor
repnz
cmp
lcall
andl
sbb
aad
pusha
cmp
and
addr16
cmpsl
stos
mov
sub
inc
aas
pop
adc
pop
daa
sar
mov
jb
roll
jae
mov
ljmp
les
inc
mov
aas
andb
lds
lahf
adc
sub
pop
jmp
xchg
js
xor
idivb
adc
icebp
in
xchg
rcll
cli
pop
ret
pushf
repnz
or
nop
cpuid
sbb
add
lret
add
push
xchg
mov
mov
aaa
mov
xchg
nop
flds
cs
roll
jecxz
mov
pop
addr16
add
mov
mov
mov
enter
outsb
in
xor
push
hlt
cltd
jbe
dec
mov
mov
insl
inc
push
aaa
mov
and
and
sbb
push
inc
cmp
cmovb
lock
or
pop
arpl
cmpsl
or
popf
rcrl
fnstcw
mov
lahf
lret
push
orb
xor
imul
das
mov
ljmp
dec
and
inc
fstpt
jecxz
xor
test
xchg
roll
xor
scas
push
jnp
pop
imul
mov
sbb
push
xchg
scas
lahf
sub
in
jnp
sbb
ss
mov
das
mov
mov
inc
movsl
pop
fisttps
xor
mov
inc
popf
pushf
pushf
sub
adc
xor
dec
ret
cmpsb
jecxz
pop
inc
cmp
jno
int3
in
lea
pop
xor
mov
into
stc
bound
mov
cltd
je
adc
call
outsl
movsl
push
int3
mov
xchg
inc
sub
dec
push
gs
aaa
xor
out
push
lahf
add
out
push
or
in
mov
ljmp
mov
mov
mov
dec
insl
imul
mov
pop
imul
xchg
mov
mov
fmull
mov
ss
fistps
subl
mulb
andl
xlat
ljmp
jne
cmp
cmpsb
ret
scas
mov
cmp
inc
cld
mov
jb
leave
mov
push
sub
mov
mov
mov
mov
nop
and
sti
scas
dec
stos
and
jge
xchg
add
cli
or
jbe
aaa
pop
movsb
jge
add
stos
scas
inc
pop
scas
test
add
lret
sbb
inc
popf
js
loop
das
mov
pushf
int
add
xchg
xor
jmp
add
xor
push
pop
push
xchg
jg
out
test
jbe
push
add
daa
aam
add
mov
xchg
xlat
insb
jb
jnp
xor
call
sbb
sbb
xor
pop
ret
or
jp
packsswb
push
test
pushf
in
jnp
adc
pop
outsl
inc
mov
test
rcrl
scas
pop
je
or
xchg
mov
iret
inc
push
rcrb
into
push
inc
cmp
push
addb
cmp
sysexit
int
outsb
fdiv
sub
mov
data16
popa
pop
pop
push
stc
cmp
inc
add
stos
stos
and
dec
int
and
cmp
mov
stos
inc
popf
sub
and
repz
mov
dec
test
jmp
sbb
mov
mov
cmp
popa
sbb
shrl
sbb
inc
loop
jbe
clc
pushw
adc
push
lds
stos
cltd
or
lahf
out
cwtl
adc
pusha
mov
les
inc
pop
pop
mov
push
mov
or
sbb
repnz
push
xchg
hlt
mov
into
push
test
adc
pop
mov
mov
loop
xchg
jge
loope
lret
mov
bswap
sbbb
lahf
xor
or
inc
test
insl
bound
movsb
pop
push
pop
js
mov
ror
xchg
jge
push
je
scas
rclb
sub
jmp
ss
cmpsb
and
dec
shlb
cltd
in
xchg
mov
add
jle
mov
insl
mov
pop
insl
scas
jnp
mov
das
cmp
and
filds
cmp
into
push
mov
xchg
sti
mov
mov
dec
popa
adc
das
in
xchg
adc
and
mov
pusha
jl
inc
testl
adc
inc
adc
fmuls
jmp
imul
dec
jg
cmp
xor
xchg
ret
insb
mov
sub
test
push
mov
leave
imul
and
lds
shrb
jbe
testb
negl
out
frstor
shlb
dec
mov
xchg
mov
rclb
pop
xor
cmp
dec
les
xlat
push
dec
sbb
dec
dec
mov
mov
jl
xchg
je
lcall
gs
sub
mov
repz
rcr
js
sarb
out
mov
divl
pop
std
cmpsl
xor
flds
xorl
jp
xor
add
jmp
or
sbb
cld
pop
fdivp
dec
add
fwait
iret
xor
outsl
scas
lock
imulb
lcall
insl
outsb
je
mov
testb
xor
aaa
dec
inc
adcb
dec
mov
ds
cwtl
fcomps
xor
cmp
pop
xchg
daa
mov
ljmp
fcomip
cmp
pop
mov
mov
sarb
repz
cmpsb
xchg
lock
cmpsb
push
inc
jle
pop
hlt
push
subb
imul
mov
xchg
and
mov
xchg
imul
jno
jmp
movb
in
out
mov
loopne
outsb
jo
mov
aaa
jle
or
and
cmp
or
lahf
popf
ror
jmp
ds
xchg
mov
lahf
jne
cltd
in
jl
sarl
mov
pop
mov
lds
push
cmc
ds
lds
cld
inc
out
sahf
repz
and
aad
gs
sub
addl
roll
jle
mov
movsl
xor
inc
inc
cmc
popa
movsl
mov
test
lahf
cs
shlb
stc
aam
mov
paddb
inc
adc
mov
out
xor
rcll
push
fstps
or
and
movups
mov
xchg
mov
pushf
stos
mov
cmp
clc
mov
rorb
lods
popa
je
call
add
cs
mul
aas
pusha
push
or
push
das
inc
repz
cmp
adc
inc
jns
mov
sahf
fbstp
dec
in
test
mov
sub
mov
jp
shll
aaa
mov
sbb
xchg
and
cmp
jle
enter
jmp
sbb
out
cmp
push
inc
add
mov
mov
add
mov
push
jecxz
xchg
mov
mov
adc
inc
mov
push
stc
push
mov
inc
aaa
movsb
in
and
out
cwtl
xor
add
pop
popa
jmp
popa
enter
xchg
add
jg
fildll
jns
xchg
mov
sub
imul
or
outsl
pop
cli
js
inc
scas
loopne
data16
xchg
scas
mov
in
push
sti
out
nop
imul
xor
add
popa
push
jecxz
mov
mov
sbb
dec
mov
pusha
enter
movsb
or
fstpl
mov
out
loopne
clc
jmp
mov
call
sbb
inc
pop
ss
pop
mov
stos
cltd
test
pop
mov
mov
popl
push
mov
dec
call
fdivrl
or
jb
popf
jne
inc
popf
out
mov
ljmp
add
stos
cmpsl
pop
out
icebp
int
shl
movsl
xor
or
in
sub
iret
mov
rolb
xchg
ljmp
push
es
in
xchg
xchg
xchg
inc
mov
push
fs
std
popf
out
add
icebp
jg
repnz
arpl
test
movzbl
test
push
ja
in
stc
filds
push
lock
xchg
cwtl
xorb
push
mov
cwtl
data16
addr16
icebp
mov
pusha
xchg
jecxz
and
xchg
xorl
xor
icebp
aaa
add
xchg
adc
sbb
push
lahf
sbb
dec
fistps
pop
push
ds
loope
mov
out
lcall
xor
xchg
cmpsb
xor
pop
inc
es
mov
and
cltd
xor
lods
or
scas
sub
add
lds
fisttpll
lcall
in
fistpl
xchg
or
ja
outsb
cmp
sbb
or
stos
jp
mov
inc
mov
rorb
gs
sub
and
push
insl
adc
sub
dec
or
leave
sbbb
adc
inc
add
sbb
adcl
inc
stc
mov
mov
xor
sbb
xor
mov
ret
in
arpl
push
int3
jbe
sahf
ss
xor
xor
xor
sub
and
sbb
sbb
adc
das
pop
push
sti
mov
stc
jo
xchg
mov
cmpl
les
xor
daa
arpl
ss
fwait
je
or
dec
xchg
mov
pop
mov
daa
dec
repnz
or
aad
or
and
imul
mov
jecxz
or
sbb
loope
or
dec
hlt
and
dec
and
cmp
pusha
dec
and
jb
fwait
ret
scas
scas
pop
test
rcll
mov
xchg
xor
insl
add
movsb
cmpsb
cwtl
ja
xchg
dec
mov
mov
xlat
sti
inc
sbb
dec
je
or
mov
pop
pop
ficoms
and
inc
popa
push
jge
jnp
data16
lock
add
cmpb
mov
loop
faddl
nop
mov
enter
mov
jl
dec
xchg
rclb
and
out
popw
inc
dec
insb
inc
fisttps
dec
jo
bound
and
adc
and
test
jmp
jge
mov
sbb
sbb
dec
fstpt
les
imul
dec
jl
mov
into
popf
rclb
mov
pop
push
cwtl
stc
imul
shll
cltd
sbb
loop
ret
dec
cmp
and
std
rorb
rcrl
xchg
add
inc
jge
add
adc
fwait
cltd
xchg
inc
shrl
jno
push
movsl
jecxz
insl
pusha
or
or
dec
mov
stos
out
or
cmc
cltd
push
inc
roll
adc
xor
out
inc
lret
cmpl
xchg
mov
cmc
sub
inc
xchg
add
xor
mov
movsb
push
daa
jo
adc
shll
jle
stos
lock
mul
dec
adc
leave
or
xor
and
fstl
xor
mov
jg
lret
aas
aaa
sbb
xchg
push
repz
repz
dec
mov
fidivrs
push
shlb
sub
or
sbb
mov
ret
jnp
loop
mov
mov
clc
out
dec
frstor
fstpl
subb
cmpsb
repnz
outsl
dec
xchg
sbb
jmp
pop
lret
inc
stc
pop
cmp
pushf
mov
inc
sub
sbb
xlat
clc
pop
mov
stos
mov
je
or
mov
mov
fiaddl
xchg
mov
pop
add
aas
imul
sub
hlt
mov
cs
insl
aaa
pop
cmp
mov
push
sbb
cmp
mov
dec
and
jnp
loop
inc
xlat
cmpsl
loopne
rcll
jo
xchg
mov
dec
rorb
dec
icebp
sub
mov
jecxz
add
mov
mov
shll
inc
pop
pusha
dec
push
loopnew
in
dec
xor
imul
mov
andl
int
inc
movsb
jbe
xchg
test
pop
pop
rcrl
es
rorl
call
rorb
jne
popa
nop
adc
gs
mov
cwtl
mov
jno
or
fidivrl
int
cmovno
mov
sbb
lret
mov
sbb
xor
inc
repz
or
inc
dec
mov
adc
aam
mov
out
xchg
imul
sbb
adc
xchg
lea
mov
in
sbb
lods
push
jmp
outsl
call
mov
jne
scas
roll
push
dec
js
adc
jg
sub
gs
dec
push
cmp
aaa
mov
inc
daa
fucomi
dec
aaa
inc
inc
sbb
outsl
sbb
aaa
sti
sbb
cmpl
mov
lds
pop
in
scas
ljmp
in
push
pop
lea
mov
lock
adc
mov
jg
push
repnz
repz
cmp
ljmp
pop
cmp
jg
cmp
push
subb
cmp
pop
mov
mov
jns
test
pop
jo
dec
push
pop
push
test
jmp
mov
pop
mov
repnz
push
inc
loop
in
js
jns
shll
std
xchg
push
and
cli
jbe
ss
sbbb
add
sbb
daa
inc
std
add
adc
mov
je
ljmp
into
or
lcall
mov
fsubl
fildll
or
nop
jl
lret
mov
imul
xor
mov
das
dec
xor
sub
push
cs
fwait
push
adc
push
repz
mov
popa
jge
fnstsw
jg
push
js
jp
or
into
adc
jle
in
cmp
cmp
and
seto
sub
xor
aas
test
out
les
mov
in
mov
mull
jno
ret
sub
stos
xor
cmp
call
movsb
jbe
adcb
ss
inc
xchg
fidivrs
inc
jg
jg
mov
mov
and
jne
mov
inc
test
scas
ds
jecxz
shl
out
sbbl
data16
cmp
cmp
fimull
xor
sbb
jecxz
andl
jbe
jmp
imul
push
call
insb
xchg
stos
insl
fisttpll
testb
in
popa
ds
ds
pop
dec
jp
inc
fcomp
imul
add
push
push
mov
mov
cmpsb
lcall
mov
jnp
test
in
in
push
jo
sbb
cmp
gs
sub
mov
in
mov
mov
pop
add
cs
rcrl
shrb
and
sbb
mov
hlt
sbb
scas
and
sbb
pop
lret
add
cmp
pop
out
int
jb
les
sub
lret
jmp
or
mov
adc
rcrl
pop
mov
hlt
cmp
in
mov
pop
cmp
std
cmpsl
mov
fadd
jae
ret
fwait
pop
mov
add
mov
daa
mov
lea
es
or
jno
std
jge
lods
rclb
mov
mov
into
sahf
jb
add
xchg
cmp
push
pop
adc
jne
jge
xor
fistpl
clts
jl
es
mov
popa
pmaddwd
dec
repnz
jne
test
pushf
popf
jnp
push
sub
shr
add
sub
negl
clc
dec
jae
in
testl
sub
lret
in
xor
sti
push
repz
outsl
imul
cli
pop
int3
outsl
xor
add
cmp
cmpsb
push
mov
in
shll
fs
and
sbb
push
addl
imul
shll
fisubs
jmp
mov
in
das
mov
sti
adc
cmp
das
fimull
fwait
dec
pop
ret
cld
int
addr16
stos
or
sbb
es
xchg
sub
lods
pop
sub
jbe
mov
jge
dec
inc
xor
pop
aad
mov
call
sub
adc
adc
fs
sbb
cwtl
jp
les
mov
dec
or
and
or
cmp
and
mov
inc
xchg
and
mov
sub
xor
push
or
ja
aad
and
out
add
sbb
pusha
lcall
lea
xchg
popa
stc
imul
sbb
xchg
mov
or
es
push
scas
push
fucomi
mov
xlat
add
loope
push
mov
std
fimull
inc
divb
repz
xchg
inc
lock
aas
inc
adc
cmp
push
addr16
sub
sbb
mov
cwtl
rcrl
add
sti
mov
movsb
push
mov
lods
jnp
and
cwtl
pop
sbb
add
movsl
lods
adc
in
movsb
out
das
pop
repz
mov
and
ret
fs
adc
lret
mov
test
push
sub
ret
push
or
jmp
mov
xor
ljmp
ret
jecxz
xchg
outsb
int3
inc
fnstenv
sub
lods
jmp
dec
add
xchg
cld
inc
jae
xor
inc
cmp
jo
mov
mov
fisubrl
addb
mov
mov
rorb
in
mov
pop
jmp
xor
jns
leave
add
mov
stc
push
adc
mov
and
cmpsl
sub
pop
cmp
pop
cmpsl
flds
lods
push
mov
cmpsb
test
cmovnp
fcomps
ljmp
cmpsl
pusha
loopne
push
xor
fwait
in
inc
jl
popl
shl
popa
xchg
sub
cmp
lea
inc
or
jo
pop
ror
push
stc
sti
int
sub
cltd
and
push
mov
js
sti
hlt
or
sarb
lcall
movsl
add
push
out
and
pop
repz
leave
rorl
test
jmp
ja
xchg
mov
push
pop
addr16
push
fwait
pop
lahf
sbb
sbb
cmp
adc
insb
mov
xor
jmp
xor
or
mov
icebp
fcomi
dec
ds
cmp
mov
cli
ljmp
and
lds
or
mov
pushf
lcall
inc
mov
sbb
push
push
jecxz
push
hlt
int3
mov
cmp
ret
mull
push
outsb
sbb
push
jecxz
mov
idiv
jmp
std
adc
insb
dec
faddp
add
pop
test
outsb
in
or
iret
out
mov
cld
fwait
sub
fsubs
scas
loop
jecxz
jns
add
ljmp
data16
insl
jle
push
jp
mov
loopne
icebp
arpl
push
sbb
cs
jo
out
xchg
shl
pop
or
jo
or
addr16
out
ret
add
inc
daa
mov
mov
pop
xor
ja
and
push
xchg
out
push
lcall
cmpsb
idiv
push
and
and
mov
or
mov
dec
mov
xlat
mov
xchg
ja
cmp
pop
cmpsb
or
mov
inc
cmp
ficompl
inc
cmp
test
icebp
sarl
jecxz
cmp
lahf
cmpl
pop
sti
test
sbb
andl
lret
sub
pop
sti
lock
or
sbb
xor
arpl
dec
add
push
dec
pop
cmp
cs
mov
movsl
mov
iret
sub
sub
mov
sbb
sub
mov
sbb
inc
icebp
test
dec
pop
jo
mov
pop
dec
lret
cmp
push
push
sub
jnp
add
push
lock
sub
and
mov
lahf
call
loopne
xor
mov
xchg
fdivr
stc
repz
iret
xchg
shlb
ret
dec
add
push
lods
jl,pn
cmp
cltd
mov
pop
jb
insl
push
stc
pop
mov
mull
jmp
sub
adc
xlat
xchg
pop
push
in
loop
fs
mov
imul
push
xor
pop
cmpsb
repz
and
dec
mov
imulb
sbb
dec
jno
mov
mov
icebp
mov
stos
imul
addr16
jno
dec
mov
mov
pop
lods
xor
test
aas
inc
cmpsl
scas
mov
loop
gs
repnz
jo
mov
xchg
push
int
jo
movsb
sub
rorl
pop
rclb
pop
mov
outsb
mov
imul
inc
xor
aam
or
or
lret
mov
pop
es
mov
xor
movsl
push
xchg
xlat
xchg
ljmp
fst
into
je
pop
icebp
lret
sbb
adc
outsb
mov
jle
inc
inc
sub
gs
mov
xlat
stc
xchg
iret
faddl
test
int3
pop
xchg
xchg
gs
mov
repz
insl
xor
adc
negb
mov
adc
mov
sbb
lods
aam
pop
sbb
fists
xor
or
mov
xor
inc
pop
and
scas
xchg
outsb
fnstsw
sbb
sbb
bound
add
mov
dec
inc
adc
lahf
or
scas
shr
incl
jb
aaa
clc
jno
dec
sbb
mov
xchg
xchg
lods
ds
testl
jcxz
inc
pusha
push
loope
jmp
and
ret
idiv
test
aaa
shll
sbb
fidivl
outsb
xor
dec
and
mov
out
inc
push
mov
rclb
add
mov
test
pop
mov
dec
or
sub
gs
xlat
clc
inc
enter
stc
js
sub
test
ja
cmp
jp
cltd
sahf
popf
or
mov
xor
adc
cwtl
push
push
sti
loope
mov
pop
and
stos
test
popa
jb
imul
sarl
jecxz
push
jp
inc
stos
clc
lcall
jmp
inc
inc
sub
mov
xchg
mov
into
push
mov
xor
lods
push
cmp
lds
cmc
jp
ja
mov
xchg
cmp
pushf
and
sub
dec
push
lock
frstor
inc
adc
add
sub
jecxz
xor
mov
fwait
cmp
jg
jb
push
pop
ljmp
and
and
test
lock
es
das
cmpb
mov
mov
pop
xchg
inc
dec
sub
jno
inc
ret
jo
inc
or
jb
popf
jge
push
stc
shl
loope
dec
mov
movl
in
xlat
sbb
add
jbe
pop
xchg
sub
ret
mov
hlt
ljmp
add
xchg
sbb
bound
xor
pop
lahf
push
leave
bound
lret
inc
insb
outsl
sbb
adc
mov
adc
sar
jne
and
out
push
and
lret
clc
std
push
scas
lock
inc
and
stos
or
pop
mov
outsb
mov
jbe
orl
pop
bound
sub
cmp
insl
xor
jle
aaa
fstpl
hlt
fs
in
inc
sub
sub
sub
xor
xchg
add
xchg
mov
dec
mov
movsb
xor
inc
xlat
ljmp
mov
xchg
or
fisubrl
jo
iret
stc
sbb
rorb
mov
js
push
popa
add
push
mov
push
mov
mov
cltd
addl
clc
adc
cwtl
xchg
jecxz
adcb
or
sub
pop
jo
mov
add
mov
in
scas
fbstp
daa
and
mov
int
fimuls
push
outsl
jo
sub
and
push
xchg
mov
or
add
bound
loope
mov
pop
movb
sbb
mov
test
es
cmc
pop
adc
sahf
aaa
adc
mov
aas
orl
push
cmpsb
xchg
push
scas
or
mov
or
lret
xchg
inc
pop
inc
inc
mov
int3
mov
mov
lea
insl
popa
repz
imul
cltd
sbb
sub
pop
add
cmp
in
ljmp
cld
fstps
scas
mov
ret
ss
push
cmp
arpl
cli
xchg
setge
imul
inc
pop
mov
jbe
xchg
ljmp
cmp
inc
mov
mov
test
int3
sbb
insl
add
rclb
stos
mov
divb
adc
adc
cld
push
sbb
xchg
pusha
sub
movsl
xchg
inc
lret
jb
pop
cld
scas
sbb
push
adc
subl
outsb
cmp
sub
jl
or
jo
insl
sbb
loop
rclb
inc
outsb
sub
push
add
aaa
fnstsw
insb
dec
mov
push
sti
in
dec
loopne
pusha
imul
xchg
xchg
inc
fs
mov
sbb
ja
aas
aas
fs
mov
rorb
jnp
imul
call
push
mov
mov
aam
sti
aas
mov
sahf
les
ret
ss
inc
lret
call
jle
test
jecxz
cmpsb
insb
mov
iret
mov
and
lock
out
dec
sbb
or
stos
movsl
cmp
xorl
push
cmp
test
enter
adc
cmpsl
mov
adc
std
or
cwtl
nop
iret
jp
ds
cmp
adc
push
or
adc
jns
roll
iret
sbb
jmp
cli
pop
push
daa
jnp
popf
inc
xchg
sbb
pop
in
leave
inc
push
outsl
lret
stos
mov
in
sbb
lods
aaa
movsl
fst
loopne
loopw
pop
call
cwtl
or
dec
mov
cli
repnz
mov
mov
xchg
push
sar
cmpb
push
in
mov
cltd
mov
repnz
orl
movsb
pusha
mov
mov
filds
lret
adc
lods
insl
sbb
out
aam
pushf
aad
mov
test
popf
stos
push
push
and
xchg
orl
push
mov
scas
out
scas
imull
insb
lahf
dec
fidivl
stos
rcrb
add
and
inc
mov
rcrl
sub
ss
xchg
dec
cmp
push
test
sub
rdmsr
cwtl
cs
cli
jb
xor
lods
xchg
outsb
pop
fwait
lcall
jmp
push
mov
call
mov
sti
push
les
pop
hlt
jbe
inc
sub
mov
mov
inc
loope
inc
lea
lret
out
js
mov
lock
add
push
stos
inc
repz
loope
push
mov
push
lock
je
out
jo
es
mov
push
xlat
jb
out
jnp
push
pop
in
fistl
insb
dec
jge
mov
loope
inc
sbb
mov
cmc
jp
mov
cmp
shlb
jg
sub
dec
mov
mov
or
movsb
rorl
divl
or
xchg
icebp
out
dec
sub
out
pop
xor
cmp
pusha
adc
push
adcb
insb
adc
test
ret
and
adc
out
fcom
cs
inc
cmpsl
rcrb
sub
fildll
add
sarl
jmp
adc
rorl
mov
mov
imul
cmp
scas
add
jg
add
cmp
add
adc
not
dec
fstl
aad
jmp
loopne
jl
ret
pop
xchg
mov
cmp
fcompl
or
mov
jmp
and
cld
out
mov
inc
xchg
into
jae
push
mov
mov
dec
cmc
push
addr16
aad
je
imul
mov
cwtl
lret
or
dec
lds
pop
mov
insb
mov
sti
pop
out
or
push
xchg
cmpsb
fistpll
xchg
cmpsb
xor
dec
lahf
dec
jo
inc
in
push
and
cmp
mov
shll
mov
popf
pop
and
aad
add
pop
xor
inc
scas
push
mov
shll
rorb
and
xor
jle
rolb
inc
ss
cli
ret
add
ja
cld
cmp
xchg
cmp
inc
jns
fsubrs
and
add
cmp
ret
shlb
imul
and
sbb
jbe
movsb
sub
les
lock
fdivr
inc
mov
lods
pop
lret
cmp
xor
xlat
sub
enter
cmpsb
inc
rolb
xorl
pushl
push
sbb
mov
ja
negb
shll
enter
clc
adc
pop
sub
mov
jl
adc
mov
adc
cmp
cmp
xchg
adc
clc
push
mov
add
cmp
push
test
inc
sub
xchg
add
aaa
adc
fsubs
cmp
push
mov
and
mov
add
sti
xor
sbb
pop
out
out
lock
push
xor
inc
insl
jg
addl
sub
fwait
arpl
xor
movsl
or
add
sbb
add
enter
fs
sub
bound
int
cmp
jo
notl
and
hlt
mov
rcll
inc
pop
mov
dec
frstor
xor
and
cmp
loopne
push
aaa
rcrb
dec
movsl
mov
pusha
push
stos
lret
lea
mov
inc
xchg
lret
repnz
out
imul
mov
cmp
in
adc
int3
mov
out
sub
and
clc
dec
pop
ret
mov
scas
clc
push
xchg
iret
lldt
imul
popf
icebp
movsl
push
sub
scas
inc
jae
pushf
cld
push
fwait
and
movb
pop
stos
ljmp
rclb
xchg
arpl
idivb
cmc
dec
shlb
pop
mov
es
out
and
inc
xchg
mov
mov
xchg
sbb
or
in
sahf
sbb
dec
stos
fcoml
lods
and
or
lods
sub
lods
pop
imul
mov
jnp
push
mov
add
fmuls
sub
bound
les
js
mov
cwtl
into
ret
clc
mov
lret
subl
cmpsl
xchg
dec
jl
inc
lret
jp
adcb
xchg
and
lret
add
push
ret
pop
jo
loope
xchg
add
mov
pushf
cli
xchg
xchg
inc
fcomps
push
mov
xchg
das
jl
lahf
fmuls
add
sub
jns
mov
addr16
dec
loop
repnz
jnp
inc
sahf
jg
mov
mov
roll
mov
pop
or
insb
shll
sub
mov
fwait
scas
sahf
adc
div
test
std
push
adc
das
aas
pusha
fisttps
mov
sub
ret
jecxz
sub
test
and
jb
xchg
jg
aad
lahf
jecxz
mov
and
icebp
jmp
test
das
out
mov
pop
sub
pop
xor
pushf
lods
int3
hlt
sbb
xchg
int3
cmpsl
movsl
fdivs
cmpsb
xchg
inc
mov
clc
fistpl
mov
lds
dec
shr
insl
xor
mov
mov
sbb
sbb
inc
sbb
push
pop
sahf
rorl
pop
xchg
jl
int
fnsave
sub
std
scas
lds
sbb
mull
ljmp
cli
hlt
outsl
cli
pop
repnz
jl
adc
xchg
ljmp
sub
jb
xchg
jecxz
addr16
cmp
sub
mov
cli
ljmp
sbb
dec
cmp
pusha
lcall
test
jno
mov
push
xor
sub
push
arpl
xorb
pop
ljmp
pop
push
mov
test
stos
divb
imul
test
jle
cmp
repnz
cli
mov
pushf
fisubrl
fcomi
pop
mov
jle
mov
cmp
mov
into
lock
shll
push
pop
add
sbb
test
add
or
xchg
xor
xchg
scas
mov
jns
jle
mov
pop
mov
cmpl
adc
test
sbb
add
mul
cmc
out
scas
leave
or
imul
dec
iret
inc
sbb
or
fwait
je
inc
loopne
and
adc
lock
andl
mov
push
cmp
adc
xchg
mov
and
std
inc
aad
adc
sub
push
lret
out
push
sbb
insl
sub
and
sbb
lret
jl
jecxz
cmp
adc
pop
imul
mov
lock
pusha
dec
leave
pushf
pop
in
pop
jo
dec
jae
int
adc
push
in
xchg
shll
mov
das
xor
jge
cli
or
xchg
aad
add
dec
inc
rcr
int
add
enter
imull
sub
xchg
push
sub
pop
lea
sbb
es
fldenv
xor
cmp
mov
sub
int3
out
push
lahf
inc
pop
int
adc
sbb
mov
xchg
in
les
rorb
pop
je
inc
in
icebp
pop
out
jo
push
stos
xlat
or
mov
popl
fwait
lcall
fs
inc
push
mov
push
ret
xchg
adc
into
imul
outsb
mov
cmp
dec
push
push
ja
and
fcmovnu
leave
add
fstpl
push
cmpl
mov
xchg
mov
lret
mov
push
or
arpl
mov
nop
sbb
mov
xchg
jmp
stos
fiadds
inc
jp
add
or
lret
sub
cwtl
push
inc
sbb
dec
sbb
jae
cli
outsl
in
dec
lods
cmc
test
mov
fldenv
mull
fstpl
cmp
lods
out
stos
out
mov
out
int
cmp
add
test
inc
pop
dec
jbe
cmp
push
mov
mov
mov
into
mov
push
xchg
pusha
jb
mov
push
leave
mov
outsl
pop
rcl
mov
lret
scas
ds
cltd
sub
pop
sub
xchg
jbe
lcall
and
lods
into
mov
mov
mov
xor
add
mov
pop
xchg
jno
lds
into
out
mov
mov
loope
mov
stos
xor
adc
dec
jle
les
lret
shrb
int3
inc
popl
xchg
push
pop
and
push
xchg
cli
adc
andb
xchg
jecxz
inc
mov
or
inc
cmp
mov
dec
outsl
lcall
lock
sub
adc
sbb
xchg
insb
sbb
je
or
arpl
jge
stc
out
gs
pop
loopne
loop
pop
jne
jmp
lahf
jno
mov
sub
mov
scas
push
aam
mov
cmp
jecxz
lods
xor
or
aad
sub
out
push
daa
lcall
andb
sahf
std
mov
jne
not
addr16
clc
repz
clc
push
std
jo
cwtl
xchg
das
stos
lcall
or
xchg
addr16
or
xchg
ror
jecxz
insb
inc
inc
popa
sti
inc
adc
test
cmc
mov
out
mov
sti
push
das
cli
paddq
cmp
xchg
pop
std
sbb
mov
in
jae
nop
fwait
lock
fmuls
mov
arpl
daa
mov
pop
mov
adc
lods
std
movsl
test
mov
test
jae
cli
xor
aad
mov
adc
in
loop
imul
call
icebp
pop
out
movsb
out
arpl
insl
push
repnz
dec
or
ljmp
add
std
popa
jp
xchg
daa
jp
mov
scas
mov
mov
lea
push
sbb
inc
and
sarl
test
mov
mov
xor
addr16
sti
popa
outsl
in
arpl
adc
jb
inc
or
test
ret
ljmp
jnp
das
shlb
outsl
lods
xchg
roll
repz
mov
cmpsb
dec
fisubs
stos
cltd
cmpl
icebp
mov
xor
into
xchg
scas
add
filds
adc
fistpl
mull
ja
movsl
loope
loop
cmp
add
and
cmp
loopne
pop
mov
push
pop
cmp
cltd
rolb
in
inc
bound
push
pop
jmp
mov
mov
out
fcmovb
mov
push
rol
jmp
jge
outsl
sub
push
jae
jmp
dec
lods
push
lcall
out
lahf
leave
add
out
in
insl
int
pop
les
fisttpll
out
pop
lahf
dec
xchg
mov
xchg
jp
ja
push
fwait
in
jp
xchg
xor
xchg
xor
dec
loope
mov
imul
imul
subl
test
mov
lahf
pop
repnz
test
mov
popf
or
test
fnstcw
aaa
mov
test
jae
xchg
movntq
es
rclb
and
addr16
lahf
pushf
gs
adc
cmpl
es
and
sarb
pop
outsb
fwait
inc
jb
aad
movsl
xor
mov
mov
sub
jns
jmp
out
jo
dec
or
push
jge
cli
mov
pop
out
icebp
mov
and
fdivl
dec
outsl
mov
inc
hlt
int3
mov
sarl
sbb
sub
ljmp
popa
outsb
lcall
arpl
imul
subb
pop
xchg
cmp
aam
adc
enter
inc
dec
jno
sub
pushf
fimull
mov
fcompl
mov
jns
ret
shlb
jecxz
inc
and
xor
cmp
out
aad
dec
adc
in
push
mov
mov
mov
lcall
add
in
popf
and
arpl
int
push
int
cmp
mov
fists
xchg
pushf
out
jne
scas
lods
inc
je
addr16
mov
adc
inc
enter
add
int
and
inc
stc
push
push
and
inc
scas
xchg
add
sbb
js
addr16
add
shll
test
xchg
out
mov
cwtl
jge
cmp
and
xor
leave
adc
ljmp
cmp
nop
sub
mov
add
xor
jle
lds
xchg
sbb
popf
mov
push
fldcw
sub
jne
pop
lahf
lret
jns
dec
jmp
dec
pop
mov
mov
lds
cli
or
jmp
rorl
sub
and
add
pop
cltd
lods
imul
mov
inc
lods
xchg
loop
sub
call
lods
in
js
adc
fstp
and
or
pop
pop
push
sbb
or
or
adc
fsub
scas
imul
orb
jmp
les
push
push
in
jne
mov
les
or
mov
aas
mov
outsb
fdivs
es
daa
out
add
push
arpl
add
cltd
call
ljmp
mov
lods
xchg
pop
pop
aam
clc
punpcklwd
dec
lahf
inc
fwait
push
aas
add
outsl
lcall
and
jecxz
dec
ljmp
cmp
jmp
add
sahf
sub
mov
push
xor
lret
sub
or
push
imul
sbb
andl
std
push
shll
jl
lahf
lods
in
rclb
pop
pop
repz
mov
iret
cmp
mov
movl
mov
mov
dec
inc
sti
aas
lds
sbb
cmpsl
jmp
in
loopne
mov
xor
push
jb
jbe
xchg
dec
mov
adc
cwtl
cmp
xor
aad
inc
mov
lcall
out
adc
imul
fidivrs
xor
repnz
pop
ret
push
lcall
mov
inc
stos
mov
daa
mov
xchg
adc
push
xchg
xchg
popf
scas
dec
faddl
in
pushf
dec
out
js
out
push
mov
push
xor
push
rorb
dec
jp
cmc
movsl
inc
xor
fwait
and
out
mov
dec
add
clc
fldcw
aas
jno
outsl
insb
sub
mov
mov
clc
xor
xchg
outsb
call
jne
xchg
mov
cmc
xchg
out
fcomps
push
mov
out
jl
in
aam
loop
xchg
ret
or
int3
rolb
lcall
or
add
sahf
repnz
dec
data16
bound
fxch
cmp
lea
in
jns
pop
pop
loope
lcall
fcom
adc
jb
mov
shll
mov
je
loopne
mov
pusha
enter
outsl
nop
dec
in
sub
add
xchg
xor
outsl
iret
stc
push
inc
lea
mov
xlat
repnz
jns
lea
jnp
std
inc
mov
ret
lret
pop
add
xchg
imul
rcrb
cmp
cmp
int3
dec
sbb
ss
push
mov
add
int
dec
jle
pop
pop
ss
aam
cwtl
jne
mov
cli
test
cmpsb
test
xor
stos
ljmp
pop
fmull
fwait
iret
in
shrl
andb
fs
jg
xor
xchg
sbb
ret
dec
sub
jnp
push
mov
and
out
lods
mov
or
and
dec
gs
rcll
sbb
cmp
cmp
xor
insl
ret
bound
dec
inc
adcb
mov
dec
test
out
mov
sub
dec
bnd
push
int3
sbb
inc
jmp
inc
mov
imul
sub
jl
dec
jg
sahf
push
xor
jnp
xchg
int3
loop
or
push
xchg
shr
mov
sbb
xor
mov
pop
and
mov
push
mov
inc
outsb
.byte
sbb
adc
xor
nop
add
add
sarb
mov
adc
xchg
sahf
pop
idivb
cld
insl
and
mov
mov
out
and
clc
pop
out
addl
xchg
cmp
ret
jge
mov
outsb
movsb
iret
mov
push
aad
xchg
stc
xchg
sub
adc
mov
mov
push
lods
clc
or
loope
mov
adc
push
js
sub
jp
mov
pmaxub
in
ret
lds
add
sub
inc
imul
and
xchg
repz
add
xchg
sub
cmp
ds
jnp
sahf
and
and
jbe
in
testl
adc
je
push
sar
data16
xchg
cmp
in
jl
or
lret
fiaddl
fs
sbb
xlat
jb
sub
adc
test
inc
add
addr16
jecxz
shlb
cmp
fxch
nop
cwtl
pushf
ficoml
xor
mov
push
adc
jecxz
lcall
mov
xor
jg
xchg
lock
lret
mov
fsubp
cmp
lock
insl
pop
test
scas
clc
notb
xchg
mov
addr16
mov
test
xchg
mov
sub
jmp
test
push
push
out
cmp
adc
xchg
fcmovnb
sbb
mov
mov
add
scas
mov
outsb
das
divb
and
add
cmp
lret
inc
sarb
in
pop
data16
les
dec
jecxz
clc
ljmp
sub
sub
movsb
iret
xchg
mov
mov
cli
sub
stos
cmp
sahf
pop
jl
inc
lods
add
pop
sbb
stc
add
add
adc
test
dec
mov
ds
icebp
mov
add
add
pop
lret
add
add
add
push
add
add
addb
add
pusha
add
addb
add
rolb
orb
add
add
add
addb
adcb
add
cwtl
add
addb
add
pop
lret
add
add
add
add
mov
add
addb
add
pop
lret
add
add
add
add
add
add
enter
add
add
loopne
add
pop
lret
add
add
add
push
add
pop
add
clc
add
adc
add
adc
add
sub
add
inc
add
adc
add
pop
add
adc
add
jo
add
pop
lret
add
add
add
push
add
add
add
add
add
add
add
add
add
add
adcb
add
add
adcb
add
add
addb
add
pop
lret
add
add
push
add
add
add
andb
add
dec
add
add
add
fiaddl
add
out
push
add
incb
add
sbb
add
cmp
add
inc
pop
add
pop
pop
add
jb
add
jle
add
mov
add
add
add
pop
lret
add
add
add
add
mov
add
addb
add
pop
lret
add
add
add
add
add
add
addb
add
add
pop
lret
add
add
add
add
add
add
cwtl
add
add
add
add
lret
add
add
add
add
add
add
test
add
add
add
pop
lret
add
add
add
add
add
add
mov
add
add
lret
add
add
add
add
add
add
enter
add
add
pop
lret
add
add
add
add
add
add
fadds
add
add
add
lret
add
add
add
add
add
add
call
add
add
lret
add
add
add
add
add
add
clc
add
add
add
add
lret
add
add
add
add
add
add
or
add
pop
lret
add
add
add
add
add
add
sbb
add
pop
lret
add
add
add
add
add
add
sub
add
pop
lret
add
add
add
add
add
add
cmp
add
pop
lret
add
add
add
add
add
add
dec
add
add
pop
lret
add
add
add
add
add
add
pop
add
add
pop
lret
add
add
add
add
add
add
push
add
add
lret
add
add
add
add
add
add
js
add
add
add
pop
lret
add
add
add
add
or
add
add
add
lret
add
add
add
add
or
add
add
add
lret
add
add
add
add
or
add
add
add
lret
add
add
add
add
or
add
add
add
lret
add
add
add
add
or
add
add
add
pop
lret
add
add
add
add
or
add
add
add
pop
lret
add
add
add
add
or
add
add
add
pop
lret
add
add
add
add
or
add
add
add
pop
lret
add
add
add
add
or
add
push
add
add
add
pop
lret
add
add
add
add
or
add
push
add
add
add
pop
lret
add
add
add
add
or
add
push
add
add
add
pop
lret
add
add
add
add
or
add
push
add
add
add
pop
lret
add
add
add
add
or
add
add
add
add
pop
lret
add
add
add
add
or
add
add
add
add
pop
lret
add
add
add
add
add
add
push
add
add
lret
add
add
add
add
add
add
js
add
mov
add
in
add
add
add
and
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
or
add
add
add
add
push
add
add
add
add
add
add
add
or
add
in
add
add
add
orb
add
add
add
add
add
push
add
faddl
add
in
add
add
add
enter
aam
add
in
add
add
add
pushf
adc
add
add
add
add
add
add
adc
add
add
add
add
pushf
adc
add
add
add
add
add
add
in
add
add
add
push
pop
add
mov
add
add
add
add
add
xor
add
in
add
add
add
inc
sbb
add
add
add
add
add
add
add
add
insb
mov
add
add
add
mov
pop
add
add
in
add
add
add
mov
add
add
add
add
add
add
mov
add
in
add
add
add
in
pop
add
add
add
add
add
add
add
mov
add
in
add
add
add
lock
add
in
add
add
add
clc
mov
add
in
add
add
add
cld
mov
add
in
add
add
add
add
pop
add
add
in
add
add
add
or
add
in
add
add
add
or
pop
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
fldl
add
add
in
add
add
add
add
inc
add
dec
add
add
inc
add
push
add
dec
add
add
inc
add
dec
add
inc
add
add
pop
add
add
inc
add
add
push
add
add
dec
add
add
dec
add
inc
add
or
inc
add
dec
add
push
add
dec
add
inc
add
add
add
inc
add
push
add
or
add
dec
add
dec
add
push
add
push
add
inc
add
push
add
dec
add
push
add
push
add
push
add
dec
add
push
add
dec
add
add
inc
add
dec
add
push
add
add
push
add
push
add
dec
add
push
add
dec
add
add
dec
add
push
add
dec
add
inc
add
push
add
add
add
pop
add
push
add
dec
add
push
add
add
push
add
push
add
dec
add
add
cmp
xor
sbb
mov
mov
int3
or
sbb
xchg
aaa
sarb
and
je
push
mov
scas
sub
dec
mov
out
out
sbb
in
sub
cli
and
cli
jmp
mov
pop
sahf
dec
push
stos
test
and
outsb
xchg
outsb
std
cwtl
push
enter
movsl
inc
jae
and
out
enter
fs
dec
dec
push
jmp
mov
push
mov
jecxz
roll
out
pop
xchg
jno
test
push
jle
dec
adc
aad
dec
icebp
jo
pop
ret
cmp
push
push
or
mov
test
xlat
inc
xlat
adcl
ljmp
sbb
repnz
movsb
je
pop
pop
or
mov
out
lods
mov
mov
aas
sub
cltd
shrl
dec
mov
mov
fs
fwait
jg
jo
dec
mov
faddl
sub
pop
mov
pop
cmp
daa
jecxz
sub
enter
or
fidivs
imul
push
andb
js
movsl
lock
call
pop
sti
rcl
mov
testb
ss
es
jg
es
fnstenv
lret
mov
xchg
push
mov
loopne
cwtl
stos
add
and
lret
rol
rcr
repnz
in
pop
repz
lea
cli
add
lea
push
pusha
dec
cli
add
adc
cwtl
xchg
dec
dec
cmpsl
mov
lcall
push
pop
cmc
ljmp
adc
arpl
xor
jp
sbbb
pop
aam
sub
fs
sbb
divb
and
inc
pop
and
jnp
cmp
sbb
sahf
xor
loope
lret
in
sbb
test
in
leave
xor
lret
add
and
iret
outsl
adc
and
add
stos
and
icebp
push
cltd
in
lahf
mov
rclb
mov
shll
mov
aas
xchg
jecxz
aaa
add
or
rolb
scas
jnp
call
add
test
inc
stos
xlat
sub
xchg
push
adc
inc
jp
out
je
cld
sub
add
test
pop
ss
out
fcompl
jl
rcr
add
push
sub
cwtl
dec
les
xchg
jo
mov
and
push
imul
adc
roll
adc
out
shrb
aas
cmpsb
loopne
xchg
add
sub
lret
mov
test
imul
add
xchg
pop
mov
mov
icebp
or
fmull
mov
in
push
sbb
mov
lahf
js
cwtl
sub
cmc
lret
inc
or
inc
fsubs
push
fs
dec
bound
or
mov
ret
neg
sub
push
mov
xor
shlb
inc
decl
push
or
jge
mov
sbbb
sahf
sbb
mov
sbb
test
jge
arpl
sub
movsb
sub
push
adc
or
pop
jns
sub
sti
add
mov
and
xor
stos
jne
in
lods
add
movswl
lret
push
mov
sub
lahf
cld
fbld
pop
xor
jno
into
dec
pusha
push
lds
mov
add
mov
dec
cmp
or
sub
fidivs
and
or
and
and
or
xchg
xchg
fmul
jecxz
sbb
cmpsl
cmpl
ret
test
sbb
js
add
pop
shlb
cmp
call
mov
or
andb
cltd
fnstsw
add
mov
imulb
add
nop
mov
mov
std
inc
and
outsl
loopne
push
in
mov
mov
leave
rol
xor
in
mov
sub
xchg
add
xor
out
clc
cmp
inc
in
sti
and
ret
sub
out
dec
jb
out
adc
ror
jle
sbb
in
add
stos
inc
pop
std
insb
jns
ret
sti
pusha
xlat
jae
imul
add
sub
push
jbe
inc
inc
dec
xor
jge
stos
aam
and
ljmp
mov
pop
in
movsb
adc
xchg
aaa
xchg
mov
pop
dec
mov
fiadds
mov
iret
fistl
mov
add
pop
push
jl
lods
mov
iret
mov
std
test
inc
aas
popa
insb
jae
xchg
add
lods
and
rcll
mov
stos
fnstsw
mov
aaa
mov
int3
cltd
iret
cmp
dec
mov
inc
mov
xchg
xor
sti
sahf
pushf
mov
inc
xlat
fwait
aam
cmpsb
sbb
mov
icebp
sub
ss
ljmp
ret
jle
pusha
aaa
dec
dec
fsubrl
sbb
mov
pushf
loope
mov
push
shlb
out
icebp
out
and
sub
inc
jno
fdivrp
add
sub
imul
pop
addr16
ja
and
ss
sub
test
push
rorb
fwait
in
call
cmp
push
mov
add
mov
lock
and
ret
into
mov
lcall
es
test
inc
and
movsl
fists
sahf
fs
jmp
pop
cmpsl
mov
push
adc
sbb
dec
cmp
lret
stos
dec
dec
loope
or
mull
sbb
stos
jo
das
xchg
insb
add
xor
std
pop
and
jmp
shrl
pop
pop
insl
xlat
mov
ljmp
dec
jne
sbb
fcomp
cmp
dec
inc
adcl
jae
cmp
mov
mov
push
jbe
cld
adcb
xlat
xchg
lret
out
pshufw
push
daa
ss
lahf
mov
loop
lret
int
movsb
jns
push
pop
ror
sub
pop
cmpsl
add
sti
pop
and
push
and
fdivrs
std
cmpsl
xor
loop
push
mov
arpl
push
daa
repnz
push
jne
xor
xchg
js
inc
mov
cmc
in
stc
cmp
ds
xchg
sbb
mov
xchg
mov
rolb
daa
test
shlb
scas
out
std
in
cld
jmp
cld
jbe
or
enter
pop
mov
mov
aaa
pop
sub
sub
mov
or
clc
sbb
sub
xor
cwtl
pop
lahf
ja
add
pop
or
jp
dec
jns
mov
nop
mov
inc
call
jge
or
roll
mov
fnsave
sub
repnz
xchg
jge
xchg
inc
xchg
xchg
add
arpl
and
fldt
add
sahf
pop
inc
push
bound
jg
jl
add
jo
or
xor
jbe
push
aaa
popf
lcall
inc
popa
cmp
mov
add
dec
imul
push
inc
rorb
ret
pop
or
xor
pop
mov
mov
mov
cltd
xchg
ds
sbb
cltd
data16
jmp
push
jl
jge
xchg
pop
popf
dec
inc
cmpsb
mov
inc
and
push
lcall
enter
or
inc
addb
dec
stos
or
mov
out
dec
pop
push
movl
or
dec
mov
js
fsts
fidivrl
shll
in
ja
jno
loope
nop
es
test
xor
jp
dec
dec
jge
jp
xchg
pushf
dec
xlat
rcl
in
test
cmp
fucomip
pusha
mov
inc
popfw
ljmp
dec
je
mov
or
jb
scas
jnp
sub
jmp
adc
inc
mov
mov
dec
mov
fcomps
stos
xchg
mov
xorb
loope
adc
push
jl
addl
jne
jno
xor
sub
js
dec
sub
or
dec
inc
push
ret
bound
int
ss
and
gs
and
pop
mov
movsb
jge
push
mov
xchg
sbb
or
hlt
add
push
push
push
jae
aad
jg
jae
xchg
gs
sahf
cmpsb
add
xor
lock
mov
popf
xlat
push
xchg
repnz
jecxz
cmc
mov
js
in
push
cmc
mov
push
jo
leave
inc
cmpsl
or
popf
and
xorl
and
add
ds
movsl
inc
scas
add
sbb
imul
repz
xor
je
xor
mov
pop
or
pop
jbe
jae
ds
andl
fcmovb
je
pusha
xor
test
sbb
popa
jno
cmpsl
rcrb
loopne
imulb
pop
sub
mov
pop
xchg
cli
sub
mov
sbb
rclb
adc
inc
push
cmp
jno
aam
adc
pusha
dec
mov
pusha
outsl
jo
in
dec
cmpsl
das
mov
sbb
add
push
sahf
sub
pop
inc
popl
xor
pop
rcrl
and
xor
rorl
repz
int3
mov
xchg
xor
mov
mov
jp
shll
inc
fidivl
cmp
scas
loopne
jo
xchg
inc
jp
xchg
das
cmp
cli
aaa
mov
pusha
int3
mov
cmp
push
sub
shl
mov
xor
xor
sub
std
push
jg
mov
lods
loope
iret
js
adc
add
xor
cmp
out
jnp
stos
sti
dec
sub
mov
lahf
pop
add
add
mov
bound
or
xchg
int3
cmpsb
arpl
popf
out
xchg
xchg
inc
push
push
lret
aaa
lods
mov
mov
push
enter
xorb
sbb
sub
adc
push
lds
nopl
inc
inc
imul
cmpsl
cld
xchg
ret
sahf
xor
xchg
jne
sahf
out
add
adc
std
insb
and
loop
push
addr16
inc
in
or
ret
lock
shrl
push
push
jno
xchg
xchg
mov
push
sub
dec
fstpt
enter
outsb
ficoml
nop
pop
loopne
adc
mov
out
jae
bound
int
push
xor
xchg
negl
pop
test
pop
mov
mov
mov
xchg
mov
roll
out
sti
movsl
mov
pop
mov
jmp
scas
xor
jecxz
push
mov
lods
jno
xchg
cmp
and
movsl
and
scas
jge
and
imul
into
or
daa
push
in
xchg
adc
push
jg
cmp
enter
das
jbe
idivb
jns
scas
nop
movsl
cmp
sub
adc
push
dec
sub
xchg
dec
push
arpl
sbb
xchg
insb
pop
mov
pop
xchg
shrl
xor
xcrypt-ctr
sub
inc
fidivrs
leave
push
das
jmp
test
in
xchg
push
add
clc
aad
shll
or
xor
dec
imul
lcall
push
mov
dec
test
push
jge
out
pop
adc
addr16
ficoml
roll
loope
dec
cmpsl
inc
push
lods
pop
cs
in
pop
pop
lods
xor
lret
push
in
lret
lds
inc
jns
cwtl
mov
fs
sbb
pop
jae
mov
mov
fildll
outsb
jp
sbb
sbb
xlat
add
cmpl
out
xchg
daa
push
mov
jne
les
out
mov
fisttpl
mov
and
mov
inc
shrb
lcall
stos
iret
insb
std
mov
jae
dec
into
movhps
lods
daa
adc
repz
mov
cld
xchg
loop
cmp
loope
pusha
pop
out
mov
or
cmc
inc
mov
adc
ret
in
adc
jno
stos
lods
xor
cmpsb
or
sub
call
mov
fisubrl
cs
dec
xchg
pop
out
and
bnd
jmp
cmp
jno
subl
js
rolb
loopne
cmpsl
add
inc
shl
or
fwait
sub
inc
adc
subb
cwtl
sub
cmp
add
and
in
or
cld
ds
inc
and
rorl
mov
pop
imul
cmp
popl
mov
insb
arpl
xchg
push
cmp
scas
mov
xchg
out
jmp
push
inc
xor
mov
lret
insl
stos
pop
movsb
clc
stos
and
and
repz
and
and
or
mov
lock
mov
jns
mov
sbb
test
inc
inc
pop
aas
pop
or
sbb
cwtl
inc
pop
push
fwait
mov
pop
iret
data16
movsl
sbb
and
sub
jne
loopne
ret
add
jae
mov
addr16
or
mov
mov
fwait
pop
dec
xchg
cmpsb
lret
dec
mov
or
icebp
aaa
mov
pop
stos
cmp
cmpsl
bound
and
mov
dec
fwait
add
mov
xchg
push
pop
stos
std
add
fs
mov
leave
adc
repnz
add
flds
shrb
stos
cmpsl
push
jecxz
adc
add
cld
add
pop
fcomps
inc
sbb
push
iret
pop
jno
rcll
gs
shlb
adc
mov
fs
and
andl
negl
into
and
fmull
dec
daa
push
test
sub
sub
aaa
icebp
push
inc
pop
sub
xor
enter
inc
xchg
sub
sbb
fiadds
add
filds
mov
popl
sub
les
pop
mov
arpl
sub
out
adc
arpl
les
stos
in
cmp
xchg
or
mov
jp
cmp
in
sbb
mov
dec
insl
add
adc
and
sbb
data16
mov
pop
push
mov
nop
fucomp
inc
insb
loopne
mov
mov
fldt
pop
fcom
jp
mov
outsl
xorl
rcrl
sbb
push
daa
rcrb
rcrl
cmp
push
cmp
lret
mov
mov
or
dec
ds
rolb
inc
or
ret
aas
and
mov
and
push
clc
loop
adc
and
das
pop
dec
xor
scas
sbb
stos
add
sbb
mov
rclb
outsl
divl
xchg
sub
jae
arpl
paddw
adc
jbe
mov
mulb
adc
xor
jne
mov
repz
in
or
mov
adc
divl
test
xorl
stos
mov
pop
pusha
xorb
outsb
dec
insl
cmp
les
or
icebp
xchg
pop
sub
cwtl
out
pop
inc
pushf
push
xlat
mov
or
or
sbb
fstpt
jbe
pop
sbb
into
insl
jecxz
test
mov
jbe
xchg
and
popa
fistpl
lock
imull
ret
test
mov
cmp
outsb
cmp
andb
jo
fldl
adc
mov
pop
or
out
cmc
add
movsb
sub
aad
test
inc
out
sbb
out
cli
out
sub
out
xchg
aas
fwait
xlat
imul
nop
call
shll
mulb
arpl
jge
out
pop
pop
insb
iret
xchg
cmp
mov
fidivs
mov
pop
in
dec
addr16
lret
push
out
cli
mov
insl
dec
daa
lds
ss
jb
jno
mov
pop
or
int
xchg
jne
pop
leave
adc
lret
fidivrl
sahf
dec
idivl
inc
pop
pusha
add
mov
add
icebp
pop
and
mov
push
int3
aad
sub
fidivrs
and
roll
mov
push
enter
xchg
mov
fs
out
sbb
das
sahf
lret
fwait
ds
xor
add
push
jae
add
mov
rclb
mov
lcall
pushf
scas
into
jne
dec
leave
pop
testl
sbb
aaa
lcall
mov
call
scas
or
insb
pop
mov
and
add
adc
adc
aaa
sbb
jbe
popa
xor
ret
lret
bound
insl
pop
push
jb
pop
iret
arpl
ror
rorl
jecxz
or
dec
je
sbb
pushf
push
rol
scas
push
jo
testl
setno
inc
mov
dec
dec
jle
jp
and
cmp
js
xor
inc
add
xor
mov
fbstp
nop
xor
push
jae
adc
jo
add
movsb
jo
enter
idiv
roll
sbb
jb
sub
into
paddsb
jb
mov
in
int
fbstp
mov
aas
movsb
fs
adc
hlt
sbb
ss
xor
pop
call
and
sbb
inc
mov
mov
loopne
jo
xor
cs
add
pop
xchg
hlt
sub
adc
outsb
pop
shll
add
xor
xchg
add
mov
mov
fwait
scas
xor
mov
inc
cmp
stc
leave
push
pop
in
pop
int3
test
les
jmp
or
ror
fs
adc
pushf
stos
mov
test
loope
mov
in
stc
ret
dec
stc
push
call
movsl
loopne
enter
pop
dec
mov
mov
adc
pop
cwtl
pop
loop
add
ds
je
push
data16
mov
push
pop
or
fst
rclb
stos
imul
cmpsb
adc
or
dec
sub
add
dec
jbe
out
in
sbb
and
ljmp
pop
insl
sbb
in
mov
xchg
jl
pusha
sub
jge
idivl
push
mov
int3
fsubr
pop
mov
mov
and
es
mov
into
mov
mov
loop
testl
loope
sub
and
jle
fstpt
sbb
roll
xchg
scas
jbe
call
shr
add
or
or
mov
mov
jecxz
ljmp
jmp
adc
mov
and
xchg
in
arpl
rcrl
out
imul
je
sbb
mov
cli
mov
pop
repz
cmp
movsl
sahf
aas
mov
jmp
test
mov
enter
xchg
xchg
jle
sub
call
push
push
sbb
sbb
ret
jp
sti
loopne
les
push
jmp
pop
sub
popa
xchg
in
and
sti
jg
int
jmp
mov
dec
adc
mov
mov
lret
test
sbb
arpl
add
dec
hlt
sbb
inc
mov
dec
or
bound
mov
mov
push
xor
jne
cmp
pop
popf
test
stc
xchg
sub
or
pop
pop
loopne
jmp
mov
sbb
lods
xchg
push
pushf
or
adc
jno
dec
hlt
lock
data16
clc
divb
mov
xchg
xchg
pusha
out
push
sbb
adc
pop
sbbb
rorb
insl
repnz
hlt
loop
jnp
aas
sbb
jle
ljmp
cs
loopne
mov
and
ss
cltd
mov
lret
xchg
mov
rclb
jg
out
push
mov
xchg
iret
ja
pop
jg
sahf
int3
out
add
jge
js
cmp
loopne
pcmpeqw
bound
xchg
inc
stos
test
jb
push
insl
fmuls
mov
mov
jne
push
or
clc
out
in
and
inc
jmp
adc
test
fsubrs
dec
adc
push
test
xchg
sub
fwait
xchg
mov
mov
sbb
movsb
into
adc
xchg
adcb
sub
inc
pop
pop
outsb
xchg
mov
lock
js
cmc
sbb
mov
shrl
inc
stos
lods
rcl
sbb
fidivs
xchg
jge
pushf
mov
pop
test
sbb
dec
lods
cld
loopne
aaa
fisttps
push
loopne
insb
push
pop
mov
push
lods
test
out
popf
pop
xchg
les
sbb
sahf
or
out
dec
popf
mov
push
mov
test
cmp
xchg
stc
into
pushf
mov
inc
or
lahf
out
fnstsw
adc
loopne
cmpb
lcall
dec
push
dec
add
pop
dec
add
popf
xor
or
push
xchg
inc
add
insb
inc
cs
cmp
aam
xchg
push
add
jge
cmpsb
int3
in
mov
jp
pushf
lock
lcall
aas
adc
sub
or
cmp
mov
orl
cli
or
and
jle
jnp
ret
push
push
je
cmp
outsb
cld
ja
pop
mov
sbb
sub
lfs
jns
loop
pushf
mov
das
jo
sbb
bt
adc
jo
fldt
cs
jg
inc
inc
sbb
jmp
leave
add
popf
xor
inc
mov
jp
and
jne
loope
inc
je
in
mov
or
mov
addr16
push
in
std
mov
push
and
stos
pop
outsl
repz
and
das
enter
jg
test
inc
push
sbb
je
mov
mov
xor
ret
loop
pop
fcmove
xchg
sti
int
loopne
cmpb
push
inc
add
mov
mov
sbb
loop
xchg
or
js
repnz
cmpl
jb
data16
aas
pop
or
xchg
sub
push
subb
adc
addl
mov
cmp
xlat
in
pop
test
stc
or
add
inc
cltd
pop
mov
out
cmp
in
arpl
ja
adc
div
mov
loop
mov
fildl
jl
fisttpll
in
sti
cmp
pop
xchg
cmp
mov
sub
push
lods
ret
aaa
scas
mov
mov
xchg
imul
subl
mov
cmp
sub
xchg
xchg
inc
sbb
loopne
lahf
sub
xchg
jmp
pop
cmp
push
sbb
pusha
out
sbb
mov
jp
inc
shrl
addl
les
cs
outsb
popf
fcmovu
dec
je
sbb
lods
sbb
pop
pop
and
jl
jl
roll
inc
in
addr16
inc
out
mull
repz
repnz
xchg
add
cmp
loope
jmp
jo
add
loop
sub
stos
push
or
sbb
inc
or
sbb
push
xchg
push
or
adc
jne
lsl
add
mov
mov
int3
mov
or
not
pop
lea
mov
mov
imul
pop
shrb
out
cmp
test
loop
jecxz
aas
test
add
mov
fisubrl
mov
push
jb
ja
inc
push
test
dec
insb
sub
sub
mov
mov
push
decb
cmp
addr16
pop
shrb
pop
movsl
fmul
imul
out
push
mov
ds
js
and
push
cmp
add
out
mov
cwtl
pop
scas
scas
bound
incl
jno
mov
push
jecxz
xchg
jbe
or
or
push
sub
ja
test
fcoms
cmp
test
jp
xor
xorl
mov
xorb
inc
jecxz
mov
inc
add
or
cmpsb
inc
mov
into
stos
fiaddl
orb
stos
mov
fisubrl
cmp
xor
and
push
sahf
jns
cs
mov
dec
loop
push
xchg
mov
jge
cmp
aam
dec
ss
sub
add
jnp
sbb
inc
ja
jl
dec
sub
pushf
push
sbb
ret
and
adc
cmp
mov
pusha
rorl
rorb
pop
cmp
les
je
mov
aam
push
ficomps
mov
sbb
pop
enter
mov
inc
mov
out
pop
dec
or
adc
out
push
push
cld
iret
lods
cmpsl
sbb
inc
or
or
stos
sub
movsl
push
inc
mov
xor
mov
inc
jmp
dec
inc
pop
pop
adc
shrl
mov
shrl
cmpsl
scas
js
jae,pt
and
into
xchg
int
les
aam
out
cmpl
xorb
cmp
fldcw
adc
adc
imul
test
jecxz
jo
aam
and
sti
inc
fidivrl
lcall
push
lret
cs
sbb
out
sbb
and
pop
into
lds
cmp
or
cmc
mov
dec
daa
xor
mull
rclb
sub
pop
and
in
inc
mov
js
or
imul
gs
test
cwtl
test
jns
inc
bound
sub
imul
scas
xchg
std
add
addr16
push
adc
sub
lahf
mov
sub
negl
loopne
iret
sbb
add
cltd
sti
rolb
push
lea
ret
xchg
lds
dec
jp
cmp
cmpsl
pop
mov
inc
mov
les
in
push
jb
pop
aas
push
jo
ret
add
rolb
and
addr16
inc
and
push
stos
cmp
cld
mov
pop
movsl
sbb
and
sub
dec
enter
and
in
into
shlb
bound
dec
mov
mov
clc
dec
xor
in
out
sub
push
xchg
scas
or
and
xor
shlb
notb
adc
lcall
xchg
push
es
data16
or
xchg
mov
add
mov
lcall
std
cmp
scas
sbb
push
xlat
stos
inc
xchg
pop
inc
xor
fwait
stos
iret
in
add
push
arpl
mov
jmp
jo
jle
adc
inc
mov
push
sbb
jns
xchg
xor
imul
xchg
scas
movsl
adc
mov
iret
bound
or
jb
out
or
lcall
inc
jmp
or
inc
adc
lods
xchg
xor
fsubp
int
scas
add
mov
sub
add
in
jmp
lcall
orl
femms
mov
arpl
push
dec
insl
stos
adc
push
adc
call
loope
add
int3
popa
aas
rcll
fidivrs
xchg
mov
ljmp
cmpsb
ret
pop
mov
cmpsb
or
cmp
ljmp
mov
movsl
mov
dec
lret
xchg
repnz
inc
decb
in
ret
dec
jmp
mov
das
lret
fidivs
jo
xchg
lss
fstps
mov
mov
xchg
aam
or
inc
and
mov
xor
add
mov
lods
scas
adc
sbb
jl
sub
mov
pop
jle
push
cltd
movsb
repz
test
push
sbb
leave
add
add
das
mov
lret
dec
inc
cmc
mov
arpl
aaa
negb
push
out
xor
testl
push
push
push
jg
inc
gs
mov
lock
fwait
out
aas
push
push
cmp
adc
xchg
dec
sbb
cmp
jbe
xor
ss
adc
loop
mov
lret
xchg
mov
addr16
or
fstpl
out
inc
dec
shll
pusha
lods
push
out
sub
sti
cmpsb
daa
imul
xchg
adc
ds
jle
sbb
and
pop
and
push
fwait
jl
bts
fmuls
inc
hlt
loope
jecxz
arpl
or
shlb
add
or
mov
cmc
gs
pop
sbb
mov
sub
lea
mov
or
fs
xchg
dec
ret
xchg
mov
jl
stos
sti
fucomp
rcrl
dec
int
dec
jno
jno
xchg
insb
sub
jnp
sbb
and
xchg
sahf
arpl
inc
mov
fcom
xchg
push
popa
add
scas
push
cmp
leave
adc
lahf
xlat
rorl
daa
pop
cmp
cmp
clc
jae
jno
or
xor
repz
les
pushf
faddl
xlat
movsl
ds
jbe
xor
enter
or
stos
movsb
out
sbb
test
dec
sbb
xchg
mov
leave
test
mov
push
mov
mov
daa
fsts
jne
mov
aas
mov
pop
jnp
mov
outsl
popf
lea
xor
or
arpl
mov
sub
daa
push
inc
in
add
dec
jo
mov
dec
cld
mov
pop
or
scas
mov
icebp
sbbb
ret
sbb
sub
movb
cwtl
ja
fmuls
inc
insb
out
mov
and
into
ret
and
add
cmpsl
xchg
ja
push
push
sub
dec
xchg
xor
andl
mov
idivl
test
popa
lahf
push
inc
or
out
cmp
xor
pop
cmpsb
sub
jle
sahf
ds
rcrl
stos
push
cltd
sti
jmp
das
gs
jle
xchg
in
xchg
mov
inc
push
pop
insb
int
les
mov
jge
je
sub
lock
cmp
mov
push
cs
movsb
mov
insb
mov
add
test
sub
ret
pop
push
xor
cmpsl
sbb
add
cwtl
adc
pop
dec
inc
aas
xor
filds
repz
and
adc
and
pusha
imul
pop
loop
sbb
inc
insb
enter
push
mov
es
sub
xchg
dec
xchg
fdivrl
xor
js
test
cmp
fnsave
xchg
mov
inc
cmpl
add
shrl
jp
jle
xlat
lock
mov
pop
jbe
cmp
cmp
addl
lret
sub
jnp
sbb
icebp
and
pop
popf
dec
lds
jae
cld
out
or
push
rcl
mov
test
les
add
clc
pop
and
add
clc
sub
aam
push
and
hlt
pop
push
dec
loopne
dec
test
adc
daa
sbb
cmp
jno
pop
jmp
out
add
push
or
sti
in
push
sub
or
cmp
push
out
mov
cmovl
std
pop
pop
sahf
pop
movsb
inc
cmp
push
aas
sbb
in
push
add
jns
inc
pop
cmp
aaa
xor
mov
xchg
mov
jne
jno
nop
mov
mov
mov
pop
and
mov
outsl
xchg
xor
inc
negl
ljmp
dec
inc
push
sbb
insb
es
ss
fsubl
mov
jb
and
xchg
ds
mov
push
sbbl
push
cli
rolb
repz
lods
dec
ja
jns
push
mov
ja
ljmp
movl
mov
out
xchg
je
shl
insl
addr16
sbb
mov
addb
fisttpll
add
out
pop
scas
fists
nop
outsb
lcall
sub
xor
pop
mov
cmpsb
jle
mov
jno
or
shr
or
cmp
dec
cmp
and
mov
mov
into
jns
inc
les
push
fs
jg
sbb
insb
cmp
enter
sbb
jl
inc
test
xchg
mov
in
adc
stc
push
aaa
pop
mov
sbb
insl
jmp
mov
adcl
pop
or
fsubs
xor
mov
cld
orb
mov
in
das
jbe
fisttpl
ljmp
cmpsb
daa
loop
inc
push
gs
ror
mov
enter
mov
rol
xchg
cmpsb
add
sbb
xchg
mov
test
mov
and
pop
inc
test
mov
lahf
inc
dec
repnz
cld
jmp
scas
cmp
mov
adc
mov
fldcw
hlt
xchg
stos
dec
add
mov
push
sub
xor
jl
jo
xchg
push
or
mov
das
xchg
inc
in
jecxz
stos
faddl
mov
adc
out
lea
push
inc
cmp
jle
xchg
or
cmp
pop
jmp
movsl
je
pop
out
nop
cld
and
rclb
movsl
push
mov
pop
aas
in
movsb
xchg
rcll
pusha
js
xchg
xorb
pop
ss
pop
imull
mov
movsb
dec
sub
adc
and
mov
dec
orl
cmp
and
mov
xor
bnd
adc
jae
dec
outsl
pop
add
pop
sti
int3
pop
or
xchg
fs
into
movsb
jecxz
scas
popf
ljmp
jle
cwtl
add
inc
out
jb
shll
jg
mov
fidivrl
xchg
test
pop
pop
aaa
imul
movsb
mov
loope
mov
adc
aas
jg
hlt
mov
lret
sbb
mov
mov
push
sbb
inc
xchg
add
in
outsl
dec
mov
add
xor
sub
xor
scas
ljmp
adc
mov
rep
pusha
pop
test
xchg
xchg
fwait
jge
mov
jns
bound
mov
xor
aas
push
fldt
push
mov
jg
ret
mov
lock
repz
jmp
inc
pop
ret
repz
stc
add
mov
cmp
push
adcb
rcrb
arpl
das
mov
or
scas
fimull
loope
xor
dec
jge
lcall
mov
sbb
fidivrl
lret
mov
mov
daa
dec
clc
sub
pop
cmpsb
aad
xchg
repz
jle
cs
pushf
sbb
jae
sbb
pop
xchg
pusha
jb
pop
mov
mov
aam
cmp
clc
stc
xlat
xchg
and
pop
jnp
mov
pushl
or
mov
hlt
test
ret
je
outsl
hlt
jle
test
adc
out
popf
and
cmpsb
mov
and
cmp
mov
xchg
push
dec
xrelease
int3
or
in
int3
xor
jb
rcll
mov
out
or
aad
clc
jg
test
xlat
xchg
int
push
xchg
nop
push
shrb
rolb
jge
xchg
movsl
push
pop
movsb
outsb
repz
into
je
cmp
fldt
lret
mov
or
pop
pop
sarl
push
add
hlt
xchg
cli
ljmp
sub
jae
xor
add
mov
inc
pop
pop
arpl
paddusw
push
mov
dec
add
cmp
inc
js
movsl
mov
out
sub
mov
pusha
dec
iret
dec
shr
sub
sub
mov
pop
dec
dec
in
fsubrp
dec
fistps
xchg
lcall
mov
pop
icebp
or
outsl
add
nop
cwtl
xor
shrl
nop
out
and
les
cmp
jge
xor
push
ljmp
fstpt
xchg
cld
shll
push
mov
xor
lcall
xchg
pop
out
jp
sbb
leave
sub
mov
add
mov
aam
jecxz
cwtl
add
xor
fsub
sbb
shlb
xchg
pop
cmpsb
xchg
outsl
addr16
in
mov
adc
mov
or
outsb
adc
cwtl
repz
jge
lods
inc
fstpl
jne
out
test
sti
sbb
repz
cmp
xor
inc
fisubrl
sbb
cmp
mov
dec
sbb
cmpsl
clc
jl
mov
adc
xor
push
push
mov
incl
js
xchg
out
test
dec
ret
ljmp
inc
cmpsb
and
push
lods
dec
out
mov
cmp
fsubs
sub
cmp
ljmp
inc
or
sub
das
ja
and
gs
xchg
bound
sub
jne
arpl
call
push
int
mov
mov
test
insb
imul
jl
jp
movsb
insb
xor
adc
and
lea
fistl
das
pusha
nop
sahf
pushf
add
sbb
loopne
jns
aaa
leave
in
loop
mov
imul
enter
jmp
adcl
sarb
or
adc
cmp
jmp
and
dec
mov
ret
imul
je
sbb
xor
mov
jle
and
lods
fstp
jae
outsl
scas
add
mov
int
add
cmp
or
call
adc
adc
aas
jl
inc
roll
fimull
mov
cld
lods
jns
add
adc
aaa
cmp
xor
mov
pusha
xchg
int
in
iret
add
repnz
outsb
xchg
setg
mov
xchg
lcall
insl
xchg
cmpsl
lods
ss
cwtl
fsubrl
xchg
mov
and
imul
es
xchg
cmp
or
movsb
jno
imul
xchg
inc
out
or
xchg
pop
jg
inc
lock
lds
sub
jge
outsb
aaa
icebp
fwait
out
scas
pop
test
jge
pop
stc
mov
mov
test
xchg
nop
dec
test
mov
lds
or
sarl
mov
insl
add
jg
xor
adc
js
mov
cltd
dec
scas
sarl
outsb
jecxz
sarb
ja
and
outsb
in
lods
push
loopne
push
add
data16
add
in
mov
mov
cmpsb
out
add
or
push
or
xor
dec
push
xchg
sub
jo
lea
cmp
cltd
mov
adc
out
test
pusha
out
xor
dec
cmp
clc
test
push
pop
daa
and
movsb
and
mov
dec
les
dec
std
movsl
add
in
sub
inc
sbb
xor
arpl
rsm
adc
test
jo
mov
nop
sbb
xor
dec
aam
mov
enter
mov
pop
xchg
or
out
ss
outsb
dec
shlb
mov
idivb
xor
pop
roll
push
bound
sahf
xchg
lret
adc
out
dec
fs
out
or
inc
cmpsb
or
sbb
mov
jb
aad
mov
cmpsl
aam
cmp
sbb
shr
xor
rol
sub
dec
jno
xchg
adc
pop
sub
push
pop
jb
push
loop
je
inc
divb
cld
mov
aaa
push
cltd
push
clc
adc
inc
std
aad
clc
rcr
out
cli
adc
fimuls
arpl
cmp
jl
leave
test
shlb
in
jmp
ljmp
repz
rol
iret
cmp
xor
inc
inc
inc
jo
in
repnz
adc
sub
test
aam
dec
mov
dec
mov
xchg
sub
nop
push
inc
inc
in
int3
aaa
fmul
sti
cs
imul
xchg
pop
push
add
xor
cltd
pop
repz
test
push
out
mov
xchg
xor
sub
mov
insl
dec
loopne
pop
lock
iret
xor
aaa
pop
mov
lea
adc
je
adc
sub
fstpl
imul
repz
add
insl
or
jge
lret
ja
jns
aad
lcall
lods
dec
push
mov
sub
jg
sub
mov
mov
pop
arpl
or
and
pop
movsl
sbb
andl
sbb
xchg
neg
out
inc
popa
sbb
mov
sub
test
mov
mov
inc
sub
loopne
push
cmc
and
jne
push
aaa
fs
gs
into
mov
push
inc
mov
jns
cwtl
data16
rorl
mov
hlt
jmp
rorl
mov
fimuls
or
lds
popa
add
jns
leave
movsb
mov
jbe
aaa
mov
mov
mov
iret
mov
clc
mov
push
mov
or
cltd
dec
and
jmp
xor
sbb
and
cli
xor
sbb
push
or
andl
cmp
jno
push
lret
mov
test
jbe
xor
in
ds
push
pop
mov
jecxz
rclb
shrl
jecxz
repnz
lret
cmp
cmp
pop
sbb
adc
lcall
mov
or
int3
rol
rorb
mov
and
es
mov
loopne
push
push
fistpll
dec
imul
push
inc
int
push
xor
dec
aad
out
fs
add
ret
es
aaa
cli
pop
cmp
ja
jmp
ret
jmp
dec
inc
data16
aas
xchg
inc
outsb
cmp
sahf
adc
clc
int
pop
jmp
ret
fisubrs
lcall
jl
icebp
adc
repnz
xor
pop
sti
lcall
stos
out
test
pop
lock
aas
or
hlt
or
cltd
insb
sbbb
add
ja
jo
repnz
sub
and
dec
lods
sub
subl
ja
hlt
gs
fmulp
mov
adc
aad
jns
fsin
rcrl
lods
mov
dec
clc
movsl
mov
dec
dec
and
mov
mov
jge
xchg
fldcw
shll
pop
loopne
dec
xchg
fcmovb
mov
fcompl
mov
fs
icebp
lcall
or
loope
cmp
sbb
and
push
mov
test
popf
lods
mov
aaa
addps
cli
add
mov
cltd
sub
jnp
jns
xchg
cmc
pop
movsl
call
imul
cli
cmp
xchg
arpl
cmp
cmpb
pop
jmp
insb
or
jo
mov
sub
nop
push
mov
add
or
pop
fdivrl
xor
push
jmp
mov
leave
stos
add
pop
dec
dec
push
insl
xor
xor
std
push
mov
mov
lods
ffreep
dec
daa
test
mov
fwait
xchg
hlt
ss
add
bound
jne
jne
mov
cmp
insl
dec
jp
aas
jbe
xchg
xchg
arpl
jo
dec
adc
xchg
nop
cmp
push
jge
aaa
sbb
jae
aaa
addr16
mov
inc
xchg
cmp
sar
mov
das
clc
mov
cltd
adc
inc
lret
and
stos
cld
push
mov
xor
sar
hlt
outsl
fldt
mov
cmpsl
mov
pop
sbb
mov
fwait
addr16
jge
and
xor
es
aas
mov
pusha
scas
pop
js
mov
push
fdivr
mov
cmp
ret
fsin
xor
xor
adc
push
shlb
lret
cwtl
decb
subb
adcl
lret
jge
std
sbb
mov
add
push
mov
arpl
jne
mov
adc
pop
mov
mov
in
out
lock
adc
mov
xor
jp
xchg
sub
jmp
data16
shlb
pushf
je
xor
jno
pop
mov
lds
pop
jmp
nop
icebp
test
ljmp
cli
lahf
stos
mov
loope
pop
adc
out
xchg
lcall
jb
xchg
and
mov
shrl
lret
mov
cmp
inc
gs
lea
mov
dec
mov
mov
stc
add
ret
inc
addb
inc
mov
and
dec
and
dec
or
scas
mov
imul
lret
mov
sub
int3
add
hlt
pop
insb
and
jl
sti
cmp
xchg
bound
xchg
in
dec
out
loopne
dec
data16
movsb
cmp
sbb
lahf
imul
sti
mov
push
push
mov
or
jno
xchg
mov
cmpsb
sbb
sti
lret
cld
sub
xor
data16
outsb
push
aam
or
and
jmp
clc
cmpsl
test
mov
call
dec
incb
mov
insb
outsl
fs
xchg
xchg
push
inc
scas
sbb
fdivrl
sub
in
mov
cmp
push
dec
push
mov
and
in
cmp
mov
shl
lahf
and
stos
inc
adc
push
bound
movsb
lret
ss
in
jp
out
scas
mov
ds
mov
das
lahf
and
dec
fxch
sbbl
ja
xor
pushf
jns
inc
lret
movd
and
sbb
popa
inc
sub
dec
das
hlt
inc
daa
inc
jb
mov
jbe
mov
shrl
xchg
mov
dec
int
daa
pop
dec
scas
out
stos
aas
adc
cmp
mov
adc
cmp
shll
dec
shll
fsts
or
pop
dec
jbe
or
jg
mov
mov
sbb
clc
xchg
stos
inc
xchg
popf
xor
adc
subb
mov
jle
sbbl
ss
cmpsb
ljmp
dec
pop
dec
das
or
mov
outsb
lcall
decb
adc
fwait
mov
lock
inc
push
sarb
icebp
lret
mov
pop
xchg
mov
scas
mov
mov
jmp
or
push
rorb
adc
push
ss
xchg
lods
sub
jg
aas
bound
push
mov
jns
inc
dec
sbb
inc
mov
enter
pop
sarb
and
iret
pop
push
gs
adc
jae
out
inc
push
inc
xlat
test
loopne
sar
cmpsb
addr16
sahf
mov
mov
or
loopne
push
xchg
test
js
mov
enter
inc
imul
hlt
push
popf
stc
call
mov
fucomip
and
dec
push
int
inc
push
je
int3
stc
lret
xchg
jo
jns
aad
insb
or
jecxz
outsb
or
xchg
pop
jae
push
dec
xor
sub
xor
mov
push
sub
jmp
mov
movsl
jno
sahf
imul
icebp
incl
pop
enter
jg
cmc
dec
sub
imul
cmc
pop
jae
or
push
mov
shrl
and
lret
nop
jns
sbb
pushf
push
pop
lods
pop
lahf
xcrypt-ctr
cmpsl
fildll
dec
clc
lahf
int3
mov
or
jmp
and
cld
stos
mov
aaa
das
xchg
leave
sahf
add
dec
aam
sarb
mov
cwtl
sbb
mov
out
jp
call
jae
add
flds
sahf
inc
adc
subb
in
fsub
scas
out
es
aaa
inc
inc
je
mov
sbb
and
rorb
loopne
pusha
inc
bound
pusha
imul
cs
inc
jl
ror
mov
push
mov
js
cmp
test
pushf
repz
ds
push
stos
hlt
lea
jecxz
push
popa
fisubrl
shll
out
adc
and
jbe
or
sbb
push
mov
out
sub
push
aas
jp
lret
jle
sub
out
scas
in
mov
push
cmp
pop
mov
out
mov
std
sti
pop
inc
movsb
cmp
xchg
movsl
fsubrl
and
cltd
push
pop
pusha
or
add
push
in
xor
outsl
mov
push
jp
xor
mov
mov
push
and
xor
pop
mov
in
jge
xor
sub
sbb
mov
fistps
pop
cld
cwtl
outsl
add
and
or
repnz
or
sbb
push
iret
dec
ljmp
pop
idivl
fs
stos
mov
mov
adc
fwait
imul
hlt
xlat
jae
test
add
dec
adc
and
insl
jle
jmp
rcll
pop
daa
ds
push
pusha
add
nop
and
loop
ljmp
movntps
xor
push
roll
aam
jnp
div
mov
push
fwait
andb
sbb
sahf
jb
shlb
xchg
adc
aad
dec
mov
movsl
into
repnz
inc
mov
pop
sub
xchg
add
mov
in
pop
in
xchg
mov
sbb
mov
sarl
or
xlat
or
cmpsl
repnz
inc
cmpsb
sbb
push
push
cmp
mov
sub
push
lea
insl
or
sbb
ret
fmuls
xor
sub
inc
push
jle
inc
push
orl
ljmp
lods
add
mov
jle
jae
fcmovb
xchg
sbb
call
in
in
lods
mov
push
inc
jnp
mov
loopne
movsb
inc
pop
cmp
int
outsb
sbb
testl
pop
stos
and
sub
pop
pusha
stos
idiv
imull
pmulhuw
sarb
call
dec
jg
cltd
and
aam
inc
stc
ror
or
push
popa
jge
push
pop
rcll
aam
mov
sub
cmp
out
pop
jae
jge
jg
push
jne
add
sbb
cmpsl
mov
movsl
pop
daa
add
icebp
fs
mov
and
jmp
aam
pop
sbb
pop
repnz
mov
je
sub
sub
jbe
leave
xchg
and
les
pop
cmp
push
jne
je
aad
sbb
loopne
sahf
clc
push
out
xchg
mov
dec
dec
sbb
add
pop
cmp
xor
xor
das
xchg
popa
das
fcmovnb
pop
pop
jnp
inc
mov
xchg
jo
imul
dec
mov
inc
and
test
xor
jne
and
test
mov
popa
lcall
out
add
daa
mov
dec
lock
push
sarl
stos
xorl
cs
enter
movsb
push
add
iret
pop
sahf
aad
push
movsl
xor
jns
and
out
mov
sahf
ret
int
test
mov
test
jl
and
subl
xor
jle
adc
jge
insl
gs
jmp
inc
adcl
mov
push
test
mov
lahf
lcall
fistpl
adc
xchg
mov
push
test
and
cmp
lock
dec
mov
pop
mov
fists
push
mov
test
ds
pop
pop
xor
and
sub
ja
int3
andl
loopne
pop
xor
xchg
xor
adc
mov
stos
rcl
dec
inc
add
icebp
js
push
pushf
jg
xchg
xor
lcall
jle
sub
dec
icebp
xor
sub
nop
dec
dec
leavew
adc
xchg
push
neg
pop
jecxz
inc
fdivrs
in
loope
mov
ret
inc
rcrl
or
and
xchg
imul
mov
sbb
lret
test
or
mov
mov
mov
adc
cmc
mov
out
push
insb
rcll
stos
jae
icebp
fs
xor
mov
push
xor
push
pop
or
sar
stos
aam
mov
or
inc
lret
and
rorl
cmpsl
dec
cmp
cmc
or
std
jnp
dec
lock
mov
cltd
or
fldenv
jb
mov
add
enter
loopne
and
push
and
xor
mov
push
push
int
jecxz
imul
insl
inc
test
sub
test
int
xorl
xchg
mov
dec
out
sub
adc
es
sub
mov
leave
pop
stos
jg
push
test
imull
push
pop
pop
sub
rclb
and
pusha
sbb
xchg
bnd
xor
in
subps
pop
lock
sub
data16
mov
xchg
pop
enter
and
fstp
aam
mov
or
adc
jns
pusha
mov
loop
cwtl
lods
popa
jmp
xlat
pusha
mov
testb
test
pop
inc
lret
xchg
in
adc
rorl
dec
jl
lcall
or
iret
or
mov
and
icebp
xchg
mov
add
dec
leave
test
cwtl
inc
inc
negl
data16
int
out
jbe
fistpl
adc
mov
push
cmp
mov
sub
dec
mov
cmp
enter
pop
inc
addr16
int
out
fidivl
mov
add
mov
clc
sbb
and
sbb
pop
hlt
or
mov
mov
mov
in
mov
rcr
int
cmpsl
lds
dec
xchg
pop
xlat
imul
in
dec
insb
fldt
insl
jbe
xchg
push
xchg
xchg
cmpb
call
arpl
mov
sarb
dec
mov
add
imul
and
jg
mov
rcrb
or
pushf
sbb
mov
pop
sbb
mov
in
push
dec
mov
je
fildl
lea
lods
add
cmpsb
sbb
into
add
popa
pop
std
pusha
mov
cld
ljmp
enter
jae
and
sbb
mov
sbb
call
and
sbb
test
pop
andb
lods
xchg
xchg
sub
imul
lcall
jae
loopne
push
ss
les
push
mov
dec
movsl
mov
push
ds
popf
shlb
add
dec
jmp
dec
push
dec
ljmp
test
fldt
or
lods
xchg
pop
gs
xor
push
int3
in
hlt
fcmovbe
and
test
pop
cmpsb
aam
mov
dec
jb
in
push
insb
or
into
fisttpl
inc
insb
jns
outsb
cwtl
mulb
roll
push
fidivrl
ret
dec
imul
stc
or
aad
call
push
adc
sbb
xchg
test
and
ds
mov
bound
inc
out
popf
or
jbe
in
insl
cmp
jnp
repz
sarl
mov
and
mov
xchg
xor
lret
push
xchg
dec
and
scas
cmpsb
lahf
inc
outsb
fwait
hlt
mov
pushf
jmp
mov
pop
dec
sti
lods
mov
out
hlt
lret
aam
jns
mov
fs
lcall
insl
stc
cli
fwait
daa
mov
and
lret
mov
dec
dec
int3
pusha
xor
aaa
ret
and
jo
in
sub
les
adc
test
lret
cmp
mov
adcb
aaa
dec
add
jae
ret
ss
lock
shrl
dec
mov
jmp
xchg
cmp
movsl
or
pop
fs
movd
and
shlb
aad
movl
xchg
movsb
movsl
lods
mov
pop
jl
inc
loopne
imul
je
xor
iret
jmp
andl
xor
js
lods
xor
mov
xor
ds
ret
mov
cmp
adc
push
sub
pop
test
mov
mov
sub
adc
les
outsb
sbb
popf
pop
or
push
cmp
daa
dec
xor
js
stos
pop
loopne
insb
xor
mov
sbb
inc
inc
out
test
inc
mov
sbb
cli
xchg
inc
push
icebp
lods
jl
clc
movsl
dec
out
mov
pop
or
mov
inc
sbb
dec
lock
inc
jg
dec
es
or
loopne
jp
insb
imul
out
mov
xor
rcrb
xor
fistpll
xchg
js
pusha
xchg
jne
cmp
shr
sarb
int
inc
cmp
sub
stc
lock
inc
imul
add
faddl
push
cltd
rorb
xchg
mov
fistpl
lret
orl
dec
sbbl
mov
cmp
inc
xchg
cwtl
jbe
adc
xor
repz
or
cwtl
pushfw
xchg
inc
scas
hlt
adc
frstor
mov
stos
push
mov
xor
je
loopne
das
adc
sub
and
mov
xchg
testl
inc
ret
movsb
push
jg
dec
mov
loopne
jg
jnp
sub
pop
negl
add
mov
mov
aad
pop
pop
and
mov
adc
inc
pop
fs
add
adc
xchg
mov
inc
in
int
pop
add
ret
mov
lea
add
movsb
fidivs
neg
stos
fmul
cmp
daa
or
cltd
jbe
repnz
mov
xchg
aad
sbb
stos
xor
mov
xlat
add
insb
dec
sbb
in
sub
dec
adc
sbb
mov
jge
negl
or
cmp
push
jecxz
in
ljmp
inc
lret
fwait
call
rclb
lret
jo
rorb
push
pop
imul
mov
add
xor
enter
and
out
dec
cmc
jne
shrb
xchg
inc
cmp
pop
cmpsb
rclb
pop
or
imul
fnstenv
sbb
cmp
jb
scas
outsl
cmp
ficoms
and
stos
cwtl
les
push
fldcw
xchg
xor
ret
pop
fstpt
sub
sahf
cmp
sub
or
lods
push
dec
sub
mov
lcall
out
sub
and
pop
sub
cmp
fsubrp
arpl
pop
cmp
mov
arpl
cwtl
and
mov
popf
sbb
out
jp
and
adc
fs
lcall
dec
insl
mov
push
jns
push
out
dec
ss
fs
xorb
dec
xor
neg
test
pop
pop
push
imul
icebp
and
popa
loopne
fld
xor
test
popf
xor
js
mov
xor
je
mov
push
and
ret
mov
addr16
das
loope
loop
cwtl
lcall
mov
xchg
add
ret
push
ljmp
lea
cmp
ja
movsl
lds
dec
dec
lods
icebp
lret
and
daa
adc
push
jne
mov
dec
dec
xor
lds
inc
shlb
fisttpll
orb
aam
jb
fdivp
out
sarb
lret
test
test
add
jle
inc
or
outsb
movsb
inc
cmpsb
out
jmp
cmp
jg
aaa
mov
shlb
test
fcompp
sub
std
lret
push
inc
mov
push
std
mov
ret
cld
mov
cmp
xor
fisttpl
pop
pop
outsb
cmpsb
adc
andl
dec
out
mov
push
outsb
ja
dec
jns
inc
push
cmpsl
scas
jg
sbb
pop
idivb
push
xchg
cmp
xor
js
stc
out
outsb
gs
xchg
test
ss
sti
sbb
adc
aad
pushf
adc
fildll
pop
rcrl
push
shrb
lock
test
xchg
inc
hlt
and
inc
push
cwtl
out
iret
xor
push
push
add
dec
add
or
cwtl
or
mov
jae
lahf
mov
call
fdivrl
pop
arpl
mov
add
add
lcall
add
dec
pop
in
push
fcomps
xchg
fidivs
rolb
aaa
mov
pop
mov
sbb
pop
loopne
push
inc
sti
neg
mov
data16
fstpt
int3
sbb
adc
cmpsb
jmp
out
sub
aas
ret
mov
mov
pop
add
push
dec
and
lods
pop
and
mov
push
sub
das
xchg
and
in
fwait
into
dec
xchg
mov
je
push
addl
aad
insb
xchg
cmpsb
loop,pt
stc
or
outsl
or
mov
arpl
enter
pusha
mov
xchg
cmp
xchg
push
dec
cmp
adc
dec
xchg
outsb
mov
fisubrl
pushf
pop
xorb
xor
jmp
dec
int
jl
inc
orl
mov
pop
sub
orl
xor
sbb
cltd
and
jmp
or
push
pop
js
mov
xor
lahf
xor
out
cmp
bound
enter
push
test
js
ss
jle
sbbl
mov
sbb
pop
ljmp
mov
cmp
lret
adc
movsl
xchg
dec
stc
mov
popa
incl
sahf
xchg
in
cld
add
in
or
lea
sbb
or
stos
loopne
jns
cmp
shrb
outsb
mov
jmp
out
aam
xlat
fistps
fwait
call
imul
cmc
adc
xchg
jo
popa
rorb
jo
sub
or
loopne
and
int3
cmc
bnd
mov
outsb
xchg
dec
js
les
js
insb
pop
fisttpl
mov
cs
mov
jnp
adc
cmp
and
popa
push
cs
sub
add
mov
insl
sbb
sbb
mov
insb
fcmovnb
xchg
dec
lret
adc
lcall
aaa
into
cltd
jge
jmp
sub
out
dec
or
jne
dec
add
adc
insb
mov
xor
aad
jnp
iret
cmp
mov
xchg
adcl
shlb
push
add
call
mov
enter
test
and
push
clc
sub
xor
or
jnp
add
aad
addr16
scas
or
cmpsl
xchg
add
xor
addl
and
dec
mov
jno
or
mov
xchg
cmp
les
aam
sub
out
fsubrl
inc
add
scas
out
in
lds
xchg
icebp
int3
pop
mov
dec
arpl
cmpl
out
mov
adc
cld
fldt
push
jp
adc
cmp
stc
inc
pop
mov
in
dec
repz
outsb
dec
adc
and
pop
and
ja
movsl
stc
mov
push
test
mulb
lcall
mov
arpl
mov
xchg
frstor
or
scas
mov
xchg
out
lods
dec
mov
pop
jle
cmp
lcall
fistps
mov
insl
leave
sub
in
orb
ljmp
add
int
mov
adcl
jg
adc
mov
push
mov
scas
cltd
xor
std
testb
xchg
jo
ja
das
pop
std
xchg
inc
into
fcompl
jg
mov
ljmp
pop
add
or
nop
push
push
test
xor
wbinvd
dec
jne
sub
inc
adc
jg
rcrl
mov
xor
leave
jbe
insb
mov
mov
aas
fsubs
xchg
mov
daa
ja
inc
jle
mov
jb
fisubrs
lahf
outsb
cmc
enter
vmovss
pop
push
jb
push
sbb
and
and
and
pusha
adc
clc
divl
xor
daa
rolb
fsubl
inc
fmuls
pop
inc
mov
fimull
jo
cmp
ud2
sub
sbb
pmaxsw
arpl
lea
xchg
aaa
lock
repz
movsl
mov
jne
or
test
push
mov
add
lds
xor
loop
aad
movsb
out
aad
pop
push
mov
pop
leave
cmc
lret
movsl
pop
cmpl
dec
sbbl
and
ret
out
aad
movsl
sbb
add
sub
mov
popl
mov
addr16
loop
mov
out
cmp
outsl
sbb
pop
inc
into
in
into
faddp
lods
adc
int
fnstenv
es
std
mov
hlt
xchg
fs
rcll
add
leave
push
inc
cltd
sbb
add
lret
movsl
addr16
dec
mov
call
mov
dec
or
sub
sahf
cs
push
out
and
dec
push
or
mov
les
xchg
adc
adc
cmp
in
inc
popf
mov
sbb
test
cmp
ret
and
in
fistps
insl
adc
and
inc
pop
push
mov
xor
sub
fucomp
add
push
shll
lods
pop
pop
sti
lock
cmp
mov
mov
push
gs
mov
add
ljmp
and
pop
sbb
xor
push
jp
mov
adc
pop
call
inc
and
push
stos
sub
mov
cwtl
push
mov
sar
push
shl
testl
add
mov
xlat
jl
je
stos
cmpsb
mov
fsts
pushf
jl
dec
fwait
dec
dec
lret
or
outsb
test
and
jne
mov
js
push
adc
dec
inc
or
pop
mov
lea
hlt
in
push
pop
push
into
jle
lret
fcmovnb
pop
mov
fsub
jecxz
outsl
popa
jl
scas
testl
adc
jne
mov
test
mov
cmp
jns
cmp
xlat
int3
xor
daa
and
xchg
pop
dec
xor
or
pop
filds
stc
pop
notb
sbb
cwtl
sub
inc
mov
ds
cwtl
jle
cmpsb
mov
pop
lock
scas
popf
fcmove
aam
out
inc
mov
sub
sbb
ret
clc
call
xchg
pusha
push
stos
leave
ret
in
push
cs
inc
pop
mov
in
das
adc
in
lret
test
mov
push
push
in
or
loop
pop
pop
ljmp
xchg
mov
adc
inc
lahf
or
inc
cltd
leave
mov
push
sbb
add
or
test
adc
repnz
cltd
addr16
mov
pop
mov
mov
popa
imul
sbb
fxch
add
fucom
cs
rolb
mov
mov
pop
adc
in
repnz
push
mov
icebp
mov
cwtl
leave
cmpsb
movsb
jae
sbb
out
jo
sbb
pop
aad
xchg
out
rclb
push
stos
jmp
add
add
sbb
in
gs
lret
lret
pop
loope
xor
jecxz
ljmp
out
js
repz
rorl
and
mov
aad
cmpl
or
mov
cwtl
ss
pop
adc
call
fsubrl
add
xchg
cmp
fwait
sbb
adc
or
adc
outsb
mov
cmp
jmp
dec
xor
and
dec
cmp
jmp
outsb
sub
jp
dec
testl
aaa
sti
push
in
jne
xor
imul
mov
ret
sarb
into
mov
lods
adc
insl
cmp
cltd
scas
insb
cmp
std
pop
insl
scas
fst
inc
pop
jb
sti
stos
sub
cltd
loop
xlat
mov
push
int3
orb
inc
jle
and
es
inc
jg
pop
pop
inc
jl
clc
pop
cmp
stos
bound
loop
pop
sub
mov
push
lret
call
push
ret
dec
or
jbe
pop
or
movsl
arpl
inc
dec
mov
dec
fdivrs
push
cmpsb
mov
mov
aad
ds
sahf
xchg
pop
test
mov
mov
sub
inc
imull
test
or
cmp
loop
xor
and
sbb
jae
pop
pop
sbb
test
xchg
ss
jae
mov
adc
repz
jge
sub
addl
ss
adc
jnp
adc
adc
ficoms
and
push
pop
dec
mov
jp
add
cmp
cmp
adc
add
cmp
ds
cmp
sub
cmc
inc
jmp
in
mov
pmuludq
mov
aas
pop
jg
jle
xchg
nop
out
adc
adc
dec
add
into
loope
dec
mov
xchg
loope
push
mov
or
popf
mov
daa
bound
adc
enter
mov
repnz
mov
mov
push
mov
ret
cmp
or
mov
addr16
xchg
mov
fcoml
loopne
fnstenv
popf
sbb
or
loopne
dec
adc
dec
fcmovnb
ret
fildll
data16
fisubs
das
fsubrl
jne
cwtl
lret
shll
dec
mov
test
jge
add
push
clc
jb
jb
daa
dec
imul
mov
in
fwait
or
xchg
icebp
ffree
dec
sub
xchg
ljmp
lock
cmp
push
movl
xor
add
push
xor
repnz
repz
mov
and
dec
sub
inc
fimull
add
cmp
into
jnp
jnp
add
jb
test
js
in
add
jns
inc
mov
out
sub
stos
addb
leave
push
xchg
push
push
fisttpl
cmpsb
inc
jb
cmp
jae
lds
mov
and
fcom
aaa
cltd
imul
and
imul
hlt
inc
stos
sub
mov
lcall
lods
mov
pop
fdivs
adc
push
ss
insl
into
xchg
dec
rclb
mov
mov
jl
aad
add
loopne
mov
sbb
insb
jae
pop
mov
es
mov
lahf
stos
or
xchg
cmp
aad
std
cld
sbb
jbe
iret
insb
or
xorl
xor
and
loop
sbb
dec
sub
xchg
sub
or
mov
decb
jmp
test
fcmovnbe
shlb
mov
sub
pop
psubd
dec
call
dec
call
xchg
stos
pushf
subb
xchg
mov
push
sbb
sbb
dec
cli
fisubrs
jo
sbb
xchg
outsl
incb
call
loopne
rcll
pusha
mov
sarl
scas
inc
cmp
cltd
scas
inc
gs
inc
lds
jmp
inc
dec
popa
pop
mov
adc
popf
test
push
dec
test
jno
in
cmp
or
push
dec
adc
cld
jne
mov
inc
xlat
sub
cmp
cmp
fwait
lret
mov
cmp
repz
sahf
pop
testl
push
xchg
js
cmp
or
lcall
bound
call
mov
mov
clc
das
inc
lahf
jb
xor
inc
mov
xchg
push
jp
scas
push
mov
and
fisttpll
fs
les
add
cmp
cmp
cwtl
jmp
jae
ss
adc
mov
outsl
jmp
xor
xchg
push
ficompl
scas
iret
in
out
adc
sbb
jnp
popa
pop
push
and
dec
faddl
mov
add
mov
cmp
rclw
test
or
dec
add
mov
sbb
and
xchg
out
xor
and
dec
popa
jmp
lahf
jl
mov
jge
das
fidivrl
fucomi
fwait
xchg
xchg
add
call
out
lcall
cltd
das
push
mov
mov
aam
jbe
stos
out
jl
xchg
ja
dec
jmp
in
lods
adc
sub
xor
mov
jp
lcall
jbe
or
mov
loope
cld
loope
sahf
adc
push
out
inc
mov
imul
mov
adc
adc
add
sbb
cmp
sub
push
pop
adc
pop
es
jge
xchg
pop
div
inc
jno
lock
push
mov
push
idiv
ret
dec
jmp
ss
jb
addr16
movsl
sub
cmc
repz
sbb
les
dec
sahf
fildl
test
xchg
jmp
aad
js
cwtl
sub
sbb
rcrb
pop
inc
xchg
mov
adc
mov
lret
dec
xchg
inc
xchg
insb
add
inc
sbb
or
inc
popa
leave
pop
xor
ljmp
mov
cmp
pusha
cwtl
jbe
pushf
scas
add
loop
mov
xchg
pop
ds
push
dec
imull
xchg
rcll
leave
and
lds
aas
out
cmp
mov
ret
into
xchg
and
xor
xchg
inc
sti
ss
arpl
adc
xor
stc
lods
loope
push
sbb
cmp
ret
sbb
add
addl
cli
ljmp
pop
push
sahf
sub
leave
in
add
pop
cmp
cmc
inc
fisubl
pop
bound
or
rcrl
mov
xor
dec
subl
dec
dec
lods
jo
fdivl
outsb
mov
in
jnp
test
enter
mov
sti
fimuls
jl
ret
out
decl
lret
or
out
xchg
in
loopne
mov
daa
int3
sbb
or
imul
adc
and
add
and
aaa
mov
cmp
add
cs
gs
ljmp
xor
movsb
jne
push
movsl
or
sti
push
rclb
mov
rolb
cmp
outsl
lret
jbe
push
jne
testl
dec
mov
iret
pop
repz
mov
xchg
sbb
je
mov
pop
pushf
outsl
add
iret
repnz
push
xchg
jle
pusha
repz
cmp
cmp
dec
scas
mov
pop
loopne
adc
inc
movsb
rol
mov
inc
sub
ret
dec
jo
outsb
dec
xchg
adc
es
jno
ret
or
fld
hlt
cmp
mov
loopne
shll
xor
push
xor
sbb
xchg
mov
push
mov
mov
rcrb
sub
xlat
push
fisubrl
add
bound
xor
scas
push
push
mov
mov
mov
dec
ss
insb
cmp
mov
bound
lods
push
bound
mov
jmp
cltd
pop
mov
jle
lret
lods
adc
mov
insl
jg
push
push
add
mov
xchg
pop
in
pop
adc
std
in
mov
jmp
sub
mov
idivb
jbe
repnz
inc
mov
mov
mov
repz
rcrb
roll
xchg
xchg
xor
mov
add
push
idiv
aad
adc
jnp
or
and
mov
push
sbb
push
xchg
jle
jl
xchg
lcall
icebp
inc
add
xor
inc
mov
dec
push
sbb
out
sub
mov
jnp
mov
jg
je
mov
mov
inc
rolb
enter
aam
mov
mov
pop
pop
xchg
pusha
xchg
mov
dec
icebp
cmp
dec
and
pop
push
fdivr
sbb
sbb
mov
pop
mov
subb
shlb
cli
mov
jle
ficoml
testl
daa
test
push
clc
lcall
xor
push
inc
out
xor
sbb
fiadds
mov
sbb
repnz
add
das
jns
pop
cmp
mov
mov
adc
xchg
lods
xchg
xchg
mov
loop
shrb
cmpsb
inc
cmp
adc
jb
dec
mov
inc
mov
add
pop
outsl
rol
test
sub
aam
fistpl
fmull
fidivs
fdivrl
jne
xchg
cmpsl
out
xchg
test
mov
and
es
or
mov
leave
into
js
xchg
and
xor
into
mov
js
dec
stos
sbb
outsl
mov
fidivrl
ljmp
testl
icebp
jno
imul
pop
push
aaa
or
adc
lcall
mov
ret
or
das
out
inc
xor
out
popl
sub
stos
and
in
fmull
cs
test
mov
fisubrl
cs
adc
lds
xchg
clc
fsubs
xchg
xor
div
sub
bnd
xor
stc
outsb
push
push
jmp
or
fcom
xor
icebp
lods
xor
in
mov
sub
mov
pusha
xlat
rcrl
sbb
and
outsb
jp
cmp
sub
dec
cli
fiaddl
push
call
or
outsb
outsb
mov
adc
daa
adc
shl
out
es
stc
xor
iret
and
testb
shll
xorb
insl
mov
lock
adc
popa
mov
repz
pop
pop
mov
sub
push
or
lock
cwtl
xchg
add
mov
pop
dec
js
movsl
loop
push
push
fstpt
jno
push
adc
inc
push
lcall
add
out
es
lods
sahf
fidivl
lock
add
movsl
fcomp
ds
addr16
sub
mov
mov
sub
inc
or
sub
fwait
adc
lret
and
stc
and
dec
cli
nop
add
cld
sahf
testb
sbb
and
nop
or
in
mov
int
sub
aam
push
js
fwait
xlat
gs
jg
movsb
or
scas
cli
jo
aaa
mov
jl
and
pop
dec
dec
imul
mov
jae
inc
mov
jae
js
add
movsb
sbb
mov
es
and
repnz
sbbl
mov
jg
push
icebp
rclb
add
test
inc
repz
and
aaa
addr16
jb
rcpps
imul
or
and
pop
mov
or
rolb
jmp
aaa
push
testb
jle
aad
insb
movsl
xchg
inc
mov
push
push
rcrl
push
rclb
fnstenv
xor
adc
dec
push
sub
mov
shll
or
mov
lret
inc
cld
pop
gs
fwait
out
inc
mov
mov
add
outsl
fmul
insb
dec
pop
xchg
cmp
add
xor
mov
xchg
int3
push
pop
fdivl
pop
push
adc
pusha
ljmp
cmp
push
inc
jecxz
pop
xchg
shll
shrl
lahf
addb
rorb
xor
push
mov
out
dec
sub
ss
add
movsb
xchg
popa
and
sub
clc
out
mov
outsb
or
mov
push
push
sbb
xchg
in
dec
cmp
ret
scas
jae
or
push
mov
pop
mov
out
xchg
in
ja
lods
push
jg
mov
pop
mov
data16
in
cmp
add
mov
clc
jnp
dec
inc
sub
xchg
aam
or
mov
pop
nop
jg
out
loopw
mov
or
xchg
subl
dec
movb
xchg
inc
or
jae
stc
jp
fcoml
push
pop
push
push
adc
adc
testb
imul
cld
inc
fcompl
cmp
mov
xchg
xchg
int
or
push
adc
cltd
lock
push
sbb
cmc
les
inc
fs
aas
pop
jecxz
pop
add
mov
lock
add
sub
stc
inc
ja
inc
pop
jecxz
out
dec
ret
clc
lahf
mov
or
scas
or
push
stos
push
jno
in
inc
jno
inc
or
hlt
mov
jp
sub
pusha
and
ja
sub
inc
data16
repnz
sbb
lret
dec
push
mov
jne
roll
pop
popf
xchg
fs
or
ljmp
out
aam
xor
xor
adc
mov
stos
rolb
dec
xor
sub
out
mov
dec
arpl
pop
pop
setns
cmc
push
shlb
add
and
push
adc
sarb
xlat
jae
in
xchg
jg
push
xor
dec
push
loopne
hlt
and
xchg
mov
xor
pop
out
sbb
sti
pop
cmp
xchg
mov
mov
pop
pop
jbe
push
pxor
repnz
shrb
mov
cltd
hlt
mov
fildl
sub
das
sub
cmp
inc
jmp
xor
sbb
lock
das
cwtl
lret
xchg
xlat
cmpsb
fisubs
mov
jp
cli
cld
adc
adc
mov
mov
adc
scas
xlat
out
inc
mov
repnz
stos
icebp
push
lock
test
jl
popa
cmpsb
mov
xchg
lahf
fildl
or
push
cwtl
mov
mov
insb
pop
popa
fisubl
daa
push
daa
pushf
cmp
loop
fildl
shll
test
rcr
fistpl
fmulp
repnz
fidivrl
mov
cmp
sahf
xorl
mov
bound
mov
or
pop
xor
sub
mov
push
push
push
inc
inc
push
mov
fwait
pop
and
sbb
loop
mov
loopne
cmc
lods
imul
leave
mov
rcrb
mov
repz
add
mov
out
sub
xchg
out
testb
aad
push
lahf
sbb
repz
daa
inc
leave
dec
insl
vmread
cmp
add
leave
sub
mov
pop
mov
inc
pop
fisubrs
ljmp
push
orl
sahf
mov
adc
adc
out
scas
ja
cmp
jmp
push
gs
mov
leave
mov
cmp
mov
sahf
rolb
or
sti
loope
inc
fildl
or
mov
mov
flds
xor
xchg
mov
imul
sbb
sbbb
inc
jb
cs
rcr
mov
cmp
pop
inc
sub
lahf
inc
dec
adc
pop
int
loopne
ficompl
adc
push
inc
cld
outsl
div
push
mov
xchg
ss
cmp
jns
movsl
mov
dec
and
cltd
mov
sub
cmpsb
es
loope
push
jne
push
pop
es
jmp
or
ret
loope
outsb
pop
mov
mull
daa
jmp
dec
push
or
iret
mov
sub
xorb
rorl
adc
popa
dec
cld
data16
sub
insb
psadbw
shr
shll
rorl
mov
pop
out
ret
cs
scas
cmp
sahf
cmc
movsl
sub
inc
es
lret
sub
addr16
push
xchg
mov
es
inc
ror
push
fsubrs
pop
jge
xchg
xchg
xor
mov
adc
test
xchg
int
repnz
push
push
add
sub
or
adc
lea
imul
mov
sbb
lcall
xchg
rcll
lret
xorl
std
arpl
repz
sbb
xlat
mov
or
loope
xlat
mov
inc
stc
popa
push
jp
add
pop
mov
dec
cmp
shll
and
jbe
scas
xorl
ljmp
pop
sub
call
push
cmpsb
cld
sahf
dec
lods
inc
xchg
xor
into
pop
xor
adc
into
xchg
popf
dec
push
dec
or
out
test
aas
fnstcw
push
inc
mov
xor
in
dec
rcrb
in
js
sbb
mov
jl
mov
jmp
jp
clc
dec
or
xor
xchg
mov
and
ljmp
add
mov
xchg
adc
xchg
lods
cmp
push
pusha
sbb
push
push
pop
fcmovu
add
xlat
push
adc
sub
xchg
in
xchg
or
cmc
sub
mov
nop
mov
push
test
jg
ds
loopne
test
fwait
loop
add
mov
mov
ss
in
cs
jb
jne
sub
adc
pushf
jo
mov
jno
arpl
js
cld
mov
mov
add
sub
stos
dec
or
sub
out
inc
mov
lods
outsl
jmp
dec
int3
or
add
arpl
lcall
dec
ja
sbb
jg
push
pop
mov
insb
push
or
sbb
ror
stos
pop
out
mov
stc
mov
cmp
loopne
daa
inc
mov
icebp
stc
rolb
mov
sti
cld
outsb
cmp
int3
out
mov
cld
pop
repz
xor
lods
lods
mov
inc
sarl
or
dec
fsub
mov
leave
sub
sbbl
jne
sub
aaa
out
ja
cmpsb
jbe
dec
mov
inc
adc
lcall
orl
or
xchg
mov
ss
and
pusha
inc
add
sbb
arpl
jbe
or
scas
addr16
ljmp
leave
mov
lahf
ljmp
inc
dec
popl
push
lcall
jne
mov
rcrb
fdivs
cs
std
jo
cwtl
cmpsb
adc
push
lret
sub
fidivrs
cmp
adc
rorb
add
out
in
arpl
test
jg
ret
inc
scas
imul
imul
mov
xor
cmp
xor
pop
pop
hlt
push
imul
cmp
int3
adc
fnstcw
pusha
pop
mov
mov
rorl
das
add
cmp
push
lods
std
cmp
icebp
xchg
daa
push
pop
mov
push
jnp
rol
pop
jp
movsb
jge
mov
adc
mov
aad
and
jae
addb
fisttpll
xchg
lods
or
mov
jbe
pop
mov
enter
adc
xor
loopne
mov
in
cmc
dec
and
sbb
jnp
in
jne
add
and
xchg
addr16
inc
mov
xor
jmp
sbb
sbb
push
cmp
mov
aas
xlat
inc
loope
push
and
gs
imul
jg
jae
insl
sbb
movsb
push
sub
inc
mov
jnp
jbe
test
test
xorb
mov
push
push
orl
mov
pop
xchg
dec
leave
mov
xor
pop
add
mov
xchg
and
sub
push
cmp
jns
pop
sbb
inc
pop
sbb
daa
insl
fsubl
push
inc
cmp
mov
jno
ss
mov
mov
js
mov
xchg
mov
mov
rolb
add
dec
push
add
dec
les
es
in
cli
inc
ss
sbb
pop
mov
popf
ret
out
mov
andl
repz
je
dec
add
rcr
in
outsb
mov
cmp
mov
inc
mov
stos
lahf
aad
in
lds
or
cwtl
sub
mov
adc
add
push
subl
jb
data16
outsl
ja
add
mov
sbb
inc
adc
stos
xchg
pop
test
lock
and
jl
mov
xchg
mov
mov
stc
aad
les
cli
sub
jl
adc
sub
movsb
inc
fsubr
lcall
movsb
bound
out
jl
dec
cmc
sti
add
add
mov
or
dec
fstpl
lea
sub
mov
out
push
fwait
pop
scas
pop
lds
or
inc
test
dec
adcb
or
fildl
add
fisubs
sbb
shrb
dec
das
push
jge
push
pop
paddb
neg
cmpsl
adc
fsubs
and
outsb
ret
sbb
add
shlb
or
out
cli
dec
cmp
xor
xor
popf
xchg
fimull
sbb
scas
and
insb
shr
sbb
mov
in
xor
jl
unpckhps
xchg
in
nop
andb
dec
pop
repnz
loop
das
cmc
gs
pop
mov
dec
xor
xor
out
add
jge
mov
push
dec
mov
xchg
cs
adc
ret
dec
xor
adc
mov
xchg
movsl
push
push
cmp
inc
jg
arpl
fsubrl
stc
out
mov
movsl
xor
or
rol
gs
shlb
ljmp
add
xchg
and
ss
or
add
lds
scas
pop
repz
xor
xchg
ds
stc
mov
sub
cmc
jl
das
loope
cld
cwtl
xchg
pop
push
popa
sbb
push
mov
dec
mov
fwait
cltd
xor
lahf
jb
rolb
adc
mov
aam
bound
adcb
cmpsl
rcl
cmpb
rol
daa
mov
mov
ss
test
scas
out
stc
clc
mov
adc
adc
insl
push
lret
pop
or
ret
lods
movsl
es
repnz
cwtl
add
lds
add
aam
das
pushf
mov
mov
or
out
pop
roll
inc
adc
mov
imul
add
and
shrl
test
cmp
scas
sti
js
movsb
push
xor
jle
mov
push
fisubrl
push
jo
nop
std
in
loopne
andl
mov
int3
mov
add
movsl
lcall
xor
arpl
mov
mov
testb
or
inc
jae
shrl
cs
add
mov
arpl
loope
ja
aad
dec
inc
xchg
imulb
xchg
stc
pop
lods
inc
loopne
xor
pushf
ret
lock
dec
in
or
sti
xor
jecxz
enter
dec
xchg
mov
out
scas
cmc
xor
mov
sub
nop
sub
lret
pop
out
inc
cmpsb
pop
push
xchg
jge
jns
pop
scas
je
mov
add
mov
pop
iret
shrl
insb
dec
dec
lcall
jmp
or
out
into
cmovne
loopne
aaa
ds
sbb
dec
fcomps
jmp
pop
jge
adc
cmp
arpl
insb
in
pop
lods
and
xor
lcall
popf
insl
pop
mov
push
scas
jno
push
or
rclb
lea
and
int
cmp
incb
jmp
shll
mov
call
sti
cmp
xor
stos
outsl
stos
test
mov
lods
insl
jg
xchg
xor
push
or
in
inc
icebp
roll
sbb
iret
or
and
int
adc
push
jne
pop
xor
das
je
jns
in
jb
jl
into
popa
mov
or
ret
jns
adc
out
rorl
mov
lret
dec
es
ds
pop
sbb
rcl
jno
adc
dec
xor
inc
push
js
jno
mov
push
fwait
pop
aad
pop
push
jge
decl
int3
inc
fisubrl
cltd
adc
adc
dec
shl
jbe
or
xchg
adc
mov
divb
test
mov
imul
pop
pusha
cmpsl
icebp
dec
jmp
movsb
das
push
or
adc
pop
ljmp
jae
popa
sti
adc
movsl
movsb
add
sub
pop
add
push
test
bound
push
pop
out
pop
mov
inc
js
adc
sbb
sarl
arpl
or
call
dec
subl
inc
mov
cmpsb
dec
test
mov
pop
fildll
xor
stos
dec
dec
sbb
popa
icebp
mov
mov
cltd
jle
shll
xchg
loop
sbb
js
mov
jmp
jg
jns
sahf
in
xor
mov
scas
imul
push
shll
loopne
sbb
pop
je
push
loop
inc
push
je
cmp
xchg
mov
mov
and
push
repnz
pop
add
jae
lock
or
out
add
in
pusha
imul
outsb
and
inc
aam
gs
lds
jae
shr
enter
push
stc
mov
dec
cs
lcall
sbb
dec
ss
mov
inc
sub
add
xchg
fbstp
pusha
cmp
and
ret
fnstsw
gs
ljmp
mov
add
int3
add
mov
fcmovnu
sub
mov
push
xor
sbb
in
adc
je
push
xchg
inc
outsb
insl
inc
pop
outsb
inc
jb
addl
and
jno
sar
lock
or
int3
adc
sub
sub
popf
ljmp
nop
xor
or
mov
inc
setae
mov
mov
mov
xchg
mov
int
mov
popa
push
mov
mov
jns
int
hlt
retw
nop
fmull
mov
pop
test
mov
jns
cmp
ljmp
cmp
mov
mov
test
idivl
out
hlt
and
lods
and
loope
jmp
adc
sti
nop
cmp
call
test
std
ror
pop
mov
cmova
mov
xor
sbb
mov
gs
pushf
xchg
pop
aad
pop
jecxz
fwait
sbb
inc
inc
mov
inc
cs
or
cwtl
lods
mov
in
sbb
ja
or
inc
mov
add
dec
xor
jecxz
dec
bound
adc
add
cmp
leave
pop
fst
fs
fnstsw
rclb
sbb
jecxz
sbb
sub
xor
aaa
loope
test
push
stos
push
call
xlat
mov
fsubs
lahf
outsb
lods
stos
pop
lock
inc
or
mov
inc
xchg
fnsave
mov
mov
add
push
push
fimuls
nop
push
movsl
pop
shlb
hlt
lea
nop
xor
push
cmpsl
stos
outsl
adc
je
and
mov
mov
fmuls
jge
cmpl
insb
mov
cli
idiv
shr
sbb
outsl
sahf
xor
jl
and
inc
xor
dec
mov
and
add
cli
mov
jne
jae
test
lcall
mov
nop
sbb
push
push
mov
push
cmpsl
in
inc
inc
sub
ret
push
insb
mov
ror
addr16
inc
movsb
stos
sbbl
jmp
fstpl
iret
int
fwait
enter
mov
cmp
push
ja
lods
mov
ljmp
movsb
popa
xor
cmpb
dec
in
add
add
sbb
mov
cmpsb
sti
and
push
lret
jbe
out
testl
insb
and
loop
icebp
fisubrs
push
and
rcll
push
cmp
or
adc
jnp
mov
lods
add
cmc
dec
mov
imul
popf
jle
adc
or
out
and
into
in
pop
imul
xchg
pop
fmulp
add
jle
or
movsb
mov
addr16
xor
or
xlat
mov
lret
add
or
sahf
mov
inc
es
pop
add
daa
push
xchg
scas
mov
int3
test
fidivrl
pop
mov
sub
in
push
inc
int3
scas
mov
outsb
popf
cmp
sbb
adc
cmp
pushf
push
xlat
js
lds
sub
add
push
fidivs
inc
xor
lahf
testb
pop
scas
jo
push
aaa
clc
sete
stos
sahf
dec
xchg
mov
repnz
loope
and
pop
push
pushf
xor
pushf
mov
and
mov
add
icebp
sub
push
ret
lret
stos
inc
add
pop
jle
pop
dec
test
add
and
mov
arpl
sub
out
push
movsl
mov
push
fisubl
mov
leave
mov
movsl
adc
les
aaa
lods
sub
scas
dec
fldcw
pushf
cmpsb
or
daa
dec
dec
adc
jmp
jg
fimuls
and
jecxz
les
inc
jno
mov
mov
sbb
sbbl
lahf
jp
xchg
std
xchg
jo
nop
jne
sarl
xchg
inc
shl
hlt
jle
outsb
inc
add
lods
lret
xchg
adc
pop
std
sahf
popf
scas
out
mov
mov
pop
cmp
subb
inc
fs
sahf
les
and
mov
loope
mov
push
das
mov
loopne
dec
add
pop
insb
and
leave
nop
movsb
mov
push
jecxz
jne
jl
ficompl
sbb
jbe
outsl
scas
stc
cwtl
push
cmc
and
out
loop
and
fldz
icebp
mov
lahf
lret
adc
rep
mov
icebp
emms
cmp
jmp
jg
xor
aas
lock
jns
icebp
inc
cmp
sbb
xor
fdivrp
ficoms
daa
mov
stos
xchg
adc
or
je
rcrl
xor
cmp
push
insl
add
and
sbb
cmpsb
loope
inc
gs
mov
loop
pop
stos
lea
jl
dec
or
inc
sarb
mov
fbld
mov
sar
fs
xor
mov
add
add
mov
fwait
cmp
push
sub
loope
jae
mov
jmp
gs
in
sar
pop
aas
xor
or
add
fstl
xchg
call
adc
push
pop
sub
repnz
add
loopne
lods
arpl
test
sub
xor
stc
lods
sub
xchg
mov
arpl
ljmp
stc
out
out
pop
jnp
mov
cmp
sti
pusha
cmp
les
fnop
mov
xchg
vpunpcklbw
lods
lods
mov
sub
sub
lods
insb
arpl
jo
adc
xor
push
adc
addl
movsb
lods
cmp
inc
shrl
jno
cwtl
inc
jg
jbe
mov
cmp
pop
jbe
and
jno
push
scas
int
mov
out
jg
lahf
inc
adc
daa
ret
out
mov
add
loopne
adc
xor
fwait
insb
or
cltd
and
dec
test
ljmp
loope
push
cld
add
mov
pop
push
mov
data16
or
js
test
fwait
int
pop
sbb
lock
mov
notb
shlb
loope
mov
and
in
addr16
xor
push
jbe
popa
sub
orb
pop
mov
add
loop
mov
dec
les
aaa
sti
es
or
mov
xor
ja
aas
inc
jo
popf
popa
jb
cmpb
popa
lahf
mov
pop
sub
add
out
dec
mov
sbb
inc
imul
dec
push
ret
in
sbb
sbb
mov
jo
mov
mov
aaa
mov
jmp
hlt
repz
nop
cmpsl
jnp
or
or
js
push
and
scas
std
jg
jmp
scas
jno
test
or
movb
into
lcall
jecxz
stc
sbb
adc
or
jg
scas
ja
lock
xor
das
xchg
and
and
rolb
xchg
outsb
mov
mov
push
sbb
movsl
int
push
sub
inc
cwtl
cmp
or
adc
xor
cmp
sbb
mov
add
mov
mov
stos
mov
repnz
movd
shll
fildll
and
shrb
loop
and
popa
or
push
xchg
nop
or
lea
adc
pop
in
mov
push
loop
xor
nop
out
fs
jne
push
loope
lock
fcmovbe
imul
shlb
pop
test
aam
pop
iret
daa
ficoml
mov
stos
xor
jnp
js
aad
repnz
inc
addb
sbb
js
outsl
jp
push
push
sub
inc
pop
mov
add
cmp
hlt
inc
enter
repnz
mov
xchg
stos
testl
lds
jmp
adc
out
outsl
mov
mov
out
mov
and
imul
adc
mov
jnp
inc
cmp
lods
sti
mov
mov
aam
jae
dec
dec
lock
push
cld
movsl
push
jp
icebp
cmp
nop
scas
lods
mov
add
shrl
push
sar
mov
cwtl
jg
fldl2e
mov
scas
push
popa
cmp
fadd
js
repnz
cwtl
rep
lea
sub
loope
cmp
idivl
sarb
sbb
subps
es
sub
into
fsubrs
shrl
dec
nop
pop
sub
stos
add
loopne
and
mov
orb
jecxz
in
jb
jecxz
test
mov
adc
mov
cwtl
xor
cmp
jno
mov
in
shlb
dec
pop
jo
lea
pop
push
dec
in
xchg
xchg
fnstcw
push
jl
push
mov
jb
aam
mov
test
sub
jl
push
sti
cmc
pop
and
jle
lds
int3
rclb
dec
push
out
dec
cwtl
repz
dec
ja
add
repz
mov
es
inc
xchg
dec
int3
jle
jnp
adc
outsl
xchg
pop
push
mov
loop
and
sbb
xchg
mov
mov
cmp
fisubrl
js
test
mov
cmp
sbb
and
enter
arpl
xor
dec
lods
adc
pop
sub
add
pop
mov
cmpsb
inc
and
push
insl
fiadds
push
test
mov
orb
xchg
sbb
cmp
push
and
mov
lods
dec
ds
ljmp
adc
ret
ljmp
push
fiaddl
lcall
cmpsb
dec
ret
mov
mov
das
movsl
lahf
rcrl
outsb
add
ljmp
sbb
fsub
pusha
push
push
sub
sub
faddl
sahf
jge
dec
cwtl
pop
add
adc
xor
xchg
rorb
mov
push
xor
inc
adc
sbb
pop
jb
sbb
cmpsl
movsl
pop
fwait
rcl
inc
mov
xlat
in
xchg
xor
daa
and
fsubl
fnsave
push
add
adcl
and
cmpsb
add
or
jecxz
mov
fldenv
in
frstor
addb
dec
xor
cmpsl
or
mov
pop
cli
movsb
inc
or
mov
add
inc
in
pop
sbb
sbb
jge
add
add
lret
jbe
ja
push
mov
ficoml
popf
dec
add
popf
cmp
lods
addr16
push
das
mov
mov
dec
ljmp
and
stos
cld
mov
dec
xchg
dec
inc
inc
inc
dec
adc
mov
shl
adc
and
or
and
ljmp
sti
and
pop
ss
add
orb
sub
pop
outsl
push
test
pop
bound
arpl
mov
jne
insb
inc
cmp
jmp
testl
jnp
mov
push
testl
rcr
arpl
pop
sub
cltd
push
adc
lods
loop
rcll
int
pushf
push
or
ret
xchg
mov
xorl
aaa
sbb
cwtl
jnp
xor
ja
shlb
in
sub
pushf
add
jl
test
add
adc
xor
mov
leave
hlt
fiaddl
or
or
mov
iret
in
fistpl
jl
lahf
pushaw
stos
or
movsl
lods
std
dec
add
xchg
cmpsb
add
and
cld
pop
mov
int3
out
sub
scas
jp
insb
sub
leave
pop
add
adc
jb
lds
out
xchg
fdiv
mov
sbb
push
andb
push
repz
out
aam
sub
dec
mov
cmp
add
cltd
pop
jl
mov
imul
xor
xlat
aaa
shl
cmp
xor
sbb
push
mov
xchg
in
jmp
sbb
jno
fwait
sub
ljmp
jbe
mov
sub
jmp
out
and
push
or
sbb
jnp
sub
add
dec
lret
cli
push
mov
jecxz
inc
xor
dec
mov
ret
and
out
lcall
nop
push
aas
in
mov
adc
rol
popf
mov
xchg
mov
aas
aam
cmp
addl
arpl
push
stos
dec
insl
or
insb
ja
shlb
mov
jo
cmp
inc
out
jne
cmp
in
cld
add
xor
jb
loope
scas
das
mov
adc
cmp
mov
insb
jmp
cwtl
xchg
hlt
pop
mov
pop
call
ror
hlt
inc
adc
lahf
jmp
bound
or
mov
adc
adcl
arpl
mov
in
mov
inc
lods
add
jp
test
daa
lea
add
scas
pop
mov
ja
xchg
ficomps
xchg
stc
popf
jmp
sbbl
insb
adc
pop
fidivrs
mov
lcall
sub
icebp
push
xor
les
fwait
lcall
pop
adc
add
xchg
int
inc
xor
popa
pop
arpl
push
push
push
pop
outsl
sub
dec
cmp
jle
les
pop
sub
sti
pop
arpl
xchg
jecxz
aad
inc
cmp
or
mov
push
das
outsb
sbb
xchg
xor
mov
and
sbb
xchg
or
pop
out
ficoms
das
cmp
orl
test
push
lds
int3
roll
les
jl
adc
scas
test
stos
imul
sub
inc
jb
inc
shlb
ds
jbe
jno
cmpsl
cmp
mulb
or
cli
maxps
dec
enter
jle
or
loope
dec
jnp
and
cmp
ficomps
movsl
std
repz
test
pop
mov
js
lcall
cmp
cmc
and
iret
push
stc
mov
mov
push
rol
shll
adc
pop
adc
sub
je
pop
mov
mov
mov
sbb
cmp
inc
lds
pushf
jb
mov
xchg
dec
mov
pop
sub
sub
lcall
xor
pop
fisubl
clc
dec
mov
cltd
in
fisttpl
mov
push
push
jg
push
iret
shlb
les
mov
mov
sahf
push
stos
sub
rcrb
fcompl
xor
iret
pushf
inc
sbb
fisttps
addl
dec
popf
pop
decb
pop
cmp
sbb
lahf
outsb
cmp
ret
jb
jbe
pop
and
push
loopne
gs
rcll
in
in
xchg
xchg
adc
out
cmp
xor
dec
cmp
cmp
xor
lds
mov
test
mov
insb
mov
aam
mov
loopne
pop
mov
ret
adc
lcall
sub
push
pop
mov
and
sbb
inc
sti
ret
inc
mov
ret
loopne
cltd
fmuls
cld
iret
dec
mov
pop
xchg
mov
out
sbb
pusha
push
and
mov
scas
out
out
sahf
push
xchg
jae
cs
cmp
loopne
stc
cmp
aam
popa
jl
xchg
out
lcall
or
imul
jg
jbe
imul
out
das
shl
cmp
jne
adc
shlb
nop
jl
test
mov
jg
inc
in
out
fs
loopne
mov
cmp
es
cltd
cmp
jmp
push
fmuls
es
cmp
mov
push
outsl
sub
mov
cmp
xor
call
shrb
add
enter
mov
xchg
cmp
nop
cmp
xchg
lcall
jge
fists
mov
xchg
dec
stos
push
dec
jp
shl
loop
xchg
hlt
scas
lcall
mov
jo
mov
lret
mov
into
das
mov
lea
inc
jl
cmp
xchg
add
mov
lods
inc
lds
cmp
jno
loopne
sbb
test
insl
sub
or
xor
faddl
cmp
xor
and
adc
jae
test
cmpsl
lret
pop
xor
addb
in
or
mov
aam
push
dec
sub
int
cmc
jge
xchg
les
insl
in
in
mov
cld
test
xchg
add
and
lahf
mul
popa
dec
insb
mov
ja
pop
and
add
mov
scas
cmp
push
or
push
xor
fwait
dec
dec
mov
clc
jne
sub
add
iret
jne
fs
in
jle
xor
jp
lret
lds
jmp
sub
or
pop
popf
xchg
mov
dec
cmp
aaa
cmc
push
push
xlat
add
lods
cmp
sub
in
in
lock
jno
gs
push
jmp
and
rcrl
mov
pushf
test
pusha
jle
mov
cs
pusha
xor
fwait
adc
and
inc
dec
fs
cs
xchg
or
pop
inc
lcall
arpl
pop
fcomip
pusha
in
pop
insb
nop
xor
jne
rcrl
lcall
std
jb
push
or
mov
test
ja
sub
decl
jo
pop
sbb
in
and
jmp
mov
ss
aas
mov
in
mov
push
mov
mov
ljmp
pop
mov
sub
outsl
or
mov
jl
or
ss
push
insl
jg
cli
gs
xchg
stos
jmp
dec
mov
stc
cmp
pushf
push
idivl
push
mov
mov
mov
jecxz
pop
xchg
xchg
movsl
int3
fcomps
loop
dec
mov
jne
inc
stc
xor
inc
mov
xchg
test
inc
mov
movsl
mov
push
lods
stc
rcrb
sbb
shr
and
mov
mov
enter
mov
shll
sub
stos
inc
dec
adc
adc
pop
inc
stc
iret
add
mov
or
jmp
loopne
xchg
inc
int3
mov
ret
mov
orl
rcrl
sub
mov
enter
or
sbb
clc
aaa
inc
pop
inc
adc
loopne
mov
stc
pop
mov
pop
test
sahf
sarl
pop
dec
dec
bound
pop
pop
inc
scas
mov
jb
ja
or
push
push
mov
xchg
aas
leave
and
mov
jmp
int
adc
mov
negb
jg
int
xchg
outsb
ja
xlat
mov
in
loope
adc
xlat
inc
in
in
add
popf
sub
out
sbb
insl
add
movsb
jns
and
and
adc
repz
and
sarb
in
rcrb
mov
xchg
in
in
and
aas
jmp
or
movsb
rcll
fs
sbb
pop
btl
ljmp
call
pop
arpl
pop
dec
lahf
xor
es
xchg
sarb
cmc
pop
push
out
rcrl
mov
sub
fimuls
push
ret
jb
in
pushf
ret
fistpll
gs
xchg
lock
in
pop
cmp
out
ljmp
addr16
cmc
sbb
std
bswap
lock
clc
pop
dec
cmc
pop
add
fs
jbe
mov
int3
dec
fisubrl
imul
mov
xor
and
mov
lods
fwait
cmc
out
push
push
xlat
pop
xchg
lods
and
gs
pop
scas
dec
xchg
rcrl
xchg
repz
sbb
in
pop
jl
xor
js
scas
dec
mov
mov
repnz
aam
arpl
push
xchg
or
stos
push
daa
push
mov
adc
dec
outsl
push
mov
mov
cmp
cwtl
cmp
mov
fnsave
jp
imul
aad
cmp
shlb
sti
push
sbb
jbe
mov
jae
jbe
pop
push
push
mov
dec
arpl
ja
pop
test
push
imul
lds
jbe
scas
arpl
adc
idivl
push
dec
mov
adc
lods
xor
jl
sarb
rclb
shll
cmp
sti
sub
jb
xchg
xor
popf
loop
pop
mov
mov
sub
mov
shl
push
add
xchg
leave
cld
pop
jb
jne
scas
test
inc
mov
adc
data16
sub
gs
or
rcll
out
jae
int
adcl
cmp
mov
lds
lods
pusha
lock
pop
adc
cmpsb
cmpsl
add
mov
loop
repnz
pop
lds
jno
sarb
xchg
aaa
loop
cld
idivb
dec
cwtl
inc
jne
sbb
cmc
cmpsb
cs
outsb
shll
orb
jp
in
and
or
xor
jge
inc
mov
rolb
stos
aaa
std
pop
ret
outsb
in
repnz
fs
jg
mov
and
inc
lock
jns
pop
popf
roll
adc
js
jo
test
aad
out
adc
push
lahf
push
sbb
mov
pop
aas
leave
or
mov
jle
sub
jmp
and
inc
out
inc
scas
inc
sbb
int3
mov
cmp
frstor
test
or
cwtl
cmpsl
out
xchg
rol
cmpsb
jno
mov
or
or
dec
loopne
cmp
lock
xor
and
xlat
mov
push
addr16
mov
or
pinsrw
xchg
inc
aad
inc
push
push
ss
mov
arpl
cwtl
cld
mov
jne
mov
jle
xchg
dec
cmc
and
cs
je
cmp
pushf
fdivs
jno
insb
xor
subb
dec
iret
pop
xchg
sub
icebp
jb
pop
icebp
dec
inc
aam
insb
pop
daa
rorl
loopne
inc
mov
sbb
adc
xchg
pop
mov
insb
jecxz
mov
orb
repnz
push
cld
mov
pop
push
aam
sbb
dec
lods
sbb
dec
or
cmp
popf
fstps
jnp
mov
cmc
insl
filds
addb
sbb
xor
icebp
push
or
add
shlb
into
adc
dec
mov
in
pop
adc
in
and
sub
movsb
ss
push
repz
rcr
orl
adc
rorb
cmpsl
pop
xorl
sub
dec
adc
popa
pop
js
lret
jnp
sbb
sbb
jne
sub
xchg
add
into
fsubs
jnp
add
or
sarl
repz
out
ret
adc
loop
adc
rolb
push
sbb
lahf
mov
jge
in
mov
mov
cli
push
into
sbb
dec
ljmp
push
add
int
rsm
cltd
sub
sti
loope
sbb
xlat
jle
mulb
out
pop
xchg
cmp
sti
pop
mov
mov
bound
in
shr
lock
jmp
insl
mov
jecxz
dec
xchg
shlb
fsubrl
lods
pop
xchg
jle
inc
xchg
dec
push
inc
mov
sahf
mov
cmp
mov
loopne
push
mov
fwait
enter
dec
sbb
cli
mov
movsl
push
fwait
dec
in
jnp
jle
lods
or
movb
ss
cmp
pop
mov
pop
cmpsl
sub
add
fcmovne
pushf
and
ds
frstor
outsl
imul
mov
mov
xchg
xor
inc
push
sbb
dec
in
arpl
mov
lea
pop
in
push
ljmp
cltd
and
lret
test
xchg
jecxz
dec
pop
mov
xchg
mulb
in
or
testb
push
bound
add
inc
push
jge
push
pop
push
ds
popf
fcompl
pusha
lahf
pop
ficoms
push
inc
xchg
cmpsb
pop
dec
mov
jno,pt
aaa
pop
shrl
in
mov
mov
dec
sar
jnp
sahf
sti
xorl
dec
pushf
pop
test
jo
out
pusha
jg
shrb
jb
ret
inc
sbb
sub
fwait
add
mov
es
scas
fstpl
add
mov
test
sbb
jbe
incb
mov
fiaddl
ljmp
rcl
inc
mov
and
jns
incb
ja
in
movsl
lcall
mov
test
dec
rorb
into
jns
push
push
in
mov
ss
imul
xchg
lret
pop
mov
xchg
popa
mov
mov
scas
and
addr16
cmp
fsubrs
lret
loope
dec
sub
sbb
popfw
cltd
ret
sub
cmpl
adc
shlb
push
addr16
testl
mov
into
or
daa
pop
addr16
mov
test
mov
push
pop
push
adc
js
xchg
shlb
jl
mov
pop
push
push
in
or
mov
lret
mov
and
cmp
mov
aaa
or
add
mov
lahf
inc
ljmp
cmp
sub
mov
xor
call
shlb
jecxz
adc
dec
xor
add
jbe
xor
mov
adc
aam
sarb
jno
dec
mov
pop
push
test
popa
xlat
loop
std
mov
add
out
std
mov
jle
stos
test
and
inc
mov
lods
push
repnz
ss
mov
mov
xchg
push
sub
jae
pop
mov
lcall
jge
dec
and
xor
jne
in
lods
push
jo
gs
es
cli
shr
sti
inc
idiv
push
dec
ud0
rcrb
addl
lahf
sub
fnstcw
push
jl
fisttps
movsb
xor
pop
orl
hlt
mov
sbb
and
push
pop
sahf
mov
xchg
div
mov
dec
shr
push
add
or
fs
mov
cld
xchg
inc
dec
aaa
in
add
and
andl
sbb
in
pop
test
das
mov
mov
add
ja
adc
xchg
nop
out
mov
iret
cmpsb
dec
insl
mov
inc
movsb
xchg
hlt
fs
pop
movsb
pushf
roll
or
test
push
sbb
lods
jp
pop
fcoml
jecxz
and
loop
mov
shlb
arpl
dec
jnp
test
mov
sbb
sahf
jbe
inc
in
mov
ds
add
dec
xchg
fcmovnb
mov
lret
sub
jbe
inc
lods
xor
inc
insb
les
cmp
push
inc
out
lods
test
or
xchg
lods
lods
popf
push
ds
dec
insl
stos
and
out
mov
cltd
in
dec
cmpsl
push
lret
lods
mov
movsb
xchg
in
inc
inc
ret
jmp
cmp
subl
adc
xor
push
stc
jp
xchg
jo
pusha
jmp
test
les
fs
in
popa
imul
daa
fmull
inc
sbb
sbbl
icebp
pop
pop
mov
jecxz
add
inc
lods
shrb
mov
popa
jo
ret
aam
cmp
xchg
mov
std
cmp
shl
btr
cmpsb
xchg
xor
out
push
and
notl
mov
jl
dec
pop
inc
mov
xchg
xchg
fistpll
fwait
jns
push
xor
arpl
xor
leave
inc
mov
shrl
ret
fdivrl
push
lahf
jmp
push
jp
cltd
aad
sbb
cmpb
mov
cmpsl
mov
cmp
mov
mov
sub
imul
std
addb
test
pushl
aaa
pop
in
mov
dec
pop
dec
inc
scas
add
divb
test
or
fadds
jg
sbb
mov
adc
dec
pusha
mov
pop
sub
cmp
rcrl
mov
add
repz
pop
daa
mov
or
out
mov
lods
dec
aas
scas
inc
mov
es
jo
call
test
xchg
and
adc
das
xor
loop
subb
inc
shlb
shll
stos
sub
add
mov
xchg
cmp
dec
cmp
lret
repz
jle
test
push
dec
pop
jmp
mov
and
je
push
push
mov
sar
out
les
sbb
and
xor
mov
lret
ret
data16
das
loopne
aam
leave
test
cltd
xchg
mov
dec
and
aaa
mov
pushf
xchg
cltd
xchg
mov
mov
push
add
mov
cmp
dec
cld
cmp
loopne
xor
outsb
rorb
movsl
jle
mov
adc
lock
inc
mov
arpl
loop
and
dec
push
pand
aas
sub
in
pop
jp
daa
movsl
xchg
mov
loopne
lds
jg
imul
fs
jnp
lret
and
mov
mov
and
lea
pop
les
adc
imul
fdivp
ficomps
dec
jnp
out
mov
mov
cmp
jb
aad
in
xchg
in
in
in
dec
int
ret
imul
lock
jle
imul
arpl
lods
pop
int
stos
dec
int3
call
inc
popa
call
xor
lods
add
adc
fistpll
rcrl
je
imull
out
imul
movsb
dec
mov
lock
adc
mov
outsb
mov
dec
scas
mov
aas
xor
push
jl
scas
add
stos
in
and
mov
int3
sbb
jle
fnsave
out
lret
sbbb
push
gs
ja
xchg
push
sub
cmp
mulb
pop
inc
mov
lahf
jbe
lock
xchg
cltd
or
test
orl
je
or
mov
inc
shl
or
je
mull
aad
xlat
les
outsb
ss
jecxz
or
dec
add
pop
xor
dec
int3
sub
icebp
fcmovbe
sub
pop
repnz
out
add
add
mov
inc
sbb
and
outsb
jnp
negb
lea
test
pop
in
shrd
inc
nop
xchg
mov
das
int
add
add
and
lods
push
dec
mov
aas
xchg
into
sub
imul
or
cmp
or
jge
cmp
sub
sub
cmpsb
pop
cs
outsl
lret
adc
ds
push
push
xchg
incl
add
divl
xchg
sbb
mov
repz
popf
mov
imul
mov
xorb
roll
addr16
in
adc
rolb
fnstenv
xchg
pop
jnp
jo
inc
clc
push
adc
adc
mov
rcr
out
inc
pop
mov
repz
inc
push
xor
add
push
xor
pop
pop
sti
xchg
das
inc
mov
mov
rclb
mov
aaa
push
fs
mov
popl
loopne
cwtl
test
fadds
fwait
scas
sbb
pusha
xlat
add
dec
xchg
cmpsb
mov
inc
add
mov
jae
sub
adc
inc
mov
push
popa
les
test
rcrl
js,pn
mov
mov
jmp
cli
add
jno
mov
andl
cmp
push
jmp
cs
add
ret
xchg
add
ret
sbb
pop
mov
cli
sbb
int
je
out
jne
leave
mov
repz
ds
pop
and
or
pop
mov
nop
loop
in
imul
push
push
or
lea
pop
scas
pop
ljmp
out
inc
xor
icebp
fcmovnb
test
jle
subl
xchg
arpl
dec
jl
jg
dec
mov
sbb
jo
imul
nop
or
add
jbe
cmp
cmp
out
aas
cli
ret
cmp
jns
xor
adc
lods
push
mov
jle
clc
subb
rorl
xchg
mov
aaa
jo
ffreep
pop
lcall
pop
push
inc
mull
sbb
das
xor
sub
lcall
push
in
mov
mov
jne
outsl
jne
push
xor
mov
ja
sahf
cmpsb
pushf
mov
dec
sub
cmp
mov
xor
add
arpl
testl
adc
mov
add
xor
sbb
mov
div
sarb
jae
and
call
frstor
xor
xlat
adc
hlt
pop
imul
jl
add
pop
jb
pop
pop
mov
lcall
xlat
jge
push
std
mov
sbb
aam
dec
out
xor
jmp
xor
je
inc
pop
xlat
and
bound
mov
xor
add
adc
sub
cmp
xchg
xor
inc
ljmp
jo
test
fstpl
pop
sahf
je
and
loop
push
addr16
and
add
fnstsw
mov
pop
sbb
pop
cld
je
and
clc
or
jmp
adc
stos
lcall
in
sub
ret
idivl
push
dec
xor
in
nop
jnp
or
xchg
sbbl
int
dec
popf
mov
sub
sahf
or
test
dec
push
lahf
dec
mov
jb
icebp
pop
adc
dec
mov
call
mov
push
inc
cli
inc
jo
sbb
pop
cmp
add
inc
mov
mov
lahf
sub
addr16
testb
addr16
push
push
rcrb
movb
popa
pop
stos
scas
iret
arpl
in
xchg
pop
je
inc
stos
cmp
sub
mov
lret
ss
xchg
sti
lods
sub
mov
push
and
adc
push
and
ja
or
pop
loope
out
pop
mov
push
jne
adc
je
mov
inc
mov
xor
jo
mov
in
insl
shlb
dec
popl
inc
mov
rcrb
xchg
mov
jmp
sub
pop
add
movsl
push
sahf
jg
daa
rcll
sbb
pop
xchg
dec
xchg
outsl
daa
mov
xchg
fisttpll
arpl
imul
mov
orl
das
push
adc
and
or
sbb
push
mov
jecxz
xlat
lods
movb
mov
jns
sbb
rcll
mov
pop
inc
out
and
cmp
gs
push
mov
ljmp
sub
adc
mov
add
add
or
ret
imul
pushf
outsl
inc
repnz
pcmpeqb
hlt
fstpl
das
dec
dec
and
mov
aas
add
stos
mov
ljmp
sub
mov
repz
mov
pop
mov
insb
icebp
ret
dec
jle
hlt
imulb
sub
gs
gs
les
scas
fidivrl
jmp
sub
int
in
jnp
out
mov
enter
pop
lds
jne
inc
fcom
sbb
xor
ja
cwtl
js
arpl
and
push
cmp
push
pusha
jmp
pop
or
pushw
ds
adc
sbb
sbb
mov
stc
xlat
loope
and
shrl
or
xchg
jae
push
dec
repnz
divl
push
fs
jp
mov
repnz
cld
ja
cli
shlb
pop
aas
add
fimull
stos
xchg
notb
shr
mov
inc
cmp
sub
movsl
mov
movsl
xchg
sbb
add
inc
jno
adc
ja
in
and
cs
dec
sti
fbld
imul
pop
insb
sub
insl
clc
hlt
dec
dec
xor
arpl
mov
popa
adc
aam
push
sbb
aad
jecxz
mov
lahf
push
jb
cmp
mov
pusha
rol
mov
inc
hlt
icebp
and
adc
sbb
add
fdivrl
dec
out
insb
inc
ja
lds
push
dec
das
mov
xor
add
out
pushl
cld
mov
or
in
xor
aad
lret
lock
add
scas
cli
and
push
mov
bound
cmp
in
bound
fstps
aad
scas
sub
mov
dec
lret
add
aad
pop
int
xchg
inc
pop
dec
roll
in
inc
sub
xor
xor
rcl
push
fidivrs
call
ja
dec
lcall
pop
clc
in
inc
or
jne
xlat
ss
mov
jge
sub
mov
decb
sarl
mov
add
add
inc
push
sbb
out
xchg
pop
xchg
add
jg
je
data16
in
call
lods
push
loope
out
mov
sbb
pop
and
sub
loopne
fisubrl
jb
pmaxsw
addr16
add
ss
mov
sbb
gs
in
or
loopne
cmp
sti
pop
pop
dec
cld
ret
xchg
daa
popa
push
push
mov
push
mov
enter
mov
mov
out
jne
ret
arpl
cmp
mov
pop
cmc
xor
inc
pop
movsb
mov
fpatan
or
mov
jge
mov
jb
fnsave
scas
fnsave
loop
repnz
insb
mov
jl
negl
sbb
fldl
jmp
xor
mov
cmp
mov
push
insl
lods
inc
jnp
cmp
cmp
jo
mov
inc
lret
sahf
push
push
addr16
jl
add
push
xor
mov
js
inc
push
jl
rcrl
dec
pop
mov
inc
mov
sub
push
jge
jo
fiaddl
int
das
mov
aad
cmp
mulb
out
xor
jo
roll
xchg
outsb
adc
mov
adc
hlt
aam
xchg
ret
jp
insl
adc
pop
push
and
add
leave
inc
out
sti
into
jne
pop
mov
and
std
jbe
fs
pop
sbb
pop
subb
inc
sbbl
or
mov
inc
jle
gs
in
and
fmul
mov
push
jg
push
aaa
inc
cli
xlat
sub
push
or
or
sub
int
aad
imul
jge
jle
jb
adc
leave
addr16
scas
mov
fistpll
jle
inc
push
xor
icebp
les
push
out
in
in
or
fwait
in
push
das
cmp
enter
mov
out
dec
mov
xlat
sub
nop
add
xor
pop
add
sbb
mov
mov
add
in
orl
jnp
mov
fstpl
insb
xchg
inc
gs
dec
mov
dec
sahf
cmp
pop
add
mov
int3
fmuls
mov
sub
jmp
jl
int3
mov
dec
push
in
adc
ffreep
addb
xor
cmp
cmp
push
push
js
out
push
fwait
and
pop
pop
push
shr
add
jg
inc
add
cmp
cmp
mov
xchg
adc
mov
out
or
loop
add
and
cmpl
push
pop
pop
cld
pop
clc
pop
jg
and
push
test
jecxz
jg
les
adc
es
or
jae
or
xchg
jo
mov
sub
bound
mov
cmpsb
push
and
nop
push
dec
mov
int3
rclb
push
xor
in
mov
popf
or
divl
in
xchg
sub
pop
xor
pop
push
bound
sarl
arpl
movsb
mov
mov
in
mov
lods
out
sti
je
int3
add
and
xchg
xlat
clc
mov
jne
push
and
popf
push
lods
cli
pop
cmp
push
arpl
adc
sub
cmpsl
call
roll
aaa
out
cmpsl
jle
gs
xchg
sbb
ljmp
mov
inc
ret
out
xchg
and
loop
push
mov
or
outsb
xchg
movsb
rclb
adc
loope
push
cmp
das
pushl
add
sub
or
or
sbbl
mov
imul
rcrb
jno
in
mov
or
cld
sub
in
testb
mov
sub
sub
adc
outsb
pop
int
icebp
ljmp
inc
dec
scas
notl
push
push
dec
pop
mov
fwait
nop
in
and
lods
mov
test
icebp
sbb
mov
lea
push
test
ret
shlb
idivl
int
repz
sub
outsl
mov
or
dec
pop
loope
pop
sbb
sub
xchg
jle
shl
pop
pop
lea
in
leave
and
in
shll
fldt
push
data16
xchg
jmp
je
ja
fs
adc
xor
dec
jno
push
push
pop
mov
pop
test
adc
das
loope
push
outsl
adc
test
pop
icebp
movsb
ret
cmpb
out
insl
testb
cmp
pop
add
in
mov
call
insl
call
dec
mov
xchg
mov
insl
inc
sbb
inc
mov
xchg
ret
sbb
mov
imul
inc
fmulp
or
adc
pop
lds
icebp
adc
xlat
push
xor
popf
adc
stos
data16
push
add
gs
pop
into
xor
andl
fnstcw
and
jnp
cmp
fucomip
or
and
pop
xchg
je
mov
out
jne
sub
and
std
xor
cmpsl
repz
xchg
add
or
mov
lds
cmp
in
es
call
push
repnz
sbb
imul
xor
movsb
mov
mov
jge
adc
jl
movsl
or
push
lods
bnd
xor
stos
cli
lds
bts
sub
mov
lret
and
int3
ret
or
push
nop
add
leave
inc
rclb
addr16
mov
lret
push
int3
ss
rolb
mov
push
in
cmp
inc
or
fcomps
adc
jle
out
pushf
and
fdivp
dec
sbb
ss
mov
jnp
addr16
push
xchg
arpl
pusha
cmpsb
cs
and
mov
and
aas
sbb
push
cltd
xchg
push
into
loope
dec
push
popf
test
and
jb
fmull
push
mov
push
insb
leave
aas
unpckhps
jg
add
xchg
push
loop
in
rcll
sub
xorl
fwait
dec
inc
cs
jp
fsubr
mov
leave
test
sbbb
cltd
cmp
jo
add
imul
int3
mov
or
clc
aad
mov
aad
test
cwtl
mov
xchg
in
sub
bswap
pop
js
pop
cltd
cwtl
lea
push
pop
xor
cmpsb
jno
ss
sub
cmpsb
or
xor
mov
loop
and
add
addr16
jns
arpl
lahf
pop
xchg
stc
int3
jp
repnz
pop
in
and
dec
jmp
rorb
dec
cmpsb
adc
jns
scas
leave
xor
dec
sbb
mov
push
and
adc
mov
mov
ljmp
adc
lock
jmp
pop
dec
mov
lahf
pop
dec
incb
movsl
mov
xchg
nop
and
mov
dec
lret
fwait
cmc
jae
xchg
int3
push
pop
and
repz
sti
jl
testl
test
leave
mov
inc
in
mov
xor
inc
shlb
push
inc
cli
mov
fwait
mov
jo
jmp
test
cmpsl
inc
mov
inc
add
sub
mov
dec
cmp
les
push
fcoml
and
and
xchg
fisubrl
cltd
xchg
cli
iret
mov
pusha
lahf
das
dec
ret
mov
mov
xor
mov
adc
int3
inc
daa
scas
mov
ja
pop
pop
loopne
xor
mov
sbb
lahf
es
push
push
bound
xchg
andb
popa
aas
or
mov
cltd
pop
in
das
adc
cwtl
mov
out
jg
shlb
dec
in
or
movsb
inc
outsb
es
popf
or
sub
rolb
cmp
das
sbb
mov
mov
into
mov
sub
nop
insl
in
jp
pusha
stc
test
sub
jne
notb
mov
cli
in
sub
popf
ret
in
cld
inc
stc
xchg
out
inc
shll
cwtl
mov
mov
ret
addr16
sbb
cmp
sub
shll
lret
jmp
xchg
inc
pop
and
xchg
stos
mov
roll
sub
push
int3
mov
sub
movsb
lahf
adc
inc
test
movsl
and
push
repz
mov
mov
cmc
adc
mov
jnp
test
cmp
or
hlt
mov
jmp
in
inc
cmp
rcrb
inc
cmp
or
push
push
dec
je
push
in
dec
imul
push
aam
in
andps
dec
mov
test
and
pop
lret
mov
and
fstpl
lds
xor
les
ret
inc
mov
mov
popa
stos
shlb
ja
loope
xchg
mov
mov
icebp
mov
pop
jns
dec
sub
movsb
lea
dec
dec
clc
aas
dec
mov
dec
inc
idivb
dec
or
orb
adc
inc
popa
loopne
repz
mov
stos
sbb
mov
mov
fstpl
adc
pop
sbb
aad
stos
sarl
mov
pop
flds
pop
add
gs
or
sub
inc
push
mov
fimuls
jmp
je
mov
aas
sbb
popf
aaa
addr16
lret
icebp
or
xor
xchg
cmc
dec
neg
mov
std
pop
xor
push
sahf
movsl
in
jnp
adc
mov
mov
icebp
gs
xlat
push
std
sbb
jbe
test
test
imul
jecxz
lock
mov
lods
in
sbb
leave
push
or
jp
leave
popf
push
sahf
jno
imul
cmp
push
push
stos
and
sbb
mov
xor
sub
fldt
movb
jne
mov
xchg
push
in
pop
adc
cld
xchg
adc
pop
sti
push
popf
lds
fcmovbe
jmp
xchg
xchg
xor
lretw
in
shlb
dec
pop
lock
xchg
ss
test
xchg
xchg
push
xchg
push
hlt
sbb
ss
xor
lds
jmp
push
pop
dec
xor
ja
pop
jmp
pop
pop
add
fmul
cmpsb
sbb
lods
sbb
jb
jnp
imulb
sbb
sbb
xchg
leave
lea
jp
sub
leave
aaa
mov
cmp
popf
int
inc
adc
adc
pop
mov
sbb
cwtl
subl
mov
push
add
rclb
movsl
fistl
rolb
fwait
jp
out
fistps
sbb
xchg
cmp
mov
mov
nop
das
and
insl
gs
adc
sub
lret
push
dec
inc
ja
xor
sbb
bnd
jg
xor
insb
xchg
cltd
xchg
ss
lret
adc
xchg
es
shll
pop
mov
add
xor
and
cwtl
push
in
jne
mov
cmpsl
js
push
adc
jp
jmp
and
iret
pop
fisttpll
sub
xchg
sub
push
mov
xchg
ja
mov
jmp
fstl
cli
dec
inc
sar
add
jmp
jmp
or
fldcw
dec
lea
inc
jne
jge
cld
dec
rcll
subl
adcb
dec
loop
les
loopne
vorps
mov
pop
outsb
mov
push
out
mov
pop
xor
cmpsb
popf
mov
lcall
mov
cmc
stos
xchg
mov
push
fsubr
in
inc
fildl
iret
mov
jbe
loopne
jae
aas
sbb
lret
xchg
fiaddl
jmp
mov
sbb
aad
in
adc
sbb
arpl
mov
mov
jle
inc
jae
data16
popf
adcl
jmp
out
out
cld
mov
addr16
or
andb
cld
fwait
adc
xchg
jp
xor
jmp
rcr
xor
bound
ret
fisubs
pusha
arpl
and
dec
dec
push
xchg
iret
add
and
mov
mov
jb
fisubrl
add
or
inc
or
pop
push
test
dec
inc
pop
jg
mov
xchg
or
popa
and
dec
lcall
or
dec
lods
addr16
push
push
push
arpl
sub
int
testl
je
and
ljmp
jge
lods
hlt
inc
mov
data16
dec
fwait
push
jl
push
mov
sbb
repnz
arpl
xor
lock
push
push
and
cli
subb
xor
das
pop
jne
jae
xor
adc
sahf
psubsb
or
scas
fcmovne
pop
pushf
lcall
out
std
clc
inc
add
xor
add
fisttps
mov
in
iret
cld
rcll
out
lods
in
mov
jns
add
aam
xor
por
in
dec
movb
fcompl
or
mov
pop
je
cmp
hlt
cmpsl
fdivl
filds
jbe
push
push
subl
or
jae
sub
and
or
mov
and
int3
js
jno
pmuludq
int3
xchg
mov
inc
cmp
dec
cmp
or
in
dec
test
popa
scas
push
sbb
inc
int3
andl
lcall
inc
test
sbb
jecxz
or
add
xor
xchg
mov
xchg
lar
xchg
xor
mov
int
adc
and
mov
add
gs
mov
push
repnz
sub
orl
and
cld
jbe
push
nop
dec
or
pusha
out
addr16
push
push
pop
clc
hlt
mov
inc
adc
jp
mov
push
sti
xor
insb
add
lods
pop
clc
fdivl
imul
outsb
loopne
mov
lea
repz
das
movsl
add
jne
mov
mov
xchg
add
jge
scas
les
loopne
divl
movsb
movsl
sar
rcrl
in
inc
mov
sahf
insb
push
pop
pusha
bound
adc
sbb
push
cmp
mov
pop
rcll
cwtl
fnstsw
call
pop
lds
xchg
rclb
mov
or
push
xchg
movsb
push
sub
popa
sbb
popf
xorb
and
inc
addr16
sahf
pop
push
sbb
and
add
stc
lods
das
cmp
data16
mov
pop
jge
mov
lcall
push
xchg
mov
adc
dec
sbb
add
mov
into
sub
cmpl
push
inc
push
mov
leave
mov
xchg
repnz
rorl
inc
push
mov
adc
mov
stos
xchg
jae
push
mov
fstp
xor
cmp
cmp
inc
aaa
int
gs
cltd
pop
test
inc
fidivrl
lock
das
js
adc
iret
xchg
testl
mov
mov
mov
rcrb
mov
addr16
sbb
cmp
lcall
ret
xor
lock
dec
mov
xchg
out
sbb
mov
daa
add
jnp
mov
sub
jp
test
jb
and
loop
sbb
add
inc
and
xor
inc
pop
sub
mov
std
subb
enter
jno
out
subb
mov
mov
lret
pop
sahf
or
aad
add
mov
mov
fiadds
and
mov
jmp
dec
and
fisttpl
rcrl
fstps
cmc
pop
xchg
inc
movsl
out
dec
rol
or
pop
fildll
jge
call
nop
dec
mov
mov
cmc
or
popf
jp
std
adc
mov
mov
pop
rcrl
mov
loope
pusha
test
dec
mov
imul
into
and
xchg
out
nop
pop
in
insl
jle
divb
int3
sbb
dec
pop
hlt
mov
lret
jge
mov
jbe,pt
dec
es
in
out
stc
nop
iret
jne
jb
fs
int3
sub
mov
add
add
xor
cwtl
mov
jecxz
sub
fildll
sub
pusha
dec
ret
aaa
ljmp
scas
ja
int3
pop
jle
loop
and
mov
in
dec
arpl
adc
xor
lods
xor
inc
mov
out
pop
push
je
lock
imul
aam
lahf
mov
mov
mov
or
popf
lods
push
jmp
inc
xor
jl
and
mov
push
shll
mov
cmp
push
jp
fcoml
ljmp
aam
mov
sbb
cltd
jl
ss
mov
test
and
push
lahf
das
cld
je
dec
dec
add
shl
test
stos
stc
dec
jno
mov
das
imul
iret
add
fadd
or
cmpl
cld
push
clc
lock
or
cmpsb
jl
xchg
enter
cltd
and
fs
lods
sub
scas
add
push
inc
js
or
sub
mov
lcall
lret
cmp
movsb
mov
in
loop
push
out
loop
lods
add
mov
push
fdivrl
fsubs
jg
repz
inc
rcrb
pushf
lds
sbb
or
jecxz
sub
xor
push
pop
mov
pop
test
ret
pop
mov
cmp
inc
adc
mov
mov
xchg
or
jp
cwtl
cld
push
lret
mov
stos
addb
ret
and
mov
cmp
or
or
dec
mov
jns
ss
out
aad
pushf
dec
testb
add
addr16
std
adc
push
aas
adc
fmul
mov
sub
stos
out
mov
jb
int
cmc
mov
xchg
out
cld
lcall
decl
fisubs
xlat
xchg
sub
xchg
cld
clc
in
repnz
lods
pop
push
dec
sbb
xchg
inc
aas
cmp
lcall
sti
in
jbe
mov
inc
mov
daa
cli
lret
mov
pop
sti
imul
movsb
mov
cs
iret
or
sti
divb
pop
aad
sbb
xchg
insl
cmp
adc
jo
push
jle
pop
or
mov
inc
mov
inc
test
imul
xchg
xchg
pop
andps
repnz
or
jl
push
ror
push
jnp
lock
xor
insb
sbb
jmp
or
mov
jno
jbe
xchg
xchg
dec
mov
cltd
mov
sahf
pop
cmpsl
mov
andl
ss
loop
pop
and
push
rcrb
cmp
sub
out
and
xchg
outsl
push
mov
push
push
sbbl
mov
inc
cmc
stos
add
sbb
popa
int3
loop
jg
imul
inc
xchg
aam
xchg
imul
dec
test
fnsave
fcomps
hlt
mov
call
outsb
mov
sub
sbb
dec
pop
sub
cltd
ret
movsb
imul
test
or
push
rorb
ret
pop
inc
mov
imul
movsl
ret
jnp
das
pop
push
fimull
push
push
into
pushl
xchg
insl
mov
test
xor
xchg
dec
fwait
pusha
hlt
cmp
sbb
pushf
call
mov
and
cld
jp
mov
aam
cmp
sub
lods
lds
xchg
je
or
pop
xor
push
cs
ret
lods
mov
int
or
stos
sysenter
lock
das
testb
push
shl
xor
mov
ret
addb
aad
adcb
lcall
fadds
notl
jl
push
pop
sub
clc
add
inc
mov
pop
xorl
js
ss
out
jne
aam
dec
mov
std
jp
popa
add
cmpsl
jg
sahf
dec
loop
sbb
adc
mov
add
adc
push
outsl
nop
test
fmul
lock
add
mov
fadds
call
cld
mov
push
in
or
ds
jle
xor
inc
in
mov
push
les
and
push
or
out
mov
pop
lea
jns
icebp
and
mov
pop
mov
add
mov
sub
mov
lods
push
fsubr
adc
adc
and
shll
lret
movsb
stc
push
and
mov
push
enter
mov
orb
mov
pop
scas
lret
sub
xor
test
fstl
dec
sub
xor
push
pop
xchg
ret
xchg
sub
fnsave
fdivl
jmp
daa
cmpsb
and
lahf
sbb
ret
mov
pop
push
das
push
xor
mov
inc
lahf
dec
or
dec
bnd
repnz
mov
push
dec
or
shl
xchg
pop
out
inc
cmpsl
shlb
sar
pop
pop
sti
mov
insl
cmp
pop
fnsave
sbb
mov
loopne
scas
inc
in
andl
ss
imul
ret
xor
mov
test
loopne
movsl
sbb
adc
mov
popa
sub
incl
cmpb
call
jmp
mov
push
in
mov
dec
test
pop
mov
add
add
pusha
lds
jge
ror
addb
mov
inc
push
mov
mov
ss
sbb
dec
lods
push
cmpsl
ja
sbb
xchg
xchg
sbb
inc
movsb
int
loop
das
sti
xchg
xor
outsl
mov
imul
sub
adc
iret
pop
arpl
pop
scas
jmp
mov
xchg
out
lds
rclb
mov
ret
dec
push
mov
inc
mov
ds
loope
cmpsb
dec
popa
push
xchg
mov
leave
dec
inc
mulb
and
fcoms
fisubrs
repnz
loopne
gs
test
outsb
xor
sbb
mov
imul
imul
pushf
mov
push
and
jge
mov
movsb
scas
movsl
push
imul
sbb
int
xchg
xlat
into
insl
pop
xchg
xchg
arpl
ds
popa
hlt
cmp
in
pop
mov
push
xor
daa
xor
push
pop
andb
xlat
les
sahf
adc
mov
or
and
mov
dec
jbe
and
push
xchg
push
idivl
mov
pop
and
adc
sti
sub
sub
mov
testb
test
inc
or
pop
enter
test
inc
daa
pop
fdivl
pop
stc
mov
out
cmp
into
pusha
mov
test
mov
mov
inc
frstor
or
and
sub
sbb
jnp
aam
sbb
and
iret
push
bound
sbbb
xchg
outsb
hlt
adc
pop
shll
mov
js
mov
stos
dec
lret
test
mov
ficompl
movsb
cld
jae
sub
gs
mov
movsb
jbe
repz
inc
inc
sbb
int
lea
xor
inc
add
mov
xchg
dec
adc
push
push
dec
lds
in
les
insb
pop
test
sbb
dec
and
push
xor
and
push
cmp
lcall
cpuid
jmp
sahf
sub
mov
imul
ljmp
int3
filds
mov
and
lods
ucomiss
enter
int3
xchg
adc
xchg
pop
push
adc
pop
sbb
roll
jmp
loopne
and
sub
neg
mov
sarl
ffree
ja
je
int3
fwait
les
pop
cld
mov
and
jp
shlb
adc
adc
int
adc
push
ret
add
xchg
shrd
push
cmc
xchg
jo
mov
fwait
stos
jmp
mov
outsb
in
cmp
mov
inc
shlb
adc
imul
sub
adc
in
es
fmul
cmp
pop
cld
sarb
pop
rcll
fmuls
cmpsl
lods
mov
push
scas
cmpl
daa
cmp
insb
in
in
push
js
mov
xchg
mov
mov
cmp
mul
mov
test
mov
out
lods
jb
and
in
ds
out
les
jb
repz
mov
hlt
xor
xchg
sbbl
in
popf
das
cwtl
jae
stc
or
fists
jo
or
xchg
aam
pop
loopne
test
test
enter
dec
sub
stc
adc
das
clc
mov
in
mov
mov
mov
ljmp
xchg
lock
daa
int
xor
inc
hlt
sbbb
push
jecxz
andb
push
leave
outsl
in
mov
das
pop
and
push
cmp
inc
mul
stos
jb
mov
sbb
adc
loop
pop
flds
sub
pop
insl
mov
imul
ret
mov
scas
out
arpl
fisttps
jne
mov
mov
fcoml
pushf
mov
in
add
inc
push
sub
jb
pop
sbb
rclb
ret
pop
mov
mov
arpl
pop
cmp
cltd
pop
lcall
mov
sub
inc
push
fwait
in
es
mov
push
cmpsb
out
mov
pop
out
sub
sub
arpl
test
out
into
pop
mov
outsb
leave
xor
dec
push
dec
cmp
jo
fnstcw
dec
and
mov
sarb
pop
int3
mov
xor
add
xchg
pushl
sbb
dec
fidivrl
je
enter
push
outsb
sub
push
jnp
ret
xor
xlat
into
pop
test
mov
dec
mov
adc
or
sbb
jns
rcr
out
add
test
bound
inc
movsl
cmpl
fwait
in
cmpps
popa
addr16
sub
jns
stc
sar
cs
add
xchg
pop
aaa
add
pop
cmc
sahf
iret
loope
xor
insl
hlt
jl
mov
jb
lret
cmp
loope
sarb
stos
adc
dec
enter
cmc
iret
mov
add
dec
lahf
cmp
push
adc
stos
inc
pop
ret
jl
add
dec
inc
inc
push
imul
and
dec
add
lock
mov
stc
jo
lods
pushf
cmpl
pop
sub
imul
fucomip
fsubrl
scas
mov
das
pop
iret
mov
xchg
pmaxsw
pop
cld
inc
out
dec
loope
xchg
and
test
and
add
cltd
insb
in
sub
ja
and
stos
fucomi
test
fs
fimull
fdivrl
dec
and
push
test
sti
sub
mov
icebp
sub
movsl
push
test
lahf
cmp
dec
into
ljmp
sarb
jmp
jle
jbe
cmp
jmp
pop
fstl
mov
jecxz
adc
jae
mov
leave
cmp
inc
or
ret
add
cmp
in
jmp
ja
outsl
dec
cmp
pop
daa
push
dec
gs
aas
in
mov
aas
int
or
iret
inc
jge
outsb
or
adc
adcb
shll
and
inc
cs
xlat
fs
ret
int
cwtl
cld
mov
in
push
ljmp
movb
andb
jmp
xchg
inc
pusha
mov
les
inc
shll
adc
pop
test
ljmp
fisttpll
xchg
ljmp
sub
mov
xor
in
cwtl
sub
cmpsb
xchg
add
fisubl
popa
insb
not
ret
inc
mov
jle
insl
jl
aas
call
sbb
stos
jg
sbb
push
rcrb
popf
and
loopne
pop
out
int3
test
add
jp
ss
imul
mov
or
push
shlb
testl
lds
lds
aaa
scas
pop
pop
icebp
pop
xlat
out
sbb
bound
pop
pop
jg
xchg
inc
xor
out
outsb
out
movsl
add
dec
ss
pop
jmp
movsb
ja
push
lret
or
in
lcall
stc
sbb
mov
xchg
xchg
push
jge
je
cmpsb
adc
sbb
jns
pop
addr16
gs
and
and
or
cmp
mov
fucomi
xchg
add
sbb
cli
mov
scas
aad
pusha
bnd
sahf
lahf
sahf
repnz
stos
cmp
movsb
or
cmp
bound
test
push
adc
or
popl
cmpb
pop
rcr
pop
inc
dec
bound
addr16
loopne
es
mov
xchg
addr16
stos
jno
iret
bound
push
testl
int3
test
sub
pop
arpl
ds
inc
jle
mov
pop
in
push
push
xchg
fists
inc
dec
push
push
push
pop
and
push
or
lcall
lcall
adc
push
enter
or
pushf
and
sub
clc
mov
pusha
mov
add
dec
movsl
test
out
sub
leave
rcrb
sbb
int3
icebp
lock
dec
shll
outsb
add
mov
pop
stos
bound
pop
dec
sarl
push
enter
loope
js
lcall
push
pop
int3
xchg
jecxz
push
lret
ljmp
lods
pop
xchg
testl
jnp
clc
xchg
popf
fstpt
sub
js
add
inc
jp
gs
sub
jle
rdtsc
xchg
mov
and
mov
adc
xchg
sbb
and
outsl
rorb
int
cmp
bound
inc
sub
jg
mov
cmp
sbb
dec
lcall
js
jg
jae
xchg
int
dec
mov
int3
cmp
out
pop
mov
ret
cmpsl
pop
mov
sahf
lds
insl
cmp
ja
mov
xor
mov
rcrl
pop
jbe
addl
aam
sbb
adc
call
and
mov
and
aam
jecxz
lret
je
pop
insl
int
sub
ja
fwait
jmp
and
test
pandn
repz
xchg
in
rclb
cmc
scas
mov
fisubs
lahf
adc
scas
cmp
lds
mov
push
cmc
mov
fstpt
fistpl
ret
outsl
inc
out
or
gs
jecxz
push
pop
inc
jae
mov
call
add
ret
pushf
loop
xchg
aas
sub
loop
adc
inc
in
fldln2
sbb
mov
pop
and
rolb
shl
or
mov
testl
xor
cmp
outsb
inc
xor
addr16
sbb
sub
stc
in
xchg
add
shlb
jmp
testb
movsl
ss
xchg
icebp
dec
mov
inc
cmp
int
lcall
lock
xor
shrl
cs
jle
mov
adc
es
adc
mov
push
cmpsb
mov
jp
stos
mov
mov
icebp
mov
inc
cmc
subl
clc
or
inc
or
push
dec
repz
hlt
sub
pop
daa
sahf
dec
xlat
jb
xchg
xchg
push
fwait
aas
xchg
pop
push
in
pop
into
sub
sub
mov
out
hlt
mov
rol
int
ficoml
bound
dec
mov
lret
pusha
into
subb
ficoml
jae
popf
pop
pop
sbb
in
sbbl
pop
and
dec
clc
ljmp
add
out
xchg
xor
test
inc
fwait
sbb
or
test
inc
fwait
outsl
insb
loopne
mov
das
fdivr
xchg
cmp
sbb
or
nop
hlt
xchg
sbb
cmp
xor
add
fsubp
scas
add
in
lods
sbb
dec
mov
and
xchg
test
outsl
sahf
mov
push
out
stos
jbe
sbb
shll
aaa
jb
dec
xor
sbb
mov
cmp
dec
fcomps
sub
imul
lock
mov
sbb
lret
jg
imull
xchg
sti
adc
aad
test
js
cmp
cmc
jbe
mov
lahf
aam
imul
cwtl
outsb
mov
pop
push
dec
jmp
les
aaa
loopne
or
mov
dec
sub
fnstcw
sbb
sahf
mov
pusha
pop
sahf
stos
sub
fsubs
lock
das
stos
mov
jnp
iret
es
or
cmpsb
sahf
mov
ficompl
jl
gs
pushf
push
int3
das
loope
pop
mov
sub
xor
int3
movl
sbb
sahf
cld
divl
scas
lods
xchg
mov
aam
imul
pop
cmp
mov
call
fs
jmp
sbb
fwait
mov
cmp
fwait
add
aaa
int
arpl
push
dec
das
dec
dec
xor
cli
cli
sbb
xor
xlat
test
mov
jno,pt
call
or
inc
jnp
pusha
daa
jg
mov
jns
fs
shrd
push
fucomi
push
xchg
lret
fs
add
ljmp
loope
out
dec
vpshufd
in
xchg
fimuls
inc
or
cwtl
push
ss
lcall
dec
xchg
sub
add
push
je
je
movsl
and
add
mov
inc
in
jge
lcall
sbb
cmp
jl
xor
cld
out
popf
call
lret
mov
inc
das
cmp
rorb
adc
xchg
outsb
xor
pop
aaa
out
and
push
sub
and
jae
stc
cmp
ja
ret
inc
shrb
push
sbb
faddl
sbb
loop
aaa
dec
ljmp
mov
cmp
mov
xchg
mov
xor
adc
nop
sti
stos
lret
in
push
ja
mov
flds
jl
xchg
mov
mov
out
imul
mov
mov
xchg
addb
cmp
cmp
jmp
mov
mov
pop
addr16
bound
mov
out
xor
in
jle
loop
out
movsb
out
push
jp
clc
mov
test
shlb
and
sbb
push
mov
nop
arpl
dec
cmp
mov
dec
xchg
mov
shr
pop
jo
xor
jl
sti
xchg
fildl
call
pop
lcall
iret
lahf
cli
cmc
dec
dec
xorl
lea
insl
pop
dec
dec
mov
jg
pop
sub
ja
pop
and
pop
ja
sbb
cs
sub
adc
mov
je
movsb
cmc
cwtl
icebp
iret
jo,pt
jmpw
shr
mov
dec
mov
mov
ljmp
xchg
shrb
imul
lret
mov
adc
sub
pop
or
xor
loop
mov
je
push
into
jnp
call
fwait
imul
push
clc
les
and
cld
dec
or
xchg
mov
enter
jmp
add
ror
cmpl
pop
aad
imul
mov
add
test
lds
dec
inc
and
cltd
xor
or
and
pop
or
fistl
fistps
pop
lret
pop
in
inc
stos
daa
adc
add
adc
lods
addb
xchg
dec
mov
aad
jnp
pop
jns
jb
lret
and
ljmp
adc
stc
ss
xchg
std
clc
fwait
dec
pop
dec
and
push
shr
ficoms
or
jnp
ror
dec
cmp
adc
sub
in
shlb
dec
stc
inc
inc
test
xchg
flds
mov
jae
loopne
outsl
pop
testb
outsb
aaa
fucom
cwtl
jbe
add
das
loope
in
test
dec
push
or
sbb
mov
imul
jns
push
xor
shrl
xor
mov
mov
fldpi
stc
movsl
push
rcrb
sub
cli
testl
jns
dec
fstpt
cli
pop
and
cli
sbb
cwtl
ret
jno
dec
movsb
jp
mov
pop
popf
push
jle
adc
xchg
imul
jbe
push
inc
arpl
mov
fsub
sahf
mov
jle
fwait
or
jbe
fisubrl
repz
push
loope
clc
xor
pusha
mov
xchg
jl
fcmovnu
jmp
or
inc
cmc
jecxz
inc
dec
adc
jae
arpl
mov
or
addb
push
loop
imul
out
add
aad
cmp
test
outsb
rcl
sub
jecxz
out
or
fdivrl
add
cmp
fmuls
jl
adc
xor
push
jge
xchg
test
jge
mov
imul
out
cld
pop
cmpsl
xor
mov
pop
shlb
and
jo
xor
sti
and
push
pop
enter
shrl
mov
stos
mov
repnz
and
adc
mov
int3
movsb
aad
pop
dec
insb
enter
scas
jno
mov
sbb
cmp
jne
xchg
xchg
mov
xchg
xor
or
imul
sbb
xchg
cmpsl
jl
lahf
mov
int
mov
mov
mov
dec
mov
pop
clc
popf
push
fcmovu
outsb
les
inc
js
mov
stc
mov
iret
jbe
es
stc
and
cmp
outsl
sahf
cwtl
call
mov
es
cmp
pop
pop
pop
or
ret
pop
daa
cltd
mov
push
mov
ret
cs
and
aaa
fcoms
xchg
popw
int3
inc
xor
pop
dec
test
int
adc
lcall
jecxz
and
cmpsl
pop
cli
out
addr16
push
mov
enter
ds
enter
gs
push
scas
jge
hlt
bound
sub
aam
add
outsl
xchg
push
or
sbb
pop
outsb
pusha
pop
aad
mov
sbb
xor
xchg
inc
inc
push
adc
push
jle
scas
cmp
pusha
aas
adc
es
xor
dec
ret
std
fcoml
subl
insl
enter
push
mov
xchg
mov
mov
dec
cmp
movsb
lahf
xchg
ljmp
lcall
insb
ljmp
dec
mov
pusha
push
and
imul
push
bnd
cmp
push
std
ficompl
or
pop
push
sub
adc
mov
pop
sti
stc
imul
xor
arpl
lds
sti
out
into
jne
cli
xor
pop
divb
int
mov
sarl
push
movsb
out
ret
popf
fwait
mov
lods
adc
pop
mov
xchg
cmp
cmp
xor
dec
ljmp
mov
and
mov
roll
jp
lcall
and
mov
movw
mov
pop
stos
popa
shll
incl
into
mov
mov
jno
cld
mov
ljmp
adcb
push
bound
ss
push
mov
push
dec
fsubl
and
sub
pop
jno
mov
and
adcb
test
popf
lret
fsub
rcrb
push
test
popf
and
sub
mov
lret
outsl
scas
inc
aaa
sub
int3
mov
sbb
mov
mov
stos
outsl
js
jge
and
sbb
shlb
int
mov
rcrl
clc
dec
fstp
inc
shll
lahf
fnstsw
jo
nop
mov
rcrb
adc
pop
push
jne
mov
pop
adc
rclb
push
mov
push
cmp
xor
add
add
mov
add
xchg
pop
lea
inc
inc
fs
push
cmp
in
das
in
mov
fists
sti
push
out
into
pop
dec
push
arpl
bsr
loop
xchg
mov
push
xchg
rcrl
mov
into
sub
sahf
testb
loopne
mov
add
hlt
lret
in
pop
fidivrs
jle
lods
pop
negl
stos
addb
adc
in
out
mov
mov
cltd
add
sub
or
sbb
insl
imul
hlt
mov
mov
mov
adc
call
repnz
cmpsl
jb
stos
xorl
jge
cmp
test
mov
xchg
addr16
sub
fdivr
sbb
outsl
sbb
inc
scas
pushf
fdivrs
pushf
inc
xchg
jecxz
or
arpl
add
loop
dec
rdpmc
inc
push
ret
andb
daa
aaa
add
mov
pop
cwtl
mov
push
int
rolb
or
call
and
pop
cs
scas
or
das
inc
idiv
dec
fsubr
mov
loope
fbstp
cli
pop
mov
or
or
adcl
xorl
fsqrt
je
jge
enter
jl
out
out
jo
and
mov
xchg
adc
pop
and
or
xchg
jmp
jnp
dec
shll
scas
pop
push
or
bound
cwtl
push
add
cmpsl
and
out
mov
inc
in
out
and
push
in
add
test
movsl
sub
pop
je
nop
sub
cmp
jne
fdiv
push
nop
lcall
pop
dec
div
neg
int
sbb
stos
jg
xor
jle
pop
inc
add
out
pushf
gs
push
sub
loope
jae
ja
stc
add
xchg
adc
je
mov
outsl
rolb
mov
ja
in
stos
sbb
sbb
xor
xchg
mov
movsl
and
nop
ret
mov
push
jne
sub
aaa
xchg
arpl
mov
out
add
je
fisttpl
xchg
mov
divl
loopne
jne
sub
mov
rorb
pop
pop
jecxz
or
lock
enter
pop
nop
xlat
mov
pop
pop
inc
pop
add
in
pop
mov
fxam
jle
cmp
cmp
lret
icebp
pop
lahf
pop
add
or
xchg
shll
hlt
dec
push
dec
shll
insl
jecxz
stos
and
repz
sub
mov
xor
outsb
lret
jo
jle
fadds
push
dec
xor
add
xchg
mov
cs
inc
jecxz
sbb
inc
xor
xor
lret
add
mov
pop
sbbl
or
push
push
cmp
mov
push
popf
popf
sub
jbe
dec
dec
daa
sub
mov
inc
mov
and
fistpl
lcall
xlat
and
mov
in
lods
and
into
and
lahf
sub
test
xor
fnstenv
scas
and
inc
scas
mov
pop
mov
or
cmp
mov
rorb
sbb
or
jo
jp
or
mov
rorl
xchg
jno
scas
mov
pop
popf
mov
add
mov
pop
mov
sbb
rolb
dec
into
pop
xchg
cmp
out
cmp
jne
sub
cmp
ds
adc
ljmp
repz
mov
cmp
dec
sahf
nop
cltd
mov
pushf
das
aas
dec
jg
xor
push
insb
xchg
rcrb
fimull
mov
insl
test
imul
pop
into
adc
call
sub
jnp
or
stc
pop
xorl
iret
pop
dec
mov
xor
push
scas
sbb
scas
lock
xor
aam
js
xor
addl
gs
push
test
mov
loop
sub
scas
lods
cmp
dec
dec
movsl
mov
or
sbb
mov
add
pop
jecxz
inc
mov
pop
jmp
pop
jmp
ficomps
les
iret
sub
push
mov
mov
jecxz
and
sub
into
mov
mov
inc
stos
push
push
pop
roll
push
xchg
sbb
mov
imul
push
sub
inc
repz
dec
cwtl
dec
pop
sbb
inc
pop
mov
out
jmp
or
mov
fs
pop
std
lods
fisubrl
fwait
popa
cmpl
pop
xchg
scas
and
rclb
mov
fnsave
cmpb
add
mov
and
sarb
jl
out
shrb
loope
nop
pop
xchg
insl
lret
out
mov
sbb
cmp
xor
popf
mov
add
adc
test
jge
dec
xchg
in
hlt
scas
xlat
cmpl
inc
stos
dec
mov
js
pop
outsb
movb
pop
add
insb
icebp
fwait
adc
inc
popf
in
ja
xor
pusha
imul
cmpsl
aaa
jne
hlt
fdivs
sbb
sti
lock
dec
push
pop
cli
or
adc
lods
js
fdivrl
icebp
inc
jo
xchg
mov
mov
sbb
sbb
mov
cmp
int3
xor
dec
imulb
add
rclb
add
lock
sub
repnz
inc
dec
mov
or
in
into
pop
pop
scas
push
mov
movsb
jne
jo
push
cmc
movsl
nop
ret
push
mov
jge
test
sbb
cmp
and
pop
push
and
inc
xchg
mov
or
xchg
clc
ret
lock
sahf
jb
ret
push
mov
sarb
lods
inc
inc
cmc
push
mov
or
rdmsr
fadds
out
inc
nop
push
sbb
ja
movsb
inc
sbb
inc
sub
insl
js
iret
cmpsb
rsqrtps
clc
out
dec
mov
lret
das
lods
testl
sbb
imul
xchg
out
pop
in
iret
fmul
fbld
add
testb
jns
sub
lds
pop
dec
dec
gs
lcall
mov
scas
xchg
adc
push
inc
or
mov
sub
inc
mov
cmp
mov
fimull
sti
jp
in
inc
jmp
pop
dec
jle
pushw
add
pop
sbb
push
jl
pop
sbb
lret
out
sti
jge
inc
nop
popa
xlat
dec
xchg
adc
stos
icebp
dec
scas
sbb
andl
add
inc
ffree
xor
insb
mov
xor
pop
fcmovu
mov
call
xchg
adc
xchg
add
cmpsl
or
bound
cmp
iret
cmc
and
mov
sbb
in
aad
add
mov
les
mov
push
dec
hlt
pop
subl
push
mov
bound
xchg
adc
jecxz
sub
or
aaa
dec
sub
icebp
xor
fstps
add
and
xor
in
pop
fistl
dec
xchg
push
leave
add
mov
mov
mov
lea
dec
jg
jne
push
scas
enter
jg
sbb
out
subb
cmpsl
cmc
push
inc
mov
adc
dec
dec
mov
mov
les
adc
gs
lods
cmp
cmpsb
mov
sub
cld
outsl
mul
dec
xchg
and
nop
in
notl
ret
test
mov
cmc
sub
arpl
nop
mov
out
sbb
scas
pop
outsb
dec
out
mov
lock
shl
add
xchg
shll
and
loope
in
out
out
pop
xor
xchg
or
sub
push
xor
testl
sbb
lret
or
lret
mov
bound
out
fs
lahf
mov
pop
and
sub
sbb
xor
fdivr
test
outsl
xchg
push
ret
pusha
pop
int
cwtl
js
call
ss
data16
int3
lock
dec
jmp
dec
je
hlt
std
jae
jge
mov
xchg
xor
sub
call
jecxz
scas
xchg
cltd
js
shl
rorl
cs
push
xchg
aad
nop
movl
mov
ror
test
aam
pop
fmull
or
xchg
dec
push
jb
xor
mov
pop
push
xlat
in
mov
fcmove
imul
test
mov
out
inc
cwtl
fnstcw
pushf
rorl
dec
ret
in
jge
and
fisubrs
cmpsl
ret
fildll
or
js
sub
pop
jnp
mov
loope
mov
or
jmp
ja
cmp
push
mov
or
push
adc
pop
out
lcall
call
movsl
out
push
js
lods
xchg
sbb
mov
in
adc
popf
pop
mov
movsb
mov
loop
sbb
inc
add
out
cmp
xchg
mov
jnp
jmp
lods
ficomps
pop
stos
mov
push
sub
add
out
push
out
lock
adc
rorb
jo
push
xchg
in
mov
mov
add
lock
xor
jb
rcrb
lcall
dec
outsl
int
in
dec
xchg
pop
or
xor
xchg
cmp
shr
inc
add
push
bound
dec
cmp
and
jmp
push
inc
xchg
jmp
mov
mov
xchg
dec
inc
jecxz
in
add
xor
xchg
push
pop
outsl
pop
mov
xor
or
jns
pop
xchg
scas
dec
or
mulb
cmc
mov
sub
jnp
lods
mov
sahf
mov
in
lods
lds
push
ret
test
scas
out
shll
lods
mov
clc
mov
psubusb
in
sbb
or
cmp
xor
mov
xlat
cmp
lods
jle
std
sub
pushf
mov
mov
pop
in
movsl
jmp
mov
mov
js
ljmp
faddl
pop
push
jo
cmpsb
jns
push
and
pop
mov
cmp
push
gs
dec
xchg
nop
xchg
adc
shll
mov
xchg
mov
or
lock
call
push
lcall
jmp
rolb
mov
inc
sub
es
ret
push
ror
jbe
pop
imul
iret
stos
arpl
add
or
mov
sub
pop
cmpsl
pop
lods
and
ret
cmp
stos
movsb
and
ljmp
xchg
int3
jmp
push
aas
lcall
pushf
ficompl
add
imul
cmp
int3
jle
adc
int3
add
cmp
repz
int
aam
sbb
adc
sub
mov
mov
ljmp
inc
mov
imul
sub
mov
jbe
mov
sub
popa
stos
add
push
sub
jns
or
mov
dec
fchs
sbb
jge
cmp
daa
xor
into
sti
call
cwtl
pop
adc
or
adc
mov
cmc
repz
je
testb
mov
test
lds
rolb
ss
adc
shl
imul
stos
lds
cmp
and
adc
or
mov
push
outsl
dec
and
imul
fisubrl
xchg
adc
add
xchg
pop
add
in
mov
mov
aad
push
jb
js
aas
aad
sbb
in
push
or
outsl
arpl
add
rorl
mov
dec
out
jmp
inc
cld
and
push
push
mov
fnstcw
mov
lcall
pushf
xor
push
push
xor
enter
in
outsb
jecxz
jns
sbb
out
mull
mov
fsubs
jnp
or
fcomip
mov
fisttpll
pop
addr16
cmpsb
imul
pop
out
mov
dec
push
sti
pop
mov
xchg
push
jmp
imul
int3
push
and
jnp
fisubrl
xchg
bound
loop
xor
arpl
test
jmp
sbb
pop
pop
cmp
nop
aas
movsl
ljmp
xchg
push
addr16
movsb
gs
fdivs
scas
std
push
out
dec
jae
insb
jge
into
adc
rclb
add
gs
cmp
adc
mov
out
aaa
popf
repnz
fwait
xchg
cwtl
shl
inc
aas
xchg
sub
lods
fldpi
cli
iret
cmp
or
cmp
enter
or
loop
test
mov
jbe
cmp
pop
dec
popa
lret
std
mov
mov
scas
and
int3
addr16
fcomip
iret
or
jb
cmp
stc
dec
inc
test
in
jle
dec
cmpsb
mov
jle
and
jp
stos
cltd
call
add
inc
adc
in
inc
cmp
jno
pop
adc
inc
jne
push
je
scas
fs
fists
inc
or
push
sub
pop
mov
popf
fisubl
jo
lods
add
jo
test
cltd
sbb
cld
sbb
cmp
xchg
ret
push
push
mov
mov
adc
es
call
sub
xchg
fnstsw
xlat
cs
outsl
adc
cli
insb
add
cs
clc
lods
out
lret
das
mov
mov
mov
adc
adc
fmulp
je
rolb
xchg
pushf
out
mov
jg
cmp
add
cwtl
xchg
pop
dec
mov
hlt
xorb
out
sub
leave
xor
inc
jno
mov
orb
dec
loopne
jecxz
test
fs
sub
jnp
and
dec
shll
jae
xchg
clc
mov
jecxz
mov
push
adc
ror
ja
mov
pop
jo
mov
loope
nop
addl
cltd
add
inc
outsl
fildll
popa
and
outsb
jmp
sahf
out
pushf
stos
sbb
into
pop
sarl
xchg
sarb
sub
pop
data16
out
out
jnp
das
push
xor
orb
imul
sbb
inc
pop
int3
data16
pusha
loopne
sbb
sub
lds
mov
push
stos
push
jb
pop
cwtl
test
dec
arpl
bnd
or
pop
add
mov
into
sbb
in
or
or
inc
ret
push
out
lahf
jl
test
rcl
mov
jo
mov
addps
adc
sarb
mov
cmp
mov
bound
sbb
fcom
jp
push
cmp
insb
aas
rcr
inc
jne
adc
in
popa
cltd
push
cmc
filds
mov
push
js
mov
incl
cld
xchg
and
pop
xor
or
cmpsl
dec
push
imul
adc
adc
div
cmp
and
int
stos
std
ret
mov
add
xor
enter
mov
lcall
jne
sbb
ret
pop
adc
pushf
dec
inc
mov
cltd
fstl
mov
jb
ja
dec
add
push
mov
push
enter
inc
mov
xchg
push
jge
add
sbb
sarl
loope
xlat
push
dec
mov
mov
adc
sbb
lock
cmp
fisttps
cmp
clc
cmp
mov
lock
inc
cld
ret
clc
inc
mov
ja
xor
jmp
add
insl
out
or
mov
movsl
std
or
jns
cmp
pop
xlat
es
imul
and
mov
sarl
cld
in
mov
insl
xchg
es
mov
pop
cmp
in
xchg
jns
ljmp
fimull
push
aam
sahf
cltd
jg
xchg
mov
roll
dec
loope
rclb
or
dec
rcrb
insb
repz
dec
or
mul
pop
adc
adc
arpl
mov
add
jle
and
xor
shlb
or
stos
das
mov
rorb
fdivrl
xor
fsubs
mov
lret
xchg
mov
jmp
cmp
ja
aas
cmpsb
hlt
cmp
push
loop
in
out
xor
jne
xor
out
mov
xor
out
mov
into
mov
mov
shlb
sbb
fidivrl
mov
adc
and
js
push
pop
jp
lahf
pop
xchg
adc
dec
dec
xchg
add
negl
xchg
bound
out
or
jmp
adc
stos
mov
ret
xor
xchg
sub
jmp
adc
stc
xchg
mov
sti
call
stos
fistl
hlt
lods
or
das
mov
sbb
mov
mov
sub
cmc
js
xchg
and
xchg
fnstcw
push
ret
dec
dec
push
aam
leave
lret
sti
and
cmpsb
pop
and
into
xor
xor
sub
cltd
lods
cmp
fidivs
lea
lret
in
pop
push
loope
sub
orb
dec
mov
sub
mov
sti
dec
dec
inc
repz
dec
fmuls
pop
fbstp
fsub
pop
jg
dec
in
xchg
aad
fcoms
in
shl
push
sub
mov
notl
and
sbb
adc
outsl
mov
out
and
sub
jp
int
std
loopne
test
or
sti
xchg
fidivrs
cmp
data16
mov
clc
mov
leave
popa
sub
rol
nop
or
in
push
mov
stos
xor
jnp
ret
in
ret
stos
xlat
mov
pop
pop
adcl
jl
add
sbb
movsb
jg
xchg
ficoml
inc
mov
push
insl
jb
cmp
cmc
mov
les
sahf
js
test
sahf
mov
sbb
dec
push
gs
cmp
clc
or
push
popf
xor
push
add
test
loope
hlt
outsl
mov
mov
mov
dec
call
sub
mov
js
jo
cmp
shlb
int3
inc
mov
fs
mov
nop
mov
popf
push
fwait
ljmp
sbb
rolb
jge
inc
mov
lods
adcl
mov
call
sbb
jno
xor
xor
inc
imul
pop
shll
cmp
xchg
dec
mov
pop
dec
mov
enter
mov
inc
aaa
sbb
test
shll
or
scas
gs
dec
jbe
pop
and
lcall
add
mov
dec
mov
mov
add
and
mov
dec
enter
mov
mov
add
mov
aaa
enter
or
call
mov
and
cltd
adc
daa
sbb
inc
and
movsb
jnp
mov
inc
daa
fstp
and
dec
dec
addl
fwait
outsb
push
iret
xchg
in
inc
push
cwtl
dec
push
adc
cmp
out
cli
mov
inc
mov
jg
cmp
jmp
add
imul
cs
pop
inc
mov
fdivrl
jae
jns
test
xchg
push
inc
mov
mov
cwtl
test
icebp
xor
jo
dec
push
cmp
rcll
mov
xchg
jo
cmc
lcall
push
testl
int3
adc
aad
jbe
inc
icebp
fstpt
mov
repz
sbb
xchg
iret
sahf
pop
je
cs
es
sub
mov
icebp
hlt
pop
mov
into
push
mov
jg
cmp
lods
fcmovnbe
cmc
pop
add
insb
pop
mov
cltd
cmp
orb
adc
cmpsb
clc
add
sbb
pop
imul
and
cmp
rolb
xchg
cmp
test
dec
int3
xchg
jnp
jl
ja
int3
insb
dec
ljmp
push
test
dec
lahf
sbb
mov
das
mov
or
xor
jo
jl
pop
cmp
mov
xchg
pop
int
test
int3
insb
in
xor
into
cs
cmc
push
fidivrs
mov
fcmovnb
cmc
imul
loop
es
sbb
or
dec
xchg
mov
push
dec
cmpsl
xor
mov
lcall
int3
sahf
leave
adc
pop
leave
xor
mov
insb
cmp
dec
xor
pusha
lods
into
inc
shlb
iret
add
add
fmuls
call
fmulp
bound
dec
dec
jo
cmp
lods
push
andnps
in
sti
sbb
ss
ljmp
add
leave
mov
loopne
ss
pop
lret
mov
push
nop
mov
sti
inc
jmp
pop
shrl
jmp
int
stos
jmp
xor
dec
jns
adc
pop
or
jl
push
xchg
and
outsl
testb
xor
jns
xor
in
adc
xchg
dec
or
inc
inc
lret
or
xchg
std
gs
inc
adc
inc
xor
add
sbb
cmp
cld
dec
pop
call
sub
das
jb
dec
dec
es
jno
mov
pop
pop
repz
dec
sbb
pop
jno
cli
roll
in
lret
push
mov
jae
iret
jmp
xchg
imul
call
repz
jecxz
pop
jmp
fsubrl
es
xchg
xchg
push
test
and
xchg
cmpsl
xchg
lea
lahf
lahf
flds
addr16
push
push
fsubr
dec
popf
jo
cmp
aad
push
js
jbe
inc
sub
iret
scas
outsl
xor
loop
mov
imul
cmpsb
pop
sti
jecxz
cmp
in
pusha
test
mov
and
push
aam
xlat
jns
cs
out
pop
xor
xor
xchg
sub
add
jnp
fildl
pop
add
mov
sub
mov
xlat
mov
data16
jb
pop
fdivl
lds
or
mov
ja
lret
jns
push
mov
js
decb
inc
xor
decl
shlb
push
push
mov
les
mov
lret
xchg
int
fldt
jnp
fsubl
out
sti
jle
xchg
cld
iret
int3
dec
nop
repz
xchg
shlb
cmpsl
ljmp
insl
pushf
js
loopne
cmp
mov
in
pop
repz
out
jno
orl
and
push
push
dec
cmpsb
out
sbb
das
clc
bound
imul
mov
jnp
xor
js
insb
push
jae
sbb
out
sub
adc
ror
cmp
ss
cld
xchg
enter
test
mov
inc
je
mov
cmp
enter
xchg
pop
pop
in
cmpsl
pop
repz
adc
adc
jae
mov
adc
sti
repz
adc
xchg
fisubl
shll
cmp
int
xchg
lahf
bound
les
cmpb
rclb
stos
sub
dec
jle
jae
pop
int3
mov
enter
sub
sbb
add
out
lds
pop
rclb
movb
aam
js
movsb
pop
ja
sub
cmpsl
in
inc
je
jp
call
and
mov
lret
mov
jecxz
gs
and
cmp
adc
jg
pop
inc
cli
cmp
popa
dec
and
lahf
js
dec
sub
out
and
shrb
mov
dec
push
sub
jns
imul
push
push
fs
pop
adc
fprem1
cwtl
sbb
xor
das
xchg
rorb
rcll
jg
or
ljmp
sarb
test
lods
sbb
mov
and
push
outsb
jp
cwtl
das
adc
xor
cmp
dec
adc
mov
les
test
adc
sbb
scas
test
pop
inc
cmp
clc
jb
out
dec
ds
mov
rorb
jae
cli
add
dec
xchg
popf
xor
lret
int3
mov
clc
jns
sahf
out
inc
ret
xchg
and
mov
mov
add
and
lods
mov
mov
mov
jle
sub
lcall
iret
insl
pop
sub
push
pop
movsb
rcr
out
out
lret
fimuls
push
mov
movb
bound
mov
xchg
xchg
mov
fstps
add
insl
push
jmp
and
cmc
add
pop
ret
xorl
cmpsl
sub
enter
in
mov
jle
scas
push
mov
aam
fdivrl
fists
cs
cwtl
ljmp
loopne
stos
dec
into
in
push
lahf
movsl
pop
adc
sub
fidivl
daa
in
jns
dec
pop
in
inc
inc
in
in
xchg
insl
inc
xor
push
dec
sbb
jle
lret
xlat
pushf
ja
hlt
jno
testl
push
cmc
inc
xchg
jne
jp
add
pushf
mov
addr16
push
mov
push
dec
mov
mov
and
dec
std
sarb
aad
hlt
cmpsl
ljmp
xlat
rclb
add
adc
aam
mulb
push
ja
fldenv
jecxz
jge
insl
mov
loopne
out
sbb
adc
ret
add
push
aam
mov
pop
cmpsb
push
cmpsl
lock
fs
inc
pop
or
xlat
sbb
inc
sub
mov
sbb
out
aaa
add
repnz
inc
dec
xchg
in
pop
jecxz
cmpl
loopne
or
xchg
out
ja
sub
cmp
mov
mov
pop
lret
mov
xlat
imull
movsl
fwait
rcrb
adc
adc
xlat
mov
mov
test
test
je
and
and
popf
sub
xlat
pop
sbb
imul
or
mov
xchg
loopne
cmp
and
sti
lret
pop
add
filds
or
cmpl
scas
fs
jo,pt
pop
or
dec
insl
cmp
outsl
pop
aaa
ds
jnp
dec
stc
push
int3
aad
scas
addb
andl
push
ja
cltd
sub
xor
imul
notb
mov
mov
repnz
aas
sub
jns
xorl
subl
in
ljmp
sbb
lahf
cmpsl
pop
iret
and
and
repz
ds
cwtl
lret
shrl
mov
mov
or
aas
cld
movsl
cmp
cvttps2pi
movsb
int
pop
mov
cmp
add
xor
es
outsl
nop
daa
sbb
scas
push
rep
jb
or
subl
ljmp
lea
dec
dec
xor
push
inc
sub
loop
mov
fldt
rcll
sahf
xchg
iret
jecxz
pushf
and
arpl
pop
int
or
push
lret
stos
outsl
and
adc
dec
addb
neg
mov
add
inc
mov
jb
negl
pop
rolb
add
add
pop
loopne
adc
xchg
mov
call
mov
mov
movsb
rcll
mull
les
test
mov
mov
mov
repz
sub
dec
push
or
scas
jo
insl
sbb
inc
inc
sbb
dec
pop
jbe
or
mov
cs
fistps
outsb
ljmp
lds
mov
test
mov
jnp
xchg
or
insl
xchg
std
and
jg
call
scas
inc
mov
test
xor
push
sub
call
hlt
fs
xchg
iret
inc
loopne
ds
xchg
cmpsl
outsb
dec
or
inc
jb
push
stos
sub
fistpl
sub
aam
cmp
push
xor
xchg
mov
mov
out
outsb
scas
xor
cmp
fwait
in
inc
xchg
loope
fildll
cwtl
push
inc
cld
ds
fnstcw
orb
lea
dec
mov
dec
sbbl
aam
jmp
fistpll
mov
lret
vmread
mov
and
pop
pop
aaa
dec
stc
xor
cmpsl
pop
push
push
test
push
insb
adc
movsb
fidivrs
das
bound
aas
pop
xorb
loope
out
loopne
fldl
lret
xor
ret
lock
jne
les
cwtl
clc
hlt
fwait
mov
pop
jae
push
imul
cmp
fistps
sti
cmc
pushf
repz
mov
adc
and
incb
in
scas
repz
cld
cltd
adc
dec
inc
and
push
jp
mov
jb
mov
int3
stos
jl
fldl
pop
jp
pop
out
or
inc
out
push
mov
cmp
and
xlat
push
adc
ror
mov
je
lahf
test
cmp
or
inc
xchg
mov
insl
aaa
inc
aam
lcall
popf
jp
test
adc
xor
mov
jmp
fcmovu
lcall
stos
imul
sub
push
ficompl
in
dec
fldcw
sub
and
sbb
push
js
outsl
orb
pop
movsb
lea
cmp
or
push
dec
add
nop
adc
jl
sub
jp
pop
push
hlt
fiadds
xchg
cmpsl
std
add
jge
fldl
push
loope
dec
insb
inc
rcll
pushf
add
lods
sbb
mov
ds
cmc
lods
jo
into
or
lret
mov
add
int3
pop
enter
inc
push
popa
divl
xchg
push
sbb
movsl
sahf
setbe
int3
mov
push
add
outsl
fimull
and
cmp
imul
test
xchg
lcall
divb
aam
jnp
dec
popa
insl
push
sub
icebp
sbbb
or
or
and
mov
fs
ret
or
rcrl
in
pop
jle
mov
lods
or
loopne
xchg
arpl
cmp
scas
lock
sti
sub
sbb
xlat
add
inc
jo
fwait
mov
in
push
aaa
mov
mull
or
jp
lock
test
jge
cmpsb
cmp
jl
xchg
xor
pop
inc
pop
les
test
add
xor
push
xchg
adc
sbb
daa
dec
or
pop
cmp
adc
dec
sahf
jecxz
xchg
cmp
clc
mov
cld
cmc
adc
sbb
cmp
dec
add
pop
ljmp
xlat
add
xor
jo
mov
mov
bound
inc
insl
mov
aas
mov
in
adc
push
loopne
or
mov
dec
cwtl
mov
mov
dec
cmc
arpl
pushf
sbb
cmp
rcrl
aad
hlt
test
popf
xor
xchg
sbb
lock
add
enter
test
call
inc
mov
adc
popa
cmc
sbb
bound
xchg
xor
push
bound
or
hlt
inc
shlb
lock
out
jns
sarl
iret
fmul
popf
inc
rolb
push
and
or
negl
pop
cmp
mov
in
movsb
xchg
xor
mov
xor
shll
aad
cmpsl
repz
lret
mov
iret
or
orb
in
jae
stos
mov
outsb
sub
aam
mov
push
jmp
ficoms
out
std
lds
xchg
mov
push
nop
or
cmp
fwait
adc
or
in
lock
dec
inc
adc
lods
mov
mov
cmp
or
ss
jle
cmp
sub
mov
inc
dec
dec
push
movsb
out
cmp
in
rcll
adc
loopne
and
mov
cmp
and
mov
ret
inc
fidivrl
out
in
mov
clc
popa
icebp
jne
jl
sbb
jne
hlt
sbb
push
gs
pusha
hlt
mov
add
jp
fcom
cmp
mov
mov
or
jae
ss
cwtl
add
inc
cmp
mov
loopne
mov
stos
mov
shr
and
mov
and
pop
push
rol
jne
neg
loope
mov
pop
ror
in
cmp
mov
inc
js
mov
push
ret
loopne
in
sbb
test
cmp
inc
in
or
dec
mov
test
xchg
loope
stc
or
cmp
pop
gs
cwtl
insl
sbb
push
insl
push
cmp
das
cli
ret
pop
or
mov
push
push
ret
sub
dec
jns
sbb
jae
xlat
out
cmpsb
sbb
cmp
mov
popf
fwait
sahf
xchg
xor
loop
adc
mov
idivl
pop
jne
adc
and
scas
adc
and
lock
mov
add
push
mov
xchg
xchg
fs
xchg
jns
push
shl
call
int
push
xor
cmp
push
outsl
push
loopne
pusha
mov
dec
loop
daa
sbb
in
pop
ljmp
dec
fmull
pusha
sub
cmpsb
out
ljmp
jmp
or
jmp
lds
push
imul
popf
add
call
out
icebp
cli
inc
or
push
dec
jecxz
nop
arpl
sbb
js
xchg
adc
jl
enter
jp
xchg
outsb
aaa
push
mov
fs
stos
lret
lahf
add
stos
lods
jl
mov
out
or
or
xor
jmp
push
and
pushf
popa
popa
nop
jbe
mov
pop
mov
or
xlat
and
or
stos
cmp
sbb
ss
into
mov
and
fldenv
pop
ds
lret
bnd
scas
cwtl
push
fisubrs
jmp
pop
jl
pop
daa
sub
es
das
cmc
cmpsb
ret
shll
mov
popa
adc
data16
pop
and
xchg
dec
xchg
icebp
or
hlt
mov
and
lds
jge
jge
out
mov
test
jp
adc
pusha
emms
adc
pop
mov
mov
in
jbe
mov
sub
mov
and
jp
loope
imul
cmpsb
add
gs
shlb
imul
dec
or
mov
test
shlb
or
inc
je
ljmp
xor
pop
jmp
jo
lretw
jae
mov
mov
fst
iret
inc
pop
int
xor
sub
dec
sbb
in
or
xchg
inc
cli
or
cld
fwait
mul
scas
bound
jmp
int
or
or
scas
push
out
jp
xchg
cmc
inc
insb
jae
cltd
idiv
movsl
push
test
jmp
fldcw
insl
mov
xor
mov
push
xchg
rorl
out
lods
sbb
das
shl
ss
in
shl
push
movsb
push
pop
rcr
xchg
ja
cmp
xor
negl
into
jecxz
loopne
data16
dec
loop
repz
mov
ficoml
mov
pop
stos
dec
jno
jg
fisttpl
sbb
mov
int3
sbb
mov
pop
lods
popf
push
cwtl
adc
stos
or
mov
inc
out
add
lret
sarl
int3
rcrb
cmp
sub
lds
out
shl
mov
aas
in
icebp
test
mov
mov
mov
mov
xchg
add
mov
xchg
cs
mov
arpl
in
mul
xorb
add
lods
and
ljmp
fucom
cmp
jmp
xor
sbb
or
sbb
pop
sti
in
test
push
inc
ret
adc
inc
fdivr
ret
jge
mov
fsubl
rorl
mov
ror
xor
imul
or
mov
mov
lock
pop
mov
sbb
fsub
jmp
pop
fistl
push
jecxz
test
mov
movsb
jmp
mov
les
lods
outsb
mov
or
lahf
mov
fcom
inc
adc
inc
out
into
test
lods
fsubrp
push
xor
cmpsb
or
xor
pop
data16
pop
int3
or
mov
ret
mov
dec
icebp
clc
mov
mov
imulb
inc
jge
shufps
xchg
das
cmpsb
int
lods
das
in
test
push
cmp
mov
add
out
push
xor
cmp
mov
out
mov
dec
sub
cmp
sbb
jns
xchg
push
mov
sbb
icebp
inc
dec
sbb
fiadds
clc
xchg
test
icebp
dec
inc
hlt
sub
stos
shl
ljmp
enter
iret
add
int
mov
test
stos
cmp
add
js
ret
xchg
imul
shl
stc
test
mov
in
mov
jmp
push
mov
pop
xor
rcrb
in
jmp
inc
mov
orb
inc
fmul
sahf
shl
add
iret
in
sbbb
bound
inc
xchg
xchg
rolb
add
push
cmpsb
dec
and
inc
add
repnz
orb
mov
outsl
rorb
test
dec
inc
repz
push
loop
clc
inc
arpl
sub
sbb
fdivrs
mov
inc
adc
xchg
aam
cmc
movsl
dec
ds
cs
dec
out
mov
inc
in
test
mov
add
nop
mov
shll
sarb
sbb
imul
mov
adc
jno
fwait
xchg
int3
jnp
test
mov
repnz
mov
cmp
imul
jle
inc
jb
pop
dec
cmp
sbb
fistps
mov
add
xchg
test
mov
loope
pop
in
ffreep
jg
in
popf
jg
or
pop
mov
lret
pop
dec
ds
sbb
xor
sbb
lods
into
pop
stos
mov
outsl
jnp
and
enter
insl
inc
cmp
push
and
pop
out
int3
pop
addr16
cld
pop
daa
icebp
orl
js
inc
sahf
je
sub
ds
dec
movsb
xor
pop
push
fistps
das
ret
fcmovbe
pop
or
lret
adc
addr16
lahf
or
daa
push
adc
dec
mov
in
mov
jle
push
sbb
testl
xor
push
xor
cld
sbb
mov
lods
push
cltd
xchg
add
xchg
bound
mov
cvtps2pi
aaa
stos
icebp
je
lds
loopne
xchg
fnstenv
outsb
and
lea
jne
inc
sbb
jno
adc
or
xchg
cli
insl
or
insb
xorl
inc
mov
push
cmpsb
cmp
mov
in
loopne
stos
mov
cmp
sub
pop
popf
xchg
scas
xchg
aaa
lea
jg
sti
xchg
jl
je
into
out
jg
xchg
pop
sti
dec
in
jg
adc
pop
fsubrl
sbb
fildl
mov
mov
mov
push
lock
icebp
mov
addr16
jmp
mov
mov
push
shl
xor
pop
imul
subb
lret
push
fists
outsb
or
ja
pop
jb
cltd
scas
jmp
mov
loopne
and
insl
or
lahf
aas
dec
pop
push
fidivl
adc
das
cmpsl
cltd
push
data16
inc
xlat
xchg
sbb
push
or
lds
cmp
xchg
fstp
jmp
xor
outsb
ret
mov
lea
mov
cmp
rclb
fs
popf
add
nop
shrb
pop
push
test
mov
jbe
arpl
mov
jbe
jp
lods
mov
sbb
xor
mov
fdivl
loope
sbb
popf
andb
mov
cmp
cmp
or
pop
jne
mov
or
out
mov
mov
xchg
int
or
mov
adc
lea
out
decb
lock
andb
or
out
mov
mov
mov
orl
push
insb
xchg
incb
jecxz
inc
mov
jmp
rcrl
jnp
dec
xor
frstpm(287
insl
and
std
rorb
push
cmpsb
xor
mov
jae
add
hlt
es
cmc
std
test
clc
mov
cmpsb
insl
mov
stos
xchg
pop
int3
xchg
das
and
ss
dec
fwait
pop
repnz
aaa
jecxz
sti
dec
sub
cmp
test
cli
jb
mov
push
xorl
call
ds
ss
fildll
inc
mov
pop
xchg
mov
xor
inc
mov
push
popa
xchg
insl
or
lea
ss
stos
pop
pop
pop
pop
adc
or
jne
jp
mov
popa
adc
jg
shl
in
cmpsb
lds
sbb
sbb
iret
dec
aad
testl
mov
fcom
or
mov
xor
cltd
loope
pusha
cs
mov
pushl
lods
add
dec
mov
dec
ficoml
mov
test
adc
fs
std
imul
dec
rcl
fsubr
dec
data16
mov
mov
repnz
sarl
mov
and
stc
sbbl
mov
mov
ret
clc
lds
push
xchg
push
adc
call
inc
inc
stos
xor
mov
sub
xchg
mov
add
xor
sub
mov
xor
enter
or
lods
push
jns
sub
in
xor
adc
aaa
or
loope
and
in
lods
in
lock
xor
fwait
stc
aaa
ja
xor
sbb
call
fstpt
inc
popa
cmpsb
ljmp
aaa
dec
leave
adc
push
xchg
cmp
xchg
xchg
push
cs
xor
pushf
push
xchg
mov
aad
dec
mov
aas
add
lret
jbe
bound
sub
xchg
fiaddl
sbb
and
mov
outsl
daa
into
xchg
lock
jge
adc
sbb
dec
add
sbb
add
pop
jmp
clc
rol
mov
cmp
in
or
lahf
out
test
pop
int
lcall
xchg
leave
pop
in
jmp
bound
nop
sbb
lcall
xor
pusha
dec
into
std
mov
aam
sbb
mov
loopne
jne
pop
sbb
negl
push
dec
in
push
sub
shrl
int
mov
lods
xchg
lods
or
pop
lods
sar
cmp
pop
adc
stc
add
push
out
xchg
mov
mov
in
dec
xchg
pushl
sub
mov
sbb
dec
jns
sbb
adc
mov
fldt
int3
or
add
jae
adc
xor
inc
mov
ficompl
or
jge
scas
leave
add
jmp
xchg
enter
outsb
popf
into
pop
xchg
jbe
repnz
mov
xchg
or
jecxz
aam
mov
xchg
cmp
mov
xchg
iret
iret
pop
jo
in
sub
ljmp
in
in
push
ja
adc
bound
leave
inc
loop
into
sarb
sbb
sub
mulb
cmp
mov
push
or
pop
mov
mov
xchg
pop
lahf
nop
mov
mov
dec
enter
jae
enter
stos
enter
xchg
repnz
mov
xchg
aad
pop
mov
ljmp
add
lock
add
inc
adc
inc
jae
addb
sbb
je
mov
pusha
mov
cmp
and
out
outsl
jp
jmp
sarl
mov
mov
cli
out
in
pop
rcrl
xlat
loope
xchg
adc
outsl
cli
popa
addl
popf
and
nop
mov
cmpsl
and
cltd
push
push
inc
cmp
bnd
mov
fidivl
xor
loope
pop
xor
add
movsl
pushf
adc
push
addr16
mov
mov
cmp
jno
mov
iret
add
test
mov
push
cs
add
xor
or
xchg
xchg
mov
mov
add
push
mov
add
stc
inc
xorb
and
xor
iret
loopne
bound
jbe
sub
sub
adc
in
cltd
push
mov
adc
sub
fst
add
jecxz
lea
pop
push
mov
in
in
xchg
xor
mov
mov
insl
jle
fucomi
scas
lods
cmp
andl
mov
push
xor
lret
in
testl
xor
jle
jno
loope
insl
sub
xor
in
test
ret
pusha
xchg
mov
or
in
bound
pop
mov
jns
jb
xchg
mov
movsb
mov
aaa
xchg
ss
fistl
pop
cmp
frstor
cmc
mov
insb
out
sbb
int
int
cwtl
mov
flds
mov
repnz
pop
cltd
dec
cld
rorl
xor
push
adc
scas
out
popf
add
clc
push
mov
sbb
arpl
pushf
cmpsb
in
mov
les
xchg
scas
ljmp
push
or
cmp
jg
sbb
out
and
xor
stc
mov
mov
shrb
subb
jg
mov
dec
mov
sarl
cwtl
outsb
les
jmp
xchg
leave
jge
out
in
lock
pop
pop
xor
jle
idivb
cmp
adc
lret
or
scas
fdivl
sbb
stc
xor
inc
test
mov
inc
jle
xor
cltd
mov
call
movsb
rcrb
in
xor
out
pop
icebp
pop
jle
dec
mov
stc
loop
test
push
or
jne
shlb
mov
repnz
mov
out
mov
mov
addr16
fs
mov
lods
loopne
inc
and
insl
xchg
sbb
mov
mov
cwtl
stc
sti
dec
lret
movsb
dec
cmc
aas
jno
and
jno
cmc
mov
jnp
pop
lret
repz
push
aad
lods
mov
push
jecxz
mov
dec
jle
aad
cmpb
push
mov
icebp
dec
in
and
pop
out
scas
xor
sti
pop
outsl
dec
imul
cmp
cltd
and
or
iret
and
xor
adc
ja
dec
into
lret
popf
xorb
insb
loop
push
sbb
out
pop
fmuls
lds
cs
idivb
mov
pop
pusha
repnz
add
out
xlat
imul
xchg
jmp
fdiv
and
inc
fidivrl
enter
test
xchg
sbb
movsl
or
inc
repnz
imulb
lahf
jbe
aas
outsl
adc
add
mov
mov
inc
and
repnz
mov
mov
push
movsb
sub
push
lcall
mov
andl
xchg
clc
mov
arpl
dec
pop
cmc
pushf
je
push
sbb
popf
jae
pusha
push
inc
aad
push
pop
mov
fcmovnbe
sbb
and
sbb
add
sarb
dec
arpl
cmp
stos
out
stos
pushf
adc
jb
mov
and
shrl
pop
xor
in
fmul
out
js
nop
mov
rcll
fnstcw
cwtl
xor
call
outsl
mov
sti
jge
xchg
popf
xchg
fs
mov
mov
dec
sub
or
push
xchg
adc
sub
faddp
xchg
xchg
lock
push
mov
cwtl
add
loopne
call
int
push
jge
push
mov
mov
cmp
mov
aas
mov
fisubrs
lds
int3
sbb
pusha
out
pop
sub
aam
testl
inc
cmp
pusha
dec
mov
mov
call
dec
lock
pop
std
adc
inc
push
hlt
inc
fsubl
mov
testl
mov
lods
imul
jg
cli
je
lea
jne
ret
xchg
xchg
es
xlat
jle
mov
jae
add
cmp
inc
daa
pop
xchg
test
iret
out
add
scas
nop
clc
lods
out
and
xchg
mov
jo
mov
iret
push
cmp
enter
lret
adc
sti
xchg
cwtl
add
bound
notb
pusha
fsubrl
clc
or
inc
icebp
jno
mov
inc
jb
mov
test
fdivl
mov
push
mov
push
sub
xchg
mov
adc
ljmp
xchg
cld
xchg
jb
jp
push
imul
lahf
adc
push
add
xchg
sbb
dec
std
xlat
sub
sub
bound
cmp
fs
xor
std
daa
int
xor
loop
mov
out
cmpsb
add
or
add
jns
ja
jmp
inc
psubusb
jp
call
jae
and
sbb
mov
or
rclb
sahf
and
iret
jp
fsub
sbb
mov
das
ljmp
jg
adc
shll
mov
aaa
add
adc
lods
xor
dec
pop
mov
movsl
jnp
sbb
dec
xchg
mov
and
out
insb
fnsave
mov
jbe
sbb
test
call
pushf
cmp
ss
push
stos
sbb
test
shrl
imul
xchg
leave
movsl
outsl
add
adc
shll
lret
jne
sub
jb
inc
es
and
jmp
cmp
jo
lret
loopne
ret
cmp
sub
arpl
in
cmp
loope
dec
sbb
jae
test
jo
mov
pushf
sbb
popa
in
push
ret
arpl
sahf
cmp
push
cmp
mov
and
mov
je
push
sti
dec
mov
aam
xchg
in
movsl
pop
mov
inc
movsb
mov
mov
push
or
adc
rcl
add
jmp
push
cltd
xchg
imul
mov
inc
push
push
mov
lods
and
jo
stos
mov
sub
jbe
bswap
std
in
pushf
call
std
add
and
push
jb
xchg
sub
sub
xor
aas
and
and
push
rcrl
add
mov
dec
je
jl
aaa
pushl
stos
jl
inc
xor
dec
cs
dec
and
adc
inc
loope
push
xor
mov
cmc
aad
dec
mov
jb
add
out
push
iret
sarl
lock
jle
imul
adc
lods
cmpsl
and
pop
int
lods
cmp
xchg
push
push
pop
sbb
cmp
ja
sar
ja
mov
rcrl
inc
jle
stos
jae
scas
lret
sti
fstpl
pop
lahf
pusha
jnp
push
icebp
scas
les
sahf
inc
test
cmp
mov
and
jae
imul
aas
popf
add
hlt
mov
cmp
jg
loop
mov
popf
stos
lock
mov
pusha
push
push
faddp
mov
mov
pop
push
cli
shl
push
cmpsl
mov
ja
sub
out
ja
xlat
xchg
xor
push
aaa
jg
mov
lcall
test
sub
lahf
and
pop
sbb
jp
hlt
push
subl
adc
popf
es
dec
or
jno
pushf
decl
jne
sbb
mov
lods
cld
jne
inc
pop
mov
mov
inc
jno
ljmp
int
cmp
mov
call
mov
fldt
sub
mov
filds
push
leave
cwtl
xor
cmp
in
and
pop
ret
adc
jg
or
sub
cmp
hlt
jnp
mov
add
fcomps
sbb
mov
in
out
leave
ficoml
pop
mov
and
aas
fmulp
push
out
pop
in
and
pop
stos
jl
or
test
jb
xor
pop
movsb
jno
fidivrs
lcall
mov
add
test
pop
inc
out
sub
lcall
cmc
dec
pushf
pop
ja
xchg
loope
xchg
insb
or
jle
popa
aad
adc
lock
mov
negl
jnp
ret
out
xchg
repz
js
xor
adc
jmpw
cld
xchg
aad
cs
scas
sbb
mov
aam
xchg
mull
mov
mov
loopne
jl
adcl
xor
sub
lods
dec
jb
cmp
pushf
int
mov
or
out
js
add
outsb
mov
cmc
and
cmpsb
stc
inc
pop
repz
pop
add
cli
jmp
outsl
ret
popf
mov
cmp
cmpl
mov
adcb
mov
in
cmp
sbb
mov
jno
dec
dec
mov
mov
out
sti
leave
ret
add
mov
enter
sub
jp
adc
mov
sub
outsb
sbbl
pop
outsl
jge
cmpsb
jp
lret
out
cmp
roll
push
xorb
pop
sbb
mov
je
and
loope,pt
push
cwtl
adc
roll
push
push
js
out
out
pop
xor
outsb
push
cmp
pop
sub
ss
lahf
jns
add
ret
pop
mov
jae
out
cwtl
jae
xor
inc
imul
js
in
or
push
or
push
mov
inc
push
outsb
imul
jp
pop
pop
cmp
mov
lods
fisttps
addl
mov
or
movsl
add
nop
cmp
inc
out
mov
mov
dec
decl
cmp
ljmp
ret
adc
mov
ljmp
add
xchg
xor
or
ret
xor
mov
xchg
subl
jno
pop
xchg
pop
std
fs
cmp
ja
adc
lahf
orb
das
lret
ret
lods
add
idivb
mov
fidivrs
clc
pop
xor
addb
xchg
adc
movsb
xchg
dec
loop
push
iret
pop
adc
push
cmp
loope
cmpsl
jmp
orb
push
jno
scas
pop
movsb
lea
lods
push
cmp
aas
clc
sbb
adc
mov
gs
cmpsb
aas
sub
and
jecxz
int3
clc
shll
mov
sti
fildl
fsub
adc
cwtl
mov
cmp
imull
iret
add
fstp
inc
pushf
hlt
imul
insl
and
inc
lods
clc
lret
cmp
mov
in
in
pop
loope
jno
cmc
sbb
pop
cmp
add
or
dec
cld
mov
push
add
pop
cmp
mov
jge
jecxz
sub
fnsave
jecxz
xchg
dec
call
ss
ljmp
push
push
push
test
iret
stos
dec
lcall
cmpsb
arpl
and
loopne
inc
les
adc
rcrb
test
nop
inc
lods
mov
pusha
in
xor
scas
fwait
push
inc
addr16
mov
ljmp
repnz
repnz
cld
std
jmp
inc
xlat
push
dec
push
out
xchg
mov
fneni(8087
push
mov
mov
ret
int3
clc
stos
mov
mov
fisubs
push
js
push
inc
mov
push
sbb
mov
scas
jle
sub
int3
cmp
mov
jl
negl
jg
jnp
ret
add
sbb
add
rorb
dec
lock
bound
daa
and
aas
xor
ret
pop
xchg
inc
leave
or
xlat
mov
mov
pop
mov
les
and
lret
sub
push
aas
shll
cld
inc
out
mov
sub
mov
push
hlt
xchg
inc
inc
dec
dec
mov
mov
pop
cmp
adc
sub
mov
les
inc
subb
sbb
push
movb
hlt
push
sar
repz
cmp
xchg
ss
scas
sub
add
adc
aaa
sbb
test
or
das
syscall
lods
pusha
jns
shll
mov
insl
xchg
or
enter
rcrb
mov
sbb
jno
and
ljmp
jle
negl
inc
ret
xor
push
shlb
dec
jo
dec
dec
lret
xchg
adc
std
xor
mov
jecxz
in
mov
mov
pop
and
test
pop
imul
ja
or
test
lahf
xor
and
in
ret
xchg
mull
pushf
cli
pop
pop
call
ficoms
or
adc
jl
cmp
imul
push
add
js
pop
or
jmp
and
test
and
in
xchg
clc
add
mov
cmpsb
lret
pop
and
push
cmp
pop
fs
mov
loop
adc
test
inc
jp
call
sub
aaa
xchg
loope
push
psrlw
dec
cltd
es
pop
mov
seta
cmp
lock
cltd
and
sub
jnp
add
cwtl
imul
xchg
fisttpll
xor
sahf
insl
add
cmp
arpl
data16
test
cmp
add
jle
es
popl
or
in
push
sbb
mov
in
das
mov
daa
add
rolb
sbb
stos
jo
dec
push
negl
inc
jecxz
inc
daa
in
in
hlt
jae
stc
sti
mov
stc
inc
mov
sub
sbb
lret
outsb
scas
mov
push
ss
xor
stos
mov
push
sub
sbb
and
lods
aam
frstor
sub
subb
cmp
nop
pop
scas
shrb
fcoml
inc
cmp
inc
mov
mov
movsb
and
ds
into
pop
pop
and
and
cmpsb
xor
xchg
mov
xchg
int
mov
call
je
js
jecxz
pop
outsl
sbb
dec
or
sbb
fmull
and
push
mov
nop
aad
out
insb
sub
ret
jl
pop
stos
jp
mov
jg
fwait
outsl
mov
scas
mov
xchg
xchg
mov
and
xor
test
and
fistl
icebp
popa
sbb
mov
push
sbb
or
mov
push
xor
data16
out
pop
fdivr
jmp
ja
mov
and
adc
out
divl
or
or
imul
and
into
rclb
mov
and
fimuls
push
mov
lods
push
fisttpl
push
movsb
sub
lret
inc
bound
popf
cmp
xor
ss
or
jb
jg
xor
negb
mov
or
pushf
mov
xchg
push
lcall
sub
mov
sti
pop
pop
addb
insl
cmp
push
push
push
xor
or
lock
fucomip
sti
outsl
stos
call
mov
xchg
xchg
jne
sub
mov
inc
fmull
jno
mov
push
or
in
mov
lcall
cmp
jle
lods
inc
test
and
adc
and
jns
inc
lea
or
je
mov
insl
fists
aad
movsl
or
push
cwtl
pushf
adc
arpl
mov
fsts
sahf
sti
ret
mov
pop
add
xchg
pop
fsub
ja
mov
push
int3
or
push
cmp
and
fwait
or
stos
fistpll
popf
sbb
xchg
cmp
nop
cmp
pop
mov
xor
arpl
pop
shlb
lahf
mov
sti
scas
lds
lods
xchg
cli
sti
push
lret
orl
cld
jg
stc
xor
cmp
jns
sub
je
ss
test
out
adc
pop
in
maxps
and
mov
push
jecxz
xchg
lods
js
xor
pop
push
push
push
fwait
jae
xor
lods
sub
repz
push
xchg
test
dec
cmp
jp
fs
out
bound
and
adc
out
xorl
cmpsl
push
mov
or
pop
adc
ja
loopne
xor
sbb
jg
dec
mov
hlt
les
fs
leave
jno
mov
jl
sub
pushf
gs
mulb
xchg
xchg
sub
lods
push
mov
mov
jecxz
inc
mov
bnd
aad
aas
mov
aam
or
fmull
fs
int
push
in
dec
push
es
mov
mov
sbb
incb
cmp
or
push
loope
aas
mov
gs
clc
lret
cmpb
popf
test
jmp
mov
cmpsl
pop
loopne
inc
adc
mov
pop
pop
shl
mov
mov
cli
out
inc
lds
jecxz,pt
stos
inc
flds
cmp
mov
rcl
std
add
sbb
stos
jmp
xor
or
pop
dec
fidivs
pop
inc
arpl
je
adc
cmp
inc
lea
push
push
xor
lock
ret
jne
jno
add
sub
xor
push
cmp
pushf
es
jle
cmp
xor
stos
xorb
js
add
imulb
flds
lahf
sbb
pop
pop
enter
lea
or
xchg
or
out
and
into
decl
or
data16
pusha
adc
xchg
xchg
dec
pop
inc
add
cs
pop
or
inc
fwait
pop
adc
je
mov
jmp
add
add
bound
cmp
daa
mov
jle
push
js
movsl
add
in
push
je
int3
sbb
nop
dec
cmp
adc
jnp
lahf
out
dec
lds
lods
leave
in
call
and
faddl
add
jnp
icebp
mov
jg
imul
add
cmp
xchg
shl
or
jmp
cmc
nop
fnstenv
es
test
pop
sti
scas
out
add
scas
push
sbb
cli
stos
dec
sub
pop
pushf
sub
push
push
sub
and
push
xor
mov
enter
aas
pop
jge
or
xor
icebp
scas
lds
xchg
pop
repz
jecxz
xlat
mov
xor
add
repz
inc
or
jo
sbb
pop
xchg
fcmovbe
pop
push
leave
push
cwtl
push
cmpsb
faddl
xorb
js
and
in
cmpsl
inc
pop
jb
add
jno
and
adc
dec
push
mov
pop
mov
pop
test
test
aaa
mov
sub
push
push
pop
out
jge
lcall
aas
pop
inc
outsb
mov
js
fldcw
push
and
lahf
sub
movsl
ret
jecxz
push
xchg
shll
movsb
fnstenv
fisubs
add
cwtl
pop
xchg
pop
mov
add
mov
fstpl
lea
aaa
sbb
xor
leave
push
xor
jbe
push
xor
movsb
add
call
shl
mov
fimuls
in
movsb
or
scas
les
xor
mov
data16
cltd
fwait
push
and
ret
or
mov
mov
adc
jle
dec
fidivrs
les
jecxz
or
sbb
xor
lret
lds
pop
mov
cli
out
lcall
rorl
ljmp
mov
repnz
loopne
sbb
jp
arpl
ss
mov
mov
stos
xor
mov
mov
push
jl
call
lods
std
leave
xchg
xchg
repz
add
movb
insb
pop
dec
aad
or
push
pop
xor
jl
sahf
mov
aas
cmp
inc
jecxz
sub
xor
xchg
pushl
mov
add
sti
hlt
ret
push
addr16
or
xor
fxch
mov
sti
fmul
fldt
add
test
or
inc
or
push
pop
or
or
ja
xor
xchg
mov
cmp
push
rcll
lahf
int3
iret
addb
lock
push
sbb
cmp
xor
mov
cld
jle
xchg
das
jge
sbb
outsl
leave
mov
shlb
xchg
pushf
lahf
mov
xchg
dec
pop
cwtl
dec
loope
xor
repz
dec
scas
stos
in
idivl
mov
pop
jae
adc
mov
test
outsb
inc
xor
cld
gs
sub
pusha
pop
cmp
mov
adc
repnz
les
loopne
lcall
addr16
pop
cmp
dec
test
mov
aad
xlat
jb
cmp
and
jbe
push
nop
lods
push
sbb
lcall
xchg
xor
ficomps
push
test
ffree
sub
pushf
push
mov
popa
mov
in
ss
xchg
adcb
insl
cmp
adc
push
adc
push
je
sbbb
mull
stos
arpl
cmp
mov
sub
jbe
inc
sbb
daa
or
test
loop
jmp
mov
popa
imul
pop
aas
or
cmp
mov
js
mov
jns,pt
and
or
sub
data16
in
or
and
push
cmp
shrb
bnd
call
adc
adc
rcrl
mov
jno
leave
inc
cmpsl
jmp
cmp
fisubs
jbe
xchg
ret
dec
jo
dec
pushf
test
lahf
outsl
inc
loopne
cmp
out
lret
or
aam
push
fbstp
cmp
dec
dec
mov
subb
les
mov
sub
icebp
sti
stc
mov
rcrl
cmovno
add
arpl
or
in
negl
ljmp
fimull
push
jno
clc
mov
enter
add
xor
jge
lods
movsl
movsb
and
sub
pop
mov
loop
lods
jecxz
dec
iret
test
xor
nop
and
mov
adcb
adc
iret
fists
nop
dec
leave
div
mov
adc
nop
loope
nop
pop
sub
adc
daa
fisubl
inc
mov
insb
mov
lods
dec
aaa
mov
pop
pop
stc
insb
out
testb
sub
nop
into
xchg
add
pusha
loop
je
mov
insl
sahf
out
mov
lods
jmp
fcompl
sbb
mov
push
rorb
xlat
pushf
cwtl
push
inc
mov
popf
aas
lods
cld
dec
popf
pop
jns
or
or
mov
mov
mov
mov
xchg
mov
stos
dec
mov
cmpsb
jb
add
jo
test
sbb
adc
jae
push
iret
out
jge
mov
push
lret
sbb
pop
mov
idivl
daa
gs
push
arpl
ror
cli
movsb
test
push
nop
xorl
in
sbb
and
xchg
les
lds
pop
push
mov
ljmp
das
push
inc
sub
pusha
popf
mov
jnp
and
jb
orl
jg
mov
mov
lods
hlt
mov
push
xchg
test
xchg
add
std
sbb
and
add
cli
nop
mov
mov
push
push
test
jmp
pushf
add
adc
js
outsb
sub
sbb
lods
stos
shll
imul
inc
mov
loope
negl
adc
cmp
mov
scas
paddsw
pop
ljmp
adcl
xor
cmpb
jge
xchg
cwtl
lret
mov
sahf
push
lods
stos
mov
stos
xor
loopne
and
xchg
add
jb
jb
adc
inc
nop
xor
jmp
push
inc
xor
loopne
sub
xor
inc
lock
push
cmpsl
dec
jbe
cli
pushf
push
jo
dec
lret
pop
xchg
rclb
jnp
inc
mov
aaa
test
mov
jg
lods
call
popa
nop
out
jmp
pop
unpcklps
xor
imul
mov
or
xchg
sahf
adc
mov
loopne
jno
and
imul
lcall
out
cwtl
cmp
jno
cmp
movsl
cmp
popf
orb
insb
inc
sbb
dec
push
push
ror
notb
int3
sbb
enter
shrb
pop
jle
shl
ror
out
or
pop
pop
pop
pop
pop
lods
sub
cmpsl
or
mov
sahf
inc
ljmp
mov
scas
call
cmp
daa
adc
ja
cld
roll
les
xchg
inc
sbb
inc
pop
add
xchg
popf
jo
cs
push
mov
lea
jecxz
jg
jns
cmc
add
and
jecxz
jl
xchg
adc
shrl
xchg
sti
cmp
jle
pop
ljmp
jl
enter
lret
lods
dec
pop
sbb
add
xchg
add
add
fisttpll
fs
fs
cmp
cmp
jg
mov
in
pop
mov
cmp
inc
outsl
cwtl
mov
cmp
xor
aas
sub
pusha
mov
xchg
pusha
repz
cmp
dec
std
cmpl
out
inc
arpl
and
inc
gs
xlat
inc
shl
jo
or
add
xor
enter
int
jl
pop
and
jmp
jge
fimull
xchg
jp
pop
popa
jbe
cmpsb
cmp
sub
or
jg
sub
pop
add
cwtl
cmpsl
inc
lods
xor
les
mov
add
and
sub
sahf
cmp
mov
mov
cld
adcb
jne
mov
fmuls
ja
jae
jg
add
xchg
mov
cmp
sbb
fnstsw
and
pop
push
sub
and
xor
cld
push
inc
inc
push
or
call
in
xchg
lock
leave
out
pushf
dec
sub
add
aam
stc
inc
sub
sti
cmpb
sub
out
dec
out
dec
mov
movsb
call
loope
fidivl
dec
xor
add
punpckhwd
sbb
or
scas
cld
ficoml
xchg
xchg
cwtl
jne
fbstp
loop
or
xchg
jns
scas
xchg
push
sub
xchg
cwtl
sbb
mov
shrl
test
and
jmp
rolb
out
shll
stc
outsb
scas
gs
mov
in
outsl
fs
dec
sbb
mov
fs
in
mov
push
pushf
cld
lahf
std
ficomps
or
outsb
mov
imul
push
testl
mov
fldl
rcrb
adc
test
pop
sub
cli
movsb
sub
arpl
in
xchg
add
pop
popf
jno
test
ret
mov
mov
inc
push
adc
jbe
cmc
sub
inc
pop
sbb
fstl
push
or
call
jne
aas
cli
jnp
ss
cwtl
cmp
mov
aam
mov
lahf
outsb
test
inc
mov
xchg
ljmp
cli
addr16
add
add
dec
cli
lds
cmp
sub
out
mov
fs
jne
int
xlat
cmpsl
push
int
jb
sbb
jl
dec
mov
in
jbe
test
or
cmp
shl
or
adc
mov
bound
leave
ss
mov
pop
push
add
jno
lret
incb
xchg
pop
jmp
mov
jl
cmp
sub
adc
sbb
sub
jp
pop
fldl
pop
bound
dec
cmp
sub
add
pop
push
or
jne
fists
aam
inc
mov
cmp
mov
call
repnz
aad
mov
cmp
ret
mov
nop
loope
sub
mov
cmpsl
pop
push
mov
in
xor
sub
push
mov
addl
pop
pop
sbb
pushf
test
popl
xorl
sub
adc
shlb
jne
test
imul
mov
cmp
cld
jl
pushf
popa
repnz
pop
sahf
loopne
mov
adc
pop
mov
xchg
popa
mov
fsts
in
pop
in
mov
inc
out
aas
inc
daa
push
andnps
jg
mov
int
xor
bound
jno
jg
jbe
xor
leave
inc
jl
sbb
push
jmp
notb
jae
dec
aad
cmpsb
and
sbb
gs
arpl
cmpl
aaa
jmp
xor
je
repnz
shll
outsl
mov
push
push
jbe
shll
in
mov
daa
cmpsl
sahf
popa
out
test
push
cmp
call
sbb
je
add
push
outsb
jo
jmp
inc
iret
ljmp
enter
xor
test
lcall
xchg
fstpt
pusha
fisubs
addr16
push
cmpsl
scas
lret
pop
adc
dec
outsl
movsl
in
inc
xchg
imul
movsb
xor
lret
lret
arpl
mov
jns
in
nop
hlt
pop
shll
jne
sub
mov
ficomps
pop
out
cli
das
dec
je
loope
loopne
aaa
jnp
inc
mov
addr16
sbb
adc
test
mov
test
xor
or
mov
inc
idiv
adc
dec
loopne
add
iret
push
in
pushf
fs
or
outsb
adcl
lret
inc
rcr
xchg
xchg
das
and
add
aaa
mov
cmp
cmp
stos
mov
or
and
sbb
add
test
jo
jecxz
insb
adc
aam
mov
cmp
in
stos
pop
mov
cmc
jae
xchg
and
xchg
js
sub
fbld
cmp
mov
cltd
mov
or
sbb
mov
jns
jnp
out
adcb
popf
out
mov
loopne
fstps
in
push
fsubrl
dec
dec
in
int3
rcrl
pop
sahf
lret
mov
cmc
data16
pop
jo
or
clc
sub
push
pushf
push
mov
sahf
fs
bound
movb
pop
das
dec
pop
mov
jl
push
loopne
sbb
in
gs
xchg
adc
paddusw
sub
push
shl
jnp
pop
sub
lock
stos
hlt
adc
dec
mov
addr16
inc
mov
cmp
xor
aam
dec
or
scas
and
mov
mov
idiv
ds
mov
test
cmp
jg
sub
jne
nop
cld
sbb
rolb
rcr
add
xlat
pop
std
or
mov
pop
pop
mov
lcall
and
or
sub
mov
jmp
mov
aam
sub
jg
fcoml
scas
jge
xchg
or
outsl
push
movsl
cld
mov
cmp
gs
xor
mov
and
push
mov
mov
mov
fdivrl
loope
jg
pop
repz
cmpsb
add
into
xor
mov
xorb
stos
mov
out
jnp
jge
out
adc
pop
fldt
stc
les
repnz
inc
lcall
popf
pop
inc
cmp
add
sti
sbb
xchg
jae
pusha
mov
iret
push
xor
xor
cmpsl
das
stos
ss
int
xchg
stc
jle
out
inc
sbb
andl
ljmp
inc
popw
xor
out
mov
arpl
dec
faddl
rorl
mov
pusha
adc
stc
jo
cmp
push
sbb
enter
or
xor
jns
lret
mov
ja
imull
xor
sub
fisubrl
dec
or
lahf
xor
fcmovbe
push
and
push
loopne
into
push
mov
aaa
mov
mov
pop
jl
rcrb
adcl
xchg
or
addr16
or
xchg
adc
dec
sub
lret
pop
movsl
xchg
rclb
push
push
push
jge
daa
es
sbb
and
and
int3
movsl
adc
cmp
pop
in
mov
repz
ljmp
movsb
dec
gs
out
aaa
push
mov
mov
cmp
jmp
cmp
pop
out
insb
mov
out
pop
mov
pushf
lods
jmp
push
sub
inc
dec
add
adc
in
jns
push
xchg
sbb
ja
add
ja
cld
jb
bound
xchg
fnstsw
mov
subl
arpl
lcall
cmp
lahf
divl
mov
adc
xor
scas
xchg
aaa
in
in
mov
and
push
mov
das
imul
mov
rcr
xlat
push
adc
xchg
lcall
xor
shrb
inc
notl
int
movsl
movsb
jbe
rdtsc
leave
lock
xor
inc
pop
cltd
mov
or
pop
cs
es
ret
xchg
ss
push
or
pop
ret
mov
push
lea
int3
fiadds
xchg
sbb
cmpsl
dec
pop
xor
iret
or
push
push
mov
sub
cltd
mov
push
std
push
pop
cwtl
jle
sete
mov
cmpl
scas
xchg
mov
jbe
xchg
insb
loopne
push
jbe
imul
arpl
jge
add
mov
jbe
dec
jne
in
sbb
imul
popf
aaa
icebp
sbb
mov
mov
cmp
hlt
pop
sti
jb
and
jne
shrb
mov
mov
ja
lea
cmp
mov
xor
cmc
inc
jo
mov
jge
fsubl
sub
push
sar
inc
nop
js
pusha
xor
movsb
fcomps
pusha
cmp
jo
clc
lea
inc
mov
outsl
test
add
test
in
aaa
mov
and
mov
jnp
cli
scas
dec
int
sbb
pop
mov
fsubl
leave
push
or
dec
push
rclb
dec
jmp
pop
icebp
in
gs
push
pushf
adc
repz
das
out
cli
xchg
shrl
cld
inc
sbb
add
push
mov
orb
add
adc
into
sbb
in
fidivs
dec
test
sbb
ss
in
insb
iret
dec
dec
push
in
pop
sbb
cwtl
movsl
insl
sbb
adc
cld
lock
enter
mov
cmp
jno
adc
mov
sbb
or
mov
sar
xor
ret
popa
movsl
sbb
or
test
cmp
mov
and
mov
adc
lds
sub
and
jle
rorb
rorl
mov
pushf
jno
cs
adc
jae
fs
daa
sub
outsb
ds
xor
or
cmp
lds
dec
aad
sar
sbb
popf
imul
cmp
sub
add
jge
insb
rcr
sbb
pop
dec
mov
xor
hlt
add
mov
inc
negl
mov
fildl
pusha
cwtl
jb
in
adc
xchg
loope
mov
inc
iret
fdivrl
fnsave
and
lods
out
incl
mov
sub
sub
jae
ss
js
adc
push
lret
inc
adc
push
mov
xor
mov
mov
mov
lahf
pop
xor
cltd
xor
pusha
stos
dec
ja
shr
xor
jns
jo
aas
pop
xor
pop
pop
mov
leave
ss
cmp
cmpsb
cmpsb
xchg
lea
jl
add
sbb
mov
cmc
xchg
sub
adc
cmp
or
das
push
fcmovu
mov
push
int3
cmp
add
addr16
int
xchg
or
push
sbb
rcrb
dec
outsb
sub
xlat
daa
mov
and
xor
fadd
es
ret
insb
mov
lahf
gs
dec
push
lret
sub
jp
test
jbe
mov
leave
or
ret
fwait
and
fidivrl
add
jl
xchg
lcall
mov
dec
add
enter
mov
lahf
ret
push
pop
jle
sub
mov
aas
mov
iret
push
and
stos
inc
push
repnz
outsl
push
adc
push
mov
aad
push
inc
fwait
jb
dec
ja
add
pusha
stos
xor
mov
insl
repnz
sub
push
and
push
mov
push
in
adc
mov
push
data16
xchg
cmovno
adc
and
loopne
inc
imul
int3
jp
test
incb
add
sbb
mov
popa
xchg
cli
or
cld
in
cld
jmp
or
mov
stos
repnz
xchg
or
arpl
push
or
inc
insl
outsb
xchg
push
add
cmc
jmp
int
clc
push
ficoml
jae
mov
push
jp
push
adc
pop
decl
xlat
in
cmc
test
aam
adc
cmp
loope
push
cmp
lcall
mov
inc
addb
push
adc
inc
mov
int
bound
test
jno
xchg
sbb
push
push
pusha
inc
push
loope
lret
push
cmp
push
test
mov
cmp
lcall
push
cmp
or
dec
xor
pop
xchg
jb
jp
inc
sub
out
shrl
stos
lahf
lfs
imul
pop
or
movsb
cmp
xor
ret
aam
imul
adc
mov
xchg
jp
dec
mov
icebp
adc
jns
jmp
add
lcall
or
push
fisubrl
enter
call
mov
jecxz
cwtl
mov
cltd
sub
mov
push
mov
int3
mov
pop
or
cmp
fs
push
add
or
ret
cmp
push
in
inc
rcrl
inc
ds
fstl
push
or
and
das
sub
push
loope
xorps
adc
daa
push
bound
popa
push
in
jbe
mov
outsl
add
dec
dec
shr
lret
sub
sub
and
adc
xor
and
jns
dec
pop
jae
fbld
cmp
jl
add
mov
inc
cmc
pop
xor
push
mov
or
std
jg
xor
cmp
scas
cli
push
rolb
xchg
mov
idiv
dec
add
dec
insb
push
sbb
mov
popa
mov
outsb
fsub
mov
es
ds
fld
aad
push
dec
mov
sub
rorl
fldl
int3
mov
xchg
sub
push
push
dec
ret
push
and
adc
jne
and
cmpsb
pop
aas
aam
adc
enter
mov
jbe
mov
out
pop
mov
and
xchg
fmull
insb
sbb
jge
loopne
pop
pop
stc
lods
int3
hlt
das
andb
add
addr16
sub
adc
lea
fucomp
loop
mov
das
pop
pop
in
cmpsl
jno
iret
xorb
stc
inc
or
mov
fistpll
repnz
arpl
sahf
jnp
sub
sti
js
ret
adc
push
cmp
rcrl
add
lret
das
mov
es
mov
xchg
adc
pushl
aaa
cmpsl
inc
cmp
xchg
xor
jge
fldt
rclb
jmp
push
sbb
shl
pop
mov
fistps
mov
push
mov
pop
sbb
addr16
movsl
in
inc
mov
ret
mov
cmpsl
iret
lret
dec
loopne
cmc
sarb
cs
push
fdiv
sub
cmpl
cli
push
imul
pusha
rcll
lahf
ja
dec
std
add
sub
repnz
fdivrl
dec
mov
mov
pop
sbb
mov
push
cld
cmp
lods
xchg
pop
in
add
push
mov
and
js
add
hlt
or
mov
mov
cltd
fcmovbe
adc
xlat
pop
loope
dec
ja
inc
and
ficoml
mov
fisubs
fwait
ljmp
decl
dec
or
out
add
ret
lret
jge
hlt
leave
pop
mov
imul
dec
xor
jg
stc
scas
push
jae
adc
dec
loop
inc
dec
inc
sub
push
mov
movsb
popf
bound
sbb
inc
sahf
fdivl
test
fcompl
xor
inc
push
push
mov
leave
ucomiss
pusha
push
add
mov
into
xor
or
mov
in
jne
incb
sbb
pop
jecxz
push
xchg
mov
add
lret
push
mov
sbb
outsl
fdivrs
or
pop
ret
jo
jg
push
lahf
stos
inc
mov
add
and
and
addr16
dec
xor
jnp
jno
test
fwait
dec
sub
jae
pop
div
and
jp
jo
xlat
out
daa
mov
stos
in
into
aam
loope
fstpl
sbb
mov
popa
ret
imul
sbb
imulb
push
dec
dec
test
dec
jp
cmp
push
mov
out
lds
cmp
xchg
lds
repz
cmpsb
std
sub
insb
pop
pop
push
mov
shr
lahf
cmp
xlat
push
or
push
nop
call
movb
xchg
adc
cmp
push
mov
pop
mov
in
add
aad
cwtl
je
sbb
add
pop
enter
jg
lods
icebp
inc
xchg
or
push
scas
lods
xor
mov
out
inc
repz
cmp
and
fs
out
or
jmp
mov
cld
cmp
and
call
bound
iret
pop
imul
mov
or
jns
in
aad
loopne
and
adc
daa
iret
orb
and
inc
and
and
vpunpckhqdq
out
fimuls
test
inc
imul
test
xor
jl
add
movsl
setge
sahf
push
mov
add
push
orb
pop
arpl
sti
mov
daa
pop
push
movsb
jge
fnstcw
xor
jmp
inc
scas
mov
or
cmp
lea
ret
sbb
adc
sbb
add
lret
dec
sarl
jae
nop
adc
and
subl
cltd
lods
addr16
mov
dec
aaa
xorl
push
popl
lods
dec
sahf
mov
cmc
sbb
fsubl
jmp
rcl
sub
inc
mov
lods
cmpsl
popf
cmp
inc
push
pop
xor
loopne
outsb
and
jae
scas
repnz
xor
jp
iret
loop
mov
daa
mov
push
sub
lods
cmp
or
jp
xor
bound
test
js
sti
inc
cmpsb
or
iret
mov
or
cltd
pop
pop
dec
std
fs
adc
push
sub
stc
std
pushf
mov
stos
mov
loop
cmp
incb
fdivs
fstpt
popa
aaa
je
sbb
fwait
sub
popa
mov
fcomps
test
lcall
je
cmp
pop
fidivrs
xchg
adc
cmp
pop
or
or
es
dec
shlb
outsl
push
out
mov
jbe
cltd
inc
ss
roll
or
cwtl
inc
mov
dec
adc
std
push
ja
xchg
lcall
lea
push
insb
popa
and
push
imul
jg
mov
add
or
addr16
jge
xlat
das
push
lahf
xchg
dec
inc
sub
je
mov
mul
add
mov
push
into
movsb
cwtl
mov
pop
xor
xchg
dec
jb
cmc
inc
pop
pop
aas
sub
cli
aas
iret
mov
cwtl
push
sarb
test
imul
sbb
push
xor
into
xchg
xchg
loopne
jae
enter
push
mov
xchg
lods
adc
stos
mov
xlat
ret
pop
push
mov
jecxz
ljmp
pushf
jle
inc
push
xlat
mov
xchg
sub
out
adc
test
shll
xchg
xlat
sbb
and
dec
or
shlb
addr16
push
xchg
fs
pop
and
jo
mov
std
jle
cwtl
sub
pop
addr16
sub
scas
jns
cld
adc
cmp
xor
pop
cmp
mov
mov
ja
pop
jns
imul
lret
jo
inc
and
outsl
fisubs
sbb
lock
icebp
pop
and
roll
mov
aad
pop
xor
gs
mov
jb
mov
fistpl
cmp
int3
mov
mov
cmp
pop
mov
sub
outsb
rep
mov
mov
adc
shl
popa
aad
cmpsb
test
loopne
clc
push
enter
iret
mov
push
lds
mov
ja
mov
stos
call
js
sbbl
inc
sahf
dec
xor
data16
inc
dec
jmp
ds
add
repnz
xchg
cld
dec
test
push
or
push
cli
enter
cmpsl
scas
xor
jnp
jne
lcall
inc
mov
lds
mov
or
ret
std
sbb
mov
and
shll
je
fs
mov
in
pop
mov
mov
or
lcall
aaa
mov
mul
sbb
inc
xor
in
and
dec
mov
pop
pop
lock
mov
movsb
mov
in
ret
cs
cld
les
test
data16
jl
xchg
loopne
dec
pusha
pop
fistpl
push
outsl
test
xchg
dec
pop
gs
add
pop
mov
insb
lods
inc
ret
xchg
fiadds
xchg
cmpsl
aad
loopne
xchg
inc
out
push
or
and
lods
jb
push
jg
and
fwait
mov
mov
lock
jle
inc
mov
or
inc
insb
leave
and
mov
rcll
push
jb
jae
inc
loopne
jbe
xor
jbe
inc
push
mov
and
inc
mov
sub
jae
leave
xchg
push
je
ret
dec
fwait
sbb
loope
cld
loope
inc
or
out
data16
push
inc
in
movsl
out
jl
test
lea
psraw
and
add
xchg
mov
cwtl
mov
xchg
push
fs
ficomps
pop
sahf
mov
add
mov
fs
or
adc
mov
imul
or
int
jg
stc
push
jno
mov
sbb
lret
pop
push
xchg
or
jp
stos
and
pop
xchg
mov
cltd
cwtl
or
pushf
idivl
push
mov
jae
sbb
das
xchg
scas
pop
push
sbb
loop
jbe,pn
movsb
popl
and
mov
inc
into
lods
cli
ret
dec
ljmp
inc
test
lahf
aam
rcll
movsl
out
lcall
outsl
addl
sub
pop
xchg
aas
or
xchg
dec
or
dec
pminub
in
mov
test
mov
xchg
jno
jmp
test
lret
out
mov
mov
scas
lods
mov
push
add
xor
lods
jo
popa
cmp
cwtl
add
fldt
fnstcw
fldl
push
or
cltd
data16
lret
xchg
lods
or
or
add
aad
mov
xchg
push
aas
imul
ret
dec
push
cmpsb
lock
mov
mov
pop
sub
daa
nop
xchg
jp
flds
in
hlt
jmp
aas
pop
lea
mov
imul
mov
mov
scas
ret
inc
push
pusha
cmpb
xchg
int
mov
adc
call
ja
mov
mov
fmull
add
arpl
dec
lahf
push
mov
dec
xchg
pop
popa
mov
aam
add
xlat
xor
xor
inc
cli
xor
xchg
and
popa
jg
mov
sbb
les
jb
jecxz
jne
frstor
pop
sbb
cmp
sti
pop
or
cs
fstps
push
sub
leave
das
adc
dec
ret
jns
mov
int3
stc
int3
push
sub
sub
popf
and
cmp
fmulp
mov
dec
int3
adc
inc
inc
push
xor
push
out
popf
rorb
stos
jo
add
pop
xchg
fdivl
gs
pop
push
dec
icebp
aas
cmp
lds
sbb
mull
mov
ds
nop
testl
push
adc
push
stc
ffree
pop
and
xor
in
andl
sub
int
pop
shl
xlat
pop
rep
loope
pop
lea
jne
inc
xor
outsb
add
divl
ss
mov
xor
arpl
addr16
out
mov
vmulps
xorb
and
ret
std
fnstsw
jmp
push
mov
data16
leave
lret
fstl
pop
push
sub
jl
jmp
xor
je
test
pop
cmpsl
sbb
rclb
pop
sub
pop
cmpsl
mov
fs
inc
adc
fnsave
fwait
loope
add
jmp
popf
jg
scas
mov
pop
mov
orl
shll
clc
sbb
cmp
mov
dec
cli
inc
mov
in
xor
push
sub
mov
pop
ljmp
xor
enter
test
leave
jge
fnstsw
adc
cmp
adc
cli
push
ja
mov
and
push
dec
inc
ret
movsl
jno
clc
fadds
fs
test
and
scas
and
das
shll
andb
loop
popa
sub
pop
data16
push
sbb
stos
in
leave
mov
and
jg
mov
ffree
fdiv
jns
cltd
cli
in
in
shlb
fstps
xor
rorb
inc
push
sahf
stos
js
push
or
mov
mov
ljmp
dec
cwtl
mov
mov
faddl
movsl
arpl
lods
sub
xchg
jno
cli
lret
loope
cltd
in
in
stc
nop
sbb
push
inc
popa
or
test
inc
adc
test
loopne
dec
sub
sbb
std
inc
mov
pop
popa
cmc
and
in
and
loop
cwtl
sub
pop
fbld
add
xor
mov
xor
lcall
cld
push
test
loope
push
movsb
daa
popa
call
pop
sbb
leave
push
popa
hlt
add
call
jmp
mov
lods
loopne
sub
pop
sbb
pusha
xor
push
add
mov
push
pushf
aad
xchg
jmp
loope
call
out
cmp
jne
pop
lock
fldcw
pop
jnp
lret
mov
add
sbb
mov
test
je
scas
xchg
xchg
add
inc
mov
and
jp
int
jecxz
out
fnstsw
mov
cmp
dec
sbb
fsubl
dec
sbb
mov
mov
mov
lods
imul
popa
iret
sub
clc
mov
sub
sub
jno
dec
adc
into
push
xchg
loop
push
shrb
push
sub
mov
mov
mov
cmp
inc
mov
shlb
pop
pop
push
test
sub
sbb
in
sarl
mov
fildll
pushf
sbb
cmp
xor
call
cmpsb
fdivrl
pop
mov
out
sahf
mov
lods
sbbb
and
inc
dec
int3
clc
ja
or
mov
push
pop
insl
mov
mov
ds
xor
aad
call
add
jbe
jbe
push
fs
sbb
in
out
mov
fbstp
in
adc
test
or
adc
mov
cmp
add
dec
mov
adc
mov
xor
sbb
inc
pop
scas
sub
mov
lock
sub
sub
and
and
mov
pop
push
pop
mov
adc
cmpsb
adc
or
jle
lret
arpl
stc
inc
ret
sub
inc
lods
std
mov
rolb
xchg
repz
lods
and
xchg
adcl
rcrl
cmp
and
add
sub
or
mov
ret
rep
pop
popa
in
dec
dec
jge
jb
push
fstl
scas
outsb
in
packsswb
pop
ds
es
adc
sarl
push
mov
and
lahf
outsb
mov
xor
bound
testl
mov
insl
adcl
sbb
xchg
mov
out
adcb
mov
sti
pop
je
dec
sti
mov
mov
cmp
jnp
movsb
jg
xor
scas
sub
inc
scas
and
leave
addr16
adc
ja
push
fxch
and
adc
je
xrstor
sub
mov
das
inc
or
outsb
data16
jp
les
fdivl
dec
push
mov
jg
mulb
xor
fildll
xchg
xchg
jnp
xchg
mov
mov
out
shufps
and
call
mov
ret
push
pusha
loopne
mov
pop
and
lods
pop
inc
mov
sbb
scas
test
test
js
inc
mov
pop
loop
adcb
loopne
lods
cmpsb
xchg
sbb
loop
repnz
pop
fs
aaa
mov
mov
test
inc
sbb
inc
out
test
pushf
int
inc
cmp
dec
cld
lods
mov
or
sbb
pop
mov
das
sub
pop
pop
cwtl
pushf
sub
lds
gs
dec
jge
jnp
sub
adc
stos
rclb
mov
negl
mov
aam
mov
fdivrs
jns
fs
and
pop
or
into
sub
mov
loop
sbb
lods
xor
push
sbb
repz
stos
shrl
dec
mov
dec
add
scas
sbb
int
std
jle
cltd
cltd
nop
cmpsl
push
inc
push
and
inc
ror
xlat
lock
je
jae
ja
xchg
pop
xchg
cli
xor
cmp
pusha
dec
push
lock
dec
push
outsl
imul
scas
lahf
adc
or
out
sbb
cmpsb
sub
pushf
rolb
push
out
cmp
mov
aam
xor
cli
insl
jge
push
inc
sub
cmc
or
int3
adc
mov
out
xor
pop
pop
push
mov
add
sub
imul
outsb
cwtl
pusha
inc
sbb
call
ljmp
or
xlat
jo
fstl
cld
adc
fidivl
xor
pop
in
adc
push
addl
iret
jmp
lds
aad
mov
mov
shlb
call
into
dec
pop
add
sti
xchg
icebp
imul
mov
mov
movsl
push
xchg
sub
xor
inc
sub
push
push
sbb
xlat
test
dec
pop
pop
ret
cmp
rclb
mov
popa
xor
lds
sub
xchg
jle
fdivrs
push
mov
in
pop
xor
lcall
pop
and
mov
fidivl
add
dec
jmp
les
test
dec
data16
int3
mov
mov
sbb
icebp
jmp
cmp
mov
lcall
leave
sub
das
sbb
fnsave
cmc
or
dec
dec
int
insb
imul
xor
add
mov
push
dec
and
test
pusha
push
sub
shll
cmp
mov
sub
in
dec
pusha
dec
sbb
sbb
xchg
in
adc
and
xchg
shl
or
imul
test
lods
jge
adc
jecxz
inc
pop
or
insl
inc
push
std
jle
fstps
cld
xor
fdivrp
sbb
adc
cmp
iret
xlat
mov
inc
into
dec
mov
dec
mov
pusha
cmp
mov
cs
in
pop
mov
push
nop
adc
std
mov
data16
mov
repnz
out
pop
jg
mov
add
xor
or
in
pop
mov
mov
jbe
jl
inc
stc
int3
cmp
xchg
mov
xlat
mov
mov
push
and
sbbl
pop
orb
aas
sbb
xchg
les
mov
add
push
or
mov
jne
dec
mov
lods
pop
mov
loope
push
es
in
jl
outsl
ss
cmc
repz
ss
inc
adc
pop
dec
pusha
data16
cmpsl
mov
push
sbb
out
xor
xor
jge
dec
xchg
scas
jnp
push
xchg
push
sbb
mov
pusha
xchg
or
repz
jl
decl
lret
adc
pusha
lods
lcall
xor
rcll
lea
testl
adc
mov
loopne
roll
push
push
xor
lret
test
in
dec
jb
jnp
sub
mov
fldenv
mov
mov
aaa
cmpsl
adc
xlat
ss
push
xor
ds
mov
xchg
imul
push
and
cmpsb
scas
xchg
lret
add
ficoml
lcall
aam
cmc
jb
add
add
lods
or
mov
fisubs
pop
lods
iret
fmuls
sarl
and
inc
cmp
les
loopne
jecxz
jmp
push
mov
inc
sahf
js
ret
lret
lods
les
es
mov
in
inc
cmpl
add
cmpb
pusha
cld
and
js
xor
scas
jl
pop
nop
mov
or
insb
xlat
add
in
dec
fiaddl
ja
imul
int3
scas
sti
sti
push
push
fstps
push
mov
stos
and
xlat
jmp
pushf
lret
sbb
push
adc
mov
mov
xchg
push
mov
ret
fldl
jg
ljmp
loop
sub
popa
dec
mov
mov
push
loop
mov
ljmp
mov
stos
sbb
mov
dec
xor
psrlq
out
iret
sbb
jp
inc
inc
xor
dec
xchg
mov
idiv
or
sbb
callw
cmc
test
pop
negl
adc
fidivl
pushl
inc
pop
lretw
out
out
push
fs
je
xor
cmp
push
bound
jae
add
test
xor
loope
pushw
mov
xchg
mov
cmp
into
jge
mov
push
or
sub
cs
dec
aas
and
fildll
lock
cmpsl
xlat
or
fsubr
cmp
jge
push
arpl
and
jmp
addb
mov
inc
imul
xchg
pop
mov
push
and
add
adc
or
xchg
xor
fdivrs
mov
jns
xor
adc
xor
dec
aam
orb
std
cmp
push
mov
ret
pop
hlt
jle
sbb
fimull
pop
sarl
cmp
mov
adc
cmp
stos
cmpsl
xor
mulb
std
shrl
orl
mov
or
or
icebp
fdivrs
mov
aad
push
jne
retw
movb
xor
and
jb
lret
and
daa
loop
fisubl
jl
cwtl
xor
cmp
cmp
or
jo
cs
sbbl
push
pop
push
xor
pop
mov
test
es
mov
orl
cmpl
cwtl
xor
shlb
push
pop
mov
sub
int
dec
xchg
clc
std
in
jbe
shrl
lret
pop
xchg
dec
add
xchg
pop
aas
and
inc
repz
pop
in
pop
mov
and
mov
mov
rorl
and
add
inc
repz
stc
dec
in
mov
lret
xor
outsl
inc
rcrb
ficoms
test
xchg
mov
jmp
xor
push
out
jmp
pushf
in
push
scas
cmpsb
jmp
push
outsl
rcll
aam
mov
mov
lahf
insb
pop
xor
mov
cmp
js
adc
mov
out
lods
ss
mov
sub
lahf
xchg
push
stos
ss
add
in
mov
nop
clc
lret
cmc
xchg
je
xor
or
stc
xchg
add
push
push
dec
mov
xchg
xchg
inc
loope
mov
pop
mov
sbb
push
xor
xchg
mov
les
pop
jbe
mov
stos
pop
int3
scas
xchg
sahf
xchg
outsb
sub
jno
pop
sub
add
and
mov
mov
outsb
pop
cmp
loope
subl
pop
addl
sub
int3
out
roll
cmpsl
je
adc
mov
popa
sub
mov
cmp
xchg
cmpsb
es
xor
sbb
jmp
aas
enter
lcall
cmp
sub
pop
xchg
dec
test
jno
shll
mov
jo
xlat
movsb
outsl
sbb
xchg
mov
add
push
pop
fldl
pop
lock
xchg
shll
xor
dec
mov
xlat
mov
scas
sub
lret
into
notl
pop
outsl
ficompl
pop
cmp
dec
sbb
lods
jmp
arpl
js
mov
or
rolb
mov
stos
mov
push
clc
negb
pop
leave
shlb
mov
jge
push
dec
inc
xor
dec
mov
mov
jge
dec
loop
popf
cmc
inc
ret
or
call
into
add
or
add
xchg
imul
mov
adcl
and
popa
cmpb
mov
es
sub
nop
in
xchg
cmp
movsb
sti
out
ds
dec
push
test
insl
ss
repnz
subb
mov
mov
sub
lcall
jne
mov
mov
std
mov
aas
lods
fldenv
test
mov
insl
rolb
adc
and
adc
outsb
dec
test
sbb
mov
and
mov
loope
and
or
insl
pop
fsubr
xchg
xor
cmpsb
jle
repz
sbb
push
cld
fdivr
pop
call
jp
dec
push
out
nop
xchg
testb
pusha
repz
stos
jae
pop
in
in
leave
popa
leave
iret
mov
cmp
ss
cld
push
mov
cmp
loop
inc
test
subl
inc
push
fimuls
notl
adcl
dec
aaa
data16
inc
test
hlt
or
clc
xchg
iret
xlat
pop
or
pop
fidivrl
push
in
iret
jecxz
fidivl
int3
sar
push
inc
xchg
mov
stos
adc
mov
outsl
shrl
push
adc
jbe,pt
jecxz
jg
sahf
sbb
test
and
mov
mov
ss
push
pop
call
mov
dec
mov
stos
dec
scas
adc
mov
mov
movsl
test
push
or
cs
imulb
mov
in
nop
out
mov
inc
jecxz
pop
push
lods
cmp
pop
popf
add
in
dec
std
xlat
int3
imul
cmp
push
pop
sub
pop
enter
test
popa
cmpsl
and
cwtl
sub
nop
arpl
mul
mov
mov
sub
jecxz
scas
mov
lods
mov
mov
test
loop
stc
xor
cmp
and
pop
dec
mov
jno
fst
cli
push
push
addl
testb
popa
ljmp
xor
test
xchg
cmpsb
movb
aaa
mov
mov
sub
push
add
jg
sbb
mov
pop
loopne
cmpsl
or
daa
shlb
es
fisubl
sub
loop
pop
push
mov
jns
in
add
cmp
in
adc
pop
adc
mov
mov
and
cmp
ja
ljmp
and
scas
adc
loope
imull
ljmp
divl
mov
xor
into
mov
push
out
xchg
sub
add
push
test
mov
sahf
sub
xor
ret
in
rolb
push
mov
jp
lcall
int3
jae
int3
push
dec
imul
xchg
pop
xchg
filds
dec
jmp
into
sub
lahf
sub
xor
aaa
mov
fsts
fcmovb
hlt
xchg
jg
ja
loope
arpl
mov
aaa
data16
add
in
jno
and
mov
stc
lods
lcall
popf
lock
aaa
test
xlat
jg
mov
mov
fldenv
ret
and
clc
inc
mov
push
popa
add
mov
xor
mov
inc
push
aaa
dec
clc
repz
or
fsubr
loopne
sub
and
loopne
adc
mov
add
lea
imul
and
enter
inc
xor
stos
adc
add
jle
jns
loopne
int
cmpsl
jge
fistpll
ret
aam
aam
lahf
xor
adc
mov
insb
addr16
add
push
sbb
insb
mov
out
dec
leave
fs
in
out
das
sub
stos
inc
adc
pop
cmp
inc
pop
sub
cwtl
cmp
lcall
mov
sarb
jecxz
mov
push
fbld
rcl
imul
sti
sub
lods
in
adcl
gs
insl
loopne
fcompl
mov
sbb
out
rcll
ret
push
nop
test
cmp
cmp
outsl
ret
jns
movsb
fwait
add
dec
aas
lods
clc
or
scas
lea
cmp
loopne
inc
fisubl
ret
xchg
and
cmpsl
xchg
gs
xor
mov
cmp
imul
cmp
jecxz
cmc
sbb
sbb
repnz
subl
xor
sub
or
dec
scas
enter
js
or
enter
sub
loop
je
push
in
pop
pop
pusha
lret
mov
mov
mov
lds
jg
movsb
aas
inc
dec
gs
stos
push
xor
iret
pop
cmp
imulb
data16
push
daa
jmp
mov
insb
push
pop
out
pop
or
xor
vorps
cli
add
mov
xchg
imul
xchg
mov
ret
xlat
push
mov
sbb
shl
shll
mov
mov
clc
push
pop
mov
xchg
mov
fistps
mov
push
push
loopne
lahf
mov
sub
fstps
pop
es
into
dec
or
mov
and
repnz
cli
jl
or
mov
inc
roll
das
jmp
dec
adc
insl
out
or
xor
std
push
cli
lahf
bound
sarb
cmpsl
inc
and
add
enter
fstpt
mov
pusha
adc
xchg
scas
aaa
dec
iret
loopne
pop
xchg
pop
xchg
mov
into
jp
xor
push
xchg
xor
aaa
and
rcrb
and
inc
dec
in
xor
test
dec
xchg
adc
xor
inc
and
loopne
push
mov
push
xor
pop
lret
sub
dec
lahf
mov
sbb
jg
mov
cmp
stos
jle
out
xor
ss
aaa
push
pushf
stc
in
mov
jge
in
jae
mov
sub
mov
jo
and
jecxz
stos
test
mov
pop
addr16
xor
inc
pop
jp
addr16
jo
push
loop
inc
fdivrs
bound
and
or
xchg
jp
xchg
xchg
cmpsl
push
shlb
add
fsubrl
pop
notl
sub
add
stos
daa
and
movsb
mov
das
inc
aam
ss
stc
xchg
in
jp
push
push
fistps
adc
fstpl
push
jg
fcomp
and
and
mov
loopne
fdivrl
pop
push
and
or
mov
dec
into
sub
adcl
cmp
outsb
mov
dec
add
xchg
jb
out
jl
ret
ja
xchg
cmp
push
mov
xchg
clc
adc
adc
cmp
mov
js
xor
adc
dec
ret
loope
mov
scas
shl
mov
xor
jle
add
mov
mov
pop
or
jbe
std
jle
push
dec
mov
mov
push
mov
dec
es
sub
mov
repz
xchg
cmp
lret
stos
adc
out
add
mov
push
std
outsb
cbtw
mov
sbb
push
imul
addl
dec
xor
arpl
call
cmp
pop
mov
in
mov
add
adc
out
sbb
or
int3
adc
inc
inc
inc
stos
push
clc
push
cmp
pop
and
push
and
push
fcomps
out
popf
sub
xchg
mov
fwait
push
cwtl
push
pop
rcrb
cmp
lcall
cwtl
mov
or
or
test
cli
push
inc
and
dec
out
arpl
outsb
arpl
dec
xor
aas
xchg
add
in
jg
mov
stos
sbb
pop
inc
push
dec
sahf
push
inc
pop
aaa
lea
jg
jnp
test
clc
lcall
lret
popa
sbb
mulb
cmp
leave
loopne
and
adc
shlb
movsl
xchg
add
mov
test
sub
in
xchg
je
mov
push
scas
aas
xchg
pop
xor
rolb
jno
cmpl
in
xchg
and
stc
mov
loop
push
lock
push
ss
cltd
or
cmc
inc
insl
sbb
mov
dec
mov
lahf
test
cmp
je
movsb
js
pop
cmp
lretw
mov
fsubr
loop
and
mov
adc
or
sahf
popf
mov
push
iret
jecxz
inc
mov
lds
sbb
mov
daa
mov
inc
mov
aaa
mov
test
aam
sbb
mov
imul
add
mov
cld
mov
cmp
and
sub
pop
jns
test
ret
test
fisubs
std
fwait
ja
mov
call
pop
jo
sbb
popa
out
jne
mov
jo
mov
and
cmp
in
pop
fcmovnb
mov
sbb
imul
hlt
jg
lahf
lcall
pushf
shl
and
and
xor
cli
out
dec
shr
sbb
and
loop
into
call
rcll
add
push
mov
mov
cmp
xchg
fs
fisubrs
stos
xchg
pop
add
in
push
into
add
jnp
test
cmpsb
idiv
jb
scas
psubd
mov
aas
pusha
push
pop
dec
sbb
fiaddl
jns
mov
dec
into
ja
ss
shrb
loope
inc
mov
out
or
sahf
xchg
pusha
xchg
cmp
out
cwtl
sbb
mov
jp
xchg
lret
mov
xor
sbb
inc
sub
mov
sbb
sbb
out
popf
aas
xchg
test
xchg
leave
mov
cmp
jnp
mov
pusha
sub
xchg
loopne
lcall
jl
lods
divb
mov
movsl
jae
jo
mov
push
addl
xor
mov
cmp
ds
push
sub
sub
es
outsl
rorb
xlat
cwtl
movsl
push
int
push
mov
leave
jne
pop
lcall
xor
xchg
in
mov
outsb
xchg
sbb
mov
fmulp
mov
mov
pusha
fwait
dec
dec
scas
mov
mov
and
jg
sbb
aaa
imul
out
xor
xor
xchg
mov
rorb
pop
orl
xor
lock
lahf
push
pushf
or
pop
pop
jae
xor
push
fsub
push
stos
add
dec
dec
das
fldl
scas
cmp
inc
add
xlat
add
add
lahf
outsl
stc
shr
cmp
pop
mov
jmp
dec
jb
shll
sbb
lods
sub
icebp
pop
fcom
clc
lods
lret
inc
pop
jl
std
xor
mov
cmpsb
ds
inc
mov
adc
movsl
hlt
add
shlb
push
filds
xor
push
testb
outsb
outsb
mov
jle
cmp
jb
imul
leave
xchg
leave
lods
push
fdiv
jle
jmp
push
mov
icebp
aam
jns
lock
dec
or
movsb
xchg
dec
outsl
test
push
sub
xchg
lret
ror
bound
push
dec
pop
add
push
mov
cwtl
dec
sahf
adc
pop
xchg
lcall
sbb
pop
add
fisubl
and
inc
xchg
out
sbb
sbb
jl
xchg
jno
pop
jne
aad
mov
mov
rcl
lret
out
sub
lret
shlb
fisttpl
mov
cmpsb
mov
mov
lock
jae
sti
jp
lret
mov
outsl
or
mov
test
mov
sbb
out
out
mov
mov
or
sbb
jne
ret
adc
pop
fldt
divl
inc
mov
ljmp
test
insb
mov
and
inc
xor
iret
insb
iret
push
mov
stc
ja
xchg
dec
sbb
nop
cmpsl
xchg
into
es
mov
push
mov
pop
subl
pop
ret
test
pop
mov
pop
mov
or
jnp
sti
xor
mov
das
cli
adc
push
push
in
cmpsl
subl
xchg
mov
sbb
cmp
ja
sahf
and
add
or
in
xor
dec
mov
pop
push
je
iret
rcr
pop
mov
jb
cli
pop
sub
mov
dec
enter
add
lods
cs
loopne
pushf
aad
pusha
stos
xchg
push
pusha
aaa
xchg
mov
ret
pop
mov
popa
cmp
cmp
lcall
aas
out
jecxz
lcall
pop
dec
fcoml
mov
push
add
add
test
or
fsts
dec
imul
push
pop
push
in
jmp
push
lea
stos
imulb
aam
dec
sbb
leave
cmp
data16
negl
and
jecxz
es
sbb
sub
dec
ljmp
adc
push
or
jp
mov
cmp
jl
push
scas
sarl
or
xchg
lret
dec
push
jmp
scas
movsb
in
in
cmp
clc
dec
scas
jne
out
push
pushf
push
int3
or
xor
xchg
shlb
pusha
stos
xchg
int
dec
xor
pop
mov
stc
xchg
and
mov
mov
inc
inc
cmp
inc
inc
call
fiaddl
and
out
inc
outsb
push
pop
je
xchg
outsl
rorb
mov
in
pop
jle
leave
pop
jecxz
cmpsb
sub
clc
test
push
cmpl
sbb
out
lret
xchg
mov
je
jp
jns
insl
xchg
adc
ljmp
xchg
nop
into
mov
pop
bound
ss
xlat
enterw
sub
cmp
mov
dec
dec
cmp
mov
push
and
sbb
pusha
sub
adcl
or
xchg
ret
out
push
cmp
mov
in
xor
xor
sub
xchg
test
cmp
jg
in
icebp
in
sub
cmc
test
xchg
jbe
loopne
mov
lcall
pushf
cli
mov
or
and
dec
fdivs
movsl
insl
adc
in
jecxz
ljmp
xchg
add
mov
mov
loopne
movsb
and
pop
insl
jns
test
jp
jne
inc
out
jo
fidivs
pop
call
sarl
lret
inc
xor
and
loop
xchg
cwtl
cwtl
addb
in
push
lods
loopne
xlat
xor
in
stc
fsubrs
ss
leave
jb
aam
addb
xchg
mov
sahf
sub
pop
xor
mov
sub
inc
arpl
and
sub
push
sbb
cmp
jns
cli
push
or
out
mov
out
sahf
stos
mov
pop
inc
lret
mov
lcall
jl
in
mov
rcrl
ja
xchg
and
xor
mov
lahf
sub
push
movsb
push
pop
lret
push
inc
cmpsl
test
cmc
fimull
jnp
push
mov
push
xchg
imul
stos
in
cmpsb
clc
sub
and
xlat
ss
cmc
aas
aad
out
cmpsb
cltd
clc
addr16
mov
mov
out
movsb
leave
sub
push
cmp
lahf
or
pop
xchg
mov
mov
pop
mov
fisubs
orb
in
or
cmpb
cmp
loope
pop
out
mov
xchg
pop
pop
push
cvtdq2ps
mov
fisttpl
repz
in
jle
iret
adc
push
or
dec
sbb
pop
adc
or
jo
or
dec
aam
xchg
test
add
cmpl
mov
add
arpl
inc
jae
pushf
xor
push
pop
lock
cmp
cwtl
mov
push
mov
xchg
clc
push
pop
adc
or
mov
imul
loop
iret
push
push
pop
std
and
mov
into
loopne
ret
jns
or
and
or
push
mov
cmpsl
ss
mov
sub
xchg
inc
test
bound
in
loopne
mov
ret
jle
outsb
add
push
fldenv
int
xchg
pop
insb
push
push
lret
adc
xchg
fcomps
or
pop
popf
shlb
rcll
in
pop
inc
stos
rcrl
push
pop
rep
mov
add
inc
sti
lock
cmovnp
cmpsl
lds
xchg
enter
out
popl
or
scas
mov
jae
shll
lret
xor
push
popf
jg
mov
fdivs
push
cmp
mov
xor
inc
imul
push
cmpsl
cwtl
in
and
enter
mov
push
jno
xor
dec
outsl
push
jnp
int
mov
jge
sub
mov
jne
pop
mov
in
in
das
and
aas
fisttpl
in
inc
rol
cmp
js
mov
sbb
dec
cs
dec
gs
sub
addr16
negb
sub
lods
adc
sti
pop
lds
imul
adc
pop
mov
data16
mov
ret
push
mov
shlb
push
pop
mov
dec
xchg
adc
rclb
sbb
cmpsl
add
inc
mov
mov
push
rcrl
out
pop
inc
clc
sub
loope
das
adc
aaa
lret
ficoms
jp
imul
scas
adcb
in
arpl
xchg
fwait
insl
push
push
jae
pop
ljmp
sub
cwtl
ficompl
addr16
mov
push
mov
push
subl
jmp
mov
dec
and
push
scas
and
mov
mov
decl
push
icebp
les
punpckhdq
or
pop
imul
adc
mov
addl
inc
rorl
dec
add
bnd
gs
xchg
sbb
and
dec
nop
test
ret
jmp
push
fldcw
xor
xchg
inc
or
pop
mov
adc
mull
mov
ret
fsubs
in
divb
or
push
fcmovne
out
std
and
xor
adc
add
inc
imul
loope
cli
incb
int
adcl
inc
sahf
xchg
cmpsl
sub
sub
jno
jg
out
shll
outsb
lock
jp
mov
aas
mov
jl
mov
xor
pop
jg
roll
pop
mov
pop
xor
shrl
push
lcall
inc
out
cmc
outsl
cmp
insb
mov
push
cmpl
int3
xor
mov
xchg
and
mov
out
xchg
push
sbb
adc
aaa
out
push
push
push
aaa
push
or
ljmp
imul
es
sub
int
dec
push
push
fwait
cld
shll
mov
scas
or
hlt
xchg
jo
stos
or
mov
xor
push
mov
insb
or
or
adc
out
insl
xchg
negl
mov
push
jmp
inc
add
pushf
or
sbb
lods
fs
das
lods
xchg
scas
mov
xchg
push
dec
dec
fldenv
test
fnstcw
loope
fwait
out
mov
in
ja
push
pop
fiadds
mov
lret
movl
push
ljmp
cwtl
lea
pop
and
repnz
fimull
xchg
hlt
jle
cli
or
fiaddl
push
mov
inc
or
mov
cli
fucomp
fwait
jp
push
xor
add
push
mov
push
insb
fxam
pop
dec
sbb
rclb
out
jne
lock
movsb
jmp
stc
andl
rcr
repz
enter
decl
jno
sahf
imul
mov
adc
cmc
outsb
jle
dec
mov
test
in
rcr
adc
inc
sub
cwtl
leave
ds
mov
jmp
cltd
adc
jle
push
jle
push
and
fidivrs
out
mov
push
pusha
xchg
mov
das
and
sbb
popf
lock
iret
aaa
out
mov
test
push
stos
arpl
push
mov
jecxz
xchg
popf
push
in
push
and
test
nop
adc
bound
lcall
arpl
adc
jle
repz
push
fcoml
push
movsl
push
add
cmp
jg
insb
xchg
xchg
mov
mov
nop
in
insb
lea
jb
pusha
jo
add
pusha
addb
push
mov
mov
int3
xorl
dec
mov
aam
scas
push
popf
popa
mov
pop
sub
lcall
test
cwtl
cmp
mov
mov
lds
dec
cmp
jmp
addr16
in
sahf
push
jno
and
lahf
movsl
lds
repz
ss
pop
movsb
mov
lea
push
jmp
fisttpl
int3
mov
pop
push
aam
xchg
repz
cmp
add
fucomip
mov
fidivl
in
imul
pop
dec
pushf
les
in
mov
pop
mov
pop
and
sbb
and
sbb
sub
cwtl
pop
and
push
lcall
mov
push
fidivrs
xlat
mov
mov
inc
and
jne
pop
mov
mov
enter
pop
testl
filds
fwait
je
jns
cmp
test
out
in
mov
xchg
shl
outsb
pop
inc
cmp
xor
sub
dec
enter
mov
add
imul
push
add
jl
jo
push
divb
adc
aaa
int
jmp
sti
add
arpl
and
add
sahf
sahf
push
dec
call
jp
fcoml
les
rcrl
daa
xchg
icebp
loopne
shrl
popa
mov
sti
aaa
lock
lock
out
test
mov
movsl
andb
push
negb
imul
jmp
jbe
and
cmc
rclb
sub
push
inc
mov
inc
xor
sbb
pop
testl
cmpsb
xchg
std
jl
add
call
shll
or
push
or
push
cltd
sbb
mov
lahf
test
daa
push
jge
xor
push
int
hlt
or
test
aaa
fmulp
and
leave
mov
lret
cld
sbb
orl
fmull
pop
outsb
in
push
dec
inc
ret
or
or
add
inc
mov
mov
in
mov
push
idivb
es
xor
addps
xchg
or
nop
ds
mov
and
mov
cmp
aad
xor
push
xor
xchg
loop
xchg
movsl
fnstcw
mov
bound
lea
ficoms
pushl
divb
mov
fisubrs
xchg
rolb
cs
cmp
push
inc
shl
stc
jmp
fwait
mov
xchg
pop
mov
push
icebp
shrb
adc
sbb
jb
push
pop
cwtl
lock
cltd
sub
lock
repz
mov
insl
dec
mov
push
bound
mov
add
jne
repz
push
gs
jo
movsb
adc
ret
clc
rorb
add
fstpl
std
mov
or
sub
mov
into
stc
fs
out
or
jne
ret
movsl
add
hlt
jne
lahf
es
mov
mov
test
lock
insl
inc
bound
outsl
add
and
push
cmp
orl
fcomp
cmp
cmp
sbbl
sub
pop
mov
add
lock
call
and
shrl
jbe
inc
aam
ret
mov
mov
xor
mov
cmp
fisttpl
jbe
mov
rclb
xlat
mov
add
or
stc
ss
pop
xchg
cmp
push
jl
dec
sarl
sub
sbb
adcb
std
or
xchg
push
movsb
rclb
stos
add
xor
imul
mov
inc
bound
xor
xor
leave
fidivl
cltd
adc
xchg
pop
push
aam
push
jae
mov
dec
mov
lock
push
fistpll
cwtl
arpl
mov
adc
hlt
into
and
push
jp
in
das
dec
cmp
imul
and
lds
ja
cmp
incl
mov
out
iret
movsl
addl
stos
inc
push
xchg
sub
leave
sbb
inc
or
push
inc
pop
pop
call
ss
pushf
mov
pop
lds
cmpsb
lds
inc
add
jae
cmp
lret
js
dec
pushf
pop
mov
fmuls
ror
push
sbb
testb
xor
mov
mov
ljmp
test
sub
repz
mov
ja
jne
dec
shlb
cs
dec
lock
mov
idivb
lds
test
movsl
jo
lahf
inc
sub
testl
push
inc
lcall
sub
out
xchg
mov
mov
jp
aam
push
jmp
mov
shrb
cmp
fstl
sbb
add
or
mov
jecxz
inc
aaa
in
mov
inc
shrl
inc
cmp
jnp
add
scas
mov
cmp
stos
test
movsl
nop
adc
cmp
adc
gs
cmp
sub
mov
xchg
iret
sahf
jecxz
or
mov
cmp
mov
mov
inc
cmpl
cmp
daa
cmp
mov
xor
push
mov
fsubs
push
cld
sbb
mov
test
popf
dec
pop
pop
add
mov
addr16
jl
cmpsl
mov
adc
pop
in
lret
or
lods
xchg
bound
mov
in
in
lret
push
dec
dec
mov
cli
sub
scas
clc
bound
aaa
add
dec
jge
sahf
nop
fistl
push
jnp
rep
pushf
xchg
sbb
lcall
pushf
outsb
inc
mov
dec
pop
adc
push
in
dec
adc
cmp
pop
test
inc
xorl
das
xchg
inc
in
xor
pop
popa
cmp
aam
pop
mov
into
push
adc
mov
push
fs
inc
pop
popf
int
movsl
aas
int
add
xchg
rcl
adc
repz
lahf
cmc
negb
cmp
and
adcb
mov
das
sti
add
or
out
and
push
fidivrs
mov
fidivl
pop
mov
mov
mov
pushf
cltd
or
imul
fdivrs
lea
sbb
bound
cmp
cltd
stos
fsub
and
pop
adc
sbb
mov
inc
push
shrb
test
cmp
push
push
push
mov
jg
xor
test
jnp
pushf
dec
aas
cmpsb
mov
ss
popa
sub
pop
xchg
in
in
out
or
push
push
pop
add
subl
xchg
dec
add
jmp
out
mov
cli
ljmp
adc
in
push
adc
inc
addl
or
cli
out
xchg
popf
mov
lcall
dec
mov
cltd
inc
decb
mov
xchg
psubq
fldl
in
mov
rcrl
pop
fstpl
sub
imul
mov
dec
lock
ss
adc
mov
adc
lcall
sarb
add
sarb
add
push
push
psllw
mov
pop
xlat
fsubs
mov
add
movsb
repz
jno
aam
pushf
push
pop
loope
or
insb
test
popf
lods
xor
enter
xchg
nop
fstps
jge
aam
int3
gs
neg
addr16
cltd
sbb
mov
inc
xlat
push
decb
lods
cmpsb
xchg
js
add
push
pushf
and
mov
push
xor
mov
inc
pop
dec
cmpsl
inc
int
xor
fistpll
fdivl
jmp
or
xor
outsl
mov
aad
fldt
stos
xlat
fcomp
imul
out
fnstenv
lea
mov
daa
daa
js
dec
dec
jl
jge
scas
shll
repz
mov
insb
adc
adc
push
mov
inc
push
cmpsb
add
faddl
sti
test
movb
popa
ljmp
mov
push
sbb
sbb
sti
testl
xchg
hlt
enter
push
stos
adc
mov
fimull
andb
or
jl
lahf
push
scas
pop
sub
dec
inc
push
fsincos
inc
jae
sti
pop
out
das
pop
pop
pushf
inc
dec
sub
or
leave
es
aas
in
push
jne
pop
or
cmp
add
dec
repnz
in
mov
mov
cmp
push
aaa
xchg
ljmp
ret
mov
lods
nop
idivb
aam
lds
test
pop
repz
mov
pop
inc
mov
repnz
jg
decl
inc
jo
xchg
and
sti
dec
pushf
xchg
mov
fidivs
push
mov
pop
mov
ret
ficoms
cmp
add
les
xchg
and
adc
incb
sub
xchg
add
ss
rorl
js
dec
scas
inc
inc
dec
pop
mov
leave
mov
sub
xchg
jo
aas
lea
mov
xor
lfs
mov
stos
loopne
lcall
out
loopne
cmp
popa
xchg
movsb
xor
ret
in
pop
repz
adc
xchg
xor
jbe
jo
ret
xor
insb
in
jecxz
sbb
pop
dec
fwait
sub
outsb
sub
mov
sub
pop
jmp
dec
and
push
jecxz
adc
pusha
xchg
xchg
divl
inc
push
int
sub
or
popf
aad
jmp
incl
sbb
cmp
sbb
ja
adc
inc
cmpsb
popf
xchg
and
mov
xchg
push
in
lock
cmp
inc
add
xchg
int
xor
sub
rorl
jb
sbb
aas
lea
cmp
lret
icebp
jp
dec
push
jmp
into
adc
push
in
dec
out
jbe
jecxz
fisubs
dec
inc
sub
pop
imul
movsb
andl
xlat
aaa
pop
cmp
add
lret
cmp
ss
mov
pop
mov
ret
cwtl
int3
ss
mov
push
xor
in
jle
dec
pusha
arpl
xchg
adc
inc
pop
push
pusha
je
adc
je
iret
fcmovb
push
arpl
adc
arpl
pop
fld
insl
cmpsb
mov
push
arpl
push
adc
insl
repnz
or
bound
into
out
mov
dec
out
dec
fnstcw
pop
jae
jne
and
inc
fcomps
ja
in
push
int3
aad
in
cmp
hlt
mov
push
lcall
std
int3
sbb
mov
aam
dec
lods
pop
or
addr16
popf
and
dec
sbb
xor
pop
sbb
scas
aad
js
push
mov
push
cmp
jmp
push
push
jmp
push
lock
fbld
bound
fisttpll
xor
sub
icebp
daa
mov
cmp
cmp
rcrl
ficoms
test
xor
cltd
xchg
pop
jmp
lock
pop
cmpsb
xor
and
cmp
jb
push
sub
xor
mov
sbb
xchg
cltd
fxch
cmp
jg
mov
inc
int3
xchg
cs
inc
mov
test
mov
mov
hlt
pop
lea
fidivrs
inc
jb
jecxz
mov
out
gs
notb
ss
lock
xor
xchg
xor
pop
xor
bound
cmp
adc
clc
enter
adc
push
test
xchg
pop
dec
roll
lahf
mov
sbb
jnp
idivb
rclb
nop
adc
fwait
out
pop
leave
pop
jns
jb
jno
mov
lret
outsl
out
das
std
and
push
push
ja
mov
pop
mov
push
ljmp
sets
shl
xor
enter
les
shrl
push
inc
sbb
cmp
sub
inc
push
dec
addr16
lcall
and
ljmp
cmp
test
push
jno
push
sub
jp
jae
dec
ds
and
pop
and
roll
mov
mov
push
and
jbe
and
std
mov
test
aad
movsl
dec
jmp
fnstenv
adc
pop
test
lcall
mov
inc
insb
push
dec
pop
sbb
shl
fsubrl
lcall
mov
fldenv
jae
ljmp
lcall
pop
sub
add
nop
or
cmpsb
jno
ret
adc
jne
sub
cltd
mov
sahf
or
sahf
lock
add
je
pop
lret
xlat
ret
testb
sub
stos
or
xor
xchg
xchg
xor
out
out
clc
adc
and
mov
aas
mov
sbb
pop
movd
jnp
out
inc
xchg
push
and
xor
pop
inc
lret
pop
pop
sbb
dec
js
or
inc
loopne
ficomps
out
dec
pop
outsb
movsb
xchg
int3
imul
pop
outsl
in
int
mov
inc
ljmp
out
aam
adc
dec
xchg
inc
fldt
les
xor
mov
pop
dec
inc
sti
mov
fists
ss
shlb
repnz
mov
inc
outsb
outsl
mov
mov
out
cltd
and
jae
mov
mov
arpl
mov
xor
inc
cs
loopne
pop
shlb
std
xor
addr16
idivl
aam
mov
fsubrs
xchg
leave
scas
xor
jb
cltd
push
push
mov
iret
xor
pop
mov
les
and
stos
jp
nop
mov
push
or
lock
dec
inc
jnp
add
fldcw
push
rclb
fdivr
jge
inc
and
repz
inc
stos
scas
mov
fsubs
in
mov
and
pop
mov
clc
ja
sub
xchg
pop
out
jecxz
enter
adcl
fdiv
pushw
aaa
cs
cmp
fs
xchg
fwait
push
pushf
jne
cs
ficoml
or
bnd
cltd
cld
jle
loope
pop
dec
and
ror
jl
cld
out
mov
mov
aam
mov
cmpsl
push
fmuls
into
fimull
rorl
push
cltd
rorl
and
int
or
dec
rclb
mov
push
mov
call
rol
cmpsb
nop
adc
mov
or
or
pop
dec
aaa
ror
int3
cmp
mov
test
mov
lret
scas
jmp
jo
loopne
and
ss
imul
inc
pop
sub
cli
out
out
rorb
sub
xchg
cmc
sbb
jle
cltd
xchg
push
xor
jg
xor
popa
gs
fnstcw
xchg
rep
ficomps
dec
xchg
add
xor
add
mov
xor
in
mov
jbe
xor
dec
fisttpll
adc
push
dec
jg
cmp
sahf
shr
xchg
xchg
sub
or
jb
sbb
xor
xchg
punpckldq
iret
xor
xchg
dec
rcll
push
cmpsl
push
cld
out
cltd
sub
pop
int3
out
les
int3
ljmp
test
pushf
jae
add
push
mov
cmp
adc
cwtl
in
dec
stos
pop
mov
call
out
xchg
push
int3
into
xor
movl
xlat
inc
adc
jge
cs
cmp
and
pop
in
ds
or
lods
cmp
xor
mov
lcall
dec
inc
jne
aaa
es
scas
mov
jmp
mov
lock
cwtl
ljmp
mov
dec
lds
fimull
sub
ret
pop
stc
or
xor
ret
adc
or
dec
test
inc
pop
push
jmp
sub
or
sbb
adc
xor
cmpsl
sbb
mov
xchg
push
push
sahf
ds
xchg
popl
add
pop
pusha
imul
les
aad
push
in
dec
inc
mov
push
sbb
mov
inc
xchg
dec
incb
sub
movsl
adc
aad
add
or
adc
xchg
mov
aad
cmp
dec
mov
add
add
jg
sub
shr
int3
icebp
xchg
shll
jp
in
hlt
push
inc
pop
and
mov
mov
fists
daa
xchg
push
insl
popa
push
dec
ret
ret
sbb
sub
mov
dec
xor
aam
push
clc
imul
push
sub
pop
test
sub
cmp
scas
xor
add
sbb
cmp
or
lea
call
nop
mov
out
repz
cmpsl
dec
sub
sti
or
aam
lret
sub
leave
in
jns
dec
lret
scas
jmp
add
sub
pop
ljmp
jge
shl
hlt
in
fwait
and
cmpsb
mov
icebp
xor
or
jns
pushf
cmpsb
push
arpl
ljmp
cld
rcrl
lcall
aaa
sbb
je
jnp
sbb
gs
pop
xor
xor
pop
adc
js
loop
mov
push
imul
mov
enter
xor
and
mov
push
fdivr
xor
jle
sub
std
popf
sbb
adc
jb
hlt
cmpsl
ret
popf
popf
xor
xor
test
jge
data16
jmp
cmpsb
adc
sub
fdivrl
jne
lea
sbb
and
fnstenv
lret
or
adc
mov
fwait
leave
out
gs
je
xchg
lock
and
mov
cmpsb
mov
jmp
fs
mov
pop
rclb
mov
cmp
mov
inc
repnz
fadds
pop
cmc
mov
mov
hlt
pop
push
pop
dec
xchg
test
repz
push
loopne,pt
shrb
pop
jae
std
movl
cmp
jg
cld
repz
add
or
mov
es
and
pop
jmp
mov
les
mov
mov
xor
aas
pop
in
mov
add
daa
popa
mov
sbb
jg
mov
mov
sti
rcrl
adc
xchg
cmp
mov
jmp
sbb
out
xchg
loopne
and
test
dec
rorl
sti
int3
adc
pop
cmpsb
dec
sbb
lret
roll
and
mov
sbb
mov
push
subl
jae
rcll
xlat
test
xor
pop
and
dec
add
push
mov
push
popf
lahf
negb
dec
pop
mov
std
adc
mov
or
mov
cld
dec
jge
outsb
addb
fdivs
cmp
lds
out
lahf
or
aam
pop
add
mov
lahf
push
or
loop
test
int
mov
mov
push
push
cmp
cli
pop
stc
cmp
fldcw
dec
inc
sarb
mov
cmp
pop
repz
cmp
shrl
loop
test
sub
sar
movb
pop
mov
inc
imul
sbb
shrl
xlat
push
pop
dec
leave
inc
dec
jecxz
mov
sahf
hlt
pop
mov
cmp
xchg
or
mov
jg
sub
jb
in
mov
je
push
ret
cmpsb
push
out
shll
rolb
test
repz
cs
xor
push
int3
int
add
xchg
xchg
jp
imul
pop
lret
scas
ds
mov
mov
in
pop
adc
cwtl
and
sub
scas
add
enter
aad
pop
arpl
loopne
das
lods
adc
mov
xor
scas
sbb
push
xchg
das
push
mov
xchg
stos
js
pop
or
lods
rcrl
jl
in
test
add
mov
dec
jp
mov
adc
mov
das
pop
cmp
jnp
mov
icebp
sbbb
push
push
shll
movsl
and
outsb
pop
sbb
jo
inc
xor
arpl
inc
and
xchg
pop
cmpsl
es
mov
call
pop
push
adc
mov
push
mov
loope
out
cs
mov
and
dec
rcll
jb
shr
loop
mov
fstl
repz
outsl
js
xchg
arpl
cmp
adc
sbb
cli
xchg
jno
jne
jns,pn
inc
jl
out
mov
cmp
inc
xor
ja
cld
ret
sub
mov
or
je
xorb
nop
hlt
repnz
test
jns
mul
in
pop
push
mov
outsb
jmp
xchg
fcompl
lea
mov
stos
dec
push
xor
ret
jmp
js
arpl
fisubl
add
stc
cmp
mov
push
jp
push
lcall
daa
mov
insb
movsl
loopne
pop
or
cs
mov
adc
mov
xor
call
jo
lods
mov
adcl
or
ds
xor
mov
mov
ret
test
mov
mov
cli
addr16
mov
sbb
outsb
nop
xchg
cmp
lahf
leave
or
cmp
or
shl
rcll
cmp
ficompl
imul
cmpsb
clc
popf
push
sti
divb
jecxz
les
dec
in
inc
and
push
xor
lock
std
movl
adc
das
pop
addb
mov
xlat
fistpl
jnp
mov
out
imul
pop
mov
and
push
and
cltd
push
test
orl
pop
aam
and
sbb
lock
add
popf
push
mov
xor
pusha
add
mov
xchg
jmp
imul
adc
jg
sbb
aad
je
xchg
xchg
push
movsb
adc
or
xchg
in
jmp
cwtl
cmc
pop
and
mov
fnstenv
mov
adcl
adc
or
xchg
or
sub
lods
cmp
jae
in
sub
ds
mov
sti
insb
jae
or
xchg
test
sbb
cmp
push
sub
in
rcrb
in
sbb
xchg
mov
dec
xchg
push
mov
mov
inc
dec
insb
mov
das
inc
xchg
xor
and
movsb
in
push
xchg
ja
sbb
icebp
aad
push
mov
cmp
cmc
lcall
daa
test
mov
push
add
or
sarb
pcmpeqd
iret
cli
push
movl
dec
scas
mov
insl
dec
sbb
pop
cltd
or
ds
xchg
notl
fcomip
add
insb
js
mov
out
daa
xlat
cmp
xchg
ficomps
xchg
add
mov
out
pop
decl
and
inc
lret
daa
into
mov
fildll
sbb
imul
push
jbe
les
xchg
cmpsb
pop
cld
dec
hlt
cmc
lret
pop
pop
orl
push
inc
push
shl
lods
xchg
inc
cs
mov
mov
push
pusha
jb
imul
imul
movsl
aas
or
sub
std
mov
in
divps
mov
mov
mov
push
push
xlat
and
mov
shl
int3
sbb
nop
icebp
mov
outsl
ror
mov
out
lods
rcrb
faddl
and
xchg
les
lahf
insb
cmp
ja
inc
cmp
arpl
adcb
mov
into
scas
jb
push
cmpsl
xchg
movsl
sbb
sub
fwait
sarl
jne
pop
sub
pop
pop
mov
ja
pextrw
sbb
ret
adc
std
repz
dec
and
lcall
das
pop
or
fsubs
test
aad
mov
daa
lcall
xchg
add
jb
push
lods
loopne
rclw
xchg
push
test
movsl
xchg
mov
push
roll
xor
clc
fstl
mov
adc
xchg
lahf
mov
xor
pop
push
mov
inc
sub
push
arpl
mov
pop
icebp
sahf
jg
sahf
jae
adc
xchg
fs
wbinvd
mov
out
mov
jbe
loop
imul
aam
pop
push
lods
ret
lahf
inc
or
fsubr
push
mov
std
dec
aaa
ds
adc
fistpll
jecxz
push
inc
adc
jne
sub
ret
pop
jp
fdivl
mov
xor
jg
sbb
dec
sbb
pop
xchg
scas
pop
lods
cmp
jmp
and
jno
shlb
or
xchg
aam
shll
mov
js
sbb
pop
cwtl
sbb
xor
mov
and
or
scas
jno
push
sahf
adc
stc
push
pusha
inc
in
jecxz
addr16
sbb
pop
mov
jne
mov
lods
movsl
imul
lahf
cmp
cmp
pusha
pop
xor
or
add
data16
cmc
mov
push
sub
int
and
or
loop
aam
test
add
popf
xchg
jo
pop
insl
jg
sarb
in
mov
mov
adc
mov
jns
mov
pop
mov
lret
cwtl
dec
fbstp
scas
inc
dec
jnp
addr16
fucomi
mov
call
insb
sbb
scas
mov
or
add
into
lock
pop
mov
outsl
mov
arpl
js
sub
cmp
daa
lahf
sub
cld
pop
push
xchg
push
mov
jae
lahf
add
mov
movsl
movsl
popf
xchg
cmp
mov
out
int
das
inc
pop
mov
mov
pop
mov
leave
popa
jne
ds
push
jbe
mov
js
int
inc
jae
inc
sub
mov
scas
data16
pusha
icebp
cwtl
push
push
pop
jae
pop
sbb
sub
nop
int3
jns,pt
test
fdivs
fucomip
js
aam
jae
cltd
gs
imul
inc
das
rcr
cmp
clc
bswap
and
ret
andl
lret
into
mov
fs
jnp
inc
les
dec
xchg
add
ret
sub
scas
loope
sub
out
mov
insl
bound
movsb
lods
loope
aad
test
or
movsb
push
push
add
inc
fnstsw
test
movsb
dec
outsb
lods
std
xchg
adc
clc
xor
je
fcmovu
inc
jmp
add
scas
push
mov
mov
pinsrw
lret
out
int3
dec
out
push
xor
lcall
cmp
outsl
jae
aaa
cmp
insl
push
cmc
push
sbb
in
jnp
mov
jno
adcb
cmc
dec
mov
addb
pop
mov
arpl
rorl
push
movsl
aad
inc
mov
push
repz
add
mov
cmp
ds
data16
jge
pop
jge
xorl
sbb
pop
icebp
mov
jecxz
ljmp
adc
in
lock
popf
in
inc
mov
cmc
lods
rclb
loopne
fstps
jb
mov
jmp
xchg
sahf
cmp
call
icebp
fcomip
inc
mov
pushf
pushf
ja
xchg
mov
icebp
push
or
cli
sub
out
nop
mov
xchg
adc
adc
xchg
shrb
daa
push
clc
shlb
pop
enter
jp
jl
and
shll
push
add
ds
into
dec
jmp
lock
sbb
pop
cmp
sbb
jecxz
out
in
jb
fdivrs
xchg
movl
push
dec
xor
nop
into
dec
add
je
sub
out
lahf
push
sub
adc
rorb
aas
insb
cmpsb
mov
iret
sbb
sub
push
insl
jne
jl
inc
push
or
mov
sti
push
push
mov
lds
xor
push
fsubl
sbb
test
dec
push
pusha
sbb
fs
dec
loope
roll
loopew
icebp
mov
insl
faddp
fs
pushf
fidivrl
pop
movsb
jp
pushf
lods
add
ljmp
lods
cmp
inc
push
and
push
out
xor
cmpsb
and
push
jle
dec
mov
dec
jno
add
sub
loop
movsl
ret
mov
mov
adc
test
sub
mov
dec
dec
push
sub
xchg
mov
insb
xchg
mov
insl
movsl
das
add
cli
jge
mov
xor
hlt
sub
mov
inc
pop
faddl
mov
outsb
push
jp
mov
shlb
inc
aaa
es
xchg
popf
xchg
out
and
je
dec
scas
mov
mov
xor
add
sbb
xor
mov
or
pop
push
lds
daa
push
rcr
ds
jns
or
fs
jb
dec
in
jno
pushf
aas
sub
xor
or
dec
std
cmc
mov
fnstsw
adc
insl
fcoml
rcll
std
or
jno
jmp
push
test
fidivrl
sbb
mov
andb
data16
dec
mov
popf
or
outsl
or
mov
dec
sbb
and
xor
daa
push
cld
insl
add
xchg
imul
push
jge
inc
mov
lcall
ror
jl
lods
mov
mov
jo
jb
jle
jne
push
mov
push
jle
out
cmpl
mov
jno
jno
movsl
jmp
xor
xchg
ds
insl
pop
outsb
sub
sbb
inc
pusha
fdivrs
in
lahf
mulb
add
mov
jl
scas
jge
cld
sbb
xor
ucomiss
jle
ret
clc
ja
call
push
daa
xlat
fucom
mov
loop
xor
stos
repz
lds
xor
hlt
inc
jae
popa
faddl
inc
jmp
inc
mov
lock
sbb
shlb
add
ss
lret
xchg
and
mov
jnp
fistl
mov
lods
orb
ljmp
sub
in
in
cmp
lds
pop
decb
xlat
mov
insl
js
fdivr
sbb
std
adc
inc
out
sub
jmp
fdivs
ja
mov
ret
in
push
or
pop
test
ljmp
add
mov
lahf
xchg
push
xchg
cmp
mov
jbe
shll
fsubp
xor
sbb
mov
daa
fnstenv
rorl
pop
mov
cli
sbb
cs
pop
add
and
or
stos
daa
mov
mov
dec
cmpsl
sub
xchg
idivb
and
mov
popa
jl
mov
divl
push
dec
xor
por
inc
mov
mov
push
mov
inc
mov
das
shll
mov
jae
lahf
ds
shl
add
jge
xchg
xchg
in
push
hlt
lds
pop
xor
fcoms
pop
dec
dec
rclb
movsb
pop
and
inc
sbb
push
negb
cld
add
pop
orl
out
jl
mov
out
dec
sbb
xor
and
insl
pop
push
add
scas
ja
pusha
into
insl
pop
mov
outsb
rclb
std
fcomps
or
stc
movsl
xor
fsts
insl
or
outsb
jg
leave
shrb
ljmp
pusha
fiadds
adc
std
stos
fmul
cmpsl
pop
popa
add
jbe
scas
sbbb
scas
popa
nop
push
add
sub
lea
dec
iret
xor
sub
sub
rcl
scas
rcrl
mov
push
int
sbb
std
data16
test
dec
add
xchg
mov
cltd
div
dec
adc
test
popa
int3
lods
jne
mov
or
push
jne
mov
aaa
insl
cli
adcl
mov
in
adc
cmp
les
inc
sub
and
cmp
mov
xlat
mov
stos
mov
ss
inc
shrb
adc
lds
pop
clc
xchg
insl
inc
or
push
or
push
mov
cmpsl
mov
cmp
out
xchg
mov
sub
lret
bound
insl
cld
adc
add
xchg
sub
sub
movsb
inc
and
pop
push
push
pop
dec
jp
inc
out
push
push
js
mov
add
lret
das
add
push
push
or
rcl
rclb
add
xor
cmpsb
enter
push
mov
sbb
cmp
adc
pop
rorl
xor
mov
out
out
jle
lods
sbb
ds
loop
mov
ds
dec
pop
hlt
xor
icebp
jmp
xchg
clc
sbb
pop
ds
and
push
xchg
enter
int
jo
push
or
cltd
jl
sbb
out
out
push
sbb
outsb
popf
xchg
mov
in
xchg
mov
out
data16
loopne
and
push
mov
repnz
xchg
ds
stos
ja
sub
je
ljmp
in
in
inc
iret
jo
sahf
lret
adc
lods
mov
cmpsl
push
pop
rclb
iret
popf
jmp
dec
or
int
inc
add
rcll
mov
mov
mov
mov
cmpsl
aaa
leave
sbb
xchg
paddsw
movsl
pusha
mov
lcall
mov
ficompl
inc
imul
and
or
std
xchg
imul
pop
fstp
es
push
or
rcrl
jg
ss
mov
inc
fldt
cmp
movsl
fwait
xchg
scas
test
jp
sub
mov
adc
add
aam
cmp
clc
insb
xor
add
jge
add
insb
lret
call
popa
imul
ja
leave
loopne
push
stos
xor
sub
sti
cmp
in
enter
pop
pop
cs
mov
lods
fldenv
icebp
sti
stos
and
or
fldenv
js
hlt
lcall
stos
mov
gs
lock
scas
jecxz
xchg
push
mov
div
push
adc
or
inc
mov
ljmp
dec
les
pop
insb
stos
test
cmp
repz
shll
mov
ficomps
aaa
xchg
mov
shr
loop
test
out
test
pop
lock
add
mov
inc
mov
cmp
pop
out
xor
cmp
pop
or
imul
into
in
fucom
lret
aas
in
fdivl
xchg
mov
and
je
lods
jmp
sub
insb
push
mov
and
inc
xlat
bound
sbb
shlb
sahf
or
xchg
cmp
sub
add
jge
xchg
arpl
inc
pop
les
sbb
lea
mov
std
jge
bound
shl
jl
pop
hlt
shrl
inc
or
iret
movsb
mov
addr16
push
aad
out
cltd
lahf
or
pop
cmp
test
pop
js
xor
dec
bound
jo
cmpsl
sahf
lods
mov
push
outsb
sub
sbb
fwait
mov
and
orl
mov
dec
cmpl
rcl
loopne
xlat
mov
jge
or
aas
cmpsb
jg
push
imul
and
movsl
repnz
dec
mov
push
or
inc
and
in
scas
adc
or
sarl
mov
pop
add
mov
test
pop
dec
je
scas
daa
add
rorl
int3
or
and
cmp
inc
lea
and
ret
xchg
cli
jecxz
adc
pop
mov
mov
or
outsl
test
sub
test
imul
out
push
sbb
mov
inc
scas
mov
out
stc
pop
lock
xor
int
lods
or
rorb
int
movnti
jno
sub
fistpll
push
sahf
cmp
jb
in
out
sub
xchg
dec
adc
lds
clc
js
adc
in
jne
and
cmc
aam
push
jmp
jns
xchg
sub
not
outsl
pop
push
outsb
mov
or
mov
inc
xor
sbb
repz
arpl
push
sbb
pop
pop
xchg
loop
mov
mov
xor
jecxz
aam
and
cmp
adc
sbb
aad
sbb
lea
jmp
repz
push
jp
dec
subl
push
pusha
jnp
mov
scas
pop
add
movsb
sbb
movsl
mov
sbb
mov
jmp
push
or
in
ficompl
mov
mov
mov
sub
aas
gs
jnp
adc
imul
push
push
jle
in
sbb
lds
adc
cmpsb
cmpsb
outsl
sub
loopne
lcall
cmp
lods
daa
cmpsb
mov
mov
andb
and
fildl
in
rol
dec
mov
out
out
inc
jae
pop
rorl
mov
cwtl
pop
add
push
imul
addr16
lods
mov
scas
arpl
hlt
stc
pusha
adc
pop
rol
ja
adc
hlt
ret
shrb
cmp
fidivrl
sbb
dec
outsb
or
int
xchg
sub
mov
adc
sti
push
data16
shll
jg
js
insb
adcl
xor
push
rcrb
aam
mov
push
add
mov
mov
push
sbb
xchg
push
test
inc
and
clc
fdivrs
loopne
mov
dec
inc
out
or
mov
inc
rclb
outsb
popa
and
jg
mov
outsb
push
mov
js
aaa
cmpsb
jmp
jno
push
adcl
xchg
push
xor
inc
repz
int3
ret
xchg
sub
test
leave
dec
rcll
pushf
test
imul
dec
test
jnp
imul
ja
sahf
shl
push
sbb
dec
mov
inc
loopne
repnz
lret
add
out
adc
mov
dec
cmp
mov
fs
es
and
imul
fcompl
ret
hlt
movsl
adcl
lret
sub
cmc
pop
stc
lds
roll
iret
xor
aam
addb
shl
loope
repnz
inc
jnp
rcrl
push
nop
sub
and
sahf
cmpsl
in
out
inc
or
out
pop
inc
mov
scas
cltd
hlt
aad
out
cmp
imul
pop
fsts
shlb
icebp
push
jne
stos
pop
cmpl
cs
pop
in
mov
movsb
xor
mov
scas
ja
loope
mov
fwait
mov
jne
push
divb
adc
sub
pop
icebp
add
pop
rorb
mov
pop
pop
in
adc
sbbl
dec
pusha
xchg
sbb
pop
inc
mov
lods
mov
lods
mov
add
sub
sub
sbb
hlt
push
jl
stos
in
rolb
cmp
outsb
jecxz
xchg
pop
sahf
pop
pushf
jno
or
lret
sbb
pop
cltd
mov
aaa
xlat
ret
aam
test
lds
inc
mov
int3
popf
icebp
or
gs
in
and
out
pushl
insl
fiadds
stos
inc
ret
mov
pop
mov
inc
mov
xchg
sbb
jno
rcr
jp
sub
es
popf
lcall
mov
aad
push
stos
fwait
cmc
jg
sbb
loope
cmp
pop
ljmp
jmp
mov
adc
pop
loop
cld
or
fwait
or
lea
jge
imul
and
add
add
in
pop
out
testl
adc
outsl
or
jg
xor
repnz
cmpl
mov
call
dec
loope
sar
adc
popf
fnstsw
test
pop
cmpb
stos
dec
dec
jp
bound
jle
push
mov
inc
into
rcrb
push
fistpl
dec
xchg
jne
mov
and
jle
daa
clc
shll
mov
inc
lcall
xchg
rcll
aam
cmpsb
add
lods
mov
mov
push
inc
jg
push
mov
ja
dec
out
dec
fcomps
xchg
jns
adc
loope
or
pop
mov
sbb
mov
repnz
push
add
mov
cmp
inc
push
mov
cwtl
shl
xor
idivl
repnz
mov
sbb
shlb
mov
jb
dec
nop
movsl
loope
inc
xchg
xchg
pop
or
popa
movsl
clc
xchg
add
pop
lea
in
enter
loop
movsl
inc
aad
imul
icebp
and
cmp
sbb
dec
repnz
xchg
and
loop
mov
mov
or
mov
sbb
cmpsl
decb
fldl
lret
test
push
adc
push
cli
lds
out
adc
imul
add
mov
cmp
in
xor
sbb
fiaddl
pop
xchg
jo,pt
inc
xor
cmp
add
nop
cmp
mov
mov
das
fistpll
fnsave
dec
data16
push
xor
xor
push
jo
stos
pop
test
cld
daa
cwtl
outsl
inc
pop
mov
push
push
cmpsl
hlt
jbe
dec
inc
jo
mov
out
in
sbb
inc
xchg
xchg
jge
pop
js
cmp
test
int3
xchg
mov
jb
add
sahf
inc
inc
cmc
test
xchg
cmc
cmc
push
cld
les
xor
inc
push
addl
xorl
daa
cmp
pop
es
jb
and
cmp
dec
mov
mov
push
xchg
gs
nop
lahf
out
push
cmp
jo
popf
ret
push
and
xchg
rclb
daa
lods
xchg
or
or
mov
int3
imul
push
fs
movsb
cmp
test
divl
popf
pop
jne
ret
mov
das
and
shl
lds
shl
leave
sarl
dec
add
out
in
cs
mov
shll
dec
cld
sbb
ss
imul
mov
dec
push
or
ret
and
sub
fwait
daa
leave
inc
fwait
outsb
jl
jmp
clc
xor
jo
stc
fldenv
xor
mov
pushf
nop
ja
cmpl
push
xor
push
repz
nop
repz
push
into
mov
or
xor
dec
xchg
or
jbe
ret
jmp
or
sub
xchg
xchg
push
lods
dec
fisubrs
adc
or
jp
inc
sub
movsl
or
js
or
data16
addr16
sub
mov
mov
sahf
jecxz
lret
sub
adc
imul
dec
iret
pop
or
nop
sbb
jle
adc
push
imul
jecxz
pusha
gs
jne
mov
sub
sti
push
push
and
insl
dec
lfs
in
icebp
insb
jns
test
add
xchg
and
in
clc
arpl
sbb
pop
xchg
mov
jecxz
cmc
mov
add
push
lods
fidivrl
cmp
xchg
outsl
xchg
or
sub
xor
xlat
dec
in
mov
mov
into
wrmsr
icebp
dec
lahf
pushf
add
lcall
lea
ds
daa
rorl
jmp
cmpsb
fwait
jnp
sti
icebp
dec
and
sub
push
test
loopne
aaa
mov
push
sub
pushf
mov
lock
adc
xor
movsb
arpl
jg
sbb
inc
sbbb
inc
insl
iret
test
pop
sub
stos
lahf
dec
repnz
xchg
loope
mov
sub
pop
nop
jmp
xchg
pop
hlt
lret
inc
mov
dec
ret
mov
add
enter
lods
xchg
hlt
xchg
add
rol
ret
out
das
out
test
fstpl
xor
xchg
loopne
xchg
mov
mov
jbe
jns
or
and
mov
dec
xchg
push
adc
outsl
mov
pop
les
movsb
or
and
test
jle
adc
dec
adc
adc
xchg
fiadds
mov
leave
fcomps
mov
test
mov
shlb
mull
out
fdivl
lret
cmp
add
cld
push
andl
push
xor
scas
jns
mov
mov
jmp
addr16
repnz
je
xchg
std
stos
jo
xchg
xor
or
arpl
mov
cwtl
or
xchg
sbb
test
dec
dec
jnp
fs
and
shlb
icebp
lods
dec
push
add
mov
int
orl
mov
pop
xchg
mov
dec
outsb
xchg
into
sub
dec
mov
cmpsl
dec
fstp
sbb
call
cld
lahf
mov
sub
xchg
call
stos
fbstp
int
imul
lock
out
adc
sub
scas
pushf
mull
inc
jne
pop
jbe,pt
mov
push
lods
push
mov
cs
out
and
jns
mov
ror
outsl
push
outsb
incb
sub
or
sbb
iret
xlat
xor
inc
push
nop
test
out
js
xchg
mov
mov
outsl
daa
xlat
mov
sbb
mov
push
jb
pmaxsw
mov
xor
fldl
in
cmc
adc
xlat
ljmp
push
and
cmp
fwait
xor
into
jo
sahf
and
mov
rolb
gs
js
js
pop
lds
mov
js
call
out
mov
xchg
test
xlat
and
add
pushf
insl
mov
lea
bswap
or
and
jbe
xor
or
shll
enter
dec
das
std
and
fs
fstpl
push
pop
shl
cmpsb
adc
xlat
cmp
scas
stos
mov
sub
pop
push
fisubrl
fsubrs
sbb
insb
aaa
xchg
jg
ljmp
mov
into
out
push
icebp
jno
push
cltd
jl
test
je
jg
jne
cld
cli
mov
int3
inc
push
dec
add
loopne
xlat
cmp
inc
in
sub
jb
or
dec
jp
cmc
inc
ffreep
mov
test
in
sbb
sbb
movb
call
iret
add
dec
rolb
sub
push
fistpll
and
mov
jge
idivl
or
shlb
mov
out
dec
or
xchg
mov
sti
cwtl
fcmove
test
cltd
mov
mov
and
push
or
mov
or
lret
adc
into
xchg
mov
mov
adc
popa
fs
push
inc
adc
les
ss
push
mov
rorb
sbbl
sbb
lock
pushf
or
popa
pop
loope
call
adc
int
gs
leave
or
gs
or
inc
insl
out
lock
sub
pushf
mov
add
lahf
push
arpl
das
adc
inc
aad
movsb
jmp
pop
add
mov
fwait
or
jne
nop
and
adc
loop
add
mov
xchg
jle
dec
jmp
stc
inc
lret
adc
scas
stos
xchg
push
push
inc
pop
inc
ja
test
cmp
outsb
adc
sub
inc
outsb
aad
cmp
jmp
mov
daa
xor
in
lea
das
rorl
paddusb
xchg
scas
push
scas
or
xlat
sub
jno
sbb
shlb
adc
cltd
push
push
sub
fimull
out
dec
cmc
dec
cwtl
add
or
arpl
hlt
push
xor
add
and
bound
push
or
movsl
mov
push
or
mov
dec
mov
rcrl
xchg
test
pushf
push
dec
sbb
vpcmov
insl
out
dec
push
or
pop
jl
divb
leave
sbb
sbb
mov
sti
mov
fdivl
je
nop
insb
xor
shrl
scas
mov
push
popa
cmpsl
and
jecxz
ss
shlb
iret
sbb
jne
clc
push
mov
jne
stos
ret
sti
movsb
pop
jbe
fldenv
ja
inc
push
aam
lret
sub
dec
inc
adc
xchg
inc
data16
jmp
lahf
jno
adc
xchg
jnp
sar
add
cmp
jno
lds
into
mov
mov
fs
shr
cs
pop
cmpsl
mov
inc
rclb
test
js
jno
pop
xchg
adc
sub
roll
push
xchg
and
rol
pop
pop
jmp
lahf
jecxz
push
ret
xchg
push
mov
popf
mov
movsl
push
inc
jb
je
por
xor
mov
mov
add
sbb
mov
iret
pop
mov
jnp
imul
mov
gs
mov
add
ficompl
jae
sbb
in
aas
xchg
push
daa
sub
push
ja
mov
add
popf
jle
pop
dec
and
sahf
and
push
enter
xchg
lds
inc
push
xchg
dec
es
cmp
stc
imull
xor
adc
jb
and
lds
xchg
into
sbb
loope
into
add
icebp
push
pop
in
push
dec
lock
lds
decb
rcr
fbstp
xchg
and
mov
rolb
out
push
popl
daa
mov
push
sbb
rcrl
adc
ljmp
dec
imul
mov
int
or
rorb
cmp
mov
mov
in
mov
lret
mov
insl
cmp
push
pop
cmp
test
xchg
inc
push
mov
sbb
adc
push
stos
sti
scas
decl
nop
mov
dec
iret
mov
ds
icebp
lds
es
sub
sbb
jmp
lods
les
rclb
shl
mov
sti
les
je
orl
scas
xchg
mov
lods
mov
sub
push
inc
sbb
enter
xlat
xor
sbb
addr16
xor
add
mov
xor
in
dec
push
mov
mov
adc
cmp
and
lret
enter
inc
mov
dec
scas
rcll
lret
out
iret
jp
mov
pop
out
aad
xchg
and
adc
and
adc
mov
sbb
mov
stos
mov
ss
jmp
cmp
xchg
out
mov
xchg
js
or
stos
and
adc
cmp
cmp
int
mov
adc
mov
pop
shll
push
fdivrl
out
out
add
les
sar
xchg
dec
cmp
pop
test
or
mov
imul
lahf
lret
xor
rolb
stos
int3
cmpsb
jns
xlat
rep
out
cmp
outsb
or
daa
addr16
imul
out
sahf
sub
mov
sub
sahf
test
push
fwait
dec
shlb
iret
test
push
add
cmp
loop
imull
imul
or
pop
fidivl
inc
and
pushf
in
push
cmpsb
mov
pop
leave
cmp
fwait
adc
dec
mov
nop
push
push
in
and
xchg
adc
adc
and
mov
loopne
adc
mov
adc
add
jno
dec
and
cmp
xorl
call
add
pop
std
xor
pop
loop
pop
sarb
mov
mov
test
fisubl
jmp
repz
jns
loope
cli
test
xchg
dec
inc
into
adc
xchg
push
jg
pop
fbstp
add
jge
mov
inc
mov
adc
jmpw
ds
sub
dec
mov
pusha
arpl
sar
or
push
icebp
lcall
push
add
mov
pop
stc
sbb
jns
mov
add
fldcw
pushf
das
ret
xor
insl
mov
add
sahf
cmp
cmp
pop
pop
mov
mov
das
mov
push
mov
cmp
lret
test
shr
pop
fiadds
xchg
mov
adc
ds
cmpsl
mov
in
pop
sbbb
mov
inc
xchg
sub
xchg
sbb
leave
in
mov
pop
push
push
cmpsl
call
outsl
mov
cld
pop
mov
ret
mov
jg
jmp
jge
lods
mov
pop
and
rcr
jbe
dec
cmovl
inc
fwait
popf
inc
jp
or
add
psllq
dec
outsl
push
adc
js
dec
aaa
push
jae
lock
jge
rdmsr
jbe
jl
cltd
pop
mov
js
sbb
fisubl
mov
fdivl
add
js
mov
imul
push
bound
out
dec
xchg
lods
sub
adc
push
sbb
fwait
out
xor
cmpsb
movsb
pop
aas
imul
adc
movq
fdivs
inc
or
jbe
cli
ficoml
xor
mov
dec
arpl
insb
mov
sbb
jg
imul
adc
xrelease
pop
mov
test
sub
xchg
cmp
das
adc
pop
in
subl
xchg
fiaddl
and
sub
std
push
push
dec
fadd
rcll
fcompl
mov
decl
repnz
pop
jg
dec
rcll
cmp
sbb
cmc
ja
pushf
mov
ljmp
ds
loopne
movsl
aad
mov
fisttpl
jl
lahf
dec
insb
or
push
and
clc
inc
pop
jne
cs
cmp
inc
loope
sub
ret
fimull
test
cmp
sbb
pop
repz
xchg
mov
adc
data16
fcoml
and
mov
xchg
in
xor
out
inc
fcomps
mov
cmpsb
push
fisttpll
xchg
popf
aaa
add
push
fadds
lods
jp
addr16
into
lods
pop
adc
push
shrl
sub
cmp
icebp
rclb
repz
fdivr
stos
ljmp
fstpl
pop
and
cmp
jae
mulb
jo
jnp
bound
mov
ja
imul
cs
stos
test
pop
push
jns
pusha
int3
or
and
jnp
cmpsb
inc
mov
fisubrl
push
loope
sbb
push
xor
enter
pop
lods
neg
fldcw
es
mov
push
mov
xchg
push
or
imul
pop
sub
or
xchg
mov
dec
mov
ret
mov
mov
xor
inc
cmpsb
cmp
mov
insb
dec
clc
ljmp
out
inc
test
sarl
pusha
insb
jb
cmp
insl
push
mov
je
cmp
iret
add
lret
out
repnz
dec
push
jecxz
jge
mov
dec
lcall
movsb
mov
outsl
add
fldl
cmp
or
mov
dec
test
mov
jg
mov
mov
xorl
dec
add
test
mov
repnz
ficompl
mov
xchg
mov
and
and
pop
adc
inc
imul
add
aad
test
mov
arpl
pop
pop
cwtl
fldcw
shlb
dec
aam
dec
ror
sub
cmp
sbb
sahf
cld
xchg
fbstp
sub
mov
leave
jnp
or
leave
cmp
inc
cmpsb
stc
jl
mov
inc
outsl
js
jb
ljmp
cltd
into
xchg
int3
inc
aad
inc
jne
dec
test
jo
sub
mov
jae
push
fldcw
cmp
and
orl
lods
mov
push
ljmp
xchg
push
cs
jno
out
out
or
insb
and
icebp
divl
mov
leave
cmp
ja
mov
pop
iret
out
cmp
icebp
xor
jecxz
int3
dec
sub
lods
stos
sub
popa
call
imul
sti
xor
sub
dec
xchg
lea
jmp
fisubl
in
rcrl
mov
pop
mov
mov
test
and
sub
jl
mov
cmpsb
call
je
mov
data16
xor
shll
shll
fists
ds
fbstp
iret
and
dec
outsb
hlt
cs
cmp
inc
add
jle
dec
xchg
jbe,pn
adc
inc
jne,pn
dec
adc
mov
push
mov
push
push
pop
cmp
xchg
sbb
repz
push
mov
cltd
lcall
inc
mov
dec
mov
lret
lahf
inc
enter
int
lret
inc
and
loop
adc
sahf
gs
jno
pusha
xor
push
mov
xor
mov
mov
std
push
sbb
or
das
xor
addr16
or
and
cmp
ss
adc
mov
aad
pop
popf
popf
outsl
cmp
in
pop
pop
jnp
daa
dec
cmp
dec
fcompl
outsb
xorl
leave
mov
xlat
lock
orps
mov
and
jns
mov
pop
in
cmp
ret
gs
jecxz
je
hlt
jae
push
dec
fwait
sub
out
cld
add
mov
sub
pusha
in
in
sub
xor
adc
sbb
mov
test
sub
inc
bound
jb
and
outsl
sub
inc
cmp
fcmovu
xchg
mov
sbb
xchg
jl
jae
xchg
jo
adc
js
das
inc
mov
jno
lret
aaa
push
decb
gs
hlt
mov
dec
pop
iret
dec
mov
scas
inc
pusha
jmp
jnp
xchg
rolb
mov
inc
pop
cmp
dec
xchg
mov
or
imul
or
popa
push
jb
ret
jo
cmp
jno
shll
test
shll
jge
aad
mov
inc
jecxz
out
fnstenv
stc
sbb
ja
test
push
pop
push
mov
fiadds
push
subl
std
or
sarl
ficoml
adc
xchg
sbb
xlat
divb
and
jmp
jae
push
and
add
pop
popf
cli
and
dec
push
and
icebp
ficoms
mov
inc
xchg
aam
adc
fcmovnbe
mov
bound
cltd
mov
cmp
add
out
adc
pop
dec
pop
dec
push
lds
pusha
push
lcall
cmp
and
ja
sub
push
divb
cli
jnp
mov
roll
fidivl
test
ret
scas
test
mov
sti
mov
test
xchg
and
mov
das
cmp
adc
cmp
rorl
sub
in
call
lods
mov
inc
sbb
ss
mov
mov
cmp
xchg
adc
loop
fsub
test
and
mov
mov
add
icebp
adc
cs
cmpsl
inc
pushl
insb
xchg
mov
stos
add
inc
ret
loopne
ja
mov
cmpsb
fiadds
mov
loop
iret
movsb
loopne
mov
movsb
cmpsl
and
mov
adc
daa
shlb
xchg
push
xor
mov
ss
imul
std
push
dec
xchg
loop
and
test
dec
sti
mov
inc
add
ja
clc
fcoms
adc
cltd
ja
xor
jnp
or
je
xchg
fstsw
mov
fists
fstpt
xchg
arpl
movsb
xor
ficompl
push
mov
pop
cltd
mov
jne
inc
dec
stc
ror
std
pusha
and
in
iret
repz
push
lds
arpl
add
loop
xchg
mov
rcl
add
jmp
out
repnz
fldenv
add
xchg
enter
dec
push
or
xchg
sub
lods
or
pusha
mov
adc
cld
outsl
bound
out
cmp
push
ret
jecxz
xchg
jp
pop
cmpsl
popa
mov
inc
fdivrs
mov
shrl
cltd
inc
mov
adc
inc
jb
add
dec
jmp
cmp
std
sbb
push
pop
inc
sbb
repnz
xor
inc
xchg
mov
jl
out
push
mov
imul
ss
orb
or
lcall
push
fldenv
add
mov
and
out
jp
loop
loope
xchg
jo
sbb
mov
pop
stos
int3
scas
les
int
push
jge
jg
cmp
cmp
mov
cmpsl
add
sbbl
cmpb
cmp
adc
std
fstl
pushw
scas
enter
adc
es
push
adc
jge
out
iret
pusha
icebp
iretw
pop
add
sbb
push
cmp
add
jge
xor
mov
and
pushf
dec
lret
aad
dec
jno
adcl
push
mov
rclb
pop
xor
pop
test
add
inc
in
push
addl
outsb
and
inc
jg
sbbl
and
in
mov
lcall
adc
stc
pusha
div
je
mov
movsl
in
xchg
inc
dec
and
ds
fisubrs
or
fildl
icebp
int
and
ss
mov
idivl
repz
xchg
dec
out
dec
aaa
inc
popf
mov
int
and
sti
stos
pop
and
push
cmp
repz
insb
mov
jno
push
push
aas
xlat
pop
lock
adc
test
daa
in
jecxz
enter
sbb
outsb
sub
xchg
xchg
das
in
xchg
repnz
push
sub
sbb
pop
sahf
sbb
inc
insl
je
mov
movsb
push
sbb
cmovns
xchg
push
push
sub
stos
or
fadds
std
push
xor
iret
push
mov
mov
imul
imul
pop
pushf
cwtl
insl
add
pop
ret
push
push
add
data16
mov
push
roll
lea
movsl
cmp
lods
mov
sub
mov
inc
mov
mov
jle
mov
mov
mov
mov
lret
push
xchg
lret
mov
stos
test
mov
addr16
adc
cmpl
mov
mov
mov
cld
cmpsb
and
daa
or
mov
mov
and
mov
jno
ja
andl
mov
mov
aas
xchg
adc
or
dec
mov
pusha
in
xor
cmc
sti
idivb
pop
int
insl
out
mov
xchg
sub
or
cwtl
out
mov
xchg
jp
mov
mov
lods
mov
sbb
xchg
inc
call
nop
stc
mov
aaa
mov
or
inc
push
stos
push
mov
or
in
xor
adc
decb
outsb
xor
push
sub
sbbb
and
pextrw
sub
xor
popf
stos
mov
js
shr
jb
mov
jno
xor
scas
xlat
push
hlt
lock
loop
cli
mov
int
ja
sbb
xor
dec
jo
and
and
mov
mov
out
ret
xchg
popf
push
dec
jbe
mov
sbb
outsl
repnz
js
imul
mov
lods
pop
out
mov
xor
aad
sti
scas
xchg
sub
mov
insb
sub
jg
inc
and
mov
push
std
fs
inc
xchg
cmp
popf
lahf
xchg
sub
dec
lea
nop
fs
cltd
inc
sub
js
dec
outsl
aad
inc
pusha
push
mov
mov
push
nop
pushf
push
mov
pop
jmp
or
test
cwtl
mov
xchg
mov
shr
dec
arpl
push
sbb
mov
and
cmpsl
lret
outsb
jg
data16
add
imul
addr16
jo
pushf
out
lcall
in
mov
adc
xor
adc
sub
push
lds
add
ret
incl
mov
in
test
fldt
inc
sub
xchg
pop
jne
pop
roll
in
ret
out
repz
lea
add
enter
cmp
push
das
int3
cmp
push
sbb
jl
pop
pop
xor
push
jno
sbb
adc
adcl
cs
iret
dec
ljmp
adc
aaa
popa
int
movsl
repnz
mov
ret
loop
in
scas
ja
mov
ljmp
icebp
inc
push
push
sbb
call
std
inc
fwait
xor
or
xchg
or
inc
inc
sub
pop
imul
sub
and
xchg
pop
sbb
movsl
test
stos
jl
out
mov
mov
aaa
jbe
je
in
je
in
cmp
insb
inc
les
fisttpll
xor
loopne
fnclex
subl
cmp
inc
mov
cmp
mov
scas
in
in
push
out
leave
scas
pop
cmc
in
and
cld
mov
pop
mov
sub
pop
jne
jge
rcl
push
out
repnz
out
pop
lods
sub
loop
and
xor
enter
flds
fs
jno
jge
pop
scas
ja
dec
xchg
popa
loope
call
and
fistpl
addr16
add
or
movsl
rorl
mov
ret
fisubrl
or
lock
rclb
jle
mov
sub
xchg
lock
aaa
jno
xlat
lahf
sahf
adc
mov
ficompl
mov
push
incl
stos
ja
add
mov
lock
mov
imul
dec
xor
loopne
xlat
or
push
popa
int3
aad
mov
mov
movsl
mov
arpl
jno
inc
cmp
cmpl
int3
jl
mov
ss
and
or
push
jge
clc
test
pop
leave
push
sbb
outsl
arpl
popa
insb
lea
xor
pop
int
adc
or
stos
inc
lods
inc
scas
outsl
jmp
popl
out
xchg
mov
adc
sbb
fnsetpm(287
clc
jno
lahf
dec
or
test
sub
icebp
sti
test
cwtl
out
iret
sbb
cld
mov
cmpsl
adc
popf
jp
int
dec
fcompl
xor
push
mov
push
jo
mov
js
iret
mov
fldenv
in
pop
rcrb
inc
into
jnp
add
call
xchg
mov
or
test
sbb
jle
pop
mov
lock
inc
jb
mov
ljmp
cmp
les
out
stos
aad
test
mov
xchg
mov
fistpl
je
xor
ret
mov
xchg
stc
or
pop
sub
rorb
xchg
std
sarb
xlat
xor
imul
push
repz
xchg
aas
loope
roll
mov
aam
add
stc
cmpsb
fmul
xchg
int
jne
loopne
ljmp
sub
mov
pop
mov
out
push
dec
loop
xchg
sbbb
out
cli
jne
rorl
xor
sub
sbb
xor
rcll
mov
sbb
in
cmp
sti
push
mov
imul
mov
xchg
mov
out
test
push
mov
test
inc
test
and
mov
mov
daa
mov
mov
push
in
xor
jnp
mov
mov
mov
dec
pop
pop
mov
adcb
sbb
int3
jl
jbe
and
mov
pop
adc
clc
lods
mov
fxch
popf
fdivrl
hlt
jne
mov
ja
out
jg
push
mov
jb
and
lods
mov
mov
nop
stos
ljmp
mov
pop
xor
sub
dec
sub
xchg
out
cltd
daa
xor
sbb
and
ret
mov
jno
or
jp
xchg
imul
push
jne
aam
sbb
cmpsl
xchg
int
sbbb
xchg
in
cltd
cli
add
gs
lcall
cs
call
in
mov
jo
mov
sub
ret
shll
push
mov
and
push
xchg
fidivl
jmp
fldcw
ret
cs
addr16
clc
lahf
mov
iret
adc
pop
jns
adc
movsb
cwtl
or
cwtl
sub
or
or
test
lods
out
mov
mov
stos
test
mov
mov
ljmp
dec
mov
jecxz
ret
add
add
test
mov
mov
fstl
les
cmp
xchg
pop
imul
cli
test
pause
pop
rcll
pop
icebp
jmp
aas
pop
pop
xchg
nop
mov
mov
push
push
loope
ds
div
pop
xor
sbb
pushf
sub
cmc
jge
repz
inc
fst
jmp
aam
jg
loop
fbstp
mov
mov
sub
pop
and
ret
cmpl
nop
inc
dec
sbb
mov
clc
xchg
inc
lods
and
add
and
or
cmc
fisttpl
add
jbe
scas
push
jecxz
popa
add
and
fisubl
push
call
inc
fisttps
test
mov
and
mov
imul
mov
add
lahf
loopne
into
dec
dec
popa
sahf
lds
mov
push
adc
rep
push
adcb
push
mov
xchg
ficompl
xchg
loope
sar
or
fists
in
cmp
nop
loopne
and
jnp
shrb
inc
mov
adc
dec
jne
std
pop
dec
dec
sub
ja
hlt
rolb
call
mov
xchg
cltd
aas
and
push
cmp
dec
sub
cmp
push
cs
adc
adc
std
mov
daa
cmpsb
push
xor
out
sub
mov
or
sub
fdivp
pop
xor
pop
inc
int
or
in
or
sbb
test
dec
dec
jbe
stc
xor
aam
xchg
loop
leave
stos
pop
lret
sahf
lods
jns
cmpsb
push
pop
xchg
pop
jecxz
vpminsw
add
lods
adc
fdivrs
movsb
dec
js
dec
shld
dec
jl
inc
arpl
mov
sbb
or
mov
loop
jmp
jne
bound
lret
sbb
pop
fsubrp
cli
or
sub
ss
dec
add
nop
add
jmp
mov
loopne
andl
call
mov
dec
jmp
cs
fwait
pop
mov
jae
push
call
mov
lret
or
mov
cmp
jge
dec
push
mov
in
xchg
jle
xchg
call
lcall
dec
negl
inc
sub
pop
pop
mov
nop
repnz
loopne
and
ss
mov
cmp
je
popf
ret
mov
std
dec
mov
int3
test
lods
in
mov
add
fiaddl
cwtl
inc
sbb
cld
fwait
or
in
addl
lea
ret
cmc
xor
mov
cs
dec
dec
xchg
and
push
push
push
aas
psubusb
lds
pop
cltd
mov
fs
jo
mov
mov
cmp
xor
xor
leave
sahf
add
lods
aad
out
fs
sub
sub
jp
cmp
mov
in
stos
or
sub
sbb
pusha
shlb
jnp
loop
andl
fnstsw
xchg
push
fcoms
add
sub
cwtl
mov
fisttpll
aas
push
inc
pop
cmpb
cld
push
shll
dec
cld
push
adc
sub
test
lret
pop
pop
push
lret
jno
out
and
insb
add
out
xchg
push
jnp
sbb
pop
mov
mov
mov
test
adc
je
xor
add
mov
aam
pop
hlt
test
shr
hlt
and
outsl
dec
mov
shrl
sbb
add
cmp
push
inc
pop
sbb
pop
fiaddl
add
in
xlat
stc
xchg
and
dec
adc
test
out
aas
dec
mov
aam
incb
push
ds
lock
lcall
mov
add
sub
or
mov
mov
pop
pop
jno
cmp
negl
add
aaa
jge
cmpsl
lret
scas
or
int3
popf
addr16
xor
inc
mov
sarl
sbb
mov
jne
sub
fadds
xchg
outsl
icebp
adc
inc
cli
movsl
push
repnz
and
lret
lock
hlt
cmpsb
lcall
popa
rcrb
xor
nop
adc
jecxz
lret
cli
inc
xor
int
mov
hlt
out
mov
lds
push
addr16
ret
mov
jmp
insl
jmp
icebp
icebp
in
jp
xchg
push
inc
std
inc
add
xchg
mov
cmpsl
imul
jnp
xlat
iret
lcall
into
test
adc
mov
fsubr
mov
xor
in
inc
clc
pop
sarb
push
push
mov
int3
lods
js
mov
mov
out
or
sbb
ss
mov
adc
mov
mov
subb
inc
bound
cli
xchg
orb
pushf
push
mov
sar
fisttpll
xor
adc
lret
xor
sub
pop
sahf
sbb
cmp
and
xor
cltd
out
push
mov
cmpsb
and
inc
and
xchg
roll
mov
bound
cld
push
fwait
out
loope
cmpsl
imul
nop
push
inc
dec
pop
pop
das
pop
nop
fsubs
xchg
xchg
add
aaa
sbb
fistl
decl
add
adc
lock
jbe
push
or
outsl
daa
pop
xor
in
mov
pop
fnstenv
rolb
stos
rcrb
push
addr16
ljmp
pop
xor
jmp
mov
in
dec
jne
xor
out
out
sbb
adc
jge
xor
daa
or
in
sbb
sub
aas
mov
cld
ret
test
add
insl
cmp
lahf
rcrl
mov
jecxz
iret
jb
xlat
pop
ror
jnp
adc
dec
popf
neg
lahf
mov
es
pop
je
cmpsb
sbbb
bound
into
sub
mov
fisubs
mov
fdivp
andl
divl
in
insl
mov
cmpl
mov
stos
xchg
xchg
inc
jno
xorb
lret
xchg
loope
fisubl
mov
jp
insb
add
pusha
fadd
fimuls
imul
pop
out
sbb
dec
inc
jns
push
outsl
lcall
push
sub
dec
out
shr
xchg
aas
xor
call
push
inc
test
int3
in
add
xchg
inc
shrb
mov
jae
je
pop
cmc
cmpsb
jg
leave
mov
fbstp
push
orb
dec
mov
pop
xchg
inc
sbb
jo
cmp
pusha
jb
mov
bound
sbb
lods
mulb
dec
or
adc
mov
imull
mov
insl
lret
into
push
mov
xor
mov
mov
imul
mov
jecxz
cmp
lods
rcll
and
adcl
incl
inc
mov
inc
sbb
sub
and
cs
popa
jecxz
jns
cwtl
sti
rcrl
fistl
in
jge
mov
or
stc
push
sub
aad
fimuls
and
mov
jbe
cmpsl
sub
dec
mov
insl
aad
lcall
add
imul
pop
pop
shrl
fs
mov
push
orl
cmp
adc
daa
lret
lds
jns
lds
loop
call
mov
imul
repnz
sub
rol
sbb
push
outsb
inc
add
or
aas
js
add
push
fnsave
popa
jnp,pt
enter
shrb
cli
icebp
jo
add
jp
test
mov
push
cld
push
hlt
and
xchg
enter
mov
rolb
fmull
je
or
ret
sub
add
dec
das
aad
cwtl
les
sbb
pop
test
jo
cmp
dec
xlat
fmuls
jbe
pushf
mov
cmc
xorl
loope
xchg
js
mov
xchg
jns
out
outsb
aas
insl
and
push
loop
mov
inc
clc
rorb
imul
lcall
test
push
cmovnp
fistpll
out
andl
fs
rcl
test
hlt
cld
into
mov
inc
call
cmp
and
pop
xchg
arpl
or
xchg
notl
cli
jge
lcall
or
and
insb
mov
jbe
pop
pop
sbb
or
sbb
test
sub
clc
jne
mov
bound
mov
arpl
aas
sbb
cld
and
imulb
mov
push
jle
or
mov
ret
js
icebp
cwtl
dec
sbb
sti
andl
xor
mov
sbb
pop
pop
test
xchg
jnp
rcrb
add
mov
adc
subb
js
sub
push
xchg
scas
pop
rorb
add
adc
xlat
push
je
adc
or
gs
cmpsl
mov
stos
or
mov
cmp
out
fdivr
and
insl
lock
or
fdivl
cmp
jle
aas
inc
lods
pop
pop
push
daa
adc
mov
jb
mov
adc
ret
sbb
mov
jmp
hlt
add
dec
enter
push
push
les
pop
lock
int3
fbstp
sbb
inc
sti
sub
sbb
lock
addl
out
clc
adc
clc
or
mov
jge
sbb
push
cwtl
cmpsl
or
mov
dec
loope
imul
pop
gs
sub
out
inc
adc
push
dec
or
dec
or
int
mov
fnstenv
shrl
sbb
sbb
rcl
lret
insb
les
sub
pushf
cli
stc
pop
shll
push
mov
fwait
pcmpeqb
sbb
out
cmp
cmp
xchg
and
cli
xlat
adcb
ljmp
addr16
es
inc
dec
lds
inc
mov
ja
popfw
fisubrl
lea
push
movsl
sti
ret
sub
popa
cmp
cld
cmpsb
leave
mov
icebp
sbb
or
scas
das
sbb
dec
es
cmp
inc
add
jg
dec
outsb
pop
mov
rcll
push
or
push
mov
push
mov
imul
mov
cmc
bound
scas
stc
inc
lahf
dec
fcoml
add
mov
pop
add
in
sub
mov
mov
mov
enter
imul
daa
push
sub
negb
mov
pop
aas
sub
sbb
orl
inc
push
adc
enter
jae
push
xchg
mov
xlat
mov
mov
mov
int3
enter
lods
inc
je
fstpl
pop
icebp
push
xlat
push
xor
fucomp
pop
loopne
and
lret
test
pushl
dec
jo
and
mov
push
xor
decb
sub
fistps
fsubp
js
xor
out
jne
lea
mov
test
cld
xor
mov
push
mov
xchg
add
stc
mov
mov
data16
or
jno
in
or
inc
cmp
mov
aam
push
dec
cmpsl
jne
add
push
xchg
into
ljmp
or
in
inc
sub
fimull
inc
mov
ljmp
sub
fwait
inc
arpl
ret
cmp
pop
mov
jg
or
xor
inc
test
push
outsl
dec
lret
and
and
mov
or
push
mov
or
mov
stos
xchg
pop
call
mov
mov
bound
lods
cltd
add
lret
xor
loopne
push
dec
adc
cmp
cmp
hlt
jle
iret
push
ds
and
js
inc
lret
pusha
popa
mov
sbb
mov
fsts
mov
es
xchg
sbb
cmp
notb
and
jbe
cmp
mov
sub
jae
push
clc
andb
andb
inc
aad
mov
lret
and
cmp
shlb
pop
or
clc
lds
cmp
incb
mov
out
or
mov
out
xchg
dec
mov
mov
repz
jno
mov
xor
rcrb
pusha
lea
push
push
imull
mov
or
and
xor
jno
aam
xor
and
mov
scas
cmp
ficoml
mulb
jle
mov
imul
jnp
lahf
cmp
push
rclb
jne
pop
jno
mov
pop
cmp
inc
mov
jne
scas
pop
daa
xor
scas
bound
icebp
cmp
adc
xchg
out
stos
ret
inc
jecxz
inc
mov
dec
inc
adc
daa
call
mov
inc
push
add
xor
inc
jmp
stc
into
mov
insb
test
sahf
fs
stc
pusha
test
out
loop
jns
mov
pushf
fnstsw
push
out
movsl
inc
daa
dec
mov
adc
fdivl
xchg
or
xchg
test
xchg
mov
cmp
jecxz
fnsave
cmp
pop
outsl
mov
mov
jecxz
out
push
xor
nop
dec
repnz
dec
mov
icebp
xor
and
push
xchg
jns
js
outsl
int
dec
daa
xchg
ljmp
jecxz
std
pushf
adc
out
popa
pop
cltd
mov
inc
jo
xchg
push
insl
or
sbb
sub
or
pop
adc
and
xchg
lds
repz
cld
sub
and
xchg
scas
addb
dec
jge
add
cmp
notl
into
dec
mov
mov
mov
mov
sarl
sub
int
xor
sbb
push
xor
mov
cmp
mov
fsubrs
fstl
or
mov
icebp
and
xor
sahf
pop
jbe
mov
dec
add
out
lock
in
jne,pn
xor
movsl
les
xchg
pop
jp
cmp
jno
scas
vsubss
adc
dec
std
or
cld
mov
mov
jmp
in
lret
jge
cmpb
jmp
movsl
cmpsb
je
outsb
lcall
mov
mov
xor
jmp
test
ja
mov
xor
jbe
jns
lcall
jge
aaa
pop
or
mov
ja
add
sub
jle
inc
mov
inc
xchg
out
push
cmp
int
xchg
xchg
mov
sahf
fsubl
or
sbb
hlt
dec
hlt
in
add
cmpb
mov
or
sbb
jp
test
mov
sbb
or
cli
testl
fcmovbe
insl
xor
mov
mov
lods
fs
addr16
sub
jg
xchg
daa
divl
xlat
ror
pop
rcll
loope
lret
mul
lret
scas
std
aam
out
mov
mov
ret
mov
sbbl
pop
inc
add
cmp
pop
subl
ds
out
repz
test
sti
adc
jns
test
pop
cmp
or
jg
sti
inc
loopne
ljmp
jge
int3
shll
and
jle
lahf
mov
sti
xchg
movsl
movsb
into
inc
popa
cmp
pushf
cwtl
adc
das
mov
stos
je
mov
mov
mov
out
dec
int3
pop
insl
mov
adc
les
lods
ret
cmc
ret
lods
test
stc
xchg
push
xchg
dec
xchg
inc
push
mov
lds
cmp
lock
sarb
jge
xorl
out
dec
and
and
iret
test
cwtl
stos
dec
push
adc
shlb
xor
int3
ror
cmp
add
mov
data16
adc
repnz
in
xor
lret
aad
add
insl
scas
and
fs
stos
ss
loopne
in
xchg
das
mov
xchg
dec
out
shr
mov
push
insb
jmp
fimull
xchg
and
lods
pop
jecxz
int3
sbb
scas
and
and
xchg
insb
pop
xor
sub
jg
dec
ja
int
sbb
jmp
sahf
movsb
out
mov
sub
adc
pop
dec
loopne
xor
cli
clc
mov
mov
pop
iret
divl
mov
popf
or
sbb
arpl
out
lea
pop
xchg
push
jae
mov
incb
jae
inc
pop
inc
in
loopne
add
cmp
sti
ret
push
loop
in
gs
xchg
movsb
rcll
cld
cmp
or
pop
xor
adc
jno
out
adc
mov
add
aam
jbe
lock
pop
loop
jo
push
std
iret
xor
in
xor
or
cmp
inc
xchg
lea
ficoms
push
adc
dec
sub
xorb
int3
mov
ds
ja
sahf
xor
std
sbb
bound
sahf
push
mov
mov
es
xchg
hlt
stc
lcall
jecxz
mov
aaa
arpl
ljmp
test
pop
shlb
push
cld
pop
stc
add
insb
push
fmull
and
adcl
xor
sar
pushf
leave
mov
dec
add
mov
sub
jae
inc
lods
adc
xchg
inc
cmp
cmp
and
cmc
mov
std
gs
sub
xchg
addr16
test
subl
je
je
pop
scas
cmpsb
cmc
sti
loop
popf
sub
xchg
add
stos
test
test
cmp
pop
fildl
cmc
aas
cmp
add
inc
dec
mov
pop
sbb
sub
out
adc
iret
shrl
lds
jge
aam
fistpl
popf
jns
les
push
orl
jno
or
ret
call
insl
pusha
xchg
fisubl
mov
mov
cli
daa
es
mov
fistpll
cmp
lock
fsubrs
jae
dec
pop
cltd
imul
stos
lods
pop
push
mov
jl
inc
pop
ret
mov
xor
out
mulb
fwait
mov
aaa
scas
enter
loop
shrb
dec
cmp
popa
ss
xchg
lahf
hlt
fadd
gs
test
adc
mov
mov
pop
xchg
pushf
jecxz
jle
xchg
dec
cmpsb
dec
in
add
test
fadd
movsl
test
xor
mov
pop
inc
mov
movsl
lret
pop
xchg
cmpl
pop
adc
enter
sub
adc
xor
jmp
lods
jl
inc
cmp
jnp
or
adc
popf
dec
loop
sbb
xchg
mov
pop
sbb
call
repnz
in
or
daa
mov
add
addr16
imul
jp
test
dec
sbb
jecxz
push
aad
leave
mov
mov
shl
not
fldl
mov
lds
mov
ret
sub
ficompl
scas
lcall
adcb
mov
push
sub
pusha
sbbb
fwait
and
rcrb
fmuls
sub
inc
cmp
pop
into
enter
inc
xchg
mov
ljmp
push
xor
in
jg
lret
cmp
mov
testb
test
dec
mov
inc
mov
push
cmp
lods
mov
push
cmp
add
icebp
loopne
and
repz
mov
leave
leave
cwtl
movsb
lock
out
adc
mov
mov
inc
cld
push
outsl
les
sub
pop
lcall
jb
scas
int3
mov
inc
push
dec
xchg
in
add
lods
in
hlt
adc
and
cmp
insb
fsts
push
pop
movsl
sbb
add
push
into
rcll
mov
mov
or
lea
or
int
fsub
repz
inc
push
out
push
mov
jnp
mov
jne
arpl
sbb
out
notl
imul
jnp
icebp
in
mov
jne
adc
jl
adc
push
mov
xor
pop
adc
insl
adcb
lret
loope
push
jns
jecxz
es
js
mov
sahf
int
ss
sbbl
divl
addr16
lock
dec
setae
fldln2
std
call
mov
mov
and
push
push
in
into
jo
mov
arpl
sbb
jb
cmpsl
push
jo
jg
push
fistl
pushf
dec
std
lock
adc
mov
cmp
sbb
jno
xor
cmp
sbb
xchg
xor
push
mov
jno
pop
xor
add
out
lret
outsb
xchg
add
lods
ss
pop
stos
mov
push
jns
les
sub
call
jb
fisubl
jnp
mov
jo
mov
cs
fs
sbb
mov
daa
shl
sbb
sahf
mov
jne
in
sub
ret
sbb
out
cmpsb
popf
xor
lret
xchg
ret
in
repz
in
dec
pop
scas
cmp
mov
xchg
subb
lahf
xor
ret
aaa
lods
dec
sbb
fisubl
push
loope
cli
sub
out
mov
shll
std
push
dec
inc
inc
rorl
mov
pop
cmpsl
add
pop
mov
sbb
xor
fwait
or
pop
shll
sbb
cwtl
les
out
mov
gs
lret
stos
dec
xor
dec
add
add
mov
ss
stos
dec
mov
sub
jne
fdivs
stos
jbe
mov
fstps
frstor
xchg
sub
inc
sarl
in
add
sbb
dec
js
sbb
jg
push
pop
jg
sbb
inc
push
mov
sar
jb
mov
sbb
aam
ss
pop
sbb
mov
mov
dec
mov
xchg
dec
adc
test
aam
gs
in
sub
clc
push
insb
mul
mov
adc
dec
insl
add
xchg
pop
mov
jmp
cmpsl
pop
cmp
lock
fistps
xchg
pop
sub
das
stc
and
or
xor
insb
out
gs
dec
fucom
loopne
stos
ss
dec
xor
vxorpd
add
jl
lret
jge
loop
mov
dec
leave
mov
jmp
mov
mov
out
mov
fnstenv
cmp
pop
jbe
fcoml
in
mov
cmp
mov
sbb
adc
fidivrl
jmp
fcoml
push
mov
jl
jg
push
mov
sbb
push
fidivl
sarb
dec
ret
and
fiadds
mov
fmull
das
imul
prefetcht0
jecxz
ds
mov
icebp
out
mov
and
cmp
push
std
idivb
das
xor
sub
pop
test
mov
jmp
inc
stos
aas
addb
or
and
outsl
cmc
adc
shlb
pusha
push
in
and
cmc
leave
je
nop
xlat
jnp
out
dec
jecxz
jge
sbb
push
lret
popa
test
cmp
cmp
sub
repz
mov
or
add
mov
jne
jmp
mov
lret
fnstenv
mov
xchg
fdivrs
mov
pop
in
xchg
bound
fists
stos
add
adcl
dec
pusha
pop
add
or
imul
test
or
insl
add
aam
out
and
cmp
cmp
jno
ja
push
sub
pop
push
stc
cmp
or
push
sub
and
jl
mov
xchg
mov
lret
icebp
push
push
adc
sarl
and
stos
stos
dec
or
imul
test
je
loope
imul
test
ljmp
test
pop
dec
add
movsl
xor
and
lcall
xor
and
shll
in
outsl
mov
hlt
enter
pcmpeqd
jmp
repz
sub
decb
outsl
sub
sbb
lods
scas
insb
dec
xor
dec
shll
push
or
mov
sub
outsb
mov
push
dec
mov
dec
mov
lea
cltd
ss
lea
xchg
mov
sti
lahf
ja
mov
insb
cltd
push
add
ret
cmp
in
pop
add
xchg
dec
test
xor
push
cmpsb
aam
mov
ret
dec
push
jo
jae
add
or
icebp
jns
mov
call
jno
fisttpll
xor
inc
je
imul
mov
movsb
dec
inc
dec
leave
bound
jae
jge
pmuludq
test
or
shr
leave
into
mov
ja
int
fbld
push
cmp
adc
jbe
adc
push
and
lods
push
stc
test
fadds
dec
fists
xchg
push
insb
xchg
add
mov
adc
sub
xor
push
imul
mov
call
test
dec
int3
pop
xchg
stc
jle
lcall
push
or
push
push
cs
add
fmulp
xchg
sub
loop
in
fwait
outsl
lret
aas
incl
adc
dec
add
icebp
je
movsb
sbb
divb
cli
call
pop
mov
in
xor
jbe
andl
push
mov
and
dec
xchg
imul
lea
fistpll
xchg
out
xor
fdivrl
lcall
dec
dec
jne
fadds
lock
lock
out
sub
inc
adc
push
adc
les
icebp
movsb
jae
lret
notl
cwtl
out
scas
sub
push
cmp
fisubrs
cmp
insl
enter
loop
imul
repnz
xchg
insb
push
add
jecxz
mov
pop
out
dec
or
leave
pop
xchg
jae
xor
jle
rcll
test
xchg
outsl
mov
jns
mov
test
in
mov
inc
fsubs
and
stos
inc
jns
pusha
inc
call
rolb
push
fldcw
idivb
push
xor
pusha
outsl
out
ficompl
pop
pop
out
push
or
mov
mov
push
jne
inc
dec
subb
fdivrs
inc
ss
add
test
pop
jge
or
ss
pcmpgtw
bound
inc
pop
or
call
add
pop
leave
or
add
lahf
shrl
lods
jb
test
mov
aaa
dec
dec
mov
push
cmp
add
rep
pop
push
pop
das
xchg
adc
sub
das
insb
jg
jp
int3
dec
push
fsubs
xchg
loop
mov
clc
movsb
jbe
out
or
fwait
addr16
dec
ficomps
in
ret
mov
lea
adc
in
inc
cmc
cmp
int3
xchg
mov
pop
xorl
xor
sub
xchg
les
sbb
leave
jne
fwait
shlb
inc
push
xchg
fnstsw
rcll
adc
adc
xchg
sahf
pop
push
ret
xlat
scas
push
push
movsb
gs
outsl
or
pop
jne
fidivs
aad
xchg
ret
imul
xchg
daa
mov
stos
jbe
mov
add
pop
adc
sti
sub
cmc
mov
int
mov
cmp
outsb
cli
hlt
lret
xchg
jle
add
inc
mov
or
insl
xchg
push
std
test
gs
int3
mov
mov
mov
into
in
fists
xor
mov
pusha
mov
pushf
pop
test
ds
cmpsb
outsb
loope
pop
mov
iret
mov
dec
sbb
test
adc
mov
aaa
mov
add
lahf
call
mov
hlt
movsl
jns
adc
inc
inc
xchg
stos
cmpsb
sbb
jbe
cmpl
or
pop
mov
hlt
jmp
call
repz
push
xchg
shlb
dec
pushw
pop
int3
inc
jge
pop
lcall
lock
mov
push
xchg
cmp
je
out
push
xchg
cmp
jecxz
roll
or
icebp
jge
fs
test
push
mov
sbb
aam
push
pop
mov
lret
lods
icebp
cmp
mov
lods
push
dec
stos
scas
jno
pop
icebp
mov
cmpsb
cmp
negl
ret
cltd
sbb
out
cld
popf
or
add
mov
xchg
in
sub
lea
and
gs
lods
nopl
in
nop
movsb
subb
pusha
push
pop
imul
add
ljmp
fmulp
push
mov
insl
pop
into
mov
rorb
leave
andl
dec
cmp
lcall
push
mov
mov
enter
sti
in
mov
in
sub
mov
loop
roll
push
pushf
popa
rcrl
cld
in
or
cmp
sub
fldt
adc
mov
popf
mov
mov
lock
in
jnp
in
stos
lods
jo
xlat
stc
sti
sub
mov
adc
pop
jmp
sub
jecxz
shlb
jbe
push
cmp
pop
punpckldq
add
xchg
in
fildl
mov
push
subb
rcr
into
inc
test
sarb
insb
imul
addr16
jmp
xchg
je
jbe
fstpl
xchg
push
orl
inc
fs
dec
mov
in
mov
xchg
dec
adc
pop
pushf
mov
or
nop
jecxz
mov
es
int3
inc
sbb
fst
outsl
sbb
inc
pop
sbbl
lods
out
sbb
in
call
out
scas
inc
push
mov
xchg
ja
aas
cmp
out
inc
gs
push
lods
mov
add
pop
outsl
gs
jge
lds
flds
int3
out
xchg
inc
push
cltd
jo
xchg
and
inc
ljmp
pop
add
inc
testb
jge
enter
ja
popa
lods
mov
movsl
popa
adc
or
push
popa
ljmp
and
les
popf
adc
lods
cmpsb
daa
mov
dec
outsl
xchg
or
ljmp
cmp
dec
dec
loope
jbe
test
jecxz
in
in
mov
mov
xchg
loop
adc
pop
jns
hlt
rclb
or
data16
addb
lahf
xchg
adc
je
dec
mov
leave
adc
js
mov
inc
add
mov
dec
sbb
fdivrs
xchg
stc
or
insl
lahf
and
or
fsubrp
pop
dec
and
insb
fcomps
xsavec
std
cmp
pop
sysret
and
mov
into
repz
movsb
adc
insb
push
fimuls
or
push
and
stos
je
mov
jno
test
insb
jmp
cmp
mov
sti
jmp
push
xor
aad
sahf
das
pop
lods
sub
jno
fsubs
into
sub
sbb
pop
aaa
jge
orl
mov
movsl
mov
lret
clc
out
jmp
lret
dec
hlt
sub
sbb
add
sti
stos
mov
repz
pushf
fstpl
jl
mov
insl
jle
mov
test
ljmp
lcall
and
outsb
xchg
shll
aas
mov
lret
mov
sub
or
inc
xor
xlat
jb
pusha
add
jmp
pop
pop
and
or
insl
call
sbb
pop
stos
testb
aad
out
pop
dec
add
loop
xor
xor
lds
mov
mov
rclb
push
inc
xor
jns
mov
sahf
gs
and
sub
dec
mov
push
adc
adcb
and
sub
cmp
adc
inc
lcall
aaa
jle
test
xchg
xchg
mov
mov
pushl
stos
jmp
std
push
add
push
xchg
cltd
pop
inc
inc
jb
lret
xchg
es
cwtl
inc
dec
jmp
add
sarl
lods
mov
into
dec
inc
pop
int
sbb
mov
call
adcl
push
push
decb
loopne
sub
cmp
xor
sub
pop
fcmovnbe
test
xor
fs
fistps
fists
xchg
bound
cmpsb
test
cs
mov
cli
adc
fdivrl
pop
outsl
pushf
rcrl
pop
cmp
mov
mov
enter
mov
cwtl
pop
mov
adc
xor
test
cltd
fldenv
sub
dec
dec
mov
pushf
jge
inc
aas
mov
mov
outsb
cmp
stos
cmp
push
and
add
ljmp
imul
mov
inc
in
pop
shl
pop
nop
setns
push
clc
cld
lds
pop
mov
xchg
enter
dec
aaa
and
mov
cmpsb
arpl
stos
shlb
sbb
out
pop
pop
outsl
xor
cmp
ret
lcall
inc
in
pop
sti
nop
out
or
cmp
ret
into
inc
mov
shll
lret
in
mov
inc
mov
and
and
sti
xchg
fcoml
out
jnp
push
sbb
lret
lahf
lcall
sahf
mov
jns
xor
pop
icebp
mov
dec
testl
sbb
push
mov
xchg
int3
stos
and
push
test
dec
xor
xor
rcll
hlt
push
pop
in
mov
test
jp
sub
nop
or
sbb
sub
idivb
mov
dec
jge
mov
mov
repnz
out
fdivr
push
jmp
dec
sub
lahf
adc
pop
movsb
int
pop
cmp
shlb
test
sahf
push
adc
sti
push
mov
xor
addr16
div
insl
fbld
cmpsl
addl
cmp
out
ret
popf
or
lret
out
shrl
in
data16
inc
cmp
jecxz
push
fmulp
cmpsb
aaa
dec
xor
cli
xchg
rclb
popa
cmp
and
movsl
mov
inc
lock
cli
inc
lret
loop
dec
cs
pushf
and
xorl
stos
jp
imul
pop
jnp
pop
cld
in
mov
lock
lds
stc
adc
mov
and
push
stc
insb
inc
or
in
pop
outsb
pop
push
inc
enter
sub
insl
cmp
imul
fistl
jg
cs
leave
mov
adc
cmc
xor
cld
mov
leave
scas
or
xor
mov
icebp
out
inc
mov
jg
in
add
lret
push
mov
lock
sbb
jecxz
and
int3
movsl
mov
negb
mov
jb
cmpsl
stos
mov
mov
mov
arpl
dec
add
xchg
outsb
or
lcall
mov
sbb
inc
scas
fistpl
inc
jp
adc
and
push
js
mov
fwait
mov
push
mov
or
sti
xchg
mov
pop
pop
mov
mov
aad
sbb
out
mov
cmp
lods
mov
sbb
push
adc
shl
xorl
scas
cmp
pop
jns
and
mov
adc
jo
mov
fucomip
lcall
pop
pop
cmp
dec
inc
adc
into
gs
fs
in
outsl
aad
jl
dec
mov
cmp
das
xor
jae
mov
outsl
hlt
aam
shr
stos
push
xor
jmp
add
push
imul
shlb
mov
cmc
aad
test
test
push
mov
arpl
mov
xorl
loope
xchg
jmp
cmp
adc
int3
mov
push
jmp
mov
mov
test
inc
jle
cs
sub
scas
ja
pop
emms
mov
jg
cmpsb
sbb
mov
add
push
roll
xor
mov
shrl
mov
scas
jecxz
aam
mov
dec
cmp
je
mov
rclb
or
adc
iret
jg
pop
mov
aas
mov
cmp
inc
pushw
inc
fxch
test
jno
sbb
shr
mov
lock
fs
xchg
jg
mov
lods
rol
outsb
mov
xlat
jne
fdivrl
into
add
jle
pop
cmp
nop
cltd
push
jg
cmp
mov
cmp
dec
add
or
jnp
sbb
test
sbb
rcrb
icebp
cli
add
xchg
out
pop
ret
mov
pop
mov
sub
push
lcall
mov
add
add
insl
daa
addr16
or
iret
and
adc
test
in
jle
enter
test
loope
mov
adc
iret
stos
xchg
arpl
fnstenv
dec
and
jne
sarl
ror
arpl
jmp
push
push
push
pop
js
ja
xlat
ret
sbb
cmp
in
mov
pop
adc
inc
inc
sub
mov
dec
mov
popf
hlt
add
and
popf
das
shl
xchg
call
xchg
je
pushf
jmp
and
xchg
dec
out
fs
and
mov
iret
pop
ljmp
sbb
out
js
jnp
jp
and
in
sub
shlb
pop
test
jge
mov
movsl
int3
fmull
call
sub
in
aaa
and
mov
xchg
shlb
cs
fcomps
adc
mov
mov
mov
sub
adc
push
pop
testb
sbb
fcomp
aas
jae
adc
cmpsl
nop
mov
pop
arpl
xchg
mov
sbb
push
arpl
dec
cmp
ficoml
mov
and
sub
jmp
mov
iret
fwait
jg
fwait
mov
arpl
roll
mov
pop
cmp
xor
gs
mov
punpckhwd
adc
daa
mov
jp
pop
mov
inc
adc
dec
mov
xor
imul
push
push
inc
out
icebp
mov
jecxz
xchg
clc
adc
jecxz
xchg
pop
and
cmc
jnp
add
mov
stos
pop
popa
dec
pop
loope
mov
xchg
dec
or
lds
mov
outsb
popa
inc
mov
inc
or
inc
sbb
icebp
sarl
enter
jnp
and
add
out
insb
dec
shl
push
loop
ds
es
bound
xchg
pop
ds
cmp
or
loopne
sub
xchg
xorl
lods
leave
mov
imul
dec
adc
mov
xchg
fsubl
pop
mov
xchg
adc
clc
outsl
pop
sbb
pop
subl
addr16
rcrl
dec
inc
dec
adc
cmc
or
fbld
stos
int
dec
jmp
cmpsb
pusha
push
mov
mov
push
loop
scas
lcall
out
lret
xchg
sub
outsb
popa
and
inc
shlb
stc
sbb
dec
mov
adc
ljmp
pop
roll
outsl
les
jae
and
shrb
mov
inc
pop
push
push
xor
mov
nop
in
pushf
inc
sub
or
mov
jmp
dec
dec
jmp
push
adc
rolb
cld
loope
jmp
arpl
push
cmp
dec
push
adc
pop
xlat
cmpsl
lcall
imul
and
pop
enter
std
stc
push
cmp
sub
jnp
xor
cmp
fistps
hlt
jg
mov
clc
pop
pushf
mov
scas
inc
mov
ret
arpl
cmpsb
ja
out
and
daa
leave
push
pop
inc
sbb
or
pop
cmc
cltd
stos
mov
mov
jg
orl
rcr
dec
daa
aaa
lods
pop
jo
pushf
xor
pop
addr16
decb
iret
dec
mov
jp
repnz
pop
adc
arpl
sub
xchg
std
jbe
iret
shrl
mov
mov
dec
aam
imul
inc
xor
push
insb
push
scas
inc
lret
sbb
das
lock
loope
sbbb
xchg
test
jp
stc
out
dec
pushf
enter
adc
mull
test
add
xchg
cmp
sub
rorl
cmp
or
mov
out
aaa
push
dec
lock
ficoml
or
mov
data16
mov
inc
jnp
push
jo
icebp
mov
jl
in
scas
pop
dec
xchg
das
mov
filds
in
hlt
imul
or
jg
or
jmp
mulw
dec
das
fimull
ret
test
cwtl
push
dec
outsb
scas
in
test
dec
pop
insb
mov
dec
fcomp
aas
inc
add
mov
push
and
lret
and
sarl
or
fidivrs
insl
rolb
push
popf
xor
xchg
pushf
icebp
ror
orl
arpl
in
mov
sub
pop
in
fyl2x
mov
adc
les
mov
push
cmp
fstl
mov
popa
insl
repnz
mov
in
mov
outsb
xor
cmp
scas
sbb
clc
ss
cmp
cmp
adc
or
jecxz
push
fsts
cmpsl
inc
pop
fwait
add
or
add
jle
xchg
std
cmp
lock
repz
lret
inc
jmp
pop
outsb
pop
dec
xor
int3
in
or
in
ret
fwait
cmp
add
xchg
test
push
popa
lret
inc
and
sahf
push
cmp
add
cltd
inc
cmp
stc
out
mov
sub
inc
imul
push
pop
add
and
pop
jle
mov
jl
into
pop
cmp
iret
and
xor
dec
sub
in
xchg
jl
pop
cmp
mov
in
cmp
mov
lahf
das
mov
push
data16
aaa
scas
dec
repz
je
ror
xchg
clc
out
adc
outsb
dec
outsl
jg
cmpsb
ss
loop
pop
in
stos
bound
or
aad
xchg
push
jae
imulb
pop
ss
adc
ret
jo
dec
lret
add
ss
fs
mov
jbe
stc
ljmp
cmp
jb
rcll
popf
jae
int
cmp
fwait
pop
out
dec
mov
cmp
push
movsl
xor
mov
push
xchg
shll
mov
push
push
test
popl
cli
push
cmp
iret
xchg
push
je
xchg
jo
cmc
jns
mulb
iret
icebp
adc
fisubrs
rcrb
adc
push
dec
mov
ljmp
sub
int3
pop
nop
bound
pop
adc
or
shlb
xchg
les
aad
push
mov
out
cmp
cmp
test
inc
push
hlt
inc
movsb
je
push
jecxz
lds
lahf
dec
mov
dec
or
push
cmp
jne
iret
aaa
jnp
cmp
push
xchg
jmp
imull
arpl
push
bound
jecxz
movsl
push
iret
add
sti
movsl
mov
adc
push
bound
jle
xchg
pop
js
stc
in
repnz
mov
test
mov
push
loope
xor
push
fwait
test
test
decb
sahf
or
mov
lahf
add
cltd
push
push
cmp
mov
push
and
add
and
sub
insl
jae
jo
test
leave
sbb
rorb
movl
jne
sbb
push
dec
test
jmp
repz
adc
jo
lods
cmp
and
push
iret
or
mov
mov
test
mov
adc
stos
xchg
xchg
je
push
add
cmp
inc
mov
fnop
xor
push
pusha
cmp
iret
mov
jl
ljmp
pushf
xchg
jg
arpl
inc
loopne
les
sbb
inc
inc
stos
jnp
jae
cmp
jmp
xchg
sub
in
cld
lock
into
inc
stos
mov
jne
cmp
or
cwtl
sbb
ficomps
sbbl
pop
out
cwtl
jo
test
xchg
push
mov
sub
and
incl
int3
imul
sarl
enter
in
jb
fidivrl
pop
out
lods
mov
push
pushf
ljmp
int3
inc
ret
nopl
test
jnp
xchg
add
dec
add
int3
loop
js
xor
in
add
scas
ss
addr16
clc
cmp
imul
mov
ret
jo
mov
mov
pop
inc
push
mov
sbb
jmp
lret
cmp
ja
shrl
and
mov
add
cmp
arpl
in
push
fwait
loop
sub
inc
aas
orb
sbbb
cmp
mov
inc
sbb
sti
ds
xor
push
enter
leave
xchg
loopne
mov
inc
pop
sub
pop
xchg
std
xor
jmp
les
repz
inc
das
push
xchg
push
xchg
mov
es
sub
jg,pt
adc
mov
or
dec
pusha
sub
xchg
cs
mov
dec
js
or
nop
mov
ja
ja
addr16
test
cmp
sub
push
icebp
sub
mov
mov
test
inc
pop
cmpsl
shl
jnp
add
jo
or
add
and
loope
decb
negb
cltd
push
out
inc
xor
scas
out
ja
sbb
lds
sub
push
and
into
or
fimuls
lret
push
pop
jb
arpl
insl
cmp
xchg
imul
outsl
sub
mov
sbb
xor
xor
aad
inc
and
pop
sub
inc
and
or
xorl
roll
inc
fstpl
popa
sbb
mov
jnp
inc
mov
fbstp
jle
ret
mov
insb
dec
add
andb
cmc
repnz
ffreep
adc
mov
flds
out
cmp
mov
mov
adc
jns
lret
js
sbb
pop
daa
into
inc
mov
testl
jecxz
mov
mov
mov
pop
dec
int
fs
and
mov
inc
leave
adc
jnp
sbb
inc
sbb
push
int3
out
adc
in
mov
repz
mov
xchg
and
in
add
sbb
cmp
int3
jg
push
add
shlb
sub
pop
es
dec
jl
loop
inc
pop
jb
aaa
stos
inc
ds
int3
insl
mov
xchg
fdivrs
push
or
jge
pop
sbbl
push
pop
dec
add
or
adc
adc
or
xchg
cmpsl
out
xchg
dec
ljmp
xor
jnp
movsl
lods
jo
adc
pop
push
out
cltd
mov
imul
popa
scas
push
push
sbb
data16
sti
ds
cmpsb
xlat
mov
sub
mov
das
mov
jp
fwait
dec
xor
movsl
sbb
outsl
add
ljmp
jo
mov
bound
in
jle
adc
push
sub
mov
aam
inc
mov
cmp
dec
fdivs
enter
repnz
sub
inc
mov
fs
pop
inc
arpl
sbb
jecxz
pop
mov
adc
lea
xchg
pop
lods
out
mov
ljmp
sbb
lock
clc
fcmovne
test
xor
rclb
push
inc
jp
add
lods
xor
and
fwait
loope
mov
jp
arpl
js
outsb
push
push
xchg
ds
or
repnz
jb
mov
push
scas
enter
cmpsl
xchg
das
or
sbb
push
pop
mov
cwtl
push
cmp
xor
mov
lods
xor
jnp
sub
mov
jne
xchg
xor
sarl
adc
inc
pop
fimull
call
cmp
aam
loopne
movsb
jno
and
lds
lds
ror
scas
into
mov
es
xor
mov
mov
cmpl
in
aas
cwtl
icebp
push
ljmp
add
xlat
mov
decb
cwtl
jge
loope
mov
cmc
cmp
sarb
mov
pushf
sub
mov
inc
ljmp
mov
add
dec
and
add
mov
call
outsb
data16
mov
dec
pushf
scas
in
jmp
cmp
inc
inc
repz
jge
xor
mov
mov
insl
push
cmp
stc
das
xor
adc
xchg
daa
adc
insb
lea
out
jo
or
in
cmp
dec
movsb
dec
aam
fdivl
add
cmpsb
mov
jg
inc
lods
sub
into
dec
in
pusha
push
jae
cmp
xor
sbb
jne
push
iret
xchg
mov
movb
cmpsl
repz
sarb
add
adc
push
rcrl
lods
xor
rcrb
gs
sub
lods
or
cmc
scas
ficoml
dec
orl
jnp,pt
mov
mov
dec
mov
mov
jg
add
push
sub
sub
push
fdivrl
mov
inc
stos
or
ss
push
call
add
sbb
mov
mov
and
pop
sbb
int3
test
jno
mov
and
outsb
shr
pop
dec
int
and
shll
lods
xchg
mov
push
mov
insl
loope
clc
jle
cmp
add
push
and
xchg
cwtl
jne
iret
into
hlt
xchg
dec
push
and
fmul
mov
add
dec
jle
insb
mov
loop
push
adc
pop
xor
hlt
push
push
cmp
xchg
test
jmp
mov
aad
repz
xor
fsubl
std
xor
iret
ljmp
jnp
arpl
push
xor
es
jp
js
mov
in
xchg
popl
rorl
jae
imul
rcrl
arpl
push
filds
add
xor
out
stos
mov
fisubs
mov
sub
out
mov
mov
insb
xchg
lods
sbb
shlb
and
add
inc
jo
dec
leave
sub
jbe
les
ret
lods
mov
dec
enter
and
xchg
push
hlt
xor
in
mov
jnp
stos
jp
pop
in
dec
ljmp
movsl
lahf
stos
push
jne
les
sub
and
push
mov
sub
test
in
push
jge
aaa
xor
mov
xor
sub
outsl
mov
or
add
popf
and
xchg
rcr
insl
xchg
shlb
jns
pop
add
cld
cld
fmuls
insl
inc
mov
and
jge
pusha
cmpsb
js
add
in
mov
fisttps
dec
add
fdivrp
fwait
sub
aaa
adc
lcall
mov
add
pop
push
push
in
mov
test
mov
ljmp
sub
insl
mov
mov
mov
clc
and
ret
add
jge
mov
sahf
rcll
daa
jne
or
pop
stos
cltd
push
sub
iret
std
pushf
xor
fildl
ss
cmovno
xchg
xchg
mov
jne
or
cwtl
xchg
sub
and
orl
stos
jle
sbb
addr16
cwtl
ret
addb
nop
xor
sbb
pop
xor
out
pop
pusha
sub
testb
gs
dec
test
mov
popf
dec
and
push
test
data16
sbb
sub
stc
sbb
xchg
xchg
and
pushf
push
sub
outsb
and
cltd
xor
bound
push
dec
sbb
std
mov
lcall
mov
rorb
push
js
push
add
and
sbb
insb
sbb
xchg
mov
cltd
or
daa
into
xchg
mov
cltd
dec
loopne
lcall
fisubl
ds
inc
and
movsb
jl
mov
xchg
add
ror
jae
and
clc
out
daa
cmp
dec
cmp
testl
mov
push
jg
push
loope
rcrl
in
icebp
imul
mov
in
leave
inc
loop
mov
adc
shrl
test
and
enter
dec
pusha
cmp
loop
sub
xchg
nop
xchg
cmp
in
into
fcomi
xchg
jecxz
inc
mov
insb
xor
mov
mov
lahf
mov
jmp
or
sbb
popf
xor
mov
testl
and
outsb
and
jp
daa
fcomps
cmpsb
xor
adc
push
xchg
cmpl
xor
test
in
push
jge
shl
fs
mov
inc
dec
shlb
lcall
mov
or
loopne
into
fists
stos
enter
into
sbb
in
mov
leave
fstl
fwait
bnd
jg
mov
mov
add
xchg
inc
dec
xor
aaa
rdmsr
clc
or
sti
popf
push
push
cltd
mov
psrad
call
loope
icebp
push
xchg
or
es
cltd
jl
inc
stos
stc
xchg
and
cmpsb
pop
mov
cmp
xor
inc
inc
sbb
lgs
push
popf
movsb
lahf
jp
movsl
cld
and
pop
sub
sub
fldenv
mov
dec
cld
test
stos
mov
ljmp
mov
repnz
sbbl
sub
xchg
aad
dec
pop
dec
loopne
and
jecxz
pop
mov
je
pop
or
dec
jno
lcall
adc
mov
sub
xor
popf
cmp
dec
adc
add
mov
dec
leave
fwait
outsl
xlat
mov
and
aas
ret
adc
dec
cmp
or
test
popa
cwtl
stc
imul
pop
pop
fcomps
nop
cld
outsb
out
push
cld
xor
push
xchg
call
mov
hlt
mov
push
jp
test
sub
jno
fistl
or
popa
add
jno
sub
xchg
orb
sbb
icebp
je
lods
xchg
mov
std
jns
popa
dec
in
cltd
lods
int
mov
clc
sbb
dec
cli
rorl
fisttps
aad
cmp
fisubrs
ss
mov
mov
adc
jl
adc
and
std
stos
mov
rcll
fisubrs
insb
adc
bound
stc
cmp
addb
mov
jne
or
mov
fildl
mov
push
ss
aad
push
jecxz
in
and
aaa
xchg
push
fwait
movsl
dec
xchg
inc
sbb
mov
inc
inc
jbe
stos
jbe
sub
in
and
outsb
jmp
stos
inc
fwait
jb
in
mov
in
adc
push
mov
xchg
jg
and
xor
sbb
mov
or
pop
je
cmpsb
adc
cwtl
lock
cli
sbb
jae
jmp
test
and
sahf
lock
xchg
out
scas
or
mov
pop
iret
in
or
or
fcoms
popa
filds
mov
pop
stc
shrb
cmp
push
rorb
pop
mov
setg
ds
fdiv
jbe
sti
cmp
shrl
in
and
dec
adc
sbb
mov
mov
pop
and
xchg
pop
mov
call
mov
add
movsl
sub
imul
or
and
testb
fs
xor
sub
jo
dec
sub
mov
adc
jl
mov
nop
mov
out
inc
fists
jmp
lret
xchg
fcmove
push
pop
push
push
add
or
outsl
or
adcb
icebp
js
jge
movsl
pop
popf
push
inc
mov
mov
cmpsl
scas
push
pop
adc
mov
lret
addr16
sub
cmpsl
sti
cs
mov
aad
iret
fsubrs
and
dec
cmp
mov
mov
inc
call
das
ljmp
push
jle
pushf
or
je
push
xor
pushf
cmpb
sub
add
clc
push
movsl
out
call
xor
repz
mov
popf
test
xchg
pushf
dec
loopne
mov
fsub
inc
fwait
cld
adc
jp
mov
mov
mov
push
int3
pusha
jmp
push
mov
popa
ljmp
jg
and
lret
ficompl
fwait
dec
sub
jmp
pushl
or
mov
popf
in
adc
xchg
adc
imul
adc
mov
push
aam
xor
and
aaa
movsb
push
pop
xchg
movsb
ljmp
xchg
xor
test
out
fldcw
aam
out
ljmp
insb
clc
addl
cli
insl
sahf
xor
pusha
add
leave
data16
fsubl
cli
mov
fdivl
cmpsb
mov
jmp
adc
popf
jno
loopne
loopne
rorl
fimuls
xchg
jb
repz
popl
xor
jno
mov
xchg
das
cmp
add
push
mov
dec
repz
gs
push
repz
and
pop
lcall
nop
and
jle
push
adc
xor
mov
mov
dec
insb
mull
push
pushf
jg
sub
call
or
add
sub
loopne
mov
iret
std
mov
sbb
cmp
mov
movsb
lods
sub
mov
xor
jmp
or
add
dec
pop
xchg
ficompl
or
jno
lods
aas
imul
inc
stos
lods
loop
out
jae
and
add
inc
lcall
mov
mov
mov
sarl
lcall
out
dec
clc
xchg
test
lods
add
mov
cmovb
inc
int3
in
popf
mov
pop
xor
stc
shrl
sbb
sub
and
rcr
push
subb
shll
dec
icebp
xchg
out
rsqrtps
stc
pop
cmp
mov
pop
imull
fwait
mov
icebp
adc
dec
test
add
cmp
leave
or
jbe
mov
cmp
fs
out
xchg
or
pop
pop
add
mov
rorb
mov
fwait
sub
shr
sub
imul
xor
dec
dec
loop
dec
clc
mov
test
mov
inc
fwait
gs
xor
or
and
clc
in
das
stc
add
stc
stos
xchg
push
pop
fsubs
mov
inc
adc
xchg
adc
inc
test
adc
jnp
std
hlt
push
call
xor
mov
mov
lret
cmpsb
mov
inc
or
push
sarb
mov
mov
or
push
into
loope
sub
orl
aad
mov
lods
and
test
jnp
xor
ja
dec
xor
in
repz
mov
enter
cmp
sar
lret
sub
pop
sub
xor
add
xchg
mov
push
adc
leave
xchg
or
add
loop
jecxz
add
stos
jno
mov
or
lret
cli
decl
mov
sar
nop
ss
cli
sbb
es
inc
sub
add
push
mov
faddl
mov
push
imul
jp
movsl
sub
leave
les
js
daa
movsl
add
mov
sbb
mov
into
dec
in
fs
add
jge
loopne
and
sub
cltd
push
cs
jbe
xchg
pop
mov
mov
aas
push
es
dec
cli
xchg
pop
mov
jno
pushf
mov
push
out
ljmp
imul
adc
lret
push
push
push
ds
int3
xchg
sbb
adc
cmp
push
xchg
call
rol
jp
add
cmp
movsb
dec
xlat
insb
stos
insl
filds
in
pop
push
cmpsb
and
push
cmp
and
hlt
mov
ljmp
icebp
push
leave
xlat
clc
jp
jno
add
add
movb
jbe
push
mov
or
rol
int3
rorb
das
rcrl
pop
out
shl
bound
dec
rcll
and
push
dec
addl
fisubs
addr16
scas
or
adc
cli
inc
nop
jo
pushf
add
cmpl
xor
mov
fst
push
pop
jno
xor
push
int3
mov
lcall
pop
adc
cmpsl
or
and
inc
test
xchg
lahf
xchg
sbb
negb
lock
cmp
sahf
cmp
jg
add
scas
insl
fbld
pop
xor
cmp
xor
divb
negb
sahf
inc
sbb
movsb
adc
push
lods
arpl
inc
dec
dec
loope
icebp
xchg
xchg
stos
mov
ss
out
push
cmpsl
push
call
call
ret
ficoms
sub
rclb
fldt
test
fs
push
mov
loope
adc
repnz
xor
jb
sub
sub
les
aaa
dec
xchg
fildll
or
inc
in
sbb
mov
das
test
mov
sarl
adc
adc
lcall
pushf
out
sbb
pop
lret
sub
cmp
jmp
sbb
mov
and
cwtl
fcoms
inc
adc
sahf
shrl
rcl
orb
xchg
loope
xchg
mov
dec
lahf
mov
mov
or
in
rorb
dec
fildll
mov
ja
mov
sub
aad
xor
mov
push
out
fsubrl
cmp
ror
in
test
test
adc
mov
aas
inc
repnz
mov
jl
les
mov
mov
sub
push
and
mov
ljmp
je
adcb
lret
std
ret
rorb
pop
mov
jb
rcr
mov
cmp
add
hlt
insb
or
inc
pop
pop
lcall
mov
scas
sbb
addr16
rcrb
cltd
and
nop
add
outsb
add
pop
fs
xchg
outsl
in
dec
lcall
push
ffreep
test
insb
jae
insb
popa
cwtl
mov
aaa
cmp
xchg
std
int3
xchg
shll
mov
lcall
cmp
in
daa
test
in
inc
push
loopne
ror
arpl
popa
shlb
bound
daa
jmp
xchg
xchg
mov
lahf
adc
mov
addr16
cld
lea
lret
mov
xchg
test
and
stc
mov
into
outsb
lods
sti
cmpsb
decb
and
jle
adc
pusha
adc
cld
push
sub
push
xlat
cmp
aas
adc
jmp
mov
out
mov
and
mov
and
in
lods
inc
xor
inc
lods
mov
sub
fsubr
pop
pop
mov
mov
xchg
pop
mov
lcall
movsl
add
enter
in
push
xchg
and
sahf
jp
out
pop
fwait
shll
clc
xchg
sub
in
add
ja
movsl
callw
subb
mov
or
sub
pop
push
jne
scas
dec
imul
iret
arpl
daa
pop
jecxz
sub
fstps
add
test
jns
lods
andl
fwait
loopne
in
xchg
or
test
shlb
jp
xchg
stc
push
shrl
mov
int3
ss
mov
or
fnstsw
dec
or
movsl
mov
jmp
add
pop
adc
add
imul
lods
mov
dec
out
mov
cmp
cmp
rcrb
adc
call
imul
jg
push
mov
cmc
sbb
fs
mov
add
test
sub
pop
jecxz
sub
scas
cltd
cs
push
jne
or
data16
aam
cmp
mov
pop
mov
cmp
cld
jns
mov
jns
adc
jmp
aaa
inc
inc
ss
pop
leave
push
adc
shl
adcb
outsb
push
lods
inc
outsl
sahf
jecxz
sbb
push
or
sahf
inc
popf
outsb
and
jo
aas
loope
pop
test
aas
cld
repz
mov
mov
adc
dec
repz
dec
add
orb
add
scas
into
int
es
xor
sar
pop
xchg
pushf
pop
xor
inc
xor
and
sahf
mov
or
or
adc
jns
js
testb
scas
das
mov
and
outsb
test
dec
repz
stos
xorl
dec
mov
xchg
xor
dec
mov
inc
inc
adc
rcrl
fwait
mov
leave
lods
addl
pop
inc
cld
frstor
xchg
enter
dec
lods
push
push
les
and
bound
loop
sub
scas
xor
sahf
test
lcall
aaa
out
sub
xor
inc
popa
mov
xorl
jg
dec
clc
sbb
fisttps
adc
mov
jbe
ret
xchg
lret
icebp
mov
inc
rorl
jp
js
sbb
pop
rolb
js
inc
insl
xchg
jl
call
xor
inc
pop
xor
dec
push
mov
jno
cmp
and
icebp
mov
mov
cmc
int
insl
test
pop
pop
sarb
test
xor
cltd
or
ficompl
sub
das
ffreep
mov
jo
insl
imul
stos
test
xchg
cmp
stos
sub
fisubl
inc
jno
add
xchg
push
cmc
and
inc
es
dec
out
push
jg
ret
or
xorl
dec
sbb
add
cltd
xlat
push
pop
mov
xchg
daa
cmp
es
jnp
lods
dec
add
arpl
pop
cmp
inc
bswap
arpl
and
and
loope
aas
cmp
popa
or
das
inc
xor
cwtl
je
pushf
sti
xchg
mov
mov
jnp
cli
lods
push
dec
jbe,pn
mov
fmull
xchg
jecxz
scas
pop
inc
sub
push
es
and
mov
cwtl
pop
xchg
repnz
stc
cld
lods
lahf
mov
xchg
add
sti
movsb
lods
fsubrl
push
add
xchg
push
cltd
out
out
pushf
cmp
jnp
sbb
sub
mov
push
push
sub
cmc
xchg
push
dec
dec
outsl
sbb
dec
inc
lret
sbb
lea
cmp
mov
sbb
ret
cmpl
push
dec
pop
lds
lods
mov
pop
sbb
fadds
push
pop
sbb
popf
mov
fstpt
shl
jo
xchg
xchg
jae
aad
out
insb
push
xchg
pop
ret
sahf
nop
mov
int3
stos
dec
das
loopne
sti
addr16
xchg
in
imul
jo
pop
out
sahf
loopne
push
arpl
pop
or
pop
bound
in
pushf
sbb
mov
push
data16
pusha
cld
push
test
jnp
gs
push
subb
pushf
aad
imul
mov
mov
stos
imul
dec
adcl
sub
sti
sahf
imul
movl
mov
inc
xchg
fisttps
push
sub
and
cmp
rol
cmp
xchg
add
nop
cmpsl
pop
loop
jo
arpl
aad
shl
dec
lods
clc
ret
cmp
mov
sub
nop
sbb
sub
xchg
mov
mov
aam
inc
andb
scas
pop
jp
dec
fbstp
jb
js
fwait
mov
inc
pop
mov
daa
sub
and
or
xor
rcr
js
shr
cmpsl
push
sub
ja
xchg
cltd
xor
cli
dec
pushf
push
add
repz
shlb
les
jne
or
cmp
xor
testb
fwait
inc
stos
test
jge
je
xchg
sub
xchg
add
inc
pop
dec
movsl
xor
sbb
inc
push
add
lock
shll
popf
int3
aaa
inc
mov
fldt
outsb
add
jmp
aaa
orb
mov
jb
sub
mov
lcall
ss
xlat
dec
jbe
rcrb
fdivr
pop
push
xchg
test
pop
loope
adc
cmp
adc
jle
loope
mov
jno
les
sbb
mov
fcomip
lock
lods
scas
faddl
stos
pop
pop
dec
lods
sub
or
in
and
movsl
push
dec
fcoms
jns
fsubrs
in
pop
enter
dec
jbe
xlat
xlat
pushf
pop
mov
daa
and
mov
fiaddl
mov
cwtl
test
mov
jmp
aad
jge
je
pop
or
jns
and
int3
fidivs
stos
pop
adc
jno
lods
jmp
rcr
push
push
fsubrs
xchg
icebp
test
pop
jmp
pop
icebp
pop
push
mov
roll
ljmp
pop
bound
fprem1
xchg
push
sbb
lock
xchg
lds
pop
inc
pop
xor
mov
mov
jp
push
jp
sbb
lcall
fwait
loope
mov
mov
sub
or
dec
pop
ret
and
jb
btr
imul
xchg
or
inc
iret
pop
xor
adc
cmpsb
mov
push
or
and
xor
xor
adc
and
fsubrs
inc
mov
mov
int3
push
fwait
arpl
pop
aas
dec
cmp
inc
fwait
dec
addr16
pop
dec
mov
xor
or
dec
mov
mov
mov
xchg
mov
sahf
ja
shll
imul
out
xchg
iret
loop
lds
add
xlat
push
push
pop
movb
adc
mov
and
fs
dec
add
ds
loope
gs
neg
push
jno
rclb
loopne
js
arpl
andb
push
into
orb
add
sti
jp
jae
cltd
adc
pop
pusha
inc
mov
push
xor
jnp
jecxz
jne
or
add
addr16
mov
mov
push
and
lret
sbb
jne
fdivrs
ss
pop
repnz
shrb
inc
adc
and
cmpb
or
lea
addr16
pusha
rcll
roll
push
pushf
shl
ret
arpl
jg
shr
aaa
xchg
nop
bound
add
cmp
inc
cmp
test
mov
and
lret
push
pop
lods
in
imul
jnp
dec
ret
int3
jbe
in
mov
in
jge
unpckhps
loop
inc
pop
inc
pop
sbb
shll
pop
sbb
dec
outsb
adc
sbb
pop
jae
xor
mov
fsubrl
xor
insb
jne
sbb
lret
xchg
jge
inc
orb
dec
mov
gs
imul
cwtl
pop
mov
xor
sti
sub
or
jne
lods
jns
mov
push
add
iret
sti
sbb
mov
ret
lock
je
test
lods
mov
mov
adc
and
lods
ljmp
sbb
mov
pushl
push
stos
pop
cmp
adc
rorl
insl
xor
out
add
out
and
or
pop
aam
mov
push
inc
or
jb
sbb
mov
mov
stos
arpl
fnstsw
ret
out
out
lret
push
pop
mov
sub
into
imul
sahf
jg
rorb
cmp
jp
xchg
aad
or
mov
adc
scas
pop
icebp
lds
lock
jb
xchg
jge
pop
cmp
stc
jnp
push
out
neg
jne
xchg
xlat
push
mov
in
xor
inc
pop
stc
sbb
xchg
adc
outsb
stc
inc
scas
mov
xchg
mov
mov
or
adc
sbb
add
pushf
stos
lods
jo
adc
add
or
jl,pn
cmp
jns
andb
daa
sbb
into
and
push
and
rcrl
pusha
mov
inc
addl
mov
xchg
insb
insb
pop
getsec
dec
sub
pop
scas
mov
adc
inc
jp
into
xor
adc
mov
adc
ja
bound
push
lods
scas
je
mov
push
lret
mov
daa
or
cmpsl
test
inc
dec
mov
xchg
push
xchg
mov
jg
mov
aaa
add
lret
cld
sub
pop
fs
nop
fsubrs
dec
xchg
lret
cmc
dec
dec
loopne
sbb
pop
aaa
test
mov
out
adc
hlt
out
push
mov
xchg
out
in
lock
xor
loope
out
mov
mov
out
outsl
pop
push
das
dec
adc
xchg
popf
lret
pusha
fistps
andl
inc
je
aam
lds
pop
dec
cmc
and
sbb
cmpsl
sbb
dec
clc
add
test
inc
jne
into
pop
rorb
scas
add
cmc
xor
daa
mov
mulb
cltd
into
cwtl
mov
jle
and
inc
mov
or
pop
mov
push
pop
fcoms
sub
cmp
jno
in
lret
enter
nop
ret
xchg
xor
aas
add
aam
mov
mov
cmpsb
push
sub
mov
pop
jecxz
out
shrl
aam
repnz
int3
lds
mov
cmp
enter
sbb
mov
stc
xchg
xor
push
or
mov
xchg
fsubs
out
mov
popf
rcl
cltd
rcrl
sbb
add
xchg
bound
dec
mov
arpl
xchg
sti
adc
dec
notl
or
cmpxchg
jno
push
mov
shr
int
pop
cmp
insb
inc
je
sub
dec
xchg
cmp
push
sbb
or
push
mov
adc
sbb
adc
mov
fcomip
out
mov
jl
dec
xor
jne
adc
sbb
xor
out
cmp
test
loopne
cmp
mov
mov
sbb
cli
outsl
pop
mov
inc
push
inc
mov
pusha
imul
mull
jg
jo
sbb
pcmpgtb
push
mov
mov
imull
push
in
loop
cmp
repz
repz
out
loope
cmp
aad
int3
orb
out
sub
ficompl
add
xchg
repz
mov
call
lahf
mov
cmp
adc
mov
mov
pop
fmull
test
imull
mov
scas
adc
jg
add
jge
mov
or
es
jbe
xchg
mov
mov
lock
addl
cmpsb
movsb
mov
mov
pop
aam
ret
pop
and
sahf
jmp
add
sbb
pop
in
dec
cmc
pop
pop
dec
in
stos
cltd
imul
xlat
sub
mov
jnp
repz
xchg
fsubp
out
adc
icebp
adc
xor
sarl
mov
jecxz
in
test
fidivrs
or
addr16
push
popa
xchg
mov
repnz
lahf
aad
and
jmp
push
inc
stos
mov
nop
shll
cwtl
cld
ficomps
mov
xchg
call
sub
jle
in
int
add
out
jo
mov
sub
push
pand
pop
xchg
loop
rcrl
push
dec
dec
mov
mov
push
loopne
pop
ljmp
outsl
adc
pusha
sub
das
pop
or
das
push
xchg
iret
in
aad
sbb
stos
cmp
push
in
pop
push
dec
mov
push
inc
jl
adc
stos
cs
cmpb
sbb
jmp
stc
daa
cmpsb
add
pop
dec
push
jmp
and
xor
pop
jb
dec
fldenv
mov
outsl
sti
jge
mov
add
nop
mov
daa
out
pop
mov
mov
inc
in
sbb
xchg
shl
loope
lods
mov
xor
test
mov
repz
and
mov
xchg
addr16
sahf
std
ret
or
adcl
mov
lahf
outsl
fdivrp
fisttpll
int3
movsl
cmp
je
dec
les
sbb
pop
cltd
xor
and
adc
mov
push
push
adc
dec
rcrl
adc
int
push
or
xchg
jb
loope
sahf
rorl
inc
or
push
jl
int3
or
inc
fcoml
addr16
sbb
pop
cmp
pusha
cwtl
shll
aad
sbb
sbb
nop
xchg
push
mov
xlat
xor
push
jbe
enter
jl
stos
jp
ds
pop
dec
fnstenv
test
sub
xor
add
fldcw
lods
and
out
repnz
dec
test
add
sbb
pushf
enter
test
repz
gs
jl
xchg
jne
pop
lock
ret
inc
sub
sub
add
repz
addr16
adc
mov
mov
mov
int3
decl
push
sbb
adc
call
inc
cltd
mov
mov
or
shll
jmp
push
movsl
sti
push
popa
xchg
push
mov
push
mov
int
dec
shrb
ficomps
pusha
mull
imul
add
cld
insb
xchg
sub
jge
cmp
adc
or
adc
and
dec
movsb
enter
inc
fstl
popa
jbe
inc
add
dec
mov
jnp
mov
fidivrs
int
or
or
dec
incb
out
jb
mov
mov
test
push
fdivr
loop
addl
mov
std
mov
in
mov
gs
jnp
cltd
xchg
rclb
lret
or
mov
xor
mov
add
xor
bound
lock
hlt
stos
jae
jmp
pop
jbe
std
xor
gs
lock
or
mov
cli
stos
movsl
loop
clc
pop
mov
and
outsl
pusha
mov
xchg
ss
cmp
add
mov
and
jg
xor
ljmpw
mov
mov
push
dec
loopne
mov
lret
and
in
shll
icebp
mov
aam
mov
es
add
inc
add
out
ds
stc
jnp
push
stc
xchg
mov
imul
sbb
add
mov
mov
xlat
xor
xchg
ficoms
stos
andl
push
test
cli
jmp
jmp
pop
and
and
push
sub
mov
inc
pop
int3
in
mov
sub
pop
out
mov
cmp
hlt
es
fcmovb
inc
sub
in
into
sub
push
orl
inc
loope
in
popa
mov
lods
inc
loop
lods
fsts
fs
push
icebp
mov
jnp
aas
lods
jp
outsb
testb
popw
pop
arpl
adc
subb
mov
in
mov
enter
orb
fldl
inc
fwait
gs
inc
sti
xor
mov
repz
pop
fcomps
dec
pusha
sahf
sub
stc
cmpsl
inc
bound
rcrl
fisubrs
add
inc
ja
xor
and
inc
inc
pop
push
popa
mov
xchg
fiadds
lods
inc
das
sahf
pop
in
dec
xor
inc
roll
call
jge
int3
pop
jne
sub
add
test
inc
movsb
jge
jnp
cmp
push
lods
cwtl
loop
dec
add
mov
pop
sbb
lea
fsubrl
inc
imul
push
push
jno
xchg
adc
ret
jmp
out
cltd
adc
imul
sub
dec
pushaw
sbb
sti
sub
xor
mov
scas
dec
jae
test
pop
imul
pop
out
leave
dec
aaa
xchg
je
push
inc
mov
icebp
subb
xor
in
xor
test
cmp
cs
outsb
jb
and
cli
jnp
jg
pop
out
popf
roll
pop
add
jnp
push
pop
push
mov
ja
mov
sub
sub
xchg
pusha
push
out
out
add
or
mov
pop
ljmp
mov
push
sbb
pop
in
or
inc
imul
aam
cmp
push
dec
xor
ds
cld
lcall
lcall
out
sub
dec
or
xor
pop
inc
mov
shl
lret
xchg
ret
in
add
aad
popa
add
pop
mull
mov
movsb
mov
jmp
pop
sahf
popf
mov
mov
jmp
jecxz
dec
xorb
lcall
add
sbb
js
nop
negl
xlat
scas
repnz
rorl
test
or
clc
lret
sbb
js
loopne
add
xor
mov
mov
movsb
push
mov
leave
fcoms
cmp
iret
fwait
add
sub
pop
in
in
call
mov
in
xchg
push
cmp
test
das
pop
sbb
jae
mov
ret
lgdtl
aam
into
fsubrs
jg
rol
add
test
or
add
pop
imull
push
sbb
adc
insb
outsl
fstpl
dec
sub
data16
aaa
inc
cmp
and
and
inc
jge
jb
sti
stos
sbb
push
xchg
pop
lods
jns
jmp
pusha
mov
jmp
cmpsl
lahf
add
xchg
inc
mov
sub
negb
hlt
cwtl
dec
push
lods
adc
call
repnz
call
cmc
sahf
test
in
pop
push
fs
outsl
and
xchg
outsl
inc
pop
popa
xchg
icebp
sub
add
jns
or
pop
push
pusha
in
stos
pushf
das
ljmp
int
or
mov
push
add
pop
inc
mov
adc
repz
ja
jno
cmp
out
dec
fcoms
nop
add
pop
add
loop
xor
push
mov
mov
cmp
les
and
sbb
push
in
push
push
ja
adc
addr16
sub
mov
or
data16
pinsrw
xor
les
das
int3
loope
adc
stc
cwtl
push
mov
cltd
sti
pop
mov
scas
and
jecxz
aaa
fnsave
loope
cmp
lock
mov
pop
inc
mov
cmp
lods
in
mov
push
inc
shlb
inc
pop
mov
xor
lock
push
lods
mov
in
inc
data16
push
or
das
adc
ret
add
idiv
stc
xor
jnp
inc
es
sbb
add
xlat
and
sbb
jp
lahf
aad
jecxz
and
mov
xor
pop
aas
xor
sarl
ljmp
jo
xor
pushf
sub
rclb
mov
out
lea
mov
cmpsb
outsb
test
leave
ret
loope
push
loop
orb
shlb
aam
add
ljmp
sub
cmpsb
jno
mov
push
sub
xchg
mov
fwait
mov
lods
xor
in
std
push
ret
cwtl
jae
sub
mov
or
add
ss
aaa
jno
rcll
mov
add
xor
cmp
pusha
sub
push
sahf
push
jle
cmp
in
lahf
xchg
inc
jmp
sbb
addr16
jle
or
loop
add
cltd
insl
icebp
cmp
call
push
cmpsb
push
cs
dec
jmp
in
in
xor
cmp
inc
mov
roll
stos
or
push
ds
and
push
scas
jbe
lea
mov
and
mov
and
fucom
sub
jno
dec
sbb
popf
sbb
in
adc
xchg
out
mov
int
sub
mov
aam
mov
xchg
mov
dec
mov
xchg
xchg
sbb
outsl
cmp
sub
adc
push
mov
les
dec
mov
in
loope
jno
not
xor
push
cmpsb
jae
push
add
inc
outsl
rcll
sbb
test
stos
adc
jb
sti
xlat
mov
test
out
gs
pop
push
lret
test
movb
xchg
sahf
adc
int3
sub
xor
mulb
rcrl
mov
hlt
or
sti
in
add
repnz
fwait
loope
jp
lahf
jmp
cmp
pop
pushf
loopne
icebp
add
or
fimuls
out
xchg
push
outsb
pushf
and
into
add
nop
xor
mov
pop
add
sbb
ljmp
dec
pop
xor
call
enter
lods
or
pop
test
testb
sub
cmp
les
add
push
lahf
dec
fs
cld
jle
fadds
adc
data16
dec
fisubrl
push
enter
inc
fiaddl
mov
popf
jge
test
add
push
sub
inc
in
data16
sbb
sbb
dec
push
test
mov
scas
icebp
pop
loopne
or
cmp
scas
mov
sbb
out
pop
imul
and
push
loop
imul
repnz
inc
loop
mov
aaa
ja
cmp
subb
rorb
mov
aas
daa
inc
imul
adc
adc
sbb
push
in
xor
iret
fiaddl
leave
lods
or
in
fs
ss
jae
push
xor
or
rcll
dec
gs
jne
xchg
cwtl
xor
cltd
adc
push
sub
cmp
dec
iret
pushf
mov
mov
xchg
and
cmp
inc
repnz
ljmp
mov
lock
add
mov
mov
test
adc
push
cmp
sarb
dec
xor
mov
popf
mov
insl
mov
mov
ds
or
mov
cmp
pop
leave
dec
inc
inc
add
pop
loop
lret
jno
data16
outsb
aam
and
xor
int
hlt
pop
in
mov
dec
repz
cmpsb
shlb
pop
mov
test
push
pop
pop
movsl
mov
push
or
xchg
das
out
pop
dec
adc
rol
ljmp
push
outsl
ljmp
fwait
add
pop
sahf
pop
push
mov
test
adc
orb
pop
xor
lahf
add
push
push
into
fisubs
cmp
inc
dec
mov
xchg
test
jg
dec
mov
mov
and
mov
faddl
jo
pushf
fidivl
mov
sahf
cmpsb
and
ficoms
repnz
pusha
data16
gs
sbb
xchg
pop
andb
sahf
stos
jecxz
in
push
mov
xor
aam
cld
mov
sub
mov
mov
insl
jns
xchg
jg
fcoms
push
fmull
xor
inc
shlb
or
out
ret
or
je
outsb
pushf
sti
pop
xor
push
fld
loopne
es
inc
pop
cs
push
lods
xorb
test
cltd
sar
cltd
pop
dec
ret
stc
clc
popa
aam
jl
sub
mov
mov
mov
mov
daa
aam
mov
insl
xchg
add
scas
xor
xor
push
sbb
dec
scas
cmp
fisubrl
hlt
inc
sbb
fsubr
imul
ja
clc
pop
movsb
cmp
add
mov
loopne
scas
inc
dec
mov
stos
push
push
nop
addr16
bound
js
icebp
in
sbb
inc
ficoms
xor
movsb
popf
ret
cmp
or
jg
rorl
jmp
sbb
cmp
aaa
pop
pop
shll
xchg
ljmp
out
adc
pop
enter
sub
xchg
sub
dec
shlb
cltd
psubw
arpl
push
pop
jbe
shrl
cmp
subl
inc
sub
les
pop
jle
ficomps
shll
inc
out
int
sti
sub
mov
fldl
lods
lahf
in
insb
add
lods
pop
xchg
sbb
sbb
jb
insb
lcall
cmpsl
imul
ljmp
jbe
sub
xchg
pop
pop
mov
stos
leave
dec
lret
cltd
int
adc
fadds
push
and
xchg
push
pop
mov
xor
and
insl
orb
fisubl
stc
lds
pushf
mov
sbbb
enter
push
adc
scas
pop
jle
negl
sub
fstpt
and
into
pop
mov
je
insb
imul
cmp
jae
mov
jae
out
pop
lret
notb
mov
nop
xchg
lds
sbb
inc
sub
cli
loop
jl
pop
mov
loopne
mov
sbb
mov
sbb
push
pop
push
stc
adc
dec
inc
insl
ret
mov
pop
sahf
popa
repnz
icebp
xor
jns
add
push
jae
lret
dec
into
out
xchg
js
loop
mov
dec
mov
add
push
dec
jmp
es
push
adc
loope
lahf
jp
mov
stos
push
test
fcmovnbe
mov
cmpsb
jae
aad
or
mov
inc
jae
loopne
push
popa
fisubl
xor
add
test
loopne
pop
insl
ret
aaa
sti
and
jnp
or
mov
pop
lods
bound
in
push
push
mov
daa
mov
lret
dec
out
jns
mov
repnz
mov
push
imul
push
adc
out
push
cmp
dec
cmp
xor
mov
in
loope
dec
adc
fisubl
cli
cmpsb
iret
lcall
loopne
sarb
add
fwait
sbb
sbb
aam
cmpsb
cs
test
lsl
outsb
inc
out
js
pop
cli
mov
mov
and
scas
or
jl
pop
hlt
int3
mov
popf
xlat
hlt
fistps
aaa
hlt
mov
jae
loope
in
pop
call
bound
fsubrl
stc
jns
enter
bound
js
leave
jecxz
out
mov
decl
xchg
inc
jae
lods
push
pop
pop
xchg
cmpsb
xor
mov
xchg
pop
in
repz
stos
pop
lcall
clc
int
dec
xchg
jecxz
and
lock
sub
fists
adc
in
xor
sub
push
dec
or
xor
icebp
cmpsb
hlt
out
lods
mov
out
adcb
insb
inc
xchg
enter
adc
mov
sub
lahf
shr
shll
inc
pop
cmp
cs
add
fldl2t
cld
jno
jg
jo
and
js
jnp
sahf
dec
xchg
pusha
mov
push
pshufw
sub
vaddsubpd
mov
mov
repnz
jg
push
sbb
adc
pop
push
das
or
lcall
pop
xchg
in
call
adc
cmp
adc
test
xor
and
dec
lahf
jge
push
jns
cmp
mov
hlt
mov
addr16
nop
in
fbstp
mov
jecxz
imul
and
jl
les
mov
icebp
mov
out
adc
sbb
inc
mov
sbb
rol
or
sti
lret
sti
in
lret
jo
adc
xor
adc
inc
das
stos
xchg
add
sbb
xor
mov
mov
jecxz
aaa
xchg
mov
push
adc
bound
ja
loopne
lea
and
ficompl
push
ds
push
adc
in
push
popf
clc
jp
aaa
repnz
out
sub
outsb
aam
xor
das
aaa
pop
jae
lahf
dec
das
rolb
pop
pop
inc
clc
leave
jb
and
repnz
popa
push
mov
add
add
test
aas
cli
mov
loopne
cwtl
out
cmp
sub
out
repz
xor
jge
shlb
push
shrl
xor
mov
xlat
in
pop
mov
pop
loop
pop
fistpl
sbb
jmp
push
xor
xchg
in
insl
jnp
mov
cmpsb
dec
sub
push
pop
dec
xor
mov
jp
mov
aad
sbbl
inc
xchg
fisubrs
pop
je
jmp
adc
stos
pop
mov
push
stos
aam
movsl
cmp
in
mov
ljmp
pop
pusha
out
lds
mov
push
movsl
lcall
cmpsl
mov
add
sbb
sahf
sub
mov
lods
jne
sub
dec
xchg
add
int
jle
sahf
roll
int
and
imul
cmp
int
shll
mov
mov
sbb
filds
jmp
inc
mov
ret
jae
adcb
mov
and
xchg
adc
xor
jmp
push
or
aas
ljmp
jl
leave
add
inc
dec
jae
xor
lock
sarl
sarl
pusha
lret
lcall
outsb
int3
sti
and
fldl
into
adc
xchg
push
mov
mov
xor
sbb
dec
js
inc
cmp
inc
or
dec
aaa
dec
jge
movsb
mov
inc
dec
test
int3
sub
incb
or
lahf
cmpsb
int3
mov
or
xchg
pushf
icebp
pop
or
cltd
repnz
shrb
lds
es
js
sub
xor
fsubl
xor
outsl
pop
mov
scas
cmp
gs
in
aaa
xchg
mov
sub
rcll
scas
cltd
mov
mov
xlat
cmpsb
mov
push
sbb
or
out
stos
ss
or
mov
fcmovbe
enter
sub
xchg
push
fldl
rclb
cmc
pop
jb
test
insb
lcall
nop
in
mov
orb
dec
sbb
jns
mov
adc
in
mov
dec
adc
lret
fwait
push
sbb
pop
cmpsb
mov
pop
xor
popa
lcall
std
rcrl
enter
or
adc
ret
enter
lods
sub
ds
movsl
shrl
testb
jne
hlt
cwtl
mov
inc
scas
cs
cmpb
shl
imul
clc
je
adc
adc
in
push
outsb
sub
push
mov
pop
mov
mov
mov
xchg
je
or
inc
cmp
incl
fbstp
xorl
dec
add
push
lock
mov
jmp
inc
pop
xchg
fsubrs
dec
es
xchg
dec
lods
inc
jecxz
sysret
lcall
dec
push
sbb
cmp
add
jnp
loop
cwtl
pop
enter
mov
push
rcl
sbb
cmc
sub
adc
jbe
rorl
sahf
push
sar
mov
sbb
jg
dec
and
adc
out
in
mov
dec
dec
mov
popf
test
sub
cmc
lods
adc
xchg
xchg
push
mov
sub
adc
scas
mov
in
sbb
pop
repz
out
push
dec
cmc
or
xchg
jp
das
outsb
or
push
add
mov
lods
pop
cli
test
cli
or
cmp
jns
getsec
pop
pop
mov
dec
das
testb
dec
rclb
mov
ffree
and
sbb
lret
and
adc
mov
sub
movsb
aaa
enter
outsb
movsb
dec
inc
lahf
mov
mov
xchg
fcoml
in
jb
out
in
cmpsb
shl
mov
push
je
and
pop
sub
das
push
fisttps
bswap
faddl
xor
in
nop
pop
jno
cmp
sbb
jns
xchg
mov
pop
xor
pusha
add
fsubs
sbb
popf
clc
insb
or
mov
jg
movsb
insl
lahf
outsl
movsl
jecxz
andl
sub
jmp
in
lcall
sbb
pop
mov
jo
mov
add
mov
mov
test
cs
mov
and
mov
push
or
xchg
lock
loopne
es
js
pusha
arpl
mov
iret
push
daa
ljmp
insl
cwtl
push
clc
loopne
ljmp
shr
lock
jne
loope
not
xor
jecxz
lock
pop
inc
mov
adc
int
gs
dec
punpckhwd
cmp
xchg
sarl
mov
das
idivb
mov
xchg
add
xchg
notb
call
xchg
call
mov
repz
or
push
mov
loop
nop
lahf
mov
cs
or
aad
es
and
jnp
divl
and
and
lcall
test
push
sti
push
pop
fiadds
mov
jle
push
mov
mov
sbb
ret
push
iret
dec
mov
pop
push
daa
es
cmc
ljmp
jbe
push
cs
dec
mov
dec
jmp
repnz
mov
fwait
inc
push
inc
in
fimuls
pushl
in
scas
hlt
dec
jae
ficoms
clc
sbb
sbb
dec
mov
repz
lds
dec
fsubr
mov
mov
daa
es
or
push
jae
jecxz
and
test
mov
out
add
mov
rorl
popa
pop
imul
enter
rcll
insb
test
pop
sahf
pop
aam
xchg
subl
into
cld
es
pusha
int3
rcr
and
xor
mov
xor
pop
imul
mov
cmp
fwait
cli
pop
fwait
inc
cmp
pop
loop
cld
lcall
int3
xor
cld
sub
sbb
mov
inc
mov
insb
das
mov
mov
mov
stos
std
es
mov
inc
jmp
mov
orl
jne
pusha
push
pushf
cs
scas
jnp
xchg
lcall
xchg
popf
add
pop
mov
mov
cmp
stos
or
fildll
inc
jnp
fcoms
fistpll
scas
push
pop
fstl
imul
rorl
add
jnp
not
fbld
ret
jmp
mov
sub
sti
push
sti
shlb
cmp
roll
data16
fisttpll
pop
jbe
cmp
out
sbb
out
aaa
shlb
mov
aad
push
dec
mov
push
xchg
outsl
fidivl
ljmp
mov
push
lea
les
lret
pop
pop
fldl
int3
scas
jmp
inc
add
adc
jg
scas
dec
jmp
pop
ss
jno
aam
xchg
xor
pop
mov
add
fwait
sub
sub
xor
mov
sbb
repnz
movsl
xchg
pop
push
and
mov
test
and
jle
ret
or
out
inc
rcll
adcl
pop
cli
mov
fstps
push
mov
adc
xor
insl
out
jge
cmc
xor
mov
push
push
fidivl
movsl
adc
push
push
fcomi
push
cltd
adc
jg
jb
mov
add
rcll
es
loope
or
inc
adc
mov
inc
orl
push
mov
add
scas
push
and
fildll
mov
sub
lods
rorb
repnz
aam
mov
in
mov
cli
scas
cmp
into
movb
inc
fmull
cmp
jo
movsb
leave
test
cmp
or
pop
pop
loope
add
mov
mov
lahf
hlt
loop
mov
sbbl
push
pop
std
add
insb
pop
sbbb
xchg
in
xchg
std
xchg
mov
ds
std
and
push
fs
xchg
sbb
jl
adc
adc
pop
aad
and
mov
adc
adc
loop
icebp
pop
std
mov
mov
stos
sub
addl
je
insb
arpl
out
mov
es
jno
into
out
out
pop
push
sub
adc
sbb
cmpsl
ret
push
add
cli
in
jns
mov
push
xchg
mov
shlb
fs
push
aam
push
cmpsb
inc
or
adc
dec
lods
sahf
in
add
cld
mov
mov
mov
mov
fld
and
cmp
and
mov
sbb
nop
stc
push
sbb
out
push
pcmpgtb
and
test
pop
or
stos
cmp
xor
jge
sbb
sahf
ret
decl
mov
hlt
inc
mov
lods
pusha
movl
or
in
das
scas
adc
out
inc
mov
loop
xor
add
shlb
or
loopne
out
nop
mov
jmp
leave
ljmp
jle
add
mov
lret
mov
fbstp
or
push
push
inc
jns
scas
fdivr
xchg
shll
inc
idiv
xchg
mov
add
in
xchg
jge
jae
jge
addr16
mov
jl
inc
xor
les
xor
sbb
fadds
xor
pop
mov
ds
out
adc
cmp
jne
shlb
add
divb
mov
test
dec
popf
xor
ja
adc
and
test
movsb
lods
dec
jp
mov
in
out
push
fdivl
jecxz
movsl
pop
shrl
stos
mov
out
imul
xor
cmpsl
and
add
pop
std
add
out
cltd
xchg
push
mov
pop
jo
cld
sub
mov
and
lahf
lods
outsb
icebp
xor
pop
daa
and
hlt
pop
add
lods
lcall
push
push
adc
lea
or
loope
imul
jne
sub
das
push
imul
cmc
loop
lds
mov
mov
cwtl
insl
jp
jne
push
loopne
xor
das
push
imul
jmp
fisubrl
mov
test
xchg
sub
daa
pop
lods
jo
movsl
add
mov
lea
and
mov
mov
xchg
sbb
push
test
das
es
repz
xchg
inc
push
inc
inc
sbb
mov
dec
shlb
movsb
nop
inc
scas
add
stos
loopne
outsb
adc
mov
jns
arpl
mov
jnp
lahf
std
test
bound
lea
lods
imul
cmc
into
xchg
in
inc
add
ss
and
neg
xchg
dec
int
xor
fwait
inc
push
dec
jnp
lods
jg
push
inc
cmp
imul
adc
cmp
into
repnz
adc
mov
dec
mov
ja
rcrb
and
inc
je
push
stos
xchg
push
sahf
enter
dec
dec
push
ret
popa
sub
inc
js
mov
adc
adc
enter
push
dec
inc
mov
sub
icebp
bnd
mov
and
lock
xor
sub
rcrl
mov
jg
je
fildl
mov
push
cmp
pop
inc
out
push
xchg
daa
push
xchg
sub
insl
jge
mov
adc
aam
pop
adc
mov
dec
lods
push
jl
in
int
add
pushf
stc
add
int3
xchg
mov
in
mov
xchg
into
dec
xchg
insb
xor
in
push
jl
pop
popa
lret
mov
mov
xchg
and
cmp
mov
mov
push
lahf
dec
or
mov
outsb
mov
lds
push
jle
mull
inc
mov
xor
mov
insl
mov
das
pop
sub
mov
cmp
clc
adc
test
inc
xor
inc
ds
inc
nop
sub
cmpsl
pop
repnz
jge
aam
mov
mov
cs
or
ljmp
les
rcrb
push
add
or
xor
mov
mov
cmpsl
xor
push
jae
sbb
pop
nop
icebp
or
push
adc
lea
mov
bound
sub
ret
add
or
imul
lret
popf
mov
clc
add
and
dec
jbe
testb
je
outsb
daa
adc
and
xorb
add
jo
mov
lods
jbe
sahf
sahf
xchg
inc
bts
das
xor
mov
mov
adcl
lds
mov
pop
enter
pusha
xchg
push
inc
jns
add
add
xchg
fsubrl
ds
mov
push
push
test
mov
sti
inc
cs
popa
ja
test
cmpb
dec
pop
lret
jle
ja
cmp
push
cmp
xor
jo
iret
inc
sbb
mov
ss
add
cmp
adc
test
jmp
cmpsb
mul
and
xor
sbb
ret
xor
jnp
mov
cmpsl
xor
cs
iret
jae
mov
or
mov
dec
xor
inc
inc
mov
pop
iret
into
sub
and
les
mov
inc
mov
cmp
js
mov
mov
xchg
aam
inc
pusha
or
pop
sbbb
xor
addr16
push
cld
jl
sbb
or
mov
push
mov
std
fcomi
repnz
pop
mov
mov
jmp
sahf
imul
jl
sub
pop
adc
test
cltd
jns
mov
aas
stos
xchg
jb
xchg
or
mov
iret
out
mov
and
jecxz
xorl
ret
lcall
mov
add
cld
xor
fstpl
imul
jbe
fnstcw
mov
sbb
cli
mov
fld
ret
mov
mov
jae
jb,pt
push
das
xor
cltd
adc
add
jnp
mov
adc
fstpt
jge,pn
clc
inc
outsb
ss
bound
mov
xchg
pop
jb
xchg
inc
pop
in
jae
lret
xchg
bound
lcall
rcll
nop
hlt
jle
pop
xchg
aad
lea
xor
mov
repz
inc
or
mov
mov
push
jnp
dec
jne
pop
les
or
iret
sub
bound
sub
cltd
aas
inc
je
jbe
int3
popf
mov
outsb
push
jb
loop
or
in
mov
or
daa
push
dec
cmp
inc
xchg
es
popf
xor
sbb
xchg
and
add
mov
fcomps
test
xchg
nop
mov
jb
fs
and
mov
push
jne
sahf
ljmp
pop
and
mov
fisubl
and
sub
mov
mov
mov
push
lahf
lods
xchg
xchg
jo
daa
add
xchg
out
lahf
rolb
jbe
sbb
sarl
dec
push
imul
fisubl
sbb
cmp
scas
cmc
and
out
ret
sbb
jmp
sbb
push
imul
outsl
loopne
adc
lods
sub
xchg
sahf
xor
push
dec
data16
in
cmp
cmpsl
adc
mov
mov
mov
test
test
dec
xorl
int
daa
xchg
stos
sbb
add
in
sub
cmp
cltd
rorb
aam
mov
xor
mov
pop
or
jmp
mov
repnz
dec
adc
insl
mov
xor
fs
add
out
repz
dec
sub
subl
std
pop
es
out
mov
jmp
dec
sub
dec
out
pusha
lret
pop
push
ja
dec
stos
lcall
cmp
xlat
cmp
xchg
inc
push
push
sbb
push
mov
add
xchg
loope
sbb
jae
xor
xor
ds
hlt
insl
aas
les
icebp
push
ds
outsl
sub
sbb
test
and
xchg
add
mov
dec
cmp
fisttps
std
pop
pop
add
das
jbe
loope
pop
lods
mov
addr16
cmp
xchg
pop
cmpb
popf
pop
gs
sahf
mov
inc
xchg
out
loopne
xchg
sub
mov
lods
outsb
cmpsb
push
rcrl
jmp
dec
and
cwtl
call
xchg
insb
ret
arpl
js
mov
insl
gs
rorl
sti
mov
push
or
or
int3
pop
mov
popa
insl
lret
popa
loopne
test
fnstsw
imul
icebp
or
xor
xchg
lock
and
test
mov
bound
arpl
sahf
push
fs
push
jp
mov
sarl
sbb
cmp
adc
cmpsb
add
mov
outsb
notb
jne
cmp
add
sbb
mov
in
or
add
xor
fiaddl
sub
push
lea
sub
pop
rcrl
rorl
mov
mov
aam
and
rcll
loop
pop
loope
imul
xor
jp
pop
push
outsb
lods
xchg
inc
mov
inc
movsb
push
xchg
js
repnz
jp
mov
sbbl
mov
xor
icebp
ljmp
dec
std
sub
pop
popa
fisubl
mov
andb
hlt
sbb
xor
add
dec
mull
cmpsb
inc
add
sbb
cmpl
add
push
add
inc
mov
inc
out
sub
cmp
cmpsb
cmp
mov
insl
fcomps
pop
adc
jmp
and
inc
mov
pop
jle
rdpmc
lahf
or
add
sarl
xor
xor
repz
rol
fnsave
fsubr
sbb
and
lret
fisttpll
mov
sub
bound
or
sbb
loopne
jl
push
daa
xchg
sbb
nop
out
or
mov
lcall
popf
cld
ja
dec
xchg
pop
lods
insb
in
sub
push
divb
leave
dec
push
jl
xchg
fiadds
sbb
in
or
dec
andb
cwtl
add
movsl
and
les
fimuls
out
push
push
loope
mov
jo
mov
adc
je
lret
sbb
jmp
or
dec
popa
push
mov
je
stc
mov
frstor
enter
sub
sub
jl
ret
in
faddp
jle
inc
xor
sub
arpl
mov
cmp
mov
insl
push
popf
lret
jge
insb
lret
cmp
push
jb
pop
das
std
in
jno
add
loopne
jge
jp
mov
cmp
inc
mov
out
pusha
jge
push
jge
mov
or
sbb
scas
sbb
xchg
sub
cmp
lahf
sarb
xor
addr16
mov
xor
dec
jl
addr16
push
add
cmc
mov
aaa
push
sti
mov
in
inc
test
jge
int3
arpl
xchg
jg
push
add
or
repz
ret
adc
add
jo
js
sub
and
out
adc
pop
pop
xor
aam
outsl
scas
es
pop
je
xchg
sub
je
jb
mov
cmpsl
and
adc
inc
outsl
sub
sahf
and
aam
xchg
xchg
lods
mov
pop
ret
pop
repz
repnz
xor
jo
inc
add
add
dec
insl
fwait
jne
mov
lret
push
sub
lea
or
mov
mov
add
orb
jns
or
in
jo
shlb
loop
dec
adc
ljmp
mov
lcall
xor
cmp
cli
jae
imull
push
adc
add
sbb
cli
ds
and
xchg
pop
je
call
mov
aad
and
mov
add
mov
xchg
xchg
or
xchg
inc
out
push
movsl
cmp
arpl
cmc
push
dec
inc
xor
movsb
jnp
jns
bound
mov
add
jg
inc
daa
push
mov
es
inc
arpl
sub
dec
test
mov
loop
pop
cmp
push
pop
xor
sbb
or
jg
insb
cmpsb
dec
mov
rol
jmp
outsl
sub
xor
loopne
leave
mov
sub
insl
push
or
jnp
and
xchg
jns
dec
je
jns
mov
rorb
test
aaa
gs
xchg
es
and
fisubrl
popf
movsb
add
lea
xchg
es
pop
les
push
lahf
push
jbe
js
add
and
adc
inc
sub
xchg
iret
push
xchg
inc
jno
out
lods
dec
dec
and
imul
add
out
mov
xchg
push
xchg
mov
jns
mov
pusha
or
pop
mov
xchg
fisttpll
cltd
imul
movsl
lea
outsb
scas
dec
dec
icebp
and
stos
das
arpl
sub
das
insb
fstpt
inc
sbb
sbb
hlt
scas
out
ret
and
jmp
aas
fistps
fsubrl
lods
pop
add
mov
pop
and
psrlw
lret
dec
xchg
xchg
dec
and
pop
dec
or
fcomps
dec
adc
cs
out
inc
push
pop
push
mov
sub
mov
data16
jne
lds
stos
xlat
mov
xchg
sbb
imull
outsl
icebp
or
popa
xchg
sbb
jmp
ljmp
jo
dec
xchg
xchg
push
adc
fs
add
mov
jmp
push
cmp
js
cld
shrl
ljmp
jo
mov
scas
call
sarl
or
jge
or
and
test
mov
dec
lahf
lahf
sbb
out
mov
addr16
adc
or
push
loope
iret
sub
add
inc
movsb
decb
xor
ss
ss
and
pusha
negl
sbb
xchg
jae
lret
jle
jg
aam
jmp
outsb
push
sub
sub
mov
inc
aad
or
lret
out
adc
mov
sbb
and
jbe
push
push
imul
adc
or
jmp
leave
loopne
pop
sarl
sahf
xor
mov
xor
rcr
mov
mov
lock
shll
xor
jg
jae
jno,pn
mov
bound
mov
jg
mov
add
xchg
inc
stos
jns
inc
loope
dec
ljmp
mov
dec
pop
in
mov
dec
and
mov
mov
pop
dec
sbbb
jns
fs
fs
mov
shl
push
jmp
clc
mov
push
lock
imul
js
jb
pop
mov
adc
mov
sbb
lock
xchg
ret
and
scas
sahf
ret
sarl
clc
enter
nop
push
hlt
orb
ficoml
jae
insl
sti
mov
ss
jmp
out
xor
into
mov
dec
pop
in
mov
daa
mov
cmc
fnstenv
dec
cmp
jp
outsb
aam
stos
test
cld
or
pop
roll
dec
mov
inc
xchg
xorb
add
das
insl
jno
test
pusha
sub
not
adc
push
pop
sbb
das
mov
push
popa
cmp
imul
sub
adc
loop
fisttps
nop
push
repz
cmp
push
lahf
in
sub
out
std
jbe
mov
dec
cmp
dec
pusha
xor
pop
pop
imul
jmp
lcall
sub
push
pop
aad
adc
mov
cld
xchg
ds
or
idivl
sub
jl
inc
adc
addl
dec
mov
sub
mov
ss
sbb
aad
repz
jno
or
xchg
outsl
outsb
orb
xor
cmp
jmp
inc
cs
dec
jl
gs
cmc
ja
push
jp
jge
in
insb
out
clc
adc
jge
mov
push
icebp
scas
cmp
shll
jne
add
mov
dec
mov
cmp
fldt
in
hlt
cmp
enter
jp
into
xchg
cs
repz
in
lea
jae
mov
arpl
stc
es
into
or
add
jns
inc
sbb
imul
shrl
and
fldl
lret
and
mov
fmull
addl
loop
xor
jmp
xchg
cwtl
cs
sub
test
or
push
mov
add
stc
and
mov
mov
ficomps
xor
sbb
aam
outsl
cmp
out
out
adc
fcoms
sbb
mov
jno
mov
push
in
pop
test
mov
ljmp
std
inc
out
fiaddl
xlat
pop
test
call
xchg
rcrb
jns
sub
inc
aad
mov
xchg
out
dec
adc
test
fcomi
sbb
std
inc
inc
inc
push
test
jg
or
mov
and
call
push
aam
test
ret
dec
or
test
mov
fildll
ret
dec
push
xor
in
jb
fimull
lahf
aad
jle
pop
jge
mov
ret
add
jecxz
mov
adc
mov
stos
in
arpl
jb
std
pop
fsubrl
xor
cmp
dec
es
mov
cmp
jae
cmp
push
lods
mov
leave
mov
pushf
add
mov
push
cmp
add
jg
or
out
repz
lahf
xchg
popf
enter
dec
and
mov
rorl
mov
fs
jae
cli
mov
out
outsb
fistpl
sub
and
mov
iret
and
bound
cmpl
jo
lahf
out
push
push
aad
nop
lods
sti
in
add
sbb
out
mov
aad
sbb
mov
pusha
popf
je
mov
repz
iret
xor
push
shlb
mov
add
ficomps
sbb
xrelease
js
lretw
subb
mov
jmp
scas
orl
push
push
mov
ficomps
sbb
xchg
sub
ljmp
sbb
aad
add
movsl
movl
sub
and
gs
rclb
xor
movsb
xlat
xchg
cmp
hlt
and
adc
repz
dec
call
out
shrl
lea
ds
lods
into
push
push
jb
movsb
fisubs
adc
inc
in
push
fmuls
test
add
sbb
jno
dec
sahf
clc
das
push
or
enter
bound
pop
mov
pushf
fsub
fcomps
in
push
or
inc
push
stc
arpl
movsb
sbb
lret
mov
enter
push
cmp
sbb
cmpsb
pop
dec
out
das
mov
leave
xorl
jns
out
and
jge
inc
nop
lret
jns
aam
mov
out
xor
lret
jnp
or
xor
sbb
sbb
ret
xor
and
jp
call
add
enter
loopne
push
xrelease
inc
std
in
xchg
cmpb
lock
test
mov
daa
test
inc
push
xchg
jecxz
mov
repz
shlb
sub
pop
or
xchg
cmpsb
sbb
fsubrs
lahf
clc
or
imul
push
pmaddwd
xorb
outsb
push
repz
push
popa
cwtl
rolb
xchg
scas
and
mov
push
cmp
xchg
mov
call
mov
mov
les
pop
lret
push
inc
and
cmp
cmp
icebp
lds
mov
xchg
xchg
ret
in
lods
xchg
loop
ljmp
mov
movsl
inc
add
or
jne
orb
mov
iret
jo
out
leave
mov
pop
mov
xor
popa
xchg
es
arpl
lds
jp
mov
cwtl
repnz
xchg
sbb
adc
jmp
pop
cmp
js
inc
jl
dec
add
popa
pop
test
adc
popf
inc
cmpl
in
out
add
push
inc
mov
lock
jmp
add
outsb
inc
out
add
inc
in
add
cmpsl
xor
mov
mov
loop
movsl
mov
sbb
and
xor
iret
repnz
pop
movsl
fwait
cmpsb
and
dec
lea
inc
adc
pop
stos
mov
arpl
repz
sbb
movd
xor
push
das
lods
sbb
outsl
es
das
outsl
les
add
cmpsb
push
dec
dec
dec
lcall
into
and
mov
xor
pop
push
xor
jle
pop
mov
sub
mov
mul
xchg
out
imul
lahf
xchg
add
xchg
sub
xchg
in
jg
add
hlt
and
adc
or
xchg
mov
fwait
mov
mov
jecxz
lock
shlb
loop
xor
xchg
popa
out
mov
mov
loop
pop
inc
pop
and
mov
inc
push
mov
in
dec
push
push
movsl
ss
imul
in
scas
mov
push
xchg
push
sbb
xchg
test
int
fimuls
mov
sub
xor
xor
daa
push
cmpsb
lea
inc
aam
jnp
or
inc
ja
inc
sti
sub
jl
push
test
inc
push
dec
ficomps
pop
leave
push
cmpb
pop
cmp
mov
and
jbe
mov
nop
push
sub
aaa
leave
mov
inc
jnp
xor
repz
andb
pop
jns
cmp
and
sub
iret
mov
adc
pop
cmp
and
xor
jmp
add
scas
adc
and
popf
jg
push
cltd
xor
fisttpl
dec
ret
jns
es
insl
jp
test
adc
cmp
and
xchg
sbb
mov
fnstcw
insb
adc
pop
out
adc
nop
push
mov
enter
int
push
je
outsl
jg
adc
pop
push
cmp
iret
ret
test
push
outsb
pusha
ret
mov
mov
nop
xor
js
into
fiadds
pop
sub
mov
adc
jno
inc
test
divl
nop
es
mov
rclb
loop
xchg
cwtl
pop
loope
inc
aad
cmc
xchg
aam
sub
jbe
dec
pusha
test
pop
sub
std
jle
mov
das
xchg
sti
ja
push
lret
mov
pop
lcall
xchg
pop
cltd
mov
cmp
push
fdivl
mov
mov
inc
clc
aad
out
aas
add
cli
fcoms
sahf
jecxz
pop
mov
rorb
xor
shlb
push
xchg
lcall
data16
xor
or
aam
pop
ret
je
dec
sub
out
adc
stc
cmp
sub
mov
jne
in
cld
add
cmp
in
cmp
sbb
addl
stos
jp
out
push
rorl
rcrb
and
sbb
loopne
inc
mov
xor
xchg
aad
hlt
push
jae
push
nop
and
lcall
es
mov
stc
lahf
or
jo
add
cld
jmpw
push
shr
jmp
push
or
bound
jp
mov
jmp
pop
adc
and
hlt
and
add
lret
hlt
mov
push
and
inc
xor
sbb
jae
dec
ret
test
push
cmc
adc
movsb
mov
imul
movsl
add
std
mov
cmp
stos
and
mov
ja
pop
mov
je
jg
push
or
mov
xchg
jmp
mov
xlat
pop
loop
lret
sbb
sarl
loop
gs
dec
shll
pop
sbb
sbb
or
lds
icebp
mov
rcll
mov
fs
in
lea
hlt
scas
mov
pop
lahf
or
std
xchg
imul
out
xor
adc
xor
push
xchg
xor
jecxz
in
jge
pop
pop
add
or
hlt
cli
mov
cmp
xchg
or
pop
int
subb
push
xchg
stc
shrl
stc
jmp
or
aaa
lods
test
jge
mov
add
mov
xor
sbb
subb
outsl
sbb
popf
stc
in
pusha
ret
arpl
std
push
pusha
dec
cmp
pop
out
outsl
aam
or
negl
fadds
xchg
inc
pop
pop
dec
sub
std
sub
lods
test
aad
int3
inc
imul
rcr
sub
in
shl
jmp
popa
mov
mov
xchg
loopne
js
rol
xlat
push
xchg
lcall
mov
aad
jbe
jne
or
sub
push
mov
inc
addr16
std
imul
adc
not
cmpsl
call
jge
cmp
jp
mov
mov
lds
cmp
or
loopne
in
xchg
cmpb
and
xchg
stos
and
pop
ret
xchg
scas
xor
push
inc
iret
push
nop
sti
add
cli
adc
push
andb
out
lea
mov
or
and
pop
xlat
mov
push
in
mov
icebp
sub
leave
inc
gs
aad
bound
push
lret
inc
push
pop
ljmp
popa
adc
or
sbb
mov
stos
test
dec
sbb
call
mov
pop
adc
call
dec
std
arpl
cwtl
cmp
gs
cld
cmp
lret
das
adc
pop
push
les
cmp
jae
ljmp
insb
mov
stos
pop
mov
xor
test
sbb
int
cs
cmp
sbb
push
push
mov
xchg
ret
loope
or
dec
loopne
icebp
outsb
mov
mov
push
loop
loop
lcall
inc
sub
fwait
mov
fs
push
shrb
out
cwtl
and
out
pop
sarb
inc
dec
pop
jnp
lods
or
insb
adc
sbb
jl
push
add
ret
lahf
repz
inc
push
ds
xor
cmp
sub
jecxz
mov
xor
xor
daa
add
cmp
shrl
ds
xor
mov
cmova
mov
mov
movsb
xchg
mov
mov
fsts
cmpsl
mov
xor
adc
pop
aaa
add
dec
jnp
es
adc
jb
aas
mov
xor
in
in
dec
xchg
lea
mov
rorl
dec
movb
mov
pop
pop
cs
xchg
dec
addl
or
in
cwtl
jns
aaa
add
aam
shrl
pop
and
push
fimull
sarl
lods
cwtl
inc
mov
mov
mov
push
jnp
orl
scas
and
adc
scas
mov
cli
int3
loop
adc
cmp
int3
add
popa
push
aaa
ja
dec
sbb
inc
aad
adc
mov
xchg
daa
jle
inc
xchg
push
push
sbb
out
push
inc
lock
pop
jae
sbb
sub
mov
sub
shll
mov
xchg
mov
sti
sbb
fdivr
stos
divl
and
out
cmc
mov
aas
jno
jns
xor
int3
cmp
aaa
sub
dec
mov
lret
mov
bound
cwtl
xor
sbb
lcall
dec
rcll
andl
or
mov
in
and
ja
xor
cmp
rcl
sbb
loop
xchg
jg
mov
stos
mov
jl
mov
pop
add
shll
cmpb
xor
into
into
mov
xchg
lods
insb
add
out
lret
icebp
aad
mov
mov
push
sub
movsb
lock
sub
jmp
arpl
inc
neg
scas
add
xchg
push
rcl
fpatan
sub
mov
mov
xchg
sub
mov
fisttpl
mov
test
jecxz
xchg
out
mov
dec
mov
repz
sbb
and
mov
sbb
pop
test
ror
jle
cmp
mov
cmc
push
ss
inc
inc
inc
in
sbb
cmp
jno
test
inc
xor
call
lods
aas
rcrb
mov
not
into
push
cmp
subl
repnz
pop
jns
icebp
in
outsb
add
mov
loop
call
or
push
inc
pushf
push
inc
ds
or
hlt
pop
push
sahf
or
mov
popa
and
mov
adc
or
jae
and
xchg
movsb
jbe
movsb
pop
xor
ljmp
push
push
xchg
jle
and
repnz
leave
cmp
or
jg
imul
sar
aas
adc
ror
fcomps
sub
subl
fcompl
jno
fwait
sbb
jb
sbb
cmc
dec
push
mov
mov
lock
xor
iret
mov
jnp
push
lcall
repnz
stos
sbb
push
mov
sti
insl
mov
shr
adc
add
shll
outsl
pmulhuw
daa
and
mov
lods
fs
lret
into
data16
xchg
xchg
fmull
daa
mov
sti
dec
adc
outsl
ds
out
push
repz
xchg
add
and
adc
testl
jns
sub
ljmp
cmp
jecxz
push
insl
cmp
pop
cmp
nop
mov
and
mov
mov
in
leave
mov
dec
sbb
hlt
jno
xor
pop
push
jge
pop
push
outsb
test
pop
in
in
or
push
sarb
in
xchg
or
movsb
es
ret
cmp
fsts
pop
adc
or
inc
es
xchg
scas
mov
sti
and
clc
popa
shll
imul
adc
jnp
xchg
xchg
push
mov
xor
push
inc
add
prefetch
inc
daa
dec
cmpsb
loope
pushf
rcrb
fcmovne
frndint
cltd
mov
push
and
jg
addb
mov
xor
xor
mov
xchg
push
test
in
stos
push
xchg
jecxz
repz
mov
in
or
sbb
inc
mov
ja
fs
push
sub
flds
sbb
lods
in
clc
fbld
pop
subb
ds
fsubl
idivl
mov
pusha
je
xor
xor
and
lods
popa
dec
sahf
fidivrs
push
sbb
cmp
cmpsb
fsubrs
push
mov
outsl
dec
fnstsw
repnz
fcoms
push
xlat
fistpll
xor
test
mov
sbb
rcrl
mov
lret
sbb
push
out
out
and
xor
mov
fcmovbe
dec
hlt
xor
pop
jne
cmp
out
cs
mov
adc
add
loopne
stos
cmp
repnz
mov
mov
mov
rcl
push
or
inc
aaa
idivl
inc
push
dec
mov
and
insl
or
pop
cmp
sbb
outsl
inc
in
inc
testb
sub
jne
sbb
sbb
cmc
test
xchg
fisubl
inc
mov
insl
push
xor
pop
data16
in
push
push
test
sub
pop
fwait
rol
push
sbb
push
mov
es
adc
cmp
fldt
adc
lcall
shll
add
mov
fstpl
dec
inc
loope
adc
fbld
rolw
std
or
mull
push
icebp
pop
in
xchg
dec
mov
sub
popa
enter
sarb
inc
ds
xchg
lea
or
dec
mov
mov
popa
push
add
sub
xlat
clc
movl
popf
push
inc
loop
mov
mov
sahf
xchg
cmp
push
std
stos
gs
imul
and
arpl
cs
lcall
push
mov
sbb
div
adc
repz
mov
dec
dec
cmp
in
loop
xor
cmp
es
jne
cltd
dec
lcall
test
jecxz
add
mov
ret
daa
cmp
rcrl
mov
orl
pop
inc
mov
mov
testb
repnz
sti
mov
push
je
dec
mov
in
jbe
mov
mov
inc
cmp
jns
xchg
push
insl
jl
test
jle
ret
xchg
pushf
jmp
mov
pushf
push
and
mov
pop
cwtl
xchg
mov
dec
and
fnstsw
mov
scas
clc
and
mov
gs
push
jmp
push
dec
insb
add
push
adc
rcrl
test
rol
or
mov
cld
cmp
inc
inc
jl
push
lahf
inc
out
adc
xchg
mov
test
adc
insl
insb
jl
lahf
mov
push
fmuls
adc
fldl
lcall
ror
jne
jp
stc
or
jl
push
lds
add
jg
inc
cli
mov
enter
xorb
mov
test
cmp
cmp
jp
popa
push
add
jl
repnz
push
mov
movsb
loope
lret
movsl
cmp
bound
out
pop
ja
mov
scas
cli
mov
mov
cmp
in
cmp
pop
pop
shlb
dec
mov
add
inc
and
por
and
dec
xlat
int3
pop
dec
bound
loopew
in
inc
movsb
jo
inc
sbb
aad
adc
leave
outsb
clc
repz
lret
mov
push
mov
in
fs
mov
adc
cltd
push
mov
pop
inc
in
mov
cltd
push
cmp
pop
dec
mov
test
lahf
push
sub
std
jge
ret
pop
sar
jnp
pop
and
dec
mov
addr16
stos
repnz
arpl
out
push
adc
loop
jbe
jecxz
pop
push
adcl
dec
cmp
js
out
dec
push
mov
js
in
pop
cli
gs
mov
xchg
push
dec
mov
sbb
es
or
cmp
mov
push
mov
sub
inc
push
and
pop
inc
push
jge
in
insb
es
sub
dec
call
jge
or
loop
push
mov
adc
fs
aaa
nop
jno
mov
rcrb
jnp
testb
in
mov
movsb
and
aad
out
lock
mov
sub
inc
mov
mov
xor
or
imul
jmp
push
pop
out
loop
mov
repnz
xlat
pop
cmc
cwtl
add
addr16
mov
inc
pop
insl
outsb
lods
push
lahf
pop
inc
jp
test
jmp
pop
movsl
adc
hlt
adc
aam
adc
xchg
mov
inc
xlat
mov
pop
ss
push
stos
pop
adc
or
pop
cmp
jecxz
repz
scas
push
xor
mov
out
lret
fldln2
jns
add
sbb
xchg
sbb
adc
test
cs
xchg
imul
cltd
mov
mov
mov
push
in
out
test
sbb
dec
push
xchg
sub
fwait
outsb
xchg
out
xor
xchg
nop
inc
and
in
fisubrs
inc
cmp
jge
jp
stos
and
fbstp
jp
inc
inc
subb
icebp
outsl
mov
or
mov
pop
fwait
mov
mov
ss
add
lods
stos
pop
outsl
push
fadd
std
test
mov
jmp
mov
dec
sub
in
mov
or
cli
es
xchg
in
sub
in
cmp
hlt
push
push
pop
mov
cs
fwait
add
fldcw
loop
xchg
iret
mov
or
cmp
lahf
or
insb
pusha
and
xchg
push
outsl
push
les
pushf
and
int
xor
xchg
stos
push
adc
pop
mov
xchg
pop
xchg
aad
push
ret
sahf
fmul
jmp
out
mov
test
loopne
mov
imul
ror
and
sbbl
daa
scas
es
pop
in
popa
cmp
fdivrp
xor
sti
pushf
shrl
pop
push
fcoms
into
and
xor
pop
inc
xor
gs
pop
pop
ret
pop
jg
push
xor
push
les
mov
icebp
sbb
cmp
adc
mov
movsb
mov
or
xor
cmp
imul
jb
mov
adc
pop
dec
push
xorb
ja
mov
aas
inc
ds
xor
sbb
and
dec
repnz
imul
gs
cmp
scas
out
testl
mov
fsts
mov
sbb
mov
pop
mov
insb
cltd
jmp
dec
sbb
add
popa
xor
add
jmp
pop
cmp
add
adc
nop
sub
inc
dec
ds
jmp
repnz
sbb
push
int3
or
shlb
mov
es
push
rorl
inc
jg
jmp
mov
jp
insl
add
mov
lea
dec
faddl
std
jno
add
aas
xor
into
cmp
je
fnstsw
stc
push
and
mov
pop
push
mov
adc
push
clc
aas
gs
and
enter
icebp
ret
jo
mov
push
aaa
xor
mov
shr
sti
call
pop
daa
adc
out
stc
mov
mov
std
call
or
xchg
fs
fcmovnu
add
sbb
and
movsb
jge
inc
sub
pop
lret
loopew
push
sbb
rorb
jae
ret
add
inc
or
mov
repnz
sbb
lret
stc
stos
mov
sbb
and
dec
add
pop
dec
xchg
pop
rorl
repz
jns
xchg
mov
add
xor
cmp
mov
push
shrb
or
pop
out
rclb
adc
add
scas
std
daa
cmp
xchg
outsb
aam
cmp
or
mov
xchg
int3
cmp
xor
lcall
jno
jl
imul
loopne
xor
adc
lret
jnp
jne
inc
mov
sbb
into
sar
push
mov
in
pop
push
in
fcmovu
dec
pusha
sub
lods
pop
adc
pop
and
and
inc
adc
sub
sti
lret
adc
add
xor
ljmp
add
mov
sbb
das
lods
mov
lahf
mov
aas
sarl
int3
fcompl
imul
inc
and
adc
repz
sti
dec
call
aam
sbb
cmpsl
push
cwtl
xchg
mov
lret
out
lcall
movsb
dec
mov
inc
cmp
cmc
jo
sarl
mov
xor
mov
fsubrs
lock
lret
lods
mov
xchg
cmp
lea
cmp
fnstcw
push
push
xor
or
cli
movb
leave
jae
mov
mov
pop
mov
jg
adc
dec
in
or
fidivs
xchg
push
push
lods
xchg
ret
and
jle
inc
subl
pop
or
enter
test
mov
pushf
data16
mov
pushf
pushw
jo
loope
dec
xchg
inc
inc
xor
call
js
testl
mov
pushf
mov
repz
jbe
insb
push
aas
mov
mov
pop
jae
loopne
pushf
das
xchg
sub
out
cmp
stos
fisttps
adc
js
pop
rclb
add
add
ljmp
fnsave
cmpsl
in
cmp
push
inc
jg
arpl
stos
cmc
xorb
xor
test
or
pushf
add
sbb
roll
fbstp
int3
inc
stc
leave
cmc
jge
movsl
out
cmp
psubb
stos
in
sahf
pop
out
push
xchg
mov
jecxz
xchg
lcall
or
mov
mov
orl
jne
xor
outsw
fadds
sahf
push
ljmp
jl
pop
dec
fisubrs
in
cmp
lcall
push
nop
aam
xchg
lret
sub
or
or
pop
dec
lcall
popl
loopne
xor
fstl
arpl
out
fmull
mov
jecxz
lods
push
loope
inc
fwait
add
in
add
imull
fisttps
xlat
mov
or
mull
push
add
fwait
mov
daa
jno
jb
pushf
jecxz
lods
mov
fnstenv
imul
data16
imul
pop
out
jne
outsb
xlat
dec
or
test
xchg
jmp
sub
mov
hlt
test
cmp
jae
in
sbb
mov
repnz
pop
pop
add
fdivl
outsl
int
pop
pop
inc
xchg
inc
mov
sub
xchg
mov
inc
and
cmp
mov
cli
sbb
test
jl
pop
pop
and
loop
idivb
mull
je
clc
lds
fstl
or
cmc
cwtl
addb
fldl
mov
push
mov
mov
jecxz
sbb
dec
dec
and
roll
dec
jbe
mov
xchg
jno
inc
jecxz
loope
inc
lea
xor
scas
sub
jnp
cld
leave
mov
outsl
mov
push
mul
push
pop
xchg
xchg
loope
jge
jmp
outsb
lret
rcl
sbb
pop
enter
sub
inc
loope
leave
fidivl
or
and
dec
xchg
arpl
mov
ss
push
xor
mov
pop
stos
clc
cwtl
or
jns
sbb
xchg
add
add
js
xor
repnz
jb
loope
into
sub
lods
mov
inc
sub
inc
cmp
or
fisttps
pop
mov
pop
int
xchg
cmp
jo
mov
cmc
aam
push
test
icebp
jnp
sub
cmc
xchg
mov
mov
je
sbb
add
es
std
inc
stos
jne
insb
les
sbb
fsts
stc
xchg
and
fsubl
movsl
xchg
lahf
rcl
fistpl
aad
inc
lcall
push
pop
addr16
cvtpi2ps
scas
cltd
dec
filds
dec
push
dec
xchg
dec
cmp
xchg
sbb
popa
adc
movsl
ljmp
ficoml
loop
xchg
nop
inc
and
mov
jl
lret
dec
in
test
add
outsb
cs
sbb
js
jg
out
inc
imul
int
arpl
lods
aam
or
pop
xchg
xor
mov
push
shrb
lea
je
and
inc
jbe
fisttpl
push
es
mov
subl
jle
int
inc
cmp
push
sub
mov
rcll
mov
pop
cmp
adcl
or
xchg
pop
cltd
mov
sbb
fwait
jge
iret
sbb
inc
or
cltd
sub
popa
cmp
sbb
add
pop
cs
inc
cmp
mov
cmp
sbb
es
int
lret
aam
fistl
dec
outsl
hlt
inc
int
pop
jg
je
mov
mov
cmpl
mov
jmp
enter
jb
pop
cmp
andl
mov
jnp
dec
xor
dec
mov
cmpsl
js
out
cltd
sub
or
not
shrb
call
lods
and
test
ret
ljmp
push
rclb
jns
aas
pop
or
cmc
lods
jae
jae
subl
add
faddl
stos
push
xchg
ret
or
xchg
and
pusha
not
movsl
mov
rorl
mov
testl
daa
es
xchg
sub
push
pusha
cmp
ljmp
push
sbb
cli
iret
mov
in
lods
outsb
mov
dec
stos
sub
jno
xorl
adcb
jae
cmpsb
xor
aaa
inc
mov
out
push
dec
add
pop
xchg
xchg
repnz
in
je
aam
cmpb
cmp
or
mov
cli
mov
add
fistps
mov
xor
mov
fwait
dec
sub
pop
addr16
nop
repz
outsl
inc
and
xchg
push
gs
es
ljmp
pop
cmp
pop
push
hlt
pop
repnz
and
lds
push
dec
jnp
and
daa
out
fists
sbb
adc
jg
jns
xchg
movsl
or
mulb
sbb
clc
mov
sbb
fidivs
and
scas
xor
mov
popa
push
jl
mov
iret
hlt
jmp
dec
lods
lods
and
in
sbb
and
es
in
dec
fsubrs
pop
cmpsl
xor
movsl
pop
dec
inc
lcall
and
outsl
ret
stos
mov
daa
or
popf
mov
repz
stos
mov
sti
pop
sub
sbb
call
sarb
or
popa
xchg
ja
negb
or
std
xlat
adc
in
jmp
push
dec
cmp
pop
stos
scas
sbb
mov
adc
lock
outsl
cmp
cmp
dec
xlat
and
ret
xor
ret
vprotb
cld
ljmp
sahf
inc
and
mov
scas
xor
dec
out
xor
cmpsb
les
push
adc
jecxz
inc
xchg
xchg
dec
rcll
sbb
mov
xchg
jmp
sbb
mov
dec
enter
lret
inc
mov
pop
or
fcomp
icebp
ja
jg
mov
inc
daa
mov
push
xor
lods
mov
test
cmp
fstps
jecxz
jae
cld
lods
push
sbb
inc
in
xchg
mov
inc
inc
xor
inc
push
sarb
les
hlt
scas
fsubr
cwtl
mov
push
pop
test
aaa
inc
push
setge
bound
adc
mov
or
or
ss
and
clc
sbbb
and
fidivs
insl
jg
je
repz
cmp
hlt
inc
jb
xor
fwait
loope
in
and
enter
pop
ja
mov
fldl
fwait
pushf
xor
cltd
or
or
mov
cmp
hlt
stos
aam
pop
jmp
into
inc
push
daa
cmp
sbb
or
mov
into
inc
push
xlat
pop
aas
fcomps
divb
orl
enter
aam
mov
rolb
xchg
scas
cmc
inc
mov
call
insb
test
pushf
test
xchg
jg
dec
adc
jle
xchg
mov
mov
sahf
gs
add
rorl
fbld
sti
fcoml
cs
pop
mov
and
xchg
sbb
scas
vcmpps
dec
pop
cltd
or
mov
or
loope
jno
pop
leave
pop
ficoms
les
mov
mov
popf
pop
cmp
pop
push
test
insb
flds
sarb
sbb
mov
ljmp
push
and
movsb
popf
inc
cmpb
addb
mov
aaa
ja
adc
jb
adc
fists
popa
lods
lret
add
adc
inc
pushf
cltd
imul
ret
push
mov
inc
pop
fs
jne
jmp
orb
pop
cld
or
nop
sbb
dec
sub
mov
dec
pop
adc
jns
cmp
inc
data16
fisttpl
mov
int3
pop
lahf
and
rcr
mov
rorb
jg
notl
mov
mov
adc
jns
mulb
push
pop
andb
mov
jae
cmpsl
aas
push
push
dec
mov
mov
mov
inc
inc
xchg
or
pop
roll
fisttpll
push
int3
lds
aaa
lcall
push
pop
sub
mov
xchg
ja
ds
je
leave
shlb
xlat
scas
jge
fldl2e
and
jnp
adc
cmp
push
inc
dec
test
test
xchg
lock
push
nop
push
adc
mov
gs
icebp
cmpsb
cld
test
ljmp
mov
xchg
loopne
insl
in
clc
inc
orb
lock
scas
pop
lret
inc
leave
push
jl
sbb
cmp
jle
add
cli
push
or
pop
in
mov
fs
push
je
sbb
dec
mov
xlat
push
jnp
loopne
cltd
test
inc
out
shll
sub
test
ret
orl
test
mov
in
pop
cmpsl
sahf
mov
andb
out
lret
and
and
fldenv
add
inc
push
pop
mov
nop
push
or
shlb
mov
dec
in
xlat
jne
je
pop
push
rcll
adc
sbbb
fbld
lcall
dec
cli
xor
or
pop
add
fildl
jle
int3
adc
xchg
pop
dec
nop
mov
lods
mov
test
in
stc
inc
test
push
int3
mov
jl
and
scas
push
std
mov
sub
or
pop
mov
rcrl
mov
or
mov
popf
push
negl
cmp
mov
mov
and
pop
pushf
mov
hlt
inc
les
inc
push
cmc
loopne
mov
lock
out
sbb
xchg
and
sbb
lea
and
dec
sub
add
dec
inc
jle
gs
arpl
jbe
rcrb
lret
iret
add
cmp
sti
js
push
push
dec
or
mov
inc
popa
test
es
inc
adc
out
cmp
jo
pushf
pop
scas
loopne
bound
jb
inc
ja
mov
cmp
lcall
mov
into
out
leave
sbb
xor
cmpsb
add
popa
jp
xor
divl
out
jne
mov
adc
or
cmpsw
lods
pop
sub
sub
dec
ret
and
cmpsl
movsl
inc
je
or
je
push
rol
sub
int
es
or
orb
lahf
push
push
and
jmp
push
scas
pop
xor
cmpsl
iret
push
icebp
and
aas
xorb
out
shr
insb
loope
jmp
pop
ljmp
cwtl
sub
jge
pop
lret
test
or
adc
rorl
jecxz
pop
ljmp
bound
jae
adc
insb
mull
or
ret
push
mov
xor
bound
fwait
in
and
pop
lods
orb
xor
pop
bound
cld
repz
jno
cmpsb
out
fnstenv
sbb
xor
rcll
xchg
mov
pusha
inc
inc
enter
cmc
mov
jns
loope
push
or
in
pop
xor
and
push
shl
sub
pop
call
scas
aas
dec
das
inc
mov
xor
js
lret
outsl
hlt
or
clc
mov
fs
sti
sub
jbe
js
pop
push
loop
push
faddl
push
adc
cwtl
cmp
push
fsubl
adc
stos
out
lea
and
loopne
popa
sub
iret
leave
inc
ss
mov
jmp
xchg
push
dec
dec
mov
inc
push
jnp
push
xchg
mov
inc
push
mov
inc
nop
ret
mov
inc
sub
repnz
fsubrp
adc
push
sub
mov
xor
leave
mov
sub
or
imul
adc
push
into
repz
or
aas
out
sub
push
jle
mulb
cs
int3
pop
mov
cld
dec
jne
and
in
mov
ss
push
xor
jg
sbb
frstor
cmp
and
mov
jl
icebp
jp
repz
push
pminsw
arpl
or
push
adc
sub
jae
stos
fwait
mov
cltd
lret
pop
sbb
adc
rorb
adc
js
adc
pop
jmp
dec
mov
pop
out
xchg
jae
rolb
xchg
inc
and
jmp
pop
mov
stos
and
scas
mov
push
pop
inc
scas
in
scas
lds
mov
js
push
insl
xchg
int
cltd
cmp
es
push
adc
aad
adc
mov
out
roll
and
lretw
lcall
push
aaa
enter
sub
and
scas
mov
inc
add
stc
int
hlt
inc
or
fsubr
mov
lea
lahf
jmp
insl
shlb
add
aad
adc
aad
sahf
jbe
sbbl
sti
pop
sbb
insl
sub
incl
or
and
pusha
dec
pop
push
repz
sub
faddl
bound
divl
nop
iret
negb
xorb
xchg
xlat
sarb
out
jmp
xor
imul
xor
lods
xlat
and
xchg
mov
mov
into
fstps
jnp
jo
das
adc
leave
clc
inc
lds
inc
into
cmpsb
pop
repnz
adc
cmp
insl
inc
mov
rorb
mov
outsl
xchg
cwtl
jnp
arpl
jge
lods
les
std
daa
sti
dec
cli
mov
shlb
outsb
mov
and
sti
cmp
sub
add
nop
jl,pn
xchg
cltd
imul
push
movsl
cmp
sbb
xchg
cmp
jbe
or
clc
and
adc
cmp
xchg
xchg
sub
neg
daa
dec
ja
std
push
dec
pop
mov
lock
inc
add
rolb
fisubs
sub
imul
out
aam
pop
sub
xchg
je
bound
adc
pop
push
mov
in
aaa
xorb
das
notb
pusha
jge
xchg
pop
xchg
adc
sub
push
jb
jne
dec
loop
popf
mov
xchg
std
in
ret
xchg
int
adc
aad
pop
je
jecxz
xorb
call
jns
xor
add
sbb
leave
test
rcrb
mov
xor
sbb
xchg
cmc
mov
and
mov
pop
pop
cltd
hlt
je
mov
pusha
imul
testl
iret
adc
inc
jmp
insb
cmp
out
call
jecxz,pn
fisubs
out
cmp
pop
mov
in
out
cmp
call
jo
call
push
pop
fisttps
add
cmp
movsb
pop
sub
test
jg
int3
xor
and
test
pop
pop
sub
mov
dec
fabs
pop
dec
push
jge
lock
rclb
dec
ja
int
push
in
jbe
arpl
push
jne
xchg
cmp
scas
jae
mov
sub
adc
arpl
test
push
mov
rcll
stos
fldt
int
add
or
cmc
cli
mov
jmp
push
jle
or
fcompl
lret
or
push
pop
sub
loopne
or
sbb
inc
jg
fwait
mov
pop
mov
ficompl
mov
push
push
push
testb
mov
jb
cmpb
adc
lret
lods
out
test
inc
aas
repz
ret
and
or
pop
mov
xlat
or
jle
hlt
outsl
or
xchg
lods
lea
and
scas
inc
xor
sub
sarb
xor
shr
xchg
int3
xor
inc
shrl
sbb
inc
ss
test
fnstcw
daa
test
inc
xchg
lods
nop
in
test
sbb
jnp
xchg
sub
jg
jl
test
push
and
and
push
aas
sub
add
jne
pop
cmp
mov
int3
mov
pop
push
dec
sub
sub
or
adc
stos
push
push
xor
cmp
lods
cld
repz
xchg
out
jnp
add
das
mov
add
dec
inc
cld
dec
out
cmp
fsubrs
mulb
bound
rclb
imul
hlt
int
push
cmc
pop
or
sti
nop
data16
or
scas
inc
fcmove
fwait
ja
movb
xor
iret
add
fcmovnbe
or
scas
stos
or
push
jo
scas
mov
mov
jnp
dec
jmp
ret
sahf
idivl
pop
scas
fs
insl
iret
mov
test
fistpl
xchg
mov
mov
ljmp
hlt
dec
aaa
mov
lea
push
scas
pop
inc
or
iret
scas
jmp
pop
pop
scas
mov
xchg
out
xor
pop
mov
and
mov
test
mov
pop
mov
push
ja
imul
and
fidivrs
bound
lea
cmpsl
inc
pop
add
imul
inc
inc
popf
jns
jnp
pop
int3
jo
icebp
mov
mov
xchg
mov
lret
fnstsw
fdivl
pop
dec
into
loope
clc
cmp
movsb
inc
rclb
sbb
fnstenv
jp
mov
enter
cmp
inc
push
inc
sub
ljmp
lcall
pop
push
xor
mov
adc
bound
test
mov
mov
xchg
xchg
mov
loopne
loope
sub
push
mov
cmp
je
mov
mov
pop
aam
cmp
push
mov
sbb
jne
filds
add
xchg
adc
inc
jno
xchg
dec
and
mov
xchg
repz
filds
pop
pop
insl
roll
lahf
inc
repnz
xchg
mov
xlat
les
inc
dec
push
push
xchg
mov
stc
das
sbb
in
lds
inc
call
mov
mov
loope
out
sub
lea
ret
aam
lcall
lock
xor
das
xor
bnd
pop
cmp
xchg
add
jb
add
sbb
mov
jg
sbb
mov
mov
sub
int
test
add
outsl
clc
pusha
imul
cmp
mov
stos
jne
xchg
in
and
jne
jg
add
insb
and
jmp
stos
mov
das
jbe
je
and
mov
pop
adc
inc
rcrb
push
aad
add
lret
push
std
sarb
mov
repnz
push
or
stc
pop
mov
or
sti
push
cmc
stc
adc
outsb
negb
out
outsb
inc
sarb
test
fs
push
xchg
xchg
pop
or
hlt
cltd
mov
xlat
sub
push
xchg
and
lcall
pop
pop
adc
mov
jno
push
clc
dec
cld
push
jge
sub
lods
jo
ljmp
pushf
fbstp
out
int
dec
dec
cmp
pop
mov
xchg
mov
xchg
ss
xchg
fs
addr16
push
sti
out
in
in
dec
lods
jge
in
cwtl
mov
xchg
mov
lods
pop
cmpsl
inc
fwait
push
out
xor
aas
xchg
adc
jb
pop
pop
sbb
outsl
or
and
and
in
inc
jmp
xor
jbe
push
push
or
int
gs
jns
xchg
les
xchg
jae
rolb
jb
adc
mov
adc
push
adc
pushf
int3
xor
pop
fdivp
push
mov
mov
dec
rorb
pop
loop
cmp
xchg
jg
inc
jg
bswap
dec
inc
mov
dec
add
mov
adc
neg
fisubrl
jg
or
jp
add
in
stc
jecxz
js
int
push
cmpsb
sti
push
inc
mov
pop
in
dec
xchg
sbb
cmpsl
js
idivb
aam
cmp
cmp
rcrl
adc
pop
cmp
mov
or
rcl
mov
jb
notl
mov
shrb
cmpl
sbb
aad
xor
ss
nop
cld
sbb
inc
push
jle
pop
push
adc
sbb
jmp
loop
mov
pop
push
lea
ljmp
stos
dec
popa
in
xchg
pop
clc
sarb
enter
push
mov
in
icebp
mov
aas
sub
cmp
jns
and
and
mov
mov
xchg
lret
rolb
inc
js
add
cmp
shr
lods
jae
repz
cmc
ret
inc
leave
and
sbb
mov
jmp
iret
xor
shl
lds
and
inc
add
mov
js
cwtl
sub
lret
popf
sbb
movsb
jg
aad
ss
lea
cwtl
scas
mov
push
sbb
pop
and
mov
sbb
sub
cmpsb
push
dec
cltd
mov
pushf
in
loop
pop
dec
sbb
cmp
sub
sahf
mov
mov
in
push
js
out
test
cmp
xor
aad
lock
fld
dec
mov
std
les
sub
das
inc
xchg
sbb
pop
jns
minps
mov
sbb
aaa
sub
int3
or
cmc
jmp
fidivs
iret
xchg
mov
das
fisubs
xchg
cmp
icebp
movsb
push
daa
sbb
jl
in
daa
xchg
repz
sub
xor
adc
enter
mov
cmpsb
adcl
dec
sar
cmpsl
test
fisubrl
jno
push
mov
pusha
sub
cmp
xchg
mov
fdivr
dec
adc
lods
rcrb
dec
jecxz
push
adc
push
adc
repnz
shll
popf
shll
mov
dec
dec
repz
add
adc
negl
pop
add
jo
and
popa
push
jo
push
stos
insl
addr16
push
popa
mov
es
lods
stos
and
push
xchg
pop
outsb
lea
ljmp
scas
fsts
ret
cmp
and
mov
sahf
inc
scas
mov
inc
add
js
mov
cwtl
inc
call
out
add
mov
sti
mov
in
cmp
faddl
in
sbb
pop
mov
ljmp
outsl
xchg
loope
pop
mov
in
pop
test
pop
aad
arpl
imul
mov
test
mov
nop
clc
sub
shll
sub
push
and
mov
push
stos
jns
bound
pop
jl
jmp
in
rcrb
jg
repz
jae
jle
xor
sti
xchg
cmp
xor
fisttpll
cs
dec
push
or
xlat
mov
lahf
lods
sbb
dec
hlt
cmp
mov
inc
xor
sbb
push
mov
jnp
mul
aaa
inc
insl
jnp
stos
in
cmp
xchg
or
les
dec
test
adc
stos
cmp
loopne
mov
fwait
dec
push
daa
xchg
or
mov
fprem1
add
sbb
mov
xchg
jle
mov
outsb
cwtl
jmp
fistpl
test
cmp
stc
bound
sbb
inc
push
adc
pop
cmp
or
mov
rorb
in
out
dec
dec
push
or
pop
push
sub
add
push
into
mov
aaa
nop
aam
add
int3
mov
pop
cwtl
sbb
fistpll
push
jl
jno
sarb
leave
pop
test
pop
or
dec
clc
push
sbb
cmp
jae
jecxz
mov
mov
push
sti
lea
mov
gs
cmpsl
sub
int3
jle
cmpsl
bound
adc
mov
test
dec
mov
push
mov
out
insb
mov
movsb
ret
fcoml
add
sub
mov
cmp
mov
push
xchg
inc
jae
ja
test
adc
and
push
sub
cmp
jp
add
incl
sub
sbb
jno
jp
mov
aad
jge
mull
sub
mov
les
mov
bound
sbb
es
or
js
or
in
fwait
inc
repnz
add
dec
mov
and
lods
fnstenv
ret
repz
push
movsb
outsl
xorl
push
xor
in
xchg
out
jo
and
sub
outsb
add
adc
popa
je
in
lods
push
push
push
aam
xor
jb
aam
std
xor
sbb
mov
lods
cmp
aam
jge
ficompl
cld
sub
jbe
call
mov
jbe
lods
xor
lods
movsb
daa
ja
mov
pop
sahf
xchg
xchg
stos
cmp
popa
leave
xchg
outsb
dec
nop
inc
sti
or
dec
mov
repz
shl
shrb
add
mov
mov
xor
pusha
adc
addr16
repnz
mov
inc
dec
ret
add
xor
testb
mov
sub
insl
ja
int
out
jge
xchg
movsb
out
lahf
mov
push
mov
mov
jo
je
andl
mov
push
mov
movsb
add
pop
addr16
fcomp
mov
icebp
jne
sarl
adcl
or
pusha
aaa
xlat
mov
cmp
inc
dec
and
clc
push
cmp
aad
into
decb
testb
hlt
cmpsb
inc
push
mov
int3
xchg
mov
mov
push
mov
mov
pop
adc
sti
pop
xorb
jns
das
mov
push
push
inc
adc
and
push
in
mov
mov
adc
loope
or
fs
xchg
in
push
dec
cmp
fisubl
xor
aas
and
sarl
xor
out
inc
dec
fildl
cmp
push
test
sbb
mov
adc
and
fs
or
shl
out
mov
insl
mov
aas
inc
and
icebp
jecxz
jmp
ss
in
repnz
add
pop
stos
sbb
push
mov
jle
jmp
cmp
lods
pusha
orl
inc
fstpl
push
clc
hlt
xor
lret
pop
mov
lods
jo
jno
in
inc
and
dec
pop
idivb
push
fucomi
xchg
lcall
scas
xchg
insl
inc
mov
mov
pop
xor
and
pop
mov
fmull
or
ret
push
and
into
shrb
cmp
dec
std
jo
inc
fbld
inc
in
out
aas
cmp
cld
pop
dec
pop
xor
push
sti
xlat
push
cmp
dec
pop
movsl
and
aas
adc
jne
mov
cld
and
lods
aas
frstor
mov
cmp
pop
and
mov
shlb
movsl
leave
add
and
rclb
jo
int
outsb
xchg
jno
inc
lcall
out
mov
lock
mov
shll
fwait
ja
sub
pop
push
pop
fs
or
adc
das
xchg
popf
inc
incb
icebp
xchg
add
add
push
push
movsl
dec
add
xor
pop
out
popa
bound
adc
mov
out
sub
ss
pop
mov
push
movsb
jo
push
adc
in
call
dec
cli
lcall
xor
lods
push
movsl
push
das
int
jmp
inc
arpl
pop
sbb
pop
sub
jge
cli
pop
rcll
inc
leave
jo
mov
dec
jnp
push
inc
pop
incl
test
xlat
shlb
sub
and
dec
int
xor
jo
xor
cmpsl
ds
sti
sub
fstp
add
scas
add
push
test
or
mov
inc
sub
jnp
xchg
push
push
jp
fstl
mov
mov
jge
xor
push
int
push
stc
fists
or
inc
scas
ret
sarb
and
mov
push
pop
out
mov
jmp
movsb
jmp
sahf
xor
aam
cmp
inc
jmp
push
mov
cwtl
jbe
jno
loop
stos
das
or
xchg
out
adc
movsl
div
lods
lahf
xor
sahf
jle
repz
push
clc
cld
and
pop
in
sbb
dec
dec
loopne
jge
orl
add
out
cmpsb
cmp
mov
cmpsb
inc
xchg
or
pop
push
addb
adc
fists
cmp
fwait
arpl
imul
and
loope
lcall
pop
lds
push
pextrw
mov
jg
clc
or
cld
mov
fldl
mov
leave
in
push
in
les
inc
xor
jp
scas
mov
int3
repz
mov
scas
in
pop
imul
or
mov
xchg
test
mov
jg
lcall
push
sub
dec
adc
dec
xor
aas
xor
leave
cmp
sti
daa
std
aaa
out
repz
mov
in
push
cmpl
cmp
or
pop
xchg
cmpsl
mov
cmpsl
ss
jle
adc
dec
ja
insb
sbb
cs
inc
mov
loopne
lds
sbb
jne
icebp
lret
mov
pop
mov
clc
fisubrl
sar
stc
jl
gs
mov
ljmp
and
xchg
pop
pop
mov
movsb
stos
cmp
popf
or
push
cmp
leave
aad
jecxz
pop
sti
aad
es
add
mov
gs
fmull
mov
cmc
imulb
xrelease
inc
addb
mov
jae
cmpsl
and
or
push
aam
adc
push
xchg
and
lods
xor
gs
dec
outsb
lcall
dec
pop
iret
mov
adc
dec
aam
imul
pop
xor
gs
mov
lods
js
cmpl
inc
xchg
pop
or
dec
fstps
mov
adc
xor
sbb
inc
daa
jmp
popf
lea
es
push
add
sbb
xor
js
lods
js
lcall
cltd
pushf
cli
inc
add
or
pop
inc
sarl
lret
test
mov
jp
dec
cmpsl
inc
cli
leave
repnz
add
out
push
aam
imul
cs
mov
out
nop
out
addr16
dec
in
sbb
outsl
adc
mulb
cmp
xchg
jp
mov
fcmovnbe
pop
adc
lcall
or
lcall
mov
ret
incb
xor
or
and
cmpsl
mov
out
inc
test
mov
std
add
shr
cmp
add
sub
imul
cmp
popa
fstpt
xchg
sub
pop
decl
mov
lcall
xchg
adc
ss
pushl
ja
gs
pop
adc
sub
ja
or
iret
mov
mov
dec
push
cmp
xor
dec
arpl
bound
add
sub
fstl
dec
mov
xlat
xchg
test
inc
outsb
cmp
mov
out
cli
hlt
inc
cmpsl
add
cltd
mov
lret
rcll
inc
fadds
cmpsb
jno
or
testb
mov
mov
xor
jnp
mov
jge
push
pop
or
outsl
aaa
push
or
xor
addr16
xor
mov
mov
xchg
les
fistps
mov
sub
jmp
daa
stos
mov
repnz
in
sub
sbb
xlat
int
jecxz
dec
test
add
pusha
push
adc
pop
and
jo
dec
push
les
jp
dec
dec
std
int3
pop
pop
sti
xor
ret
jge
jbe
int
test
mov
pushf
mov
mov
arpl
rcll
pop
xchg
mov
stos
and
cmp
jae
inc
fcmovnb
mov
jns
fwait
pop
or
lods
push
out
loop
jbe
dec
shrl
mov
sbb
jg
push
pop
dec
or
data16
repz
loop
and
imul
and
fidivl
mov
lds
sbb
int3
repz
in
add
adc
sbb
cmp
into
jbe
aas
and
popf
mov
mov
pop
fadds
enter
add
push
ret
jmp
xor
mov
loop
js
stos
pop
dec
std
sahf
call
test
cs
xlat
or
xchg
jl
call
sub
inc
or
inc
xor
mov
dec
fsubl
pop
dec
mov
and
dec
push
pop
prefetch
and
dec
out
mov
inc
and
rolb
popf
inc
add
lods
cli
add
mov
mov
cmpb
daa
ljmp
ret
shrl
roll
outsl
sbb
lea
stc
arpl
sub
rcr
mov
or
adc
cwtl
adc
cmp
pop
xchg
and
fidivl
sbb
adc
pop
mov
xor
cmpsl
jp
adcl
mov
loopne
xor
addr16
xor
push
mov
das
add
xchg
cmc
cmp
out
xchg
rolb
jno
mov
jle
cmpsb
push
in
xor
sbb
xchg
iret
cmp
add
jbe
push
out
mov
push
orl
pop
aad
imul
addr16
and
movsl
das
xchg
cwtl
xor
or
inc
jae
push
fldenv
mov
sbb
andb
pop
add
inc
cmpsb
xchg
andb
imul
and
in
out
out
dec
mov
mov
pop
outsb
mov
stos
les
fisubs
or
pop
jl
rcr
data16
in
cld
jbe
cmp
sub
das
scas
xchg
add
dec
jp
sti
mov
stos
rorl
stos
xlat
sub
or
cmp
pop
sbb
sbb
fcompl
rclb
xor
enter
lods
cmpsl
adc
xchg
out
xchg
daa
xchg
and
sub
mov
dec
or
out
lea
mov
dec
xchg
subl
sbb
negl
jmp
hlt
movsl
dec
aam
out
fildll
testl
or
es
popa
dec
rolb
pop
fcmovbe
inc
lods
pop
popf
xor
adc
mov
jl
cmc
leave
enter
xchg
mov
inc
in
xchg
jo
mov
outsl
jecxz
xchg
popf
stc
sbb
jb
std
inc
cmp
pusha
push
mov
into
mov
lcall
xor
sbb
in
daa
add
outsl
lret
mov
jmp
cli
subb
jmp
das
push
push
loopw
mov
decb
jae
xchg
orl
inc
mov
lahf
or
stos
iret
add
popf
pushf
mov
dec
pusha
sbb
jbe
jb
pop
pop
inc
add
loopne
std
in
outsb
clc
enter
fbstp
push
std
lock
xchg
lods
pop
pop
pop
test
comiss
push
lret
into
push
jg
int
or
sub
push
pop
mov
rcr
into
loop
orb
or
gs
ja
xor
jmp
fbld
jge
movsl
movsl
cli
jo
sub
mov
inc
and
nop
dec
leave
cmp
xchg
jmp
mov
aaa
jno
iret
outsb
into
sbb
dec
imul
dec
loopne
push
cld
in
fisttpll
fstpl
notl
jle
lods
cmp
adc
dec
adc
addb
dec
sbb
mov
outsl
outsb
fstl
les
xor
xchg
mov
hlt
pop
test
rcrb
mov
shlb
sbb
rcr
shll
stos
mov
fcomi
out
ds
or
dec
outsb
sub
cld
ja
cmc
gs
cmp
fiaddl
mov
push
cwtl
test
cmp
bsf
sub
pop
lret
cmpsl
mov
xor
sti
lret
push
mov
and
popa
lods
mulb
mov
pop
in
add
lcall
mov
push
inc
loopne
jno
add
inc
mov
in
enter
add
lock
repnz
sti
cmp
divb
testl
jne
xor
jge
push
fcomp
aad
inc
sbb
push
push
add
arpl
loop
fsubs
sbb
outsl
sbb
jl
push
and
push
jmp
jp
mov
scas
pop
xchg
xor
in
cmp
pop
xchg
mov
into
iret
add
push
fadd
or
mov
stos
xchg
iret
adc
push
xor
out
aam
pop
jo
inc
pop
pop
jg
xchg
aaa
aam
add
jns
xchg
lahf
ljmp
jmp
dec
push
pop
out
mov
std
cmpsb
cmp
mov
in
jne
outsb
fcmove
pop
pop
jg
jne
sbb
push
rorb
nop
mov
jmp
pop
xor
xor
adc
andl
jle
xor
xor
pop
idivl
mov
adc
or
mov
int
cmp
mov
xchg
and
inc
loope
mov
jbe
test
in
xchg
idivb
sbb
mov
xor
xor
stos
xor
lods
shlb
inc
mov
xchg
and
and
dec
js
push
push
divl
or
sbb
ljmp
cmpsl
stos
lret
push
stc
inc
xchg
or
xchg
jmpw
stos
pop
or
push
jecxz
imul
pop
cmp
fs
inc
es
pop
das
mov
xlat
xchg
int3
dec
mov
pop
cwtl
popf
push
insl
and
ret
mov
data16
sbb
negl
jp
lods
in
push
push
loopne
ljmp
push
dec
pop
testl
mov
cmp
ss
addr16
mov
add
test
sbb
push
mov
xchg
xchg
jns
fnsetpm(287
divl
add
add
or
in
adc
dec
inc
adc
push
mov
or
fildl
jno
and
divl
popf
push
fimuls
out
in
xor
or
pop
mov
xchg
jle
loopne
mov
push
orb
pop
add
mov
adc
push
push
push
mov
rcll
sub
or
loopne
xor
enter
dec
xchg
sbb
stos
lods
sub
flds
ds
push
test
xorl
xor
push
stos
int3
add
imul
pop
fmuls
pop
xor
push
jle
cmp
dec
dec
ds
das
inc
pop
jp
push
xchg
push
rol
bound
std
pop
in
inc
mov
mov
fcoml
jo
sub
xlat
out
pop
out
int
into
push
je
jecxz
std
mov
xchg
movl
cltd
cmpsl
loope
mov
or
mov
cmp
inc
cmp
xchg
arpl
push
icebp
xor
je
inc
jbe
cmp
call
hlt
cli
push
push
test
cld
dec
cmp
xlat
sbb
jmp
sub
add
movsl
scas
sub
pop
or
pop
insl
lahf
mov
sub
jno
cs
mov
jge
mov
xor
cmc
hlt
cmp
push
movsl
sbb
fisubrs
pop
sub
sbb
inc
xchg
lock
jae
inc
xchg
dec
and
push
mov
out
sbb
movsb
cmp
dec
xchg
popa
add
cmpb
cld
jmp
pop
ss
mov
fiadds
dec
push
dec
push
lods
hlt
shlb
xor
in
int3
xor
sbb
push
in
jg
jle
jmp
and
out
inc
xchg
lcall
or
pop
xchg
mov
xchg
jno
das
cmp
sbb
lods
inc
outsl
pop
fs
push
xor
mov
lcall
lahf
out
and
pop
mov
jg
push
pop
lea
adc
incb
cli
jle
and
mov
stc
jo
sbb
ljmp
std
adc
pop
fmuls
icebp
rol
mov
mov
lahf
into
mulb
lret
add
movsb
sub
xchg
cs
pop
das
fadds
call
mov
push
adc
mov
loop
gs
mov
loop
push
sbb
fstpl
mov
loop
and
xchg
notb
je
lock
orb
cli
sub
push
sbb
and
aaa
push
fwait
mov
sbb
mov
insb
sub
sbb
or
loopne
dec
push
leave
ja
pop
shlb
sub
and
in
xchg
hlt
cli
rcr
dec
adc
rorb
mov
adcl
outsb
xchg
or
or
inc
push
dec
adc
mov
shrb
sarb
push
in
fistl
mov
fwait
push
movsb
scas
int3
jne
or
dec
std
cmp
and
movsl
pop
iret
pop
dec
aam
in
cmp
mov
lds
movb
add
in
jecxz
lahf
sarb
mov
push
cmpsl
aam
popf
int3
xorl
test
push
insl
out
mov
imul
lahf
push
add
sahf
jb
add
pusha
and
nop
fld
adc
pop
mov
pop
shrl
out
or
stc
xor
xor
cmp
mov
imul
jmp
idiv
sahf
inc
arpl
push
roll
scas
pop
ret
sub
fists
adc
cmpsl
aad
mov
mov
cwtl
add
into
mov
dec
mov
adc
mov
les
cmc
mov
cmp
push
insb
clc
outsb
div
or
test
fwait
sub
sub
test
fdivs
cwtl
add
shrl
cmp
mov
cltd
enter
xchg
scas
sub
jg
jecxz
add
mov
rcrl
xor
cltd
test
mov
cli
movsl
xchg
leave
je
inc
ffreep
lret
test
lcall
daa
xchg
mov
cmp
pop
mov
pop
popa
jne
sbb
and
push
push
ja,pt
pop
add
outsl
leave
pop
adc
xchg
cmc
and
push
sub
sbb
mov
xchg
mov
mov
dec
push
rorl
sbb
jb
sbb
mov
imul
cs
jbe
sbb
or
fwait
lds
or
cli
rolb
cmp
jnp
cmp
sbb
xor
mov
xchg
cmpsl
int
add
jne
cs
jno
sub
xorl
ss
adc
movsl
ljmp
sbb
jbe
sub
dec
jg
leave
xor
lahf
and
sar
sub
push
push
in
cmpsl
jge
pop
int
and
std
cmpsb
inc
jge
int
in
insl
mov
out
pop
sbb
cmpsl
and
xchg
pop
je
fnsaves
cmp
fidivrl
call
adc
cmp
mov
pop
sub
test
pop
cmpl
stos
imul
imul
xchg
fcoms
inc
aad
sbb
push
lahf
orl
or
pop
out
add
fstl
in
fnsave
adc
sti
dec
jmp
imul
mov
mov
xchg
sbb
cmpl
leave
mov
cmp
inc
inc
mov
incl
inc
jge
and
fistpll
dec
jle
adc
push
popf
sbb
inc
in
mov
sbb
xchg
jmp
and
repz
push
add
push
push
dec
aad
xchg
fisttps
lret
push
jmp
push
lcall
pop
and
fmuls
sub
int3
movsl
mov
push
enter
scas
or
pop
stos
cmpsl
insb
mov
shlb
and
cmpsl
popa
pop
pop
loopne
js
add
xchg
xchg
les
xchg
adc
addr16
and
dec
loopne
aaa
push
xor
aaa
jecxz
mov
call
sub
rcrb
or
cmp
mov
lahf
inc
pop
mov
dec
pop
inc
mov
xchg
sub
icebp
sbb
lods
shl
or
xchg
cmpsl
test
or
fistps
lahf
stos
xchg
dec
mov
mov
add
inc
mov
ljmp
jns
out
out
or
outsl
jge
mov
outsb
mov
aam
mov
and
or
jbe
stos
test
inc
sbb
mov
es
in
psrld
mov
and
add
sbb
pop
push
cmc
sub
jle
test
mov
xchg
sbb
mov
movsl
gs
arpl
add
sub
test
lret
sbb
pop
mov
nop
cmp
out
test
mov
les
xchg
test
inc
dec
rcrl
rcr
fdivrs
rorl
insb
xchg
inc
or
jl
inc
jo
pop
lods
ffreep
inc
ds
and
jne
push
jmp
movsb
mov
aaa
into
dec
js
xchg
loopne
sbb
gs
jg
das
push
arpl
rorb
rclb
mov
mov
jo
imulb
push
outsl
sub
push
cmp
sbb
xchg
cmp
in
dec
xlat
out
xor
sarb
jg
aas
flds
stos
pop
lcall
jns
into
mov
loope
xchg
pop
adc
pop
scas
nop
push
mov
pusha
notb
xor
test
gs
in
sbb
mov
stc
push
and
sahf
inc
aas
aam
and
test
dec
or
add
jbe
add
or
fcmovu
mov
shl
js
and
jl
mov
push
add
push
jne
mov
pop
fs
xor
xchg
ficoml
in
out
xchg
and
dec
sub
xchg
xchg
xchg
sar
ja
inc
rorb
aaa
mov
xor
sbb
daa
pop
push
das
dec
arpl
jno
jo
outsl
adc
icebp
push
mov
dec
je
sub
sub
jecxz
adcl
inc
pop
outsb
in
mov
sbb
jo
mov
mov
addb
aad
pop
inc
dec
cmc
and
ds
stos
xor
mov
lcall
hlt
jecxz
cmp
pop
dec
pop
mov
test
xor
xlat
sbb
push
fwait
inc
stos
xchg
mov
mov
sub
sti
mov
fdivs
jp
lea
in
das
hlt
and
mov
jns
into
gs
mov
xchg
faddl
and
xchg
adc
mov
and
dec
or
push
mov
xchg
lret
das
je
fimull
push
xlat
and
mov
je
lret
negl
negl
mov
mov
inc
or
out
in
mov
and
neg
pop
ret
jl
lahf
inc
mov
pop
sbb
outsb
fisubl
incl
sbb
out
scas
cmp
insl
stos
fmul
popa
in
xor
loop
nop
mov
inc
mov
int3
mov
out
stos
push
cmp
rcrl
mov
inc
lcall
test
call
pushw
inc
and
push
aas
push
mov
pop
mov
or
or
adc
sbb
imul
out
dec
outsl
lcall
mov
out
adc
pushf
andl
mov
push
push
push
lods
call
inc
mov
inc
and
cmp
ds
cwtl
popa
ret
sub
lock
pop
or
sub
jle
lcall
mull
scas
jle
mov
out
push
mov
sbb
jnp
stos
cwtl
test
mov
js
nop
inc
stc
mov
filds
cmc
clc
fsubp
call
inc
cmp
out
jns
lahf
pop
push
and
inc
test
fucomp
cmpsl
dec
fistl
mov
pop
inc
or
xor
mov
dec
or
adc
das
and
ljmp
jns
sbb
fcoms
sub
mov
stc
je
imul
out
xor
lock
inc
lret
lods
lret
add
icebp
fsubs
icebp
push
or
xchg
sub
add
aaa
pop
call
xchg
repz
insb
rolb
and
dec
lret
loopne
aam
adc
dec
pop
stc
add
mov
sub
push
jecxz
cli
mov
pushf
hlt
mov
push
mov
andl
divb
fcomps
aam
outsl
push
adc
daa
jp
andl
dec
jl
test
loopne
sub
scas
cmpsb
das
pop
flds
call
loope
rolb
add
push
adc
loope
cltd
jle
cmp
jns
shlb
cli
adc
xor
push
sbb
gs
sahf
repz
clc
imulb
sbb
sub
adc
je
repz
cli
adc
adc
les
addr16
cmp
mov
mulb
das
push
fcmovb
jns
jmp
je
imul
int
leave
xchg
nop
adc
xor
lret
mov
pop
arpl
leave
cltd
mov
push
jp
mov
fcomps
fcoms
and
lcall
cmc
xlat
xchg
aas
in
lcall
clc
push
icebp
jecxz
loopne
cs
ljmp
stos
mov
andl
imul
insb
cli
sub
cld
or
fsubs
imul
nop
lods
sahf
data16
jo
cmc
xorl
inc
lods
mov
aaa
and
or
jp
scas
or
and
in
aam
int3
loopne
and
lods
mov
cmc
push
rcrb
fists
xlat
fyl2xp1
adc
fucomip
nop
xchg
hlt
jle
mov
xlat
adc
rcl
mov
and
out
cmp
dec
xchg
dec
aam
stc
mov
sahf
add
add
jbe
cmp
aam
out
orl
and
and
idivl
sahf
movsb
pop
or
loope
mov
adc
and
jb
out
jle
data16
adc
scas
push
or
mov
stos
cmp
and
popa
push
inc
mov
push
aas
push
add
and
repnz
in
ret
out
or
add
ds
sub
dec
mov
or
fxch
xchg
fildl
lahf
sub
leave
mov
int3
push
sbb
es
jmp
je
xor
ret
out
jg
in
pop
iret
add
sbb
sahf
sbb
ds
test
add
lods
jbe
dec
mov
adc
mov
inc
sbb
mov
inc
xchg
cltd
push
out
lahf
inc
and
xchg
push
jle
lea
xchg
lret
push
nop
adc
jmp
jns
aas
ss
pop
add
jl
inc
and
dec
mov
fists
mov
inc
cmp
xchg
jl
and
mov
mov
and
cltd
pop
test
shll
cmc
fidivs
shll
test
jge
cmp
sarl
mov
adc
mov
mov
scas
xor
dec
aas
xchg
mov
imul
xchg
mov
jl
dec
mov
mov
sti
popf
cli
pop
rorb
fwait
rorb
nop
sbb
cmp
ficomps
mov
ret
es
mov
rcll
loopne
imul
test
adc
repnz
fistpl
mov
dec
or
aaa
mov
add
cmpb
insl
xchg
jg
je
xchg
push
fldt
movsb
sbb
pop
sub
and
fwait
pop
push
mov
cmp
adc
stos
pushf
arpl
push
lds
jns
imul
jecxz
mov
bound
int
std
js
xchg
cmp
push
xor
cmp
add
add
xchg
aad
push
push
outsl
push
clc
mul
push
cmp
dec
in
fmull
rolb
jae
popa
stos
and
dec
xchg
add
fnstenv
dec
mov
or
pop
push
loop
aad
jns
es
pop
dec
addl
sbb
push
scas
in
jbe
cmp
out
js
leave
jge
lret
pushf
subl
scas
fisubl
mov
rorb
ret
imul
or
jl
push
leave
jecxz
mov
cmovp
or
imulb
in
or
pop
mov
adc
and
or
pop
test
mov
xchg
and
mov
push
add
fnstsw
sbb
jae
xlat
scas
stos
cli
les
inc
sub
jb
bound
jle
pand
aas
jae
lret
cli
dec
nop
add
add
aam
mov
jge
push
sbb
fldl
sbb
and
and
or
jne
sbb
xchg
fstps
jle
pop
clc
dec
push
inc
xor
xchg
cltd
adc
dec
xorb
out
jnp
cmc
sub
and
out
test
stos
fucom
push
cmpsb
fnstcw
xchg
out
out
mov
imull
mov
mov
int
inc
adc
jp
gs
or
cmc
lock
shlb
fildll
and
sub
jne
call
mov
sbb
in
in
mov
pop
dec
mov
cmp
lea
loop
cmpsl
push
mov
jl
shrb
fsubl
add
rcrl
mov
ss
aaa
mov
stc
iret
and
xchg
scas
sbb
pop
and
lcall
imul
in
rclb
fbld
push
and
out
mov
push
push
jno
out
data16
stos
aam
xchg
inc
push
sbb
arpl
sbb
lock
jmp
movsb
inc
mov
inc
xchg
mov
movsb
stos
data16
jnp
mov
jle
mov
repnz
lea
xchg
out
inc
pop
mov
rorl
je
cltd
jne
mov
sub
jp
add
xchg
jo
adc
push
aad
lahf
add
and
call
mov
jne
add
adc
xor
mov
outsb
lahf
and
test
push
add
xchg
cltd
andb
cmp
idivl
aam
iret
outsl
mov
or
or
mov
cltd
bndstx
adc
mov
xchg
adc
movsl
add
mov
scas
xchg
dec
inc
sub
add
fucom
and
jmp
aam
and
dec
stos
aaa
push
movsl
test
int3
repnz
xchg
cmpsb
repnz
pop
mov
sti
movsb
cli
dec
outsb
push
cmpsl
add
jecxz
outsl
xchg
lcall
outsb
push
add
cmp
pop
mov
cs
inc
enter
xlat
std
push
sub
testl
insb
lahf
std
mov
inc
mov
fucomip
dec
pop
add
and
pop
inc
ja
mov
mov
lock
dec
rorb
mov
pop
jb
pop
repz
test
negb
sub
sti
lods
dec
hlt
mov
fsts
mov
mov
shr
pop
dec
test
inc
loope
and
cmp
outsb
in
inc
and
daa
or
cmp
sbb
data16
hlt
js
test
fmuls
cmp
jl
lea
mov
out
pop
stos
mov
cs
sbb
inc
pop
js
rclb
add
insb
shrl
filds
leave
ror
add
aad
sbb
push
jge
xor
mov
jo
dec
ss
add
push
ret
loope
jg
xor
cld
mov
out
data16
filds
fisubrs
ja
out
ror
enter
ret
ja
test
pop
sahf
sub
ffree
leave
mov
jmp
stos
pusha
cmp
mov
mov
xchg
xchg
jb
jp
cwtl
dec
arpl
mov
repnz
ja
add
repz
dec
outsb
inc
mov
sub
shll
movsl
push
cmp
into
subl
adc
jl
jmp
sub
push
iret
outsb
pop
xchg
fnstcw
scas
inc
push
or
pop
stos
pushf
shll
adc
pop
int
sbb
pop
setle
mov
and
jnp
or
lret
mov
push
or
addr16
imul
les
lds
jbe
pop
push
push
mov
mov
pop
mov
out
out
and
test
and
icebp
sbb
stc
push
je
sub
sub
lahf
loope
sub
add
fsubrl
mov
ret
shlb
div
outsb
push
fidivl
loop
pop
mov
sub
push
mov
lods
ljmp
push
xlat
subl
arpl
cmpsl
mov
or
cli
popf
pop
arpl
adc
push
rorl
rorb
inc
idiv
mov
sub
mov
fs
ret
aaa
out
imul
adc
sbb
int3
ljmp
hlt
ret
in
push
push
lcall
imul
xor
push
leave
aam
xchg
mov
shll
sbb
sbb
mov
jl
jo
dec
insl
out
pop
jl
ffreep
adc
lods
ret
sbb
inc
adc
movsb
into
xor
jns
cmp
movsb
push
inc
jbe
or
pop
loope
pusha
mov
call
cmp
enter
faddp
cmovp
lds
dec
rcll
pop
or
add
mov
mov
add
aas
push
inc
dec
cli
sub
sub
jne
jge
cmpl
sub
xor
push
mov
sub
mov
loop
cli
pop
jge
push
xchg
dec
out
mov
mov
popf
push
mov
mov
xchg
xchg
loope
sub
test
sbb
psubsw
cli
leave
adc
cmp
rcl
pushf
sbb
inc
arpl
add
inc
mov
pop
data16
mov
inc
repnz
aaa
stos
adc
inc
push
push
push
add
inc
inc
pop
mov
add
dec
xor
mov
and
mov
inc
in
repnz
lret
inc
xchg
or
gs
dec
inc
jg
icebp
sahf
adc
pop
pop
mov
inc
jne
dec
sbb
pop
ret
xor
jle
pop
mov
push
push
ljmp
xor
jmp
mov
mov
add
jbe
xor
mov
das
cld
pop
fiaddl
fwait
popa
leave
inc
jmp
pop
xchg
out
sub
sysexit
aas
adc
testb
sti
cmp
fmull
das
stos
xlat
mov
add
adc
jns
jb
sbb
cmpl
dec
and
pop
xchg
inc
mov
das
and
out
sbb
sub
adc
add
jmp
xlat
fwait
mov
sbb
mov
lcall
icebp
sbb
cmp
sbb
stc
rcrb
dec
jg
inc
cs
andl
rcll
in
outsb
addr16
mov
aas
lret
jae
mov
or
sbb
insb
mov
dec
imul
rcll
mov
out
popa
xchg
mov
data16
and
pusha
inc
aas
fisttps
data16
add
std
call
or
les
fxch
out
push
push
jbe
adc
out
pop
es
push
sub
test
popa
push
xor
out
insb
add
mov
inc
cmpsb
xchg
in
shrb
fcomps
mov
mov
mov
xchg
and
add
adc
lahf
fists
and
cmpsb
sti
test
add
sbb
and
push
fbstp
iret
insl
insb
mov
xchg
inc
mov
dec
mov
negb
test
mov
gs
xor
pop
sbb
icebp
and
loope
test
rorb
je
sbb
sub
sbb
mov
push
es
test
add
inc
sbbl
es
scas
xor
and
pop
aam
bound
fstps
jg
cmpsl
in
mov
repz
adc
mov
xlat
pop
gs
iret
outsb
adc
dec
jecxz
call
testb
scas
or
enter
xor
mov
pushf
fsts
sbb
dec
lods
cmc
jle
movsl
and
pop
mov
sub
xor
shrb
mov
inc
push
sub
mov
jae
aam
push
fists
fcomps
ds
mov
rolb
jl
add
aaa
loope
mov
cmp
sub
mov
loope
or
mov
cmp
jne,pt
sbb
inc
cmp
sti
jg
add
jbe
mov
push
push
faddl
fs
xor
lods
cmp
mov
aam
mov
sbb
xor
mov
dec
mov
and
in
and
int3
xor
jp
mov
lret
jae
xor
out
push
adc
xchg
scas
fstpt
cltd
mov
stos
mov
xchg
sbb
sbb
outsl
adc
or
imulb
mov
lea
push
adc
sub
out
mov
push
pop
or
and
xor
mov
outsl
aad
and
mov
sbb
mov
xor
in
push
into
and
xchg
dec
pop
jle
and
cli
inc
xlat
dec
mov
push
sub
xor
inc
mov
lock
xor
call
cmp
fistl
inc
je
jo
dec
add
add
dec
in
mov
jno
mov
mov
adc
cmpsb
push
daa
xor
mov
adc
dec
pusha
lret
xchg
pop
sub
mov
sub
ja
repnz
lods
int3
inc
push
dec
js
lret
xchg
orb
aaa
and
cmc
add
dec
popf
pop
cmp
xlat
stos
mov
or
andb
sbb
adc
xor
xchg
cmp
mov
in
ss
jo
shrb
ret
and
out
cmp
lret
scas
push
mov
loope
gs
aaa
and
mov
or
and
stos
adc
push
pop
test
pop
mov
fidivs
call
lock
fwait
btr
lahf
push
jns
mov
inc
mov
or
test
adc
jl
mov
or
frstor
adc
jae
push
lcall
notl
xor
xchg
or
pusha
mov
addb
cmp
inc
adc
stos
call
out
ds
xor
stos
mov
push
das
sbb
jno
mov
dec
frstor
pop
sbbl
pminsw
repnz
shll
push
popf
iret
sti
pop
in
push
aas
mov
loopne
sbb
dec
dec
pop
or
subb
inc
adc
mov
xchg
inc
pushf
adc
jmp
xchg
andb
inc
int3
sahf
pop
push
adcl
xchg
stos
pop
pop
pop
outsl
pop
pushf
jmp
push
pinsrw
fs
sub
movl
cmp
add
std
push
and
andl
inc
mov
mov
mov
mov
leave
cmpsl
dec
jae
fdivrl
and
pop
xor
mov
lods
sub
push
les
mov
test
mov
shl
push
addb
gs
push
in
push
adc
mov
cmpsb
pushf
push
lahf
and
inc
push
popf
adc
adc
pop
jno
scas
lea
dec
cmc
push
hlt
pop
push
xor
add
stos
mov
push
mov
ss
sub
xor
fwait
mov
jle
add
mov
xchg
sub
adc
lcall
xchg
les
xor
dec
out
andl
or
adc
push
mov
stos
pop
and
mov
dec
cmpsb
xor
pushf
test
and
inc
lods
sahf
pop
cmp
and
sti
mov
and
and
sub
sub
ljmp
push
xchg
cs
les
xchg
dec
dec
push
mov
push
out
and
mov
xchg
cld
aad
pop
inc
popf
adc
cmpsl
je
mov
mov
call
js
lahf
mov
inc
mov
jle
fcomps
in
inc
sahf
dec
stos
sub
popf
ss
out
xchg
jo
mov
jnp
mov
mov
lret
and
xor
mov
sbb
or
jns
int3
cmp
push
aas
mov
sub
add
cmpsl
daa
push
xchg
arpl
push
push
pop
pushf
test
stc
nop
lods
ror
sub
movsl
mov
adc
flds
xchg
pushf
pop
in
dec
xchg
out
xor
fisubl
std
loopne
jmp
pop
or
mov
fstpt
arpl
fcmovnbe
ss
xor
mov
imul
dec
cmc
mov
je
push
leave
shrl
push
out
ficomps
cmp
pop
stc
mov
orl
pop
lods
es
mov
jns
cs
aam
xchg
sahf
fnstenv
sbb
and
aam
mov
in
stos
inc
sbb
fstpl
data16
stos
mov
or
and
sub
sbb
mov
dec
out
mov
inc
pop
sti
daa
mov
mov
ds
scas
in
out
jge
loopne
xchg
mov
jmp
stos
fists
inc
cmpsl
adc
inc
cli
lds
loope
mov
lret
out
add
and
cmpsb
or
pop
inc
out
lret
cmp
add
faddl
dec
test
aad
adc
inc
enter
dec
sbb
pop
rcr
push
orb
dec
xchg
jg,pn
pop
cmp
mov
jb
mov
add
mov
mov
call
sbb
mov
xor
test
scas
sbb
inc
push
adc
jg
dec
mov
add
pop
push
aad
sub
scas
js
sbb
aad
ret
sbb
flds
dec
cli
out
loop
add
dec
dec
or
js
sub
mov
inc
pop
mov
js
fwait
xchg
test
or
leave
test
pop
inc
jne
mov
insl
mov
gs
addr16
ds
cmp
adc
imul
push
jne
pusha
dec
pop
mov
push
lahf
insb
pop
out
psubd
dec
aaa
addr16
insb
cmpsb
or
cmc
inc
jns
mov
jmp
jnp
rorb
or
repnz
sar
ljmp
and
imul
add
push
hlt
fwait
das
dec
mov
inc
push
pop
cmp
push
jo
arpl
popf
mov
sti
add
out
and
daa
inc
les
das
cld
and
stc
mov
jp
push
add
or
subb
mov
mov
xor
mov
and
loop
dec
ret
roll
stc
mov
pop
mov
aas
cmp
fisubs
and
jg
sub
xchg
push
cpuid
jecxz
xchg
arpl
mov
cmp
pop
dec
cld
mov
push
scas
pop
fucomip
sub
jge
in
or
xchg
xchg
sbb
lea
mov
push
add
mov
lock
stos
xchg
fldt
mov
stos
add
and
fs
movsb
clc
jb
insb
lahf
nop
dec
cmpl
push
mov
aam
xor
fprem1
lods
arpl
lret
jb
sbb
scas
fisttpl
push
cmp
ret
pop
cmp
xor
cwtl
hlt
or
mov
and
xor
mov
push
test
in
jne
movsl
fimull
cwtl
pop
jbe
mov
mov
jmp
lock
stos
lods
decb
pop
inc
push
in
xchg
jmp
test
add
mov
cwtl
int3
cmc
sahf
pop
mov
jne
data16
pop
cs
ret
mov
nop
sub
test
add
jb
pop
inc
shrb
dec
push
frstor
mov
fisttpll
shr
lahf
idivb
rcr
xchg
popl
sub
xlat
imul
push
adc
inc
lahf
in
push
lods
adc
rcll
loopne
stos
rorl
push
enter
ret
xchg
inc
test
add
push
dec
fucom
outsl
out
js
data16
in
mov
push
dec
sarl
ss
sarl
dec
adc
lret
lods
xor
sub
dec
pop
aaa
push
js
andb
cs
add
idivb
inc
jle
pop
sub
es
mov
in
enter
iret
mov
cli
adc
test
push
test
ficoms
xor
jecxz
enter
nop
jns
mov
pop
lea
add
lds
cld
imul
popf
and
data16
dec
mull
mov
arpl
ljmp
stos
mov
inc
data16
lock
sbb
imul
mov
dec
push
loope
push
xorb
fistpll
imul
jae
sbb
ljmp
add
mov
xchg
mov
insb
and
xchg
clc
ret
jmp
add
mov
lret
or
int
push
xchg
movsb
xchg
cmp
xor
mov
cmp
or
call
icebp
mov
out
xchg
sub
sti
jmp
gs
pop
sub
cwtl
jne
outsb
adc
cmp
cmc
inc
sub
data16
cmpsb
lret
and
clc
mov
movsl
sti
push
in
icebp
lcall
push
and
pop
scas
js
ret
sub
pop
arpl
push
jle
jecxz
xchg
cltd
mov
mov
push
sub
iret
xor
aas
dec
dec
pop
lret
paddb
int
pop
call
mov
sbb
mov
lock
and
dec
loopne
mov
popa
ja
sbb
fldcw
movsl
lcall
mov
add
push
int3
incb
jmp
and
in
and
push
repnz
js
sbb
scas
in
rclb
mov
pusha
or
push
aas
call
std
test
fisubrl
movsb
inc
movsl
lret
dec
sbb
or
mov
xchg
push
mov
xchg
lea
mov
inc
push
test
xchg
loop
popa
or
cwtl
mov
add
jne
imul
lret
fwait
outsl
add
xchg
inc
cmp
out
fidivl
jmp
sub
cld
daa
out
repnz
fisttpll
sbb
lods
push
add
jecxz
aas
or
insl
pop
lret
sti
das
test
cmp
mov
sub
or
xlat
and
sbb
fdivrl
jns
jnp
dec
icebp
fistl
jg
mov
sbb
js
xlat
ss
dec
jbe
cmp
inc
mov
movsl
test
dec
inc
mov
push
dec
orl
imul
mov
test
fcomps
jo
xor
push
nopl
jmp
mov
dec
adcb
mov
mov
ret
enter
and
roll
popf
hlt
aam
loop
lods
jecxz
inc
xchg
xor
gs
push
incb
adc
push
das
sub
loope
pop
push
clc
ret
pop
sarb
cmp
clc
cmp
or
cli
sub
xor
push
xor
mov
lea
repz
add
mov
mov
stos
push
jmp
fs
dec
insb
std
mov
jbe
jbe
cs
jg
movsb
jae
push
dec
or
add
inc
adc
out
push
push
addr16
aas
and
jge
sbb
or
fcomps
out
vprotw
add
lcall
ds
mov
mov
out
mov
ds
stos
jne
fwait
loope
das
inc
outsb
aad
dec
inc
jne
push
pop
std
cmp
mov
jp
sub
adc
xor
imul
inc
push
lods
cmp
insb
adc
mov
jno
pop
and
mov
daa
ret
and
fsubs
xor
cmp
push
adc
fsts
cmovbe
push
sbb
aas
jbe
mov
and
out
adc
sub
adc
and
mov
mov
cmp
inc
add
mov
dec
cmp
inc
dec
mov
lods
mov
adc
popl
mov
pop
sbb
dec
and
test
loope
dec
mov
lds
sbb
adc
lea
mov
and
xchg
ret
xchg
movsl
imul
push
cmp
sbb
sahf
jp
gs
mov
mov
cmpsb
xor
ret
jb
add
or
add
mov
mov
push
mov
lods
mov
insb
aad
stos
cmp
pop
stos
addl
jb
jmp
mov
mov
lret
mov
nop
and
lea
xor
fwait
jecxz
push
and
xchg
xchg
mov
add
sbb
div
adc
clc
mov
and
push
out
lock
ret
lods
or
addl
mov
or
ss
lcall
inc
lret
xchg
test
mov
lret
and
jo
lds
push
mov
or
cmp
lds
scas
fmuls
jb
aaa
xchg
xor
pop
lcall
sahf
add
mov
and
push
lods
scas
out
xchg
pushf
pop
adc
movsl
or
adc
imul
mov
int
mov
cmpsb
incb
push
les
imul
and
fists
xor
xor
mov
int
addr16
loope
arpl
bound
mov
cmp
mov
movsb
enter
pop
outsl
test
paddusb
call
mov
data16
popa
xor
ljmp
insl
inc
ds
mov
sub
inc
lret
ljmp
hlt
test
ret
pop
test
in
test
push
out
imul
lahf
pop
mov
adc
mov
es
mov
pop
push
adc
fbld
jmp
out
dec
or
fwait
jg
xchg
enter
insl
jmp
jp
mov
out
aaa
subl
iret
xor
inc
aas
xlat
mov
in
mov
filds
adc
jl
mov
cmpsl
or
in
lcall
inc
lock
pop
fdivrs
data16
lods
pop
add
push
sub
mov
movsb
sub
cld
in
out
insb
mov
ret
inc
inc
xchg
sub
scas
mov
xorl
adc
fisttps
scas
cmc
into
xor
inc
pextrw
xchg
lock
xchg
in
push
jle
shll
popf
inc
cld
inc
out
cli
dec
jecxz
popf
add
clc
icebp
mov
add
dec
push
xchg
loop
jnp
push
rorl
mov
mov
add
add
scas
mov
inc
test
mov
stos
jb
and
lock
cmp
inc
xchg
fs
aaa
cltd
jg
mov
mov
push
gs
outsb
cld
push
fwait
outsl
jmp
ret
call
in
rorl
in
xor
lret
daa
scas
sbb
cmpsl
xchg
movsl
inc
mov
in
xchg
nop
lret
mov
rcr
mov
add
outsb
loop
cmp
push
lahf
jp
xor
mov
filds
mov
push
scas
xor
notl
cmp
mov
icebp
pop
aad
mov
adc
std
shlb
push
mov
into
lods
ja
popa
pop
addr16
jno
jge
loopne,pt
add
data16
out
enter
mov
movsb
sahf
lock
jnp
shrl
in
mov
repnz
or
aas
ret
lret
mov
stos
cmpb
cli
sti
stos
scas
mov
adc
aaa
adc
adc
sub
ss
xor
jl
xchg
xor
std
in
gs
lods
aas
fdivrl
jg
or
scas
ds
sbb
rcl
jmp
lods
jge
push
inc
xor
xor
aad
jge
testl
je
dec
adc
out
push
sahf
jb
lock
stc
push
lea
inc
and
mov
or
ljmp
xchg
test
adc
ljmp
mulb
ja
and
or
mov
pop
or
lcall
mov
mov
stc
sub
pop
push
dec
jle
cmpsb
int3
clc
dec
cmp
aaa
sbb
xor
sub
add
mov
js
jg
xlat
cwtl
mov
call
lds
sbb
dec
jecxz
jl
lea
scas
mov
ror
imul
add
lods
in
in
pop
and
push
outsl
test
or
je
nop
sbb
fsubrp
ret
jnp
jge
pop
sbb
stc
dec
movsb
cmp
outsl
cmpsl
adc
mov
xchg
mov
xor
nop
sbb
loop
stos
cmp
jbe
add
adc
mov
cwtl
push
xor
lods
out
popa
adc
mov
out
and
test
aas
dec
int
add
jb
sub
frstor
add
push
mov
sub
xor
out
sahf
shll
add
mov
popf
mov
leave
sbbl
lahf
sub
jo
sub
data16
or
popa
les
and
mov
mov
push
sbb
stc
pop
mov
inc
xor
xchg
sub
jo
fsincos
xlat
mov
mov
adc
add
stos
jns
movsb
insl
mov
outsl
stos
and
lock
mov
dec
sbb
mov
clc
mov
inc
gs
pop
gs
jmp
mov
bound
mov
push
or
cld
lahf
ret
movb
xchg
mov
int3
mov
adc
inc
and
pop
lods
cld
dec
jbe
mov
repnz
push
pop
mov
rclb
jecxz
ds
or
int
leave
pop
jge
ficompl
dec
sarb
xchg
xchg
jmp
jbe
shr
ljmp
lcall
leave
xor
aaa
and
mov
jns
pop
mov
shlb
jne
mov
mov
jne
xchg
bnd
xorl
jb
fs
add
stos
adc
shlb
push
inc
sbb
mov
mov
test
xlat
fstl
ret
adc
sub
cmp
xchg
and
xchg
jae
adc
push
insl
jae
sbb
jns
testb
fimull
negl
adc
sarl
sub
jg
das
shrb
add
jae
cs
jbe
fbstp
fldcw
rorb
inc
and
dec
jg
sbb
pop
lcall
sbb
xchg
notb
xchg
adc
scas
mov
or
jle
stos
cmpsl
or
pop
mov
or
mov
loop
ds
mov
movsb
pop
incl
test
mov
cmpsb
pop
add
fs
aas
xchg
ss
mov
xchg
pop
andl
nop
adc
popa
in
push
ds
int
fdivrl
ret
repz
das
xchg
std
or
sub
xchg
scas
xor
bound
xchg
jmp
scas
notl
popa
std
sub
sbb
movsw
mov
push
pop
mov
push
out
lods
sbb
push
adc
mov
dec
aaa
sbb
ljmp
dec
or
or
lods
in
mov
fisttps
aaa
push
inc
adc
cmpsl
out
orl
out
jne
add
in
push
xor
in
adc
lods
dec
sub
pop
inc
hlt
movsl
js
bound
cmp
xchg
ja
dec
mov
in
push
push
add
xchg
or
sbb
push
outsb
jne
lahf
mov
aad
jb
adc
push
lock
pop
testl
dec
imul
inc
dec
adc
rolb
adc
int
push
and
xchg
ret
out
fsubr
fidivl
jno
inc
bnd
sub
cmp
movsb
pusha
xchg
cmp
mov
fisttpll
mov
mov
fucomp
push
in
pop
popa
mov
mov
shll
and
inc
scas
mov
aam
cmpsb
push
fwait
jle
lods
lds
cmp
add
clts
arpl
xchg
popa
ret
popa
mov
int
mov
dec
andl
ret
cmpsl
jno
xor
inc
fnstenv
lods
xchg
xchg
int3
or
imul
lea
add
adc
jg
mov
jecxz
and
fdivrp
lret
pop
push
lret
out
imul
cmpsl
jp
or
out
push
pop
xchg
cmp
xchg
jae
pusha
or
imul
push
test
notl
loop
mov
add
imul
xchg
dec
pop
jg
clc
subb
es
and
outsl
pop
push
mov
cmp
or
sub
push
push
sar
jg
ds
pop
jb
push
add
ljmp
push
mov
push
push
adc
stos
xor
dec
insb
dec
lock
loope
push
mov
pop
pop
xor
mov
cmp
xlat
jmp
lds
push
filds
lahf
shrb
icebp
aaa
mov
push
in
mov
inc
inc
mov
adc
mov
pop
int
push
int
pop
mov
pusha
das
imul
xchg
in
xchg
inc
out
imulb
or
call
imul
mov
inc
dec
aam
addl
imul
imul
pop
sbb
scas
fisubrs
fdivr
loop
out
popa
aaa
lods
mov
stos
and
sbb
imul
pop
std
sub
insb
jecxz
aad
popf
mov
std
icebp
push
sbbb
jmp
jg
gs
xchg
adc
dec
in
out
cmc
out
jne
arpl
retw
and
lods
mov
movsb
ss
orb
mov
inc
cmc
jmp
mov
popa
jge
dec
in
sti
cmp
arpl
jg
aam
xchg
dec
not
hlt
sbb
hlt
mov
cli
setge
add
int
cmp
ljmp
arpl
pop
dec
xadd
stc
dec
jo
add
add
inc
add
sbb
dec
adcl
aam
std
adc
add
mov
mov
gs
sub
or
nop
mov
out
pop
sub
jg
jecxz
je
mov
stos
mov
jo
or
mov
fbld
cld
repz
lods
lods
das
gs
adc
mov
mov
in
pop
imul
loopne
mov
dec
jbe
daa
dec
imulb
inc
or
push
mov
mov
sub
inc
js
loop
cwtl
jecxz
icebp
jno
xchg
adc
mov
add
outsl
js
dec
pop
bound
add
repz
xor
pop
lds
lods
jge
fdivr
jbe
js
int3
cmpb
lods
sbb
and
test
cmpsl
pop
mov
xor
mov
loope
dec
mov
out
push
pusha
xchg
inc
in
cmp
ret
push
mov
and
insb
cmpsl
lret
dec
shll
clc
pusha
js
jl
xchg
mov
outsb
add
xchg
rorb
xor
testl
and
mov
arpl
inc
xchg
popa
in
call
sbb
inc
mov
push
mov
sbb
sahf
dec
mov
movl
or
or
lods
mov
lret
xchg
addr16
stos
daa
out
int
adc
lea
push
popa
shlb
jo
bound
lret
dec
dec
lcall
jle
and
push
cmpsl
js
lea
xor
sub
jmp
xor
push
mov
std
icebp
push
je
mov
aad
pop
fildll
sub
push
jno
sbb
add
push
rolb
sbb
push
aaa
das
mov
call
mov
mov
mov
rcll
cmp
jl
push
pop
pop
lock
movsb
sbb
addr16
lahf
cwtl
xchg
adc
js
mov
adc
pop
push
adc
lret
push
mov
es
push
mov
jno
daa
and
mov
push
in
data16
addr16
mov
lcall
sbb
insl
inc
sbb
push
mov
cmp
mov
bnd
mov
mov
xor
movsb
enter
mov
xor
pop
mov
fidivs
push
jg
mov
sbb
cmc
pop
sbb
mov
data16
add
pop
sbb
imulb
daa
sub
sbb
sub
in
stc
dec
jl
sub
lods
jnp
push
xchg
lock
cmp
addr16
lods
pop
mov
mov
rcrb
cwtl
and
mov
mov
repnz
int
xchg
fbld
arpl
movsl
inc
jae
add
mov
icebp
sahf
pop
lods
adc
mov
xlat
push
fs
push
mov
xor
adc
mov
pop
ret
mov
loopne
insb
ret
lret
mov
push
cs
stos
or
push
jb
mov
insb
imul
mov
iret
cmp
idivl
adc
loopne
cmp
or
nop
mov
mov
ret
or
es
and
pop
xor
icebp
inc
cmp
and
xor
mov
icebp
mov
jbe
rorl
in
xchg
push
pop
sti
pop
mov
lds
jne
movb
mov
mov
cmp
test
dec
mov
ljmp
and
mov
cmpsl
xchg
jb
mov
push
leave
insl
cwtl
pop
mov
je
imul
shrl
cmpsl
cmp
jno
mov
adc
push
dec
insl
ss
cli
jnp
ret
rorb
test
aaa
cmp
push
fcmovne
xor
psrld
or
outsb
push
push
add
xchg
std
xchg
rolb
adc
mov
leave
aam
mov
ror
adc
jb
adc
fsubs
imul
lahf
push
xchg
popf
jge
add
loop
cmp
daa
cmpsb
popa
add
xor
jle
ja
leave
das
enter
imul
adc
mov
or
testb
inc
xor
mov
gs
lret
sub
mov
call
jmp
sbb
add
insl
mov
push
mov
inc
arpl
jecxz
or
in
sarb
cmpsl
mov
sub
loop
movsb
nop
and
pop
push
imul
repz
cmpsl
xchg
sbb
mov
or
inc
stos
in
mov
decb
test
sub
test
jl
daa
adc
jl
xor
sub
jb
nop
xchg
mov
insb
xchg
adc
in
rcrb
out
loop
add
in
mov
cmc
andl
lods
dec
ss
mov
or
js
mov
xor
cmpsb
mov
sbb
xchg
movb
sub
dec
rorl
outsl
xor
pop
cmp
jg
adc
sbb
cld
sub
add
test
xor
mov
and
loopne
lock
das
mov
lds
cli
jp
lea
inc
push
inc
lea
daa
loop
jge
leave
mov
cmp
pop
mov
mov
push
push
push
outsb
stos
add
lods
mov
cli
out
inc
fimull
js
cld
je
ret
ja
xchg
shrl
xor
sbb
aad
dec
cli
mov
add
mov
in
repz
cmp
in
in
test
hlt
pop
xchg
pusha
lahf
mov
or
mov
negl
nop
ret
outsl
pop
lret
out
js
test
inc
sbb
out
daa
and
subl
arpl
scas
js
fistpl
mov
mov
dec
and
push
rcrb
in
mov
adcb
outsb
mov
lret
adc
popa
inc
pop
cmp
lods
lret
add
cltd
stos
sub
sbb
push
sar
cmp
sbb
and
jmp
es
or
test
sbb
int
out
stc
cmp
mov
leave
mov
adc
test
out
sbb
std
shlb
sub
cmc
daa
in
scas
mov
sub
or
in
jecxz
icebp
pop
sub
mov
mov
out
ljmp
xchg
jae
pop
push
xor
cmp
jne
jecxz
add
daa
cltd
mov
pop
sub
inc
cmpsb
dec
inc
mov
aaa
xchg
cmp
pusha
int3
xchg
cs
test
cmp
push
push
mov
and
pusha
test
jmp
cld
fbld
addr16
data16
in
insl
repnz
loop
cmpsl
cmp
mov
roll
jnp
into
adc
pop
addr16
sub
jge
outsb
subb
in
add
inc
call
cmpb
in
es
rcrb
aas
lea
lds
mov
pop
ret
clc
clc
dec
or
jp
scas
popf
mov
loopne
movsb
js
add
inc
cwtl
mov
imul
push
mov
inc
mov
in
mov
mov
movsl
out
xchg
lock
jg
test
add
pop
xchg
ja
pushf
pop
jecxz
xorb
add
mov
jg
inc
fildl
shrl
pop
adc
dec
dec
test
inc
or
cltd
dec
aad
inc
sarl
cli
jl
std
flds
hlt
mov
das
out
addr16
push
divl
xchg
icebp
cmpsl
ja
push
push
nop
arpl
je
cmpl
loope
iret
mov
leave
inc
outsl
fcomp
out
adc
or
psubq
push
add
loopne
sub
fadd
xchg
add
add
add
xchg
popf
cs
and
lods
cmovl
popa
out
push
adc
test
mov
shll
sbb
sbb
fwait
sub
dec
repnz
out
test
xlat
or
xor
aam
sahf
dec
lret
lret
cmp
mov
outsb
jo
adc
ret
xorl
cwtl
out
xorb
mov
in
mov
daa
scas
dec
pop
ret
dec
flds
je
mov
inc
jge
sbb
mov
scas
push
cs
dec
aas
addl
xchg
lds
dec
pop
aaa
fs
sbb
and
pop
mov
pushf
movsl
add
sbb
int3
inc
icebp
mov
mov
pop
cmp
mov
push
push
stos
adc
jmp
sar
sti
cld
adc
sbb
filds
clc
cltd
add
add
fsts
fwait
push
mov
loope
add
rorl
add
cmp
add
out
or
jae
mov
cli
shll
or
pushf
incb
jno
mov
mov
xchg
adc
leave
cli
xchg
shll
std
xor
cmp
sbb
inc
or
push
or
cmp
dec
movsl
xor
mov
inc
lods
xchg
pop
in
sbb
test
in
mull
jno
jmp
dec
add
pop
adc
xor
jo
enter
sbb
push
mov
cld
add
les
xchg
rolb
xor
jno
xchg
pop
pop
cmp
adc
lcall
lret
or
cmp
cmp
jp
pop
pop
test
shlb
rcpps
pop
inc
lea
jne
mov
adc
hlt
jp
fists
xor
call
push
decb
stos
daa
jns
jl
mov
aas
outsl
ret
cmpsb
sahf
xchg
faddl
and
xchg
xor
mov
out
push
mov
aam
mov
xor
or
push
icebp
cmpsb
fdivl
xor
mov
insl
jnp
pop
cli
cmpsl
sub
mov
add
aam
jl
sbb
dec
push
ret
sub
popf
icebp
mov
js
std
lea
stc
xor
test
in
movsl
mov
cltd
jbe
jo
fadd
xor
stos
xor
mov
cmpl
call
inc
mov
and
jne
ss
icebp
fs
sarb
xchg
shll
pop
or
std
mov
mov
inc
in
or
les
push
sahf
sub
notl
fwait
xor
out
sbb
cwtl
into
xor
pop
inc
fisubrs
pop
sbb
add
mov
js
loope
in
pop
jl
and
mov
clc
sbb
xlat
leave
popf
mov
lea
in
insl
ror
sbb
xchg
nop
loopne
xor
sub
in
nop
cmp
jb,pt
and
enter
cmpsl
enter
mov
pop
pushf
outsb
mov
popf
push
inc
sub
sbb
sbb
push
jecxz
pop
bound
adc
pop
mov
push
cvtps2pd
gs
mov
sbb
add
ja
in
ficomps
fisttpl
gs
loopne
aad
movsl
lret
dec
les
inc
icebp
or
add
mov
jmp
inc
sbb
popf
pop
cli
stos
or
leave
inc
push
push
in
jo
ret
inc
xchg
stc
mov
cmp
into
aaa
stos
fld
fdivr
in
mov
and
shll
pop
rcll
mov
inc
gs
cs
jns
jecxz
mov
and
je
mov
imul
movsl
inc
add
imul
dec
cmp
sub
xor
pop
xchg
cwtl
je
add
inc
in
jne
fbld
iret
je
sbb
xor
test
push
dec
cmpsl
mov
test
sub
cwtl
fsubs
push
mov
sti
dec
cli
sti
ja
aad
sub
testb
push
xchg
xor
push
xor
push
enter
inc
jg
adc
jo
rorb
adc
scas
into
rcrl
gs
pop
dec
ljmp
dec
cld
xor
daa
fidivs
push
inc
jp
cmp
and
push
sub
lods
jae
add
cld
bnd
mov
xchg
fiadds
cmpl
adc
std
stos
xchg
cwtl
aas
xchg
inc
fsubs
pop
or
imul
jae
push
jle
jne
mov
jp
das
popa
cmp
or
sub
movsl
jno
mov
daa
lret
icebp
addr16
mov
mov
jle
sub
ja
sti
cmp
leave
pop
sbb
adc
sub
mov
in
xchg
push
pop
push
dec
push
sub
lcall
sub
test
mov
clc
sub
dec
mov
ja
imul
mov
pushw
jp
add
lret
add
iret
imul
and
push
adc
data16
lock
outsb
repnz
jo
repz
mov
stc
cli
aad
cld
cmc
xor
icebp
movsb
mov
aam
or
adc
clc
inc
pop
repnz
push
sahf
jge
jle
xchg
push
mov
pop
push
lea
loope
fisttpl
jle
jl
xchg
xchg
mov
mov
ret
js
inc
pop
mov
stos
fimull
adc
mov
adc
and
mov
test
xlat
lret
push
insb
inc
jge
mov
add
or
jmp
out
jno
jle
pop
dec
lods
out
cmp
roll
xchg
push
mov
adc
pop
adc
fsubs
cmp
test
jae
push
std
jo
test
mov
add
loope
add
ret
xchg
mov
jnp
lcall
fidivs
rcrl
int
mov
and
jmp
divl
mov
jle
and
sub
xchg
ljmp
movsl
test
pop
adc
mov
adc
mov
mov
mov
or
push
mov
xor
sub
shlb
jp
aas
scas
nop
daa
scas
pop
lea
das
subb
mov
jo
sarb
lock
out
cmc
or
mov
scas
mov
mov
lcall
adc
push
testb
ret
aam
in
cld
jle
ret
das
cmp
and
aas
enter
push
or
repnz
or
or
lods
out
scas
iret
jns
mov
adc
cs
gs
loope
test
test
xor
xchg
pop
das
test
out
dec
sub
out
mov
jmp
lret
popl
mov
in
out
cltd
sti
rclb
fistpl
rcrb
mov
into
int3
mov
pop
cld
push
xor
stc
cmc
mov
ss
lock
lea
mov
adc
mov
rcrb
loopne
mov
jo
nop
mov
sbb
ret
add
ljmp
in
cmpsl
or
mov
sub
mov
and
std
push
outsb
fwait
inc
jb
addr16
push
fidivrl
jg
fstps
in
xchg
call
and
mov
push
js
lret
jge
xor
push
cmpb
data16
pop
int3
test
cs
cmp
ss
sarb
pushf
lcall
jmp
pushf
dec
xor
int
dec
adcl
ds
inc
inc
in
jge
dec
aaa
inc
sub
outsl
push
pop
dec
aaa
adc
ds
jae
jmp
inc
rcr
lcall
or
push
cmp
jl
test
mov
gs
imul
inc
out
cmp
mov
push
into
mov
ret
mov
call
sub
xchg
xor
sbb
lock
and
mov
test
mov
lea
inc
jo
inc
add
fwait
or
stos
mov
mov
addr16
dec
das
xchg
push
fwait
dec
mov
hlt
jmp
inc
hlt
icebp
push
dec
and
lret
dec
jle
cwtl
xchg
mov
xchg
shrb
js
in
xor
pop
or
fstp
fistl
push
mov
pop
sti
mov
cmp
stos
push
mov
mov
add
xor
nop
cmc
das
dec
adc
mov
inc
mull
shlb
aam
je
arpl
ror
repnz
out
jae
xchg
mov
ds
into
pop
push
xorl
pop
hlt
out
xor
mov
jnp
adc
mov
pop
ret
dec
pop
testl
or
xchg
cmpsl
outsl
xor
lea
jecxz
arpl
jo
adc
shrl
js
pop
pop
dec
stc
sub
xchg
shll
dec
in
push
bnd
push
mov
mov
and
cmp
cmp
jge
or
sub
lock
dec
or
lahf
ss
rolb
iret
aas
cmp
jle
pop
jno
mov
jno
mov
aad
jno
stos
dec
xor
scas
mov
js
sbb
mov
adc
xor
or
shr
inc
push
inc
fs
dec
sbb
and
int
xchg
adc
ret
pop
movb
mov
xor
fdivr
pop
in
outsl
insb
xchg
mov
push
mov
movsb
sbb
mov
sahf
push
test
sub
and
lds
mov
xchg
xchg
outsl
mov
push
rol
ja
xor
push
test
scas
loop
add
jge
cmpsb
sbb
inc
sbb
mov
out
movsl
or
cmp
and
fwait
lret
and
mov
xchg
rorb
dec
leave
cmc
stc
insl
cmovns
lret
sbb
lahf
nop
nop
clc
ret
scas
sahf
gs
inc
push
out
popa
mov
cltd
push
icebp
push
pop
mov
jle
mov
fmull
mov
sbb
stos
daa
cmp
test
insb
cmpb
loope
cmp
ss
pop
add
push
cmp
adc
mov
xor
in
sbb
xor
pop
sub
sbb
pop
and
jbe
push
inc
icebp
mov
and
xchg
cld
aas
loopne
add
lret
push
fwait
scas
sbb
cmp
mov
popf
sti
in
mov
cmp
call
out
xor
aaa
addr16
lcall
scas
lret
mov
add
mov
cmc
test
mov
or
push
push
repz
add
sarl
nop
ret
iret
dec
fnstsw
cmpsl
arpl
jb
decl
pop
lds
jae
inc
fisttpll
lret
push
aam
or
inc
push
mov
popa
inc
test
icebp
leave
sbb
orb
lret
data16
mulb
inc
pop
dec
int
jp
pop
xor
or
jmp
sti
inc
push
insb
fstps
psubsb
sbb
addb
loope
pusha
xchg
lret
push
cltd
mov
and
jae
into
sbb
sbb
mov
cli
mull
sbb
cltd
push
adc
cltd
dec
add
bound
mov
adc
mov
adc
sbb
pop
lcall
mov
push
mov
popa
inc
movsb
fists
add
lock
sub
stc
fiadds
jne
mov
push
jns
cmp
iret
pminsw
loop
push
outsl
xor
or
pop
add
mov
pushf
dec
push
adc
mov
lock
sub
xchg
push
jo
cmc
and
loop
insl
ficoms
in
jl
in
push
push
mov
push
imul
rclb
jp
popf
xor
cmp
mov
push
and
push
imul
xchg
dec
std
sti
aaa
repz
imul
iret
iret
stc
fdivl
scas
inc
mov
sub
rcll
push
mov
sub
test
mov
push
aas
mov
dec
imul
dec
insb
in
lcall
and
mov
imul
or
inc
mov
dec
loope
loopne
dec
scas
sbb
das
or
ret
repz
and
adc
mull
push
mov
scas
frndint
dec
add
or
xor
jge
xor
out
cmp
loopne
cld
lahf
push
ret
jmp
jo
xorl
jo
sub
push
repz
std
outsb
scas
mov
bnd
push
cmp
sbb
js
dec
mov
jl
test
jecxz
lahf
inc
mov
pop
pusha
push
jns
dec
cmpsl
jbe
cmpxchg
sbb
jl
fldpi
rorb
fsubl
jno
jge
cmp
arpl
nop
add
das
dec
xor
bound
icebp
ljmp
shl
inc
shll
rcrb
xor
pop
and
push
adc
in
loop
push
cld
xor
test
mov
and
cltd
xchg
sub
movsb
push
clc
jae
sub
aas
movsb
mov
jmp
lret
popf
cmp
xchg
sub
xor
pop
pop
dec
loop
mov
xchg
cmp
jno
cmp
enter
sub
xlat
stos
mov
push
mov
arpl
mov
fsubl
or
in
pop
push
lret
jae
xchg
jbe
inc
mov
lret
or
ja
addr16
or
subl
xchg
xor
xchg
fwait
xor
xchg
idivl
fstl
jmp
and
je
pop
mov
mov
imul
dec
cltd
cwtl
mov
dec
in
cmpsb
imul
jb
xchg
js
sar
movsb
aam
push
lcall
popa
cs
outsl
scas
mov
xor
cmpsl
movsl
cli
and
mov
dec
mov
xchg
mov
mov
repnz
dec
aam
test
push
push
sbb
sub
xor
test
sub
out
jge
mov
outsl
jl
fidivl
ret
std
adc
cmc
xor
call
jno
aam
mov
pushf
ds
in
pushf
sahf
orl
into
xorl
out
and
jnp
test
adc
or
rolb
movsl
loop
jp
test
cmp
stc
sbb
in
in
mov
or
inc
arpl
in
pop
mov
inc
out
jp
mov
cmpsl
insl
imulb
mov
jp
imul
fistpll
int
call
ret
sub
inc
mov
movsb
stos
test
gs
mov
sahf
xor
jle
mov
aas
xlat
pop
xchg
fcomps
ljmp
xchg
jnp
dec
push
aas
scas
or
or
xchg
jns
ja
mov
rcrb
stos
movsl
lahf
movsb
and
stos
icebp
int3
stc
imul
sbb
in
out
or
add
sub
jae
ds
sbb
enter
pushf
push
pop
loope
or
arpl
push
dec
dec
pop
cmp
fimull
xor
cwtl
pop
lcall
jo
cltd
sbbb
lea
lock
adc
mov
scas
adc
mov
xlat
aaa
fwait
leave
ficoml
scas
aaa
jbe
leave
mov
mov
pusha
dec
push
inc
and
repnz
bound
out
mov
pop
mov
mov
dec
cwtl
shll
ret
adc
jge
dec
bndstx
sbb
shlb
lahf
jmp
push
or
mov
popf
adc
inc
adc
xor
adc
pop
pop
jne
jae
es
repnz
jae
aas
repz
jns
and
je
xchg
adc
in
pop
jmp
xchg
add
shl
fnstenv
mov
sbb
inc
test
lock
int3
inc
cld
sbb
jg
dec
cmc
mov
aad
xchg
iret
or
push
pop
inc
jl
lods
pop
dec
mov
jl
out
cmp
inc
xor
push
sti
dec
add
or
sti
es
test
shlb
js
nop
cmp
xor
xchg
push
mov
aam
enter
int
pop
stos
xchg
fdiv
and
es
and
nop
das
mov
dec
mov
test
mov
mov
jae
jae
add
add
adc
pop
lret
mov
clc
add
pusha
test
mov
or
inc
and
ss
aas
sbb
mov
inc
adc
pushf
imul
in
sub
push
adc
popa
fsubrl
xor
xchg
loopne
dec
xchg
inc
scas
mov
outsb
fcomps
stos
cli
or
mov
and
xor
push
cmc
in
test
pop
cmp
push
insb
les
daa
imul
cmc
jmp
push
movsl
stc
stos
or
jmp
aam
pop
out
in
fs
sbbl
sub
sub
fstpl
dec
jecxz,pt
xor
lock
stos
jo
push
into
sbb
lods
imul
js
ljmp
popf
insb
mov
repnz
mov
jmp
add
mov
aas
sub
test
inc
cli
or
mov
int
stc
int
sbb
pusha
lods
jae
insb
je
cltd
jmp
mov
fstpl
jl
out
pop
shlb
pop
mov
dec
sbb
in
pop
movsl
es
lea
pop
mov
in
push
sub
adc
lods
add
shl
jne
loop
mov
mov
or
mov
inc
jo
adc
add
jl
mov
sub
jae
push
faddp
xchg
fcom
test
fwait
ret
mov
je
out
popl
rclb
push
push
orl
mov
daa
and
pop
add
mov
je
cmp
inc
insb
mov
inc
dec
xchg
jmp
ror
cli
pushf
cmc
in
cmp
leave
or
into
fwait
inc
repz
sbb
mov
lahf
adc
stos
or
or
subl
xor
movsl
jbe
fldt
push
gs
and
pop
and
push
test
ret
jmp
lahf
lods
dec
jecxz
lock
mov
add
push
lahf
inc
add
adc
and
scas
jae
pop
jge
fmul
cmp
jne
int
add
sub
ret
in
addb
xor
shrl
mov
push
ljmp
xchg
hlt
cmp
push
daa
mov
sub
or
mov
std
test
push
or
xorl
sbb
test
leave
inc
adc
js
aas
push
inc
mov
dec
xchg
and
sbb
sbb
roll
xor
imul
add
fs
rolb
cmp
jmp
mov
test
and
jge
push
loopne
jae
mov
mov
mov
pusha
hlt
jge
fstl
xor
jae
xchg
loope
push
dec
js
sbbb
jl
mov
mov
and
cmp
test
jo
dec
push
pop
cmp
outsl
stos
in
cmp
pop
xchg
push
xchg
xor
int3
test
cwtl
fs
jbe
xchg
sbb
inc
sbb
and
ret
pop
je
dec
pop
mov
popa
jle
xor
arpl
add
xchg
mov
or
ret
lds
push
mov
aam
add
in
pushf
outsl
lods
cmp
ja
rcr
cltd
popa
in
subb
enter
out
dec
lahf
adc
jl
xchg
and
lret
dec
mov
aas
xor
rorl
mov
cmp
into
pop
pop
xor
pop
jp
lret
pop
push
icebp
fs
cmp
pop
arpl
mov
add
xchg
lods
push
mov
inc
pop
mov
xor
mov
daa
inc
cmovge
loope
jmp
push
xor
and
inc
sub
faddl
movsl
outsb
test
repnz
jo
in
jmp
dec
cwtl
inc
lods
dec
and
mov
mov
test
lea
push
int
sbbb
xchg
scas
push
mov
push
mov
je
mov
mov
scas
lahf
outsl
lds
aaa
clc
dec
daa
ljmp
jl
fnstcw
cmpsb
and
dec
dec
push
outsl
mov
nop
lcall
aaa
subb
nop
mov
shlb
nop
jmp
andl
loopne
popa
xchg
add
mov
cmp
push
scas
sahf
push
mov
lock
adcl
inc
js
stos
jno
cld
cld
mov
popa
push
xor
fdivrs
cmpb
in
cmp
in
mov
pop
mov
in
cmp
je
adc
pop
std
push
lahf
ret
mov
movsb
pop
fldcw
mov
das
and
pusha
inc
lret
repz
adc
pushl
rorb
and
push
mov
cmp
jns
cmp
and
ret
mov
adc
sbb
orb
arpl
add
rorl
push
out
ficompl
cltd
rcll
lods
call
sbb
lret
mov
in
cmpsb
jbe
adc
add
fstps
adc
push
jge
jno
and
sarb
xchg
push
in
sub
sub
aam
xchg
mov
popf
out
outsl
xor
dec
fbstp
inc
outsb
xchg
jecxz
push
lods
popa
jge
imul
fbstp
lods
fildll
jb
xchg
jge
xor
xor
or
repnz
sub
out
inc
and
icebp
popf
fisttps
adc
and
les
add
or
xchg
fdivs
loopne
and
xchg
orb
clc
test
je
test
cmpsb
das
push
push
imul
loopne
jg
or
push
jle
mov
les
and
sbb
jl
cmp
jmp
sahf
dec
ret
pop
aas
jmp
fidivrl
push
mov
insb
xlat
imul
inc
mov
xor
and
sub
cli
stos
fwait
mov
test
adc
adc
mov
sub
push
mov
add
or
push
cmp
inc
popa
bound
scas
inc
lock
jg
jl
lea
adc
hlt
jle
clc
jne
jmp
cmp
pop
sub
loopne
mov
lcall
inc
scas
or
fimuls
orb
or
inc
das
inc
test
jns
jbe
sub
pop
inc
out
cmp
dec
ret
push
cwtl
mov
add
mov
xorl
imull
push
mov
ret
repnz
xchg
movsb
movsl
std
sub
mov
sbb
jecxz
arpl
imul
fimuls
xor
ret
fs
mov
mov
sbb
cld
push
xchg
out
or
cmc
rcl
jg
in
lods
pushf
lret
sbb
ret
sti
jmp
mov
je
mov
movsw
mov
and
jmp
push
push
push
xor
push
jecxz
mov
test
sbb
fidivs
pop
lds
rcrl
aaa
mov
les
cli
mov
bound
filds
mov
shrb
pop
nop
mov
fiaddl
jge
xchg
gs
jmp
stc
mov
das
outsl
leave
sbbl
out
popf
pushf
cmp
out
sub
mov
fiaddl
cmp
mov
pop
pop
inc
dec
dec
mov
out
mov
leave
repz
ss
imul
mov
imul
add
pop
daa
call
dec
lret
movlps
sub
mov
mov
cmpsl
adc
out
arpl
sub
ja
cmc
jo
iret
jns
mov
jle
jge
sahf
cmpb
pop
add
pop
jge
push
fisubrs
imul
shr
sti
enter
psrld
in
js
dec
fistpll
sub
roll
cwtl
cmp
mov
dec
inc
ret
lea
and
xor
adc
xlat
xor
shll
xor
in
jmp
mov
loop
out
loopne
or
xchg
in
xor
je
test
cmc
mov
mov
aas
sub
or
movsb
aas
clc
adc
jp
imul
or
test
xor
adc
dec
xor
movb
cs
fcoms
rcr
cmp
cmp
mov
pop
test
xchg
inc
adc
flds
mov
imul
stos
xchg
push
jb
add
movsb
fstl
add
icebp
stos
mov
fst
lds
mov
mov
adc
xor
add
xlat
mov
rorl
pop
xchg
movsb
ds
pop
push
sub
jg
push
fidivrl
inc
fistps
jecxz
or
push
decl
nop
pop
out
int3
jg
xor
sbb
fiadds
rclb
call
xor
cmp
add
jns
sub
test
decl
nop
or
ret
jmp
cmp
gs
jns
cmp
and
out
je
jle
push
xor
ds
xchg
daa
adc
or
jle
cmp
sahf
ret
cmp
or
fildl
sub
and
pop
cmpl
adc
scas
movsl
lret
or
jbe
aad
popf
es
jae
xlat
cld
inc
ror
mov
scas
scas
rorb
addr16
pusha
icebp
mov
sar
mov
in
add
data16
bound
fdivl
pushf
cs
mov
loop
or
xlat
sub
inc
mov
std
ss
out
and
xor
rcr
lock
fs
push
nop
nop
push
shl
mov
cmpsl
sub
or
pop
movsb
mov
adc
aas
jecxz
add
jae
fcomp
fists
xlat
ds
cld
scas
js
xchg
repz
add
or
rcrl
xchg
and
sbb
fwait
add
cmp
adc
fisubs
xchg
lods
mov
jle
fimuls
bound
cltd
or
filds
xor
xchg
xor
das
sti
mov
ret
frstor
lds
pop
fwait
xor
cmp
aaa
aas
push
xchg
fnstenv
jge
lock
push
repnz
iret
mov
popa
xchg
dec
test
push
pop
je
xchg
pop
pop
hlt
stc
test
xlat
cmpsl
das
xorb
sbb
scas
cmp
push
mov
mov
xor
test
push
insb
push
hlt
sub
or
add
mov
lcall
ja
adc
cs
push
cmp
xor
add
daa
aam
pop
sub
add
aas
push
pushf
ljmp
push
ret
sub
rcll
cli
cmc
mov
or
sbb
mov
bound
add
lcall
mov
fwait
out
fyl2xp1
stc
push
mov
std
mov
pop
pop
clc
sub
aam
cld
cmpsb
rcll
xchg
jae
xchg
mov
jbe
xchg
push
mov
jns
mov
add
push
loope
fld
stos
in
adc
mov
sub
pop
mov
fcmovnbe
pusha
popf
push
lret
mov
push
mov
out
movsl
stos
jns
pop
enter
aad
push
mov
jmp
add
dec
pushf
leave
adc
ljmp
adc
xor
and
mov
aas
xchg
pop
iret
adcb
push
in
sbb
call
sbb
mov
sbb
push
push
adc
pop
lods
nop
ret
push
pusha
add
sbb
inc
adc
shrl
sbb
std
ror
mov
test
adc
call
das
into
adc
jp
mov
dec
mov
xchg
pop
sti
ljmp
int
xor
add
xchg
add
fstl
pop
test
dec
repnz
pop
fsub
mov
imul
imul
sbb
jnp
idivb
loope
loope
and
mov
or
imull
cmp
loop
aas
popf
mov
inc
loope
push
push
nop
divb
push
outsl
fdivrs
shrl
int
cltd
jg
add
push
std
xor
and
loope
and
mov
and
push
push
mov
add
push
dec
lret
dec
mov
or
out
pop
nop
ljmp
iret
push
sub
jns
cmp
xchg
sbb
mov
stos
mov
push
pop
jl
int3
jbe
iret
shrb
mov
and
out
pop
jb
adc
arpl
xchg
jo
mov
and
enter
stos
inc
mov
xchg
movsl
mov
xchg
adc
arpl
xorl
mov
push
add
mov
and
ds
shlb
dec
mov
or
sbb
es
jmp
pop
dec
dec
out
mov
jecxz
mov
popa
jmp
data16
mov
xor
mov
std
jp
ss
std
nop
movsb
or
ss
push
add
dec
cwtl
pop
frstor
mov
pop
and
aad
hlt
adc
int
cmp
icebp
lock
shll
out
icebp
mov
xor
insb
sbb
pop
xor
push
aad
xor
pushf
jo
arpl
jl
ret
orl
les
sub
inc
out
inc
pop
aam
inc
loop
shll
jae
xchg
dec
icebp
jmp
leave
jnp
xor
leave
sub
xchg
lock
or
loop
and
call
xchg
loope
xchg
ss
add
xchg
test
xchg
jge
inc
sbb
shll
stos
into
push
push
lret
das
minps
adc
sahf
lea
xchg
movsb
jnp
leave
mov
mov
lock
xlat
mov
sbb
push
and
dec
movsb
shl
mov
loopne
leave
push
es
gs
popf
mov
addl
ja
stc
adc
adcb
sub
ret
dec
std
cmc
inc
xor
test
cli
mov
fimull
push
mov
push
push
or
cmpsl
adc
push
repz
mov
in
arpl
dec
into
push
sub
cmp
out
test
xor
cmpsb
xchg
fsts
push
or
mov
stos
xor
mov
repnz
or
scas
xchg
cmp
or
sbb
xchg
mov
jp
push
addr16
hlt
je
push
ret
push
lret
add
movups
pushl
in
or
xor
pop
mov
outsb
mov
ret
je
popa
outsb
stos
and
cmc
push
push
add
push
xor
xor
adc
ds
leave
lcall
jl
test
and
mov
testl
cwtl
pusha
push
sbb
pop
cwtl
dec
xchg
mov
pop
lods
mov
push
mov
cmc
shll
mov
push
int
sti
lret
cmpsl
dec
push
pop
push
in
mov
mov
adc
les
jle
pop
pop
sbb
xor
mov
insl
and
stc
call
mov
xchg
lcall
pop
push
push
push
stos
in
stc
jnp
bound
sub
inc
ljmp
and
ss
xchg
inc
and
andl
rol
add
mov
nop
faddl
sub
and
lds
fdivrs
cmp
mov
xchg
fs
or
lcall
loop
sub
xchg
and
outsb
ja
sub
push
adc
test
mov
jbe
jle
cmpsb
test
jae
fimull
icebp
inc
inc
jmp
cmpsb
ljmp
dec
lock
push
mov
and
andl
and
cmp
adc
lret
mov
in
jbe
dec
xchg
inc
lret
nop
rcrb
je
sub
cmovbe
gs
xchg
dec
xchg
pop
sub
or
push
mov
sbb
jecxz
into
mov
loope
or
movsl
mov
mov
into
xor
add
jecxz,pt
ret
xchg
push
push
pop
cli
idiv
int
cs
adc
out
dec
std
jbe
or
xchg
and
rolb
sbb
inc
fmull
xchg
dec
fadd
in
lret
ret
loopne
jp
mov
lock
aas
push
add
ret
je
mov
push
pop
cld
aaa
cmp
iret
inc
mov
xor
iret
xchg
jno
into
adc
in
pop
push
call
repz
fsubrs
mov
dec
pop
cmp
cmp
xchg
lock
stos
xor
ja
or
punpcklbw
add
xor
jno
or
adcl
movb
in
jns
in
leave
sbbl
mov
je
lods
or
shrb
push
mov
pop
daa
daa
push
jbe
lret
mov
inc
inc
loopne
sarl
fnsave
mov
pop
cltd
or
pop
mov
es
repz
jnp
imul
sti
adc
andb
cmp
movsb
jbe
sbbb
mov
mov
sub
push
iret
dec
gs
mov
pop
push
fs
sbb
adc
xchg
fwait
add
xchg
pop
stos
iret
sub
cmp
mov
dec
or
sub
push
mov
pop
in
sub
aam
xor
jl
aad
test
xchg
jl
pusha
loop
dec
out
dec
out
cmpsl
or
int
les
mov
or
fnstsw
dec
clc
jmp
sub
sarl
add
test
into
dec
insb
test
imul
and
mov
add
ret
xchg
sub
insb
aaa
test
sbb
lahf
inc
add
jb
xor
test
push
dec
and
das
mov
loope
bound
sbb
movsl
dec
sbb
xchg
ss
xchg
xchg
lods
xchg
clc
testl
scas
mov
ficoms
cwtl
mov
aam
jl
repz
dec
pop
pop
out
mov
stos
mov
xlat
fdivrs
fdivrl
lock
enter
push
and
xor
inc
cmpsb
mov
daa
mov
mov
xor
scas
jnp
mov
pop
xor
fs
rolb
and
push
in
push
pop
sub
pop
call
inc
lahf
repz
test
fsts
mov
fxch
mov
andb
into
loopne
xor
xchg
sbb
xchg
in
sub
inc
mov
shll
sbb
negb
adcb
cli
jg
push
cmp
ss
or
mov
enter
lea
decb
in
or
jmp
aas
je
or
je
dec
pop
in
stc
jo
xor
cwtl
or
testb
jl
xchg
int
fsts
clc
les
cmc
sarl
arpl
pop
inc
dec
js
ret
hlt
cli
jno
mov
in
inc
outsl
pushf
pop
in
inc
cmp
xchg
lea
insb
stos
pop
bound
or
pop
enter
iret
int3
inc
sub
in
mov
xchg
or
add
clc
gs
cmp
mov
mov
xchg
sbb
scas
jge
jp
mov
cmp
dec
push
daa
inc
mov
inc
js
mov
int3
add
jnp
lds
dec
test
adc
pusha
jge
and
aas
pushf
jo
pushf
cmp
push
cmpsl
xor
mov
cmp
mov
pop
pop
mov
jle
push
push
out
fwait
and
in
push
mov
into
push
sub
rorl
aaa
fwait
adc
dec
mov
xchg
mov
stos
mov
mov
push
xchg
outsl
je
sbb
push
test
push
jno
dec
stos
clc
and
or
test
fs
mov
into
ret
ret
mov
jmp
push
jo
loope
lahf
adc
rcl
movsl
insl
leave
out
addr16
push
leave
pop
aas
inc
cli
push
call
js
mov
or
lcall
xor
sbb
ja
jge
cmc
pusha
or
mov
dec
lahf
mov
addr16
mov
maxps
xor
loop
or
inc
mov
xor
cmpsb
dec
mov
push
cmpsl
movsl
out
or
fdivrl
adc
ja
test
inc
mov
adc
pop
lret
scas
mov
iret
add
xor
enter
jb
add
or
sub
int
fildl
mov
addr16
and
sbb
pop
adc
lahf
sbb
add
lret
jle
scas
fisubs
ljmp
xchg
aaa
adc
arpl
lods
and
mov
cmp
adc
loopne
and
jnp
orb
push
or
add
sub
mov
dec
xor
pop
iret
cmp
xchg
testb
add
mov
push
test
loop
and
pushf
add
or
in
fistpll
lcall
cltd
xor
lret
jmp
cld
imul
aad
movb
repnz
sub
jmp
std
mov
pop
mov
xchg
dec
and
mov
into
push
dec
aad
xchg
std
popa
mov
pop
movsl
scas
inc
pop
insl
scas
sbb
lret
mov
ljmp
add
ss
pop
sbb
jge
in
fstl
sbb
imul
mov
cmc
and
sbb
inc
xchg
and
ficoml
mov
leave
push
hlt
int
jg
cmc
dec
cmp
test
fstpt
inc
scas
jmp
stos
and
cmp
mov
aas
dec
fdivl
insb
repz
lods
mov
movsl
into
cltd
test
push
push
into
xchg
iret
pop
push
inc
add
pop
sti
je
dec
test
cltd
cltd
popf
or
out
jge
push
call
jns
add
fwait
xchg
jmp
std
loop
mov
lret
dec
inc
lods
repz
jge
cmp
addr16
test
inc
adc
mov
xor
jbe
stc
jecxz
inc
outsl
cmpsl
push
enter
idivb
push
cmp
popa
icebp
xchg
int3
aad
call
xchg
cmp
pop
jno
mov
movsl
loope
pop
inc
push
insb
cmp
movsl
pop
lock
sub
xor
repnz
adc
cmp
push
jmp
xchg
leave
dec
filds
loope
and
jg
popf
add
mov
lds
inc
xor
stos
rol
add
push
push
jl
les
inc
xchg
jb
outsl
mov
inc
jl
lods
aam
cmp
and
add
lds
mov
jecxz
sbb
and
mov
sahf
repnz
sbb
mov
xchg
dec
sub
pop
lds
push
lcall
scas
jp
les
mov
cmpsl
ret
aad
adc
push
pop
sahf
push
ret
fdivs
pop
dec
subl
or
ret
jp
je
dec
cmp
xchg
imul
daa
add
movsl
iret
pop
pop
sub
and
test
mov
sub
ror
mov
clc
push
mov
test
sahf
sbb
sub
test
jge
jnp
dec
jb
mov
pop
int3
scas
adc
mov
sete
jecxz,pn
adc
and
call
stc
fsubrs
insl
xor
js
xor
push
and
lahf
mov
xchg
sub
enter
mov
pop
xchg
push
jle
loope
xorl
incb
pop
xchg
in
add
fs
or
shrb
mov
add
mov
mov
ljmp
into
xchg
lret
dec
mov
xor
ja
aad
mov
in
dec
aad
pop
and
mov
scas
xor
or
mov
or
mov
sbb
div
push
xor
mov
movsb
sarb
pop
andb
jmp
adc
loop
xor
std
rcrb
out
mov
ret
lock
out
jne
les
add
or
sub
mov
loop
xor
dec
sbb
dec
out
or
push
lods
outsl
jecxz
dec
dec
shr
es
mov
pop
sbb
aam
or
xchg
js
push
push
ja
jb
stc
jmp
xchg
push
addr16
dec
mov
popa
dec
sub
push
or
cli
in
inc
inc
cwtl
push
mov
pop
inc
lahf
jae
xchg
adc
pushf
shll
cmp
push
daa
jp
cld
fwait
stos
inc
cmp
and
jmp
inc
sbb
jno
sub
adc
jecxz
mov
adcl
adc
mov
sub
add
daa
lahf
sbb
mov
pop
fstpl
sbb
orl
addr16
dec
rolb
stos
cmpsl
les
and
aad
mov
cmp
xor
mov
cltd
scas
fadds
lds
pop
scas
xchg
mov
jo
popf
or
or
daa
cmp
and
pop
sbb
out
xchg
shrb
pusha
push
mov
in
lret
sbb
jno
mov
call
mul
inc
dec
or
rcrb
xchg
mov
ljmp
daa
aad
pop
mov
adc
add
es
mov
xchg
mov
icebp
pop
lret
inc
lds
and
lods
outsb
mov
mov
les
dec
jb
scas
cmp
dec
pop
sbb
out
dec
loope
stos
inc
mov
call
into
out
outsb
leave
mov
mov
pop
addl
add
mov
xlat
xor
loopne
push
gs
mov
dec
or
fwait
in
les
enter
in
data16
mov
rcrb
test
ret
cwtl
mov
sbb
sar
xchg
repz
roll
or
mov
jae
cwtl
mov
inc
mov
jns
add
pop
add
dec
sahf
jne
out
cmp
push
sti
popf
out
gs
repnz
testl
add
sbb
jne
rcrb
ljmp
arpl
adc
jp
aad
jg
shll
mov
stos
mov
cs
out
sbb
rorl
stc
loopne
adc
push
add
sub
mov
inc
decb
dec
dec
pop
push
das
add
adc
mov
scas
cmp
popa
cwtl
stc
nop
jae
test
lock
cli
subl
ss
out
je
adc
pusha
pop
outsl
lods
outsl
popf
stos
out
jecxz
cltd
test
cmp
add
cltd
jno
pop
jl
xor
add
dec
pushf
pop
jp
jnp
cmp
jb
lret
daa
js
daa
shr
pop
pop
dec
loope
shrb
mov
adc
daa
add
inc
mov
mov
cmp
loop
sbb
ss
mov
pusha
fistl
or
inc
adc
dec
mov
ret
cmpsb
je
ret
pop
or
add
sbb
mulb
sbb
xchg
insb
add
cld
add
imul
jnp
mov
sbb
push
ss
shll
fcoms
mov
aam
outsb
je
inc
aaa
repz
push
xor
rcrb
sbb
and
cld
dec
lcall
cltd
lods
add
scas
lea
mov
inc
mov
jae
push
sub
js
push
mov
jge
cmp
inc
xor
fnstcw
sub
lret
mov
int
je
lds
xlat
sbb
stc
cltd
and
xorb
jg
mov
loope
and
jo
jbe
stos
mov
std
js
and
cli
push
pop
in
loope
inc
add
add
rolb
mov
mov
ds
pop
or
dec
adc
and
clc
push
scas
pop
jns
and
pushf
fs
frstor
xor
mov
jne
rclb
icebp
test
aad
sbb
std
lret
inc
fists
mov
xchg
cwtl
mulb
mov
xchg
sbb
in
data16
sbb
dec
jmp
xor
fidivrl
arpl
mov
in
jmp
mov
fisttps
dec
pusha
enter
jbe
lret
in
divb
jecxz
xor
push
test
jge
add
ja
icebp
sub
movsl
test
sbb
mov
les
in
shll
es
adc
out
leave
adc
add
adc
mov
test
jbe
dec
ficomps
xchg
mov
mov
sub
sub
popf
mov
test
inc
test
jo
je
mov
addr16
pop
push
dec
daa
mov
out
loopne
cmc
cmpsl
lock
xor
clc
enter
mov
jno
orl
cmp
and
cmp
dec
mov
mov
cwtl
pop
dec
xchg
mov
lcall
and
dec
or
xor
xchg
jns
push
sti
jno
xchg
dec
xlat
sub
cwtl
insl
rorl
mov
mov
es
cmpsb
int3
or
cmp
mov
push
cmp
xchg
nop
sbb
xor
mov
fidivl
xchg
ret
clc
pop
mov
out
jo
js
pop
dec
pop
push
cli
xor
gs
inc
add
das
mov
jg
adc
add
cmp
repz
aad
test
add
jl
adc
rolb
and
rolb
scas
jle
rcll
xchg
rorb
loope
movsl
icebp
popf
pop
shl
insl
enter
rcr
mov
mov
out
repnz
pop
ret
push
test
add
mov
jb
push
test
xchg
mov
push
mov
sbb
adc
repnz
inc
les
xchg
or
jne
sbbl
dec
sar
or
jnp
stos
mov
repnz
out
fsubrl
xor
push
mov
mov
cs
and
mov
jecxz
fwait
cld
mov
cmp
cmc
sbb
jns
loopne
std
fisubs
loope
fsubl
sbb
sub
dec
lahf
out
leave
aam
jp
mov
stos
inc
adc
inc
dec
push
cmp
and
pop
adc
mov
js
dec
pop
adc
cmp
xchg
pusha
loopne
aas
leave
loopne
addb
ficompl
sbb
cmp
das
aaa
xor
or
pop
jle
dec
fidivrl
movsl
jns
inc
subl
sti
mov
aam
aaa
push
ja
push
clc
inc
lret
jo
mov
cld
in
jl
icebp
in
dec
cli
inc
cmc
add
pop
and
icebp
cs
mulb
lods
inc
cld
jns
call
adc
push
ficompl
popa
fistl
stos
nop
lea
xchg
inc
mov
jo
out
xor
mov
hlt
pop
inc
and
cmp
lret
push
leave
xor
sbb
jmp
fisttps
lret
nop
jb
push
xchg
rcll
xor
dec
pop
test
cmpb
or
xchg
xor
and
inc
push
ss
cmpb
movsl
shrl
aas
in
push
cmp
adcb
js
mov
rcll
out
jno
mov
daa
push
lock
xchg
call
add
pop
cmp
push
test
nop
lock
mov
xchg
xor
and
adc
lahf
adc
push
cltd
push
dec
xchg
mov
jle
sahf
inc
jg
xchg
jecxz
or
out
pop
inc
mov
and
pop
andb
jo
int3
in
dec
pop
cmpsl
fdivrl
scas
sbb
fisttpll
pusha
adc
mov
mov
pop
pop
dec
adc
outsb
repnz
jg
or
inc
and
test
test
mov
xor
cli
mov
jl
in
stos
in
cmp
jno
sti
sbb
fldlg2
stc
push
push
xchg
dec
into
es
dec
mov
fdivs
icebp
or
jl
aam
adc
sbb
or
inc
rorb
and
stos
test
mov
sub
sub
imul
popa
adc
out
jns
cli
or
clc
sub
add
push
cmp
push
cltd
or
pop
sbb
rcrb
inc
cmp
mov
sub
rclb
mov
int
shlb
or
add
xchg
gs
cmp
inc
pop
jo
xchg
xchg
jb
inc
adc
and
sarb
push
clc
ja
cmpl
in
jbe
inc
sub
movsb
inc
stos
loop
jno
cmp
sbb
insl
jno
imul
cmp
sbb
pop
push
rclb
mov
in
jnp
xor
sub
dec
cmp
in
jle
jno
xchg
dec
inc
in
adc
adc
idiv
push
pop
pop
sti
dec
js
xor
insl
movsb
loopne
inc
or
aam
jb
pushl
mov
stos
cli
ror
in
adc
test
lds
push
mov
int
clc
pop
repz
push
shll
popa
leave
leave
fidivl
inc
test
fpatan
cmp
test
in
sbb
sbb
add
adcb
push
cmpsb
mov
bound
std
jmp
mov
fcompl
nop
ss
fs
aad
mov
jb
jae
jae
ret
add
jge
daa
jmp
push
xchg
and
aaa
pop
inc
bndstx
xor
jae
ror
dec
add
decb
inc
call
leave
fsubr
jno
mov
sub
cmpsl
dec
or
in
scas
clc
call
test
jge
cmp
rol
bnd
dec
and
push
nop
jge
aas
ret
pop
enter
jmp
mov
or
das
int
and
ja
jne
les
cwtl
add
xchg
mov
ds
lret
xor
and
dec
in
and
add
int3
clc
rep
pop
sbb
pop
out
into
dec
or
test
fisubrl
dec
pushf
dec
stos
mov
test
icebp
data16
frstor
push
mov
in
cld
jns
xchg
mov
xchg
mov
test
rcl
sub
icebp
cmp
adc
negl
into
les
iret
es
sub
je
pusha
inc
pop
cltd
add
aas
sahf
nop
repnz
xchg
cmp
xor
adc
push
lret
mov
fidivs
xor
in
mov
push
cld
mov
pop
inc
xor
sbb
or
cmpsb
add
adc
adc
std
mov
dec
fimull
jecxz
inc
xchg
lcall
push
les
mov
mov
or
or
addr16
push
je
jae
data16
fcoml
jo
add
nop
push
cmp
add
jb
dec
or
inc
in
xor
push
sar
test
jge
daa
mov
xor
pop
mov
xor
mov
lock
push
lods
rcrb
mov
enter
std
lahf
pop
sbb
mov
dec
jg
xor
mov
jg
jmp
scas
insl
push
add
rcll
aaa
out
testb
push
pop
inc
bound
xor
shrl
ret
cmp
xchg
out
adc
inc
push
xor
push
ss
push
das
pop
ret
push
dec
ljmp
fbstp
jnp
in
cmp
xor
xor
scas
repz
adc
mov
jbe
les
stos
jecxz
daa
jae
sbb
or
sbb
jl
xor
mov
mov
popf
adc
push
aas
jb
xlat
aam
mov
fildll
pop
aaa
incl
fstpl
xor
aad
sub
popa
cmp
mov
inc
jecxz
sub
mov
pop
xor
xchg
ficoml
push
shrb
push
sbb
fisttpl
in
cli
movsb
and
in
lcall
cmp
pop
lret
xchg
mov
jle
out
nop
cmpb
jb
pop
xor
jb
and
lcall
in
jno
loop
mov
cmp
lods
stos
jg
shr
inc
inc
cmpsb
xchg
inc
jo
sbb
std
adc
xchg
dec
outsb
aad
int3
fcmovbe
jnp
pop
stos
cmpsl
in
pop
shll
and
aam
mov
mov
inc
add
inc
mov
lds
sub
clc
repz
aaa
push
rcll
cmpsl
xor
outsl
cltd
xlat
and
xor
cmp
imul
ss
push
lds
shl
aam
inc
mov
andb
add
mov
aaa
lahf
push
decb
jmp
imul
iret
pusha
aam
notl
rcll
lods
push
ds
nop
push
clc
ficomps
scas
loop
jne
and
das
into
sahf
xor
lcall
test
push
pop
inc
mov
mov
sbb
cmp
cmpsl
adc
mov
lds
cmp
pop
cwtl
mov
out
out
rolb
mov
int3
icebp
js
pushf
lret
inc
jo
mov
sub
mov
cld
push
pop
cmc
mov
adc
jp
cmc
loopne
mov
in
mov
inc
add
into
or
xchg
xor
and
xor
insl
into
push
mov
push
xorb
je
imul
bound
clc
pusha
pop
ljmp
js
xor
fidivl
mov
jae
jnp
aas
push
clc
cmpsb
popf
or
pop
push
mov
stc
stos
xlat
push
sbb
mov
cmp
dec
jnp
jb
in
lods
jmp
mov
sub
rep
inc
insl
out
rcl
xchg
xor
jmp
rolb
xchg
fstps
push
adc
sub
dec
sbb
test
popf
xor
xchg
and
cltd
mov
repz
leave
xor
insb
mov
repnz
mov
test
aam
xor
popa
mov
sub
data16
inc
or
lods
sub
sbb
xchg
into
push
push
lret
and
popa
outsb
xor
lods
cltd
stos
sub
mov
xchg
mov
jecxz
or
cmc
jp
pop
idivl
push
repz
ret
ds
xchg
data16
mov
orl
mov
lock
xchg
fisubs
dec
push
xor
aas
dec
enter
cmp
icebp
ja
xor
psubq
movb
sbb
cmp
mov
iret
cs
cmp
fwait
dec
adc
notl
lock
dec
mov
mov
cwtl
add
addr16
imul
pop
flds
sbb
lcall
call
mov
cltd
cmp
or
cld
int
jbe
mov
xlat
add
mov
arpl
mov
subl
into
push
arpl
data16
div
int
xor
sbb
mov
aam
arpl
dec
lods
sub
in
xlat
imul
fsubr
cmp
subl
enter
mov
lcall
pop
or
es
sub
loop
pop
out
pop
lods
sarb
xor
loopne
in
mov
jg
mov
out
mov
pop
andb
call
lret
cmpsl
mov
adc
inc
es
addl
mov
cmpsb
int3
mov
xor
pop
push
pop
fs
enter
add
sub
or
dec
movsb
pop
aas
cmp
jle
cmp
repz
addr16
sbb
cmp
sbb
xchg
xchg
xor
js
push
lds
sbb
jns
pop
dec
cmc
rclb
outsb
jmp
lock
mov
inc
mov
std
popf
test
fucomip
adc
pop
jmp
loop
mov
mulb
and
inc
fdivrl
pop
xchg
clc
inc
adc
jno
test
inc
arpl
sbb
push
pusha
xchg
andl
cwtl
out
xchg
dec
ja
jnp
movsb
or
cmp
sub
loopne
arpl
mov
sub
int3
test
in
jle
nop
xchg
adcb
xor
mov
cld
sbb
bound
pop
add
hlt
push
fsubl
mov
ss
cmp
je
sti
das
jl
pop
popa
loopne
test
xchg
call
mov
iret
ud1
iret
std
ds
push
inc
movsl
push
mov
push
and
movsb
ss
pop
mov
decb
dec
mov
sahf
js
imul
mov
in
in
ds
rorb
fstl
pop
out
jbe
insl
cmp
out
add
mov
es
adc
xchg
or
ret
and
ljmp
ret
mov
cmp
and
cmp
add
push
popa
pop
cmp
nop
outsl
lods
jge
dec
push
test
adc
inc
imul
and
jns
ss
pop
testl
psrld
add
ja
hlt
mov
mov
cli
loop
cwtl
ret
scas
add
xchg
dec
movsb
sbb
sbb
mov
aaa
pop
lods
push
lret
sub
mov
jmp
xchg
pop
jae
scas
lock
pop
test
pop
dec
aas
xchg
enter
mov
subb
inc
add
pop
push
sub
mov
jge
sbb
inc
shll
and
dec
enter
add
or
test
out
jae
repz
rclb
aaa
jae
cmc
nop
outsl
mov
aaa
jno
out
xor
imul
lock
dec
sbb
pop
repnz
pop
mov
call
mov
pusha
fwait
inc
hlt
fbstp
adc
daa
imul
mov
cwtl
repz
push
cmp
push
iret
push
mov
xor
pop
sahf
cmpsl
iret
loopne
mov
mov
pop
ds
adc
jno
mov
out
ficomps
xor
mov
das
repz
fs
movsl
or
scas
clc
adc
addr16
inc
add
xchg
mov
lret
lret
add
lock
mov
imul
mov
sbb
shr
adc
les
out
sbbb
jecxz
pop
insl
jmp
pop
jecxz
sbb
mov
out
xchg
adc
movsl
dec
ds
addr16
fwait
rorb
orl
incl
les
popf
shll
push
push
mov
xorl
jle
jg
dec
fistpl
lea
adc
push
xchg
mov
mov
and
into
push
dec
out
jns
jnp
dec
pusha
push
outsb
call
repz
popa
les
push
enter
stos
jae
repnz
negl
jmp
jae
pop
dec
cmp
xchg
outsl
lock
out
adc
repz
and
mov
scas
mov
jbe
imul
pop
pop
notl
jno
xchg
mov
jnp
divb
push
cmp
cmpsb
sub
fs
scas
mov
test
clc
pop
call
data16
aad
mov
and
ja
out
rorb
pop
and
mov
add
inc
xchg
and
hlt
arpl
fs
shl
jecxz,pt
pminsw
lret
filds
cld
mov
dec
xchg
sub
push
jb
clc
aas
pop
pop
lea
cmp
sbb
push
cmpsl
inc
lods
jns
push
fiaddl
nop
es
mov
jbe
std
mov
jecxz
jb
add
daa
in
fwait
and
pop
sarl
ja
mov
imul
adc
mov
popa
divl
shlb
in
inc
and
cs
shlb
jg
xor
sub
dec
mov
iret
repz
scas
int
pop
mov
sub
sbb
push
add
xor
xor
decb
js
push
jg
cs
or
jle
test
mov
push
movsb
xor
sbb
leave
int
cld
imul
insl
or
ljmp
sub
adc
and
imul
push
lret
lea
mov
dec
mov
xor
rcrb
push
jne
stc
aaa
imul
fbstp
cmp
or
xchg
inc
test
add
inc
into
testl
ss
imul
sbb
int
in
mov
inc
out
cmp
adc
dec
std
inc
rorl
mov
sbb
xchg
shlb
popa
sti
inc
aad
lea
mov
jno
jl
ret
lret
push
inc
out
adc
and
push
dec
sarb
test
shl
ret
and
out
lods
lea
cltd
enter
lea
dec
fnstcw
or
dec
addb
fdivrs
dec
push
outsl
sbb
in
xchg
cmp
inc
ficomps
jae
mov
inc
xchg
aad
test
and
cli
xlat
fcompl
cmp
fstpt
inc
outsl
mov
movsl
daa
pushf
hlt
cmp
pop
lea
mov
int3
dec
dec
aaa
cmpsl
jns
and
inc
int3
push
jmp
xlat
scas
aam
andl
out
imul
jle
aaa
inc
in
mov
xchg
and
int
aad
jno
sbb
ja
mov
sbb
leave
jle
test
xor
mov
fisubrs
ss
adcb
iret
push
xlat
adc
mov
lds
or
cmpsl
ret
lods
rcll
ja
jbe
jl
test
mov
std
imul
dec
insl
fwait
sarb
sbb
or
pop
roll
call
andl
cmp
in
into
in
mov
dec
fwait
push
andl
movsb
shr
or
in
mov
jbe
data16
cli
icebp
std
xorb
orb
aas
mov
lret
pop
push
in
cmp
jae
scas
fdivrs
ficompl
stos
addr16
mov
dec
jne
lods
loope
fdivrp
fstpt
ljmp
and
mov
push
out
pop
mov
lods
xor
insb
movsb
mov
sbbl
aam
xor
loopne
and
jbe,pn
repz
mov
in
inc
fst
xor
and
rcll
jl
imul
loopne
cld
lcall
arpl
ljmp
movsl
std
ja
mulb
testb
push
push
cmc
std
mov
mov
sub
mov
xchg
bnd
aad
dec
js
mov
rcrb
mov
lahf
sub
lret
call
test
dec
fs
fadd
loop
sahf
push
mov
popa
pop
and
and
into
xchg
xchg
mov
das
fst
adc
movsb
push
enter
mov
push
xor
push
mov
pop
or
push
nop
lcall
clc
addr16
fwait
outsb
push
leave
adc
lret
push
push
sub
les
adc
loopne
inc
jns
sub
jp
lcall
ret
cltd
aaa
insb
jg
mov
xchg
jo
imul
sbb
cmp
cltd
add
lret
mov
cmp
ljmp
sbb
sahf
add
cmpb
mov
and
rcr
xchg
mov
inc
imul
loopne
mov
inc
dec
insl
lods
sub
scas
fs
mov
aad
mov
sahf
inc
aam
xchg
mov
movsl
dec
mov
dec
jbe
fldcw
jmp
lret
lret
je
push
pop
jl
mov
fbld
jmp
xor
mov
mov
leave
lcall
mov
ds
xor
pop
lcall
lret
aam
cmp
sarb
adc
sub
xor
ja
adc
addr16
stc
mov
adc
pop
pop
dec
cld
stc
pusha
iret
fwait
dec
fcompl
push
in
rol
or
jmp
aam
sub
add
adc
int
dec
xor
sbb
testl
mov
scas
outsl
les
int
insb
negb
jb
imul
mov
push
scas
push
les
adc
stos
mov
imul
mov
cld
xchg
sarl
iret
push
das
push
xor
popf
les
sahf
hlt
in
lret
adcb
mov
loopne
in
jl
pop
mov
std
push
testl
lods
jnp
scas
call
cmp
frstor
push
lds
sbb
out
push
fcoms
mov
add
int
lock
aam
fwait
jg
orb
popa
mov
jo
or
sbb
in
mov
cmp
pusha
xor
out
mov
pop
or
je
test
daa
jne
in
cld
ret
fildl
adc
xchg
adc
fninit
scas
rcl
jmp
int3
test
mov
sbb
out
movsl
clc
or
mov
les
fisttpll
and
cmp
xchg
cmpsl
jnp
scas
movsl
pop
mov
push
mov
cmc
out
cmp
shll
inc
adcb
xor
pusha
out
cmp
cmpsb
cmpl
ja
movsb
sbb
push
decl
push
xor
popa
push
call
push
pop
int
xchg
mov
mov
repz
faddl
mov
xor
andl
fwait
jnp
jge
popf
hlt
push
je
test
mov
addr16
push
xchg
inc
mov
mov
testl
jo
hlt
insl
scas
pop
fistps
daa
stc
popf
cmp
fs
hlt
shll
in
mov
mov
std
jns
mov
cmp
outsb
mov
lcall
addr16
fbstp
jp
cmpsb
fsts
cmp
add
lods
ljmp
repz
mov
shrl
sahf
ret
test
inc
scas
mov
mov
jb
pop
mov
movsl
mov
mov
xchg
lods
insb
out
test
sub
jl
adc
cltd
xchg
dec
pop
lods
daa
jg,pt
das
mov
cmp
mov
fldz
ror
xchg
xchg
sub
ret
mov
jbe
lea
add
mov
in
adc
fldt
mov
movsl
jo
dec
mov
adc
test
cmpsl
mov
push
and
inc
test
sbbb
xchg
shr
pop
imul
jb
mov
inc
adc
mov
xchg
or
add
adc
aam
jns
inc
fwait
adc
mov
jae
lcall
jnp
sbb
scas
nop
sbb
xchg
jae
stos
aaa
fisubl
pusha
cmp
jb
cmpb
mov
inc
add
hlt
pop
xchg
cmpsl
ljmp
ljmp
ss
mov
mov
cmc
mov
in
adc
mov
mov
lods
push
addr16
lock
sbb
xor
lcall
push
mov
bound
insl
inc
imul
fiadds
cmp
jg
push
rcll
rorb
mov
jbe
dec
pop
cmc
jge
adc
xor
mov
xor
imulb
shlb
xchg
addr16
ss
push
idivl
inc
cs
icebp
pop
arpl
rcll
dec
ja
or
jecxz
imul
lahf
ljmp
cmpsb
push
in
add
dec
inc
or
pop
nop
sti
push
sbb
insb
outsb
adc
pslld
adc
fdivs
add
xlat
rolb
pop
test
ss
movsb
cli
mov
jnp
pop
stc
lock
xchg
add
fstpt
sbb
mov
inc
cmpsl
push
repz
mov
pop
out
sahf
fisubs
fyl2xp1
arpl
jbe
jbe
nop
push
mov
jns,pn
scas
aaa
or
jecxz
xchg
pop
mov
mov
inc
addr16
lcall
loop
lret
fcoms
cmp
daa
sub
jle
clc
out
insb
lret
push
mov
sbb
mov
je
mov
sbb
lock
jl
cmp
pop
jns
mov
test
aaa
sbb
daa
loopne
mov
lret
adc
rcrl
inc
andl
pop
das
lods
jns
fwait
cltd
iret
jmp
out
dec
fs
cmpb
xchg
mov
sti
sub
test
ds
or
or
push
into
imul
ljmp
lods
in
addb
rorl
out
pusha
shr
xchg
popa
rcrl
out
out
popf
xor
pusha
icebp
lea
mov
mov
scas
stc
sub
mov
push
rcll
jp
mov
shrb
pusha
sti
mov
das
sar
inc
mov
push
mov
stos
std
mov
bound
cmp
icebp
adc
jae
movsl
jnp
jl
push
pushf
xchg
mov
pusha
pop
fwait
sub
popa
clc
test
and
mov
ret
sub
movsl
out
pop
xchg
xchg
xchg
es
outsb
mov
mov
dec
in
movsl
rcrl
das
loopne
or
loopne
in
inc
inc
push
push
pushf
clc
in
push
cmpl
add
ss
pusha
out
and
push
scas
repnz
sarl
test
cltd
push
or
sbb
cmp
sub
ret
mov
imul
cltd
adc
dec
popf
inc
pop
or
movsb
xchg
and
cmp
push
lcall
inc
mov
xchg
and
cmp
add
mov
push
cli
sbb
in
dec
and
cli
push
xchg
xchg
leave
call
cwtl
sbb
daa
pop
lods
fldt
cmp
int3
mov
cmp
inc
enter
addb
sub
xor
loope
xor
bound
mov
aad
add
add
fsubr
cmp
ret
leave
cmpsl
ljmp
add
xor
xchg
dec
mov
or
hlt
arpl
xchg
dec
sbb
or
mov
xor
test
ja
mov
mov
test
dec
pop
push
js
xchg
js
in
imul
fisttps
mov
out
sahf
out
aaa
adc
push
mov
cmp
inc
mov
jo
pop
sbbl
xchg
out
iret
mov
jle
ss
mov
sbb
stc
dec
pop
jno
arpl
test
imul
mov
dec
jg
and
push
icebp
std
pop
lock
lods
push
adc
xor
push
out
mov
ret
ja
sbb
sbb
mov
mov
add
fistps
aaa
or
fucomip
xchg
xor
inc
jb
mov
push
or
mov
xchg
das
or
jl
mov
imul
fistl
bsf
mov
aas
push
pop
cli
xchg
dec
pop
or
jecxz
or
xor
test
mov
sbb
fsubr
mov
lret
jle
cmpsl
popf
fimuls
or
dec
pextrw
dec
sbb
mov
mov
sub
cli
sahf
adc
adc
cmp
arpl
mov
mov
cmp
shl
test
sbbl
xchg
mov
rorb
adc
push
mov
outsl
sub
jge
mov
mov
cmp
mov
jb
scas
nop
shrb
cmpb
out
dec
xor
enter
andb
sarl
repnz
in
pop
mov
pop
cmp
pop
lock
push
jmp
out
or
cltd
pop
add
add
mov
jecxz
mov
and
xchg
xchg
or
jl
ss
xchg
in
cmp
cwtl
in
das
int
or
sahf
stos
test
sbb
enter
dec
shr
inc
test
outsl
repz
dec
cmc
lret
test
sub
ror
sbb
mov
data16
push
bound
test
outsl
inc
mov
xor
sub
mov
and
jge
pop
xor
shll
cwtl
cmpsl
and
jmp
push
pop
repz
add
push
movsl
push
out
pop
lods
xor
and
iret
call
and
es
cmpsb
lret
pop
xor
mov
fs
lret
fsub
push
inc
scas
add
in
out
pop
loope
ss
pop
dec
adc
xchg
bound
xchg
push
and
dec
push
cmp
lods
cwtl
repnz
cmc
test
jg
dec
xchg
pop
push
pop
add
or
int3
cs
mov
sub
orl
mov
icebp
pop
arpl
ret
sbb
push
mov
movsb
jge
jecxz
jg
sbb
rorl
es
and
cmpsl
notl
in
or
pop
lds
jno
cmp
add
cmp
xor
jae
jmp
push
inc
arpl
inc
outsb
sbb
mov
push
mov
mov
mov
mov
aas
or
movsl
add
mov
ja
test
and
jb
dec
pop
movswl
cmpsl
xor
aam
jl
arpl
stos
ja
int3
xchg
lret
mov
lea
shll
mov
in
lods
mov
sbb
fidivs
das
stc
inc
mov
imul
mov
int3
mov
inc
arpl
in
js
push
cmc
ret
inc
jnp
jg
and
dec
scas
fwait
xchg
dec
fdivl
adc
test
or
jo
xchg
dec
jns
daa
jl
ljmp
rol
mov
sbb
mov
and
pop
xor
in
lret
pushf
into
or
mov
lcall
cmpb
fcoms
mov
fsub
xor
aaa
jl
shr
push
jmp
mov
dec
cmp
and
mov
dec
in
lea
movl
xor
icebp
stc
pop
fsubrs
aad
jecxz
pop
inc
xchg
cmp
leave
out
daa
pop
sub
mov
jp
xor
adc
sbb
mov
cmp
pop
out
cmp
jnp
int3
inc
shlb
add
sti
mov
mov
push
jno
pushf
mov
pop
shrl
sbb
inc
enter
inc
cli
xchg
fdivp
cmp
cmpsb
push
and
fdivrs
push
lods
mov
sbb
push
xor
pop
es
aas
fs
push
mov
in
sub
and
or
test
push
jae
aaa
sahf
bound
pop
imul
fwait
dec
loopne
push
scas
repnz
mov
popf
test
aad
icebp
sbb
push
dec
or
xchg
arpl
cmc
mov
cmpsb
fdiv
test
push
push
mov
int
scas
fcmovnbe
aad
sar
repnz
ss
cmpl
sub
cmp
xchg
adcl
push
cltd
mov
jbe
mov
push
addb
inc
adc
pop
dec
dec
push
sub
dec
into
or
jl
in
push
sbb
nop
es
jo
lods
cmpsl
loopne
in
and
jae
aaa
mov
inc
xchg
out
xchg
push
loopne
popa
sbb
cld
sub
cli
stos
mov
jle
xchg
fnstcw
adc
jb
inc
sbb
xchg
out
push
adc
ljmp
int3
lahf
cmp
subl
fisubs
jecxz
add
ss
gs
push
cmp
xor
iret
xor
inc
cmp
and
or
dec
xchg
xor
pop
or
imul
add
in
adcb
movsl
cwtl
add
pop
roll
inc
mov
pop
fs
fadds
xchg
inc
add
cmpsb
xchg
notb
lds
out
ret
jo
mov
idivb
sbb
rcrb
inc
call
mov
mov
ljmp
rcrl
mov
dec
leave
push
xor
ds
call
popf
loope
lea
cmp
inc
not
repz
mov
and
inc
add
or
mov
jge
addr16
in
xor
dec
push
stc
into
or
mov
cmp
sbb
mov
insb
mov
inc
scas
adc
nop
or
add
push
sub
mov
movb
jns
inc
cmpsb
aaa
cmp
sbb
imul
adc
inc
mov
jl
cmp
adc
lock
clc
sub
dec
xor
push
idivb
mov
push
and
xorl
aam
mov
aam
cmp
xor
iret
pop
mov
push
repnz
jg
xor
xor
popf
jg
dec
cli
cs
fmull
jne
cmp
jecxz
mov
fwait
pushl
ret
dec
je
aaa
xor
mov
add
test
sar
push
insb
test
aad
cmp
lea
xor
jno
xchg
outsl
test
call
lcall
fnstcw
pusha
xlat
iret
xor
loop
in
mov
ror
inc
mov
sbb
in
push
pop
xor
ja
int3
std
out
cmp
inc
test
add
xchg
shlb
js
push
arpl
push
sbb
and
bound
fidivrl
and
outsl
lods
sbb
dec
push
push
rorb
xchg
cmpsl
sahf
xlat
add
dec
sbb
mov
xchg
mov
xchg
jmp
mov
mov
mov
ljmp
rcll
pop
repz
test
xor
imul
xor
dec
ret
xor
sub
test
fimull
jmp
sub
dec
int3
mov
push
imul
stos
je
mov
xchg
inc
cltd
mov
pop
out
test
addl
and
sub
jp
xor
jb
add
mov
push
add
jo
mov
xor
adc
les
xor
dec
push
dec
mov
into
cmc
or
xchg
mov
pop
xchg
mov
test
clc
and
sub
mov
pusha
cmp
mov
movsb
imul
nop
aaa
push
or
push
lcall
push
ja
cwtl
pop
dec
mov
pushf
out
imul
and
mov
lret
mov
dec
cmc
hlt
sbbb
jno
aas
out
push
fdivrl
addr16
add
loop
push
cmp
adc
fwait
outsl
mov
sub
loop
adc
jecxz
mov
rcrl
jns
movsl
jg
out
jle
jg
push
fisttps
pop
adc
xchg
in
enter
cli
mov
sbb
cmc
jns
gs
xchg
pop
jnp
cmp
mov
leave
mov
popw
and
popa
in
mov
cltd
in
dec
test
lret
xor
and
repnz
sub
or
imul
inc
mov
adc
mov
mov
fmull
lret
fsubrl
inc
mov
dec
cmp
pop
xchg
es
imul
sahf
mov
pop
fisttpl
or
jmp
das
inc
cmpl
xor
xor
inc
xor
out
pop
rcl
pop
dec
jbe
and
arpl
mov
in
xchg
mov
test
arpl
mov
cltd
addr16
fisubs
pop
push
dec
aam
sbb
add
xor
pop
xor
xor
in
jecxz
pop
sbb
in
enter
mov
cmp
inc
lock
xchg
pop
xchg
jmp
push
mov
int
mov
shll
iret
cmc
dec
push
mov
mov
rcr
bound
fdivrs
enter
imul
jp
dec
xchg
adc
xor
in
cmp
lret
out
das
and
std
fstpt
fs
addr16
pop
and
mov
mov
sarb
lret
adc
je
movb
shl
clc
cltd
xorb
mov
aad
jl
nop
push
fadds
mov
lret
sub
pop
pop
xabort
xchg
fidivrs
mov
aad
mov
xor
fmuls
push
xchg
mov
lret
iret
pop
arpl
daa
mov
loop
sbb
pop
into
adc
in
fwait
mov
aad
lock
sub
cmpsb
lcall
inc
arpl
push
scas
inc
xor
cmpsb
fistpll
or
shl
xchg
inc
insl
add
stos
xchg
or
xsaveopt
mov
cld
pop
mov
cmpb
xor
mov
add
pop
or
into
or
jbe
cmpb
sbb
xor
test
push
adc
add
cmpsb
test
lahf
aaa
pop
or
cmpsb
test
cltd
dec
push
ret
add
jne
stos
dec
aam
frstor
push
in
sub
xchg
mov
cmpb
stc
int3
in
sbb
add
sti
outsl
ss
enter
addl
adc
adcb
cmp
sbb
sub
push
mov
or
sbb
lret
bound
add
fmuls
daa
imul
inc
mov
and
dec
popf
and
nop
xchg
nop
jo
call
sbb
rolb
mull
mov
ljmp
lods
cmpsb
ds
les
fdivr
push
repz
mov
adc
cmp
shr
jecxz
and
stos
rol
frstor
test
adc
out
aaa
mov
mov
sub
xor
fistl
ja
xchg
dec
inc
addl
or
jnp
insb
je
or
call
imulb
push
sub
mov
aas
pushf
xchg
push
jecxz
pushf
lds
insl
aam
push
xchg
and
mov
movsl
xlat
aam
or
int
outsl
or
insb
stos
sbbb
in
cmp
sub
push
jg
bswap
xchg
xchg
jle
cmp
in
test
fldcw
insb
cmpsb
js
dec
jo
xor
sub
out
and
sub
push
xchg
jmp
out
mov
out
outsb
mov
mov
add
fdivp
xor
xchg
and
mov
mov
mov
cs
test
js
mov
out
jl
decb
jo
sahf
jp
lahf
pop
ror
inc
addl
mov
call
pop
dec
mov
push
rcr
and
inc
in
fidivrs
std
hlt
jae
inc
cmp
hlt
jno
icebp
jb
push
jle
outsb
cmp
sbb
shlb
push
popa
xor
lcall
repnz
lods
jnp
or
sub
mov
lods
push
push
jae
add
inc
fidivs
inc
fwait
push
jo
cmpps
ret
cmpb
inc
or
sbb
out
aam
in
cwtl
xchg
pop
push
push
xor
push
dec
sti
scas
popa
xor
cmp
sbb
mov
dec
jg
fwait
jl
cltd
test
cmp
mov
mov
lret
mov
sbb
xchg
and
dec
jmp
inc
jno
mov
push
cmp
xchg
shll
mov
int
scas
cmp
ficoml
inc
cmp
hlt
add
mov
inc
adc
jecxz
mov
pop
pop
in
push
shll
xorb
jl
inc
insb
mov
testl
ljmp
mov
out
mov
mull
mov
inc
push
in
outsl
subl
jecxz
dec
sbb
sub
pop
inc
leave
addr16
in
jecxz
rolb
scas
test
mov
inc
mov
mov
cmp
mov
pushf
decb
or
dec
cmp
es
bound
and
scas
xchg
mov
sar
ss
cmp
add
cs
scas
test
sbb
pop
cmp
rolb
pop
push
mov
mov
and
add
cmpb
fdivl
mov
mov
jmp
mov
sub
test
lods
xchg
push
inc
or
push
lds
push
add
xchg
jmp
pop
leave
adc
xor
or
mov
icebp
pop
cmp
scas
mov
and
std
mov
jg
pushf
mov
in
insb
adc
in
fwait
outsl
push
push
loop
frstpm(287
sbb
add
lds
pop
push
push
and
cld
jecxz
sbbl
mov
cmp
mov
lcall
out
cmp
inc
mov
cs
gs
add
loop
inc
jl
sub
imul
popa
inc
cmp
ja
es
push
mov
outsl
pop
cmp
or
sub
in
shrl
fidivs
test
push
pusha
and
mov
sbb
aad
cmp
stos
jmp
and
mov
mov
mov
dec
sahf
negb
out
sbb
xchg
push
jge
mov
rclb
mov
les
iret
mov
jmp
loope
cld
sahf
or
flds
dec
int
xorw
sub
sbb
mov
imul
xchg
xchg
nop
jbe
push
xor
pop
lcall
mov
fsubp
jl
mov
push
outsl
aaa
adc
std
out
cltd
mov
mov
add
inc
or
mov
test
ficoml
cli
fdivs
pop
cmpsl
and
mov
ds
push
out
ret
in
pop
inc
lahf
mov
adc
ror
inc
fisttps
insl
mov
arpl
pop
xor
push
es
mov
rcr
sub
push
pop
or
ret
das
mov
mov
sub
jge
xchg
mov
inc
add
xor
mov
jo
in
lea
iret
xor
dec
push
adc
mov
push
inc
push
loopne
mov
pop
mov
ret
jecxz
mov
mov
add
add
lcall
push
stos
sub
cltd
mov
call
inc
ror
ds
jo
sub
inc
ds
cmp
out
fmuls
jecxz
adc
inc
jbe
fiaddl
cld
mov
jbe
jp
cmp
dec
das
insl
mov
into
stos
clc
adc
scas
or
repnz
or
cmp
dec
ss
sbb
and
sub
dec
ds
and
ja
dec
inc
pop
inc
cmp
xorl
jo
sbb
add
jle
iret
or
sub
iret
leave
push
fidivl
and
push
stc
lods
mov
pop
adc
jae
and
xchg
iret
lret
rcr
dec
shll
repnz
inc
push
dec
std
push
pop
cwtl
push
jp
push
in
pandn
cmp
ret
cs
insb
sbb
sbb
cmpsl
bound
scas
cmpsb
es
pop
rcrl
fcoms
enter
jmp
jp
push
jge
inc
xchg
out
mov
inc
xchg
push
push
outsl
adc
jne
scas
sub
iret
adc
lods
and
aad
jb
addr16
pop
and
insl
pop
xchg
pop
loope
adc
pop
xor
and
cltd
cmp
cmp
aaa
jle
inc
pusha
xchg
dec
cmp
dec
ficompl
inc
pop
ret
outsb
or
dec
std
push
sbb
orl
cmpsl
loop
incb
xor
mov
xor
lcall
xor
and
xorl
jbe
ja
pop
fidivs
cli
loopne
add
sub
add
pop
xor
jnp
cld
shlb
or
xchg
ret
rcrl
xor
xchg
mov
dec
adc
or
sub
cmpsl
xchg
aaa
lea
in
xchg
push
sub
leave
jbe
int3
movsl
repz
inc
pop
fwait
push
loopne
dec
out
leave
or
or
rcll
loop
test
addl
cmpsb
mov
or
push
jmp
push
pusha
out
ficoms
ds
int3
and
repnz
arpl
int3
in
and
sti
mov
or
jecxz
push
cltd
add
inc
fbstp
xor
cli
in
stc
rcll
cmp
mov
xorl
mov
push
mov
std
pop
out
adcb
addr16
jecxz
ljmp
bound
fcoml
fsubrs
fcmovu
pop
lret
in
scas
xor
fsts
jae
jle
and
adc
jecxz
mov
mov
xchg
addr16
subb
out
pusha
adc
cmc
mov
or
mov
andb
jmp
imul
jne
sbb
lods
jo
dec
inc
out
xor
cmp
jno
movsl
mov
inc
andb
pusha
iret
fs
or
xchg
push
lock
dec
mov
sub
sbb
pop
adc
popf
jne
lahf
repz
xchg
sub
mov
test
stos
sub
ljmp
aad
adc
inc
cmpsb
fnstcw
fdivrl
mov
pop
test
push
xchg
push
xchg
inc
bound
mov
mov
test
mov
aas
lock
and
jne
imul
adc
test
dec
mov
arpl
jmp
mov
dec
ja
sti
fadds
loope
inc
mov
nop
cmpsl
jmp
in
sub
cmc
jmp
jmp
jecxz
mov
jbe
lea
dec
xor
push
hlt
repnz
xor
add
xor
and
sti
adc
or
in
hlt
je
test
das
lds
add
into
jg
add
and
mov
jmp
cmp
imul
test
push
cmp
aaa
mov
dec
mov
push
cld
cltd
in
mov
sldt
mov
popa
decb
pop
test
sbb
push
pop
lods
lahf
inc
mov
daa
dec
inc
mov
inc
cmp
inc
adc
nop
dec
push
jae
and
pusha
aam
mov
imul
adc
inc
pushl
dec
push
dec
stc
test
out
jae
inc
call
ss
cmpsb
lahf
jno
aad
mov
jb
ret
jle
orl
shrl
repnz
push
outsb
sub
pop
pop
sub
jo
push
inc
call
mov
ficompl
inc
movsl
jmp
movsl
jnp
pop
mov
pop
push
sbb
inc
subb
out
js
sbb
lods
or
xor
mov
or
jmpw
shlb
cli
cmp
gs
xchg
addr16
repz
pop
scas
mov
xchg
cmp
jge
jecxz
out
fnop
dec
bound
pop
fdivr
xlat
jge
out
lea
and
lret
enter
fsts
ret
pop
popa
mov
adc
mov
cmp
or
sbb
sarl
mov
mov
cmp
fimuls
fisubrs
add
mov
pop
loop
pop
mov
into
and
stos
push
insl
cmp
xchg
call
pop
bound
nop
mov
cmp
inc
push
sbb
push
mov
out
pop
das
lods
addr16
or
ljmp
sub
mov
pop
sbb
mov
jg
or
sub
inc
mov
push
dec
shll
sarb
nop
jbe
sbb
jne
jne
fsub
pop
ljmp
mov
sub
mov
or
adc
bound
xchg
or
ret
push
std
loop
rcll
pop
ret
repnz
mov
icebp
sub
inc
out
pop
sti
adc
cmc
sub
mov
cmp
jg
pop
test
mov
jmp
aam
dec
push
mov
repz
jmp
addr16
push
xlat
rcrb
xchg
push
xchg
lds
in
or
xlat
push
jecxz
pop
mov
std
dec
xchg
push
loopne
cmpsl
mov
mov
jecxz
pop
cmp
dec
dec
inc
jle
push
xchg
cmp
les
pushfw
or
ret
mov
cltd
inc
das
ret
jo
mov
shll
enter
repnz
data16
adcl
pop
mov
push
add
dec
in
insl
mov
mov
dec
cmp
and
dec
movsb
sarl
pop
pushf
sbb
lahf
mov
adc
inc
mov
inc
mov
pop
shlb
xor
and
mov
je
push
jmp
jg
fnstsw
pop
subl
jl
cmpsl
movl
mov
callw
popa
cmovne
sahf
xor
mov
insl
lret
add
sbb
xor
lcall
adc
xchg
lret
mov
xor
notl
subb
push
pop
add
push
out
mov
dec
imul
out
jge
sub
stc
rcrb
mov
cmp
jbe
xor
sub
dec
test
cli
dec
cmp
mov
jmp
push
push
mov
inc
ja
mov
loope
arpl
popa
sbb
in
loop
lock
push
mov
arpl
mov
dec
bound
sbb
scas
int
std
aaa
mov
pop
jbe
jbe
ljmp
sub
imul
jg
pop
adc
out
lcall
enter
cmp
push
jmp
pop
mov
add
cmpb
mov
lock
fstp
xorb
mov
addr16
dec
jnp
inc
insl
outsl
lahf
loop
sub
cmpsl
lods
jl
cmp
fsubl
test
std
out
add
dec
cmpsb
test
scas
sub
inc
mov
scas
dec
lcall
xor
dec
pop
ljmp
test
adc
lahf
push
in
adcb
jl
pop
cs
popf
imul
icebp
out
loop
sbb
inc
arpl
ds
jbe
mov
stc
jae
jae
out
cmpsl
js
iret
xor
cmp
fldt
sub
add
mov
shll
hlt
cmpsl
push
mov
cmp
push
popf
jo
imul
hlt
jns
sbb
fcmovbe
add
jae
das
scas
and
sbb
lret
push
fwait
iret
cmp
setne
xor
xchg
fistps
pop
fsts
mov
sti
fnstenv
adc
push
divl
add
adc
test
mov
outsb
inc
loope
add
mov
cmp
int3
mov
iret
jo
decb
cmpsl
or
je,pt
popf
orb
xor
push
repz
dec
mov
popf
pop
push
pushf
xor
int3
jmp
cli
hlt
movsb
xor
rcr
cmp
int
iret
add
jg
aaa
imul
std
adc
jg
mov
sarb
jno
pop
sub
mov
xor
sub
and
roll
inc
jg
pop
mov
inc
hlt
xorl
jmp
rorb
hlt
push
rolb
jecxz
cmp
ja
adc
in
add
iret
push
daa
jnp
loopne
mov
cs
aas
jb
mov
fcmovne
jae
mov
das
mov
loop
adc
cmpsl
adc
dec
sub
push
testb
leave
dec
mov
or
mov
push
pusha
fcomps
xor
dec
clc
je
aaa
inc
add
js
lods
div
xor
xorl
rorl
or
push
stos
jbe
and
dec
jbe
sub
mov
or
mov
sub
xchg
lret
or
test
filds
mov
cmc
add
js
inc
popf
pusha
hlt
mov
add
movsb
loope
add
xchg
sub
lea
sbb
push
ret
jo
push
pop
pop
adcb
add
pop
in
dec
int3
cmc
jl
dec
scas
loopne
ret
push
mov
dec
pop
popf
lcall
test
jbe
aam
adc
pop
fwait
daa
jle
mov
into
mov
out
and
test
pop
pusha
subl
mov
in
adc
fcomp
jle
dec
cli
push
jp
popf
push
pop
ret
xlat
and
ss
iret
ljmp
mov
push
sub
mov
adc
mov
imul
pop
pop
push
xchg
pop
iret
jne
jle
in
test
fisubrl
mov
mov
stc
adc
mov
shll
dec
out
adc
or
out
push
ret
test
lret
sub
sti
int
mov
cli
sub
adc
mov
push
imul
jno
js
ficoms
ljmp
xor
stc
je
add
pushl
sbb
sbb
push
lods
loope
lcall
mov
outsl
xchg
adc
push
in
adc
ss
xor
out
clc
adc
sbb
arpl
jns
int
inc
add
xlat
fldcw
jmp
inc
jno
cltd
push
into
cmp
push
push
popf
mov
ss
outsl
sub
mov
ljmp
shr
xchg
jg
fnstcw
lea
filds
addr16
test
dec
rcl
stos
xor
pop
jns
mov
enter
jle
sub
lret
outsl
es
adc
mov
add
addr16
idivb
pop
popf
lcall
fnsetpm(287
pop
mov
xchg
sub
sub
and
push
adc
out
lret
xor
cmc
out
mov
sti
enter
pop
push
jb
repnz
les
mov
dec
and
mov
imull
mov
fnsave
cs
inc
cwtl
sti
jo
jle
das
jb
std
or
inc
pop
and
add
mov
scas
dec
ret
sti
mov
push
sub
push
mov
add
mov
and
jae
int
rclb
shrl
jne
mov
int
aaa
call
mov
movsb
ret
inc
shll
imul
in
ljmp
adc
inc
ret
bound
dec
xor
push
sub
clc
xchg
mov
mov
ss
je
adcb
mov
push
out
in
leave
insl
pop
xchg
cmpsb
ljmp
call
sub
mov
jno
mov
nop
comiss
jo
push
mov
arpl
fdivrl
dec
mov
clc
inc
fbstp
jno
ud2
mov
aam
xchg
xchg
xor
mov
push
jg
jae
mov
add
add
shlb
ds
dec
jge
mov
mov
and
icebp
test
or
inc
jg
push
mov
shll
add
sbb
cli
add
into
fdivr
nop
scas
push
and
dec
xchg
xchg
or
jno
xchg
popa
xchg
test
lods
sbb
jmp
setbe
ret
pop
sbb
cmp
hlt
sti
fisttpl
popf
popa
push
movsb
frstor
adc
push
andb
shrl
xor
lods
lods
mov
leave
int3
cmpb
repnz
mov
xorb
xor
mov
scas
jno
sbb
jbe
scas
jle
push
sti
sar
mov
shrb
sbb
sub
jle
sub
sbb
lret
push
sub
aaa
jmp
mov
ret
sub
cwtl
push
aad
pop
repnz
lret
std
xor
enter
leave
inc
pop
pusha
sub
into
imul
add
mov
fisttpll
pusha
jecxz
xchg
ja
dec
sbb
ja
push
loope
sub
and
sub
cmpsb
push
int
push
pusha
outsl
pop
std
scas
sbb
cs
mov
andl
push
bound
popa
inc
and
mov
fs
call
jbe
inc
or
stc
and
add
push
ret
scas
mov
adc
scas
cmp
lods
outsw
mov
jne
cmp
mov
cs
dec
cmpb
loope
or
cmpsb
dec
push
jmp
push
iret
mov
or
daa
std
adc
sub
xchg
push
lret
fstps
cmp
mov
inc
mov
adc
stos
aas
fldl
decl
mov
xor
dec
or
sub
int
lret
pop
xchg
pop
insb
movsb
mov
jecxz
jns
lods
mov
jno
repz
or
mov
daa
mov
addr16
gs
lods
in
ja,pn
rol
push
pop
loope
sbb
sbb
test
ja
mov
adc
xchg
inc
daa
mov
ret
jle
sti
dec
xor
adc
push
inc
or
lahf
jl
imul
mov
fcmovbe
stos
xchg
popa
js
movsl
dec
in
dec
shrb
sub
std
mov
jle
push
sub
std
outsb
mov
mov
cmp
lds
cltd
andb
std
pop
pop
cmp
add
enter
xchg
mov
nop
jbe
jbe
out
jnp
mov
rcll
xchg
rorl
xchg
cmpb
jo
jle
push
test
loop
fisubrs
ss
sub
sti
mul
dec
adc
jge
mov
popf
xchg
mov
xchg
mov
dec
arpl
dec
dec
pop
ficomps
mov
call
test
mov
in
mov
std
movsl
les
mov
adc
adc
push
push
leave
loope
insb
sub
sub
daa
lods
jecxz
cld
add
pop
mov
je
jge
mov
xor
sub
or
jl
pop
in
push
call
mov
cli
addr16
xor
push
popf
popa
cmpl
mov
mov
testb
hlt
lods
mov
adc
add
wbinvd
jnp
and
arpl
pxor
mov
mov
lds
ret
lods
test
cmpl
jmp
and
push
and
add
xchg
mov
mov
test
mov
push
int
pop
int3
insl
es
mov
push
mov
ds
aam
das
add
lods
lds
mov
lods
jb
mov
int
aas
dec
xchg
pop
push
ss
pop
adc
pop
dec
jp
xor
dec
mov
mov
and
push
in
pop
cmpsb
sti
mov
cs
gs
push
ljmp
pop
sub
cltd
pop
jmp
cli
cmp
sub
out
stos
out
mov
jnp
dec
pop
test
sub
aas
mov
xor
jae
or
addl
sahf
dec
sahf
mov
popf
mov
sti
pop
lods
in
push
sub
inc
ret
mov
xlat
sub
in
es
jno
pop
cmp
stos
dec
repz
leave
push
loop
sub
sahf
movb
in
mov
push
inc
mov
out
in
or
cld
lock
add
mov
xchg
imul
mov
loopne
cvtps2pd
das
mov
in
shll
mov
mov
dec
xchg
adc
xor
jne
imull
nop
xchg
out
ficoms
ret
andl
popl
fwait
fs
call
pop
inc
sbb
filds
cmpsl
mov
in
test
cmp
and
loop
repnz
push
sub
xor
xchg
add
push
push
dec
in
pop
int
mov
or
mov
add
cmpsl
mov
add
loope
pop
int3
scas
cmc
inc
push
cmp
rorl
pcmpgtd
sub
fs
lret
add
daa
subl
dec
rorb
pushf
enter
out
mov
lahf
nop
mov
add
cmp
movsl
pop
sbb
loopne
iret
cwtl
loope
sbb
ror
hlt
loope
cmc
xor
adc
xlat
bound
int
cmp
out
test
lea
xor
inc
and
jbe
iret
xchg
inc
sub
adc
mov
xor
repz
loope
jge
adc
jns
cmc
outsb
sbb
and
pop
xchg
mov
mov
inc
stos
sbb
cwtl
test
pop
popa
inc
rorb
adc
xchg
mov
movsl
fisttpll
sub
jno
insb
mov
pop
sub
push
movsl
cmpl
or
int
movsl
xor
fistpll
mov
fdiv
cmc
mov
jmp
fistl
ss
ret
cmpsl
jo
scas
lock
mov
xchg
cld
xlat
testl
int3
lods
cmpsb
bts
mov
push
fdiv
fnstsw
mov
rcl
fisubrl
inc
pop
push
mov
jns
and
cltd
pop
ja
lcall
repnz
pusha
pusha
sub
jb
mov
jb
outsl
imul
sbb
add
test
or
in
imul
rcrl
dec
out
ljmp
dec
sahf
adc
jmp
leave
jge
add
cmp
rcrl
sbb
push
jge
xor
cmc
mov
fisttpll
ljmp
inc
ljmp
mov
mov
sbb
xchg
adc
das
jae
pop
test
jae
in
push
xchg
mov
push
push
adc
jg
fildll
call
addr16
lret
in
cmp
push
dec
push
sub
je
test
in
nop
mov
rclb
xchg
inc
push
shrb
push
cld
lcall
and
lret
subb
insl
ret
daa
scas
mov
pushf
dec
xor
scas
aaa
jbe
repnz
clc
sti
jb
pop
jl
movsb
cmp
inc
mov
into
bound
pop
ds
out
xchg
pop
ljmp
stos
pop
in
lods
sub
mov
dec
dec
push
push
add
and
lret
push
push
mov
gs
jmp
pop
repnz
xor
dec
xlat
and
cmpsb
inc
inc
int3
into
push
mov
test
inc
fistl
cmp
mov
cmp
inc
shrl
pop
sub
sahf
test
mov
je
pushf
adc
jmp
jae
mov
xchg
push
inc
subl
or
or
sub
pop
adc
mov
jne
std
jmp
mov
mov
jns
xchg
mov
imul
inc
lahf
fsubrl
int
pop
cmpsl
mov
and
add
hlt
push
scas
sahf
shlb
add
inc
or
cmp
call
mov
jno
adc
jle
sub
xchg
stc
in
jp
mov
pusha
insl
mov
arpl
or
scas
jg
xor
jle
lea
addr16
push
xlat
and
xchg
and
sahf
or
adc
stos
adc
and
sbb
pop
dec
add
mov
jnp
loop
mov
faddl
sub
loope
lea
add
xchg
idiv
jle
or
sbb
mov
out
rcr
pop
mov
sahf
popf
mov
jl
nop
and
sub
add
les
test
and
mov
sub
mov
inc
mov
shlb
jns
in
pop
jne
movsb
insb
dec
insb
movsl
sbb
paddusw
mov
fcmovnb
and
jg
in
and
fmulp
ss
aas
call
add
mov
test
int3
sbb
ficompl
pop
sbb
int3
ret
outsb
sub
dec
inc
repz
push
jb
mov
arpl
inc
ret
lcall
stos
clc
mov
js
or
push
push
xchg
push
fs
mov
lea
aad
jecxz
ret
mov
adc
test
int
dec
outsb
xchg
sub
sub
mov
push
mov
fwait
xor
cmp
out
js
dec
ret
testl
in
dec
cmp
test
insb
push
mov
xchg
add
out
repz
push
lea
push
cmp
add
loopne
lcall
int
pop
inc
shll
loop
xchg
cmp
mov
leave
jle
pop
mov
mov
mov
or
aad
es
cmp
cmp
andl
aad
test
sete
call
test
fs
sbb
mov
mov
add
das
gs
cwtl
into
movsb
flds
dec
cmp
fucomp
addr16
sahf
cmp
shlb
les
xchg
jo
xchg
mov
xchg
scas
out
lret
dec
and
push
inc
in
and
iret
sub
loope
and
mov
stos
inc
or
shlb
in
subb
es
pop
jl
sub
pop
add
cmc
jle
mov
aaa
xor
push
std
mov
in
insb
loope
in
push
cmpb
pop
jmp
sahf
out
in
aaa
inc
ljmp
adcl
idivb
cltd
jb
mov
push
or
push
out
lds
popf
dec
out
mov
insb
sub
into
test
stc
add
testl
jae
andl
fidivs
mov
out
nop
mov
call
and
sarl
je
iret
sbb
sub
mov
inc
mov
or
add
mov
iret
adc
jbe
sahf
xorb
xchg
daa
push
adc
inc
fwait
mov
inc
js
out
arpl
jae
in
lea
popa
cltd
cmp
andl
add
movsl
jle
cmc
jae
pop
push
sub
enter
popa
sbb
sahf
lods
stos
arpl
or
movsb
movsb
aad
cld
lcall
call
and
lock
outsl
fistpl
frstor
outsl
adc
cmp
add
cld
or
aad
outsb
xor
cli
pop
cmp
stos
in
and
mov
xor
sub
push
sub
xlat
xchg
adc
sbb
cmp
mov
adc
cld
fiaddl
pop
or
cmpsb
mov
repz
sbb
lods
add
in
inc
or
mov
xchg
cmp
outsl
pop
movl
fcomps
loope
int
and
sub
xchg
outsl
dec
aas
test
add
cmp
and
dec
adcb
push
xor
pushf
mov
xchg
sub
xor
sahf
in
loop
dec
test
cmp
inc
popa
fcomp
ret
adc
sbb
sub
push
xor
jmp
pop
int3
mulb
cmp
sti
sub
popa
xchg
imul
jne
add
jle
pop
cmp
pop
data16
xlat
icebp
dec
je
xor
mov
fbstp
inc
inc
popf
cld
sbb
in
push
adcl
mov
inc
jge
lods
jne
add
jl
mov
stos
call
repz
popl
push
out
cmc
inc
add
xchg
aad
and
mov
mov
mov
xchg
sbb
jns
sub
aad
mov
cmp
nop
mov
pop
ljmp
out
add
fwait
out
jno
sbb
and
xchg
and
jle
mov
jp
push
insl
pop
wbinvd
ret
mov
adc
xor
dec
mov
clc
stos
arpl
push
jne
mov
call
enter
pop
js
loope
mov
xchg
aad
dec
shlb
daa
shl
push
adcb
lahf
pusha
jmp
mov
test
mov
xchg
das
inc
or
mov
lods
fld
mov
out
cmp
cltd
pop
mov
aam
sub
push
jecxz
sub
in
ds
gs
push
mov
mov
push
inc
xchg
jecxz
sbb
sub
mov
inc
loop
cmp
sub
pop
into
or
int
imul
xlat
cmp
add
xchg
rcrl
dec
dec
add
mov
pop
lods
pop
add
adc
jnp
je
adc
sub
loop
ret
ret
pop
cmc
inc
push
pop
in
xor
int
es
les
sbb
daa
outsl
push
rol
ljmp
mov
into
push
mov
repnz
pop
jl
loope
cli
rcrl
jle
std
jle
inc
cmp
aaa
lods
das
or
xchg
adc
push
stos
xchg
push
shl
loopne
mov
repz
sub
popa
es
addr16
repz
push
fstl
sbb
inc
int
pop
rorl
data16
ds
mov
inc
add
mov
xchg
jle
push
add
and
jg
repz
mov
sbb
leave
fisttpl
lods
icebp
push
std
sub
lock
jecxz
sbb
sub
lret
add
sub
mov
sub
inc
das
dec
fistpll
pop
dec
repnz
nop
mov
test
addl
dec
mov
xchg
push
fst
fdivrs
jg
into
add
test
mov
xor
mov
mov
out
push
adc
xchg
xorb
add
out
aam
ficomps
mov
pop
jno
mov
pop
fs
sbb
mov
pop
mov
hlt
cmpsl
popf
jno
ret
inc
mov
and
addb
mov
or
ret
cwtl
push
jb
sbb
xchg
fisttpll
mov
lods
push
jne
inc
push
bound
dec
in
lds
mov
in
test
mov
les
pop
sbb
fdivr
arpl
pusha
addr16
adc
inc
dec
in
mov
inc
inc
lods
mov
add
add
mov
shll
adc
cs
xor
lret
jno
sub
sbb
or
hlt
mov
mov
sub
clc
pop
jecxz
inc
jbe
sbb
add
cmpsl
clc
add
inc
mov
ds
arpl
jns
std
ja
stos
scas
xor
lcall
jle
xor
pop
xchg
push
fcmovnu
and
xchg
fistpl
aaa
dec
jbe
cmp
inc
mov
shll
dec
repz
mov
icebp
cmpb
and
mov
imul
ds
arpl
xchg
repnz
pop
mov
hlt
pop
jns
loope
pop
dec
jle,pt
cwtl
fisubs
sub
push
rorl
rcl
bound
fsubl
jns
pmaddwd
xchg
push
sarb
push
dec
xchg
roll
mov
stos
popf
or
sbb
push
lcall
lcall
cmpsl
and
mov
mov
xchg
cmpl
sub
dec
js
jg
scas
cwtl
loope
pop
lods
dec
pushf
inc
aad
cmp
inc
lock
cmp
cmc
sbb
dec
push
sub
es
push
fcmovnu
je
lea
and
or
icebp
xor
mov
jo
cwtl
gs
or
divl
or
scas
push
pop
icebp
push
fldenv
pop
push
stc
jo
and
mov
loop
pop
pop
or
movsb
mov
cmp
mov
dec
mov
jbe
mov
and
pop
and
cmpsb
loopne
stos
sti
repnz
inc
or
test
push
mov
aas
les
push
xchg
shlb
mov
mov
bound
jmp
loope
cmp
adc
push
and
pop
push
mov
jnp
add
adc
repnz
data16
sbb
pop
cmp
insb
add
in
int
int
sub
adc
fiadds
dec
jns
movsb
mov
mov
sbb
insb
fnstsw
jo
sarb
out
mov
je
add
mov
pop
popf
shll
cmpl
jns
jns
pop
push
push
cmpl
push
lret
xchg
adc
test
xor
dec
cmp
or
push
xchg
jne
negl
xchg
xchg
cmp
stos
lods
cmp
fcomi
stc
or
add
lock
lods
out
mov
or
mov
dec
mov
loop
sbb
or
aaa
js
leave
movsl
sub
jae
dec
cli
cmp
into
sbb
jb
mov
out
in
xor
jecxz
popa
pop
mov
pop
and
lret
dec
nop
fwait
leave
add
dec
jno
data16
mov
cmpsl
dec
test
adc
cmc
or
jbe
jecxz
repz
out
adc
test
ret
dec
ljmp
stos
pop
add
imul
and
and
xor
decb
fldenv
dec
int3
lahf
pop
push
mov
pop
divb
xchg
mov
pop
fistpll
dec
sarl
mov
insb
xchg
mov
stos
rcrl
loopne
ficoms
or
aam
push
js
mov
pop
xor
xchg
mov
and
scas
xor
jge
mov
js
pushf
lods
sti
or
add
sti
jnp
xor
imul
outsl
fwait
pop
push
mov
fistpll
push
pop
ja
jmp
or
int
ret
sub
dec
jno
mov
jns
xor
in
or
dec
mov
and
cli
in
mov
add
movl
les
and
mov
sub
ret
nop
fiaddl
push
add
ret
dec
dec
mov
mov
jecxz
push
inc
notl
mov
notl
jge
outsl
fs
int
or
sub
inc
sub
enter
mov
push
aad
jo
lods
addl
adc
enter
adc
test
add
sti
mov
cmp
add
pop
sahf
mov
add
mov
xor
mov
insb
sub
movl
jns
sbb
inc
test
popf
push
dec
inc
jno
inc
dec
leave
ja
je
shl
inc
cmc
out
dec
adc
call
cmp
adc
test
rcll
push
mov
lods
jle
xchg
add
cmp
cmp
ficompl
mov
lahf
push
mov
aas
mov
sti
inc
fwait
push
dec
rclb
out
add
rorl
push
ret
imul
fstpl
adc
rorl
ss
pusha
inc
pop
push
rclb
js
repz
mov
aas
int
cmp
xorb
jae
clc
jge
int3
xchg
mov
subl
mov
sbb
xchg
repnz
les
in
jmp
and
je
sbb
inc
mov
std
mov
ss
mov
add
mov
popa
addr16
cwtl
mov
dec
out
fcomi
clc
push
mov
sub
adc
or
mov
dec
in
aad
jb
cmp
pop
imul
nop
mov
xor
pop
jnp
mov
test
cmp
pop
sbb
clc
repnz
push
jl
les
xor
lret
and
fwait
insb
mov
std
into
sbb
push
push
add
xor
or
test
lcall
imul
cld
repnz
loope
test
sbb
mov
jnp
xor
add
je
aaa
sub
das
pop
cmp
sub
dec
dec
sbb
call
sbb
mov
out
xor
iret
pop
fs
fwait
dec
sbb
xor
or
sar
mov
xor
filds
xchg
mov
sbb
cmp
push
push
fisubrs
dec
or
adc
fstpl
and
int
sti
movl
out
sbb
add
sub
aam
jo
sarl
cmpl
into
lret
dec
mov
inc
inc
sub
mov
ficomps
fbstp
loope
test
xlat
dec
jle
jo
pop
popa
adcb
sarl
jl
push
popa
xchg
in
out
push
or
imul
scas
lds
and
cli
push
jecxz
test
mov
and
xchg
out
mov
sub
jne
mov
sbb
pop
popf
fnstcw
cltd
aam
dec
sub
js
loope
arpl
repz
dec
push
ret
adc
ljmp
sti
inc
nop
or
xchg
rolb
add
jns
xlat
icebp
push
adc
and
xlat
inc
mov
cmpsb
push
add
mov
xchg
push
or
fwait
adc
xchg
sbb
mov
cwtl
cmpsb
cmp
sub
iret
pop
push
rcrl
cmp
pop
mov
dec
xlat
stos
adc
and
and
stc
sahf
loopne
ficoms
pop
push
pop
add
inc
pop
mov
push
mov
jnp
in
xor
lds
mov
out
xlat
sbb
add
jecxz
sub
push
mull
jl
inc
jb
mov
popf
sbb
mov
insb
pop
or
add
push
je
les
mov
cltd
aaa
adc
stos
push
mov
addr16
int3
fs
into
lcall
xor
dec
push
push
xor
in
divl
lret
xchg
arpl
test
push
mov
out
pop
ret
sahf
mulb
shlb
outsl
leave
adc
or
sub
sub
mov
cs
das
call
pop
and
xchg
cmp
jge
outsb
pop
cmp
mov
repz
mov
push
test
cmp
gs
xor
jecxz
and
push
insl
aaa
fimuls
jp
test
mov
push
jo
leave
sbb
push
mov
mov
test
add
mov
cmp
or
roll
or
push
std
out
inc
ret
retw
fstpl
xor
lahf
sub
cmp
lods
cld
jp
push
pop
das
inc
xchg
xor
das
sbb
mov
popf
mov
push
ljmp
pop
out
mov
cs
shll
xchg
cmpsb
sbb
push
int
xor
loopne
pop
int3
cmp
sbb
adc
lcall
sbb
pop
lods
lock
adc
scas
int3
mov
jns
test
stc
or
jae
leave
cwtl
inc
mov
mov
out
nop
mov
or
std
xsha1
cmpsb
dec
pop
rcll
inc
adc
fidivl
loope
jg
jb
popa
lret
xor
test
xchg
cmp
aad
mov
push
mov
lret
mov
es
mov
dec
sbb
cwtl
ret
int
aaa
xor
lea
ss
mov
xchg
xor
jg
int3
cmpsb
hlt
mov
cmp
in
and
iret
cmp
shrw
stos
fildll
pop
pushf
pushf
fwait
inc
xor
shl
xchg
mov
add
mov
lods
sarl
jne
imul
insl
dec
push
sbb
clc
dec
bound
push
push
jno
pop
mov
mov
shll
insb
or
dec
xor
fs
and
sub
pop
adc
outsb
cmp
cmp
fcomp
xchg
out
outsb
pop
add
sbb
dec
inc
pop
xor
mov
sarl
pop
jne
std
inc
mov
test
scas
push
mov
xor
xor
and
sbb
push
lret
inc
adc
push
shll
push
rorl
sbb
cltd
adc
outsb
sub
jmp
popf
ficoml
fadds
js
pop
sub
cmp
cmp
ficompl
leave
or
jecxz
js
fisubrl
test
cmp
or
pop
gs
and
dec
adc
push
sub
pop
in
jo
into
iret
push
sub
or
and
push
mov
gs
test
inc
pop
jae
mov
shrb
outsl
ljmp
movl
push
popf
hlt
sbb
cmp
shrl
push
repnz
pop
sbb
jmp
xor
bound
mov
xchg
cmp
mov
test
sub
and
ficompl
sub
sbb
xchg
dec
aad
outsl
xchg
mov
jle
dec
mov
dec
dec
mov
inc
out
out
sub
sub
ds
xor
andb
sbb
rclb
jle
int3
in
sbb
jle
xor
loop
sbb
sub
dec
xchg
mov
lock
nop
xor
out
sti
add
mull
and
out
rolb
stos
pop
jecxz
add
jp
scas
lds
negl
mov
leave
cmp
cmp
cmp
mov
cwtl
cmpsb
lods
pop
cmp
mov
adc
divl
mov
mov
shl
ret
and
inc
orb
add
aas
jne
fsubl
ja,pt
and
mov
scas
sarb
xor
lahf
roll
or
sub
xor
xor
jae
or
cmpsb
leave
and
rcll
pop
or
pop
ja
leave
mov
jp
xchg
shll
inc
sbb
mov
pop
fdivl
xor
lods
add
test
in
push
add
adc
or
fidivrs
sbb
out
mov
adc
je
xchg
and
lret
jne
out
or
sub
dec
mov
cmp
fdivs
and
sbb
fs
in
outsl
test
popf
adc
inc
and
jne
int
insl
movsl
test
hlt
xor
xor
fwait
pushf
fstp
mov
call
pushf
cwtl
push
repnz
sbb
jnp
xchg
in
push
popfw
paddd
orb
out
je
jo
daa
out
push
pop
iret
mov
mov
sbb
sub
in
ss
pop
inc
pop
out
pop
jle
pop
xchg
fcmovnb
add
mov
lret
mov
pop
out
mov
fs
push
add
insl
scas
gs
mov
xchg
cmpsb
daa
mov
lahf
xchg
in
js
add
test
add
adc
jmp
lock
xor
sbb
cmp
dec
mov
inc
xor
adc
enter
dec
inc
aad
leave
roll
ret
cmc
mov
rcrb
adc
inc
stc
popf
sbb
ljmp
pop
and
mov
mov
xchg
lret
cmpsl
adc
ja
data16
pop
xor
inc
jge
mov
fwait
mov
mov
push
cmpl
out
pop
dec
int
fdivl
out
jecxz
dec
xchg
mov
daa
sti
add
mov
rclb
xor
mov
mov
pop
loopne
les
sub
jmp
and
xchg
lahf
mov
stos
mov
test
mov
sub
insb
xchg
or
sub
jno,pt
sbb
cmpsb
push
iret
call
mov
sbb
mov
pushf
or
dec
fildl
out
jl
loop
iret
adc
pop
mov
lods
inc
adc
rcrb
xchg
les
push
scas
lret
sub
push
mov
mov
in
nop
out
notl
xchg
or
dec
mov
jge
data16
pop
std
popf
dec
add
add
ljmp
stos
push
imul
dec
adc
mov
int3
and
aad
js
jnp
in
sub
mov
cmp
insl
dec
xorb
push
push
ja
jle
lcall
js
mov
aad
subl
clc
sub
sub
mov
xchg
dec
fbld
aas
mov
stos
daa
dec
mov
js
push
sti
jmp
sub
nop
mov
cmp
je
ss
iret
sahf
jl
and
add
mov
adc
nop
call
gs
push
inc
mov
clc
mov
jge
enter
pop
fldenv
enter
adc
in
lret
or
iret
test
idivl
xchg
sbb
insb
xchg
inc
jge
fcmovnu
test
adc
adc
loopne
out
out
std
mov
push
das
adc
mov
mov
cmpsl
jl
sub
push
pop
outsl
daa
stc
pop
jecxz
pop
dec
xchg
jle
pop
pop
and
stos
xorl
or
push
cli
insl
lret
pop
out
mov
or
mov
aad
xor
loope
push
sub
xor
pop
test
fstl
pop
sbb
jae
inc
in
fistps
repz
inc
gs
incb
mov
push
inc
lods
xchg
dec
push
xchg
scas
popa
mov
pop
mov
fwait
cmp
lcall
lods
pop
mov
rcl
jle
outsl
xchg
sub
cmp
push
inc
inc
sbb
loope,pn
lret
jae
push
sti
lock
mov
scas
popa
dec
lret
sbb
sbb
cmp
mov
pop
jp
sbb
data16
aas
jl
lock
mov
movsb
stc
or
push
xchg
inc
fisttps
sub
test
push
in
push
add
out
divb
dec
nop
jl
push
and
int3
sub
std
mov
cmp
pop
out
mov
jle
or
hlt
fnstsw
jmp
push
push
sub
or
and
roll
jno
or
sti
scas
xor
ss
inc
scas
add
jnp
jp
mov
int
xchg
pop
jae
sarb
dec
loope
repnz
enter
psrad
sbb
mov
add
mov
fiaddl
lds
mov
fsts
push
xchg
loope
outsb
frstor
divb
scas
lahf
xor
dec
xor
mov
out
mov
jge
pop
into
les
aaa
dec
scas
in
jmp
mulb
pop
int3
jmp
mov
imul
mov
sahf
and
in
mov
mov
mov
jmp
lods
or
test
daa
and
dec
pop
mov
jl
add
pop
lock
push
pop
mov
les
or
inc
cwtl
mov
orl
push
inc
mov
mov
mov
rcll
bound
add
ret
push
aam
mov
jne
enter
stos
stc
xchg
mov
and
orl
pusha
fs
leave
xor
lret
add
jl
push
out
mov
cwtl
mov
andb
addr16
test
mov
and
and
scas
dec
push
int
outsb
mov
inc
jnp
sub
test
jb
lahf
mov
or
xchg
roll
stc
loop
mov
outsl
push
mov
shr
dec
xchg
out
aam
mov
flds
lods
cmp
push
fnsave
adc
jne
cli
pop
fdivrp
in
repz
push
mov
pop
push
and
add
jp
pop
mov
insl
xor
jns
movb
js
add
lods
inc
jbe
out
add
dec
icebp
inc
in
fisubs
pushf
fwait
roll
pusha
jl
mov
dec
pushf
in
pop
xchg
lret
in
dec
cmp
hlt
cmp
je
inc
inc
mov
xchg
jnp
scas
cmpps
rclb
inc
sub
je
xor
or
in
inc
dec
pop
jb
rorl
in
outsb
dec
setne
loop
loop
ss
xchg
pop
dec
nop
add
cld
cmp
cmp
loopne
mov
sbb
push
sbb
andl
cwtl
fstpl
cmc
faddl
jmp
pop
bound
out
aaa
xlat
mov
or
clc
xchg
push
mov
frstor
push
cmp
add
repnz
loop
sbb
clc
orb
jne
test
or
pop
call
popa
pop
nop
int
ja
jne
push
scas
pop
shl
mov
jge
pop
and
in
push
dec
or
jmp
jb
mov
sbb
movsb
inc
sbb
fadds
mov
mov
add
mov
push
testb
out
xchg
sub
push
or
lcall
inc
jnp
out
aaa
hlt
inc
xor
xchg
jno
aam
or
push
adc
cltd
fwait
or
add
dec
das
out
cld
std
pusha
pop
push
cmp
lret
aad
stc
inc
mov
inc
sbb
fisttps
pop
ffree
out
sbb
push
subb
outsb
les
fcompl
mov
adc
pop
loop
rcrl
mov
inc
xor
ret
cli
bound
ljmp
inc
dec
and
mov
add
test
cmp
mov
mov
mov
mov
jmp
pop
inc
or
insb
mov
jnp
out
cs
mov
push
push
jl
jg
rolb
movsb
cld
cs
nop
mov
out
orl
int
push
and
in
lret
imul
push
mov
or
in
ljmp
push
lcall
es
xchg
cmp
sub
jl
sbb
aas
mov
addr16
mov
inc
aam
and
movsb
sub
ja
mov
cmpsl
xchg
adc
in
sti
fwait
fwait
xchg
inc
mov
push
cltd
jp
adc
add
in
inc
test
add
mov
imul
sub
pop
xchg
lods
or
aam
ret
cwtl
out
les
jmp
rolb
inc
push
sub
jae
push
mov
pop
push
add
xchg
popf
cmp
inc
adc
cmp
mov
lds
xchg
xchg
aaa
sub
or
cmpsb
mov
push
lea
or
inc
pop
popf
aas
sub
xchg
adc
jae
mov
or
pop
outsb
add
std
test
je
je
mov
pop
shrb
inc
sub
jns
mov
mov
dec
repnz
inc
jo
jns
pop
jp
jp
out
mul
fldcw
pushf
out
sbb
popa
push
ret
pop
lcall
enter
cli
lods
incb
pop
aaa
sbb
inc
mov
mov
jl
imul
xchg
aaa
test
dec
outsb
mov
sub
test
popa
and
mov
fwait
cmp
test
mov
leave
cmp
scas
aam
mov
adc
insb
xchg
ja
cld
int
test
mov
push
fdivrs
out
cld
out
pop
pop
cmp
fwait
mov
repz
adc
inc
and
inc
lods
jbe
mov
sbb
enter
mov
aam
jg
test
insl
pop
inc
push
jbe
pop
fwait
xor
push
bound
cmp
mulb
and
add
nop
mov
insl
xchg
mov
aaa
movsb
push
insb
jle
pop
jecxz
in
test
fistpll
call
xor
sub
cmp
dec
iret
xor
inc
add
sub
jl
push
pop
or
lods
xchg
mov
test
xchg
and
mov
xchg
test
sub
fcoms
xchg
movsl
enter
dec
jnp
push
cmp
shll
popa
into
mov
test
loopne
xchg
popa
add
pop
add
popf
js
and
push
je
sub
add
repnz
add
aam
fldt
sub
in
ret
mov
dec
pushf
pusha
roll
mov
inc
movsb
sub
js
xor
jb
popf
add
jmp
sub
into
dec
pop
hlt
subb
xor
xor
movsb
mov
cmc
js
mov
sub
sbb
pusha
add
sti
cmc
and
test
push
enter
mov
arpl
push
imul
js
push
xor
or
xchg
cli
or
lret
inc
push
jmp
movsb
sbb
or
in
sub
jb
push
and
push
out
int3
rcll
mov
jne
xor
pop
cmpsb
mov
and
push
loope
pop
test
xchg
dec
mov
jp
scas
in
fidivrs
clc
aad
or
popa
test
int
test
lret
mov
lds
adc
lea
sti
and
jl
mov
mov
mov
movsl
inc
dec
mov
sti
jb
stos
inc
sub
adc
sbb
fbld
ret
adc
jo
pop
and
dec
xlat
inc
adc
xor
xchg
movsl
outsb
jle
jl
shlb
pop
mov
mov
outsl
mov
fisubl
adc
insl
mov
jns
cmc
jbe
imul
mov
mov
mov
pop
es
mov
jmp
add
sbb
shrb
lcall
push
int3
sbb
mov
data16
mov
cmp
addr16
clc
or
call
dec
pop
call
shl
adc
addb
cmp
cs
sbb
pop
out
mov
cwtl
sub
mov
sbb
flds
mov
pop
push
shll
outsl
cltd
mov
js
outsl
push
sbb
lock
push
sub
pusha
lret
xor
into
roll
rcr
xor
gs
leave
sbb
push
mov
shr
dec
int3
push
lods
cltd
cmp
lret
push
iret
cmp
xchg
insl
cli
inc
dec
or
jmp
out
pop
lcall
xchg
sahf
xor
inc
xlat
pop
sahf
sahf
das
xchg
jne
dec
xor
push
add
mov
sbb
in
or
cmc
fcoms
mov
xchg
push
divl
cmp
xchg
scas
inc
lea
int3
xchg
ja
xchg
test
cwtl
or
jge
cmp
call
pop
xchg
jae
dec
fdivs
push
mov
repz
push
mov
enter
fldcw
inc
add
dec
pop
icebp
daa
xchg
sbb
pop
aaa
mov
push
lds
push
dec
adc
cmc
fisttps
mov
arpl
lea
jbe
scas
jg
shll
sub
in
push
jl
mov
jp
out
inc
decl
dec
call
pop
sub
cmpl
mov
jl
sti
jnp
out
and
sbb
addr16
and
jle
dec
hlt
mov
fmul
mov
add
xchg
pop
sbb
pop
and
adc
test
arpl
outsl
fldenv
movsl
and
push
clc
pushl
and
xchg
cmc
ret
add
xor
pusha
or
aaa
je
hlt
cmp
mov
or
lahf
mov
sub
mov
mov
fdivl
mov
sti
repnz
aaa
cltd
add
ljmp
pop
xor
ljmp
push
mov
icebp
lock
addb
imul
sbb
dec
jbe
xor
mov
addr16
sub
stos
jbe
aam
or
or
leave
jne
push
or
cmp
mov
and
mov
inc
jae
inc
jl
and
aaa
jle
add
fbld
jle
out
out
inc
sub
add
push
xchg
ss
pop
mov
int3
sbbl
cmc
not
scas
lret
jle
insl
mov
stc
mov
repnz
pushf
daa
xor
or
jge
fwait
rcll
adc
push
mov
xchg
mov
jns
testl
sub
in
pop
popa
adc
adc
ljmp
mov
push
dec
push
rol
setle
les
stc
fnstcw
mov
ret
out
dec
daa
aas
mov
fstp
sub
or
clc
jge
inc
test
adc
aaa
mov
pushf
xchg
loope
lock
or
and
dec
mov
or
xor
push
xor
add
sub
testb
xor
stos
adc
sub
out
mov
adc
scas
or
and
rorb
xor
mov
jle
xlat
and
push
leave
lahf
lods
nop
sbb
into
es
jmp
cltd
gs
push
mov
in
push
jecxz
les
insb
dec
fdivrs
movsb
inc
mov
ds
out
lea
hlt
imul
jo
dec
ror
xchg
mov
daa
sbb
dec
sbb
pop
cmp
fucomip
ret
nop
mov
sbb
or
push
lret
add
dec
sbb
push
fildl
cmp
test
aam
jmp
mov
loop
xor
bts
movsl
sarl
mov
in
ret
jno
jg
push
sub
test
negb
and
jnp
inc
in
popf
sbb
ret
xor
ds
imul
fbstp
fimull
mov
lcall
scas
xor
xor
pop
in
rcrl
push
xor
adc
sbb
cltd
xchg
dec
sub
cmp
es
daa
adc
pop
in
xchg
add
movsl
jb
add
imull
gs
sahf
mov
or
jns
mov
dec
outsb
xchg
imul
aad
adc
outsl
scas
mov
mov
data16
imul
xor
sar
and
jp
mov
scas
mov
out
fisubrl
pop
sbb
cmp
mov
lds
xchg
out
push
mov
xchg
jle
enter
fs
ret
pop
add
cwtl
cli
xchg
jp
in
mov
ss
loope
mov
mov
push
add
cmp
sub
scas
jno
out
xchg
jnp
fwait
push
lahf
adc
xchg
cltd
ljmp
jmp
ds
nop
or
hlt
adc
cmc
inc
ffree
out
xchg
out
imul
adc
stos
out
imull
loopne
popf
mov
icebp
xchg
dec
dec
adc
roll
mov
in
ss
cs
lods
shrl
or
lea
aad
mov
or
fld
lods
mov
pop
adc
add
jmp
daa
cmpsl
or
xchg
pop
inc
adc
popf
sti
aad
push
into
int
neg
lock
pop
scas
fildll
stc
nop
xor
sbb
iret
rclb
cmp
imul
xchg
xchg
jne
sbb
push
inc
inc
xor
mov
lret
loopne
fsub
mov
orl
scas
xlat
js
pop
enter
shrb
dec
sub
ret
mov
or
push
jns
jecxz
xor
in
in
fcmove
scas
pop
hlt
dec
arpl
aad
xor
or
mov
or
es
out
sbb
iret
shll
mov
jmp
dec
push
pop
push
jle
xchg
sbb
inc
inc
out
stos
aaa
mov
cmp
add
pop
push
mov
daa
out
sub
push
shrl
and
pop
out
xchg
clc
xchg
or
lds
loop
and
daa
xchg
sbb
inc
jb
ret
punpcklwd
push
mov
test
ds
pop
mov
mov
cmc
add
push
jle
xchg
push
adc
sub
add
std
inc
aam
cwtl
push
iret
inc
sti
arpl
mov
mov
or
aas
mov
stos
rcr
ret
aaa
mov
mov
inc
inc
imul
test
sti
xchg
dec
addr16
xchg
loop
mov
jne
into
xor
pop
pop
sub
enter
iret
or
add
sbb
push
sub
rclb
adc
push
mov
or
pop
imul
cmc
xchg
adc
fmuls
sub
lahf
jae
je
mov
test
push
push
mov
push
insl
and
pop
pusha
inc
cltd
arpl
jl
or
outsb
mov
data16
and
add
jle
dec
clc
aad
fisttpl
jle
fs
lahf
mov
jne
aam
inc
les
in
aam
xchg
movsb
mov
pop
nop
test
jnp
xor
mov
and
aas
lahf
loopne
push
mov
leave
lods
jle
mov
into
xchg
call
loopne
ret
cmp
sarb
xor
cltd
mov
and
and
cmpsl
leave
cmp
aam
mov
shrl
pop
jmp
xor
push
pop
out
add
sbb
mov
ljmp
adc
inc
das
lret
add
repz
mov
stos
fcoms
adc
test
repz
pop
jmp
mov
mov
cmp
in
xor
dec
and
frstor
lods
pop
cli
jmp
daa
shll
mov
enter
mul
rorb
ret
cs
or
hlt
les
loope
xchg
mov
sbb
push
pushl
push
cltd
push
xor
daa
mov
mov
jne
ljmp
cmp
movsl
mov
mov
imul
test
lds
aas
xor
jl
loopne
loopne
cwtl
and
shrb
cmpsb
and
rcrl
mov
xor
out
outsb
rclb
lods
sbb
mov
iret
mov
subb
push
enter
lods
dec
lods
std
inc
ret
mov
fisubl
mov
leave
cmp
xchg
cmp
jmp
loope
and
cmp
test
repnz
sbb
loop
test
mov
dec
scas
push
cs
divb
test
lret
shld
mov
mov
adc
das
sbb
ja
and
or
sbb
repnz
ljmp
push
xor
adc
xchg
outsl
pop
sub
adc
push
xchg
in
inc
cmp
xchg
fs
test
in
out
loope
fs
fdivs
mov
jnp
bound
pcmpgtw
dec
int
adc
loop
stos
mov
fs
mov
jne
xchg
mov
xor
jne
xchg
in
ss
out
cmp
xchg
out
cmpb
aaa
outsb
or
sbb
push
mov
cmp
dec
dec
dec
xchg
add
in
scas
iret
mov
imul
and
call
sub
out
xchg
arpl
adc
mov
orps
mov
mov
xchg
insl
cmp
mov
fwait
movsl
outsb
jbe
push
stos
xchg
dec
xlat
jnp
pop
pop
sbb
adc
mov
inc
daa
cli
aad
popa
pop
bound
sub
ret
mov
cmpl
ja
ficomps
cs
fcompl
sbb
fwait
in
mov
dec
mov
cli
in
mov
mov
dec
sbb
mov
movsb
repnz
dec
pop
imulb
and
pop
rcrb
mov
xchg
pop
insl
cmp
call
jbe
lds
add
arpl
lds
loopne
xor
enter
push
rcrl
adc
sub
jge
aaa
xor
mov
and
sahf
setnp
shll
das
es
inc
outsb
int
inc
cmpl
push
les
xchg
aam
scas
mov
jge
dec
iret
inc
pop
stos
mov
daa
fs
add
push
ja
sbb
lods
notl
jp
aam
jb,pn
mov
imul
std
inc
mov
aad
fnstenv
pop
sbb
pop
cmp
adc
lret
ficoml
notl
std
sti
test
js
push
inc
cmc
dec
stos
hlt
push
mov
sub
and
popf
fs
sahf
add
lret
sub
inc
jmp
daa
xor
mov
and
cmc
aas
jno
int
xor
push
jmp
insb
sbb
rorl
push
test
inc
subl
mov
fsubs
mov
lret
sbb
or
xchg
pop
ljmp
call
ljmp
addl
and
jge
push
sti
cltd
pop
and
cmc
sbb
mov
loopne
cmp
ljmp
sub
cltd
nop
push
sti
mov
push
inc
mov
addr16
ja
or
nop
ja
mov
mov
dec
movsb
push
lret
xor
cmp
aam
xchg
add
ss
mov
sbb
and
or
cmp
xchg
mov
pop
pop
mov
pop
mov
add
int3
push
mov
dec
nop
xchg
fldt
xor
sahf
dec
mov
cmp
xchg
xlat
popf
xchg
ret
loope
mov
test
pop
insb
mov
xor
sti
push
insb
jl
add
mov
into
repz
out
loope
pop
push
in
dec
mov
test
mov
loope
push
cmp
mov
ror
sub
shl
mov
movsl
pusha
mov
inc
xchg
dec
cmpl
push
cmpsb
cltd
xor
xor
jmp
mov
and
call
cmp
jge
or
lahf
popa
ror
fs
cmp
jno
dec
mov
flds
divb
xlat
add
jg
lock
xor
push
iret
cs
cmc
in
or
push
test
mov
mov
xchg
aaa
popa
mov
xor
push
in
jp
popf
xor
pop
test
iret
cmp
lret
lea
rcrb
cmp
mov
jmp
mov
fwait
xchg
insl
inc
push
mov
add
push
sbb
aas
xchg
mov
adc
and
add
loope
stos
mov
lods
pop
push
sti
flds
add
outsb
fistpl
push
in
jmp
pop
or
das
outsl
dec
jae
jcxz
sbb
fiadds
adc
pop
jbe
push
call
ret
lcall
mov
sbb
popf
cli
daa
popa
mov
cmc
stos
addr16
lret
dec
lahf
mov
scas
std
and
pop
es
pop
int3
shl
jecxz
inc
jge
fildl
js
js
pop
js
fbld
dec
mov
stos
cmp
hlt
scas
cmpsb
and
fidivrs
clc
jle
xor
mov
test
out
lea
lea
xchg
scas
xchg
out
mov
jbe
fisttps
pop
ret
test
xor
push
push
xor
mov
sti
or
pop
or
pop
test
lcall
push
ret
das
jbe
xchg
jns
lahf
mov
adc
push
das
push
mov
add
jae
pushf
imul
jbe
push
rorl
scas
in
jge
cmp
xorb
cmp
je
in
cmpsl
xchg
cmp
rcr
ret
dec
or
mov
fcompl
enter
vcvtdq2ps
fisubrs
sub
imul
and
push
imul
dec
dec
push
lods
dec
dec
jbe
jecxz
add
dec
test
or
pop
mov
ret
fxch
aad
xchg
aas
pop
or
call
stos
nop
cmpsb
jae
push
lret
rclb
dec
mov
test
jnp
xlat
jns
sahf
mov
mov
add
adc
add
inc
jno
xor
cmp
push
cltd
add
adc
dec
cwtl
or
mov
pop
push
push
jp
jns
imul
dec
jecxz
shlb
fisttpll
mov
lea
inc
add
xor
subl
ss
jg
nop
lahf
dec
mov
or
addr16
push
mov
sub
cltd
jle
xor
int3
inc
fiadds
inc
cli
mov
cmp
push
mov
test
mov
stc
fldcw
repz
fidivs
mov
fwait
cmp
ljmp
test
in
jns
ja
or
push
mov
out
inc
mov
xchg
jl
cwtl
inc
shlb
fmuls
cli
ss
jmp
cmp
jmp
push
jo
fwait
mov
jns
out
adc
xchg
jg
icebp
xor
lret
push
mov
call
out
xchg
call
cs
pop
loopne
lahf
jno
or
shl
insl
ja
mov
add
fsub
cmp
lds
adc
dec
mov
stos
sahf
push
outsl
xchg
sbb
pop
popf
fimuls
sub
repz
mov
cmp
into
mov
cmpsl
adc
mov
mov
push
lcall
lret
xchg
jg
pop
sti
pop
cmc
shll
jnp
lds
insl
inc
adc
jns
js
lcall
mov
dec
inc
push
outsl
jmp
in
mov
repnz
int3
ja
ret
cmpsb
cmpsb
jnp
and
mov
out
mov
xor
jle
jb
cmp
or
mov
icebp
sub
xor
jo
adc
xchg
std
stc
mov
push
pop
adc
pop
enter
std
jb
fisubrs
repnz
xorl
push
out
dec
sbb
sbb
aam
ss
scas
cmc
cli
cmp
in
jp
jl
add
xchg
add
lods
mov
inc
adc
in
or
bound
xlat
dec
cmc
insb
pop
xchg
pop
ja
je
test
bound
sbb
leave
les
mov
stos
sahf
jb
call
or
pop
test
push
ja
jg
mov
push
jmp
divb
test
imul
test
sub
xchg
add
xor
or
loopne
cmpsb
lret
ds
sbb
push
sbb
lret
xchg
dec
jg
notl
lds
jns
mov
loope
test
out
dec
test
cmp
ljmp
in
nop
xchg
cmp
repz
mov
addl
hlt
dec
dec
cmp
call
cmp
ret
inc
mov
movb
enter
jecxz
daa
jae
ror
push
clc
imul
fcomps
lret
pop
cmp
fiadds
mov
sub
aam
imul
push
xor
int3
out
pusha
repnz
clc
xchg
mov
dec
push
cltd
add
pop
push
dec
mov
rorb
int
inc
mov
sub
dec
add
mov
imul
aas
aaa
or
jbe
negl
dec
push
mov
std
mov
xchg
scas
cmpsl
cmpsl
mov
stc
xor
xor
fndisi(8087
loopne
movsb
ret
xor
imul
imul
xchg
sub
cmp
les
js
dec
mov
shll
cmpsb
xor
and
mov
or
push
orb
adc
xor
inc
fisubs
cmpsb
in
sub
sahf
add
sub
dec
cmp
push
ja
push
sarb
push
jno
xor
sub
scas
xor
push
mov
jnp
push
stc
jmp
pop
or
int3
int
cmp
mov
xor
dec
test
pop
movzwl
popf
mov
aam
sbb
pusha
push
fwait
lods
cmp
cmpsb
cmp
inc
je
outsb
repz
loopne
xor
aad
adc
pop
and
in
sbb
mov
stc
test
xchg
inc
sub
jae
out
lods
cmp
push
fwait
int
shrb
inc
adc
dec
mov
mov
add
movsb
cmp
pop
test
outsl
loop
adc
inc
incl
pop
or
ss
mov
aas
leave
fnstcw
fstps
sub
dec
dec
mov
inc
cmp
nop
sti
cmp
in
popa
cwtl
addr16
daa
int
mov
dec
shrl
aad
sbb
mov
or
xorb
push
lds
pop
imul
loope
and
je
popa
adc
cld
gs
sbb
add
repnz
jge
mov
sbb
out
xchg
divl
dec
outsl
hlt
sub
mov
mov
and
jp
roll
sbb
das
lcall
add
in
mov
xorb
scas
push
ror
loopne
jae
adc
xchg
lock
mov
lahf
push
shr
mov
js
mov
add
nop
add
xchg
ljmp
cmp
js
jbe
dec
std
cli
mov
out
enter
jp
data16
pop
mov
and
and
adc
xlat
mov
cmpsb
bound
jl
sub
inc
les
test
popf
inc
sti
fcomp
sbb
mov
rol
inc
push
sarl
in
inc
xor
daa
das
imul
add
mov
fstpl
cmpsl
aad
mov
xor
xor
arpl
add
and
mov
scas
mov
mov
inc
jmp
lea
out
ret
lods
cld
shlb
shlb
lret
mov
scas
sub
out
inc
cmpl
mov
mov
je
lret
mov
inc
xor
and
dec
and
mull
pop
nop
outsl
ljmp
cmp
push
cmpsl
push
ss
cmp
mov
and
cmp
mov
sub
je
dec
bound
sbb
in
cmpsb
jnp
push
pushf
movsl
jle
lret
mov
pop
add
std
fldenv
pop
inc
and
or
inc
lods
arpl
xchg
gs
mov
jnp
movsb
scas
loope
dec
pop
shr
inc
or
pop
adc
inc
or
lock
out
insb
jp
xchg
mov
les
jb
mov
cmp
in
push
pop
outsl
out
inc
adc
jnp
out
sbb
nop
dec
push
aaa
cs
add
push
or
mov
add
mov
xchg
jge
push
iret
lea
lock
rorb
sub
add
nop
jns
jne
xchg
into
jbe
sbb
aas
scas
xchg
xor
xchg
and
fs
les
lea
fiaddl
and
xor
push
notl
ds
xchg
sbb
repz
dec
lock
mov
mov
aam
mov
jo
pushl
sbb
sbb
enter
stos
loopne
or
les
pop
xor
seta
xor
cmpsl
fcmovnbe
jo
sub
xchg
push
fdivl
fwait
sbb
sarl
scas
stc
jns
xor
test
jle
xor
inc
imul
dec
xor
out
es
nop
or
add
cwtl
mul
rorb
or
xchg
loopne
in
jb
jno
sbbb
add
ja
bound
das
cmp
cmpsb
jle
rcll
sarl
in
pop
rcrb
outsb
popf
popf
orps
mov
imul
outsb
dec
mov
pop
push
shrl
xchg
fwait
or
jns
scas
imul
and
or
ja
push
push
mov
push
mov
sahf
loop
jmp
xchg
xchg
aam
stc
xor
mov
ds
lock
push
xlat
xor
adcl
fistl
cli
test
lahf
mov
aaa
dec
mov
int
sar
sbbb
mov
inc
fsub
test
sub
inc
adcb
push
mov
dec
sbb
adc
loope
push
aas
dec
inc
or
out
and
xor
imul
fwait
inc
push
push
sub
aas
pop
aaa
mov
cs
std
inc
or
insb
das
xor
xchg
inc
in
push
jae
bndldx
les
mov
leave
sub
xor
cmpsb
repnz
push
add
add
out
sub
fs
movsb
cmp
jge
jae
repnz
aas
add
iret
pop
aad
daa
push
js
lea
adc
fidivrs
or
rclb
mov
call
rclb
xchg
and
xor
in
mov
icebp
add
mov
sub
lcall
xchg
insl
repz
mov
cld
and
inc
mov
xchg
incb
xchg
sarl
fdivs
mov
or
leave
fs
lcall
sbb
push
sub
js
pop
les
sub
add
fdivrl
orb
ljmp
sarb
das
xor
xchg
inc
and
inc
lret
cltd
rol
pop
mov
cs
daa
mov
dec
dec
rorl
lock
push
mov
inc
dec
sarl
aas
jg,pn
mov
jg
fidivrl
pop
out
int3
xchg
inc
jbe
sub
repnz
dec
cs
push
test
push
andl
adc
test
bound
pop
pop
out
scas
clc
bound
cwtl
xor
in
jg
loope
in
popa
jo
xchg
icebp
sarb
shlb
pop
fstpl
push
jge
jg
call
sti
cmc
cmp
mov
pop
sbb
loop
add
leave
repz
pop
adc
xchg
notl
mov
leave
cmp
into
cltd
and
into
cmp
fimuls
mov
movl
cmp
mov
cld
and
lahf
dec
scas
mov
mov
lock
clc
push
mov
lods
testb
push
aad
pop
out
jae
mov
add
mov
cmpsb
lcall
mov
sub
lcall
shr
inc
pop
les
or
fwait
push
std
jge
jle
dec
int3
outsb
or
cmp
in
out
andb
pusha
enter
sub
mov
jae
add
pop
dec
insb
cs
mov
pop
mull
idivb
loope
cmp
mov
repnz
aas
jg,pn
dec
mov
test
jmp
les
fisubl
push
push
call
xor
xor
push
xor
push
adc
adc
xchg
pop
jmp
mov
mov
xorl
call
shlb
dec
and
lret
cmc
sbb
add
xor
mov
pop
fistl
xchg
cs
inc
cld
push
mov
sub
mov
fcoms
inc
mov
xor
fwait
xor
fistpl
mov
into
pop
sub
imul
daa
in
push
inc
pop
aaa
out
vmovntdq
popa
cwtl
das
rorb
cmp
jl
add
mov
mov
lods
sti
push
icebp
imul
repnz
test
push
out
jmp
pop
mov
mov
adc
jl
stos
mov
mov
es
push
push
subl
sbb
push
icebp
cmp
clc
jns
out
inc
cmp
cmp
add
mov
jge
rol
sahf
adc
mov
mov
lret
aas
and
out
xor
gs
cmp
and
dec
add
inc
cmpsb
fs
testl
push
push
and
sti
xor
dec
sbb
xchg
inc
pushl
and
in
sub
into
adc
and
jmp
scas
add
mov
leave
mov
add
push
add
addl
and
and
fcmovbe
sbb
fldl
pop
sarl
inc
popa
jmp
cli
sub
sbb
dec
imul
add
xorl
cmc
xchg
das
push
aaa
add
aas
cmp
inc
sbb
orw
in
mov
dec
inc
mov
iret
xor
aam
lods
pop
sbb
add
lock
scas
repz
and
popa
cmp
andl
inc
mov
fisttps
fcmovnbe
pop
adc
aaa
sub
int3
xchg
push
fwait
sub
loopne
les
movsb
and
int
stos
inc
jg
loopne
push
inc
cmp
out
pop
lret
mov
fidivl
aam
call
add
loope
mov
adc
pop
mov
or
pop
stos
sbb
ljmp
clc
les
aad
pop
mov
sahf
push
xchg
lret
in
dec
mov
lods
in
sbb
mov
testb
lds
cltd
int3
fdivrl
xor
mov
stc
xchg
out
cmp
fnstcw
lea
in
xchg
gs
ja
mov
movsb
xor
inc
sbbl
push
jne
sar
shlb
out
and
pop
cmpsl
or
or
stos
pop
sub
xor
xor
lods
pop
add
cmpsl
pop
scas
loope
mov
leave
cmp
in
cmpsb
jl,pt
sbb
jmp
sbb
sahf
push
ja
cmp
dec
mov
fsubl
lods
pop
pop
jg
rolb
pop
pop
xchg
cmp
pop
ja
in
jl
sub
arpl
das
neg
inc
adcl
cmc
or
jns
mov
fwait
inc
or
sahf
jb
sub
pop
cmp
rclb
fidivl
subb
notb
iret
push
out
dec
lahf
xchg
pop
mov
jne
stos
int
in
inc
lcall
xchg
push
movb
pop
push
pop
dec
inc
pop
cmp
fnsave
sbbl
je
xchg
jge
rcl
sbb
pop
sub
ss
push
mov
sub
sbb
push
mov
andps
mov
aaa
jo
outsb
sub
mov
sub
or
push
daa
mov
movl
sub
scas
cwtl
cli
pop
mov
xchg
dec
add
test
rorb
call
insl
pop
in
xchg
repnz
ljmp
ret
mov
call
xchg
adc
in
bnd
scas
outsb
repz
fistps
fs
dec
and
ja
cli
rorb
add
xchg
push
sub
icebp
call
into
mov
mov
and
lods
insb
fxch
loope
popa
es
xor
addr16
in
shll
fbstp
push
test
stos
aad
and
adc
sbb
dec
stos
pop
and
cmp
push
rcrl
mov
xchg
mov
xchg
lret
xchg
jle
lcall
insb
testb
cmp
fs
mov
inc
or
scas
add
mov
insl
mov
in
loopne
int3
xchg
inc
imul
and
mov
call
sub
out
jecxz
bound
ret
push
mov
ficoms
mov
add
into
aam
iret
xchg
add
lods
adc
in
ret
mov
loopne
aad
dec
cmp
je
lcall
test
jnp
inc
cmpsl
outsl
stc
popa
arpl
jno
pop
jmp
cmpsl
jecxz
ds
adc
je
mov
lcall
sti
or
pop
dec
inc
add
sahf
add
mov
cmp
outsl
push
xchg
adc
xchg
lahf
adc
je
cmp
xchg
jl
or
testb
into
cs
repnz
pop
shrb
ret
cmc
sub
push
cld
lea
repnz
jae
fimull
jb
lods
xlat
add
out
pop
push
in
mov
dec
push
xor
jmp
sbb
daa
mov
mov
outsl
in
mov
ret
pop
xchg
imul
jecxz
not
push
sarl
aad
pop
sti
xor
sbb
push
shlb
sbb
popf
jl
xchg
mov
push
incb
mov
push
cmp
fldl2e
rorb
push
cmpl
sti
jne
mov
mov
adc
adc
movsb
dec
xor
lretw
jo
out
sbb
out
mov
mov
repz
xor
mov
imul
xor
jl
xor
mov
xor
sarl
mov
out
pop
aam
inc
shlb
fcmovb
push
fdivrl
loope
inc
mov
xchg
inc
inc
mov
negl
xor
jnp
out
sub
cmp
lcall
mov
inc
std
gs
into
out
push
into
xor
shr
es
jno
push
loopne
fnstenv
in
mov
ss
pop
cld
add
cmp
add
mov
sbb
pop
push
gs
sbb
mov
add
lods
shrb
cmc
cmpsl
inc
imul
lret
repnz
aad
sti
jnp
xchg
mov
es
push
test
dec
or
fucomi
or
fwait
cwtl
sbb
and
jne
mov
cld
sbb
mov
sub
jbe
into
bound
int3
ljmp
xchg
jl
stc
leave
cmp
add
cmpsl
xchg
loope
addl
je
pushf
jle
mov
movsb
cmp
rorb
push
or
andl
pop
push
xor
inc
ljmp
nop
and
pusha
movsb
pop
insb
xchg
mov
xlat
mov
daa
insl
mov
rcr
cwtl
pop
push
or
push
ds
nop
cmpsb
jne
pop
inc
les
stc
inc
pop
hlt
adc
rcrb
jmp
aad
and
sub
movsb
sub
cld
push
ss
les
test
xchg
cmpsl
jp
push
stos
add
adc
mov
or
mov
adc
push
insl
scas
jns
loope
and
and
mov
fists
xor
or
mov
enter
xchg
pop
sub
lahf
rcrl
adc
mov
mov
cmp
mov
lcall
sbb
pop
adcb
mov
daa
cmpsl
mov
cmp
inc
inc
shrb
loop
cs
pop
inc
dec
hlt
mov
xchg
jge
cmpsl
in
push
mov
jo
aaa
out
lret
jne
ljmp
ss
adc
jmp
stc
fdivl
lods
shll
test
dec
pushw
fwait
aaa
pop
sti
xlat
rcl
rcr
xchg
xchg
sbb
inc
or
sbb
dec
faddp
dec
outsb
push
in
ret
cmp
loopne
jbe
fs
ds
fld
xchg
inc
mov
sub
sub
aad
es
pop
push
pop
loope
je
lods
mov
push
sbb
inc
dec
setge
xor
out
push
push
sbb
xchg
ss
mov
jb
dec
lock
orb
ror
fstl
mov
daa
lock
mov
into
sti
mov
in
and
aas
out
nop
roll
stos
das
jmp
push
pop
mov
ret
and
call
cltd
or
mov
cwtl
popa
out
sub
out
xchg
repnz
mov
or
xcrypt-ecb
cmpsl
mov
cli
out
setne
icebp
shlb
and
sbb
mov
shrl
loopne
out
mov
inc
ficompl
jg
lret
pushf
dec
mov
cmp
loope
cmp
outsl
inc
and
add
add
mov
xor
mov
jge
cwtl
aad
lods
loopne
cld
mov
jp
xchg
adc
mov
and
xchg
mov
xchg
xchg
mov
xchg
bound
sub
sarb
jb
mov
cld
pop
mov
push
sahf
mov
rorb
jne
shlb
xor
lahf
pop
loop
xorl
lock
cltd
imul
cmpsb
add
iret
fs
movsb
inc
mov
pop
dec
pop
mov
xchg
repnz
push
lods
fbstp
icebp
lret
stos
mov
insb
lock
and
rcl
mov
add
sbb
xor
mov
aad
pushf
int
lahf
scas
add
stos
jl
adc
dec
test
jne
in
sub
mov
lahf
push
xchg
aam
adc
push
out
cld
mov
pop
and
loop
jns
xchg
inc
jno
jp
or
and
movsl
push
mov
sbb
xor
imul
lods
jns
add
mov
dec
stc
mov
cmp
bound
or
mov
dec
lret
pushaw
mov
std
push
and
push
jcxz
jbe
or
pop
mov
xlat
loopne
or
movsl
int3
lock
push
fcmovnu
inc
or
dec
pop
jb
pop
test
add
imul
call
clc
and
mov
mov
pop
cmpsb
adc
ret
push
lea
aaa
mov
lock
mov
and
sub
movsb
cmpl
lahf
push
sbb
popa
leave
bound
sub
add
cmp
cmp
ror
mov
test
or
hlt
adc
iret
or
daa
jns
iret
inc
inc
add
fs
cmp
iret
push
lods
fmuls
mov
arpl
lods
dec
popf
in
pop
add
scas
pop
ss
push
stos
mov
rclb
fldt
jle
mov
mov
lcall
lods
inc
mov
sub
push
aaa
jp
outsl
mov
sub
adc
fcoms
enter
sbb
mov
loope
aas
scas
clc
pop
jg
fwait
dec
mov
adcb
add
rclb
into
jmp
jno
xchg
cmp
add
or
jecxz
mov
cmp
mov
xchg
ljmp
xor
fs
sbb
sub
xor
lea
mov
addr16
adc
mov
and
int
sub
mov
xor
or
adc
mov
test
jl
sub
rclb
pop
ljmp
and
rcr
cmp
adc
cmp
mov
sub
jg
aaa
shrl
push
sti
loope
mov
pop
fimull
rcr
out
xor
sbb
pop
mov
pop
inc
jo
dec
cmp
fldenv
ss
shrl
adc
push
sbb
and
inc
cmp
dec
cmc
out
ret
dec
inc
lds
cmp
push
push
fistpl
pop
sbb
jge
mov
dec
jns
leave
loopne
loop
fucom
filds
nop
ljmp
and
stos
daa
mov
mov
pop
pop
gs
mov
mov
mov
repnz
scas
pusha
int3
ljmp
mov
jne
jecxz
cmpsl
or
lea
out
push
push
pop
adc
push
adc
js
jle
jecxz
jb,pn
jmp
and
xchg
dec
sub
out
sbb
xor
ds
push
mov
sub
dec
roll
add
fs
mov
pusha
pop
scas
insb
jns
dec
lahf
daa
xlat
pusha
idivl
aaa
roll
adc
jne
xor
jnp
xchg
sti
xchg
imulb
iret
inc
sahf
fldt
lret
xchg
and
push
cmc
push
scas
sbb
out
mov
jne
dec
je
lea
loop
jae,pt
aam
enter
subb
mov
mov
push
sbb
int
out
andl
jb
call
xor
sub
cmp
jne
bound
int3
lods
sarl
push
sub
mov
adc
hlt
sbb
mov
jmp
jnp
fldln2
cmp
fdivrl
or
push
or
stos
pop
mov
repnz
stos
lods
ljmp
fdivr
cmpl
push
ror
das
rcr
xchg
movsb
call
fistpll
in
mov
mov
push
xor
sbb
inc
adc
push
fldenv
push
and
cmp
aas
add
out
rolb
stos
sbb
out
cmp
xchg
es
add
lahf
push
or
addr16
adc
out
fucom
ret
mov
push
adc
cmc
in
push
dec
rcll
mov
ja
fcmove
int
xchg
or
sbb
shl
mov
pop
imul
mov
pop
pop
push
cmp
stos
mov
push
outsb
and
mov
outsl
aas
call
xor
add
loopne
and
decb
fisubl
inc
gs
aaa
sub
lods
lods
adc
dec
test
rolb
cmp
call
rcr
adc
sbb
mov
cld
sarb
aad
repz
mov
addb
fwait
adc
into
ret
cmpsl
inc
daa
push
add
mov
stos
lock
popf
xchg
cmpsb
sti
xchg
mov
jno
fcoms
add
cwtl
into
mov
mov
xor
or
jae
std
leave
xchg
xchg
adc
or
and
insb
stc
lea
and
pop
dec
push
js
and
shll
adcb
test
fdivs
push
adc
mov
or
mov
gs
iret
add
jge
icebp
adc
xor
mov
jg
add
insb
xlat
in
mov
cwtl
ss
xor
dec
mov
mov
nop
fnstsw
adc
or
hlt
mov
int3
xor
inc
xor
and
in
cmc
mov
les
nop
les
or
shlb
mov
ljmp
dec
fsubs
sub
mov
test
mov
lret
add
hlt
mov
scas
adc
cwtl
fs
mov
inc
mov
sbb
in
cmpsb
aad
xor
stos
jb
push
leave
mov
test
shll
inc
push
xchg
pop
add
movsl
dec
sarl
scas
adc
mov
aaa
lods
and
repnz
popf
pop
subl
pop
adc
int3
xchg
ret
xchg
pusha
jb
lea
xchg
arpl
lea
push
es
repnz
add
jle
mov
lahf
loope
rcr
nop
clc
lret
add
add
repz
das
iret
in
pop
add
push
mov
lcall
jmp
out
jg
xchg
lea
fisubs
cs
xchg
add
adcl
movsb
mov
push
dec
xor
testl
or
test
mov
cmp
inc
sbb
adcb
inc
gs
into
jge
imul
or
jmp
sbb
xorl
push
lcall
inc
mov
add
or
pop
mov
repz
icebp
lds
or
mov
jb
inc
clc
dec
mov
sahf
cmc
aaa
fwait
or
in
iret
xchg
in
test
repz
dec
dec
ss
enter
loop
enter
mov
imul
mov
sub
aam
scas
jle
pop
push
insl
push
push
sub
mov
imul
pop
mov
xchg
xor
jge
sahf
push
daa
xor
fcmovb
inc
cltd
int3
ljmp
push
rcrl
mov
addb
jmp
mov
inc
repnz
sub
cmp
dec
aam
ficoml
ret
nop
sbb
dec
cltd
mov
push
mov
cmp
cmp
jb
xor
push
mov
jecxz
jno
popa
sbb
bound
jge
mov
jge
xorl
sub
sbb
sub
mov
shl
pop
and
xor
cmpsl
xor
mov
popf
xchg
outsb
fisttpll
mov
add
cmp
fwait
and
dec
push
rcrl
pop
xor
out
or
enter
pop
scas
fidivl
or
insl
mov
dec
pop
lea
mov
aad
es
push
addl
mov
mov
pushf
xchg
xor
sbb
int
scas
mov
call
adc
lock
imul
scas
jne
add
jae
mov
loop
nop
xor
std
xor
in
and
test
or
xchg
int
xlat
xchg
push
jmp
sub
stos
hlt
mov
adc
fwait
popa
add
pop
xor
adcl
dec
xor
sub
cmpl
xor
sbb
mov
mov
outsb
add
dec
xor
pop
adc
and
mov
test
scas
push
sbb
loop
adc
xchg
call
ficompl
mov
nop
adc
je
mov
bound
add
mov
jne
repz
and
clc
jg
loope
xchg
and
mov
pop
mov
or
mov
scas
mov
push
cmpsb
shll
jae
xor
jl
cmp
scas
sbb
push
arpl
ss
mov
insl
lods
hlt
push
mov
dec
push
mov
insb
js
dec
dec
les
shlb
out
out
sub
jge
mov
cmpsb
mull
into
lcall
pop
cld
test
aad
orl
lock
rorb
cwtl
cmp
push
ret
ret
dec
cmc
jb
subb
jo
cmc
lods
pop
sub
dec
aaa
js
mov
test
cmp
rcll
jge
invd
out
adc
popa
into
or
cs
xor
mov
dec
xchg
punpcklwd
nop
mov
push
push
outsb
push
jl
lret
fistps
xchg
in
mov
stos
stc
cli
js
sbbl
mov
mov
dec
or
ds
hlt
out
dec
inc
inc
inc
rcrl
sbb
and
sbb
sub
mov
add
sbb
sub
insb
dec
push
movsb
mov
push
into
sub
dec
xor
adc
inc
mov
in
cld
js
loope
mov
scas
fnsave
arpl
or
int
xor
xchg
add
clc
scas
push
fsubrl
lds
mov
or
mov
cmp
arpl
pop
ja
fadds
cli
push
sub
cmp
shll
mov
cmp
or
loop
cmpsl
pop
xor
mov
test
decb
add
push
repz
dec
add
pop
in
clc
out
sbb
cmpsb
xchg
jge
loopne
lret
stc
in
add
lock
ljmp
dec
add
fidivl
cmc
pop
outsl
out
orb
sub
fxch
jg
or
xchg
inc
aas
aaa
sbb
out
aaa
jl
xlat
xchg
mov
insb
adc
out
push
push
ja
jo
scas
lcall
mov
cwtl
push
test
pop
cmp
in
add
insl
mov
jmp
cmp
mov
and
pop
mov
divl
sbb
mov
jp
add
repnz
je
or
xchg
hlt
pop
cmp
push
pop
push
call
ljmp
sbb
dec
fwait
neg
sub
loope
bound
push
pusha
cmp
aaa
cld
in
jmp
js
xor
insb
test
sbb
push
mov
mov
xorl
jmp
mov
jmp
xchg
xor
mov
and
daa
cltd
pop
adc
lock
ljmp
ret
and
mov
lds
out
sub
in
or
xor
mov
inc
ss
in
pop
pop
mov
inc
nop
test
imul
cmp
dec
mov
jb
fidivrs
dec
je
mov
push
xchg
stc
fidivrl
xchg
cmp
icebp
lods
popf
mov
xchg
xchg
adc
aam
mov
sub
mov
dec
addr16
sbb
test
pop
mov
lods
es
push
cs
scas
arpl
ljmp
movsl
fwait
push
push
xchg
inc
cmp
and
pop
xchg
gs
mov
or
sub
lret
ja
push
ja
cld
out
mov
stc
xchg
mov
xchg
xor
inc
or
mov
pop
jle
cli
jl
dec
rcrb
call
xchg
sub
loope
fldenv
inc
jmp
xlat
das
push
sbb
sarl
rcrb
mov
cmp
test
mov
imul
xchg
repnz
scas
adc
pushf
mov
insl
push
sbb
bound
shl
cmp
xchg
popa
popf
mov
jp
or
or
push
add
out
stos
das
mov
out
inc
ljmp
push
outsl
inc
adc
jbe
mov
arpl
ror
arpl
cmp
mov
rclb
orb
fwait
ret
lock
out
adc
pop
mov
jno
cmc
outsb
imul
sub
ja
leave
inc
ljmp
sbb
sbb
pop
aam
clts
test
inc
pop
js
lcall
or
pop
or
enter
int3
pop
mov
dec
outsl
adc
repnz
iret
sub
mov
insb
das
push
mov
or
mov
cmp
mov
test
mov
test
fsubrs
jmp
and
scas
xor
std
ss
leave
scas
stc
mov
xchg
icebp
ljmp
cmc
cmovns
mov
add
mov
mov
xor
test
jbe
cwtl
test
cltd
clc
pushf
loopne
loope
int
mov
dec
mov
sahf
cmp
push
add
mov
bound
sbb
jns
scas
bswap
int3
sub
sub
mov
pusha
xchg
fsts
pop
lcall
ds
push
pop
pop
out
iret
cmp
add
shl
ljmp
or
stc
pop
mov
pusha
inc
imul
jp
cmpsl
arpl
outsl
fs
and
ds
jns
pop
dec
xlat
jb
imulb
into
cmp
add
jl
aaa
mov
testb
push
mov
and
push
inc
mov
incb
mov
pop
pop
adc
out
lcall
jb
gs
jg
out
popa
mov
jnp
xor
jbe
or
clc
pop
insl
ljmp
sub
sti
pop
mov
mov
push
mov
movsl
das
int3
sub
mov
dec
jmp
mov
imul
fmul
lock
ss
and
scas
xlat
mov
xor
rorl
push
add
jp
sbb
pop
int
push
cmp
mov
popf
scas
movaps
inc
xchg
and
nop
loopne
rolb
sti
mov
int3
in
or
or
pushf
stc
cmp
in
fcoml
stc
lock
or
fs
pop
jno
mov
outsb
push
adc
push
arpl
mov
jae
jbe
jmp
rclb
xchg
ja
push
loope
inc
daa
adc
mov
or
and
mulb
sti
rcr
pushf
cltd
in
cltd
mov
int3
and
inc
and
inc
pusha
inc
mov
cmp
xchg
and
stos
fimull
imul
mov
ljmp
mov
scas
ret
xchg
add
mov
push
enter
gs
sbbb
lret
xlat
push
or
adc
mov
adc
imul
cld
sbb
xchg
sub
idivl
shl
mov
push
add
sbb
jnp
rol
pop
xchg
int3
mov
inc
imul
mov
dec
mov
adc
stos
sbb
push
movb
mov
or
das
dec
sbb
adc
cmp
or
xchg
mov
aas
pop
fcomps
or
shl
jle
mov
fwait
pop
and
test
push
jno
jnp
aaa
xchg
lods
sub
test
cwtl
pop
andb
push
jno
subl
in
dec
and
test
stos
jb
std
xor
push
add
test
inc
cmp
sbb
pop
pop
jmp
push
push
adc
dec
inc
fscale
data16
cld
jmp
sbb
xlat
adc
and
mov
lahf
dec
add
stos
mov
bound
gs
mov
lcall
outsl
jae
loope
xchg
or
mov
loop
mov
add
dec
filds
fstl
in
das
sbb
incb
fcomip
cmp
jbe
xor
lcall
adc
and
or
call
dec
and
jmp
xchg
sbb
mov
xchg
mov
in
test
shlb
mov
push
mov
aaa
lret
ja
fisttpl
jecxz
push
icebp
mov
fdivrl
aas
jo
mov
in
repz
push
xchg
mov
xor
hlt
dec
inc
aaa
gs
sbb
xchg
cli
fbstp
mov
xor
addr16
xor
sbb
inc
test
addr16
inc
xchg
jo
xchg
imul
cwtl
jge
incl
xor
rorb
icebp
lock
mov
xor
dec
xor
into
shl
xor
js
jb
sub
push
in
xchg
dec
mov
lock
insl
mov
sahf
cmp
dec
fisubs
std
aaa
lods
push
push
int
xlat
mov
mov
pop
mov
dec
mov
pusha
dec
mov
lods
mov
push
cmpb
sahf
or
out
add
lods
push
jp
hlt
pop
pusha
pusha
add
sub
insb
sti
xchg
cmp
iret
outsb
sarb
lret
mov
mov
scas
xchg
jecxz
sub
out
test
repnz
loope
cwtl
add
imul
outsb
and
xchg
jmp
push
cmpsl
push
jns
pop
cs
jg
jbe
pop
jg
loope
cmpl
icebp
jns
das
inc
repz
xchg
xlat
mov
es
test
jecxz
dec
fildl
je,pt
xor
dec
mov
or
sub
jl
cmp
add
push
dec
lds
popa
call
sti
dec
jnp
inc
xchg
jge
jmp
fsubrs
jge
mov
jo
sub
adc
ret
xchg
addr16
cmc
mov
test
fildl
and
out
in
xlat
xchg
ficompl
push
jbe
sub
cmpsb
jns
jns
and
mov
pop
mov
es
fbld
add
jge
push
movsl
pop
cmpsl
daa
movsb
add
jge
out
ds
iret
push
push
scas
mov
lahf
adc
xchg
xchg
sbb
aam
ret
jg
mov
out
movsl
lods
xchg
aam
ss
mov
fcompl
jbe
inc
les
mov
pop
cmpsb
cs
stos
mov
xchg
push
mov
sbb
xchg
xchg
popa
xchg
and
enter
scas
jecxz
mov
inc
add
je
jne
push
cmpsb
and
stc
lock
lods
xchg
cld
aad
cmp
fs
ss
idivb
and
stc
iret
add
jnp
cltd
imul
pop
cwtl
decl
iret
imul
aaa
ret
cmp
adc
stos
sbb
mov
cli
jne
push
jne
mov
xor
xor
fildl
inc
push
adc
or
dec
inc
aas
push
lret
sbb
push
jmp
pop
or
mov
lret
adc
ja
mov
dec
imul
ror
and
or
dec
mov
roll
push
bnd
mov
sarl
setne
mov
sub
ret
pop
xchg
jbe
push
inc
movb
fldt
lcall
and
mov
cmc
mov
out
add
inc
lock
aaa
mov
and
jb
rclb
inc
push
pop
sub
jge
sub
or
xor
addr16
andb
xchg
mov
icebp
xchg
pop
fcoms
movsl
mov
push
mov
and
cmp
icebp
or
inc
out
pop
dec
int3
loopne
cs
push
lret
clc
inc
mov
jl
pop
lahf
fisubrl
dec
rolb
jno
adc
popa
push
jns
add
test
xchg
sub
push
pop
or
pop
sub
or
fldt
les
scas
stos
test
divb
cmp
xchg
pop
js
push
jno
push
into
xchg
lret
in
movsl
adc
fidivrs
push
jnp
fdiv
xor
aaa
xor
cld
pop
xchg
rorb
fs
mov
push
insb
or
sbb
cli
push
js
jg
arpl
xlat
xor
sub
int
pushf
jnp
dec
popa
fsubrl
mov
out
jp
adc
lahf
mov
pop
and
fidivl
jb
lret
into
cmp
or
xor
pop
rorl
add
popa
inc
mov
cmpsl
push
push
or
lods
xchg
jno
add
in
mov
ss
lcall
insl
out
xor
mov
push
aam
div
mov
push
sub
test
cmp
cmp
stc
mov
jae
loope
inc
call
xchg
mov
mov
or
add
lds
gs
jb
or
data16
pop
popa
out
pop
fldenv
cli
js
mov
sub
push
loope
subl
fisubs
and
dec
idivl
fcomps
jo
push
mov
dec
inc
mov
dec
xchg
or
test
and
xchg
pusha
je
xchg
sarl
push
push
scas
dec
aad
lds
and
sti
enter
mov
cmp
xor
adc
es
in
xchg
lods
fstl
das
cmpsl
jecxz
jle
adc
fmull
bound
retw
pop
and
movsb
push
cmp
cld
mov
sub
pop
sbb
daa
lods
xlat
dec
jb
xchg
leave
adc
and
inc
mov
jo
es
sbb
xchg
imul
cmp
cmp
fcmovu
adc
das
jge
sarb
xlat
inc
rolb
mov
mov
adc
clc
cmp
out
dec
sahf
sarb
cmp
sbb
js
xchg
in
push
xlat
xor
xor
cmp
xchg
push
insl
nop
jns
lea
gs
imul
clc
ja
fldl2t
xor
jmp
fld1
sbb
sub
dec
je
jge
stos
out
out
mov
push
test
xor
sbb
mov
inc
lods
pop
test
inc
ja
push
aas
jg
jne
inc
xchg
pusha
loope
sub
dec
push
das
hlt
cs
addr16
nop
pop
pop
cs
push
mov
lcall
mov
in
pop
pop
sarb
adc
lock
adc
xor
push
cmp
pop
inc
push
dec
pop
mov
stos
decb
out
push
push
data16
sbbl
rolb
jne
lods
dec
fcmovnu
inc
je
and
dec
and
cmpsl
lcall
pop
and
rorb
stos
sbb
sbb
cld
imull
loopne
ss
pop
das
sbb
add
push
inc
xchg
xor
movsl
pop
test
cltd
out
push
imul
ret
lock
sahf
stos
jne
pop
sub
in
fsts
mov
lcall
ret
pusha
mov
mov
int3
dec
inc
adcl
dec
fbstp
es
xor
lods
mov
jbe
shlb
xor
das
cmp
test
mov
int3
inc
adc
mov
or
jecxz
mov
adc
sbb
shll
in
sub
mov
jnp
scas
hlt
loop
push
push
push
sub
sub
lret
ss
inc
jge
or
outsb
pop
xchg
inc
adc
and
pop
lcall
jns
dec
jno
lret
ret
ret
scas
and
scas
jge
aas
jns
pop
push
xorb
icebp
sub
mov
push
aas
push
std
dec
mov
add
fldt
gs
pop
push
aas
shrl
pop
in
imulb
inc
add
xchg
add
push
mov
pop
or
loopne
outsl
lret
daa
inc
adc
pop
dec
xor
rolb
mov
xor
push
xchg
fistps
dec
sub
adc
inc
fcoml
rorb
hlt
fsubrs
sbb
cmc
out
mov
insl
adc
mov
inc
push
xchg
aaa
cmp
fisubrs
ljmp
lcall
ja
loop
sub
sti
and
out
xor
ficompl
fs
je
int3
dec
shlb
imul
sub
in
lea
mov
jae
push
pop
rcr
lea
sub
fistpll
repnz
test
cltd
mov
ja
mov
inc
sub
pop
sti
mov
addr16
cld
fiaddl
cli
xchg
push
inc
adc
insl
sbb
popa
cmp
shrl
or
xchg
fwait
pop
xchg
fidivs
and
adc
adc
mov
push
cmp
xor
xor
ret
fdivrs
shll
and
push
and
arpl
xchg
jo
sub
xor
mov
jge
jb
in
mov
cmp
ret
jl
icebp
mov
dec
pop
xor
cmp
sub
cmp
fdivrp
xor
mov
aad
mov
xor
loope
push
inc
adc
rcrb
outsl
mov
jb
cmp
imul
push
js
dec
inc
mov
cwtl
pushf
ficompl
dec
shl
push
testb
adc
aam
sti
adc
jge
jl
pop
mov
add
add
mov
mov
xor
inc
roll
out
aaa
cld
jmp
xchg
ficomps
gs
push
out
adc
daa
xor
dec
stc
test
aas
bound
add
stos
mov
jecxz
movsl
push
hlt
cmp
call
testb
fldt
fwait
xor
mov
hlt
ljmp
stc
xchg
sahf
dec
arpl
mov
or
mov
pop
imul
ds
jg
mov
loopne
sub
sub
imul
jns
push
in
pop
adc
popa
or
mov
dec
adc
or
sti
pop
out
push
repnz
out
mov
lahf
push
stos
xor
fisubl
ja,pn
pop
adc
jp
cmp
ror
mov
lods
lock
loopne
push
test
and
cli
inc
gs
fimull
xrelease
jmp
int
mov
mov
mov
jb
bound
sbb
inc
add
and
pop
ss
push
xor
je
sbb
mov
subb
test
sti
jne
add
jns
mov
jle
das
gs
insb
inc
or
stos
mov
movsb
mov
cld
jo
clc
orl
jb
push
ret
popa
scas
jle
add
mov
lret
ret
roll
sti
jp
outsb
out
xor
aad
add
push
push
push
or
into
subl
push
pop
mov
lock
out
sub
and
cwtl
cmc
inc
mov
inc
sub
and
cmp
or
lcall
push
adc
xor
mov
jnp
std
inc
cmpsb
in
mov
mov
cld
cmp
cmpsl
and
mov
aad
xor
movsl
inc
add
push
xchg
adc
xor
je
xchg
jg
xor
es
mov
repz
lods
sbb
daa
push
mov
outsl
ja
sub
pusha
pop
adc
cmp
cmp
push
push
lea
punpcklbw
adc
gs
mov
jecxz
sbb
add
or
loopne
cmc
inc
cld
stos
adcb
leave
xlat
mov
sbb
adcl
int
rcll
inc
je
cmp
pop
hlt
ret
and
add
cmp
pusha
adc
idiv
insb
xor
cmpsb
aam
or
mov
js
jno
add
cmp
imul
mov
cmp
xchg
cmp
out
and
sti
jl
les
cmp
xor
push
jo
aad
pop
jecxz
std
add
xor
cmpsb
push
arpl
pop
mov
push
ja
dec
xchg
jno
iret
sbb
or
lods
arpl
xchg
lret
fwait
adc
xlat
mov
fsubrl
popa
jne
mov
or
or
movsl
push
ljmp
cmp
jno
rorb
push
fidivrs
mov
or
push
jle
clc
jle
ret
dec
lcall
xchg
adc
and
xchg
fnstsw
sahf
mov
pop
roll
xchg
jns
ret
cld
mov
in
dec
xchg
rolb
or
mov
addb
mov
test
sbb
adc
jnp
ljmp
leave
addr16
jl
mov
pop
mov
mov
jle
aaa
adc
lahf
fadds
mov
sub
add
sbb
mov
adc
outsl
jo
sarb
sbb
pop
push
sbb
mov
push
mov
in
pop
and
test
cltd
repnz
xchg
jo
les
and
and
popf
pop
and
cmp
fs
and
xor
hlt
cmove
jge
xor
cwtl
loopne
mov
push
and
imul
cmp
ja
outsl
decl
cmpl
insb
popa
lock
sbb
aaa
dec
push
insl
into
adc
xchg
lds
push
pop
pop
cltd
sahf
pop
stos
adc
iret
and
cmp
or
add
ret
cwtl
ret
jmp
mov
push
in
pop
xorl
jle
leave
add
xchg
jg
mov
jb
or
mov
adc
sbb
sti
shrb
fldln2
push
dec
jmp
xor
add
mov
xchg
loope
push
lods
or
fs
ret
cmp
adc
ljmp
insb
mov
push
push
inc
or
shl
mov
mov
cmp
ja
call
dec
xlat
push
lds
adc
adc
xor
lods
adc
pop
scas
movzwl
call
out
repz
mov
cmc
call
cmpsb
cwtl
std
lods
jle
bound
arpl
jno
mov
and
pop
mov
insl
aaa
push
sbb
rcrb
sbb
dec
dec
cmc
sbb
arpl
sub
cmp
cmpsl
mov
dec
test
aas
mov
and
test
imul
lret
pushf
push
push
mov
les
lret
ss
push
xchg
xchg
xchg
jb
jne
std
test
sub
in
testl
call
into
js
push
ret
jae
lock
sbb
pop
jne
out
les
adcb
shrl
mov
sbb
cmp
leave
sti
les
mov
imull
sub
sti
imul
mov
inc
jae
mov
nop
icebp
pop
sti
repnz
xchg
fsubs
add
insl
cmc
rcr
shr
pop
and
loope
xor
fldz
xchg
push
dec
sub
or
mov
adc
adc
rol
mov
mov
push
pop
sub
inc
leave
mov
push
in
push
popa
mov
es
mov
sti
and
mov
popf
fs
outsl
mov
dec
in
and
or
push
mov
adc
dec
or
xor
daa
push
insl
push
in
stc
sarl
mov
sbb
mov
fnstcw
rcl
ds
dec
jnp
pop
pushf
sahf
aam
push
push
xchg
mov
iret
ja
scas
movsl
add
xchg
jle
lods
jae
adcb
inc
pop
ljmp
into
ljmp
in
xlat
and
pop
push
push
xor
movsb
add
mov
mov
scas
xchg
das
pop
or
push
push
cmpsb
dec
out
or
leave
leave
pop
int
mov
push
fcomp
pushf
out
push
shll
push
clc
call
and
mov
sub
and
cmc
in
pop
jmp
adc
sbb
mov
lea
int
jne
fisubrl
fsts
je
stos
pop
fisubrl
leave
push
jl
dec
int3
jns
cmp
movsb
scas
pop
xor
add
mov
fnstenv
mov
stc
hlt
in
dec
in
mov
add
xor
cmpsl
sahf
add
lea
int3
inc
enter
adc
arpl
arpl
pop
test
andl
xor
sub
test
bound
divl
out
dec
dec
adc
mov
lock
mov
das
in
mov
popa
aad
pop
mov
mov
mov
xor
mov
pop
aaa
adc
add
test
push
pop
push
mov
push
insl
inc
pop
pop
clc
scas
repnz
xchg
test
call
xor
aaa
xchg
stos
hlt
repnz
in
in
rorb
push
jle
inc
das
sub
lea
mov
data16
hlt
or
pop
xor
mov
repz
xlat
rorl
jmp
aas
jge
stos
ljmp
adc
std
push
in
dec
les
sti
mov
nop
gs
fwait
in
cmp
inc
xchg
inc
sbb
mov
popf
arpl
clc
arpl
subl
xchg
and
fdiv
and
add
sub
mov
pop
mov
xchg
pop
cmp
pop
and
dec
fistpl
cmp
div
sub
mov
xorb
ret
ljmp
int
jecxz
enter
movl
mov
out
sbb
fdivl
push
pop
fldcw
movsb
xchg
ffree
nop
pop
sbbb
adc
lods
add
repz
sub
and
pop
mov
cwtl
data16
call
sub
adc
xchg
divps
stc
inc
lahf
sub
jp
add
insl
rolb
cmpsl
dec
fists
push
pop
inc
insb
mov
and
rcl
xchg
pop
test
pop
dec
js
cmc
mov
in
ret
imul
push
clc
leave
nop
jne
aas
mov
adc
packsswb
jmp
cmpsl
fdivr
sub
lods
cltd
mov
nop
sbb
std
gs
lds
dec
test
or
mov
mov
inc
fucom
neg
push
or
outsb
mov
xchg
jmp
test
push
cltd
fiadds
loopne
adc
cmc
js
pop
jp
outsb
lods
xor
lea
jecxz
add
sub
enter
mov
dec
divb
and
lods
cltd
ja
int
cmp
mov
roll
cmpsb
test
aas
pop
xor
inc
repz
imul
ljmp
cli
mov
shrl
aad
sti
leave
pop
push
xlat
jae
movsl
cs
lock
std
mov
das
in
jbe
mov
fcmovnbe
cmpb
push
sub
xchg
ret
nop
dec
push
outsb
cmp
fnstsw
or
outsl
add
mov
inc
fnstsw
scas
mov
in
sahf
sub
dec
mov
and
mov
es
jecxz
and
mov
sbb
imul
add
cmp
cld
lcall
cmp
sti
cmp
jmp
adc
xchg
aas
frstor
les
sti
push
iret
or
cmc
outsb
push
mov
test
fs
cmp
imul
or
pop
xor
loop
inc
sbbl
inc
add
clc
cmp
imul
cwtl
int3
xlat
fimull
jae
pop
pop
sub
outsb
jns
mov
dec
push
xorb
mov
decl
pop
xchg
or
add
sbb
mov
movsb
repz
jmp
test
fcomps
test
pop
push
pop
inc
or
mov
mov
lret
daa
cmp
out
add
sbb
xchg
movlps
int
sub
push
jae
test
mov
adc
mov
xchg
shlb
and
in
cld
dec
int3
outsb
dec
xchg
int3
imul
pop
push
fmuls
mov
push
sub
fldt
mov
sbb
add
fs
sarb
les
orl
stc
xchg
sub
sub
and
sti
cmc
and
sub
mov
jb
les
insl
fdivrs
stos
bound
xchg
nop
adc
je
aas
sbb
out
and
mov
ds
fsubrp
adcb
add
and
adc
daa
and
in
into
or
dec
into
test
or
subl
pop
js
push
mov
xor
xchg
xchg
outsl
outsb
popf
mov
cmpsl
jecxz
outsl
je
mov
sub
rcrl
js
popa
push
repnz
shlb
xor
bound
icebp
mov
cmp
test
xchg
lcall
jp
inc
bound
pop
push
and
mov
xlat
addr16
outsl
cltd
push
in
cmp
lds
pop
push
jl
push
mov
vpmaxsw
dec
out
clc
mov
test
rcrl
gs
repnz
les
jmp
xor
push
dec
rolb
push
sub
stos
and
imull
pushf
pop
sbb
xor
ja
repz
jb
mov
mov
mov
xchg
mov
cmp
jmp
inc
add
pop
mov
sbb
rorl
mov
loope
push
sbb
and
neg
or
dec
mov
fcmovnb
add
mov
or
jp
lret
pop
fwait
mov
shlb
jno
add
cmp
lock
lcall
inc
movsb
xchg
push
dec
fndisi(8087
inc
jbe
shll
clc
cwtl
mov
scas
xorl
add
mov
insl
jmp
imul
pop
sub
mov
pop
xchg
fsubrs
mov
add
adc
xchg
daa
fsubrl
xor
sub
sub
jb
mov
cmp
mov
mov
inc
mov
pop
mov
or
scas
and
xor
lods
das
sbb
mov
ljmp
lret
push
cld
cmp
shlb
mov
fwait
mov
jns
sbb
in
mov
popf
je
xchg
bound
mov
push
fs
mov
pop
xadd
daa
sub
sbb
push
mov
push
mov
jno
pop
push
jnp
cli
push
or
cld
mov
xor
cmp
mov
push
sub
add
fs
mov
in
repz
fucomip
fadds
out
ret
in
out
ret
pusha
sbb
push
cs
cmp
call
mov
xchg
mov
push
push
xor
out
imul
jae
sbb
dec
test
lock
adc
jmp
insl
fmul
call
cmp
dec
sarb
add
and
pop
ja,pt
stos
jge
dec
push
enter
dec
xchg
fisubrs
pop
mov
cmpsb
cmp
das
popa
sub
push
mov
xor
xlat
mov
movsb
pop
mov
inc
mov
movsl
pop
loopne
daa
in
xor
out
mov
or
gs
lahf
in
mov
in
insb
sub
add
test
mov
scas
push
adc
sbb
mov
sbb
stc
xor
mov
test
inc
push
ret
mov
sahf
jo
mov
inc
sub
cmc
mov
loope
test
adc
jo
mov
out
cli
gs
xchg
stos
stc
clc
pop
mov
xchg
jl
push
dec
jl
cli
sbb
aaa
push
push
mov
je
push
cmp
fcmovnbe
dec
or
mov
movsl
insl
mov
scas
daa
test
sti
cmp
bound
pop
mov
sarb
push
cmp
rcl
cmp
cmp
pusha
int
std
sbb
xor
mov
mov
jbe
ss
fdivrl
mov
loopne
andb
add
repz
int3
mov
inc
fcompl
adc
repnz
jns
jns
xchg
clc
inc
std
pop
xchg
sahf
sbb
jnp
cmpl
dec
xchg
sbbl
fwait
test
mov
xchg
xchg
pop
lods
push
sub
add
pop
inc
ljmp
imul
push
xor
cmpl
loopne
lret
jno
pop
mov
dec
icebp
or
in
and
mov
loop
test
pushf
das
psllq
and
addl
ja
cmc
pop
cli
push
jle
or
adc
pop
cltd
lcall
les
xchg
jo
or
js
imul
add
add
aaa
out
and
shrl
mov
and
imul
xor
das
out
outsl
mov
mov
call
movb
insl
cltd
jb
push
push
jge
jmp
je
or
mov
in
aad
scas
stos
mov
inc
dec
mov
inc
adc
push
jbe
imul
shrl
insl
dec
ret
inc
aad
mov
fldl
icebp
stos
icebp
out
daa
adc
pusha
inc
sub
mov
dec
or
xchg
add
pushf
jnp
js
arpl
jge
pop
push
mov
adc
out
sub
out
arpl
mov
in
stos
scas
sub
aaa
xchg
bound
xchg
gs
mov
adc
push
xor
std
mov
sub
or
popf
test
or
pop
lret
push
xlat
test
cmp
stos
mov
pop
xchg
pop
loope
or
adc
add
mov
ret
pop
dec
sbb
repz
pop
ljmp
sbb
and
das
pop
mov
fildl
mov
cvtpi2ps
push
cli
scas
xchg
push
aad
out
ret
ret
pop
lock
or
pop
xchg
pop
xor
iret
bound
les
adc
or
jmp
add
int
and
out
leave
cmp
loope
sbb
pop
addr16
popa
mov
cmp
rolb
inc
fstps
fiaddl
fsubrs
mov
mov
xlat
les
inc
int3
cmp
inc
addr16
xchg
jl
faddl
das
fistl
pop
imul
cmp
or
call
testb
xor
lcall
mov
lret
popf
and
sub
ss
adc
jns
test
icebp
out
jbe
cltd
mov
or
pop
lret
add
test
dec
xor
dec
add
cmpsl
shrb
pop
add
xchg
ss
jo
adc
aad
imulb
pop
mov
gs
and
pusha
sbb
inc
in
popa
push
out
cmpl
in
xchg
add
out
scas
nop
lahf
pop
stos
sbb
or
call
rcrb
aas
cwtl
mulb
xchg
mov
loop
jae
divb
cld
in
cmpsl
mov
xchg
nop
lahf
or
adc
pop
scas
stos
or
xchg
jne
cmc
das
les
nop
dec
loop
cmp
sub
xlat
mov
xchg
movb
ss
ss
mov
shlb
mulb
loope
shlb
lret
inc
and
inc
pop
cwtl
or
enter
movsb
sub
clc
jns
sub
lods
cmc
push
sysenter
jb
mov
mov
dec
es
outsl
outsl
add
push
cmp
arpl
popa
call
in
int
xchg
mov
loope
int
jne
xchg
xchg
push
dec
mov
jnp
cmp
xorb
popf
jae
mov
out
in
pop
pop
movsl
sub
jl,pn
add
adc
out
push
ret
mov
dec
xorl
inc
orb
dec
pop
adc
std
cld
push
push
sub
and
mov
test
adc
dec
jl
inc
push
xchg
xchg
mov
mov
xchg
mov
mov
shll
cwtl
xchg
imul
and
inc
inc
fnstsw
push
cmp
ljmp
mov
adc
scas
add
test
push
rorl
lea
sbb
call
add
push
sub
in
faddl
leave
outsb
scas
or
and
lock
int3
scas
repnz
cmovl
pop
xchg
fstpt
orl
pop
cmpsb
pop
shl
mov
push
gs
xchg
jl
jmp
adc
roll
sub
dec
lcall
or
mov
jecxz
sub
ss
mov
mov
hlt
sete
pop
adc
aaa
scas
scas
scas
mov
call
cmc
scas
lods
test
push
xchg
lret
mov
sub
xchg
fdivrs
imul
mov
scas
in
mov
into
dec
arpl
adc
mov
jl
mov
iret
pop
jge
out
push
cmpsl
jo
inc
leave
in
mov
jbe
hlt
and
aam
inc
mov
inc
add
xor
in
xor
pop
cmc
aad
enter
out
adc
daa
mov
push
sbb
pop
sub
sbb
mov
or
mov
pop
out
pop
imull
push
lds
add
cmpb
sarl
push
out
or
enter
std
ret
repnz
xchg
sbb
and
adcl
lret
outsl
sarb
cld
push
fwait
scas
inc
mov
loope
int3
cli
inc
ss
dec
jo
add
add
loop
imul
or
jge
inc
push
mov
sbb
dec
pushf
subl
lahf
jne
dec
mov
test
sub
xchg
add
addl
rorb
push
rol
xchg
insl
aaa
aam
sarb
add
cli
popaw
rcrb
aam
in
iret
rorl
ss
xor
push
dec
mov
push
sahf
repz
cld
jecxz
fisubl
clc
repnz
adc
fldt
popf
pushf
xchg
test
into
xchg
adc
popa
pause
incl
ficompl
insl
cmp
mov
xor
push
or
repnz
or
cmp
adc
xchg
mov
xchg
pop
nop
sbb
xchg
mov
movsl
pop
popf
and
jb
adc
add
fsubr
push
cli
sbb
lret
cld
popf
stos
or
mov
addr16
icebp
xchg
add
cmpsb
imul
movsb
out
and
es
repz
inc
cmp
lods
inc
push
gs
push
lcall
in
pop
popa
in
fistl
dec
shrb
fidivrl
repz
sahf
push
lahf
jae
xchg
pop
xor
int3
push
in
add
lahf
pop
loop
cmp
sub
cmp
mov
aaa
sarl
mov
push
sbb
mov
lock
inc
ret
aam
and
xlat
or
call
mov
jl
and
cmp
ss
xchg
sbb
add
pushf
mov
dec
decb
mov
sbb
dec
in
inc
jno
jecxz
sti
das
loope
std
sub
jo
push
push
sub
gs
adc
dec
fstpl
or
ret
int
cmp
jl
bound
mov
stos
jmp
fcompl
repnz
repz
stos
adc
jns
dec
mov
cmp
das
mov
imul
fstpt
mov
xor
dec
dec
ret
mov
es
test
xor
into
or
xchg
out
xchg
icebp
xor
pushf
jmp
shl
dec
mov
push
mov
leave
faddp
and
loopne
ss
dec
sbb
or
pop
mov
jge
sub
push
movsb
shrl
mov
jp
sarl
pop
out
stos
stc
pop
out
movups
sub
xor
sbb
cltd
mov
inc
out
fcoms
push
addr16
xchg
inc
jl
or
jg
call
push
popa
pushf
pop
lds
lock
rclb
xor
sbb
fldenv
int
xor
adc
clc
popa
push
pushf
or
in
add
enter
rcrb
mov
xor
pop
push
mov
and
data16
mov
pushf
jg
mov
mov
jbe
push
pusha
mov
xor
push
xchg
cld
leave
rcll
pop
and
xchg
loopne
rcl
jns
cwtl
cs
pop
ret
push
xchg
lea
into
fs
mov
mov
mov
push
mov
sahf
pop
push
mov
add
in
push
jns
int3
daa
enter
es
in
in
loop
mov
dec
sub
lret
jg
mov
int3
inc
mov
fimuls
mov
cmpsl
jecxz
pop
jl
loope
arpl
outsb
add
push
or
pop
adc
scas
loop
into
mov
insl
sub
mov
pop
enter
push
sub
add
call
dec
outsl
jl
dec
sbb
xchg
aas
xchg
add
scas
pop
sbb
push
xchg
out
nop
fsubs
lret
divb
in
outsb
add
fidivl
mov
cld
popf
adc
mov
and
pop
mov
push
add
aad
jg
jmp
mov
idiv
mov
mov
sbb
mul
fisttpll
xorl
xor
cld
xchg
outsb
mov
pop
add
mov
lcall
fidivrs
pop
fstps
dec
lock
je
push
arpl
ret
jne
sbb
inc
add
repz
fld
out
mov
lret
gs
loop
scas
scas
cli
test
lds
sub
roll
mov
inc
mov
xchg
aaa
insb
jp
mov
mov
scas
push
scas
inc
bound
mov
push
adc
mov
cmp
cmpps
dec
rclb
cwtl
lea
in
xor
aaa
clc
xor
add
mov
fistps
push
int3
cmp
nop
dec
pop
and
xchg
aas
outsb
sti
dec
or
hlt
jae
repz
loopne
mov
in
stos
cvtpi2ps
jno
movsl
inc
push
testb
addr16
push
push
fwait
mov
xor
cmpb
mov
jle
test
ljmp
add
lahf
aad
leave
pop
rclb
push
ljmp
ljmp
mov
push
jb
jecxz
mov
mov
loope
pop
sbb
sub
cmpb
xchg
or
inc
pop
fwait
adc
cltd
scas
imul
fbstp
ret
or
gs
mov
in
add
repz
int3
jge
dec
jno
jb
adc
pop
arpl
mov
adc
shrb
and
inc
icebp
cmpsl
insb
es
pop
jbe
test
add
leave
jno
xchg
sub
pop
cli
pop
lods
sub
cmp
repnz
stc
jecxz
repnz
mov
push
lods
inc
fbld
cwtl
fsubs
insl
ds
inc
xchg
popf
adc
cmp
lds
xchg
ficoml
jecxz
xchg
test
fistps
outsl
push
mov
imul
push
cmpsl
test
popa
add
jl
lahf
out
mov
pusha
in
mov
or
dec
insl
mov
pop
jbe
mov
jae
xor
fstpl
test
push
push
into
push
cmp
arpl
les
xchg
sbb
xor
add
rorl
xchg
insb
gs
sbbl
mov
ds
out
xor
pop
aam
adc
mov
inc
mov
dec
pop
fnstenv
cmp
pop
adc
outsb
push
test
leave
mov
mov
pop
dec
mov
lret
mov
and
xchg
xchg
sbb
in
inc
sbb
ret
shlb
ja
pop
imul
aam
mov
fwait
shrb
or
into
cmp
pusha
sbb
fidivl
mov
sub
les
pop
ret
shll
lahf
mov
adc
cmp
mov
push
xor
nop
jg
cs
mov
subl
mov
cld
sbb
ja
xor
enter
mov
pop
hlt
std
mov
jbe
cmp
sub
leave
mov
sbb
movsl
out
lods
cmpb
sbb
jno
fs
dec
in
es
xchg
and
repz
push
push
lods
nop
jnp
ret
sub
add
sub
inc
popa
nop
mov
sbb
lock
ds
in
insb
fimuls
cmp
push
xor
mov
es
aas
adc
ror
jp
mov
jp
mov
inc
lds
add
mull
adc
daa
fisttps
pop
push
subb
mov
push
hlt
fs
pusha
jl
int3
jge
ja
mov
test
iret
push
clc
faddp
inc
scas
ljmp
notb
inc
mov
out
add
pop
ljmp
and
sahf
cli
xchg
int
cwtl
into
dec
jecxz
push
and
inc
dec
addl
in
lods
lret
ret
sub
cmpsb
pop
xor
mov
fisttpll
lods
lock
xor
outsb
mov
in
mov
push
xor
jg
push
mov
fcompl
lret
or
pop
ljmp
data16
push
movsb
xchg
inc
or
pop
and
and
sbb
mov
pop
daa
mov
adc
mov
push
data16
jmp
shrl
dec
movsb
in
add
repnz
sbb
es
dec
mov
cmpsb
mov
mov
cwtl
fstps
add
fisttpl
mov
out
data16
pop
mov
lret
mov
decb
mov
or
icebp
imulb
jne
and
je
and
fs
xor
test
cld
jmp
jge
fidivrs
in
lock
call
jle
sahf
inc
sub
xchg
cmp
repnz
pop
or
inc
mov
pushf
mov
ljmp
fiaddl
cli
sbb
je
mov
inc
and
jge
mov
bound
push
loope
mov
dec
pushf
mov
xchg
or
cmp
xchg
dec
mov
lcall
rcr
mov
adc
movsb
imull
pop
shrl
jle
mov
pushf
ss
dec
insl
scas
popa
pop
mov
push
xor
fs
stos
out
adc
push
das
icebp
pusha
lcall
pop
and
push
dec
std
push
push
mov
jb
loopne
mov
xor
xchg
repz
pop
push
mov
push
call
rcl
les
aam
cmp
jmp
pop
cmp
cmp
xchg
and
pop
int
mov
push
push
jmp
out
adc
lcall
xchg
icebp
scas
daa
push
out
push
shrb
hlt
xchg
cmpsb
and
lret
xor
popf
enter
dec
imul
out
jno
jp
test
push
mov
pusha
lret
in
daa
jne
ljmp
sbb
pop
xchg
test
in
jl
adc
fs
mov
jecxz
sub
mov
hlt
push
inc
scas
sbb
mov
pusha
jb
les
rcl
xchg
pusha
out
cmp
fs
inc
fwait
sti
jg
scas
sbb
out
std
lods
ds
push
clc
loopne
push
jmp
lds
dec
xor
out
mov
or
test
dec
divb
shlb
mov
fdivs
sub
test
jno
or
xchg
push
mov
pop
xchg
mov
sbb
shl
inc
pop
add
mov
in
les
adc
xchg
mov
inc
and
mov
cmp
movsl
ja
mov
jecxz
idivl
push
push
js
push
cmpl
jle
pop
js
jg
loopne
inc
pop
add
sub
dec
or
data16
pop
xor
or
and
xchg
movsb
dec
adc
cmc
or
fs
pop
rcll
cmpsl
shr
fldcw
arpl
xor
push
test
push
jnp
addr16
pop
sub
inc
jae
dec
ss
cmp
js
nop
insb
dec
xchg
jmp
clc
jecxz
lods
add
cwtl
add
stc
push
inc
lock
mov
ljmp
sarl
lods
pop
jl
push
and
sar
add
xor
or
aad
out
test
and
jmp
fwait
xchg
pop
das
sub
je
push
and
jns
push
xchg
jl
jle
jnp
dec
add
mov
xchg
clc
cwtl
jp
fsubl
mov
xchg
bnd
mov
cmpsb
add
xor
ds
add
adc
addb
mov
call
inc
inc
jo
fnstenv
cld
adc
dec
adc
adcb
jns
jp
push
fldl
pop
push
fildl
push
mov
or
push
movq
out
pop
push
mov
xlat
fimull
sbb
punpckldq
adc
test
jbe
ret
jp
jno
cmc
sbb
rorb
jno
int3
fistps
push
mov
or
cmp
xor
in
std
je
xor
mov
pop
into
out
lods
inc
movsl
cmp
mov
gs
sub
inc
popf
adc
or
nop/reserved
insb
mov
cmp
or
sti
roll
push
cmpsb
mov
sub
fidivrl
jne
inc
or
sbb
sahf
add
xchg
aad
jecxz
fdiv
lahf
add
stos
and
outsl
add
dec
and
add
dec
test
pop
jecxz
insl
arpl
dec
movsb
sub
cmp
fcmovnbe
ss
fwait
fwait
cmp
inc
leave
sbb
xchg
jns
dec
cmp
push
mov
leave
lret
out
mov
sarl
call
or
fcmovnb
out
es
in
les
push
xlat
dec
cmp
mov
adc
fbld
es
out
dec
lahf
insl
in
mov
jae
cltd
xchg
loopne
inc
mov
mov
jmp
add
lods
outsl
loop
jo
out
add
jnp
lahf
dec
sbb
out
xor
fidivs
dec
xor
mov
rol
xor
push
test
loop
stos
pop
mov
daa
pop
lods
inc
ds
dec
fucompp
pop
mov
jg
lret
mov
xor
fildll
pop
dec
add
dec
mov
push
add
pop
xor
and
xchg
sbb
sbb
adcl
push
mov
dec
decl
inc
loop
sub
sbb
or
cmpsl
and
cmp
xor
test
pop
adc
cmp
jp
jl
xchg
ja
test
inc
inc
xor
xchg
jne
jns
lods
sbb
shl
repnz
mov
jnp
loopne
xor
cmp
jg
inc
fdivs
outsb
fidivrs
push
shl
mov
in
xor
ljmp
sbb
jge
dec
adc
stos
mov
fidivrl
pop
push
add
cltd
shll
inc
fisubs
aam
or
adc
sbb
adc
ds
imul
loope
in
rorb
sub
sarl
inc
push
xchg
and
out
pop
sub
xor
add
push
fidivrs
xchg
cmp
ljmp
jno
add
stos
mov
aas
xor
in
cmp
mov
mov
jp
bound
jno
pop
rcrb
outsb
sbb
aas
dec
lods
ficomps
iret
bnd
dec
jmp
mov
sbb
fidivrs
push
mov
dec
fstps
scas
jg
aam
mov
lahf
mov
pushf
jns
jae
jmp
movsb
xor
into
push
aad
cltd
fildl
incl
lcall
jle
pop
push
xchg
sahf
dec
popa
imul
loop
inc
push
pop
cmpsl
pop
rclb
cltd
out
lds
sbb
lods
addr16
leave
insb
pop
sti
rcr
xchg
push
imul
dec
scas
enter
fcmovbe
cmpsl
fistpll
leave
lcall
mov
std
mov
pop
pop
out
std
gs
cmp
add
icebp
outsb
ljmp
dec
jne
arpl
out
mov
or
sti
stos
push
jne
inc
sub
push
scas
pop
or
inc
lea
push
jp
sbb
inc
dec
jbe
jne
fisubs
popf
les
adc
fucomip
js
fdivrl
jmp
lock
mov
lea
xor
lds
add
or
jae
mov
outsb
ljmp
inc
mov
pop
push
push
xor
in
mov
imul
cmc
sar
mov
inc
and
jle
adc
push
aas
clc
cmpb
xor
xchg
lahf
sub
jno
cwtl
add
insl
out
out
jmp
mov
add
jae
std
stos
out
data16
dec
cli
lcall
jge
pop
jge
inc
lds
jl
sub
and
push
cmp
imull
int3
sbb
mov
pushf
cmpsl
mov
xchg
push
cmpsl
ficomps
cmp
in
add
fbstp
sub
pop
dec
ror
daa
in
iret
scas
sbb
popa
xor
mov
aaa
inc
mov
pop
mov
mov
stos
push
push
mov
in
enter
aam
mov
repnz
lret
sahf
js
addb
iret
cltd
cmpsl
jle
into
std
fbld
clc
sbb
mov
mov
xchg
lcall
xchg
call
bound
in
repz
sbb
push
les
xlat
xlat
out
mov
add
divl
sub
out
fwait
or
std
xlat
into
dec
mov
inc
fldt
dec
ret
add
and
or
enter
cmp
jge
mov
pop
movsl
mov
xchg
sar
aaa
enter
stos
lods
sbb
jmp
fwait
xor
iret
xchg
adc
aad
aaa
push
dec
popa
jo
cmp
stc
pop
adc
pop
aaa
cld
imul
adc
rol
sbb
push
xchg
fiaddl
stos
dec
lods
cs
loope
hlt
jp
push
push
mov
fidivrl
lock
mov
shl
and
jp
mov
sub
cmpsl
inc
xlat
movsb
add
sbb
pusha
das
sbb
cmpsb
stos
cmpsb
out
sub
out
pushf
shlb
jno
sti
divb
sti
aaa
cmp
test
inc
or
fldt
stos
pop
stc
inc
fstpl
aaa
arpl
and
mov
out
cmc
jge
xchg
sub
pushf
xor
mov
incl
cmc
ficompl
inc
mov
dec
into
push
mov
lahf
and
push
xchg
xchg
rclb
divb
aas
decb
stos
cmp
dec
inc
mov
movsl
cmpsl
xor
imull
mov
fs
mov
push
add
shlb
and
push
push
sub
std
out
cwtl
shll
imul
in
jg
int3
lods
orl
psubq
pushf
xor
adcb
mov
fsts
add
arpl
push
bound
cmp
jns
jne
push
testb
test
shl
jecxz
push
in
inc
and
jecxz
and
stos
dec
movsb
inc
test
inc
sub
push
popf
jno
leave
mov
fildl
das
cmp
mov
xor
adc
je
push
and
dec
je
bound
fxch
orl
in
push
and
data16
jmp
push
mov
adc
add
leave
xchg
jne
xchg
clc
mov
pop
fwait
addr16
aaa
push
and
mov
dec
sbb
imul
pop
movsb
loop
ja
adc
shlb
mov
aad
fisttpl
push
scas
imul
fmuls
mov
ret
jae
daa
push
and
pop
and
xchg
push
mov
lock
xchg
push
xchg
loop
xor
fistpl
cmpb
fstpl
lods
shrl
arpl
push
or
ret
lret
and
stc
les
out
in
maxps
xorb
jns
fldcw
mov
ja
mov
cmp
xchg
push
or
jg
fsts
iret
xchg
inc
pop
call
or
pop
icebp
and
lret
xor
xchg
test
aam
sub
dec
in
imul
stos
fbld
adc
inc
jae
add
divb
imul
sbb
cmpsl
int3
xchg
popa
mov
xchg
clc
flds
and
mov
mov
in
push
imull
xlat
lock
lods
jns
xchg
addr16
repnz
notl
mov
push
adc
repz
cs
gs
sub
divl
in
mov
xchg
or
movsl
rol
push
xlat
ret
jmp
movsb
lea
jns
or
inc
inc
mov
push
inc
aas
addr16
fs
mov
into
push
ljmp
sbb
ja
mov
or
sbbb
jl
sti
and
add
addr16
cli
int
pop
sbb
shll
cmp
cmp
ds
fsubs
mov
cs
lret
mov
and
jbe
pop
int3
test
inc
push
mov
test
pop
push
inc
jecxz
fisttpl
mov
fldl
mov
icebp
insb
cmp
js
loope
dec
mov
jb
mov
dec
test
lret
lcall
push
xor
daa
jae
xchg
faddl
scas
pop
sbb
das
mov
lret
and
push
loope
test
mov
jecxz
sub
jmp
mov
nop
lahf
in
lret
inc
dec
sub
cmpsl
xchg
movsl
outsl
sbb
loopne
inc
cld
push
rcrb
stos
add
mov
repnz
bswap
ja
enter
sbb
in
and
enter
cmp
sub
jo
adc
addr16
invd
mov
mov
cwtl
sbb
jne
mov
mov
ret
xchg
lea
jmp
imul
lcall
pop
adc
xchg
push
dec
jl
add
sbb
or
sahf
sub
rolb
loope
clc
out
dec
mov
aam
jle
jecxz
jmp
aas
movsl
fsubr
xchg
ja
idivl
pop
push
and
imul
movsb
xchg
mov
pop
leave
aad
fs
cmpsl
repz
rolb
jg
xchg
jne
daa
mov
callw
jns
xor
cmc
outsb
add
mov
push
lcall
scas
inc
andl
ret
mov
xchg
in
sbb
ret
xchg
push
outsl
js
cmp
mov
or
mov
test
pop
pop
push
scas
pop
out
sub
push
test
sti
push
pop
cmp
push
jb
cld
jb
inc
add
daa
xchg
pop
or
addr16
xchg
jmp
test
aas
jp
cmpsl
addl
or
dec
in
insl
cs
out
push
pop
ror
cmpsl
les
inc
stos
push
imul
push
add
cmp
shr
mov
inc
clc
out
and
dec
notl
lods
adc
rclb
dec
push
xchg
negl
mov
cmc
sub
xor
and
outsb
loopne
fdiv
push
jne
subb
push
sbb
aam
addb
std
in
adc
je
adc
push
xorb
lret
push
repnz
ss
sarl
dec
mov
mov
popa
scas
inc
mov
and
dec
sub
loope
and
in
imul
mov
mov
test
test
dec
dec
lods
mov
sbb
pusha
data16
xor
dec
jmp
pop
push
insb
cmp
xor
mov
inc
dec
adc
sti
and
pop
int3
jns
enter
sbb
loope
fadds
pop
repz
xchg
lret
int3
out
and
inc
dec
xchg
xchg
jle
sbb
popf
xor
xchg
lret
mov
mov
xchg
sti
xor
jecxz
inc
mov
and
in
daa
and
pop
loope
and
sbb
adc
in
cmp
ror
dec
adcb
mov
and
adc
movsl
or
into
test
dec
dec
out
add
adc
xchg
mov
or
call
ds
cltd
mov
mov
out
and
les
js
and
ss
in
test
mov
data16
pop
stc
ljmp
bound
leave
movsb
movsl
sub
or
sub
outsl
orl
lods
or
mov
test
sub
xor
pop
push
loope
or
mov
sbb
jl
jl
sahf
movsl
loop
gs
adc
inc
or
pop
xchg
je
jae
xchg
aam
cmp
sbb
clc
lds
xchg
adc
dec
jl
jnp
add
mov
shll
pop
sub
lods
mov
jae
xchg
and
xlat
pop
aas
data16
repz
or
mov
or
hlt
pop
data16
jns
lret
nop
scas
imul
loope
jno
xlat
fistl
sti
fimull
cmp
and
call
call
test
shlb
push
out
scas
inc
add
fnstcw
sub
nop
ds
movsl
dec
or
mov
clc
sbb
fsubrs
nop
loopne
test
sub
stos
pop
xchg
and
shrb
jg
fbstp
inc
mov
add
ja
mov
adc
aas
aaa
aad
sub
inc
mov
inc
in
dec
xchg
ljmp
xchg
inc
sti
push
sub
xlat
or
xchg
out
jle
dec
stos
push
sbb
jmp
adc
pop
sbb
insl
movsl
adc
lret
cmpsb
sub
cwtl
nop
call
jmp
fistpll
outsl
adc
jno
sub
scas
mov
mov
enter
aad
cmp
leave
stos
negl
push
and
fstpl
std
rol
dec
push
mov
adc
mov
jp
xor
adc
imul
pop
jne
mov
sub
and
test
pusha
xchg
mov
cmp
xor
mov
pop
mov
mov
push
push
addr16
pusha
out
dec
inc
lods
sub
les
leave
cld
push
fldl
pop
or
scas
das
sbb
push
sub
mov
scas
imul
out
add
pop
xchg
mov
pusha
js
push
shrb
xor
dec
adc
cmp
xchg
add
and
mov
test
cmpsl
cmpsl
and
add
jp
pushf
and
and
mov
jae
add
mov
inc
add
lcall
insl
mov
xor
inc
popf
out
jo
fs
and
xlat
in
mov
adc
push
or
push
jns
test
sbb
inc
jo
push
xor
fdiv
mov
movsl
insb
or
add
rcrl
jnp
dec
or
mov
stos
xor
mov
or
add
mov
jge
rcrb
xor
adc
out
sbb
and
loop
jl
sub
pop
xor
mov
in
fldcw
ds
jp
push
sub
push
or
mov
jg
add
mov
inc
jbe
and
out
leave
sub
repnz
pop
iret
stc
mov
push
stc
imul
sub
add
add
cmp
mov
jb
xchg
mov
test
xchg
mov
mov
stc
dec
movsl
or
push
loop
aad
ret
mov
insl
int3
jb
xor
ret
pop
stos
fs
adc
in
cs
outsb
and
add
pop
loop
subl
xor
arpl
popl
push
les
les
xchg
pop
fwait
sbbb
pop
pop
aaa
jg
inc
ficompl
ficomps
jbe
popa
dec
filds
stc
stos
mov
imul
push
mov
in
jo
fdiv
xor
xorl
stos
mov
fimuls
and
cmp
push
cmp
mov
popf
divl
pop
shlb
cmc
stos
daa
jne
xor
iret
fistpll
cmpsl
pop
mov
xchg
push
dec
outsl
xor
jle
inc
popa
inc
dec
shr
aaa
cmp
in
gs
mov
sbbl
cltd
jne
stos
or
insl
pusha
in
pop
les
arpl
inc
inc
or
testl
je
adc
jle
mov
inc
aad
js
and
jo
mov
cmp
lods
jmp
mov
xor
push
mov
mov
push
mov
es
jecxz
enter
loopne
xor
shlb
rclb
and
mov
inc
xor
out
jno
push
cmp
and
dec
cmp
mov
in
in
push
sti
inc
inc
sub
cmp
cmpsb
fs
adc
in
dec
rcrl
sub
ja
shlb
mov
stos
cmp
fisubrs
pushf
aam
sar
setg
sarb
mov
pushf
pop
sbb
adc
inc
jno
lea
jge
out
and
or
imul
scas
lahf
cmpsl
xchg
jmp
or
sub
adc
rol
adc
gs
ret
mov
push
sti
pop
xor
mov
push
push
aad
data16
int3
mov
cmovo
add
bound
aam
pop
pop
aad
and
in
adc
pop
mov
insb
jbe
xlat
jp
stos
outsb
mov
push
xchg
in
popa
adc
mov
cltd
fistl
xchg
pop
or
ret
cmp
or
mov
sbb
adc
xchg
sbb
push
out
mov
fcmovnu
mov
test
cmpsb
fisubs
xchg
inc
xchg
arpl
push
icebp
repnz
cmpsl
mov
push
mov
cmp
adcl
lahf
sub
out
inc
dec
sbb
push
sbb
call
cmp
out
idivl
jae
hlt
mov
sbb
movsb
mov
stos
scas
xchg
jns
in
pop
adc
dec
popf
nop
add
mov
inc
dec
scas
hlt
adc
cmp
mov
mov
jmp
sbb
lock
mov
lods
in
lret
mov
and
test
mov
add
stos
popa
add
sbb
enter
popa
xchg
sub
in
dec
xchg
ljmp
lock
jne
in
push
gs
popa
xchg
jg
pop
int3
mov
push
push
test
lods
xorl
mov
lcall
sub
sbb
xor
pop
cmpsb
lret
sbb
cltd
pop
out
xchg
mov
sbb
dec
cld
pop
push
lods
pop
leave
mov
inc
lea
ljmp
cmp
mov
fstp
scas
jbe
mov
shlb
imul
jo
adc
jo
ficomps
mov
out
icebp
scas
or
and
cmp
arpl
fs
adc
dec
pop
out
or
cld
sub
sub
out
icebp
push
lods
loope
fcompl
idivb
jnp
push
cmp
mov
mov
int3
std
in
and
xor
sub
imul
lods
inc
cmc
repnz
ja
jl
pop
mov
xchg
leave
hlt
jbe
lcall
jns
dec
cmp
sarb
inc
ds
popa
inc
aas
in
xor
outsl
or
cmp
cmp
xchg
pusha
mov
fcomps
loopne
scas
ret
push
idivb
mov
lods
loope
sub
faddp
stos
mov
or
push
in
add
mov
inc
idivb
pushf
push
mov
clc
ret
dec
cltd
pop
incb
and
mov
xchg
inc
mov
mov
fidivl
outsb
ss
jle
jb
decb
fsub
hlt
push
mov
out
and
adc
jl
or
xchg
fnstcw
sbb
and
xchg
fstps
jge
push
xchg
mov
and
jnp
loope
jle
rcrb
in
fsub
cmp
scas
in
lods
jle
jge
lds
adc
push
push
mov
mov
sahf
push
xor
out
sub
mov
popf
dec
push
xchg
lods
shlb
insl
in
gs
cli
cld
sbb
adc
incl
stc
mov
hlt
mov
mov
fdivl
mov
shll
mov
out
mov
fcmovbe
nop
test
test
inc
jmp
ljmp
sub
dec
cmp
repnz
sub
jg
aas
mov
sub
pop
pop
cmp
imul
sbb
sbb
mov
lea
add
mov
icebp
mov
fisubrs
bound
sbb
sbb
push
sti
xor
jl
add
adc
mov
sbb
mov
dec
clc
and
gs
cwtl
in
sbb
sub
fldcw
out
insl
imull
xchg
mov
addr16
or
lret
nop
sbb
or
movsb
push
and
dec
sbb
mov
jg
mov
sub
or
add
sbbl
stos
mov
or
add
pop
xlat
push
aad
mov
dec
in
std
dec
inc
fidivl
jecxz
jle
dec
mov
hlt
in
out
inc
inc
ljmp
jmp
scas
adc
stos
outsl
sahf
out
in
xchg
lret
or
stos
les
shll
cmp
test
shlb
loopne
dec
xor
jb
fimuls
dec
jne
fmulp
dec
and
dec
pop
fwait
mov
in
or
mov
gs
iret
mov
cwtl
cmpsb
mov
arpl
xchg
inc
cwtd
fisttps
into
or
lock
dec
sahf
iret
imul
xor
fs
dec
inc
int
sbb
into
or
and
cltd
mov
nop
dec
mov
dec
lods
push
add
cld
mov
test
in
pop
xor
or
xor
icebp
inc
mov
rorl
sbbl
loope
cmpsb
xchg
test
sbbb
cld
inc
or
adc
or
test
sbb
pusha
add
je
mov
mov
sbb
ljmp
imull
dec
movsl
jo
in
inc
popa
jae
mov
xchg
fadds
pop
out
test
nop
fs
push
dec
xor
pop
dec
push
lds
je
pushf
loope
inc
lock
mov
imul
clc
sub
incb
mov
das
inc
iret
roll
dec
mov
or
ja
pop
pop
test
pop
stc
lahf
test
scas
into
pop
js
rolb
pop
add
rcll
dec
xchg
shll
xor
fbld
out
clc
hlt
cmp
cmp
or
daa
cmp
sbbb
nop
sbb
cmc
push
ljmp
cmp
lds
popf
fmul
cmpsl
fld
mov
inc
stc
mov
dec
jns
loop
outsb
aas
xchg
out
fildl
sub
into
fwait
repnz
arpl
arpl
xor
adc
popa
xchg
sti
ficoml
call
ja
rcrb
adc
mov
daa
mov
aam
out
ficompl
sarl
fs
aam
cltd
shlb
andb
mull
push
sbb
mov
sbb
push
and
pop
inc
imul
insl
mov
add
outsl
aaa
imul
gs
pop
cmp
rorl
xchg
jne
lods
cmp
out
xor
pop
sbb
in
cmpsb
inc
pop
xor
lret
out
mov
push
test
dec
ljmp
xlat
jp
cmp
pop
fbld
loop
call
inc
mov
mov
lock
cmpsl
movsb
dec
pop
xor
push
not
mov
push
push
test
hlt
mov
jge
fcomi
mov
ret
adc
aaa
dec
dec
xchg
pop
test
jp
and
lock
sbb
mov
or
jmp
in
orl
test
mov
ljmp
jae
push
subl
cwtl
push
insl
jmp
rorb
fimuls
popf
or
dec
adc
or
scas
pop
jmp
adc
mov
mov
push
xchg
cmp
insl
out
gs
and
pop
dec
jle
into
int3
xlat
sbb
xchg
jg
adcb
out
sahf
mov
repz
rcll
cmpsl
xchg
test
ljmp
call
mov
push
stos
loopne
push
or
adc
mov
or
xchg
loop
sub
mov
jae
push
sub
jb
pop
pop
lea
jecxz
sub
scas
sbb
gs
xor
cmpsl
fcoml
das
shlb
andb
insl
lret
mov
jnp
fwait
push
push
xor
mov
push
or
jp
push
xor
xor
imulb
cmp
les
mov
xor
iret
sub
xchg
sub
in
inc
dec
push
loopne
xor
jp
js
mov
fadds
push
xor
lahf
jg
pop
add
frstor
fsubrl
sbb
jbe
iret
shl
add
out
mov
hlt
fistpl
and
push
push
ss
mov
cmp
and
jb
sbb
xorl
cmp
hlt
outsb
pop
mov
adc
fs
outsb
cld
xor
xor
fldcw
lcall
xchg
xchg
movsb
imul
dec
into
adc
xchg
mov
or
jmp
inc
cli
dec
aas
out
repz
pop
cltd
out
aad
inc
xor
xchg
sti
test
and
fsubl
cmc
and
xor
loope
cmp
or
mov
xor
inc
mov
addr16
xchg
repz
scas
in
hlt
mov
adc
movsl
push
mov
mov
fistl
add
or
sbb
fdivl
push
xchg
xchg
pop
and
bnd
jo
adc
dec
xchg
jae
inc
add
sbb
inc
outsl
out
add
jmp
cmpsb
mov
inc
mov
pop
ficoms
in
sub
xlat
clc
push
pop
mov
ljmp
sub
shl
pop
mov
test
arpl
sub
rorb
adc
lret
sbb
in
aas
inc
mov
mov
test
jb
or
pop
add
xchg
imul
pop
cmp
shrb
sub
jg
push
rolb
rcll
cmp
scas
push
xchg
subl
and
push
faddl
loop
xchg
mov
mov
loop
jmp
sub
movsb
cmc
inc
negl
inc
inc
mov
pushf
cmp
int
mov
and
mov
mov
pop
cs
data16
inc
icebp
xchg
push
xchg
fsubs
xor
mov
loopne
hlt
ja
aaa
stc
clc
sub
out
lock
nop
sbb
lcall
lea
inc
jle
imul
mov
jecxz
jge
repz
cmp
movsl
loope
testb
inc
sub
lods
xchg
mov
aaa
mov
fsubl
xor
lcall
dec
aaa
shll
cwtl
es
mov
xor
lds
iret
dec
scas
out
xorl
xchg
imul
lods
lds
lods
cmp
imul
inc
adc
rolb
mov
inc
xchg
mov
ret
inc
xor
movsl
aad
int
addb
pop
popf
add
jbe
add
cmpsl
ret
mov
sub
push
dec
sbb
gs
je
jbe
rol
adc
add
sbbl
or
cltd
lcall
mov
sbb
pop
or
test
fcom
adc
fcomps
cmc
xor
stc
mov
lcall
call
fcoml
popw
xor
vmulps
outsl
loop
outsb
jecxz
data16
push
outsb
out
adc
dec
jno
jp
mov
jne
rorl
std
jbe
rclb
adc
sahf
mov
pop
fstp
fiaddl
repnz
dec
inc
nop
push
lcall
xor
jecxz
add
test
xor
mov
ss
sbb
int3
shrl
test
call
dec
jg
insl
imul
dec
fiaddl
jle
inc
cmp
jbe
dec
lret
sti
pop
pop
fwait
test
fidivrl
inc
in
lds
jnp
out
cmp
xorl
out
test
movsb
cmpsb
pop
push
mov
fisttpl
test
jge
sbbl
mov
jbe
movsl
dec
xchg
decb
jmp
movsl
je
push
sub
int
xchg
int
cltd
mov
jmp
adc
fstpt
clc
jb
aas
cwtl
mov
aad
sbb
aam
loope
mov
pop
pop
cmp
cmp
data16
sub
xchg
nop
mov
push
ljmp
outsb
sub
ret
and
mov
xchg
pop
ljmp
lods
es
and
mov
int3
imul
push
push
movsl
das
addl
mov
add
push
mov
jae
call
lahf
test
mov
push
sarb
roll
out
jg
push
and
repz
inc
adc
cmp
andb
sbb
das
sbb
loopne
outsb
cmp
scas
jl
in
add
inc
jne
pop
sbb
scas
cmpsl
into
rcll
mov
mov
movb
mov
adc
sbb
js
dec
xchg
mov
paddd
jno
push
sbb
cmp
daa
push
xor
outsl
jb
adc
movsb
ja
xor
insb
sbb
scas
das
cmp
pop
lahf
or
push
inc
stos
repnz
mov
jp
test
adc
fsub
or
inc
push
or
in
cmp
pop
aad
pushf
xchg
push
shlb
push
cltd
xor
js
enter
inc
mov
sbb
nop
pop
xchg
mov
outsb
ds
aam
xchg
xor
jmp
xrelease
mov
and
adc
adc
push
jg
repnz
loope
push
mov
jae
outsb
push
push
xchg
test
inc
xchg
cs
scas
xor
push
inc
int
xor
flds
ss
gs
and
in
push
fucom
cmp
lods
add
mov
mov
mov
out
das
dec
sahf
sbb
or
movsl
sbb
je
push
fcomps
out
gs
aaa
xor
fsubrs
call
add
mov
inc
inc
mov
lret
and
push
minps
lock
movsl
insb
js
out
xor
adc
or
stos
push
lahf
xchg
pushf
fidivrs
mov
adc
loope
loop
test
lret
jl
adc
inc
cmp
mov
negb
aas
or
inc
and
divl
dec
fwait
mov
iret
jecxz
iret
call
fistl
push
dec
inc
push
cmp
inc
add
call
jle
in
fucom
jge
test
pop
jecxz
mov
mov
mov
adcb
fmull
push
xor
dec
push
xchg
fmuls
gs
clc
pop
lcall
ret
push
dec
jle
out
mov
cmp
int3
and
pop
addb
movsl
gs
int3
cld
or
psubd
xor
adc
inc
xchg
dec
loope
mov
cmpsl
sub
add
std
mov
add
mov
cmp
inc
call
pushf
cltd
aas
fcmovbe
inc
ljmp
scas
xchg
jae
jnp
mov
inc
cmp
mov
mov
xchg
xor
xor
or
or
xor
iret
lock
fwait
iret
mov
imul
fucomp
pop
sub
or
wbinvd
outsl
xlat
sub
shrl
push
mov
dec
lret
pop
add
lods
or
jle
jns
ds
jge
xchg
sub
add
lods
shll
inc
or
pop
mov
popa
xchg
inc
test
mov
sbb
mov
inc
dec
xchg
insl
popa
ret
and
ficoml
push
mov
movsl
adc
xor
lods
pusha
cwtl
sbb
push
movups
mov
out
cmp
jge
inc
sbb
adc
push
adc
in
inc
xor
or
pushl
cld
cld
dec
dec
cmp
mov
rol
or
mov
dec
or
jg
imul
push
hlt
push
lock
add
orl
aas
or
mov
fsubrs
fimuls
aad
jnp
lods
jno
pop
jne
rcrl
xor
mov
inc
push
clc
adcb
pop
mov
mov
adc
dec
cli
cmp
adc
aaa
hlt
mov
mov
xchg
std
mov
cli
pop
enter
push
sub
xchg
push
ret
lea
les
pop
shrl
add
and
das
lds
mov
push
push
jns
daa
mov
scas
push
stos
adcb
dec
ljmp
cmpsb
inc
out
xchg
push
test
iret
sub
push
xchg
sbb
push
sahf
out
xchg
ret
fistl
mov
cwtl
mov
aam
insl
xor
or
mov
clc
scas
iret
aaa
cld
repz
pop
in
shlb
lret
push
add
pop
xchg
sbb
es
xchg
mov
adc
cwtl
ss
and
xchg
insl
pop
jne
pop
sub
popf
ss
pop
xlat
push
imul
and
and
int
push
hlt
in
xor
xchg
mov
out
mov
jbe
cmpsb
out
xchg
push
aad
jle
add
je
mov
lahf
push
loopne
push
cmp
fwait
add
rcll
or
sub
dec
or
jp
add
sub
jno
mov
lahf
mov
pop
mov
push
popa
les
adc
adcl
loope
dec
sub
add
daa
xchg
xchg
mov
test
outsb
inc
jne
push
andl
repz
add
lahf
lods
xor
cmp
xor
je
dec
lret
fbld
xor
addr16
ds
aam
in
xchg
mov
jmp
inc
jbe
lock
ret
push
mov
lahf
orb
inc
out
dec
lods
xchg
sbb
push
test
sbb
push
bsr
or
int
out
push
shll
jnp
outsb
imul
mov
inc
div
and
in
imul
sbb
scas
shlb
sbb
shl
sbb
pop
dec
mov
xlat
sbb
jp
out
xchg
mov
aam
xor
aaa
add
sbb
fwait
out
imul
dec
and
call
adc
xchg
push
ja
cmpsb
adc
dec
out
out
add
cltd
repnz
ljmp
jne
pop
fisubrl
jae
xor
mov
push
es
or
popf
mov
lret
dec
inc
jle
push
mov
cmp
push
cmp
mov
cmpb
mov
jbe
pop
push
je
add
fstpl
mov
scas
insl
sbb
adc
popf
xor
scas
lods
loope
jge
jg
push
arpl
mov
subb
pop
test
mov
dec
lcall
adc
xchg
into
lods
sub
mov
pop
cmp
lret
xchg
sbb
fsub
jns
mov
repz
clc
mov
rorl
imul
ret
lret
dec
jg
imul
sbb
lret
jp
dec
sub
sbb
fistps
scas
jno
imul
dec
push
stos
dec
sbb
sti
clc
pop
pop
jo
add
enter
fadd
push
sub
leave
push
mov
lahf
jg
pop
or
jns
push
loop
and
cld
into
push
xchg
xor
jle
inc
xor
test
in
add
mov
test
jl
js
jle
sbb
xchg
aaa
call
inc
popf
jbe
jne
or
nop
ljmp
imul
je
jne
pop
pop
jnp
jl
orb
movsl
mov
hlt
mov
scas
repnz
xor
jle
lods
in
pop
or
add
or
and
jb
or
and
faddl
aas
jp
aam
inc
jae
es
xor
jno
mov
jns
jecxz
adc
cmp
add
jmp
cmp
jecxz
xor
sahf
sub
dec
inc
inc
aas
add
test
cltd
pusha
xchg
dec
mov
ja
and
scas
push
scas
inc
mov
mov
xlat
pop
out
adc
push
js
sub
cltd
gs
xchg
lahf
xor
adc
and
mov
enter
xchg
jo
leave
shlb
test
outsb
mov
xor
outsl
aaa
pop
inc
repz
lods
stc
lods
jne
push
in
jne
movsl
mov
and
cmp
dec
adc
xchg
flds
imul
mov
inc
ss
mov
sub
dec
xchg
dec
push
fadd
movsb
cmc
mov
in
les
push
xor
incb
iret
and
les
sbb
orb
mov
xchg
test
cli
pop
xor
mov
lcall
dec
test
shlb
test
aas
loopne
jb
out
fadds
or
fldcw
xlat
jmp
push
cmp
jnp
in
lods
int3
loop
repnz
sub
sbb
mov
into
test
outsb
out
out
sub
dec
dec
cmpsl
cmp
pop
push
rcrb
sbbb
pop
xchg
cmp
dec
push
and
shl
insl
xor
mov
cld
mov
xchg
scas
sbb
jnp
fisubs
mov
xchg
ljmp
test
inc
lahf
sbb
outsb
push
ljmp
adcl
inc
add
xor
xor
in
jb
insl
push
mov
cs
fwait
xor
les
push
and
js
dec
mov
pop
or
sahf
shl
inc
test
xor
rcrb
jne
fstpt
call
daa
test
sbb
bound
inc
adc
movsl
leave
je
push
and
jge
xchg
add
lret
mov
mov
pop
paddb
adc
pop
mov
movsb
jg
inc
les
outsl
lcall
fidivl
rcr
push
xor
cmp
sbb
notb
and
sti
arpl
xchg
xor
cs
shll
mov
sti
jmp
push
sub
fs
xchg
les
jle
xor
loop
subb
iret
cmp
sar
movb
out
je
push
xor
test
test
mov
mov
mov
xchg
scas
pop
lods
inc
sub
sbb
inc
pop
push
dec
out
sbb
or
and
das
adc
jo
test
xchg
shlb
dec
pusha
mov
dec
loope
out
prefetch
or
cmp
push
inc
stos
aaa
in
adc
shufps
frstor
push
cs
out
mov
int
pusha
leave
fs
fcmovnu
test
in
aaa
sub
sbb
fisttpll
lods
lea
fisttpll
jecxz
clc
call
push
jne
push
repz
shll
rcl
push
rcll
cmp
int
outsb
fsubrl
imul
and
dec
push
test
mov
movsl
cmc
loope
add
lcall
fwait
jp
push
testb
sbb
ficoms
xchg
lahf
inc
mov
pop
enter
inc
out
sbb
fmul
das
test
adc
pushf
jmp
dec
shl
js
pop
scas
cli
imull
push
sbb
mov
adc
ja
push
fidivrl
ret
jecxz
jge
adc
js
dec
loopne
adc
sub
jno
or
xor
mov
aas
mov
pushf
pop
or
pushl
add
sbb
sbb
add
lock
jge
cs
mov
xchg
or
stc
xor
cld
jno
leave
lds
cld
xchg
xchg
cmpsl
jl
dec
dec
inc
xor
pop
mov
add
js
lcall
repnz
test
cs
mov
jp
cmpsb
lods
in
or
sub
jge
repz
lock
inc
dec
loope
sbb
push
xor
pop
dec
sub
sbb
rcll
add
mov
jno
sub
in
daa
mov
lret
les
das
jnp
xlat
and
iret
push
mov
push
int3
in
xchg
sbb
mov
jae
cmp
xchg
lea
in
inc
mov
sti
push
jecxz
stc
jnp
stos
push
lret
mov
xor
ja
test
rcrl
inc
jp
cs
push
icebp
cmp
pop
pop
inc
aam
scas
into
ret
mov
leave
mov
hlt
scas
in
dec
std
cltd
xchg
pop
scas
jnp
aam
add
jecxz
test
stc
clc
cltd
mov
jge
movsl
iret
push
dec
mov
mov
imul
mov
xor
sbbb
shrb
mov
inc
dec
mov
das
jns
dec
dec
ss
aam
test
add
cmp
popf
add
inc
mov
fwait
xchg
dec
jns
pop
push
mov
lret
pop
repz
scas
into
dec
xor
xchg
fwait
out
dec
mov
dec
dec
sbb
and
sbb
loop
es
aas
filds
stos
adc
int
pop
jle
mov
jbe
arpl
fs
push
or
mov
jo
xor
mov
xchg
inc
jmp
shl
jecxz
adc
ret
add
sbb
adc
mov
push
ss
ss
dec
dec
mov
jno
add
fwait
addl
int3
pop
test
mov
pop
lret
lcall
int
xchg
insb
dec
ljmp
mov
mov
and
sti
xor
out
and
mov
xor
inc
aaa
push
xor
jno
jnp
jne
repnz
jno
sbb
xchg
orl
scas
jle
and
imul
mov
daa
push
fisubrs
loop
repnz
push
adc
or
push
mov
sub
ljmp
sbb
push
stos
inc
scas
pop
add
aas
int
adc
sti
outsl
stos
movsb
aaa
push
mov
aad
push
adc
subl
ss
xchg
ja
inc
add
push
cmp
cmp
mov
dec
xchg
ret
lock
mov
dec
sbb
stos
mov
daa
in
mov
inc
cmpsb
jae
push
ljmp
negl
dec
rcrl
fsubrs
add
pop
dec
sbb
movsb
sub
mov
test
fsubr
imul
adc
pop
add
mov
adc
jge
mov
push
and
in
or
adc
push
push
or
rcrb
cmp
mov
xchg
adc
push
sbb
loop
cwtl
mov
cmp
push
sti
pop
cmp
push
dec
xchg
cmpsl
nop
add
push
fstps
xchg
nop
jno
ljmp
jge
mov
sbb
mov
scas
push
xchg
mov
std
xchg
nop
inc
in
push
cmp
jl
nop
insl
sub
or
and
jg
jg
push
xor
mov
jb
jo
leave
pop
push
lock
dec
push
add
push
es
xchg
fisubrs
lods
rcll
popf
js
xor
clc
aam
mov
mov
adc
inc
repnz
push
dec
mov
scas
or
iret
jecxz
push
push
sub
mov
flds
pusha
and
push
xor
cmpl
mov
xor
repz
mov
sub
imul
popa
xchg
push
scas
or
clc
jne
lea
cmp
cmpsb
xor
mov
enter
add
push
mov
mov
hlt
jl
outsb
push
out
addr16
lods
push
dec
mov
shl
xlat
add
lret
gs
mov
out
aas
cmp
add
popa
stc
adc
mov
cwtl
andl
pop
fiaddl
js
sbb
mov
sbb
lea
or
shl
mov
in
fsubs
mov
imul
loop
int
xchg
js
mov
popa
push
bound
ret
repz
push
and
in
mov
cmpsb
xchg
xor
lret
shrl
test
jmp
adc
inc
stc
fistpl
gs
in
mov
jbe,pn
jno
or
mov
jno
test
leave
ss
xchg
inc
nop
orb
sbb
faddl
fdiv
and
jns
pop
dec
enter
movsb
jb
sahf
and
pop
dec
mov
or
rclb
stos
and
ljmp
xchg
jg
sbb
out
or
lds
in
es
push
jg
aam
leave
cmp
testb
sub
test
jp
push
in
push
push
mov
sbb
add
sahf
icebp
fwait
and
xchg
mov
sbb
loope
mov
jle
xrelease
std
mov
arpl
push
mov
gs
xor
sbbb
repnz
xorb
push
shl
sub
push
arpl
lods
test
adc
inc
cld
mov
lods
or
jmp
imul
add
pop
add
mov
test
pop
leave
add
mov
popf
pushf
sub
repnz
clc
pushf
inc
imul
mov
mov
cwtl
pop
adc
aam
lods
ja
xchg
mov
pop
mov
loopne
arpl
sbb
dec
stos
or
pop
lea
pop
mov
push
jle
roll
int3
dec
push
mov
mov
mov
push
adc
add
adc
outsb
xor
aaa
test
out
lret
mov
shlb
add
dec
inc
aam
push
mov
mov
cld
mov
xor
pop
or
sub
xchg
fs
mov
jns
add
addb
mov
shll
pushf
and
mov
lret
into
popa
sti
je
jnp
bound
ja
lods
push
mov
sub
mov
lock
je
jecxz
into
sti
cmpsb
mov
aaa
fldcw
xchg
movsb
das
daa
sub
cmp
in
das
cmp
setae
pop
mov
push
cmovle
cmp
jns
push
or
xor
popf
lret
fldl
mov
or
fstpl
ljmp
xchg
movsb
addr16
sub
or
push
fdivrl
mov
mov
outsb
mov
frstor
pop
cmp
xchg
std
fs
out
mov
scas
mov
sbb
dec
loop
in
ds
stos
xchg
cmc
xchg
pop
cmp
pop
arpl
inc
jb
xchg
jo
icebp
push
adc
jo
dec
dec
push
popa
mov
stc
lock
int
or
leave
push
and
jle
scas
repz
in
xor
aaa
lods
sbb
sub
rclb
cmp
push
cmpsl
fdivl
inc
cltd
repz
or
addb
movsb
sub
popf
mov
insb
ret
shll
adc
inc
mov
xchg
jmp
xchg
adcl
and
add
cltd
lahf
mov
sarl
xor
pop
inc
xchg
movsl
pusha
lds
les
or
and
jae
xchg
mov
jmp
pop
scas
sahf
push
mov
inc
nop
scas
mov
lcall
dec
insb
out
das
sub
fldcw
jecxz
or
lahf
scas
push
je
out
or
mov
enter
and
int3
fwait
or
cltd
xchg
adc
testl
scas
das
into
lock
push
js
es
jns
mov
xchg
addb
push
or
lcall
adc
repz
sub
lock
pusha
pop
in
into
add
lret
sub
arpl
aad
jb
jl
sub
iret
out
sbb
lret
out
mov
xchg
mov
or
data16
repz
pop
shlb
ret
fstp
push
adc
pop
and
pop
lahf
or
test
sub
adc
fstps
mov
shrl
rorb
test
inc
icebp
adc
cmpsl
pop
mov
int3
aam
mov
mov
mov
idivb
mov
gs
xor
arpl
cmpsb
ret
or
fcmovb
ret
ret
xor
gs
add
in
ret
push
xchg
shrb
xor
mov
lahf
in
movb
stos
in
ljmp
mov
addl
inc
pop
ret
enter
cmc
movl
and
daa
sbb
lock
push
int3
fnstsw
divl
dec
xor
cmp
sti
stos
and
jecxz
loop
push
push
jae
pop
test
jnp
stc
add
pop
mov
insb
out
dec
daa
xor
stos
inc
fbstp
mov
loop
lcall
jnp
mov
aam
aad
ja
hlt
xchg
mov
dec
sub
lcall
cmpsb
and
mov
cli
ss
rcll
in
add
and
jl
jle
imul
adc
negl
in
lcall
pop
fsubl
sbb
cmpsb
xchg
cld
adc
dec
lds
ss
incl
xchg
pop
add
push
pop
pushf
bound
jmp
inc
popa
addr16
dec
inc
popl
fidivrs
jle
cmp
test
or
fcmovb
add
adc
imul
mov
pop
je
pop
mov
cmp
jno
into
ljmp
mov
lahf
dec
jo
xchg
xchg
enter
lea
cwtl
xchg
fs
and
adc
push
xchg
xor
jl
bound
leave
dec
add
xchg
cmc
dec
and
fs
xor
pop
dec
std
data16
jo
call
sbb
arpl
das
jg
in
faddl
popa
lods
lcall
das
fwait
dec
lret
mov
mov
rol
cwtl
push
notb
xchg
int
sti
pop
mov
mov
mov
dec
jge
jmp
add
pop
sarb
mov
xchg
rolb
sti
fsubrl
and
popa
out
ret
ret
adcl
adc
dec
loop
dec
scas
fsts
idiv
mov
pop
test
pop
cs
sub
mov
repz
mov
inc
hlt
negb
xor
jg
out
aad
dec
hlt
push
jno
cwtl
mov
leave
aas
pop
adc
and
cld
leave
xor
jns
xchg
aam
xchg
sbb
mov
xor
sub
cltd
ret
and
dec
cmpsl
insb
adc
mov
jo
ja
mov
mov
fistpll
daa
dec
push
push
or
lods
notl
rolb
cmp
or
dec
cmp
or
or
pop
push
mov
pop
mov
xor
in
inc
cmp
push
aam
outsb
mov
sti
mov
xor
fdivs
dec
cmpsb
pop
les
mov
gs
mov
jp
adc
pop
xor
mov
mov
add
pushf
jbe
and
sub
jle
sahf
adc
xor
cmp
in
add
cld
mov
or
cmp
clc
inc
cmp
stc
push
sahf
or
xchg
stos
call
mov
fcoml
or
adc
mov
ja
mov
mov
aad
es
push
mov
xor
push
mov
sub
add
aas
fstpl
loop
pop
shlb
pop
stc
mov
and
dec
cmpunordps
les
push
sub
lret
dec
sbb
sub
push
xchg
jmp
xor
scas
mov
and
push
je
push
into
fistpll
push
sub
jl
push
add
loop
xchg
xchg
data16
lods
out
icebp
loop
or
jns
jge
mov
sbb
dec
sar
jle
or
jmp
add
int3
out
imul
sub
jns
push
clc
fisttpll
lods
pushf
jns
mov
add
dec
syscall
loope
hlt
fisubrs
loope
mov
pop
and
mov
cmp
xor
push
into
push
xchg
inc
mov
jb
mov
mov
pop
push
aad
add
iret
mov
fucomi
push
pushf
cmp
mov
sbb
xor
add
or
test
and
push
or
lea
push
movsb
inc
ret
insb
mov
mov
xchg
iret
out
mov
sub
jge
mov
add
push
cmp
dec
dec
scas
icebp
xchg
adc
imul
cmp
fldl
insb
repnz
out
mov
mov
popf
stos
pop
adc
xlat
xor
imul
inc
pop
xor
push
inc
mov
xor
mov
and
jbe
inc
loop
inc
mov
js
insl
dec
mov
imul
out
mov
mov
out
xchg
push
push
jne
xor
loopne
mov
inc
or
inc
ja
ret
test
out
mov
in
js
cltd
pop
dec
outsb
dec
outsl
push
daa
inc
hlt
add
xlat
cli
mov
xchg
lret
jmp
push
ret
xor
cltd
lahf
sub
cld
jp
mov
addr16
push
cmp
push
inc
in
into
cld
mov
lret
adc
arpl
pop
in
and
sbb
fsubl
shlb
aas
dec
mov
loope
ficompl
dec
shl
cmp
sti
mov
lea
aaa
ret
insl
out
sub
dec
xchg
pop
pop
push
jno
flds
out
ds
xor
neg
sub
repnz
jns
jnp
add
push
inc
mov
cmovo
out
test
adc
movaps
imulb
push
pop
or
ffreep
pop
dec
jecxz
mov
push
xor
add
pop
inc
sahf
sbb
xor
repz
inc
mov
ret
scas
xor
mov
enter
mov
inc
into
daa
shl
stos
and
outsw
cli
imul
add
pop
addb
test
jno
mov
ja
cmp
sbb
repz
test
adc
iret
mov
xor
mov
sahf
xor
rdpmc
sbb
mov
fsubrl
mov
pandn
pop
out
or
cwtl
push
nop
push
cmp
adc
aam
test
cmp
aad
in
xlat
inc
mov
push
cld
adc
insl
in
xor
rcll
push
fs
mov
bound
sub
icebp
out
mov
dec
sub
clc
sbbb
mov
out
jp
mov
xchg
dec
xor
mov
pop
lcall
mov
loope
aad
fld
dec
out
mov
jne
aam
aam
sbb
mov
fsubl
push
add
cmp
mov
shlb
imul
sbb
data16
mov
fnsave
adc
mov
clc
imul
inc
adc
divb
jge
pop
test
pop
es
rclb
arpl
cmc
loopne
adc
fldl
xor
push
jl
add
cmpsl
add
push
fcmovnbe
inc
mov
mov
inc
mov
inc
bnd
mov
xchg
adc
dec
gs
pop
jp
loop
in
je
add
rcrl
lods
sbb
dec
ja
add
call
pusha
and
xchg
addr16
xchg
pop
std
jno
pushf
test
add
scas
pop
add
ret
or
xor
mov
mov
scas
cltd
mov
imul
shll
mov
pop
lea
push
push
lcall
jns
dec
pop
movl
test
gs
or
addr16
aad
das
daa
lahf
pop
ficompl
fnsave
loopne
rclb
les
mov
mov
popa
push
sti
mov
fiaddl
mov
jno
pop
dec
jp
popf
inc
adc
xchg
push
int3
cmp
jne
das
mov
push
notl
mov
cmp
pop
ret
push
or
inc
mov
mov
add
aam
les
cld
or
jmp
icebp
or
loope
mov
in
leave
jns
fucom
repz
cmp
xor
les
xor
incl
sub
add
dec
loop
mov
adc
cs
dec
dec
and
push
into
jne
sti
xchg
mulb
and
push
call
cld
xchg
fwait
mov
cli
fs
call
add
in
test
add
leave
mov
testb
inc
aam
xor
dec
xchg
xchg
out
loope
push
sbb
sbb
xor
xchg
or
into
mov
fidivrl
add
push
aaa
hlt
aad
xchg
adc
sbb
sbb
fsubs
dec
dec
pop
lods
in
jb
xor
js
dec
sbb
xor
push
and
sarl
faddl
iret
add
mov
sbb
icebp
mov
sub
pop
rorb
push
loop
pop
pop
lret
jbe
in
push
iret
sub
ret
xor
push
jmp
and
mov
add
fsubrs
pop
jns
inc
push
pop
dec
ret
ret
in
int3
fldl
push
int3
lea
xchg
lahf
cli
loope
test
in
ja
mov
dec
push
inc
sub
mov
jmp
mov
add
das
lret
out
ret
add
mov
mov
leave
xchg
cmp
jo
cltd
test
push
push
mov
call
popa
cmpsb
xor
scas
pop
xchg
bound
cmp
int
adc
mov
inc
lock
in
and
shlb
inc
mov
int
adc
add
repz
mov
aas
loope
loop
int3
mulb
vprotd
arpl
cvtdq2ps
sub
sub
adc
iret
and
repnz
loop
call
mov
push
stos
mov
mov
lock
ljmp
cwtl
sarb
call
push
and
fcomps
aaa
mov
dec
loopne
loop
fists
jno
mov
sbb
sbb
in
ss
dec
movsb
neg
sub
pop
push
cmpsl
rorl
or
cltd
adc
xchg
clc
insl
inc
pop
test
cli
into
jo
mov
sbb
clc
lahf
jo
adc
inc
sbb
cmp
lds
scas
icebp
add
fisubrs
push
sbb
adc
outsb
imul
fistpll
xchg
cltd
ret
dec
jns
outsb
xchg
jne
inc
dec
stos
xor
out
mov
cltd
xchg
sub
push
fidivs
inc
ljmp
adc
out
enter
push
jae
jp
or
adc
sbb
imul
iret
and
xchg
ret
into
bnd
push
or
mov
jle
and
test
rcrb
xlat
add
push
jg
inc
dec
jmp
pop
xchg
inc
lahf
movsb
fisubrs
inc
mov
sbb
mov
lret
out
gs
cli
repnz
mov
push
push
fldl
lahf
sbb
push
mov
jecxz
shrl
inc
sahf
jns
add
repnz
jp
push
sbb
cld
ret
fcompl
xchg
jo
jg
jno
xor
or
xchg
pop
inc
insb
inc
dec
inc
xchg
dec
xchg
inc
jae
insb
jo
cmc
dec
push
js
aad
setne
fnsave
or
fistpll
cs
roll
mul
ss
pop
ret
iret
push
and
sub
add
mov
sbb
dec
push
cmc
dec
mov
mov
mov
leave
cli
push
outsl
sbb
push
push
movsl
stc
or
roll
mov
xor
xchg
arpl
es
mov
call
fstpt
loope
xor
cmp
mov
and
movsb
dec
pop
sbbl
and
jb
push
sub
addr16
cli
out
pusha
dec
mov
and
cltd
lods
sub
xor
jnp
push
jl
arpl
mov
pop
cmpsl
loope
cld
shll
cmpsb
and
add
fdiv
cmp
dec
fisubs
pushf
clc
adc
lcall
outsl
shrl
inc
xchg
xor
in
push
dec
dec
jp
pop
cltd
rclb
in
aad
or
in
cld
ds
pop
lret
and
push
xor
and
pop
leave
sbb
imulb
xor
and
jns
jnp
fsubl
mov
repz
jo
inc
mov
add
loopne
jmp
jmp
iret
ljmp
icebp
aas
nop
sbb
mov
pop
mov
mov
mov
inc
outsl
insb
sub
pop
sbb
push
dec
popa
sub
ss
push
inc
jns
lahf
popa
cmp
cmp
sub
jbe
sar
jb
mov
repz
repz
push
scas
fs
rcr
shll
movsl
shlb
mov
mov
and
imul
sahf
fdivl
push
pop
mov
pop
push
in
cmp
test
push
fisttpll
in
cmp
aad
and
in
push
mov
mov
push
cmpsb
in
repnz
pop
xchg
out
cmp
add
xchg
lahf
roll
rcl
xlat
roll
icebp
scas
in
outsl
out
test
cmp
pusha
cmc
ds
lods
stos
jne
repz
int3
fdivrs
aaa
xchg
mov
std
jecxz
jo
imul
mov
mov
add
out
push
cwtl
jo
mov
ss
cmpsb
mov
cmp
pop
movsb
sbb
int
insb
icebp
bound
sbb
scas
fwait
xor
int3
out
lret
dec
lds
imul
add
pmullw
cmp
xchg
andl
fistpll
in
adc
xor
adc
or
fsub
daa
into
lea
adc
xor
xchg
adc
jle
jnp
mov
insl
mov
lock
adc
pop
cmpsl
xlat
mov
testl
sbb
ja
mov
mov
cmp
mov
sbb
mov
cmp
out
jg
sahf
add
mov
jl
mov
fisubrs
xchg
lock
cwtl
add
lahf
addr16
les
sub
dec
pop
dec
ret
jnp
push
fbld
cmpsl
push
notl
jle
mov
push
sub
loopne
das
pop
stos
and
push
sbb
xchg
push
aaa
push
and
stc
into
clc
sbb
out
in
xor
mov
mov
dec
lock
add
mov
addr16
mov
lret
or
je
and
mov
addb
mov
sbbl
test
stc
jno
loop
ljmp
mov
adc
adc
dec
popa
mov
arpl
lods
push
cmp
mov
jae
stos
sub
xor
xor
sub
sbb
jg
mov
inc
outsl
mov
and
out
pop
pop
outsl
sub
stos
or
aas
lcall
jbe
or
clc
int
nop
in
push
mov
push
stos
aaa
arpl
sbb
cmc
add
enter
push
leave
movsb
mov
mov
ljmp
cmp
push
stc
jecxz
and
and
icebp
data16
or
rol
pushf
sbb
sbbl
lods
repnz
xor
pop
adc
cmp
es
lods
out
xor
and
cmpsb
pop
std
jns
pop
add
mov
xor
repnz
mov
stos
xchg
in
pushf
jae
pop
push
sub
fwait
add
adc
pop
stc
mov
adc
fs
xchg
or
inc
lods
mov
stc
sbb
es
mov
pop
out
xchg
add
imul
pop
nop
movsl
mov
add
lret
enter
insb
movsb
jnp
loop
push
xorl
or
inc
ret
adc
xchg
jnp
outsb
xor
sub
pause
adc
inc
loopne
loope
mov
and
lds
fcoml
push
icebp
lret
mov
adc
xchg
push
mov
lock
mov
repz
std
fnstcw
sbb
mov
mov
inc
xor
cmpsl
push
mov
push
ss
or
dec
pop
add
pop
or
fwait
cmp
pop
cmp
ss
inc
jns
cmp
test
inc
dec
roll
pop
lret
enter
aad
xchg
jns
dec
enter
mov
loopne
lea
and
fisttps
push
gs
xchg
xor
out
mov
scas
dec
mov
pop
xchg
arpl
adc
xlat
xor
ret
fisubrs
pop
mov
dec
jb
xchg
mov
mulps
add
lods
mulb
aas
dec
mov
sbb
stc
push
cmp
jns
int3
jns
fstp
or
fwait
push
not
sbb
and
adc
xor
outsb
mov
icebp
push
sub
mov
scas
adcl
jbe
dec
lods
cmp
jp
dec
ficoml
int3
shll
sub
cs
push
cmc
jbe
pop
pop
xor
out
das
push
push
in
inc
cmp
pop
jg
cmc
in
in
cmpb
mov
cwtl
imul
jns
or
add
int
es
cmpsb
push
mov
es
and
cld
xor
and
push
lcall
or
dec
jne
fld
push
ret
inc
hlt
in
jo
cmovae
inc
nop
jnp
es
outsl
mov
and
das
cmp
mov
ljmp
mov
jge
cmpsl
mov
scas
inc
fcmovnb
xor
sbb
mov
outsl
loop
lds
sub
or
cld
out
pop
jmp
sbb
cmp
dec
sub
fadds
test
sub
inc
pminub
xchg
push
and
fsts
iret
pop
insl
push
dec
mov
stc
sarl
pop
mov
sbb
dec
addl
popf
jl
lods
clc
or
cltd
mov
ljmp
add
inc
mov
cltd
flds
cwtl
jle
and
shrl
mov
jnp
jp
ljmp
xchg
xor
mov
pop
movhps
pop
cmpsb
xchg
rcrl
test
add
xor
or
paddsw
dec
std
int3
lods
mov
test
in
mov
adc
ret
push
jno
stos
fisttps
mov
mov
inc
add
ljmp
jmp
jbe
add
pop
dec
adc
js
mov
cmp
stc
mov
add
outsl
data16
fldcw
scas
jmp
jecxz
dec
loopne
clc
mov
loop
movsl
adc
pop
testl
add
cld
bound
cmp
cs
and
jl
repz
push
sub
add
pop
dec
sbbb
push
cwtl
sbbl
enter
enter
movsb
inc
jg
mov
out
pop
pop
nop
pop
repnz
cwtl
outsl
int
mov
add
test
or
sub
cmc
inc
xor
scas
fs
icebp
insb
push
repz
inc
mov
push
mov
sahf
push
imul
ss
fldl
add
mov
enter
inc
jmp
mov
pop
fdivl
lds
or
int3
push
scas
xor
dec
sub
mov
xor
je
jg
mov
out
jae
or
into
fs
dec
scas
mulb
mov
shrl
pop
push
cld
js
fwait
imul
inc
clc
xchg
push
and
loopne
inc
loopne
cmp
daa
loopne
push
cmp
into
sub
or
xchg
mov
jecxz
push
imul
ret
fcomp
or
mov
aad
data16
insl
jp
std
adc
into
push
mov
jl
sarl
push
je
push
mov
fistps
ficoml
sub
cltd
fsubl
inc
fs
pushf
cwtl
lods
mov
lock
pop
lods
cmp
add
loop
inc
loope
sub
inc
outsb
push
dec
in
mov
bound
and
int3
iret
repnz
ret
mov
lods
cmpsb
jae
insl
stos
pop
or
adc
sbb
lods
ror
pop
push
add
outsb
iret
add
lock
test
daa
xor
js
int3
xor
push
cmp
adc
dec
pop
xor
xor
movsl
push
fmull
sub
mov
movsb
pop
andl
mov
rcrl
mov
stos
sub
cmpl
int3
shll
add
xor
or
and
pop
lahf
in
addr16
andb
sbb
jp
dec
add
jnp
sub
loope
xor
shlb
lea
cmp
mov
xchg
jecxz
xchg
push
stos
xchg
mov
pop
jno
xchg
pop
pop
sbb
adc
out
inc
enter
movsl
test
pushf
cwtl
in
mov
andb
popa
push
out
call
xor
jno
mov
loope
mov
cmpsl
test
mov
lds
and
jl
inc
insl
add
pop
ret
pop
loop
decb
push
push
sub
jns
dec
cmpsb
sub
mov
push
out
adcl
adc
cmp
lods
add
adc
push
test
iret
iret
push
inc
mov
mov
pushf
cmpsb
mov
xchg
ljmp
mov
pop
jge
sub
and
dec
sarw
enter
incw
roll
mov
cld
rorl
mov
sub
jo
cli
into
lret
push
int3
movsb
cmpb
inc
iret
test
inc
mov
jl
mov
andb
aaa
es
mov
xchg
sub
mov
xor
mov
mov
repnz
jg
sar
mov
stos
and
xor
fld
cld
loopne
dec
clc
outsl
jmp
dec
aam
jmp
out
jns
sbb
mov
test
adc
lods
dec
mov
pop
pop
push
add
inc
cmc
out
int3
mov
add
scas
or
fxch
mov
or
cmp
test
fsubs
movsb
scas
fstpt
push
mov
out
inc
call
xor
icebp
push
xchg
mov
popf
outsb
pop
scas
in
fdiv
xchg
shrl
cmp
fcomip
es
daa
add
and
jg
or
push
pop
jno
dec
adc
mov
xor
stos
jno
mov
mov
fildl
icebp
in
rol
or
adc
stc
push
push
lahf
mov
adc
jecxz
daa
shlb
mov
aas
push
outsb
xor
mov
fildll
mov
rolb
push
cmp
sar
cltd
sbb
cld
stos
fisubrs
icebp
cmp
scas
out
sbb
jle
xchg
jle
fs
rcl
int
xchg
data16
sub
cmp
movsl
push
movsb
int3
inc
clc
pusha
mov
arpl
xor
fstpl
xor
pop
lcall
pop
dec
cmpsb
push
pop
sub
cmp
add
inc
pop
jmp
jne
ficoms
bound
pop
pop
outsb
sbb
mov
push
xlat
ret
xchg
stos
xor
lret
or
or
jns
ljmp
cmp
sahf
adc
addr16
out
repnz
ret
in
in
mov
jle
ljmp
push
jns
inc
mov
inc
and
sbb
aam
sub
pop
cs
xchg
repz
pushf
jb
pop
and
aad
cwtl
lahf
rolb
fs
or
xchg
insb
push
fsubrp
insb
xor
sub
sbb
pop
in
movsbl
mov
aam
enter
push
shrb
fs
lret
jns
stos
cmp
daa
jbe
xor
push
lds
inc
ss
adc
imul
fnstenv
jecxz
sti
mov
das
es
in
xchg
or
add
bound
push
scas
pop
xchg
repnz
cli
into
and
mov
push
out
adc
mov
sbb
fistps
dec
cmpsl
lods
loopne
in
jnp
and
andb
lahf
xchg
mov
aam
aad
lds
scas
nop
add
jo
inc
inc
pop
mov
aam
pusha
in
sub
cmp
push
ficomps
hlt
inc
xor
adc
cs
lea
jno
js
fldcw
cmp
sbb
mov
sbb
jp
les
fwait
xor
mov
fwait
lock
and
jg
jns
cmp
adc
mov
insb
cmp
mov
inc
popf
stos
xchg
leave
rcr
iret
sub
inc
fcomps
fdivrl
jno
mov
add
push
inc
aas
mov
in
and
int
adc
mov
jl
js
lret
cmp
inc
sti
packuswb
jmp
rorl
pop
imul
test
pop
push
inc
sub
jns
subl
inc
pop
sbb
jmp
mov
push
rolb
dec
push
in
in
test
scas
fsubl
popl
or
sub
xor
mov
ds
cwtl
insl
adc
icebp
adc
mov
inc
jbe
xor
push
fcmovne
fldcw
jle
jge
adc
inc
jne
pop
aas
popf
xchg
xchg
push
stos
xchg
stos
sbb
jne
sbb
insl
inc
insl
add
xor
mov
xlat
xchg
sarb
cltd
adc
push
gs
test
cld
jb
xor
sub
mov
xor
lods
pop
lahf
cmp
and
push
aas
ret
sti
dec
jbe
xchg
lods
dec
enter
dec
jno
xor
lahf
cmp
jae
movsb
xchg
cmpsl
jmp
jge
push
stos
cmp
xor
out
jmp
out
rcrb
dec
xor
stos
cmp
ret
dec
jae
je
jl
in
dec
aad
lods
test
nop
iret
imul
fs
xchg
mov
pop
hlt
cmp
mov
and
faddl
loop
jbe
push
repz
ret
rolb
push
pop
gs
das
sbb
das
add
aad
xor
cmpb
mov
addr16
cmp
inc
sbb
outsb
mov
adc
cltd
mov
sti
adc
pusha
rol
out
inc
xor
and
mov
cmpsb
scas
mov
test
dec
fs
mov
inc
call
adc
cmpsl
and
test
mov
and
jle
outsl
mov
mov
inc
lret
xchg
adc
ret
jp
lcall
cmpsl
fcmovu
pop
fwait
sbb
mov
inc
fbld
idivl
dec
das
gs
int3
mov
xchg
inc
aaa
dec
dec
add
call
fs
movsb
lcall
sbb
adc
fcmovu
adc
call
outsb
sub
sbb
push
ret
push
jl
lcall
dec
dec
scas
jp
cs
in
push
cmp
iret
cmp
and
lock
inc
leave
lods
in
cmp
movsl
xchg
les
add
sbb
aas
adc
mov
mov
int3
pop
xor
xchg
popf
scas
das
mov
in
xchg
imul
mov
fcoml
jl
loopne
adc
push
bound
in
push
clc
fwait
or
xchg
in
inc
cwtl
cmp
xor
ss
pushf
push
dec
jl
dec
das
push
lret
outsb
cwtl
cmp
and
xchg
lret
sub
arpl
scas
xchg
out
out
mov
adc
pop
pop
add
cmp
xchg
xor
aad
push
push
inc
orl
add
or
cwtl
insb
adc
mov
pop
xchg
in
ljmp
mov
jb
adc
mov
sahf
stc
adc
mov
rolb
sbb
mov
xor
aas
pusha
iret
andb
lods
adc
iret
stos
push
lds
mov
and
negl
and
icebp
aad
pushf
rep
dec
sti
jp
rcrl
btr
adc
inc
lret
lahf
ljmp
pop
mov
mov
je
mull
xor
push
out
mov
pop
sbb
insb
mov
pop
inc
into
inc
cs
and
je
xchg
xchg
adc
sbb
pop
and
jecxz
sbb
inc
xor
call
ds
lcall
daa
sbb
addr16
out
mov
je
aad
push
mov
add
mov
adc
sbb
addr16
fs
jne
mov
lahf
lahf
mov
and
inc
mov
and
lret
ret
lea
xor
in
movzbl
pushl
push
sbb
out
sbb
mov
repnz
sub
sub
and
lcall
fdivr
imul
add
and
or
cmc
orl
push
sti
out
lcall
pop
mov
push
or
test
sub
stc
mov
mov
gs
and
sub
sarl
jmp
dec
xor
or
repnz
push
mov
inc
dec
ror
fldenv
xor
sub
arpl
sub
mov
cwtl
add
and
pop
push
out
testb
repz
sbb
jmp
jp
or
push
and
in
mov
pop
mov
pop
loope
hlt
push
cwtl
push
mov
je
scas
movsb
mov
push
or
femms
ror
fcmovnbe
ljmp
scas
mov
pop
aam
in
test
sub
inc
in
jecxz
sbb
imul
pop
shll
fisttpl
push
into
jg
push
mov
daa
mov
jo
sti
add
lahf
xor
and
in
xor
mov
jmp
cmp
adc
jge
mov
cmc
and
xchg
pop
insl
cld
stos
jne
and
lcall
dec
test
fsts
mov
add
sbb
inc
loop
out
popf
test
push
loop
and
idivl
adcl
pop
add
mov
mov
jl
xorl
je
or
mov
mov
cwtl
out
or
adc
pop
pop
aaa
mov
push
mov
mov
int3
ss
pop
into
lods
mov
orl
out
jbe
push
mov
xchg
sti
sub
lock
push
pop
add
xchg
out
ret
xor
aas
jae
aam
jnp
adc
add
movsb
sbbb
mov
inc
mov
cmpsb
lahf
mov
cmp
mov
dec
pop
jge
dec
ljmp
push
and
cld
pop
lahf
ds
sbb
jo
xchg
cmpsb
fidivs
sbb
lret
jp
jge
jbe
add
hlt
mov
mov
pop
cli
add
push
mov
lock
movsb
in
popa
mov
out
ret
push
loopne
push
and
mov
jb
stc
xchg
test
xor
push
pop
inc
popa
mov
imul
ss
and
enter
cmpl
adc
xchg
movl
xor
das
fwait
imul
adcl
lret
enter
fisubs
pop
outsb
dec
push
inc
dec
lods
ja
push
push
ds
xchg
icebp
aaa
inc
and
imul
movsb
mov
lods
sub
adc
or
or
adc
and
cld
nop
stc
cs
mov
mov
and
adc
fcmovnu
ljmp
movsl
sub
sahf
lods
pop
mov
int
pop
and
adc
shrl
insl
cwtl
mov
test
lahf
dec
mov
inc
pop
and
and
in
jb
inc
int
sub
xchg
jle
mov
repnz
sbb
mov
cli
sub
add
flds
faddl
shrb
and
loope
cmpsb
push
sahf
negb
mull
adcl
fcomps
sub
jno
rcll
cltd
push
insb
stos
xchg
scas
and
fs
lock
xchg
cltd
cmp
sub
aaa
jg
cmpb
push
and
pop
punpckldq
jno
fxch
xchg
pop
sbb
sbb
mov
stos
cld
add
cmp
xor
stos
cmp
and
push
aad
leave
fsubrs
mov
into
pop
fnstsw
sbb
iret
out
nop
jb
ljmp
mov
imul
daa
xor
icebp
sahf
insl
in
sti
pop
push
fs
cmpsl
clc
cwtl
adcl
data16
into
jae
sub
test
push
mov
pminub
movsl
dec
sbb
mov
loope
pusha
sbb
cltd
push
dec
adc
pop
shl
mov
int3
xor
inc
ss
and
sbb
frndint
mov
sbb
xorl
addr16
xchg
lret
push
xor
and
mov
pop
mov
dec
push
jmp
loop
lock
out
fcmovb
daa
rclb
adc
data16
stc
adc
sbb
daa
push
js
mov
push
lea
imul
pop
fst
gs
and
fs
js
push
ret
mov
pop
or
or
je
in
push
adc
fisubrs
mov
mov
insl
cmp
jp
repnz
mov
mov
retw
cmpsl
test
insl
sbb
das
jp
push
push
jns
loopne
pop
out
or
adc
mov
arpl
arpl
add
add
call
pop
push
mov
nop
pop
add
mov
jp
dec
adc
xchg
pop
push
scas
mov
sbb
jecxz
pop
std
pop
scas
in
cmp
shrb
loope
adc
fists
stos
xchg
es
pop
out
xchg
addr16
or
stos
test
addb
xchg
cmp
aad
lret
mov
jns
xor
popf
fdivs
fldcw
cmp
sub
fistpl
push
jns
sub
mov
loope
stc
mov
push
out
mov
or
inc
jb
mov
loop
aad
xchg
push
scas
cli
mov
inc
aaa
xchg
jecxz
push
ds
imul
sub
cmp
outsb
pusha
cmp
fistps
dec
je
jge
pop
fucom
inc
xor
fisttps
out
push
ds
pop
push
rcl
jecxz
sbb
mov
push
in
fbstp
ljmp
add
adc
push
xchg
xchg
sbb
inc
push
outsb
je
pop
insb
in
aad
mov
mov
or
stos
jmp
sbb
fcmovnu
cmp
inc
jg
shll
xor
xchg
lods
ficoms
xchg
out
cwtl
sub
rcrb
xor
scas
inc
fcmovu
or
dec
shll
pop
lds
sbb
cld
ret
mov
cmp
fcoms
bound
add
jle
jo
xchg
xor
or
jg
mov
shll
and
jecxz
dec
mov
outsb
dec
testb
lods
dec
dec
push
adc
scas
mov
xor
xchg
sub
addr16
jmp
adc
sub
dec
bound
dec
xor
out
pusha
push
pop
sahf
cmc
pop
into
cld
clc
sub
ret
push
ret
fs
in
add
test
popf
xchg
pop
insb
and
repz
mov
shlb
sub
movsb
jo
push
push
and
lods
sbb
xlat
es
push
and
sbbb
out
xchg
outsb
es
or
lds
jg
cmp
shrb
lcall
in
aas
push
insl
gs
scas
aad
mov
pop
sub
push
jbe
call
ret
stos
pop
repz
or
push
dec
push
lahf
pop
andb
jg
out
fdivrl
hlt
enter
shlb
xchg
push
out
int
cmpsb
test
or
into
and
cmpsb
mov
into
sbb
rcr
mov
lock
inc
inc
into
pushf
pop
pop
xchg
lret
fwait
std
nop
pushf
in
add
pop
mov
adc
loopne
addr16
out
mov
sub
mov
adc
repz
dec
mov
dec
add
mov
movsl
clc
inc
xorb
add
repnz
dec
cmpsl
lock
sbb
aas
out
jb
addr16
lods
and
push
cltd
mov
arpl
pop
push
mov
test
sbb
hlt
mov
insb
outsb
ret
and
sbb
call
pop
test
and
mov
mov
mov
dec
push
stos
hlt
mov
xor
xchg
es
inc
mov
xchg
call
setbe
mov
pop
add
fimuls
hlt
int3
mov
fwait
xor
les
mov
dec
movsb
push
jp
mov
nop
sub
push
jo
xor
dec
addr16
dec
jne
mov
dec
or
aaa
stos
call
mov
outsl
add
stos
pop
les
negb
lds
lods
arpl
jge
mov
pop
call
mov
loop
push
out
push
adc
divl
dec
dec
fsubp
xor
push
adc
push
or
xchg
dec
in
fistpll
ret
mov
mov
les
into
pushf
cmp
pop
fisubl
pop
frstor
or
into
or
dec
cmp
jb
and
or
sbb
xchg
out
mov
clc
mov
in
or
rorb
mov
imulb
xor
lock
loopne
mov
xor
outsb
adc
scas
movsl
push
cmp
push
xor
inc
test
add
inc
mov
cwtl
sbb
jo
xchg
lahf
mov
ror
and
incl
adc
cwtl
jl
ret
xchg
jbe
xchg
xor
ljmp
nop
ljmp
repz
cmc
mov
lret
push
and
pop
mov
xchg
xchg
in
incl
mov
aas
loope
mov
fwait
insb
sbb
or
mov
in
stos
cld
push
xchg
scas
jbe
lret
add
popa
mov
add
pop
pop
mov
xor
icebp
xor
mov
repnz
push
xchg
adc
cmp
jb
mov
jecxz
lahf
jl
std
add
sbb
pushf
hlt
add
adc
fisttpl
mov
xchg
fs
fcoml
inc
and
and
xchg
pop
mov
jecxz
enter
push
dec
mov
out
and
pop
adcb
mov
orb
push
test
sarl
loop
jbe
roll
mov
fcomp
imul
add
sbb
and
inc
sar
je
mov
sub
push
popf
insl
std
mov
mov
adc
push
jmp
movl
mov
jle
pusha
daa
mov
ss
inc
icebp
jb
ss
sub
sub
mov
sub
xchg
dec
dec
test
pop
lds
shrl
mov
sbb
jnp
inc
pop
or
jmp
cmpl
sbb
dec
add
xor
cli
lock
or
shr
cwtl
adc
shl
addb
out
push
mov
sub
fistpll
sbb
or
xor
imul
rclb
mov
iret
and
jnp
mov
xor
out
sub
mov
out
xchg
retw
sub
push
call
hlt
or
dec
lret
and
xlat
mov
xlat
ret
lock
xor
lea
fsubrs
inc
mov
adc
sbb
xor
shlb
xchg
inc
xchg
stos
jl
in
out
ficomps
data16
mov
aas
xorb
xor
daa
sub
mov
ret
mov
pop
fcmovu
ret
and
in
sub
sub
adc
xchg
cmp
cmpsb
testb
mov
pop
jns
shll
jge
mov
xor
sbb
dec
adc
add
cs
bound
jp
mov
dec
adc
testb
pop
rorb
or
cmp
dec
roll
pop
sub
mov
cmp
mov
fcoms
mov
loop
clc
push
loopne
lret
cmp
mov
iret
sbb
dec
mov
jns
fwait
aaa
mov
pop
fucomi
xor
sahf
pop
push
sub
mov
fst
cwtl
pop
orl
ja
pop
addr16
mov
in
dec
mov
push
loope
cmp
and
push
das
jae
and
test
pop
push
out
mov
add
push
sub
sub
xchg
cmp
dec
adc
iret
cmp
das
dec
popf
cmpsl
jmp
fiaddl
push
fwait
mull
lahf
mov
shlb
bound
push
xor
fcompl
test
insl
cwtl
push
popa
shrb
cmp
lret
dec
pop
cmp
xor
int3
scas
push
roll
pop
add
fcomps
std
insl
or
pop
lret
mov
bnd
inc
or
sbb
fcmovne
scas
push
int
ret
aad
ljmp
adc
inc
loope
xchg
cmp
shlb
cltd
xchg
fstpl
stos
pop
and
mov
sarl
or
aas
mov
in
imul
test
inc
xor
jns
inc
push
jecxz
inc
daa
cwtl
mov
je
lret
xchg
cwtl
pop
aaa
insl
jmp
js
push
xorb
loope
dec
push
test
rcrl
sbb
dec
sti
mov
cmpsb
xchg
mov
or
mov
mov
test
push
fsubr
movsl
mov
mov
pop
fistpll
les
test
and
test
testb
andb
outsb
xchg
cmp
cmp
push
loop
mov
test
pop
xchg
sub
adc
xor
fs
clc
scas
dec
popf
hlt
jns
push
lret
leave
dec
xor
jmp
in
out
fwait
shlb
enter
stos
ror
insb
jg
cmpsl
jmp
stc
jge
repz
mov
int3
mov
inc
mov
pop
push
jle
adc
inc
inc
mov
cmp
mov
xor
pop
je
mov
out
add
cmp
mov
adc
xor
addl
aaa
pop
out
cltd
outsb
clc
cli
lret
adc
or
sar
mov
and
es
stos
jne
xchg
sbb
cmc
imul
push
or
fstpl
out
jne
shlb
jnp
adc
stc
or
ret
dec
and
push
push
mov
fsubl
rclb
das
int3
add
fsubrl
popa
mov
hlt
cmp
xchg
out
ljmp
jp
pop
out
and
cmp
in
sbb
clc
int3
mov
xchg
mov
and
in
std
adcb
imul
add
aad
push
cli
data16
mov
mov
xchg
movsl
push
subl
enter
and
inc
fwait
and
imul
mov
adcl
faddl
jo
bound
jne
movsl
mov
into
shlb
dec
jp
mov
in
xor
out
int3
les
xor
arpl
test
mov
popa
ljmp
push
add
sbb
mov
or
sub
mov
mov
fidivrs
dec
lea
es
dec
pop
ret
jecxz
ss
xchg
popa
xchg
mov
insl
out
mov
or
rorl
in
sbb
in
int3
mov
popa
fisubl
push
dec
jmp
int
mov
xlat
clc
lret
pop
sub
cmp
bound
scas
in
addr16
stc
dec
or
outsl
sti
mov
sbbb
dec
mov
arpl
sbb
push
insb
call
negb
sti
ficomps
sti
sbb
fwait
rorw
das
xchg
jo
xchg
dec
je
arpl
fsubrl
or
loop
mov
pusha
adc
cmc
mov
dec
jne
pop
stos
push
in
loope
pop
dec
rclb
in
mov
and
leave
inc
outsl
pop
xor
pop
pop
leave
xorb
int
cld
pop
mov
mov
pop
push
dec
push
roll
mov
adc
sbb
fdivrl
rorb
int3
sahf
ljmp
push
push
inc
xor
js
aas
jnp
sbb
stos
inc
add
cmp
pop
popl
out
mov
xchg
jmp
add
push
pop
mov
ret
pushf
pop
mov
shll
into
pushf
pop
xchg
mov
imul
addb
or
nop
scas
xchg
das
sbb
fwait
dec
push
jae
pop
sub
mov
cwtl
popf
in
std
int3
or
dec
sbb
inc
pusha
jecxz
xlat
imul
clc
jg
mov
cmpsb
outsb
adc
pop
cs
push
pop
add
loopne
sub
cli
aas
push
pop
mull
cwtl
and
test
mov
faddp
lcall
mov
mov
into
leave
pop
ja
mov
loopne
jecxz
jmp
shl
dec
sbb
fnsave
test
outsb
outsl
pop
lret
pushf
cmpsl
popa
push
adc
dec
fimuls
and
sti
and
int3
cmp
pop
rcrb
sub
ficomps
rep
xor
fldt
stos
and
std
mov
add
inc
lahf
inc
loop
xor
loop
jb
popf
repnz
lret
adc
jmp
xor
loop
mov
adc
push
jb
inc
xchg
out
cltd
dec
movsl
daa
punpckhwd
popa
pop
daa
mov
ds
jb
push
loopne
push
xorl
adc
out
cmc
dec
cmpsb
js
or
push
push
cmp
sti
sbb
mov
pop
mov
cmp
mov
jae
xor
xchg
cmp
xchg
jg
inc
out
sbb
cmp
andps
movsb
movsl
push
lret
mov
push
cmpsl
bound
shlb
outsb
sub
jnp
inc
adc
lods
and
aad
push
jge
inc
pushf
loope
es
cwtl
pop
lods
xchg
cmp
mov
shll
daa
js
jo
push
les
stc
int
mov
mov
sub
cmp
les
xor
in
nop
loope
bound
ret
adc
fiaddl
mov
ljmp
test
repnz
xlat
loope
cmp
addl
call
pop
mov
or
pop
sub
mov
cwtl
push
sbb
mov
xchg
fcmove
add
ret
sub
push
iret
xchg
push
inc
sahf
and
test
or
fisttpl
mov
cwtl
adc
fildl
adc
stos
xor
push
lds
dec
mov
cmp
dec
in
lods
jo
fsubr
pop
rcl
loope
sbb
mov
xchg
nop
push
adc
jl
xchg
push
cltd
lret
or
call
test
push
imul
and
add
jns
mov
lret
push
nop
lds
adc
jecxz
rcrl
mov
mov
jbe
push
and
cli
outsl
mov
adc
enter
rcl
add
sbb
mov
call
add
pop
xor
mov
into
push
mov
lret
popf
lret
sbb
xor
mov
mov
cmpsb
jb
push
sbb
sti
push
fdivr
loope
mov
into
loope
mov
mov
push
xchg
negl
mov
sbbl
aaa
scas
cmp
ret
pop
mov
mov
cmp
xchg
ljmp
cmpl
js
lret
xor
mov
fiadds
push
loop
dec
sub
xor
sub
mov
jp
jp
lcall
push
push
xchg
push
sbb
out
popf
aam
int
push
mov
shll
shr
jns
ja
cmp
in
pop
add
shlb
push
das
ja
std
fistpll
dec
xchg
xchg
leave
cltd
push
test
push
mov
das
pop
lahf
mov
mov
lret
add
leave
addl
and
jge
pop
rcll
xlat
adc
movl
sub
and
je
js
cmp
das
test
jp
mov
movsb
dec
fwait
jns
sbb
cmc
dec
call
cmc
imul
pop
xlat
mov
popf
mov
add
imul
imul
mov
cmc
test
test
test
xchg
rcrl
aam
fisttps
cwtl
lret
out
dec
in
pop
test
in
jg
leave
push
jbe
movsb
daa
xchg
and
out
das
lods
mov
divb
jge
mov
push
jns
xchg
sbb
aaa
xchg
dec
lds
sbb
scas
inc
pop
loope
sbbb
pop
jb
hlt
xchg
adc
add
xchg
xor
arpl
mov
xlat
setbe
jnp
dec
push
es
outsb
ljmp
xchg
add
xor
push
jb
imul
cmpsl
cmp
les
in
xor
fcmovu
mov
adc
fwait
xchg
sti
add
test
orl
nop
dec
stc
loope
in
cmp
add
mov
mov
movsb
xchg
je
jle
and
push
adc
je
mov
pop
imul
cmpsl
aas
pop
adc
pop
rorl
pushf
loopne
xchg
jb
imul
pop
aad
iret
fs
and
insl
xor
das
xor
sbb
push
jl
xchg
sahf
dec
xchg
mov
sbb
imul
jl
aas
decb
popa
fstl
mulb
mov
and
aas
scas
lock
fldenv
mov
lods
ret
xchg
fptan
mov
scas
dec
sbb
cmp
sub
pop
mov
fnstenv
mov
shll
in
fnstsw
sahf
shll
xchg
sbb
subl
and
ss
lea
jp
mov
sahf
sbb
pop
push
xchg
je
arpl
mov
push
mov
pusha
mov
test
push
mov
jle
cmc
inc
pop
mov
inc
mov
pop
push
pop
push
ljmp
arpl
jbe
movsl
arpl
and
popa
pushf
push
pop
je
gs
faddl
mov
jg
shll
test
mov
and
in
repz
push
xchg
pop
xor
outsl
xchg
dec
loope
pop
mov
inc
sub
fidivs
or
js
mov
ret
ret
inc
xor
sbb
and
icebp
ret
test
sbb
test
and
and
mov
xchg
jle
sbb
neg
dec
mov
sbb
sahf
push
aaa
xchg
lods
ret
rcll
popa
rorl
sbb
sbb
jmp
sub
out
pop
dec
jmp
mov
xchg
mov
hlt
es
aam
cmpl
movsl
jne
lret
testl
push
dec
sub
jg
or
dec
lret
andl
aas
lahf
sbb
add
add
add
fdivrl
subb
jecxz
jbe
xchg
rorb
fbld
std
adc
pop
jg
andl
jae
push
jg
mov
fadds
push
std
pop
negb
imul
mul
mov
stc
mov
jo
or
iret
aam
cmp
repnz
stos
fwait
dec
ficoml
loope
int
jnp
int
imul
jge
pop
add
icebp
call
fwait
xchg
or
sbb
adc
out
jl
or
lcall
addl
daa
repnz
inc
mov
es
jl
dec
cmpsb
test
notb
sub
pop
les
sbb
repnz
adc
dec
mov
add
movsl
ljmp
push
push
add
add
xor
xor
stc
in
decl
mov
push
adc
inc
aaa
adc
xchg
pusha
and
jl
and
ds
pushf
xchg
inc
in
mov
or
jno
stos
push
jne
std
xchg
cli
outsl
adc
pop
push
sub
ret
movsb
jns
add
dec
sub
pop
lcall
std
jno
sahf
add
xchg
and
xchg
mov
push
lret
dec
mov
push
fidivrl
xchg
and
sub
ja
push
dec
das
fwait
int3
pop
iret
adc
xchg
inc
mov
sbb
gs
mov
mov
int3
mov
and
pop
xor
sbbb
sbb
outsl
mov
adc
sbb
outsl
push
inc
aaa
jns
inc
add
aad
inc
jl
fldl2e
les
pushf
mov
or
mov
pop
mov
xor
insb
icebp
popa
jnp
jmp
mov
outsl
aam
or
cmp
xchg
enter
inc
hlt
adc
mov
arpl
repnz
jbe
mov
cs
ror
dec
nop
jmp
outsb
xor
mov
pop
adc
mov
sub
test
int3
jns
imul
jecxz
mov
add
ja
out
sub
xor
push
adc
push
pop
ljmp
hlt
adc
jecxz
idivl
jecxz
test
sbb
and
mov
jnp
or
xchg
or
mov
ljmp
dec
inc
mov
popf
cmpsl
pop
mov
insb
inc
adc
ror
popf
adc
cli
dec
cwtl
jp
xor
mov
inc
pop
movsb
push
arpl
jae
ds
nop
js
mov
adc
ret
out
mov
jne
loope
cmpsl
jne
test
loopne
mov
xchg
inc
mov
adcb
mov
fisubl
sbb
call
push
shl
sbb
std
pushf
and
pop
cmpb
dec
mov
add
sub
adc
cmp
in
sbb
inc
stos
enter
inc
int3
in
adc
cli
cld
xchg
push
cmp
cltd
push
lods
jne
adc
shl
mov
call
cwtl
roll
mov
outsb
pusha
add
imul
stos
add
int
mov
sbb
push
rorb
stos
push
mov
icebp
xchg
out
in
mov
cmpsl
js
fsubrl
dec
sbb
lock
je
addr16
push
push
mov
jp
enter
push
add
bound
cmp
rorb
sub
aaa
icebp
add
lahf
sbb
popa
jmp
cmp
ret
loopne
in
mov
and
inc
mov
scas
pop
test
movsl
call
mov
and
or
mov
and
or
addb
xchg
jae
mov
fidivrs
dec
mov
arpl
xchg
jns
push
sbb
aad
int3
push
sbb
inc
add
and
push
xor
pop
imulb
cld
mov
out
ret
sbb
dec
sbb
fistl
dec
test
and
shl
mulb
shl
mov
mov
sbb
negb
mov
mov
cmp
aam
cmc
jecxz
xor
arpl
sbb
push
sarl
into
mov
popf
xor
out
pop
scas
xchg
and
or
cmpl
jbe
ret
jg
xchg
mov
sub
into
cmp
cmp
sub
ror
or
pop
mov
and
das
bound
sarl
fmul
mov
xlat
je
in
insb
or
xchg
mov
insb
mov
popa
mov
pop
addb
out
cltd
xchg
push
or
add
sub
sub
xchg
test
movsl
ret
sbb
push
lcall
repnz
cld
es
jo
rcll
cmpsb
mov
adc
loope
stos
fdivrl
jp
jle
or
push
out
and
out
outsb
mov
jnp
hlt
lds
aas
imul
mov
faddl
addr16
mov
in
cwtl
mov
and
adc
lahf
lock
adc
gs
clc
xor
in
push
mov
inc
fldl2t
jbe
popf
sbb
or
rorb
pop
jbe
js
mov
or
xchg
sbb
adc
in
stc
mov
aad
in
cmpsb
dec
push
mov
out
xchg
mov
inc
jp
sar
cmp
fsub
iret
mov
mov
mov
fcomps
jne
data16
imul
lds
pop
mov
out
scas
popf
xchg
dec
push
jmp
das
mov
and
jne
fisubs
xor
xchg
test
push
fs
cltd
adc
xor
add
in
and
testl
sbbb
test
popa
jge
mov
xchg
adc
jnp
shl
xlat
shlb
sub
pop
xchg
cmp
push
subb
add
rolb
cmp
dec
imul
lds
bound
cmp
cs
and
rolb
outsl
repnz
push
jb
xlat
mov
lock
push
int3
aaa
inc
enter
sub
mov
xchg
and
push
add
add
and
push
and
lods
mov
mov
aas
push
mov
jmp
push
into
shlb
ret
sbb
lods
mull
repnz
stos
pop
push
cmpsb
shll
xchg
ret
and
arpl
and
xlat
xchg
int3
xor
mov
mov
stos
es
int3
pop
popa
icebp
xchg
fldl
mov
movsb
popf
xor
movsl
sub
inc
fisubs
dec
rsm
and
add
add
mov
push
nop
sbbb
or
jb
push
lret
stos
ret
das
or
push
test
leave
dec
pop
cwtl
stos
mov
jno
and
add
lret
jne
xor
rcrl
sti
mov
dec
jl
lea
out
fdiv
cltd
cmova
adc
adc
out
cwtl
insl
notl
outsb
fwait
xor
repnz
lcall
outsb
cmp
cld
mov
aam
lcall
and
cmp
jns
dec
cmpb
test
ja
cmp
mov
mov
hlt
xchg
jmp
jnp
sahf
lret
and
jo
sub
ljmp
test
jmp
loope
ss
dec
dec
adc
add
jno
mov
das
mov
ret
jmp
sub
adc
into
jne
mov
inc
or
push
jge
cs
pop
and
fmuls
and
cmp
movsb
or
pop
adcb
outsb
movsb
and
push
pop
in
sub
xor
jb
add
daa
shrl
cmp
add
bound
enter
or
lret
dec
xor
push
cltd
push
mov
sbb
sub
push
out
ja
mov
adcl
cmpsl
fwait
les
aaa
popa
inc
incl
or
mov
shrl
les
sub
xchg
xlat
push
inc
fildl
dec
dec
fnstenv
andb
loope
into
add
dec
notb
pop
aaa
cmp
xor
push
pop
mov
xor
mov
or
jl
inc
int
pop
cmc
sbb
or
stc
mov
dec
cmc
fistpll
sub
int
mov
pop
ss
sub
aaa
inc
gs
bound
pusha
sbb
lret
out
cmpsl
add
lcall
pop
jo
divl
push
or
mov
push
cmp
xlat
cmpl
mov
test
adc
cmp
and
sbb
cs
clc
jb
dec
lea
in
and
and
stos
inc
jecxz
jp
lock
lea
pushw
mov
inc
mov
adc
ljmp
inc
repnz
scas
in
pop
dec
fwait
xor
push
stos
std
shl
fdivrp
add
adc
xorb
xor
fs
cwtl
daa
mov
sbb
jmp
sbb
lcall
das
ja
bound
or
in
sbb
push
cs
dec
test
push
insb
lcall
jp
test
xchg
pop
xchg
test
dec
sarb
push
insl
popf
inc
mov
or
push
dec
or
jp
loop
jae
jge
jge
jle
fisubs
inc
or
in
lahf
in
testb
cmpsl
cmp
mov
out
sub
out
jbe
ret
pushf
int
jo
lods
add
mov
xchg
adc
nop
add
mov
fdiv
ret
and
sub
movsb
xchg
std
in
or
cmpsl
sbb
mov
jle
sub
sub
fs
push
ret
das
and
cwtl
jl
mov
mov
int3
sbb
or
dec
subl
and
jbe
imul
mov
loop
sti
jns
mov
lods
and
jo
push
sub
in
shr
lret
jns
jnp
pop
mov
repz
outsl
or
pop
mov
push
mov
mov
into
subb
adc
mov
iret
movsb
sbb
imul
clc
and
inc
push
out
push
cmpsb
xchg
pushf
in
test
push
jns
sti
jo
or
int
mov
add
setno
sbb
push
push
jnp
adc
daa
pop
dec
mov
jne
jg
aad
xchg
jns
addb
out
xchg
ds
filds
mov
pop
imul
ret
es
mov
cmp
mulb
dec
sbb
cmpsb
aaa
dec
lds
rolb
or
cmpsb
jnp
sbb
xor
xor
pop
ficompl
aaa
cld
xchg
xchg
stc
mov
in
xchg
iret
sbb
cli
sbb
mov
mov
jp
and
sub
cli
inc
add
fistps
ja
xchg
std
cwtl
push
push
jns
xchg
xor
xchg
movsl
call
xor
aad
insl
adc
repnz
je
icebp
loopw
sub
sbb
cmp
mov
xchg
fidivl
jno
inc
testl
mov
dec
imul
or
sub
test
sbb
imul
stc
out
push
out
push
cli
lahf
inc
mov
std
sahf
sub
ss
js
xor
clc
aad
fcomps
mov
jne
int3
mov
jecxz
ret
pop
rcll
dec
sbb
or
cmp
std
les
sub
in
pop
insl
xchg
ds
jge
adc
out
sbb
outsl
xchg
sub
jae
in
pop
mov
cmpsl
cmc
or
add
outsb
mov
mov
fdivrs
xchg
or
inc
xor
push
arpl
mov
loopne
mov
add
scas
cmp
pop
push
stc
ffreep
fs
mov
mov
sub
int3
out
daa
into
mov
sbb
rcll
inc
mov
sub
imul
jp
dec
fimuls
lret
push
xchg
inc
pushf
cs
push
inc
jno
jmp
cmpsl
insb
dec
mov
pop
jno
mov
cli
outsl
cmc
push
aas
imull
in
das
fldenv
adc
xor
adc
lea
test
dec
cmc
xor
fcomip
mov
fildl
mov
xchg
xlat
mov
sahf
push
hlt
pusha
out
and
subl
testb
pop
fsubrs
addl
cmp
test
and
cmpsl
mov
mov
mov
add
cmp
ljmp
pop
pop
xchg
jo
jno
out
mov
cmp
sbb
les
lahf
fmul
cltd
xor
pop
sub
ljmp
shll
stos
popf
sbb
mov
inc
mov
and
jp
out
xor
pop
jl
sub
lock
pop
das
inc
or
jmp
in
mov
mov
xchg
aaa
jp
or
cmpsb
adc
push
xor
push
xchg
xor
mov
xchg
test
mov
fcoml
or
lods
insl
negl
jns
mov
mov
ss
insb
cmp
je
cmc
inc
push
jp
mov
mov
xadd
mov
jnp
sub
push
push
sbb
enter
mov
addr16
xlat
rorl
lret
xchg
fsubs
sub
inc
fmuls
insb
ret
cmpsb
imull
push
jecxz
scas
jns
int3
inc
leave
pop
xor
sbb
mov
fidivs
notl
leave
mov
inc
mov
adc
cmp
or
setl
cli
xchg
das
mov
incl
lret
insl
scas
adc
mov
jnp
and
rcll
adc
pushf
push
mov
mov
or
cmp
jno
leave
jo
stos
xchg
mov
dec
movsl
das
lds
in
lret
xchg
ficompl
xchg
push
mov
insl
repnz
int3
mov
inc
xor
out
mov
out
andb
pop
push
xchg
in
xor
out
popf
gs
and
jno
daa
jg
rolb
inc
xchg
inc
dec
adc
mov
push
fdiv
mov
scas
lret
xor
push
sbb
push
enter
xchg
leave
jnp
mov
mov
push
inc
mov
mov
jns
pusha
jne
mov
xchg
pop
mov
xor
arpl
mov
dec
sbb
push
data16
pop
ja
mov
cmpsl
ret
jp
pop
cmp
push
arpl
sbb
xchg
pop
or
fcomp
ja
outsl
mov
inc
xchg
mov
jne
pop
cli
lods
lret
stos
imul
cmpsl
insb
imul
scas
int
rol
jge
inc
int
jmp
push
jg
cmp
rolb
xchg
rcr
jno
pop
jp
daa
mov
in
xor
daa
popa
shrb
int
mov
es
out
ret
outsl
adc
ljmp
test
data16
cmp
and
mov
push
fldl
ds
pop
push
dec
xor
test
fdivrs
xchg
fs
mov
jbe
hlt
fcomp
mov
xor
js
rorl
pushl
add
cmpsb
mov
out
cli
repnz
inc
pushf
repz
pop
aaa
cmp
mov
xor
enter
mov
test
adc
sbb
fisttpll
and
add
and
mov
pop
cmp
orb
pop
xchg
mov
xor
rcl
and
lds
pop
xchg
stos
or
stc
test
jmp
inc
iret
push
xor
xchg
mov
jmp
je
xchg
shrb
lods
fwait
repz
push
add
mov
ret
xor
aad
fisubs
lods
lock
test
and
fildl
mov
inc
call
mov
pop
xchg
inc
push
xor
hlt
popa
aam
dec
movl
adc
sbb
sbb
cmpsl
cmp
movsb
movsb
ljmp
outsl
dec
shrb
sbb
push
inc
into
outsl
or
ss
push
add
jo
jle
clc
jb
dec
std
in
mov
jge
fbstp
dec
or
leave
in
outsl
loop
sbb
xchg
imul
movsb
jns
sbb
inc
sub
jg
dec
xor
js
mov
fisttps
in
adc
sub
fwait
mov
inc
shr
and
lcall
lods
enter
xor
sub
imul
hlt
jecxz
or
inc
je
idivl
fidivs
lahf
sub
or
push
xor
dec
and
in
movsl
mov
pop
cmp
shlb
push
enter
add
lods
and
sub
xchg
jae
sub
mov
jbe
or
sub
in
gs
jne
ja
and
and
test
aas
ss
shlb
daa
popa
shl
mov
ret
push
xchg
rorl
or
sbb
sbbl
cmp
lahf
mov
lock
shrl
push
adc
pop
incb
xchg
jge
fcomp
test
cmp
std
dec
test
adc
pop
pop
out
mov
jge
outsl
in
movsl
inc
or
mov
daa
cmp
pop
call
cmp
nop
inc
mov
inc
xchg
and
jne
sbb
and
push
lods
es
push
shrb
loop
cmp
into
jnp
push
dec
sbb
sbb
mov
pop
ja
xchg
cmp
dec
test
mov
fimull
cld
pop
popl
fldl
mov
fdivp
pop
xor
test
ds
fldl
lret
mov
in
arpl
mov
mov
jl
add
out
insl
stos
xorl
sbb
cmp
movsl
or
ficomps
fidivrl
xchg
ljmp
shlb
fstpl
jl
xchg
xor
inc
shrb
cmc
jnp
pusha
xchg
push
jne
mov
inc
lret
cmp
stos
sbb
movsb
mov
loopne
icebp
xchg
adc
or
mov
sub
into
mov
dec
mov
repnz
out
lds
add
fdivrs
and
push
or
mov
outsb
mov
push
jno
sbb
mov
mov
lea
inc
repnz
out
inc
adc
add
mov
sbb
pop
cmp
data16
cld
shll
pop
inc
das
fwait
enter
mov
dec
ficoml
data16
pop
mov
mov
incl
test
pop
adc
insb
repnz
jl
lods
xlat
rcrb
inc
push
loopne
mov
jge
stc
daa
cmp
scas
fistps
xor
pop
inc
stos
call
fsubrl
push
nop
mov
fsub
push
dec
push
scas
xchg
fsub
jo
outsb
roll
add
jmp
sbb
or
push
fs
scas
mov
xchg
test
fdivrs
adc
loope
orb
mov
pop
in
jae
dec
dec
jle
dec
in
cmpsl
cmc
fsubp
jae
jmp
add
fldl
push
and
in
pop
dec
lahf
int3
cmp
xchg
movsb
sahf
arpl
js
pusha
dec
pop
cmp
and
mov
adcl
push
jbe
sahf
out
icebp
fidivl
or
jp
dec
sub
aad
or
push
jp
andl
jp
jmp
jmp
in
cli
xchg
je
icebp
mov
or
subb
xchg
push
lock
out
sub
lds
aad
mov
mov
insb
popa
pop
sbb
cmc
jle
mov
cmp
sbb
lds
push
cmp
mov
adc
pop
test
or
push
clc
movsb
cmp
repnz
aad
imul
push
jns
addr16
push
or
cmpsl
mov
push
push
dec
xor
or
inc
ret
inc
ds
cmp
jo
cmp
sti
xlat
addb
sti
das
fisubrl
lock
inc
out
fnstcw
mov
inc
adc
scas
test
es
xor
lock
jge
mov
mov
cmp
mov
push
pop
jns
cmc
ljmp
in
mov
dec
or
ljmp
add
fs
subb
or
adc
idiv
dec
sbbl
pop
sbb
xchg
dec
sub
add
scas
dec
scas
mov
and
jg
shlb
xor
mov
push
adc
jns
scas
arpl
mov
andl
xchg
lret
cld
xchg
inc
popf
or
jmp
movsb
cld
shrl
fcmove
negl
jmp
loop
jbe
pop
cmpsb
lcall
and
andb
xchg
cli
pop
icebp
in
nop
sarl
arpl
xor
adc
imul
sub
mov
xchg
fsubs
mov
stos
fdivr
test
push
shr
adc
mov
mov
inc
xlat
mov
lret
inc
push
jp
cs
or
jecxz
or
call
jns
sti
gs
dec
and
inc
pop
pop
cmp
rol
jne
and
inc
push
adc
daa
sbb
ss
sub
aad
repnz
sbb
pop
mov
xchg
cli
dec
out
dec
js
sub
ljmp
adc
leave
sbb
adc
insl
test
mov
or
cmp
test
pop
mov
call
gs
cmp
arpl
mov
or
jo
cmpsb
insl
mov
mov
cmpsl
sub
sbb
sub
imul
xacquire
test
arpl
sub
rcrl
cmp
das
push
cmp
iret
dec
cmc
push
mov
shlb
rol
pmuludq
and
add
mov
pop
cmp
jae
push
push
mov
leave
leave
jle
in
mov
sub
mov
pop
pop
push
sahf
fs
dec
cmp
std
jmp
in
cmp
xchg
push
or
test
addr16
shll
inc
inc
pushf
fwait
add
and
mov
movsb
ljmp
imul
ret
lods
xchg
mov
mov
sub
sahf
popf
stos
xchg
divl
and
mov
xchg
ja
mov
stos
pop
adc
cmp
out
cs
push
cmpsb
cmp
adc
cmpsl
clc
xchg
repnz
test
adc
imul
daa
fldcw
jnp
icebp
cmp
pop
jmp
ret
or
push
pusha
cmc
jg
add
lcall
inc
sub
movb
outsl
mov
xor
adc
fbld
inc
xor
and
pop
pop
lahf
jb
mov
cmpsl
leave
jg
or
xlat
ds
iret
mov
or
add
leave
das
and
cld
fs
out
jecxz
stos
sbb
or
pop
inc
sub
int
push
mov
test
or
pushf
pop
inc
lret
lcall
movsb
push
sub
cltd
sbb
adc
dec
pop
cld
mov
mov
mov
cs
and
mov
hlt
jmp
or
flds
mov
scas
fidivl
jb
in
pop
mov
adc
xlat
outsl
mov
cmc
push
into
sub
jae
out
xchg
nop
adcb
xchg
inc
sub
inc
mov
cltd
movsl
stc
adc
cmp
hlt
and
push
faddl
icebp
mov
cwtl
sarl
adc
inc
insb
frstor
mov
jnp
mov
xchg
and
push
jnp
sarw
xchg
pop
test
mov
xchg
inc
out
xchg
insb
adc
inc
out
cld
sbb
leave
adc
iret
adc
jmp
add
outsl
out
shll
push
int
ljmp
and
sub
xor
inc
ret
mov
fstpt
in
dec
rol
test
movsl
popl
das
push
aaa
cmpsb
lods
sbb
repz
jl
nop
inc
push
mov
lret
mov
mov
mov
xchg
addl
inc
mov
sbb
lea
mov
inc
ficoms
and
lods
pop
loopne
lret
stc
cmp
push
mov
sbb
test
popa
ret
mov
sbbl
sub
jo
bnd
adc
inc
lahf
movsl
je
xchg
fsts
pop
decl
imul
adc
mov
stc
adc
adc
adc
jno
push
andl
cs
pop
sub
iret
jo
pusha
push
add
xor
jl
mov
push
pop
mov
lds
cwtl
leave
pop
inc
jp
test
cmp
pop
sub
xor
int3
pusha
lahf
aam
daa
inc
jge
inc
and
jnp
inc
mov
pop
call
push
cmp
inc
xchg
clc
jns
cmpsb
js
aas
out
push
inc
push
and
adc
fsts
mov
inc
dec
rolb
sbb
gs
and
and
mov
cs
loop
stos
out
add
sbb
lahf
lods
mov
lret
std
fstpl
mov
jle
inc
xor
popl
daa
lods
cmpsb
push
mov
inc
push
sbb
jb
jl
std
jmp
push
xlat
mov
stc
inc
ret
cmc
xchg
in
xor
mov
dec
mov
push
mov
push
enter
push
push
push
loope
in
dec
xor
cmpsl
insl
out
fnsave
push
std
or
pop
pop
sub
adc
scas
negl
inc
adc
stc
popa
pop
out
das
or
mov
sar
push
push
sbb
push
push
and
add
out
pop
add
loop
rcll
movaps
push
lahf
cmp
shl
ljmp
sbb
movsl
loope
sbb
xchg
icebp
inc
inc
cmp
int
xchg
fildll
xchg
loopne
arpl
bound
sbb
cmp
imul
popf
filds
js
jl
int
out
cwtl
aaa
mov
icebp
jmp
divb
and
fistpl
fwait
and
imul
xchg
rorl
xchg
popa
sbb
ljmp
add
ljmp
sub
sub
fcom
ret
scas
js
imul
xchg
push
and
fwait
lahf
and
int3
jle
jae
xchg
push
inc
mov
test
cmp
cmp
add
inc
or
mov
int
xchg
mov
sahf
push
int
out
xchg
jnp
test
aaa
cs
dec
dec
and
jp
sub
push
mov
jp
mov
pop
mov
aaa
add
pusha
nop
nop
rcrb
xchg
shlb
and
dec
jecxz
xchg
scas
aaa
mov
push
mov
push
pop
and
mov
lock
subl
add
out
dec
shrl
adc
jp
rcr
mov
xchg
cmpsl
lcall
add
rcrb
lret
dec
pop
mov
cmp
mov
dec
outsb
or
push
push
notl
xor
inc
mov
loopne
inc
or
jno
jo
cs
outsb
shlb
pop
incl
arpl
mov
lds
js
ja
test
push
aad
repnz
lock
mov
lcall
sbb
cmp
add
jge
or
mov
je
sbb
shrl
and
adc
loopne
xchg
bound
sub
mov
in
mov
mov
fadds
iret
push
xor
push
fidivrl
mov
cmp
sub
sti
sub
adc
jmp
pop
push
test
cltd
xchg
lds
in
ret
push
inc
mov
or
pop
sbb
mov
and
stos
mov
hlt
dec
push
ss
fidivl
js
in
sub
fildll
sub
fbld
or
xchg
or
fidivrl
getsec
xor
fiaddl
jl
inc
mov
adcl
stos
or
sarb
lret
inc
dec
addb
jno
adc
pop
fimuls
dec
push
rcrl
les
decb
dec
jbe
arpl
adc
clc
xchg
imul
dec
mov
movl
clc
add
sub
lds
inc
test
enter
cmc
and
xor
xchg
int
inc
dec
inc
leave
dec
std
clc
jl
mov
adc
xor
inc
pop
push
roll
mov
into
stos
mov
mov
int
or
repz
mov
mov
adc
sbb
lds
nop
pop
adc
insb
out
cmp
fistpl
dec
pop
xchg
orb
adc
repz
and
and
into
xchg
lds
dec
addr16
sub
push
cmp
fldl
or
mov
jbe
ds
test
push
hlt
in
push
jecxz
adc
shlb
int
xchg
xlat
or
js
imul
pop
push
sub
fistpll
cmp
das
jmp
sub
xor
mov
xor
and
setl
xchg
nop
mov
es
ficompl
inc
add
das
and
mov
jb
inc
dec
cmpsl
mov
into
int
pop
jne
mov
or
dec
lock
jl
add
je
adc
jp
and
inc
mov
or
jle
ljmp
inc
clc
stc
xor
rorl
mov
jne
dec
popa
ja
cs
jo
fstpt
lds
dec
mov
sub
jbe
inc
into
push
jno
xor
xchg
mov
inc
lods
mov
add
jge
xor
aad
insl
insb
leave
movsb
nop
sbb
push
fisubl
cmpsl
xor
sbb
inc
inc
iret
mov
xchg
pop
jno
add
dec
mov
adc
push
push
push
xchg
jne
dec
jbe
and
and
xor
aam
cmc
fstps
inc
adc
push
icebp
leave
ja
mov
mov
sub
adc
push
pop
pop
mov
mov
decb
sub
adc
xor
dec
movsb
and
stos
xor
pop
ds
call
mov
sbb
and
and
mov
mov
lret
mov
test
rcl
in
xchg
mov
pop
push
les
xchg
repnz
sub
clc
jecxz
ret
jo
cmpl
dec
ds
sbb
mov
fcomi
sub
pop
gs
or
out
call
lret
and
int3
mov
sub
imull
testb
movsb
mov
in
test
xor
add
pop
jae
or
cmpl
cmpsl
xchg
inc
aam
ss
sahf
adc
fbstp
test
push
f2xm1
lods
inc
lret
push
pop
jp
lret
pop
insb
popf
add
in
stc
dec
fmull
in
std
test
adc
cs
adc
popa
dec
inc
xchg
jge
cmp
idivl
xchg
mov
aam
jbe
mul
fdivrp
ret
out
movsl
leave
sbb
filds
cmp
jge
and
dec
in
push
push
sub
push
sti
inc
dec
xor
aad
adcl
cmp
cmp
xlat
sbb
cmp
stos
ljmp
pusha
pushl
inc
push
cltd
sti
arpl
subl
sub
sub
outsl
in
jo
push
push
mov
dec
push
cli
jae
or
sahf
sbb
shl
push
fwait
lcall
mov
dec
out
bound
push
xchg
mov
xor
xor
rcrl
pop
pop
push
aaa
mov
icebp
aaa
rcrl
mov
jb
ficoml
lds
les
loop
test
xor
imull
mov
xchg
out
das
pushf
adc
loope
call
lahf
mov
in
pop
arpl
out
pushf
outsl
cmpsl
lds
inc
xor
sbb
notl
bound
icebp
mov
enter
add
test
pop
pop
or
pop
pop
ret
jb
sub
xor
adc
outsb
test
push
mov
mov
pop
xchg
lahf
xchg
mov
dec
pop
lods
mov
xorb
mov
dec
inc
push
push
jle
mov
js
and
stc
sbb
shrl
cmc
rorl
in
icebp
push
in
mov
sub
hlt
and
dec
int3
repz
shrl
or
out
or
inc
rcrl
shrl
jns
loopne
aad
push
jg
and
dec
packuswb
rcrl
jge
and
or
insb
leave
dec
add
mov
ljmp
scas
jmp
mov
out
out
subb
push
cs
popf
lea
push
sbb
cmp
fildl
adc
xchg
xchg
xor
enter
cwtl
or
pop
mov
or
lods
hlt
pop
pop
inc
xchg
jno
cld
jae
cmpsb
movsl
daa
movsl
mov
dec
cmpsb
jbe
out
scas
out
ja
sub
mov
sbb
imul
mov
mov
sbb
or
lret
jp
sub
cli
cmpb
pusha
sbb
xor
mov
test
lods
outsb
stos
fcmovbe
movb
sete
stos
pop
movsb
cmp
xchg
sti
popa
mov
push
fisttpl
aas
adc
shr
pop
das
das
mov
xchg
jecxz
cmc
cwtl
cmp
jl
adc
mov
in
sub
into
bound
dec
or
or
xchg
mov
test
testb
out
or
add
lcall
rorl
cwtl
push
ja
cltd
sbb
dec
loope
test
cmpsb
gs
hlt
mov
inc
cmc
fidivs
jmp
flds
xchg
out
jo
loop
std
std
rcll
scas
popa
mov
loop
ret
enter
mov
add
pusha
stc
or
dec
movsb
and
or
jae
std
xchg
push
mov
pop
sbb
xor
xor
xchg
jle
rolb
push
popa
pop
adc
jg
outsl
pop
hlt
sbb
add
sbb
xchg
add
cld
adc
cmp
and
push
filds
fistps
jge
or
jl
inc
jbe
sub
sub
push
jl
and
test
inc
fisttps
lret
push
mov
je
xor
pop
pop
or
inc
mov
push
adc
sbb
cmc
pop
mov
fisttps
das
mov
cltd
je,pn
xchg
mov
xchg
jbe
xchg
int3
cmp
jnp
push
mov
aam
dec
ja
rorb
dec
addr16
sub
mov
mov
fistpl
inc
inc
mov
cmp
or
add
fsts
jbe
stos
pop
xor
aas
pusha
fsubrl
mov
lahf
movsl
xor
mov
push
mov
push
movsl
mov
stos
sbb
sbb
mov
in
sub
cmc
mov
jne
mov
pop
out
std
out
xchg
and
mov
fsubs
ret
fdivs
repnz
jmp
insl
push
imul
jnp
adc
mov
jbe
dec
adc
ret
pop
imul
popf
sub
dec
cmp
push
dec
enter
inc
scas
shl
inc
cmp
dec
xchg
cmp
imul
popa
push
rolb
xor
jns
add
mov
addb
mov
xor
repz
cmc
xor
jecxz
orl
jl
xchg
cmc
mov
pop
dec
mov
pop
std
lahf
fstl
cmp
jl,pt
jp
out
jg
in
sub
adc
pop
clc
lods
jne
adcb
nop
negl
add
jle
lock
pop
cmc
sbb
jl
mov
enter
call
aam
std
test
jecxz
aam
rclb
imul
cmp
das
fst
add
sub
cltd
jbe
jl
addr16
mov
fnsave
jmp
mov
arpl
out
push
mov
lahf
loopne
xlat
hlt
loopne
out
mov
fnstsw
dec
int
push
jns
cmp
push
test
pop
push
cmpsb
push
push
outsb
mov
xor
dec
cmp
outsb
rcll
stc
imul
mov
sahf
orb
in
lcall
xchg
movsbl
mov
idivb
int3
or
fstp
push
mov
sub
xor
and
adc
mov
mulb
mov
push
std
hlt
pop
out
ja
in
aam
mov
subl
sub
dec
and
ss
addr16
mov
xchg
xchg
in
into
push
shll
pusha
fistps
mov
lock
push
dec
fbld
mov
mov
das
in
mov
popf
outsb
adc
adc
mov
and
cmp
into
jg
loop
insw
scas
pop
out
jp
sti
loopne
push
dec
lret
add
scas
jno
fdivrs
cltd
shrb
jnp
jg
insl
mov
push
sub
shll
lcall
les
dec
pop
add
not
repz
lock
and
test
sbb
jne
stc
xchg
add
clc
loop
dec
das
xrelease
fs
mov
gs
push
dec
sub
repz
sbb
inc
popa
outsb
in
jmp
das
mov
mov
lds
pop
cli
jmp
fldl
call
cmpsl
cmp
or
dec
push
adc
fldt
and
in
mov
xchg
test
cltd
sbb
lret
mov
jp
iret
sub
xor
mov
dec
push
add
adc
jl
decl
data16
ret
push
cmp
nop
dec
movsb
push
aam
jl
lcall
mov
je
xchg
or
lea
popf
aaa
xor
jnp
push
jnp
xorb
jbe
mov
arpl
sbb
clc
mov
movsb
das
ror
push
popf
popa
and
outsl
data16
mov
ret
dec
hlt
out
pop
sub
inc
jno
mov
out
into
movsl
mov
push
jg
imul
add
sbb
push
daa
xor
in
mov
inc
push
loop
cmp
xor
repnz
mov
or
aas
push
aad
scas
jg
loope
stos
out
mov
add
clc
repnz
inc
scas
lods
jns
test
std
cs
shl
jle
outsl
insl
pop
lret
cld
sub
loope
sub
cltd
dec
rorl
mov
jge
or
or
lret
mov
mov
ljmp
xchg
jne
out
inc
and
ret
iret
sub
adc
js
adc
fcoml
mov
sub
pop
mov
cmpsb
xor
das
push
mov
out
xchg
jb
add
pop
cmc
and
dec
add
sbb
cmc
inc
jno
test
negl
sub
lcallw
dec
dec
imul
pop
xor
inc
xchg
test
in
ror
or
shll
or
dec
inc
test
and
insb
lret
push
push
push
jo
mov
lcall
adc
mov
mov
pop
out
push
pop
mov
pop
test
mov
mov
in
jge
xlat
dec
aaa
xchg
std
jp
das
and
jno
push
test
adc
cmp
sar
sub
cli
je
in
fidivrl
mov
push
cmp
repz
cmp
idivl
ds
xchg
scas
popf
sbb
int3
les
mov
popa
mov
xchg
jmp
sti
sbb
push
outsb
mov
loop
ficompl
dec
jl
dec
xor
mov
mov
pop
int
scas
cmp
push
xchg
jle
sbb
stos
cmp
pop
inc
scas
iret
rcll
addb
pop
or
ljmp
mov
popf
and
movsl
push
mov
jmp
pop
jb
xor
push
iret
andb
pushf
out
adc
jnp
push
shrb
inc
or
add
cmp
pop
cmp
dec
scas
testl
lea
inc
sbb
xor
cmpsl
push
fsubs
jp
dec
std
in
cmp
testl
testb
repz
out
adc
mov
pusha
cmp
or
sbb
icebp
shlb
xor
movsl
xchg
adc
push
and
sub
call
dec
sbb
mov
cli
mov
jge
cmpb
lcall
jne
rol
es
and
jecxz
call
push
jne
mov
lea
ss
mov
pushf
into
pop
jo
dec
or
lea
test
fs
jns
cli
jbe
and
sarl
jnp
ret
hlt
lock
scas
imul
fwait
mov
aam
mov
sub
adc
in
cmp
xorb
roll
xor
scas
sub
cmpsl
bound
cmpsl
leave
pop
aam
push
es
stos
xor
inc
rclb
inc
xchg
aaa
jl
shrb
fldl
add
sbb
es
stc
cwtl
inc
fisubrl
fcmove
or
movsb
dec
sahf
xlat
pop
xchg
jge
lahf
xchg
in
pop
leave
fsubl
xor
out
outsb
fcomps
movsb
mov
cmpsb
sbb
sbb
outsb
mov
mov
pop
push
dec
mov
push
dec
adc
dec
loope
cmc
pop
fs
scas
push
push
fildl
jbe
lea
imul
ficoms
cmp
mov
adc
push
push
rcr
sub
mov
add
jo
pop
mov
xchg
adc
rcrb
xor
add
sub
aam
lret
shrb
lods
pop
insb
loope
push
xchg
les
mov
or
xor
fiaddl
bt
jbe
gs
jp
lods
mul
jb
cs
cltd
or
cmp
imul
sbb
addl
sbb
in
push
insb
movsb
push
mov
add
int
xor
into
aaa
jnp
xorb
push
jp
dec
sub
xchg
je
rcl
mov
fiadds
push
lea
inc
jne
dec
jge
mov
aaa
loope
aaa
insb
add
pushf
mov
popa
imul
cwtl
fcomip
mov
cmp
pusha
mov
mov
hlt
clc
in
mov
xor
in
shrb
and
xchg
mov
cmp
mov
scas
sub
jmp
pusha
add
adc
xchg
movsl
das
gs
fld
push
pop
lods
iret
mov
and
adc
xchg
int3
movsb
or
cli
je
xorl
and
cmp
xor
lret
mov
jnp
cmp
stos
lret
jmp
pusha
je
inc
cmc
fisttpl
jmp
into
mov
sub
test
jo
jb
jns
out
add
scas
push
out
add
test
outsb
xor
aaa
xor
iret
pushf
ljmp
lods
in
xchg
push
in
pop
ja
add
out
xchg
incl
fisubrs
bound
out
out
mov
adc
rcrb
es
outsb
fdivrs
out
xor
and
outsl
adc
aam
dec
test
call
add
pop
sbb
into
ds
cmc
xrelease
mov
jb
add
sub
repnz
lret
sub
dec
rorb
arpl
stos
push
sub
sbb
jmp
mov
pusha
rorb
xchg
int3
mov
ja
hlt
xor
dec
add
push
mov
call
add
shll
mov
cmpl
test
mov
inc
pop
xchg
je
add
arpl
out
rcrb
in
adc
push
cmp
xchg
or
jmp
shlb
jo
or
fmull
add
int3
mov
push
mov
inc
jnp
test
repz
xchg
adc
stos
test
xor
aaa
stc
cmp
mov
std
pushf
pop
sbb
imulb
ds
jbe
push
adc
icebp
sub
inc
sti
xchg
lods
adc
inc
push
iret
lret
cmp
ret
pop
mov
movsl
arpl
lgs
into
hlt
mov
push
jmp
repz
mov
xchg
push
inc
jle
stc
jne
push
bound
xchg
jne
pop
scas
and
lcall
loope
push
mov
dec
sbb
pop
xor
fldcw
popf
mov
shlb
inc
rcr
int3
inc
mov
mov
in
pop
cmp
xor
or
loopne
pop
mov
div
push
arpl
cmp
pop
sbb
xlat
sarb
and
sbb
mov
dec
cmp
jecxz
cmp
loope
mov
sbb
xchg
jg
jns
out
fiadds
xchg
xchg
cli
aaa
or
and
inc
rcll
adc
pop
cli
clc
inc
scas
lret
push
adc
push
push
mov
daa
lods
add
sbb
xor
popf
imul
daa
iret
aad
or
xor
fs
cwtl
shrl
dec
adc
fiaddl
mov
xchg
sar
xor
sub
out
mov
jg
xchg
xchg
xor
jecxz
rcrb
jle
jp
mov
jb
clc
mov
setnp
push
dec
or
jnp
xchg
push
add
rol
xchg
sub
in
cld
in
ljmp
jns
loope
mov
add
dec
notl
lds
pop
rcrb
sahf
cmp
jge
pusha
push
shrl
test
cmp
adc
movsb
iret
mov
xchg
sbb
inc
inc
sti
sbb
mov
mov
or
pusha
inc
push
xor
jbe
jbe
lret
test
sbb
sub
ficoms
cmp
lcall
and
int3
js
std
enter
shr
pop
jbe
repnz
imul
adc
int3
mov
scas
dec
xor
inc
pop
mov
add
add
ss
ror
dec
in
cmp
adc
imul
pop
mov
sbb
fwait
into
lods
jp
lea
jle
jp
dec
jae
sub
cmp
push
add
add
xchg
pop
insl
rcr
mov
inc
push
das
sbb
aam
or
lret
nop
je
cs
or
fdivrl
popf
cwtl
in
je
filds
dec
jmp
sbb
icebp
fs
sbb
mov
pop
sarb
test
ljmp
stos
shl
mov
movsl
aam
stos
push
pusha
outsl
out
pop
shrb
addr16
sub
mov
je
out
or
or
cli
clc
stos
mov
popf
push
xchg
stos
lods
adc
xchg
mov
je
add
lret
cmp
stos
out
mov
xchg
cmp
aad
loope
cltd
cmp
popf
mov
cmp
inc
adc
mov
push
pop
cmp
test
push
loop
add
mov
inc
mov
or
pop
jnp
jmp
xor
pusha
mov
cmpsb
xchg
lods
outsb
dec
pop
pop
cmp
cmpsb
scas
mov
je
ljmp
ljmp
rcl
jns
push
imulb
dec
xchg
imul
mov
lods
or
cmp
in
jmp
push
mov
lret
lgs
cmpb
std
xchg
andl
add
clc
cmpsl
test
mov
push
xor
push
pop
cmp
nop
and
cwtl
pushf
mov
adc
or
and
pop
int
cmc
insb
fdiv
mov
inc
cmp
or
scas
imul
popa
nop
dec
add
sub
push
pop
adc
popa
hlt
fistl
jge
adc
mov
stc
outsb
xlat
cltd
inc
push
ljmp
je
cmp
enter
lods
imull
jmp
insb
cmc
rcrb
pop
mov
push
dec
stos
jg
adc
or
cmpsb
mov
stos
and
pop
mov
and
jecxz
sbb
sbb
faddl
jg
xchg
jne
fldt
loope
jns
add
ret
dec
jne
inc
mov
or
ja
les
popa
es
or
inc
outsb
cmpsb
xor
cmpsl
pop
or
mov
lds
cmp
jmp
stos
fxam
lret
fistpl
mov
cmp
out
jb
aad
repnz
lods
test
mov
outsl
pop
aas
imul
fidivrl
lret
mov
pop
mov
inc
out
pop
xchg
add
xorl
mov
gs
pop
out
cmp
notb
cmp
lock
fcompl
enter
std
lret
mov
int
add
or
cmp
dec
loope
cmp
push
xchg
loopne
xchg
mov
loop
out
lds
cwtl
pusha
xor
mov
imul
pop
push
xchg
out
rolb
xor
pop
sbb
out
loopne
pop
cli
cmp
and
push
ret
and
sarb
cmpl
or
push
cmp
scas
in
shlb
add
repnz
and
dec
int3
inc
sarb
push
or
scas
xchg
adc
pop
jo
xchg
test
push
rcl
and
xchg
lahf
in
icebp
les
mov
sbb
or
ljmp
adc
repnz
push
sub
sub
cmp
in
out
seto
ret
fsts
repz
repz
or
mov
je
xlat
les
mov
or
sub
mov
inc
sbb
sbb
bound
mov
jo
sbb
and
cmp
cmp
dec
scas
xor
mov
in
sbb
adc
js
filds
mov
iret
sub
lds
out
jne
clc
cwtl
mov
sbb
sbb
mov
lea
dec
pop
or
cmp
lret
out
push
lea
xchg
stc
inc
sbb
inc
aas
push
mov
in
in
and
inc
scas
rorb
popa
gs
pop
ret
ljmp
test
ss
call
or
xor
pop
les
jg
addb
and
cmp
cld
jnp
dec
repnz
mov
sbb
je
adc
dec
fs
cmp
dec
jg
in
mov
mov
mov
push
xchg
lea
fs
mov
mov
stos
mov
gs
rol
aas
aam
jecxz
mov
dec
lahf
and
push
bound
out
cld
les
push
int
push
mov
pop
loopne
mov
insb
shll
ror
jp
add
jge
or
pop
notb
sub
or
aam
pop
sti
pop
and
lea
pop
lds
push
shlb
lret
in
mov
jle
mov
jle
mov
hlt
aam
outsl
hlt
scas
sbb
call
dec
jmp
jae,pt
pop
dec
and
cmp
cld
pop
and
xchg
pop
mov
out
mov
imul
jmp
fcom
fcmove
lea
daa
and
inc
pop
push
les
sbb
lcall
pop
outsb
and
in
aas
in
push
mov
pop
pop
adcl
or
inc
and
and
leave
sarl
dec
lret
jo
mov
adc
lret
ret
arpl
jbe
mov
ficomps
or
push
mov
ljmp
ss
sub
adc
mov
sbb
imul
cs
mov
or
pop
cwtl
inc
sarl
xor
sahf
loop
stc
pop
jb
scas
dec
cld
lods
les
sbb
dec
pop
lods
roll
jecxz
or
cld
mov
or
mov
jp
or
jg
mov
mov
xchg
mov
outsb
cmp
test
test
pop
xor
mov
cli
lahf
loop
orb
fiaddl
mov
xor
stc
addr16
adc
sbb
lods
data16
pop
mov
lock
scas
je
dec
jo
shlb
subl
pusha
mov
jmp
mov
pop
sbb
jnp
nop
js
cmp
cmpsl
das
pop
adc
mov
data16
inc
pop
mov
aam
sbb
ss
repnz
lret
lret
bnd
mov
xchg
fstl
outsb
jne
dec
fsubrs
faddl
sti
std
add
jl
subl
add
sbb
test
adc
imul
cmpsl
push
adc
jo
fs
addr16
scas
dec
shlb
into
arpl
adc
xchg
out
xchg
cmp
jne
cld
aas
les
xchg
loope
into
ret
xchg
or
mov
or
icebp
sub
sbb
sub
push
mov
arpl
dec
loopne
jp
jae
cmp
xor
push
cmpsl
loop
aam
ds
jg
gs
pop
adc
jg
lock
mov
stos
ss
or
dec
sbb
nop
clc
push
adc
inc
and
icebp
jns
add
jne
sub
mov
pop
stos
movsb
push
mov
std
sbb
push
sbbl
daa
inc
dec
push
cs
inc
push
mov
mov
arpl
movsb
fidivrl
mov
insb
jecxz
das
mov
icebp
sbb
inc
dec
mov
add
push
jge
fiaddl
add
push
out
insl
fisttps
or
add
aam
add
adc
jns
lret
push
leave
mov
lret
pushf
stos
cld
outsl
cmpsl
adc
xor
jbe
or
mov
sbb
mov
lahf
mov
popa
fcmovu
push
add
mov
inc
in
pop
lods
out
cs
cmp
mov
and
sub
loop
not
fcomp
push
pop
fildll
mov
mov
imul
and
add
jnp
subb
cli
and
rorb
movsl
sub
pop
mov
add
addr16
xchg
stos
jle
xor
in
jecxz
popf
loop
arpl
loope
dec
xchg
in
inc
lahf
sbb
popa
aam
jns
xorl
sbbb
jge
pop
movsl
mov
mov
push
push
clc
addr16
sub
fadd
mov
xchg
mov
das
push
neg
sub
call
xchg
loop
movsb
pushf
xlat
mov
pop
jle
inc
mov
adc
loop
sbb
pop
xchg
xorl
mov
cmp
dec
xchg
jb
xchg
fld
andb
xor
pushf
les
idivl
push
mov
addr16
push
push
aad
nop
cltd
inc
insb
sub
jmp
ljmp
call
push
and
arpl
dec
push
xchg
push
push
into
enter
jge
int3
push
push
es
mov
loop
or
xor
in
mov
mov
and
cmpsl
outsl
mov
inc
jl,pt
mov
adc
adc
add
rolb
int
movsl
push
out
push
jnp
ja
test
mov
popf
xlat
les
or
mov
fisttps
test
push
mov
mov
ja
fldenv
movsl
push
loop
out
xchg
cmp
jne
lret
xchg
mov
es
aas
fbstp
or
fmull
gs
sbb
cmpsl
or
mov
mov
push
int
push
mov
xchg
daa
cmp
jbe
adc
cld
imul
sti
es
jae
scas
dec
pop
xchg
cs
sarb
mov
xorb
movsb
out
lds
imul
and
sbb
ja
jno
pushf
cmpsb
jae
rorl
xchg
xchg
mov
inc
push
loopne
inc
push
xchg
movsl
mov
int3
jnp
test
in
mov
ss
jb
xor
dec
inc
xchg
mov
stos
arpl
xchg
sub
cltd
pop
arpl
push
and
xchg
and
stos
ja
out
out
std
jecxz
mov
or
popf
jecxz
orl
fidivs
add
jns
fdivp
pop
ja
imull
ret
xor
outsl
xchg
pop
andb
hlt
mov
push
jl
movsl
pop
je
xchg
dec
push
xchg
mov
imul
sbb
push
call
mov
pop
mov
nop
pop
aad
mov
add
and
rorb
adc
lods
outsb
int3
xor
mov
in
fwait
jbe
pop
iret
fwait
jg
sub
andl
sub
lret
loopne
lock
jmp
xchg
ja
adc
aaa
pop
in
mov
jle
ret
push
call
pop
sbb
cmpsl
daa
add
xchg
arpl
in
mov
mov
fistl
mov
xchg
dec
fdivrl
out
rclb
loop
pop
ret
notb
pop
out
lods
and
inc
add
inc
pop
inc
rep
fiaddl
sub
xor
repnz
in
add
leave
adc
daa
js
fisttpl
mov
pop
add
mov
sbb
pop
mov
sub
icebp
pop
xchg
or
pusha
push
mov
movsl
rcl
out
divb
add
push
lock
int
shrl
cmpsl
js
pop
movswl
push
ds
repz
stos
mov
stc
loopne
rclb
add
daa
movsl
rolb
leave
sub
add
xor
loop
mov
mov
xor
out
sub
pushf
pop
xchg
aaa
push
and
pop
xor
lahf
jp
xor
push
jmp
push
out
pop
jo
or
jl
test
test
push
xchg
inc
movsl
lcall
mov
mov
sbb
sub
and
pop
jno
mov
push
mov
xchg
enter
cmp
inc
ja
mov
cltd
sbb
iret
xchg
xor
jo
dec
mov
ror
mov
jb
add
enter
test
js
adc
or
fwait
cli
cmc
adc
testl
pop
je
pop
roll
xor
scas
sbb
cmp
shlb
mov
mov
xor
fbld
repz
pop
js
dec
ficomps
inc
andps
and
scas
add
pop
adcl
mov
test
movsb
or
addr16
lcall
sub
inc
js
aam
jnp
mov
cltd
push
or
mov
mov
add
mov
popf
adc
sub
test
leave
jo
xor
push
lret
in
jle
mov
lret
lcall
push
fwait
sub
sub
cmp
push
mov
out
jne
or
lcall
or
sbbb
mov
js
retw
adc
jecxz
and
dec
push
test
xor
scas
cwtl
adc
xor
popa
push
in
mov
mov
xchg
push
xchg
mov
adc
mov
mov
xor
xor
inc
or
imul
jmp
sti
pop
notb
int
imul
loope
add
mov
xor
sti
iret
dec
clc
jo
push
add
cmp
sub
ret
mov
int
mov
sub
mov
mov
bound
xchg
or
inc
leave
ret
sbb
cmp
js
dec
adc
jnp
fstpl
adc
clc
and
movsb
test
hlt
fs
mov
subb
sti
fmuls
lahf
push
push
mov
xchg
add
jl
xor
jl
int3
scas
jb
adc
fimuls
aas
inc
cmpsb
aaa
inc
cmp
push
xchg
je
in
and
mov
faddl
push
int
push
fs
jge
cmp
pop
icebp
or
negl
repz
add
xchg
scas
in
test
mov
ss
xchg
cli
ss
scas
lret
scas
insl
sti
jnp
lock
int3
push
lahf
inc
push
inc
out
cmp
cmp
dec
xchg
sub
inc
scas
push
std
lgs
cmp
sbb
push
icebp
sqrtps
jmp
sbb
push
push
cs
mov
mov
push
push
cmp
ficompl
adc
out
jae
shll
xchg
sbb
sub
mov
xchg
jns
ds
outsb
cmp
les
icebp
pop
inc
inc
mov
out
xchg
ret
mov
sbb
aam
push
cmp
bound
cmc
in
repnz
shlb
mov
or
cmpsb
adc
ja
inc
sub
mov
and
in
popa
cmovno
faddl
mov
cmpb
pop
xchg
into
or
dec
push
js
jmp
pop
adcb
mov
xchg
sti
adc
push
pop
sbb
inc
xor
shlb
mov
jge
dec
xchg
push
pop
jl
cmpl
insb
or
imull
dec
pop
xchg
scas
dec
iret
inc
add
push
add
mov
stc
or
addl
cmp
push
enter
lds
fsub
inc
cmc
into
addr16
lods
cli
add
fldenv
dec
imul
add
in
addb
mov
mov
cltd
jp
cli
xor
std
negb
call
jmp
arpl
mov
adc
insb
nop
inc
xchg
xor
dec
insl
pop
and
mov
in
int
sti
dec
sub
mov
adc
insl
adc
add
or
push
mov
add
gs
mov
cmpsb
imul
xor
adcl
shll
ss
xor
mov
mov
add
stc
fbstp
mov
inc
cmp
jb
mov
ja
scas
aas
iret
icebp
std
lcall
add
js
inc
push
cmp
push
pop
in
addb
or
xchg
jmp
jecxz
and
push
mov
push
stc
loopne
pop
sub
mov
lea
int3
ret
std
cmpsb
dec
dec
in
into
adc
or
addr16
scas
out
add
mov
pop
cmp
ljmp
mov
lds
test
jl
add
jl
cli
sahf
mov
out
xor
dec
or
mov
mov
ret
mov
loopne
pusha
mov
test
pop
ret
jne
xor
aaa
mov
dec
xchg
das
test
cmp
ret
mov
rcrb
mov
dec
mov
jp
nop
nop
lahf
mov
and
lods
dec
aad
mov
out
pop
imul
dec
xchg
xchg
xor
pop
inc
clc
test
inc
andl
push
movsl
sbb
jmp
mov
ja
inc
xchg
sub
test
out
notb
lret
out
xchg
mov
add
jg
xchg
arpl
or
pop
cmp
iret
out
out
fildl
mov
ficomps
dec
inc
jmp
sbb
cltd
pop
aam
cmc
shlb
sbb
pop
loop
std
out
sbb
jp
mov
test
or
xchg
or
mov
inc
pop
sahf
pop
adc
xchg
dec
std
rorl
add
ja
push
add
jns
dec
mov
pop
inc
repnz
flds
jno
mov
mov
dec
aaa
ss
xorl
and
jl
mov
cmc
inc
leave
xor
imul
jp
sub
or
jmp
into
mov
add
addl
out
leave
mov
xchg
enter
sub
dec
icebp
or
es
pop
cs
ret
jo
fisttpll
loope
test
sti
aaa
pop
rcl
scas
jb
pop
leave
ljmp
scas
mov
cmc
fucomip
pushf
fwait
ds
cmp
mov
popf
dec
jge
jle
in
jmp
addr16
push
mov
or
ds
test
call
xchg
add
pop
push
adc
mov
pushf
xor
lods
cmpsl
adc
iret
ljmp
dec
sub
movsb
or
inc
daa
cmpsb
pop
and
lcall
loopne
fsts
dec
xchg
sbb
push
ret
subb
and
lock
in
or
popf
fiadds
andl
inc
fmul
fstpt
inc
inc
inc
inc
jno
enter
les
cmpsl
stc
mov
sub
push
xor
rolb
mov
flds
mov
dec
dec
mov
in
loop
push
fs
inc
pop
or
mov
icebp
cmpb
push
xor
xorb
cmp
jge
push
mov
sub
push
sub
lret
loop
aam
push
add
sbb
frstor
lods
sub
cmp
mov
xchg
push
lret
and
stos
cmp
das
mov
inc
or
es
cmp
popf
mov
fstps
ja
bound
xor
inc
cmpsb
stc
xor
fidivrl
leave
scas
rcrb
movsb
and
lahf
pop
sbb
push
fidivl
movsl
popf
cld
and
ljmp
mov
jecxz
fcoml
sti
and
push
je
xor
mov
jo
push
sub
cmpsb
out
clc
dec
loopne
mov
cmp
iret
leave
cmc
add
imul
sbb
jg
and
or
and
out
mov
mov
add
pop
mov
loope
std
pusha
jnp
mov
sbb
jmp
je
xchg
xor
scas
rorb
adc
sbb
hlt
xchg
fwait
mov
bound
bound
mov
rcrb
push
or
dec
mov
push
xchg
add
lods
repnz
jno
ljmp
mov
ja
lds
cmp
xor
sub
jge
hlt
adc
repnz
ret
inc
leave
les
mov
jnp
out
in
repz
stos
mov
cmp
mov
pop
aaa
lds
scas
fcmovbe
clc
ret
sbb
loop
mov
jnp
fs
jns
repz
xchg
jo
pop
rcll
inc
lahf
xor
dec
mov
xchg
mov
and
inc
mull
idivb
push
push
add
out
add
clc
out
fbstp
ficomps
pusha
xchg
ret
sbb
dec
arpl
sarl
outsl
out
add
scas
mov
push
cmp
cld
out
pop
or
in
lds
mov
pop
fs
pushf
clc
std
setae
in
bound
push
out
xchg
mov
push
inc
test
test
push
lods
dec
lret
xor
je
aaa
popf
sbb
sub
mov
hlt
xchg
dec
shlb
adc
sbb
ljmp
dec
sti
inc
subl
push
je
mov
enter
movsl
mov
dec
ja
adc
push
xor
inc
adc
popf
lcall
jg
and
push
icebp
test
mov
xor
mov
dec
sbb
mov
push
in
and
mov
dec
sbb
mov
and
sub
jp
in
sbb
stos
or
loop
testb
popf
xlat
lret
and
pop
ret
dec
add
mov
je
mov
dec
call
xor
mov
add
xchg
dec
shll
lahf
pusha
mov
jns
mov
imul
jbe
bnd
push
xor
dec
mov
pop
scas
insl
inc
push
test
cwtl
cld
sub
addr16
mov
mov
push
movsb
cs
rcrb
lret
enter
xor
mov
xchg
xchg
adc
imul
test
cmp
stos
and
popa
and
fdivl
aas
daa
packsswb
pop
cli
cwtl
and
shlb
xor
dec
cmp
push
fnstcw
push
and
mov
lret
pop
ja
pop
mov
add
ret
jb
lcall
cmp
int
jp
inc
lahf
aas
icebp
and
test
scas
lahf
push
scas
fistpll
shlb
inc
sbb
out
mov
test
dec
imul
push
bnd
mov
xchg
mov
clc
int3
out
mov
mov
rcrb
push
jmp
mov
stos
les
dec
xchg
fwait
mov
cmp
mov
xchg
es
ficoms
sbb
mov
xlat
xor
push
ds
mov
mov
pop
addb
mull
leave
mov
ljmp
sub
mull
jle
add
pop
mov
xchg
std
adc
loop
and
xchg
or
fwait
rcll
cmp
int3
push
push
cmp
in
xor
int3
loope
pop
cmpsb
movb
or
repz
mov
sub
xlat
add
push
xchg
xlat
mov
incl
movsl
dec
inc
bound
repz
stc
ljmp
outsl
push
mov
icebp
cmpsb
dec
sub
test
lcall
xor
cmp
inc
aaa
in
fcmovb
mov
push
dec
and
sbb
outsl
jg
or
aaa
dec
dec
jne
movl
jg
dec
push
dec
xchg
mov
pop
sbb
aas
add
imul
mov
lcall
ret
shl
into
mov
dec
lods
dec
aas
add
add
arpl
xchg
gs
cmc
call
ja
stc
mov
movsb
or
js
cmc
clc
fiadds
xor
jp
loope
test
pop
movsb
sub
mov
push
inc
pop
mov
xchg
or
mov
es
test
movsl
lret
cld
xchg
lcall
xchg
dec
dec
xor
std
mov
sbb
cmpsl
jle
fcoml
pop
push
outsl
rclb
jb
jne
push
mov
xchg
push
xor
push
sub
fld
push
mov
mov
lods
scas
xor
outsb
movsl
call
xchg
cs
fstpt
mov
adc
inc
inc
mov
shlb
scas
xlat
mov
lea
mov
stos
adc
cltd
out
adc
mov
testb
cmpsl
sti
jnp
arpl
std
int
dec
int3
repnz
fcom
fs
outsb
movb
pop
or
andb
sub
inc
mov
and
int3
add
add
pop
sub
imul
test
cmp
lahf
jne
sub
push
xchg
push
mov
mov
mov
mov
arpl
push
pop
js
jp
push
mov
push
data16
pop
outsb
test
clc
lods
sti
and
push
cmp
xlat
push
in
inc
push
inc
ss
add
xor
xchg
fsubl
xor
and
call
dec
imul
pop
dec
and
dec
std
mov
xor
ret
clc
lret
aam
cld
test
int
scas
out
jb
bswap
jb
in
fmul
cmp
cmp
push
push
dec
inc
cwtl
mov
push
push
cmp
and
gs
mov
out
cmp
adc
lret
jb
div
icebp
or
insl
xorl
stos
nop
mov
mov
dec
push
pop
lret
mov
imul
ds
gs
je
sub
add
pop
jne
mov
push
and
cwtl
jp
lret
push
pop
mov
cwtl
pminub
adc
cmpsb
lret
fs
movsb
imul
add
incl
adc
out
mov
loopne
orb
fldt
xchg
push
push
push
mov
add
sub
cmp
jp
add
pop
mov
stos
notb
mov
aam
mov
mov
dec
outsb
in
cli
pop
data16
xor
jp
xor
popa
cltd
fdivl
or
dec
sarl
push
xchg
imul
mov
fmull
mov
in
add
xchg
les
sub
push
outsb
pop
dec
mov
lods
inc
push
xchg
xchg
testl
je
repz
and
inc
cmc
mov
xchg
addr16
mov
xor
fs
test
inc
adc
pop
pop
or
test
imul
adc
fucomi
andl
es
xor
aaa
mov
mov
leave
push
cmc
sub
cwtl
orl
test
fstps
xor
sahf
and
test
rclb
inc
stc
es
shrb
jp
xchg
xor
push
out
mov
orb
mov
out
sahf
adc
out
ja
add
xor
icebp
push
in
dec
cmpsb
scas
cmpsl
pop
js
xor
mov
addb
adc
mov
cmp
int3
cmpsl
dec
mov
sub
cmp
jae
inc
jmp
pop
push
lret
jnp
cmpb
mov
in
imul
sub
in
int3
sbb
scas
push
in
mov
in
mov
sbb
jne
lret
push
mov
xor
imul
movsb
push
jae
or
or
pop
xrelease
mov
pop
mov
dec
and
scas
lcall
inc
nop
aas
sbb
adc
push
cmp
popf
sub
dec
ljmp
insl
xchg
jge
shll
movsb
pop
clc
insb
outsl
lcall
lahf
inc
stos
mov
ret
insb
or
fisubl
rclb
cmp
inc
aas
sbb
lds
sbb
imul
mov
add
fs
cmpsl
push
push
xor
outsb
inc
push
hlt
or
dec
enter
outsl
in
dec
pop
push
jg
xchg
scas
cld
andl
mov
sahf
fsub
mov
mov
mov
sbb
cmpsb
cmp
pusha
add
mov
mov
mov
pop
cmp
popa
fmuls
rclb
arpl
add
jae
out
test
ds
stc
add
jecxz
or
add
jbe
mov
mov
mov
or
pop
fldt
lods
sbb
pop
mov
iret
test
xchg
shlb
sbb
and
mov
ja
adc
xchg
shrl
fnop
mov
fisubrl
cmp
cmpsl
scas
cwtl
pop
repnz
or
and
xchg
jl
ljmp
imul
jle
mov
adc
xchg
push
insb
enter
stc
sbb
mov
mov
xor
arpl
or
mov
scas
imul
sub
out
jmp
out
mov
je
xor
aad
pop
fidivrl
jge
push
add
pop
cmp
stos
imul
dec
pop
repz
push
lret
sub
iret
pop
sub
in
arpl
enter
cmp
jg
stos
fnstsw
sbb
fwait
add
out
push
jno
mov
cltd
fimuls
mov
jecxz
test
inc
cmpsb
sbb
dec
push
jge
pop
aad
ss
add
cld
iret
loop
shrb
sub
jg
loopne
mov
mov
and
fsubrs
test
scas
inc
ret
fs
mov
push
icebp
addr16
pop
enter
sub
add
insl
loope
shlb
ror
inc
popf
add
mov
shl
pop
mov
xchg
pop
popa
jmp
inc
push
pop
mov
jg
inc
and
cs
lcall
sub
xchg
cmp
dec
cmp
and
mov
push
call
push
fwait
inc
hlt
xchg
sbb
in
mov
xchg
clc
inc
or
mov
mull
inc
pop
subl
dec
cmp
mov
mov
xor
loop
popa
data16
int3
fisubl
mov
idivb
psllw
fwait
pop
fidivrl
mov
fwait
mov
test
push
addb
mov
lahf
ja
popf
mov
sbb
out
jb
fists
mov
rclb
push
cmp
cmp
adc
xor
je
jl
aam
push
sub
cld
sbb
lret
pop
dec
lret
cmp
pop
outsb
icebp
mov
xor
pop
fs
jge
xchg
xchg
mov
es
cld
pusha
insl
inc
iret
lret
push
fistpl
sbb
dec
test
push
cld
add
sub
call
addr16
and
jp
mov
ret
shll
xchg
cld
sahf
ret
xorl
les
fildl
insl
lahf
mov
inc
fs
mov
aas
rclb
imul
add
xor
inc
adc
or
add
xor
push
mov
push
lcall
fcmovnbe
xorb
lret
mov
add
dec
out
fsubrl
jne
cmp
test
ret
xchg
xchg
mov
aam
jo
xor
gs
inc
or
dec
mov
push
sbb
sub
bound
imul
cmp
jnp
mov
mov
push
dec
out
xchg
add
mov
leave
pusha
cmp
orb
jg
xchg
push
shrl
lock
jb
and
inc
inc
jecxz
in
movsl
scas
leave
cltd
decl
or
out
jl
jbe
dec
cwtl
shlb
iret
mov
sbb
mov
enter
inc
sbb
sbb
dec
lret
cmp
pushf
cmc
arpl
sbb
popf
and
or
lea
and
add
mov
test
out
jns
fcmovnu
cs
cmp
clc
pushf
mov
dec
imul
mov
pop
sti
dec
jo
mov
mov
fadds
inc
out
inc
lods
movsb
cltd
lret
fwait
xchg
out
cli
xchg
adc
rclb
pop
cmpsl
sub
sbb
pusha
inc
jo
out
xchg
outsl
push
scas
out
stc
cli
jns
out
pop
jne
push
das
jle
ret
aas
jmp
in
lds
push
scas
add
mov
test
movsb
push
call
jbe
in
mov
xor
imul
adc
cld
push
fucomi
and
sub
shll
cmp
mov
stos
daa
insl
cmp
out
icebp
dec
xor
sbb
jno
lods
pop
rcr
sub
jle
xlat
xchg
fisttpl
dec
rorl
mov
cli
pop
cli
fbstp
and
stc
les
int
jae
cmp
sub
pop
repnz
xor
daa
pop
fsts
cmp
das
fwait
jp
sub
push
fldt
jns
dec
jmp
in
pop
orb
mov
or
or
and
sbb
push
hlt
popf
icebp
or
gs
jg
aam
mov
mov
scas
repz
mov
fs
iret
jge
inc
sbb
aas
push
mov
ja
mov
add
into
dec
push
lcall
push
and
mov
sahf
lods
mov
cmp
outsb
fisubrs
jae
add
push
sbb
insl
bound
in
les
imul
pop
test
sbb
mov
pop
aam
fucomi
sub
xchg
test
ds
les
movsb
mov
nop
addb
jno
xor
movsb
dec
mov
stos
gs
dec
neg
ret
aad
movsb
popf
dec
xor
jns
inc
shrb
cmpsb
sub
mov
pop
icebp
jo
push
and
stos
insb
lahf
mov
dec
test
mov
call
cs
mov
inc
pop
or
aaa
loop
xchg
lcall
leave
xor
scas
inc
jo
sub
jae
xchg
or
push
imul
jne
dec
xor
mov
mov
sub
popa
sti
test
mov
xchg
aas
out
sub
lods
decl
fildl
sub
aas
inc
push
aam
fcmovu
test
jnp
dec
cmp
stos
sbb
jne
rolb
jno
aas
cmpsb
or
loop
jge
push
mov
cmpsb
lods
std
scas
mov
sub
std
xlat
xchg
les
das
mov
cmpsb
shrl
xor
addr16
stc
sbb
std
push
and
lods
jg
lock
adc
jmp
push
cwtl
ds
mov
push
leave
jne
in
adc
pop
sbb
in
divl
xchg
add
mov
mov
inc
rol
mov
xor
scas
mov
int3
and
imull
push
pop
xor
mov
int3
cs
test
stc
xor
stc
ljmp
aam
jmp
mov
enter
mov
movb
and
jge
adcb
xorl
outsl
dec
dec
aam
lahf
addr16
sub
outsb
ja
out
repz
cmpsl
lret
sbb
jecxz
pop
mov
cmp
sbbl
mov
add
aad
int3
pop
dec
mov
ror
dec
xorb
adc
adc
test
outsb
mov
mov
mov
xor
xchg
pushf
repnz
mov
sbbl
jle
cmp
outsl
mov
rcrl
int
mov
jge
xchg
pop
fmulp
xchg
loope
sahf
ja
fcompl
xor
sbbl
dec
and
cmpsb
das
movsb
sar
pop
cwtl
pop
movsl
and
in
sub
sbbl
lret
push
push
in
jp
pop
inc
jl
cwtl
in
out
bswap
add
shr
sbb
push
pop
adc
ret
sub
ljmp
mov
shl
add
or
lods
mov
xor
push
mov
and
pop
in
sbb
adc
out
push
aam
outsl
cltd
gs
jbe
xchg
cmp
lahf
in
sbbl
inc
pushf
rcrl
pop
jb
and
fsubrp
xchg
ss
div
pop
fimull
xchg
jmp
loop
mov
rcl
jo
cmpsl
aam
mov
cld
pop
mov
push
aaa
outsb
sbb
and
fucomi
jmp
jns
mov
pop
push
dec
adc
mov
xchg
xor
push
cld
loope
push
das
test
jno
jge
and
sti
cld
push
jp
dec
rolb
mov
movzwl
inc
pop
mov
cmp
pop
daa
lret
sub
cwtl
stos
dec
rorl
loopne
iret
mov
push
scas
and
jae
or
add
jp
cmp
cmp
mov
add
or
sahf
ret
sbb
repnz
les
mov
sub
popf
and
sbb
push
mov
pop
xor
xor
out
push
int
and
in
ret
subl
ja
or
sub
and
xchg
in
mov
or
mov
xchg
push
test
add
stc
imul
cli
js
dec
pop
mov
lods
add
movsb
inc
mov
cmp
adc
cmp
sarb
cwtl
or
dec
pop
xor
in
cmp
cmp
push
adc
idivl
idivl
dec
js
in
ret
jl
ds
rcr
popa
ja
inc
mov
xor
pop
sbb
adc
outsl
gs
sbb
in
mov
loop
repnz
push
popl
popf
in
jno
outsb
imul
js
in
fstpt
or
push
repz
cwtl
hlt
nop
cmp
mov
std
sbb
push
sbb
mov
cmp
out
jnp
cld
jl
mull
or
and
out
popf
clc
movsb
pop
inc
sub
icebp
mov
stc
pop
dec
fs
xchg
loope
mov
push
cltd
dec
adc
push
adc
mov
inc
pusha
je
lods
pop
add
in
adc
mov
sbb
and
cmc
push
jne
sub
pop
cmp
mov
clc
cmp
adc
xchg
sbb
lock
lahf
xor
add
cmp
pop
inc
adc
jns
imul
lret
cmp
jb
xchg
mov
jne
ficoms
add
jl
std
into
adc
lds
sysret
mov
fidivl
xchg
inc
hlt
gs
adc
mov
dec
popw
push
out
or
adc
xor
xor
mov
xor
mov
mov
mov
lahf
cmc
adc
or
mov
or
adc
push
aaa
mov
sub
pop
in
cmp
pop
scas
inc
pop
pop
dec
and
jno,pn
cmp
cmpsb
sbb
imul
mov
mov
cld
aam
cmpsb
out
faddl
xor
dec
push
int3
jg
sti
shll
or
stc
pop
cmpsl
jno
mov
pop
push
outsl
mov
rcrb
push
ret
int3
xchg
mov
mov
dec
pop
xchg
aam
mul
mov
cmp
sub
sub
adc
sti
cmp
aas
cmp
mov
mov
sbb
ds
aaa
xchg
loop
pmuludq
mov
inc
add
mov
dec
ret
xchg
sbb
mov
jge
jle
imul
xchg
push
adc
into
pop
shll
lret
imul
aas
add
int3
cmp
gs
push
out
imul
sub
pop
dec
idivl
jl
out
push
js
dec
inc
dec
mov
pop
mov
add
jo
daa
inc
xor
and
decb
mov
in
out
rorb
daa
jnp
out
add
clc
inc
rolb
pop
js
mov
dec
negb
pop
das
xorb
inc
fcmovbe
mov
push
je
inc
mov
pop
int
cld
lcall
and
test
xchg
inc
xor
xchg
cmp
nop
inc
fisubs
getsec
lea
rcrl
insb
sub
add
sarb
cmp
icebp
ja
lods
xchg
add
sub
dec
inc
cwtl
sub
xor
mov
int
mov
push
jae
lods
dec
sub
icebp
jl
fildl
mov
lods
mov
xchg
outsl
movups
enter
daa
mov
mov
pop
cmpsl
mov
mov
sub
imul
jle
and
pop
mov
test
into
push
pop
mov
push
inc
iret
pop
or
xchg
stos
jno,pt
jns
cmp
imul
mov
adc
addb
mov
aaa
out
mov
cmp
test
fwait
mov
sub
aam
dec
jg
in
push
sbb
or
push
sbb
shlb
sbb
add
iret
push
adc
mov
popa
cli
dec
rolb
add
xchg
and
inc
push
popa
cmpsb
test
xor
add
add
pushf
or
lret
jb
cmp
inc
bnd
mov
jo
push
fdivrp
sbb
stos
inc
movsb
mov
lret
and
clc
cmp
xchg
sub
popa
sahf
ret
push
les
std
add
jb
sub
push
test
test
push
mov
or
rorb
sub
ljmpw
cltd
jne
inc
xor
flds
in
inc
xchg
or
push
add
push
lods
xchg
roll
and
stos
int3
xchg
scas
cmpsb
add
loopne
xorl
scas
ljmp
es
daa
rcll
xchg
sbb
pop
lock
les
mov
push
push
aad
pop
pop
and
jns
and
mov
jmp
push
aad
cmc
scas
lock
stc
pop
shr
xor
cwtl
xor
mov
or
xchg
adc
stos
sbb
adc
xor
cmp
ljmp
incl
mov
or
push
mov
adc
test
nop
cltd
or
addb
jecxz
jnp
addb
add
iret
mov
fdivr
test
les
in
out
cmp
or
nop
ret
push
mov
cmp
lret
arpl
scas
cmp
out
in
pop
scas
aaa
mov
arpl
int3
hlt
loopne
inc
int3
push
or
pop
pop
ljmp
addr16
outsb
jle
push
das
mov
clc
popf
lock
push
sub
stc
push
cld
adc
sbb
adc
push
addl
inc
dec
fwait
repnz
and
xor
das
inc
add
sbb
nop
and
inc
movsb
xchg
jle
push
dec
sti
insb
pushf
shlb
dec
cld
decb
mov
pop
mov
in
bound
inc
adc
xor
jmp
mov
sub
js
pop
lcall
fdivr
lods
popa
cmc
gs
jo
push
in
push
cmpsl
and
adc
imul
in
movsl
mov
xor
and
mov
lahf
adc
cmp
cltd
popf
incb
imul
or
jecxz
shll
scas
inc
fdivrl
or
mov
mov
gs
cmp
cmpb
inc
clc
or
mov
mov
cmp
sub
pop
vmovmskpd
rcll
push
lods
mov
jne
jns
dec
inc
jae
and
cli
sub
cmp
inc
xor
adc
push
lock
int
stos
cltd
add
sub
xor
leave
push
fists
in
mov
sub
daa
or
xchg
addb
pop
addb
out
nop
ljmp
decb
dec
dec
dec
insl
lds
cmp
popf
xchg
ret
push
inc
fldl
xchg
or
popf
or
push
lock
cmp
ss
jmp
dec
sub
add
sbb
stos
es
aam
or
clc
inc
pop
mov
xor
mov
in
std
cmc
cld
lcall
sub
xlat
inc
and
fwait
insb
arpl
icebp
out
xchg
xlat
in
lahf
mov
jge
movsb
ret
push
adc
sarb
adc
jo
js
out
xor
cmpsb
pop
outsl
dec
add
popa
rcll
jmp
into
aaa
cltd
decb
aam
addr16
out
adc
movsb
pop
lahf
jg
mov
mov
pop
cmp
test
hlt
loope
test
adc
pop
push
arpl
mov
xchg
dec
dec
in
dec
hlt
xlat
lods
sti
shl
pop
inc
addr16
les
outsl
pop
cmp
push
xlat
sarl
pop
jmp
dec
scas
mov
cvtps2pd
pop
mov
pop
mov
pop
pop
sub
ds
and
push
cli
cmp
and
test
sub
out
jno
jle
cld
and
sbb
and
adc
or
in
cs
hlt
adc
repz
adc
add
cmp
jge
ret
sti
dec
clc
fstp
or
sti
jne
jb
dec
fistl
daa
xor
pop
dec
mov
add
nop
sbb
jns
mov
insl
fs
jp
jmp
mov
aad
test
sbb
adc
sbb
dec
scas
fistps
fstps
jns
xchg
mov
fcoml
loope
cmp
ja
cwtl
inc
jo
add
rolb
inc
jge
cmp
imul
or
cltd
jg
std
lods
cs
std
test
add
inc
fdivr
push
mov
add
sbb
popa
in
imul
add
clc
xchg
scas
inc
pusha
mov
mov
and
std
jnp
jae
mov
lret
pop
fldenv
mov
nop
xchg
outsb
js
data16
or
pop
push
mov
adc
mov
inc
mov
fisttps
push
lret
add
insb
push
call
inc
lret
fxam
je
xchg
addr16
jge
mov
or
loope
js
add
fsubrl
sbb
mov
aas
fstp
and
adc
shlb
nop
dec
mov
movsb
loop
popf
pop
es
sbb
add
scas
cli
mov
xchg
movsl
cmp
jmp
repnz
ljmp
outsb
fcmovb
lret
sub
pushf
cmp
jg
mov
ljmp
push
mov
jecxz
sub
out
hlt
sahf
or
adc
or
enter
cmp
inc
xchg
das
xchg
or
mov
add
sbb
rcll
cmpsb
jns
test
pop
hlt
sbb
fwait
in
inc
test
and
push
mov
adc
int3
or
xor
imul
leave
aad
bound
cmp
lea
enter
sbb
pop
outsb
shrl
sub
cmp
sub
pop
mov
xor
jae
inc
mov
adc
xor
out
or
and
pop
jg
nop
cli
dec
pop
or
mov
ljmp
mov
mov
shll
adc
lods
loopne
jne
jae
pushf
dec
mov
dec
inc
lea
mov
es
jns
faddl
and
sub
cmpsb
jecxz
aaa
cmpsl
out
test
stos
adcl
jp
jge
cmpsl
out
divl
addb
stos
in
shll
or
xchg
loop
jecxz
mov
leave
int3
ret
mov
mov
pop
sbb
mov
addr16
cwtl
sbb
ds
sub
xor
decl
mull
inc
dec
push
mov
mov
cwtl
insl
repnz
mov
and
add
add
sbb
scas
sbbl
mov
xlat
xchg
pop
and
and
popa
push
inc
sbb
jns
cmpsl
lahf
cmp
mov
cltd
push
cmp
sbb
or
fdivrs
sub
aaa
loopne
pop
sti
pushf
jmp
sub
inc
pop
cwtl
mov
outsb
push
jecxz
sub
out
fwait
movsl
inc
jbe
and
mov
dec
and
mov
xor
enter
outsl
shll
add
or
dec
scas
mov
iret
cmp
xor
or
outsb
mov
pop
mov
add
leave
dec
jle
xor
mov
int
outsl
or
cmp
pop
jecxz
xchg
sbb
push
mov
fdivrl
jmp
mov
repz
lea
jecxz
mov
mov
pusha
scas
push
ds
mov
adc
add
lcall
lcall
add
mov
movsl
mov
jg
pusha
dec
xor
ficomps
insl
mov
jae
notb
xchg
xchg
mov
mov
lahf
pop
jne
mov
insb
jl
cmc
cmp
inc
ss
and
in
repz
xor
shll
pop
mov
jecxz
push
ret
inc
ss
cmc
xchg
pop
pop
lea
push
pop
leave
stc
movsb
xchg
jns
fwait
imul
mov
pushl
int3
bound
pop
xchg
mov
popf
xchg
mov
ja
pop
jae
add
xchg
pop
test
xor
sarl
js
leave
push
xchg
testl
pop
sbb
xor
subl
das
mov
pop
xchg
inc
enter
loop
mov
stc
ret
cmp
je
mov
imul
loope
gs
sbb
mov
pop
sti
add
imul
mov
lcall
push
nop
adc
pop
or
mov
test
pop
sbb
xor
data16
imul
loope
jmp
pop
leave
rclb
ja
mov
sub
and
pop
mov
daa
push
aaa
ss
mov
jae
loope
xchg
push
push
loop
js
sbb
rcr
add
rcl
pop
sbb
and
sub
xchg
mov
xchg
pushl
mov
test
dec
out
imul
int3
pop
dec
mov
and
add
mov
ret
sbb
lds
push
inc
xor
push
mov
xchg
push
dec
pop
clc
jl
call
clc
test
test
xchg
faddp
in
lods
out
mov
adc
push
inc
push
cmp
dec
mov
repz
ds
push
roll
mov
mov
popf
cltd
cs
sbbl
ffree
loopne
push
lods
fldcw
cmp
fdivl
sub
and
lret
repz
fadd
insl
xor
mov
int3
je
or
cmp
fcoml
push
pop
lret
mov
jge
sbb
pusha
fwait
sub
mov
dec
add
sub
incl
adc
jno
sub
push
int3
cwtl
gs
cs
cmp
bound
ljmp
sbb
or
sub
push
dec
xor
xor
insb
push
das
hlt
sbb
mov
imul
daa
pop
cli
sbb
adc
cmp
mov
xor
mov
push
pop
or
jecxz
xor
cmpsl
dec
xorb
bound
and
xchg
sub
pop
cmc
and
mov
cmp
sahf
pop
cmc
or
popa
stos
aam
cs
int3
add
aam
mov
add
pop
xchg
shlb
inc
test
xchg
movsl
mov
sahf
fwait
adc
pop
xor
enter
cmpsl
and
shll
xor
mov
out
jno
push
loope
and
and
mov
lea
mov
jg
lods
loop
mov
int3
jle
push
std
outsb
adc
je
push
jl
negl
stc
popf
push
cmpb
cltd
cltd
dec
rcl
movsb
out
pop
jne
imul
arpl
cmp
bound
dec
popf
cmp
jp
add
testl
sbb
inc
sbb
aas
stos
das
fists
pop
shll
xchg
cmp
cmp
in
jnp
xor
cltd
ret
in
rcll
cli
testl
adc
push
movsb
gs
sub
std
clc
push
mov
fidivrs
or
ret
xchg
ljmp
and
repnz
cmpsl
scas
das
into
sbb
outsl
jl
sub
pop
mov
sti
test
popa
insl
out
sbb
jp
les
ss
push
push
inc
pusha
int3
or
cmc
sar
and
inc
ret
out
mov
adc
mov
movsl
bound
call
pop
cld
or
pop
stos
inc
xor
jne
fnstsw
scas
xlat
mov
sbb
clc
adc
test
icebp
mov
bound
test
movsl
sub
add
fcomps
inc
shl
shll
sub
repnz
loop
lds
push
inc
mov
sub
popf
inc
fdivl
adc
lret
frstor
jns
xchg
cmp
dec
sbb
dec
xchg
bound
push
xor
mov
test
notl
dec
xchg
or
mov
push
das
cmc
fdivrs
cld
jl
orl
mov
add
cmp
mov
push
out
divb
loopne
mov
inc
cmp
repz
flds
jmp
ret
cmc
push
mov
xor
mov
dec
xchg
shll
sbb
dec
inc
out
sub
cmp
mov
fisttps
mov
lahf
xchg
les
jecxz
cs
mov
icebp
out
xchg
push
mov
xchg
push
cmpb
xchg
or
mov
call
adc
in
jle
lds
scas
das
mov
test
dec
mov
ret
out
cmp
nop
lods
pop
push
fcomps
sbb
icebp
leave
out
fmuls
jp
inc
mov
mov
ret
loop
add
mov
cmp
test
or
pop
xchg
jnp
mov
pop
xchg
xlat
in
movsb
enter
push
pusha
in
int3
xchg
jmp
daa
ret
maskmovq
testl
push
es
dec
jb
xchg
sbb
roll
dec
mov
in
lods
mov
sbb
adcl
cmp
iret
test
dec
push
insb
repnz
xchg
adc
jae
inc
mov
rorl
fistpll
rorl
incl
push
repnz
mov
ret
mov
cmp
dec
jnp
jmp
icebp
ret
rclb
loope
insb
jne
mov
pushf
popa
in
and
out
gs
fcomps
shrl
inc
xchg
addl
or
shll
std
lock
lea
and
jp
pop
js
data16
aaa
cmp
pusha
pushf
aam
mov
dec
push
movsl
add
mov
pop
mov
out
xchg
jne
ret
adc
cli
out
push
xchg
movb
nop
mov
test
jp
sbb
fcmovb
dec
mov
fdivl
aaa
xchg
inc
fcoms
mov
sti
je
xor
jle
xchg
iret
mov
scas
into
movsl
int3
test
xchg
lret
jecxz
aad
rcll
mov
pop
mov
sub
or
sub
or
sub
jo
movsb
mov
pop
xchg
jge
adc
jne
pop
push
xchg
repnz
jp
lahf
inc
enter
add
jb
jl
lret
xor
out
bnd
and
mov
adc
stos
icebp
fstpt
loopne
inc
movsb
mov
xor
dec
lahf
aaa
aam
mov
outsl
or
dec
dec
push
inc
or
pop
cs
out
fcmovu
iret
pop
int3
jl
adc
or
or
mov
push
insb
cmpsl
xchg
repnz
popf
push
lods
leave
fnstenv
dec
fwait
pop
inc
scas
out
dec
xor
add
add
in
lret
hlt
cwtl
ficoms
lret
jle
mov
insl
dec
dec
or
mov
bound
mov
adc
sbb
xor
std
cmp
jmp
mov
xlat
cmpsl
mov
push
jge
cmp
mov
mov
or
jg
cmpsl
xor
sub
jo
paddusw
push
stos
mov
xor
and
loop
push
lods
aaa
sbb
shlb
repz
push
pushf
xchg
sbb
addl
es
mov
add
and
addr16
imul
test
dec
lahf
punpcklwd
inc
and
mov
xchg
sbb
add
lds
mov
je
pop
and
test
psubsb
iret
inc
pop
xchg
bound
pop
jns
aad
out
or
add
inc
roll
loop
mov
xlat
jo
pop
push
pop
sbb
adc
mov
cmp
test
insb
and
cltd
daa
xchg
and
rorb
je
orb
push
push
insb
push
outsb
mov
pushf
pop
outsb
nop
movsbl
mov
dec
pop
push
jo
in
mov
idiv
jnp
cmp
les
jo
rcll
cmc
push
imul
fstpt
lock
popf
push
pusha
or
mov
push
std
xchg
lret
push
xor
test
imul
xor
out
jl
popf
xchg
loope
pop
xchg
push
mov
lock
xor
add
out
insb
lret
jge
test
jg
insb
fcompp
add
outsb
and
mov
in
mov
pushl
mov
mov
lods
nop
and
mov
int3
adc
pop
fs
outsl
rolb
jecxz
cmpsl
adc
out
repnz
sti
dec
sbb
fdivs
dec
mov
mov
pop
lods
sub
loope
jmp
loop
or
shrb
icebp
sub
cmp
mov
out
dec
arpl
and
push
xor
in
dec
inc
xor
adc
fsubrl
out
adc
cmp
subl
push
or
xlat
shll
outsl
jl
shlb
pushf
bound
mov
andb
dec
insl
or
lahf
and
pop
lcall
and
imulb
aam
rcll
xorb
stos
pop
cld
pop
inc
enter
mov
nop
push
repz
fdivrl
and
ja
imul
pop
and
sti
bound
xchg
mov
fstp
jae
cmp
pop
jne
lahf
sbb
inc
int
out
sub
sub
pop
push
out
or
aaa
insl
pop
mov
rol
cmp
lods
ljmp
ljmp
int
lcall
stos
or
adc
out
xor
push
adc
push
in
mov
sbb
sbb
addr16
push
js
add
mov
ret
add
dec
ret
test
push
jl
jle
stos
push
adc
mov
cmc
out
ss
push
inc
lahf
inc
sbb
xchg
sub
lock
sahf
frstor
cli
in
fistpll
pop
je
xor
mov
mov
and
sub
and
cmp
imul
add
pop
mov
out
or
mov
imul
lods
mov
adc
xor
push
cmpsl
fdiv
add
push
out
mov
in
loop
popf
icebp
add
lock
mov
sbb
mov
pop
mov
mov
addb
xchg
jne
cld
xchg
not
xor
sub
pushf
lock
repnz
mov
mov
push
xchg
pop
or
and
and
mov
and
inc
mov
movsl
adcl
jecxz
pop
and
xor
jp
mov
popa
das
add
movsl
mov
fmull
imul
outsb
dec
repz
pop
in
pop
pop
and
pop
pushf
sahf
sub
pop
shrl
mov
lahf
repnz
iret
xchg
adc
and
pop
ss
xchg
pusha
leave
sub
mov
cmpb
pop
cmp
fildll
inc
xchg
inc
aas
dec
in
inc
sbb
mov
subl
push
lret
rolb
mov
aam
push
push
out
inc
sbb
aaa
enter
dec
ljmp
xchg
dec
lret
arpl
or
cmp
pop
cmp
pop
int
cmp
sbb
test
cwtl
add
pop
adc
sahf
addr16
popf
scas
mov
add
mov
jge
sub
push
jge
rcrb
aad
aad
int3
outsl
and
xchg
cs
push
pop
nop
jecxz
imul
into
cli
mov
lock
pop
stos
adc
xchg
sbb
xor
sub
stos
pop
lahf
je
sbb
add
loop
ds
dec
add
sahf
pushl
mov
lret
das
add
jg
jecxz
pop
sbb
pushf
mov
enter
pop
out
sub
aad
lcall
jns
das
pop
ret
push
jmp
xchg
inc
das
test
enter
movsb
inc
iret
inc
cmc
and
mov
int3
loopne
adc
in
inc
pop
shlb
fadds
cld
hlt
arpl
lret
jb
pop
mov
xchg
shll
lret
xor
cltd
clc
mov
in
add
andl
pop
ret
mov
jle
xor
out
adc
fisubs
fwait
stc
fs
pop
jg
mov
stos
mov
out
insb
cltd
mov
shll
arpl
jno
call
loop
mov
pop
in
nop
fwait
adcl
ja
xor
out
mov
mov
adc
sahf
aad
out
inc
pusha
lea
ss
cmp
rorb
mov
clc
loopne
mov
push
jg
pop
std
or
jbe
movsl
ja
arpl
mov
pop
arpl
push
shrb
aaa
lods
subb
pop
pcmpeqd
cli
jae
mov
repz
insl
adc
pop
mov
jns
inc
sbb
mov
ret
lea
cmp
xchg
lret
add
stos
pushf
sbb
inc
inc
in
sbb
xorb
pop
pop
mov
mov
cmc
lea
lahf
pushf
cmp
pop
jb
shr
bound
xor
mov
cmp
roll
jg
ret
ret
fnstsw
mov
call
iret
lea
pop
sti
out
xchg
fisttps
adc
mov
arpl
xchg
cmp
lods
mov
push
andb
jno
adc
fstpt
incb
mov
fidivrl
sahf
addr16
sbb
sbb
out
xor
inc
xorl
cmp
pop
arpl
mov
mov
xchg
lods
dec
repz
inc
push
ljmp
jb
xorl
xor
or
push
mov
jp
cmp
or
mov
cmpsb
mov
push
xor
lret
pop
in
int
xor
scas
xchg
adc
and
mov
sets
iret
nop
dec
decb
cli
inc
add
popa
pusha
and
xchg
adc
sahf
jecxz
js
or
xchg
repnz
fs
test
fiadds
mov
je
push
pop
mov
loope
outsl
push
hlt
dec
and
sub
in
pop
out
sti
in
negl
mov
shrb
lea
aas
push
pushf
or
imul
sub
and
jp
mov
pop
pop
insl
mov
mov
jnp
mov
imul
dec
out
adc
mov
push
mov
mov
jle
or
xor
dec
pop
adc
aad
js
add
push
push
test
xor
push
shl
mov
int3
xchg
push
mov
cwtl
pop
mov
sbb
add
in
xorb
aas
sub
pop
push
call
adc
xchg
sahf
pop
inc
out
cmpsb
xchg
lea
in
sti
add
aaa
mov
pop
lcall
test
movsl
sbb
loope
mov
add
sub
push
mov
mov
pop
push
or
cld
lock
scas
test
adc
sbb
push
xor
jl
mov
sub
enter
in
add
mov
sbb
lret
cli
je
lea
inc
and
and
fcmovbe
gs
add
cwtl
jo
test
sbb
aaa
jecxz
addr16
cld
or
mov
insl
mov
mov
cmp
fidivl
inc
movsb
mov
int3
cmp
add
pusha
mulb
popa
test
xlat
dec
fwait
mov
cmp
js
lret
test
inc
out
push
push
lock
cmp
jle
js
lds
push
icebp
sbb
fwait
ret
xchg
pop
push
movq
stos
loop
ja
arpl
jecxz
adc
jnp
mov
dec
pushf
fsubrl
fnstenv
fndisi(8087
cwtl
mov
xor
nop
mov
inc
insl
sub
gs
sub
sbb
hlt
inc
into
jns
js
xchg
pop
adc
icebp
pop
out
rcl
add
and
xchg
mov
xor
jle
lock
ljmp
loope
xchg
mov
data16
mov
and
aad
dec
daa
stc
fidivl
mov
lea
jno
js
call
in
in
aad
jmp
xor
ss
jge
gs
sub
notb
mov
movsb
adc
inc
push
inc
add
shll
cmp
in
cmp
lods
cltd
pop
in
jl
inc
lea
mov
cmp
ficomps
mov
daa
fadds
icebp
jns
fstpt
xlat
push
dec
into
mov
iret
mov
mov
push
pop
jl
xchg
sub
mov
sub
pop
ss
push
mov
inc
inc
int3
sub
push
mov
gs
xchg
data16
loopne
mov
bound
cld
cmp
nop
arpl
popf
loopne
pop
outsb
mov
lds
mov
pop
adc
xor
cmp
cltd
fmuls
sbb
pop
push
aam
in
dec
mov
push
pop
lea
sbbl
dec
jbe
jno
adc
aad
add
seta
fsub
pop
add
sbb
imul
rolb
add
idivb
inc
or
call
xor
fwait
dec
aam
insb
jg
das
adc
dec
bound
cltd
enter
ror
sub
dec
or
orb
jl
xchg
jmp
push
push
sbb
xchg
daa
shrb
shl
mov
xor
popf
xchg
pop
lahf
lret
ljmp
int
int
xchg
sbb
inc
pop
sarl
stos
jmp
sbb
js
cmp
daa
sbbb
sbb
mulb
movsb
out
lods
pushf
sub
fidivrl
mov
mov
outsl
lahf
out
cmp
stos
pop
sub
orb
and
mov
imul
mov
pop
imul
sub
jecxz
xor
xchg
push
outsl
es
sub
ret
adc
pop
clc
pop
pusha
mov
aaa
xchg
push
adc
mov
mov
jns
mov
mov
xchg
xor
inc
sbb
pop
out
into
arpl
out
lret
or
xchg
add
mov
add
lock
mov
sbb
dec
push
jae
jns
fsub
inc
push
pop
push
call
adc
stos
testl
adc
pop
enter
adc
loopne
outsl
popa
push
imul
incb
cmp
dec
inc
mov
cmp
push
mov
dec
or
xor
idiv
jns
mov
es
dec
ds
mov
mov
xchg
in
aad
ljmp
fcoms
test
dec
stc
cwtl
push
divb
sbb
fmull
in
int
sahf
push
mov
iret
mov
mov
or
scas
in
cmp
jmp
in
dec
mov
test
leave
dec
mov
repnz
jnp
or
mov
or
xchg
cmp
sbb
sti
push
mov
aad
scas
arpl
test
and
mov
das
int
mov
pop
ljmp
and
into
inc
or
ret
lock
mov
pop
jp
xor
adc
data16
xchg
inc
dec
jne
jge
push
dec
mov
cmp
or
mov
jp
inc
dec
pop
ss
xchg
pushf
loopne
out
fcmove
sbb
or
or
inc
mov
mov
cltd
ret
xchg
push
shll
aaa
notb
adc
jp
xor
cmp
lea
mov
mov
xor
add
add
adc
xor
jecxz
mov
sub
pop
add
dec
leave
ljmp
or
jns
subl
jb
les
mov
inc
adc
test
jb
rorl
jne
jbe
shlb
sbb
mov
movsb
test
adc
add
push
cmp
pop
aam
push
mov
neg
mov
test
dec
or
push
out
cmc
xorb
jmp
mulb
faddl
mov
pop
add
xor
stos
fidivs
outsl
rorl
pop
cs
adc
adcb
ljmp
mov
clc
add
jp
mov
insb
jno
mov
lods
in
mov
xchg
jns
mov
pusha
adc
add
arpl
pushf
add
pop
xor
or
pop
inc
addl
mov
test
mov
pop
out
dec
and
adc
int3
orl
pop
cs
add
jns
inc
movsb
cmpsb
cmpb
jecxz
cwtl
enter
pop
out
adc
cs
push
fsubrl
inc
mov
xchg
cmpsb
mov
cmp
in
ja
jl
rcl
fidivrs
popf
dec
outsl
cmp
pop
jp
sbb
xor
cli
test
sbb
or
sub
and
push
push
dec
xchg
mov
push
fnstenv
ds
pusha
test
lock
pop
cmp
mov
insb
ds
mov
cmp
shlb
mov
mov
dec
movsb
clc
adc
shll
sahf
sub
add
ret
shll
jno
cwtl
loope
pop
xchg
inc
xor
iret
nop
mov
lcall
xchg
pop
into
mov
add
sub
sbb
dec
lea
cwtl
jl
push
dec
mov
clc
jno
pop
fcmovne
adc
sbb
fwait
xchg
mov
add
lcall
jnp
fwait
sahf
mov
pop
es
jbe
add
ljmp
sbb
sarl
loopne
scas
adc
les
push
inc
mov
sti
enter
sub
and
in
or
out
into
xchg
or
mov
cmp
repz
test
mov
ffreep
and
xchg
aas
cmp
sbb
push
mov
xchg
pop
aas
outsl
inc
test
mov
jg
or
push
or
sub
fwait
in
dec
es
sbb
pusha
mov
jp
mov
pop
leave
xor
lret
das
mov
insl
fimuls
shrl
add
mov
inc
xchg
add
cmp
in
imul
adc
loop
xchg
inc
dec
cmc
xor
mov
xor
inc
test
loopne
ficompl
and
and
js
call
dec
aaa
cmp
push
shl
jae
sti
out
movsl
cmp
iret
sub
mov
xchg
push
xlat
divl
repnz
dec
lock
lods
test
popf
sbb
cmp
in
rcrb
addb
test
jecxz
cs
data16
mov
loope
fnsave
scas
add
xor
dec
test
test
adc
lcall
jg
xchg
ficoml
dec
repnz
out
jae
inc
xlat
push
aaa
jp
push
jl
inc
popa
or
in
notb
xor
leave
out
lcall
and
mov
add
dec
push
ds
es
mov
cwtl
push
and
lods
inc
fsubr
inc
lea
jle
xor
loopne
pop
lods
les
cmp
fwait
mov
xchg
xor
iret
loopne
sar
adc
xchg
or
mov
pop
mov
cwtl
jne
adc
mov
ret
and
dec
and
aad
jge
and
sub
out
sbb
mov
enter
das
jg
push
xor
mov
fwait
mov
and
fcmovnb
mov
pop
imulb
in
rorb
add
xorb
push
sub
pop
adc
push
jnp
loopne
movsl
mov
out
dec
sub
test
fdivs
arpl
lret
outsl
add
pop
and
ljmp
jge
pop
dec
pop
outsl
negl
insb
or
pop
icebp
pop
or
mov
dec
dec
jmp
cmpsb
aad
and
ljmp
mov
and
jae
pop
jne
dec
insb
mov
mov
mov
xchg
sbb
fcomps
lds
js
daa
rcll
inc
push
add
clc
adc
push
inc
xchg
jbe
or
lods
cli
pop
mov
mov
lahf
mov
lcall
cmc
lods
repz
pop
xchg
scas
iret
out
pop
mov
movsl
loope
and
and
push
scas
test
push
or
stc
pop
aas
and
jb
or
inc
lcall
popf
push
xchg
in
pushl
imul
stos
xchg
xchg
add
aad
cmc
stos
xor
ficompl
push
or
mov
inc
mov
jp
imul
mov
cmp
add
clc
lret
xchg
dec
std
jnp
loop
cmp
jmp
or
fs
fcomps
dec
hlt
hlt
aam
movsl
jns
int3
lds
add
pop
sbb
sbb
scas
gs
dec
nop
inc
orl
sahf
gs
push
out
test
cmpsb
mov
fld
cltd
jns
xchg
mov
cs
repnz
sbb
mov
and
or
mov
xor
test
sti
ljmp
fisttpll
sti
sbb
or
mov
pop
dec
and
mov
call
out
in
fistps
mov
adc
rol
pop
dec
sub
xchg
push
inc
push
ffree
fs
subl
jbe
popf
daa
hlt
pop
notb
ljmp
stc
mov
rcll
nop
lea
inc
sbb
loope
flds
into
pop
sub
sbb
jne
xor
add
dec
jo
loope
fldenv
pop
pop
out
sbb
or
mov
or
dec
jl
and
adc
push
cmc
dec
and
into
or
mov
out
cmp
mov
add
imul
bound
pop
xchg
popf
pop
movsl
push
insl
fdivs
arpl
shrb
loopne
inc
add
push
stos
hlt
in
adc
stos
or
adc
pop
or
add
pop
setns
sbb
popl
test
sub
enter
in
pop
fxch
and
xchg
or
sub
dec
inc
ret
mov
xor
jge
ret
cmp
div
jmp
mov
xor
add
inc
cmc
xchg
sbb
shl
fs
jno
or
xor
bound
sbb
popf
lods
cli
jp
sub
test
daa
ret
aad
inc
lds
enter
xchg
pop
pop
fdiv
imul
daa
movsb
pop
mov
mov
or
cmp
add
inc
dec
std
or
cmc
pushf
and
std
push
and
in
jmp
mov
imul
mov
sbb
cwtl
xchg
mov
pop
jnp
sbb
fdivrp
jmp
ficomps
mov
mov
rolb
or
lahf
stc
and
mov
adc
fists
or
dec
in
ja
out
sbb
loopne
mov
xlat
in
mov
sub
int3
cwtl
lret
and
fstpl
outsl
pop
in
or
and
imul
jnp
bound
add
out
inc
cltd
shr
pop
mov
shll
mov
mov
pop
enter
test
cmp
mov
mov
inc
jle
add
xchg
cmp
shrl
subb
mov
dec
add
xor
test
and
dec
sbb
adc
xlat
fdiv
stos
test
pop
insb
pop
imul
out
mov
hlt
lods
add
pop
das
repz
add
sbb
in
jl
add
out
out
add
dec
aam
inc
jbe
push
ljmp
sti
movsb
mov
jle
rsm
iret
pop
inc
sub
inc
call
rcr
xor
movsb
pop
jnp
mov
dec
xchg
unpcklps
iret
cmp
pop
fwait
dec
or
jl
fildll
fcoms
outsl
push
popa
lods
addb
add
out
fbstp
xor
adc
xchg
xor
cmp
mov
xor
ret
mov
sub
fisubrs
sahf
decl
add
daa
inc
push
hlt
mov
cwtl
lods
push
push
push
inc
cmp
sti
std
dec
xor
push
mov
push
dec
jno
cmp
sahf
cs
lock
dec
mov
cmp
cltd
dec
orl
xor
pop
ds
lahf
test
js
mov
jmp
lcall
inc
faddp
imul
filds
pop
int3
into
inc
sbb
pop
add
mov
in
aaa
repz
jecxz
andl
bound
test
leave
popa
and
and
or
push
leave
shlb
and
jnp
orb
push
inc
loope
mov
adc
adc
jbe
pop
cli
adc
outsl
das
jne
lcall
dec
pop
in
das
pop
mov
add
jp
adc
xchg
xor
bound
dec
pop
jne
jge
mov
lahf
insl
popa
inc
cmc
mov
dec
sbb
jne
jns
fists
ss
bnd
or
cmc
sub
xor
fimuls
negl
pop
cmp
push
add
mov
mov
hlt
pop
cmp
push
cld
outsb
jmp
les
push
mov
push
cmp
repnz
xchg
and
pop
push
push
inc
loopne
push
stos
ss
pmaxsw
mov
imul
dec
mov
or
mov
mov
jle
shlb
add
pop
sar
ds
shlb
loope
add
sbb
and
popa
roll
into
je
xor
xchg
mov
loop
lahf
in
push
xor
test
repz
into
out
icebp
out
jo
cmp
js
add
cmp
sarb
mov
adc
add
in
in
clc
stos
je
je
jb
in
and
in
js
and
lcall
push
ficompl
and
andb
sub
push
mov
popf
cld
mov
fldenv
pop
sub
daa
ret
dec
mov
cltd
pop
fbstp
adc
fsubl
lret
lock
sbb
hlt
pusha
xchg
into
push
cmp
pop
rep
cmpsl
inc
leave
mov
and
push
sbb
add
out
jbe
stos
mov
mov
push
nop
rcrl
jnp
aas
pusha
or
dec
shlb
adc
neg
inc
sub
aaa
push
jge
rol
push
stos
jmp
xchg
imul
add
inc
out
jmp
js
stc
cltd
repnz
and
push
lods
xor
push
inc
mov
popa
iret
xor
jnp
inc
mov
daa
repnz
les
sbb
cli
mov
cmpsb
mov
stos
sarb
lea
cmp
test
fldl
xor
aam
int3
pop
int
in
push
lahf
cs
je
cmpsl
jmp
inc
fnstsw
push
push
cwtl
icebp
popa
inc
xor
std
dec
ja
add
push
lods
mov
xor
daa
mov
mov
stc
jne
xor
aaa
push
jp
call
xchg
fdivr
jno
lods
mov
fidivrl
out
out
popa
gs
cmpl
mov
jecxz
subb
ret
inc
sub
mov
enter
inc
xlat
jbe
xchg
es
loop
sbb
ljmp
inc
test
inc
ret
push
cmp
jg
in
inc
jge
nop
mov
out
cmp
mov
push
xor
push
das
jmp
cmpsb
sbb
xor
xchg
addr16
mov
add
ret
imul
jle
pop
push
mov
jns
loope
dec
sbb
jo
xchg
dec
in
inc
in
or
ljmp
rcrb
movl
push
mov
or
sub
sub
push
imul
add
adc
xor
div
xor
pop
cwtl
xor
lcall
les
inc
jbe
mov
sbb
jmp
repz
lods
jns
add
mov
rcrb
js
fwait
cmp
and
sub
adc
sub
into
push
addr16
cmp
repz
loope
pop
hlt
fistpl
jnp
test
pop
movsb
jno
jns
xor
xchg
popf
sub
addr16
popa
push
subl
xlat
lcall
out
pusha
ret
push
pop
inc
dec
js
jne
inc
mov
sarb
add
fldl
adc
mov
mov
insb
js
fidivs
lock
push
test
test
push
push
jecxz
add
mov
and
out
insl
scas
outsl
xchg
push
add
inc
movsl
cmp
ljmp
jecxz
sti
xor
sbb
mov
sub
out
mov
mov
orb
imulb
bound
repnz
mov
or
push
in
rcrl
mov
or
in
movsl
daa
rorb
rolb
dec
das
leave
sti
cmc
fsubl
mov
jle
add
cmp
addr16
xor
lret
push
icebp
stc
adc
inc
js
mov
pop
iret
scas
mov
jnp
aaa
add
xor
into
xor
popa
fnstenv
cmp
popa
fs
xchg
mov
inc
mov
scas
mov
je
sub
or
imul
dec
inc
ljmp
dec
jns
mov
and
mov
add
xchg
lahf
jno
mov
addl
xchg
test
add
jge
std
mov
bound
xchg
gs
fcomps
sub
sub
add
mov
or
subl
jp
dec
cmpsb
out
cmp
rcrb
lcall
test
and
sarb
ds
stos
inc
addb
cmp
aas
xor
add
sub
nop
mull
xlat
sbbb
push
je
jb
pop
pop
push
jl
int
cmp
mov
add
imul
movsb
jno
repnz
jae
inc
cmpsb
insl
loopne
sahf
outsl
add
mov
mov
or
or
xor
jl
lea
mov
pop
scas
ficompl
sbb
pop
daa
jp
or
push
aad
aam
adc
lea
jne
shlb
push
xchg
das
mov
fadds
or
and
out
xchg
ja
js
mov
lahf
sbb
popa
jno
mov
xchg
xchg
and
inc
into
pop
push
xor
in
inc
lret
orl
jge
push
cmp
out
add
ret
fisubrs
push
mov
mov
dec
xchg
out
or
stc
cmpsl
add
shr
icebp
xchg
cmp
or
sbb
adc
cmp
mov
inc
call
mov
ret
iret
add
push
fwait
mov
push
adc
shr
mov
aaa
and
mov
jge
push
mov
in
jns
lcall
jae
lods
push
stos
pop
mov
ja
rolb
sti
iret
loope
out
jae
loope
xchg
inc
and
lret
loop
out
out
jo
repz
mov
ja
stos
sub
mov
adc
or
lret
and
stos
ss
cltd
call
push
lcall
push
aad
inc
mov
in
jno
push
std
dec
jmp
or
imul
and
pop
jle
lret
sbb
outsb
nop
leave
xchg
sbb
cmpsl
cmp
sub
mov
leave
sub
xor
and
xchg
imul
adc
imul
xor
inc
mov
jbe
ficoml
lock
jno
or
pop
or
xor
or
lcall
xlat
xchg
xchg
lock
pop
xchg
ljmp
test
je
jg
imul
jl
mov
push
dec
outsl
xchg
jo
and
aaa
or
pop
mov
loope
shl
mov
outsb
sbb
lock
pop
push
mov
lock
cmpsb
cwtl
sbb
jp
mov
xchg
sub
xchg
xchg
pop
push
rcl
sub
ret
das
inc
push
test
icebp
int
and
addb
loope
xchg
push
pop
scas
imul
jge
add
inc
xchg
subl
int3
cmp
lret
xchg
lods
lock
mov
xchg
add
pusha
lea
hlt
out
lock
xor
mov
mov
inc
add
lcall
lret
popa
arpl
mov
cwtl
dec
stc
mov
mov
pushf
repnz
clc
and
push
mov
lea
mov
pop
cli
enter
cmp
shll
dec
push
in
adc
adc
rolb
push
dec
es
dec
mov
mov
jp
lods
cmp
testl
add
fwait
aaa
jns
fstl
sub
sbb
xlat
xor
test
mov
mov
int3
cmp
lods
inc
push
dec
data16
outsl
and
adc
aas
adc
fs
mov
std
in
xchg
imulb
out
add
inc
int
cmp
sub
cmp
push
popa
add
inc
mov
scas
xor
loope
in
mov
test
shl
inc
xchg
adc
cmp
pslld
push
cmpsl
insl
xor
inc
sbb
daa
in
sub
test
lcall
orl
xchg
or
sahf
outsl
outsb
aad
sbb
lods
hlt
ror
enter
jg
inc
int
and
mov
pop
pop
addr16
ret
pop
jo
shl
add
cmp
out
push
mov
adc
shll
xor
icebp
pop
jg
mov
sti
inc
das
mov
pop
enter
stos
dec
or
and
shrb
adc
jecxz
addb
negl
lcall
sbb
out
fsubl
mov
inc
cmp
test
mov
jge
test
mov
mov
testl
inc
or
mov
sub
pop
or
inc
fwait
imul
jle
movsb
daa
shlb
pop
jae
adc
xchg
popf
or
ret
stos
dec
call
xor
mov
inc
in
arpl
stc
or
enter
dec
mov
push
aas
test
add
xchg
repnz
loop
inc
sbb
mov
mov
mov
mov
out
adc
adc
sub
push
and
test
add
rcl
movsl
fs
scas
mov
adc
imulb
push
fwait
sbb
vpmuldq
clc
xor
adc
sbb
jno
push
sub
bnd
scas
cli
shrb
inc
mov
dec
and
imul
lcall
mov
dec
inc
addr16
mov
sub
rcrl
ss
int
stos
in
mov
cmpsb
mov
cltd
mov
xor
pusha
mov
mov
mov
aaa
inc
and
andl
bound
cmp
sbb
dec
cmp
jae
xor
sub
push
dec
mov
and
push
in
sahf
test
into
sub
shrb
fs
loop
sbbl
pop
ret
cmp
imul
hlt
jnp
loop
in
jne
pop
mull
popa
stos
js
test
sub
gs
out
test
jp
test
adc
jo
cmp
mov
js
xchg
cmpsl
sub
cs
dec
popa
cmp
cmpsb
leave
sbb
adc
and
mov
shrl
rcll
imul
jp
ds
jl
out
jge
mov
or
dec
mov
push
mov
xor
pusha
scas
cmpsl
inc
lret
push
loop
aam
dec
sbb
add
add
popl
imul
fimull
test
bound
mov
cld
pop
cwtl
pop
lret
mov
popf
or
scas
jae
jb
fidivrs
or
cmp
out
imul
xchg
hlt
cmc
mov
in
xor
outsb
and
mov
pop
ficoms
add
push
lods
jg
mov
in
mov
inc
je
ja
sti
inc
mov
scas
xchg
scas
sub
mov
call
cmp
pop
in
push
and
das
cmp
mov
sub
ret
roll
add
adc
std
cwtl
mov
fsubs
dec
sahf
inc
adc
imul
jo
cwtl
xlat
jmp
clc
xchg
and
jae
add
rolb
jnp
jg
cmp
nop
fldcw
js
sahf
push
push
sbb
inc
pop
dec
add
and
or
xor
mov
into
or
inc
aas
lock
pop
cld
ss
loop
xor
cmc
jo
or
xor
jle
ja
setae
test
mov
imul
add
mov
mov
cmp
pop
in
daa
push
cmp
sub
cmp
fldt
fldt
inc
jecxz
push
and
adc
cwtl
fisttps
lahf
loope
stc
mov
lret
into
inc
hlt
adc
divb
or
mov
dec
push
cmpsl
int3
mov
sub
push
popf
ds
push
inc
xor
jnp
fcoml
dec
lret
leave
xor
dec
scas
test
clc
jne
sub
ds
fs
movsl
push
sub
outsb
out
inc
adc
push
or
push
inc
iret
sub
cmpsl
mull
pop
cmp
xchg
data16
add
imul
jno
loop
pop
jle
jno
je
adc
not
es
mov
push
inc
imul
cmpsl
or
js
outsl
push
mov
pop
mov
mov
mov
pop
nop
mov
add
mov
out
insb
fiaddl
mov
fwait
lret
mov
loope
cld
add
and
into
pop
pop
aam
dec
popa
or
jmp
lock
sbb
inc
dec
jbe
jnp
or
daa
sbb
jle
pop
mov
rorl
out
xchg
aad
shlb
adc
aad
pop
pop
int
xchg
cmpl
mov
sbb
lds
scas
and
loop
sbb
mov
sub
lds
int3
adc
fldt
pop
call
mov
cmpsb
adc
jb
lods
addl
adc
popa
adc
dec
popa
movsb
mov
cmp
mov
mov
pop
push
sub
xchg
jmp
dec
sahf
pop
or
sub
inc
sbb
cltd
dec
and
sub
mov
outsb
dec
inc
data16
cmp
pop
push
pop
pop
pop
imul
dec
add
movsl
lret
mov
and
dec
dec
mov
mov
sbb
xchg
mov
push
daa
push
testb
xchg
pop
cltd
repz
shrb
aas
or
and
leave
loop
sbb
jecxz
shl
xchg
pushl
aam
cli
int3
jnp
dec
dec
cmp
movl
stos
aaa
mov
sarb
mov
movsl
ret
cmpsl
clc
mov
hlt
in
sbb
insb
mov
mov
lea
sub
inc
popf
popf
jnp
or
mov
movsb
dec
mov
dec
add
xlat
lock
in
test
daa
add
insl
jl
iret
xchg
je
or
mov
test
sbb
iret
jo
cwtl
and
shll
dec
mov
mov
adc
dec
push
sar
or
addl
stos
cmp
inc
push
je
cli
loope
aam
mov
or
jle
pop
xchg
js
mov
stos
outsb
int
dec
mov
popa
sbb
dec
sbb
orl
imul
cmpsl
and
outsl
xor
or
jbe
inc
setg
bound
dec
stc
out
cmp
out
movsb
mulb
sub
mov
pop
push
or
outsl
inc
push
adc
jg
cltd
sbbl
arpl
push
jg
sub
jle
mov
leave
xor
jns
dec
shlb
lcall
jno
dec
mov
jb
ljmp
sbbb
aam
scas
sub
lods
mov
push
dec
push
and
ret
inc
nop
cmc
sbb
cmp
iret
js
mov
and
das
mov
cmc
sbb
xchg
inc
pop
imul
mov
jmp
mov
adc
out
int
mov
xchg
sub
push
xchg
mov
pop
in
adc
repnz
scas
in
je
test
gs
outsb
aas
and
test
popf
pop
orl
pop
js
and
pop
lahf
sub
into
cli
and
inc
pop
jecxz
dec
adc
cld
dec
lret
into
pop
sub
aaa
lds
and
fcmovu
cs
insb
cltd
pop
mov
jo
mov
jmp
cli
xor
mov
add
scas
pop
das
or
mov
aaa
leave
int3
div
cmp
xchg
mov
sbb
in
pop
mov
pop
sub
mov
imul
sub
inc
lods
pop
addb
lock
outsl
cmp
pop
dec
jne
cli
xchg
rcr
stc
subb
xor
mov
and
or
cmp
hlt
mov
in
lds
or
out
mov
lahf
test
fs
stc
and
fs
jmp
leave
shlb
push
cli
pop
jmp
inc
adc
add
push
lahf
loope
add
cld
inc
push
lret
cmpsl
aaa
xor
xchg
ret
sbb
xchg
mov
push
test
cmpxchg
jle
jbe
cmp
mov
add
cmpsb
xor
dec
scas
rorl
fwait
jno
cli
popf
jnp
scas
mov
mov
or
ljmp
xor
rorb
in
pop
xchg
movsb
add
xchg
sbb
push
add
les
cmp
test
aad
into
icebp
lret
jo
xchg
jns
lock
paddq
imul
xchg
enter
pop
cvttps2pi
xchg
xchg
pop
xor
jae
lcall
decl
pop
aas
jle
pop
cli
mov
cmp
dec
ss
cmpsl
iret
les
or
aad
les
mov
xor
ds
nop
adc
push
leave
insb
gs
mov
jge
test
and
pushf
fcmovnu
jge
cmp
add
adc
jl
movsl
nop
out
fs
andl
inc
push
mov
or
ret
xchg
aaa
xchg
add
icebp
or
daa
movsb
cli
lods
movsl
test
mov
pushf
hlt
mov
pusha
clc
inc
outsl
sahf
inc
push
lret
inc
negl
pop
in
push
cmp
gs
popa
sbb
into
adc
adc
or
cwtl
bound
sbb
es
imul
dec
xor
inc
push
and
add
fdivrs
inc
mov
xor
sbb
arpl
scas
jl
sub
sub
mov
mov
rclb
mov
or
mov
jbe
pushf
insl
aas
push
sub
mov
jg
and
cmp
movsb
lret
mov
inc
jbe
out
je
jns
fidivl
outsb
je
pop
jp
stc
hlt
addr16
and
jae
popl
call
lahf
push
xor
jg
add
repnz
sahf
push
xchg
sub
stos
mov
or
flds
sahf
xor
mov
bound
xchg
daa
add
add
xchg
repz
pop
ficoml
add
xor
fidivl
aas
aad
dec
add
in
mov
pop
les
xchg
cmp
rcr
jecxz
cs
es
repnz
sub
xor
aad
mov
scas
adcb
rorl
xor
dec
push
popa
adc
xchg
loope
or
dec
and
movsb
repnz
and
inc
push
push
fidivs
loopne
sbbb
cmp
out
cmc
fdivr
imul
xor
stc
ret
pop
scas
cmpl
sbb
loope
das
mov
loopne
stos
or
sub
push
sub
sbb
xor
std
pop
stos
adcl
repz
lretw
mov
xchg
pop
shlb
dec
add
je
loopne
ljmp
test
scas
add
jo
ret
dec
jg
test
mov
scas
add
rolb
xor
data16
xor
xor
sbb
jecxz
lds
xchg
push
shrl
push
or
xchg
push
in
dec
mov
ljmp
shll
test
or
pop
dec
xor
sbb
mov
jp
cwtl
mov
jmp
sbb
imul
adc
fxch
fwait
pop
dec
les
jmp
popf
lahf
cmp
test
xchg
sbb
sbb
into
sub
inc
xchg
hlt
stc
outsl
int3
push
mov
or
lods
mov
xor
stc
das
test
pushf
xor
jl
jl
xchg
push
mov
dec
lods
jo
inc
fucom
inc
stc
pop
push
jo
dec
in
imul
orb
or
mov
nop
nop
xchg
mov
cmpsl
mov
mov
in
das
test
inc
and
negl
outsb
xlat
or
icebp
xor
xor
dec
mov
or
ds
xchg
fsts
dec
jbe
adc
add
and
adc
sbb
lret
xchg
mov
sbb
hlt
xchg
dec
sbbl
ss
xchg
add
test
jo
and
xchg
ret
cmp
sub
add
sub
out
pop
add
cltd
popf
faddl
or
jbe
data16
insl
jp
cld
add
fucomip
xchg
fbstp
in
xchg
pop
in
shlb
xor
hlt
out
dec
or
cmp
jecxz
cmp
adc
xchg
fisttpll
adc
iret
xchg
test
testl
mov
sub
pop
fwait
jle
lods
fnstcw
cmp
iret
ret
inc
jae
xchg
mov
sahf
dec
mov
insb
jb
js
and
push
ds
mov
outsl
add
mov
sbb
inc
xchg
std
ss
cmp
adcl
xor
sub
cmp
mov
sbb
pop
das
and
mov
pop
lcall
cmpb
sbb
or
push
out
cwtl
out
fwait
loope
xor
add
inc
bound
fsts
mov
inc
sti
adc
mov
lcall
lahf
stos
pop
pusha
aam
inc
jp
xlat
or
add
inc
sbb
jg
in
push
xacquire
inc
leave
push
mov
js
mov
movsb
scas
mov
fsubrs
and
mov
dec
lret
pop
rcll
pop
cs
stos
out
cld
test
test
add
and
inc
inc
xlat
popf
mov
xchg
sub
outsl
inc
push
pop
pop
cmp
pop
xchg
test
mov
sbb
arpl
imul
xor
lock
sbb
inc
xorb
or
jmp
ljmp
hlt
mov
stc
and
adc
jne
add
popf
rcrl
or
aas
xchg
dec
adc
and
pop
mov
or
mov
ret
add
cld
push
jp
adc
dec
push
lods
pop
mov
sbb
stos
int
fs
lret
and
xor
std
call
rcrb
std
jg
jecxz
inc
and
xorb
loopnew
lea
xchg
ds
fcoms
test
sub
inc
sub
xchg
lds
xchg
adc
js
push
inc
jmp
les
in
push
push
mov
cmp
or
cwtl
mov
inc
movb
shrl
repnz
mov
cld
cmc
fdivrs
addb
leave
jmp
sub
cmp
bound
push
inc
mov
aaa
push
sbb
negl
lea
dec
int3
daa
and
sbb
stos
xchg
addr16
xchg
adc
mov
stc
std
push
cmc
xor
sub
fistl
add
pop
mulb
pop
imul
aam
inc
mov
ljmp
cmpsb
xor
fists
mov
gs
divl
cmpsb
insl
shrl
mov
cli
mov
stc
popa
sub
xor
xchg
inc
push
andb
lods
mov
pop
outsb
jns
mov
jae
xchg
dec
aad
popa
std
push
jmp
jb
and
sub
push
aaa
push
adc
or
cld
stos
and
adc
dec
cmp
enter
jp
shrb
sbb
jo
cwtl
lcall
rolb
adc
sarl
cmp
mov
sbb
in
int3
xchg
loope
dec
sti
dec
idivl
add
aam
xor
jg
fisubs
xchg
das
out
pushf
shl
pushf
dec
js
dec
mov
sub
dec
jnp
sbb
lds
jb
jne
movsl
out
sbb
lret
and
mov
jnp
adc
pop
or
aad
fwait
dec
and
pop
stos
mov
xchg
sub
test
add
mov
jecxz
lahf
adc
lcall
rcrb
dec
ja
jns
xchg
dec
push
cmpb
cltd
lahf
inc
and
sbb
sbb
push
clc
hlt
xorl
int
cld
cwtl
sub
and
js
mov
mov
xor
inc
jns
ret
je
jb
pushf
mov
jle
scas
xor
loope
cmp
rorl
ret
lods
pop
scas
aaa
out
fwait
pop
pushf
xor
lds
cmp
sbb
adc
push
cmpsl
les
jo
mov
or
inc
inc
stc
incl
in
loop
faddp
push
mov
xchg
popa
dec
add
leave
push
or
ret
mov
leave
vhsubpd
and
rclb
xchg
pop
out
std
add
xchg
push
test
dec
negb
hlt
cwtl
daa
rorb
xorb
mov
gs
push
ficompl
int
mov
xlat
hlt
lods
shlb
cld
shlb
inc
mov
inc
inc
pop
fsubp
sbb
loop
outsb
adc
dec
inc
fisubl
pop
out
out
sbb
insb
pushf
arpl
sahf
mov
add
cld
or
and
and
cli
enter
test
lds
mov
xchg
or
inc
cmp
test
push
inc
mov
jg
ds
scas
sbb
loope
adc
in
dec
sub
inc
xchg
popa
inc
jb
fnstcw
adc
pop
inc
mul
or
clc
xchg
pop
sbb
pushf
jnp
jle
mov
pop
jne
dec
cmc
aad
sub
dec
mov
and
cwtl
and
nop
sahf
jns
shll
lahf
and
clc
out
jecxz
cmp
add
xchg
insb
lahf
iretw
pop
xor
sarb
les
mov
addb
movsl
fmul
xchg
sub
pushf
test
fwait
sahf
out
push
cwtl
aam
enter
int3
push
and
out
adc
xchg
mov
arpl
inc
in
jle
ficomps
ds
insl
ss
adc
out
mov
outsl
in
test
ljmp
outsl
sub
cmpsl
test
push
or
mov
pop
test
mov
jns
in
xor
test
push
dec
dec
arpl
add
pop
push
scas
ficompl
inc
sbb
scas
push
sub
stc
xor
shll
nop
clc
cmp
scas
leave
gs
cmp
lcall
push
or
movsb
jns
gs
lahf
pushf
dec
and
mov
stos
jl
pop
aaa
test
mov
into
inc
jmp
popa
cltd
mov
adc
mov
and
lds
inc
outsb
lods
loopne
nop
mov
je
movsb
inc
movsb
xlat
sti
pop
pop
out
mov
xchg
cmpsb
loope
push
push
sub
out
cmc
and
inc
sub
into
stc
cld
inc
mov
aad
imul
push
and
push
sub
dec
aam
andl
les
out
fldenv
add
je
fidivrl
gs
or
xchg
call
mov
inc
pop
mov
mov
test
pop
sub
fdiv
lea
mov
filds
mov
dec
in
loop
imul
lahf
push
insb
enter
pop
xchg
jbe
and
jg
sarl
jl
bound
rorb
les
popf
loopne
push
popf
xchg
xchg
adc
sbb
add
jge
pop
loope
mov
xchg
imul
add
scas
and
mov
dec
mov
stos
inc
or
xchg
mov
incl
iret
or
push
jle
ret
mov
aad
or
int3
and
dec
pop
xor
sbb
dec
fistpl
cltd
lcall
out
mov
arpl
jnp
ret
outsb
push
movsl
sbb
lods
jnp
and
js
add
push
es
inc
lret
push
aad
out
pushf
xchg
mov
in
or
cmp
ss
test
sahf
or
cwtl
jne
and
inc
hlt
lret
lcall
outsb
fs
cmp
mov
jge
cmpsb
mov
push
xor
addr16
int3
or
xchg
daa
or
cli
mov
mov
mov
movsb
mov
add
test
sub
xorb
test
jg
cs
repnz
sub
movsl
lods
gs
fs
xor
out
in
fidivrs
inc
adc
fdivs
jmp
loop
cmp
push
mov
enter
inc
pop
pop
clc
dec
cmpb
cld
mov
lods
jo
fdivs
rcll
push
xor
push
cwtl
lea
mov
mov
mov
stos
ret
xchg
aam
fisttpll
mov
add
les
mov
iret
inc
inc
dec
mov
xchg
dec
je
sarb
cmpsl
push
mov
mov
rcrb
psubsw
es
add
xor
cmp
sbb
push
mov
xchg
int
xor
mov
sub
jne
in
dec
decl
pop
mov
sbb
jnp
fistl
psrlw
jl
movsb
aad
jge
jge
dec
roll
xchg
out
push
fs
movsb
cmp
inc
shll
aaa
cmp
jbe
lock
xchg
les
js
adc
call
jno
je
ljmp
jle
or
jle
mov
daa
ret
outsb
repz
xor
test
insl
pop
inc
out
xor
test
addb
es
mov
push
iret
insl
mov
div
add
je
cmp
mov
and
pop
mov
imul
int
movsl
popa
ljmp
fbld
iret
pop
add
push
pop
jnp
adc
les
xchg
jo
mov
imul
sbb
mov
push
adcl
pop
lods
adc
push
inc
iret
xor
imul
sbb
lret
ljmp
shrw
adc
jb
jo
fsts
xchg
adc
sub
jae
xor
cmp
mov
nop
or
pop
popf
lods
cld
ljmp
movsl
or
inc
push
lahf
inc
inc
dec
mov
jle
xor
and
subl
cmc
icebp
stos
dec
ljmp
pop
and
insl
lahf
iret
and
fabs
andb
push
mov
jns
popa
and
and
or
fidivl
sub
or
mov
jmp
fadds
inc
adc
movl
pushf
dec
stc
jbe
jecxz
mov
rcl
icebp
neg
jmp
cmc
aam
into
or
mov
lds
mov
push
mov
cwtl
mov
xchg
push
xor
aam
mov
adc
mov
and
into
or
pop
add
pop
jl
testb
sub
mov
scas
aaa
iret
popa
pushf
adc
inc
jp
call
pop
and
sub
dec
in
cmp
hlt
inc
sbb
dec
push
test
cmpsb
ljmp
cli
mov
pop
repnz
insl
aam
movntps
lea
xchg
adc
mov
xor
int3
adc
jb
lock
repnz
das
xor
and
sub
sub
push
sbb
sub
icebp
mov
mov
out
loope
pop
add
mov
dec
xchg
push
adc
call
cli
mov
loopne
cli
push
lods
mov
xchg
daa
mov
push
lcall
jp
xchg
pop
out
mov
xor
lods
and
aas
xchg
inc
jo
xor
mov
repz
mov
mov
insl
lods
mov
xor
into
xchg
mov
icebp
adc
and
mov
ret
je
mov
fucomp
xchg
aas
sarl
jbe
stos
in
xchg
imul
insl
loope
jp
cli
sbb
cs
cmp
cmpsb
pop
sub
mov
movb
push
or
sub
test
lock
stos
stos
push
mov
cs
daa
jnp
popa
xchg
aam
repnz
lock
and
repnz
ret
xor
in
cmp
addr16
out
xchg
out
pop
jecxz
xor
cmpsl
out
aaa
stos
dec
sub
lahf
and
sarl
add
lret
jecxz
mov
jne
sahf
aaa
adc
and
pop
insb
mov
mov
xchg
test
sbb
fldcw
dec
mov
add
push
pop
cmpsl
jne
dec
push
inc
mov
int3
mov
adc
mov
fcmovnbe
and
or
popl
cmpsb
xor
cmpl
dec
insb
cmpb
in
cmp
cltd
in
jle
inc
add
cs
loop
gs
dec
mov
xchg
jg
adc
pop
test
inc
push
dec
dec
lods
push
popa
aas
aad
repz
cmp
mov
mov
jg
popf
jp
pop
cmp
cmpsl
lods
call
sub
xlat
cltd
scas
push
into
push
pop
sub
pop
cwtl
pop
xor
daa
dec
xchg
sub
fcmovb
jecxz
std
ror
sbb
aad
ret
cs
mov
lea
scas
push
pop
mov
adc
mov
mov
xchg
test
jae
out
xchg
and
dec
adcb
lcall
add
stc
div
mov
xchg
insb
sbb
inc
push
ficoml
test
pop
mov
push
inc
jne
rorb
fimuls
repz
stc
push
adc
xor
adc
xchg
pushf
and
aad
jmp
xchg
ficoml
dec
jne
jecxz
adc
adc
leave
lret
mov
mov
xor
push
mulb
jg
dec
push
push
aas
dec
bound
push
lods
or
pusha
sbb
jno
inc
xchg
cmp
jae
enter
stos
rorb
rcll
shrl
inc
sbb
sub
imul
das
in
sub
or
dec
adc
es
cmp
pop
mov
mov
rcl
lret
adc
xchg
fwait
inc
aad
jl
push
jo
push
loope
dec
daa
push
rcrb
and
inc
jl
inc
xor
in
popf
dec
repz
jp
shlb
adc
sub
call
repnz
inc
ljmp
pop
xor
bnd
cmp
sub
pusha
mov
cli
lahf
mov
mov
cmp
push
adc
aaa
mov
inc
sub
mov
sub
fistl
dec
xor
cmp
ret
cmp
sarl
jns
je
out
xchg
mov
outsb
out
sub
mov
dec
int3
arpl
push
push
gs
fdiv
enter
jl
pop
sbb
enter
enter
testl
stos
inc
popf
adc
mov
rorb
jle
lcall
ss
pop
pop
dec
in
ficoml
xor
cli
push
in
outsb
aad
mov
or
xor
hlt
push
and
lods
ret
ja
inc
pop
das
pop
pop
imul
cltd
cmp
cmp
cmp
hlt
testb
insb
hlt
sbb
push
mov
inc
xor
lods
mov
lods
mov
in
adc
adc
ds
iret
aaa
ja
pop
push
stc
jae
ret
mov
sahf
sbb
adc
punpckldq
icebp
push
mov
jbe
test
push
arpl
dec
js
push
icebp
popa
xor
in
in
cmp
fmull
jecxz
cmp
mov
push
insl
mov
mov
dec
insl
cmc
or
adc
mov
rclb
sbb
popa
pop
xlat
lods
jbe
je
in
add
add
and
jo
adc
sbb
test
mov
movl
stc
push
mov
jmp
cmp
cmc
mov
xor
mov
jg
inc
dec
dec
add
rcrb
lret
pusha
and
jg
dec
seto
outsl
cmc
and
mov
add
xor
int
push
je
iret
nop
divl
out
leave
sub
sub
sbb
jb
scas
outsb
sub
push
adc
push
std
test
and
sbb
lods
rol
dec
push
ljmp
push
xor
xor
and
sbb
push
or
out
jp
xchg
xchg
imul
loopne
sahf
icebp
mov
push
cs
hlt
mov
push
adc
loopne
or
dec
into
mov
notb
in
js
sub
adc
lcall
inc
movsl
test
aas
adc
es
mov
out
cld
out
addb
imul
push
test
mov
mov
push
jle
dec
ljmp
cmpsb
jne
sbb
imul
or
and
int3
outsl
outsl
push
adc
jns
das
pop
jo
cld
test
mov
mov
sbb
arpl
mov
xchg
or
popa
mov
mov
fsubrs
mov
jo
xchg
mov
repnz
lock
mov
add
aad
xlat
aas
inc
scas
xchg
jle
mov
pop
je
xchg
cmp
scas
and
insb
lret
popf
aad
sub
inc
jmp
cmp
repz
test
out
add
mov
in
cli
int3
testl
mov
fs
xor
out
xchg
cmp
add
jmp
in
cmp
add
sbb
outsl
fsts
jno
mov
xchg
dec
sbb
fistps
push
xor
push
mov
fisubs
cli
mov
sbb
add
inc
out
fwait
movsb
xor
add
push
mov
push
int3
loopne
mov
lock
icebp
xchg
test
fimuls
or
pop
cwtl
and
xchg
pusha
fiaddl
imul
and
and
fs
mov
leave
sbb
sbb
pop
mov
into
stc
iret
cmp
xchg
gs
cmc
push
sbb
out
jecxz
mov
call
cld
inc
mov
push
addr16
js
shll
jnp
jge
rcrl
lds
dec
push
lcall
jno
loopne
add
sub
daa
dec
les
jp
xchg
cs
mov
add
scas
dec
and
sub
cmp
lock
cmp
push
mov
push
cmp
in
or
cmp
mov
in
push
insl
out
pop
fdivl
data16
aas
sti
addb
ss
sbb
cltd
mov
and
out
push
add
and
lds
cld
lret
push
xchg
shrl
sbb
pop
or
jecxz
jae
rorb
cli
jl
cmpsb
adcl
xor
cmp
imul
aad
outsb
ret
and
mov
jne
pushf
repnz
adc
mov
pusha
mov
jae
mov
imul
xchg
push
out
mov
sti
les
jp
in
in
push
dec
repnz
pusha
test
mov
test
mov
add
repnz
mov
cs
pop
pop
push
jae
add
fisttpll
arpl
inc
arpl
pusha
fnstsw
fidivrs
push
ret
and
stos
mov
push
sub
mov
cs
push
sti
jo
sti
stc
sbb
stos
lret
andl
dec
xor
adc
cmp
push
enter
rcrb
mov
std
sbb
cmp
cmp
push
mov
xor
mov
sub
in
jecxz
loope
rorl
lods
jl
fsubrl
fsubrl
xchg
xor
cmpsl
int
ror
xchg
cmp
add
push
negl
out
pop
mov
stos
stos
sub
rcl
xchg
mov
push
cmpsb
rcr
sub
adc
outsb
jle
ret
cld
and
pop
scas
aaa
mov
hlt
sahf
mov
clc
outsb
es
xchg
pop
insb
dec
xchg
push
into
cmpsl
jno
sub
cmp
sub
or
out
adc
cli
test
cli
pop
dec
jg
lret
shll
push
adc
xor
cs
jge
cmc
rol
xor
ret
add
xor
sbb
imul
addr16
lret
cmp
add
push
call
cmp
jge
inc
cwtl
shr
xchg
daa
xchg
pop
cwtl
inc
pop
mov
std
call
xchg
jns
shll
push
lock
mov
fistps
cwtl
jmp
sti
shrl
cmpsl
sub
pop
cmp
je
cwtl
mov
or
decl
decb
call
mov
xor
test
sub
lret
push
test
push
into
sbb
arpl
fpatan
std
xor
fcomip
push
xor
out
mov
add
pop
adc
inc
jne
lea
clc
jns
decb
and
popf
movsl
mov
dec
pop
fimull
std
mov
or
and
mulb
outsl
xor
in
xchg
dec
sbb
iret
and
rorl
push
mov
std
xchg
inc
mov
cltd
sbb
add
cmp
sbb
xchg
jno
call
cmp
repnz
and
mov
jge
sub
js
push
pushf
stos
imul
into
mov
push
popf
push
xchg
xchg
jbe
push
out
xchg
lret
cmp
mulb
push
jbe
pop
add
cmp
push
sub
imul
dec
dec
sbb
repz
xor
lcall
loop
arpl
pop
adc
stos
pop
mov
mov
scas
lds
jecxz
in
bound
mov
ljmp
fistpll
mov
leave
adc
dec
jmp
xor
mov
inc
jb
mov
jecxz
dec
cmp
add
int
sti
push
sbb
andb
stc
mov
arpl
enter
dec
push
loope
int
adc
add
mov
shrb
add
pop
pop
cld
mov
sbb
adc
cli
test
jp
dec
jmp
mov
push
std
adc
cmc
sbb
xchg
jecxz
xchg
and
dec
imul
dec
sub
clc
mov
test
cmpsb
mov
or
faddl
addl
scas
iret
ds
in
pusha
out
mov
jmp
add
bt
fidivrl
mov
mov
notb
or
xchg
jns
push
popa
into
jmp
cli
sub
cmp
shrb
and
pop
pop
ret
outsl
sub
addl
clc
or
mov
ret
push
data16
rcl
cmp
mov
nop
cmp
push
out
jns
mov
push
xor
iret
clc
repz
push
inc
push
inc
ljmp
or
xchg
mul
sbb
sub
ja
popf
rcrb
xor
psubusw
bound
fnsave
and
push
ja
mov
inc
push
mov
mov
stos
or
adc
outsl
prefetch
jb
cltd
xor
daa
push
jo
pop
enter
sti
out
pop
mov
cli
shll
pop
xchg
jb
lret
or
rcr
or
sbbl
test
ret
push
mov
pop
cmp
xchg
in
cli
pop
xorb
adc
or
ljmp
and
loope
xlat
push
xchg
loopne
loope
cmpsb
jo
mov
in
jg
mov
into
out
xchg
add
mov
lods
into
inc
ss
fcmovnbe
icebp
cmpsl
gs
sbb
int
xchg
aam
adc
xor
mov
jo
push
das
incl
gs
fs
sbb
dec
int
push
aas
jb
orb
pusha
loopne
and
cmpsb
mov
out
sbb
aas
cld
mov
adc
je
in
xchg
pop
cmpsb
movd
hlt
lret
test
cmp
enter
pop
or
pop
pop
xchg
mov
lds
and
es
sbb
xchg
repz
in
dec
inc
dec
lods
scas
roll
rorl
int3
hlt
pop
ret
pushf
pop
ss
jnp
push
xchg
fiaddl
fcoml
cmp
adc
icebp
outsb
mov
cwtl
sbb
cwtl
dec
and
mov
insl
jae
mov
jmp
inc
mov
pop
cmp
add
call
push
dec
hlt
ss
mov
cltd
test
fcmovne
clc
mov
add
add
cmpsl
inc
mov
adc
aaa
fwait
add
out
jb
jge
fcmovnb
movsl
push
push
pop
inc
xchg
bound
mov
jne
mov
loopne
shlb
cltd
add
mov
clc
xor
xchg
xlat
lcall
dec
leave
ffreep
cltd
das
js
inc
cmp
fistpll
push
shlb
mov
add
pop
xchg
jb
nop
fidivs
lret
adc
andl
hlt
jno
sub
hlt
adc
in
ds
sarl
and
roll
shl
pop
jo
roll
dec
ljmp
jno
mov
outsl
inc
jo
push
mov
jle
insb
inc
sbbl
pop
mov
andb
aam
cmp
ret
clc
in
jp
stos
out
je
xchg
cmc
or
scas
xlat
stos
jo
cmc
add
inc
sub
pusha
mov
push
mov
dec
xchg
sbb
outsl
stos
inc
daa
adc
dec
les
std
call
pusha
pop
loop
mov
test
mov
jnp
repnz
or
jle
loop
push
jl
rcrl
stc
ficomps
jns
iret
inc
adc
insl
aaa
sbb
xor
imul
jg
pop
inc
pushf
sbb
mov
leave
in
cltd
arpl
sbb
jmp
lods
lret
out
repnz
loope
push
ss
jo
out
pop
and
loope
add
or
add
ss
test
push
popf
dec
mov
pop
mov
push
nop
xchg
xor
adcb
mov
test
push
xor
inc
ret
ja
fadd
dec
and
roll
or
fsts
loopne
dec
push
jecxz
mov
lds
inc
and
mov
popa
xor
xor
pop
jb
in
jae
lock
hlt
repnz
add
pusha
mov
cmp
xchg
in
popa
in
fcmovnb
je
sub
int
jno
in
push
cwtl
cmp
push
dec
shll
xchg
in
xchg
repnz
xor
cmp
outsl
mov
fnsave
das
mov
imull
push
push
inc
daa
sub
push
xchg
push
jno
in
xchg
jnp
pop
mov
insb
cmp
jnp
adc
xchg
inc
mov
pop
pop
rorb
sbb
push
lods
or
mov
lock
and
es
add
loopne
sub
leave
lock
ret
dec
add
clc
push
pop
adc
popa
fildll
xchg
or
cmpsb
cmp
push
sub
loop
in
sbb
cmpsb
cmp
jmp
mov
sbb
adc
lods
mov
push
mov
xchg
mov
mov
sub
popf
pop
dec
ss
and
in
adc
jne
cmc
ficoms
incb
sahf
insb
dec
jb
movl
pop
aaa
push
repnz
ds
movsl
in
repnz
mov
int
inc
sub
aas
aas
xor
movsl
sarl
xlat
cmp
adc
ret
xor
fstps
das
lahf
and
popa
or
push
xchg
out
sbb
pop
lret
cmpl
stc
ret
pop
or
jl
sub
and
mov
lret
xor
push
pop
vpshlw
and
xchg
imul
mov
push
mov
insb
jmp
cmpsb
lds
pop
mov
xchg
xor
sub
stos
and
sub
jp
bound
fstl
or
inc
adc
jnp
int
dec
cmp
int
imul
cltd
dec
or
adc
cmp
dec
push
out
cld
xlat
jae
xor
ror
mov
xchg
lahf
adc
fiadds
rolb
or
sbb
divb
adc
and
cmpsb
and
pop
and
arpl
adc
jecxz
mov
popa
pop
stc
and
sbb
fdivrp
popf
fs
fnsave
sub
adc
in
scas
mov
xchg
mov
cmpsl
les
pop
pop
sub
test
mov
jle
jecxz,pt
jne
push
xchg
sbb
enter
and
cmp
jne
mov
lahf
mov
fisttpl
movsl
xchg
sbb
mov
scas
sbb
sub
je
mov
inc
mov
jno
sub
jp
lret
mov
push
lahf
ja
loopne
inc
push
lcall
or
das
lret
call
cmp
add
adc
subb
cwtl
jbe
cmpsl
jb
add
je
insb
sub
xor
aaa
jp
mov
add
pop
mov
pushf
or
clc
xchg
cwtl
testb
pushf
add
xor
and
cli
bound
jmp
repnz
mov
jo
pushf
mov
shl
add
push
mov
shrl
stos
push
mov
sahf
xor
jb
jp
or
mov
xchg
loope
xlat
aad
mov
mov
and
std
add
call
push
sti
mov
gs
imul
sub
mov
sbb
add
jl
push
aaa
aad
je
fcoml
mov
dec
test
insb
faddl
add
hlt
ljmp
pop
cld
andb
adc
jl
lods
jo
lds
ret
and
push
loop
pushf
ficoms
mov
insb
mov
int
mov
test
mov
mov
pop
les
mov
inc
mov
js
ds
mov
ffreep
stos
jl
mov
jae
mov
and
jge
subl
das
fs
cmc
sub
push
push
inc
lock
mov
imul
inc
dec
js
jp
loop
lock
xor
fsubr
jle
cmp
lock
sbb
test
xchg
mov
sbb
xorl
lods
in
and
mov
loope
fdivr
lds
xchg
add
xor
leave
cli
cli
pop
and
imul
inc
lods
imull
call
lret
xchg
mov
movsl
pusha
mov
into
adc
lods
imul
adc
jecxz
add
add
xor
mov
roll
pop
mov
push
dec
lea
pop
lods
fs
int
clc
in
cld
movsl
xlat
cli
push
xor
or
push
cmpsl
xor
lock
xchg
cmp
insl
push
clc
sbb
cmp
inc
mov
xchg
lret
xchg
cld
test
lds
push
adc
testl
ret
mov
movsl
mov
push
xchg
sar
sbb
mov
pop
xor
add
lock
cmpsb
daa
nop
and
mov
lret
mov
xor
hlt
xchg
sbbl
out
aaa
aaa
imul
jge
mov
in
hlt
mov
cli
cmp
addr16
hlt
jo
imul
in
xor
xchg
mov
cmpsb
fld
push
sub
out
loop
jb
sbb
inc
sbb
and
ret
ljmp
xchg
gs
in
xchg
sub
cwtl
xor
in
adc
xchg
movsl
dec
inc
mov
mov
ja
lret
and
cmp
std
iret
out
jnp
push
aaa
sbb
inc
jmp
addr16
call
in
pop
push
aad
pop
mov
xor
sub
lret
sub
dec
jmp
mov
or
dec
shll
sub
pop
inc
xchg
xchg
jecxz
or
xor
push
filds
fiadds
jl
in
adc
stos
movsl
jb
data16
cs
xchg
fidivrs
inc
in
adc
dec
imul
nop
jmp
faddl
aaa
sbb
imul
push
xchg
pop
enter
xor
call
fldl
sti
leave
sahf
mov
xor
fsts
inc
inc
fsubrl
mov
dec
xor
loope
cmp
movsl
cmp
out
pushf
mov
sti
ljmp
mov
movsb
ds
imul
sub
or
mov
adc
fwait
push
add
es
add
cmp
mov
sub
jmp
ret
sbbl
xchg
sbb
adc
jno
inc
sahf
adc
xchg
cmpb
les
push
sub
xchg
stos
pop
lock
aaa
cmp
in
jmp
push
or
inc
inc
cmp
adcl
or
rcll
push
cmp
mov
test
xchg
cmpsl
imul
pop
insl
popf
jmp
es
lds
mov
cmp
rclb
or
jecxz
inc
dec
cmp
push
adc
cmp
mov
jecxz
cwtl
stos
movsl
sub
sbb
punpckhwd
sbb
mov
sbbl
rol
loope
scas
fmulp
lret
popa
mov
les
pop
mov
cmpsb
popa
push
repnz
mov
leave
jne
cli
pop
cli
mov
push
daa
pop
lods
mov
lds
and
dec
sub
jne
rorl
cmp
mov
cmpsl
gs
cmc
pusha
xchg
into
inc
jg
or
sbb
int3
inc
pop
ret
mov
add
cmp
aaa
pop
out
movsb
cmp
call
and
dec
xchg
loop
rcrl
jg
jl
xchg
decl
fadd
inc
cld
orl
out
inc
iret
sbb
sub
mov
test
mov
scas
push
cs
mov
or
leave
push
add
out
shl
jnp
mov
sahf
add
aad
aad
xor
mov
and
dec
mov
ss
jle
cmpsl
les
mov
rolb
mov
loop
lds
sub
adc
cmp
push
enter
mov
bound
pop
push
repz
leave
or
or
dec
xchg
jecxz
xorb
push
mov
cs
and
sbb
cmpsb
sbb
jp
jne
fiadds
sbb
dec
loop
aam
jae
pop
cmc
add
out
je
lret
insl
loope
xor
dec
xchg
inc
jne
outsb
inc
push
add
adc
outsb
dec
xlat
or
into
push
pop
cltd
fmull
mov
push
lahf
pop
pop
aad
mov
ja
cltd
add
mov
hlt
out
adc
cmp
push
mov
cmp
cmc
xor
inc
xchg
js
ljmp
sarb
mov
cmp
jmp
mov
jne
or
iret
test
les
push
sub
ud2
scas
popa
inc
dec
mov
roll
pop
push
mov
add
movsl
pop
jecxz
mov
push
es
jmp
mov
pop
ja,pt
xchg
leave
pop
cmp
and
scas
mov
mov
lahf
mov
sbb
andb
inc
cwtl
xchg
repnz
loopne
adc
into
cmpsb
lret
and
repz
outsb
cli
mov
ret
ds
inc
imul
sbb
imul
fimuls
pop
jge
xchg
in
inc
cli
mov
xchg
lock
dec
idivb
jb
les
xorl
jbe
adc
sbb
add
and
outsb
mov
pop
shlb
out
aas
mov
cld
or
testl
sub
pushf
inc
enter
mull
scas
in
in
mov
xchg
xchg
rcl
add
mov
mov
out
pop
pop
ret
bound
pop
mov
out
mov
fdivr
inc
xor
jmp
push
arpl
add
jg
sub
out
fdivrl
xchg
fsubrs
push
jns
outsl
adc
cld
notl
movsb
clc
out
mov
and
les
nop
pop
lret
cwtl
enter
pop
dec
jge
in
sbbl
in
push
jnp
stos
xchg
shr
sub
push
add
das
jmp
pop
shrl
rcrb
shl
fs
pop
shll
jbe
sub
xchg
addr16
daa
cmp
mov
xlat
jb
pop
mov
jge
xor
repnz
jnp
cmp
loopne
out
mov
push
outsb
dec
inc
cmp
add
jno
sarb
pop
test
inc
push
fs
imul
push
push
into
cmp
aas
jnp
ja
ss
pusha
icebp
dec
fucomip
out
inc
or
sbb
int
loopne
mov
add
sub
out
fidivrl
loopne
cmp
xor
push
out
mov
sahf
test
xor
adc
mov
pop
daa
mov
mov
sbb
xchg
sbb
inc
add
aas
imul
aaa
or
sub
lods
cltd
int3
hlt
imul
xchg
jle
test
jp
ds
rorb
adc
inc
loope
bnd
push
and
jl
lods
popa
xchg
fldt
xchg
out
add
dec
mov
popf
sub
push
call
xor
adc
jno
test
cmp
pop
aam
leave
out
out
loope
test
inc
pop
call
or
inc
dec
cld
push
pop
inc
push
add
add
sub
movb
in
or
pop
inc
dec
lods
jns
lret
push
lods
mov
xchg
sub
les
mov
jecxz
aas
and
loopne
mulb
sti
pusha
cmp
out
mov
lret
mov
in
call
rorb
fwait
pop
add
jle
mov
xor
mov
loopne
test
mov
lahf
or
pop
fidivs
into
cmp
fldenv
insl
je
mov
xchg
adc
gs
leave
das
stos
and
add
test
cs
jle
pop
nop
cmpsb
lret
bound
mov
fisubl
mov
mov
dec
daa
shl
push
dec
int
and
lods
enter
mov
rcll
push
pop
mov
bound
push
mov
bound
hlt
shll
add
xchg
test
dec
int
movsl
or
movsl
repnz
mov
shlb
pushl
ljmp
shrb
aad
or
fstl
shlb
loope
xor
cwtl
sbb
cmc
fisttpll
add
or
je
fstpl
lret
rcll
repz
lea
adc
sub
push
cltd
xchg
push
js
out
imul
test
xchg
inc
sarb
repz
cmp
sub
fnstcw
lret
pop
xchg
ja
sub
mov
cmp
push
test
or
ret
outsl
cmp
loope
and
int3
xlat
and
add
jl
out
arpl
fiaddl
pusha
mov
pop
outsl
js
in
pop
rcll
mov
aas
adc
fdivl
hlt
adc
bound
aas
adc
test
lahf
inc
push
mov
dec
jns
ds
pop
aam
in
incb
fadd
ljmp
inc
cmp
adc
xor
xchg
jne
cwtl
lods
mov
jg
jp
rolb
shll
xchg
mov
and
dec
lret
cltd
mov
lret
dec
stc
sbb
cmpsl
fnstsw
lret
filds
aam
mov
fnsave
push
in
mov
inc
hlt
mov
out
dec
fs
or
sub
inc
ret
mov
add
in
or
lock
mov
inc
jg
clc
ficoms
bound
divb
pop
and
cwtl
popf
jns
inc
in
in
fisttpll
inc
fcmove
push
sti
pusha
lea
mov
test
aaa
adc
inc
and
mov
rcrb
std
mov
or
cmpsb
lods
sbb
sub
outsl
sub
cmp
xor
adc
sarl
test
iret
andl
jmp
add
mov
xchg
stos
and
ja
aaa
or
in
rorb
rcl
jmp
jp
jle
mov
das
pop
pop
icebp
iret
sub
int3
cltd
jp
test
repz
insb
sbb
mov
insl
push
shr
sbb
and
sarb
je
lods
jo
ja
call
mov
mov
aas
sub
xchg
negb
ja
xchg
stos
loopne
xchg
repz
inc
adc
pop
jo
shl
adc
sub
in
pcmpgtb
jg
data16
lods
imull
add
enter
fdivrl
xchg
rcr
adc
sbb
outsl
cmc
das
outsl
sbbb
fiadds
iret
imul
iret
je
add
fsubrp
shll
sarl
push
lea
roll
and
lods
and
cld
cltd
push
lcall
nop
cltd
stc
push
mov
pop
movsl
mov
stos
sbbb
cs
mov
jne
mov
arpl
shlb
iret
lcall
mov
jl
push
mov
pop
ss
lods
test
jo
sti
jno
lds
inc
sbb
addb
leave
mov
push
jo
or
or
adc
push
push
jmp
aaa
in
sahf
cmp
ja
jmp
inc
push
mov
daa
fimuls
inc
cmp
aam
jecxz
or
pop
xchg
dec
xchg
jmp
inc
mov
jl
xchg
aaa
call
inc
roll
mov
sahf
sahf
pop
lods
test
rcl
out
add
pop
adc
mov
popa
insb
push
stos
jbe
clc
inc
pop
jns
aas
int3
inc
and
nop
sub
insl
pop
and
mov
int3
dec
cltd
movsb
mov
sub
fcmovnu
mov
push
pop
cwtl
orb
insb
add
mov
sbb
xor
les
push
mov
mul
in
ret
inc
cmc
sbb
jmp
pushf
ret
imul
rolb
dec
loop
rorl
push
test
not
push
jno
adc
push
clc
ljmp
add
sub
sbb
add
dec
and
inc
pop
xor
bound
fdivrs
lret
xchg
xchg
push
js
cmpsb
mov
xchg
and
imul
jo
outsb
mov
push
idivl
dec
imul
add
fnsave
dec
ret
lret
xchg
jae
push
inc
sub
repnz
adc
adc
lds
outsl
icebp
mov
sbb
pop
ljmp
push
sub
lds
cmp
in
fmul
or
sub
mov
in
mov
mov
push
std
xor
jge
sub
pop
fcmove
mov
and
in
ss
cltd
and
jle
xor
mov
add
sbb
cmpsb
adc
jne
inc
cmc
mov
or
lock
js
std
adc
scas
pop
jno,pn
stos
loope
fistpl
insb
js
jae
aam
pop
mov
pushf
sub
or
inc
fisubl
mov
mov
je
inc
ljmp
jecxz
lds
rol
loop
push
inc
adc
je
mov
or
pop
fs
sbb
push
dec
mov
data16
repz
ljmp
idivb
es
sbb
dec
push
mov
and
jne
inc
sub
mov
cmpsb
repz
sub
pop
ja
mov
pop
jl
jg
mov
and
stos
addr16
add
dec
jg
test
lods
andb
push
lods
sub
sbb
fadd
jp
push
popa
ds
dec
outsl
push
lea
fisttpll
add
jbe
xchg
rcr
mov
icebp
adc
loopne
sub
add
data16
aas
leave
dec
pushf
lods
xchg
xor
pop
pop
pop
cmp
out
daa
add
cmpsl
sbb
xor
incl
gs
jg
pop
icebp
jge
jge
iret
fbstp
loopne
in
imul
xchg
pop
pop
ret
mov
fsub
ja
rcr
adc
pop
aaa
mov
sub
fnstsw
dec
out
test
add
imulb
pop
outsb
jl
fcoms
rclb
dec
in
das
mov
das
dec
ljmp
pop
inc
xchg
js
pop
int
cmp
or
and
dec
inc
xchg
mov
fwait
das
mov
push
ret
repz
sti
fisttps
push
aaa
shlb
movsb
rcrb
xor
bound
jle
pop
inc
add
out
mov
xchg
jle
mov
mov
inc
mov
shll
sbb
xlat
sub
ret
xor
xor
add
cli
lret
cs
mov
jae
in
push
push
mov
inc
mov
inc
ss
dec
in
xor
jp
lds
scas
clc
jp
dec
mov
mov
jnp
stos
stos
pop
popf
jne
out
test
and
mov
sbb
int
loope
cmpsb
cmpsb
xor
arpl
aas
adc
cmpsb
stos
orl
pop
hlt
cmp
ret
scas
mov
mov
fsubrl
dec
loop
jne
jno
lcall
pop
push
test
inc
popf
or
repnz
in
push
add
shl
mov
sub
into
dec
clc
lret
daa
push
and
mov
icebp
jo
flds
push
stc
adc
lock
outsb
shl
inc
cmp
adc
inc
xchg
lods
adc
jle
fistl
leave
xchg
push
adc
xor
adc
add
push
dec
cmpl
mov
outsb
xchg
fisttps
in
mov
stc
mov
inc
orl
mov
sbbl
sub
mov
push
leave
out
mov
out
pushf
sbb
stos
mov
lcall
pushf
pushf
pop
and
rcll
push
std
mov
mov
adc
mov
add
popa
jl
add
mov
hlt
lcall
and
aad
cmp
mov
bound
adc
enter
push
leave
movsb
mov
dec
test
movsb
es
push
daa
sbb
daa
fwait
pop
ljmp
repz
sub
pop
lods
cltd
pop
aad
push
test
lods
dec
xor
outsl
sub
xor
push
lret
and
ds
outsb
mov
xchg
jg
mov
out
cltd
inc
add
sub
ljmp
sbb
cmp
push
sarl
fimull
loop
pop
inc
in
lock
bound
mov
idivl
test
mov
icebp
lea
dec
dec
cmp
insb
movlps
sub
cmc
cmpsb
push
cmpsb
loopne
popf
inc
lcall
fwait
cmp
jl
imul
loop
sbb
mov
rolb
stos
or
sbb
popa
addr16
lahf
cmp
test
xor
dec
outsl
pop
xchg
and
cmpsb
mov
or
or
inc
jge
movsb
inc
or
les
pop
ljmp
mov
es
enter
pusha
cmp
jnp
in
add
jo
mov
jae
das
or
fmull
and
sbb
sahf
or
push
inc
inc
xchg
cmp
mov
test
push
es
jmp
cs
sub
add
std
cli
xor
push
or
inc
loope
pop
cmpsb
push
loop
stos
xchg
bound
mulb
into
xor
cwtl
sbb
mov
call
pop
bound
call
inc
sub
sahf
sti
pop
mov
andb
mov
scas
push
dec
xchg
sub
mov
mov
and
sbb
jb
test
pop
mov
stos
not
add
fprem1
rcll
mov
push
xchg
fists
ret
mov
inc
int3
movl
mov
insl
das
ljmp
mov
push
ss
outsb
sahf
sti
inc
or
jecxz
adc
push
xorb
fisttpl
cmp
sahf
cmp
in
out
cltd
lret
push
push
js
fsubs
add
push
negb
nop
dec
jg
sub
imul
inc
xchg
lret
icebp
dec
jns
enter
fmull
sub
xchg
shrb
or
or
mov
sbb
sbbb
add
mov
sub
mov
mov
add
lods
inc
mov
inc
dec
loopne
jo
adc
mov
or
fwait
mov
popa
cmp
sub
cmp
cmc
les
add
imul
push
dec
and
mov
outsl
clc
push
out
inc
sub
jmp
jmp
ret
adc
mov
add
inc
jnp
jbe
sub
aaa
aad
repz
out
gs
mov
aas
xorb
leave
dec
push
scas
jne
cmp
mov
lock
adc
mov
xchg
jp
in
or
mov
fisttps
push
mov
movb
iret
es
out
and
das
xor
int3
aaa
mov
ror
sbb
pop
bound
mov
iret
or
mov
adc
leave
stos
add
add
and
jmp
sbb
xchg
push
addb
mov
cmp
movsl
mov
xor
out
or
mov
enter
cmpb
pop
movb
sbb
lock
jno
fstl
xor
rcll
push
leave
out
xchg
jge
in
xorb
nop
sub
pop
xor
sbb
xor
sti
add
lods
jae
xchg
in
lret
push
and
xchg
fs
lret
xchg
inc
xor
aad
lods
and
shrb
std
mov
or
cld
add
mov
in
enter
out
and
imul
pop
aad
fstpl
lods
cmp
divb
rcr
lock
dec
sub
repnz
push
fildl
in
iret
std
ds
jae
pop
cli
pop
and
cs
out
adc
vmovaps
pop
loop
pusha
scas
cwtl
mull
push
xchg
loopne
jnp
or
push
sub
cmp
adc
and
pushf
divb
push
add
add
push
and
jnp
stos
sbb
mov
in
inc
mov
addr16
dec
adc
pop
das
mov
and
mov
or
adc
jle
jno
cmpsl
cltd
stc
push
movsb
xchg
arpl
push
mov
mov
test
inc
lock
pop
bound
jmp
jbe
stc
cmpsl
pusha
push
insb
xor
rcl
pop
inc
mov
imul
scas
test
mov
cmp
lds
pop
daa
cwtl
loope
sub
lds
xchg
les
fcom
xchg
stos
xchg
jnp
jp
push
les
fxch
int3
mov
sahf
cmc
jecxz
or
pop
xor
repnz
scas
movsb
jmp
pop
mov
cmp
testl
andb
mov
stos
mov
scas
mov
iret
jae
dec
jmp
lret
cwtl
mov
mov
ret
dec
add
push
dec
js
sbb
jae,pn
std
repnz
or
inc
adc
xchg
cmp
in
jecxz
mov
adc
dec
pop
in
lret
cmpsb
mov
mul
xor
xchg
imul
jne
roll
out
repnz
sti
mov
in
imulb
negl
fldt
les
sub
mov
fbld
js
mov
in
aas
mov
adc
cwtl
iret
sub
mov
dec
mov
clc
mov
or
std
aaa
into
xor
mov
adc
hlt
pop
jecxz
roll
cld
inc
je,pn
xor
dec
and
subb
nop
inc
dec
mov
jbe
xchg
sub
add
mov
and
push
fsts
insb
nop
cmc
sub
in
and
inc
mov
and
iret
and
lods
daa
jae
jp
aas
movsl
nop
dec
xor
push
out
shrl
xlat
dec
xchg
and
dec
rcr
cmp
xchg
orb
mov
cmp
cmp
mov
out
inc
cmpsb
mov
fmulp
fnstcw
or
sbb
ljmp
dec
xchg
clc
lock
or
popf
out
sbb
gs
mov
push
or
adc
sub
sbb
dec
icebp
fcmovbe
sbb
int3
mov
adc
xor
aaa
add
jae
popa
hlt
inc
fildll
in
dec
pop
xchg
push
mov
lcall
mov
cmp
test
aas
adc
jns
mov
jg
outsl
sarb
or
neg
jmp
je
aas
cltd
adc
add
push
enter
fwait
xchg
inc
cmpsb
test
or
out
test
je
gs
mov
pop
add
adc
or
push
lcall
stos
dec
adc
jbe
out
xor
mov
pop
push
pop
shll
lcall
loopne
jb
inc
mov
cltd
xor
int3
jg
xchg
adc
mov
test
es
outsl
dec
popa
stos
int3
xchg
cli
jae
cwtl
dec
test
jle
addr16
in
cli
aaa
scas
mov
jae
or
pop
arpl
pop
dec
dec
out
out
imul
or
das
outsl
sbb
fcmovnu
test
push
xor
mov
add
cmp
fisttpl
jmp
adc
mov
xchg
or
inc
sub
pop
cmp
out
jb
push
sti
das
mov
out
add
sub
out
pop
push
leave
xor
xor
sub
insb
push
xorb
pop
jmp
add
or
jbe
mov
stc
lods
sahf
mov
mov
mov
inc
mov
jmp
lds
and
inc
mov
out
mov
out
aaa
jo
sbb
mov
mov
mov
insl
push
sub
mov
xchg
mov
imul
inc
lret
or
imulb
scas
inc
decl
mov
stos
aam
js
mov
lret
je
dec
shl
fildl
mov
xor
int
call
add
int
sti
int
sarb
xor
out
inc
je
popf
cmp
cs
aaa
adcb
cld
popf
add
pop
mov
push
xor
dec
mov
das
cmp
js
adc
cmpsb
bound
lods
daa
sbb
icebp
into
dec
adc
rolb
sub
icebp
das
xchg
or
fstpt
or
xchg
cmpsb
ret
dec
push
push
jmp
xchg
mov
incb
loop
ja
or
push
xorl
stos
repz
jle
into
pushf
andb
push
loope
xorl
cmp
icebp
lds
and
jns
xchg
call
inc
ss
xor
gs
pop
jg
push
sti
movl
scas
sub
inc
rorb
add
fstpt
dec
in
in
xchg
in
arpl
bound
ds
sahf
push
fldl
mov
xchg
xchg
sub
aad
gs
in
jno
dec
sub
inc
js
das
aam
mov
inc
loop
shll
dec
ret
sbb
jmp
jb
or
pusha
int
cmp
out
test
mov
shrb
add
inc
jb
xor
xchg
cwtl
jp
stos
or
out
int3
lcall
cmp
pop
adcl
adc
fadd
or
push
in
mov
in
sub
xchg
bnd
sbbb
sbb
popl
jne
inc
and
filds
inc
repz
cmpb
imul
imul
lods
test
sbb
xor
icebp
xchg
stc
fs
xor
scas
cld
fcomps
jo
mov
out
push
pop
es
std
lea
xchg
add
imul
jl
dec
fdivl
ja
leave
test
out
or
and
sub
shlb
mov
fcoms
mov
ja
xchg
xlat
out
js
in
addr16
push
or
imul
dec
cmpsl
arpl
and
sbb
aas
filds
push
sbb
insb
stos
pop
fsts
rcrl
sarl
xor
jp
dec
mov
movsb
loopne
in
maxps
xchg
bound
aad
out
imul
sbb
in
cld
lea
or
jae
mov
cmp
ss
push
cmovno
aaa
repz
add
lock
jae
push
cmpsl
cmp
adc
cmc
mov
popa
ret
pushf
jnp
shll
mov
dec
cmp
push
mov
sti
adc
loopne
xor
pusha
mov
data16
bound
lcall
outsb
sbb
xlat
adc
idiv
std
cltd
call
hlt
out
popf
sahf
sub
sbb
inc
mov
xchg
stc
jnp
jg
sbb
loop
pop
inc
mov
iret
outsl
aad
pusha
dec
ret
inc
and
stos
cmc
push
push
je
negb
idiv
in
mov
jge
clc
xlat
iret
jbe
dec
add
dec
mov
pop
leave
add
mov
mov
cld
sub
aas
movsl
pop
add
das
add
ret
stc
push
lahf
cmp
pop
sub
xor
mov
adc
je
out
and
shll
ljmp
icebp
lahf
jns
inc
je
ljmp
sbb
pop
int3
adc
or
adcl
mov
int3
sub
mov
adc
mov
or
aas
dec
sbb
in
cli
push
leave
mov
mov
mov
scas
cld
rcll
test
push
repnz
test
fabs
mov
dec
hlt
sahf
iret
inc
psubq
rcrb
insl
cmp
out
mov
xor
fcompl
xchg
jo
lahf
mov
icebp
jns
test
andl
popf
inc
push
lds
aas
ret
pop
stos
jmp
je
stos
sti
sbb
aad
shlb
sub
call
movsb
and
sbb
or
imul
repz
mov
stc
aad
cmpsb
push
sbb
cmp
xor
movsl
add
adc
mov
pop
loope
adc
rcrb
xchg
add
push
call
cld
sti
mov
cmc
scas
xchg
push
pop
out
push
xchg
adc
subb
insl
ljmp
pop
adc
je
lods
test
sbb
in
lods
bound
cmp
ja
inc
mov
and
sbb
in
xor
jno
xchg
shlb
lret
push
mov
js
push
stos
enter
dec
rcrl
push
and
out
mov
bound
rorl
sbb
sub
lods
out
out
pop
xchg
jae
add
inc
xchg
adc
jmp
call
sub
push
or
movsl
icebp
js
dec
mov
jp
sub
mov
clc
cltd
imul
jo
pop
sbb
shrb
leave
movsb
fs
mov
cmp
xchg
mov
insb
and
or
aam
push
je
lods
pop
sti
insl
mov
sbb
insb
enter
sbb
push
jge
cmpsl
ret
mov
jge
add
mov
add
add
ja
sti
shrb
cli
pop
js
mov
xchg
aas
adc
push
sbb
les
addr16
or
das
lcall
andb
movsb
push
fisttpll
push
jbe
test
stos
mov
sbb
mov
das
inc
sbb
mov
aad
mov
xor
inc
sahf
les
sbb
dec
jmp
in
sarl
mov
cli
lods
fwait
mov
mov
jae
mov
jmp
push
shl
jno
rclb
jno
adc
pushf
xor
sub
loop
fwait
xor
jl
mov
test
cwtl
jns
cmp
xor
mov
rolb
call
push
sbb
out
adc
ljmp
jmp
out
pop
loop
mov
mov
pop
push
pusha
mov
adc
les
push
mov
scas
pop
dec
dec
sub
xchg
cmpsl
or
fmull
jae
push
mov
push
aas
jl
mov
push
fcompl
repz
dec
add
and
adc
fisttpl
jne
adc
sbb
mov
dec
sub
pop
cmp
xor
in
repz
lahf
xchg
add
pusha
enter
es
xchg
and
mov
adc
sti
popa
jp
mov
xchg
outsb
jg
mov
adc
arpl
js
pop
pop
push
imul
lods
popf
xchg
mov
into
xchg
xor
daa
subl
and
fs
imul
inc
pop
and
shr
sub
aad
jmp
fildl
ret
inc
into
mov
lods
sbbl
pushf
hlt
leave
ds
mov
ja
jns
mov
loopne
icebp
bound
jl
in
mov
xlat
out
push
pop
mov
adc
add
jl
cltd
or
jmp
jae
popf
lods
pop
cmp
pusha
inc
mov
push
pop
ror
adcb
out
or
bound
dec
sbb
js
jecxz
push
or
out
cmpsb
inc
icebp
js
fnstcw
jne
add
push
xchg
sub
inc
pushf
mov
in
pop
pop
xor
jle
xor
mov
out
inc
ret
scas
test
jmp
mov
pop
fiaddl
movsl
xchg
push
mov
and
inc
stc
aad
push
divb
or
mov
xor
lahf
mov
std
mov
or
push
jo
cmp
pop
in
popf
adc
push
std
adc
mov
lret
mov
push
mov
enter
cmp
xchg
mov
xchg
jl
sub
mov
adc
pop
fwait
sahf
mov
imul
imul
sub
jle
lds
pop
cwtl
or
pushf
cmp
mov
out
inc
and
pop
scas
repnz
dec
das
mov
lds
aad
jmp
mov
pop
xor
in
sub
mov
dec
jns
cmp
adc
enter
ss
aam
mov
dec
cmc
rorl
cmp
mov
push
fwait
in
dec
pop
jmp
push
or
daa
cmp
inc
ret
cmp
call
pop
daa
add
mov
imul
movsl
in
pop
mov
pop
popa
adc
mov
and
jecxz
and
xchg
je
xchg
inc
bound
push
xchg
outsb
jge
or
aam
movsl
mov
push
pop
jecxz
add
pushf
push
inc
mov
mov
cmpsl
out
adc
mov
dec
mov
repz
dec
push
aaa
inc
dec
and
and
adc
outsl
xchg
dec
mov
lods
push
pushf
daa
jg
imulb
fsubs
adc
push
add
and
mov
jg
xlat
fcoml
xor
push
call
xchg
cld
loop
cli
sub
fimull
add
arpl
mov
imul
or
test
inc
ficompl
adc
cli
pop
jmp
enter
arpl
and
test
lods
cld
jle
pop
cmpsb
out
jbe
aad
je
push
sar
int3
fdivl
in
push
outsl
or
xor
xor
aad
repnz
dec
sbb
push
mov
cwtl
mov
fadds
jg
arpl
pusha
xlat
test
es
fxch
or
subl
dec
xlat
xchg
cmp
in
out
les
out
enter
sbb
sarb
ds
fiaddl
xchg
mov
jmp
inc
lds
mov
adc
lock
fistl
sti
pop
xor
push
es
loop
mov
pop
jecxz
aad
xor
in
or
add
loope
xchg
fistl
fs
movb
andl
or
push
push
inc
sbb
mov
lret
sahf
mov
sbb
cmp
repz
fisttpll
xchg
in
ror
outsb
lret
stc
cmp
mov
dec
cmp
fs
xor
sub
out
lock
es
clc
xchg
dec
andb
dec
xchg
push
xrelease
and
fstpt
jecxz
call
xchg
loope
repz
into
test
sbbb
mov
je
movsb
fdivl
sub
lods
rcrl
mov
les
xchg
fwait
sub
stos
ja
pop
xchg
ss
sbb
jmp
pop
dec
adc
push
cs
dec
movsb
cltd
adc
pslld
shl
lret
pop
inc
dec
mov
aaa
mov
outsl
jbe
push
jbe
call
pusha
shlb
int3
mov
fmuls
add
xor
mov
js
jg
loope
popa
cmc
push
stos
pop
loop
mov
jbe
pushf
inc
fimull
shll
xchg
mov
mov
ja
add
dec
jge
add
shrb
das
pop
mov
push
sub
jo
enter
or
out
jp
test
adc
jecxz
adc
or
cld
xor
and
xchg
push
xor
iret
in
mov
jecxz
mov
inc
fadd
push
faddl
psllq
or
xchg
fstl
cmp
jb
fdiv
jns
repnz
sbb
dec
incb
ror
stc
inc
arpl
clc
aaa
faddl
rorl
adc
rcll
mov
fs
outsb
pusha
jne
pop
xlat
call
push
ds
insb
ror
mul
pop
push
loopne
jo
cld
in
or
shrb
or
sbb
pop
or
lods
add
mov
pop
pop
lods
js
push
xor
mov
cmc
add
repnz
jne
lret
movsb
dec
adcb
out
hlt
divb
mov
lea
out
push
xchg
cld
or
out
mov
mov
jle
sub
cmpsb
sbb
popa
shrl
sbb
imul
sbb
je
dec
arpl
pop
repz
add
sub
mov
mov
pop
lahf
dec
dec
sbb
inc
dec
xchg
jo
cmp
mov
xchg
cmp
pop
into
lock
lea
orl
jecxz
shll
push
dec
fmuls
test
fadds
adc
jmp
inc
pop
lods
jg
test
cmpsl
pop
popa
or
mov
mov
ja
jecxz
mov
outsb
sbb
mov
leave
mov
jns
mov
inc
sub
push
sbb
fistl
inc
jbe
ss
add
loop
test
andl
add
pop
inc
imul
cmp
lods
mov
mov
inc
je
dec
pop
fldenv
mov
and
xchg
adc
mov
cmp
roll
push
scas
cmp
nop
jg
js
push
fsts
ss
jae
sub
insl
sub
in
fnstsw
in
dec
aas
lret
jbe
mov
mov
jmp
aas
mov
mov
mov
xor
mull
jle
sbb
clc
xor
aam
outsb
sti
fldt
add
scas
push
enter
dec
out
lods
test
fwait
inc
scas
cld
mov
jne
xchg
fcmovbe
jno
sbb
adc
cli
outsl
dec
or
ljmp
push
insb
push
cmpb
inc
outsb
pop
ret
dec
mov
add
xchg
push
mov
rcl
cmp
in
inc
sub
and
jnp
ja
and
xor
adc
loopne
push
js
daa
out
inc
fs
and
mov
cmpsb
rcrb
push
pop
and
leave
addr16
inc
and
arpl
jp
inc
bnd
mov
sub
jp
inc
ret
or
sbb
xchg
jbe
repnz
jle
pop
je
lcall
clc
cltd
repnz
push
mov
scas
stos
lods
pop
xchg
dec
mov
or
jle
add
lahf
fistps
push
negb
aas
add
in
cld
int3
test
addr16
addr16
jmp
xor
cmp
and
unpckhps
test
iret
adc
fistpl
loop
imul
sub
pop
insb
xchg
lock
xchg
cmp
ja
lea
inc
adc
mov
jg
daa
or
sahf
imul
in
ja
mov
mov
arpl
sub
sbb
adc
lea
clc
cmpsl
add
add
push
cmpsb
insl
cwtl
out
ja
xchg
cli
movl
cli
jl
xor
icebp
xlat
test
xor
sbb
lcall
jns
sbb
xor
and
mov
sbb
sbb
sbb
lret
mov
mov
mov
jb
mov
push
loopne
gs
cli
ss
das
dec
mov
push
clc
inc
or
shrb
jmp
es
sarl
jne
repnz
adc
pop
add
jbe
mov
inc
add
repz
sbb
mov
sbb
shlb
add
test
scas
adc
sub
dec
add
lahf
jbe
mov
shrl
pusha
cltd
pop
and
in
ja
inc
sbb
inc
xchg
push
dec
icebp
pop
dec
sbb
xor
clc
sub
std
xor
lods
insl
jb
push
rorl
lcall
int3
out
mov
or
decb
add
repnz
pop
ljmp
inc
adc
aaa
mov
xor
inc
jo
in
inc
insb
lods
jl
sbb
mov
or
adc
lock
inc
lret
scas
roll
das
ja
loop
mov
jle
push
stc
clc
bound
sbb
aad
mov
loop
pop
loopne
sbb
loop
ja
or
sbb
fwait
idiv
or
mov
in
sub
cs
mov
popa
loope
dec
fdivrl
out
sub
jne
jo
outsb
das
push
cmp
adc
jp
mov
insl
insb
movsb
sbb
jne
pop
fidivrs
mov
je
std
mov
pop
fwait
js
inc
mov
stos
jl
adc
icebp
insb
mov
nop
int3
push
hlt
sub
and
push
push
sub
sbb
outsb
adc
stos
or
fldt
dec
repz
mov
cwtl
enter
inc
or
cltd
mov
cmc
inc
cli
inc
xor
lahf
cwtl
mov
ljmp
mov
push
mov
jmp
aaa
pop
mov
or
inc
cmp
imul
sbb
adc
cmpsb
add
lcall
jge
dec
gs
imull
push
test
imul
mov
repnz
jne
jmp
lds
sub
inc
jnp
stos
jecxz
pop
adc
mov
lods
jno
sub
adc
pusha
push
mov
rclb
popa
outsb
test
clc
and
pop
push
cmp
mov
lods
daa
or
mov
stos
sub
jmp
xchg
xchg
sbb
subl
mov
dec
test
stos
or
ljmp
fisubrl
dec
aas
xlat
fistpll
inc
pop
dec
fisubrs
cltd
dec
push
cmp
pop
pushf
mov
orl
outsl
dec
call
int3
imull
and
adc
or
dec
push
popf
jmp
xchg
fstpt
int3
js
ja
sub
lcall
sbb
cltd
pop
fmuls
pop
push
add
and
push
pop
mov
mov
inc
test
leave
lds
mov
pop
pop
cli
sbb
xchg
cmpsb
je
imul
nop
stos
inc
cmp
mov
jge
lret
jb
jge
rcll
es
call
push
inc
loope
ja
inc
mov
mov
jmp
xchg
ljmp
movsb
jae
jmp
scas
imul
stos
int3
iret
mov
in
out
scas
lds
adc
xchg
dec
push
in
sub
or
mov
jo
adc
sbb
or
filds
mov
pop
dec
cmp
movsl
xor
mov
jmp
dec
ret
test
das
jecxz
outsl
sbb
pusha
and
out
cmp
dec
imul
insl
lahf
in
cmp
pop
inc
pop
movsl
sbbl
lcall
cltd
out
aam
or
call
mov
push
sbb
jb
movsb
sub
jle
push
inc
into
stos
insl
cmp
dec
mov
mov
das
adc
fldenv
push
jmp
dec
iret
bound
xchg
sbb
pop
xor
dec
mov
mov
add
jae
jo
cmp
lods
mov
sbbb
jno
scas
sbb
mov
push
test
int
pop
out
sub
inc
aam
cltd
out
cmpsl
loope
sub
hlt
loopne
push
testl
pop
adc
fadds
sub
inc
cmovp
sub
cmpsl
mov
es
xchg
addr16
push
in
adc
divl
fnsave
int
mov
add
and
push
jmp
mov
jp
sub
fsubrl
je
sbb
sub
and
std
insl
fisubl
push
xor
pop
movsb
dec
cmp
mov
loope
mov
mov
pop
negl
aas
push
jecxz
je
in
and
ret
stos
rcrl
ljmp
push
nop
jg
js
lds
movsb
repnz
xchg
mov
ret
xor
sahf
popf
or
sub
call
fmull
fisttpll
add
out
or
aas
repnz
loop
nop
pop
mov
lds
sbb
push
bound
shlb
cmp
adc
scas
lcall
jl
dec
cld
mov
and
xor
push
add
push
mov
jns
daa
inc
addr16
pop
ficompl
add
sub
aas
sub
out
cmp
xor
adcb
mov
je
sbb
pop
jb
cmp
xchg
adc
mov
add
dec
push
in
mov
arpl
pop
xchg
jne
cmp
lahf
cltd
gs
stc
mov
xchg
dec
dec
addr16
push
mov
out
dec
dec
loope
add
arpl
test
inc
inc
stos
mov
adc
les
push
enter
outsl
outsb
jae
lods
faddp
imul
jns
outsl
roll
xchg
inc
leave
mov
iret
sub
xor
xchg
sbb
xchg
sub
mov
dec
pop
jl
mov
pop
and
lds
adc
test
decb
jmp
sahf
pop
shll
out
frstor
mov
lds
xchg
adc
int3
mov
add
mov
das
add
mov
lods
fcmovnb
mov
cmp
push
jp
shl
shll
pop
cltd
icebp
fxtract
xchg
xor
imul
cmc
jle
ret
push
in
lds
test
icebp
stos
les
mov
cmpsl
out
aaa
pop
pop
clc
bnd
xchg
loope
enter
call
cs
adc
out
fildll
xchg
dec
das
out
hlt
cmp
stos
dec
in
xchg
dec
fisttps
sbb
mov
sbb
add
je
push
push
imul
sub
aaa
and
js
inc
test
cmp
sbb
out
repnz
lods
scas
adc
or
mov
popa
sub
mov
icebp
cmpsl
inc
mov
rcr
icebp
inc
xorb
pusha
xchg
mov
loope
clc
sbb
mov
cmc
push
shrb
sub
mov
and
xchg
sub
jno
testb
dec
mov
mov
mov
xchg
xchg
out
in
sub
out
leave
mov
in
mov
push
mov
loop,pt
mov
in
in
je
out
das
sti
xchg
aam
push
test
add
mov
lahf
sbb
adc
outsl
ljmp
cmc
out
testl
aas
fnstcw
mov
dec
fsubl
mov
mov
in
mov
push
jns
mov
insl
mov
or
out
int3
inc
outsl
fidivrl
and
push
je
or
sbb
pushf
fstpt
add
jmp
or
mov
pop
dec
mov
mov
or
cltd
in
gs
mov
or
test
mov
mov
adc
iret
jle
jb
add
hlt
sub
fincstp
push
addr16
aaa
ljmp
fucomp
mov
inc
sbb
rcrb
cltd
pop
cmp
mov
add
cmp
or
mov
push
pop
push
test
lds
dec
pop
insl
xchg
aam
mov
inc
cltd
incl
test
stc
mov
mov
pushf
xor
test
xor
lcall
and
sahf
cld
sbb
test
mov
inc
sbbl
push
inc
push
jae
in
out
push
inc
outsl
or
mov
xchg
es
jb
cmp
fsubs
sub
ljmp
inc
mov
sbb
fbld
lods
pop
hlt
xchg
mov
in
stc
ljmp
push
xor
lret
mov
adc
insl
lcall
sar
mov
into
lock
aad
rorb
jae
dec
std
sub
les
push
lret
add
mov
outsl
dec
dec
addr16
pop
cmp
adc
imul
js
fucomip
mov
xor
daa
pop
cmc
mov
dec
jne
inc
pop
xorl
sub
shll
and
mov
lret
iret
dec
ret
pop
int
movsb
and
int3
jb
xor
mov
xchg
test
mov
test
jg
mov
inc
adc
stos
shlb
jge
cmp
gs
das
sub
loope
dec
push
push
jg
inc
call
into
addr16
fsubrs
test
mov
popf
xor
fmull
maskmovq
mull
jbe
pop
inc
and
pushf
dec
addb
mov
xchg
jg
cmpsl
addr16
push
imul
sub
inc
jno
push
clc
inc
jge
movsl
xchg
arpl
jp
adc
jecxz
fs
or
jge
dec
dec
bound
stos
sahf
leave
dec
aam
jns
jge
mov
rorb
push
hlt
pusha
lock
mov
pop
cld
or
adc
fisttpl
stos
mov
inc
popf
mov
in
fisubs
jle
mov
repz
mov
xchg
mov
lock
shrl
pop
xor
out
jmp
sbb
ds
fs
fst
mov
js
outsl
lcall
xchg
push
pop
inc
and
imul
jecxz
lods
cld
mov
ret
mov
adc
imul
je
adc
ret
daa
mov
dec
lods
dec
add
out
lods
cwtl
ss
jns
scas
into
inc
sbb
repz
xor
jne
rcl
mov
mov
pop
push
out
sub
popl
mov
cld
cmpsl
dec
mov
in
hlt
inc
cmp
test
popf
movsl
xchg
inc
pop
iret
add
sbb
nop
and
jb
xchg
in
add
push
sbb
mov
iret
pop
add
repnz
push
int
ss
mov
fdivp
jb
icebp
ret
loope
sub
pop
mov
outsb
mov
ds
cmp
inc
pop
inc
cmp
xchg
fs
sub
dec
cmpb
cmp
xor
push
movsl
pop
mov
ficoml
and
mov
adc
cmpsb
daa
mov
push
bound
jge
xor
adc
in
pop
not
jb
cs
scas
jae
mov
mov
dec
adc
cmp
imul
sbb
adc
or
sbb
stos
push
iret
inc
cmpb
rcrb
xchg
xchg
testb
out
mov
lret
aam
xlat
popf
or
sbb
inc
pop
cwtl
add
xchg
cmp
lods
lea
call
in
add
mov
jp
push
xchg
ret
insb
jo
jo
mov
jns
out
enter
xchg
lods
add
adc
sub
jno
out
inc
sti
mov
adc
movsl
lahf
idiv
enter
sbb
test
sub
sti
inc
push
insb
xchg
lods
mov
xor
fcompl
loope
icebp
xchg
cmpsl
int
jle
add
out
mov
sub
ds
xlat
adc
aam
popf
inc
andl
negl
sbb
imul
jbe
mov
mov
aaa
ljmp
fbld
out
xor
addr16
mov
or
xchg
das
mov
jecxz
lds
xor
iret
aas
xchg
mov
sahf
cmpsl
mov
dec
xor
cmp
mov
or
out
jl
call
rcr
stc
jg
mov
or
lret
imul
icebp
inc
jmp
cmp
push
andl
stos
push
sub
push
inc
xor
imul
inc
sub
xchg
xchg
mov
pushf
dec
lcall
adc
pop
and
addr16
pop
cltd
jmp
movsl
or
aaa
sbb
jmp
test
mov
cmp
pop
icebp
or
pusha
sub
leave
cmp
or
adc
lock
lds
dec
icebp
jne
add
into
xchg
repnz
xor
xchg
pop
jns
leave
mov
push
pop
dec
cmp
xchg
push
mov
add
pop
jl
sbb
mov
mov
inc
mov
xchg
clc
ret
test
mov
pop
push
mov
add
push
hlt
add
push
cwtl
lahf
jecxz
inc
les
dec
inc
cmp
inc
fsubrl
xor
mov
popf
fistpl
jmp
lea
ret
push
xor
push
pop
into
mov
xor
and
jecxz
shrb
out
pop
into
jo
bound
jg
lahf
int3
and
xchg
mov
enter
jg
sub
loop
gs
mov
push
sbbl
pop
out
adc
add
jo
mov
test
and
or
dec
in
pusha
inc
pop
fld
rclb
push
dec
sub
pushf
std
mov
mov
push
jo
mov
mov
inc
lret
int3
les
rol
pop
adc
daa
aaa
jo
pop
sub
imul
or
inc
fildll
and
jmp
inc
fiaddl
jle
mov
inc
pop
sbb
and
dec
outsb
insl
rorb
aas
cmpsl
imul
sarl
mov
sbb
push
cmc
in
mov
int
shr
lcall
push
dec
lock
ss
jb
ja
xor
sbb
in
lock
inc
mov
ljmp
loopne
dec
push
push
cltd
pushf
add
lods
ret
dec
fiaddl
adc
shlb
mov
adcb
add
test
xchg
daa
into
mov
ljmp
sti
xor
repnz
in
sub
xchg
rorb
jmp
int3
repz
xchg
lock
cmp
jnp
fimuls
jae
imulb
push
xchg
lock
shrb
sub
aad
mov
mov
mov
lods
aaa
fnstcw
mov
inc
lcall
loopne
test
cmpsl
insb
arpl
or
jecxz
lcall
push
clc
sub
push
or
movsl
and
ret
cltd
inc
repnz
fwait
sbb
add
inc
cs
mov
adc
adc
pop
dec
or
pushf
mov
pop
mov
and
inc
cmp
adc
lcall
sti
jnp
jecxz
lret
sbb
aam
ficoms
jge
add
sub
cmpsl
pop
loop
test
cmp
inc
sarb
pushf
mov
jp
sarl
mov
inc
imul
sti
addr16
int
xchg
push
outsb
hlt
in
sbb
aaa
cmpb
jo
lds
sbb
fldenv
add
out
mov
test
ss
and
add
addr16
sahf
rcrb
push
lock
sub
jb
mov
jne
mov
add
in
clc
mov
jb
xchg
cmpsl
mov
and
pop
mov
sbb
lcall
inc
fmull
dec
sbb
roll
insb
shlb
ret
dec
adc
test
mov
or
inc
xchg
stos
mov
fsubs
in
dec
in
cs
pop
div
test
sub
adc
loop
push
insb
out
and
or
pop
iret
sub
pop
repz
popa
xchg
aas
movsl
imul
rcrl
rcll
fistl
mov
stos
sub
lds
lods
and
sbb
mov
xchg
cmp
xor
mov
mov
mov
dec
or
fisubrs
dec
add
rcrb
leave
push
inc
jne
popf
xchg
fisubs
fcoms
nop
loopne
xchg
lods
inc
mov
insb
lds
in
rolb
rol
enter
movsb
aam
mov
mov
ljmp
mov
lahf
into
rcrb
icebp
xor
add
mov
flds
call
es
popa
mov
jmp
push
mov
adc
or
xchg
popf
mov
adc
scas
out
or
test
push
and
jmp
fidivrs
adc
ficoml
mov
xchg
lea
add
and
mov
add
push
mov
dec
cwtl
aam
insl
cmpsb
test
mov
das
pop
imul
and
or
loope
dec
out
jns
insb
pop
adc
xchg
sub
cwtl
or
out
xchg
add
mov
js
test
sub
nop
xchg
inc
jge
push
pusha
sub
in
sub
adc
lods
push
daa
dec
push
je
orb
jmp
rorb
and
mov
dec
fcompl
arpl
jno
mov
mull
stc
pop
xchg
les
mov
movsb
or
fstl
dec
push
xchg
inc
mov
xor
pop
and
and
lods
mov
mulb
idivl
or
neg
fisubs
xor
jmp
mov
cmp
lahf
or
push
fnsave
cs
int
pop
in
push
dec
mov
adc
fs
popa
shrb
jno
jae
in
rcrb
mov
sub
fcomp
loopne
sti
cmp
outsb
dec
sub
stc
fsubl
or
cltd
push
popf
js
mov
jo
les
ret
mov
xlat
and
jns
movsl
jle
jge
inc
pop
jns
in
jmp
sbb
or
aam
roll
out
adc
mov
push
lret
fildll
je
pop
enter
loop
pop
mov
in
repz
scas
aas
pop
ficoms
jmp
adc
outsb
fildll
loop
dec
add
push
inc
mov
sbb
idivb
cmp
push
int
lcall
out
mov
dec
pop
mov
jmp
leave
icebp
ficoml
push
sub
adc
imul
jb
cltd
lds
out
lods
xchg
mov
push
les
jle
push
pusha
call
jae,pn
push
or
cmp
cmp
mov
push
lea
mov
gs
cs
pushf
shl
jo
pop
xchg
xlat
pop
dec
loope
cmpsb
ror
add
int
rol
inc
in
in
add
mov
fidivl
push
clc
out
add
dec
ja
xor
imul
xchg
lret
sbb
outsb
aaa
push
push
pop
fisttpll
lcall
lret
mov
dec
xor
mov
xchg
pop
gs
aas
jecxz
or
jae
fcmove
das
imul
dec
lock
mov
cmp
ss
xor
mov
xchg
inc
call
stc
push
fstpl
aad
dec
out
imul
mov
add
nop
mov
cs
icebp
nop
cmpxchg
mov
cmp
popf
jno
repz
movsl
sub
mov
push
inc
lds
fwait
adc
pop
pop
insl
adc
int
sub
push
xor
xchg
cmpl
fdivs
push
push
mov
rclb
jmp
adc
nop
jmp
es
xor
push
and
mov
dec
cmp
sbb
push
sbb
mov
or
adc
mov
sbb
inc
movsb
sbb
cmpsb
add
mov
cmp
mov
adc
sbb
add
cmp
dec
addr16
lret
lea
xor
fsubrl
int3
ja
test
movsl
iret
cmpl
stos
insb
mov
insl
popa
mov
dec
clc
xor
clc
push
inc
push
jge
jmp
inc
jecxz
inc
inc
dec
stos
mov
pop
dec
in
pop
out
jp
sahf
int
adc
push
mov
push
adc
stos
jge
push
pop
or
movsb
imul
xchg
ljmp
mov
lods
dec
outsl
xchg
outsl
ljmp
jae
bound
push
cmpsb
cmp
mov
inc
add
cmc
xor
out
lock
adc
sbb
mov
addr16
jge
inc
mov
add
movsb
and
pop
xor
inc
pop
cltd
rolb
ret
clc
sub
cwtl
mov
adc
scas
jl
xor
cltd
adc
xor
mov
loopne
mov
leave
sbb
inc
cmpsl
enter
mov
pop
outsb
adc
inc
add
inc
stos
jl
cltd
and
es
fdivrl
in
dec
popa
mov
adc
lock
mov
test
jecxz
xor
lock
mov
insl
dec
inc
xor
cs
movsl
xchg
roll
adc
add
fs
fldenv
gs
insl
and
test
cmp
imul
inc
ret
mov
fst
jnp
ret
mov
mov
test
cltd
push
or
es
aas
loope
or
add
or
jg
push
pop
jno
fsts
sbb
xchg
push
inc
in
pushf
stos
movsb
lods
mov
mov
xor
push
dec
mov
out
xchg
movsl
xchg
test
cmp
aad
dec
ljmp
sub
mov
outsb
stc
xchg
sub
mov
push
js
insl
jns
rcl
dec
rclb
xor
lcall
scas
ret
add
pop
mov
das
mov
add
dec
into
mov
lods
jae
ljmp
sbb
mov
icebp
getsec
sbb
jge
outsb
xchg
cmpsb
push
or
fiaddl
xor
inc
out
scas
push
push
mov
fs
jp
push
push
rcrl
xor
xchg
popf
fcoml
popa
ss
iret
xchg
out
gs
xor
sub
lods
and
aam
outsl
xchg
lret
int
scas
sahf
add
repnz
stos
test
push
push
ds
adc
pop
aad
jo
add
cmc
dec
xor
xor
push
nop
dec
iret
push
scas
pushf
inc
or
xor
jno
aas
popa
sbb
in
cmp
ret
addr16
cmp
mov
icebp
mov
ret
xor
xor
cmp
fisttpl
mov
stos
push
arpl
outsl
xchg
xchg
scas
add
and
dec
xchg
hlt
push
fsub
mov
cmp
cmp
ljmp
jnp
dec
sbb
icebp
mov
je
xor
hlt
jle
mov
sub
inc
arpl
mov
inc
push
js
inc
xor
int
lret
scas
add
aad
or
inc
fwait
or
leave
or
jl
add
daa
or
dec
fwait
pop
repnz
inc
push
mov
adc
pop
pop
add
icebp
imul
fmuls
mov
in
xlat
or
or
xchg
bound
mov
or
stos
aas
fldt
lea
mov
push
shrl
data16
test
lea
push
xchg
mov
sbb
fwait
jge
movsb
jl
push
shll
mov
mov
xchg
sti
dec
push
or
push
mov
fisubrs
mov
inc
add
cld
dec
xlat
std
aaa
aaa
ja
lret
mov
inc
inc
mov
jge
es
pop
dec
insl
adc
xchg
jmp
fistps
push
or
movsb
mov
orb
in
aas
mov
nop
adc
add
cwtl
inc
mov
push
fists
in
mov
jmp
popf
mov
sbb
std
sub
adcb
xor
sub
movsl
xchg
iret
aas
mov
cld
push
push
adc
hlt
shl
stc
mov
or
cmp
push
push
test
aas
lret
mov
xchg
sahf
movsb
jo
inc
int
jb
inc
in
outsl
fists
stos
jl
sar
xchg
mov
shll
out
lods
addr16
and
int3
lock
mov
icebp
jge
mov
mov
mov
sti
cld
adc
or
mov
push
shlb
repz
rorb
mov
sub
push
cmp
imul
xchg
or
push
icebp
xor
and
sbb
dec
or
lods
mov
add
pop
out
or
push
shl
cmp
in
pop
fnop
inc
jle
jnp
push
xchg
mov
lea
pop
fwait
pop
push
ds
jnp
lea
sbb
int3
or
imul
jle
pop
sub
pop
cmp
popf
ds
push
stos
mov
mull
ss
sahf
jle
repz
cld
insl
cmc
jo
pop
lret
mov
mov
cwtl
fcmovb
shrb
lret
mov
jmp
imul
inc
jg
movsl
dec
xor
mov
sub
inc
sahf
insl
sub
std
arpl
mov
stos
popf
jp
and
jp
in
dec
xor
gs
add
adc
xchg
lret
jg
adc
in
and
mov
daa
xor
xor
sbb
rcrb
sahf
and
jae
adc
out
push
jle
add
int3
cmp
iret
adc
scas
out
out
xchg
jg
jns
out
ret
adc
or
loop
and
repz
rol
sti
mov
jb
enter
xlat
cmpsl
cld
and
loop
sub
xor
ret
sub
in
ret
jne
aam
push
pop
mov
and
xchg
dec
test
adc
adc
adc
pop
stos
dec
xchg
rcr
daa
cmpsl
in
push
mov
add
mov
dec
add
sub
divb
ss
ja
xchg
or
out
je
dec
imul
sub
push
es
push
mov
fs
fidivrs
cs
cmpsb
stos
push
test
mov
jbe
fwait
jbe
iret
addl
mov
dec
mov
mov
ds
push
adc
add
add
out
out
mov
lock
enter
add
test
cmpsl
adc
push
pop
pop
cmp
fildll
data16
cli
mov
xor
and
push
sti
cmpsb
stos
daa
in
xchg
push
pop
scas
add
ljmp
push
std
sub
sub
aas
sbb
sbb
ss
popa
jp
outsb
sti
xchg
xor
push
cwtl
outsb
sbb
les
pop
lock
lds
fsubrl
mov
dec
scas
jmp
pop
pop
out
mov
jg
xor
mov
fisttpll
pusha
push
sbb
loopne
bound
sub
mov
xchg
test
sbb
lcall
mov
das
sbb
pop
mov
sarl
lods
sub
or
xchg
add
int
or
cmc
mov
push
call
xlat
lods
ljmp
jnp
xchg
dec
jmp
mov
cmp
mov
subl
out
sub
mov
push
pop
rorb
xor
loop
add
clc
and
dec
mov
sub
sub
add
cmp
aas
insb
int3
or
pop
cwtl
push
mov
sub
inc
gs
popf
dec
ja
mov
mov
cld
xlat
inc
or
cmc
lods
out
push
adc
cmc
fdiv
inc
add
cmp
and
adc
sub
sub
mov
inc
lcall
dec
adcb
xchg
fwait
sarb
sub
insl
cltd
in
cmp
dec
test
cmpl
sbb
jle
lcall
sub
hlt
mov
lcall
xor
pop
dec
enter
jnp
inc
ret
mov
and
out
int
fdivl
or
adc
fdivrl
pushf
insl
dec
sbb
and
add
mov
jno
and
fisubs
mov
out
dec
mov
jno
sub
pop
mov
das
cmpsb
aas
popa
pop
aad
cli
iret
or
push
pop
out
icebp
mov
sbb
adc
sbb
inc
mul
loopne
mov
insb
adc
sahf
adc
and
mov
movsl
dec
pop
pop
scas
outsb
pusha
jmp
cwtl
mov
mov
lcall
xchg
stos
or
incl
cmp
xchg
mov
pop
push
ja
push
mov
std
dec
or
pop
xchg
mov
push
nop
test
xchg
imul
lea
jp
sub
shll
or
jecxz
sub
mov
adc
je
jmp
fisubs
dec
push
out
cmp
mov
jns
xor
sti
enter
push
pop
les
out
dec
xchg
ljmp
stos
mov
inc
cmp
push
push
mov
xor
mov
cld
in
fdivrs
clc
lods
dec
bound
ss
dec
or
sub
sbb
gs
cmpsl
xchg
stos
addr16
inc
lock
cmp
mov
aam
rolb
adc
leave
inc
dec
push
jbe
and
test
dec
je
stos
pop
cmp
xchg
jo
inc
fmull
lods
scas
outsl
push
mov
jmp
js
and
cmp
sub
sub
pusha
popl
push
shl
shlb
mov
push
cltd
push
imul
mov
pop
stos
xchg
push
xor
fidivs
ret
jb
or
fwait
ds
jmp
aam
fstl
call
xchg
mov
jp
or
inc
push
scas
cmp
adc
xchg
jo
cs
push
xchg
or
or
dec
xlat
jl
jae
out
test
das
or
ja
imulb
inc
add
enter
add
insb
cs
movsb
push
mov
mov
pop
mov
dec
xor
push
mov
sub
cmc
sub
sub
mov
jmp
repz
push
mov
pop
cmpsb
daa
jl
loopne
xor
xchg
fistpl
mov
lods
ljmp
insl
cmp
sub
mov
cltd
das
pop
fcompl
js
mov
outsl
out
lret
inc
sahf
aam
mov
cmpb
mov
lret
lahf
mov
out
mov
cld
icebp
jg
jmp
and
mov
mov
push
fstpt
inc
sahf
bound
out
daa
mov
rorl
mov
repz
insl
gs
push
daa
std
mov
ja
add
mov
lret
xor
insb
jg
sbb
icebp
jecxz
cs
xchg
xor
daa
jns
jmp
out
out
pop
jb
scas
jmp
add
rcrb
or
ficomps
and
jb
in
xor
arpl
add
jo
testl
stc
jnp
mov
or
hlt
pusha
cmpsl
inc
repz
mov
leave
int3
ficompl
rcrb
ret
and
shll
sahf
jne
fldenv
psllq
jge
data16
leave
adc
and
push
and
leave
ret
aad
and
cmp
mov
mov
lret
push
cmp
mov
into
dec
fcmovbe
ds
or
xor
xor
lea
add
dec
leave
ret
jecxz
sub
and
mov
int
and
inc
fdiv
jmp
sbb
push
jo
call
mov
lds
push
divb
xchg
dec
int3
dec
sbb
lret
ret
fisttps
sub
xchg
add
mov
mov
out
fucomip
ret
mov
jb
cmp
and
and
dec
in
cltd
push
or
or
sub
dec
pushf
lea
leave
stos
loop
pop
xchg
jge
sbb
pop
xlat
xor
and
mov
stc
pop
cmp
pushf
pop
xlat
sti
add
xor
movsl
outsl
shlb
jae
cmp
testl
repz
xor
das
mov
dec
mov
cmc
mov
mov
stos
mov
std
test
inc
int3
jmp
mov
add
mov
icebp
loopne
pop
inc
jno
out
shll
mov
pop
adc
hlt
lods
mov
je
sarb
add
cltd
pop
add
jo
test
cltd
test
or
dec
mov
jmp
pop
push
and
sbb
adc
int
jl
dec
test
push
gs
sub
ds
dec
mov
sahf
sub
jns
stos
dec
ret
sub
fwait
push
jno
push
aam
hlt
cmpsl
cli
bound
jns
sub
xchg
sub
out
data16
into
mov
push
std
sbb
and
repnz
jo
mov
test
cld
ret
mov
xchg
imul
mov
gs
dec
push
push
notb
repz
mov
pop
mov
mov
mov
cmp
pop
sahf
inc
mov
inc
loope
outsb
imul
mov
add
ljmp
movsl
repnz
movsb
idivb
ret
rcrl
fbld
sbb
fwait
dec
pop
mov
xchg
pop
pop
ficoms
sub
mov
enter
cmp
ss
add
stos
cmp
adc
cmp
xor
xchg
push
cmp
or
cmp
cmp
pop
ljmp
ss
clc
inc
lahf
xchg
cli
push
add
pop
addr16
daa
sub
insl
dec
mov
pop
in
hlt
inc
add
cmp
fcoml
rcrb
cmc
lods
and
jno
mov
cs
xchg
inc
jae
icebp
pop
mov
mov
jne
jmp
call
rclb
test
sbb
fadds
lods
jmp
mov
adc
lods
sbb
mov
xchg
jmp
push
cmp
jge
jae
pop
xor
mov
movsl
mov
dec
shl
pop
lods
push
mov
lret
sbb
adc
in
das
mov
daa
mov
clc
pop
ds
jae
pop
sub
loope
add
sub
cwtl
xlat
fistl
jne
aam
dec
fldl
jle
xor
xchg
jnp
aas
add
sbb
lret
pop
and
cmpsb
dec
dec
adc
out
or
add
pop
aam
sbb
pushf
fstp
pop
jo
adc
icebp
in
divl
scas
bound
xor
nop
repnz
stos
insb
pop
jle
rcr
mov
enter
adc
fidivs
nop
stos
adc
ret
scas
aas
clc
mov
fcomps
or
out
mov
jo
ja
jecxz
and
test
lock
cmp
loope
dec
push
mov
lods
lcall
sbb
aad
sbb
sbbl
mov
mov
arpl
icebp
inc
push
xchg
cmp
mov
adc
lahf
scas
cwtl
mov
iret
xor
push
les
out
and
fldcw
dec
outsb
push
lds
in
and
pop
lds
inc
add
filds
fwait
out
xor
xor
or
sbb
imul
mov
cmp
fwait
repnz
test
push
fcomps
and
xchg
cmp
cmp
sub
mov
mov
icebp
xchg
imul
in
sbb
pop
sub
xor
mov
das
sahf
push
push
shrb
mov
out
push
mov
sbb
push
les
push
sbb
xchg
jp
mov
rolb
std
aaa
out
aas
iret
or
outsb
mov
scas
push
inc
jnp
mov
cmp
icebp
sub
stos
cld
subw
mov
fisubrs
int3
loope
mov
sub
lret
lcall
cwtl
loope
lods
xchg
mov
and
cmp
or
in
cltd
ss
mov
push
xor
inc
call
fdivl
aaa
clc
enter
push
insl
xor
inc
mov
push
mov
lahf
inc
aam
mov
sbb
popa
or
inc
mov
arpl
daa
lods
xlat
and
shlb
in
js
cmc
negb
jnp
and
sahf
jno
push
fucomp
mov
call
inc
sub
ss
pop
pop
lcall
jns
int3
loope
iret
xchg
jl
rol
mov
into
push
notb
test
lea
dec
nop
sub
loope
push
add
test
lods
add
aaa
sbb
outsb
mov
adc
xchg
repnz
mov
mov
fdivrs
pop
jne
or
repz
lock
lret
mov
xchg
arpl
mov
out
sub
push
pop
in
mov
int
cmc
mov
test
or
inc
xchg
or
imul
mov
and
cltd
lods
jb
push
ljmp
ror
push
or
loope
popf
mov
cltd
xchg
adc
adc
fsubp
pop
xchg
jne
inc
dec
orl
in
adc
dec
pop
add
sbb
jae
sub
insl
sbbb
xor
std
arpl
mov
xchg
nop
rcl
xor
cltd
aaa
dec
xor
fimuls
lcall
push
pop
sub
fisubl
frstor
dec
cltd
mov
pop
mov
add
sub
sub
and
sti
into
imul
and
jbe
mov
push
sub
push
cmp
jp
fwait
lcall
add
xor
arpl
movsb
pusha
push
in
or
xlat
in
xchg
lods
insb
in
jnp
rcl
enter
push
rorb
xor
jp
cmpl
pop
cmp
int
in
fdivl
shl
loop
mov
sbb
or
movsb
repz
imul
pop
fisttpl
xor
call
pop
mov
xchg
mov
cltd
mov
push
sub
mov
pop
jo
cmc
leave
push
mov
ret
jbe
jae
mov
clc
add
push
ljmp
jbe
and
call
or
std
lret
cld
les
add
enter
insl
jb
mov
stos
pop
imul
jno
dec
mov
mov
nop
add
testl
outsl
mov
sub
outsl
into
sub
add
ds
fidivrs
setno
shll
repnz
xchg
mov
aas
lret
sahf
pushf
shrl
xchg
fdivr
in
arpl
adc
xor
and
and
fiaddl
mov
aad
out
xchg
mov
adc
ret
pushw
icebp
or
lods
pusha
inc
add
out
jnp
dec
or
or
divb
mov
leave
lea
add
cld
adc
je
dec
add
repz
and
outsl
cmp
sbb
push
sbb
jnp
jno
int3
rcll
mov
sar
or
pop
hlt
jl
in
outsb
sbb
fistpll
ds
or
dec
cli
stos
cmp
aam
cmpsb
lcall
sbb
fstp
ret
hlt
stc
cld
fcompl
xor
push
xlat
ret
out
sbb
clc
sub
xchg
aad
mov
and
pop
scas
rcl
xchg
mov
in
inc
int
jns
sub
mov
mov
jnp
nop
inc
push
jo
cmp
push
jno
jp
add
mov
aam
pop
fiaddl
cmc
imul
xlat
xlat
test
cwtl
jne
mov
sti
jbe
cmp
push
inc
pop
push
divl
enter
outsl
jmp
das
shrb
jo
mov
cmp
test
subb
inc
adc
daa
mov
fmul
jp
shlb
daa
in
pop
mov
mov
mov
pop
mov
ss
js
mov
notl
jge
movsl
cmp
sub
pop
pop
mov
dec
or
in
dec
inc
icebp
cmp
or
mov
aad
sub
arpl
or
mov
sub
jbe
sahf
add
mov
xchg
dec
out
sarl
xor
into
push
jp
aam
mov
mov
xchg
mov
mov
jp
fstpt
daa
sbb
inc
roll
or
movsl
fistpl
shlb
aam
inc
adc
jnp
test
add
jne
cmpsb
bound
sbb
jmp
shl
shlb
cs
test
insl
mov
mov
push
push
sti
push
mov
add
fstpt
and
fldenv
pop
cmp
pop
sbb
cmc
pop
or
or
cmpsl
outsl
pop
std
mov
jmp
mov
add
pop
std
or
push
add
lret
sbb
or
and
imull
mov
je
je
fnstsw
push
ss
lahf
repnz
mov
mov
sub
pop
cmpsb
loope
and
movsl
in
sarl
jae
mov
mov
push
push
mov
push
das
add
stos
enter
and
in
jbe
jmp
out
test
test
sbb
sti
sbbl
adc
mov
jno
xchg
push
mov
pushf
movsb
fldenv
adc
pop
frstor
call
insb
adc
dec
pop
mov
pop
push
mov
inc
lahf
fildl
add
cmpsb
aas
mov
rcrl
sub
test
in
pop
adc
mov
xor
iret
shll
or
sbb
pop
mov
cmp
xorb
xor
push
nop
repnz
or
out
sbb
ret
icebp
repz
int3
sub
mov
xchg
sub
js
in
add
rclb
dec
lahf
adc
imul
sub
insb
mov
fs
stc
jle
cwtl
cwtl
dec
test
addl
mov
std
cmp
icebp
cmp
ret
sub
enter
fdiv
fcmovnu
imul
sbb
xchg
and
mov
aam
adc
fadds
stos
sbb
push
xor
aaa
loope
scas
outsb
pop
cmp
fidivrs
cmpsl
jmp
add
xor
push
inc
shlb
lods
in
aad
xor
outsb
adc
stos
pop
and
loop
xchg
or
js
insl
push
sbbb
sub
mov
sub
imul
pop
shr
mov
jmp
add
xchg
sbb
jmp
add
sbb
mov
push
cwtl
andl
int3
outsb
enter
or
mov
sbb
xchg
cltd
div
mov
fildl
mov
jno
mov
add
mov
lahf
lock
test
cmp
sbb
mov
mov
and
lcall
add
inc
push
mov
cli
sbb
xchg
pop
jo
mov
xchg
aas
je
std
inc
rcll
popf
and
add
adc
rcll
push
adc
nop
test
std
aad
xchg
sub
mov
inc
sub
xor
aaa
push
jo
iret
js
movsb
dec
push
dec
popa
es
pop
mov
ret
xor
stos
sub
push
sub
fwait
mov
jge
mov
andl
aam
add
inc
rorb
ljmp
mov
rclb
push
in
sub
ja
sbbl
jge
fcmovnb
jb
loop
fucomi
ljmp
and
cmpsb
adc
sbb
fidivrl
inc
int
sbb
mov
stc
mov
cmp
adc
jmp
inc
push
addr16
js
inc
mov
adc
sub
jge
jge
nop
rcrl
leave
imull
ficoms
push
xchg
test
cmp
aam
std
push
sub
xchg
sbb
mov
nop
mov
add
sbb
and
sahf
cs
sbb
pop
rcrl
xchg
cs
adc
adc
or
mov
idivb
lcall
lcall
mov
push
lahf
fnsave
push
addr16
xlat
in
rclb
xchg
mov
lcall
mov
inc
dec
jne
mov
or
dec
add
dec
fldcw
ss
cli
negb
int
cmc
movsl
xlat
mov
gs
out
das
test
stc
jae
int3
pop
fadds
mov
cltd
out
xlat
cmp
push
or
dec
lods
push
dec
daa
mov
loop
insl
cwtl
push
ficoms
jmp
bound
jb
in
and
sahf
mov
cmp
jmp
xor
or
adc
mov
in
stos
fs
pop
push
inc
sbb
xchg
in
fdivp
mov
sar
lds
out
mov
out
dec
mov
mov
xchg
adc
jae
fimuls
sbb
xchg
bound
outsl
xor
xor
fdivl
not
aad
push
jno
xor
sub
sub
repnz
cmpsl
int3
repz
mov
push
xor
sbb
jle
sub
push
aam
inc
stos
stos
dec
int
insl
push
xor
das
jmp
cmp
repz
mov
fdiv
or
xor
pop
das
push
lock
outsb
add
icebp
flds
xchg
mov
outsb
xor
ret
popf
rcll
ror
xor
and
lds
push
test
lds
and
or
sarl
loope
xlat
jnp
pop
test
loope
cmp
mov
and
fcomps
mov
cmp
jo
jmp
mul
mov
std
pop
popa
je
aam
fldt
push
jnp
cmc
outsb
sub
dec
mov
xchg
insb
iret
or
repnz
ret
mov
out
dec
fists
dec
xor
loopew
cmp
bound
xor
inc
jne
repnz
aaa
push
xlat
inc
xchg
dec
jo
fistl
scas
xchg
lods
or
xchg
mov
test
xchg
sbb
mov
jg
or
imul
cs
pop
push
daa
out
cli
cmp
aam
ds
icebp
popf
push
test
pop
xchg
and
or
jmp
test
and
dec
bound
clc
movsb
outsl
or
sub
xchg
hlt
sub
movsb
push
mov
push
das
push
mov
cmpsb
cmc
int
jle
pop
clc
bound
mov
insl
sub
test
dec
divb
adc
iret
push
les
push
sahf
outsb
fildl
ret
sbb
and
or
inc
mov
pop
sbb
dec
rcrb
pop
outsb
mov
and
mov
pop
inc
sbb
mov
xor
xchg
dec
faddp
nop
xor
cmp
mov
dec
jmp
shrb
lds
adc
push
fwait
jle
jae
push
mov
mov
fidivrs
daa
cmp
outsl
mov
rcl
outsl
xchg
sbb
pop
and
int3
es
mov
push
idivl
les
ljmp
cmp
popl
repz
pop
int3
jnp
mov
out
insb
and
xor
adc
pushf
jno
pop
movsb
pop
inc
pop
mov
fidivl
mov
repnz
aam
ss
pop
pop
enter
and
jge
stos
repz
and
push
push
lret
cwtl
ss
xor
ljmp
int
movsl
push
andb
popf
repnz
sbb
clc
mov
mov
mov
fisttpl
jl
cmp
xchg
and
sbb
mov
push
mov
xchg
mov
jne
sti
lods
jl
push
jae
and
js
or
leave
adc
psllw
sbb
mov
xlat
aaa
add
jbe
lret
xchg
fistpll
jmp
lods
sti
mov
adc
in
inc
jb
movsl
xchg
sbb
mov
add
sbb
das
xlat
xor
add
je
nop
clc
rcll
or
cmp
out
push
loope
mov
mov
mov
mov
fcmovnu
jns
push
cmp
lods
sub
push
in
scas
sar
cld
lret
push
daa
mov
stc
lret
loop
sub
xchg
mov
mov
and
xor
xor
pop
popf
push
xor
sbb
cmp
jno
ds
xchg
mov
dec
hlt
pop
xor
imul
push
mov
mov
and
andb
mov
dec
aam
in
ja
rol
das
test
and
sbb
lock
jp
add
popf
in
stc
push
mov
jns
jns
shll
test
adc
mov
xchg
out
out
scas
pop
jl
icebp
mov
xlat
int
clc
xor
daa
xor
push
es
jmp
fisubs
loopne
inc
jl
adc
fsubrl
jb
leave
mov
mov
pop
sbb
mov
jecxz
pop
test
jp
push
into
xchg
ds
and
xor
sar
sbb
popf
jo
mov
mov
int
fld
pushl
ja
xchg
sahf
xor
movsb
and
dec
and
test
nop
outsl
jle
aaa
xchg
mov
sahf
cmpl
xchg
stc
sub
mov
lock
repnz
and
cmp
fisttps
fisttpll
test
or
jge
mov
pop
xchg
adc
mov
js
xchg
enter
push
jae
lahf
push
jnp
ss
aas
gs
sub
push
je
pop
xchg
lock
nop
lods
mov
pop
push
mov
mov
pop
daa
outsb
cmp
jb
rcl
jb
in
orb
add
xor
mov
dec
aas
xchg
pop
cs
cmp
push
fdivl
stos
out
clc
or
aas
add
mov
in
ljmp
stc
js
ret
push
out
mov
movsl
ret
out
xor
pop
fsubs
roll
lahf
inc
fisubs
int
out
shlb
sbb
jmp
out
xor
xor
das
adc
jmp
testl
mov
in
xchg
aam
or
pop
testl
icebp
test
stos
push
imul
dec
cmp
pop
js
cmp
test
xor
fs
mov
cs
push
in
mov
test
push
out
add
jle
lahf
leave
sub
and
mov
aaa
ljmp
fnsave
xchg
and
jb
imul
inc
xor
inc
fidivs
mov
bnd
add
push
out
leave
mov
fs
fdivr
mov
daa
add
popa
out
dec
push
and
fsub
pop
pop
inc
or
stos
xor
enter
sti
jbe
aam
cmp
out
xor
cltd
in
jp
iret
pop
pop
mov
loope
orl
sbb
subb
push
iret
clc
decl
addb
pop
jle
mov
stc
push
xchg
add
add
xor
sub
inc
sahf
xchg
addr16
dec
sub
in
fldenv
shrb
or
sbb
int
mov
mov
mov
cmp
push
scas
stos
inc
or
out
mov
ret
popa
arpl
mov
lds
insl
es
cli
gs
and
outsb
inc
stos
inc
push
pop
imull
icebp
out
cmp
inc
xorl
lcall
daa
sub
cmp
mov
xchg
cs
mov
add
inc
inc
push
push
jmp
xchg
dec
adc
sub
xor
notl
sbb
xchg
xchg
mov
dec
outsl
or
dec
cs
mov
cmc
pop
neg
je
xorb
jle
mov
jb
sub
sub
xchg
add
mov
in
incl
in
fs
mov
push
jecxz
imulb
push
hlt
fildll
or
js
imul
cmp
in
or
mov
addr16
inc
xor
addr16
cs
rcll
popf
sbb
insb
cmp
fisttpll
mov
xchg
lods
mov
cmpsl
imul
lock
lret
in
pop
inc
mov
mov
test
xor
cld
imul
jle
xchg
push
mov
es
mov
scas
inc
xchg
fistpll
mov
jns
stc
inc
add
mov
add
add
hlt
arpl
or
fwait
pop
fisubl
dec
outsl
inc
push
xchg
sarb
jo
adc
ss
push
ror
cmp
int
js
xchg
or
ja
insb
dec
mov
inc
out
scas
les
mov
jo
aas
bnd
push
js
addl
movzbl
loopne
inc
cmp
pop
imul
sbb
xsha256
cmpsb
xchg
lahf
aad
jmp
loopne
push
cmp
orb
and
xchg
push
inc
xchg
mov
jns
push
sbb
insl
xor
stos
cmp
adc
or
or
ljmp
insb
aam
xchg
out
int3
mov
sbb
add
dec
dec
sub
mov
add
push
jns
loop
sub
mov
pop
loopne
and
das
and
enter
cwtl
dec
ss
rclb
and
mov
push
pop
mov
jbe
cld
jbe
dec
paddusb
jb
fwait
xor
push
push
out
test
fs
icebp
stos
arpl
cmp
repz
scas
sbb
inc
inc
mov
inc
xor
icebp
insb
lret
or
fcoml
ret
sbb
mov
hlt
repz
lods
mov
and
mov
fnstsw
cmpsb
fmuls
movb
sub
and
push
rcll
test
mov
das
jecxz
call
fnstsw
insb
jg
in
or
jno
pop
pop
mov
mov
inc
scas
ret
sbb
and
seto
sbb
call
dec
cltd
pop
push
in
popf
filds
adc
push
stc
aaa
adc
fwait
push
loop
lods
cmp
mov
add
or
inc
xchg
adc
mov
fcomps
lods
adc
lcall
xor
pop
scas
inc
push
mov
xchg
pop
xchg
push
sub
loop
jno
addb
loop
les
dec
adc
mov
es
push
lock
mov
push
ror
cmpsb
pop
sub
jmp
jmp
xchg
mov
in
or
out
dec
xchg
imul
hlt
cmp
stos
pushl
mov
jl
mov
pop
cmp
loop
imul
insb
or
leave
sbb
or
lea
mov
mov
mov
and
in
stos
add
and
sub
test
mov
sub
mov
fistpl
scas
in
pop
pushl
sub
addr16
ds
adc
push
jo
les
adc
fistps
cmp
pop
mov
mov
loope
xchg
int3
stos
xchg
jmp
out
or
movl
shlb
push
iret
scas
xchg
xchg
add
inc
adcl
cmp
pop
or
imul
imul
fdivrs
adc
pusha
inc
mov
stc
inc
push
das
adc
or
pop
push
imul
aam
adc
outsb
lea
jecxz
int3
mov
mov
ja
ffreep
mulb
or
fisubl
outsw
jnp
sbb
mov
sub
iret
jae
roll
mov
mov
mulb
pop
mov
ret
imul
or
aam
push
adc
dec
and
mov
loope
cmp
fwait
xor
pop
cmp
push
sub
lret
lock
adc
jno
jge
scas
pop
ss
enter
inc
fiaddl
or
mov
xor
inc
pop
or
jl
sbb
js
xor
pop
fsubr
imul
out
iret
inc
sarb
das
or
jno
cld
sub
ret
ja
inc
adc
jmp
jnp,pn
fucomp
shrb
mov
rcrb
pop
stc
mov
sbb
dec
pusha
jl
rorl
imul
bound
dec
lcall
test
xchg
mov
in
xor
fsub
and
test
mov
push
outsb
test
lret
mov
dec
das
fnstcw
adc
mov
sbb
nop
dec
dec
jmp
stos
pop
mov
repnz
sbb
xchg
jb
dec
loopne
push
xchg
push
aam
shlb
and
push
mov
mov
ja
mov
shll
mov
add
inc
gs
lret
pop
pop
sbb
jp
pop
mov
pop
xchg
daa
rcrl
add
fwait
sub
mov
mov
mov
daa
adc
sub
xor
dec
push
adc
jecxz
jo
jl
insb
xor
out
mulb
sbb
movsl
int
push
clc
shl
gs
mov
push
sahf
cmc
pop
add
subl
cmp
inc
xor
clc
cmp
xor
in
insl
push
lret
test
and
sbb
jmp
mov
jl
cmp
inc
pop
call
icebp
xchg
adc
lret
out
cli
add
insl
lahf
sub
dec
inc
mov
sub
dec
pop
fs
xor
pop
pop
push
sti
adcl
inc
dec
mov
and
loope
push
fcmovnu
xchg
push
xor
dec
xchg
lds
pushf
adc
sub
test
addr16
xor
or
push
stc
push
dec
ficompl
push
jno
pusha
mov
sub
mov
popa
xchg
sbbb
lds
adc
fimuls
push
repnz
xor
inc
pop
pusha
std
inc
xor
sbb
mov
repz
out
dec
cwtl
fucom
sbb
icebp
std
jae
sbb
inc
xchg
sub
loop
adc
add
inc
push
xor
out
mov
popf
xor
out
mov
loop
ss
mov
outsb
jno,pt
cli
aam
das
jp
and
loope
sbb
jb
mov
ja
cmpsl
pop
cs
iret
test
stos
cmp
pop
jns
cmpsl
jmp
lcall
jae
movsl
movsl
iret
sub
loop
cmp
jno
pop
int
mov
repz
cmp
adc
cmp
add
ds
dec
inc
aad
add
gs
xor
cmpsl
fidivl
pop
mov
xor
fidivrs
push
dec
add
jecxz
mov
and
cmp
cmpsl
dec
or
xchg
mov
and
aaa
arpl
addr16
daa
cmp
mov
push
dec
and
ljmp
mov
fildll
ja
int3
pop
xchg
stos
sbb
rcll
ret
ljmp
pop
xor
das
push
adc
cltd
stos
movsb
js
pop
inc
ret
jb
push
lcall
into
inc
lcall
jmp
add
xchg
ret
sub
sub
aas
rolb
std
test
xchg
rcll
sub
push
repnz
lds
pop
mov
lock
sbb
sbb
sub
xor
ret
mov
clc
push
dec
out
ds
cmp
incb
sbb
or
arpl
test
xor
pop
mov
add
aaa
mov
lahf
sbb
mov
mov
fdivrp
xor
adc
stos
shll
add
sbbb
cmc
push
xchg
loop
out
cmp
xchg
sbb
xchg
out
mov
cmp
add
shl
pop
mov
leave
jb
rcll
cmpsl
dec
insb
adc
cmp
aaa
mov
ds
icebp
mov
lock
jno
pop
push
mov
cmovg
xchg
xchg
mov
rorl
cmp
out
inc
popa
jnp
mov
mov
cwtl
sub
push
sub
mov
fwait
push
cs
inc
adc
jno
push
mov
iret
mov
gs
jo
jg
lock
push
jnp
lock
repnz
mov
daa
or
out
mov
lret
or
xchg
cli
call
hlt
addr16
mov
ret
pop
sub
inc
stc
loope
mov
add
pusha
or
js
pop
or
outsl
adc
inc
cmp
leave
and
stc
xor
shlb
sbb
mov
fst
pushf
pop
adc
fs
push
xor
mov
movsb
data16
jb
sbb
je
add
xchg
pop
mov
iret
fdivrs
loope
data16
xchg
movsl
mov
out
popf
xor
lea
in
or
mov
sbb
hlt
out
push
fnstcw
js
and
cli
dec
push
daa
xchg
repnz
fisubrl
mov
sti
cmp
sbb
int
fimuls
pushf
adc
fisttpl
lods
xor
xor
inc
dec
lods
dec
xchg
dec
imul
sbb
pop
pop
or
pop
or
push
push
into
xchg
fldenv
jmp
sar
jae
add
add
in
aam
cmpsl
sbb
popa
das
or
jns
jnp
sbb
mov
loopne
or
push
cmp
xchg
adc
and
pop
repz
pop
out
add
cmpsl
cmc
dec
cmpsb
pop
or
dec
outsl
es
ret
lea
ss
jb
xchg
rorl
lcall
add
in
pusha
daa
add
jne
mov
aam
test
iret
ljmp
outsl
push
stos
fnstsw
pop
cmpl
lock
mov
add
andb
je
fucomip
sub
push
hlt
push
xchg
imul
bound
jmp
mov
xchg
inc
repz
pop
inc
loop
daa
dec
push
mov
inc
sub
sub
repz
in
addr16
jnp
sub
cmovae
xor
sub
adc
pop
push
mov
lods
sub
mov
or
xchg
aad
dec
fdivp
cs
or
sti
add
orl
push
lock
push
cmc
orb
call
rcl
add
push
mov
jns
xchg
push
inc
push
lret
leave
in
or
frstpm(287
jmp
xchg
aam
jo
or
in
cmp
mov
xchg
fwait
lock
test
sarb
push
out
seta
and
cli
sbb
arpl
xchg
mov
pop
stos
mov
jge
test
shll
add
outsb
xorl
inc
aam
aas
dec
ss
insl
inc
lcall
pop
stos
pop
iret
shrb
pushf
and
out
decb
inc
in
jo
inc
mov
mov
jno
mov
dec
add
push
or
mov
mov
jne
lret
jbe
jbe
nop
jno
xchg
mov
pop
dec
lret
enter
xor
add
inc
repz
jmp
mov
outsl
popf
adc
hlt
cmp
sbb
sarb
ret
pop
popl
push
movsl
dec
nop
mov
mov
movsl
xor
das
dec
xchg
int3
sahf
out
gs
out
out
push
adc
lods
fdivrl
pop
xorb
sub
xor
pop
push
mov
enter
jns
mov
fnstcw
adc
loopne
iret
inc
push
es
sub
sbb
dec
sbb
loope
jle
sub
out
jne
mov
and
std
notl
lret
bound
sub
inc
sub
test
push
fsts
imul
repnz
rcrl
ret
mov
lds
gs
dec
push
je
pop
out
shlb
jnp
insb
in
push
loope
addb
lods
add
mov
jge
dec
xor
mov
mov
dec
xor
stos
pop
jbe
cmp
mov
xor
test
push
subb
es
int3
aad
movsl
shll
test
mov
xchg
cli
rcrb
push
xchg
int
xchg
push
into
adcl
adc
cmp
cmpsb
mov
enter
std
mov
push
cwtl
adc
pop
test
xchg
cmp
mov
add
xchg
lock
outsl
push
add
movups
js
xchg
mov
cmp
fistl
mov
inc
fldcw
inc
push
fwait
push
jne
sub
lcall
mov
jo
dec
ljmp
mov
mov
mov
js
or
xor
or
and
mov
scas
in
stos
out
cmpsb
lret
pop
sub
cwtl
jno
and
leave
scas
push
daa
decl
sub
mov
mov
cld
sbb
lods
stos
fldcw
pop
and
add
js
mov
jg
rcll
sub
clc
adc
mov
pop
rcll
fbld
adc
ss
sbb
dec
sub
xchg
jle
shll
lds
pop
and
sarl
dec
add
and
scas
xchg
cmp
fnsave
push
arpl
lahf
push
sub
movaps
xchg
mov
aaa
int3
pop
insl
rolb
inc
mov
leave
repz
mov
xchg
leave
shl
push
mov
xor
jle
lahf
mov
rol
dec
xlat
aad
inc
lea
add
test
xor
mov
sbb
sbb
call
or
call
hlt
out
xor
mov
ds
and
and
jg
mov
and
movsl
pop
and
fdivl
test
jne
cwtl
cmc
xchg
lret
jmp
jb
mov
les
jmp
inc
inc
push
sarb
dec
cmp
pop
daa
fstl
mov
pop
in
xchg
jne
push
cwtl
mov
lret
iret
xor
rorb
jmp
stc
dec
sbb
mov
or
outsb
or
jmp
cmp
or
xchg
dec
fidivrs
inc
mov
or
shll
jge
jle
mov
sub
negl
mov
ficomps
jbe
or
hlt
mov
shlb
push
push
push
or
fucomi
aad
scas
je
aad
into
jae
mov
ss
xor
cmp
sbb
dec
xor
and
jecxz
xchg
divb
xor
mov
xor
test
mov
xor
adc
pusha
xlat
dec
pop
gs
flds
jae
inc
mov
xchg
push
xchg
into
or
lcall
xor
js
push
sbb
inc
loope
fs
mov
std
add
sbb
jno
xchg
rorl
jb
mov
sub
sbb
and
call
mov
inc
xor
aad
cmp
mov
pop
push
ret
xor
mov
cmpsl
xchg
pop
xchg
xor
call
fldt
cmp
and
adc
test
mov
add
pop
in
nop
nop
scas
insl
inc
jne
xchg
lcall
out
mov
test
jp
cmp
pop
test
les
jne
pop
pop
test
mov
adc
lea
repz
add
les
jg
dec
pop
sub
cmp
and
jno
push
adc
jae
ret
mov
scas
int
aas
mov
das
or
fcompl
dec
pop
sbb
sub
fwait
dec
sub
lods
call
push
idivl
aas
mov
sbb
pop
cld
bnd
push
loop
iret
push
jo
lcall
sti
or
xchg
sub
xor
dec
push
lret
pop
adc
sub
loop
add
pushf
lea
fsubr
dec
nop
push
cmp
pop
mov
mov
cmp
out
lahf
xchg
shlb
cmpsl
cli
fldl
xor
pop
pop
rcrb
sahf
cltd
test
test
cmc
mov
insb
push
sub
sarb
outsl
daa
popa
mov
cmp
outsl
fnstenv
fisubl
adc
push
cltd
mov
push
push
mov
mov
and
or
dec
js
iret
pusha
shll
and
sub
call
mov
shll
push
mov
mov
sahf
jl
push
rcl
or
and
pop
dec
mov
push
sub
xchg
outsb
stc
sarl
push
mov
adc
pop
mov
adc
xchg
xchg
popa
movsl
xchg
mov
popa
pop
pop
cmc
cmpsb
pop
stc
jns
pushf
push
and
xor
outsl
pop
adc
cmpsl
fwait
insb
mov
and
lea
scas
and
pop
jb
sub
jno
loop
push
and
mov
mov
cmc
pop
leave
mov
shll
dec
xlat
aaa
dec
push
adc
daa
repnz
fcmovb
mov
fs
nop
filds
jl
pop
fisttpl
mov
pop
imull
movsl
fcomps
notl
lret
shll
cmp
dec
leave
rolb
jmp
dec
leave
sub
into
sbb
mov
aam
ljmp
movsl
or
cmp
movsb
sub
push
sub
pop
jl
mov
xor
jno
std
mov
jns
loope
cmc
ja
arpl
ja
in
push
arpl
ret
xchg
mov
fiadds
push
inc
shl
lret
std
jae
fs
mov
arpl
nop
jmp
es
movsb
dec
les
and
or
xor
add
psubq
into
mov
repnz
cmpsb
or
inc
cli
pop
cmp
addl
inc
jl
xorl
rolb
popf
mov
pop
cmp
aad
push
mov
or
mov
jne
or
sub
jmp
in
adc
xor
dec
pop
sbb
in
mov
mov
je
imul
popa
gs
mov
push
adc
test
pop
jo
pop
jnp
outsl
inc
mov
inc
mov
fsubrl
ficompl
dec
negl
call
in
sub
push
insb
in
jp
js
call
push
loop
bound
xchg
pop
or
jg
fs
loopne
sbb
cmp
jmp
cmpsb
in
into
mov
das
aam
or
push
rol
inc
sub
cmp
arpl
sbb
ret
loop
jbe
lahf
in
cmpsb
xchg
inc
or
push
stc
in
xor
fildll
inc
aam
push
scas
lret
pop
mov
outsb
ret
xlat
and
cmpsl
dec
repnz
rolb
mov
fsubrs
mov
jl
jl
push
cs
inc
mov
ljmp
mov
push
popa
shll
or
sbb
sbb
sti
cmp
mov
jae
sahf
pop
js
movsl
ret
fs
imul
jb
jb
outsl
negl
gs
mov
sbb
dec
sub
add
loop
sti
imul
je
mov
sti
notl
push
mov
jb
out
sahf
sbb
xchg
into
push
icebp
iret
ret
jl
lret
ljmp
les
and
cmpl
test
stc
je
pusha
jmp
out
mov
ljmp
pusha
jns
jl
movsl
pop
in
imul
add
call
cwtl
test
mov
pushf
repnz
cmp
xchg
pop
ja
scas
and
repz
lock
ret
cmp
jae
mov
test
enter
out
mov
test
mov
in
stos
push
lods
push
ret
jmp
mov
adc
add
xchg
mov
mov
divl
cmp
sub
mov
ret
mov
arpl
xchg
shlb
lret
call
or
mov
mov
xor
sti
adc
pop
js
mov
mov
into
push
cmpsb
fidivrs
bnd
mov
jge
test
scas
jmp
jb
adc
insl
outsb
dec
nop
jbe
dec
stos
orl
jns
xchg
jmp
push
pop
stos
push
lock
jmp
jnp
lock
add
rcrl
cli
jle
cli
sbb
inc
inc
pop
pop
sbb
cmp
cmp
cmpsb
cli
pop
addr16
ljmp
idivb
inc
mov
pop
xchg
cmp
notl
pop
mov
imul
in
les
sbb
dec
mov
xchg
inc
pop
repnz
add
push
icebp
push
pop
lds
je
icebp
push
lahf
popa
xor
cmc
dec
and
dec
push
inc
movb
aas
test
addr16
dec
xchg
dec
sti
insb
xchg
pop
rcll
xor
dec
xadd
sub
insl
movups
les
fmuls
mov
add
and
cmpsb
adc
mov
jp
fnsave
sbb
inc
adc
je
scas
pop
push
inc
jmp
add
add
or
cmpsl
fadds
sbb
lahf
push
ljmpw
icebp
bound
cmp
fsubrl
cli
loopne
psrld
pop
mov
cmpsb
cwtl
sbb
dec
test
jecxz
sbbl
bound
or
push
shlb
orl
dec
and
fbld
adc
scas
adc
fadd
sub
mov
and
push
in
dec
andl
cwtl
sarl
sub
fs
adc
outsl
xchg
jnp
call
mov
push
and
push
imul
aas
jnp
mov
mov
leave
jb
out
test
xchg
rclb
addb
cmc
pushf
hlt
sar
mov
xor
xor
and
mov
jp
arpl
and
fs
loopne
fwait
loop
dec
gs
sahf
out
cmpsl
fisubs
xchg
loope
mov
ret
cli
dec
push
fsubrl
std
outsl
cmpsb
lods
xchg
push
idivb
stos
add
icebp
ficompl
or
in
cmp
mov
int
mov
scas
shl
jp
loope
sbb
scas
or
fcomps
out
loop
pop
jo
imul
xor
inc
lods
divb
js
xchg
push
cmp
pop
inc
or
movsb
sub
xchg
stc
mov
sub
ds
imul
sbb
ljmp
movsl
lock
cmp
or
test
scas
subl
xchg
loope
jns
or
bound
push
insl
adc
cmp
movsb
lcall
jge
push
push
mov
repz
mov
pop
lcall
repz
cmp
push
loope
orl
or
xchg
aas
xlat
adc
scas
pop
lods
in
mov
inc
add
sbb
jp
pop
xor
sbb
pop
cli
mov
xchg
adc
adc
daa
repz
or
jb
test
sbb
imul
outsb
gs
sub
mov
mov
aaa
fdivs
cmp
mov
mov
les
stc
sbb
fwait
sbb
sub
mov
imul
sbb
lds
orl
popa
xor
or
sbb
add
sbb
xchg
int3
das
mov
xor
pushf
xchg
popf
jbe
jmp
out
mov
ret
repz
xor
jns
hlt
loope
repz
loopne
test
and
lds
push
rclb
cld
ja
cmp
mov
push
xchg
mov
bound
dec
dec
sub
gs
sbb
outsl
sub
dec
inc
fwait
insl
push
shrl
adc
std
test
ja
dec
jo
push
cmpsl
arpl
mov
in
sbb
in
push
push
and
scas
arpl
xchg
adc
inc
sahf
mov
xchg
add
mov
daa
mov
data16
das
mov
jbe
rcl
je,pn
gs
test
lcall
mov
repz
ret
sbb
mov
popf
test
addl
dec
jmp
adc
mov
xor
mov
sbb
mov
xchg
adc
fwait
pop
sahf
xor
lcall
ret
mov
and
xorl
pop
adc
lods
pop
mov
dec
in
xor
xor
pop
dec
imul
insb
in
dec
jbe
sbb
test
cltd
mov
insl
je
mov
sub
add
ds
test
std
xlat
cmp
popf
int
pop
push
aad
mov
pop
fwait
ja
roll
pop
aas
gs
xor
mov
gs
in
mov
push
clc
push
shll
ds
rcrb
inc
xor
jle
mov
push
sbb
test
jecxz
mov
add
in
push
xor
out
lods
xorl
or
sub
or
inc
or
adc
gs
inc
cmp
inc
push
popa
jo
mov
into
jmp
sbb
out
jo
test
test
cmpsb
lock
mov
pop
dec
daa
cmp
sub
jno
inc
fcom
iret
jl
lcall
fs
lds
sbb
jecxz
out
rcrb
repnz
dec
ds
dec
sbb
push
mov
test
mov
xchg
push
xor
out
mov
cmp
scas
mov
inc
jge
push
icebp
and
out
push
xor
cmp
repnz
jns
repz
push
xchg
inc
sbb
loope
shll
daa
out
push
rcll
dec
xchg
clc
aad
or
mov
out
in
jo
lret
mov
sbb
test
jo
ret
fstl
xchg
push
cmc
pop
vmwrite
cmp
xor
aaa
clc
cs
adc
mov
stos
jnp
rcrl
das
pop
sbb
lret
ret
inc
pop
jl
sub
lahf
cli
xor
insb
sub
xor
xchg
dec
adc
cmp
inc
add
test
dec
sbb
mov
mov
xor
lahf
stos
repz
js
inc
dec
loope
aam
or
movsb
sbb
xchg
dec
addr16
push
push
xchg
and
or
mov
inc
mov
ss
pop
scas
xchg
fidivs
stos
faddp
pop
cli
fbld
lret
sbb
jle
cmp
fildll
pop
mov
xchg
fcompl
mov
std
fxtract
outsb
and
push
mov
adc
and
add
fdivs
cmp
repz
push
dec
push
add
rcrl
loopne
das
lahf
mov
lret
dec
pop
add
jle
or
lcall
jns
int
xchg
inc
pop
aas
imul
fbld
pop
mov
std
jle
in
push
push
xor
stc
pushf
pop
mov
push
ret
sub
push
add
mov
into
test
mov
movl
aas
jns
lret
mov
insl
movl
int3
xchg
repz
sti
inc
push
aam
or
ja
dec
pop
test
cmp
dec
lock
call
mov
or
loopne
aad
mov
adc
push
dec
insl
pushf
imul
inc
sbb
arpl
rcrb
sbb
aas
cmp
lock
cmc
cmpps
iret
test
enter
mov
and
test
fisttpll
in
pop
call
fbld
inc
mov
adc
mov
ds
cwtl
mov
pop
xchg
mov
mov
or
sbb
push
add
and
jno
aad
mov
out
jecxz
into
mov
test
sbb
add
enter
inc
xchg
rorb
push
dec
scas
or
mov
cmp
jle
lea
dec
cmp
fs
cmpsb
push
xor
mov
out
sbb
jb
mov
test
inc
sub
mov
add
dec
arpl
cli
push
pop
icebp
cmp
fisubl
rcll
add
bound
dec
icebp
cmp
push
sub
in
mov
jge
xor
dec
and
lock
ret
xor
arpl
xor
lret
jnp
mov
add
xchg
mov
add
mov
and
dec
lods
adc
xchg
sub
mov
jecxz
dec
jle
aad
fldl
repz
jge
jne
push
fwait
and
setl
xor
mov
jp
adc
pushf
rolb
sbb
mov
pop
rcrl
data16
mov
sub
mov
js
fisubs
cwtl
pop
cmpsb
scas
out
outsl
into
pop
sub
std
mov
fiaddl
pop
adc
outsl
rdtsc
lea
xchg
cltd
addb
out
mov
adc
adc
lock
aas
and
xchg
jge
mov
loope
sbb
xor
out
pop
jns
nop
aad
fiaddl
mov
sub
popf
aam
sbb
test
xor
and
sar
pop
fcomi
fs
mov
jg
pushf
scas
insb
cmp
data16
ffreep
jne
mov
out
popa
ss
or
push
jp
adc
sub
xchg
int
jbe
and
lds
enter
stos
add
xchg
movsb
daa
cmpsl
or
inc
xor
sbb
aam
jbe
sar
orl
cwtl
rcrl
jecxz
aad
psubb
pop
gs
je
cmp
ds
in
pop
rcl
or
push
add
add
loop
sti
inc
and
lahf
int3
dec
test
jbe
mov
xchg
push
jnp,pt
sahf
adc
mov
fcompl
xchg
xor
psubq
pop
cmp
pop
mov
ja
ljmp
mov
shll
or
mov
int3
jb
dec
jae,pt
dec
imul
iret
push
inc
cmp
mov
scas
cs
es
out
int3
pop
push
not
push
ja
cli
or
cmc
xchg
insb
fcompl
jg
inc
mov
dec
loopw
ss
iret
out
xor
xchg
cmp
mov
out
lea
rclb
add
inc
adc
jno
adc
add
sub
jno
cmp
or
xchg
cld
fs
incb
popa
lret
mov
mov
out
adc
push
cmp
fbstp
loop
repnz
sbb
mov
stos
dec
pushf
sub
jecxz
mov
mov
push
adc
sti
mov
lods
sti
or
push
aas
sbb
cwtl
les
call
jne
push
add
add
mov
cli
fdivrp
and
hlt
int3
stos
cmp
lret
je
shll
jmp
inc
add
mov
add
movsl
push
pop
jmp
out
sbb
test
pusha
pop
cs
arpl
sbb
dec
adcl
mov
push
or
mov
cmp
stos
pop
xchg
incl
loope
lret
push
idivl
loope
cmpsl
and
dec
pushf
mov
nop
jbe
aad
add
cmp
mov
and
pop
fbstp
lods
cli
jle
mov
sub
sbb
ss
xchg
mov
scas
pop
mov
in
sbb
adc
ret
inc
push
cmc
xchg
xor
lea
xchg
stos
xlat
in
shlb
rcll
mov
xchg
movsl
xchg
pop
inc
pusha
lcall
pop
dec
jg
sbb
jge
mov
jno
dec
icebp
enter
fsubrs
dec
cwtl
pop
xor
rep
in
adc
fwait
shll
dec
jge
pop
cli
sub
dec
cmp
lret
call
jne
in
mov
cmp
push
dec
mov
lret
cltd
enter
sub
hlt
mov
in
lock
or
movsl
push
jle
cmp
repz
sub
push
in
jmp
shlb
xlat
mov
iret
dec
xchg
mov
movlps
jns
imul
fmuls
cmc
and
mov
stos
sub
out
mov
inc
int3
add
jns
xor
insl
xchg
pop
lea
inc
jo
mov
ja
out
jmp
in
lods
xchg
and
icebp
jmp
stos
stos
loopne
or
data16
dec
std
cwtl
cmp
pop
test
mov
out
std
out
xchg
lods
or
jp
sbb
and
in
dec
cli
or
cld
pop
cld
mov
fcompl
push
dec
dec
aaa
aaa
sbb
orl
push
jne
pop
das
data16
jmp
sub
imul
jge
loope
rcrb
test
test
inc
sub
mov
fadd
mov
hlt
mov
popa
arpl
lods
lock
test
jae
fmul
inc
dec
pop
dec
mov
rclb
mov
adc
daa
inc
or
sbb
imul
xchg
or
lcall
lds
rcrb
push
pop
cmc
pop
pop
outsb
xor
mov
dec
mov
insl
cs
sub
push
cmp
jae
ret
fwait
repnz
data16
or
test
add
push
imul
loopne
mov
insb
jno
mov
jecxz
fiaddl
lds
xchg
and
xorl
loopne
add
aam
push
jmp
sbb
push
sbb
js
test
les
repz
in
and
cmp
std
ljmp
test
jno
fisttps
adc
xchg
test
imul
scas
aaa
xor
ja
inc
pop
iret
adc
lea
mov
ficoms
popa
shlb
stos
fnstsw
add
test
imul
shlb
add
pop
ja
aad
sbb
mov
dec
popa
lds
adc
cmp
xorb
xor
cmp
adc
jge
testb
cmp
sbb
xchg
lock
fiaddl
mov
lea
jb
testb
adc
jg
fsubp
mov
push
cmpsl
cmp
mov
xor
lcall
mov
es
sub
jl
fcompl
push
push
fisttpll
addr16
xor
xor
mov
idivb
push
pop
insb
call
nop
sub
cmpsb
rclb
sub
pushf
arpl
mov
mov
mov
sti
aam
loope
xchg
mov
das
into
cmc
jg
push
cmpb
js
jns
adc
aas
loope
add
xchg
mov
inc
inc
mov
inc
mov
adc
vpmovdb
ret
xor
xor
push
cld
jle
cmp
and
out
loope
dec
hlt
int3
push
cwtl
cli
pushf
in
shl
faddl
mov
sbb
xchg
sub
bound
mov
xchg
movb
ss
ds
dec
pop
call
xor
je
push
stos
adc
cmp
out
pop
jp
ss
aas
mov
out
mov
jmp
ret
test
push
into
enter
gs
cltd
mov
pop
xchg
rcll
negl
imul
xchg
dec
sub
dec
push
cmp
add
pop
fidivrl
addr16
xchg
dec
inc
lcall
shlb
rorb
xchg
mov
lods
lahf
mov
dec
adc
xor
stos
jecxz
inc
jecxz
mov
cmp
ret
inc
lods
add
dec
jp
jno
or
jecxz
mov
rorb
movsl
repz
andb
je
adc
das
into
lods
adc
fdivrl
loope
cmp
std
in
add
xorl
mov
pop
jne
jbe
int
inc
add
cs
js
pusha
cmp
aas
xor
lock
outsl
mov
cmp
repz
and
or
xlat
test
call
cmp
out
stos
clc
xor
sub
repnz
add
cmc
or
cmp
je
xchg
sub
clc
mov
insl
das
cmp
loop
push
mov
push
icebp
pop
mov
xchg
jnp
in
js
cmp
stos
movl
das
movsl
in
out
pushf
xchg
je
and
add
aas
mov
push
out
cmc
inc
testb
emms
push
mov
cli
push
aad
mov
mov
sbb
call
push
xchg
mov
and
out
in
jecxz
rol
and
sbb
jg
les
lods
dec
loop
mov
out
je
push
loope
pop
mov
cmp
push
jb
cltd
ret
dec
pusha
repnz
insl
leave
gs
int
adc
shll
push
ss
xlat
jg
shl
pop
into
xchg
or
dec
adc
xor
or
mov
xchg
int
jne
mov
jg
dec
ds
lods
inc
cltd
test
push
xchg
cmp
repz
xlat
inc
add
xor
dec
xchg
daa
push
mov
loop
push
imul
dec
push
mov
mov
add
dec
aam
neg
arpl
es
icebp
les
xor
adc
inc
mov
sar
pop
and
sahf
cmc
and
mov
out
clc
lret
shll
push
mulb
pusha
jle
repz
mov
iret
adc
mov
mov
jl
sbb
repz
push
nop
add
pop
add
dec
sbb
inc
and
faddl
xor
jbe
dec
aaa
mov
rclb
pop
cld
sbb
loop
add
cs
cmpl
in
and
pop
mov
xchg
int
lea
into
xor
xchg
movsb
sub
or
push
lret
push
jp
cwtl
add
add
mov
pop
mov
out
and
imul
jne
daa
fildl
popa
jae
mov
cld
jge
push
add
divl
mov
add
and
xchg
lret
mov
adc
fcompl
ret
or
fsubl
adc
xlat
ljmp
pusha
or
mov
lods
pop
orl
mov
mov
add
imul
push
outsl
xor
imulb
xlat
adc
das
arpl
adc
aas
mov
mov
inc
mov
imul
fildll
pop
insl
mov
mull
lret
call
test
mov
stc
push
je
sub
ds
cltd
jp
inc
bnd
or
mov
xlat
frstor
sbbb
jp
loope
mov
test
int
inc
in
mov
mov
pop
add
popa
xor
inc
bsr
cmova
out
jmp
popa
lret
pushf
adc
cltd
mov
mov
mov
call
dec
sbb
rcr
inc
dec
add
inc
in
in
mov
dec
pop
push
mov
xchg
mov
and
je
js
test
imul
mov
test
outsb
mov
or
push
lahf
ds
dec
jbe
jmp
popa
mov
lret
cmp
xor
cmp
xlat
cld
sub
sbb
mov
adc
xchg
fnstenv
out
cmp
out
js
loope
adc
daa
ss
cmpsl
xor
lock
mov
pusha
push
bound
xor
imul
inc
jno
sub
mov
out
jo
adc
adc
test
add
push
adc
cmp
xchg
fldt
xor
cli
das
mov
call
or
mov
cmp
mov
or
cmpsb
sahf
sbb
mov
mov
and
lahf
in
inc
mov
dec
mov
mov
rorl
bound
lcall
sub
xlat
adc
shr
jecxz
fsubs
add
pop
push
adc
sbb
inc
and
subb
ljmp
add
push
pop
icebp
call
popf
mov
xor
mov
mov
les
iret
jns
xor
in
cwtl
inc
into
inc
and
push
testl
jge
mov
orb
mov
icebp
sbb
fists
sub
and
sub
jmp
daa
mov
dec
cmp
bound
fnsave
pop
ds
or
mov
fildll
scas
cld
lock
dec
jne
push
iret
push
adc
cltd
adc
and
clc
pop
cmpsb
inc
push
int3
add
out
mov
xchg
lret
cmpsb
mov
jge
out
jge
pop
adc
inc
sbb
cwtl
jb
lods
xchg
in
inc
rol
mov
ss
inc
int
sbb
ret
xchg
jo
mov
jbe
sbb
int
fistpl
leave
sbb
cmp
add
insb
jle
nop
pop
test
push
dec
add
push
push
inc
push
or
sub
push
pop
cmp
pop
push
imul
mov
push
push
and
add
xor
sbb
xchg
pusha
xor
stos
sbbb
popa
cmp
xor
sub
dec
insb
cmpsl
arpl
xor
lahf
xchg
mov
in
mov
ss
dec
mov
mov
xorl
cmp
jg
cld
sub
mov
addr16
jnp
mov
mov
in
push
repnz
jae
mov
movsb
inc
push
lds
cmp
mov
inc
lods
add
and
mov
inc
or
inc
add
xor
pop
adc
mov
inc
ret
pusha
sbb
int
jl
sbb
add
adcb
iret
into
mov
outsb
sbb
cmp
add
push
outsb
call
dec
ja
cmp
jle
push
xor
leave
in
cmp
vstmxcsr
cmp
das
cmc
lods
divl
xchg
aad
xchg
or
xchg
push
faddp
pop
mov
adc
xlat
jb
or
ljmp
add
ljmp
imul
ja
out
daa
pop
xchg
sahf
loop
lcall
dec
inc
movsb
push
jno
movsb
shrb
lret
dec
int
out
insl
mov
sub
nop
outsl
jecxz
jle
shll
sbb
mov
mov
sarb
sub
xchg
mov
xor
push
xor
xor
push
inc
clc
insb
mov
pusha
sbb
xchg
negl
and
sbb
ret
push
out
fcoms
mov
outsl
lea
idiv
movsl
in
movsb
jbe
testl
jne
sbb
mov
rcrl
call
negb
pop
pop
cmp
jb
jns
outsb
insb
and
daa
mov
cs
sbb
scas
add
in
das
dec
es
pop
js
das
mov
sbb
sub
cmp
push
push
popf
xor
nop
xchg
cltd
in
scas
sbb
xor
cwtl
mov
mov
addr16
cmp
or
pop
std
mov
les
test
int
cmp
lods
nop
data16
test
sub
cmp
outsl
push
cmc
rcl
jp
fidivl
cmpsb
or
imul
pop
adc
shrl
xchg
and
imul
nop
add
pushf
nop
mov
aad
mov
iret
clc
cmpl
dec
stos
lods
ret
sub
or
call
sbb
add
mov
xor
sahf
or
mov
xor
sbb
lods
xchg
scas
sub
test
loop
add
adc
ret
mov
mov
push
fcmovu
outsl
inc
repz
jnp
pop
jns
jne
inc
jbe
inc
jge
in
and
xor
sarl
jno
jge
xchg
aaa
dec
fdivrl
stos
pusha
mov
ljmp
outsb
push
push
les
addb
push
mov
cmp
cmp
or
into
popa
and
leave
js
mov
add
mov
mov
adc
dec
idivb
and
or
add
lea
adc
xchg
jp
in
addr16
fbstp
xchg
aaa
repz
pop
arpl
mov
push
andb
in
mov
iret
lret
sub
stc
sub
jge
scas
hlt
sub
addb
xor
push
cmpsl
daa
dec
pop
mov
dec
jmp
dec
fadd
xor
add
call
clc
loopne
push
flds
faddl
and
sbb
xor
call
dec
jmp
push
xor
lods
sbb
push
sub
test
clc
lods
adc
xchg
push
sbb
ds
or
sub
pop
imul
inc
push
push
jbe
xchg
jbe
fsubrl
ss
sub
jl
mov
jmp
cmp
pop
lret
mov
cmpsb
lret
mov
cs
jp
xchg
push
xor
or
imul
adc
aas
insb
adc
cwtl
je
jge
xor
enter
cwtl
pop
fdivr
out
inc
mov
lods
jns
mov
ret
and
mov
xor
jnp
cmp
push
pushf
shrl
stos
cmp
mov
daa
jmp
iret
jb
sub
decl
xchg
rcl
roll
insl
ss
push
cmpsb
and
add
fucomip
inc
test
movsl
movsl
cmpsl
or
orl
jle
push
ds
inc
xor
mov
xchg
mov
pop
stos
aam
cli
jns
loope
adc
fildll
mov
stc
daa
or
inc
movsl
push
outsb
inc
push
js
scas
xor
and
pop
jo
leave
inc
jo
mov
daa
out
push
push
cmp
lods
dec
add
lcall
stos
popf
pop
xchg
stos
sub
in
xorb
cld
enter
push
and
jns
lods
mov
xchg
lcall
lods
shlb
in
cmpsl
adc
or
shr
xchg
mov
mov
xchg
sti
inc
mov
imul
push
sbb
pop
fstps
mov
out
into
daa
imul
jbe
xor
xor
and
xchg
mov
stos
pop
sub
and
sarl
push
adc
cmc
sti
adc
jge
mov
push
in
xor
and
jmp
bnd
xorl
in
inc
mov
cld
pop
cwtl
xor
jecxz
in
int
sbb
or
vandps
stos
hlt
mov
lcall
mov
testl
sbb
testl
pop
mov
retw
loopne
imull
test
jle
sbb
addr16
cmp
sub
xchg
movl
push
clc
jmp
jns
fdivrs
enter
int3
ja
in
cmp
lds
add
mov
ret
and
fmuls
mov
in
mov
cmp
jns
fcomps
inc
fwait
adc
adc
push
jmp
addr16
and
mov
stc
out
cmp
enter
lods
and
fdivr
push
adc
mov
mov
test
mov
mov
mov
xor
adc
jae
leave
sbb
popf
outsl
xorl
shlb
and
cmp
pop
xor
jnp
gs
mov
cmpsl
test
mov
mov
test
and
lea
jno
xor
es
popl
rcrl
out
lock
iret
movsl
inc
aad
mov
push
andb
imul
jmp
inc
and
dec
fcmovbe
push
mov
je
push
repnz
cli
sbb
xchg
inc
nop
xchg
popa
dec
sub
fistpl
jl
popf
test
jo
xchg
mov
and
dec
push
add
adc
sbb
push
scas
xchg
xor
mov
pop
mov
xchg
or
das
add
pop
out
jae
jnp
in
js
sub
xchg
push
movsl
loopne
mov
xchg
testb
scas
mov
push
shr
repnz
pop
loopne
sub
adcl
xor
sbbb
ret
fwait
mov
cmp
push
mov
imul
pop
scas
push
fistpl
fldenv
ss
jo
imul
push
mov
xchg
and
pop
test
scas
aad
mov
rcrl
inc
mov
push
mov
pop
sbb
dec
mov
pop
sub
fistps
loopne
cmc
test
repnz
sbb
loopne
hlt
jae
dec
push
cmp
lods
inc
inc
or
jne
sbb
push
cmp
inc
mov
xor
aad
xorb
fs
cmp
or
scas
mov
repnz
cmc
xchg
pop
xor
insb
das
or
std
pusha
xor
bound
pop
xchg
imul
jnp
leave
lea
cmp
mov
cmp
mov
cmp
bound
inc
mov
xor
mov
mov
add
pop
jecxz
mov
cmp
cld
in
pusha
or
rorb
xchg
pop
test
push
adc
or
fs
and
cltd
mov
test
out
int3
xor
mov
loopne
push
fcmovb
roll
out
fcompl
fcmovnbe
leave
push
push
xor
rorb
arpl
push
repz
sub
xchg
addr16
loopne
shll
mov
fsubrp
xchg
into
pop
sbb
jo
lds
cmp
pop
outsb
cmc
cmp
repz
int
xchg
daa
in
repz
sbb
lea
add
jns
test
sbb
xor
mov
mov
jle
sbb
ljmp
ss
pop
pop
ljmp
pop
cmc
stos
ret
jae
xchg
adc
jl
jbe
xchg
xchg
sahf
push
add
push
cmpsb
nop
inc
pop
test
jmp
bswap
addb
std
clc
cmp
cmp
push
xchg
jge
cwtl
sar
outsl
mov
xchg
jnp
movsl
lds
clc
adc
nop
and
int3
push
mov
xchg
sahf
aaa
loope
gs
dec
mov
call
repz
mov
int3
sbb
ss
jo
mov
imull
push
xor
lret
or
clc
and
inc
lods
jmp
nop
xchg
loopne
or
cli
pop
in
ja
pop
fs
adc
aam
cwtl
xchg
or
sbb
ret
adc
movsl
cmpsl
dec
shll
push
cli
iret
fmul
call
xor
shll
int
das
movsl
fstps
mov
or
mov
rolb
push
jle
in
outsb
add
pop
pop
in
mov
inc
sub
and
xchg
outsb
in
cmp
repnz
sbb
ficompl
shll
fwait
sub
call
xor
outsl
jge
adc
jb
pop
add
jg
add
das
fs
stc
mov
jbe
sub
sub
or
inc
loope
adc
mov
mov
xchg
pop
xchg
add
adc
aam
outsb
faddp
test
add
ja
sub
jmp
push
sarl
dec
fdivl
sahf
jae
or
fiaddl
int3
int3
out
pushf
ret
sbb
cmpsl
js
les
imulb
in
pop
insl
rcrb
dec
sub
xchg
out
or
test
pushf
lods
inc
inc
mov
fidivl
sbb
imul
out
loop
adc
fdivl
mov
cmp
mov
xor
dec
cli
push
pop
adc
xchg
jl
push
xchg
es
mov
pop
out
jl
mov
xchg
arpl
lods
loopne
pushf
cmp
and
cmp
in
push
xchg
jg
loopne
test
sub
dec
ret
mov
fxtract
jecxz
xor
lea
loopne
ss
imul
adc
stc
add
fsubrs
testb
fcoms
mov
ret
mov
daa
cmp
into
adc
jnp
fs
sub
adc
out
in
mov
push
mov
xor
cmp
insl
add
mov
sti
gs
sbb
dec
lock
mov
sbb
pop
push
xchg
dec
int3
mov
cltd
test
pop
cmp
cld
test
xchg
ja
inc
adc
arpl
mov
out
inc
popf
dec
insl
sbb
lds
push
fdivr
mov
xchg
mov
inc
adc
aaa
inc
test
push
bound
cwtl
xor
adc
pusha
inc
pop
jne
push
mov
sub
mov
sbb
sbb
dec
jno
inc
jp
cli
cwtl
xchg
push
sub
sarl
lret
adc
pop
inc
fidivrs
int
jns
dec
jecxz
test
leave
sub
fstp
icebp
popa
enter
add
dec
je
cmp
push
push
int3
ror
insl
in
and
scas
adc
jl
jecxz
mov
test
jl
push
sub
out
dec
lods
xchg
pop
xchg
and
sbb
and
inc
bound
jbe
pop
in
fidivrl
js
aaa
mov
lahf
or
pop
flds
jno
mov
sbb
mov
dec
jecxz
lock
add
sbb
jl
arpl
inc
test
xor
cmp
pop
sbb
mov
mov
sub
fmull
mov
and
jmp
psubusw
rorl
or
or
fs
mov
xor
scas
jmp
das
aad
arpl
adc
or
cmp
lods
outsl
mov
xchg
imul
xchg
dec
cli
mov
jnp
xchg
mov
notb
jle
pop
sbb
shrl
nop
pop
fisttpl
jl
int
cli
fs
dec
ss
mov
dec
out
cwtl
sub
and
addr16
mov
ljmp
cs
lahf
xchg
mov
mov
add
test
inc
fiadds
cli
pop
loop
dec
adc
fstpl
xchg
shlb
push
cltd
cmp
inc
out
mov
xlat
lcall
xorb
inc
dec
add
xor
mov
lea
aad
in
scas
ret
fisubrs
cwtl
call
sub
das
cmp
cmpsl
lods
push
fwait
xchg
in
sahf
push
mov
xchg
bound
hlt
jo
mov
and
gs
int3
xor
dec
mov
cmpsl
pop
pop
jg
cmp
stc
pushf
je
test
pusha
fs
mov
mov
ja
int3
or
sub
je
andl
pop
fadds
push
xor
mov
out
sahf
xorl
or
insl
adc
pop
sub
push
iret
pop
call
enter
jl
test
mov
jle
sbb
add
into
imul
xor
xchg
inc
lcall
mov
xchg
divb
mov
pop
icebp
cld
fsubl
dec
jle
lea
mov
jecxz
sbb
mov
aaa
lret
adc
mov
mov
and
pop
scas
push
out
fstl
mov
lret
cs
movsl
leave
xor
movsl
imul
adc
jo
jo
addr16
inc
pop
mov
data16
dec
es
mov
rorb
dec
sub
mov
loop
jle
and
mov
pop
enter
sub
cwtl
inc
dec
fcmovbe
rclb
or
lods
scas
shrl
cmc
std
pop
bound
push
push
outsb
fwait
inc
lret
pop
lret
loope
arpl
inc
into
aas
loop
int3
mov
xchg
repnz
pop
xchg
inc
push
and
pop
sbb
and
push
out
rorb
xchg
add
int
inc
jbe
and
aad
cli
inc
mov
mov
rcl
lea
js
or
mov
cmp
stos
sub
shl
push
and
push
push
fcomi
dec
bound
pop
inc
inc
sub
aaa
gs
int3
es
dec
fwait
repnz
xlat
scas
push
or
xchg
dec
cli
jne
sbbl
xchg
aaa
xor
mov
push
sub
or
jbe
jg
mov
xchg
lds
push
push
test
inc
push
mov
dec
stos
rol
bound
pop
push
ret
fs
ret
cwtl
cmc
loope
push
jo
jl
inc
xor
mov
outsl
hlt
cwtl
mov
ficomps
xor
sbb
dec
mov
pop
orl
mov
sub
adc
sbb
jns
pop
negb
call
sub
cmp
testl
shll
xchg
in
mov
stc
add
nop
push
xor
mull
add
jae
out
mov
movsl
lahf
cmp
sbb
sbb
test
sbb
push
sub
or
jns
jl
std
mov
arpl
xor
fstp
mov
pusha
dec
mov
adc
shll
lds
psubsb
int3
jge
out
cwtl
lds
mov
sahf
bound
mov
dec
and
cmp
stos
pop
fucomp
fdivrs
mov
outsb
aam
cmpl
fstl
pop
xor
stos
mov
test
out
loope
fistps
jne
xor
cmp
cmp
ss
mov
and
push
lret
repz
adc
rolb
aam
daa
cli
test
xor
inc
jecxz
push
sub
sbb
add
pushf
cmpsb
in
ret
mov
outsb
addr16
shlb
shlb
and
testb
pop
enter
out
jl
loope
lock
enter
mov
addr16
cmp
dec
jb
jbe
inc
aam
lret
inc
jg
es
test
add
mov
jae
add
fucomip
ret
das
js
dec
fistpl
flds
sbb
stos
mov
cs
xor
ffree
in
inc
and
sbb
addr16
pop
cmp
pop
sub
jp
mov
pop
cmp
icebp
cltd
iret
pop
sbbb
fscale
add
xor
addl
fwait
ret
out
mov
aas
or
stos
inc
pusha
xor
xlat
add
mov
jg
cltd
dec
dec
sti
ficoml
insb
xchg
ret
and
bound
jo
sub
lcall
and
pop
loope
and
mov
and
push
push
out
inc
xchg
sub
jg
mov
sbb
outsl
mov
push
xor
imul
mov
in
and
test
leave
fs
div
lret
adc
loop
pop
add
xor
and
imul
cmpsb
gs
xor
mov
cwtl
adc
dec
shll
decl
sbb
mov
aad
xor
icebp
shll
lret
push
add
shrb
cli
push
xor
xor
idivb
push
in
movsb
jg
mov
ret
shlb
pop
ljmp
jl
and
test
dec
push
test
mov
aad
pop
push
lods
push
jo
inc
mov
jne
test
in
jecxz
into
fisubrl
lds
xchg
decb
xor
stos
cld
jl
mov
sbb
push
pop
outsb
sbb
mov
push
jge
mov
mov
push
stos
push
and
fcomip
mov
aam
int3
push
sbb
in
pop
jo
mov
dec
sbb
inc
dec
xchg
jnp
cmpsl
sbb
cmpsl
mov
pop
push
mov
mov
inc
aas
aad
xor
push
lods
enter
xor
fistps
scas
call
jns
imul
dec
shl
lods
pop
xchg
inc
mov
or
imul
and
addr16
push
das
std
mov
add
js
push
push
mov
out
jp
lahf
cmp
dec
xor
jns
fisubs
mov
out
std
out
insb
sbb
in
int
cmp
pushf
into
scas
sub
les
fwait
arpl
mov
icebp
push
adc
imul
jo
hlt
mov
jp
cmpsl
arpl
gs
and
adc
mov
jns
dec
and
cli
les
cld
sub
adc
mov
mov
push
pop
test
jl
lret
and
xor
push
inc
or
lret
mov
jbe
das
adc
cmp
dec
scas
pop
pop
push
int
out
in
cmp
cmp
mov
add
es
sti
mov
mov
jge
dec
loope
mov
xchg
mov
jnp
cld
fisubl
fisttpll
out
mov
or
xor
scas
ljmp
in
xchg
scas
arpl
cmp
mov
sbb
into
xor
cmp
cmp
fldt
in
mov
iret
and
roll
in
dec
nop
xchg
dec
dec
push
aas
pop
add
xor
add
sub
or
je
sbbl
addb
and
cmpsl
jae
ja
adc
jg
cmc
fs
add
ds
int
xchg
scas
in
sbb
jmp
fidivl
cmp
test
sbb
popa
repnz
mov
fcoms
in
mov
lret
call
push
mov
xchg
jle
or
insl
lahf
sbb
and
cltd
js
ds
xchg
mov
cmp
xlat
imul
sbb
data16
xchg
mov
xor
cmpsl
cs
jl
sbb
pop
std
jge
sub
mov
push
jne
cmp
addr16
mov
inc
sbb
js
fnstcw
aaa
test
and
fwait
in
imul
mov
jmp
movsb
cs
xchg
call
icebp
loop
int3
icebp
mov
push
or
xor
cmp
pop
into
add
and
push
test
mov
enter
push
nop
repz
pushl
sbb
mov
push
mov
lock
js
aad
cmp
movsl
sbb
aas
push
xorb
das
lret
sub
add
lret
shll
cld
and
clc
lds
rcl
cltd
ds
mov
pop
loop
xchg
jg
out
pop
sbb
fdivs
mov
inc
enter
das
shlb
test
sub
jl
cwtl
ja
ret
xor
push
cmpl
xor
and
sbb
repnz
je
mov
fsub
fidivrl
dec
xlat
aas
dec
add
xlat
push
pop
insl
loop
cmc
jno
mov
movsb
lods
dec
or
rclb
push
fists
in
rolb
pop
clc
sbb
push
pop
hlt
int
fldenv
fs
and
scas
cmpsb
mov
mov
mov
rorb
filds
sahf
aas
or
cmp
inc
mov
iret
add
rol
mov
pop
xchg
mov
sub
mov
mov
push
loopne
push
imul
std
inc
stos
xchg
jmp
adc
icebp
push
shll
xchg
xor
cmp
adc
aam
xchg
fnsave
and
adc
adc
aad
jecxz
xchg
lea
mov
mov
mov
mov
test
and
aam
jae
sbb
or
stos
cmp
dec
fimuls
imul
pop
lock
or
icebp
inc
cmp
cmp
and
aas
sub
push
es
in
sub
shr
out
and
mov
mov
pushf
icebp
popf
aam
enter
into
add
imul
stc
nop
jo
mov
push
and
leave
sub
mov
xor
shll
or
out
js
mov
into
xor
pop
add
scas
push
mov
loopne
sbbb
mov
jle
jle
jmp
cs
mov
ljmp
or
xor
push
sbb
push
shll
outsb
jl
clc
stc
jb
mov
lret
mov
push
jmp
es
outsb
mov
mov
adc
mov
inc
in
jmp
in
dec
xor
imul
aas
inc
sbbb
jb
push
and
mov
push
lock
decl
xor
jle
and
icebp
aam
xchg
jno
scas
fnsave
push
lahf
in
sbb
mov
cmp
std
pop
aad
adc
or
sbb
inc
push
sub
dec
sbb
ss
aaa
repz
sbb
sub
jp
ret
movsb
popa
je
out
fstpl
sti
or
push
cli
insb
fildl
or
scas
and
je
mov
arpl
pop
jbe
lock
rolb
dec
mov
cmp
adc
pusha
mov
jle
inc
pop
push
dec
sahf
xchg
xchg
jl
mov
mov
add
adc
pop
cs
in
push
js
call
or
pop
nop
ja
icebp
jp
std
popa
cmp
cmpb
in
pop
sti
daa
mov
cld
cmpsl
out
daa
add
pop
dec
or
push
mov
mov
dec
sub
dec
mov
aam
jb
mov
pop
cs
inc
ljmp
test
mov
inc
sbb
pop
xor
adc
cmpsb
mov
popf
lahf
mov
sbbl
out
fnsave
push
jp
push
push
movsl
cmp
adc
aaa
rolb
out
fistpl
cmpsl
mov
lret
std
cld
jae
cmp
push
mov
jecxz
jo
adc
aad
aam
icebp
nop
inc
icebp
insl
aas
ja
out
sti
inc
cmp
imul
dec
adc
lret
mov
xchg
lcall
sbb
inc
push
in
dec
push
icebp
and
fldl
inc
sbb
xor
or
cmp
xchg
cmp
mov
aas
lahf
lahf
ds
shrd
jge
dec
dec
mov
xor
push
cmp
and
and
jl
jne
mov
test
mov
insb
push
shll
lcall
shl
in
testb
stc
xor
cmpsb
dec
xor
cmc
nop
xchg
xchg
add
sbb
imul
mov
js
xor
lret
cwtl
xor
inc
sub
les
jg
and
lret
stc
mov
rcll
ret
pop
and
xchg
shr
testb
mov
roll
push
inc
jno
sbb
pop
jge
cwtl
xchg
pop
push
pusha
add
cmpsl
in
ret
in
sub
faddl
adc
cmpsl
ja
int3
mov
or
daa
dec
sub
cmpsl
repnz
pushf
subb
cmpsb
cltd
das
mov
mov
imul
push
popa
insl
jno
and
add
dec
mov
jecxz
shrl
lea
adc
lds
testb
add
push
rcr
cmp
xchg
mov
push
cmc
sbb
xor
fwait
popf
mov
jnp
xchg
or
sub
sub
and
mov
test
dec
movl
loop
xor
and
xchg
shlb
or
sub
fdivrl
adc
inc
outsb
and
shll
mov
movsb
adc
mov
fcomp
addr16
adc
adc
es
jle
lret
mov
cmp
xchg
adc
pusha
dec
push
mov
mov
dec
inc
arpl
push
pushf
mov
xchg
les
mov
cmp
lods
push
pop
ret
sub
mov
stc
mov
pop
in
jp
mov
jo
into
addl
mov
fcmovne
aam
jle
mov
or
mov
je
or
push
cmp
push
xor
pop
jge
mov
dec
repnz
jne
adc
fs
mov
xchg
in
repz
jnp
rclb
xchg
std
mov
push
shr
rorl
test
mov
mov
fs
fstps
in
das
in
into
xchg
dec
in
shlb
fsubs
fucomip
mov
or
jge,pn
jo
stos
add
mov
push
mov
stos
mov
adc
div
lcall
pop
push
ja
add
mov
or
cmpsb
inc
rcrb
push
xor
xor
jb
mov
leave
lods
rolb
shlb
sti
icebp
pop
pushl
addb
lret
jle
add
insb
adc
sbbl
push
lret
dec
mov
lods
rcl
ret
cltd
in
jg
adc
je
sub
dec
sbb
add
nop
inc
incl
mov
repnz
push
push
inc
or
bound
and
lock
or
mov
push
test
cmpsl
push
mov
cmp
out
mov
fistpl
icebp
sbb
pusha
xchg
ret
aad
sbb
cmp
loopne
hlt
adc
and
pop
cld
jno
or
adc
or
pop
xchg
dec
dec
and
ret
icebp
adc
pop
xor
ret
dec
lret
scas
pop
lock
mov
sub
test
add
mov
xlat
or
mov
dec
negb
xchg
and
lahf
cmp
or
lret
ds
fidivrl
sahf
lret
mov
lods
cmp
rcrl
sub
scas
lods
out
rcrl
loop
push
xchg
aam
insb
cli
inc
aam
ret
push
xor
repnz
sub
adc
dec
insb
in
call
out
loopne
addb
insb
xor
mov
cwtl
cwtl
pusha
test
repz
enter
sbb
cmp
mov
push
pop
mov
push
lcall
jb
stos
adc
addr16
inc
mov
testl
popf
xchg
cltd
push
cmpsb
xor
fs
xlat
jge
push
popf
cmp
ljmp
mov
imul
jnp
xor
stos
push
call
enter
test
dec
out
pop
lock
jae
cmp
in
syscall
stc
jle
pop
pop
push
sbb
jnp
test
movsl
or
ljmp
sub
lock
loopne
popl
xor
sbb
outsb
adc
mov
in
rclb
in
push
or
xor
mov
fsubrl
div
into
push
lods
mov
pop
jl
pop
imul
pop
fsubrs
outsl
cmp
notl
inc
sbb
mov
mov
fs
les
add
push
mov
shrb
test
inc
inc
in
xchg
inc
aad
inc
fistl
add
lcall
js
cmpsb
jae
test
push
mov
xchg
dec
rorb
mov
cmp
inc
dec
adc
ds
xor
fidivrs
lret
fwait
mov
fsubrl
mov
outsl
or
into
jp
xchg
das
adc
cmpsl
xchg
jnp
add
daa
add
jne
rcll
jns
cwtl
push
ficoms
and
js
pop
xor
ss
mov
lods
bound
fsubs
pop
icebp
adc
sarb
jbe
icebp
fadds
popa
jmp
out
rorb
jecxz
clc
inc
das
xchg
cmp
ljmp
pop
dec
xor
mov
dec
push
push
in
insl
mov
int
or
sub
xchg
mov
push
bound
cmp
xor
in
js
jo
stos
mov
inc
hlt
mov
dec
cld
ficoms
jge
andb
push
jbe
cmpsb
pop
ficompl
movsl
lods
cld
movsl
fxsave
lret
sub
fists
adc
push
andl
fsubs
cwtl
decl
test
fsubrs
fdivl
sbb
outsb
or
enter
cmpsl
inc
push
cli
cltd
bound
loope
in
int
mov
add
add
or
addr16
adc
sbb
push
mov
stos
fldt
adc
imul
arpl
mov
shlb
fidivl
mov
sbb
adc
insw
cmc
aas
xor
mov
popa
fs
jb
imul
into
or
push
out
adc
rcr
fsub
xchg
push
inc
adc
xchg
push
mov
testb
xchg
push
jo
lcall
mov
loop
rorl
imul
in
out
gs
inc
pusha
mov
dec
lea
mov
fdivl
mov
mov
inc
adc
sbb
or
lea
pop
sti
jae
cmp
aaa
sar
cmp
movsl
outsb
ss
iret
sub
inc
cmp
and
lcall
mov
pop
mov
add
xchg
pop
js
jne
mov
pop
or
cmpsb
dec
in
iret
lock
leave
mov
dec
dec
jg
sbb
movsl
adc
adc
mov
imul
inc
pop
mov
lods
iret
adc
in
aad
mov
cwtl
push
aas
pop
leave
mov
lods
sub
fcompl
int
ffreep
inc
jno
cwtl
mov
rcll
iret
cltd
lds
jnp
pop
jg
loopne
sti
mov
inc
sub
sub
icebp
fldcw
sbb
nop
test
cmpsl
cli
pop
sub
out
cmpsl
dec
or
fdivs
xor
enter
fsubr
cmp
mov
adcb
lea
fdiv
mov
lret
into
sahf
jp
inc
jecxz
scas
in
mov
cli
rcrl
mov
ja
ret
or
lret
jb
mov
jg
push
mov
inc
imul
mov
and
cmpsb
shll
sub
loopne
fsubrp
pop
mov
out
inc
mov
das
push
flds
jne
jns
mov
or
mov
daa
sub
xchg
test
mov
mov
cli
dec
cmpsl
lock
aad
sti
loopw
and
hlt
cld
pop
sub
mov
xchg
inc
xor
leave
and
pusha
and
test
fcmovbe
cmp
xor
mov
rcll
incb
imul
shlb
popa
test
imul
ds
sbb
movsb
mov
movsb
lods
xor
in
xchg
xlat
imul
sti
ret
into
sbb
mov
ror
movsb
mov
jbe
insl
out
mov
clc
inc
or
mov
int
sub
iret
sbbl
fwait
scas
arpl
loop
fwait
inc
data16
sub
das
mov
push
mov
xchg
jg
loope
cmp
into
hlt
pop
fnstsw
mov
mov
stos
bound
pusha
sub
inc
xor
jg
int
pop
xchg
push
das
out
dec
lret
dec
aaa
ljmp
sahf
dec
fs
xor
dec
or
push
loopne
cld
dec
fmull
std
cwtl
or
jl
pop
mov
pop
cmpsb
data16
xchg
cwtl
jp
ds
faddl
xor
mov
mov
add
sbb
xchg
jecxz
stos
adcl
pop
loop
xchg
lods
fildll
call
repnz
adc
mov
mov
xor
and
out
out
sbb
leave
jp
pop
insb
unpckhps
es
mov
jo
cmp
fsubrp
hlt
mov
mov
pusha
je
sbb
roll
push
loopne
aaa
rol
push
fidivl
loope
insl
and
dec
sbb
sbb
lds
sbb
fstps
fnstsw
jecxz
mov
int3
das
jne
mov
ret
adc
sub
lds
aaa
bswap
movl
mov
push
ljmp
xor
push
fsub
incl
das
add
or
loope
fmull
jae
and
stos
sbb
inc
add
repz
adc
mov
leave
mov
in
test
icebp
gs
sub
shlb
push
cmp
jmp
push
jo
dec
xchg
pop
ja
and
fmuls
rclb
dec
push
jge
mov
or
hlt
daa
std
test
mov
jnp
cltd
push
rcrl
shrl
sub
movsb
add
xchg
in
jae
sub
mov
stc
sbb
mov
jmp
fisubrs
push
jle
sbb
les
mov
sub
adc
mov
sub
popa
add
insl
aas
ss
testb
popa
not
cld
inc
es
push
mov
inc
inc
repnz
test
push
xlat
ficompl
sub
ss
test
mov
ret
mov
call
cwtl
jne
mov
fdivr
adc
jae
lcall
test
push
mov
add
or
js
or
pop
data16
jg
jecxz
stc
lock
int
add
jns
jo
or
mov
gs
push
mov
add
pop
iret
out
in
popa
cld
add
fwait
stc
lcall
xchg
movsl
xchg
adc
xor
iret
shr
arpl
fiaddl
test
test
jl
lds
adc
ljmp
scas
inc
mov
sub
sahf
mov
dec
mov
scas
ljmp
rcrl
xor
xor
in
jp
pop
mov
scas
jge
rclb
cld
arpl
jecxz
pop
ljmp
mov
mov
add
orb
jo
add
adc
fisubs
sbb
outsb
rclb
testl
mov
icebp
mov
lret
inc
mov
in
ds
mov
xlat
push
jmp
pop
dec
out
mov
mov
std
dec
notb
dec
dec
fisttpll
jb
add
test
ja
inc
jecxz
cmpsl
jge
into
fs
icebp
fsubrp
dec
cli
faddl
mov
cltd
or
ss
lahf
xor
push
repz
ja
ljmp
mov
dec
and
sub
jg
dec
jo
pop
jbe
push
cmpsl
arpl
cmp
movsb
jno
and
js
xchg
fiaddl
or
xor
push
gs
jbe
test
push
arpl
lea
das
cmc
inc
ret
lahf
xchg
xlat
mov
lea
hlt
mov
push
repnz
fiadds
mov
sub
movsb
out
loopne
insl
inc
pushf
mov
xchg
mov
and
xor
in
pop
mov
sbb
sub
in
inc
pop
mov
inc
inc
arpl
lods
or
pop
testl
std
lret
dec
insl
daa
outsl
outsl
fdivs
lods
cmp
sbb
fdivrp
add
push
out
and
mov
jbe
lds
cmp
lock
outsl
stos
jmp
add
ret
xor
out
aaa
or
faddl
iret
test
push
cmp
inc
dec
dec
in
sbb
ljmp
xchg
dec
xor
mov
ja
popa
mov
push
add
sub
and
adc
into
jmp
and
xor
arpl
or
out
aad
stos
xchg
shrb
xchg
lock
mov
sub
out
nop
lods
mov
aaa
xchg
jns
xchg
jbe
insl
into
cmp
test
out
push
leave
insb
add
cmp
xchg
cltd
adc
pop
mov
fwait
stos
push
xor
aas
arpl
pop
or
push
sbb
jnp
hlt
pop
fnstsw
popf
incl
popf
mov
xchg
inc
or
repnz
or
jae
dec
sub
and
adc
lock
mov
push
fs
test
jle
test
sub
pop
jns
lcall
push
daa
inc
cmc
cmc
mov
ret
pusha
xchg
pop
xrelease
sarb
loop
jne
lret
push
mov
adc
push
dec
push
outsb
push
push
sub
and
cmp
mov
in
popa
push
mov
jmp
sbb
cli
mov
fldcw
rcl
jg
xchg
add
cmc
lcall
sbb
stos
mov
xchg
xchg
popa
call
insl
aam
lods
js
cmp
lahf
push
dec
jp
cs
shr
orb
std
in
nop
mov
popa
aad
jmp
les
daa
sbbl
pop
ss
out
movsb
sti
movsl
adc
pop
mov
push
dec
cmp
cwtl
repnz
sahf
cld
lds
call
xor
in
movsb
test
mov
fwait
outsb
jbe
mov
adc
pop
rcrb
data16
xor
pop
sbb
mov
stos
hlt
aas
icebp
and
outsl
cmp
fmull
xlat
mov
adc
mov
int
xor
adc
shrl
push
test
adc
mov
loop
jne
dec
jne
push
inc
fs
dec
lcall
mov
add
push
inc
xor
aaa
jp
std
pop
jecxz
xor
call
push
movb
hlt
push
addr16
adc
popa
pop
cmp
cmp
dec
jnp
adc
cmp
cmp
pop
lock
vpcmpeqd
push
cmp
pop
shlb
scas
cmp
imul
nop
xchg
cmp
ret
dec
ja
sub
mov
mov
mov
cmc
jg
test
inc
cmpsb
xorb
fldl
stos
leave
jmp
in
out
sub
xchg
or
test
hlt
push
cmp
insb
pop
ljmp
pop
lcall
mov
mov
inc
imul
push
mov
dec
fs
xchg
pushf
js
icebp
add
js
push
ss
adc
imulb
out
shl
movsb
fs
mov
hlt
in
fisttpl
sbb
faddl
ljmp
ljmp
inc
fwait
enter
out
xchg
orl
cmpsl
dec
or
je
lcall
notb
sarl
and
adc
ljmp
lahf
mov
inc
icebp
mov
dec
dec
add
movsl
mov
add
pop
das
xchg
mov
push
lret
pop
add
mov
into
in
sub
jbe
lcall
xchg
and
lock
fsubrl
xor
inc
outsb
push
push
adc
cs
cmp
cld
or
sbb
adc
cs
mov
cmp
movsl
rclb
and
lahf
xchg
cmc
lods
int
inc
mov
mov
fcos
test
cmp
mov
push
test
cmc
sbb
sub
mov
repz
test
mov
lods
adc
dec
mov
add
pop
cs
mov
icebp
cltd
lcall
sub
sub
jmp
sbb
jecxz
dec
lods
jp
cltd
mov
fwait
xorl
inc
cmpsb
xor
call
loopne
fcmovbe
lcall
mov
and
cltd
push
imul
mov
testb
mov
xlat
jecxz
add
lret
xchg
pop
test
gs
in
mov
repz
xchg
leave
mov
inc
xor
jmp
lods
or
and
cld
xor
fsub
dec
je
inc
xchg
mov
inc
xchg
inc
xor
cltd
inc
dec
out
sbb
dec
repz
push
data16
test
and
nop
fsub
or
jg
cmp
cld
popa
ficompl
das
fisubrs
mov
out
cmpsb
je
inc
sahf
mov
or
dec
bound
jg
in
ja
cmp
mov
pop
sti
adc
shrb
outsl
rorl
icebp
dec
mov
add
mov
inc
cltd
inc
pop
mov
cltd
test
ret
and
pop
pop
fsubl
jo
call
enter
jl
ret
pusha
out
jmp
inc
mov
ret
or
mov
or
test
adc
loopne
mov
mov
adc
sahf
jns
pop
decl
sahf
jne
ret
shrb
aad
fldcw
xor
ret
xor
and
fwait
out
pop
out
pop
cwtl
mov
mov
xor
into
jbe
adc
xchg
cmp
fdivl
sub
test
inc
mov
xchg
out
sarl
sbbl
std
or
dec
fld
add
fmuls
sub
hlt
ret
in
inc
int3
push
and
fsubrl
xchg
pop
mov
cmp
xchg
lea
lret
imul
mov
idivb
push
sbb
or
cmpsl
or
aad
jnp
xchg
lea
mov
sti
mov
adc
rolb
faddl
xchg
push
sub
repz
or
ljmp
mov
mov
mov
xchg
in
cmpsb
cli
ja,pt
add
inc
lods
inc
cmp
pop
lock
sub
cmp
mov
out
xor
out
xchg
rol
lcall
xor
repnz
jns
xchg
paddusb
cmp
dec
inc
mov
int3
in
loope
fs
add
cmp
out
ljmp
bound
push
sub
xlat
sbb
lahf
int
sar
xor
push
cltd
xlat
cld
dec
push
cmc
push
cli
lock
xor
jge
fidivl
pop
xchg
pop
les
jmp
test
push
das
pop
pop
addl
sub
js
adc
fisttpll
mov
xchg
je
xchg
leave
fisttpl
test
add
lea
pop
sbb
add
push
sbb
das
xor
ret
aaa
or
and
ds
fscale
nop
rcrl
imul
add
jne
add
cmp
push
xor
insb
mov
outsl
pop
sbb
ss
in
add
dec
or
adc
inc
pop
mov
loop
sti
sub
jne
test
sbb
movsl
inc
xchg
mov
add
or
cmp
pop
sbb
sub
into
das
daa
scas
mov
push
xchg
lea
fmull
dec
pop
stc
mov
in
ss
xor
int
das
popf
jl
xor
push
xor
add
ret
fstl
add
adc
stc
mov
das
cmpsb
clc
pusha
pusha
sbb
mov
cmp
mov
ret
inc
testb
filds
pop
sub
lods
push
pusha
imul
fistpl
or
cmp
mov
adcl
xor
test
and
je
jg
ja
xor
test
push
push
mov
push
inc
dec
jmp
sarl
test
inc
lret
loopne
jmp
xor
xchg
pop
dec
lds
and
jno
scas
shlb
ret
mov
loope
mov
mov
ja
ljmp
insl
jo
lcall
sbb
cmc
lock
dec
or
loopne
sbb
test
mov
mov
add
push
mov
daa
xchg
popa
inc
sub
dec
jg
mov
or
pop
push
iret
inc
stos
es
and
xor
or
pop
xchg
mov
lds
inc
xchg
pop
jne
sub
jecxz
ds
xchg
sbbb
inc
out
xchg
orb
jmp
sti
sub
fs
xchg
jl
mov
jns
aam
mov
mov
adc
sbb
movsl
int3
lahf
aam
jl
ljmp
cltd
sbb
fmul
mov
popa
sbb
sub
ficoml
outsl
lock
nop
fldcw
scas
outsl
mov
jg
hlt
push
sub
xor
fnstenv
test
pop
in
popf
or
cmpl
sbb
cwtl
pushf
dec
pop
hlt
lock
stos
insl
pop
shll
jmp
or
push
or
jae
and
or
sbb
fisttps
adc
mov
loope
cs
lahf
jnp
ret
js
ja
test
fcoms
call
sarb
movl
sub
mov
push
or
std
shl
pop
sbb
cld
pop
addr16
xchg
mov
lahf
inc
icebp
xor
and
adc
cmp
mov
in
stc
ds
insl
lcall
adcl
jae
in
jmp
popf
sti
in
add
mov
popf
inc
in
lahf
aas
dec
mov
or
iret
pop
adc
outsb
aad
mov
lahf
ljmp
fnclex
dec
mov
fsubr
les
xor
scas
sub
xlat
dec
cmp
xor
and
sub
dec
dec
add
push
out
inc
out
push
sysexit
sub
data16
push
mov
push
pop
fisubrl
stc
adc
pusha
mov
bound
sti
aas
scas
repz
test
cmc
pop
in
pop
mov
or
aam
or
jle
mov
xorl
dec
and
adc
fnstcw
lahf
inc
shrl
adc
or
or
inc
data16
fdivp
dec
frstor
scas
sub
mov
daa
jl
xor
mov
mov
push
daa
bound
or
jb
testb
mov
xchg
cli
in
mov
add
idiv
sub
jns
xchg
inc
bound
fdivl
mov
fs
rcrb
jge
movsb
jmp
jmp
fucomp
jmp
imul
mov
jo
cltd
or
cmp
xchg
inc
cmp
mov
sbb
mov
push
repz
addr16
cmpsb
fildll
ret
scas
or
jno
jmp
fistps
mov
mov
aam
stos
pop
pushf
repz
jo
push
cmp
ret
clc
test
xchg
mov
sarl
jo
inc
push
adc
cmp
xchg
mov
mov
mov
fmull
dec
xchg
jg
pop
je
ret
rclb
fs
decb
fdivrl
icebp
jle
xchg
adc
mov
add
test
jl
or
out
adc
cmp
pop
push
and
daa
push
rol
loope
add
es
xchg
lcall
fucomp
push
inc
jbe
movsb
or
mov
dec
stos
jo
shlb
and
enterw
dec
ljmp
stos
outsb
mov
push
mov
aas
jmp
cmpsb
lods
jae
push
sbb
jns
cmc
mov
inc
pop
and
outsb
mov
jo
notl
mov
pusha
pusha
imul
cltd
cmp
sarl
roll
data16
pusha
into
lods
imul
imul
jnp
in
in
pop
add
repnz
mov
sbbl
sbb
dec
int3
push
sarb
notrack
cwtl
insl
aaa
xchg
call
cmp
push
daa
inc
outsb
call
daa
lds
push
rol
loope
pushf
sbbb
push
adc
sbb
cmp
arpl
outsb
scas
out
in
mov
out
mov
mov
xchg
mov
loope
fs
pop
gs
xchg
push
repnz
test
add
imul
dec
fsubr
or
sub
and
clc
movsb
in
xchg
mov
loope
jns
xchg
jno
xor
jmp
rorl
dec
mov
les
sub
cmp
mov
lds
ja
jns
cmpsb
popf
mov
xor
and
loopne
mov
lock
and
out
and
mov
mov
and
popa
sahf
pop
stos
arpl
or
out
sar
push
mov
outsl
aas
mov
xchg
push
cmpsb
pop
repnz
dec
cmc
pop
fisttps
leave
xchg
xchg
cmp
in
fistl
movsl
les
andb
pop
add
dec
inc
fwait
jp
cld
int3
pop
fbstp
cli
les
mov
enter
int
cs
lret
fidivs
add
jp
add
es
adc
sti
clc
push
inc
sbb
xchg
pop
movsl
repnz
xlat
and
jo
loop
xchg
or
in
mov
inc
mov
bound
and
mov
insl
pop
jbe
les
hlt
xor
push
inc
out
inc
fs
fcmovnb
push
xor
dec
fdivrp
xor
inc
jae
jne
fsubr
sub
push
cmp
mov
iret
cmp
insb
and
cld
jmp
stos
push
lods
ss
lock
mov
std
xor
inc
inc
in
gs
lret
xchg
pop
or
mov
shr
fstps
push
popf
dec
mov
loope
inc
or
or
fwait
les
les
out
inc
mov
clc
add
loop
inc
mov
sub
fstpt
jg
cmp
push
push
lock
daa
dec
push
push
xchg
push
das
fdivs
push
mov
pop
or
popf
jne
incb
push
lcall
in
push
xchg
adc
cmp
enter
mov
test
jmp
pushf
jae
stc
xchg
shlb
inc
aaa
xor
add
or
mov
adc
adc
inc
addr16
fwait
ss
jno
lahf
push
in
js
cmp
xchg
out
mov
fisubs
xor
sbb
lcall
stc
into
cmpsb
push
mov
in
xchg
inc
and
mov
std
rorb
add
adc
push
shlb
pop
sub
clc
xchg
in
dec
pushf
jae
or
cmp
jns
dec
sbb
ficompl
stc
divb
or
imul
sbb
iret
push
fwait
sub
roll
and
js
xor
in
add
push
je
out
jle
cmpsl
imulb
xchg
aam
movsl
stos
movsb
jg
push
xor
mov
dec
or
mov
arpl
mov
mov
lret
cmp
adc
mov
add
sub
jns
loop
popf
mov
pop
mov
aas
lds
sbb
call
mov
rcr
dec
push
pop
and
mov
dec
dec
arpl
push
and
adc
mov
adc
push
jb
mov
outsb
push
test
adc
loop
mov
push
pusha
add
imul
lret
or
fs
or
repz
jo
fstl
push
sti
sub
rcl
sub
shll
sub
jmp
mov
aam
xchg
fcompl
dec
cmpsl
les
xchg
sbb
mov
cmp
scas
add
push
fistpll
sbb
dec
adc
pop
mov
fidivrl
inc
xchg
iret
inc
fs
push
andl
inc
mov
and
out
andl
loop
out
movsl
aam
int3
iret
cs
lea
push
js
and
lret
and
dec
and
mov
loop
in
sti
sbb
pop
jno
mov
ret
jne
mov
mov
add
push
fldl
pop
fs
jmp
mov
insb
fwait
dec
sub
cmp
dec
push
cli
das
mov
cmp
xlat
jb
add
xor
sahf
xor
or
jb
fnstsw
jmp
enter
mov
es
mov
int3
xor
mov
inc
jge
mov
jge
dec
mov
xchg
scas
inc
pop
or
lea
pop
jl
sub
scas
xor
jae
push
push
ret
adc
mov
enter
mov
push
push
cmp
adc
inc
or
bound
push
pop
mov
dec
loope
push
cwtl
repz
shll
mov
dec
xchg
es
idivb
lret
push
mov
test
shrb
bound
dec
xchg
fcoms
aam
ja
inc
mov
adc
test
push
dec
divb
mov
xchg
nop
sub
popf
push
pop
pop
cwtl
pop
lea
pop
mov
stos
push
adc
mov
inc
fcomip
orb
mov
ret
push
mov
push
jmp
mov
aas
jle
mov
aas
or
jmp
pushw
lahf
cwtl
push
aaa
inc
fucomi
stos
ret
dec
jp
jno
loopne
in
mov
sbb
mov
outsl
les
or
cli
or
int
jo
loopne
movsb
xor
mov
sub
mov
nop
add
cmp
nop
or
add
ret
arpl
fbstp
push
sahf
movsb
and
aaa
cmc
mov
outsb
imul
ret
xorb
das
insl
insl
stc
dec
push
dec
cs
push
sbb
mov
inc
jne
mov
add
and
push
sti
adc
xor
xchg
shll
mov
pop
pop
pop
inc
imul
outsb
jmp
pop
push
jbe
pop
in
lds
addb
bound
les
pushf
push
pop
faddl
jne
pusha
xor
outsb
xor
sahf
test
pop
push
xor
pop
aam
add
enter
dec
jno
stc
pop
in
jno
sahf
inc
push
cmp
jle
sub
sbb
sbb
jmp
or
gs
ficoms
inc
mov
pushf
mov
movsb
repnz
repz
mov
imul
in
movsb
xchg
cmp
test
inc
jp
sub
mov
sbb
cld
pop
fnsave
xor
mov
mov
jl
cld
xor
xor
xchg
pop
js
cmc
mov
sub
mov
fdivl
cmpsl
in
sti
xchg
inc
add
xor
or
mov
cmp
lods
inc
imul
inc
mov
pop
hlt
jnp
sub
mov
push
hlt
lock
dec
mov
cmpsl
out
cwtl
and
in
mov
or
xor
stos
sbb
jno
mov
adc
inc
int3
fldenv
xor
jg
test
in
int
inc
fs
xor
mov
xchg
xchg
fwait
imul
stos
mov
loopne
lds
sahf
jbe
pop
cltd
adc
stc
loope
lock
xchg
mov
push
leave
fisttpl
xor
jo
xlat
aaa
adc
sahf
test
iret
std
stos
xorl
adc
push
mov
roll
js
aas
data16
outsb
insb
push
int
bound
add
mov
pop
sahf
cmp
scas
push
cmp
mov
iret
fcmovnbe
and
jge
sub
jl
adc
leave
cmp
mov
dec
lahf
in
test
inc
mov
subl
call
xchg
mov
aaa
cmc
pop
mov
test
mov
scas
or
xchg
cmp
mov
inc
cltd
push
and
fxch
stos
pop
pop
das
mov
xor
dec
repnz
mov
xchg
testb
fwait
xlat
ret
fsubrl
add
je
push
fists
mov
jne
cld
stc
jnp
xor
jp
out
popa
fimuls
xchg
icebp
push
mov
dec
imul
mov
loopne
adc
icebp
inc
mov
movsb
adc
pop
cmp
sub
push
push
stc
addr16
adc
cmp
xchg
jnp
in
int3
cwtl
dec
lods
pop
mov
or
jmp
hlt
aad
mov
js
jne
in
loope
inc
sbb
pop
ret
cmp
mov
pop
arpl
pop
sub
dec
rorl
mov
inc
sarl
shlb
stc
hlt
movsl
mov
adc
push
xorl
pop
movsb
xor
jnp
loop
ret
and
call
jecxz
mov
jns
ljmp
fisubrs
pop
sub
jae
jp
jmp
rorl
lret
rol
mov
cli
mov
shl
ljmp
imul
push
mov
mov
out
cmp
xchg
enter
xchg
add
frstor
test
rcrl
scas
inc
inc
dec
test
xchg
sbb
dec
mov
cmp
inc
std
fsts
clc
andb
shrl
push
inc
dec
sub
lcall
and
xchg
and
inc
adc
movsl
add
add
mov
es
pushf
out
fidivrl
fadd
out
clc
mov
adc
dec
std
cmp
jb
or
lcall
fnsave
ds
jmp
sub
aaa
scas
or
movsl
jmp
xor
std
jge
mov
inc
dec
jno
in
pop
xor
inc
push
enter
fwait
jge
mov
repnz
incl
xorb
push
mov
in
pop
fnstsw
dec
lret
cmp
mov
adc
jl
cmp
shr
divl
lret
push
lea
out
pop
lret
push
mov
sbb
jne
cmc
subl
pop
xchg
dec
dec
mov
mov
idivl
in
sub
mov
xor
fs
adc
pop
icebp
cmp
fcoml
mov
or
fsubrl
mov
cltd
popa
pop
xchg
or
inc
in
mov
loop
jno
loopne
mov
movsl
filds
or
add
enter
subb
jp
sbb
js
es
pop
sbb
pop
test
dec
repz
adc
mov
js
or
popa
inc
nop
xchg
pusha
jns
mov
push
pop
lcall
pop
sbb
shlb
xor
in
pop
push
push
jmp
fcmovne
outsl
mov
push
test
dec
push
sbb
mov
cmc
cmpl
xchg
mov
lods
mov
xor
xor
arpl
pop
mov
arpl
dec
js
ret
pop
adc
mov
jns
movsl
fisubs
fchs
dec
pop
popf
mov
les
nop
cmp
jmp
rcrb
push
fwait
inc
lock
popa
insl
jnp
jno
hlt
outsb
mov
mov
data16
ds
ret
data16
xchg
ret
pop
xor
dec
imul
fsub
faddp
lods
xor
movsb
stc
outsl
repz
mov
les
cmp
stc
fstps
stos
sub
fsts
mov
scas
adc
jecxz
cmp
mov
ss
dec
push
enter
andb
shl
repz
fidivl
cmp
jo
hlt
cli
adc
sahf
xor
std
xor
in
pop
mov
lahf
push
cmpsl
xchg
sahf
lret
inc
leave
jp
js
imul
scas
jge
adcl
cmp
xchg
jnp
mov
stos
sti
dec
xor
lds
mov
push
pop
jecxz
xor
fcomps
jp
lods
inc
lcall
add
xchg
test
xor
ficoml
call
scas
pop
sub
pushf
jp
fwait
outsl
iret
inc
push
sub
or
mov
xchg
fcmovbe
xor
adcl
jl
mov
xor
mov
into
stos
sub
adc
push
cmp
pop
test
ja
test
mov
into
mov
out
push
das
cltd
movsb
idivl
push
jnp
into
add
mov
inc
inc
and
mov
dec
push
test
pop
xor
and
mov
leave
cwtl
jle
add
fdiv
outsl
xor
aaa
int
aaa
in
jmp
decb
xchg
insl
fstpt
push
mov
adc
jmp
jb
dec
xor
popa
ljmp
popa
das
dec
movsb
push
scas
addb
mov
xchg
mov
aas
jge
stos
mov
pop
jle
std
xlat
movsl
sub
jmp
popf
sbbb
mov
add
xchg
or
fstpt
scas
out
fiaddl
cmp
push
dec
icebp
xchg
sbb
rcr
inc
pushf
imull
in
xchg
adc
cld
jge
repz
cmp
and
movsl
andl
test
mull
in
xor
mov
jno
xor
inc
test
das
push
xchg
outsl
mov
cmpsb
push
push
mov
dec
loopne
gs
xchg
scas
stc
or
mov
xchg
sub
pop
xchg
test
push
or
cld
sub
lea
adc
push
jmp
in
add
out
push
std
dec
adc
loope
xchg
mov
sbb
jmp
daa
in
lahf
cmp
pop
fistl
add
in
push
gs
dec
lds
pop
lods
repz
add
cmp
js
sbb
or
jecxz
and
incb
mov
and
aaa
push
fstl
scas
xchg
rclb
mov
call
addb
mov
stos
cmpsb
pop
sbb
scas
xchg
pop
push
mov
movsl
js
outsl
and
notb
test
dec
mov
es
add
hlt
cs
test
outsl
fidivrl
imul
sbb
mov
adc
cmpl
into
divl
add
adc
shrb
mov
shrb
cmpsl
mov
popf
shl
js,pt
dec
int3
mov
leave
inc
bound
mov
mov
cmp
addl
jo
xchg
or
cmpsl
lock
xor
dec
sti
xor
clc
jp
mov
lcall
ret
out
jne
int3
dec
inc
ds
or
xchg
cmp
sbb
dec
test
insl
xor
in
xor
sub
mov
mov
cmp
ret
sub
sub
adc
pop
nop
loop
cmp
push
mov
jge
mov
mov
cmpsl
inc
mov
rol
iret
push
sti
dec
data16
stos
lahf
or
cwtl
ror
add
stc
repnz
jmp
scas
jno
decl
push
sbb
cmpsl
fucomip
cltd
ja
pop
jecxz
cmp
imul
pop
andl
out
or
mov
mov
imul
movsb
call
into
js
sub
dec
int3
mov
loop
cwtl
inc
int3
or
adc
in
jge
imul
adc
lods
jbe
sbb
xorb
scas
dec
and
lahf
icebp
sbb
scas
or
dec
subl
ret
sbb
and
lret
mov
sub
adc
mov
je
js
mov
ret
test
or
add
lea
or
sarb
and
mov
xor
push
and
cmp
mov
lds
adc
inc
scas
sbb
iret
aaa
stos
push
mov
xchg
test
pusha
pushf
fwait
das
lods
je
js
lcall
jp
pop
aad
pop
cmp
or
pusha
adc
aas
imul
ret
pop
in
lods
movsl
jnp
mov
movq
fwait
rcrl
fcomps
cli
push
ss
repz
inc
jp
mov
pop
or
push
arpl
fsubs
cmc
int
outsb
sti
jbe
jae
adc
pop
mov
xchg
sbb
ucomiss
or
insl
insl
adc
mov
xchg
adc
sahf
xchg
test
add
sahf
scas
mov
push
or
mov
test
imul
mov
out
inc
push
push
push
add
arpl
aaa
sti
push
mov
push
aam
pop
int3
add
xchg
dec
xlat
xchg
sub
cmp
push
and
mov
sub
mov
popa
push
lahf
mov
jg
mov
shrb
sti
cwtl
dec
sub
inc
mov
mov
push
call
push
adc
push
dec
in
hlt
cli
jmp
sbb
dec
pop
pop
mov
mov
ficompl
or
add
sub
cs
dec
add
out
rcl
mulb
push
mov
aam
xchg
idivb
xchg
in
pop
lahf
jg
fmul
or
clc
out
push
sbbl
push
movsl
mov
lahf
xor
dec
ret
js
mov
into
mov
icebp
and
cmp
data16
hlt
call
or
mov
fsubl
outsl
shlb
inc
lods
lods
lock
out
pusha
mov
add
out
icebp
cmp
addr16
sub
jle
je
aad
ret
xor
push
and
push
ja
push
sti
insb
popa
pop
loopne
in
mov
loopne
lsl
or
pop
or
lods
ljmp
clc
stc
dec
adc
cltd
das
jg
jg
cs
pop
push
je
ljmp
dec
jne
and
call
lret
loopne
in
pop
or
fstl
scas
shlb
xor
dec
xchg
stc
imul
mov
inc
pop
pop
daa
frstor
arpl
repz
fistl
lds
cmp
sub
out
arpl
cwtl
and
cmp
xchg
call
push
cmp
lea
imul
bound
adc
inc
stc
sbb
lret
std
pushf
nop
pushf
popf
pop
bound
rcll
add
xchg
xchg
sahf
sbb
push
loop
inc
call
fiadds
lds
jmp
mov
sub
jo
mov
xchg
mov
fiadds
ja
outsb
fcmovnu
sub
sbb
push
test
xchg
mov
imul
adc
mov
jae
pop
imul
out
jp
xchg
dec
mov
xchg
jno
push
mov
loope
pop
aam
scas
xor
mov
cltd
nop
cmp
std
mov
mov
in
cmp
push
dec
xor
ret
scas
daa
mov
subb
ds
jp
aas
xchg
out
push
test
stos
popf
stc
sbbl
jl
or
and
mov
dec
cmp
sub
stc
das
and
sbb
ss
cmp
jae
loop
sub
loopne
aad
xchg
pop
add
sahf
sarb
das
daa
mov
mov
jecxz
out
lret
inc
push
cs
orb
push
lahf
mov
push
cmp
pop
xlat
js
stos
or
popa
jmp
vcvtpd2dq
cmp
dec
xor
out
and
and
inc
push
adc
pop
rep
xor
shll
lret
stc
jo
loop
push
lds
outsb
sahf
cmp
icebp
add
js
inc
fcomp
add
hlt
pop
insb
push
adc
jne
cld
push
sbb
dec
jo
push
je
into
lcall
lar
testl
adc
dec
outsl
mov
insl
aad
mov
es
push
cmpsl
out
cmpsb
enter
or
push
loopne
dec
loope
data16
cmp
pop
in
adc
sub
test
xor
mov
int
cmp
dec
xchg
mov
insb
push
and
add
jo
xchg
cmc
repnz
sbb
adc
inc
xchg
xchg
out
mov
cmp
mov
and
sub
dec
push
push
pusha
mov
dec
xlat
jmp
sbbl
dec
sub
aam
das
test
pusha
cmpsl
pop
lods
dec
cli
pop
jle
insb
pop
leave
mov
pop
les
xchg
inc
xor
mov
inc
adc
push
xchg
mov
std
test
icebp
mov
loop
push
pop
cmc
inc
add
imul
jl
mov
dec
cwtl
dec
xor
dec
int
or
jno
add
in
aaa
push
sub
pop
and
loope
fwait
mov
pop
add
push
xchg
mov
pop
jnp
out
fstps
mov
test
pop
rclb
mov
lea
les
push
insl
jae
xor
adc
add
inc
les
jp
stos
hlt
mov
jecxz
dec
rcl
pop
add
jmp
sbb
into
xchg
pop
push
lods
mov
fildll
xchg
inc
stos
pop
icebp
insl
mov
int
imul
dec
jmp
jno
cmp
adc
sarb
and
pusha
mov
inc
es
loop
nop
xor
sbb
stos
sarb
xor
pop
adc
jg
enter
out
insb
jne
xor
mov
push
and
pop
xlat
mov
push
test
hlt
roll
fsubp
shl
xchg
adc
js
outsl
xchg
clc
into
sub
or
sub
or
jns
sarl
add
and
add
out
jo
stos
dec
dec
dec
sbb
es
inc
sub
sbb
lods
cli
add
pop
dec
push
scas
sbb
bound
cwtl
sbb
mov
aam
pop
popa
push
add
adc
clc
jl
push
mov
sbb
pop
scas
sub
mov
subb
jns
daa
pop
push
and
je
rcll
or
mov
call
jmp
in
pop
sbb
sbb
pop
mov
push
mov
cli
cmp
std
insl
dec
rorl
or
push
add
xor
xor
ficoms
jecxz
pop
shrl
dec
and
dec
pop
add
add
js
cmp
adc
adc
dec
jno
mov
sub
aas
outsb
xchg
dec
mov
pop
hlt
pushf
aad
inc
outsb
ret
gs
cmp
mov
sbb
dec
insb
xor
call
pushf
movsl
and
mov
mov
jle
and
out
icebp
sbb
jecxz
dec
in
jbe
and
lahf
cmp
xor
or
push
shlb
or
jg
pop
test
mov
push
pop
or
in
lock
cwtl
jl
xchg
popl
inc
lock
repz
hlt
xchg
arpl
cmp
pop
xor
movb
out
hlt
shll
jmp
enter
mov
imul
cmc
add
movsb
xor
ret
iret
pop
jp
test
divl
dec
cwtl
sarb
insl
jle
xchg
lret
inc
lret
hlt
mov
mov
or
pushf
lret
adc
arpl
push
jl
fistps
push
mull
push
jg
fst
orb
mov
jne
mov
jae
xchg
pop
jmp
daa
adc
insb
push
sbb
pop
stc
aas
hlt
add
dec
xchg
andb
add
sub
sbb
mov
dec
inc
push
jp
shll
cmp
push
push
pop
xor
inc
mov
inc
dec
or
pop
inc
adc
dec
push
dec
push
pusha
icebp
mov
xor
sbb
pop
nop
push
fs
lock
ja
mov
lret
insl
sbb
enter
or
aas
adc
xor
cwtl
dec
popf
pop
mov
out
jg
adc
inc
sbb
or
cmpsl
push
xchg
sbb
test
mov
sbb
cwtl
xor
cmp
lods
sbb
push
lret
xor
stos
mov
negb
popa
sbb
cld
inc
inc
inc
mov
in
iret
dec
rorl
xor
jb
fnstsw
sbb
shrl
push
or
jg
fidivrl
repz
aad
pop
dec
and
xchg
and
dec
or
add
push
les
pop
xchg
adc
jp
cmpsb
ret
cld
inc
and
mov
xchg
js
sub
add
or
sbb
hlt
mov
into
clc
int
cmp
int
mov
mov
or
fs
pop
lods
sti
mov
rorl
in
int3
push
xchg
inc
aas
repz
dec
sbb
scas
and
outsl
dec
in
sub
mov
imul
movsb
cmpsl
push
xchg
and
out
xor
adc
cltd
mov
lcall
sub
mov
sub
add
das
aad
push
cmp
mov
mov
push
das
subb
out
stos
aaa
dec
test
out
cltd
cmpsb
subb
push
sbb
xchg
xchg
adc
flds
mov
in
jle
mov
mov
hlt
adc
or
mov
fs
clc
push
frstor
add
dec
push
add
fsub
bound
insl
fldenv
and
xor
sub
sub
inc
mov
dec
dec
int
xchg
shll
insl
scas
lret
sbb
inc
fcmovnb
out
in
push
dec
push
dec
mov
add
jno
inc
mov
lds
out
in
xor
cmp
scas
cmpsl
leave
outsl
fstl
inc
sbb
pop
cmp
inc
mov
fdivr
jle
je
jge
and
aad
stos
stos
cs
mov
loopne
lds
xor
and
or
add
xchg
jns
das
std
and
adc
cli
in
ss
test
sub
testb
cmp
xchg
fnstenv
mov
jno
add
jae
cmp
ret
xlat
subb
cmp
imul
cmpsb
and
push
pop
xchg
add
in
in
nop
rcrb
addr16
mov
push
lret
xor
and
inc
icebp
xor
cltd
mov
repnz
and
adc
in
fidivrs
xchg
xchg
xchg
aad
cli
aaa
cmp
cmp
mov
imul
je
pop
jne
and
rcll
js
xchg
adc
push
or
mov
fdivrp
pop
sub
or
outsl
sub
imul
push
and
adc
shlb
xor
dec
add
xor
jecxz
push
inc
popa
jmp
orl
sti
test
inc
lret
pop
push
lds
push
sbb
xchg
jbe
hlt
pop
loopne
int3
insb
adc
insl
and
mov
and
push
outsl
dec
add
adc
je
arpl
ljmp
fdiv
fwait
loop
ss
call
dec
sub
mov
jp
xor
sahf
adc
xor
lods
sbb
sbb
out
and
das
push
pop
pop
sub
fcomip
jmp
push
popf
xlat
sbb
fdivl
push
cmpsl
adc
fs
jne
insl
lods
lock
aam
clc
xor
inc
or
loopne
mov
jle
ljmp
stc
jno
mov
adc
xchg
push
scas
loope
cmp
repz
cltd
ljmp
insb
jbe
lret
in
pause
insl
fmull
sub
or
imul
jge
cltd
sub
loopne
fnsave
insl
and
cld
push
mov
sub
mov
nop
sbb
loope
mov
sbb
shlw
lcall
scas
or
insl
out
pop
sbb
xor
fadds
xchg
pop
cmc
test
mov
enter
inc
sbb
aam
into
sti
xchg
fsubrl
ret
xor
xchg
or
push
mov
dec
rorl
jbe
pop
scas
push
les
sub
and
jno
xchg
adc
in
ljmp
cmp
mov
adc
mov
shrl
push
sbb
jo
mov
adc
mov
daa
sub
mov
nop
lahf
adcl
mov
jl
xchg
push
scas
mov
aaa
sbb
or
cmpsl
dec
movsl
in
mov
int3
int
sub
out
jmp
sbb
cmp
outsb
xor
cmp
nop
pop
das
or
clc
lea
fnsave
xor
outsl
mov
mov
repnz
aas
pop
jb
xor
sub
dec
in
or
xchg
je
bound
jne
xchg
and
pop
push
and
ficoms
les
add
shl
or
and
addb
add
test
mov
sti
mov
cld
inc
data16
mov
mov
sti
test
add
rorl
xor
add
addb
pop
ds
pop
mov
xor
cmp
insl
mov
mov
mov
testb
sub
loope
imul
mov
aas
mov
andb
std
repnz
daa
dec
inc
adc
test
pop
pop
lea
mov
jge
push
aam
pop
js
cmpsb
xorl
loope
loope
sbb
cltd
pusha
ljmp
gs
addw
dec
mov
iret
xchg
lea
data16
mov
aaa
mov
mov
cmp
pop
sbb
in
cmp
ret
sub
out
shrl
negb
xchg
daa
das
xchg
in
subb
outsb
cmpsl
fwait
jg
insl
push
rcll
sub
dec
stc
aaa
test
call
jg
ja
or
loop
loope
and
pop
adc
andl
mov
jmp
xchg
fdivl
dec
sbb
not
mov
jns
xchg
jnp
xchg
mov
add
mov
adc
jle
inc
push
xorb
push
out
xor
lahf
lds
insl
mov
jo
pop
outsl
inc
fisttps
cmpsb
push
sbb
xor
mov
mov
loop
loop
pop
sbb
cmpsb
jb
or
push
sub
add
in
cmp
cmp
cltd
out
shll
dec
mov
in
jl
clc
mov
repz
pop
daa
iret
dec
mov
loopne
out
fcmovb
inc
shll
nop
in
movsb
iret
out
das
dec
fldenv
mov
mov
cmp
jge
xchg
cltd
xchg
daa
dec
inc
out
sub
lret
inc
adc
pushf
push
mov
loopne
fcomp
scas
cmp
lea
sbb
stos
sahf
push
stos
lahf
xchg
adc
out
stc
push
std
in
nop
in
jae
fmull
push
loope
dec
adc
push
mov
sti
into
das
or
pop
jno
pop
fistpll
loope
iret
dec
push
xchg
mov
popf
mov
push
xor
loope
inc
aas
pusha
into
push
mov
loope
mov
xor
jl
cmp
pusha
das
pop
mov
in
push
fs
mov
dec
pop
int3
mov
sub
out
adc
mov
std
int3
add
push
ljmp
xchg
fists
fwait
dec
test
push
cltd
adc
rcll
ficomps
jae
loop
outsl
push
mov
je
ss
mov
and
dec
jae
and
dec
sbb
cld
mov
mov
daa
mov
lret
dec
mov
or
add
inc
mov
cmp
push
sub
adc
mov
lea
test
arpl
cmpsl
and
push
sbb
nop
dec
jne
pusha
mov
jmp
sub
divl
repz
inc
int3
jp
fisubrl
cmp
xlat
mov
dec
aad
mul
shrl
or
xchg
gs
push
jae
jp
lahf
cmc
fcomi
fwait
mov
jecxz
jb
push
insl
sbb
jb
imul
adc
daa
mov
sub
sti
adc
les
sub
lcall
adc
repz
push
lea
shl
add
mov
data16
test
ret
out
fiadds
mov
andb
mov
sbbb
inc
scas
mov
xor
fs
mov
sub
hlt
clc
pop
inc
sahf
push
test
jb
cmp
mov
push
inc
jne
std
cmp
push
sub
mov
ret
jnp
lahf
sub
stc
adc
mov
aaa
or
jns
dec
pop
jg
shrb
jl
inc
insb
fisttpl
dec
scas
add
js
jge
cmp
out
pop
sbb
or
pmuludq
das
orl
arpl
shl
stc
cltd
xchg
push
jge
loop,pn
call
lahf
iret
cmp
push
scas
xlat
add
adc
mov
int
pop
popf
sub
jb
jmp
mov
stos
mov
mov
arpl
sub
sub
neg
dec
push
adc
push
repz
fistpl
orl
or
pushf
lds
clc
stc
ss
cmpsl
and
mov
aaa
test
loope
inc
and
test
add
in
sbb
mov
dec
push
sub
pop
inc
movsb
mov
push
aam
pop
stc
loopne
fildl
mov
mov
add
cmc
mov
das
xor
ret
and
xchg
pop
xchg
adc
cltd
bound
pushl
ljmp
aam
jne
pop
jns
mov
cli
mov
jno
lret
outsl
push
pop
mov
fs
in
imul
scas
jne
subps
in
iret
push
nop
adc
xor
in
movsb
in
mov
jge
jmp
fcoms
fidivrs
mov
inc
or
adc
push
movsl
sahf
pop
xchg
bound
lods
dec
inc
dec
pushf
je
cmp
mov
mov
sbb
dec
add
mov
pushf
dec
ret
pop
addr16
jle
out
inc
push
inc
push
pop
xchg
int
cmp
fnstsw
aam
or
fidivrs
mov
movsl
test
in
mov
xchg
mov
aaa
xchg
das
addr16
jg
decl
pop
or
pop
arpl
inc
mov
mov
sub
sbb
pop
ffree
mov
sub
mov
enter
push
mov
xchg
mov
xor
lahf
gs
jg
pop
pushf
cmpsb
testb
lahf
or
mov
scas
push
cltd
ss
and
xchg
xor
imul
and
fdivs
mov
out
addr16
out
inc
fwait
jbe
sbb
ret
jge
push
and
lds
push
ds
mov
push
out
fs
mov
iret
xlat
jmp
rcrb
mov
pushl
roll
scas
pusha
sub
pusha
ljmp
sub
ret
sbb
pop
out
fisubrs
add
sbbl
adc
or
sbb
int
xor
imul
add
inc
and
rcrb
nop
shlb
xchg
loopne
mov
xchg
stos
cmp
leave
gs
imul
fsts
test
lahf
jno
and
loop
cmp
jle
inc
stos
stos
nop
pop
fidivs
scas
arpl
adc
cmp
pop
gs
lret
mov
jb
jno
rcll
mov
sub
push
or
mov
sub
lds
push
mov
std
fcmovb
lds
pop
mov
mov
jbe
mov
bswap
pop
pop
mov
lahf
sub
xlat
data16
inc
jbe
and
add
lock
scas
mov
push
outsl
std
dec
pop
sbb
inc
sub
repz
cmpsb
add
je
or
sub
sarb
loope
lock
pop
imul
daa
xor
fwait
lcall
bound
ficoml
xchg
and
in
push
adc
xchg
xchg
adc
cmp
dec
lahf
repnz
out
mov
mov
and
xchg
push
cmp
lret
inc
sbbl
mov
mov
das
pop
jg
enter
leave
lret
clc
arpl
leave
stc
andb
mov
push
xchg
movsl
push
sub
xchg
lods
fiadds
loopne
sbb
sub
idivl
jb
adc
push
pop
pop
fucomp
out
or
mov
add
cwtl
inc
cld
loop
inc
ret
adc
scas
sbb
mov
ss
xchg
inc
jecxz
add
push
add
je
into
inc
mov
add
fcompl
cvttps2pi
and
inc
mov
out
push
ret
fsts
outsl
test
fldt
outsl
dec
repnz
cmp
je
cmp
outsb
or
inc
sbb
stos
daa
dec
aaa
test
and
xchg
mov
fimuls
insl
dec
test
repnz
lock
mov
sub
inc
inc
and
int
push
dec
insb
xor
xchg
mov
ror
fcmovu
xor
push
decl
pusha
movsl
roll
mov
das
mov
mov
pop
push
cmpsb
sub
xlat
outsb
je
mov
inc
lea
jg
lea
jle
test
xchg
xchg
sub
push
xchg
fdivrp
test
out
fsubrs
loope
sahf
mov
into
ret
movl
ret
push
mov
in
push
ljmp
movsb
outsb
sub
cmp
scas
xchg
mov
push
ret
sub
ds
das
pop
mov
outsl
and
lret
mov
aaa
fwait
ret
jmp
dec
out
int
and
imul
dec
pop
leave
fs
sti
cmc
mov
mov
pushf
pop
rorl
out
fwait
sub
test
jecxz
xchg
pop
push
in
jae
test
loop
push
iret
or
test
or
add
pop
mov
jns
loop
push
in
mov
push
lea
popf
out
and
pop
sub
imul
jmp
out
hlt
and
push
les
add
fsubrl
adc
jge
xchg
mov
pop
lahf
sbb
enter
lock
add
mov
cmp
or
cmp
mov
sub
dec
or
int
aam
xor
lahf
sarb
sbb
cmpsb
ss
mov
hlt
scas
filds
lahf
dec
orl
adc
aam
sbb
sub
jns
xchg
cmpsl
mov
enter
ja
ret
xchg
les
inc
sub
push
sarl
sub
mov
cwtl
inc
ljmp
push
dec
add
aad
jge
out
push
inc
cmp
sti
and
add
push
cmpb
cmp
inc
mov
pop
dec
cmp
push
sub
out
enter
test
push
sbb
push
sbb
fidivrl
add
in
fistps
sub
push
out
dec
adc
dec
mov
add
push
out
je
int3
xchg
int3
lea
adc
shrl
xchg
movsb
movsb
dec
aad
xchg
lds
add
andl
or
mov
lds
jmp
dec
je
xchg
sub
xchg
xchg
or
cmp
fldcw
std
inc
ljmp
mov
inc
gs
rcrb
or
mov
fimull
test
mov
ja
shll
das
cmp
cmpsb
fnsave
ja
xchg
imul
add
sbb
stc
cltd
cwtl
jae
ret
loop
pop
addr16
mov
jmp
jp
lahf
mov
sbb
jge
xchg
lcall
cmp
or
scas
shlb
testb
xorb
xchg
loopne
push
int3
sub
jmp
es
out
sub
ret
cmp
imull
mov
cmp
and
ljmp
adc
imul
xor
mov
sub
js
adc
cmpsb
cli
iret
test
xor
mov
popl
jl
sub
inc
lahf
out
xchg
ret
jp
mov
xchg
push
mov
stc
imul
cmpsb
incl
xor
add
das
push
xor
mov
cmp
ret
mov
push
lret
mov
ret
jne
sahf
dec
inc
daa
jne
inc
cmp
mov
aas
xor
lds
xor
outsl
jle
cmp
aas
stos
mov
add
arpl
sbb
pop
dec
fsubrs
movsl
pop
jmp
in
xchg
bswap
in
xor
mov
and
jno
jbe
mov
adc
mov
jle
mov
rcrb
xor
lods
mov
in
fbld
leave
in
aaa
sub
dec
popa
lahf
scas
xor
mov
cld
sbb
jmp
mov
pop
xlat
cld
fs
inc
icebp
add
jno
into
icebp
fwait
adc
xor
std
push
outsl
xchg
movsb
les
mov
and
mov
mov
xchg
js
sbb
pop
jae
or
pandn
pop
mov
xor
sub
out
lods
adc
ret
loop
mov
or
inc
pushf
push
mov
ja
stos
ret
pop
mov
int
mov
insb
scas
loopne
rcl
lods
nop
or
and
mov
sbb
and
xchg
test
jb
inc
mov
jnp
cmp
in
mov
mov
repnz
mov
test
dec
push
pop
add
adcb
bound
or
sbb
or
lret
jg
mov
xchg
xchg
inc
mov
push
mov
int3
fldl
rcl
xchg
cmp
or
fwait
mov
insb
push
sub
mov
cs
mov
pop
pop
add
and
shll
int
jecxz
dec
or
test
or
repnz
mov
fmuls
mov
mov
add
fcoms
dec
xor
bound
jge
into
xor
insb
cld
jmp
pop
push
cmp
aaa
add
push
pop
addl
add
push
dec
aas
icebp
and
nop
fwait
in
fimuls
mov
loopne
push
xchg
dec
cwtl
aam
popa
inc
sub
lcall
sysenter
or
out
cmpsl
or
and
std
iret
icebp
xor
jmp
sti
sbb
arpl
clc
fwait
cmp
push
cli
popa
imul
leave
fldt
cld
cld
mov
loope
icebp
testb
and
mov
inc
xchg
std
push
mov
loop
bnd
outsl
rcrl
sub
sbb
jecxz
pop
iret
stos
imul
push
ret
or
and
sahf
and
xlat
clc
lods
insl
bound
mov
mov
enter
bound
mov
mov
mov
ds
sbb
subb
jae
push
push
daa
sahf
lret
cmpsb
xchg
jl
cmp
mov
stc
push
mov
ja
add
out
fdivrl
filds
lret
mov
sbb
ljmp
inc
aam
and
cmp
es
cmp
xor
ds
sub
jp
add
xor
ret
mov
push
fnstsw
repnz
fs
mov
lret
aam
ss
lods
cmc
mov
mov
std
mov
mov
add
out
or
jb
xor
jns
les
shl
out
sub
addl
push
cwtl
int
std
mov
nop
add
add
clc
ret
and
scas
ja
aad
pop
popf
cs
sbb
aam
ljmp
popf
iret
push
shrb
fsubs
jp
bound
dec
outsb
mov
push
fstp
sbb
add
insb
mov
or
jge
addl
jle
js
ret
mov
jge
jge
ja
fdivl
cmpb
sub
xlat
incl
add
cltd
jae
loop
aas
filds
mov
mov
lods
test
xor
xchg
ret
fwait
push
dec
inc
out
aaa
fwait
pop
inc
scas
cli
mov
imul
rolb
xchg
loop
int
pushf
shlb
cwtl
dec
jl
dec
xor
sub
sbb
scas
bound
ja
xchg
xchg
ret
fisubl
lock
jmp
aam
xchg
mov
call
cmp
js
or
cltd
fldl
or
or
pop
add
xor
divl
out
sbb
mov
shlb
pop
cmp
push
out
push
jae
clc
gs
mov
jge
xor
pop
dec
leave
adc
lahf
sahf
mov
fucomp
pusha
push
inc
dec
pop
jecxz
jae
fnstenv
lret
into
dec
out
movsl
fwait
pop
jns
les
lret
pop
pop
xchg
dec
push
fdivs
fs
sbb
aad
rcr
bound
push
movsl
mov
fdivrs
idiv
ficompl
decb
jl
and
mov
xlat
mov
outsl
or
into
mov
inc
inc
jg
add
out
push
cli
inc
arpl
cmp
daa
xchg
dec
xor
mov
pop
sbb
fsubs
mov
movb
dec
xor
add
lahf
loopne
shrl
rcll
mov
lret
jb
dec
daa
jg
addr16
and
xor
pusha
inc
or
repnz
xchg
insl
ljmp
jnp
xchg
rcl
in
cld
cmp
xor
push
xor
mov
mov
mull
sub
popa
lods
cmp
xor
add
and
les
mov
xchg
outsl
fiaddl
inc
push
dec
pop
sbbl
mov
xchg
pop
xor
sub
lahf
xor
loop
sbb
sar
call
popa
mov
cmp
push
scas
mov
mov
mov
icebp
and
imul
rorb
movsb
mov
std
outsl
push
es
jne
dec
outsl
outsb
mov
clc
rcll
add
and
inc
cmp
dec
pop
daa
nop
je,pn
lock
pop
mov
mov
in
leave
sti
popa
cmpsl
bound
mov
ja
test
push
adc
add
test
jle
inc
cmpl
xor
addr16
push
pushf
pop
outsl
xchg
pop
in
frstor
pusha
sub
es
dec
cmpsb
rcrl
insl
push
mov
pop
mov
jg
inc
addr16
pop
push
sbb
or
jge
outsb
ljmp
bound
lods
adc
mov
mov
push
lods
mov
sub
mov
mov
jb
jp
dec
push
sbb
cmp
ja
xor
add
call
and
cli
adc
adc
inc
pop
mov
notl
or
fucom
outsl
sbb
rolb
sahf
jnp
cmpsb
push
jns
fwait
sbb
inc
cmpsl
jae
pop
xchg
dec
inc
jnp
fmul
into
repnz
add
loopne
cmpl
sub
sahf
mov
lahf
hlt
jmp
adc
mov
movsb
repz
cmp
cmp
xchg
mov
xor
test
hlt
or
pop
out
sahf
sub
sub
adc
movsb
and
dec
push
fwait
outsl
lea
out
push
les
lahf
inc
sbb
sbb
movl
clc
sub
shr
insb
mov
ret
xchg
int3
ss
daa
pop
popf
jbe
outsb
sub
test
and
add
xchg
jge
jl
andb
cmp
xlat
fstl
mov
ror
repnz
add
cmp
in
cmp
sub
lcall
cmp
and
mov
idivb
dec
andl
fnstenv
adc
adc
add
mov
fyl2x
push
popf
leave
pop
movsb
lock
fcoml
xchg
and
aas
lods
inc
es
roll
loopne
test
test
fs
jge
arpl
shl
fiadds
jle
mov
add
gs
lahf
or
test
push
jbe
sub
push
pusha
push
icebp
inc
fwait
pop
dec
sub
jo
cli
xchg
mov
movsl
mov
movsl
out
pop
in
push
adc
add
ja
sub
dec
push
dec
fldcw
cmp
aas
pop
xchg
scas
bnd
sti
je
outsb
push
adc
xor
lcall
jl
inc
icebp
testb
mov
outsl
push
xorb
sub
imul
movsb
lret
inc
xchg
mov
cmp
jg
jle
outsl
jp
loop
add
nop
mov
push
sub
stos
dec
adc
xor
inc
cmp
mov
clc
push
out
je
jne
ror
test
ss
iret
xchg
adcb
jmp
pop
dec
test
outsb
add
cld
aas
push
idivb
pushf
pushf
out
fdivs
sbb
push
js
divl
pushf
sub
iret
inc
mov
xor
xor
sub
lahf
lds
or
sbb
fdivs
add
popf
push
or
and
jbe
lods
and
data16
push
ss
adc
stos
sbb
aaa
gs
xchg
dec
adc
xchg
loopne
inc
mov
ss
dec
fstpt
lock
mov
jno
mov
dec
add
mov
std
lods
jo
fadd
stos
jle
out
cmp
scas
nop
sub
in
dec
xlat
lds
icebp
es
enter
pop
aaa
pop
shr
cmp
pusha
xlat
cmpsl
lods
mov
sahf
mov
lds
ljmp
in
shr
mov
or
sbb
cld
pop
jno
cmp
sbb
aad
test
mov
pop
stos
cmpsb
ja
mov
sbb
popf
pop
mov
imul
inc
ret
dec
jecxz
imul
int
mov
mov
pushf
idivb
ret
outsl
sarb
mov
fs
aaa
pop
xchg
add
cmp
sti
sti
push
push
push
mov
aad
sub
movsb
sub
dec
or
stos
lahf
xor
aad
push
mov
out
and
fnstsw
sbb
arpl
popa
mov
arpl
daa
mov
je,pt
jge
cmpsl
testb
sbb
out
dec
cmpsl
sbb
outsb
dec
jle
adc
cmp
mov
pop
push
push
loopne
jl
in
lret
cmp
sarl
xchg
lds
inc
sub
fstpl
inc
pop
bound
sarl
sub
jb
je
add
adc
cld
js
mov
aad
jmp
sbb
sbb
xchg
fidivl
adc
iret
rcr
mov
fists
xor
jle
mov
stos
insl
insl
sub
shlb
cs
xchg
pop
fcoml
ror
xchg
mov
xor
push
in
push
lret
lods
bound
pop
popa
inc
push
ljmp
aas
cltd
adc
mov
jg
xor
xor
stc
mov
sbb
cmp
hlt
fildll
inc
das
xchg
xchg
adc
pusha
dec
add
dec
push
loop,pt
lods
lret
sahf
dec
mov
mov
mov
rorb
push
shll
and
call
mov
dec
push
push
and
mov
pop
add
xchg
mov
stos
jo
ja
enter
imul
ss
in
mov
inc
mov
push
loop
xlat
pop
mov
loopne
sarl
ret
or
inc
sub
dec
out
cmpsb
and
jne
in
movsl
cmp
sub
pop
sbb
sub
repnz
dec
ljmp
inc
mov
orb
fs
mov
addb
sbb
mov
mov
xchg
sbb
loope
add
xchg
clc
dec
mov
jp
dec
xchg
push
int
cmp
dec
aad
mov
stos
add
setb
popa
xchg
fildll
xor
inc
jle
gs
daa
lret
adc
mov
inc
inc
jp
xchg
jmp
add
shlb
fldt
add
movsb
repz
ficompl
xor
loopne
inc
les
cmp
scas
cmp
sub
jp
repz
js
pop
test
sar
shlb
inc
xor
jp
shlb
scas
cmp
cli
add
ja
xchg
or
cmc
and
sbb
inc
dec
jmp
les
push
cld
mov
es
out
icebp
cmp
xchg
mov
adc
cld
movsb
cmp
adc
adc
rol
and
mov
icebp
and
dec
mov
adc
nop
push
jne
bnd
fadd
sub
dec
pop
hlt
scas
and
cmp
jl
sbb
sub
ja
jg
mov
sbb
into
xor
ret
scas
push
inc
das
imul
lods
pop
xchg
in
out
inc
xchg
ret
mov
loope
outsb
push
mov
scas
mov
dec
sub
aad
xor
and
xchg
das
les
lds
lods
dec
xchg
adc
imul
bound
mov
jnp
or
imul
movsl
or
or
push
xor
add
lcall
outsb
xor
xchg
pop
notl
xchg
cmpsb
xchg
das
pop
cs
rorb
aad
imul
jge
push
lret
int
pop
mov
jnp
sbb
jmp
sbb
ret
mov
adc
pop
xchg
push
test
cmp
mov
xchg
dec
sub
mov
in
mov
inc
add
and
ja
andl
clc
arpl
movsl
je
popf
xchg
jns
lcall
out
jp
lahf
xchg
ja
aam
jbe
mov
sub
fisttpll
ret
adc
je
push
sub
std
repnz
dec
mov
data16
and
pop
out
test
inc
add
push
fcmovnbe
repz
dec
push
push
sub
outsl
ret
jb
push
iret
and
into
sbb
jmp
adc
jg
dec
xchg
fcomps
pop
sarl
dec
das
xchg
sbb
mov
mov
inc
addr16
pop
fucomi
ret
sbb
scas
xchg
in
scas
les
inc
cwtl
adc
and
adc
lcall
sbb
add
fistpl
add
sub
fcmovb
call
cwtl
repz
xor
loop
inc
negb
xor
add
mov
nop
fdivs
loope
insb
jge
dec
pop
cmp
jne
rorb
pop
lock
scas
icebp
mov
test
adc
jnp
mov
lret
mov
lret
ja
push
pusha
das
fs
loope
insb
pop
mov
jae
cmp
stc
lea
lahf
fst
icebp
ss
lcall
xchg
fisubrs
int
and
imul
jge
or
inc
xchg
imul
add
mov
cs
inc
cmp
jmp
scas
dec
dec
sarb
push
fldpi
loope
lret
pop
dec
cli
ss
xchg
mov
lret
clc
pop
fs
iret
lcall
out
push
int3
jle
repz
pop
testl
lret
push
mov
sub
push
mov
lcall
mov
add
mov
push
cmp
mov
mov
cmp
cmp
xor
xchg
push
int
mov
outsb
mov
and
cmp
sbb
icebp
push
mov
sub
jp
lds
pop
arpl
aam
sarl
jno
mov
outsb
pusha
mov
hlt
cwtl
jae
mov
rolb
xchg
loopne
clc
iret
movsb
xchg
add
stc
divl
addr16
and
inc
add
pop
ds
stc
xchg
test
or
sub
mov
mov
pop
ds
cld
dec
and
sbbl
bnd
stos
lcall
mov
movsb
inc
jbe
mov
int3
ss
push
movl
les
orb
pop
xchg
into
push
nop
xor
rep
gs
fldenv
stos
adc
jne
mov
out
rol
fiadds
fisttpll
mov
and
jbe
dec
sub
inc
fstpl
mov
call
xchg
inc
dec
mov
push
adc
aad
pop
pop
mov
cmp
leave
add
ljmp
xchg
aad
rcrl
jb
pop
lea
popa
adc
jl
xchg
vmovsd
pop
or
and
out
js
fimull
jmp
cmp
add
dec
shlb
fs
adc
adc
push
test
mov
pop
adc
sub
cs
sub
mov
das
adc
cmp
loopne
das
mov
ret
outsb
dec
repz
pop
jae
out
imul
push
lcall
lahf
mov
mov
mov
xchg
sbb
imul
pop
mov
repnz
outsb
lods
inc
add
push
dec
xchg
xchg
or
out
xor
or
dec
jnp
stos
pop
dec
inc
aaa
and
mov
arpl
cmc
paddusb
add
pop
add
mov
cmpb
xor
lea
iret
mov
mov
sbb
aam
daa
jne
arpl
cmc
lea
mov
jns
testl
and
lret
outsb
in
or
adc
push
testb
in
add
xlat
cwtl
push
fistpl
int
cmc
add
xor
fldl
push
pop
popa
cmp
testb
not
mov
sahf
mov
or
xor
inc
push
std
lea
pop
lret
repnz
popf
fnsave
mov
xchg
test
mov
out
sbb
push
iret
mov
mov
cmp
mov
mov
xchg
inc
xchg
sbb
mov
or
dec
adc
fidivrl
test
aas
add
lods
aad
push
push
push
rcl
fisubrl
sbb
movsb
mov
xlat
mov
outsl
mov
push
fstpl
pop
mov
outsl
daa
stos
je
xor
test
ret
push
cmp
mov
das
repz
jmp
inc
rclb
mov
stos
mov
bound
and
add
mov
outsb
jo
sub
test
stos
fmull
dec
mov
push
popf
pop
icebp
loopne
shll
adc
inc
add
jmp
and
add
push
in
js
repz
sbb
jno
fwait
loopne
add
andl
hlt
ds
adc
aad
std
and
and
ja
adc
jbe
mov
inc
and
push
pop
or
mov
adc
popf
mov
push
iret
mov
cmpl
push
shlb
inc
push
pop
xlat
pushf
xorb
test
scas
nop/reserved
fwait
insb
orb
jns
sbb
pop
cmp
push
jb
je
add
dec
popf
fisttpll
pushf
mov
inc
outsl
push
mov
adc
ret
cmp
imul
mov
shll
pop
movl
sub
mov
xor
stos
enter
adc
xor
test
sub
cmpsb
je
push
cld
xchg
shlb
or
bound
dec
push
jmp
imul
cmpsb
adc
push
dec
and
xor
push
xchg
addr16
xor
sub
add
sub
fbld
push
outsl
lock
orb
bound
xchg
stc
call
pop
in
loope
add
mov
ret
jbe
or
inc
lret
lds
lods
shlb
or
imul
dec
arpl
rep
sbb
mov
lcall
sub
inc
inc
inc
sub
ret
pop
iret
mov
cld
mov
aam
je
sbb
adc
mov
dec
mov
sub
cmp
aam
sub
mov
sahf
mov
pushf
cmp
pushf
or
cltd
gs
sub
lcall
sbb
inc
or
mov
nop
dec
testl
mov
dec
sub
push
push
shrb
es
mov
lea
hlt
outsb
test
cmp
or
jecxz
push
fwait
xchg
xchg
cld
inc
jno
and
fcomi
sub
aad
dec
int
xchg
ficoml
xchg
jae
out
mov
and
fists
in
repz
xor
stos
mov
add
mov
fs
or
add
or
imul
xor
push
sbb
arpl
mov
test
mov
ret
fnstsw
lds
inc
nop
movsl
xor
jle
sub
pusha
test
pop
insb
add
mov
test
fcomps
sub
adc
or
xchg
jl
imul
inc
sub
shll
inc
je,pt
pop
das
int
jne
dec
out
mov
sbb
pop
and
dec
add
repz
cli
dec
jnp
das
inc
cltd
mov
dec
pop
imul
test
cmp
fwait
sbb
cmc
rcl
xchg
cmp
mov
ret
pop
sarb
and
insb
pop
pop
lods
pop
aas
push
or
nop
popf
and
ret
xor
cs
daa
js
pop
cmp
bound
std
inc
rcr
xor
das
pop
shlb
cmp
xchg
aas
dec
jmp
leave
adc
pop
testb
pop
js
add
mov
sahf
cld
push
add
in
rcrb
inc
sub
idiv
jbe
dec
sbb
pop
jno
dec
adc
hlt
or
jmp
rcrb
icebp
inc
adcb
ljmp
mov
cmp
xor
call
or
negl
cs
sub
jae
cld
mov
xchg
loope
xor
outsb
xchg
subl
cmpsb
ss
and
mov
aad
mov
in
jns
clc
adc
lret
ss
or
mov
dec
movsl
cmp
add
mov
xchg
aam
std
mov
mov
jbe
mov
int
scas
dec
push
js
aad
fisttpll
sbb
js
jnp
loop
xor
shll
xor
sbb
mov
xchg
in
push
cmc
adc
inc
movsl
cltd
test
pusha
andb
or
xor
shrb
add
mov
jmp
jae
xchg
sbb
outsb
jae
imul
mov
mov
gs
pushw
jns
out
imul
mull
sbb
pusha
ljmp
fdiv
jecxz
xor
rol
mov
xchg
addr16
movsl
lcall
sti
push
pop
lods
or
sub
loope
add
and
sub
xchg
mov
ret
xorb
jbe
xor
daa
or
test
mov
xor
inc
cmp
xchg
push
mov
outsb
jo
icebp
in
push
cmp
imul
sbb
xlat
test
sub
inc
jge
xor
jnp
jp
out
ja
and
rorb
mov
jp
cmp
test
mov
mov
aad
scas
dec
sbbb
inc
out
jl
or
or
add
adc
imul
scas
outsl
adc
pop
decl
cmp
out
xchg
cs
mov
dec
dec
xchg
dec
or
inc
in
xchg
lcall
pop
xchg
lods
das
dec
xor
sbb
add
add
mov
jns
fdivl
lods
xchg
daa
mov
add
jmp
cmp
push
addl
cmc
inc
stos
idivl
test
jno
sub
test
in
and
xchg
ss
fwait
lcall
insb
mov
pop
push
das
mov
repz
adc
nop
and
ret
lret
or
add
pop
jo
inc
insl
dec
cli
add
inc
add
bound
adc
push
stc
outsl
andb
lahf
pop
mov
jo
push
in
test
lcall
or
aas
addr16
enter
loope
inc
mov
aam
push
jl
sub
and
mov
sub
lret
mov
xor
mov
imul
push
adc
or
jmp
or
popa
mov
pop
ret
inc
cmpsb
sti
or
push
lcall
cmp
sub
mov
iret
cmpsl
xlat
jno
out
sub
sub
dec
dec
bound
ss
xor
mov
out
insb
shll
ret
sub
pop
cmp
enter
adc
sub
cmpsb
jmp
jne
xor
pop
jl
xor
adc
dec
xchg
cmp
jp
dec
je
movsl
fbld
stos
xor
or
bound
cmp
push
stos
aad
pop
push
dec
loopne,pt
or
lcall
shl
pop
sub
adc
inc
aam
cmp
pop
mov
loope
les
out
int
jecxz
mov
ss
jnp
nop
jmp
jge
test
jno
xchg
or
hlt
icebp
outsl
mov
loop
pop
ds
cmp
inc
sub
push
mov
mov
mov
mov
cmp
mov
cmp
mov
push
mov
push
mulb
and
sub
aad
xor
loopne
daa
fs
xlat
push
push
push
xorb
xor
xor
divl
loopne
insl
in
and
int3
cltd
cmp
dec
or
xor
data16
jns
mov
cmpsl
xchg
xor
jge
lea
lds
enter
out
idivl
stos
or
pusha
mov
pop
mov
out
insb
jno
lret
and
sub
out
xchg
or
divl
adc
mov
std
in
cmp
in
push
sbb
jecxz
lret
fcoms
sbb
sti
push
sub
aas
loope
mov
cmp
fsubr
nop
test
out
rcrl
das
and
mov
ret
in
push
inc
and
mov
das
jo
and
imul
fsubl
adc
insb
jle
lcall
scas
loope
pop
jns
fnstenv
out
jle
push
push
pop
mov
xchg
pushf
lods
sbb
or
imul
push
repnz
mov
movsb
push
movsl
mov
mov
jns
outsb
outsb
jbe
nop
ret
adc
not
data16
push
es
xchg
or
xchg
aaa
cld
sbb
and
mov
sbb
xor
je
mov
les
fwait
push
enter
icebp
pop
clc
test
cmc
out
or
cltd
sub
lahf
xor
in
cmpb
imul
pushf
ret
in
test
inc
stos
sub
popf
cmp
in
cld
fimuls
mov
aad
dec
imul
int
xor
add
loope
cs
rcl
adc
xor
add
cs
enter
mov
push
pushf
mov
sti
jg
sar
int3
popf
fsts
loopne
sub
out
mov
pop
push
cs
loope
mov
test
and
stos
stos
dec
jp
int3
mov
gs
mov
test
fwait
pop
lods
jo
popa
leave
repz
mov
jns
cli
cmp
cmp
adc
je
cmp
into
and
test
cmp
push
outsl
mov
loop
dec
and
movsl
insl
jo
test
mov
inc
dec
sbb
push
std
add
push
push
xchg
fsts
add
fwait
cmp
inc
pop
adc
mov
inc
sbb
repz
addr16
test
pop
and
and
mov
inc
jbe
lahf
push
mov
xchg
push
xor
sbb
data16
mov
sub
mov
push
call
cltd
or
imul
in
daa
outsb
xlat
xorb
push
xor
dec
loop
pop
mov
xchg
ljmp
das
jae
imul
mov
lret
ret
dec
in
cmp
leave
testl
jno
inc
mov
mov
mov
lea
push
or
xor
pop
aaa
pop
loope
stos
sarl
cmp
test
into
popf
dec
mov
into
xor
repz
cmp
fisubs
imul
jle
ds
out
test
xor
jns
cmp
mov
xchg
dec
push
aas
rorl
jge
out
idiv
mov
add
pop
lods
ja
out
add
std
ret
outsl
ss
and
dec
adc
fnstcw
jno
mov
add
add
hlt
in
pusha
xor
rolb
adc
xchg
out
enter
push
push
mov
and
jle
mov
loope
adc
pop
mov
mov
jg
out
cld
adc
adc
fisttps
xchg
into
cli
mov
aaa
dec
cltd
aad
jge
rolb
adc
sti
test
mov
stc
test
add
and
and
jecxz
mov
test
call
sarl
sahf
sub
fistl
fsubrl
mov
sub
pop
call
movsb
jmp
jp
or
xchg
xchg
mov
ss
mulb
xchg
and
sub
aas
pop
xchg
pop
aam
scas
mov
cmpsb
shlb
lock
jge
push
adc
fsubrs
mov
mov
jmp
adc
mov
sub
add
jne
sub
xchg
ja
inc
cmpsb
sub
xor
sbb
repz
cmp
mov
xchg
jge
xchg
push
inc
je
lahf
or
xchg
pushf
outsb
sbb
imul
insb
pusha
pop
jg
lock
repz
aaa
add
sub
in
aam
pop
inc
pushf
mov
mov
jno
inc
inc
daa
adc
addr16
or
xchg
bound
addb
mov
and
inc
hlt
ljmp
std
in
pop
cltd
or
push
loope
xchg
int
mov
and
stc
stos
shlb
sarl
sbb
stos
pushf
dec
fstl
sub
lea
push
dec
push
mov
fsub
cltd
andb
cmp
dec
mov
jns
jp
into
sub
loop
fldt
ds
pop
imul
xchg
xchg
movsl
ss
leave
aam
ret
fwait
popl
movsb
push
sub
lahf
cs
push
mov
aaa
js
pop
stos
jae
push
push
pop
sub
adc
rcll
in
xchg
es
push
mov
ss
clc
test
popf
in
test
addb
aam
add
xor
or
std
mov
scas
add
xchg
mov
inc
mov
xor
les
fsts
mov
cmp
shrb
mov
inc
sub
jnp
insl
jl
ss
nop
fistpll
push
mov
insl
imul
invd
pop
sar
xchg
pop
add
sub
ficompl
ret
loope
stos
inc
mov
mov
sub
dec
jne
movsb
repz
sub
cli
cmc
psllw
and
dec
push
sub
imul
insb
cmp
out
add
cmp
and
push
inc
or
and
pop
fstl
ds
frstor
xchg
scas
push
fildl
cmp
inc
jb
adc
lods
adcl
xchg
nop
insb
push
frstor
sahf
lret
mov
pop
inc
lret
movl
in
imul
fimuls
lods
test
jg
in
inc
int3
jb
push
fmulp
sub
scas
nop
into
aas
dec
xlat
aaa
xchg
adc
or
int3
sub
fstpt
ds
push
dec
insl
cmp
adc
das
and
cmp
mov
push
push
enter
sub
pop
fistpl
pop
stos
pop
xorl
je
inc
icebp
push
dec
jmp
xor
pop
sub
outsl
pusha
pusha
jno
mov
mov
andl
test
daa
leave
inc
pop
push
sarb
inc
popf
pop
adc
aad
test
lret
xchg
mov
test
xor
cmpsb
in
repnz
nop
cmp
test
orb
jle
dec
jae
into
pop
mov
jl
push
repz
mov
and
es
cs
inc
clc
test
ret
leave
cmp
jle
sub
scas
sub
pushf
mov
popf
push
addr16
cld
data16
popa
mov
push
lods
fsts
jo
cmpsl
sub
ds
dec
lret
or
mov
push
inc
cs
jmp
jmp
push
ss
jae
fcmovb
xchg
mov
aas
mov
in
or
fdivrs
sbb
mov
cld
dec
and
cvttps2pi
mov
pop
push
xor
push
xchg
frstor
mov
aam
andl
jg
add
es
mov
mov
xchg
mov
mov
aam
inc
repnz
cwtl
sub
jo
enter
push
mov
andb
inc
ror
in
imul
sbb
stos
leave
sahf
and
ljmp
xor
push
xor
jb
pop
ds
sub
psubusb
or
int3
dec
push
mov
jecxz
pop
ljmp
dec
sub
inc
xchg
add
iret
add
lds
outsb
push
jmp
test
xor
pop
mov
pop
lret
push
insl
in
push
add
jecxz
xor
lcall
xchg
cmp
dec
pop
add
inc
sub
int3
clc
out
xor
mov
lods
push
push
push
icebp
push
pusha
enter
fmuls
ss
mov
dec
call
or
xor
mov
das
sahf
sbb
cwtl
mov
pop
test
add
test
ljmp
xor
inc
push
dec
cwtl
xlat
outsl
mov
lret
adc
mov
xor
jno
test
xchg
mov
out
cli
jecxz
push
jno
sbb
mov
bound
stos
icebp
leave
adc
and
lret
sbb
and
cvtps2pi
push
pop
outsl
cmp
hlt
inc
xchg
aam
shl
stc
out
sub
imul
in
inc
add
fs
outsb
dec
jns
adcb
mov
je
sbb
pop
inc
fdivp
push
xor
add
xchg
xchg
push
pushf
mov
add
rorl
jg
push
and
push
push
scas
loop
divb
cld
pop
and
xchg
sbb
add
fsubrs
iret
xchg
add
inc
add
sub
call
inc
jg
inc
push
ljmp
iret
stos
into
mov
lods
lret
out
xor
fcomps
lea
inc
and
lcall
jl
psignd
cmp
stos
in
inc
insl
mov
rcrb
scas
shll
push
rorl
pop
data16
and
push
xor
sbb
add
dec
loop
jno
pop
fidivs
cmpsb
dec
int
xor
arpl
cmpsl
int3
inc
stos
ret
sbbb
mov
or
out
ljmp
mov
jbe
fcmovnbe
mov
loopne
sbb
fldt
je
jbe
lock
cmpsb
jb
stos
xchg
jg
mull
inc
andl
mov
divl
add
xor
and
lods
jbe
mov
fsubl
rcrl
push
dec
es
push
sub
push
xchg
cwtl
jl
pop
sub
cmp
inc
dec
mov
vcvtss2sd
insl
pop
sti
jl
into
and
loop
cmp
jl
add
outsb
daa
cld
repz
popaw
out
pop
mov
jb
insb
xchg
and
push
hlt
test
shlb
out
xor
jg
sti
dec
inc
sbb
pop
rcl
jge
pavgb
pusha
fwait
jecxz
mov
test
test
es
ret
jmp
sbb
jg
sbb
jl
push
xchg
add
cli
xor
mov
cmp
les
xor
fisubrs
pop
loope
mov
icebp
mov
pop
jg
enter
js
or
test
in
xchg
enter
push
fcoml
adcl
adc
pop
into
sbb
sbb
fisubrs
and
aad
adc
push
jne
dec
insb
shrb
lock
imul
es
scas
sbb
aam
fimull
push
pop
dec
add
mulb
or
frstor
mov
aad
jmp
jmp
sbb
sub
in
cmpsl
scas
or
sbb
and
sbb
pop
pushf
mov
pop
adc
test
fs
cld
cmp
pop
pushf
addr16
sarb
push
outsb
mov
subl
mov
or
hlt
in
pop
iret
fwait
inc
outsl
push
mov
call
xlat
je
adc
inc
out
inc
pop
push
xchg
xchg
adc
jmp
add
subl
div
lgs
popa
inc
lahf
add
pop
mov
sarb
insl
mov
fwait
mov
mov
shl
arpl
ljmp
pop
or
or
ljmp
push
push
push
icebp
inc
fldenvs
pop
outsb
dec
sbb
es
sub
in
insb
enter
ljmp
ss
fldcw
dec
mov
popl
and
xlat
lock
cmp
mov
mov
arpl
xchg
loop
inc
aas
ljmp
add
adc
fistps
sub
aad
mov
pop
loope
lahf
cmp
popf
daa
and
adc
rcll
lods
pop
call
les
xchg
jo
cmpsb
cmc
je
out
stos
das
ret
sbb
scas
mov
loop
movsl
into
roll
inc
lcall
add
in
pop
call
mov
sub
fcom
fsubrl
mov
inc
push
aad
sbb
mov
enter
xchg
fdivs
insb
push
movhps
xor
xchg
cmp
cmpsl
lods
dec
in
pop
xor
mov
xchg
jmp
test
lds
and
lahf
in
inc
aam
cmp
pushf
mov
pushf
push
pop
daa
cli
movd
or
adc
jno
and
inc
mov
jl
pop
adc
repnz
push
dec
pop
mov
clc
xchg
jecxz
or
int
lock
fwait
inc
test
in
adc
sahf
sbb
fstl
inc
stos
pop
mov
jbe
mov
fsubrs
pmovmskb
std
xchg
cmp
xchg
iret
bound
cli
mov
out
outsl
mov
inc
or
pop
adcl
xchg
pop
mov
popf
ljmp
mov
push
mov
scas
vfrczsd
pop
adc
cld
cmp
lock
xor
arpl
movsl
or
or
xchg
push
bound
mov
cmp
stos
mov
stos
repnz
mov
mov
push
aas
cmp
ds
out
or
sbb
lds
icebp
xchg
push
data16
mov
mov
pushf
rcrl
xchg
sbb
mov
les
add
push
sbb
or
mov
pop
repnz
cwtl
pop
xlat
ret
ja
pop
push
sbb
pop
loopne
mov
mov
cmp
and
pusha
pop
out
repnz
push
push
mov
or
xor
fiaddl
jns
mov
mov
lar
lods
repz
loopne
pop
pusha
dec
pop
jge
dec
add
mov
or
push
cld
pop
in
insb
arpl
scas
pop
cmpsl
push
out
lea
sbb
mov
push
orb
inc
mov
mov
ja
jmp
lods
cwtl
lret
sarl
xchg
movsl
cmp
jo
cli
scas
negl
cli
and
mov
das
add
ficoms
jno
shlb
lds
fs
xor
dec
mov
loop
js
xchg
mov
repnz
test
clc
push
clc
hlt
push
dec
lret
mov
push
adc
int3
dec
sbb
add
mov
or
ret
andb
mov
mov
sub
lret
incb
push
pop
loopne
push
and
pop
xor
repz
mov
and
pop
iret
mov
cmc
push
inc
mov
lcall
aaa
mov
pop
mov
adc
cwtl
mov
fisubrs
imul
daa
mov
lods
rcll
dec
cwtl
xchg
jb
testb
dec
incb
xor
dec
iret
test
loopne
cs
std
scas
push
arpl
fs
mov
roll
lock
filds
or
aas
mov
gs
in
test
push
xlat
inc
bound
std
xchg
aaa
or
enter
and
jns
dec
cs
xchg
lods
jmp
dec
rcl
push
inc
push
adc
xor
js
add
imul
stos
push
cmpsb
test
js
sub
test
mov
pop
jg
mov
mov
push
jo
scas
inc
pop
in
neg
lds
in
mov
aaa
mov
fiadds
jmp
pshufw
cmpsl
add
dec
pop
lea
push
scas
cmpb
jmp
sub
lret
aas
and
stos
add
popf
xchg
mov
lea
jnp
sub
das
pop
lret
or
inc
fimull
xor
jge
xor
cmc
in
mov
push
sub
dec
push
fisubl
adc
push
fsubr
scas
shlb
sbb
mov
daa
mov
add
push
stos
lods
sub
lcall
addr16
dec
push
xchg
sub
sbb
cli
mov
or
mov
lahf
ret
mov
sub
inc
xchg
sbb
mov
out
mov
fdivp
and
sub
gs
jge
pop
ror
int3
and
sub
jg
dec
and
lods
dec
test
adc
jae
scas
outsl
daa
or
cmpsb
mov
aaa
pop
cmp
cmp
xor
stc
mov
xor
and
jl
add
frstor
fsubs
inc
scas
das
dec
mov
insl
jno
jns
xor
push
pop
outsl
cltd
xchg
xchg
insb
dec
adc
leave
mov
mov
scas
cmpsb
in
repz
mov
jno
incl
jnp
and
mov
or
mov
lea
jnp
es
in
dec
ret
mov
add
pop
in
fiaddl
mov
nop
aaa
orl
lret
inc
push
stos
sbb
mov
sti
mov
out
lods
lea
cmp
or
xchg
in
mov
inc
das
out
add
add
push
and
sub
mov
mov
movsl
jle
or
dec
mov
jmp
xor
mov
insb
hlt
and
sub
popa
rcll
aas
and
enter
mov
mov
clc
xchg
push
mov
dec
out
lret
mov
pushl
dec
into
fldt
pop
inc
pop
das
mov
lcall
aaa
ficoms
daa
xchg
test
sti
scas
adc
scas
lods
jmp
iret
or
push
push
cmpsb
jns
sub
mov
int
jnp
mov
sti
out
hlt
imul
jb
mov
xchg
add
pop
push
jbe
out
rclb
fisubrs
sub
nop
sbbb
add
movsl
cmp
es
cmpsb
cmp
lcall
out
add
or
jb
shll
repz
jo
cmp
outsb
inc
flds
iret
pop
jns
insl
pop
add
outsl
inc
js
rcl
mov
out
jmp
cmp
add
addr16
fdiv
jge
pop
les
sub
lret
testb
lds
icebp
into
adc
add
xor
inc
jns
push
and
jg
mov
dec
mov
cs
pop
ja
cmpl
xchg
ljmp
lea
dec
jg
xor
les
mov
adc
mov
xchg
inc
push
cli
xor
cs
mov
scas
jb
sbb
inc
add
add
jl
and
adc
and
fcom
sahf
fcomi
lahf
xchg
in
mov
push
sti
shrb
inc
sub
rcrb
mov
push
inc
sub
lds
sbb
lahf
jmp
mov
pop
inc
dec
sarl
jmp
ljmp
sti
je
pop
xor
iret
fwait
and
xor
sbb
xchg
sub
fisubrs
fwait
sub
insb
aaa
xchg
ja
mov
aad
je
xchg
xor
pop
push
push
mov
or
or
invd
mov
int3
mov
rol
mov
jmp
xor
mov
loop,pn
dec
sub
lahf
ret
loop
ds
ficomps
insb
test
and
repz
jge
repnz
xchg
jae
jae
cmp
jbe
fidivl
repz
mov
mov
decb
js
sbb
fstpt
cmpsb
mov
cmpsb
aaa
enter
add
add
mov
push
and
inc
sub
push
insb
cld
lret
inc
js
and
inc
test
arpl
jbe
daa
cli
or
les
mov
cmpl
sbbl
jno
jne
push
jmp
dec
les
add
and
ljmp
add
jg
and
repz
stos
shrl
dec
imul
lcall
cmc
adc
pop
xor
sbb
dec
test
mov
repnz
jnp
pushf
test
add
call
jb
or
xchg
fnstsw
fstl
insb
out
push
bound
xchg
adc
sbb
fadds
loop
aaa
inc
pop
cmp
sarb
rep
pop
mov
push
mov
mov
ret
xchg
js
rcr
pop
push
sub
adc
inc
pop
testl
push
cmp
or
mov
popf
aad
cmp
push
mov
aaa
pop
std
ds
call
out
cmp
das
popf
icebp
or
sub
inc
cmp
arpl
mov
cmp
mov
jno
mov
pop
repnz
movsl
je
cli
sbb
push
aaa
add
adc
push
jne
and
cmp
fidivl
movsl
cmpsb
les
icebp
jmp
movsl
add
and
ret
pop
popf
push
xchg
inc
and
add
nop
rolb
pop
sub
cmp
bound
test
inc
sbb
andb
call
sbb
add
sbb
out
mov
push
sbbb
cli
jns
and
cmp
xlat
mov
xchg
sub
mov
dec
xchg
mov
fnstsw
inc
and
mov
imul
out
sub
or
mov
jl
xchg
ret
data16
and
mov
mov
lret
imul
call
mov
int
lret
int
cmp
pop
add
cmp
inc
push
mov
mov
aam
imul
mov
xlat
cmc
sbb
pop
add
jns
pop
shlb
or
mov
cltd
mov
addr16
pushf
inc
rorb
movsb
nop
stos
xchg
ss
scas
jg
xor
imul
out
xor
ljmp
ja
pushl
popa
mov
std
sub
icebp
add
mov
imul
add
jle
lods
mov
scas
pop
in
inc
mov
cmp
inc
sahf
push
stos
in
out
loop
fwait
js
adc
sahf
push
dec
and
in
mov
sbb
pop
cs
cmc
mov
rcr
adc
dec
sarb
into
mov
mov
mov
mov
sub
inc
mov
sbb
arpl
movsl
in
xor
sub
lea
lods
gs
cmp
add
mov
mov
mov
out
cltd
dec
cs
sub
push
movsb
jbe
mov
or
mov
xchg
js
sbb
mov
test
outsb
sub
sbb
imul
hlt
push
add
ret
mov
push
xor
lods
outsb
ds
adc
cmp
push
cmp
sbb
cld
mov
mov
push
or
lods
xor
loopne
dec
adc
rolb
gs
adc
mov
push
and
push
test
loop
aad
imul
cmp
icebp
pop
sbb
mov
inc
mov
adc
pop
test
pop
push
dec
outsl
repz
cmp
push
push
aaa
add
rorl
xchg
and
jne
hlt
jecxz
fs
mov
adc
in
and
stc
scas
imul
imul
adc
dec
fmuls
lds
adc
pop
movsl
fstps
mov
mov
mov
xchg
pop
mov
jbe
sub
add
lea
adc
mul
mov
push
pop
pop
or
pushf
bnd
adc
push
cmp
stos
jbe
lds
xchg
xlat
inc
mov
or
pop
pop
hlt
sarb
int3
pop
loopne
sti
mov
rol
cwtl
jge
mov
jne
enter
loope
negl
mov
jg
sbb
pop
addr16
mov
xor
cmpsl
jae
test
push
sub
cmp
int
into
cld
jecxz
push
mov
loop
lock
fisubrs
cmp
xchg
inc
mov
cmp
mov
xchg
xor
and
in
dec
inc
pushf
jmp
fdivrl
jle
lcall
jmp
jg
push
jae
pop
nop
les
in
outsb
jp
ss
nop
ljmp
mov
lea
push
jl
cmp
test
fnstcw
jecxz
out
add
pop
call
xor
mov
jecxz
or
jp
cmp
xchg
xor
aaa
movsl
jbe
loope
jae
imul
push
pop
push
sub
inc
test
pop
inc
sbb
push
push
enter
rolb
xchg
jbe
stos
movsl
sub
rclb
loopne
dec
inc
shl
inc
and
stos
xor
cmc
outsb
inc
fisubrl
push
sahf
imul
test
pop
mov
loop
and
push
clc
mov
sbb
mov
inc
sub
adc
mov
jo
mov
add
sbb
jmp
and
movsb
and
jnp
addl
adc
addr16
or
mov
jecxz
xor
repz
lea
cld
test
sub
xor
in
adc
sub
adc
andl
mov
xchg
fcmovu
pop
insl
push
dec
or
pop
cwtl
jl
cs
sub
push
rcrl
mov
xchg
in
add
fucomp
cmp
fsubl
inc
fsubr
jb
dec
lods
push
or
rclb
es
xor
inc
fs
pop
sbb
cwtl
loop
mov
mov
jecxz
movsb
cwtl
sub
daa
movsb
inc
stos
pop
fsubs
testb
lahf
xor
sub
mov
into
add
mov
out
dec
mov
fiaddl
in
in
pushf
enter
cmpsb
aam
jno
pop
mov
scas
in
bound
mov
or
cltd
inc
out
mov
jmp
pop
push
loopne
adc
adc
xchg
jge
ficoms
and
jp
ljmp
and
mov
xchg
ja
push
sarl
sub
add
lea
push
lahf
mov
lahf
push
mov
lods
adc
or
mov
stc
xchg
orb
incb
rcrl
cmp
and
push
pop
fs
pop
mov
lds
adc
push
mov
pop
sarl
stos
testl
jnp
mov
out
dec
jne
cmpsb
enter
insl
push
fbld
sub
cmp
xchg
push
call
sub
aas
mov
pop
aas
movsb
inc
push
inc
cmpsb
inc
cmp
in
scas
imul
mov
scas
xchg
add
test
mov
xorb
lds
and
xor
sub
das
or
inc
xchg
push
hlt
int3
xchg
jns
pusha
dec
mov
imulb
xchg
call
sbbb
and
rclb
jmp
lods
dec
scas
fisttpll
mov
dec
or
jae
scas
popf
test
mov
sbb
mov
daa
jnp
ss
je
add
mov
frndint
pop
mov
pop
pop
sbb
push
dec
jb
cmp
xchg
popf
pushl
mov
cmpl
jbe
ret
inc
inc
inc
mov
jbe
xor
add
fadd
xor
insb
arpl
jnp
adc
jnp
push
inc
inc
push
cmpsl
jnp
fwait
mov
xchg
add
jb
pop
nop
push
inc
jb
daa
enter
xor
paddsw
xchg
cmpb
lret
add
inc
in
lea
shl
loopne
stos
loope
repnz
rcrb
loop
aad
iret
rcrl
xor
dec
cmp
or
aas
stos
mov
scas
inc
in
out
jo
inc
lock
adc
and
and
loop
into
inc
movsb
add
mov
xor
add
xchg
or
add
repz
mov
cli
adc
mov
jnp
dec
ror
sub
xchg
call
jnp
out
sub
filds
add
and
fmul
mov
in
inc
inc
lds
dec
jbe
pushf
pop
xchg
pop
call
loop
hlt
dec
in
xchg
cli
pop
mull
popf
cmp
add
xlat
jmp
jnp
and
adc
jl
orl
daa
into
pop
inc
cmp
and
into
adc
imul
das
lods
dec
push
pop
rcrl
testl
outsb
testl
aam
mov
arpl
test
pop
pop
xor
out
nop
pusha
aad
cmp
adc
shrb
das
in
jl
xchg
pop
pushf
xchg
push
add
lret
jbe
jnp
sub
shrl
cmp
sbb
into
call
pusha
push
pop
testl
sarl
lds
sbb
cmp
repz
mov
xor
outsl
aas
dec
cmp
and
jb
mov
inc
mov
mov
xlat
ljmp
ret
cmp
inc
lret
test
sbbb
xchg
outsb
loop
iret
pop
ret
shll
jg
cmp
sbb
int3
inc
xchg
fneni(8087
int3
pop
dec
push
xlat
fildll
cmovb
out
dec
mov
mov
xor
fsubrp
es
xchg
lcall
dec
repz
das
insb
outsl
pop
inc
hlt
cmp
xchg
adc
les
ret
or
cmp
and
data16
mov
clc
icebp
fisttpl
daa
or
push
shlb
push
aas
mov
shrl
jle
cmp
hlt
lock
gs
repnz
popl
pop
jo
inc
and
sbb
stos
mov
pop
cs
inc
ljmp
loop
stc
dec
pop
and
movb
xchg
out
pop
jno
andl
scas
pop
mov
shr
push
jbe
hlt
pop
mov
pusha
mov
mov
shl
jno
mov
sub
mov
popf
js
mov
in
fdiv
cmp
mov
and
data16
testl
xchg
xor
sub
inc
loopne
sbb
pop
pop
lret
cmp
mov
push
loop
push
dec
dec
pop
test
or
xchg
out
sbb
fisttpl
sbb
aas
mov
mov
push
pop
lahf
icebp
inc
and
cwtl
test
mov
aas
cmp
cli
aam
cmc
repnz
mov
push
inc
lods
cmp
shr
sahf
ret
loope
addr16
and
xchg
adcl
lret
fstpt
movsb
leave
lea
cli
jge
mov
mov
das
mov
jmp
inc
jnp
dec
or
insb
incb
jecxz
addb
or
in
pop
roll
mov
jmp
sbb
dec
add
iret
xor
insl
sti
scas
jnp
add
jg
outsb
je
aam
fwait
lret
arpl
pop
mov
inc
xorl
lcall
fs
jge
pop
pop
and
dec
or
mov
push
ds
pusha
sub
xchg
mov
mov
cmpb
sub
daa
sbb
test
sub
sub
test
data16
sub
lcall
rol
inc
jmp
adc
sbb
subl
and
outsl
fwait
inc
in
cld
dec
pop
rcrb
iret
sbb
sbb
mov
jbe
add
loope
jns
shll
dec
and
adc
dec
or
aas
test
insl
mov
mov
test
incb
inc
lock
imul
notb
jge
les
out
loop
pop
mov
pushf
add
inc
mov
rorb
mov
in
mov
pop
sbb
ds
fnstenv
inc
dec
test
jb
lahf
stc
push
and
jns
ss
xchg
pop
adc
xlat
cmp
scas
outsb
jne
and
out
pop
outsl
xor
data16
jge
jp
aas
cltd
stc
inc
push
jmp
in
ljmp
lods
loop
sti
add
std
test
mov
jne
inc
subb
popa
aaa
push
add
loope
lock
sahf
cmp
push
rclb
cli
dec
test
cmp
in
enter
stos
push
icebp
insl
lretw
xchg
int3
and
rol
out
cli
jb
dec
cmp
mov
fsubs
cmp
lahf
xlat
xchg
xlat
hlt
lcall
jge
scas
cmp
movsl
mov
mov
testl
jl
push
xchg
movsb
mov
mov
repnz
dec
arpl
int3
xor
icebp
xor
fmull
sbb
jle
ljmp
dec
sti
pop
icebp
mov
or
push
push
add
call
jae
jecxz
icebp
insl
call
je
push
in
rclb
loopne
sbb
push
jp
in
aad
and
push
loop
adc
push
test
mov
inc
iret
js
dec
cmp
test
jne
lret
mov
add
pop
je
push
cmp
cltd
jno
mov
addr16
test
adc
out
arpl
repnz
xor
outsl
mov
sti
mov
push
xchg
xchg
mov
pop
js
inc
lcall
push
push
lods
jl
in
add
lret
xchg
push
imul
pop
mov
hlt
and
cli
inc
popa
jle
sbb
xchg
pop
sub
fistpl
std
add
popf
and
aad
cmp
adc
aam
lret
aad
into
cs
push
jb
pop
mov
xchg
js
push
hlt
std
xchg
in
out
sub
xchg
mov
push
mov
mov
lret
add
or
mov
jae
xor
dec
xchg
cmp
inc
cmp
test
mov
push
push
aas
or
fbstp
into
and
frstor
or
jne
loopne
pusha
push
pop
jecxz
add
or
faddl
insl
fsubs
scas
lahf
dec
int
push
add
xchg
mov
scas
scas
or
mov
add
push
pop
cli
mov
std
sarl
pop
pop
ljmp
xchg
mov
push
je
ret
cmp
cld
in
imul
add
cmp
add
and
xchg
fwait
jb
xchg
push
inc
pop
loop
inc
mov
adc
add
inc
sbb
insb
loop
and
aad
sahf
ficoml
mov
out
jns
mov
insl
mov
cmp
insl
lret
aad
pop
jo
stos
xchg
outsl
or
sub
mov
lret
mov
mov
xor
mov
inc
iret
dec
xchg
popf
inc
test
push
loope,pn
mov
adc
sbb
inc
pop
and
push
cwtl
add
add
mov
push
cmc
mov
inc
jb
or
mov
jmp
push
sar
jo
push
mov
jecxz
lcall
sti
and
push
mull
cwtl
inc
idiv
jl
roll
lret
add
xlat
jmp
xor
mov
arpl
notl
popa
sbb
repz
in
icebp
mov
cmpsl
xor
ret
xchg
jp
and
jle
das
enter
mov
mov
xchg
imul
or
ja
dec
push
dec
inc
sbb
mov
mov
lahf
stc
loope
repz
and
sti
cmpsb
xor
mov
sbb
loope
jp
push
sti
cmp
inc
repz
pop
imul
inc
mov
movsb
loopne
xor
mov
loope
mov
inc
stc
jecxz
jnp
lds
jg
loopne
mov
xchg
repz
push
lods
dec
push
xlat
lods
mov
add
nop
mov
shrb
push
add
and
int3
ficompl
inc
pop
jmp
sbb
add
fincstp
add
cmc
sti
pushf
jb
xor
sbb
es
jno
addr16
dec
sub
lahf
inc
fbld
in
sub
out
push
xchg
cmp
pop
bound
dec
test
push
scas
jnp
imul
popf
mov
subb
das
scas
es
lret
int3
jne,pt
out
mov
pop
cwtl
dec
insl
mov
fs
popa
xor
ret
pop
mov
test
insb
addb
push
popl
addl
mov
sub
addr16
pusha
fwait
pop
sbb
cltd
pop
into
aas
xlat
pop
dec
mov
and
cmp
sbb
xor
jbe
leave
jbe
test
mov
add
jmp
pop
mov
ret
mov
cmp
popa
inc
inc
js
adc
repz
adc
test
lret
bound
pop
jnp
lahf
sub
xchg
pop
xchg
lods
or
in
push
repz
cmc
call
dec
lds
sub
jge
icebp
in
or
xchg
dec
push
aas
push
jne
lcall
nop
dec
jo
fsubrl
sub
fisubl
fdiv
cmp
jg
fists
outsl
pop
or
aas
push
pop
adc
or
mov
scas
loopne
ds
add
clc
cltd
imul
test
sub
pop
gs
fidivrs
inc
xchg
in
and
jbe
mov
jle
add
loopne
repz
jl
lcall
test
or
negb
cmp
imul
imull
push
sti
dec
xchg
dec
mov
cmp
mov
jp
mov
arpl
lret
movsb
iret
jecxz
fcmovu
jne
out
or
stos
dec
inc
mov
and
fisttps
pop
adc
mov
mov
xchg
mov
lods
inc
xchg
movsb
pop
pusha
leave
jp
sahf
push
or
arpl
sbbb
xchg
lret
aaa
mov
xor
test
nop
pop
push
fbstp
sbb
pop
mov
inc
sbb
test
es
dec
scas
cld
in
insl
mov
stc
mov
jb
js
xchg
iret
mov
mov
push
movb
pop
js
in
std
mov
mov
mov
xchg
imul
sti
add
pop
jbe
adc
adcl
stc
and
mov
mov
and
int
in
inc
xchg
sarl
jno
nop
or
gs
popf
ss
movsb
push
xchg
sub
mov
or
mov
gs
insb
ljmp
mov
xchg
negl
mov
xchg
clc
clc
mov
add
movsl
lods
push
xchg
or
notl
push
push
sbb
cmp
in
push
inc
lds
push
or
icebp
cmp
jnp
pop
aas
xchg
data16
jge
sbb
push
dec
dec
loop
xor
fwait
and
fwait
sahf
ds
inc
mov
popa
cmpsb
sbb
xchg
xchg
out
dec
bound
sbb
into
adc
mov
mov
sahf
mov
fstenv
pop
mov
mov
negl
arpl
jle
mov
cmc
in
mov
pop
cs
push
adc
jecxz
clc
pop
pop
xchg
sub
adcb
or
adc
inc
add
dec
sbb
jle
fwait
cltd
jne
cltd
arpl
std
into
sub
aaa
xorb
or
mov
jo
scas
mov
js
fwait
lret
pushf
xor
push
xchg
and
pop
dec
cmp
insb
movsb
add
nop
sbb
xchg
sub
mov
or
sbb
das
pcmpeqw
inc
sub
mov
enter
mov
jnp
mov
shl
mov
mov
mov
nop
das
imulb
mov
cmc
mov
sbb
in
andb
push
adc
decb
mov
out
push
jb
in
mov
jecxz
fdivr
mov
sbb
lods
cld
out
xchg
sbb
mov
sbb
or
xchg
or
push
loopne
cs
xchg
enter
sti
mov
hlt
fs
rclb
pop
jmp
ja
out
out
fsubrp
decl
int
into
jp
add
js
int3
cld
lret
push
push
stos
jecxz
bound
adc
sbb
scas
test
pop
inc
cmp
push
bound
rorl
leave
adc
out
negl
add
pop
jmp
xchg
imul
xchg
push
scas
scas
out
inc
sbb
jo
or
aad
nop
loope
pop
fs
add
fldl
shrl
repnz
movl
jl
lds
imul
pop
push
fidivl
xor
mov
mov
aaa
xchg
ret
xchg
clc
jb
add
cmp
inc
and
test
ja
aaa
pop
mov
fisttps
and
pop
jg
or
cli
stc
sbb
inc
sub
push
repz
dec
mov
push
sbb
sbb
leave
mov
sti
cltd
push
and
inc
cmp
inc
fldl
pop
pushf
in
and
inc
cmp
or
dec
icebp
sbb
inc
inc
inc
push
inc
mov
out
sar
sbb
sub
jmp
and
or
in
or
rclb
push
cld
push
pop
fld
pop
rcll
into
xchg
outsl
pop
sbb
jp
dec
gs
add
lods
sbb
stc
lcall
leave
push
scas
adc
or
push
cmpl
cli
inc
lds
xchg
into
pop
fsubrs
fistpl
or
aam
xlat
int3
test
mov
loop
leave
cmp
lods
cmp
lahf
notl
and
pusha
cli
push
addr16
adc
push
lods
iret
mov
cli
rcrb
jb
call
sub
mov
mov
ljmp
inc
push
sub
adc
add
in
shrl
or
mov
ds
cld
aad
push
fwait
cmc
ret
dec
push
pop
sbb
lcall
jecxz
pop
insb
shl
repnz
out
in
std
imul
sbb
jae
sbb
add
add
jge
sub
adc
lea
adcl
insl
and
xor
xchg
pop
or
pop
sahf
jo
mov
sbb
xchg
xor
jge
rol
dec
je
sub
jbe
out
daa
push
cmpsb
data16
xchg
imul
pop
lds
adc
repnz
loope
pop
lcall
xorl
lds
mov
or
add
ss
dec
push
inc
imul
aaa
mov
cmp
and
or
out
js
scas
cmpsb
outsb
scas
dec
aam
es
xchg
dec
jb
hlt
inc
lahf
mov
scas
pusha
sbb
out
mov
pop
shrl
jp
cmp
dec
leave
mov
clc
int3
imul
and
sahf
adc
add
je
inc
call
push
aad
jl
ss
repz
mov
or
and
imul
mov
in
loop
mov
rcll
xchg
push
leave
inc
fsubrs
sahf
pop
inc
movsb
adc
and
mov
leave
and
jmp
sbb
mov
jl
fidivrs
lahf
xchg
lahf
into
sub
mov
stos
data16
fwait
xchg
imul
fstpt
xchg
cmp
stos
lahf
jns
mulb
dec
mov
cmp
pop
mov
sbb
push
xor
push
mov
ficoms
fwait
mov
inc
add
repnz
and
sbb
repz
inc
aaa
lods
sarb
dec
pop
inc
les
bnd
lds
mov
sub
adc
repnz
push
jae
cltd
jecxz,pt
loope
xor
es
jo
jnp
dec
mov
xor
sub
pop
es
mov
into
mov
fsubl
std
xchg
push
loope
fwait
mov
xchg
mov
dec
push
dec
pop
xor
pslld
pop
inc
pop
mov
inc
popf
xchg
lahf
ss
inc
push
dec
test
add
jo
jge
loop
push
sti
jne
add
filds
mov
lahf
sbb
pop
mov
mov
mov
repnz
push
pop
scas
lock
xor
mov
aas
cs
nop
xchg
jns
or
sahf
data16
rcll
loope
cmp
sti
adc
mov
test
out
ds
aad
dec
or
add
test
test
addr16
push
rcrb
xchg
sti
fsts
mov
xchg
cmp
test
rorl
std
clc
pop
xor
mov
and
loope
leave
jmp
fwait
ljmp
loop
mov
in
in
jmp
ret
mov
test
and
movsl
mov
ficompl
dec
jnp
dec
mov
or
or
bound
push
push
fbstp
pop
mov
test
repnz
xlat
hlt
shlb
push
push
mov
push
ds
inc
inc
mov
push
or
into
int3
outsl
dec
pop
mov
push
xchg
iret
jae
jb
add
adc
lea
mov
mov
push
push
outsb
lret
push
mov
es
out
idivl
inc
sub
jno
mov
mov
jg
jp
adc
jns
pop
inc
cmp
mov
sbb
ljmp
cmpsl
testl
sahf
movsb
push
loopne
js
cmp
push
mov
mov
loopne
mov
jl
jno
xor
iret
cli
cld
inc
hlt
xor
mov
push
push
lock
pop
jb
lcall
mov
sahf
jo
xor
rcl
jmp
adc
es
rcll
mov
mov
inc
xor
sbb
and
dec
dec
outsl
call
dec
push
les
lret
adcb
sub
jl
das
xchg
test
pop
adcb
ljmp
in
xchg
movsl
adc
mov
in
jecxz
adc
inc
sub
or
push
out
fidivrs
inc
pop
cmp
cmp
mov
jnp
mov
lea
mov
push
fists
fcom
push
xchg
sar
fimuls
jle
leave
mov
flds
pop
arpl
fld
cli
mov
sti
cmp
xchg
js
xor
fldl
mov
fisubl
lods
cltd
pop
gs
mov
leave
jge
pop
mov
mov
xor
es
pop
fcoml
in
mov
pop
dec
rorb
movsl
mov
cmp
insb
clc
ss
mov
lods
lods
rcl
out
inc
mov
xchg
sbb
inc
adc
shrb
lods
xor
dec
fs
adc
in
jle
add
cmpsl
and
push
and
mov
mov
mov
mov
stos
pop
adc
cld
test
pop
xlat
repnz
subl
lds
fistps
sub
dec
sbb
push
daa
mov
dec
movsb
push
pop
inc
ja
sub
cmp
xchg
pop
cmpsb
cmpb
sub
insb
cltd
pop
mov
rorb
mov
mov
mov
add
pop
enter
aas
mov
inc
cwtl
push
or
lods
shrl
jo
cmp
out
push
lret
cltd
push
movsb
dec
xor
loop
pop
out
mov
call
cmp
sbb
push
jl
fdivrl
cmp
test
mov
jae
rcrb
push
stos
imul
popf
adc
jnp
insl
sub
ljmp
mov
je
imul
aaa
idivb
xchg
mov
rcll
xorl
mov
push
or
mov
fs
cmp
lret
xlat
out
xchg
dec
mov
add
push
mov
and
and
pop
dec
push
fcoms
rclb
mov
mov
js
mov
sub
test
fldcw
adcl
pop
and
sub
cmp
xchg
cs
mov
test
pop
loop
js
push
dec
in
xchg
inc
inc
mov
xor
sub
std
pop
icebp
aas
icebp
imul
int3
push
jecxz
jg
inc
test
bound
sbbb
loop
out
push
insb
es
add
cmp
iret
sbb
xor
cmc
and
add
pop
int3
nop
in
ret
cmp
jne
lea
push
leave
cmp
adc
mov
lds
cmpsl
add
push
fsubs
mov
std
jae
or
push
jo
add
xchg
push
imul
aaa
repnz
mov
stos
xchg
cli
xchg
imul
popa
pop
pop
xchg
xchg
sbb
dec
test
xlat
mov
add
pop
jl
adc
fwait
pop
ret
lahf
mov
into
pushf
add
in
or
mov
in
in
mov
lret
in
jmp
arpl
es
sub
dec
fistpll
pop
iret
js
test
sub
cltd
xor
jg
mov
xor
std
scas
sub
in
mov
les
scas
xchg
inc
add
mov
inc
jo
pusha
nop
mov
dec
mov
jbe
dec
sub
int
or
mov
push
jg
cmp
scas
add
jl
subb
stc
pop
fldenv
in
stc
or
leave
addr16
loope
add
clc
pop
mov
pop
pop
jge
cmp
es
outsl
xor
adc
call
shlb
repnz
loop
ret
push
mov
shrb
dec
lds
pop
cmc
sti
sbb
adcb
xchg
jae
dec
adc
std
xchg
gs
fidivrs
adc
mov
cmpb
lds
imul
fmuls
pop
add
add
sarb
xchg
into
mov
dec
sti
xchg
mov
shl
sbbb
lret
test
sbb
or
pop
cld
test
or
sbb
mov
in
pop
mov
inc
sbb
call
loop,pn
cmpb
ss
jno
add
dec
scas
arpl
test
cld
jae
or
adc
or
ds
int
xor
or
lahf
in
or
inc
daa
rcr
push
data16
scas
add
lahf
dec
lret
inc
dec
dec
call
or
adc
cmp
int
mov
cmpsb
pop
pop
pop
jp
xchg
xor
mov
cmc
popa
jae
dec
sahf
jno
ret
das
or
and
push
and
pop
std
pop
shrl
out
out
daa
leave
or
stos
shlb
xor
pop
stc
imul
xlat
inc
mov
sbb
inc
mov
repz
lods
add
sub
je
lock
push
push
movsl
jecxz
add
and
mov
iret
add
or
mov
js
incb
sbb
sbb
imul
mov
jle
adc
dec
mov
dec
inc
sti
push
or
out
addr16
loopne,pt
fimull
pop
cmp
enter
mov
rcrl
cwtl
push
sub
or
lods
cmp
dec
fisubrs
adcb
ja
sub
or
aad
push
imul
mulb
aam
push
pop
pop
pop
pop
imul
xchg
fdivs
xchg
imul
jbe
adc
aad
inc
pusha
cltd
jl
xor
outsl
cld
xchg
jae
sub
ljmp
aam
and
inc
loope
ret
stc
aam
pop
gs
or
idivb
pusha
jp
mov
rclb
jae
lret
imul
ja
cmp
sbb
or
xor
push
cltd
push
cli
lret
push
cmc
push
test
icebp
xor
scas
in
sub
pop
out
aas
js
dec
fiaddl
push
aam
mov
add
lods
call
mov
mov
and
mov
cmp
movsl
icebp
and
sti
mov
push
in
pop
add
xchg
xchg
xchg
or
and
jo
fstl
dec
outsb
and
stos
scas
jmp
js
inc
pop
jo
rcrb
xchg
movsb
inc
clc
jno
or
fdivrl
push
rcrl
xchg
sbb
inc
mov
lcall
push
push
lea
inc
xchg
paddw
ror
sbbb
nop
xor
sub
frstor
in
hlt
xchg
pop
and
pop
nop
push
in
jne
and
enter
das
pop
fcmovu
lahf
cwtl
mov
loop
jae
jo
pop
jmp
inc
push
dec
xchg
mov
in
in
adc
enter
or
fmuls
mov
sub
jle
repz
mov
jnp
shrd
repnz
jge
loop
inc
xchg
sahf
mov
mov
sbb
mov
subl
loop
adc
jg
cmpsl
xchg
js
mull
cmpsb
mov
cmp
into
adc
ds
mov
loopne
sbb
or
movsb
cmc
add
mov
faddl
xor
ret
xor
fbld
cs
loop
js
jo
mov
hlt
push
sarb
cld
shrb
mov
fildl
pop
or
xchg
popa
xchg
cmp
data16
jne
shll
xchg
dec
out
jb
lods
mov
sub
repnz
push
jmp
jmp
xchg
jo
sbb
fsubr
daa
xor
int
push
push
inc
adc
cmp
stc
popa
dec
push
in
scas
dec
in
mov
xlat
cli
pop
jg
dec
xchg
sbb
xchg
mov
xchg
xor
fst
stc
jg
lods
xchg
sbb
addr16
xadd
sub
test
xchg
fisubs
out
push
and
xchg
mov
fcmovbe
fnstcw
sub
adc
inc
cmp
leave
dec
fadd
xor
enter
sbb
mov
xchg
cmp
dec
pop
dec
mov
mov
fmul
and
inc
sub
dec
sub
dec
pop
fwait
jnp
cmpsl
stc
sub
ret
fbstp
inc
jl
sbb
hlt
fiadds
pop
loope
cmp
jno
ds
test
xchg
add
jg
cmpsb
jbe
and
fnsave
push
sbb
cmp
insl
mov
mov
div
jg
xchg
in
or
lret
and
daa
mov
into
ja
imul
fiaddl
jmp
cwtl
push
lcall
test
dec
cmc
xchg
mov
mov
mov
notb
jecxz
mov
jbe
push
mov
add
add
sub
pop
ss
add
jge
out
fcom
icebp
dec
fsubrp
mov
mov
push
mov
fwait
sub
cwtl
jne
and
sub
cmpsl
aaa
mov
mov
xchg
xor
dec
mov
cmc
sub
dec
test
adc
xchg
arpl
repz
jbe
jg
call
pusha
inc
pop
gs
fldz
mov
xchg
mov
js
data16
inc
push
sbb
cmc
xchg
lcall
push
addr16
cld
je
pop
lods
sbb
mov
xor
lds
adc
adc
cltd
mov
jle
sub
mov
push
mov
sbb
dec
iret
or
xor
dec
dec
mov
es
add
xchg
xchg
aad
dec
imul
and
dec
pop
mov
xchg
mov
xchg
jnp
push
fwait
mov
pop
mov
sahf
sti
rorb
add
add
jle
pop
mov
jg
divl
ret
jecxz
xor
add
incl
lea
jo
cld
sahf
mov
xchg
mov
and
xchg
stc
and
jae
out
test
add
adc
jo
xor
stos
adc
mov
jle
lcall
add
aaa
cmp
and
mov
test
dec
les
in
je
push
rcl
or
add
jecxz
lods
ja
jo
pop
mov
dec
sub
jnp
adc
sub
xlat
pusha
mov
and
mov
shll
inc
shl
cmp
mov
mov
int3
cmpl
pop
fadds
lods
mov
fsubs
and
sbb
xor
arpl
iret
int3
mov
mov
and
lods
jbe
lcall
and
stc
mov
or
aaa
insl
ljmp
xor
inc
pop
sbbb
in
inc
mov
mov
xchg
andb
adc
xchg
in
mov
mov
cmp
xchg
mov
popf
xor
jg
jbe
push
add
jp
mov
pop
xchg
xchg
ja
xchg
outsl
push
mov
insb
and
popa
cmp
jnp
lret
out
mov
sarb
cs
scas
aas
mov
in
xor
ret
mov
inc
out
loop
jo
jae
movsb
push
pop
adc
jno
push
jne
add
dec
aam
add
into
add
sbb
outsb
loopne
add
add
jmp
xchg
sbb
fcomp
jg
push
mov
ficoml
addr16
xchg
or
jne
inc
mov
mov
out
dec
lea
mov
int3
adc
loopne
rcl
insb
sub
adc
or
fildl
mov
movsl
fiadds
mov
or
jge
cmp
scas
out
lods
sbb
in
sbb
xchg
jmp
addr16
inc
loopne
popa
daa
inc
push
cmp
scas
cmpsb
loop
dec
and
cmp
fwait
lods
loop
sub
jns
inc
es
adc
mov
sahf
into
mov
repz
dec
sbb
dec
cli
gs
push
mov
jae
imul
inc
push
pop
jp
hlt
xchg
aam
push
jmp
outsl
les
pop
pushf
cwtl
sub
out
ja
imul
xchg
mov
jecxz
sub
add
sub
pop
dec
push
pop
mov
mov
pop
xchg
sub
cltd
icebp
dec
lcall
mov
jg
loop
push
std
xchg
stos
sahf
std
push
push
dec
call
xchg
insl
movsl
cltd
xchg
jecxz
cmp
bound
cmp
data16
pushf
dec
iret
test
cmp
outsb
push
pop
dec
mov
in
inc
pop
pop
in
jns
jl
sub
js
shrb
dec
ljmp
loop
dec
ss
sbb
pop
ja
adc
stos
sahf
cmp
dec
fisubrl
push
in
popa
cmp
or
das
mov
dec
or
inc
fsubl
in
fdivs
jg
lods
and
movsl
mov
test
mov
data16
sbb
repnz
int3
in
in
std
and
inc
dec
hlt
mov
mov
sbb
inc
sbb
subl
aad
stos
fs
ret
orl
scas
mov
fs
push
ret
push
mov
mov
pushf
mov
push
sub
push
scas
add
mov
test
inc
mov
sbb
addl
negl
push
pop
les
cmp
xchg
repz
xchg
pop
mov
mov
in
loopne
jno
mov
mov
xorb
or
xchg
movsb
jmp
push
sbb
cwtl
out
add
adc
push
push
push
cmovb
imul
cld
inc
add
daa
mov
adc
cmp
jo
add
into
mov
pop
mov
addr16
outsb
popa
xlat
sti
or
repnz
add
fldl
es
mov
hlt
add
inc
jmp
adc
loop
cwtl
mov
cld
cmp
jle
and
adc
imul
lret
or
inc
mov
adc
cmc
inc
int
inc
cmp
jp
addr16
fiadds
out
loop
xor
repz
bound
rorl
sub
pop
mov
movsl
pop
inc
adc
add
in
popf
shl
or
loope
scas
cmpsb
cmp
inc
xor
test
push
imul
fiadds
ret
popa
repz
sbb
dec
popf
movsb
adc
out
xchg
push
push
sbb
cld
xor
popa
shll
lahf
sub
leave
mov
cmc
cld
js
inc
mov
shlb
xor
sbb
int
dec
int3
int3
mov
and
rolb
dec
xor
mov
and
enter
shll
inc
call
rcrl
test
pop
fisttps
pop
push
js
pushf
jl
jl
mov
dec
pushw
sub
inc
nop
and
sub
mov
xchg
test
cmp
or
mov
mov
sbb
fcoms
dec
adc
push
test
push
int
fcomp
pop
out
push
push
lret
out
sub
lret
push
fs
rep
aas
jae
hlt
mov
inc
adc
lds
mov
orl
loop
sub
push
out
jb
icebp
fcoml
aas
pop
in
dec
push
dec
cmovl
xchg
je
gs
mov
inc
mov
pop
shrb
xor
imull
sbb
mov
jae
popa
or
cmp
dec
call
adc
inc
dec
lret
es
sbb
ljmp
cmp
xorb
push
xlat
cld
out
sub
mov
loop
inc
sbb
daa
jl
jb
add
add
xchg
jbe
cmp
rcr
and
mov
aam
xchg
ljmp
enter
rclb
adc
ret
mov
pop
and
or
fdivrp
das
repz
fldt
mov
int
inc
dec
mov
rcl
mov
or
dec
inc
jb
pusha
das
fisttps
scas
mov
adc
xchg
xchg
pop
mov
sahf
jp
or
jmp
lcall
xlat
mov
cmp
leave
out
pop
push
jno
add
inc
jecxz
adc
outsb
xor
fildl
adc
jle
and
sti
mov
push
xlat
lock
lock
je
pop
in
sub
push
jo
sub
or
add
cltd
dec
mov
sub
sub
cmpsl
addb
cmp
and
inc
rcll
scas
pusha
or
test
testl
pop
inc
test
xchg
mov
mov
ficompl
inc
push
or
inc
pop
insb
les
stos
sahf
mov
daa
mov
insb
fdivrs
xor
add
mov
adc
sahf
test
inc
arpl
jmp
fcmovnbe
insl
test
leave
lcall
pop
mov
lret
xor
xchg
inc
lods
adc
es
mov
or
cli
mov
cmp
movsb
push
push
mov
sbb
imul
cmc
push
fcmovbe
loop
out
xchg
inc
cmpl
jmp
pop
push
fwait
jbe
dec
and
repnz
in
lods
in
dec
push
push
dec
cmpb
xlat
mov
daa
pop
mov
ja
hlt
xor
test
clc
cmp
inc
jnp
xlat
pop
and
mov
xor
call
lcall
shlb
cld
fidivl
inc
push
les
or
movsl
clc
cmp
xchg
in
iret
xor
mov
push
add
nop
imul
sahf
mov
xchg
daa
push
sub
mov
je
sbb
inc
jecxz
mov
scas
test
cmp
inc
xor
shll
pop
cmpsb
mov
mov
adc
stos
add
js
sub
inc
es
inc
jge
or
push
outsl
mov
test
dec
cli
xor
mov
shr
out
loop
adc
popf
push
ret
or
test
shl
cmp
sarl
cmpsb
cmp
jge
xchg
sbb
push
push
dec
enter
dec
pop
ljmp
pop
xor
mov
mov
dec
fisubs
dec
dec
fnstsw
cmc
test
cmpsb
xchg
sub
test
das
out
sub
les
xor
mov
rolb
add
pusha
push
or
or
jno
xchg
add
mov
pop
ds
aad
imul
popf
enter
cmp
pop
sahf
add
imul
pushf
aas
outsl
shll
jmp
jb
xor
pusha
stos
pop
mov
leave
push
or
push
popa
mov
ss
loopne
jae
jno
stos
pop
cmpsl
lret
stc
inc
inc
add
add
sub
insb
clc
mov
in
and
cmpb
add
lret
sarb
mov
push
cmp
std
popf
add
movsb
call
xchg
cs
pop
add
call
imul
std
inc
push
push
sti
pop
push
lods
add
inc
push
inc
push
sarl
aas
in
les
dec
push
movb
mov
stos
add
or
incb
inc
inc
dec
sbb
bound
shll
mov
mov
and
loop
or
push
fimuls
cmc
lods
cltd
test
and
shlb
hlt
dec
mov
pop
fstp
insb
pop
cld
mov
cmp
xor
sub
icebp
or
out
pop
mov
ljmp
xchg
imul
iret
outsl
movb
jb
push
push
dec
loopne
pop
addr16
mov
push
jb
jo
lea
push
aaa
xchg
movsb
add
cmp
and
sub
adc
repnz
je
add
cmp
dec
fdecstp
jle
xor
mov
mov
daa
fstl
test
repnz
jb
xchg
sbb
mov
xor
dec
pop
sub
inc
cmp
insb
js
int
lods
xchg
sub
inc
fsts
pop
xchg
idivl
pusha
push
dec
fbld
cmp
scas
pop
cli
mov
or
lcall
sub
adc
fcomps
xor
mov
mov
fisubrl
push
cmp
sub
mov
mov
mov
or
cmp
jl
test
imul
push
insb
ja
dec
aad
adc
addr16
dec
mov
jl
das
movsl
and
scas
es
cld
imulb
push
sahf
add
sub
imul
push
pop
sbb
stos
shlb
adc
add
movsl
das
ljmp
cmc
fnstsw
or
sti
sbb
lods
cld
inc
frstor
mov
into
sbb
and
cli
jmp
add
movsl
rorl
add
xor
dec
mov
jnp
sub
in
arpl
in
lods
lds
cmp
and
mov
pushf
fnsave
subb
cmp
mov
sarl
push
jmp
add
pusha
enter
std
ljmp
movsl
mov
shrb
and
cs
adc
shlb
xchg
cmpsb
jae
inc
loope
jle
mov
and
inc
imul
and
push
call
jp
dec
sbb
repz
lret
cmp
jmp
lret
popa
pop
lret
pop
add
dec
jmp
test
ja
jno
enter
rcr
mov
sahf
mov
jmp
call
inc
dec
nop
fcmovu
xor
loop
xchg
adc
xchg
jl
add
push
nop
fucomip
mov
dec
test
adc
lock
aas
cmpsl
adc
xchg
rorb
mov
and
sbb
and
adcb
pop
enter
jae
mov
in
adcb
enter
stos
js
xor
int
jmp
cmp
or
gs
mov
callw
push
sbb
roll
pushf
mov
jo
adc
jmp
pop
cmc
add
lods
pop
jmp
adc
test
jb
pusha
lock
adc
fs
stos
pop
leave
xchg
adc
enter
jno
popf
jg
push
clc
push
mov
cmp
test
out
mov
jbe
and
or
sbb
jecxz
adc
pop
mov
or
push
jle
shll
or
js
add
adc
sub
outsl
fidivrs
push
mov
cld
xor
mov
faddp
test
add
mov
and
es
leave
int
inc
clc
push
push
jno
mov
shl
or
inc
mov
jl
jo
xor
inc
add
mov
out
imul
in
mov
dec
jno
loopne
js
cmp
rorb
lcall
fists
outsl
pop
sub
sar
sub
scas
pushf
imul
xor
aad
push
mov
in
out
leave
and
xchg
pop
jnp
js
and
inc
push
ret
mov
fwait
jecxz
jg
sbb
shlb
fistps
and
lock
lods
cltd
aad
cmovl
push
jb
gs
in
and
addr16
hlt
jg
das
adcb
aad
movsl
xchg
inc
jne
sub
sub
arpl
mov
test
xor
push
int
inc
jle
sub
decb
lock
scas
and
sahf
mov
inc
addl
lret
imulb
pushf
xlat
inc
ret
adc
lcall
push
sub
rcrl
push
xchg
int3
pusha
dec
insl
test
popa
pushf
dec
or
fadds
adc
pushf
pusha
call
xchg
dec
pop
xchg
in
sbb
mov
adc
mov
fcoms
test
mov
fdivp
mov
lods
sbbb
cwtl
and
xchg
sbb
sbb
mov
and
popa
jnp
and
mov
xor
imul
mov
xchg
insl
pop
mov
jmp
nop
insb
jg
pushf
add
mov
std
rorl
cmp
ss
or
cmc
repnz
sbb
js
xor
or
aaa
push
sahf
clc
ret
data16
fs
dec
xor
iret
ja
rolb
pop
sub
jnp
push
pop
cmp
adc
mov
cmp
adc
test
js
ret
test
jns
mov
mov
popa
sbb
fisttpll
ja
add
xchg
outsl
mov
sti
xor
outsl
fnstenv
mov
mov
shrb
jbe
dec
hlt
in
xor
cmp
xchg
int
sub
mov
mov
mov
mov
adc
mov
gs
in
cltd
sarb
and
js
insl
and
decl
sahf
out
push
and
test
notl
sub
sbb
flds
clc
enter
fidivrl
add
jnp
inc
aaa
push
call
cmc
sbb
pop
test
cmp
xorb
cmp
in
cltd
push
xor
adc
test
mov
ret
adc
int3
pop
or
fisttps
push
jo
mov
xor
mov
xchg
in
pop
daa
les
fsub
fnstcw
movb
sub
je
aam
fmuls
or
punpckhbw
mov
fiaddl
cltd
cmp
ljmp
jnp
ja
cltd
notb
push
sub
jl
inc
jno
mov
pushf
jg
mov
xchg
sub
adc
test
and
lret
mov
gs
sbb
pop
imul
shrl
lcall
jecxz
xchg
mov
repnz
in
sub
bound
cmc
xorb
in
xchg
dec
mov
nop
popf
loope
xchg
xlat
jg
call
mov
les
leave
add
jle
adc
pop
outsl
imul
and
sti
imul
out
adc
mov
sub
rcl
or
ret
xchg
fstl
xchg
xor
inc
inc
insl
pushf
imul
push
pop
jo
les
loopne
push
xchg
adc
rorb
lds
push
imul
out
inc
insb
or
cmp
subb
clc
add
lahf
dec
test
divl
cmp
rcrl
ds
pop
in
xor
sub
and
test
jb
inc
mov
push
adc
jl
in
mov
sub
xchg
xlat
leave
dec
mov
inc
clc
in
out
adc
push
stos
jae
sub
mov
jecxz
inc
loopne
sbb
jnp
inc
aam
inc
icebp
jns
out
and
mov
rcll
dec
jp
dec
stos
sbb
stc
mov
repnz
add
idivb
push
inc
dec
cmp
mov
cmp
pop
fucomp
jne
sub
adc
mov
es
jns
es
mov
jle
sahf
or
std
xchg
aas
mov
inc
and
sbb
data16
ds
mov
jmp
lods
mov
dec
mov
jge
pusha
es
loope
jmp
scas
push
sbb
or
mov
push
inc
out
mov
push
mov
mov
loop
mov
shll
cmp
xorl
and
push
out
popa
jmp
test
mov
inc
leave
sbb
mov
mov
fs
loopne
aaa
ret
pop
scas
inc
or
lret
mov
lods
int3
pop
inc
jle
cmc
mov
cmp
pusha
les
imul
in
int
jle
into
sbb
stc
repnz
stos
dec
ljmp
fwait
push
adc
jae
xor
cmpb
mov
xlat
add
jae
push
cmc
jge
gs
adc
fidivrs
fidivrs
div
dec
adc
adc
and
icebp
push
xchg
bound
in
test
loope
das
jecxz
push
xchg
mov
cmp
inc
inc
fildl
xlat
addr16
popa
ljmp
push
movsb
test
push
stos
cs
scas
xlat
inc
lsl
adc
into
mov
add
loope,pt
mov
int3
push
movsl
mov
js
je
dec
outsl
rol
cmp
xor
or
pushf
flds
mov
scas
push
mov
lods
movsb
inc
cli
inc
xor
adc
movsl
sbb
bsf
jl
lock
stos
push
fisubs
or
dec
jnp
xchg
movsl
fsubs
cmp
sub
and
ret
fstp
mov
pop
mov
icebp
scas
std
or
sbb
or
xor
pop
adc
pusha
testb
or
call
mov
cwtl
data16
fisttpll
ficompl
mov
bound
xlat
fwait
xor
fdivl
push
enter
ret
jns
pop
add
fwait
arpl
dec
mov
cwtl
and
and
pusha
enter
cmp
pop
inc
cmp
testb
inc
pop
push
mov
cmp
mov
test
sub
out
adc
cmp
imul
out
pop
jbe
lret
sahf
test
das
cwtl
rcll
rcr
push
add
test
lcall
xlat
mov
hlt
in
ljmp
jnp
mov
xchg
popf
outsb
push
adc
out
and
mov
int
inc
stos
pop
ja
pop
int3
movsb
xchg
xor
cli
enter
ja
outsl
daa
repnz
and
mov
mov
add
cltd
mov
in
loope
xchg
pop
adc
xchg
jle
add
pop
cmp
divl
rcrb
test
andl
fdivrs
xchg
inc
mov
ds
push
loope
in
jg
into
lods
sbb
xlat
mov
dec
lret
imul
out
jl
push
in
mov
mov
and
jg
dec
mov
xchg
in
or
jecxz
mov
mov
mov
push
clc
fwait
jge
loope
ljmp
push
xchg
mov
pushf
mov
or
les
adcb
insl
mov
xor
icebp
addr16
sub
jae
dec
cmp
je
repz
dec
arpl
sub
cmpsb
out
das
or
adc
inc
es
cmp
int3
sbb
cmp
arpl
js
push
nop
lahf
xor
arpl
mov
or
sbb
xor
xchg
inc
push
jnp
add
add
mov
cltd
cmp
aas
out
sbb
sub
int3
add
push
jle
stc
negl
jbe
add
jp
push
and
and
adc
inc
mov
dec
fwait
inc
loop
cmp
call
movsl
int3
insl
pop
loop
jns
out
push
xchg
je
fidivl
js
out
push
mov
mov
sbb
jmp
stc
mov
mov
ficoms
jl
and
stc
dec
les
and
adc
xchg
inc
enter
bts
stc
es
mov
mov
pop
mov
stos
and
int3
in
cmp
xor
testb
iret
sub
pop
inc
icebp
inc
mov
sahf
pop
adc
mov
fimuls
jmp
inc
imul
arpl
inc
adc
sbb
lock
cmp
adc
jge
dec
xchg
adc
jle
sbb
dec
pop
add
and
popf
sub
and
test
aam
out
add
cmp
jnp
sbb
fstpt
sahf
cli
test
mov
pop
push
xchg
or
dec
jp
testl
mov
adc
xchg
cmp
arpl
push
and
jg
jb
xchg
or
mov
xchg
push
movsb
outsl
out
sbb
push
and
inc
sub
sub
push
int
inc
cli
mov
int
add
mov
xorl
mov
ja
adc
rcll
jmp
add
sahf
fmull
push
stos
sbb
adc
pop
cmpsb
insb
xchg
or
outsb
cmp
sahf
push
or
movsl
cmp
pop
pushf
cld
add
in
xchg
push
andl
fildl
push
cmp
jo
mov
jns
xchg
jnp
gs
divl
ficoml
xchg
inc
arpl
push
mov
hlt
mov
push
or
addr16
in
jle
out
inc
fwait
jge
out
push
mov
je
jg
pop
imul
loope
lsl
pop
ljmp
call
pop
adc
flds
xor
sbb
push
xchg
mov
xor
sti
outsl
pushf
jmp
pop
inc
xchg
aam
aam
adc
cmc
shll
test
and
ljmp
pop
adc
loop
fbld
imul
into
fsubrs
insb
in
fwait
movsl
ja
rcr
sbb
out
or
ja
les
xchg
pop
push
sbb
mov
adc
aam
fcoml
mov
les
das
test
mov
mov
cwtl
fstpl
es
lods
int3
adc
shl
fsincos
out
stc
jno
inc
and
pop
and
push
aaa
lea
cwtl
or
mov
jnp
test
insl
cmp
xor
dec
iret
ds
push
dec
cmp
cli
gs
jbe
xor
es
mov
arpl
sbb
mov
dec
push
int
fisubrs
mov
mov
push
xor
sbb
jl
jp
fsts
js
push
stos
pop
ss
mov
xchg
inc
in
dec
movl
mov
sahf
dec
hlt
cwtl
mov
push
stos
in
lds
jo
pop
subl
xchg
test
bound
lock
pop
popa
pop
pop
or
mov
inc
push
loopne
pop
sub
pop
cmpsb
xchg
xor
and
cs
in
lods
mov
jne
lds
out
aad
loopne
xchg
fsubrl
ret
into
mov
jo
dec
shrb
popf
fidivrl
dec
mov
mov
pop
cmp
xchg
push
pushl
in
adc
push
mov
arpl
jno
xchg
pop
inc
sbb
icebp
test
cltd
scas
js
leave
jmp
cmc
mov
mov
push
sbb
sbb
popf
movsb
std
xor
pop
les
sbb
jecxz
aas
jb
and
test
push
popa
mov
push
jle
js
lret
gs
adc
lods
xchg
inc
add
sbb
lahf
subb
mov
out
gs
xor
out
pop
inc
data16
fisubs
xchg
arpl
repnz
xchg
push
out
sub
cmp
jb
lds
shrb
lcall
cmpsb
gs
js
mov
in
pushf
mov
mov
ljmp
push
mov
jo
aaa
aaa
xor
stc
and
inc
mov
rcrb
testl
cmc
decb
xchg
loope
movsl
push
inc
div
jbe
icebp
jne
outsb
adc
lahf
jns
gs
add
mov
cmp
neg
and
insb
sahf
push
mov
leave
xor
out
push
cmpsl
stos
adc
add
fistpll
jg
test
ljmp
test
fsubrl
pop
ja
notb
aam
hlt
loopne
lods
xchg
movsl
test
and
sub
mov
in
lea
mov
in
hlt
jecxz
pop
test
adc
repz
mov
imul
scas
pop
push
cld
sub
inc
icebp
mov
sarb
adc
jecxz
dec
aad
add
and
std
aad
sahf
decl
xchg
jmp
mov
in
inc
inc
addr16
xor
movsl
dec
jne
inc
jg
les
sub
jecxz
call
xor
or
jp
add
cmp
and
jno
mov
sub
push
and
lea
and
rolb
push
sahf
or
sub
fcoml
sub
stos
clc
mov
gs
cli
leave
bound
out
testl
lahf
ficompl
pop
loope
pop
lock
mov
ficoms
leave
rcll
rolb
sbb
jno,pn
test
inc
mov
clc
jne
xchg
scas
sbb
or
dec
cld
outsl
sub
lds
lock
dec
mov
aaa
mov
sub
outsl
jbe
sbb
pop
push
push
into
hlt
cs
stos
dec
inc
iret
push
mov
sub
mov
adc
imul
cmp
hlt
imul
pop
lods
mov
push
mov
lods
movsl
jge
jmp
lods
pop
orl
mov
mov
mov
inc
inc
inc
jmp
cld
cmp
lock
outsb
mov
imul
into
sbb
fistpl
addr16
mov
jnp
dec
xor
and
movsb
out
insl
pop
pop
cmp
test
add
pusha
mov
loope
adc
sbb
outsb
inc
imull
aam
and
add
inc
mov
xchg
pop
mov
and
mov
mov
push
leave
test
mov
dec
xchg
mov
testl
or
jns
xlat
cld
jbe
loopne
sbb
iret
fists
xor
pop
sti
jle
das
xor
sub
or
loopne
sbb
xchg
clc
aad
mov
mov
mov
rorl
mov
mov
out
add
les
idiv
in
jbe
les
push
sub
add
jge
or
inc
xor
aam
mov
imul
push
mov
pop
mov
fnsave
dec
lcall
imul
mov
or
movsl
ja
push
mov
addr16
in
sub
sbb
arpl
push
cmp
fcmovu
cltd
jp
jno
test
pusha
rcrl
mov
mov
aam
shr
iret
inc
or
pop
fidivrs
mov
aaa
push
fadd
in
sbb
test
stos
fildll
daa
cwtl
imulb
sbb
sub
push
pop
xor
popf
cmp
and
push
in
lods
data16
jb
lcall
ret
cli
aas
xor
movsl
incb
mov
test
fstl
mov
mov
je
sbbb
cwtl
dec
pop
lcall
mov
leave
xchg
mov
sub
adc
repnz
mov
xchg
inc
lock
insb
xorb
hlt
bound
mull
mov
sahf
popf
shrl
cmp
in
shrb
push
add
test
inc
or
cmp
sub
lahf
mov
jecxz
sub
and
daa
xchg
cli
xchg
jge
mov
out
sbb
xchg
mov
ljmp
scas
push
and
adc
and
mov
push
xor
sub
inc
leave
mov
add
and
mov
scas
hlt
shlb
nop
push
aad
dec
jnp
adcb
mov
xor
jl
push
push
add
inc
push
or
xlat
adc
popa
dec
xlat
es
repz
out
test
push
repz
pop
pop
icebp
sahf
jle
data16
out
stos
dec
nop
mov
sub
dec
xor
cmp
cmp
sbb
and
mov
fldt
mov
test
cmpsb
pop
and
adc
aas
call
iret
fists
push
scas
push
adc
dec
mov
je
or
loope
fstpl
daa
pop
or
push
push
inc
mov
in
adc
shrl
pop
sub
xchg
xchg
mov
in
in
scas
imul
xchg
sub
mov
push
shrb
and
cmp
movsb
jle
jp
xchg
hlt
lock
jge
jbe
jne
adc
into
insw
movsl
pop
adc
dec
dec
fadd
jmp
push
test
mov
aaa
outsb
sbb
push
sahf
or
mov
inc
add
lods
mov
repnz
xchg
inc
xchg
popa
ljmp
out
shll
dec
daa
int3
fdivr
loope
aaa
test
sahf
add
lods
pop
mov
push
data16
and
or
sbb
ja
shrb
xor
mov
adc
mov
sbb
fidivs
mov
in
decb
repnz
or
loope
xchg
jmp
cmp
lret
jnp
stos
filds
push
fldl
hlt
inc
cmp
lock
insb
cmp
push
int3
mov
mov
jmp
nop
sub
dec
lret
clc
mov
enter
sbb
push
in
or
and
mov
jmp
gs
inc
in
inc
or
jno
mov
xor
movsl
push
add
or
loopne
cmpsb
push
push
jno
insb
add
inc
cs
mov
sbb
shl
xchg
cltd
dec
jnp
sar
xchg
jmp
adc
push
inc
repnz
jp
add
enter
sti
fwait
mov
arpl
in
sub
cmpsb
loopne
inc
inc
movsl
es
mov
mov
push
sbb
pop
ret
out
shrl
xchg
test
jno
adc
ja
inc
mov
inc
ljmp
adc
addr16
rclb
sub
and
pop
stos
test
pushf
jl
pop
in
out
mov
in
popf
pop
sub
int3
loope
cmp
inc
hlt
mov
mov
jle
dec
jb
xor
les
mov
aas
xorb
cmpsb
cmc
dec
push
sbb
inc
sbb
mov
loope
and
xor
pop
out
mov
mov
cmc
movsl
adc
sbb
bound
jnp
jae
adc
mov
divb
and
cwtl
mov
or
loopne
push
pop
out
and
mov
dec
add
test
adc
popf
jmp
into
sub
pop
mov
out
add
das
repnz
mov
cmpsl
daa
popa
or
cmp
ljmp
out
adc
dec
inc
js
and
pop
jno
sahf
shrb
dec
adc
lods
lods
orb
insb
mov
fcomp
and
int3
cs
cmpsl
cmp
lret
loopne
xchg
mov
aam
fxch
aam
mov
mov
scas
mov
test
into
fwait
mov
out
lret
scas
sub
xor
lock
ret
jge
xor
rclb
in
dec
cld
pusha
mov
loop
push
dec
les
or
cmp
das
mov
cmp
sbb
and
push
adc
cmc
int3
insl
jp
jo
lret
mov
iret
xchg
nop
lods
mov
dec
jp
mov
rcrl
sahf
pop
movsb
bnd
mov
jno
mov
cmpsl
adc
cwtl
js
and
and
adc
or
jo
lods
adc
in
shrl
pop
pop
out
sub
iret
ret
xor
cmp
outsl
xor
sbb
dec
out
outsl
movsl
pop
out
sti
mov
fidivs
pop
das
xor
inc
add
fisubs
or
scas
and
cmpsl
and
popa
out
jns
push
lock
lods
in
push
sub
mov
xchg
mov
pop
dec
rorb
movsl
pop
xor
xor
jne
lds
push
jg
stos
imul
sbbb
sbb
dec
cmpsb
fsubrs
gs
fcompl
inc
in
in
filds
adc
adc
repnz
and
sbb
and
loopne
andl
add
pop
mov
cmp
fimuls
or
jno
loope
cmpsl
mov
fildll
xchg
jecxz
test
sahf
add
jo
cld
xor
xchg
jb
out
in
dec
insb
in
mov
jle
xor
add
adc
call
push
adc
mov
fisttps
lea
jge
cmp
dec
cmp
push
mov
lods
ljmp
es
mov
sbb
mov
jmp
dec
lods
fdivrs
fldcw
cli
out
jecxz
loopne
pop
imul
sub
nop
dec
and
in
lods
sub
inc
shrl
or
sub
dec
ret
inc
sbb
add
mov
mov
das
js
jmp
mov
fwait
leave
dec
fsub
and
lahf
test
push
mov
sar
cmp
cltd
insb
mov
mov
insl
loope
adc
push
repz
test
les
mov
cmp
push
shll
fs
aam
arpl
outsb
pop
jo
mov
orb
in
inc
test
sti
mov
inc
stc
and
sbb
int3
lret
lods
cmpb
and
loopne
mov
add
and
rcll
or
cmp
bnd
inc
lret
jne
jecxz
or
shrd
jp
inc
stc
std
out
bound
inc
mov
xchg
xchg
push
or
inc
outsb
push
sub
les
push
or
jns
mov
add
adc
jp
inc
sbb
outsb
dec
sub
jmp
mov
mov
add
mov
mov
sub
out
mov
in
cmp
loope
aas
inc
sti
push
int
mov
nop
rorb
shll
test
imul
jle
push
and
push
inc
clc
and
out
pop
jl
sbb
outsl
outsb
add
inc
add
push
and
sub
aas
mov
mov
test
cmp
dec
leave
lret
inc
add
dec
mov
push
outsb
cmp
sbb
aad
rcl
int3
fsts
test
nop
inc
ror
push
xchg
and
in
mov
xlat
imul
xor
or
cli
jb
mov
cmpsl
mov
inc
push
and
lcall
rorb
mov
cs
lret
mov
push
repnz
sub
icebp
mov
pop
je
ret
sbb
in
or
jle
fwait
mov
push
push
dec
push
and
mov
cmp
jo
cmpsl
inc
and
mov
and
and
add
sub
inc
cld
popf
cmp
mov
pop
inc
scas
subl
sti
icebp
iret
movlps
rcrb
lret
aas
call
xor
jne
dec
or
pop
imul
int3
jp
repz
adc
cs
out
popf
mov
sub
shll
sub
sbb
push
test
push
incb
lret
addr16
pavgb
flds
adc
dec
xor
push
pop
mov
and
push
and
or
cmp
adc
pop
bnd
insb
pop
lret
leave
insb
mov
cltd
jno
mov
jg
int
aad
sub
std
push
leave
sti
mov
xchg
mov
jge
cmp
jmp
jl
lcall
out
scas
pop
sbb
push
hlt
cmp
jge
insb
cmpb
push
stos
repz
ss
xor
stos
int3
mov
dec
pop
test
adc
addr16
adc
fists
lret
push
ret
jge
mov
cmp
mov
push
mov
or
cltd
shlb
sub
and
push
mov
mov
arpl
cmpsl
movsl
adc
cmp
icebp
and
pusha
cmp
or
cwtl
mov
inc
jle
lret
test
cmp
fwait
jno
dec
inc
jge
pop
sar
add
out
pusha
movsb
cmp
pop
and
imulb
fiaddl
inc
cmpb
jno
mov
push
sbb
call
out
outsl
stc
int
vpackssdw
jbe
xchg
enter
pop
inc
xor
repnz
inc
test
cli
cmp
mov
insb
rcrb
mov
outsb
jge
mov
inc
ljmp
add
scas
jno
xor
repz
fmuls
push
rcrl
jecxz
out
sub
aad
leave
xchg
outsb
add
ljmp
cmpsl
push
mov
xlat
push
mov
and
xchg
pushf
mov
jo
jo
enter
es
sbb
mov
arpl
in
lock
mov
pop
dec
jge
xor
cmc
dec
out
in
sbb
rolb
and
jb
and
mov
and
aam
mov
pop
adc
scas
mov
push
repz
ljmp
gs
or
hlt
push
mov
xor
popa
lds
inc
outsl
sahf
outsb
or
jmp
mov
mov
xchg
mov
inc
add
pop
sbb
fstl
cmc
sarl
fbstp
lock
mov
mov
pusha
clc
push
shlb
mov
xchg
cwtl
scas
mov
inc
jne
inc
nop
fdiv
loopne
mov
cmp
mov
cmp
dec
adc
mov
push
dec
xor
push
insl
or
fnstsw
inc
daa
stos
wrmsr
sub
setg
movsb
mov
sub
pop
addb
stc
cli
stos
lcall
push
xor
imulb
mov
inc
inc
insb
jmp
gs
mov
sbbb
push
out
jg
jg
jbe
mov
mov
stc
jle
push
out
shrl
aas
ds
pop
xor
mov
pop
push
pop
pushf
adc
push
xor
jns
mov
repz
jl
add
sbbb
sub
pop
bound
in
divl
dec
push
movsb
xchg
add
rcrb
jb
xor
les
jmp
adc
loopne
inc
es
jb
shl
dec
pushf
adc
mov
aad
pusha
add
cmp
jg
repz
clc
adcl
jae
mov
aad
and
inc
lock
shll
testb
in
adc
ret
ss
data16
mov
decl
ret
loopne
xchg
or
aad
inc
sbb
sub
xchg
jle
loop
popf
add
mov
mov
aaa
stos
in
adc
cmpsb
jle
lahf
push
das
dec
das
iret
insb
in
orb
scas
addr16
pop
pop
divb
xchg
pop
in
insb
lcall
add
mov
pop
xor
push
xor
cmp
aam
test
mov
movsl
push
mov
js
jecxz
aam
movsl
mov
mov
outsl
pop
fidivs
inc
inc
dec
and
pop
pop
idiv
add
std
in
push
fiadds
test
inc
jo
mov
imul
inc
data16
mov
fstl
sub
adc
and
out
mov
sub
sbb
dec
push
xor
sbb
iret
jnp
repz
xchg
lret
iret
fldcw
sub
mov
cwtl
int3
cli
adc
jne
lock
push
sub
inc
sahf
pop
fwait
dec
adc
jbe
lods
push
xchg
xchg
add
sar
mov
fdivrl
xor
mov
out
cmp
sub
gs
inc
cmp
loopne
jns
das
fcomi
sahf
shll
orb
sub
jecxz
daa
mov
pop
cli
into
fildl
push
add
pop
into
xorl
rolb
mov
and
sbb
and
dec
shr
shll
xchg
mov
lods
xchg
sub
cmp
cmp
test
push
push
dec
jle
movsb
jne
sbb
mov
xor
and
pop
xchg
push
mov
xor
in
enter
dec
ds
cmp
testl
cmpsb
push
or
mov
jle
pop
xchg
push
sbb
out
xchg
movsb
shl
dec
jo
pop
dec
sub
pop
jp
fdivs
js
jge
xchg
push
iret
or
push
cwtl
fabs
mov
push
test
mov
in
rorl
push
jnp
add
incl
cltd
ds
dec
fcmovnb
add
push
push
jmp
ljmp
mov
mov
je
cmp
pop
cs
xchg
movsl
sub
mov
pop
fwait
lea
pushf
push
lret
sti
mov
cmpsl
icebp
lret
inc
in
lret
cltd
lods
mov
mov
fwait
movzbl
jl
jge
in
and
hlt
out
adc
cvtps2pi
pop
pop
xchg
or
add
inc
out
push
jae
enter
xor
fisubs
mov
loop
and
in
mov
jne
mov
push
mov
lret
inc
mov
mov
add
push
xor
imul
nop
dec
popa
inc
scas
sub
mov
xchg
rolb
adc
jnp
or
vmovups
xor
int
and
xchg
jbe
and
test
ffreep
cmpsb
add
negl
xchg
out
jns
arpl
mov
dec
scas
fsubl
mov
and
rcrb
popa
dec
stc
sarb
in
out
sbb
push
outsl
adc
out
aad
xchg
dec
inc
pop
sub
test
mov
jnp
pusha
out
aas
insb
xlat
cmp
mov
sub
loopne
xor
cmpsl
rcrb
fistps
mov
dec
add
mov
sbb
dec
fbstp
adc
jb
repnz
aam
cmp
sub
sub
mov
cli
jne
pop
jp
lds
js
and
xor
xchg
cmc
clc
cmp
adc
cmp
pop
adc
adc
lret
outsl
inc
dec
xlat
shll
outsb
jb
aad
pop
push
dec
adc
loope
lods
jne
add
lods
insb
add
pop
pop
jmp
rclb
and
add
outsl
cmp
mov
and
pusha
repz
shlb
push
mov
or
jecxz
mov
lahf
enter
fcomi
sbb
mov
pushf
jmp
push
cmp
rcrb
pop
fstps
lcall
pop
or
orb
mov
es
sahf
or
ret
mov
stc
pushf
jb
mov
ss
popf
pop
cmp
jns
adc
ret
push
decb
sbb
stos
rcl
adc
jl
pop
or
mov
popf
outsb
sub
xor
cmpsl
mov
and
imul
fstpl
and
add
dec
into
mov
jp
lret
shl
push
out
mov
icebp
in
pop
xchg
icebp
push
outsl
and
test
clc
clc
in
jge
push
loopne
fdivrl
jbe
sti
sub
pop
cmc
jnp
daa
lret
jge
leave
ss
in
adc
pop
dec
stc
roll
or
mov
stos
ja
aaa
fldl
fcoml
fisttps
inc
dec
or
add
loopne
loop
mov
call
iret
test
or
inc
fbld
push
push
divb
and
cltd
rcr
xor
sbb
fwait
jae
movsl
xor
out
pusha
scas
adc
push
out
stos
fidivl
pop
sub
xchg
adc
mov
pop
sub
mov
popa
adc
adc
jne
or
lods
xchg
in
fwait
scas
xchg
in
in
cmp
sbb
jnp
mov
dec
in
insl
or
sbb
sub
aas
or
pop
iret
add
imul
mov
mov
ficompl
out
shlb
fiaddl
out
fstpt
dec
pop
dec
test
pop
mov
sahf
adc
aaa
push
jge
jg
leave
jle
jge
push
sahf
inc
jne
mov
lods
addr16
vcvttss2si
mov
xchg
sbb
xchg
in
fadd
mov
jg
jne
ja
jp
jnp
aaa
mov
sbb
xor
fs
andb
fwait
or
addl
mov
mov
pop
mov
insl
mov
cmc
xchg
testl
mov
std
mov
jmp
jo
shl
jb
call
inc
dec
sbb
test
imul
add
out
ljmp
adc
call
xchg
lahf
and
fistpl
mov
jae
repz
sub
jp
or
iret
rclb
cmp
stc
mov
test
sub
pushf
ss
xchg
cmc
cmp
rcr
cli
mov
mov
push
mov
lock
cmp
push
xchg
test
loope
xchg
mov
jp
push
sub
shl
lret
dec
loop
into
out
inc
stos
aad
psubq
loope
mov
sbb
nop
mov
xor
inc
repnz
sub
mov
mov
dec
fs
in
mov
xlat
testl
cmp
cld
fdivp
popf
and
outsb
xor
aam
sahf
stc
inc
icebp
jmp
lods
xchg
cltd
pop
add
adc
xchg
int3
jbe
loop
test
and
xor
mov
in
fldenv
loop
data16
jno
outsl
xchg
enter
mov
mov
sahf
adc
cmpsl
ret
adc
pop
cld
cli
push
mov
popf
test
dec
int
enter
and
ret
imul
cmp
xor
mov
aad
mov
push
xchg
mov
mov
mov
jp
adc
out
insb
cwtl
ds
xchg
dec
fisubrl
cmp
arpl
add
cli
stos
and
dec
insl
and
pop
push
inc
adc
cmpsl
pop
movsb
out
ret
push
clc
fisubs
js
adc
test
imul
add
xchg
jb
cmp
inc
icebp
cmp
xchg
or
dec
or
dec
and
lahf
inc
jecxz
xor
jne
add
ja
cltd
ret
ljmp
lods
outsl
xlat
jne
mov
adc
inc
push
cmp
roll
nop
add
das
inc
and
lds
push
rcll
push
jecxz
jl
add
sub
mov
lods
in
pusha
lret
dec
mov
add
push
sbb
insb
or
dec
arpl
or
pusha
xor
lcall
pop
enter
ret
outsb
mov
dec
mov
lods
xchg
jb
cvtps2pi
xor
cld
mov
and
aad
adc
dec
inc
jo
adc
jo
ret
and
call
icebp
enter
jl
or
xchg
mov
icebp
outsb
mov
pop
and
fdivr
lret
xchg
std
ljmp
pop
pusha
mov
jne
cmp
stos
mov
fsubs
int3
rclb
sub
xor
pop
mov
test
xchg
das
imul
outsb
and
test
push
xor
adc
inc
xor
lods
fmull
push
mov
sbb
add
mov
pop
jl
jecxz,pt
mov
fisubl
ret
dec
dec
addr16
in
dec
cmovg
aaa
adc
xor
ss
mov
cmpb
shrb
pusha
xorl
xchg
push
cmp
icebp
jp
xchg
add
fistps
mov
mov
push
pop
sub
cvtps2pd
out
and
adc
add
mov
lret
lds
repnz
jno
pop
mov
sbb
inc
sbb
rol
and
inc
mov
gs
mov
xlat
divl
pop
xor
cmp
add
rcll
lahf
cwtl
inc
xor
std
push
pop
sub
insl
inc
fwait
cs
lret
push
sarl
jns
mov
shll
dec
mov
aaa
fsubp
add
aad
jbe
mov
hlt
mov
arpl
fistps
xor
sbbl
add
cmp
loopne
notl
pusha
adc
xor
cmpsl
call
xchg
lods
pop
add
jne
or
mov
add
hlt
cld
mov
pop
inc
lcall
jp
imul
and
adcb
sbbb
rclb
imul
shlb
mov
push
xchg
hlt
ret
popa
lods
fldt
in
out
and
mov
xchg
inc
jge
cmovno
cwtl
nop
mov
xchg
sahf
pop
fistps
jb
pop
daa
xchg
jp
jmp
ret
lret
jmp
sbb
mov
repnz
push
and
dec
dec
add
mov
icebp
and
adc
fsubl
add
xchg
shr
std
or
mov
push
setl
jmp
fwait
sbbb
out
xchg
or
cmp
mov
ljmp
das
out
cmp
mov
repnz
subb
fdivp
jg
stos
stos
inc
jp
mov
mov
pop
mov
sahf
mov
aas
jno
and
mov
mov
xchg
shl
inc
pop
call
sub
jmp
push
std
pop
ret
mov
mov
push
inc
and
lods
cli
mov
pusha
mov
pop
mov
adc
inc
jnp
xchg
sub
jmp
xchg
ds
int
lods
mov
ss
xor
xchg
jecxz
sub
clc
push
xor
ss
repnz
out
sarb
dec
xlat
jne
roll
jne
enter
or
push
loopne
addb
mov
add
push
out
jmp
mov
jge
add
data16
mov
rorl
fs
adc
les
fcomps
aaa
sub
pop
repnz
iret
jb
mov
push
int
push
pop
cltd
shll
in
lret
lock
fsubl
lock
mov
cmc
cmp
or
cmp
iret
mov
mov
xchg
sub
mul
adc
popa
add
pop
mov
xor
inc
jmp
sbb
enter
cli
lea
sti
sti
imul
popf
movsl
jb
into
fisttpl
pop
test
int3
loopne
pop
adc
sub
and
sbb
push
out
les
scas
fisubrl
and
mov
mov
pop
lret
mov
xchg
jge
in
pushf
mov
push
mov
sbb
jno
gs
in
pop
aad
push
mov
mov
mov
adc
mov
ds
pop
add
aad
ret
mov
cwtl
mov
and
push
mov
sahf
fs
sub
aaa
popf
xor
dec
mov
push
sub
adc
cld
mov
dec
dec
add
and
mov
cmpsb
or
inc
decb
jns
mov
sbb
sub
loopne
icebp
mov
mov
inc
xlat
insb
pop
cwtl
pushf
ja
test
rcrl
add
dec
pushf
xor
aad
movsb
data16
inc
cltd
rolb
cmp
out
pop
mov
cmp
jl
mov
ljmp
sub
insl
in
mov
mov
sbb
iret
pop
cwtl
push
fnstcw
lret
bound
or
fisubs
je
cld
in
cwtl
hlt
xchg
shll
mov
test
jmp
jp
mov
jp
ljmp
jmp
and
jb
jmp
xor
lret
pop
ss
pop
loopew
enter
enter
sub
cmc
out
ret
mov
push
stos
mov
roll
pop
cmp
rol
not
mov
fs
leave
adc
stc
leave
push
or
and
iret
outsl
push
push
fisubl
adc
dec
and
frstor
mov
jge
add
shlb
push
outsb
data16
lods
lahf
movsb
jne
push
push
push
outsb
and
rorl
cli
adc
sub
push
rorb
in
push
cli
mov
adc
xor
jbe
stc
push
lret
jp
pushf
and
sub
mov
icebp
mov
cwtl
xchg
jbe
push
xchg
sbb
and
dec
sahf
xchg
das
mov
shlb
sub
push
jbe
and
mov
arpl
fs
cmp
mov
add
ds
xchg
shlb
sub
or
inc
je
xchg
pop
leave
xchg
popa
pop
xor
fsubl
push
mov
dec
dec
push
lods
and
imul
bound
sbb
sahf
lea
xorl
leave
inc
add
in
xorb
cmp
sub
add
dec
cld
lods
inc
jmp
jae
mov
xorl
repnz
roll
popa
loopne
mull
and
add
test
cli
and
xor
divl
sbb
ds
lea
aad
mov
mov
mov
lcall
lods
pop
call
xchg
adc
testb
notb
cmp
mov
xor
cmp
dec
dec
and
dec
addr16
imulb
xor
or
jnp
pop
and
nop
cmpsl
sbb
mov
cmp
test
outsb
push
lret
fisttps
mov
add
jmp
push
jg
fimuls
testl
loope
pop
xlat
lret
das
mov
jp
repnz
fs
dec
dec
adc
jno
jecxz
outsb
arpl
push
mov
imul
rep
cltd
cli
push
add
cmc
mov
mov
mov
jg
ret
test
stos
jge
lods
cmp
mov
pop
orb
out
add
push
push
or
and
hlt
mov
sub
hlt
ret
js
pushf
pop
dec
mov
int3
mov
inc
or
xor
nop
xor
outsl
jbe
mov
addr16
data16
lods
mov
mov
mov
or
loope
and
cltd
mov
mov
push
lds
enter
push
hlt
dec
hlt
mov
xchg
cmp
js
jo
repz
cmp
outsb
push
addl
insl
in
into
shrb
push
mov
mov
int
jp
into
lahf
loop,pt
mov
jle
out
int
lds
repnz
scas
notb
or
mov
jae
cmpsl
loop
lock
push
out
imul
aad
data16
sbb
fadds
dec
push
pop
mov
mov
fmuls
adc
push
sbb
in
cmc
sbb
incl
sub
jnp
aas
fidivrs
add
adc
or
mov
push
neg
insl
add
aaa
and
mov
push
imul
xorl
nop
movsl
xlat
sub
pop
fidivl
int
addr16
fstpt
dec
repnz
mov
mov
testb
out
push
sbb
sub
insb
push
fld
ficoml
lret
jne
cs
cs
mov
std
mov
mov
scas
mov
sub
outsb
fwait
xchg
cmp
lea
push
shlb
shll
and
add
mov
dec
dec
or
jo
scas
dec
mov
hlt
add
inc
jb
fimull
cwtl
sarb
xchg
xor
or
fwait
nop
add
push
stc
inc
cmp
jb
jb
xor
mov
iret
or
shll
aaa
les
push
std
cmp
or
add
and
std
lcall
mov
sbb
icebp
adc
aam
cmp
sbb
roll
inc
mov
pop
pop
lcall
adc
ljmp
or
sub
popf
mov
lea
jns
cmp
stos
fs
rcll
mov
jmp
or
jmp
pop
push
cmp
xorb
mov
mov
xchg
out
xchg
xor
adcb
xor
outsb
pop
imul
rorl
fcoms
inc
addl
inc
out
dec
sbb
xchg
add
xchg
sbb
addr16
sub
xor
mov
inc
jb
pop
xlat
xor
mov
dec
mov
sbb
push
dec
push
das
dec
add
cmp
xchg
mov
mov
fisttpll
inc
and
in
test
mov
push
dec
sbb
cltd
ret
push
ljmp
outsb
dec
repz
and
loop
pop
push
jo
mov
xlat
jns
push
rol
jbe
dec
xchg
orb
mov
push
divl
jg
fidivrl
lds
push
in
xchg
mov
and
movsl
xor
mov
mov
xchg
mov
and
insl
xchg
out
sub
and
sbb
lcall
sub
xchg
lret
scas
rolb
pusha
shlb
loopne
lods
dec
mov
jo
fsubs
negb
gs
daa
push
pop
add
xlat
rolb
pop
loop
ljmp
push
ljmp
cmp
out
pop
and
inc
xor
push
out
cmp
sub
pop
repnz
pusha
jne
outsb
std
mov
aam
pop
out
push
cmp
xchg
cmp
push
fcomps
rcr
fld1
cld
mov
es
test
testb
sbb
sbb
jp
xchg
iret
lret
pusha
mov
adcb
sbb
shrl
addl
lahf
fmull
push
adc
cwtl
jbe
das
cmpl
cwtl
incb
aas
add
and
in
add
insb
jecxz
stos
jae
fnstcw
adc
sub
dec
xchg
shll
decb
mov
je
mov
scas
fcmovnb
add
jecxz
stos
cltd
ficoms
sbb
adc
or
and
adc
pop
or
lahf
sar
and
ja
cmp
fdivl
stos
adc
add
push
mov
push
inc
push
popa
lret
fisubs
sti
push
cli
push
sbb
pop
push
mov
cli
dec
mov
mov
daa
lods
sub
inc
push
push
leave
push
dec
push
and
ficoms
mov
shl
pushf
push
cwtl
jnp
mov
adc
and
ret
sub
xchg
movsb
mov
subb
cmp
enter
mov
xchg
inc
loope
cmp
mov
and
loope
pinsrw
dec
mov
ret
jp
adc
lods
cmc
fs
and
inc
push
adc
dec
das
loopne
mov
and
push
movsl
jp
shll
cmpl
sbb
aas
jne
cmp
sahf
roll
add
lea
push
out
jecxz
out
shr
sub
mov
sarb
daa
das
mov
fwait
leave
mov
neg
outsl
aaa
pop
jle
cwtl
hlt
inc
mov
pop
mov
sbbl
jnp
sbb
sbb
push
ret
shlb
jmp
xor
push
jno
sub
sbb
cmp
inc
inc
sbb
loop
pop
dec
add
das
inc
stos
hlt
ljmp
ret
inc
popa
jl
jp
sbb
mov
movl
aam
mov
mov
imul
fisttps
cmp
push
sub
push
daa
ja
movsl
sub
les
stos
frstor
in
inc
sbb
mov
andl
sti
fldt
jg
aam
xchg
push
xor
fwait
jg
out
dec
test
xchg
iret
mov
jp
sbb
popa
adc
lret
in
push
dec
sbb
fistl
add
dec
mov
shlb
adc
jle
sahf
inc
dec
cmp
mov
aam
cmc
push
data16
clc
clc
jns
cmpsb
out
inc
adc
mov
rcl
aaa
dec
xchg
dec
jno
ficompl
or
jmp
adc
pop
gs
mov
add
rcll
andb
fisubrs
push
mov
cld
mov
notb
jno
int3
rcll
inc
stc
pop
test
jmp
into
cwtl
dec
cwtl
adc
push
insl
shll
enter
jno
mov
in
hlt
in
dec
mov
jle
inc
inc
movsb
mov
inc
lods
dec
ret
pop
xchg
daa
ljmp
xor
add
fimuls
lret
mov
movsb
clc
sbb
insl
out
mov
addr16
cltd
sarb
xchg
popa
std
sbb
sub
pop
movsb
imul
jl
sbb
fldcw
and
adc
push
iret
popa
ljmp
xor
daa
add
mov
pop
cmc
dec
ret
in
mov
popf
dec
or
xchg
dec
and
lret
setge
das
dec
xor
mov
enter
mov
iret
push
mov
jns
jnp
out
insl
dec
adc
outsl
push
cmc
inc
les
mov
sbbl
ljmp
adc
xor
add
dec
xchg
ret
iret
xchg
pop
push
or
xchg
xor
push
scas
rolb
sub
aaa
dec
lea
mov
cmp
fsubrs
xchg
cltd
xchg
scas
ret
or
enter
pop
leave
mov
pop
aaa
jp
sub
jecxz
cmp
xor
loop
shlb
jne
ret
ret
mov
mov
out
mov
mov
pop
cmp
out
jg
inc
shrl
mov
inc
pop
shl
or
je
popf
aas
xor
jmp
cmpsl
jne
cmpsb
mov
fucomi
push
mov
sbb
jmp
lock
sub
push
jo
dec
movsb
aas
fsubrs
adc
dec
sbb
pop
iret
mov
movsb
push
fsts
pop
nop
xchg
inc
or
movsl
and
xor
and
stos
mov
jno
dec
push
shll
inc
fstl
outsl
ss
push
and
sbb
dec
aaa
out
sub
rolw
in
mov
mov
movsl
ficompl
daa
in
xor
add
les
adc
xor
push
pop
addr16
stos
fsts
mov
jbe
and
test
mov
jae
add
xor
cvtdq2ps
mov
jp
push
dec
sbb
stos
negl
push
mov
mov
insl
dec
movsb
xor
xchg
add
xor
in
testl
push
xor
test
outsb
test
clc
fcmovnb
stc
mov
mov
ja
mov
std
orl
out
lahf
mov
cmp
jecxz
lahf
jno
jle
ret
clc
std
movsb
es
mov
xchg
lock
es
mov
bound
lret
add
xchg
xor
js
jbe
xchg
mov
or
scas
inc
iret
gs
and
xchg
xor
push
push
mov
test
pop
sarb
dec
mov
xchg
jb
lahf
dec
cmp
mov
popf
lret
inc
fistpl
ds
mov
fs
pushf
jg
jo
sahf
outsb
ret
outsl
xchg
or
or
call
dec
icebp
rorl
fiadds
popa
sbb
pop
jne
inc
jbe
push
add
jp
cmp
inc
sarb
xor
in
sbb
pop
xchg
gs
cmp
xor
add
jg
jnp
mov
mov
mov
inc
adc
jmp
mov
in
xchg
imul
test
push
faddl
aam
ret
mov
fnstcw
push
jb
ffreep
sahf
push
cmp
cmp
pusha
rolb
mov
adc
cmc
mov
pop
fwait
in
mov
xchg
repnz
jnp
sbb
mov
push
idivl
daa
insb
cli
dec
in
mov
fdivs
das
add
cli
mov
jge
call
mov
xchg
and
xchg
push
cld
jecxz
fnsave
shrl
sbb
jnp
jb
add
and
pop
jno
mov
js
lds
pop
cwtl
lods
jo,pn
scas
and
mov
sarl
fisubrl
je
pushf
orl
mov
mov
movsl
cld
sub
jl
rclb
rorb
xchg
mov
call
push
hlt
xchg
aaa
jbe
and
cltd
cmp
cmp
stos
sub
sbb
pop
push
aas
shll
ret
mov
sub
js
push
psubusw
add
jle
push
push
in
push
popf
fldenv
enter
or
iret
rcrb
scas
fldt
dec
das
xor
xor
test
inc
sbb
ss
addr16
and
pop
push
sbb
dec
fdivrs
negb
sbb
out
mov
pop
mov
inc
mov
jnp
mov
push
xor
push
sub
push
lods
dec
mov
and
xor
mov
sahf
mov
les
push
pusha
popa
and
and
fnop
mov
lcall
imul
outsl
inc
mov
das
or
jmp
dec
push
inc
jmp
add
ljmp
and
xor
js
jg
xchg
sbb
call
into
cmp
int
pushf
cmc
sbb
shll
mov
imul
sub
lcall
mov
inc
shrb
out
aam
js
shl
test
push
xor
imul
jns
shll
and
lcall
fldt
ljmp
loopne
andl
outsb
aam
or
iret
mov
fsts
mov
test
ret
and
xchg
fstpl
std
loope
xor
mov
clc
in
or
fsubrl
pop
sbb
dec
ret
stc
mov
clc
push
sbb
mov
stc
cmp
and
push
icebp
xchg
nop
frstor
leave
inc
sub
jno
jo
in
aaa
repz
cmp
std
call
xchg
mov
int3
rolb
ja
out
sbb
jbe
rolb
scas
push
mov
pop
pushf
jbe
sbb
adcb
sub
mov
pop
shl
jg
add
push
fstl
pop
add
xor
mov
cli
jp
iret
dec
outsl
jmp
xor
lock
mov
dec
repnz
push
jnp
sbb
xchg
sbb
aad
sbb
fiadds
fwait
mov
push
jle
push
ljmp
cmpsl
fcoml
insl
mov
hlt
xor
inc
push
ret
fstps
rcll
mov
call
mov
shll
mov
cmp
mov
jb
jne
mov
and
or
cmp
std
sbb
lods
out
xor
jl
and
rcrl
lahf
aaa
push
data16
test
sub
xchg
pusha
mov
xchg
aas
rorl
and
cmpsl
pop
inc
mov
or
int3
popl
jle
cmp
icebp
inc
sub
js
mov
xor
push
xchg
loopne
lock
sbb
or
int3
movsb
dec
mov
jecxz
lods
pop
mov
xchg
clc
xchg
or
imul
cli
or
les
ret
cmp
dec
dec
xchg
les
lret
dec
mov
cmpsb
adc
incl
cs
add
push
aas
xor
test
sub
inc
loop
xchg
dec
stc
dec
aam
cli
arpl
mov
mov
stos
cmp
dec
xor
and
nop
clc
testl
push
insl
or
test
mov
fsubs
fwait
test
push
scas
cmpsb
add
adc
xlat
inc
mov
jns
cltd
arpl
jge
ds
mov
pop
lahf
fstl
mov
mov
sub
jae
dec
inc
loopne
fildl
or
arpl
in
inc
in
test
cmp
add
cmp
outsl
add
mov
enter
adc
or
jb
jb
or
js
ficompl
call
push
xchg
add
push
aam
add
xlat
push
add
cmp
pop
mov
cltd
mov
adc
mov
adc
and
test
inc
nop
sti
and
repz
mov
adc
pop
and
adc
adc
add
in
aam
cli
mov
andb
mov
dec
loop
xchg
lcall
cwtl
je
imul
les
cs
lret
movsb
lahf
mov
or
repnz
lds
mov
cwtl
cmp
sub
mov
js
imul
and
scas
js
sahf
mov
inc
add
int
mov
fwait
outsb
bnd
add
sub
sbb
faddl
lock
mov
push
cmp
out
js
sbb
in
xor
outsb
enter
pop
scas
insb
fwait
rcpps
jecxz
or
pop
xor
or
fwait
inc
dec
mov
fisubl
shll
pusha
fistl
jp
mov
mov
popf
jne
xchg
push
in
push
cmpsb
es
cli
sbb
inc
add
and
out
add
shll
push
stos
call
xchg
cmp
cmp
pop
out
cs
mov
mov
push
ja
xchg
dec
sub
push
cmp
cmp
sub
xor
mov
mov
jae
cmp
pop
xchg
pop
ds
jns
add
mov
adc
stos
jl
jb
int
xor
outsb
icebp
mov
iret
movsb
int3
xchg
imul
int
push
adc
or
bound
repz
jnp
cmp
ss
lds
out
adc
imul
out
push
xchg
jecxz
es
fsub
js
cmp
dec
mov
and
sub
push
test
sub
xchg
fsubrs
sarb
lret
mov
shrb
xchg
jg
into
rcl
cwtl
outsb
push
mov
nop
shrb
mov
add
fdivrl
mov
or
or
mov
sbb
lock
cs
cmp
fs
movq
popf
pop
loop
in
sub
faddp
mov
gs
adc
add
arpl
das
xchg
test
lock
lret
in
xchg
mov
mov
sub
cmpsl
test
or
dec
push
pop
pop
gs
sub
xchg
out
ja
add
mov
outsl
in
movsl
mov
fstps
andb
mov
inc
and
fcmovbe
ja
leave
mov
addr16
jl
sub
mov
xchg
xchg
inc
adc
rolb
mov
dec
aad
mov
add
test
jge
mov
sub
dec
mov
inc
sbb
or
fwait
ljmp
and
push
jnp
out
pop
push
jne
arpl
in
cmp
cmp
push
mov
pop
ds
xor
addr16
test
out
sub
insl
int3
or
or
test
inc
mov
dec
jge
cs
push
lcall
arpl
js
sub
xor
jl
sbb
push
je
push
sub
leave
mov
jmp
xchg
and
xchg
jnp
mov
leave
aam
pop
adc
dec
jp
and
pminub
jns
int
cmp
pusha
test
jl
xchg
test
or
add
jb
xchg
mov
icebp
outsl
or
xchg
lods
pop
xlat
sti
sahf
mov
int
inc
pop
sbb
mov
test
stc
xchg
pop
ret
push
or
push
dec
fbld
mov
sub
jae
push
mov
add
jbe
addb
and
scas
out
or
iret
lret
rorl
mov
test
imul
cmp
sbb
scas
hlt
sahf
xor
fildl
xor
push
mov
xor
fisubrl
add
push
enter
mov
jae
mov
jp
out
rorb
test
dec
pushf
fstpt
jmp
lea
loope
cli
lods
mov
sbb
lret
push
jne
loope
dec
push
arpl
rcll
mov
cmpsl
les
xor
or
lock
loopne
add
sbb
js
mov
pop
push
add
jp
loopne
jb
cmp
lds
push
out
shrb
inc
jbe
dec
xchg
fimull
jp
and
imul
and
cmp
sub
mov
fwait
testl
call
mov
and
mov
mov
push
jge
lods
sbb
rorl
imul
fildl
pop
or
and
mov
dec
leave
xchg
test
imul
sbb
int
cltd
jmp
adcl
jb
jb
jns
repz
lock
fcmove
pushf
cmpb
into
and
or
mov
adc
mov
aas
mov
leave
adc
xchg
mov
call
lret
jl
int3
pop
mov
pop
cmpsb
add
mov
sub
popf
xchg
shl
mov
cltd
and
arpl
pop
mov
mov
dec
pop
fidivrl
push
sub
fsubrl
dec
mov
out
in
daa
shll
jp
sub
sub
or
aaa
fstpl
mov
jbe
jecxz
inc
push
ret
pop
in
sarb
test
sbb
mov
xchg
es
rcrb
lcall
jbe
mov
cmpsb
shr
cmpsb
dec
jmp
adcb
mov
push
mov
mov
mov
cs
andl
clc
jo
push
stc
pop
scas
das
push
insl
adc
outsb
cmp
xchg
popa
or
sbb
mov
sub
leave
inc
jp
xor
inc
add
out
testl
stos
dec
jecxz
adc
outsl
outsl
xor
shrb
pop
cmp
mov
xlat
sub
testb
enter
stc
adc
inc
out
mov
cmpsb
jg
enter
sahf
mov
dec
in
xchg
mov
out
mov
push
pop
lahf
jo
jnp
in
in
and
lahf
test
out
nop
mov
push
xchg
mov
xchg
hlt
xchg
xchg
mov
in
loopne
fucomip
nop
xchg
je
fs
jp
lret
repz
in
jmp
adc
hlt
sti
les
jle
jo
push
rorl
ljmp
into
cmp
cli
ficoml
add
fcoml
jmp
adc
jno
bound
inc
push
pusha
cwtl
outsl
xchg
shl
mov
pop
cmpsb
dec
mov
push
popf
xchg
push
in
inc
lret
xor
mul
push
repz
call
push
fldt
sahf
cmpsl
jnp
js
xor
out
and
xor
xchg
push
pop
mov
xor
sti
and
inc
or
mov
mov
pop
lea
mov
sbb
xchg
fidivl
das
std
cmc
sub
rcrl
fdivrl
jo
fisttps
sbb
nop
xor
aaa
je
sbb
arpl
and
mov
push
dec
and
mov
bound
scas
jne
cmp
sbb
fisubl
popf
cmp
mulb
xor
push
aas
dec
push
adc
pop
fs
dec
ficoml
push
call
cmp
sub
pop
and
mov
dec
push
add
out
orl
xchg
subl
xor
sbb
adc
push
add
mov
mov
fcoml
or
push
sahf
add
or
sti
ret
and
rorb
mov
ss
add
cmc
lret
xorl
in
pop
mov
fcoml
imul
pop
scas
mov
push
mov
out
sahf
inc
add
clc
dec
loop
xlat
fistl
sbbl
mov
push
inc
in
leave
adc
int3
mov
adc
xor
jl
test
xchg
notb
fnstsw
sar
js
fimull
je
int
pop
adc
repz
pop
orb
cld
mov
push
xor
push
scas
repz
test
inc
in
lods
loope
outsb
sub
mov
xlat
push
add
mov
ret
xor
test
sbbb
xor
xchg
jbe
dec
gs
arpl
mov
xchg
inc
es
pop
call
lret
jae
insl
lea
mov
or
push
sbb
cmpsl
push
inc
rol
mov
fsubrs
inc
fwait
mov
jne
and
mov
pop
dec
jg
cmc
call
mov
into
pop
xchg
dec
pop
das
outsb
dec
sbb
sub
jecxz
aam
xchg
stos
test
pop
out
xlat
popa
mov
and
sub
dec
xlat
mov
dec
push
lea
cmpsb
ret
add
pop
sarl
xor
mov
mov
inc
pop
xorl
cmpsb
lret
fbld
clc
push
mov
lods
int3
or
xchg
adc
lret
xchg
pop
stc
dec
sbb
dec
and
sub
or
push
jp
pop
inc
iret
js
lea
pop
fldl
jge
subl
or
xor
mov
mov
jp
std
sbb
das
xlat
lret
notb
mov
sbb
aaa
xchg
repz
shrl
inc
faddl
repz
out
mov
or
ss
pop
lods
fmulp
ficompl
loopne
pop
std
cwtl
fcoms
xchg
xchg
xor
sbb
pop
daa
out
dec
xchg
into
sahf
add
xchg
cmp
cli
test
sub
repnz
mov
je
stos
add
or
sarb
mov
cli
mov
stos
mov
fdivl
cmp
test
dec
test
arpl
and
fwait
lock
lods
fcoml
xor
or
mov
mov
xlat
adc
gs
add
sbb
mov
mov
es
mov
pop
es
xchg
pop
scas
xor
nop
and
adc
mov
cmpsl
divb
test
mov
out
pop
ss
out
in
pop
ret
jmp
in
sub
sbb
xor
add
mov
decl
mov
xlat
jmp
cmpsb
xchg
xor
das
sbb
or
rolb
nop
xchg
out
jb
loop
jecxz
aam
outsl
adc
fdivl
cli
test
mov
cmpsb
sbb
pop
push
das
pop
dec
push
fwait
idivl
mov
or
sbb
aad
jg
sbb
hlt
xlat
push
xchg
lea
pushf
cld
negb
mov
nop
incl
or
or
xchg
mov
sub
cmp
inc
stos
mov
mov
out
pop
fdivl
push
scas
pop
mov
insl
sbb
int3
jmp
inc
out
fcomps
or
ja
rclb
ds
inc
movl
inc
and
push
out
xchg
fadds
shrl
cmp
out
push
andl
sbb
adc
xchg
sbb
mov
inc
js
add
data16
jns
arpl
les
inc
pop
push
push
mov
push
mov
inc
xchg
add
popa
mov
cmp
aaa
or
pop
xchg
add
push
cmp
sbb
into
outsl
enter
cwtl
ret
iret
jg
xor
into
sub
inc
test
movsb
sti
rol
inc
adc
sub
nop
lcall
idivb
cmp
loop
mov
mov
push
pop
sub
aam
dec
dec
addr16
in
cli
adc
xchg
cli
repz
outsl
call
mov
add
jp
push
rcr
jno
movsb
aad
jae
shll
push
xor
imul
std
inc
and
cmc
loope
addb
testl
fwait
cmp
mov
sbb
or
stos
idiv
cs
out
dec
or
negl
mov
inc
adc
xor
std
sub
mov
and
jmp
clc
push
adc
mov
pop
and
cltd
mov
ss
mov
pop
xor
aad
fs
popa
out
imul
gs
aam
imul
xchg
into
dec
adc
mov
idiv
sub
jns
push
out
mov
inc
aad
loop
fcomps
fdivrl
dec
dec
flds
int3
adcl
sbb
lahf
scas
sbb
sub
add
sbb
mov
jmp
loopne
enter
jne
adc
cmp
push
mov
add
sub
push
outsb
lods
xlat
inc
inc
jno
and
add
ror
incb
xchg
jg
sbb
sub
xchg
int
into
mov
xor
mov
cli
ret
add
mov
xlat
adc
mov
push
cmp
lods
cmp
jl
xor
pop
scas
aas
push
add
js
loop
jge
insl
dec
sbb
pushf
jns
ret
mov
xchg
push
jp
push
pop
jl
out
jp
adc
xchg
pop
jecxz
push
jno
pop
ret
out
rcll
pop
jg
lock
pop
shl
shrb
cmpsb
mov
pop
inc
mov
int3
xchg
xchg
popa
pop
mov
xor
fs
jae
sbb
sbb
lret
push
rol
push
jnp
stos
loope,pt
xchg
dec
inc
in
fnstcw
mov
bound
icebp
out
loop
call
lret
js
jg
loop
mov
or
xchg
aaa
jmp
inc
jg
add
xchg
outsl
lods
add
in
pop
das
mov
outsb
or
test
cmp
sbb
xchg
fs
aas
inc
cwtl
in
idivl
mov
pop
lcall
jp
xor
mov
mov
mov
cmp
cmpl
sub
jp
leave
imul
add
dec
dec
xlat
xchg
sbb
andb
dec
dec
scas
jge
mov
fcomp
push
pushf
movsl
jo
sahf
fwait
insb
or
jbe
sahf
xor
jae
cmp
jmp
xchg
sbb
pop
fwait
pushf
xchg
roll
cwtl
pop
mov
xchg
or
jno
fs
loop
cmc
lock
and
fiadds
dec
lret
movntq
jmp
idivl
dec
loopne
subb
add
dec
push
xchg
or
or
mov
inc
dec
lcall
mov
fcoms
imul
jno
aas
test
mov
lods
inc
icebp
add
rcr
cmp
shll
push
inc
dec
lock
mov
and
movsb
sbbl
jnp
xchg
xlat
ljmp
outsl
ud1
mov
roll
cmp
ja
mov
jns
sarb
gs
mov
adc
insb
add
push
xor
sub
jecxz
or
cli
add
dec
pand
imul
sub
and
out
fnstsw
adc
insl
jecxz
adc
inc
sbb
lahf
xor
dec
dec
test
mov
jge
popf
and
jge
dec
stc
cmp
scas
les
mov
cltd
cmpsl
sub
sbb
orl
in
outsl
add
cmp
sub
rcll
aad
hlt
test
std
push
ljmp
into
xor
xchg
mov
mov
pop
out
call
dec
std
xchg
scas
imul
dec
sub
jmp
mov
insb
jp
dec
inc
and
adc
inc
xor
sbb
subl
xor
sbb
inc
xchg
or
xchg
divb
imul
rep
repz
gs
or
and
mov
ret
jo
cmp
xlat
xchg
jnp
jle
inc
bnd
fstpl
xor
call
push
and
pop
xchg
lahf
ret
and
bound
add
data16
push
ja
icebp
ret
imul
sub
scas
scas
enter
outsb
ret
test
repz
push
lds
pop
nop
dec
into
adc
adc
ret
and
or
out
adc
ja
js
addl
bts
pop
mov
out
icebp
and
imul
aad
jae
or
sub
shrl
in
lock
pop
flds
inc
fisubrs
mov
and
adc
push
dec
pusha
xchg
shr
pop
mov
and
insl
test
cmp
add
aam
xchg
mov
les
stc
stos
sub
xchg
test
aas
dec
iret
jno
mov
jo
add
dec
addr16
js
idivb
sbb
pop
and
repnz
and
into
ds
stos
sar
lods
add
movsl
mov
pop
sbb
int3
mov
mov
adc
sub
stos
int
mov
scas
or
cmp
sbb
out
pop
frstor
push
lahf
mov
lret
mov
sub
adc
sbb
mov
dec
fldenv
push
jno
lds
lcall
hlt
test
cld
fildll
fstp
pop
insl
stos
sbb
mov
dec
adc
mov
xor
clc
lods
aam
fldenv
movl
stc
add
ja
pop
adc
mov
jb
pop
xchg
shl
add
push
rclb
in
out
data16
jbe
scas
test
mull
xchg
mov
dec
inc
aaa
insl
push
adc
lock
sub
inc
mov
push
adc
fwait
cli
int
add
les
rcrl
out
push
mov
push
sub
adc
aad
loopne
call
push
dec
jecxz
mov
loope
xor
adc
push
aas
cli
fisubl
inc
dec
jbe
or
data16
mov
cmp
andl
xchg
adc
push
add
or
pop
mov
mov
loope
add
lds
out
outsb
stos
add
dec
mov
lret
shrl
mov
stos
xchg
adc
out
dec
leave
xchg
lods
add
mov
mov
xor
mov
pop
fsubs
js
lss
jae
and
ffreep
sbb
xchg
and
loop
loope
incl
sbb
pushf
mov
shrl
int
popf
mov
cld
push
scas
xchg
push
add
insl
sbb
mov
lods
mov
xchg
mov
cmpsl
in
dec
sbb
les
adc
mov
daa
jmpw
mov
out
mov
mov
dec
jmp
pop
movsb
insb
test
mov
shlb
lret
mov
inc
jmp
xor
pushf
fwait
or
sub
mov
xchg
sub
pop
leave
inc
dec
nop
push
mov
sahf
jl
push
inc
dec
scas
hlt
mov
popf
lods
imul
cmc
mov
mov
and
ficoms
push
jae
out
dec
cmc
je
prefetcht1
add
sbb
cmpsl
aam
mov
ret
jl
or
test
aad
jle
dec
out
sahf
stc
jbe
dec
popf
sub
ds
push
shl
inc
fists
pop
stos
ficomps
xor
jo
insb
and
and
sub
jb
push
push
sub
shrl
cmp
mov
add
or
pop
fwait
sti
jo
movsl
lret
fsubl
push
aas
xchg
xor
jl
dec
fldcw
pop
inc
imull
push
ret
mov
inc
fs
fidivrs
or
aaa
adc
testb
rcrb
cmc
icebp
mov
lock
rcrb
jb
outsl
push
and
adc
pop
imul
mov
adc
lcall
add
cmp
dec
jecxz
repz
adc
es
jbe
aad
jb
out
test
dec
push
or
push
pusha
inc
cld
and
adc
shll
jns
lahf
sub
cmpsb
xor
fwait
sbb
inc
leave
fcomip
adc
adc
mov
rorl
outsb
adc
fmuls
xor
mov
arpl
in
repnz
xor
loop
sbb
mov
mov
mov
hlt
lcall
xchg
pop
xchg
jmp
scas
sub
lcall
and
pop
pop
mov
inc
sar
pusha
jno
mov
cltd
push
add
aaa
xchg
jb
and
sub
pop
jmp
shl
cltd
nop
subl
packuswb
push
mov
adc
popa
jno
inc
xor
ljmp
xor
movb
aas
jmp
scas
mov
push
adc
xor
cwtl
jb
jle
test
rorb
sub
movsb
push
ficompl
pop
xor
ss
jmp
sub
nop
jg
rorb
test
mov
mov
add
inc
jge
shll
hlt
out
cmpsb
dec
pop
jae
pop
insl
xchg
cltd
xor
and
xchg
cltd
sub
sbb
je
repz
jns
fucom
ret
shlb
imul
or
clc
xchg
out
adcl
add
loopne
xorb
int3
les
into
je
mov
xlat
dec
int
dec
xor
adc
jmp
add
fcmove
dec
sarb
mov
movsb
cmp
call
mov
push
inc
sti
mov
add
cmp
xchg
jp
in
push
imul
test
add
enter
or
out
push
mov
out
cmp
add
mov
dec
push
ja
in
push
push
xchg
jb
mov
loope
test
mov
ja
lcall
addl
dec
ret
push
mov
push
arpl
jle
fdiv
and
imull
loopne
cmpsl
jae
sti
xor
mov
mov
cmp
pop
decl
stos
jmp
aam
mov
cld
jmp
ljmp
xor
outsl
shrb
push
xchg
jle
fwait
cmc
movd
rol
in
test
xor
adc
pop
fdivrl
shrb
cmp
jno
fdivs
loop
pop
sub
mov
jmp
cli
mov
push
testb
xlat
int3
dec
sub
mov
movsb
cmp
test
rcr
push
dec
cmp
push
mov
mov
push
sbb
lock
pushf
lock
call
popa
aam
dec
and
add
mov
and
xlat
cmc
ljmp
aaa
cmp
fadds
leave
sbb
and
cmpsl
out
mov
vmread
push
in
mov
fistpl
adc
decl
repnz
push
stos
imul
jo
sbbl
cmpsl
cmc
test
mov
enter
loop
je
lds
mov
mov
cmp
ret
mov
jnp
lcall
pop
sbb
repnz
jo
aas
shlb
dec
icebp
bound
sub
in
filds
jl
sub
push
xorl
stos
loopne
pop
iret
aaa
dec
pop
incl
pop
les
insb
push
int
inc
jne
mov
jo
test
xchg
mov
call
mov
fldl
jle
mov
pop
sti
and
test
ret
cltd
in
hlt
add
cltd
out
es
push
pushf
adc
mov
cld
add
mov
cli
mov
xchg
bnd
loope
sarl
adc
cmp
aam
repz
jnp
bound
jge
mov
cli
insl
in
orb
sub
jbe
call
and
fisttpl
push
mov
and
add
mov
movsb
jb
add
xor
cli
fs
pop
cmpsb
les
jmp
dec
enter
cmp
mov
cwtl
test
cld
push
adc
mov
and
mov
jge
sbb
push
or
shrl
into
push
or
push
inc
mov
pusha
mov
jge
popf
mov
test
not
pop
test
push
lock
scas
hlt
sbb
jns
lret
mov
sub
and
js,pt
daa
stos
xor
xor
mov
sub
dec
outsb
or
jge
add
adc
lahf
adc
sahf
cltd
or
dec
stos
pop
inc
arpl
push
in
cmp
cmp
add
loopne
shll
inc
adc
fimull
mov
inc
pop
outsb
fdivrl
int
out
dec
xor
inc
pop
fnsave
dec
adc
shll
pop
fs
lret
test
cld
push
roll
inc
mov
int3
sbb
add
test
xchg
fcoml
jbe
or
je
pop
add
aas
sbb
sub
jns
jl
mov
sbb
imul
lods
xchg
pop
divl
push
push
in
pop
mov
adc
jp
pop
dec
mov
and
enter
pop
xchg
nop
cmp
push
xchg
push
aaa
loope
stos
sbb
fcomps
mov
sbb
out
fwait
scas
mov
push
iret
adc
jecxz
dec
inc
movsl
push
and
xchg
or
movsb
mov
mov
leave
inc
lcall
push
out
or
orl
rorb
repnz
scas
push
inc
pushf
add
pop
lret
dec
lods
into
ret
lret
jbe
push
shlb
aad
fisubrs
daa
mov
cs
mov
xor
cmp
gs
in
cmpsl
test
mov
mov
adc
cld
mov
jmp
push
mov
aaa
push
call
mov
mov
or
lcall
jecxz
mov
hlt
stos
mov
out
sbb
clc
mov
xor
sub
pop
filds
jmp
or
ds
adc
iret
pop
add
popa
das
enter
mov
jns
es
mov
sbb
mov
shll
and
mov
xor
pusha
aad
mov
xchg
stos
jo
shlb
pop
arpl
sbb
jmp
pop
mov
or
inc
or
lock
jp
mov
sub
jge
lret
in
mov
insl
clc
or
xlat
lcall
dec
push
dec
fdivl
or
int3
test
ljmp
aaa
sbb
sub
mov
lret
dec
mov
inc
sub
in
addr16
xchg
add
test
jle
icebp
leave
icebp
dec
mov
fisubl
jb
pushf
ret
fs
mov
dec
aaa
cmp
sub
mov
cmp
jb
push
mov
in
dec
sub
jge
aam
jmp
int
test
adc
fiaddl
mov
sub
sub
xchg
mov
cmp
jns
jnp
inc
dec
ljmp
jle
cmp
or
or
std
pusha
mov
adc
enter
es
imulb
push
mov
rcrb
adc
ljmp
lret
and
sub
int3
push
cmp
idiv
jmp
adc
jl
gs
jmp
push
call
ret
lret
fsqrt
push
test
mov
sbb
adc
push
ja
inc
mov
push
icebp
aaa
push
insb
mov
mov
in
movsb
insb
push
add
lea
jo
aas
out
sub
lahf
dec
jge
xchg
repnz
adc
dec
add
pop
cmp
lods
xor
cmpsl
test
xor
leave
sarl
xchg
mov
lret
jbe
jne
xor
add
cmp
outsl
cld
or
jns
xor
inc
shlb
xlat
jg
movsb
push
mov
popf
jge
pop
mov
mov
aaa
mov
adc
fdivl
add
dec
mov
xor
notb
push
sub
inc
mov
sar
stos
test
or
lret
aaa
shlb
int3
lahf
jo
mov
lret
or
ljmp
xchg
dec
fwait
rorl
insb
jp
mov
jb
mov
out
enter
imul
mov
push
aam
aad
in
stc
cld
cmpl
mov
add
outsb
xor
cmp
out
pop
sub
shrl
push
sub
add
push
out
push
cmp
out
enter
insl
and
push
cwtl
arpl
popa
es
xor
cld
iret
mov
outsb
mov
sub
fwait
inc
lods
scas
frstor
cltd
addr16
and
aas
negb
xor
adc
sbb
mov
sbb
out
push
inc
shlb
push
mov
inc
mov
mov
repz
dec
push
pop
out
dec
out
lahf
sbb
int3
mov
inc
cs
cmpsb
gs
into
fs
in
imul
bound
add
lock
shrb
add
fcoml
fisttpll
imul
dec
addr16
sub
push
inc
push
jno
jecxz
jb
push
test
clc
pop
push
sub
pop
pusha
dec
pop
jnp
out
jno
fnstsw
pusha
mov
mov
mov
or
mov
or
lret
xor
nop
xlat
rcrb
xchg
jo
push
popa
jae
adc
in
test
xchg
pop
sub
add
aad
adcb
test
dec
mov
pop
insb
lea
add
lock
cmp
cmpsl
sahf
or
lea
call
imull
sahf
rcr
add
inc
repz
xchg
xchg
push
add
xor
cld
imul
jl
xchg
cs
sahf
add
es
hlt
cld
pop
fisubrs
cmp
or
sub
push
mov
rorl
in
icebp
jp
cmp
lds
or
xchg
adc
iret
mov
jae,pn
cld
stc
jbe
push
imul
mov
dec
or
sbb
int
fidivl
push
or
jne
cmp
aaa
ja
insl
adc
incb
push
mov
in
sbb
hlt
sub
ss
out
stos
mov
lods
push
dec
xchg
int
adc
cmp
fwait
xlat
jnp
mov
xchg
mov
aad
addr16
pop
clc
fidivl
ss
mov
cmc
add
stos
mov
pop
fmulp
mov
add
cmp
sahf
movsl
dec
mov
pop
pop
scas
dec
test
dec
stos
sbb
gs
out
rolb
mov
es
dec
stc
lret
lock
loopne
inc
dec
addr16
inc
xor
scas
lock
cmp
or
idiv
inc
add
shrb
imul
add
or
jmp
and
pop
sbb
roll
dec
inc
xlat
gs
fcompl
arpl
mov
mov
adc
lret
fstpl
fiadds
mov
jmp
xor
dec
fwait
push
sub
divl
jle
fwait
pop
mov
sbb
xor
xor
test
ljmp
add
js
loope
jge
sarl
fwait
pushf
mulb
loopne
clc
sbb
cmpsb
xchg
push
add
push
stos
jmp
aas
mov
xor
xor
in
jecxz
sub
xor
lds
add
es
jae
scas
bound
das
das
push
es
dec
and
mov
cltd
fwait
mov
or
hlt
cmpsb
cwtl
push
fs
rcrb
fcom
mov
xchg
inc
xor
adcl
mov
bnd
test
gs
adc
in
cmp
sbbb
out
jae
xor
xchg
popf
fs
inc
mov
xor
jbe
dec
outsl
push
sar
push
pop
sub
fcomip
in
sub
jo
aam
xchg
insb
add
out
loope
insb
adc
cmp
mov
mov
xchg
push
and
dec
pusha
repnz
pop
xor
and
cmpsb
mov
je
ret
cmc
pop
ljmp
imul
and
sbb
test
out
mov
pop
mov
pop
xor
mov
add
adc
loopne
inc
aas
xchg
dec
fwait
push
xor
mov
in
cmc
stos
mov
xchg
mov
adc
shlb
inc
add
sub
cs
inc
or
stc
sbb
and
loope
leave
sbb
push
mov
xchg
inc
insl
jns
xchg
cli
cmp
dec
mov
mov
mov
std
push
add
fcmovu
jno
cs
mov
cmp
fsubr
or
sub
adc
cwtl
scas
sahf
mov
push
or
stos
stos
stc
icebp
jnp
cmp
push
sub
xchg
clc
mov
push
push
stos
cs
mov
push
ja
jno
lret
push
mov
insl
enter
mov
mov
xor
xor
not
jnp
sub
bound
mov
inc
test
adc
adcl
scas
and
cmp
jnp
push
cmp
cmp
adc
int
insl
das
cmpsb
cmp
add
out
pusha
pushf
sub
in
jo
xor
or
xlat
lock
sub
push
mov
hlt
outsl
mov
scas
addb
jmp
daa
arpl
dec
jecxz
adc
sahf
push
loopne
cltd
fiaddl
or
push
mov
mov
xor
mov
repnz
mov
mov
fnstsw
lret
movsb
or
test
inc
sti
pop
repz
popl
lret
dec
mov
lds
cmpsl
ret
mov
or
jmp
out
jp
jns
leave
jbe
les
in
pop
outsl
mov
scas
les
adc
inc
js
pop
pop
push
into
lahf
pop
aam
scas
jmp
sbb
movsl
sbb
out
sbb
cmp
pusha
and
xchg
xchg
xor
mov
fldt
xchg
mov
xor
or
call
add
dec
jg
je
push
jge
xchg
or
fimull
inc
in
inc
into
inc
mov
jnp
in
pop
fildll
jo
add
and
arpl
test
push
and
repz
addr16
pmulhuw
mov
xor
pop
push
cmc
mov
mov
push
sub
dec
mov
sarl
mov
js
into
xor
adc
dec
dec
dec
lock
mov
aaa
mov
aad
sbb
sub
dec
inc
mov
mov
mov
mov
hlt
call
enter
sarl
adc
push
xchg
push
subl
mov
sub
push
push
ret
and
mov
add
xchg
cmp
loope
and
lods
movsb
mov
xchg
jne
fcom
jl
and
add
pop
pop
aas
aam
imul
xor
mov
sbb
es
mov
icebp
cmp
mov
cwtl
rcl
daa
jmp
addl
mov
xchg
xchg
sbb
push
subl
cmp
lods
xchg
fstpl
adc
push
nop
fisubl
sub
xor
into
mov
cmp
daa
adc
cmp
or
jns
add
stos
sbbb
add
xchg
sbb
loop
aaa
mov
iret
mov
je
mov
cmpsb
jge
jne
in
test
add
sub
dec
add
and
scas
mov
repnz
scas
fwait
cmp
mov
popa
push
inc
loop
xchg
sub
arpl
inc
mov
jmp
test
pop
dec
fldl2e
pop
mov
xor
jmp
addb
loop
mov
push
lret
mov
sahf
sbbl
pop
loope
pop
cltd
cmp
mov
lds
add
stos
ficomps
fisubs
adc
insb
jnp
fcmovnu
les
popa
pop
mov
fs
gs
in
xor
and
add
sti
sbb
cmp
fwait
inc
mov
out
jb
and
xor
cld
xchg
add
les
sbb
clc
dec
or
xor
mov
cwtl
pop
inc
or
in
dec
rorb
mov
cli
or
jae
insb
jnp
sub
sbb
or
or
insb
adcb
cmp
stc
gs
in
lock
insb
inc
movsl
adc
in
and
inc
dec
rcr
rclb
addl
cli
jle
test
movsl
push
mov
and
mov
lea
enter
xchg
lret
push
jp
push
cmpsl
cltd
ds
lcall
bound
jae
sbb
sub
fsubrs
cmp
xchg
je
cmpsb
fdivr
jb
push
dec
pop
into
inc
bound
dec
mov
fsubr
into
jge
lret
mov
sub
out
pop
lcall
leave
gs
mov
scas
jne
and
movsb
pop
pushf
fidivs
fdivl
and
and
adcl
enter
sbb
test
sahf
add
xchg
mov
or
in
popf
inc
popa
stos
lcall
add
je
jle
cmpl
adc
cmpsb
pop
fisubrl
insl
jbe
mov
inc
cmpb
inc
jmp
push
pop
test
mov
shrl
or
icebp
lret
sub
out
addr16
mov
push
lret
fisubl
jle
andps
pop
or
xchg
mov
es
fcmovnbe
inc
pop
cmpsb
shlb
in
adc
mov
add
pop
stc
xchg
push
mov
outsb
iret
dec
xor
pop
ret
and
sti
ljmp
pop
jne
dec
test
mov
push
mov
push
pop
cmp
or
fstpl
out
sub
pop
jmp
je
and
dec
sti
xchg
adc
sub
cwtl
xchg
adc
into
xchg
inc
lcall
or
pop
sub
push
mov
pop
cmp
fadd
imul
lea
pop
sub
loop
idivl
push
mov
mov
sbb
into
pop
adc
or
push
inc
or
push
in
nop
mov
pop
aaa
add
or
and
inc
jo
sar
inc
cltd
movsl
pop
mov
lcall
cmp
inc
jecxz
push
into
pop
inc
dec
jg
repz
mov
dec
mov
fstpt
call
sub
andl
mov
cltd
aaa
in
and
mov
mov
push
sbb
js
mov
mov
es
insl
mov
sbb
push
sti
imull
pop
push
rcrl
lea
test
mov
mov
scas
xor
inc
iret
jae
mov
push
add
xor
pop
cmp
icebp
sbb
pop
not
shrl
lock
dec
andb
xchg
call
sbb
lock
pushf
and
mov
xor
mov
dec
stos
imulb
add
fmul
cmpsl
mov
push
or
xchg
stos
mov
cld
push
hlt
lea
cmp
mov
xor
mov
stos
xchg
loopne
push
fwait
dec
jne
leave
or
shll
pop
xlat
mov
sbb
xchg
jle
cld
xor
push
jb
jecxz
scas
mov
sbb
adc
ljmp
sub
ljmp
push
testb
pop
das
shlb
xor
dec
adc
cld
lods
xchg
push
cmp
ret
arpl
out
repz
rcrl
ret
cmp
push
adc
mov
push
inc
push
pop
push
adc
fdivp
push
pop
jne
ret
and
ja
jp
pop
cmpsl
inc
cmc
pop
ret
lock
rclb
add
dec
mov
pop
nop
sarl
inc
sti
xchg
lret
scas
sub
mov
jb
movsl
mov
mov
inc
pop
cmpsl
jmp
mov
push
sbb
sbb
adc
movsb
in
adc
and
cmc
sbb
aas
int
lahf
loop
cli
xor
cmpsl
std
mov
cmpsb
outsb
jae
mov
cmp
ficomps
iret
rcll
adc
arpl
testl
and
in
mov
push
lret
mov
add
inc
or
pop
mov
fsubl
insl
mov
ja
into
and
mov
ret
sub
scas
orb
adc
movsl
mov
mov
mov
pop
mov
lock
cmp
inc
cld
lock
xchg
fidivs
lret
pop
mov
jne
js
ret
mov
or
ljmp
outsb
pop
sbb
xchg
fcomps
out
xor
sub
int
mov
push
xchg
pop
mov
jns
stc
sbb
shll
jbe
ret
int
arpl
stos
dec
fsubl
mov
movq
sub
iret
iret
andl
outsb
add
add
sub
outsb
in
jae,pn
rorl
test
add
xor
jnp
jecxz
xchg
testl
lods
movsl
xchg
mov
jns
push
mov
or
mov
iret
push
aas
pop
mov
xchg
ss
int
sti
xbegin
out
mov
mov
cwtl
sti
jnp
lahf
cwtl
add
mov
loopne
insb
push
mov
shlb
push
jge
ja
jle
icebp
push
lds
ret
lock
xor
sub
imul
jge
sbb
popa
mov
idivb
push
bound
mov
test
cld
or
push
adc
or
out
ja
ljmp
sbbb
xchg
mov
dec
sbb
push
sub
icebp
push
push
loope
push
sub
je
dec
loope
mov
ds
jle
ss
fsubp
push
in
cs
fs
cmp
push
xlat
add
sub
mov
sahf
orb
test
sarl
mov
mov
fdivrl
push
movups
sbb
sbbb
fbld
jp
out
cld
add
xor
sbb
dec
inc
pusha
std
ja
mov
jbe
test
lcall
cmc
and
lock
push
jg
jle
lcall
or
sbb
fnstcw
movsb
je
cli
cmp
sahf
cmp
aas
repz
push
jo
or
xchg
inc
add
xchg
pop
sub
test
sbb
cmp
xchg
adc
pop
into
sbb
sub
ja
pop
lds
shrl
xor
xlat
add
cs
mov
mov
sub
pop
cld
adc
test
jmp
cld
cmp
xchg
and
pop
fldcw
bound
jb
jne
push
cmp
and
xor
mov
movsl
xchg
lret
lods
imul
lds
shufps
mov
outsb
sbb
cmp
or
mov
jb
shll
fdivl
xor
lcall
lods
gs
sbb
testb
fidivrl
xchg
jp
and
inc
inc
test
cwtl
or
jl
and
nop
sub
mov
cmp
rclb
insb
adc
jns
xor
cmp
dec
pop
cli
sbb
or
or
inc
cmp
lods
vunpckhps
lcall
adc
mov
sub
lea
rcrb
fmuls
add
fwait
or
mov
int
aam
or
bswap
mov
xchg
rol
in
jno
sub
jns
cli
test
cmpsl
in
xor
adc
sbb
add
mov
fisubrs
adc
fwait
data16
or
lds
cmc
outsl
hlt
hlt
dec
imul
pop
repz
inc
ljmp
fsubp
ja
lds
das
or
inc
fstps
cmp
out
adc
jp
call
ljmp
addb
pop
xchg
shlb
or
pop
jbe
jge
xor
das
add
push
mov
mov
pop
fcmovnb
lcall
adc
mov
test
push
test
jmp
pop
mov
ja
xlat
mov
cmp
mulb
dec
cmpb
mov
mov
jg
in
aad
stos
test
dec
insb
test
xor
xor
dec
cmpb
into
pop
test
cmpl
ret
jnp
xchg
push
bound
decb
add
and
jecxz
cli
mov
xor
dec
arpl
into
push
fs
push
loope
in
shlb
cmp
stc
data16
fstpt
cwtl
lret
scas
jns
dec
cli
es
add
fwait
or
jne
cltd
jmp
cmp
sti
daa
jg
cmp
lods
xchg
jb
or
fnsave
out
adc
xor
mov
push
sbb
or
int
adc
daa
insb
cmpsl
stc
sahf
mov
add
sti
repnz
insl
lds
lea
mov
adc
mov
rcll
lcall
rclb
fmul
adc
in
mov
test
fisubrl
sbb
dec
mov
inc
sub
hlt
and
or
mov
lods
adc
rcrb
sbb
ud1
addl
aam
outsl
mov
jmp
popa
pop
xlat
fists
aas
xor
and
testb
outsb
sbbb
add
mov
or
clc
movsl
pop
or
or
xor
aam
leave
mov
orb
and
cwtl
pop
call
rorl
repz
int3
add
xor
aas
cltd
jns
sti
repz
pop
mov
cwtl
aam
cmp
dec
mov
mov
sub
filds
mov
jbe
cmc
test
cmc
inc
ja
test
jns
stos
icebp
arpl
pop
aas
or
xchg
ret
lahf
jmp
lods
pushf
std
pop
pop
xchg
cmpl
cmp
das
push
mov
and
pop
sub
add
out
imul
mov
sahf
ss
push
sbb
push
mov
inc
cmp
or
xlat
scas
into
sub
lods
sbb
mov
orl
mov
dec
fstp
pop
add
sub
fildll
inc
jo
rcrl
cmp
gs
out
pop
out
mov
bound
pushf
push
movsb
mov
popf
sbb
mov
je
xchg
xor
pop
sarb
mov
inc
es
scas
das
cmpsl
es
in
addl
and
cmc
cmp
clc
and
es
push
stc
insb
lcall
xor
fdivs
int3
popf
aam
sti
or
push
test
jnp
inc
sbb
sahf
fsts
fldenv
mov
mov
cli
sub
sbb
icebp
push
cwtl
int
lahf
mov
rcrb
aas
dec
mov
xor
les
adc
popa
mov
insb
dec
mov
and
mov
idivl
and
cmpsl
jl
xchg
mov
iret
sub
mov
in
popa
loopne
rcll
push
lock
adc
mov
xchg
inc
push
pop
and
adc
mov
adc
pop
nop
cs
sub
cmp
mov
add
call
pop
add
fisttps
rolb
out
or
mov
fs
test
out
and
or
dec
xor
xor
lods
in
cmpb
mov
jns
dec
jp
inc
in
lods
mov
outsb
loope
pop
icebp
mov
rcll
loopne
mov
inc
mov
adc
lret
adc
push
push
inc
mov
gs
or
pop
ljmp
mov
cmp
addb
outsb
sub
addr16
inc
adc
cmpsl
loopne
cmp
divl
scas
mov
push
es
jbe
or
shll
cltd
call
inc
data16
jne
jg
mov
arpl
into
jbe
cmp
pop
stos
ja
out
cwtl
xchg
mov
sub
jo
add
gs
jns
sbb
shrb
add
lea
fdivrl
in
int
xchg
mov
mov
jnp
inc
mov
jne
scas
xor
ret
jg
xchg
jnp
flds
inc
dec
push
dec
in
xor
mov
and
mov
cmpb
adc
cmp
test
xor
std
push
aam
inc
test
sub
pcmpeqd
xor
push
into
jns
and
imul
iret
out
repnz
popa
xchg
mov
and
loop
mov
mov
mov
rsqrtps
fisttpl
lcall
or
push
xchg
pop
iret
sub
adc
shrb
subl
inc
fs
sbb
mov
mov
pop
lock
imul
jne
xchg
and
add
addb
jns
cwtl
push
aas
and
mov
inc
orb
jmp
inc
or
imul
xchg
xor
enter
pusha
in
mov
pop
pop
and
or
pop
adc
int
adc
sub
and
leave
fs
or
sub
int3
imul
test
xchg
mov
insb
add
pop
ret
xor
pop
mov
std
and
aam
stos
popl
xchg
scas
xchg
push
insb
ret
mov
jl
mov
xor
loop
clc
pushf
mov
std
in
in
sbb
icebp
sti
or
sub
pop
aas
cmp
add
adc
dec
adc
in
les
pusha
mov
push
push
jl
daa
jnp
xor
in
push
xchg
loopne
insl
mov
call
loop
cmp
rcrb
sub
out
add
inc
insl
push
mov
cwtl
mov
fmull
xor
gs
fcom
pop
in
rorl
cld
push
fs
rcll
xor
sbb
inc
xor
xlat
lods
adc
movsl
clc
adc
cmpsb
inc
daa
add
lea
xor
mov
out
ljmp
xchg
fbld
fmul
cltd
mov
test
addl
xchg
mov
pop
mov
int
test
push
mov
ffreep
stos
jb
inc
adc
sbb
in
mov
out
mov
gs
jmp
mov
lds
imul
add
fidivs
imul
or
nop
iret
xchg
inc
pop
loope
rolb
popa
das
add
call
mov
cmc
out
shl
add
sub
mov
fistpl
sbbb
or
and
pop
adc
pop
add
and
icebp
mov
xchg
jecxz
into
pushf
pop
adc
cmc
xchg
push
inc
mov
adc
sbb
enter
jmp
ret
int
cmp
cmp
imul
sti
nop
or
stos
out
mov
stos
ret
fcmovnu
cmpl
test
cmp
jae
xchg
dec
ss
outsl
movsb
add
pushf
int
outsl
outsl
cmpsl
push
mov
int
push
xor
inc
out
inc
mov
fimull
mov
popf
ret
cmp
dec
ja
ds
push
aam
push
mov
and
dec
push
jg
and
cmp
sahf
and
cwtl
inc
push
inc
int
xor
xchg
mov
movsl
mov
inc
stc
movb
incl
call
or
js
mov
icebp
dec
scas
mov
xor
movsb
jmp
pop
push
mov
cmc
test
sbbb
iret
sbb
pop
xchg
push
push
cmp
xlat
fcmovbe
adc
imul
jl
cmp
add
jge
xor
mov
mov
and
sub
pop
mov
push
jno
aam
adc
or
and
les
bound
out
aam
inc
cmpsb
aas
ds
cwtl
sub
mov
aad
mov
cmp
xor
push
jge
nop
push
sbb
shrl
or
jle
and
pop
mov
add
sbb
aas
inc
bsr
or
adcl
dec
pop
leave
lods
in
sub
les
and
sbb
jb
hlt
in
inc
dec
aad
lea
mov
or
je
jge
inc
or
jge
and
push
add
pop
pop
out
or
and
iret
fstps
fwait
addr16
cmp
jl
jae
add
sarb
imul
test
xlat
je
mov
mov
pop
fistpll
sub
mov
dec
aam
xchg
fwait
cli
pop
or
mov
sub
int
push
lds
fsub
pushw
mov
push
loope
aad
xchg
and
pop
adc
ficoml
jno
or
mov
sbbb
hlt
js
daa
mov
inc
jg
add
pop
jmp
cltd
pop
cmp
push
mov
pop
mov
aas
sbb
int
mul
cmp
inc
cmp
mov
fiadds
jge
mov
push
xor
add
adc
mov
mov
out
imul
testb
mov
arpl
push
mov
cltd
mov
jno
xor
lret
xchg
movsl
adc
pop
aaa
in
inc
push
enter
leave
dec
xchg
out
inc
repz
insl
std
daa
jg
push
cmpsl
shll
pop
lock
xchg
adc
mov
adc
scas
rcll
sarl
aaa
out
xchg
cmp
pop
dec
push
addr16
cmp
es
iret
push
js
inc
fdivl
pop
cli
adc
inc
sub
push
inc
rcrb
dec
loop
or
fcos
les
mov
jle
add
pop
pop
movsb
sub
fdivs
push
dec
mov
mov
add
repz
int3
adc
xor
inc
fldl
jmp
adc
test
mov
mov
pop
repnz
pop
fdivr
add
ljmp
jge
xor
stc
adc
adc
fnstsw
and
xor
out
cmp
cmp
inc
ret
sbb
stc
pop
push
push
sbb
mov
movsl
lcall
jg
aam
nop
mov
aad
push
pop
jl
scas
push
insb
clc
mov
xor
xor
sbb
mov
jbe
mulb
xchg
push
imul
int3
mov
repnz
mov
inc
push
xchg
movsb
or
fists
or
les
stos
lds
sbb
sub
jp
js
jae
aad
test
push
loop,pn
rcrl
push
push
icebp
das
dec
outsl
push
daa
cmp
movsl
dec
cld
inc
testb
fstpl
cld
or
fs
aam
aad
mov
cli
imul
les
aas
push
fwait
adc
test
pop
and
sarl
je
add
adc
mov
inc
add
outsb
pop
dec
leave
imul
shl
xor
int
out
jp
push
into
fsubrp
pop
xor
dec
aam
mov
mov
cmp
mov
roll
mov
pop
repnz
mov
imul
test
call
xchg
mov
insl
cmc
jmp
inc
mov
adc
push
aas
pusha
dec
ja
fidivs
ret
into
sbb
dec
mov
ret
mov
sti
inc
cmp
push
adc
ljmp
xchg
xchg
xlat
lret
lret
xor
gs
test
mov
add
push
mov
mov
aam
int3
jle
mov
push
cmp
push
jno
jns
add
mov
cwtl
pop
dec
pop
aad
leave
push
mov
enter
push
ss
andb
inc
mov
xchg
test
mov
cmp
inc
jo
dec
negl
dec
sub
es
add
fidivl
or
or
xchg
inc
pushf
mov
dec
test
mov
das
movsb
rorl
rorl
cmpsb
ss
insb
pop
xchg
mov
sbb
scas
xchg
leave
add
pop
pop
lods
mov
cmpsl
push
fwait
icebp
add
adc
cmp
and
dec
sbb
pop
xchg
cs
pop
bound
cwtl
pop
fsub
xchg
shld
lcall
in
int
or
xor
in
mov
xchg
inc
sub
aad
std
or
xsavec
or
fcoms
incb
xlat
cmp
sbb
mov
shrl
mov
stos
mov
xchg
leave
mov
mov
xorl
jg
cmp
sub
mov
push
adc
mov
pop
pushf
into
inc
jnp
stos
popf
xlat
mov
movsl
sub
add
cltd
mov
loop
xchg
or
lcall
sbb
int
in
add
pop
xchg
enter
insb
sub
daa
sub
jb
dec
push
jno
add
mov
pusha
push
int3
sub
repnz
mov
mov
std
mov
xchg
es
push
add
pop
mov
adc
xchg
mov
mov
shlb
push
movsb
fsubs
out
fcmovb
inc
pop
xor
lea
mov
or
sub
paddusw
mov
jle
inc
and
fsubr
xchg
add
divb
testl
lds
mov
repz
fmull
aam
out
and
xor
push
ja
fwait
mov
xor
insl
shlb
scas
or
popa
hlt
cltd
popf
mov
call
mov
jg
cmpsb
daa
out
push
jnp
jbe
sbbl
xor
and
mov
icebp
dec
popf
sahf
mov
sub
xor
leave
push
mov
sbb
aaa
lds
aaa
stos
not
mov
hlt
inc
dec
imul
mov
pop
hlt
push
xor
push
pop
cltd
jne
lods
jb
pop
jmp
fistps
push
dec
jae
insl
cmp
ret
dec
add
lods
mov
mov
pop
cmp
dec
subl
addr16
cmc
or
insb
std
adc
rorl
pop
mov
ret
insb
sbb
ss
mov
addb
jnp
xor
adc
mov
loopne
push
xchg
lret
ficomps
jae
dec
shrb
push
daa
aaa
mov
aam
addr16
push
scas
lock
rcrl
outsl
lods
outsb
xor
imul
fisubs
pusha
enter
dec
inc
jns
iret
ret
sub
cs
jb
in
mov
out
mov
jmp
jae
and
jbe
xchg
jg
cli
fcoms
icebp
test
xchg
sub
fimull
push
lock
or
sahf
pop
mov
sub
xchg
fisubrs
dec
mov
lock
xlat
adc
jbe
js
test
sub
or
pusha
andb
jge
adc
mov
pop
ret
lods
lods
adc
enter
out
rorb
jp
or
lret
xchg
xchg
xchg
push
or
push
cmp
adc
or
push
das
bswap
subb
loopne
jp
xor
cwtl
btc
pop
mov
pushl
mov
into
xor
js
ret
lods
cmp
das
jae
popl
mov
inc
std
aam
lcall
mov
addr16
iret
dec
push
es
testb
dec
push
jns
mov
mov
sub
cmp
cmpsb
ret
movsl
int
aam
jp
aad
mov
scas
cmp
pop
pop
or
push
cmp
out
shrb
fmul
adc
fcomip
aaa
mov
adc
sub
movsl
mov
mov
add
cmp
push
ljmp
cs
repz
sub
lods
or
sbb
push
std
push
decb
push
jnp
push
nop
pop
stos
mov
lahf
dec
enter
test
fsubr
scas
test
adc
outsb
lds
cmp
xor
repnz
repz
dec
shl
jne
adc
jo,pn
push
sub
mov
icebp
inc
dec
or
adcb
or
mov
jmp
sbb
in
pusha
bound
jnp
dec
addr16
jge
shll
jnp
xor
mov
iret
imul
or
repnz
xchg
iret
clc
sbb
decl
rcr
jmp
test
bound
mov
gs
sbb
rcrl
enter
aas
pop
aad
adc
sarb
dec
mov
pop
fistps
mov
divb
push
sti
pop
fidivrl
push
rcrb
je
sub
jmp
int
sti
fildl
push
das
sub
adc
and
push
push
aaa
ja
xor
stos
loope
jo
sub
sub
std
sub
adc
mov
les
in
pop
xor
push
jge
in
add
vrsqrtss
mov
cmp
push
push
pop
pop
cli
mov
or
push
push
and
lds
aam
cmp
test
sub
sarl
sahf
jmp
or
pop
imul
mov
repnz
pop
push
test
mov
sar
int3
bound
jg
cmp
cmp
cwtl
pop
lret
mov
rep
pop
ljmp
push
fmul
insb
icebp
pop
mov
inc
insl
repz
daa
out
xor
or
pop
mov
clc
jno
mov
add
insb
and
push
fwait
add
arpl
test
movsl
pop
pop
fmuls
sbb
mov
mov
cs
mov
mov
in
popa
push
and
sub
mov
add
test
push
out
leave
sub
adc
std
xchg
stos
sbb
ja
mov
testl
subl
jecxz
cmp
xchg
mov
mov
aam
ljmp
arpl
or
jg
xor
sbb
in
in
inc
sub
ret
dec
aaa
dec
pushl
pop
inc
imull
sbb
adc
push
sbb
aad
inc
in
loop
notl
in
push
shr
ja
ret
nop
cltd
and
push
pop
inc
and
xchg
fs
fs
or
mov
lock
xchg
push
sub
jecxz
add
sub
imul
in
adc
push
cmp
adc
jmp
shll
pop
test
aas
adc
cltd
adcb
mov
push
leave
sbb
xor
jecxz,pn
adc
popa
decb
jns
cmc
pusha
or
xchg
lea
mov
sbb
ljmp
jno
ret
imul
out
cmpl
ftst
xor
inc
jnp
fistpl
lcall
adc
nop
repz
insb
int3
mov
cmp
cmp
ret
aas
das
mov
cmp
push
mov
pop
loope
jns
dec
stc
addl
jo
cwtl
or
xchg
jg
popa
imul
xchg
ret
mov
xor
xchg
xchg
lods
cmp
out
sbb
mov
sbb
aas
cmp
and
xor
mov
shr
inc
and
jl
inc
mov
inc
cmpsl
fs
xlat
push
sub
ds
loop
popf
inc
loop
outsl
jne
xchg
pop
jle
jl
cmp
pusha
xchg
dec
mov
shlb
mov
xor
mov
mov
or
inc
mov
push
loopne
repnz
or
movsl
add
xor
dec
in
out
dec
cmp
cwtl
lea
and
leave
jne
popf
call
and
mov
insl
imul
sub
mov
lret
outsb
jge
adc
jecxz
test
fstl
aas
lds
xchg
and
test
push
lds
lea
mov
xlat
inc
bound
cmp
adc
xlat
inc
rcl
lret
test
stc
xchg
mov
xor
mov
mov
jbe
push
xchg
adc
loope
sbb
and
pusha
and
pop
mov
mov
xor
push
and
push
pop
mov
faddl
sbb
lret
sti
add
mov
mov
daa
dec
or
xchg
iret
aaa
shl
pop
shr
outsb
and
and
xchg
jo
aas
add
or
cmpsl
push
movsl
scas
movsl
pop
mov
xor
cmc
inc
mov
lcall
mov
fldt
fwait
push
ljmp
fldenv
mov
dec
jb
sub
add
sbb
xchg
sbb
xchg
xor
pop
lds
movsb
rcl
jae
mov
lock
xor
mov
push
mov
mov
aaa
push
jge
jp
mov
daa
movsb
pop
js
pop
sbb
and
leave
fcomps
xchg
or
inc
cmp
or
enter
inc
jnp
xchg
xor
jge
ljmp
dec
aas
lcall
push
popa
or
mov
sbbb
mov
enter
pusha
dec
stc
sti
mov
test
cmp
lea
sub
jb
sbb
stc
jecxz
ljmp
pop
cmc
inc
push
lds
add
mov
inc
push
incl
inc
pusha
popa
aas
push
nop
mov
adc
xchg
sub
cmp
inc
cmp
data16
adc
cmpb
jns
outsb
fildll
dec
cltd
iret
jmp
es
push
jmp
push
inc
cmp
aas
mov
imul
in
mov
dec
xchg
pop
mul
pop
push
popf
pop
pop
pop
mov
fistpll
hlt
xor
sarb
or
sub
pop
loope
repnz
aad
lret
loope
mov
jg
test
sbb
push
cld
cld
lret
pusha
sbb
cs
sbb
fs
fldenv
jmp
jns
dec
test
cltd
cmp
aam
push
sub
add
fisubs
les
xchg
lret
pop
loopne
ljmp
mov
out
fidivs
lods
fstpt
cmc
mov
popf
mov
sub
push
dec
pop
and
push
jne
clc
jle
dec
cmc
lcall
cmpsb
divl
pop
mov
sbb
enter
mov
push
sub
pop
mov
adc
out
inc
scas
or
lds
movsl
pop
out
add
movsl
push
xchg
mov
loop
cmpsb
cmc
sahf
sub
inc
rcll
insb
pusha
jle
pop
ja
sub
push
adcb
xor
xor
aas
or
fwait
jno
test
sti
mov
sbb
pop
scas
adc
addl
cwtl
pop
fimull
jmp
aas
and
cmp
jbe
mov
cmp
out
in
testb
mov
inc
std
lock
add
jnp
lret
bound
outsl
out
repz
into
int3
pop
scas
mov
dec
jbe
pop
into
cmpsl
insl
and
xchg
adc
iret
cmc
add
cmp
movsl
cmp
int
push
sbb
cmpsl
data16
and
rcll
in
cmp
pop
adc
stos
add
lcall
sbb
cmovns
fs
cmp
sbb
out
out
pusha
dec
sbb
xor
xor
and
xchg
arpl
movswl
outsb
and
xchg
jp
lods
sub
mov
mov
test
sbb
adc
mov
mov
fdiv
hlt
test
xchg
popf
dec
or
jne
jecxz
leave
and
mov
fs
dec
mov
push
cltd
aad
pop
sbb
jb
test
push
or
movsl
cmp
in
cmp
test
inc
stos
adc
mov
push
or
imul
cmpsl
sub
xchg
sub
pop
and
or
idiv
push
fidivrs
and
add
sahf
add
outsb
or
cld
dec
adc
insb
in
xchg
cmpsb
das
ret
inc
adc
negb
jl
loop
add
cli
and
xlat
lds
js
fidivrs
pushf
mov
fsubs
lret
cmp
addr16
add
xor
cmc
out
sub
adc
pop
lds
jns
popa
inc
lock
xchg
inc
dec
loop
scas
movswl
aam
add
inc
lods
pop
dec
jmp
jbe
aaa
push
mov
and
fcoms
xor
bound
pop
daa
jne
gs
out
inc
cmp
imul
fwait
mov
pop
mov
xchg
jne
fndisi(8087
jb
sbbl
sub
push
adc
add
mov
movsb
test
xchg
push
call
xchg
popf
push
adc
pushf
xchg
es
push
mov
pop
enter
pop
mov
pop
adc
ret
pop
jo
fnstcw
pusha
aad
test
imul
sbb
inc
inc
push
cmp
push
jmp
xchg
popf
sbb
pusha
test
inc
xor
cmpsb
lahf
gs
inc
icebp
popf
inc
fnstenv
or
pop
dec
jno
push
test
xor
dec
call
add
outsl
mov
aam
xorl
adc
lods
mov
lret
mov
pop
sub
lret
lea
mov
fwait
add
mov
mov
sarb
shlb
jbe
xchg
into
adc
dec
shlb
cmp
int
les
icebp
mov
cld
fmull
dec
movsl
sbb
outsl
mov
je
mov
addl
adc
push
push
sbbb
aas
or
mov
mov
ljmp
out
pop
loop
jmp
movsl
sbb
cmp
outsb
je
leave
or
or
cmp
pushf
out
roll
jmp
inc
incl
mov
aas
je
dec
bound
ret
sbb
cmp
testb
mov
aam
insb
mov
dec
mov
adc
imul
xorl
adc
shrb
in
mov
or
lods
movsl
cltd
jno
sbb
inc
mov
ljmp
mov
cmpsb
dec
outsl
mov
aaa
inc
add
into
inc
test
pusha
inc
sti
push
sbb
jp
divl
mov
mov
xlat
pop
cmp
arpl
sub
mov
xchg
sbbl
aas
cmc
sbb
inc
rol
ficoms
jo
loopne
push
sahf
lret
mov
insl
test
xor
push
mov
rclb
sbb
mov
lods
movsb
ret
mov
add
cmpsb
mov
pop
in
adc
in
xchg
dec
insl
lds
aas
mov
iret
lret
mov
sbb
mov
mov
mov
adc
inc
repz
jge
sub
cs
push
call
push
add
jnp
mov
lds
pop
sub
jg
sub
repnz
out
push
xchg
cmp
fildll
pusha
sub
iret
push
sbb
sub
sub
leave
xchg
mov
adc
mov
js,pt
pop
inc
int
sbb
mov
pushf
negl
daa
insb
jae
add
in
pop
lds
xor
mov
lahf
mov
xchg
sbb
test
mov
pushf
sbb
cmp
stc
jle
shlb
into
add
xchg
or
jnp
jl
fnstsw
incb
push
les
adc
xor
out
mov
sub
out
or
or
lcall
inc
cmpsb
daa
hlt
rcrl
arpl
inc
sub
test
out
outsl
ja
cs
add
ret
xor
into
add
movsl
xchg
sub
sub
mov
and
sub
inc
xchg
out
cmp
iret
xlat
fiaddl
and
dec
ds
push
jge
or
add
imul
mov
rcl
out
mov
cmp
inc
sbb
hlt
or
pushf
aad
dec
sbb
sbb
dec
cmp
lods
dec
adc
xchg
xchg
out
pop
jg
xor
sbb
cs
aad
xchg
fistl
test
jmp
fidivrs
call
popf
jl
cs
jae
xchg
icebp
push
addr16
mov
jne
dec
jno
add
outsl
pop
dec
dec
addb
shll
mov
mov
pop
scas
mov
insl
dec
or
scas
aad
adc
popa
imulb
subl
ja
mov
ljmp
int3
push
js
and
adc
jnp
adc
sbb
mov
sbb
xchg
test
inc
ljmp
popf
jns
pop
push
shrl
xchg
push
std
push
cltd
stos
jle
jne
sbb
in
sbb
shll
dec
push
push
xlat
ljmp
call
inc
jbe
push
stos
sub
lret
jle
push
jbe
leave
pop
xchg
pop
popa
and
pop
inc
inc
mov
sub
pop
lods
xchg
cmp
lret
ds
dec
inc
pop
stc
inc
iret
sti
test
cmp
ja
mov
in
or
arpl
lds
xchg
push
push
test
lret
cs
pop
mov
hlt
push
push
mov
mov
add
outsb
lods
ds
lret
add
mov
scas
jbe
xor
shlb
aad
flds
and
cmc
mov
fs
int
and
jg
sbb
xlat
inc
adc
push
mov
rclb
jecxz
test
xor
imul
testb
or
xchg
jns
or
mov
stos
xchg
ljmp
or
push
vpavgb
pop
cmp
in
add
je
jg
and
sbb
push
or
in
dec
loope
cmc
adc
jo
dec
int3
outsb
add
mov
mov
sbb
push
out
xchg
adc
xor
dec
fidivrl
sub
add
mov
xchg
or
mov
ja
inc
sub
test
fdivr
gs
rclb
add
push
les
or
loop
scas
gs
or
mov
lret
cmc
jo
shll
jno
sbb
mov
sbb
and
rol
mov
jbe
fstpt
divl
mul
or
adc
inc
inc
pusha
xor
add
push
xorl
mov
mov
xchg
rorl
lcall
adc
imulb
imul
mov
cwtl
test
xchg
adc
je
sbb
cli
repz
fmul
cld
cmp
fidivs
sbb
xchg
dec
lahf
push
jae
sub
jl
scas
pop
cld
ljmp
cwtl
inc
mov
mov
lods
enter
mov
push
cmp
ljmp
xchg
sahf
xor
das
mov
xor
mov
into
or
pusha
xor
test
jae
lret
pop
or
or
push
mov
shlb
fcompl
inc
dec
ds
mov
mov
inc
test
adc
mov
mov
rcrl
inc
pop
fbstp
sbb
inc
and
rorb
std
dec
push
sbb
or
mov
xchg
scas
or
mov
aam
lahf
and
test
and
jmp
mov
mov
jae
sub
popa
mov
into
ljmp
adc
xchg
into
movsl
arpl
or
js
in
or
and
xlat
repnz
fs
test
add
pop
std
mov
xchg
mov
pop
push
aaa
scas
cld
xor
inc
and
cmpsl
js
mov
jmp
cmpb
or
sbb
push
mov
mov
push
xchg
adc
dec
jmp
cwtl
pop
ljmp
fprem1
inc
and
popf
add
pop
loop
imul
lea
cmpl
std
call
cmpsl
xchg
lds
jae
dec
mov
clc
rclb
fs
dec
out
xor
int
clc
out
xchg
xor
mov
daa
mov
xor
xchg
sahf
loopne
fdivs
mov
xchg
scas
ja
xchg
mov
adc
cmp
mov
ret
pop
lret
test
push
ss
sub
jg
sub
pushf
push
ja,pt
sbb
adc
or
dec
and
cli
jne
push
add
push
xlat
faddl
mov
add
and
sub
lcall
jb
dec
lahf
xchg
pextrw
lods
mov
dec
test
mov
xchg
incb
mov
dec
fidivs
jbe
std
sti
xchg
mov
jmp
push
js
mov
dec
xor
push
les
push
mov
dec
insb
sbb
lock
push
insl
cmp
je
sub
or
test
mov
cli
mov
test
and
inc
arpl
xlat
stos
xchg
lods
out
adc
mov
loope
pop
pop
or
popf
movsb
xchg
xchg
jae
push
push
test
adcb
mov
int3
adc
fldt
and
sub
pop
adc
jle
xchg
gs
jmp
adc
jae
push
dec
pushf
cld
jbe
pop
int
pop
mov
gs
int3
mov
or
cld
and
cmp
push
sahf
aam
test
push
fsubr
jmp
sahf
mov
cltd
pop
jge
mov
hlt
mov
mulb
test
jbe
in
xor
dec
jge
pop
gs
test
ss
cmp
xchg
adc
fidivrl
shrl
insb
repz
or
lret
in
mov
test
push
cmp
xor
xchg
scas
mov
and
and
insb
mov
sahf
addl
or
dec
cvttps2pi
push
scas
pop
push
mov
movsl
insb
inc
lahf
mov
movsb
xor
gs
sbbl
adc
sbb
int3
aas
ljmp
in
cli
and
cwtl
aas
mov
jl
adc
pop
daa
add
push
xor
sarl
ss
mov
or
push
call
pop
cmc
xor
jno
int3
mov
jnp
jb
or
test
pop
pop
call
and
leave
lea
out
pop
icebp
rol
mov
lahf
cmp
add
mov
outsb
lcall
sti
inc
jmp
repnz
cmp
fiadds
sub
clc
lock
and
daa
fwait
rcll
pop
jp
add
ret
sub
daa
into
mov
imul
aas
mov
mov
or
adc
xchg
lods
sbb
inc
or
jae
mov
jno
xchg
sub
jecxz
shlb
pop
ret
vandpd
pop
sub
add
pop
je
or
cmpsb
jg
pusha
cltd
cmp
ss
inc
in
scas
mov
mov
decl
pop
pop
lret
mov
shrl
push
lahf
nop
cwtl
push
cli
shll
mov
cmc
aas
add
push
jne
lock
movsl
enter
sbb
mov
lock
mov
xchg
cmp
mov
sti
ja
sbbl
jle
pop
ret
adc
std
shll
ds
js
out
or
pop
into
nop
mov
out
rcl
insl
mov
jle
das
pop
dec
push
sub
ljmp
addl
mov
and
mov
inc
jae
xor
cmpsb
shl
jl
ss
push
test
push
mov
and
xchg
xchg
pop
inc
xchg
sbb
test
arpl
in
xchg
sbb
dec
stc
pop
aad
dec
and
dec
and
mov
int
jbe
or
mov
pop
jnp
or
fidivrl
icebp
loop
cwtl
rcr
daa
jns
std
mov
dec
cmp
aaa
in
clc
cmp
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
movswl
call
aaa
movsb
or
push
das
cmp
pop
mov
add
jmp
inc
jns
pop
insb
xor
mov
pushl
push
or
pop
pop
jns
movswl
xor
mov
add
jmp
div
fs
xchg
xor
push
and
pop
push
call
cmp
jle
sub
pop
popl
sbb
xor
sub
mov
add
jmp
push
mov
and
inc
push
nop
mov
cli
or
decl
test
jmp
cmpsl
xor
mov
mov
outsb
into
sbb
stos
and
das
cmpsl
fists
cmp
hlt
mov
insb
dec
cltd
out
mov
pusha
out
and
add
or
ds
lret
mov
pusha
xor
inc
mov
sti
into
mov
add
xchg
adc
lock
pop
inc
nop
adc
xor
psrld
js
or
push
arpl
fsubp
leave
enter
push
cli
incl
test
dec
divl
loope
aas
movsb
adc
ds
outsb
jl
and
mov
loop
insb
jp
or
mov
popa
daa
inc
sub
mov
fwait
js
into
ja
mov
xor
pop
fwait
ss
ds
pop
cwtl
mov
test
cltd
mov
push
fbld
ror
das
sbb
ja
jbe
xor
add
dec
fsubs
mov
mov
mov
dec
ljmp
fwait
sub
and
sub
mov
ffreep
add
in
push
mov
dec
or
xchg
mov
jp
mov
push
jecxz
iret
jl
xchg
cmp
fisubs
push
add
mulb
cmpsb
cltd
xchg
roll
test
dec
int
inc
ret
cvtps2pd
pushl
mov
aad
pop
ret
pop
ret
dec
pop
jmp
jl
aad
jne
push
xchg
lret
jbe
ret
mov
sahf
pop
aad
xchg
outsb
pop
call
outsb
inc
iret
dec
add
push
pop
test
cmp
pusha
mov
and
outsb
dec
sahf
ret
aaa
sti
arpl
sbb
and
shlb
stos
dec
fnstcw
lahf
jb
inc
out
jnp
stos
jmp
sbb
fnstcw
cld
adc
cmp
pop
int3
push
add
xchg
cmp
inc
add
cwtl
pop
pop
ja
xchg
xchg
out
enter
hlt
pop
xor
push
jae
xchg
mov
lods
test
or
xor
mov
stc
mov
and
ljmp
lret
les
test
push
jp
leave
jl
lahf
popa
add
imul
or
iret
jb
sbb
repnz
cmp
adc
enter
mov
movsb
cld
pop
lret
mov
rcll
lret
test
mov
pop
jp
hlt
aam
dec
pusha
mov
lahf
mov
sti
sbb
je
mov
shlb
shr
gs
adc
push
jp
lahf
pop
dec
and
iret
and
pop
mov
fdivrl
xor
mov
mov
xchg
incl
loop
xchg
jnp
std
add
mov
mov
out
cmp
xchg
jnp
sub
test
xchg
jnp
rcrb
or
stc
adc
nop
jnp
sub
jnp
rcrb
stc
mov
jnp
pop
mov
out
insb
push
dec
mov
jle
jnp
cltd
add
sahf
mov
xlat
js
xchg
adc
pop
mov
push
lea
test
ficompl
xchg
daa
mov
mov
pushfw
lret
sbbl
mov
dec
sbb
add
dec
cmpb
xor
sbb
sahf
sti
xchg
jnp
int
data16
jnp
popf
loop
pop
mov
jnp
cmp
jnp
lret
sbb
add
dec
cmpb
in
sbb
inc
mov
add
dec
cmpb
mov
jnp
lret
mov
pop
sahf
pop
cmp
xchg
addr16
pop
psubusw
or
sbb
add
xchg
mov
jnp
or
jno
mov
mov
add
sub
sbbl
inc
sub
loop
cmpb
cmp
ret
jnp
or
sbb
add
arpl
pop
mov
add
inc
mov
ret
rorl
enter
xchg
aaa
ljmp
lret
mov
xchg
rorl
cmp
or
leave
test
cmp
cltd
pop
out
pop
mov
jnp
pop
mov
ret
mov
cmp
lds
test
lock
je
xchg
or
add
xchg
insl
add
je
lea
xor
int3
xchg
mov
dec
lret
dec
lock
or
inc
jo
es
jo
sbb
cmp
mov
icebp
jge
arpl
push
xchg
inc
sbb
add
xchg
ja
sbb
cmp
mov
lods
sbb
xchg
mov
xlat
sbb
inc
insl
add
je
lods
fs
adc
jmp
bound
inc
hlt
add
pop
orb
or
inc
jo
daa
inc
jo
sbb
or
pop
adc
nop
mov
popa
inc
mov
mov
adc
jmp
bound
sarb
or
fnstsw
inc
mov
lds
xchg
lods
push
into
pop
cmp
or
fnstsw
gs
cld
dec
lret
mov
pop
mov
stos
inc
cmpsb
mov
jnp
inc
mov
jnp
push
shrl
xchg
outsb
ret
xchg
sahf
pop
cmp
ret
mov
lcall
sbb
inc
mov
cltd
pop
cmp
pop
andw
lcall
popa
mov
nop
jnp
or
sahf
insl
pop
cmp
pop
mov
mov
push
mov
sahf
jne
ja
sbb
mov
sbb
nop
sahf
push
stc
nop
inc
ret
inc
in
mov
cmp
cmpsb
enter
jge
aad
insl
repnz
or
jge
xchg
or
jo,pn
pop
out
sbb
lods
fxch
and
aad
arpl
lret
xchg
inc
ret
popa
pop
mov
jnp
pop
mov
jnp
pop
mov
jnp
pop
mov
jnp
test
xchg
pop
mov
jnp
pop
mov
jnp
pop
mov
jnp
pop
mov
jnp
pop
mov
jnp
ss
jecxz
clc
jl
push
mov
shlb
mov
push
xor
pop
sbb
add
insb
mov
fs
ljmp
pop
lock
xchg
jmp
test
adc
lret
inc
xchg
mov
adc
or
mov
mov
jo
lcall
int3
sbb
sbb
mov
data16
mov
mov
jmp
push
test
mov
jns
addb
out
or
btl
inc
dec
xor
shrb
jge
jp
insb
mov
outsb
mov
mov
movsl
lock
push
outsl
cs
inc
sub
xlat
pop
je
loope
mov
js
adc
dec
into
pop
fadds
push
cld
clc
mov
xchg
repz
mov
lods
ljmp
mov
movsb
mov
je
cmp
inc
cmp
mov
jne
cmp
fcom
cmpsl
mov
lret
adc
imul
jnp
push
and
adc
ret
xchg
mov
push
shlb
notb
xor
gs
es
mov
jge
inc
pop
pop
mov
jp
rcl
jle
push
repnz
mov
and
xor
cld
and
repz
std
dec
xchg
add
bound
cmpsb
sub
mov
daa
fwait
xchg
jb
cmp
ret
out
addl
std
sub
push
pushf
in
outsb
push
data16
out
xlat
pop
sub
gs
adc
es
nop
dec
fldenv
adc
sarl
shrb
sbb
jg
in
and
jae
sahf
jle
test
arpl
and
push
mov
std
xchg
adc
rorl
std
dec
jl
addr16
cmpsb
les
and
ss
xor
scas
jnp
pop
cmp
mov
cmp
mov
or
aam
les
or
imul
push
add
adc
push
xor
inc
leave
xchg
adc
push
sub
ret
stos
or
ja
stos
dec
mov
inc
jne
inc
imul
in
pop
xchg
stos
mov
xlat
xor
pop
cmc
xchg
and
rcrl
rol
cmp
cmpsb
xorl
cmp
cmp
and
or
fisubrs
cmp
mov
xchg
mov
mov
lods
in
test
out
fidivl
repnz
les
adc
add
adc
cs
mov
inc
add
push
xor
xchg
imul
lret
xchg
cltd
jl
inc
jl
or
and
mov
xchg
adc
sahf
jo
add
aam
mov
or
ret
popa
xchg
inc
and
add
add
add
faddl
add
faddl
add
jb
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
faddl
add
fildl
add
faddl
add
pop
add
fldl
add
pop
add
fldl
add
pop
add
fldl
add
pop
add
fldl
add
pop
add
fldl
add
pop
add
add
add
add
jbe
jo
xor
cs
insb
add
imul
insb
add
gs
xor
fs
insb
add
insl
arpl
xor
fs
insb
add
jb
imul
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
add
add
add
add
add
add
add
addb
add
mov
pop
add
add
add
fldl
add
add
add
fldl
add
add
add
add
gs
imul
inc
gs
arpl
popa
jo
add
add
imul
jae
js
add
inc
gs
imul
outsl
outsb
dec
outsb
outsw
inc
add
add
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
add
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
mov
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
jl
add
add
xor
cmp
xor
xor
xor
xor
inc
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
outsb
add
add
add
add
popa
add
imul
je
and
push
add
insb
add
sub
add
add
arpl
je
outsl
add
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
add
je
sub
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
jae
jo
pop
add
jo
xor
pop
add
je
insl
add
add
add
xor
cmp
xor
xor
sub
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
add
je
jb
popa
add
je
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
add
add
test
xor
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
sub
inc
add
add
add
imul
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
insb
add
add
imul
je
jae
and
jb
add
add
jbe
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
pop
add
add
inc
add
add
pop
add
and
and
and
and
and
and
and
and
and
and
and
and
add
add
je
sub
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
sub
push
add
add
add
imul
outsl
add
jae
sub
push
add
add
add
jo
add
popa
add
add
add
add
jns
jae
je
add
add
add
inc
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
mov
add
add
add
and
adc
add
add
call
add
adc
add
add
sub
add
add
sbb
sub
add
adc
add
and
add
add
add
add
add
addb
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
add
add
add
add
add
add
add
add
or
pushl
jo
xor
jo
push
aas
addb
idivl
divl
addb
icebp
pop
data16
dec
addb
stc
pop
out
dec
addb
incl
inc
add
addb
inc
inc
inc
jo
addb
mov
rcrb
jnp
jnp
pop
xor
rolb
add
add
mov
add
xor
add
add
add
loopne
xor
loopne
mov
loopne
xor
loopne
add
loopne
ja
sub
add
and
add
inc
add
add
add
add
add
add
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
xorl
xor
xor
xor
add
add
add
add
jnp
jnp
add
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
mov
xor
xor
xor
xor
xor
ja
addb
xor
aas
pushl
xor
push
addb
jg
aas
push
add
push
orb
div
aas
push
xor
push
addb
xor
xor
xor
add
testl
push
xor
testl
clc
mov
addb
xrelease
push
maskmovq
testl
incl
lock
addb
add
mulb
incl
addb
add
ljmp
cld
in
addb
add
jmp
cld
testl
push
addb
add
mov
xchg
ja
ja
ja
ja
ja
ja
add
add
inc
inc
inc
add
add
addb
add
inc
inc
inc
jo
pop
jo
add
add
inc
inc
inc
jo
pop
jo
add
add
inc
inc
inc
inc
inc
inc
inc
addb
add
ja
ja
ja
ja
add
add
mov
mov
lock
push
add
push
add
push
add
jg
add
aas
lock
aas
lock
aas
lock
aas
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
jne
scas
push
push
add
add
add
inc
repnz
adc
mov
or
cmp
pop
or
out
add
data16
mov
jne
iret
notl
push
pop
ds
popf
xor
call
test
in
sbb
jnp
fldcw
push
jp
ljmp
in
dec
sub
mov
jp
aas
fsubr
inc
mov
fnclex
cmpl
pushf
xlat
std
push
fsubrl
cld
dec
lods
mov
mov
pop
mov
jb
fistpll
xor
rcrl
lret
xor
jb
fnsave
rorl
add
addb
jno
call
das
dec
mov
in
mov
pop
je
mov
xor
int
dec
std
or
pop
and
mov
push
popf
adc
mov
mov
push
mov
xorb
fbld
jno
ret
stc
mov
leave
xchg
mov
je
xor
adc
gs
ljmp
rcll
test
fs
xchg
mov
and
sbb
jne
gs
bound
mov
mov
fldenv
inc
das
outsl
cmpl
add
jns
rolb
dec
push
mov
mov
fwait
scas
push
dec
jnp
shrb
mov
loopne
mov
aad
popf
hlt
shll
int3
xor
cltd
mov
loope
sbb
push
xchg
or
mov
cmp
lcall
imul
jg
push
push
sahf
testb
pop
int
push
add
movsb
std
sub
dec
sub
in
jb,pt
mov
mov
arpl
xlat
ds
adc
out
inc
jp
mov
fwait
arpl
mov
fidivrl
push
in
mov
xor
dec
pop
fxch
lds
mov
push
movsl
imul
mov
ret
test
ret
sub
sbb
mull
jne
push
sahf
icebp
xchg
ljmp
or
jno
adc
push
daa
xor
sbb
pusha
jno
xchg
dec
jl
jecxz
or
sbb
xor
sar
sbb
jl
outsb
xchg
out
leave
xchg
pushw
dec
cmp
mov
and
lret
cmp
scas
les
adc
dec
hlt
jb
jp
dec
mov
mov
loope
ret
mov
pop
leave
jl
fwait
mov
and
lods
rorl
andb
mov
jo
push
pop
dec
or
lds
pop
and
sbb
dec
add
mov
ds
mov
dec
and
cltd
stos
popa
subl
xor
lret
cmpb
pop
and
sub
dec
dec
imul
jo
popf
cmp
cmp
pop
aas
movsl
or
push
nop
stc
dec
lds
xchg
inc
ret
xor
or
orl
adc
jb
rcrb
pop
inc
dec
sahf
xor
jg
cwtl
adc
or
jae
jmp
sub
mov
dec
into
dec
cmp
mov
cltd
and
clc
clc
mov
dec
es
lret
sbb
cmpsl
aaa
fs
inc
fistpll
out
or
cld
and
repz
and
add
filds
and
lahf
cmp
data16
scas
out
andl
bound
mov
out
clc
fsts
mov
rorb
and
roll
pop
cltd
mov
ret
aas
mov
mov
insb
out
test
add
loopne
jno
div
or
test
adc
xlat
mov
xor
inc
add
ja
mov
push
lcall
xchg
pop
pop
cmp
shrl
sub
cmp
jmp
pushf
test
shld
lcall
pop
js
inc
iret
orps
shlb
fidivl
sbb
cmpsb
xor
jno
push
xor
jns
pop
mov
lret
xlat
in
fs
and
inc
push
mov
push
movsl
xchg
dec
mov
push
ss
xor
movsb
jns
or
sbb
jmp
insl
adc
mov
push
cmpsl
ret
fimull
jmp
sahf
mov
push
xor
icebp
mov
dec
mov
xor
or
movsb
cs
pop
stc
aas
in
sub
adcl
js
mov
mov
shlb
mov
pusha
push
pop
faddl
pushl
inc
jmp
pop
mov
inc
cmpb
test
push
and
cld
sbb
jno
mov
jns
arpl
imul
pop
sbb
rcrl
jbe
xchg
jns
stos
fmul
neg
sub
cmpsb
cmp
sbb
outsl
jne
xor
iret
adc
or
js
sahf
xchg
sbb
push
mov
pop
adc
sub
jae
inc
cmpsb
pushf
sahf
in
scas
cmc
push
add
jns
stc
outsl
out
mov
lods
icebp
lcall
flds
call
lea
push
xchg
in
jecxz
movsl
fxch
fs
jge
call
add
arpl
mov
nop
or
mov
inc
sbbb
push
inc
psubsb
jle
jl
mov
testl
mov
sbb
push
xchg
push
popf
and
mov
inc
dec
mov
clc
inc
push
mov
inc
cmp
push
sub
loope
in
pop
aam
mov
mov
leave
out
insb
imul
push
sub
mov
push
popf
loope
pop
add
imul
jbe
dec
mov
mov
xor
repnz
int3
mov
mov
mov
pushl
sbb
pop
fcomi
add
aam
shlb
cmp
cli
es
idivb
and
adcl
or
or
pop
cmp
mov
test
xchg
lahf
insl
ror
adc
inc
push
adc
leave
call
xor
mov
or
inc
mov
cmp
fdivs
add
ficomps
pop
push
jne
cmp
hlt
xor
lds
ret
hlt
idivl
pop
xchg
iret
mov
sub
push
pop
jp
dec
pop
shl
push
js
incb
xchg
adc
pop
clc
dec
loop
jg
adc
pop
adc
popa
dec
loopne
pop
adc
mov
aas
jns
scas
cmp
mov
clc
out
insb
repnz
inc
mov
vmptrst
push
pop
dec
add
ja
mov
in
lcall
icebp
and
adc
push
adc
ljmp
bnd
loope
adc
es
stos
imul
adc
mov
mov
or
push
test
fisubl
xchg
je
xor
int
jmp
out
jle
inc
inc
cmc
fwait
pop
in
push
xchg
sbb
add
stos
dec
lcall
mov
filds
test
cmp
movsl
stc
mov
cmp
test
push
dec
jg
arpl
inc
or
pusha
mov
mov
push
xor
pushf
dec
inc
add
mov
dec
sbb
cltd
lea
and
aam
adc
mov
adc
nop
jne
outsl
pop
lret
cmpsb
sbb
rcll
lret
mov
cld
push
fsubr
rolb
and
cmc
lret
add
imul
push
ss
xchg
mov
jle
dec
adc
jo
push
adc
add
inc
pop
dec
mov
dec
pop
dec
and
mov
cs
push
fisttpll
decb
clc
int
aas
pop
mov
jge
sbb
dec
insl
lret
paddb
call
cmp
pop
mov
hlt
movsb
pop
jo
cld
pop
jp
scas
xchg
dec
jecxz
mov
arpl
out
gs
dec
in
aas
lret
pop
jge
fcoms
mov
sub
lea
adc
icebp
jno
push
mov
movsb
mov
leave
inc
ficoml
lahf
cltd
les
push
push
xor
loop
xor
leave
lock
push
pop
xor
adc
inc
jnp
mov
cmc
pop
inc
dec
sbb
movl
or
cmc
cli
jecxz
fwait
stos
aas
fcompl
adc
fcmovnu
insb
fwait
into
sub
mov
or
mov
sub
lret
jg
lahf
notb
xchg
ljmp
or
rorl
and
mov
sub
les
lret
lods
fisttpl
addr16
cmp
pop
imul
fildl
sbb
or
mov
cwtl
call
loope
xor
dec
nop
jnp
leave
iret
jmp
test
adc
ja
dec
imul
sbb
dec
or
and
cwtl
dec
push
movl
push
push
test
sub
in
ljmp
push
dec
mov
mov
xchg
aaa
mov
xchg
ds
inc
das
jb
adc
sub
mov
jp
sbb
fadds
push
and
icebp
cmp
mov
xchg
inc
dec
loop
push
lret
dec
xor
and
adc
push
jno
fistl
push
mov
sub
in
mov
leave
into
add
popf
les
dec
lods
ret
or
or
pop
sub
xchg
lods
fsub
jl
xor
sarl
js
mov
sbb
ret
or
out
test
pop
mov
xchg
dec
dec
icebp
xchg
jnp
cmpsl
fildll
inc
jge
int
push
push
shrb
mov
jp
cmovae
pushf
jge
popa
mov
ss
inc
pusha
test
add
rcrb
loop
xchg
les
dec
rcrb
xorl
sub
push
lahf
les
imul
adc
push
add
fildll
xor
push
iret
lods
in
mov
pop
dec
out
popf
cmp
mov
mov
adc
mov
fmuls
push
inc
and
inc
adc
cmp
inc
inc
dec
dec
mov
jecxz
out
arpl
daa
inc
or
test
push
mov
lret
cmp
or
out
ret
push
shrl
xchg
cli
fwait
adcb
mov
pushf
sahf
cmp
jp
lds
sbb
push
add
outsb
cmp
ret
pop
mov
rcl
xlat
xor
fcmovnu
jl
xchg
outsb
gs
add
test
pop
jge
xor
fucom
xor
pop
cmpsl
dec
test
inc
jge
sub
xchg
xor
jne
xlat
dec
sub
insb
mov
push
push
int
xchg
xor
pop
roll
imul
dec
shlb
cld
mov
repz
insb
into
pop
scas
jne
arpl
daa
outsl
fnstcw
ss
bound
stos
sahf
sbb
fxch
jnp
pop
cmpsl
cmpsl
stc
stc
outsb
add
jle
in
xlat
sub
cli
mov
bswap
inc
mov
xor
add
adc
mov
sub
jl
into
and
scas
sbb
cmpsl
xchg
iret
xor
stos
xchg
adc
pusha
mov
mov
push
pop
cmpps
outsl
dec
stos
mov
jns
sub
js
xchg
inc
stc
ja
out
mov
xchg
std
cmp
loope
jecxz
mov
mov
fs
mov
adc
cltd
lock
pop
jg
or
stos
iret
aad
rol
xor
into
jb
push
dec
fsubrp
out
cmp
xchg
mov
lods
shll
mov
aad
test
fcmovu
pop
or
or
orb
imul
xorb
adc
into
filds
mov
inc
xchg
pop
clc
insb
and
loope
sti
mov
and
push
insb
jle
pop
or
ret
aad
mov
dec
loopne
cmp
mov
and
js
outsb
in
call
push
push
pop
lret
xchg
push
imul
movb
fs
dec
cvtps2pd
and
mov
jno
inc
sbb
sub
outsb
xchg
mov
fistl
pop
mov
lods
dec
and
jg
push
pop
inc
cmpsl
scas
add
sub
and
xchg
loop
int3
out
adc
pop
jg
cmpsb
mov
mov
push
adc
movsl
add
int
mov
inc
out
cmc
mov
ficoms
leave
jno
aaa
cs
jmp
dec
sub
cs
push
loop
push
daa
fs
fadds
imul
inc
loop
jl
cmp
fucomip
or
sti
enter
clc
test
imul
cmp
ljmp
icebp
das
sbb
push
pusha
add
mov
push
inc
out
mulb
aaa
cmp
jp
cmp
and
imul
xor
in
fildll
and
jge
les
cmp
xor
data16
mov
movsl
jb
and
xchg
aaa
sub
push
sub
ja
popf
jbe
mov
enter
je
pop
inc
xchg
pop
inc
arpl
repz
mov
cmp
lea
mov
mov
jecxz
adc
or
inc
imul
loop
dec
pop
cmpsl
push
popf
jns
js
ss
jg
enter
mov
stc
jne
pushf
and
aas
outsl
lret
cli
cld
push
je
mov
stos
mov
ja
push
imul
sahf
lods
ljmp
mov
decb
mov
fidivrl
lahf
adc
mov
pop
push
out
in
lods
pop
xchg
addl
xchg
push
add
cmp
pushf
lock
and
loopne
pop
insb
and
mov
daa
push
dec
inc
in
pop
sub
jne
pop
adc
fisttpl
xchg
pop
rorl
leave
sub
sbb
int3
rcrb
and
pop
sarl
jns
push
and
inc
xlat
sbb
xchg
fnsave
pslld
cmp
into
mov
add
loop
movsb
mov
cmpsl
sub
cmp
lcall
or
mov
sbb
jge
sbb
inc
cmp
add
xchg
add
pop
aaa
dec
mov
adc
or
jg
sub
out
pop
mov
xchg
pop
test
jp
popa
mov
rcrl
std
sub
mov
jmp
sbb
jp
dec
iret
movsb
push
pop
mov
pushf
mov
cwtl
xor
sbb
push
test
pop
je
mov
lret
adcb
mov
push
push
into
or
jg
mov
xchg
cmp
and
repnz
or
mov
sbb
adc
xlat
or
mov
push
in
xlat
pop
cs
mov
cli
push
movsl
cmp
pop
jns
push
dec
repnz
fisttps
andb
jae
push
adc
les
dec
pop
fbstp
inc
sbb
add
mov
mov
outsl
icebp
mov
pusha
adc
add
and
mov
xchg
orb
or
test
adc
in
sub
or
repnz
add
in
dec
or
add
xchg
sti
loop
mov
dec
ds
popf
ret
mov
mov
outsl
mov
mov
fldcw
repz
jge
mov
pop
adc
mov
dec
cmp
div
mov
jp
xchg
aaa
adc
scas
and
in
stc
inc
sbb
xor
sub
mov
sbb
mov
fidivrl
mov
fwait
inc
mov
sbb
jle
push
inc
daa
push
lock
jmp
andl
mov
mov
sub
cmpsl
jmp
or
out
adc
xor
fisubrl
imul
pop
iret
or
cld
nop
pop
sub
in
cmp
push
and
cmpsl
loope
andl
cli
aaa
inc
jecxz
andl
shrl
xchg
jl
jl
cmp
in
aas
pop
sub
and
dec
pextrw
xchg
pop
mov
into
xorb
push
mov
pop
mov
lret
mov
repz
sub
jbe
lock
stc
test
jmp
insb
shr
mov
loope
push
mov
cmp
xor
dec
subb
cld
dec
mull
cmp
icebp
and
sahf
in
inc
cld
mov
iret
add
dec
xchg
cli
insb
push
sbb
jae
out
inc
adcl
cli
cmpb
push
clc
int3
mov
inc
fdivrl
mov
nop
pop
sub
enter
cs
inc
pop
jb
xchg
push
ljmp
and
stos
xor
jle
mov
or
imul
or
xchg
enter
or
clc
adc
dec
sub
pop
pop
jle
je
loopne
mov
jge
cmp
xchg
sahf
inc
add
xchg
mov
cmp
push
pop
push
fiadds
jmp
rcr
xchg
mov
or
and
add
xor
les
cmp
sub
test
in
lods
mov
mov
lods
pop
dec
add
sbb
ret
xlat
mov
bound
jo
mov
addl
xchg
imulb
popa
andl
or
add
mov
js
add
or
data16
pusha
insb
insb
cmp
mov
lods
addps
pop
pop
push
mov
inc
or
test
and
adc
leave
push
nop
aaa
ljmp
mov
mov
scas
mov
leave
adc
xchg
lahf
cmp
pop
ftst
pushf
mov
dec
add
adc
daa
inc
aaa
sbb
popa
pop
cmc
outsb
lcall
pop
jge
adc
fstpl
jbe
inc
push
mov
sbb
sub
mov
in
push
dec
sbb
mov
repz
insb
pop
add
dec
push
jo
movsl
das
fstl
sti
orb
mov
fsub
push
cmp
mov
cli
xchg
std
out
ret
and
test
dec
dec
add
dec
mov
pushl
subl
popf
xchg
mov
push
gs
mov
dec
dec
inc
sub
or
add
popf
pop
dec
mov
push
outsb
jno
sbb
aas
jge
rolb
sub
jge
test
movsb
fmull
cmp
cmpsb
iret
mov
testl
mov
outsl
adc
rcl
mov
ret
adc
orl
sbb
jge
das
cmpl
mov
jg
or
cmp
in
and
pop
out
es
adc
dec
pop
mov
mov
rcll
mov
enter
scas
mov
jmp
add
sbb
in
push
popf
dec
cltd
mov
std
mov
push
in
ss
mov
enter
push
mov
push
je
pop
push
xor
mov
sub
inc
pusha
fidivrs
adc
pushf
pop
mov
data16
das
in
mov
movsl
jnp
mov
dec
mov
push
and
mov
push
adc
test
add
mul
cmc
mov
rep
push
add
push
push
push
xchg
xor
cmpsl
sarl
mov
test
xchg
les
or
push
insl
mov
mov
sar
sub
aad
cld
cld
sti
jmp
jno
lret
cli
and
sub
and
and
cmp
push
jnp
call
xor
add
inc
jl
inc
push
jnp
mov
daa
lods
ljmp
jecxz
repz
lahf
in
jmp
stc
add
mov
or
popa
sub
aam
lahf
jae
mov
xchg
fwait
mov
sahf
cmpsl
jl
aas
loope
jns
jg
push
popa
mov
xorl
std
mov
cmp
icebp
jp
shll
mov
imul
sarl
jecxz,pn
xchg
movsl
rorl
push
mov
push
sub
addr16
add
jmp
movb
std
sbb
test
fxch
int3
adc
inc
imul
scas
dec
jbe
jbe
mov
lcall
lret
movsb
mov
push
sub
jb
dec
dec
jne
sub
or
mov
or
std
enter
push
loope
push
sbb
flds
or
xchg
pop
fsts
lock
adc
arpl
shlb
je
cwtl
xlat
cs
push
loope
pop
add
mov
jb
mov
sbb
mov
arpl
jge
or
decb
jbe
inc
faddl
and
push
ret
lock
and
lcall
in
inc
mov
lods
xchg
enter
or
mov
mov
xor
cwtl
mov
loope
loopne
loop
pop
shll
stc
and
movsl
jo
fcomps
aam
bound
inc
jl
push
mov
add
pusha
jmp
inc
or
int
iret
inc
pop
cmc
cs
movsb
sbb
faddl
xor
icebp
sbb
pusha
cld
loopne
adc
icebp
lret
push
mov
popf
push
jg
clc
aas
xchg
es
subb
ss
mov
sub
jl
xchg
xchg
pop
dec
neg
mov
jmp
cld
xchg
push
mov
ljmp
or
jmp
sti
dec
pop
fbstp
adc
mov
cmc
mov
mov
xchg
call
xor
add
scas
pop
xchg
or
dec
mov
inc
jno
push
adc
pushf
hlt
adc
pusha
scas
mov
lock
add
push
arpl
mov
fildl
movsb
not
mov
mov
imul
jb
xchg
xchg
popa
inc
cmp
paddusb
xchg
xchg
push
jne
pop
xchg
test
or
or
iret
lods
sti
call
lods
leave
pop
out
jns
push
and
inc
je
pop
adc
cmp
push
ljmp
ss
sub
fwait
ja
push
test
dec
lahf
scas
xchg
fs
xor
xchg
out
mov
rcrb
ja
test
imul
cmpsl
in
and
pusha
loopne
fnstcw
mov
mov
lcall
scas
cmp
jae
add
mov
push
add
mov
add
imul
leave
loope
test
mov
clc
mov
sahf
pop
ja
movsb
dec
hlt
add
inc
mov
add
dec
lret
push
mov
movsl
fidivl
cmp
rcrl
push
push
jnp
pop
das
mov
inc
mov
cmp
xchg
or
dec
test
adc
sbb
mov
jno
push
pop
aas
and
or
scas
push
icebp
push
les
mov
lods
xchg
mov
xchg
in
push
mov
inc
fcomps
jne
clc
outsb
shr
xchg
mov
inc
inc
icebp
and
mov
imul
mov
and
fistl
iret
mov
loopne
in
lock
in
inc
lods
xchg
jo
jge
pop
add
adc
mov
shlb
rcr
mov
loopne
and
nopl
adc
pop
jmp
js
call
pop
test
mov
dec
xchg
jns
rol
or
pop
scas
pop
movsl
enter
repnz
movsl
out
lcall
out
pop
dec
arpl
jnp
cmp
push
fsts
add
dec
cmpsl
dec
mov
fwait
int
clc
add
stos
inc
mov
or
dec
sbb
fnstsw
flds
fcom
call
pop
mov
adc
out
xor
in
les
or
andl
adc
sti
test
imul
lea
inc
adc
stc
aad
pop
seta
xlat
inc
cmp
jo
push
pop
je
ljmp
mov
mov
hlt
mov
stos
sub
sub
pop
scas
sub
mov
cltd
mov
xor
daa
pop
cltd
mov
hlt
mov
sub
jae
pop
adc
inc
mov
adc
inc
orl
cmpsb
cmp
jg
bound
inc
lods
dec
das
in
mov
pop
mov
and
cmp
aam
pop
cmpsl
cltd
xchg
shrb
lock
sub
test
inc
adc
mov
sbb
pusha
mov
loope
lds
dec
adc
aaa
stc
mov
lret
or
pop
xor
jge
shll
aaa
cmovne
les
cmc
jo
jp
gs
cmp
sahf
test
lods
cmpsl
mov
xchg
pop
int3
popf
jae
sub
js
sarl
cmp
les
sar
sarl
xchg
mov
adc
aas
jmp
cmp
lods
cli
loop
lods
add
adc
ds
test
adc
test
int3
in
xchg
add
bound
stc
shlb
pop
dec
addr16
fucomp
aas
scas
sti
pop
pushf
jecxz
lcall
imul
xchg
or
scas
movsl
mov
fcoms
push
pop
and
fsubr
cmp
lret
into
and
shll
add
pop
pop
es
dec
repnz
decb
mov
jle
sub
sbb
out
jmp
jge
insb
in
pop
and
cmovl
pop
nop
rcrl
adc
and
cld
shrl
aas
adc
jae
push
cmpsb
insl
mov
in
and
cs
and
mov
push
outsb
ja
aam
jne
sbb
mov
adcl
out
and
push
movsb
inc
mov
out
lods
idiv
js
fcmovnb
inc
cmpsl
push
ja
leave
hlt
mov
sub
jmp
out
mov
cli
rorl
add
insb
sub
and
mov
loop
xchg
aad
test
sahf
sbb
pushf
repnz
cmpsl
or
aad
shlb
bound
fnstcw
sbb
add
cmp
inc
popf
cli
add
dec
cmp
sub
xlat
mov
push
push
pop
add
and
in
xchg
lea
shl
sbb
cs
mov
scas
xchg
cmp
int3
popf
ljmp
loop
push
pop
clc
lcall
adc
xor
insb
cmp
scas
aad
jl
jo
stos
in
jbe
or
dec
sub
sub
mov
pop
dec
inc
mov
out
cmpsl
ja
cmpb
jo
adc
or
jl
push
int3
push
je
ret
fmul
pusha
fmuls
pop
sbbb
outsl
and
jecxz
mov
shll
stos
sub
pop
pop
jae
inc
outsl
cmp
pushf
sub
add
dec
mov
mov
jg
sub
mov
xchg
es
lock
xchg
test
or
inc
repnz
bound
aaa
push
enter
and
rclb
fidivl
orl
dec
in
mov
fistpl
in
xchg
and
stc
ja
and
pop
dec
je
sbb
maskmovq
testl
push
or
stc
mov
cmp
dec
dec
lock
mov
inc
mov
mov
filds
pushf
rcr
mov
in
mov
dec
mov
pop
leave
js
cmc
inc
dec
or
popa
push
hlt
jno
xchg
movsb
fdivr
out
mov
out
movsb
push
pop
imull
sbb
xor
push
jnp
mov
or
xor
and
jmp
mov
mov
inc
or
adc
push
call
icebp
pop
mov
enter
iret
jmp
inc
jle
scas
testl
and
push
add
sbb
outsb
idivl
adc
cs
jge
inc
dec
popf
int3
call
xor
add
xchg
mov
mov
in
sahf
push
in
cli
or
jo
sub
icebp
mov
xor
inc
mov
mov
pop
mov
data16
aam
mov
and
xchg
ror
xor
icebp
in
xchg
bound
jne
xchg
mov
pop
repnz
out
test
or
or
ljmp
sub
rcrb
por
sub
or
lret
or
enter
adc
jmp
sti
xchg
sbb
or
mov
xchg
or
jp
xchg
sahf
bound
enter
and
dec
adc
mov
inc
add
add
sbb
push
sub
hlt
rclw
sbb
daa
pop
mov
ret
and
push
nop
dec
jns
call
pop
movsl
imul
sub
push
xor
mov
sub
je
cli
pop
ljmp
mov
cltd
ret
adcl
add
xchg
fwait
mov
mov
push
inc
xchg
rol
adc
and
int
sub
inc
add
call
cmp
mov
jle
fldcw
pop
stos
pop
push
fwait
leave
or
rcll
xchg
movsb
add
jno
jae
cmc
or
pop
and
mov
dec
cmc
dec
mov
xchg
or
jbe
lcall
addb
add
or
jmp
in
jbe
out
mov
roll
in
add
fcmove
inc
cmp
popa
inc
jno
loopne
adc
mov
mov
mov
mov
shl
in
ret
mov
push
lods
sbb
sbb
mov
ljmp
pop
lret
xchg
mov
cli
lahf
in
in
add
xchg
clc
fcompl
test
adc
sub
orb
mov
outsl
and
ja
inc
mov
imul
dec
xor
shlb
test
xchg
cmpsl
in
and
sbb
aad
jae
adc
cltd
push
pop
rorl
xor
adc
mov
fsubs
mov
fsubl
pop
push
sbb
in
pop
xor
movsl
or
adc
int
fnstenv
insb
jp
cmc
xorb
fstpt
bound
xchg
mov
adc
mov
cld
jns
mov
fbld
push
sbb
lahf
mov
test
xor
jnp
cmp
pop
and
mov
mov
fisttps
xor
pop
adc
loop
mov
jno
call
bnd
jno
daa
jne
hlt
cmp
add
fcompl
lods
subl
jno
mov
cmp
addb
mov
pop
lods
mul
pusha
jp
dec
dec
inc
sbb
or
pop
mov
pop
outsl
and
cmp
mov
pop
out
out
pop
dec
ret
jl
pop
faddl
xor
jae
xor
and
dec
jae
rolb
xchg
push
inc
inc
mov
mov
cmp
sub
mov
dec
outsb
jno
cwtl
lret
js
fldt
pop
ret
dec
ret
cmc
push
pop
enter
mov
int3
mov
jae
loop
xor
mov
sar
shl
mov
pop
mov
mov
mov
ljmp
dec
popf
fildll
sbb
mov
mov
and
clc
add
cld
ret
mov
data16
jle
icebp
mov
pop
sub
jo
xchg
mov
insl
and
sub
jb
xlat
mov
out
imulb
sbb
pop
xchg
pop
jecxz
xor
mov
test
xchg
push
or
add
cmp
jle
out
test
mov
xchg
mov
or
mov
roll
push
mov
jns
dec
fidivrl
test
cld
xchg
cmpsl
adc
mov
jnp
pop
xchg
jp
std
cli
add
jl
jb
add
shlb
gs
iret
jo
mov
lock
ljmp
outsb
std
mov
jp,pt
pop
fdivr
xchg
pop
ret
outsb
cmp
arpl
imul
repz
or
mov
repnz
xchg
std
les
notb
je
mov
shlb
jb
lds
loope
idivl
insb
cld
add
das
jo
popf
add
and
or
mov
cmpsl
mov
sti
repnz
xchg
dec
jb
lods
and
popf
shll
push
cmpsl
pop
mov
xchg
jl
in
sbb
in
inc
jae
or
fstpl
xchg
sbb
pop
int3
les
in
insb
mov
or
enter
fisubrs
xor
pop
rcrb
mov
popa
and
in
cmp
xor
and
outsb
test
lods
int3
push
jae
cltd
hlt
mov
sti
insb
mov
and
fdiv
in
xor
in
xchg
and
add
sarl
and
mov
in
xchg
xchg
mov
xor
ljmp
pop
jnp
push
imul
cld
shlb
and
mov
shll
push
jl
or
mov
arpl
push
fidivs
jle
push
loope
pop
ss
xor
idiv
add
aaa
iret
xchg
mov
out
xor
or
dec
test
repz
cmc
cwtl
or
sub
sbb
push
or
mov
mov
dec
je
adc
add
sbbl
xor
add
cld
push
jnp
lods
ds
push
imul
je
call
pop
sub
or
in
pop
arpl
test
xchg
stc
cmp
mov
jp
cltd
add
in
inc
dec
mov
add
pop
cmp
inc
inc
mov
fmull
bound
jecxz
rorb
or
sbb
enter
ja
adc
lds
je
rorb
cmc
xor
push
sub
les
push
movsb
add
mov
les
jb
push
push
add
int
inc
xlat
stos
dec
test
dec
or
hlt
add
xchg
dec
into
lods
mov
fwait
sti
mov
push
in
outsb
hlt
sub
pop
adc
out
lods
fidivl
pop
inc
in
inc
fldenv
fstl
ret
ret
pusha
test
rcrl
pop
pop
aad
mov
add
jge
in
fbld
pop
pop
sbb
mov
fs
xchg
std
aaa
insl
mov
std
mov
and
movsb
and
push
test
jne
notl
push
fistps
push
in
imul
aas
or
push
sub
add
pop
dec
push
mov
roll
sbb
sub
je
cmp
cmp
inc
sub
push
das
cltd
sbb
cmp
mov
shl
int
jg
test
sti
mov
insl
dec
push
test
sub
loope
fwait
movsb
and
xchg
xor
pop
les
mov
mov
lods
add
ret
lahf
int3
cmp
xchg
xlat
dec
idivl
scas
mov
ds
push
outsb
mov
or
jno
scas
fwait
inc
jo
xchg
stos
sub
cmc
cld
push
mov
das
cmp
or
fidivrl
test
ffreep
add
lret
into
pop
leave
lock
lods
add
testb
sbb
iret
fistl
lcall
inc
fcoml
sub
and
sbb
iret
dec
fisttps
push
or
call
jbe
ret
fimull
lods
jmp
pop
icebp
das
jge
shll
mov
bound
push
cmp
int3
push
or
pop
jecxz
cmp
or
mov
loopne
cmp
jne
daa
xchg
dec
aas
mov
in
xor
inc
shll
aas
pushf
mov
divl
mov
inc
jnp,pt
insb
lahf
sub
push
add
xchg
inc
dec
adc
pusha
xchg
in
cmp
pop
fwait
mov
jns
cmp
cmp
enter
inc
dec
mov
dec
jae,pt
icebp
ds
lods
inc
mov
ja
imul
and
movl
xor
fisubrl
aas
xchg
cli
fldcw
lret
cmp
and
in
rcr
js,pt
mov
dec
shl
sbb
push
add
dec
cmpsb
cli
loope
or
call
imul
xchg
inc
or
lods
insl
cmpsl
sub
add
addr16
add
adc
lods
int3
flds
adc
mov
dec
fisubrs
call
int
mov
pusha
leave
inc
lret
pop
lods
stos
jae
mov
jno
cmpsb
lret
test
bnd
pop
gs
arpl
rol
stos
repnz
jno
xlat
cmpb
scas
rcll
cmp
insl
xlat
dec
sti
test
jne
push
push
push
push
int
scas
sbb
dec
pop
inc
test
push
addr16
adc
adc
inc
add
mov
inc
xor
xor
mov
or
add
std
jbe
mov
adc
arpl
dec
lods
inc
inc
add
sub
xchg
fiaddl
rcrb
xchg
xor
stc
or
jge
inc
bound
inc
cmp
mov
mov
std
pop
xchg
xchg
test
adc
mov
mov
jmp
lcall
std
into
repz
xor
and
xchg
push
xlat
test
jge
pop
push
inc
dec
cmp
mov
and
les
or
push
in
fnstsw
inc
test
into
idivl
dec
rorl
int3
sahf
xor
shr
js
adc
jns
pop
lods
jle
mov
mov
test
aaa
dec
push
rol
mov
xchg
add
mov
lods
jmp
sub
sub
sub
pushf
xchg
push
push
push
dec
push
ljmp
clc
dec
mov
loope
out
dec
xor
test
es
push
shl
subl
xlat
fisubl
adc
mov
lret
fldl
cltd
hlt
ds
mov
stos
mov
daa
ds
lcall
mov
fistl
js
add
aaa
repnz
mov
subb
dec
iret
inc
ficoms
sbb
loope
push
outsl
pop
sub
addr16
flds
jmp
and
xchg
gs
dec
lea
xor
cmp
mov
pop
push
dec
iret
into
shll
and
dec
jp
repz
push
lret
inc
push
mov
cmpsb
mov
lods
push
jno
sahf
mov
scas
pushf
or
adc
sbb
cmp
push
dec
cli
mov
and
pop
ret
add
sbb
ret
out
mov
dec
sub
jle
jo
cmp
fiadds
push
fstpt
loopne
dec
xchg
rcll
cmp
ds
icebp
push
fimuls
pusha
and
test
or
jno
mov
push
std
pusha
and
fwait
enter
rcrl
enter
shll
mov
test
push
sub
sbb
imul
add
sub
pop
pusha
movsb
xchg
int3
call
inc
sarl
mov
int
fucomi
xchg
push
loop
cmp
xchg
xchg
cltd
mov
sti
push
push
sbbl
in
mov
inc
enter
inc
adc
push
popf
clc
cmpsb
xchg
adc
pop
mul
divb
xor
xorb
cmp
adc
mov
push
loop
dec
js
xor
ss
in
imul
sub
sahf
xchg
mov
notl
leave
push
mull
fidivrl
ja
in
das
lods
push
mov
scas
roll
xor
sbb
adc
push
arpl
in
into
out
cltd
or
je
and
out
pop
pusha
dec
cmp
xchg
inc
adc
test
cmp
and
inc
jne
cmp
sbb
mov
je
in
lods
dec
jmp
mov
mov
jo
dec
mov
adc
inc
int
movsl
push
lcall
pop
cld
cmp
sbb
out
xchg
or
mov
xor
nop
mov
mov
test
mov
ja
pop
mov
out
mov
xchg
add
stos
stos
dec
inc
fst
add
outsb
test
fs
es
xchg
and
out
xor
je
mov
repnz
sbb
push
shrb
div
mov
push
mov
sbb
push
sub
aam
adc
mov
mov
daa
jl
adc
adc
je
mov
cmp
ss
test
or
sub
cld
ret
jns
fstps
sti
or
sbb
hlt
add
stos
fnstcw
push
arpl
fidivrl
jmp
mov
ror
pop
jecxz
test
movb
push
daa
dec
sahf
sahf
dec
pop
dec
lds
pusha
xchg
pusha
leave
neg
mov
cwtl
fs
mov
lds
lcall
idiv
cmp
add
mov
cmp
add
pop
dec
push
std
imul
lahf
inc
nop
in
nop
ds
push
cmpl
roll
pop
cmp
mov
popa
ret
stc
or
mov
mov
lds
xchg
or
mov
and
rcr
js
mov
out
lds
movsb
pop
and
xor
sahf
test
flds
sub
cmc
orl
xchg
adc
sbb
pop
add
xchg
xchg
or
mov
fwait
dec
lea
fidivrl
adcb
pop
mov
jg
jge
push
sbb
adc
push
pop
cld
and
sub
sub
inc
cld
jns
stos
mov
cmp
inc
sbb
addr16
or
mov
and
cwtl
hlt
cmpsl
js
push
out
loope
cmp
aad
or
insl
xchg
lea
fsubl
mov
and
stos
inc
imul
dec
stos
add
mov
je
sub
xor
nop
mov
fwait
or
mov
repz
mov
mov
mov
xor
pop
mov
pop
xchg
mov
pop
insb
iret
ss
adc
and
sti
rclb
loope
xchg
loopne
icebp
dec
stc
xchg
aaa
and
or
lods
leave
pop
sub
lods
pop
imul
mov
je
xchg
sub
mov
mov
data16
loopne
ja
popa
cli
das
jecxz
inc
xchg
add
sbb
in
pop
inc
sub
ss
pop
test
inc
inc
loopnew
lret
out
mov
mov
imul
cmp
adc
add
jns
lret
movsl
jns
repnz
push
data16
inc
lahf
or
and
aad
int
jecxz
cmpb
icebp
sbb
ja
push
pop
shll
aad
cmp
movsl
in
dec
cmc
inc
xchg
jbe
dec
fs
pushf
cmp
std
or
movsb
push
fidivl
ss
or
insb
jg
push
pusha
es
mov
cli
imul
xchg
pop
int
loope
orb
rolb
push
xchg
fistpl
fstl
ljmp
mov
inc
stos
andb
push
mov
aas
pop
jb
repnz
xchg
adc
inc
fildll
push
pop
insb
add
jg
and
pop
jmp
stos
or
pop
popf
enter
or
fsts
adc
xor
outsb
movsl
mov
xor
insb
daa
mov
mov
or
inc
mov
js
pop
out
insb
cli
loope
jl
bound
xlat
incb
mov
jno
and
out
inc
lret
outsb
push
xchg
add
mov
push
addb
clc
inc
lea
mov
add
lock
arpl
rcll
pushf
daa
out
xchg
pop
ret
sbb
out
mov
hlt
cltd
out
ficoms
cmpsl
rorl
sub
xchg
xchg
mov
fwait
out
ret
fwait
dec
jnp
pop
cmp
lret
sub
mov
shlb
out
dec
mov
and
test
pop
and
ret
cltd
adcb
cli
lret
das
sbb
loope
rcrl
fst
jle
push
fnsave
lods
add
mov
dec
sbb
cmp
popa
scas
pop
or
mov
xchg
dec
clc
sub
repnz
test
cmpsb
add
cmp
orl
sbb
or
add
jp
inc
out
shll
pop
cltd
hlt
pop
inc
inc
jle
and
jmp
xor
ja
sub
mov
pop
mov
pop
add
mov
aaa
xlat
mov
sub
or
outsl
xchg
outsb
pop
ret
movsl
or
mov
mov
xor
movsl
lods
xlat
es
pop
int
in
sti
movsb
cli
inc
xor
cmpsl
popa
and
clc
xor
add
cmp
xchg
xchg
xchg
or
push
cmp
scas
daa
or
mov
jp
scas
xchg
push
or
cld
clc
jae
aaa
lret
stos
ret
jnp
lret
pop
jb
pop
mov
mov
cmp
and
outsb
movsl
push
mov
ja
cs
movsb
rorb
jmp
clc
in
xor
cmpl
addr16
xchg
ljmp
out
cmpb
outsl
sarb
roll
dec
inc
mov
xor
jno
imul
push
jmp
test
add
pop
stc
inc
xor
push
pop
ds
insb
adc
mov
add
in
mov
retw
jmp
fiaddl
add
pop
sub
fwait
out
rcrl
orb
push
sbb
ret
mov
adc
addr16
and
rcl
shll
enter
push
test
mov
pushf
mov
jmp
adc
push
mov
xor
dec
jecxz
in
xor
lods
arpl
or
or
loopne
test
pop
sub
adc
push
lret
lods
bound
jbe
lock
pushf
and
cmp
mov
loopne
and
or
cmp
js
lea
ss
or
or
inc
dec
adc
in
or
dec
icebp
clc
mov
sbb
dec
js
mov
inc
stos
or
sub
pop
in
decb
pushl
out
mov
enter
cld
mov
loop
push
cmp
in
movb
out
das
inc
mov
push
or
add
mov
outsb
dec
cmpsb
imul
aas
loopne
adc
roll
push
je
sbb
dec
data16
out
xchg
ja
adc
loope
lods
cld
popf
lret
pop
aaa
dec
ret
ret
mov
and
rclb
mov
iret
out
test
jp
pop
push
aam
mov
mov
dec
sub
das
mov
jns
cld
ss
jge
jo
lea
bound
or
mov
test
je
test
repz
adc
adc
in
and
mov
push
push
add
iret
lret
fmull
out
and
dec
xor
xchg
mov
pop
xor
mov
lret
xor
inc
sbb
and
js
mov
mov
dec
cmpsl
push
sti
in
mov
mov
jb
insl
mov
adc
fistl
sub
lret
mov
add
sbb
insl
cmp
hlt
push
out
mov
mov
push
hlt
xor
push
push
mov
inc
push
mov
cltd
daa
xor
ret
cmpl
push
sbb
and
mov
or
jnp
enter
sbb
pop
dec
cld
xchg
mov
adc
les
iret
fwait
cmp
cmc
dec
lret
andl
sub
fldl
pop
push
push
jns
bound
inc
pop
and
lcall
out
frstor
aam
repnz
pop
enter
pop
and
js
and
push
cwtl
movsb
dec
jecxz
out
cmp
pusha
pop
nop
mov
int3
xchg
cmp
rorb
dec
in
mov
int
nop
xor
pop
inc
mov
je
fdivrs
fisttpll
call
xor
and
pop
pop
pushf
lods
ljmp
test
xchg
mov
sub
pop
or
loop
insl
stos
hlt
inc
jle
fcomp
sbb
jl
mov
xchg
sbb
jb
adc
cmp
or
add
push
xor
xchg
nop
fucom
loope
roll
inc
pusha
fmull
jae
scas
call
stos
fmull
xchg
dec
and
movsb
add
cmc
shlb
sub
add
insb
aas
pop
aaa
stos
pop
adc
or
pop
dec
aaa
jl
mov
cmp
inc
xchg
sub
mov
xchg
sub
push
js
in
inc
or
int
or
dec
lret
mov
push
xor
jo
insl
mov
stos
xchg
mov
js
jno
pop
xchg
inc
cli
and
bound
fdivrs
repnz
js
movsl
pop
xor
lea
in
or
cmp
jb
fwait
ss
enter
aam
inc
push
ret
cs
lods
inc
xor
sbb
and
test
jg
aas
fsts
lods
sbb
xlat
arpl
cmovo
fidivrl
jae,pt
frstor
movsl
mov
mov
pop
outsl
pop
jge
inc
stos
cmpsb
dec
pop
push
psrlq
and
inc
fdivs
mov
orl
adc
jl
push
cli
pop
rorb
add
roll
push
cmp
sub
pop
mov
sar
mov
xchg
xchg
clc
aas
sbb
rcll
mov
mov
mov
mov
adc
jg
jno
insb
cmpsl
and
outsl
hlt
inc
test
lock
fnsave
xor
sbb
aas
xor
push
loop
sbb
xchg
hlt
inc
sub
cli
repnz
or
out
mov
cmc
pop
test
mov
and
enter
cmc
pop
int3
adc
add
push
pop
mov
out
dec
add
aam
or
shrl
movsb
push
and
lock
enter
mov
fwait
jnp
mov
sub
dec
dec
loope
ret
stos
jge
sub
mov
push
or
xchg
outsl
or
xchg
pop
ds
mov
push
mov
or
pop
xchg
or
mov
aam
add
out
sbb
test
and
mov
dec
push
push
pop
dec
sub
xchg
adc
mov
gs
std
cmp
or
repnz
movsl
and
cwtl
sub
pop
mov
dec
cli
rorl
mov
pop
sub
xor
bnd
and
leave
imul
jne
outsb
push
add
fdivs
and
aas
test
and
rcrl
mov
js
mov
push
mov
mov
lret
sbb
out
sahf
mov
xchg
and
jb
out
dec
pop
mov
pop
xchg
jmp
lock
jg
mov
push
push
sub
push
or
mov
mov
out
cmpsl
loop
lock
les
orl
add
push
jbe
xchg
mov
jo
ljmp
lret
xchg
je
outsl
inc
popf
cmpb
jp
jmp
das
jae
mov
fstl
leave
cmp
dec
add
cmp
in
xchg
inc
nop
lea
add
aam
pop
outsb
vandps
and
sti
xchg
mov
test
clc
sbb
dec
pop
xchg
enter
faddl
dec
lahf
aam
add
pop
repz
pop
add
dec
push
push
movsl
fistpl
add
mov
aas
test
or
fiadds
fs
jbe
test
xchg
ljmp
pop
sub
imul
loopne
outsl
and
mov
roll
sub
mov
sbb
callw
add
or
mov
sub
pusha
sbb
jne
sub
sar
or
dec
adc
sub
pusha
jne
outsl
lahf
or
je
or
sbb
aaa
mov
lods
loop
aas
in
out
pop
pop
scas
gs
fwait
in
aas
movsb
mov
xor
mov
imul
or
cltd
inc
scas
or
mov
test
pop
pop
mov
jp
movsl
in
out
xor
add
push
inc
push
sub
dec
jae
repnz
outsb
add
enter
mov
jge
cmpsb
insb
popa
pop
or
push
test
add
cmc
add
nop
jno
inc
pop
inc
daa
xchg
inc
push
push
out
inc
fs
orl
push
lock
mov
aaa
lea
xor
out
enter
push
mov
jg
mov
icebp
mov
xchg
add
mov
hlt
cwtl
testb
movsb
movsl
adc
aas
lcall
mov
mov
push
pop
xchg
dec
add
mov
cmp
ret
add
mov
ds
fmull
xchg
push
mov
sub
pop
push
fcmovnbe
test
push
int
cmp
and
mov
insb
dec
test
movsl
outsl
sub
and
push
popa
inc
cmp
out
lods
add
cmp
mov
aam
out
fldl
fs
adc
addr16
imul
or
xchg
inc
jecxz
lcall
add
lret
mov
cmpsb
mov
fs
inc
pop
push
mov
jae
mov
fnstsw
pop
pop
aas
mov
cmpsb
mov
pop
aas
pop
or
pop
lahf
int
push
popa
push
jo
leave
lods
stc
and
bound
cmp
mov
push
or
or
xchg
mov
sub
shlb
int
cwtl
call
inc
xchg
cld
fdivr
jno
mov
mov
loopne
pop
cmp
iret
lods
add
outsb
jnp
mov
cld
mov
cltd
push
sbb
sbb
mov
pop
negl
cmp
jmp
fs
cmpsb
jl
add
dec
outsl
sub
fisubs
inc
testl
push
sahf
mov
fistpl
cltd
xlat
aam
call
fcoms
mov
scas
mov
cmp
scas
nop
cld
in
lret
rcrb
cmp
push
repnz
dec
and
mov
pusha
pop
push
into
sbb
arpl
dec
bound
mov
mov
and
dec
cmp
into
inc
push
sub
push
jecxz
pop
fsubrl
cmp
loope
jmp
sbb
xor
mov
cltd
pop
jbe
rorl
ss
sub
fisttps
loopne
insb
push
scas
mov
out
lret
ret
jne
mov
arpl
push
aad
jge
sub
cmp
fidivrs
pop
lcall
and
ss
ljmp
rcr
lcall
xchg
sub
push
inc
add
fsubp
ljmp
jl
xlat
daa
jnp
loop
ds
daa
push
cmp
aas
pusha
loop
pop
xchg
inc
js
cmp
fsub
es
adc
sub
repz
jne
jo
mov
jae
push
popa
sbb
sub
cmpsl
jle
and
mov
loopne
or
mov
push
push
outsl
jge
sbb
mov
lods
fisttps
dec
repz
or
pop
mov
or
in
daa
mov
int
out
mov
ss
jae
push
mov
add
ret
mov
or
lock
jnp
cmp
mov
bound
das
or
cltd
cwtl
jbe
push
pop
mov
daa
mov
insl
adc
jmp
sbb
out
in
sbb
test
std
dec
jbe
xor
sub
mov
js
mov
mov
mov
aas
add
gs
add
mov
xorl
out
fsts
test
lods
jno
sub
ds
push
jge
cwtl
pop
imul
inc
jne
xor
jnp
loop
mov
jle
pop
xchg
mov
rcl
dec
dec
or
push
testb
shl
sti
push
fcoml
jp
lods
fsubl
dec
lcall
out
lods
clc
and
ds
jmp
mov
and
rcrl
inc
call
or
cld
sbb
repnz
pop
push
ret
sbb
adc
hlt
das
fs
cwtl
jmp
test
jae
sub
push
fadd
cltd
imul
jle
xor
fs
jl
add
and
sbb
dec
loop
fcomps
fwait
add
js
jl
xor
jmp
mov
add
in
adc
xchg
pop
sbb
push
adcl
pop
das
int
movl
sar
xchg
cwtl
sarl
add
dec
xchg
in
sub
inc
fimull
scas
inc
push
pop
ret
sbb
push
stos
mov
adc
fidivl
rclb
push
out
mov
enter
push
int3
mov
xor
mov
les
in
mov
call
adc
push
mov
icebp
sub
add
jmp
lock
adc
cmp
enter
aam
push
test
in
ja
jl
popa
daa
fs
jnp
pop
fs
bound
sub
gs
insb
xor
sbb
xchg
jmp
call
cmpsl
dec
out
into
sbb
pop
jecxz
mov
fistps
bound
jmp
das
imul
jno
lods
sbb
mov
sbb
int3
je
add
sub
call
push
xor
cli
xor
gs
popf
call
cmpsb
xchg
mov
fistps
and
jp
adc
xor
or
adc
shll
push
add
fsubrl
or
push
aad
xor
ja
adc
sub
jge
out
sbbb
clc
xchg
xlat
sbb
jle
xchg
loope
test
ss
jge
inc
xor
sub
movb
aaa
sbb
or
add
es
adc
out
insb
and
adc
push
loope
xchg
repz
xor
imul
call
ja
das
sbb
adc
pop
pop
mov
icebp
sub
in
data16
movsb
jb
mov
sub
push
loope
lock
aaa
mov
jnp
jnp
sbb
jbe
lahf
arpl
in
arpl
out
mov
or
inc
ja
adc
jno
or
aaa
push
pop
sub
and
ds
push
mov
or
xor
jbe
or
fcoms
out
adc
call
mov
add
addr16
and
aam
mov
lea
mov
arpl
mov
std
pop
mov
ja
cltd
cmp
loop
sub
rcrl
sub
sbb
push
imull
xchg
movsb
rclb
adc
push
int
lea
inc
or
stc
popf
xchg
cmpsb
lret
ret
xor
mov
test
cltd
jnp
bound
xor
in
mov
mov
and
mov
jo
mov
sub
jno
test
or
ss
jg
sarb
addr16
pop
nop
cmp
adc
mov
dec
bsf
xchg
adc
xchg
pop
ficompl
rorl
movl
jbe
mov
loop
sti
adc
dec
jno
jge
sub
ja
xor
cmp
dec
xor
add
jecxz
jns
popf
adc
dec
dec
jne
sub
test
ljmp
fcom
pop
adc
sub
mov
push
sbb
rcr
and
js
shll
sti
test
mov
inc
icebp
pop
jmp
push
int3
dec
cmpl
pop
mov
dec
lret
cmpb
ljmp
aas
sbbl
jo
and
push
out
or
loope
jae
inc
mov
push
mov
jp
out
adc
clc
inc
xor
std
push
mov
inc
sbb
push
inc
jg
bound
xchg
scas
mov
jge
xor
aad
cltd
or
sub
imul
filds
inc
push
popf
pushf
cmc
andl
in
cmp
in
loope
or
lret
jbe
and
aaa
test
mov
sbb
add
les
loopne
xor
push
es
iret
sub
xchg
and
shrl
and
aam
mov
add
push
xlat
fiadds
push
and
enter
jbe
adc
les
mov
and
or
insb
dec
push
ss
cmp
lock
sub
and
imul
sbb
hlt
dec
or
jno
push
sbb
in
fs
loopne
or
icebp
icebp
out
movsb
jl
imul
mov
insl
sub
inc
xchg
mov
add
add
rclb
fnsave
int
push
les
mov
mov
loope
movsl
cld
test
xor
daa
jb
mov
lcall
cmp
fcoms
xchg
dec
mov
movsb
adc
push
adc
addr16
das
cmp
jo
add
push
inc
sbb
adc
pop
pop
clc
sbb
sub
popa
arpl
imul
push
gs
fwait
lcall
sub
cmp
test
out
imul
lcall
mov
int
in
loop
jb
push
lock
test
and
rclb
mov
repz
push
lret
inc
lea
pop
or
stos
mov
movsb
cmpsl
dec
and
enter
xor
or
mov
data16
int3
xor
mov
lcall
or
pop
flds
fs
clc
push
pop
xor
gs
insb
jnp
pop
aaa
inc
or
dec
inc
daa
or
mov
cli
ss
bnd
or
mov
mov
mov
mov
test
sarl
insl
adc
cli
dec
add
js
push
mov
mov
jmp
inc
dec
and
loopne
fmulp
imul
call
adc
std
pusha
lods
or
mov
fcmovnb
xchg
loop
dec
sbb
notl
mov
and
dec
xlat
aas
daa
inc
xchg
cltd
push
cmc
xchg
xor
xor
in
movsb
and
shr
enter
out
inc
int
inc
pop
lds
scas
xor
movsb
stos
xchg
mov
mov
stos
push
mov
jo
mov
nop
jo
je
jmp
xor
jle
ds
inc
loop
test
mov
or
adc
or
mov
or
hlt
je
ljmp
inc
add
pop
hlt
in
push
fcomps
mov
mov
jl
or
and
lods
cmp
push
test
inc
mov
adc
cmp
xchg
rolb
inc
add
lea
stc
dec
daa
mov
in
and
roll
jg
pop
scas
sbb
jae
sti
ds
lds
dec
js
imul
movsl
push
mov
jb
imul
sub
or
jnp
dec
jo
jmp
mov
xchg
dec
faddp
xlat
xor
xchg
push
or
out
push
dec
and
add
push
or
xchg
or
mov
fstpt
mov
push
mov
inc
ljmp
mov
add
out
lods
les
inc
or
es
sbbb
gs
pop
rcr
jecxz
xchg
shrb
test
ljmp
into
add
and
lret
in
adc
or
cs
cld
push
fidivs
cmp
xor
xchg
pop
xor
xor
rcrl
sti
lods
jne
mov
inc
sub
mov
inc
or
out
jge
sub
lret
rcrl
push
lock
ds
sahf
push
aam
stos
jl
adc
dec
xchg
jmp
mov
xchg
stos
mov
jecxz
das
jne
or
sahf
jo
sti
add
xor
insb
cmp
adc
cwtl
xchg
test
adc
dec
inc
fists
jo
sub
push
sbb
ds
insb
into
out
jmp
jle
in
push
mov
xor
dec
lods
es
mov
arpl
clc
jp
lea
xor
cmpsl
loopne
loopne
minps
pop
fcoms
das
hlt
mov
mov
sub
int
mov
jae
icebp
iret
adc
mov
or
out
lock
cmp
push
adc
hlt
fildll
scas
clc
cmp
jecxz
pop
fbld
xlat
push
mov
mov
add
sub
mov
call
test
sbb
ljmp
add
test
adc
jecxz
lds
into
push
add
dec
inc
mov
cmp
adc
bound
ret
int
mov
shll
mov
jmp
addr16
ss
adc
adc
dec
cld
call
sub
cmp
and
scas
aas
pop
jne
sahf
inc
mov
add
mov
mov
aas
movb
or
cmpsb
addr16
and
push
lea
fiadds
and
pop
push
jg
out
or
call
cmp
sub
sahf
stc
jmp
xor
push
sbb
faddl
lods
sub
clc
in
fistl
mov
mov
ljmp
rcrl
hlt
dec
mov
push
pop
aas
inc
insl
add
movsl
adc
pusha
bound
addb
imul
xor
push
xchg
mov
cmp
in
mov
pop
adc
adc
mov
mov
mov
mov
jb
push
into
mov
insb
or
jmp
in
negl
ja
xlat
jnp
and
mov
loopne
dec
es
sbb
int3
out
mov
cld
mov
movsb
adc
lock
sub
pop
jmp
dec
fwait
jnp
and
notb
adc
pop
pop
in
stos
sbbb
mov
stc
in
in
fisttps
not
shl
jo
fdivs
inc
pop
shl
test
ret
mov
fldl
mov
xchg
lods
jo
ja
subb
lods
or
jb
lea
cltd
adc
push
add
jg
inc
mov
pusha
rorb
mov
xchg
xchg
out
mov
decb
rclb
cmp
push
es
push
jae
mov
js
mov
icebp
xor
jbe
loopne
jb
sub
js
adcl
dec
cmp
int
in
jae
out
into
lds
xor
jae
xchg
in
and
xchg
and
sbb
fstps
in
popf
jb
fsts
test
stc
mulb
mov
imul
es
rorl
in
or
fnstenv
fildll
sarb
lods
push
or
cli
fisubrs
rcrb
mov
or
mov
iret
sub
jns
mov
cli
lods
sbb
jecxz
stos
adc
sbb
or
sub
jmp
xchg
ja
mov
dec
fistps
rolb
sbb
int
sbb
adc
mov
icebp
lock
clc
add
mov
js
jnp
loopne
outsb
clc
pop
mov
mov
mov
mov
mov
inc
inc
sub
add
or
inc
sub
pop
pop
inc
inc
push
mov
mov
outsb
ret
mov
cwtd
jbe
cmp
jo
fisubrl
pop
negb
pop
mov
sub
lods
mov
outsl
xor
cmpsl
xor
cmpb
pop
call
inc
in
test
into
arpl
pop
xchg
pop
call
pop
push
xchg
xor
xchg
in
aaa
out
in
enter
fbld
mov
pusha
insb
xor
xlat
test
pop
andl
lcall
leave
mov
je
xor
inc
bswap
std
in
ficoms
faddl
nop
pop
repnz
push
or
sub
add
mov
repz
sti
scas
jns
nop
jle
imul
sub
xor
std
xchg
xor
fsubr
mov
out
inc
xchg
dec
mov
pop
add
inc
stc
lret
push
lods
mov
stc
mov
outsl
negl
jmp
fistpl
inc
mov
imul
clc
mov
mov
fcomip
out
sub
addr16
adc
cmpsb
mov
or
imul
outsl
sbb
test
pop
test
loopne
data16
xchg
xchg
cmpsb
orb
push
pop
or
test
mov
scas
outsl
imul
xor
inc
loope
cli
imulb
mov
das
mov
test
mov
or
sub
loopne
loop
xacquire
enter
dec
int3
scas
rcl
push
lret
cmp
aaa
aad
xlat
inc
xor
xchg
mov
xor
mov
cld
fidivrs
dec
idiv
adc
cltd
int3
xor
adc
test
xor
xchg
push
jecxz
scas
jbe
into
sbb
add
xor
xchg
xlat
adc
in
mov
xor
mov
adc
es
les
inc
push
xor
subps
and
imul
dec
mov
dec
push
stc
xchg
jae
popf
add
inc
call
mov
xor
push
rolb
push
xor
test
dec
hlt
mov
jno
pop
jge
stos
dec
sbb
es
decl
je
jne
rcll
fistpll
fiaddl
int3
les
adc
cmc
mov
loop
repnz
and
daa
in
inc
mov
out
push
sbb
fs
in
or
jns
aaa
jmp
jo
adc
ljmp
mov
test
aas
inc
andb
mov
xchg
imul
or
daa
in
jbe
subl
mov
xchg
stos
jae
jmp
lret
adc
lcall
rorl
pop
inc
add
mov
sbb
lods
xor
pushf
fists
jbe
lahf
pushl
aas
cs
stos
cltd
mov
cmp
inc
pop
into
mov
pop
out
lea
lret
ljmp
push
jl
lods
inc
mov
mov
in
xlat
int3
leave
mov
xor
dec
dec
add
sbb
pop
scas
or
push
adc
cld
fists
idivb
cmpl
pop
je
mov
outsb
ja
fildll
inc
sub
fs
xchg
aaa
mov
sub
push
in
scas
mov
out
jecxz
hlt
mov
daa
popf
sbb
and
pop
loop
loopne
jbe
or
sbbl
mov
dec
es
adc
inc
xor
or
ret
aas
lods
repz
xchg
sub
xor
addr16
in
faddp
adc
adc
and
xchg
inc
fisttpl
imul
std
movsb
mov
pop
das
sbb
sub
mov
xlat
pop
cld
push
pop
lret
rol
dec
jno
lcall
dec
xor
add
inc
and
mov
fst
jns
add
push
mov
xor
push
outsl
sbb
mov
stos
adc
enter
pushf
sbb
jbe
ljmp
repz
push
test
ficomps
pop
movsb
test
xlat
add
lea
dec
fcmovbe
call
ja
mov
inc
test
rcl
fcoms
fisttps
xor
push
shl
cmpsl
mov
add
add
add
or
or
inc
repnz
out
lahf
jge
fisubrs
fdivl
fdivrl
add
mov
gs
and
shl
shrl
cli
mulb
or
mov
and
testb
adc
jae
dec
rcll
imul
imul
lahf
lcall
dec
sub
jns
dec
jb
arpl
stos
cs
clc
repnz
rclb
out
adc
jne
push
cltd
out
arpl
imul
or
out
jl
test
xor
cmc
testb
push
pop
push
sbb
in
test
push
lret
mov
scas
addr16
push
push
int3
push
xor
into
sti
mov
jmp
xor
dec
hlt
pop
leave
mov
push
or
xor
xorb
aas
aad
ret
xor
fdivs
xchg
or
jnp
inc
and
lret
dec
pop
hlt
xchg
and
inc
mov
push
insl
sub
loopne
sub
pop
insl
ds
inc
xchg
mov
pop
stos
dec
cs
lret
mov
leave
lods
insl
add
or
cmc
push
adc
push
dec
push
movsl
sub
or
pop
jno
or
mov
lret
in
cmpw
fdivrl
push
xor
push
push
cmpsb
imul
jne
lret
jne
and
mov
xchg
push
or
add
addr16
adc
pusha
pop
out
push
lret
push
sub
fisttpll
pop
orl
xor
jmp
sub
mov
inc
test
and
sub
in
mov
sub
out
push
sbb
js
push
jge
shll
add
cli
mov
mov
andb
mov
cltd
mov
ss
int
loopne
mov
test
sub
pop
js
mov
in
jne
jbe
aad
xor
clc
out
jmp
sbb
imulb
outsl
push
dec
adc
pop
lock
div
aas
pop
mov
enter
add
sub
or
out
subb
sbb
cmp
lret
adc
xchg
cmpsl
ficoml
flds
xchg
adc
pop
and
xor
push
and
arpl
or
fldt
rolb
mov
xor
mov
cli
addl
shll
push
mov
les
and
cld
loop
or
and
jno
or
sbb
repz
ret
shlb
in
adcl
xchg
and
mov
dec
mov
add
xlat
add
in
out
daa
popf
and
pop
sti
mov
fs
das
repz
movl
pop
scas
fisttpl
test
popf
fsubrp
sub
or
fwait
ret
jmp
jbe
mov
in
add
push
idivb
out
inc
push
and
cmp
pop
and
decl
xchg
mov
ss
out
mov
lds
adc
mov
leave
jns
sbbl
xchg
inc
adc
xor
push
add
sub
jecxz
in
adc
push
dec
ljmp
dec
add
and
fldcw
lods
fiaddl
cwtl
or
jmp
es
ss
and
enter
jae
dec
mov
adc
stos
push
adc
stos
pop
arpl
sarb
out
nop
movb
or
loope
fs
xchg
sbb
push
push
lahf
icebp
inc
lods
mov
shr
xchg
popf
or
add
loop
fists
test
lcall
fldl
pop
int3
cmp
jg
mov
rcl
lds
fwait
jnp
movsl
xor
mov
mov
lea
ja
test
sarb
pop
or
aam
add
sar
imul
xor
rcrb
sub
xchg
aaa
xchg
add
ret
int3
mov
or
mov
arpl
repnz
aam
cmpsb
lods
dec
adc
push
test
clc
mov
xchg
sub
cmpsl
test
pusha
xchg
lods
xchg
push
enter
push
and
mov
shr
xor
mov
shl
daa
mov
cmc
adc
in
insl
xchg
addl
or
push
nop
shll
jb
jnp
mov
imul
shlb
aad
or
xchg
lret
mov
jecxz
dec
imul
pusha
jp
mov
je
sub
addb
in
std
pop
orps
xor
repnz
sbb
cmpsb
imul
out
ret
push
push
sti
movsb
add
or
test
iret
cmp
or
pop
ror
pop
mov
sti
adc
sub
inc
mov
out
lea
sub
inc
or
aaa
dec
dec
ds
mov
xchg
stos
inc
jp
loope
lret
xor
push
cmp
push
insb
sbb
adc
gs
loope
cmc
stos
sbb
xor
cmpsb
adc
out
mov
pusha
pop
ljmp
cmp
das
mov
out
in
popf
out
out
scas
fildl
fidivrl
jmp
pop
arpl
out
jb
add
push
repz
mov
xchg
or
mov
cmp
xchg
jb
stc
dec
and
ss
jmp
mov
popf
mov
test
je
jmp
pop
xchg
pusha
scas
scas
jne
mov
ret
mov
in
ret
movsb
shlb
dec
rcl
xchg
mov
outsb
dec
xor
in
iret
out
cmp
sbb
push
inc
sub
and
sub
bound
cmp
inc
negb
inc
cmpsl
fmull
pop
pop
jecxz
nop
xor
aam
clc
icebp
mov
jo
jg
sub
lods
aam
ss
bound
out
and
push
and
mov
sub
cld
mov
jne
lret
ljmp
push
xchg
imul
rcrl
dec
lea
cltd
or
sbb
cld
mov
mov
inc
out
mov
mov
adc
lea
mov
sub
idivb
repz
mov
mov
push
dec
push
dec
mov
pop
add
ja
int3
push
cwtl
jns
push
cli
stos
stos
mov
adc
xchg
push
adc
roll
movsl
incl
lahf
pop
sbb
xchg
test
dec
pushf
in
iret
repnz
sbb
and
imul
jmp
repnz
fists
fimull
shlb
fildll
jne
fimull
leave
inc
sbb
sub
dec
sbb
stos
dec
gs
insb
mov
rcrl
jg
test
dec
pop
fistpll
out
jge
imul
fwait
pop
cmp
rcrl
inc
or
into
sub
loopne
push
jo
ja
pavgb
shlb
das
divl
mov
mov
ljmp
out
fstpt
cmp
sub
lea
cli
xchg
xor
mov
pushf
shll
push
aaa
pop
pop
adc
mov
jns
in
add
xor
pop
pop
mov
and
cmp
cs
adc
xor
fidivrs
roll
rcrb
insb
mov
lcall
mov
in
sub
mov
push
insl
mov
xchg
jge
and
mov
xlat
outsl
icebp
lea
dec
ret
int
mov
outsb
cmp
add
sahf
or
adc
pop
pop
xlat
pop
mov
in
test
cmp
leave
ss
add
sbb
mov
jge
add
daa
iret
inc
lret
cmp
adc
and
ret
loope
inc
pop
inc
insl
clc
or
mov
bound
cwtl
test
jmp
jo
jb
popa
pop
shl
scas
inc
insl
popa
je
clc
cmp
inc
lahf
add
sarl
sbb
icebp
xor
std
inc
movsb
inc
inc
mov
je
mov
and
cli
pop
or
inc
sub
sub
daa
insb
xchg
pop
and
lea
rorl
xor
mov
xor
cld
dec
add
and
movb
mov
xor
rorb
fcmovb
and
movsb
icebp
or
lock
jge
xchg
mov
add
js
arpl
aaa
pushf
test
ljmp
pop
popa
ljmp
adc
imul
dec
cld
subb
addr16
or
jbe
stos
adc
gs
mull
dec
jae
popl
leave
mov
test
add
out
mov
mov
adc
inc
jge
xchg
imul
stc
insb
pop
mov
ljmp
pop
push
push
inc
stc
jp
ficoml
icebp
jo
ror
adc
dec
out
or
icebp
out
jp
xchg
pop
mov
lret
inc
and
lds
pop
add
pop
inc
cmc
fnsave
ret
out
ficomps
mov
test
and
dec
xchg
jne
int3
xchg
loopne
je
mov
js
fmulp
sbbb
rcrb
xchg
ss
scas
es
dec
repnz
cmpsb
xchg
gs
test
mov
xchg
int
daa
rclb
popf
aad
cli
insl
inc
scas
fwait
or
fimull
mov
and
mov
mov
pop
cmp
sbb
lahf
push
in
cmpsl
pop
mov
jp
les
je
push
mov
into
dec
fisubrl
adc
mov
jnp
out
jno
and
jl
sbb
jb
scas
stos
sub
and
dec
cld
lcall
add
dec
in
sti
or
loopne
dec
je
stc
daa
jp
adc
std
pop
mov
les
dec
xor
inc
xchg
sub
imul
jne
adc
xchg
es
cmp
pop
cmp
dec
mov
aas
push
sar
jp
std
pop
mov
pop
mov
jg
mov
push
in
mov
int3
test
xlat
jae
test
out
jl
pop
pop
jbe
cwtl
cmc
out
lods
mov
add
aaa
bound
mov
fisubs
aaa
jmp
dec
jb
or
out
add
xchg
jns
xchg
test
mov
rcrb
movsl
nop
push
sub
lds
in
pop
divl
rclb
xlat
fisubl
jb
mov
stc
mov
std
inc
enter
rcll
push
add
and
mov
add
push
mov
push
subl
mov
cltd
das
imul
insb
cmp
inc
cld
pop
inc
xchg
dec
cmpsl
mov
repz
pop
rclb
call
add
ds
sbb
push
addb
mov
add
jae
scas
das
imul
or
pop
adc
sbb
roll
imul
or
or
clc
psrad
sarl
or
mov
cwtl
mov
in
or
push
add
push
jne
sbb
xchg
or
js
sub
lret
jl
push
sub
mov
pop
sarb
fwait
stos
cli
and
ret
pop
mov
mov
mov
lcall
cmp
cmpb
mov
mov
pop
mov
mov
xor
or
mov
adc
push
add
mov
jp
test
xorb
icebp
push
add
mov
jge
mov
dec
fdivrl
xor
mov
mov
dec
inc
mov
pop
push
mov
inc
cltd
gs
add
jge
ret
xchg
pop
and
nop
pop
shrl
pusha
push
addl
jae
imul
imul
dec
xorb
ret
mov
test
push
inc
in
jg
out
cmpb
inc
fcoml
cmp
xor
pop
cmp
outsb
cwtl
pop
aam
add
mov
hlt
imul
jl
hlt
dec
mov
addr16
cld
jo
insl
push
mov
pop
std
pop
inc
pushl
xchg
push
jmp
xor
push
sub
stos
sbb
daa
xchg
jecxz
sti
or
sbb
inc
xchg
out
mov
push
jg
test
out
test
out
lods
clc
lret
inc
pop
sub
dec
mov
xor
aas
sbb
pop
xor
orl
and
add
call
sub
xchg
js
inc
fneni(8087
add
stc
sbb
je
repz
fs
xchg
adc
push
orl
negl
test
fdivs
out
push
cmp
mov
add
xor
cmp
movhps
in
mov
mov
les
jp
sbb
imul
pop
pushf
or
pusha
in
pop
out
jb
or
and
jo
pop
inc
ljmp
dec
add
ja
jne
lea
outsb
ljmp
mov
mov
lods
test
in
fnstenv
cmpsb
rolb
sbb
xor
adc
clc
sub
jns
and
jg
mov
ret
adc
imul
mov
mov
ja
or
adc
repz
xchg
dec
fstpl
mov
cmp
mov
or
push
ror
js
lret
rclb
push
int3
pusha
mov
mov
cli
dec
bts
jns
mov
std
jl
push
xor
mov
shll
imul
jbe
push
jmp
outsb
and
sbb
jno
insb
pop
pop
dec
in
dec
mov
push
sbbl
ficoms
ret
clc
pusha
inc
das
xor
pusha
test
sbb
scas
jo
jo
dec
dec
xor
cmp
jge
and
fldt
inc
outsb
mov
mov
cmpsb
fdivrl
lret
repnz
add
pop
mov
stc
lcall
push
mov
sahf
cmp
int
pop
push
jle
mov
fidivl
mov
lret
add
jl
test
cmp
dec
fisubs
movl
aad
inc
daa
mov
jbe
mov
mov
movsl
arpl
inc
pop
repnz
orl
lahf
and
fucomi
scas
xchg
sub
jo
cmpsl
int
cwtl
mov
jne
xchg
or
push
popf
adc
add
add
inc
adc
xor
pop
xchg
ret
xchg
fistps
pop
adc
int3
add
cmp
mov
sbb
and
out
pop
mov
lahf
xor
pop
push
scas
rcrl
sub
jns
xor
loope
andb
inc
pop
mov
or
out
ficomps
shll
fstl
inc
gs
mov
lret
ficoml
inc
out
mov
clc
mov
and
pop
fcomps
ss
or
pop
pop
mov
jecxz
movsb
dec
cmpl
sub
stc
mov
shl
scas
mov
es
aam
cli
push
inc
scas
cltd
outsb
iret
mov
inc
iret
movsb
jne
cli
jl
test
pop
or
push
inc
adc
pusha
cmpb
rorl
inc
inc
addr16
inc
cwtl
rcrb
cltd
repnz
arpl
lahf
sti
pop
xchg
dec
adc
js
xor
pop
xchg
add
adc
inc
je
movsb
in
aad
idivl
push
and
sahf
jae
loope
push
dec
pop
test
mov
loop
arpl
outsb
and
scas
cmp
not
xor
xchg
movsb
lods
fwait
cmc
shlb
dec
lret
adc
xchg
cmc
jg
adc
sti
push
pusha
pop
sub
mov
adc
jns
or
or
fistpl
jl
lods
sbb
mov
xchg
lret
or
mov
jecxz
js
cwtl
xlat
dec
add
pop
and
mov
cmpsl
mov
mov
xor
leave
sub
mov
test
add
in
jne,pn
cmp
rcr
insl
lea
aad
daa
jle
shl
test
cmp
inc
addr16
add
dec
icebp
sub
mov
pop
xor
pushf
lock
outsl
inc
in
dec
clc
iret
and
mov
cmp
and
xchg
jno
fimull
inc
dec
aaa
mov
cli
sub
dec
dec
in
xchg
push
mov
pop
aad
inc
sbb
pop
decb
fldl
xchg
ljmpw
cmc
andl
sti
mov
cli
mov
fwait
lcall
in
sti
daa
push
mov
outsb
or
jecxz
push
xchg
cmpsl
lahf
xchg
pop
iret
inc
mov
cmp
insl
xor
pop
sub
push
inc
movsb
pinsrw
movsb
movsb
and
cmp
or
lcall
add
jecxz
mov
xchg
or
jmp
scas
pop
cmp
loop
xchg
inc
mov
imull
push
xchg
jno
fsts
pushl
and
sbb
xchg
jb
lret
sub
xor
icebp
pop
push
pop
mov
je
inc
ficomps
je
arpl
jge
push
dec
dec
xchg
mov
and
repnz
lcall
clc
xchg
jecxz
push
or
orb
cmp
sub
in
aam
sub
clc
mov
add
xor
lods
mov
nop
test
outsb
das
pop
mov
je
xchg
stos
mov
iret
mov
jbe
je
mov
les
icebp
pop
push
popf
cwtl
addr16
cmpsl
add
movsl
stos
dec
or
dec
inc
in
adc
clc
repz
sbb
adc
movsb
lcall
addr16
out
cs
neg
push
insl
rcl
or
push
cmp
les
add
test
jg
and
jp
in
mov
cwtl
lcall
js
and
cltd
xchg
pop
mov
jb
sbb
cmp
and
push
cs
mov
push
scas
xor
cmpb
xchg
add
dec
in
cltd
inc
sub
mov
cmp
jb
xchg
aas
loope
stc
jbe
cmp
ja
js
pop
repnz
sti
imul
xchg
shll
jnp
outsb
jg
loope
out
sarb
and
push
sbb
jmp
add
xlat
mov
psrld
xor
daa
pop
test
and
test
xor
imul
mov
test
sbb
loopne
jmp
pop
or
add
push
lea
push
arpl
lcall
stos
ret
fmull
lock
lods
mov
inc
xor
je
mov
out
jnp
rcll
enter
add
test
repz
push
mov
pop
xor
xchg
out
inc
adc
es
in
pop
cmpsb
mov
mov
mov
push
mov
aam
jp
js
jns
pop
adc
adc
iret
outsl
data16
test
lcall
scas
nop
imul
cmc
cmpsl
cmpsl
push
mov
add
cmp
sub
push
sbb
mov
sub
jecxz
push
xchg
or
fcomps
or
mov
mov
cmpsb
insb
ja
or
nop
lock
sub
push
lds
mov
adc
mov
std
sub
call
push
aaa
mov
mov
inc
fistl
pop
aad
in
add
cmp
lret
xchg
arpl
dec
ds
xor
push
dec
mov
inc
add
int
inc
jle
stos
sub
cmp
shrl
into
imul
fstps
sbbl
das
stc
shlb
push
sub
pop
inc
mov
jmp
stos
notl
and
rcr
push
adc
ds
popa
xchg
dec
pause
bound
mov
xor
insb
mov
rcl
je
mov
push
int
sbb
xor
lock
adc
jge
add
std
pusha
xor
jecxz
ljmp
aad
and
jle
xor
scas
rolb
out
adc
sbb
mov
cmp
lea
adc
lds
xchg
mov
lea
ljmp
fsubr
jb
add
jnp
inc
in
push
in
xlat
cmp
jbe
outsl
inc
cmp
mov
iret
mov
leave
jo
xor
cmp
inc
out
shl
xor
je
xor
mov
sti
ret
push
inc
adc
dec
xchg
xchg
inc
cmp
addr16
out
jne
push
xchg
xchg
mov
das
pop
pop
push
outsb
out
mov
stc
push
xor
imul
mov
push
test
inc
fsubr
test
xchg
call
add
fcmovu
sbb
dec
inc
fmull
sbb
fwait
adc
lock
inc
dec
jecxz
xchg
mov
dec
xchg
jp
mov
push
loope
xchg
add
xchg
xchg
faddl
mov
xchg
jns
in
mov
xor
or
mov
mov
mov
dec
jle
in
or
arpl
jbe
imul
jae
jbe
cmp
xchg
lcall
inc
push
xchg
mov
or
movsl
push
int3
adc
insb
push
jae
adcb
xchg
sub
cmp
pop
lea
int3
inc
mov
xchg
data16
bound
adc
dec
mov
leave
or
sub
faddl
pop
and
xchg
inc
loop
clc
loop
clc
pop
sbb
sahf
jmp
neg
mov
or
mov
bound
mov
push
push
lods
mov
add
or
jb
lret
adc
add
jp
xchg
cld
xchg
es
test
mov
je
adcb
cmp
dec
adc
test
fidivs
hlt
mov
mov
and
fadds
lea
mov
cld
dec
jl
cmp
dec
nop
mov
fdivl
mov
jbe
push
ds
dec
addr16
pop
into
jg
ror
in
stos
std
shll
adc
in
and
rcrb
test
ss
mov
daa
cmp
add
jb
shll
ljmp
cmpsb
pop
xor
or
mov
subb
dec
jecxz
lret
movsl
fwait
cmpl
cmp
inc
mov
inc
add
and
xchg
out
jnp
lock
adc
idivb
add
les
popa
jl
add
sub
lcall
cwtl
mov
mov
pop
and
jle
gs
out
ret
sbb
push
xlat
orb
jle
outsl
sub
inc
cmp
adc
lret
cmp
mov
mov
mov
jo
mov
outsb
pop
cmp
push
cld
jae
fimull
push
cld
andl
adc
pop
push
lods
mov
in
mov
imul
mov
hlt
mov
pop
mov
cmp
xor
cmpsl
cld
push
xchg
insb
decl
push
imul
mov
stc
xchg
mov
xor
and
popl
mov
mov
jo
add
std
push
mov
add
gs
pop
mov
repnz
std
mov
out
out
mov
cs
dec
xor
push
cli
mov
mov
pop
and
movsb
cmp
push
stos
out
pop
dec
arpl
das
sbb
sbb
stos
cmpsl
mov
stos
lahf
js
loop
push
rorl
imul
push
fwait
out
jp
inc
js
cwtl
cmp
or
cmpsb
xchg
popf
gs
shrl
lahf
stos
mov
lods
fcomi
mov
sbb
xchg
shll
idivb
je
test
xor
lret
icebp
leave
adc
sarb
stos
in
sbb
jle
sub
cmpsb
int
mov
mov
ret
hlt
out
jae
popa
sahf
and
mov
subb
add
sub
cmpsb
xchg
subl
add
fwait
cmpsl
repnz
fwait
lods
sti
mov
jmp
movsl
add
xor
dec
lods
fmul
or
in
xor
sar
jo
adc
int3
gs
pop
push
lock
pop
fadds
imul
out
pop
or
mov
imul
or
xlat
jmp
mov
mov
std
lcall
aaa
mov
repz
ds
fldcw
push
clc
mov
or
nop
adc
mov
inc
and
dec
lods
mov
xor
inc
lods
adc
push
xor
pop
sbb
cmp
jmp
call
push
orb
test
mov
imul
cltd
xor
test
xchg
add
mov
decl
dec
mov
cmc
adc
push
adc
sti
scas
cltd
inc
stos
jg
mov
xchg
dec
push
sub
or
mov
cmp
imul
sub
sub
scas
add
test
stos
dec
cmpsb
rcll
jp
cmp
mov
arpl
js
test
cmp
xchg
mov
out
fs
xchg
push
out
push
mov
pop
int3
pop
inc
repz
icebp
and
in
cmpsl
pop
faddl
fs
pusha
aaa
push
xor
sbb
les
aam
and
out
and
fisubrs
lret
je
and
add
and
xchg
cmc
lds
push
jp
jo
divl
in
cwtl
loop
jae
and
movsb
test
jmp
cli
rcrl
push
push
stc
mov
scas
xchg
add
pushf
add
mov
mov
lret
fsts
out
cmp
dec
movsb
in
xchg
xchg
popf
adc
cmpsb
and
data16
mov
xchg
lret
pop
xchg
jle
inc
xchg
repz
loopne
push
loopne
arpl
int
adc
adc
aad
mov
dec
inc
lretw
push
ljmp
mov
dec
mov
push
int
inc
loopne
add
das
mov
and
cld
std
push
addr16
jmp
shrl
pop
adc
iret
sbb
in
test
or
stos
push
adc
int
subb
pushf
lock
test
add
xchg
aas
lods
dec
test
cmp
dec
mov
pop
adc
jne
loopne
imul
inc
or
idiv
xor
lahf
xor
imul
and
push
or
shlb
lret
cltd
and
push
addl
arpl
adc
lea
xor
fsqrt
jecxz
jo
notl
cmp
jp
clc
mov
leave
xchg
iret
cmpb
dec
pop
pop
sarb
sub
or
inc
jno
mov
ss
pop
adc
cmp
xlat
mov
fcomps
pop
cmpl
mov
mov
hlt
inc
dec
loope
fsubrl
push
incl
pop
stos
jnp
test
jmp
push
popf
insl
xor
and
in
pop
add
xchg
mov
insb
xchg
popa
out
dec
mov
push
mov
js
cmp
pop
inc
mov
out
std
or
sbb
sub
mov
or
adc
outsb
add
push
ret
inc
mov
aaa
fdivrp
sbb
and
adc
adc
into
movsl
or
mov
push
fcmovnbe
push
shll
adc
insb
lret
nop
xchg
and
shr
lods
mov
dec
pusha
mov
xchg
pop
addl
lcall
nopl
inc
pop
cltd
pop
xor
icebp
mov
mov
cmpsl
push
jp
push
jle
xlat
movsl
mov
pushf
cmp
dec
sar
icebp
cld
xchg
das
test
add
lock
cmp
movups
add
dec
leave
dec
inc
pop
mov
ret
int
xor
push
pop
lahf
mov
pop
pop
xlat
xor
flds
or
and
add
fdiv
stos
inc
xorl
hlt
shll
adc
mov
or
imull
inc
loopne
stos
mov
cmp
inc
adc
adc
jbe
push
hlt
push
imul
adc
and
cmpl
mov
adc
int3
sahf
push
jle
lea
pushf
push
ror
out
cmpsl
inc
aas
fwait
mov
push
fwait
sub
jmp
rorb
pop
dec
jge
pop
inc
pushf
xchg
add
lahf
sbb
loopne
std
mov
inc
push
jmp
test
or
dec
sbb
jecxz
adc
pop
jl
pop
out
rorb
xchg
loope
cmp
push
jne
pop
xchg
fidivl
lods
outsl
leave
outsb
jl
inc
inc
jmp
arpl
push
adc
pop
push
add
dec
pop
jp
jbe
leave
jbe
aaa
add
movsl
sahf
mov
mov
inc
jmp
pop
aas
loope
mov
test
sbb
clc
xor
push
gs
ds
imul
xlat
mov
and
lret
dec
jmp
xchg
iret
js
inc
fisttps
testb
pop
gs
push
add
add
pop
into
in
mov
inc
aaa
enter
sahf
push
push
mov
nop
jmp
add
adc
mov
jo
rcrb
loop
pop
popa
add
emms
cmp
mov
aad
roll
lds
jae
sbb
loope
mov
or
orb
hlt
xchg
mov
dec
dec
mov
jle
shl
add
pusha
jle
inc
and
lahf
mov
and
and
sbb
xor
sti
into
xchg
dec
inc
pop
shlb
push
push
imul
inc
orb
ret
jns
inc
xchg
andl
test
dec
outsl
aas
mov
cmp
xchg
push
lret
xor
cld
mov
push
cs
adc
xlat
mov
xchg
test
push
mov
xor
daa
jge
push
out
sub
fcmovbe
popa
fnsave
xor
movsl
aaa
or
xlat
dec
add
xchg
xchg
test
push
adc
aaa
movlps
fstl
dec
mov
neg
sti
cmpb
and
jnp
fimull
push
insb
gs
jnp
test
jmp
and
fstpt
je
inc
dec
mov
dec
mov
fistps
ljmp
subb
mov
stos
idivl
test
out
xchg
push
cmc
xor
xchg
inc
mov
pop
dec
mov
cmpsb
mov
xor
jnp
lret
loop
and
in
movsl
cmp
fwait
adcb
pop
xlat
or
mov
imul
or
sarb
lret
xlat
and
sub
ss
or
pop
ljmp
lret
push
leave
test
aad
pop
push
push
insb
inc
mov
adc
cmpsl
addr16
scas
jae
xlat
je
pop
adc
cmp
dec
aas
inc
outsb
adc
fs
enter
jo
shlb
dec
add
sub
push
cmp
ret
add
sub
or
shrb
push
xor
xchg
jmp
cmp
dec
les
ja
shr
sbb
sbb
insl
fiadds
and
mov
xor
push
sub
cli
repz
add
mov
stc
adc
fsubl
rol
inc
icebp
pop
mov
jnp
scas
icebp
push
add
cmp
push
dec
das
cld
mov
aaa
mov
popf
cs
jb
cmpsl
and
mov
andb
cltd
sbb
xchg
sti
popa
lods
xlat
dec
js
inc
mov
pop
sbb
jl
addl
sub
push
js
jg
jnp
sbb
add
out
pop
into
xor
mov
xchg
pop
push
stc
mov
ror
and
push
ja
push
jmp
pop
pop
push
pop
mov
pop
pop
fdivrs
dec
sti
out
mov
mov
inc
or
jns
mov
andb
jmp
cmp
fcomp
stos
cmp
cli
mov
pop
jns
lods
mov
xor
int3
inc
add
push
mov
scas
sub
ja
loopne
ss
inc
lea
ret
cld
iret
sub
pop
aad
int
and
shr
loopne
dec
repnz
pop
cmp
or
sub
ja
test
pop
or
repnz
jmp
jg
mov
mov
in
and
and
push
pop
or
lock
stos
incb
jnp
in
push
mov
pop
add
cld
lock
lea
outsb
push
lahf
aas
fs
notl
mov
push
pusha
lret
inc
cmp
pushf
pop
sub
adc
cmp
inc
cli
out
xchg
dec
xchg
and
dec
clc
ja
fidivs
jbe
pushf
add
test
jae
sbb
and
sete
cs
mov
adc
cmp
inc
sahf
or
push
js
stos
mov
ljmp
pop
adc
pushf
pop
out
sarb
cld
ret
cmpsl
xor
mov
add
cmc
iret
ds
fwait
add
or
out
fdivr
mov
jmp
pusha
cltd
pop
push
adc
adc
xor
psrld
ret
xor
loope
and
mov
xchg
and
push
jno
mov
push
in
push
add
sub
jne
mov
fisubrl
outsl
movsl
jle
mov
mov
lods
jb
push
jmp
or
or
sbb
cmpsb
adc
mov
jnp
sub
mov
jl
out
lret
cwtl
push
mov
inc
popf
in
xchg
out
dec
insl
cmp
push
or
lock
lahf
int
and
cmp
mov
inc
cltd
lahf
jb
sbb
mov
addr16
push
clc
push
in
out
inc
ss
pop
loope
cmp
bt
dec
cwtl
dec
in
push
push
add
and
mov
inc
adcb
out
stc
mov
or
sub
mov
add
sub
mov
pop
mov
push
mov
mov
cmp
dec
lods
push
stos
lds
dec
imul
and
jp
push
mov
jge
inc
movsl
cmp
push
jns
push
sub
and
cmp
divb
push
dec
incl
shl
out
mov
xor
fidivrl
sub
mov
mov
jo
es
pop
loop
jno
ret
pop
repnz
pop
push
mov
orl
pop
aaa
and
xorb
leave
divl
adc
shrl
test
inc
arpl
add
xlat
add
xchg
cmp
ret
stos
out
or
jl
shrb
mov
push
adc
aam
and
imul
jle,pn
data16
cmp
enter
pop
test
das
test
les
stos
sub
jb
mov
fsts
inc
push
call
mov
mov
mov
stos
sub
shlb
or
sub
push
outsb
mov
ja
out
jne
jl
jns
push
mov
mov
in
xchg
lcall
and
popl
and
inc
or
xchg
mov
arpl
xchg
xorb
ffree
inc
xchg
imul
or
jo
mov
inc
mov
lock
addr16
jns
jbe
add
stc
jmp
and
cmp
jbe
sub
mov
mov
movsb
out
movsb
cltd
test
std
pushf
out
dec
insb
pop
sbb
mov
out
test
or
sub
xchg
pop
popf
into
mov
pusha
sub
dec
inc
repz
jae
mov
lock
int
mov
push
fxch
call
push
and
mov
loopne
push
addb
pop
loop
movsl
xchg
hlt
les
dec
fidivs
hlt
add
pop
xlat
je
mov
jnp
fsts
xor
lret
and
xchg
sub
xchg
pop
jl
and
xor
xchg
lock
mov
pop
cmp
jbe
dec
test
dec
negb
out
cmp
dec
mov
ret
ja
sahf
jnp
jno
push
cmp
cwtl
xor
int3
fstpt
les
or
push
insb
jne
aam
and
add
mov
push
imul
popa
sti
ss
test
imul
dec
xlat
dec
not
pop
hlt
mov
cmc
insl
inc
out
in
shl
stc
pop
enter
sub
mov
mov
xor
jg
cmp
xor
mov
sub
rorl
adc
adc
cmp
pop
cmpsb
and
out
sub
imul
cmpl
outsl
lret
sub
int
mov
inc
js
pop
sub
popf
cwtl
cmp
fsub
into
leave
fildl
adc
ds
ret
jp
loope
sub
lock
pop
mov
mov
sti
je
imul
repz
sti
movsb
mov
int3
sub
cld
and
add
and
movsb
push
bound
dec
push
into
or
xchg
cmp
jo
mov
or
jg
lods
and
aad
aad
xchg
mov
mov
loop
xor
cmp
pusha
rcl
push
jb
pop
mov
int3
push
out
fstl
cwtl
pop
daa
test
cli
loope
ds
mov
lock
push
es
pop
je
popf
jae
pushf
fs
adc
inc
push
pop
cmp
cltd
stos
xchg
sahf
lahf
test
es
push
jecxz
xor
cmpsb
jne
cmp
inc
stos
fstpl
jl
andb
sbb
scas
jmp
inc
sub
jmp
jg
xchg
out
dec
sub
rcrb
dec
mov
in
sbb
adc
sahf
mov
in
jmp
and
or
shlb
aad
mov
jnp
cmc
xchg
xor
fs
adcb
insb
cmp
sub
pop
or
mov
std
and
xchg
cmp
mov
sbb
push
aad
jg
jp
enter
shll
jge
push
in
sub
shlb
sub
int
test
or
lock
push
or
and
lds
dec
mov
and
mov
mov
mov
xor
subb
imul
sbb
sti
cmpsb
jbe
and
shr
adc
imul
and
out
cmp
pop
lea
jge
adc
jmp
xchg
jae
rcll
iret
aam
jp
into
in
fdivrs
out
sarb
push
mov
xchg
stc
arpl
iret
insl
dec
and
adcl
pop
call
nop
and
sbb
stos
push
stos
rolb
cli
nop
loope
clc
adc
mov
bound
popa
stos
dec
adc
sbb
lret
mov
into
push
out
add
inc
rcr
fnstcw
adc
push
out
enter
shl
ljmp
gs
or
in
lea
xchg
pop
add
loopne
dec
cmp
sub
jae
insb
jle
and
call
in
ret
cmp
ja
mov
popf
or
cmp
loope
imul
sub
xor
popa
outsb
in
jmp
sarl
cmpsb
sbb
lcall
pop
incl
mov
dec
pop
mov
into
or
add
mov
dec
ret
das
adc
std
shll
dec
ror
jae
enter
int
jb
ljmp
lea
pop
xchg
jne,pn
or
jge
cmc
fistpll
push
shr
test
inc
sbb
call
push
xor
push
pop
push
lahf
xchg
mov
sar
das
push
std
xor
push
push
je
int
ss
popf
jle
je
aas
stos
ss
pushf
das
add
jns
or
fwait
push
dec
int3
pushf
adc
push
hlt
xchg
addl
push
int
pop
aas
pop
lret
and
cltd
and
addr16
adc
mov
shll
push
clc
and
aam
daa
mov
xchg
fildll
lahf
inc
mov
push
inc
sub
adc
mov
or
lock
sub
mov
lret
cmp
push
cmc
roll
je
lods
fnstenv
leave
mov
testl
sub
mov
mov
mov
dec
std
mov
cmp
jl
or
and
push
std
scas
pop
enter
lds
dec
shrb
loop
jecxz
in
out
mov
mov
add
movsb
sub
mov
cmp
jg
or
mov
test
ret
xchg
sarb
adc
in
adc
push
adc
fdivrs
sub
jbe
adc
sahf
clc
mov
jbe
push
hlt
shl
pop
push
stos
icebp
jne
pop
cmpsb
fisubrs
leave
add
dec
add
xchg
fwait
ret
mov
adcl
jp
cmp
adc
fs
dec
push
sbb
pop
fldenv
jno
push
xchg
mulps
pop
gs
aam
mov
cmc
test
out
sti
mov
cwtl
cld
jbe
cmp
or
or
test
inc
xchg
movsl
cwtl
xchg
jl
or
push
xchg
sub
mov
add
sub
pop
push
dec
and
fimull
flds
pop
ja
js
add
xchg
jle
jle
jmp
xor
shrb
mov
hlt
and
jne
lret
iret
xchg
or
js
push
inc
cmp
rcrl
mov
cld
and
lcall
jp
mov
inc
rorl
xchg
xor
sub
mov
xlat
sbb
push
aam
inc
test
gs
testl
or
sub
dec
xchg
mov
jecxz,pt
stc
pop
add
sub
fdivs
es
and
hlt
mov
xchg
push
xchg
cmpsl
repnz
xor
pop
pushf
or
aam
sub
mov
or
hlt
or
sarb
loopne
push
enter
repz
lock
shlb
adc
dec
cmp
cmp
xchg
mov
add
rcrl
inc
std
fidivrl
sbbl
das
aaa
out
xchg
add
clc
mov
stos
gs
jge
in
mov
mov
movsl
mov
xorl
mov
inc
or
test
cmp
xchg
xor
popf
or
xchg
in
jns
mov
hlt
ret
jbe
xchg
or
sbb
pop
sub
cmp
push
pop
xchg
out
fcoml
mov
or
and
add
push
sbb
iret
pushf
push
xor
lahf
lods
mov
movsl
sbb
lods
pop
js
and
lret
in
repz
pop
and
call
pop
decb
or
cmp
ret
push
adc
leave
mov
in
mov
pop
or
pop
xor
pop
push
adc
adc
sub
insl
gs
xor
lcall
out
xchg
xchg
imul
inc
adc
stos
cmp
xchg
subb
pusha
or
sub
cli
cmpsb
mov
mov
add
in
pop
imul
sbb
rorl
push
adc
or
dec
pop
dec
std
icebp
adc
es
xchg
stos
adc
dec
dec
arpl
enter
xor
shlb
in
popf
fcoms
xchg
sub
mov
aad
jecxz
mov
jne
add
leave
mov
sub
aaa
enter
or
lea
test
cs
fisubl
xchg
mov
mov
sub
dec
adc
and
cmc
test
inc
popf
fsubrp
rol
ja
pop
cltd
gs
mov
lods
mov
lock
push
call
jnp
add
pop
sbb
scas
sbb
shrb
outsl
movsl
int3
jge
jo
shrl
int
pop
loopne
mov
cli
jnp
mul
aaa
jge
negb
inc
pop
pushf
int
movsl
inc
push
cmpsl
sbb
dec
inc
add
dec
adc
int3
jns
cmp
push
stos
jge
jne
inc
xchg
jmp
hlt
push
stc
loopne
test
mov
hlt
and
ss
pop
jmp
jecxz
push
iret
xchg
pop
cmp
loopne
dec
xor
daa
scas
iret
or
fcompl
in
jbe
shll
loope
inc
inc
jns
movsl
push
js
sbb
pop
xor
testl
ds
xchg
mov
xchg
add
aam
stc
in
push
mov
and
jb
cmp
xchg
cli
add
push
cld
std
xchg
mov
ds
nop
xorb
push
popa
dec
loopne
mov
lea
int3
dec
sub
mov
sti
in
jb
jno
push
mov
jp
popf
pop
js
cwtl
mov
xchg
xchg
add
pop
adc
lcall
pop
insl
pop
ds
insb
adc
add
jmp
aaa
arpl
lcall
lods
rcrb
adc
ret
push
xchg
mov
sub
push
bound
aad
sbbb
fcmovnb
stos
aas
or
sbb
mov
in
mov
inc
pop
sub
xchg
cld
jns
lods
xchg
pop
bound
dec
loope
shll
popf
outsb
iret
xor
mov
xor
xchg
xor
lret
test
mov
mov
adc
dec
mov
lret
fimuls
int
ja
cmc
addr16
mov
movsl
popl
cmpsl
imul
mov
mov
movsl
es
out
push
popf
in
sbb
in
stc
add
xchg
adc
dec
jne
addr16
scas
rcll
int
adc
mov
sbb
jns
pop
sbb
out
push
aam
sbb
aaa
pop
jle
jae
lcall
clc
into
mov
dec
add
fisubrl
xchg
pop
adc
cmp
mov
stc
jecxz
add
arpl
xchg
sbb
sti
push
inc
sahf
movsl
jns
dec
mov
push
cmp
mov
fisubrs
or
cmpsb
jge
sbb
or
jecxz
ret
sbb
movsl
push
nop
mov
xor
and
imulb
fimull
or
mov
or
std
in
mov
jbe
fsubl
inc
ljmp
cmp
mov
inc
cs
mov
lods
call
pop
and
push
cmpb
enter
and
imul
jbe
sbb
xor
loopne
fimull
int
or
rcrl
xlat
mov
adc
aam
aam
cs
jp
aam
adc
sahf
pop
ljmp
ljmp
nop
dec
mov
ds
out
addr16
cmp
and
xchg
lods
xchg
cs
mov
scas
adc
out
pushf
mov
cmp
sub
pop
frstor
sub
xchg
cmp
push
xchg
pop
sbb
lret
mov
and
pop
outsl
jno
mov
rcrl
cmpsl
fiaddl
mov
push
cwtl
cmpsl
sub
jp
mov
stos
xor
jnp
or
xor
xor
mov
lods
mov
mov
sahf
cmpsb
cmp
pop
es
aad
jmp
xchg
std
xchg
inc
jp
pop
jp
jnp
mov
shl
xor
xchg
stos
loopne
scas
arpl
push
or
lds
icebp
adc
sahf
push
cmp
inc
push
sub
fldenv
cmp
mov
cmpsb
mov
lret
ret
mov
ljmp
mov
stc
test
sbb
cmp
decl
rcrl
cmp
push
push
out
fwait
rcrb
std
addr16
push
stc
sub
ret
mov
test
test
and
cmpb
xchg
cmp
adc
fwait
fs
aam
mov
lds
rclb
sarb
pop
sub
sub
adc
cmp
xchg
hlt
insl
or
daa
out
int
mov
xor
rolb
andl
mov
or
adc
or
jno
pop
dec
dec
inc
shll
test
call
stos
or
mov
jmp
sahf
in
sub
push
out
adc
lods
pop
sub
mov
inc
fists
inc
in
mov
mov
xchg
adc
stos
sub
int3
ljmp
or
cmp
jnp
subl
push
mov
mov
mov
xchg
sbb
repnz
leave
mov
cmpsb
icebp
sahf
sbb
fldt
jb
push
push
cld
push
stos
repz
pop
popf
enter
pop
mov
fnstsw
mov
or
cmpsl
cmc
adcl
pusha
ljmp
scas
lcall
stos
inc
cmp
or
jle
mov
flds
jge
stos
xor
cltd
icebp
cmp
je
enter
mov
push
pop
push
or
lahf
andb
sub
fiadds
or
loopne
push
inc
imul
dec
lds
dec
out
cld
mov
pop
lods
ret
shrl
push
xor
push
lret
and
inc
fdivrl
out
pop
ss
je
out
out
xor
arpl
xchg
pop
in
test
lock
mov
cld
loopne
dec
aas
push
xchg
xlat
popf
pushf
pop
mov
cmp
sub
xchg
fwait
jmp
rcrl
add
fsubrl
notl
mov
rclb
subb
inc
repz
aad
adc
sub
lea
je
pop
mov
fisubrl
push
push
fisubrl
xchg
sarl
jb
pusha
mov
mov
bound
or
in
xor
in
add
aaa
cltd
jle
mov
xor
shll
mov
jo
andb
shlb
and
add
aas
xchg
inc
jb
mov
sahf
xchg
es
xor
divb
cmpsb
or
xchg
enter
mov
repz
cmc
cltd
adc
mov
lds
rcrl
test
inc
xchg
fldl
mov
jecxz
inc
dec
cmp
sbb
imul
subb
pop
jo
dec
fcoms
mov
aam
jge
mov
notb
es
dec
popf
call
lret
pop
addr16
repnz
lea
cmp
jle
sub
fbld
fldcw
xchg
xchg
lods
and
sarb
mov
xchg
sub
test
inc
mov
in
xlat
cmpsl
xor
nop
xlat
push
mov
mov
call
hlt
inc
outsb
insl
pusha
sbb
and
jp
imul
dec
cld
in
sbb
push
mov
xchg
sarl
mov
mov
insl
xchg
mov
jnp
test
mov
xor
cmp
iret
stos
lret
dec
mov
outsb
mov
daa
mov
push
stos
je
repnz
dec
in
push
jns
stc
rcl
movsb
jl
sbb
sub
sub
lods
inc
es
jp
arpl
mov
in
pop
xlat
push
push
jae
shlb
mov
pusha
cmp
and
pop
outsl
fs
mov
xchg
sbb
repz
mov
xchg
or
addr16
lea
lock
xchg
fwait
dec
in
cltd
int
repz
lods
aas
popa
adc
push
ret
iret
shll
mov
int
out
rcr
sarl
ret
xchg
push
and
sub
inc
pop
ljmp
addb
outsl
or
adc
movsl
jnp
sbb
mov
jo
test
and
mov
jns
push
das
or
jno
adc
dec
cli
lret
jp
lret
and
lcall
mov
mov
xor
jle
add
push
mov
dec
cmc
add
xchg
push
mov
scas
test
stc
lret
or
out
add
push
xchg
repz
xor
fsubrl
sub
ud1
xchg
cs
xlat
call
sbb
mov
mov
mov
dec
cmp
inc
jle
xchg
movsb
and
dec
aam
fnstenv
sub
mov
nop
out
mov
jg
mov
lret
scas
push
scas
out
xchg
pop
imul
aaa
dec
mov
int
cmp
add
pop
xor
inc
dec
fisttpll
leave
cli
stos
add
pusha
or
call
enter
into
add
lods
stos
cltd
push
ja
jle
outsl
fucom
xor
mov
aam
movsl
jmp
push
jnp
xchg
insl
push
jo
ret
or
lock
jle
in
cmp
movb
xor
movsb
add
add
lea
sti
jecxz
add
jge
inc
es
int3
pop
cltd
inc
clc
fwait
sub
xchg
daa
cwtl
ret
xchg
lods
cmp
sysexit
lods
nop
mov
add
into
jbe
jbe
xchg
jl
or
mov
iret
movsb
in
jbe
jnp
adc
addb
ja
mov
mov
fwait
das
xchg
mov
rorl
add
jo,pt
xor
push
jae
mov
sbb
jecxz
sti
pop
lock
mov
mov
cltd
or
or
imul
arpl
add
in
std
lcall
or
fwait
repnz
repnz
mov
int
aas
xor
mov
shrl
iret
ss
loopne
mov
bound
ficompl
out
scas
imul
ret
sahf
das
push
cwtl
push
leave
ja
and
dec
faddl
xchg
push
negl
pop
xchg
ljmp
mov
cmp
mov
inc
xor
in
fistpl
gs
adc
ljmp
adc
mov
fistl
mov
test
outsl
inc
jnp
cmp
stc
jno
pop
or
shrl
xchg
inc
and
and
cs
sysret
fs
or
jmp
push
jo
push
xchg
push
leave
mov
subb
pop
push
popa
aad
push
sub
pusha
hlt
fsubr
rolb
out
lods
lcall
popf
push
adc
call
int3
test
lods
inc
sub
in
mov
mov
out
jle
push
lahf
add
inc
jns
cmp
cmp
inc
das
mov
inc
insb
aas
xor
mov
call
xlat
in
gs
popa
sbb
inc
pop
and
xor
mov
dec
pushf
push
enter
sahf
cmp
dec
ljmp
or
lret
into
sub
imul
sub
mov
push
xchg
adc
pop
sub
dec
enter
mov
jmp
jno
aam
pop
mov
mov
dec
add
adc
push
divl
mov
lcall
jo
dec
popf
pushf
mov
into
repnz
push
pusha
das
popf
xor
roll
pop
cmp
hlt
fwait
xchg
fsubl
jge
jnp
call
pop
lods
adc
sub
and
cmp
xchg
mov
cmp
mov
cld
aam
add
and
aad
out
stc
outsl
and
ret
call
sbb
int3
push
push
mov
bswap
loope
xchg
xchg
imull
fisubs
cli
mov
mov
in
pop
nop
inc
cmp
aad
stos
mov
push
add
popa
pop
imul
movzbl
mov
sti
in
insl
mov
pusha
push
xlat
pop
and
test
sub
loopne
aas
movsb
roll
push
dec
inc
cmp
fstpt
clc
nop
inc
pop
dec
popf
in
sub
and
enter
testl
and
mov
out
mov
ret
dec
mov
sub
sbb
lret
adc
popf
add
cmpsb
xor
pop
fs
push
daa
mov
mov
repnz
out
fwait
sub
xchg
insb
mov
andb
icebp
fnstenv
cwtl
lods
out
xchg
sti
xchg
pop
pop
xchg
loop
jnp
pop
push
addb
xlat
push
scas
jb
cmpl
loop
stos
mov
aas
outsl
sub
out
clc
add
pushf
or
add
jne
addr16
loopne
mov
popf
cs
xchg
lods
lahf
rclb
push
movsl
mov
and
and
fs
pop
pop
icebp
mov
ret
adc
xchg
aam
and
scas
and
imul
jae
icebp
notb
jno
repnz
adc
xchg
sub
xchg
cmp
es
add
setp
iret
jle
std
jbe
adc
insb
into
mov
cmovo
out
sub
and
xor
les
mov
out
mov
push
pop
adc
add
scas
sbb
push
aad
add
push
cmpsl
inc
mov
xor
jnp
das
pop
xor
or
sub
sahf
adc
pop
mov
lcall
cmp
cmc
lods
push
jb
gs
jnp
lret
sub
dec
es
xchg
jmp
das
mov
jo
mov
pop
sbb
scas
dec
or
mov
fldcw
lods
push
cmpb
or
cmp
jl
fmul
addr16
and
int3
js
xchg
mov
jns
jg
scas
fistpl
ret
jmp
mov
push
push
sub
mov
in
imull
rcrb
xor
sub
insb
fwait
fs
pop
xchg
pop
dec
push
andl
dec
mov
ljmp
xor
lcall
fcomps
xor
rol
pop
out
in
lret
ljmp
mov
das
push
mov
adc
fsubrl
out
fs
lret
push
icebp
hlt
shr
jp
push
cld
pop
mov
xor
or
fidivl
mov
xchg
pop
pusha
jb
push
push
sarb
stos
jp
sti
sysenter
mov
xchg
mov
std
stos
call
add
dec
push
and
pusha
ret
add
xor
outsl
fs
xchg
xchg
dec
xchg
into
sahf
nop
nop
fucomip
pop
imul
lods
mov
inc
or
sarb
and
outsl
xchg
cs
inc
lea
xchg
or
cltd
out
sbb
mov
mov
jne
lahf
das
ret
pop
xlat
mov
push
imulb
pop
stc
mov
pop
mov
arpl
mov
shrb
push
popf
std
xchg
loop
jecxz
push
js
jmp
inc
fwait
out
cmp
pusha
stos
js
int
jge
test
mov
fwait
lret
adc
das
mov
mov
jg
hlt
adc
int
jns,pt
push
in
xor
sbb
ljmp
test
and
dec
pop
iret
dec
inc
jg
int
dec
scas
xchg
mov
test
mov
popa
inc
into
lahf
stos
enter
gs
addl
sbb
in
out
jbe
xlat
adc
fsts
out
xchg
inc
xlat
add
cmp
mov
pushw
and
push
stos
sbb
jp
xor
push
sti
orb
xor
popf
and
and
fdivr
movsb
shll
adc
push
jo
shl
cmp
in
mov
jne
test
pusha
adc
mov
pop
dec
sub
stc
pusha
test
les
cwtl
push
data16
mov
xchg
cmp
push
sub
adc
jns
arpl
sbb
popf
loop
std
add
push
fildll
or
inc
scas
add
lea
daa
cs
clc
ss
cltd
mov
fsubs
shll
fwait
popw
lret
pop
pop
out
push
mov
aaa
test
pop
lahf
mov
inc
inc
stos
sub
cmp
xchg
sbbl
mov
xchg
icebp
jo
adc
or
data16
out
mov
mov
or
in
fs
and
mov
and
and
push
data16
mov
jnp
dec
lret
mov
pop
dec
pop
je
mov
push
dec
push
pop
repz
inc
pop
pop
mov
xchg
cmpsb
jp
iret
out
mov
lcall
int
pop
subl
jl
jne
jbe
les
push
cld
xchg
iret
out
popa
jo
or
pop
dec
adcb
std
or
neg
outsb
mov
jg
ret
fsubr
xor
int
stc
cmp
rol
loope
stos
orl
shlb
roll
fwait
mov
fnstenv
jmp
scas
fwait
mov
mov
push
insl
jle
dec
gs
js
mov
repz
mov
or
mov
mov
cmp
lds
cld
mov
jg
fsts
push
pop
repz
mov
data16
sbb
shrl
test
and
ret
jae
cmpsb
sub
jmp
mov
jl
lods
sbb
pop
push
xlat
pop
jb
push
xorb
loop
popa
mov
inc
repz
inc
fldt
and
insb
inc
xor
mov
imul
shl
xchg
shll
push
and
popa
push
push
bound
mov
mov
fdivl
scas
insl
push
rclb
in
rsm
test
inc
or
adc
sub
test
mov
sub
cmp
mov
inc
jnp
daa
orb
mov
aam
inc
in
jno,pt
xchg
cmpsl
lret
addr16
mov
push
xchg
mov
movsl
rolb
ds
js
mov
xchg
xor
and
and
jns
or
sbb
xor
ficompl
fstps
mov
aam
fsubr
push
sub
lds
push
push
iret
adc
fs
cli
repz
aam
int3
pop
gs
leave
mov
in
cmp
cmp
bound
and
pop
push
mov
push
daa
ds
add
cld
mov
pop
pop
mov
repnz
scas
in
sarl
dec
mov
popl
jp
adc
sbb
inc
jb
testb
mov
outsl
cmp
daa
mov
rcrl
loope
jnp
arpl
push
push
and
enter
sub
xchg
insb
push
adc
pop
aad
sbbl
addr16
xor
out
aad
je
add
or
mov
mov
cmp
xchg
fld
es
div
add
cmp
mov
arpl
mov
testl
pop
outsl
lcall
test
add
or
loop
fldenv
sbb
incl
sbb
xchg
mov
cmpsl
pop
or
outsb
sub
xor
idiv
stos
mov
ljmp
cs
adc
das
xchg
popa
cmp
call
inc
mov
std
les
lret
push
sbbl
push
cmc
sbb
int3
movsl
imul
enter
mov
jae
adc
adc
jns
mov
scas
inc
xor
dec
shll
sbbl
frstor
inc
pushf
push
scas
loope
lahf
hlt
mov
pop
aaa
js
stos
lock
mov
fisubs
add
mov
shr
pop
and
addr16
or
or
jle
add
sub
cs
bound
cltd
or
stos
jp
or
rclb
frstor
inc
out
ss
iret
fimull
xor
test
jb
test
sbb
cltd
and
cmpsb
dec
inc
stc
popf
pop
scas
lahf
mov
jl
dec
daa
and
mov
sub
cmp
hlt
jae
nop
sbb
mov
in
cmp
and
mov
cltd
shrl
lea
add
pop
cmc
test
std
add
and
sub
loop
aas
out
les
push
adc
mov
xchg
loopne
mov
jecxz
cmp
xor
lcall
cmpsl
sbb
iret
push
dec
insl
push
int
pop
xchg
dec
fcom
mov
cmp
push
sbb
addr16
in
mov
mov
jmp
arpl
leave
lds
jg
or
mov
xchg
pushf
and
mov
jno
out
aam
or
scas
sub
rcrl
imul
dec
cld
subb
clc
ret
enter
in
arpl
xchg
cmp
clc
push
outsb
adc
cmp
insb
dec
cmp
negl
popa
dec
or
hlt
js
push
xor
fidivrs
les
xchg
pop
adc
mov
les
sub
add
inc
pop
dec
sbb
and
dec
divl
push
cmpsb
imull
lcall
inc
mov
cwtl
dec
je
jns
fwait
out
sub
and
ljmp
arpl
mov
test
inc
push
push
inc
clc
mov
loop
xchg
or
sub
mov
jg
xor
sahf
in
lods
mov
mov
cmp
ds
cmp
lods
arpl
cmp
mov
cs
lock
stos
mov
orb
test
roll
pop
es
xchg
mov
or
into
and
and
aas
clc
adc
filds
in
xchg
shll
sub
mov
mov
xor
jmp
lea
pop
lret
mov
inc
xchg
lahf
mov
pop
mov
sub
dec
movsl
dec
dec
jge
movsb
call
insb
loopne
inc
shrl
inc
mov
dec
lret
lods
xchg
cmp
sbb
xchg
sbb
ds
rorb
xor
jae
jp
es
aas
lds
ret
subl
cwtl
test
mov
pusha
cs
jae
jge
stos
jno
or
gs
cwtl
out
jb
shl
popa
xchg
andb
in
sub
imul
mov
cltd
in
push
pushf
jmp
sbb
nop
xchg
aas
jbe
cltd
aad
das
repnz
sti
loop
adc
sbb
mov
daa
mov
subl
out
dec
add
lahf
pop
jno
loop
push
leave
or
jl
lret
or
pop
pop
add
scas
test
icebp
in
pop
insl
mov
dec
mov
rcrb
sarl
daa
mov
add
adc
rolb
dec
mov
dec
dec
and
mov
or
test
es
xchg
push
aad
jmp
test
gs
cli
or
add
sahf
cwtl
mov
ficompl
into
mov
lret
jnp
jne
into
adc
bound
or
sub
mov
or
sub
sub
int3
mov
stc
arpl
lret
mov
sti
daa
pop
lret
ljmp
xor
les
pop
inc
xchg
das
insb
mov
mov
fldcw
gs
rcll
jg
inc
rorl
leave
push
pop
divb
shll
aaa
cmp
imul
pop
les
lret
jl
subl
ret
popf
leave
mov
fsub
lahf
dec
pop
popf
sub
push
xchg
shlb
push
xor
jmp
xor
cltd
and
out
movsb
push
xchg
mov
push
add
enter
call
arpl
ss
sbb
xlat
nop
cmp
and
jno
arpl
enter
cmp
int3
jp
std
mov
fs
mov
dec
dec
xor
outsl
jmp
xchg
mov
pushl
xor
das
mov
cld
stos
adc
inc
mov
cmpsl
stos
xchg
mov
jle
cltd
mov
rclb
mov
push
jge
roll
sub
mov
les
loopne
jl
pop
cld
lods
xchg
xchg
popa
inc
fs
xchg
psubsw
push
rorb
sub
sahf
jbe
mov
inc
xchg
xchg
shll
cwtl
xchg
xchg
jns
icebp
adc
adc
or
sar
dec
mov
xchg
dec
push
pop
in
adc
dec
pushf
out
push
not
cltd
dec
mov
clc
xchg
mov
jle
xchg
mov
jo
push
sti
or
ljmp
push
mov
fcmovu
inc
jmp
int3
fs
int
add
lds
pop
adcb
addr16
cltd
cmp
andb
loop
fst
aaa
xor
fnsave
ja
push
push
movsl
sub
push
add
xchg
je
sub
xor
sub
add
push
xchg
addr16
xchg
gs
inc
adc
movsb
mov
outsl
mov
jo
rcl
adc
out
enter
cmp
xor
in
pop
ljmp
pop
and
mov
call
js
xchg
mov
mov
adc
jbe
pop
xchg
pop
test
icebp
ss
adc
enter
mulb
hlt
mov
inc
inc
adc
bound
scas
test
call
test
push
cld
lods
and
arpl
fistl
push
xchg
push
adc
ret
inc
arpl
mov
mov
std
lods
or
mov
adc
fisubs
test
jg
popf
add
cmp
lcall
jg
ja
cld
and
inc
add
pop
mov
push
fmull
mov
ja
cmp
leave
call
inc
cmp
push
lahf
sub
pop
mov
or
inc
jnp
inc
movsb
mov
adc
adc
ret
pop
or
stos
shll
sbb
sahf
movsb
sbb
push
sbb
pop
push
sbb
fwait
cs
iret
or
sbb
in
adc
je
push
pop
mov
psraw
push
stos
scas
mov
movsb
xchg
jns
jbe
stc
or
leave
dec
sbb
cmp
mul
les
test
sub
repz
and
test
mov
lahf
mov
add
cs
xor
sub
or
fs
les
imul
sahf
jae
nop
xor
cmp
pop
cmp
dec
outsl
lret
fisttpll
adc
aam
cmc
push
pushf
ret
stos
mov
jne
mov
mov
repnz
fs
in
lret
roll
push
adc
or
mov
gs
ret
outsl
dec
in
push
test
cli
add
fs
jo
insl
call
sub
mov
sbb
add
xor
sbb
lods
sub
loopne
jl
push
fnsave
movsb
or
std
jno
sbb
jg
or
rcrb
ja
mov
shl
and
push
fsubrl
jp
xchg
inc
sbb
xor
nop
aaa
in
insb
adc
push
or
mov
push
jne
popw
pop
aaa
sbb
push
dec
inc
cmp
pop
push
mov
aas
and
jp
dec
test
sub
mov
mov
int3
push
lret
test
xlat
cli
mov
mov
fucomp
fisubrl
cmp
and
scas
sub
test
push
stos
push
mov
pop
and
ss
jae
insb
nop
movsl
out
and
shrb
sub
outsb
or
pop
jnp
and
scas
test
lcall
icebp
dec
into
mov
and
fldenv
testl
daa
test
fiaddl
mov
jg
sbb
ret
pop
xor
xchg
int
fwait
js
inc
and
outsl
pop
dec
and
add
dec
mov
repnz
test
xchg
sub
popf
jecxz
loopne
mov
icebp
jg
loop
add
cmp
rorl
mov
push
and
nop
icebp
xor
jae
or
xchg
pusha
mov
cmp
iret
js
cmp
push
testb
mov
push
incl
aad
xchg
mov
mov
push
clc
pavgb
mov
fistps
pop
arpl
rolb
add
outsl
or
mov
and
sbb
gs
imul
sbb
roll
mov
ret
cmpl
ss
adc
int
or
int3
loop
push
sahf
pusha
sbb
dec
in
mov
cmp
xchg
xorb
add
sub
dec
in
test
xor
leave
cmpsl
dec
lcall
jp
add
and
pop
fisubl
mov
sbb
and
decl
inc
clc
sub
xchg
add
daa
enter
cli
cs
mov
dec
cmp
pop
add
xor
add
stc
shll
lret
mov
int
adc
cld
in
pop
xchg
fstpt
pop
bound
int
fmul
jnp
dec
push
pop
adc
xchg
mov
jnp
subl
rcrl
add
dec
sbb
sbbl
call
xlat
add
lods
hlt
lods
jns
jo
jae
and
sub
out
cmp
mov
and
jo
jl
mov
shlb
fimull
sbb
sahf
push
sbb
daa
ss
xchg
test
adc
pop
fisttps
scas
nop
pop
mov
aaa
push
repz
add
pushf
jb
mov
mov
add
fcmovb
jae
adcl
call
inc
inc
subl
add
sahf
xchg
pop
fidivrl
jle
inc
in
std
lret
fcmovbe
std
dec
stc
or
push
inc
xchg
sbb
jp
and
xor
in
js
jp
mov
in
int3
leave
push
mov
inc
dec
cld
fldcw
push
call
mov
imul
xchg
sbb
test
int
out
fs
clc
inc
mov
dec
sub
scas
dec
lods
adc
cmp
sbb
xor
imul
movsb
pop
fstps
stc
mov
add
or
pop
clc
cmp
sti
stos
call
pop
fwait
lods
add
adc
xchg
lcall
mov
pop
ror
in
mov
dec
test
call
sub
sbb
mov
outsl
sbb
add
jb
jmp
cmp
stc
push
jmp
ds
pop
inc
sub
xchg
jbe
mov
stos
pusha
push
sub
gs
test
jbe
mov
popf
adcl
push
push
addr16
adc
lock
mov
int3
sahf
dec
popa
mov
cmpsb
jb
rclb
fcompl
psubb
pushf
adc
stc
xor
shr
mov
cmp
out
mov
aaa
sub
cmp
addr16
jecxz
push
pop
fsubs
push
xchg
xchg
fs
imul
loop
adc
inc
outsl
sbb
outsb
int
and
add
cmp
xchg
add
loop
fidivrl
dec
movsl
arpl
fbstp
cmp
movsl
lods
icebp
push
mov
stos
in
sub
or
in
dec
icebp
pop
and
cwtl
ret
ds
jmp
mov
popa
loope
xor
or
rcrl
in
mov
imul
inc
ljmp
cmpsl
dec
movsb
ret
cmp
loopne
adc
and
pop
push
adc
lret
sbb
scas
lretw
test
jmp
js
sti
cli
cmp
push
and
mov
lahf
cmc
dec
leave
ljmp
outsl
sbb
push
fdiv
subl
xor
int
xchg
mov
in
push
xor
subl
test
sbb
push
arpl
fwait
sbbw
mov
mov
mov
mov
xchg
mov
ds
sub
or
lret
lcall
mov
ds
push
out
pop
push
pusha
cs
lret
xchg
mov
and
fidivs
ret
fsubrl
leave
subl
test
mov
add
pop
les
sahf
cli
and
dec
fldt
enter
sbbl
xorl
pop
mov
int
push
add
fsubs
aad
repz
outsl
in
push
mov
cmp
push
cmp
inc
fwait
jmp
push
cmp
xchg
repnz
rorl
cmpl
or
mov
shl
bound
sub
aas
dec
pop
movsl
dec
sub
enter
iret
data16
aam
mov
popf
lret
jb
mov
aas
rorl
ja
cmp
outsl
sbb
xchg
jge
daa
adc
fsubrp
sub
push
dec
daa
sbb
jle
jae,pt
shlb
xchg
push
in
mov
insl
and
adc
scas
out
jnp
int
outsl
arpl
iret
les
lock
jbe
lds
rclb
bound
fnstenv
sbb
cld
mov
jae
fbld
outsl
jno
add
test
leave
or
shll
mov
daa
sbb
ss
mov
std
jno
push
mov
pop
pop
leave
mov
shll
jo
loop
dec
xor
dec
or
imul
fcompl
cltd
sbb
xor
dec
and
sti
imul
movsb
push
stos
scas
jb
insl
test
inc
xchg
or
fistps
inc
je
add
bound
sarl
xchg
push
push
sbb
dec
jne
negl
dec
pop
cli
lret
mov
loop
rol
cmpsb
add
sbb
xchg
inc
xchg
inc
lds
fs
inc
or
mov
mov
cmp
jnp
xor
movsl
outsl
jnp
ret
add
push
mov
out
xor
lds
or
jb
mov
inc
cmp
and
xchg
movsb
addr16
adc
mov
dec
cltd
rorl
and
inc
mov
shlb
je
add
dec
pop
adc
xor
out
andb
push
je
jnp
pushf
push
lods
lahf
popa
push
pop
scas
cmp
sub
loope
xor
movl
imul
sbb
mov
fs
out
aaa
xchg
jge
inc
mov
dec
dec
cs
repnz
add
and
xchg
cwtl
cmpsl
and
sub
xor
push
mov
outsl
mov
xor
cmpsl
xchg
sahf
aas
mov
mov
stos
push
test
sub
sahf
nop
jmp
mov
fmul
or
fimull
pop
repz
loopne
imul
mov
ret
ret
xor
cmp
xchg
insl
mov
inc
inc
icebp
rorl
ffree
insb
js
popf
pop
iret
xlat
inc
aas
fwait
cwtl
mov
xchg
sub
mov
bound
aad
pop
out
ss
cmc
test
mov
ljmp
fcomp
sbb
int3
xor
mov
ja
inc
dec
mov
aad
fsts
mov
cmp
xchg
mov
aaa
ds
jmp
pop
stos
dec
rcrb
hlt
inc
fs
adcl
arpl
mov
jno
int3
in
fadd
inc
xlat
and
lret
test
ss
sti
icebp
sbb
inc
sbb
mov
into
push
and
in
and
xchg
jne
push
xor
dec
lcall
adc
sbbb
lahf
roll
xchg
or
fwait
adc
jo
push
lcall
loopne
inc
roll
in
inc
mov
adcb
inc
ret
mov
inc
sub
jmp
in
jbe
aad
in
ss
mov
dec
je
leave
out
ss
gs
inc
mov
inc
adc
pop
cmp
ljmp
jmp
stos
ljmp
push
es
xchg
and
cmp
sbb
clc
xchg
sub
or
pop
addr16
xor
ja
outsl
adc
and
push
pop
or
mov
hlt
sub
das
pop
dec
testl
xchg
and
lock
jmp
nop
gs
sbb
shlb
mov
xchg
or
sub
lods
fiaddl
xchg
shll
add
cmp
add
in
pop
xor
xor
cmpsl
pop
pusha
or
pop
pop
jo
push
fidivrl
push
jb
cmp
inc
movb
shrl
sub
fs
or
lods
dec
jne
mov
jmp
sub
and
ret
mov
imul
aam
hlt
mov
xchg
daa
sbb
lahf
clc
sbb
nop
adc
fbstp
mov
mov
mov
movsl
jne
imul
rol
sbb
out
scas
xor
popf
adc
jns
aaa
es
xchg
mov
cs
cmp
std
mov
sbb
faddp
mov
jbe
inc
add
insl
pop
sti
outsb
ljmp
in
mov
mov
jno
pop
add
mov
pop
add
ret
jbe
ret
cmp
sub
loope
std
xor
cmpsb
frndint
lds
sbb
mov
test
xor
in
pop
lods
repnz
lcall
mov
cld
pop
push
mov
jne
push
sbb
adc
xchg
jne
mov
mov
push
cld
adcb
aas
add
les
sarl
lret
mov
dec
fldz
jae
xchg
sub
fcompl
loop
lret
out
dec
fsubrl
out
mov
inc
lods
mov
sarl
dec
pop
iret
sbb
sbb
nop
ds
stc
gs
loop
loop
imull
pusha
scas
sbb
cmpsl
aas
xchg
xlat
pop
pop
pop
stc
jmp
and
xor
mov
push
lcall
popa
cmp
out
dec
inc
das
jns
sbb
repnz
out
or
add
push
aad
and
cmp
shlb
and
arpl
adc
xlat
cmp
cmp
nop
sub
lret
cmp
sbb
jle
inc
add
adc
sbb
dec
imul
lahf
pop
add
scas
inc
inc
jb
xor
add
pop
movsb
sbb
dec
inc
push
cmp
xchg
psrlw
or
pop
int
jb
xor
loopne
or
aam
fs
int
mov
ja
and
pop
hlt
lcall
and
push
stos
mov
insl
inc
mull
mov
sbb
insb
jge
in
or
sub
test
push
sub
inc
les
popf
pop
out
xchg
orb
push
pop
imul
pop
scas
fs
sbb
mov
xlat
fdivrl
xor
pop
movsl
sbb
movsl
fistl
sub
push
dec
insb
push
jb
dec
adc
push
out
jle
int
decb
sub
mov
jo
lods
or
xchg
mov
xchg
push
and
jae
repz
stc
xchg
icebp
mov
mov
pop
call
jge
into
imul
sbb
mov
cmpxchg
sub
cli
insb
cmp
bound
jecxz
adc
fsubr
add
jp
gs
outsb
loopne
sahf
fs
xchg
rorb
and
rcrl
cmpsl
dec
sbb
xor
mov
mov
jecxz
inc
cltd
mov
out
add
test
scas
inc
outsl
jmp
mov
aad
cmp
and
xchg
inc
sbb
lds
inc
mov
xor
add
imul
adc
lret
icebp
orl
mov
push
fwait
adc
arpl
cmp
inc
cmp
mov
push
orb
aad
and
sahf
xchg
sbb
nop
into
in
push
mov
mov
mov
xchg
fiaddl
jno
sub
scas
roll
mov
xor
inc
je
popa
cmp
daa
stos
ja
fdivs
shll
mov
pusha
iret
push
xchg
out
or
cltd
ret
sbb
out
xor
lret
imull
jo
aaa
fwait
sbb
jnp
js
add
jns
pop
mov
es
pop
cltd
roll
xchg
xchg
sbb
ret
stos
pop
ljmp
gs
adc
test
les
sti
jno
inc
out
inc
xchg
mov
dec
insl
cwtl
imul
and
or
sub
lods
gs
jecxz
xchg
sub
mov
fdivs
xor
cltd
xchg
mov
in
xchg
fistpl
lahf
call
loopne
mov
sub
adc
mov
iret
je
push
mov
fs
mov
xchg
das
or
ret
mov
test
mov
inc
in
jae
xchg
or
xlat
das
add
test
pop
es
xchg
imul
fiadds
cli
cmp
fwait
push
xchg
xor
add
subb
call
sub
inc
test
xor
adc
pop
insb
outsl
xor
xchg
les
loopne
sahf
mov
in
add
sbb
dec
dec
xor
sbb
push
or
enter
mov
jmp
nop
push
or
je
icebp
and
inc
shl
adc
sub
add
xchg
lods
inc
lods
mov
sub
pusha
jno
push
cwtl
dec
jae
dec
lock
add
sub
ja
pop
loop
mov
and
enter
push
adc
mov
mov
cmp
sahf
daa
xor
mov
call
mov
addb
adc
sbb
push
enter
pop
dec
sbb
andl
push
push
sbb
iret
loope
lcall
xchg
add
scas
inc
mov
cltd
mov
or
aaa
mov
pushf
sar
idivl
icebp
inc
push
xor
mov
lea
push
jge
inc
dec
sub
negl
ljmp
or
jmp
mov
cmp
call
jbe
push
inc
add
cmp
lea
cmc
bound
out
outsb
xchg
or
cmpsl
les
cmpsb
lret
icebp
mov
rcr
in
mov
cmpb
loop
push
sbb
ret
mov
fmull
mov
mov
jbe
lret
cwtl
jmp
jae
repz
xchg
insb
pop
sbb
fmull
jp
xor
mov
and
inc
addr16
jae
mov
leave
ror
fwait
inc
add
xchg
aam
dec
bound
push
fisubrl
xchg
xchg
inc
pop
ret
mov
mov
pop
jnp
out
jo
ss
push
xor
push
out
jmp
dec
jns
scas
repz
add
repz
mov
jae
or
add
rol
xor
inc
cld
xchg
idivl
out
iret
mov
pop
aam
in
adc
or
testl
bound
xchg
dec
clc
sub
negb
pushf
jns
sbb
mov
mov
cli
aad
out
mov
jne
cmpsb
ror
mov
sbb
jno
cmp
jmp
sti
inc
mov
and
jno
stos
leave
xor
jno
pop
das
inc
xor
jne
test
pop
cwtl
fstl
pop
repnz
or
adc
imul
and
xchg
in
jg
sub
fisubrl
push
pop
notl
push
lahf
mov
push
adc
and
leave
dec
push
in
repz
cmp
adc
test
jbe
hlt
lods
or
out
mov
or
insl
jmp
inc
test
jmp
sbb
repnz
mov
jge
les
mov
pop
xchg
pop
pop
in
dec
sub
push
xchg
mov
and
pop
jae
inc
pop
std
sbbl
fdivrl
nop
mov
adc
mov
jae
xchg
jo
dec
mov
push
lods
mov
fildl
cmpb
or
mov
inc
xor
rcl
addr16
outsl
or
dec
es
dec
xor
mull
cmpl
fidivrs
into
fistpll
sahf
cmp
fs
not
xchg
stc
shll
or
arpl
xor
pop
aas
cs
hlt
xor
js
xchg
or
mov
pop
das
loop
bndldx
push
adc
xchg
shlb
lods
addr16
push
lods
bound
popa
out
pushf
daa
add
mov
adc
aas
sub
add
and
inc
out
mov
arpl
test
stos
loopne
imul
mov
jb
ds
out
icebp
mov
int
jae
cwtl
scas
pop
push
sbb
test
mov
xor
sbb
stos
xorb
mov
leave
pop
popf
cmp
das
add
ret
pop
sbb
sbb
jmp
push
dec
mov
movsl
pop
or
mov
xor
mov
pop
xor
cltd
sub
push
dec
jecxz
cmp
mov
daa
xchg
or
dec
xchg
xor
pop
aaa
pop
and
mov
adc
fdivr
add
inc
xor
aas
enter
xorb
popa
pushf
adc
and
mov
decl
shrb
jecxz
mov
mov
jmp
stc
inc
movsb
xor
lret
aad
fcmovbe
dec
enter
mov
les
cltd
lods
sub
mov
fs
lahf
aaa
rclb
sbb
aaa
pop
inc
push
xchg
ss
pop
insb
inc
mov
xlat
pusha
xor
std
xor
mov
fisubl
into
inc
and
jns
lock
ljmp
or
sub
cs
out
mov
pop
and
pop
and
int3
mov
arpl
lahf
cmp
jbe
mov
mov
hlt
in
mov
into
in
adc
sub
mov
fnstsw
or
loop
sbb
enter
and
dec
xlat
sub
test
lcall
daa
sub
cmp
repz
or
or
cmp
iret
inc
and
cmpb
loopne
push
xchg
cli
in
or
pop
rcr
push
outsb
xlat
jg
popf
jbe
sbb
xchg
jnp
repnz
stc
repnz
push
adc
aad
cmp
adc
xchg
inc
mov
adc
inc
xchg
rol
aas
scas
orb
xchg
mov
cmc
and
lods
xchg
xchg
mov
inc
cwtl
cwtl
int
fwait
enter
xchg
ljmp
sub
shlb
pop
or
inc
push
mov
aas
inc
out
lret
mov
cld
cltd
int3
aad
inc
jp
mov
cmpsl
jp
sbb
push
push
add
mov
ja
jae
fiadds
movsl
mov
int
call
ret
pop
add
xor
test
int
fs
enter
fmul
push
or
xor
lahf
jle
mov
stos
test
or
icebp
adc
enter
jne
imul
out
xchg
int3
addr16
imul
ja
inc
fisubrl
nop
ss
cltd
xor
outsl
bnd
mov
push
add
add
lret
cwtl
mov
sbb
push
aaa
shlb
insb
mov
test
fwait
mov
lahf
push
in
cmp
xchg
jmp
nop
xor
bound
xchg
mov
lret
fcmovu
mov
popf
mov
cmp
xor
fiadds
mov
inc
sti
dec
out
jne
cmp
ffreep
repz
cs
and
mov
jp
lea
sbb
es
aad
dec
imul
fwait
jecxz
xchg
inc
mov
and
push
cmpsl
test
inc
push
mov
outsl
jbe
fistpll
insl
mov
arpl
pop
test
aas
ds
mov
sar
dec
sbb
adc
lret
ljmp
sbb
or
pop
xor
cld
mov
rolb
push
and
inc
insl
imul
jb
out
push
mov
push
aas
mov
push
insl
jb
jp
xchg
or
rol
xchg
scas
inc
movsb
xchg
cli
jb
or
rclb
mov
test
data16
jne
int3
in
jl
scas
mov
and
sahf
pop
enter
inc
sbb
and
cmp
inc
shlb
shl
arpl
mov
stos
xor
mov
push
test
jmp
cmp
pusha
and
mov
inc
cmc
pop
loopne
mov
fldenv
sub
mov
push
in
test
adc
popf
cmp
sahf
add
pushf
pop
or
push
inc
das
or
insl
adc
rorb
insl
stos
je
sar
jecxz
mov
or
cld
jmp
loopne
push
mov
fnsave
mov
int
movsb
mov
push
cmp
xor
add
mov
or
call
pop
stos
popf
jno
pop
fisubrs
in
outsl
cmp
adc
xchg
push
js
adcl
inc
lds
sarb
repnz
out
enter
arpl
imul
iret
xchg
inc
cmpsl
bswap
sbb
popf
add
push
xchg
shlb
gs
cld
sbb
cld
testb
sub
scas
dec
aam
mov
push
mov
mov
cmp
rol
jnp
mov
scas
aaa
xor
lcall
fnstenv
or
pop
xor
cmp
cwtl
push
mov
loope
xchg
addb
repnz
iret
dec
pop
les
push
in
or
xchg
dec
iret
int
dec
lahf
cmp
push
or
xor
setg
mov
pop
arpl
mov
fwait
cmp
call
push
pushf
out
mov
or
in
pop
test
cmc
jp
pop
pop
ret
scas
and
into
or
imul
gs
fs
je
rcrl
jmp
push
pop
mov
inc
ret
loope
scas
inc
lret
cs
in
mov
xor
lds
bound
arpl
mov
or
push
pop
pusha
loopne
idivl
xor
push
add
das
mov
xor
icebp
pop
xchg
data16
cmp
mov
inc
jge
and
add
mov
inc
push
lcall
orl
js
aam
sti
fimuls
int3
jmp
add
jb
adc
lods
mov
loopne
sbb
push
push
xchg
rol
pop
cmpsb
in
out
pop
in
xchg
pop
subl
test
hlt
fdivl
or
sub
jp
incl
xchg
dec
out
bound
outsb
cld
jp
push
leave
and
inc
sub
shlb
js
and
test
repnz
push
push
inc
push
push
push
loope
iret
sbb
incl
mov
mov
imul
into
mov
inc
cmpsb
push
jmp
jne
adc
mov
mov
add
push
mov
je
push
mov
jp
das
sub
movsb
fdiv
sub
xchg
add
mov
sbb
das
lock
fwait
xor
gs
mov
jno
push
loopne
jb
dec
imul
pop
decl
dec
adc
push
dec
pop
xchg
sbb
out
data16
mov
cmp
popa
xchg
ficoms
lods
dec
es
bnd
add
inc
sbb
std
or
sti
ljmp
data16
scas
pop
jmp
inc
inc
fmulp
and
cmp
outsl
mov
mov
jp
pop
icebp
in
rorb
fldcw
cmpsl
mov
dec
mov
sarb
out
icebp
imul
movsl
mov
xor
sbbl
mov
lea
mov
inc
or
xchg
mov
pop
push
stc
pop
lea
mov
call
inc
push
adc
xchg
mov
jmp
sub
xor
popf
or
jno
sub
sub
stos
sbb
jnp
push
xchg
popf
and
out
xchg
pop
jl
popa
out
std
pop
xor
xchg
cmp
loopne
out
daa
inc
pop
jecxz
pop
and
mov
lea
sub
stc
mov
cmpsl
cmp
dec
xchg
clc
push
mov
in
mov
int
in
cmp
lods
cmp
test
inc
loopne
inc
sub
rclw
rorb
and
jecxz
sub
dec
mov
cmp
push
iret
pop
adc
dec
out
adc
aam
mov
dec
cli
int3
xchg
or
rclb
adc
int
fsubl
adc
and
mov
mov
dec
push
dec
outsl
cmp
lret
xlat
insl
loop
bnd
cmp
mov
dec
subb
hlt
in
mov
cmp
ficoms
mov
mov
and
add
out
sub
gs
and
sbb
mov
test
jle
imul
ljmp
lret
out
jmp
jl
out
mov
xor
add
jge
ss
or
adc
add
rcll
jle
inc
hlt
add
mov
add
pop
dec
xor
jmp
mov
call
rcrl
imul
pusha
add
orb
adc
pop
loop
sar
ret
out
stc
loop
adc
xor
lods
xchg
push
mov
lods
mov
push
dec
cmpsb
test
ds
add
movl
mov
jnp
loopne
cltd
jae
and
lea
inc
push
out
xor
xchg
mov
jmp
dec
xchg
cmpsb
pop
mov
adc
adc
push
rcll
inc
cmp
mov
lock
and
sbb
cmpsl
lret
xor
mov
dec
test
aad
mov
adc
jmp
call
sbbb
pop
and
stos
xor
testl
ret
pop
data16
push
mov
pusha
dec
scas
daa
cmp
loopne
cmp
lret
cmp
xor
addr16
in
jge
xchg
inc
inc
imul
dec
sub
xor
lret
mov
sbb
mov
dec
pushf
lds
daa
jne
xor
xor
popa
mov
movsl
in
bound
lahf
mov
call
xor
stos
ljmp
or
sahf
dec
aaa
xchg
ja
testl
int3
xor
sub
xchg
in
xchg
mov
and
mov
pop
jge
imul
iret
push
repz
call
daa
lock
sub
rcrb
jmp
call
aas
mov
inc
and
inc
jnp
lea
out
loopne
push
gs
inc
dec
mov
xor
addl
inc
daa
inc
sar
setb
repnz
jae
shll
xlat
lcall
jle
mov
insb
lret
sub
pop
mov
jmp
repz
fdivrs
and
in
rorb
or
mov
lds
pop
mov
and
outsl
jle
nop
sbb
pop
push
or
push
cmp
adc
xchg
fbstp
jmp
imul
adc
lahf
xchg
sub
sbb
push
xor
mov
ret
dec
negl
sahf
pop
frstor
cmp
test
cmp
or
sbbl
push
aaa
fcoms
xor
mov
in
mov
nop
rorb
xchg
std
or
sar
subb
mov
push
sbb
daa
and
jmp
mov
dec
xor
lods
lcall
rclb
sbb
push
pop
dec
adc
mov
insl
or
mov
push
in
xchg
xchg
fmull
jnp
fs
push
jl
mov
outsl
mov
mov
in
pop
add
sbb
dec
and
mov
call
inc
adc
fdivp
sbbl
adc
andl
outsb
fs
movaps
dec
push
mov
fidivrs
pop
popa
jo
and
js
ret
add
xchg
dec
stos
inc
es
adc
in
stos
jo
scas
sbb
pop
lcall
push
push
mov
jmp
pop
lock
mov
cmpsl
sbb
ja
xor
cmp
arpl
aas
xchg
sbb
mov
add
js
or
faddl
dec
fsubs
mov
fwait
mov
nop
outsb
jg
dec
cld
fistpll
pop
lock
loope
jmp
adc
xlat
cmp
aad
outsl
pop
or
push
and
mov
cmpsb
mov
sbb
lahf
xchg
push
jo
add
cmp
push
cs
pusha
lea
shl
cli
pop
enter
daa
ja
mov
fnstcw
add
addl
mov
mov
mov
dec
test
jae
or
dec
and
jbe
gs
xor
int3
test
cmp
ret
lods
pop
jle
aad
lea
mov
pop
cmp
adc
dec
dec
add
orb
les
fsubl
push
mov
mov
das
cs
loop
popf
mov
je
dec
int3
dec
sub
ljmp
fs
insb
aas
adc
imul
int
out
cmp
jnp
cmp
adc
loopne
into
cmpsb
push
cmpsl
test
arpl
cmp
mov
mov
sbb
fs
lret
fs
mov
lahf
movsb
aas
cmp
mov
ss
pop
lret
lea
pusha
mov
jb
dec
inc
fisubrl
add
shlb
rorb
popa
mov
jbe
pushf
mov
js
fiadds
lods
mov
mov
or
jns
or
popf
xchg
loop
mov
push
xlat
test
inc
repz
push
insb
mov
jl
rcrb
cmc
rorb
push
ret
imul
cmp
ret
mov
mov
mov
push
repz
mov
push
loope
push
aas
ljmp
jl
or
sbb
inc
adc
lcall
mov
lods
pop
mov
pushf
jmp
or
iret
andb
stos
das
stos
lods
mov
rclb
mov
test
out
fsts
add
jp
xchg
mulb
je
jg
xchg
mov
fs
mov
add
jbe
dec
mov
cmp
ja
mov
or
in
loope
push
mov
jl
dec
rorb
xor
cmpsb
push
inc
dec
lds
pop
ret
shlb
cmp
jne
cwtl
push
sbb
jns
stos
movsb
sbb
mov
xor
fstpl
enter
sahf
mov
ljmp
cmpsb
inc
cs
hlt
into
pushf
xchg
dec
sti
roll
cli
mov
and
addr16
mov
clc
shrl
ljmp
enter
xchg
pop
cmpsl
sub
mov
mov
xor
or
fwait
pop
js
ljmp
js
push
push
xor
push
idivl
push
jno
pop
aad
or
lret
push
cmc
pusha
test
mov
cmp
pop
mov
sar
pop
jmp
aaa
in
cmp
mov
xchg
lret
out
sbb
mov
dec
jl
xor
pop
sahf
or
fisubl
roll
dec
dec
in
or
push
roll
sub
push
adc
lcall
push
dec
and
jmp
sarl
pop
pcmpeqd
jecxz
xor
std
hlt
std
sbb
mov
mov
xor
adc
fcomp
mov
in
pop
xchg
push
mov
jb
js
mov
sub
dec
sub
cmp
xchg
mov
iret
xchg
rol
lock
cmpsl
cmp
add
sbbl
ror
loope
jmp
cmpsb
popa
xor
ret
mov
rcll
aam
les
and
push
insb
push
add
test
pop
aad
cld
push
push
and
bound
jg
cmc
lcall
into
int
xchg
sbb
add
xor
inc
mov
leave
sub
std
movsb
movsb
test
push
xor
pop
rolb
jns
ret
mov
push
flds
push
cwtl
add
push
stos
and
cmpsl
jnp
jg
mov
push
xchg
push
inc
cli
xor
sti
popf
or
clc
les
adc
in
adc
sub
or
je
push
and
push
stos
mov
fs
push
movsl
test
jno
arpl
xchg
sbb
push
dec
daa
jecxz
jns
addl
leave
pop
sbb
ja
rorb
repnz
cli
es
out
mov
out
xor
mov
sahf
ret
pop
mov
sub
jecxz
mov
mov
aas
es
xchg
mov
and
sbb
andl
push
mov
popf
clc
mov
test
rclb
cmp
pop
sbb
pop
sbb
mov
push
jmp
and
sbb
mov
js
mov
add
and
adc
popf
xor
xorl
fidivs
js
lea
fstl
push
adc
adc
xlat
cmc
add
movsl
adc
notl
push
mov
test
sbb
shufps
ret
call
push
inc
jnp
icebp
and
xor
icebp
xor
ds
push
shl
outsl
stos
fnstenv
out
in
sbb
ds
sub
push
jno
or
mov
mov
sbb
add
in
cltd
out
and
mov
mov
push
mov
aaa
arpl
and
out
gs
jecxz
loopne
scas
jns
outsl
mov
loopne
or
add
dec
in
dec
addr16
push
add
fstl
ja
cmpsl
dec
fisubrl
test
addr16
aaa
inc
int3
pop
push
stc
push
push
loope
dec
pop
jmp
insb
and
jne
sub
push
jnp
iret
jl
repz
inc
outsb
loop
shl
jmp
ljmp
popa
mov
pusha
dec
ret
and
mov
mov
cmp
mov
fcoms
shrb
repz
and
sbb
cmp
or
sub
loop
mov
jne
out
ret
aas
add
mov
xor
enter
xchg
sub
inc
mov
inc
popf
cmp
sub
mov
pop
lock
jo
push
leave
adc
jne
mov
xchg
add
aam
pop
out
jmp
stos
ds
test
inc
insb
popf
aaa
into
push
dec
leave
inc
push
fs
ja
jnp
rcr
adc
loopne
dec
push
dec
cmp
lret
mov
xchg
vmovntps
iret
aas
stos
adc
out
fstpl
xchg
in
or
xchg
lahf
and
test
dec
push
stc
pushf
scas
and
add
dec
push
mull
shlb
and
pusha
and
jle
sbb
push
lahf
dec
push
sub
adc
and
cmp
in
pusha
cmpsl
and
inc
lahf
mov
pop
adc
clc
movsb
call
cmp
push
shll
inc
jle
shrl
mov
scas
inc
mov
pop
jmp
lea
xchg
sub
jo
mov
mov
insl
or
fwait
in
xchg
or
inc
push
cmc
ret
orb
or
mov
pop
aas
ss
dec
cmp
and
push
cmp
pop
in
test
mov
mov
jmp
cwtl
out
lahf
cli
dec
fsubl
add
pop
cmp
and
mov
insl
lea
jno
sbb
scas
setp
or
push
add
push
andl
lahf
out
pop
scas
mov
fdivl
xchg
ds
aas
dec
inc
mov
jl
mov
pop
mov
adcl
out
push
sbb
addl
lret
jnp
insb
xchg
xchg
out
in
push
stos
sub
push
dec
mov
stc
aam
test
scas
out
pop
sahf
repnz
loope
mov
xor
insb
ja
into
xchg
ret
jnp
shrl
and
and
pusha
dec
in
mov
ja
jbe
cmpsb
out
leave
lds
adc
pusha
dec
iret
xchg
cmp
adcb
inc
lret
push
push
mov
mov
inc
dec
mov
imul
loopne
lods
sbb
lock
jb
shr
inc
repnz
and
mov
sub
loop
dec
mov
in
inc
fildll
dec
jp
cltd
dec
sbb
das
rcll
push
push
mov
arpl
pop
mull
mov
pop
push
cltd
inc
aas
xchg
adc
orl
mov
push
ljmp
popa
adc
inc
js
stos
in
aam
mov
sub
fwait
fs
arpl
out
adc
stos
movsl
or
fistpl
fbstp
push
jne
mov
sarl
int
mov
enter
sbb
pop
xchg
sti
mov
add
dec
rep
clc
les
dec
pop
out
iret
jle
insb
rolb
sbb
ret
or
mov
xor
add
iret
out
das
sbb
int3
rcll
mov
popl
hlt
pop
sbb
push
fdiv
cld
xchg
dec
or
in
fisubrl
mov
imul
fdivrs
or
sbb
sahf
loop
jge
mov
fwait
sbb
repnz
xor
mov
mov
push
idivb
ljmp
pop
add
xchg
cmpsb
std
sbb
in
pop
lcall
pop
gs
push
mov
ret
pusha
outsb
xchg
adc
fistpll
cmp
inc
daa
rclb
pop
cmovl
inc
pop
fscale
adc
ss
call
jbe
in
sub
mov
dec
inc
ret
int
sub
fimull
sbb
mov
imul
frstor
insb
cmpsl
pop
sbb
icebp
inc
push
std
push
mov
and
or
cli
fwait
pop
int3
sbb
in
popf
fbld
adc
out
add
sub
xor
in
es
loop
lcall
push
pop
aas
or
mov
test
inc
in
into
mov
dec
insl
jns
sub
jbe,pn
mov
fsts
je
and
xchg
loopne
and
inc
push
popf
rcl
add
push
clc
sbb
movsb
in
and
fnstsw
jmp
mov
popf
cmp
sbb
pop
pop
scas
call
mov
test
out
mov
push
fistpl
in
inc
push
loop
incb
jne
pop
gs
adc
push
xor
mov
in
int3
jle
sti
loope
sbb
pop
pop
add
mov
mov
sbbb
repz
xchg
js
mov
mov
pusha
push
add
push
mov
jp
xchg
data16
test
clc
jae
jg
adc
dec
push
lret
pushl
in
andl
mov
cmp
add
xor
mov
xor
lods
dec
das
rolb
ds
ja
lret
push
aam
and
mov
jno
out
mov
adc
push
jb
fmul
pop
pop
dec
pop
adc
jecxz
push
xor
mov
outsl
push
ret
shrl
cld
xchg
repnz
aas
js
add
adc
mov
xor
xor
add
loope
pop
jmp
inc
mov
push
leave
int
or
or
cmpsb
pop
xchg
cmp
sahf
test
cwtl
test
inc
sub
inc
cli
cld
mov
arpl
movsl
js
gs
mov
pusha
scas
loope
dec
push
outsl
addr16
scas
and
xchg
push
test
mov
mov
pop
fdivl
sub
pushf
lods
hlt
jo
mov
sub
out
cld
test
nop
lock
cmp
mov
les
lods
punpckhwd
enter
fisttpll
movsl
shlb
mov
pop
inc
lcall
sub
cwtl
sbb
arpl
test
nop
dec
sbb
pop
dec
sbb
sub
hlt
xor
in
test
cs
and
mov
icebp
popa
sub
pop
scas
push
push
out
js
xchg
in
pushl
loope
pusha
adc
loopne
loop
jl
add
push
xchg
mov
mov
sbb
adc
mov
lods
mov
gs
xor
popa
nop
xchg
jo
cmp
into
out
test
test
mov
push
mov
jae
loop
adc
mov
jl
dec
repnz
cmpsl
stos
rolb
nop
in
lcall
mulb
outsl
sbb
aas
lahf
xchg
pop
es
dec
add
std
lods
popf
lret
lret
cmpsb
shlb
xor
or
pushl
stos
xorl
add
jnp
dec
aam
jl
dec
and
push
je
ljmp
scas
aam
push
mov
js
mov
mov
add
cld
dec
push
mov
jecxz
nop
loop
jle
clc
loop,pn
out
rorb
jl
jmp
adc
add
sub
lcall
ds
adc
lods
inc
ljmp
dec
pop
mov
bound
sub
jne
clc
ret
jge
es
icebp
fwait
cmp
push
xor
mov
repz
dec
stos
cli
inc
imul
pop
call
add
call
test
push
or
add
inc
add
ret
cs
in
mov
sbb
mov
fldl
adc
inc
xor
or
ret
push
add
mov
push
dec
dec
jle
push
mov
push
cltd
repz
xor
pop
pop
adc
out
cli
cwtl
xchg
push
and
lods
lds
fidivrs
je
inc
popl
out
aas
int3
js
and
add
jle
cmp
mov
and
xor
and
jg
inc
push
add
pop
in
or
movzwl
loop
adc
mov
insb
pop
mov
mull
add
imul
mov
mov
les
push
dec
sub
aad
aas
xor
pop
adc
xor
aaa
outsl
data16
xchg
outsb
adc
loop
fwait
repnz
adc
addr16
xchg
cmp
jg
ret
std
lods
mov
fadd
scas
jne
int
jl
inc
mov
movsb
cmp
xchg
lret
mov
push
dec
flds
out
call
enter
mov
sub
mul
mov
call
xor
je
sub
cltd
lahf
sahf
popa
sahf
aam
xor
or
dec
add
out
and
ficoms
xor
mov
in
push
sbb
sbb
addl
jecxz
nop
aam
rolb
jae
cmp
fs
pop
das
fnsave
jae
pop
add
call
sbb
out
lods
outsl
adc
cld
and
loop
sbb
push
adc
lock
hlt
push
push
cmp
scas
fcoms
push
sub
loop
fistpl
sti
mov
xchg
stc
loope
mov
lock
pop
mov
out
xchg
sbb
push
lds
fists
stc
lcall
insb
push
xor
out
mov
iret
ds
dec
xor
mov
xchg
in
stc
mov
enter
addb
ss
mov
addr16
mov
gs
adc
jp
add
daa
pop
addr16
mov
cmpsl
or
mov
mov
fisttpll
push
adc
out
lcall
push
mov
sbb
mov
lock
repz
push
mov
ja
xchg
xor
mov
enter
pop
insl
xchg
inc
fldcw
sub
jne
sub
ret
jb
divl
push
fimuls
enter
lcall
dec
hlt
scas
jl
adc
hlt
mov
inc
icebp
popf
jo
jns
aad
lret
mov
inc
add
xchg
pop
sbb
imul
lret
add
outsl
ret
fldl
insb
push
popa
xchg
imulb
aam
ret
cwtl
je
js
mov
mov
mov
notb
pop
fildll
fmull
or
iret
adc
and
xchg
sbb
jae
adc
popf
or
jb
ja
pushf
loopne
fwait
int3
xchg
dec
imul
adc
lea
call
sbb
rcrb
enter
bound
gs
jne
mov
ficomps
adc
mov
call
cwtl
pusha
shl
mov
test
scas
or
ret
xchg
outsb
insl
xchg
dec
push
in
scas
pop
dec
mov
pop
push
fsts
addl
or
sub
enter
ret
xchg
mov
add
mov
mov
int3
push
movsb
les
arpl
nop
repnz
xor
repnz
mov
or
adc
mov
sub
movsl
lock
popf
jno
cli
or
xchg
sub
add
sub
fnstcw
and
dec
and
ds
jl
mov
jecxz
mov
push
pop
mov
dec
adc
clc
pop
mov
sub
shlb
push
jae
pop
out
out
pop
mov
shl
sti
roll
sbb
jnp
ljmp
dec
leave
jmp
cmp
shrb
cmc
sbb
js
insl
jnp
arpl
movsl
lods
les
push
cmp
add
push
mov
push
mov
xchg
inc
test
scas
std
push
xchg
cmp
jecxz
lret
xchg
testb
fisubs
loop
inc
out
xchg
adc
or
movsl
aas
iret
pop
mov
mov
push
xor
les
add
cmp
adc
divl
xchg
pop
xor
test
mov
or
out
pushf
bound
sbb
call
shrl
push
stc
and
adc
pusha
push
inc
inc
mov
or
subl
popa
ss
ret
pushf
lds
xchg
daa
dec
xchg
lods
cmc
fdivs
jle
rclb
dec
push
movsb
mov
scas
and
cld
pushf
inc
cmpsl
or
lahf
stos
lods
adcl
cli
inc
xchg
sub
cmp
xchg
cmp
jne
fnsave
inc
enter
or
call
sub
stos
jl
xchg
ret
cld
rol
xchg
pusha
loope
stc
push
jno
out
mov
mov
mov
adc
xchg
stc
sbb
pop
fiadds
adc
or
jl
xchg
add
jmp
adc
iret
jns
sub
repz
inc
sub
std
aaa
outsl
aaa
xchg
enter
xor
stc
pushf
test
jp
test
mov
test
cmc
xchg
dec
inc
pop
sub
sbb
lcall
cmc
out
pusha
xchg
mov
push
pop
out
or
cmp
aad
cs
icebp
mov
cmpl
fs
dec
mov
sub
dec
push
call
fidivs
in
xor
pop
cmpsl
ljmp
cmp
arpl
call
inc
and
xor
shll
and
mov
ljmp
xchg
add
lock
lret
adc
xchg
mov
ljmp
jecxz
in
fiadds
jnp
jp
sbb
icebp
lods
popa
inc
jne
xor
adc
das
inc
fimuls
orl
repnz
and
pcmpgtw
mov
pop
pop
xchg
popa
repnz
adc
scas
pop
push
cmpsl
bound
jo
sahf
sahf
jecxz
jne
test
das
mov
lods
int
test
loop
dec
les
jmp
sarb
mov
pusha
test
roll
loop
sub
mov
cmpsb
pop
into
sar
lret
sar
lods
mov
arpl
outsl
sbb
lcall
sbbl
add
into
xchg
popf
sahf
je
and
sub
push
shlb
in
sub
stc
ljmp
daa
inc
mov
push
push
iret
in
push
adc
push
xor
popl
mov
fucomp
test
data16
jge
jb
cli
cmp
lods
or
shlb
inc
dec
xchg
call
mov
data16
xor
out
les
subl
rcrb
fsubs
inc
mov
std
pop
pop
sbb
mov
and
ds
loopne
es
push
or
mov
dec
xor
clc
mov
sub
out
mov
and
dec
std
xchg
dec
mov
xchg
pushf
adc
ffreep
jo
xchg
push
es
shrd
mov
idiv
cs
and
imul
xchg
stos
cmpxchg
mov
dec
imul
movsb
mov
xchg
xchg
pop
mov
sub
incb
je
rolb
repz
mov
les
arpl
mov
lret
iret
out
rorl
mov
push
dec
orb
or
in
fs
mov
pop
rclb
repz
loopne
jle
push
xor
icebp
mov
aam
mov
cwtl
jo
test
shl
dec
imul
loop
gs
sbb
inc
stc
sahf
loope
int
and
dec
mov
loopne
cmp
push
sbbl
xor
pop
or
lods
cli
data16
movsl
mov
cltd
test
xor
dec
mov
gs
lea
fs
into
push
clc
mov
pop
mov
pushf
arpl
cmp
and
ds
stos
lcall
cli
loope
repz
cs
gs
pop
roll
mov
adc
ret
sub
xor
repz
out
out
push
mov
xor
cltd
mov
cs
inc
shlb
stos
jl
pusha
mov
lods
mov
sbb
fisttps
ficoms
bound
push
xor
outsl
outsl
push
or
insl
dec
dec
loopne
push
cmpsb
pop
testl
xor
cmp
invd
int3
sub
mov
inc
repnz
outsl
jg
aad
fwait
inc
andb
sub
loop
stos
ljmp
out
lods
cltd
mov
hlt
mov
js
addr16
xorl
xchg
sub
in
movsb
xchg
mov
out
imul
mov
and
sbb
daa
js
sbb
push
ss
sub
cltd
xchg
inc
push
push
jmp
cltd
cmc
xchg
ret
xchg
xchg
inc
push
xchg
sbb
loopne
inc
int
test
and
sbb
pop
sub
sarl
mov
rorb
iret
push
setne
jp
movaps
into
fidivrs
jecxz
int3
lods
xchg
mov
push
or
push
fnsave
pop
sub
add
or
popf
cmp
jbe
or
cwtl
jo
xchg
cli
inc
test
or
mov
mov
xor
lret
outsl
push
pusha
and
loopne
sbb
dec
daa
xlat
jmp
in
mov
mov
outsl
sub
mov
daa
adc
movsl
adc
xchg
mov
pop
mov
outsb
mov
jle
std
sub
inc
test
out
inc
inc
mov
es
and
sti
pusha
cmp
stc
pop
orb
adc
int
outsl
rorb
rcrb
test
mov
ret
hlt
lcall
jge
cmc
dec
cwtl
outsb
xchg
jp
int3
mov
insl
outsb
xchg
sbb
lods
fwait
repnz
popf
xor
adc
imul
in
out
add
adc
aam
sar
xchg
sbb
jge
adc
pop
popf
mov
mov
out
sbb
pop
insb
lock
into
add
or
or
ljmp
cmp
jbe
mov
jne
xchg
and
out
sbb
mov
mov
add
pop
test
loopne
hlt
sti
outsb
imul
push
daa
dec
mov
imul
stos
add
dec
push
sub
push
jns
cmpsl
sbb
or
xor
add
popl
xlat
sahf
inc
insb
jno
xchg
clc
jnp
mov
xor
xchg
ret
addl
mov
repnz
push
adc
mov
insb
mov
clc
andl
in
add
jecxz
adc
mov
subb
xor
jg
cltd
pop
xchg
jecxz
jle
imul
or
rol
sub
lods
lds
inc
in
inc
jecxz
adc
nop
iret
in
cmp
aaa
jns
cvtps2pi
pop
aam
inc
pop
int3
std
mov
ret
orl
xor
aas
shl
lahf
and
dec
adc
and
xor
mov
and
xor
iret
fildl
push
testl
dec
sbb
inc
pop
xchg
psubq
loop
jno
bnd
lock
mov
js
imul
pop
lcall
nop
bnd
mov
xchg
cmpb
lret
insl
cmp
sub
cli
dec
sub
push
mov
rorb
cltd
cwtl
icebp
int3
clc
cmp
lds
fiadds
sub
jo
cmp
add
sbb
out
or
and
inc
fbstp
out
leave
ficoms
jo
bound
pop
inc
cltd
xor
fisttpll
pop
sarl
lods
repnz
push
dec
mov
cltd
jae
jle
int3
adc
int3
sbb
int
aaa
mov
adc
jb
mov
sahf
fiaddl
jg
mov
cmp
inc
outsl
ja
testb
pop
aas
rcrl
sbb
mov
or
sub
add
lcall
adc
mov
inc
divb
jbe
lds
jb
mov
pop
mov
pop
movsb
mov
jecxz
xor
push
rorb
loop
dec
add
push
inc
sbb
daa
mov
sub
mov
add
fwait
out
inc
aam
cmp
cltd
lds
inc
and
push
cmp
je
mov
rorl
ss
test
mov
jb
add
push
sbb
test
sahf
out
sbb
inc
add
jge
and
and
std
push
adc
xor
pop
faddl
fbld
stos
jb
mov
jp,pn
jp
mov
xor
dec
push
stc
pop
pop
test
bound
ds
adcb
test
bound
fcmovne
adc
hlt
cld
shll
test
mov
pop
loopne
jg
xor
jmp
fdivs
jne
xchg
pop
dec
shl
add
jp
imul
lods
js
xchg
cmp
sarl
dec
inc
shrb
cmp
lea
jmp
sbb
imul
gs
push
testb
stos
sub
xchg
mov
inc
mov
add
dec
dec
shll
mov
push
sahf
rorl
sbb
and
xor
mov
inc
sub
lret
int
push
pop
scas
pop
mov
ljmp
jmp
into
jb
stos
dec
movsl
or
cli
and
mov
jb
cwtl
cmp
adc
pop
inc
xchg
insb
inc
cwtl
push
in
das
gs
add
fists
in
mov
imul
sti
mov
adc
add
mov
ret
add
lret
jae
and
pop
xorb
pop
addb
inc
add
jmp
adcb
mov
push
divb
out
cmc
sti
mov
mov
imul
jae
or
mov
inc
adc
push
lods
add
lahf
push
ljmp
pushf
lds
dec
sbbl
aaa
push
fidivs
into
test
xlat
push
mov
pushf
inc
sub
enter
rorl
dec
shlb
subl
xchg
insb
scas
aam
xchg
subb
test
inc
sub
bound
adc
or
sbb
les
mov
lods
je
in
add
fmuls
mov
lock
ja
rcrb
dec
leave
push
addr16
sub
mov
pushf
cmpsl
test
test
rcl
sahf
mov
call
xchg
or
dec
mov
adc
sub
dec
sbb
shr
negb
aam
stos
push
mov
int3
fidivs
jle
div
jno
data16
mov
cmc
popa
cld
daa
sub
and
fs
in
lret
stc
mov
inc
jb
scas
xor
jae
lahf
add
lret
pop
lcall
mov
fdivs
cld
add
inc
mov
push
test
mov
inc
scas
js
adc
dec
add
dec
xor
push
jb
pop
and
popf
sti
and
das
jg
mov
clc
movsl
fcoms
push
aaa
shrl
inc
test
mov
inc
inc
lahf
cmp
repnz
fdiv
cmp
xor
vmaxps
sbb
push
mov
add
adc
and
push
iret
inc
rcrb
lock
jg
sub
adc
jle
xchg
std
cmpsl
jge
mov
pop
sub
scas
and
ror
or
shll
ja
lcall
jae
test
lret
push
adc
sbb
mov
rsm
xchg
leave
pop
xor
filds
leave
mov
in
ret
or
jns
push
push
xor
dec
jae
iret
pusha
loopne
int3
pop
cmovae
xor
nop
cmc
mov
mov
cmp
sub
cmp
lcall
fidivrs
in
mov
dec
mov
mov
push
repz
out
sbb
aas
out
data16
js
jne
add
nop
mov
cmp
jnp
mov
stos
fnstsw
jp
and
mov
int
mov
outsb
orl
pop
es
mov
outsl
inc
xchg
insl
ret
loop
stc
test
data16
inc
xchg
push
test
cmp
dec
adc
mov
dec
fnstcw
sub
enter
add
aas
stc
sbb
rclb
jge
sbb
pop
mov
add
daa
pop
push
es
sbb
repnz
cmpsl
aad
mov
enter
nop
sbb
push
out
cmp
call
inc
hlt
cltd
adc
clc
leave
popa
in
bound
ja
jmp
jb
or
mov
mov
cld
cmp
cmpb
inc
dec
dec
adc
test
dec
push
out
inc
inc
xor
insb
hlt
xchg
cwtl
pop
aad
lret
lret
repz
mov
hlt
loop
pop
es
rorl
inc
mov
testb
fcmovne
dec
inc
shll
fs
enter
jecxz
shll
insb
std
in
les
je
mov
jmp
sub
pusha
in
cli
dec
sub
pop
fstpt
std
mov
fucomp
xchg
adc
mov
leave
cltd
sbb
add
pop
cwtl
adc
shrl
pop
mov
fimuls
inc
xorb
mov
daa
sub
inc
adc
les
lock
daa
into
outsl
pop
dec
cmp
inc
test
mov
mov
mov
sub
xchg
aas
jecxz
push
add
inc
mov
push
rorl
mov
lods
cmp
repnz
xor
sbb
cmp
roll
inc
std
or
jae
test
xchg
mov
sti
loope
add
ds
mov
push
orb
inc
mov
xchg
pop
ja
xchg
or
loop
cli
or
mov
hlt
inc
stos
push
mov
rcl
jnp
inc
xor
stos
inc
sbb
call
ror
mov
gs
sbb
ret
pop
or
cmp
add
dec
xchg
or
outsl
push
jg
fiadds
push
sub
pop
insl
icebp
dec
xchg
enter
fnstenv
push
out
aas
jmp
xor
dec
pop
test
xor
mov
pop
pop
mov
lds
negl
and
ret
jmp
repz
push
les
lcall
xchg
sub
xchg
lods
clc
adc
mov
push
mov
lock
leave
enter
adc
ror
sbb
xlat
and
xchg
mulb
lret
xchg
push
das
add
dec
fmull
pushf
lock
mov
fdivr
push
or
pop
dec
inc
movsb
mov
or
pop
lcall
popa
cmp
xchg
icebp
jnp
ret
sbb
xlat
aad
adc
jmp
sbb
mov
add
mov
inc
dec
arpl
mov
xor
mov
push
sbb
in
xor
xchg
sub
call
jp
lock
frstor
or
inc
in
push
enter
clc
xchg
push
or
clc
clc
add
aas
jmp
xor
int
dec
dec
adc
pop
or
xchg
aad
dec
jmp
jno
sub
jno
shrl
xor
fdivl
sub
mov
lock
mov
fildll
and
lods
data16
stos
fisttpl
shl
sbb
mov
mov
in
in
icebp
xchg
mov
pop
loop
push
sarb
adc
inc
loopne
fsubrp
fstpl
mov
mov
lahf
test
lods
fs
mov
or
add
xor
icebp
push
and
dec
xchg
fcoml
hlt
pop
mov
push
pop
stos
push
fnstsw
into
sbb
mov
stos
decb
inc
clc
repnz
mov
inc
jp
jecxz
pop
outsb
and
inc
push
mov
loopne
addr16
sub
and
mov
stos
fimull
dec
das
or
mov
fiaddl
adc
and
or
push
xor
jne
mov
hlt
push
scas
pop
rcr
pop
push
fwait
dec
sub
lret
mov
push
push
outsl
test
and
mov
xchg
in
aam
cmp
jg
jl
sub
sahf
lret
addb
hlt
add
jns
and
loopne
mov
stos
jle
add
movsb
ret
xchg
mov
pop
out
addr16
jno
dec
popf
loope
inc
lds
lock
xchg
cmp
xor
sarl
push
mov
mov
orb
push
fcomps
popa
push
ja
jecxz
frstor
inc
or
sbb
fiaddl
or
lahf
ja
shrl
call
popa
dec
mov
or
lret
xchg
sub
shrl
flds
leave
enter
loope
pushf
or
sub
xor
stos
subps
addr16
sbb
loopne
int3
push
push
in
aaa
push
or
cwtl
lcall
and
mov
test
mov
ja
or
sbb
arpl
adc
in
gs
in
bound
inc
aaa
inc
adcl
es
jb
adc
xor
mov
dec
xchg
int3
shrl
pop
cmp
ljmp
gs
xchg
adc
and
push
push
mov
xor
lock
ja
jmp
or
and
cmp
rcl
test
xchg
sbb
cltd
jg
adc
push
xchg
xor
and
fcmovnu
pop
push
pop
cwtl
add
incb
loop
lods
dec
ficoms
sub
dec
mov
int3
xchg
pop
cs
cmp
mov
insl
shlb
aaa
stos
lcall
jmp
flds
jmp
xor
dec
xor
jno
sub
xchg
sub
mov
mov
popa
cmp
shld
repz
mov
mov
into
pop
ljmp
inc
mov
das
test
push
push
xor
jb
out
scas
jl
out
mov
sbb
daa
std
les
mov
fstpt
pusha
call
aad
into
insb
push
mov
sub
fcmovnb
scas
sahf
mov
outsl
ds
xor
fdivrl
mov
sbb
mov
movsb
iret
insl
xlat
pop
sub
mov
mov
test
dec
xchg
sbb
test
out
cmpsb
cmp
das
stos
jo
sbb
mov
mov
jmp
adc
push
jmp
int3
inc
inc
stos
cltd
enter
push
in
inc
add
filds
jno
int3
xchg
mov
inc
daa
mov
imul
sbb
out
pop
dec
stos
cmp
testl
fs
and
mov
and
aam
dec
cmp
lahf
enter
mulb
movsb
repz
inc
mov
dec
jge
call
cwtl
xorb
mov
dec
fcmovb
inc
addr16
sub
in
lahf
pop
out
push
fsubl
pop
sti
sub
sub
cli
imul
pop
ret
or
cmp
mov
pop
and
and
in
push
pop
out
mov
out
adc
adc
insb
inc
mov
sarb
cmc
notl
scas
cmp
xor
cmp
adc
fsubl
dec
loop
sti
shr
jp
sub
mov
xchg
popf
std
push
mov
adc
add
sbb
pop
adc
mov
loopne
xor
mov
rolb
mov
fistpl
add
cmp
inc
outsb
xchg
mov
mov
cltd
popf
and
xchg
xchg
pop
jmp
pop
pop
js
int3
xchg
lahf
push
jecxz
cmp
adc
mov
cmp
sbb
jge
nop
rorb
imul
push
xor
push
lahf
out
mov
push
fstpl
ficoms
pop
xor
cwtl
jb
dec
sahf
xchg
sub
xchg
xchg
out
sbb
data16
sbb
out
int
insl
nop
sub
add
dec
dec
movsb
fmuls
cmpsb
sbb
sub
add
dec
and
sbb
and
scas
or
movsl
sub
xor
jecxz
mov
pop
fistps
pushf
jne
jecxz
push
es
pop
xchg
pop
and
adc
dec
stc
sub
mov
xlat
and
lahf
inc
arpl
jmp
dec
subl
into
xor
imul
cli
dec
lea
ret
push
inc
out
pop
scas
lea
add
pusha
adc
scas
jae
inc
pop
jg
push
push
push
das
pop
push
imul
xchg
mov
add
xchg
mov
aaa
sbb
xor
mov
int
loopne
mov
jnp
cmp
imul
add
das
shl
push
nop
push
fisubl
add
andnps
out
ffree
les
dec
cmp
xor
add
in
imul
repz
xorb
movsb
mov
in
inc
push
aam
testb
jns
dec
inc
in
xorb
push
jo
in
add
call
sub
pop
shlb
lea
out
mov
dec
inc
in
fistpl
lock
dec
adc
daa
cld
add
push
aas
repz
jg
xor
pop
sbb
mov
cld
xor
sub
add
fcomp
pushf
sti
pop
xchg
and
mov
int3
mov
mov
xchg
push
fsubrp
inc
cmp
std
int
mov
xor
lea
adc
lds
mov
cmpsl
jae
test
pop
jnp
jg
add
adc
aam
mov
insb
pushf
mov
xlat
ljmp
adc
pop
dec
pop
loop
into
mov
cmpsl
xchg
insb
jbe
sbb
vldmxcsr
popa
icebp
jo
shlb
inc
xor
fldcw
shrb
push
jle
out
dec
out
imul
jl
xchg
push
mov
and
sbb
jne
inc
ret
xor
mov
stos
into
popa
sub
jmp
sbb
ret
lock
pop
repz
inc
pop
or
jbe
fisubs
add
scas
int
sub
movb
add
ret
ret
push
jp
xchg
inc
inc
rorb
repz
inc
push
push
notb
das
jl
xor
pop
or
sbb
iret
pop
jns
and
jnp
ljmp
xchg
jmp
fstp
dec
in
or
dec
add
out
dec
es
dec
sub
pop
stos
test
repz
scas
stos
jne
in
adc
adc
shr
jmp
divb
mov
jle
out
in
dec
add
mov
inc
add
push
lcall
push
cmc
jmp
fistpl
mov
inc
cmpsb
lds
jle
pop
push
jns
lahf
or
adcl
add
sbb
sbb
adc
clc
insl
ja
jge
lea
and
notl
jno
into
sub
aad
repz
add
lahf
add
mov
movsb
rcrb
pop
pop
fidivs
mov
mov
xchg
stos
pop
mov
xchg
xchg
jne
mov
mov
jnp
insb
cmpsb
repnz
hlt
fistps
pop
xchg
mov
push
mov
jg
inc
push
es
dec
fldt
in
push
cmc
jge
hlt
jg
test
add
pop
gs
pushf
loopne
sub
gs
push
jo
push
out
icebp
xchg
mov
sub
into
mov
cwtl
int3
mov
pop
or
cmp
pop
cwtl
popf
fdivr
je
aas
inc
popf
jmp
mov
int3
out
inc
xchg
test
stos
popf
movsl
or
and
adc
lock
enter
jne
loopne
loopne
data16
mov
ficoml
cmc
xor
sub
test
mov
lock
sbb
xor
jmp
cmp
push
pop
roll
out
inc
cmp
jne,pt
ss
adcb
nop
sbb
inc
gs
sbb
in
lahf
mov
mov
adc
dec
scas
pop
gs
daa
imul
xchg
repz
movsb
inc
gs
mov
pop
mov
xor
cmc
mov
cmc
xchg
or
neg
loop
cmp
loop
popf
adc
jbe
out
add
dec
jns
sbb
enter
jmp
mov
lahf
or
enter
dec
nop
mov
and
push
shll
inc
mov
orl
adc
cmc
xchg
pop
sbb
jle
or
push
sub
incl
xor
test
lods
stos
dec
lret
nop
push
fisttps
lock
jne
dec
xchg
adc
enter
pusha
mov
adc
xor
xor
stos
int
jge
cmpsl
or
pop
out
mov
mov
pop
inc
mov
inc
sahf
stc
js
fisttps
sub
popf
lods
divl
mov
les
insb
or
mov
fcmovne
xchg
xor
cmp
jp
mov
cmp
push
sub
jbe
fdivr
aam
aad
fidivrl
arpl
mov
jp
cs
leave
sbb
rorl
and
rol
fld
notb
clc
hlt
into
or
sbb
ljmp
mov
jle
sbb
outsb
mov
aaa
shlb
popf
xor
hlt
fwait
cmp
xchg
cmp
shr
mov
mov
popl
into
pmaxsw
mov
push
lock
pop
mov
cmp
lret
fwait
test
xchg
inc
sub
into
loope
xchg
ja
xchg
and
arpl
pop
imul
icebp
jp
sub
sub
push
rcrb
sbb
pop
xchg
or
pop
pop
ror
push
push
pop
push
leave
scas
js
dec
sub
cmpsb
push
inc
sbb
lret
es
sbb
push
jns
clc
sub
fdivs
adc
xchg
dec
clc
pop
jbe
dec
mov
les
mov
enter
xlat
nop
mov
mov
push
sub
rclb
mov
out
insl
jns
mov
xchg
push
pusha
mov
cmp
jmp
dec
mov
push
push
xor
lds
movsl
push
jmp
xchg
andb
inc
and
inc
lret
insb
call
sub
jo
inc
pop
insb
lcall
inc
dec
sbb
jmp
sub
adc
js
push
jo
mov
adcl
xchg
push
test
pop
fimull
or
dec
out
mov
adc
pop
stos
xchg
sub
or
ret
mov
jle
push
jno
repnz
lea
cli
and
mov
cmp
lea
xchg
jo
jae
add
mov
aaa
and
sbb
inc
xor
dec
fiaddl
cwtl
shrb
push
addr16
mov
mov
sbb
push
xor
inc
leave
mov
test
inc
lret
loope
push
in
div
pop
pop
and
push
or
xor
dec
iret
and
test
fsts
dec
adc
xchg
stos
pop
cli
push
mov
xorl
imul
cli
mov
dec
push
negl
dec
orps
mov
jbe
push
scas
pop
push
addl
mov
xorb
dec
fimuls
out
adc
jg
pop
jo
push
les
push
pmulhuw
mov
rep
dec
add
adc
loope
loop
jnp
and
push
push
jns
and
xchg
mov
jle
js
outsl
mov
outsb
movsl
jnp
movsl
pop
mov
mov
test
jae
inc
insl
inc
fidivl
mov
fs
loop
sbb
inc
lods
or
jecxz
push
dec
push
in
jae
sub
lods
mov
arpl
mov
inc
fbld
sbb
into
adc
sub
test
fcmovnu
pop
sbb
sub
insb
jns
adc
in
sub
in
pop
sbb
pushf
xor
jecxz
fsubrl
enter
add
ljmp
pusha
inc
and
xor
out
fldcw
clc
xlat
xchg
mov
and
jns
jno
dec
enter
int3
inc
jae
pop
sub
pop
pop
and
inc
inc
hlt
lock
pop
rcrb
adc
pop
xchg
push
lods
push
xor
sbb
stos
mov
push
mov
sub
or
cmp
or
sbb
addb
cwtl
andb
inc
testl
jo
mov
cmp
loopne
sub
ss
imul
cwtl
test
push
ret
ficomps
adc
movsb
out
aad
inc
fiaddl
addr16
aaa
sub
test
lods
push
xor
xor
add
xor
hlt
fstp
pusha
xchg
cmp
jbe
stos
addr16
mul
jbe
stos
and
or
std
mov
test
push
xchg
daa
add
sbb
les
dec
xor
sbb
ret
or
mov
xchg
and
push
jnp
pusha
nop
inc
mov
ret
push
imul
push
pop
imul
imul
adc
andb
and
js
mov
cmpsb
jle
aad
mov
mov
mov
jecxz
ds
imul
loop
jb
jns
dec
pop
int3
xchg
and
sub
jle
sarb
jo
and
rcll
divb
ljmp
or
movsl
stos
push
addr16
add
jns
mov
sbb
adc
lret
rcl
and
je
cmp
test
repnz
jmp
jb
cmc
outsb
push
lds
push
mov
pop
inc
lret
sub
cmpsl
sbb
sub
ror
mov
dec
xchg
stos
fisubl
jecxz
mov
pop
aam
jp
rcrl
pop
int3
popf
mov
mov
pop
sbb
lret
insb
cmp
loop
js
icebp
mov
lcall
out
lods
cmp
mov
sbb
nop
inc
stos
shll
mov
inc
leave
cmp
mov
fnstcw
mov
daa
pop
pop
cmc
lret
mov
imul
mov
fdivl
orl
xor
cmp
cli
out
pusha
mov
addr16
cs
add
cmc
orl
or
scas
ss
pop
loop
push
lds
mov
mov
movsl
dec
lret
fistps
roll
outsb
cmp
pop
int
mov
lds
inc
int
jne
aaa
stc
fistps
push
add
andb
test
add
xor
or
sub
sub
mov
push
add
mov
sub
cmpsb
sbbb
mov
mov
or
or
sbb
dec
xor
pop
lods
add
and
inc
xchg
rorl
xchg
fldenv
inc
add
fimuls
adc
pop
adc
ror
cltd
ds
sub
ficomps
addb
mov
push
sub
arpl
inc
xor
out
aad
or
and
fcomps
xor
xchg
loope
ds
push
jo
inc
push
pop
sahf
test
mov
dec
aas
inc
and
xchg
lds
xor
cmp
outsb
adc
adc
mov
xlat
fidivrs
shlb
add
mov
repnz
loope
imul
xor
jnp
or
pop
xlat
fcoml
sub
aaa
enter
movsl
mov
lods
shlb
insb
jb
and
push
hlt
mov
iret
test
sti
cli
hlt
push
lret
leave
push
ja
insl
mov
fsubr
mov
leave
fwait
test
cmp
xlat
stc
pop
aas
xchg
pop
outsb
sti
in
mov
cmp
jnp
movsl
popa
mov
mov
loopne
jl
fisttpl
mov
push
sub
out
clc
add
ret
sbb
xchg
or
inc
clc
out
jns
cmpsl
pop
in
xor
fistl
test
xor
jne
mov
lcall
lods
sub
dec
mov
push
testl
divl
test
xor
jmp
gs
in
xchg
lds
pop
inc
jns
cmc
cwtl
scas
call
fildl
ret
mov
addr16
jns
mov
xchg
lret
push
cmc
js
in
ror
and
test
test
fcomps
jne
or
sbb
outsb
add
cltd
in
icebp
insb
pop
cmp
iret
popl
jns
imul
fwait
and
jo
add
mov
lds
push
xchg
xchg
or
rcll
mov
pop
pop
in
pop
lea
hlt
or
out
cmp
jecxz
scas
loop
outsb
or
mov
inc
cmc
dec
sbb
fistpll
lahf
popf
and
xor
inc
xchg
divl
in
in
hlt
inc
mov
lret
dec
xor
jne
fldcw
gs
mov
in
imul
mov
and
push
sbb
sbb
inc
enter
pushf
sbb
jns
dec
push
push
jo
mov
pusha
pop
adc
push
in
dec
in
cmpsb
adc
or
push
and
arpl
pop
mov
cmp
and
ret
mov
addr16
inc
xchg
push
pop
mov
mov
mov
push
aas
add
push
addl
scas
dec
icebp
in
xor
add
flds
adc
push
inc
loope
ret
test
fs
xchg
sti
cmpsb
xchg
pop
popf
sahf
or
jnp
out
cmpsb
mov
fists
lret
jmp
aam
dec
add
add
bound
dec
jb
mov
and
ja
inc
fmulp
jnp
xchg
cmc
movsb
aam
js
mov
lods
jns
movsl
fsubs
les
popa
movsb
mov
out
dec
lahf
xor
ljmp
dec
lods
add
mov
pop
xorb
cmp
jns
xchg
out
dec
rcrl
lods
jg
xchg
xchg
push
cmp
fmul
lods
xor
loop
cmpsb
push
icebp
sbb
pusha
aam
push
jne
pop
pop
cwtl
repz
nop
push
bnd
int
adc
dec
es
mov
addl
adc
mov
popf
movsb
rcrb
ret
jno
adc
mov
lret
insl
pop
loopne
iret
js
push
pop
test
sub
adc
flds
inc
ret
adc
cwtl
fistpl
cmp
push
insl
cltd
cmp
cmc
xchg
outsb
adc
push
scas
addr16
fistpl
addb
jg
lods
mov
xor
sbb
mov
xchg
mull
jecxz
pop
mov
test
dec
xor
xor
cltd
mov
cwtl
cwtl
je
mov
xchg
ljmp
enter
or
fwait
outsb
xor
neg
jl
jns
ds
out
inc
cwtl
xchg
loopne
test
jno
and
clc
cmpsl
dec
in
dec
mov
repz
test
xchg
enter
sub
lods
xchg
call
sbb
pop
data16
mov
mov
bound
inc
pusha
fdivl
push
mov
jle
arpl
add
xor
in
ljmp
lods
enter
add
mov
cmp
int
js
in
or
xor
sbb
or
jnp
sahf
imul
pop
add
xlat
out
lds
pop
jnp
push
outsl
sti
negb
mov
dec
lret
inc
jnp
les
stc
xchg
loope
dec
mov
push
popa
fidivs
jg
sub
orl
in
rorb
dec
shll
test
jo
push
xor
in
xor
shlb
adc
sahf
repnz
inc
mov
test
popa
out
and
jae
sahf
rcll
out
jl
mov
lahf
mov
fistl
int
jae
push
dec
mov
daa
mov
or
cmp
mov
lods
and
push
or
xorl
cli
sub
cmp
loope
sbb
adc
xor
rcrb
in
adc
int
lea
jb
scas
bound
incb
loop
inc
jne
int
pop
lahf
ss
pop
orb
ljmp
adc
mov
jne
insl
xor
ss
sbb
pop
push
or
adc
xchg
add
or
stos
jecxz
mov
pop
clc
test
mull
push
dec
cmpsl
aas
mov
out
mov
sbb
mov
cmpsb
andb
adc
or
fiaddl
xchg
call
movsb
dec
or
sarb
jo
mov
leave
in
push
sbb
push
add
cmpsl
stos
out
push
pop
testl
dec
cmc
inc
sub
into
jle
mov
sbb
dec
mov
lahf
cmp
xchg
out
xchg
and
mov
xchg
push
and
push
inc
and
xor
xor
add
arpl
xor
inc
add
loopne
add
inc
shlb
data16
rcrb
jp
mov
xor
int
or
into
mov
sbb
adc
hlt
push
or
gs
mov
xbegin
fwait
pop
add
dec
sarl
cs
in
ja
es
in
push
aas
cli
jle
cmp
push
imulb
push
xchg
jmp
loope
mov
dec
das
add
fwait
push
fidivrs
add
aam
sub
cmp
jge
call
cmp
inc
lcall
jae
bound
out
mov
ja
sbb
out
mov
cmp
inc
rcl
mov
rorb
outsl
fstl
fistpll
shl
out
or
xor
arpl
xor
adc
sub
jae
push
icebp
jg
push
orb
sbb
sbb
stos
cmp
pop
dec
mov
scas
xchg
sub
adc
mov
test
jns
cmp
and
dec
xor
mov
clc
pop
addr16
int3
sbb
cmc
stos
ret
lods
dec
lcall
jmp
adcb
xor
je
movsl
pop
mov
mov
cltd
je
cld
mov
insl
sub
pop
fisttpll
nop
cmpsb
inc
clc
daa
test
iret
inc
scas
sbb
dec
mov
mov
scas
ds
das
adc
and
popa
jne
jp
jbe
xchg
into
mov
xor
out
pop
sub
fucomi
mov
lcall
ss
stos
xchg
add
repz
xchg
xchg
cmp
mov
icebp
mov
xor
arpl
iret
cmp
jno
push
arpl
out
jnp
xor
pop
fistl
adc
daa
shrl
mov
rorl
mov
popa
dec
inc
push
out
xchg
ret
cs
mov
ja
lock
pop
pop
test
adc
fldl
bound
dec
je
xor
mov
mov
inc
icebp
icebp
adc
mulb
dec
out
cwtl
ds
clc
out
push
jo
and
scas
loope
push
sbb
push
xchg
aad
pop
dec
test
daa
das
xchg
pop
fildll
jns
mov
mov
jl,pn
sbb
add
push
in
push
add
xchg
popf
mov
das
mov
ja
and
lods
lock
ret
push
fstl
rorb
mov
xchg
xchg
add
fadds
ss
sub
rcll
imul
xchg
pop
pop
sahf
xlat
mov
and
add
mov
rcrb
lods
dec
add
lcall
fistpll
and
dec
sub
jnp
dec
push
das
pop
add
xor
or
sub
popf
xchg
rcr
jg
cmpb
mov
jmp
dec
dec
xchg
movsl
and
cmp
push
popa
ret
add
fbstp
fldcw
dec
popa
insb
es
mov
push
test
scas
push
cwtl
loopne
out
cmp
loop
sahf
adc
loope
jl
mov
insl
cmp
dec
xchg
bound
scas
out
push
jo
cmc
push
add
xchg
xor
scas
imul
aaa
ja
loope
jecxz
sub
test
mov
jo
imul
push
xchg
xor
pop
add
jle
dec
aam
inc
xor
or
xchg
fildl
xchg
cmp
ud1
push
stos
mov
xchg
cmp
das
mov
test
mov
add
je
rorl
data16
ficoms
inc
leave
lahf
or
cs
cltd
mov
add
loopne
stos
add
or
in
jmp
inc
jns
cmp
inc
and
mov
jns
fsubrp
leave
xor
movsl
sub
lahf
sahf
popf
enter
pop
xor
pop
mov
jne
add
mov
inc
cmp
shl
fcomi
stos
sub
jo
adc
and
mov
inc
js
adc
lock
mov
adc
cmpsb
sahf
add
imul
mov
push
imul
cmp
popa
dec
dec
and
or
jae
mov
lret
leave
cs
sub
push
aas
cmpsb
pusha
sub
mov
fsubrs
pop
xchg
lret
push
lcall
mov
and
jge
pushf
iret
les
dec
pop
iret
movsb
mov
cld
jle
jne
mov
cli
add
mov
call
sub
or
test
outsl
xor
xor
xchg
inc
imul
mov
mov
ss
andl
xchg
sub
xor
mov
sbb
push
gs
pop
in
lret
lahf
push
jecxz
push
xor
pop
add
xor
cld
outsb
adc
pop
mov
test
lret
mov
out
xor
imul
je
and
ficompl
fimull
inc
lds
xor
std
push
fnstsw
push
jg
in
rclb
jge
arpl
xchg
mov
mov
lret
sub
scas
aas
mov
movsl
pop
scas
xchg
bound
push
sarl
dec
jle
mov
call
or
jo
into
daa
aaa
sub
or
pop
outsl
sbb
gs
fnstcw
xchg
fdivrl
adc
jae
ja
xor
vhaddps
in
movsl
pop
mov
das
lock
cmc
mov
mov
push
adc
xchg
push
shlb
sub
jne
in
xchg
test
sub
adc
pop
lods
mov
cs
insl
jo
cmpsb
movsb
cmpsl
stc
pop
and
xchg
in
call
push
pop
fdivrp
mov
xchg
mov
aad
or
push
and
fstl
dec
xchg
jmp
cmp
addr16
xchg
jnp
jns
pop
pop
insb
or
pop
xor
dec
insb
lcall
imul
scas
pop
gs
pop
loop
leave
movntq
daa
mov
cmpsb
push
xchg
int
jne
test
movsl
and
push
or
test
cmpsl
or
pop
mov
mov
ja
push
in
in
sub
cli
or
mov
iret
repz
inc
sub
sbb
dec
mov
xchg
ljmp
test
jl
dec
adc
mov
pop
mov
pop
lret
fbstp
icebp
fmuls
shlb
addb
xchg
cmc
mov
xlat
mov
enter
dec
imul
stos
jo
add
data16
sbb
jmp
sub
dec
cmpsb
int
xor
insb
aad
testl
stos
push
dec
sbb
xor
or
sub
into
jmp
enter
je
cmp
dec
loopne
daa
mov
mov
xchg
push
and
icebp
out
fstpt
addr16
fcoml
movsb
sub
shr
sub
push
imul
mov
into
xor
or
fistl
jno
mov
xchg
call
cld
es
xor
dec
and
je
gs
sbb
jns
lods
push
add
daa
in
pop
outsl
mov
mov
lods
popa
sub
mov
cmpl
mov
insb
push
in
mov
leave
sub
dec
dec
jge
inc
repnz
repnz
lock
andb
inc
lea
fdiv
shrl
enter
jo
jge
stc
and
xchg
clc
lahf
push
lea
repz
push
push
mov
pop
lds
xor
mov
cld
mov
or
outsb
xchg
daa
hlt
insb
je
push
push
and
ss
pop
mov
out
mov
xor
dec
xchg
lcall
sbb
imul
in
mov
pop
sbb
pop
add
popa
cmpsl
mov
fstl
cmp
sub
xlat
ja
sbb
roll
inc
aam
mov
and
sbb
xchg
lcall
mov
add
jmp
mov
test
mov
jle
outsb
adc
data16
jae
pop
daa
clc
inc
lret
push
push
lret
cwtl
inc
or
movsl
lods
mov
orb
ja
scas
outsl
and
rorl
xorb
jns
mov
mov
inc
daa
xor
jp
int
sahf
dec
add
mov
adc
cwtl
cmp
pop
sub
ret
in
push
cs
cmp
cmpsb
repnz
repz
data16
jl
or
dec
push
loope
loope
and
into
push
popf
sar
jmp
or
sahf
and
mov
xchg
cmp
daa
scas
stos
push
in
sub
sbb
mov
dec
add
sub
pop
mov
and
push
in
lods
loopne
lock
insl
fcmovne
mov
adc
and
adcl
pusha
sub
sub
inc
bound
push
push
cs
in
ficomps
lods
sbb
imul
rclb
pushf
mov
ret
xor
sti
dec
movsl
inc
fisttpl
nop
inc
decb
mov
inc
out
push
mov
jecxz
daa
sub
sub
and
in
add
js
jl
ljmp
ret
sahf
aam
ja
inc
jge
pop
repnz
daa
push
xor
cwtl
adc
subl
imul
lds
jecxz
hlt
mov
enter
inc
xchg
jbe
jge
sarb
inc
les
fcmovne
cli
jecxz
jo
mov
neg
roll
xchg
inc
mov
mov
ret
dec
mov
icebp
lret
loopne
cltd
jbe
je
jecxz
mov
xor
pop
mov
push
mov
dec
lods
cwtl
pop
ljmp
mov
js
dec
mov
push
scas
pop
stc
and
int
test
xor
incl
and
scas
aad
sub
sbb
enter
xor
aaa
sub
test
or
add
lgs
adc
and
outsl
stos
incb
ficoms
mov
jns
sbb
mov
sub
insb
pop
or
ljmp
aaa
pop
inc
and
hlt
sbb
test
xchg
lahf
cmp
arpl
dec
push
in
inc
shlb
jns
subl
into
push
movsl
sub
or
push
into
mov
mov
push
sbb
sbb
cmpsl
movsb
icebp
mov
mov
and
cmpsb
jg
inc
test
scas
outsl
dec
mov
fiadds
pop
loope
and
and
loop
adc
cmp
inc
jmp
shl
aas
mov
stos
divl
fistl
rolb
out
adc
pop
testb
pop
jmp
pop
jbe
cmp
or
stos
pusha
pop
or
div
adc
hlt
jne
mov
sti
cmp
out
std
call
mov
mov
sub
cmpl
pop
cmp
fstpt
call
leave
call
cmp
and
cmp
xchg
lret
and
mov
or
daa
dec
ds
cmpl
add
cmpsb
packuswb
push
arpl
fimuls
sarb
adc
sahf
jns
lret
bound
insl
and
imul
data16
in
pop
add
ja
mov
ret
jle
pop
xchg
aad
pop
cmp
fbstp
in
or
mov
and
rolb
add
add
pop
shrl
push
pop
notl
xlat
add
mov
scas
or
mov
gs
ss
adc
aam
cltd
fistl
dec
adc
mov
lahf
ficoml
gs
dec
push
out
cmpsb
xor
andl
cs
dec
or
pop
ss
cmp
dec
adc
js
mov
sub
loop
and
mov
mov
or
test
test
push
lcall
pop
pop
push
shrl
dec
lahf
das
mov
in
or
push
imul
icebp
cmpsl
mov
jl
mov
inc
imul
mov
std
testb
loopne
leave
mov
test
sub
push
sub
cmp
inc
jle
add
push
stos
adc
shl
push
mov
fimull
nop
pop
loop
cmp
push
incl
add
outsb
jg
lret
fiadds
popf
iret
lcall
cmp
mov
cmc
xchg
outsb
fsubrl
cli
pop
movsl
ja
mov
out
push
inc
jg
cmp
or
rclb
sarl
xchg
push
mov
jbe
lods
je
fsubp
outsl
addr16
mov
mov
ja
mov
or
fs
mov
nop
scas
mov
inc
icebp
cmp
lock
pop
test
call
lds
leave
push
ja
or
in
inc
and
mov
jnp
cld
or
cmpl
iret
pop
push
inc
mov
scas
sbb
sbbl
jne
cmovb
mov
les
mov
popa
or
mov
mov
push
arpl
cmp
int
insl
shr
sahf
in
stos
lcall
cmp
lds
cwtl
lcall
test
and
push
pusha
movsl
xchg
xchg
mov
shrb
jmp
mov
fdivs
out
ds
outsl
repnz
mov
pushf
aas
push
inc
enter
vsqrtss
jmp
cmp
jg
mov
in
adcb
dec
sbb
jmp
paddq
jbe
ss
cmpsb
leave
mov
addr16
pop
jb
and
push
addr16
push
scas
mov
mov
ret
push
repz
pop
lret
mov
lock
ror
jmp
jnp
iret
push
mov
mov
adcb
push
jb
push
in
mov
jg
and
mov
or
adc
xor
popf
repz
imul
in
divb
int
pop
fcmovne
xchg
mov
loop
push
xchg
dec
movsb
icebp
xlat
jbe
mov
popf
sub
fmull
and
stc
pop
jecxz
enter
jp
xor
mov
mov
inc
mov
repz
xor
cwtl
lret
adc
inc
je
cmp
and
pop
push
cmp
sahf
add
mov
and
inc
lret
jg
add
dec
cmpsl
cmpsl
data16
cmp
inc
sbb
arpl
fisubl
sbb
cmpsb
cmovs
xor
adc
mov
mov
mov
push
dec
inc
dec
in
xchg
divb
call
push
mov
mov
push
loope
pushf
mov
mov
xchg
insb
adc
inc
out
and
jmp
test
sub
je
bound
es
aad
xchg
sbb
mov
jns
pop
ljmp
cmp
insl
lahf
sbb
mov
mov
lods
mov
inc
adc
or
xor
icebp
call
pop
pop
mov
jo
sub
out
stos
add
or
pop
test
push
xchg
pusha
imul
cmp
cltd
and
icebp
inc
ficoms
mov
jnp
jp
adc
push
insb
mov
jb
cld
mov
int3
mov
mov
fsts
and
xchg
test
mov
or
add
idivb
push
cmp
rcll
cli
add
adc
adc
fldt
xchg
cvtpi2ps
lret
xor
pop
xorl
jge
mov
fistpll
lods
inc
stos
sbb
add
scas
push
sbb
push
fmuls
sub
jo
sahf
or
lret
add
jb
push
mov
rcrl
mov
jp
jmp
test
mov
jae
mov
xor
add
xchg
adc
adcl
outsb
push
cmpsb
jae
dec
xchg
xchg
daa
jno
or
mov
push
pop
or
inc
inc
neg
nop
scas
in
add
jno
cmpsb
sbb
or
popa
pop
test
adc
out
jb
push
mov
loope
sub
stos
inc
xor
dec
jb
mov
xchg
icebp
aas
xor
add
les
sbb
adc
add
data16
xorb
push
mov
add
mov
xlat
test
les
cli
and
cwtl
std
mov
and
stos
out
jg
lret
or
ret
jnp
sbb
sbb
gs
aas
or
cli
jo
fidivrs
roll
pop
pop
jp
and
mov
aam
int3
sub
adc
dec
fwait
outsl
inc
pop
and
js
mov
mov
jns
inc
fs
sub
mov
jnp
cmp
lods
arpl
sbb
mov
sbb
scas
xor
sti
mov
mulb
adc
and
xchg
sub
mov
sbb
movsl
mov
sub
cmc
or
sbb
push
and
push
mov
incb
sahf
push
mov
xchg
xchg
push
stos
xchg
and
cmp
mov
sub
stos
int3
xchg
mov
push
daa
push
pop
addr16
popf
dec
add
stos
xchg
mul
or
es
inc
fdivl
sub
add
stc
xchg
dec
mov
sbb
clc
mov
jge
cwtl
ja
out
inc
adc
addr16
mov
xchg
aaa
cmpsl
mov
mov
cli
inc
inc
rcrl
sti
mov
es
test
push
inc
jne
mov
fs
and
aad
pusha
fwait
xchg
jp
scas
cmp
jae
sahf
add
mov
cmpsb
ret
int
sbb
je
mov
xchg
sarb
loope
adc
test
imul
jge
add
pop
inc
stc
shrl
mov
add
add
ljmp
lods
ljmp
mov
push
xor
shl
add
dec
lock
jbe
xchg
aaa
mov
loope
push
lret
jl
push
mov
jge
lahf
inc
and
scas
insb
lods
sti
jno
mov
cwtl
xor
lock
fwait
int
mov
lcall
popf
sbb
lods
popa
fsubl
daa
lods
js
lea
mov
rcrb
jb
pop
xlat
mov
push
shll
int3
pop
gs
or
sbb
nop
cli
push
js
aam
fistl
ds
push
adc
dec
push
dec
push
push
int
mov
lock
cmp
or
sti
xchg
or
adc
dec
je
push
pushf
pusha
xchg
and
jb
cwtl
cltd
xor
fnsave
pushf
push
in
imul
adc
inc
je
jp
jno
in
cmp
cli
dec
or
gs
dec
push
rol
mov
sub
pop
jno
insl
mov
and
js
adc
mov
imul
add
lahf
mov
cmp
push
call
or
pop
pop
test
ljmp
inc
xlat
sbb
in
pop
and
sbb
in
aas
xor
in
pop
dec
mov
ss
arpl
insb
lahf
daa
inc
cmc
addr16
and
and
push
or
fimull
scas
call
pop
bts
inc
xchg
decb
xchg
mov
xor
stc
push
ret
lds
sti
lcall
sub
and
xchg
xchg
xor
or
mov
movsl
movsl
push
enter
or
cmp
cltd
js
sub
inc
xor
iret
aad
loopne
outsl
mov
adc
aaa
pop
lcall
jns
dec
repz
cmp
das
pop
add
aam
cmp
test
xlat
jo
scas
les
js
div
in
iret
adc
pop
add
and
pop
mov
call
mov
out
pop
xchg
leave
mov
movsl
arpl
stc
jmp
xchg
push
and
push
pop
movsl
test
out
mov
pop
xor
cmp
fdivrs
stos
inc
loopne
lock
mov
and
movsl
xchg
push
int
stos
insl
shrb
mov
add
cmpsb
in
in
push
movsb
mov
xchg
es
iret
stos
lods
xchg
lods
sub
fdivrl
mov
mov
mov
outsb
or
lds
addb
push
add
dec
push
push
lcall
outsb
arpl
insl
xor
movsl
cli
dec
out
or
test
pop
pushf
imul
repz
pop
testl
mov
out
fsubrl
inc
fldl
test
pop
sub
aad
fs
fcmovnu
jo
loopne
mov
dec
mov
shlb
aad
fsubl
jl
neg
jne
add
mov
mov
mov
sbb
cwtl
xchg
mov
aaa
pusha
mov
or
xchg
les
push
mov
sub
xorl
test
mov
mov
mov
mov
jae
and
pushf
lea
xor
inc
test
outsl
icebp
or
pop
push
xor
mov
jno
test
icebp
mov
inc
dec
and
test
jae
sbb
jno
adc
loopne
movb
sbb
sbb
iret
gs
sbb
add
out
pushf
xchg
jp
lret
dec
mov
into
adc
loope
and
subb
inc
jne
push
inc
jge
cmpsb
cwtl
sub
outsb
mov
in
movsb
and
xor
das
mov
lea
mov
mov
sbb
mov
movsl
nop
jo
movsb
push
dec
xor
inc
scas
ja
adc
mov
jne
and
pop
or
setg
aam
add
test
pop
mov
sar
dec
mov
mov
loop
xchg
repnz
cli
fstpl
lea
add
dec
stc
adc
add
xchg
les
lock
push
xchg
inc
rorb
lods
jno
add
mov
roll
das
leave
insl
cmp
cmc
mov
add
popw
test
fsubrs
mov
jle
outsb
fldcw
pop
sbb
pop
xlat
decb
sbb
mov
mov
lods
sub
pop
jp
xchg
cmpb
sbb
int3
flds
or
inc
mov
andl
fisttpll
cmpsl
call
jno
cmp
xor
bound
and
inc
sbb
loope
add
sbb
push
push
xor
fmull
add
mov
js
xor
cld
push
jle
or
jo
inc
js
jbe
mov
jo
mov
or
out
movsl
cwtl
adcb
sub
push
jge
sbb
cmp
pushf
test
es
test
inc
sbbl
push
jb
xchg
fldl
addb
and
ja
repz
jbe
pop
mov
imul
lretw
cmp
jo
inc
xchg
push
pushf
or
jg
inc
sbb
test
cmp
mov
mov
sbb
dec
push
int3
jl
dec
mov
cmp
stos
out
and
push
clc
adc
test
push
jo
lods
mov
dec
dec
mov
ret
xor
in
mov
inc
xchg
dec
je
dec
inc
jl
es
orb
inc
mull
mov
mov
xchg
push
jecxz
pop
sbb
dec
outsb
loop
hlt
pop
ljmp
sub
cmp
xchg
stos
stos
sbb
and
dec
ja
push
ficomps
or
push
out
jne
or
jmp
jle
scas
imul
incb
xor
mov
mov
dec
jecxz
jl
dec
or
scas
sub
jp
adc
les
aas
out
lret
cld
fwait
pop
xor
and
adc
mov
push
outsl
daa
xchg
fs
aam
repnz
shl
nop
dec
out
jne
lret
sub
in
and
mov
roll
ret
push
adc
aad
sbb
xlat
sub
jl
fmull
push
rcrb
mov
xchg
icebp
inc
lcall
xchg
lcall
js
jmp
mov
and
inc
sub
fldl
inc
adc
cmp
sbb
insl
adc
pop
fldenv
mov
mov
popf
clc
jae
dec
cld
mov
cmp
cmpsb
xchg
rcrl
push
popa
loope
pop
icebp
cltd
outsb
jge
xchg
pop
movsb
push
mov
ljmp
xchg
test
pop
aaa
jne
lods
int3
xchg
add
repnz
xorl
dec
out
repz
rcl
cmp
lcall
lods
outsb
fisubrs
je
xchg
cmpsl
iret
mov
xchg
and
push
popa
test
lcall
stos
inc
push
lea
sub
sbb
lret
out
mov
xchg
enter
sub
les
pop
mov
or
push
xchg
cmpsl
xor
fsts
add
cli
push
popa
aaa
mov
lock
je
divb
xor
pop
xchg
jmp
jge
push
incl
lcall
mov
hlt
cmp
in
dec
sub
mov
pop
sub
cld
mov
dec
popf
sbb
and
mov
jnp
gs
mov
cmp
loop
jnp
pushf
pop
mov
cmp
shlb
push
mov
mov
outsl
arpl
xchg
fsts
sahf
and
mov
push
mov
cmp
das
in
js
fdivs
fdiv
shrl
out
push
stos
outsl
arpl
popf
or
mov
dec
lret
cmpsl
orl
cld
lret
or
popa
movsl
cmp
lcall
push
xor
and
sahf
xchg
in
and
lock
mov
adc
xor
sub
xor
jle
loop
fistpll
xor
mov
mov
movsb
inc
add
mov
pop
mov
pop
loopne
pushf
dec
mov
ds
sub
out
lods
dec
jecxz
and
and
call
push
lds
cmp
mov
cmp
int3
add
xchg
jns
rol
cmc
xor
xor
icebp
pop
jnp
push
push
repz
add
mov
xor
movsb
dec
cld
mov
aaa
adc
fldt
dec
inc
mov
rolb
clc
leave
adc
outsb
mov
xchg
jmp
cltd
test
xor
stos
iret
popf
into
jmp
loop
or
leave
nop
dec
mov
and
cmp
lods
fsubr
jb
mov
sbb
les
clc
xchg
popa
sbb
mov
into
insl
xchg
cmp
insb
dec
xchg
xchg
shl
aam
lds
movsb
push
mov
scas
jns
popl
fsubl
sbb
xor
fdivs
pop
aam
decb
ror
fidivrl
jae
mov
je
jmp
ljmp
shll
je
xchg
cmp
js
mov
xor
xchg
fmul
out
mov
jl
xchg
dec
loope
daa
mov
outsb
aas
and
mov
pop
and
lods
and
sub
sub
jns
or
lods
cmpsb
sbb
imul
fcmovne
xchg
incl
mov
or
and
push
or
mov
imul
mov
imul
repnz
push
pop
insl
mov
adc
sti
pop
dec
shll
mov
add
testl
inc
or
les
outsl
cmp
out
xchg
bound
mov
mov
aam
lahf
cwtl
sti
sbb
jns
nop
shll
arpl
mov
popa
add
xor
lahf
outsb
stos
jmp
sbb
dec
add
popf
leave
push
imul
inc
fwait
adc
lds
pushf
push
push
into
push
jecxz
jecxz
flds
stc
das
cmp
subl
inc
in
and
loope
out
pusha
data16
insb
mov
mov
adcb
pop
call
jge
cltd
cs
into
es
cltd
shrb
sbb
shll
xchg
cs
xor
and
lods
cmp
push
mov
mov
out
adc
mov
std
mov
cwtl
xchg
and
push
jmp
repnz
daa
mov
repz
mov
mov
ja
xchg
loop
adc
or
jo
or
jo
inc
out
lds
sarl
pop
loop
hlt
xor
mov
cltd
sbb
nop
jnp
mov
inc
add
inc
pop
mov
ret
push
call
jae
ret
cld
in
sub
push
loopne
ret
mov
inc
clc
sbb
ret
outsl
negl
adc
popa
test
scas
xor
addb
shll
fdivrs
push
mov
in
jno
cmc
ljmp
jo
cwtl
ror
mov
out
cmp
fisubrl
jae
push
jno
cmpsl
iret
and
xchg
in
roll
xor
pop
mov
push
pop
jae
mov
std
add
add
jecxz
jp
mov
jne
jmp
inc
loopne
movsl
inc
daa
jbe
cmp
inc
mov
mov
cli
cmpsb
lock
sbb
iret
stos
jae
aam
jns
cld
jle
push
pop
and
inc
and
dec
dec
jae
xor
sbb
ja
outsl
je
inc
mov
ljmp
xchg
xchg
outsb
xchg
push
sbbl
cmp
dec
jp
cmpl
fidivrs
roll
enter
inc
add
sbb
push
shrl
ret
push
push
fcoms
in
loopne
frstor
rorb
aaa
cmp
js
jbe
lods
pop
fwait
cmpl
mov
cmp
pushl
push
dec
dec
clc
mov
dec
clc
mov
insl
test
adc
aad
sub
cs
std
and
jo
add
mov
inc
sbb
add
insl
add
and
adc
mov
lahf
movsl
scas
inc
add
std
xchg
int
imul
jns
sbb
inc
cmp
loop,pn
mov
mov
es
jnp
mov
out
loop
cwtl
sti
jbe
js
test
mov
rolb
push
mov
stos
pusha
pop
mov
pop
rorb
add
cmpsb
cld
xor
aas
dec
mov
seto
xchg
add
mov
sbb
push
mov
and
add
cmp
int
push
imul
sti
js
jle
dec
and
adc
ljmp
cs
dec
or
dec
xchg
and
ds
adc
and
movsl
sub
jns
add
cmp
push
mov
bound
mov
hlt
xor
jmp
cmpsl
pushf
arpl
and
mov
sbb
fcmovu
out
clc
test
inc
fsubr
jp
dec
lret
sbb
mov
arpl
out
or
inc
push
pop
sarb
xchg
rorb
lock
test
out
jg
ret
ficompl
pop
jo
pusha
dec
je
outsl
ret
xchg
jge
sub
cmp
divb
lcall
in
xchg
and
fistpl
jb
cmp
pusha
out
cmpsb
mov
data16
push
xchg
or
fstl
xchg
cmp
aad
xchg
xchg
popf
pusha
jae
loopne
lods
out
jmp
xchg
or
dec
sub
jns
lock
sbb
out
and
in
adc
repz
mov
loopne
out
push
jp
je
sbb
xchg
mov
jns
hlt
xor
and
inc
pop
and
jl
adc
inc
repz
lcall
lea
xlat
aas
xchg
and
pop
lret
push
pop
je
je
mov
das
movsl
test
rcll
repnz
dec
cmpsl
hlt
mov
mov
out
in
adc
push
fcomps
pushf
jns
lods
out
nop
mov
pop
push
cmp
jle
jns
mov
jbe
cmpb
mov
fildll
fnsave
rorl
out
out
andb
imul
add
jbe
lret
jecxz
jge
lods
sbb
insl
gs
popa
fs
dec
bound
xchg
pop
adc
xchg
dec
mov
lret
cmp
insb
inc
inc
xchg
inc
ret
imul
inc
aad
sbb
vmovq
or
mov
add
rcr
sub
jmp
sbb
rolb
and
or
rorb
add
fdivrs
loope
and
rclb
xor
dec
push
xchg
sqrtps
mov
int
sub
mov
call
cld
pop
imul
outsl
push
out
aas
push
cmp
cltd
testb
out
cmc
enter
movsl
rcrb
mov
push
shrb
out
jne
or
pop
mov
adc
mov
stc
sti
adc
sub
xor
dec
icebp
mov
xchg
gs
int
fdiv
stc
inc
fisubrl
clc
imul
sub
mov
iret
fwait
out
inc
xchg
xor
xchg
leave
adc
xchg
sub
cmpsb
mov
ret
mov
cmp
or
data16
int
lea
adc
rclb
out
jnp
pop
sub
mov
sub
jns
movl
dec
push
cld
xor
push
dec
test
int3
popf
push
test
fldt
xchg
cmp
lea
pop
data16
out
add
xchg
inc
mov
movsb
and
cmpsl
ds
add
pop
and
mov
sub
cmc
jnp
and
fwait
jg
sahf
mov
dec
add
inc
add
loop
popa
inc
xchg
outsb
leave
aaa
sbb
and
in
aad
popl
jecxz
pop
sub
sub
jp
neg
adc
mov
pop
hlt
inc
sbb
mov
xchg
jnp
dec
and
dec
jecxz
movsl
push
pop
inc
test
in
pop
or
mov
adc
test
cmp
mov
dec
mov
mov
in
jo
xor
fidivs
mov
inc
dec
daa
sbb
enter
adc
leave
decl
das
outsl
and
dec
inc
xchg
rorl
sbb
cmp
or
push
lret
adc
cmp
loope
das
rorb
cmp
mov
pop
push
pop
xchg
and
lods
and
adc
repnz
lods
sub
jae
cmp
mov
addr16
lods
mov
lock
cli
and
stos
sub
les
xchg
loop
or
mov
mov
popa
dec
mov
mov
push
inc
fs
mov
pop
fimull
negl
push
stos
xor
push
sti
push
mov
in
mov
in
mov
mulb
into
pop
dec
js
sbb
add
push
push
jge
mov
shlb
xchg
outsb
xchg
push
push
adc
mov
inc
sar
hlt
pop
pop
inc
cmp
xor
sub
orb
push
movl
repnz
out
out
mov
adc
xchg
ret
es
aam
cmp
mov
fstpt
mov
ret
sub
mov
insb
mov
jae
push
jne
insl
mov
cmp
cmp
xor
mov
out
cld
lods
mov
scas
adcb
stc
fucomip
jg
mov
jecxz
popa
sbbl
or
dec
les
cmpsb
in
testb
out
popf
jl
stos
arpl
jge
js
mov
xchg
cmp
inc
icebp
xor
popfw
mov
fwait
inc
adc
ss
jnp
insb
imulb
xchg
jnp
imul
sbb
hlt
xchg
pop
test
out
jecxz
inc
jecxz
sub
adc
cmpb
pop
das
push
imull
pop
inc
mov
mov
pop
int3
mov
add
xchg
leave
rclb
out
orb
into
ficomps
sub
fmul
mov
and
nop
enter
cld
outsb
insl
jge
pop
test
decl
fs
mov
push
inc
popf
and
cmp
cld
int
testl
aaa
mov
inc
xchg
aam
into
lods
inc
jl
ret
add
pop
pop
test
loop
mov
push
pop
pop
fs
cltd
aam
pop
inc
adc
sub
or
cmp
pop
lret
sbb
pop
stos
bound
lret
jle
pop
mov
test
ret
sbb
pop
pop
xchg
daa
sub
cmp
sbb
dec
sbb
nop
mov
stc
in
lcall
pop
sti
dec
in
es
push
pushf
adc
xchg
add
mov
mov
jo
jmp
jp
rclb
out
js
mov
xlat
mov
or
orl
faddl
popf
pop
and
or
adc
imul
outsl
mov
fbld
fucomip
pushf
idiv
xor
dec
add
mov
jg
cmpsb
std
mov
xlat
mov
outsb
mov
inc
pop
xchg
push
jl
sar
mov
lret
fstl
dec
js
cld
and
xchg
xchg
sbb
jb
hlt
xchg
cmp
jmp
pop
mov
xlat
dec
addr16
push
jns
mov
xchg
fwait
mov
ret
mov
mov
xchg
dec
into
mov
add
mov
mov
mov
sub
sub
push
xor
loope
orb
xor
jb
inc
in
fwait
nop
sti
or
call
cmpb
lret
lock
outsb
adc
jnp
jmp
mov
pop
outsb
das
mov
jp
mov
adc
push
popa
or
enter
inc
cmpsl
adc
fwait
jmp
fucom
inc
int
lret
sub
fwait
ror
pop
les
pop
sbb
fwait
je
insl
repz
pop
insb
jbe
subl
sbb
sbb
cltd
lret
xor
cmp
sbb
pop
insl
mov
leave
in
adc
shl
xor
pop
aaa
lock
push
jbe
mov
fs
addb
call
xchg
xor
cs
in
and
cmc
out
clc
mov
adc
das
dec
jno
inc
cmpsl
cltd
ss
mov
pop
sbb
sti
add
movsl
addr16
je
pop
push
out
incb
data16
dec
jns
mov
push
scas
push
mov
lret
add
push
clc
in
test
nop
sub
sbb
aad
rcl
dec
test
xchg
pop
adc
dec
int3
orb
push
out
sahf
adc
shll
inc
loop
inc
cltd
pop
ret
decl
out
cmpsl
or
in
lcall
fadd
or
movsb
jno
jbe
adc
in
push
inc
cmp
loopne
rcrb
mov
notb
jecxz
xchg
xchg
push
inc
or
repz
mov
in
mov
insb
test
mov
or
insb
jmp
repz
cld
dec
ret
decb
imul
aad
xchg
inc
mov
out
jbe
aaa
popa
mov
jno
jg
leave
rclb
jge
or
adc
cmpl
add
imul
xor
scas
pop
outsl
sbb
push
add
aas
fnstcw
adc
push
mov
sub
push
and
iret
push
stos
adc
mov
out
roll
and
cwtl
mov
mov
inc
loopne
out
mov
sahf
js
cli
es
adc
mov
inc
lods
sbb
sbbl
addr16
int3
cmc
add
add
aas
test
xchg
add
ljmp
cmpsb
ret
and
xchg
data16
jnp
mov
adcl
mov
mov
mov
ja
push
push
sbb
xchg
add
cmp
push
andb
fdivs
imul
push
mov
pop
cmp
int3
addr16
inc
add
sbb
cmp
mov
call
cmpsl
stc
rcr
push
inc
inc
xor
dec
mov
call
xchg
xor
call
cmp
enter
jae
cmc
or
jge
in
fcom
fmul
mov
mov
imul
jae
sub
or
pop
nop
sbb
aas
js
mov
mov
add
cmp
push
dec
data16
sti
int3
in
jno
dec
mov
les
mov
sub
jb
dec
sahf
xor
mov
adc
into
mov
dec
ja
add
inc
mov
outsb
stos
sbb
lcall
cmp
ficoms
sbb
add
mov
add
cmp
or
dec
les
cmpsl
add
pop
shll
push
xchg
mov
add
cmpsb
sub
cwtl
leave
notb
imul
hlt
sub
mov
push
pushf
mov
xor
scas
jle
std
dec
inc
mov
nop
lcall
dec
and
xchg
xchg
test
mov
dec
adc
rcrb
aad
or
gs
in
lods
sbb
fsubrl
imul
sbb
sahf
outsb
outsb
mov
notb
les
push
scas
cmp
dec
xchg
inc
nop
jnp
outsb
or
xchg
adc
subb
jnp
stos
inc
xor
adc
in
push
lret
aas
or
inc
xor
sub
call
mov
outsb
cmpsb
jo
leave
nop
sbb
pushf
aad
aad
mov
mov
ret
clc
in
or
xchg
jp
lahf
xchg
shll
add
js
and
pop
jecxz
mov
push
bound
fsubp
pusha
test
lock
loop
lret
or
or
dec
outsl
lahf
daa
mov
pop
bound
int
loope
fidivs
add
mov
jno
gs
add
add
add
cmp
enter
jae
mov
lcall
out
ret
loopne
ret
dec
lea
insb
sub
stos
stc
cltd
jns
add
push
mov
xchg
lret
push
pop
outsb
arpl
sarb
push
push
mov
and
shll
shll
xor
cwtl
repnz
xor
in
pop
cmpsb
aad
mov
xor
imul
call
dec
movzbl
and
ret
int3
js
push
ficoms
adc
in
adc
sub
ljmp
rolb
dec
mov
xor
mov
rcrb
rcrb
mov
ret
sti
jae
mov
adcl
cmc
daa
push
push
popf
std
xchg
mov
and
mov
in
mov
xor
dec
and
mov
xchg
xchg
dec
out
out
dec
arpl
add
add
icebp
sbb
ss
ja
mov
add
mov
xor
sarb
or
ret
fstpt
add
xor
clc
xchg
sub
cmp
int3
sbb
out
xchg
adc
aaa
inc
movsb
and
pop
movsl
es
adc
dec
mov
std
mov
das
cmc
ja
fimull
push
test
aas
dec
aad
lahf
pop
scas
push
lods
cmp
outsb
cld
add
pop
ret
pushf
addr16
jb
pop
dec
inc
add
pop
cmp
or
ds
mov
lahf
movsb
inc
lods
ss
push
mov
lea
leave
sbb
jge
mov
mov
cmpsl
das
push
xor
pushf
pop
out
sbb
hlt
rcrl
ret
out
loopne
aaa
or
and
insl
jbe
std
jecxz
pop
jp
dec
lret
loop
les
in
stos
mov
out
fisttpll
cmp
ret
inc
lods
sub
popf
shll
hlt
hlt
lret
inc
cmp
adc
pushf
out
hlt
add
fiadds
ret
jecxz
xchg
aas
or
insl
mov
test
xlat
dec
sbb
jge
inc
outsb
jle
pop
pop
inc
push
push
ret
and
sub
dec
lods
jge
sbb
cltd
xor
xor
pop
ss
imul
adc
loope
cmp
scas
out
popa
jae
ljmp
push
jbe
mov
fsubs
xor
xchg
add
xchg
jmp
push
mov
inc
fcomip
inc
call
adc
jp
sub
aaa
out
push
rol
xchg
scas
push
cmpb
xor
rcll
and
icebp
outsl
jl
rcrl
add
sbb
mov
lahf
pop
iret
movsl
add
mov
std
xchg
xchg
mov
das
xor
pop
jmp
stc
cmp
mul
xchg
adc
pusha
sbb
xor
cltd
fisttpll
js
sbb
sahf
fsts
xor
repz
clc
cmp
xor
imulb
fnstenv
mov
mov
jge
xorl
adc
fadd
dec
jo
push
aas
arpl
pop
adc
mov
jo
cltd
loop
mov
jg
es
mov
enter
jae
ret
jmp
inc
mov
or
daa
popa
inc
cld
dec
cmp
sbb
or
xor
sbb
daa
sub
pusha
push
popf
mov
jl
mov
pop
int3
and
inc
jmp
inc
mov
pop
out
sarb
ret
fdivs
adc
repz
dec
sbb
push
mov
adc
push
sbbl
push
daa
xor
inc
mov
or
lds
push
sahf
cmp
stos
jns
daa
shrb
movsl
fimull
jp
cwtl
mov
xor
sbb
cmp
xchg
mov
sahf
ret
lahf
sbb
nop
lds
ljmp
sub
icebp
hlt
jbe
cmp
shlb
push
pop
mov
xor
ss
insl
adc
or
jb
les
sbb
pop
add
iret
sti
adc
data16
xor
xchg
pop
pop
mov
and
sti
int3
sarl
push
mov
push
cmp
cltd
out
push
xor
pop
add
mov
xor
inc
lods
shl
or
daa
jl
imul
xchg
and
ficompl
cli
loope
push
cli
cmp
aaa
xorl
lret
outsl
fsubrl
rcrl
mov
or
es
imul
aaa
mov
or
mov
movsl
ja
cmpsb
jp
test
lret
into
mov
scas
and
xor
cmpsl
push
xchg
cmp
das
shlb
lock
mov
add
ficoms
lds
xorl
cmpsl
mov
cmpsl
jno
ljmp
call
fs
ja
fiaddl
push
jecxz
cmp
fwait
inc
out
push
push
je
aad
push
push
or
ret
in
popa
repz
cmp
jge
imul
jp
dec
loope
and
mov
xor
and
mov
mov
sbb
push
movl
bound
ljmp
inc
ds
test
jno
das
or
pop
addb
sub
in
in
dec
jmp
in
aas
pop
data16
icebp
fistpll
inc
aam
fwait
out
or
mov
movb
xchg
jmp
nop
pop
repz
dec
out
repz
cmp
divb
fsubrl
cmp
mov
push
add
je
cmpl
pop
stc
outsb
xchg
outsb
repnz
inc
xchg
test
mov
dec
cmp
xchg
mov
cmc
popa
push
adc
jnp
inc
mov
xor
lds
clc
xor
sbb
lods
in
scas
sbb
jo
loop
pop
or
add
outsw
and
jmp
push
aas
pop
sbb
imul
cld
xchg
adc
sub
sub
push
enter
jo
xchg
pop
mov
hlt
sub
icebp
mov
sub
mov
je
fbstp
xchg
pop
cmp
adc
xor
add
or
ss
insb
aaa
sbb
hlt
aas
dec
push
stos
and
push
shlb
lock
jge,pt
fsubr
cmp
jg
sbb
jmp
and
push
cmpb
or
fcmovnb
cs
imul
scas
inc
xor
add
xor
mov
dec
add
les
dec
sbb
pushf
das
and
pop
fs
test
dec
cmpsl
sub
outsb
iret
insb
sbb
lret
add
sbbb
divl
jecxz
mov
push
out
lods
add
cmc
inc
add
xchg
fdivs
enter
ja
add
add
lods
ret
aam
inc
xlat
shrb
jo
and
cmpsl
outsl
jecxz
aad
insb
inc
pop
jg
popa
mov
push
pop
jno
jge
popf
ret
dec
jge
jns
mov
mov
arpl
mov
inc
push
and
fcomps
lahf
xor
mov
ret
xorb
or
fiaddl
dec
sbb
div
inc
repnz
insl
adc
mov
mov
mov
lds
bound
and
jnp
xchg
push
mov
inc
mov
cwtl
js
int3
lods
stc
cs
fs
or
cs
and
fidivrl
jno
cmpsb
bound
insl
and
popw
loope
jne
mov
fucom
mov
es
adc
cli
orps
dec
fcoml
dec
mov
pop
shlb
lods
jg
insl
cmp
fidivrl
pop
rol
inc
sbb
test
adc
fildll
aam
out
adc
daa
jg
in
or
clc
jmp
add
das
push
bound
jbe
cli
stc
jp
loopne
push
push
cs
lods
sub
aad
int3
out
xchg
xlat
sbb
cwtl
mov
es
in
xorl
out
mov
adc
fcmovu
pop
mov
mov
push
call
lret
fadd
fcomi
sub
cmpsl
pop
sbb
cmp
jne
jg
push
add
mov
ss
or
das
inc
mov
dec
fwait
mov
pop
xchg
mov
addr16
fmuls
and
aam
inc
pop
shlb
add
sub
ret
jecxz
outsb
mov
and
and
inc
daa
or
popf
xchg
nop
out
push
cmp
pop
push
popf
lods
pop
call
aas
test
or
leave
xchg
xchg
inc
xorb
mov
inc
into
dec
lds
xchg
xor
addl
sbb
mov
push
mov
mov
and
test
lcall
jb
in
push
sub
dec
mov
lahf
jmp
xchg
sbb
mov
les
aaa
pop
cli
xor
jne
jnp
push
aaa
shr
in
inc
mov
inc
inc
and
inc
pop
mov
lret
test
pop
int3
aas
icebp
push
sub
cltd
mov
pop
add
int
cmpb
sub
outsb
fisubl
cmp
xor
jecxz
into
mov
mov
push
aad
cmp
push
out
and
push
ljmp
test
xchg
xchg
jnp
inc
pop
mov
dec
repz
hlt
in
fnsave
mov
mov
jbe
gs
les
dec
int
hlt
mov
and
adc
ja
and
xchg
sub
mov
scas
sub
and
and
mov
sbb
mov
mov
outsb
lock
rcll
cmp
cwtl
add
mov
shrl
sub
xchg
out
pusha
push
aas
pop
bound
sub
cwtl
sub
push
cmp
sarl
mov
popa
scas
xchg
enter
jno
inc
in
outsb
loop
xchg
lds
cmp
and
les
ret
movups
inc
mov
and
mov
movsl
lahf
es
insb
in
or
cmpsb
leave
push
adc
push
mov
fidivrl
lea
out
in
aas
clc
jle
sub
dec
mov
cmp
pop
mov
dec
inc
lods
jmp
mov
push
pusha
jp
sub
je
jmp
lds
xchg
pushfw
pop
mov
mov
lret
hlt
mov
inc
mov
out
lods
lea
inc
scas
es
sbb
movsb
aaa
xchg
cmp
fucomip
xor
or
lret
shl
lods
inc
xor
aaa
dec
das
pop
jg
sub
insl
aas
js
adc
mov
cltd
dec
rol
rcrb
hlt
pushw
iret
daa
jecxz
pop
bnd
xchg
adc
cmp
lea
or
mov
adc
pop
push
jo
push
lret
in
push
xor
rdmsr
sub
les
pop
and
fs
sub
dec
mov
dec
popf
add
push
mov
sahf
lods
sub
in
int
loop
inc
arpl
cld
pop
push
jp
sahf
cld
scas
jl
or
imul
inc
adc
or
or
jge
out
adc
scas
dec
sti
fwait
cmpsl
or
in
repnz
lret
or
or
hlt
gs
jo
mov
mov
rcll
outsl
mov
outsb
jae
pop
adc
sbb
jns
mov
out
pop
xor
std
mov
mov
cmp
cltd
stc
pushl
add
int3
fmull
ret
mov
lahf
lock
sub
mov
jg
inc
mov
xor
add
and
arpl
sub
pop
xchg
sub
sti
adc
shll
fld
cmp
cmpsl
mov
or
jl
mov
cmpsl
repz
data16
pop
add
incl
scas
sub
sahf
fmull
mov
lcall
xchg
mov
out
mov
popa
xchg
daa
pop
bound
push
cmp
adc
push
aam
fidivs
bound
out
ljmp
xchg
mov
mov
adc
or
mov
and
fs
loopne
inc
cmpsl
sub
sbb
inc
das
xlat
sub
or
cmp
sub
sahf
mov
daa
cmc
imul
les
xchg
outsl
insb
bound
mov
in
fidivl
cmp
or
lock
enter
lcall
mov
xor
cld
lret
mov
sub
leave
mov
mov
jb
inc
in
repz
xlat
leave
inc
stc
cltd
js
add
repz
and
aam
int3
adc
leave
ror
cmp
stos
cmp
clc
aad
inc
xchg
and
and
push
xchg
cmp
lret
mov
pop
cltd
pop
xor
cltd
pushf
lds
jae
pop
testl
pop
mov
or
xor
dec
daa
and
cmp
in
andl
mov
inc
out
pop
bound
xor
sub
cmpb
and
cli
gs
daa
cltd
jae
inc
cli
fisttpl
adc
push
inc
lahf
scas
nop
add
js
jmp
inc
inc
lock
adc
jae
popa
and
in
mov
shlb
stc
mov
fdivrs
push
fisubs
in
push
mov
adc
xor
test
xor
cwtl
out
fstpt
fiadds
in
fists
addr16
pop
pushf
cmovle
out
outsl
in
in
cmp
aam
scas
xor
divb
cmp
test
sbb
call
pop
sarb
pop
loop
sbb
inc
mov
cltd
jne
or
add
dec
iret
dec
adc
movl
and
adc
lcall
sub
mov
jae
icebp
mov
sbb
idivb
mov
mov
xchg
cmp
inc
lahf
test
dec
inc
lret
mov
cmpsl
xor
inc
sub
pop
mov
xor
or
mov
sub
or
mov
jmp
inc
sub
mov
push
jl
lea
sub
pop
fcoms
stos
fsubr
adc
jp
inc
xchg
or
in
sub
sti
in
fiaddl
js
jge
sbb
imul
xchg
dec
sbb
pop
pop
push
in
mov
add
sbb
pop
push
in
and
mov
out
xchg
push
lret
lcall
or
sbb
inc
push
outsb
inc
outsl
mov
enter
ficoms
dec
subl
jns
adc
gs
fisubrs
pushf
cltd
andb
dec
scas
adc
insl
lcall
jle
mov
adc
inc
outsl
repz
pusha
mov
pop
test
and
jns
daa
sub
mov
lock
add
int3
or
mov
xor
mov
leave
inc
out
pop
in
scas
xor
iret
mov
pop
inc
xor
jns
fs
andb
cmp
rep
repnz
aam
in
lret
mov
icebp
push
and
clc
scas
icebp
dec
inc
and
mov
ljmp
ds
push
lret
and
lahf
xchg
sbb
insl
pop
cmp
adc
repz
lcall
sub
mov
in
int3
mov
pop
fldenv
sbb
pusha
iret
and
push
out
sbb
cld
adc
movsl
push
lock
es
cmp
negb
sbb
out
lock
jge
xchg
jae
gs
mov
push
xchg
inc
and
imul
jmp
in
cmp
push
mov
inc
sub
sub
pop
add
cmp
dec
push
and
mov
pop
test
int
push
stc
add
inc
std
add
out
cltd
xor
xchg
out
leave
int
mov
call
sub
orb
cmpsb
mov
xchg
sub
push
outsl
sarl
stc
mov
popa
xchg
out
push
ret
jne
adc
mov
mov
in
adc
or
lock
dec
loope
inc
mov
subb
cli
jge
idiv
mov
test
aam
cmpsl
loope
test
and
xchg
jge
or
mov
imul
cltd
inc
in
mov
dec
out
repnz
and
aaa
clc
ret
push
mov
xchg
dec
mov
jbe
call
ficoms
out
test
cltd
ds
jl
stc
lods
sbb
in
rcrl
cmp
lcall
adcl
inc
mov
adc
sub
xchg
sbb
jp
jg
jl
xor
mov
repnz
dec
push
into
xchg
mov
or
or
mov
pop
dec
xor
lods
pop
xor
lock
sbb
sub
in
incb
xor
sbb
fs
adcl
xlat
xchg
xchg
push
dec
inc
xlat
out
and
pop
cli
jb
dec
mov
pop
test
incl
outsl
cld
pop
inc
xor
loop
out
mov
xchg
orl
mov
shlb
pop
add
sub
add
pop
jbe
fimull
lret
cmc
inc
and
lods
aaa
cmp
rclb
inc
aaa
mov
sbb
jge
dec
inc
cs
push
fisttpll
bound
outsb
leave
and
dec
mov
pop
xchg
push
pusha
clc
in
call
call
cmpsb
adc
cwtl
adc
fmul
out
pushf
inc
jnp
lds
outsb
or
cwtl
pop
jg
push
sahf
add
shl
dec
jge
call
lea
fistps
cld
push
idiv
sbb
fsubl
mov
xor
loopne
in
mov
mov
movsb
lock
scas
movsl
pop
pop
loop
rdtsc
aas
mov
cmp
and
jo
add
inc
adc
mov
add
stos
dec
sub
add
or
mov
stc
adc
push
jmp
in
xlat
lcall
incb
push
pop
mov
inc
ret
mov
pusha
push
fdivs
add
pusha
roll
pop
sbb
jmp
scas
xchg
arpl
pop
fidivrs
and
fisttpl
ja
pop
jmp
call
push
sarb
mov
xchg
and
ret
pushf
mov
cmpb
xor
jle
in
add
add
mov
pop
lock
xchg
adc
lret
push
mov
dec
mov
sub
or
mov
add
test
imul
dec
insb
sub
aaa
sub
mov
sub
and
xlat
incb
ret
repnz
sub
shrb
push
in
fstpl
aas
jecxz
mov
jae
add
shrb
dec
sub
mov
push
cmpsl
rcrl
les
arpl
cltd
pop
insl
ss
fwait
std
push
stos
dec
push
xor
pop
add
lcall
lret
mov
aaa
mov
mov
aam
icebp
add
mov
xlat
popl
xchg
sub
inc
movsl
mov
out
mov
notb
add
pop
lods
or
rorl
push
cmp
jne
push
lret
push
mov
fnstcw
call
fiaddl
xchg
lcall
ljmp
dec
int
jge
into
mov
lock
popa
test
mov
mov
add
sub
or
lods
cmc
jp
or
dec
mov
repz
fmul
pop
test
push
push
imul
rol
cmp
repnz
rclb
int3
insb
outsb
fst
stc
int
clc
es
mov
les
fldt
pop
mov
loopne
mov
popf
mov
div
add
hlt
cmpsb
or
mov
push
fildll
mov
outsl
add
daa
adc
mov
xchg
sbb
push
mov
xchg
add
std
pop
or
out
sub
imul
pop
ss
clc
insl
filds
or
or
add
mov
test
jno
lret
shl
sbb
pop
cwtl
add
movhps
stos
inc
popa
sbb
mov
int3
scas
pop
iret
bound
js
jp
or
cmp
ror
cmp
and
lcall
fildll
stos
adc
arpl
jbe
adc
add
or
add
fisttps
scas
fwait
dec
je
adc
lock
test
cwtl
mov
fistpl
add
and
ljmp
mov
add
adc
ds
cmpl
mov
pop
leave
adc
in
mov
sahf
dec
push
push
and
mov
mov
mov
bound
lods
loopne
push
enter
repnz
mov
pop
lcall
dec
ja
out
dec
and
xor
mov
icebp
andb
into
mov
insb
push
jl
cltd
lahf
pop
jns
jecxz
cmp
mov
dec
xchg
cmc
mov
mov
rclb
sbb
gs
xchg
test
int3
daa
mov
dec
popa
stc
scas
pushf
pop
inc
sub
add
fsubs
lret
xor
addr16
bound
mov
xlat
repz
nop
jnp
fldenv
sbb
cmp
sbb
sbb
ficoms
ret
popf
add
rorb
ds
scas
lret
push
aad
lds
out
jmp
sbb
sbb
xchg
mov
fidivs
mov
lds
sbb
lea
into
clc
lret
into
imul
push
cmp
shlb
jae
jo
ficoml
rol
jnp
or
outsl
ljmp
cmc
lds
test
push
jne
jns
mov
loopne
ret
push
or
stc
push
inc
dec
push
repz
cmp
lahf
push
std
and
add
out
and
es
push
pop
mov
add
xchg
hlt
cmpb
xchg
shll
jg
ds
cli
mov
push
jg
push
or
add
testb
aas
aam
jmp
push
pop
add
xchg
stos
add
xorl
add
sub
insl
ljmp
sbb
or
inc
add
lea
imul
movl
mov
insb
std
jns
add
insb
xor
mov
out
mov
pop
js
not
or
rorl
sbb
jecxz
jmp
xor
int3
aam
insl
call
sub
call
mov
hlt
adc
dec
repz
dec
ljmp
mov
jns
mov
add
add
push
inc
add
mov
inc
ds
dec
fiaddl
fwait
repnz
icebp
pop
mov
pop
into
dec
ja
mov
cwtl
push
jns
adc
xchg
jmp
jb
adc
adc
push
sub
jns
mov
int3
xor
imul
in
fisubs
cmpsb
and
inc
sbb
test
nop
sarl
push
xor
jnp
sub
mov
into
inc
and
lods
mov
fildll
outsb
fstps
jecxz
mov
mov
adcl
je
js
stc
jae
xchg
mov
xor
push
pusha
mov
cmc
ja
push
mov
aas
int3
lock
and
popa
xor
setl
mov
xchg
xlat
js
dec
cs
dec
dec
mov
scas
mov
mov
mov
mov
int
adc
push
outsb
adc
mov
jecxz,pn
repnz
xlat
cmp
aam
lahf
js
mov
push
testl
movsl
lahf
stos
add
pop
xor
hlt
mov
xor
clc
dec
push
mov
xchg
test
leave
jne
push
fcomip
jl
mov
jp
cld
std
or
arpl
push
xchg
xor
adc
lcall
aad
ja
icebp
push
jg
imul
push
addl
xchg
pop
nop
mov
nop
neg
fldl
xchg
xor
movsb
and
arpl
in
int3
cmp
cmp
ds
cli
xchg
add
je
lods
inc
pop
mov
and
adc
cmp
fbld
add
jmp
sub
cmp
cwtl
push
inc
and
dec
repnz
pop
dec
outsl
mov
nop
xor
mov
fsts
movsl
cmp
cmp
lock
js
xor
mov
sub
shll
andb
mov
cli
mov
fs
xlat
pop
mov
movsl
adc
cmp
test
jae
clc
popa
push
mov
lods
or
scas
pop
pop
ja
fistl
mov
outsb
sbb
mov
jp
add
add
ret
cltd
testl
pop
xlat
adc
repnz
daa
push
fwait
clc
out
pop
lret
das
out
or
adc
adc
cwtl
mov
pop
add
mov
mov
cmp
lods
fwait
jb
jne
cmpsb
sarb
int
push
jno
mov
sbb
push
das
dec
cmpsb
repnz
pop
inc
add
and
cld
ret
addr16
rcrb
mov
add
push
loopne
jne
mov
cmp
mov
xchg
cmpsb
push
pop
jae
popa
xchg
mov
mov
hlt
outsb
ds
fs
std
clc
sahf
cli
ret
cld
ja
aam
adc
xlat
bound
arpl
inc
pop
call
push
es
push
insl
sahf
repz
jns
divl
loop
jne
or
aaa
adc
orl
test
pushf
ret
movsl
inc
jnp
mov
inc
lret
mov
xchg
fwait
xor
cmpsb
dec
pop
add
mov
mov
push
push
shrl
pop
adc
sub
popf
lret
jle
push
jnp
cli
cmp
xor
fsubs
mov
xor
out
mov
mov
ja
jnp
jbe
iret
popf
sbb
shll
push
inc
push
lret
int
movsl
gs
jno
sub
rolb
call
in
iret
mov
fsubrp
enter
adc
mov
rcr
push
xchg
std
inc
push
jbe
push
loop
cmp
out
mov
call
jbe
lock
xor
sub
imull
insl
in
cld
adc
cld
pop
clc
daa
mov
mov
pop
pop
adc
pop
xor
pop
push
lret
testb
test
or
or
lcall
and
add
enter
and
dec
inc
data16
dec
and
mov
jnp
out
insb
stos
push
adc
fdivrl
in
ret
cmp
inc
dec
imul
xchg
adc
xchg
js
out
jae
cmp
mov
mov
and
sbb
pop
movsb
and
sub
jns
mov
incb
and
sbb
xchg
iret
cwtl
hlt
sub
mov
or
les
xor
cmp
dec
mov
dec
pop
loope
add
insl
lods
pop
lahf
aam
pop
out
shlb
inc
mov
je
les
stc
lahf
push
imulb
and
nop
out
call
sti
rcrl
lret
sbbl
pop
inc
adc
xchg
push
rol
push
inc
and
dec
subb
adc
into
neg
out
add
jg
inc
add
mov
test
ja
jg
call
add
cmp
xor
ja
pop
pop
addr16
xchg
push
or
cmpsl
mov
fistpl
shll
pop
popa
push
fdivs
popf
sub
and
sub
nop
and
cwtl
cmpb
repz
lcall
decb
mov
add
push
push
pop
mov
mov
cmp
lea
or
sbb
sbb
fs
xchg
pop
sbb
sbb
cmp
fsubr
cld
push
sti
cmpb
xchg
mov
xchg
arpl
pusha
sbb
mov
xlat
sahf
cmp
ficomps
ret
scas
or
mov
out
mov
repz
sub
fcomp
lret
ss
pop
and
sti
fstpt
cmp
mov
outsb
xchg
test
cltd
push
imul
or
hlt
cmp
xor
mov
dec
sbbl
ljmp
inc
call
pop
and
rolb
mov
andb
shr
push
mov
cmc
lods
or
xorb
push
and
push
mov
mov
ss
cmp
inc
loop
rorb
push
push
rorl
xlat
pop
mov
mov
push
mov
xchg
xchg
add
mov
outsl
cli
shl
cmpsb
jmp
jmp
cltd
ss
jle
int3
test
jmp
fbstp
inc
mov
or
out
jp
adc
jg
fisubrl
mov
loopne
mov
pop
bound
shl
pushf
mov
add
or
jp
inc
sub
pushf
ficompl
inc
dec
daa
pusha
test
mov
mov
sbb
shrl
lods
enter
fsubrs
push
hlt
mov
sub
test
adc
inc
mov
pop
jge
or
adcl
xchg
test
or
sti
pop
mov
aam
lods
lea
sbb
cltd
mov
push
leave
loope
ljmp
push
mul
cmc
push
mov
fnstsw
jnp
les
lcall
rcr
dec
out
sub
sub
push
mov
jp
and
int
leave
idivb
scas
jbe
inc
shll
mov
xchg
push
rol
sti
pop
outsl
mov
xchg
pushf
xor
mov
call
jne
cmpsb
rol
fsubrs
test
getsec
xchg
pop
add
pop
mov
adc
loopne
push
out
insl
lea
aaa
js
ds
aas
mov
pushl
xchg
inc
rcrb
push
xor
add
jmp
insl
fs
fs
xor
outsl
sub
jl
adc
xchg
rcr
daa
and
jl
fimuls
mov
sub
jmp
xchg
test
push
ds
pusha
loope
xchg
decb
sub
jecxz
mov
cltd
inc
das
mov
xchg
mov
in
inc
in
adc
mull
pop
adc
push
adc
xor
lret
in
fdivrl
jecxz
testl
test
pop
adc
and
jb
jnp
ss
push
push
sbb
sub
addr16
test
aam
mov
das
sub
add
push
mov
or
mov
mov
in
jge
ret
movsb
or
int
popa
xor
into
daa
andl
popa
aam
pop
add
mov
cltd
inc
es
nop
sub
inc
aaa
test
repz
iret
cmpsb
je
outsl
push
pop
ja
sbb
mov
std
push
nop
adc
mov
ret
rol
jmp
dec
cld
cltd
daa
xchg
in
cmpsl
jmp
adc
outsb
pop
cmp
adc
pop
lret
shlb
adc
in
pop
inc
das
push
xor
dec
sarb
add
add
sub
jbe
cld
push
pop
dec
jae
jne
int3
xor
and
in
jmp
scas
sub
rcrb
mov
in
inc
les
fwait
pop
and
stc
ds
xchg
loop
jno
push
shll
ja
loope
cmpsb
mov
sahf
or
cmp
lods
pop
int
and
loopne
loop
sbb
es
shl
pop
mov
das
jbe
clc
sub
sti
inc
xor
call
pop
sub
lods
mov
bound
inc
nop
fcoml
xchg
mov
movsb
in
jmp
and
inc
jl
or
xor
cli
out
test
dec
mov
xlat
sub
outsl
adc
or
icebp
xchg
jl
cmp
cmpb
push
cli
inc
pushf
jae
xor
in
es
adc
inc
jno
in
jns
cltd
aaa
pop
outsl
cli
into
inc
aas
outsl
sti
or
popf
lods
out
xchg
cmpsl
sub
xchg
adc
jae
adc
stos
xorl
or
stos
imul
push
jo
in
das
mov
mov
cmp
inc
bnd
cli
sub
mov
in
mov
loopne
pop
pop
call
stc
mov
pop
lret
adc
mov
xchg
iret
insb
shll
mov
jmp
sarb
jecxz
rolb
rorb
xlat
inc
loop
mov
dec
jbe
mov
iret
adc
add
or
cltd
jo
push
lock
iret
add
mov
mov
xlat
xchg
sbb
push
repnz
xor
xlat
sbb
adc
mov
inc
out
xor
leave
jmp
hlt
cmp
inc
add
push
jmp
mov
pop
ret
cmpsb
mov
lret
pusha
ret
call
lret
loope
sbb
bound
push
lds
jno
pushf
add
daa
dec
cltd
scas
dec
sbb
pop
out
mov
insl
ljmp
dec
xchg
rcr
in
movsb
cmp
push
test
lcall
sub
push
adc
lahf
xchg
adc
movsb
lods
adc
mov
dec
arpl
aam
xor
inc
call
popa
in
lahf
out
mov
ret
mov
pop
in
mov
movsb
jmp
push
mov
xchg
jb
negl
mov
mov
xchg
aaa
jg
cmpsl
fstp
je
mov
jle
mov
in
adc
add
idivb
movsl
and
and
jnp
mov
pop
sub
pop
jle
cmp
sbb
jecxz
les
adc
jne
outsl
out
xor
xor
lahf
fbld
inc
cld
add
push
cmp
pop
bnd
imulb
sub
into
icebp
xlat
mov
cmp
inc
mov
pop
loope
negl
mov
xchg
jnp
inc
fwait
imul
fiaddl
adc
mov
lret
data16
aam
lcall
xchg
pop
inc
mov
jae
mov
xor
xchg
pop
mov
cmpsb
add
clc
ret
push
add
je
in
fcoms
xchg
movsb
pop
push
pop
mov
repz
jmp
inc
xchg
adc
ds
jle
push
outsb
int
cmpb
repnz
test
pushf
adc
inc
mov
mov
sbb
mov
cmpsb
cmp
aaa
xor
fistpll
xchg
adcb
sub
or
mov
inc
inc
or
push
fcompl
add
insl
in
mov
and
jmp
repnz
cwtl
xor
int3
xor
add
mov
enter
sbb
rolb
push
dec
mov
jnp
mov
cli
xchg
movsb
ss
shrl
push
cmc
and
lret
or
aam
std
mov
sbb
std
dec
es
inc
scas
pop
repz
loope
jnp
push
cmp
aam
add
pusha
fistpll
mov
ja
mov
leave
popa
pop
fidivl
mov
or
add
inc
and
leave
aad
sub
int
sub
push
pop
xchg
adc
shll
aaa
and
push
jo
lea
aam
cwtl
out
inc
into
pop
fsubrs
lahf
cltd
movsb
bound
or
or
cmpsb
or
sbb
daa
and
shrb
lods
xchg
jnp
mov
mov
mov
push
inc
orl
decl
push
ret
scas
enter
xor
sub
je
dec
add
ja
pop
adcl
sub
mov
je
mov
push
mov
jl
in
repz
test
mov
mov
into
push
push
loop
xor
push
iret
and
mov
jp
xchg
add
adcb
xchg
pop
xlat
ret
push
xchg
push
xor
push
fcomps
in
subl
mov
xchg
in
daa
mov
loope
sbb
adc
cmpsb
push
fs
icebp
rclb
mov
insl
add
les
daa
xchg
jae
pop
push
ficoml
mov
mov
jno
mov
jbe
stc
cwtl
xlat
lret
call
filds
mov
sbb
xlat
or
mov
cmp
adc
sub
sbb
push
inc
xchg
lods
pusha
fsubrl
xchg
icebp
cmc
leave
jnp
aaa
outsb
sub
push
lods
loope
bound
mov
jne
rorl
mov
lods
fisubs
in
pop
cmp
jae
inc
cmc
mov
cmc
lret
js
jmp
push
mov
ljmp
pop
dec
rolb
xor
es
dec
sbb
sarl
jo
std
xor
cmp
mov
mov
adc
xor
popa
xor
mov
cmpsl
test
test
sbb
loopne
andb
pusha
loopne
pop
jle
sub
xor
add
mov
xchg
lahf
inc
cmp
cmp
mov
jle
addr16
aaa
inc
into
push
out
out
mov
shlb
xor
enter
addr16
das
dec
jo
stc
lret
mov
scas
mov
xor
pop
fistl
jg
out
jae
add
sub
into
xor
shll
xchg
scas
aam
test
ret
cmp
test
dec
pop
sub
in
sbb
dec
movsb
mov
xor
out
push
int
adc
stos
scas
int3
xor
cmpsb
iret
mov
jecxz
sbb
mov
add
loopne
mov
mov
cmp
jae
daa
add
daa
repz
ljmp
in
sbb
daa
dec
pop
dec
pushf
fisttpll
dec
add
sbb
dec
test
mov
into
xor
xlat
icebp
jmp
cmc
push
mov
sub
loop
cwtl
test
inc
sub
mov
fsqrt
dec
daa
sbb
ja
xchg
inc
mov
into
jge
stc
rol
mov
pop
push
data16
add
inc
ftst
mov
fs
ret
roll
fs
cmp
movsb
in
jae
fstl
adc
aaa
inc
inc
lock
xchg
jno
mov
adc
cmp
int3
mov
dec
vpacksswb
xor
dec
add
in
push
mov
add
jo
popa
loope
jns
push
test
xchg
ja
xor
shl
arpl
cli
hlt
xor
mov
inc
ret
shll
cmpsb
dec
fsubl
flds
std
lock
sub
pop
push
ficomps
pop
ds
mov
pop
sbb
lahf
xor
push
inc
orl
or
push
mov
mov
fs
insl
and
and
movsb
xchg
mov
gs
outsl
sub
or
popf
aaa
mov
mov
leave
ja
mov
into
pop
outsb
mov
push
mov
pop
int3
rcrb
mov
inc
xor
jnp
fcom
popf
test
jg
pop
repz
dec
mov
xor
xor
ret
jns
loopne
daa
xor
cmpsb
xchg
xchg
mov
pop
cltd
addr16
mov
mov
add
jle
je
mov
into
dec
incb
inc
pop
adc
jge
mov
stos
dec
sbb
add
enter
bound
out
pop
xchg
jg
rep
pushl
and
dec
repnz
mov
mov
out
and
add
adc
lret
je
loop
iret
sbb
cs
cmc
mov
xchg
pushf
test
dec
mov
call
call
sbb
cli
xor
sahf
mov
adc
imul
or
xchg
fmuls
dec
xchg
es
xchg
sbb
xor
cmp
imul
pop
and
xor
or
push
faddl
mov
fbld
mov
sbb
or
jno
inc
sub
mov
cmp
lcall
clc
cmp
rcrb
inc
jmp
out
repnz
call
fisubl
push
ljmp
cmc
sub
je
xor
cli
outsl
lret
lock
push
sbb
ds
test
or
pop
mov
ljmp
add
dec
scas
iret
mov
sub
mov
stos
jl
mov
pop
hlt
gs
es
stos
int3
movsl
add
mov
sti
sbb
adc
sub
lcall
dec
pusha
pop
clc
mov
pop
xor
mov
pop
clc
push
sbb
test
outsl
mov
stc
sbb
ds
imul
inc
dec
add
add
test
and
mov
jae
call
das
pop
cmp
and
jecxz
lret
fimuls
ret
movsb
xchg
stos
jne
mov
push
imul
pop
or
and
imul
scas
mov
pop
xor
int3
pop
xor
push
xchg
ret
test
int
mov
ffree
push
push
add
out
jbe
enter
sbb
or
adc
clc
jge
ret
mov
and
outsl
jge
push
aad
mov
outsb
loope
hlt
mov
and
pop
pop
sti
cmc
xchg
sti
shl
mov
movsl
loopne
andb
mov
adcb
cmp
clc
pop
add
addr16
ss
test
jae
in
xchg
mov
pop
xchg
in
cmc
and
jbe
imul
leave
test
stc
test
sbb
addr16
daa
fiadds
push
xchg
andb
xor
cmpl
mov
lea
xor
fiaddl
dec
or
lock
push
sub
jno
rcrl
jmp
gs
xchg
orl
std
push
mov
dec
test
in
push
incl
xchg
fcomps
lret
and
xchg
pop
lds
lahf
clc
mov
adc
pop
dec
imul
lahf
test
push
dec
and
inc
and
xor
cmp
sub
dec
jae
mov
aas
sub
adc
push
addb
popf
aas
mov
sbb
cmpsl
xchg
cs
push
mov
andps
pop
test
mov
cmc
sti
repz
push
insl
inc
jno
jmp
arpl
pop
imul
mov
adc
hlt
xchg
icebp
adc
and
xlat
add
inc
sahf
pop
pop
pusha
add
imul
aam
pop
push
out
mov
mov
xor
cmc
lea
push
add
jg
adc
or
cmp
mov
push
rol
pop
ficoml
hlt
addr16
and
inc
xor
cmp
shrb
or
mov
jg
enter
or
cs
or
cmp
popf
je
nop
in
ss
popf
loop
push
xchg
pop
push
inc
shll
jecxz
sbb
js
ret
lods
roll
jl
sub
fcoml
pop
adc
sub
int
loope
test
mov
in
arpl
push
leave
push
adc
subl
adc
fisttpll
jmp
es
sub
push
sahf
push
data16
adc
push
mov
loopne
add
sub
jae
inc
sbb
iret
sub
xchg
aas
pushf
mov
repnz
into
fiadds
hlt
in
or
push
mov
sbb
loop
pop
fnstcw
shll
negw
xchg
push
in
cmp
mov
repnz
add
les
rep
adc
inc
mov
push
cli
cld
in
xor
outsl
sbb
inc
sub
repz
dec
cmc
jb
mov
and
push
out
into
push
xchg
imul
push
cmp
add
and
movsl
lret
movsl
sub
mov
xor
cmpsl
repnz
mov
jge
pop
lahf
cmp
clc
mov
repz
jno
mov
rcrl
cmp
sar
imul
out
pop
and
aas
cmpsl
inc
jmp
insb
push
es
cli
xchg
inc
call
ficoms
add
stos
mov
push
idivb
in
in
ret
jno
jmp
lock
cmp
add
in
xor
or
cmp
sbb
pop
ret
mov
inc
shlb
or
jmp
aas
mov
pop
dec
in
xchg
mov
out
lcall
xor
scas
sti
sti
jg
sbb
outsl
enter
xchg
dec
adc
pop
sarb
sub
imul
cmp
sub
lea
mov
in
sahf
xor
push
aas
adc
pop
mov
mov
xlat
pop
dec
inc
in
mov
adc
sar
rorb
mov
push
imul
jb
jbe
int3
sti
pop
clc
dec
dec
stc
xor
repz
mov
sbb
or
pop
je
js
inc
out
inc
movsb
jg
mov
add
pop
jge
jge
push
loope
std
jecxz
ret
cs
ss
fs
ja
js
pushf
add
add
sub
ss
lcall
sbb
mov
pop
roll
mov
inc
push
incb
lea
add
ss
add
shll
repz
ret
add
loope
cmp
es
mov
mov
cltd
fsubr
xchg
sarl
out
cmp
add
pop
dec
pop
int
aad
in
rcrl
lret
push
xchg
je
mov
out
jae
inc
sti
push
leave
xor
adc
aaa
daa
jne
test
pop
jmp
inc
jo
inc
std
mov
jl
daa
lods
mov
push
jg
into
jmp
sub
jbe
adc
mov
push
out
cmpsb
jnp
pop
cltd
and
gs
cmp
push
fisttpl
sub
scas
cmp
push
outsl
cmp
test
mov
ret
or
out
iret
loope
jmp
test
ljmp
sbb
inc
mov
mov
lods
popf
cmp
pop
and
ficoms
in
xchg
out
inc
add
xor
into
or
js
in
mov
and
push
adc
push
jg
movsl
filds
lea
clc
jns
cld
sub
sbb
or
fdivl
lret
push
add
and
bound
jmp
pop
jns
cltd
rclb
add
mov
cmp
lea
insb
in
mov
ljmp
dec
push
sub
fwait
mov
xlat
sub
add
adc
jb
mov
or
mov
mov
mov
mov
je
ret
or
lods
les
cmp
xchg
push
cmp
pop
push
lds
ret
and
enter
pop
sub
fisttps
rorb
pop
mov
outsb
popa
cmpsl
and
xlat
mov
enter
and
xor
pop
and
mov
xchg
mov
xchg
or
loopne
cmp
bound
sbb
gs
xor
push
insb
orl
push
jo
int3
lods
adc
mov
pusha
add
loope
xchg
push
arpl
add
stos
xchg
jl
das
jmp
sbb
sub
push
and
aaa
scas
mov
ret
popf
mov
cmp
pop
dec
pop
shl
test
test
mov
fwait
mov
pop
or
mov
jge
jno
inc
je
mov
arpl
test
hlt
sarl
pop
xor
nopl
iret
stc
cmpsb
or
fmull
imulb
cmp
es
pop
je
test
or
adc
out
test
pop
inc
in
sahf
dec
bound
sarb
inc
or
lds
cld
adc
jl
add
inc
xchg
xor
push
jae
and
shll
pop
jge
mov
outsb
inc
lds
iret
and
pop
dec
ds
or
mov
adc
cltd
mull
lcall
pop
mov
in
ja
mov
push
movsl
push
mov
pop
fidivrs
cs
push
push
mov
nop
je
outsl
int
das
mov
mov
xchg
jle
mov
push
xchg
scas
outsl
je
xor
mov
das
sarb
shll
mov
test
mov
xor
dec
xlat
jb
inc
and
test
xlat
js
pop
dec
xchg
push
out
adc
xchg
push
enter
das
test
and
sub
imul
mov
cltd
push
mov
pop
mov
sub
aaa
lock
cld
addr16
xorl
mov
cmp
xor
pop
push
mov
xor
cmp
icebp
sbb
cwtl
and
cmc
enter
pusha
ljmp
insb
and
leave
in
cmp
push
outsb
in
pop
andl
mov
int
test
into
sub
int
fs
xor
adc
addl
inc
rcrb
lock
test
jno
dec
pop
sbb
pop
js
mov
ret
icebp
in
gs
incb
jno
popa
loope
mov
jno
fldcw
xor
das
hlt
push
fisubl
les
mov
in
out
or
jno
mov
jno
cmp
fisttpll
incb
xchg
jns
test
mov
popf
jbe
inc
sti
mov
xor
jnp
push
negb
inc
fcoml
mov
mov
call
mov
xchg
and
stos
xor
repnz
xchg
bound
pop
in
bound
inc
xchg
pop
pushf
adc
jle
iret
sahf
adc
push
push
scas
test
cmc
sub
push
push
add
js
decl
mov
push
out
out
mov
fdivrl
push
leave
dec
mov
mov
icebp
pop
sbb
push
or
loopne
lods
cli
call
pop
and
in
sub
jns
pop
mov
jp
push
decl
mov
sbb
fnstenv
ds
pop
pop
rolb
xor
mov
dec
rorl
rcl
add
mov
leave
push
out
jbe
pop
test
sub
in
sub
cs
inc
sbb
insl
jno
sub
fiadds
and
andb
mov
dec
lea
sbb
xor
mov
xor
icebp
das
mov
cs
call
popa
in
fisttpl
sub
out
sti
and
sub
and
mov
rcrb
cmpsl
cmc
rolb
in
add
test
mov
inc
mov
lret
and
stc
in
mov
adc
in
cmc
xchg
cmp
pop
mov
imul
or
ljmp
addr16
mov
outsl
aam
xor
jnp
add
ljmp
add
sub
movsl
mov
jns
mov
int
inc
fs
es
adc
gs
rol
push
test
sahf
mov
and
sub
inc
pop
std
mov
bound
aaa
mov
lahf
push
je
cmpsb
addr16
std
push
push
pop
lea
int
fdiv
or
in
mov
mov
jno
xchg
das
lret
jl
ret
mov
push
or
aaa
fiaddl
inc
sub
jo
mov
push
shr
jmp
hlt
in
or
jg
mov
xor
aad
shrb
sub
repz
call
and
adc
sub
pushf
les
leave
cwtl
in
xor
mov
jb
xor
mov
sub
cmp
mov
or
sub
pop
and
xchg
pushf
pop
rol
lret
test
test
sub
add
fs
mov
push
scas
daa
add
shrb
in
mov
lahf
xchg
dec
ds
add
jbe
sub
mov
loop
punpckldq
ja
outsb
les
sarl
mov
js
cmp
adc
or
jne
lock
and
jecxz
sub
mov
cmp
mov
aaa
push
pop
push
roll
xor
repnz
dec
xchg
aad
les
push
gs
or
mov
sti
cwtl
jns
lods
into
ds
aas
testl
mov
loopne
arpl
clc
cld
aaa
dec
insl
inc
dec
test
outsb
xchg
test
pushf
cwtl
cmp
dec
inc
inc
jmp
push
mov
test
jg
insl
lahf
mov
aad
cmp
pop
push
or
addl
cmp
and
repnz
cli
pop
sti
adc
jl
cmp
insb
xor
arpl
fxch
cmpsl
addr16
xchg
mov
jns
add
enter
fldt
aad
or
sti
pop
in
fs
mov
sub
fnstcw
dec
call
mov
outsb
mov
pop
movsl
das
push
adc
incl
incl
dec
sti
mov
ljmp
jb
je
adc
pop
mov
cli
push
iret
push
jmp
sbb
cmp
xchg
ds
insl
jb
shlb
lret
cmp
sti
or
cli
insl
nop
int3
cmp
pop
sbb
mov
cmp
jecxz
mov
cmp
pusha
mov
or
in
lock
mov
xor
sti
adc
rclb
pop
and
cmovbe
pusha
xor
fdivs
pop
ret
fistpl
mov
lret
iret
pop
jp
ljmpw
fnstcw
cmp
inc
fwait
push
mov
add
or
shlb
or
mov
pop
jecxz
loope
jl
ds
dec
in
addr16
addl
lret
inc
stos
xchg
mov
adc
jae
enter
imull
adc
daa
push
les
aam
std
jne
js
les
jae
mov
fldl
mov
xor
sbb
jmp
mov
xor
pop
mov
push
xor
jg
cmc
and
mov
pop
push
stos
mov
decl
push
out
fwait
sub
jmp
pop
je
push
popf
mov
lahf
sar
or
xchg
push
dec
mov
xchg
cli
pop
and
sarb
mov
mov
lcall
pop
ficomps
xchg
fildll
sahf
fildll
popl
stos
insl
mov
mov
shlb
subl
std
pusha
mov
test
inc
int
jle
mov
xorl
mulb
mov
mov
and
cs
dec
fildl
mov
xor
pop
lds
mov
push
into
and
or
and
dec
scas
outsl
lahf
les
dec
pusha
pop
mov
incb
pop
pop
mov
gs
sbb
aad
daa
pop
sub
mov
ja
mov
ss
adcb
jno
out
mov
inc
mov
dec
ljmp
xor
ret
sbb
and
dec
xor
or
js
and
nop
adc
cmp
push
js
and
es
add
sub
lock
push
push
in
mov
xchg
iret
inc
rcll
cs
xor
jo
or
in
and
mov
adc
mov
xor
ljmp
mov
mov
jb
dec
inc
cltd
adc
jmp
or
jns
pop
jae
mov
ja
pop
notb
cmp
inc
lods
bound
dec
hlt
mov
repz
cmp
push
dec
imulb
mov
push
xor
mov
mov
dec
fisubrs
cmp
stos
mov
fstps
mov
or
dec
shll
mov
in
int3
cmpb
fldenv
imul
pop
dec
icebp
sbb
aam
mov
push
test
sahf
aam
mov
js
loop
std
lods
cmp
lret
js
sub
add
dec
pop
xchg
and
jns
dec
xchg
gs
mov
repz
pop
lock
fdivl
and
xchg
mov
jecxz
test
dec
xchg
push
in
pop
or
and
int3
pop
and
notb
or
packuswb
arpl
nop
ret
jno
pop
divb
icebp
loope
jge
xlat
jns
out
cmp
int3
mov
mov
scas
aaa
shl
lea
adc
dec
adc
pop
in
mov
push
mov
jg
add
or
add
or
inc
pusha
cmpsb
sbb
cmpsb
adc
aaa
add
enter
mov
mov
push
rorl
test
pop
xor
out
cmpsl
ret
cld
lret
adc
rcrb
fcmovnbe
jp
data16
inc
iret
dec
je
stc
ret
jl
notl
sar
aam
je
int
ja
inc
xchg
loope
and
xlat
sub
cmpsb
sbb
push
pop
dec
add
arpl
xchg
je
xchg
jg
push
out
cmpsb
outsb
int3
push
xchg
xchg
movsb
in
add
cmpsl
dec
or
sub
mov
dec
xor
in
ret
fstl
pop
jmp
push
loop
push
insl
fs
inc
xor
loope
cltd
mulb
sub
mov
and
and
shr
jb
xchg
in
mov
mov
and
adc
arpl
clc
xchg
xchg
mov
iret
jne
and
ret
imul
inc
mov
in
clc
sub
mov
sbb
movsb
cwtl
cltd
mov
andl
jg
xor
push
repz
ss
fcom
cltd
paddd
insl
insl
repnz
fisttps
sbb
push
mov
aaa
pop
mov
sbb
jbe
cmp
and
fldl
hlt
sub
imul
test
xor
sub
movsl
mov
mov
int
fwait
or
push
pop
jl
stos
cltd
mov
addr16
imul
push
fidivrs
adc
jmp
or
in
stos
jnp
sub
cmp
or
mov
mov
xchg
mov
jp
sbb
pusha
xor
cmp
je
pop
enter
int
cmp
sbb
adc
xchg
jae
push
dec
psubusb
clc
loope
mov
xchg
xor
dec
das
xchg
push
jge
fsub
pop
or
sbb
in
test
jg
fbstp
inc
loopne,pt
jno
jmp
ss
fmul
flds
in
pop
jae
mov
mov
pop
inc
add
es
imul
push
call
adc
push
xor
dec
and
frstor
fstl
ds
pushf
ficompl
xchg
sbb
lret
adc
aas
nop
jl
and
xor
sarl
int
push
xchg
movsl
call
and
shrb
push
rolb
repnz
enter
xchg
cli
sbb
or
mov
sub
add
jmp
pop
jne
enter
or
dec
aaa
jo
insl
sub
sub
inc
xchg
jge
addr16
popl
es
rol
sub
fmulp
outsb
sbbb
dec
test
push
add
xchg
popf
cmp
xor
push
sub
dec
mov
inc
imul
xor
xor
pop
stc
rolb
jno
inc
push
in
sarl
stos
cmc
cmp
push
repnz
add
sbb
pop
aas
movsb
sub
mov
add
and
fucom
sub
mov
xor
mov
daa
je
cwtl
xor
adc
xor
movsl
push
push
sub
or
cmc
xor
and
mov
movsl
push
mov
mov
outsb
hlt
mov
pop
or
stc
pop
cmc
mov
mov
inc
jmp
ret
flds
dec
gs
or
movsl
loope
bound
loope
cmp
dec
mov
faddp
xchg
adc
in
fdivrs
and
in
xchg
nop
add
std
stc
jae
dec
xor
ficoms
push
cmpsl
and
xor
pop
cmp
pusha
and
xor
mov
dec
xor
andl
iret
adc
xchg
jo
std
orl
or
xor
mulb
outsl
aaa
fsub
cmp
xor
fistpll
pop
mov
lock
cld
jo
fstpt
dec
mov
jle
mov
sbb
adc
stos
ljmp
jne
aas
gs
mov
imul
not
es
lret
in
push
insb
mov
adc
cli
mov
shll
test
hlt
push
iret
mov
lret
test
mov
mov
repz
add
loopne
inc
mov
mov
adc
pop
int3
lcall
jge
adc
mov
scas
sbb
addr16
mov
dec
test
dec
sub
std
fcmovb
xchg
repnz
mov
adc
sub
push
aas
xor
lahf
sbbb
xchg
dec
jnp
imul
inc
cwtl
mov
call
pusha
lahf
enter
xor
out
mov
popa
pusha
add
aas
mov
scas
cltd
cld
lret
stc
add
shl
scas
ds
jne
mov
or
loope
addl
adc
sub
shr
adc
dec
loope
cmc
fcoms
inc
nop
dec
adc
mov
outsl
orb
inc
dec
test
xor
scas
cltd
pop
sbb
ret
sarb
jnp
stos
mov
or
sub
pop
cmpsl
push
sub
inc
adc
mov
add
or
fcomip
xlat
sahf
push
test
lods
test
call
sbb
cmp
jmp
cmc
test
mov
in
lcall
inc
rcrb
jl
pop
nop
shll
inc
daa
ljmp
cmp
cwtl
and
aam
daa
jle
movsb
fisttpll
fistl
sub
mov
divb
jle
add
outsb
sti
mull
push
mov
jo
sti
xchg
dec
mov
fildl
ret
mov
push
add
mov
js
sbb
jnp
mov
push
xor
adc
push
pop
push
mov
sub
adc
push
mov
mov
jbe
sahf
adc
mov
gs
leave
xchg
fwait
cs
jbe
ds
gs
fsubs
sbb
inc
lods
dec
les
xchg
pop
cmp
jno
cmp
and
adc
dec
decb
cmc
and
adc
adc
jb
jb
xchg
xor
je
push
push
push
xchg
into
add
push
cmp
adc
in
jns
sahf
or
push
mov
movb
mov
mov
leave
data16
inc
pop
movsl
fs
inc
mov
or
mov
les
xor
mov
dec
mov
adc
xchg
mov
scas
leave
out
xchg
shr
sti
jl
repz
shld
pop
mov
test
jno
out
mov
mov
cmpsl
cmp
lcall
adc
xchg
setg
leave
add
mov
xchg
movsb
int
data16
fwait
vmovntps
xchg
sub
mov
push
in
arpl
or
push
out
jae
fs
jns
jg
xor
push
ljmp
push
xchg
fisubrs
sub
dec
jmp
sub
pop
xor
xor
mov
test
xchg
ds
data16
push
inc
mov
push
nop
xor
adc
adc
cmp
and
ret
xchg
add
sub
xchg
jbe
jbe
jecxz
stc
loopne
push
clc
int
sti
cmp
jmp
bnd
pop
xor
bound
push
xchg
cmp
pop
mov
jae
jmp
add
mov
mov
test
mov
test
aam
jle
stos
repz
jle
sahf
mov
mov
adc
dec
pushf
dec
mov
rcr
je
lock
lret
sub
into
enter
das
cmp
pusha
insb
mov
test
cltd
cmp
cs
mov
ret
adc
fisttpl
mov
push
imul
mov
mov
mov
mov
cmp
rcrl
mov
in
mov
je
imul
xchg
and
loopne
sbb
insl
repnz
sbb
mov
add
push
cmp
sub
ss
leave
iret
and
std
addr16
sahf
sub
cmp
lea
mov
mov
or
pushl
or
push
push
mov
mov
out
mov
dec
sub
stc
xchg
lds
pop
push
loope
icebp
je
dec
fldcw
push
mov
ljmp
dec
imul
aam
jns
jmp
loopne
rcl
dec
adc
ja
sbb
xchg
int3
jae
push
cs
mov
cmpsb
movsl
aaa
shll
clc
adc
push
insl
mov
stc
dec
pop
cmp
xor
and
notl
in
loope
xor
sbb
fcoml
in
call
xchg
aaa
testb
sar
shlb
sbb
mov
xchg
pop
pop
scas
xor
idivb
popa
adc
sbb
push
jge
fwait
push
jl
mov
sub
mov
ja
pop
addl
mov
pop
xchg
mov
fdiv
pop
pop
sarb
das
xchg
and
in
out
mov
adc
cmp
inc
cmpsl
cwtl
scas
cmp
loop
sbb
icebp
vmwrite
sub
add
loopne
sub
mov
in
mov
daa
cmp
adc
cli
test
out
addl
call
dec
out
jge
or
cmp
bound
call
mov
mov
in
sub
ret
jo
jo
or
mov
daa
arpl
cwtl
adc
sub
adc
cmp
sbb
jp
orb
rclb
mov
and
popa
ds
test
sub
xor
pop
mov
lahf
inc
push
inc
lahf
ret
loopne
and
mov
int3
in
add
push
fstpt
int3
bound
jae
mov
ror
sub
gs
iret
inc
loopne
cmpb
stos
mov
push
out
push
mov
cmp
adc
fidivrl
scas
dec
adc
cwtl
push
scas
pop
ja
aam
mov
jb
jno
dec
repz
popl
cltd
pop
out
js
mov
test
cmc
lcall
mov
add
ss
jmp
out
out
sbb
push
sbb
mov
mov
jg
add
or
lcall
dec
shlb
push
or
int
pop
lea
pop
sbb
inc
mov
push
test
inc
pop
nop
inc
sub
mov
mov
pop
and
mov
scas
mov
dec
xor
jmp
add
mov
out
mov
int
or
mov
icebp
out
adc
loop
jmp
sahf
push
pop
inc
andb
out
jno
into
divb
movsl
adc
dec
lret
xor
mov
jo
enter
add
std
or
sbb
dec
sbb
push
or
cmp
cmp
aas
mov
add
mov
push
xchg
xchg
sti
rcl
jl
cvtps2pi
pop
gs
aad
pop
mov
je
les
push
xor
pop
loop
add
dec
lods
fwait
sub
push
loopne
mov
fisubs
adc
pop
insl
scas
adc
fnstsw
fsubp
add
and
mov
adc
subb
push
dec
lahf
enter
mov
mov
test
ss
jae
into
and
push
cmp
push
xor
mov
push
cld
test
inc
imul
mov
movsb
jmp
mov
sub
movsb
fidivs
cmp
mov
movsb
jnp
pop
ret
mov
jp
jmp
jg
jno
outsb
aas
dec
ret
xchg
adcl
aas
cmp
data16
lock
das
adc
ljmp
fldt
dec
movsl
das
lds
jl
scas
jp
leave
outsb
xor
lods
push
scas
mov
pop
mov
inc
and
mov
test
mov
pop
nop
adc
not
out
movsl
sbb
fiadds
sbb
or
cmp
jle
dec
lret
sbb
das
jne
add
lods
sti
int3
and
add
popa
int3
lret
cmp
push
lods
in
lods
emms
push
jb
and
icebp
mov
out
les
nop
sbb
ss
sarb
mov
mov
inc
mov
daa
jge
dec
inc
xor
sbb
inc
sub
push
mov
push
mov
stos
rclb
cmp
fisttpll
scas
ljmp
inc
ss
dec
adc
add
cmpsl
inc
push
jo
imul
sbb
mov
push
repz
rolb
mov
xlat
loop
push
push
push
sub
push
rcrb
insl
cwtl
fcomp
mov
bound
fstpt
push
sub
jge
pop
pop
or
dec
dec
or
mov
es
push
dec
loope
xchg
xor
xchg
movsl
ret
adc
mov
leave
mov
adc
lods
into
scas
adc
inc
hlt
cwtl
pop
pop
iret
mov
js
pop
int3
aaa
sub
mov
imul
mov
sub
in
jnp,pn
mov
jne
inc
mov
lcall
insl
mov
ds
shrb
sub
gs
mov
xchg
lret
xor
or
xchg
push
pop
out
addr16
test
faddl
pop
mov
xchg
mov
mov
and
adc
das
cmp
rcrb
adc
les
ret
jnp
jne
xchg
jl
scas
dec
loop,pt
roll
je
lea
push
xchg
cmpsl
faddl
or
repnz
stc
pop
adc
xor
bound
pop
cmc
aaa
pushf
push
mov
dec
pop
mov
out
cwtl
sbb
ret
iret
iret
in
mov
leave
jo
lds
jb
inc
pop
sbb
mov
xor
inc
mov
inc
mov
lods
lahf
jo
test
lods
jno
adc
test
push
mov
cmp
out
out
inc
xchg
lods
outsl
into
repz
das
mov
shll
adc
hlt
mov
into
adc
pop
cmp
jnp
cmp
pop
mov
aad
cld
sub
mov
cld
mov
sbb
fldcw
or
hlt
adc
and
mov
addl
push
aaa
push
clc
add
or
jle
insl
jns
pop
push
in
add
xor
inc
pop
adc
mov
adc
into
test
add
lock
out
outsl
roll
out
add
push
aas
scas
mov
adc
les
sarl
jge
mov
xor
add
add
arpl
pop
inc
mov
sub
push
dec
lahf
dec
ja
les
neg
pop
cmp
popl
insb
or
in
xor
repz
sahf
pop
test
lock
dec
out
dec
mov
add
shrl
push
movsl
cmp
daa
adc
cld
lods
loope
loopne
mov
loopne
and
js
adcl
push
aaa
dec
dec
js
call
mov
mov
xchg
push
lods
arpl
out
adc
xchg
cmpsl
fsubrs
mov
and
jne
push
jmp
pushf
movsl
sub
movsb
xchg
incb
sbb
pop
dec
mov
leave
ljmp
mov
sub
jo
inc
pop
pop
and
movsb
mov
mov
mov
pop
lcall
jne
cld
jmp
adc
cli
insl
pusha
inc
test
scas
es
mov
push
test
mov
imul
insb
aad
sbb
stc
inc
aam
sbbb
pop
jcxz
mov
dec
pop
fwait
mov
xor
out
inc
int3
inc
mov
ss
fcmovnu
les
sub
in
out
mov
test
test
mov
add
sub
xchg
dec
xchg
mov
pop
push
xchg
insl
ds
lahf
sub
add
addr16
sbb
or
loop
cwtl
test
and
lds
cltd
jne
es
into
inc
and
cmp
sub
sub
pop
mov
or
jbe
sbb
in
iret
icebp
sub
adc
gs
adc
rclb
out
fcompl
int3
add
jecxz
mov
sbb
ljmp
add
add
sbb
add
fadd
pop
cmp
loopne
mov
and
adc
pop
pusha
jecxz
jg
fstps
shlb
mov
or
inc
int3
lret
push
imul
test
mov
xor
ljmp
jne
add
mov
into
lods
fsts
addr16
aad
jno
push
imul
xlat
xchg
jbe
cwtl
and
movb
or
inc
mov
lea
cld
insb
stc
xchg
jb
inc
test
mov
inc
sti
or
cmpsl
ja
or
ss
pop
adc
mov
inc
in
push
mov
icebp
pusha
cmp
repz
hlt
and
xor
xchg
adc
sbb
cmp
push
arpl
adc
inc
sbb
sbb
mov
ret
mov
adc
es
push
stos
enter
dec
rol
fnstcw
clc
push
xor
je
repnz
data16
bswap
int3
out
cmp
xchg
rorl
mov
lret
and
stc
fisttpll
dec
push
pushf
or
sub
xor
in
popa
push
adc
push
lock
cmp
mov
movsl
fwait
jmp
mov
xchg
addr16
adc
arpl
rcr
adc
xchg
add
daa
jo
jmp
enter
jb
movsl
xor
popf
psubsw
mov
vpmullw
test
divl
mov
pop
bound
std
out
sbb
xlat
je
call
pop
les
xchg
sarb
jp
leave
jns
mov
test
mov
pop
jp
xchg
mov
std
insl
cs
rcl
add
xchg
dec
xor
adc
ret
int
lods
mov
add
sarl
sbb
adc
inc
sub
jle
fildll
ds
mov
and
adc
xchg
sub
cmpl
pop
pop
cmp
jnp
sbb
aas
in
fbstp
xor
outsl
pop
jns
loopne
daa
flds
mov
cmp
jmp
cmp
out
daa
xor
or
mov
loope
mov
pop
and
movsb
das
cmpsb
mov
pcmpgtb
xchg
or
mov
or
je
lahf
mov
out
fs
ss
dec
mov
inc
rcr
dec
outsl
js
lret
cmpsb
fsubrp
fcomps
xor
cwtl
inc
mov
aam
xchg
scas
fcompl
mov
lock
cltd
int
mov
push
xor
test
testl
daa
mov
cmp
pop
stc
mov
mov
or
mov
imul
flds
scas
push
pop
push
and
das
pop
mov
dec
xchg
jmp
addr16
push
clc
mov
out
fmull
addr16
mov
add
xchg
popa
outsl
negl
fmuls
pop
test
xchg
arpl
cmpsl
jmp
add
mov
xchg
out
mov
push
lret
or
jge
sbb
scas
aaa
mov
pushf
loopne
push
push
pop
ljmp
xor
adc
jae
inc
xor
sub
adc
mov
cmpsb
incb
fsub
lret
mov
push
lods
push
xchg
fnsave
std
sub
add
inc
dec
mov
mov
xchg
movsb
pop
sub
cmp
push
inc
loop
or
add
inc
sahf
pusha
jge
jbe
inc
inc
sbb
adc
inc
cmp
fldlg2
mov
jae
xor
add
shrl
les
push
insb
xchg
xchg
rol
hlt
pop
push
xchg
push
dec
ss
sub
jns
sub
in
adc
js
and
mov
lret
xorl
std
mov
or
insl
mov
pop
jae
xchg
add
incl
outsl
xchg
mov
or
push
fadd
loopne
iret
mov
andl
adc
enter
lret
cmpsl
dec
test
xor
stos
xor
sub
shrb
in
push
in
jge
xlat
pop
dec
lds
ficompl
insl
mov
addb
fwait
push
mov
jmp
insl
mov
xor
xchg
std
fwait
insl
adcb
out
iret
push
or
sarl
test
mov
fstpl
js
js
imul
or
outsl
lods
push
or
pop
mov
adc
pushf
jns
into
push
xchg
mov
lcall
scas
jge
dec
mov
mov
shl
orb
daa
lea
push
aas
mov
test
out
dec
jae
hlt
jae
lahf
sub
sti
js
xchg
jge
int
sbb
ret
push
repnz
mov
pop
mov
outsb
imul
push
test
fldenv
sahf
push
pusha
cmpsb
push
dec
out
icebp
add
cmp
mov
inc
jne
sub
jmp
repnz
push
loop
pop
push
pop
mov
cmp
les
es
and
daa
sbb
cmp
dec
mov
pop
fxch
sbb
scas
pop
or
stos
shr
sbb
lods
pop
jns
das
mov
lds
ja
or
cmp
fidivrl
es
inc
mov
sti
repnz
jg
sub
daa
fldt
jle
out
mov
std
enter
jb
hlt
aas
pop
jno
pop
xor
gs
adc
add
adc
pop
jae
cmp
xchg
jbe
icebp
jae
dec
mov
add
js
or
lock
or
mov
xlat
aad
inc
add
sbb
inc
lds
push
loopne
mov
sbb
and
loope
bound
mov
xor
daa
adc
idivb
sbb
jge
sbb
fs
movntq
push
lret
xor
jg
sahf
test
data16
loop
dec
sbb
xchg
mov
das
lret
jo
xlat
repnz
cmpsl
jo
adc
test
into
imul
mov
and
fsubrp
hlt
or
sti
mov
adc
out
push
pop
out
mov
setb
jle
dec
xor
cltd
loop
out
sbbb
pop
fbstp
int
sbb
jl
dec
stos
inc
pop
les
and
push
outsb
sub
jb
incb
test
lds
cmp
jmp
je
or
sarb
imul
daa
cmp
push
mov
lods
js
out
pop
inc
and
cltd
mov
adc
mov
xor
push
lea
stos
sahf
call
adc
pop
push
push
adc
xchg
js
or
es
pop
aad
dec
xrelease
ja
mov
stc
daa
lcall
or
pushf
mov
xchg
jne
outsl
pop
test
pushf
into
or
mov
aas
fidivrl
mov
pop
lods
stc
and
clc
xchg
faddl
lds
cs
jmp
pop
or
pop
pop
dec
xchg
mov
lock
fistpll
lret
jne
add
inc
xchg
pusha
dec
sbbl
cmpsl
xchg
pop
sahf
addr16
nop
int
iret
cmp
sub
or
pop
sub
pop
xor
outsl
inc
mov
js
cwtl
mov
mov
in
mov
inc
mov
out
in
mov
pop
into
sub
pop
and
jb
imulb
and
inc
out
mov
je
lahf
and
push
cmovs
movsl
inc
jbe
jno
cli
push
pop
ds
loop
movsl
jb
xchg
stc
dec
or
imul
mov
mov
repz
add
outsb
or
shrl
stos
and
pop
or
pop
inc
in
adc
sub
fdivrs
xchg
test
cmp
mov
out
in
mov
push
call
add
es
inc
into
mov
lea
pop
cli
call
xchg
xchg
dec
fidivrs
sbb
ret
mov
ret
out
push
mov
xchg
fadds
pushf
scas
xor
arpl
pusha
mov
aas
sbb
in
mov
sbb
mov
or
adc
sbb
jno
addr16
push
pop
mov
ljmp
fldl
sub
fwait
sahf
jns
sub
test
xor
push
jmp
bound
popf
es
mov
add
or
mov
add
cmp
cmp
and
mov
sub
xchg
mov
dec
mov
dec
stc
cli
jg
mov
or
sbb
dec
adc
pushf
or
inc
adc
dec
sub
add
adc
push
mov
fwait
loopne
test
mov
rolb
addr16
imul
sbb
js
pop
push
lcall
inc
mov
xor
shl
jns
sub
out
shrb
jb
push
and
xlat
mov
push
aad
mov
or
sbb
cld
test
fwait
ror
or
bound
and
mov
daa
mov
push
loop
mov
inc
int3
sbb
cmc
aad
xlat
push
repnz
sti
scas
icebp
mov
cmp
imul
xor
xor
ret
sbb
push
es
imulb
pushf
aam
mov
add
movsl
inc
jmp
out
cmpsb
sbb
and
icebp
lock
aad
xchg
sub
cmp
sbb
test
sbb
pop
xchg
mov
cmp
shrb
xchg
mov
xchg
xlat
mov
inc
push
out
xor
outsb
push
fidivrl
adc
sub
aaa
lock
inc
pop
inc
jae
imul
mov
and
addr16
cltd
jnp
clc
movsl
lock
cs
xor
mov
or
xchg
sub
sar
jns
daa
adc
inc
push
movzwl
cmp
jecxz
lret
mov
mov
cmp
inc
cli
mov
and
mov
std
int
add
std
mov
rorb
xlat
pop
push
shll
test
out
push
push
push
cmpsl
stos
les
pop
add
rcrl
wbinvd
stc
adc
cmp
dec
mov
xor
cs
fwait
mov
pushl
cmp
mov
xchg
loopne
pop
inc
push
enter
jne
sub
and
push
shlb
mov
aaa
out
jo
icebp
stc
jge
cmp
sbb
jecxz
cld
jo
shr
lret
ja
cld
xor
push
push
andb
aad
outsb
cmp
pop
sub
fwait
lahf
in
fimuls
sti
and
pop
xor
rclb
xor
push
ss
loop
mov
xorb
and
sbb
pop
mov
into
mov
jmp
loop
add
stos
jae
popw
daa
push
cmpsl
mov
jae
mov
lret
sti
jg
mov
add
in
or
fdivs
inc
hlt
test
test
xchg
ljmp
imul
dec
xchg
cmp
dec
pop
repz
std
idivl
jb
mov
les
dec
loopne
mov
in
push
and
insw
test
pop
dec
insl
aam
adc
xchg
fdivrs
cmp
int
mov
mov
xor
sbb
mov
add
les
jle
loop
mov
jb
test
cmc
and
in
rcl
pop
scas
adc
lcall
mov
and
out
addl
jmp
push
push
xor
push
icebp
add
sbb
movsl
inc
das
or
mov
mov
and
jl
jle
mov
cmp
das
in
mov
out
les
dec
push
push
lock
clc
dec
sbb
push
out
sbb
je
mov
push
nop
adc
cmp
mov
xchg
jecxz
out
loopne
inc
imul
sub
fmull
and
outsl
rorl
mov
lcall
mov
cmp
test
dec
lods
cmc
out
cs
sahf
push
mov
push
mov
out
icebp
push
cmp
fsubl
mov
inc
mov
sub
sub
jbe
push
std
push
out
add
inc
mov
inc
xor
js
fdivs
cs
mov
sahf
fstps
fadd
aam
jnp
pop
xchg
out
sahf
rep
xchg
ret
xchg
outsb
push
aaa
out
into
cmp
dec
sbb
mov
adc
mov
loope
pop
stos
xor
in
mov
lcall
xlat
fisttps
daa
aas
and
xor
lock
pop
inc
dec
dec
daa
aam
xchg
imul
cwtl
outsb
lea
repnz
divl
icebp
adc
sbb
sub
sbb
ljmp
pop
fs
out
les
push
xor
pushf
cmc
call
push
mov
xor
cmp
test
idiv
jne
pop
jl
jmp
dec
xchg
ljmp
rorb
and
mov
mov
xor
lret
stos
and
popa
daa
mov
or
sub
push
notb
xor
push
inc
inc
jmp
fistps
mov
or
loopne
mov
fwait
push
mov
pusha
aas
dec
sub
insb
push
fcoml
pusha
pop
jno
push
outsb
add
jbe
fnstcw
sub
mov
cmp
int
and
sahf
mov
mov
test
enter
iret
and
adc
ret
push
mov
loopne
js
inc
mov
popf
xchg
cmp
inc
cmp
imul
movsb
mov
add
mov
sbb
xor
or
hlt
adc
lahf
out
or
sub
add
enter
and
and
inc
shlb
cmp
enter
popf
lea
fidivl
pop
jge
sarb
in
fadds
push
mov
into
arpl
or
mov
push
mov
mov
imul
cmp
or
adc
and
jnp
inc
out
mov
mov
out
pushf
sti
into
dec
mov
xor
subl
xchg
in
lret
sbb
ss
ss
dec
insb
xchg
rcl
lahf
push
neg
ss
push
xchg
mov
jg
and
sbb
dec
mov
pushf
iret
fs
or
stos
fdivs
jmp
das
jge
js
xor
inc
mov
fdivr
lods
ret
rcll
mov
mov
pusha
push
in
xchg
mov
pop
daa
lcall
loopne
push
int3
outsb
dec
loope
sub
dec
ficoms
push
add
xor
movsb
and
fisubs
stos
ret
dec
push
jp
jae
pop
dec
daa
stc
lock
inc
fwait
add
pusha
imul
mov
adc
xchg
push
lods
dec
jno
xchg
add
decb
xor
sub
lret
les
lret
xchg
add
jge
int
lea
jle
out
pop
sbb
mov
xchg
pop
inc
or
stos
xchg
adc
adc
sbb
ret
popf
xchg
push
mov
icebp
adc
sub
inc
mov
and
xchg
aas
cltd
and
ds
fs
push
sub
inc
push
cmovne
push
dec
lods
pop
pop
aaa
jo
add
push
mov
xchg
mov
adc
shlb
fnsave
push
dec
fstpl
movsb
test
xchg
scas
and
cmp
andb
sub
jnp
imul
adc
jns
ss
roll
movsb
pusha
sbb
scas
mov
push
xchg
repnz
sub
push
lahf
mul
popf
sahf
mov
mov
fnstenv
mov
es
jnp
pop
ja
cmp
out
push
rcr
in
inc
out
xor
push
jl
lea
adc
or
and
mov
or
mov
mov
enter
ja
addr16
add
imul
in
js
test
aam
dec
imul
call
add
add
insl
sbb
dec
jg
shrl
mov
cmp
jecxz
adc
fsubs
outsl
nop
and
adc
fcoml
shrl
sbb
int
and
insb
fsubrl
jmp
ja
cmpsl
sbb
test
lret
rcrb
push
iret
pop
pop
pop
dec
es
mov
shl
fmuls
and
xchg
cli
mov
inc
into
les
pop
push
test
imul
jb
push
pop
add
aam
and
add
or
scas
pop
add
sbb
shll
int
ja
mov
mov
inc
xor
push
shrb
js
inc
or
jg
inc
dec
test
loopne
dec
es
in
movsl
int
scas
gs
and
pushf
test
pop
test
ja
jle
lock
fildl
xor
jle
mov
popf
pop
jg
push
jmp
inc
gs
mov
into
vpsllq
fisubrs
ror
jns
dec
call
pop
cmp
jae
pop
stos
testl
jns
lcall
push
fsubrs
push
push
imul
cmp
mov
clc
movsb
mov
adcl
sahf
pop
out
mov
sbb
fisubrs
pop
shl
scas
mov
xchg
jl
push
mov
jae
pop
ret
insb
scas
jo
lcall
sub
lods
subl
hlt
ja
adc
dec
mov
mov
arpl
ficoms
test
fwait
jg
bound
das
mov
ss
outsl
sub
push
scas
int3
pop
push
pop
jne
jl
sarl
and
hlt
add
push
mov
push
mov
repnz
xchg
js
sub
dec
outsl
in
inc
mov
mov
lds
jp
outsl
hlt
data16
sub
xchg
pushf
jge
sbb
xchg
xchg
imul
lods
dec
inc
jg
pusha
add
je
dec
icebp
stc
sarl
jg
push
loope
call
xchg
xor
gs
mov
int
add
testl
je
jbe
cmp
jle
sbb
ret
xchg
dec
ss
mov
iret
mov
add
shll
std
call
subl
call
sub
lock
mov
jecxz
scas
pusha
inc
push
imul
jb
push
xor
mov
sti
insl
sti
jno
jae
push
stos
leave
loope
dec
xlat
cmpsb
xor
mov
sbb
int3
mov
lcall
jb
jbe
dec
inc
int3
inc
mov
cmp
popa
adc
mov
stos
movsb
adc
inc
inc
std
lock
mov
int
ja
out
fs
sbb
mov
adc
fldenv
push
cmp
push
ja
dec
hlt
jbe
adc
dec
push
sbb
push
and
inc
xchg
dec
mov
sub
mov
aam
add
inc
and
push
mov
adc
mov
test
stc
out
loop
xor
out
mov
pop
mov
mov
mov
jmp
push
movsb
clc
js
rol
dec
repnz
sub
push
mov
lret
aas
popf
fstl
stos
xchg
outsb
inc
inc
mov
leave
mov
outsl
movsl
jb
fwait
mov
sub
and
mull
insb
sti
fcompl
sub
shll
sti
xor
mov
push
shll
jp
mov
int3
test
adc
fistpl
fsubs
aas
jmp
cld
inc
js
mov
pushf
test
popa
push
cmp
enter
sub
in
inc
push
mov
pushf
in
insb
pop
rclb
lods
xchg
or
movsb
sbbb
and
push
or
xlat
pop
inc
nop
mov
xor
in
sbbb
fisubs
sub
bound
xor
lahf
dec
jmp
daa
mov
sub
pop
add
leave
cld
jle
das
jmp
loope
jp
and
xchg
aad
push
push
pop
xor
enter
jl
hlt
cmp
pop
jbe
mov
into
adc
leave
dec
testb
orb
in
ja
sti
mov
outsb
stos
mov
inc
dec
jno
jg
movsb
dec
ds
mov
push
add
dec
xlat
mov
out
dec
xchg
add
movsb
aam
ret
and
dec
push
shrl
out
movsl
xchg
push
push
or
or
clc
iret
xchg
stos
cwtl
add
push
cwtl
rorb
repnz
scas
mov
and
mov
mov
sub
dec
cwtl
mov
fdivl
nop
or
add
movl
add
into
negb
jnp
cwtl
inc
push
les
clc
mov
cmp
pop
add
dec
xorb
stos
inc
pop
stc
jge
pop
jge
imul
clc
sbb
ret
int
mulb
jno
pushf
xor
test
rcl
insl
ss
inc
stos
push
fstpt
jmp
mov
sti
das
push
cmp
fs
rcrb
lea
pop
nop
clc
std
dec
and
push
rolb
cmpsl
add
lods
call
add
or
arpl
jg
int3
sbb
mov
dec
lds
sbb
sub
mov
add
loopne
adc
jp
xorb
push
push
inc
sub
stos
imul
pushf
mov
gs
inc
adc
inc
and
mov
ret
push
jbe
xor
out
xchg
push
loopne
xchg
inc
out
inc
sbb
stc
adc
push
insb
mov
add
push
fldt
mov
cs
mov
shrl
mov
outsl
xor
mov
fs
in
ja
mov
insb
leave
inc
popl
std
testl
push
dec
and
std
fincstp
call
dec
dec
imul
xchg
call
sti
or
cmc
pop
mov
mov
xor
cmpsl
jbe
and
arpl
jg
fsubs
sbb
dec
ficompl
outsb
adc
mov
xchg
or
jne
and
pop
push
lods
ret
jb
insb
js
xchg
pop
add
out
push
sbb
pop
in
out
inc
mov
cwtl
loope
pop
daa
jecxz
imul
push
rclb
jmp
shr
xor
or
sahf
arpl
cltd
mov
jecxz
lods
cwtl
xchg
adc
call
inc
test
mov
stos
and
mov
sahf
fidivrl
imul
call
jge
dec
xor
cmp
cld
inc
shll
add
jne
dec
shll
shrl
mull
xor
xor
incb
out
mov
inc
xchg
outsl
daa
movsb
les
pop
adc
dec
dec
mov
pop
mov
inc
push
daa
fsubrs
mov
adc
and
test
sub
lods
jo
cs
int3
dec
data16
sub
test
mov
mov
les
movsl
aaa
sub
adc
fists
out
mov
mov
pop
movsl
or
aaa
inc
testb
jmp
cmp
pop
scas
vmread
inc
xchg
subl
mov
outsb
out
enter
or
mov
jae
inc
jo
inc
jae
js
mov
mov
dec
rcrb
sub
lods
adcb
dec
cs
jae
lods
std
cmpl
fidivs
add
lds
xchg
mov
in
sub
repnz
xchg
mov
or
iret
bound
ret
push
pop
lock
cmp
movsb
repz
stos
inc
fbstp
negl
mov
add
mov
repz
fsub
pop
scas
sub
ss
das
imul
ljmp
pop
mov
into
loope
and
mov
mov
mov
jne
xor
mov
and
idiv
les
xor
test
loopne
mov
cmc
rep
insl
cli
sbb
sub
push
arpl
add
push
inc
and
mov
pop
add
dec
aas
inc
imul
dec
in
test
add
mov
sti
xchg
jbe
mov
roll
mov
hlt
imul
pop
push
call
xchg
push
mov
lods
cmp
in
sub
aas
leave
jecxz
xchg
xchg
mov
dec
call
push
dec
adc
rolb
xor
jno
out
mov
add
dec
push
mov
pop
das
dec
sub
loope
and
jge
add
xchg
pop
xchg
rorb
fscale
fstpl
mov
imul
mov
push
insb
pop
mov
ds
sar
xor
adc
loope
scas
aad
insb
lret
and
insl
adc
pusha
and
jg
pop
in
nop
push
fbstp
les
rolb
mov
pop
outsl
or
jp
es
inc
fmull
mov
or
mov
jmp
mov
test
iret
dec
xchg
pushf
jo
mov
stos
pop
or
call
in
pop
or
leave
cmp
fiadds
ja
mov
inc
adc
mov
bound
dec
jmp
xchg
sbb
push
ja
xchg
rolb
push
xor
xchg
push
pop
in
stos
or
fwait
jge
ss
sbb
add
ss
arpl
inc
mov
adc
pop
popa
xor
or
sub
lret
sub
stos
xchg
and
arpl
adc
es
jl
es
adc
aad
dec
mov
xor
jle
bound
addr16
cmp
pop
xor
dec
xchg
fstl
cmp
push
fisttpll
sub
sbb
test
mov
in
xchg
inc
or
bound
into
jle
or
xor
push
in
movsl
xor
ds
popa
int3
aad
xor
int3
scas
cld
jbe
adc
push
push
fsubs
sbb
andl
inc
add
outsl
pusha
pusha
add
mov
sub
xor
lock
pop
scas
pop
xchg
call
popa
sub
movsb
jno
mov
sub
pop
cmpb
aaa
enter
arpl
jmp
adc
into
pop
push
popa
mov
push
xchg
daa
adc
cwtl
sahf
or
lods
popa
mull
add
add
dec
or
popf
or
push
ficompl
scas
xor
cmp
push
test
push
add
inc
mov
push
in
mov
inc
repnz
mov
gs
fs
add
and
mov
sti
ljmp
cmpsl
in
add
jl
outsl
adc
push
loopne
add
jp
jno
scas
jbe
out
sub
cmpsb
mov
into
jg
pop
stos
inc
push
xor
xor
or
mov
mov
out
jg
pop
jb
mov
in
stos
lods
mov
add
out
mov
test
add
pop
xchg
sbb
popa
mov
imul
sbbl
jns
out
lret
sahf
aam
nop
data16
dec
mov
int3
fs
arpl
loop
sbb
dec
push
jle
push
jbe
mov
ss
cmc
incl
outsl
inc
adc
pushf
push
mov
xor
loop
imul
mov
nop
ret
dec
or
sbb
jns
xchg
xchg
and
jnp
sub
ja
or
ret
jge
std
out
imull
iret
outsb
mov
filds
xchg
adc
sub
pusha
stos
daa
dec
shl
aam
pop
arpl
popa
sbb
scas
adc
lcall
fisubl
jge
sub
inc
sahf
ret
pause
mov
xor
dec
cmp
aaa
movsl
mov
cmp
dec
mov
push
in
sub
lea
xchg
movsb
not
adc
rcr
insb
cmpsb
lahf
lea
scas
dec
jle
int
xchg
xor
or
add
into
mov
imul
pop
jp
jge
sti
jns
mov
cmp
sub
jecxz
mov
push
xchg
push
fwait
pop
cltd
mov
es
idivb
inc
xor
cmp
xlat
xchg
push
call
jbe
sahf
mov
rcl
pop
aas
fs
mov
outsb
test
xor
cmp
pop
lock
jo
imul
je
cli
cmc
loop
mov
mov
lds
dec
aam
daa
jo
inc
sbb
mov
and
popa
sarl
adc
inc
sbb
sub
inc
into
and
pop
dec
jns
or
aam
iret
xor
mull
pop
lea
xchg
add
or
adc
daa
jmp
push
jno
add
fisttpll
es
lcall
inc
adcb
sbb
adc
test
arpl
adc
ljmp
fstpt
imul
fdiv
adc
add
pop
andl
test
mov
push
jo
ret
fildll
and
mov
in
xor
push
fisttpll
sbb
sbb
inc
push
imul
mov
fstps
cmp
jns
dec
stos
and
jae
and
fistl
xorl
adc
jo
sub
cmp
hlt
into
sub
int3
add
lret
aad
lret
test
lret
dec
ret
cmpsb
gs
or
daa
outsb
pop
scas
icebp
pop
mov
je
mov
inc
mov
pop
and
leave
and
in
pop
mov
sub
cltd
fwait
rorb
add
and
xchg
mov
outsb
xchg
nop
imul
jecxz
cmp
or
into
imul
mov
fwait
dec
dec
pusha
sub
data16
stc
pop
xchg
cmpsl
sahf
es
xlat
out
push
jecxz
and
add
arpl
arpl
pusha
fsubrp
loopne
fsubr
cmp
adc
inc
int
scas
xor
pop
fistpll
fwait
mov
divl
xchg
mov
add
or
insb
int3
int3
pop
insb
inc
faddl
inc
xchg
add
xchg
test
xchg
jp
insb
push
cmpb
mov
lds
cmp
mov
es
jecxz
rcrb
cwtl
flds
pop
fisttpl
sub
inc
push
lds
xor
sarl
out
adc
cmpsb
mov
in
je
cld
sbb
inc
sbb
push
add
mov
xchg
add
arpl
push
cltd
inc
jl
mov
sub
fs
test
pop
adc
xor
cmp
sbb
int
mov
popa
imul
mov
dec
in
out
sub
push
out
xchg
lret
rcll
cmpsw
mov
inc
adc
aad
push
scas
xchg
testl
cmpsl
loop
mov
xor
lret
xchg
loopne
lret
xchg
jae
arpl
incb
gs
fiadds
and
sbb
xchg
ljmp
nop
stos
push
or
sub
or
push
xchg
and
test
or
lods
fwait
lds
js
loop
in
xor
pop
cmp
insb
ret
dec
xlat
leave
arpl
lods
dec
xchg
sub
data16
cli
add
aas
inc
push
fisttps
cmpsl
jg
cmp
dec
arpl
data16
loop
or
sub
cmp
inc
in
outsb
cmp
cmp
aad
outsl
jnp
xlat
aam
mov
out
cld
adc
fwait
and
mov
push
in
daa
pop
nop
xlat
cmp
pushf
mov
and
fsubrl
loop
das
jl
rcrl
add
jle
and
sub
lahf
ds
inc
xchg
cmp
pop
adc
popa
aaa
xor
xchg
xor
movsb
xchg
lret
jb
test
inc
and
insb
lret
xor
out
sbb
frstor
mov
hlt
ret
out
jne
jae
out
data16
out
int3
mov
jo
je
lock
xor
leave
iret
pop
fmuls
lcall
xor
testb
out
sbbb
mul
mov
mov
hlt
cmp
jnp
pusha
aas
cmp
mov
push
xlat
insl
ja
aaa
jbe
sti
mov
lods
pusha
push
cwtl
sbbb
shll
loope
dec
lea
or
js
sub
jns
leave
popf
pop
pop
sub
ret
pusha
pop
or
xchg
jge
arpl
fildll
pusha
hlt
loopne
shrl
inc
mov
xchg
lea
pop
and
fdivrs
xlat
js
insb
adc
fwait
outsl
shll
add
mov
or
jns
jae
sbb
clc
sbb
or
and
jmp
xchg
xchg
das
in
inc
movsl
cmp
repnz
cwtl
in
or
sub
jmp
xchg
mov
lods
cmpsb
fimuls
test
inc
dec
mov
loope
imul
aas
xchg
repnz
sub
aaa
push
loop
lock
out
xchg
pop
jo
inc
daa
les
sbb
ds
add
push
enter
jbe
or
inc
pop
mov
cmpsl
sub
test
cmpsb
in
daa
in
jg
repnz
push
insb
mov
insb
mov
loop
in
push
push
roll
sub
add
ss
jg
sbb
std
jg
leave
pop
dec
ret
aam
inc
adcb
xor
andb
mov
dec
xor
dec
sti
xor
push
test
ret
xor
cs
and
xor
and
cmp
mov
sub
clc
xor
jmp
loope
fistpl
insl
sub
jae
pop
push
rorb
jnp
inc
sub
shll
cmp
in
pop
pop
jbe
nop
inc
jo
jbe
xchg
xchg
in
mov
adc
jmp
insb
enter
scas
bound
pusha
xchg
push
lcall
cmp
clc
push
jns
push
add
scas
pop
js
push
sub
mov
cmp
loopnew
insb
in
inc
push
out
leave
adc
sub
mov
cld
shlb
out
lret
fldt
ljmp
call
or
leave
rcr
cli
nop
sbb
fisttpll
or
mov
or
jp
call
lods
push
push
or
adc
mov
sbb
dec
mov
lret
lret
xchg
lahf
cs
adc
nop
scas
adc
jl
dec
adc
xor
outsl
cmpl
mov
mov
and
repz
cmpsl
mov
push
cs
sub
daa
sub
mov
pop
in
push
in
scas
ss
sub
and
jno
popf
pop
xor
lahf
jbe
push
sub
gs
push
mov
add
ja
mov
clc
leave
pop
jmp
insl
or
imul
sub
inc
or
stos
out
out
nop
jo
dec
push
adc
out
data16
pop
mov
je
in
dec
cmp
cmc
push
jp
insb
jb
sub
shl
mulb
imul
mov
enter
mov
dec
std
subb
sub
popa
push
stc
jbe
sbb
jmp
cwtl
cltd
mov
andnps
mov
cli
jns
and
test
pop
fucomi
jne
std
repnz
cld
mov
arpl
xchg
cmpsl
mov
or
cmp
out
push
loopne
mov
fcmovne
jecxz
xor
push
jp
lea
cmp
insl
mov
mov
insl
lods
and
mov
imul
adc
sub
hlt
insb
dec
inc
or
inc
xor
jg
xchg
add
push
jecxz
mov
inc
push
lcall
repnz
add
fs
xor
inc
adc
push
arpl
mov
aaa
ja
cwtl
or
or
sub
sbb
mov
mov
das
aas
mov
push
or
bound
push
adc
push
inc
adc
ja
jg
loop
cmp
int3
push
arpl
cmc
ret
push
add
data16
leave
stos
rorb
inc
inc
lods
pop
cmp
imul
test
iret
xchg
add
jge
push
mov
shr
xchg
imul
jns
sbb
daa
xchg
mov
dec
push
push
into
jecxz
xchg
push
cli
stos
push
je
cmp
fists
mov
lock
adc
movsl
mov
aaa
andb
das
mov
and
xchg
jmp
or
in
aaa
cmp
js
jo
fcmovne
icebp
popf
sub
int
cmpsb
mov
inc
cmc
fwait
sbb
lcall
orl
cld
pop
xchg
mov
cmpsb
mov
mov
test
in
mov
mov
loope
mov
mov
sub
xchg
icebp
loopne
sbb
jecxz
inc
jge
pop
cmp
xor
ds
shll
cmpsb
fsubl
xor
push
xor
xor
inc
test
xor
enter
dec
test
movsb
jle
pushf
les
inc
push
dec
mov
mov
push
mov
stos
inc
mov
inc
nop
lret
lret
xor
lds
jae
push
xor
pushf
imul
add
sti
roll
fld
cmp
push
cs
es
imul
mov
outsl
shrb
or
cld
repz
push
or
pop
sub
xchg
movsb
fdivrl
cmpsb
rcr
arpl
popf
inc
sbb
xchg
sbb
aaa
imul
imul
imul
loopne
scas
cmp
cli
sbb
cs
and
mov
xchg
mov
flds
xor
xor
jno
jbe
jecxz
and
and
jecxz
movsb
ret
dec
and
sub
int
nop
jo
enter
push
lret
rclb
repnz
sub
and
push
lea
cmp
shlb
mov
into
or
in
dec
stos
adc
mov
mov
xor
int3
dec
dec
mov
repnz
fildl
mov
lahf
jne
ss
cmp
sub
jae,pt
mov
cmp
add
sbb
ja
daa
mov
movsb
clc
mov
push
sub
and
ret
cmp
fsubrl
jne
xchg
jnp
out
jge
pop
sbb
jb
cmp
jb
or
in
into
pop
add
ds
js
mov
aas
test
xor
fstps
shl
loope
xor
mov
data16
add
jge
xor
mov
loopne
mov
or
aaa
and
pushf
aas
push
shlb
pusha
test
sar
loop
and
scas
pusha
imul
cld
mov
xchg
or
or
lret
sub
cltd
lcall
testb
cwtl
sbb
fstl
or
or
mov
push
stos
fisttpl
xor
jge
sub
adc
mov
push
rolb
or
ficoml
aaa
movsb
inc
popa
mov
das
xorb
in
xlat
mov
aas
das
xor
sbb
into
jge
fmuls
push
mov
adc
repnz
aad
cmpsl
mov
pop
lret
and
jp
dec
mov
rorl
mov
pop
xchg
stc
dec
inc
out
outsl
sub
inc
mov
xor
lahf
daa
pop
push
addr16
sub
mov
sub
and
jmp
cmp
xchg
fwait
push
mov
aaa
fwait
adc
insl
aad
dec
xchg
adc
mov
mov
jle
fnstenv
ljmp
adc
mov
jp
ret
mov
psrld
prefetchnta
pop
adc
lcall
adcb
loopne
jo
hlt
test
pop
out
bound
in
xor
gs
and
cmpl
xlat
dec
mov
and
out
xchg
in
mov
rorl
fldcw
add
xor
in
sbb
enter
mov
loop
aad
arpl
mov
add
add
popa
pop
cmp
push
dec
ds
and
mov
adc
and
dec
mov
fstpt
sahf
sub
dec
ljmp
fnsave
lock
adcl
cmp
fildll
fwait
sub
add
inc
xor
mov
gs
movsb
mov
iret
dec
mov
xchg
aaa
ss
aas
hlt
lret
mov
aam
xchg
sarb
bound
inc
repnz
xor
sub
dec
sahf
add
loop
cmp
out
dec
sbb
adc
mov
adc
xlat
je
lods
into
and
jbe
pop
mov
es
mov
cmp
outsl
repz
imul
std
movsl
fcoms
push
imul
xchg
test
push
int
sahf
sub
cli
imul
in
dec
and
mov
xchg
stos
inc
sub
or
push
pop
ret
scas
cmp
in
ja
and
das
aad
inc
fstpt
or
mov
cs
aad
movsb
in
mov
out
lds
std
xchg
ljmp
cmc
sbb
add
xor
lock
int3
jnp
movsl
pop
adc
mov
into
pop
fmuls
test
jg
and
mov
icebp
popf
sub
jge
xor
mov
sti
popf
mov
inc
sub
jp
adc
pop
jmp
adc
lret
adc
movsb
leave
dec
jg
cmp
dec
setge
mov
nop
outsb
push
mov
adc
sbb
fldl
and
andl
xor
rorl
pop
in
or
lret
out
test
adc
mov
dec
jmp
xorl
mov
jnp
add
sub
push
push
adc
xor
les
xchg
sarl
lret
shl
fiaddl
lea
repnz
push
sub
mov
sub
and
cmp
imul
add
lods
pusha
cmp
inc
testb
out
lret
mov
pop
scas
sbb
inc
mov
aam
cmc
push
movsl
xchg
sub
cmp
pop
mov
lds
cmp
ret
sarb
push
pop
test
or
gs
mov
fs
mov
push
stos
insl
mov
arpl
pop
and
jg
mov
shrl
sbb
les
xchg
pop
fcomip
and
sarl
insl
or
cmp
and
pop
push
cld
out
cmp
xor
xor
sub
push
lret
es
je
out
stos
sbb
inc
ja
bound
push
imul
into
adc
clc
movsl
outsl
lret
xor
adc
and
xor
push
shlb
xchg
adc
int3
and
inc
xchg
pop
aaa
nop
int
cltd
pushf
xor
jnp
mov
fidivrl
divl
fsubp
sbb
mov
dec
mov
into
adc
xor
js
pushf
or
loopne
push
enter
cmp
js
mov
xchg
cmp
lods
popa
sbb
mov
cmp
push
jb
ss
enter
clc
pop
cld
jmp
imul
mov
lahf
leave
iret
dec
in
dec
mov
mov
cmp
in
arpl
push
sub
test
mov
cmp
ja
or
inc
xchg
cmp
lods
out
fisubl
cmpsl
mov
test
imul
inc
cmpl
sub
jo
lds
loope
xchg
jle
sub
lds
mov
out
adc
sbb
or
mov
adc
push
scas
mov
pop
aas
int
hlt
lods
in
xor
add
push
sub
jg
cmpl
out
jae
mov
icebp
and
fcom
and
cld
movsl
out
in
rol
cmp
fisubs
shl
adc
xlat
mov
push
clc
adc
insl
jmp
and
rcll
cmpsb
mov
or
movsb
movsl
sbb
adc
mov
out
shr
scas
cld
lock
out
inc
sahf
in
inc
xor
add
or
enter
aaa
mov
shlb
mov
dec
fyl2x
lret
jnp
mov
movsb
movsl
cmp
mov
fistps
inc
pop
cmpb
push
mov
push
lret
mov
scas
addl
adc
sub
jno
sub
data16
pop
shll
inc
add
pop
or
cmp
lret
xchg
mov
sub
int3
hlt
jmp
pop
sbb
xor
aad
sbb
and
fdivrs
mov
imul
mov
inc
js
aam
mov
jg
enter
subl
and
mov
inc
rclb
push
cmc
mov
test
cmp
fcoml
sbb
into
dec
das
lahf
pop
xor
pop
adc
push
pop
sub
cmpsb
xchg
fdivrl
push
stc
cmp
xor
pop
psubd
or
out
int3
inc
push
stc
aad
int
xor
pop
pusha
mov
xor
or
lahf
ljmp
cmp
xlat
push
cmpb
outsl
rorl
pop
mov
in
push
out
cli
mov
dec
or
add
or
or
bound
inc
call
fsubl
stc
adc
lds
fbstp
pop
daa
push
cmp
aas
adc
xor
add
or
repz
or
adc
sbb
mov
dec
cmpsl
cwtl
rclb
mov
pop
call
mov
fs
enter
mov
insl
xor
test
add
pusha
mov
mov
inc
aam
push
add
scas
fisubrl
adc
in
mov
mov
inc
cmp
sbb
test
movsl
hlt
out
mov
popa
dec
stos
mov
addr16
sub
in
test
ret
aaa
cmp
xchg
aaa
pop
mov
mov
or
aad
lods
add
pop
fdivrs
or
xchg
mov
aaa
lods
or
jmp
ljmp
jmp
push
scas
movsl
mov
xchg
cld
outsl
inc
xchg
mov
sub
mov
mov
std
xchg
jne
ficoml
mov
inc
nop
xchg
mov
mov
nop
mov
inc
sbb
xchg
adc
adc
cmpsb
pop
mov
dec
and
notl
or
sbb
or
adc
repnz
add
dec
xor
mov
xor
pop
dec
das
add
imul
jae
pop
movsl
lcall
rorb
lds
pop
sub
mov
ds
in
lahf
jnp
add
imul
and
adc
faddl
subl
outsb
mov
sub
pop
xchg
out
in
cmc
bnd
sub
and
cmp
adc
xchg
and
ficoms
mov
sbb
jo
shll
inc
movsl
sub
mov
enter
dec
xor
lahf
ljmp
hlt
and
es
and
adc
inc
push
ljmp
jmp
ds
push
xchg
popa
mov
ret
int
xchg
mov
adc
push
jp
push
addr16
inc
scas
out
jg
xor
push
scas
sbb
mov
push
sub
dec
scas
xchg
dec
push
insl
push
xchg
and
ret
push
dec
in
add
cmp
mov
lods
es
int3
push
push
cwtl
add
jb
jle
rolb
mov
jp
push
push
movsl
mov
test
je
xchg
sub
mov
inc
pop
shlb
int
dec
int3
dec
mov
lods
ds
xor
les
stos
xchg
push
and
rorb
leave
ss
pop
icebp
adc
cmp
push
popa
lret
movsb
js
adc
pusha
jbe
mov
pop
jnp
in
mov
push
sub
inc
test
loop
and
adc
les
les
jae
inc
adc
and
add
xchg
cld
testl
outsb
inc
cmp
loope
xor
gs
fistl
movsl
into
xor
inc
push
daa
pop
inc
das
fldenv
dec
mov
cmp
addr16
add
jmp
cmp
ss
sub
stc
shll
daa
xchg
in
insl
scas
pop
sti
insl
movsb
pop
mov
lret
in
lret
cwtl
cmp
sbb
jnp
push
pushf
aas
sub
or
leave
idivb
shll
xchg
or
pop
push
fildl
dec
cmp
mov
aad
daa
repz
es
aas
dec
clc
hlt
and
fs
imull
and
sub
int
push
jns
dec
stos
push
cmpsl
xchg
push
or
lock
inc
dec
shlb
lret
jle
xchg
sub
test
out
xchg
and
adc
inc
jb
dec
out
xchg
xchg
div
vmaxss
imul
stos
add
mov
addl
sub
enter
and
push
push
mov
mov
xchg
es
imul
movl
loope
dec
clc
jle
and
out
aaa
mov
mov
dec
inc
addr16
xor
out
dec
scas
push
ds
cmc
dec
xchg
shlb
pop
dec
inc
mov
scas
jns
inc
cmp
mov
sarl
xor
inc
dec
pop
xchg
or
in
shll
or
xchg
and
daa
in
adc
sbb
and
xchg
or
dec
mov
cmpsl
divb
les
outsb
mov
out
jg
sbb
data16
rcl
adc
add
inc
sbbl
stos
pusha
leave
xchg
into
jno
hlt
cmp
push
xchg
push
test
insb
lcall
cmp
icebp
and
fs
shrl
and
pusha
add
push
xlat
gs
cli
mov
cmp
scas
inc
jnp
push
or
mov
daa
sub
jmp
mov
or
lcall
or
cli
and
insb
jo
cmpsl
sbbl
xstore-rng
cmpsl
vcvtss2sd
or
cld
xchg
fucomip
and
add
lret
shl
fisttpl
shlb
decl
stos
and
sarl
jne
stos
adc
dec
adc
xadd
or
aad
pop
mov
mov
xchg
pop
push
jge
ficompl
inc
cmp
cs
fs
pop
leave
pop
sub
jle
mov
repnz
mov
cltd
jl
out
loop
dec
into
es
mov
ret
mov
mov
add
rcrb
and
dec
xchg
push
mov
jmp
dec
mov
mov
mov
xchg
fs
push
imull
rol
imul
inc
cmp
test
mov
jmp
pop
push
lcall
mov
addr16
aam
cmp
arpl
jne
sub
cmp
and
push
mov
pop
push
add
xor
es
pop
fwait
sbb
std
gs
fdivp
mov
mov
add
mov
enter
imul
lahf
xchg
sub
mov
adc
pop
popf
fsubr
cli
jmp
dec
hlt
notl
out
ds
jg
push
mov
iret
test
sbb
xor
lea
ret
sub
cli
add
push
mov
mov
push
push
jo
jo
pop
repz
lea
sub
out
sbbl
or
push
inc
stos
cmp
clc
cmp
rolb
stc
pusha
ljmp
ljmp
icebp
roll
adc
gs
call
repz
insl
into
cmp
hlt
stos
mov
repnz
and
aas
sahf
pop
inc
mov
push
fists
xor
outsb
ljmp
sbb
xchg
xchg
mov
or
pop
out
push
jns
jge
lea
daa
icebp
enter
movsl
mov
stos
jecxz
jne
imul
out
cmpl
dec
adc
push
mov
movsl
sub
call
cmp
inc
xlat
in
pop
mov
lods
xchg
push
ret
bound
popf
outsl
cli
and
cmp
dec
leave
imul
sbb
mov
sub
mov
insb
and
insb
cs
enter
cmp
gs
mov
scas
aaa
movsl
repnz
roll
or
pop
es
ret
mov
add
push
daa
dec
lock
sbb
jmp
or
sar
xchg
xlat
pop
cmpsl
and
mov
cmc
dec
lcall
push
mov
jo
jno
cmpsb
inc
mov
call
out
xor
mov
mov
mov
daa
jne
lret
cltd
cltd
loop
pusha
sub
add
fistpll
mov
repnz
enter
jb
mov
mov
or
ss
movlps
loop
mov
dec
xchg
mov
push
push
cld
mov
jl
mov
jecxz
lock
xchg
mov
adc
push
pop
adc
mov
xor
and
lcall
mov
xor
dec
pop
xchg
push
push
das
push
insl
out
pop
ffreep
xchg
inc
int3
icebp
lock
clc
sub
or
fisubl
int
pop
pop
shll
mov
daa
fldenv
imul
inc
dec
xchg
shl
mov
mov
scas
stos
shlb
adc
jmp
iret
and
or
jno
pop
sahf
adc
daa
dec
pusha
out
fcmovnbe
stc
lods
int
jb
js
cltd
adc
lock
pop
pop
int
pop
mov
mov
in
call
dec
adc
popa
xchg
pop
xchg
adc
ja
push
arpl
out
fidivs
cmp
or
cmp
lahf
add
popf
and
bound
lods
int
pop
test
mov
mov
movsl
pop
jnp
inc
in
adc
lock
add
leave
push
xchg
pop
dec
jle
cmc
ja
out
imul
add
xchg
sub
xor
nop
mov
test
xchg
push
pop
add
cmp
into
mov
pop
cmp
sub
outsl
fisttpl
inc
ljmp
icebp
inc
seto
pushf
cmp
popf
lock
cmp
xlat
in
hlt
cmpl
dec
test
push
repz
inc
jne
stc
cmp
jmp
test
dec
sti
mov
pusha
movb
mov
xor
rorl
sti
jns
mov
jnp
cmp
and
out
pusha
sbbl
cmp
fsubrp
pop
aaa
pop
mov
je
push
push
and
je
sub
jle,pt
es
and
adc
out
add
je
leave
orb
out
xor
sub
pop
sbb
cld
shll
add
dec
xlat
cltd
loopne
adc
xor
js
aaa
scas
inc
xor
mov
fadds
pusha
jbe
cld
and
push
repnz
mov
dec
mov
mov
jns
dec
jno
aam
cs
jo
mov
jb
clc
bnd
leave
iret
mov
jg
dec
and
scas
adc
fsts
ror
imul
jmp
cmp
aam
jge
sbb
sbb
sbb
dec
fscale
pop
pusha
xchg
aaa
push
fnstcw
inc
adc
push
xchg
in
es
fimuls
mov
pop
pop
mov
popf
stos
xchg
add
fs
addr16
test
aam
push
adc
mov
jno
inc
xchg
push
dec
in
add
fwait
inc
out
add
sub
cwtl
mov
fisubl
pop
mov
sbb
rcrb
xlat
mov
stos
inc
inc
dec
mov
cwtl
and
mov
mov
and
sbb
or
cmc
mov
add
inc
push
repz
add
sub
push
lret
cmp
pop
aad
lea
mov
add
ja
jmp
int3
test
sahf
arpl
jmp
xchg
mov
and
rcl
xor
loopne
sub
mov
stos
pop
loope
inc
inc
dec
fsubrs
lcall
adc
subb
sbb
rcrb
xor
iret
inc
mov
pop
mov
jecxz
imul
dec
jnp
mov
jp
out
mov
in
mov
jp
push
bound
aas
mov
outsb
adc
cmp
pop
sbb
mov
scas
cwtl
aas
in
dec
lahf
add
inc
mov
pushf
or
out
enter
pop
cwtl
mov
jecxz
sub
push
loope
movsb
je
xor
adc
inc
inc
andb
loopne
pusha
add
cmpsl
js
mov
mov
aas
jecxz
cli
mov
mov
push
test
jb,pn
lea
xor
fsincos
mov
in
shrl
xchg
fists
jns
cmp
js
test
loope
in
push
xor
leave
pop
outsl
addr16
jnp
jae
cmpsl
push
test
sbb
ret
rclb
mov
push
dec
add
mov
cli
sbb
fcomps
test
cmp
or
int3
xchg
cmp
jge
xchg
mov
insb
push
and
jno
mov
frstor
sarl
inc
cwtl
xor
pop
mov
fiaddl
dec
daa
add
mov
leave
enter
aaa
mov
in
pop
xorl
pushf
clc
scas
and
leave
xchg
inc
mov
pop
mov
inc
adc
sbb
inc
pop
fdivrp
and
mov
aas
push
cmp
sbbl
ret
sub
sbb
add
xor
or
enter
out
cmp
in
fistpl
into
dec
cmc
shrb
mov
cmp
stos
mov
xor
push
inc
pop
fldcw
daa
into
test
cwtl
sbb
push
mov
adc
lret
arpl
test
ljmp
out
push
xlat
jns
aam
mov
or
xchg
leave
or
xor
push
shl
xor
mov
and
adc
fbstp
repnz
xor
push
cmc
add
insb
lods
fwait
out
in
stos
rolb
fistl
or
cmpsl
pusha
ja
and
adc
mov
out
lds
jo
inc
imul
fnsave
stos
jmp
loopne
mov
lret
inc
mov
push
ret
lahf
cmp
aaa
dec
adc
or
lahf
loop
pop
sbb
mov
fs
loop
sbb
push
aas
and
add
cld
imul
imul
inc
mov
pop
mov
mov
negb
aad
out
out
and
loop
cmc
in
rcrb
outsl
push
mov
inc
lea
stos
or
call
xchg
loopne
jge
divb
adc
jo
pop
jmp
mov
jmp
andb
xchg
pop
dec
push
mov
mov
xchg
int3
mov
roll
xlat
aaa
adc
enter
repz
lock
sti
or
inc
mov
mov
xchg
push
xchg
gs
stos
std
push
and
sub
jno
push
mov
and
inc
scas
or
cmp
ljmp
or
sub
ja
in
sahf
icebp
getsec
sbb
push
ror
rsm
add
xchg
lds
mulb
int
hlt
stos
inc
dec
jmp
idivb
fnstcw
push
pushf
push
mov
movsl
sub
daa
je
mov
jmp
or
sub
out
pop
xor
sarl
inc
push
sbb
aas
add
or
aaa
cmp
mov
mov
lret
addr16
cmc
ret
icebp
lock
jp
dec
inc
cltd
push
cwtl
enter
enter
scas
mov
outsb
xchg
pushf
rcrb
xlat
add
das
das
cltd
jo
lea
mov
cmp
mov
adc
push
or
into
xor
outsb
xchg
scas
in
dec
int3
push
fstpt
mov
add
jmp
sti
cmp
stc
xor
icebp
dec
pop
lods
pop
in
cmpl
fsubrl
loopne
or
mov
scas
repz
and
xor
incb
lret
fwait
dec
je
insb
das
in
pop
and
dec
test
scas
leave
cmp
pop
in
imul
aaa
or
pop
ds
in
xor
mov
shrl
dec
adc
into
xor
addb
adc
aas
adc
jne
push
mov
int3
insb
xor
call
scas
fsubr
jne
ficoml
cld
jmp
pop
sti
daa
mov
fsts
cmp
or
pop
mov
push
fistpl
push
mov
std
loope
imul
rclb
pop
cmp
rolb
jecxz
cmc
mov
shrl
sti
xor
pusha
sub
nop
inc
movsl
mov
in
std
test
jge
cmp
out
jge
lahf
fisubrl
test
sbb
loopne
test
clc
mov
outsl
arpl
repz
mov
test
std
iret
repnz
lret
jns
hlt
mov
in
xor
or
cmp
test
aad
mov
and
xchg
inc
mov
in
mov
js
and
imul
shrb
cmp
fwait
addr16
sub
xor
fs
call
xor
xor
movsb
std
adc
stc
insl
sbb
cmp
add
test
dec
push
jns
rorl
int3
lahf
sbb
shll
dec
push
rorb
jo
xor
sti
push
les
adc
adc
xchg
in
pushf
das
in
or
ljmp
cs
insb
out
or
mov
out
xchg
cwtl
fnstenv
lahf
inc
fs
sti
mov
mov
adc
daa
ss
lods
cmpsl
mov
pushf
out
xchg
je
scas
mov
jge
adc
mov
ljmp
mov
mov
and
sbb
hlt
xchg
aam
mov
cwtl
xor
loope
or
cs
jno
jge
movsl
xchg
push
movsl
add
push
lret
mov
loop
jmp
dec
movsl
xchg
aaa
inc
mov
inc
pop
sub
sub
xchg
xor
mov
add
fsubl
aad
shrl
adc
xchg
push
cmpsl
scas
push
lods
cwtl
mov
test
faddl
jb
adc
sti
gs
pop
cmp
adc
adc
ret
dec
pop
repnz
roll
inc
popa
cltd
test
mov
faddp
fildl
sbb
mov
fwait
or
push
xor
sub
xchg
add
mov
dec
sahf
or
mov
add
push
and
outsl
andl
push
out
and
jp
inc
mov
pop
imul
sbb
es
lock
cwtl
xchg
lds
rcrb
cmp
push
shl
mov
lahf
mov
xor
push
jne
or
inc
mov
jne
loop
push
mov
inc
in
push
mov
imul
dec
and
mov
fcomp
addr16
mov
mov
sub
xor
push
outsb
add
data16
imul
es
je
pop
jnp
push
cmp
aam
sbb
in
gs
mov
into
cli
inc
mov
outsb
jne
emms
imul
and
add
outsb
stc
adc
mov
sbb
mov
repnz
shll
pop
ficomps
mov
subb
xchg
inc
lcall
sti
jmp
sub
in
jns
les
in
repnz
xchg
xchg
mov
fsub
and
sbb
std
mov
dec
jg
add
pop
ljmp
xor
push
adc
in
das
jg
leave
cld
pop
hlt
push
mov
cmp
pmaxub
in
mov
pusha
icebp
mov
pusha
pop
add
dec
int
sub
jecxz
jg
in
xor
and
mov
adc
add
push
leave
ret
fstl
mov
push
add
fisubrs
dec
popfw
test
push
movsb
mov
lahf
inc
fbstp
lea
aam
loopne
jge
push
dec
loope
clc
sub
mov
cwtl
sbb
fwait
mov
imul
out
in
add
jle
xchg
fildll
cmc
adc
pushf
dec
lds
jl
inc
push
out
push
xchg
lds
arpl
jnp
call
imul
scas
iret
xchg
fsubr
cmp
scas
mov
out
sub
stos
or
or
adc
lods
or
stos
scas
lahf
push
lret
in
scas
add
ret
stos
arpl
lea
pop
dec
lcall
fcmovnu
jg
or
push
inc
cmp
or
shlb
sarl
mov
xor
sarb
imul
sub
scas
jbe
sti
daa
jae
xchg
daa
or
xor
inc
icebp
fdiv
test
sbb
testl
mov
call
jns
xchg
test
jb
je
mov
dec
push
movsb
lods
xchg
jbe
repz
out
pop
xchg
sub
mov
addr16
inc
aaa
lahf
clc
es
stos
push
mov
mov
stos
xchg
mov
fistps
leave
lea
lcall
add
aas
add
iret
lea
testl
push
in
enter
mov
repnz
push
mov
xchg
and
jno
jl
pop
mov
cmp
repnz
xor
or
jg
cmp
inc
addr16
mov
xor
loope
es
xchg
and
or
bound
addr16
in
int
dec
daa
hlt
mov
push
pop
jl
inc
mov
xchg
xorl
xor
mov
gs
es
adc
outsl
push
jmp
push
xor
push
scas
scas
sbb
pop
or
hlt
sub
pop
sahf
in
jb
loope
dec
movsb
out
lea
push
add
cmp
mov
push
push
push
or
mov
popf
sub
cmp
in
mov
insb
out
cmp
vpaddsb
xchg
pop
mov
sbb
or
mov
enter
jnp
cwtl
inc
mov
mov
push
es
jns
jb
sbb
mov
pop
test
or
aaa
pop
adc
outsb
scas
jge
jae
js
jb
dec
inc
pop
dec
cmc
scas
shrl
push
xchg
test
movsl
lock
and
adc
fdivrp
jo
xor
dec
inc
mov
cltd
jnp
mov
xchg
sub
mov
stos
push
lock
jecxz
mov
in
repz
jns
cmpsb
adc
aas
sub
cmp
cmpsl
aam
jmp
mov
leave
mov
push
sub
out
or
xchg
adc
imul
mov
cwtl
dec
rolb
pop
loopne
js
cmp
inc
push
xchg
pop
insb
popa
push
pop
jns
cmp
xchg
icebp
mov
jo
bound
xor
sub
cld
loope
inc
pop
xchg
ds
sub
mov
mov
cmc
pushf
movsl
mov
or
mov
test
mov
popl
hlt
leave
mov
mov
clc
push
mov
das
jg
or
mov
mov
xchg
pop
jmp
aad
mov
mov
imul
add
jae
mov
inc
cld
add
xor
scas
push
pushf
rcr
cmpsl
mov
cmp
sarb
arpl
das
icebp
mov
rol
pusha
jae
ja
cmp
inc
in
pop
je
add
rorb
in
adc
loope
inc
cld
jle
imul
inc
mov
out
xlat
in
ja
add
mov
or
sbbb
negb
mov
inc
flds
mov
pop
cmp
sbb
xchg
xchg
daa
mov
pop
pop
aam
fnsave
mov
fwait
stc
dec
or
jecxz
push
pop
mov
jae
inc
fstl
mov
mov
mov
xor
push
inc
mov
pop
sbb
push
or
mov
adc
xchg
in
in
pop
jne
xor
mov
pop
stc
mov
icebp
divps
cs
icebp
xchg
mov
pop
add
sub
lods
sub
mov
lods
je
test
addb
pop
or
pop
inc
mov
es
imul
test
pop
dec
fldcw
xchg
dec
mov
jb
and
xor
sbb
pop
loop
stc
or
ret
xor
jge
jbe
lret
mov
pusha
push
lahf
repz
lcall
cmp
gs
lods
leave
test
pop
sti
adc
cmc
aad
dec
xchg
sub
inc
aam
sbb
lods
mov
inc
add
bound
mov
pop
negl
daa
dec
aaa
and
xlat
and
mov
mov
sub
jge
dec
dec
jp
subb
and
sbb
popl
hlt
ja
lret
jnp
sbb
lea
je
movsb
cltd
nop
push
mov
in
sbb
lcall
loopne
mov
ds
out
push
mov
add
enter
sub
and
addr16
inc
or
sub
fnsave
dec
andl
lds
dec
popa
adc
cmp
aaa
mov
inc
push
gs
imul
out
xchg
sbb
lock
cmp
pop
push
cmp
mov
xchg
scas
inc
out
enter
and
cwtl
cmovo
fstps
pop
sbb
fstpt
test
pop
dec
inc
or
xor
sub
adc
out
fdivr
movsb
lds
sahf
incb
and
lcall
cmp
mov
xchg
mov
sub
insl
xchg
fstpl
mov
cmp
xor
fldcw
push
xor
cs
fwait
jbe
jno
pop
push
add
and
mov
cs
dec
call
sarl
in
enter
jbe
fwait
xchg
mov
lahf
dec
pop
stc
jmp
dec
inc
sub
lret
dec
or
push
lretw
repnz
xchg
test
adc
lods
or
xor
rolb
xor
sahf
out
std
cmc
mov
lahf
jnp
iret
int
and
mov
lds
inc
and
dec
dec
push
pop
mov
scas
or
xchg
adc
ret
jge
xor
dec
jno
sbb
adc
pop
or
test
inc
cltd
xchg
shlb
sbb
mov
lahf
test
imul
push
repnz
sbb
add
gs
in
lret
cmp
scas
out
jbe
xor
stos
push
dec
movsl
pusha
test
vmovdqu
xor
jle
iret
and
mov
cmp
stos
jp
insl
call
mov
mov
aas
mov
inc
push
xchg
jecxz
sbb
push
inc
daa
clc
rcr
xor
sub
loope
jmp
shl
loopne
pop
mov
dec
pop
add
outsb
push
dec
inc
xlat
lret
inc
cld
loopne
push
dec
cwtl
add
push
arpl
into
mov
sub
pop
cvttps2pi
imul
cmp
fucomip
xchg
push
xchg
arpl
jb
sti
stos
xchg
mov
lds
xchg
pop
stos
daa
jb
mov
adc
lds
and
js
out
cmc
lock
bound
add
stos
mov
ret
and
mov
push
jle
add
outsl
loop
gs
in
jge
pusha
das
or
enter
mov
decb
sub
jbe
or
sub
outsb
loop
pop
add
pushf
stos
add
les
shlb
jge
add
mov
xor
enter
mov
xor
adc
sbb
mov
loopne
dec
cmp
mov
ret
test
xchg
mov
lahf
fwait
cli
and
out
shll
adc
or
pop
and
jp
add
add
in
sti
negb
jmp
lcall
pop
iret
and
adc
in
jl
jns
or
mov
inc
pop
xlat
xor
adc
es
outsb
cli
and
add
xor
or
inc
out
mov
mov
xorb
scas
add
sub
sahf
add
dec
push
negl
out
ja
xor
jge
inc
aad
aam
mov
loope
das
ds
lods
and
in
out
jo
fdiv
mov
mov
mov
sub
outsl
ja
fnstsw
in
test
mov
mov
lock
in
cld
sbb
sub
jno
jg
sbb
pop
lock
nop
sub
xchg
dec
adc
push
or
shrb
in
dec
movsb
or
cmp
sbb
or
insl
pop
jp
adc
sahf
dec
cmpb
cmp
push
jge
mov
negl
xchg
out
mov
jae
sbb
cmpsl
pop
cli
xor
cmpsb
mov
into
cmc
xchg
rclb
jge
popf
out
je
stos
lds
movl
or
mov
sbb
pop
aam
jg
std
loopne
sub
inc
jns
test
mov
popf
out
nop
lock
mov
jg
insb
add
jl
push
sub
hlt
mov
lahf
arpl
inc
dec
jmp
inc
lds
dec
test
dec
out
or
pop
inc
lods
and
xchg
mov
jge
mov
xchg
outsl
loop
cli
cmpsb
jb
pop
jbe
mov
mov
loop
shrb
dec
lods
mov
ja
imul
loope
pop
cmp
jo
sub
stc
lcall
fistps
jle
int3
xlat
pop
cmc
sbb
js
cwtl
enter
les
ficoms
mov
mov
pop
arpl
mov
dec
fisubrl
pop
xchg
push
cld
sbb
push
cmc
inc
cltd
test
push
mov
mov
inc
shrl
fwait
mov
and
add
cwtl
cmp
sbb
pusha
lock
mov
pop
mov
out
insb
dec
movsb
mov
inc
aad
aam
enter
psubd
arpl
cmp
inc
cltd
idivb
mov
or
xchg
push
shlb
cmpsl
inc
mov
and
mov
nopl
mov
sub
and
xor
push
cli
cli
jmp
fadds
stos
leave
push
mov
cwtl
xor
cmpsl
jl
pop
adc
mov
mov
in
lock
mul
pop
adcl
jmp
inc
test
mov
mov
loope
pusha
ljmpw
shr
push
dec
inc
cmp
mov
add
in
ljmp
int3
and
dec
adc
xchg
je
insl
xlat
rcll
cmpsl
or
in
cs
call
test
cmp
push
enter
sbb
popl
stos
das
jo
outsl
mov
rorb
sub
add
mov
scas
mov
jp
test
mov
xor
repz
and
es
cmp
arpl
xchg
mov
xor
xor
adc
adc
mov
pop
mov
xor
dec
mov
int3
stc
repnz
and
cmp
cmp
xor
mov
lods
rclb
imul
pop
sbb
cmc
sbb
xchg
dec
and
cmp
fisttpll
repnz
ja
jno
xchg
rorb
lret
or
adc
mov
mov
xor
xchg
das
cmpb
and
and
test
push
jnp
lock
loop
mov
dec
les
divb
lods
push
dec
test
push
mov
hlt
pushf
fcmovbe
bound
lret
pop
xor
das
or
or
out
xchg
jg
add
dec
adc
sbb
test
adc
push
cmp
or
add
jmp
xor
test
aas
jb
ljmp
mov
call
xor
jge
jb
sahf
mov
popf
out
enter
or
cld
out
jb
lcall
sbb
pop
mov
je
jbe
xchg
xor
sbb
test
mov
icebp
jae
dec
inc
imul
icebp
push
jg
fldt
cli
cmp
xchg
nop
lret
jnp
fadd
mov
ja
or
inc
jl
je
jnp
in
cmp
enter
call
push
add
sub
pushf
xchg
addr16
xchg
ljmp
test
push
and
push
mov
aad
push
addr16
cmp
fs
movsl
out
sub
sahf
add
in
xchg
mov
mov
add
inc
xor
dec
fistpl
sub
test
dec
push
mov
pop
cmp
inc
sub
shll
aaa
and
nop
mov
jnp
adc
pop
xor
mov
andl
and
clc
rcr
loope
inc
mov
jp
and
push
lods
insb
js
rcll
call
jnp
sti
dec
addr16
sbb
add
mov
cmc
mov
and
out
sub
push
mov
outsb
fnsave
mov
cmpsl
in
arpl
jp
xchg
rol
int3
inc
movsb
adcl
cld
and
inc
adc
push
jl
dec
push
and
mov
fs
jecxz
aaa
movsb
dec
pushf
repz
sbb
push
aaa
jmp
jo
dec
subb
cmc
push
inc
std
lods
xorl
shll
fxch
pop
stc
hlt
test
push
pop
jmp
jno
mov
aaa
xchg
aam
inc
jp
lret
dec
or
repz
mov
add
jb
mov
push
inc
arpl
dec
stos
cmp
jge
xchg
shl
sbb
repz
ret
pop
stc
sar
push
mov
shrl
int3
int3
mov
and
subl
pushf
add
jecxz
mov
out
subl
xlat
stos
sti
pushf
jb
sti
pop
add
ds
orb
in
pop
or
inc
jns
pop
pop
mov
es
push
push
popf
int3
data16
sub
out
mov
stos
cmp
idiv
adc
mov
mov
push
pop
and
push
adc
int
sarl
scas
les
fbld
xchg
test
sbb
divl
mov
pop
cmpsb
iret
jno
xchg
call
pushf
insb
mov
andl
mov
in
pop
adc
add
cmp
add
mov
xchg
dec
gs
cmpsl
jmp
pushf
cmpsl
fs
sbb
movsl
cmp
les
mov
call
movsb
pop
nop
fcomi
pop
adc
cmp
sti
lock
lret
or
rorb
adc
mov
adc
and
aad
sub
dec
jp
js
pop
nop
jno
inc
lret
cmp
lods
shl
push
pusha
pop
sub
inc
adc
and
and
cmp
movl
mov
add
sti
xchg
inc
nop
inc
arpl
aaa
in
pop
adc
cmp
push
add
add
out
inc
addr16
add
dec
dec
mov
and
mov
pusha
mov
and
pushf
xlat
xchg
sahf
dec
leave
push
pop
outsb
mov
mov
fbld
addb
les
dec
cltd
cmpsb
lahf
movsl
sbb
lcall
call
xchg
stc
push
shlb
mov
sub
loop
mov
int
mov
jg
out
inc
popa
lods
fcmovnu
push
sbb
loop
mov
and
sub
aad
out
adc
mov
adc
fwait
clc
cwtl
mov
push
outsl
dec
cmc
ja
out
lea
jp
and
test
xor
shl
scas
mov
push
cmova
sbb
push
ds
jns
popf
in
jp
jne
popa
enter
sti
std
imul
lock
call
dec
adc
fwait
sarb
adc
pop
mov
fdivl
dec
and
adc
data16
repnz
push
sti
shll
outsl
ss
xchg
dec
test
adc
mov
lods
out
sbb
and
roll
dec
fists
pop
enter
inc
xchg
mov
fwait
jmp
add
aaa
dec
cld
jl
dec
iret
popf
inc
outsl
adcl
in
mov
lock
sub
dec
leave
lahf
inc
leave
in
push
or
dec
fidivs
and
test
lods
adc
pop
push
in
insl
dec
xchg
ret
or
imul
xor
jp
adc
sarl
xor
sbb
hlt
mov
adc
and
movsb
lds
push
sub
dec
mov
into
sbb
push
push
fs
or
mov
cwtl
mov
imul
xchg
jmp
pop
jb
push
mov
mov
push
dec
std
inc
xchg
push
xchg
pusha
ficompl
arpl
sbb
cmp
fcomp
push
cltd
xor
mov
add
xchg
mov
cmp
jmp
jnp
push
push
cmp
jns
movsb
iret
sub
shll
push
data16
ds
mov
xchg
xchg
xchg
dec
mov
xchg
outsl
leave
push
push
xor
jmp
or
mov
or
mov
lret
testb
or
and
mov
or
cmpsl
cmp
cmp
pusha
loope
lcall
insb
cltd
jne
inc
and
mov
cmpsb
iret
fdivp
cmp
or
insl
jae
mov
in
dec
mov
lea
or
mov
pop
shll
xor
xchg
sub
in
mov
cmpsb
aam
ret
aas
inc
xchg
aam
mov
push
sarl
int3
in
mov
and
loopne
add
xor
sbb
and
sub
jae
lret
loope
inc
dec
inc
insl
inc
repnz
mov
mov
xchg
popf
and
nop
ss
mov
rcrl
xlat
inc
dec
or
cmp
loop
inc
in
out
repnz
les
cltd
xchg
xor
push
xchg
pop
outsl
mov
adc
mov
sbb
popf
stos
popa
in
xchg
scas
hlt
mov
xlat
pop
call
mov
lret
out
iret
mov
sub
sub
popf
mov
mov
pop
incl
jl
movsb
addr16
out
lahf
imul
adc
daa
mov
nop
enter
ret
push
dec
stos
ffreep
cwtl
mov
jle
xor
ret
icebp
jne
mov
movsb
xchg
xchg
sub
and
mov
enter
lock
mov
shrl
leave
fwait
imul
out
push
aam
fadds
sbb
inc
aas
pop
movsl
or
sub
push
rolb
push
pop
daa
stc
adc
jle
inc
sub
aam
sub
or
jns
sahf
jmp
ljmp
xchg
sub
xchg
push
out
data16
sub
jae
push
inc
xchg
test
imul
adc
in
or
enter
test
cmpsl
inc
mov
gs
mov
test
push
add
cmp
cwtl
jae
jmp
repnz
sub
cs
mov
test
dec
lcall
neg
mov
xchg
lahf
or
cmp
das
and
add
mov
push
int
jp
addr16
scas
push
add
pop
imul
addl
mov
pop
add
jp
xor
cltd
aam
pop
test
push
adc
sbb
mov
mov
xchg
and
fnstcw
test
stc
addb
es
push
mov
jp
das
sbb
sub
mov
mov
ss
pusha
mov
jg
scas
lods
dec
cmp
out
loope
dec
imul
fcoms
iret
mov
inc
inc
decb
adc
pop
scas
push
int3
repnz
js
xor
fdivl
mov
fwait
aaa
nop
push
pop
adc
inc
mov
pop
adc
xchg
out
sub
pop
movsb
and
lds
outsl
test
inc
lds
push
je
or
mov
mov
mov
mov
push
mov
aaa
lcall
cmp
jle
test
mov
pop
fnstsw
mov
adc
cmp
mov
dec
pop
mov
insl
mov
aad
fucomp
xor
lods
fsubl
stc
sub
gs
cmp
jmp
xchg
in
incl
test
push
sbbb
sub
jp
dec
jbe
loope
aaa
inc
out
call
and
push
dec
sub
mov
lods
cmp
rclb
dec
push
aad
stc
outsl
jp
aas
in
out
clc
cld
iret
jp
push
and
movsb
cmp
movsl
sti
dec
icebp
lods
nop
inc
mov
imul
xchg
cmp
scas
rcrb
and
int3
dec
popa
test
lret
out
cbtw
mov
or
sbb
shll
jp
scas
in
add
data16
mov
cmc
jp
push
mov
scas
hlt
pop
in
pop
sub
cltd
and
mov
test
lea
cmpsb
xor
movsl
push
aaa
dec
cmpl
mov
out
xchg
lret
sub
shrl
pop
mov
fisubrs
add
mov
je
mov
in
icebp
int3
ret
aam
mov
test
jns
cmpsl
or
movsb
and
dec
stc
xor
xor
cmpsb
xchg
mov
jle
stc
mov
inc
aam
out
push
lret
ss
sub
sbb
inc
aam
aaa
and
mov
jno
adc
and
mov
lods
fmuls
push
pop
cmc
mov
sbb
adc
dec
into
dec
fnsave
repz
or
and
rclb
mov
xor
mov
stos
pusha
jns
mov
ds
cmp
push
movsl
xor
subl
lods
insb
pop
ret
xchg
adc
sub
hlt
loop
adc
xchg
cmpsb
in
cmpb
mov
jns
sbb
cltd
or
addb
sbb
das
xor
icebp
pop
cmp
out
xlat
lods
daa
lock
jns
gs
push
dec
mov
push
dec
out
xchg
mov
popa
mov
je
inc
sahf
cmpsb
dec
insl
lods
mov
pop
inc
in
js
xor
lcall
lret
jmp
movsb
cmp
ss
out
aaa
and
clc
jae
or
enter
ficoms
outsl
cmp
xchg
sub
pop
leave
cmp
lods
loop
insl
sbb
fcmovne
push
sbb
outsb
jnp
out
popf
insb
jns
push
jne
clc
mov
inc
fs
lcall
mov
ja
push
sub
xchg
loop
nop
mov
ljmp
jne
popa
iret
rol
sbb
mov
add
ds
lcall
xchg
adcb
shlb
stos
mov
inc
xchg
sub
mov
pop
mov
adc
push
pop
out
and
lock
movsb
loopne
push
or
sti
popa
ds
shlb
imul
pop
sti
inc
sbb
adc
push
gs
pop
mul
cltd
bound
pop
xor
pushf
outsl
int
and
jle
rcll
and
jge
mov
js
pop
jmp
mov
adc
sahf
and
cmp
xchg
cmp
inc
test
ds
adc
cmp
add
inc
ljmp
ljmp
stc
jns
movsb
test
ffreep
dec
mov
imul
stc
jns
and
rorl
pusha
push
imul
lcall
mov
lret
xchg
push
in
pushf
loop
push
xor
flds
push
sbb
cmp
outsb
ret
roll
popa
outsl
push
daa
daa
dec
insb
adc
jo
pop
adc
mov
xlat
dec
pop
sbb
jg
mov
pop
pop
scas
enter
fld
lret
and
mov
cltd
ret
inc
lret
adc
cmp
and
mov
cmovle
push
testb
adc
inc
sarb
mov
cwtl
and
jb
andl
sub
jmp
stos
xchg
xor
lock
push
loopne
lret
push
ffreep
insl
add
pop
push
js
cmp
or
fdivrs
pop
subl
das
or
lock
xor
cmp
into
dec
aas
mov
jp
xor
cvttps2pi
inc
and
push
pop
sub
daa
cli
mov
mov
xlat
mov
ljmp
movsb
xor
loope
jle
aad
fldenv
xchg
mov
xor
xor
and
ret
adc
mov
rcrl
sbb
fs
pop
out
jmp
jnp
mov
jecxz
mov
jae
hlt
outsb
and
stos
in
je
jbe
hlt
dec
int
sbb
inc
das
push
in
push
mov
jge
dec
subl
lret
das
addl
mov
mov
pop
inc
gs
mov
push
xor
data16
mov
push
mov
mov
mov
imul
dec
push
push
lock
jo
add
xor
mov
dec
xchg
inc
jle
inc
out
sbbb
test
dec
into
inc
add
push
xchg
adc
iret
gs
inc
scas
push
call
pminsw
pop
sbb
loop
filds
repz
pop
clc
xor
repz
je
scas
mov
sbb
adc
push
shrb
mov
pop
lcall
pop
xorl
dec
aam
adc
pop
mov
in
push
inc
sub
in
mov
xorl
jecxz
cmp
smsw
insb
iret
in
dec
gs
fsts
out
xlat
icebp
out
nop
clc
ja
push
iret
dec
mov
insb
push
jecxz
adc
add
xchg
jmp
mov
icebp
or
dec
popa
leave
push
or
fnstenv
adc
and
rorb
test
pop
mov
pop
jnp
push
clc
mov
mov
adc
and
movsb
and
int3
cld
push
push
and
insb
outsb
jnp
mov
pop
add
lds
inc
loop
or
pushf
jb
push
sbb
iret
jmp
ret
xor
les
push
aam
dec
pop
pushf
push
add
adc
idivb
mov
xor
into
idivl
dec
pop
jne
xchg
inc
out
leave
or
xlat
or
or
pop
push
ss
dec
rol
adc
xor
push
xor
sbb
add
jl
arpl
cmp
sbb
sub
xor
sbbb
xchg
mov
mov
cmp
flds
xor
fisubs
fsubrl
xchg
sbb
pushf
or
mov
pop
jbe
add
add
mov
push
or
pop
enter
fisttps
sahf
push
sub
mov
clc
outsb
xchg
fptan
jmp
mov
cmc
sbb
xlat
gs
xchg
mov
pusha
rcrb
test
es
cmpsb
mov
lds
mov
lahf
or
xchg
loope
test
jne
add
pushf
mov
out
jge
xor
ja
and
lds
jmp
add
ret
arpl
inc
cmpsl
push
sub
mov
subl
rorb
sub
dec
jge
xor
repnz
inc
testl
or
mov
js
test
cs
dec
aam
sub
jle
imul
cs
and
sub
test
imul
sub
xchg
ljmp
jle
out
adc
hlt
jmp
pop
dec
daa
cmp
psubw
cld
in
movsl
arpl
sub
mov
fdiv
jg
cltd
push
or
adc
mov
not
mov
test
cld
sbb
or
ja
lcall
call
mov
dec
fcmovu
sub
pop
scas
stos
inc
mov
imul
cmp
mov
dec
nop
mov
lret
fimuls
ss
pop
cltd
pop
loopne
fcoms
mov
idivl
and
add
push
xlat
pop
mov
add
test
xchg
out
inc
loop
push
cmp
loopne
inc
mov
dec
sahf
add
fwait
les
neg
rcr
sub
je
jo
jecxz
stos
in
fisttpl
fsubs
cmp
insl
jle
cmp
push
adc
cwtd
push
pushf
pop
push
push
add
push
stos
xor
out
jns
pop
xlat
mov
xor
sbb
popf
dec
sub
push
or
adc
clc
sbb
jo
mov
pop
lods
cld
add
dec
sub
nop
push
mov
xor
cwtl
dec
and
mov
mov
mov
push
fdivs
aaa
push
mov
jnp
xchg
and
mov
mov
sbb
pusha
sub
daa
int3
test
sub
and
ficompl
fdivrs
mov
sbb
test
jbe
push
and
call
mov
dec
lret
in
mov
fsubrl
sbb
in
jo
in
mov
aas
ds
mov
mov
ret
pop
or
arpl
rolb
fbld
push
stos
dec
cltd
and
mov
mov
int3
mov
movsl
xor
push
lds
sti
add
inc
jl
push
jg
outsb
lods
mov
and
mov
js
mov
gs
notb
dec
movsl
adc
stos
push
in
pop
or
cmp
loop
xchg
aas
sbb
fcomi
packssdw
adc
mov
pop
push
sub
mov
popf
mov
pop
cmp
mov
movaps
mov
ret
in
dec
pop
cli
inc
xchg
push
std
sbb
push
sbb
cmp
hlt
scas
cmc
add
test
ds
outsb
and
fistpl
and
popa
test
flds
icebp
mov
int3
ljmp
xchg
lret
jb
cmp
ss
popa
out
or
lds
push
movsb
fstl
iret
sarb
or
sub
shlb
fsubr
lcall
bound
stc
bound
ljmp
or
mov
repnz
mov
fildll
jnp
add
in
sub
add
sub
not
push
out
in
dec
adc
push
jno
jge
leave
test
rclb
mov
jp
ss
xchg
lea
jnp
insl
adc
cmp
fistpl
iret
test
mov
ljmp
imul
scas
enter
mov
test
enter
sub
jmp
mov
insb
sub
clc
xor
iret
xor
xchg
push
hlt
sub
lret
xchg
fidivl
loopne
sub
xor
mov
stos
jne
adc
push
ja
popf
sub
nop
jns
es
notl
inc
lret
jmp
out
in
mov
add
push
sub
call
lret
jge
imul
adc
fwait
cmp
fs
cs
sbb
jl
jle
fldt
cmp
pop
imulb
sbb
fneni(8087
inc
lods
jns
adc
mov
outsb
iret
jge
int
add
or
sbb
cltd
stos
xor
int
xchg
das
cld
jp
fsubs
mov
mov
inc
dec
das
and
push
loop
hlt
fcomp
aad
fstpl
stc
or
stos
les
jecxz
sub
xor
les
or
inc
mov
icebp
fisubl
pop
cltd
mov
xor
aad
lret
or
jno
nop
hlt
inc
repz
pop
roll
jg
lock
std
js
sbb
aam
sbb
xlat
inc
xchg
outsb
fmuls
lods
stos
inc
xor
cld
call
jl
push
push
push
or
and
popa
jmp
repz
jecxz
clc
roll
lock
outsl
dec
push
fistpll
in
cmp
jne
push
ss
in
fcmovnbe
mov
loope
mov
sbbl
dec
lods
andl
cld
push
dec
mov
fistpl
mov
and
inc
cmpsb
data16
mov
test
addl
inc
or
shlb
lahf
hlt
push
scas
push
int
popa
pusha
cs
test
je
stos
mov
imul
pusha
lea
cmp
jno
pop
orl
leave
addr16
cwtl
pushf
fmuls
adc
movsb
call
adc
sbb
push
sbbb
jne
cmp
mov
sub
mov
jmp
add
mov
loop
add
mov
imul
inc
push
xchg
inc
test
mov
cmpsl
les
cmpsl
fisubl
sbb
cmp
xchg
cmp
jbe
mov
xor
nop
lcall
and
jp,pn
enter
or
je
addr16
fistps
xchg
cs
push
jecxz
push
push
nop
or
outsb
and
sub
in
and
sub
add
filds
lea
adc
add
outsb
imul
or
scas
add
fwait
push
popf
ret
xchg
call
fistl
daa
pop
jae
sbb
enter
mov
sub
iret
cmpsb
ficoms
call
mov
lock
mov
addr16
xor
and
or
int3
movsb
jno
int
arpl
or
adc
adc
fdivp
pop
push
aas
inc
jle
push
xorl
les
push
neg
xchg
lret
mov
divl
push
in
pop
fstl
dec
jg
ja
jns
shrb
int
sar
mov
test
loopne
push
in
push
sbbl
adc
popf
fisubs
clc
in
pop
jecxz
push
adc
dec
mov
push
aaa
lret
lahf
fisttpll
clc
pextrw
pop
dec
lret
jle
xor
shll
add
xor
mov
mov
add
jo
pusha
fs
sbb
stc
add
cmp
testb
cwtl
pop
cmp
add
dec
add
rcrl
sub
in
push
std
cmc
xor
jp
dec
or
sub
or
adc
dec
adc
ja
mov
daa
mov
sti
sub
mov
cwtl
mov
mov
dec
pop
pop
pop
xor
and
sbb
aad
jae
int
dec
movb
aas
ss
inc
sbb
jb
shlb
mov
pop
es
jb
push
xor
mov
cltd
dec
dec
fcompl
fucom
mov
testl
aad
test
xor
cmp
aam
inc
sbb
inc
into
mov
fwait
xor
pop
cld
stos
push
or
cltd
enter
cs
or
mov
push
jecxz
hlt
aaa
imul
je
fcomps
add
shlb
pop
data16
scas
add
mov
pop
push
push
xor
loop
mov
stos
jge
icebp
sbb
jbe
xor
call
jl
mov
shll
stc
addr16
orl
push
imul
cwtl
lods
pop
jnp
push
mov
les
int3
xor
jo
sub
xor
pop
pusha
or
lret
xor
jmp
mov
hlt
mov
addl
or
test
sub
xor
repz
fs
mulb
xchg
shrb
xchg
sbb
sbb
in
pop
stos
dec
cmp
sub
aam
mov
stc
mov
adc
enter
lahf
push
pop
push
imul
aad
xor
ss
jae
and
out
loopne
test
std
int3
test
test
test
sarb
cmc
movsl
or
pop
jmp
xor
sbb
mov
push
mov
jnp
out
sbb
inc
xor
mov
inc
jbe
xchg
mov
and
in
sar
and
mov
fmuls
stc
mov
push
xlat
or
mov
popf
test
imul
xchg
sahf
lds
inc
leave
ror
mov
xor
insl
scas
sbb
leave
jnp
xor
pop
jg
or
lock
into
jecxz
jbe
dec
lret
leave
inc
mov
add
nop
outsl
ljmp
adc
push
mov
insb
daa
out
repnz
xor
fucom
mov
mov
lds
fwait
test
dec
lret
dec
out
push
xchg
mov
push
push
push
into
or
pushf
sub
push
xor
rcrb
dec
out
mov
mov
test
cltd
into
mov
mov
add
mov
mov
fdivr
insb
dec
pop
push
mov
lods
cmc
mov
out
adcb
hlt
icebp
xor
test
sbb
and
test
push
mov
lds
dec
or
push
add
sbb
ficompl
pusha
int3
mov
faddl
or
std
xchg
or
rcrl
jb
xchg
popa
sub
aad
mov
add
cmc
insb
jecxz
push
pop
lods
mov
fisubrl
and
out
dec
ds
outsb
sub
leave
push
xor
cmp
int3
sub
jmp
addb
int3
aad
insb
adc
mov
mov
jp
bound
push
push
xlat
stos
scas
sub
sarl
stc
sub
decb
loopne
push
jle
mov
sahf
push
or
cmc
inc
jnp
cmp
or
aaa
xchg
fistpll
enter
outsb
inc
aam
inc
and
fistpl
push
pop
xchg
cltd
fcoms
dec
pop
nopl
aam
dec
mov
mov
ret
out
ss
sub
dec
cmp
dec
popa
fbstp
jecxz
sub
dec
in
repnz
mulb
inc
and
inc
ljmp
jnp
pop
push
ja
adc
cmc
inc
pand
rcr
insl
aaa
nop
xchg
push
cmp
jmp
mov
xchg
insl
in
punpckhbw
jns
dec
outsl
push
loopne
aad
xchg
sbb
rcll
pushf
add
pop
mov
sti
or
pop
or
jg
or
into
pop
lret
xorl
enter
lds
xchg
add
xor
negb
cltd
jne
lock
int
sbb
int3
jno
test
and
mov
and
xchg
pop
add
fldt
pop
lret
hlt
rolb
scas
dec
add
mov
pop
jmp
std
divl
and
mov
adcl
adc
insl
ret
mov
dec
arpl
pop
gs
call
mov
or
daa
add
aad
xchg
mov
inc
cmpsb
lahf
imul
mov
rorb
rclb
nop
pop
xchg
out
sbb
jecxz
outsb
les
jg
xchg
mov
cs
xor
addr16
xchg
lea
cli
pushf
sbb
mov
cmp
dec
sub
cld
dec
shr
sti
jg
fisubrl
test
hlt
sub
movsl
adc
pushf
dec
xor
inc
jb
jns
mov
movsl
xchg
xor
orl
ss
lods
fnstenv
pop
xor
daa
std
std
mov
xchg
xor
mov
adcb
jne
arpl
mov
or
arpl
aad
fidivl
mov
inc
or
arpl
or
mov
mov
dec
jo
mov
xchg
clc
cmp
loop
pop
xchg
loopne
mov
cmp
shll
movsl
ret
in
and
mov
in
adc
mov
adc
fcomip
ljmp
and
jg
insl
pop
cmc
inc
jae
dec
mov
sti
jp
insb
ss
out
and
push
push
test
sbb
loope
jle
movsl
lea
rolb
jecxz
repnz
repnz
dec
movsl
pop
in
mov
outsb
dec
jb
dec
xchg
push
xor
pop
mov
mov
jo
icebp
sti
push
nop
test
jle
xor
and
pop
outsb
push
outsb
ja
dec
sarb
pop
lret
dec
xchg
gs
push
push
mov
jnp
lock
lods
lods
test
pop
jmp
ror
sbb
mov
popa
pop
mov
adc
in
cmp
cmp
js
addr16
dec
lahf
pusha
xor
inc
pushf
xchg
aas
cmp
xchg
orb
scas
mov
jnp
imul
lods
inc
mov
inc
push
icebp
jne
fldt
lret
pop
cmc
rcrb
int3
jecxz
sub
outsl
stc
xchg
loopne
mov
sbb
test
call
push
inc
and
leave
test
ret
mov
testb
sbb
push
push
mov
inc
or
data16
mov
push
dec
mov
mov
mov
sbb
cmp
out
out
add
lods
leave
dec
shlb
push
es
ja
inc
xchg
jbe
popa
jl
and
movsb
das
leave
les
loope
sub
mov
xchg
inc
mov
push
mov
cltd
push
aaa
clc
jnp
mov
fiadds
lret
cmp
mov
inc
and
aaa
mov
imul
xor
aad
enter
cmpsl
dec
shrb
ret
jmp
iret
mov
push
or
out
fbld
cs
sbb
xor
add
fs
and
aad
push
add
jo
subl
out
pop
add
addr16
mov
jb
popf
mov
cmp
add
ss
fnstenv
xor
setp
pop
out
xchg
mov
mov
cmpsl
fwait
push
xchg
xchg
inc
cmp
fildll
sub
sub
push
sbb
mov
sbb
aam
mov
inc
mov
lea
in
inc
unpckhps
xor
or
movsl
mov
arpl
bound
insb
pop
pop
jmp
inc
push
sahf
sarl
mov
popa
add
cmp
test
xor
dec
test
cmp
sahf
sub
cmp
xchg
mov
mov
movsl
mov
scas
dec
ds
or
cmp
cmp
fstpt
mov
jg
test
lds
shl
test
pop
ds
inc
js
xchg
jo
stos
mov
out
dec
fsubrl
and
adc
fbld
add
jbe
mov
lds
sbb
cltd
dec
mov
shl
or
xor
adc
lods
test
stos
lahf
jb
cwtl
or
dec
in
imul
lcall
orl
mov
addr16
test
clc
cmp
inc
fcmovne
outsb
pop
cs
push
cmp
lret
xchg
shll
pop
fnstsw
adc
enter
xchg
mov
fsubs
rcll
cmc
ljmp
sub
das
pop
mov
and
dec
test
mov
aas
shlb
push
out
sbb
enter
mov
in
lret
xchg
in
push
gs
out
pop
mov
mov
jb
add
inc
xchg
push
imul
out
push
jg
repz
jbe
push
xor
ljmp
test
adc
adc
inc
ret
add
or
popa
lock
pop
xor
inc
mov
mov
dec
arpl
cmp
mov
mov
dec
scas
lcall
pop
add
jno
fbld
dec
lret
imul
ds
jno
bound
and
sub
sbb
cltd
pop
dec
cld
rol
sub
data16
pop
iret
ret
inc
push
bound
push
mov
push
inc
nop
sarl
jo
loope
and
xor
dec
dec
inc
dec
dec
push
xor
and
adc
pop
ljmp
push
test
outsb
sub
test
adcb
or
fldenv
cs
jp
or
mov
jb
test
or
inc
mov
cltd
adc
call
out
cwtl
push
mov
shrb
sarl
pop
mov
adc
mov
jb
pusha
movsl
adc
test
shrl
jnp
and
fdivrs
bound
sbb
addl
insl
jnp
xor
movsl
sbb
nop
gs
imul
mov
cmp
fldenv
lds
jo
cmpsb
sbb
dec
mov
bound
push
andnps
insb
xchg
roll
adc
popa
mov
mov
and
push
adc
cmpsb
jno
je
mov
lret
iret
mov
sbb
hlt
stos
mov
mov
aad
daa
out
pop
add
sub
js
inc
arpl
lock
popf
inc
lea
fnstenv
cmp
arpl
mov
fimuls
inc
push
fcomps
xor
outsl
into
push
add
faddl
fisttpll
pop
xor
cmp
and
loopne
jge
sti
dec
push
call
or
push
dec
add
xchg
cmp
lahf
pop
inc
pop
xor
aas
test
mov
int
scas
call
rcr
mov
sbb
mov
cmc
fldenv
pop
mov
adc
rorl
sub
push
nop
mov
fwait
insl
test
mov
xchg
inc
in
nop
test
xchg
sub
stos
roll
mov
xchg
add
insb
and
mov
and
sbb
in
mov
insl
ljmp
dec
push
mov
call
pushf
jecxz
pop
xchg
sahf
add
jmp
cmpb
fucomi
aas
push
lret
jae
stos
mov
std
push
leave
lock
lods
decb
xchg
xor
lea
jle
popa
stc
pop
pop
inc
movsb
jne
mov
fcmovnbe
inc
enter
fcomps
call
and
mov
push
adc
gs
addr16
je
inc
cwtl
jns
outsb
jbe
mov
out
int3
push
pop
mov
outsl
xchg
jecxz
mov
fwait
scas
dec
mov
ja
insl
mov
add
xchg
jge
cmp
push
dec
jb
push
jbe
shrb
jg
push
dec
aam
inc
add
xchg
jbe
in
adc
mov
roll
out
push
sub
bound
fxam
mov
and
push
cmpsb
out
out
push
cld
je
cld
jl
mov
mov
and
test
ret
mov
jp
int3
popa
mov
jo
movsl
cmp
push
aam
sbb
loope
loop
xchg
lods
test
rol
das
insl
adc
mov
inc
cmpsl
xor
push
andb
aad
scas
shl
push
je
mov
pop
sbb
enter
dec
xor
mov
lea
adc
jb
jg
fisttpl
fsubl
dec
xchg
lahf
ret
sub
mov
push
sar
sarb
mov
jmp
mov
mov
repz
stos
fstps
or
sarl
lds
jbe
xchg
or
fisttps
filds
leave
data16
rorl
mov
or
int
insl
and
dec
push
pop
and
push
popf
movsl
inc
push
pop
mov
in
jmp
aaa
outsb
sbb
or
les
popa
lds
mov
js
jmp
sub
frstor
sbb
in
jns
cmp
in
jns
pop
data16
jp
jnp
bound
pop
popf
in
les
test
in
ret
jle
add
outsl
lods
scas
push
das
push
adc
lods
or
into
jecxz
jle
mov
icebp
jns
cwtl
xor
and
jmp
xchg
push
jns
loope
xchg
aam
xor
andb
push
sub
fisttps
cmp
push
push
filds
lahf
cmp
outsb
or
push
movsl
hlt
rcll
or
fildll
stos
push
jno
xchg
sub
add
and
lds
xchg
and
mov
loopne
sbb
dec
xchg
dec
test
lcall
jnp
adc
es
dec
jecxz
pop
aam
xorl
adc
mov
xor
xor
fwait
cld
mov
pop
aam
vpcmpd
xchg
nop
xor
mov
mov
jg
xchg
cmpsl
in
addr16
orl
cmp
push
bound
push
add
push
and
dec
mov
movsl
mov
dec
jecxz
jge
adc
dec
cli
xchg
dec
pop
jge
test
inc
out
fwait
pop
add
movsl
jl
mov
sbb
push
xor
mov
pop
mov
mov
add
cmp
xchg
aaa
inc
cli
jo
push
enter
push
inc
push
cmp
lds
jno
xchg
xorb
jne
stos
lods
sarb
inc
dec
cmp
and
jo
out
and
lret
movsb
sbb
xchg
push
inc
fbld
pop
or
jae
rorl
clc
cs
int
mov
pop
mov
jnp
push
mov
inc
push
add
rorl
adc
adc
fcomi
loopne
inc
popf
imul
ja
push
add
in
enter
test
testb
out
jmp
roll
rcrb
in
orl
push
inc
mov
loope
inc
les
push
sbb
mov
pusha
leave
dec
and
out
and
adc
xchg
xor
xchg
addr16
inc
dec
cltd
call
jmp
fisttpll
or
nop
sub
je
pop
insl
pusha
mov
inc
repnz
mov
push
mov
fldenv
ljmp
dec
jns
and
xchg
cwtl
ds
mov
aad
mov
mov
mov
out
xlat
ds
int3
imul
lcall
xchg
mov
lds
pop
and
andl
or
dec
daa
out
sbb
shll
loop
loope
mov
cmp
pop
mov
add
mov
test
jne
sub
mov
mov
out
addr16
jns
ret
jp
pop
adc
cmp
outsl
addl
mov
icebp
dec
pop
mov
rcrl
mov
mov
imul
repz
fisubrl
mov
cwtl
add
push
adc
outsl
jl
or
inc
test
std
in
aaa
xchg
xor
adc
xchg
sbb
scas
lret
andl
pusha
ret
add
mov
dec
mov
and
sbb
aaa
adc
add
out
ds
jae
mov
or
es
hlt
jge
jo
cmp
adc
xchg
in
sbb
pop
scas
xchg
test
inc
sub
cmpsl
cmc
dec
or
mov
xor
fisubrs
jnp
jb
or
dec
imul
mov
jecxz
or
push
cld
xor
in
lds
mov
mov
or
lret
mov
mov
in
aad
in
mov
xchg
add
mov
sbb
int3
lock
test
lahf
push
xor
mov
mov
xchg
add
iret
test
das
sbb
addb
aaa
mov
fwait
push
xchg
shlb
jmp
or
iret
mov
ja
push
adc
imul
inc
push
stc
push
lahf
fldl
cmp
out
push
mov
verw
mov
push
mov
dec
ljmp
mov
push
push
adc
push
inc
imul
jmp
push
pop
outsb
int3
mov
and
or
shll
pop
nop
test
xor
ds
movsb
jne
adc
mov
popa
jns
les
adc
jo
fs
out
and
xchg
mov
and
cmp
lcall
cmp
xchg
mov
stos
push
mov
daa
in
sahf
aam
jns
popa
ret
outsb
pop
mov
mov
ret
stos
in
adc
xchg
adc
add
jb
xchg
push
mov
push
rcrl
loop
cld
idivl
mov
mov
adc
call
mov
shlb
daa
sbb
xor
fcom
rolb
sub
cmc
push
sub
scas
lahf
sbb
mov
push
dec
loopne
loope
cmp
in
adc
push
jmp
xchg
ret
outsl
and
shll
mov
mov
add
std
mov
push
lods
xor
pop
or
push
or
jno
ret
xchg
data16
cmp
mov
lcall
jae
outsb
inc
js
es
jnp
push
sub
dec
ss
adc
imul
lcall
sub
mov
jp
xor
cmpsb
jl
scas
fptan
cmc
xor
nop
in
sub
jmp
add
xchg
cwtl
pushf
and
cmp
mov
xor
test
mov
je
in
mov
pusha
paddw
lods
push
repnz
stc
sbb
inc
add
fwait
jne
gs
and
sub
imul
mov
stos
mov
insb
xchg
add
test
test
cmpsl
mov
pop
jp
es
dec
dec
enter
jmp
repz
rcll
jle
js
cmpsl
sub
push
mov
fbld
or
mov
out
lret
mov
stos
sbb
push
xor
xor
cmp
ja
movsl
je
mov
add
mov
mov
inc
mov
lret
aaa
mov
and
sub
xchg
jge
aaa
sbb
lret
aam
arpl
push
sub
add
pop
in
xchg
jecxz
outsl
mov
test
lds
in
les
loop
notl
xor
pop
test
pop
lahf
jp
cmc
cmp
jg
fistps
push
out
fwait
jmp
add
scas
ret
cmp
movsl
movsl
mov
dec
leave
call
pop
scas
inc
or
outsl
pcmpgtw
orb
push
pop
pusha
add
cmp
scas
ja
iret
or
nop
adc
cld
repnz
jnp
dec
fsubrs
add
jno
std
mov
ret
scas
dec
in
adc
cmp
std
xchg
lock
sbb
push
push
lods
inc
push
int
mov
enter
ret
pop
sub
pushf
mov
or
outsb
cmp
sbb
cmp
xchg
xorl
adc
mov
push
jg
pop
jb
test
jnp
cmp
push
jl
cld
mov
cmp
sub
rolb
dec
sub
leave
and
cmp
xorl
xchg
lds
xchg
popf
inc
es
or
mov
xchg
add
jnp
push
and
pop
or
stc
and
in
ficompl
popa
ds
jmp
ffreep
movsl
sbb
pop
sbb
sub
cmp
push
dec
adc
sub
mov
and
call
push
shl
xchg
imul
call
sub
xor
dec
outsl
mov
mov
and
mov
and
adc
xchg
jne
mov
dec
adc
adc
repz
int3
bound
mov
int
adc
push
in
sti
insl
and
push
test
ffree
mov
pop
adc
push
and
mov
les
ss
push
insb
sub
stos
sbb
ror
popa
data16
stos
or
ja
lds
mov
icebp
fistpll
lock
cli
jo
inc
test
jo
hlt
and
pop
inc
or
xchg
ljmp
inc
jae
mov
mov
pushf
mov
in
test
mov
in
jns
mov
inc
push
fstps
scas
adc
jge
test
mov
cmc
adcb
aam
insb
mov
in
pop
nop
scas
mov
pop
nop
in
dec
fiaddl
mov
inc
ss
dec
cmp
fcomp
jo
test
xchg
and
out
jmp
arpl
push
sar
pop
cmpsb
add
loop
sbb
mov
addr16
sub
or
cmc
jecxz
mov
cmpsb
add
cmp
ss
mov
jecxz
mov
push
jnp
mov
shrl
xor
sbb
sbb
mov
dec
scas
add
mov
cmp
pop
xchg
or
sahf
sarb
in
mov
cmc
repnz
fwait
ret
arpl
lock
ret
cmpsl
xchg
pop
addr16
jg
push
enter
ror
pusha
data16
lods
fwait
mov
rclb
lock
pop
push
fmul
inc
xchg
fwait
mov
dec
sbb
outsb
mov
pop
repnz
out
test
aam
pop
inc
or
lock
pop
cmpl
shll
hlt
cmp
test
adc
out
pop
push
mov
js
and
fwait
test
xchg
xor
loopne
insl
dec
pop
xor
push
dec
addb
xchg
pop
mov
mov
adc
and
shlb
cmp
arpl
add
mov
push
inc
outsb
or
jle
xor
adc
add
jecxz
test
dec
jmp
dec
adc
or
in
pop
dec
out
adc
repz
aaa
adc
pop
sbb
push
xchg
stos
out
push
ds
outsl
das
in
cltd
pushf
push
out
cmp
ja
nop
push
lea
add
loopne
imul
sbb
sbb
mull
jbe
and
pop
gs
scas
fidivl
xchg
dec
inc
in
mov
xor
inc
sbb
sbb
xor
fcompl
mov
pop
pop
insb
push
xor
cmpsb
pop
sbb
add
xchg
xchg
mov
scas
jecxz
dec
pop
fisttpll
fstl
fsubrs
sarb
dec
mov
xlat
pop
sbb
jl
bound
jl
loop
ss
xchg
sbb
xchg
cmp
sub
adc
sub
add
neg
jecxz
dec
daa
xchg
fsubrl
jne
sarl
daa
lods
imul
stos
xor
sub
or
lods
int3
mov
fsub
ljmp
xlat
ficoml
inc
imul
div
or
jns
data16
xchg
add
sbb
xor
iret
adc
movl
xor
mov
inc
mov
cwtl
es
sbb
in
popa
mov
movsb
mov
add
ja
and
data16
ret
and
fmulp
imul
ljmp
cmp
add
fs
jnp
fwait
xchg
push
mov
adc
mov
test
sbb
push
jl
push
gs
lret
xchg
pop
xor
cmp
pop
mov
cmp
adc
jg
aaa
mov
popf
xchg
sub
dec
test
add
ss
outsb
sbb
js
fidivrl
cmc
sbb
fwait
jg
adc
jbe
jne
xchg
pop
incl
mov
sub
leave
mov
aad
insb
jo
pop
xchg
dec
outsb
ss
or
adc
push
and
adc
in
and
xor
sbb
xor
cmp
xlat
dec
out
imul
in
adc
dec
stos
addb
es
stos
shlb
mov
loop
clc
dec
or
mov
enter
stos
adc
ds
frstor
shll
and
incb
push
jmp
loopne
in
test
ljmp
push
dec
mov
stos
push
pushf
and
out
xlat
lock
ret
fwait
inc
loope
jecxz
pop
push
xchg
pop
jne
adc
mov
lods
fs
push
mov
cmpsb
or
mov
mov
rcrl
sbb
movsb
mov
pop
and
loopne
adc
xor
mov
mov
cltd
imul
movswl
mov
fs
cmpsl
push
and
pop
ret
rcll
pop
fnstenv
out
jbe
sbb
jno
in
mov
cmp
xor
into
test
fs
addb
adc
scas
aaa
fmull
stc
fsubr
test
sub
mov
dec
scas
and
xchg
xchg
push
leave
fcomi
dec
adc
int3
aaa
dec
enter
mov
xchg
cli
adc
mov
sbb
and
mov
lock
cmpl
sti
xchg
push
lods
insl
fwait
inc
mov
lods
cmp
mov
mov
movsb
mov
ret
cmp
dec
sub
mov
and
movsb
adc
fwait
pop
data16
pop
pop
push
cmp
ja
jmp
dec
pop
add
aaa
dec
hlt
test
repz
lock
or
ja
rcl
mov
ds
mov
or
test
sarb
jne
mov
pop
or
lcall
testb
in
xor
jge
sbb
inc
xor
add
mov
adc
movsb
push
mov
xchg
xchg
test
iret
les
sub
lea
mov
xchg
jge
fwait
fwait
mov
enter
mov
push
push
sub
jbe
add
sub
test
push
loopw
xchg
dec
xor
outsl
xor
fucomi
mov
dec
or
mov
lods
inc
adc
push
clc
jb
cmp
sar
xchg
sub
mov
jecxz
js
movsb
pop
adc
jno
sub
lea
loope
cs
outsl
or
cmp
hlt
xchg
lods
pop
stos
testl
mov
loop
push
mov
adc
dec
or
orb
into
incl
es
mov
cmpsl
inc
rorb
cli
repnz
push
lds
pop
sub
test
out
sarl
sub
imul
push
cmp
cmp
push
pop
push
or
ror
fcoml
jge
hlt
lcall
insl
std
adc
mov
movsl
leave
lods
into
jb
scas
lahf
xchg
je
bound
popa
int3
dec
out
mov
in
hlt
inc
test
out
xor
adc
push
fsubl
pusha
mov
dec
pop
jnp
sub
cmp
enter
shll
mov
stc
decb
inc
bound
xchg
clc
ret
xor
cltd
out
lds
and
rorb
repz
inc
int
add
ret
in
shlb
aas
pop
das
leave
pop
push
push
mov
jne
pop
xchg
pop
neg
sbb
mov
fyl2x
mov
or
popf
adc
push
push
outsb
xchg
push
mov
mov
inc
mov
cmp
jne
jno
shl
aas
dec
xor
push
mov
mov
stc
sbb
mov
mov
mov
lock
push
es
xchg
push
jecxz
cltd
cmp
xchg
mov
ror
aad
adc
mov
mov
sbb
ret
push
les
push
mov
dec
out
or
xlat
mov
inc
stc
pop
hlt
lea
push
dec
repz
jmp
pminsw
jae
call
push
mov
jno
jno
mov
mov
aas
or
gs
aad
sarl
and
jne
test
push
mov
dec
loope
push
sarl
xor
and
jge
loop
and
sub
outsl
push
add
cmpsb
fs
or
cmp
sarb
out
sub
test
sbb
jecxz
or
xchg
push
push
lret
scas
xor
imul
es
hlt
mov
sub
xor
dec
lahf
add
addb
mov
fidivs
mov
adc
fistl
out
lret
cmp
cld
add
int3
mov
notl
sub
daa
xor
ds
and
mov
js
add
inc
stc
add
fisubl
test
pushf
dec
or
cmpsb
lret
xchg
sti
or
inc
ret
lock
lods
pop
xchg
xchg
pop
pop
jbe
rorb
jno
arpl
pop
sbb
lret
push
xchg
xchg
push
movsl
xorl
insl
mov
mov
and
in
jae
lods
int3
movsl
scas
test
jae
je
sarb
insl
movsl
inc
fidivs
pushf
js
imul
pop
jbe
push
pop
add
jo
cltd
sti
xchg
push
fisubs
aas
mov
lcall
sahf
rolb
or
xchg
xlat
adc
stos
js
into
rcr
cmp
loopne,pt
nop
leave
out
sub
cs
insl
inc
jge
scas
sub
mov
in
fwait
out
add
in
stos
jne
andl
mov
add
jl
sbb
and
xchg
ja
mov
dec
stos
mov
and
scas
out
aas
jg
inc
or
xor
xlat
scas
push
neg
or
jg,pn
mov
jg
rcl
mov
xchg
dec
jl
nop
in
or
mov
sbb
push
pop
mov
pop
dec
lods
fs
cmpsb
inc
fwait
push
push
lock
cli
pop
out
daa
mov
loope
pop
xor
lahf
loope
fs
gs
sbb
ret
mov
mov
dec
in
fistps
arpl
stos
adc
xor
mov
mov
push
push
sub
stos
aad
xor
sbb
testb
out
jbe
adc
push
int
mov
xchg
push
fbstp
lock
gs
jno
lahf
xor
icebp
cmpsl
notb
xor
cmc
mov
insl
dec
sbb
dec
sub
out
sbb
scas
adcl
jecxz
xor
xlat
sub
into
push
push
inc
push
stc
jo
mov
ret
xor
cmp
movsl
cmp
lcall
jne
inc
xor
cli
stos
or
mov
add
mov
jno
repnz
mov
mov
push
pushf
push
inc
mov
cmp
popf
inc
loopne
xchg
and
icebp
cli
pop
or
aam
sub
sbb
adc
inc
dec
cmp
mov
outsl
fidivl
jno
lods
jbe
xchg
push
add
les
rcrb
xchg
cmpsb
jne
loope
jmp
pop
inc
mov
lahf
xorb
lret
stc
test
pop
stc
mov
jp
dec
iret
pusha
cmpsl
cli
mov
into
lods
mov
roll
xchg
imul
jle
mov
negl
arpl
jecxz
cli
sahf
shr
push
push
repz
mov
jle
loop
in
jge
arpl
sub
adc
or
sbb
iret
xor
push
pushf
ss
xchg
inc
in
jl
xchg
push
rcrb
xchg
jno
inc
mov
pop
test
inc
inc
je
inc
cmp
adc
lret
add
cmc
and
mov
xchg
call
cwtl
adc
mov
pop
test
repnz
xchg
jo
aaa
jb
insl
clc
xor
and
test
or
sbb
loop
and
outsl
nop
iret
mov
aas
push
aaa
subb
sbbl
mov
jo
cmp
insl
out
aam
jmp
inc
or
mov
jge
aaa
mov
dec
mov
dec
imul
sbb
in
sbb
and
push
cmp
lock
ds
enter
popa
cltd
dec
and
xor
add
loopne
sub
shrb
out
sbb
ljmp
xchg
add
fists
repnz
cli
sub
shrb
and
pushf
je
add
repz
iret
popa
repz
clc
outsb
ret
mov
mov
and
add
or
js
inc
idivb
mov
and
inc
popa
jo
push
pop
into
addr16
test
add
xorb
push
xor
push
mov
push
popa
mov
pop
push
stc
fsubs
and
or
or
mov
add
addr16
movsb
aad
push
cs
addr16
adcl
xor
in
push
ss
movsb
lds
loope
mov
icebp
pop
jge
lret
or
subl
mov
lods
mov
jb
xor
movsb
jb
test
int
jge
xlat
ja
lea
aad
mov
inc
push
cld
dec
outsb
jno
or
mov
mov
sub
mov
sbb
cmp
mov
ret
mov
cmpsb
and
in
icebp
aad
imul
fwait
rcll
push
mov
mov
leavew
or
dec
sbb
pop
fdivl
js
push
insb
or
sub
mov
or
and
mul
push
inc
push
ja
dec
sub
xchg
imul
fmul
lods
mov
loopne
icebp
xchg
jle
aad
outsb
clc
scas
in
clc
outsl
cmc
add
loopne
pop
rcll
daa
out
cmpsb
movsb
inc
mov
mov
adc
dec
pop
mov
or
inc
cmpsb
cmc
pushf
xchg
stos
das
pop
mov
mov
jns
stc
xchg
ja
push
stos
mov
pusha
fnstcw
bsf
ret
int3
mov
cwtl
js
and
mov
test
hlt
mov
jae
xor
sbb
pop
and
lods
push
fbld
lds
nop
or
insb
mov
popf
ds
ficoml
pop
nop
daa
xchg
test
fcoms
int3
inc
mov
cld
mov
scas
outsl
stos
push
shl
and
mov
popf
adc
fs
cmpsb
loope
ret
push
inc
ss
test
out
jp
mov
mov
mov
adc
int
pop
mov
inc
in
push
nop
jmp
mov
adc
es
push
sbb
and
movsb
cmc
push
lret
lock
mov
in
daa
pop
sbb
sub
in
aaa
pop
pushl
mov
sbb
xor
fadds
cmp
sub
in
pop
mov
xchg
dec
adc
dec
adc
shll
cmp
cmp
jae
push
mov
negb
mov
stos
mov
and
adc
inc
pop
sub
xchg
add
fsubrs
sub
adc
dec
lods
pop
out
leave
add
enter
or
pushf
gs
enter
dec
pop
lods
lret
out
call
mov
mov
iret
sarb
inc
sub
sbb
mov
xchg
insb
mov
iret
shrb
out
cld
jl
shlb
push
mov
pop
lcall
test
clc
cmp
pop
push
mov
jecxz
cmc
or
mov
popf
or
sbb
push
leave
jb
pop
or
imul
push
lock
int
outsl
xchg
adc
imul
aaa
fcmove
jno
mov
xchg
inc
xor
ss
mov
cmp
jno
int3
mov
outsb
std
jmp
leave
dec
jns
mov
ja
addl
jle
idivl
shll
out
push
or
and
int3
push
lock
adcb
inc
aaa
push
mov
ror
iret
sub
je
movsl
sbb
adc
sub
jae
pop
sbb
enter
pop
repnz
pop
repz
scas
iret
xchg
or
mov
mov
jmp
push
gs
mov
std
mov
lahf
rorl
data16
jl
repz
xor
mov
pop
fiadds
xor
cli
xor
push
add
fisttpl
xor
push
push
cld
adc
addr16
dec
jnp
mov
pmaxub
mov
jae
subl
adc
lahf
in
and
push
add
jo
aas
nop
jg
inc
mov
jl
rorl
add
push
test
iret
sahf
scas
scas
addr16
or
xchg
or
adc
hlt
mov
leave
aam
xor
aam
push
pop
or
jg
mov
fstl
xor
sbb
mov
jb
adc
clc
inc
roll
popf
mov
inc
push
ja
lret
add
mov
ljmp
into
call
jae
mov
sbbl
xchg
and
stos
mov
xchg
out
adc
jl
sar
push
push
pop
jmp
mov
sti
lods
daa
je
imul
xlat
mov
int3
leave
dec
arpl
push
ficoml
scas
jmp
mov
fadd
xor
push
stos
popf
cltd
push
fstpl
or
int
cmp
mov
inc
out
pusha
pop
fists
jmp
out
dec
inc
mov
sub
jae
out
hlt
mov
test
insb
jb
xor
jecxz
leave
call
jbe
fcoml
popf
sbb
xor
pop
loope
cmp
imul
in
stos
cmp
lods
lahf
mov
pop
ljmp
fwait
xor
gs
push
jle
mov
mov
cld
and
mov
inc
xchg
lea
cmp
int3
or
fs
or
adc
inc
rclb
sbb
divl
dec
mov
push
cmp
into
es
push
inc
fcompl
cli
gs
test
xchg
fistpl
test
gs
mov
sbb
inc
ja
sub
mov
push
sar
push
adc
adc
arpl
outsb
and
mov
popf
cmp
cld
fcomps
jmp
ja
inc
cmpsl
and
mov
adc
insb
js
cmpsb
das
add
mov
inc
cs
dec
enter
shll
int3
aaa
pusha
inc
sub
jl
addl
or
and
push
xor
iret
sub
adc
stc
iret
xlat
int3
mov
inc
xorb
sub
mov
sbb
xchg
scas
pop
and
or
int
xchg
div
dec
add
pop
movsl
decb
scas
hlt
xchg
jmp
mov
les
leave
inc
test
mov
jle
clc
nop
and
lds
lock
push
filds
mov
outsb
cmpsb
test
out
push
push
loop
sarb
sub
add
dec
mov
sbb
adc
or
repnz
push
xor
mov
int3
inc
mov
mov
cltd
xor
sbb
inc
xchg
test
jae
ss
sbb
mov
and
sbb
and
jecxz
pusha
pop
mov
mov
mov
in
jg
stos
outsb
cld
jae
sub
lahf
daa
fs
das
addr16
fsts
pop
shll
cwtl
mov
fldenv
imul
mov
popa
push
xchg
xchg
cmpsl
outsl
subb
in
subb
cmp
into
icebp
scas
sbb
mov
lcall
test
rcrl
pop
jbe
call
iret
push
cltd
add
adc
mov
movsl
fwait
incb
icebp
mov
adc
cmp
inc
mov
inc
test
aam
mov
scas
dec
xlat
jmp
dec
sub
mov
icebp
cmp
call
xchg
cld
in
sbb
mov
stos
nop
dec
xchg
jnp
scas
sub
push
bound
mov
sub
cmp
or
mov
lods
pop
not
adc
mov
cmp
mov
es
add
push
cmpsb
jb
cwtl
mov
lods
adc
xor
lahf
ljmp
test
jbe
pop
xor
mov
xor
cwtl
cli
cmpsb
sub
dec
fcomi
mov
mov
push
mov
mov
int
insl
xchg
sarb
push
ret
sbb
inc
test
mov
dec
add
mov
pop
dec
xor
push
push
lock
jno
cwtl
fiadds
outsb
xchg
into
lcall
fwait
adc
outsb
lods
enter
mov
notb
rcll
add
pop
aad
cli
xor
ds
iret
sbb
scas
sbb
ljmp
dec
insb
and
and
test
mov
jae
les
adc
movsb
outsl
imul
rolb
or
add
test
xlat
sbb
xor
popf
add
insb
das
cld
mov
insl
adc
subl
mov
jno
push
push
mov
mov
and
inc
inc
fwait
pop
sub
jmp
clc
mov
cmp
add
fistl
int
stos
fldenv
pop
cmpsb
xlat
xabort
sbb
cmp
movsb
test
iret
leave
aaa
fsubp
hlt
sub
ret
and
inc
cmp
addl
sbb
pop
pop
shll
cmpl
js
add
jne
fldt
dec
adc
hlt
cmp
xchg
push
dec
pop
add
movsb
mov
cli
and
std
xor
add
leave
push
mov
pusha
xchg
scas
rorb
sbbl
xor
and
mov
sub
inc
out
push
xor
dec
dec
jbe
add
pushf
mov
addr16
fsts
test
lcall
pop
sar
lea
addl
pop
dec
or
test
mov
sub
loop
cmp
jb
cwtl
jmp
mov
mov
push
xchg
adc
cmp
cmp
cs
and
lcall
push
ret
decb
adc
sbb
adcl
movsb
push
pusha
mov
jmp
jmp
push
dec
xchg
pop
gs
cmp
xchg
push
mov
jno
jbe
cmp
xorl
cwtl
in
mov
xor
jl
js
mov
xchg
les
fstpl
xor
cmp
xor
add
sub
inc
xchg
or
dec
add
sbb
outsb
insb
cs
push
xor
jae
xor
or
pop
mov
clc
cli
add
out
mov
mov
push
sbb
jp
pop
rorb
arpl
inc
loopne
sub
cmp
cmpsl
test
mov
inc
jne
add
fidivrl
int3
outsb
adc
sti
xor
sub
mov
mov
repz
xchg
jge
mov
lahf
and
inc
mov
jae
mov
sub
jae
mov
aas
iret
hlt
mov
jp
xchg
insl
fs
xchg
std
pop
sub
pop
js
inc
sar
push
ss
sub
mov
repz
rorb
adc
lods
jl
or
mov
in
aad
repz
sub
lcall
cbtw
mov
pop
pop
jmp
xchg
xchg
cli
dec
int3
push
adc
jns
loopne
fistl
ret
mov
iret
and
lcall
xor
sbb
nop
cmp
arpl
sbb
mov
mov
push
stos
sahf
push
or
mov
adc
cmp
dec
mov
movsb
adc
mov
nop
or
out
or
mov
das
in
fwait
shlb
xor
cmpsb
or
xchg
shll
fwait
repnz
pop
inc
push
dec
mov
in
loop
icebp
jmp
jp
push
das
pusha
add
cmp
movsb
cmp
movb
insb
sbb
cltd
push
jne
mov
ficoms
addr16
sub
adc
adc
iret
addr16
in
imul
pusha
xor
mov
dec
mov
pop
xchg
cld
and
stc
clc
int
jg
sbb
xlat
pop
mov
dec
aad
lea
and
adc
int3
sub
stos
add
ds
aam
divl
xchg
pop
dec
jo
or
jg
sbb
cwtl
pop
cmp
jmp
fisttpl
repz
rclb
adc
cmp
popf
out
mov
insb
aad
push
mov
cmp
pop
adc
popa
sbb
ss
mov
ret
and
push
sbb
adc
inc
test
or
hlt
outsb
pop
jnp
pop
mov
inc
popa
sbb
push
push
insl
add
bound
fcompl
loop
xlat
or
cmpsl
push
inc
cmpsl
lods
addl
rcr
push
call
mov
jns
gs
sub
and
pop
hlt
fwait
add
out
in
cmp
mov
outsl
sbb
lods
mov
out
mov
bound
xchg
pop
in
mov
pop
rclb
pusha
mov
push
mov
mov
pop
fs
repnz
jns
push
mov
imull
mov
mov
pop
cld
dec
repnz
xor
sbb
jp
mov
lods
out
jecxz
mov
test
dec
mov
cmpsl
dec
mov
sbb
shr
std
lea
cmp
mov
pop
cmp
sarl
add
xchg
xchg
sti
ficoms
lcall
je
pop
xor
inc
addb
mov
popl
sub
mov
lcall
fcoml
xchg
mov
pushf
push
xor
xor
mov
mov
lret
loopne
pop
mov
cmp
cmpsb
or
les
scas
adc
xchg
push
adc
push
jg
orb
ss
popa
shl
mov
pmuludq
jae
cmc
aam
in
ljmp
inc
loope
jp
mov
fsub
push
fbld
sbb
push
repnz
adc
imul
ret
adc
test
jge
stos
mov
jae
and
imul
arpl
enter
push
fwait
dec
dec
xor
pop
and
sub
out
ljmp
cmp
push
mov
or
inc
jecxz
jno
cmc
adc
fmull
lods
ret
mov
and
popa
or
cli
jns
pop
arpl
dec
xor
cmpb
cli
cmp
cmp
jo
mov
sbb
dec
iret
sub
cmp
jmp
cmp
sbb
data16
mov
mov
fstpt
push
xor
mov
sub
out
fcmove
out
mov
aas
hlt
fcmovnbe
adc
lds
insb
sub
insl
mov
mov
fimull
jns
push
pop
push
test
cmp
test
jbe
mov
add
cmp
push
or
and
dec
mov
arpl
sbb
sbb
sub
movsl
idivl
int3
outsl
rorl
push
inc
cmp
dec
push
shrl
dec
sbb
in
pusha
aad
aas
and
dec
inc
adcl
imul
fidivs
pop
scas
stc
mov
pop
adc
jne
test
adc
roll
push
ja
das
lret
xchg
outsb
ja
cmc
subb
or
jne
lea
jne
lds
pushf
push
xlat
or
xor
outsb
xchg
shrl
cwtl
sbb
or
jle
stos
enter
lea
jb
popf
cld
fiadds
out
stos
and
pop
out
pop
lcall
mov
push
inc
repz
orb
shl
mov
add
inc
sub
sbb
pop
jno
adc
mov
pusha
add
pop
fcoms
adc
out
xchg
sbb
push
mov
adc
ret
rcrb
lds
in
push
pop
cmpsb
add
ret
cmpsl
add
icebp
dec
dec
push
jcxz
adc
xlat
pop
xor
jmp
mov
jo
popa
cs
push
adc
add
pop
movsb
lret
inc
clc
jmp
cltd
out
fcomps
cmp
push
mov
and
shll
inc
inc
ss
cmpsb
loope
xor
push
pusha
mov
adc
aas
dec
sbb
mov
mov
repz
mov
loopne
dec
or
mov
xchg
mov
add
stos
mov
mov
mov
mov
popa
cmp
sahf
in
ss
mov
xor
sbb
pop
cmpsl
jg
mov
ss
inc
sbb
sbb
jl
adc
push
out
push
out
pop
cmp
rorl
ljmp
dec
lahf
xchg
jmp
or
lock
xchg
dec
jno
mov
mov
xchg
fildl
add
or
or
sarb
ret
in
sbb
inc
jns
fsin
popa
xor
fists
pop
jmp
jbe
out
or
mov
sub
pop
fists
arpl
cmc
enter
cmpsb
cwtl
sar
insb
or
in
stos
shlb
sti
push
mov
mov
inc
or
subl
scas
xchg
movsl
mov
fists
popf
into
xchg
pop
sbb
push
mov
jbe
es
inc
xchg
dec
sub
jmp
sub
jmp
rorl
sub
sti
mov
mov
movsb
outsl
scas
sub
cmp
inc
out
xor
aas
adcb
inc
jne
or
mov
mov
or
nop
nop
pop
lahf
fstl
fs
and
jl
addr16
sbb
sub
jmp
dec
mov
pop
out
dec
and
and
and
push
push
push
dec
cs
inc
ds
jmp
or
xchg
jmp
dec
mov
addr16
je
les
mov
adc
adc
mov
jp
popa
cmp
lds
mov
add
dec
or
push
addr16
aaa
jne
mov
dec
pop
or
push
mov
mov
sub
test
mov
in
popf
aam
pop
and
push
cld
pusha
stc
loope
lds
cld
xor
inc
cli
xor
pop
out
and
mov
xchg
mov
mov
inc
iret
sub
sbb
cmp
jmp
test
rolb
je
push
push
pop
sarl
rclb
adc
mov
jmp
fwait
insl
fisubrl
pop
and
add
cmp
dec
ja
movsb
jge
call
xor
mov
and
adc
mov
sub
in
and
popa
mov
adc
jno
dec
mov
lahf
lcall
dec
les
add
es
outsl
push
int3
jb
push
js
aaa
mov
js
mov
test
shlb
inc
loope
jo
clc
mov
leave
push
cwtl
imul
and
adc
jnp
js
jl
dec
mov
mov
xor
mov
popf
jecxz
sub
sbb
ds
in
roll
out
inc
push
aam
sub
mov
movsl
cmpsl
add
cmp
xor
fcmovnu
pop
mov
imul
rorb
cmp
bsr
les
pop
push
cmovge
popa
ret
jge
imul
xor
adc
jmp
pop
fwait
cmovs
lea
lahf
out
mov
lock
gs
push
scas
cmp
insl
rcrl
inc
or
sarl
adc
out
lods
xorb
dec
icebp
add
enter
js
aam
mov
push
inc
cmp
insl
ljmp
pop
sbb
ret
cmc
push
out
xchg
gs
lahf
divb
lods
push
roll
mov
int3
lods
scas
push
inc
sub
cwtl
js
rclb
daa
xor
push
xorb
rclb
cmpsb
cmp
pop
mov
es
cs
jg
jbe
cli
mov
push
jbe
sbb
jbe
xchg
mov
subb
pop
dec
insb
inc
jo
je
cmpsl
sbb
test
cltd
push
jl
les
jb
jb
stos
ss
stc
inc
and
dec
cmp
xor
mov
es
cwtl
cmp
rorl
out
das
push
mov
jne
mov
and
jns
dec
iret
je
dec
int3
cmp
mov
jg
and
out
mov
orb
outsb
lret
inc
in
push
xor
and
xchg
dec
xor
mov
fldenv
cld
push
daa
pop
xchg
push
push
insb
out
insb
out
xor
adc
mov
fdivrl
and
xor
xor
add
sbb
and
jbe
xchg
or
fst
imul
int3
mov
test
in
sbb
add
out
cmp
pop
mov
sarb
roll
jb
jecxz
adc
cltd
add
rorl
dec
test
sbb
inc
push
ficomps
dec
jge
into
xchg
clc
add
in
test
mov
rolb
mov
or
xor
test
in
addr16
xchg
jmp
das
stc
into
roll
push
adc
test
fdivrs
or
mov
dec
movl
sub
repnz
mov
xor
shl
xor
cli
jl
dec
ljmp
cmp
js
push
bound
push
pop
fsubrs
mov
scas
loope
lret
and
addl
imul
push
xchg
aam
ss
mov
dec
dec
mov
xchg
adc
jbe
cs
sbb
mov
enter
push
ja
mov
shrl
mov
jb
cmpsb
data16
mov
incl
out
out
mov
xchg
pand
pop
xchg
loope
stc
mov
and
rcrl
push
pop
xor
or
arpl
in
cmpsb
xchg
into
repnz
repnz
es
movsl
xor
or
jb
xchg
cmpsb
add
mov
pop
xor
sbb
cmp
pop
inc
inc
pusha
xchg
ja
cmp
cld
sbb
int
mulb
popf
xor
cmpsl
and
mov
jnp
and
ret
sbb
pop
jmp
mov
fstpt
outsb
lcall
dec
in
in
cltd
add
pop
ret
ljmp
cmpsl
push
js
or
adc
cmp
sub
clc
retw
daa
mov
cmp
fisubs
sub
dec
mov
jmp
mov
jbe
jb
adc
adc
subb
imul
outsb
adc
data16
out
sub
ret
inc
pop
jo
inc
mov
in
test
rcrb
cmpsb
sti
pop
movsl
dec
sub
push
add
repz
push
mov
mov
lock
pusha
dec
xchg
sahf
push
xchg
das
nop
dec
in
faddp
mov
inc
lds
cmc
in
or
or
stos
pop
pop
push
fwait
enter
bound
mov
not
fsts
cmp
cld
adc
mov
repnz
aaa
dec
push
fcompl
inc
sub
push
sub
lret
push
and
int
gs
dec
push
mov
and
jg
mov
test
dec
xor
push
push
loope
adc
inc
mov
push
lods
sbb
inc
imul
leavew
rcrw
inc
shl
adcl
xchg
movsl
xchg
push
fdivrl
out
loopne
lahf
dec
icebp
test
cmpsl
mov
dec
outsl
out
cmpsb
or
jg
add
sbb
or
call
arpl
inc
negb
nop/reserved
popa
enter
sub
das
lds
addr16
dec
push
fisttpll
dec
add
in
push
fisubrs
enter
mov
out
jb
sub
or
jecxz
daa
rcl
mov
int
sub
mov
mov
push
pop
lcall
call
mov
aam
mov
ds
xorb
sbb
or
aas
data16
dec
and
movb
in
iret
into
jb
aas
mov
xorb
aas
bound
sbb
jle
movsb
ret
pop
sub
inc
push
pop
add
mov
mov
in
and
lods
sbb
inc
xor
jg
mov
div
adc
rclb
mov
movsb
pop
cmp
cmp
test
inc
lahf
dec
popa
sti
mov
mov
scas
sbb
xchg
cld
popf
jbe
sub
mov
sti
mov
out
mov
mov
inc
jns
add
pop
lcall
xchg
jns
mov
sub
xor
add
jp
inc
xor
dec
loop
pop
xchg
push
aam
ret
insl
inc
out
jge
fistps
test
pop
lret
adc
jle
push
dec
arpl
scas
jg
cli
out
pop
xchg
rcll
idivl
jns
and
insb
lret
in
mov
cmp
lahf
add
pop
pusha
es
push
xchg
ficompl
and
sbb
enter
out
imul
outsb
in
iret
and
add
bnd
out
xor
xchg
out
add
testl
cmc
add
rcl
sub
mov
lret
xor
into
outsb
or
shlb
jmp
xchg
jnp
das
hlt
xor
stc
lods
clc
pop
loopne
movsb
xor
test
ficompl
jl
inc
cmp
dec
cmp
jae
call
test
lods
mov
pop
testl
clc
cmp
pop
mov
pop
xor
xchg
test
cli
mov
pop
call
inc
shlb
shll
push
jmp
mov
cmp
jmp
xor
cmpb
xchg
mov
rcrl
stos
adc
vcvttsd2si
test
rclb
mov
jns
andl
shll
aaa
mov
int3
pop
shrb
je
jecxz
lret
cmpsl
aad
movsl
dec
xchg
fstpl
mov
mov
fidivrl
test
add
jns
dec
xchg
lret
test
bound
mov
loope
or
loope
mov
or
rclb
popw
ficoms
lods
adc
and
mov
pop
iret
repnz
inc
cmpb
filds
dec
sub
pop
nop
scas
xchg
outsl
push
ljmp
xor
fstps
add
inc
dec
or
inc
push
sub
pop
jae
xchg
sub
addl
xchg
pushf
cltd
fcmovnb
outsl
mov
push
jo
adcb
loope
jp
or
fmuls
xor
aas
cmp
jge
out
cmp
lcall
test
in
or
or
ud0
je
sbb
int
push
or
xchg
cwtl
arpl
mov
mov
outsb
mov
lods
roll
icebp
fldcw
test
sub
decb
add
lea
dec
sbb
adc
fsubr
test
movsb
sbb
vpsrad
sbb
je
jnp
sbb
fsubs
cmp
and
jno
ss
ret
jnp
gs
stos
mov
repz
fsubs
fsubrs
dec
sti
aaa
jbe
mov
mov
hlt
mov
mov
mov
mov
and
or
jb
rolb
xchg
cmp
and
pop
add
in
inc
xor
mov
adc
test
out
ds
stc
roll
adc
dec
aaa
mov
pop
add
xor
inc
jge
push
sub
jmp
sar
xor
push
xchg
xor
xor
ja
xor
add
push
or
or
das
ret
xchg
cmpsb
stos
push
push
popf
sub
lcall
mov
insb
push
inc
dec
fcompl
gs
lret
int3
hlt
xchg
xchg
add
lea
cltd
xchg
fnsave
jle
call
inc
insb
push
popa
bound
jg
xchg
sbb
pop
sbb
int3
js
test
mov
pop
adc
lret
sub
lahf
or
adc
inc
ftst
dec
sub
in
sub
or
push
mov
fwait
pushf
and
gs
mov
lcall
mov
push
decb
cmp
inc
inc
ja
push
adc
outsb
dec
push
dec
call
push
fisubrl
jl
xchg
lret
adc
jnp
ret
in
xadd
stc
jmp
das
add
test
mov
out
or
adc
fstl
out
arpl
scas
imul
inc
cltd
lds
pop
imul
mov
ficoms
mov
fcomps
pop
jno
cmp
pushf
mov
mov
xor
aam
jge
inc
mov
mov
push
or
shrl
xacquire
xchg
mov
inc
cmpsb
add
adc
xlat
pop
daa
pop
shrb
clc
xchg
sub
jecxz
stos
mov
andb
push
mov
jg
mov
dec
pop
repz
dec
roll
xchg
notb
jno
adc
hlt
mov
sbb
shl
test
xor
fs
mov
xchg
out
sbb
sbb
in
loop
push
icebp
inc
pop
movd
and
jbe
mov
dec
xor
pop
outsb
aas
mov
sbb
aas
sub
jl
mov
xor
arpl
ds
add
movsb
jle
in
test
leave
push
push
adc
sub
enter
sub
addr16
cs
jg
mov
cmp
pop
dec
or
cld
mov
xchg
lods
outsb
lret
adc
xchg
sbb
aam
pop
sbb
cld
jecxz
xor
stos
mov
jne
insb
loope
mov
inc
lret
sti
sbb
pop
add
ss
mov
mov
stos
scas
lcall
adc
mov
cwtl
mov
mov
pusha
les
and
sarl
mov
mov
fwait
decb
scas
jecxz
mov
das
sub
sarb
insl
sete
mov
dec
test
sub
fadds
sti
pusha
dec
or
das
insb
stos
push
jbe
out
dec
ret
jge
dec
sahf
xor
fiaddl
imul
in
je
pop
into
mov
mov
inc
sbb
mov
sahf
push
imul
scas
xchg
popf
sub
cmc
stc
mov
sub
jle
cli
js
mov
ja
adc
mov
push
insb
mov
popf
push
adc
aaa
push
or
testl
xor
mov
jg
or
add
fisttpl
push
jg
imulb
inc
or
cmp
xchg
data16
mov
popa
sub
xchg
bound
sub
mov
add
ss
cmpsl
adc
orl
dec
push
into
leave
cwtl
mov
data16
leave
cmpsb
adc
mov
jnp
mov
clc
sti
push
xlat
imulb
and
popa
mov
sahf
outsl
shl
or
push
add
sti
cs
push
jmp
punpckhbw
insb
adc
mov
ljmp
and
js
xchg
outsb
popa
cmpsb
push
mov
jb
in
mov
push
lret
mov
test
inc
insl
adc
aas
gs
inc
rorb
das
lahf
mov
subb
or
jns
sub
insb
push
lods
insl
out
les
pop
dec
mov
adc
sub
data16
xor
lea
icebp
cmpsl
fdivrp
add
lods
aad
jl
arpl
ja
lods
fcmovne
xchg
imul
adc
fcoml
pop
mov
out
cs
or
mov
xlat
sbb
sub
lahf
stos
add
add
mov
cltd
dec
cmp
xor
lret
repnz
adcl
pop
stos
fisttps
je
dec
icebp
pop
sbb
or
jae
sbb
sbb
cmp
arpl
hlt
or
popa
inc
popf
jb
pop
insb
and
jae
add
dec
pusha
repz
cltd
sarb
mov
cwtl
cmpsb
push
or
out
imul
iret
shlb
add
xchg
nop
push
mov
es
shlb
sbb
outsl
insb
mov
pop
sahf
int
int
fsubrs
jge
jae
dec
lea
or
fcompl
inc
cmp
adc
cltd
xlat
bound
popf
das
mov
cmpsb
or
pusha
push
xchg
dec
add
push
push
popa
inc
into
fmull
push
xor
repnz
push
int3
ss
mov
inc
mov
call
xchg
fdiv
cld
and
dec
outsl
dec
xchg
cmpsb
and
leave
fidivs
lods
push
mov
dec
jle
int
jb
pop
cltd
ja
pop
test
mov
jne
adc
lods
jmp
mov
dec
pop
jg
push
xor
or
lret
jle
sbb
pushf
mov
dec
jne
jecxz
fnstsw
lods
repz
lock
pop
in
faddl
push
pop
or
mov
data16
rcrl
fdivrl
dec
sub
cmp
and
push
scas
sti
and
mov
push
push
jmp
xlat
test
insl
fnstenv
xchg
es
mov
mov
xlat
int
das
or
fsubrs
pop
inc
arpl
or
cmovle
xchg
mov
cs
xchg
test
inc
mov
popa
dec
sbb
or
hlt
in
and
fwait
mov
pop
jno
outsl
imul
test
push
xor
jmp
add
cmpsb
push
into
orl
jmp
inc
sbb
mov
or
lods
sbb
jmp
push
stc
or
fnsave
lret
adc
loop
and
loope
shlb
bound
cmp
push
mov
mov
in
mov
insl
mov
pusha
js
jmp
or
outsl
pop
mov
add
inc
mov
mov
mov
xchg
push
int
sub
aad
pushf
lods
fisubl
stos
inc
push
es
lods
cli
dec
mov
sub
and
sbb
lcall
test
stos
imul
in
xchg
in
insl
cmpsl
shlb
popl
jecxz
addr16
xchg
sbb
fsub
gs
adc
ss
lahf
inc
jmp
mov
pop
mov
dec
pop
and
jno
push
cmpsb
and
call
jg
js
lret
xor
imul
and
mov
loop
loopne
jg
aaa
inc
xchg
mov
aaa
ret
xor
push
and
pusha
add
sbb
xor
and
rolb
inc
pop
aas
je
aad
idivl
jge
mov
in
and
xchg
bound
fwait
inc
stc
test
mov
add
xchg
xor
aad
mov
mov
clc
lods
jg
xlat
cwtl
jbe
cs
lock
test
mov
aam
inc
call
pextrw
sbb
sub
add
xchg
fwait
aas
mov
sbb
clc
jg
in
fistpl
je
adc
lds
into
ret
loop
mov
divl
stos
mov
xorl
sub
sbb
mov
mov
out
out
mov
movsb
mov
aam
sti
pop
loope
ret
pop
je
lods
aaa
adc
shr
jns
pop
int3
jmp
inc
movsl
mov
movsb
jne
mov
sti
or
xchg
or
push
sbbl
divl
cltd
sub
and
orl
add
mov
mov
sahf
ds
jno
rcll
sub
sbb
dec
xchg
cmp
std
push
jbe
lds
stos
cmpsl
pusha
lds
scas
lods
xchg
jp
imulb
jmp
adc
mov
pop
jae
pop
mov
loop
outsb
je
jne,pt
xchg
sarl
pop
ret
or
push
and
mov
push
jnp
xlat
xchg
nop
shll
aas
in
fcomps
in
adc
leave
outsb
shrb
and
or
cmpsl
add
fwait
jecxz
lds
lds
shll
lret
mov
ret
pop
je
mov
xor
ret
clc
and
jae
or
pop
pop
out
add
rol
int3
loop
push
push
mov
rcl
adc
push
int
loopne
push
mov
lret
push
sbb
jle
sub
sub
ror
jle
adc
je
xor
lods
jno
jp
sbb
mov
inc
cwtl
mulb
scas
xorl
mov
xor
mov
ljmp
sahf
mov
inc
clc
lahf
mov
sub
add
inc
fbld
mov
or
inc
cmpsl
fs
out
or
sbb
jle
pushf
in
lcall
pop
sti
cs
cmc
lea
nop
mov
lea
xchg
mov
inc
int3
hlt
clc
xchg
enter
fists
cwtl
sub
jns
inc
push
sub
mov
jmp
xor
popf
dec
mov
inc
xor
aaa
sub
jbe
enter
shll
fxch
rol
inc
sub
mov
xchg
cmp
sub
lock
fildll
dec
xchg
pushf
pop
mov
cmpb
testb
mov
shll
insl
add
push
inc
imul
addr16
jecxz
xlat
js
sti
imul
sub
es
fidivl
pusha
xor
ds
cwtl
and
test
inc
jecxz
mov
adc
aam
adc
repz
cmp
cmp
and
fldl
cmp
sbb
xchg
sahf
cs
jge
ret
dec
add
lret
inc
push
jle
jnp
sub
ds
fcmovnb
stc
push
ret
jne
call
mov
inc
sarb
mov
sbb
insb
sbb
shl
sti
pop
dec
cli
sbb
cmp
ss
stos
mov
aad
fistpl
inc
movsb
imul
sub
mov
nop
cmp
mov
shl
add
rorb
movsl
int3
clc
mov
jae
adc
lcall
jg
mov
int
fisttps
ljmp
add
sbbl
pop
and
test
jnp
fldt
outsb
mov
ret
or
or
arpl
mov
ljmp
xor
sahf
scas
xorl
in
sub
fistl
aad
popa
cmc
scas
push
dec
ljmp
dec
xorw
jns
imul
pop
jg
fcompl
ret
push
sub
sbb
in
iret
adc
inc
and
cs
sbb
mov
sbb
test
xchg
mov
mov
xchg
push
jp
scas
dec
cwtl
mov
and
mov
cmc
sbb
pop
push
imul
repnz
push
int3
orb
xor
pushf
mov
lahf
in
mov
jno
push
xchg
fdiv
mov
inc
pop
loope
inc
mov
jp
shl
jne
jnp
test
ret
xchg
mov
pop
lods
movsl
scas
ljmp
nop
dec
add
dec
inc
sub
pop
sbb
push
roll
inc
movsb
sbb
mov
pop
jno
push
pushf
sub
and
shll
in
jp
cmp
outsb
xchg
and
xor
jl
and
push
arpl
gs
fwait
inc
out
pop
rcr
jo
xchg
fidivrl
push
add
outsl
cmp
repz
or
push
es
push
pop
shll
mov
mov
sahf
popf
or
in
dec
ret
xchg
loope
add
adc
clc
or
daa
xchg
mov
inc
ds
in
ss
push
les
or
cli
clc
pop
sbb
std
jb
fld
orl
lods
data16
dec
dec
mov
push
mov
add
test
in
xchg
mov
cld
popf
adc
decl
loopne
mov
mov
push
cmp
sbb
test
pop
mov
fimuls
jge
div
fwait
xchg
cmc
ja
and
cmp
or
enter
mov
xchg
cli
hlt
xlat
push
cmc
mov
ja
movsl
mov
loopne
lret
sar
shrl
push
and
adc
jge
mov
test
movsl
out
add
loope
aaa
js
sbb
xor
pushf
fwait
outsb
pop
mov
jle
mov
frstor
cltd
fidivrs
aaa
jmp
mov
sub
jl
add
ljmp
dec
jg
and
mov
sbb
fs
in
je
xchg
js
mov
hlt
mov
orb
aaa
push
mov
sarl
jecxz
gs
pop
ficomps
add
movd
sub
push
out
das
xor
icebp
fstpl
inc
sbb
add
cmpsb
and
sub
inc
add
mov
outsb
into
addr16
jle
xchg
lret
adc
mov
jmp
inc
nop
sub
push
scas
daa
and
sti
mov
pop
xchg
pop
xchg
xchg
sub
sub
inc
dec
xorb
xchg
pop
cmp
test
jno
mov
mov
in
fcomps
mov
or
jbe
or
ljmp
int
divl
pop
xchg
mov
mov
es
sbb
sub
sbb
and
mov
cmp
mov
and
push
mov
in
shrl
push
pop
sub
cmp
testl
imul
adc
cmpsb
cmp
add
jno
cmpsb
cmp
out
int
idiv
add
sbbl
xchg
es
jb
orb
orl
adc
mov
fsubs
test
and
ja
or
in
js
sahf
fiaddl
add
mov
daa
or
mov
scas
mov
xorb
mov
lret
std
shl
loope
and
aas
add
fldt
shlb
mov
fiadds
fldl
dec
rcrl
xchg
and
icebp
push
call
inc
cmp
out
in
dec
push
enter
imul
subb
mov
mov
push
aad
jne
sub
xor
mov
cli
and
arpl
pop
aad
lods
jo
hlt
push
cld
test
rcll
lods
jne
orl
cwtl
push
stos
add
enter
popa
jb,pn
push
xor
push
cmp
mov
jl
push
lock
pop
aad
cli
sub
mov
mov
xchg
and
lret
mov
stos
lret
push
in
xchg
stos
in
jle
ljmp
std
sub
cmpsb
mov
js
mov
test
and
jp
inc
mov
jg
cmp
xor
mov
out
pop
rclb
pushf
pop
jge
outsl
fldl
sub
mov
enter
inc
mov
mov
dec
stos
push
inc
fsubrl
adc
mov
sub
add
popf
std
cmp
stos
fcomip
out
add
sbb
call
mov
xchg
cld
mov
push
sahf
insl
adc
jno
imul
xchg
into
insl
repz
sub
adc
pop
or
jbe
cltd
push
mov
pop
inc
ret
lods
repnz
fcoms
push
mov
mov
out
out
lahf
cmp
push
outsb
dec
std
push
lret
cmp
popf
movb
xlat
sbb
push
imul
sbb
ret
dec
cwtl
iret
flds
mov
inc
mov
inc
cmp
xor
sub
mov
jp
out
imul
mov
push
xchg
cld
shr
ficoml
sbb
mov
mov
out
or
mov
or
fidivrl
xchg
in
lds
and
xchg
mov
jnp
pushf
rcl
stc
and
jae
fistpl
mov
and
xchg
lcall
pop
shlb
jo
and
mov
mov
fiadds
shrb
mov
mov
xchg
fnsave
add
loopne
testb
pop
jne
sbb
pop
addr16
push
sub
and
orb
push
cmc
data16
pop
fdivr
xlat
xchg
loope
stos
pop
or
aad
aaa
mov
xchg
or
adc
xchg
inc
mov
lahf
popa
pop
dec
aaa
xor
xorb
inc
inc
jns
jne
push
or
pop
inc
scas
add
xchg
add
jmp
xor
adc
add
pop
add
mov
int3
xorl
loopne
ret
das
add
int
lods
push
xchg
cld
mov
xchg
pop
lahf
adc
insl
loope
sub
fildll
dec
fs
test
aad
sub
sbb
cmpsb
mov
clc
into
and
repz
in
and
insl
js
daa
pusha
mov
pop
pop
jmp
out
aas
mov
inc
mov
fcmovnu
sub
cmp
push
cmp
sub
je
pop
repz
out
mov
push
call
inc
mov
mov
sti
test
inc
fwait
fwait
or
sahf
inc
movsb
lahf
adc
stos
sub
and
arpl
ror
xchg
push
sahf
sti
sub
jo
in
and
or
jne
cwtl
pop
mov
dec
mov
fildll
push
les
lret
or
cmp
cmp
xor
je
dec
lods
and
or
sub
jns
and
pop
fldt
insb
inc
mov
adc
pop
ja
sbb
insb
aas
mov
nop
in
and
dec
sub
jbe
icebp
sbb
push
imul
insb
xor
data16
in
aas
outsb
loopne
mov
cmp
sbb
push
pop
dec
lods
and
orb
mov
jle
imul
adc
and
lea
jl
cmpsl
sbb
arpl
push
loopne
push
and
in
popa
push
out
jmp
mov
inc
aad
mov
xor
inc
dec
dec
push
and
xchg
nop
rcr
les
sbb
rolb
pop
or
out
sub
test
insb
shl
shll
adc
enter
clc
cmpsl
shrb
in
test
scas
es
jecxz
test
and
enter
mov
andl
imul
xchg
outsl
ljmp
sub
imul
repz
mov
cmp
xchg
mov
pop
xchg
cmpl
or
push
out
ja
enter
ljmp
cwtl
cmpsb
inc
fiaddl
faddl
mov
js
cmp
sbb
jno
mov
das
adc
dec
adc
xlat
jnp
daa
or
mov
movsl
sbb
sbb
mov
es
cli
inc
push
xor
fstpl
add
lock
fistl
adc
cmpsb
dec
push
leave
mov
ss
sbb
mov
out
aas
setge
insl
xchg
bound
es
and
repnz
shl
push
jp
shll
iret
imul
aad
outsb
insb
pop
adc
imul
out
push
mov
lods
mul
adc
mov
faddp
popa
pop
movsb
mov
xor
call
aas
jge
dec
ljmp
sbb
iret
in
xorl
adc
xchg
pop
call
sti
nop
outsl
jle
jl
push
lahf
jbe
iret
cli
mov
pop
lds
mov
jne
xor
or
mov
sahf
in
pop
jbe
repnz
adcl
je
fmull
cmp
jno
nop
test
push
loopne
cmpsl
sbb
aam
cmp
sub
lret
js
mov
jl
fdivrl
pop
dec
jne
fxch
lds
xchg
test
mov
or
dec
cmp
xlat
or
addr16
mov
lret
sarb
mov
gs
push
cld
clc
mov
pop
xlat
sub
das
dec
sbb
mov
imul
adc
pop
or
gs
dec
pop
int
xlat
sarb
and
aad
or
sahf
js
cltd
push
mov
pop
loop
es
jmp
xchg
mov
ret
cmp
inc
idivb
mov
mov
add
mov
mov
js
test
scas
mov
dec
adc
jl
xor
test
cli
repnz
sub
pushf
adc
mov
mov
jne
xchg
outsb
cmpsb
into
push
es
aad
mov
rolb
sbb
push
sub
push
flds
es
popa
cltd
pop
stos
cmpsb
sarl
aaa
xor
cs
imul
pop
jno
mov
out
xchg
stc
sub
enter
pop
inc
dec
pop
jmp
xchg
jmp
hlt
dec
push
push
adc
fbstp
add
sarb
xchg
push
xor
cmpsb
cwtd
inc
sub
pop
rorb
and
mov
inc
pop
test
xorb
lret
xchg
and
sti
sbb
cs
insl
daa
lock
and
movsb
cmc
sbb
jmp
xor
mov
insb
mov
pop
inc
sbb
sbb
pop
inc
mov
cmp
fwait
ljmp
dec
jb
push
out
xchg
mov
int3
int3
sahf
das
in
pushf
icebp
fwait
ret
negl
and
popa
pop
shl
mov
out
mov
scas
inc
movsl
jle
filds
iret
stos
sarl
dec
dec
dec
das
lods
fs
pop
mov
int
inc
lock
int
lcall
into
lods
mov
loop
rcrb
pop
fdivrp
xchg
cli
push
test
xor
cmp
sbb
out
sbb
mov
push
mov
lret
aad
shl
push
mov
subb
popf
jnp
fsubrs
push
rorl
lods
push
mov
movsb
lods
jl
adc
xor
test
sub
cmpsb
lcall
mov
adc
imul
cmp
jmp
dec
jg
mov
outsb
mov
adc
mov
das
mov
jle
xor
clc
in
test
sub
xchg
pusha
cmp
idiv
mov
pop
jo
mov
loop
adcl
pop
cld
out
cmc
dec
mov
jb
dec
lahf
and
stc
push
sar
imul
jmp
jl
sbb
sub
pop
dec
std
jb
pop
dec
push
pop
jle
jb
add
xchg
pop
mov
mov
adc
mov
scas
adc
mov
push
insb
pusha
lret
bound
cmp
add
adcb
js
dec
push
mov
sbb
mov
dec
rcrb
pop
lcall
rol
movsb
sub
ja
and
popf
cmpsb
out
mov
or
out
iret
pop
inc
jge
pop
add
out
rorb
cmp
std
xor
xchg
mov
inc
dec
inc
fiaddl
in
jle
out
addr16
movsl
test
testb
sbb
nop
jbe
mov
xchg
movsl
aam
inc
iret
enter
arpl
mov
fs
jp
push
pusha
je
bound
pop
ljmp
loop
or
and
pop
sahf
dec
js
push
stc
test
mov
subb
jne
inc
xchg
repz
ja
mov
dec
ds
dec
aam
mov
mov
xchg
push
dec
fcoml
sbb
fimull
push
pop
cmc
scas
clc
xor
jg
sub
insl
arpl
cmp
test
bound
sbb
jge
mov
jo
loopne
xchg
sti
in
mov
aad
xor
jecxz
push
pop
daa
push
cmpsb
cmp
sbb
pop
aad
adc
jo
dec
mov
mov
xchg
ret
lret
mov
pop
and
icebp
adc
cs
push
repnz
pop
or
call
lds
jae
pop
dec
xor
stos
xchg
mov
inc
ds
and
ds
enter
and
adc
pop
pop
mov
xor
or
push
xor
in
sbb
mov
loopne
mov
sbb
movsl
pop
stos
pop
xor
clc
xchg
jno
mov
pushf
cmc
leave
rorl
popa
icebp
cs
inc
xor
push
xor
mov
gs
push
ljmp
loope
pop
mov
iret
inc
sub
imull
jns
je
mov
test
xor
mov
leave
repnz
les
fwait
or
pop
sti
mov
enter
repnz
mov
push
jle
ss
call
les
into
and
ret
ss
or
aam
scas
test
push
xor
add
arpl
roll
push
mov
es
repz
js
mov
and
ret
jae
std
and
jp
es
lret
pop
mov
push
jg
push
mov
lret
in
or
mov
pop
fucomip
inc
dec
call
es
inc
int3
cli
push
aad
int
jg
pavgw
push
mov
insl
xlat
ret
or
loope
pop
insb
mov
gs
shrb
cwtl
std
out
popf
jecxz
fisubrs
scas
outsb
adc
scas
pusha
or
cmp
mov
adc
cmp
pop
fs
imul
adc
inc
clc
pop
and
lahf
mov
mov
fistpl
mov
ljmp
ficompl
mov
mov
dec
jecxz
loopne
rorl
inc
adc
and
xchg
rorl
arpl
mov
ljmp
add
inc
aam
cmp
xchg
inc
inc
test
dec
sbb
sbb
push
fnstcw
es
xor
stc
inc
out
or
hlt
ljmp
and
mov
mov
sub
insb
out
stc
aad
push
out
fucomp
fidivs
xchg
mov
inc
mov
repz
xchg
cs
push
mov
sti
xchg
cmp
pop
cmp
push
stos
and
jle
mov
popa
and
cli
or
in
cld
jo
lcall
stc
imul
mov
adc
sbb
add
mov
cwtl
xor
neg
inc
sub
insb
push
xchg
out
push
out
add
sbb
bound
lret
sub
int3
loopne
cmp
repz
in
cmpl
popf
fisubrl
int3
sub
xorb
pop
lods
outsb
cmp
rorl
dec
mov
sub
popf
mov
lods
adc
fstps
repz
aam
cmp
lret
jae
xor
popa
push
les
xlat
out
pop
aad
cli
jns
sbb
push
inc
and
int3
jbe
cmp
insb
fbstp
sti
jmp
mov
adcl
stc
add
mov
xchg
aad
les
sbb
push
jb
adc
into
orb
dec
out
or
shll
adc
je
mov
dec
mov
icebp
stc
mov
jno
cli
cmpsl
jns
cmp
int3
rorb
sbb
out
inc
pop
shr
dec
and
push
mov
xor
jge
xor
pusha
jae
push
sbb
loopne
in
les
shlb
adc
xchg
dec
mov
adc
push
mov
es
test
shlb
pusha
fldenv
cmp
push
leave
jp
repz
push
cvtpi2ps
jns
xor
sub
stc
push
pop
lret
clc
xor
jo
mov
outsb
mov
xchg
test
cmp
rolb
enter
aad
push
in
and
icebp
inc
call
inc
loop
aam
push
or
inc
push
inc
addb
fsubrp
xchg
cmp
rcr
xor
jns
dec
and
lods
push
mov
sbb
cmp
xor
inc
push
sarl
movsb
mov
ret
fiadds
push
cmpb
cmc
loop
mov
inc
ljmp
out
sti
inc
cs
push
shr
imul
mov
push
rcl
pop
xor
cld
push
mov
inc
inc
add
dec
fldenv
add
pop
inc
je
stc
inc
inc
cmp
outsl
cmp
jp
push
mov
add
mov
dec
mov
les
xor
sbb
lahf
incb
jae
push
daa
es
sar
lea
arpl
or
sbb
pusha
movsl
xchg
push
ficomps
loope
pop
dec
jg
in
and
xchg
das
inc
into
jp
decl
sub
xor
loope
leave
mov
aam
aas
pop
xchg
jmp
jmp
into
add
xchg
dec
test
out
hlt
lea
sti
or
lods
xchg
std
pop
pop
lods
push
in
push
adc
mov
jno
cmpsl
enter
add
fwait
data16
sbb
jb
sarl
sub
mov
add
inc
je
xor
std
subl
cld
in
mov
rorb
or
sbb
lret
das
out
sub
xchg
push
mov
push
sbb
xor
mov
push
or
xchg
add
repnz
cmp
adc
cmpsl
adc
sbb
scas
adc
sub
dec
push
push
xchg
xchg
sti
push
or
cmpsb
xorb
aaa
ljmp
jno
jns
pop
add
add
ficoml
shlb
cmp
fnsave
lea
lcall
pop
push
xchg
mov
iret
pop
jp
push
mov
scas
mov
dec
mov
inc
jp
jp
stc
repz
xchg
movsl
shll
dec
push
pop
jnp
push
mov
cltd
mov
mov
data16
out
pop
lea
inc
inc
popl
sbb
adc
ss
mov
test
int3
arpl
push
fmuls
imul
inc
enter
in
lret
scas
divb
inc
jecxz
jo
adc
mov
out
lds
dec
cmp
xchg
inc
pop
scas
repnz
imul
push
ljmp
aam
xor
and
pop
add
aas
subl
adc
in
push
xor
xchg
add
js
repnz
mov
shlb
cld
in
int
sbb
sub
sub
pop
fwait
loop
xchg
test
ljmp
mov
pop
out
adc
xchg
into
jnp
movsl
stc
out
fistpll
pop
or
cmpsb
or
cmp
add
das
scas
int
mov
stos
test
fwait
xor
inc
mov
ja
jge
dec
data16
mov
leave
insl
das
fldcw
mov
dec
dec
cmc
sbbl
test
sbb
or
popf
movsl
xchg
add
es
add
fwait
pop
rolb
repz
cmpsb
xchg
lret
int3
scas
enter
or
js
stos
mov
mov
pop
add
sub
les
int3
ljmp
fnsave
into
adc
in
sbb
adc
fnstcw
mov
inc
imul
clc
out
push
out
xor
jle
and
aad
xor
cmp
js
repnz
ds
fidivrl
aam
push
sub
insl
push
outsl
dec
jmp
std
ja
jbe
pop
jge
sarl
loop
ud1
lahf
inc
mov
aaa
cmpsl
clc
call
scas
fwait
ja
cmp
mov
ds
or
sahf
cmp
ss
lods
and
or
sbb
leave
fldt
and
jle
mov
jp
sub
push
adc
inc
loope
lret
adc
mov
sti
jae
mov
mov
pop
add
jnp
push
mov
shlb
sbb
sub
sbb
cmp
jo
repnz
cmpsl
pop
decb
test
sub
or
cmpsb
das
outsb
jae
insb
or
test
mov
fbld
push
js
mov
sbb
shlb
mov
pop
xchg
mov
cmpsl
stc
push
ljmp
or
inc
ret
xchg
out
add
mov
fimuls
cmp
xchg
repnz
std
pushf
test
mov
fisubrs
dec
adc
sbb
aas
ret
stos
add
roll
loop
or
into
cmp
sbb
aad
movsb
fisttpl
sti
dec
lods
rcl
js
jmp
outsb
cmpps
inc
pushf
ret
inc
jo
es
inc
cmpsb
cli
shr
mov
add
movsl
popa
roll
es
addb
stc
cld
adc
pop
test
lret
fsubs
subl
stc
ret
mov
or
dec
dec
dec
fs
loop
fiadds
jmp
mov
icebp
in
jnp
jmp
fdivrl
pop
mov
aas
mov
jns
jb
es
enter
js
cmpsb
pop
sub
jns
and
xchg
sbbl
ficomps
pop
shll
sub
cmp
lods
fcomps
clc
inc
fbstp
test
mov
popf
mov
cltd
into
add
stos
mov
fldenv
sbb
jp
jmp
and
or
mov
push
aam
add
adc
jo
arpl
dec
aas
fnsave
imul
arpl
sbb
insb
adc
movsl
dec
js
mov
sbb
xor
jecxz
mov
xchg
lcall
cmpsl
inc
loop
fdivs
fdivrl
push
das
fcoml
adc
leave
inc
push
imul
sbb
ficoms
xor
jg
pop
pop
test
adc
cmp
adc
lods
add
or
xchg
out
sbb
mov
jne
sarb
jp
fistl
mov
xor
repz
add
inc
push
pop
adc
popf
pushf
cmp
xchg
push
mov
xchg
fildll
push
pusha
lret
enter
jmp
xor
out
dec
sti
ljmp
mov
outsb
insl
ret
or
imul
in
mov
xlat
cmpsb
mov
pop
and
adc
push
imull
sub
flds
and
cmc
rolb
mov
pop
inc
push
add
sbb
push
hlt
stos
adc
inc
shr
mull
pushf
repz
cmp
fisubrl
shr
test
dec
sbb
lcall
inc
repz
pop
dec
xchg
sbb
inc
fldenv
mov
push
cmpsl
push
in
call
in
xor
jecxz
or
ja
mov
mov
jl
and
fwait
add
push
mov
mov
int
out
inc
dec
ja
mov
jge
ficoml
iret
call
jecxz
xchg
xor
int3
movsb
and
pushf
xor
push
inc
mov
test
sub
mov
cmp
lcall
lock
movl
add
xor
add
sub
test
inc
jo
pop
aaa
leave
outsb
push
add
dec
push
pop
fwait
hlt
push
push
mov
je
pop
imul
push
sbbl
in
mov
imul
xchg
sti
or
pop
mov
xchg
inc
mov
scas
arpl
cmp
sub
repz
pusha
and
pop
mov
mov
mov
sub
scas
push
xchg
cltd
mov
adc
push
mov
inc
fisttpl
mulb
insl
pop
pop
inc
rol
mov
push
enter
fwait
in
push
lds
pshufw
xchg
jecxz
in
jl
cmp
inc
outsb
pop
push
das
mov
fisubrl
jb
stc
clc
inc
push
push
xchg
mov
sti
push
mov
ja
sub
push
in
xchg
adc
mov
test
sub
xor
sbb
loopne
sarl
mov
insb
shlb
and
xchg
aad
mov
and
aad
bound
ds
sub
fidivrl
xor
inc
or
cs
xor
rcrb
aad
xor
movl
dec
or
xchg
inc
push
jp
cli
not
test
das
mov
jnp
and
mov
fs
jecxz
adc
push
mov
das
lods
ror
push
and
clc
fldl
cmpsb
cld
icebp
gs
aas
jae
cmp
jmp
jns
push
and
mov
mov
inc
repz
ds
xor
cmp
movntps
sub
xchg
loop
sbbl
sbb
jle
push
dec
xor
mov
fisubrs
jge
push
inc
insb
inc
jmp
sbb
sub
and
push
jl
int
clc
enter
inc
xlat
or
lcall
cmp
movsb
dec
sub
inc
movl
push
sub
rcrl
jae
test
or
jb
mov
sahf
movsb
sbb
and
jmp
push
divb
les
mov
cld
clc
cmp
cld
mov
out
adc
mov
dec
scas
addr16
scas
fldenv
and
sub
pop
cs
dec
push
jae
mov
xchg
mov
mov
lret
insl
xor
add
mov
xor
push
jne
cld
mov
and
nop
jp
pop
mov
mov
pusha
jp
dec
cli
mov
jmp
push
popa
ror
pop
pop
repnz
and
inc
mov
and
cmpsl
pop
push
dec
mov
loope
mov
stc
inc
cmp
jns
sub
push
adc
mov
pop
imul
cmp
sbb
lahf
out
adc
push
cmp
das
xchg
add
lret
addr16
dec
sub
loop
jle
pop
mov
icebp
jmp
mulb
dec
loopne
lods
rcl
mov
cmp
adc
push
loopne
dec
mov
jl
mov
outsb
xchg
pushf
insb
scas
out
test
cmc
in
inc
dec
xchg
iret
arpl
jbe
jns
sbb
sub
sub
idivb
mov
dec
fwait
ret
sbb
lods
scas
out
mov
and
out
enter
faddl
mov
mov
bound
bound
pop
scas
inc
test
jne
add
xchg
mov
clc
adc
sbb
sub
int
cli
xchg
mov
aaa
xor
je
dec
rcll
fimuls
dec
cld
or
aaa
push
push
sbb
mov
inc
cld
cmp
sahf
sbb
push
mov
scas
clc
jne
fsubs
rorb
adc
sub
insb
movsl
or
in
repz
dec
std
xchg
rcl
std
push
roll
xchg
mov
stc
das
gs
mov
dec
xchg
scas
ja
xchg
sti
and
into
xlat
rcr
push
sub
cmp
cmpsl
adc
call
sub
pop
mov
sub
add
rcr
data16
cmpsb
push
ret
fsubs
jge
aad
mov
sbb
leave
mov
inc
push
gs
pop
and
push
xchg
add
xor
ljmp
xor
lahf
loope
je
orb
fsubl
loop
scas
std
jne
mov
cmp
push
movb
cwtl
add
popa
push
push
stos
inc
pop
cmp
cmpsl
jo
cwtl
std
sub
dec
pop
loope
lds
ret
test
sub
lea
mov
pop
pop
xchg
add
out
fadds
scas
and
ret
movsl
fwait
inc
adc
add
push
jne
push
aaa
push
xchg
popf
lock
rcrl
and
adc
cmp
call
pushl
and
mov
inc
adc
inc
imul
push
nop
push
push
mov
and
mov
fsubs
sbb
cld
loop
pop
aam
jae
icebp
shll
repnz
push
fldenv
cmp
dec
popf
push
cmp
outsb
daa
mov
push
stos
pop
lahf
and
mov
jne
push
dec
cmpsb
xor
cs
add
add
cmpsb
mov
sti
xchg
shll
add
movsl
push
pop
cmp
add
sbb
mov
icebp
stc
cmc
vcvtss2si
aad
sahf
jo
and
fdivs
loopne
jnp
sbb
add
call
sti
ret
enter
inc
pop
pop
rcrb
push
fisttpl
rcll
and
repnz
lds
stos
sbb
sub
adc
mov
mov
xor
ficomps
nop
mov
scas
mov
push
lcall
add
andl
sub
jmp
push
cwtl
xchg
mov
add
inc
out
cli
cmpsl
hlt
dec
mov
pop
out
dec
dec
sbb
negl
inc
jbe
sbb
jb
ljmp
inc
jp
iret
lret
mov
int
rcll
adcl
push
out
xchg
fisubs
push
xchg
js
movsb
mov
adcl
ficompl
insl
jbe
les
pop
mov
lea
cmp
adc
xor
ljmp
gs
je
mov
inc
pushf
sarb
shlb
in
xchg
mov
add
adc
sbb
pop
test
cs
add
sbb
mov
stos
jge
dec
vphaddbw
fwait
xorb
ljmp
add
or
fidivrl
test
dec
sbb
orb
push
sbb
scas
test
xchg
mov
sbb
js
jge
ficoml
cwtl
push
xchg
addr16
cmpsl
mov
dec
push
pop
data16
push
or
bnd
and
fbld
fucomp
jg
mov
jecxz
movsb
or
ret
jge
cli
and
cmp
mov
sbb
leave
or
call
mov
roll
pusha
out
lret
inc
sbb
fwait
cs
sub
sarl
jge
inc
add
bound
sub
sub
sahf
sbb
inc
leave
push
imul
jbe
cltd
outsb
cmp
cmpsl
cmp
adc
es
add
pushf
loope
pop
out
out
stos
adc
cmp
subb
in
xor
insb
pop
cmpsl
ret
inc
and
std
pusha
jmp
inc
jle
popf
jge
sahf
push
push
and
adc
hlt
scas
je
mov
lret
sbb
dec
clc
mov
xchg
popf
hlt
dec
fs
je
jg
int3
pop
insb
and
cmc
shll
pop
mov
mov
imul
lock
xor
mov
adc
cmp
xchg
adc
sub
mov
mov
out
pop
in
into
mov
and
bound
xchg
sbb
sbb
push
add
in
inc
call
stos
mov
mov
movsl
sbb
push
sub
pop
xor
adc
fwait
jmp
or
int
popa
xchg
lds
jne
mov
imul
aaa
fcomps
and
push
xchg
push
push
scas
mov
add
mov
dec
or
dec
push
mov
in
dec
aas
xchg
andb
jp
lods
imul
in
and
pushf
push
dec
pushf
aad
mov
add
insb
aad
xchg
data16
cmp
stc
add
xor
inc
inc
test
loop
adcb
mov
jp
outsb
lahf
sub
mov
rorb
sbb
mov
lods
add
push
neg
and
inc
cmpsl
arpl
in
cmp
sbb
jne
dec
jno
sbb
addb
adcb
popf
dec
ret
sbb
pop
aas
out
xor
cmp
cmp
hlt
jns
sbb
jae
sbb
push
ja
cs
data16
mov
lods
cli
out
lahf
out
hlt
movsl
adc
lahf
mov
sub
or
in
pop
cmpsb
jmp
push
call
or
fldcw
int
xor
jle
shlb
mov
push
mov
ret
or
push
dec
dec
imul
cld
mov
fsubr
das
xlat
xchg
ss
xor
push
clc
enter
xchg
popa
mov
lcall
in
xchg
jne
std
adc
mov
cmp
cmp
jecxz
jle
add
sub
roll
inc
mov
lret
sbb
dec
aad
pop
push
data16
inc
test
pusha
jno
mov
mov
lds
mov
repz
sub
push
pushf
lds
arpl
push
or
adc
pop
test
xchg
mov
add
sbb
add
jno
insb
and
cmp
inc
mov
ficomps
push
pop
faddl
stos
cmp
or
jb
cmp
jns
in
mov
bound
mov
cld
sub
pop
push
das
mov
sub
mov
sbb
mov
cmpsl
dec
icebp
test
fcomp
stc
push
sub
adc
iret
pop
out
shll
jle
lcall
xchg
jmp
into
pop
xor
mov
std
cmp
cmpsl
xor
sahf
mov
inc
cli
jns
addr16
cmpb
sub
cwtl
test
shl
add
mov
stos
je
outsb
in
mul
sub
pop
lcall
insb
add
jo
outsl
jo
mov
cs
jae
mov
jo
pop
jecxz
mov
out
ja
icebp
push
push
pop
fs
out
push
ret
scas
aaa
dec
push
mov
lret
inc
add
lret
push
mov
in
fcom
adc
adc
mov
fiaddl
in
bswap
fs
fists
adc
dec
push
int
cmp
sub
jae
in
sub
cmp
ret
rcrl
dec
fcomip
jne,pn
gs
int3
jae
sub
cmp
popa
pushf
sti
jo
ror
addr16
add
bound
ret
outsb
loop
shlb
mov
push
push
aas
xor
xchg
sub
add
pop
das
inc
test
push
cmp
enter
frndint
and
movsl
insl
icebp
dec
into
mov
imul
cmp
les
in
sbb
or
cmp
xor
scas
inc
mov
sbb
scas
dec
mov
imul
imul
xchg
in
ret
repz
cmp
and
jecxz
inc
inc
mov
jg
ret
icebp
mov
into
ja
test
xchg
test
nop
ljmp
addr16
fdivl
sbb
pop
fbstp
adc
cmp
push
xlat
ja
orl
mov
adc
pop
imul
daa
mov
sbbl
test
adc
mov
push
lds
sbb
aas
mov
ds
iret
mov
das
sub
or
adc
stc
and
pop
fists
dec
sbb
push
pop
sti
lds
or
sahf
fmulp
xor
pop
add
call
or
jg
loop
sti
add
and
or
pop
lods
or
jmp
mov
add
cmpsl
xchg
aad
ljmp
cmp
into
push
xor
repz
stc
mov
mov
test
and
push
into
cmc
mov
outsb
push
xchg
dec
push
pop
hlt
xchg
gs
push
jle
pushf
stos
push
in
mov
aas
movsl
cltd
lret
sarl
les
mov
sbb
mov
pop
or
int3
add
imul
dec
push
add
in
hlt
or
and
loop
cmp
test
and
mov
rol
les
pop
mov
call
clc
xchg
jo
jo
outsl
or
sbb
aam
mov
loopne
xor
leave
ret
dec
inc
in
hlt
xchg
stos
mov
or
jae
in
adc
popa
les
ss
sti
scas
xchg
outsb
or
add
cmp
inc
loope
cmpsb
mov
sub
shll
and
loop
movsb
pop
mov
jo
push
mov
imulb
push
jp
or
stos
pop
mov
ret
ret
push
pop
arpl
xchg
sbbl
adc
je
pusha
xor
xor
or
js
jae
push
mov
mov
and
mov
out
and
into
pop
adc
xchg
imul
jge
pop
push
add
ret
or
mov
aam
push
test
dec
aam
stos
pop
push
mov
mov
mov
fstpl
les
sub
pushf
stos
mov
int3
mov
push
xor
sbb
inc
popf
int3
xor
sbb
push
jp
xchg
push
mov
mov
nop
cmp
mov
jmp
ja
xor
jg
cmp
lret
fwait
push
sub
data16
jne
shrl
push
jecxz
mov
inc
fcoms
fbld
mov
data16
sbb
and
adcl
jp
movsl
or
out
adc
sarb
inc
or
xlat
ljmp
jg
lods
gs
mov
negb
repnz
mov
jmp
fs
cs
repnz
mov
shll
in
lods
mov
imul
inc
stos
mov
push
push
push
dec
mulw
insb
fisttps
imul
les
out
in
dec
push
fbld
jnp
mov
cmpsl
xor
lods
jbe
push
loop
cmpsl
fs
es
repz
add
ljmp
mov
xorl
lcall
mov
dec
pop
jl
mov
popf
ds
repz
xor
inc
loopne
xor
mov
inc
sbb
push
mov
cmp
aad
inc
mov
sub
test
sub
sub
ss
adc
jb
in
or
sbb
shl
mov
mov
jnp
cmp
push
pop
push
mov
and
aad
jo
pop
sub
cli
mov
sub
mov
inc
mov
mov
jl
in
sbb
es
cwtl
popa
sahf
cmp
cwtl
pop
add
xor
jp
mov
movsl
test
test
add
jo
es
push
add
scas
xchg
lret
or
popf
filds
xchg
in
or
les
jecxz
in
cmp
sbb
in
in
jnp
cmp
push
pop
mov
ret
es
push
sahf
or
pop
stos
mov
pop
adc
mov
add
push
sub
call
rorl
repnz
xchg
loope
std
aam
pop
adc
adc
outsl
xor
add
sub
out
in
or
mov
inc
push
call
xchg
div
lods
mov
cmp
xchg
cwtl
in
in
or
mov
cmp
cwtl
add
test
leave
push
shl
popa
push
flds
scas
repnz
fistpll
das
mov
mov
and
sbb
mov
mov
xor
dec
sub
sbb
clc
mov
int3
push
lret
mov
adc
adc
aaa
mov
dec
aad
xchg
loopne
js
cmp
out
test
clc
mov
in
and
mov
mov
push
cmc
test
inc
and
sbb
sti
iret
rcll
pop
addb
test
lret
idivl
adcl
inc
mov
mov
lods
jg
fwait
mov
test
sub
push
cmp
inc
vandps
and
cmpsb
mov
pusha
add
insb
inc
das
cmp
dec
inc
cs
push
stc
rcrb
fdivrl
imul
dec
cmp
hlt
dec
xchg
lcall
adc
ja
or
jecxz
add
adc
xchg
xlat
lahf
movsb
mov
aad
adc
and
call
stos
and
sbb
mov
dec
push
xchg
dec
or
call
inc
xlat
cmc
mov
add
or
mov
out
adc
cmp
aas
dec
ret
aas
pop
mov
inc
fidivs
repnz
shrb
gs
add
push
ret
popf
or
stos
mov
mov
mov
adc
loope
fists
push
aaa
and
xor
stc
inc
mov
sbb
popf
fdivrs
cmpsl
mov
stos
xchg
xchg
sahf
mov
add
popl
shll
es
fnstenv
xchg
in
inc
xchg
sbb
sub
mov
test
cmpsb
arpl
mov
sbb
push
mov
in
adc
cwtl
mov
subb
xchg
jp
jmp
dec
pop
mov
out
out
sub
adc
fwait
shlb
inc
out
insl
sbb
decl
je
pop
loop
mov
out
jae
rcrb
aas
out
sub
or
mov
out
loope
jne
jnp
push
xchg
insl
sbb
mov
jmp
adc
adc
xchg
outsl
dec
stos
test
test
jmp
jns
fildl
adc
xchg
mov
ss
dec
jge
dec
lock
test
fcmovnu
xor
push
adc
ja
fwait
push
loope
cmp
inc
fwait
repnz
out
adc
fidivrs
js
in
pop
sbbl
dec
mov
add
xlat
or
and
cmp
rcl
out
rol
lds
out
jno
cmp
in
daa
push
int
loope
or
lcall
fucomi
inc
orl
sbb
dec
or
arpl
cmp
inc
xor
vmovddup
in
fisttpl
popf
fnsave
sbb
aas
cmpsb
xor
and
cli
gs
dec
push
jmp
or
rcr
rcrb
stc
sbb
ss
mov
fcmovnb
sar
push
shrl
add
jecxz
ret
jp
cwtl
xor
push
mov
insb
jnp
jl
in
and
lock
and
out
popf
mov
cmpsb
test
inc
jl
mov
ja
sti
fucomp
sti
mov
rcll
mov
mov
ret
pushf
inc
xor
ret
rclb
mov
cmp
movsb
loop
or
pop
mov
jl
fistps
lock
dec
jo,pt
adc
mov
lcall
mov
dec
xchg
nop
test
lods
stos
pop
jae
js
mov
inc
push
jbe
jns
adc
or
shrl
das
xlat
pop
aas
cvtdq2ps
xor
ja
loopne
in
test
sbb
cmpsb
stc
add
out
xor
shll
inc
aaa
add
jo
mov
push
mov
and
xchg
cld
lods
dec
jecxz
push
xchg
and
and
and
cmpsl
push
ss
mov
mulb
out
push
out
shll
xor
add
xchg
dec
ds
sub
cmp
shlb
push
arpl
dec
jae
std
xchg
ljmp
adc
mov
mov
jo
cld
in
fisubrl
lret
lea
cltd
pop
jne
das
cmp
in
pushf
int3
rorl
data16
in
push
push
jbe
into
leave
sub
cmp
loopne
lret
add
test
sbb
push
push
not
rolb
loopne
cmp
scas
mov
add
mov
test
push
xor
sub
mov
lret
adcb
aam
push
out
jnp
mov
test
outsl
mov
xor
int
xchg
and
mov
cmp
rcll
leave
scas
stc
mov
jecxz
shr
mov
inc
xchg
mov
movsb
push
inc
repnz
add
in
or
fcoms
popa
into
js
mov
jo
fs
out
sub
mov
push
js
cld
inc
out
cmpsb
test
rclb
cwtl
test
adcl
cmpsl
adc
shrl
jbe
jle
in
nop
push
inc
dec
movsl
sbb
or
jg
dec
jns
add
ljmp
shlb
xchg
aad
add
das
inc
xchg
fisttps
jecxz
jg
into
dec
adc
loop
mulb
sub
popa
outsl
mov
jecxz
and
xor
sub
lahf
xchg
mov
popf
pushf
dec
mov
adc
sbb
cmp
mov
sahf
sub
hlt
or
sahf
xor
pop
xor
jae
shrl
les
inc
andb
popa
test
dec
aad
xchg
mov
out
pop
xchg
repnz
repz
popf
pop
xchg
clc
add
in
popa
jle
push
jge
ss
shl
ljmp
daa
mov
cmpb
cmc
mov
into
in
int
ret
or
mov
aas
pop
imul
test
push
sbb
xchg
data16
push
fbstp
add
add
xor
adc
mov
movsb
lds
orl
call
adc
sbb
enter
popf
adc
jge
clc
das
shrl
pop
adc
or
lcall
insb
and
mov
test
add
inc
inc
inc
adc
rcll
scas
pop
fisubs
cld
iret
pop
adcb
int3
lcall
shll
lret
in
dec
pushf
lcall
ja
jl
dec
loope
mov
add
test
cmp
out
jmp
inc
cmp
mov
test
icebp
popa
lahf
in
xchg
jo
dec
out
cmp
adc
sbb
mov
and
and
fcmovnu
insl
lret
pop
popf
push
jle
xor
jbe
divb
pop
pop
add
inc
icebp
stos
into
nop
pop
arpl
les
adcl
jb
or
mov
lcall
mov
jmp
xchg
jecxz
or
xor
xor
hlt
ljmp
dec
sub
hlt
pop
sti
and
int
ljmp
pop
into
xor
daa
inc
stos
sbb
inc
fldpi
mov
das
inc
inc
jnp
test
push
sbb
fwait
cltd
movl
mov
frstor
mov
popf
inc
in
xchg
cmp
cmp
mov
mov
push
clc
xor
leave
mov
xor
lods
cmpsl
ljmp
pop
fdivrl
adc
frstor
movsb
push
dec
mov
add
sbb
outsl
sub
sbb
shrb
sbb
cmp
inc
shlb
mov
jae
in
pop
push
sahf
mov
scas
dec
scas
cmp
ja
cltd
adc
insb
imul
loop
enter
aad
sbb
mov
cld
add
mov
test
pop
and
mov
inc
sbb
jno
mov
xor
sub
mov
or
fdiv
add
das
inc
jl
loope
adc
add
xchg
ss
push
mov
stc
mov
iret
and
mov
addr16
mov
icebp
ja
inc
push
adc
xchg
xchg
shrl
mov
lahf
sbb
pop
push
xchg
mov
adc
inc
xchg
mov
sub
dec
jecxz
fistpll
pop
icebp
xchg
mov
leave
fdiv
negb
pop
pop
inc
out
int
repnz
push
mov
xor
adc
adc
add
fs
negb
aad
xor
add
int3
icebp
ljmp
add
push
inc
and
int3
pop
cld
addr16
dec
sbb
mov
lret
in
stos
call
pop
clc
imul
stos
mov
jmp
push
movsl
add
add
pop
jne
cmp
sbb
mov
out
cld
dec
push
sbb
and
test
int3
mov
fistps
jmp
push
pop
shlb
xchg
add
pop
adc
push
inc
cmc
fwait
mov
ret
enter
test
outsl
fistps
inc
cli
cld
adc
stos
push
pop
mov
es
xchg
and
insl
pop
int
mov
fwait
dec
add
stc
sbb
mov
fnstenv
pop
mov
movsb
adc
loopne
jmp
pop
je
adc
int3
mov
xchg
or
adc
adc
sarl
int3
jnp
movsl
cmp
sbb
orb
stc
cmp
out
loope
push
stc
repnz
and
fs
mov
bound
pop
cmp
sahf
sub
pop
jbe
cld
push
fdivr
push
in
nop
daa
dec
add
sbb
out
push
lea
mov
fadd
cmp
rcl
mov
jle
repz
inc
mov
ret
aaa
repz
cmp
sahf
inc
sub
out
mov
enter
push
pop
dec
in
into
inc
pop
ljmp
push
pop
adc
les
test
cltd
cwtl
push
outsl
dec
mov
push
inc
jb
inc
mov
shlb
int
scas
mov
scas
enter
push
add
clc
flds
sub
sub
adc
cmp
cmp
xor
mov
push
mov
aad
movzbl
dec
jl
xchg
fwait
daa
ja
pop
xchg
jl
popa
mov
pop
pop
inc
push
fs
les
ja
and
sbb
mov
sub
pusha
cmpsb
lods
dec
in
int
xchg
jo
jne
xchg
dec
sbb
jnp
mov
pop
outsb
xlat
je
test
fst
and
push
adc
movsl
fs
sbb
xchg
test
jnp
sub
pmullw
in
mov
hlt
sbb
out
pop
es
inc
ss
in
aaa
or
mov
cmp
das
mov
je
mov
inc
in
cmp
es
loope
arpl
add
and
pushf
push
add
iret
stos
pop
and
adc
aad
inc
jg
cmpsb
lods
push
rcll
add
movsb
dec
mov
push
adc
pop
leave
imul
push
mov
icebp
and
cwtl
sub
int3
aaa
subb
loopne
lods
fucomi
push
icebp
inc
cmpsb
sub
push
stc
cmpsb
pop
mov
mov
inc
rcl
dec
outsl
pop
lods
add
stos
insl
andb
jb
and
dec
mov
xlat
sub
ret
lcall
loopne
shrb
mov
sbb
jne,pt
fstpt
push
mov
xlat
out
and
xchg
push
sub
jecxz
rorb
pop
jns
fcoml
pushf
or
loope
add
xchg
imul
pop
xchg
adc
ficoms
or
popa
daa
idivb
out
adc
scas
lret
loop
xchg
xchg
cmpsb
mov
xor
fwait
xor
scas
data16
hlt
add
arpl
mov
aaa
jnp
rcr
xchg
xor
test
lret
inc
and
sbb
push
psraw
rol
mov
xchg
dec
xor
aaa
ljmp
movsl
aad
sbb
lret
in
xchg
movb
sarl
mov
lods
mov
cmp
aam
scas
rcl
ss
lea
push
arpl
jb
or
push
div
sahf
fisubrs
lods
mov
cmp
aas
in
lea
mov
inc
shrb
inc
cmc
mov
sbb
jl
pop
dec
sub
ss
stos
or
pop
or
mov
xchg
inc
lahf
cmc
sub
cmpsl
test
mov
cmp
dec
rcr
fsubrs
lods
test
sbb
dec
jbe
mov
cs
fisubs
cmp
sbb
mov
aad
adc
push
pushf
and
mov
out
shl
xchg
out
mov
std
mov
bnd
iret
cmp
aaa
pushf
push
mov
lock
jae
xchg
sub
popf
lods
aam
or
or
imul
jno
addr16
inc
jo
gs
add
popf
adcl
test
bound
inc
es
orb
jge
lds
mov
test
out
sub
jmp
mov
jo
dec
fwait
pop
jl
enter
lods
xchg
mov
stos
push
mov
jmp
add
shrl
cmp
aaa
cmc
in
cmpb
xor
sub
addr16
insl
pop
add
orb
sub
sbb
stos
push
dec
into
aas
mov
pop
sti
jg
dec
xchg
mov
cli
movb
or
cltd
xchg
insb
sub
cmp
nop
push
fsts
sbb
inc
arpl
push
pushf
aad
jg
repnz
rorb
pushf
push
test
mov
loope
push
sbbb
shl
push
add
fs
out
pop
dec
or
pop
loopne
push
cmp
mov
into
cs
jo
adc
xchg
neg
gs
rorl
cwtl
xchg
jle
sahf
xchg
adc
mov
js
mov
inc
scas
add
adc
adc
xchg
loopne
repnz
out
jns
dec
cmpsl
sub
inc
xchg
xchg
xchg
std
mov
into
fimull
inc
xchg
jl
pop
add
inc
xlat
jnp
cmp
dec
sbb
and
push
stos
gs
jae
les
dec
push
inc
mov
mov
add
push
out
sub
hlt
push
and
jae
mov
xchg
sbb
and
pop
sbb
mov
daa
jbe
jmp
mov
mov
mov
pop
pop
dec
stos
jg
push
cmp
sub
sbb
cmp
pop
in
sub
cmp
lock
or
fstps
cmc
aam
out
sbb
lret
xor
fdivrp
push
js
cmp
push
adc
sbb
int
pop
sbbl
insl
xchg
and
movsb
pusha
out
adc
mov
imul
in
add
add
inc
add
insl
movsl
into
aas
sbb
lods
add
add
repz
jle
or
mov
std
cmp
jne
lcall
mov
rcrl
dec
mov
lret
mov
or
push
xchg
stos
clc
adc
in
push
repz
inc
lds
sbb
imul
stos
inc
jecxz
scas
push
push
or
add
ja
adc
dec
xchg
pop
cmp
les
mov
dec
ficoml
dec
or
shl
aad
push
sahf
push
fwait
mov
cmpsl
repz
push
inc
cmp
pop
or
add
xchg
mov
jp
mov
xchg
jge
movsl
lods
or
xchg
jmp
std
cmp
leave
pop
mov
inc
mov
addl
add
dec
test
jmp
cmc
mov
scas
dec
movsl
jo
dec
mov
cmc
pop
mov
mov
int3
decb
outsb
sub
inc
add
xchg
and
xchg
jp
xor
and
push
testl
out
cld
fsubrs
in
cmc
lods
pop
push
jnp
rcl
roll
out
dec
or
adc
sub
jmp
adc
testb
push
add
jp
movsb
xchg
loope
xchg
push
xchg
pop
jno
imul
jne
aam
pop
push
xor
fsubs
mov
notl
inc
int3
push
push
hlt
das
inc
lret
cmp
mov
jge
gs
fcoml
inc
jmp
sbbl
push
xchg
inc
cmp
aas
int
js
mov
rcl
add
and
pusha
xchg
adcl
xor
xlat
pop
pop
aam
sub
jno
mov
pop
fildl
mov
jmp
movsl
pop
mov
gs
in
xor
inc
cmp
xor
inc
cmp
in
fistpl
cs
jns
fisttps
hlt
mov
testb
mov
scas
xchg
lahf
lret
mov
xchg
adc
out
stc
ret
das
cmp
enter
aam
mov
mov
rcr
and
sub
or
in
test
stc
cs
mov
jb
sbb
add
mov
lret
and
fsubrs
gs
dec
push
mov
and
xor
icebp
lcall
test
jecxz
or
xlat
and
arpl
push
shlb
sub
cmp
xor
hlt
jecxz,pt
jno
mov
mov
leave
push
dec
pop
out
je
lods
sti
adcb
xor
out
jmp
push
iret
xchg
inc
pop
mov
push
add
cmp
xchg
daa
sahf
rcr
lock
mov
cmp
cmp
push
mov
aad
movsl
daa
xor
cmpsb
js
inc
dec
div
aaa
lret
pop
rol
shl
dec
xor
sbb
inc
daa
movsb
or
jae
mov
or
xor
ja
xchg
mov
jo
stos
xor
loope
cmc
popf
fsubrl
xchg
lret
push
mov
xor
cld
mov
push
lds
stos
push
mov
pushl
adc
in
in
push
adc
dec
cmp
push
mov
stos
repz
jmp
pop
cmpb
mov
rorl
pop
shr
lock
cmpsb
clc
lcall
mov
cwtl
pusha
mov
mov
add
loopne
scas
aad
push
cwtl
and
lods
lods
fdivr
mov
dec
in
mov
and
mov
clc
dec
or
daa
push
lcall
outsl
iret
sbb
cmp
rol
or
jp
loopne
xor
rorl
lea
int
notl
mov
jmp
stos
mov
out
repz
jmp
ret
rcrl
les
les
int
imul
jp
pusha
imul
movsl
sub
dec
mov
fisttpll
mov
sahf
sub
inc
xchg
xor
mov
sbb
push
xor
cs
das
adc
sub
jno
les
stc
ret
sbb
push
aam
jp
decb
stc
mov
push
add
scas
aam
inc
mov
push
in
dec
mov
fldt
push
push
push
jle
ja
xor
push
mov
mov
mov
popf
test
mov
ret
pop
sub
lods
rolb
jp
jae
daa
pop
and
pop
shl
dec
mov
pop
xor
shll
mov
pop
cwtl
movsb
cmp
xchg
cli
ret
in
lds
sub
push
gs
jl
repnz
lea
xchg
aad
sub
lret
jl
mov
xlat
and
aam
dec
stos
adc
and
xchg
push
or
das
outsl
pop
add
pop
push
dec
cmp
jbe
mov
or
add
dec
jbe
repnz
mov
mov
daa
nop
adc
je
movsb
and
cmp
test
xchg
lcall
cltd
pushf
iret
mov
pop
mov
xorb
mov
rorl
inc
adc
fcoms
mov
sbb
lahf
inc
adc
sbb
pop
imul
int
repnz
adc
and
adc
dec
cmpsl
inc
dec
mov
inc
or
loope
int3
xchg
clc
pop
sbb
lret
pop
or
fidivs
sub
out
in
adc
popf
dec
xchg
mov
iret
repz
mov
pusha
and
in
xor
xor
cli
fimull
mov
push
repnz
lahf
mov
xor
stc
aaa
mov
rorb
pusha
xchg
js
rcrb
sub
adc
shll
fs
shlb
outsb
adc
cltd
mov
pop
jl
jmp
adc
int3
arpl
negl
dec
push
popa
sarb
cmpsl
and
shlb
test
and
dec
daa
jno
xor
jno
and
and
inc
mov
loope
jge
hlt
add
scas
xor
out
xchg
in
test
add
or
mov
cmp
outsb
mov
shlb
fcmove
sbb
fbld
dec
and
ljmp
iret
add
and
xor
pusha
aad
and
mov
push
mov
xor
xchg
cltd
and
sti
xchg
call
sti
test
add
sahf
mov
inc
jl
lods
push
pop
jmp
jb
fwait
push
in
xor
or
add
xchg
mov
dec
cld
imul
stos
popa
cltd
mov
and
xchg
mov
fisttpl
bound
inc
xor
jmp
test
pop
dec
mov
push
sub
aas
cs
lret
ret
and
aaa
jae
add
and
jnp
fnsave
inc
ret
inc
push
sbb
sbb
clc
jl
xchg
adc
mov
mov
fwait
push
aam
popa
add
orb
enter
xchg
sbb
sbb
je
mov
jne
jl
and
cmp
flds
pop
pop
sahf
sub
xor
sub
sti
pop
lret
cmp
ret
mov
jmp
lods
dec
xlat
cli
push
stc
add
pop
xchg
mov
push
lea
shlb
cld
movsl
sbb
xchg
setp
jo
dec
jo
nop
and
sbb
sub
fs
or
aad
and
adc
dec
sub
leave
mov
mov
ss
xor
testl
aaa
inc
ljmp
pop
cmp
jp
cmp
jbe
pop
jp
inc
ljmp
addr16
adc
push
test
iret
leave
adc
add
cmp
lcall
jb
nop
or
movsl
cmp
mov
adc
xchg
xchg
mov
lock
xor
in
jae
cmc
jl
repnz
sub
cmp
sbb
xor
loop
sub
mov
xchg
sbb
jns
jo
in
pop
cld
mov
cs
jg
imul
loopne
mov
andl
icebp
cmp
mov
imul
mov
sbb
popf
xchg
cmpsb
xlat
test
pop
mov
jl
pop
mov
insb
cltd
xor
push
mov
fs
adc
xlat
clc
push
dec
xor
js
mov
aas
mov
js
testb
pop
in
xchg
add
adc
sahf
fnstsw
lret
pop
leave
dec
add
inc
xor
and
mov
bound
mov
jge
gs
rcl
inc
neg
jmp
sbb
sbb
xchg
icebp
sahf
xchg
lods
pop
xchg
xchg
cmp
xchg
pop
mov
andb
cmp
aam
push
sub
jp
out
xchg
ret
test
jae
sbb
lcall
pushf
jne
dec
inc
xor
ljmp
add
and
sbb
sub
sbbb
or
mov
insb
loop
insb
imul
jge
insb
adc
mov
insb
mov
ja
sbb
insb
cmp
lock
shll
ja
sahf
jl
add
stos
shlb
mov
das
ss
mov
hlt
into
adc
xchg
out
pop
adc
xchg
mov
lret
mov
sahf
out
jne
fwait
mov
test
roll
adc
bound
push
fs
dec
mov
push
push
xchg
daa
xchg
pop
nop
loop
jecxz
out
in
adc
fs
std
sub
cmp
and
insb
adc
jae
pop
pop
mov
sbb
adc
push
jle
inc
cltd
adc
add
sbb
outsl
mov
push
mov
sub
cmp
aaa
out
int
iret
or
ja
mov
imulb
aam
mov
stos
mov
pop
movsl
insb
iret
lret
xchg
aaa
adc
add
andb
scas
mov
lock
lods
scas
mov
or
add
sti
cmp
mov
xchg
inc
cmpb
lock
jg
jo
push
dec
mov
sub
lock
lods
mov
mov
fwait
mov
push
out
xchg
sahf
jno
mov
fs
add
sbb
adc
sbb
dec
das
xlat
xor
scas
xchg
icebp
and
ret
pop
in
xorl
int
mov
cld
addl
sahf
sbb
xor
xchg
mov
lods
mov
outsl
adc
and
mov
inc
sbb
out
sub
mov
mov
rclb
xor
jl
push
aas
out
ja
imul
fnstsw
pop
inc
out
nop
jno
pop
xor
pop
out
mov
sub
pop
or
fxch
daa
fwait
sbb
sub
dec
into
mov
int
xor
mov
add
cltd
ret
mov
shlb
gs
adc
jnp
dec
push
dec
inc
dec
or
repz
fs
popa
mov
aad
sbb
test
js
pop
xchg
mov
push
inc
in
xor
cmp
jnp
sbb
pop
jle
xchg
and
data16
push
fisttpl
xchg
out
mov
sbb
lea
imul
in
adc
aas
and
rclb
mov
sub
iret
cmpsl
adc
sbb
je
leave
addl
adc
push
xorb
sbb
out
dec
mov
aam
stos
pop
popf
lea
sbb
adc
dec
fcompl
mov
xchg
pop
xchg
out
fstps
nop
loope
aaa
ret
inc
sbb
insb
add
push
xor
daa
js
sti
loop
insb
std
mov
mov
cmpl
popf
call
fucom
jl
adc
cmpsb
ds
cmp
or
mov
cmpsb
or
mov
mov
and
js
pop
stos
shl
xchg
inc
inc
pushf
rcrb
dec
cmp
movsb
imul
out
and
cwtl
stos
rcl
insb
mov
inc
adc
inc
adc
mov
fnstsw
inc
jbe
dec
jg
outsl
dec
sub
xchg
int
xchg
ljmp
gs
inc
jge
mov
lea
mov
or
inc
enter
sub
add
out
xchg
add
xchg
and
inc
and
loope
mov
sahf
fcoms
cltd
lods
cmp
ss
icebp
xchg
pop
mov
xor
and
lcall
ficompl
stc
mov
fdivs
sub
in
stos
cli
mov
jp
sahf
push
shl
stc
dec
xor
pcmpeqb
inc
sbb
adc
dec
mov
add
xchg
and
xchg
push
sbb
fildl
hlt
fcomp
mov
mov
sahf
mov
xor
push
adc
inc
movsl
icebp
push
jbe
push
arpl
fisttpl
lods
inc
push
adc
inc
je
arpl
adcb
ffree
push
jo
mov
test
outsb
fs
xor
dec
mov
dec
hlt
lea
stc
xchg
adc
push
stc
ja
lods
clc
je
je
std
out
aaa
push
dec
jnp
sub
std
insl
das
subb
in
shrb
loop
jnp
mov
pop
les
js
int
push
and
aas
imul
subl
and
cld
xchg
adc
stc
jbe
xor
push
push
jp
imul
jo
push
push
or
mov
xor
xor
mov
mov
rcrl
iret
cld
jl
test
cmp
xor
add
daa
sub
mov
out
jg
repz
xor
shl
insl
xchg
sar
mov
cld
rcrb
fucomip
int3
int
cmpsb
add
mov
js
mov
xor
jb
dec
paddq
repnz
pop
jo
xchg
pop
mov
push
sub
ja
nop
enter
and
cld
ds
and
loope
out
jge
in
sbb
stos
mov
inc
imul
adc
xchg
lret
lcall
jns
aas
xchg
push
dec
mov
fsubrl
sub
add
das
sahf
scas
cmp
mov
lods
add
push
nop
movsw
add
stos
push
sub
shrd
stos
mov
jle
pop
xchg
sub
pop
and
out
movsl
notb
clc
push
mov
dec
lea
out
cmpsb
fistps
inc
data16
pop
xchg
inc
pop
dec
and
pop
mov
and
lcall
lret
out
test
sbb
jae
mov
inc
xchg
push
xchg
mov
fstpl
xchg
jne
jno
add
nop
mov
add
xchg
push
xchg
out
out
addr16
jmp
cmpb
jns
xchg
nop
or
mov
jecxz
in
dec
sahf
jns
jmp
imul
dec
ss
mov
push
lds
dec
insb
push
mov
xchg
fdivr
ja
cmp
je
or
sbb
shl
addl
mov
sub
je
pop
sub
icebp
cmpsl
mov
xchg
xchg
mov
arpl
xor
data16
sbb
push
push
loop
addl
sbb
in
cmpl
ljmp
aam
dec
push
pop
popf
in
repnz
insl
stc
lods
aaa
pop
xchg
and
mov
loope
loope
inc
pop
aas
inc
fbld
pop
pop
enter
pop
cltd
jp
jmp
push
jne
decl
cli
outsb
mov
in
dec
inc
cmp
xchg
inc
bound
and
push
ljmp
inc
sub
es
fldenv
stos
push
shlb
subl
add
cmova
je
lock
lret
popf
push
mov
jnp
les
mov
ret
shlb
icebp
pop
adc
ret
or
cmp
add
and
mov
add
inc
test
xchg
pop
jnp
xchg
bound
movsb
or
adc
mov
loop
xor
stc
bound
xchg
rcl
mov
movsl
leave
lods
dec
or
insl
push
out
rol
movsl
mov
fs
int
add
ficomps
jmp
fistl
adc
rcrb
inc
cmp
add
lret
push
fisttps
dec
sbb
roll
push
aad
or
stc
cmc
leave
out
xor
enter
in
sub
mov
arpl
popf
pop
mov
jg
mov
mov
sahf
or
and
dec
jmp
xchg
and
fadd
lret
xchg
insl
mov
jbe
je
push
fnstcw
mov
out
movsl
lahf
push
test
cmpsl
push
xor
insb
movsb
jne
and
xchg
cmp
xor
mov
fimull
push
and
jae
dec
cmp
pop
pop
ret
sbb
dec
mov
rcrb
rcrl
pop
dec
hlt
movsb
fs
jl
cmp
test
xor
jl
xchg
or
push
roll
pop
iret
inc
mov
or
push
jmp
push
test
dec
rcrl
mov
add
int
cmp
inc
ret
jb
je
imul
mov
jg
cmp
pop
mov
sti
arpl
loopne
pop
pop
leave
jge
jnp
jno
jle
fstl
jns
mov
push
sub
inc
jmp
shrb
stos
push
mov
mov
dec
mov
cmp
push
and
aad
adc
movsb
test
add
fbstp
lods
ja
add
sub
js
pop
push
pop
inc
fildl
jbe
shlb
lock
mov
stc
xor
daa
cltd
int3
adc
shl
push
xor
pop
out
cmpsb
andl
pop
js,pn
sbb
cltd
insb
mov
pop
push
insb
out
jmp
aam
pop
fwait
popf
add
lea
dec
cmp
jmp
mov
sbb
mov
jae
cs
lea
or
add
jne
push
enter
dec
test
dec
ja
add
push
pop
push
sub
and
hlt
add
sbb
mov
mov
imul
sub
mov
cltd
lahf
mov
stc
test
cmpsl
shrb
je
mov
push
int
mov
test
out
or
leave
cli
mov
ret
sti
mov
enter
dec
cltd
cmp
lret
xchg
fwait
cltd
mov
iret
xchg
mov
mov
fcompl
sub
push
add
sahf
mov
jge
inc
add
and
loop
sahf
add
and
shlb
sub
js
pop
mov
cmpsl
xor
cld
mov
imul
gs
and
lcall
inc
mov
daa
mov
sub
xchg
mov
fisubrl
clc
lret
inc
push
mov
adc
xor
inc
cmp
mov
cmc
cmp
mov
cmp
insl
inc
add
stos
out
xchg
daa
insl
pop
xchg
cmp
inc
ja
cs
sti
xchg
pop
mov
gs
xor
rolb
ss
cmp
dec
add
dec
fsubr
xor
sub
pusha
sbb
inc
sbb
cltd
cmp
out
daa
cmp
int3
imul
fstpt
icebp
and
sbb
data16
faddl
cmp
cmp
fidivl
sbb
xor
jne
loope
dec
scas
filds
adc
and
xorb
ret
pop
frstor
iret
aaa
adc
fisttps
ret
das
sahf
xlat
ljmp
jno
scas
daa
shlb
xor
sti
mov
pushf
push
inc
or
xor
pop
enter
int
add
push
cmc
outsb
and
fstpl
jp
cli
stos
pop
aas
fstl
loop
mov
sbb
sub
cmp
test
mov
jecxz
pop
dec
dec
mov
xor
xor
push
hlt
mov
push
int
ds
fcoms
scas
push
adc
jne
dec
or
mov
jle
adcl
lods
push
dec
movsl
adc
xor
dec
xlat
xor
or
fldt
adc
pop
stc
loope
pop
sub
lds
ret
lea
adc
add
and
pop
or
jle
repz
je
in
sbb
pop
mov
ret
xchg
mov
and
mov
sub
push
enter
mov
ja
add
cmp
mov
mov
adc
rcll
mov
stos
add
lret
jno
fwait
push
imul
stos
add
icebp
inc
dec
scas
dec
daa
adc
andl
mov
mov
cmp
or
adc
sub
push
iret
mov
loopne
add
test
or
aam
mov
xlat
iret
xchg
lret
ja
out
aam
imul
inc
xchg
or
xchg
or
ret
loop
or
ret
adc
icebp
imul
push
daa
mov
push
xchg
xchg
jge
fsubr
cmc
cwtl
lret
rcrb
movsb
cmp
pop
jo
icebp
ja
pop
or
sbb
xchg
fsubr
xor
nop
sbb
push
rcr
and
je
je
addr16
lcall
mov
fidivl
shll
repz
imul
in
dec
lods
lods
or
testb
mov
ljmp
cmpsb
adc
int3
jle
and
adc
xchg
xor
rorl
jne
pop
adc
sahf
or
rorl
rorb
adc
andl
pop
mov
mov
call
shl
into
push
ror
push
addr16
inc
fadds
push
ficoml
jno
jmp
outsb
fbld
cs
jno
xchg
cmp
in
rorl
xlat
jo
xchg
jb
jmp
jno
and
cmpsb
xchg
pusha
sub
outsl
loopne
add
in
roll
and
push
sarl
xor
jo
call
clc
sub
orb
sbb
shl
xlat
mov
rorl
aam
aaa
orl
fucom
add
cmpsl
fs
mov
ds
push
cltd
int3
pop
and
cmp
jno
pop
into
dec
imul
jne
in
rcrl
cmp
adc
in
sbb
in
inc
jb
cmp
sub
std
xchg
lods
jne
imulb
pop
mov
lret
add
addr16
stos
push
mov
out
dec
xchg
iret
mov
scas
les
and
inc
in
enter
jecxz
mov
pop
dec
push
lea
pop
and
mov
jns
ss
out
sahf
sbb
jge
mov
lds
js
sbb
ret
mov
bound
stos
mov
out
adc
sbb
sbb
inc
rclb
sub
enter
movsl
push
mov
imul
xchg
popf
out
xor
lret
push
scas
js
jb
int
adc
mov
jecxz
scas
sbbb
jo
xor
gs
mov
pop
and
stos
addr16
loope
push
jns
push
pusha
call
xchg
lret
jmp
test
jbe
jl
gs
push
jne
pop
incb
mov
adc
xchg
inc
dec
inc
sub
pop
adc
push
test
and
xchg
gs
inc
gs
jnp
adc
and
jecxz
xchg
xchg
xchg
jnp
ret
ret
in
cs
pop
cmp
xor
js
mov
rcll
cmpsl
ret
xchg
sub
lods
aad
mov
in
add
iret
loop
add
ret
add
mov
pushf
jle
cmc
jg
mov
mov
lcall
sahf
or
sar
les
push
cmp
mov
add
dec
adc
cltd
pop
imul
inc
adc
leave
lea
sub
rcr
cmp
mov
adc
and
rorw
or
mov
dec
insb
ret
lcall
adc
mov
dec
mov
ret
nop
fwait
sbb
movb
gs
stc
dec
or
sub
daa
outsb
add
or
lcall
adc
push
clc
jnp
insb
pop
and
sub
sbb
mov
sbb
out
and
and
pop
push
xchg
and
jle
xor
cmp
pop
fcomps
push
cli
aaa
cmp
fimull
push
inc
lahf
aad
pop
cmp
in
lods
int3
jae
jns
sbbl
jo
ss
sarb
push
mov
sub
jmp
dec
stc
ja
loop
inc
push
test
push
movsb
sub
pop
mov
int3
sub
mov
sub
cmovns
push
fcoml
jne
mov
inc
push
scas
out
push
push
xor
loope
jmp
xchg
cli
xor
xorl
push
mov
cmovge
mov
pop
stc
mov
or
jb
flds
aas
sub
mov
xchg
mov
or
inc
push
or
inc
and
mov
pop
push
xor
pop
adc
insb
ficompl
imul
movsl
imul
icebp
stc
and
inc
mov
xorb
repz
rcl
insb
mov
jecxz
adc
mov
xchg
icebp
mov
sarb
into
cmc
movsb
test
lret
and
push
jo
repnz
xchg
xlat
inc
or
incb
adc
push
xlat
cmp
lock
icebp
or
pushf
rcrb
xchg
and
ret
mov
mov
sbb
add
cmpsl
xchg
pop
data16
push
sahf
jno
mov
cmp
pop
aad
aaa
popa
hlt
mov
sbb
push
mov
jae
sbb
add
aas
lret
dec
jbe
inc
pop
cmp
push
push
dec
mov
movsb
jmp
push
add
adc
push
lock
pop
fidivrl
or
pop
movsb
push
adc
outsl
push
lahf
or
cld
out
mov
incb
xchg
incl
gs
out
ret
in
mov
xor
pop
aas
insb
sub
enter
icebp
push
xchg
out
stc
pop
sbb
sbb
mov
popf
movsb
mov
pusha
aad
xor
dec
jns
push
add
inc
lcall
mov
das
cmp
orl
sub
movsb
call
call
rcpps
push
xor
jmp
adc
mov
mov
mov
pop
cmc
repz
loope
jl
es
test
es
shrl
fdivs
test
mov
mov
and
adc
out
divb
xor
mov
dec
fidivrl
repnz
inc
dec
and
aaa
xchg
jge
int
ficoml
mov
shl
sub
fisubs
jns
nop
in
add
mov
adc
rcl
enter
xorb
mov
lods
xchg
jno
xchg
popf
sub
push
sbb
cmp
or
mov
lods
cmp
push
mov
pop
jmp
fisubl
scas
and
das
push
aas
sub
push
mov
jnp
adc
stc
fildl
jg
lds
andb
sbb
or
or
jae
lret
or
andb
lcall
ret
add
jns
into
add
adc
push
popf
or
mov
cs
push
push
inc
int3
mov
sbb
nop
lret
inc
mov
gs
mov
push
push
mov
xchg
lods
sub
adcb
mov
push
cs
cmpsb
movsb
cmpsb
int
push
andl
aaa
push
mov
leave
cmp
out
or
stc
into
cli
retw
cmp
dec
pop
pushf
jp
mov
jnp
push
pop
xchg
stos
rcll
pop
enter
push
stos
mov
and
stc
mov
sbb
scas
mov
add
repz
cmc
pop
out
jmp
or
imul
inc
jg
cmp
in
pushf
scas
push
adc
mov
cwtl
mov
jnp
mulb
sbb
cwtl
andl
out
filds
nop
pushf
icebp
lea
lahf
mov
xchg
jmp
sbbb
test
cmp
xchg
sub
mov
adcl
or
outsl
dec
xchg
test
mov
push
xlat
loope
jne
repz
xchg
sub
mov
pop
clc
push
adc
lret
pop
add
insb
aaa
mov
push
mov
div
data16
addr16
in
stos
testb
pop
xchg
test
dec
inc
inc
xor
shlb
decl
sub
sbb
pop
pop
dec
hlt
cmc
dec
aas
loop
pop
xorl
push
jge
pop
in
fsubp
push
inc
test
mov
inc
mov
scas
mov
stc
mov
xchg
sub
popf
std
lret
xchg
divb
push
xor
sbb
hlt
add
insl
test
iret
pop
cmc
sbb
lcall
sub
rolb
outsb
cltd
insb
jp
in
push
sbb
out
mov
ret
rorl
scas
call
push
xlat
push
sbb
into
adc
rcrb
or
lds
push
cmpsl
leave
xchg
lea
in
xor
sub
mov
out
fwait
inc
mov
daa
mov
pop
dec
lea
xchg
sbb
add
ljmp
pop
in
push
jns
cmp
loop
cmp
inc
pop
add
and
sarl
daa
add
fptan
daa
ja
cwtl
loopne,pt
pop
pop
inc
movsl
mov
xor
inc
sbb
gs
mov
repz
enter
cltd
pop
sbb
mov
pop
lret
repz
mov
clc
outsl
stos
daa
call
xchg
pop
mov
mov
iret
movsl
add
mov
ja
fistpl
js
cld
mov
bound
dec
pop
in
or
add
mov
fadds
orl
je
ja
mov
in
repnz
in
pop
mov
ret
xlat
xchg
or
popa
pop
push
shll
adc
lds
test
int
mov
inc
stos
mov
cmpb
enter
add
or
inc
hlt
mov
ja
cs
jno
xor
jnp
sahf
repz
lock
loop
push
nop
mov
jb
xchg
sub
or
outsb
out
and
jge
jns
icebp
xor
xor
pop
and
das
cmpl
repnz
std
in
inc
js
mov
mov
pop
sbb
aad
popf
das
add
mov
xor
js
jno
cmp
push
sbb
add
mov
xchg
jl
loopne
mov
add
lods
xorb
dec
jg
std
or
pushf
test
dec
mov
sub
mov
push
leave
sub
ret
add
jecxz,pt
je
insl
pusha
cmpsb
fdivrs
push
xchg
mov
out
mov
mov
imul
jmp
cmc
icebp
in
rclb
bound
push
xor
mov
scas
mov
jne
bound
nop
push
movsb
mov
aaa
rcl
xor
mov
dec
fs
sbb
inc
mov
and
lahf
push
cmc
pop
call
cmp
jns
cs
xchg
xchg
ja
andl
dec
aad
sbb
daa
fildll
xchg
and
orb
enter
sub
push
call
jae
push
iret
ret
call
xchg
add
icebp
dec
loopne
and
mov
inc
out
stos
mov
inc
imul
dec
pop
mov
icebp
dec
dec
dec
outsl
xchg
shrb
mov
push
insb
sub
cmp
out
dec
jne
mov
jmp
mov
fs
data16
xlat
jp
mov
push
push
jbe
mov
fists
and
pop
pop
sti
sti
adc
add
xor
mov
push
ror
and
jp
mov
jmp
mov
lock
add
add
imul
sbb
and
jl
aam
int
xchg
bound
sbb
sbb
dec
push
in
and
sub
loopne
cmpsl
mov
dec
fiadds
xchg
sub
iret
mull
outsb
insb
cmp
adc
arpl
lods
mov
lcall
stos
or
negb
pop
clc
push
movsl
mov
cmc
cmpsb
or
jno
and
lods
sti
das
aam
pop
mov
push
mov
sbb
lahf
movsl
dec
test
lret
into
push
cmp
test
cs
call
ljmp
sbb
jb
inc
mov
adc
pop
clc
inc
outsl
mov
sub
mov
fstp
and
pop
push
sbb
fadds
subb
pushf
cmovs
shrb
inc
pop
dec
xchg
mov
inc
js
inc
cltd
cwtl
insb
shlb
cmpsl
sbb
stc
iret
notl
movsb
ret
pop
enter
mov
pop
xor
sbb
dec
orb
push
rorl
test
and
xor
mov
loopne
and
push
roll
mov
sub
push
adc
das
lahf
sarl
mov
add
mov
cmp
outsl
mov
pop
sbb
push
mov
popf
scas
sub
cmc
pop
loope
mov
lahf
jle
xor
xor
mov
adc
out
mov
repz
add
or
mov
mov
add
out
mov
push
pusha
lods
adc
xor
lods
jns
mov
lods
cmp
aad
sbb
aaa
add
or
cmp
sub
mov
jns
inc
fdiv
and
inc
sub
mov
lcall
push
mov
rolb
repnz
and
cmpl
stos
imul
bound
xchg
in
adc
xchg
push
iret
mov
pushf
inc
pop
jmp
dec
dec
outsl
std
jl
leave
sub
and
lahf
push
scas
jge
insb
and
sub
xor
scas
in
fists
ss
adc
int3
xchg
mov
xchg
addr16
jl
dec
imul
xor
adc
insb
iret
out
pop
cmp
pop
mov
ja
arpl
mov
aas
dec
ret
fwait
adc
jle
xor
inc
mov
js
das
pop
cmp
fwait
mov
jge
bound
aad
mov
push
sub
sub
movsl
xor
insl
cmp
sar
outsb
mov
and
pop
cltd
mov
bound
leave
mov
pushf
int
aad
gs
dec
inc
xor
mov
push
xorb
lea
xor
ror
aaa
lret
push
stos
cmpsl
fidivl
inc
outsb
dec
sbb
stc
aam
xchg
pop
jno
or
orb
lret
xorl
lret
mov
xor
lock
push
scas
xor
jbe
cmp
and
ret
cmp
pushf
popf
arpl
iret
mov
push
jbe
cltd
lcall
fcoms
fistps
insb
in
cmp
push
cli
sarl
shll
arpl
dec
lret
mov
gs
inc
lret
fidivrs
nop
pop
call
leave
scas
fwait
clc
fiadds
mov
pop
dec
loope
aaa
test
xor
jl
jg
or
pop
into
dec
fisubrl
mov
std
jp
xchg
sub
jmp
pop
or
sub
inc
jno
xchg
jecxz
xor
jb
jns
or
leave
push
pop
sbb
cmp
sub
adc
pop
mov
cmpsb
cmova
test
sub
xlat
inc
js
xor
xchg
daa
sub
pop
mov
xchg
sbb
mov
fsubrl
add
and
fmull
fsubr
push
mov
sti
mov
lods
cmp
push
int
mov
xor
push
or
test
jmp
push
pop
in
repz
sub
sbb
pop
xlat
jae
pop
cwtl
mov
lcall
mov
and
sbb
add
mov
sti
sub
loopne
xor
inc
cld
sbb
cli
cmpsl
mov
dec
lea
aas
jne
push
or
in
fs
inc
or
mov
and
adc
sub
rol
cli
movsb
jge
dec
daa
in
pushf
incl
lahf
inc
bswap
sbb
cs
jmp
mov
and
rcrb
xor
inc
xchg
xchg
jmp
addr16
bound
test
push
or
sub
dec
add
sub
add
enter
xchg
cli
sbb
mov
lods
jl
cwtl
cltd
dec
sbb
out
into
mov
out
xor
mov
inc
inc
cmp
xchg
xchg
push
lea
stos
xchg
push
mov
shll
in
jl
sub
loopne
popa
add
pop
jl
scas
xor
fisubl
mov
ss
sub
xor
pusha
push
aad
ljmp
xchg
sub
inc
jnp
jmp
pop
or
sub
arpl
xchg
mov
ror
cmp
arpl
or
loope
push
mov
pop
sbbb
imul
jae
int
ret
movsb
cmp
int3
rcrl
fld
cmp
inc
test
mov
mov
adc
and
das
sahf
ret
xchg
in
mov
iret
loopne
jp
movl
sarl
mov
loopne
fsubrs
pop
pusha
push
cmp
add
test
xchg
popf
in
mov
mov
and
imul
pop
xor
dec
jbe
imul
ret
mov
dec
sub
daa
sbb
inc
clc
and
movsb
jb
loope
jmp
push
test
aam
nop
sti
push
adcb
cmp
inc
xor
or
mov
cmp
xchg
sti
int
adc
fadds
adc
psraw
loop
adc
cmp
in
add
fidivrl
jb
mov
inc
rcll
out
mov
mov
xchg
or
xor
mov
push
mov
xlat
fmuls
jge
xchg
sbb
outsl
mov
jno
movsb
jp
ja
js
xor
stos
clc
adc
in
ret
add
sarl
lea
adc
cmpl
lods
and
fbstp
lds
sbb
arpl
push
aam
mov
and
rclb
xor
int
inc
adc
cs
lret
jo
push
sbb
inc
in
xchg
ds
js
dec
lret
incb
jmp
gs
dec
lods
jmp
dec
cmp
mov
addl
mov
out
in
jp
int
cs
movsl
jl
mov
es
test
notb
loopne
lods
lcall
sub
mov
daa
popa
rcrb
jle
jmp
mov
cltd
lcall
out
addb
dec
mov
fs
xchg
mov
inc
das
cmpl
jo
lods
iret
mov
jg
push
pop
rorb
mov
inc
xor
movsl
jae
sub
cwtl
int
xor
mov
cmp
or
mov
cmc
dec
xor
pop
mov
mov
adc
or
pop
popf
mov
pop
sbb
pop
das
add
and
mov
sahf
xor
movsl
lret
inc
data16
icebp
pusha
pusha
xchg
adc
lods
movsl
or
dec
jae
sbb
or
sub
bound
out
mov
mov
cmpsb
pop
out
rorl
mov
mov
out
addb
mov
push
sbb
test
dec
outsl
cmpsb
pushf
loope
aad
jg
aaa
jbe
pop
sbb
insb
das
pop
bswap
out
inc
fidivl
add
pop
or
mov
mov
and
push
sub
xorb
fwait
mov
dec
decl
pop
mov
xor
mov
lds
jle
xor
and
in
add
mov
jl
inc
jecxz
lds
sbb
dec
mov
jbe
cmp
mov
mov
fdivr
cmpsl
adc
faddl
loope
mov
sbb
lds
test
push
jae
sub
cmp
stos
inc
imulb
ja
sub
sbb
iret
into
mov
add
mov
cli
je
add
rcll
lret
pusha
icebp
lock
adc
dec
in
iret
jbe
in
les
inc
cmp
sti
sub
xor
stc
in
jnp
popa
mov
lods
mov
push
fldl
push
repnz
inc
push
add
sub
pop
dec
sub
das
loop
and
jl
imul
push
stos
pop
mov
cmpsb
lods
lea
push
push
dec
cmp
xorb
testl
xor
or
mov
rorb
in
xchg
sbb
or
xchg
dec
loopne
fildll
loop
in
mov
push
dec
push
movsl
sbb
sbb
and
push
in
pop
test
ret
jns
nop
mov
adc
into
pop
dec
in
push
adc
cmp
pusha
xchg
nop
aam
lds
aas
mov
loopew
ljmp
dec
jno
push
xchg
iret
and
dec
ret
es
mov
xchg
inc
sub
pop
jo
fwait
jecxz
iret
mov
add
aas
mov
loope
sbb
mov
out
mov
jg
leave
jae
sub
imul
bndldx
cmp
mov
push
scas
repnz
dec
ret
aaa
and
inc
push
inc
js
shlb
loopne
mov
call
lahf
cltd
pop
jb
xor
jae
in
scas
pop
cli
ret
push
mov
push
jecxz
cld
cmp
xchg
jns
nop
call
insb
les
andb
xchg
std
xchg
or
and
loopne
mov
mov
fidivl
scas
cmp
fisubs
rcrl
es
scas
or
sbb
adc
lods
sbb
iret
and
mov
or
mov
js
pop
cwtl
testb
lods
xchg
push
das
movsb
inc
inc
add
cltd
mov
fidivl
mov
xor
cmpb
out
xlat
xchg
jno
mov
rorl
xor
leave
popa
aas
push
jae
dec
out
inc
ss
loope
xorl
xor
xchg
lahf
fs
xchg
cltd
loop
sub
xor
xor
and
xchg
pop
dec
stc
sahf
mov
mov
inc
add
stos
repnz
push
adc
mov
sub
rcrb
inc
sub
pop
add
xor
or
in
cwtl
mov
mov
aas
rorb
lods
jmp
pop
and
xorl
stos
mov
jb
repnz
or
inc
cmpsl
sbb
loop
mov
enter
enter
sub
push
ljmp
movsb
pop
and
dec
addr16
push
sub
sbb
addr16
out
add
dec
shrb
dec
xchg
popa
adc
mov
mov
addr16
fiaddl
jnp
push
mov
fnsave
outsb
xor
dec
test
leave
pushf
jg
sbb
shrb
lods
mov
mov
pushf
push
popa
ds
lahf
mov
mov
mov
addr16
insl
adc
test
ret
mov
inc
cmc
leave
xchg
add
pop
test
sub
or
mov
dec
push
in
lock
fcomp
cmpsl
out
hlt
xchg
movsb
jp
mov
hlt
mov
iret
jp
adc
movsl
lods
rolb
outsl
repz
lret
mov
inc
je
gs
xor
sbb
cld
xor
inc
push
sbb
xchg
push
add
pop
or
mov
icebp
xchg
or
cltd
mov
mov
mov
sbb
push
scas
ljmp
jnp
es
or
enter
add
push
fdivrs
sub
or
mov
int
jp
imul
roll
or
cmp
mov
pop
mov
sbb
mov
outsl
and
mov
inc
push
dec
stos
jbe
xlat
mov
add
ss
fwait
cmp
jbe
repz
and
idiv
inc
jmp
dec
out
push
jae
dec
or
inc
xor
daa
out
xchg
jg
cmpsb
shr
inc
in
pop
add
xor
jnp
xchg
aaa
push
adcb
das
dec
ds
shlb
roll
jns
dec
xchg
sti
repz
dec
fcmove
icebp
lret
repnz
movsb
inc
and
call
daa
fldenv
jecxz
jg
cmp
inc
push
movsl
cmp
sahf
cmc
aam
ja
pop
cmp
pmuludq
std
xchg
mov
fsubrl
sarb
pop
hlt
mov
ds
jb
fisttps
mov
leave
dec
outsl
leave
call
popa
dec
xor
mov
and
cmp
in
inc
movsl
lods
xchg
fs
dec
aaa
leave
pop
lahf
cld
test
xor
and
imul
in
inc
sub
xlat
jns
mov
movsb
sub
pop
je
or
mov
stos
pop
push
mov
jmp
mov
push
pusha
lea
xchg
es
inc
pop
adc
loop
mov
cmp
sub
cmpsb
leave
mov
dec
arpl
add
pop
lods
mov
leave
pop
or
push
push
lret
jno
pushl
sub
and
outsl
mov
test
loop
daa
and
push
sbb
jo
data16
leave
jbe
fidivrl
mov
fsts
xlat
cmpsb
add
lret
mov
xchg
es
sub
dec
dec
fsubl
sti
je
fsubl
lcall
fldcw
or
aad
mov
dec
and
adc
imul
sbb
fmuls
pop
aas
sbb
cmp
popa
sbb
add
inc
lahf
repz
das
pop
mov
nop
push
mov
fs
jmp
loope
mov
push
lock
scas
dec
sbb
scas
inc
xor
fs
sbb
sub
call
fidivs
mov
xchg
enter
rcrl
cmp
out
push
push
leave
jecxz
sub
adc
add
cmpsl
inc
mov
imul
imul
cmp
rorb
or
movsl
or
movsl
jae
stos
xor
lock
leave
sarl
ljmp
push
and
mov
jb
loop
insl
dec
inc
push
loop
inc
push
jg
fmul
arpl
xor
fdivl
xchg
cwtl
dec
sbb
cmp
out
add
pop
out
or
xchg
or
cld
imul
test
idivb
pop
sbb
mov
cmp
sarb
js
pop
push
inc
ds
mov
sbb
repnz
and
and
mov
sub
fdivrl
mov
mov
cmp
xlat
les
imull
xchg
fsubl
pop
pop
inc
jmp
mov
inc
mov
aas
or
push
push
decl
mov
or
scas
test
test
jno
or
test
inc
movsb
inc
pop
dec
sbb
rcl
pop
add
sbb
inc
dec
mov
out
mov
pop
hlt
rcrb
mov
cmpsl
push
aam
loope
pop
sub
test
pusha
xchg
mov
rorl
lds
mov
mov
incb
sub
shrb
xchg
xlat
mov
or
ret
in
cmp
scas
cltd
adc
push
push
outsl
or
dec
movsl
push
xlat
mov
std
inc
xchg
ss
jp
notl
push
or
or
cmp
sbb
clc
sbb
fs
mov
pop
push
jns
xor
repnz
adc
xchg
xchg
in
stos
out
popf
adc
shll
cmp
in
add
nop
and
lods
fidivrl
into
or
shr
repnz
sbbb
repz
fmull
and
cmpsl
inc
cli
jge
adc
jmp
arpl
jns
je
std
pusha
imulb
cld
repnz
pop
test
mov
or
xor
push
out
push
aaa
push
sbb
loopne
aaa
adc
dec
or
push
xchg
loope
pop
lods
jge
or
das
ds
xchg
mov
mov
ret
xchg
jmp
adc
ret
or
or
or
or
ja
pusha
repz
in
addr16
mov
or
sub
xchg
lods
adc
js
pushf
testl
insl
cmp
inc
xchg
cmpsb
inc
enter
in
andl
cmpl
shll
xor
xchg
test
mov
add
outsb
repz
cmp
dec
lmsw
fdivs
mov
sbb
push
xchg
or
not
push
push
mov
mov
in
adc
addr16
bound
xchg
hlt
es
divl
or
inc
pop
fwait
cld
add
push
das
lret
scas
xor
or
inc
sub
popf
pop
subb
fdivl
mov
mov
dec
mov
mul
ret
push
push
cmp
add
shrl
jmp
hlt
mov
out
jp
insl
sti
cmpsb
adc
stos
lds
or
ja
lds
mov
into
popf
jl
mov
cli
or
insl
sub
inc
mov
in
mov
leave
sti
loop
fldcw
dec
and
cld
mov
out
test
dec
arpl
icebp
int3
mov
mov
sbb
dec
mov
idivb
call
in
pop
into
adc
adc
lret
std
int
or
adc
adc
rcrb
lods
cmp
xchg
cmp
out
xchg
jge
repz
cmp
sbb
mov
add
les
dec
mov
lcall
pop
jno
mov
sub
jbe
xchg
xlat
xchg
or
cltd
int
pop
sbb
pushw
and
push
mov
jo
lods
cmp
mov
xlat
xchg
adc
test
cmp
repz
sbb
or
lods
out
fisttps
in
sub
lods
mov
cltd
outsl
and
ret
add
mov
cli
push
push
loopne
or
into
mov
and
lods
int
lods
shlb
pushf
mov
and
xchg
push
fimull
popf
cmpsb
push
adc
ja
gs
or
pop
in
inc
push
or
test
inc
loope
not
sbb
fstpl
sbb
loope
sbb
pushl
sbb
cmp
sub
in
cwtl
loopne
enter
cltd
scas
rcrb
dec
es
es
iret
icebp
outsb
mov
adc
pusha
or
and
aam
sarb
mov
mov
lea
rclb
mov
sahf
lret
mov
nop
popf
push
mov
and
lock
out
int
ljmp
fwait
insb
mov
iret
adcb
ret
gs
cmp
jo
std
test
aam
and
daa
sub
out
mov
push
jp
pop
mov
stc
pop
aam
rolb
out
mov
inc
jge
mov
shl
sbb
xchg
aaa
add
lahf
jne
pop
mov
mov
pop
hlt
inc
pop
and
fdivl
mov
je
xor
sub
sbb
lcall
cmpsl
push
sub
push
and
dec
ja
mov
das
and
jle
pusha
adc
or
cltd
jbe
add
flds
imul
push
daa
cmpsl
in
je
ja
dec
stc
fmull
sub
test
jb
sub
mov
jb
int3
mov
pop
into
lods
jbe
out
xor
mov
cmpsb
fwait
test
pop
push
cs
in
loop
bound
and
popa
ljmp
fdivrp
or
sahf
rcrl
nop
mov
loope
hlt
cmp
mov
imul
cld
ret
loop
mov
mov
xor
jne
popf
mov
stc
mov
xlat
loopne
insb
or
pop
in
ret
sbb
int3
dec
jecxz
jno
xchg
cmp
sub
ja
movsb
inc
add
mov
adc
scas
and
les
jnp
popf
fnstsw
push
xchg
add
inc
dec
sbb
mov
dec
pusha
mov
cmpsl
sti
cmp
cmp
xchg
out
rcl
shrb
sbbl
lret
andb
enter
pop
jge
adc
push
push
aas
loop
jns
mov
cli
out
mov
sbb
mov
aaa
pop
xchg
add
imull
mov
cs
lea
cmp
dec
add
mov
and
dec
sbb
inc
gs
jnp
rclb
ja
pop
or
pop
shlb
lods
adc
jae
repz
mov
in
insl
in
sbb
mov
int3
mov
jg
cmp
test
faddl
adc
ret
into
pop
stc
xchg
sub
mov
push
mov
cld
movsl
int
je
sub
mov
push
shl
adc
fs
or
mov
push
xchg
mov
fwait
cltd
push
xor
mov
jecxz
inc
pop
and
cmp
jae
lods
mov
fsub
mov
decb
sub
out
or
sbb
xorb
xchg
lahf
dec
div
xchg
cli
iret
xor
in
stos
repnz
je
pop
cs
dec
xchg
pop
cltd
adc
dec
int
pop
dec
mov
inc
cmp
xchg
xchg
mov
movsb
xchg
arpl
out
jnp
insl
xor
mov
js
lods
and
imul
iret
jg
hlt
call
pop
hlt
call
inc
cmc
add
jp
push
ret
xchg
nop
scas
test
gs
pop
add
js
aaa
mov
ljmp
cmpsl
mov
cmp
adcb
movsl
aad
pop
aaa
lcall
fdivp
testb
loopne
xor
cld
xchg
out
pushf
cs
std
inc
mov
ret
push
jle
push
or
add
push
fnstenv
or
dec
mov
add
add
out
repz
push
fistl
fidivs
insl
cmpsb
add
dec
sub
dec
cltd
sbb
movsl
enter
lahf
mov
lods
adc
mov
pushf
lods
cld
loop
shlb
sbb
std
xor
push
mov
xchg
rorl
mov
adc
cmp
pop
sbbl
rcrl
and
cmc
in
sbb
and
mov
jo
mov
mov
in
stos
mov
or
mov
dec
jg
push
inc
je
aam
je
push
iret
and
testl
mov
movsb
aad
sahf
test
stc
jge
outsb
mov
test
lcall
xlat
mov
stos
xchg
sub
mov
mov
jecxz
shll
cltd
repz
mov
pop
adc
inc
repnz
mov
lods
sahf
cvtps2pd
mov
std
cmp
inc
lock
test
dec
notl
sbb
das
inc
lret
dec
out
and
test
pop
xor
jae
orb
mov
fsubs
shlb
loopne
ljmp
popf
scas
pop
bound
gs
fisttps
mov
out
cli
cmp
aaa
xchg
xchg
jle
fdivl
dec
pop
cmp
lds
test
inc
insb
sbb
imul
into
leave
sub
or
push
movsb
stos
cmpsl
push
xchg
jecxz
repnz
xchg
into
pop
pop
dec
fldenv
pop
jg
sahf
addr16
in
leave
shrl
inc
cld
xchg
outsl
inc
jbe
bound
or
sbb
cs
jae
ret
imull
mov
test
jb
mov
mov
loopne
xchg
and
xchg
add
mov
shr
adc
cmp
ret
iret
mov
add
adc
aad
or
dec
or
jp
mov
xor
sar
sbb
cmp
stc
jns
or
adc
sub
int3
jmp
lods
addr16
add
mov
add
sti
sahf
leave
xor
mov
xor
insl
xchg
cmpsl
adc
lods
cmp
call
sbb
test
xor
cmp
sub
jne
mov
dec
inc
sti
enter
call
fldt
ret
xchg
push
xchg
lret
hlt
xchg
sub
adc
jnp
scas
or
pop
mov
push
insl
adc
add
pop
dec
daa
mov
scas
inc
mov
out
out
test
sub
cmpsl
and
lret
dec
dec
adc
addr16
inc
inc
aad
cmpsl
int3
pop
jbe
add
add
inc
dec
push
adc
std
lahf
outsl
pop
aad
sub
stos
test
mov
dec
pushf
add
loopne
add
jge
lret
daa
fcos
mov
push
jbe
cmp
cli
loopne
inc
loop
lcall
clc
or
sub
iret
es
pop
xor
and
jp
inc
sub
and
mov
iret
popf
lahf
sbb
xor
xchg
cmc
pop
xor
or
insb
and
cld
fsubrp
loope
fists
aam
xor
cmp
xchg
imul
mov
ret
cmp
loopne
adc
xchg
inc
ret
insb
lods
jle
jns
ret
add
mov
scas
and
add
clc
ja
adc
and
ljmp
mov
test
mov
adc
pop
rcrb
mov
jb
in
sahf
inc
das
push
cltd
xor
cmpsl
cmp
aas
inc
sahf
add
dec
ficoms
lcall
lret
jmp
mov
outsl
mov
fwait
jp
enter
fisubrl
lea
jmp
mov
push
pop
loope
inc
mov
sbb
in
cli
icebp
dec
scas
andb
test
mov
arpl
gs
mov
xchg
mov
out
repz
or
mov
sti
dec
ljmp
and
lcall
push
jbe
adc
mov
jbe
cmp
mov
imul
xchg
sbb
jle
xor
pop
popf
sti
out
enter
adc
call
adc
and
scas
call
movsb
lcall
sbb
and
lea
arpl
and
imul
repnz
xchg
sub
cmpsl
and
cmpsl
imul
and
pop
or
imul
sub
jne
ja
call
or
ss
cmp
jb
mov
jecxz
xchg
iret
xor
data16
adc
cmp
out
mov
jbe
pop
ljmp
jo
push
orl
xchg
push
mov
jecxz
and
les
jge
clc
insl
jo
xor
xchg
pop
jnp
sbb
in
inc
push
ficomps
lret
les
push
insb
shrl
gs
insl
cmc
jae
and
mov
or
fwait
mov
test
in
ret
sbb
add
push
pop
xchg
cmp
decl
sbb
cmp
sub
mov
jle
rcrb
shr
adc
mov
push
xchg
call
imul
cmc
push
and
cltd
stc
sti
add
push
fistl
mov
out
mov
cmc
popa
pop
pop
repz
cmc
into
ffreep
inc
add
xchg
mov
mov
scas
push
adc
jns
mov
add
mov
xchg
mov
ljmp
adc
mov
bound
int
or
aas
cmp
jno
inc
icebp
push
sti
add
nop
lods
pop
mov
xor
inc
in
jb
lods
cwtl
or
aam
cmp
jne
enter
add
mov
data16
mov
stc
arpl
cwtl
test
pop
cs
dec
mov
repnz
fmuls
add
xchg
iret
sti
xor
mov
fdivl
sti
mov
pusha
pop
daa
dec
and
mov
sub
lods
out
adc
rolb
cmp
pop
xchg
jg
inc
loop
lcall
mov
iret
pop
test
xorl
xchg
into
xor
addps
and
in
sub
dec
es
and
push
mov
mov
fbstp
push
das
add
ret
scas
movsb
mov
flds
fnstenv
mov
subb
int
and
dec
pop
jb
mov
adc
mov
mov
dec
js
pop
push
ljmp
xchg
pop
mov
in
cmp
rclb
imull
insl
test
xchg
and
addr16
mov
pop
xchg
jl
je
push
jb
cmpsl
or
or
ss
mov
or
jb
xor
jle
adc
mov
mov
xchg
loop
addr16
insb
dec
and
pushf
mov
lea
mov
xor
insb
xchg
jb
adc
imul
in
test
ret
jae
scas
cs
jge
ss
std
fdivrl
mov
push
xor
cmpb
push
cmp
mov
add
sub
inc
jl
push
shll
push
mov
xchg
adc
inc
fldenv
loopne
popa
jmp
push
fs
inc
dec
rclb
rorl
fdivrl
sbb
dec
xor
into
daa
int3
loopne
dec
pop
push
mov
icebp
hlt
dec
gs
rcll
popf
dec
sbb
mov
dec
sub
xchg
push
cmpsl
test
pusha
call
scas
mov
scas
shr
mov
scas
jp
add
mov
jne
xor
mov
inc
loopne
pop
mov
sbb
outsb
in
int3
lret
add
int
cmpsb
mov
xor
movsl
pop
int
pop
push
mov
jne
sub
movl
and
mov
fistpll
out
dec
call
push
cs
insl
cmpl
out
fwait
and
sbb
or
stc
nop
inc
pushf
cmpsb
mov
jge
mov
xchg
xor
mov
or
sahf
dec
in
mov
insl
outsb
fwait
mov
fs
inc
cmp
int3
jle
fildll
inc
fimull
inc
sti
push
movsl
or
mov
dec
add
or
xor
leave
ss
mull
inc
stos
insl
hlt
adc
cmc
adc
or
aam
and
cmc
pop
test
cmp
test
pop
xchg
jmp
bound
xchg
add
adc
dec
mov
faddp
nop
sbb
clc
adc
xchg
outsl
es
mov
jecxz
das
popf
push
arpl
jmp
lock
add
xorb
mov
popf
jle
xor
sbb
mov
mov
pop
movsl
mov
mov
dec
inc
xor
xor
cmp
dec
jp
rorb
push
mov
sbb
sti
dec
jnp
movsbl
movsl
add
fnstcw
push
pop
leave
je
fadds
mov
ret
sbb
fldt
in
into
inc
xchg
push
sub
or
add
xor
cs
jl
daa
mov
mov
mov
mov
mov
mov
push
aaa
stos
enter
repnz
push
sub
test
negl
iret
lret
sbb
xor
mov
imul
jge
iret
nop
and
dec
mov
test
or
pop
cmpsb
inc
in
mov
movsl
mov
dec
loop
adc
push
push
add
sti
rorl
sbbb
ds
jbe
in
gs
cmp
jmp
iret
mov
imul
push
movsl
pop
enter
test
iret
es
mov
jb
mov
mov
int
cs
pushf
fs
fidivl
dec
test
xchg
in
mov
add
aas
adcl
push
imul
pop
movb
les
mov
insb
inc
xor
orb
lahf
sbb
jle
enter
push
push
mov
loop
or
jl
inc
lret
adc
aam
cmpsl
xlat
push
mov
stos
popl
xor
pop
mov
mov
pop
pop
dec
out
inc
mov
gs
mov
jl
insb
xchg
in
sbb
adc
cwtl
aad
out
out
mov
xor
pusha
mov
xor
lods
fcomp
call
jbe
scas
mov
or
sti
rolb
xchg
cmp
lods
insl
icebp
rorb
hlt
aam
pop
pop
outsl
mov
pop
andb
mov
pop
push
push
or
jne
mov
jae
push
xor
fcmove
fmul
mov
push
jbe
shrl
xchg
dec
xchg
sub
in
inc
jae
xor
les
