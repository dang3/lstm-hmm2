dec
inc
mov
add
add
add
adc
shll
test
add
lods
fildl
pusha
xor
addb
mov
mov
jp
cmp
push
sub
leave
pushl
adc
or
test
dec
jo
das
pop
or
repnz
cmpsl
rorb
aaa
outsl
loop
push
movsl
jo
xor
add
ret
outsl
aas
sub
lds
xor
shl
push
sub
and
test
aam
out
adc
mov
push
ss
fildll
fwait
mov
push
lods
xchg
adc
mov
orl
mov
pop
or
cli
mov
mov
mov
enter
pusha
dec
mov
out
inc
dec
insb
jno
lods
pop
adc
mov
lods
les
add
inc
add
or
adc
jbe
pop
xchg
add
adc
cmp
or
clc
mov
mov
jne
test
xchg
or
sbb
fnstcw
jne
je
mov
popa
aaa
cwtl
mov
pop
nop
and
sbb
add
pop
loope
cmp
cmp
inc
js
cmc
mov
ret
xor
ficoml
aam
fadds
and
ret
addl
lods
pop
clc
cmp
sarb
xchg
jp
push
fwait
ret
pop
inc
add
cmp
or
push
movsb
les
mov
adc
inc
cs
ds
mov
jno
iret
cmp
loop
add
test
xchg
jg
adc
ret
shlb
sbb
or
dec
lea
mov
imul
pusha
clc
adc
adc
clc
fdivs
add
inc
adc
or
or
fiaddl
enter
cmpsb
lods
cmp
ret
idivl
and
mov
mov
and
add
orl
movsl
movsl
mov
loopne
jecxz
cs
or
sub
lret
into
mov
adc
int3
mov
xchg
lea
shl
xchg
push
loopne
inc
or
mov
cmpsl
sbb
add
xchg
dec
add
test
jns
ljmp
mov
jne
push
add
movsl
push
mov
int3
fisubrl
sbb
jp
stos
sub
ror
or
xlat
jg
out
adc
jne
bound
add
jl
inc
int3
and
push
push
test
jl
add
pop
leave
xor
push
add
stos
shll
mov
rclb
cmp
shr
call
mov
js
mov
mov
and
xor
les
lds
mov
pop
bsf
pcmpgtb
xorl
sbb
inc
or
adcb
in
test
shll
or
fwait
sub
sub
sbb
outsl
jmp
jbe
cmp
add
call
pop
sub
imul
pop
lods
push
loope
or
dec
mov
lea
lods
sub
hlt
test
loopne
mov
push
pusha
jnp
lcall
paddusb
jnp
aas
xor
cltd
test
cld
lret
jo
lahf
cmp
mov
push
lds
ja
pusha
cmc
inc
movsl
lret
cs
les
dec
xchg
dec
mov
subl
out
test
test
scas
lret
xor
out
sub
test
enter
add
aaa
pushf
xchg
xor
dec
sbb
dec
push
xor
xchg
push
sub
inc
inc
in
jle
adc
test
pop
dec
stos
sub
dec
arpl
cmc
inc
int3
test
push
popa
sbb
sar
xorb
mov
mov
mov
and
dec
jecxz
pushf
int3
adc
xor
test
shr
xchg
in
adc
jge
lods
push
adc
inc
xchg
test
mov
and
inc
sub
nop
and
in
or
pop
jno
cwtl
sbb
lret
push
adc
into
push
xor
fidivrs
xlat
sub
mov
mov
sarl
inc
shlb
xchg
test
cwtl
jb
jno
inc
sbb
xchg
mov
adc
xor
mov
dec
arpl
enter
repz
pop
leave
adc
addl
or
je
mov
inc
lcall
xorb
mov
cmpb
inc
iret
rcrl
inc
push
jl
push
push
add
cmp
in
orb
push
sub
push
lret
lods
sbbb
arpl
adc
cmp
add
cli
scas
sbb
ret
mov
xchg
or
test
xchg
movsb
insl
or
sub
rclb
ror
cvtpi2ps
daa
and
mov
test
idiv
cmpb
sbb
incb
lret
es
sbb
push
adc
das
int3
inc
mov
sub
out
in
rorl
mov
out
pushf
in
sub
loopne
adc
and
jecxz
stc
xlat
bnd
pop
cmp
outsl
int3
aas
mov
or
hlt
xor
sbb
leave
pop
and
push
and
ret
xchg
lods
bound
cmpl
mov
data16
push
jmp
cmp
dec
inc
das
imul
dec
aas
std
xchg
sbbb
das
inc
or
push
cmp
pop
or
jl
test
or
push
cwtl
adc
jl
or
xorb
sar
mov
jo
arpl
stos
pop
or
das
mov
cld
add
pusha
push
inc
fs
sbb
icebp
mov
in
pop
loope
sub
dec
enter
adc
pusha
loope
cmp
pop
in
and
lock
rcl
add
mov
lods
enter
cld
jle
cltd
adc
lock
xchg
sub
jmp
cmpsb
adc
pop
mov
sub
ja
dec
push
leave
ret
loopne
dec
jl
pop
in
jge
inc
xchg
push
lods
cld
lahf
mov
push
punpckhdq
mov
or
repz
adc
and
xchg
jns
adc
cmp
pop
sbb
outsl
inc
int3
inc
les
dec
push
ret
pop
fcompl
outsl
push
sbb
mov
push
lds
xor
sbb
xchg
std
mov
mov
neg
dec
iret
adc
cmp
sub
cltd
cmc
xchg
aad
mov
push
pushf
sub
ret
mov
ja
int3
xorb
stos
dec
xorb
fdivr
inc
jb
xor
mull
addb
jb
pop
rorb
pop
cli
and
je
xor
roll
ret
loop
mov
outsb
jmp
xchg
and
aas
mov
stos
and
orl
jge
inc
scas
mov
lds
push
pop
sub
jb
jnp
pusha
adc
mov
pop
or
pop
or
and
shrb
push
sbb
je
cmovbe
sahf
xchg
sahf
jo
mov
and
ss
xor
sbb
test
les
negb
es
cmp
mov
xor
dec
xlat
or
sbb
or
push
adc
mov
mov
fbstp
iret
xorb
dec
push
ss
je
cmp
mov
or
xor
jl
scas
mov
dec
inc
mov
arpl
mov
push
pop
sarl
and
sub
and
jle
cld
jmp
aad
jno
pop
push
dec
xor
and
push
mov
mov
fcomip
sbb
add
jecxz
loop
adc
mov
lods
mov
jp
loop
sti
adc
test
ret
outsb
popa
lea
or
aaa
loopne
and
incl
int
mov
test
cmp
cwtl
mov
addb
xor
pop
arpl
sahf
and
inc
jecxz
dec
xlat
dec
test
ret
push
add
cmp
in
mov
xchg
cmc
sarl
dec
pop
dec
lods
cmp
pop
clc
test
into
sub
ficompl
mov
mov
lahf
xor
mov
cmpsb
es
and
dec
sub
add
pop
in
cmpsl
lock
in
mov
push
test
lret
add
pop
inc
or
xchg
out
mov
dec
push
rcrb
andl
push
iret
rorl
sub
leave
mov
inc
dec
xor
aam
popa
jl
jp
mov
aaa
jns
stos
mov
fisubrl
in
mov
or
push
jno
nop
aas
xor
jo
aaa
ljmp
push
xorl
push
push
nop
bound
stos
mov
xchg
mov
push
lea
sbb
inc
xchg
dec
adcl
jo
push
sub
repnz
inc
xchg
ret
or
dec
sub
adc
sub
adc
lock
push
iret
xchg
cltd
push
push
movsb
rcrb
sub
xor
xor
rclb
and
fsts
popf
clc
leave
mov
fisubrl
dec
jnp
and
push
push
call
rcrl
mov
add
and
cmp
dec
mov
jmp
icebp
lds
sub
in
mov
mov
push
mov
mov
ret
rcll
jb
dec
xchg
cltd
and
mov
shl
movsl
faddl
cmp
stc
cmpsl
lock
sbb
enter
sbb
cmp
paddw
in
les
pop
xchg
push
addr16
ret
loopne
add
add
add
inc
scas
iret
rclb
mov
lods
pop
arpl
inc
sti
inc
mov
dec
add
sahf
push
sbb
sahf
adc
jecxz
mov
sub
shlb
sbb
jp
push
sub
cmpsb
mov
jmp
pop
add
data16
dec
in
pop
or
push
test
inc
or
push
pop
add
pop
dec
sbb
push
jne
ret
out
push
xlat
lods
xor
cmpsb
cmpsb
adc
fistps
out
pop
xchg
outsl
daa
add
icebp
mov
in
fsubl
mov
dec
bound
mov
ror
mov
outsb
sbbb
movsb
js
jmp
packuswb
jecxz
cmc
sbbl
or
mov
lcall
lods
dec
repnz
mov
jp
jnp
mov
imul
loope
pop
movsb
sbb
jp
pop
adc
lret
out
mov
mov
jge
out
lock
push
inc
pop
or
mov
dec
jl
adc
pop
push
decl
or
subb
xor
push
mov
scas
xlat
mov
sbb
dec
mov
mov
daa
xchg
nop
sbb
and
cmp
pop
outsl
call
sbb
das
cmpsb
xchg
je
adc
mov
jg
add
push
mov
aad
fimull
push
push
add
mov
xchg
xor
lret
leave
mov
mov
fnstsw
out
movb
inc
stos
push
test
faddl
or
push
mov
lea
sbb
and
cld
daa
ss
cmpl
add
daa
out
fmulp
leave
aad
mov
mov
pusha
clc
roll
je
in
fisttps
std
and
popa
add
cmp
adcl
or
add
xlat
xchg
test
loop
in
shrb
cmc
in
sbbb
dec
add
imul
and
out
or
xchg
jle
sbb
aas
loop
cltd
mov
mov
inc
push
cmp
xchg
pop
or
loopne
sbb
push
mov
xchg
pop
jae
test
mov
movsb
sbb
pop
loop
sub
or
mov
sub
icebp
inc
adc
jecxz
addb
scas
pop
mov
dec
movsb
pop
mov
cmp
iret
sub
hlt
jmp
push
cmc
rolb
cmp
cmc
mov
out
aaa
fcomps
pop
int3
inc
dec
sahf
fists
rorl
dec
inc
push
xor
orb
jge
add
adc
or
scas
stos
test
mov
adc
test
test
lds
fmull
fcoms
imul
dec
and
or
scas
push
lods
ret
xor
sub
mov
lods
xchg
adc
add
add
lahf
xchg
in
ss
pop
rol
jb
nop
or
daa
mov
fwait
aad
stos
inc
mov
xor
fldenv
shl
ret
out
sub
out
mov
arpl
and
xchg
loope
xchg
add
pop
sub
add
mov
mov
cli
ljmp
push
jp
inc
mov
sbb
stc
jne
sti
add
es
jge
test
sbb
mov
clc
pop
jae
xchg
and
sub
mov
sub
dec
add
in
fidivrs
sbb
jle
aam
xchg
aas
addl
faddp
xor
add
xchg
arpl
sub
call
pusha
scas
inc
mov
mov
ret
adc
push
adcb
js
ffree
insl
idivb
or
aas
lock
rcrl
jle
pop
mov
pop
insb
add
xchg
stos
shll
out
pop
mov
push
mov
pop
mov
xor
xor
mov
mov
pop
xchg
fwait
outsl
mov
inc
lret
in
xchg
jmp
les
jne
cmpb
pushf
or
shl
test
push
aam
pop
push
loope
imul
push
popa
pop
cmp
cltd
fmul
test
mov
mov
sar
jb
test
into
lea
into
and
xor
jno
add
inc
sbb
jmp
and
mov
and
jmp
dec
mov
or
inc
or
insb
int
xchg
out
insb
mov
test
pop
das
aam
pushf
mov
mov
imul
test
xchg
mov
xor
mov
inc
rorl
leave
push
adc
push
and
mov
popa
jl
add
fimuls
xchg
xchg
rolb
sbb
add
sub
adc
or
and
repnz
pop
add
adc
xor
push
lahf
or
lock
mov
aaa
clc
popa
fcmovnbe
test
into
inc
mov
aam
add
mov
rorl
nop
pusha
shl
push
lds
fs
bound
leave
xchg
mov
lcall
sbb
cmp
xor
in
mov
xchg
mov
adc
rol
push
pusha
jecxz
fiaddl
lods
call
out
subl
xchg
add
fs
sahf
ret
idiv
mov
sbb
pop
push
or
mov
and
cmpsl
pop
mov
push
and
aaa
sub
dec
jo
xchg
lods
dec
iret
or
pusha
add
push
ja
addb
std
shl
lret
dec
xchg
addb
inc
stos
cmpsb
lock
xchg
mov
pop
les
packsswb
enter
and
lods
ret
movb
and
cmpb
push
scas
ficoml
or
jno
xor
pop
mov
nop
popf
bound
jae
shlb
mov
out
mov
xor
mov
jmp
sahf
fimull
push
and
dec
or
mov
in
mov
scas
adc
arpl
loope
ret
jp
xor
arpl
pop
cs
inc
mov
sbb
sbb
int3
pop
mov
test
mov
int
or
inc
xor
sub
mov
sub
pop
loope
inc
dec
push
ja
jg
mov
pop
dec
push
in
bound
lock
pop
sbb
add
int
les
add
add
loop
in
adc
or
jp
cwtl
test
and
je
or
or
test
mov
subb
call
sbb
push
movsl
stos
adc
shlb
pop
push
jge
call
jno
es
xchg
lret
addl
adc
fs
xchg
ljmp
xchg
inc
mov
nop
xor
add
dec
sub
xchg
adc
int3
sub
sbb
push
je
les
add
and
push
or
jl
and
repz
cmpsl
inc
dec
test
xor
mov
adc
loope
push
dec
inc
add
sbb
leave
andb
cmpsl
in
fmull
inc
aas
clc
xor
ss
sahf
push
aas
push
and
adc
xor
add
std
pop
ljmp
dec
dec
mov
sbb
cmpsb
xchg
mov
lret
repz
push
adcl
push
pushf
push
sbb
mov
adc
mov
or
mov
dec
scas
xchg
mov
dec
pop
insb
cli
aam
stos
mov
or
lcall
enter
cld
cltd
add
push
insb
insl
mov
fstps
mov
cmp
inc
jno
cmp
lds
ljmp
inc
addb
es
psrld
pushfw
aaa
xchg
leave
xchg
sbb
rcrb
sbb
push
imul
fsubl
xchg
or
call
inc
repnz
lock
stos
and
xchg
inc
dec
aas
cmp
jae
call
addr16
sbb
sarb
pop
pushf
dec
jmp
pop
xor
rcll
test
sbbb
mov
shlb
in
das
adc
cmc
out
outsl
scas
push
or
cmp
cli
pop
pop
shlb
scas
mov
je
int3
iret
push
pop
pop
and
and
jnp
stc
popf
mov
inc
ljmp
sbb
sti
mov
addl
mov
mov
sub
push
lods
add
aas
sbb
xchg
test
daa
dec
lea
cs
cs
insl
test
outsl
sarb
jle
scas
jb
sbb
nop
pop
xchg
xchg
push
mov
xor
fstl
scas
jb
pusha
lahf
xor
daa
test
mov
inc
les
enter
call
test
jbe
or
dec
sbb
loop
loop
mov
shll
mov
cmp
icebp
out
jg
sbb
push
out
fwait
outsb
movsl
out
cmp
and
sti
std
out
stc
gs
fisttpl
dec
and
mov
push
or
das
bnd
adc
out
or
test
pop
cmpsl
in
frstor
mov
mov
loopne
ljmp
dec
imulb
sub
pop
sahf
cmc
cli
ja
sbb
add
dec
push
subb
sbb
nop
fmuls
pop
movsl
mov
inc
mov
jge
xchg
adc
push
outsb
dec
add
popa
add
insl
jbe
add
mov
mov
sbb
fnsave
jmp
outsb
or
inc
lds
test
inc
mov
push
aad
test
mov
pop
mov
and
sahf
fnsave
mov
sub
jb
into
pushf
mov
clc
loop
or
or
jno
movsb
daa
and
sbb
add
mov
cmp
adc
dec
cmp
setno
sbb
cld
xchg
test
sub
inc
cmp
push
pop
fisttpll
adc
mov
push
xlat
or
xchg
inc
inc
fisttpl
cmp
dec
xchg
cmp
xchg
jae
int3
dec
add
cmpb
push
mov
cmp
loopne
leave
sub
inc
or
andb
cwtl
lods
pop
push
inc
in
rorl
adc
pushf
jmp
mov
pop
or
inc
jecxz
or
sbb
cld
xchg
out
dec
jle
xor
and
icebp
incb
dec
sbb
pop
jmp
cld
lods
sti
pop
xchg
popf
outsb
aas
mov
jle
fprem1
mov
paddusw
sti
add
inc
scas
push
xchg
jnp
push
jne
aam
loopne
ret
cmp
jle
stc
in
pop
xor
bound
pusha
shlb
adcb
or
mov
test
push
sbb
roll
jns
movsb
adc
aam
add
lods
pop
nop
add
pop
and
imul
adc
add
mov
test
push
popa
nop
fsubrs
sub
xor
bound
push
das
pop
push
sbb
nop
jbe
pop
push
out
push
adc
sbb
mov
pop
pop
xlat
mov
pop
mov
lock
sbb
inc
xchg
jns
or
pop
cmp
lahf
imul
stos
sub
fcoms
pushf
out
pop
shrb
roll
xchg
pop
jnp
or
jg
aad
lods
push
add
lods
inc
add
xchg
test
loope
sbb
lea
or
ss
fs
aad
mov
fsubr
sub
shr
outsl
clc
into
pop
cmp
xor
adcb
inc
add
cmpsl
xchg
cmp
jno
add
dec
scas
test
mov
push
cltd
cmpsb
ffree
sub
icebp
or
jne
mov
pop
inc
xchg
xor
or
aad
into
add
adc
xor
lds
insb
mov
xchg
scas
cwtl
int3
sbbl
arpl
sbb
cmpsb
sub
push
sub
pop
call
xchg
insb
push
ljmp
sahf
repz
or
imul
cmp
mov
shrb
enter
inc
sub
dec
test
orb
mov
test
adc
push
pop
push
sbb
jmp
pop
cmp
cmp
mov
mov
jo
mov
jge
int3
add
sbb
test
add
add
inc
cs
pop
cs
inc
les
sahf
js
mov
add
add
pop
daa
fimuls
xor
or
mov
dec
push
test
fmul
push
test
sub
lret
jecxz
pop
xor
pop
loope
sbb
cwtl
push
sub
cwtl
movsb
xchg
imul
xchg
arpl
cwtl
add
nop
neg
shll
lods
sbb
aas
inc
mov
test
cmc
cmp
xor
jmp
mov
push
adc
xorl
cmp
loop
jle
xor
cs
js
fdivrl
push
push
push
add
movsb
cmpb
lds
ja
push
pusha
lods
ficoml
orb
cmp
pop
daa
dec
lea
fldcw
push
cmp
daa
mov
cwtl
mov
sbb
xor
daa
xchg
scas
mov
and
in
ds
nop
movsl
rorl
mov
scas
pop
adc
xchg
sbbb
loopne
adc
mov
sbb
sub
js
in
mov
or
adc
ret
add
dec
xor
adc
xor
mov
roll
repz
rep
push
adc
xor
and
pop
dec
fwait
mov
loop
inc
sub
call
int
test
sbb
sbb
ret
repnz
nop
jg
and
rorb
call
jb
xchg
cmp
je
adc
insb
rdmsr
cli
xchg
dec
movsb
outsb
in
xchg
loope
subl
sub
ffreep
mov
pop
inc
vunpcklps
and
push
cli
or
mov
sub
adc
loope
push
inc
dec
enter
inc
push
xchg
pop
mov
cmp
adc
andl
inc
and
test
mov
fadds
sbb
fcomip
add
adc
lret
inc
fsubr
pop
subl
inc
adc
nop
xor
bound
or
addl
mov
mov
cltd
dec
call
insl
bound
enter
roll
mov
lret
mov
stos
pop
mov
or
ret
jecxz
jecxz
loope
mov
mov
dec
xor
cli
adc
or
movsb
cltd
mov
mov
divl
pushf
mov
sbb
movsl
hlt
scas
cvttps2pi
aaa
dec
inc
addl
or
and
pop
pop
pop
lcall
mov
inc
js
lret
ret
call
jmp
push
sub
inc
or
leave
ret
jae
push
inc
cs
icebp
xchg
or
ret
call
add
loop
int3
adc
lahf
loopne
jb
les
stos
jecxz
mov
rorb
sbb
int
into
adc
jecxz
lods
add
xor
sahf
and
out
dec
jae
adc
sbb
loop
jae
mov
rcrl
xchg
jmp
ret
cmpsb
pop
adc
push
mov
cld
jne
out
repz
mov
xor
in
cmp
into
bound
jge
inc
sub
jb
and
mov
mov
sub
jl
mov
jnp
mov
or
inc
xor
cmp
fwait
movsb
inc
push
or
add
test
pop
xor
cmp
test
nop
mov
mov
pop
pop
inc
pushf
lret
mov
or
add
les
pop
je
ret
nopl
adc
dec
pop
push
and
and
inc
push
xor
loope
fistl
push
fwait
mov
sahf
jo
inc
mov
test
mov
mov
out
pop
pop
dec
scas
push
push
and
jnp
std
mov
mov
push
ror
dec
push
cmc
shlb
cli
xor
mov
repnz
pop
aaa
std
adc
dec
pop
test
push
mov
es
inc
rorl
mov
pop
nop
jno
mov
ficoms
fbstp
pop
push
and
push
and
cmc
stc
lock
imul
sbbb
inc
pop
jg
lods
lret
sbb
pop
repnz
xor
jp
lods
fs
out
lret
stos
inc
sbb
jecxz
test
les
push
call
dec
push
mov
int
enter
pop
ret
ds
enter
adc
xor
daa
in
xchg
rorl
push
jge
and
xchg
decb
pop
movsb
call
imul
mov
pusha
ljmp
in
pop
nop
fsubp
sub
testb
cmp
or
cwtl
les
cmpsb
jmp
cmp
sbb
xor
fs
xor
sub
pop
inc
mov
push
push
inc
inc
sub
in
pop
jae
adc
gs
xor
pop
sub
or
pusha
and
sbb
or
daa
cmpsb
insb
push
bnd
scas
nop
jle
jmp
daa
sbb
push
or
enter
das
mov
inc
adcb
pop
and
ds
and
je
push
xor
ret
adc
cmp
ret
pop
popa
mov
lret
sbb
pop
mov
add
add
lret
push
jp
cmp
cmp
jg
shlb
sahf
popf
pushl
cltd
xchg
rol
adcl
push
rcrl
ds
add
xor
mov
cmpsb
stos
scas
pop
pop
jl
cli
stos
test
xor
in
sahf
scas
shlb
outsb
rclb
cmc
jmp
repnz
cli
mov
and
es
in
or
jo
or
and
int3
popf
test
add
xchg
mov
dec
jmp
xchg
or
xchg
inc
repz
sub
add
add
or
push
lock
inc
dec
mov
and
jb
cmp
sub
ret
aaa
mov
jns
lock
out
ds
shl
lret
scas
lret
pusha
stos
add
mov
xchg
jno
jg
push
gs
and
test
stos
popf
in
fs
sbb
sbb
jg
je
xchg
cld
inc
rorb
and
stos
sub
push
push
test
stc
popa
mov
dec
xor
push
cmpsl
and
leave
push
add
pop
push
fisubrs
and
xor
push
outsl
sub
stc
jo
xlat
das
lds
imul
dec
add
and
push
inc
lods
pushf
insl
outsb
pop
or
and
out
jmp
mov
shlb
adc
pop
push
jle
out
data16
sub
sbb
add
orl
sub
inc
inc
or
test
fimull
mov
das
xchg
insb
inc
xchg
sub
or
mov
add
xorl
sub
mov
sub
outsb
add
ret
mov
xchg
mov
cmp
aam
cmp
add
jbe
dec
mov
arpl
cmc
adc
inc
js
and
sub
or
cwtl
dec
push
stc
mov
mov
loop
into
inc
ss
sub
daa
sub
add
popf
rcll
test
cmp
mov
fsubs
sbb
aaa
mov
xor
pop
ret
pop
mov
test
xor
mov
dec
xchg
loop
outsb
pop
lret
push
jp
ljmp
or
mov
cmp
adc
cmc
stc
pop
outsl
test
jns
adc
icebp
ficomps
out
stos
and
mov
mov
pop
aad
cmp
lcall
inc
push
out
scas
pop
lahf
loopne
push
mov
jno
mov
pop
xchg
sbb
fsubl
xchg
shl
int
outsl
mov
arpl
xor
cmp
sub
sbb
mov
je
aas
sahf
adc
lcall
iret
fcompl
xor
ror
mov
fisttpll
mov
faddl
cmp
orl
movsb
jmp
xchg
imul
fadd
shlb
or
mov
mov
sahf
inc
addr16
hlt
push
push
mov
shrl
adc
mov
jmp
xor
outsl
mov
mov
push
fstps
mov
out
mov
mov
cmpsb
sub
cmp
push
cmp
push
fs
test
inc
inc
sub
and
mov
mov
dec
pop
jmp
jecxz
pop
lret
mov
push
int
mov
xlat
pop
inc
rcll
nop
shll
fsubs
mov
jo
cmp
ret
mov
jne
adc
test
clc
push
fisttpll
sub
mov
xlat
int
xchg
jo
mov
add
xor
sarb
dec
gs
fdiv
cs
dec
xor
cltd
mov
fwait
imul
push
daa
mov
pop
xchg
bound
sar
mov
mov
jbe
test
mov
loopne
inc
or
dec
xchg
pop
add
je
mov
push
xchg
jne
ret
add
mov
xchg
and
pop
adc
dec
test
xchg
inc
loop
cmp
shlb
cmp
lret
adc
mov
xlat
sub
iret
mov
test
dec
mov
jge
fcomip
mov
adc
push
fsts
xor
sbb
or
add
fsubrs
dec
test
and
dec
hlt
test
insb
mov
add
inc
mov
xchg
and
xor
sub
and
addb
dec
xchg
add
pop
cld
add
in
and
add
mov
sub
inc
nop
sbb
fistpl
jecxz
cmp
rolb
lret
ds
mov
mov
dec
or
js
out
addb
xchg
cmovno
or
and
ret
or
mov
mov
pop
add
sbb
sbb
push
xchg
inc
cmp
mov
aam
jnp
dec
leave
test
scas
test
dec
lea
fs
imul
iret
or
in
ficompl
test
dec
mov
rcll
mov
cmc
in
pusha
pop
mov
dec
lret
notl
sub
xchg
fucomi
pusha
jmp
dec
mov
addr16
inc
sub
fildl
adc
xchg
push
and
rorb
add
pop
push
dec
testb
cmp
mov
sub
push
push
idivl
adc
call
xchg
sbb
push
push
pop
rorb
sbb
push
inc
xor
and
sti
imulb
mov
movsb
inc
pop
xor
push
nop
sbb
inc
std
andl
xchg
icebp
sub
mov
andl
cmp
pop
es
sarb
push
inc
mov
loope
add
test
addr16
shr
jg
paddb
xchg
dec
adc
xchg
clc
sub
out
pop
enter
ss
jbe
lods
imul
cli
mov
rcrb
sbb
xchg
add
and
in
mov
or
inc
rcl
xchg
adc
mov
xchg
sub
push
dec
ljmp
push
stos
outsb
mov
aas
cwtl
cs
hlt
pop
outsb
mov
movsb
cmp
mov
jnp
scas
xchg
pop
push
pop
cmc
pop
out
test
pusha
inc
add
pusha
call
push
mov
pop
js
std
push
xchg
lret
xor
mov
mov
or
mov
ss
xchg
pop
and
popa
or
adc
shl
mov
fwait
clc
cmc
mov
dec
and
leave
test
hlt
inc
push
xchg
movsl
aam
scas
insb
js
ja
dec
dec
sub
enter
adc
mov
mov
sub
lea
mov
lods
ret
adc
popf
lods
sbb
dec
stc
or
addr16
mov
popf
dec
or
rcrb
push
gs
and
loopne
or
scas
adc
xor
aam
sbb
inc
and
jg
rcll
xchg
sarb
dec
push
inc
dec
xchg
lahf
fwait
loope
cmp
test
jg
add
rcll
out
or
addb
mov
xchg
mov
cmpsl
pop
push
int3
and
dec
push
xor
inc
leave
sar
sbb
add
mov
push
jp
rclb
lea
ss
xchg
sub
adc
movsl
mov
es
lcall
js
repnz
push
daa
mov
dec
mov
jo
cwtl
sbb
and
bound
jno
or
insl
xchg
mov
ljmp
sbb
ret
xchg
lret
adc
mov
push
loope
dec
push
mov
lcall
test
aam
pushf
mov
repnz
fcoml
cli
and
jne
cld
icebp
adc
fisubs
pop
cld
xchg
jo
cld
xor
loopne
fistpll
andb
and
jns
imul
push
pop
outsl
stc
mov
addr16
pop
mov
into
je
js
es
cmp
push
push
mov
repz
in
aad
orl
push
sahf
lods
sti
out
stos
fidivs
hlt
lret
dec
mov
out
stos
imul
fistpll
xor
jl
jg
iret
in
dec
mov
push
mov
out
dec
js
push
in
ja
xchg
mov
aaa
mov
icebp
jbe
clc
xchg
push
call
mov
push
xchg
iret
movsb
dec
jle
pop
aaa
pop
psrlw
cmp
mov
xchg
xchg
jle
std
stc
sub
push
sbb
bound
iret
cmp
adcl
in
adc
enter
in
fidivl
pop
xchg
outsb
xchg
bound
in
and
out
shll
scas
mov
inc
sub
mov
idivb
cmpsb
or
mov
sbb
inc
pop
dec
jg
jnp
mov
push
jb
fsubrp
push
push
orl
xlat
inc
mov
out
push
out
mov
xchg
push
out
lret
shrl
nop
jne
push
add
andl
aad
les
roll
xchg
in
bound
ret
pop
xchg
test
repz
mov
sti
xchg
dec
xor
and
push
pop
mov
sub
add
and
xchg
ds
mov
jb
incb
loopne
lfs
and
mov
jle
cmp
push
pop
lods
add
add
idivl
sbb
cmp
cld
test
inc
adc
add
inc
ljmp
jb
stos
sbb
xchg
jp
mov
push
inc
mov
or
dec
pop
in
out
rorb
loope
into
xrelease
fsubp
cmpsl
lcall
xchg
push
mov
push
nop
inc
out
int3
movsl
orb
pop
int3
and
test
shlb
or
inc
dec
iret
int3
add
sbb
lock
std
nop
cmp
lea
xchg
je
push
int
lds
inc
dec
push
lods
mov
adc
imul
outsl
adc
xorb
fcompl
fsubrs
mov
test
scas
clc
pop
subb
inc
mov
push
cmpsb
push
shll
mov
mov
sbb
rolb
push
and
xor
sbb
cmp
and
add
popl
lcall
sub
fisubl
push
push
push
loope
add
or
sbb
adc
mov
cs
jecxz
jne
mov
fs
leave
pop
inc
aad
pop
aas
add
jb
fsubr
xor
sbb
cltd
cmp
dec
push
shlb
jmp
adc
add
loopne
cmp
mov
fisttps
loope
jb
jbe
movb
mov
pop
jae
out
xchg
into
jp
hlt
cmp
lock
mov
test
sub
or
sub
outsb
push
xchg
test
mov
jo
add
or
jnp
add
or
cwtl
or
test
sub
into
xor
outsb
xchg
test
push
dec
jge
in
add
cmp
xchg
cmpsb
call
jo
shlb
test
pop
scas
test
xlat
push
mov
xchg
ljmp
push
mov
fcmovbe
inc
and
stos
cmc
and
xor
push
cmp
push
mov
or
popf
sub
sbb
outsb
inc
test
out
and
dec
inc
sbb
out
sbb
test
jp
push
inc
loopne
test
ds
pop
add
popf
in
jge
cli
je
leave
mov
sti
popf
hlt
cmp
decb
leave
mov
adc
out
adc
enter
repz
in
mov
xchg
cmp
popf
mov
adc
or
dec
ja
cmp
stos
dec
xlat
popf
lods
push
jbe
in
mov
dec
mov
fistps
loopne
fmull
push
ja
out
xor
mov
adc
dec
mov
mov
pushf
cmp
popf
mov
insb
daa
loop
fisttpl
push
fisttpl
dec
mov
daa
fst
fisttpl
in
mov
adc
cmp
popa
mov
xor
shrl
nop
add
xor
sub
hlt
hlt
sub
loopne
inc
jae
scas
sbb
mov
aad
mov
mov
gs
xchg
mov
rorl
fdivs
adc
cs
push
xchg
aam
test
mov
fildl
mov
xchg
xlat
add
inc
or
adc
or
ficoms
pop
outsl
xor
push
add
cmpsb
fadds
sub
rorl
gs
inc
scas
push
nop
sbb
cltd
and
shrl
sbb
pop
jo
gs
sub
mov
aad
push
test
xor
call
cmpsb
mov
push
inc
imul
dec
pop
xchg
mov
data16
cmp
out
pop
jle
dec
pop
xor
mov
imul
xlat
sbb
ss
mov
xor
xchg
pop
lahf
xchg
dec
dec
sub
jo
mov
mov
mov
enter
pusha
fcomps
lret
sbb
les
popa
adc
pop
leave
ret
inc
jne
iret
outsb
stos
rolb
arpl
and
ljmp
cwtl
sub
xor
loopne
gs
jno
inc
inc
ja
gs
das
pushf
mov
push
js
push
out
adc
jmp
dec
movb
or
push
mov
push
leave
test
xor
lcall
mov
sub
mov
adc
mov
inc
imul
movsl
push
mov
pop
mov
pop
inc
push
or
shll
ret
xchg
jle
lret
sbb
cltd
adc
ret
adcl
dec
pop
pop
es
xchg
enter
scas
sub
or
mov
das
aas
imul
aam
mov
sbb
adc
sbb
ficomps
test
pushf
lock
pop
cwtl
je
cltd
and
sub
repnz
insb
jae
pop
mov
scas
add
mov
adc
push
cmp
pop
shll
push
pop
outsl
rcrb
pop
aaa
dec
xor
call
in
adc
fucom
mov
aam
push
push
xor
adc
pop
addr16
inc
push
sub
mov
pop
scas
cmpl
inc
or
shlb
das
or
mov
dec
aaa
test
cmpsb
pop
subb
jae
sbb
movsl
adc
push
cmpsl
das
jp
sbbl
add
xchg
adc
pusha
mov
mov
shr
jp
jo
pusha
test
into
sub
xchg
aas
or
fistpll
or
popf
xchg
in
out
adc
jo
mov
orb
jge
inc
mov
xchg
push
push
stos
sbb
out
outsl
jno
push
pop
sbbl
inc
add
adc
outsl
sti
mov
and
mov
js
pop
xchg
push
inc
subl
popl
or
adc
jg
jmp
scas
fs
mov
push
sub
push
push
cmpsl
sub
in
add
pop
popl
dec
push
sbb
mov
mov
mov
shlb
xchg
push
push
add
inc
cmpsb
dec
jl
push
das
lds
push
lds
dec
insl
out
xchg
sub
stc
jg
cmpsl
push
jmp
clc
or
xchg
push
xlat
jno
call
jnp
dec
inc
gs
lds
in
pushf
or
int
mov
dec
arpl
popf
lds
cwtl
and
std
pop
pop
arpl
push
cmp
or
das
fwait
incl
adc
lret
in
push
stc
mov
add
mov
fs
ds
das
stos
ret
add
shl
cmp
push
ljmp
mov
adc
mov
repnz
es
mov
cmp
and
jmp
dec
pop
add
push
xlat
adc
jg
insb
pusha
cmp
adc
out
jl
fisttpll
lds
movsl
outsl
outsb
pop
adc
std
test
cli
lret
rolb
fs
add
lods
or
jmp
inc
inc
dec
lret
xchg
loop
bound
aaa
mov
or
jne
hlt
inc
pop
sti
sahf
or
pop
add
inc
adc
loopne
add
js
das
adc
push
push
dec
and
and
jbe
mull
mov
lds
mov
mov
shr
std
jne
fstps
movsl
lods
push
sbb
or
adc
sub
scas
pop
sub
icebp
andb
and
les
pusha
add
scas
or
adc
mov
aam
loop
loop
in
sub
negl
inc
in
xchg
mov
pop
mov
and
mov
scas
test
pop
pop
sbb
in
in
mov
add
pop
cmpsl
cmp
push
lea
dec
or
test
xor
call
mov
sarl
inc
mov
sbb
pop
push
daa
pop
xor
xlat
mov
sahf
popl
fists
pop
imul
pop
orb
xor
stos
dec
lods
mov
cmpsb
sarb
mov
mov
dec
dec
inc
inc
bound
and
ja
sbb
dec
push
push
dec
stos
aad
fbld
sahf
daa
push
mov
je
loop
ret
xchg
jae
cmp
sti
ficompl
jo
mov
rorb
push
rolb
adc
daa
inc
je
js
and
sbb
cld
pushf
das
pusha
xchg
adc
xor
pop
jae
add
fisttps
das
push
ja
or
je
mov
mov
ret
pushf
xor
and
mov
into
xorb
dec
in
pop
test
add
sub
rcrb
fs
rcrb
int3
adc
cmp
sahf
dec
rclb
cmp
mov
movsb
xchg
test
jle
stos
jo
inc
movsl
add
bound
mov
and
hlt
push
xchg
aad
adc
outsl
aam
dec
add
arpl
imul
mov
sbb
aaa
notl
stos
xlat
jne
rcll
test
cmc
push
jo
rolb
xchg
adc
addb
lods
imul
xlat
test
in
cmpsb
sbb
push
in
inc
aam
shlb
pop
pop
sub
inc
pop
jecxz
dec
popl
stc
mov
rclb
or
inc
fsubr
cmp
cmc
int
adc
xor
aam
test
pop
in
mov
hlt
lds
mov
xchg
jle
js
pusha
dec
lods
test
cmp
xchg
mov
mov
push
push
xchg
xchg
jle
jo
push
decb
xlat
dec
ss
test
jle
fwait
scas
fbstp
sub
fldl
sbb
sub
icebp
push
add
repz
mov
sub
add
and
mov
insb
outsb
mov
jbe
addb
in
or
les
mov
adc
daa
adc
iret
mov
frstor
inc
sub
mov
jne
cs
adc
pushf
add
loopne
addl
rcll
movsl
stos
pop
and
loopne
test
cmc
mov
mov
mov
or
mov
push
cli
inc
push
lea
pop
jae
pop
jp
pop
add
sbb
cmp
xchg
outsb
xor
mov
inc
pop
xor
and
lock
rcr
cmpsb
mov
push
and
in
xchg
in
fwait
rcrb
jmp
shr
jp
mov
iret
orb
sub
mov
test
int3
cli
mov
int3
cmp
mov
and
mov
mov
rcll
push
push
xchg
and
mov
xchg
xchg
mov
pop
xchg
xor
mov
shll
movsb
enter
sub
loope
jle
jb
mov
mov
mov
mov
jbe
pop
cld
sub
dec
jmp
adc
adc
xchg
xor
ljmp
xchg
jl
inc
push
cld
mov
sbb
imul
and
xor
adc
inc
insl
mov
pusha
into
fiaddl
rorl
adc
mov
insl
aad
jae
in
imul
lret
xor
daa
int
ss
sbb
pop
test
loope
jge
fsubrl
mov
data16
jmp
mov
das
dec
out
cmp
inc
cwtl
rorb
notb
pushf
sub
lock
jno
sahf
jno
ss
xchg
xchg
push
inc
ss
jae
test
pop
subl
sub
adc
pslld
mov
loope
inc
into
pop
add
mov
cwtl
push
lcall
cmpsb
shlb
hlt
pop
bound
cltd
movsb
xchg
popa
jg
push
sti
movsl
push
cld
add
movsl
insb
fstp
pop
lods
repz
add
mov
not
cwtl
int
xor
xor
mov
lock
pop
jns
or
outsb
mov
into
sbb
push
push
pop
pop
sub
decl
dec
ja
dec
and
hlt
jmp
and
out
push
inc
outsl
jge
cld
gs
lret
xchg
loope
sub
lret
into
pop
mov
mov
push
call
xchg
pushf
popa
mov
test
ss
add
icebp
aad
and
inc
add
shll
jg
inc
push
cltd
test
sub
out
lret
bound
icebp
ret
and
jp
push
xchg
pop
test
jle
sbb
pop
or
enter
rolb
call
pop
and
dec
sbbl
std
mov
mov
xlat
push
inc
or
cld
stos
sbb
xchg
or
shl
loop
lea
movntps
inc
add
les
push
sub
mov
pop
cmp
mov
or
add
data16
push
jmp
jmp
bound
frstor
dec
sbb
mov
dec
mov
pop
lcall
dec
add
sbb
xchg
add
add
sub
xchg
cmp
and
dec
mov
sti
cmpsl
push
inc
dec
cmp
sbb
sbbb
mov
and
sub
clc
jmp
inc
or
stos
mov
ljmp
fmuls
push
popf
push
inc
push
and
imul
cltd
jo
sahf
popf
xor
daa
push
dec
mov
rclb
jge
enter
push
inc
sub
fistpll
stos
add
in
inc
lret
adcl
jbe
loop
mov
rcl
stos
shl
popf
into
ss
std
cmpsb
ficompl
or
xor
les
dec
inc
mov
pop
xchg
push
fisubrs
aaa
repnz
lods
fadds
push
nop
or
jge
add
shll
dec
and
mov
out
filds
lock
negb
xchg
mov
lea
inc
add
aam
xchg
sbb
lods
andl
and
in
dec
shrb
cltd
pop
and
add
and
mov
cmc
xor
jle
and
inc
push
jge
sub
int
add
pop
add
outsl
or
sub
add
rorb
icebp
mov
mov
aam
cltd
pop
out
fsubrs
sub
lea
rorl
sbb
imul
push
xchg
sti
bound
mov
repz
push
push
or
lods
and
and
rol
int
push
mov
sub
push
arpl
lods
add
dec
movsb
test
adc
lock
cld
inc
stos
lods
dec
dec
mov
jl
orb
pop
mov
inc
jo
clc
mov
xchg
clc
jp
adc
mov
cs
mov
testl
mov
jae
mov
ljmp
sbb
mov
and
les
dec
fadds
dec
xor
xchg
movsl
ds
inc
mov
adcb
lock
push
mov
rorb
cmpsb
pusha
and
subl
sbb
inc
cmc
inc
pop
fists
jle
dec
or
jns
paddsb
js
nop
cs
cli
lods
xor
pop
inc
stos
lret
mov
sahf
jmp
out
dec
test
pop
push
stos
mov
stos
mov
nop
xor
inc
mov
mov
inc
mov
mov
clc
sbb
clc
and
sbb
scas
or
mov
rolb
sahf
cmpsb
mov
pusha
cltd
pop
jns
in
inc
insb
cmp
push
mov
xlat
xor
inc
fidivl
inc
push
insb
sbb
adcl
mov
shl
arpl
pop
nop
es
fisubl
xor
or
aad
mov
and
sub
push
test
push
push
cmpsb
popf
cmc
adc
movsb
call
xor
ror
cmc
push
aad
test
je
push
xchg
and
test
inc
test
inc
or
push
xor
and
mov
pop
std
das
push
push
dec
sar
xchg
fsubrs
sub
adc
xor
add
dec
sub
mov
cld
mov
outsb
test
faddp
sub
mov
movsl
sub
cmpsb
cwtl
pop
popa
pushf
loop
rclb
sbb
sub
mov
mov
leave
pushl
pop
xchg
or
xchg
pop
int
pop
mov
lea
repnz
lods
ds
add
lods
test
cmp
pop
adc
xlat
add
shlb
ret
pop
fildl
sbb
sbb
pop
inc
add
pop
sti
test
jge
test
jne
test
xchg
cmpsb
pop
adc
add
mov
mov
lea
xor
mov
inc
lods
or
inc
imul
lret
in
aam
mov
sub
lods
mov
test
mov
cwtl
lret
xchg
mov
addr16
or
or
or
push
cli
hlt
pop
adc
scas
popa
dec
in
cmp
lahf
sahf
dec
addl
xchg
cmp
xchg
and
les
je
gs
dec
sub
icebp
lahf
inc
dec
push
sbbl
mov
jbe
add
inc
fdivr
xlat
pop
insl
dec
dec
xor
mov
jns
inc
mov
or
mov
cmp
dec
pop
mov
aam
sbb
xor
or
in
dec
sub
push
xor
push
movb
or
add
fld
sti
push
in
add
rorb
insl
mov
xchg
addl
xor
xor
fnstcw
pusha
cmpsl
push
push
xchg
push
sbb
cmp
in
nop
cmpsb
arpl
cltd
cmp
mov
push
jge
or
dec
stc
jmp
add
adc
inc
dec
adc
and
sub
add
mov
in
or
ljmp
sub
pop
shl
loop
mov
inc
xor
push
leave
addr16
jp
sub
cwtl
xorb
xor
and
push
ds
das
xchg
test
sub
add
out
aam
repnz
adc
inc
icebp
les
mov
or
or
add
push
inc
sbb
adcb
je
jmp
ja
lods
shrl
iret
add
add
mov
xor
arpl
adc
push
in
and
loope
adcb
jne
cld
loopne
aas
data16
xchg
cmp
cmp
push
fs
inc
xor
mov
cmpsl
push
icebp
fisubrl
sbb
mov
push
mov
mov
dec
mov
inc
pop
lock
sahf
rclb
push
in
jg
xorl
outsl
aas
and
and
loopne
xchg
adc
jge
push
stos
les
mov
push
test
mov
sahf
xor
jno
cmc
negb
lods
dec
push
push
lods
jo
inc
mov
js
push
enter
jo
daa
in
push
lock
push
adc
mov
xor
add
repz
dec
lcall
adc
sub
jnp
or
in
fdivs
push
push
xchg
out
inc
fucom
xchg
in
jo
scas
dec
mov
fldcw
sub
cmp
jns
fldt
jo
xor
sbb
repnz
xor
pushf
and
pop
xchg
dec
push
gs
jg
push
jnp
add
inc
sbb
jbe
scas
les
dec
sbb
mov
adc
test
scas
sub
xlat
sarb
jl
jno
insb
sbb
adc
cmp
or
adc
out
mov
aaa
loop
insl
and
or
stos
push
mov
xor
fadd
and
cltd
push
in
test
mov
in
pushf
cmpsb
iret
or
sbbb
out
roll
fs
faddl
aas
inc
pushf
push
inc
pushf
cmpsb
mov
jle
add
mov
jnp
pop
aaa
jge
mov
lahf
and
or
add
cmpb
les
lahf
lods
subb
pop
shlb
add
or
cmpsl
insb
push
fwait
mov
inc
mov
lods
test
xchg
mov
jo
mulb
leave
out
push
add
fs
sbb
cmp
gs
dec
or
dec
inc
es
imul
mov
cli
add
mov
lea
je
xchg
sbb
ja
inc
out
mov
ljmp
lods
ja
scas
push
push
pusha
cwtl
std
sbb
data16
push
push
loopne
aas
sub
hlt
imul
or
adc
loope
lcall
adc
jo
dec
xor
fdivs
loop
mul
les
cld
dec
jo
js
jne
into
xorb
push
sbb
inc
test
xchg
cli
enter
cmp
adc
scas
dec
inc
and
enter
imul
bound
adc
dec
fsubs
push
mov
popa
mov
dec
je
bound
loope
mov
adc
and
rorb
loopne
xchg
mov
add
subb
add
adc
arpl
and
js
add
or
enter
add
mov
and
adcl
sub
inc
push
ret
mov
sbb
dec
loopne
cmp
xchg
sub
mov
add
test
jmp
push
ret
pop
mov
adc
lods
adc
lods
adc
adc
lods
adc
stos
pusha
sbb
mov
xchg
test
push
subb
pop
ljmp
and
inc
jle
loop
and
lret
rcll
es
aam
cwtl
xchg
xchg
pop
dec
pop
inc
sub
nop
xor
pop
mov
and
push
call
and
inc
movsb
vpcomb
mov
sbb
imul
stos
loop
loop
pop
push
and
es
pop
lods
sbb
or
adc
add
add
push
xor
add
mov
xor
loopne
inc
inc
jge
popa
bound
mov
imul
test
lahf
in
lea
daa
sti
loope
mov
add
cmp
ja
push
les
pop
in
cld
pop
cltd
sub
push
sbb
lds
popl
dec
pop
addb
pop
popf
out
test
jo
loope
icebp
adc
inc
test
mov
test
pop
xor
test
clc
repnz
stc
jae
inc
dec
add
adcb
add
pop
out
inc
and
xlat
aaa
and
rclb
dec
dec
mov
inc
add
push
rorb
push
add
cmp
or
cltd
mov
lret
ss
dec
mov
sub
dec
mov
sbb
xorl
mov
sub
stos
ret
test
dec
cmpsl
data16
dec
mov
jns
gs
xchg
pop
jns
or
gs
lods
fbld
scas
lods
mov
add
dec
adc
pop
and
mov
xchg
and
dec
xchg
jmp
and
mov
rcr
adc
mov
pop
ficoml
sahf
or
jp
bound
sbb
jmp
scas
sbb
sbb
cld
jle
push
inc
lds
sub
addb
mov
inc
mov
int3
mov
or
push
repz
cmpsb
inc
cmc
push
dec
mov
push
mov
out
aad
jne
cld
mov
out
stos
ret
pop
push
subb
lahf
jnp
adc
push
and
adc
add
mov
movsl
bound
xchg
addb
sbb
test
push
push
mov
addl
mov
push
sub
adc
dec
sub
mov
arpl
sbb
mov
loope
int
roll
mov
and
lahf
fistl
mov
roll
xchg
cmp
push
loop
jmp
mov
mov
aas
adc
push
push
outsl
loope
loop
add
mov
arpl
push
add
or
mov
cmp
fwait
cmp
je
xor
sub
ret
rcr
jne
out
dec
in
je
fs
mov
in
imull
mov
and
sahf
in
sub
sub
mov
mov
or
orl
or
push
aaa
les
sti
insb
jo
in
cld
cli
enter
pop
leave
addr16
push
cwtl
adc
push
rcrb
add
adc
es
movsw
push
inc
addr16
pop
ret
mov
add
cmpsl
ja
inc
sti
bound
pop
std
lock
scas
sti
js
cs
adc
data16
pop
inc
shr
sub
mov
movsb
pusha
jns
mov
insb
daa
or
cmp
fcoml
sub
and
xchg
cmc
xchg
outsb
pop
cmp
faddp
sarb
roll
lods
in
sbb
ds
nop
lock
fwait
push
loopne
and
adc
push
movsl
not
xchg
xchg
xor
xor
add
pop
cmc
rorl
push
aad
mov
cmpsb
or
mov
aas
pusha
insl
dec
add
repnz
sub
out
push
imul
icebp
inc
std
push
push
lods
adc
fildl
lcall
sbb
cmc
xor
cwtl
xchg
in
xor
cwtl
mov
cmp
sbb
cli
arpl
add
mov
mov
mov
mov
add
cli
movsl
mov
std
xorl
mov
rorb
push
mov
dec
popa
push
xchg
pop
sbb
jb
pop
sbb
push
push
pop
mov
cmpsl
dec
inc
inc
dec
push
sub
shr
jge
mov
cmpsl
add
les
push
jle
adc
sub
jnp
out
shl
testb
push
jo
and
call
sbb
push
add
push
cltd
sbb
mov
pushf
out
mov
jbe
test
sti
cmpb
xor
loop
mov
mov
arpl
xor
stos
js
cmpsl
fcmovne
push
rolb
push
xchg
shrb
stos
adc
aad
gs
lock
pop
and
dec
rcll
adc
adc
cmp
cmp
stc
aam
dec
mov
sarb
fwait
rorl
inc
pop
xlat
mov
cwtl
fidivl
lret
push
mov
inc
enter
jl
sub
and
xchg
rol
or
fs
andl
and
das
scas
hlt
or
mov
in
or
xor
adc
and
mov
sub
fistpl
or
clc
icebp
sub
out
hlt
shll
push
stos
add
in
cmc
push
mov
jo
lret
ficomps
mov
mov
arpl
xchg
xchg
jnp
and
pushf
xchg
push
les
inc
sub
xchg
jp
call
rcll
push
fildl
inc
fisttpl
fxch
mov
sti
jg
bound
in
sbb
mov
pop
lahf
jb
cmp
jns
mov
insl
stos
sub
ds
jg
dec
or
dec
xor
mov
repz
sarb
mov
ljmp
push
dec
pusha
xchg
scas
repz
ja
pop
mov
add
bound
rol
cs
add
xchg
lock
nop
dec
xchg
add
cmc
mov
pcmpgtd
nop
xor
test
daa
mov
pop
sub
cmp
or
mov
pushf
mov
loope
test
lds
std
sbb
test
add
xchg
aam
cld
sbbb
loope
inc
in
and
pop
jg
and
loop
inc
adc
pop
ljmp
in
mov
push
add
jne
cld
jno
dec
jecxz
test
pop
add
push
sub
push
je
xchg
xor
aam
sub
cmp
push
and
add
cmp
xchg
jl
std
shll
sbb
lcall
inc
pop
adc
mov
rolb
lds
cli
stc
dec
lcall
shll
sub
stos
out
mov
out
nop
subb
rcrl
enter
sbb
out
js
or
and
ficoml
add
insl
sub
dec
mov
int
sub
fwait
push
fwait
das
dec
push
les
jbe
or
adc
and
sbb
mov
dec
sahf
mov
insb
mov
ss
jnp
push
push
mov
xlat
jmp
loopne
cld
lea
test
sahf
add
test
mov
stc
mov
ret
cmpsb
mov
scas
adc
dec
adc
jns
lds
cmc
scas
cld
clc
sbbl
les
cmp
movsb
jb
std
pop
call
sbbl
movsl
cmp
push
int3
or
or
ret
or
dec
dec
clc
xchg
and
add
sbb
sti
pop
push
xchg
add
pushw
sub
sbb
call
divb
cmp
insb
push
mov
pop
dec
pop
push
shlb
sub
mov
sub
cwtl
fdivrl
aas
xchg
inc
mov
adc
loopne
xchg
pusha
popa
dec
outsb
in
aaa
iret
fistl
pop
adc
int3
push
sbb
imul
out
fdivrs
repz
sub
xor
loope
xchg
rclb
bound
ljmp
fistpll
fstpt
ss
mov
shlb
or
ret
cmp
and
xor
sub
loope
push
subl
pop
jns
mov
add
push
cld
clc
add
mov
leave
notb
or
adc
cmpsl
rcrb
roll
inc
xchg
pushf
mov
lahf
add
mov
imul
pop
add
cmp
push
pop
cld
sub
dec
xor
jbe
out
inc
test
mov
jl
mov
sub
jno
shll
ss
lea
push
ja
icebp
bound
fwait
jno
mov
jnp
into
xchg
popf
popa
fimuls
push
inc
xor
mov
aam
xor
imul
test
xorl
dec
add
mov
mov
adc
aas
cltd
into
push
rcr
sahf
inc
in
add
add
loope
or
imul
mov
ds
cwtl
adc
scas
sub
mov
pop
mov
pop
mov
inc
movsb
mov
data16
mov
icebp
repnz
sub
add
and
jmp
inc
rol
sbb
cmpsl
sbb
and
imul
dec
sub
jl
mov
cmpsb
mov
xchg
add
xor
or
out
and
sbb
push
and
add
in
xchg
push
jae
mov
cmpsl
cld
jge
rorb
pop
dec
push
mov
cwtl
icebp
out
mov
aaa
jno
push
lea
fdivr
rcl
lods
push
xor
orl
adc
mov
cmp
mov
sub
dec
jb
inc
fwait
cld
dec
add
lahf
into
inc
lcall
or
push
mov
sbb
in
lods
push
aaa
jg
add
mov
dec
jge
dec
lods
sbb
dec
sub
cmp
xorb
sub
add
test
jo
sub
push
loopne
adc
xchg
sbb
and
cltd
push
inc
int
mov
sbb
cltd
das
xor
mov
addr16
push
sbbl
xor
int3
addr16
sbb
or
sub
in
cli
inc
dec
xchg
stc
mov
push
pop
clc
pmaxub
mov
or
pop
or
xor
push
insl
test
sbb
mov
adc
aad
xor
insb
adc
scas
or
add
xor
cmpsb
and
in
cmpsb
jge
add
mov
push
xorl
inc
scas
push
in
sub
mov
jge
cmp
lret
mov
sbb
not
add
sub
dec
in
out
or
loop
cmp
inc
sbb
mov
mov
jae
ror
enter
push
mov
pop
mov
sub
pop
or
pop
pusha
sub
dec
ljmp
and
scas
push
fsubr
inc
push
roll
mov
inc
dec
int
stos
clc
pushl
fmuls
inc
ret
smsw
dec
pop
data16
xor
or
or
mov
push
pop
and
out
push
and
inc
movsl
and
mov
aas
adc
jne
jl,pn
xchg
addr16
xor
sub
imul
jg
sbb
mov
mov
lret
shl
mov
call
mov
mov
mov
xlat
jp
cmc
repnz
out
cmpb
outsl
sbb
xchg
clc
rcll
xchg
stc
xchg
pop
mov
stos
aam
add
xchg
xchg
inc
or
sbb
mov
xor
sub
mov
aam
lea
fdiv
lods
and
jo
pop
cld
cmp
es
add
cmp
xor
xchg
add
dec
jne
inc
and
sub
sub
rol
ljmp
add
or
add
arpl
mov
int
jae
mov
inc
xorl
xorb
sub
inc
add
mov
xchg
inc
jno
stos
mov
repnz
bound
adc
and
clc
dec
je
bound
imul
js
inc
pop
bound
adc
mov
mov
xchg
clc
mov
movsb
les
lcall
push
mov
lods
les
lcall
test
pop
xchg
inc
ljmp
push
xor
lds
lcall
cli
pop
stc
pop
and
add
pop
mov
aam
sbb
push
dec
lret
and
pop
push
vpminub
movsb
test
push
mov
or
and
mov
add
pusha
arpl
mov
push
dec
inc
jne
xchg
and
add
inc
push
stc
sub
or
shlb
dec
call
xchg
add
movsb
jo
pusha
and
sub
inc
cmp
adc
adc
mov
mov
adc
cltd
lahf
mov
mov
inc
aam
or
inc
inc
xchg
shll
mov
push
xchg
adcb
xor
mov
cmp
xor
ret
rcrl
bound
or
stc
sub
push
movsb
dec
orl
xor
scas
adc
aaa
mov
fsubl
push
cmp
loop
stc
cmp
push
loopne
mov
fsubs
mov
or
roll
adc
cmpsl
or
xchg
and
cmp
inc
sbb
pop
in
adc
or
das
mov
xchg
mov
xor
and
rorb
repnz
fisubs
loopne
addb
xchg
inc
inc
les
adc
stos
dec
xchg
and
inc
mov
adc
mov
add
rorl
rclb
fs
pushf
test
adc
or
jecxz
and
adc
or
popa
push
stos
adcl
mov
ljmp
data16
and
clc
dec
test
sub
dec
cld
and
sub
sub
xchg
shrb
push
sbb
insb
inc
cmpsb
pop
or
test
or
outsb
das
adc
add
sbb
add
add
dec
sub
ds
lret
lcallw
xor
pusha
push
jno
mov
lcall
or
arpl
xlat
adc
inc
push
out
push
cmp
ret
clc
and
popa
xor
test
stos
mov
mov
sahf
jo
in
cmc
int
xchg
das
or
mov
movsb
mov
inc
mov
out
adc
mov
push
mov
movb
add
mov
push
ret
push
mov
cld
outsb
lock
and
push
jns
out
loope
rorb
pop
xor
lea
add
mov
mov
les
movsl
dec
sub
dec
inc
pop
inc
add
add
pop
mov
pop
or
inc
addr16
sbb
jo
shl
dec
mov
inc
push
xchg
mov
adc
xor
cmpl
int3
mov
lods
scas
addr16
sub
in
xor
or
dec
sbb
lea
xor
sub
xor
xor
pushf
inc
xchg
push
mov
or
cwtl
sbb
adc
lcall
xchg
adc
lahf
mov
jmp
push
dec
cmp
jne
pop
test
mov
sbb
fbld
filds
addb
mov
adc
dec
imul
push
mov
or
push
push
add
cmc
loope
sbb
fs
adc
xchg
fildl
mov
arpl
es
push
out
adc
xor
int
pusha
sti
jbe
popa
ret
faddl
test
sbb
pushf
inc
popa
pop
mov
sub
xchg
cmp
mov
int3
dec
xchg
sbb
bnd
sbb
mov
mov
jg
lret
cmp
and
add
lret
lcall
in
adc
arpl
jp
sbb
push
and
dec
into
push
push
inc
lret
mov
mov
ret
push
inc
adc
aam
sti
mov
mov
test
rolb
mov
xchg
mov
xor
loop
or
mov
and
adcb
sbb
adc
mov
fists
xchg
and
mov
rclb
bound
pushl
mov
push
push
lea
mov
call
mov
mov
mov
call
call
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
pop
pop
pop
pop
pop
ret
nop
push
push
push
push
mov
mov
mov
call
mov
mov
jmp
inc
cmp
jl
cmpb
jbe
cmp
jge
mov
call
jmp
dec
cmpb
jbe
push
mov
sub
inc
mov
mov
call
pop
pop
pop
pop
ret
lea
push
push
mov
mov
call
cmpl
je
mov
pop
pop
ret
mov
push
push
mov
mov
push
push
push
push
mov
and
shr
mov
push
and
mov
push
mov
call
push
call
pop
pop
ret
mov
push
mov
push
push
push
push
push
push
mov
call
push
call
pop
ret
push
push
push
push
mov
mov
mov
push
lea
push
push
push
push
call
test
jne
movl
mov
pop
pop
pop
pop
ret
push
push
push
push
mov
mov
mov
push
lea
push
push
push
push
call
test
jne
movl
mov
pop
pop
pop
pop
ret
push
push
push
push
call
ret
nop
push
call
ret
nop
push
mov
add
push
mov
lea
push
mov
.byte
sbb
