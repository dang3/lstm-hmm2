push
call
ret
ret
dec
cmp
or
xor
xor
xchg
and
into
addr16
inc
xor
loop
pop
mov
jo
pop
out
int3
mov
test
sbb
add
adc
les
jns
es
jmp
sub
jle
leave
lret
and
sub
push
cltd
cmp
jns
xlat
shr
int3
das
loop
loop
sub
mov
stos
in
mov
popf
in
push
jbe
push
stos
inc
add
xchg
xchg
inc
ror
or
sbb
pop
fcmovne
mov
mov
dec
in
bound
mov
test
in
mov
cmp
xlat
sahf
sbb
jmp
shl
cmp
xchg
pop
mov
adc
mov
cwtl
stos
negl
lret
push
out
ds
jmp
andl
pop
jmp
loope
cmp
push
cld
adc
inc
xor
adc
rcr
xchg
jg
or
jne
xor
fiadds
inc
dec
sub
mov
xchg
rcrl
nop
sbb
test
ja
test
insb
addr16
mov
push
fiadds
mov
xor
test
jb
mov
mov
outsb
cwtl
pop
loopne
cld
gs
add
decl
out
jns
push
mov
data16
mov
inc
andl
into
and
sbb
sbb
lret
lahf
pop
jne
lret
mov
sub
mov
cmp
or
cmp
enter
or
stos
add
and
aaa
icebp
fs
mov
pop
lret
mov
dec
lods
xor
push
add
movsl
add
repnz
je
in
int3
pop
testb
data16
out
mov
xchg
dec
test
imul
scas
int
sahf
aam
pop
add
outsb
adc
pop
test
sbb
or
mov
push
andl
sbb
xchg
hlt
inc
push
and
and
mov
aaa
inc
fldt
out
je
ss
jp
mov
aas
outsl
iret
xchg
cmpsl
movsl
pusha
mul
cmpsl
outsb
stc
insb
sub
call
inc
xor
and
popf
and
aam
mov
cli
mov
mov
fmull
xor
mov
cmpsb
push
cmp
cmc
clc
xorb
neg
mov
adc
fisttps
jmp
call
jge
inc
out
xor
dec
fldt
out
test
sbb
add
mov
rcl
push
inc
loopne
int3
scas
push
inc
fimull
das
test
test
xchg
repz
sub
je
psrad
sbb
push
jmp
mov
loop
cli
cmp
xchg
sbb
sarl
pop
std
pusha
jle
add
test
lret
mov
lret
cmp
mov
pop
or
je
xchg
cmp
sub
iret
or
sub
rol
cs
in
ja
ds
rol
jno
xor
and
and
xchg
movsb
pop
out
cmp
push
inc
sub
arpl
mov
test
mov
sub
movsb
aas
shll
roll
test
lahf
cmp
adc
xchg
dec
in
xor
pop
fisubs
inc
mov
movsl
pusha
pop
mov
inc
ds
mov
data16
adc
movsb
andb
dec
ds
cmpsl
mov
punpckhdq
outsl
rol
out
sbb
lods
int
inc
xchg
outsb
dec
les
out
scas
out
ds
inc
aaa
sub
nop
xchg
sub
jne
ret
insb
mov
mov
jb
ja
sahf
aad
popf
pop
cmpb
sahf
daa
cmp
jb
lret
fistl
inc
jp
push
mov
subb
scas
mov
ret
out
push
les
in
decb
test
push
mov
cli
mov
sub
daa
sub
jle
gs
add
ds
jae
and
mov
das
mov
mov
inc
arpl
cs
popf
mov
outsb
sub
ret
lahf
cmp
push
cmp
sub
test
lret
inc
xchg
xchg
push
cmp
subb
dec
ret
push
inc
aam
or
pop
add
stc
jp
dec
test
inc
iretw
and
push
lcall
push
sbb
out
out
adc
sbbb
in
push
arpl
mov
shll
addr16
pushf
and
bnd
mov
rorb
ja
shlb
idivb
dec
sub
repnz
es
mov
das
and
imul
inc
shll
mov
movsb
fnsave
mov
scas
jmp
aaa
out
clc
imul
daa
push
or
fsubl
rclb
cli
push
and
jp
sar
loopne
dec
int
test
xor
sbb
sbb
adc
sar
xchg
bswap
sbb
cli
pop
test
mov
andl
andb
fmuls
pusha
in
test
and
pop
cmp
subb
jmp
sbb
jg
sub
cmp
mov
lcall
popl
jg
adc
pushf
aas
mov
or
lret
adc
mov
bound
mov
push
shrl
add
loopne
pushf
jns
gs
push
ds
push
cmp
rclb
aaa
dec
cmp
andb
test
mov
xchg
std
mov
pop
std
mov
inc
ftst
xor
lds
cmp
negb
push
loop
and
incl
movsb
ljmp
leave
shlb
lea
add
mov
jae
push
push
andl
xchg
inc
mov
mov
inc
imul
mov
push
push
int3
std
testl
lahf
div
mov
rcrl
mov
scas
dec
fwait
add
cmpb
jns
lcall
jle
nop
mov
lret
mov
mov
inc
mov
pop
push
and
xor
jp
iret
addb
aad
in
pop
in
mov
ja
xor
push
mov
and
mov
jl
xchg
jle
or
icebp
mov
push
cmp
sub
sbb
pop
jmp
dec
mov
push
pushl
xor
pop
shll
sti
inc
push
cmpsb
pop
and
push
push
je
jg
cs
leave
xchg
dec
add
rcrb
jb
sbb
pushf
add
in
js
push
lods
and
cmp
adc
or
sbb
push
popf
push
inc
ret
add
jge
or
jnp
mov
loope
dec
mov
fs
jbe
mov
in
pusha
repz
mov
push
push
cmp
divl
push
or
scas
xor
xchg
mov
mov
in
aad
cltd
push
mov
push
push
inc
add
xlat
int
ljmp
xor
mov
fsts
addr16
mov
iret
mov
out
adc
ljmp
mov
pop
nop
add
add
cmp
adc
popf
insl
xchg
xor
xor
test
sti
pop
jb
mov
sti
arpl
and
or
cmp
arpl
test
bound
jne
bound
frstor
fwait
pop
rolb
cmp
in
mov
lea
inc
xor
push
lods
mov
push
inc
adc
pop
pop
inc
aam
cmp
jne
bound
jmp
dec
out
jns
shl
inc
jo
in
int3
sbb
push
push
outsb
sub
out
xchg
xchg
imul
stos
jle
mov
jae
pop
push
inc
dec
cli
sub
leave
fucomi
in
mov
insl
mov
loop
cmpsb
and
fwait
test
aad
fs
das
and
cmpsb
dec
icebp
jb
dec
mov
sub
fstps
test
sub
movsb
inc
fisttpll
dec
mov
jg
enter
mov
imul
add
xor
dec
push
pop
cmpsb
lea
ret
lea
in
pop
lea
popa
lret
pop
push
loopne
push
addr16
ret
enter
icebp
mov
push
mov
jge
andb
cs
test
test
lcall
fadds
jae
add
jnp
cmovge
dec
xchg
adc
pop
out
ret
inc
mov
fwait
mov
cwtl
xor
and
testb
and
stos
jae
fldenv
sbb
pop
jecxz
inc
dec
fwait
loop
add
cltd
movsl
lcall
aad
inc
repz
cmp
popa
and
dec
jmp
inc
ret
mov
xchg
pop
dec
dec
fprem
mov
or
jp
add
add
das
inc
inc
pop
outsl
or
dec
add
pop
pop
scas
dec
sbb
inc
mov
sbb
fbld
test
dec
pop
pusha
gs
scas
adc
ret
mov
pop
cltd
addr16
or
or
xor
cs
pushf
xchg
jae
cmp
stos
dec
cmpsb
pop
mov
mov
pop
mov
and
lret
push
push
mov
pop
scas
addl
or
mov
mov
sub
jb
clc
push
iret
and
xlat
pop
push
in
stos
fbstp
cmp
in
xchg
stos
xchg
xor
push
popa
mov
stos
mov
repz
lods
or
rcl
cmp
sbb
inc
loope
and
and
push
imul
lret
lds
mov
pop
das
cwtl
adc
sub
sbb
fisubrl
lods
inc
test
mov
xchg
pop
push
xor
xor
arpl
ret
imul
xchg
sbb
data16
decb
mov
adc
adc
stos
iret
das
out
jo
and
inc
adc
cwtl
xchg
insl
out
test
inc
jp
pusha
xchg
stc
repnz
movsl
sbb
mov
shl
fildl
mov
cmp
push
sbb
subb
out
xchg
shlb
xchg
jb
int3
push
pop
cli
js
lods
ss
and
inc
xchg
jmp
or
push
jno
out
mov
cwtl
pop
sub
mov
ljmp
adcb
inc
aaa
imulb
mov
xchg
inc
mov
clc
pop
ja
cmpsl
mov
stos
mov
mov
aaa
dec
das
mov
push
inc
xor
or
add
add
call
ret
and
pop
add
adc
test
jne
popf
sahf
xchg
add
or
loopne
adcl
inc
ja
ret
pop
lods
mov
icebp
mov
jae
xchg
and
fldenv
cmp
fisttpl
and
jne
cmp
and
mov
mov
in
cmpsb
adc
jae
int3
inc
mov
psrlq
ficoms
xchg
incl
mov
xlat
ficomps
xor
movsb
pusha
pushf
jmp
sbb
bound
enter
xchg
in
push
pop
stos
pop
xchg
sarb
jecxz
adcl
lods
int
pop
test
lods
and
stos
lods
punpckhdq
sbb
mov
mov
xchg
movb
out
mov
ficomps
mov
sbb
scas
sub
adc
call
cmpsl
ljmp
stos
fnstenv
aad
and
inc
xlat
mov
rorl
stos
jecxz
in
aas
add
faddp
mov
push
mov
ret
or
out
dec
jmp
rcrl
fwait
pop
sub
dec
xchg
inc
lret
ret
adc
js
or
ljmp
fs
jno
repnz
adc
test
test
loope
dec
add
pusha
lods
les
mov
add
pushf
daa
mov
sbb
lret
jnp
cmpb
fistpll
das
fstps
outsl
cmp
add
aas
mov
adc
stos
mov
lret
jmp
push
movsl
xor
xchg
mov
es
pop
scas
jo
test
shlb
in
out
push
lock
add
fmull
mov
scas
sub
in
aam
sahf
jne
cmp
call
pop
inc
add
insl
inc
movsl
lahf
inc
in
xlat
sub
cmpsb
or
cmp
outsb
add
repnz
add
push
sub
mov
mov
push
enter
popf
out
mov
out
sub
ds
imul
repnz
js
mov
mov
add
stos
inc
pop
jae
pop
adc
inc
and
andl
in
std
push
jl
xor
jl
repz
fildl
sub
loopne
lret
mov
jb
stos
and
jg
daa
jecxz
scas
cmpsl
lahf
push
dec
and
insl
gs
jp
pshufd
pushf
push
pop
adc
push
data16
cld
dec
pop
dec
pop
repnz
xchg
addb
clc
arpl
jmp
cmp
daa
sub
rcll
cmp
and
sbb
add
ret
imul
xor
or
ljmp
pop
or
leave
hlt
or
mov
mov
lods
call
jmp
imul
jmp
lea
mov
xchg
push
pop
cli
into
lds
cmpsl
test
jo
ret
je
mov
pop
shrl
push
mov
inc
inc
cmpsb
push
inc
cltd
cmpsl
outsl
sti
sub
mov
push
and
cmp
stos
xlat
dec
xchg
addr16
ror
xor
jno
fsubs
mov
mov
xchg
iret
aam
lds
cmp
sti
mov
cmpsl
fsubrl
xchg
and
xchg
cmp
imul
pop
jle
xchg
push
jmp
mov
mov
inc
and
into
xor
jbe
cmpsl
fwait
aam
ret
jbe
lods
and
xchg
cmc
test
data16
jns
inc
jecxz
mov
cltd
clc
lahf
inc
adc
jnp,pt
jo
arpl
add
in
mov
pop
pop
ficoml
push
mov
js
dec
inc
xor
jg
in
lcall
mov
aad
pop
int3
pop
adc
mov
jle
and
or
lret
imul
in
lea
out
sbb
divl
popf
fcoms
xchg
lods
xchg
test
lods
cs
sbb
push
or
dec
lret
decl
sub
shlb
xor
mov
mov
mov
lods
and
pop
sti
mov
imulb
xor
repz
outsb
add
sub
mov
icebp
cltd
out
insl
loopne
lcall
dec
mov
ss
add
into
shrl
mov
iret
loopne
pop
jnp
cwtl
jns
push
push
dec
cmpl
insb
mov
iret
or
cmp
sbb
cs
mov
fs
ret
call
icebp
addr16
adc
and
or
mov
cmp
das
jl
les
sub
jg
sub
cmp
mov
lahf
jecxz
andl
das
lods
jo
popf
adc
fcoms
mov
shl
dec
add
mov
fs
sub
pop
jno
scas
add
aam
and
cmp
iret
call
push
jbe
jbe
and
xchg
shll
aam
bnd
xor
mov
sbb
mov
mov
std
push
outsb
imul
adc
jge
mov
or
enter
lods
enter
sbb
lahf
sarb
mov
cmp
mov
fs
jbe
lahf
and
jp
push
neg
xchg
xchg
cwtd
or
enter
jecxz
das
mov
xor
fwait
cmpsl
jle
xor
mov
in
insl
jg
ret
cmc
adc
cmpsl
and
jbe
ja
dec
inc
movsb
addr16
xor
dec
les
scas
sbb
lods
loope
or
je
mov
lods
jecxz
fsubr
in
jle
jmp
mov
lds
adc
jno
jnp
sahf
mov
dec
in
leave
movb
sti
dec
cwtl
mov
scas
and
mov
fdivl
cmp
add
pop
rcr
and
fldt
imul
bound
pop
jb
jmp
pop
je
cmp
push
jmp
jle
daa
adc
lcall
mov
enter
jge
dec
pusha
dec
mov
dec
insl
hlt
jne
imul
mov
mov
mov
icebp
fisubl
leave
addr16
inc
outsb
xor
dec
mov
pop
and
aaa
pop
test
inc
or
xchg
ficoms
jae
mov
inc
mov
stos
gs
aad
out
adc
call
mov
jmp
xchg
xor
jp
cmc
pop
mov
adc
in
aaa
push
pop
cli
fcompl
dec
and
adc
mov
out
cmc
and
cmc
scas
movsl
add
pop
movl
clc
dec
mov
stos
addr16
in
outsl
pop
outsb
je
dec
ss
jne
aas
shlb
add
xlat
arpl
xor
or
adc
push
xor
popa
add
aad
xchg
ret
aas
fists
insl
mov
popf
fmul
push
mov
push
inc
push
jo
jbe
push
fildl
popa
je
rcl
xchg
dec
mov
mov
jg
or
inc
push
mov
mov
mov
cltd
jmp
jnp
ret
add
jg
rcl
push
pop
add
test
test
dec
jbe
pop
xor
rcrl
rorb
dec
mov
shlb
fimuls
xchg
fcomi
pop
nop
ret
arpl
pop
pop
sbb
mov
xchg
pop
inc
in
les
repnz
or
sub
sbbl
mov
bound
dec
loop
ljmp
xlat
dec
mov
pop
lret
inc
inc
stos
icebp
or
mov
mov
es
xchg
outsb
mov
mov
movsl
cwtl
adc
sbb
fistpl
cmc
xchg
imul
lea
shlb
push
scas
mov
add
in
fwait
cs
call
pop
jmp
inc
dec
out
and
mov
fisubrs
mulb
jnp
xor
mov
test
lcall
push
xchg
push
ss
dec
inc
bound
pop
stos
jecxz
out
push
icebp
jl
mov
insl
aas
adc
pop
xor
ss
jbe
stc
dec
addps
sub
push
mov
xor
xlat
int3
inc
in
mov
xor
icebp
adc
sub
xchg
add
fsubs
popf
data16
out
fisubs
adc
add
out
or
mov
leave
xor
mov
loopne
inc
lahf
dec
mov
dec
cmc
xor
jno
add
jg
dec
fwait
dec
dec
cld
fstpt
mov
pusha
push
sub
cmp
inc
test
orl
cmp
inc
call
iret
lods
xchg
mov
lahf
lahf
jp
and
cs
sbb
shlb
cmpsb
loop
mov
test
lds
outsl
adc
adcl
xchg
shll
xchg
imul
mov
lods
or
inc
shll
aaa
ret
or
shlb
xchg
dec
push
jle
fcom
mov
or
xchg
jbe
or
add
jl
divb
push
dec
xor
loopne
dec
fildl
insl
xor
pop
cmpsb
jle
xlat
pop
mov
push
loop
imul
dec
mov
mov
mov
or
addr16
sub
les
lahf
inc
and
dec
sbb
pop
dec
inc
in
pop
lea
dec
cltd
pop
in
push
inc
mov
push
add
jb
std
jmp
adc
jne
and
sbb
sub
mov
ret
or
fists
aas
sub
fidivrs
insb
shl
out
cltd
jae
cltd
push
sarl
jge
and
icebp
xchg
xorl
sbb
sub
out
push
sub
fbld
or
fisubl
push
das
out
xor
inc
xor
mov
mov
int
lods
push
std
scas
leave
cmp
inc
out
xchg
cmp
mov
mov
push
mov
dec
xor
in
add
hlt
dec
fildl
sub
xchg
fstp
cmp
jno
mov
xor
call
cmc
in
aaa
lods
ficoml
or
dec
loope
sti
sbb
int
pop
cli
jp
jge
jno
lea
inc
cs
push
sub
sbb
mov
push
fsub
jecxz
push
data16
lea
mov
sub
fiaddl
fldenv
jmp
outsl
cmpsb
movsl
xchg
mov
divl
gs
or
jmp
or
adc
lcall
cwtl
mov
enter
cmp
inc
mov
fs
in
rclb
lret
je
and
inc
inc
push
jno
jg
jp
mov
push
pop
xchg
xchg
inc
pop
in
xchg
mov
int3
xchg
inc
add
addr16
dec
and
out
lods
addl
pop
mov
test
pop
push
bound
and
stc
adc
fmuls
out
inc
jno
sarb
ret
sahf
aas
scas
push
xchg
test
and
leave
jns
imul
ficoms
cmp
ret
imul
dec
fistpll
aas
dec
and
shl
or
mov
add
or
mov
sbb
gs
jg
xlat
pop
fistps
movsb
andb
imul
in
cwtl
popa
arpl
in
out
insb
arpl
sub
cltd
push
outsb
pop
test
xchg
cmp
ret
jbe
jge
cli
cld
pop
daa
sbb
aam
mov
into
sub
aas
and
scas
push
ja
jge
cwtl
fdivs
hlt
mov
sbb
out
mov
sbb
addr16
mov
pop
xor
sub
jle
push
ret
lahf
lcall
loope
int
lret
pop
sbb
dec
js
adc
incb
adc
int
movsl
dec
aam
pushf
cwtl
adc
in
rcll
cltd
es
jmp
and
push
mov
adc
cmc
sbb
mov
add
cmc
jnp
inc
cltd
cmpsl
mov
add
pop
sti
adc
add
js
adc
mov
scas
cmc
cvttps2pi
inc
mov
xor
add
pop
test
lods
cmc
stc
or
xlat
stos
test
stos
cs
add
cmp
js
ret
mov
in
imulb
fwait
leave
xchg
popf
ret
repz
or
sub
faddl
xchg
mov
sub
cltd
enter
dec
cmp
add
sub
bound
jbe
xchg
and
or
imul
out
and
dec
fwait
into
adc
jne
push
xchg
dec
sbb
or
imul
xchg
push
mov
jl
mov
stos
int3
aam
sbb
filds
out
sub
jl
push
out
pop
add
stc
mov
enter
dec
and
xchg
and
sbb
mov
test
test
pushf
stos
lret
add
xor
dec
fstpt
je
cltd
out
jb
push
mov
mov
lea
cmp
into
xor
jmp
jb
in
jae,pn
and
mov
pushf
pop
adc
mov
inc
jae
add
scas
push
and
jo
cmp
inc
loope
inc
add
sub
clc
stos
mov
aam
add
pop
call
lea
and
cs
pop
arpl
test
sub
xchg
loopne
mov
aam
mov
movsl
repnz
mov
and
mov
mov
xor
dec
stc
cmp
or
xor
mov
jnp
popf
dec
js
add
and
jns
cmp
lea
lcall
fdivrs
lea
sub
mov
xchg
in
icebp
push
jne
cld
mov
mov
mov
shlb
lahf
loopne
mov
pushl
rorl
fcmovb
push
cmp
js
inc
jecxz
pop
daa
sahf
xchg
ja
imull
dec
xlat
dec
in
jae
xor
mov
or
imul
sbb
mov
inc
sbb
mov
or
imul
xchg
mov
sub
or
jae
leave
mov
adc
pop
sbbb
lea
pop
xor
jne
mov
dec
lods
lods
mov
lods
or
sahf
jp
mov
add
iret
fmull
cmp
ljmp
ja
cmpsl
jns
sbb
inc
and
add
inc
mov
je
mov
mulb
xchg
pop
mov
mov
xlat
mov
rol
fldcw
mov
sbb
pop
dec
movsl
rcrl
in
add
arpl
shll
push
outsl
aas
inc
push
pop
inc
sub
jo
xchg
out
push
mov
or
aad
shl
and
sahf
movsb
dec
mov
jb
je
mov
xchg
daa
and
popf
lcall
in
cs
push
test
movsb
or
inc
push
or
sub
dec
movsl
test
popf
jg
jl
fsub
fdivs
jle
adc
cmp
sub
sub
out
sub
and
jo
scas
mov
in
xchg
emms
xor
mov
jbe
loopne
mov
test
jae
cld
int3
fwait
and
push
lahf
lods
mov
cmp
lods
popa
mov
pop
lret
push
jle
mov
sbb
stc
movsb
test
jo
pop
add
cmp
sbb
jno
cmpsl
xor
adc
out
and
inc
push
scas
pusha
mov
ret
scas
xchg
mov
sbb
daa
mov
mov
sbb
mov
inc
push
cmp
cmpsb
pop
insl
mov
push
movsl
ret
out
int3
xchg
push
fldcw
pop
jecxz
cltd
dec
movsl
test
sub
pop
out
aas
mov
insl
xor
dec
es
mov
jecxz
jo
xchg
add
mov
mov
mov
jbe
pop
fwait
test
arpl
ret
je
jae
inc
inc
pop
lods
cmp
mov
sti
mov
dec
inc
leave
jp
jmp
cmp
push
int3
mov
pop
cmp
out
je
mov
mov
arpl
leave
jge
pop
dec
mov
cmp
lods
div
mov
pop
dec
inc
sahf
aad
add
les
inc
adc
rcrl
push
push
mov
adc
bound
push
dec
or
fst
lods
or
out
gs
call
fcoms
push
and
mov
lret
or
mov
xlat
mov
insl
lds
ljmp
dec
jbe
mov
jle
cmp
lds
sti
sbb
lret
mov
inc
mov
fmul
lods
xlat
call
fsts
and
les
in
aaa
test
mov
imulb
inc
outsb
pop
pushf
mov
cmp
inc
lock
xchg
jmp
fnstsw
mov
leave
sbb
sbb
lds
popa
xchg
xchg
data16
push
nop
mov
addl
imul
leave
xlat
pop
stos
pop
jbe
mov
filds
cmp
adc
mov
lea
mov
xor
fisubl
pop
cmpl
jl
lahf
sub
xchg
add
dec
popf
mov
jae
and
xor
shrb
mov
mov
fsub
cld
sbb
fsub
cltd
fildl
iret
or
lea
fildll
adc
jl
mov
cmpsb
and
add
or
stos
mov
out
xor
test
push
lock
dec
cmpl
pop
mov
sahf
aad
sub
sahf
insl
mov
jnp
inc
cmp
sti
mov
aas
js
xchg
sbb
into
sbb
rcl
imul
or
imul
mov
cli
and
jne
mov
scas
push
leave
cltd
ljmp
stos
imul
cmp
sbb
sbb
ja
mulb
lods
fldenv
icebp
cmc
mov
fcomps
rorb
jno
xchg
mov
add
xchg
inc
add
xlat
in
cmpb
mov
or
sub
jl
test
sub
adc
sti
ss
cltd
iret
test
mov
cld
sub
movsb
jnp
nop
cmp
sti
adc
mov
dec
or
shlb
mov
xor
xchg
ja
dec
sub
mov
dec
cmc
insl
lods
and
lret
mov
jecxz
lcall
xchg
jne
mov
rolb
xor
call
adc
mov
xor
bound
test
lcall
aam
repnz
inc
sbb
mov
into
stos
mov
filds
mov
imul
mov
cltd
scas
add
mov
and
mov
xchg
xchg
sbb
jb
testl
sub
pop
lods
arpl
sti
mov
dec
out
xchg
cmpsl
push
or
bound
dec
iret
mov
insl
inc
or
or
out
cld
sub
or
imul
and
cs
ficoms
in
repz
mov
lret
sub
mov
lret
xor
loope
sbb
insl
dec
and
add
lock
mov
mulb
mov
stos
dec
jge
repnz
dec
xor
inc
outsl
jmp
xchg
jp
testb
ss
stos
and
lret
clc
and
xchg
mov
sbb
lret
mov
xchg
aam
stc
cmp
inc
incl
ret
pusha
ljmp
test
clc
push
outsl
sahf
rcl
and
pusha
inc
jg
nop
mov
cld
mov
cmp
xchg
jbe
lret
out
js
in
ljmp
and
pop
sbb
aad
mov
add
dec
shl
sub
lcall
mov
loopne
dec
dec
mov
jb
mov
cmc
push
cmpsl
mov
pop
mov
cmp
iret
bound
in
fs
insb
aaa
das
or
xchg
mov
inc
mov
jg
adc
test
sbb
or
faddl
adc
xchg
jp
pop
jmp
push
jecxz
in
sub
insl
popa
push
push
cmpsb
push
cmc
mov
cmp
or
jmp
or
insb
stos
imul
addr16
xchg
and
out
je
mov
mull
notl
test
xor
rcrb
mov
hlt
mov
das
gs
stc
dec
stos
dec
xlat
das
mov
jmp
dec
ffreep
dec
jmp
dec
sub
push
les
jne
cmp
jne
sbb
adc
lret
rclb
xchg
sbb
pop
or
push
xchg
add
mov
insl
lahf
add
sub
repnz
int3
xchg
dec
shl
jmp
dec
sbbl
cld
xchg
xor
int3
mov
std
mov
cmp
insb
cmp
daa
fnstsw
lahf
in
lret
sbb
ret
adc
cmc
push
sti
or
les
jle
lcall
call
and
fcomps
mov
mov
inc
lret
jns
add
push
and
mov
or
mov
es
das
sbb
pop
out
mov
in
clc
andb
test
cmpsb
cmp
lcall
mov
inc
scas
xor
popa
imul
movsl
mov
jbe
aas
pop
cltd
pop
dec
pop
push
in
pop
rolb
lahf
pop
or
insb
push
mov
sarl
or
insl
fs
mov
mulps
subl
lock
cltd
adc
add
fistl
jl
mov
sete
inc
enter
in
ret
push
pop
sub
mull
or
sbb
mov
test
pop
or
adcb
sbb
or
fimull
mov
mov
cwtl
sub
add
cmpsl
pop
ljmp
pop
inc
dec
or
lds
hlt
les
dec
test
xchg
add
xor
mov
inc
cmp
cmc
fadd
std
in
xor
dec
mov
sub
fcmove
subl
mov
and
out
mul
add
dec
lret
pop
adc
shl
fimuls
jno
outsl
aas
pxor
cwtl
dec
or
leave
mov
jmp
xchg
movsl
insb
cwtl
outsl
clc
pop
xchg
incb
rorl
push
aas
cltd
fcoms
pop
fistpll
inc
add
repnz
ljmp
aad
mov
pop
inc
jecxz
loopne
loop
jmp
test
and
push
movb
mov
sbb
pop
inc
insb
test
test
or
inc
jge
sub
xchg
lea
fimull
subl
and
push
lret
imul
push
sub
fnstsw
xchg
mov
cmpb
pop
outsl
pop
iret
popa
and
pop
xchg
jmp
out
imul
jle
push
xchg
cmp
sbb
inc
sub
imul
std
push
popf
insb
mov
and
mov
jae
push
and
arpl
sbb
push
dec
add
hlt
into
test
pop
cmp
pop
es
out
dec
jns
pop
xchg
push
mov
std
inc
scas
aad
mov
add
mov
mov
loop
aaa
and
jne
loopne
adc
icebp
add
dec
cs
repnz
or
aas
loopne
adc
xchg
and
stc
mov
into
push
cmpsl
push
lods
push
dec
sub
pop
jne
pop
sahf
fimuls
add
les
mov
fisttps
insl
fbld
pushf
adc
push
fidivl
inc
and
shlb
or
xor
lea
jp
into
push
fnstcw
in
mov
jg
je
xor
pop
lods
jmp
dec
test
xchg
adc
pop
imulb
pop
lea
insl
fnsave
ret
mov
adc
mov
sbb
push
stos
into
cmp
adc
or
lock
leave
cmp
pop
push
push
cmc
ret
jge
fwait
cmp
int3
jbe
mov
and
dec
sbb
mov
cld
cmp
lods
mov
push
ljmp
shll
data16
pushw
jge
popa
sbb
icebp
adc
in
push
sbb
out
repnz
aas
pop
add
repz
movsl
mov
adc
xor
mov
xchg
jg
pop
js
pop
clc
ret
pusha
adc
pop
adc
sub
aad
rolb
or
fisubl
and
rcrl
cmp
loopne
aas
outsb
fsts
ja
jp
imul
popa
pusha
aam
cld
xchg
xchg
sub
pop
lahf
dec
xor
push
xchg
xchg
loop
pop
xorb
push
lea
mov
push
cmc
mov
test
pop
test
push
repnz
or
pop
clc
stc
gs
jmp
xorl
xor
dec
xor
xchg
lret
inc
push
loope
sbb
das
es
mov
adc
fwait
mov
xor
jge
pop
shll
addr16
shlb
cmp
fcoms
iret
cmc
pop
sar
test
fmull
push
movsb
pop
xor
cltd
pop
notl
push
lret
xor
xor
data16
cld
int3
cmp
sub
pop
jo
lds
fcomi
jno
stc
xchg
mov
mov
dec
ret
cmpsl
lret
sub
fnstenv
xor
xor
repz
dec
and
add
xchg
movsl
shrl
mov
test
dec
mov
dec
hlt
adc
push
pop
test
sub
push
neg
neg
fsubrl
jnp
imul
notl
jge
xor
pop
sti
in
sbb
cltd
sbb
dec
stc
addr16
mov
test
repz
sysret
mov
gs
jbe
jmp
pop
mov
mov
or
movsb
loop
out
insl
fstpt
enter
xor
mov
test
hlt
dec
adc
mov
jmp
test
andb
out
sub
repnz
sbb
lret
add
jbe
sbb
rcr
jno
out
xor
shr
cmpb
mov
das
push
adc
add
cmpl
push
xor
std
cmp
out
addr16
jmp
mov
jno,pt
std
in
bound
orl
cli
add
loope
or
xor
test
push
mov
xchg
or
cmp
cmp
mov
and
add
shrl
adc
pop
sub
cmp
shrb
test
and
ss
movsl
in
inc
xor
sti
test
shll
pop
jg
add
mov
js
pop
test
and
aad
push
fsubrs
jbe
std
sbbl
and
sahf
mov
mov
test
je
lahf
xlat
loope
push
inc
or
sub
mov
popl
dec
dec
add
bound
sahf
mov
adcb
dec
dec
dec
push
pop
test
sbb
les
aad
in
mov
jo
pop
insl
xor
and
pavgb
js
test
mov
enter
or
cltd
dec
jl
imul
add
dec
add
sub
scas
in
and
adcb
push
sbbl
sub
iret
inc
es
fwait
inc
scas
mov
out
jp
popf
lahf
inc
cmp
clc
das
mov
scas
repnz
mov
stos
inc
or
in
fbld
pop
andps
fmuls
in
sbb
or
insb
xlat
jne
scas
daa
mov
push
daa
lret
daa
push
imul
sub
mov
or
inc
pop
lcall
push
jno
ret
sub
aam
mov
sub
test
in
lret
arpl
cmc
mov
inc
rcl
stc
mov
lods
bound
lea
inc
adc
xor
and
adc
push
cs
and
xor
je
lcall
je
dec
xor
dec
push
aad
or
insb
sbb
lret
jne
push
mov
cmp
jo
xor
testl
mov
lock
cmp
scas
mov
repz
jecxz
std
adc
aad
sti
test
and
enter
ljmpw
addr16
arpl
pop
shlb
iret
js
jle
das
stos
test
cltd
cli
les
je
sub
adc
inc
push
test
xorl
xchg
or
notl
xchg
aam
mov
fdivl
mov
xlat
cltd
add
mov
xor
jns
inc
adc
rcrb
sbb
sbbl
test
outsb
xor
xor
sub
out
fnstsw
sbb
cmp
xchg
mov
rcll
sub
pop
dec
jmp
jge
stos
jge
dec
cmp
std
out
adc
mov
mov
subb
adc
cmp
xor
cmp
test
lret
rcrl
push
in
jo
fsubr
add
lret
xchg
aas
inc
mov
fdivs
add
aas
xchg
add
cltd
test
in
jno
jb
dec
daa
push
in
inc
stos
out
cs
data16
mov
fxam
getsec
popa
cs
das
cmp
jmp
outsl
adc
adc
adc
adc
ss
sti
in
cltd
les
or
out
pushf
push
outsl
xchg
mov
or
cltd
xor
xor
cld
movsl
sti
cld
pop
lea
cmp
cmp
cmp
jbe
xchg
shl
mov
vpsrlq
jae
lods
out
xchg
inc
int3
jo
in
push
push
push
or
inc
jo
rclb
inc
in
mov
pop
cmp
mov
mov
lcall
arpl
lret
fnstcw
lods
dec
inc
lods
in
pop
cmp
jl
or
push
daa
jbe
dec
insb
je
sbb
lods
cmpsb
xor
add
movsl
subl
mov
xchg
inc
xor
shl
mov
sbb
add
or
hlt
pop
loopne
push
aas
cwtl
mov
xchg
fstpt
imul
in
stos
int
mov
sub
adc
xor
out
in
sbb
fsub
shlb
fstps
inc
fs
mov
push
jbe
jp
dec
test
inc
mov
fiadds
mov
lcall
xchg
andl
int
pop
fcompl
xor
inc
xchg
cmp
in
clc
push
mov
ljmp
adc
out
sub
jle
mov
dec
pusha
js
adc
and
sub
cld
movsb
das
out
loop
fstpl
push
fcomps
inc
outsl
sbb
adc
cmc
decl
ss
add
add
mov
lds
ja
jg
add
inc
pushf
or
push
int3
adc
mov
push
nop
jmp
int3
imul
pop
lea
ret
inc
popa
into
inc
add
cltd
jns
inc
sar
repnz
outsl
ljmp
cmc
sub
xor
push
fs
mov
dec
aam
addl
add
repz
jle
and
movsl
cmp
sti
jnp
xlat
sti
lret
inc
or
cld
enter
pop
add
shlb
daa
xchg
add
ret
loop
push
pop
negl
sbb
shlb
add
cli
dec
xor
xchg
or
ret
jnp
sub
in
dec
add
pop
mov
mov
in
loopne
rclb
iret
and
ret
out
mov
dec
bound
and
loopne
fcmovnu
or
jo
in
call
and
pop
movsl
push
xlat
or
pop
sub
out
mov
adc
mov
push
outsl
xlat
mov
cmp
out
mov
xor
sub
rclb
push
and
sub
pusha
stos
test
movsl
scas
sub
mov
psubusw
mov
inc
xor
aad
js
ds
mov
loop
sub
and
notb
add
lret
loopne
aas
sbb
lret
fimull
mov
aam
adc
mov
jb
sbb
out
pop
jnp
and
aas
pop
and
ret
aas
idivb
xor
adc
call
xor
scas
ja
rorb
pop
rcrb
or
aaa
shlb
popf
mov
jbe
dec
inc
jae
stc
xor
je
iret
push
out
test
lret
inc
push
fstl
into
xchg
clts
push
push
sbb
ss
push
push
cmp
loope
cmp
push
leave
jmp
icebp
in
add
imul
push
or
mov
movsb
xor
pop
movsl
xlat
pop
xchg
js
mov
mov
push
or
push
arpl
push
dec
idivb
je
lods
fisubs
test
mov
or
pop
out
mov
and
shlb
je
je
mov
imul
fs
mov
aad
int3
int3
jge,pn
movsl
inc
cmpsb
cmp
and
cmp
cli
mov
bound
xchg
lret
jle
repnz
xor
sub
lret
dec
insl
mov
jge
repz
sub
xchg
inc
push
cmp
cmp
jle
or
cmp
idivb
dec
les
test
cs
cmpsl
pop
fnstsw
mov
adc
ret
pusha
or
add
xor
shlb
sbb
push
insb
pop
pop
dec
mov
fldl
fstpt
xlat
outsl
mov
cwtl
loope
icebp
lcall
inc
iret
sub
jp
in
add
pop
push
mov
mov
das
xchg
push
xor
pop
aad
enter
sbb
mov
fimull
fnstcw
xchg
inc
bound
cwtl
jbe
cmpsl
adc
pop
fs
push
shrb
lods
insb
and
jg
daa
mov
sbbl
xor
mov
imul
cmp
xchg
add
in
fildl
fistps
jno
inc
cmp
fcoml
inc
add
test
fcom
push
jno
popa
adc
daa
out
inc
xchg
sbb
add
xor
sbb
and
inc
mov
shll
jae
insb
stc
push
push
push
inc
dec
or
pop
add
jo
outsl
lock
pop
sub
lahf
mov
jnp
cmc
jae
popf
xchg
jmp
popa
sbb
sbb
rorl
outsl
xchg
dec
dec
inc
fs
adc
inc
xchg
ficompl
out
pop
pop
les
fsubl
sub
mov
xchg
mov
int3
push
ss
pop
push
jecxz
rorb
mov
js
mov
and
sub
push
push
orl
cmc
cltd
fistps
mov
or
jg
mov
or
mov
cmp
lods
xor
xchg
or
xchg
and
or
rcrl
loopne
ds
or
cmp
mov
jne
mov
in
pusha
fwait
xor
outsb
popa
sarb
stos
cltd
xchg
add
mov
xchg
mov
sub
sahf
mov
mov
fnstsw
cmp
push
cwtl
or
jno
add
mov
xor
clc
lcall
and
pop
test
mov
inc
icebp
rol
inc
imul
movsl
cmpsb
sbb
adc
mov
aam
jmp
lock
or
cli
mov
jg
jge
inc
jge
adc
xchg
loop
fadds
iret
bound
jno
cmc
sbb
and
ftst
or
pop
ja
or
add
push
insl
cmp
mov
add
lock
lods
repnz
sub
aas
test
js
scas
sub
std
xchg
jnp
jl
mov
inc
xlat
fwait
xchg
ljmp
call
jl
imul
sub
icebp
adc
sbbl
and
mov
pop
in
and
mov
lahf
inc
pop
scas
jle
jge
mov
mov
bswap
daa
and
insl
jecxz
xor
rcrb
or
js
pop
mov
jmp
roll
sbb
sub
pop
fs
sub
divl
cmpsl
jmp
jg
push
cmp
push
popa
sbb
adc
gs
cwtl
xor
add
out
fsubl
and
sar
fwait
add
cmc
lds
sahf
mov
arpl
xor
sub
and
popf
lea
fldenv
cmp
aaa
jp
fsubl
dec
xor
jp
lret
inc
test
lahf
add
inc
mov
mov
cmp
add
nop
xor
hlt
or
adc
xor
test
jge
pop
pop
repz
sbb
aas
and
iret
shl
pop
cld
and
adc
clc
or
jle
mov
jnp
gs
out
jle
cmp
push
inc
fildll
repz
dec
sbb
push
mov
hlt
hlt
cmpsl
pop
mov
push
push
popf
imulb
adc
imul
mov
push
roll
outsb
stos
ljmp
sub
fcoms
adc
or
loope
sub
adc
rol
add
mov
sar
push
cld
lock
int
adc
nop
out
scas
sub
dec
scas
sti
mov
mov
or
les
jle
jp
cmp
outsl
mov
in
test
loopne
adc
int
mov
inc
or
add
and
aam
out
test
in
fwait
mov
ljmp
mov
jae
jmp
rcrb
add
mov
pop
lcall
dec
push
mov
mov
popf
jo
repz
mov
dec
inc
fucomip
icebp
fstpl
mov
jb
cmpsb
repz
pop
aam
out
xor
push
inc
pop
imul
movsb
ss
pusha
cmpsb
xchg
jno
pushf
cmpb
test
jecxz
dec
mov
std
inc
mov
repz
mov
test
sbb
lret
pop
fistps
push
pop
xchg
jae
mov
rolb
add
loope
xchg
cld
xlat
je
test
xchg
popf
test
jge
insl
pop
mov
sbb
inc
inc
sbb
das
mov
jo
sti
xor
mov
xchg
std
sbb
push
pop
xchg
fldt
push
pop
adc
and
push
mov
aas
je
and
arpl
ja
lea
imul
leave
lea
mov
fadd
jno
add
fsubs
repnz
xor
test
hlt
push
mov
std
add
cmp
sbb
les
mov
adcb
addr16
add
or
lods
push
adcb
insb
add
rorb
out
fcomi
or
aam
mov
mov
or
push
pop
das
rclb
es
or
mov
mov
pop
pop
adcl
cmc
shll
stc
sbb
adc
cmp
imul
scas
lahf
dec
sub
jb
ss
popf
cmp
pop
mov
stc
icebp
test
xchg
cmp
aad
dec
inc
cmp
mov
fmull
xor
nop
jno
cmp
pop
sahf
pop
inc
aad
int
push
pop
cwtl
test
fisttps
pop
push
sub
in
cmp
fs
sub
pop
xchg
xor
sbbl
js
mulb
and
adc
insb
add
xchg
push
push
mov
in
inc
lea
sbb
dec
adc
pop
jne
imul
loope
pop
xorl
pop
in
dec
or
addl
decl
int3
sub
imul
out
dec
inc
les
xlat
negb
lock
nop
xchg
es
mov
ds
inc
test
mov
push
mov
insb
pop
test
bound
mov
mov
xchg
jnp
cmp
adc
popf
lods
sbb
jl
addr16
jecxz
icebp
dec
inc
xchg
dec
mov
shll
xchg
pop
lds
data16
and
dec
out
mov
out
mov
xor
adc
add
icebp
pop
cmpsb
aad
sahf
das
stc
imul
mov
xor
insb
in
nop
imul
mov
aam
fs
je
jle
into
test
pop
jge
arpl
ljmp
jmp
jecxz
pop
xor
pop
add
or
xor
push
mov
sub
fidivrl
cmp
mov
mov
jge
bound
divb
in
lret
movsb
pop
cmp
add
cmpsb
or
test
and
arpl
insb
int3
push
cmp
adc
ljmp
pop
mov
push
fnstsw
add
loopne
or
inc
adc
mov
add
add
push
sbb
ret
popf
cltd
mov
and
outsl
aas
jge
xorl
mov
ss
int
and
mov
cmpsb
or
fistpll
repz
ret
loopne
lods
mov
pop
test
push
in
dec
mov
es
xor
mov
dec
int3
arpl
rcrb
mov
adc
dec
xchg
dec
outsb
add
xchg
sbb
mov
mov
fs
push
lcall
ror
inc
stos
dec
and
jle
add
sub
push
int
outsl
imul
aam
sub
and
adc
test
add
nop
pop
jp
lods
or
rorb
xor
adc
aam
cmpsb
pusha
aam
pushl
cwtl
jne
mov
sub
inc
mov
mov
cmpl
dec
mov
lock
or
imul
lods
dec
loope
adc
push
mov
and
and
jae
mov
sbb
in
xor
jne
pop
sub
jmp
push
mov
mov
je
sub
imul
mov
dec
adc
xor
test
mov
sub
xor
fucomi
rol
in
jle
test
cmp
cs
push
cmp
inc
cld
ja
push
mov
pop
adc
add
sbb
shll
daa
popf
test
movsl
xchg
mov
inc
push
insb
cltd
add
in
out
xor
add
aas
mov
mov
sub
sbb
mov
sbb
lock
pop
push
loop
jmp
test
push
fidivrl
add
fadds
ret
adc
inc
push
ret
out
flds
cmp
fcoml
mov
cmp
sub
sbbl
fildl
hlt
inc
insl
out
cmp
mov
xchg
xchg
pop
add
mov
mov
mov
cmp
push
mov
icebp
jo
stos
inc
sub
imul
mov
dec
sahf
in
jmp
mov
scas
repnz
jnp
int
mov
es
cmp
ret
push
into
addb
outsl
stos
xchg
stos
movsl
stos
ljmp
inc
push
mov
jo
cmpsb
jl
mov
fmuls
sbb
dec
sarb
xchg
in
fs
cmp
xchg
xchg
inc
push
mov
jbe
dec
or
cmp
lea
std
movsl
jnp
add
mov
js
ljmp
add
xchg
nop
aas
mov
cltd
mov
xor
sub
adc
mov
les
scas
je
dec
xchg
lret
out
lahf
pop
out
dec
inc
inc
adc
fstp
iret
outsl
fwait
mov
call
movsb
mov
das
xchg
sbb
js
fcmovbe
xchg
push
sub
cli
push
sub
inc
out
inc
xchg
lds
jo
insb
fs
cmpsl
sbb
push
mov
shl
sub
pop
sbbb
gs
cmp
inc
xor
adc
incl
push
xchg
sbb
inc
jp
mov
fs
sub
das
adc
pop
and
mov
bound
pop
repnz
add
pop
push
loopne
jecxz
dec
dec
or
out
xorl
jmp
xchg
fisubl
sbb
and
xor
dec
sub
icebp
pushf
or
int
dec
js
cmpsb
mov
imul
jbe
cmp
fstp
mov
inc
mov
repz
dec
dec
mov
lret
movl
fisttps
jg
inc
push
call
xor
or
jno
cld
add
std
aam
scas
dec
loopne
bound
jno
sbb
push
jg
mov
lods
lret
test
jbe
cli
repz
sub
add
out
cli
sub
out
push
mov
fwait
cmp
add
mov
shll
mov
xchg
mov
flds
movsb
cwtl
jmp
je
jp
xchg
jb
xor
fldenv
xor
sbb
xor
test
lret
lcall
lahf
loope
lret
mov
fstl
inc
mov
iret
jno
pusha
clc
jmp
inc
xchg
sub
das
sub
aad
cli
jecxz
push
inc
xchg
scas
movsl
and
xchg
out
mov
adc
les
mov
dec
xchg
arpl
mov
fdivrl
jp
leave
jecxz
andb
mov
bound
mov
add
fxch
xor
mov
mov
rcll
ss
xor
fadd
les
inc
fimuls
aad
jle
dec
adc
data16
and
daa
or
bound
cld
lods
sub
mov
inc
loop
stos
mov
mov
xchg
xor
out
insb
hlt
push
mul
ss
add
or
jo
les
pop
imul
pop
ffree
xchg
addb
out
mov
push
jnp
mov
xor
data16
hlt
push
cmp
mov
std
cld
mov
es
jge
jecxz
xchg
insb
sub
cmp
jg
dec
fidivrl
add
jg
jge
sbbb
test
pushf
cmp
add
into
push
pop
cmc
xchg
add
js
and
bound
inc
jecxz
dec
ds
sti
dec
ss
push
cmp
pop
or
aam
xchg
jl
pop
or
mov
in
mov
mov
popa
sbb
cli
stos
ljmp
cs
fs
dec
cmpl
int
lcall
loopne
fcoms
imul
addr16
test
shlb
repnz
adc
and
mov
scas
and
pop
pop
mov
cs
lahf
xchg
sbb
xchg
insl
stos
lret
cmp
xor
mov
addb
jl
rcl
xchg
jge
jl
lahf
into
faddl
idiv
fnstcw
inc
mul
andl
and
insl
mov
loope
fisttpl
push
inc
mov
cs
pusha
les
dec
fadds
mov
inc
and
adc
pop
ror
jae
mov
mov
push
cmp
ffreep
xor
pop
mov
add
les
lahf
in
mov
push
and
xor
jb
addr16
xor
ds
jge
adc
dec
inc
mov
repnz
xor
nop
addl
scas
push
xor
pop
mov
inc
sbb
pusha
jl
jg
pop
es
pop
and
jbe
std
pop
jne
cmp
ja
mov
lods
cli
fildl
push
je
sub
shrb
mov
repz
sbb
ja
in
sub
cwtl
push
sub
jle
or
ret
repz
lock
testb
dec
jne
add
loop
push
pop
testb
hlt
adc
pop
testb
lods
test
out
das
in
mov
rcll
adc
adc
sbb
and
and
loope
sub
pushf
lods
xchg
repz
icebp
mov
xchg
imul
xlat
cmpsb
insb
adc
cmpl
mov
insl
push
ljmp
ret
ficoms
xor
sub
mov
inc
rclb
sub
mov
scas
shl
push
cmp
push
cmp
push
xor
xchg
mov
scas
xchg
mov
pushf
jo
test
aam
add
mov
adc
adc
mov
sahf
outsl
mov
nop
adc
inc
sbb
in
mov
or
push
inc
and
jns
es
pop
cwtl
inc
jbe
add
jnp
or
jb
sub
mov
xchg
push
cwtl
xor
dec
daa
testl
js
pop
insl
jb
dec
fistpl
dec
xorb
mov
inc
loopne
xor
ds
out
sarl
nop
and
fs
fistpl
dec
fs
xchg
scas
jmp
decl
push
or
jno
sti
or
je
push
aaa
cmp
xchg
in
cld
mov
rolb
xchg
jae
and
mov
les
ja
push
repnz
andb
pop
dec
iret
leave
and
mov
push
rcrl
sbb
outsb
push
gs
div
sarb
out
xchg
sbb
or
sahf
leave
mov
data16
cwtl
icebp
sarb
cmp
xchg
movsb
push
call
ljmp
dec
mov
cmp
dec
push
push
mov
lods
daa
das
adc
negl
setp
adc
or
add
push
movb
fsubrp
mov
mov
mov
mov
xor
pusha
jnp
jg
dec
mov
adc
enter
xchg
jecxz
cmp
stc
iret
jl
or
and
xchg
popf
into
push
out
xchg
in
pminub
pop
push
dec
shll
xchg
cmp
xchg
pop
cltd
sbb
and
jo
out
test
dec
sub
out
in
ljmp
leave
jle
adc
mov
loope
jb
in
out
into
add
daa
arpl
push
push
mov
das
scas
in
push
cmpsb
inc
popf
adc
nop
pop
es
pop
inc
fildl
test
ja
jns
cltd
outsl
mov
push
pop
jae,pt
es
push
stos
out
sub
add
pop
add
inc
push
adc
xchg
clc
fwait
mov
add
mov
in
enter
or
xor
test
cs
mov
mov
mov
ds
jmp
push
or
outsl
pop
mov
xor
push
movsl
mov
pop
adc
pop
jne
adc
sub
sub
fsubs
faddl
mov
xor
sub
mov
mov
pushl
test
push
add
jp
call
loope
mov
getsec
dec
jb
test
mov
mov
test
cmp
sahf
scas
adc
shlb
jp
rcll
cld
push
addb
mov
loop
jne
adc
mov
std
jmp
sub
in
lds
mov
fcomps
iret
jecxz
xor
leave
pop
rolb
add
fsts
call
add
pop
sub
jns
xchg
sub
aad
jae
cwtl
test
xchg
push
stos
add
fsub
aaa
movsl
sarb
fcompl
mov
adc
addr16
sub
pop
jecxz
mov
loopne
rclb
xor
or
jns
cmp
nop
mov
inc
aaa
in
add
and
insl
fdivs
sarb
jns
and
mov
xor
nop
adc
cld
lahf
mov
xor
mov
cld
sub
mov
aas
sti
cmpsl
sub
sbb
sbb
xor
leave
call
mov
sahf
xor
aad
insb
fwait
pop
jp
push
push
inc
and
mov
loopne
test
out
orl
cmp
mov
sub
adc
in
fimuls
rcll
mov
mov
jecxz
add
sahf
or
cs
shlb
inc
scas
lods
sbb
addb
sbbl
outsb
cmpsb
push
jbe
int3
push
idivl
dec
mov
mov
mov
mov
xor
jge
clc
push
call
mov
push
or
rorb
xlat
mov
push
int
jnp
sub
cld
out
das
mov
hlt
fists
sti
adc
xorl
stc
cmpsl
adc
bound
outsb
pop
fucomip
jp
pop
mov
xchg
push
push
addr16
mov
in
fxtract
pop
dec
dec
add
inc
fstpl
jecxz
xchg
inc
aaa
subl
sbb
dec
mov
adc
jge
adc
cmpsl
add
xor
mov
mov
sub
or
cmpsl
popa
sbb
mov
addl
fs
add
inc
lock
sub
popa
je
leave
and
ficoml
cwtl
decb
xor
sub
cld
dec
mul
sbb
dec
fildll
mov
jmp
cmpsb
cmpsl
repz
das
aas
shr
dec
xchg
push
adc
insl
xchg
add
movsl
and
mov
divb
popf
rcrl
xchg
outsl
adc
jge
ja
cmp
or
dec
imul
mov
test
xchg
or
clc
jmp
xchg
pop
iret
pop
outsb
negl
clc
ds
clc
mov
insl
and
sti
fnstsw
andl
hlt
lds
lret
jle
fsubl
add
in
xchg
cmpsb
pop
sbb
sti
in
pushf
pop
cmp
push
roll
aam
xchg
imul
mov
sbb
xor
lods
mov
jg
sub
or
xchg
sbb
pop
std
and
push
popf
xchg
mov
iret
lods
push
xor
shrb
lret
mov
xorb
mov
push
icebp
jecxz
and
hlt
dec
test
sub
orb
fs
stos
test
fwait
pop
pop
lock
jg
arpl
fildl
xor
mov
xchg
sub
popf
in
cmp
loop
gs
in
imul
adc
adc
cmpsb
inc
xor
notl
push
insl
adc
sahf
adc
lods
lods
pop
pop
out
mov
push
out
xor
xlat
mov
pop
mov
sbb
push
mov
mov
call
inc
and
pop
dec
test
cld
sbb
loop
jle
lock
inc
scas
daa
jge
mov
mov
lea
popa
xchg
sbb
pop
out
hlt
nop
xchg
push
lahf
and
pop
mov
jge
jp
dec
dec
fs
adc
fldt
enter
mov
mov
ljmp
ljmp
pop
push
push
clc
fs
dec
mov
pop
ss
call
shlb
in
push
cmp
lcall
cwtl
bound
xchg
cmpsl
arpl
or
inc
dec
rcr
push
mov
lret
in
insl
fcomps
jecxz
adc
dec
jo
dec
xchg
ljmp
pusha
jle
fsubrl
mov
cmp
jno
dec
xchg
fldenv
jb
or
mov
fstl
ror
loope
ss
jbe
clc
pop
push
sub
in
cltd
adc
lock
jbe
jnp
sub
adc
adc
dec
xor
add
pop
inc
test
scas
mov
push
mov
sub
add
adcb
add
or
and
and
xchg
mov
adc
in
push
push
cmpsb
int3
out
sub
cmp
aam
pop
mov
inc
xchg
cwtl
dec
mov
ja
mov
aaa
pop
es
int3
add
xchg
in
bound
aam
push
fcmove
push
jnp
in
add
mov
or
int
les
jnp
xchg
dec
add
jge
mov
fimull
in
dec
mov
and
neg
int
jo
gs
aas
adc
xor
and
test
add
test
mov
and
dec
cmc
in
iret
incl
sub
lods
jo
movsb
mov
iret
or
fcoml
xchg
xchg
loop
cmp
cmp
cmp
mov
pusha
inc
rcl
pop
sbb
mov
fdiv
pusha
pop
pop
mov
mov
scas
push
fwait
cltd
mov
sub
adc
or
lret
or
fisttpl
test
dec
or
fidivrl
sbb
mov
hlt
push
lods
xor
in
mov
stc
into
rcl
add
in
or
js
les
xor
push
xor
xchg
sub
ficoml
das
in
outsb
push
and
or
add
scas
or
cli
push
pushf
out
and
int3
push
xlat
test
sub
xchg
clc
test
imul
and
push
addr16
pop
or
sub
notl
lds
test
sbb
dec
mov
push
push
das
rol
sti
lret
out
movsb
inc
addr16
sbb
and
or
aas
mov
pop
out
and
pop
in
or
stos
lods
int3
out
subb
sbb
leave
jle
cmpsl
cwtl
outsl
jnp
cld
xchg
or
dec
pop
adc
sti
mov
adc
or
movsl
icebp
in
mov
and
into
and
push
and
cwtl
push
inc
retw
sub
sub
fdivl
enter
iret
aaa
sbb
or
push
push
jl
inc
outsb
out
sub
mov
or
hlt
outsb
fiadds
aad
pop
mov
orl
or
js
cmpsb
mov
xor
ret
pop
nop
pusha
inc
leave
jnp
and
scas
test
sbb
ja
adc
cmp
or
xor
push
or
push
repz
mov
sbb
popf
out
shlb
xchg
xchg
push
inc
out
lock
loopne
xchg
cmp
fistl
or
mov
lds
int
cmpsl
movsl
call
test
rcl
add
or
mov
pop
dec
xchg
xor
iret
out
mov
sub
mov
scas
out
arpl
mov
mov
dec
push
mov
in
mov
bound
cmp
shl
call
jecxz
mov
fcmove
mov
shll
mov
cwtl
int
push
dec
gs
test
aam
cli
movsl
repz
jmp
pop
xchg
pop
movsb
adc
je
xorl
push
mov
push
fisttps
xchg
mov
dec
jmp
call
aad
movsb
cmp
adc
or
and
push
push
mov
dec
adc
inc
clc
cli
sub
inc
pop
loop
pop
in
dec
mov
rolb
and
mov
lret
xchg
addr16
dec
add
or
inc
push
adc
andb
scas
lods
arpl
outsl
sahf
lret
aaa
aaa
mov
mov
xor
in
int3
aas
mov
inc
sbb
or
lods
sahf
cmp
jb
cmp
out
push
fstps
fnsave
cmp
dec
mulb
ret
movsl
sbb
xor
mov
push
jp,pt
andl
scas
addb
flds
outsl
ja,pt
inc
pop
mov
sahf
inc
push
push
aam
inc
add
add
shr
loope
adc
in
lret
xor
leave
sub
orl
push
out
subb
xlat
loope
lret
lock
and
cmpsb
or
cwtl
mov
ds
fidivrl
sti
sbb
lcall
fidivrl
xor
shr
scas
and
pop
sahf
sub
fdivr
mov
imul
xchg
js
int3
ljmp
sub
cltd
icebp
push
sbb
in
push
push
dec
pop
xchg
sbb
mov
add
inc
jl
jg
xchg
loope
test
sbb
mov
clc
adc
push
jo
imul
mov
push
dec
dec
imul
jnp
fimull
leave
dec
mov
inc
jecxz
into
jae
stos
mov
and
push
inc
jmp
dec
mov
xor
dec
mov
dec
fimull
bound
mov
inc
or
rcll
js
jp
pop
sbb
jnp
hlt
cwtl
lds
cmp
mov
xchg
loope
mov
or
and
jl
cmc
lds
cld
sub
sbb
inc
sbb
sub
cmpsl
xchg
iret
inc
pop
sub
popf
dec
lods
adc
shr
xor
jno
in
pop
adc
inc
jnp
push
inc
movsl
xchg
mov
cmp
pop
jae
pop
cwtl
mov
jl
xchg
or
fidivs
sub
mov
pop
xchg
lods
in
inc
mov
leave
cmpsl
add
rorl
pop
dec
out
sub
mov
cmpsl
sahf
lods
std
test
add
jge
jmp
push
xor
outsl
cmp
outsl
daa
sbb
imul
in
fwait
scas
lahf
sbb
clc
push
decb
cmovs
into
shlb
pop
mov
cmp
shl
mov
imul
dec
inc
mov
sbb
es
test
mov
daa
xor
in
sbb
mov
push
dec
test
jecxz
pusha
pop
mov
gs
cmp
fmull
and
adc
mov
lods
xchg
cmp
inc
mov
mov
subb
or
push
push
pop
dec
in
fsubs
jns
std
cmovo
mov
sti
jecxz
fisubl
stos
aaa
inc
vcvtss2si
mov
cltd
push
pop
or
test
push
mov
push
movsb
mov
int
pop
mov
in
dec
dec
jbe
lods
mov
xchg
mov
mov
jle
inc
sbb
lods
test
je
cmp
push
mov
sbb
enter
test
in
insl
shll
and
inc
imul
es
pop
sbb
je
push
pop
loopne
xchg
sbb
and
lahf
icebp
jns
cmp
jno
test
xor
mov
jns
loopne
jae
sub
inc
sbb
push
or
add
sub
mov
shlb
xchg
and
stos
cmp
jno
sbb
dec
cmpsb
in
insl
sub
mov
xor
sbb
fwait
add
leave
mov
cld
adc
movsl
mov
jne
inc
xchg
paddd
jo
or
stos
shll
cmp
int
cli
pushf
mull
push
add
push
test
mov
dec
mov
pop
fstl
sbb
mov
scas
jl
loopne
outsb
ret
add
scas
ja
fistpl
test
inc
stos
fs
test
stos
jmp
jp
aaa
xorl
sarb
mov
mov
push
ljmp
mov
mov
daa
scas
ret
fnstcw
leave
push
cmp
js
sub
mov
mov
mov
jmp
mov
or
inc
adc
and
adc
sub
icebp
pop
cli
dec
mov
dec
cli
mov
dec
xor
shrl
push
jle
push
test
add
push
xchg
shll
scas
push
add
lods
fisttpll
sub
lods
rorl
cltd
outsb
repnz
cmpsl
add
jmp
jae
mov
std
loopne
sahf
push
clc
mov
lcall
ret
dec
mov
call
push
add
jae
aas
ficoml
int3
aad
push
or
push
add
mulb
nop
push
sbb
cltd
dec
imul
sarb
jmp
pop
cltd
pusha
xchg
or
pop
jle
sub
gs
xchg
lahf
in
mov
fidivl
enter
xchg
fldenv
orl
xchg
lret
sbb
scas
movsb
xor
jp
hlt
push
mov
es
lret
jl
add
mov
xlat
xchg
lcall
test
mov
dec
mov
mov
lock
iret
pop
shl
shr
add
idiv
iret
lea
dec
test
mov
sub
pop
in
push
xchg
sarb
and
push
jg
pop
xchg
ja
adc
mov
imul
pop
adc
lods
fisubs
xlat
mov
jno
lods
sub
dec
test
xor
dec
jge
jbe
cld
scas
sub
insb
xchg
nop
jp
mov
mov
fsubrl
jl
mov
mov
mov
jae
cld
cltd
mov
dec
mov
mov
jle
xchg
fstpl
movsb
push
fwait
inc
dec
stc
into
xchg
jbe
adc
test
addl
mov
gs
lcall
cwtl
inc
aam
gs
xchg
mov
cltd
pop
mull
enter
lcall
in
lock
inc
and
xchg
js
addr16
pop
popa
stos
ljmp
faddl
out
fsubs
inc
mov
xor
push
and
fwait
and
dec
inc
push
dec
inc
pop
addr16
add
inc
dec
cwtl
fs
dec
or
xor
and
inc
movsl
mov
xchg
sbb
cmc
dec
movsb
mov
and
mov
mov
jnp
cmp
add
xchg
jb
sub
loop
push
xor
ja,pn
xchg
rcrl
and
jns
xor
aad
push
nop
xchg
mov
clc
sbb
jmp
inc
sub
inc
sbb
mov
push
sarl
scas
out
mov
lcall
pop
sbb
call
jmp
and
xlat
inc
mov
movsl
mov
lds
lods
push
inc
inc
insl
cvtdq2ps
icebp
add
std
cmpsl
notb
or
cld
jb
ja
xchg
call
pop
sub
inc
pop
and
clc
mov
lds
lods
mov
or
jmp
loopne
cmc
lret
sub
add
mov
xor
add
out
dec
mov
xchg
rcr
sub
.byte
adc
cmp
nop
add
add
cmpsl
dec
hlt
adc
pushf
mov
push
loope
jge
lock
test
add
js
gs
jo
out
stos
inc
and
in
cld
insb
popa
push
fwait
mov
and
mov
inc
mov
imul
aaa
rorl
dec
pop
leave
inc
les
push
jg
mov
std
ds
add
into
scas
pop
sahf
pop
cltd
mov
fdivs
cmpb
push
fs
add
mov
pop
aad
jae
or
outsb
mov
rclb
lret
test
ret
cld
ds
push
adc
dec
lahf
dec
cmp
outsb
add
inc
sbb
push
arpl
movsb
into
pop
aad
data16
adc
inc
dec
dec
or
mov
dec
addr16
enter
cwtl
stc
ds
call
push
mov
mov
mov
push
pop
cmpsb
out
cmp
mov
mov
ficompl
iret
sbb
mov
xor
jg
and
xor
push
lods
pop
out
out
mov
push
std
inc
iret
or
loop
fyl2x
xlat
clc
fnsave
scas
ds
xlat
jl,pt
in
dec
idivl
mov
out
push
in
frndint
xor
orl
fnstcw
pop
cmp
xchg
rorb
repz
mov
das
addr16
push
ret
lods
jbe
mov
sub
xchg
mov
iret
push
jnp
aad
push
in
lock
lea
xor
lret
inc
fiaddl
fstl
add
push
repz
mov
xlat
cltd
sub
bound
mov
cmp
mov
ss
mov
mov
mov
daa
adc
mov
mov
enter
mov
mov
sbb
sbb
push
outsl
.byte
add
add
loope
out
add
add
add
push
add
add
addb
add
pusha
add
addb
add
rolb
orb
add
add
add
addb
adcb
add
cwtl
add
addb
add
loope
out
add
add
add
add
mov
add
addb
add
loope
out
add
add
add
add
add
add
enter
add
add
loopne
add
loope
out
add
add
add
push
add
pop
add
clc
add
adc
add
adc
add
sub
add
inc
add
adc
add
pop
add
adc
add
jo
add
loope
out
add
add
add
push
add
add
add
add
add
add
add
add
add
add
adcb
add
add
adcb
add
add
addb
add
loope
out
add
add
push
add
add
add
andb
add
dec
add
add
add
fiaddl
add
out
push
add
incb
add
sbb
add
cmp
add
inc
pop
add
pop
pop
add
jb
add
jle
add
mov
add
add
add
loope
out
add
add
add
add
mov
add
addb
add
loope
out
add
add
add
add
add
add
addb
add
add
loope
out
add
add
add
add
add
add
cwtl
add
add
add
add
out
add
add
add
add
add
add
test
add
add
add
loope
out
add
add
add
add
add
add
mov
add
add
out
add
add
add
add
add
add
enter
add
add
loope
out
add
add
add
add
add
add
fadds
add
add
add
out
add
add
add
add
add
add
call
add
add
out
add
add
add
add
add
add
clc
add
add
add
add
out
add
add
add
add
add
add
or
add
loope
out
add
add
add
add
add
add
sbb
add
loope
out
add
add
add
add
add
add
sub
add
loope
out
add
add
add
add
add
add
cmp
add
loope
out
add
add
add
add
add
add
dec
add
add
loope
out
add
add
add
add
add
add
pop
add
add
loope
out
add
add
add
add
add
add
push
add
add
out
add
add
add
add
add
add
js
add
add
add
loope
out
add
add
add
add
or
add
add
add
out
add
add
add
add
or
add
add
add
out
add
add
add
add
or
add
add
add
out
add
add
add
add
or
add
add
add
out
add
add
add
add
or
add
add
add
loope
out
add
add
add
add
or
add
add
add
loope
out
add
add
add
add
or
add
add
add
loope
out
add
add
add
add
or
add
add
add
loope
out
add
add
add
add
or
add
push
add
add
add
loope
out
add
add
add
add
or
add
push
add
add
add
loope
out
add
add
add
add
or
add
push
add
add
add
loope
out
add
add
add
add
or
add
push
add
add
add
loope
out
add
add
add
add
or
add
add
add
add
loope
out
add
add
add
add
or
add
add
add
add
loope
out
add
add
add
add
add
add
push
add
add
out
add
add
add
add
add
add
js
add
mov
add
in
add
add
add
jo
push
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
stc
add
pushf
add
add
add
add
add
add
add
adc
add
in
add
add
add
js
add
or
add
in
add
add
add
cmp
add
add
add
add
add
add
incb
add
add
add
add
add
add
add
incl
add
add
add
add
add
add
add
add
in
add
add
add
loopne
add
mov
add
add
add
add
add
in
add
add
add
xor
add
sbb
add
in
add
add
add
push
pop
add
mov
add
add
add
add
add
xor
add
in
add
add
add
inc
or
add
add
add
add
add
add
add
add
hlt
fildl
in
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
js
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
pushf
out
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
or
add
in
add
add
add
add
inc
add
dec
add
add
inc
add
push
add
dec
add
add
inc
add
dec
add
inc
add
add
pop
add
add
inc
add
add
push
add
add
dec
add
add
dec
add
inc
add
or
inc
add
dec
add
push
add
dec
add
inc
add
add
add
inc
add
push
add
or
add
dec
add
dec
add
push
add
push
add
inc
add
push
add
dec
add
push
add
push
add
push
add
dec
add
push
add
dec
add
add
inc
add
dec
add
push
add
add
push
add
push
add
dec
add
push
add
dec
add
add
dec
add
push
add
dec
add
inc
add
push
add
add
add
pop
add
push
add
dec
add
push
add
add
push
add
push
add
dec
add
add
cmp
add
cmpsb
add
fistl
scas
mov
lret
daa
leave
scas
pusha
sub
mov
fxam
insl
cld
fwait
jp
pop
outsl
aam
jbe
pop
adc
xchg
pop
nop
push
shrl
jnp
or
xor
es
xor
int
mov
dec
ds
xchg
stc
cltd
mov
daa
jno
push
push
subb
mov
mov
or
cs
xchg
push
or
pop
enter
ret
mov
arpl
add
mov
test
jle
push
decl
into
roll
outsb
push
outsb
jns
sarb
push
scas
mov
jno
divl
stos
mov
jp
loop
fstpt
sahf
push
test
push
sbb
lret
fadds
test
aaa
jb
mov
jg
jns
jp
jnp
mov
int
add
cmp
imulb
adc
test
inc
jmp
sub
mov
cwtl
sbb
lcall
imul
out
mov
mov
ljmp
lods
daa
lods
es
push
repz
and
fs
mov
inc
jecxz
sar
pushaw
pop
fsubr
mov
in
stos
inc
sahf
push
jne
fbld
repz
loop
inc
test
mov
dec
insl
xchg
mov
je
jmp
pop
xor
jb,pt
xchg
add
xchg
mov
loope
loop
xchg
xchg
fistpll
and
mov
mov
cmp
rcr
out
ljmp
jno
clc
dec
fisubrs
sbb
and
insl
push
in
mov
cmp
sub
dec
inc
xor
addr16
in
push
mov
enter
test
dec
pop
repz
test
outsb
xchg
out
jo
notl
icebp
jle
insl
jp
inc
mov
daa
fnstsw
add
dec
rcrb
sti
lahf
pop
cmp
xor
xchg
fnstenv
int
and
stc
and
hlt
xchg
loop
movsl
aaa
adc
jp
test
jnp
mov
xchg
outsl
pop
jno
fstpt
stos
mov
inc
sbb
mov
call
bound
jno
mov
mov
fdivs
loopne
icebp
mov
inc
fsubrl
mov
lods
pop
jg
pop
das
mov
andl
xor
push
push
lcall
jge
dec
insl
push
push
cmpsb
xchg
mov
jae
and
or
xchg
mov
pushf
and
leave
inc
mov
in
push
frstor
adc
add
add
mov
push
test
aam
lret
add
stos
ds
push
xchg
psrad
mov
outsl
adc
add
sahf
xor
mov
sbb
adc
xor
test
addr16
test
stos
or
mov
pop
mov
test
outsb
in
lcall
fstpt
out
js
cmp
push
shlb
and
imul
jg
bound
pop
sub
lods
loope
fcmovnu
shll
inc
test
dec
loope
outsb
lock
fidivs
dec
fsubrs
movsl
int
sub
repnz
pushf
pop
ret
mov
insb
mov
fnstenv
in
inc
adc
movsl
mov
scas
jecxz
xlat
pusha
ljmp
adc
pushf
push
mov
xchg
in
sub
mov
in
dec
adc
and
adc
aaa
cs
and
push
xorb
fwait
cmp
popa
shll
mov
rolb
cmp
jae
stos
add
xchg
jbe
insl
ficomps
sbb
fwait
cmp
push
xchg
jle
fcmovbe
push
mov
push
aaa
gs
cmc
push
sub
test
mov
enter
xor
cld
fs
adcb
inc
ret
pushw
pop
cmp
lahf
and
xchg
addb
fwait
pop
in
xchg
cmp
jnp
out
les
ficoml
mov
leave
jp
loope
cltd
cld
enter
fcoml
testl
dec
test
shlb
push
jns
dec
mov
and
fldcw
xchg
cmpsl
stc
and
out
inc
lods
imul
in
test
popf
jp
mov
dec
push
mov
in
jns
arpl
or
stc
push
mov
ret
cmp
dec
pusha
loopne
lret
loop
sub
aaa
mov
fucom
divl
imul
jmp
popa
push
inc
shll
cwtl
lods
xchg
cli
mov
jmp
push
mov
pop
subb
add
sub
stos
dec
or
push
mov
jmp
mov
cltd
push
stos
mov
in
adc
inc
js
lods
dec
cmp
into
fdiv
pushf
jmp
mov
clc
xchg
dec
les
shrb
xor
cmp
iret
ret
xchg
ss
int
es
inc
lea
xor
push
adc
mov
pop
push
fneni(8087
fs
aas
cld
in
lea
ficoms
jb
ja
popf
dec
inc
xor
mov
mov
or
or
pushf
mul
idiv
insl
adc
enter
dec
cwtl
dec
sbbb
stos
loope
ret
add
ficomps
rclb
sub
inc
mov
inc
movsl
or
xchg
lret
out
scas
mov
cwtl
jnp
dec
aam
loop
insb
push
ret
pop
sub
mov
lock
rorb
dec
push
stc
mov
jo
add
pop
mov
mov
lock
outsb
pop
dec
pop
sub
ret
xchg
sbb
push
push
jge
fcomi
in
dec
inc
fistps
add
test
sub
clc
lahf
lods
push
in
stc
shll
ret
std
add
test
cltd
mov
aas
xchg
cmp
testl
cmp
lahf
pop
int
mov
movsb
pop
out
mov
cmp
leave
shrl
mov
xor
movsl
movsb
sbbb
js
sti
xor
dec
jo
mov
ss
sbb
mov
and
iret
cmp
out
int3
mov
sub
stos
jnp
lahf
push
loope
in
test
out
and
pop
push
lods
out
and
push
ret
lahf
std
dec
mov
and
pop
cmp
inc
das
scas
pop
addr16
into
mov
dec
xorb
push
decl
testl
in
icebp
xchg
cmp
outsl
mov
adc
pop
or
xor
inc
or
dec
mov
stc
mov
mov
push
mov
xor
mov
jmp
iret
jo
inc
or
jmp
mov
sbb
and
mov
sbb
into
xchg
pop
lahf
and
repnz
mov
lcall
and
inc
dec
xchg
cmpsl
adc
push
push
xchg
popf
pop
jno
inc
add
and
test
xor
sub
cmp
pop
out
scas
push
push
pushf
push
cmp
push
jo
shrl
xchg
xchg
std
mov
test
mov
int3
cmp
jle
jb
sbb
xchg
gs
mov
sbb
movsb
push
xor
inc
fsubrl
fldcw
jle
and
sub
lods
int3
jns
push
mov
add
jns
out
aam
shll
mov
xor
pop
mov
inc
iret
repz
xchg
jmp
imul
aad
call
cmp
inc
pop
mov
mov
int
sbb
inc
pushf
jp
stc
popf
aas
sbb
pop
xor
lret
inc
movsb
fcmovne
adc
xchg
mov
adc
in
and
and
or
sub
mov
mov
stos
leave
jecxz
jl
adc
sbb
dec
xchg
out
jle
xchg
xchg
or
push
scas
shlb
xor
sbb
adc
adc
or
in
xchg
lods
adc
xchg
cmp
push
mov
mov
and
pop
loop
sbb
xchg
ret
sbb
push
push
pop
xorb
push
ds
loopne
cmc
push
push
mov
sub
aaa
test
and
dec
or
loop
push
sbb
pop
push
shlb
lret
sahf
adc
sbb
sub
jne
jge
pusha
mov
rcrb
jns
lock
or
push
in
push
jle
sbb
stos
adc
pop
sub
add
xchg
jg
push
adc
icebp
jns
aam
jne
mov
in
ljmp
jl
or
add
push
dec
mov
mov
cmp
stos
cmp
jnp
or
dec
scas
stos
add
loopne
cmp
push
and
out
mov
mov
xor
scas
adc
adc
es
sbb
ja
stos
cmp
movsb
sar
insl
in
push
jp
int3
mov
lods
adc
addb
popa
mov
js
ror
or
jl
das
mov
mov
cmp
into
dec
sbb
sub
adc
dec
aaa
fsubp
sub
jne
inc
mov
or
mov
adc
outsl
loopne
insb
adc
fsubrs
push
cmpsl
scas
ficoms
mov
stos
xlat
shl
dec
pop
fnstsw
movsl
jne
insl
mov
lahf
cmpsl
les
popa
fstp
inc
aas
jo
add
mov
je
js
sbb
push
bound
fcomip
stc
fldl
inc
into
and
mov
bound
leave
push
mov
addr16
cmp
outsb
imul
cwtl
mov
jns
jae
daa
xor
movsb
jne
and
iret
addb
xchg
push
js
repnz
mov
aaa
les
mov
jmp
test
jp
lahf
mov
jle
cmp
lea
xchg
test
jmp
stos
xor
fsubrl
ja
add
xchg
pusha
add
cwtl
mov
jae
out
cmpsl
xor
std
xchg
xor
cmpb
mov
or
mov
dec
xor
out
ds
push
fwait
push
mov
jge
push
jecxz
int
out
xchg
mov
mov
dec
fisubrl
test
popa
mov
orb
jne
repnz
lahf
inc
sbb
sub
or
fiadds
mov
aaa
cs
sarb
fdivr
or
push
pop
ss
inc
lods
mov
lahf
fwait
push
shlb
and
lods
fcmovbe
repnz
rorb
sbb
sub
inc
sub
fwait
test
insb
pop
shll
push
pushf
adc
flds
adc
in
sub
mov
in
xchg
adc
push
loope
leave
sarl
es
cld
mov
seta
xchg
sti
cmp
xchg
rorb
dec
add
add
add
mov
sar
pop
sub
jns
call
inc
test
leave
xor
lcall
jge
pop
jmp
or
mov
test
add
sbb
push
push
movsb
push
cmpsb
icebp
jae
or
mov
test
mov
dec
inc
in
xchg
inc
dec
xor
push
leave
mull
sbb
mov
push
xor
es
test
mov
cmp
movsb
rorb
outsb
mov
gs
sbb
repz
sbb
sub
cmc
or
sbb
xor
pop
or
xchg
push
testl
push
push
inc
push
mov
sbb
pop
clc
mov
mov
shlb
push
xlat
mov
cli
pop
stc
sbb
mov
arpl
popf
cmpsl
cs
mov
dec
push
in
ss
addl
lock
jmp
adcb
sub
inc
nop
popf
cmp
jns
pop
fsubs
mov
loope
pop
and
fsts
push
add
sub
mov
lahf
sbb
cmpb
fistpll
cmp
aas
cld
jb
mull
add
out
xlat
sbb
cmp
and
das
pushf
mov
pop
js
je
push
dec
ds
adc
loope
jle
fistl
lods
ss
pushf
in
jnp
sbbl
and
dec
mov
adc
imull
push
mov
or
xchg
jnp
fadds
scas
mov
sub
out
and
outsl
sub
pop
js
cmpsl
jno
pop
sbb
mov
mov
dec
pusha
scas
xchg
or
movsb
mov
aaa
push
mov
imul
mov
loopne
jne
cmc
sar
xor
adc
fwait
mov
xchg
adc
or
sbb
inc
sbbl
xchg
imul
sub
cwtl
mov
inc
notl
test
fcoml
lahf
sbb
cli
je
sahf
adc
cmc
xacquire
cmpsb
and
push
cmpsb
scas
in
adc
repz
addr16
popf
call
inc
and
cmpl
cmp
insl
and
sub
sti
hlt
jo
jbe
ja
mov
outsl
jbe
mov
cmpsb
lods
push
dec
jno
mov
mov
jae
mov
outsb
stc
inc
or
mov
fs
enter
pop
out
sub
jp,pt
xchg
adc
xchg
ja
shlb
out
lret
test
les
pop
mov
insb
dec
or
mov
jle
in
inc
loop
rorb
jg
int3
xor
repnz
lahf
in
pop
push
mov
cmp
mov
jmp
push
pop
jp
or
dec
jp
push
push
jle
push
in
cli
sub
popf
jl
mov
scas
ret
pushf
pop
rcrb
fadd
pop
or
xchg
insl
sbb
lods
adc
cmp
mov
ret
mov
inc
ret
or
mov
sti
lds
sbb
ds
fstps
mov
lods
ret
jg
mov
and
stc
aas
and
xchg
or
lods
push
popa
loopne
scas
loope
movsb
sub
xorb
das
stc
or
roll
outsl
sub
fsubrs
cltd
iret
adc
dec
insl
loope
and
lds
push
sbb
dec
insl
and
adc
or
test
stc
mov
ja
jbe
dec
dec
outsl
xchg
outsl
sbb
aam
in
cmp
stos
pusha
push
xchg
inc
mov
mov
or
mov
mov
aad
js
jae
mov
repz
leave
or
and
jle
fs
js
jmp
lea
push
xor
sub
loope
xchg
dec
mov
pushf
es
cli
jnp
out
cmpl
adc
lock
inc
or
jae
lret
mov
dec
mov
fsubl
push
cmp
mov
test
dec
jae
sahf
xorb
ljmp
inc
outsl
int3
lock
lret
in
xchg
sbb
cli
in
add
jp
push
outsb
xor
sub
mov
sub
lret
sbb
outsb
mov
adc
sbb
sarb
js
or
cwtl
adc
xchg
imul
out
ja
aaa
jbe
aas
add
xor
xlat
dec
data16
pusha
out
jg
arpl
gs
or
rcrl
and
or
ja
xor
cmpl
cs
sti
inc
cld
cli
xchg
scas
cmp
jno
mov
pmulhuw
jp
pop
test
pop
push
pop
addl
xor
icebp
jns
mov
xchg
mov
stos
popa
lret
cmc
stos
sbb
jbe
mov
mov
jg
das
enter
xchg
and
cmpsb
lods
bsf
fidivrl
les
fstps
sbb
popa
push
outsl
out
and
xor
movsb
xchg
jb
sub
shll
mov
pop
add
sbb
mov
mov
rol
and
mov
push
rolb
imul
mov
jmp
roll
xor
inc
push
je
pop
jl
sub
clc
aas
sbb
xor
leave
hlt
and
adc
sbb
fcmovbe
loopne
js
adc
test
dec
fsubrp
dec
jb
cmpsl
dec
pop
jge
or
daa
jae
adc
div
xchg
cmpl
ds
xchg
mov
jmp
or
aaa
subl
lahf
popf
sbb
in
clc
dec
add
mov
sahf
movsb
xchg
in
sarl
popf
sub
sub
gs
popf
xor
daa
aaa
outsl
out
add
sbb
jae
inc
sub
dec
inc
ret
pushf
test
xor
jo
cld
insl
outsb
popf
nop
ret
psadbw
push
repnz
mov
dec
push
mov
mov
ljmp
loope
mov
push
cmp
int3
sbb
sahf
xlat
cwtl
cs
shlb
jbe
popa
xchg
sbb
cld
xchg
fldt
jae
test
xor
ficoms
cld
sub
icebp
outsl
arpl
rclb
fldcw
add
shlb
xlat
sub
pop
cmp
jecxz
or
push
icebp
int
jl
scas
jl
push
add
loop
sbb
push
mov
pop
fidivs
sbb
in
xor
imul
pop
pop
fdivr
mov
daa
lds
jno
addl
fidivrs
mov
fsubr
sbb
jae
sub
sahf
mov
or
inc
cmp
es
inc
int3
aaa
rolb
insb
inc
fisubs
xchg
jb
out
mov
mov
stos
dec
movl
iret
shrl
push
aad
or
stos
add
lods
xor
push
sarl
push
xchg
mov
mull
stos
sbb
scas
push
xor
dec
ficoml
push
negb
aaa
lds
in
testl
cmp
sbb
jne
hlt
add
loop
push
adc
imul
lock
frstor
in
in
push
shlb
xchg
push
inc
add
jnp
adc
sti
int3
loope
xchg
testl
or
add
jmp
inc
xchg
pop
adc
xchg
xchg
inc
pop
pop
int3
rclb
call
dec
pop
pushw
gs
and
xor
pusha
and
mov
xlat
cmp
push
adc
testb
inc
mov
pop
or
sahf
push
jecxz
and
idivb
adc
rclb
xchg
pop
insl
cwtl
inc
jne
test
lret
or
jecxz
push
dec
dec
outsl
stc
iret
jno
or
cmc
adc
push
imul
js
sbb
dec
and
dec
mov
popf
push
out
nop
aad
in
dec
out
sahf
push
popf
mov
sbb
add
xor
jbe
mov
jb
je
jp
std
mov
push
pop
sub
sub
repz
fidivrl
nop
aam
add
scas
loopne
movsb
xchg
adc
sub
rol
xchg
inc
out
lahf
out
push
add
and
jle
jl
mov
orb
and
out
daa
nop
mov
inc
arpl
or
mov
add
in
or
mov
pusha
ret
enter
xchg
sarl
add
ja
sbb
xchg
jp
mov
xchg
aam
cs
mov
out
and
scas
pop
outsl
jbe
lea
jb
retw
push
je
shll
ljmp
add
ljmp
nop
inc
pop
out
mov
andl
jge
out
loopne
inc
adc
ficoms
pop
movsl
jns
mov
les
lock
xchg
xor
sbb
or
pop
enter
mov
pop
and
mov
lret
push
dec
outsl
xor
adc
or
in
add
cltd
aam
sbb
shlb
mov
imul
fs
shrl
sub
rcrl
mov
push
repz
subl
fsubr
xorl
pop
test
cmp
push
in
ds
dec
test
jge
test
xchg
add
or
mov
scas
xlat
cmp
xchg
jecxz
adc
fs
inc
lret
test
sub
idiv
sbb
jle
and
dec
xchg
push
mov
js
add
pop
or
cmpsb
mov
out
add
mov
in
popa
mov
cli
mov
lds
ljmp
adc
sub
fucomip
or
xchg
mov
mov
add
shll
rcll
out
add
dec
test
lods
mov
inc
xchg
pop
cmpsb
push
test
pushl
mov
sub
shlb
das
mov
xchg
mull
or
shll
test
cwtl
insb
in
out
jmp
test
pop
add
jmp
and
jecxz
data16
addr16
cmp
xor
mov
shlb
xchg
push
jmp
movl
xchg
popa
ffree
data16
adc
cld
fld
int
mov
and
dec
rcll
xchg
pop
pop
out
xor
or
je
mov
xlat
and
inc
sub
pop
xchg
shl
cmp
sub
mov
call
xchg
sub
sbb
or
adc
push
ret
dec
call
outsl
rcrl
pop
sbb
jmp
cmp
call
movsb
jge
rolb
or
xor
into
loope
cli
mov
jnp
imul
jns
out
and
mov
stos
imul
ret
xchg
jmp
pop
or
addr16
out
xchg
inc
sub
fsubrl
xor
ret
pop
dec
xor
xor
decb
xor
adc
gs
addl
icebp
js
jge
mov
mov
imul
in
rcrl
outsb
fnstcw
jnp
stos
cmpsb
adc
jge
pushl
mov
scas
iret
sub
pop
adc
and
leave
gs
lret
inc
sbb
mov
or
insl
sub
stos
sub
in
adc
test
sbb
shlb
dec
mov
test
pusha
sbb
push
lds
es
push
and
test
repnz
clc
mov
lock
sub
mov
inc
xlat
lock
int
lcall
sub
iret
cmp
iret
cmp
mov
pushf
sbb
sub
cmp
xchg
pop
sbb
xor
push
test
jne
pop
jb
dec
movsl
aam
lcall
xchg
jecxz
sbb
insb
push
and
decl
ds
sarb
cmp
es
add
or
lea
push
mov
mov
jne
repnz
in
scas
jge
lods
fcompl
jns
push
pushf
popa
out
mov
inc
leave
or
testb
mov
addl
jbe
sahf
data16
inc
ja
ja
loop
jl
or
pop
fisubrs
clc
mov
xchg
mov
out
test
adc
xchg
iret
jecxz
sahf
ds
je
inc
loop
cmp
les
pop
push
push
cmc
dec
mov
insl
cmp
mov
psllq
mov
add
stos
sbb
addr16
sahf
dec
mov
repnz
jbe
arpl
rol
add
std
mov
lahf
mov
mov
mov
shr
sub
loope
push
mov
test
iret
xchg
pop
lods
lcall
orb
ds
jecxz
sbb
cmp
mov
loop
call
or
in
lret
adc
add
test
jg
xchg
sbbl
jmp
add
add
mov
into
cmp
xchg
pusha
mov
divl
popa
sub
movsl
adc
pop
ficompl
adc
fiaddl
fidivl
mov
add
cmp
cli
xchg
jp
sbb
mov
add
inc
jb
adc
lods
test
dec
imul
inc
movsb
or
cmpsb
into
fdivl
and
add
stos
sbb
mov
adc
pop
xor
jnp
lret
jg
fxch
jne
dec
movsb
es
mov
bound
inc
lock
hlt
push
orl
inc
insb
sbb
test
jo
jnp
jne
pusha
xchg
das
add
mov
pop
test
out
outsl
jbe
cmpl
sahf
inc
std
mov
or
dec
ss
outsb
dec
sbb
icebp
sub
das
xor
mov
lods
ljmp
jecxz
scas
pop
xchg
shl
adcl
shlb
dec
pop
in
push
cmp
jl
pop
test
add
add
sub
lret
imul
mov
pop
push
mov
out
sbbb
in
mov
and
cli
insb
mov
pop
roll
pushf
ret
xchg
xchg
hlt
xor
mov
rcll
rorl
nop
lods
mov
dec
or
ficomps
sbb
movl
mov
adc
test
nop
mov
inc
fidivs
int3
add
outsb
clc
lock
pop
ficompl
outsb
out
pop
int3
add
into
mov
add
test
dec
fdivrl
nop
xor
xor
test
mov
sub
popa
mov
rep
data16
pop
adc
jns
lods
pop
and
mov
mull
push
inc
fisubrl
xchg
cmpsl
jo
lods
mov
fcomps
mov
dec
jbe
sti
lahf
xor
not
sbb
scas
jb
adc
sbb
rcll
xchg
std
and
jb
pop
sub
or
or
rclb
rclb
push
jmp
aaa
movsb
pop
inc
gs
jbe
ljmp
cmpsl
insl
xor
xor
cwtl
inc
test
jbe
mulb
outsl
pop
mov
lock
jns
lcall
test
mov
icebp
aaa
js
push
mov
xor
pop
push
loopne
dec
lods
jp
and
jo
sbb
out
inc
in
xchg
xor
or
dec
fmul
in
les
pop
int
sbb
loope
lea
loope
mov
jg
in
lods
mov
pop
cltd
sbb
cmp
push
jnp
xlat
and
push
pop
jbe
and
jb
and
mov
rcl
lods
outsl
ret
jecxz
sbb
jg
mov
adc
inc
push
sbb
and
icebp
fildl
arpl
js
int
mov
push
fisttpl
and
xor
xchg
push
xor
incl
dec
fidivrs
xlat
ret
aad
pop
movsb
pop
out
ror
cmp
in
and
fimuls
push
mov
lcall
cmp
jge
jno
mov
xchg
sub
pop
cmpsb
adc
jo
scas
add
int
push
adcb
mov
xor
data16
jge
adc
imull
jns
jmp
out
mov
out
inc
mov
mov
jecxz
sbb
pop
cmp
aam
push
add
loopne
push
cmp
rcl
mov
lahf
dec
or
in
shlb
xor
mov
pop
jae
int
pop
mov
dec
mov
dec
xor
lahf
jnp
sbb
sbb
outsl
mov
imul
sbb
inc
popa
fs
mov
dec
leave
nop
xor
jg
repz
lea
imul
lret
push
or
adc
xchg
add
push
sbb
out
lahf
xlat
frstor
repnz
push
cli
mov
out
lea
lods
outsb
jb
shl
inc
xchg
push
dec
cmc
iret
adc
ds
sub
sarb
pop
xchg
pop
pop
outsl
loop
dec
out
lods
in
jmp
sub
loop
push
aam
pop
sbb
out
aad
int3
mov
add
mov
pusha
pop
cmp
inc
xor
stc
outsb
sahf
cmp
jecxz
fisttpl
jnp
pushl
rcrb
cmp
xchg
in
jle
sbb
inc
mov
add
cmp
nop
jl
adc
leave
pop
and
das
dec
push
and
sub
dec
jmp
jl
xlat
cmpsl
ds
call
mov
je
imulb
les
pop
cmp
jbe
add
outsb
aad
out
mov
cmp
jns
xchg
xchg
or
cmp
mov
outsb
add
scas
push
loopne
mov
std
pop
xchg
repnz
pop
iret
mov
fbstp
test
cmpsb
and
mov
cltd
and
xchg
decb
pop
mov
inc
ret
pop
lds
sub
ja
int3
scas
test
cmp
xlat
mov
and
shlb
mov
jp
push
fsubrl
jmp
popf
jae
scas
pop
jne
push
push
call
mov
pop
mov
mov
dec
andl
pop
push
inc
and
xlat
fistpll
in
sbb
cmp
repz
or
inc
pop
imull
outsb
push
movsb
pusha
sbb
roll
enterw
jle
cmp
mov
daa
inc
push
int3
lods
icebp
or
ss
nop
inc
mull
xor
ret
ds
cmpsb
add
popa
push
sarb
dec
cld
pop
mov
dec
ljmp
stc
sti
outsb
jge
idivb
mov
movl
pop
sahf
gs
fildll
lret
cmp
ficoml
sti
jnp
test
sub
jecxz
lock
cmpl
repz
pop
arpl
xor
nop
jbe
cmp
into
rolb
inc
cld
and
call
sub
loopne
call
or
loop
fwait
test
movsb
adc
das
mov
dec
leave
repnz
lds
ficoml
adc
repz
inc
push
daa
decb
jle
je
mov
scas
push
cmp
xor
adc
jbe
mov
dec
sub
enter
mov
cwtl
pop
sub
cltd
lahf
lcall
jo
jmp
push
push
xchg
clc
rclb
fmull
dec
es
aaa
pop
mov
bound
jnp
clc
xchg
add
pop
lcall
frstor
cmp
and
or
call
add
lea
je
push
subb
pop
add
lcall
pusha
pushf
sub
push
inc
adc
jmp
scas
popf
push
jo
and
imul
ljmp
sti
cltd
xor
dec
rorl
add
push
mov
jge
pop
into
sbb
cmp
outsb
jb
cltd
adc
and
cmpsb
aaa
popa
add
push
push
fidivl
sbb
cmpsb
jb
inc
fsubr
inc
clc
in
int
jns
iret
lret
imul
dec
cli
lcall
dec
lds
movsb
sbb
loope
cli
pop
das
shlb
push
scas
sub
mov
add
fcompl
mov
push
xor
movsl
std
sub
or
jp
shl
mov
arpl
ja
mov
sar
xor
inc
arpl
and
jecxz
adc
pop
xchg
mov
dec
lcall
rolb
syscall
cmpsl
lcall
cmpsb
ret
push
fwait
add
add
je
xlat
lret
jmp
int3
arpl
fnsetpm(287
or
mov
testb
mov
stos
mov
jns
or
scas
push
gs
fcom
popa
pop
rcll
sub
inc
popf
sub
pop
testb
movsl
pushf
pop
and
mov
jecxz
jae
push
adc
test
jecxz,pn
popf
add
pop
call
inc
sahf
and
divb
xchg
insb
sti
ss
inc
mov
sbb
sbb
mov
jnp
mov
fildll
dec
movsb
pop
push
adc
lea
cmp
sub
test
xor
das
mov
dec
cmc
pop
insb
outsl
push
scas
bound
fs
mov
pop
es
insl
gs
outsl
fucomp
mov
mov
push
inc
push
out
pop
aam
and
xchg
adc
and
mov
mov
imul
push
es
mov
fdivs
sbb
filds
ret
call
inc
cmp
xchg
push
lods
dec
sbbl
repnz
ret
in
fwait
lods
inc
xor
adc
daa
dec
ja,pt
lcall
push
in
pushl
jmp
popa
out
add
or
xor
or
ds
push
arpl
jmp
mov
add
dec
dec
mov
jno
cmpsb
push
ja
mov
mov
rolb
mov
push
mov
int
aad
xor
sbb
push
call
daa
xchg
cmp
inc
inc
adc
fld
jb
and
sub
fldenv
inc
mov
xchg
push
mov
pop
aad
cmp
jle
mov
xchg
test
dec
mov
test
and
mov
fstl
movsl
mov
mov
push
sbb
jmp
or
xchg
fdivs
mov
mov
test
hlt
xor
add
adc
adc
push
cmpsl
mov
popf
xchg
aad
xor
insb
ficoms
fwait
xlat
aam
mov
repz
push
mov
xchg
ljmp
jnp
in
stos
popf
arpl
or
mov
adc
push
jbe
pop
pop
and
je
mov
arpl
aam
adc
dec
mov
push
nop
push
adc
outsb
mov
lcall
lret
mov
insb
xchg
xchg
mulb
lock
mov
fimuls
inc
ss
jb
ja
ljmp
loop
fnop
aad
hlt
xchg
push
jne
add
in
mov
sarl
pop
sbb
sbb
outsb
push
xchg
in
leave
fsubl
pop
loop
dec
cmp
jmp
or
sub
mov
jbe
push
popf
bound
ja
ja
inc
pop
mov
cmp
inc
sub
adc
pop
pop
pop
mov
icebp
xor
jecxz
inc
push
mov
push
jp
dec
ret
push
lea
out
out
adc
test
sti
jmp
add
arpl
xchg
mov
cmp
cs
into
stos
aad
cmc
pop
ja
jmp
ja
enter
shrl
adc
andl
jmp
xchg
imul
mov
ret
mov
pop
xor
test
jns
mov
push
loope
jge
push
adc
daa
stos
xchg
arpl
xor
pusha
enter
inc
faddp
xlat
dec
jecxz
push
insb
fldl
sbbb
dec
cmpl
sub
bound
outsb
mov
adc
shrl
push
sbb
hlt
pop
popa
dec
lds
xchg
outsb
xor
mulb
add
mov
xor
and
mov
pop
xchg
sahf
jo
sub
mov
adc
cmp
sti
mov
nopl
adc
fs
or
int3
sbb
cmp
adc
mov
sahf
inc
lock
cmp
inc
xchg
or
testl
dec
mov
adc
arpl
push
pop
sbb
add
and
or
jb
inc
movsl
mov
fldcw
xchg
mov
xor
cmp
aaa
stos
push
aad
loopne
fwait
clc
inc
jmp
cld
mov
sbb
mov
and
sbb
inc
cltd
mov
leave
jae
xchg
add
mov
and
in
push
imul
sbb
xor
mov
lret
xchg
sub
mov
insb
inc
sub
or
outsl
xchg
mov
fidivl
in
sub
and
jne
cmovb
add
mov
mov
push
fisubl
enter
lahf
xchg
xchg
sbb
adc
sarl
inc
or
daa
fnsave
or
in
int3
mov
mov
push
and
je
nop
xchg
and
mov
adc
push
sub
sbb
mov
sbb
pop
mov
lds
lcall
pushf
test
mov
lahf
mov
lds
into
sbb
pop
push
pop
in
punpckhwd
lds
jnp
add
sbb
fimull
in
int3
mov
sbb
mov
ret
arpl
jns
int
scas
andb
int
aaa
xchg
xchg
sbb
imul
cld
stos
inc
jnp
sbb
insl
or
xchg
add
movl
adc
sub
inc
mov
xchg
adc
inc
inc
jle
inc
and
loope
js
push
dec
xchg
popa
subb
out
mov
aas
call
pop
dec
sarl
sbb
cld
xor
aad
xor
pop
cmp
push
jae
daa
scas
mov
jl
cmp
cltd
ljmp
scas
imul
pop
mov
sarl
add
dec
pop
push
xchg
xor
test
jp
fdivrl
orl
mov
add
pop
or
nopl
and
popf
adc
jne
dec
sbb
mov
or
adc
stos
rolb
mov
add
add
push
outsb
add
lahf
sti
fisttpl
mov
mov
stc
and
and
push
sbb
mov
arpl
push
rcr
push
fbld
stc
int3
outsb
out
lods
cltd
cmp
lds
jecxz
push
pusha
and
mov
add
pop
repnz
test
mov
mov
and
js
mov
mov
lock
cli
xlat
scas
dec
xchg
in
insl
subl
imul
sbb
int
mov
enter
jae
hlt
in
sbb
mov
sbb
ret
push
jmp
inc
sbb
sub
mov
push
shrb
icebp
and
aas
jl
dec
mov
lret
mov
iret
sub
int3
adc
cmp
call
pop
mov
pop
loopne
aam
addr16
leave
test
ficoml
fidivrs
xor
shll
push
mov
adc
das
out
sub
dec
dec
mov
inc
hlt
cmpsl
inc
gs
xor
add
pop
dec
out
iret
addr16
xor
loope
dec
dec
in
push
or
test
jge
lds
push
adc
xchg
push
cmc
out
movsb
xchg
jae
xor
or
es
out
jle
es
aas
jp
into
fwait
adc
lea
into
aad
aad
mov
sub
adc
dec
mov
icebp
addr16
dec
negb
stos
and
lcall
flds
insl
mov
pop
jns
xchg
lock
adc
in
add
xor
pop
xchg
outsb
pusha
mov
cltd
xor
cli
jno
mov
push
sub
push
lds
lea
jge
fbstp
sarb
pop
jbe
sbb
sbb
cmc
fs
xor
test
in
lds
outsl
lods
nop
mov
and
jb
imul
xchg
pop
lock
lret
cmc
pop
cmpsl
jle
test
xor
mov
mov
loopne
test
jl
dec
push
pop
sar
jg
mov
jg
cmp
test
push
pop
mov
out
sub
popa
ja
jne
popf
inc
pop
sub
iret
mov
data16
pop
clc
mov
popa
les
and
jmp
or
adc
and
add
xchg
jg
jnp
in
fisubl
sub
push
aas
int
pop
push
jne
std
add
fldcw
jbe
repz
xor
int3
iret
loop
push
mov
fldenv
or
out
fists
add
mov
es
push
pop
push
mov
mov
push
enter
cmp
ds
push
adc
lds
aad
adc
shl
nop
dec
push
pusha
mov
stos
imul
and
repnz
xchg
pushf
mov
or
mov
gs
add
lahf
push
mov
imul
mov
lods
push
ljmp
add
add
sbbl
mov
repz
xchg
jle
sbb
pop
push
js
sti
jle
push
xor
xchg
push
sub
insb
ret
out
push
ficompl
stos
lret
xor
sub
adc
repnz
push
gs
jne
iret
clc
mov
or
cmp
push
or
inc
adc
imul
jmp
leave
fistps
mov
and
sub
dec
pop
ja
push
push
add
insl
push
mov
and
ficoml
inc
in
enter
es
divb
sub
pushf
and
xor
cmp
cmp
fidivs
fucomp
cmpsl
scas
pop
sub
jnp
fwait
nop
iret
push
push
mov
cmpsb
mull
sub
pop
jg
xor
xchg
hlt
mov
rol
push
je
cli
pop
aad
cwtl
add
arpl
cli
jmp
in
jle
aam
adc
js
push
call
push
xor
mov
imul
loop
loope
loop
push
sub
iret
inc
push
mov
loope
add
jg
sahf
xorb
call
lock
ljmp
add
add
jecxz
fists
mov
test
fists
push
lds
adc
adc
fcoml
outsl
sub
adc
sub
xlat
ret
and
jnp
das
fxch
xor
fs
push
jne
jp
xchg
jle
clc
push
leave
jo
cli
add
adc
push
push
jmp
adc
jbe
dec
aas
sahf
je
mov
xor
cmp
push
outsb
nop
push
fimull
in
not
out
xlat
aaa
mov
movsb
gs
ret
ret
adcl
xchg
push
mov
arpl
mov
lea
icebp
push
cltd
cld
and
cmpsb
ljmp
in
pop
into
out
xor
or
scas
and
in
inc
je
inc
fs
push
pop
xor
sub
popf
jg
lea
mov
lds
ds
popf
cmp
push
dec
jb
xor
fcomps
jecxz
jmp
sub
lahf
out
in
int
mov
into
mov
int
sub
cs
pop
jg
rcl
shrl
mov
inc
repz
mov
xor
sub
test
jge
ss
enter
or
out
pop
scas
cmp
push
mov
out
push
pop
out
ret
push
dec
loopne
out
enter
jbe
in
ret
mov
rorl
cmp
cwtl
pop
sub
imul
scas
ds
xchg
orl
out
cmp
pop
push
dec
das
push
test
int3
sbb
inc
xor
fisubs
cs
je
push
xchg
rcl
cmc
mov
jb
das
mov
inc
dec
dec
sbb
and
cmp
jge
daa
lea
sbb
mov
xchg
or
dec
lock
stc
fbstp
dec
in
clc
ja
pop
and
sub
sbb
jns
rclb
jnp
xor
xor
test
add
mov
dec
std
in
gs
mov
cs
jge
popa
mov
mov
dec
sbbb
out
je
xchg
inc
imul
sbb
loop
lahf
add
sbb
mov
pop
xor
inc
sub
pop
xor
mov
jp
ja
scas
stos
pushf
fcomp
push
jno
test
psllw
test
pop
ljmp
cld
rorl
shlb
pop
fadds
mov
xlat
dec
int
test
and
out
sub
jle
add
sbb
cmp
jo
loopne
cwtl
repnz
nop
les
in
jb
fbstp
mov
push
xchg
shl
lea
jo
cmp
add
in
imul
or
mov
js
adc
push
push
inc
inc
mov
xchg
push
inc
lret
and
mov
or
pushl
mov
lds
sbb
arpl
aam
lods
std
and
dec
adc
outsl
xchg
xor
xor
add
xchg
cmp
cmpsl
mov
fnstsw
mov
adc
repnz
xchg
imul
arpl
inc
add
incl
push
inc
aaa
addb
movsb
int
mov
sub
in
test
dec
jo
and
sub
fwait
mov
xorb
push
add
xor
cmp
xchg
out
pop
jbe
sar
sub
mov
cmp
dec
xchg
mov
faddl
jnp
popl
sbb
fwait
cmp
jnp
mov
popf
push
leave
test
pop
sbb
out
lss
jae
jns
sub
lock
push
pop
push
sub
leave
test
mov
mov
ss
inc
xor
enter
rclb
add
mov
pop
jecxz
fisubrl
jae
mov
or
xor
mov
jl
and
adc
lds
mov
mov
js
outsl
push
mov
rorl
int3
aaa
arpl
scas
push
or
les
sbb
mov
pop
test
jne
int
dec
mov
add
mov
xchg
stos
jge
scas
cld
xchg
push
loopne
pop
mov
add
sbb
out
jno
sbb
aad
xchg
push
cmp
push
push
or
je
lock
push
sbb
aaa
lcall
imul
dec
cmp
mov
aad
sti
sub
jb
or
outsl
lds
xchg
jns
xor
cmc
cmp
dec
or
sbbl
outsl
stos
adc
sub
notl
jecxz
aad
xor
out
mov
rolb
addb
sub
jnp
dec
outsl
xchg
shll
xor
rclb
aas
push
push
mov
xlat
rcrb
xor
cmpsl
loope
movl
sbb
daa
fildll
mov
push
fs
cmp
pushf
ja
push
sub
cld
inc
dec
fmull
daa
and
jae
pop
fsub
mov
dec
cmp
and
ret
mov
lcall
pop
mov
aam
push
add
jmp
les
addr16
push
or
pop
loope
and
les
xor
inc
xor
mov
cmp
xor
bound
mov
or
inc
andl
sti
jns
or
std
and
push
jb
fildll
push
lds
nop
pusha
fisttps
jmp
mov
cmp
lods
inc
xchg
outsl
and
lods
gs
popf
jns
cs
lods
mov
mov
into
adc
cwtl
jg
cwtl
bound
cld
adcb
popa
in
cs
inc
insl
js
dec
in
imul
add
cmpsb
jo
sub
addr16
insb
mov
or
pop
mov
nop
adc
inc
cmp
insb
pop
cmp
push
roll
inc
xor
add
mov
xchg
std
pop
fistpll
cld
dec
test
push
push
mov
repnz
mov
xor
outsb
std
into
push
xchg
xor
and
add
outsl
xor
inc
dec
dec
sti
add
add
mov
xchg
cmp
xchg
loope
xor
scas
sbb
xchg
in
inc
insl
imul
and
lods
adc
or
arpl
lcall
cwtl
push
xor
mov
repnz
adc
mov
dec
and
fwait
in
inc
lahf
mov
rcrl
pop
das
sbb
jo
lods
mov
cmp
cmp
mov
test
adc
dec
push
and
mov
cld
push
xor
into
das
mov
out
fdivrs
cli
das
addb
hlt
fsts
int3
rorb
in
cmpsb
inc
arpl
dec
inc
cmp
mov
cld
nop
inc
test
lods
adc
insb
mov
pop
xchg
add
loop
xchg
adc
fcomp
jne
mov
push
dec
xchg
aaa
mov
popa
push
mov
mov
cwtl
lret
pop
bound
push
outsb
ja
adc
mov
mov
push
cltd
mov
je
scas
lods
mov
hlt
int
pop
loopne
daa
adc
pop
fdivr
mov
arpl
xor
xlat
into
mov
fldt
mov
bound
mov
enter
int
or
aaa
xlat
adc
aaa
iret
push
sar
test
push
jns
cmpsl
inc
repnz
sbb
and
pop
inc
icebp
stos
pop
xchg
push
js
jnp
or
xor
movsb
push
cmp
loop
and
and
cmp
push
sub
andb
dec
or
leave
push
cmp
lods
jmp
adc
aas
pop
fmul
mov
movsb
mov
add
and
xchg
pop
xor
cmp
xor
sahf
sbb
mov
jbe
sbb
loope
leave
sbb
push
adc
js
or
mov
cwtl
rorl
jle
ss
and
imul
shrl
cmpsl
test
mov
xor
fwait
dec
push
sbb
cmp
movsl
cmp
mov
xlat
add
cli
inc
orb
mov
inc
or
jne
dec
jg
ljmp
test
imul
mov
loope
lret
mov
lods
in
mov
lcall
lcall
jb
mov
int
push
xor
cmp
int
test
xchg
std
add
movsb
and
pop
jnp
inc
test
lcall
and
xchg
mov
mov
mov
push
nop
cmc
stos
xchg
pop
pop
mov
lock
or
mov
daa
or
std
push
loope
pop
sbb
faddp
and
loop
mov
push
out
push
push
inc
es
mov
and
sbb
xor
es
pop
outsl
sub
mov
shlb
stos
fst
inc
jg
inc
ror
xchg
dec
pop
jae
xchg
xor
jp
nop
lret
mov
inc
out
imul
inc
mov
inc
movsb
inc
adc
mov
sub
rcrl
mov
or
sub
adc
fdivrs
outsl
icebp
jb
ss
out
subl
jl
shlb
add
imul
xchg
dec
and
and
repnz
inc
adc
popf
mov
shll
mov
xchg
xchg
fsubl
adc
inc
mov
loope
sbb
pop
adc
ja
lcall
ja
sub
cmp
mov
push
inc
sub
mov
mov
insl
dec
xor
cmpsl
ss
pusha
ret
fwait
ds
insl
loopne
rclb
mov
stc
mov
test
lret
or
mov
fstps
jge
and
lret
imul
or
add
jbe
inc
out
nop
cmp
sbb
ret
adc
movsl
aad
outsb
or
dec
addl
inc
jmp
call
dec
ss
sahf
aad
xor
jge
sbb
adc
and
pop
lcall
cld
out
roll
and
mov
mov
jo
mov
lea
mov
sarl
ja
jp
mov
dec
into
cs
les
aam
fiadds
pop
test
cmpsl
sbb
pop
lock
push
pop
outsb
jns
mov
lea
push
data16
pop
cmp
sbb
cwtl
dec
ret
and
loopne
loopne
pop
pusha
pop
xchg
sahf
sbb
inc
js
sub
int
mov
stos
data16
mov
pop
xchg
imul
sbb
mov
pop
int3
xor
dec
pop
inc
push
sbb
mov
jae
leave
push
les
or
xor
or
adc
mov
jecxz
loope
xchg
jecxz
push
sbb
mov
xor
mov
out
xlat
jmp
not
inc
pop
nop
mov
out
mov
mov
push
adc
lods
mov
scas
out
cmpsl
xchg
dec
test
pop
cs
mov
bound
sbb
pop
loopne
push
mov
rcrl
jmp
lcall
add
mov
movsb
add
pop
ja
or
stos
sbb
push
pop
pop
orb
in
in
test
icebp
sarl
xor
in
subl
mov
fucomi
test
scas
mov
fstpt
dec
sub
pop
xor
fcos
dec
cmp
repz
and
jg
nop
dec
call
jecxz
sbb
xor
call
pop
test
repnz
scas
xor
cmp
ret
inc
mov
aaa
jge
mov
cmp
pusha
test
sbb
test
sbb
in
and
roll
je
inc
mov
add
repz
inc
jbe
pop
dec
sbb
movsl
popf
inc
inc
mov
bound
jle
push
push
push
add
jle
out
inc
roll
nop
popa
or
jae
in
scas
cmp
pop
mov
lock
out
mov
fs
mov
movsb
jecxz
or
push
mov
out
push
push
arpl
inc
push
mov
jge
in
dec
lds
cwtl
repz
loopne
or
inc
push
lods
mov
sarb
int3
test
mov
inc
sti
pop
mov
lea
loop
dec
insb
mov
fildll
pop
xor
cmp
and
mov
imul
test
pop
ss
pop
ss
sti
add
or
jg
adc
icebp
sbb
adc
daa
mov
xchg
loope
xlat
push
mov
pop
jae
addr16
push
mov
fadd
or
test
mov
fidivrs
cmp
inc
filds
lret
inc
loope
push
mov
loop
test
outsb
inc
call
xchg
lods
mov
push
jmp
sbb
int3
xorb
jo
jb
xlat
insl
pop
pop
or
push
xor
fsubs
xor
xchg
pop
or
inc
mov
ffreep
push
xchg
incb
loope
or
shrb
hlt
push
in
inc
shrl
dec
fisubl
in
fiadds
xor
arpl
inc
xor
movsl
in
sarl
outsb
cmp
jmp
jg
push
scas
cmpsb
push
cmp
es
movsb
data16
imul
pop
pop
lea
lahf
ret
jnp
mov
push
sarl
inc
xchg
pop
ljmp
sub
inc
aad
mov
lea
leave
fwait
jge
xlat
pop
mov
mov
mov
jae
adc
lock
or
inc
sbb
push
add
mov
sbbb
inc
mov
aad
and
sub
jns
xlat
mov
clc
pop
sbb
jl
mov
cmp
sbb
mov
test
xor
mov
cmp
clc
adc
aad
imul
enter
pop
addr16
test
cmp
out
imul
and
pop
sub
repz
cmpsl
mov
rorl
sbb
movsb
xor
adc
icebp
pop
test
das
cmp
shrb
inc
or
lods
cmc
pop
cltd
mov
fsubp
dec
fdivrs
cmp
lods
add
adc
je
out
push
movsb
or
adc
push
pop
mov
mov
mov
out
sbbb
cltd
jb
or
nop
push
xor
loop
hlt
pop
clc
jg
push
and
cmp
mov
push
adc
mov
rsqrtps
mov
es
cmpsb
jge
pop
cld
cld
sbb
cmpsl
test
push
jg
loope
jge
and
xor
sbb
xor
pusha
jae
fsubs
mov
and
fstpl
addb
fsubrl
movsl
jns
and
adc
push
mov
or
and
test
lds
mov
jae
or
jle
jne
sub
mov
xor
and
lahf
xchg
jmp
jle
dec
insb
or
aaa
lret
xor
push
cmp
mov
scas
cmpsl
stos
imul
enter
addb
adc
mov
out
es
sub
scas
rcrl
push
icebp
or
cld
add
sbb
arpl
jnp
cltd
push
add
push
pop
push
movsl
aad
aas
nop
nop
dec
addb
xor
jp
gs
fwait
push
xlat
adc
loop
clc
or
sbbb
mov
into
sbb
cli
cmp
andb
out
repz
cvtpi2ps
push
push
and
loop
mov
out
adc
bound
xor
out
fs
pusha
mov
jne
xchg
into
ljmp
addr16
inc
inc
adc
dec
pop
test
ja
xchg
lret
jne
pop
mov
fcmovnb
les
or
xor
pop
call
xchg
aaa
sub
push
and
das
lahf
dec
pusha
mov
js
push
push
jg
rcrb
faddl
xor
jbe
daa
hlt
lods
test
aam
pop
lcall
push
lods
ret
adc
lods
add
pop
sbb
int3
popa
and
mov
gs
imul
pop
sbb
sbb
int3
cmp
das
repz
sbb
movsl
stos
dec
jge
mov
es
aad
call
inc
fsubrs
dec
jge
or
push
iret
inc
gs
repnz
std
push
push
popa
cmp
call
and
outsl
push
xor
cmpsb
sbb
sbb
in
pop
icebp
std
sub
iret
test
aad
stos
jnp
lock
nop
bound
call
cmp
repnz
and
shll
add
cmp
xchg
dec
les
sbb
xor
ds
div
pop
cmp
clc
subl
out
pop
jmp
xchg
lret
fldenv
mov
cmpb
adcl
lds
test
mov
add
stc
cmp
pop
jb
jns
adc
dec
push
add
orb
pusha
jl
push
inc
push
sub
sbb
mov
lahf
lods
lret
mov
mov
add
dec
xor
and
and
lods
and
imul
fucomip
insl
loopne
xlat
mov
mov
push
adc
dec
lock
dec
insb
sub
test
or
sbb
sbb
test
jo
xor
std
sahf
push
pop
mov
xor
aam
mov
xchg
fmul
inc
mov
ret
add
cmp
inc
movsl
je
out
cwtl
push
pusha
lret
jmp
adc
and
dec
hlt
clc
int3
out
outsb
pop
mov
push
fsubrl
push
clc
movsl
mov
or
aaa
push
bnd
dec
fs
mov
cmpsl
mov
sub
cli
xor
and
dec
jne
mov
into
cs
test
daa
test
push
mov
push
imul
add
fldenv
outsb
jge
lahf
mov
dec
in
mov
sub
ja
push
lods
test
mov
outsl
push
mov
mov
add
subl
idivl
mov
and
and
push
push
bound
sub
cmp
leave
cmpsb
jg
out
je
xchg
or
in
jl
xchg
aam
pop
sbb
pop
sbb
pop
mov
and
push
jle
xchg
inc
pop
ljmp
cltd
push
sub
or
sub
fistpll
jns
into
fmull
add
int3
roll
nop
xchg
mov
jmp
outsb
dec
das
mov
mov
call
mov
insb
lret
testb
popa
daa
jns
fdivr
mov
mov
out
fcmovb
mov
shll
cmc
push
and
pop
inc
mov
adc
add
std
pop
stc
inc
insl
mov
in
pop
movsl
shrb
or
ja
jns
int3
icebp
mov
push
sbb
adc
loope
xchg
aas
add
js
in
pop
mov
imull
push
add
bound
mov
xchg
roll
push
pop
xlat
pop
xor
xchg
and
pop
or
fucomip
idivb
xor
js
add
sbb
in
sahf
sub
cltd
mov
idivl
mov
push
cli
add
adc
mov
push
les
incb
in
cltd
dec
stos
mov
mov
cmp
cld
mov
cmc
adc
xchg
and
mov
imul
sub
shl
jl
xor
xor
mov
or
mov
xchg
inc
push
fsub
pop
add
daa
imul
adc
or
repz
add
iret
scas
fdivl
aaa
push
in
fistpll
mov
push
jle
add
leave
call
jmp
sahf
mov
mov
ss
and
xor
xor
je
popf
test
dec
out
ss
mov
addr16
xor
ja
aas
mov
sbb
scas
and
popf
jo
fs
fs
ljmp
mov
cwtl
push
scas
xor
out
js
xor
or
test
mov
jno
fwait
mov
sbb
dec
jp
add
cltd
insb
in
clc
das
sub
scas
mov
mov
sub
mov
insb
loope
lock
mov
push
ljmp
loopne
roll
mov
scas
int
shl
jno
cmp
xchg
push
ret
xchg
mov
dec
jbe
xchg
adc
mov
adc
out
dec
xlat
jne
ret
cmp
cltd
nop
xor
xchg
inc
popa
jns
xchg
iret
sbb
scas
addr16
es
rolb
mov
pop
mov
mov
xchg
dec
out
sbb
sub
imul
inc
pop
inc
jo
xor
xchg
loopne
sbb
cld
mov
cmpsb
inc
cs
stos
repnz
mov
cmp
inc
add
cmp
fisubl
insb
mov
and
int3
leave
int
sbb
inc
jo
shl
pop
and
or
and
test
mov
shll
std
sub
ljmp
adc
aas
xor
std
xor
iret
sbb
mov
or
adc
nop
insl
mov
stc
in
cs
into
add
mov
and
int3
mov
test
int3
pop
push
jle
lock
xchg
add
rorb
cs
sub
jnp
add
scas
sbb
jl
xor
movl
jg
mov
xor
pop
push
insb
test
in
popa
pop
sbb
add
mov
dec
nop
push
pop
cwtl
hlt
popa
sbb
jo
sub
sub
leave
xchg
popl
push
inc
add
mov
push
fdivrp
loope
jb
push
jno
mov
mov
pop
jp
stos
aad
mov
out
xchg
repz
cmp
enter
test
xor
and
dec
out
dec
subb
mov
mov
pop
imul
mov
add
in
mov
jb
lahf
add
xlat
adc
lahf
iret
scas
xlat
inc
xor
test
cmp
mov
pushf
loopne
sub
fcmovb
pop
jne
fadd
and
adc
fwait
add
inc
mov
add
aaa
insl
gs
idivb
or
mov
aaa
fst
rcpps
in
loopne
dec
sahf
lods
pop
mov
mov
pop
jb
fcmovnb
inc
jo
pop
lret
jae
jmp
mov
cmp
sub
orl
adc
adc
mov
outsb
push
rcll
cmpsb
jne
mov
sub
mov
test
out
add
out
scas
aam
pusha
jae
fldl
or
push
pop
cli
out
pop
dec
push
cli
mov
fmull
mov
push
push
repz
pop
lods
and
mov
das
pop
add
xor
jmp
pop
and
push
idivb
pop
jge
push
add
adcl
pop
ret
xchg
ljmp
sbb
dec
cmp
je
add
inc
add
das
mov
or
xchg
aas
les
pop
mov
insb
jo
sbb
iret
push
xchg
sbb
lahf
mov
dec
jmp
out
xchg
adc
stos
mov
sub
cmp
fdivs
mov
push
cli
cld
sahf
cwtl
push
outsl
mov
lock
jae
push
pop
pop
ss
out
pop
mov
out
cmpsl
and
xor
mov
adc
cmp
inc
xchg
stos
mov
lods
xchg
lahf
adc
mov
test
sub
ret
repnz
or
cmp
jge
pop
xchg
je
jno
iret
lahf
loop
scas
out
sub
xchg
cld
or
adc
sub
pop
sahf
lods
in
cmp
sub
test
divl
lods
pop
lods
add
inc
push
xor
ss
jb
or
jp
mov
jns
or
sub
mov
arpl
and
imul
insb
add
xchg
je
adc
mov
out
and
or
cmc
cmc
mov
jle
movsl
das
lea
adc
push
jno
jns
mov
jp
jle
sbb
decl
pop
lods
mov
pop
mov
cs
into
or
and
jb
arpl
idivl
xor
jae
cmpb
pusha
xchg
sbb
add
hlt
imul
inc
ljmp
clc
xlat
gs
jne
into
ret
fsubrl
mov
out
enter
dec
jnp
pop
xchg
lahf
out
out
je
xor
insb
mov
iret
mov
shl
dec
shrl
pop
sub
push
mov
adc
push
inc
js
cs
cmp
cwtl
or
sub
sti
inc
loope
cli
add
inc
js
orl
cmp
jmp
mov
adc
rorb
inc
pop
mov
adc
shrl
xor
jecxz
xlat
inc
movb
ds
repz
or
lahf
sbb
pop
xor
shlb
add
insl
mov
fcoms
cmp
add
cmp
aam
fcoms
fdivl
shll
push
push
scas
pop
std
pop
adc
mov
les
lea
xchg
adc
std
push
push
sub
xchg
push
std
daa
push
pop
loop
insb
loop
lcall
repnz
mov
add
jno
lahf
stos
vpsllw
xchg
and
ljmp
movb
mov
lods
faddl
rorb
imul
jae
rorl
xor
mov
add
fsubs
mov
sub
rolb
jg
cmp
pop
aam
push
fnstsw
sub
sub
cmp
stos
das
pop
jo
js
sbb
adc
sub
lea
lea
add
adc
cmc
jno
jecxz
cli
sti
mov
cld
out
cwtl
sti
int3
loopne
lcall
xchg
sbb
loop,pn
repz
xor
repnz
or
pop
test
test
mov
test
xchg
mov
rorb
and
add
xchg
xor
sbb
mov
dec
cli
rorl
ljmp
lahf
mov
inc
fs
rcl
jns
xchg
pusha
lds
cmp
leave
pop
mov
fcmovu
fistpl
sarl
dec
mov
lahf
popf
inc
pop
xor
or
jl
in
sti
cmp
adc
leave
fnstcw
imul
std
fstpt
scas
fsubl
ss
das
stc
out
dec
scas
mov
lahf
imul
sbb
fdivrl
bnd
add
sub
popf
push
mov
xor
sbb
popa
in
jo
add
fsubr
dec
or
pusha
pushl
and
lcall
scas
jl
loope
dec
inc
insb
pop
sbb
lock
cld
inc
cmp
or
outsl
xchg
int3
mov
lds
sbb
mov
ljmp
dec
jl
pop
dec
aam
into
arpl
mov
and
pop
ja
xchg
push
pop
scas
in
mov
xor
and
and
int
subl
mov
jp
mov
outsb
mov
aaa
test
das
mov
inc
sbb
mov
jmp
ss
cmpsb
fcoml
cmp
inc
rolb
add
push
add
inc
ja
push
call
mov
xchg
ja
enter
add
inc
fnstsw
pop
inc
repnz
pop
daa
mov
cmp
xchg
and
imul
mov
cmp
lods
sub
xchg
cwtl
fcomps
mov
cmp
lods
lock
cli
mov
icebp
push
loope
sub
adc
int3
sub
repnz
es
repnz
dec
mov
cmc
mov
mov
xchg
ds
adc
mov
jnp
dec
sbb
fwait
jmp
pop
cmp
int3
push
lret
out
and
pop
add
inc
leave
cmpsb
subb
shrl
popa
sub
ljmp
or
mov
decl
in
add
lcall
xor
aaa
and
insl
shlw
test
jno
aas
jnp
pop
jle
insb
jne
sub
dec
push
push
push
add
fs
fdivl
in
adcb
loope
hlt
mov
into
sbb
or
or
sbb
push
in
nopl
jp
mov
xchg
sbb
popa
sbb
insb
pop
andl
dec
jle
dec
xor
xlat
mov
int
icebp
dec
arpl
repz
cmp
inc
pushf
cwtl
or
test
fmuls
into
add
push
push
popa
into
mov
cmp
jns
movsb
jmp
xor
in
cltd
jg
andb
pop
lds
sbb
mov
xor
js
in
repz
push
mov
dec
jecxz
inc
sahf
adc
xor
xchg
pushf
sbb
insb
icebp
daa
and
data16
rclb
outsb
sar
dec
test
xor
pushf
pop
fxch
mov
cld
pop
fbstp
push
mov
scas
jno
sti
pop
rorl
sub
add
ds
call
scas
test
jecxz,pn
mov
mov
inc
add
lret
inc
dec
movsl
sbb
in
push
pop
mov
fnstsw
xor
movntps
adc
shl
adc
push
and
pusha
loopne
idivl
outsl
mov
dec
sub
mov
int3
cmc
xor
push
cmc
sti
test
inc
xchg
pop
ss
out
rorl
loope
mov
sub
sbb
mov
jecxz
jnp
inc
stos
aam
addb
in
mov
xor
add
inc
xlat
rclb
xor
fidivl
or
ficompl
in
xchg
lahf
sub
xchg
shrl
mov
stos
inc
mov
mov
xor
sub
je
loop
test
inc
add
movsb
loopne
out
orl
test
cs
enter
mov
ficoml
shll
and
mov
jmp
mov
xchg
sub
lret
loope
sbb
mov
push
popf
in
sub
xchg
sbb
pop
lret
or
inc
and
adc
inc
push
mov
ret
fs
pop
pushf
sub
adc
jl
mov
xchg
add
gs
add
repnz
mov
out
jbe
pop
cmp
add
test
stos
inc
test
mov
xchg
jp
in
dec
fdivrs
popa
jns
push
loopne
iret
or
jnp
cmpsl
cmp
call
shl
fsts
ds
out
push
frstor
lods
rcrb
sbb
ljmp
inc
sub
or
jl
sbb
sub
popf
sbb
add
xchg
hlt
jmp
jl
mov
mov
pop
out
nop
mov
cmp
stos
add
es
pop
movsb
mov
iret
aas
mov
scas
sub
sub
pop
push
stos
and
mov
std
pop
ficomps
ret
xor
xor
cmp
ja
or
cs
in
jne
cmp
mov
mov
imul
mov
or
data16
inc
push
es
xchg
or
xor
dec
pusha
mov
jbe
xchg
jo
adc
punpckhdq
arpl
pop
xor
jecxz
or
repnz
test
pop
xchg
mov
hlt
scas
fwait
pop
add
mov
out
mov
push
lock
cmp
xchg
mov
jmp
xor
out
xor
loope
mov
jb
xchg
pushl
mov
mov
gs
movb
cltd
pop
loopne
mov
sbb
push
sti
jg
std
xchg
pop
repnz
shl
in
push
mov
adc
mov
dec
js
jmp
cmpsb
push
imul
pop
or
and
stos
imul
fwait
push
xor
pop
mov
sub
aam
adc
popa
inc
hlt
sub
iret
aaa
leave
inc
pop
cmp
das
ljmp
sbb
cmp
sbb
repnz
or
movsl
push
push
jae
cs
push
clc
lock
outsb
push
dec
pop
mov
cmp
push
mov
mov
mov
cmpsb
enter
mov
cli
mov
in
outsl
into
xor
inc
andb
ljmp
shlb
rorb
jp
xlat
sub
jl
lcall
nop
dec
xchg
mov
xor
cmp
arpl
inc
aad
cmpsl
fldpi
jmp
scas
cmp
jne
adc
xchg
ljmp
scas
lcall
test
sub
dec
jecxz
es
cmp
movsb
dec
mov
pusha
data16
outsl
fadd
xor
mov
or
outsb
stos
addr16
lret
leave
stos
iret
and
cli
ficomps
dec
sub
sub
mov
jno
stos
es
repz
mov
xorl
cwtl
ret
sub
mov
add
outsl
sub
inc
stos
cwtl
adc
into
dec
scas
loop
fwait
rorl
dec
xor
outsl
push
inc
lods
jp
jae
mov
jno
pop
dec
xchg
mov
leave
cmp
mov
inc
rolb
xchg
pushf
mov
add
pop
lcall
jecxz
or
or
decb
inc
mov
dec
sbb
and
cmp
mov
fidivrl
jno
fsubrl
mov
cmpsl
das
add
cwtl
and
pop
pushf
loopne
pop
add
and
mov
fbstp
xchg
fldl
jno
cmp
xor
fdivl
pop
fidivrl
pop
mov
mov
cmpsb
call
shrl
mov
xor
sub
xor
pushf
dec
call
pop
fs
out
cmp
pushf
imull
inc
add
ss
roll
or
in
jp
sub
add
sbb
push
lds
fs
ja
push
sbb
mov
or
je
leave
repnz
xorl
test
push
mov
mov
inc
clc
out
addr16
sbb
enter
adc
sub
lcall
add
aaa
repz
outsb
adc
inc
xchg
xor
xor
les
in
push
dec
andl
pop
std
xchg
fiadds
lods
mov
inc
mov
mov
ds
std
lret
sbb
jg
inc
int
loope
mov
pop
adc
xor
lret
andb
sub
jge
fs
arpl
push
imul
push
dec
lcall
and
lods
dec
xchg
je
mov
dec
ja
xor
lcall
out
sahf
stos
jo
rcrb
jo
mov
bound
mov
pop
sbb
sub
mov
mov
call
cmpsb
pop
add
xchg
add
or
jb
lods
stos
mov
out
insl
cli
push
sub
or
cwtl
ja
mov
and
mov
test
push
inc
xchg
adc
daa
and
ret
cmc
packuswb
pop
test
fbld
fsubp
pop
bound
fsqrt
lret
sub
mov
sbb
pop
movsb
jecxz
pop
jecxz
lcall
pop
gs
filds
mov
add
loope
sbb
pop
insb
flds
lea
pop
idivl
fwait
cli
adc
inc
jnp
xchg
cmc
jge
movsb
pusha
xchg
cmp
test
jg
mov
outsb
mov
in
push
ljmp
and
dec
int3
dec
das
mov
xchg
in
iret
sbb
cli
imul
or
lret
mov
and
mov
repz
xchg
jmp
mov
out
and
xlat
stc
daa
nop
mov
or
mov
in
shll
repz
xor
mov
jo
cmp
aad
and
jmp
mov
stos
and
hlt
pusha
pop
repz
jg
outsb
cli
xlat
jnp
or
mov
in
test
xor
mov
dec
lret
mov
gs
ljmp
fsts
cmpsl
xor
sub
inc
jl
outsb
arpl
xor
lret
mov
ja
decb
fadd
addl
pop
movsl
adc
and
in
mov
or
xchg
mov
insb
sti
int3
xchg
inc
rcr
in
mov
arpl
jp
jae
ss
mov
inc
sbb
rcrl
cmpsl
push
xchg
cmp
es
mov
adc
fcomp
cmp
dec
mov
stos
dec
pop
push
movsl
push
mov
xor
jle
dec
pop
jbe
adc
js
sti
cli
mov
mov
shlb
and
mov
mov
sub
mov
nop
xchg
jbe
jmp
out
sbb
into
cmpsl
pop
sbb
mov
mov
stc
add
mov
cwtl
push
cmp
dec
fcmovb
and
push
clc
sub
pushf
cmc
insl
cmc
adc
lock
mov
cld
xchg
popa
sub
outsl
mov
outsl
mov
in
ja
rorb
testb
std
in
js
into
pop
out
and
je
push
pushf
sbb
push
pop
push
test
adc
mov
push
loopne
scas
pop
js
mov
mov
inc
repnz
and
fisttpll
ret
push
scas
mov
out
push
dec
out
imul
sub
pusha
or
int
mov
jmp
xor
lods
sahf
fistpl
sub
fldl
sub
jmp
jae
sbb
test
outsb
pop
mov
cmpl
flds
int3
inc
sub
mov
adc
std
out
mov
in
movsb
je
xor
int3
imul
lret
rcl
mov
and
mov
jp
fisttps
mov
fcoml
xchg
fcomp
mov
sti
xchg
push
scas
lcall
pop
xchg
or
pop
mov
ja
sbb
cmp
mov
mov
jmp
test
fstps
pop
sub
data16
in
cmpsl
pop
ror
outsb
pusha
out
mov
frstpm(287
adc
xor
movsb
nop
pop
and
xor
add
add
xor
imul
inc
xchg
aam
inc
lret
aam
out
adc
xor
sub
dec
adc
cld
add
test
repz
xor
lret
out
jmp
mov
adc
or
bound
outsl
fdivrl
rcl
aas
add
insb
jp
insb
xchg
lret
jae
test
push
stos
sub
fdivs
mov
add
mov
cmp
jg
out
or
mov
aad
pop
outsb
sub
sbb
mov
lods
xchg
int
cmp
ja
jne
mov
std
push
lcall
hlt
movsb
mov
fsub
orl
hlt
jle
clc
or
insb
addr16
dec
sub
mov
int3
lods
dec
ds
sub
add
popf
inc
jge
in
sbb
mov
mov
loope
sbb
sub
lcall
cld
shrl
jmp
push
je
in
enter
out
insb
xor
bnd
aam
and
or
rcll
sbb
cltd
cmc
dec
jg
jb
mov
dec
mov
scas
mov
pop
dec
jae
divb
dec
dec
stos
addl
jns
mov
daa
inc
adc
ds
xlat
mov
out
aas
fwait
and
aaa
test
mov
push
xchg
lods
dec
adc
js
or
outsl
and
in
jle
scas
addr16
ss
cli
dec
mov
mov
inc
pop
pop
sbb
mov
and
shl
fs
push
jno
test
add
iret
lret
lds
stos
sub
repnz
mov
imul
jg
lds
scas
imulb
cmpsb
jge
movsb
arpl
popf
in
into
xlat
adc
push
in
movsl
movsl
jnp
daa
icebp
push
push
push
and
ret
inc
ja
push
and
cmp
iret
mov
cmpsl
lret
sub
jp
in
mov
ucomiss
cmc
shrb
jmp
dec
jl
icebp
pop
sbb
test
in
out
outsb
push
fcoms
jmp
das
pop
icebp
or
jbe
xchg
mov
mov
je
popf
outsl
mov
addr16
movsl
xor
roll
es
roll
and
in
mov
jne
cmpsb
clc
add
pop
test
subb
push
jne
or
outsb
jno
jne
xchg
xor
subb
movb
push
add
xor
push
or
and
xchg
int
das
xchg
divl
ret
mov
stos
inc
add
cmp
jge
inc
out
pop
xchg
mov
call
xchg
mov
int
adc
dec
push
cli
pop
insl
fidivrs
rolb
adc
ret
dec
sub
adc
sub
xor
inc
fstps
push
ficomps
lret
clc
dec
inc
out
fwait
pop
pusha
cmc
push
sub
mov
jnp
pop
das
popa
pop
loop
lods
fs
jl
adc
hlt
push
out
test
shll
cmp
cli
shlb
jl
lahf
push
test
lret
push
jle
xor
scas
rorl
and
subb
inc
cli
lods
rcrl
mov
mov
sbb
aaa
dec
inc
mov
cmp
xchg
lret
add
pop
imul
hlt
fldenv
pop
mov
xor
jae
mov
or
loop
dec
jo
jae
iret
ljmp
pop
jmp
inc
mov
sub
hlt
frstor
mov
push
or
aaa
imul
cmpsl
sub
negb
outsl
xchg
aad
es
sub
data16
cld
gs
cmc
inc
pop
xor
les
popw
or
jl
dec
jle
call
mov
add
cmpsb
fmuls
rorl
in
adc
mov
sub
jge
outsl
xchg
cvtdq2ps
sbb
or
arpl
lods
outsl
aad
jne
jb
popa
push
stos
inc
xchg
push
cld
cmp
dec
add
pop
fnstsw
or
je
or
in
add
mov
ja
adc
ror
std
push
xchg
dec
mull
in
pop
out
cmpsb
dec
cwtl
sub
sbb
test
leave
mov
lock
fs
and
arpl
imul
aaa
sub
dec
rcrl
sahf
daa
cmpsb
sbbl
out
loope
loop
out
xchg
sub
mov
inc
es
mulb
sub
xor
dec
and
test
in
or
cmp
jb
cli
loop
mov
push
sbb
and
push
xor
aam
je
cwtl
lcall
or
mov
dec
jmp
sbb
fs
icebp
cmp
dec
add
cld
mov
inc
mov
mov
ja
inc
xor
cli
pmulhw
iret
adc
pop
movsl
pop
jle
push
pop
in
inc
data16
or
in
sub
xchg
ret
ficompl
lds
push
mov
scas
outsl
mov
lcall
mov
or
loop
sub
mov
sti
push
sub
lods
pop
out
inc
push
les
mov
mov
push
cmp
adc
sbb
mov
push
xor
or
ds
fmull
mov
xchg
aas
cmp
xchg
mov
lods
gs
push
push
cmpsl
sub
sti
das
mov
jne
mov
sahf
sub
inc
pop
loop
out
inc
out
xor
in
ds
pop
cmp
jns
dec
out
clc
dec
clc
loopne
iret
int3
cltd
cs
fcmovne
fs
xchg
lock
cmp
cs
pop
cmp
xor
and
push
lods
mov
mov
popa
fwait
pmulhw
xchg
xlat
push
push
push
dec
xchg
adc
dec
aas
enter
sbb
push
fnsave
sbb
fwait
daa
mov
cs
pop
and
addl
xchg
mov
sbb
mov
mov
ret
ja
sub
scas
jl
addr16
notb
xchg
sub
push
out
inc
out
lods
jb
cmp
add
xor
int
cli
and
leave
repnz
ss
ss
mov
or
pop
imul
fbstp
les
mov
mov
jecxz
clc
sub
inc
or
or
fisttpl
xor
add
loopne
fs
mov
dec
fistps
in
pop
loopne
push
lret
iret
xchg
add
push
popa
jb
jne
xchg
pop
shl
push
inc
or
insb
jl
and
xchg
in
and
jns
mov
inc
mov
inc
xor
aaa
arpl
enter
mov
and
jl
cld
fdivs
cmp
push
outsl
inc
pop
pop
or
jbe
inc
sub
sub
jle
imul
push
addr16
xlat
insb
add
jp
jl
jg
xor
mov
call
in
mov
outsl
mov
cmpsl
hlt
pop
push
xchg
leave
push
lea
cld
arpl
out
and
jne
popa
dec
cmp
pop
popf
ret
mov
ret
push
ss
psubq
mov
mov
test
or
cli
cwtl
sahf
fstpl
fstps
out
pop
dec
dec
mov
sarl
ss
mov
cmp
stc
pop
outsl
ficoml
adc
insb
mov
xchg
aaa
aaa
sub
out
je
adc
sbb
mov
and
xor
imul
mov
sti
in
imul
mov
lds
mov
pop
push
xlat
pop
mov
pop
sub
insb
sarl
aaa
and
outsl
mov
and
pop
sbb
popa
adc
push
out
bswap
fdivl
fwait
xchg
lahf
add
push
fistpll
test
inc
pop
inc
adc
push
sti
dec
lock
xchg
xor
add
movsl
ret
pop
sub
cmp
pop
imull
mov
pop
sub
and
scas
sub
jnp
adc
mov
adc
in
movsl
in
pop
push
sub
out
lret
adc
jb
xchg
sbb
in
push
sub
or
fsubs
pop
loopne
ret
jge
in
scas
test
movsb
icebp
out
mov
nop
data16
test
ret
adc
mov
sarb
test
push
in
bnd
xor
stc
push
sub
xchg
push
pop
enter
dec
adc
pop
inc
hlt
mov
sbb
xor
adcb
test
and
out
ficoms
lock
jnp
addr16
nop
outsb
cltd
pop
adc
xor
or
repnz
push
xchg
fisubrs
add
stos
and
das
out
mov
test
ret
mov
lock
lret
mov
inc
xchg
jge
test
cs
xchg
mov
leave
mov
in
enter
fcmovnu
popf
imulb
lahf
jge
mov
push
enter
movl
mulb
add
inc
insb
cwtl
pop
aam
push
push
cli
mov
inc
gs
jb
sbb
or
fbld
adc
dec
test
lret
inc
rorl
sub
or
lock
aam
lods
mov
fs
mov
pop
dec
mov
in
xor
xor
cpuid
rcrl
mov
repnz
and
jnp
xchg
lahf
add
pop
ret
ds
fistpll
in
lahf
xchg
xchg
jbe
test
pop
mov
aas
or
out
cmpsb
flds
or
xchg
jb
ss
cmp
mov
xchg
pop
sbb
outsb
push
or
das
mov
mov
pop
stc
cmp
mov
sti
jle
ret
mov
lea
cwtl
xor
stos
xor
push
push
pop
test
xchg
rorl
sub
add
fmulp
xor
out
int3
jno
shrb
popf
es
sbb
cli
inc
cs
jo
lock
in
fwait
sbb
popa
idiv
enter
aas
filds
adc
jnp
mov
mov
lea
adc
aad
ljmp
inc
pushl
test
lds
pop
push
stos
xor
stos
or
sub
xchg
inc
xchg
xor
push
mov
sbb
xor
lods
add
outsb
fsts
out
jne
push
leave
movsb
hlt
imull
jle
daa
ret
enter
out
inc
lret
xchg
jmp
and
lret
dec
inc
mov
jo
out
sub
pop
das
push
pop
es
movsb
xchg
or
mov
enter
or
mov
jo
in
fidivl
dec
insb
je
int3
rcl
lret
xor
lcall
add
mov
fsubs
add
adc
dec
push
outsl
ljmp
les
sbb
loop
rcrb
std
jmp
add
mov
hlt
and
mov
inc
aaa
addl
mov
dec
adc
fadd
mov
mov
aas
leave
popf
test
ljmp
mov
add
or
lock
adc
jo
push
jbe
imul
jo
push
push
out
mov
cmpsb
jns
dec
out
push
iret
in
ss
mov
jne
lret
aad
arpl
fsubs
fidivs
push
sub
addr16
xorl
mov
sbb
inc
cmp
fs
incb
mov
cs
push
xor
movsl
iret
mov
ljmp
xor
jbe
ds
stc
mov
adc
pop
out
mov
and
adc
mov
push
sahf
push
jg
lock
push
and
clc
cmp
push
iret
aas
hlt
mov
lods
insl
vcvttps2dq
iret
xor
leave
movsb
inc
cld
andb
mov
dec
lret
out
das
mov
lret
push
push
lea
pop
ss
mov
ficoms
and
call
inc
insb
inc
inc
mov
enter
jmp
ljmp
adc
cmpsl
sbb
test
mov
push
sbb
pop
into
or
lods
push
in
push
inc
mov
mov
mov
dec
gs
mov
sbb
jle
stos
mov
pop
adc
jo
lods
cs
arpl
test
hlt
lock
inc
popf
insl
mov
aad
pop
test
cmp
dec
dec
shl
cmc
mov
test
dec
adc
pop
pop
lock
push
mov
stc
pushf
shll
mov
in
push
cmp
xchg
fwait
test
out
and
ljmp
jle
sahf
lret
mov
imul
movsl
inc
daa
aad
adc
xor
adcl
jae
aaa
xchg
pop
pop
fwait
mov
jns
jecxz
cmp
jnp
insl
daa
es
out
inc
jle
mulb
push
cs
call
rorl
clc
xchg
mov
xchg
dec
call
pop
movsb
add
push
in
ret
sub
movsl
fisubl
pushf
repnz
aaa
jge
mov
dec
cmp
mov
popa
sub
std
mov
or
mov
xchg
add
dec
push
shll
or
test
add
in
enter
push
or
cltd
insb
pusha
mov
fiaddl
xchg
fmull
lds
sbb
pop
xor
mov
cmp
lock
leave
jecxz
rolb
add
imul
scas
sub
push
fnstsw
out
jno
rolb
lods
push
and
stos
inc
scas
fstpt
movsb
int
cmp
data16
imul
imul
mov
xor
int
test
cmp
fldl
mov
test
in
ja
jge
test
push
rcr
lods
hlt
sbb
cmp
inc
lods
lret
ds
pop
std
dec
push
aad
xor
sahf
fcomps
pop
cmp
pop
ret
mov
sarl
rcrl
and
pop
mov
es
sub
push
pop
cmpsl
mov
sub
pop
push
jno
inc
in
loopne
sub
in
leave
and
mov
in
push
add
pushf
pop
pop
fadds
mov
xor
ds
xchg
popa
cmpsl
xor
xchg
sahf
dec
unpcklps
dec
cmpsb
in
pop
jns
mov
push
and
imul
fildl
push
ss
mov
inc
in
idivb
pop
or
dec
jno
negl
cmp
jle
ret
lods
inc
mov
mov
xor
aad
fldl
push
cmp
imul
cltd
roll
mov
cmpsb
or
xor
ja
inc
jp
fisubrs
aas
mov
fsubl
leave
aas
push
sbb
push
pop
cmp
pop
push
arpl
push
cmp
mov
les
mov
sti
mov
test
push
ss
lcall
cltd
cmp
rorl
xor
insb
adcb
dec
out
mov
daa
cmp
das
mov
xchg
push
in
adc
mov
inc
movsl
imul
cld
sub
xor
movsl
cwtl
aam
dec
stos
pop
jg
ret
fcoml
rorl
fistl
daa
daa
in
call
jl
cmp
ja
jae
insl
mov
adc
and
push
sub
jnp
or
cmp
add
sarl
dec
cli
jge
jae
repnz
cs
nop
xchg
movsb
mov
adc
cmp
pop
or
hlt
jb
dec
mulb
xor
push
push
fbld
and
pop
das
dec
and
bnd
fbstp
xchg
and
xchg
mov
dec
daa
into
xchg
and
mov
mov
cmp
lds
leave
xor
insl
fs
xchg
cwtl
push
int
sub
bound
mov
xchg
int
mov
jns
adc
scas
pop
inc
rcl
fidivl
push
adcl
cmpsb
add
xchg
shl
out
push
int3
mov
inc
mov
lahf
mov
sbb
mov
jge
jg
sub
subb
jno
push
lret
push
iret
gs
sub
dec
pop
mov
xchg
xlat
je
clc
icebp
inc
and
leave
les
sbb
and
fwait
mov
pop
xor
lock
dec
int3
pushf
aad
stos
dec
dec
fs
sub
push
leave
xchg
push
xor
aad
psubd
ljmp
imul
mov
cli
xchg
adc
ss
test
iret
out
mov
not
mov
jae
movsb
mov
aam
adc
lods
popa
insb
lea
xchg
ficompl
sub
daa
sbb
adc
je
clc
jmp
push
push
push
in
dec
outsl
sub
cmc
mov
dec
or
icebp
les
pop
daa
xor
cmp
mov
lock
jle
int3
inc
mov
pop
push
icebp
add
push
in
outsb
imul
ss
je
dec
cmp
test
mov
jo
jge
inc
or
imul
cmp
push
xor
sahf
xchg
insl
mulb
push
stc
adc
inc
out
jecxz
aas
out
dec
mov
push
inc
test
and
adc
xor
imul
pop
ficomps
popf
sbb
fwait
xchg
fdivl
sub
les
outsb
roll
mov
loop
adc
movsb
imul
dec
pop
vpackssdw
mov
mov
add
cmp
add
scas
adc
push
addr16
mov
or
add
mov
adc
fstpt
add
stos
sarb
and
cwtl
lea
pop
paddw
inc
jae
and
mov
lock
out
gs
int
mov
fstps
popf
cmp
and
push
ss
add
stos
or
mov
in
dec
cmp
inc
xchg
loope,pt
mov
jmp
imul
pushf
test
xchg
popf
in
jecxz
fstpl
notl
mov
cmp
daa
mov
subl
iret
pop
or
shl
mulb
iret
das
aaa
js
mov
mov
stos
adc
mov
stos
fbld
push
in
mov
xchg
sub
nop
pop
xor
dec
lret
cli
and
jg
pushf
in
aad
notb
lea
test
fwait
dec
movsb
scas
push
jne
xor
popa
rcl
jecxz
lods
fisttpl
cld
push
hlt
dec
add
hlt
pushf
div
out
lods
cld
and
push
test
add
push
sahf
push
pop
pushf
pop
fwait
and
insl
mov
fildll
sbb
push
into
jbe
jecxz
lea
xchg
sbbl
add
scas
imull
jne
push
loopne
daa
jecxz
mov
ds
cmp
mov
je
push
and
dec
adc
in
rcl
fstl
mov
out
out
push
andl
fisttpll
adc
popf
xchg
out
icebp
out
xor
popf
mov
mov
jb
rol
fwait
outsl
es
push
fsubrl
dec
std
jae
xchg
mov
jg
cmp
xchg
xchg
outsl
insb
push
pop
nop
adc
bound
mov
and
lods
fs
loopne
divl
movsb
fistpll
mov
test
mov
sub
fildll
jns
dec
sub
and
mov
or
sti
fs
adc
popf
scas
ficoms
mov
aad
orb
pop
je
push
mov
lret
repz
pushl
add
loopne
nop
dec
lock
inc
cmp
int3
dec
dec
sahf
ljmp
and
jae
in
push
xlat
not
fcmovnu
mov
sub
lret
adc
mov
cmp
repnz
jl
aaa
imul
sarl
jp
dec
sti
pop
stos
push
pop
iret
mov
lea
sbb
fcmovbe
push
lret
mov
pop
mov
push
hlt
mov
pop
in
mov
xor
cmp
mov
es
shlb
mov
cld
sbb
mov
and
addl
movsb
cmp
jb
js
pop
dec
pop
mov
int3
pop
pop
jne
pop
ss
stos
cmp
sbb
aas
mov
jnp
fstl
test
pop
jo
dec
aam
push
subl
adc
or
cs
addr16
sbb
mov
out
pop
push
in
repz
pop
out
das
sbb
inc
dec
or
mov
mov
insl
jmp
inc
mov
rcrl
sbb
in
movb
pop
arpl
sarb
jne
arpl
movsl
pop
pop
outsl
sub
mov
loope
test
cmp
mov
sub
adc
scas
fcmovnbe
arpl
cmpb
sub
cli
mov
and
movsl
cmp
mov
cmc
push
jmp
cli
sbb
test
scas
fstps
in
pop
sub
pop
nop
xchg
pushf
js
cld
pop
and
inc
pop
cmp
ficompl
int
push
test
mov
in
js
inc
in
imul
aad
adc
dec
mov
rcll
stos
mov
push
mov
cltd
jb
out
inc
cmp
ret
fnstenv
sub
arpl
icebp
push
mov
rcll
jb
push
loope
sbb
push
stos
jbe
mov
add
cmpl
jns
imul
dec
pop
xchg
xchg
fincstp
push
scas
dec
in
xchg
and
xor
lea
cmpsl
lahf
neg
pop
xlat
stos
cmpsl
bound
sbb
sub
inc
in
ret
cmpsb
mov
pop
js
cltd
pop
bound
or
daa
call
fs
aam
xchg
cli
pop
cmp
xchg
pop
scas
aas
jnp
out
pop
pusha
popl
xchg
jle
xchg
xchg
call
sub
xlat
outsl
xchg
pop
jmp
out
das
rcll
and
into
xor
cltd
sbb
dec
out
push
mov
fsts
inc
jge
mov
xchg
inc
rorb
insl
jo
aam
scas
repnz
das
imul
rolb
mov
sbb
mov
lea
lock
arpl
sbb
mov
jl
enter
dec
mov
mov
outsl
jae
add
scas
dec
out
jle
sbb
pop
jne
cmp
mov
xor
lods
or
sub
lret
movsb
push
jge
push
jns
pop
pop
divb
movsl
sbb
adc
lock
notb
jl
cli
test
in
adc
in
out
out
xlat
push
push
in
xchg
mov
out
cmp
pusha
sti
movsl
and
pushf
and
loope
xchg
mov
ss
push
pop
jnp
out
outsl
and
loop
sti
pushf
jp
into
xor
mov
adc
pop
xlat
loope
cli
aaa
std
scas
movsb
rcrl
ss
dec
mov
or
sub
adc
adc
mov
jge
xor
inc
mov
dec
sti
cld
sbb
push
in
mov
xchg
cmp
fbld
add
imul
or
int
jmp
aaa
scas
into
fiadds
test
aam
mov
jmp
jo
cmp
js
rorl
inc
data16
dec
mov
ss
sub
aaa
push
mov
stos
stc
iret
sub
imulb
shll
jmp
inc
push
dec
sub
jmp
inc
imul
and
addr16
daa
movb
or
mov
xchg
inc
sub
cli
orb
push
dec
repnz
xor
jle
dec
mov
insl
ss
rcrl
scas
dec
mov
dec
or
lods
sub
je
mov
xor
stc
les
stos
cltd
sbb
xchg
je
inc
cmp
std
scas
jb
pop
sti
popa
fdivrl
mov
lods
icebp
pop
int3
lahf
lock
and
fldcw
jae
jb
into
mov
add
push
imul
sub
adc
popf
stc
repz
adc
and
mov
das
ret
dec
emms
cmp
addl
or
pop
repnz
push
mov
hlt
mov
mov
add
into
rorb
jae
sbb
nop
fnstenv
bound
bound
pop
js
inc
sbbl
jb
cwtl
or
outsl
xchg
pushl
arpl
insb
mov
jl
loop
insb
imul
stos
orl
repnz
xchg
xchg
in
shll
jns
mov
push
das
cmpsb
arpl
ja
xchg
mov
cmp
mov
dec
jns
fstpt
pop
ljmp
sbb
push
lods
aam
pop
dec
fisubs
or
jge
sbb
outsb
xor
lret
mov
sbb
push
sarl
mov
jnp
imul
adc
stos
addl
in
loope
mov
jb
mov
inc
addl
adc
xchg
sub
testl
test
cmc
icebp
push
stos
jmp
cmp
jo
nop
or
pop
mov
je
jge
xchg
xchg
data16
adc
jge
mov
mov
in
xor
nop
ret
push
andb
mov
enter
imul
dec
mov
dec
or
imulb
out
pusha
outsl
popf
sbb
mov
scas
push
add
adc
adc
es
pushf
mov
mov
popa
imul
xchg
sar
subb
dec
jge
pushf
add
xchg
mov
orb
aaa
mov
add
fldt
mov
out
in
popa
in
pop
sbb
jg
into
inc
fisubrs
dec
mov
xor
sub
add
andl
dec
push
inc
fiaddl
lahf
adc
stos
in
scas
sbb
mov
test
fldt
jbe
mov
mov
xchg
inc
lock
xchg
testb
push
push
inc
pop
jae
repz
cwtl
dec
sub
rdtsc
loopne
mov
stc
stos
insl
daa
sbb
pushf
dec
rorl
inc
dec
fidivrl
inc
cmpsl
iret
dec
stos
mov
jg
xchg
js
stos
aaa
mov
sub
addr16
jecxz
or
or
lds
lock
in
mov
and
push
andb
popf
test
push
sahf
jb
add
push
cmp
icebp
push
fstl
mov
inc
scas
dec
js
add
sarl
cmp
aam
ds
repnz
sbb
and
pushf
stc
xor
cmc
sub
adc
dec
scas
mov
insb
std
cmp
add
imul
sub
je
mov
and
int3
es
lret
in
mov
scas
ds
mov
add
xchg
imull
int3
cltd
cmp
insl
notl
arpl
notb
and
imul
xchg
push
dec
pop
pusha
xchg
dec
xor
push
xor
mov
int3
lock
add
xor
dec
dec
lock
cmp
in
add
in
xor
insb
in
cmp
cmpsl
imul
xor
cmp
or
cmp
xchg
sbb
push
dec
jae
rcrl
jb
xchg
rorb
popf
movsl
sbb
xchg
fucomi
fistpll
mov
ja
popa
fwait
mov
push
xchg
mov
dec
fcomi
or
add
pop
and
stos
js
sub
push
pop
pop
jns
push
lds
mov
jae
ljmp
cmp
sbb
ror
pop
xorps
daa
cmc
into
pop
adc
outsb
mov
mov
aaa
bnd
inc
jge
pop
xor
dec
dec
push
mov
xchg
cmp
xchg
mov
mov
xchg
inc
pop
jg
test
in
aam
lock
cmpl
xchg
adc
das
dec
icebp
xchg
pop
iret
jmp
movl
sub
mov
gs
mov
dec
sub
or
mov
mov
rclb
jmp
cmp
sahf
push
add
push
pop
dec
pop
push
roll
ss
fbstp
adc
mov
mov
lret
cltd
xor
jmp
inc
add
jae
mov
xor
icebp
mov
jp
xchg
in
xchg
mov
cmp
shrb
mov
idivb
arpl
lcall
lds
mov
cli
movsb
cmp
shll
add
pop
sub
rorl
addr16
mov
mov
data16
dec
mov
faddp
cmp
aas
jl
in
mov
sbb
mov
je
bound
adc
inc
xor
inc
mov
jl
inc
out
inc
add
pop
pop
fsubrl
pop
cmpsb
pop
int
pop
movsb
scas
xchg
dec
stos
mov
mov
mov
push
ss
push
push
xchg
add
add
pop
flds
cmpsl
fcomps
dec
test
out
add
test
xor
sub
jg
and
pop
add
jbe
cmpsb
ljmp
test
js
test
or
push
jmp
aas
icebp
add
sbb
or
sub
pop
jbe
test
nop
std
jge
pop
and
fbld
lods
test
ret
pop
cs
and
movsl
xchg
inc
cwtl
sub
sbb
lret
jmp
hlt
sarl
aaa
mov
jns
stos
hlt
jb
pop
xchg
xlat
cmpl
int3
repz
scas
arpl
adc
das
or
cmpsb
arpl
pop
adc
cmp
js
out
out
add
dec
cmp
sub
ljmp
push
cwtl
ss
mov
test
jge
into
cmp
sub
xor
outsb
shll
adc
add
pop
xor
xchg
les
push
lds
fsts
add
mov
jl
add
push
int3
das
pushf
add
jg
xchg
lret
cltd
outsb
push
jb
sbbl
jmp
imul
sbb
in
sbb
push
mov
push
data16
jnp
je
test
repz
in
aam
in
in
push
push
add
cmp
add
ret
inc
cwtl
jge
lret
cmpsl
xor
fdivrl
ja
fcomp
fmull
jne
adc
or
jp
pushf
mov
inc
leave
imul
addb
cmpb
pop
lret
sti
lods
adc
jl
outsl
adc
push
mov
mov
cld
int
mov
or
imulb
adc
xchg
ss
jp
cld
push
sub
incl
loope
cli
jb
aas
adc
xor
fildll
mov
adc
out
mov
pop
inc
inc
sub
mov
jno
je
mov
insb
pop
xor
xchg
add
sbb
ffree
cmc
ret
push
rorb
cmp
sub
arpl
push
and
dec
imul
pusha
shll
cmc
xor
adc
lcall
push
les
call
loopne
cmpsb
lahf
out
cmc
adc
push
inc
lods
mov
mov
xor
jbe
xchg
fimull
mov
insl
jns
jecxz
cli
xchg
jne
daa
fstl
sub
shll
nop
inc
ss
cli
or
inc
icebp
dec
xchg
inc
jecxz
push
clc
js
push
clc
std
inc
and
test
lahf
dec
push
ss
test
push
repnz
stos
data16
or
test
pushf
xor
inc
inc
inc
lret
xlat
and
sub
test
movsb
jp
dec
jmp
loopne
call
adc
outsl
dec
and
mov
cld
mov
cmp
sarb
cld
and
imul
outsb
ds
hlt
arpl
inc
xor
test
cmp
subl
mov
dec
inc
jl
test
jecxz
add
xchg
cmpsl
into
adc
pop
inc
sbb
inc
adc
pop
jle
xchg
sub
adc
mov
mov
and
addb
and
mov
icebp
push
in
sub
or
aas
out
mov
add
cmp
xchg
stos
js
jnp
mov
divb
je
lods
into
sbb
adc
xor
adcb
jmp
mov
xchg
outsb
xlat
shll
gs
jns
lret
lea
js
imul
ljmp
mov
inc
jnp
xchg
mov
mov
dec
jecxz
mov
mov
shrb
dec
repnz
out
stos
and
insb
cmc
dec
fs
mov
mov
pop
mov
shrb
push
neg
inc
mov
test
cmp
mov
cmp
inc
lret
stos
insb
dec
inc
imul
cli
je
jo
into
mov
fidivrs
into
addl
push
mov
scas
in
mov
sti
mov
cmp
fnsave
add
inc
outsb
or
dec
rcll
outsl
jecxz
adc
gs
pop
inc
lods
stos
ja
lods
adc
lret
sarb
pop
shll
cmpsb
xchg
stc
cmp
cmp
mov
out
adc
cltd
std
adc
mov
pop
movsb
push
scas
inc
push
mov
ds
and
mov
rolb
push
orb
je
jmp
dec
inc
scas
fs
jecxz
mov
test
lcall
jae
xchg
mov
push
loope
lods
shrl
xchg
hlt
add
int
sub
aas
inc
ret
fnsave
imul
in
aam
mov
out
mov
mov
andl
fs
gs
add
out
in
loop
mov
loopne
mov
adc
mov
sub
mov
cmpb
xchg
clc
push
cmpb
xlat
insb
les
pop
or
mov
mov
jle,pt
insb
std
pop
mov
pop
or
out
pop
mov
popa
fdivl
lock
xlat
or
insl
out
imul
cmp
icebp
xor
and
cli
mov
and
stc
mov
mov
cmp
in
jns
js
sarb
pop
pop
xchg
inc
fsubl
gs
jle
shll
in
jge
scas
add
bnd
fs
jl
test
addr16
mov
fadds
xchg
movsb
cmpb
outsl
mov
in
jg
movsl
ds
stc
xlat
or
mul
pop
lea
or
fsubl
mov
mov
lret
out
int
dec
adc
sbb
movsb
rcr
pop
pop
adc
aam
loopne
jge
ss
and
inc
icebp
jp
stos
fldcw
lock
cmc
mov
lods
or
aaa
rol
fists
inc
sbb
fwait
jb
jne
xchg
aad
and
fwait
mov
cmp
popf
in
add
loope
sbb
push
aam
repnz
cld
stc
cmp
sub
out
inc
aas
fiadds
divl
and
lods
sbb
cmp
jl
sub
add
sarl
notl
mov
mul
and
xor
dec
je
cltd
movsl
testb
mov
jl
push
mov
jo
jl
or
in
idivb
iret
sti
aas
movsl
xor
pop
dec
loope
repnz
jl
and
inc
mov
in
sub
iret
push
pop
xchg
mov
divl
loopne
jne
stc
sub
jge
push
sbb
and
sub
mov
cmp
clc
add
xor
leave
ja
lock
iret
pop
xor
int3
mov
iret
rolb
out
adc
js
lea
pushf
inc
mov
cwtl
loop
stos
adc
int3
adc
add
sbb
movsl
call
xchg
push
pop
pop
jge
mov
sub
and
rcrb
lds
jnp
add
shll
clc
fbstp
sti
dec
iret
cmpsb
sbb
jo
movsb
and
jl
pop
mov
das
daa
fistl
sar
stc
or
stos
sbb
xchg
cld
mov
sbb
mov
pop
sbb
cmp
mov
sbb
call
jmp
in
cmp
stc
push
xlat
aam
and
mov
or
daa
inc
dec
jg
xor
pop
dec
push
add
in
in
push
lcall
aas
test
fidivrl
mov
and
or
push
outsl
cmp
icebp
or
jnp
loopne
orb
adc
cmp
aad
cmpb
push
pop
sbb
cs
xor
shl
push
les
jmp
and
adc
imul
rorl
fwait
or
pop
sbb
iret
orl
xchg
pop
and
and
xchg
xchg
jb
push
lahf
aad
mov
jae
adc
lcall
sub
push
jb
cltd
mov
pop
std
lods
mov
sbb
fldl
sbb
jge
pop
mov
xchg
aas
or
xchg
mov
pop
test
rorl
mov
pop
data16
ljmp
mov
xchg
shlb
add
loopne
adc
xor
aaa
aaa
mov
sbb
fmul
pusha
pop
iret
cmc
push
inc
aam
fcmovnb
test
pushf
pop
sahf
movsb
dec
mov
jmp
dec
pop
dec
out
clc
daa
inc
dec
in
push
dec
inc
adc
out
sub
mov
iret
sbb
mov
cmp
cmpl
mov
mov
and
inc
pusha
xchg
push
fs
push
popf
ficoml
sub
cmp
cmp
sub
lahf
xchg
in
add
xchg
add
mov
das
sahf
sbb
push
add
aad
mov
fsubs
jg
xor
pop
cmpsl
insl
insb
hlt
sub
frstor
lahf
mov
rcl
lock
adc
stos
adc
jb
adc
jb
ja
jle
mov
xchg
fisttps
cmp
out
cmc
icebp
push
inc
mov
xchg
mov
xchg
xor
pop
cltd
sbb
mov
sub
xor
ljmp
cmp
bound
mov
fs
sub
xchg
or
sub
out
fmulp
push
xchg
and
mov
leave
sbb
out
or
lcall
xchg
in
ret
dec
call
fdivs
fistps
fidivl
iret
xor
sub
and
mov
fidivl
mov
and
and
add
dec
repz
lods
cs
adc
ljmp
add
or
pop
xchg
cltd
pop
cmc
adc
loopne
cmp
or
inc
and
lds
sbb
jmp
push
or
adc
push
pop
sub
jmp
nop
enter
nop
pushf
jle
loope
mov
mov
scas
loope
xchg
or
xchg
push
adc
sub
xchg
aam
mov
add
aad
inc
fidivrs
cmp
xchg
jns
call
fld
pop
mov
js
aam
sub
test
out
dec
jb
mov
xor
and
sti
pop
cld
les
stc
sbb
jmp
test
jle
sub
or
pop
shlb
push
add
push
pop
fcomp
mov
xchg
lea
pop
je
test
jae
rep
sbb
notb
out
and
pop
lea
pop
leave
popf
inc
fiaddl
mov
test
jne
decl
call
cmp
outsb
jge
pop
call
imul
adc
scas
clc
adc
pop
xchg
cmp
sarl
roll
cld
cmpsl
and
xor
jl
lea
pop
in
and
loope
mov
xor
inc
repnz
dec
mov
adc
mov
mov
xor
pusha
dec
sub
xlat
inc
xchg
mov
push
sbb
cmp
inc
mov
pop
cld
or
jmp
call
stc
inc
lret
mov
repnz
or
xchg
aaa
or
mull
pop
lret
inc
dec
test
hlt
mov
aam
out
and
pop
add
clc
and
fcompl
sub
clc
loop
inc
jl
inc
jge
mov
xor
dec
jle
cltd
insl
das
es
inc
nop
adc
sbb
in
cmp
mov
fistps
movsb
cmc
in
add
in
icebp
scas
lcall
icebp
cli
clc
jae
mov
jecxz
cmpsl
pop
out
push
mul
outsb
sti
cmp
out
push
iret
pop
lret
mov
xor
cmp
sub
out
jnp
das
mov
dec
inc
mov
sbb
insb
mov
aad
fwait
cmpb
leave
mov
stos
pop
mov
test
pop
jecxz
xchg
adc
xchg
pop
xlat
jnp
scas
pusha
push
jae
popa
js
faddl
jp
add
xchg
push
data16
shrb
or
pop
push
push
xchg
jo
sub
repz
add
pop
mov
fidivs
adc
loope
lock
lds
in
push
push
daa
je
fdivrl
sbb
sti
push
int3
daa
addr16
sub
pop
jmp
mul
cmp
lods
lahf
and
xchg
cmp
xchg
add
dec
loop
push
ss
addr16
sahf
or
shld
xor
dec
pop
or
std
daa
mov
push
dec
in
xchg
cmp
push
scas
inc
imul
movsb
xor
lods
cmp
xlat
shlb
adc
daa
sbb
jmp
dec
loopne
xchg
inc
fs
leave
cli
pop
cmp
dec
mov
mov
push
test
push
dec
and
pop
sub
dec
and
jmp
in
leave
jbe
or
xchg
mov
mov
and
push
jmp
pop
sbb
aaa
pop
popa
in
mov
lcall
or
and
jmp
push
jbe
and
sbb
dec
lret
jmp
outsl
inc
lret
pop
notl
movsb
int3
jb
insl
mov
dec
inc
pop
pop
iret
adc
push
les
insb
ss
js
negl
gs
std
ficoms
add
push
or
mov
push
js
mov
xor
cmpsb
dec
xor
mov
sub
lods
xorl
das
jbe
sarb
stos
cmp
xlat
push
arpl
sbb
lock
nop
jo
adc
mov
jle
xor
popf
push
and
andb
call
jnp
sbb
addb
xchg
lcall
jb
lock
clc
push
push
clc
into
push
adc
push
push
lea
addb
fcompl
in
pop
add
insl
std
or
xor
push
out
sub
sbb
pop
add
enter
dec
scas
dec
pop
xchg
mov
je
negb
clc
pop
dec
bound
jecxz
cld
push
lcall
push
inc
or
mov
push
das
jno
testl
mov
sbb
test
stc
in
sti
xchg
shlb
pop
push
xchg
xchg
ja
mov
dec
sub
mov
inc
test
mov
and
sbb
sub
push
stos
sub
push
push
pop
pop
cmp
scas
cmpsb
jmp
or
in
fdivrl
push
fisubrl
add
sbb
popa
or
jb
add
jnp
adc
and
icebp
shr
out
icebp
pop
sbb
sub
int3
andnps
mov
pop
je
xchg
fiadds
lods
adc
sub
pop
dec
ret
jle
add
data16
loopne
call
push
pop
rol
loop
aad
adc
sahf
in
clc
jl
and
jecxz
pop
dec
pop
push
iret
mov
scas
inc
shll
mov
jo
pushf
add
dec
adc
xchg
cmp
jnp
add
xor
push
xor
mov
leave
rcrl
stos
jl
sub
xchg
push
jo
icebp
in
lret
ds
cmp
ds
pop
ret
sti
pop
pusha
mov
or
out
adc
mov
shrl
jne
rcll
pop
cmp
stos
movsb
out
push
iret
pop
into
add
sub
sub
push
cli
data16
daa
popa
push
pop
fcomp
xchg
jo
out
cmp
hlt
fsub
adc
out
lds
xor
sbb
mov
shlb
mov
inc
xchg
lods
outsl
cltd
xlat
aad
leave
out
dec
pop
int
cmc
ret
push
xchg
cs
adc
jecxz
lahf
cld
rcll
bound
out
mov
xor
rcll
xchg
shrb
mull
push
or
push
sahf
jnp
adc
lret
cwtl
out
xor
add
sbb
mov
lock
jnp
jmp
andl
andl
popa
int3
es
out
hlt
sbb
pushf
mov
jae
inc
cmp
inc
mov
fs
bound
add
fs
bound
movsl
repnz
fsubr
mov
iret
icebp
mov
jno
push
jp
mov
adcb
ljmp
in
icebp
adc
and
fwait
ss
ret
cmpsb
aam
push
mov
cmovbe
in
pop
and
pop
adc
scas
sbb
mov
add
dec
push
jnp
push
mov
mov
hlt
rol
out
loop
jnp
or
dec
mov
mov
shlb
push
int
lcall
pop
or
inc
cmp
push
push
xor
push
add
cmp
cmp
rorb
mov
rcrl
cs
jle
popf
xor
jg
dec
stos
lcall
mov
inc
je
addr16
js
scas
movntq
rcll
sbb
mov
fisttpll
mov
imulb
data16
sub
sbb
cmp
sub
cmp
pop
movsl
jle
repnz
cmc
mov
mov
pop
scas
sbb
or
mov
jns
adc
stos
adc
loopne
loope
outsb
xchg
push
daa
mov
cs
pop
push
rcrb
adc
icebp
cmp
sbb
cmp
push
lcall
arpl
rdmsr
xchg
outsb
ud1
fwait
and
add
bound
mov
insl
and
sti
mov
fmuls
inc
mov
mov
and
mov
repnz
xchg
jecxz
mov
xlat
jae
push
push
ret
cmpb
cwtl
sti
mov
scas
add
les
and
cmp
jb
in
notl
fs
xchg
xchg
outsl
lods
or
dec
push
mov
push
mov
rolb
int
pop
inc
lahf
adc
jmp
cmp
pusha
mov
jmp
fdivl
xchg
sbb
and
js
sub
lahf
aam
jne
mov
pop
mov
cmp
das
pop
sbb
daa
in
clc
jb
iret
aad
rcr
jg
stos
pop
sub
mov
or
mov
mov
insb
movsb
or
shr
call
jle
call
ds
jbe
xchg
sub
fsts
mov
add
pop
and
lods
jg
dec
or
enter
sub
in
jne
jno
mov
js
sbb
lods
pop
or
scas
xor
xor
outsb
pop
jae
mov
dec
pop
in
scas
mov
mov
test
lahf
jmp
push
inc
movsl
call
ja
inc
popf
popf
fstl
dec
test
popa
mov
mov
or
fwait
int3
jno
ja
in
das
cwtl
scas
xor
mov
inc
loope
jae
lods
add
aas
sub
xor
push
dec
das
sub
jl
mov
in
out
pop
movsl
jp,pt
xchg
loopne
fsubrs
adc
popf
mov
or
loopne
repz
in
inc
je
mov
mov
out
mov
call
cmc
dec
sbb
daa
es
lcall
aaa
stc
inc
inc
aam
stc
sbb
cmp
jnp
dec
in
fdivr
and
cmp
shl
adc
loope
cltd
inc
inc
inc
jae
xorb
jnp
mov
lahf
aas
imul
mov
or
mov
out
xchg
pop
mov
jge
dec
sbb
push
or
dec
inc
mov
sub
addr16
mov
int
cmp
mov
add
xchg
aas
mov
cmp
fdivp
push
daa
jns
into
popf
loop
pop
jle
test
cmp
adc
push
add
fcoml
xchg
hlt
xor
fucomip
test
push
dec
add
pop
lock
push
cmc
jp
and
dec
out
sbb
pop
xlat
sarl
xor
pop
xchg
orl
les
jo
jmp
pusha
cmpsb
push
ljmp
sbb
add
cmpb
ficomps
scas
adc
lahf
push
pop
sbb
add
mov
xlat
fidivrl
cltd
add
inc
and
push
mov
xor
push
das
push
inc
shl
int
mov
movsb
inc
fwait
jnp
xlat
sbb
xor
es
or
addr16
pop
mov
push
cmp
outsl
int3
jne
ret
lahf
out
inc
sub
fimull
xchg
adc
incb
jbe
mov
sbb
fldt
pusha
jl
mov
cmp
jp
sbbb
sbb
pop
bound
nop
lods
scas
sarb
sbb
jae
les
push
xor
jmp
mov
int
push
adc
int
xchg
nop
mov
xlat
aam
std
cmpsl
enter
cld
sbb
xchg
movsl
sbb
mov
inc
jo
popa
imul
lahf
sahf
subl
cmpsl
inc
pop
cmp
lds
mov
mov
sub
stc
xchg
and
xchg
cmpsl
inc
ret
subl
hlt
stos
jo
xchg
and
test
jnp
lds
int
or
mov
inc
repnz
faddl
dec
icebp
cs
sub
xchg
sbb
andb
pcmpeqd
xchg
lods
push
andb
xlat
arpl
push
cld
sti
dec
xor
inc
push
pop
out
add
mov
inc
movsl
mov
sahf
mov
add
hlt
and
inc
xor
sub
js
out
andl
jp
pop
iret
jge
xchg
cmp
xchg
popa
or
je
in
sti
pop
cmc
mov
bound
mov
adc
push
roll
scas
cmp
cld
jl
xchg
mov
in
bound
out
popa
loop
mov
xchg
mov
push
jno
xor
popf
inc
lret
sbb
ds
nop
add
xchg
xor
outsb
mov
xor
outsb
jne
imul
jae
rcrl
ret
loop
movsb
and
mov
mov
sahf
jnp
call
mov
test
mov
xchg
jle
sete
xchg
or
test
xchg
xchg
rcrl
jb
pop
outsb
push
scas
sbb
test
jl
divl
fdivrs
sbb
scas
popf
inc
in
mov
data16
push
mov
sub
lret
inc
das
nop
pusha
sarb
mov
ret
xor
xor
sbb
jno
andl
pop
imul
cli
subb
push
mov
sbb
cli
divb
xlat
int
xorb
loopne
cltd
dec
xchg
sbb
pop
test
int3
loop
sub
jmp
add
pop
adc
sbb
mov
mov
inc
insl
loop
mov
jnp
mov
stos
daa
cmp
xchg
adc
dec
cmc
cmp
jmp
mov
cs
idiv
js
sbb
mov
adc
fstps
add
inc
pop
es
xor
clc
mov
and
es
mov
mov
ljmp
aad
push
shll
sbb
jg
adc
test
adc
jp
jl
cmpsb
mov
daa
jb
inc
cmpsl
repz
cmp
dec
jns
jecxz
test
subb
and
push
ja
mov
xchg
movsb
dec
inc
mov
xor
xlat
dec
and
mov
dec
addr16
xor
dec
flds
lahf
jp
in
pop
cltd
outsb
pop
or
addr16
xchg
pop
push
mov
adc
push
ds
orb
call
push
adcb
popf
cmp
sbb
insl
aam
icebp
mov
and
and
mov
push
xchg
sbb
mov
inc
cwtl
or
scas
pop
out
leave
sub
out
or
sbb
addr16
lcall
mov
lcall
in
or
outsl
out
lods
adc
dec
and
loop
pop
imul
das
mov
loop
sbb
add
ja
repnz
imul
add
pusha
push
aad
lret
daa
out
mov
rorl
std
out
or
xchg
out
test
inc
out
push
mov
nop
add
imulb
jns
lods
mov
sbb
mov
ja
dec
adc
dec
fstp
rcr
push
add
jle
jge
ljmp
mov
faddl
mov
jne
repnz
cmpl
or
andb
sahf
jns
mov
inc
adc
jno
jge
mov
inc
aam
sub
xor
daa
or
push
xchg
popa
fldcw
inc
jne
ret
mov
fisubl
xchg
adc
shl
fcoms
mov
mov
mov
push
cmp
adc
clc
mov
decl
inc
xlat
popa
andb
lea
fstps
jle
push
aam
dec
fwait
push
je
jle
inc
cmp
loope
dec
stos
pop
adc
adc
jne
add
push
add
xor
push
and
add
in
mov
add
jle
out
or
cmp
subb
pushf
xor
push
imul
jmp
cmp
pop
inc
mov
pushf
addr16
add
mov
fwait
roll
or
jne
popa
xor
xchg
add
xchg
mov
mov
push
inc
push
jns
or
sbb
and
shll
add
adc
push
aas
dec
inc
sub
aas
sub
jl
sti
mov
scas
sub
ljmp
fwait
cli
sbb
pop
mov
sbb
insl
mov
jbe
daa
mov
mov
addr16
jecxz
shll
and
test
cmp
aam
pop
sti
mov
cmp
jnp
sub
fwait
xorl
dec
mov
or
jne
test
inc
cmp
mov
dec
imul
ss
jge
mov
aad
dec
pop
outsb
mov
mov
mov
mov
daa
sbb
adc
mov
xchg
out
cmp
ja
xchg
mov
pusha
or
add
les
jo
sub
mov
cmp
inc
sub
jae
mov
pop
inc
adc
add
idivl
mov
mov
xchg
sbb
js
js
imul
mov
fs
xchg
sbb
xor
imul
pop
stos
fadd
mov
pop
std
andl
and
adc
xchg
daa
frstor
aad
pusha
mov
adcb
pop
inc
popf
js
and
imulb
adc
push
jmp
jecxz
dec
ficomps
dec
icebp
pop
xchg
xor
mov
enter
out
dec
sbb
add
mov
push
dec
sbb
dec
sbb
lahf
sbb
adcl
mov
jg
fdivl
xchg
pop
inc
fwait
cmp
loop
xor
xchg
jnp
outsb
arpl
sub
cli
inc
lds
stos
fcmovnu
add
or
lock
pop
or
sbb
sub
rclb
mov
sbb
xchg
adc
stc
add
shlb
jo
insl
add
pop
adc
adc
adc
push
sub
push
sahf
mov
shl
loopne
push
lods
mov
and
jb
insl
cltd
popf
jge
test
pop
mov
je
sub
add
sti
inc
mov
dec
pop
jl
outsb
aad
push
pop
loop
cmpsl
es
jbe
enter
in
adc
icebp
insb
sbb
pop
pop
sbb
popa
or
shll
mov
movsl
pop
hlt
mov
lods
cbtw
xor
out
cmp
jns
and
or
mov
das
jae
scas
mov
fcmovb
js
jp
xchg
out
inc
out
mul
xchg
in
shll
inc
lcall
pop
jb
xchg
movsb
fdivp
add
xor
jge
repnz
add
js
aam
testb
add
pop
push
test
outsl
stos
mov
mov
pop
xor
dec
sbb
jp
xor
jno
cld
mov
and
xchg
mov
sub
mov
loop
mov
jg
or
ret
dec
mov
push
add
mov
mov
scas
addl
divb
repz
insb
mov
dec
sbb
sarb
into
sahf
pushf
out
imul
int
stos
or
pop
and
fisttpll
int3
js
imul
mov
pop
rcrb
cld
outsl
movsl
sub
or
addr16
aam
mov
mov
pop
xchg
or
push
inc
clc
leave
lahf
pop
mov
fwait
xchg
decb
sbb
sar
outsb
xchg
iret
notl
jb
and
pop
pop
fldl
push
pop
loop
adc
push
pop
cmpsb
mov
idivb
inc
aam
sbb
lret
mov
inc
xchg
push
jno
push
and
and
ret
sbb
test
push
test
loopne
enter
loop
loope
fxch
xchg
popa
aad
jmp
cmc
mov
sar
imul
push
movsb
mov
pop
mov
stos
repz
jbe
jns
inc
lods
out
lea
push
ror
gs
outsb
mov
cwtl
cmp
sarl
aam
fs
mov
push
sub
ret
xor
jo
mov
rcll
jmp
in
int
mov
mov
daa
pop
and
push
dec
cmp
xchg
ret
lock
mov
lds
cltd
lock
push
mov
add
bound
push
imul
cli
loop
outsb
sti
js
dec
pop
pushf
bound
jnp
adc
test
fistps
dec
stos
jmp
push
lret
ljmp
ss
pop
and
shll
push
xchg
std
out
push
or
and
jns
ret
mov
adc
lds
enter
sahf
clc
arpl
rorb
jo
popf
jp
cmp
push
shl
jge
std
dec
int
rcrb
jle
inc
negb
jo
mov
lahf
testl
movsb
ss
ds
push
cwtl
or
add
and
ret
imul
das
jmp
incl
mov
aam
pusha
pop
push
shlb
mov
pop
add
and
not
fwait
aas
test
lds
and
jle
and
fld
mov
cmp
lods
adc
frstor
lea
xchg
out
das
iret
adc
xchg
or
test
cmpl
decl
push
aas
xchg
pop
inc
insb
shlb
roll
imul
rorb
lock
gs
ja
int
dec
addr16
add
dec
add
and
insl
mov
xchg
pop
nop
xchg
sbb
pushf
loop
fs
loop
jns
lods
clc
add
mov
cmp
jbe
jbe
fwait
jp
jne
cwtl
loope
push
loope
scas
sahf
and
push
sti
roll
fdivl
mov
pop
nop
repnz
pop
xor
inc
imul
mov
or
sahf
pusha
mov
popa
addb
ret
dec
push
std
ljmp
out
lret
xchg
fwait
sub
push
insb
xchg
xchg
notb
mov
fidivrl
hlt
and
push
pop
aam
mov
xchg
daa
jae
into
ror
scas
mull
cmp
mov
dec
sbb
imul
push
mov
mov
mov
push
aaa
in
jecxz
mov
lods
sbb
test
mov
in
sti
inc
mov
orl
bound
aad
xchg
cmp
jp
pop
addl
mov
mov
sti
test
jo
dec
fistpll
pop
xor
insb
jp
xor
or
sub
test
fsubrp
shl
jo
add
rcrb
std
jl
sub
mov
sbb
push
inc
sahf
sub
mov
cmp
bound
pop
pop
dec
adc
push
decb
nop
movsb
test
mov
jecxz
mov
mov
cwtl
into
push
int
adc
cmpsl
stc
std
cmp
mov
imul
ret
js
mov
and
push
pop
dec
mov
jmp
sahf
jne
fcompl
mov
jg
push
sbb
insb
push
dec
fneni(8087
lret
clc
bound
pop
lods
repnz
data16
loop
adc
jo
add
leave
jo
xor
ja
xchg
add
sub
aam
mov
mov
mov
lahf
movsb
jne
adc
insl
push
testl
into
xchg
sub
icebp
pop
es
sbb
push
dec
jge
push
int3
cmpl
mov
aad
push
or
jnp
push
das
or
in
cwtl
cs
adcb
jl
int3
pop
fisttpll
xchg
mov
stos
in
icebp
fcoml
sub
jl
ds
sbb
sahf
jns
ds
nop
push
ret
xor
xor
xchg
jmp
jp
dec
push
mov
lock
jne
sub
inc
or
fwait
mov
stc
add
sbb
add
mov
jno
mov
mov
loopne
adc
push
rorl
lods
aad
inc
push
arpl
nop
xchg
and
dec
pop
fld
lahf
shlb
cmp
cmc
add
mov
aam
mov
adc
test
jmp
mov
cmc
push
pop
test
cld
clc
mov
adc
jns
mov
bnd
idivl
xor
call
fnstcw
out
jle
loop
cmc
pop
aaa
inc
or
addb
adc
and
push
leave
mov
mov
fs
loope
mov
adc
neg
insb
ds
fsubs
jbe
cmp
ljmp
and
push
lods
arpl
xchg
and
xchg
pop
insb
unpcklps
cmpsb
cs
cwtl
and
add
xor
add
mov
push
int3
movsb
ud0
sti
call
sbb
xchg
or
sub
fwait
or
sbb
subb
xor
lods
cmp
into
fsubrs
cs
inc
dec
sti
dec
sub
cwtl
cmpsl
inc
dec
add
lock
aad
xchg
cmpsl
les
mov
fsts
pop
push
in
out
jns
nop
popa
lock
mov
imul
aaa
insb
data16
jmp
imul
pop
xchg
aam
popf
addr16
mov
sbb
and
bound
mov
push
out
pushf
mov
sub
pop
ret
rcl
xchg
nop
inc
out
ljmp
sbb
jnp
sub
les
aad
inc
mov
loopne
jle
jecxz
lock
enter
test
test
imul
xorb
mov
push
xchg
je
pop
lods
cmp
inc
sbb
cmp
scas
int
les
outsb
and
fsubrs
cmc
ds
mov
call
jle
or
jle
adc
shl
add
pop
or
lods
mov
pand
pop
lods
inc
enter
sbb
sbb
add
dec
push
xchg
push
adc
push
in
mov
sub
adc
test
xlat
sti
fstps
mov
ds
icebp
in
mov
mov
jnp
and
enter
mov
push
scas
sahf
dec
add
insb
call
fwait
mov
jg
mov
test
iret
shll
test
mov
adc
out
jne
xchg
addb
shlb
mov
mov
das
mov
mov
or
push
mov
jbe
mov
sbb
jl
adc
inc
dec
mov
or
mov
and
mov
nop
jbe
mov
or
jnp
fildl
out
insb
in
jno
or
loope
sub
aaa
fs
loopne
mov
inc
jge
jl
mov
nop
pop
inc
rcr
call
sub
les
sub
fs
xchg
sub
arpl
stos
divl
stos
pop
popa
in
lock
ss
cmp
addr16
or
jne
sbb
cmp
lahf
je
pop
jmp
or
push
xchg
shll
sub
pop
fbld
dec
rorb
mov
mov
ficoml
push
pop
push
sbb
fstps
xchg
and
xchg
cs
ja
cmpsb
js
roll
data16
mov
jmp
or
notb
adc
rorb
jbe
push
hlt
arpl
fwait
inc
or
xor
hlt
and
or
cltd
mov
mov
xchg
repnz
hlt
mov
mov
adcl
dec
sahf
mov
pop
or
rcrl
or
ds
pop
pop
and
jg
in
jne
jge
push
js
out
sti
and
or
mov
pop
out
movsl
dec
ret
and
ja
pop
mov
out
repz
dec
ljmp
push
leave
or
pop
cmc
mov
mov
push
xchg
andl
xchg
mov
fcom
mov
push
loop
inc
call
insb
pop
js
push
and
and
xchg
sub
jne
das
movsb
or
repz
jns
fdivl
adcl
xchg
sub
fisubrs
jge
adc
xor
xor
mov
outsb
xor
mov
jne
dec
inc
pop
jb
push
cmp
in
fcomip
adc
sbb
insl
popf
scas
sub
cs
dec
lahf
jmp
hlt
xchg
pusha
sti
add
into
loopne
and
sbb
add
xor
mov
sbb
sti
test
arpl
gs
or
mov
push
mov
in
mov
int3
inc
lods
idivb
push
add
jns
sub
mov
and
out
dec
mov
lret
sbb
fs
decb
lret
push
bound
out
ljmp
xchg
sub
outsl
sbb
outsb
jmp
push
xor
or
je
inc
test
add
cmp
jecxz
das
pop
mov
push
mov
stos
in
dec
ret
inc
dec
push
push
icebp
ds
adc
mov
sarl
imul
insb
or
cs
mov
shrb
hlt
push
subb
cmp
rol
cmp
das
xchg
xchg
fs
dec
add
inc
jbe
out
shlb
fwait
sbb
jnp
push
mov
shr
adc
incl
inc
cmp
xchg
aam
dec
in
lret
daa
dec
push
add
rolb
push
int
lods
pushf
daa
int
and
and
clc
cmp
in
pop
mov
icebp
mov
mov
xchg
jp
fistpll
cmp
add
mov
add
sbb
cltd
pushf
dec
mov
and
je
sbb
nop
repz
jb
test
push
or
scas
xor
cltd
mov
mov
dec
or
cmpsb
cmp
pop
cld
daa
cmpsb
mov
dec
pop
xchg
add
lret
fs
mov
int3
out
jbe
fnstsw
movsl
lods
insb
repz
fisttpll
in
push
dec
cmp
pop
push
out
jnp
bound
shll
mov
lds
test
dec
push
rcrb
js
lret
int3
int
mov
push
mov
popa
aas
xchg
ret
mov
push
mov
adc
or
jnp
imul
in
push
cmp
lret
xchg
xchg
ja
fists
lods
movsb
lds
rclb
jne
or
adc
fs
inc
ss
fst
sbb
adc
add
jno
out
icebp
cltd
lods
mov
adc
and
std
jbe
daa
imul
jle
mov
push
imull
inc
push
xor
push
test
push
cmp
daa
dec
cmp
adc
lock
mov
dec
xorb
into
cmpsb
and
insl
xchg
inc
jl
inc
lahf
pop
pop
rcll
mov
clc
les
mov
and
mov
fwait
into
mov
mov
mov
xchg
jbe
sub
or
mov
ja
data16
sar
jl
clc
cltd
jo
fidivrs
and
int3
adc
add
pop
jns
dec
addr16
out
daa
jno
jns
icebp
mov
mov
cmc
fs
js
mov
pop
in
iret
lahf
push
cmp
pushf
and
xchg
xchg
out
inc
mov
bound
test
jne
jg
xor
mov
dec
bnd
repnz
add
movsl
incl
cld
ds
pop
xchg
shlb
or
daa
inc
mov
jmp
dec
in
lock
ja
mov
push
inc
nop
push
lret
push
pop
inc
mov
push
and
fstpl
je
jp
nop
xchg
ja
jbe
daa
insb
mov
jmp
or
stc
movsl
pop
mov
mov
sub
cwtl
das
imul
sub
in
outsb
test
jnp
dec
call
and
pop
scas
pop
or
dec
mov
mov
add
dec
adc
call
jp
fldcw
inc
push
imul
cltd
ds
aaa
rcr
out
loop
out
and
mov
push
push
dec
leave
sar
inc
ljmp
movsb
mov
or
js
adc
mov
mov
pop
into
popa
insl
shl
adc
mov
mov
movsb
jecxz
sbb
test
rol
idivl
push
in
pop
lcall
xor
xor
mov
xchg
mov
mov
sti
dec
sub
lds
mov
inc
ds
push
mov
aad
cmp
mov
scas
hlt
pop
xor
add
or
lods
jmp
dec
lods
xchg
out
les
push
inc
xor
and
fisttpll
lcall
les
inc
and
jmp
lret
sub
gs
fnstcw
mov
jp
cmp
dec
in
adc
cmp
pop
stc
pop
in
pushf
fwait
cli
add
fisubrs
scas
pop
push
in
sub
lcall
pop
add
gs
push
lcall
dec
das
in
push
repz
call
xchg
adc
jg
cmp
in
xlat
jb
adc
and
sbb
mov
cli
test
sub
lret
in
xchg
pop
cmpsb
or
sbb
fst
xchg
jl
cmp
push
jp
mov
fwait
movsb
rcrb
jle
adc
push
loopne
in
jle
out
shlb
out
les
mov
and
pop
inc
pop
inc
lret
xor
mov
int3
jg
aad
cli
sbb
cs
push
movsb
rcll
mov
pop
sar
movsl
mov
dec
xor
adc
sbb
dec
inc
jne
add
test
mov
cmp
pop
repnz
dec
gs
jns
xchg
movsl
es
aas
je
mov
or
les
mov
pop
pop
adc
mov
mov
push
xchg
add
sbb
ficoml
jb
loop
and
sbb
jns
sbb
inc
sti
mov
sarl
cs
cmp
sbbb
mov
xor
mov
push
xlat
loopne
cmp
push
pop
and
mov
sbb
push
cmc
dec
hlt
inc
and
arpl
and
int
add
ja
adc
popl
or
add
jle
in
idivl
iret
enter
dec
pop
push
lcall
dec
call
cld
or
add
lock
sub
ret
push
jle
lods
mov
dec
mov
mov
push
inc
insb
loopne
and
test
push
xchg
lods
ljmp
xchg
aaa
mov
xor
sbb
sarb
jmp
mov
sub
cmc
lock
rcr
mov
lods
sti
dec
inc
gs
push
jnp
dec
push
out
mov
fistpll
add
xchg
fsts
cld
testl
ljmp
jle
stc
xchg
pusha
jae
out
sbb
cmp
sbb
jp
lahf
add
xlat
sahf
int3
sbb
mov
add
adc
test
jbe
push
shrb
xor
push
add
adc
dec
and
jae
pop
aas
std
aaa
mov
xchg
cmpsb
mov
lcall
jg
fnsave
push
pop
cmp
gs
scas
dec
lret
lods
and
dec
into
xchg
sarb
pop
sarb
or
push
fsub
jb
pop
pop
jg
jl
ja
mov
clc
pop
aaa
icebp
cwtl
mov
sub
scas
js
inc
pop
loopne
inc
aam
lock
adc
push
sbb
cmpsl
mov
mov
jp
mov
int
hlt
out
call
clc
aaa
mov
int3
hlt
addr16
xchg
lods
daa
repz
xor
sbb
orb
push
fbld
ret
adcb
out
fs
xchg
scas
dec
js
fwait
dec
in
insl
shl
push
pop
mov
and
push
push
lods
jae
fs
mov
pop
or
and
repz
pusha
outsl
icebp
scas
or
sbb
incb
es
dec
fstpl
push
or
ds
jb
aad
or
int3
pusha
cwtl
xchg
mov
sub
inc
adc
sub
sbb
fiaddl
movsl
loope
mov
repz
ret
add
fisttpl
rcrb
dec
sbb
sbb
jnp
sti
decl
inc
jecxz
push
dec
or
fnstenv
jae
mov
and
cltd
cs
nop
data16
sbb
movsl
pop
js
push
ret
xor
mov
mov
dec
fadds
ret
pop
mov
mov
pop
pop
stos
mov
pop
xor
gs
and
push
or
stos
xor
or
das
jle
jb
aaa
and
rorl
push
sub
sub
mov
add
pop
test
adc
pop
pusha
push
mov
imulb
dec
mov
sbb
cmc
clc
push
cli
test
in
or
enter
int
adcl
mov
lret
pop
dec
push
xor
cmp
dec
jge
lahf
jne
movq
movsl
call
js
lods
outsl
adc
pop
mov
cmp
xchg
mov
mov
js
imul
fldt
mov
lds
cmp
cmp
cmpsb
hlt
loopne
inc
xchg
outsl
push
xor
sub
sub
in
pop
push
xchg
sub
cld
ds
mov
into
daa
fstpt
mov
movl
mov
imul
push
stos
dec
jnp
push
aas
gs
add
and
cmp
inc
cmc
add
mov
cmp
pop
jbe
mov
and
test
jp
test
cli
and
pop
in
mov
stos
mov
dec
cmc
inc
fisubs
inc
push
les
sub
pop
cltd
cmp
cmp
outsb
in
loop
icebp
icebp
or
or
lahf
mov
fbstp
xchg
js
mov
into
mov
sub
xchg
test
outsl
mov
gs
sahf
pop
hlt
repz
and
movsb
rcrl
fisubl
pop
jnp
xor
xlat
mov
mov
mov
insb
lret
and
iret
leave
sub
jmp
call
clc
sbb
mov
pusha
sbb
mov
inc
int3
pusha
test
sbb
std
mov
add
in
sub
stos
pop
adc
shll
or
mov
and
jge
cli
push
xor
jb
sub
outsb
cli
mov
add
xchg
adcb
shll
jbe
push
cmpsl
mov
popa
std
mov
nop
add
sub
jo
nop
xor
fiadds
mov
clc
jmp
fwait
pop
sub
movsl
jg
sub
mov
call
imul
aaa
cmp
out
rcll
push
sbb
pop
sbb
mov
dec
and
sahf
and
int
popf
and
push
fisubrs
ds
inc
push
mov
aad
subl
aad
leave
cmc
cs
dec
push
iret
testl
push
sub
clc
popf
fs
call
or
jmp
lock
xchg
ds
add
sub
xor
scas
cmp
faddl
or
je
pop
mov
cs
sbb
inc
lahf
pop
jecxz
std
add
xor
into
in
xchg
ret
lret
shlb
call
mov
imul
add
sub
stos
pop
mov
mov
outsl
jecxz
psrlw
dec
pop
rdpmc
scas
sbb
dec
loope
lods
xchg
push
sbb
add
jle
int
icebp
cwtl
add
shr
sbb
xchg
pop
pop
rcl
sbb
push
lret
dec
jp
nop
push
jnp
xor
cli
inc
pop
jnp
imul
cli
add
mov
adc
mov
nop
shlb
jnp
jg
jl
shl
xor
out
inc
push
mov
lcall
stos
test
cmp
mov
clc
xor
xor
adc
add
scas
sub
push
repz
add
adc
fs
outsl
cmpsb
or
or
inc
test
repz
dec
pop
fcomps
push
pop
loop
xchg
xlat
repnz
iret
sahf
mov
test
sub
xchg
inc
pop
lret
xor
or
dec
mov
data16
jp
cmp
inc
push
pop
in
subl
outsl
fstl
sbb
push
outsl
ljmp
dec
cmpsb
sub
xor
aad
mov
call
pop
xor
lea
fcomp
and
dec
decl
in
xor
push
hlt
cmp
arpl
inc
mov
add
pop
inc
loopne
mov
mov
add
mov
out
pop
jmp
cmp
aas
sub
neg
adc
fcomi
test
push
jae
dec
add
iret
je
popa
push
test
les
pop
mov
repnz
ja
es
push
movsl
into
mov
loopne
mov
push
pushf
rolb
cmp
lcall
daa
jae
mov
ljmp
cwtl
gs
repnz
imul
jmp
xchg
loopne
sub
iret
shrl
aaa
adc
bound
int3
pop
and
stc
or
jle
ffreep
pop
jge
push
js
pop
dec
mov
or
mov
ljmp
test
lods
push
mov
lahf
std
pop
jge
pop
adc
dec
leave
jbe
and
and
xchg
or
and
xchg
push
add
or
les
mov
dec
lds
xor
cmc
adc
rcll
das
movsb
test
mov
cltd
add
pop
sarl
fwait
nop
or
sbb
inc
fdivrp
out
fsubs
orl
mov
xchg
and
xor
cmpsb
scas
sub
dec
mov
jns
cmpb
out
push
add
inc
inc
sarw
xchg
movsb
aam
sub
pop
test
add
in
in
cltd
pushf
xchg
pop
sub
lahf
mov
xchg
scas
inc
mov
cmp
dec
pusha
adc
cmc
lret
or
or
sbb
xchg
sub
fnsave
push
pop
mov
or
fs
std
nop
mov
mov
jno
and
test
scas
idivb
add
jl
mov
addl
lea
jl
mov
mov
jp
lods
jg
dec
jecxz
lods
shll
adc
push
test
in
mov
xchg
data16
add
filds
sbb
mov
or
call
xchg
pusha
jne
mov
sarl
lds
add
dec
dec
sbb
xor
stos
xchg
xchg
subl
cmpsl
adc
jne
cmp
inc
add
mov
sub
addr16
xor
jb
nop
add
dec
inc
mov
in
inc
sbb
or
andb
data16
mov
cli
add
jno
mov
out
jle
and
int
pop
je
sub
scas
aaa
popf
mov
jp
lret
movsl
add
mov
jae
xor
mov
xor
out
clc
out
inc
out
ret
jecxz
and
in
lds
nop
out
shlb
aad
lods
sub
xor
inc
int3
jecxz
and
rcll
out
cmp
xor
insl
call
lret
sub
adc
jnp
xor
push
cmpsb
jne
cmpb
es
mov
test
jbe
mov
pop
jmp
dec
jbe
pop
jns
jp
bound
stos
mov
jns
imul
mov
or
addr16
clc
cs
nop
cmp
stc
xchg
push
lret
popa
xor
icebp
cli
subl
mov
stos
push
fidivrs
filds
insb
jmp
xor
cmc
jno
jge
fiaddl
push
push
pop
ss
mov
loopne
jno
dec
sbb
stc
mov
dec
test
ss
fcoml
popf
test
rorb
dec
out
push
mov
add
push
xor
fisttpl
pop
xor
out
into
pop
xchg
stos
rorl
popa
dec
pop
shl
testb
outsl
insb
push
push
jbe
pop
push
std
mov
mov
call
fidivrl
push
sub
mov
cmp
fsubrs
or
mov
add
inc
sbb
bound
pop
and
sbb
pusha
pop
repnz
pushf
or
cmp
xlat
pop
sbb
testb
push
inc
push
push
enter
arpl
rcl
xor
adc
mov
pushf
mov
ja
cmp
mov
addl
xchg
int3
iret
push
clc
dec
push
push
mov
test
push
push
pop
add
lds
add
ret
les
test
and
je
jb
cmp
movsl
adc
je
inc
lahf
aas
mov
cltd
jp
xchg
jp
js
mov
in
lahf
xchg
add
hlt
lahf
roll
movsl
dec
fcmovu
test
add
xchg
mov
mov
lahf
fistps
popf
int
sub
clc
fistpl
lock
pusha
out
cwtl
and
fmuls
pushf
push
push
sbb
enter
in
movsl
inc
mov
imul
ljmp
aas
fwait
fadd
xor
add
xor
xchg
add
into
pop
mov
jbe
popf
in
inc
cltd
cs
or
test
cltd
mov
outsb
sub
jbe
xchg
shlb
fcoml
mov
pop
mov
dec
mov
dec
mov
nop
scas
lods
sbb
mov
cmp
mov
and
mov
sarl
xor
arpl
stos
push
mov
les
out
sub
push
pop
movsb
fldcw
push
sbb
mov
pop
mov
mov
add
arpl
add
imul
daa
cmpsb
loop
stos
clc
dec
xor
or
fcoms
sbb
inc
rorb
stos
cmp
dec
pushf
inc
in
stos
push
mov
int
sbb
push
lock
jno
sub
out
adc
loopne
mov
sub
cmp
adc
lahf
test
xor
std
sti
sbb
xlat
in
mov
jne
fisttps
inc
dec
test
sarb
sub
js
addr16
inc
xlat
push
and
popa
fistpll
jg
mov
sub
bound
ljmp
cwtl
ficompl
loop
dec
nop
pop
outsb
scas
mov
shll
push
push
adc
xor
adc
inc
mov
mov
insb
jns
inc
aad
add
sub
ss
and
test
mov
in
push
inc
mov
jecxz
ja
scas
jg
jmp
scas
clc
loope
sub
push
and
ret
jg
shrl
jle
dec
mov
shll
int
or
inc
movsb
popf
mov
int3
jmp
sub
xchg
test
and
imul
hlt
xor
ja
mov
rcll
inc
andb
scas
into
adc
lret
addb
xchg
inc
lds
aas
mov
lods
and
out
daa
in
pop
cld
mov
cld
or
pop
dec
aaa
pushf
xchg
sbb
inc
in
or
adc
outsl
xor
jb
mov
call
dec
inc
xchg
js
rep
add
pusha
loop
shll
int
dec
add
imul
out
mov
nop
cwtl
jo
cli
sbb
fbstp
sbb
inc
rcl
push
test
fsubs
cmp
out
or
in
ret
gs
jecxz
imul
pusha
xchg
mov
fwait
add
sbb
jmp
je
scas
xchg
push
into
xchg
adc
and
mov
int3
mov
jge
adc
push
mov
cltd
pop
sti
adc
xchg
jb
sub
xchg
push
and
pop
bound
lods
loopne
mov
or
inc
mov
ss
sub
arpl
cmp
cmc
scas
rcl
shrl
fists
mov
aam
pushl
push
xchg
sbb
insl
clc
mov
mov
imul
add
xchg
leave
ljmp
cwtl
imul
push
bound
inc
bnd
xor
cmp
pop
stos
xor
push
jge
cmp
mov
frstor
mov
mov
stos
insb
jl
ds
loop
movsl
add
sbb
dec
inc
pop
or
dec
cltd
mov
jno
xchg
adc
mov
stos
stos
fistpll
mov
pop
inc
cs
cld
sbbl
mov
int3
imul
jle
into
or
rcll
neg
cmp
push
cmp
aam
mov
out
xchg
xor
jge
test
test
jae
in
lcall
dec
aas
shll
lahf
ja
xor
jmp
xor
pop
xchg
jo
or
in
js
fstpl
shr
sub
mov
in
pop
and
loope
bound
mov
enter
push
cmp
je
out
and
fisubs
clc
loope
push
je
pop
sbb
pop
mov
test
push
xor
xor
sbb
adc
mov
mov
xor
fnstsw
push
mov
push
xor
xor
push
dec
dec
add
js
push
xor
shlb
test
mov
dec
adc
sti
fcompl
mov
adc
sub
repz
test
jg
js
mov
xlat
cli
cmp
and
out
aaa
xlat
shr
jp
inc
xchg
psubw
les
push
adc
mov
or
sbb
test
rorb
mov
push
lods
shlb
xchg
add
xor
repz
divb
jnp
out
adc
rcrl
test
andl
sbb
out
dec
loopne
push
add
insl
lret
xchg
add
mov
mov
sub
inc
loop
pop
fstpl
mov
pop
fisubrs
test
clc
pusha
inc
fiadds
push
cmp
xor
stos
sbbl
cwtl
sub
push
sub
mul
cmc
cwtl
es
lods
sbb
ds
roll
mov
push
je
sbb
sbb
aam
iret
jne
arpl
hlt
ds
loop
push
jg
das
jl
les
sbb
ljmp
sub
ret
test
push
aas
sub
in
cmp
pop
mov
mov
sub
pop
cmpb
nop
inc
loope
cmc
addr16
push
xor
add
lods
dec
pop
pop
or
out
mov
loopne
dec
fistl
push
jl
cmp
ss
mov
add
and
add
ss
mov
aad
lods
js
in
lret
out
and
jns
pop
pop
int
movsl
xchg
jnp
mov
pushf
loopne
pop
sub
mov
ljmp
sub
loop
and
lods
mov
data16
and
nop
rcl
mov
inc
pop
gs
pop
and
adc
sub
inc
xchg
mov
add
mov
lea
jp
aaa
fwait
hlt
out
dec
sbb
adc
inc
push
jno
testb
aam
push
mov
movsl
lds
adc
xchg
ds
inc
lahf
mov
adc
sbb
and
rsm
mov
xor
sbbl
fsubrs
jecxz
mov
sbb
sub
cmp
jmp
jae
jle
push
xchg
aas
jbe
xchg
in
add
cmc
sbb
imul
rcll
pop
bound
and
out
jmp
clc
cmpsb
fbld
jno
nop
jp
popf
fmuls
inc
add
sbbl
xchg
dec
or
movsb
lock
out
push
test
mov
cmp
movsb
sahf
xlat
inc
lods
imul
jae
jle
movsb
pop
sub
outsb
xchg
fists
call
pop
lods
int
lea
and
xor
test
orb
shr
out
xchg
add
push
out
adc
dec
jmp
fnstenv
test
movl
dec
adc
js
pop
push
popa
pop
jb
jno
test
mov
in
pushw
fildl
and
dec
fwait
std
sub
sub
lret
jle
xor
xchg
ds
push
call
addr16
add
sub
and
push
fbstp
scas
adc
mov
cmp
mov
pop
pusha
inc
mov
mov
mov
cmp
adc
cmc
xchg
mov
sub
das
jb
jbe
push
xchg
mov
lods
cmp
test
rcrl
stos
pop
in
or
addr16
enter
pop
cltd
cmpsl
aad
pop
stc
dec
insl
mov
mov
imul
mov
jns
aad
jbe
mov
xor
gs
pop
and
ss
repnz
mov
or
xor
aad
push
stos
push
out
cli
lcall
jmp
jle
cmp
sbb
dec
push
insl
mov
cmp
mov
adc
sub
loope
add
sbb
jmp
or
pop
mov
int
push
cmp
sub
jmp
lods
sub
mov
jmp
gs
jg
fdivrl
dec
push
les
std
dec
das
pop
es
mov
jns
nop
or
aam
jecxz
repz
xchg
mov
mov
cmc
sbb
inc
popa
sub
or
cmpsb
add
cmpsb
ja
sub
and
cmp
rcll
leave
arpl
lods
mov
mov
cwtl
mov
fadd
pop
sahf
xchg
adc
in
jns
aad
inc
insb
mov
mov
test
rcll
pop
jae
mov
push
add
rorl
stc
push
sub
sub
inc
and
jbe
sbb
jnp
cld
pop
or
fdivr
test
xor
dec
scas
add
xor
jo
popa
sub
pop
aad
pop
mov
dec
mov
jnp
imul
jge
lods
outsl
leave
xchg
test
movsb
cwtl
add
lcall
cld
cmp
lahf
jg
jb
mov
dec
and
pop
push
jnp
js
call
sbb
popa
fcomps
rolb
in
jnp
mov
and
js
fisttps
push
adc
inc
sbbl
pop
fdivl
push
and
xor
cmp
cmpsl
xor
imul
add
sbbb
mul
mov
mov
movsb
aad
jne
add
and
or
dec
mov
cmp
lea
ret
cltd
emms
push
fcmovb
xchg
ret
insb
je
es
fiaddl
pusha
mov
outsb
xor
jecxz
inc
add
sti
sbb
sub
sti
jl
or
sub
jno
jbe
cwtl
lea
mov
xor
add
fs
fldenv
lahf
ljmp
xchg
xor
nop
icebp
mov
out
repnz
adc
or
cmp
mov
or
cltd
imul
cld
into
sbb
mov
add
dec
mov
orps
pop
fwait
mov
mov
shll
adc
adc
in
lret
push
cltd
and
add
gs
dec
enter
cmpsb
pop
popa
mov
push
imul
cmpsb
hlt
cmc
pushf
fiadds
ret
adc
stos
jl
pusha
inc
jg
cmpsl
pusha
movl
push
jae
mov
xor
dec
inc
stos
pop
cwtl
add
mov
out
cmp
mov
jns
insb
or
pop
adc
stos
fldt
and
loopne
cs
outsl
lods
test
daa
dec
fsubl
cmp
cmc
and
mov
stos
xor
add
orb
pop
and
push
cmpsl
insl
mov
cmpsb
xchg
fldenv
jle
mov
leave
arpl
loope
xchg
in
or
sub
in
sti
incl
mov
xor
imul
int
cmpsl
mov
push
sub
and
mov
inc
sbb
out
cld
aaa
in
dec
mulb
push
ss
sub
push
movb
movsl
pop
and
insl
fidivs
push
xlat
mov
std
out
call
xor
fists
jo
lahf
or
inc
inc
mov
xchg
mov
subl
daa
cmp
pop
mov
sahf
dec
popa
fs
fmull
mov
add
stc
pop
mov
sbb
jns
jno
fwait
pop
push
jecxz
mov
fisttpl
pop
push
jmp
in
cmp
in
pushf
out
cmc
or
jno
add
ds
je
jno
enterw
sahf
inc
sbb
mov
xlat
rclb
rol
or
pop
insb
push
int3
lahf
iret
jg
data16
add
and
fstl
cmp
lea
inc
mov
xchg
mov
pop
jg
call
out
xor
sub
cld
adc
xchg
xor
or
fstpt
xlat
fnstenv
dec
inc
enter
cltd
xchg
pop
sbb
jne
mov
cli
lea
nop
dec
repz
jne
aad
insb
rcrl
loop
dec
mov
loopne
push
cmp
dec
insb
daa
xor
and
push
lods
sub
inc
test
mov
mov
push
enter
and
mov
aaa
push
push
in
das
leave
adc
rcr
popa
pop
stos
bnd
adc
mov
fimull
and
lret
aam
jl
sub
in
mov
push
in
ja
lods
and
lcall
adc
mov
hlt
dec
roll
rol
sub
pop
push
filds
jmp
push
mov
js
cmp
cmp
mov
fnsave
sub
test
test
add
mov
test
sbb
jmp
cmp
mov
cli
mov
pop
xchg
and
inc
out
lahf
or
scas
mov
cmp
fstp
add
call
and
jmp
cmp
xchg
test
icebp
xor
sti
fs
stos
pop
ja
mov
push
push
cwtl
test
jnp
pop
lds
mov
pop
push
or
xchg
fcmovu
adc
cwtl
mov
jne
adc
sub
stc
xchg
loope
jbe
and
sarb
jge
jg
cli
imul
imul
cwtl
push
ja
mov
mov
adc
mov
negl
repnz
push
jo
adc
adc
addr16
test
dec
lods
jg
or
jne
lahf
das
add
mov
addr16
push
fcomip
push
cltd
add
js
add
cwtl
pop
xor
mov
pushf
cmp
push
xchg
adc
push
fdivrs
inc
xchg
orb
mov
enter
xor
mov
pop
scas
mov
rcr
xchg
cwtl
mov
jne
jne
mov
sbb
sub
jb
xchg
mov
mov
negl
nop
jp
in
test
paddusb
xchg
jnp
rcll
inc
mov
sub
aad
call
pusha
pop
rolb
push
cs
add
xchg
in
jno,pn
outsl
jl
dec
test
cmp
out
cmp
outsb
and
sub
fwait
out
jae
adc
shlb
ljmp
mov
jp
mov
xor
push
or
ret
inc
imul
dec
pop
xor
popa
leave
cmpb
loope
add
pop
int
pop
mov
lds
cwtl
jmp
ss
mov
sbb
shrl
pop
scas
push
in
clc
pop
push
cmp
loop
pop
xor
xchg
das
iret
stos
pushf
jmp
cli
and
cmp
aad
inc
pop
sbb
sub
mov
add
mov
pop
xchg
test
in
enter
cli
add
inc
mov
jmp
pop
in
mov
aas
fbld
lret
mov
cmp
test
jnp
pop
dec
sbbb
punpckhdq
cmp
pop
xor
dec
inc
and
arpl
cs
sub
rcll
ret
ja,pt
out
fistpll
out
pop
inc
mov
je,pt
mov
int3
lret
inc
into
fcomip
pop
lods
push
ret
xor
sub
inc
xchg
mov
dec
lods
fcmovb
inc
or
xor
mov
notl
or
fdivrs
negb
imul
pop
push
lcall
pop
push
pop
push
or
or
and
sbb
test
pop
movsl
fldt
xchg
jl
push
rorl
inc
aad
inc
dec
data16
pop
adc
or
outsl
xchg
bound
jae
mov
out
sub
push
mov
hlt
repz
lods
and
cwtl
fdivl
jge
sbb
dec
sbbl
or
or
sub
cltd
pop
fs
push
xchg
outsb
jle
test
and
popa
insl
shlb
mov
mov
sahf
insb
aam
inc
hlt
and
or
test
or
repz
push
mov
jno
cwtl
pop
push
clc
xor
cmp
push
push
adc
subb
cmpsb
push
shl
inc
jle
push
cwtl
pop
pop
pop
shll
push
jb
mov
push
sahf
xchg
hlt
ljmp
add
adc
ljmp
loopne
movd
mov
inc
or
xlat
push
add
mov
iret
in
outsb
adc
iret
out
push
pusha
loop
xor
xchg
jb
xchg
sbb
lahf
mov
sahf
xchg
fsubl
mov
mov
xorb
or
push
in
adc
cmp
mov
adc
testb
arpl
je
adc
gs
mov
pop
lods
push
aas
jp
shll
cmp
test
cmp
rolb
in
faddl
or
pop
dec
js
popa
xor
xchg
sbb
add
call
ja
mov
scas
cmpsl
lea
orb
dec
cmp
pop
push
sti
fstpt
dec
push
dec
add
and
cwtl
test
jl
jmp
mov
cwtl
sub
ret
adcl
cmp
pop
imul
sbb
mov
xor
shlb
xchg
jnp
int
scas
pop
test
fcmovb
js
lock
in
xor
add
aaa
pop
cs
sub
dec
mov
aad
pop
fdivrs
lea
or
cmp
cli
xor
movsb
out
push
sub
outsb
sub
rolb
push
shlb
jle
sbb
cltd
je
fwait
divb
loope
test
hlt
mov
fistps
movsl
cs
and
xor
jne
repnz
aaa
sub
cmp
fwait
popa
imull
cmp
xchg
cld
xchg
aas
jae
idivb
mov
jb
sarb
inc
adc
dec
rol
mov
out
call
pushf
cmp
ljmp
adc
inc
aam
pop
pusha
fsubs
lods
cmp
jle
call
das
xor
out
scas
xlat
xchg
orl
dec
loope
push
icebp
ret
int3
ret
mov
pop
dec
mov
enter
inc
mov
psubsb
pop
sub
mov
sbb
test
xchg
sbb
mov
lock
aam
fs
mov
xchg
mov
pop
xor
inc
mov
pop
dec
js
mov
mov
test
loope
int3
cmpsl
dec
xor
cli
hlt
js
orb
adc
mov
cmp
cld
push
lods
lret
outsl
cli
add
int
stc
mov
jae
xor
push
fimuls
fldcw
incb
jl
aam
lock
or
push
aas
shll
dec
stc
idiv
ret
sub
pop
dec
sbb
and
mov
or
std
test
addr16
adc
inc
ret
sub
mov
js
fbstp
mov
int
xchg
flds
out
test
xor
dec
sbb
jecxz
and
mov
shl
and
fwait
adc
stos
mov
mov
outsl
xlat
pop
add
test
sbb
int
clc
cmp
sub
mov
ss
sub
push
bound
inc
mov
mov
lods
test
cmp
jge
mov
cltd
jecxz
ret
push
pop
dec
cmp
les
pop
dec
js
icebp
fld
mov
push
or
add
addl
push
dec
call
cmp
sar
nop
nop
push
pop
xor
or
fistl
into
mov
aas
mov
jnp
lock
xchg
mov
lret
xchg
push
nop
jle
jmp
mov
fnstsw
adc
cmp
test
lock
in
or
and
pop
mov
ja
or
lret
sub
out
inc
dec
sbb
nop
jle
in
cltd
inc
push
jns
clc
iret
sbb
rcll
dec
gs
push
flds
jle
xor
test
popa
jle,pt
fdivl
test
shlb
pop
ds
push
int
gs
add
xchg
and
mov
cmpsl
stc
cli
cmp
aam
gs
mov
mov
or
inc
jno
sbbl
mov
sbb
test
mov
cli
push
pop
sbb
data16
lahf
mov
add
ficoml
mov
daa
scas
mov
and
xor
fbld
pushf
xor
adc
adc
std
pop
sbb
push
test
rdmsr
loopne
push
inc
push
shll
sub
pop
int
lcall
jmp
mov
enter
cmpsb
mov
imul
mov
cmp
xchg
cmpsl
xor
in
push
loop
stc
add
mov
pop
sahf
negb
scas
std
push
cli
push
mov
jmp
lcall
and
ss
mov
xor
orl
icebp
shll
xor
insl
stc
and
ljmp
cmp
and
int3
cmp
dec
fistl
or
lods
pop
mov
dec
pop
cmpsb
movsb
jnp
dec
jge
dec
out
or
iret
and
je
xor
push
jns
jno
pop
in
xlat
testb
test
pop
gs
in
and
bound
mov
sbb
je
scas
mov
cli
xchg
cmp
test
sbb
pop
mov
in
cmpsl
scas
and
fwait
push
and
imul
jnp
add
pop
sbb
dec
lret
push
or
fwait
lock
loop
fnstcw
xchg
or
cmp
sbb
xor
ss
enter
cmp
repz
pop
shr
faddl
mov
sbb
popf
ja
push
fstps
lods
sub
lods
loope
sbb
xor
in
outsb
stos
daa
pop
out
fwait
xchg
sub
arpl
call
xchg
loope
cmpsl
jns
sbb
jle
or
and
pop
lods
jne
addr16
sbb
loopne
das
sbb
into
cmp
movsb
xchg
cmp
mov
repz
loop
and
add
xorl
dec
dec
insl
in
fwait
pop
pop
mov
jnp
cmpsl
dec
xchg
pop
outsb
insb
jp
fmuls
cmp
sbb
stos
sub
adc
jae
call
dec
outsb
enter
cmp
mov
jp
or
cmovns
mov
shll
mov
mov
cmpsb
dec
imul
cmovne
push
fmull
add
lea
scas
jle
sub
cmp
xor
in
or
aad
xlat
aas
dec
rclb
ret
test
and
dec
jg
cli
inc
push
cmp
ljmp
pushf
push
or
inc
subb
or
jecxz
sbb
sbb
push
mov
xchg
mov
shll
xchg
mov
in
cmc
push
lret
pop
lds
add
mov
cld
mov
mov
jbe
sahf
andb
push
xchg
pop
leave
popf
gs
sbbb
sbb
movsl
push
adc
inc
sbb
push
mov
xchg
in
jns
mov
cltd
adc
sub
add
data16
jne
jb
jle
sub
cmpl
cli
lcall
mov
js
es
lcall
jnp
mov
adc
dec
mov
std
cmp
loop
or
add
loop
sub
fcomp
int
cmpsl
xor
inc
sub
cmpl
cmpsb
fstp
mov
addr16
ret
and
sarl
scas
jno
sbb
cmc
mov
scas
cmp
pop
inc
push
inc
mov
lea
in
adc
or
into
or
movsl
mov
and
xor
or
add
out
push
test
inc
jmp
movsl
cwtl
sub
sbb
cld
adc
bound
add
dec
xor
push
mov
xorb
nop
mov
or
orl
xchg
pop
mov
in
leave
ja
movsl
ds
out
push
sbbb
addr16
adc
and
mov
fmulp
popa
xchg
adc
mov
roll
xchg
lea
addr16
xchg
fistps
bound
mov
daa
lods
stc
add
or
andl
sbb
xor
lods
adc
test
repz
mov
mov
lods
scas
mov
rcrb
ss
cld
outsb
ret
orb
movsl
mov
push
mov
mov
cli
xchg
lock
mov
mov
inc
jno,pn
lcall
push
push
and
jg
lock
cmp
lods
or
fdivl
mov
std
sub
xchg
cs
push
stos
jg
pop
sub
xchg
outsl
addr16
jmp
mov
fildl
lret
jle
out
cmc
pop
loopne
pop
into
push
insb
out
pop
push
aad
cmp
movl
int3
ficompl
lahf
add
in
and
mov
xlat
pop
les
lds
lret
inc
jne
ret
jl
das
aad
jae
out
inc
dec
dec
sub
ljmp
push
cmp
rcr
mov
jmp
inc
std
dec
sbb
sub
das
aad
jle
or
out
sbb
inc
es
outsl
mov
jne
xor
cmpsb
xor
jle
fwait
cmpsb
jno
jbe
testb
jne
sub
and
ss
mov
ret
push
xor
jnp
jecxz
std
cwtl
adc
lock
push
and
and
js
test
insb
sub
cmpb
inc
sub
shll
test
push
lds
add
mov
aas
jp,pt
jge
popf
sahf
insb
movsb
insb
cmp
repz
lods
sbb
jg
mov
shrl
mov
xchg
rcll
adc
and
imul
and
scas
cwtl
mov
mov
gs
sub
pop
test
cmp
aas
clc
dec
scas
aam
mov
fadd
xchg
test
sbb
mov
test
sti
xchg
inc
dec
cltd
inc
inc
cmp
sub
mov
push
cmpsl
cmpsl
out
mov
mov
or
jmp
cltd
jae
sti
inc
pop
repnz
push
mov
mov
dec
js
sbbb
ja
pop
sub
jnp
mov
jecxz
int
int
bound
and
nop
sub
push
push
push
popf
outsb
arpl
cs
cltd
leave
mov
jno
mov
roll
mov
fwait
int3
adc
dec
test
xchg
xor
mov
mov
into
sbb
or
jecxz
shll
lds
sbb
xchg
outsb
or
jae
dec
jb
or
out
iret
jmp
xor
inc
cmp
sbb
int
dec
mov
mov
js
in
mov
add
in
int
daa
dec
nop
fwait
inc
or
cmp
les
mov
pop
aad
xchg
mov
in
addb
lret
aam
nop
pushf
fs
mov
xchg
sti
and
sub
aas
cmp
bound
aam
ljmp
insb
or
mov
dec
pushf
loop
jge
mov
mov
xchg
pushl
jb
gs
xor
xlat
mov
test
into
movsl
mov
out
xor
in
out
shlb
pop
push
push
pop
adc
test
mov
and
lods
addr16
loope
jno
pop
mov
mov
cld
push
add
ljmp
mov
add
lea
adc
cmpsl
and
clc
mov
rcrl
xchg
and
pop
mov
mov
jne
sahf
xor
fsubrs
inc
out
shlb
ret
mov
in
out
inc
mov
in
push
sub
jo
fldenv
xchg
jae
into
out
aas
lret
shll
sti
stos
jmp
cmp
mov
adc
insl
sti
mov
mov
shrb
cld
xorb
shlb
or
and
add
jmp
push
and
push
inc
sub
leave
inc
cld
pop
shlb
das
add
iret
mov
popa
push
sti
out
dec
mov
jle
or
mov
rcrb
or
enter
jbe
jge
sbb
fptan
aaa
in
enter
push
pop
in
and
idivl
dec
loope
pop
out
vmovdqa
ss
inc
std
out
sbb
mov
mov
jg
stc
sbb
mov
jmp
je
or
pop
rorb
loopne
sub
xor
stc
add
jbe
andb
xchg
xchg
dec
push
inc
out
adc
in
subl
or
jmp
test
or
mov
mov
fdivrs
sahf
mov
cwtl
shlb
dec
mov
fs
rcrb
push
int
sbb
lock
repnz
inc
lret
mov
mov
repnz
dec
adc
nop
ljmp
mov
cmpsb
fdivl
adc
ja
loop
or
jne
fwait
pop
gs
cld
pushf
fwait
sub
xlat
push
cmp
mov
mov
out
movsb
insl
lcall
negb
pop
test
lahf
icebp
jmp
in
add
lods
test
popa
mov
cmp
jbe
loop
cltd
mov
sbb
cmp
xchg
mov
andl
pop
js
fnstsw
test
mov
je
lods
push
aas
push
lods
add
mov
bound
and
pop
mov
cmp
xchg
or
mov
jns
std
jnp
xchg
les
shlb
dec
je
jg
dec
out
lahf
mov
mov
mov
loopne
xor
push
jnp
jg
sub
filds
aas
push
out
ret
jb
dec
ret
out
movsl
adc
push
and
xor
push
je
sub
popf
push
lods
mov
je
sbbl
mov
stos
daa
cmc
test
mov
je
xrelease
inc
movsb
push
loop
std
aaa
and
mov
push
mov
inc
int3
test
xchg
gs
xchg
lret
out
insb
sbb
pop
sbb
cmp
pop
cmp
pop
xchg
mov
and
repnz
lock
xchg
sbb
jb
orb
mov
push
btr
xor
dec
imul
stc
and
mov
sarb
repnz
and
jno
sbb
push
mov
in
pop
mov
xchg
or
pop
jmp
in
xor
leave
push
adc
xchg
rolb
sbb
xor
pop
pop
faddl
ret
or
frstor
stos
mov
jnp
test
xchg
insl
sahf
pop
fdivrp
mov
in
icebp
lods
ja
mov
push
push
add
fdiv
popf
cld
ss
fisttpl
mov
arpl
mov
sub
pop
mov
out
jl
adc
mov
push
scas
mov
xlat
xchg
ficoms
xor
es
in
and
test
jmp
aad
adc
mov
shlb
pop
push
mov
imul
cs
fs
xchg
shl
push
jle
outsl
dec
pop
out
mov
cmp
fs
xchg
inc
lock
jne
mov
jnp
test
repnz
adc
lea
pushf
inc
inc
fsubs
ror
mov
jns
cmp
imul
add
jb
cmc
mov
repz
scas
scas
or
add
sar
adc
mov
outsl
jg
in
sub
jbe
jmp
inc
jne
mov
sub
dec
dec
mov
rcll
fsts
adc
cmp
jns
out
xor
aaa
sub
mov
dec
enter
jno
sub
outsl
mov
jecxz
dec
ficoml
mov
dec
xor
mov
pop
lcall
clc
cwtl
push
enter
mov
xor
mov
fs
xchg
cwtl
loop
xchg
mov
pop
push
xchg
inc
jno
mov
push
decl
dec
and
sahf
pop
aam
imul
xor
and
add
addr16
imull
jl
xor
movsb
movsb
mov
cmpsl
daa
push
inc
inc
daa
mov
or
mov
mov
test
ffreep
mov
test
lahf
nop
jg
out
and
je
aam
xorb
test
fdiv
mov
cltd
add
cmc
mov
fdiv
pop
jno
andb
mov
cmpsl
pop
cmp
mov
xor
xchg
rcrl
shl
mov
lock
stc
xchg
pop
xchg
or
flds
pop
repnz
inc
xchg
loope
dec
fiadds
notl
cltd
xchg
nop
test
push
push
in
xchg
and
dec
mov
pop
pop
add
and
inc
out
lea
aam
cmpsl
adc
hlt
out
sub
dec
push
pop
inc
scas
jbe
mov
stc
cmpl
out
fwait
or
cmp
sti
shrl
orb
inc
mov
dec
cmp
sbb
push
rcrl
adc
movb
inc
xchg
imul
adc
xchg
mov
push
fcompl
scas
test
outsb
bound
inc
jg
inc
in
mov
es
pop
mov
mov
or
loop
sub
xor
fld
sbb
lahf
cs
sbb
mov
jmp
or
shll
and
mov
je
pop
mov
adc
cmp
andl
imul
dec
sbb
pop
inc
pop
imul
lods
xor
sahf
aas
mov
mul
rorb
sbb
sahf
xor
xlat
pop
aad
fiaddl
stos
sbb
pop
or
mov
clc
aam
or
xlat
fs
pop
fstpl
jge
cmp
mov
sbb
sub
inc
lods
jbe
retw
sbb
aaa
loop
and
pop
lret
in
js
mov
mov
imul
outsl
inc
xchg
fistps
xchg
aam
xchg
scas
movsb
insb
dec
cmc
cmp
adc
gs
inc
pop
fwait
insl
or
clc
rorl
mov
repnz
sub
mov
mov
fmuls
add
push
sbb
pop
pop
lods
les
and
jb
adc
ret
test
dec
mov
mov
add
out
loope
imul
jl
dec
sbb
inc
frstor
push
jne
js
jbe
push
and
adc
lahf
sub
inc
cs
mov
jbe
xor
arpl
sub
mov
push
lods
jb
ss
cs
inc
or
inc
enter
loopne
gs
movsb
bound
jbe
stc
iret
add
int
clc
jmp
sarb
test
bound
pop
sbb
push
fxch
popf
push
das
sub
push
mov
hlt
adc
lret
das
mov
shrb
fcmovnu
int3
adc
push
inc
icebp
mov
scas
lea
xchg
xchg
lcall
fisubl
imul
sub
add
push
inc
gs
push
rcll
ja
movntps
or
or
and
mov
xchg
rcll
loop
cmpsl
sarb
mov
xchg
jno
or
and
call
pop
sti
jbe
sub
dec
inc
out
in
in
pop
aaa
lret
pop
cli
mov
push
mov
dec
mov
ljmp
mov
out
loop
mov
dec
cmpsl
repz
in
test
mov
inc
mov
pop
jp
test
subl
xor
add
mov
stc
fmull
push
cmp
out
mov
mov
sub
xor
stos
ljmp
mov
inc
mov
pop
dec
adc
insb
cld
push
jns
jnp
repnz
int
pop
mov
push
jae
adc
add
loope
jo
push
clc
test
dec
push
jecxz
fmuls
xchg
aam
mov
add
sbb
pop
xorb
push
xlat
int3
cmp
sbb
pop
out
lcall
dec
movsb
scas
out
es
mov
or
pop
adc
and
jl
out
xchg
mov
je
out
insb
cmp
pusha
pop
push
dec
fsts
sub
enter
add
sub
xchg
or
lock
xor
jp
hlt
inc
clc
xor
xor
jl
fwait
dec
decl
stc
and
sbb
add
out
fcmovnb
or
and
shlb
cmpsb
or
imul
testb
xchg
jmp
lods
xlat
mov
outsb
and
in
ds
mov
jne
xlat
and
clc
xor
push
push
and
dec
insb
in
jecxz
cltd
mov
cld
cld
repz
lock
jmp
jp
xchg
adc
aas
cmp
or
getsec
test
lea
outsb
push
sbbl
lea
adc
jb
jae
fwait
mov
xchg
add
push
repz
rorl
pop
jne
repz
push
xchg
in
xchg
test
imul
ret
mov
aam
sbb
test
mov
dec
int
xchg
sub
hlt
lock
pop
mov
icebp
adcb
ret
movswl
ds
incb
pop
push
int3
jl
jmp
xor
pushf
insl
out
mov
pop
jmp
sbb
fcoml
in
dec
mov
xor
outsl
or
sahf
cli
sub
sbb
cmp
dec
movsl
cmp
shlb
dec
fadds
das
sbb
inc
fiaddl
and
cmp
mov
lods
inc
sub
out
lahf
mov
pusha
pop
pusha
mov
mov
shr
scas
mov
dec
push
or
push
cmp
and
inc
in
loopne
or
jecxz
rcrl
xlat
and
or
je
xchg
rcrb
pop
loop
popf
fmuls
mov
mov
je
movsb
jne
lret
dec
in
das
enter
sbb
inc
scas
mov
push
imul
mov
ret
xor
dec
push
and
lea
inc
mov
test
mov
loope
jl
popf
aaa
mov
xor
pop
hlt
mov
jno
negb
pop
cmp
xchg
std
mov
lods
xchg
mov
jbe
dec
lahf
pop
pushf
mov
dec
hlt
mov
xchg
jmp
push
repnz
pop
pushf
cmc
sarb
cmp
or
and
loope
xchg
arpl
jmp
push
shr
inc
or
aas
push
sub
cmpsl
add
inc
push
pusha
test
arpl
mov
cli
out
pop
pop
mov
sbb
pusha
aad
jnp
out
inc
xchg
shlb
adc
test
mov
jnp
jae
sub
push
cmp
roll
xchg
push
lea
push
movsl
sub
mov
or
xchg
adc
mov
mov
xchg
adc
push
sub
fstps
mov
xor
and
and
loop
xchg
test
adc
int3
cmp
xchg
xchg
xor
shlb
sbb
psrad
mov
sub
in
mov
stc
lds
je
outsb
dec
sbb
pop
dec
cmpsb
adc
inc
fsts
inc
inc
movsl
lret
nop
in
xor
push
fdivr
cli
jmp
scas
mul
mov
into
xchg
xchg
repnz
mov
fsts
sub
push
aaa
sbb
icebp
lods
sbb
ljmp
inc
sahf
out
stos
je
inc
push
aas
les
mov
mov
into
ss
arpl
mov
jg
and
mov
adc
loope
cmp
push
push
lea
stos
test
mov
pop
fstps
cmp
sbb
xor
cmp
insb
filds
cltd
mov
xchg
add
pop
pop
xchg
jne
addr16
mov
mov
mov
into
test
test
dec
int
push
lock
or
cmc
mov
pop
push
dec
xchg
pop
imul
mov
loopne
std
pop
ficompl
leave
mov
jno
pop
fisttps
xlat
jmp
mov
ret
mov
mov
dec
loope
fstl
in
mov
cmp
sbbl
cld
test
pop
std
scas
dec
jbe
push
push
lods
pop
mov
and
orl
inc
xchg
scas
mov
jns
push
fsubrs
ficoml
xchg
les
cmp
pop
test
mov
jge
test
mulb
cmpsb
jns
and
insb
mov
jmp
mov
add
js
lret
ret
cs
cmpsl
jno
add
xor
and
fsubrs
inc
adc
mov
stos
call
dec
cmp
xor
and
mov
xchg
fdivp
mov
inc
dec
adc
add
add
es
xchg
test
in
test
jo
movl
subb
cld
int3
mov
pop
lret
jle
js
pop
pop
push
jp
xchg
sbb
test
jl
pop
and
inc
loopne
daa
int3
rcr
inc
enter
arpl
sbb
sub
imul
xchg
lods
jge
nop
jmp
shlb
ja
les
adc
and
popa
out
adc
and
out
xlat
std
jp
pop
pop
adc
fidivl
mov
pop
sbb
mov
inc
popa
movsl
cmp
iret
push
pop
pusha
push
into
cmp
cmp
stos
cmp
jbe
repnz
cmpsl
xor
pushf
jns
loope
daa
out
sahf
adc
push
fsubrp
lea
ljmp
add
xor
popf
fbstp
je
mov
mov
adc
fiaddl
add
movsl
out
mov
imul
or
or
and
jg
stos
dec
fiaddl
cmp
pop
stos
push
sub
sbb
dec
outsb
icebp
insl
push
ss
cli
lahf
bound
aas
test
lret
pop
jae
jp
in
sarb
jne
sub
inc
aaa
imul
imul
pop
pop
and
push
mov
sbb
movsb
jae
lea
leave
addr16
aad
notb
push
xor
ret
call
fwait
and
mov
xchg
fs
out
lret
mov
sub
inc
fnstcw
fidivl
data16
adc
mov
sti
or
cmp
pop
sbb
addr16
add
inc
dec
stos
mov
jbe
ret
nop
pop
in
pop
jno
or
loopne
mov
fucomi
imul
mov
lods
jp
and
xchg
adc
sbb
outsb
mov
pop
ja
pop
lretw
xor
xor
roll
mov
fnstcw
stos
sub
xor
inc
push
lods
int
xchg
pop
shr
jbe
iret
xchg
into
leave
xor
add
out
mov
dec
jb
sbb
aas
sbb
push
lret
xchg
xchg
ljmp
or
sbb
iret
aam
cmpsb
ret
xor
adc
andl
std
arpl
leave
sub
sbb
pop
mov
in
pop
adc
ljmp
rorb
jnp
mov
mov
mov
or
and
xchg
and
inc
mov
popa
push
mov
jmp
pop
xchg
xor
jmp
inc
pop
adc
loopne
push
insb
push
cli
shrb
imul
lods
lock
push
push
xor
cmp
pop
daa
mov
test
cmpsl
mov
xchg
adc
or
mov
loop
mov
outsl
cmp
subb
mov
inc
cmp
sub
mov
fs
fisubrs
pop
std
test
cmp
lds
clc
enter
mov
push
jmp
mov
pop
mov
in
mov
dec
outsl
daa
dec
push
jp
jae
adc
pop
and
decl
call
adc
and
dec
cli
lea
and
stc
mov
push
xchg
test
int
dec
movsl
bound
in
mov
les
test
xchg
jno
cmp
icebp
das
test
fidivl
subb
in
fstpl
dec
mov
mov
sub
aad
add
orl
fwait
es
rcrl
dec
add
test
or
repz
cmc
lds
pop
sti
shlb
sbb
mov
ja
cmp
movb
add
cld
cmp
fucom
xchg
mov
xchg
lret
fcoms
jp
or
idivl
jb
pop
dec
sub
or
js
or
loope
xchg
xor
push
sub
loop
push
call
shrb
fldcw
push
das
lods
cmp
cltd
test
insl
or
loope
leave
cmpsl
loopne
mov
sbb
pop
mov
dec
sbb
push
cmp
xchg
push
out
pop
inc
inc
inc
xor
pushf
rcll
test
sub
adc
das
je
jns
add
jbe
sahf
out
xchg
mov
xchg
mov
loope
repnz
xchg
mov
inc
or
push
sahf
outsl
rorb
fstpl
loop
sub
in
pop
mov
push
adc
dec
ljmp
leave
fs
pushf
and
nop
mul
stos
fmul
mov
jge
sub
arpl
jmp
pop
faddl
lods
xchg
stc
and
jecxz
dec
int
mov
push
loop
es
push
push
cmp
movl
idivl
clc
pop
in
dec
xor
adc
fs
sub
test
adc
and
mov
mov
imul
pop
cmp
jb
and
in
stc
jo
lea
push
sbb
xchg
jns
in
fs
mov
mov
sub
cs
cmp
inc
and
push
je
push
push
pop
dec
and
add
xor
fcomi
cwtl
sbb
inc
icebp
lock
ljmp
xor
ds
adc
scas
int3
test
stos
in
sbb
imull
pop
cmp
lcall
adc
inc
xor
arpl
xor
fwait
rcll
ss
je
mov
mov
adc
insl
xchg
lods
mov
pop
cmpsb
sbb
jne
lea
adc
aaa
adc
cmp
xchg
arpl
ret
sub
outsl
add
or
test
lret
fwait
in
and
add
movsl
sbbl
or
pop
cmp
pop
adc
nop
dec
or
jo
ljmp
sbb
shll
out
jne
xor
rcll
or
shrb
test
sbb
sub
sub
cld
mov
movsl
rcrl
imul
das
mov
cmpsl
pop
in
div
sbb
insl
mov
mov
mov
outsb
push
xchg
mov
inc
inc
aam
jle
movsb
mov
je
xlat
adc
add
and
sti
adc
stos
into
fwait
nop
sbb
iret
jge
push
push
xor
in
adc
jno
insl
sar
mov
cmp
add
pop
lahf
push
and
vpsubq
sti
jns
in
xor
divl
jle
das
jp
pusha
js
mov
add
pop
cmp
outsb
sbb
or
bound
sub
shlb
dec
mov
jl
xor
dec
sub
insb
in
add
shr
push
shrb
inc
stos
packuswb
mov
mov
inc
add
cmpsl
xchg
jl
notl
and
mov
pop
jo
jno
stc
jle
lahf
popf
pop
loopne
fidivs
and
cwtl
jl
xor
or
mov
mov
test
bnd
rolb
xchg
xchg
dec
lcall
push
test
push
mov
popa
adc
inc
cmpsb
adc
push
xchg
cmp
les
mov
inc
dec
out
pop
fisubl
test
fmul
cmp
push
jne
push
dec
repnz
rcl
fldcw
cli
jbe
enter
adc
loopne
push
jns
outsb
cwtl
sbb
pop
negl
dec
fisubrs
jg
jbe
daa
enter
and
icebp
pop
in
bound
loope
and
shr
lods
test
daa
push
ret
sub
insl
sarl
sarb
shll
pop
or
out
aam
data16
and
sbb
loope
ljmp
insl
insb
popa
movsl
sub
push
jbe
in
sub
mov
and
insb
lret
sub
cmp
scas
roll
pop
addr16
and
sbb
mov
addr16
out
mov
in
dec
sbb
ret
aad
pushf
add
mov
stos
inc
aad
hlt
push
es
jno
in
mov
test
sbb
insb
es
loopne
les
out
fsubl
and
jo
mov
jnp
shll
lea
rclb
cwtl
mov
ss
iret
and
and
add
lock
les
sub
arpl
jge
cltd
subb
dec
xchg
je
push
sbb
rolb
pushf
shrb
jg
loop
cltd
xor
and
add
fimuls
dec
xchg
scas
pusha
jecxz
popf
test
orl
stos
add
cmpl
inc
xlat
cmp
int
mov
orb
mov
jbe
jno
dec
stos
adc
and
lods
jo
ja
test
roll
fldl
inc
imul
pop
jno
popa
adc
lret
sbb
adcb
fcomip
jge
outsb
in
aam
or
out
sub
mov
ror
loope
das
and
inc
insl
pushf
lock
loope
out
scas
aas
out
xchg
cmc
mov
mov
out
sbb
xlat
xchg
mov
test
mov
mov
loope
mov
pop
lahf
imul
xchg
and
lock
or
and
pushf
push
mov
inc
out
icebp
xchg
dec
fwait
and
lods
rolb
sbb
neg
jmp
fists
adc
lods
lret
mov
fsts
xor
ds
ss
bound
notb
mov
cs
xchg
jmp
pop
ss
adc
xor
xchg
jnp
or
mov
push
out
gs
inc
mov
jae
push
lea
pushl
adc
ss
push
out
fsubrl
inc
stos
pop
outsb
lret
and
lahf
mov
dec
add
cmc
inc
push
sahf
lret
mov
sahf
clc
fldcw
decl
stos
inc
nop
dec
loopne
jmp
mov
popa
fwait
int3
push
fists
imul
and
repnz
lret
jg
xlat
dec
sub
inc
jb
pushf
add
scas
or
add
mov
pushf
pop
mov
xchg
movsb
mov
mov
data16
xor
test
fsubrp
ret
xlat
lods
lea
mov
lock
mov
out
sub
jnp
push
cmp
mov
jae
mov
xchg
lods
sub
das
cmp
rcll
dec
mov
inc
in
inc
pop
mov
inc
std
mov
jnp
fsubs
inc
enter
add
add
xchg
sbb
je
cli
mov
and
mov
mov
sub
cmc
sbb
repz
jbe
and
repnz
cld
add
int
out
push
and
aaa
iret
and
push
daa
dec
adc
jg
adc
xchg
sbb
fs
mov
mov
jbe
mov
pop
shr
leave
shlb
lods
out
loope
imull
movsb
cld
adc
adc
repz
sub
xchg
xchg
mov
mov
je
xchg
adc
pop
pop
nop
jbe
pop
jmp
imul
out
dec
dec
add
les
inc
mov
inc
sti
mov
xchg
cltd
imul
orl
gs
mov
mov
repnz
cmpsb
out
ds
fldcw
dec
outsb
fchs
and
js
lea
ficoml
or
push
sbb
out
sub
xchg
test
in
mov
dec
fcomi
xor
sahf
shl
jl
int3
bound
mov
test
andb
gs
outsl
rcrl
sub
fistpll
int3
mov
pop
insl
and
mov
push
dec
inc
das
orb
adc
adc
std
push
fcomi
into
fdivl
rorb
fwait
mov
je
mov
mov
loope
insl
mov
xchg
jb
rol
xor
ja
nop
cmp
mov
pop
xor
hlt
nop
mov
sbb
cmpsl
cli
cwtl
cmp
mov
push
jmp
sbb
jo
dec
insb
movsl
in
mov
stc
rol
sub
mov
arpl
in
popf
xor
xor
adc
repnz
std
mov
mov
cmp
mov
mov
sub
or
outsl
mov
add
popa
jle
rorl
sub
mov
push
mov
fadd
inc
repnz
xor
xlat
js
int3
icebp
mov
ljmp
sub
add
jae
sbb
clc
sbb
stc
fcmovnb
sbb
mov
ror
out
xchg
addr16
into
mov
lods
pop
sbb
aaa
adc
adc
mov
sbbb
sub
push
repnz
mov
aaa
test
outsl
mov
jp
stos
repz
xor
mov
push
in
or
es
test
xor
fisubrl
into
push
les
dec
nop
mov
jl
pop
addr16
out
dec
dec
imul
mov
adc
push
in
fcomps
jae
xchg
popa
sbb
adc
fs
sbb
popf
daa
xchg
mull
mov
stos
jmp
pop
adc
in
push
push
js
inc
cmp
and
push
add
inc
sahf
leave
add
imul
ss
pop
pop
ror
add
cmp
orl
imul
xchg
scas
adc
frstor
cmpsl
jp
clc
pop
and
push
xor
outsl
cmp
cld
cld
mov
or
cmp
pop
adc
aas
xlat
rol
in
or
jecxz
lcall
enter
stos
fbstp
push
dec
lret
pop
shll
and
stc
fwait
mov
les
bound
dec
cmp
std
xchg
add
cmp
rdpmc
roll
dec
lods
push
stc
and
inc
push
test
pop
mov
outsb
cmpsb
xlat
mov
or
stos
and
pop
and
ficompl
pop
test
mov
imul
xchg
jmp
inc
test
cmp
xchg
mov
jnp
jge
inc
rcl
mov
xchg
xchg
fsubl
imul
sbb
jne
ljmp
mov
add
sub
fisubrl
inc
cmp
xor
fcoml
xor
pushf
sub
mov
pop
clc
push
in
js
or
push
mov
inc
cmc
lods
cmp
ljmp
fs
test
dec
ss
aaa
dec
scas
cmp
or
pop
sub
lcall
jb
cld
lea
jo
jecxz
out
test
das
pop
cmp
push
jl
rcrb
mov
out
sbb
or
mov
lcall
popa
ret
and
es
je
mov
xor
pop
lds
inc
or
pop
aad
xchg
je
mov
fiaddl
les
mov
sbb
mov
add
and
pop
lcall
pusha
fsts
jb
pop
flds
pop
jmp
js
xchg
std
jg
out
mov
push
lret
xchg
pop
adc
jmp
out
in
pop
imul
mov
cmpsb
jecxz
sub
nop
cmp
sbb
mov
gs
call
lret
int3
mov
sub
cmp
push
data16
not
outsb
ds
ss
adc
mov
xor
push
inc
sahf
pop
sbb
jae
lea
mov
hlt
xor
leave
sarl
jmp
dec
add
aad
imul
dec
cmp
cmpsl
subl
in
jnp
leave
leave
ja
adc
dec
push
out
jecxz
pop
mov
push
add
mov
cmpsl
jnp
mov
mov
mov
mov
out
cmp
mov
scas
sub
dec
shlb
or
insb
iret
out
pop
xor
leave
inc
subb
call
jmp
fidivrl
test
lahf
imul
nop
xorb
and
leave
aas
dec
arpl
jl
roll
jb
jle
cltd
mov
es
sbb
mov
jo
xor
aas
imul
cmp
pop
dec
and
mov
ss
in
outsl
sti
dec
inc
sub
iret
int3
push
movsw
dec
data16
shl
add
dec
add
mov
out
jne
outsb
stos
aad
repz
loope
ljmp
roll
lahf
push
negb
lcall
pop
movsb
fs
sbb
pop
mov
nop
mov
call
jbe
das
aas
decl
pop
insl
cli
mov
out
xchg
cs
bound
test
inc
std
std
mov
mov
adc
pop
or
xchg
ja
aam
ss
in
mov
and
filds
bound
pop
out
lods
iret
xor
mov
movsb
sahf
sbb
adc
mov
addr16
jo
stos
lret
add
ret
rolb
inc
lcall
xlat
popa
cmp
daa
xchg
imul
xor
mov
and
sbb
enter
call
and
pop
inc
add
mov
mov
lcall
jb
cmp
sarl
xor
vandps
xor
xor
push
cli
push
mov
loop
mov
mov
xor
lods
test
add
neg
xchg
int3
adc
lret
enter
mov
jmp
cmp
rol
and
mov
out
mov
cmc
mov
and
js
inc
inc
cmc
cwtl
mov
pop
lds
inc
xchg
sbb
push
in
xchg
adc
push
lds
ret
and
iret
cmp
into
inc
leave
xchg
lcall
imul
jbe
arpl
push
cmpsb
add
adc
pop
mov
cmp
lret
adc
sub
mov
fs
mov
xchg
mov
jmp
mov
in
inc
push
adc
fdivrp
mov
adcl
sub
fldcw
shl
incl
rclb
jb
filds
inc
push
adc
jg
jl
imul
inc
int3
adcb
inc
or
add
test
dec
lea
ljmp
aad
xor
sbb
fcoms
out
mov
cmove
jp
sbb
push
xlat
jne
pushw
ljmp
mov
movsb
and
xor
add
sub
cwtl
lcall
push
lods
cmc
pop
xor
sub
cmpsb
mov
add
sub
sub
pop
and
test
jns
cltd
mov
lea
out
xchg
xlat
movb
call
in
out
adc
aaa
ficoml
xlat
sub
dec
push
mov
imul
test
nop
jbe
leave
insl
int
jmp
adc
adc
inc
adc
push
les
jne
fcoms
xchg
pop
jns
pop
inc
sarb
sbb
jno
jne
bound
rclb
in
stos
into
iret
mov
cmp
pop
fdiv
call
std
pushf
out
dec
sbb
callw
pop
jg
bound
loop
bnd
orl
sarl
in
ja
loopne
les
sarb
fwait
aas
clc
scas
cmpsl
jg
push
loop
add
xor
pop
and
inc
imul
cs
fdivr
roll
cmp
lahf
pushl
rcll
jbe
add
pop
adc
mov
adc
xchg
and
pop
pop
aas
sbb
xor
and
mov
aad
pop
pop
cmpb
leave
insb
icebp
movsl
jmp
dec
movsl
mov
sbbb
mov
es
es
or
xor
stc
stos
gs
ja
dec
daa
mov
jb
in
push
iret
dec
daa
aam
popf
loope
stos
sbb
mov
mov
in
cmp
cmp
push
scas
int
xlat
inc
cwtl
rclb
outsl
data16
jl
cli
sub
inc
cmp
mov
ret
rorl
adc
push
jecxz
mov
jecxz
into
sbb
outsb
mov
jb
adc
jle
inc
stc
test
mov
mov
pop
mov
mov
mov
mov
fs
out
int3
or
push
mov
mov
in
mov
cli
pop
fdivrs
sbb
push
out
mov
sbb
inc
and
out
mov
mov
add
sbb
ret
jecxz
push
imul
mov
xorl
mov
fwait
sub
movsb
iret
lahf
or
aam
sbb
popf
movsl
jmp
mov
lea
scas
mov
inc
popa
or
mov
sub
lcall
insl
sbb
and
call
sub
xlat
iret
inc
adc
jb
movsb
sbb
mov
lea
push
sarb
or
decl
add
mov
mov
mov
lods
adc
push
adc
push
pop
fldl2e
cli
xchg
cltd
sbb
sub
xor
fs
mov
cmp
pop
in
inc
loopne
ja
xor
pop
push
mov
shl
cmp
pop
push
sub
test
dec
xor
cmp
xor
notl
and
movsb
sbb
mov
fistps
nop
add
sahf
and
stc
popa
js
and
sbb
mov
sbb
out
push
fdivrs
out
xor
jg
sbb
add
jae
cmc
jnp
xchg
cmp
xor
add
fdivs
repnz
jo
jl
lcall
insl
lret
mov
call
jne
mov
fcmovb
jp
lret
fucom
or
sub
aam
aaa
mov
sub
and
sub
add
push
pop
jg
sub
inc
jo
fidivl
cmp
pop
shrb
cmpsl
jne
sbb
movsl
mov
aad
mov
mov
inc
testl
pop
push
pop
sti
lahf
sbb
dec
ss
jb
divb
sbbb
jbe
inc
andb
fildl
gs
or
inc
mov
mov
mov
mov
pop
rol
mov
xor
lods
clc
cmp
mov
mov
into
xchg
sbb
movsb
mov
mov
xor
filds
sahf
out
jne
xor
push
ret
sbbl
dec
pushf
mov
or
cmpsb
dec
dec
add
fdivrl
test
loope
shl
loopne
mov
lock
or
mov
push
lock
pop
pop
cmp
arpl
push
jge
jmp
aam
dec
mov
xor
shlb
fs
arpl
cmp
mov
mov
mov
loope
daa
and
cmp
jge
insl
adc
fs
into
dec
mov
sahf
shl
cltd
mov
das
sub
fidivrs
xorb
pop
sbb
sbb
pop
dec
cmp
addl
nop
push
fsts
inc
dec
xor
jg
cmp
inc
call
push
lret
in
adc
cmp
cmp
lcall
sbb
movsl
add
jno
cli
mov
mov
js
out
adc
outsl
adcl
cmp
cld
scas
ret
mov
fnsave
add
jmp
sti
and
cmp
inc
jmp
lock
cmp
jecxz,pn
testb
js
dec
cmpsl
icebp
scas
pushf
inc
mov
lret
bound
ljmp
subb
bound
mov
cmp
push
clc
movsb
cltd
shll
fisttpl
and
cmp
pop
loope
inc
dec
hlt
js
or
cmpsb
cmp
rcll
sub
out
ret
xor
lods
jns
or
mov
jmp
xchg
lcall
jmp
mov
push
mov
mov
pushf
out
push
jmp
push
stos
mov
loope
int
add
es
xor
cmc
test
add
push
mov
je
fcoms
fildll
and
cs
fcmovnbe
pop
sub
push
dec
push
mov
int3
jge
or
jmp
test
pop
push
jl
test
inc
repnz
lods
pusha
enter
cmp
int3
rol
arpl
xor
iret
sub
add
test
cmp
sub
addr16
and
sub
and
dec
pop
add
mov
test
mov
addb
cld
fidivs
mov
pcmpgtb
test
in
push
pop
test
cmpsb
mov
inc
cmp
dec
lahf
mov
push
mov
mov
pop
mov
pop
aam
mov
int3
jae
mov
arpl
ss
adcb
aas
pop
addl
rcll
xor
xorl
dec
jecxz
not
rorl
xchg
sbb
push
xchg
jg
lret
shlb
int
and
aad
cs
xchg
adc
imul
test
fwait
imull
add
lret
arpl
sbb
sahf
and
add
add
outsl
xor
push
out
inc
dec
icebp
and
xor
sub
inc
xor
pop
ljmp
mov
dec
enter
cmp
sbb
scas
test
ja
adc
je
adc
js
xor
in
ja
xlat
and
std
repz
not
imul
rcrl
test
cmc
add
rorl
es
pusha
pop
push
add
or
push
inc
cmp
adc
hlt
data16
rorl
and
mov
pusha
sbbb
xchg
or
repz
adc
sub
xchg
xchg
shll
lds
lret
movsl
mov
mov
cmc
mov
ficoml
cwtl
xlat
cmpsb
jo
ljmp
pop
mov
loopne
cld
in
jae
ljmp
pop
xor
mull
lcall
mov
push
sbb
mov
imul
xchg
lods
jle
not
and
and
outsl
jmp
call
dec
mov
mov
or
jbe
lcall
in
insl
and
decb
pushf
mov
xchg
sbb
sbb
sbb
adc
mov
movsl
mov
arpl
daa
rep
loop
je
or
int3
sbb
loope
xlat
inc
and
pop
or
cmp
popfw
js
stos
int3
jno
loope
mov
or
imul
imul
lret
jmp
test
loop
pop
inc
shl
jnp
pop
push
xchg
cmp
add
xchg
cltd
test
push
pusha
push
mov
cli
into
jle
sub
icebp
bound
xchg
scas
xchg
out
inc
daa
jg
lahf
xchg
in
ljmp
cmp
lea
push
dec
pop
cmp
mov
jl
cwtl
shrl
inc
outsl
push
jl
stc
or
inc
push
stos
inc
mov
out
inc
pop
je
loope
nop
pop
ja
add
jne
es
rcrl
pop
data16
sub
loop
push
ja
lret
mov
pop
adc
cmp
lea
adc
loope
push
xor
mov
jmp
les
insl
imul
adc
mov
gs
and
push
mov
sbb
pop
test
adc
cmp
lret
cwtl
popf
movsl
insb
add
insl
fucom
lods
push
cs
aam
and
push
or
inc
pop
inc
arpl
fadd
or
fdivs
sub
data16
mov
cmpsl
ljmp
repnz
movsl
or
cmp
nop
or
xor
test
lcall
and
xchg
adc
inc
xor
pop
sar
pop
push
lods
imul
ja
fcmove
and
xor
jno
jl
dec
outsb
mov
cmp
cmp
flds
and
or
into
add
sbb
push
stos
jo
mov
repnz
mov
lea
mov
jmp
jmp
sbb
lods
or
fisttpl
fimuls
out
test
fistpl
fdivl
jmp
movsb
adc
or
and
mov
mov
mov
dec
push
add
nop
data16
xor
mov
mov
push
xlat
fistpll
mov
sub
fdiv
inc
mov
in
fs
daa
scas
sbb
or
adc
mov
stos
adc
call
sub
push
sbb
or
jnp
into
mov
xor
pop
bound
jnp
imul
mov
cmp
ficoms
pop
adc
out
add
mov
cmp
or
sbb
push
sub
scas
das
push
imul
jp
jmp
movsb
sbb
mov
jae
cmpsb
xor
inc
loope
frstor
jp
aam
push
les
movsb
or
loopne
sbb
aaa
pop
leave
inc
stos
iret
in
mov
lods
in
mov
jg
popf
je
adc
inc
ret
scas
inc
das
push
scas
leave
xchg
or
push
mov
test
lahf
and
scas
insb
daa
jmp
xor
lret
testl
push
imul
ret
push
out
mov
mov
push
adc
mov
sub
xor
bound
pop
and
shlb
cmp
bound
in
cltd
or
pop
adc
push
mov
xchg
fldpi
lahf
lods
push
jnp
sub
sub
pop
or
ja
and
in
pusha
cmp
jo
mov
fstps
dec
mov
xchg
push
shrl
mov
add
push
movsl
mov
mov
or
ss
aad
js
or
push
pop
adc
jl
xlat
in
adc
push
mov
add
sbb
xchg
in
sbb
in
clc
sbb
sti
in
and
add
and
dec
stc
cmp
xchg
lods
repz
xchg
sub
pushf
pusha
fwait
sti
jmp
mov
shll
sbb
mov
cmp
adc
in
sbb
fists
fstpl
in
cmp
push
inc
fbld
dec
outsl
mov
xor
mov
shrl
mov
xchg
roll
jne
inc
mov
ss
dec
mov
dec
jl
jmp
jge
aas
pop
std
or
or
stc
sub
xchg
adc
xor
sahf
js
fldt
popf
adc
gs
lea
dec
std
cmpsl
sti
xlat
cmp
sarl
lret
dec
addl
mov
mov
cmp
inc
fiaddl
jg
or
cmpsb
pop
add
loope
cwtl
mov
inc
push
dec
cmpsb
rcrb
jo
ficoml
jl
cmp
loopne
jecxz
mov
clc
mov
aas
or
jl
inc
mov
les
push
mov
mov
imul
add
sbb
xchg
sub
sub
cmpsb
pop
pop
fs
dec
jo
jne
mov
jno
and
int
xor
sub
sub
and
sub
std
jl
jp
pushf
int3
out
pop
push
jnp,pn
add
mov
add
dec
sub
lods
in
sbb
ret
cmp
ret
rcrb
aaa
sahf
shrb
xchg
lahf
mov
mov
or
jmp
xor
mov
cmp
sbb
dec
mov
imul
sahf
add
rorb
out
push
mov
icebp
ds
mov
int3
sub
das
lea
mov
pop
das
sub
mov
ret
iret
xor
stos
sbb
add
ljmp
push
and
ficomps
push
push
testl
mov
insb
adc
or
rep
je
jb
xlat
add
bound
popa
imul
inc
mov
in
inc
out
fistps
out
mov
iret
pop
bound
push
pusha
pushf
and
out
sub
pop
out
jle
jns
push
jo
int
icebp
or
sbb
loop
lcall
and
scas
les
mov
inc
sub
mov
cmp
pop
mov
fadd
cmp
push
dec
and
adc
xor
inc
push
inc
ret
and
faddl
movl
into
mov
or
into
or
mov
jae
in
mov
sbb
andb
and
pop
ljmp
dec
test
rcll
mov
cmc
mull
and
fs
test
sbb
aad
sub
adc
vpunpcklwd
outsl
ficoml
dec
sti
adc
mov
int
jno
and
stos
xchg
xor
adc
fs
add
cwtl
pop
fcoms
mov
movsb
lcall
aam
cmp
add
out
popa
xchg
push
es
repnz
ret
sub
roll
jmp
pop
adc
jbe
bound
in
push
andl
inc
mov
mov
mov
jae
repz
xchg
nop
mov
xchg
shl
add
adc
out
xchg
mov
jle
or
pop
hlt
sub
adc
pop
push
xchg
stos
jmp
mov
jg
ret
out
mov
mov
xchg
mov
shrb
fimuls
aad
je
es
sub
stos
fsub
nop
sub
adc
dec
xor
lock
or
addr16
mov
sub
imul
adc
les
sub
cmpsb
mov
sbb
jp
push
cld
sub
test
push
inc
addr16
dec
mov
and
fisttpll
paddusb
xchg
aas
sub
dec
mov
aam
shlb
cwtl
xor
or
je
nop
xchg
mov
push
add
push
or
imull
jno
mov
movsl
mov
sub
and
repz
aas
pop
lcall
inc
push
imulb
imul
in
add
lock
and
adc
dec
cmp
pushf
push
dec
sbb
inc
movsb
mov
inc
mov
jp
sub
jmp
mov
sbbb
stc
and
out
and
cmpsb
outsl
dec
ds
dec
xor
cmp
and
jmp
push
mov
lea
mov
pop
addr16
mov
pop
out
js
xchg
pop
loopne
mov
into
cmp
out
sub
icebp
pop
dec
adc
pop
xor
mov
sub
in
fisttps
push
popa
push
movb
out
xlat
fs
cmp
fistl
push
xchg
add
cwtl
pop
jl
in
inc
jbe
push
mov
add
stc
bound
mov
ja
mov
int
ds
inc
shrb
inc
jecxz
adc
lcall
xor
sub
aad
or
xchg
cmc
fldl
mov
aam
mov
les
xchg
jecxz
pop
adc
fs
enter
or
push
out
xchg
pop
add
mov
inc
into
jbe
and
je
xor
rcrb
pop
inc
in
int3
mov
dec
xor
scas
test
pop
pop
fs
mov
push
mov
int
mov
fiaddl
jl
test
sti
popl
fbstp
jl
sbb
inc
repnz
cmc
sbb
mov
ja
jmp
sbb
cli
movsb
les
sub
push
xchg
jge
jmp
push
sub
clc
cld
ret
insl
aad
cltd
xchg
test
dec
dec
lea
fidivl
sub
addr16
ret
ds
sub
lcall
pop
jle
mov
sub
push
pushf
sub
pop
push
pop
pop
sub
push
inc
and
pop
out
repz
pop
std
gs
inc
mov
adc
sub
ljmp
dec
iret
mov
jmp
sub
lret
fstl
dec
stos
pop
xlat
addb
lea
in
scas
xor
sahf
dec
inc
dec
mov
add
jns
pop
leave
dec
push
xor
mov
mov
outsl
and
mov
push
jg
jae
lret
pop
mov
mov
jle
dec
push
xchg
dec
mov
loope
push
inc
daa
leave
in
jmp
cmc
pop
jnp
adc
and
scas
dec
shrl
shlb
mov
insl
jge
jle
aas
in
ljmp
pop
add
flds
inc
in
fisubl
mov
cltd
outsl
ret
xor
xor
adc
je
loopne
arpl
fcompl
ret
cmp
mov
shrl
ss
shlb
sti
lods
rorl
and
sub
sub
adc
mov
popf
push
jge
push
sbb
and
pop
jmp
xchg
pop
scas
lods
inc
ror
ret
divl
add
push
jo
mov
adc
in
das
outsl
jp
aaa
mov
loopne
and
jnp
inc
and
pop
sbb
mov
xchg
gs
rclb
mov
mov
test
adc
add
jne
stos
adc
push
stos
iret
sti
cld
faddl
mov
sub
lcall
or
jo
cmp
in
fisttpll
adc
xchg
xor
mov
xchg
cltd
sub
fldt
push
loopne
push
adc
dec
in
push
push
push
sbb
call
cmp
movl
push
aam
stc
mov
xor
lret
cltd
mov
pop
sbb
push
fcoms
cmp
outsb
les
xchg
hlt
arpl
in
jns
inc
std
add
ljmp
cmpsb
ss
subl
and
frstor
idiv
sarl
adc
roll
xor
xchg
mov
inc
mov
cld
jbe
fnstsw
cmpsl
cmp
cwtl
in
cltd
cmovle
into
dec
jmp
inc
sub
cld
adc
xchg
jmp
sahf
push
sub
arpl
or
jb
lahf
adc
sar
cld
incl
sub
lcall
mov
sub
jnp
sti
xor
adc
pusha
stos
mov
and
test
and
test
push
mov
sbb
stos
sub
arpl
dec
dec
jnp
xchg
fsubrl
mov
imul
lods
sbb
mov
jp
dec
xchg
inc
rorl
add
cmova
fdivrs
js
clc
jmp
es
adc
pop
adc
jmp
cmp
leave
aas
mov
out
in
ljmp
jbe
in
movsl
sbb
popa
imul
out
and
into
out
lds
mov
hlt
int3
inc
mov
call
mov
pushf
loope
aad
insl
dec
shrb
sub
inc
mov
in
testb
adc
cli
lock
add
sbb
notl
pop
aad
nop
pop
inc
dec
mov
call
jo
fistl
and
pop
fxch
das
pop
cmpsb
dec
add
fucomip
dec
das
shl
fisubl
adc
and
push
in
adc
push
inc
sbb
les
mov
cmp
push
in
fisubl
popa
pop
stos
add
sbb
stc
push
out
xor
ds
fmul
xor
shl
imull
dec
mov
rol
pop
aas
test
push
and
mov
cmpsl
fildll
aad
ds
int
mov
cwtl
adc
mov
and
std
dec
ljmp
sbbl
jo
cmp
bound
loopne
add
mov
sti
or
jge
push
jne
xchg
ret
xchg
fwait
inc
mov
call
rcrb
push
stos
bound
ret
or
sbb
dec
sarb
xor
js
lds
js
lahf
push
bound
mov
inc
inc
mov
mov
int
rol
les
rorl
cmp
jnp
cld
dec
sahf
ljmp
rorl
stos
or
movsl
js
das
push
mov
fldcw
xchg
adc
roll
lea
cli
mov
int
aam
je
fs
cmp
stos
sahf
out
push
int3
aas
std
and
loope
sbb
decb
shl
mov
cld
ficoml
jns
and
adc
push
xchg
fcomip
add
movsb
inc
jmp
loopne
sbb
repz
movsb
test
mov
fstl
ja
addr16
mov
in
pop
mov
pop
inc
push
scas
jne
test
cltd
movaps
rcrb
fnsave
iret
push
outsl
idivl
jnp
mov
xor
inc
inc
inc
notl
lea
jnp
stc
into
mov
adc
negb
mul
push
pop
shr
inc
jg
or
scas
mov
popf
psubb
iret
pop
inc
repnz
scas
mov
mov
js
nop
xchg
or
stc
push
in
jnp
dec
push
mov
hlt
jl
lds
ret
or
arpl
mov
cld
repnz
mov
lock
les
decb
leave
xor
and
pop
lahf
dec
xchg
rorb
mov
fsubs
mov
ss
inc
movsl
sahf
cmc
push
or
ret
test
jp
jnp
and
fwait
in
out
add
shld
dec
imul
dec
sub
jl
pop
xchg
push
dec
mov
fisttpll
in
imul
cs
rcll
les
leave
inc
mov
and
and
pop
in
mov
pop
adc
jp
dec
fsubs
iret
xchg
out
push
shrl
in
test
cld
insl
push
pop
fs
xchg
dec
add
pop
dec
std
xlat
mov
orl
shlb
mov
popa
sbb
iret
test
pop
inc
pop
mov
xchg
clc
sbb
rcl
xchg
call
dec
ds
cmpsb
inc
data16
adc
in
rcll
loopne
jnp
pop
add
into
or
fdivl
insl
mov
dec
and
adc
in
test
push
adc
xchg
mov
cmp
inc
jbe
pop
push
cltd
mov
push
jns
xchg
ficompl
fistpll
int
mov
xor
fwait
mov
outsl
int3
sbb
xor
imul
sub
sub
mov
fsubrs
movsb
mov
xor
test
inc
jge
inc
shlb
and
adc
push
adc
ljmp
push
or
fwait
lcall
jbe
mov
dec
dec
loop
mov
xchg
fdivp
hlt
cmc
aam
shl
or
jle
mov
sahf
shll
fldenv
mov
mov
xchg
arpl
pop
in
scas
jmp
test
test
cltd
loop
sub
cwtl
aas
xchg
mov
popf
idivb
xchg
xchg
sbb
xor
insl
pop
int3
sbb
inc
je
xor
add
out
xor
mov
fsubrs
cmpsl
js
inc
xor
dec
push
inc
xor
jae
arpl
or
lods
clc
cmp
stos
sti
push
int
push
int3
clc
xor
cmpsl
hlt
inc
cmp
sbb
call
mov
ficoml
ja
sub
mov
arpl
xor
test
js
mov
pop
or
rclb
mov
les
inc
movsl
dec
mov
in
lcall
in
dec
loopne
sub
clc
in
mov
pop
inc
shlb
std
adc
in
imulb
in
lret
lock
mov
push
hlt
lea
arpl
cmp
cmp
rolb
js
jne
sbbl
mov
test
subl
scas
xchg
and
mov
dec
jno
daa
js
xchg
xor
imul
mov
adc
pop
mov
lock
test
lahf
pop
sub
jb
sahf
hlt
xor
dec
je
lds
mov
repnz
dec
pop
inc
test
or
and
inc
adc
loop
call
movb
inc
sahf
dec
mov
int3
push
dec
pushf
adc
pop
adcl
lahf
jecxz
gs
add
ljmp
jmp
cmpl
outsl
inc
cmpsl
stc
pop
pop
jbe
inc
mov
jo
mov
cmpsl
imul
test
adc
shrl
pop
call
xchg
jle
clc
fisubrs
push
and
insb
jl
fmull
add
push
cs
scas
jle
mov
mov
mov
aad
dec
sub
push
icebp
jno
dec
es
xor
xchg
clc
cmpsl
or
push
rorb
jb
or
insl
and
xchg
in
mov
jge
mov
rorl
xor
cmp
dec
sbb
xchg
mov
xchg
dec
ja
mov
cwtl
in
scas
mov
mov
fidivrl
shll
adc
xchg
mov
ja
movsl
pop
pop
movsl
outsl
divl
int3
into
loope
popf
cli
insb
inc
xor
push
push
leave
mov
xor
jb
pop
sub
push
inc
sbb
imul
and
adc
movl
test
loope
in
cmp
push
ss
pop
inc
xchg
sbb
std
jns
jae
loop
cmp
inc
mov
mov
ds
lods
iret
fdivp
mov
aaa
das
dec
movsb
lods
movsb
arpl
daa
mov
or
in
mov
ja
sub
xor
lret
or
push
pop
xchg
sub
and
cld
cmp
adc
push
cwtl
repz
rolb
pop
in
lea
sub
fidivl
xchg
xor
dec
jo
push
lds
inc
mov
shll
lret
and
xor
mov
pop
push
stos
xchg
pusha
or
mov
hlt
mov
mov
mov
push
lea
mov
pop
fstpt
ficoml
mov
xchg
push
xor
pop
xchg
cmp
stc
cmp
test
add
or
popf
sbb
dec
xchg
adc
bound
mov
popa
fsubl
jb
jno
jns
mov
sbb
adc
adc
loop
ja
imul
lock
imul
popf
adc
icebp
dec
mov
test
pop
jno
inc
repnz
adc
mov
jae
sub
jns
mov
fs
adc
inc
out
mov
inc
sub
cmp
ja
lret
shrl
and
adc
lret
xor
adc
scas
aas
loop
mov
sarl
sahf
pop
insl
add
and
sahf
xchg
test
in
mull
es
sbb
pop
movl
mov
call
insb
mov
loopne
addr16
xor
leave
sbb
lods
es
add
adc
dec
in
or
mov
imul
xchg
mov
leave
mov
adc
push
adc
stc
mov
jae
aam
and
jnp
mov
ret
mov
lret
xchg
sbb
ficomps
inc
and
push
sbb
jbe
push
in
fdivp
adc
sarl
sub
mov
mov
repz
add
out
pop
mov
sarb
add
sbb
add
push
sub
movsb
je
jge
pop
pop
insb
or
jp
aas
jle
aaa
push
push
cmpsl
call
sbb
jb
and
test
lods
push
out
xor
cmp
mov
mov
cltd
inc
shrl
je
push
sbbl
pop
out
mov
ret
sub
shl
sub
cmpsb
and
inc
movsb
test
out
fimuls
test
cmpsl
iret
sub
iret
xor
xchg
dec
cmp
ficompl
dec
sub
push
inc
mov
mov
orb
mov
cld
idivl
push
aaa
pushf
cmp
mov
xchg
hlt
and
dec
and
outsb
repz
out
cwtl
inc
jecxz
leave
xor
rcll
cmp
addr16
add
pushf
in
inc
add
adc
enter
popa
test
xor
dec
test
jmp
jmp
push
mov
movsb
and
and
in
sbb
push
mov
mov
dec
lcall
insb
scas
icebp
push
out
lahf
sbb
xchg
mov
xor
sbb
test
das
in
loope
add
inc
imul
ss
frstor
fsubr
out
jb
iret
stos
sahf
pop
push
push
pop
in
cmp
pop
cltd
inc
and
in
pop
add
loop
mov
popf
mov
jp
adc
cwtl
pusha
aam
imul
ror
pop
fnstenv
insl
lock
push
leave
sbb
out
cli
sub
push
fbstp
mov
test
loop
adc
sub
adc
xchg
lock
jbe
or
sar
ret
mov
cwtl
xchg
mov
cmp
mov
and
adc
inc
pop
sbb
in
rclb
sti
and
sbb
adc
jne
sbb
test
jae
mov
or
push
or
rol
lock
xchg
fistpll
dec
mov
mov
loope
push
inc
push
out
outsb
sub
dec
dec
or
fwait
add
popw
push
sarl
pop
rclb
mov
dec
jmp
add
popa
jae
xchg
mov
jbe
sbb
sbb
ljmp
into
ret
js
add
mov
cmp
xor
mov
xchg
ret
xor
adc
test
pop
xlat
je
in
lods
adc
cmpsb
push
sub
pusha
aas
out
shl
imul
add
test
jno
aaa
pop
mov
push
adc
add
fnstcw
call
mov
push
cmpsb
rcrl
nop
cmp
or
and
pop
vshufps
shll
push
addl
adcl
sbb
ret
pushf
dec
aam
pop
fnsave
or
push
hlt
pushf
add
adc
aam
jmp
bound
fucom
gs
dec
mov
xchg
sbb
aam
jb
in
sahf
lcall
and
loopne
into
fwait
outsb
ljmp
fstps
lds
mov
out
popa
hlt
mov
dec
fidivl
pusha
pop
mov
jnp
lret
cmp
pop
cli
aaa
js
push
sbbl
sub
movsb
sarb
popf
xchg
xor
fcompl
and
dec
mov
mov
in
dec
pop
test
push
out
test
lcall
xlat
imul
mov
push
jle
je
adcl
loope
mov
neg
push
cmpsb
fucomip
cwtl
data16
push
pop
sbb
ja
xchg
inc
and
inc
cmpb
imul
xchg
daa
lea
mov
mov
rclb
dec
insl
mov
dec
sbb
jl
arpl
cmp
shlb
jmp
data16
scas
pop
push
test
dec
pusha
out
mov
xchg
mov
inc
arpl
cmp
arpl
lds
cwtl
lret
add
imul
ret
rorb
in
dec
push
sub
shrb
adc
push
rcll
mov
pop
in
dec
test
out
imul
loope
es
aad
mov
lret
xor
mov
mov
inc
xor
sarb
lret
pop
add
call
mov
inc
sbb
mov
jmp
add
aad
shl
hlt
rep
mov
xchg
sub
and
add
cmp
ret
in
fwait
cmpsb
inc
iret
push
and
inc
jl
push
gs
roll
stos
out
sar
scas
out
lahf
mov
mov
je
xor
xor
dec
cmp
int3
sbb
lea
mov
movb
pop
sahf
push
clc
mov
cli
out
addr16
shll
jmp
shr
mov
mov
lock
cmpsb
lcall
adc
add
andb
in
cmpsl
adc
lahf
inc
and
xchg
xchg
mov
cmc
xor
sahf
push
daa
popf
cld
test
sbb
or
dec
dec
data16
jl
add
lret
out
xchg
fadds
xchg
push
test
cmp
sbb
aam
int
pop
jne
notl
inc
inc
sbb
lods
mov
push
push
push
inc
mov
add
std
sbb
xor
in
bnd
dec
mov
es
ljmp
pop
popa
mov
cmp
ficoms
test
stc
mov
pop
sbb
dec
adc
lcall
repnz
dec
pop
sbb
sub
pop
enter
aad
andb
lods
mov
xchg
mov
outsb
neg
lahf
cli
mov
jge
in
cli
xlat
je
out
ds
mov
push
dec
or
dec
stc
xchg
ret
mov
jno
xor
popf
decl
gs
inc
jns
pop
jae
inc
ds
xor
orb
test
inc
xchg
cmp
mov
repz
mov
ljmp
scas
mov
dec
adc
push
addr16
jmp
into
test
insl
or
dec
push
out
xchg
mov
aad
ds
sahf
mov
out
in
out
xchg
cmp
pop
mov
lea
cmpsl
lods
push
lods
jno
test
rep
mov
mov
sbb
cmp
fnstenv
xlat
mov
fsubl
mov
sahf
pusha
comiss
popa
push
lock
and
fsubr
xchg
push
jl
mov
iret
jne
in
int
lret
jg
push
sub
dec
cmp
loop
stc
int
scas
sub
test
jg
cmpsb
scas
push
adc
mov
in
mov
sub
mov
es
sarl
mov
add
ljmp
sub
jae
mov
mov
or
pusha
out
mov
xor
pop
in
lock
inc
flds
subl
jnp
and
lds
mov
push
test
sti
pop
outsb
pop
inc
js
add
pop
in
rcrl
inc
mov
outsl
push
in
cmp
xchg
sub
pusha
lock
cld
repnz
cmp
dec
adc
xor
ss
loope
stc
push
jno
sbb
jb
jbe
out
into
call
ljmp
repnz
xor
sbb
scas
sbb
push
inc
sub
sbb
insl
push
hlt
cmpl
arpl
fsubl
and
stc
inc
adc
test
jo
pop
push
imul
jmp
js
inc
lcall
loop
jle
push
inc
fnstcw
popf
xchg
push
scas
jmp
icebp
and
out
jnp
fdivrs
inc
sbb
cld
and
jp
aaa
mov
lret
inc
imull
mov
loope
xchg
in
jge
inc
inc
hlt
lret
addr16
loopne
stos
cs
pusha
jle
jne
mov
xor
hlt
inc
add
jne
jecxz
in
cli
enter
mov
mov
inc
sbb
je
push
sub
and
mov
pop
pop
mov
pushf
xchg
dec
and
xchg
mov
jl
xchg
dec
mov
adcb
cld
bound
lret
rcrb
jecxz
xchg
std
loope
adc
dec
jne
push
sbb
imul
fwait
inc
icebp
test
lods
mov
loopne
xor
adc
lods
adc
aad
cmp
lods
aaa
fcomps
arpl
dec
out
push
iret
or
ret
xchg
into
jmp
dec
stc
dec
outsb
int3
arpl
xchg
scas
jle
or
sub
mov
jmp
icebp
push
lahf
pop
pop
mov
pop
mov
lds
jle
cmp
mov
setp
push
cmc
ja
aas
movsl
filds
and
or
cmpsb
les
xor
mov
jp
in
jmp
repnz
orb
inc
loope
test
sarl
mov
xchg
xor
icebp
xchg
jne
xchg
sbb
std
cs
sbb
inc
lods
cmp
bound
inc
cmpsb
shll
mov
jle
push
pop
mov
jb
out
stos
popf
lea
outsb
ror
cmp
mov
js
outsb
jecxz
push
cs
pop
xchg
xor
out
dec
sbbb
xor
adc
sub
add
arpl
in
hlt
rorb
loop
in
or
inc
imul
cmp
jno
cmc
mov
xchg
outsb
imul
push
mov
ss
add
movsl
rorl
lock
mov
movl
and
bound
sub
popa
insb
sbb
xchg
xor
cli
push
repnz
push
lcall
xchg
cli
sbbb
add
icebp
push
xchg
in
pop
cmp
fbld
push
jecxz
pop
in
xchg
adc
push
sub
sahf
mov
mov
lea
xchg
es
ljmp
insb
xor
sub
adc
repnz
roll
subl
mov
push
clc
and
jg
adc
ffreep
int
push
enter
cmp
out
xchg
mov
sbb
addr16
aaa
or
sti
popa
stos
jg
mov
and
insb
lret
jno
sub
ret
dec
dec
mov
repnz
add
mov
mov
inc
shlb
and
adc
aam
cmpsb
int
or
mov
sbb
jo
insl
adc
cmpsb
adc
mov
inc
dec
or
fucom
mov
sub
je
out
sbb
push
mov
pop
mov
inc
dec
jb
rclb
pop
jns
jecxz
jg
repz
pop
sbb
pop
cmp
dec
cmp
or
jbe
jns
add
pop
dec
adc
add
in
out
mov
and
fstpt
xchg
imul
mov
and
sahf
push
xchg
test
push
das
xor
lea
mov
and
add
inc
mov
inc
cmp
movsb
scas
fdivrl
sahf
fimull
xchg
fdivl
sbb
movsl
adc
in
inc
jns
mov
dec
data16
cmp
jge
mull
arpl
insb
push
fbstp
mov
loopne
mov
shll
ss
add
ret
mov
scas
inc
add
out
adc
lods
mov
rcr
sub
dec
pusha
pop
and
bound
jge
mov
aas
push
jne
cmpsl
imull
or
ja
shlb
into
lods
mov
inc
or
and
mov
in
movsl
rcll
outsl
rorl
ficomps
inc
jbe
mov
rcrb
mov
fld
lods
cmc
and
mov
cmp
mov
ret
lods
jle
xchg
ret
xor
shrb
push
les
insb
notl
in
add
lock
cmp
jle
jb
shl
inc
xor
scas
xchg
inc
add
inc
repnz
imul
nop
les
xchg
dec
mov
inc
cli
scas
les
pop
aas
jns
out
sub
sbb
fwait
in
jns
dec
and
loop
mov
adc
inc
popf
in
xor
loope
lahf
test
push
popf
add
dec
xchg
sbb
or
popf
xor
movsl
push
sahf
cld
aaa
pop
mov
gs
dec
adc
scas
loop
inc
adc
into
mov
ljmp
mov
out
push
les
imul
dec
lret
xchg
scas
xor
jg
inc
jno
into
mov
add
add
mov
decl
xchg
lahf
push
mov
pop
mov
cmc
mov
inc
push
mov
mov
push
or
pop
mov
int3
pop
pop
cmp
mov
jns
xor
addr16
stc
sbb
faddl
xor
sbbb
gs
js
loope
es
xchg
ret
scas
jno
mov
scas
iret
jno
push
cmp
insl
imul
cmpsl
cmp
push
pop
xchg
inc
inc
lcall
popa
loope
leave
enter
in
dec
rorl
int
inc
mov
outsl
mov
mov
dec
movsb
push
and
daa
mov
jns
cmp
decl
and
fdivrl
mov
mov
mov
dec
cmc
mov
ficomps
lods
stos
push
sub
lds
dec
nop
mov
add
sbb
mov
xor
jecxz,pt
xchg
pop
pop
inc
shlb
sub
nop
es
imul
movsb
pop
popa
test
pop
mov
push
out
enter
push
test
mov
dec
adc
shlb
les
adc
fldenv
ds
dec
pop
jmp
ret
orl
jg
pop
sbb
push
and
cmpsl
insb
inc
pop
test
lcall
pop
shl
cmc
ret
and
inc
jle
xlat
out
jbe
cmp
aam
jns
sbb
and
fs
aad
mov
sahf
add
adcb
sub
push
jle
dec
add
fsubs
jmp
pop
in
dec
cmp
add
sbb
in
push
sub
ret
and
pop
out
fmull
cmpsl
jge
add
test
nop
repz
mov
in
jmp
mov
fiaddl
or
xchg
sbb
pop
in
cmc
call
loope
dec
ljmp
dec
ret
movl
or
repnz
cmp
mov
aam
inc
repnz
cmpl
cmc
nop
arpl
loopne,pn
cmp
pop
mov
test
pushf
cmc
mov
push
pop
test
dec
jp
ss
xor
mov
cmp
pop
pop
cmp
scas
mov
push
test
lea
xchg
insl
mov
jb
adc
sbb
sub
popa
lods
rcrb
pop
subb
jg
push
xor
mov
cld
and
mov
pusha
aas
aaa
xchg
pop
hlt
mov
dec
mov
scas
stos
pusha
and
cmp
inc
and
push
cmp
add
out
jmp
rolb
xchg
lds
lcall
shlb
jne
cmp
mov
bound
mov
xchg
mov
xchg
insl
cmp
mov
mov
mov
mov
mov
lahf
jae
loope
stos
xor
add
push
xor
aam
out
push
and
push
lods
sub
insb
andb
in
in
jo
pop
jbe
stos
inc
xchg
fdivl
xor
in
inc
pop
fiaddl
shlb
mov
fisttpll
rolb
adc
std
inc
test
mov
scas
filds
push
ljmp
aam
fidivl
icebp
out
or
cltd
into
cmp
push
scas
jge
orb
cmp
lods
dec
add
mov
mov
inc
push
and
call
pusha
cwtl
jg
mov
sub
imul
fdivp
gs
xlat
lock
ja
jg
mov
or
xchg
mov
jge
pop
sbb
rcrb
data16
outsb
xlat
pop
test
loopne
pop
push
mov
and
xchg
adc
sbb
xor
push
fcomps
sbb
or
sub
push
jg
scas
add
lret
into
mov
lea
jbe
lcall
sub
xlat
mov
push
xor
xchg
pop
and
mov
in
dec
mov
fcompl
add
cmpsl
ja
pop
sbb
adcl
adc
fiadds
test
or
and
in
adc
and
push
loopne
mov
js
dec
cli
test
rcrl
cmp
call
mov
gs
pusha
xchg
loope
push
int
lahf
mov
adc
mov
push
jbe
and
jne
inc
mov
test
mov
pop
fisubl
jp
stc
mov
stc
mov
pop
pop
pusha
xchg
pusha
addb
ja
sub
mov
mov
std
mov
pop
xchg
xchg
repnz
sahf
jb
xchg
jge
out
in
pop
and
dec
adc
call
jb
cld
stc
int3
andl
xchg
pop
clc
nop
dec
rcrb
jecxz
sbb
adc
cmc
xor
aam
mov
xor
in
inc
lret
jle
mov
add
pop
inc
dec
cmp
sarb
fwait
loopne
or
or
mov
mov
push
mov
mov
mov
xchg
pop
jnp
dec
lods
ret
mov
lock
add
nop
push
enter
insb
mov
stos
test
gs
dec
inc
es
add
aas
dec
test
mov
lea
lret
test
testb
mov
ljmp
inc
repnz
shrl
mov
insb
or
jns
and
or
inc
cltd
stos
nopl
push
sub
jmp
dec
pop
cwtl
imul
aas
cltd
sub
inc
dec
out
test
or
xchg
jmp
imul
aas
fists
in
fwait
into
mov
mov
adc
xor
dec
movsl
jo
ja
xor
sbb
leave
push
fidivs
lea
and
in
fstpt
adc
out
orb
scas
int
fcmovnb
aad
fldcw
jle
inc
stos
xchg
in
adc
stc
sbb
rorb
subb
and
xor
mov
mov
xchg
sub
in
rolb
cmp
add
inc
jae
fisttps
daa
adc
push
cmpsb
cmc
clts
jl
les
pop
add
enter
popf
iret
repz
xchg
xor
sub
and
inc
scas
mov
popl
ljmp
fcmovu
adc
decb
mov
mov
mov
bound
ret
aas
jno
sub
jmp
sbb
lds
jo
jg
notl
cld
push
sbb
data16
fucomp
sub
outsl
pop
pop
mov
fstpl
add
and
dec
divl
jns
int3
lcall
bound
inc
ffree
mov
jae
rorl
push
xor
lods
inc
in
mov
rclb
idiv
sahf
and
popa
addr16
popa
mov
or
inc
les
ffreep
push
rorb
into
mov
inc
lahf
or
out
nop
ret
cmp
outsb
mov
fdivr
mov
sub
push
push
es
inc
clc
pop
es
test
adc
mov
lea
sub
xor
mov
mov
dec
jmp
out
sub
imul
cli
cld
lods
cmp
adc
rcr
notl
fs
call
nop
pop
cmp
inc
sbb
stos
lcall
in
mov
rorl
std
xor
out
and
mov
rol
xchg
lea
adc
out
sbb
fistps
dec
jmp
dec
push
sbb
sahf
cmpb
push
jno
shrd
jmp
lahf
les
or
sub
std
scas
mov
mov
inc
je
enter
add
dec
fisubl
cmp
roll
sbb
adcb
shll
jle
in
jmp
fsubr
repz
push
pop
sbb
cmp
outsl
jge
add
cld
rorl
pop
pop
and
stos
cli
test
lods
in
add
je
pop
fiaddl
sub
sbb
aaa
and
enter
lds
sub
test
adc
sbb
adc
add
shlb
sbb
int3
es
scas
int3
mov
xor
rcrl
push
sub
jb
xor
iret
popa
adc
adc
aam
aaa
add
push
push
cmp
ficompl
mov
push
icebp
jg
scas
jecxz
divl
ljmp
dec
cltd
xlat
jae
std
popa
lret
mov
daa
out
sahf
dec
ficompl
push
fstpt
pop
insb
stos
add
mov
mov
xchg
cmpsl
xchg
adc
rclb
nop
fdivrs
ret
xchg
es
sub
sbb
push
iret
ss
push
cmp
mov
test
aaa
mov
cbtw
and
and
lods
xor
ja
fildl
cs
jg
mov
push
xlat
mov
js
das
push
pop
insb
sub
jge
fs
sahf
ljmp
les
out
lods
icebp
jno
mov
mov
cwtl
and
push
shrl
sti
jle
stos
pop
push
and
iret
data16
jo
sti
aaa
aam
dec
addr16
out
insl
mov
inc
lret
stos
ss
sbb
rol
ret
push
in
mov
or
aam
jecxz
lods
ret
pop
mov
mov
cmp
add
xchg
pushf
cmp
add
or
sahf
pushf
xor
popa
sar
and
adc
fdivp
dec
addl
mov
dec
xchg
test
xor
and
jne
mov
xchg
or
ror
xchg
lea
int3
lahf
shlb
inc
xchg
out
in
roll
scas
push
inc
pop
and
inc
or
aas
mov
jno
lods
stos
add
fs
adc
push
xlat
mov
addb
stos
in
mov
and
pop
cmp
cmp
mov
push
out
cmc
mov
les
stos
mov
bound
push
aam
jno
shr
cmp
imul
jo
push
cmp
xor
test
out
mov
jg
enter
cmpsl
cmp
add
stos
push
lcall
mov
test
pop
rcrb
xor
hlt
inc
xor
mov
fistl
outsl
cld
into
mov
xchg
fninit
add
out
lods
stos
jmp
pop
and
fisubs
into
jg
ja
ljmp
enter
xor
sbb
pop
shlb
test
and
dec
and
sbb
rolb
fidivrl
and
push
lret
adcl
std
push
mov
shrb
and
das
cld
stc
fists
jae
mov
sbb
movsl
mov
test
shl
ljmp
stos
out
jmp
int
cwtl
iret
add
or
push
aas
sbb
imul
gs
test
sbb
adc
add
adc
arpl
enter
mov
mov
inc
insb
cld
cmpl
rolb
xlat
test
addr16
xor
sti
or
mov
sbbb
sbb
cmp
jo
imul
cltd
inc
iret
lar
sub
lret
ss
test
cld
movsl
insb
loop
int3
jmp
jg
leave
iret
adc
mov
pop
add
dec
adcb
mov
sbb
mov
jo
pusha
das
rcl
mov
ja
xor
add
clc
sbb
fwait
sub
xor
add
mov
push
jecxz
testl
dec
inc
mov
hlt
test
movsb
mov
in
inc
lods
fwait
mov
cmp
sub
mov
leave
cmpl
mov
rclb
add
inc
jae
jb
xchg
pop
xchg
mov
std
mov
pop
imul
push
test
addr16
pop
aad
or
aad
mov
mov
sub
pushf
mov
sbb
push
dec
loopne,pt
jno
or
ds
cs
dec
push
fcoms
sbb
inc
mov
sbb
xchg
fs
dec
loope
pop
cmpsb
in
test
add
dec
dec
sbb
xchg
mov
outsl
nop
inc
cmp
jne
in
mov
popf
bound
cmp
nop
pop
cs
int3
mov
xor
cwtl
insb
fcompl
movsl
mov
fld
add
jns
push
xchg
cmp
xor
cmpsb
mulb
shl
les
jge
or
and
and
or
pop
lret
xchg
push
iret
mov
test
xchg
xchg
and
divb
int
add
jns
jle
cmpsb
jmp
test
scas
push
push
jnp
sbb
mov
je
dec
aam
les
addr16
sbb
loope
mov
call
jge
cli
mov
ljmp
pop
insb
jl
stos
insb
jle
popa
adc
into
pusha
or
std
ljmp
lret
push
push
std
xchg
rclb
add
ret
mov
shll
out
jle
mov
and
push
test
setne
xchg
push
lret
jo
data16
js
jge
mov
xchg
mov
shlb
gs
mov
xor
and
enter
jo
cmc
push
fistpl
or
push
sbbb
xchg
or
cmc
pushf
loopne
mov
inc
adc
aaa
and
xor
cmp
fbstp
mov
push
jno
leave
cmpl
or
aaa
cmp
js
cli
push
mov
mov
mov
and
repnz
enter
mov
bound
pusha
adc
test
add
xchg
jnp
rcrb
aas
in
ret
addr16
fists
jns
sbb
cld
pop
aas
rol
addr16
mov
dec
incl
enter
add
enter
push
jne
nop
cs
popa
sbb
outsl
imul
imul
push
jle
xchg
xor
sbbl
pop
mov
mov
cpuid
sbb
adcb
outsb
pop
ljmp
xchg
jp
cmc
push
inc
pop
inc
cmpsb
sub
lods
mov
in
sbb
push
xor
popl
and
add
inc
jne
test
xchg
dec
es
cmp
add
ror
movsb
ror
insb
mov
mov
insl
jns
repnz
xor
pop
outsl
sbb
sar
or
push
in
xchg
fiaddl
das
cli
xchg
xor
inc
insb
push
cmc
mov
xchg
dec
fcmovnbe
stc
sbb
sub
jg
jne
pop
or
push
jp
push
lods
cmp
in
cmp
xor
mov
cltd
xchg
mov
or
sub
inc
dec
xchg
mov
cs
pop
mov
push
iret
fwait
xchg
outsl
jecxz
imull
mov
dec
sub
fistl
dec
dec
lock
aam
inc
repz
xchg
jge
push
lea
lods
sbb
unpcklps
pop
pop
cltd
not
adc
loope
mov
ss
mov
sti
daa
pop
loope
sub
jnp
mov
mov
lcall
inc
and
dec
and
insb
or
imul
fwait
cmp
icebp
std
dec
outsl
lods
pop
inc
mov
push
xlat
inc
cli
loop
xor
test
mov
aaa
stos
push
cmpb
rcr
cmp
xor
dec
xchg
shlb
test
lods
add
pop
sbb
xchg
ljmp
and
push
scas
xlat
pop
sbb
into
scas
sub
jp
and
loop
cmp
mov
jo
xor
jle
xor
aam
popf
push
dec
push
mov
fst
lods
or
push
inc
push
xchg
testl
aas
andl
add
pop
push
mov
loope
mov
mov
add
mov
insb
mov
dec
push
push
push
cmp
gs
lahf
mov
addr16
push
mov
insl
hlt
mov
xor
out
stc
cli
ftst
cs
dec
jmp
mov
repnz
rclb
mov
daa
sbb
pusha
inc
ss
sub
lods
pusha
popf
mov
lock
sub
pushf
sub
fsubrl
xchg
addl
add
push
mov
repz
cwtl
pop
jns
mov
aad
xchg
sub
adc
cmp
inc
incb
mov
addr16
mov
and
inc
rcr
xchg
mov
or
add
decl
add
repnz
cmp
ja
lds
imul
xchg
std
dec
shlb
mov
fnstsw
push
xchg
cs
push
mov
outsb
jmp
sub
adc
jmp
sub
inc
pop
or
mov
xchg
movsb
jecxz
dec
addr16
pop
or
xchg
inc
jmp
insb
xor
or
imul
xchg
out
clc
dec
mov
inc
add
sar
nop
xchg
mov
pop
inc
fdivr
inc
cld
sub
and
mov
mov
sbb
addb
add
jecxz
stos
mov
aad
or
outsl
push
aaa
imul
pop
js
lds
in
jae
pop
mov
pop
jb
add
les
lock
ljmp
or
ja
sub
jb
fxch
sub
js
ds
out
inc
xchg
adc
in
lret
shlb
cmp
je
mov
xchg
mov
xor
pop
aaa
mov
shr
aaa
cmp
dec
gs
dec
inc
scas
iret
mov
imul
push
dec
xchg
ss
adc
arpl
xor
adc
adc
jno
shlb
push
pop
fsubrp
adc
popf
dec
cmp
xchg
xchg
enter
sub
loopne
out
stos
in
jns
adc
addr16
sub
xchg
pop
sub
lds
inc
arpl
test
pop
inc
and
push
cmp
ljmp
cmp
push
out
addb
lcall
pop
adc
and
cmp
icebp
mov
or
jno
adc
sarl
pop
xchg
stos
mov
into
pop
enter
mov
mov
mov
je
je
gs
inc
shrb
ret
xchg
pop
icebp
ljmp
jmp
imul
pop
inc
aam
loope
hlt
mov
in
leave
mov
adc
subl
out
int
repnz
test
fcmovne
daa
in
pop
mov
das
shrb
dec
and
sti
test
out
pop
inc
push
cs
mov
sbbl
orb
lret
or
xchg
sbb
ljmp
inc
mov
xor
fiaddl
inc
xchg
cld
xorb
dec
xor
shr
mov
rorb
pop
lcall
push
adc
mov
xchg
cmp
out
loope
lcall
sarl
and
adc
leave
les
std
scas
dec
iret
sub
xchg
inc
sub
cmpsb
ja
loope
mov
mov
mov
sbb
jo
add
fs
divl
add
cmp
adc
and
pusha
pusha
add
xor
sti
pop
addb
push
dec
mov
mov
ret
sub
inc
or
mov
sbb
and
in
subb
fcmovb
add
push
lods
lahf
cli
or
rorb
add
out
sbb
mov
fldl
jo
clc
inc
dec
lahf
dec
and
sahf
out
repz
in
rcrl
or
mov
arpl
mov
mov
xchg
and
out
movsl
cmp
fsubrl
sub
adc
pop
pusha
stc
push
jmp
xchg
in
jmp
mov
outsl
mov
sub
popf
pop
aas
mov
cmc
or
push
mov
popf
and
jns
xor
fisubrl
adc
dec
push
out
outsl
pop
add
dec
mov
jno
cld
cmc
xor
shll
lret
popf
lret
iret
mov
sahf
insl
mov
xchg
scas
test
repnz
push
pop
adc
lods
icebp
es
adc
xchg
and
xchg
ret
mov
inc
arpl
dec
cmpsb
testb
adc
daa
or
sub
mov
jnp
loope
ds
ja
sbb
mov
test
xor
repz
mov
xchg
adc
sub
call
pop
pop
add
leave
inc
andb
adcb
adc
push
push
jle
insb
xor
insl
loopne
ret
out
cli
xchg
jle
mov
dec
dec
sbb
xor
sti
xor
stc
insb
sub
add
mov
xchg
ret
fs
in
mov
sub
pop
cmp
mov
mov
mov
and
pop
mov
xlat
sbb
sub
test
sub
in
push
shll
jge
mov
xchg
out
dec
stos
adc
lcall
iret
adc
inc
xchg
add
jp
aaa
cli
adc
outsl
leave
int
lods
jecxz
push
addl
rcrl
sbbb
in
fistpl
xchg
inc
mull
cs
lock
dec
push
jl
insl
adc
lcall
jp
fadd
out
das
cwtl
cltd
adc
outsl
addl
in
aad
mov
leave
daa
into
mov
adc
les
jnp
xchg
in
adc
adc
pop
inc
mov
push
mov
xchg
lods
mov
das
lea
or
loopw
push
push
or
xchg
xor
imul
icebp
adc
cmp
jecxz
dec
das
and
idivl
mov
sbb
cmpsl
mov
push
popa
jmp
and
test
mov
dec
into
jbe
shlb
push
out
mov
pop
jns
lods
loope
sub
fdivs
test
jae
rcrl
ja
mov
addr16
push
pop
loop
sahf
mov
icebp
push
and
cmpsl
xor
aaa
cmp
je
or
movsb
or
sub
push
cli
leave
repnz
stos
arpl
pop
mov
add
pop
mov
in
mov
and
push
inc
xchg
xchg
sbb
adc
or
aad
or
loop
or
nop
fwait
mov
loop
sbb
push
mov
xorb
mov
nop
pop
pop
xchg
push
mov
and
js
mov
adc
sbb
out
cmc
fstpt
sub
sbb
mov
call
cld
mov
mov
mov
out
cmpsb
cmp
cmp
sub
push
xchg
popa
cs
ret
pop
pop
cld
mov
jecxz
xchg
sbb
add
leave
mov
movsl
mov
push
enter
hlt
mov
pushf
ss
xlat
xlat
ret
xor
pop
pop
or
push
ss
aam
and
insb
pop
outsb
lret
clc
es
ficoms
imul
sbb
aaa
mov
movsb
popa
pushf
mov
pop
bound
sbb
inc
jnp
xchg
inc
jmp
int
mov
test
lret
mov
mov
inc
xchg
push
test
aad
mov
mov
fmuls
inc
insl
or
loope
adc
frstor
lds
xor
or
dec
js
add
arpl
lock
xchg
cs
movsl
imul
dec
or
fists
pushf
outsb
mov
pop
test
cli
jp
cmp
inc
or
iret
jae
sub
nop
or
mov
sbb
jae
pop
cs
ret
call
jecxz
mov
push
push
sarb
fisubl
mov
cmp
ret
into
sbb
pop
and
out
sub
mov
adc
mov
loope
lods
fs
outsb
dec
push
repz
xchg
jmp
push
aad
dec
test
pop
imul
xchg
imul
stos
add
or
adc
dec
enter
fs
jb
xor
dec
mov
cmpsb
test
add
adc
mov
mov
mov
outsb
sub
jge
sbb
inc
mov
loopne
inc
ror
stos
sub
xchg
xor
inc
ds
push
cmpsl
out
sbb
inc
call
inc
ror
int
fsubrp
dec
shll
ret
inc
es
movsb
mov
fldcw
in
testl
repnz
mov
dec
mov
or
rcrl
aas
leave
push
mov
cmp
gs
push
push
inc
adc
mov
push
xchg
mov
jae
divw
push
les
sbbb
inc
push
jle
aam
xor
out
push
push
pop
inc
lock
call
movsl
ffree
shlb
xchg
in
push
add
inc
mov
mov
test
out
xlat
mov
sbb
je
lods
push
add
lret
sub
call
push
mov
cltd
xchg
imull
or
pop
loope
sbb
mov
ret
aas
sbb
inc
es
rcl
xchg
popa
shl
cs
and
push
test
je
out
fnstenv
xor
xor
out
mov
out
sbb
pop
sahf
inc
xchg
mov
aam
adc
out
mov
and
cmp
and
cwtl
mov
jnp
inc
sbb
clc
xor
adc
stos
ljmp
andl
cmpsl
arpl
sbb
push
adc
cmp
ret
popf
cmp
pop
sbb
mov
pop
gs
ds
jnp
loope
insb
stos
mov
jo
push
lods
and
fcmovnu
aam
inc
fnsave
pop
ljmp
std
lods
leave
cli
push
or
xor
scas
inc
pop
inc
insb
cld
jg
fadd
mov
pop
or
mov
jl
jle
cmp
xchg
ss
iret
cmp
fisubl
repz
sarb
daa
mov
or
mov
fisttpl
push
repnz
outsl
pop
imul
ss
xchg
jle
cltd
imul
and
mov
dec
xchg
xchg
into
mov
into
es
cwtl
in
adc
add
sarl
cmpl
sub
in
fwait
lods
clc
push
mov
je
push
lods
and
sub
push
adc
negl
or
xchg
fsubrp
movsl
dec
fisttps
fsts
test
es
add
adc
jmp
cwtl
pop
popa
in
xchg
jnp
test
cmc
sahf
mov
sub
stos
add
push
test
repnz
mov
adc
xlat
sub
cmp
data16
arpl
pop
mov
int
inc
incl
push
xor
inc
or
lret
mov
stos
and
dec
and
andl
push
ret
mov
sahf
xchg
aaa
xor
pop
test
mov
icebp
sbb
mov
mov
jo
mov
xlat
dec
sub
testb
iret
mov
sbb
push
push
cmp
out
fstpt
xor
int
insl
insb
call
shl
jecxz
sahf
mov
jo
rcrl
mov
in
xchg
inc
addr16
xchg
je
stos
movsb
fcompl
insl
lcall
cs
push
stc
adc
inc
cs
lock
mov
mov
hlt
or
out
adc
call
push
push
ror
cld
mov
les
add
add
xchg
ffreep
mov
repnz
push
jbe
das
pop
cld
xor
ret
mov
hlt
aad
adc
mov
adc
out
in
mov
mov
scas
or
fisttpll
shrl
mov
lock
sub
popf
cltd
test
into
sarb
or
cwtl
daa
aam
sbb
pushf
cmp
gs
mov
or
fsubrp
pop
in
daa
das
sbb
inc
sahf
stos
insb
lcall
jecxz
out
aas
inc
or
rol
popf
push
and
mov
mov
pop
stos
shlb
cmpl
or
movsb
mov
imul
nop
scas
sub
int
jnp
mov
sarl
xchg
leave
les
imulb
int3
jmp
mov
xor
popa
lds
daa
cmp
mov
enter
lods
jno
les
inc
mov
and
pop
push
insb
inc
lods
pop
mov
int3
das
inc
lret
lock
and
out
outsl
jne
push
stc
mov
jb
dec
mov
or
loopne
stos
push
inc
jno
fsubrl
addr16
rorb
sbb
faddl
addl
pop
sub
inc
xchg
test
mov
movsl
sbb
test
jbe
xchg
mov
loop
fisttps
leave
loopne
jmpw
testl
pop
stos
cmp
jl
sbb
aaa
mov
xor
and
dec
daa
std
push
mov
ss
xchg
popf
push
adc
pop
std
xor
testl
bound
enter
stos
out
and
mov
mov
popf
sbb
adc
jo
les
test
xchg
iret
movb
dec
rorb
dec
push
pop
enter
add
mov
hlt
dec
sub
cmc
and
insb
sub
xor
les
sahf
mov
aas
xchg
lret
push
xorl
add
sbb
rclb
mov
or
and
push
shll
ja
add
mov
adc
mov
xor
pop
dec
mov
xor
mov
jle
dec
cmp
dec
dec
not
jo
adc
incl
nop
xchg
cld
popf
mov
loop
out
lods
inc
dec
dec
dec
cld
pop
dec
dec
ja
inc
jmp
pop
jo
sub
push
jnp
mov
add
sub
mov
mov
ret
push
dec
push
sti
lds
and
pusha
fsubp
adc
pop
stos
mov
add
js
popf
xor
and
cmp
mov
jns
cltd
and
hlt
cmp
mov
shrd
adc
pop
jge
ss
xchg
pop
mov
add
jl
out
loopne
or
popf
stos
mov
sbb
ljmp
out
enter
test
or
test
out
gs
addr16
movsl
pop
pop
faddl
xor
leave
das
lods
adc
jecxz
es
icebp
div
jb
ret
xchg
cmp
fisubs
push
mov
sub
dec
call
or
imulb
inc
add
and
or
pop
test
pop
xchg
aad
push
dec
lods
stc
or
mov
or
lret
stc
inc
out
iret
es
fiaddl
cmpsb
lods
fincstp
insb
nop
das
xor
push
sub
and
inc
lea
cld
adc
cmpsb
mov
lahf
pop
or
mov
mov
int
popf
inc
and
jle
mov
xchg
test
aam
inc
jno
mov
test
enter
pop
jge
test
or
add
mov
jmp
cltd
dec
pop
or
data16
aas
aad
jnp
mov
fstps
inc
ja
iret
fs
add
hlt
adc
mov
mov
mov
outsb
lock
out
or
sbbb
cmpsl
shlb
mov
mov
jo
pushf
jecxz
pop
test
movsl
les
pop
out
fdivs
adc
and
or
jmp
cmpsb
inc
pushf
in
sub
push
xchg
ljmp
jl
cmp
and
pushf
sbb
xor
cli
jae
jnp
xchg
test
ljmp
insb
imul
mov
jb
dec
imul
fs
lahf
std
data16
mov
push
rorb
loopne
ds
scas
imul
sub
pop
jecxz
movb
dec
sbb
fucomi
pop
dec
addb
sub
loopne
lret
and
sub
adc
sub
mov
push
lds
pop
mov
in
adc
stc
add
lock
jbe
jbe
add
pop
outsb
mov
scas
out
sub
mov
addr16
mov
repz
insl
push
subl
call
cld
mov
sub
in
sub
in
jnp
mov
and
xchg
enter
lret
icebp
and
in
and
push
out
popf
mov
pop
data16
les
shr
jae
leave
std
les
cmpb
push
jecxz,pt
fsubl
or
sub
xchg
stc
aam
imul
and
shlb
xor
cwtl
sahf
jmp
cmpsl
pop
sbb
dec
pop
mov
shll
daa
in
mov
imul
scas
lock
imul
jp
js
cmp
mov
pushl
mov
mov
jbe
cmpsb
pop
mov
jmp
jnp
and
sub
mov
leave
out
pop
mov
cltd
push
sbb
fildl
out
pop
outsl
test
xor
jb
xchg
ss
popf
jle
in
jns
push
xlat
push
pop
rolb
inc
pop
int
cmp
dec
sar
adc
add
les
add
jl
pop
xor
mov
xchg
mov
fists
add
iret
pop
jo
mov
subb
pop
cmpsl
xchg
int
dec
cmp
xchg
mov
mov
inc
insl
mov
jmp
cld
add
fadds
jecxz
add
es
pop
scas
cs
xor
jne
fsubrl
xor
aad
and
inc
push
or
sbb
mov
add
jecxz
cmovle
ljmp
sbb
pop
mov
adc
xchg
imul
imull
xor
xor
mov
xchg
sbb
mov
push
repz
ret
xor
shlb
mov
jg
lret
mov
mov
sub
adcl
push
xor
adc
rcr
cmp
mov
insb
bound
sbb
xor
movsl
je
test
aas
cmc
jmp
fistpl
into
pop
pop
nop
push
in
inc
andb
cltd
js
or
jno
and
frstor
movq
mov
push
sbb
sahf
outsl
mov
adc
popa
push
jnp
mov
fisttpll
aaa
adc
inc
loope
pop
sbb
adc
push
inc
lds
jg
lock
sti
test
pop
ud2
ret
imul
js
scas
mov
out
iret
add
push
push
es
psubb
push
pushf
mov
fadds
mov
inc
pop
mov
cmpsl
aad
xor
add
push
bound
test
sahf
inc
lock
jns
push
sub
push
mov
lods
jmp
sbb
inc
xchg
cwtl
loop
mov
mov
mov
cmpsl
call
cmpsl
mov
je
in
cmpsb
call
push
or
popa
dec
lcall
sahf
xchg
push
andb
sbb
push
inc
dec
inc
addr16
out
fbstp
rcrb
mov
push
cltd
jbe
test
cs
mov
sub
dec
fldpi
popf
lods
adc
push
push
sbb
scas
mov
bound
pop
repnz
sub
xchg
sbb
inc
sub
sbb
aad
mov
lahf
mov
in
mov
out
out
sbb
int
sub
push
movsb
mov
mov
adc
je
stos
adc
in
cwtl
data16
scas
and
push
dec
adc
stos
mov
push
mov
orl
pop
dec
cmc
lret
xchg
pop
loop
pop
jne
sbb
dec
sti
mov
jb
mov
lret
jg
inc
mov
xchg
sub
rcrb
push
jmp
add
add
test
stc
aas
movsb
lods
ljmp
mov
fistps
mov
ljmp
negb
cmp
mov
aad
nop
xchg
mov
scas
mov
xorb
cmp
jg
mov
push
and
push
fucomip
pop
add
ret
addr16
add
sub
or
clc
pop
add
add
loope
popf
scas
pop
xchg
xor
pop
cmp
add
inc
int
and
or
das
les
mov
out
xchg
add
stc
inc
xchg
repnz
aad
mov
cli
les
mov
and
insb
sub
push
sysret
insl
xorl
xchg
out
and
cmpsb
leave
cmp
aad
enter
les
add
mov
and
lock
mov
cmpsl
mov
out
in
mov
fnsave
inc
push
xor
mov
daa
jns
mov
pop
aad
in
pusha
and
aas
outsl
insb
ss
xor
push
insb
dec
pop
mov
fnstcw
stos
loope
xchg
push
movsl
mov
mov
and
push
xor
es
xor
aaa
dec
js
inc
xchg
mov
or
lods
cmpl
mov
ds
pop
sbbb
or
pop
test
mov
jp
lods
mov
mov
cwtl
sub
and
xchg
mov
popa
lea
pusha
sub
xor
mov
out
cmc
cmp
repz
lea
cwtl
popf
xor
in
xor
jp
push
mov
push
je
out
les
movsb
inc
and
and
push
and
imul
fcmovbe
ret
arpl
adc
push
out
sar
fidivrs
arpl
fcmovbe
mov
gs
aad
fisubs
cmp
mov
daa
shl
pop
push
sbbl
setno
pop
adcl
cmpsb
jp
int3
ja
sbb
lods
sub
xchg
or
mov
clc
shrb
mov
and
push
add
mull
pop
jbe
jns
inc
sub
adc
mov
jmp
cmp
adc
daa
imul
and
mov
pop
bound
xor
mov
data16
rolb
inc
adc
cltd
pop
and
clc
push
sbb
or
push
cs
mov
jae
mov
cli
les
pop
scas
push
cltd
adc
xlat
mov
mov
mov
mov
icebp
roll
repz
fbld
mov
in
xchg
mov
outsb
loope
aad
mov
pop
jbe
add
or
leave
inc
call
cwtl
adc
xor
in
jmp
int
push
push
adc
mov
xorl
outsl
enter
xor
push
data16
scas
int
or
pop
pop
sbb
push
xchg
sub
lock
in
stos
clc
adc
push
lea
filds
mov
outsb
xchg
loope
dec
and
sub
xor
xor
icebp
jmp
or
cmpb
aas
pop
sbb
cmpsl
add
in
cmp
mov
nop
cmp
bound
push
pushf
jge
loopne
cli
push
inc
adc
sahf
movsl
xchg
sbbl
outsb
les
ss
iret
ret
repz
pop
inc
jl
repnz
in
cmpsl
popa
adc
loope
imul
cmpsb
sbb
aaa
test
adc
mov
dec
push
cwtl
rcll
cmp
aaa
push
outsl
lods
add
xor
or
cmc
xchg
arpl
push
and
add
jl
loope
in
adc
jns
pop
mul
ds
xchg
stos
xchg
icebp
outsl
stos
mov
xorl
inc
mov
sub
jge
mov
mov
aad
dec
stos
mov
mov
fnsave
adc
or
and
aaa
mov
mov
je
mov
inc
in
dec
xchg
icebp
lret
shl
inc
call
pop
cmpsl
inc
mov
lea
aam
push
sbb
insb
aas
xor
imul
adc
mov
xchg
ja
mov
adc
pop
mov
mov
sub
push
sub
fisttpll
xor
aad
stos
or
mov
test
sbb
pushf
cmc
js
test
arpl
leave
mov
lds
push
pop
dec
cmpsb
and
jmp
jg
dec
iret
mov
fsubrs
ljmp
rclb
cwtl
stos
pop
loop
ret
outsl
dec
out
repz
and
into
arpl
imul
push
pop
or
mov
jl
or
mov
mov
call
dec
mov
mov
cmp
daa
fnsave
jle
mov
pop
sti
adcl
push
lret
mov
std
aas
jbe
outsb
adc
mov
in
loopne
orb
inc
push
out
jae
inc
cmpl
loope
test
stos
xlat
xlat
rclb
xchg
mov
ret
or
pusha
loopne
push
xchg
repnz
out
add
push
fdivrs
jmp
ss
sbb
ss
mov
lods
and
pop
jnp
xor
ds
xchg
cmp
adc
inc
inc
adcl
and
imul
cmp
enter
daa
mov
stos
xchg
cld
lods
lret
test
push
sub
sbb
cmpsb
sahf
movsl
cmp
sahf
cmp
outsb
inc
adc
mov
loop
push
fildl
es
iret
bound
mov
insl
mov
cmc
adc
push
cmp
push
aas
sub
jno
and
cmpsl
mov
popa
insl
xor
stc
xchg
shrl
dec
cmpsb
pop
call
ss
adc
jno
test
es
push
jp
mov
in
jbe
cmpsb
xchg
dec
sbb
mov
sbb
pop
dec
mov
sti
leave
cmp
xchg
fisubrl
cmp
xor
mov
das
or
out
and
sti
adc
out
jecxz
call
aad
xchg
fsubrp
in
push
sbb
lahf
in
inc
lock
sarb
loope
cs
adc
lock
mov
int
adc
mov
test
xchg
jecxz
jnp
mov
mov
loope
pop
cmp
xchg
add
jbe
inc
sar
sbb
ret
mov
mov
lret
jmp
cs
push
add
push
movsb
jns
and
xchg
jbe
ss
sbb
cmp
pop
into
xor
int
insl
cmc
arpl
in
or
mov
test
outsw
cltd
rcrb
subl
inc
adc
inc
inc
cmc
out
cmp
adc
xor
into
inc
and
arpl
mov
fiadds
fnsave
pop
sbb
mov
adc
sar
scas
or
leave
mov
sub
orl
aam
mov
cwtl
pop
xor
dec
sbb
xchg
mov
push
add
mov
xor
dec
arpl
push
jnp
popa
sub
mov
lcall
cmp
fmulp
stos
movsb
orl
and
mov
lahf
adc
shl
hlt
inc
ss
mov
xchg
sarl
iret
push
bound
cmc
or
imul
mov
hlt
cltd
add
iret
ret
insl
xchg
pop
mov
sbb
in
xor
sbb
popf
stos
pop
movd
fisttpl
pushf
filds
mov
mov
push
sbb
cmp
cmc
push
sbb
dec
mov
shlb
int3
jno
jae
les
mov
jb
xor
mov
out
jecxz
inc
hlt
dec
jle
sbb
popf
and
add
cld
fwait
andl
sbb
adc
mov
xor
arpl
mov
xchg
lods
gs
pop
out
mov
les
fcompl
mov
mov
mov
add
fistpll
pop
shl
daa
mov
vaddps
outsl
adc
dec
jno
repnz
out
mov
fimuls
dec
and
mov
lods
adc
insl
inc
ret
mov
movsb
sbb
push
aas
hlt
repz
jne
cld
mov
sbbl
pusha
cld
sti
aas
outsb
int3
fisubl
cmp
bound
ljmp
clc
xor
stos
mov
out
cmc
push
loopne
cmp
int3
popa
mov
xlat
rdmsr
cltd
subb
push
mov
push
xor
dec
add
test
lods
push
jnp
xchg
push
dec
adc
sbb
std
dec
add
loop
and
fiaddl
dec
jnp
ljmp
add
out
ds
int3
aad
jae
fadd
pusha
adc
dec
js
sub
pop
stc
lock
cmpsl
and
or
push
scas
adc
jbe
mov
jmp
or
dec
xchg
jecxz
sub
jg
fildl
ja
test
adc
dec
fcomps
pop
jbe
lock
scas
mov
scas
adc
mov
lcall
out
sub
out
add
jg
inc
jmp
add
gs
clc
cmp
loope
lret
pop
jp
loopne
cmp
test
cmc
test
jp
aas
enter
push
mov
and
rolb
andb
cmc
in
orl
jl
cld
lock
sub
dec
adc
dec
jge,pt
arpl
popf
pop
mov
xchg
les
mov
mov
mov
imul
sbb
xor
pop
in
push
jno
xchg
dec
add
lret
imul
xor
rcr
and
hlt
ja
and
mov
lock
and
mov
ds
movsb
insb
loop
js
xchg
rcrl
das
ja
mov
bound
cmc
sbbl
push
jle
adc
inc
add
in
sti
pop
jmp
fisubrs
cs
or
test
fstpl
movsl
fwait
cs
inc
mov
xor
mov
mov
cmp
adc
mov
movsl
cmpsb
mov
add
and
icebp
and
mov
int3
pop
jp
cmpsl
sahf
rcrl
jg
inc
dec
or
popf
cmpsb
inc
or
cmp
sub
lods
inc
jns
pusha
xor
xchg
sbb
adc
mov
in
jg
fidivrl
jnp
fnstenv
sub
lods
test
push
sub
mov
scas
xchg
or
jne
xchg
lret
and
mov
dec
adc
xchg
js
sbb
and
mov
loope
pop
cltd
xchg
out
shrb
lods
push
out
or
cmp
sbb
gs
mov
mov
mov
lret
and
jns
testb
push
and
jae
jae
cli
test
es
outsb
pop
roll
js
out
addr16
cmp
jle
sbb
shll
fcomi
pushf
stos
xchg
gs
leave
pop
out
loope
int3
imul
ds
daa
mov
push
ljmp
push
sahf
stos
rcrl
sub
lods
jg
sbb
das
xor
out
adc
dec
pushf
xor
ret
je
in
das
sub
or
mov
sub
mov
stos
dec
jb
fdivr
mov
repnz
pushf
sbb
dec
out
lret
dec
xchg
mov
pop
shrl
rcr
mov
cld
mov
push
inc
add
lds
mov
jmp
js
or
lds
sahf
cmc
dec
adc
xchg
xor
inc
push
jno
scas
mov
jo
out
adc
test
mov
in
xor
push
dec
push
push
jnp
mov
fmuls
mov
cs
aam
xchg
popa
pushf
or
mov
addr16
cwtl
dec
inc
mov
test
or
inc
mov
mov
arpl
xor
xor
push
xchg
xor
mov
mov
inc
andl
gs
adc
add
jnp
xor
sbb
adc
in
data16
mov
mov
aas
fmuls
mov
loopne
jge
mov
dec
pop
cmpsl
sub
push
lret
les
lods
cli
push
cmp
cmp
outsb
adc
mov
add
repnz
pop
insl
stos
daa
jg
push
jo
jno
aad
pop
lcall
push
push
sahf
push
mov
jmp
inc
mov
mov
mov
sub
aas
sub
pop
push
jle
aad
xor
push
mov
dec
mov
sbbl
roll
hlt
sbb
gs
cmp
jbe
lds
adc
nop
mov
jnp
hlt
sarl
stos
jns
add
sahf
jbe
imul
pop
sub
mov
jecxz
mov
test
pop
fnsave
jb
cld
movsl
cmpsb
aam
adc
mov
ja
dec
dec
shr
adc
in
imul
or
xchg
lret
sbb
test
push
dec
divb
and
stos
cmp
and
xchg
aam
lret
int
cmp
mov
mov
add
sub
add
jns
pop
xor
mov
xor
mov
scas
sub
aam
xor
cmp
orb
fwait
sub
adc
mov
daa
ss
outsl
cmpl
lret
inc
sbb
push
mov
push
into
mov
out
cmpl
dec
and
dec
lds
movsl
adc
andb
pop
jne
out
into
subl
mov
les
or
mov
fldenv
loope
adcb
cmp
mov
jae
add
cwtl
cmp
xchg
insb
xchg
iret
out
es
leave
mov
or
out
out
in
pop
xor
or
mov
outsb
or
xor
jbe
fs
inc
scas
xor
mov
pop
popf
mov
jle
lret
pop
fdivp
adc
dec
scas
adc
cli
xchg
cltd
jnp
jl
xchg
in
data16
cmp
or
cmp
in
pop
cmpsb
sub
bound
sahf
rcr
inc
sti
mov
mov
rcl
je
jmp
das
mov
add
sbb
mov
sub
sub
pusha
jb
sbb
int
mov
fstps
mov
js
fildl
adc
push
dec
test
sub
pop
adc
xchg
inc
cwtl
inc
fld1
xchg
sbb
mov
mov
cmp
nop
icebp
xor
cmp
shld
xchg
bound
sub
push
fmul
cwtl
pop
in
loope
adc
lods
mov
fwait
xchg
dec
loope
jg
sub
or
fwait
mov
sub
xlat
or
lock
sti
mov
mov
sub
xor
std
shll
mov
rorb
das
jae
call
mov
loope
in
or
insb
or
pop
mov
addr16
inc
popf
adc
and
and
push
xchg
stos
clc
or
jns
mov
sub
pop
insb
sub
fprem
cmp
adc
loop
cwtl
dec
lods
jle
std
mov
out
xchg
aam
outsb
dec
icebp
push
jge
mov
mov
adc
dec
adc
push
add
and
inc
hlt
xchg
cltd
sub
push
mov
pop
pop
push
push
jmp
stc
xchg
mov
mov
mov
cmp
push
push
imul
cmc
mov
pop
lahf
call
out
cs
in
arpl
xchg
sub
mov
adc
xor
cmp
mov
stos
inc
negl
rol
aam
and
pushf
mov
inc
cmpl
leave
xor
sbb
mov
adc
lods
mov
cwtl
ljmp
iret
in
inc
std
mov
data16
gs
in
ja
or
or
cmp
or
clc
mov
pop
add
lock
clc
pop
cmp
mov
sbb
rol
jae
cmpsl
das
imul
inc
test
imul
lock
fcomp
jmp
fistpl
test
fdivrl
mov
shrb
ret
mov
aaa
je
sbbb
jo
into
mov
mov
cmp
sbb
in
or
and
out
adc
cwtl
cmp
aaa
mov
daa
jne
imul
fs
xchg
pop
mov
mov
ljmp
call
ljmp
sbb
iret
stos
push
push
popf
add
iret
push
sbb
dec
inc
lock
push
sti
cmp
call
gs
lret
mov
mov
icebp
xchg
std
cltd
inc
cs
pop
fisubs
ficoms
aam
push
movsb
in
cmp
inc
cmp
sbb
ss
scas
xor
xchg
addl
imul
jnp
xchg
add
adc
fldt
add
add
pop
push
test
cli
cli
push
scas
xchg
bound
rcl
shrl
cmp
pop
xchg
mov
dec
daa
shlb
daa
dec
shr
lret
aaa
xchg
push
lods
repnz
xchg
xor
out
sub
test
inc
in
imul
aad
lret
out
insb
enter
mov
hlt
loop
sub
aaa
xchg
and
push
lahf
cmp
cwtl
aaa
clc
or
sarl
addr16
mov
pop
in
pop
add
les
stos
pushf
jbe
cmc
loope
iret
inc
xor
les
clc
movsl
or
test
add
jne
mov
cmp
sbb
dec
sub
into
sbb
sub
sbb
out
mov
inc
jo
es
ljmp
xor
adc
movsb
test
aam
and
cmpsl
sbb
ss
pop
xor
sbb
dec
push
xchg
lds
mov
and
push
mov
xchg
mov
mov
cld
jo
je
stos
into
popf
imul
mov
add
ret
mov
mov
nop
enter
sub
in
jae
cmpsl
sub
push
sbb
leave
gs
dec
dec
cmp
pop
dec
xorb
ret
lahf
sub
or
test
xchg
fidivl
movsl
sub
pop
mov
inc
popa
mov
add
add
add
and
ljmp
leave
in
push
mov
inc
xchg
mov
push
push
pop
cmp
pop
ret
pusha
test
aam
cld
mov
add
mov
lds
mov
push
cmp
outsl
mov
sbb
mov
push
pop
pushf
pop
mov
xor
jl
jnp
sbb
dec
push
das
mov
xor
cmp
sub
aaa
popf
shrb
push
dec
ret
jge
mov
aad
or
inc
pop
pop
or
testl
and
inc
test
dec
mov
out
or
aas
enter
mov
or
mov
xchg
xchg
and
pop
in
ficoms
in
push
sahf
jle
mov
mov
add
ss
cld
daa
jbe
xchg
dec
jbe
insl
push
movsl
lahf
push
pop
into
jns
dec
inc
mov
popa
dec
cmc
fucomi
lea
and
int
add
mov
in
inc
fcoml
gs
mov
pop
inc
sbb
test
pusha
hlt
fidivl
cmp
inc
adc
inc
fld
add
les
fs
xchg
push
pop
dec
lods
add
int
or
inc
outsl
xchg
fstps
in
loopne
cmp
mov
mov
mov
notl
ret
das
ljmp
daa
inc
subb
loop
aad
push
jp
or
pushf
cld
mov
rcr
push
xor
add
aad
pmullw
jle
adc
xchg
dec
dec
push
sbb
cmp
ffreep
loop
push
insl
imul
dec
and
test
mov
mov
push
adc
in
and
scas
ja
xor
cmpl
test
clc
cli
test
pop
sbb
mov
dec
mov
call
sarb
xor
clc
or
pop
imul
push
cwtl
dec
sbb
or
jnp
imul
adc
or
rcrl
pop
pavgb
sub
xchg
imul
aas
repz
fsubs
in
addr16
clc
xchg
xchg
pop
dec
lea
cli
dec
cmp
out
inc
and
in
jno
movsl
movsl
iret
outsl
dec
adc
adc
pop
test
xchg
fstp
or
mov
sub
cwtl
mov
push
je
fucom
addr16
dec
jne
icebp
ljmp
push
movsb
jns
inc
and
dec
cli
icebp
mov
test
iret
inc
pop
repnz
xchg
mov
xchg
fstps
jae
int
cmpsb
jns
testb
sub
je
add
hlt
pop
pop
repnz
test
sub
jp
jmp
jmp
dec
insl
rcll
popf
or
mov
inc
or
data16
sub
hlt
and
sub
sbb
dec
mov
rcl
imul
xor
icebp
sbb
push
call
jae
mov
xchg
arpl
inc
sub
mov
cmpsb
dec
loop
xor
test
dec
jns
test
pop
jb
decb
out
fs
mov
rcr
fisubrs
and
es
sti
into
aam
jo
into
inc
rcll
push
addr16
enter
xchg
outsl
cmpsb
jo
loope
mov
jmp
fwait
stos
inc
test
hlt
rcr
dec
dec
pop
or
repz
jg
pop
fisttpl
mov
pop
sub
cmp
ljmp
movsb
loopne
daa
stos
loopne
repz
nop
add
xor
ja
xor
iret
out
movsb
call
add
sbb
add
inc
push
xchg
cmp
aas
jecxz
sbb
cli
add
push
mov
sub
clc
rolb
movsb
testb
mov
push
cmp
test
out
clc
mov
fwait
and
cmp
gs
mov
jmp
xor
mov
enter
add
sub
adc
mov
dec
push
fstpt
stos
xorb
ret
push
data16
shl
sbb
jne
inc
clc
daa
sbb
or
rcll
mov
sbb
mov
mov
xor
inc
add
in
js
insb
aaa
inc
push
scas
nop
loop
mov
cld
xchg
mov
out
faddl
in
pop
in
add
pop
mov
fs
adc
testb
xor
lods
sahf
pop
out
testl
fsubp
jae
paddusb
pop
cmp
repnz
and
insl
jae
cmp
shlb
mov
and
push
add
subb
icebp
rcrl
enter
outsb
sbbl
sbb
xlat
lret
lods
xchg
sbb
pop
fbld
push
ss
and
mov
fsubrl
jmp
mov
sbb
je
test
jbe
pop
ficoms
or
jecxz
mov
aad
sarl
sub
jge
lods
jl
inc
inc
incl
pushf
dec
leave
mov
mov
xorl
sti
pop
push
mov
sti
out
in
mov
mov
jbe
xchg
push
ja
pusha
add
mov
ljmp
les
mov
sub
mov
mov
es
rcrb
adc
and
lods
insl
popa
clc
adc
pop
xchg
xchg
addr16
ja
xor
js
dec
sub
dec
sub
test
mov
sbb
or
stc
mov
daa
lret
insb
fisubl
xor
pop
fsubrp
push
lds
out
test
cs
cs
in
sub
out
test
js
popa
loope
lods
cltd
fwait
mov
test
and
roll
sahf
cmp
rolb
xchg
or
je
fwait
pusha
mov
add
lods
loopne
mov
pop
imul
cmpsl
sarb
or
inc
daa
xor
push
mov
ja
ret
xor
jmp
imul
jne
sbb
xchg
or
inc
jp
dec
and
leave
pop
insl
dec
inc
popa
lahf
fs
adc
mov
mov
mov
fisubrl
xor
call
and
mov
add
push
icebp
add
mov
int
dec
xchg
lock
sub
cmpb
push
roll
lds
cmp
andb
stos
mov
jns
cltd
fwait
data16
pop
cld
daa
mov
pop
scas
push
mov
fwait
add
cmp
cli
and
int3
sub
mov
xor
sbb
call
add
stos
jecxz
mov
push
xor
xchg
lods
or
sbb
cmpsl
jbe
push
dec
xchg
dec
push
je
adc
sbb
aam
push
mov
popa
adc
es
mov
mov
fidivl
jne
adc
out
loopne
jo
sub
mov
xor
test
and
adc
fldt
adc
inc
cwtl
shrl
dec
jbe
push
cmc
ret
jg
xor
sub
loope
ret
xor
cmc
hlt
mov
bound
testb
rol
andl
lods
pop
test
jge
xchg
cltd
mov
cmpsb
popf
or
lock
or
jne
cmp
xchg
test
cmp
rol
fsubrs
insb
xor
jnp
push
rolb
dec
adc
neg
dec
fldcw
push
pop
adc
sub
clc
jb
sbb
cmp
or
pop
pop
push
out
xchg
aad
lds
dec
stos
adc
mov
pusha
xor
popf
pop
adc
sub
cmp
sbb
xchg
insl
hlt
jecxz
mov
dec
inc
icebp
mov
ret
imul
or
pop
cwtl
or
sbb
cltd
int
cmp
imul
mov
stos
dec
scas
or
test
pop
mov
pop
lea
dec
cmp
and
gs
ds
mov
dec
adc
lcall
in
cmc
popf
sub
lods
bound
std
dec
xchg
addl
incb
ljmp
outsl
pop
test
cmp
hlt
cmp
scas
pop
imul
cmp
decl
in
mov
jnp
dec
sbb
mov
sub
enter
or
lods
dec
lock
and
aam
into
outsb
jnp
sti
jno
add
adc
cmp
pop
cmp
sub
xor
lds
add
sbb
and
imul
push
mov
push
jne
pop
or
pushf
or
push
jp
loop
mov
add
cmp
xorb
lahf
shr
inc
loope
cltd
addr16
aaa
xchg
out
das
dec
xchg
cmpsb
std
sti
lods
cmpsb
pop
addr16
lods
xor
adc
jne
jo
dec
jle
icebp
movsb
nop
mov
xchg
push
pusha
jl
jb
fdivs
add
sbb
mov
shll
dec
push
push
dec
es
in
jecxz
mov
add
xor
mov
sti
xchg
faddp
sub
jnp
movsl
xchg
sbb
sbb
mov
mov
and
mov
pop
push
mov
push
repz
test
outsb
std
mov
cmp
loope
mov
loopne
pop
addr16
cmp
dec
aam
jbe
jnp
stos
mov
sbbb
loope
xor
mov
lods
inc
inc
and
xor
xchg
int
leave
add
insb
jl
inc
addr16
fs
mov
clc
sub
adc
jp
mov
arpl
xchg
mov
sbb
dec
xchg
pushw
adc
loop
in
mov
lock
stos
outsb
addr16
loope
dec
scas
jl
call
and
ret
jp
or
jp
jmp
sub
mov
fucomp
test
cs
cmp
or
mov
cmp
ljmp
cmp
jno
or
inc
xchg
cwtl
mov
lret
add
aam
sub
imul
jns
pop
adc
clc
mov
and
sar
inc
xor
insb
lods
movsl
and
test
scas
mov
fistpl
leave
daa
or
popf
jae
mov
dec
add
lahf
push
sarb
lock
jne
loope
cmp
pushf
cmc
repnz
xchg
push
in
iret
pop
dec
lret
and
int
sbb
xor
mov
das
out
push
and
fnop
push
jae
pop
fildl
sub
adc
lds
sub
outsl
cmp
scas
sbb
lods
adc
int3
movswl
adc
leave
push
pop
cwtl
loop
fisubs
ja
sti
fwait
push
shlb
movsl
mov
pop
fs
mov
les
or
cmp
add
lret
push
pushf
repnz
stos
lods
inc
mov
pop
inc
mov
and
jns
stc
cmp
icebp
aad
or
aam
bound
xor
dec
notb
xchg
std
outsl
mov
mov
mov
arpl
popa
rorl
jae
adc
mov
push
fldl
fmuls
sbb
in
adc
mov
jb
outsl
jo
cmp
jmp
xchg
inc
mov
hlt
pop
sub
jle
rorl
aad
stos
jo
sbb
movsl
jl
lcall
lret
cmp
stos
repz
jns
xor
scas
mov
dec
cli
in
pop
mov
sbb
testl
cmp
sbb
ds
arpl
adc
pop
mov
aas
mov
out
cmp
xor
and
dec
sbb
sub
mov
insl
inc
test
pop
mov
stc
dec
call
loope
adc
sarb
pop
cmc
adc
int
push
and
jno
pop
push
test
sub
push
pushf
cmpsl
js,pn
push
lds
popf
pop
out
dec
xchg
sarl
aas
jb
iret
xlat
mov
jl
inc
fstpt
imul
imul
add
jp
mov
xchg
fcoml
push
fwait
bound
int
enter
mov
mov
dec
movsl
je
dec
fs
mov
jecxz
std
inc
into
xorb
pop
mov
xchg
popf
xor
repz
in
aas
shl
adc
fwait
mov
sbb
movsb
cli
sub
sbb
mov
push
ffree
mov
aam
cltd
cmp
mov
scas
sbb
sub
shrl
cmp
rorb
pop
and
lcall
lods
neg
cli
roll
and
pop
loop
fstpt
jbe
cmp
shl
jecxz
xchg
into
test
and
dec
lea
push
adc
xor
jge
cmpsl
add
inc
mov
mov
data16
mov
xchg
mov
scas
mov
xor
ss
test
outsl
or
out
lock
sbb
mov
xchg
pop
insb
aad
sbb
cmp
pop
lods
cli
sarl
dec
pop
adc
test
fstps
stos
lds
dec
sbb
decl
outsb
xor
mov
jne
add
pop
lret
movsb
push
mov
lds
aad
or
iret
mov
cmp
addr16
rcrb
jl
inc
pop
dec
nop
cld
cltd
and
add
cmp
scas
imull
cmp
mov
popf
pop
daa
mov
jecxz
cmp
outsb
clc
ja
add
mov
hlt
sub
test
cmp
scas
fwait
pop
les
fsubs
bound
sub
call
xchg
cmc
fadds
fwait
clc
js
shl
adc
hlt
gs
in
jb
cltd
pop
mov
nop
add
sti
jmp
inc
dec
and
pop
and
add
mov
flds
jae
js
mov
filds
inc
mov
call
cmpsb
mov
leave
push
xchg
rcrb
and
ficompl
les
jae
add
lods
out
loopne
jne
bound
sbb
or
mov
fwait
shrb
dec
mov
sbb
scas
pop
in
dec
and
pop
lock
xchg
inc
mov
ja
les
hlt
lock
into
scas
adc
mov
cmpsl
shrb
add
dec
scas
mov
pushf
inc
ja
imul
popf
aaa
out
or
stos
test
dec
lret
les
bound
ja
pop
es
mov
int3
cmp
jo
rcrb
leave
push
dec
push
pop
mov
or
jmp
pop
or
test
rcrb
pop
xchg
cltd
dec
mov
add
mov
or
jge
jbe
add
add
push
dec
lods
loopne
dec
adc
dec
in
cmpl
rcr
cmp
xchg
aaa
das
test
rcrl
mov
pop
inc
sub
lcall
stos
pop
rolb
jmp
dec
jmp
sarb
cmp
dec
mov
mov
xor
mov
aas
nop
pop
loop
aas
jno
inc
std
inc
les
or
mov
inc
aam
or
and
roll
movsb
sbb
push
xor
sub
xlat
xchg
fst
pop
aam
sbb
fst
aaa
cmp
iret
out
rcrl
sub
cld
push
xchg
in
ljmp
and
imull
loopne
pop
std
out
or
fdivp
pop
push
push
push
aam
push
and
or
adc
test
sbb
ret
aaa
cmp
jnp
mov
xchg
fldenv
mov
xor
inc
xor
fisubs
jo
ret
cmpsb
mov
shll
enter
adc
xchg
jnp
mov
jb
and
in
divl
jb
adc
sbb
push
in
push
pusha
out
arpl
test
mov
sbb
clc
cmp
jge
sub
cld
ljmp
int
mov
push
in
pop
push
aas
sub
mov
sbb
mov
out
ret
roll
int
rol
jo
mov
in
jmp
ficomps
bound
mov
rol
mov
lea
xchg
cs
fsub
add
adc
je
jae
jne
in
leave
popf
addb
mov
jge
out
inc
fstpt
xchg
in
cld
lcall
gs
les
xlat
mov
cmp
iret
push
mov
xchg
push
lods
dec
sbb
fldl
jns
jb
popa
or
test
movsb
jno
rcr
stos
mov
lret
push
jae
mov
sub
jns
ror
inc
mov
div
lahf
mov
dec
dec
xchg
loop
mov
push
jo
jbe
inc
mov
push
clc
stc
leave
and
push
sub
test
jge
inc
pop
mov
mov
jle
mov
test
enter
xchg
les
inc
ja
sub
pop
movsb
inc
mov
mov
repz
cmpsb
pop
ret
bound
pop
aaa
out
in
mov
jp
jle
dec
dec
into
adc
xor
repz
enter
cs
cmpsl
dec
sti
cli
mov
out
inc
mov
pusha
enter
add
hlt
push
nop
dec
shlb
jle
push
test
mov
adc
out
negb
push
mov
push
jmp
in
xor
data16
in
es
pop
xor
mov
add
fwait
rcrl
xchg
inc
mov
jge
push
gs
mov
xchg
repz
daa
mov
xor
lods
jle
lods
jle
mov
inc
mov
repnz
arpl
or
les
dec
or
in
jne
ret
lods
dec
mov
popa
xor
movsb
filds
pop
mov
bound
push
xchg
frstor
stos
pop
cld
inc
ljmp
ja
mov
cmpl
jb
gs
roll
aam
and
xchg
pop
cltd
push
jl
add
jb
and
shl
adc
xlat
pop
lcall
mov
cmp
rcr
test
movsl
ljmp
scas
mov
or
or
add
cmpsl
mov
loop
jnp
int
scas
out
mov
or
jge
icebp
fcoml
insl
movsb
adc
insl
out
lahf
xlat
jns
xchg
adc
das
into
cmp
mov
jne
aaa
push
jno
into
aaa
popa
fmul
in
sbb
arpl
lock
out
pop
loope
movsl
xchg
leave
push
cwtl
pushl
neg
jns
sarl
stc
mov
loop
adc
sbb
inc
jnp
jbe
fisubrl
push
adc
pop
ja
ret
cmp
sbb
xchg
hlt
xor
cmp
bnd
aam
push
and
icebp
test
inc
pop
dec
adc
mov
jne
std
inc
push
push
mov
sti
arpl
pop
sub
jp
das
cmpsl
loopne
inc
sarl
aad
orb
push
inc
sub
dec
sbb
divb
imul
mov
xchg
sbb
xlat
cmpsl
dec
insl
xchg
enter
push
ret
popa
cmpsl
jae
mov
mov
dec
pop
mov
mov
jmp
pop
out
adc
outsl
lods
in
mov
cli
lahf
std
sub
xchg
ret
and
and
pop
xchg
jmp
jno
cmpsl
fists
mov
js
popa
inc
and
aaa
ljmp
add
pop
mov
adc
ja
out
outsb
imul
call
xorl
call
push
push
xor
rol
add
adc
sub
test
cld
sub
mov
mov
or
mov
dec
or
pop
jnp
pop
fdivs
lods
push
sahf
jb
sbb
lret
imul
add
movsl
add
push
adc
xor
movsb
and
mov
push
push
imul
sarl
dec
push
out
or
lds
push
fstl
in
xor
and
xchg
cmc
and
inc
push
ss
inc
inc
gs
ret
mov
call
ljmp
sub
das
and
std
cmp
js
stos
mov
data16
repz
rcll
add
pop
push
enter
icebp
and
xchg
mov
dec
pushf
or
jle
adc
cmp
mov
sbb
xor
push
or
test
sub
xchg
dec
inc
lret
retw
imul
test
cmpsl
and
pop
sbb
lret
xor
cmp
fwait
mov
fcoms
add
pop
popf
loop
sbb
xor
fldpi
ret
mov
movsl
iret
add
call
sbb
rcrl
mov
jb
mov
test
mov
imul
jnp
fsubrs
repz
add
pop
addr16
lcall
add
std
or
jb
in
push
subl
lcall
and
sbb
test
inc
into
shlb
outsb
jg
adc
mov
test
sbb
ret
jge
loopne
cmc
frstor
jnp
orl
mov
xchg
sarl
xchg
test
pusha
push
mov
ljmp
das
in
inc
sub
push
iret
mov
mov
push
or
and
xchg
xchg
sbb
movsl
sub
test
ja
lret
inc
xor
push
testb
inc
loopne
test
and
sbb
pop
movsb
popa
push
cmp
in
and
jbe
push
fwait
in
push
in
and
dec
dec
cmp
mov
xchg
xchg
add
push
mull
xchg
popf
and
aaa
mov
dec
lods
cmpsl
inc
pop
scas
pop
rorl
cmpsb
rorl
out
call
cmc
jbe
out
xor
mov
adc
popl
es
ja
mov
xorl
imul
ret
mov
inc
cmpsl
xor
insl
in
adc
cmp
cmp
and
pop
dec
js
ret
and
or
sbb
addb
fidivrl
and
or
data16
fcmove
add
sarb
cmc
in
inc
sbb
call
dec
bound
fwait
arpl
lea
jl
shl
mov
rol
out
lods
inc
add
mov
cmp
mov
cmp
lret
add
jae
jnp
mov
out
adc
cmp
mov
jo
aas
jae
xor
jg
sbb
cwtl
pop
sub
push
in
sbb
lret
lods
aam
jmp
clc
std
xchg
xchg
les
jmp
inc
stc
out
xor
xor
dec
cwtl
fcoms
mov
cltd
fisubs
inc
mov
hlt
inc
xchg
enter
in
std
and
iret
imul
xor
int
dec
adc
repz
imulb
xorb
jns
add
call
xchg
mov
mov
fmuls
fldenv
dec
xchg
scas
shrl
xchg
push
repnz
push
push
push
pop
ret
dec
or
ds
subb
jb
lahf
inc
sti
mov
ficomps
insb
jmp
or
mov
dec
ret
lods
das
mov
aas
jnp
lods
cli
je
mov
mov
stos
pop
mov
int3
mov
lcall
repnz
test
jmp
pop
push
ret
sub
test
and
mov
shll
shrb
sub
jae
addr16
out
jmp
cmp
xchg
sub
fldt
adcl
inc
mov
in
mov
in
insb
ss
lods
xor
sub
mov
mov
aad
add
int3
lds
push
shlb
bound
mov
jmp
sbb
iret
out
push
in
and
xchg
and
pop
andb
lret
cltd
push
add
jmp
jecxz
push
mov
loope
xchg
loopne
fwait
mov
sar
lahf
insb
cli
sub
iret
test
jecxz
test
pop
adc
imul
in
push
ret
cld
ja
shlb
xchg
addr16
imul
je
pop
test
mov
mov
incl
divl
shll
mov
or
xorl
adc
or
sub
lret
sub
push
pop
call
adc
or
movsl
call
sub
test
lods
add
idiv
cmpsl
shll
rorl
jne
mov
add
fsubr
sub
xchg
xchg
xor
ja
out
loope
mov
xchg
sbb
and
dec
les
cmp
outsl
scas
insb
aaa
mov
add
cmp
test
push
xor
leave
shl
sbb
ljmp
out
mov
sbb
jnp
int
das
sub
popf
xchg
xchg
cmpsb
fsubs
mov
movsl
subl
jge
push
sbb
and
sub
dec
cmp
dec
pop
xchg
mov
sahf
inc
popa
jmp
clc
and
sbb
mov
and
push
addr16
fsubrs
add
push
cmp
add
jp
pusha
std
cmpsb
pusha
pop
add
xchg
xor
mov
cmp
add
sbb
sbb
add
jno
dec
repz
mov
fdivs
push
into
leave
jg
push
pop
and
add
mov
fiadds
xor
adc
xchg
jno
ja
inc
jecxz
das
inc
cld
mov
movups
and
pop
push
sarl
adc
push
popf
xlat
leave
mov
dec
cmpsb
pushw
insl
dec
and
jb
jo
cmp
fs
cmpsb
clc
mov
inc
xchg
inc
pop
std
or
adc
rorl
push
mov
push
scas
add
outsl
loopne
movsl
fwait
lret
push
loop
push
idivl
mov
jecxz
into
mov
sbb
in
pmulhuw
jecxz
xlat
pop
adc
cmp
fsubrs
sbb
adc
jl
inc
movntps
mov
pop
pushf
mov
xchg
out
cmp
in
fdivs
out
incl
or
mov
pop
ss
inc
xchg
rorb
mov
lret
cs
pop
sbb
pop
mov
or
and
xchg
cmc
pop
pop
dec
lea
mov
sub
mov
dec
testb
cmp
dec
test
adc
std
pop
xchg
loop
shrl
and
mov
mov
daa
cmp
sub
push
dec
gs
mov
pop
sub
push
cmp
dec
and
cld
xor
push
fisttps
mov
fcomp
addr16
dec
nop
ljmp
stos
into
push
sbb
jecxz
and
std
out
dec
icebp
jns
ss
in
push
and
out
ja
push
cmpsb
js
insl
and
and
adc
push
fcompl
icebp
cmp
push
dec
adc
jns
pop
mov
test
and
loope
sub
pop
mov
data16
push
icebp
mov
das
sarb
popf
pop
jo
or
push
sahf
pop
dec
mov
push
jb
dec
xchg
scas
cmp
out
xor
cmp
inc
es
stc
push
stc
enter
lret
in
sub
jp
pusha
and
cmp
fiadds
out
add
push
adc
sti
pop
stc
fxam
aas
pusha
sbb
aas
movl
jne
push
adc
xor
pop
dec
and
add
pop
push
and
fldlg2
add
add
fs
rorl
clc
lret
es
sbb
pop
shrb
movsb
add
push
jp
lods
jmp
inc
mov
xor
or
mov
loopne
fadds
filds
adc
xchg
add
dec
xor
cmp
push
mov
inc
push
incb
lds
push
shlb
shlb
shrl
dec
sub
cmp
test
sarb
sarl
mov
add
or
jae
xor
stos
stc
ret
repz
xor
ss
mov
xor
sti
popf
mov
push
sub
mov
push
xor
cmp
cli
lea
test
outsl
es
mov
push
popa
mov
xchg
fcompl
xor
xor
repnz
fwait
pop
insb
mov
iret
mov
iret
negb
dec
movsl
or
rcr
faddp
cmovbe
ljmp
divb
popa
push
fadds
movsl
pop
fcompl
sub
add
or
dec
xor
aam
rcrb
sub
scas
test
jp
popf
lcall
cmp
push
imul
nop
popf
or
push
push
ret
mov
lcall
inc
pusha
shll
or
ljmp
mov
pop
popf
cmc
jp
fwait
les
test
add
cltd
lds
pop
repnz
mov
call
cmp
scas
pop
rcrl
push
xchg
fstp
jnp
inc
mov
sbb
js
andl
jb
out
push
mov
and
iret
dec
push
push
outsb
jp
outsl
cld
mov
sahf
push
jl
pop
push
ljmp
test
movsb
inc
cltd
xchg
mov
js
mov
add
or
mov
aam
push
icebp
mov
sbb
mov
pop
mov
push
add
xor
sub
outsb
xchg
cs
mov
cmpsl
jae
mov
fcmovnbe
mov
mov
mov
jo
daa
pop
ds
sbb
jb
mov
sti
inc
mov
cmp
nop
lods
adc
pop
lods
xchg
popf
test
lock
sub
adc
xchg
xchg
xor
push
add
pop
or
mov
add
and
test
addl
outsl
data16
frstor
or
mov
xchg
fld
out
stc
cmp
sub
mov
pop
push
incb
cmpsb
daa
je
sub
pop
in
jmp
ret
jae,pt
add
stos
in
addr16
and
sub
test
dec
es
cmp
leave
xor
decb
shl
lret
push
scas
stos
jmp
mov
fs
fcoml
and
in
nop
cld
sbb
faddl
mov
decb
sahf
jl
loopne
shrb
sbb
push
jp
xchg
scas
mov
push
sub
in
cmpsb
dec
popf
lret
pop
and
fisubs
mov
lock
popf
fbld
popa
sub
push
js
and
leave
leave
mov
enter
aaa
xor
push
fists
push
iret
in
out
xchg
jae
repnz
mov
mov
sub
add
lock
xchg
inc
rep
imul
lret
lea
sbb
push
rorb
xor
fisubl
out
mov
dec
les
cmp
aas
mov
jnp
inc
lea
pop
xchg
jnp
rcll
xchg
inc
stc
mov
dec
in
flds
fwait
sbb
inc
mov
mov
add
lcall
add
add
inc
int3
js
fbld
fimull
mov
mov
clc
clc
mov
insl
clc
jmp
insl
sub
add
rol
les
xchg
icebp
mov
popf
inc
repz
xchg
mov
mov
scas
xchg
jecxz
dec
or
inc
lds
push
mov
loope
cs
mov
lock
pop
jg
dec
jns
and
jmp
sbb
add
arpl
outsb
sub
mov
imul
push
mov
pop
dec
aas
pop
or
movsb
pop
push
mov
scas
cmp
pop
push
aas
and
je
mov
sbb
lahf
fnstcw
cmp
dec
lds
adc
xchg
push
and
adc
sub
cmp
dec
xchg
ss
cmp
fwait
cltd
fs
jne
outsl
adc
lea
jb
movsb
in
pop
stc
jp
js
jmp
xor
jmp
loopne
sbb
test
inc
jb
loop
mov
movsb
js
testl
adc
scas
outsl
add
repz
dec
es
add
in
or
push
mov
test
lods
enter
test
mov
cmp
pop
jl
rcrb
cmpsl
inc
lods
cmp
pop
inc
out
sahf
cltd
jae
xor
in
inc
or
mov
cmp
shl
push
or
jbe
push
ds
push
cmpl
repz
ljmp
pop
xchg
push
sub
in
shr
inc
shlb
pop
fidivrs
leave
cmpsb
sahf
mov
jp
push
jb
mov
loopne
xchg
add
lcall
add
iret
loop
pop
adc
sbb
das
or
or
aad
mov
mov
push
sti
mov
andb
loope
fstpl
pop
scas
stos
lods
push
xlat
cmp
das
in
out
fistps
jbe
push
sarl
or
mov
xlat
daa
push
call
mov
fwait
ja
bound
push
mov
ja
mulb
cwtl
ss
cmp
loope
pop
iret
fistps
sub
test
sub
jle
jl
loop
bnd
fistl
sbb
fnsave
cli
stos
pop
or
pushf
sarb
xor
shlb
iret
sbb
das
mov
pop
movsb
jae
ret
mov
out
sub
push
push
pop
outsb
aam
mov
push
jnp
jmp
fldt
add
adc
lods
ds
in
and
das
sub
and
repnz
cmpsl
sub
flds
mov
clc
out
push
dec
std
or
inc
mov
xor
push
les
jnp
adc
fdivl
stc
xchg
jbe
jl
iret
or
test
jae
repz
or
jno
jo
roll
jge
cmp
inc
mov
mov
push
dec
mov
cmp
jno
hlt
cmp
lods
stos
sarb
test
xchg
push
test
cmpb
ucomiss
out
push
jecxz
dec
stos
add
push
adc
ficompl
lea
lods
aam
aas
dec
mov
push
les
or
ljmp
sahf
mov
out
cmp
stos
push
dec
push
adc
jb
shl
add
in
mov
in
mov
dec
jb
push
pop
pop
loopne
int3
xor
lods
lcall
fdivrl
dec
or
xchg
fistl
cmpsl
mov
mov
sub
cwtl
insb
jno
xchg
mov
adc
outsb
sti
push
adc
adc
jo
add
inc
popa
mov
stc
clc
jnp
adc
adc
xchg
or
in
mov
xchg
push
jp
lret
sahf
xor
cli
sbbb
mov
mov
lcall
loope
lcall
sbb
iret
xchg
xor
fimuls
int
mov
lods
fs
mov
and
sub
mov
push
pop
jle
test
int3
out
mov
outsl
and
pop
push
sbb
jno
mov
shrb
stos
mov
mov
roll
pushf
fstps
push
jb
fimull
push
mov
mov
inc
sub
rcll
push
cmpl
js
or
cmp
mov
xchg
push
enter
iret
rorb
ret
ss
add
scas
or
lahf
ss
out
test
sub
fadd
in
mov
leave
push
jp
cwtl
xchg
lock
mov
outsb
ficoms
pop
repnz
cld
cmp
mov
in
inc
sbb
mov
mov
jle
xchg
adc
pop
xor
sub
sub
push
sub
insl
xor
mov
mov
mov
sub
loopne
fwait
lret
xchg
push
sbb
std
dec
aam
dec
mov
aam
cmp
sbb
xorb
in
and
jne
mov
jno
or
sbb
incl
test
inc
sbb
loope
in
cltd
jp
pop
mov
lock
adc
or
mov
scas
xchg
and
pop
stos
sbbl
popaw
test
stos
push
sbb
leave
dec
push
cmp
cmp
or
aam
jge
fwait
ret
cmp
cmc
dec
xchg
jne
leave
mov
pop
ret
mov
popa
adc
stos
xor
jmp
fstl
sub
or
and
ja
jmp
xor
leave
inc
int
cwtl
inc
daa
pop
mov
xor
sbb
rclb
aaa
or
gs
or
mov
jle
out
push
sbb
cmp
out
test
jmp
push
push
pop
dec
xor
sub
loope
sub
shrb
push
xchg
jge
push
in
inc
dec
push
in
push
xor
iret
mov
mov
fneni(8087
xor
sahf
scas
aas
mov
out
pop
jg
lcall
mov
lcall
test
les
addr16
push
xor
add
jne
ss
dec
pop
in
cwtl
je
push
sub
lods
jle
loope
out
xchg
loop
push
adc
ficoms
jecxz
cld
fcomip
pop
test
addl
movsl
push
push
ret
sub
sbb
add
mov
clc
push
in
push
add
repz
mov
fs
adc
sbb
sbb
and
jg
cmc
pop
or
add
lds
jmp
lret
jge
adc
orl
mov
sub
add
sbb
add
sub
and
movsl
sbb
sub
mov
sahf
jae
les
adc
mov
imul
cmp
and
adc
fucomp
shlb
cmpsb
fsubs
cmp
mov
or
ljmp
mov
dec
scas
loopne
out
lahf
jno
mov
jge
push
cmp
stos
add
movsl
aad
roll
or
pushf
and
mov
mov
sti
sub
jns
popa
push
xchg
cmp
add
sbb
pushf
dec
mov
mov
lret
mov
adc
mov
adcb
xchg
pop
lods
loope
jge
push
cmp
mov
fsubl
jmp
shlb
movsl
adc
fsubrs
js
sbb
pusha
cwtl
bound
ss
jecxz
filds
pop
cltd
daa
dec
mov
sbbb
adc
std
je
icebp
imul
mov
mov
pushf
or
test
sarl
inc
rcll
inc
cmp
add
push
rcrl
inc
dec
imul
cmp
lahf
xor
push
xlat
jbe,pt
fwait
jmp
jp
cwtl
xor
mov
xorb
lea
ret
aad
add
pop
out
scas
mov
repz
stc
mov
out
insb
rcrb
jb
lret
cmp
sbb
popf
ja
pop
jae
pop
jnp
rolb
xchg
mov
jle
push
iret
aam
sub
inc
sub
lods
dec
xchg
ret
add
dec
cmp
push
xchg
insb
dec
lods
mov
dec
ficompl
xor
inc
jnp
or
ret
dec
sub
jne
xor
jbe
imul
cmpsb
xor
adcb
or
cmp
pop
pop
insb
lret
lods
mov
das
jle
xchg
and
in
fwait
mov
leave
sar
add
push
xchg
std
pop
movb
adc
repnz
addr16
and
addl
mov
das
inc
das
pop
dec
arpl
out
xor
inc
xchg
adc
mov
gs
popf
sub
jo
sbb
adc
imul
cld
insb
or
sahf
movsl
aas
ja
pop
push
mov
ja
xchg
jno
or
pusha
dec
cmp
xchg
mov
mov
add
sti
lods
and
mov
loop
xchg
and
dec
cmp
cmp
std
sbb
xchg
jecxz
mov
movsl
dec
jnp
fwait
outsb
loopne
xchg
loopne
xor
sbb
add
outsb
push
aam
leave
xchg
leave
cmp
ficoms
dec
push
popa
rcl
xchg
sahf
rol
xchg
inc
cmpl
jmp
mov
icebp
popa
sahf
mov
sbb
cwtl
gs
cmp
mov
outsl
neg
mov
aam
iret
nop
lret
sahf
fwait
jg
loope
mov
repnz
adc
sbb
jnp
sbb
lods
arpl
outsl
xchg
inc
leave
jp
out
and
stos
mov
lcall
sbb
pusha
sub
pusha
nop
subb
sbb
sarb
push
int
sbb
arpl
xor
inc
jb
cmp
mov
cmp
xor
jne
mov
jle
lods
cwtl
fsubl
or
rclb
pop
mov
sbb
jmp
incb
mov
mov
in
mov
jg
fldcw
add
xor
pand
es
sti
push
addb
lret
lods
sub
not
dec
lret
ljmp
push
icebp
jle
inc
xor
mov
inc
dec
out
scas
ds
mov
xchg
inc
ljmp
add
scas
test
bound
lret
testl
test
pop
dec
ror
xchg
xchg
cs
inc
lea
insb
scas
jae
mov
push
ret
inc
shrb
stc
mov
inc
rcl
sub
fsin
int
lcall
loope
inc
sub
stos
inc
andb
mov
mov
mov
add
ljmp
insb
xlat
int3
leave
repnz
mov
sahf
sbb
data16
push
paddusw
sti
imul
sti
and
add
xlat
and
pop
adc
dec
enter
lret
and
cmp
mov
gs
hlt
fucomp
mov
xchg
arpl
inc
xchg
test
pop
imul
scas
inc
imul
inc
cmpsb
sbb
cmp
jl
cmp
dec
stos
data16
gs
xchg
std
std
or
or
inc
fdivrl
jbe
int
push
mov
cmc
jp
xor
add
sbb
dec
cmp
js
jno
inc
ds
xor
cmp
mov
pop
lret
mov
push
pop
iret
call
mov
mov
xchg
add
sub
or
lret
and
xor
sbb
fildl
test
loop
xchg
push
jmp
cmpsl
in
dec
jmp
movsl
or
sub
outsl
leave
and
mov
dec
into
or
push
push
inc
jmp
in
push
icebp
mov
sub
push
ret
adc
lret
nop
stos
sbb
or
cld
inc
fdivl
mov
loop
mov
pop
sub
and
pop
sbb
xlat
repnz
add
mov
mov
sub
jmp
dec
xor
xor
add
cwtl
inc
stc
push
or
fbstp
ret
push
sbb
adc
outsl
mov
iret
in
daa
shll
inc
hlt
js
mov
lock
cmp
mov
popa
xlat
pop
dec
ds
loopne
lahf
push
cltd
adc
scas
xchg
jbe
push
lods
stc
mov
xchg
out
cs
into
aaa
lret
loopne
jecxz
ret
jnp
das
jo
mov
and
sti
loop
subl
jno
into
jp
cs
pop
imul
pop
dec
ja
ja
scas
outsl
pop
xor
mov
mov
pop
je
jmp
xchg
adc
push
push
es
cmp
push
sbb
push
dec
ficoms
js
sub
popa
sub
xchg
dec
cmc
mov
dec
pop
mov
add
popa
lcall
xchg
mov
push
adc
push
jno
sub
mulb
pop
jbe
sub
insb
push
rolb
push
mov
leave
lods
sbb
outsb
mov
mov
sahf
sarl
lahf
incb
sbb
adc
insb
or
cmc
xor
sub
insb
inc
lahf
es
push
insl
add
fsubrp
mov
add
xor
jp
outsl
fisttps
addr16
and
shll
les
or
sbb
js
sarl
pop
mov
push
jnp
or
inc
lods
dec
pop
dec
sbb
mov
lock
mov
mov
shl
pop
pop
push
cwtl
inc
daa
movsb
out
dec
mov
gs
into
adc
cmpsl
pop
adc
or
nop
pop
fwait
dec
or
sub
inc
sbb
inc
jl
and
jb
repz
std
mov
jg
stos
dec
xchg
ret
call
dec
mov
insl
jp
and
dec
out
jp
xchg
cwtl
mov
mov
flds
jo
mov
jg
mov
and
movsl
aas
pop
mov
js
sbb
scas
aaa
adc
pop
add
push
jns
in
jns
fmull
sbb
out
mov
pop
sub
sub
arpl
mov
sarl
and
cmp
mov
add
mov
fucomp
int3
lahf
in
pop
hlt
shr
and
loope
add
jg
xor
sbb
or
cmp
cmp
adc
cmpsb
nop
test
es
aam
hlt
std
mov
xchg
ljmp
test
mov
nop
lret
xchg
mov
adc
ret
lret
sbbl
rol
sti
or
inc
imul
cmp
inc
test
jecxz
sbb
cmpsl
jo
into
adc
sti
sahf
mov
push
enter
add
cmp
or
dec
push
andl
fmulp
mov
aam
je
pop
sbb
cmpsb
sub
movsl
mov
pop
adc
test
cmovbe
fcompl
or
ljmp
inc
aas
sbb
pop
gs
cmpsl
jns
and
jb
bound
push
cmp
pop
popf
lahf
addl
aas
and
pop
testb
jmp
mov
and
mov
jp
lahf
add
jp
fs
into
lea
in
rclb
fs
xchg
cs
mov
ljmp
xor
mull
pop
into
pop
nop
clc
ljmp
fwait
cltd
push
jbe
call
rol
insl
jae
cld
add
inc
push
inc
cld
xor
mov
out
xchg
movsb
out
movsl
inc
daa
adc
mov
shll
sahf
lcall
dec
fdivl
cmp
sti
insl
fs
popa
add
mov
add
jp
cwtl
es
mov
mov
sbb
loop
and
dec
pop
sarb
dec
inc
popa
daa
inc
cmpsb
into
leave
jb
inc
jle
xchg
jns
aaa
repnz
add
cwtl
icebp
mov
ficoms
or
cmp
dec
sub
adc
cmp
outsl
xor
jnp
mov
test
popa
dec
sahf
int
addr16
in
mov
imul
mov
lds
sbb
cmp
out
push
xorb
test
out
imull
cli
pop
cld
cs
rol
dec
ret
mov
pop
pop
iret
std
iret
or
out
pop
iret
inc
jnp
mov
xlat
ja
sbb
fisubrs
lods
jbe
jg
std
xchg
jae
push
stos
in
hlt
push
xchg
and
add
rcll
lods
mov
push
mov
pusha
pop
jmp
jp
lret
inc
adc
rorl
sar
shl
out
pop
pop
cmc
push
add
lret
sar
stos
stos
sbb
mov
out
sbbb
jae
mov
jo
cltd
popf
pop
outsl
cmpsl
rol
lea
pop
leave
imul
pop
insb
mov
jnp
mov
inc
clc
mov
test
repz
dec
cmp
mov
das
leave
push
sub
movsb
add
sbb
or
pushf
ss
mov
xchg
mov
sub
nop
lea
out
sti
arpl
es
test
clc
jge
adc
sahf
push
push
scas
pop
in
das
mov
imul
pop
sbb
pop
shll
dec
js
outsl
cmp
add
daa
cmc
push
enter
in
es
push
pop
xor
mov
xor
aaa
mov
sub
test
into
pop
cmpsb
push
mov
sbbl
pop
xor
test
repz
test
arpl
jp
jno
sbb
mov
dec
mov
sbb
adc
outsb
add
addl
cltd
cmp
loop
ljmp
xchg
xor
jecxz
ret
out
dec
pop
sbb
mov
negl
sbb
push
shl
popf
sbb
jns
cmp
lods
in
cld
and
nop
mov
mov
test
in
and
adc
sbb
outsb
mov
inc
jle
sbb
inc
hlt
rorb
mov
cmp
mov
test
mov
movl
cmpsb
repz
popf
adc
xchg
inc
es
and
xchg
fildl
es
aam
imulb
mov
jne
dec
push
setge
jb
mov
gs
test
addr16
lods
fcoml
idivl
lock
jae
push
inc
cmc
xchg
mov
pop
enter
lcall
inc
jg
leave
jge
jmp
jle
inc
test
mov
mov
mov
mov
xchg
cmp
or
sub
out
popf
imul
jnp
pop
mov
out
scas
adc
mov
mov
in
imul
mov
and
ss
lock
ljmp
pop
jmp
and
in
inc
push
xor
jbe
jnp
outsb
mov
data16
cld
fidivrl
pop
ret
rclb
jge
mov
sbb
sbb
hlt
pusha
jmp
loopne
loope
push
jl
ret
int
loop
jg
sub
push
test
out
lahf
ret
and
test
jno
insb
adc
ror
adc
jmp
std
xor
aam
rcl
pushf
cmc
mov
je
add
jno
push
mov
adc
mov
push
xor
xor
mov
mov
xchg
jb
sub
mov
jge
sub
xor
inc
pop
cmp
es
into
orb
xchg
mov
in
and
lds
hlt
push
jle
rol
stos
sub
fnstenv
xchg
push
addb
pop
pop
jns
dec
inc
popf
and
imulb
xlat
push
inc
lret
push
pop
aam
test
jno
sbb
outsb
movsb
outsl
rolb
xchg
icebp
mov
imul
jo
ffree
mov
push
lcall
pop
xchg
xchg
lock
jg
push
adc
mov
rcrl
enter
push
out
in
movsl
cltd
add
jmp
dec
mov
pop
outsb
imul
xchg
add
cmp
mov
xchg
adc
enter
sarb
or
stos
sbb
and
and
cld
mov
popa
cmc
mov
sub
dec
xor
lea
cmpb
cmpsl
setl
mov
add
sub
and
dec
stos
mov
push
mov
iret
into
in
out
aad
inc
sub
mov
bound
adc
sti
ja
ljmp
or
lods
cmp
iret
push
std
lods
mov
jge
pop
cmpsl
dec
repnz
inc
shrl
add
push
repnz
jne
testl
sub
jp
and
or
out
cmp
cwtl
sbb
sti
add
in
dec
mov
lcall
xor
popa
outsl
dec
inc
pop
mov
in
sarb
lds
xchg
push
and
cmp
adc
scas
aaa
fdivrl
sub
sahf
fs
cmp
aam
sbb
mov
ja
test
sbb
or
test
cmp
popf
lea
inc
push
xorl
je
xor
adcl
dec
ljmp
jo
push
jbe
sub
or
inc
pop
inc
lods
xor
jo
push
insl
cmp
int3
jle
insb
and
dec
xor
imul
mov
xchg
cwtl
mov
add
and
sbb
ja
mov
pop
sub
inc
es
cmpsl
inc
xorb
jmp
mov
push
jle
cltd
ja
call
inc
push
add
lret
pop
icebp
in
rolb
push
outsb
out
in
xor
pop
insl
clc
ret
test
add
cmp
in
jp
loop
xor
cmpsb
pop
xchg
fdiv
negl
cltd
cli
fst
cmpsl
cmp
jbe
and
enter
xchg
std
add
pop
gs
push
xor
imul
push
jns
loope
ret
scas
leave
out
pop
loopne
hlt
pusha
mov
int3
jg
mov
ljmp
fisttps
andl
cmpsl
mov
xor
mov
in
lcall
imul
dec
aas
mov
fldl
push
iret
dec
and
push
imul
cld
mov
mov
arpl
sub
shll
jbe
sarl
ss
pusha
lock
cld
mov
jecxz
jno
lret
jl
sbb
rcll
or
inc
mov
in
cmp
test
push
jae
fimull
test
mov
dec
xor
sbb
pop
xchg
xlat
adc
mov
je
pop
jo
xchg
out
or
sub
mov
pop
jg
mov
divb
stos
dec
stc
jnp
stos
outsl
add
push
test
cmp
xchg
xor
aaa
movsb
les
mov
lea
pop
cmp
xor
xchg
int
adc
test
or
push
movsb
xlat
mov
jne
and
leave
shlb
dec
and
jne
loop
sbb
mov
in
imul
xchg
mov
movsl
ljmp
xor
jne
mov
xchg
out
mov
cwtl
frstor
adc
inc
mov
mov
push
orps
xchg
scas
ljmp
push
lcall
sbb
xchg
jge
xchg
in
in
lea
jmp
cmpsl
xchg
push
cltd
or
int
cltd
pop
add
notl
mov
jo
rol
sub
mov
dec
popa
out
jecxz
jo
sbb
jmp
push
adc
dec
cmp
mov
out
ja
cs
pusha
sbb
or
xchg
and
pop
notl
adc
adcb
pop
int
mov
adc
jle
adc
je
fldenv
ret
pop
shlb
push
cmp
pusha
cmpps
cmc
add
das
dec
mov
movsl
repnz
cmpsl
sbb
movsl
lahf
ficoml
clc
test
jnp
lret
xlat
js
stos
pop
sub
inc
mul
xchg
aas
sub
and
imulb
jl
cs
jl
add
hlt
rcl
inc
fnsave
shll
stc
xor
lahf
dec
or
dec
jge
int
stos
push
rorl
fs
xor
imul
and
xlat
sbb
lods
xor
leave
mov
jno
or
jmp
test
insl
mov
xchg
mov
mov
lret
insb
xor
cld
dec
xchg
pusha
lock
jbe
push
cs
xlat
popa
jbe
push
mov
lea
decl
xchg
mov
movsl
shrl
shll
scas
xor
stc
cmpsl
mov
dec
xor
sub
xlat
or
das
mov
jns
mov
sub
or
mov
or
mov
cmpsl
xchg
add
addb
push
mov
imul
mov
xchg
xor
movsl
test
dec
iret
test
mov
fidivl
out
jbe
scas
pop
loopne
push
or
sarb
sub
xor
xchg
mov
dec
cmovo
scas
push
add
test
inc
out
fs
or
sbb
test
js
jmp
mov
repnz
or
loopne
insl
repnz
jle
sahf
fidivl
adc
xchg
mov
imul
or
or
push
fptan
fsubr
xchg
push
int
dec
stos
in
stc
jbe
cwtl
adc
mov
dec
mov
or
addr16
ds
add
leave
pop
jno
stos
aad
rclb
mov
jmp
scas
and
dec
xchg
dec
mov
sbb
fmulp
cld
sbb
cld
mov
mov
js
bound
dec
push
iret
mov
lret
daa
pop
pop
js
fimuls
jnp
xchg
xchg
sti
scas
sub
clc
cmp
mov
or
and
cmc
or
js
in
xchg
inc
mov
daa
push
dec
cltd
cmp
dec
insb
sbb
sbb
dec
mov
xor
iret
mov
lahf
cmp
cmp
add
pop
shl
dec
in
outsl
sar
aas
clc
dec
lods
aas
sar
mov
dec
aam
rolb
dec
call
icebp
test
insl
inc
and
arpl
sbb
push
fdivrs
repnz
push
sub
cmc
sbb
sti
jge
pop
mov
nop
push
fadds
jmp
shll
jb
cmp
repnz
pop
scas
test
pop
xor
add
sbb
push
insl
lret
sbb
add
mov
xor
xchg
xchg
pop
jnp
sub
or
sti
and
mov
add
jecxz
pop
inc
add
nop
test
js
sbbb
pop
call
xor
adc
fidivs
pop
jbe
lret
mov
loopne
ret
mov
clc
or
hlt
xor
repz
lcall
jmp
loopne
jle
insb
cwtl
xchg
mov
sbb
jle
pop
sub
sub
jnp
sub
ret
mov
mov
mov
fwait
aad
shrd
inc
out
loope
pop
ljmp
mulb
and
sbb
andb
jne
mov
shr
mov
jg
mov
aaa
nop
lahf
jnp
dec
or
pop
mov
mov
mov
and
lahf
jecxz
mov
mov
or
push
fs
rcll
and
mov
aaa
dec
jmp
stos
into
cmp
xlat
stos
movsl
int3
adc
pop
dec
hlt
test
sbb
add
dec
xchg
inc
pop
rcrl
mov
sub
cmp
xor
push
sub
and
stos
lret
cltd
int3
xor
push
xchg
sub
xchg
jae
pop
pop
sub
mov
stos
lods
aam
jg
test
push
into
leave
fmull
movsb
ss
mov
jmp
loopne
out
adc
mov
das
outsl
insb
mov
cmp
push
or
and
jl
or
loope
cmpsl
jno
jl
and
jo
inc
sti
sbbl
xor
stos
inc
test
imul
xor
jae
sahf
push
arpl
test
cwtl
and
aas
addr16
inc
cmp
aam
cs
dec
fdivp
xchg
mov
and
mov
loope
loopne
cmpsl
aas
ret
inc
lret
in
daa
mov
and
les
jbe
xor
add
adc
imul
repnz
mov
or
pushf
stc
fcmovnu
sbbb
test
daa
clc
push
sti
mov
mov
cmp
popf
or
or
aam
jbe
dec
popf
lret
arpl
or
call
cwtl
test
call
mov
je
mov
adc
pushf
loope
xor
push
pusha
ret
hlt
lcall
push
jecxz
iret
push
push
pop
sahf
sub
xchg
push
sbb
xor
aas
cmp
mov
loope
stos
loope
push
fdivrs
add
mov
loop
jge
test
fs
rorl
inc
and
push
test
pusha
mov
pushf
fnstenvs
pushw
aad
inc
or
push
shlb
adc
sub
enter
stos
push
out
fbld
xchg
scas
lods
std
xorb
push
adc
ret
loop,pt
stos
and
cmc
inc
fwait
sti
xchg
mov
add
add
daa
push
xor
outsb
mov
add
bound
or
sub
jne
xor
and
jge
pop
mov
cli
and
push
jl
push
cmp
out
jle
nop
in
insl
ret
pop
mov
adc
cmc
mov
mov
push
loope
push
lock
fldenv
dec
dec
dec
xchg
jns
mov
in
loope
mov
xchg
scas
adc
xchg
lods
lock
insl
push
mov
lods
xchg
xchg
cmpsl
mov
mov
xchg
and
inc
repz
dec
sbb
ja
sub
xor
pusha
mull
lds
and
frstor
inc
push
jg
pop
pop
cwtl
and
inc
xchg
shrl
iret
shrb
insb
test
cmp
xchg
xor
push
iret
push
test
and
and
outsl
mov
jp
cmp
inc
xor
andl
into
sbb
mov
daa
xor
pop
push
leave
popf
arpl
dec
xor
jecxz
sbb
sbb
sbb
int3
rclb
test
mov
loopne
or
xchg
iret
mov
inc
outsl
sbb
push
idivl
int3
jge
push
mov
mov
imul
dec
arpl
pop
jmp
cmpsb
int3
out
stos
jg
adc
icebp
sbb
mov
push
jo
xor
jns,pn
idivb
add
out
mov
mov
or
jge
jl
jle
ss
call
jp
vphadddq
dec
aam
test
dec
roll
xchg
jl
loope
pop
inc
xchg
jl
test
sub
stc
call
jb
cmpsl
std
and
mov
rcl
out
and
mov
das
in
xor
fcmovb
sub
movsl
pusha
xchg
stc
push
push
ret
or
daa
xor
sbb
fdivs
mov
mov
out
shrb
enter
stos
inc
sub
lock
xor
mov
add
push
test
bswap
jae
cmovnp
sub
xchg
mov
sbb
in
clc
rcl
lds
jbe
sub
mov
dec
or
int3
inc
xchg
cmp
iret
dec
xor
xor
hlt
jb
stos
inc
xor
js
stc
push
inc
and
inc
cmpsb
push
test
add
sbbl
or
fs
and
add
fistpll
je
dec
jo
repz
mov
mov
mov
in
mov
and
dec
cmp
mov
mov
out
jae
or
bound
xchg
push
ret
mov
jbe
and
subb
add
jecxz
ret
inc
sbb
add
xchg
out
jp
and
jnp
jl
jo
std
aas
lea
arpl
or
adc
jecxz
pop
inc
xor
rcrb
xchg
adc
or
and
push
imul
popa
xor
mov
clc
push
insb
or
sub
into
scas
pop
into
test
cmp
push
or
mov
mov
int3
mov
adc
jg
xor
jo
xchg
dec
sbb
and
push
adc
es
add
mov
adcl
add
push
mov
sarb
add
mov
jb
xor
push
mov
lds
push
sysexit
xchg
jmp
dec
and
repz
jo
xor
clc
lods
cmp
jno
inc
ja
fistps
lock
stos
shr
repnz
pop
lods
push
mov
and
or
push
test
scas
mov
loop
stos
mov
ret
dec
in
test
adc
jl
out
lahf
ss
aaa
rcll
adc
add
xchg
add
dec
sbb
in
cwtl
test
mov
adc
loopne
sub
ja
add
test
imul
ss
lahf
mov
add
rcrb
cmp
rorl
std
outsl
ljmp
testb
xchg
cltd
dec
xchg
pop
mov
jo
sbb
lahf
bound
xchg
imul
das
dec
ret
fidivs
dec
stos
idiv
frndint
xlat
divl
je
jecxz
movsl
in
pop
mov
loop
dec
and
push
xchg
insb
jmp
notl
xchg
cltd
sub
pop
push
repz
outsb
unpckhps
or
mov
scas
inc
out
cmp
out
lods
sub
mov
les
jo
dec
cmp
or
jmp
xchg
out
mov
loop
out
rcll
ret
insl
adc
fimuls
subl
fcomps
lret
or
xchg
loop
pop
xor
ljmp
cltd
into
xor
push
mov
adc
xor
push
nop
ss
mov
mov
std
dec
dec
leave
dec
pop
aad
xchg
shrl
jg
loop
mov
jb
jae
paddusw
cli
add
ficoml
jge
inc
mov
shll
jecxz
or
ficoml
shl
cmpsb
rcll
loop
jl
ficoml
test
out
mov
and
jg
mov
imul
or
les
push
mov
stos
sahf
pop
icebp
inc
or
cmpsb
adc
les
dec
sarb
jge
ret
mov
push
dec
and
cmpsb
leave
push
clc
iret
push
add
xor
test
cmp
ds
dec
and
test
push
xor
inc
sub
jne
stos
roll
jb
dec
mov
lret
cmpsl
mov
add
and
int
stos
enter
mov
inc
loope
jne
mov
test
pop
pop
int3
int
cld
loopne
mov
cltd
pop
xchg
mov
lods
sbb
jb
mov
sbb
stc
push
aaa
stos
push
ds
ss
or
adc
ss
xor
sub
popa
push
xchg
arpl
cwtl
cli
in
cmp
outsb
leave
shll
jo
std
sahf
push
mov
mov
dec
cli
pop
or
mov
inc
pop
enter
xor
sbbl
mov
mov
daa
icebp
cmpsb
icebp
nop
out
cltd
push
cmp
jb
test
pop
enter
sbb
or
pop
out
or
test
iret
adc
inc
adc
outsl
mov
insb
stos
xchg
jmp
inc
cmp
rcr
lret
fldenv
mov
in
xlat
and
and
in
pop
pop
jp
mov
les
jnp
pop
sub
mov
sarl
mov
mov
inc
mov
loopne
les
mov
jmp
inc
mov
out
adc
cmp
and
mov
xchg
insl
popf
jns
xchg
sar
sahf
sar
addb
or
mov
add
jo
fnstcw
fcoml
add
addl
jl
cmpsl
pop
xchg
inc
mov
inc
or
outsl
push
imul
out
cltd
repz
add
popl
or
cmp
in
jmp
idivb
js
jb
cld
jmp
adc
and
jo
jns
ss
hlt
mov
inc
add
mov
prefetchwt1
cli
jo
sub
pop
into
daa
out
mov
xchg
xchg
pop
sbb
pushf
sub
dec
rorb
mov
ss
out
fcmove
push
mov
call
push
pop
arpl
push
lds
loopne
nop
xchg
mov
arpl
das
popa
pop
incb
pop
stc
mov
lahf
add
mov
hlt
jne
sbb
insl
rcll
es
iret
jns
scas
adcb
pop
int
push
mov
cmc
cltd
addl
out
mov
leave
sbb
lret
inc
ja
ror
jo
and
inc
imul
movsb
and
mov
inc
jl
lret
add
push
sbbb
rcrb
or
dec
sbb
and
in
out
and
xchg
dec
aam
cld
xor
stc
pop
and
or
mov
or
repnz
pop
int3
adc
cmp
pusha
sub
cld
inc
aaa
sub
sbb
xchg
pushf
fwait
bound
dec
xor
repnz
or
mov
dec
shl
popa
dec
pop
add
cmpsb
fistps
and
push
imul
push
gs
test
inc
pop
or
jno
aaa
cltd
repnz
push
or
xor
sub
jo
dec
xor
jmp
add
or
push
lea
cmpsb
sub
jne
ds
pusha
repz
inc
cmpsb
test
mov
test
dec
mov
jb
pop
aas
pop
sub
subb
leave
insb
js
mov
lret
sub
cmp
pusha
enter
adc
popa
cs
jl
push
or
cld
cmp
mov
cmpsb
iret
and
dec
mov
insl
cbtw
test
inc
jle
jns
mov
aam
mov
sbb
pusha
and
dec
push
out
sub
hlt
jne
xchg
xchg
or
pushf
mov
dec
pop
and
orb
int
lods
pop
aam
xchg
fwait
scas
ds
sarl
cwtl
aaa
mov
mov
push
loop
inc
daa
lret
loop
adc
loope
xchg
mov
out
sbb
mov
gs
jb
pop
in
sub
mov
test
pop
inc
test
icebp
std
imul
inc
shll
push
imul
xchg
pop
xchg
jb
dec
inc
test
ds
inc
outsl
pop
push
jae
clc
ds
xor
add
and
div
dec
xchg
xchg
xchg
sbb
jb
lret
xchg
add
call
pushl
sbb
adc
int
mov
xchg
dec
push
jecxz
adc
cmp
int3
insl
or
faddl
lahf
jecxz
inc
hlt
inc
test
push
inc
jmp
mull
sar
lock
lret
mov
fwait
mov
das
jp
mov
fcmovu
jno
add
movsb
mov
and
cmp
xor
sub
sbb
or
or
adc
mov
ljmp
test
les
mov
pop
cmp
sbb
inc
mov
pop
xor
sbb
stos
popf
cltd
dec
mov
ret
push
sbb
das
loope
out
int3
dec
dec
push
loope
movsb
fmul
pusha
stos
sahf
and
dec
push
add
rcll
in
inc
xor
mov
sub
in
sbb
repnz
push
stc
addl
out
jmp
adc
lret
hlt
or
enter
sub
daa
mov
cltd
les
dec
sbb
push
mov
sbb
xlat
push
xchg
cmp
and
dec
fcomp
incb
stc
xchg
and
adc
xchg
sub
loop
fsubrl
or
daa
cmp
addr16
dec
mov
and
mov
stos
sub
sarb
or
and
pop
sbb
aas
mov
aas
mov
xor
sbb
push
fs
loopne
push
mov
mov
xchg
pop
outsb
mov
test
pop
cwtl
xchg
xchg
jle
adc
outsb
xor
pop
cmp
cld
popa
mov
sub
jno
lcall
das
in
std
cmp
idiv
lock
xchg
psraw
std
movsb
sub
pusha
insb
push
out
pop
and
mov
pop
rcrl
ljmp
push
push
mov
mov
jmp
outsl
mov
jmp
mov
mov
xor
repz
repz
add
call
add
mov
lods
rcrl
daa
cmp
jae
es
xchg
js
mov
sbb
sub
ljmp
repnz
cmpsl
cmp
add
push
inc
outsl
addr16
outsb
cmp
icebp
test
xor
out
insl
das
shlb
fisubs
push
clc
js
das
in
dec
pop
jo
push
sti
fidivrs
jle
mov
mov
clc
addr16
mov
mov
push
cld
or
mov
addb
popa
fnstsw
arpl
add
ss
mov
jecxz
imul
leave
add
lahf
push
lods
ret
or
movsb
imul
out
ds
or
iret
pop
outsl
cs
mov
mov
inc
stos
jge
sub
cwtl
dec
push
mov
ds
nop
lcall
jno
repz
loopne
mov
gs
push
repnz
sub
adc
xchg
cmc
repnz
mov
add
push
into
xchg
popf
test
xor
mov
jbe
mov
push
mov
mov
xor
cwtl
arpl
fadds
das
dec
icebp
and
out
rcll
cld
lret
js
sbb
negb
insl
stc
lcall
insb
test
call
les
sub
insl
divb
cmp
test
stos
in
dec
or
fstps
lock
clc
xchg
pop
xor
mov
dec
cmp
jns
sbb
jl
or
fucomp
sarb
jp
push
mov
dec
pop
mov
ljmp
dec
cmc
fmulp
sti
jp
mov
dec
outsl
sbb
jp
lret
rclb
push
popa
je
adc
lret
hlt
outsl
notb
push
lret
in
std
movsl
cld
xor
xchg
test
adc
filds
mov
jmp
dec
insl
mov
pop
push
or
mov
push
jne
test
data16
or
sti
in
mov
mov
sub
ror
out
ja
and
xlat
push
xorl
jne
mov
mov
mov
jl
sti
data16
stc
jl
xchg
pop
enter
sub
in
fisttps
std
sbb
xor
orb
cmpsl
or
sti
fldenv
sti
iret
xchg
ss
enter
lods
das
add
sub
mov
xchg
sbb
push
nop
xchg
push
jnp
outsb
jb
in
ret
xchg
sbb
mov
add
pop
hlt
xor
dec
sbb
loop
adc
into
jp
push
mov
jae
jne
dec
ret
mov
fldt
or
jb
jge
movsl
int
rcr
enter
test
pushf
sahf
loope
test
nop
sbb
sub
int3
cmp
scas
stc
sbb
pop
dec
cs
dec
jne
or
hlt
jns
jne
movsl
cld
fdivrl
dec
xchg
add
repz
mov
hlt
imul
mov
mov
fucomip
pop
popa
or
outsb
cmp
xor
add
push
addr16
push
push
xchg
imul
sahf
int3
sub
repz
mov
mov
mov
push
jecxz
repnz
xchg
mov
jle
int3
cmp
roll
mov
es
je
pop
push
test
dec
pop
in
push
mov
movsb
aas
shlb
sbb
dec
pop
cmovno
call
mov
jno
cmp
arpl
dec
into
cmp
clc
jge
mov
fwait
xor
xor
mov
sub
lds
das
sub
push
add
dec
fistpl
adc
xchg
aas
push
sub
aaa
fwait
and
imul
shll
stc
ss
cmp
insl
mov
push
je
or
divl
jp
mov
adc
lods
add
loopne
aam
inc
cmp
sti
testl
imul
xor
pop
dec
ja
push
jo
jns
arpl
mov
dec
fstpl
adc
sbb
ljmp
or
add
push
jne
mov
int3
rolb
sbb
fdivl
mov
mov
push
popf
sbbb
sti
in
mov
jmp
push
xchg
xchg
add
addr16
adc
ret
sarb
lods
ja
sub
mov
outsb
jne
adc
cmc
into
sti
jmp
icebp
adc
mov
mov
int3
out
or
lahf
inc
mov
les
inc
stc
mov
cmp
push
dec
int3
add
lods
sbb
ja
jecxz
popf
and
and
in
ret
stos
mov
stos
mov
mov
adc
sbb
divb
ja
dec
imul
dec
xorb
or
mov
push
repz
cmp
sub
js
in
pusha
enter
jb
shl
aam
pop
sarb
aad
cli
lods
push
add
test
xchg
mov
imul
sub
les
cmc
cmpb
dec
sbb
sbb
mov
clc
pusha
gs
dec
push
add
bswap
push
mov
jge
and
inc
xchg
jp
lock
clc
enter
mov
popa
imul
imul
je
in
gs
pushf
jnp
sub
inc
stc
dec
push
mov
pop
push
mov
sbb
mov
ds
mov
and
aaa
push
jmp
nop
iret
sbb
add
test
pop
adc
mov
sbb
xchg
push
mov
push
pop
adc
inc
and
cld
es
imull
loopne
xlat
icebp
out
cwtl
in
fcoms
xor
mov
je
or
into
mov
lea
cmp
inc
lods
test
loopne
jg
fildll
mov
imul
or
insb
out
inc
jno
jg
dec
clc
arpl
in
sbb
call
pop
fidivs
xchg
push
mov
xor
push
xchg
rcrb
cmp
aam
sub
jmp
xchg
das
jmp
mov
aaa
sbb
jbe
jae
sub
fstpt
jle
ja
out
jp
mov
jno
int
mov
repnz
jb
and
lock
call
mov
fs
testb
jne
jmp
inc
icebp
test
or
orl
dec
dec
push
cmp
sbb
test
int
fdiv
xor
subb
xor
or
xchg
pop
cmp
xchg
or
cmc
rcrb
sarb
cs
adc
sarl
jge
out
pop
test
sbb
adc
sbb
xor
fmull
data16
push
xchg
or
pop
cltd
xor
inc
adc
idivb
ret
mov
and
mov
in
sbb
ds
cld
xchg
out
nop
and
icebp
mov
sahf
mov
dec
xchg
in
lahf
repnz
in
mov
xchg
fists
mov
inc
xchg
cmc
mov
mov
pop
std
aas
dec
xchg
popl
leave
stos
pop
scas
dec
cs
inc
and
jbe
and
jp
adc
in
sahf
icebp
jbe
ficoml
iret
push
movsl
pushf
pop
mov
inc
xor
and
popf
or
int
dec
push
aas
cmp
mov
sub
adc
add
push
clc
xchg
xor
aam
nop
mov
repnz
mov
inc
dec
loopne
mov
lret
adc
push
test
cltd
xor
sbb
dec
cwtl
fcomp
adc
pop
mov
mov
lds
dec
adc
je
les
mov
lock
mov
pop
cwtl
dec
or
adc
mulb
flds
mov
push
sub
xchg
inc
test
rorl
jmp
xor
and
fistps
jl
movsl
stos
fdivs
insl
or
popa
pop
sub
outsl
mov
push
mov
rolb
sub
pushf
negl
add
lds
mov
addr16
lock
or
adc
lods
and
cmp
jmp
jno
movsb
inc
fcoml
jo
pop
insb
xor
cmpsb
push
outsb
jne
cmp
sub
dec
subl
dec
loop
sbb
pop
es
inc
call
mov
ja
xorl
es
fsubrs
mov
js
fs
out
sbb
push
cmpsl
add
icebp
imul
ret
dec
add
mov
sub
xchg
add
mov
dec
add
jbe
sbbb
lock
jp
xchg
sbb
in
int3
ret
push
sbb
mov
xor
mov
fwait
mov
jg
cmp
leave
stc
ret
xlat
and
les
mov
repz
mov
add
mov
sbb
popa
movsb
sbb
ret
inc
jne
dec
xor
fnstcw
mov
add
in
push
pop
dec
aaa
mov
fwait
jae
fcompl
push
xor
enter
icebp
pop
pop
popa
push
ret
adc
in
adc
fbld
push
push
sbb
pop
cmp
aam
sub
sbbl
mov
subl
mov
adc
jbe
sahf
data16
cmp
mov
cmp
iret
xchg
pushf
dec
adc
cmp
pop
int
loopne
out
ss
push
clc
mov
mov
add
idivb
push
inc
fs
xchg
add
leave
xor
scas
inc
mov
pop
dec
loop
xchg
rcrb
mov
inc
popa
sti
neg
mov
js
mov
xlat
mov
jb
push
lret
push
jno
push
test
pop
test
or
shll
stc
sbb
sahf
out
add
js
and
outsb
jbe
cmp
scas
and
cmc
cld
jmp
cmp
push
cmpsl
inc
hlt
imul
push
cmp
cmp
sbb
add
loop
fistpl
mov
xchg
stos
pop
push
sbb
inc
mov
jl
inc
bound
pop
push
out
fnstsw
in
xchg
in
xor
fstl
pop
mov
insl
pop
out
cmp
mov
or
mov
pushf
sub
pop
adc
shr
test
cmp
cld
shll
fidivs
push
mov
scas
push
insl
mov
add
xchg
cwtl
push
cli
inc
pop
mov
hlt
into
insb
mov
std
cmp
mov
push
mov
dec
jle
int3
out
js
pop
in
test
orl
or
pop
nop
pop
ds
or
dec
pop
and
mov
aam
xchg
aam
push
cmpsl
test
mov
mov
mov
inc
ljmp
mov
mov
xor
adc
cmp
out
pop
cmp
xor
jae
xor
sar
out
sbb
push
ja
jl
pop
cmp
xchg
leave
in
dec
lods
loopne
xchg
cmpsb
xor
fwait
roll
shrl
insb
push
push
leave
addr16
aam
sbb
mov
push
xchg
push
bound
pushf
jp
test
cmp
jle
xor
enter
mov
jle
idivl
int
mov
movsl
sub
es
or
movl
mov
inc
mov
testl
mov
int3
ds
dec
pop
sbb
sbb
shl
int
les
lahf
int
leave
cs
mov
push
or
mov
push
cmpb
mov
lcall
dec
lea
pop
sbbl
jmp
or
cwtl
and
popa
jge
icebp
cmpsl
iret
sahf
fcoms
in
jmp
adc
repz
call
mov
sbb
add
adc
add
test
dec
sbb
sub
pop
mov
cld
jge
inc
xor
fcoml
shll
sarl
lret
int
xor
jae
push
jmp
lods
in
mov
clc
imul
push
dec
push
in
jl
pop
cli
or
pop
sub
push
and
loop
inc
inc
pop
sahf
jl
adc
outsb
jmp
lret
test
jns
dec
fs
outsl
push
ljmp
addr16
xchg
and
mov
fucomi
xchg
jnp
xlat
icebp
movsl
mov
outsb
int3
or
jb
bound
popf
movsl
pop
xchg
xchg
and
stos
xchg
cld
adc
push
fdivl
call
and
testl
xor
xchg
test
fisubrs
adc
push
lret
loop
lock
scas
sub
das
cmpsb
push
pop
sub
loop
jp
sbb
pop
jge
push
cmpl
add
mov
mov
xor
push
pushf
xchg
daa
xchg
mov
xorb
mov
sub
jp
outsl
push
sub
decb
cmpsb
loop
in
xchg
and
clc
imul
inc
dec
cmp
add
mov
movsb
dec
outsb
add
int3
mov
call
push
add
shl
sub
cmpsl
cld
xchg
stc
hlt
mov
lret
push
jo
xchg
rclb
pop
imul
insb
jae
ljmp
js
adc
sbb
call
in
mov
pop
mov
stos
add
loope
inc
fdivr
inc
test
clc
xor
iret
jle
pop
jmp
pop
sti
sbb
and
xchg
stos
jmp
inc
leave
sysenter
cmpl
xlat
inc
mov
into
sbb
inc
lea
push
cwtl
sub
jo
sarl
outsb
bound
xchg
mov
lret
xor
or
in
neg
lock
scas
test
adc
xchg
ret
push
cmp
xchg
sti
mov
and
mov
xchg
pop
cmp
lret
lret
shll
push
stos
inc
xchg
insb
sbb
cmp
sti
nop
subl
fsubl
xor
pushf
pop
xchg
lods
lcall
popa
pop
imul
lret
jmp
mov
dec
add
data16
inc
or
ret
cmp
repnz
out
mov
push
jp
mov
xchg
or
add
pusha
push
lods
aam
inc
jbe
sti
xor
mov
lcall
ljmp
arpl
and
shlb
icebp
lods
cmpsl
pop
pop
push
mov
cltd
or
cmpsb
fs
stos
insb
mov
pop
daa
and
and
subb
outsl
push
mov
cmpsl
pop
inc
pop
cld
shr
and
addr16
jl
push
hlt
cli
sbb
jg
jp
mov
cmp
cwtl
adc
gs
inc
sbb
jecxz
push
leave
dec
sbb
push
push
scas
je
push
cmp
loopne
out
lret
sti
subl
inc
push
in
cld
scas
or
cmp
roll
pop
sbb
aad
sbb
movl
fsubs
test
mov
lods
test
into
out
das
or
int3
bound
dec
push
inc
hlt
mov
add
pop
add
jo
or
mov
jge
and
or
inc
mov
or
scas
bswap
rcrl
pop
iret
jge
bnd
and
cmpl
lret
clc
cwtl
std
mov
pop
cmc
mov
lock
xchg
mov
js
rclb
adc
sub
iret
in
mov
cld
or
cwtl
adc
lahf
cmpsb
in
dec
mov
fwait
fwait
sub
lahf
bound
pop
test
sbb
les
test
movsl
sar
mov
clc
adc
flds
stos
mov
roll
dec
stc
pop
lret
push
js
sub
adc
aaa
push
ds
sub
push
rclb
pop
outsl
icebp
leave
inc
jo
lods
cmpsb
mov
pop
jecxz
lods
or
adc
mov
push
call
je
addr16
scas
dec
jp
jb
inc
jne
push
xor
leave
pop
pop
jmp
inc
push
adc
mov
jbe
mov
pushl
dec
cmp
mov
mov
fnstsw
nop
add
repnz
cmp
cmpsl
sbb
clc
rorb
push
mov
sbb
inc
jns
mov
repnz
out
std
sub
rorl
xchg
addl
rorl
test
mov
push
cmp
dec
loope
fwait
push
mov
xchg
dec
stos
ja
cs
insl
mov
push
ret
ds
mov
mov
xchg
sub
mov
jp
stos
adcb
xor
mov
mov
inc
lods
jp
pop
pop
push
test
fldt
xchg
dec
add
popa
lods
mov
mov
imul
cmp
xchg
out
icebp
aad
repnz
lock
out
push
lods
cmp
in
mov
and
loopne
test
or
push
dec
adc
lods
mov
sub
imul
in
mov
dec
movsl
and
aaa
clc
fsubs
das
pusha
pop
rclb
sbb
stos
aaa
aaa
in
jne
aam
ljmp
fs
ret
outsl
gs
pop
xor
inc
mov
out
int
mov
sbbb
call
and
push
xchg
rclb
dec
xchg
push
lds
inc
xchg
es
out
imul
inc
jo
loop
insl
add
or
pop
cltd
stos
das
test
stc
mov
mov
fstpt
fiaddl
popa
test
imul
bound
ret
in
pop
sahf
outsb
test
mov
pop
daa
out
pop
xchg
pop
iret
inc
leave
cmp
cmp
sub
mov
add
mov
adcb
fdivl
hlt
pop
dec
add
and
lods
negl
popf
outsl
cmp
sahf
or
adcb
lret
jl
push
shrl
cs
bound
imul
out
pop
fcoms
lock
push
mov
arpl
inc
mov
or
mov
rorb
int3
les
cmp
addb
js
divl
js
sbb
mov
lret
sub
stos
push
rcrb
orl
dec
inc
mov
fbstp
push
sub
mov
cmp
adc
bnd
in
daa
jg
dec
jecxz
sub
iret
sub
xrelease
inc
aaa
ret
sarl
mov
jae
jmp
or
daa
sub
or
dec
mov
xchg
loopne
pop
sbb
enterw
lahf
aad
les
dec
test
dec
scas
or
inc
scas
mov
adc
sbb
lods
or
xor
movsb
push
stos
addr16
push
pop
test
dec
cmp
lds
sub
mov
fcomps
inc
push
pop
lret
addr16
aad
sub
mov
das
dec
lods
inc
outsl
cmpsb
notl
jb
mov
sub
or
jo
and
es
xor
or
pop
push
push
mov
and
add
test
xchg
pop
fnsave
pushf
popa
sub
int3
into
pop
mov
int
push
xor
sti
leave
adc
or
arpl
push
mov
mov
int
cld
jnp
aam
scas
data16
push
mov
int3
xchg
mov
outsl
dec
xchg
push
std
xchg
hlt
mov
test
cmp
call
mov
mov
xor
and
add
sbb
test
sub
xor
ss
xchg
fs
adc
xchg
notb
sbb
cmp
rcr
mov
in
pop
xor
pop
mov
das
pop
inc
stos
pop
inc
push
mov
imul
stos
out
jno
imul
ret
push
pop
push
pop
std
xchg
lods
push
fcmovbe
pop
push
or
mov
mov
push
aas
inc
jns
leave
scas
xorb
push
mov
insl
cmpsb
loope
pusha
cmp
es
ss
ljmp
jne
lods
outsb
int3
or
in
add
cmp
loope
inc
movsl
daa
push
pop
dec
add
mov
sub
idivb
jae
or
adc
adc
les
lret
in
loopne
pushf
movsl
xlat
call
add
aad
jbe
dec
mov
les
mov
lcall
mov
dec
aas
lock
sbbb
call
adc
fidivs
sub
arpl
lret
imul
or
lahf
inc
js
xor
das
test
mov
test
sub
jmp
mov
leave
mov
xchg
cwtl
rcrl
push
sti
repnz
push
push
mov
scas
lahf
ljmp
jp
lcall
call
aam
popf
dec
ja
mov
jo
inc
push
inc
in
fdivl
notb
pop
sub
adc
sub
push
xchg
gs
adc
les
pop
lds
in
sbb
mov
scas
lds
and
xchg
xor
scas
iret
repz
movsb
pop
mov
add
movsb
mov
push
arpl
xchg
ljmp
in
pop
jo
mov
clc
push
ljmp
and
fstpt
popa
popf
fdivs
fdivrl
movb
fsub
jg
in
popw
xor
sub
pop
rolb
in
jns,pn
lds
xor
adc
xchg
fwait
sar
jns
lret
add
mov
inc
repnz
xor
push
mov
mov
add
lcall
scas
push
xorl
xchg
push
xor
cmp
inc
loope
imul
mov
sbb
cmpsl
ds
test
test
movsl
pop
popa
enter
pop
icebp
cmpsb
push
xor
js
jo
lds
inc
cmp
daa
movsl
nop
mov
cld
out
inc
sbb
sti
inc
imul
mov
mov
cmp
ficoms
xor
test
pop
cltd
sub
mov
lahf
movq
pop
cltd
mov
lahf
das
and
lret
out
fistpl
test
movsl
addb
inc
lods
pop
sbb
scas
clc
fsubrl
aas
xor
pop
gs
lea
mov
dec
jne
int3
mov
jae
push
inc
jmp
mov
mov
jecxz
jnp
push
hlt
ds
in
lcall
mov
pop
cltd
icebp
sbb
sub
out
fsts
aas
cmc
lret
iret
jmp
cs
je
dec
add
dec
xchg
or
pop
jo
not
xor
sub
lods
dec
popa
push
sbb
outsl
mov
mov
dec
negb
push
or
mov
adc
cli
or
mov
aas
imul
xchg
jbe
inc
test
mov
mov
scas
mov
sub
imul
lret
jae
call
lahf
mov
jg
add
cmpsl
adc
stc
cmp
dec
ffreep
repnz
cmp
cmpb
in
lods
push
cmp
repz
test
jnp
in
fs
mov
lret
iret
aam
inc
ljmp
push
cltd
mov
sahf
mov
push
in
subl
negl
pop
mov
xchg
in
in
fidivl
sub
push
mov
cmpb
dec
push
loopne
xchg
fisubl
mov
aaa
add
xor
push
test
adc
out
js
add
sbb
jp
popa
jmp
cmp
push
jo
push
flds
jle
cmp
stos
adc
mov
test
jbe
movsl
dec
push
add
jne
sarb
cmp
clc
adcb
xor
inc
pop
push
mov
les
icebp
mov
push
xchg
ja
fisubrs
jbe
inc
aas
push
shrb
pop
mov
cmpsl
into
add
stc
cs
into
cmp
dec
hlt
xchg
pop
and
cwtl
into
gs
lret
mov
rclb
subl
test
push
lahf
out
daa
repz
jle
or
inc
stos
in
test
aas
mov
xchg
jnp
int
lods
test
ret
je
adc
imul
pushf
pop
jno
test
popf
int
stos
movsl
xchg
adc
push
pop
push
shlb
mov
dec
push
and
cwtl
pusha
push
mov
lahf
rorl
data16
mul
addr16
mov
mov
out
ja
inc
sub
jmp
sti
xor
and
out
add
dec
inc
jle
dec
call
cwtl
mov
jp
pop
pop
adc
in
jle
pop
aas
jecxz
test
mov
xchg
jno
in
mov
andb
stos
pop
sub
int
and
lds
jns
loopne
jmp
out
dec
mov
in
and
mov
mov
xor
lret
sub
jns
arpl
mov
lock
cmc
test
push
inc
xchg
mov
pop
nop
outsb
cmpsl
je
mov
sbb
fistpll
jp
imul
or
lds
adc
pop
aaa
pop
push
int
cmp
int3
loope
mov
xchg
add
shrl
sub
inc
dec
ja
sarl
stos
pop
loop
push
mov
jge
iret
mov
fstl
cmp
fldl
movsb
push
pop
pop
push
jle
adc
xchg
fwait
xchg
or
add
dec
in
add
or
inc
sti
jmp
add
fucomi
test
or
popw
lcall
dec
stc
jmp
push
mov
test
adc
mov
mov
push
push
es
es
test
sub
fdivl
cmp
fwait
push
sahf
insl
stc
aas
lds
inc
pop
into
js
jl
inc
mov
pop
push
movsb
mov
adc
iret
mov
jb
repz
lea
jo,pt
arpl
cmc
xor
loop
mov
cmp
cmp
movsl
rcrl
stos
jp
aas
lds
jns
add
xchg
mov
add
cmp
std
rorl
jbe
push
test
test
scas
sbb
jge
jno
sarb
adc
int
aas
inc
outsb
into
xchg
lcall
dec
dec
add
test
std
arpl
dec
fadds
push
mov
les
xchg
dec
cmp
add
mov
add
dec
xchg
aad
out
cs
cmpsl
inc
cmp
pop
in
push
push
xor
or
int3
stos
mov
les
cmpsb
test
xlat
push
push
or
cmpsb
sbb
push
out
insl
dec
jle
out
and
jge
out
adc
enter
cwtl
rolb
enter
mov
mov
ja
mov
loope
push
cmp
jmp
stos
cmc
rcl
fisubrs
push
repnz
push
add
cmpl
lret
aaa
pushl
test
mov
data16
cltd
adc
pop
mov
pop
push
fadds
sub
movsl
cmc
out
mov
fstl
imul
or
ljmp
lea
je
adc
push
sub
push
cs
dec
outsb
sbb
mov
mov
jae
or
mov
popf
hlt
mov
not
fs
inc
add
inc
sub
adc
push
insl
push
inc
fistpl
xchg
scas
xchg
aas
das
sbb
xor
loope
imul
lea
aas
lods
or
call
out
aad
shlb
pop
sbb
cmp
imul
pop
imul
mov
stos
adc
rorb
inc
rcl
popf
jmp
push
cs
xchg
pop
enter
dec
call
lea
or
or
mov
jne
fdivs
pop
mov
cwtl
and
sbb
lcall
lahf
mov
add
lea
sub
fsubs
pop
lock
pop
sub
adc
jg
negl
inc
bound
enter
cld
shll
cld
pushf
dec
sbb
pop
int
fmull
push
push
loope
call
jne
ds
push
dec
sbb
movsb
in
hlt
mov
cmp
push
and
lret
cmpsb
cmc
inc
popf
addr16
pop
hlt
sub
push
int
adc
lods
add
or
mov
ja
jno
and
out
sub
fcomps
repnz
pop
inc
popa
inc
xor
mov
fwait
aad
mov
test
and
mov
mov
scas
loope
jecxz
das
and
lods
roll
es
inc
push
xchg
jl
lds
sub
push
mov
pop
add
inc
mov
cmp
fbstp
stc
insb
out
mov
and
mov
inc
xlat
jle
imul
and
push
mov
std
mov
mov
jb
sub
push
mov
fisubrs
mov
es
pop
inc
int3
xchg
xchg
jns
lcall
mov
inc
ret
ds
and
cli
lock
push
xor
cld
add
cmp
pop
pop
sub
mov
fadds
mov
cmpsb
movsb
loopne
out
jge
jmp
cmc
add
bound
pop
iret
test
mov
pushf
inc
outsl
js
shrb
mov
hlt
push
leave
popa
mov
fdivr
nop
mov
les
push
or
out
and
and
pop
aaa
add
subl
fisttpl
xor
cwtl
adc
sbb
and
mov
xor
or
sahf
inc
testb
pop
add
mov
jl
pop
cmp
movsl
jp
mov
mov
into
js
mov
lds
and
lods
or
pop
inc
icebp
in
jecxz
sbb
repnz
xor
xchg
iret
out
sub
mov
ja
xchg
scas
jmp
lret
and
insl
sbb
jmp
jge
jmp
cmc
ficomps
cmp
lods
fistl
scas
andb
mov
or
int
sbb
push
into
inc
sbbl
pop
iret
popa
ds
jo
sub
sbb
or
cwtl
and
jg
fsubl
dec
dec
mov
shl
push
dec
in
sub
xchg
cld
pop
and
mov
xlat
lret
dec
push
sbb
lea
add
bound
push
mov
jle
test
ja
pop
mov
movsb
pop
fisubrs
or
loope
cmp
iret
pop
scas
adc
sbbl
scas
test
mov
cmp
incb
scas
pop
js
les
addb
jg
sbb
xchg
lcall
stc
xor
mov
jmp
fwait
test
pop
dec
jae
divb
mov
lock
arpl
in
add
andb
xor
test
pop
clc
adc
dec
dec
repnz
sti
fcomps
sti
ja
mov
fisubl
pop
dec
je
cmp
xchg
mov
mov
mov
mov
mov
mov
xchg
push
xchg
sbb
mov
addb
fwait
jne
mov
loop
mov
lahf
adc
pop
enter
data16
aaa
xor
aas
nop
pop
xchg
pop
xor
jp
push
mov
imul
push
stos
sub
jg
push
int
divb
outsb
cmp
sbb
mov
and
orl
dec
imul
mov
mov
push
xchg
mov
shrl
cwtl
push
fucomi
sub
cwtl
test
lds
out
and
xor
xchg
jmp
dec
gs
sbb
mov
lods
int
iret
pusha
sbb
clc
mov
ss
xchg
jmp
push
mov
mov
push
push
shr
lea
pop
sbb
shl
cmpsl
pop
lret
sbb
add
push
mov
xorl
movsl
ss
dec
lahf
push
adc
cmp
xor
orb
and
lret
or
push
pop
insl
shrb
add
les
test
push
mov
mov
xchg
cmpsl
fnstcw
xchg
and
pop
test
leave
sub
sub
std
sub
cltd
push
push
push
mov
not
rcr
andb
sti
push
push
loop
fstl
test
cmc
xor
xor
mov
inc
es
add
repz
pop
popf
and
insl
adc
popf
out
adc
clc
mov
lahf
mov
xchg
mov
outsb
mov
pop
sub
popf
ret
pusha
leave
xchg
std
cmp
sbb
add
pop
sub
mov
push
aas
push
insl
sbb
inc
popf
popa
outsb
xor
shrb
mov
xchg
pop
xchg
insb
mov
xor
test
pop
cmp
rcll
push
mov
push
es
lcall
and
or
and
pop
mov
mov
adc
loopne
inc
gs
icebp
ljmp
cmc
push
popf
mov
jg
jb
lds
mov
or
dec
cmp
mov
icebp
push
sahf
outsl
addr16
lret
ds
cmp
sbb
jp
adc
inc
outsb
mov
mov
xor
and
mov
repnz
rclb
data16
mov
pop
push
adc
dec
int3
xor
mov
jo
out
aad
repz
fdiv
fmul
fs
orb
mov
and
mov
xchg
stc
pop
fisubs
inc
subl
cltd
adc
cltd
lahf
push
mov
xlat
aaa
iret
dec
dec
push
mov
adc
adc
jg
inc
inc
insl
add
mov
and
fisubl
nop
ja
test
dec
and
lcall
mov
xor
mov
push
insb
sbb
jmp
mov
dec
sub
dec
sbb
out
sbb
lods
push
pop
repz
loop
mov
je
cmpsl
ljmp
cmpsl
dec
js
jbe
mov
pushf
inc
jbe
lret
add
jecxz
dec
xchg
aad
jae
icebp
mov
outsb
insl
mov
out
lcall
inc
ret
mov
add
pusha
mov
cmp
in
mov
fiaddl
sub
jmp
xor
lret
sub
gs
cltd
sub
imul
lahf
push
adc
xchg
ljmp
push
push
push
push
lea
std
es
adc
out
iret
cmp
lret
push
popf
xchg
syscall
sbb
mov
pushf
or
mov
imul
mov
cld
mov
out
fwait
hlt
mov
aam
inc
je
iret
shlb
cmp
mov
jl
cmp
adc
scas
es
cli
movsb
jecxz
gs
jmp
cmp
pop
or
enter
movsb
add
lea
inc
js
pop
inc
mov
add
movsl
pushf
sub
dec
lea
push
mov
mov
push
push
jo
lods
mov
jns
jg
shufps
outsl
fdivl
mov
popa
out
push
repnz
sbb
imul
xchg
and
test
outsb
enter
mov
movsb
adc
aaa
test
shrb
inc
and
popa
push
mov
loope
outsb
jle
xor
pop
and
dec
push
ljmp
mov
cmp
or
leave
addr16
cmc
sub
cltd
enter
xor
push
bound
arpl
ljmp
push
call
mov
cmp
xchg
inc
add
jl
xchg
popa
popa
sbb
ficompl
mov
enter
mov
push
sbb
mov
add
dec
scas
mov
sub
add
lahf
inc
mov
pop
mov
dec
bound
sahf
adc
sarl
pop
mov
sahf
add
ret
cmpsb
sbb
jecxz
sbb
pop
repz
in
out
cmpsl
outsb
and
jns
xor
xor
xor
arpl
jg
xor
dec
dec
jb
push
rcrl
inc
mov
or
and
fsub
ja
fwait
xchg
adc
xor
xor
lret
stos
unpckhps
mov
add
sbb
aas
aam
out
sub
in
adc
dec
fs
pop
sbb
sub
mov
in
cmpsl
cmp
mov
pop
fcoml
scas
mov
xchg
adc
mov
outsl
xchg
inc
ret
add
pushf
and
js
sbb
jnp
sti
jno
int
mov
cmp
mov
pop
scas
lret
cmp
ret
in
mov
int3
dec
divps
push
dec
mov
mov
lods
insb
or
aas
sub
into
cmpsl
mov
ret
push
adc
cmp
data16
dec
inc
cmp
fwait
cmpsb
movsb
pop
aaa
sub
add
fsubs
xor
lcall
rorl
push
test
inc
and
pop
push
jmp
fwait
pop
sbb
outsb
push
popa
push
jbe
inc
pop
pop
sbb
jno
in
jne
xlat
and
lret
add
fs
call
clc
data16
pop
xor
and
cmp
add
push
loopne
mov
cltd
jae
fs
sub
adc
mov
mov
lahf
lcall
shl
adc
mov
xor
icebp
cmp
lock
xchg
pop
fistpll
pop
push
mov
call
mov
cmp
push
xchg
pop
enter
dec
mov
lods
jmp
lods
fistpll
pop
stc
inc
pop
xchg
movsl
inc
lods
daa
cmp
push
nop
int3
cmp
inc
adc
ret
push
jnp
xchg
fstps
jp
std
outsl
sub
cld
mov
add
lds
dec
push
push
je
imul
outsl
imul
mov
xor
maxps
test
xchg
xor
xor
fnsave
jb
jae
add
mov
js
mov
sbb
add
aas
cli
addr16
sub
push
mov
pop
xchg
sti
aam
pop
mov
dec
je
add
mov
pop
jae
xor
cmp
xlat
mov
repnz
or
inc
xchg
shlb
insb
in
scas
xor
fstp
pop
fadds
xor
bound
insl
xchg
push
mov
push
ljmp
mov
rorb
repnz
cmp
sbb
ret
sub
jge
loop
lahf
pop
jmp
ljmp
in
and
add
flds
cld
test
inc
or
es
inc
mov
cmp
jnp
rclb
inc
sub
mov
addr16
sub
pusha
pop
push
fwait
arpl
jg
pop
mov
inc
sbb
out
call
je
movsb
pop
test
ror
arpl
movsl
sti
out
insb
jmp
mov
stos
sub
pop
stos
pop
js
sub
jecxz
jae
cmp
stos
lods
ljmp
les
cmpsl
and
push
push
idivl
cmp
sti
nop
cli
push
sbbl
xor
in
cltd
xor
sahf
enter
dec
and
mov
andb
shrl
pop
pop
push
mov
adc
lds
add
pop
test
test
pop
jo
push
ret
ret
or
popa
adc
jmp
aaa
std
mov
mov
test
cmp
neg
scas
stos
jo
sbb
pop
aad
pop
clc
scas
in
mov
fs
je
cld
js
fdivl
jb
jns
in
scas
leave
mov
sbb
sbb
movsl
das
or
ds
lahf
les
dec
je
sbb
sub
push
jae
pop
cmc
stos
sbb
pop
xor
outsb
ficoms
mov
xchg
push
pop
ficoms
mov
lahf
leave
xlat
dec
loope
lock
in
rep
call
adc
jne
rolb
mov
sbb
mov
rol
popa
addr16
dec
jns
lret
lods
int
cmpsb
pusha
pop
xchg
xchg
fistpll
push
out
pop
mov
fiadds
in
jne
int3
add
ds
add
shrb
popf
mov
scas
mov
push
and
mov
dec
mov
cltd
adc
pop
mov
aaa
out
fistps
jo
cmp
sbb
mov
adc
movsl
jne
call
popf
xchg
bound
insb
sbb
mov
call
pop
lds
cmp
dec
push
arpl
xor
inc
dec
mov
arpl
jle
pop
push
adc
inc
lahf
sub
and
mov
push
jnp
mov
aaa
fmuls
push
inc
mov
repz
inc
mov
pop
movsl
aam
inc
adc
push
add
outsb
push
lock
int
adc
xchg
std
xchg
sbb
gs
cwtl
adcb
enter
xor
outsl
addb
cmp
jae
jecxz
stc
xor
mov
and
ljmp
subl
lret
ret
test
sbb
arpl
outsl
adc
cmp
out
gs
xchg
cmp
sbb
mov
xabort
mov
xchg
bound
aam
xchg
adc
cmp
mov
pushf
nop
cli
and
data16
adc
movsb
mov
lods
sbb
insl
push
sbb
pop
or
jnp
mov
mov
cltd
and
xorl
push
xchg
mov
lret
dec
dec
popa
pop
mov
or
shrl
hlt
sti
add
mov
and
leave
jl
jnp
shll
jge
out
ret
push
in
cmpsb
in
cmp
test
and
imul
xor
push
xor
subb
ret
incl
loopne
test
mov
inc
ss
js
lock
mov
push
cmp
and
jo
push
jae
pop
push
aad
push
push
sub
and
xor
xor
pop
int
sahf
lret
cmpsl
add
cli
es
decb
dec
jmp
imul
mov
xlat
sbb
imul
sub
push
cmp
jb
mov
and
xchg
pusha
push
jge
sbb
not
jnp,pn
in
and
dec
push
lret
cmc
pop
sub
dec
insl
push
pop
icebp
pushf
or
jecxz
out
or
sbb
xchg
sub
call
repz
ljmp
cmp
enter
pop
mov
data16
cmpsb
mov
fiaddl
adc
jns
pop
pop
stc
pop
cld
mov
add
addb
in
xor
shl
cli
clc
hlt
pushf
fdivrp
rcrb
aam
pop
ffree
pop
mov
pop
int3
aam
cmp
jmp
xchg
repz
cli
adc
push
adc
inc
jle
popf
mov
jne
jecxz
stos
sbb
loopne
jne
cmc
ficompl
ja
testb
cmp
test
jge
call
lcall
jmp
ja
shll
push
loopne
sbb
jnp
inc
mov
mov
mov
mov
repz
mov
pop
xchg
lods
divl
and
in
setns
rcrl
push
mov
lock
dec
push
push
lret
mov
aam
mov
adc
push
test
mov
dec
pushf
pop
mov
jbe
aam
xorl
jmp
int
mov
pop
or
rcll
mov
popf
sahf
push
aaa
jmp
jle
gs
popa
nop
and
adc
pop
or
and
lahf
cwtl
stos
leave
or
test
aaa
ljmp
and
outsl
ja
add
lret
je
sub
fildl
xlat
push
clc
scas
push
mov
pushf
aas
sub
mov
add
loope
dec
ja
ss
lods
jne
outsb
push
mov
jbe
ljmp
dec
cmc
sub
out
jg
and
cmp
inc
push
lret
cmpsb
es
lret
outsb
into
cs
or
out
cmp
mov
push
cmp
xchg
popa
inc
bound
inc
xor
imul
mov
icebp
or
or
inc
xor
and
xor
and
jns
dec
clc
notb
clc
cmp
pusha
loope
cltd
pusha
add
lock
iret
xchg
in
aam
push
xor
pop
mov
mov
push
push
and
int3
jbe
stos
cmc
sub
pop
test
ds
dec
lea
int3
mov
frstor
adc
push
data16
mov
cld
jg
enter
push
outsl
xlat
push
adc
pop
pop
jbe
les
pop
add
out
mov
popa
jne
cli
ret
push
fimuls
add
cmp
lret
fwait
and
fucomi
and
outsb
je
cld
lods
test
mov
and
ret
ja
mov
lock
aam
pop
mov
mov
bound
dec
mov
int3
add
mov
jne
outsb
andb
out
add
mov
push
cs
mov
stos
out
test
mov
jno
cmc
sbb
pop
int
sbb
push
cli
sub
mov
aam
xlat
std
mov
pop
xor
std
fwait
dec
aas
in
jmp
jb
pop
add
sbb
jno
jns
addr16
in
faddp
insl
ja
in
icebp
xor
adc
insl
xchg
jmp
std
ret
test
loopne
xchg
test
ret
dec
cld
inc
loop
xchg
ss
mov
and
lret
fnstenv
lods
mov
mov
in
inc
pop
xchg
test
fbld
push
pop
notb
or
repnz
jbe
cmpsl
xchg
mov
ljmp
lret
data16
insl
sti
sub
inc
das
xor
lcall
mov
not
sub
out
add
gs
pop
xor
daa
pusha
jl
mov
aaa
mov
les
scas
push
sub
sub
cwtl
add
adc
cmp
enter
xor
mov
fstps
sub
fisttps
add
test
pop
lods
clc
jl
rsqrtps
int
dec
adc
in
je
filds
push
push
xor
fdivrs
test
push
faddp
stc
mov
cwtl
pop
fcomip
cmpsl
jmp
cld
mov
pop
sbb
stos
imul
lods
es
jo
lea
adc
lret
pop
pop
or
push
inc
sub
insl
and
call
mov
cmp
jns
pop
jg
xchg
jge
push
ljmp
push
inc
dec
mov
mov
or
vpmaxuw
call
xchg
jo
movsb
or
repz
shlb
inc
add
shll
xlat
xchg
loop
xor
ret
jp
jle
adcb
mov
adc
pop
aad
ljmp
push
adc
push
fs
xor
nop
dec
ret
mov
test
in
or
or
loop
data16
xor
leave
push
push
lcall
or
sub
dec
adc
cmpl
scas
ret
leave
fidivrl
cwtl
ja
pop
cs
and
aad
loop
arpl
ret
adc
mov
inc
push
fists
jb
mov
dec
cwtl
cmc
dec
xor
add
loope
outsl
lods
and
ljmp
and
lods
pop
inc
test
fidivl
jns
add
jcxz
mov
scas
sahf
cwtl
jecxz
push
sbb
mov
push
pop
stos
ljmp
rorl
add
mov
jno
inc
xchg
gs
xlat
leave
cmp
xchg
mov
sub
jae
and
mov
scas
push
or
push
mov
sbb
mov
cmp
popa
ret
or
push
jle
pop
sarl
je
xor
push
inc
loop
fldenv
out
cmp
xchg
inc
or
mov
sbb
sar
hlt
add
das
inc
cltd
lods
sub
loop
imul
mov
push
jbe
jl
lods
and
movsl
inc
push
push
lret
aas
adc
mov
push
inc
sti
push
cmc
jns
lods
mov
pop
sub
fistps
aad
pop
inc
pop
cld
push
fnstenv
inc
in
inc
shrb
and
sbb
push
mov
pop
jo
int
xchg
sub
xchg
das
adc
adcl
or
push
xchg
sub
fs
jns
sbb
mov
sub
mov
es
jb
dec
jo
test
out
into
pop
scas
gs
ds
adc
or
push
scas
and
jbe
pushf
addb
ret
in
cld
popf
popa
pushf
hlt
sahf
out
mov
jecxz
aas
repz
mov
mov
imul
lds
jmp
jg
mov
std
jle
stos
call
das
push
stc
sbb
pusha
xor
jne
mov
out
adcl
mov
jnp
clc
cmp
mulb
add
inc
or
int3
test
jno
mov
cmp
aam
sar
rol
and
pop
dec
push
mov
fidivl
test
arpl
popf
in
icebp
mov
pop
or
test
sbb
jne
mov
rcrl
mov
nop
mov
sahf
ud1
mulb
mov
mov
mov
imul
xchg
xor
sahf
scas
xor
inc
fwait
clc
neg
jne
movsl
dec
mov
sahf
add
mov
test
and
mov
stos
add
mov
icebp
add
stos
adc
ret
xor
sub
scas
xor
cmpb
aam
aaa
sbb
xchg
adc
and
movl
fdivrp
adc
in
pop
shll
jb
mov
mov
ja
inc
adc
fwait
in
and
fmull
in
push
mov
aad
jg
mov
inc
cmp
cwtl
jl
add
sbb
rolb
mov
cmp
cs
xor
or
mov
and
test
out
push
push
push
push
push
nop
cmp
jge
test
push
ret
cli
ja
sar
sbb
sbb
test
test
jb
pop
out
movsl
push
jecxz
lahf
mov
out
addr16
push
mov
es
xchg
inc
imul
cltd
xor
loope
add
orb
es
pop
call
popa
xchg
fcmovnb
pop
mov
idivl
int3
sahf
inc
adc
push
dec
mov
sti
add
cltd
pop
xor
jge
sbb
xchg
and
mov
std
lods
pop
dec
out
mov
aam
lea
out
push
and
outsl
inc
add
mov
mov
sahf
pop
pusha
add
xchg
shll
cmp
jge
sub
mov
les
fs
mov
mov
sub
imul
jbe
in
jbe
rclb
xchg
dec
enter
cmp
loopew
mov
xor
adc
mov
dec
bound
jle
mov
mov
mov
push
stc
lods
dec
int3
push
in
cmp
sub
clc
cmc
xchg
push
cwtl
rorb
xor
test
enter
aas
bound
sbb
jmp
pop
mov
add
and
filds
sti
or
pop
push
leave
mov
test
in
test
popf
pop
push
into
lret
sti
cmp
iret
lods
jne
xchg
mov
mov
xlat
pop
mov
cli
mov
ret
cmp
cmp
test
dec
arpl
and
scas
pushf
mov
in
and
mov
xchg
cmc
mov
inc
or
fcoms
clc
ds
mov
cltd
mov
add
clc
stos
mov
loope
xor
in
xor
aam
aaa
imul
loopne
pop
insb
add
and
pop
mov
fimuls
sbb
pusha
sbb
ja
fs
mov
pand
or
jnp
cmp
push
jecxz
test
cli
cmpsl
mov
scas
pusha
ljmp
pop
xchg
jbe
push
rorl
std
fsubrs
adc
es
push
out
mov
movsl
cmc
test
icebp
lods
pop
pop
sbb
dec
mov
and
lcall
jp
xor
xchg
notl
and
mov
gs
fdivl
and
movsb
cmc
mov
fucomi
push
out
jb
xchg
mov
fnstcw
imul
int3
in
or
dec
mov
push
inc
outsb
loopne
mov
dec
leave
sub
push
xchg
cmp
cmp
dec
nop
pop
insl
popa
or
dec
cmp
jecxz
jbe
pop
repnz
pop
adc
mov
icebp
xchg
rolb
popf
inc
jp
pop
and
jmp
ret
mov
popf
push
push
les
xor
shll
int3
negb
or
es
pushf
push
leave
fwait
test
sub
mov
sahf
rep
pop
test
pop
aam
xor
lods
push
mov
jle
mov
or
imul
iret
adc
mov
and
push
lods
inc
lahf
das
es
jae
stos
jp
gs
pop
orl
repnz
mov
xlat
push
rclb
jle
call
repz
ds
mov
pop
pop
or
and
push
pop
sbb
stos
pop
push
icebp
mov
push
xchg
mov
in
mov
nop
inc
push
and
shll
aam
out
mov
adc
mov
rorb
pusha
jno
ljmp
or
mov
arpl
add
cmp
jo
and
xchg
ja
rcr
nop
pop
dec
lret
lcall
or
xchg
inc
ds
adcl
sub
or
sarl
in
adc
inc
pop
inc
fiadds
sub
mov
call
jo,pt
es
ret
adc
or
pop
jnp
jg
xchg
fisubs
sub
dec
jge
sub
dec
fdivrl
out
jno
imul
xchg
xor
push
xlat
or
cli
mov
mov
mov
fsts
jl
xchg
addl
call
outsl
dec
stos
push
pop
xorl
sub
jb
ss
mov
int
lods
stos
loope
mov
lcall
fstpt
pop
stos
sub
inc
dec
or
in
mov
jge
lahf
test
jno
push
add
dec
push
inc
mov
pop
add
mov
fs
dec
clc
leave
jle
in
pop
mov
mov
xor
mov
push
les
lret
push
or
iret
pop
out
cmpb
sbb
sub
jno
mov
enter
out
shl
xchg
inc
jbe
jmp
les
cmp
mov
fwait
aam
push
adc
push
sbb
jns
cld
push
test
aaa
pop
dec
mov
lahf
clc
or
pop
arpl
lods
xlat
or
lock
iret
adcb
data16
leave
out
cltd
xchg
cmp
inc
arpl
pop
cmpsb
pop
adc
ficoms
push
sbb
mov
sub
xchg
jns
mov
and
repz
repnz
inc
jb
dec
ds
lret
jno
ret
jo
fldenv
lods
xchg
push
int
add
jb
pop
das
js
cmc
cmp
setnp
sub
fld
xor
call
add
in
lods
xor
and
pop
push
inc
dec
pop
clc
mov
mov
popa
hlt
leave
repz
push
je
popa
loop
roll
push
add
mov
dec
lock
jo
dec
mov
out
lods
jl,pn
inc
inc
out
inc
dec
pop
jge
add
inc
rorl
out
rcll
pop
mov
arpl
push
pushf
sub
int3
insl
push
into
mov
sarl
mov
shld
je
pop
notl
pop
fistpl
jle
cmp
dec
cmp
inc
int
cmpsl
and
leave
rcrl
rcll
pop
stos
cmp
jg
mov
fsubl
lds
movsl
ljmp
mov
jbe
mov
mov
icebp
ja
cmp
add
jp
jge
shrl
daa
pop
sub
or
cmp
mov
mov
mov
frstor
or
inc
imull
enter
fucom
sbb
mov
fbstp
out
and
xor
mov
pop
into
stos
mov
scas
int3
insb
fisttpll
push
mov
iret
out
movsb
mov
or
mov
jg
push
jmp
mov
mov
adc
loop
inc
sarb
pusha
or
mov
push
je
insl
cmp
int
test
add
sub
pop
lret
test
inc
xchg
xor
inc
jo
popa
mov
inc
je
out
pusha
xchg
insb
pop
fbld
iret
repnz
push
scas
in
dec
mov
dec
jmp
mov
movsb
arpl
dec
fidivl
sahf
sbbl
pop
sbb
mov
imul
fs
shlb
dec
dec
mov
push
mov
add
movq
push
mov
jno
push
cmp
xchg
lret
inc
xor
pop
xchg
aaa
xchg
fmull
sbb
xchg
in
push
jmp
inc
push
in
jl
mov
into
ljmp
push
or
andb
ds
push
pop
adc
stc
cmpsl
adcb
es
aaa
xchg
jle
jl
outsb
clc
mov
sub
add
cmc
adc
das
sti
enter
inc
mov
sarb
out
outsb
inc
pop
lret
xchg
xchg
stos
mov
sti
push
insl
inc
test
mov
ret
cmp
inc
xor
add
xchg
nop
paddusw
dec
ret
dec
push
andl
add
mov
out
mov
sbb
push
fldt
push
push
js
xor
mov
lods
cmp
and
stc
mov
push
jo
aas
mov
mov
push
mov
out
inc
sahf
or
mov
add
and
dec
pop
mov
xchg
or
jb
dec
aad
in
mov
mov
push
call
dec
nop
test
mov
push
sti
mov
mov
sub
adc
fwait
mov
stos
in
outsb
stos
aam
scas
jge
push
push
mov
xlat
cmpsb
pop
stc
bound
aas
stos
adc
mov
fcomps
xor
cmpsb
adc
mov
cmc
insb
fsubrs
test
movsl
daa
imul
and
out
inc
scas
nop
dec
ret
and
in
out
clc
ja
sbb
rorb
adc
scas
cli
push
or
in
aam
cmp
out
lcall
cmp
push
divl
sahf
jecxz
mov
int
mov
push
adc
pop
loopne
lods
add
popf
xchg
or
addr16
mov
add
in
lds
lret
sub
and
push
push
pop
dec
cld
sub
std
inc
xor
mov
icebp
cs
pop
je
outsl
in
mov
mov
dec
add
iret
rol
fdivs
xchg
dec
lahf
sbb
xor
rcrb
xchg
in
or
je
mov
repz
out
daa
pop
and
xor
dec
call
out
cltd
push
fimull
cmp
and
movsl
or
cli
test
cwtl
push
cmp
xchg
or
jnp
sub
add
data16
mov
out
pushf
shlb
int
pushf
bound
popa
push
xor
hlt
int3
jb
es
les
lods
pop
pop
rclb
popf
sbb
fbld
adc
sub
inc
call
mov
dec
out
jo
pop
enter
xchg
cmpsl
rcr
sarl
les
dec
sti
add
mov
mov
cmp
mov
test
push
idivb
call
xchg
cmp
rsm
lret
mov
test
push
stos
loope
sbb
nop
in
or
mov
and
xchg
mov
ss
mov
mov
in
push
and
xchg
pusha
mov
mov
popa
push
psubw
sub
roll
test
pop
xor
int3
mov
jp
adc
sub
inc
icebp
enter
add
cli
mov
cmp
sub
insb
arpl
popa
inc
fisubrs
rclb
pushf
xor
testb
sti
xor
xor
aas
xor
xchg
ret
lea
loope
cmp
jp
cs
imul
outsb
iret
hlt
inc
aam
mov
lcall
adc
mov
sahf
push
xchg
mov
add
push
xchg
jns
loop
push
gs
outsl
pop
out
or
fisubs
xchg
xchg
add
std
test
add
sbb
push
testb
hlt
mov
adc
sarb
jl
mov
sti
jae
into
ja
sub
lahf
mov
daa
iret
out
cmp
lea
fcmovnb
hlt
add
push
out
jge
xchg
mov
mov
outsb
inc
sub
sbb
and
push
jae
mov
inc
and
pushf
fnsave
xor
xchg
je
enter
pop
xchg
cmp
test
jg
lret
ret
xchg
mov
add
loopne
fdivrs
or
test
shlb
jge
dec
fstpl
stos
in
ss
enter
insl
sub
stos
xchg
push
pop
inc
setne
mov
je
cli
scas
pop
inc
mov
in
sahf
lods
cmp
outsl
sub
inc
fs
addb
mov
mov
jecxz
add
cmp
loopne
scas
jge
jle
stc
adc
add
mov
shl
lods
roll
mov
jle
popf
mov
orb
jle
pop
xor
mov
jno
xlat
shlb
cltd
and
call
mov
iret
xor
inc
xchg
repnz
and
add
pop
shl
jns
jo
cmp
sbb
xchg
fisubrs
aas
inc
cmpsl
mov
sti
add
fsubl
jbe
xchg
rclb
adc
lcall
decb
mov
clc
cs
and
mov
jb
pushf
pop
addr16
lcall
orb
aas
lea
loop
clc
sbb
and
jmp
mov
bswap
fidivrl
paddsw
add
push
push
cwtl
dec
adc
lcall
push
jo
jle
cmp
mov
or
mov
ret
xchg
test
sub
xchg
inc
scas
mov
cld
xor
jl
xorb
dec
mov
out
rcrl
fiaddl
mov
inc
add
loopne
push
loop
cmp
mov
xchg
jmp
sarl
cmp
jae
xor
dec
inc
dec
sbb
cmpsb
and
add
and
leave
fbstp
repz
xor
decl
das
dec
add
pop
pop
lock
xor
jl
sbb
shrb
sub
or
jp
mov
out
outsl
lret
cmp
movsb
fistl
xchg
and
add
shlb
pusha
test
adc
xor
fists
cmp
inc
and
push
sub
pushf
mov
xorl
hlt
into
pop
enter
mov
outsb
mov
mov
insw
mov
sbb
xchg
lcall
jb
adc
add
loopne
cmp
jge
jne
or
xlat
sub
adc
mov
ret
cmp
pop
ljmp
addl
push
outsl
pcmpgtd
loope
dec
je
xlat
xchg
sub
das
xchg
xor
les
test
and
sbb
xchg
in
stos
sahf
movsl
cmpsl
adc
mov
jl
out
hlt
js
and
cmpsb
aam
inc
jb
in
pushf
in
movsl
fxch
popf
or
shr
xor
xor
cld
sbb
mov
orl
xor
shll
nop
jmp
adc
lods
push
sti
xor
orl
fstpl
inc
outsb
shll
je
inc
inc
lret
jmp
xchg
out
cs
lods
lea
mov
dec
test
out
in
aad
dec
test
pop
lahf
cmc
js
mov
sub
cmpsl
xchg
in
ja
cmp
cmp
das
sbbb
leave
loope
out
mov
popf
push
mov
pushw
xor
or
shlb
pop
mov
dec
ficompl
adc
clc
jle
inc
mov
jo
and
dec
mov
push
gs
cmp
sbb
sbb
bound
mov
adcb
mov
sub
shlb
out
cmp
inc
dec
xchg
lea
test
int3
add
out
inc
dec
ficomps
icebp
nop
scas
cmpsl
xor
push
aas
je
lret
mov
jbe
mov
repz
xchg
out
and
inc
push
cmp
ljmp
aaa
jmp
fbld
hlt
pop
mov
scas
leave
ja
add
jns
sub
pop
and
aam
xchg
fld
bnd
data16
scas
dec
int3
push
sbbl
stos
pop
dec
mov
insb
pop
xor
sahf
xchg
lcall
rcll
andl
scas
add
int
sahf
add
jb
std
lods
mov
xchg
pop
push
dec
movl
jmp
orb
xchg
adc
mov
fcmovnbe
and
and
or
iret
insl
cmp
pop
ficoms
fs
jo
ret
mov
je
data16
jnp
mov
mov
cmp
stos
pop
xlat
fsubs
cmp
xchg
out
adc
xchg
and
pop
hlt
push
mov
jp
jne
inc
lods
mov
add
push
test
jmp
in
sbb
add
xor
lods
xchg
aaa
add
jb
sbbl
xor
in
sbb
add
imull
mov
in
xor
cmp
ret
in
shll
pop
pop
mov
sbb
pop
sub
out
sahf
add
mov
or
mov
int3
outsb
out
enter
cli
sub
mov
or
jo
mov
pop
ret
je
jno
adc
loop
lret
and
ret
xchg
cmc
ret
out
push
mov
xchg
cld
mov
push
sub
bts
mov
mov
cmc
sub
sbb
fcomi
sub
sub
mov
or
js
rorb
lret
outsb
fildll
mov
mov
in
inc
pop
push
inc
incl
jnp
lods
cmc
es
mov
xchg
push
mov
cmp
test
pushf
pop
push
jnp
sbb
addr16
jmp
clc
xor
fwait
dec
and
pop
leave
jp
or
pusha
sub
hlt
or
in
pop
repnz
mov
imul
iret
jno
stos
loope
or
lods
fdivrl
ljmp
cmp
mov
push
lret
xor
mov
inc
add
rolb
aaa
xchg
and
cld
dec
notb
nop
mov
xorb
xchg
aam
arpl
stos
inc
addr16
or
push
je
or
icebp
popa
or
sarl
clc
and
int3
xchg
mov
jbe
in
cmp
mov
jo
loope
aas
mov
dec
imul
lods
inc
jno
cli
dec
inc
adc
mov
jge
dec
outsl
cltd
shlb
leave
cmp
sahf
negl
loope
mov
add
or
movsl
dec
or
sar
aaa
loopne
cmp
mov
or
pop
dec
jge
add
add
and
sub
sbb
pop
insb
sub
cs
and
mov
xchg
adc
jmp
sub
out
ljmp
inc
int3
arpl
lods
xchg
rolb
int
jle
mov
jb
icebp
int
in
adcb
xchg
inc
inc
ficomps
jmp
adc
pushf
and
test
cmp
xchg
pop
mov
dec
idiv
inc
dec
ja
mov
sbb
outsl
loop
sti
adc
sbb
test
or
cmp
cmp
aam
jge
cs
adc
dec
incl
push
sub
pop
add
adc
mov
int
mov
ljmp
outsb
jno
pop
fwait
xchg
test
xchg
je
mov
out
xchg
or
aas
lahf
data16
mov
add
lods
and
sbb
ds
pop
lods
dec
mov
push
mov
fcmovb
lods
pop
xchg
stos
jecxz
sbb
mov
adc
jle
xor
nop
jmp
push
push
ja,pt
iret
push
in
sub
xchg
or
call
xchg
dec
rcr
jnp
jmp
xorl
sub
mov
cmp
lcall
imul
xor
aam
sbb
shlb
ret
sub
sbb
xchg
cmpsl
mov
xlat
push
dec
hlt
xchg
push
lret
scas
mov
sarb
mov
dec
in
data16
das
sbb
adc
xorb
in
sub
adc
cmp
mov
mov
leave
cmp
ja
in
inc
repnz
ret
jg
out
inc
xlat
in
xchg
inc
add
filds
fwait
daa
pop
jne
and
es
mov
xor
fs
pushl
std
lock
lods
jg
pusha
pop
mov
rclb
lret
mov
push
dec
and
ret
and
dec
push
lds
add
aam
xchg
dec
rclb
rcll
and
fs
sarb
cmc
pushf
icebp
lcall
test
cmp
xor
inc
fsubrs
fcmovnu
aas
movsl
jne
and
loope
push
jle
or
push
jbe
xchg
pop
lret
inc
lret
icebp
jns
fistps
aaa
mov
xlat
or
movsb
xor
lcall
mov
shll
leave
xlat
dec
mov
arpl
bound
and
movsl
jl
aas
dec
test
into
lcall
mov
nop
or
push
int3
pop
and
jp
enter
pop
lret
mov
std
imul
pusha
jmp
fcom
call
pop
push
leave
or
xchg
pop
push
int
ret
lahf
and
paddsw
ret
fiaddl
les
ja
mov
cltd
hlt
mov
jno
cmpsb
dec
and
fldenv
push
push
sbb
lock
in
mov
out
out
or
mov
in
cmp
icebp
ret
nop
out
int3
pop
and
or
repnz
jecxz
mov
push
mov
andl
jno
in
jbe
sub
iret
cmp
hlt
dec
fcom
cwtl
jnp
insb
mov
es
sub
jb
pop
xchg
xchg
out
ja
mov
test
sbb
insl
fmull
sub
test
jne
lods
or
dec
push
ret
cmc
stc
mov
mov
sarl
daa
lods
in
dec
std
ja
push
das
cmp
cmp
ds
push
dec
sub
cmp
shr
jbe
sbb
insl
jp
aas
in
push
jb
icebp
push
imul
xchg
leave
sbb
mov
fimuls
fistpll
jbe
and
orb
lea
lret
push
dec
cld
sbb
test
push
scas
pop
daa
lods
leave
js
push
in
rorb
out
or
dec
cmp
xor
mov
and
push
mov
movsb
je
aad
xor
inc
clc
loope
adc
push
xchg
mov
xchg
sbb
les
outsb
and
sti
roll
or
add
mov
cwtl
rep
jbe
push
pop
sbb
dec
push
inc
repz
pop
iret
lret
push
add
enter
dec
mov
ljmp
xchg
xor
dec
ret
mov
jns
test
scas
and
push
fistps
lcall
xchg
cltd
mov
pop
roll
sbb
pop
repnz
xor
or
adc
lds
movsb
jae
shll
inc
ss
cli
push
jle
xchg
cmp
mov
add
imul
jp
shrb
fstl
cmp
lret
and
out
pop
pop
mov
push
dec
nop
dec
lcall
dec
daa
adc
shlb
mov
sbb
mov
sub
sbb
cmp
pop
shr
xorb
sub
dec
cmp
mov
sarb
pop
cmp
loopne
int3
fs
mov
ret
pop
jnp
fdivrs
leave
fldl
or
notl
stos
bound
xor
pop
sbb
pop
pop
sub
int
adc
fucom
cmpsb
mov
ficoml
push
insl
lds
jb
cmp
xor
sbb
popf
cs
sti
shlb
outsb
mov
rcll
cmpl
xor
mov
sub
stc
mov
add
icebp
stos
movsl
in
bound
aaa
sbb
cwtl
gs
outsl
push
sbb
inc
arpl
stos
ja
mov
lret
mov
adc
fucomp
mov
sub
popw
rcl
js
sub
cmp
test
lods
pusha
pop
psllq
cli
jecxz
pusha
sbb
mov
cmp
jo
xor
sbb
push
int
mov
mov
das
mov
imul
ss
dec
aas
call
xchg
push
aam
jmp
out
push
test
xchg
movsb
jbe
inc
fisubs
mov
sub
clc
push
nop
movsl
fidivrl
xor
stos
loope
push
xchg
jo
push
shll
popa
push
adc
in
sub
jle
mov
data16
or
mov
add
nop
mov
mov
gs
fldt
adcb
shrb
push
das
xor
xchg
int
or
cld
in
cmc
xchg
ficomps
xor
es
test
pop
cmp
test
and
push
in
pop
inc
popf
adc
jmp
popl
and
rorl
xchg
ss
push
dec
mov
mov
lock
stos
int
fldt
dec
shll
add
insl
sub
jge
inc
mov
pop
mov
daa
sarb
or
jl
jbe
je
cmpsl
pop
mov
int3
mov
cli
xchg
sub
push
fdiv
test
jbe
mov
fstpt
sbb
and
adc
hlt
push
push
int3
inc
ret
stos
jnp
shlb
mov
cmpsb
lds
cltd
xor
dec
mov
cwtl
mov
sub
mov
rclb
dec
cmc
in
popa
mov
xor
or
call
sbb
pop
push
lret
lahf
mov
ds
pop
inc
sahf
cld
notb
jl
inc
js
cmp
jecxz
stos
dec
sbb
xor
hlt
or
or
jno
inc
mov
xchg
add
sub
cmp
lock
mov
jns
pop
mov
xchg
pop
out
jb
cmp
cwtl
movsb
in
push
es
icebp
adc
js
mov
call
inc
jno
mov
and
popa
fldenv
hlt
xchg
adc
pop
xchg
or
es
scas
jmp
xor
inc
dec
dec
loopne
mov
leave
cltd
rolb
cli
loop
test
cmpsl
outsl
lret
loopne
or
xchg
xor
sbb
mov
out
ja
add
push
lcall
dec
bswap
andb
popa
cltd
sbb
or
movsb
or
jno
xchg
ss
or
arpl
pop
fdivrs
add
and
mov
mov
gs
dec
idivl
test
les
nop
mov
popf
jnp
mov
xchg
sbb
inc
mov
push
push
add
xlat
popf
testb
xchg
cmp
inc
movups
jne
dec
push
ljmp
pop
imul
push
ss
push
repz
cmp
xor
sbbl
and
out
sub
cltd
pop
push
lahf
xor
leave
stos
pop
out
jae
inc
adc
inc
loop
jge
sbb
adc
mov
pop
fwait
sbb
xchg
mov
xchg
imul
xchg
scas
mov
xor
cltd
js
push
cli
cmp
imul
out
jecxz
sahf
or
stos
insb
jnp
add
outsb
jb
shll
fsubrl
adc
push
mov
test
or
mov
mov
or
and
ror
je
pop
inc
ds
out
jne
add
cmp
dec
xchg
lds
inc
popf
and
jbe
and
sbb
mov
imul
and
insb
mov
and
test
inc
mov
mov
mov
cld
popw
inc
movsb
clc
sub
jp
outsb
mov
xor
sbb
jge
test
arpl
xchg
testb
scas
inc
adc
xor
sahf
in
mov
xchg
pop
gs
push
xor
roll
xchg
stos
push
ljmp
inc
jp
mov
in
mov
clc
inc
jmp
xor
insb
sbb
popl
scas
aas
adc
lcall
roll
mov
pop
pushf
xchg
rcll
es
cmp
or
inc
pop
sub
ret
mov
and
or
and
or
add
xchg
es
pop
sbb
sub
xchg
clc
out
jnp
arpl
testb
cmp
sub
mov
xchg
nop
aaa
jp
sti
adc
subl
fldt
icebp
add
ss
iret
adc
addr16
add
pop
xchg
mov
push
sbb
pop
sbb
negb
cs
xchg
mov
and
fisubrs
fsts
rorb
stc
ficompl
pop
in
dec
fucomip
fsub
dec
sbb
mov
test
push
popl
sbb
jg
mov
mov
mov
fcmovne
pop
xor
inc
push
cmp
mov
movsl
cld
inc
ss
push
dec
out
movsl
push
xor
clc
sbb
pop
adc
bound
sarl
ds
fs
or
fistl
or
sahf
arpl
jnp
mov
cs
ret
fs
sbb
push
stos
mov
out
lahf
dec
rcr
adc
mov
into
andl
adc
sti
push
lods
bound
mov
test
fwait
aaa
and
xlat
dec
mov
in
lahf
jnp
mov
pop
mov
imul
in
push
cs
aad
cltd
mov
out
push
and
sub
jmp
xor
mov
pop
or
push
xchg
in
sti
ss
popf
inc
sub
popa
pop
add
inc
cmp
inc
fimuls
pop
fs
dec
sbb
mov
jbe
mov
pop
xchg
lcall
dec
jb
je
xchg
inc
lahf
sub
add
jle
mov
fiadds
lods
ljmp
add
mov
stos
push
in
cs
andb
xor
or
aaa
sbb
in
rcrl
push
scas
frstor
and
sti
sub
or
sbb
cmp
in
cmc
cmp
frstor
cmp
je
cltd
pop
and
aaa
or
jae
jle
pop
testb
clc
sbb
push
lods
inc
xor
mov
push
xor
sub
push
adc
icebp
fdivrs
cmpsl
jge
xor
sub
or
lcall
aaa
dec
or
jns
es
cs
repz
fsubrs
xchg
xor
pop
pop
mov
ljmp
call
pop
ljmp
adc
jg
movsb
inc
insb
xor
dec
aas
scas
nop
mov
lock
or
xchg
sahf
cwtl
push
xlat
js
add
jnp
rolb
out
and
lods
fdivs
filds
test
push
mov
jle
cmp
sub
es
jp
sub
adc
xchg
sub
iret
xchg
sub
pop
xchg
sub
mov
mov
cmp
bound
mov
fucom
mov
stos
sbb
call
xchg
cmpl
mov
fs
ficoml
popf
or
shll
sbb
movsb
push
xor
or
stos
mov
mov
cmpsb
mov
xchg
cs
sbbl
and
sbb
decl
cmpsb
negb
mov
popa
test
xchg
lods
dec
lock
add
or
dec
lds
cs
cmp
pop
into
or
in
test
mov
push
stos
ja
iret
and
fidivs
xor
pop
or
jp
adc
dec
inc
fcmovnbe
push
mov
push
adc
or
cmp
cmp
or
pop
sub
mov
test
sub
inc
int3
xor
outsb
fbld
and
xor
push
jge
rorb
or
push
lret
push
mov
ja
pop
stos
inc
inc
stc
repnz
adc
mov
in
je
out
iret
int3
call
xchg
movsl
shl
adc
clc
push
xchg
adc
add
sbb
xchg
lcall
inc
push
cmp
inc
jae
aam
sub
ss
adcl
mov
add
loop
jl
cmp
daa
jge
mov
cmp
bound
loop
adc
mov
mov
sbb
pop
push
mov
and
cwtl
je
mov
add
sub
or
jmp
loopne
gs
adc
and
fldenv
loopne
int
into
mov
mov
cmp
add
stos
pop
mov
cmc
push
push
jg
jb
mov
sbb
stos
sub
pop
test
and
cmc
aam
leave
push
repnz
lret
shl
push
and
loopne
fidivrl
inc
in
cmc
mov
bnd
lret
push
leave
out
pop
cvtpi2ps
out
das
lock
mov
push
mov
jns
cmp
jns
inc
mov
xlat
inc
addl
pop
pop
pop
sbb
out
lds
nop
movsb
rcrb
mov
xor
ret
dec
fsts
fnsave
test
inc
adc
jp
rcr
in
jl
or
nop
imul
inc
xor
dec
in
call
addb
or
sbb
mov
cmp
cltd
jmp
lods
mov
jmp
icebp
call
repz
imulb
jle
xchg
dec
cwtl
les
mov
xchg
loope
mov
call
jno
dec
push
stos
loopne
popa
jnp
fs
nop
cld
repz
leave
mov
sbb
lds
pop
sub
lahf
add
fdivp
dec
int3
inc
lret
adc
dec
pushf
bound
push
mov
sbb
mov
jns
inc
sbbl
sbb
cli
mov
aam
mov
bound
and
xor
fwait
push
and
or
shll
dec
pop
mov
adc
rcrl
lret
data16
clc
imul
lods
fmull
or
int3
pop
inc
inc
inc
in
push
loop
xchg
js
cwtl
pop
lret
xor
repz
subb
ljmp
cld
adc
in
fisttps
sub
mov
mov
xchg
cmp
add
push
ret
ldmxcsr
push
mov
into
test
mov
mov
and
ss
ljmp
sub
xor
in
push
cld
scas
rorb
mov
mov
inc
pop
push
xchg
pop
dec
sti
jg
push
sbb
or
xlat
pop
push
adc
rorb
mov
scas
pushf
cwtl
in
das
dec
sub
add
out
inc
mov
gs
cmp
mov
jl
rcll
and
mov
push
jge
filds
arpl
std
mov
dec
lds
je
fsts
mov
icebp
add
xor
inc
jmp
pop
dec
stc
stc
outsl
mov
push
push
push
cmp
push
xor
dec
and
jno
jge
and
sahf
std
aas
xor
jne
loop
pop
imul
xchg
lcall
sub
mull
lods
pop
repz
popf
jbe
pushf
jecxz
push
xchg
int
loop
jae
push
pop
inc
pushf
sub
nop
inc
cmp
es
pop
mov
fcmovne
adc
rol
fsincos
cwtl
xor
decb
or
lock
leave
add
in
hlt
cld
cmp
movsb
mov
push
pop
test
test
test
mov
adc
push
decl
and
inc
inc
add
jmp
push
cltd
fcoms
addr16
adc
sub
aad
xchg
in
fildl
push
jns
imul
in
sbb
sub
shll
in
lods
loopne
mov
sub
mov
sub
popf
nop
and
mov
subb
imul
mov
std
in
in
notl
call
inc
push
push
xchg
pmuludq
or
data16
xchg
out
in
lock
ljmp
loop
jae
into
mov
add
sbb
inc
push
lods
es
fnstcw
call
pop
out
jge
cmp
cmp
imul
mov
aam
scas
leave
cmp
addr16
negl
cwtl
push
movq
mov
push
js
aad
jno
pop
xor
jne
call
mov
pop
into
cmpsl
repz
sub
out
inc
pop
adc
pop
push
and
sub
lea
and
clc
ja
mov
das
mov
push
sub
pop
push
leave
mov
adc
sub
imul
out
dec
sub
adc
lret
int
pop
push
or
adc
push
cld
outsb
xchg
push
push
pop
les
stos
dec
test
push
mov
das
or
std
inc
dec
test
mov
inc
push
outsl
ljmp
cmp
xor
arpl
shlb
jge
sbb
cmp
bound
in
dec
cld
in
std
insl
mov
mov
lahf
dec
es
xor
popf
out
cs
into
mov
xchg
jno
loope
jne
lcall
jle
enter
cmpsb
push
rcll
jg
aaa
push
mov
xor
test
mov
pop
mov
push
cwtl
loopne
fiaddl
cmc
push
stos
jmp
sub
push
cld
cmpsb
lret
ffreep
out
data16
data16
pusha
cmpsl
imul
pop
fdivrs
mov
pusha
xchg
outsb
mov
mov
xchg
sbb
add
push
lcall
pop
jle
rcll
ljmp
cli
pop
inc
adc
mov
inc
push
pop
addr16
dec
pusha
test
xchg
lcall
push
inc
mov
ljmp
push
sbb
lods
xchg
mov
mov
pop
push
jecxz
mov
mov
or
push
inc
or
sarb
dec
pop
sbb
es
and
insb
xchg
pop
or
gs
push
cli
call
push
out
dec
pushf
ret
inc
adc
loope
aam
test
sarb
pop
xchg
dec
push
inc
mov
xchg
adc
mov
scas
xchg
xlat
mov
inc
sbb
iret
out
and
mov
push
jmp
loopne
es
cwtl
xchg
and
or
cmpl
cmp
mov
pop
loope
shrl
clc
xor
xchg
inc
or
cmp
inc
aaa
xor
rclb
imul
pop
jmp
inc
xor
mov
mov
mov
mov
enter
mov
add
jb
setno
or
sbb
insl
cwtl
sbb
and
sub
pop
aad
ret
jbe
das
or
in
push
adcl
out
leave
rorl
lahf
out
cli
incb
mov
movl
xor
lea
and
test
inc
cs
fs
shl
dec
lock
dec
enter
mov
fs
xchg
in
adc
xchg
and
cmp
push
jns
mov
in
addr16
in
xchg
cld
cmp
ret
jo
sbb
add
cmpsl
fs
shl
ss
mov
mov
push
iret
jno
jnp
adc
push
mov
xor
jne
fmuls
dec
out
shll
sub
addps
mov
movsb
pop
aam
pop
mov
stc
imul
icebp
jl
dec
sbb
je
dec
loop
mov
aas
or
mov
add
idivl
mov
cld
addr16
int
int3
repz
inc
cmpl
pop
cmp
mov
arpl
push
dec
stos
mov
mov
pop
xchg
rcll
js
jl
push
movsl
ficoml
gs
jnp
std
cmp
testb
scas
out
jle
sbbb
xchg
push
shlb
pop
inc
out
inc
fwait
cld
xchg
movsl
or
lcall
lock
das
pop
out
xlat
mov
push
jbe
sahf
add
test
or
arpl
call
pop
dec
das
adc
or
mov
lds
lcall
lret
call
stos
sbb
ror
movsb
in
stc
add
popf
sahf
mov
mov
decl
es
or
jb
stos
dec
mov
jo
push
mov
mov
sbb
or
cmpsb
gs
mov
lret
lret
pop
mov
adc
movsl
lcall
lods
stos
and
sub
adc
lock
mov
vmovdqa
mov
in
shlb
lcall
rol
fdivs
outsb
xchg
push
pop
dec
loop
mov
pusha
and
hlt
xlat
adc
arpl
mov
aaa
movsb
sbb
addr16
xchg
outsb
stos
push
push
in
loopne
les
lock
stos
xor
incl
das
push
repnz
xchg
inc
cmc
int3
jnp
and
icebp
mov
or
jne
fld
mov
jle
lret
addr16
loop
loop
out
dec
inc
sub
in
aad
leave
movsl
inc
jge
sub
decl
lods
add
addr16
xor
in
push
cmp
mov
iret
int
test
loope
orl
divl
xlat
mov
add
xchg
insl
xchg
daa
jns
xchg
test
dec
scas
add
cltd
fistpll
jb
lcall
sbb
pushf
sahf
loop
pop
pop
inc
lds
mov
and
jnp
push
orb
test
roll
cmc
pop
out
mov
ror
jno
xchg
shl
jge
hlt
ret
pop
push
hlt
push
dec
push
mov
pop
mov
push
mov
inc
ffree
icebp
in
xchg
xor
xchg
xchg
jl
inc
std
mov
fmuls
shrl
xchg
push
jo
es
leave
les
std
push
jmp
inc
sub
xor
je
inc
or
nop
xorb
stc
mov
mov
xlat
mov
in
sahf
dec
adc
fimull
ret
pop
and
mov
jnp
xchg
lea
mov
jmp
add
inc
bound
xchg
adc
je
mov
or
add
mov
insl
call
and
cmp
push
sahf
rcr
sbb
push
sub
test
push
loop
mov
out
jne
cmp
jne
add
gs
lds
dec
jl
inc
mov
fisubrl
ljmp
add
pop
inc
inc
repz
dec
mov
and
mov
rep
test
insb
add
popf
adc
xor
lds
push
cmp
push
jno
jno
and
inc
daa
inc
pushl
mov
shll
mov
inc
add
sub
movl
es
jbe
int3
adc
sub
fists
cmp
mov
out
jns
lahf
out
mov
test
mov
sbb
les
cmc
std
inc
jecxz
in
mov
lret
jmp
jmp
jb
xlat
and
sahf
loopne
movl
aad
fildl
adc
fsubrl
or
adc
pop
cmp
das
aam
xchg
sbb
repz
adc
ficoms
pushf
enter
fs
cld
mov
xor
rcrl
jmp
out
clc
pop
rcr
cmpsb
scas
std
push
nopl
js
adc
int3
into
ss
pop
gs
stos
xchg
insb
dec
inc
mov
xchg
lea
cmp
cmp
jns
adc
jmp
cli
xor
cmpsb
adc
in
mov
jb
jno
nop
dec
mov
subl
sub
shrl
or
push
jmp
inc
jl
add
out
inc
inc
hlt
ljmp
out
pop
cltd
mov
xor
jne
stc
sti
sub
fidivl
mov
fadd
arpl
fs
icebp
sub
es
test
mov
sub
xor
jnp,pt
inc
inc
les
test
jl
cld
out
sub
jle
inc
pop
sub
inc
jge
or
cmp
stos
rorb
rolb
dec
inc
test
movsl
mov
testl
out
xor
cld
andl
pop
jg
dec
sbb
jne
xchg
inc
mov
mov
mov
std
adc
lret
lcall
addl
jg
mov
jle
mull
cmc
or
push
or
pop
mov
rorl
icebp
add
sti
inc
adc
test
push
push
mov
xor
sbb
or
ja
into
xor
and
cmp
test
repnz
lock
aas
mov
andb
fiaddl
les
mov
jmp
pop
or
mov
adc
pop
dec
add
jg
int
and
daa
in
insl
test
in
sbb
shl
test
cvtpi2ps
jb
rorb
mov
pusha
xlat
jg
in
test
cmpsl
and
scas
cmpsb
mov
cmp
push
dec
and
xchg
movb
cs
cld
jl
in
cmp
xchg
and
sbb
mov
mov
pop
dec
xchg
scas
lods
mov
pusha
mov
add
dec
out
push
imul
sub
xor
jecxz
popa
mov
fiaddl
std
sbb
xor
divb
js
mov
js
inc
lret
arpl
scas
sbb
jmp
xor
in
shlb
das
mov
push
hlt
mov
inc
popf
jmp
push
adc
push
xor
xchg
xor
int3
mov
mov
or
cltd
adc
add
pop
jg
mov
sarl
jno
dec
adc
push
jb
sbb
jecxz
loop
sub
inc
xchg
iret
mov
out
jno
popl
push
jle
dec
pop
xor
jo
movsb
mov
push
inc
call
and
inc
push
hlt
addr16
loope
imul
mov
test
jnp
in
roll
addr16
imul
push
stos
inc
dec
pop
mov
in
push
mov
sub
or
out
xor
xor
sahf
cli
dec
rclb
or
roll
pop
sbb
mov
or
addl
movsb
out
lock
inc
inc
mov
push
ja
popf
cmp
pop
sahf
out
clc
jbe
pop
icebp
adc
dec
cltd
sarb
cmc
daa
arpl
nop
subl
mov
pop
xchg
push
pushl
rorl
std
jne
addb
push
testl
sub
xor
inc
ja
xchg
mov
test
xchg
pop
sbb
leave
mov
jge,pt
sub
mov
cmp
cmc
pop
xchg
sub
sbbb
nop
cmc
jno
stos
cmp
jmp
jmp
ret
orb
or
lahf
push
repz
xchg
int
inc
dec
int3
in
nop
adc
addr16
sbb
addb
xor
aam
mov
ret
sbb
hlt
pop
mov
dec
mov
sub
adc
sbb
mov
push
add
daa
ret
mov
imul
out
mov
popf
filds
sbb
std
stc
jge
or
aam
sbb
mov
add
call
mov
sbb
dec
cmp
jecxz
pop
inc
jmp
push
mov
and
andb
mov
dec
cli
pop
push
aaa
std
jge
cmp
mov
lret
or
push
ja
cmpb
bound
pop
cld
push
and
mov
lock
hlt
inc
pop
jns
dec
jb
or
dec
mov
sbbb
cmp
in
xor
and
add
cltd
and
push
xor
adc
cli
mov
sbb
push
rcr
and
sub
jge
inc
clc
sbb
mov
frstor
adc
repnz
in
mov
cmp
or
sub
aas
xor
or
add
and
add
xchg
jbe
test
inc
mov
adc
jb
xor
push
jb
popw
mov
xor
ret
inc
cmp
int3
test
cmpsl
imul
inc
jbe
jns
shlb
pop
popf
inc
mov
lahf
or
and
lea
xchg
mov
nop
lret
mov
pusha
psubw
push
mov
ds
les
movsl
adc
in
aad
fisubrs
loop
scas
add
out
pop
jne
sahf
imul
imul
shrb
and
add
adc
inc
dec
rolb
pushf
sub
sub
xchg
cld
pop
icebp
call
enter
cmp
insl
mov
jmp
mov
sbb
shlb
mov
adc
incl
movswl
adc
ds
push
jo
gs
adc
sti
shl
mov
in
mov
push
jle
sarb
lods
insb
sbb
in
gs
mov
jmp
sbb
jb
push
insl
dec
lcall
arpl
or
fstl
xor
push
aaa
sarl
pop
ret
xor
ljmp
inc
pop
aam
dec
out
jbe
push
adc
cmc
out
shrb
popa
xlat
sub
and
das
jp
movsb
push
mov
ljmp
cmp
ficompl
leave
xor
fsubrs
mov
stos
imul
pmaxsw
pop
xchg
mov
or
lahf
addb
adc
shl
jecxz
or
movsl
add
aas
outsb
mov
mov
pop
std
fldcw
xlat
jnp
and
pop
insb
out
lahf
int
xor
xchg
pusha
ds
add
jp
cmpsl
jg
lret
dec
insb
test
adc
js
sub
cmpsl
mov
add
xor
mov
dec
mov
cmpsb
cmp
js
mov
jae
sub
add
jo
jo
jae
jmp
jb
adc
inc
ret
jl
push
inc
or
or
add
and
fdivs
jno
mov
sub
stos
subb
insl
mov
jmp
dec
push
pop
mov
push
push
jecxz
xchg
xor
inc
inc
mov
pop
mov
inc
jge
mov
inc
incb
vshufps
stos
inc
jno
cltd
mov
loope
repz
dec
incl
mov
mov
pushf
sub
ds
push
add
fiaddl
test
jmp
pop
jb
popa
sub
jnp
scas
popa
and
stc
sbb
mov
aam
push
xor
xor
repnz
cli
div
or
push
cmp
repnz
inc
jmp
jb
lahf
dec
negl
push
cli
mov
xor
jbe,pt
inc
push
add
sbbl
xchg
mull
stos
loope
add
and
jns
or
mov
dec
sub
sub
das
lcall
jne
mov
mov
or
int3
dec
ljmp
cltd
inc
lcall
dec
adc
adc
sahf
xor
in
movsb
sahf
cs
jle
xor
enter
mov
insl
pop
dec
dec
inc
inc
imul
mov
pop
minps
outsb
mov
pop
jecxz
ljmp
xchg
push
mov
in
popf
fwait
mov
arpl
das
adc
sub
gs
jne
xor
xchg
sti
imul
pusha
std
jo
lret
sahf
aaa
mov
ret
repz
sbbb
es
movnti
arpl
xor
or
and
cld
jbe
movsl
ret
jge
push
xor
loope
sub
out
in
leave
mov
add
outsb
and
lock
jl
scas
push
dec
les
dec
sbb
ss
pop
lea
cmc
mov
lahf
adc
mov
mov
mov
dec
dec
jl
adc
xchg
jp
mov
jb
ljmp
stc
push
adc
inc
addl
gs
fnsave
inc
inc
aam
fwait
mov
pop
daa
push
sarb
cld
in
enter
dec
push
pop
sub
dec
adc
sbb
or
aaa
cli
jbe
xchg
mov
mov
test
data16
jmp
insl
push
jp
insl
data16
mov
lock
xchg
inc
mov
test
insb
bound
push
bts
ljmp
push
pop
and
sbb
and
ret
lret
mov
mov
sbb
and
cmp
sbb
mov
xor
and
loope
dec
xor
sahf
jne
loop
popf
xchg
sbb
pop
mov
fistl
mov
je
and
jne
cli
xchg
test
hlt
fimull
mov
and
push
mov
ljmp
loope
dec
jle
lahf
and
inc
rol
lock
sub
dec
leave
fldl
xchg
loope
clc
outsl
jb
lret
push
popa
jno
add
test
pushf
add
popa
push
fistps
cwtl
sti
mov
or
mov
xchg
sbb
xchg
out
dec
cmp
or
fwait
sbbb
or
push
fmuls
out
dec
adc
ss
dec
xor
cmp
sub
jb
sub
cmc
mov
fcomps
sbb
mov
aas
pushf
dec
xchg
pop
xchg
or
xor
fldcw
pop
and
shrb
adc
stos
adc
movsl
or
mov
pop
xor
lock
pop
adc
shrb
lcall
dec
ljmp
pushf
pop
into
sub
scas
mov
inc
xor
dec
jns
lret
das
popf
mov
clc
inc
lret
int
inc
sarb
or
aaa
mov
lods
loop
push
rclb
cmc
hlt
mov
pusha
pop
dec
loopne
pop
cmp
xchg
cmp
fdivl
cmp
lret
icebp
add
xchg
mov
subl
jnp
rorb
sub
stos
ret
xchg
mov
inc
pop
mov
adc
jo
sub
idivl
cmpsb
push
dec
mov
pop
fistl
pop
insl
ret
push
iret
decl
pop
fcoms
mov
xchg
cmp
mov
divb
insl
push
mov
dec
nop
xor
mov
cmp
cmp
xor
pop
jo
cld
cmpsl
add
dec
adc
pop
cmp
loopne
jbe
cli
std
push
sbb
push
lret
push
js
cmp
sub
mov
popf
or
pop
xchg
cmpsl
jmp
lods
pop
sub
in
sub
or
subb
imul
dec
lods
push
pop
hlt
push
andb
loopne
jge
subl
ljmp
or
outsl
xor
ds
ja
inc
push
sbb
scas
inc
jge
xor
and
mov
out
jbe
inc
inc
xchg
add
imul
add
popa
mov
fcmovu
jg
js
fwait
leave
inc
into
in
dec
pop
scas
pusha
jae
stos
sub
mov
notb
sar
xor
in
xchg
adc
int
mov
and
fwait
int3
xchg
xor
int
push
adc
and
or
arpl
mov
mov
jmp
jae
insl
add
pop
inc
push
mov
or
push
mov
loopne
and
mov
and
in
das
cli
shlb
pushw
repz
xchg
mov
cmpl
or
jne
bound
jno
outsb
mov
inc
int3
into
out
ret
fs
dec
or
xor
dec
jo
pop
jle
mov
xor
sub
stc
sbb
out
xchg
in
cmp
mov
add
push
gs
dec
cmpsb
xor
das
push
out
pop
in
pop
push
pop
dec
fstpt
mov
pop
movsb
sbbb
lret
sbb
inc
sti
or
mov
jle
iret
push
call
repz
push
mov
stc
adc
test
sbbb
mov
testb
sub
jle
xor
cmpsl
test
outsb
cmp
das
insl
fcom
jge
add
ds
loopne
cltd
arpl
or
jmp
pusha
and
imul
jge
mov
adc
mov
inc
jl
ret
das
inc
inc
and
and
push
jmp
rorl
ljmp
test
pop
or
icebp
movsb
cmp
scas
or
in
cmp
sub
mov
xor
cltd
jb
nop
jbe
sbb
lea
mov
scas
jl
mov
cs
xchg
imull
xchg
jo
sub
xchg
or
inc
mov
push
or
pushf
xchg
dec
inc
in
pop
or
rorl
push
loope
adc
call
scas
aaa
and
aaa
xchg
inc
dec
mov
jb
repnz
and
orl
inc
adc
cmp
and
and
add
loop
clc
push
add
jo
xchg
in
scas
adc
push
xor
imul
insl
imul
dec
push
daa
push
mov
lcall
fwait
subl
jne
jge
sub
mov
ja
sub
shr
jg
or
mov
popf
cmpsb
push
mov
push
fimull
sub
mov
cmp
lcall
sub
cmp
lahf
adc
pop
cmpsl
push
mov
lea
jae
mov
daa
mov
lahf
xor
lcall
mov
into
mov
jbe
push
sbb
push
scas
lds
dec
pop
inc
lahf
sub
es
pop
inc
and
out
jecxz
movsl
xchg
mov
or
mov
sbb
pop
jmp
sub
aad
sub
xchg
adcb
add
push
mov
pop
dec
in
cmc
mov
dec
dec
lock
xor
outsl
es
aas
test
testl
daa
sbb
imul
pop
xor
inc
xchg
cs
adc
scas
lock
in
sub
cmp
mov
inc
xchg
mov
or
std
mov
and
popa
out
cmp
cmp
push
movsb
or
mov
push
lea
rcl
test
push
jns
imul
mov
in
push
pop
pop
les
xor
mov
fildl
mov
pop
xchg
fimull
sub
sbb
cmp
and
xchg
rcrl
jecxz
int
rorb
sub
cmp
and
xor
cmp
inc
xchg
pop
and
xor
xchg
jp
pusha
cmp
xor
pop
dec
xchg
jle
adc
cmp
mov
fidivs
stos
cmp
fnstenv
mov
xorb
arpl
xchg
xchg
jbe
fcmovnu
repnz
jae
pop
push
ret
jnp
lret
out
xchg
ficoml
jns
cmp
cmpsl
xchg
and
dec
stos
pop
insb
inc
sahf
ja
cmpsl
int
pop
ss
ret
fwait
pop
mov
icebp
dec
into
gs
lcall
mov
addr16
inc
sub
mov
in
jecxz
nop
sub
xor
inc
fwait
inc
enter
adc
sub
pop
jp
les
clc
mov
pop
insl
jb
push
adc
hlt
pop
nop
rclb
sbbl
js
rcr
ljmp
mov
aaa
loopne
and
lret
mov
xchg
sbb
lods
xchg
jae
dec
aaa
add
adc
adc
inc
pop
std
dec
fucomi
jae
jmp
shlb
and
in
push
sbb
push
fidivrs
jno
cltd
cvtpi2ps
imul
mov
rcl
imul
testb
scas
in
movsb
adc
in
dec
adc
inc
push
or
sub
mov
fdiv
std
dec
pop
sbbb
sub
scas
out
mov
insb
std
rclb
nop
stos
jle
dec
sbb
int3
inc
dec
lods
fadds
dec
aas
sub
dec
push
inc
aaa
dec
add
fldl
add
mov
idivb
pop
cli
inc
pop
cmp
push
jb
dec
sarb
lea
mov
das
std
pop
mov
cmpsb
add
scas
push
int
push
daa
lds
xchg
xor
rcr
or
int
aaa
pop
push
sbb
enter
out
outsl
fstps
xchg
xchg
sub
mov
shr
bound
xchg
or
mov
mov
scas
addl
dec
dec
cwtl
adc
xchg
dec
aas
ljmp
test
call
sub
call
mov
faddl
lock
mov
insl
jg
jne
jle
out
sbb
pop
cli
jno
js
and
stos
xchg
lea
xchg
mov
cmpsb
shlb
mov
pushf
hlt
popa
nop
dec
popl
subl
cmp
sbb
push
inc
mov
fimull
pop
sbb
repz
and
std
mov
jae
leave
mov
jae
xchg
fstps
xchg
xchg
pop
sarl
sti
hlt
sub
mov
outsb
add
je
bound
pop
scas
jmp
sti
andl
xchg
lock
sti
jmp
mov
pop
je
pop
jo
popa
or
cmp
xchg
and
cltd
push
fcompl
pop
das
pop
jecxz
lcall
mov
je
fucomip
mov
clc
mov
add
mov
inc
gs
mov
inc
jmp
xchg
inc
cmpsb
lret
fimuls
fsubs
lock
xchg
push
sarl
pop
pop
ret
inc
and
push
stc
lods
pop
mov
push
pop
dec
xchg
in
and
outsl
pop
lret
pop
jno
lahf
jmp
scas
mov
aad
sbb
aas
or
test
aaa
pop
mov
and
dec
jns
cltd
sbb
mov
jns
push
cmpsl
scas
outsl
idivb
lcall
sub
cli
xchg
and
add
push
xchg
int
ror
leave
in
push
xchg
xchg
inc
dec
cmp
pop
and
jb
lahf
ret
andb
pop
iret
adc
inc
mov
xor
push
cmp
paddusb
gs
shrb
in
sbb
xchg
insb
sbb
es
pop
mov
iret
mov
push
mov
adc
in
sahf
cmp
fwait
mov
shlb
testb
sub
inc
jb
dec
cmp
sahf
sarb
mov
lods
arpl
outsl
leave
mov
adc
add
jmp
out
inc
mov
push
ret
mov
dec
and
xchg
in
xor
scas
fcoms
outsb
sub
jns
mov
dec
rcl
xor
pop
fxch
adc
sub
mov
setbe
and
sub
outsl
aad
fadd
dec
adc
mov
push
ficoms
cmp
or
mov
cmp
test
or
addr16
cmpsl
lcall
cmpsl
scas
sbb
int3
bound
hlt
popa
xorb
rolb
stos
daa
sbbb
xchg
int3
outsl
stos
addr16
mov
repz
ret
ret
jle
shlb
mov
aam
push
mov
adc
xor
mov
shlb
add
filds
xor
aaa
fcmovne
jge
insl
sub
mov
fdivrs
loop
pop
mov
fwait
pop
adc
lahf
dec
jnp
jo
in
push
xchg
mov
pop
push
jecxz
add
popf
lret
mov
jmp
lcall
mov
add
adc
stc
aaa
lods
pop
dec
popa
cmp
cltd
inc
sbb
out
sbb
clc
xchg
xor
sbb
add
adc
add
and
jge
jae
inc
int
push
fadds
and
pop
icebp
aas
cmc
ficomps
sbb
jecxz
lods
or
andb
push
cld
sub
outsl
test
dec
pop
cmp
sub
xchg
mov
out
pop
data16
xor
adc
fiaddl
mov
sbb
lret
sbb
fsts
in
bound
dec
xlat
inc
in
xchg
in
idivb
and
nop
push
int3
jl
mov
nopl
lret
jg
mov
pop
mov
in
sub
sbb
sbb
pop
mov
mov
ret
sbb
xor
mov
xchg
sbb
arpl
and
scas
scas
loop
xor
aam
adc
xor
sar
pop
sub
std
les
xor
dec
ds
repnz
pop
xchg
pop
movsl
push
sbb
cmp
jne
hlt
or
incl
cmpsl
das
mov
sti
add
ret
rorl
cmp
clc
ja
lods
mov
add
push
div
dec
ja
or
or
pushl
push
ja
sbb
inc
mov
jmp
out
mov
sub
dec
ret
dec
mov
fisttpll
sub
jl
pop
pushf
outsb
lahf
sbb
aaa
xlat
andl
roll
insb
cmp
jnp
rolb
cmc
jo
inc
popa
mov
in
cmpb
add
or
cmp
adc
in
ljmp
lahf
sarb
jmp
inc
movl
popa
loopne
mov
leave
xchg
sub
mov
mov
hlt
inc
add
stos
loop
jmp
jo
stc
adc
in
and
bound
in
mov
mov
arpl
pop
push
loopne
xlat
add
inc
dec
mov
mov
cmp
aad
in
inc
icebp
les
sbb
dec
pusha
push
or
and
repnz
imul
inc
lods
xor
push
xor
lods
xor
inc
pop
push
xchg
mov
lahf
cmp
mov
cwtl
xor
es
jo
mov
push
rclb
pop
cmp
lret
push
sub
lcall
add
mov
inc
stos
lahf
movsl
mov
fdivr
dec
pop
and
lock
dec
pop
mov
add
pop
arpl
pop
lods
jno
and
and
xor
ret
mov
add
xor
push
push
and
faddl
mov
dec
lods
push
mov
sbb
cmp
daa
sbb
mov
jns
je
dec
cmc
jecxz
and
dec
gs
cmp
popf
jne
ret
mov
jmp
and
xor
jo
fidivs
jne
ret
add
stos
fsubrs
pop
inc
stos
movsb
out
dec
insl
aaa
and
adc
inc
xor
inc
hlt
addl
dec
lahf
fidivs
mov
adc
scas
mov
pop
das
or
add
jp
shll
je
jecxz
rcrb
cltd
mov
xchg
mov
mov
or
xchg
inc
add
and
lcall
ljmp
xor
jnp
lret
adc
ja
pop
call
arpl
and
fs
fistl
jp
aad
push
cmpsb
nop
jo
cmp
mov
imul
sub
shl
cld
test
repz
inc
jp
mov
mov
loopne
sub
xor
nop
mov
jbe
and
loope
cltd
cmp
add
sbb
cld
rorl
xlat
dec
lds
adc
pop
fs
sbb
gs
iret
es
cmp
out
jns
add
xchg
dec
mov
xor
xlat
imul
sub
out
mov
jmp
lret
xor
push
inc
aas
jecxz
or
data16
mov
dec
lods
test
cltd
jl
lret
test
sbb
xchg
sub
ss
mov
bound
aad
adc
pop
aad
or
inc
inc
cmp
or
divw
adc
dec
and
subb
nop
sti
nop
imul
push
mov
pop
push
shl
ljmp
ret
jb
jne
add
in
fwait
sbbb
loopne
test
and
adc
adc
loopne
mov
sub
jbe
lcall
xchg
xchg
out
jne
lret
sbb
cs
push
pusha
outsb
cltd
add
movsb
pop
outsb
or
scas
mov
jp
lds
dec
push
mov
std
imul
orl
dec
cld
or
mov
hlt
cmp
out
sub
ljmpw
sub
xchg
mov
out
inc
daa
jne
mov
or
xchg
enter
mov
sbb
popa
loop
cmp
mov
rcll
clc
les
cld
hlt
enter
jmp
loope
and
and
lcall
stos
bound
icebp
enter
dec
or
mov
dec
cmc
adc
icebp
xchg
push
sbbb
xchg
xchg
xor
movsl
popa
popa
xadd
push
mov
lahf
pop
loopne
add
rcrb
inc
cmp
mov
inc
popa
mov
daa
test
lret
repz
push
sub
jns
sar
mov
push
scas
flds
inc
outsb
rcll
jne
jnp
insl
fisttps
cmp
loop
out
xorb
jne
enter
push
loopne
mov
add
or
lods
sbb
mov
pop
add
pop
mov
call
rcll
xchg
pop
sbb
ds
std
sbb
shl
sub
add
mov
adc
dec
inc
mov
ljmp
call
push
sahf
adc
sti
jns
add
fsubr
xchg
aas
and
inc
test
mov
jmp
lods
call
push
jb
daa
and
aam
stc
dec
scas
out
dec
fildl
adc
das
mov
outsb
pop
rolb
rolb
adc
lods
pop
jnp
mov
inc
clc
rcrl
jmp
adc
mov
sub
sahf
outsb
fcompl
adc
ljmp
test
mov
repnz
lock
xchg
adc
decb
scas
pop
mov
push
push
sbb
push
je
cmpsb
inc
lock
mov
inc
jnp
aad
push
dec
sub
loope
pop
mov
cmp
ss
lock
fst
add
add
insb
lahf
mov
mov
lods
jbe
lods
mov
mov
repz
cmp
push
jb
ficomps
pop
mov
ja
data16
test
arpl
add
int3
dec
movsb
mov
jae
xor
push
add
mov
ficompl
add
movsl
dec
pusha
sub
inc
and
out
orl
scas
push
mov
cmp
stos
push
enter
sbb
stc
xor
imul
cmp
xor
mov
dec
sbb
int
pop
push
pop
addr16
pop
mov
rcr
in
aas
ret
adcl
add
mov
adc
std
aad
nop
pop
adc
negb
int3
mov
xchg
pop
jbe
in
pop
bound
lock
add
sbb
or
les
pop
rol
test
inc
jmp
stos
pop
adc
dec
or
fwait
inc
lahf
fnstsw
jns
rolb
cli
mov
mov
lods
add
cld
adc
lahf
mov
in
xor
mov
sub
les
aad
dec
or
mov
gs
jo
or
pushf
test
lods
popf
ret
cmp
lods
add
push
dec
bound
sarl
or
inc
mov
cld
int3
les
inc
sbb
mov
in
mov
movsl
push
sub
test
notb
shll
icebp
mov
adc
xor
jmp
add
sbb
data16
cmp
fwait
jl
xorl
add
std
aaa
mov
xchg
mov
add
fiaddl
imul
sub
add
imul
outsb
outsl
sbb
xchg
add
mov
lds
cmp
adc
cmp
into
cmp
mov
push
lcall
jne
xor
cmpsl
mull
gs
sub
insl
mov
stos
pop
sbb
out
insb
jmp
gs
jecxz
idiv
lret
pop
aaa
xchg
imul
icebp
adc
add
jne
cmpsl
and
icebp
xrelease
into
mov
inc
sahf
cli
rorl
mov
mov
lret
sub
fildl
pop
out
pop
dec
pop
mov
mov
pop
push
test
repz
add
pop
aas
les
pop
sbb
and
lods
inc
int3
pop
and
sbb
sbb
ss
sbb
pushf
adc
dec
imul
push
mov
ds
jmp
sub
push
xor
pop
or
cmp
push
or
mov
push
sbb
mov
into
mov
and
lret
and
insl
mov
call
rcr
push
daa
je
xor
je
and
ret
repnz
and
adc
ss
mov
and
ficomps
stc
dec
add
sub
or
dec
jbe
jne
rcr
pushf
pop
orb
jmp
adc
mov
mov
pop
mov
scas
leave
inc
xchg
mov
imul
sbb
inc
das
push
jmp
xchg
mov
sub
mov
xchg
outsl
pop
cmp
lea
dec
lea
adc
out
jg
inc
jno
jg
jmp
pop
lret
cmp
cmp
clc
fldl
jecxz
in
mov
test
push
fimuls
orl
ds
push
xor
xchg
das
adc
add
data16
dec
lock
mov
ljmp
dec
lret
ja
aas
enter
cmp
enter
andb
jns
jle
inc
pop
sub
leave
or
cmp
jmp
push
popf
stc
pop
xchg
sub
jle
jo
daa
adc
outsl
int3
sbb
mov
pop
std
scas
xor
or
adc
loope
mov
sbb
xchg
add
mov
mov
and
out
or
cltd
or
rolb
sub
popf
xor
jb
lcall
fstpl
sahf
mov
and
sti
or
dec
fwait
in
or
scas
ja
mov
jae
sbb
outsb
pushf
sahf
pop
out
leave
sahf
pop
sti
inc
jns
loope
mov
ja
aas
adc
int3
andb
or
mov
stos
pop
pop
push
xor
and
add
or
insb
subb
xor
iret
inc
or
gs
ljmp
shrb
jmp
cmpsl
mov
inc
out
sahf
pushf
adc
or
stos
xchg
push
jbe
push
shll
popa
xchg
jmp
sub
sbb
shll
mov
movsl
fnstenv
daa
filds
and
push
enter
jns
repz
ret
add
stos
jne
dec
decl
jl
xor
out
hlt
pop
xor
insl
cmp
in
xchg
scas
mov
cmp
add
add
out
lods
xor
pop
nop
insl
aas
sahf
mov
push
cmc
hlt
sbb
push
test
mov
bound
pop
pushf
out
aad
inc
xor
mov
jmp
jecxz
xchg
outsl
lea
cmc
movsl
sbb
pop
xor
jno
lock
iret
fstpt
jmp
nop
adc
mov
mov
in
aam
lcall
sbb
hlt
xor
jmp
push
mov
loopne
push
lret
or
jbe
cmp
cltd
mov
daa
addb
cmp
or
mov
mov
fadds
mov
lods
lcall
rorb
adc
mov
cli
repnz
dec
arpl
enter
ficomps
cli
cltd
shlb
mov
es
adcl
add
dec
rcll
jmp
jb
dec
enter
mov
push
sub
shll
push
cmp
outsb
mov
mov
scas
gs
mov
xchg
loope
js
daa
mov
bound
cmp
test
dec
je
insb
jo
inc
lcall
fmuls
add
mov
inc
mov
or
test
pop
pop
xchg
aas
sub
aad
out
xor
pop
movsl
out
mov
outsl
xchg
sub
aam
and
adc
gs
dec
mov
cmp
inc
mov
sub
mul
or
dec
adc
xor
jl
pusha
jmp
bound
pop
ss
cmp
cld
pop
aam
and
adc
fwait
mov
dec
imul
mov
call
adc
adc
and
in
xchg
test
inc
pop
jne
and
adc
orl
nop
sahf
pusha
add
sbb
loop
inc
fisubrs
mov
xchg
aad
int3
jne
repnz
mov
pop
dec
lock
and
in
jp
jecxz
mov
fldz
sub
fiadds
dec
and
push
repnz
pop
inc
dec
cmp
and
outsb
stc
mov
sub
in
adc
mov
mov
xchg
push
aaa
nop
dec
jmp
leave
adc
add
fisttpll
aad
in
scas
adc
fidivs
imul
jnp
dec
push
mov
cmpsl
xor
jo
test
fbstp
pop
sahf
adc
jb
pop
fdivr
cmc
adc
jbe
lods
xchg
dec
inc
jb
rcl
pop
adc
cld
shlb
mov
cltd
bound
fwait
push
rol
pop
iret
fnstenv
and
lds
and
push
jg
fstps
stos
mov
xchg
leave
cmpl
lret
jg
mov
cmp
ss
data16
out
imull
jle
bound
stc
xor
or
cmpsl
add
xchg
icebp
xchg
push
pop
ds
push
jmp
std
mov
pusha
out
cmp
pop
std
mov
cld
push
xor
push
sbb
vmwrite
xchg
xor
es
pop
and
push
lcall
ljmp
out
fildll
mov
add
dec
subl
add
lret
mov
mov
jecxz
popa
ja
adc
xchg
pop
mov
pop
xor
out
add
subb
dec
icebp
fs
mov
jge
jmp
out
and
xchg
int
or
inc
insb
divl
mov
inc
jmp
dec
jmp
das
mov
popl
dec
pop
test
jg
xlat
adc
mov
cld
adc
fidivrl
lahf
out
cmp
pop
cmp
and
loop
or
cmpsb
sub
jmp
andl
inc
mov
std
stc
push
jl
mov
dec
lea
add
xor
addb
std
lock
push
fdivrp
scas
mov
sbb
rcl
sub
and
adc
lcall
jno,pn
cmp
add
and
stos
jb
and
lcall
xchg
or
inc
stos
mov
bound
dec
cmp
fwait
gs
mov
shlb
testl
imul
xchg
inc
les
out
jae
js
mov
pop
and
sub
and
push
fnstcw
xlat
mov
mov
in
mov
popf
loopne
cmp
cltd
int3
jne
sub
add
test
xlat
xor
jmp
dec
xchg
scas
hlt
sub
cli
jmp
out
mov
int3
sub
dec
xchg
ret
sub
push
push
xchg
add
or
mov
mov
test
adc
pop
mov
xor
add
call
insb
xlat
test
adcl
int3
es
insb
or
loopne
sarb
sbb
leave
pop
sbb
hlt
call
mov
push
mov
movsl
scas
gs
xchg
icebp
daa
std
push
mov
imul
sbb
mov
mov
push
xchg
push
push
inc
and
aaa
iret
shlb
pop
or
xor
xor
mov
xchg
jb
stc
push
xchg
jecxz
ljmp
add
in
mov
add
cli
cmpxchg
cmpl
pop
push
push
mov
fisttpl
push
addr16
lds
mov
inc
fcomi
dec
in
pop
mov
test
popf
loope
cli
scas
mov
scas
and
loop
out
inc
rorl
jg
rolb
mov
mov
nop
sub
mov
rorl
mov
jecxz
fildll
sbb
and
dec
xchg
sbb
dec
add
popl
xchg
mov
pop
call
adc
repz
push
js
mov
and
xor
outsl
aam
ljmp
lods
cmpsb
adc
clc
inc
arpl
popa
movsb
push
push
inc
sahf
pushf
ljmp
mov
pop
pop
addr16
push
cli
adc
aas
xchg
inc
das
and
cmp
aaa
pop
sbb
mov
hlt
mov
je
mov
mov
ret
jae
adc
daa
repz
push
mov
push
jae
mov
xchg
movsb
imul
int3
or
les
repnz
xchg
sub
sub
pop
movsb
jne
mov
xor
sarl
or
outsl
jo
adc
stc
arpl
mov
insl
sahf
jmp
popa
cmc
ljmp
inc
fst
gs
out
push
jle
cmp
add
cmp
push
mov
cmp
scas
leave
rorb
inc
outsl
sahf
ljmp
repz
xor
mov
xchg
sub
xchg
mov
xchg
loopne
inc
mov
pop
xor
lods
jnp
pop
jg
imul
insl
insl
enter
adc
add
push
pop
inc
xor
out
mov
xor
movl
mov
pop
test
aaa
push
cmp
or
mov
pushf
std
outsl
mov
inc
cmpsb
jl,pn
push
lods
add
sub
arpl
mov
jns
xor
ds
fnsave
clc
hlt
jo
fistl
and
loop
hlt
test
and
mov
jl
inc
inc
xchg
cwtl
arpl
lret
stc
mov
push
add
push
sbb
iret
and
fistpll
cmc
bound
push
xor
adc
push
adc
mov
and
push
ds
mov
rclb
xor
cmpsl
inc
mov
outsl
mov
adc
xor
xchg
xor
adc
cwtl
sbb
js
out
or
in
cmp
xchg
insl
rcrl
dec
imul
jnp
mov
mov
outsb
inc
mov
test
aad
sub
dec
adc
aam
xchg
ffree
jge
addb
inc
inc
fwait
js
lret
test
add
xchg
cs
daa
xchg
pop
cmp
mov
mov
inc
cmp
add
scas
mov
adc
dec
and
es
stos
add
or
adc
dec
xchg
xor
xor
sti
in
sbb
pop
dec
push
fldcw
pop
scas
test
sub
mov
insl
fnsave
out
fdiv
push
ficoml
fstps
mov
mov
and
sub
xchg
mov
sahf
call
lret
sbb
in
mov
jne
cli
and
adc
fcompp
jecxz
test
pop
xchg
stos
out
adc
icebp
aas
es
adc
lds
sub
repz
jg
and
dec
sub
mov
lds
fxch
andb
pop
sbb
dec
mov
push
add
cwtl
mov
xchg
les
push
dec
sbb
lods
clc
mov
inc
popf
push
test
popf
inc
cmpsb
fildll
dec
mov
jp
ficompl
push
ret
inc
shrb
cmp
xchg
shl
pop
ret
jle
pop
mov
cmp
adc
repz
fcmovnbe
aam
stos
mov
icebp
and
faddp
pop
nop
scas
iret
and
ret
or
cwtl
xorb
pop
pop
sti
dec
lret
jne
sub
adc
xchg
push
sti
push
mov
xchg
int3
jecxz
pop
pusha
into
out
loopne
sub
in
mov
adc
sbb
jg
leave
dec
jle
ret
jle
cmp
cmpsl
outsb
mov
pop
sbb
pusha
add
dec
inc
shlb
or
add
mov
pop
pusha
test
inc
pop
mov
jmp
xchg
out
gs
into
dec
mov
adc
bound
jbe
sbb
lods
lret
out
mov
test
mov
sub
enter
addr16
adc
cmpsl
stos
insl
push
cmpsb
jmp
call
mov
repnz
jmp
adc
dec
push
scas
out
fs
jnp
ljmp
int
or
fwait
int
cmp
jne
mov
jae
fisubrl
and
and
cmp
and
dec
in
and
pop
cmp
add
add
jp
lcall
xchg
push
mov
push
inc
xor
mov
cmc
pop
sahf
mov
mov
cmp
mov
add
inc
pop
jns
mov
fmuls
fs
push
and
adc
cld
or
ret
push
stos
aam
into
pop
xchg
popa
pop
sub
add
jmp
inc
xchg
or
je
sbb
xchg
in
adc
popf
jle
mov
sbb
push
pop
in
nop
add
jmp
test
ja
pop
movsl
stos
test
mov
mov
cmp
scas
xchg
adc
loope
fisttpl
xor
pop
add
dec
mov
xchg
mov
mov
pushf
and
dec
fidivs
cltd
inc
mov
sbb
pop
add
sbb
pop
mov
or
or
sub
in
mov
das
dec
xchg
imul
adc
cltd
mov
adc
adc
jae
rorb
cmp
fs
cwtl
repz
enter
popa
mov
jno
jge
jl
fstpl
or
xchg
cmp
jge
or
fcomip
lds
stos
mov
outsl
out
push
pushf
in
cmpsb
loopne
test
push
inc
nop
daa
out
mov
test
jo
sti
loop
xor
xor
jno
not
addr16
ret
in
inc
mov
test
loope
test
fstpl
cld
fcoml
cmp
jae
adc
add
out
lods
shll
cmp
inc
loopne
icebp
push
scas
mov
int
lret
cli
xchg
es
fistpl
out
mov
and
mov
mov
sbb
cltd
mov
sub
in
jle
cmp
in
xchg
notb
xchg
int
mov
out
bound
imul
outsb
mov
movsl
stos
fldcw
push
mov
frstor
sbb
jo
ja
push
scas
sub
jmp
in
mov
mov
bound
cmp
cwtl
jmp
ja
subb
mov
jle
xor
ds
pop
xor
ds
data16
movsb
dec
inc
inc
lret
mov
aas
adc
in
pop
sub
cli
push
js
add
je
sbb
push
push
outsl
mov
mov
int
mov
push
sbb
out
add
les
jle
sarb
add
mov
mov
dec
cltd
mov
ret
test
aaa
inc
test
jle
lods
enter
int3
jns
in
push
int3
cmp
push
mov
sbb
pop
bound
hlt
jne
cmp
shrl
xorb
daa
into
outsb
or
add
in
daa
mov
xchg
add
jnp
dec
aaa
fwait
data16
xor
inc
pop
or
push
mov
je
inc
push
out
pop
mov
dec
mul
data16
dec
push
push
jnp
subb
jnp
das
push
mov
pop
js
pop
inc
outsb
add
jge
jle
cwtl
in
iret
ja
mov
xchg
jp
xchg
push
lret
mov
hlt
pop
jb
push
fdivrl
adc
push
adcl
push
popa
mov
sbb
fs
inc
sbb
sub
and
pop
push
push
xor
in
scas
in
test
fst
sub
or
mov
imul
cmp
repz
subb
dec
sbb
movsb
pop
push
fbstp
and
lods
popa
nop
sub
lds
call
xor
mov
mov
jnp
push
hlt
xchg
cmp
fwait
in
jmp
adc
imul
jnp
test
in
arpl
mov
add
stc
dec
int3
dec
sbb
push
jno
int
and
adcb
mov
xor
xchg
jmp
cmp
pop
lcall
push
mov
push
xchg
mov
adc
repnz
out
fldl
cmp
push
inc
adc
popf
jp
push
mov
rclb
mov
imul
jp
and
sbb
or
cltd
jno
sti
inc
jge
dec
mov
cmp
call
std
and
sti
or
pop
repz
dec
and
sahf
rcr
es
shlb
pop
icebp
cltd
and
pushf
cmp
roll
ds
cld
inc
cmp
pushf
mov
push
xchg
hlt
mov
xor
inc
adc
ficoms
sub
test
add
cltd
sub
daa
out
out
inc
sbb
lds
add
inc
pop
pop
and
mov
adc
into
or
inc
adc
jg
and
mov
mov
out
xor
xor
mov
mov
or
adc
stos
mov
jo
rol
orl
repz
mov
lds
rcrl
scas
repnz
testb
out
lods
jg
adc
rcrb
and
scas
mov
shlb
lds
iret
and
mov
cmpsb
push
sahf
int
mov
jmp
and
outsl
cmp
cltd
mov
aaa
lock
jle
leave
and
jo
lods
push
xor
addl
sub
insl
push
stos
fs
lret
xorb
inc
mov
jmp
mov
add
filds
add
cmp
dec
xlat
sub
xchg
aad
in
jnp
cli
xchg
push
or
mov
and
lret
movsb
popf
lret
aas
lahf
jge
adc
adc
in
and
adc
call
pop
jge
adc
shlb
sbb
lods
shl
sbb
fcoms
ds
out
mov
in
xchg
clc
jl
daa
xor
push
push
push
pop
cmp
stc
xchg
xchg
sbb
mov
pop
dec
stos
jmp
fwait
and
cmp
std
push
or
test
or
mov
rcll
insb
or
fstps
add
mov
add
dec
loope
gs
jle
xchg
inc
add
xor
xor
xor
movsb
stos
cmpsl
divb
add
xor
out
jge
jmp
sbb
cmc
dec
mov
sbb
push
lret
sub
ret
shll
outsl
pop
or
pushf
add
inc
cmc
xchg
and
stos
ljmp
mov
sbbl
faddp
jbe
test
fldt
fadds
push
inc
jo
inc
sub
add
repz
cmp
jp
xlat
push
dec
add
and
cwtl
sub
aas
jle
xchg
sub
push
cmp
and
sub
sbb
aaa
out
xchg
add
cmp
in
clc
pusha
xchg
sub
cli
repz
or
xchg
jns
mov
popa
xchg
and
jge
popf
enter
cmp
xchg
mov
add
mov
mov
fs
pop
sbb
xchg
ds
sub
aad
repnz
fldcw
jp
cwtl
cmp
jp
movsl
lahf
test
scas
push
ja
jae
and
insb
les
sbb
sti
push
imul
jecxz
in
cwtl
outsl
mov
roll
adc
cmp
add
mov
ret
jge
shrl
push
sbb
je
or
outsl
xchg
dec
sub
icebp
dec
aad
pop
sub
ror
jmp
movsb
aam
inc
add
or
shlb
sarb
movsl
dec
add
fs
out
std
cmc
sbb
pop
sbb
jae
or
or
xor
and
std
rcrb
jg
mov
push
mov
rclb
jnp
pop
cs
cmpsb
sbb
shlb
frstor
jb
inc
shlb
movsl
fisttps
mov
ljmp
mov
movsl
ret
cltd
or
push
xor
aad
cltd
sbb
imul
cltd
je
mov
adcl
mov
cli
or
sub
pop
mov
xchg
jecxz
add
outsb
jmp
and
mov
fcompl
pop
enter
jno
dec
adc
pop
shrb
out
pushf
popfw
pop
lret
lret
movsb
pop
inc
outsl
inc
push
pop
mov
fnsetpm(287
lea
jbe
xchg
sbb
shll
mov
push
xlat
ljmp
push
popf
pop
adc
mov
icebp
xor
pop
push
iret
int
push
pop
subb
push
inc
mov
cmc
fs
notl
jno
imul
inc
inc
inc
xchg
or
xor
mov
jg
jae
aas
sub
rorl
mov
fildll
lret
pop
jns
aam
dec
mov
mov
pusha
cmc
pop
fdivp
dec
jo
pop
stos
fnsave
xchg
movsb
rcrb
leave
mov
insl
test
pop
xor
enter
xor
push
jmp
jg
mov
scas
fs
imul
dec
push
push
xchg
fldcw
pop
ds
les
or
push
cld
scas
mov
cltd
jne
mov
dec
and
adc
mov
lret
test
nop
adc
movsl
sub
bound
push
scas
hlt
jecxz
pop
repz
jnp
sbb
pop
out
jge
call
loop
push
jge
inc
addb
out
popf
fs
and
inc
push
call
inc
pop
ja
fmuls
mov
out
pop
shl
addl
loopne
xchg
out
adc
mov
or
xor
xor
fwait
gs
fimuls
lods
sbb
xchg
mov
shlb
repz
xchg
shrl
xchg
push
sub
lock
mov
mov
out
mov
cltd
add
loop
pop
push
loopne
adc
imul
imull
xor
mov
lret
and
add
mov
inc
cld
cli
mov
cld
mov
cmovle
mov
rcrb
clc
cmc
adc
inc
shll
enter
xchg
push
lret
in
fs
cmp
loope
inc
xlat
mov
test
mov
out
mov
sbb
mov
into
pop
les
inc
push
clc
fwait
and
mov
mov
pop
mov
ss
push
inc
dec
sbb
mov
jg
popa
mov
enter
and
test
insb
pop
jg
sbb
inc
stc
int
jno
mov
inc
and
xchg
cs
aam
cli
xor
mov
dec
xchg
push
loope
test
mov
pushf
jns
push
jo
insl
std
and
ljmp
pop
and
rclb
icebp
mov
shl
push
addr16
xlat
inc
cmp
stos
pop
jp
pusha
mov
loop
cs
sub
ja
inc
pusha
jl,pt
and
addr16
cmp
and
popf
jo
xchg
lret
mov
push
pop
outsl
hlt
outsl
add
ret
dec
pop
mov
iret
mov
mov
jnp
xor
data16
test
lret
ss
jle
xchg
adcl
rorl
mov
adcl
cmp
xor
cmp
mov
into
pushf
xor
fisttps
push
ljmp
dec
xchg
ss
stos
icebp
push
pop
mov
test
dec
ljmp
add
dec
jno
test
jno
adcb
dec
in
add
mov
adc
inc
dec
rol
test
repnz
mov
dec
or
mov
outsb
neg
inc
adc
mov
js
aad
lods
cld
test
xchg
dec
adc
movsb
pop
in
jb
mov
ret
cmp
popf
std
mov
cmp
sbb
xor
cmp
xor
popa
pop
gs
push
dec
jp
sarb
jl
dec
call
movsl
cmp
sti
sahf
aaa
push
pop
cmp
shr
jge
scas
mov
fldt
xchg
or
out
fistl
sub
dec
adc
inc
pop
clc
incl
jbe
iret
pop
leave
repnz
insl
inc
mov
aas
mov
test
cmp
push
mov
test
push
xchg
mov
xchg
rorb
jp
ret
jge
out
cwtl
fnstcw
jns
pop
sahf
xor
cmp
dec
xor
cmp
sub
dec
xchg
mov
out
rcl
and
cltd
mov
sbb
xchg
lods
aam
sub
idivl
jmp
out
jg
fwait
sbb
loope
repnz
leave
mov
xor
sbbl
dec
xchg
aam
jo
adc
loope
ficoms
cmpsb
push
stc
iret
cmp
ljmp
mov
leave
out
stos
inc
and
test
inc
clc
fnstsw
mov
fistps
ret
mov
jae
dec
or
mov
decb
cmp
ret
into
mov
aas
inc
mov
test
repnz
xchg
add
fdivs
inc
push
dec
int3
ss
adc
add
jns
lea
aam
jp
ffree
dec
push
mov
testl
dec
loope
pop
adc
and
iret
inc
jge
rorl
jle
inc
pop
aam
push
in
push
xchg
mov
out
dec
push
adc
mov
push
mov
mov
out
xchg
mov
ss
ret
cmpsb
xchg
xchg
inc
cmp
leave
sahf
mov
pop
roll
test
les
sub
pop
push
cmp
or
mov
cmp
hlt
mov
sbbb
push
jmp
xchg
dec
icebp
push
jb
sbb
bound
shl
cs
pop
mov
out
les
int3
dec
push
xor
cld
xchg
jp
or
jne
inc
cld
in
push
cli
dec
add
cmp
rolb
and
out
in
shlb
push
fisubl
nop
int
jo
sbb
mov
ficomps
lods
adc
stos
mov
outsb
jmp
mov
push
jp
nop
mov
add
sub
or
or
jp
ret
jns
popf
sti
cld
cld
in
shlb
bound
adc
jmp
dec
cwtl
push
andb
push
sub
dec
ret
xchg
pop
lahf
ret
xchg
mov
xor
imul
mov
int3
jnp
sbb
add
xchg
int
jmp
xchg
add
scas
cmc
fucomip
roll
xchg
add
loop
int
hlt
sub
push
lods
clc
xor
fcomip
inc
pop
pusha
inc
xchg
repnz
mov
cmc
aaa
jno
in
pop
in
cmp
jg
push
pusha
cs
lds
xor
jecxz
lock
push
jecxz
xor
xor
sbb
iret
xor
push
and
pop
arpl
cli
scas
mov
cltd
aad
sbb
clc
mov
push
idiv
loop
pop
cltd
or
pushf
and
sub
push
in
xor
fsincos
ret
dec
cmc
jno
cmp
xchg
or
ja
pop
loop
push
or
test
data16
testl
cld
xchg
sub
js
dec
dec
mov
xor
mov
pop
inc
jae
sti
es
fcmove
pop
jae
pop
scas
lds
mov
dec
sub
sub
xchg
je
mov
add
add
pop
das
and
mov
jne
outsl
fimull
cwtl
daa
sub
popf
push
mov
in
xor
adc
rclb
out
fs
call
icebp
rolb
leave
adc
jge
jb
ljmp
mov
inc
and
cmp
add
add
push
insb
jbe
or
sub
out
lds
movsb
andb
aaa
pusha
push
mov
js
mov
jecxz
movsb
lock
pop
inc
push
cli
add
push
popf
push
insl
ss
push
in
mov
int3
cmpsl
insl
mull
push
push
shl
loop
sbb
sbb
or
mov
ret
cli
fdivrs
pop
jp
cmp
mov
mov
push
dec
roll
mov
mov
dec
jmp
pop
and
mov
inc
fisttpll
adc
out
leave
fcomip
xor
icebp
sub
push
lahf
jmp
mov
popf
jns
push
jl
xor
xor
sub
jecxz
cmp
and
mov
scas
in
cs
rorl
scas
fwait
mov
pushf
lock
add
test
out
mov
loopne
js
adc
mov
adc
repnz
mov
jle
rcr
sub
sub
mov
dec
faddl
mov
dec
ret
mov
jp
ficompl
jae
sub
jecxz
jle
fcoms
push
or
scas
cld
dec
pop
mov
dec
sub
sbb
jns
leave
shll
gs
flds
les
into
sub
scas
pop
das
shlb
pop
dec
cltd
dec
pushf
clc
cmc
dec
gs
push
rcll
jnp
dec
pop
dec
out
adc
push
xor
jle
sub
into
pop
jo
std
mov
pop
lods
jae
xchg
fadds
push
mov
mov
xor
sub
and
and
or
mov
inc
inc
js
pop
test
inc
fs
lea
dec
sti
adc
xor
mov
ret
cli
lock
jnp
pop
xchg
cwtl
pop
and
dec
sbb
mov
lahf
sbb
dec
mov
cmpsl
lds
in
aad
sbb
pop
mov
pop
repnz
pop
sub
jg
dec
stos
ret
jle
movsl
push
outsl
push
add
xchg
pop
imul
lea
cmp
pushf
push
sub
stos
mov
ret
jnp
std
roll
mov
cmpsb
rcrl
leave
dec
fcoms
sbb
cmp
roll
in
jnp
rolb
ja
out
bound
popl
sbb
ljmp
call
ret
ret
lock
push
insl
sub
rcrb
mov
notl
inc
pop
ja
push
adc
adc
adc
lahf
or
mov
rcll
aam
xor
jle
fwait
push
cli
fucomp
add
rclb
leave
daa
lret
cmp
leave
cmp
xorb
cmpsb
jg
push
testb
and
pop
fildll
fmulp
push
mov
and
sub
scas
stos
pop
pop
mov
fidivrl
mov
test
sbb
icebp
inc
leave
lock
in
outsb
movsb
sub
cmp
fiadds
fwait
mov
in
sbb
jg
aam
mov
add
adc
lret
mov
sub
push
fdivl
out
shr
xor
in
sub
ror
lret
sarl
mov
lock
and
cmpsl
xchg
add
sub
sub
inc
fs
lock
fs
xchg
aaa
mov
rcl
xlat
adc
out
lahf
mov
add
jp
les
lret
lods
mov
rcr
or
mov
or
and
dec
mov
mov
outsb
shll
fisubl
mov
mov
test
ret
and
outsb
mov
insl
add
hlt
mov
mov
push
rep
popa
into
push
cmpsb
adc
ret
outsb
push
test
adc
jbe
icebp
loop
ret
jno
push
scas
mov
mov
xor
in
fcoms
rcrl
loopne
push
cmp
push
in
mov
mov
mov
sub
pcmpeqw
mov
add
adc
clc
mov
jns
aaa
dec
jp
jae
dec
clts
cmpsl
mov
sub
xor
or
mov
bound
scas
cmpb
add
in
shlb
jo
and
xor
or
mov
adc
cmpb
test
inc
jno
sbb
enter
cmp
and
in
cmp
lods
or
ljmp
push
pusha
mov
adc
popf
data16
or
mov
shrb
pop
jg
fldl2t
push
insl
test
je
adc
mov
pop
adc
rorb
aad
flds
incb
push
cmp
add
daa
jecxz
push
mov
pushf
dec
xor
cmpsl
push
jge
inc
int3
fs
ss
leave
addr16
jae
cwtl
mov
test
add
shrl
test
mov
sarb
test
add
enter
push
cmp
cwtl
cmp
or
push
scas
imul
pusha
shlb
jne
sub
icebp
add
and
std
mov
inc
push
bound
popa
shll
mov
loope
mov
je
ss
or
in
pusha
es
jecxz,pt
ret
mov
std
popl
xchg
pop
test
loopne
xchg
and
push
les
pushf
jno
lret
fnstcw
ljmp
mov
jb
cmpsb
xor
in
rorb
xor
add
and
sbb
pop
xchg
out
roll
sarb
dec
and
sub
xor
das
mov
pop
lcall
int
sti
adc
je
xchg
adc
pop
pushf
jmp
push
std
leave
clc
insl
cltd
push
sbb
xchg
gs
insb
insl
fisubrl
cmp
adc
pop
sbb
pop
notl
ja
cmp
pop
fcom
add
daa
jmp
sub
cmp
jnp
cmp
fisttpll
sub
daa
adc
lret
push
test
popf
cmp
lcall
out
add
push
dec
frstor
into
fisubl
loopne
data16
lock
cmp
dec
sbb
imul
loope
xchg
lods
inc
int
pop
pop
dec
pop
lret
stos
dec
aad
mov
jne
fisttpl
xor
shr
sbb
pop
xlat
mov
mov
and
rorb
and
orb
shrd
test
das
out
xchg
xchg
cwtl
fyl2x
cld
xchg
xorb
cltd
push
xchg
iret
dec
ljmp
movsl
ret
jnp
into
pop
in
test
mov
clc
aad
jno
push
pop
data16
clc
mov
inc
pop
imul
jo
jmp
rorl
clc
and
nop
push
cmp
daa
and
incl
xor
push
es
mov
push
push
loopne
mov
sbb
ljmp
pusha
mov
ret
xchg
push
xchg
jmp
js
push
cli
inc
jnp
notl
lock
call
ret
mov
xchg
cmp
mov
sub
push
sbb
push
mov
jg
jbe
push
in
or
cmpsl
xchg
iret
scas
ret
xor
movsb
cmp
jno
adc
testl
aad
shrl
mov
cmp
sarl
or
aaa
jp
adc
insl
ficompl
movsb
ficomps
in
mov
jbe
test
in
hlt
pop
and
lock
xchg
aad
sbb
dec
iret
mov
dec
pop
jp
or
inc
jb
std
aam
push
lea
mov
and
adc
pop
mov
adc
push
or
inc
pushf
xor
cmp
jne
addb
jecxz
jb
int3
loope
push
loope
jnp
push
or
jnp
xchg
outsb
mov
pop
cmp
decl
cvtdq2ps
movsb
shlb
adc
inc
das
std
scas
mov
push
dec
mov
add
cmp
pop
sub
shlb
outsb
jg
aaa
jbe
or
mov
lret
adc
out
mov
jge
sbbb
mov
sahf
push
loop
fdivl
je,pt
loop
dec
test
mov
repz
and
jge
adc
pop
ret
loop
js
dec
sbb
stos
les
not
cmpsb
test
ds
lds
test
fcoml
mov
imul
sbb
jb
insl
ret
pop
mov
mov
add
movsb
pop
pusha
in
and
shll
mov
dec
and
jg
cmc
jnp
inc
and
or
dec
cmp
add
jmp
dec
dec
or
sbb
sbb
push
sbb
daa
cmpsl
mov
loopne
pop
xor
mov
mov
cwtl
fcmove
xchg
pop
cmp
pop
aad
lret
push
bound
test
mov
lcall
imul
push
out
jno
push
add
mov
imul
mov
test
rolb
into
xor
mov
mov
lock
repnz
test
jmp
decb
outsl
jmp
fidivs
xor
pop
je
inc
xor
fidivs
lods
dec
sbbb
in
cltd
mov
jno
push
sub
sbb
daa
in
cmp
lock
push
xor
pop
or
shll
test
pop
adc
xor
push
xchg
aaa
jnp
enter
sub
sti
es
aad
call
push
push
neg
es
int3
mov
shll
mov
loopne
pop
push
add
call
aam
sub
test
inc
out
gs
push
or
xchg
cmp
sbb
jp
in
test
jo
and
cmpsl
sbb
mov
cli
fnstenv
mov
push
stc
cmp
inc
jge
out
cmp
jb
cmp
enter
scas
scas
neg
mov
mov
pop
movsb
test
mov
pop
or
jg
loopne
xchg
test
dec
add
ret
add
inc
orl
sti
mov
sbb
enter
cmpl
xchg
xchg
add
dec
cmc
mov
les
ret
lret
mov
mov
in
out
pop
insb
daa
int
pop
and
jl
push
loop
or
pop
pop
in
lret
test
xor
cwtl
aaa
inc
xchg
adc
mov
dec
dec
cli
je
add
jl
lcall
pop
mov
rclb
xor
dec
jns
loopne
sub
push
xor
lods
addl
add
jae
loopne
test
xor
add
shr
sbb
pop
jle
cltd
data16
and
sti
mov
push
push
fucomp
hlt
mov
adc
xchg
sbb
sub
std
inc
add
jo
fistpl
inc
es
adc
ds
add
cmpsb
sub
in
cmc
outsl
xchg
dec
jo
adc
lahf
dec
call
shll
call
je
sub
ja
repz
test
push
nop
pop
enter
and
fists
and
int
outsb
outsl
jp
push
xchg
mov
jl
data16
lods
pop
adc
jmp
clc
xchg
xor
ret
cmpsb
scas
jge
mov
daa
dec
sbbl
leave
das
stc
cld
clc
push
xor
addr16
mov
cmp
mov
inc
fcmovnbe
andl
xchg
jmp
sub
mov
in
or
sbb
jns
test
decl
mov
gs
cmc
outsb
cwtl
stos
cmp
aad
loop
sbb
push
inc
inc
lret
xchg
sti
xchg
push
lret
and
test
mov
xor
push
jbe
add
sbb
sti
mov
mov
inc
adc
push
jae
leave
fbstp
faddl
mov
mov
inc
mov
lret
insb
ja
sub
shl
mov
add
jbe
pop
mov
mov
xchg
mov
xchg
divb
jne
push
mov
sub
in
xchg
in
mov
data16
and
push
cmp
imul
push
jp
lods
outsb
cs
cmp
lahf
xor
xor
notb
fisubrs
pushf
aam
test
popa
dec
cmp
sub
xor
jg
xchg
ljmp
fdivl
push
bound
in
sti
mov
pop
inc
mov
pop
xor
jo
push
jle
push
sub
sbb
gs
arpl
mov
push
icebp
add
iret
cmp
shrl
in
test
push
inc
movsl
test
adc
scas
call
out
loop
shrb
or
push
imul
mov
sarb
mov
add
in
sti
inc
adc
pop
sidtl
pushf
jmp
sbb
xor
iret
mov
shlb
adc
out
and
and
push
loope
cmp
fbstp
fsts
stos
sbb
pop
cmc
push
mov
xchg
out
jecxz
aad
jl
xlat
test
dec
stc
adc
lds
outsb
fwait
ret
xchg
clc
lock
test
lret
jbe
mov
mov
and
xchg
rcrb
lods
adc
insb
xchg
add
lods
pushf
jbe
lar
push
sub
icebp
or
mov
add
dec
nop
jmp
movsb
popa
mov
std
in
cmc
lds
nopl
repnz
repz
iret
pop
push
out
ja
mov
mov
mov
addr16
imul
mov
jae
out
std
test
shlb
stos
cld
std
jmp
sahf
dec
mov
test
cli
dec
xor
jae
adc
and
fs
dec
and
mov
adc
dec
lods
enter
fsubl
jne
lods
repnz
divl
test
sbb
dec
or
call
push
jle
or
and
xor
ljmp
pusha
push
lock
rcr
shll
mov
ficompl
xchg
out
out
int
jae
xor
leave
fs
or
out
jecxz
popa
jle
pop
sbb
pusha
in
or
xchg
fistps
xchg
movsb
mov
lcall
nop
bound
adc
jecxz
and
repz
jbe
adc
sbb
filds
push
pop
sub
xor
fsubrs
jnp
sbb
and
fnsave
shll
mov
imul
inc
adc
jb
scas
jle
shlb
mov
jecxz
push
repz
arpl
jnp
fsubs
cmp
aas
mov
cmc
inc
pop
subb
cmp
in
sbb
adc
dec
and
je
movsl
push
dec
popf
outsl
jmp
arpl
jno
lods
and
jnp
daa
jmp
pop
jl
pop
push
clc
sub
js
push
inc
in
cmp
lods
xor
push
xor
test
loop
jl
pop
jo
xor
data16
sahf
int
int
aad
push
pusha
jecxz,pn
lcall
cmc
pop
mov
xor
out
cmp
sbb
ljmp
lock
repz
shll
imul
mov
xchg
push
out
cs
mov
cltd
lock
les
push
repz
push
xchg
push
pop
sub
mov
cmp
pop
adc
inc
and
xor
pop
es
and
or
andl
dec
jl
pop
and
sub
mov
push
xchg
and
mov
lods
mov
or
inc
es
fidivs
es
jo
adc
xor
adc
xchg
pop
mov
aad
fdivrp
cltd
pop
xor
mov
sbb
sub
dec
xor
movsb
mov
mov
cmpsb
jae
shrb
fsubrl
add
out
inc
fiaddl
sub
xchg
mov
cld
dec
or
push
cmc
xchg
movl
ficomps
xor
call
inc
push
shl
pop
sub
xor
or
mov
outsb
push
jne
push
xor
xchg
push
lcall
mov
push
std
mov
add
dec
cmpsb
loopne
lret
pop
pop
insl
mov
shr
xor
and
sub
fmull
hlt
lret
mov
xor
mov
push
nop
xlat
xor
jecxz
and
scas
sub
ret
pusha
call
jmp
adc
into
or
pop
push
add
jge
lret
and
int
call
inc
push
jo
aad
mov
cld
std
cld
push
enter
pop
call
movsl
not
push
aas
loope
mov
push
dec
divl
mov
test
repnz
sar
and
push
gs
lahf
addl
xchg
push
jge
mov
aam
mov
movsb
add
xchg
insl
dec
push
mov
sbb
and
sahf
cli
inc
cmp
inc
ljmp
sbb
outsl
pop
les
pushf
xchg
push
cmp
test
mov
out
xchg
push
arpl
pop
test
into
lcall
sbb
mov
mov
mov
out
mov
push
or
scas
cmpsl
call
sbb
jns
aad
test
in
sahf
mov
sbb
sbb
and
shll
sub
fisubl
outsl
inc
add
lcall
mov
and
shlb
mov
adc
inc
into
mov
mov
mov
ljmp
xchg
fs
fnstcw
or
dec
mov
test
mov
mov
push
out
inc
dec
int
jnp
pop
inc
jge
bound
sbb
in
fimull
test
jmp
movsl
cli
daa
fisubl
lock
adc
xchg
out
push
loope
stos
das
les
sub
fcoml
lea
jne
rcll
pop
imul
out
jnp
mov
mov
iret
fsubrl
decb
fxch
cld
inc
mov
fs
xor
sbb
idivl
pusha
pusha
out
sbb
mov
daa
mov
inc
mov
cwtl
xlat
mov
out
clc
lcall
mov
mov
lahf
lods
push
inc
dec
adc
in
xchg
adc
inc
inc
loope
out
jl
in
jg
sbb
hlt
cmp
push
sar
test
push
cwtl
xor
pop
add
sub
push
add
cmp
test
out
sub
and
repnz
fs
stc
hlt
sarb
sub
mov
mov
push
xchg
pop
and
adc
divb
scas
test
jg
push
ficompl
cmp
aaa
inc
aaa
push
pop
xchg
push
jnp
filds
push
insb
imul
cmpsl
aad
dec
push
cmp
or
dec
mov
leave
sub
xor
lea
fs
ds
or
in
popf
xchg
lret
pop
ret
adc
adc
jle
jp
cmp
xchg
push
pop
ss
pop
enter
mov
out
mov
ja
mov
popf
aas
jns
dec
cmp
fistpll
out
shl
fst
test
leave
dec
pushf
jb
and
sar
xor
fs
leave
pop
in
mov
jnp
fwait
int
add
mov
sbb
fld
fiaddl
adc
push
xor
sbb
loopne,pn
shrb
mov
testl
or
std
inc
sahf
incl
dec
push
push
or
mov
lahf
pop
test
daa
pop
sti
pop
out
xchg
sbb
repnz
jne
adc
sar
sbb
xor
outsb
push
jae
cld
ss
lods
add
lods
inc
sub
xor
lret
stos
ret
mov
shlb
inc
mov
loopne
push
pop
adc
adc
mov
lods
mov
ds
push
stos
cmp
inc
jo
pop
out
xor
jne
dec
pusha
inc
ficomps
shrl
xchg
or
cwtl
xor
fcoml
sbbb
cmp
or
adc
mov
lods
xor
mov
mov
stc
pusha
xchg
mov
idiv
loop
xchg
lcall
frstor
cwtl
pop
xlat
stos
push
add
xchg
out
mov
inc
sahf
mov
cld
cmpsb
pop
fsubl
dec
out
fildl
push
cltd
lods
mov
xchg
inc
bound
pushf
xchg
divl
mov
out
cmp
xchg
insl
fadds
pushf
jbe
in
xchg
rol
xchg
std
negl
xchg
aaa
jmp
lret
fdivrs
sub
xor
jmp
pop
add
bound
test
jmp
pop
mov
sbb
mov
inc
inc
adc
mov
mov
popa
cmpsb
pop
scas
ss
andb
and
out
jae
pop
iret
jl
dec
int
lods
out
lock
pslld
out
mov
int
xchg
dec
jb
insb
cmc
mov
xor
lods
lea
lea
enter
xlat
dec
and
mov
es
dec
das
cld
adc
xchg
fldl
mov
popf
outsw
fcom
or
popa
push
js
int3
inc
dec
push
pop
pop
sbbl
shlb
push
out
sbb
cmp
sbb
fsubs
lds
xor
xchg
push
scas
dec
sarb
xchg
and
ja
xchg
sub
enter
jae
fadds
jl
xchg
sub
or
repz
mov
cmpsb
sub
sub
movsb
push
xor
inc
adc
adc
std
lds
cld
sbb
clc
mov
mov
cmp
and
out
outsb
aaa
in
fisttps
pop
dec
adc
mov
jbe
lock
repnz
cli
data16
mov
loope
cmp
and
incb
or
dec
push
pop
jmp
lea
mov
xor
mov
adc
mov
inc
filds
pop
scas
sbb
out
push
add
xor
cmp
insl
icebp
repnz
psadbw
pop
jecxz
orl
sub
out
lret
es
scas
adc
mov
sub
pop
movsb
mov
mov
dec
lock
dec
imull
test
je
cmp
lret
rol
mov
sbb
movsl
xchg
iret
int
shl
add
rcrb
in
jns
push
mov
pop
sub
je
cli
mov
pop
dec
daa
sub
xor
imul
popa
fdivrl
xor
push
lret
jecxz
aam
cmp
out
pop
cld
subl
pop
pop
mov
out
mov
jb
mov
jnp
rcrb
push
jae
daa
jge
fsubs
addb
dec
cli
push
cld
pop
and
pop
scas
jno
nop
lcall
mov
popa
push
les
add
ret
cmpsl
fimull
jno
and
scas
aas
xor
adc
mov
loope
js
dec
dec
fisttpl
pushf
ds
mov
add
stos
mov
cmp
add
out
int3
jle
insl
fcompl
or
gs
dec
notb
jmp
dec
push
dec
out
pop
fsubrs
mov
dec
lahf
jecxz
add
pop
mov
adc
and
sbb
cld
int3
sub
inc
add
fidivs
push
mov
jo
sti
stc
clts
scas
xor
mov
sub
or
add
push
out
stc
add
xchg
push
cmpsl
shlb
mov
jmp
rcrl
dec
fcmovnu
lods
add
mov
adcb
push
icebp
mov
stos
insb
mov
cwtl
cs
adc
movsl
mov
xchg
out
mov
mull
addr16
pop
shrl
loope
ja
push
mov
mov
jbe
sub
inc
mov
mov
cmp
dec
add
das
adc
mov
jno
pop
ljmp
xor
popa
fucomi
xchg
cmp
aas
pop
fwait
mov
andl
jbe
mov
dec
sub
inc
shr
call
or
out
addl
mov
xchg
scas
stos
mov
or
dec
cltd
jo
ljmp
mov
outsb
sbb
jmp
adc
jge
xor
mov
mov
and
pop
sbb
cs
call
ret
sub
ja
pop
das
popa
and
xchg
push
fstpt
jmp
pop
fcomip
pushf
inc
pop
push
dec
out
enter
push
pop
insl
cmp
or
or
pop
inc
arpl
push
lods
lds
pop
hlt
das
pop
shlb
test
sub
jg
mov
add
fmulp
lods
dec
adc
fisttps
cmp
sbb
iret
and
stos
sbb
xor
aad
fcoml
popa
push
add
mov
int3
jecxz
xor
dec
push
ret
mov
adc
xchg
jnp
and
xchg
fisttps
rorl
hlt
push
cs
loopne
inc
push
jl
push
xor
cmc
scas
outsb
mov
add
popa
fistpl
jl
add
sub
cmp
and
or
subb
into
lods
mov
jle
mov
and
loop
fdivs
je
jns
hlt
add
cs
push
jle
push
push
andb
sbb
mov
mov
hlt
and
aam
movsl
mov
rolb
loop
and
loope
dec
in
push
das
pop
mov
ret
xchg
bound
sbb
pop
xchg
dec
lea
cmp
cmpl
xlat
cmp
cmp
add
rcl
and
mov
je
push
ret
popl
das
adc
or
repnz
movsl
adc
pusha
mov
sub
aas
arpl
and
hlt
push
xchg
mov
mov
jp
and
jmp
decb
je
mov
lea
sbb
mov
imul
mull
xchg
bound
push
xorl
es
or
sbb
adc
xchg
mov
pop
cmp
pop
das
cmpsb
mov
jne
imul
push
movsl
sub
and
lock
push
dec
mov
jae
es
cmp
roll
cmp
lea
test
scas
jge
mov
in
inc
inc
aaa
stc
jbe
dec
xor
mov
and
test
mov
lods
jno
ss
out
inc
icebp
pop
xchg
inc
rorl
fs
ja
aas
jle
pop
sub
test
pusha
les
mov
rcll
ret
loop
cmp
cld
mov
or
lods
or
dec
or
mov
ret
mov
adc
pop
xor
ds
test
daa
jo
inc
sub
gs
scas
and
or
jge
popaw
repnz
mov
nop
jge
test
xchg
fsubl
stos
xchg
je
imul
and
pop
jne
xor
dec
out
lret
mov
or
xor
out
test
es
iret
xorl
inc
mov
push
call
xchg
out
es
fisubl
fsub
pop
jns
dec
add
or
adcb
sbb
loopne
inc
jl
sub
xchg
shrb
jle
fcom
jno
xor
push
mov
sub
ja
dec
mov
and
ljmp
xor
jns
cmp
es
sti
and
or
mov
and
arpl
mov
dec
inc
and
dec
cmc
xor
push
lea
or
or
jmp
mov
lea
push
negb
lret
ja
jbe
mov
sub
inc
mov
dec
xchg
incb
sti
in
sbb
xor
rcrl
mov
xlat
jb
xchg
bnd
xor
in
dec
fiadds
dec
fndisi(8087
or
inc
xor
sub
jecxz
push
imulb
cmp
push
leave
pop
mov
pop
sahf
push
xor
loope
mov
ret
int
jle
and
sbb
dec
or
push
aaa
pop
xchg
mov
cmc
bound
sbb
out
push
or
inc
sbb
xchg
pop
popa
shr
mov
jmp
addr16
push
in
frstor
xchg
sub
sub
outsb
jae
loope
rcrb
data16
fistpl
fsub
into
fstps
pop
lcall
out
imul
xchg
xlat
jae
aad
inc
jb
cmp
push
imull
repz
int3
pop
loopne
mov
addr16
roll
aas
das
sub
add
pop
jo
insl
or
insb
inc
fwait
hlt
xchg
pop
mov
push
adc
out
rcll
daa
cmc
push
dec
clc
sbb
ja
adc
mov
std
fst
inc
pop
pop
jecxz
mov
xor
jo
in
xchg
shrb
xchg
lds
fdivl
xchg
xchg
and
mov
dec
stos
insl
xor
jmp
jo
adc
and
add
clc
icebp
push
and
stos
sub
aad
xlat
stos
mov
add
psubd
sub
xor
call
das
loopne
mov
movsl
out
sub
fwait
daa
sub
lret
std
sarl
addb
cld
fstps
fcoml
jne
in
and
outsl
mov
leave
lahf
gs
mov
or
imul
ret
mov
mov
loope
mov
add
stos
dec
aaa
cmp
mov
push
in
subl
mov
out
or
cmp
scas
fstpt
xchg
jbe
mov
or
adc
cltd
pop
mov
mov
sbb
mov
lods
negb
inc
fnsave
les
mulb
lock
add
rcr
insb
dec
cmp
jp
jne
mov
dec
clc
and
cwtl
mov
sbb
test
loope
push
jge
stc
aaa
enter
imul
fcoml
push
xor
outsl
jb
mov
dec
loop
fisubs
popa
mov
jbe
push
imul
jle
push
incl
dec
dec
adc
movsb
mov
push
add
xor
jle
add
je
sbb
leave
add
rcrl
push
dec
push
shlb
test
les
in
insl
xor
push
roll
mov
mov
les
mov
rcrb
shrl
mov
inc
mov
les
fimull
cmpsl
mov
stos
mov
test
xor
daa
cmp
add
lock
lods
xchg
pop
cmc
xchg
push
repz
mov
mov
sbb
xor
dec
out
inc
add
jg
xor
aad
xlat
jmp
inc
jbe
adc
orb
shr
dec
test
mov
jl
popf
cmp
mov
pop
xchg
pop
xor
lock
and
add
pop
lea
sub
sbbb
shlb
hlt
dec
pop
int3
das
adc
or
loop
jg
mov
in
sub
add
mov
mov
inc
adc
jle
stc
imul
xor
shlb
mov
xchg
jmp
in
imul
xchg
dec
mov
outsl
sbb
add
push
sub
leave
cmp
xchg
xor
int3
and
and
sbb
out
xchg
push
xlat
pop
and
stos
ss
popf
sti
lret
jae
or
xchg
arpl
add
into
xlat
adcb
xchg
lods
int
jo
test
outsb
push
add
xor
int3
jnp
fs
dec
out
push
imul
sti
add
movsl
pop
xor
dec
mov
jo
stos
lds
sbb
in
mov
mov
sahf
dec
cli
push
aas
cmp
inc
and
cmp
add
incl
xchg
mov
adc
sub
pop
repz
rclb
bound
je
hlt
rorl
ljmp
or
xor
dec
xchg
decb
jmp
push
xchg
imul
inc
and
push
cmpsl
cld
inc
pop
adc
std
enter
stos
loop
pop
push
jg
push
inc
js
xchg
inc
movsb
imul
scas
inc
lock
pop
push
or
mov
add
mov
jl
pop
xor
popa
or
mov
mov
sahf
idivl
jl
leave
adc
or
aam
xchg
xchg
jbe
xor
dec
mov
fsubrs
pushf
push
or
add
sub
loopne
or
inc
jns
xchg
andl
cmpsb
or
dec
push
jg
vsubpd
jo
xchg
lret
xchg
repz
inc
xor
add
sbb
stc
mov
and
adc
push
leave
inc
jns
add
cmp
leave
je
loop
push
push
mov
popw
ret
xchg
les
ret
sub
fneni(8087
stc
xor
dec
mov
std
adc
cwtl
incb
iret
test
loop
stos
cmp
add
jne
insb
pop
push
mov
jns
or
adc
xchg
xchg
add
jnp
sbb
mov
lock
hlt
cltd
jp
pop
test
ret
shrb
shll
das
mov
mov
addr16
ret
out
sub
movsb
shr
xor
and
sbb
add
inc
lods
jno
in
out
inc
repnz
or
cmpsb
and
addr16
lods
pop
mov
xchg
xor
sub
enter
push
popa
cmp
sub
dec
leave
inc
test
jecxz
cmp
shr
sarl
repnz
rcll
dec
int
mov
addps
addr16
inc
les
mov
pop
mov
and
lock
cmp
imul
iret
sarl
cld
cmp
imul
dec
xchg
add
aas
iret
pop
push
xchg
mov
xlat
add
jmp
add
out
sbb
clc
xorb
imul
pop
lea
cmpsl
or
push
jg
test
pusha
or
sbb
fldt
test
sti
sti
inc
and
add
sarb
xchg
stos
popa
insl
faddl
mov
dec
push
daa
fdivs
cmc
ljmp
and
mov
xor
inc
cmpsl
sub
jmp
mov
in
and
dec
or
mull
adc
lds
push
fbld
lahf
jns
int3
out
clc
es
xchg
stos
int
jne
mov
rcll
and
in
outsl
mov
adc
push
sbb
fisttpl
mov
push
test
shl
jo
and
jnp
es
jg
xor
xor
sub
or
adc
test
outsb
mov
jne
aad
mov
add
es
std
push
ds
pushaw
iret
ret
int
aad
inc
adc
inc
cmpsl
mov
icebp
loop
xor
gs
inc
xchg
inc
loope
xchg
sub
adcb
cmp
out
cmp
sub
ret
or
mov
test
push
jns
mov
or
or
inc
outsb
push
loope
shrl
pop
loopne
ficoml
xlat
js
sahf
pop
bound
outsl
add
jge
idivl
bound
sti
packsswb
in
cmp
pop
cltd
sbb
inc
dec
ljmp
mov
repnz
ljmp
xor
mov
nop
cmp
xchg
stos
call
add
pop
push
outsb
lcall
mov
push
stos
dec
fucom
jmp
push
adc
aaa
jl
dec
rcrb
flds
push
mov
test
cmp
cli
jo
mov
and
push
fwait
sbb
pop
adc
sbb
fdivs
push
popa
xor
mov
lcall
dec
or
inc
dec
nop
mov
ljmp
loop
in
stc
fsts
scas
push
or
ds
inc
push
push
cwtl
push
adc
fnsave
add
in
lods
loope
mov
inc
je
and
ss
push
pop
je
sbb
inc
xchg
cmp
add
xchg
pop
ja
add
xor
and
insb
lret
scas
scas
shlb
mov
in
outsl
mov
sub
and
inc
rcl
adc
orl
mov
jge
lock
aas
inc
dec
in
hlt
clc
push
pushf
adcl
xorb
pop
cmp
enter
adc
mov
push
fisubs
and
push
pop
imul
ret
lcall
test
es
es
in
push
mov
and
scas
cltd
jge
inc
sub
mov
pop
in
or
cmp
jl
push
add
int
mov
pop
and
popf
sbb
les
xchg
mov
mov
xchg
push
dec
ret
push
push
mov
jle
pop
popa
cld
mov
add
enter
fstps
inc
cmpsb
out
cmp
or
pop
mov
xor
stc
cli
dec
fsubrl
mov
icebp
adc
jb
sbb
jno
int3
add
jbe
xchg
dec
shlb
outsb
aaa
adc
xchg
mov
repz
movsl
push
sbb
arpl
orb
and
and
mov
and
xlat
sbb
lret
pop
fdivrs
call
lahf
push
pop
jl
out
in
mov
cwtl
jle
mov
loopne
outsb
and
loope
mov
into
jmp
ret
inc
xor
out
out
dec
push
shrb
xchg
jl
jo
pop
jo
js
pop
mov
jge
and
nop
and
mov
lea
cwtl
and
adc
loop
loopne
pop
jns
lcall
jg
jge
out
int
stos
push
call
dec
aaa
lcall
dec
out
out
pop
xor
mov
ret
mov
push
pusha
xchg
pop
sti
sub
stc
xor
addl
adc
pusha
dec
movsb
add
movsb
scas
add
iret
std
mov
in
push
popf
mov
arpl
ret
scas
pushf
into
aam
faddl
dec
hlt
jle
push
dec
pop
lcall
das
mov
in
push
jle
add
enter
ret
das
fwait
mov
pop
jnp
sub
rcrl
cmp
cwtl
stc
inc
or
inc
sub
dec
sbb
int3
jge
movsb
pushf
pop
repz
insb
push
jne
push
ja
pop
in
faddp
and
jb
xlat
rcrb
mov
mov
les
mov
adc
mov
pop
popf
or
arpl
adc
xchg
and
mov
pop
push
xchg
out
je
aam
add
sub
mov
loopne
fucomip
push
das
add
inc
shll
popf
push
xchg
xor
xchg
ja
mov
out
es
jno
cwtl
mov
xorb
cld
fs
sti
mov
or
mov
out
lahf
push
shll
cli
ss
fisubs
and
sub
ret
popf
and
or
add
out
inc
loopne
bnd
ficoms
jb
inc
adc
lds
test
aas
xchg
sub
cmc
int3
dec
fisubl
mov
adc
mov
cmp
jg
popf
mov
sbb
add
or
pop
sti
inc
mov
and
inc
mov
int3
imul
iret
ss
pushf
pop
sahf
idivb
sbb
fs
repnz
stos
pop
sbb
sahf
loopne
rorl
mov
jb
stos
std
out
inc
int
inc
out
shrl
jg
or
pushf
ja
xchg
cmp
push
sbb
sub
insb
pushf
adc
jle
pusha
dec
xor
iret
popa
mov
inc
mov
pusha
xorl
in
pop
jle
add
imul
imul
insl
movsb
dec
adc
xchg
cmc
cs
xchg
dec
and
and
fmuls
fs
hlt
cmpsb
je
fidivl
hlt
push
addr16
sub
adc
mov
adc
aam
outsb
mov
daa
sub
push
out
xchg
std
add
jb
pop
fucomp
mov
sbb
push
cli
mov
dec
sbb
loop
mov
jbe
adc
sub
push
addr16
xchg
mov
add
adc
sarl
xchg
mov
mov
movsb
enter
repz
hlt
fistpll
hlt
mov
lea
test
scas
mov
mov
repnz
sub
push
les
mov
fbstp
inc
or
xchg
mov
int3
adc
iret
out
ljmp
pop
jb
or
inc
lahf
cmpsl
cmp
loopne
leave
dec
sub
mov
xchg
test
pop
sub
mov
shll
mov
mov
dec
xlat
and
lahf
int3
fmuls
shl
cld
inc
sarl
mov
andb
cld
mov
push
adc
xor
pushf
fs
inc
dec
cwtl
sub
int3
mov
sarl
aam
into
inc
je
cltd
outsb
cltd
or
mov
adc
in
loop
or
adc
add
shll
and
scas
jae
int
xchg
jae
aad
bound
in
test
inc
repz
mov
dec
or
pop
dec
mov
jmp
add
sub
js
fs
add
mov
shrd
test
stos
xor
dec
mov
push
mov
fsubl
imul
loop
jne
cli
lret
xor
xor
mov
out
dec
stos
bswap
lret
inc
sbb
mov
add
data16
mov
or
leave
inc
into
repz
push
xchg
dec
or
movsb
aaa
push
add
stc
cmp
fcoms
adc
cmp
rol
arpl
test
add
dec
ss
out
icebp
push
xchg
daa
ret
int3
cmpl
xchg
xchg
jle
adc
fcompl
mov
js
mov
lcall
cmp
imul
or
and
xor
mov
jne
mov
or
push
xchg
fucomip
cli
lret
push
mov
xlat
mov
add
std
jmp
sbb
adc
or
movl
rcll
xchg
mov
sbb
jmp
sti
in
or
sub
cmpsl
insb
test
xor
data16
lcall
arpl
pop
lcall
shlb
or
lret
xor
jb
push
and
pop
in
outsb
jp
rorb
mov
gs
pop
inc
popf
sub
adcb
lahf
add
mov
test
shll
clc
dec
incl
ficoms
sbb
xchg
jno
pop
int
jp
insb
insb
sbb
ret
in
sub
leave
sbb
fidivs
or
std
out
or
aaa
fstl
aas
cmp
insl
out
push
out
cmpl
push
fsubrs
push
mov
push
scas
sarl
inc
pop
das
mov
cmp
aaa
cmp
es
lods
push
int
std
pushf
xchg
bnd
fildl
and
mov
ljmp
adc
les
jle
int
stos
xchg
sbb
and
test
stc
jae
mov
dec
jo
cltd
adc
sbb
inc
sbb
sbb
rcrb
or
and
mov
mov
pop
js
dec
nop
scas
or
call
mov
js
jp
mov
js
pop
test
sub
sbb
ret
imul
scas
push
fdivrl
int3
add
jl
add
mov
ror
aad
xchg
and
jb
xchg
mov
aam
es
sahf
mov
cmp
hlt
pushl
or
pop
mov
dec
inc
and
inc
dec
nop
leave
pop
pop
mov
add
stos
add
inc
loop
fists
adc
pop
sub
xor
xor
notb
in
stc
xor
xlat
mov
push
out
ljmp
pop
fidivrl
dec
mov
sbb
sbbl
jno
jbe
cltd
rcl
jmp
mov
dec
xchg
popa
add
cmp
and
ret
jns
inc
dec
pop
mov
xor
push
imul
cmp
ljmp
in
mov
jle
fisubrl
rcll
dec
jo
pusha
mov
rclb
mov
cmp
cmp
test
adc
jno
push
fwait
decb
dec
lock
lret
ja
jg
and
and
sub
mov
in
add
leave
lods
mov
mov
mov
and
test
pushf
inc
mov
stc
xor
out
mov
xor
cltd
xor
add
das
sbb
push
xor
shlb
lea
pop
in
cmp
ret
lods
or
test
fld
int
ja
ror
xchg
sub
cmp
nop
setae
adc
cmpsl
or
mov
mov
inc
dec
outsl
ret
xorl
xchg
mov
stc
mov
ds
sub
adc
in
jo
shll
int3
out
jae
xorl
add
mov
clc
test
jne
test
or
push
or
xchg
sub
sahf
inc
push
call
lahf
xor
fstl
fidivrs
sub
popa
arpl
push
xchg
xorb
mov
fwait
sbb
stc
adc
sbb
hlt
outsb
or
mov
sub
cmp
stc
add
push
ret
and
dec
push
cmc
cld
jecxz
addr16
dec
aam
jae
mov
jg
test
popf
imul
mov
stos
mov
sbb
ret
das
shl
shr
push
and
inc
inc
and
and
xchg
lea
add
sbb
shlb
lock
ds
xchg
ret
adc
dec
test
sub
adc
cmp
test
add
loope
push
outsb
lea
xor
ret
adc
dec
in
iret
and
add
repz
jns
lea
jne
push
pop
sahf
movsb
js
jge
aaa
mov
jmp
loopne
adc
mov
sub
cmp
jmp
adc
lret
mov
idivb
push
add
xorb
in
jmp
inc
repz
aas
orl
sbb
push
in
popa
scas
insb
enter
cmp
mov
fdivr
xor
data16
push
enter
sbb
or
inc
mov
das
in
xor
cmpsl
mov
andb
dec
clc
add
dec
aas
nop
rcrl
gs
pop
sbb
inc
mov
sti
add
push
inc
inc
stos
xor
mov
in
sbb
in
fdivs
test
pop
aas
lcall
push
gs
aad
sbb
insb
push
push
jmp
xchg
sahf
mov
xor
push
inc
push
ret
add
cld
xchg
pop
repnz
ja
cmp
pushf
stos
sub
adc
xchg
mov
notl
mov
adc
jb
enter
ja
in
inc
das
fidivl
dec
movsb
mov
xchg
aaa
les
adc
stc
incb
dec
xor
rolb
mov
out
xchg
test
inc
cmp
mov
xchg
pop
and
cmp
pop
or
inc
rcr
lret
cmpsl
inc
sbb
int
push
push
call
lods
pop
cmpsb
ret
jo
mov
sbb
movsb
and
mov
mov
lods
mov
mov
xchg
xchg
cmp
jbe
loopne
add
mov
mov
jne
sub
insl
dec
stos
cld
mov
aas
ficompl
outsl
test
lods
cmp
sub
aas
pop
shlb
in
mov
daa
mov
imul
mov
insb
inc
rorb
jle
lcall
je
mov
push
mov
xchg
mov
mov
adc
into
mov
jns
or
jno
mov
sbb
aam
mov
cmp
popf
jns
dec
into
inc
xchg
dec
and
movsb
jmp
dec
lods
inc
data16
mov
inc
das
cmp
inc
cmpsl
adc
push
push
jne
sbb
outsl
add
mov
mov
and
jnp
shrb
enter
dec
arpl
imulb
es
out
and
pop
or
xchg
fldenv
out
mov
test
out
mov
or
scas
or
shlb
jne
stc
mov
insb
jle
xchg
dec
lock
out
mov
sbb
dec
decl
jecxz
xchg
and
iret
mov
rcr
mov
push
push
arpl
popa
inc
arpl
jg
js
call
add
xchg
adc
xor
jmp
cmp
inc
xchg
sbb
int
loop
ljmp
xor
jge
pop
movsb
mov
repnz
mov
sbb
xor
lret
pop
dec
cltd
out
adc
sti
adc
mov
std
idivb
out
jecxz
mov
pop
divb
ljmp
clc
or
sti
and
jle
mov
fmul
cli
mov
scas
jle
sub
pop
cmpl
cmp
loope
pop
xchg
fcmovbe
inc
out
inc
fwait
incl
fisubrl
lea
pop
pop
and
sub
mov
bound
pusha
sub
mov
jp
jle
mov
push
je
pop
addr16
cmpl
pop
inc
mul
in
mul
out
mov
jmp
jbe
pop
jnp
or
pop
mov
inc
adc
flds
out
fdivrl
xchg
cli
sti
or
pop
sub
adc
mov
mov
mov
ljmp
clc
sub
imul
mov
aas
xor
dec
pop
out
and
pusha
cmp
inc
nop
imul
adc
loopne
jp
dec
mov
push
stc
cmp
repz
and
mov
or
icebp
pop
jbe
fcomps
rep
dec
lahf
insb
leave
push
loop
mov
mov
mov
mov
pusha
jle
fistl
cmovl
sbb
iret
fildll
sub
es
inc
push
jno
icebp
aad
lcall
cltd
sti
or
stc
aaa
out
jp
xchg
pushf
mov
insb
jp
js
pop
in
cld
mov
cld
and
jbe
inc
inc
cld
add
lcall
dec
jne
ja
es
add
stc
cltd
inc
ljmp
addl
mov
mov
sbb
fmull
cmc
mov
sub
dec
mov
pop
dec
aaa
aad
add
add
inc
in
adc
mov
test
jecxz
sub
cmp
or
lods
pop
jecxz
jno
aaa
jo
aaa
divl
stos
push
out
dec
seta
std
adc
mov
enter
and
fisubrl
ret
xor
aam
in
sbb
dec
mov
loop
or
std
or
jg
leave
stc
xchg
jle
setae
cld
into
sub
jno
aad
inc
cmp
imul
add
xlat
mov
out
inc
mov
cmp
lds
iret
ret
or
rdtsc
adc
xor
std
or
xor
add
and
addr16
insl
bound
sub
jbe
jb
leave
mov
idivb
aaa
mov
aam
divb
in
xchg
ret
ret
adc
mov
mov
and
add
popf
ror
and
dec
xchg
loope
pop
std
mov
add
mov
mov
mov
inc
or
mull
ret
sub
dec
inc
cmpsl
mov
mov
arpl
mov
cwtl
out
inc
nop
jo
mov
push
and
jmp
gs
int
ss
movsb
xchg
outsb
icebp
filds
xor
inc
xlat
push
lcall
xchg
pop
in
sbb
sbb
jge
sub
cmp
ds
jmp
out
mov
xchg
outsl
addr16
mov
sbb
clc
jmp
cmp
in
mov
xlat
pop
call
cmp
shl
add
pop
adc
inc
in
lret
shrb
jo
bound
mov
adc
mov
push
adc
test
cmp
ljmp
add
popa
xor
xchg
pop
mov
out
pop
adcl
xorl
imul
mov
push
cmp
mov
test
movsl
jae
inc
and
adc
xchg
lods
mov
aaa
xor
pop
lds
into
test
orl
pop
out
and
jmp
mov
mov
ljmp
aaa
sbb
pop
in
jp
push
cs
repnz
pop
mov
ds
ror
and
mov
sbb
or
sahf
out
pop
sub
push
dec
in
sub
fdivrs
sbb
ja
mov
imul
cmpsl
fs
push
sub
fdivrs
cmp
mov
push
daa
adc
les
cmpsb
test
and
shlb
lcall
sti
sbb
pop
cmp
xchg
out
dec
mov
jmp
test
addl
sbb
mov
jl
push
repnz
out
adc
mov
cmpsb
mov
pop
add
ret
leave
mov
xchg
xchg
or
outsl
mov
pop
push
jecxz
push
icebp
outsb
fsubs
mov
ljmp
jmp
mov
popf
xchg
mov
sbb
inc
xor
adc
push
mov
filds
inc
sbb
aad
in
in
pop
mov
pop
daa
mov
out
mov
xchg
fiadds
mov
or
lcall
lret
popa
mov
subb
insl
xchg
test
push
out
or
leave
adc
test
stos
pop
dec
sbb
daa
cs
or
nop
test
mov
push
js
mov
test
pop
scas
popa
push
cmp
xchg
mov
mov
mov
sub
ss
and
inc
inc
sbb
clc
and
sub
jo
ret
rsqrtps
or
or
loopne
and
imul
jns
mov
fcmovbe
jae
pop
andl
in
fistps
cmp
stos
lods
push
mov
add
pop
test
lret
mov
fs
popf
mov
cli
scas
loopne
movsl
rorl
jae
or
stc
leave
xor
adc
xlat
cmp
jns
lds
popa
fildl
into
ss
sub
shrb
test
dec
xor
in
rclb
sub
fsubl
cwtl
xchg
cmp
mov
movsb
dec
add
sub
mov
stos
push
outsl
push
mov
xchg
icebp
xor
in
ds
js
or
stos
shrb
mov
scas
int3
stos
es
push
rorl
add
lret
dec
pop
fcmovu
sub
or
pushf
cmp
or
and
push
cld
cmpsb
xor
xchg
pop
outsb
aaa
adc
push
ret
pop
fnsave
pusha
cmp
xchg
inc
rcrb
cli
jbe
pop
pop
jmp
lock
jo
ret
ficomps
mov
out
cwtl
imul
sbb
and
cwtl
fucomp
xor
adc
mov
lods
fs
fdivl
inc
pop
outsl
jns
push
sbb
aam
mulb
es
lds
lret
les
and
arpl
mov
xchg
rcrl
adc
ret
shr
rcl
xor
cmpsl
and
mov
push
jb
jnp
je
mov
addr16
cwtl
fimull
inc
pop
mov
xlat
lock
mov
push
in
jae
mov
mov
lea
lret
inc
or
pop
mov
cmpsl
mov
sbb
je
test
fs
xchg
filds
mov
and
loope
call
cmp
mov
lret
mov
lahf
cli
sbbl
cmp
stos
and
xchg
stos
in
add
dec
pop
sub
lret
mov
jl
mov
mov
push
sub
mov
mov
sahf
aaa
cmp
imul
sub
pop
sbb
and
pop
add
or
or
jecxz
out
sbb
fdivrp
stc
rcrb
clc
inc
sti
dec
repz
adcl
mov
inc
addb
mov
mov
push
sbb
xor
dec
dec
pop
cli
sub
cs
sbb
repnz
pop
or
or
shll
dec
sbb
sub
pop
pandn
rorl
stos
cmp
add
loop
movl
scas
aad
xchg
xor
sub
sub
mov
testl
rolb
addr16
ror
call
sbb
dec
push
out
out
jno
jmp
lea
push
xchg
jle
daa
leave
dec
add
and
adc
push
stos
jle
clc
xor
filds
movsl
pop
pop
jae
loop
outsb
inc
pop
adc
arpl
sti
mov
add
inc
add
jne
push
repz
sub
fucomip
test
fistps
lods
pop
inc
iret
jg,pt
out
mov
mov
push
sbb
rclb
cmpsl
repnz
rclb
popa
sarl
push
xchg
sbb
popf
cmp
stos
out
push
movsb
mov
dec
and
push
sahf
xchg
addr16
inc
pop
mov
push
sub
adc
push
test
into
inc
push
lahf
pop
pop
push
insl
adc
inc
fwait
inc
xchg
inc
jge
or
or
pop
mov
loope
sub
shr
jns
fdiv
jp
scas
stc
pop
adc
mov
xlat
mov
gs
fcmovnbe
lahf
sub
lds
scas
cmpsl
stos
call
xor
data16
pusha
faddl
mov
int
xchg
sub
rcrl
hlt
sbb
adc
jl
jbe
lret
fwait
xor
xor
or
fs
imul
subb
imul
push
or
mov
xchg
pusha
cmc
movsb
cli
jb
aam
fdivrl
adcl
xor
xor
jecxz
adc
sub
les
dec
mov
jecxz
xchg
popf
dec
fidivrl
sub
and
mov
xor
mov
cmp
xchg
mov
adcl
aad
jmp
ljmp
int
stos
xor
lock
and
daa
cmp
sub
mov
mov
test
xor
jae
fldt
pop
std
call
sar
adc
enter
xor
popf
enter
push
iret
hlt
pop
lahf
data16
push
lahf
fsubp
xor
inc
sbb
test
aas
fbstp
daa
call
test
mov
filds
aas
adc
dec
pop
mov
push
add
mull
sbb
xor
ficomps
cmp
sbb
push
ret
in
dec
ds
mov
int3
sbb
test
leave
xor
notb
adc
pushf
xabort
out
cmp
push
cmp
pop
out
inc
or
test
mov
and
sti
test
or
stc
push
mov
aad
xchg
mov
fdivr
jge
xchg
or
push
push
lahf
fcmovu
xor
rcrl
stc
xor
sti
call
in
pop
and
cmc
inc
fmuls
jno
cmpsb
jmp
mov
push
jb
push
leave
pop
push
dec
ffreep
std
sbb
std
out
sub
mov
xor
inc
roll
jo
pop
add
adc
sbb
test
mov
mov
add
mov
sbb
cmp
repz
leave
test
push
fwait
notl
fildl
iret
ficoms
push
xchg
cli
or
fsubl
ljmp
inc
out
adc
fistl
ja
fldt
mov
push
cs
mov
sahf
sub
cmc
mov
pop
insl
arpl
scas
iret
test
subl
js
into
pop
std
jl
int3
xlat
add
cmp
mov
int3
xchg
cmp
lret
sbb
shrl
add
ss
rcrl
aam
mov
hlt
repz
mov
jle
ss
and
pop
push
mov
mov
cli
xor
push
and
loop
negb
xor
mov
into
inc
sbb
and
test
setne
mov
stc
mov
loope
fisubrl
pop
pop
sti
fistpll
fidivl
emms
stos
jo
stos
divb
nop
test
loopne
lods
into
out
adc
iret
push
pop
stos
mov
cwtl
push
adc
sub
and
mov
mov
insl
pop
lods
lret
sbb
or
fdivrl
arpl
popa
popf
sbb
sbb
xchg
jmp
pop
je
mov
rclb
movsb
adc
jmp
add
arpl
ljmp
jmp
dec
decb
jbe
adc
out
cvtdq2ps
jno
sti
inc
daa
xor
mov
xchg
cmp
aam
decl
adc
pop
jb
ret
mov
loopne
enter
lea
movsl
stos
insb
mov
sbb
sub
mov
lret
mov
pop
lret
pop
test
ss
scas
aas
add
add
xchg
dec
jb
mov
nop
mov
psrlw
push
xor
mov
arpl
push
pop
repnz
pop
sub
sti
ja
in
cmp
xor
clc
mov
inc
dec
xor
inc
std
ljmp
xor
inc
loopne
fldl
leave
and
mov
shr
sbb
pop
enter
push
cmpsl
ds
mov
in
imul
sub
subl
mov
pushf
outsb
and
add
iret
jb
aam
test
and
scas
stos
hlt
cwtl
mov
dec
xor
mov
gs
mov
cmc
cmp
in
mov
push
xchg
dec
adc
mov
mov
mov
mov
push
push
mov
push
lds
loop
adc
xor
ret
jae
iret
jns
inc
ss
mov
push
xchg
incb
sbbl
popa
or
add
jo
mov
nop
sarl
xor
cmpsl
loope
push
jbe
js
dec
mov
jb
rcll
add
ja
repnz
insb
jae
lahf
leave
mov
dec
lret
ret
push
adc
int3
cmp
cs
loop
cmp
cwtl
push
leave
fwait
clc
dec
std
push
mov
mov
sub
out
fs
sbb
js
adc
xchg
test
mov
pop
mov
push
cmc
icebp
or
outsb
mov
aad
adc
xor
mov
inc
jmp
mov
push
fcomps
movsl
or
sub
push
mov
loopne
imul
xchg
inc
iret
pop
sbb
cwtl
scas
add
and
jb
into
pusha
lea
and
dec
mov
and
mov
or
ja
push
or
jmp
jae
mov
in
sub
out
cmp
push
dec
cmpsl
fistps
xchg
les
xor
outsl
adc
and
push
aaa
std
shll
xchg
mov
mov
stos
jecxz,pn
rcr
insl
je
xor
fucom
gs
stc
fsubrp
push
mov
cs
repnz
out
aas
in
and
lock
pop
inc
subl
scas
pusha
push
mov
inc
jno
lcall
cmpsb
out
add
dec
push
loopne
inc
mov
and
stos
push
jnp
inc
bound
in
dec
pop
into
mov
pusha
sbbb
addr16
mov
shl
int3
or
jbe
push
cli
roll
rclb
pop
jecxz
add
in
dec
xchg
push
lds
and
enter
imul
inc
mov
push
dec
inc
test
sub
and
mov
mov
push
scas
or
and
pop
mov
test
push
mov
mov
and
push
out
scas
pop
mov
adc
enter
pop
aas
and
adc
out
inc
push
or
adc
insl
or
loope
into
and
std
cmp
lcall
out
jmp
push
mov
bnd
outsb
and
ja
out
ljmp
subb
movsl
mov
xchg
mov
dec
hlt
mov
arpl
fwait
movsb
push
cmpsb
cmp
rcll
sub
lcall
push
push
xor
jbe
out
pop
clc
lret
xchg
outsl
imul
popa
bound
or
add
ljmp
adcl
mov
add
lods
rep
shl
cmp
rcl
and
lret
or
popw
xchg
sub
xor
stc
ret
repnz
mov
or
adc
addr16
out
adc
inc
xchg
inc
lock
lea
mov
sub
jb
inc
sub
mov
les
jp
icebp
xlat
stos
aad
aaa
mov
jmp
and
jge
test
push
mov
jg
dec
aas
imul
les
repz
ret
xchg
jae
leave
je
jl
idiv
mov
xor
int3
int
sub
lcall
pop
pusha
inc
push
sarl
pop
mov
out
out
xchg
lds
push
pop
mov
rcrl
inc
inc
or
out
cmc
mov
dec
aas
sub
add
mov
inc
and
pop
sahf
shlb
inc
cmp
jecxz
or
or
push
enter
mov
pop
inc
pop
and
or
mov
dec
cs
or
adc
adc
jp
jl
pop
jno
loopne
insl
dec
xchg
out
mov
mov
push
jmp
cmp
mov
inc
push
dec
mov
sbb
cmp
enter
lahf
push
js
out
cmc
mov
xchg
and
loopne
scas
repz
and
add
dec
sub
pop
ret
xchg
into
inc
scas
nop/reserved
adcl
stc
lret
xchg
ja
sahf
adc
add
sbb
lret
lcall
jle
cld
jecxz
adc
test
jne
mov
mov
or
cmpsl
scas
testb
dec
fstl
or
lea
cwtl
lahf
xchg
movsl
test
or
or
push
xchg
test
xor
hlt
push
mov
push
jg
push
jb
in
push
jbe
or
adc
cmpb
mov
aas
iret
jmp
pop
inc
nop
push
dec
in
xor
leave
xchg
stos
aas
cmc
jg
in
adc
mov
xchg
fwait
xor
clc
inc
push
cmpsb
mov
sti
inc
lods
ja
cltd
push
adc
out
loope
push
xor
je
xchg
in
mov
repz
push
mov
jecxz
dec
adc
test
fisttpl
sbb
cmp
out
data16
in
dec
ret
dec
or
jmp
sbb
icebp
addr16
mov
xchg
jle
pop
adc
sarb
in
enter
dec
jecxz
popf
lret
loop
es
mul
push
adc
test
in
out
scas
mov
xor
and
inc
cwtl
repz
out
hlt
ljmp
test
adc
ljmp
pop
push
ss
adc
xlat
daa
sbb
push
stos
add
cmp
je
addr16
sub
arpl
ret
and
test
cmp
in
dec
cmpsb
sti
inc
sbb
cmp
hlt
dec
ret
push
xchg
xor
loopne
sub
ja
or
inc
into
inc
lods
aas
dec
adc
cmp
rcl
pop
push
pop
sbb
push
fnstenv
bound
xor
and
pop
xchg
std
mov
and
or
push
add
inc
xor
or
pop
int
cmpsb
cmp
xchg
push
mulb
mov
pusha
xchg
sbb
scas
hlt
sub
popf
stc
dec
sbb
lret
out
lret
sahf
inc
mov
aad
xchg
movsl
cmp
insb
cmpsb
sbb
xchg
cmc
jbe
dec
sar
cmp
cmp
mov
and
push
push
mov
sbb
fmuls
leave
inc
mov
fcoms
addb
add
cmp
pushf
mov
fistpl
push
push
mov
outsb
mov
xchg
aaa
mov
insb
jb
xchg
out
stos
popa
inc
pop
xchg
popf
popa
xor
fisttpll
dec
popa
add
mov
xor
sti
inc
js
push
orb
inc
sbbl
jo
or
lds
leave
mov
or
cmpsb
rcr
dec
sub
mov
xchg
xchg
add
inc
mov
les
mov
enter
loopne
sbb
jno
dec
xor
dec
or
xchg
std
xchg
roll
or
mov
xchg
ret
int3
mov
arpl
push
call
push
test
in
sbb
xchg
cmp
sbb
push
add
cmp
or
es
pop
jge
std
arpl
test
nop
and
andl
loopne
rcll
test
outsl
shr
ljmp
pop
dec
ret
mov
sbb
pop
mov
arpl
out
adc
xor
dec
pop
cld
in
mov
pop
mov
jne
pop
fbstp
out
test
out
aad
dec
aaa
addr16
stos
call
push
bound
jl
nop
pop
ss
rcr
loop
cmp
movl
test
enter
cs
jecxz
jne
les
xor
add
out
lds
stos
fst
dec
or
std
add
or
jns
stos
add
or
loop
popa
mov
adc
cld
mov
cwtl
push
adc
jo
gs
jmp
inc
sbb
sti
add
sub
push
mov
int3
jmp
mov
mov
mov
icebp
fistpl
mov
lods
stos
aaa
outsb
adc
out
jmp
mov
inc
pop
js
not
rclb
test
mov
and
in
and
jecxz
cmp
mov
mov
cmp
xor
add
cmp
jmp
cmp
jp
loop
ficompl
cmc
test
xor
xchg
roll
jbe
jle
xchg
cmp
lcall
dec
loopne
mov
cltd
ss
bound
loope
sub
push
fwait
xchg
andl
loope
stos
adc
or
nop
mov
mov
mov
sbb
call
mov
mov
push
ficomps
out
cmp
popf
aad
testb
add
outsl
dec
mov
mov
cwtl
repz
scas
rcll
sub
daa
adc
mov
int
in
out
cvttps2pi
int3
setb
adcl
push
mov
repz
cli
xor
sub
mov
or
test
and
scas
aam
inc
dec
lods
aaa
cmp
sbb
scas
inc
loop
popa
cmc
xchg
ret
push
mov
stos
adcb
xor
push
rcl
roll
inc
push
xchg
lods
lahf
pop
fdivs
hlt
jnp
cmpsb
shrb
imul
psrlw
clc
xorl
out
cmp
push
lcall
dec
test
pop
fnstsw
je
out
mov
ljmp
jo
clc
ljmp
out
sub
or
xor
hlt
mov
daa
and
and
push
addl
jnp
push
pusha
lods
mov
addb
mov
cmp
frstor
mov
xor
pop
mov
jnp,pn
movsl
mov
jbe
aam
mov
insl
lea
inc
pusha
sub
mov
pop
mov
pop
mov
mov
repnz
cmpsb
push
inc
add
int3
shr
in
and
xchg
fldenv
fimull
push
push
in
add
sub
leave
sub
mov
imul
cld
lcall
pop
push
sbb
in
sarl
cs
shrb
xchg
push
orl
imul
mov
dec
cmpsl
jge
add
xor
cmp
lods
fidivs
adc
into
push
jbe
sbb
subb
xchg
xor
dec
sbb
xor
fcomp
gs
mov
mov
fildl
dec
xor
push
add
and
push
mov
and
xchg
test
mov
sbb
call
dec
jae
cmp
mov
cli
xor
insb
or
cmp
push
jl
insl
add
fiadds
outsb
mov
sbb
add
push
lea
aad
in
es
mov
stos
add
add
popl
enter
test
dec
shll
or
xlat
lea
std
add
aad
push
int
or
cwtl
ljmp
add
xchg
in
es
and
test
pop
sti
in
in
mov
push
es
adc
push
arpl
ja
out
loop
mov
inc
cli
dec
and
mov
ret
ss
lock
sub
enter
ror
or
call
sbb
fwait
dec
pop
in
inc
jmp
pop
sub
daa
stc
mov
sub
movsl
mov
fldenv
push
jne
dec
cltd
test
and
inc
sbb
or
loope
cmp
mov
add
cmpsb
mov
push
xchg
push
push
dec
ljmp
jg
out
shl
mov
lds
into
inc
les
pop
popf
sbb
sbb
push
xchg
mov
xlat
mov
leave
xorb
dec
fwait
mov
fildl
jne
cmp
sub
nop
add
imul
cmp
fcmove
xchg
sub
rcrb
mov
push
out
fisubl
pop
je
scas
fsubr
stos
cmc
dec
ficoml
out
adc
sbb
lcall
ret
sahf
jmp
lahf
push
cmp
mov
push
test
jg
es
nop
push
mov
jno
pusha
sti
bound
filds
outsb
cmpsb
icebp
mov
gs
sbb
scas
cmp
add
out
mov
cmp
out
add
mov
shrb
cli
aaa
add
shll
adc
add
sub
jnp
cmpsb
jl
or
push
add
and
pop
in
mov
jne
std
inc
loopne
push
pop
cmp
dec
rclb
mov
jns
les
pop
push
or
pop
xchg
fs
ret
mov
push
and
std
or
and
xchg
inc
mov
pop
dec
jge
sarb
adc
ds
dec
and
out
aaa
in
pop
mov
lods
addb
fwait
data16
push
add
andb
inc
jl
jae
mov
dec
out
and
js
lcall
xchg
pop
sub
mov
sbb
mov
sbb
outsl
test
adc
jbe
aam
push
jge
ja
sub
cmp
popf
dec
popa
daa
xchg
enter
pop
sbb
pop
jo
cmp
sub
adcb
pop
mov
sub
mov
pop
add
cli
cs
pop
movsb
add
pop
pop
dec
sub
aas
sub
or
clc
xor
cmp
insb
std
scas
enter
popf
scas
cmp
and
jns
xchg
adc
sbb
or
clc
test
xchg
add
pop
sbb
fnsave
in
sti
cmp
icebp
dec
xchg
insl
xor
outsl
outsb
or
ds
sbb
clc
xchg
cmp
ret
and
cltd
call
jecxz
data16
pop
add
add
adc
jo
sar
sub
test
jge
pop
push
aam
xchg
jae
mov
lock
adc
cwtl
push
fists
aas
mov
repz
jae
push
inc
inc
sbb
sarl
pop
push
insb
repz
adc
test
xchg
mov
adc
vpcmpeqb
cld
or
jle
insb
pop
outsb
cmc
movsl
sbbb
test
and
xchg
out
outsb
adc
jmp
int3
and
nop
mov
mov
fldt
pop
lret
lds
fwait
les
mov
lea
mov
mov
cwtl
jno
cld
sbb
outsl
bound
repz
ret
cmp
push
lahf
xor
xchg
rclb
fmul
js
sub
ja
adc
dec
xchg
cli
pop
scas
rorb
test
jp
test
add
or
xchg
hlt
cld
push
scas
jl
clc
or
fists
cmp
orb
ret
out
lock
or
int
rorb
sub
or
mov
std
scas
xor
pop
mov
fdivs
mov
popf
push
pushf
pop
jp
fcos
loopne
scas
loope
push
out
pop
popa
xor
push
mov
jae
adc
mov
ja
int3
inc
jae
add
pop
pusha
jl
xchg
imul
cmpsb
daa
js
stos
iret
inc
xchg
dec
aaa
lret
mov
push
cmp
hlt
sahf
rcll
rcrl
fcmovu
xchg
sbb
and
adc
jmp
in
popa
xchg
lret
pop
push
sub
xor
cmp
pop
cmp
sbb
add
int3
in
sti
mov
xchg
mov
push
test
repz
out
inc
pop
addb
xor
mov
adc
insb
mov
sub
fmuls
push
pop
push
subb
je
stos
xor
outsl
aam
aas
iret
dec
sub
cmp
add
mov
cs
sbb
adc
stos
xor
aad
pop
clc
aaa
fs
cmp
stos
sbb
xor
inc
repz
inc
scas
push
xor
pop
je
rcr
mov
mov
pop
mov
ja
sahf
incb
pop
pop
jl
push
stos
and
in
pop
adc
fstps
jo
xor
inc
je
xchg
test
sbbb
jg
xor
mov
bound
push
or
fwait
inc
es
jmp
ds
outsb
pop
addr16
push
pop
in
dec
mov
add
adc
incl
lea
in
shll
imul
jle
fimull
loop
cmpsb
popf
sub
out
mov
jno
pop
dec
nop
cs
sub
mov
mov
inc
ret
test
test
rol
jne
xor
dec
dec
mov
xlat
or
mov
pop
je
in
out
inc
cmpl
test
fsub
ror
mov
call
cs
es
and
rcrl
out
aam
dec
cwtl
lahf
cs
pushf
jle
rorb
outsl
xor
in
mov
sbb
fisubl
into
cmp
les
mov
mov
mov
jae
dec
popf
fwait
xchg
sbb
inc
and
rorl
sti
fistpl
cltd
and
push
in
lahf
cmp
jne
das
jbe
ljmp
imul
jp
mov
sbb
inc
in
mov
mov
into
pop
add
outsl
addr16
mov
cmpsl
out
add
mov
cld
cmc
hlt
mov
das
push
movsb
outsl
sub
lea
pop
mov
sub
dec
imul
arpl
in
dec
pop
and
dec
xchg
mov
inc
sbb
mov
sbb
sbb
arpl
test
sub
lahf
stos
fdivs
ja
jmp
inc
bound
sub
pop
xorl
inc
ds
in
cwtl
int3
in
jmp
mov
push
addr16
mov
insb
popa
sbb
and
out
lock
cmp
test
fistl
pop
outsb
in
cmp
mov
sbb
fdivrl
cmpsl
sbb
and
mov
scas
pushf
mov
ljmp
dec
jb
es
xchg
inc
push
dec
fdivrl
adc
sbb
je
cmp
cld
fadds
sbb
mov
push
sar
and
pop
sbb
xchg
cs
xor
add
jo
add
inc
and
in
into
sbb
shl
xor
jb
fadds
stc
cmp
jb
popa
pop
cmp
xor
mov
loop
pusha
mov
lea
jg
pop
cmp
cmpb
mov
and
shll
mov
in
hlt
scas
pop
cmp
sub
jecxz
jo,pt
adc
mov
and
push
in
cmp
mov
sar
sub
dec
push
adc
push
sub
jb
stos
jbe
nop
sbb
jecxz
jae
dec
jnp
stc
mov
int
fsts
int3
es
xchg
mov
cmp
jmp
dec
adc
cmc
scas
cmp
dec
loopne
mov
bound
gs
push
inc
pop
out
xchg
mov
sub
cmpsl
les
push
loope
repz
cld
or
insb
fbstp
add
test
and
push
test
dec
fwait
pop
mov
xchg
test
fs
jnp
imull
push
sbb
loope
std
jnp
enter
cmp
mov
lock
or
stos
imul
call
inc
cmp
sub
jne
inc
and
dec
dec
rclb
mov
jne
push
xchg
fidivrs
mov
movsl
push
into
fs
xor
push
ret
lret
loopne
mov
pop
sarb
pop
xor
push
je
mov
dec
filds
adc
pop
push
pop
dec
sbb
outsb
or
fwait
push
cmpsb
xor
add
cmc
mov
mov
ljmp
push
pusha
test
mov
jb
or
jne
jne
xor
cmp
cld
mov
mov
cli
adc
bound
and
cmpsb
cltd
sub
ret
je
or
push
lret
and
sti
in
mov
insb
mov
fcmovnbe
cmp
into
jg
mov
sbb
xchg
loope
aaa
add
xchg
adc
cmp
popf
idivl
rorl
and
popa
loope
stc
lret
ja
or
data16
pop
rclb
mov
inc
gs
mov
lods
movsb
fcoms
cmp
push
aas
incl
imul
leave
stos
sub
fstl
mov
xlat
push
jo
int3
jp
fimuls
pop
mov
jb
enter
dec
xor
je
in
fstpl
in
cmpsb
mov
jecxz
xor
jge
dec
lods
scas
ja
pop
push
or
xlat
push
and
xor
ret
mov
cwtl
cs
cmp
hlt
xor
xorb
ret
jnp
shrb
inc
sbb
daa
push
or
adc
test
popf
mov
jb
into
hlt
xchg
fimuls
cli
mov
xor
rcl
inc
pushl
mov
jmp
or
pusha
test
sbb
cld
push
jo
stc
aad
adc
pop
adc
mov
int
leave
daa
dec
test
add
shll
xor
push
mov
andb
or
xchg
addr16
stos
testb
pop
mov
pop
push
fldt
add
popf
jbe
ret
ja
imul
in
add
jl
inc
mov
xor
jmp
mov
push
scas
pop
test
cmpb
outsb
sub
jno
adc
adc
xor
shl
inc
jmp
test
sub
divl
test
das
mov
push
sahf
test
stos
adc
test
in
sahf
ss
repz
imulb
xchg
dec
jecxz
mov
sarl
incb
or
andb
aad
mov
cmp
and
test
xchg
cmp
dec
aaa
outsl
mov
enter
nop
cmp
mov
loope
arpl
push
mov
mov
push
and
mov
daa
cmp
jmp
xchg
and
call
pop
jp
in
mov
pop
mov
idivl
daa
enter
repnz
mov
xchg
mov
mov
dec
dec
repnz
jg
sbb
sti
push
add
cld
push
ficoml
out
push
push
repnz
test
pop
mov
sbb
in
es
test
dec
lret
popa
pop
sub
scas
addr16
subl
cld
sbb
push
nop
inc
fwait
idivl
vaddpd
dec
jp
pop
cli
adc
add
push
nop
dec
adc
imul
sub
popf
lea
sub
inc
mov
xor
push
stos
bound
add
jg
or
test
fiaddl
mov
inc
pusha
cmpsb
cli
sub
es
fldt
lds
sub
pushf
adc
orb
hlt
push
dec
ja
fistpl
das
fadds
out
inc
filds
mov
std
sbb
or
mov
sub
dec
mov
les
push
in
push
xlat
lods
push
sbb
insl
xor
jbe
sbb
fiadds
popf
push
lods
pop
daa
popf
mov
sub
xchg
subl
push
jno
filds
bound
lret
or
loop
cmp
mov
aam
pop
iret
inc
daa
repnz
cwtl
or
insl
sahf
xor
jecxz
and
jecxz
sbb
call
test
pop
cmp
mov
push
into
sbb
and
push
xchg
fwait
cli
jecxz
push
clc
jle
xor
lock
test
add
loop
sub
jbe
movsb
stos
jno
sar
ror
pop
popa
inc
cmpsb
mov
mov
sub
andb
mov
pop
out
gs
add
or
mov
fsubl
lret
cld
mov
ror
push
mov
mov
imul
dec
adc
or
cmp
imul
mov
test
es
gs
sti
mov
sub
fwait
lds
pop
sahf
pop
mov
outsl
mov
fsubl
mov
dec
leave
push
jb
fdivs
flds
sub
dec
cs
vpshuflw
orl
mov
mov
mov
mov
sarb
leave
fs
out
inc
mov
daa
mov
pop
loope
in
xchg
mov
movsl
sbb
sub
mov
fnstcw
add
xor
fnsave
fldenv
sbbb
outsb
mov
xchg
cld
inc
adc
xor
xor
arpl
mov
data16
inc
fisttps
sub
push
xchg
xor
js
sarb
lret
inc
cmp
pop
sbb
mov
fwait
pop
pop
adcb
push
in
add
test
lds
add
jg
sub
dec
fmul
push
cltd
jne
xchg
jne
cmpsb
lcall
rol
mov
fwait
in
sbb
fldt
jl
pusha
out
ficompl
sti
xor
adc
pusha
loopne
adc
fstl
and
pop
pop
ds
es
test
mov
jb
add
test
call
xor
iret
scas
mov
iret
int
mov
and
jno
sbb
iret
pushf
xor
mov
xorl
pop
mov
mov
push
push
lcall
push
rorb
fmulp
data16
lock
sbb
movsb
jns
divb
sarl
pop
fldcw
xchg
push
bnd
mov
into
sub
xlat
inc
fwait
and
dec
clc
sub
mov
imul
pop
fldcw
cltd
mov
std
pop
ja
call
gs
jae
stc
out
outsl
sub
rcr
fldenv
fcoml
mov
dec
rcrl
fsubrl
mov
jno
call
mov
sub
push
sbb
test
jge
repz
in
ret
mov
enter
jg
ja
call
bound
push
lods
or
lret
pop
cmpsl
inc
mov
int3
pusha
mov
das
xchg
int3
pusha
push
sti
and
fistl
fsub
mov
mulb
fs
lock
pushf
add
xchg
andb
inc
xchg
bound
or
stos
add
jecxz
pop
clc
mov
adc
ds
mov
aad
es
cmp
aad
scas
jle
adc
testl
movb
sub
cmc
orl
fstpl
or
sbb
fcoml
or
cmp
pop
cmp
fists
pop
roll
cmp
add
mov
loop
push
call
cmp
int
out
testl
inc
or
pop
dec
out
lahf
scas
nop
cmp
fwait
mov
int3
inc
loope
lret
mov
je
xor
and
sbb
mov
js
jecxz
cmp
push
fisttpl
in
sti
pop
inc
fwait
mov
push
pop
popa
test
mov
jns
scas
jne
insl
xor
push
sub
fdiv
dec
mov
mov
mov
mov
loop
xchg
std
sbb
mov
cmc
jg
mov
lods
fbld
insl
pop
cmpsb
int
add
not
inc
sub
outsl
pusha
push
and
hlt
and
insb
xchg
test
push
movsl
pop
pop
mov
add
pop
pop
insb
cmpsl
cmp
es
xchg
and
xchg
pop
xor
imul
addr16
xchg
imul
pop
cltd
adc
xchg
mov
sub
imul
in
stos
int3
xor
addr16
or
push
sub
scas
jge
mov
out
lds
movsl
mov
in
push
adc
fistps
pop
sbb
dec
adc
dec
jge
jge
jno
mov
ds
loopne
mov
stos
and
adcl
cmp
psadbw
pop
mov
std
and
adc
fsubr
cli
mov
jbe
loop
scas
int
rcrb
inc
jl
mov
pop
repz
adc
sub
mov
adc
in
add
enter
data16
fsubs
dec
outsl
jne
xchg
push
ret
imul
mov
inc
pop
cltd
fidivrl
xchg
arpl
stc
mov
jge
call
out
push
push
int
mov
dec
jle
repz
aas
mov
pop
inc
in
inc
mov
xchg
cmp
and
fs
int
mov
mov
jne
sbb
imul
jp
adc
sbb
cmp
cmc
push
mov
les
ret
jnp
loope
xchg
jmp
push
stc
inc
fcompl
mov
imul
and
xor
xchg
xchg
inc
in
cmp
mov
cmp
pop
sub
dec
outsb
repz
cmpsl
repnz
xchg
dec
cmc
add
mov
push
mov
ljmp
mov
shrl
mov
inc
and
push
adc
or
lea
dec
mov
movsb
insl
aas
outsb
cmp
xor
mov
xchg
mov
mov
mov
pop
ficomps
xor
add
push
adc
sub
mov
adc
mov
push
icebp
cmc
push
je
ja
lret
shlb
cmp
sbb
adc
inc
aam
mov
loopne
add
je
adc
pusha
pop
pop
ss
jbe
adc
call
mov
pop
sub
cmp
mov
push
mov
iret
in
les
lods
out
sbb
jl
xor
add
pusha
fbstp
mov
iret
adc
dec
jnp
lods
add
jge
mov
mov
lcall
xor
inc
xchg
xor
call
push
rorl
cli
sbb
jg
sbb
push
stc
adc
pusha
inc
jecxz
mov
jne
std
sbb
sbb
and
mov
loope
dec
je
pop
push
ljmp
xchg
and
lea
cmp
setl
sbb
loop
addr16
lock
into
scas
add
outsl
jb
fisubrl
dec
cmp
mov
lcall
cmp
mov
lea
pop
pop
iret
ret
dec
iret
pop
sbb
sahf
out
cwtl
loop
push
lods
jge
scas
jl
addl
jecxz
rol
decl
sbb
aam
insl
ret
inc
mov
and
and
mov
cmp
sub
fwait
into
clc
push
enter
push
adc
jp
cs
mov
adcl
hlt
dec
mov
aad
dec
fcomip
lcall
mov
pop
mov
jb
pop
jns
mov
shr
mov
jle
fldt
lcallw
push
xchg
mov
cld
xchg
fbld
xor
hlt
pop
fwait
js
cwtl
push
sub
loope
xor
and
jae
inc
mov
insl
roll
sbb
fcmovnu
fwait
shrb
inc
mov
idivb
mov
jp
dec
sbb
roll
fisttpl
jbe
das
cmp
adc
data16
dec
mov
scas
push
jb
xor
or
fdivrl
add
dec
daa
lea
lds
les
ret
jg
cmc
test
sub
arpl
call
fs
pop
aam
push
popa
gs
and
sti
pop
out
out
movups
sub
push
shr
fiadds
daa
add
and
dec
xchg
xor
js
pushl
in
or
cmp
mov
jb
mov
stos
js
int3
ljmp
mov
test
push
repnz
mov
stos
imul
dec
push
pop
inc
push
hlt
jg
xor
pop
data16
jnp
push
lret
jnp
repz
jle
lret
out
aad
sub
dec
sti
sub
add
int3
fistps
pop
ljmp
bsr
sbb
push
pushf
and
jl
dec
icebp
ret
inc
sub
in
pop
mov
dec
out
bound
repnz
adc
mov
xchg
pop
sbb
mov
jecxz
into
in
out
cmp
push
adc
jecxz
movswl
cmpsl
es
test
in
push
stc
loope
test
shr
ljmp
or
mov
prefetcht1
pop
add
xor
ret
add
leave
lcall
add
lret
mov
lods
push
mov
adc
mov
mov
push
and
testl
mov
enter
enter
pop
cltd
std
bound
pop
fwait
test
dec
and
mov
and
or
push
shll
mov
add
or
ficompl
mov
adc
stos
je
sub
aas
cli
insb
sbb
stc
and
movsl
jne
loopne
pop
inc
insl
imul
mov
mov
and
lcall
mov
aam
and
std
loop
jmp
fsub
jle
scas
push
xchg
shl
xchg
out
and
dec
sbbb
aad
dec
cmp
adc
mov
lock
test
xchg
inc
sbb
vmovaps
fldenv
in
leave
inc
aam
mov
test
mov
dec
adc
lcall
inc
sti
push
mov
pop
mov
xchg
das
pop
aas
fdivrs
sbb
das
cli
cmp
cmp
mov
frstor
sub
dec
divl
cmpsb
cwtl
andl
xlat
mov
add
adc
icebp
out
lcall
ret
ret
sub
das
in
cmp
popa
sub
dec
mov
push
movsb
push
inc
xor
gs
mov
adc
jne
cmp
mov
popf
scas
data16
push
jae
jle
sub
fwait
and
std
adc
push
sbb
mov
fwait
jo
fsubr
pop
xchg
mov
sbb
addr16
pop
push
fs
icebp
test
out
cli
repz
addr16
adc
jle
push
pop
imul
cmpsl
and
sbb
sbb
jnp
adc
int3
mov
sbb
xchg
mov
pop
cmpsl
push
mov
lahf
out
call
mov
jg
mov
and
imul
arpl
dec
mov
ret
jae
jb
xor
orb
and
ljmp
aas
movsl
cmp
and
cmpsl
shrl
inc
cmp
loopne
leave
bound
mov
mov
lcall
shlb
rorl
xchg
neg
push
xchg
mov
cltd
push
es
inc
in
inc
stos
mov
loopne
in
sbb
pop
ljmp
enter
mov
iret
pusha
pop
lret
xchg
movsb
xchg
mov
mov
cli
mov
push
gs
push
add
xchg
in
and
adc
or
cmp
pop
mov
or
in
leave
xchg
adc
cmp
push
pop
sbb
test
push
repz
fwait
inc
fildll
lret
repnz
xchg
out
nop
inc
xchg
push
sub
fisttpl
mov
std
gs
push
iret
inc
insb
add
add
jecxz
sbb
out
enter
jle
sub
adcl
stos
mov
xor
js
mov
add
shr
mov
jbe
aam
sub
test
test
jle
dec
das
jne
dec
pop
push
xchg
or
lods
and
sbb
mov
jnp
shll
es
sub
mov
ja
out
xor
fcomps
imul
and
mov
test
push
cld
dec
aam
les
push
sub
mov
push
shl
mov
push
sub
push
push
stos
mov
xchg
int
lods
jge
pop
mov
les
imul
sub
imul
scas
sbb
sub
test
adc
int3
mov
test
pop
inc
push
mov
lret
in
dec
xchg
and
cwtl
ja
mov
lret
movsb
test
stos
ja
pop
or
inc
xor
jns
setae
dec
add
mov
lahf
fs
ret
test
adc
lahf
lret
cmpsb
mov
and
mov
xor
xlat
xchg
jl
lock
add
cmpsb
and
stc
xchg
mov
jnp
fstps
hlt
pushf
xor
cmp
mul
addr16
icebp
pop
fldpi
pushl
bound
ss
xchg
out
dec
lds
jno
cmp
test
and
ss
add
xchg
jp
aas
addr16
mov
mov
out
mov
push
js
mov
fwait
lock
int3
std
in
add
int
dec
sub
test
adc
mov
mov
or
xor
int3
cmpl
or
push
sbb
inc
into
add
mov
sub
mov
test
adc
jg
outsb
jle
add
push
scas
push
cmc
pushfw
lret
enter
icebp
add
cld
cmpsb
pop
int3
adc
mov
rolb
push
clc
push
mov
inc
sbb
jns
lods
sub
and
icebp
push
sub
test
add
subl
pop
cmp
sbb
pushf
mov
and
pushf
dec
fstpt
sbb
mov
int
mov
inc
xor
test
xor
cmp
xorb
inc
mov
or
xchg
xchg
mov
dec
xchg
xor
and
divl
repz
xor
fldt
out
pop
lcall
sarb
jg
mov
mov
pop
lcall
inc
dec
cmp
shrb
mov
fidivs
xchg
push
pop
rcrb
aaa
mov
inc
sub
cld
mov
aaa
cmpsl
lcall
dec
cmp
out
sub
leave
cmp
cltd
pop
pushf
inc
lds
and
pop
sbb
scas
hlt
leave
lret
jp
imul
pushf
das
add
inc
popa
push
jp
mov
lcall
and
lcall
pop
mov
lods
dec
cltd
xchg
jl
cltd
arpl
add
mov
mov
mov
leave
insl
xor
xlat
shl
cmp
cmp
xchg
jo
dec
jb
or
dec
cmpsl
or
jno
out
and
les
lcall
jae
ss
cmp
xchg
and
insl
dec
jae
dec
into
subl
mov
mov
push
insl
cmpsb
repnz
jne
ret
xor
pop
je
xchg
xlat
subl
and
je
negb
add
mov
pop
test
pop
lcall
xchg
arpl
push
int3
dec
or
push
pushf
cmp
clc
push
cmp
xor
xchg
aas
dec
mov
or
sub
into
lea
or
xor
js
jbe
mov
bound
cmp
pushf
repnz
cmp
fwait
push
xchg
mov
pop
sbb
mov
sbb
push
mov
xor
call
hlt
loopne
pop
ljmp
push
out
ljmp
stos
adc
and
pop
pop
test
or
xchg
xchg
mov
js
add
xchg
out
push
pusha
jnp
xchg
cltd
mov
jb
pop
outsb
addb
jbe
pop
cltd
dec
cmp
sbb
adc
xchg
jmp
imul
bound
jnp
loop
ljmp
test
mov
sti
add
mov
lds
inc
add
xchg
test
mov
out
sbb
jo
pop
lock
fildl
into
dec
test
imul
rorb
arpl
adc
inc
pop
jo
scas
aad
mov
add
add
mov
cmpsb
in
xchg
rolb
add
data16
clc
iret
push
jmp
fsts
inc
push
nop
push
xor
fs
pop
in
rep
ja
xor
and
mov
inc
cmp
movsl
mov
outsl
push
dec
xchg
cmp
cld
mov
inc
pusha
shrb
scas
test
push
jp
std
jns
orl
sbb
jl
aaa
and
fwait
push
outsb
lcall
jns
lods
inc
inc
jno
mov
add
adcb
push
jns
jg
ljmp
mov
andb
shll
jns
add
push
mov
xchg
pop
lret
aad
das
inc
in
pusha
xor
mov
inc
xchg
xchg
out
lcall
in
and
pop
sahf
lock
pop
inc
add
enter
and
mov
push
push
out
adc
fisubl
xorb
add
mov
jne
pop
mov
ljmp
xor
mov
mov
popf
repz
outsl
aam
ret
ret
sub
or
pop
push
mov
andb
lea
call
imulb
lahf
mov
fidivrl
add
push
sbb
push
lret
mov
fcompl
pop
mov
shlb
insl
scas
sti
xchg
sbb
mov
add
xor
stc
add
jge
jne
test
lods
jnp
pop
outsl
or
push
in
add
and
and
fstl
pop
out
jae
add
xor
pop
clc
loopne
push
int3
notb
adc
sahf
pop
cmc
jo
lret
cmp
push
mov
inc
fiaddl
pop
xor
xchg
xchg
or
or
jbe
ljmp
adc
mov
jnp
xor
popa
sbbl
cmp
daa
gs
lahf
clc
adc
add
dec
fnstsw
fmul
rcrb
fwait
ss
aaa
out
popa
mov
stos
push
test
movsl
and
test
hlt
jge
leave
mov
insb
scas
mov
mov
sarl
inc
rorb
adc
mov
icebp
or
sbb
icebp
repnz
sahf
sub
pop
lods
fnstsw
inc
std
fsubr
pop
push
test
scas
dec
xchg
sub
shrb
adc
jge
in
mov
push
movsl
sub
ja
or
cmp
xor
sahf
fcomps
push
jns
lret
and
and
pop
inc
mov
movsl
cld
fs
imul
fcmovne
popa
out
jmp
xchg
cmp
iret
ds
add
xchg
push
scas
adc
dec
sbb
push
icebp
decl
jne
jge
loope
add
scas
sbb
and
mov
jge
jbe
jno
fdivl
test
cmc
adc
popa
xor
xor
stc
jg
mov
mov
mov
pusha
idivb
inc
sahf
pusha
jecxz
in
jge
fwait
es
inc
das
xchg
stc
lcall
xor
fwait
cmp
loop
outsb
icebp
push
lds
pop
iret
pop
xchg
sub
adc
sub
adc
jmp
jnp
gs
daa
sbb
and
push
jg
lods
xchg
popa
lahf
xor
jge,pt
fildl
test
push
mov
pop
cmpsb
pop
dec
jo
fwait
mov
inc
pop
shrl
lea
cmp
mov
fcmovne
xor
sbb
xchg
fisubs
cltd
cmpsl
scas
inc
pop
jmp
in
lods
out
stc
fsubrl
adc
popa
mov
sbb
int
inc
rorl
scas
pop
mov
push
xchg
mov
sub
popa
rcrb
loope
push
push
mov
popa
xchg
aam
cmp
outsb
inc
ss
bound
cld
mov
jmp
fwait
jp
jnp
lret
xchg
test
mov
enter
ficoml
mov
rorb
aaa
push
ljmp
test
xchg
cs
fs
add
stc
in
sub
rclb
push
movsl
ffree
and
cli
or
mov
fwait
fwait
or
outsl
inc
push
xor
and
mov
fxch
and
push
mov
sti
adc
cld
hlt
insb
and
push
cmpl
mov
add
sub
mov
push
sti
lods
push
push
xorl
mov
sbb
push
int3
pop
mov
dec
movsb
mov
idiv
add
out
sarb
ds
sub
subl
cmp
mov
mov
fimull
mov
inc
sub
xchg
and
push
cli
add
popl
and
dec
jle
movsb
arpl
cltd
fdivl
scas
pop
fsubrs
loop
bound
andl
jge
lods
jmp
stos
mov
lahf
and
push
test
gs
pusha
push
sub
out
bound
jne
mov
mov
aad
and
pushf
int
mov
xchg
lea
mov
lret
fstpt
data16
jbe
testl
or
sub
push
push
dec
jle,pn
cmpsb
popa
jae
fdiv
std
mov
stos
roll
addr16
adc
stos
cmpl
aas
out
sahf
shll
rorb
fs
mov
mov
scas
cmp
dec
cmp
mov
pandn
aaa
mov
xor
sahf
fmul
ret
dec
fisttpl
mov
xchg
cmp
movsb
call
addr16
test
nop
daa
and
inc
inc
dec
aaa
pop
fsincos
sub
data16
mov
add
loope
sahf
dec
fisubrl
or
and
and
in
ljmp
xor
popf
xor
dec
ja
fsubrs
in
stos
pop
or
push
xchg
push
xchg
xchg
or
push
cmp
adc
pusha
mov
imul
add
xorb
mov
outsb
lds
gs
stos
movsl
repz
and
push
mov
and
mov
aaa
std
fcom
cmp
and
subl
leave
data16
pop
jg
fiadds
dec
aaa
ja
jg
push
pusha
dec
arpl
push
fidivl
aam
inc
push
sub
sahf
out
push
hlt
lods
lret
out
ret
outsb
mov
xor
pushf
cld
and
shll
dec
enter
push
addr16
in
fmull
cmp
js
or
push
sahf
cli
pop
add
push
and
jg
lds
fbstp
add
and
call
decl
insb
ficomps
mov
push
insb
nop
adc
lret
stc
mov
mov
or
jmp
fs
dec
cs
or
push
cld
adc
rorb
sbb
pushf
ret
cli
add
and
jge
jmp
aas
sbb
setge
and
pop
add
dec
push
mov
or
testb
int3
out
mov
or
or
mov
cmp
pusha
iret
pushl
push
push
mov
add
palignr
scas
fists
pop
stos
pop
xchg
mov
inc
test
aam
push
subb
pop
lock
es
push
add
out
jp
test
push
inc
mov
fcmovne
jge
call
mov
outsb
xorb
orl
mov
enter
pop
xchg
lahf
popa
es
jae
cmp
je
fidivs
sub
mov
pop
stos
daa
imul
daa
mov
xchg
adc
dec
fwait
test
cmp
xchg
enter
ljmp
rol
mov
jge
push
decb
jne
pop
jl
jge
mov
adc
cmp
sbb
test
lods
sahf
xchg
je
in
push
test
adc
xchg
push
aam
scas
xchg
xor
pushf
inc
xorb
cmpsl
arpl
sbb
dec
sub
mov
mov
sub
mov
mov
adc
dec
push
adc
mov
jp
mov
jo
or
test
subl
mov
cltd
lahf
mov
pminsw
clc
mov
adc
loopne
mov
mov
rorb
jp
inc
sub
call
lea
xor
in
fidivrl
inc
inc
stos
jnp
add
push
push
cld
lcall
aas
xchg
mov
sbb
inc
add
jnp
and
mov
scas
out
add
fld1
jo
xor
les
add
pop
adc
pop
sub
mov
mov
push
push
push
pop
and
mov
ljmp
cmpsl
scas
lcall
sbb
adc
and
add
jmp
stos
mov
sahf
xchg
jg
lea
stos
push
dec
add
cmp
inc
fs
jb
sub
in
cmp
xchg
divb
dec
mov
or
lret
ffreep
gs
pop
inc
call
mov
and
jmp
daa
and
mov
lea
into
jp
addb
test
adc
shrb
cmpsl
sub
push
mov
enter
mov
jbe
lret
add
test
xor
mov
push
mov
mov
or
fnstcw
out
cmpsl
mov
fbld
jae
mov
pushf
pop
cmp
subps
lea
out
cld
cld
js
jg
ljmp
and
dec
lds
cmc
movl
mov
loope
hlt
mov
sub
iret
adc
dec
cmp
dec
out
jnp
xchg
lcall
or
lds
sub
js
ja
inc
loop
loopne
sbb
leave
jne
mov
test
push
sub
lahf
mov
popf
cmc
jae
leave
xchg
stos
cltd
inc
pop
jb
jae
xor
jnp
sub
push
addr16
scas
pop
test
lods
fidivs
sub
lds
iret
and
xor
test
fiadds
add
js
xchg
xlat
jae
out
or
lock
add
mov
push
xlat
mov
repz
sbb
int
jnp
xchg
sbb
push
out
into
das
call
mov
cld
add
jo
and
shll
loopne
inc
mov
stos
inc
or
cmp
test
adcl
add
ja
or
fs
mov
sub
and
aas
into
dec
rorb
aas
outsl
loop
jae
sti
or
inc
incb
xor
fimull
xchg
nop
and
mov
scas
clc
lcall
movsl
addr16
inc
push
addr16
lcall
jg
int
mov
add
add
adc
xor
pushf
or
mov
outsl
mov
jp
jne
das
popa
add
inc
push
dec
xlat
jae
xor
lds
sti
sti
jno
shl
iret
outsl
add
add
dec
dec
jmp
mov
enter
aad
imul
ret
pop
repnz
cmpsl
gs
decb
ficompl
jo
lods
pop
add
idivl
insl
mov
insl
daa
repnz
add
mov
jmp
iret
jae
cwtl
jecxz
dec
or
cld
sub
lea
fwait
mov
stc
out
sbb
xchg
shll
imul
test
pusha
fwait
add
mul
insb
repz
push
fwait
popf
lds
imul
aaa
sbb
push
add
push
bound
xchg
les
pop
pop
insl
and
dec
stos
adc
push
aaa
xchg
xor
push
mov
icebp
fdivrp
push
hlt
js
dec
mov
lahf
pop
sahf
xor
mov
cmp
js
insb
mov
fsubrs
sbb
sbb
inc
jno
loop
or
or
test
lret
lds
out
mov
mov
xchg
xchg
icebp
outsb
push
or
inc
adc
movsb
dec
pop
pushf
ja
aam
add
jbe
cmpsl
and
mov
test
sub
andl
cmpsb
and
call
mov
mov
and
push
cltd
dec
imul
loop
test
inc
jmp
nop
shrl
add
aad
mov
xchg
inc
aam
mov
std
repz
sbb
mov
mov
jb
movsb
sbb
mov
fildl
mov
sbb
xor
xor
xchg
bound
jmp
lods
add
sahf
inc
pop
xlat
sub
mov
inc
jl
data16
push
xor
stos
jle
jecxz
fwait
xchg
bound
add
ja
shlb
enter
fsts
dec
dec
or
sub
xlat
add
inc
pop
pop
out
cmp
cs
and
pop
inc
push
mov
fnstenv
mov
in
gs
incb
jnp
xchg
lods
out
cwtl
push
test
cwtl
jg
jb
mov
test
dec
mov
mov
pop
xor
out
and
int
rorb
fcoml
mov
xchg
sub
lret
mov
sub
mov
xor
mov
icebp
and
sbb
adc
cltd
pop
pop
hlt
in
jge
aad
popf
out
and
leave
jg
pop
scas
add
dec
lcall
lcall
sub
lret
inc
loopne
lcall
pmuludq
fdivs
inc
xor
scas
mov
test
push
jnp
inc
packsswb
sbb
leave
xor
mov
mov
pop
pop
xor
fldt
pusha
js
and
jecxz
shrl
mov
rolb
in
insb
shll
dec
sub
leave
loopne
cmp
push
cld
cmpb
cmp
and
mov
inc
mov
fistpll
stos
ret
aaa
cli
ja
lret
ds
mov
iret
jl
rclb
bsr
adc
pop
int
lea
out
test
std
push
in
mov
andl
dec
or
loopne
imul
push
mov
cmp
xchg
shll
into
add
jp
hlt
inc
mov
sub
cmpsl
mov
mov
bnd
add
cwtl
pusha
push
adc
mov
aad
cli
mov
jmp
imul
cmpsb
adc
shr
or
xchg
fistl
test
lea
sub
jns
clc
stos
sbb
push
test
cltd
mov
sarb
mov
data16
addr16
pushf
pop
out
popa
xor
sbb
mov
dec
fisttpl
inc
mov
repnz
xor
sub
popf
out
jle
out
pusha
lds
or
mov
xor
scas
lcall
std
stc
mov
call
cs
ljmp
or
mov
mov
or
lea
pushf
pop
and
fdivr
push
jl
ficomps
movsl
xchg
mov
loopne
jge
in
xchg
shlb
testb
outsb
into
inc
adc
in
pop
lds
xlat
in
rcll
sbb
popa
ret
xchg
mov
jnp
popf
xchg
cmp
std
bound
mov
outsb
jg
or
mov
jo
fsts
mov
test
or
popa
insb
ficoml
sub
cmp
lcall
inc
sub
mov
fisubs
sbb
mov
jnp
shrb
mov
icebp
push
data16
xor
mov
test
dec
out
and
mov
negb
xor
int
out
cmp
sbb
por
push
enter
in
outsl
or
dec
in
inc
cwtl
cmpsb
sti
mov
mov
inc
xchg
int
mov
iret
adc
mov
lods
pop
pop
addr16
in
jl
into
dec
push
cmpsb
in
arpl
mov
decl
mov
mov
or
pusha
fs
mov
adc
mov
lods
sbbb
lea
bound
fcmovnu
rcrl
xor
cmp
push
int
das
or
adc
aaa
xlat
scas
adc
or
and
mov
rcrb
mov
pop
xlat
and
inc
mov
pop
sub
adc
aas
cmp
insb
sbb
mov
adcl
and
xor
pusha
or
push
movaps
daa
cmc
aad
add
out
jle
adc
test
jnp
sbb
popa
add
xorb
sbb
jl
mov
sub
jge
and
pop
sarl
rep
and
jno,pn
push
sbb
jmp
jp
stos
mov
xchg
dec
in
dec
in
adc
adc
mov
xlat
xlat
stos
movsl
mov
adcb
push
jge
aam
stos
ja
and
mov
imul
pop
mov
mov
out
stos
adc
cmp
xchg
jnp
fbld
fcmovnu
sbb
sub
enter
les
aas
push
push
bnd
cmp
push
push
mov
ljmp
push
xchg
or
loopne
pop
sub
dec
adc
pop
fdivrs
lock
jge
and
ljmp
lock
xchg
adc
inc
mov
xchg
cmp
inc
ja
movsl
xchg
ss
lods
ret
data16
and
lret
pop
lds
jle
and
js
in
or
jge
aas
int
sbb
mov
mov
es
loope
adc
push
push
push
lahf
xorb
adc
or
or
push
push
adc
pop
mov
adc
sub
loopew
push
add
mov
adc
pop
in
shll
pushf
mov
pushf
add
xchg
or
rcrl
adc
mov
aad
into
repnz
jge,pn
dec
jno
sbb
jne,pt
fdiv
jecxz
movsl
and
out
aad
js
stos
push
test
loopne
dec
lods
popa
scas
lock
outsl
cmpsl
mov
xchg
sarb
inc
cmp
inc
scas
leave
js
jp
daa
sub
inc
test
pop
mov
lods
cmp
cmpsb
ljmp
fdivrs
cld
cltd
stc
jno
mov
xor
jnp
mov
stc
jne
inc
mov
sar
push
movsl
jb
ds
ret
pop
xchg
jo
adc
xchg
in
mov
test
mov
jle
adc
jnp
ss
jge
lahf
dec
inc
test
lret
sub
js
popf
in
jmp
push
in
aad
xor
outsb
sub
insb
insl
jns
mov
int
into
stos
or
cmpsb
push
mov
ds
cmp
hlt
pop
inc
insb
mov
cltd
cwtl
cmp
mov
mov
inc
test
aam
push
adc
sbb
dec
jp
or
shll
jae
push
call
out
ret
lret
outsl
push
or
jno
mov
imul
mov
xor
sbb
adc
js
aaa
adc
jno
inc
push
stc
mov
ss
or
aas
mov
inc
push
std
sti
pop
stos
push
xchg
xlat
fistps
insb
push
add
and
pop
lea
and
mov
adc
or
repnz
sub
mov
sbb
mov
add
test
lea
pop
cmp
xchg
and
bnd
xchg
ja
sbb
mov
ljmp
addb
inc
mov
or
imul
test
mov
jbe
fldl
mov
leave
and
xor
call
xor
ffree
inc
pop
or
mov
mov
mov
pop
and
mov
in
xor
push
sub
adc
lds
lds
data16
lret
add
dec
cmpl
push
addr16
test
insl
icebp
fadds
xchg
push
test
fucomp
or
pop
lods
mov
out
inc
mov
cmp
lods
jp
faddl
je
dec
into
ret
out
push
call
pop
pushl
leave
jbe
cld
mov
ret
jbe
pop
cmp
repz
mov
xchg
stos
ljmp
testl
and
pop
iret
clc
mov
xchg
bound
fildl
cmp
sbb
aaa
xchg
dec
fistl
repnz
movsb
out
push
clc
pusha
jno
sub
lods
or
and
imul
push
sbb
xchg
inc
aas
jnp
pop
mov
sbb
push
cmp
ss
ds
jg
sub
addr16
inc
imul
imull
push
xchg
pop
sub
mov
pop
mov
out
pop
ds
les
cmp
xchg
xchg
mov
push
cmc
call
cmp
add
outsb
cltd
outsb
adc
push
pop
sbb
jmp
cmp
mov
xor
sbb
inc
in
movb
cmpsl
cwtl
outsb
popa
sbb
data16
or
mov
inc
mov
xchg
xlat
xor
mov
stos
or
insb
ret
jp
out
nop
lret
adc
nop
push
popa
jmp
mov
inc
push
and
sti
shlb
fst
or
ljmp
rcl
pop
data16
mov
pushl
jbe
or
stos
inc
out
cmc
push
mov
movsl
push
lea
jg
repnz
sarl
and
lods
les
jbe
fwait
jmp
pop
mov
repz
enter
pop
negl
loopne
arpl
pop
or
or
out
add
mov
inc
es
sbb
hlt
or
pushf
push
xchg
pusha
ret
aam
loope
pop
lret
into
and
dec
mov
xorb
dec
shll
dec
fistps
stos
fdiv
push
fcoms
pop
scas
cmp
xor
dec
fucom
mov
pop
xchg
pop
mov
js
movsb
dec
daa
xchg
enter
pop
or
add
xchg
lods
fwait
test
jge
sbb
stos
dec
or
xchg
and
pushf
xchg
lods
xchg
sbbl
dec
pop
mov
xchg
or
xchg
mov
out
loopne
push
lods
cltd
pusha
sbb
pop
and
cmp
cmp
mov
jg
mov
mov
insl
dec
loope
dec
push
xchg
and
xor
mov
dec
cs
mov
mov
mov
bound
xchg
mov
pop
pop
mov
mov
leave
cltd
xchg
push
lahf
xor
aas
stos
or
in
scas
fcmovnu
pop
xlat
stos
inc
mov
nop
dec
dec
xor
adc
push
push
dec
imul
and
in
push
orl
pop
lock
daa
fadd
shlb
adc
xor
pop
xchg
ja
inc
mov
or
adc
out
lods
lcall
cmpl
mov
in
xchg
sub
sub
mov
mov
arpl
cmp
fcoml
sub
jno
jge
iret
jl
loope
xor
aam
test
push
shrb
sbb
xchg
imul
lock
jp
xor
lea
das
adc
loope
jnp
loopne
rcl
adc
mov
sbb
mov
ret
dec
mov
xor
jb
outsl
dec
enter
int3
pop
or
xor
sub
aas
lret
and
mov
jle
je
out
ffree
jg
insb
and
xchg
xor
out
cmpsl
js
fwait
divb
mov
xchg
jne
daa
test
mov
push
lds
xchg
jmp
jg
pop
into
scas
call
sub
ja
push
call
imul
cld
push
push
xor
push
sbb
stos
scas
mov
cmpsb
mov
or
ljmp
dec
enter
pop
ja
iret
lcall
fidivrs
push
mov
loop
in
cmc
subb
adc
jb
jae
mov
lea
push
push
mov
ret
cld
outsb
xlat
fcmovnu
in
xchg
mov
and
inc
ret
leave
or
lcall
sti
loope
sbb
add
cmp
ret
lret
mov
xchg
roll
mov
add
push
cmp
fbld
sub
out
push
in
adc
xor
sbb
bound
jecxz
xor
cmp
mov
and
xchg
jo
fnsave
dec
dec
mov
scas
shll
cli
or
sbb
in
repnz
xchg
nop
cwtl
sub
mov
and
in
stc
lods
je
insl
aad
loope
mov
cmp
cld
jae
leave
sahf
stc
sub
sub
lea
mov
cmp
jbe,pt
mov
mov
jb
cmp
cld
push
lret
xchg
push
mov
jo
int
pop
cmp
push
ds
std
gs
pop
out
xchg
xor
inc
es
xchg
nop
mov
mov
jge
push
cmp
xor
jae
fistpl
jmp
daa
sbb
or
inc
cmc
leave
push
or
xor
or
mov
lret
aam
in
adc
or
add
push
sbb
les
ret
movsb
sbb
mov
or
or
ret
cld
fst
out
cmp
movsb
cmpsb
or
lods
mov
xchg
mov
cmp
test
sahf
adc
lea
fisttps
xor
jecxz
stc
push
imul
mov
mov
imul
xchg
add
outsl
aad
subb
inc
lcall
inc
fs
sbb
aam
mov
cmc
xlat
cltd
adcl
jmp
rcll
js
fisttps
sahf
xchg
push
imul
jbe
adc
adcl
pushf
xor
dec
xlat
pop
sti
dec
dec
sbb
pop
imul
pop
arpl
sbb
inc
pusha
lods
mov
lcall
mov
xor
fs
hlt
sbb
push
roll
push
jecxz
rcrb
jmp
dec
jb
push
js
push
aam
pop
pop
cmp
loope
nop
mov
cltd
sub
negb
int
popf
int3
jbe
add
push
movsb
jne
mov
rcrb
mov
mov
in
outsb
lds
lods
aas
scas
jbe
pop
jae
xchg
out
fistpll
int
cld
adc
enter
pop
insl
jmp
out
leave
push
int3
scas
mov
mov
mov
xor
push
adc
pop
inc
dec
or
adc
mov
cwtl
test
cli
jb
lock
shrb
sub
out
inc
gs
mov
push
pop
jmp
inc
push
sbb
and
imul
bound
xchg
andb
push
mov
and
xchg
fbld
xchg
sub
in
jnp
fstpt
xchg
push
push
inc
cmpsl
mov
sbb
mov
add
or
sub
aad
dec
les
lods
cmp
sbb
lret
mov
jne
outsb
lea
add
and
fisubrs
and
shlb
jge
fwait
rclb
pop
pushf
dec
pop
shll
xchg
es
xlat
into
cmp
cmp
inc
push
lea
gs
scas
jg
sbb
xchg
leave
or
inc
cmp
jg
mov
repnz
in
push
sti
pmaxsw
dec
pop
dec
lret
into
lret
mov
idiv
js
adc
inc
pusha
lods
add
dec
ja
sbb
push
adc
fisubs
or
sbb
ret
xor
hlt
xchg
mull
dec
sub
aad
xchg
popf
add
pshufw
frstor
stos
xchg
in
mov
aas
push
cmp
lret
inc
mov
or
or
int3
fs
xchg
in
popf
sbb
lock
push
inc
sbbb
js
int3
push
or
call
loopne
mov
in
jno
lock
cmc
dec
mov
push
push
adc
mov
fldl2t
or
add
dec
pop
call
xchg
dec
notb
ds
popa
and
lods
scas
pop
push
pop
xchg
aas
fimuls
xchg
ds
push
div
push
scas
std
mov
std
icebp
push
or
mov
test
sub
nop
movl
out
add
outsl
cvtdq2ps
call
aaa
xor
mov
and
jbe
out
sbb
sbb
in
lods
push
aas
mov
jnp
rcr
xchg
fistl
jae
jae
aas
xor
pop
cmp
cwtl
js
stc
jge
loop
xchg
inc
shll
ljmp
dec
aaa
mov
mov
pop
inc
push
sub
mov
or
mov
out
adc
and
in
sub
mov
imul
sub
sahf
dec
subl
adc
aaa
jg
sbb
rcrb
mov
lret
xchg
xchg
fcomp
cwtl
push
cs
xchg
shl
inc
testb
pop
lods
mov
popa
mov
mov
dec
lea
out
jb
andb
xor
inc
dec
mov
pop
arpl
ret
stos
or
mov
bound
cltd
add
jno
lret
sub
pop
outsb
cmp
fistpl
test
dec
inc
adc
pop
or
sub
push
pop
and
mov
cmc
push
loope
std
daa
xchg
sahf
gs
jecxz
push
and
push
adc
mov
mov
leave
pusha
movsl
adc
sbb
stos
jp
jns
cs
shl
pop
hlt
lods
hlt
mov
xor
xor
mov
test
fstpl
jae
jp
mov
xchg
cli
inc
adc
sub
gs
ds
adc
callw
mov
mov
pop
ljmp
aas
adc
or
loopne
mov
sbb
cmp
mov
flds
push
push
inc
arpl
in
lock
push
add
rorb
and
dec
out
in
or
pop
aaa
sbb
or
test
fldcw
or
push
fdivrs
scas
dec
mov
dec
in
lret
movsb
int3
dec
imul
push
cld
movsb
sub
in
popa
fcompl
pop
add
inc
jge
data16
icebp
push
in
sub
xchg
lea
lods
popf
sub
int
jb
sbb
sarl
jne
push
loopne
cmp
stc
lret
inc
arpl
fcoml
divl
incb
outsl
inc
pushf
dec
idivl
xchg
inc
inc
push
lds
loopne
xor
mov
loop
ret
or
lcall
lahf
pop
dec
add
rcrb
repz
imul
and
faddp
iret
jle
shrl
cmp
aad
aaa
adc
filds
daa
push
adc
mov
ja
pop
cwtl
push
sub
test
iret
xchg
pop
mov
adc
lea
loopne
ss
and
imul
cld
adc
cmpsl
cltd
jl
push
aam
inc
pusha
sub
je
sar
js
dec
mov
push
scas
xchg
cmp
bsf
jge
dec
jbe
test
push
int
xor
fadds
mov
ffreep
lds
pop
shrb
mov
mov
repnz
aaa
xor
cwtl
inc
je
inc
fnstsw
sbb
push
pop
imul
ret
and
dec
push
mov
sbb
add
clc
or
pop
gs
jns
mov
inc
mov
push
fstp
jnp
sub
xor
cmpsl
fsubrl
stos
jae
lock
dec
rol
andb
test
jle
adc
sbbb
xor
inc
arpl
inc
imul
clc
sub
fiaddl
movsb
dec
rclb
inc
mov
cmpl
aad
sbb
pop
inc
mov
cltd
mov
jecxz
mov
lcall
roll
and
or
mov
add
arpl
aas
add
sbb
cmp
das
mov
test
pop
sub
jo
xorb
ss
xor
jns
inc
into
add
lock
fidivrs
loop
ljmp
out
sbb
pop
daa
out
push
push
fiadds
incb
or
pushf
sub
jl
dec
addr16
jp
mov
sub
fists
cmp
je
sar
sub
sub
nop
bound
xchg
mov
xor
pop
fs
xchg
ds
sub
inc
les
inc
sbb
mov
les
shll
cmp
sub
fs
stos
inc
mov
insb
inc
sahf
jmp
lods
xchg
pop
xchg
scas
subl
mov
lods
xchg
jle
xchg
jecxz
stc
std
mov
and
adc
xchg
push
jp
add
push
jp
adc
ljmp
pop
or
pop
pop
jg
pop
notl
cmp
fsqrt
pop
arpl
pop
sbb
xor
push
es
ja
shll
mov
stos
xchg
dec
mov
lods
inc
icebp
jle
cmp
inc
xchg
mov
push
mov
mov
lret
xorl
inc
popf
xor
lea
add
and
add
test
jge
or
pop
inc
sub
jb
subl
stos
mov
repz
push
xchg
mov
rorb
mov
jns
outsl
xlat
pop
lods
test
mov
enter
pushf
sbb
cltd
arpl
testb
movsl
inc
repz
adc
mov
mov
sbbl
testb
push
mov
push
inc
outsb
and
ljmp
add
pushf
adc
fwait
pushf
lcall
fdivp
out
and
insb
loop
in
push
push
cmp
out
les
push
push
mov
mov
jmp
in
or
mov
mov
mov
scas
inc
rol
lret
xchg
in
dec
scas
insb
outsl
ljmp
hlt
aam
cmp
arpl
inc
mov
pusha
add
adc
lods
push
ret
push
or
jmp
xorb
fisubl
or
push
xchg
dec
and
xchg
mov
pop
push
and
orb
jb
push
mov
fsts
stc
popf
sbb
and
mov
pop
and
mov
lock
repz
in
and
cmp
xor
and
pop
jb
inc
xchg
add
dec
fdivrs
js
xor
lcall
test
shlb
pop
jnp
leave
mov
sub
cltd
movsb
adc
pushf
clc
xor
mov
pop
sar
sbb
mov
cltd
call
filds
mov
lcall
orl
insl
les
fdivrs
pop
outsb
loop
mov
and
shlb
inc
test
push
jmp
lds
lret
dec
and
push
jle
test
xchg
aad
and
inc
mov
fs
jno
sti
mov
std
bound
call
pop
aad
lret
es
ret
aad
xlat
pop
dec
imul
sbb
insb
clc
aam
ss
in
imul
sub
repz
cmp
pop
sub
sbb
cmp
lock
ds
push
clc
add
pop
out
inc
out
outsl
fstpl
add
adc
mov
enter
inc
lods
int3
and
adc
sbb
clc
fistpl
subb
xchg
cld
dec
xchg
xor
jno
add
sbb
sti
sbb
xchg
adc
out
mov
pop
adc
cld
out
mov
mov
mov
xor
scas
xorl
pusha
adc
mov
mov
dec
loopne
push
aas
inc
xor
scas
fs
mov
mov
pop
in
xchg
push
push
cmp
jp
pushf
mov
lcall
loope
loopne
xchg
jnp
sub
popf
or
ja
aad
push
push
iret
arpl
jg
push
repnz
pushf
cmpsb
rolb
ret
cwtl
lods
and
testb
repz
and
aam
out
std
xor
cmpsl
xor
mov
inc
sahf
jmp
xchg
loop
dec
sbb
stos
cltd
test
lods
test
add
call
loop
rcrb
or
jne
or
repnz
xchg
sub
xlat
inc
xor
pop
sbb
rcrb
and
mov
dec
inc
inc
inc
dec
xchg
pop
push
int
imull
pop
push
loop
int
inc
call
adc
xor
sub
mov
and
push
popf
add
push
stos
adc
aam
fwait
mov
adc
mov
loopne
pushf
int3
aas
jns
jl
outsl
xor
sbb
cmp
and
cmp
cmp
je
xchg
test
pop
inc
sbb
xchg
add
movsb
lock
xor
mov
mov
mov
jmp
das
cli
outsl
lods
fisubrl
nop
sbb
xlat
icebp
cmp
push
inc
xor
mov
sti
movsb
lods
sti
or
arpl
mov
inc
leave
cs
lea
bswap
sahf
mov
in
mov
and
in
stos
mov
pushf
rsqrtps
xchg
aad
in
test
dec
bound
mov
mov
ja
push
jne
push
arpl
fnsave
ja
or
dec
adc
arpl
jmp
and
pop
dec
clc
jnp
xor
xchg
leave
inc
dec
stc
add
loope
aas
and
insl
int
xchg
xchg
pop
mov
sbb
test
add
mov
adc
xor
popa
in
pop
dec
insl
test
dec
outsl
xlat
rcrl
shl
pop
lcall
cmp
sahf
cmpsb
pop
out
inc
lret
jo
mov
push
loope
aaa
or
xor
std
mov
stos
inc
lret
mov
fldcw
mov
jb
std
pop
daa
lea
sbb
pop
mov
xor
out
movsl
mov
bound
adc
mov
push
fcomip
mov
add
fstps
lds
mov
sbb
lcall
mov
jo
jns
aam
or
jge
hlt
jnp
ficoms
xchg
scas
aad
jo
adc
ret
imul
jmp
cs
inc
in
pop
xor
mov
or
sub
cli
std
jmp
call
push
mov
push
pushf
test
mov
and
jns
cltd
out
mov
pop
testl
shl
push
adc
cmp
dec
pop
pushf
xor
sub
mov
sub
push
lods
es
jg
mov
and
es
add
add
sahf
add
mov
and
inc
imul
movsb
cmp
push
jb
jge
inc
sbb
clc
and
jg
sbb
mov
push
jns
hlt
xor
push
mov
cmp
pop
rcr
lock
cli
dec
lock
jecxz
jne
mov
outsb
orl
pusha
xchg
inc
andl
lods
imul
dec
cmp
xchg
add
adc
xor
mov
fisttpl
cmp
mov
fstps
test
stos
mov
out
xor
and
push
xchg
loope
sbb
cmpsb
cmp
xchg
adc
into
push
scas
dec
jl
xor
and
addr16
gs
xor
dec
cld
mov
xlat
nop
pop
mov
sbb
mov
stc
push
dec
pop
lahf
inc
fisttpll
ret
xor
popl
push
push
rep
or
out
xor
daa
adc
sub
and
adc
sahf
mov
cs
lock
and
pop
push
pop
sbb
and
xchg
jge
das
push
xchg
les
jp
lahf
test
fxch
nop
mov
fdivrl
int3
popf
aam
cwtl
negl
inc
mov
sub
aaa
pop
fwait
push
push
out
push
das
stc
jle
xchg
jecxz
lret
fisttpl
lret
lds
cwtl
les
push
in
push
mov
ficoml
sub
loope
cmp
movaps
xorl
cmp
shl
pop
js
cmp
stos
leave
stos
cmpsl
mov
adc
pop
mov
sti
pop
out
cmp
lcall
jb
jmp
divl
push
aad
rcrb
into
or
popa
popa
jo
or
iret
out
adc
pushf
xchg
shlb
add
pusha
cmp
jge
fmuls
std
or
fidivl
mov
mov
mov
ficompl
lea
outsb
nop
adc
sub
stc
ljmp
mov
dec
les
subl
or
pop
aaa
popa
cmpsl
or
icebp
xlat
pop
nop
cmp
mov
xchg
jae
or
test
xchg
xor
adc
mov
rorl
cmpl
out
mov
mov
repnz
nop
shll
cltd
fs
lods
jl
stos
ja
repnz
or
lods
dec
pop
jg
cmp
jb
xor
bound
sbb
xchg
insl
in
hlt
jbe
mov
inc
xchg
jae
mov
lret
xchg
cmp
stos
repnz
push
adc
repnz
push
xor
mov
repz
cltd
mov
inc
unpckhps
fmuls
jb
mov
insl
xchg
xchg
xor
cli
push
inc
fimuls
jmp
or
mov
jmp
mov
icebp
call
ret
xor
mov
dec
push
and
xor
dec
icebp
jnp
jae
pop
pop
cld
mov
jno
push
add
add
imul
push
or
adc
push
xchg
adc
scas
shrl
pop
lods
mov
shlb
and
dec
xor
jecxz
xor
adc
xchg
cmp
fnsave
ret
mov
mov
mov
fs
xor
adc
xor
cmp
sbbl
add
in
mov
pop
pop
arpl
inc
sbb
hlt
dec
rorl
fdivl
call
ds
lea
scas
int3
add
and
xor
sbb
out
push
mov
jno
aas
jle
add
or
shll
xchg
movsl
dec
repnz
fiaddl
repz
pop
in
jb
and
xor
cs
popa
dec
cmp
dec
lds
out
add
jno
out
jae
fstl
jge
enter
xor
ret
mov
adcb
sub
inc
jl
lods
sbb
xchg
mov
imul
sbb
jge
fstl
cwtl
jo
jecxz
and
cmp
pop
fcmove
mov
cmp
push
subl
jmp
repz
dec
into
stos
loop
fsubl
inc
xor
sti
and
iret
pop
fnstsw
out
add
and
pop
loop
mov
loopne
repnz
sarl
adc
mov
pop
cltd
pushf
and
in
stos
sbb
adc
push
fcompl
mov
lret
sub
xor
mov
sub
dec
push
mov
pusha
mov
jo,pt
sbb
dec
negl
mov
das
mov
sub
pop
jb
sub
sbb
dec
aam
sub
push
movsb
push
das
aad
fdivrs
or
push
cmpsb
jne
xchg
movsl
int3
pop
jns
sbb
jecxz
fstpt
outsl
adc
jns
push
pop
shl
mov
dec
mov
cmc
xchg
dec
and
push
mov
push
sti
inc
xchg
pop
pop
dec
dec
sbb
imul
repz
test
les
xchg
inc
insb
dec
ret
cwtl
iret
xor
inc
jle
arpl
jbe
dec
fstl
insb
jg
mov
cwtl
shrb
es
mov
pop
dec
call
divb
ss
fildl
xchg
icebp
xor
pop
popa
mov
sbb
imul
dec
dec
loop
dec
repnz
ffreep
test
xor
aad
jg
test
cmp
lds
cs
sbb
mov
inc
jo
xchg
mov
shrl
and
in
les
xor
das
xor
enter
movsb
push
mov
xchg
or
sbb
int
jno
mov
pop
mov
or
cmp
push
enter
cltd
testl
xchg
sub
sub
into
jb
jg
out
mov
and
test
lret
jmp
fucomp
cld
in
mov
dec
cmp
nop
mov
cmc
push
sbb
iret
sahf
fdivl
fimuls
arpl
jae
xlat
sbb
fdivl
adc
loope
adc
cli
es
dec
mov
xor
addr16
lcall
mov
lods
mov
cmpsl
inc
shll
es
cmp
or
bound
rorb
mov
inc
cmp
cmp
xlat
push
in
cmp
xchg
loopne
inc
fnstsw
mov
addl
iret
hlt
icebp
out
pop
cli
es
test
fs
lds
pop
mov
inc
push
imul
dec
cmp
jl
sbb
mov
pop
int
mov
lea
imul
mov
sahf
jle
orl
js
mov
aaa
or
loope
mov
popa
jno
mov
mov
adc
cmp
xchg
les
mov
outsl
gs
jmp
imull
or
data16
scas
jb
add
aaa
leave
mov
jge
outsb
repz
inc
dec
push
mov
cli
negl
stos
inc
aas
insb
xlat
outsl
pop
jmp
xor
jnp
fisubs
int
imul
roll
into
ret
fld
jle
inc
and
xchg
cmp
sub
xor
inc
push
pushf
xor
notb
pop
scas
mov
jmp
mov
test
mov
jge
cmpl
hlt
pop
loope
bound
divps
jno
or
ds
clc
dec
adc
out
cmpsl
mov
inc
add
scas
out
or
push
movsl
lea
jl
jne
pop
test
mov
fidivrl
insl
add
cmpsl
mov
cwtl
shlb
add
push
push
add
mov
mov
lods
xchg
notb
add
or
arpl
dec
cmp
in
cmpsb
fstsw
pop
mov
ret
in
das
jnp
js
cltd
sti
xor
call
pop
cmp
mov
fmuls
test
mul
jle
sub
xchg
loope
sub
xchg
mov
mov
or
insb
pop
push
jnp
sti
inc
mov
movsb
xor
dec
or
fcomps
cmp
jne
enter
mov
add
or
or
pushf
cmp
inc
mov
insl
aaa
int
or
loope
xchg
sub
jno
inc
mov
pop
pop
test
mov
push
xchg
pop
inc
xchg
cmp
mov
int3
push
jl
enter
mov
jb
lret
push
pinsrw
or
and
movb
popf
inc
jl
inc
mov
dec
test
cmp
jne
mov
jnp
ds
xor
push
rcrl
fcoms
jge
xchg
cmp
push
fldenv
shrl
nop
rolb
pop
scas
rcrl
ja
lods
pusha
jp
sub
push
dec
or
rclb
scas
jle
jb
fsubr
pusha
mov
lods
insb
xchg
mov
cs
mov
mov
push
insb
int
stc
cmpsl
ret
xchg
sub
add
xchg
rcr
sub
pop
add
adc
mov
and
lret
ret
xor
cmp
jb
cmpsb
sbb
adcb
mov
mov
fimull
fwait
out
cmp
ficompl
push
cmpsb
scas
insl
add
push
mov
ret
push
push
dec
hlt
aaa
in
xor
hlt
cmpsb
xor
gs
sub
xor
xchg
stos
mov
xlat
clc
std
or
in
pop
cwtl
sub
ficompl
ja
fnstcw
mov
les
arpl
in
dec
cmpsl
pop
jmp
nop
mov
add
int3
test
push
popa
and
or
stos
lods
add
repnz
test
mov
pop
push
pop
andb
cmpsb
ljmp
leave
fcoml
pop
mov
shl
lret
mov
or
mov
sarb
data16
loope
add
cltd
ljmp
loope
cmpsl
inc
aas
cmpsl
pop
jle
fnstcw
jl
add
ja
adc
jnp
mov
rcrl
fsubrl
orb
add
dec
insb
mov
or
mov
hlt
pop
out
js
fdivrs
aaa
andl
xchg
xchg
imul
push
fcmovnb
or
sub
cltd
movsb
push
push
adc
add
std
or
adc
xchg
pusha
jne
fstpt
pop
jmp
mov
xchg
pop
cmpsb
cmpsb
test
test
fmull
imul
clc
xchg
repnz
stos
iret
jle
inc
lods
jbe
popf
mov
push
fsub
mov
insl
mov
repnz
mov
pop
in
pop
or
mov
jge
lods
xchg
int
stc
sti
dec
mov
sbb
lcall
popa
shrb
adc
push
je
movsb
cmovnp
js
sbb
jecxz
add
mov
add
pushf
cmp
xor
jg
jb
push
jle
andl
je
stos
fbld
unpcklps
jne
inc
int3
inc
mov
lea
fidivl
cmpsb
pushf
pop
add
das
mov
push
lret
popf
fidivrs
sar
test
xchg
pop
ja
cli
lock
or
mov
dec
xchg
es
repz
mov
jne
adc
xor
pop
pop
stc
xchg
pusha
sub
push
jl
push
sub
push
into
jns
push
add
adc
and
cmp
jmp
adc
xor
cli
push
stos
jne
mov
jo
fs
mov
push
daa
mov
jge
subb
sbbl
jb
mov
stos
insb
sub
mov
cli
mov
ss
cmp
adc
leave
mov
inc
xor
js
or
pop
mov
mov
dec
xor
imul
pop
cltd
sarl
dec
aas
push
cmp
mov
je
mov
test
shr
je
dec
push
mov
adc
arpl
in
xchg
aaa
out
insb
mov
push
mov
in
fs
mov
std
loope
sub
fs
int
pop
cmc
stos
fidivrl
mov
lcall
pop
incl
icebp
outsb
lahf
cmp
in
mov
mov
sub
pop
mov
jns
xor
and
xchg
inc
imul
loope
push
sbb
shlb
in
sbb
adc
jo
jle
dec
xchg
mov
jbe
nopl
inc
dec
sar
jl
in
scas
dec
fs
add
and
int
mov
adc
mov
push
addb
insl
pop
clc
add
mov
dec
push
adc
icebp
xchg
mov
pop
sbb
es
jae
lds
and
out
sahf
nop
ret
cld
jp
fldlg2
dec
mov
dec
mov
or
in
shll
das
std
ds
dec
sub
subl
push
xor
jge
lods
sahf
push
jno
or
inc
ljmp
xchg
int3
es
xchg
out
lock
inc
mov
repnz
jnp
xor
inc
scas
jmp
lcall
pusha
and
stc
inc
das
repz
pop
stos
test
add
pop
xchg
cltd
cmc
stos
add
scas
das
mov
cmp
imulb
jle
insl
xor
pop
fstpl
packuswb
mov
rorl
aad
jb
into
xchg
xchg
xchg
pop
mov
cmpsl
mov
mov
insb
movsl
lds
rcrb
sbb
das
add
mov
jnp
pop
das
fiadds
push
mov
dec
sub
sarl
push
stos
jmp
out
jg
insl
nop
cmp
xchg
push
dec
movsb
xchg
ja
scas
ficompl
notb
cmpsb
loop
inc
iret
enter
stos
mov
in
mov
orl
xchg
aas
clc
push
pushf
inc
push
shlb
pop
jns
je
lret
jmp
mov
xchg
mov
rolb
cmp
xor
lock
mov
filds
push
dec
adc
mov
enter
push
scas
mov
aas
push
fst
mov
fcomp
xor
jnp
les
lods
popa
imul
inc
pop
aaa
ficomps
cwtl
out
std
test
mov
xor
mov
pop
test
pusha
jae,pt
lds
push
xor
lret
enter
pop
movsb
add
ss
scas
adc
pop
ret
lcall
adc
xor
mov
inc
lcall
cmpsl
cmp
push
mov
test
repnz
movb
outsl
into
notl
idivl
out
inc
mov
fcoms
or
and
out
jae
or
lock
add
pop
pop
out
clc
push
and
add
and
ret
add
pop
pop
arpl
add
inc
xchg
or
xor
push
in
xor
xor
cmp
enter
mov
mov
jno
cltd
icebp
jno
push
mov
stc
ret
cmpsl
rcl
repz
loopne
aas
fs
jae
fadds
push
imul
rol
ljmp
aam
pusha
insb
in
mov
lods
pop
pop
loopne
adc
fidivl
es
aaa
test
jno
mov
icebp
shrb
cmp
fs
insb
or
int
enter
jl
daa
adc
jmp
dec
hlt
in
imul
lcall
outsl
lahf
inc
inc
mov
das
and
movsb
daa
notb
dec
xor
xor
dec
sarb
sbb
repnz
fidivrs
les
test
sbb
jns
inc
scas
jae
leave
or
scas
cmp
xlat
xor
sbb
adc
push
lods
dec
pop
aad
xor
out
or
in
or
cmpsb
popf
mov
jmp
jo
int3
cld
in
mov
popf
roll
mov
das
adc
mov
push
xchg
pop
inc
inc
jno
popa
dec
lcall
inc
lcall
mov
dec
add
gs
pushf
or
rcr
fcoml
shrl
xchg
dec
jge
btc
js
imul
sub
push
sub
jge
lock
sub
les
in
adc
pop
xor
lds
js
inc
mov
push
test
mov
push
popl
xchg
dec
cmp
push
mov
jg
mov
pop
dec
test
aaa
pop
push
jns
gs
or
repnz
push
add
dec
pop
cmp
xor
sbb
cmpsb
or
sbb
push
lock
lcall
lea
inc
ret
fsubrs
ret
push
jne
addr16
sub
in
cmp
ljmp
mov
shr
xor
jo
pop
adc
in
or
fucomi
mov
cmp
mov
lahf
add
mov
in
insl
add
mov
daa
adc
jge
sub
xor
adc
add
je
sarl
and
sbb
cmpl
out
mov
fdivrs
dec
test
icebp
gs
ret
mov
add
movsl
push
pop
cltd
mov
xchg
imul
mov
out
jae
stc
jns
mov
imul
movsl
cmpsb
lds
lds
push
add
push
mov
push
fisubrs
fwait
je
repz
sub
push
and
dec
outsl
add
xor
inc
sbb
or
pop
negw
inc
mov
or
test
lcall
pop
repnz
ss
mov
idivb
inc
mov
je
add
out
arpl
adc
into
xchg
xor
dec
jbe
repz
pop
pop
icebp
int
pop
dec
mulb
sbb
pushf
dec
ljmp
jmp
mov
pop
loop
mov
outsb
pop
push
in
shrb
idivl
pop
lea
out
imul
jns
sti
jno
sahf
mov
subb
inc
stos
add
and
and
sub
out
pop
divl
cli
int
pop
hlt
pushf
xor
cmpsb
lcall
fnstenv
inc
adcl
les
adc
rorb
jae
xor
mov
xchg
sub
inc
push
cmp
cmp
jle
nop
shlb
rorl
clts
outsb
jnp
mov
test
jns
lret
mov
lds
add
out
jg
or
mov
je
sub
mov
push
xchg
xchg
sub
bound
adc
in
inc
popa
cmc
lock
sbb
jg
int3
test
movsb
add
ret
loop
xchg
div
repz
mov
popf
scas
mov
fbstp
and
inc
sbb
pop
outsl
add
push
sub
jge
push
mov
lcall
and
sbb
sarb
cmp
cmpb
out
xchg
mov
mov
shlb
jno
pop
mov
fyl2x
add
or
into
xchg
push
jg
ret
mov
add
push
jne
out
or
andb
sub
mov
jne
sarb
sub
cmpsb
daa
push
adc
jae
in
jmp
repz
lods
mov
fstpt
test
pop
fs
mov
mov
mov
cmp
pop
dec
dec
rcrl
xchg
pop
aaa
xchg
aaa
loopne
sbb
data16
mov
xor
imul
insb
ret
pop
sbb
xor
mov
enter
inc
add
adc
ret
cli
ficoms
inc
or
mov
lret
xchg
mov
jno
xor
inc
or
aam
mov
sub
lock
inc
cwtl
sub
sub
mov
inc
mov
imul
inc
ficoml
or
inc
and
mov
or
daa
push
data16
dec
pop
sub
sub
mov
das
push
imul
ds
xchg
mov
pop
cmp
adc
pusha
dec
mov
scas
in
popl
xor
fildll
inc
int
lds
jns
ss
icebp
ret
xor
inc
and
gs
xchg
push
jmp
mov
mov
mov
daa
cmp
ja
mov
loope
dec
scas
xchg
scas
and
cmpsb
push
sub
pop
and
sub
jns
cs
mov
pop
inc
dec
add
push
lret
lods
call
into
repnz
sbb
mov
loopne
xor
mov
andl
sbb
sub
sti
dec
pop
xchg
jmp
xor
jle
notb
jl
or
push
leave
pop
int3
xchg
mov
into
jns
les
jb
leave
pop
xor
inc
mov
or
test
iret
ja
pop
pop
jge
adc
fwait
movsb
popa
cmp
hlt
cli
fcomps
test
test
xor
cltd
jl
lock
scas
sub
jnp,pt
adc
aam
dec
xor
jnp
xchg
adc
mov
and
sub
loop
mov
loopne
insb
push
ss
mov
xchg
jae
xchg
sbb
adc
push
mov
pop
sbb
mov
out
cmp
movsl
xchg
xchg
popf
jb
bound
or
xchg
mov
sarl
sarb
js
mov
loop
imul
daa
dec
cli
mov
cld
js
out
push
dec
xchg
out
push
loop
and
insl
xlat
pop
mov
push
rorl
lods
jmp
addb
pushf
loopne
sbb
mov
arpl
mov
xlat
cmp
inc
faddl
mov
fcompl
push
js
jb
pop
outsl
xchg
test
call
and
xor
mov
ljmp
mov
jmp
jp
addr16
dec
dec
scas
dec
ljmp
pop
or
out
movsb
sti
xchg
cmp
fisubs
out
lcall
mov
fidivl
dec
sbb
sub
xchg
mov
mov
out
pushf
dec
movl
xchg
lret
hlt
iret
sbb
jge
mov
xor
bound
in
push
les
in
out
mul
cmp
imul
add
mov
int3
icebp
popa
hlt
jg
adc
push
pop
test
xor
pop
test
lods
jmp
sbb
sub
lahf
pop
inc
icebp
in
testb
or
jl
cmpsl
jno
pop
fs
in
test
scas
test
mov
jmp
and
jnp
ja
inc
aaa
mov
fwait
mov
les
fsubl
ljmp
sti
nop
aaa
xor
xchg
sub
sub
jae
push
lahf
mov
cwtl
xchg
js
cli
sbb
fisubs
mov
call
jl
adc
ffreep
push
stos
mov
xor
fnclex
jge
inc
pop
repz
iret
jae
pop
add
cmpsl
leave
enter
or
cmpsb
jns
inc
cltd
dec
xchg
sbb
int3
mov
jmp
andb
stos
cltd
xchg
clc
adcb
xchg
test
fisubs
nop
dec
or
sarl
push
dec
and
fbld
daa
push
aad
inc
movsb
sub
int3
inc
cmp
xchg
shlb
lea
sbb
push
sbb
cmp
cmp
and
mov
add
inc
xlat
je
cmp
test
and
xlat
jbe
stos
sbb
enter
jge
xor
or
xchg
shlb
push
subb
pop
inc
dec
pushf
jnp
fstps
pop
xor
aaa
cld
mov
seto
arpl
cld
pop
stc
pop
or
repnz
les
dec
sub
add
fwait
es
dec
fstl
loope
in
xorl
add
xor
fsubr
ret
pop
lods
xorl
sti
pushf
lds
or
jle
dec
ljmp
adc
push
loop,pn
daa
inc
push
mov
mov
add
dec
add
shlb
or
aam
adc
lock
sbb
stc
jae
orb
xchg
hlt
sbb
push
push
push
pusha
xor
loopne
ja
pop
mov
add
ss
popf
cmpsl
leave
js
pop
add
jo
and
pop
push
clc
mov
in
cmp
add
inc
dec
jne
fnstsw
or
movsl
pop
ss
fistpll
dec
xchg
fisttpll
stos
fisttpl
cmp
or
pop
cltd
xchg
pop
sub
filds
inc
inc
jg
xor
jle
push
rcrb
mov
push
gs
ss
jae
dec
and
xchg
push
pop
sbb
rcll
enter
int3
ret
loopne
lret
pop
push
xchg
dec
rorb
xlat
and
push
pop
push
insb
add
fcomps
shll
push
fwait
popf
cmp
push
jns
addr16
pop
mov
enter
gs
sub
cmp
mov
mov
aas
xchg
cmpsb
data16
loope
cli
xchg
pop
aad
jnp
mov
cmpsb
and
cmpl
aad
mov
mov
cli
pusha
bound
pushf
pop
and
jmp
mov
mov
nop
sahf
add
or
ss
jecxz
xor
sbb
sub
getsec
int
inc
xor
xor
cld
cmp
pop
xchg
sub
adc
sub
arpl
insb
dec
lahf
divb
or
sub
jecxz
movb
pop
outsb
or
outsb
mov
xchg
mov
mov
push
in
lock
mov
dec
mov
cld
das
cmpsl
out
mov
pop
mov
inc
es
data16
cmp
sahf
data16
lods
add
mov
repz
jl
jecxz
push
and
pop
push
in
cld
push
or
jae
sbb
or
jl
sti
cmc
and
jo
jo
sarl
mov
pop
les
movsl
adc
loope
mov
loope
mov
lret
stos
rclb
bound
mov
sub
sbb
and
mov
mov
testl
enter
sub
les
lret
adc
xchg
pop
flds
jl
pop
jns
ljmp
in
shrb
pushf
adc
or
cmp
sbb
in
lret
pop
pop
sbb
jg
pop
scas
mov
lds
push
pop
dec
fwait
out
cwtl
adc
push
scas
ds
lahf
cld
loop
cmpl
push
jne
cmp
cld
fisttps
stos
lcall
popa
cmp
test
loopne
popf
loopne
add
lret
das
ja
pop
aas
xor
cli
sbb
out
pusha
mov
push
mov
add
cli
dec
imul
cltd
jnp
push
cmp
sub
sbb
call
test
or
push
or
orb
mov
enter
mov
push
sub
cmp
sub
out
std
jno
cli
nop
in
ja
iret
movsl
adc
xchg
sets
ret
aaa
movsb
sub
faddl
leave
jg
xchg
cmp
test
and
cli
fistpl
push
push
adcb
xchg
fmul
in
mov
xor
pushf
fadds
or
inc
subl
push
rclw
popa
sbb
je
or
or
out
jbe
std
fldl
cmp
pop
cltd
xor
sbb
push
push
xor
jbe
es
mov
cmpsl
dec
push
aad
shrl
xchg
jle
bound
js
int3
out
mov
dec
je
ror
or
in
ffree
int
jbe
push
inc
push
stos
push
std
or
push
cmp
xchg
enter
jne
sbb
int
inc
popa
dec
outsl
xor
not
leave
sub
pop
mov
mov
push
inc
xlat
cli
dec
inc
xchg
cltd
inc
jae
out
enter
mov
inc
jmp
push
loope
lock
jno
mov
fcoms
sbb
xor
cmp
lods
push
push
jnp
sar
sti
push
insl
aam
xor
bswap
add
add
in
mov
push
jo
fcompl
dec
pushf
xor
fwait
push
rorl
mov
or
push
pop
in
jbe
sbb
lock
mov
enter
lahf
lcall
test
fnstenv
add
sbb
ss
xchg
push
cmp
mov
push
and
popf
call
mov
mov
lds
push
adc
adc
cs
loopne
lret
jp
jl
leave
pushf
xchg
loopne
cs
shll
fisubs
xchg
rorl
push
lret
ret
iret
push
mov
or
int
je
xor
addr16
cmpsb
push
push
call
and
int
fdivrs
mov
mov
ds
inc
mov
pop
or
js
pop
ficoml
lret
mov
cmpsl
clc
sub
sbb
outsl
mov
aam
into
cli
shlb
pop
adc
dec
cld
cmp
inc
icebp
add
adc
inc
jp
push
xlat
push
fwait
cli
insl
push
sub
mov
mov
enter
std
adc
in
repz
imul
test
or
dec
pop
mov
pop
lea
fisubs
or
sub
mov
inc
mov
push
mov
xchg
into
gs
sbb
out
hlt
leave
xor
xor
jmp
sbb
push
xor
pop
add
mov
adc
out
ss
mov
sbb
xor
lock
xchg
mov
loop
add
mov
jmp
fsubr
ret
setbe
testb
fiaddl
cmc
jbe
mov
inc
push
add
inc
inc
test
test
xchg
sub
inc
xchg
std
rorl
cmp
push
xchg
loopne
repnz
mov
fisttpll
mov
addr16
ret
ja
movsb
xor
fwait
inc
lahf
divb
mov
mov
inc
jne
bound
jp
and
movsb
mov
call
test
inc
mov
push
mov
divl
lock
push
lcall
into
popf
mov
popf
rorl
test
jbe
mov
cld
pop
addr16
stos
andl
rcrl
jge
jb
dec
push
test
lods
cmc
sub
add
or
je
jmp
outsl
inc
sub
sahf
add
or
jle
std
mov
add
bound
subl
sti
lret
jle
insl
inc
mov
inc
jecxz
in
mov
rclb
neg
mov
mov
or
shrl
dec
and
mov
scas
ret
lock
inc
or
rorl
jl
push
jp
or
xor
dec
pushf
icebp
andb
outsl
pop
pop
nop
cwtl
ds
push
jl
pop
das
loop
mov
mov
sub
push
sub
and
shll
ds
gs
inc
mov
fisubrl
pop
mov
rorb
std
or
or
or
in
inc
out
rclb
jae
in
mov
div
fmull
mov
sarb
ljmp
mov
js
in
inc
xchg
js
mov
loope
xchg
cltd
outsb
jecxz
push
repnz
enter
cmp
push
cmp
xor
push
movb
xchg
ficompl
test
outsb
fsubrl
mov
movsb
ds
lcall
mov
shl
shlb
jmp
pop
sub
or
sub
sbb
push
ret
jmp
or
jp
movsb
mov
dec
jge
stc
inc
lds
mov
negl
xchg
negb
inc
into
mov
jno
push
mov
sub
cmpsl
push
insl
fisubs
xchg
cmc
jge
or
dec
out
in
lea
push
filds
mov
dec
jb
lret
into
pushf
sbbb
adc
add
ja
rdmsr
cmp
mov
or
cli
imul
popf
pop
adc
mov
out
test
ss
rcrb
hlt
lahf
inc
mov
xchg
mov
push
cmp
sbb
add
jno
fstpt
inc
mov
aaa
jbe
fisubrs
ds
call
adc
mov
arpl
xchg
cs
or
ficoms
hlt
aaa
dec
imul
lock
stc
cs
testl
pop
adc
je
insl
adc
xor
mov
add
add
fsubrl
stc
sub
stc
pushf
push
mov
mov
fdivrs
or
rcll
stos
aaa
mov
stos
jno
mov
popl
sahf
aam
mov
sti
bound
cmp
cs
xchg
dec
jge
test
je
pop
loopne
xchg
movsl
lods
sub
inc
jno
aad
imull
gs
cmp
sbb
lds
orl
nop
out
pop
div
clc
mov
aad
xchg
ljmp
shlb
fsubrp
mov
pop
aam
push
xchg
and
inc
sub
call
movb
add
pusha
xchg
cld
push
test
shlb
mov
aam
dec
mov
out
pop
mov
in
mov
stos
pop
bound
bound
ret
bound
jecxz
hlt
dec
push
push
inc
scas
cltd
push
add
aam
in
cli
test
xor
repnz
aas
cltd
into
lret
inc
cmp
movsl
and
push
sub
std
imul
or
or
cmpb
iret
insb
enter
sub
test
andb
out
push
out
inc
mov
push
xor
and
les
sub
clc
mov
adc
dec
and
or
cli
add
cmp
jle
and
dec
in
loope
fcmovne
xor
adc
inc
jo
lea
cld
inc
xchg
push
jae
inc
sbbl
inc
in
mov
cmp
fiaddl
jnp
les
lock
fmulp
mov
aas
aas
xchg
or
adc
dec
mov
add
adcb
dec
int
cmpsb
sub
cmp
pop
cmpb
or
cltd
pop
out
inc
loopne
iret
lahf
out
enter
mov
addr16
lods
movsl
mov
cmp
out
loop
je
in
hlt
push
gs
mull
jns
mov
xchg
mov
inc
rcl
out
out
mov
add
mov
xchg
clc
adc
aas
daa
sub
xchg
out
cltd
or
inc
sbb
inc
dec
pop
add
repnz
or
hlt
aam
xor
xchg
pop
loopne
in
mov
push
or
and
stc
rclb
faddl
in
sub
sub
std
mov
adc
add
sti
cli
xchg
push
mov
shrb
mov
jne
sub
add
jg
notl
or
lahf
fcmovnu
in
in
inc
test
seta
push
mov
loop
cld
and
pop
inc
jo
mov
aaa
mov
mov
addr16
idivb
xchg
mov
adc
xor
shll
aaa
push
aaa
inc
adc
sarl
sbb
mov
xlat
sbb
inc
push
push
add
je
mov
shl
int3
ret
das
and
jo
and
or
ja
mov
out
mov
test
cmp
call
fbld
pminub
pop
lds
pop
rorb
mov
nop
enter
xor
push
imul
dec
push
xchg
pop
idivl
fidivrl
mov
in
imul
aas
sub
inc
fcmovbe
les
iret
aas
lret
rcll
pop
scas
dec
test
dec
ss
dec
inc
push
adc
or
movsb
adc
or
inc
xchg
es
sbb
sbb
dec
int3
lea
jle
jnp
jne
or
jns
lock
jb
mov
inc
outsl
enter
push
pop
inc
adc
add
dec
shrl
adc
in
mov
mov
rorl
cmp
add
lea
push
sbb
fnstsw
mov
arpl
loope
adc
sub
mov
scas
call
jp
insb
cmp
cmp
mov
test
xchg
or
addr16
push
mov
pop
popa
xor
jp
push
cld
push
jecxz
lods
cs
hlt
fwait
gs
test
jg
fists
pop
daa
insb
adc
xchg
popa
and
adc
push
in
adc
aam
outsb
push
add
iret
mov
mov
mov
pop
push
cltd
add
cwtl
xor
xor
das
sbb
jge
div
or
inc
stc
add
dec
dec
ja
sbb
mov
ret
cmpsl
inc
mov
fwait
jle
ds
jge
pop
jl
lahf
mov
movsl
jg
mov
add
mov
inc
ljmp
loop
adcl
ss
lods
ret
push
aas
or
or
mov
adc
sbb
out
pop
xchg
andb
push
mov
mov
adc
mov
dec
cltd
xor
mov
pusha
out
daa
scas
pop
push
movsl
loop
sbb
mov
push
stos
ss
xchg
push
sub
dec
or
mov
aam
cwtl
inc
daa
cs
jns
xor
cmpsl
popa
rcrb
xchg
or
popa
push
hlt
pop
push
idivl
iret
add
lahf
fidivl
aam
sub
xlat
push
movsb
cmpsl
push
push
cmc
xchg
ret
aas
sub
test
lods
lahf
test
pop
ret
fyl2x
movl
cmp
jg
arpl
jl
xchg
out
hlt
cwtl
rcrb
mov
mov
cwtl
mov
adc
sarb
mov
imul
pop
adc
dec
mov
cmpsb
jg
std
pop
inc
dec
aad
ret
movsb
int3
adc
pop
hlt
out
pop
push
bound
xor
xchg
jle
adc
push
jle
jecxz
xchg
mov
or
push
pusha
aaa
jg
mov
aas
pop
scas
pusha
push
daa
aad
dec
xchg
adc
push
jmp
cld
cmp
mov
hlt
push
clc
and
clc
mov
xor
add
xchg
je
loopne
add
int
cli
inc
addr16
jno
insl
inc
pop
add
sbb
mov
sti
mov
jmp
push
cmpsb
aaa
sub
mov
mov
int3
sbb
xlat
dec
out
rorb
dec
adc
movsb
cmp
std
push
and
cmpl
or
cld
add
mov
xchg
pop
mov
repnz
adc
test
mov
cmp
icebp
pop
daa
repnz
xchg
push
into
fmul
clc
idivl
loop
mov
mov
gs
sub
jle
insb
jbe
or
lahf
jecxz
jecxz
mov
pop
dec
sahf
testl
jno
enter
mov
outsl
cmpsb
lcall
xor
fcomip
fsubrs
test
and
dec
xor
mov
inc
xor
int
or
les
addb
cmpsl
std
in
imull
repz
iret
sub
imul
rcrb
mov
mov
sub
jb
pop
push
fistpll
leave
imulb
stos
jmp
sub
fsubp
xor
jl
inc
andb
add
cmp
mov
mov
loopne
jl,pt
clc
into
out
rcrl
jge
popf
xor
dec
es
mov
popa
pop
imul
or
push
gs
push
pop
cmpsb
addr16
aad
xchg
sarb
mov
jecxz
pop
cmp
popa
xchg
mov
inc
arpl
jnp
inc
ret
ja
rcll
sbbb
and
insb
je
pop
mov
and
les
insb
aad
dec
out
pusha
sbbb
ficomps
mov
mov
sbb
mov
sbb
push
xor
call
imul
mov
mov
cvtps2pi
mov
xchg
sahf
mov
mov
in
push
inc
aam
sub
pop
sbb
fs
cmc
and
jns
push
hlt
movsb
add
jmp
inc
push
mov
int3
pop
cmp
sub
dec
mov
add
scas
push
lcall
ss
or
adc
mov
cmpl
shrb
mov
je
add
sar
loop
push
loope
sub
inc
les
mov
push
sti
int
xor
mov
pop
xchg
jmp
fbstp
push
stos
jg
mov
repz
sbb
xchg
sub
pusha
mov
loope
daa
xchg
push
inc
add
adc
push
xchg
sbb
adc
push
fwait
pop
mov
rclb
daa
pop
outsb
push
mov
je
addb
push
in
push
jg
icebp
sub
push
sbb
inc
lret
jecxz
inc
sub
jp
adc
inc
inc
push
cwtl
mov
or
in
int3
loope
mov
mov
add
pop
mov
mov
cwtl
mov
aaa
adc
ficompl
jne
xchg
add
pop
in
inc
adc
aam
daa
add
mov
push
xor
fs
mov
mov
lock
dec
pop
outsl
aam
xor
mov
mov
cmovge
adc
push
xchg
cmp
data16
adc
shr
out
loopne
cltd
add
mov
mov
xor
push
jne
and
out
in
jae
cmp
sub
adc
lcall
push
push
test
jmp
jae
sbb
test
sbb
cmp
fwait
mov
or
popf
mov
inc
enter
sbb
add
and
dec
push
xchg
fcomip
ss
cltd
jp
jle
or
dec
mov
xchg
inc
mov
ja
add
mov
cmpsl
rcl
and
mov
mov
push
cmp
mov
jg
xchg
into
les
test
cltd
add
jns
xchg
out
and
loopne
das
cli
rorb
and
cmp
into
push
mov
repz
test
inc
ljmp
cmpsb
ror
sub
push
mov
loop
pop
adc
ret
pusha
stos
sub
outsl
lahf
sbb
pop
cwtl
scas
cmp
out
xor
test
fimull
inc
sub
repz
lahf
fcmovbe
mov
sbb
or
bound
pop
add
mov
ret
xchg
mov
mov
cmp
adc
or
mov
and
mov
cmp
push
nop
pop
push
sar
xlat
cmovo
adc
dec
fisttpl
fdivs
scas
pop
or
lcall
dec
push
xor
adc
cltd
andl
add
mov
lahf
dec
adc
and
data16
fistpl
lahf
dec
or
mov
cli
xchg
cli
es
cmp
stos
mov
push
bound
push
inc
roll
add
shll
mov
out
scas
cmpb
ret
pop
mov
or
mov
sbb
xchg
inc
scas
out
jmp
call
cld
je
pop
pop
in
or
inc
mull
das
push
leave
jo
or
lcall
cmp
jp
xchg
pop
shr
pusha
push
jmp
subl
bound
add
pop
push
cmp
imul
cmp
sub
std
addr16
ret
icebp
mov
push
sub
lret
js
std
pop
mov
and
js
scas
hlt
fwait
mov
cltd
and
popa
adc
icebp
mov
pop
and
or
lea
push
inc
push
insl
cs
cmp
sub
mov
ds
imul
push
int3
mov
push
test
fisubrl
fsubrs
into
ret
cmp
insb
test
mov
aad
mov
sbb
jge
jp
add
xchg
aad
or
orb
lea
aam
add
in
scas
ret
xor
pushf
fisubs
cmp
std
sub
inc
data16
mov
loope
dec
cmp
pop
sbb
mov
aad
and
pop
outsl
mov
std
push
xor
sbb
jnp
sub
sub
cmpsl
mov
imul
mov
hlt
out
sbb
je
fsubp
xchg
cltd
jne
test
jb
jo
xchg
xor
pop
imul
mov
out
pop
std
jno
add
out
icebp
push
adc
mov
ljmp
sbb
mov
jne
pushf
fs
int
dec
or
outsl
jno
ss
push
ljmp
faddl
pop
and
bnd
imul
hlt
push
and
pusha
xor
sbb
loopne
movsl
enter
pop
loopne
sahf
movsl
out
or
pop
lahf
mov
mov
loop
mov
mov
fisubl
adc
lods
pop
or
andl
lret
int
test
test
xchg
mov
xchg
ficompl
xchg
push
scas
enter
xor
leave
divb
cmp
jno
in
orb
fs
jae
mov
xlat
jo
les
imul
sub
lds
pop
dec
pop
icebp
cmpsb
inc
adc
mov
push
push
fnsave
dec
pop
jle
pop
pop
pop
mov
xchg
add
jp
inc
or
mov
and
mov
and
jne
pusha
dec
or
inc
jge
enter
rcrl
shl
dec
dec
xor
into
sbb
push
push
js
jno
cmp
add
mov
sbb
loop
out
adc
jp
lock
or
cmp
leave
movsl
outsl
aad
add
enter
fsubr
sub
xchg
das
cmc
push
dec
add
pop
mov
cmpsb
fiadds
das
loopne
leave
mov
bound
adc
inc
push
and
shrl
neg
xor
aam
out
adc
push
jns
pusha
mov
sub
movsl
cwtl
idivl
xorl
cmp
je
and
pop
std
fs
lds
dec
mov
add
fistpll
cmp
sbb
es
cmp
mov
or
push
and
mov
sbb
xlat
cmpsl
push
lock
enter
lods
gs
int
test
lret
pop
jp
cmp
stc
lret
xor
in
lods
stos
movsb
pop
push
lcall
dec
and
inc
rorb
aas
push
lret
mov
sbb
hlt
daa
icebp
mov
sti
nop
xchg
dec
lret
aam
jecxz
out
mov
cs
dec
movzbl
fstpt
pop
add
mov
add
jg
jmp
push
shl
mov
jb
inc
lcall
scas
les
mov
mov
mov
bound
add
push
and
mov
cmc
out
fbstp
fs
mov
push
addr16
sub
sti
sbb
xchg
rorl
sbb
pop
sub
xor
fisubl
pusha
xor
scas
push
xor
mov
cmp
lcall
mov
sbbl
xchg
dec
jns
test
cltd
int
scas
sbb
out
loop
aad
and
push
pop
jns
rcrb
bound
hlt
and
mov
lret
mov
aad
lods
adc
divl
mov
dec
push
fldcw
int
xchg
cmpsb
ret
mov
repnz
pop
dec
inc
sub
push
jne
out
loopne
or
fstpt
pushf
sub
xchg
dec
dec
ds
or
mov
xchg
inc
or
fsubrl
je
dec
fsubrs
cltd
pop
sub
push
aas
cmp
fnstsw
mov
call
pushf
pop
pop
dec
rcrb
dec
scas
mov
loopne
sub
lea
lea
pop
jo
cmp
sbb
push
xchg
xor
ja
sbb
int3
out
jl
sti
dec
jge
insb
adc
jle
nop
xchg
rclb
inc
mov
sbb
int
das
daa
mov
test
btr
inc
add
push
mov
xchg
lea
imul
or
adc
mov
scas
test
std
xchg
inc
lods
ss
int3
ret
lret
in
inc
imul
inc
aam
sbb
mov
imul
push
mov
xor
ret
push
jne
cs
xor
push
int
push
cli
icebp
xchg
adc
out
inc
aas
jge
in
pushf
nop
es
xor
xor
mov
int
clc
jle
test
cltd
fnsave
mov
nop
pextrw
stos
xor
push
pop
sbb
mov
add
in
sbb
sarl
icebp
mov
test
push
int3
and
cmp
jge
fsubp
mov
and
std
mov
lret
decl
hlt
dec
mov
xor
or
test
into
xchg
icebp
push
pop
xchg
push
shlb
clc
jp
dec
add
lret
xor
adc
and
lret
push
adc
das
les
dec
imul
pop
data16
hlt
mov
insl
xchg
inc
dec
cmpsl
mov
sub
jecxz
mov
cmp
daa
or
or
aam
ret
pop
roll
dec
data16
shrb
lods
subb
push
aas
xor
iret
insb
adc
xchg
push
fucomp
xor
jp
mov
popf
repnz
jmp
cmpsl
shl
nop
push
cli
sbb
aas
imul
out
das
and
ss
cmp
hlt
les
xchg
add
into
mov
sbb
mov
sbb
bnd
or
test
leave
xor
mov
pop
mov
pop
cmpsb
jge
mov
and
xor
aam
movsl
sub
fsubs
loope
dec
sub
xor
fs
imul
out
add
jb
test
outsb
das
dec
and
test
lock
imul
jae
std
aaa
push
mov
push
repz
mov
outsb
xor
jns
stos
shll
xchg
mov
push
pop
lods
int
ret
mov
mov
loopne
xor
and
rol
or
sbbb
fsubrs
sub
dec
lcall
and
push
xchg
sub
int3
sbb
xchg
cmp
test
pop
sbb
fdivrs
ja
or
cmc
adc
adc
aam
xor
cwtl
movsb
inc
pusha
add
or
test
stos
andb
data16
dec
pop
std
inc
jne
pop
jae
popa
js
xor
xchg
cltd
imul
imul
loop
fs
mov
pop
out
movsb
arpl
sub
test
aam
imul
and
pusha
ljmp
gs
aam
xchg
lret
popf
pop
mov
pop
push
xor
rcrl
fsave
out
shlb
pushf
mov
push
test
jecxz
mov
ljmp
dec
cmpsb
inc
push
data16
adc
sbb
mov
repnz
pop
mov
adc
mov
cmp
xchg
cmc
pop
xchg
ljmp
sub
fbstp
inc
sbb
fsubr
outsl
xchg
jbe
gs
push
push
fs
lods
xchg
or
mov
jae
test
aaa
xchg
andl
out
pop
cmp
adcl
cmpl
xor
sub
repz
sar
inc
movsb
into
jl
int3
adc
push
push
sub
jne
in
dec
fbstp
jae
fcompl
inc
mov
mov
dec
pop
or
in
shrl
leave
or
inc
pop
cmp
xchg
adc
in
add
out
pop
pop
rcrl
dec
loop
es
out
movsb
fwait
andl
jecxz
pop
jns
sbb
popf
test
icebp
mov
std
mov
mov
sarl
pusha
mov
cmpsl
rcll
out
mov
in
pop
mov
xor
std
inc
push
push
lods
inc
mov
mov
nop
clc
repnz
jmp
sub
mov
sbb
jp
mov
mov
mov
icebp
mov
gs
sub
clc
xlat
jne
sub
adc
push
and
cltd
jmp
lcall
or
jne
pop
cld
push
sub
inc
xor
sub
nop
pop
adc
mov
idivb
inc
out
addb
leave
dec
pushf
xor
inc
leave
cmc
xchg
pop
jle
cwtl
pusha
push
or
dec
ret
jae
lods
mov
xchg
in
add
fwait
push
push
mov
cmpsl
mov
sub
mov
pop
stos
in
pop
xchg
addr16
inc
bound
sub
jge
pop
in
sub
out
push
ss
cmpsl
mov
xlat
lcall
push
xor
push
idivb
adc
dec
stc
adc
pop
jmp
orl
mov
adc
dec
jp
rorb
addr16
jns
pop
stos
shlb
adc
lret
shll
cmp
bound
iret
xchg
repz
mov
dec
cli
cmpsl
std
jle
out
cmpsl
and
ret
clc
imul
and
push
mov
lea
sub
mov
dec
xor
pop
shrl
pop
or
mov
hlt
nop
cmp
cmp
aas
lahf
add
leave
inc
fsts
dec
iret
jbe
mov
dec
inc
ret
jns,pt
mov
adc
lods
out
pop
dec
push
in
mov
jns
mov
rcrb
sbb
daa
dec
jg
aas
into
mov
sub
lahf
adc
jb
jp
fdivrp
in
out
mov
fsub
dec
jno
mov
fiaddl
pop
xor
push
mov
les
xor
mov
ret
add
lahf
movsl
shlb
aaa
daa
idivb
in
inc
scas
push
insl
push
or
cmpsb
shll
aad
jb
popa
xorl
and
mov
lret
sbb
cltd
dec
inc
stos
movsb
fs
imul
dec
add
pop
in
mov
mov
dec
fsubrl
aam
shr
adc
jno
xor
xor
vpsubusw
adc
mov
xchg
add
fdiv
adc
lahf
in
js
out
mov
cmp
iret
cltd
lea
cmp
inc
sarb
out
fisubl
in
xor
push
pop
fs
arpl
cmp
cltd
sub
fcomip
xchg
loope
adc
ret
pop
xchg
dec
jl
sub
clc
cli
cmc
or
mov
adc
inc
xchg
sbb
xchg
shl
mov
mov
aas
push
push
sbb
mov
and
jns
or
mov
daa
mov
lods
out
sub
xchg
add
push
repz
inc
adc
pushf
push
das
aad
daa
add
mov
clc
sahf
test
fstpl
xor
push
mov
push
dec
mov
orb
sbb
dec
jns
mull
jge
enter
cmpsl
scas
rep
inc
or
mov
adc
inc
cld
outsb
movsb
movsl
mov
repz
lods
cmc
rcll
cmp
icebp
sub
movl
sub
add
ret
or
call
sbb
roll
add
mov
mov
jo
enter
mov
dec
in
add
cmpb
xchg
add
dec
out
sub
or
imul
pop
data16
cwtl
stc
scas
sbb
outsb
outsl
xlat
jns
lds
or
push
inc
pop
addr16
bound
mov
shlb
pop
dec
std
pop
xor
ret
jbe
loopne
push
loop
insl
mov
test
sbb
jns
xchg
dec
fdivrs
into
ljmp
mov
xchg
or
in
inc
fistpl
xchg
repz
repz
imul
add
movsb
popf
mov
test
stos
pop
lods
ja
into
andl
ds
lods
mov
shlb
mov
aad
mov
cwtl
bound
mov
dec
int
cld
jb
mov
or
xchg
adc
repnz
and
and
fimuls
lcall
inc
sysexit
xchg
push
xor
or
mov
adc
ss
push
aam
cmp
sbbb
out
jmp
aaa
enter
mov
mov
and
ja
add
mov
das
insl
addr16
mov
inc
pop
push
pop
outsl
outsl
pusha
jb
or
jno
mov
mov
popf
or
or
push
or
jo
jl
jno
shll
push
mov
mov
xchg
inc
cmp
test
xchg
scas
push
or
and
cmp
or
push
dec
or
add
inc
xchg
inc
mov
sbb
mov
sub
fmul
rolb
repz
loopne
sbb
es
inc
xchg
jae
xchg
js
pop
mov
mov
popa
or
mov
xchg
stos
sbb
or
fisubl
out
call
pop
stos
dec
push
adc
push
mov
popf
fsubrs
mov
test
fdivr
pop
into
mov
xor
lret
fiadds
in
xor
dec
div
pop
data16
frstor
xlat
inc
lods
sahf
movsl
gs
setbe
jno
lret
inc
ret
sahf
aas
js
cli
add
test
lea
clc
jns
pop
sar
ret
jne
neg
aaa
sarl
cld
cmp
das
mov
iret
aas
or
sub
into
out
inc
std
sti
loop
push
mov
xchg
sub
add
cmp
fstpl
add
lods
test
mov
xor
pusha
xchg
ss
ds
aam
scas
out
lea
xor
fcompl
jg
pop
lods
dec
test
push
pop
xor
test
dec
cmp
xor
imul
out
xor
and
stos
dec
sbb
in
lret
xor
push
push
das
mov
pop
jg
shlb
pop
aad
xchg
pushf
andb
and
mov
call
stc
sub
stc
imul
int3
jno
out
popa
lods
call
mov
test
jnp
and
lahf
mov
jecxz
mov
rcrl
dec
inc
stos
sub
cli
ror
lock
mov
add
xchg
roll
or
ja
pop
nop
pop
xchg
cwtl
js
add
dec
cmp
sub
movsb
js
dec
inc
insl
dec
ljmp
and
mov
lods
push
adc
adc
pop
neg
pusha
cmp
adc
lds
mov
stos
mov
divb
jno
jnp
ret
mov
cmp
data16
add
jg
pop
push
sub
lret
insb
xor
xchg
push
xchg
lcall
iret
xor
push
xchg
lods
fistpl
push
imul
ret
cmc
push
xor
cmpsl
fidivl
jnp
mov
aaa
mov
inc
adc
es
inc
sub
test
xchg
hlt
mov
call
daa
cmp
cmp
xchg
push
sub
std
cmp
fninit
fcmovb
mov
sub
add
roll
dec
inc
add
dec
lea
dec
push
cmpsb
mov
sbb
or
scas
mov
cmp
fdiv
pop
add
jg
xor
icebp
inc
movsl
lea
sub
mov
mov
sbb
popf
mov
movswl
addr16
cmp
aaa
jmp
mov
mov
mov
or
orl
rcrb
jg
testl
pop
fsubl
leave
push
leave
lahf
out
push
sub
sbb
aad
pop
test
push
xor
popa
add
sbb
inc
arpl
sub
fsubrp
dec
or
popf
add
out
jbe
xor
aam
out
or
dec
ds
or
pop
sub
add
sahf
xchg
jp
filds
adc
mov
mov
jg
mov
lcall
xor
lcall
fwait
cld
pop
je
test
pop
das
xor
add
int3
jns
stos
mov
out
mov
add
outsb
scas
in
imul
cltd
popa
int
cmpsb
leave
inc
imul
insb
push
aam
pop
pop
les
fistpll
jmp
les
mov
jnp
xchg
insl
sub
lahf
mull
movsl
test
dec
scas
mov
iret
mov
arpl
pop
popa
pop
insl
dec
insb
mov
in
sub
cmpsl
inc
or
inc
xchg
pop
dec
aas
add
in
movsl
mov
divb
push
in
xlat
dec
clc
pushf
mov
stos
sub
sbb
lret
cwtl
jmp
sar
hlt
mov
push
ret
and
push
test
notl
push
jecxz
mov
les
xchg
dec
test
mov
cld
dec
adc
mov
cmpl
add
mull
mov
stc
imulb
test
les
mov
xchg
cmp
adc
lock
xchg
mov
test
cs
sbb
cmp
or
fstpt
cmpb
lock
jmp
mov
xor
jbe
xlat
jmp
fdivrl
adc
inc
iret
cmp
lea
fisubrl
ret
fsubl
ss
lea
rcl
fisttpll
sub
dec
mov
nop
mov
jecxz
es
xor
xchg
jle
jecxz
clc
dec
iret
mov
packuswb
sbb
pop
dec
inc
cmp
faddl
scas
std
jl
xchg
ss
sub
push
aad
mov
subl
dec
sub
rcrl
sahf
or
dec
mov
nop
test
add
pop
insl
popf
jge
std
das
mov
jo
xchg
es
aaa
movsl
or
pop
push
push
ret
cltd
pop
mov
and
adc
dec
aam
out
je
cs
and
xchg
jbe
sub
sbb
add
pop
or
mov
cld
sbb
mov
inc
jbe
push
push
mov
mov
mov
jle
movsb
js
fwait
out
sub
mov
ja
clc
insl
cmp
dec
cmpsl
xchg
adc
and
int3
inc
movsb
movnti
mov
cmpsb
sub
imul
ljmp
push
pusha
fnsave
mov
push
test
or
lret
or
mov
add
xlat
in
jb
push
loopne
rcl
int3
dec
filds
test
sbb
sbbl
or
push
lcall
mov
jl
xchg
push
jbe
or
rcrl
enter
imul
push
outsl
pop
int
movsb
out
add
sub
fs
les
inc
or
sub
push
int
jmp
sbb
inc
out
mov
cmpsl
mov
jl
mov
and
test
jb
insb
and
insb
dec
sbb
data16
mov
push
adc
test
loopne
ds
cli
pushf
mov
mov
rorl
jg
sbb
iret
add
loop
ljmp
or
inc
xor
insb
dec
cmp
std
pop
stc
mov
xchg
fadds
adc
push
pop
adc
xchg
pop
aaa
mov
cwtl
and
lret
sub
push
mov
dec
call
sahf
xchg
mulb
pushf
shlb
sbb
mov
lods
xchg
mov
repnz
mov
enter
xchg
mov
and
fsubrs
gs
lahf
adc
into
movsb
or
pop
lock
lods
repz
cli
out
test
ror
popf
push
cmpsb
fbld
mov
in
out
je
jns
jne
pushf
jae
loopne
aad
testb
repnz
lds
xchg
sub
outsb
xchg
pop
dec
dec
out
adc
jle
rol
xchg
movsl
mov
cld
int3
out
add
sub
clc
jmp
shll
mov
sbb
dec
cs
push
sbb
mov
imul
sbb
push
data16
bound
das
mov
and
testb
or
sbbb
js
adc
add
xor
addr16
cli
arpl
and
mov
ret
stc
repz
cmp
dec
fs
sbb
je
stc
jae
aad
sub
pop
pop
and
xchg
and
in
jbe
aad
aam
scas
fsts
mov
or
je
pop
jl
add
sbb
xchg
or
inc
dec
xchg
push
xchg
sti
sbb
hlt
push
ficoms
mov
mov
add
mov
adc
icebp
aas
pop
xchg
add
push
jo
imul
sbb
movsl
pushf
js
push
mov
cli
dec
sbb
inc
push
inc
pop
inc
lcall
add
inc
aas
xor
mulb
shrb
ja
movsl
leave
dec
aam
fwait
or
pop
out
mov
test
outsb
fucomi
jmp
jno
icebp
push
xor
jmp
movl
stc
xchg
jg
jmp
fists
ret
mov
mov
insb
les
mov
sahf
dec
jecxz
xor
cmp
stc
xchg
gs
lahf
pop
lods
roll
dec
mov
jmp
test
sbb
lods
aad
add
mov
and
mov
mov
cmp
aad
cmp
mov
loop
xchg
inc
daa
jb
out
push
cltd
dec
jnp
xchg
mov
fmull
xchg
mov
fidivrs
push
nop
ljmp
push
pop
add
out
push
mov
lods
jns
pop
leave
or
popf
cli
int
and
pushf
mov
inc
js
shrb
aam
aaa
inc
aad
cmp
in
cmpsl
popa
jmp
sub
mov
cld
mov
fisttpl
popa
jae
shlb
xchg
call
sub
popf
mov
mov
rcrb
pop
frstor
pop
mov
aas
sbb
xchg
push
xlat
xor
jns
dec
loopne
jge
orb
jae
mov
je
sub
mov
push
adc
jmp
imul
push
xchg
jne
cmp
jb
mov
cwtl
lods
xor
imul
xchg
xor
repnz
push
push
xor
loope
loop
fnsave
cmp
in
sub
scas
ret
ss
cmp
adc
xchg
mov
push
sysret
lcall
adc
xor
sub
xor
mov
add
repz
out
adc
frstor
and
push
ficoml
sbbl
scas
shlb
rcl
mov
mov
mov
aas
sbb
and
test
mov
pop
out
fistl
pop
outsl
xchg
sbb
lock
rorl
push
dec
jmp
fnstsw
jb
loop
stc
lods
cmp
and
fwait
push
jge
in
outsl
sub
leave
int
leave
xorb
adc
or
outsl
imulb
or
mov
or
pop
test
push
mov
test
dec
pop
mov
sti
sti
sbb
xchg
mov
call
xchg
divb
xchg
push
xchg
cld
jge
xor
fcmovb
pop
xchg
stos
xor
icebp
and
mov
mov
je
popa
fisubs
jmp
ffreep
mov
ret
adc
int
mov
inc
sbb
jns
pop
cmpsb
sbb
mov
push
xor
pop
push
fwait
push
sub
mov
mov
pop
mov
jne
loope
jmp
std
lahf
xor
pop
gs
sti
dec
andb
and
cmp
nop
sbb
jno
mov
cmp
xor
cmp
testb
ret
sub
cmpsl
mov
mov
sbb
mov
xchg
adcl
pop
mov
mov
es
or
iret
lcall
enter
mov
add
cmpsl
adc
cmp
fwait
or
dec
and
loopne
div
ds
lds
lea
jmp
xchg
sarb
mov
pop
les
jae
and
mov
push
aam
mov
adc
and
jne
mov
push
mov
loop
push
cmp
add
inc
and
int
nop
xor
fs
movsl
xor
in
movsb
jae
cmp
adc
icebp
pop
addl
mov
cs
fsubl
rcr
shll
sub
add
lcall
enter
ret
imul
pop
cmpsl
or
test
sti
movsl
jae
mov
in
jns
sub
dec
faddl
push
mov
add
push
fsubrl
fisttps
dec
sbb
cmp
in
pop
cmp
mov
mov
lock
stos
push
push
sti
cmpsb
das
pop
pop
xor
sbb
aad
data16
pop
inc
and
mov
sbb
rolb
mov
fstps
xchg
mov
adc
lcall
aaa
sub
icebp
shll
bnd
stos
xor
jb
xor
out
jbe
inc
fwait
shlb
mov
lea
xlat
xchg
ret
ret
adc
mov
dec
mov
out
or
sbb
loop
arpl
and
fisttpll
lahf
shll
add
movsb
fnsave
adc
mov
sub
ds
mov
dec
dec
popf
mov
xchg
and
xchg
or
iret
xchg
ja
lcall
fiaddl
imul
out
jne
xor
mul
int3
pusha
add
pushf
push
dec
nop
jg
xchg
xchg
xor
add
shlb
inc
mov
cltd
adc
repnz
cmpsb
test
dec
scas
fs
jecxz
notb
insl
mov
xlat
clc
movsl
pop
mov
pusha
cmp
xor
mov
cmp
pushf
jl
not
mov
lods
jns
adc
adc
dec
js
fdivl
and
mov
outsb
loope
in
jns
clc
popa
xor
sub
xchg
stos
add
xor
and
leave
leave
lcall
call
mov
je
into
pop
add
es
mov
outsb
sub
jecxz
xor
and
out
adc
push
xchg
and
jbe
int
aam
mov
xchg
fstl
xchg
push
das
je
mov
movsl
insl
daa
in
push
push
add
shll
jmp
cmp
push
mov
mov
sbb
lahf
arpl
mov
xor
je
imul
cmp
cmp
push
lea
lods
or
test
shlb
and
int
and
psllw
mov
jle
std
subl
or
xchg
cli
inc
jp
push
push
mov
add
imul
outsb
jae
addl
out
mov
xor
nop
mull
or
lcall
mov
sub
in
adc
xchg
cmp
and
arpl
add
frstor
outsb
and
lds
or
xchg
jno
imul
loop
roll
sbb
cltd
sbb
in
mov
sbb
jecxz
shll
or
lahf
push
pop
lods
ret
in
das
nop
iret
jae
cmp
add
xchg
lock
and
lods
and
shlb
jns
mov
or
sahf
cs
sub
aad
pop
cmp
loopne
dec
jmp
xor
inc
mov
sti
loopne
iret
mov
xchg
dec
stos
mov
push
mov
cs
testl
outsl
idivl
inc
lock
pop
xor
dec
fnstsw
mov
mov
popf
fsubs
push
lea
lds
mov
repnz
fists
inc
out
imul
aas
sub
fidivrl
sub
xchg
xchg
cmp
sbb
mov
bound
addr16
pop
cmc
test
test
or
mov
pop
shr
add
fimuls
xchg
sub
mov
add
fs
lock
or
mov
in
call
mov
xchg
insb
push
sbb
jle,pt
sub
imull
jae
push
stos
jp
xchg
jl
pop
fwait
jns
dec
mov
mov
sub
pop
xchg
mov
mov
mov
adc
scas
dec
jp
pop
lock
cmp
xor
mov
in
jns
rorb
in
inc
xchg
pop
and
sahf
cmp
leave
imul
sti
lods
sbb
and
stc
out
mov
jg
int3
sbb
mov
in
push
sti
les
sub
sbb
test
mov
icebp
clc
jae
cmpsb
notl
scas
fnsave
push
sar
pop
in
push
mov
mov
xchg
mov
cmpl
cmp
xor
sbb
idiv
mov
dec
lret
cmpsb
adc
das
shll
adc
lods
jmp
outsb
test
xchg
fdivl
adc
leave
jl
push
push
in
cmp
pmovmskb
push
loopne
xor
stc
or
ret
pop
loope
cmp
cld
sbb
cmp
push
cltd
jecxz
arpl
sti
xorl
inc
add
mov
or
shrd
adc
rcrl
add
mov
stc
insb
jns
or
mov
mov
xchg
roll
aas
rorl
inc
fildl
stc
lock
cmp
fstp
adc
pop
push
fnstsw
and
sahf
sub
shl
scas
xor
add
in
and
negl
sub
js
mov
lcall
jbe
or
and
push
in
xchg
test
jns
aam
dec
pop
inc
popf
mov
pop
scas
stos
mov
aas
aas
stos
fnsave
xchg
lahf
lea
popa
mov
scas
loope
leave
mov
cs
mov
pop
mov
add
and
fs
push
add
cmp
test
xchg
sbb
sbb
in
fmuls
hlt
ficoms
push
push
orl
jae
gs
inc
jmp
mov
pop
mov
in
mov
imul
adc
fcmovnb
pusha
ljmp
and
dec
mov
add
jmp
add
mov
xlat
xor
cmpsl
popf
in
jno
cmpl
in
outsl
in
outsb
adc
sti
xorl
cltd
or
xchg
pusha
fldcw
arpl
outsb
xor
bnd
shll
add
xor
cmpsb
ficoml
stc
inc
fcomps
sub
mov
rorl
mov
lds
xor
scas
cwtl
in
inc
mov
mov
pop
loopne
xor
xor
xlat
sbb
int
cmpsl
shlb
sub
aad
mov
pop
and
xlat
push
es
push
mov
mov
push
pushw
push
or
lcall
out
rep
mov
pop
dec
das
movsb
jp
loop
mov
arpl
int3
fisubrl
cs
adc
repz
add
andb
inc
jae
insl
cmpb
fidivrl
lret
xchg
push
scas
xchg
fwait
xchg
das
push
aam
inc
push
scas
loop
jl
fndisi(8087
xchg
sarl
jae
sahf
ss
test
addr16
pop
loop
scas
xorl
lods
rclb
das
push
and
movsl
insl
nop
inc
and
scas
aam
cmp
inc
dec
sbb
in
insb
ret
lock
out
push
stc
aas
pop
loopne
subl
add
inc
aad
stc
and
in
inc
sbb
dec
inc
cmc
cmpb
adc
push
shlb
repz
jbe
xchg
nop
cmp
push
push
mov
fs
xor
cs
cmp
sbb
adc
enter
icebp
mov
jg
fmul
add
mov
push
jno
mov
jae
je
sti
les
dec
jp
sbb
inc
dec
inc
inc
add
dec
xchg
jl
dec
lds
jmp
dec
mov
fs
jno
pop
jnp
jp
cld
jns
sub
jge
sbb
cld
mov
mov
loopne
xor
mov
sub
aaa
cmpsl
gs
lahf
add
cmp
idivl
popa
roll
jbe
add
dec
jl
adcl
test
cld
das
loop
cmp
mov
pop
and
aas
sub
push
roll
push
pop
jge
imul
insb
in
outsb
pop
cltd
ror
push
fisttpll
lock
inc
in
icebp
lods
sub
add
adc
js
pushf
scas
cmp
push
mov
aas
dec
jbe
or
adc
add
mov
or
ret
pusha
mov
pushf
jbe
sbb
cld
mov
ja
sub
inc
xor
push
dec
cmp
shl
or
repnz
int
dec
xchg
mov
lods
push
cmp
jo
xchg
mov
js
pop
iret
xor
insb
rcll
es
jmp
fsubrs
dec
cmc
scas
and
xor
mov
imul
hlt
and
xchg
inc
bound
insl
mov
scas
clc
jmp
jbe
and
cwtl
sbb
and
jne
pop
movb
jns
pop
sub
clc
dec
js
push
aaa
shlb
in
ret
sub
inc
cmp
int3
mov
adc
sbb
adc
test
shrb
clc
mov
or
xchg
fisttpl
jnp
std
push
adc
jns
xchg
xchg
sbb
cmp
inc
clc
mov
lret
sub
xor
repnz
and
je
out
mov
and
fisttps
pop
add
ret
imul
nop
sub
mov
movsl
xchg
repz
add
sub
test
pop
cmpsb
and
mov
sbb
shrl
push
mov
cmp
jge
xchg
pop
and
xchg
push
push
fdivrl
cmp
push
dec
pop
xchg
xchg
mov
cmp
mov
das
repnz
cmp
push
loope
mov
sbbl
mov
push
push
sbb
mov
daa
outsl
push
cmp
or
xor
adc
scas
mov
mov
insb
xchg
pop
xor
sub
mov
cwtl
jns
insl
inc
sub
aaa
mov
xor
ja
cmpsl
fsubl
fdivl
aad
push
insb
push
push
push
or
fstl
movl
int3
inc
or
repnz
in
testl
pop
dec
push
pusha
movsl
rolb
and
ljmp
sbb
movsl
loope
jmp
add
push
mov
mov
movsb
insb
mov
mov
jg
sarl
push
lds
outsl
icebp
push
loopne
popf
mov
or
rep
ficomps
jnp
arpl
mov
stc
adc
push
repz
push
cmpsb
mov
pop
arpl
lahf
mov
stos
icebp
adc
cmp
inc
ja
sbb
scas
adc
add
rorl
inc
shlb
dec
paddsb
lods
dec
cmp
or
cmp
jmp
mov
jge
inc
sbb
jno
mov
sub
pop
addr16
mov
mov
jp
cs
xchg
mov
cltd
cli
cld
pop
stos
mov
mov
xchg
lods
rolb
jnp
pop
xor
adc
pusha
decl
jbe
dec
addr16
addr16
mov
sbb
fistpl
inc
xor
mov
jno
cmc
sub
call
pop
insl
xchg
int
jp
icebp
leave
sbb
cld
sub
shl
int3
jb
pop
pushf
faddl
sbb
sbb
push
test
cmp
inc
insl
ror
into
jmp
jl
pop
pusha
pop
cltd
pop
push
dec
in
into
in
fcmovnbe
pop
sbb
ljmp
aad
jge
jno
inc
jne
or
mov
aam
sub
and
mov
pop
lret
test
out
add
xor
or
std
dec
scas
cmpb
mov
xor
clc
dec
push
bound
pop
jno
sbb
divb
and
push
cmc
aad
dec
mov
pop
or
adc
cltd
sbb
xlat
in
sbb
cmp
adc
popf
lahf
pusha
dec
inc
or
pop
push
loope
test
cmp
ficompl
jbe
add
xchg
cwtl
nop
cmp
jae
mov
out
add
bound
cmp
cltd
inc
mov
and
and
mov
cmc
pushf
push
xchg
mov
cmp
or
out
roll
mov
lock
shll
cwtl
inc
and
fnstcw
sub
rcr
inc
sbb
mov
fcoms
jg
mov
jo
jns
in
pop
movb
lea
pushf
mov
dec
adc
sub
js
es
and
lds
jbe
jnp
mov
imul
lahf
mov
rol
cmc
data16
das
mov
lock
sub
jmp
mov
and
in
jge
mov
pushf
sbb
mov
mov
pop
popa
cmp
push
loop
dec
and
cwtl
adc
test
repz
or
or
inc
xchg
xor
jp
ja
add
aas
iret
leave
fsubs
es
cmp
mov
inc
jo
or
adc
xor
mov
xor
mov
mov
push
push
xchg
mov
sbb
add
ljmp
cmp
in
adc
pop
inc
mov
aam
push
rorb
push
insl
pop
and
das
sti
push
ljmp
inc
nop
jge
ds
testl
fs
aaa
imul
xchg
pop
mov
cmp
iret
test
jg
push
in
shl
and
push
pop
mov
jo
add
pop
jbe
dec
jle
js
and
sbb
bound
ret
xor
dec
jp
pop
pop
add
sbb
lods
fdivrl
movsl
insb
stos
ret
rcl
push
mov
and
insb
push
sub
mov
cmp
loop
mov
dec
cmpsb
pop
nop
pop
lahf
es
pop
subb
pop
cmp
daa
daa
add
movsl
repnz
dec
clc
dec
inc
push
xchg
dec
push
sbb
stc
test
mov
cwtl
enter
add
fstps
sti
add
or
js
stc
ret
push
scas
hlt
dec
fucompp
push
pop
loop
add
mov
inc
add
push
push
sbb
lahf
or
inc
aaa
ds
pop
lock
mov
mov
loopne
ss
jno
and
adc
mov
mov
icebp
mov
sbb
rorl
in
outsl
fistps
push
in
test
cwtl
push
outsl
movsl
insb
add
sub
cmpsb
je
dec
out
mov
imul
or
and
lods
sbb
stos
mov
enter
popa
mov
xchg
adc
cmpsb
push
or
mov
and
sbb
movl
adc
test
or
push
test
sub
in
xor
cs
pop
jecxz
push
shl
cmp
cmp
hlt
jae
pop
xor
sub
rorb
out
fmul
sbb
pop
lahf
xchg
mov
mov
add
mov
outsl
repz
les
xchg
nop
xlat
dec
fadds
cmc
cmc
outsl
sahf
push
outsb
mov
fwait
lret
jge
fs
xchg
enter
sub
xchg
xor
jb
pop
ljmp
cmp
lds
adc
call
inc
and
in
push
ffree
cld
out
lcall
out
mov
loop
fsubp
or
pushf
je
dec
inc
lods
pop
sbb
xorl
sti
scas
dec
adc
das
test
cmp
sbb
in
cmpsb
pusha
pop
xchg
add
push
inc
pop
cmc
mov
dec
xchg
jne
jbe
or
dec
mov
or
imul
jle
into
adc
in
out
cmpsl
jmp
sti
xchg
mov
xchg
lods
ljmp
filds
test
popa
mov
push
fisubs
scas
scas
or
lcall
pushl
and
outsl
cmp
push
add
add
cwtl
mov
fstp
mov
mov
enter
mov
ljmp
cltd
jbe
int
xchg
pop
or
stos
js
negb
mov
adc
inc
xor
test
loopne
loopne
sub
inc
das
imul
leave
mov
stc
test
push
xchg
dec
jne
in
iret
test
xor
popf
js
inc
sbb
insl
push
lret
pop
shl
cmp
test
cwtl
pop
jns
push
lret
sub
shr
push
je
hlt
lods
pminsw
cltd
je
gs
repnz
pop
ficompl
std
cltd
mov
pusha
mov
xchg
ret
adc
into
lds
xchg
xor
sti
xor
xlat
push
sarl
fwait
rol
iret
push
mov
repnz
xlat
scas
cmc
out
test
fldenv
pop
in
push
mull
xchg
pop
outsb
push
gs
xor
jns
int
jecxz
sub
mov
je
les
or
sarb
push
push
inc
jle
add
pop
jp
pop
inc
mov
and
jg
into
mov
les
dec
sbb
mov
dec
inc
add
or
xchg
movsb
cmp
int
push
pushf
fwait
and
insb
cltd
and
mov
insl
lcall
arpl
mov
cmp
cmp
dec
sbb
and
into
aam
or
or
cmp
repz
adc
fildll
xchg
pop
cmp
cmp
pop
jmp
mov
xchg
push
pop
hlt
xor
jb
cmp
sbb
mov
loope
pop
push
and
inc
add
test
in
outsl
sbb
jp
gs
or
insl
rcr
push
inc
jmp
cmpsb
inc
sbb
dec
mov
cmp
or
jmp
mov
push
cmp
mov
xor
mov
clc
lds
outsl
bound
in
les
test
fwait
mov
cmp
dec
jp
rcrb
stos
adcl
jmp
and
xlat
cmp
repnz
jns
fcomps
xchg
stc
lahf
push
or
in
fisttpll
stos
or
movsb
xor
add
movsb
jb
cli
loopne
movsl
arpl
insl
addr16
orb
bound
xchg
in
mov
pop
add
pop
negl
ret
outsb
inc
inc
xor
mov
mov
jae
popf
sbb
pop
rcr
mov
rol
int3
leave
mov
sbb
mov
mov
movsb
sahf
push
fiaddl
mov
push
into
nop
xchg
pop
and
test
daa
push
pop
in
js
add
lret
push
sub
push
les
mov
push
adc
lock
scas
js
mov
mov
outsb
lock
jle
jns
rorl
shr
popf
adc
clc
lock
sbb
in
mov
arpl
test
mov
mov
jns
cmc
and
out
mov
cmp
es
dec
xchg
stos
pop
aaa
sbb
aad
push
add
std
cmpsl
addl
clc
inc
push
add
rol
movsl
push
xor
xor
push
xlat
or
xor
adc
cltd
jns
and
leave
loope
repz
int
push
jae
xor
jmp
inc
test
push
mov
cmpsl
clc
sub
insb
rcrl
cmp
lea
jmp
mov
dec
sub
xor
aas
cmpsb
sub
test
and
inc
sub
sbb
pop
mov
aam
cmp
pop
sbb
sub
xor
lahf
dec
pop
in
lahf
std
addr16
scas
mov
sarb
cmp
xor
push
mov
xchg
push
mov
sub
mov
adc
add
shlb
fs
push
cmp
sub
rcr
jns
dec
stos
mov
sbb
sbb
and
push
inc
popf
fdivrl
xor
mov
out
insl
aaa
push
idivb
sbb
mov
xor
popf
jp
ret
push
mov
adc
das
frstor
jmp
xchg
xchg
mov
jge
mov
sarb
imul
dec
pop
in
and
jl
sub
cmpsl
int
mov
sahf
add
out
je
xor
sub
mov
sti
and
dec
fsts
push
aas
rcll
mov
int3
stc
insl
add
jecxz
inc
repnz
pop
push
and
in
lods
pmullw
stos
aas
and
dec
in
mov
daa
push
pop
mov
xchg
pop
fidivl
push
and
fisubrs
fstps
testb
pop
pop
js
gs
mov
pop
add
jbe
repz
jb
mov
xchg
inc
movsl
mov
notb
push
or
shr
icebp
test
cmpsb
mov
push
sub
test
bound
mov
mov
mov
pushf
das
mov
inc
and
push
stc
outsl
sbb
in
adc
adc
xchg
inc
mov
aas
insb
loope
adc
rcr
pop
jge
lea
das
cmpsb
scas
jmp
add
xchg
push
push
inc
xchg
aam
sub
sub
insb
iret
adc
divb
push
lods
cmp
pop
mov
and
pop
mov
lods
cmp
jg
inc
jl
mov
call
push
xchg
xor
sti
xchg
mov
ret
inc
xchg
imul
adc
cli
xor
adc
pop
shl
dec
xor
xchg
mov
dec
insl
mov
cmp
lock
jae
adc
jno
jmp
xor
test
push
int3
cmp
into
jbe
cmp
mov
sub
sub
shl
inc
gs
movsl
lret
push
pop
loopne
pushf
pushf
pop
mov
jno
test
mov
stc
or
dec
mov
cwtl
mov
and
pop
ret
cmp
shrl
lods
and
std
loope
adcb
inc
stos
mov
insb
ss
pop
xchg
push
push
loopne
popa
in
adc
mov
cmpsb
repnz
lock
mov
loopne
inc
jno
xlat
jns
mov
movsb
out
adcl
cmp
push
push
mov
sbb
mov
cmpsl
test
lret
rclb
cld
inc
cmp
or
test
cmp
jns
lahf
push
data16
std
push
sub
mov
fimull
sub
jp
jne
mov
cmpsb
stos
pop
icebp
adc
xchg
or
addr16
shll
stos
lds
mov
repnz
push
iret
inc
in
cmpsb
es
stc
mov
xor
adc
andl
repnz
sbb
out
leave
pop
xchg
mov
pusha
mov
mov
imul
inc
in
push
in
pop
lahf
outsb
sarl
jb
cmp
out
bound
and
iret
movsb
sub
pop
addb
sub
lret
ss
and
and
push
xchg
pushf
rcll
ja
lds
sbb
dec
fcomps
insl
hlt
cmpsb
psllw
pusha
or
ret
mov
sahf
or
scas
mov
jecxz
das
and
lcall
xchg
push
out
pop
insb
inc
dec
mov
icebp
es
call
push
pop
mov
xchg
cmp
jnp
or
clc
push
push
out
dec
imul
cmp
cmp
dec
mov
or
adcl
stos
mov
adc
mov
xchg
subl
lret
jmp
inc
dec
sti
pop
shll
jg
xor
adc
mov
cmp
leave
loope
sub
movsb
nop
andb
jmp
test
cmp
cmp
imul
mov
mov
xchg
and
add
andb
dec
mov
jo
and
cwtl
jp
test
mov
and
test
jns
mov
lcallw
fistps
clc
xor
cli
outsb
loop
pop
loope
xchg
xchg
scas
sub
add
push
mulb
pusha
sbb
add
mov
mov
pop
filds
add
sti
mov
lcall
cmp
fdiv
mov
aad
subb
sbbb
jns
pushf
test
sbb
cs
pop
std
popa
or
insb
or
dec
sub
pusha
stc
dec
or
aad
xor
adc
ss
xchg
mull
add
xchg
xchg
jg
xchg
dec
push
sub
adc
mov
push
mov
mov
sub
leave
fnstenv
fistps
xchg
push
jecxz
jl
cwtl
push
mov
push
movsb
push
ret
mov
push
cmp
xchg
jg
mov
jno
cmpsb
mov
fstps
xchg
sbb
les
lret
sbb
inc
test
add
push
js
jmp
mov
inc
in
shrb
pcmpeqw
insl
jl
ret
pop
xor
movntps
jl
mov
std
fs
mov
repz
push
and
xor
loopne
mov
mov
or
cmpb
mov
ljmp
mov
dec
cs
pop
rorb
mov
test
or
lods
mov
xlat
or
pop
movsl
sub
repnz
sbb
xchg
dec
push
dec
popf
movb
xchg
push
sub
out
mov
jne
push
dec
out
orb
stos
jne
fcmovnb
fbld
lret
test
loop
sbb
mov
andl
push
imul
jmp
sti
mov
xchg
cmp
mov
push
and
xor
jecxz
mov
pop
ret
push
or
shll
jae
mov
ja
pusha
mov
mov
das
jo
jb
xchg
mov
mov
dec
cld
enter
aam
mov
push
jno
inc
jg
loopne
pop
je
mov
or
rclb
and
ss
fmuls
push
imul
jmp
sbb
or
xor
adc
mov
inc
test
scas
lret
xchg
les
data16
ret
cltd
out
pop
mov
or
push
movsb
dec
fimull
filds
dec
mov
es
or
and
enter
xor
ljmp
pop
xor
cmc
stos
sbb
stc
pop
jno
mov
lods
and
mov
lods
pop
js
jb
xor
xchg
outsl
add
sub
mov
jge
xor
sti
mov
movsb
aad
dec
shl
shlb
inc
mov
push
xor
xchg
dec
mov
jns
mov
cmp
cmpsl
jle
or
dec
jle
xchg
or
je
mov
jnp
xchg
mov
jno
mov
adc
push
sar
fcom
sub
int3
dec
jns
jnp
daa
cmpsb
cmp
push
jle
add
push
ljmp
xchg
lock
movsl
jle
mov
rolb
ss
sbbb
pop
push
dec
orb
adc
cmp
mov
pop
and
jg
inc
rorl
xchg
outsb
and
loopne
inc
and
std
ret
dec
gs
push
push
mov
enter
mov
pop
jle
jne
pushf
inc
pop
arpl
sub
repnz
inc
enter
and
push
jo
pop
ret
xor
mov
loop
ljmp
push
push
fcomps
push
insb
subb
cmp
xor
xlat
and
loopne
fsub
sub
ds
pop
dec
push
adc
dec
arpl
mov
push
cmp
scas
lods
sbb
pop
mov
cmp
sbb
int
push
xchg
fmul
rcrl
sub
sarl
mov
fdivrl
int
sub
gs
cwtl
popa
ljmp
adc
out
dec
xchg
sub
push
out
test
jmp
shlb
jbe
test
and
jb
push
xor
adc
les
lods
sbb
sub
dec
mov
in
inc
jg
gs
shlb
mov
jo
pop
mov
ss
mov
or
lods
or
mov
mov
mov
mov
and
jno
adc
sbb
insb
mov
cld
pushl
mov
loopne
hlt
inc
xchg
mov
and
ret
add
dec
flds
neg
lods
or
inc
ret
adc
inc
cmp
mov
adc
inc
push
cltd
xchg
enter
enter
ja
pop
cli
adc
sti
sti
jno
inc
cltd
aaa
movsl
jge
fstps
mov
pop
and
jecxz
xlat
negl
sarb
gs
sbb
mov
jp
enter
in
cmp
adc
adc
rclb
test
mov
cmp
mov
in
or
jne
sub
or
sahf
imul
out
mov
pop
shrl
dec
mov
pop
add
scas
jae
mov
push
dec
pop
stc
rclb
sub
xchg
xor
pop
pop
xchg
push
mov
and
movsl
je
ljmp
inc
fimuls
ret
jmp
sbb
jne
es
inc
ret
fmuls
rcrb
or
in
icebp
sbb
ss
add
pop
loopne
inc
in
mov
pop
js
ds
shrb
xor
repnz
test
cwtl
inc
mov
adc
mov
adc
mov
xor
mov
jecxz
fcompl
mov
inc
icebp
lret
repnz
es
fimuls
ds
je
xor
dec
dec
adc
jo
xor
outsb
rorb
jbe
cmpsb
and
mov
pushf
sbb
or
dec
or
jne,pn
into
popf
add
dec
lea
cwtl
cmp
lret
dec
stc
ja
clc
push
cmp
hlt
call
movsb
repz
gs
sti
dec
ja
sbb
or
adc
mov
outsl
out
jge
add
test
pop
sub
and
ljmp
and
and
ret
sbb
in
push
mov
adc
xlat
in
dec
das
cld
inc
cmp
pushf
cli
add
ja
xlat
pop
sbb
divb
ljmp
xor
add
ds
sbb
aaa
nop
adc
mov
add
mov
in
jl
rcll
mov
subb
fildll
pop
mov
test
push
jne
aaa
shlb
movsb
jae
push
out
or
ljmp
push
das
xchg
sbb
jle
sahf
jnp
adc
fistpll
mov
ds
pop
ret
sub
lret
jo
mov
cltd
js
mov
inc
sahf
push
in
pop
int
sbb
cmp
inc
pop
mov
add
std
loope
pop
xor
mov
sub
add
imul
jl
popa
push
dec
and
jle
jne
xchg
insl
pop
scas
jecxz
fcompl
mov
in
es
jo
rorb
ds
cmp
sbb
dec
dec
xchg
adc
jge
repz
arpl
add
cwtl
jle
fstl
out
adc
jo
jne
mov
cltd
xchg
lods
cli
in
enter
cwtl
push
mov
cmp
push
cmc
cmpsl
add
cmp
bswap
lret
movl
push
push
out
or
cmp
or
popf
or
scas
arpl
stc
mov
call
mov
inc
test
ret
lcall
test
pop
std
jle
pop
dec
mov
fnsave
jge
jne
loopne
mov
imulb
lock
pop
pop
xchg
leave
aas
repz
sub
out
or
loop
into
sbb
shll
sbb
sbb
sub
inc
mov
jno
push
scas
mov
std
push
aas
frstor
xor
pop
lock
out
pop
pop
movsl
imul
dec
stos
sarb
dec
mov
mov
icebp
add
out
inc
ficoms
dec
out
push
in
repnz
fwait
fs
lret
pushf
xchg
and
xchg
mov
rcl
sub
int3
xlat
movsl
cltd
int3
jp
and
push
shl
int
test
jp
add
dec
aam
enter
mov
mov
cmp
mov
jne
inc
int3
mov
pushf
push
dec
sub
iret
pop
in
jecxz
scas
dec
mov
out
int3
scas
push
push
add
xor
inc
addr16
pushf
cmpsb
sub
mov
stos
inc
mov
dec
mov
pop
and
xchg
xor
and
and
out
jns,pn
icebp
jns
xchg
and
xor
repnz
daa
xor
int3
dec
insb
testb
daa
xor
sbb
out
and
mov
test
fcmovb
daa
push
cld
pusha
xor
jno
xor
outsl
pop
dec
lods
pusha
pop
adcl
divb
pop
mov
stos
mov
es
lods
gs
std
gs
xchg
cli
adc
pusha
fidivrs
subl
or
repnz
movsb
xlat
pop
lret
pusha
push
sbb
stos
aas
jnp
pop
xor
inc
jae
fcoml
sbb
push
cli
jg
ret
fs
dec
sub
imul
push
sub
fwait
sbb
enter
dec
sub
notb
nop
sub
mov
hlt
sub
pusha
repz
cmpsb
mov
jp
sbb
add
stc
inc
mov
ds
pusha
xlat
mov
xor
adc
mov
jl
iret
dec
cwtl
lret
loopne
pop
xor
lods
pop
fstps
pop
arpl
push
ret
loopne
cld
cmovnp
aad
cmp
and
fimuls
mov
hlt
mov
gs
xor
mov
sti
movsb
popa
icebp
cmp
sti
xchg
ss
fwait
xor
aad
scas
sbb
clc
mov
gs
and
inc
divl
jg
addr16
jbe
sbb
lret
cmpsb
xor
in
pop
adc
fsubrp
out
shrl
pushf
pop
mov
arpl
sti
xor
push
loope
leave
fiaddl
xchg
pop
call
rcll
cmp
fiadds
sahf
xor
sbb
sbb
scas
dec
and
sub
orb
mov
cmp
inc
pushfw
lods
pop
or
mov
cmc
ja
mov
xchg
jle
jns
movsl
imul
mov
sbb
insl
les
dec
stos
cmpsl
push
xchg
push
in
mov
lea
icebp
in
push
sub
popa
inc
in
xor
mov
out
cmp
sbb
jb
mov
mov
js
xchg
cltd
push
enter
cmp
stos
cmp
jl
push
xchg
mov
push
inc
aas
sub
sbb
sbb
sub
push
inc
xchg
mov
sub
add
cld
aam
data16
and
pop
push
out
adc
js
push
andl
pop
mov
push
popa
lds
gs
outsb
repnz
lret
xorb
sub
clc
xchg
addb
jbe
cmpsl
sub
cmp
inc
pop
or
push
or
mov
xor
xor
lods
fwait
push
mov
push
mov
jle
pop
push
in
jp
lahf
hlt
lahf
push
incb
mov
rcll
test
sbb
stos
push
mov
dec
aam
cmp
hlt
jecxz
lea
add
sub
imul
pop
dec
sti
cmc
cmp
sbb
gs
pop
dec
rclb
mov
pop
mov
sbbl
sbbb
aad
jge
mov
push
shlb
outsl
xor
cltd
inc
mov
cli
lcall
stos
push
dec
outsl
push
les
jmp
aaa
jbe
push
sti
xchg
push
mov
js
hlt
or
cs
icebp
in
pop
lock
in
rol
inc
dec
ja
addr16
sbb
xchg
aaa
pusha
inc
cmp
mov
mov
in
mov
or
divb
popa
xor
test
cmc
stc
test
sarl
clc
add
stc
lods
fcomip
leave
add
xor
loopne
ret
inc
add
in
aad
lea
cmp
jmp
out
add
test
jbe
cltd
or
or
into
aad
ret
xor
pop
xchg
shl
sqrtps
xchg
movsb
hlt
push
dec
test
out
jecxz
jbe
popl
lea
outsb
cld
sbb
out
fcmovnb
mov
sbb
sti
xor
repz
into
dec
mov
bound
cmp
pop
lds
adc
cmpsb
xchg
adc
jp
ds
aad
call
jo
dec
addr16
cwtl
mov
cmc
cmp
mov
cwtl
cmp
adc
mov
orb
aaa
push
jno
sub
dec
push
in
add
inc
and
cmp
push
and
jp
outsl
mov
and
xchg
mov
jl
adc
add
in
and
mul
xchg
cmp
in
push
movsb
enter
pop
rcll
call
das
pop
xor
push
cmc
in
inc
ljmpw
test
pop
inc
sub
jno
inc
gs
loope
fidivrs
cmc
xor
aad
in
adc
mov
pop
add
mov
jns
int
rolb
mov
es
xor
inc
add
dec
stos
xchg
loope
pop
push
mov
push
in
sar
test
test
nop
mov
test
mov
nop
mov
jae
push
test
mov
add
mov
into
pop
xchg
push
std
cwtl
xor
test
mov
loopne
out
leave
mov
push
pop
add
popa
mov
fcoml
addr16
cwtl
dec
cltd
lahf
mov
sbb
sbb
fwait
addr16
xchg
adc
pop
mov
push
and
cmp
ret
push
bound
mov
test
fs
cmp
repnz
jecxz
int3
out
mov
pop
mov
out
mov
and
pop
sub
lahf
mov
fucomip
outsb
adc
fstps
mov
mov
fistpll
rcl
sub
mov
scas
lcall
dec
mov
xchg
xchg
sub
mov
bound
mov
out
add
cld
mov
sti
dec
mov
jb
iret
int
mov
mov
inc
jb
mov
test
pop
imul
mov
in
lcall
loopne
push
or
aaa
repnz
lcall
mov
popa
jo
cmc
pop
sub
test
mov
add
sub
out
mov
dec
inc
xor
inc
stc
shll
add
mov
xor
repz
add
xor
pop
fwait
rorb
ljmp
frstor
xor
mov
push
xorl
js
add
sub
sub
mov
lods
pop
rorb
push
ljmp
mov
popa
in
sub
sub
pop
mov
add
call
lods
or
add
sbb
pusha
ljmp
and
pop
inc
mov
jg
in
adc
xorl
in
dec
ret
mov
push
cmp
and
jne
shlb
lods
mov
ds
mov
jmp
adc
fsubp
push
dec
push
pop
es
and
push
loope
mov
mov
dec
popf
shll
cmp
jmp
int
mov
into
jo
cmp
imul
xchg
addr16
and
dec
sbb
gs
mov
lods
insl
add
imul
sub
cmp
sbb
jl
out
cmp
cld
pop
inc
in
ja
lods
push
mov
sub
repnz
clc
sub
ds
mov
jl
das
out
adc
sub
pop
clc
or
ficompl
jmp
xchg
popa
popf
cmpsl
ja
jle
outsb
dec
sarl
fldt
popa
push
dec
mov
shrb
or
and
mov
pop
add
xchg
imul
mov
mov
push
enter
shll
mov
pop
or
or
or
and
mov
mov
aam
scas
fistps
xchg
nop
mov
pop
and
orl
lods
in
mov
imul
jp
inc
mov
in
les
ficoms
movsl
mov
clc
push
stc
out
jne
add
mov
movsb
jle
mov
arpl
popf
imul
movsb
mov
in
out
adc
lods
andb
and
adc
pop
xchg
inc
jae
inc
ds
mov
and
roll
outsb
out
push
in
or
xchg
imul
fdivr
push
jb
mov
jo
dec
idiv
cmp
adc
mov
enter
mov
cltd
insb
push
sbb
adc
pusha
jb
push
jle
jnp
stc
ficompl
sub
dec
pop
inc
mov
push
sub
fs
mov
add
bound
into
cltd
ja
sub
cmpl
cmpsl
repz
jge
xchg
mov
jae
fcompl
inc
jbe
inc
xchg
fadd
or
cltd
mov
push
add
leave
popf
lds
push
movsl
inc
push
push
xor
or
mov
call
or
fsubs
dec
fldenv
jb
std
out
test
pusha
test
dec
push
sub
or
mov
add
xchg
enter
orb
and
std
daa
push
xorb
enter
pop
lods
pop
add
dec
xor
mov
rorb
in
jne
jns
xchg
xor
cmp
movsl
std
dec
jbe
sub
jno
and
daa
xlat
in
cld
fsts
sar
jecxz
or
and
jle
mov
pop
iret
and
loopne
mov
fcomps
mov
fildl
mov
pop
inc
aaa
adc
lock
sbb
mov
lret
sbb
and
cwtl
or
mov
gs
jns
pop
stos
fmul
jg
xchg
jb
gs
xor
sbb
push
cmp
pop
sbb
inc
jnp
in
push
push
xor
outsl
cmp
std
adc
pop
sub
sbb
xchg
sbb
push
cli
mov
xchg
adc
and
pop
int
data16
stc
push
loopne
inc
shlb
std
add
test
nop
sub
push
push
cmp
bound
dec
jge
test
xor
mov
sub
lea
fs
xchg
inc
sti
add
add
stos
sahf
sar
xchg
test
cmpsl
add
fucomi
repnz
lea
adc
fnstenv
les
pop
dec
cmp
cmp
dec
jo
inc
jl
inc
and
or
and
mov
jge
cld
bound
aas
push
or
push
aas
vmread
jbe
lock
dec
and
xor
cmp
iret
test
les
call
mov
test
getsec
jo
pop
rcrb
js
and
adc
xchg
mov
out
cmp
mov
fimull
cli
repnz
roll
inc
out
push
ljmp
mov
inc
xor
mov
pop
cmp
push
mov
inc
mov
pop
pop
enter
jge
mov
push
iret
insl
or
sqrtps
push
mov
jne
sahf
andl
popa
call
adc
xchg
arpl
dec
dec
add
cmp
cmp
ds
out
aaa
repz
pop
jae
mov
adc
xor
xchg
pop
cli
shlb
mov
xchg
cmpl
sub
xor
dec
pop
push
pop
push
popf
lcall
adc
ja
add
psubsb
setl
sbb
cwtl
push
mov
mov
adc
xchg
ret
lret
adc
andl
jbe
lods
out
or
push
hlt
pop
data16
push
daa
add
jmp
jge
adc
in
inc
lds
add
xor
xchg
add
imul
cmp
cs
jmp
rcr
cwtl
mov
cmpl
sub
clc
mov
fwait
mov
push
icebp
pusha
lret
outsl
sbb
leave
dec
andl
test
fiadds
jge
mov
sbb
cwtl
adc
dec
push
movsl
sbbl
fisttpll
pop
movsl
jns
bound
xor
sbb
mov
pop
mov
daa
in
je
cwtl
pop
ret
add
fsts
adc
push
sbb
or
dec
nop
mov
js
xchg
sbb
cmp
fnsave
inc
and
ljmp
cld
cmp
pop
pop
xchg
movsb
mov
mov
mov
aad
addr16
fcomi
lods
push
or
std
adc
imul
sbb
sbb
arpl
mov
xchg
jl
mov
dec
push
mov
lahf
adc
out
fsubrl
xchg
pusha
dec
daa
pop
dec
mov
mov
es
add
mov
xor
mov
out
mov
and
dec
xchg
cmc
sub
iret
adc
mov
repz
adcb
orl
dec
xchg
mov
aaa
sub
iret
jge
push
pop
sub
xchg
movsb
stos
test
out
cld
mov
sub
dec
or
pop
inc
dec
add
fs
cs
or
mov
add
shl
add
cmp
jae
cwtl
fcompl
lret
and
inc
mov
inc
into
sbb
dec
movl
lea
sub
pop
decl
out
in
enter
test
pop
and
and
pop
test
clc
inc
jge
mov
popf
jge
pusha
and
sbbl
mov
cmp
es
push
out
test
fimull
xchg
imul
repz
addl
enter
jmp
lods
imul
fdiv
movsl
sub
mov
leave
sbbb
ljmp
clc
mov
lret
outsl
push
ret
test
sub
dec
cmpsw
sti
movsl
push
jne
cmp
pop
inc
pop
cld
cmp
movsb
dec
lcall
dec
loop
insb
push
movsl
sbb
ret
mov
gs
adc
mov
and
arpl
mov
mov
test
aaa
hlt
adc
adc
sub
pop
mov
clc
or
and
cmc
and
fwait
sub
push
xchg
mov
add
sar
scas
push
pop
movsl
js
ss
adc
pop
or
xchg
cmp
push
and
jns
dec
sahf
mov
faddl
adc
repz
and
out
push
outsl
xor
xor
and
ljmp
lds
jl
dec
shrb
sbb
sbb
jp
mov
std
xor
adc
and
in
inc
mov
stc
test
or
sub
pop
mov
out
push
push
inc
out
stos
xor
pop
xchg
inc
push
xor
jge
xor
aad
out
push
mov
lahf
pop
lods
cli
mov
lcall
in
mov
cmp
xlat
xchg
sub
fisttpll
jo
add
out
mov
divl
xor
mov
inc
sub
ljmp
scas
mov
iret
mov
iret
pop
into
cmc
and
adc
inc
xchg
dec
js
xchg
xchg
popa
jb
xchg
and
dec
xchg
push
hlt
jecxz
add
add
or
jl
mov
push
je
loop
inc
fbld
shl
mov
fcompp
movsl
xchg
mov
iret
or
mov
fldcw
fstpl
or
pop
clc
sub
fdivp
adcl
and
mov
mov
cli
stos
ds
push
mov
xor
and
adc
in
push
dec
mov
push
pop
repnz
mov
jno
lcall
test
jg
inc
pop
sbb
decl
jmp
sbb
xchg
pop
std
fimuls
sub
or
or
lahf
fists
rcll
fimuls
sbb
fistl
lods
sub
stos
push
test
lahf
dec
mov
push
and
sbb
inc
xchg
mov
cmp
leave
mov
fwait
rcrl
push
rcr
pop
cld
ror
push
mov
fadds
ljmp
outsl
jb
xor
mov
inc
mov
xor
pop
bound
addb
push
inc
shll
mov
shll
sub
jno
push
jb
mov
enter
pop
xchg
das
roll
push
pop
add
int3
jp
rorb
inc
ret
icebp
mov
test
aaa
adc
adc
fwait
push
aad
jo
test
mov
insb
pop
inc
lret
cmp
xchg
clc
cmpsl
and
enter
add
test
movsb
dec
cmp
fs
cmp
std
in
push
xchg
inc
add
iret
in
sbb
adc
xor
mov
je
mul
push
movsb
xchg
insl
push
addr16
mov
movsb
outsl
dec
shrl
sbb
rol
mov
mov
mov
cmp
mov
adc
and
paddsb
pop
pop
or
clc
testl
mov
xchg
jns
jnp
jo
xor
inc
mov
popa
fptan
lods
inc
cmp
inc
or
cmpsl
inc
jae
int
jne
and
mov
fsub
mov
jecxz
imul
cmc
and
in
clc
add
popf
icebp
clc
inc
jge
jecxz
or
test
push
jge
fists
push
incb
jmp
pop
mov
in
int
imul
push
cmpb
jecxz
add
cmc
rorb
or
xchg
adcl
or
add
test
in
sahf
sbbb
xchg
mov
pop
int3
pop
jp
inc
mov
fadds
jle
stc
xchg
sub
mov
lret
mov
test
ja
daa
enter
bound
jecxz
cmp
in
bound
xchg
ljmp
int
mov
cltd
cli
loopne
inc
lds
cwtl
mov
push
cmp
jne
or
lods
in
jno
inc
pop
fwait
cmp
and
aas
inc
repz
in
cld
fsubrl
xchg
enter
jle
sbb
mov
xchg
jp
sbb
jnp
pop
adc
push
xor
mov
adc
dec
mov
xchg
push
lds
sub
sti
lds
add
add
xchg
sbb
lds
aas
rcrl
push
jne
fwait
xor
lds
dec
push
aad
shll
fxch
fldenv
pop
adc
in
dec
inc
insl
faddl
pop
sar
movl
outsb
stos
sbb
jg
inc
enter
dec
loopne
aas
aas
arpl
scas
ror
sub
cmp
push
mov
push
sub
and
push
xor
mov
ds
out
leave
out
push
xchg
inc
push
cmpsl
les
sub
and
xorl
movsb
in
mov
fstpt
cmp
fwait
lcall
adc
int3
jmp
sbbl
xchg
jg
adc
pop
ret
adc
xchg
xlat
xor
mov
pop
lds
jne
adc
movsb
ljmp
and
imul
std
inc
aas
rcll
repz
insb
mov
adc
in
xor
xor
bound
xchg
insl
dec
pop
mov
cmpsl
mov
sbb
test
dec
imul
fwait
pop
xchg
push
mov
pop
jno
shl
sub
es
mov
xlat
and
mov
pop
fwait
test
xor
mov
icebp
or
mov
sti
fimull
push
mov
shlb
add
in
push
in
lcall
adc
es
inc
testl
sbb
and
lock
in
ljmp
cmp
rcr
push
jp
in
jl
popf
jnp
inc
or
ljmp
iret
mov
loopne
or
jo
inc
sti
xor
dec
test
or
fisubs
or
mov
ljmpw
mov
test
jle
and
jecxz
icebp
addl
jo
leave
out
out
rclb
inc
into
and
xlat
or
pushf
add
lods
jae
sub
sti
pusha
jae
bound
mov
imulb
xchg
or
lock
cmp
or
cmp
or
xchg
jo
lds
mov
xchg
push
stos
fcom
cli
push
outsl
add
loopne
mov
pop
iret
jmp
mov
add
outsb
fisubrs
ret
jns
dec
push
push
jle
mov
mov
jge
aaa
mov
call
mov
fmull
repz
inc
inc
icebp
jb
mov
jnp
fsubrs
jg
in
arpl
fbld
int
sbb
xor
mov
mov
add
ja
int3
sti
shr
in
scas
in
mov
pop
or
shrb
popa
mov
jnp
dec
dec
adcb
xchg
imul
popa
cmp
mov
xchg
cmpsl
data16
xor
push
in
mov
repnz
push
xor
add
xchg
call
adc
mov
xor
and
packsswb
or
aaa
mov
inc
mov
data16
int
cli
fisttpl
sub
stc
aad
cmp
outsl
jmp
lds
fld
test
fistpl
adc
push
fisttpl
jb
lret
xor
or
fisubs
cmp
call
add
call
lods
xlat
add
andb
rcrb
jbe
lret
lcall
sub
fildll
aas
sahf
stc
enter
shr
stos
cmp
sub
sbbl
lret
sbb
xor
js
test
dec
jno
sub
pop
sbb
repnz
jecxz
sbb
aad
addl
out
ret
sahf
xchg
shlb
mov
pop
and
pop
add
sub
inc
push
aas
add
sbb
mov
es
decl
fcoml
outsb
cmp
faddl
popf
and
je
sub
push
mov
pop
mov
lahf
push
iret
out
mov
xlat
or
cli
subl
cmp
in
cmp
sarl
push
test
lret
sbb
into
adc
and
insl
fldl
cltd
lahf
insb
adc
xor
pop
pushf
adc
lcall
and
roll
mov
jp
imul
fldenv
dec
insb
stos
sbb
rcll
push
mov
arpl
sub
loop
roll
mov
sub
scas
jbe
cwtl
mov
add
in
std
pop
pop
aaa
sub
jno
cmpb
inc
fildl
and
push
out
stos
pop
lds
pop
incl
and
mov
and
and
and
mov
sbb
xchg
add
call
pop
aam
pop
fidivs
sub
pop
dec
lret
jecxz
lret
jns
or
push
mov
fdivs
loopne
mov
jne
es
loope
ficompl
or
inc
test
mov
movsl
add
mov
and
mov
lret
add
mov
arpl
xchg
cmc
loope
mov
and
aad
mov
and
divl
cs
cmc
or
int
out
arpl
adc
out
ret
push
stc
jg
loop
clc
sar
ss
loopne
xor
insb
xchg
pop
jmp
ljmp
mov
sbb
and
mov
xchg
loopne
add
mov
mov
pop
daa
push
fcmovnb
sbb
cmp
jmp
movsb
maskmovq
idivl
or
pop
in
subb
outsl
rcr
sub
int3
add
mov
cmp
mov
mov
orb
mov
xchg
aam
or
dec
ficompl
cmp
sub
push
orps
addr16
adc
scas
mov
test
nop
dec
out
or
jbe
es
stc
jnp
add
repz
insb
and
jnp
lea
fimuls
push
add
and
popf
data16
clc
push
sub
adc
aas
cmp
add
stc
out
jmp
xchg
mov
rcrb
xchg
and
xchg
icebp
xchg
outsb
out
add
rcrb
push
xlat
mov
scas
cmp
cmp
fs
xchg
jo
pushw
pop
pop
int
xchg
mov
push
sub
test
iret
pop
inc
fistps
out
mov
mov
mov
cmp
pop
jge
xor
xchg
clc
pusha
popf
push
pop
pop
jne
pop
inc
and
dec
jno
test
jmp
or
pop
aam
loope
iret
sbb
adc
dec
xchg
or
dec
js
xor
cmp
ret
aad
mov
cmp
aaa
jmp
xor
sti
stc
or
addb
push
clc
adc
jle
stos
xchg
std
sbb
jmp
pop
cmp
inc
or
ljmp
push
std
iret
icebp
adc
xor
xchg
icebp
add
xchg
cmpsl
out
pop
xchg
int3
adc
dec
push
in
sub
test
fs
and
clc
cmpsl
dec
out
inc
rcrb
ret
sbb
roll
sbb
cmpsl
dec
or
scas
mov
pop
xchg
mov
notl
push
roll
pop
jecxz
jnp
mov
jo
fisubrs
add
imul
aad
fldt
fnsave
ljmp
rcrl
cmpsl
sub
pop
lret
leave
js
mov
subb
mov
imul
sub
xor
rorb
and
xor
inc
insl
test
pop
sbb
mov
xchg
mov
inc
cmp
push
outsb
push
test
aaa
sub
nop
mov
xchg
cs
push
push
xor
pop
in
xor
popa
adc
pop
pop
and
sub
push
in
sbb
inc
lcall
in
leave
dec
and
loop
xchg
inc
pop
je
mov
jo
cmpsl
adc
pusha
sub
in
xchg
adc
or
adc
xor
lods
daa
xchg
mov
jo
mull
cmp
mov
push
pop
repz
add
fimuls
cs
pop
dec
les
aaa
lods
pop
jp
xlat
sahf
push
fimuls
jo
notb
addr16
hlt
jns
and
jnp
jmp
jp
push
xchg
push
mov
mov
rolb
iret
in
jg
and
testb
push
mov
mov
adc
aaa
jmp
jg
data16
mov
sub
test
test
inc
or
or
adc
aaa
lret
pop
leave
pop
mov
and
ret
push
fisubs
add
ljmp
mov
sub
mov
test
or
sub
sub
cmp
lea
std
mov
lock
xlat
outsb
out
mov
and
insl
mov
xchg
rcr
cli
cmp
lret
pop
shr
fsubr
das
daa
adc
mov
lea
xlat
jecxz
in
inc
sub
pusha
repnz
cmpsb
test
movsb
inc
js
xchg
adc
pop
jmp
ret
lods
cltd
insl
push
cltd
mov
sub
jg
rcrl
xchg
in
das
xchg
dec
test
sub
lcall
xor
xor
inc
andb
mov
xchg
inc
ja
jp
and
fdiv
pusha
das
rcl
push
push
lret
xchg
daa
push
ss
push
repz
das
fimull
xor
idivl
mov
arpl
push
outsb
in
mov
popa
dec
and
mov
andl
mov
ss
mov
jbe
in
add
cltd
or
pushf
push
add
lock
outsl
push
ljmp
xor
pop
mov
leave
sbb
sbb
outsb
mov
mov
data16
scas
hlt
mov
addr16
aam
aas
pop
lods
pop
pushl
movsb
sub
push
or
cmp
inc
sbb
sub
lods
sub
ja
add
jecxz
pop
icebp
mov
sbb
negl
repnz
dec
xchg
cmp
lods
insb
addr16
shrl
push
dec
stc
fcompl
push
aaa
cld
out
inc
xchg
dec
mov
sti
gs
add
outsl
cld
mov
fisttps
in
ja
jg
ljmp
cltd
fcompl
test
pop
pushf
sub
daa
cmp
mov
lret
js
test
mov
cli
imul
in
out
inc
cwtl
ret
mov
out
out
or
adc
sbb
cmpsl
xor
push
sub
xlat
scas
loope
mov
pop
push
mov
fildll
stos
stc
ss
sub
xor
pop
jnp
jnp
das
fs
lods
lods
pop
dec
outsl
out
push
fdivrs
lea
mov
lret
and
nop
loop
xchg
mov
jle
pop
or
add
pop
jo
insb
rorl
xor
pop
bnd
insl
mov
out
add
fldcw
inc
test
clc
out
in
xor
cmp
enter
scas
xor
shll
sbb
sub
sub
sub
gs
movsb
iret
in
es
pushf
xchg
mov
sbb
add
ja
lea
push
dec
jbe
xchg
dec
mov
int3
dec
mov
insb
dec
jecxz
cwtl
das
push
popf
mov
mov
stos
push
lahf
in
dec
adc
ret
fwait
mov
xchg
loopne
movsb
stos
jno
mov
cmp
sub
mov
out
mov
cmc
lods
ja
aaa
adc
outsb
jo
insb
adc
outsl
xchg
fildll
jne
je
jb
pop
mov
and
mov
jnp
sub
movsl
outsl
pusha
xchg
sbb
outsb
popa
or
mov
dec
adc
fidivrs
es
mov
mov
dec
push
sbb
into
add
push
fimull
cltd
sbb
test
mov
pop
xor
je
cld
sub
push
lods
or
sbb
mov
fwait
rcrb
ret
hlt
test
imul
divps
bsf
inc
scas
lahf
cli
mov
jg
les
lcall
and
xlat
ljmp
sub
dec
jo
jo
jo
and
xchg
push
push
add
adc
sahf
mov
mov
fdivrs
inc
dec
lods
mov
cmpsb
adc
popa
cmp
push
jb
std
ret
xchg
mov
fcompl
adc
sbb
sti
cmpsb
movl
popf
rcl
imul
int
sub
or
std
pop
cmpsl
mov
sbb
mov
imul
push
mov
mov
outsl
jp
rcrl
pop
mov
mulb
lods
cmp
or
divl
add
pusha
cld
fnstenv
shll
lock
xor
push
imul
mov
test
imul
fs
push
sub
mov
xor
jbe
mov
adc
cmp
sahf
cmp
sbb
movsl
arpl
dec
push
in
inc
cmp
ficoml
or
cmp
fimull
test
js
popa
outsb
jmp
loop
xor
jns
jb
xchg
push
aaa
adc
fstp
outsb
loopne
push
mov
or
cld
pushl
xlat
fldenv
jne
arpl
enter
xor
in
add
stc
xchg
push
mov
aas
cs
stos
sub
push
mov
inc
lahf
pop
add
gs
lods
loope
pop
or
idivl
mov
cmp
xchg
mov
xchg
cld
aas
subl
fcoml
cmp
nop
insb
fistpl
pop
mov
dec
nop
addr16
xchg
daa
pop
leave
stos
pop
mov
adc
sbb
add
ret
cmc
xor
out
add
cmp
sti
sub
add
movsl
test
fsub
orl
call
int3
lods
sub
mov
imul
mov
xchg
xchg
cli
movsb
pop
in
adc
mov
inc
cmpsb
imul
les
icebp
ja
jmp
adc
mov
int3
stc
pop
jnp
dec
jns
arpl
fwait
lcall
lcall
add
pop
insl
mov
xor
sub
sbb
mov
sbb
movsb
pop
call
xor
rclb
arpl
jne
mov
push
or
mov
push
stos
xlat
fs
mov
mov
push
or
stos
pop
jbe
xorl
les
fbstp
scas
testb
pop
scas
xchg
mov
push
scas
sbb
mov
pop
fcomip
mov
iret
inc
xchg
push
add
xor
sub
addb
cmp
dec
inc
cmp
dec
mov
and
ja
xchg
sar
push
notb
xchg
arpl
and
test
fisubs
int3
mov
xor
mov
dec
xor
test
push
in
mov
push
stos
sub
lahf
fistpl
fists
xor
mov
arpl
mov
mov
filds
lret
push
test
jge
int3
mov
inc
popa
adc
ja
adc
xchg
and
stc
in
faddl
fwait
jp
bound
cmpsb
insl
push
ficoms
push
dec
ljmp
jecxz
mov
pop
adc
push
xchg
int
out
mov
fwait
push
mov
mov
outsb
pushf
lahf
into
sbb
loope
adc
push
mov
clc
adc
andb
mov
ja
add
cmp
arpl
dec
dec
cltd
jo
stc
test
mov
icebp
dec
das
inc
shrl
fcomps
mov
ret
outsb
ficoml
jno
adc
std
inc
lods
sub
xchg
add
mov
inc
addb
adc
iret
inc
lods
addl
mov
testb
mov
sub
push
add
lock
mov
xlat
jnp
xor
sbb
lcall
orb
push
xorl
adc
jp
data16
pop
jge
push
outsb
sti
cmp
mov
fnstenv
or
adc
ja
movsl
ficoms
addr16
es
cmp
fisttpll
popa
jbe
inc
pop
out
incl
aas
sub
add
xchg
lar
into
xchg
pop
into
popl
dec
mov
mov
fmulp
lcall
arpl
out
jo
xorl
xor
sub
push
roll
aam
dec
loope
xchg
mov
loopne
push
movntps
sub
mov
mov
icebp
mull
or
mov
sbb
js
outsb
mov
add
xchg
jp
sub
fists
sbbl
pop
xor
jae
inc
dec
adcl
mov
jg,pt
jle
hlt
mov
mov
in
mov
scas
cltd
cmpsl
imul
into
mov
cmp
mov
xor
cli
movsl
adc
lret
add
fistpll
daa
repz
jmp
movsb
push
rorb
add
call
dec
add
mov
cmpsb
mov
cltd
adc
hlt
cmp
push
xchg
call
xlat
or
or
pop
psrad
cmp
dec
xlat
rorl
aam
gs
mov
test
xchg
into
cmpl
jb
movsb
push
inc
cmp
ret
dec
dec
sbb
repz
sti
cmpsl
push
scas
nop
test
dec
cmp
inc
cli
adc
cmp
add
cmc
cmc
sbb
inc
jnp
push
inc
add
mov
and
and
adc
lds
aas
xchg
cltd
sahf
cld
jno
mov
scas
pusha
push
xchg
hlt
sbb
dec
jmp
sbb
clc
leave
fsub
hlt
xor
idivb
nop
frstor
pop
dec
dec
stos
je
arpl
fucom
scas
or
adc
inc
xor
pop
jg
cwtl
js
addr16
test
dec
inc
jbe
ret
cmpsl
hlt
insb
inc
add
inc
jmp
xchg
clc
add
inc
mov
movsl
mov
push
pop
jne
rcr
mov
mov
adc
mov
mov
dec
pop
inc
loope
rolb
sbb
pop
xor
jns
popa
adc
jne
loope
push
cli
dec
stos
mov
xchg
push
pop
push
sbb
imul
and
test
std
cs
xor
xor
into
test
mov
jne
stos
mov
aas
pop
jnp
push
push
cmp
das
iret
cltd
mov
push
pop
cli
inc
or
nop
lods
push
and
lock
sub
jae
and
xchg
mov
mov
inc
call
cmpl
add
or
mov
test
imul
push
test
sub
leave
and
dec
jmp
mov
out
bound
jb
mov
test
fs
cmc
sub
push
in
mov
and
xchg
mov
push
pop
jnp
sbb
es
xor
es
cmp
jge
js
add
aam
sbb
or
aam
inc
xchg
mov
jb
pop
cwtl
addb
push
rcrl
jg
inc
ljmp
sahf
int
sub
sub
xchg
daa
stos
sub
int3
repnz
or
leave
mov
mov
sub
enter
lahf
dec
ja
cmpsb
notb
outsl
mov
sbb
mov
push
add
inc
mov
xchg
mov
sub
dec
dec
mov
and
test
fistpl
daa
cmp
dec
sahf
mov
mov
mov
add
movsb
inc
inc
test
ret
xor
cmp
mov
inc
mov
daa
scas
xchg
pop
ss
leave
shll
adc
ds
push
out
pop
xchg
or
mov
movsl
cld
or
lock
xchg
pop
jbe
bound
or
out
and
sbb
cltd
sarl
sbb
sub
mov
sub
add
mov
fsubrs
test
lea
pop
fcmovnbe
cmp
add
adc
and
std
push
push
push
push
in
into
in
xchg
loop
pop
outsb
pop
arpl
xchg
loopne
push
jbe
adc
js
add
mov
or
hlt
xor
push
push
add
and
mov
outsl
dec
inc
bound
fs
fisttpl
mov
sarl
jno
cmp
fnstcw
je
adc
mov
jae
bound
cld
or
cmp
cltd
outsl
jl
push
sub
popf
imul
xchg
fidivl
cmc
fs
or
iret
push
out
jmp
loopne
add
push
mov
cmp
lea
dec
mov
cmp
popa
or
int3
pop
cmp
jbe
add
popa
cmpsb
mov
sbb
inc
arpl
stos
mov
adc
loop
push
xchg
sub
fisttpll
outsl
mov
arpl
test
loop
stos
loopne
ljmp
mov
cmp
dec
jbe
aam
sbb
ja
xchg
cmp
lahf
imul
fwait
scas
mov
pusha
das
stos
ljmp
sbb
rorl
dec
nop
fnstcw
in
scas
pop
cmp
not
sub
lea
into
gs
push
outsl
or
add
xchg
mov
rolb
pop
adc
add
jo
cwtl
push
jae
sbb
ds
pop
pop
inc
and
dec
cwtl
push
inc
out
in
push
ja
ljmp
and
adc
aas
scas
sub
lcall
rorb
sti
sbb
das
xor
add
dec
outsl
sbb
movsb
icebp
out
cwtl
inc
call
fwait
sbb
push
test
sbb
push
push
pushf
sub
or
rorl
ss
out
mov
cmp
sub
pop
dec
xor
out
and
sub
sub
out
fwait
mov
out
cmp
xchg
fiaddl
push
clc
push
and
push
mov
mov
xchg
sub
movq
xchg
test
and
dec
xlat
mov
rcrl
sub
loope
pop
lds
cmpsb
gs
je
int3
cmp
jl
xchg
add
lret
or
es
mul
pop
int3
jns
das
out
pop
aas
fimull
out
aam
pop
movsl
leave
add
outsb
add
je
and
in
in
repnz
jne
imul
jo
push
jnp
xor
pop
mov
push
test
xor
sub
ds
lea
int
jg
push
sbb
lret
dec
sbb
mov
ficompl
mov
and
xchg
aaa
inc
add
daa
add
daa
sbb
andl
popa
mov
dec
mov
jl
jecxz
mov
outsl
clc
lret
lcall
jle
jmp
sarl
xchg
cmovbe
sub
sti
in
mov
dec
add
or
imul
push
cld
out
pop
dec
stos
mov
scas
inc
xchg
mov
mov
dec
repnz
mov
sahf
add
movsl
push
cmp
pop
adc
push
lock
lret
mov
cmp
add
out
push
imulb
aad
loop
dec
test
mov
lahf
hlt
dec
pushf
push
sbb
push
mov
mov
inc
pusha
dec
test
pop
lret
stos
fbld
cmp
xor
int3
cltd
imul
cmp
cli
addr16
pop
mov
xchg
negb
xor
push
xorl
jp
mov
das
or
imul
fwait
mov
roll
xor
pop
pop
xchg
push
psraw
mov
mov
sub
arpl
jle
mov
mov
mov
mov
aas
push
inc
lea
mov
arpl
jne
mov
imul
and
adcb
popf
xlat
popf
mov
adc
mov
push
stos
stc
and
cmp
dec
push
je
das
movsl
pushf
cmp
iret
sbb
jl
xor
or
cmp
mov
cmc
insb
fstps
inc
mov
popa
sub
iret
jb
or
xchg
jmp
mov
or
stos
ds
cmp
lock
rclb
repnz
push
or
fnstcw
pop
dec
lds
sbb
js
mov
or
lret
fwait
sub
cmp
jnp
sbbb
and
or
xor
mov
and
mov
jb
jg
add
or
push
or
gs
dec
fdiv
not
sbb
cmc
mull
adc
cmp
std
cltd
mov
cli
mov
adc
dec
push
cmp
test
out
ljmp
push
dec
sti
rcll
sbb
sbb
sti
push
inc
scas
push
nop
push
loope
xchg
xor
sbb
aad
gs
test
fistpl
push
inc
xor
sbb
out
jb
call
mov
cmpsl
sub
mov
or
movsb
hlt
stos
rcll
mov
mov
popa
cltd
mov
movsl
jle
in
dec
mov
add
stos
xchg
insb
add
mov
and
xchg
inc
jae
fsubl
push
mov
push
jp
and
addl
insb
sti
mov
loope
adc
xor
test
push
cmp
lock
push
cmp
out
adc
adc
push
testl
or
aas
shrb
push
or
mov
adc
fstpt
in
push
outsb
push
jae
and
inc
lea
sbb
into
push
add
lods
mov
jmp
xchg
pop
inc
xorl
js
or
and
cmpsb
stc
or
hlt
xchg
lret
jmp
or
repz
xlat
lods
inc
or
dec
cwtl
ljmp
cltd
push
aas
inc
mov
shl
lahf
jbe
lret
xchg
mov
sahf
pop
nop
loope
cli
cmp
pop
jae
xchg
imul
shlb
aas
adc
lea
sub
hlt
xchg
cmp
and
loopne
add
sbb
pop
mov
adc
call
mov
test
adc
mov
and
stos
sbb
les
mov
mov
push
or
mov
lods
cmp
mov
pushf
mov
addr16
and
fstpt
sub
sahf
push
insl
test
andb
mov
pop
lock
sub
ret
outsl
mov
cmp
mov
mov
dec
fisubrl
popf
pop
jo
test
or
shlb
rorl
andb
inc
scas
fs
sub
cmpsb
mov
into
test
adc
fs
cmp
cmc
insb
lret
pop
mov
mov
mov
inc
lret
sbb
mov
mov
popa
pop
and
in
jg
lock
mov
gs
push
lods
cmp
ss
sub
out
fs
int3
cmp
clc
popa
in
int3
int
cwtl
in
gs
scas
xlat
mov
adc
push
aaa
adc
lods
sti
xor
adc
cmp
push
add
mov
pushf
ret
add
out
jbe
xor
pop
loope
and
mulb
sti
mov
lds
mov
shrb
repnz
inc
ret
adc
rolb
out
cmp
mov
aam
dec
pop
jne
cmp
iret
std
dec
movsb
aam
and
sbb
cwtl
outsl
lods
mov
repnz
inc
push
mov
push
xchg
mov
dec
fwait
cmc
mov
pop
aad
sbb
pusha
inc
add
lcall
xchg
cmp
jno
out
mov
loope
cmp
or
xor
pop
mov
dec
adc
jno
cli
ljmp
dec
lret
stos
repz
xchg
test
pop
adc
xchg
mov
add
mov
mov
push
push
sarl
adcl
repnz
push
dec
pop
adc
stos
pop
pop
sub
mov
rorl
mov
gs
hlt
jnp
or
pop
idivb
in
pop
xor
xlat
or
cmp
test
fstpt
push
popf
clc
xor
dec
jle
jecxz
push
test
xchg
sti
lock
jno
leave
dec
push
fdivs
test
mov
pusha
in
fldenv
mov
push
mov
movsb
jo
inc
cmp
fcompl
dec
sub
sub
push
cmc
hlt
repz
or
in
inc
imul
push
adc
add
lahf
adc
ja
xor
shrb
xchg
cmpsb
testb
xor
lock
leave
add
lods
cmp
lcall
sbb
movsbl
sbb
je
push
cmpsb
lret
testl
or
sahf
push
mov
pop
lahf
daa
sarl
fidivl
rorb
leave
sbb
cmp
adc
inc
aam
or
cwtl
loopne
xchg
iret
gs
jns
adc
js
gs
daa
sbb
fildll
push
fcompl
cld
push
into
xor
xchg
inc
mov
dec
in
inc
pop
scas
or
sbb
jae
add
sbb
inc
rcrb
adc
pop
aam
jle
shrb
les
aam
mov
jo
dec
or
xchg
ret
aaa
movsl
push
mov
test
mov
mov
movsb
mov
sub
pop
cwtl
test
xchg
xor
mov
outsl
xor
out
push
jle
mov
movsb
sbb
loop
es
inc
xor
adc
xchg
stos
addr16
aad
psubusw
mov
jecxz
movsb
ja
xor
jne
mov
inc
repnz
popa
jge
lcall
push
jo
mov
and
push
push
in
xchg
add
stos
mov
xchg
xor
sbbb
inc
test
sti
das
cmpsb
pop
out
xor
mov
adc
and
dec
mov
rorb
xchg
fwait
dec
xchg
and
add
adc
repnz
les
scas
push
mov
fcoml
cmc
popa
xlat
inc
negb
push
adc
rorl
add
in
mov
cmp
in
dec
push
loop
cmp
pop
jno
jmp
jns
repnz
sbb
mov
mov
test
into
dec
xor
mov
mov
mov
fstpl
enter
scas
sahf
or
loope
xchg
shl
les
ss
sub
fs
int3
imul
sti
or
push
add
addb
or
dec
jl
cmc
ret
mov
push
jecxz
pop
aaa
enter
test
push
xchg
ja
add
xor
movaps
and
dec
jns
loopew
mov
jne
ja
aaa
imul
cmp
pop
push
cmc
imul
in
call
fldenv
xchg
mov
imul
rclb
shlb
loopne
data16
fcomip
outsl
insl
mov
das
and
mov
cltd
sbb
cmpsb
push
data16
mull
pop
mov
jb
mov
bound
or
sbb
call
and
mov
cmc
mov
sbb
inc
stos
push
mov
mov
ds
mov
cltd
adc
lcall
outsl
lahf
fwait
popf
and
arpl
sti
add
mov
test
mov
insb
pusha
imulb
and
aaa
js
outsl
xchg
jp
sbb
push
fcoms
sbb
lods
hlt
mov
insb
aad
xor
fsubl
pop
iret
fisttpl
cli
cmp
cmpsl
cmp
insl
cltd
mov
test
push
sbb
lret
and
lret
push
aad
hlt
hlt
xor
outsl
mov
and
sbb
push
sub
outsb
in
loop
cltd
mov
in
loop
cmp
cmp
leave
push
push
adc
inc
sti
fwait
sarl
mov
fldt
xor
dec
mov
insl
dec
sub
loop
push
pusha
fistpll
stc
adc
add
dec
lahf
sbb
inc
mov
int3
je
lock
loop
rcl
push
or
nop
test
inc
aam
adc
mov
jmp
inc
jnp
push
push
ja
cmc
aam
scas
and
sbb
jnp
sbb
mov
das
mov
daa
aaa
dec
hlt
jb
xor
mov
jp
dec
mov
push
xor
push
lods
addb
ret
mov
lods
inc
add
fsubrs
adc
push
ja
mov
mov
sbb
xor
pop
mov
scas
or
iret
inc
in
out
mov
test
or
xor
mov
jb
fs
push
mov
fs
mov
jp
and
fwait
xor
ja
pop
ds
stos
sub
mov
adc
and
adc
sub
xchg
xchg
nop
cmp
aam
dec
das
lret
mov
jnp
jecxz
cltd
and
xchg
cs
sahf
lods
sub
mov
rcll
dec
out
call
out
pop
and
call
jo
xor
inc
movsl
mov
bound
sahf
orl
mov
sbb
test
adc
iret
in
sub
dec
ja
dec
xor
adc
adc
and
and
jp
xchg
aaa
cs
test
xchg
inc
stc
jbe
jle
push
or
push
mov
sarb
mov
or
in
add
sub
mov
dec
adc
pusha
cmc
fnstenv
push
scas
or
pushl
stos
mov
dec
push
mov
xchg
jb
fadds
pop
mov
fmul
sbb
sbb
pop
popf
xlat
sub
mov
loopne
jmp
mov
pop
dec
aad
jg
outsl
lea
push
mov
addl
ds
clc
adc
mov
jne
inc
es
push
add
inc
out
lret
jb
mov
and
push
sub
dec
lds
lods
mov
popf
pop
aad
xor
sarb
sub
jo
mov
out
add
test
int
ret
cmp
pop
adc
aas
xor
test
xor
fs
xchg
jl
into
adc
scas
addr16
in
push
ja
out
shrb
enter
imul
rolb
jg
sbb
sbb
xchg
pusha
cld
and
dec
push
jnp
addr16
scas
jb
imul
xchg
sarb
inc
jno
dec
and
inc
add
inc
cmpsb
and
push
xor
orb
inc
repnz
shrl
icebp
xchg
lds
in
fistl
xchg
fsubrs
jg
cltd
icebp
xor
sahf
inc
push
mov
hlt
inc
mov
xlat
xor
push
hlt
xchg
sbb
lods
cmp
lods
ret
cmc
push
jne
cmp
jnp
inc
add
adc
inc
mov
pop
and
imul
lods
or
sbb
fadds
inc
arpl
mov
jge
and
cmpsb
lcall
dec
cs
jmp
xor
mov
iret
fs
or
xlat
popf
xor
out
adc
dec
ss
out
fsts
out
add
mov
jo
jmp
mov
push
sbb
mov
ds
dec
mov
pop
push
lret
ljmp
movsb
push
stc
mov
pmaxsw
scas
loope
xor
and
js
adc
add
mov
push
int3
xchg
pop
lret
aad
and
bound
jle
cld
push
fwait
or
movb
out
sbb
data16
dec
dec
in
push
sub
xor
pop
repz
sarb
icebp
mov
or
pop
jns
insb
inc
push
cmc
push
xchg
test
pop
repz
rcl
sub
sub
sub
jb
pop
and
pushf
loope
lcall
loope
pop
insl
insl
inc
shll
jp
imul
sbb
mov
out
xchg
sbb
popa
xor
call
addb
add
iret
mov
or
test
es
push
xchg
test
mov
mov
adcl
jnp
cmpl
cmpsb
or
xor
mov
mov
ret
pop
push
xchg
or
mov
ja
enter
adc
push
jae
iret
adc
push
movsb
adc
mulb
inc
push
push
loop
bnd
leave
jbe
pushl
es
sub
lret
push
pushl
sbb
fcmove
xchg
sbb
call
mov
orb
push
out
jae
hlt
ljmp
daa
jno
xchg
lea
js
popa
mov
inc
out
fisttpl
pop
shll
data16
fwait
sbb
mov
loopne
fwait
mov
jb
jno
dec
jo
cmpsl
jmp
sub
mov
xchg
add
arpl
adc
dec
sub
and
cld
push
ljmp
enter
and
sbb
fcmovu
sahf
bound
cltd
or
mov
jbe
insl
in
and
insl
sti
fidivrs
mov
roll
insb
adc
ret
hlt
movsb
jmp
fdivl
add
test
aas
xor
cmp
dec
pop
mov
pop
cmovnp
push
out
decb
inc
push
cmc
ljmp
jbe
sbb
popf
xor
inc
or
cmc
lods
dec
mov
xor
lock
or
push
mov
in
xchg
xor
ja
xor
sub
out
jp
rcl
mov
dec
mull
sbb
cmp
mov
adc
pop
pop
xorl
dec
or
pop
xchg
shrl
mov
sub
pop
mov
xchg
je
add
popf
jb
call
adc
jae
jne
lock
mov
rorb
xor
push
mov
mov
movsb
or
and
dec
mov
cmpsl
negl
test
push
mov
std
cltd
call
lea
in
xor
add
xchg
push
lret
mov
jbe
hlt
popa
push
shll
mul
add
adc
and
jmp
jne
lods
push
mov
xor
inc
outsb
push
jl,pt
dec
inc
mov
je
push
roll
leave
mov
leave
leave
xchg
push
shrb
adc
rolb
les
ja
scas
stc
cmp
jge
in
hlt
or
jbe
jbe
lea
sbb
adc
inc
shll
xor
pop
rclb
jnp
iret
inc
ja
mov
adc
add
and
leave
sbb
sti
insl
sub
mov
pop
out
ret
ret
loopne
dec
mov
jnp
das
sub
imul
sbb
aam
cmp
or
sbb
jbe
jmp
xor
dec
xor
enter
out
aam
icebp
scas
inc
mov
and
or
push
adc
xor
dec
mov
push
xor
pop
pushf
cmp
rcll
xor
pop
jmp
mov
xor
adc
xor
ds
inc
and
aad
cmp
das
mov
mov
fimuls
mov
dec
aam
push
jb
and
inc
or
repnz
xchg
pop
push
js
xchg
xchg
adc
mov
stos
filds
mov
mov
aaa
jmp
pusha
inc
gs
pusha
ds
inc
jmp
sub
pop
mov
push
mov
decl
mov
mov
xchg
loopne
outsb
lcall
jge
and
sbb
lock
ficompl
scas
in
add
sahf
dec
push
push
lcall
pop
repnz
scas
cwtl
xor
sbb
jo
xchg
inc
jns
in
inc
into
sub
out
pop
cwtl
fs
out
sub
or
pop
std
add
sbb
cmp
les
pop
push
out
int
sub
adc
and
std
jo
sub
lds
shrb
mov
jo
test
aad
push
and
vmread
bound
test
cli
mov
cwtl
inc
adc
jne
dec
jns
cwtl
jecxz
sbb
inc
dec
in
cmp
push
add
insb
xchg
das
push
pushf
repz
rolb
jp
loope
cmp
aad
adc
mov
mov
js
shrl
cmpsl
outsl
insb
jmp
arpl
xchg
cmp
in
inc
inc
cmp
test
push
lret
pop
mov
add
nop
popa
jg
pop
add
jae
mov
xchg
mov
clc
scas
cmp
fnclex
add
shlb
or
inc
inc
inc
jne
stos
adc
movsb
xchg
xchg
imull
insb
mov
mov
or
adc
dec
ret
mov
jb
add
loopne
adc
sbb
sarl
adc
pusha
adc
rolb
mov
push
jbe
out
es
roll
xchg
jecxz
cmc
jge
dec
push
imul
mov
sahf
mov
test
mov
std
mov
scas
jbe
mov
pop
loopne
push
mov
sbb
adc
xor
fwait
push
inc
jle
mov
daa
add
inc
stos
jbe
movsl
sahf
and
inc
fsubl
repz
leave
inc
jmp
bound
cmpsb
dec
or
call
jbe
incl
sub
rcrl
dec
test
movsb
sahf
out
adc
cmp
js
adc
icebp
pop
fs
clc
jo
push
jp
xchg
add
pop
cmc
stos
cmp
popf
push
mov
push
les
sbb
add
mov
fcoms
cmp
pop
adc
mov
adc
roll
adc
int
inc
fsubrl
mov
stc
ja
pop
cltd
dec
and
fisubl
je
pop
inc
mov
movsb
arpl
mov
fiadds
xor
das
mov
add
rcr
notb
push
jae
imull
pushf
or
into
lods
jecxz
pop
loopne
jo
xchg
subl
sahf
jno
pusha
cmpsl
cwtl
sbb
push
jnp
lods
xchg
and
xorl
inc
push
push
movq
arpl
mov
dec
jge
inc
add
dec
mov
and
sbb
inc
icebp
out
add
das
data16
das
adc
mov
pop
sub
out
cmpsb
jbe
inc
sub
lods
sbbb
test
adc
js
push
mov
dec
or
ja
and
lcall
add
adc
addr16
fildll
mov
pop
xchg
in
and
xor
popa
outsl
inc
mov
jmp
out
lret
sbb
sti
filds
push
punpckhbw
mov
test
les
inc
scas
sarl
popf
xchg
add
adc
push
mov
das
or
in
inc
shlb
push
shld
inc
mov
mov
lea
les
movsb
or
loopne
fdivs
inc
in
mov
mov
clc
sbbl
lret
inc
loop
push
movsl
xlat
mov
movsb
mov
adc
leave
inc
ud0
pop
jp
jae
pusha
mov
cld
dec
push
shll
shlb
push
sarl
sbb
cmp
sub
pop
lret
sbb
mov
jmp
cmp
fsubl
popf
cmp
mov
stc
orl
std
and
inc
nop
in
mov
jmp
dec
aam
adc
xchg
hlt
mov
jge
sbb
jbe
icebp
jg
mov
push
sbb
cli
jmp
and
pop
dec
fsubs
inc
gs
xor
xchg
clc
repz
fdivl
jecxz
sbb
test
lea
inc
xorb
add
sbb
rcl
mov
clc
xchg
sub
in
into
aam
jmp
test
sahf
mov
shrb
jbe
scas
jo
out
call
xlat
push
nop
jmp
std
test
pusha
jg
push
or
inc
imulb
pop
cltd
loop
or
pusha
nop
push
das
int3
mov
popf
iret
test
lods
ljmp
sbb
test
and
cmpsl
jecxz
mov
push
mov
out
push
mov
les
push
inc
inc
test
out
add
mov
push
mov
adc
ret
fdivp
loop
jge
adc
dec
insl
xchg
push
andb
xchg
addl
mov
enter
jg
popl
xchg
lods
add
iret
sti
mov
out
or
ret
das
in
outsb
inc
pusha
xchg
mov
push
es
cmpsb
orl
scas
lods
pop
jbe
add
shll
data16
mov
sbb
ret
xor
mov
fildll
jb
shlb
sub
outsl
es
or
push
std
xchg
xchg
mov
cmp
jmp
ja
ljmp
and
push
test
push
sarl
jl
push
adcl
mov
jbe
arpl
push
adc
mov
lea
lret
pushf
test
loop
enter
stc
mov
ds
aad
add
out
or
cs
lock
outsb
sbb
mov
xchg
jl
lea
fnstenv
jge
sub
mov
jecxz
xchg
rcll
push
mov
jmp
enter
fwait
ret
mov
lret
mov
in
negb
adc
mul
das
lods
movsb
dec
imul
mov
out
dec
pop
xchg
or
xlat
push
push
sbb
cmp
stos
add
sub
adc
insl
out
inc
add
out
sbb
xchg
inc
jbe
fs
inc
lahf
add
add
repz
aam
sub
iret
bound
lcall
or
push
or
scas
and
mov
and
dec
push
lods
sahf
mov
mov
inc
movb
loop
dec
in
and
aam
mov
nop
shlb
je
imul
add
and
inc
and
push
sbb
push
jno
push
addr16
mov
fs
add
std
nop
push
sbb
inc
add
or
movswl
pop
lock
insl
test
popl
cltd
mov
cmc
xor
jl
adc
or
cmp
xor
and
adc
and
cli
fimull
jns
jno
push
jge
out
jo
test
sti
negl
aam
inc
xor
inc
pusha
fs
pop
mov
mov
xlat
sbb
cmpl
pop
xor
sub
mov
xchg
bound
outsl
ss
and
dec
jle
pop
sbb
sub
xor
repz
pavgw
add
adc
adc
sti
add
push
inc
adc
or
sbb
and
cmp
mov
ljmp
insl
dec
shll
dec
and
lods
ret
push
pushf
pop
push
add
mov
mov
ficomps
pushl
sbb
mov
and
ret
fdivrl
sarb
dec
adc
test
mov
jne
arpl
stos
sbb
xor
sahf
jnp
inc
mov
and
scas
mov
in
mov
inc
out
adc
fidivrs
dec
xchg
jno
cmpsl
jb
data16
test
sbb
xchg
xor
iret
jl
dec
rcl
jl
aam
push
lahf
and
add
int
dec
mov
adc
inc
adc
xchg
mov
jp
inc
stos
dec
xchg
xor
cli
cli
inc
push
shl
xor
add
lret
js
sbb
test
arpl
ja
or
push
in
popf
js
imul
pop
jg
jnp
dec
filds
dec
adc
inc
mov
stos
jo
in
cmp
jnp
mov
pop
fldcw
pop
push
shrb
sub
xchg
jmp
push
movsb
shlb
add
push
loopne
sahf
mov
cmc
in
inc
xchg
xchg
xorb
clc
ss
mov
ljmp
adc
rol
lcall
sub
xor
fwait
lcall
dec
mov
loop
push
mov
filds
lret
dec
xchg
sub
es
ds
bound
inc
addr16
outsb
pusha
jmp
les
jp
pop
test
mov
dec
aad
jb
mov
xchg
pusha
add
fptan
mov
jl
mov
sbb
movsb
and
mov
sub
push
roll
cmpsb
shlb
mov
cwtl
cli
inc
ja
adc
inc
xor
jo
cmp
xchg
jle
xlat
pop
ds
adc
ja
nop
rolb
shlb
test
repz
mov
adc
push
call
nop
adcb
and
pushf
jl
jmp
dec
in
rorb
add
rorl
scas
xchg
mov
popf
ss
test
aam
mov
jae
push
fstpt
mov
stos
pop
rorb
mov
dec
pop
sahf
clc
and
push
aad
aam
pop
ret
out
scas
imul
add
mov
fwait
loopne
orps
pop
push
jg
aaa
pop
rorl
fs
inc
mov
push
scas
js
int
dec
stos
nop
repnz
add
test
gs
cwtl
or
pop
icebp
mov
push
xchg
stos
push
adc
xor
out
dec
mov
out
in
xor
shll
into
xchg
or
push
test
aaa
inc
pop
das
jg
aas
enter
xor
mov
sub
ret
adc
pusha
lahf
push
arpl
cmp
shlb
inc
popf
mov
adc
jb
cmp
or
les
out
sub
scas
cmp
push
adc
std
push
incb
sbb
mov
or
fcmovne
mov
in
movsl
sub
jbe
sub
sbb
mov
or
fildl
jle
xor
subl
or
test
rcrl
push
lods
loope
xchg
pop
xchg
das
lret
adc
mov
xchg
rorb
addr16
frstor
lods
adc
add
cs
cs
push
cmpb
fs
ds
pop
or
and
out
push
fmul
shll
daa
test
fisttps
js
pop
mov
push
pop
jle
pop
mov
mov
int3
xor
and
cmp
inc
dec
or
mov
inc
call
pop
pop
pop
loope
lret
cmp
jbe
sub
iret
test
lret
call
inc
xor
or
js
sub
enter
into
jp
push
popa
dec
jbe
mov
xchg
dec
iret
xchg
inc
or
dec
adc
add
push
retw
test
ret
jbe
inc
ljmp
push
ja
dec
pushl
fwait
into
lahf
in
sbb
aam
aad
adc
cmp
shrl
jmp
mov
and
or
arpl
add
popf
jmp
push
aam
xchg
inc
mov
adc
negl
out
inc
ret
pop
add
sbb
mov
lods
mov
pop
testl
add
fcoms
push
daa
outsb
mov
loop
test
mov
jp
xchg
sub
in
int3
push
shrl
ss
aas
xchg
lahf
nop
push
test
push
lahf
mov
scas
fidivrl
int
mov
notl
sbb
inc
add
ret
leave
sbb
push
jb
xor
stc
cmp
cmp
rclb
out
stos
cmpsb
adc
pop
add
int3
mov
jno
sub
dec
test
or
lock
pop
testl
mov
leave
sbb
loop
cmpsb
cli
cld
xor
xchg
popf
sbb
mov
mov
fwait
mov
imul
gs
jns
leave
sbb
push
in
lods
push
insb
mov
sbb
popa
cltd
mov
push
test
repnz
ljmp
jg
aam
sbb
mov
push
rol
aaa
or
mov
in
or
and
or
test
pop
in
mov
inc
dec
push
xchg
sbb
jae
cmpsl
sbb
jmp
and
pop
mov
ss
loop
pop
popf
shlb
or
mov
andb
inc
add
sbb
shlb
add
jns
pop
outsb
sahf
cmp
movsl
mov
pop
mov
xor
mov
pop
sbb
hlt
jle
cmpsb
push
ljmp
dec
add
mov
adc
into
fwait
add
fstp
js
and
adc
pushl
and
sub
lods
cmp
rcll
push
das
cwtl
icebp
cs
jns
arpl
push
cmc
xlat
push
repnz
push
jge
pop
sahf
adc
lret
imull
sub
jg
and
mov
mov
arpl
sub
ja
ret
jno
repz
cld
pop
jecxz
jp
dec
outsb
daa
insb
js
movsb
cmpsl
cmp
and
test
ret
xor
adc
ljmp
test
std
or
pop
jecxz
push
dec
xlat
inc
test
mov
push
inc
call
xor
push
loop
fs
sti
add
mov
repnz
rorl
ja
stos
nop
roll
rorb
jne
adc
mov
mov
outsl
popf
and
lods
inc
movsl
fsqrt
fs
mov
scas
pop
mov
sub
ds
std
cmc
cwtl
fwait
add
fwait
cmp
shl
test
xchg
mov
loope
test
add
dec
sub
pop
push
mov
add
dec
arpl
xor
xchg
in
xchg
or
divl
cmc
or
or
add
pop
or
cmp
mov
lock
jbe
stos
xchg
push
movsb
mov
outsb
xchg
in
mov
stos
mov
test
movsl
cltd
inc
popa
sub
repz
sub
jo
into
inc
xor
jp
gs
mov
stos
or
dec
pop
inc
jp
cld
xchg
adc
push
js
xor
and
push
cs
jmp
mov
mov
cmc
lret
dec
dec
dec
dec
arpl
bound
xchg
stc
push
adc
cmp
loope
and
fsubl
xor
scas
aam
ret
pop
jne
xchg
jo
xchg
mov
dec
fwait
adc
cmp
mov
fsubl
mov
dec
pushf
stos
shl
sub
leave
push
cmp
adc
fsubs
out
lods
jg
cmp
loop
sbb
iret
negb
inc
js
push
insb
or
inc
sbb
ljmp
lds
jl
or
xchg
loopne
add
sub
or
mov
stos
insb
fidivrl
jns
push
dec
popa
push
and
roll
shlb
jmp
dec
cli
adc
test
imul
rcrl
xchg
jmp
jb
mov
scas
insl
aad
jbe
mov
aam
ret
push
jg
cli
xchg
fnsave
repz
jp
or
outsb
ret
into
mov
mov
add
xchg
rorl
cs
push
daa
sbb
popf
fmulp
pop
mov
movsl
shll
xchg
sbb
xchg
aaa
mov
divb
aas
wbinvd
push
and
mov
nop
jmp
fildll
fldt
pop
inc
enter
xchg
ljmp
pop
decl
fucomp
jge
lea
push
fsubrp
add
aam
jb
iret
push
adc
aad
mov
push
mov
imul
fildll
jp
fnstsw
pushf
insl
ds
pop
and
xchg
pop
pop
ret
mov
lret
adc
mov
push
addr16
fsts
lock
dec
hlt
ljmp
xchg
and
fsubr
stos
push
jg
cmp
and
pop
divb
xor
sahf
push
cmp
xchg
bound
sub
cmp
adc
inc
out
adc
neg
xchg
xchg
pop
gs
mov
aam
fwait
inc
push
je
fcompl
inc
xchg
cmc
test
pop
iret
loopne
lret
xor
nop
pop
daa
std
dec
sahf
loope
loope
inc
imul
inc
outsl
add
xor
jo
and
in
or
js
movsl
sub
inc
pop
call
inc
shrb
jbe
push
add
aas
sbb
and
shlb
cwtl
inc
push
or
inc
dec
jle
scas
add
inc
jo
testl
cmpsb
mov
mov
mov
fisttpl
les
test
imul
rcrb
mov
mov
ja
jp
jp
or
jecxz
out
xchg
pop
into
fsubrs
add
not
inc
lahf
pop
inc
jp
filds
jge
mov
add
and
call
mov
sub
pop
lods
and
out
mov
arpl
int
adc
outsb
inc
pop
xchg
xlat
jg
cmp
pop
xlat
sbb
pop
mov
dec
lods
ficomps
lcall
cmc
add
js
rcl
test
enterw
cmp
xchg
out
jns
test
orb
je
lret
or
rcrb
sbb
jp
or
jmp
out
mov
mov
push
lock
inc
scas
xchg
sbb
in
ss
push
ret
js
icebp
into
xchg
inc
in
test
popa
xchg
add
neg
cmp
out
dec
sarl
loopne
sbbl
lods
rep
and
inc
leave
sti
iret
int3
roll
jne
outsl
or
cld
push
stos
in
iret
rcrl
outsl
cmp
cmp
test
cmpsl
add
mov
in
in
insb
fiaddl
jne
or
xlat
repnz
push
add
add
xor
leave
add
adc
pop
jle
rorb
adc
jnp
stos
scas
scas
stos
xorb
addr16
outsb
dec
push
jp
pop
or
adc
inc
jecxz
jns
mov
movsl
mov
je
sub
lret
xor
mov
roll
mov
cmpsl
lret
out
mov
sti
out
push
push
inc
jae
sub
or
call
or
stc
mul
pop
repz
mov
pop
mov
and
xchg
sbb
cld
dec
jb
mov
repz
cmp
out
jl
adc
xchg
sbb
out
les
in
in
leave
add
int3
mov
out
stc
data16
in
mov
cli
sub
and
push
es
sbb
sub
daa
sub
mov
cmp
xor
and
aad
pop
jno
pushf
adc
ja
and
jnp
test
aaa
push
cmpsl
jae
mov
inc
pop
jecxz
cmp
ja
pop
ucomiss
stos
mov
clc
repz
adc
or
in
leave
ret
out
imul
jb
mov
vmovups
dec
and
cmpsl
ds
outsl
jns
xchg
cmpsl
mov
lock
adc
push
popa
mov
xor
insb
and
fsubrl
in
adc
xchg
mov
dec
or
xor
jbe
sarl
jmp
std
imul
pop
in
or
aaa
push
ss
out
mov
adcb
stos
jae,pt
sub
loopne
mov
mov
mov
es
xor
loopne
pop
psubb
push
in
faddl
out
sbb
lret
or
cmc
shlb
lret
icebp
push
loope
in
mov
and
pop
sub
pushf
pop
add
xorb
mov
ficoml
leave
mov
out
pop
jge
cmc
ja
mov
insl
dec
out
push
dec
bnd
std
ds
adc
mov
and
inc
inc
push
lahf
test
pop
mov
int3
inc
test
mov
ud1
rcl
mov
xchg
jp
push
pop
inc
mov
scas
cmpsl
das
pop
jne
pushf
add
mov
push
pop
loope
imul
rcrb
pop
ja
mov
xchg
mov
and
cmp
add
addb
outsl
adc
data16
insb
xchg
or
jmp
push
mov
int3
fldenv
push
sbb
subb
cmp
stc
loopne
jno
push
sbb
sti
cmp
popw
scas
xor
and
out
icebp
adc
push
mov
aam
pusha
in
nop
mov
inc
stos
lock
push
stos
imul
jno
push
mov
jae
push
icebp
push
sub
stos
out
mov
inc
sub
test
inc
out
pusha
test
pushf
inc
testb
mov
xor
jge
mov
adc
adcl
xor
stos
addb
cmp
cwtl
cmc
mov
xor
sbbb
xchg
mov
in
into
jecxz
jecxz
fdivs
test
adc
mov
xchg
xor
outsb
dec
xchg
out
push
std
ficoms
test
dec
jg
xchg
push
call
sbb
pop
sub
mov
jp
lods
aam
ret
rclb
data16
aaa
dec
aas
push
jl
imul
pop
in
movsb
mov
popa
xchg
inc
cmc
or
adc
addr16
and
inc
rclb
dec
dec
pop
and
mov
movsl
ss
out
mov
rol
inc
pop
pop
mov
pop
cs
bound
ljmp
mov
push
jle
outsl
jge
mov
enter
das
adc
testl
pushf
add
push
adc
cmp
or
mov
lock
push
js
int
pop
xchg
pop
loop
push
jo
les
insb
repnz
push
fs
lcall
int3
cmp
shll
jbe
test
push
adcb
gs
cld
pop
das
xchg
out
cmp
int3
push
popf
shll
sti
xchg
ds
mov
sub
mov
imul
xor
jmp
ret
stos
sbb
inc
shl
pop
jg
out
cli
int3
outsl
sbb
ret
push
hlt
mov
mov
fucomi
cld
mov
xor
jns
xchg
subl
test
adc
jle
push
adc
push
shlb
cltd
in
mov
inc
sti
xchg
sub
dec
enter
or
aaa
adc
adc
mov
push
and
aaa
gs
sti
adc
sub
stos
jbe
inc
jb
inc
xorps
inc
inc
cli
fisubrl
cli
leave
cli
pop
lcall
out
out
enter
or
add
mov
jne
add
pop
and
fwait
or
and
int3
adc
mov
mov
nop
hlt
fdivr
pusha
es
jecxz,pt
popa
lock
mov
ljmp
inc
pop
sahf
mov
mov
or
xor
insl
outsl
push
jmp
fstp
pushf
cmp
cmp
ljmp
cmp
sti
cmp
fdivs
repnz
pusha
sbb
pop
mov
je
push
lock
jl
xlat
int3
test
mov
fstpt
insb
add
inc
lea
cmp
loope
out
mov
movl
jmp
push
xcrypt-cfb
cmpsl
mov
sub
outsl
lahf
inc
cmp
daa
sub
fs
insb
gs
or
push
movsb
icebp
arpl
jno
add
mov
cmpsb
gs
lock
adc
cmp
xchg
les
push
inc
sarl
sub
or
sub
ret
inc
dec
or
and
or
jns
cmp
or
scas
sub
int
cmc
imul
jno
push
cmpsb
mov
enter
mov
iret
das
or
cltd
std
and
lcall
xor
jle
xor
pushf
dec
push
aam
mov
push
jne
adc
pop
inc
cmc
mov
cli
cmp
jg
push
outsb
add
out
push
sbb
je
inc
jp
mov
sbb
jmp
popa
std
xchg
ds
inc
cli
cmc
mov
pushf
xchg
jge
cmp
add
jbe
fildll
lahf
adc
mov
jno
in
push
cmp
movsb
xchg
gs
cmpl
rorb
arpl
xchg
cmp
lret
dec
in
push
outsl
dec
popa
cmp
das
inc
mov
mov
gs
orb
pushf
sbb
ret
sarl
jecxz
mov
sbb
cmp
lds
insb
add
push
mov
xchg
shl
sub
cmpsb
cmpsb
dec
leave
jae
int
dec
popa
mov
sbb
or
mov
cltd
sbb
jecxz
xor
cmp
in
mov
mov
dec
je
mov
push
mov
aam
adc
hlt
aas
stos
in
aaa
aad
xor
arpl
adc
add
loope
orb
pop
sbb
shll
mov
ja
jb
sti
pop
call
fistpl
movsb
in
into
mov
sub
movsb
push
cld
add
lds
cli
sbb
add
pop
sbb
dec
xor
imul
mov
clc
lods
xchg
dec
xor
subl
and
push
ja
fucomp
out
sarl
and
scas
aad
fdivl
sbb
jmp
cmp
xor
mov
vphaddubw
add
mov
push
lods
pushf
scas
xchg
add
add
mov
mov
leave
sub
enter
mov
pop
cwtl
sbb
mov
rcrl
mov
jl
jle
addr16
aas
xchg
out
leave
mov
push
enter
test
insb
adc
sti
ja
cmp
adc
jns
inc
lret
out
out
sub
es
fsubrl
and
std
add
and
subl
ficomps
push
iret
xchg
pop
ffree
cmp
xor
jl
inc
cld
jne
jb
sbb
xchg
push
inc
loope
cmp
mov
cld
mov
mov
sarb
lcall
push
lds
sarb
mov
lcall
jns
outsl
or
sub
mov
in
sbb
flds
mov
adc
inc
sbbb
outsl
mov
enter
cmp
pop
pop
mov
addr16
xchg
or
mov
ljmp
push
push
lret
add
add
mov
xchg
fstps
gs
and
addr16
fidivrl
int3
es
xchg
ret
mov
aas
imul
clc
xchg
and
shlb
and
shll
test
adc
ud0
shl
test
add
add
lds
sti
scas
push
out
mov
aas
push
push
ja
push
cs
sbb
sub
mov
jge
outsb
jne
dec
sub
hlt
out
aaa
inc
dec
int3
xchg
fcomp
sub
add
pop
repnz
sbb
or
insl
sub
adc
mov
mov
or
rcrl
sub
or
outsl
mov
pop
jb
stos
mov
or
jecxz
imul
adc
aam
loop,pt
mov
pop
inc
push
or
fdivs
cmc
push
rolb
pop
xchg
cli
lds
out
mov
mov
sbb
add
rorl
add
scas
scas
cmc
cmp
jl
cmp
or
xchg
pusha
jecxz
cli
mov
xor
leave
xor
xor
add
adc
or
jl
pop
lock
mov
jb
push
push
cli
daa
out
pop
imul
add
pop
pusha
xchg
mov
fldcw
rol
andl
and
mov
mov
mov
lret
nopl
insb
in
stc
jp
nop
notl
clc
cs
adc
fsubl
lret
test
or
int3
and
outsl
inc
sbb
testb
mov
sub
cmp
rcll
pop
xchg
push
stc
lock
pop
sbb
push
insb
in
cwtl
pop
out
jle
mov
fwait
in
mov
fdivs
mov
push
pop
mov
fstp
imul
add
mov
add
jmp
xor
push
adc
mov
xchg
inc
xlat
outsb
icebp
mov
test
out
add
push
add
fstpt
mov
out
scas
stos
ds
rolb
stos
jmp
xchg
mov
movsl
xlat
dec
stc
lods
xchg
pop
jne
les
fildl
insl
and
dec
shrb
testl
and
jmp
arpl
mov
hlt
cmp
lcall
pusha
jle
and
subb
shl
jo
sub
xchg
mov
mov
popa
xchg
cld
shlb
inc
mov
push
stos
jg
jecxz
cmp
cmp
rorb
mov
adc
and
dec
ja
lock
inc
out
sub
adc
in
push
inc
outsl
pop
xor
test
dec
mov
and
aad
dec
imul
mov
mov
xor
insb
aas
ds
fisttpll
jo
sub
cmp
sub
cmp
into
jle
decb
stc
aas
mov
jnp
lcall
pop
mov
add
test
pop
jecxz
cmp
lret
fildll
cltd
mov
fs
sub
stc
adc
xor
outsb
pusha
test
int
mov
outsb
lcall
push
int
out
or
xlat
inc
cwtl
hlt
sub
sarb
xor
pusha
ss
cvtps2pi
rorl
outsl
jno
int3
jmp
fdivp
xchg
push
cmpsl
pop
xchg
cld
cs
shl
scas
mov
es
dec
call
ret
notl
mov
pushf
es
add
or
and
fimuls
mov
pop
lock
js
aas
xlat
shrl
mov
fwait
in
mov
xchg
cmp
pop
pop
sahf
dec
and
in
jne
jns
iret
mov
sbb
stc
xchg
mov
jmp
sub
adc
inc
adc
cltd
mov
repnz
into
aas
dec
arpl
add
aas
into
fwait
cmp
sub
mov
inc
out
lret
adc
std
lods
xor
xchg
pop
jb
jae
test
adc
mov
loopne
adc
xlat
inc
xor
outsl
sub
fidivrl
lds
xrelease
dec
jmp
gs
bound
push
jne
lcall
mov
pop
dec
cmp
xchg
lcall
inc
jg
mov
cmp
jo
ss
fdivl
pop
push
sbb
push
pop
mov
xchg
into
rcl
psrlw
test
imul
inc
adc
inc
arpl
pop
fcmovu
nop
xor
int
push
imul
adc
repnz
pop
or
jae
push
ret
hlt
push
jmp
int3
dec
add
nop
inc
outsb
imul
cltd
ficompl
pop
testb
xchg
or
rolb
cmpsl
sub
adc
sbb
loope
inc
dec
cmpsl
mov
jae
into
and
and
sbb
lds
inc
pushf
xor
xchg
dec
push
xchg
pushf
inc
push
sarl
push
mov
or
mov
push
ljmp
in
dec
shll
pop
mov
out
sahf
movsb
push
test
mov
push
sub
pop
popa
fidivl
ret
push
sub
test
dec
inc
jns
call
mov
mov
xor
mov
cmp
mov
movsl
popf
aam
cmp
cmpsb
xchg
pop
cld
leave
mov
cmp
scas
sub
add
sub
jne
mov
andb
cmpsl
inc
fdivrp
ss
push
and
shlb
ljmp
scas
test
sbb
cwtl
dec
adc
xor
jmp
in
pop
jo
mov
jnp
daa
test
lahf
jbe
push
xor
mov
fnstsw
sbb
ret
test
inc
inc
cmpsl
mov
into
subl
aaa
push
pop
cwtl
xchg
xor
dec
pushf
iret
lods
popa
popa
jecxz
sub
jnp
out
iret
out
mov
and
rcr
test
sub
fidivs
in
leave
cmp
push
daa
rcr
flds
push
subl
aam
adcb
cmp
rcrl
add
popa
jno
xchg
sbb
or
pushf
mov
in
lret
aas
es
xor
sahf
pop
pop
in
pop
sbb
sub
pop
dec
and
mov
pop
mov
stc
cmp
mov
and
jp
cmpsl
jmp
sbb
pop
dec
lds
add
cwtl
add
inc
cmp
call
test
jns
rcll
fidivl
adc
aas
xchg
mov
adc
cli
lcall
push
dec
jbe
mov
leave
inc
add
inc
mov
ds
pop
mov
xchg
xchg
sub
sub
rorb
jmp
jmp
sbb
popf
decb
adc
xor
cmp
add
sbb
dec
fisubl
xor
push
jge
and
jp
push
push
inc
ret
ja
jmp
in
xchg
lods
lret
mov
out
ljmp
loop
loopne
jmp
inc
mov
dec
dec
dec
jp
jno
cmc
inc
repnz
mov
aad
mulb
cmp
pop
in
mov
sbb
clc
mov
insb
aas
loopne
sub
add
dec
pushf
mov
clc
inc
jbe
cmp
mov
push
cmp
xchg
push
sahf
cmpl
jge
inc
adc
outsl
lret
in
sahf
mov
test
aaa
xchg
mov
push
out
jo
jmp
adc
loopne
pop
mov
jno
lds
mov
test
lahf
add
cmp
adc
mov
and
sbb
add
int
inc
ror
inc
sahf
cmpsb
test
orb
negl
inc
sub
mov
xor
aad
imul
cwtl
cmp
popa
stos
shr
data16
pop
cmpsb
mov
nop
std
pop
mov
int3
in
imul
ja
arpl
aam
jecxz
pop
mov
pop
and
out
push
jo
pop
pushf
or
pushf
fmull
clc
ror
sub
addr16
or
lcall
xchg
jg
sti
mov
sub
adcb
adc
sbb
pop
cwtl
inc
loope
cmp
out
inc
repnz
fcomps
push
mov
cmpsb
xor
pop
xlat
jp
inc
idivl
icebp
xor
insl
lds
scas
pop
xchg
sahf
xor
inc
cmp
cmp
mov
jne
xchg
xor
repz
sbb
mov
push
popf
getsec
cld
and
or
sub
rcrb
rolb
in
adc
add
fwait
jbe
dec
sub
mov
icebp
mov
mov
inc
dec
in
cmp
sub
or
xchg
lcall
lock
pop
enter
les
pop
mov
pop
cmovbe
jns
lods
das
ret
pop
test
cmp
jo
and
outsb
rorb
scas
lods
jecxz
and
out
mov
inc
incl
mov
gs
pop
movsb
pop
inc
pushf
repnz
sbb
sbb
movsb
mov
bswap
dec
sbb
adc
mov
jmp
js
push
stc
ret
pop
xchg
loope
mov
mov
or
stos
sti
inc
pop
sarb
cmpsl
cmpsl
or
pop
test
js
cwtl
std
fidivl
sbb
dec
ja
fdivrs
and
sub
jmp
mov
mov
arpl
insb
mov
notb
and
insb
inc
cwtl
scas
push
movb
adc
add
js
ds
mov
push
pop
pusha
sub
insb
je
push
sub
lods
cmp
pop
repz
xor
adc
push
add
mov
out
hlt
popa
popl
out
mov
xor
push
ja
jg
sub
cmp
xorl
insl
pushf
mov
add
stos
repnz
mov
jo
xor
mov
lds
pop
mov
ret
imul
or
adc
and
hlt
and
adc
pop
str
mov
or
xchg
mov
adc
les
sbb
ja
hlt
lods
aam
inc
cmp
jae
mov
clc
inc
cld
das
mov
insl
dec
dec
dec
je
inc
xchg
sub
push
jno
add
add
xchg
push
andb
daa
jb
sub
xchg
loop
jge
dec
cmp
cmp
lock
outsl
cmpsb
adc
xchg
pushf
lret
pushf
push
aaa
ds
test
xlat
sbb
popa
dec
inc
push
or
mov
jno
insl
ja
movsb
add
lahf
xor
inc
and
out
jbe
out
fcomi
addb
js
ret
popf
xchg
inc
out
mov
mov
or
push
pop
mov
sub
int3
or
rcl
js
mov
mov
push
pop
add
jo
cmpsl
add
shll
jne
mov
jne
xor
test
lret
and
xchg
jbe
daa
das
jae
pop
push
int3
xchg
pushf
pop
sahf
xor
daa
into
jecxz
push
inc
sub
xchg
sti
pop
pop
xor
mov
cltd
xchg
jb
sbb
int3
ja
dec
cli
push
das
push
jecxz
jbe
nop
mov
sbb
ret
mov
push
push
xchg
iret
rclb
stc
ljmp
jg
sub
push
jne
lcall
daa
stc
movsb
mov
inc
pop
xor
pop
mov
xor
loop
jp
xor
repnz
sbb
sub
pop
push
add
add
pop
push
nop
jne
mov
or
leave
pop
pop
sub
mov
popa
icebp
mov
push
mov
cmpsb
xor
jg
sbb
and
pushf
ret
add
fimull
fmull
ss
push
mov
cmp
insb
in
sub
scas
pop
hlt
mov
outsl
lods
outsl
jae
mov
pop
pop
xchg
stos
in
test
dec
jge
sub
addr16
jb
bound
pop
inc
scas
testb
cmp
add
add
add
arpl
adc
or
aad
fdivrl
pop
mov
mov
pop
pusha
cmp
insb
add
or
fstl
cld
flds
sti
cmp
aas
fistpl
xchg
cmp
cmp
sbb
fiaddl
mov
test
cmpsl
jl
push
jb
rcrb
mov
add
ss
aam
aas
xor
push
pusha
push
or
push
xchg
sub
stos
dec
jecxz
push
mov
fcomps
ja
lahf
ss
adc
xor
push
scas
lret
incb
lahf
stc
popa
cli
jmp
inc
pop
push
insl
pop
xor
inc
mov
int3
or
lcall
cmp
cltd
inc
jno
outsl
daa
fcom
push
js
and
lock
repz
pop
repz
jnp
mov
push
lods
repz
mov
iret
mov
jp
sub
dec
outsb
pop
fsubs
sub
or
mov
outsb
sub
push
dec
aam
incb
lret
test
mov
xchg
adc
xor
loopne,pn
push
bound
jle
mov
test
cmpsl
add
sub
insb
shll
mov
fs
sahf
push
lahf
and
dec
cmp
sbb
push
mov
loopne
cmp
jg
leave
in
in
xchg
lock
clc
xchg
jno
rcrl
fldl
std
cmpl
fisubl
adc
aam
enter
mov
sahf
sub
repnz
xchg
cmp
lock
mov
popf
sub
repnz
inc
nop
daa
aas
mov
pop
push
pop
in
cli
adc
and
hlt
lea
xchg
inc
out
aad
sti
faddl
cmp
jbe
call
adc
inc
mov
fs
sub
leave
stos
iret
daa
push
shrb
aam
lea
mov
lea
adc
dec
fdivrs
push
and
dec
jle
mov
mov
pop
xorl
imul
cmpsb
xor
and
cmp
mov
fistpll
in
movsl
gs
sbb
sub
out
subw
sub
cmc
sahf
das
loopne
lcall
sahf
or
cwtl
insb
ja
enter
fisttpl
jg
xchg
pusha
dec
pop
add
or
fimull
insl
dec
fs
arpl
xor
in
stc
xor
jg
hlt
out
or
sub
mov
push
push
mov
mov
fisubs
jg
repz
pusha
cwtl
pop
sub
xchg
ret
movsl
repnz
cmpsb
ja
data16
arpl
or
imul
mov
arpl
push
push
adc
jno
lods
cmp
js
inc
js
and
clc
inc
pop
adc
mov
cli
fstpl
xor
pushf
aas
leave
cmp
fwait
mov
xchg
xor
cmp
cmpl
jo
bound
gs
imul
lahf
xor
mov
mov
pop
or
pushf
pop
lds
nop
das
push
adc
mov
imul
jle
outsb
add
mov
scas
cmpsb
ds
xor
xor
test
xchg
sarl
jne
int3
repz
push
hlt
lea
jl
call
out
sub
sub
and
ss
loopne
push
outsb
lret
xchg
add
fisttps
notb
jae
or
and
or
aad
ficoms
xchg
lahf
pop
dec
punpckhwd
adc
push
sub
inc
scas
inc
mov
push
daa
testl
pop
bnd
outsl
jno
fsubl
adc
dec
fwait
dec
xor
pop
jo
mov
adc
outsl
xor
movsb
ret
subb
insl
xor
xlat
jae
cld
int
cltd
movsb
or
xor
mov
mov
loope
pop
xorb
lcall
mov
lret
mov
inc
xchg
lods
shlb
inc
mov
pop
je
dec
mov
pop
call
jge
push
test
jl
inc
mov
and
xor
sbb
jmp
or
lcall
fcmovbe
notl
adc
mov
mov
mov
dec
inc
add
js
loope
out
fimull
jle
cld
pop
mov
pop
popf
imul
push
inc
imul
adc
or
sub
outsb
push
jl
and
xchg
clc
or
cmp
shrl
loope
cmp
icebp
sub
inc
js
ja
push
jle
push
aaa
negl
inc
lret
push
movl
push
jo
push
mov
lcall
pop
sbb
xchg
ficompl
lea
cmpsl
mov
mov
adcl
imul
fidivrl
cmpsb
dec
fcoml
push
decl
mov
and
stos
fsubp
inc
push
imul
push
pop
popa
lret
sbb
pop
and
adc
xchg
jl
out
aad
push
es
xchg
mov
mov
out
pop
rcr
adc
jle
out
and
jmp
add
xor
gs
jge
fwait
inc
xchg
cs
fsts
inc
inc
addr16
pop
ret
add
mov
ret
mov
mov
hlt
inc
and
add
arpl
jbe
fistps
adc
and
add
jecxz
dec
sbb
into
jno
adc
pop
sbb
push
test
mov
pop
xchg
pushf
lret
sbb
add
or
mov
clc
pop
xchg
sbb
int3
mov
adc
lret
dec
in
and
das
and
fwait
pushf
addb
inc
out
clc
push
nop
pop
pop
pop
in
mov
pop
adc
mov
fcomps
or
in
sub
sub
xchg
xchg
mov
ret
inc
mov
jecxz
and
clc
inc
aas
xchg
xlat
cwtl
mov
cmp
data16
xor
mov
mov
pop
test
test
fnsave
jmp
insl
xchg
jg
jp
sub
pop
mov
add
pop
mov
in
scas
in
and
pusha
jecxz
es
and
inc
pop
pop
sarl
pop
in
mov
out
jbe
xor
and
test
mov
loope
int3
incl
mov
push
dec
jo
cmp
inc
shll
lea
ljmp
das
ret
test
rolb
jmp
sbb
or
in
jno
clc
xchg
xchg
jmp
leave
imul
xlat
push
imul
lret
lret
jno
rorb
xchg
enter
and
or
and
in
mov
test
ljmp
sarl
lods
fldenv
dec
jle
add
test
lds
shrb
gs
and
sbb
clc
inc
lock
call
cwtl
pop
aas
call
pusha
into
jmp
shll
loop
decl
incl
sarb
mov
cmp
addr16
jnp
pop
pusha
fisubl
in
outsl
or
adc
int3
leave
xor
stos
mov
sbbl
rclb
sti
mov
in
cmp
ljmp
cmc
testl
jns
dec
lret
ljmp
leave
stc
insb
xchg
sbb
sub
xchg
add
sbb
push
mov
sub
scas
das
jmp
mov
movsb
sbb
stc
mov
pop
cmp
ud2
lock
ljmp
or
jl
xor
mov
bound
push
jb
icebp
iret
out
jne
mov
ljmp
mov
loope
adc
push
leave
stos
adc
adc
loop
ds
mov
mov
dec
and
test
jecxz
dec
cmp
mov
sub
mov
out
and
addl
inc
xchg
or
icebp
xchg
lcall
xrelease
popa
and
xor
xlat
push
outsl
ds
lods
hlt
shl
dec
cmpsl
daa
fstpl
lock
idiv
xlat
movsb
mov
jo
cmpsl
fnstsw
lock
dec
stc
add
lcall
add
add
repz
push
sub
fidivl
ja
jno
dec
dec
pushf
sahf
and
jnp
cmp
into
jnp
xchg
imul
pop
adc
cltd
out
repz
inc
scas
xchg
add
mov
out
add
dec
jno
mov
add
cli
add
mov
adc
cmpsl
mov
push
xchg
shll
mov
sub
mov
arpl
ljmp
stc
mov
lea
lret
cmp
or
xchg
pop
enter
fildll
xorb
mov
aad
pop
ja
sti
or
adc
xlat
into
push
sub
aaa
in
push
in
cld
jb
jmp
sahf
in
sub
sub
out
jne
es
out
out
vpsraw
or
inc
push
mov
daa
add
push
ljmp
jnp,pt
add
stos
notb
inc
adc
lock
mov
sbb
xchg
loope
push
sbb
and
imul
insb
mov
imul
ret
dec
pop
jo
xchg
dec
sbb
ret
sub
repz
bound
je
pop
mov
xor
mov
inc
mov
or
ljmp
cmc
add
nop
cltd
mov
rorb
push
mov
fwait
and
int3
ret
add
fmuls
push
cmpsl
adc
or
cmp
and
enter
mov
xchg
ret
xchg
push
das
jg
push
sti
test
sbb
dec
jecxz
pop
or
paddd
daa
sub
cmp
andl
out
test
testl
leave
fidivs
mov
pop
sub
dec
jno
adc
mov
loopne
movsl
mov
in
lcall
sbb
sub
pop
mov
ds
push
sbb
push
inc
mov
sub
out
scas
das
add
sbb
sarl
sbb
test
jp
mov
cltd
cmpsb
in
ret
mov
mov
or
mov
lods
adc
je
dec
jp
das
mov
xor
xor
test
jnp
dec
subb
imul
add
fcomi
je
inc
insb
push
mov
js
jmp
mov
in
xchg
out
daa
mov
mov
xchg
mov
into
and
mov
in
mov
and
fwait
mov
bound
sbb
jno
repnz
imul
mov
inc
sub
xor
ds
es
jo
into
and
inc
dec
mov
and
xchg
mov
lds
cmp
xchg
jmp
pop
and
jbe
stos
stos
sub
cwtl
loope
out
xchg
inc
aad
rorb
adc
dec
jge
xor
fisubs
sbb
add
imul
jbe
icebp
stos
or
sar
or
push
iret
dec
jb
enter
mov
pop
fdivs
aaa
loope
lret
add
pop
push
sbb
ret
inc
movsb
shl
aam
rcrl
rolb
dec
inc
add
push
lods
jecxz
mov
cmp
into
jg
xchg
and
popf
jae
imul
test
or
sti
movsl
push
repnz
mov
mov
mov
dec
jp
fmull
out
pushf
jmp
pop
cmp
lcall
in
jmp
jl
and
xorl
xchg
push
cwtl
push
call
testl
sarb
mov
mov
ficoms
in
rcll
mov
mov
inc
enter
addl
inc
ret
xchg
jmp
jge
in
test
cmp
xor
loop
mov
insl
and
jmp
xor
pop
adc
cmp
xchg
jmp
xlat
pusha
gs
inc
insl
jno
lods
xchg
push
jle
mov
test
cwtl
cld
scas
lret
adc
mov
add
push
repnz
aad
clc
pop
jae
shl
aaa
iret
cmp
pop
mov
sahf
adc
pop
pop
inc
ficoml
leave
jo
clc
rorb
popa
mov
pop
call
movsl
or
cld
inc
jne
into
loop
jo
push
dec
sub
sub
adc
cld
push
in
scas
fisubrs
scas
imul
lods
stc
stc
xchg
out
inc
lret
mov
lods
bound
push
ljmp
mov
mov
xchg
push
lahf
sti
cmp
sub
ds
out
push
xchg
add
rorb
xchg
xor
and
or
imul
bound
repz
cmp
sbb
fsubs
jl
stos
ret
or
cmp
notb
sarb
inc
inc
cmpsb
mov
add
jmp
sbb
jmp
mov
ljmp
push
lret
lcall
popa
xchg
scas
jp
jg
or
dec
test
rorl
adc
in
sarb
daa
and
mov
sbb
pushf
mov
xchg
cld
imul
roll
int3
lret
push
cs
ficoml
xor
into
loope
or
ja
xor
inc
jne
clc
aas
outsl
aas
sbb
sub
cmp
cld
xchg
fisubs
and
jle
mov
xor
add
jg
mov
movsb
pop
popa
xor
sub
pop
out
adc
mov
loop
push
jmp
pop
xchg
jg
mov
ror
or
mov
into
popa
jp
fstpl
push
in
adc
in
pop
cmpsb
xor
xchg
add
xor
adc
sbb
gs
adc
mov
sbb
mov
jne
inc
sub
xchg
stos
dec
adc
and
dec
shlb
jge
ret
jae
sbb
inc
incb
imul
in
aaa
pusha
pop
ja
jge
jle
sub
lret
xor
and
adc
sub
or
xchg
jle
xor
popa
cmp
xchg
push
sbb
xchg
arpl
add
cltd
adc
xchg
daa
push
adc
jge
push
rcrl
leave
aad
xor
pusha
push
dec
mov
pop
ror
inc
or
pop
lods
lret
push
push
inc
push
loope
or
jb,pn
add
jo
xchg
or
testl
dec
dec
xchg
mov
andb
pushf
dec
and
or
clc
stos
cltd
movsb
subl
or
jb
adc
popa
and
fbld
xor
in
mov
imul
or
dec
inc
cmp
je
pop
pop
insw
push
cwtl
push
out
pushf
divb
out
mov
out
jnp
mov
mov
popf
cmp
push
frstor
es
mov
insl
cmpsl
mov
xor
in
icebp
dec
sahf
mov
sbb
push
pop
lret
arpl
xor
lds
lret
push
ja
xor
jge
xor
scas
test
pop
test
mov
loop
es
and
sbb
stos
cmp
inc
enter
arpl
xchg
mov
push
xor
in
pop
sub
daa
repz
push
dec
mov
loop
sbb
pop
mov
imul
popf
mov
or
shl
cli
rcll
fs
shrb
sbb
mov
jp
sbb
jle
mov
pop
xor
mov
or
inc
lahf
or
sub
sbb
jp
mul
orl
jns
fstl
push
fwait
lret
xchg
scas
jp
jne
xor
mov
in
fsubrl
das
in
adc
jecxz
repnz
jb
bound
xchg
outsl
subb
sub
popf
call
test
negb
cmp
in
imul
jno
inc
leave
pop
gs
cmp
fistpl
xchg
sti
xchg
sbb
mov
inc
jecxz
jmp
scas
xor
ficoms
shll
loope
push
lahf
push
xchg
les
repnz
adc
push
jbe
pop
loop
js
out
xor
mov
xor
test
mov
xor
and
scas
cltd
ss
lret
aam
dec
ds
adc
mov
sbb
mov
mov
enter
xor
mov
mov
cmp
shll
xchg
push
out
mov
xchg
pop
fwait
xchg
hlt
push
mulb
out
enter
pop
outsl
testb
inc
scas
cmp
dec
rcrb
mov
dec
ljmp
mov
fs
jg
aas
xchg
ret
das
push
sti
pop
inc
addr16
clc
movsw
xchg
mov
cwtl
mov
out
or
sub
test
mov
inc
mov
or
lahf
xor
notb
xlat
dec
mov
jbe
test
sbb
scas
fstl
sti
jg
enter
xor
movsb
shlb
out
and
dec
mov
mov
inc
xchg
pop
cmpsb
adcl
push
add
xor
jle
sete
push
push
imul
jb
push
mov
lods
sti
cmp
lods
cltd
pop
dec
inc
jp
add
fucomip
jno
sbb
jle
jne
sahf
ret
movsb
pop
mov
fs
cltd
mov
dec
cmp
cs
subl
xor
push
sbb
daa
fisttpll
mov
aam
and
sub
sub
test
dec
push
and
fiadds
pushf
sbb
jo
fildll
scas
int3
jle
fistpl
movsl
add
mov
xor
adc
sub
test
jge
lret
pop
pop
dec
movsb
dec
mov
insb
push
iret
jle
sub
fsts
test
xchg
inc
mov
out
sbbl
cmp
out
and
mov
movsb
or
orb
cmc
xor
sbb
dec
and
daa
adc
movsb
fisttps
scas
clc
aaa
jecxz
bound
push
sub
sahf
cltd
cmpsb
cmp
pop
fimuls
jmp
xorb
inc
mov
stos
cmp
mov
mov
cmp
ja
out
mov
je
loope
adc
xlat
lret
lea
sbb
xchg
cld
cld
mov
ljmp
in
loop
into
into
dec
mov
pop
jb
mov
pop
fiaddl
dec
les
out
arpl
xor
push
call
xor
adc
mov
pop
xchg
out
lock
out
lods
test
fmull
mov
test
inc
push
les
jne
lret
dec
imul
in
mov
mov
or
int
pop
lods
or
inc
cld
fmuls
dec
dec
and
jmp
imul
scas
dec
mov
scas
sbb
roll
inc
and
mov
add
dec
clc
sbb
jnp
aaa
fcmove
pusha
divb
test
jno
or
push
fdivr
cwtl
pushf
fs
stos
push
sbb
xchg
xor
imul
pop
push
mov
sbb
sub
iret
push
mov
jmp
sbb
int
pop
mov
repz
xor
fdivrp
mov
pusha
aad
xor
sub
jmp
fstpl
incb
xor
cltd
sbb
fbstp
into
shll
lods
addr16
sub
ljmp
cli
jle
jp
adc
xchg
sarl
sub
popf
es
popa
push
mov
fidivrl
xor
xor
xor
mov
das
cmp
mov
xchg
xor
lock
ljmp
sub
sbb
cmp
xlat
icebp
enter
sbb
dec
rcrb
cmp
inc
sub
ja
dec
push
int3
out
aad
xchg
or
inc
ss
mov
aaa
out
sub
lcall
mov
in
les
lods
mov
add
add
and
jbe
mov
shld
clc
adc
in
jp
icebp
mov
add
inc
insb
jne
adc
les
pop
mov
add
popf
mov
ror
sub
push
arpl
sbb
outsl
lods
mov
ja
push
mov
or
lods
sbb
mulb
in
test
insl
lds
sub
xor
or
sbb
jne
aaa
sbb
inc
push
add
in
dec
js
mov
mov
xor
popa
roll
push
sub
repnz
and
stos
movsb
popa
cmp
out
stos
mov
ljmp
jae
add
rolb
push
es
push
ret
push
imul
sub
fisubl
xor
inc
jo
push
xchg
addb
enter
adc
test
sbb
mov
inc
std
incl
dec
jno
add
mov
lret
mov
cli
cmovae
jnp
je
cwtl
jne
adc
bnd
lock
xor
and
stc
adc
call
or
cmpsl
lds
sahf
subb
fdivl
mov
insl
lds
cmp
pop
inc
cmpsl
adc
cli
jne
das
push
adc
push
add
push
add
push
jl
mov
lret
lcall
pop
adc
fstps
dec
outsb
dec
xchg
dec
dec
movsb
cmp
or
mov
and
push
fs
leave
fwait
xlat
nop
pushf
icebp
and
dec
dec
push
xchg
fiaddl
rorb
cmp
inc
sbb
icebp
jecxz
idiv
sbb
or
xor
xchg
in
and
jnp
inc
shlb
and
xchg
fiadds
or
xchg
xchg
outsb
jno
mov
out
mov
pop
icebp
mov
adc
or
shrb
sar
push
or
out
jno
xlat
pop
or
ret
out
test
and
clc
in
inc
fwait
daa
ja
test
adc
cmpsl
in
icebp
jmp
mov
or
les
jp
adc
out
dec
sbb
and
fsubrs
sbb
pop
leave
jbe
push
sub
add
pop
sbb
popf
mov
mov
es
sbb
je
into
stos
fwait
xchg
push
leave
rcrl
add
sbb
add
nop
mov
xor
sbb
out
jnp
sbb
enter
mov
adc
push
movsb
lret
dec
nop
pop
jle
gs
xchg
bound
add
mov
rol
sub
pop
or
sarb
js
push
adc
into
mov
lds
jg
lret
mov
mov
push
fnsave
test
sbb
idivl
mov
dec
les
inc
push
mov
mov
or
into
mov
add
push
fcompl
js
into
mov
lods
dec
push
sub
mov
lods
and
mov
adc
in
out
and
je
mov
fldt
cwtl
fcmovbe
xchg
sub
scas
pop
and
cwtl
stos
lret
mov
sub
shll
xchg
push
fistl
push
fmulp
lret
and
cs
and
mov
push
pop
ljmp
mov
inc
leave
sbb
xchg
cmp
nop
nop
sub
mov
jg
ljmp
mov
pop
ja
aam
adc
cmp
mov
xor
and
ret
ja
imul
mov
xor
in
popa
clc
data16
out
call
pop
lahf
ds
adc
popa
pop
jecxz
out
jl
rcrl
or
sbb
into
cmpsl
fwait
mov
ss
mov
cmp
jmp
cmp
inc
push
push
pop
push
or
cs
bound
lret
fsub
pop
loop
push
mov
shll
pop
xchg
push
xchg
mov
popa
cmp
fsub
or
movsl
pandn
ja
sbb
clc
mov
mov
mov
and
pop
dec
mov
dec
insb
pop
jg
dec
jp
fs
xor
jb
std
cmp
sbb
ds
lods
xchg
sub
repz
popf
mov
jno
xor
cmpb
adc
xchg
pop
mov
aaa
stos
or
xchg
pop
aad
pop
jp
data16
xchg
cmp
mov
stos
push
fld
xchg
xchg
jecxz
and
lahf
es
hlt
outsl
js
leave
gs
push
aam
inc
pop
gs
dec
out
enter
negl
movaps
rdpmc
jne
add
cltd
fstl
xchg
sahf
outsb
pop
dec
out
fsubrl
sbb
in
in
or
inc
pop
cmp
mov
pusha
notb
push
adc
testb
jp
inc
dec
dec
outsl
mov
dec
cmpsb
jmp
xchg
int
cltd
sarl
outsb
imul
add
jmp
xchg
popf
outsl
lock
dec
cmp
sub
les
dec
sbb
or
test
jge
cmp
and
push
xchg
push
push
push
roll
inc
dec
sbb
icebp
in
xchg
subl
xchg
push
outsl
shll
add
test
pop
mov
fstpl
mov
mov
inc
fcmovnu
xchg
iret
lret
scas
sub
cld
pop
daa
cmp
stc
inc
enter
scas
icebp
mov
xor
xchg
mov
or
cmp
leave
cmpl
sahf
fistpl
xor
inc
cs
stos
mov
cmc
xchg
cmp
movsb
std
test
testb
xchg
jae
xor
rorb
xchg
loope
leave
test
push
mov
or
out
test
xlat
aam
out
mov
jb
cld
arpl
ljmp
lods
inc
inc
inc
mov
pop
out
inc
loop
cli
ror
popa
popa
mov
jmp
cmpsb
or
sbb
ljmp
inc
je
fidivrl
jbe
mov
mov
mov
test
cmp
push
adc
les
iret
fsubrl
fprem1
dec
pop
popa
jo
arpl
add
adc
cwtl
scas
xlat
icebp
lock
mov
add
jle
sbb
jge
subl
and
jecxz
nop
dec
dec
sbb
inc
fimull
rcll
sbb
lods
test
cld
sub
mov
sbb
sub
rcr
or
mov
mulb
addl
popa
jmp
jp
in
sti
int3
ja
ss
leave
xchg
popf
clc
pop
xchg
lahf
lods
cltd
cltd
sahf
mov
or
cmp
in
ret
in
and
cmp
cmpsl
rorb
div
insb
mull
sbb
int3
xor
aas
adc
ret
mull
enter
aad
iret
sbb
mov
out
xchg
rcll
xchg
mov
hlt
mov
xlat
mov
data16
sub
lods
xchg
mov
add
push
xchg
ret
loope
push
jle
dec
in
into
xorb
jno
adc
dec
lock
mov
add
sbb
xchg
mov
icebp
sbb
sub
loope
mov
fsubrs
mov
pusha
sti
lea
jns
pop
fadds
test
cmpsl
out
pop
dec
test
add
std
add
cwtl
add
stos
push
je
push
cmpsl
or
jo
push
inc
cmp
aad
cmp
fdivs
sub
inc
jne
mov
mov
data16
mov
dec
aad
sbb
nop
push
mov
jmp
push
xor
mov
aam
fimull
cmp
sub
dec
clc
push
popf
xchg
sbb
cmp
gs
cld
cmp
xor
rcrb
orb
add
sub
cmp
nop
jo
or
lds
sbb
pop
mov
add
cli
outsl
jp
cmp
xlat
dec
inc
pop
into
pop
mov
mov
dec
mov
sbb
jmp
dec
lock
call
pop
cmp
fisttps
jno
xchg
xchg
lds
xor
pusha
aaa
push
inc
jp
pop
test
mov
push
adc
sub
popa
repz
cmp
hlt
push
dec
hlt
mov
ret
gs
in
xor
aas
mov
xlat
cmpl
test
incb
xchg
xor
bound
xchg
mov
jmp
jnp
int3
std
movaps
jecxz
out
add
ror
sbb
mov
xchg
push
fcoms
xchg
aas
movsl
add
cmc
jbe
lahf
cmp
jnp
stos
cmc
xorb
xor
or
inc
and
or
mov
and
add
sbb
lock
xlat
inc
mov
or
pop
lret
loop
xor
pop
out
inc
push
cmpsb
pop
or
sbb
jne
push
push
call
mov
xchg
rclb
test
jo
xchg
mov
and
and
pop
rcrl
aam
push
xchg
std
cmp
jns
adc
shlb
cli
mov
or
sub
jp
inc
je
stos
xchg
mull
jg
mov
lahf
inc
enter
pop
sub
les
movsl
mov
mov
jo
fidivrs
icebp
mov
adc
add
mov
mov
mov
repnz
loope
ret
cmp
cmp
paddq
dec
js
mov
mov
ret
repnz
lea
add
jmp
sti
push
out
dec
sub
jle
out
sub
por
inc
xor
cmp
lret
pop
mov
ss
jmp
aas
fidivs
imul
rcrb
and
and
dec
sub
xchg
aam
mov
mov
ja
xchg
sub
out
jnp
jns
push
mov
enter
mov
subw
sti
dec
iret
pop
fdivrl
push
push
lds
mov
jmp
inc
or
xchg
test
xor
cmpl
out
jmp
pop
pop
into
incl
and
inc
stos
xor
cmp
adc
push
shl
das
mov
add
push
sbb
xlat
bound
movsl
lahf
sbb
int3
xor
aam
xor
cmp
outsb
mov
rolb
insl
pop
dec
dec
xor
mov
leave
sbb
sub
push
icebp
mov
mov
incl
and
mov
fidivrl
shll
scas
xchg
xor
and
call
sub
xchg
gs
clc
push
inc
push
ljmp
adc
mov
out
sbb
mov
cmp
xor
push
mov
movsb
jbe
adc
or
sbb
push
xorb
dec
pop
popa
add
pop
movsl
adc
outsl
push
mov
daa
xor
adc
es
leave
cmp
ja
les
std
xor
imul
adc
inc
ret
push
out
aaa
mov
add
pop
jne
push
idivl
pop
fbstp
mov
inc
pop
aas
lret
pop
lods
and
xchg
cmc
xor
sti
dec
mov
add
xlat
cmc
jae
fldt
ss
lret
aam
fwait
repnz
xor
inc
dec
push
nop
outsb
mov
imul
into
pop
mov
out
imul
sti
cmp
mov
jp
cmpsb
xor
pop
dec
push
cld
adc
test
movsb
xchg
sbb
and
lods
xchg
fsubrs
test
pushf
fildl
xchg
pop
adc
lret
test
mov
add
lahf
in
fxch
push
xor
sar
inc
sbb
and
push
cmp
iret
scas
mov
lcall
in
push
cmp
xor
mov
test
mov
cmp
test
or
iret
arpl
shrl
inc
mov
cmp
imul
push
stos
outsl
mov
jne
stc
loopne
daa
cltd
fwait
mov
das
adc
pop
lahf
pop
incl
or
negl
push
sub
lods
adc
lea
aaa
stos
inc
outsb
ja
xchg
cmp
cmp
dec
bound
adc
sahf
mov
xchg
lahf
jnp
or
cmpsl
dec
jno
in
aam
push
in
cmc
xor
xor
push
enter
mov
fsubl
mov
and
mov
shrl
repz
iret
add
xor
cmc
xor
stc
fwait
subl
jge
jno
cmp
push
jp
shll
or
jle
xor
jge
fisttpl
cli
not
mov
xor
stc
adc
ss
pusha
call
lcall
sbb
dec
les
push
or
cli
xchg
int
cwtl
ss
scas
mov
mov
pop
ret
mov
cvtdq2ps
fildl
xchg
adc
xor
push
nop
cmp
xor
xchg
push
aaa
and
add
pop
jg
popf
cmpsb
dec
mov
sbb
sub
xor
andl
lahf
dec
in
push
aad
popa
ror
xchg
mov
aam
test
stc
jnp
adc
xor
daa
jp
pop
push
adc
add
mov
mov
xchg
push
mov
cmp
jbe
sbb
sti
adc
jle
in
ffreep
test
out
mov
xor
sub
inc
sti
pop
xchg
aaa
pushf
or
jb
sahf
out
sub
mov
adc
push
mov
or
lds
test
pop
jns
test
scas
dec
xchg
sbb
push
cmp
ret
leave
mov
sbb
mulb
sbb
out
inc
inc
dec
mov
lret
mov
mov
sub
push
fidivs
push
cwtl
mov
pop
pop
xchg
xlat
aaa
xchg
cmp
push
lock
cmp
stos
cmc
out
push
adc
fnsave
popa
or
cmp
adc
fsubp
mov
imul
mov
xlat
xchg
frstor
arpl
loopne
insl
cli
hlt
out
xor
add
dec
sbb
roll
out
mov
fistpl
mov
cmp
pop
in
ficoml
or
nop
xor
push
sub
shlb
push
sub
mov
mov
xor
fistps
pop
lea
mov
push
sbb
movsl
mul
pushl
mov
divb
aad
or
fsts
add
push
subl
sub
test
orb
xchg
push
addr16
mov
out
xchg
pop
lods
stc
nop
aaa
rolb
adc
cwtl
outsl
lcall
or
mov
insb
lret
hlt
stos
sub
and
seta
lret
xchg
add
xor
std
mov
sbb
xor
sub
cmpb
mov
js
mov
aad
mov
lret
call
aaa
arpl
cmp
and
enter
add
idivb
xor
jmp
fdivrs
outsl
inc
test
test
pop
gs
dec
xor
and
data16
mov
cmp
push
mov
pop
mov
imul
ss
mov
sub
cmp
inc
push
inc
clc
adc
jno
pop
imul
jne
out
aam
jg
dec
push
sub
add
aam
jbe
lds
insl
mov
ja
jge
loope
cmp
fimuls
mov
pop
nop
or
mov
cmc
jns
shlb
pop
clc
mov
mov
sub
mov
cmp
in
mov
pop
aaa
xor
bound
jns
test
sub
rcrl
add
mov
mov
adc
jno
mov
pop
mov
mov
repnz
mov
das
loope
stc
icebp
int
dec
jbe
cmp
pop
popa
ret
cmpsb
inc
cli
mov
outsb
pop
xor
sbbb
loope
mov
push
push
dec
lea
int3
xchg
mov
daa
xor
mov
cmpsb
jnp
test
divl
cwtl
mov
xchg
or
sbb
mov
imul
stos
cmpsl
jp
inc
ret
mov
rorb
rol
scas
fiadds
mov
nop
arpl
inc
and
jp
dec
call
stos
push
jle
ficompl
nop
dec
in
div
fildll
les
cmp
lds
jns
test
pop
pop
inc
out
loop
shlb
in
adc
mov
pop
cmp
mov
or
mov
mov
pop
push
mov
jecxz
cmp
jmp
rcrb
mov
push
mov
addb
fisubrs
xor
push
inc
xchg
push
ret
iret
popa
xchg
ja
fnsave
int
push
out
cmpsl
pop
sbb
fdivr
ds
adc
jae
out
nop
scas
sub
jne
sti
call
jl
pop
adc
or
test
or
mov
mov
mov
mov
dec
xchg
sbb
sysenter
arpl
imulb
or
mov
cld
xchg
push
in
add
xor
pop
pop
cld
mov
pop
sbb
push
fidivs
gs
out
loope
sahf
test
lcall
fadds
cmp
sbb
das
xchg
sbb
bound
movl
ss
jle
std
dec
xchg
movsb
add
cli
arpl
out
mov
cmpsb
xchg
fdivl
and
xchg
repnz
mov
mov
push
inc
sub
fstl
jp
mov
rclb
out
imul
push
and
imul
rep
mov
aad
fisttpll
xabort
insb
scas
fisttps
pusha
hlt
mov
test
and
aaa
cmp
inc
scas
in
imul
pop
adc
je
mov
mov
add
in
xchg
aad
jo
push
lods
pop
sti
xchg
je
out
daa
or
je
pop
fs
inc
xchg
loope
xlat
ljmp
mov
adcb
repz
mov
clc
rclb
daa
adc
adc
fcomps
fcmovnb
imul
pop
and
gs
mov
test
bound
in
sbb
mov
fcoml
icebp
xchg
dec
add
add
push
inc
enter
and
int
gs
add
mov
lahf
es
outsl
jno
es
push
xchg
bound
pop
je
or
aam
mov
and
push
xchg
pop
fistps
stc
pop
sahf
mov
mov
sahf
iret
int
inc
cmp
add
pop
ret
in
ret
sbb
sarb
scas
aam
xchg
stos
jb
xbegin
dec
movsb
jne
sub
fidivl
in
or
stc
addr16
fistpll
dec
sahf
iret
or
test
ds
push
pop
arpl
repnz
bound
mov
mov
pop
adc
add
mov
mov
cmc
popa
ret
push
jp
dec
enter
push
sbb
outsb
ljmp
aaa
ljmp
push
lcall
push
arpl
jl
ds
cmp
enter
dec
cmp
mov
enter
push
in
notl
jnp
cmp
mov
adc
mov
xchg
mov
scas
push
cld
and
arpl
mov
jmp
outsb
in
insb
mov
lds
push
mov
mov
lret
xchg
dec
xchg
sbb
xor
iret
in
pop
add
push
xchg
pusha
mov
mov
add
cmc
fsubp
sub
in
dec
hlt
gs
sahf
or
repz
pop
call
push
jp
push
arpl
fisttpll
add
sbb
jnp
cmpsl
fistps
inc
xchg
xorl
lcall
lea
jl
inc
sbb
inc
dec
mov
loopne
hlt
mov
out
inc
test
jbe
add
mov
adc
lret
fists
test
pop
inc
pop
jb
or
push
lods
std
jmp
adc
ficompl
sbb
xchg
push
scas
jbe
xor
and
xchg
testl
push
in
xchg
xchg
xorl
mov
ret
push
mov
cmpsb
fs
mov
mov
mov
inc
jmp
sub
sub
push
outsb
fs
jnp
shlb
push
fdivs
js
dec
subb
xor
or
sub
adc
in
mov
in
mov
jl
iret
jbe
push
pop
inc
in
dec
xor
pop
xchg
sahf
ret
lea
lock
add
inc
call
dec
sti
sbb
mov
mov
pop
pop
cmpsl
sub
jns
dec
mov
cwtl
xchg
fwait
jnp
lret
out
pop
test
cmp
lock
dec
fnstcw
mov
popa
sbb
int3
xchg
cmp
jo
dec
add
cmpsl
adc
xchg
mov
in
or
fstp
arpl
orb
cmpsl
pusha
enter
ret
cmpsl
add
stc
lea
adc
outsl
js
cltd
loope
or
hlt
jnp
mov
xchg
push
cmp
cmp
ret
jge
filds
pop
cwtl
sahf
sti
mov
lods
mov
push
clc
sbb
xor
icebp
jg
adcb
jl
pop
subl
sub
andb
mov
imul
fimull
mov
aas
mov
sub
js
int3
xchg
ss
xor
pop
ds
pop
add
jg
ja
pusha
filds
std
das
sub
es
in
in
lods
inc
xchg
xor
rorl
test
jp
xchg
pop
fnstenv
lock
lds
xchg
mov
add
ss
jbe
sub
mov
mov
andb
bound
cmpsb
sti
push
arpl
cmc
fwait
or
push
fnsave
mov
xchg
orb
cmc
or
cli
movsl
mov
shl
mov
dec
gs
mov
lock
push
ss
sub
bound
push
insl
sbb
inc
mov
test
pop
addr16
pop
sub
pop
inc
cmp
movsl
fucomip
enter
stc
adc
mov
ds
jno
inc
in
add
repnz
lods
mov
pushf
vunpckhps
cmp
fs
sbbb
ljmp
xchg
ja
cld
pop
xor
add
mov
and
and
lock
xor
pop
sub
iret
or
fcmovnb
mov
fisubl
call
xor
sbb
shrl
int3
addb
jg
addl
mov
imul
add
sub
mov
lcall
push
mov
inc
push
xchg
sbb
mov
jne
sbb
sub
inc
and
daa
js
stc
or
out
addr16
lret
les
and
lahf
adc
fdivrl
nop
dec
iretw
sahf
or
mov
jp
ja
push
movsl
push
cltd
shrb
in
or
adc
jmp
mov
pop
add
cmpsl
xchg
xchg
cld
mov
addr16
pop
and
dec
pusha
es
cmpsl
xor
jp
and
shlb
andnps
aas
inc
pop
xchg
adc
jns
xchg
mov
push
mov
push
lahf
in
push
adc
jb
inc
bound
jl
cmp
in
sarb
call
mov
stos
clc
mov
sahf
push
adc
push
inc
mov
ja
and
cmp
sti
push
and
dec
inc
mov
mov
loope
cli
cmpsb
mov
call
shrl
int3
cmp
xchg
movsb
je
mov
je
xchg
and
cld
cmp
test
hlt
inc
inc
xor
xchg
sub
mov
mov
std
mov
loopne
mov
jle
lahf
xlat
pop
stc
mov
add
fstpt
inc
mov
loop
rorb
jmp
popa
stos
loopne
add
adc
in
imul
into
popa
mov
leave
insb
sahf
out
adc
push
jae
shrl
sarb
orb
dec
sub
daa
pop
sub
push
sub
popf
push
mov
loopne
push
push
scas
pusha
inc
mov
incl
fadds
iret
xchg
mov
push
jecxz
mov
sbb
add
mov
in
pop
xchg
das
cmp
dec
out
movnti
int
mov
xchg
cmp
shl
lret
mov
sub
jb
in
xchg
adc
pop
xorl
into
jae
dec
xor
lock
adc
mov
xchg
dec
sub
rolb
sub
in
jmp
test
stos
xor
push
aam
popa
popf
mov
dec
pusha
test
enter
adc
movsl
movsb
nop
and
cmp
xor
fisubrl
stos
leave
sbb
aad
adc
lds
push
xchg
xor
aam
xchg
cmpsl
popa
mov
jg
or
arpl
mull
jl
inc
add
fnstenv
push
sub
fstp
leave
mov
mov
out
cmp
out
ss
mov
pop
jb
mov
and
add
cld
add
lret
filds
out
pushf
cmpsl
daa
push
icebp
call
sub
and
fsubs
stos
xchg
push
push
xor
lods
insb
scas
lret
or
leave
loopne
packsswb
mov
shlb
test
sub
pop
out
fsubrl
in
fwait
sub
out
push
mov
adc
jns
mov
xor
mov
add
je
int
mov
push
subl
outsl
pop
outsb
loop
stos
stos
jg
sub
mov
aas
push
lahf
fildl
adc
mov
dec
or
sbb
jne
sub
jp
cli
lods
cltd
sbb
jl
xchg
adc
jle
xor
pop
inc
in
test
jnp
and
xor
mov
jg
xchg
fiadds
pushf
fwait
inc
mov
repnz
mov
add
or
enter
sbbb
inc
insb
stos
and
add
fs
loope
inc
shll
or
cmp
pop
jo
faddp
dec
hlt
dec
mov
jl
fistpll
fcmovnb
addr16
xor
mov
mov
lret
in
push
repnz
sub
cmp
cltd
cmc
dec
add
movsb
lea
je
xor
or
idivl
outsb
leave
cmpsl
pushf
into
aam
xchg
sbb
or
mov
and
ss
xlat
push
push
outsl
mov
aad
lock
pop
cwtl
inc
pop
cwtl
stos
push
lock
xchg
dec
pop
mov
pusha
adc
mov
gs
adc
popa
xchg
cwtl
shl
jo
dec
and
cmovo
sbb
fidivrs
sub
lock
push
adc
jmp
lahf
jbe
jbe
lret
int
lret
mov
mov
lds
mov
or
aam
adc
test
repz
dec
xchg
aas
movsb
mov
push
jecxz
sub
stos
jecxz
mov
clc
stc
sub
push
mov
cld
dec
ret
test
les
jecxz
mov
jl
and
sbb
rsqrtps
add
xchg
ds
aaa
pushf
sub
psubd
fwait
cmp
lea
leave
pusha
dec
and
mov
mov
mov
jb
jbe
mov
insb
mov
or
jmp
out
mov
push
daa
das
stc
je
sti
ret
jb
outsb
cmp
lea
ja
cmp
rcrb
fcomi
sub
adc
lcall
psrlw
mov
fucom
dec
sbb
jecxz
divb
cmp
sbb
jnp
inc
jecxz
dec
test
jns
aam
mov
scas
lds
push
test
mov
in
pop
scas
push
adc
pop
cltd
enter
daa
jg
xlat
sti
sbb
orl
cltd
inc
leave
ss
cmpsl
cmpps
xchg
pop
icebp
mov
in
insb
imul
pusha
jne
add
mov
scas
sbb
jmp
data16
dec
hlt
cmp
sbb
in
out
cmpsl
mov
dec
imul
nop
ret
inc
aam
loop
add
jns
cmp
js
fistpll
jge
and
xchg
mov
sbb
mov
jns
push
push
pushf
sub
pop
sbbb
cmp
and
pushf
movl
push
into
fists
xor
ja
test
clc
stos
mov
adc
int3
mov
fisttps
mov
jge
sahf
stc
arpl
sbb
pop
shr
enter
or
adc
xlat
fstps
notl
push
add
mov
push
std
xchg
addr16
jb
and
loope
arpl
lods
insb
push
mov
out
subb
push
mov
and
lret
mov
pop
sarl
ds
mov
insb
out
mov
stc
cmp
sub
mov
mov
mov
cmp
mov
into
int3
cmp
sbb
shl
lcall
fisubrs
ja
ss
mov
js
loopne
cli
setge
mov
xor
push
mov
mov
jge
push
pop
fldenv
add
lea
ret
add
mov
pop
dec
and
add
cmp
movsl
sbb
aad
pop
mov
inc
les
adc
and
inc
into
jmp
push
push
lods
add
and
mov
fs
dec
xchg
mov
pop
ret
mov
loopne
dec
push
sbb
cmc
lds
adc
dec
lock
pop
cmc
cwtl
sti
cli
ficompl
loope
sarl
dec
test
sub
jge
jmp
into
cwtl
push
jne
jnp
adc
adc
test
loope
xchg
adc
pop
push
cld
push
or
mov
loop
test
mov
fcomi
xor
pop
ficomps
sbb
sbb
or
inc
cli
hlt
sti
push
adc
mov
pop
cmp
xchg
mov
fnsave
xor
fimull
mov
and
or
inc
and
pushf
fcomps
mov
jne
inc
fs
or
out
dec
adc
dec
add
sbb
add
cmp
adc
ja
xor
push
outsl
and
call
sub
sti
cmpb
pop
test
jb
movsb
addr16
pop
pop
dec
push
adc
sbb
cmp
pop
push
adc
jp
popf
popa
add
jecxz
movsb
cmc
or
or
repnz
push
sbb
xor
fsubr
cmpl
pop
movsb
imull
imul
outsl
int3
sub
in
jle
push
std
aam
jge
add
in
scas
sarb
and
mov
icebp
sarl
inc
fsts
movl
pop
cwtl
add
pop
incb
sbb
and
dec
add
out
dec
push
cmp
pop
pop
int
xor
jl
adc
dec
fs
mov
push
inc
cltd
jge
mov
xor
mov
add
pop
xchg
in
push
pop
or
aas
repnz
ret
lods
mov
imul
fiaddl
push
mov
adc
dec
mov
inc
push
mov
pushf
pop
push
or
add
fsubr
lods
incl
push
fisttps
sahf
aad
dec
out
rorl
xor
xor
push
inc
and
out
add
and
fs
arpl
or
int3
lcall
inc
mov
mov
add
popf
test
cltd
jecxz
pop
flds
mov
mov
fwait
out
mov
int
or
in
xchg
je
cmp
cmp
inc
in
mov
cmpsb
xchg
fucom
cli
xchg
bound
inc
xor
mov
movsl
add
sbb
xor
or
nop
ret
pop
int3
lds
loope
aam
into
fisubrl
inc
cmp
pop
movsl
fstps
loopne
jns
xor
cmp
iret
xor
fisubs
aas
addr16
and
in
add
sub
jo
outsb
inc
rcr
xor
pop
pop
push
arpl
cmp
test
mov
sub
xchg
xor
jg
mov
cmp
popf
cmp
test
pop
and
push
xor
xor
jge
clc
fidivrl
jb
pop
cmpsl
add
in
cmp
adc
loope
dec
das
xchg
pop
push
fxch
mov
jno
push
or
jp
jb
inc
and
dec
lahf
dec
mov
push
aas
ljmp
repz
mov
sti
sarl
jmp
adc
iret
mov
mov
pop
mov
inc
enter
adc
or
out
push
mov
ficompl
out
jl
mov
or
sbb
pop
jns
stc
aam
xchg
outsb
test
mov
in
leave
jmp
add
hlt
divb
sbb
pop
dec
mov
dec
xchg
adc
aas
test
insl
mov
inc
ficomps
cmp
in
mov
lcall
shll
sub
pushf
inc
dec
sbb
cwtl
mov
push
imull
leave
repz
add
mov
xchg
cmp
add
xchg
shr
test
dec
std
mov
add
in
lcall
sbb
adc
mov
pusha
mov
sub
inc
add
pop
mov
pushl
lcall
das
xchg
mov
xor
adc
dec
nop
in
mov
movsb
mov
in
mov
nop
insb
dec
push
push
and
mov
jge
hlt
inc
dec
cmp
cmc
adc
pop
aam
jno
jno
xchg
rol
mov
popa
jae
data16
ror
pop
sbb
repz
jno
inc
fsubr
mov
nop
adc
ljmp
faddl
sti
and
inc
movsb
ljmp
mov
int3
scas
xchg
cltd
sahf
cwtl
mov
sbbl
clc
repnz
sub
mov
cmpsb
hlt
pop
xor
lds
das
push
mov
lods
sub
jmp
nop
jb
pop
push
push
mov
xchg
decl
sti
rcll
pop
inc
sbb
sub
pop
and
nop
movsl
mov
aad
dec
stos
pop
mov
mov
sbb
fldcw
cs
jl
xchg
jmp
jo
xchg
xchg
sbb
push
cmpsb
leave
push
sub
fimull
sbb
or
xchg
dec
mov
rclb
mov
pop
andl
mov
imul
and
adc
jne
pop
imul
push
sti
push
sbb
sub
call
pusha
mov
push
dec
xchg
jle
xchg
or
sbb
inc
xor
lcall
jl
xorb
mov
dec
sbbb
arpl
insb
xchg
sti
mov
xor
or
stc
mov
mov
aam
mov
sbb
push
xlat
bswap
xor
notl
or
stc
test
push
mov
add
jecxz
or
push
mov
fsubl
es
mov
xchg
xor
sbb
je
cld
cld
jg
push
fucom
cmp
int
rorl
std
adc
xchg
in
test
push
adc
dec
pop
int3
add
in
push
inc
lret
mov
cmpsb
pop
adc
gs
inc
decb
in
jge
pop
fcoml
fidivs
push
cmp
outsl
lods
or
mov
pop
test
pop
shlb
mov
pop
mov
ja
insw
fmuls
into
fsubl
cmp
add
mov
int
sub
les
pop
call
and
or
and
inc
dec
inc
push
repnz
fsub
mov
mov
pop
sbb
dec
lcall
test
leave
je
es
push
jecxz
sbb
xchg
xorl
lret
roll
loopne
repnz
xchg
push
int3
sub
cmpsb
popa
xchg
and
jo
data16
scas
cld
push
scas
jge
xchg
and
imul
dec
pop
dec
aas
mov
or
movsl
adcb
inc
xchg
cltd
repnz
sub
hlt
sub
shl
push
inc
mov
rcll
push
and
shld
and
lret
cs
out
mov
pop
pop
jns
push
jns
mov
cmp
push
sbb
jne
mov
inc
ret
pop
jg
dec
loope
aad
xchg
xor
lock
push
testb
add
aad
stc
inc
dec
sti
jbe
and
fwait
out
outsb
jns
add
int3
cmp
push
outsb
fwait
repz
xchg
call
stos
imul
jecxz
dec
rorl
aad
add
mov
fsubs
cmpsb
xor
adc
and
and
int3
dec
cmp
movsl
nop
add
sub
popl
xchg
jne
adc
jle
fisubrl
sbbl
push
xor
addr16
inc
mov
inc
stos
mov
sub
ret
pop
lds
mov
scas
dec
xchg
pop
cmc
jge
mov
jge
pop
fbstp
outsl
sbb
adc
sbb
adc
movsb
xchg
mov
cs
lock
stc
fldl
pop
sbb
push
jge
aad
mov
loop
xchg
fistpl
sbb
mov
and
adc
test
int3
cmpb
add
mov
jbe
popa
das
test
ljmp
jo
push
push
xor
out
xlat
mov
rol
cmp
rcr
ret
xchg
insl
aam
enter
mov
aaa
aas
insb
cvtdq2ps
mov
aas
imul
imul
mov
inc
jp
lea
mov
ljmp
xchg
mov
mov
outsl
test
insl
dec
es
outsb
int
lcall
mov
adc
or
jae
jb
mov
push
lcall
bound
dec
jns
mov
dec
fdivl
mov
in
sub
jo
adc
ret
inc
add
ds
scas
jle
lret
fildll
cmp
dec
or
add
push
inc
subb
aam
inc
cltd
loop
mov
shlb
clc
push
push
dec
pop
test
add
int3
fs
daa
test
xchg
cltd
outsb
mov
ss
aam
push
sub
mov
xor
lods
push
pop
movsl
adc
push
adc
aaa
test
enter
lret
hlt
mov
xor
mov
ss
inc
mov
cld
jno
out
inc
pmulhuw
in
shll
xor
push
xor
orl
adc
loope
jne
lahf
icebp
mov
adc
and
sbb
movsl
cmp
jne
push
lret
fldenv
enter
xor
xchg
movsb
and
xlat
push
leave
mov
orps
nop
jno
loope
dec
cmp
xchg
cwtl
mov
test
ret
jbe
lods
mov
mov
mov
push
and
cld
enter
jnp
push
fistpll
and
f2xm1
push
jb
movsb
dec
xor
pop
push
mov
ja
dec
push
sub
std
add
fdivl
loop
fnstsw
adcl
movsb
and
or
mov
ret
inc
push
sub
adc
jno
xchg
aas
pop
or
dec
sub
gs
popf
loopne
stos
cwtl
into
cli
cmpl
xchg
mov
gs
scas
mov
enter
mov
add
mov
test
dec
pop
shll
and
fists
and
xor
mov
push
imul
xchg
leave
ss
dec
inc
pop
mov
dec
pop
out
bound
jmp
mov
inc
jmp
pop
push
shrl
scas
mov
lea
cmp
mov
push
lods
insl
pop
test
loope
movsb
pusha
leave
add
pop
push
sub
lods
add
push
jne
jbe
imul
fdivp
pop
mov
jecxz
das
cmc
lock
out
xor
cmp
int3
imul
xor
jecxz
out
stc
shlb
stos
ja
aaa
sti
or
mov
neg
adc
les
pusha
xchg
push
inc
mov
xor
pop
in
or
mov
mov
mov
test
pushf
pop
lds
add
ret
repnz
lock
pop
add
jae
iret
in
scas
xor
jmp
imul
inc
addb
fwait
or
in
inc
cmpb
jp
enter
jae
data16
jae
shll
pop
icebp
xchg
pop
shrl
outsl
test
test
pop
dec
adc
xorl
mov
aaa
pop
pop
std
or
sbb
testl
fs
add
test
lea
mov
pop
cmp
movsl
aad
shrb
mov
mov
xchg
mov
cmpsl
fisubrl
icebp
gs
imulb
shlb
cmpsb
sbb
lahf
and
aad
fistps
stc
and
mov
incl
or
jmp
shl
add
add
adc
aad
add
add
dec
xchg
into
es
lahf
and
stos
sahf
inc
mov
popf
or
pop
sbb
fdivs
cmp
aas
inc
in
fdivrs
fisubs
push
clc
aaa
jnp
mov
int3
dec
int
sbb
sbbb
movsl
mov
xchg
dec
orb
jno
repnz
out
inc
mov
or
cmp
insb
add
cmp
cmp
mov
sbb
gs
movsl
mov
scas
push
mov
cmpxchg
lea
pop
pop
add
mov
mov
arpl
cmpsl
aad
inc
ficoms
popf
cld
fdivp
sbbl
out
add
sub
cs
lret
out
pop
jne
mov
out
out
cmp
mov
and
aas
cmpsl
ret
xor
mov
mov
iret
cmp
jne
popa
shlb
xchg
gs
jns
push
sbb
popf
rcrb
ret
scas
jae
pop
cmpsb
cli
fisttpll
and
pop
fisubs
into
f2xm1
jbe
pop
jmp
inc
das
ret
jmp
pop
fnsave
punpckhbw
sbb
inc
shl
in
xchg
push
mov
dec
jo
cmpsl
loope
mov
scas
cltd
cli
inc
dec
inc
inc
mov
jnp
dec
icebp
cwtl
mov
inc
mov
dec
push
test
push
test
push
pop
ud0
sbb
jecxz
mov
rolb
orl
fs
adc
jl
mov
push
gs
dec
movsb
js
shll
ret
ds
test
fmul
lock
repnz
mov
fmul
sbb
mov
xlat
or
inc
dec
xchg
sbb
enter
cmp
roll
cli
pop
or
jmp
sahf
xchg
mull
outsb
loop
pop
stos
in
repz
cwtl
mov
push
xor
and
sbb
mov
sub
adc
sub
cmp
rcrl
cs
rcll
lea
lods
lret
mov
movsb
cmc
test
pop
ljmp
lret
mov
in
jge
jbe
mov
adcb
mov
or
in
repz
cs
add
push
stc
push
js
and
jo
lods
mov
push
dec
adc
shlb
ret
mov
jg
mov
ficoms
jae
ja
shll
push
mov
mov
cmp
sub
call
loope,pt
mov
push
and
inc
sub
pusha
loopne
dec
cmpsl
push
bound
popf
pop
sarl
clc
mov
add
and
xor
mov
cmp
mov
pop
xchg
or
sbb
insb
jnp
std
nop
shl
in
fsubp
xor
ret
xor
xchg
insb
xstore-rng
cmpsl
add
fidivrl
aad
iret
lahf
xor
mov
xchg
pushf
shll
inc
fwait
fwait
test
cmc
fsubr
mov
and
fstps
mov
adc
test
cmc
lods
icebp
sahf
jae
mov
jnp
dec
jmp
lcall
mov
adc
sarb
xchg
mov
inc
call
bound
insl
dec
inc
imul
sbb
cwtl
xchg
scas
jmp
mov
ljmp
mov
dec
mov
pop
adc
lcall
loopne
jge
mov
adc
pop
xor
fs
pop
scas
or
loop
ret
sti
and
cltd
mulb
jae
and
mov
mov
dec
jnp
and
loopne
pusha
mov
rcl
dec
hlt
push
subb
jl
in
js
mov
pop
cmp
movsl
out
mov
bts
jge
pop
mov
shlb
add
mov
outsb
in
cmp
sbb
inc
scas
negl
cmp
lock
pop
cli
inc
cmp
lds
jmp
aaa
or
push
bound
dec
sbb
pusha
mov
sahf
mov
popf
int
and
push
mov
mov
jnp
clc
sbb
sub
call
test
push
repz
pushl
pop
jae
sti
test
cmpsb
pop
nop
loope
pop
mov
ss
mov
xor
iret
dec
aas
ficompl
push
lods
adc
inc
popf
xchg
movsl
lcall
cli
lcall
jmp
push
call
sbb
cli
fisttpl
ja
push
mov
add
shl
out
xlat
lret
mov
fsubr
jle
lds
cwtl
push
jle
fiaddl
pop
push
xcrypt-cbc
cmpsl
push
in
push
push
jno
sahf
cwtl
popl
push
bnd
pushf
arpl
mov
setne
clc
pop
sbb
ret
xchg
test
jge
arpl
lea
outsl
adc
mov
js
insl
pusha
pop
outsl
adcl
mov
jb
cli
sbb
or
fstpl
fcomi
jo
mov
xchg
sbb
mov
das
not
jnp
cmp
inc
lahf
xor
cmp
aas
mov
js
pop
fcomps
mov
xchg
les
stos
or
xor
cld
or
add
mov
out
or
jbe
imul
inc
in
jno
cmp
out
nop
inc
inc
lods
addl
das
sbb
jb
xor
in
add
fcmovb
add
mov
test
jge
adc
jg
sbb
test
test
push
test
shll
call
adc
dec
aam
lretw
xor
in
or
push
aas
dec
and
test
ljmp
call
pop
fldt
adc
adc
cmc
push
inc
mov
mov
aas
in
sbb
inc
dec
jb
mov
shl
push
stos
pop
insl
cmpl
in
pop
or
fistpl
dec
pusha
adc
push
adc
mov
pushf
mov
repz
shl
xor
push
adc
adc
sar
xchg
int3
inc
inc
loope
and
pop
orl
les
pop
in
sub
ret
push
cmp
inc
xlat
mov
mov
fnstsw
pop
sub
mov
mov
loopne
test
push
int3
mov
cmpsl
push
mov
inc
out
mov
mov
es
or
and
cld
xor
andb
popa
pop
jb
push
sbb
bound
mov
testl
mov
aad
inc
cmpsl
call
sbb
push
dec
pop
xor
xor
inc
out
fs
push
mov
cmp
aas
pop
pop
jle
ds
or
push
fnsave
icebp
test
hlt
mov
mov
jo
repnz
daa
jae
cmc
lret
inc
jecxz
xchg
pop
xchg
ficoms
cwtl
scas
xor
imul
xor
mov
in
out
mov
shl
add
fsubrp
lock
cmpsb
gs
cmp
xchg
insl
jmp
dec
add
fstpt
divb
sub
pop
sbb
push
test
mov
or
sar
sub
xor
sub
lods
andl
jl
inc
shrb
xchg
mov
mov
xchg
or
pop
mov
xor
out
sahf
addr16
inc
fyl2xp1
mov
xlat
subl
ret
out
out
xchg
das
stos
xchg
xor
roll
xor
scas
imul
xor
add
idivb
lea
ja
lds
ret
ret
sub
mov
in
xor
pop
push
mov
push
popf
in
dec
xlat
test
in
and
fiadds
rclb
popa
mov
jns
aas
pop
in
xchg
clc
mov
pushf
inc
and
add
dec
dec
ljmp
and
fisubs
jecxz
sbb
lret
mov
mov
ljmp
aam
je
or
mov
faddl
inc
loope
or
or
sbb
test
inc
outsb
and
pop
cmp
outsb
xor
inc
xchg
jbe
xchg
icebp
and
or
sarb
out
or
add
sbb
mov
scas
daa
xor
cmp
ret
lret
or
jge
mov
cmp
div
mov
shll
test
mov
mov
mov
pop
adc
mov
sub
outsl
test
or
lods
lret
sahf
jnp
and
movsl
dec
mov
lods
and
or
aaa
orb
repz
jl
les
mov
jle
or
call
test
mov
pop
adc
sub
add
dec
dec
adc
xchg
mov
cmp
bound
outsb
ljmp
jnp
or
xlat
in
lds
cltd
mov
adc
arpl
mov
or
mov
inc
dec
mov
lock
icebp
mov
or
cltd
pop
dec
xor
pop
sbb
imulb
mov
sbb
scas
sti
loope,pn
aad
sbb
mov
loopne
jl
je
mov
cmc
in
mov
aas
sub
or
jno
lods
sti
pop
xchg
outsb
xor
stc
xor
mov
xlat
adc
aas
mov
xor
lock
xchg
cmp
psubusb
mov
cwtl
aas
pop
cwtl
stos
rorb
pop
mov
cmpb
imul
movsl
lret
add
lods
lcall
xchg
jo
std
xchg
mov
mov
fmulp
adc
jns
mov
adc
out
cmpsb
arpl
push
cmc
flds
test
push
pop
shrl
cwtd
jns
aas
add
mov
pop
adc
test
movb
pop
sub
cmp
lret
mov
test
imulb
dec
sbb
fwait
mov
jb
js
cmp
in
fs
cmpsl
add
jo
pop
insl
stos
insb
mov
ljmp
fdivrs
dec
and
cmpsl
into
call
mov
out
out
push
mov
jmp
mov
inc
or
into
test
in
or
mov
movsb
cmpsb
das
xor
js
adc
outsl
lret
jge
cmpsb
pop
out
shll
xor
lret
dec
test
sti
mov
cwtl
cltd
xchg
add
adc
aas
lock
or
cmpsl
ljmp
ljmp
test
pop
xchg
divb
lcall
rorl
inc
push
pop
sbb
jecxz,pn
or
push
roll
testl
pop
pushf
ror
pop
js
rorl
pushf
mov
cwtl
les
outsb
aad
bound
fsubp
daa
or
push
scas
inc
cld
and
lret
out
test
addb
pop
add
xchg
adc
xorl
push
bound
insl
push
ljmp
or
push
jp
pop
mov
pop
pop
push
test
sti
mov
out
mov
lods
xchg
sub
pop
std
cli
jnp
or
cmp
imul
arpl
cmpsb
test
bound
pop
pop
mov
xchg
push
stc
lea
sub
mov
xchg
adc
rorb
or
push
add
icebp
or
mov
xor
and
inc
and
mov
pop
xchg
mov
inc
fsubr
clc
stc
mov
lods
mov
ljmp
testl
jg
negb
imul
out
mov
iret
fcmovnbe
fxch
imulb
sbb
lods
shrb
mov
or
ss
fdivrs
dec
pop
pop
inc
out
add
add
fnstcw
fmull
ret
sbbb
movsl
mov
mov
outsb
cmpsb
mov
dec
int
jno
sub
add
sub
out
dec
pop
cmpsb
push
adc
idivb
fldl
scas
popa
scas
sub
out
lock
xor
sub
loope
adcb
push
mull
push
pop
mov
in
add
in
mov
dec
mov
out
mov
fildl
sbb
jno
jb
imul
xchg
lds
and
aad
mov
jmp
imulb
mov
loope
xlat
pop
sbb
jl
xor
mov
lcall
mov
ret
in
dec
push
hlt
lock
adc
loop
sub
leave
pop
sbb
repz
and
rcl
cs
mov
adc
imulb
mov
inc
fucom
dec
lcall
arpl
or
or
clc
and
pushf
mov
inc
in
std
lods
aaa
loope
js
sbb
fstpl
pop
rcrb
movl
and
pop
or
scas
mov
ret
lds
mov
jno
push
mov
in
adc
imul
xor
insb
adc
cpuid
into
shl
or
pop
inc
push
xchg
sub
jbe
sub
dec
adc
sub
pop
loope
in
das
bound
jb
sub
repnz
sbb
add
in
push
add
flds
dec
cli
mov
fdivl
fiaddl
pop
push
in
mov
stos
ret
inc
shlb
fisubl
ror
pusha
imul
int
jnp
sti
jae
insb
sbb
aas
or
sahf
aam
in
out
cmp
roll
mov
adc
lds
and
fstl
mov
xorb
dec
or
loope
pop
leave
inc
repnz
pusha
dec
sub
adc
mov
fcomip
push
enter
jp
pop
ljmp
iret
mov
lds
pushf
aaa
stos
inc
out
inc
pop
dec
push
pusha
mov
divl
fs
ja
jns
pop
mov
in
cmpl
mov
xchg
data16
orl
dec
in
dec
stc
jl
and
xorb
or
push
enter
test
pusha
pop
orb
arpl
mov
xchg
fs
push
mov
and
fimull
and
testb
mov
add
aam
subb
ffree
popl
push
and
je
pop
andl
jl
insb
sbb
xor
add
outsl
inc
mov
push
pop
mov
jecxz
mov
dec
fbstp
sub
fisubl
xor
mov
inc
add
movsb
and
stos
or
fs
cmc
mov
xchg
insl
add
or
dec
lcall
jnp
mov
loopne
jo
cmp
mov
sbb
sub
pop
sbb
jne
cltd
mov
out
xor
adc
fldl
push
fcmovnb
stc
or
fucomip
imul
in
mov
aam
jecxz
inc
popf
dec
out
sahf
out
xor
and
jae
js
std
mov
pop
push
enter
fcomp
sbb
js
jg
divl
adc
mov
cmpsl
lds
jl
pop
adc
je
jae
fcmovbe
adc
pushf
mov
adc
rolb
pop
int3
pop
inc
pop
and
push
cmp
nop
mov
loope
insl
adc
andl
adc
insl
push
xor
and
cld
lret
insl
or
mov
mov
dec
ja
pop
sarl
test
addr16
or
mov
lret
dec
jmp
mov
scas
out
adc
cmc
or
jp
arpl
xchg
aaa
inc
adc
movsl
xchg
push
fwait
pop
dec
loope
dec
jg
daa
aam
dec
ret
dec
push
xchg
push
or
out
test
lock
inc
lret
je
xor
mov
call
adc
mov
arpl
jo
jns
inc
popf
je,pn
mov
mov
inc
or
shll
add
xchg
das
xchg
mov
jmp
add
in
add
pop
repnz
fstpt
cmp
mull
cmp
out
test
lods
or
inc
testb
add
pushf
push
mov
stos
sbb
push
mov
add
fcoms
leave
push
outsb
pop
dec
mov
loopne
imulb
lods
das
insl
pop
or
push
fists
xor
mov
fsubrl
dec
mov
outsb
mov
mov
mov
jg
jno
rorl
addr16
mov
sbb
clc
sbb
pop
add
push
pusha
aaa
fidivl
lods
stos
in
sbb
dec
pushf
cltd
sbb
pop
jg
pop
psadbw
dec
mov
push
or
mulb
dec
movsl
xor
jge
sti
sbb
dec
call
sub
and
xchg
aas
sbb
mov
jl
int3
sub
jbe
add
jb
and
ret
int
mov
mov
push
and
int
xchg
push
fsts
flds
xchg
jnp
xchg
cmp
in
push
xor
pushf
sub
out
call
cld
adc
ljmp
stos
repz
fistl
mov
fidivrs
jns
jno
fiaddl
stc
sub
lret
xor
and
lret
push
jns
mov
fldcw
dec
pushf
xorl
inc
es
sti
cs
fcomi
dec
inc
push
mov
pop
addl
addl
shrl
stos
fstps
ret
dec
ret
mov
bound
icebp
fsubrs
adc
xchg
xor
cmp
in
sub
jb
imul
lahf
repnz
xchg
outsb
fnstsw
mov
shlb
mov
out
inc
or
sbb
mov
and
sub
xlat
xchg
or
fcmovne
pop
aas
subb
sarl
xor
out
xor
ds
jmp
stos
push
cwtl
adc
mov
int3
nop
test
mov
mov
inc
ja
test
inc
rcl
inc
mov
pop
pop
mulb
jmp
rcll
loope
xchg
mov
in
outsb
inc
jbe
inc
push
stos
daa
or
aam
ljmp
sub
sub
fwait
pop
ja
aaa
getsec
inc
inc
cmpsl
cwtl
mov
dec
cmp
movsb
fiadds
aas
mov
out
push
jnp
movl
imul
dec
test
sub
jb
je
and
dec
and
pop
adc
pop
fildll
adc
sub
or
fs
call
jl
sbb
mov
adc
leave
sbb
adc
xchg
push
dec
ljmp
stos
ljmp
sbb
shr
xchg
inc
insl
test
add
add
lds
clc
xchg
out
push
cmp
dec
sbb
popa
fildll
insb
negl
sbb
je
inc
jle
mov
push
push
mov
clc
cmpsb
leave
xchg
jns
push
lock
push
pusha
push
mov
mov
cmpsb
jae
orl
fisubs
insl
jl
inc
data16
sbb
cli
js
and
cwtl
push
ret
xchg
int
push
fistpll
dec
iret
lock
push
in
lahf
jg
in
cs
lods
jns
dec
xchg
fs
stos
adc
dec
mov
inc
adc
movsb
inc
outsl
pop
xchg
out
pop
add
pop
dec
mov
data16
orb
add
jbe
sbb
sbb
repz
daa
icebp
jp
adc
mov
pop
xchg
test
pop
sbb
fucomp
mov
out
xchg
aaa
orb
jle
les
lcall
xchg
call
mov
sbb
in
in
test
mov
sti
push
gs
out
jne
scas
push
inc
mov
xor
push
fs
or
cmpsl
push
jg
test
and
leave
pusha
jecxz
std
ret
pop
dec
filds
pop
jmp
push
xor
mov
or
out
notl
push
cmpsb
dec
ss
mov
mov
hlt
jo
ret
sub
xchg
dec
xchg
icebp
adc
lret
mov
movsl
sbb
push
xor
mov
xchg
outsl
or
xor
jmp
xchg
imul
jge
push
sub
pop
mov
jb
and
imul
mov
lods
inc
push
pop
mov
xor
std
jle
mov
shl
aam
push
enter
jp
sub
bound
jmp
lahf
cmp
mov
sbb
adc
or
movsb
adc
into
xlat
mov
jle
data16
rclb
mov
bound
clc
xor
and
repz
jnp
pop
mov
iret
adc
or
lds
popa
lods
cmp
sarb
and
icebp
jge
nop
mov
pop
lcall
dec
test
loopne
fs
jp
pushl
shlb
mov
pop
add
test
dec
fcompl
test
cmpsl
adc
add
pop
sbb
inc
adc
pop
nop
fidivrs
dec
aas
sub
adc
insl
ss
dec
push
mov
pusha
insb
repz
mov
les
pop
icebp
iret
fldt
mov
and
mov
pop
dec
movsl
fs
out
jmp
outsl
inc
xor
sbb
jno
lock
and
ss
test
ret
popf
inc
xlat
pusha
mov
call
push
adc
pop
sub
and
shlb
mov
cmp
sbb
addr16
das
daa
push
dec
and
mov
loop
pop
push
lock
sub
xchg
dec
in
int
mov
push
fmull
lea
shrb
xchg
hlt
xchg
ss
cwtl
jo
add
repz
lahf
lock
sub
rcl
sbb
in
in
or
mov
inc
push
in
mov
cld
cmpsb
pop
cld
cmp
xor
push
movb
in
outsl
js
xor
addr16
aam
dec
daa
dec
push
aaa
ss
aam
iret
push
jne
adc
lahf
lea
add
hlt
notl
fmull
pop
sbb
test
jg
add
sbb
out
ret
incl
adc
enter
fcmove
jnp
adc
jg
sahf
outsl
cmp
jns
dec
insb
lcall
cmc
imul
movsb
andb
aaa
xchg
mov
adc
sbb
xor
inc
jno
xchg
enter
dec
sti
sbb
pop
inc
cmc
or
scas
jo
mov
xchg
movsl
push
lock
repnz
or
js
jecxz
add
out
je
movsl
popf
icebp
mov
fsts
dec
lret
jecxz
ret
add
jge
jmp
mov
cmp
mov
xor
xor
shlb
repnz
or
and
sbb
sbb
sbb
mov
cli
aad
jmp
and
add
inc
jb
cmpsl
or
nop
cld
nop
push
cwtl
movntq
dec
movups
cmp
or
dec
jno
les
cld
sti
ud0
inc
mov
les
mov
test
call
sub
test
lret
ss
popf
pop
fcmovnb
jg
movsb
insb
push
dec
enter
jl
shr
push
shr
pop
fldcw
mov
dec
mov
lahf
jp
fisubl
aam
subl
and
test
sub
aaa
ljmp
cmp
mov
add
pushf
popf
xchg
and
pop
rclb
test
mov
mov
xchg
aaa
mov
cli
lock
outsb
dec
dec
popf
lret
pop
mov
mov
cmp
add
mov
movsb
cmc
jae,pn
movl
mov
aam
out
mov
mov
mov
repz
loop
sbb
repz
jbe
jmp
adc
jae
mov
pop
sub
xchg
inc
fmuls
xor
shlb
fst
mov
xor
ja
mov
hlt
adc
sbbb
fdivl
inc
push
push
clc
lea
push
push
dec
popf
std
jge
mov
adc
mov
rclb
sub
push
out
add
and
rclb
lods
push
sahf
mov
push
mov
pop
out
cltd
stos
mov
or
aaa
fnsave
ja
xor
and
or
adc
mov
lcall
sbb
lea
sub
push
mov
hlt
jle
call
pop
lods
xchg
sarb
insl
pop
test
push
rcrl
jnp
cmpsb
daa
cs
sbb
mov
mov
dec
jge
aas
inc
xchg
cmp
inc
mov
movsb
enter
stc
imul
leave
mov
xor
lahf
lahf
push
loop
fcoml
sbb
xchg
mov
or
addr16
push
mov
ret
sbb
mov
repz
arpl
jo
cmpl
js
testl
mov
mov
xchg
sub
in
jo
sbb
dec
roll
fwait
sub
push
out
lods
jecxz
outsb
or
dec
jmp
mov
loop
sub
inc
cld
sbbb
stos
push
arpl
dec
out
pop
lret
push
sub
jecxz
jbe
rcrb
mov
and
lcall
cmp
fisubrl
jle
popf
xor
and
sub
jno
inc
add
into
or
push
mov
adc
sbb
hlt
xlat
mov
mov
jl
ret
movsb
dec
repnz
mov
inc
dec
ja
mov
mov
cmp
xchg
in
sbb
inc
in
sbb
push
hlt
or
mov
cmpsb
aam
inc
cld
hlt
int3
mov
movsl
in
shrb
xchg
imul
aaa
leave
mov
stos
gs
les
and
and
ds
add
pop
cmp
jp
push
pusha
pop
jge
pop
push
jo
sub
cmpsl
arpl
xor
pop
out
loope
push
int3
imul
jbe
divb
outsb
mov
or
popf
sbb
int
add
mov
popf
adc
xor
mov
or
cs
scas
pop
and
loopne
mov
scas
fidivrs
mov
js
or
pop
and
jbe
xchg
out
mov
insl
push
jne
movsb
sbbb
sbb
pop
adc
dec
add
push
mov
loope
fiadds
cs
xor
mov
adc
std
and
fdivrl
push
or
push
ja
fbstp
adc
test
mov
lea
xor
mov
shlb
add
sub
xorl
ret
aam
jne
xchg
jns
sbb
and
negl
sbb
pop
sbb
in
dec
jae
insl
xor
pop
sti
xchg
jg
add
psubb
mov
insl
mov
in
testl
stos
jp
test
inc
orb
push
dec
lods
test
pop
mov
mov
and
imul
mov
jge
sbb
lods
push
or
mov
add
jge
andl
and
jmp
es
jb
cmp
cmc
pop
test
or
lock
bound
dec
xchg
jb
and
out
or
lods
in
xchg
xchg
mov
sub
into
inc
int
outsl
sbb
jb
mov
mov
negb
xchg
or
xchg
pop
idivb
dec
mov
cld
xchg
pop
dec
mov
bound
jp
mov
push
in
cwtl
sti
lahf
daa
mov
js
fimull
sbb
cmp
shlb
inc
popf
into
or
lods
sahf
mov
pop
push
push
shlb
xor
enter
andb
and
cmpsb
push
mov
inc
cmp
jno
xlat
xchg
mov
jecxz
push
je
mov
sub
ss
cld
mov
jb
sub
lret
in
push
push
fsubrl
jno
in
fdivrs
dec
pop
lock
aas
mov
hlt
mov
ds
fiadds
sahf
sahf
mov
mov
sahf
jns
jb
push
sbb
push
mov
pop
xchg
xchg
mov
sub
clc
mov
popf
test
mov
outsb
dec
push
add
sahf
insb
sti
call
arpl
cmp
andl
int3
loopne
mov
ss
popa
pop
mov
xor
in
xor
mov
faddp
adc
pop
dec
les
mov
ds
adc
scas
out
lea
pavgb
lret
bnd
js
jmp
enter
cmp
mov
xchg
mov
mov
add
adc
rcll
and
mov
push
or
cmpsb
xchg
out
popa
add
xchg
leave
add
js
addl
imul
mov
jp
test
cmpsb
dec
jmp
fadds
inc
pop
ljmp
stc
mov
ja
pop
jmp
xchg
mov
rcl
pop
cmp
and
xchg
outsb
out
inc
cmpl
adc
sbb
cmpsl
mov
jle
cltd
pop
sahf
xor
outsl
inc
gs
pop
push
ret
daa
sbb
out
popf
in
jp
in
jl
sahf
not
sub
lods
mov
nop
xchg
mov
ret
cmpsl
inc
into
outsl
out
jecxz
mov
mov
hlt
outsl
inc
push
sub
cmpsl
mov
test
add
xor
inc
pop
mov
clc
in
push
ljmp
dec
lret
mov
repz
int3
outsl
testl
outsl
jo
mov
jne
push
jecxz,pt
in
lcall
insl
cld
xchg
ret
adc
mov
sti
std
pop
sub
js
call
and
pop
daa
shll
and
leave
ficomps
or
fs
arpl
pop
add
cmp
push
pushf
mov
in
adc
sbb
mov
imul
inc
xchg
in
pop
std
cmc
lods
das
dec
lret
add
orl
pop
sbb
xchg
scas
adc
xor
mov
enter
mov
inc
push
or
inc
fsubrl
push
cld
sub
out
in
jno
pop
arpl
sub
pop
or
dec
repnz
fcoms
xor
jg
dec
cmp
push
jg
or
sahf
dec
sub
xchg
mov
cmp
add
mov
fs
aaa
cmpb
or
mov
stos
bound
iret
fsts
data16
add
hlt
or
cld
pop
lods
mov
insw
mov
mov
mov
out
arpl
xchg
enter
sbb
mov
add
pop
xor
push
roll
mov
sti
mov
fwait
inc
inc
pushf
outsb
pop
xor
lods
insl
or
sub
and
sbb
aaa
xorl
mov
or
mov
je
orl
adc
incb
cmpsb
pop
sbbb
mov
inc
xchg
mov
mov
in
push
mov
mov
sti
push
xor
test
lcall
sub
sbb
jns
stos
popf
cld
lahf
inc
rcrl
sub
cmp
arpl
xchg
es
ja
lds
bswap
popf
xchg
mov
les
mov
jmp
mov
jle
mov
dec
dec
mov
aam
scas
loop
loopne
lods
stc
cmpsb
inc
popf
jb
scas
sbbb
sbb
inc
jns
sarl
addl
iret
ja
test
dec
test
sbb
fidivrs
and
pop
out
xor
pop
scas
mov
jns,pn
dec
adc
adc
enter
mov
lds
xchg
inc
lods
or
xchg
mov
shlb
and
jl
and
pop
decl
lods
call
jecxz
dec
fmuls
add
xor
imul
cmp
rorl
leave
cmp
jl
lea
into
push
pusha
clc
sbb
xor
or
mov
ljmp
mov
fnstsw
jmp
jp
orb
shrb
mov
or
cli
xchg
stos
sbb
mov
loop
sbbl
pop
into
test
lea
cld
nop
push
movsb
flds
cmp
push
sbb
jo
shll
fldl
imul
jg
pop
xor
adc
pop
add
sbb
dec
ljmp
xor
stc
pop
je
in
lea
shl
or
fcomip
sub
mov
pop
sbb
repz
rorl
jl
xchg
xchg
or
or
add
cli
or
jg
imul
or
ret
or
and
inc
sub
clc
das
in
repnz
mov
push
scas
leave
xchg
xlat
rorl
add
cmpsl
push
arpl
sub
pushf
push
imul
cltd
mov
std
mov
dec
push
jns
xchg
xor
push
push
inc
das
sbb
mov
mov
inc
mov
scas
andb
das
lods
add
stos
pusha
jns
push
scas
or
cwtl
insb
fcoms
inc
dec
pop
jne
cs
inc
fwait
pop
imul
add
push
dec
movsb
and
xchg
sbb
test
dec
les
or
decb
incb
mov
xchg
movsb
inc
mov
insb
imul
mov
or
mov
or
dec
lahf
adc
sub
jle
adcb
adc
mov
and
mov
lods
lock
lret
jecxz
jmp
dec
lret
ljmp
stos
nop
call
jae
fs
mov
sbb
adc
pop
cmp
xor
dec
ja
das
and
arpl
ret
add
stos
cmpl
or
icebp
int3
mov
cmp
xchg
sbb
out
in
idiv
arpl
push
scas
xchg
xchg
shll
outsl
dec
repz
ror
pop
adc
outsl
cs
lods
xadd
xor
pop
mov
movsb
mov
cmp
ss
pop
and
dec
jns
push
add
mov
xor
xor
mov
inc
roll
arpl
cmpsb
sbb
jno
into
testb
outsl
fwait
mov
cs
mov
jbe
lods
test
andb
mov
flds
hlt
insl
stos
outsl
sub
adc
mov
pop
mov
ja
xchg
outsb
scas
sbb
scas
std
movsl
jae
xor
adc
arpl
les
pop
lea
movsb
pop
nop
leave
mov
mov
xor
lahf
das
push
cmpb
dec
js
jge
or
ret
dec
sub
jle
pop
aam
xchg
cmp
add
rolb
leave
pop
lock
cmc
repz
add
jb
pop
mov
arpl
aad
test
cmp
xchg
inc
out
cmp
repnz
push
sub
inc
dec
or
pop
sahf
jle
cmc
subl
xchg
pusha
lods
jg
cmp
clc
adc
loope
xchg
xchg
dec
pop
push
fldl
adc
jb
sbb
xchg
outsb
sub
mov
adc
mov
xchg
nop
xlat
cmp
lods
dec
popa
or
int
mov
lret
xchg
scas
xchg
mov
dec
xchg
add
sbb
test
es
or
sti
pop
xor
or
imul
fiadds
pop
jle
xchg
inc
ds
fcoms
xchg
push
jns
cmp
scas
xchg
ret
pop
nop
loop
push
clc
aam
adc
push
jb
cmpsb
push
xor
push
jno
mov
pop
cmp
fistpl
cmpsb
outsl
fimuls
lahf
out
outsl
into
shrb
movsb
inc
inc
adc
mov
in
xchg
xchg
jmp
add
in
mov
jmp
xor
popf
sar
fdivrs
add
sub
subl
inc
sti
in
xchg
or
and
pop
add
jp
pop
lret
addr16
mov
stos
adc
fstp
push
leave
js
mov
mov
and
inc
sbb
test
addr16
in
or
filds
mov
cmpsb
aad
ret
jp
test
push
pop
add
lret
es
push
sahf
add
je
xchg
sbb
fisubs
iret
mov
in
or
push
sub
insb
mov
xchg
xchg
clc
xchg
aas
push
jg
push
jmp
int3
and
arpl
xor
or
push
fstp
sub
ss
lods
cli
nop
xor
and
mov
rorl
pushf
mov
pop
push
jnp
stos
shll
xchg
mov
mov
lock
je
andnps
jecxz
push
sub
js
std
jge
testl
push
ljmp
inc
fisttps
mov
and
mov
xchg
adcl
and
adc
enter
adc
xor
jb
aad
pop
out
push
das
fldenv
lods
and
in
pushf
in
sarb
dec
std
jle
cmp
je
sub
mov
sub
push
jnp
pop
dec
jmp
mov
call
add
jae
pop
ds
cmp
jmp
in
in
faddl
mov
pop
lods
dec
xor
adcl
mov
xchg
jb
shlb
mov
ret
and
or
dec
cmp
cmc
sbbl
or
xchg
daa
test
mov
stc
rclb
enter
aad
cli
jo
xor
adc
setb
fs
inc
pop
mov
push
out
mov
push
jnp
jmp
inc
loope
shrb
adc
or
mov
cmpsl
pop
fdivs
xchg
pop
push
vmovups
jge
pop
xchg
mov
dec
shll
xor
das
xor
in
add
and
arpl
std
rclb
out
ret
ja
das
mov
loop
mov
inc
cli
sbb
inc
pop
jae
cwtl
xchg
daa
xor
sub
or
cmpsb
call
inc
lahf
ds
clc
fnsave
outsl
std
xchg
repz
loopne
xor
aam
xor
stc
jge
mov
cmpsb
test
fs
push
push
mov
imull
dec
dec
dec
inc
mov
adc
popa
fs
cmpsl
int
rol
jp
pushf
out
pop
pmaxsw
enter
jb
inc
or
jb
cmp
jne
pop
lea
stc
pcmpeqd
js
iret
pop
sub
daa
jle
ljmp
xchg
icebp
mov
data16
addr16
and
sub
cmpsb
jmp
movsb
sbbb
sbb
push
mov
dec
imul
cmp
cmp
and
fwait
std
pop
adc
rorb
push
mov
push
and
aad
push
sbb
mov
fiadds
loope
mov
mov
ss
in
add
ljmp
mov
push
lret
mov
rol
iret
push
out
stc
dec
jo
rcl
sarl
mov
mov
mov
pop
ja
jae
fnstenv
xchg
mov
inc
xchg
sbb
push
pushf
jmp
movsb
in
lahf
int
std
mov
testb
xlat
gs
push
orl
xchg
test
mov
cmpsl
inc
cmp
add
test
add
inc
jo
clc
sub
cmpl
or
loop
inc
push
sbb
add
push
jne
inc
xchg
push
adc
fdivrs
repz
fstl
or
out
in
dec
cmp
adc
jnp
push
int3
fs
push
movsb
out
cmc
int3
imulb
mov
pop
inc
divb
xchg
arpl
pushf
pusha
xlat
dec
subb
lds
xchg
imul
cmp
out
orps
cwtl
inc
dec
xchg
stos
ror
add
pop
push
repnz
inc
pushf
dec
sahf
inc
jmp
inc
jge
in
outsb
adc
cmc
cmp
xlat
mov
and
pop
test
xor
outsb
hlt
xor
inc
and
dec
inc
imul
fiadds
std
xchg
fwait
aas
push
mov
mov
add
xchg
mov
xor
xor
stos
stos
xor
push
sti
call
test
inc
xchg
ret
test
sbb
cli
in
pop
xchg
push
lock
mov
aad
add
sub
shlb
dec
je
add
pop
mov
mov
mov
les
cmp
mov
jnp
inc
sahf
popf
dec
mov
lret
pushl
aad
pushf
pop
orb
xor
pushw
mov
pop
adc
add
daa
stos
jb
andl
and
mov
test
into
push
xchg
fisttps
je
cmp
subl
in
jmp
adc
insl
inc
xor
les
ret
rcrb
dec
dec
adc
pop
aam
mov
gs
pop
and
leave
mov
lret
rol
mov
cmp
push
aas
mov
push
shlb
imul
lret
lock
and
add
sub
int
mov
mov
dec
lret
into
jae
jne
sub
jae
mov
cld
cmp
lret
xchg
hlt
pop
fbld
je
push
mov
xlat
ds
jb
rol
pop
adc
sub
orl
sbb
jns
decl
loop
xor
mov
jne
sbb
xchg
sub
pop
pop
outsb
sub
in
mov
xchg
lret
leave
mov
cmc
lahf
daa
sbb
loope
jecxz
jle
sub
sbb
xlat
sbb
mov
dec
xchg
sbb
sti
inc
sbb
xchg
adc
fdivl
outsb
das
sub
aas
jl
divl
les
and
aam
xor
aaa
cmp
popa
pushf
fcmovbe
cmpsl
sbb
adcl
in
jbe
pop
fldl2t
cld
add
inc
jle
imul
out
jge
adcl
fdivs
lock
pop
negb
inc
cli
movsb
test
inc
leave
js
das
inc
mov
push
repnz
sbb
add
dec
mov
stos
mov
outsl
xchg
arpl
das
inc
mov
or
in
mov
mov
jae
stos
dec
fwait
das
std
xor
cmc
call
mov
adc
inc
out
fsubs
sahf
mov
loopne
mov
rcll
jmp
icebp
mov
out
rclb
int
and
pop
mov
add
push
in
test
inc
nop
cmp
daa
sbb
lds
int
lahf
stc
dec
mov
stos
mov
mov
sub
lea
addr16
fcomps
add
popf
shrb
rolb
icebp
loope
xchg
inc
lods
loopne
dec
loope
jae
mov
and
dec
notl
imul
sti
rorl
and
sub
xchg
imul
or
repz
mov
lret
push
iret
sub
cmp
or
fidivs
fists
cmpsb
add
insl
push
dec
mov
lahf
das
push
dec
mov
cmpl
add
lret
test
out
ret
js
push
sarl
lret
inc
jo
pop
dec
xchg
fidivrs
pop
xor
mov
pop
sub
cmp
mov
test
lret
test
es
cltd
mov
add
jl
mov
test
jmp
int
xor
or
mov
sbb
xchg
pop
dec
and
adc
xor
dec
or
out
into
sub
aas
imul
idivl
clc
mov
cld
adcl
adc
lods
pusha
push
lret
xor
jle
and
lret
jb
lods
les
repz
cld
xor
dec
dec
mov
mov
jns
xor
mov
dec
pop
shl
scas
cltd
test
cwtl
aam
mov
xchg
ja
mov
dec
bnd
cli
jl
sub
mov
dec
mov
addr16
jp
loop
xchg
movsb
loop
cmp
inc
inc
sarb
push
loope
mov
sar
in
push
add
lods
pop
aas
in
daa
or
in
inc
xchg
std
pop
inc
add
cmp
imul
cwtl
push
sub
aam
into
mov
sbb
xor
movsl
insl
inc
lds
bound
insb
adc
popa
call
pop
fwait
nop
call
and
test
push
leave
ret
sbb
shlb
pop
sbb
inc
shll
scas
inc
das
stc
pop
xchg
jno
push
rorl
cmp
ds
xchg
fdivrl
jmp
xchg
dec
pop
scas
add
mov
insl
jns
out
jbe
pop
fimull
and
es
sub
xchg
lcall
xchg
cmpsl
adc
inc
bound
cmp
mov
pop
fs
and
test
jnp
call
jo
lods
jbe
in
pop
fmuls
push
xlat
adc
loope
xchg
negl
adc
push
stos
mov
cmc
or
jae
outsl
add
and
popa
sub
pop
pop
test
lods
pop
out
mov
daa
mov
xchg
pop
ficomps
aaa
xchg
sbb
stos
mov
xchg
out
xchg
jp
xchg
pop
sbb
xchg
nop
dec
popa
negb
andb
xor
xlat
fidivs
mov
in
int
jbe
mov
in
adc
mov
xor
jno
mov
inc
leave
loop
push
dec
das
or
sub
inc
mov
xchg
mov
jmp
pop
imul
and
add
jne
jno
int
xchg
cmp
lcall
dec
lea
push
push
into
inc
fildl
push
xor
sub
outsb
nop
adc
dec
lock
xor
cmp
test
inc
sbb
mov
jbe
xchg
mov
sbb
mov
sub
jbe
sub
dec
push
mov
xlat
mov
xchg
in
adc
xor
adc
iret
fdivl
loop
lds
fistpl
jecxz
js
rcl
mov
mov
dec
jp
mov
inc
nop
dec
adc
inc
sub
or
xchg
push
xor
push
stc
arpl
fs
adc
fstl
jp
sub
dec
rcrb
jnp
lret
and
and
sub
pop
dec
imul
adc
lahf
cmp
jg
adc
bnd
in
jb
ja
adc
and
mov
mov
negl
ret
xchg
inc
adc
sarb
outsb
mov
lret
clc
add
mov
push
jmp
pop
bound
loope
mov
daa
pop
fs
cmp
in
arpl
sbb
cwtl
xlat
mov
lock
gs
mov
adc
lret
sbb
cmpsl
daa
lcall
bound
dec
insl
movsb
das
add
test
sub
dec
jge
mov
add
push
xor
jo
fstpt
pusha
fildll
pop
jnp
les
std
pushf
mov
mov
stc
outsb
test
inc
test
cwtl
shr
shrb
cmp
ss
or
test
out
push
adc
add
mov
inc
mov
xor
xor
or
in
fiadds
call
sbb
stos
jl
sbb
mov
or
jae
pop
inc
rcrb
inc
ss
ja
jmp
and
in
cli
jns
aam
pop
popf
shrl
bnd
xchg
adc
inc
mov
subb
and
xadd
stc
stos
les
aad
inc
das
mov
xchg
dec
xchg
jmp
mov
lock
add
jbe
inc
fsts
mov
inc
insl
dec
mov
outsb
ljmp
cmp
jns
push
repz
inc
dec
adc
movsl
les
push
inc
mov
pop
push
jnp
inc
pop
pop
push
jmp
and
sbb
repz
into
fstps
push
pushf
shll
pusha
lret
cmpsl
in
mov
push
out
loop
ljmp
or
xchg
pop
hlt
jbe
pusha
push
pop
add
shl
rclb
push
enter
mov
jmp
jmp
mov
in
or
out
or
clc
loopne
cmp
or
xchg
push
sub
popl
clc
sub
loop
and
scas
pop
mov
sbb
testl
mov
pop
inc
add
pop
adc
pop
mov
das
dec
jl
xchg
ret
pusha
mov
sub
rcll
leave
icebp
mov
jmp
sbb
ljmp
out
popf
cmc
sahf
sbb
daa
aad
cmpsb
mov
adc
sti
shrl
les
sarl
mov
js
and
pop
and
dec
icebp
xlat
push
repnz
insb
push
test
mov
sbb
dec
mov
or
faddl
mov
jne
sbb
push
lods
adc
or
push
aaa
dec
sbb
cmp
push
sub
ret
pop
xchg
push
adc
pop
push
mov
and
add
jge
sbb
flds
jecxz
ret
fnstsw
loop
xor
bound
test
iret
adc
mov
fistpll
mov
inc
cmpsb
cmpsb
cltd
mov
jbe
add
pop
push
xchg
cmp
add
lret
bound
cltd
loopne
fstl
add
fs
mov
lret
cmp
pop
std
lock
mov
pop
lds
or
or
dec
loopne
sbb
push
js
out
scas
jp
mov
inc
adc
pop
mov
adc
clc
inc
xor
mulb
push
fstp
xchg
ret
divb
push
or
call
nop
jmp
sbb
cmc
pop
dec
sbb
jno
stos
adc
sub
push
cld
jg
int
addr16
in
jbe
or
mov
scas
cmp
gs
fsubrl
arpl
mov
sbb
cltd
xlat
xorl
jne
aad
es
mov
jne
nop
fbstp
ds
lret
push
cmpsb
push
lock
or
push
out
jne
ss
pop
js
int
mov
lods
ficoml
and
ljmp
jbe
inc
scas
push
xor
sub
int3
rclb
subb
mov
stos
mov
or
xchg
stos
daa
or
aaa
es
data16
in
es
loop
and
cmp
pop
inc
or
xchg
mov
add
gs
add
jle
cs
mov
outsb
xor
sbb
aaa
call
xor
dec
rolb
inc
mov
xor
jo
or
lret
icebp
push
and
loopne
stc
cs
mov
jg
inc
xor
lods
inc
fisubs
leave
pop
pop
inc
push
pushl
xchg
jge
add
cwtl
add
xchg
inc
sbb
cmp
or
add
adc
sub
mov
rcl
fs
cs
pop
daa
js
cwtl
jno
mov
ds
push
ret
lret
jbe
mov
ret
dec
icebp
or
enter
lret
and
xchg
addr16
mov
sub
sub
adc
inc
movsb
or
dec
add
out
call
and
lock
pushf
and
xchg
mov
mov
popa
mov
add
ss
xchg
jg
mov
pop
push
out
stc
xchg
or
in
adc
bound
rcrl
pop
lock
mov
inc
inc
push
ja
ss
cmp
add
lds
icebp
dec
adc
xchg
jne
adc
sub
push
or
pop
add
fsts
inc
inc
mov
movd
cmp
mov
pop
jp
mov
inc
pop
dec
xor
push
cmpsl
popf
mov
stos
pop
mov
or
into
je
pop
sub
or
arpl
ljmp
jg
jo
jmp
mov
jnp
pop
and
ret
popa
dec
fmull
enter
dec
das
scas
outsl
and
in
out
push
sbb
repz
sbb
jno
push
push
xchg
adc
and
jns
and
or
jno
jmp
fstpt
add
mov
scas
dec
sub
mov
fs
push
idivb
cmpsl
popa
or
outsl
lcall
adc
pop
sub
mov
aaa
xchg
or
mov
or
jbe
fists
ffreep
lock
xchg
jne
fstpl
aaa
loop
sbb
neg
add
mov
daa
dec
rcrl
stos
out
mov
push
nop
jae
mull
fisubrl
xor
push
arpl
sub
xor
adc
push
cs
jae
jecxz
pop
sub
rclb
push
bound
cmp
aas
dec
divb
je
or
jns
jae
or
jmp
xchg
insb
mov
clc
mov
jb
xlat
mov
loop
cwtl
sti
inc
pop
or
pushf
jae
mov
jge
and
cmp
pop
push
mov
adc
aad
pop
and
loope
loopne
inc
mov
pop
jmp
into
fildll
sub
cmp
hlt
rcl
or
cmp
rcl
xchg
jmp
insb
xchg
mov
gs
jno
or
popa
ftst
loop
jg
bound
pop
or
push
out
push
movsb
repnz
adc
sub
mov
mov
ljmp
dec
mov
dec
mov
and
lods
decl
cmpsb
data16
js
xor
or
cmp
insl
xchg
lcall
test
jge
xor
push
mov
inc
aas
mov
pop
cld
mov
push
sahf
cltd
movsl
cwtl
or
repnz
nop
xchg
loope
fsub
addb
adc
and
cmpsl
jg
lds
jb
pop
mov
cld
adc
lret
outsl
sbb
push
xchg
das
popf
jbe
ljmp
jb
jecxz
inc
mov
adc
cli
test
xchg
imul
xchg
jnp
dec
cmp
xchg
lds
popl
sub
mov
and
sbb
xchg
lods
pop
push
jge
jo
sub
add
lcall
es
lods
into
and
rcll
fdivrp
repnz
rcll
iret
arpl
repz
sub
fstl
xchg
fwait
jmp
insl
pop
clc
orl
cmp
xchg
mov
and
into
xchg
mov
jecxz
add
inc
test
mov
dec
insl
pop
out
jecxz
int3
cld
sub
das
negb
clc
shll
xor
pop
jp
repz
inc
out
fisubrs
push
dec
int3
or
dec
stos
fnstsw
dec
sub
jbe
push
loop
add
addl
in
jle
je
pop
xchg
cmp
jge
outsl
xor
push
std
sbb
jbe
in
xadd
lock
jl
dec
pushf
sub
and
mov
das
int3
fistps
in
in
daa
fistl
dec
push
int
add
mov
mov
into
inc
inc
cltd
dec
push
mov
icebp
cs
xor
lods
lods
inc
or
outsl
not
leave
nop
and
inc
jne
outsl
subl
jo
pop
inc
lret
sub
daa
jnp
xchg
pushf
iret
add
call
clc
dec
dec
nop
call
inc
out
es
cmp
pushf
cmpsb
sahf
sbb
jne
jbe
mov
sbb
iret
inc
stos
xorl
pushf
adc
xor
mov
sbb
cmp
cmp
xchg
dec
cmc
jne
jg
je
cmpsb
push
fcoms
add
ret
pusha
mov
xchg
lahf
push
lods
sti
xor
jnp
push
aaa
mov
jl
aad
push
enter
xchg
adc
pop
jl
or
add
out
leave
out
fadd
sub
mov
jle
xor
jmp
xor
scas
jecxz
pop
cmp
test
sbb
sbb
ja
into
lock
fldt
dec
or
inc
dec
or
pop
jge
dec
push
movsb
sub
mov
loopne
xlat
in
lret
and
push
scas
add
decl
pop
dec
scas
cmp
jne
sbb
mov
cmpsl
add
push
test
jbe
test
jnp
dec
imul
inc
adc
xor
mov
bound
insb
and
xchg
xor
out
ret
sbb
dec
mov
lahf
jmp
stos
mov
jae
mov
mov
sub
lock
push
fmuls
lods
push
inc
sbb
mov
imul
cmp
mov
jle
pop
movsb
clc
ret
leavew
addl
mov
mov
rcl
add
and
mov
fdivrl
dec
rolb
cmpsl
mov
test
lods
andb
mov
call
jno
les
push
mov
js
repz
psubw
jg
jl
xor
dec
insl
cmp
out
imul
add
pop
fistl
dec
adc
xor
fwait
int3
adc
sub
mov
fidivl
mov
sub
pop
pusha
loope
pop
repz
xor
adc
mov
scas
jg
push
xchg
add
fldcw
cld
loope
cmovno
push
mov
adc
lcall
mov
mov
cwtl
mov
into
loope
mov
addl
mov
sub
adc
clc
dec
or
filds
adc
adc
imul
inc
mov
shr
adc
xchg
lea
rcll
aaa
imul
add
movsl
dec
loop
rolb
adc
push
into
mov
cmp
sbb
int3
xchg
xchg
xchg
sbb
lcall
push
lods
popf
mov
cwtl
push
imul
jbe
and
stos
mov
sub
pop
push
fsubl
mov
mov
lcall
or
lods
dec
lahf
test
and
pop
mov
sbb
jl
jb
cltd
jno
inc
jp
xchg
mov
repz
punpcklwd
in
cmc
push
ficomps
rcll
pop
adc
push
idiv
mov
rcll
xchg
jnp
cmp
mov
mov
inc
popa
adc
add
das
or
mov
out
push
jge
movsl
xchg
and
je
add
sti
and
gs
mov
loope
mov
aad
fdivrs
sub
insl
nop
or
push
cwtl
fucomp
popf
stos
xor
mov
fstl
cmpsb
fs
ret
sub
outsb
sbb
adc
into
std
mov
pop
int3
js
xor
pop
jmp
bound
push
lods
pop
movsb
es
add
add
xor
xor
gs
js
cmp
inc
sti
cmpsb
call
dec
push
cmp
mov
jg
out
push
les
cmc
into
imul
inc
and
pop
mov
in
testb
lock
or
cmovl
dec
das
sub
xchg
sbb
push
mov
shll
ds
jb
pushf
push
fdivs
mov
adc
and
int
mov
add
xor
jns
movsb
data16
fdivr
jae
pop
push
cmp
mov
aaa
fwait
mov
into
xchg
test
shlb
mov
sbb
sbb
in
inc
pop
loop
sub
popa
test
mov
push
shrl
ret
inc
add
xchg
mov
sbb
daa
mov
decl
leave
xchg
mov
jb
jno
dec
stos
pusha
mov
fisttps
jae
xor
xor
mov
addr16
mov
xchg
int3
lea
aad
cmp
mov
dec
xchg
adcl
pop
xchg
and
gs
sbb
out
insl
hlt
lods
xchg
xor
ret
inc
stc
int
lock
mov
sub
xlat
movsb
mov
adc
test
into
sub
sbb
push
fidivs
insb
xor
idiv
je
movsl
imul
mov
aam
int3
pop
sbb
mov
rolb
dec
mov
bound
les
sub
inc
fs
fcmovbe
incb
push
mov
outsb
in
icebp
mov
test
aad
hlt
and
scas
mov
dec
sti
xlat
es
lock
cmpsl
rclb
push
dec
mov
imul
adc
mov
fstpt
pop
mov
lods
popf
lods
pop
call
adc
xor
pusha
lret
fs
jg
clc
mov
cld
fidivrl
test
mov
icebp
les
test
ss
push
mov
xlat
push
ss
pop
imul
popf
dec
push
sbb
mov
push
push
in
inc
jno
sub
xchg
aaa
mov
lds
sbb
inc
jle
add
js
mov
das
or
adc
sbb
jmp
inc
test
dec
leave
bound
push
lods
dec
lcall
and
mov
sub
mov
fdivrs
xchg
xor
xchg
adcl
mov
lds
add
push
jo
arpl
push
fiaddl
or
pop
sub
sub
xchg
and
push
repnz
ss
insl
dec
inc
push
aas
or
push
mov
xor
cli
dec
stos
adc
fwait
bswap
dec
jmp
inc
cmp
movb
xlat
ja
jle
adc
mov
xor
push
icebp
outsl
test
idiv
in
outsl
stos
test
cmp
mov
pop
stc
repz
mov
lret
cli
jl
mov
cwtl
mov
add
mov
push
xchg
or
jp
ds
or
jno
test
mov
pop
aad
test
mov
ljmp
in
adc
call
adc
adc
aas
mov
popf
pusha
imul
sub
daa
loope
push
imul
mov
aad
adc
call
pop
je
divb
ret
and
jnp
adc
stc
dec
jno
push
sub
in
and
leave
cltd
xchg
push
fildl
in
std
and
rcr
push
xlat
call
nop
inc
or
imulb
loop
mov
das
fcompl
jb
imul
dec
inc
aam
repz
adc
mov
xchg
mov
jbe
mov
rol
pop
ret
cmp
das
xchg
mov
daa
xor
into
jl
rol
cmp
pushf
andl
jb
push
dec
push
pop
fisttpll
or
sub
out
fwait
fmuls
popa
loop
fsub
push
sar
and
add
lahf
sub
insl
pusha
jne
test
or
shlb
lods
inc
mov
mov
dec
rorb
adc
les
dec
and
jns
xor
cld
ljmp
jg
xchg
pop
cwtl
dec
and
xchg
addl
sbb
xorb
mov
sbb
enter
arpl
out
test
mov
mov
fmulp
bndstx
inc
cmp
and
and
cmp
nop
imulb
adc
out
pop
dec
jbe
hlt
sbb
iret
cmp
jp
jno
mov
mov
movsl
xor
test
sub
xor
or
insb
hlt
pop
push
cs
pop
sbb
fisttps
pop
xchg
mov
pop
pop
lods
sub
pop
jnp
xor
mov
fsubr
jo
jne
adc
aas
out
aas
sbb
daa
lods
mov
mov
mov
aam
ja
push
cmpsl
ficoms
dec
cmp
fstpt
mov
cmp
test
pop
mov
sub
insl
adc
mov
adc
mov
mov
pop
sbb
mov
in
sub
jmp
xor
testl
lret
test
xchg
pop
shll
loopne
inc
scas
div
jbe
notl
lds
dec
pop
loop
jp
ds
xchg
xor
jl
sub
mov
test
push
out
fnsave
dec
inc
in
mov
jge
sub
ds
test
dec
mov
add
leave
ss
loop
les
loopne
mov
push
rcr
cmp
cld
repz
inc
pop
cmp
insl
add
xor
or
jmp
sub
mov
push
lds
push
cmpsl
jmp
jo
add
mov
inc
cmp
lahf
push
adc
push
roll
mov
or
sbb
scas
outsb
repz
call
mov
push
fs
mov
and
cmp
adc
fsubrp
sti
add
xor
cs
mov
ljmp
repz
cmp
pop
sahf
mov
in
xchg
nop
in
pop
out
imul
adcl
push
ljmp
inc
pop
jmp
cli
lahf
push
mov
mov
mov
mov
fwait
mov
dec
scas
ljmp
loopne
jb
xor
ja
pop
test
rcll
and
mov
imul
add
jno
fcmovbe
pusha
fwait
or
push
shrl
sub
sbb
mov
sbb
hlt
sbb
jl
sbb
out
inc
subl
cld
adcb
push
jo
test
cld
inc
sub
xchg
rcl
inc
adc
bound
push
sahf
add
pop
dec
addr16
test
sub
bound
in
mull
sbb
pop
shll
in
lcall
loop
xchg
fstps
inc
mov
add
dec
fnstcw
cmp
dec
add
mov
cmpsb
pop
xchg
xchg
popf
or
enter
sbb
lret
xor
std
int
ds
mov
add
movsb
or
mov
push
jg
dec
std
lea
sti
sub
inc
jnp
imul
jl
dec
popa
xchg
add
inc
outsb
lock
push
mov
clc
lahf
adc
int3
aam
mov
xorb
sbb
repnz
mov
xchg
jbe
fcoms
pop
jp
aam
mov
xor
in
jne
les
cwtl
int
cmc
jecxz
sub
mov
test
test
and
or
mov
sub
inc
mov
popa
sbb
push
aaa
pop
mov
inc
into
hlt
pop
pop
mov
sbb
sub
and
cld
cmp
inc
out
xor
dec
pop
orb
es
insl
rcpps
dec
jge
test
mov
and
aas
or
xchg
rcrl
xorb
ljmp
out
lcall
mov
stos
push
inc
mov
xor
scas
jns
mov
fwait
mov
imul
inc
fwait
adc
jbe
fs
pop
cmpsb
inc
mov
test
and
lret
xchg
out
dec
std
mov
inc
sbb
xlat
xor
js
mov
lods
scas
sahf
popf
cmpsl
sub
dec
adc
scas
xchg
mov
mov
scas
sbb
inc
mov
in
orl
dec
icebp
xor
loope
pusha
rclb
in
cmpsl
adc
leave
aaa
andl
arpl
insb
xlat
ret
mov
mov
shrl
add
and
sbb
jmp
movsl
daa
dec
testb
loopne
mov
fldenv
add
xor
sahf
adc
inc
ret
sbb
or
xchg
adc
adc
mov
iret
in
push
push
pop
je
or
cmp
dec
lcall
in
lea
gs
je
je
loopne
cmp
lret
and
add
and
cltd
or
enter
jnp
and
dec
call
mov
out
fnstenv
sub
cmpsl
call
pop
mov
cmp
dec
mov
jmp
inc
mov
mov
cmp
in
insb
mov
adc
lcall
cmc
mov
cmpsl
js
fildll
test
sub
fldl
inc
scas
lret
mov
sub
ror
push
mov
cpuid
or
loopne
mov
mov
sbb
lahf
xor
ret
in
test
lds
stc
lods
arpl
in
ret
aam
pop
mov
pop
stc
fildl
mov
xor
push
andb
cs
lret
and
fmuls
ja
jecxz
xchg
add
or
dec
ds
aam
inc
sbb
dec
jno
sub
mov
inc
les
inc
cwtl
jae
outsb
dec
mov
push
rol
repnz
ljmp
push
sbb
cli
add
jnp
cmovne
mov
add
push
inc
test
lods
in
xchg
or
lahf
sub
data16
fst
dec
ljmp
lock
imul
xchg
dec
sbb
cmpsl
fisttpll
or
push
xchg
or
adc
mov
inc
cmp
jnp
push
push
or
out
push
mov
enter
fwait
adc
mov
lahf
hlt
mov
dec
lods
jg
xchg
dec
in
pop
lock
jecxz
movsl
mov
sbb
push
mov
ja
mov
xor
movsl
jecxz
cs
mov
xchg
pop
loope
mov
mov
icebp
stc
lret
lcall
test
pushf
fdivs
fisubs
jp
adc
shll
movsb
sub
rcrb
lods
inc
scas
aam
xchg
pop
mov
mov
in
or
rcll
or
inc
mov
xchg
mov
ja
adc
push
sbb
dec
pop
xor
data16
jge
idivb
into
mov
cmp
inc
je
idivl
mov
fldl
leave
add
rol
ja
push
mov
push
in
push
and
mov
pushf
sbbl
lcall
imul
ret
cmp
bound
pop
ds
xchg
mov
and
and
clc
in
enter
mov
adc
xchg
dec
jp
aas
loop
xor
jmp
loopne
test
sbb
mov
sti
jge
testb
out
jns
jp
push
dec
mov
dec
mov
or
fwait
push
pop
imul
mov
aad
stos
sub
sub
pop
push
sbb
in
jae
clc
ljmp
mov
cmpsl
mov
divl
and
mov
popa
mov
out
clc
mov
sahf
int
aad
loope
lods
shlb
pop
cmc
sub
xor
lret
addr16
jecxz
ss
repz
ljmp
loope
push
pop
adc
rolb
cmpsb
arpl
jmp
sub
clc
adc
sub
mov
push
ds
mov
aaa
mov
nop
call
cld
and
rcrb
sbb
inc
lret
cs
pop
movsb
push
cmpl
dec
sub
aad
ficompl
inc
int3
testl
mov
popf
sti
jp
add
nop
pusha
cmp
or
pop
inc
cmc
loopne
int3
sbb
jbe
xchg
xchg
int
and
data16
mov
and
cmp
outsb
push
xchg
rcrl
out
call
insb
andl
stc
xor
mov
out
loope
jge
inc
pop
aaa
jp
pop
cltd
jl
mov
mov
jl
out
pop
negb
jnp
pop
sahf
mov
mulb
xor
movsb
add
aaa
sub
scas
mov
and
sub
data16
cmp
dec
xchg
aas
mov
cmp
sbb
sbb
lret
test
sub
jp
add
or
push
nop
fisubl
mov
pusha
push
xlat
ficomps
jno
mov
dec
lods
push
add
xchg
cwtl
test
mov
dec
pop
sub
xchg
sub
imul
jae
mov
pop
mov
lret
icebp
mov
cmc
fs
xchg
inc
rcl
aaa
lock
lahf
out
lahf
mov
movsl
pop
push
dec
mov
lret
add
pop
cmp
ret
push
pop
out
sarl
cmp
sbb
loopne
cmp
sarl
mov
stos
cmp
mov
xor
xchg
dec
ss
pop
jno
repz
xchg
rorb
mov
mov
push
pushf
hlt
les
sbb
jb
clc
sbbb
aad
je
jne
cmp
mov
fsubrl
in
cld
clc
js
push
push
xchg
xor
mov
push
adcl
mov
mov
call
popa
shlb
addr16
pop
xchg
pushf
adcl
dec
ret
aas
sbb
cltd
daa
ds
cmc
js
jp
push
in
loope
xorl
cmpsl
rorb
pop
out
mov
xchg
xchg
push
pop
call
sbb
sub
aaa
jns
shl
jp
jecxz
push
sub
inc
mov
xchg
pop
in
add
xchg
sar
and
pop
mov
scas
std
jmp
scas
mov
test
xor
jno
stos
cmpsl
lahf
in
sarl
out
loopne
fstpt
xor
push
fs
inc
mov
pop
aas
unpckhps
and
cmp
cmp
mov
cmp
jle
loop
jp
add
sbb
push
jae
mov
pop
mov
add
sub
xor
pop
pusha
sbb
mov
jmp
adc
mov
fstps
test
jo
insb
iret
fimuls
cmp
andb
pop
cmp
sbb
loope
scas
stos
inc
in
divb
add
inc
fstpl
xor
xor
int3
bound
xor
inc
lcall
dec
xchg
add
movsl
adc
rorb
arpl
mov
loope
das
push
jns
add
in
andb
leave
inc
stos
jg
xchg
leave
bound
lret
ds
pop
and
cltd
pop
test
xchg
leave
pop
ror
lcall
pop
xor
mov
pop
sahf
addr16
sub
cld
xor
repnz
ret
ret
std
mov
cmpsl
inc
pop
lods
aam
add
jno
mov
in
xor
push
pop
stos
lret
sub
push
bts
or
test
es
data16
insl
adc
es
pop
test
mov
add
stos
cmc
sbb
ret
sbb
jne
testl
add
lds
add
jmp
fcompl
jae
mov
lret
push
jecxz
push
pop
lcall
rcll
cmp
mov
xchg
sbb
push
arpl
pop
jecxz
lret
or
ret
mov
lods
push
test
popa
es
idivb
arpl
mov
cmp
mov
sbbl
xchg
cmpsb
ds
jne
mov
sub
das
cmp
xchg
test
movsb
fmull
push
lret
dec
sub
mov
aam
dec
pop
enter
mov
sahf
je
adc
push
pop
clc
stos
sbb
jecxz,pt
daa
jle
sub
jb
dec
mov
in
fimull
dec
shrl
leave
xchg
jnp
subb
push
sbb
lock
jecxz
int
sti
and
dec
push
cmp
mov
push
jge
orl
mov
ss
jmp
int3
cmp
pop
xchg
and
push
out
inc
jecxz
orb
jo
mov
jle
xchg
pusha
push
out
sahf
rorb
dec
jb
mov
push
stc
xchg
adc
pop
ljmp
mov
sbb
loopne
dec
sar
cmc
scas
cmp
mov
push
pusha
jns
ret
add
adc
push
push
inc
lods
push
mov
xchg
sub
jo
fldt
sbb
je
shlb
cs
jno
and
scas
out
gs
dec
pusha
and
das
icebp
cmp
inc
jg
adc
movsb
ds
push
mov
stc
in
push
sub
ss
cltd
fidivrs
pop
jp,pt
aad
xor
pop
shr
and
xchg
lret
jl
jno
push
push
xchg
in
push
jp
popf
xorb
cld
cmpsl
mov
add
outsl
fnstcw
cmp
sbb
sbb
inc
ficoml
pop
ss
leave
int3
pop
push
popf
lds
xchg
sete
fldcw
test
mov
stc
lret
fdivp
dec
mov
out
xchg
or
cmc
repnz
cmpb
imul
push
loopne
push
nop
pop
or
pusha
mov
loopne
imul
mov
inc
sar
outsb
ret
mov
bnd
and
mov
and
mov
icebp
adc
add
pop
ds
xor
adc
int3
sub
or
cmp
push
xchg
mov
aas
adcb
addl
cmp
lea
jg
movsb
inc
nop
in
lock
xchg
mov
int
push
cmp
xchg
mov
es
pop
mov
clc
push
or
mov
in
or
inc
lcall
rolb
in
int
inc
xchg
aas
push
repz
cmp
cli
inc
je
pop
adc
sbb
push
bound
mov
cmc
ljmp
push
cmpb
rcrl
inc
cmpsl
dec
shlb
loop
push
clc
mov
pushf
xchg
hlt
jecxz
popf
outsb
cmc
pop
mov
or
roll
jge
scas
jae
imul
mov
lahf
lock
mov
sahf
dec
xchg
enter
lret
xor
inc
pop
add
cmp
insb
cld
inc
cmp
gs
inc
adc
xchg
jp
fidivrs
js
adc
or
call
push
fcompp
cli
sub
leave
test
sbb
adc
mov
jle
xor
shlb
dec
pop
dec
gs
hlt
stos
aaa
dec
xlat
in
mov
call
call
jecxz
loop
mov
sbb
dec
mov
xlat
movsb
inc
mov
sub
mov
cmpsl
loope
ret
cltd
mov
shlb
push
leave
dec
fucomip
imull
fdivrl
fidivs
js
cmp
cmpsl
add
in
and
pop
add
cltd
xor
fidivrs
lds
imul
lods
lret
push
mov
inc
lcall
lds
cmc
imulb
ljmp
into
aaa
xor
imul
outsb
std
into
sub
jl
sti
push
jne
test
mov
cmp
ret
push
ja
pop
cmpsb
int
lcall
mov
subl
cmpsb
orl
cli
mov
dec
lock
adc
lods
xchg
adc
xchg
fadds
and
add
jp
scas
push
and
ds
mov
testl
repz
popa
insb
adc
jmp
or
aad
push
jo
sbb
xor
cmp
push
xlat
cmp
lcall
fnsave
bound
cmp
iret
hlt
push
push
cmp
sti
pop
adcl
movsb
mov
cmp
aad
aam
dec
ja
aaa
jg
int
cwtl
test
addr16
or
jb
test
decl
stos
inc
sub
cmp
lds
jg
cmp
and
xchg
lret
das
sbbb
jmp
inc
iret
stos
popf
roll
lahf
imull
lea
add
adcl
push
and
inc
stc
fmull
daa
xor
push
ret
dec
xchg
fdivp
ljmp
dec
insb
cwtl
push
add
sub
int
int3
inc
es
add
mov
fdiv
mov
rclb
jl
sti
imul
ret
cmp
cld
xchg
dec
push
test
fidivrl
test
or
jae
sbb
pusha
aaa
fisubrl
xchg
call
xchg
and
fstps
or
xchg
and
outsl
fmul
shlb
jb
push
inc
cmp
inc
out
xchg
xlat
mov
push
mov
xchg
into
dec
fdivrl
xor
jecxz
int3
xchg
push
mov
arpl
jecxz
scas
xor
push
movsb
xchg
inc
inc
outsl
mov
push
jp
xor
lods
and
push
repz
and
adc
lahf
fcmovb
xor
aad
sahf
inc
xchg
frstor
stos
or
xchg
popf
sbb
push
in
stos
lcall
insl
cltd
lret
and
rcrb
xchg
std
mov
sti
sub
arpl
jmp
icebp
or
arpl
leave
xor
jecxz
and
ljmp
mov
mov
or
sahf
mov
imul
arpl
push
out
lods
test
subl
xor
sub
pop
push
xchg
pop
cmp
cmp
xor
dec
add
ljmp
dec
hlt
mov
mov
mov
je
sbb
xchg
ds
fbld
repnz
pop
cld
sub
lret
add
cmp
cmp
push
pusha
sub
repnz
daa
inc
ss
xor
popa
jp
or
dec
adc
lahf
sub
dec
mov
mov
jmp
repz
dec
gs
ds
and
or
aaa
mov
in
loopne
adc
scas
pusha
xlat
fnstcw
xor
fucom
add
js
adc
mov
dec
add
jmp
ret
dec
sub
mov
enter
mov
mov
idiv
pop
outsl
sbbb
add
mov
insb
pop
sarl
mov
divl
adc
popf
xchg
aam
jecxz
push
cmovnp
push
add
xchg
sahf
ja
push
inc
rcl
push
sarb
hlt
fbstp
cmpsl
iret
leave
fcompl
loopne
in
mov
dec
ds
stos
xchg
jecxz
jge
movsb
jge
mov
add
xchg
sbb
adc
stos
inc
add
inc
call
sbb
ret
enter
jno
test
bound
icebp
sbb
push
fiadds
mov
inc
js
call
ja
sub
dec
fdiv
sub
aad
cmc
mov
sbb
es
mov
enter
jns
cmp
mov
push
fst
inc
icebp
cmc
xchg
lahf
js
fisttpll
adc
stos
inc
cmp
lret
dec
cmp
test
jne
sbb
aaa
dec
out
stos
pop
leave
faddl
orl
jle
pusha
mov
ret
sbb
test
ljmp
fmuls
testl
shr
jns
mov
sti
sbb
rorl
data16
cmp
das
dec
mov
inc
jno
nop
push
and
js
in
sarb
je
lahf
in
cmpsb
lock
loop
out
shr
insb
cmp
int
add
in
mov
gs
sub
sti
cmp
jne
push
into
imul
gs
jecxz
stc
ficoml
mov
loopne
rcr
clc
lahf
mov
je
push
xchg
cmp
mov
xchg
mov
shl
cmp
fbstp
sbb
scas
insb
testb
xor
mov
inc
add
imul
mov
mov
imul
sub
xor
mov
scas
push
add
sub
aaa
lock
jbe
in
jle
mov
pop
mov
les
sti
push
ds
inc
fiadds
ja
data16
data16
shrl
inc
popa
sub
lods
into
xchg
mov
cli
add
sbb
add
pop
es
inc
icebp
push
mov
jo
call
dec
pop
adc
xor
xchg
mov
aad
cmpsl
outsl
xchg
imul
sbb
fistps
push
jp
lock
fsubs
test
sbb
inc
pop
jmp
cmp
data16
xor
push
xor
pusha
repnz
lcall
push
add
dec
out
paddb
ror
fnstcw
sub
dec
mov
call
jecxz
cmp
pop
sahf
add
in
in
pop
xor
sbb
in
lahf
addr16
and
fisttpl
negl
jp
inc
pop
xor
sub
mov
fwait
add
mov
test
addr16
adc
das
push
mov
rep
outsl
xor
sbb
add
mov
inc
lods
mov
daa
inc
xor
in
into
cmp
mov
and
jae
mov
cmpsb
add
out
jae
addl
and
aad
scas
inc
pusha
in
lods
pop
mov
push
loopne
mov
mov
jg
iret
cs
lret
ja
mov
call
push
fcmovnb
inc
fcmovb
repz
sbb
shrb
arpl
dec
mov
arpl
cmp
push
dec
mov
pop
pushf
adc
xchg
jmp
xchg
mov
fnsave
sbb
sbb
insb
pop
aaa
xor
ds
aam
cli
mov
xor
outsb
call
mov
in
enter
lods
jl
cld
xor
insb
in
jl
incb
inc
adc
pop
lcall
mov
pop
lds
dec
xor
fdivr
mov
mov
js
and
sub
or
cld
inc
loope
xchg
adc
jb
imul
int3
lods
jno
jns
les
fmuls
je
sbb
addr16
xchg
pop
int3
cmp
jno
mov
loope
addr16
sbb
mov
lret
lods
jo
jmp
das
add
add
clc
adc
sbb
adc
cmp
inc
fstpl
sbb
xchg
stos
stos
sahf
mov
mov
adc
dec
jne
test
fnsave
mov
lods
outsb
or
cmpsl
adc
roll
popl
pop
in
mov
rcr
and
jb
stos
pop
adc
in
or
sahf
xchg
sub
pop
cmc
sub
push
lods
xor
adc
xchg
and
fisttpll
sbb
mov
scas
cmp
pushf
jae
jae
dec
dec
out
addr16
mov
std
lea
out
cmpsb
pop
and
arpl
xor
popf
xor
ficompl
inc
aam
imul
ljmp
sti
sub
ljmp
jne
insl
adc
lods
insb
dec
bound
repnz
push
idivl
sbb
and
push
lret
dec
daa
xchg
movsb
adc
mov
icebp
into
mov
or
cmpsl
int3
and
mov
cmp
repnz
nop
cmpsb
mov
dec
mov
cmp
push
out
nop
shll
mov
sbb
sub
add
push
imul
adc
pop
push
aaa
jmp
dec
inc
jo
lock
jo
xor
xor
pop
mov
xchg
rcl
adc
arpl
test
add
push
push
or
stos
dec
ret
iret
popf
pop
daa
lcall
cmpsb
and
into
es
jmp
jmp
repz
jns
repnz
pop
int3
scas
push
cs
sbb
sahf
insl
mov
and
sub
cmc
jecxz
in
js
aas
lret
popf
test
movsl
push
test
xchg
daa
and
mov
out
repz
pusha
jae
and
sar
aad
aaa
sbb
inc
add
testl
cmp
aas
rclb
mov
cmp
jge
cmp
inc
fistpl
add
adc
cld
enter
push
hlt
divb
sahf
adc
jo
adc
inc
lret
add
stos
push
mov
cmp
cmp
aam
xor
mov
stos
jl
sub
ss
and
fs
pop
sbb
pop
add
mov
push
pop
inc
push
mov
mov
clc
push
push
sub
fimuls
adc
pop
mov
cmpsl
xchg
call
sbb
sbb
pop
inc
es
and
pop
ja
rorl
lods
cmpsb
sbb
in
mov
out
iret
pop
lret
pop
push
aas
cmp
fcompl
pop
pop
cmc
mov
ret
outsl
leave
pop
loope
lcall
shll
sub
sbb
mov
stc
into
data16
xlat
out
mov
outsl
rorb
push
push
addr16
cmp
divb
inc
add
mov
inc
in
mov
jmp
roll
xorl
gs
lods
xor
inc
xchg
std
cmc
in
xchg
je
shll
gs
sti
test
push
push
pop
cwtl
mov
mov
aas
push
into
jns
ljmp
inc
cwtl
push
sbb
test
adc
jmp
sub
mov
sub
and
cmpsl
icebp
inc
je
mov
push
push
xor
mov
fmuls
fldcw
frstor
and
dec
ljmp
aaa
push
jg
inc
jae
xor
inc
mov
lret
js
mov
das
mov
mov
sub
leave
mov
mov
adc
div
movsb
mov
mov
cmp
dec
lock
push
push
cmp
stos
xchg
icebp
jno
call
rorb
popa
ljmp
push
adc
sub
sub
xchg
leave
icebp
xor
jg
mov
dec
mov
ljmp
push
orb
lods
pop
outsb
mov
sbb
outsb
jnp
dec
xchg
test
or
mov
jecxz
push
aas
insb
and
nop
dec
cltd
add
inc
cmp
dec
loopne
nop
insb
les
pusha
ljmp
add
mov
sbb
mov
jne
inc
inc
out
jnp
cli
pop
or
mov
fildll
cmpsl
leave
mov
inc
and
addr16
xchg
cltd
sbb
and
push
ret
dec
sub
pop
dec
xchg
push
push
jl
aam
xlat
add
xchg
xchg
and
das
adc
cmpsb
sbb
ljmp
xor
jge
cmp
pop
mov
mov
mov
and
or
mov
movsl
fisubs
imul
fstpt
stos
out
addl
xor
cmp
cmp
mov
cmp
jecxz
movsb
fistpll
pop
out
jbe
mov
jns
mov
fsub
push
xchg
out
jecxz
sbb
ficoms
dec
jbe
sub
scas
cmp
lcall
test
lret
fimull
adc
mov
jp
jne
adcb
mov
movsl
testb
sub
lahf
pop
test
mov
xchg
insb
xchg
sarb
bound
sub
stos
xchg
xchg
mov
insl
movsl
std
cmp
add
sarb
test
ss
mov
jg
test
popa
lods
push
dec
das
jge
inc
enter
out
xchg
sbb
mov
js
mov
adc
out
push
adc
lret
cmp
xor
out
maxps
jae
inc
cmp
add
mov
pusha
outsb
inc
push
jne
call
shll
addb
fcomp
mov
sub
inc
loop
cmp
in
xor
test
jno
xchg
mov
pop
mov
mov
lret
inc
add
repz
sub
ljmp
ret
dec
fcomip
mov
test
jbe
xor
sub
mov
or
dec
mov
aaa
jle
and
imul
pop
aaa
arpl
nop
dec
in
lds
pop
push
imul
lahf
add
mov
lcall
mov
jmp
mov
push
jnp
jbe
cmc
push
mov
aas
icebp
sbb
ficompl
cmp
rcl
adc
stos
mov
pop
out
mov
sub
adc
adc
xor
lds
aad
mov
cmpsl
addb
mov
addr16
xchg
fldt
andl
sub
outsl
clc
mov
stos
push
push
sub
mov
lahf
imul
inc
dec
test
mov
in
jb
aaa
ss
cld
jnp
dec
idivl
xor
fmuls
cltd
leave
pop
pop
inc
data16
sub
popa
cld
xor
sbb
xor
adc
pop
mov
push
mov
dec
sub
cmp
loope
inc
mov
sbb
lock
repnz
and
fisttpll
das
inc
push
xor
test
push
in
sbb
loope
mov
add
pop
cmpsb
out
insb
xor
movsb
lock
mov
dec
mov
cmp
les
outsb
test
pop
shl
pop
adc
icebp
adc
mov
ss
sub
mov
cmpsl
jl
ds
lahf
roll
pop
aad
or
cmp
sub
scas
jbe
hlt
call
or
inc
scas
mov
push
and
jbe
or
mov
lods
jbe
icebp
or
cmpsl
mov
cmpsl
inc
clc
ret
and
mov
push
jge
sbb
pop
fs
call
stc
lea
sub
stc
pop
push
test
daa
out
stos
cld
dec
add
pop
push
cmp
outsl
aam
pop
mov
ja
aas
xrelease
mov
int3
xchg
gs
clc
jle
jb
xchg
cmpsl
or
pop
fmuls
xor
add
jecxz
aam
jne
imul
sar
ljmp
repnz
in
pop
jbe
pop
insb
cmp
inc
or
clc
cmp
sub
test
imul
in
xchg
insl
jecxz
push
dec
xchg
je
leave
loope
xor
fdivr
out
dec
data16
xchg
ds
gs
pop
mov
mov
jbe
mov
lea
xchg
hlt
sar
pop
jp
cmp
add
fsub
xchg
test
push
mov
push
xor
dec
cld
push
push
fisttpl
in
arpl
fstpl
sbb
sub
shll
movsb
ret
inc
jae
rolb
mov
sbb
inc
pushf
sbb
mov
repnz
mov
subb
jne
and
and
addr16
sbb
xor
jbe
dec
sbb
test
pop
mov
push
xchg
adc
dec
mov
inc
roll
call
mov
hlt
push
stc
or
push
fistpll
daa
xchg
pusha
mov
stc
dec
or
or
or
outsl
adc
mov
mov
fisttps
icebp
negb
fst
cmp
std
call
bound
lods
pop
rorb
or
notb
repz
pmaxsw
pop
lea
leave
xor
and
cmpl
jg
or
movsb
adcb
rorb
std
cmp
mov
jmp
shll
adc
mov
push
or
adc
sti
inc
and
xchg
mov
xchg
pop
lret
xchg
clc
cmpsb
xchg
jl
daa
mov
fidivrl
lods
adc
fnstenv
lahf
push
hlt
mov
fistl
fstpl
xor
repz
in
lds
mov
xor
xchg
icebp
nop
and
mov
mov
xchg
sub
jne
jb
out
pop
push
inc
fnstsw
movsl
fidivs
inc
idiv
out
sub
ss
mov
add
test
cmp
lds
and
movsl
and
lods
fmuls
sahf
daa
or
pop
test
mul
lods
sbb
stos
rolb
sahf
orb
enter
or
nop
jno
popa
scas
scas
cmovp
lret
mov
push
cmc
push
xor
stos
cs
movsl
push
or
ss
mov
xchg
sbb
inc
xor
ror
stos
adc
mov
fdivr
test
sub
pop
dec
dec
cmpsb
pop
sub
clc
popf
add
xor
pop
adc
pop
cs
nop
lds
jnp
addr16
iret
adc
cmp
xor
jecxz
jge
loopne
cs
rol
mov
test
frstor
in
out
movsb
call
dec
adc
aaa
mov
xor
jecxz
dec
imul
icebp
mov
adc
sti
mov
ljmp
adc
cltd
lds
scas
repnz
push
bound
mov
repz
mov
add
mov
push
rolb
cli
jbe
cmp
sub
daa
enter
ja
add
pop
scas
jle
mov
cs
jne
pushf
int3
add
xor
movl
sub
mov
icebp
sar
aad
test
mov
pop
adc
pop
or
sub
test
stc
sbb
lret
jg
mov
sbb
cmp
push
lret
xchg
ret
jle
je
outsl
hlt
pop
pop
dec
jbe
or
fwait
pop
nop
jge
rcrb
popaw
pop
ds
pushf
int
cmp
jae
fs
jnp
mov
orb
add
ret
push
cmc
lahf
int
push
or
mov
imul
es
cmpsl
or
icebp
jmp
ficoml
mov
jno
gs
jbe
push
jne
push
push
push
stos
aaa
movsl
sub
mov
push
or
or
xchg
adc
fisubrl
das
jl
rol
lret
mov
inc
and
cmp
push
cs
inc
into
out
mov
mov
movsb
mov
jge
imul
fcoml
inc
and
rorb
fwait
cli
lret
cltd
aaa
mov
loop
mov
inc
mov
mov
dec
mov
xor
and
stos
int3
aas
dec
into
inc
add
inc
shll
fimuls
fisubrs
sbb
xchg
and
outsl
mov
inc
mov
jbe
ljmp
mov
fcomp
mov
xchg
sub
push
pop
shl
fldt
inc
sbb
cmpsl
fnstenv
cltd
data16
cmpsb
mov
mov
mov
lcall
and
mov
add
cmpsb
ret
clc
push
cmp
jl
inc
mov
inc
adc
imull
pop
dec
dec
cmp
sbb
xchg
xlat
fnstsw
outsl
mov
enter
das
clc
or
mov
int3
nop
lds
hlt
xchg
pop
add
add
jo
mov
cli
jb
jecxz
in
sub
pop
pop
mov
push
ret
lcall
xchg
movl
xchg
aas
movsb
adc
adc
dec
inc
xchg
push
jl
xor
lret
push
fcoml
popf
aad
lods
lods
stos
out
movsb
xchg
jbe
push
insb
push
add
movsb
sbb
and
mov
icebp
xchg
inc
mov
nop
sbb
mov
and
int3
fcoml
and
dec
push
sub
mov
jne
and
inc
push
dec
shr
hlt
addr16
stos
pop
jae
out
xchg
lock
and
mov
jo
pop
pop
inc
mov
mov
arpl
adc
sub
js
or
into
sub
sbb
mov
ret
fsts
cmp
pop
dec
push
int3
loop
sbb
mov
add
sbb
into
push
lock
sbb
jo
popa
out
dec
scas
sub
loope
cmpsl
jle
add
les
pop
cmc
mov
out
mov
cmp
mov
dec
jbe
inc
cmpsb
fists
fldt
push
test
push
call
push
sbb
sbb
jecxz
jl
adc
xchg
mov
pop
test
push
push
inc
test
jb
ret
and
imul
xchg
pop
pop
mov
pop
sub
sbb
mov
popa
inc
xlat
push
mov
insl
gs
popa
jnp
dec
dec
mov
xor
stos
xor
xor
lods
test
aaa
cmp
push
adcb
outsl
or
dec
pop
and
sub
inc
xchg
decl
cmp
or
daa
sbb
imull
lds
rclb
sbb
pushf
mov
pop
es
sbb
leave
xchg
fldenv
adc
add
add
loop
and
jl
repz
inc
ja
hlt
divb
pusha
sarl
and
push
xchg
and
pop
xchg
dec
or
pop
dec
lds
xor
jp
inc
jge
xor
add
inc
dec
clc
ret
es
out
mov
push
sahf
push
jecxz
sub
fmull
pop
stos
sbb
pop
lea
outsl
inc
add
in
es
call
ds
ss
and
and
out
inc
sbb
inc
fwait
xchg
ljmp
in
ficomps
sti
pop
xor
outsb
mov
cs
fst
mov
int
std
inc
cmp
push
adc
push
sub
jnp
dec
mov
add
mov
pop
cmp
stc
xor
jle
fs
or
popa
scas
and
ror
pushf
rcrb
mov
cmp
ret
ret
jle
cs
pop
inc
lea
out
in
enter
mov
mov
pop
xor
orl
mov
xchg
sbb
mov
pusha
jbe
adc
addl
int
ds
imull
nop
xchg
fbstp
add
sub
aas
popa
add
jecxz
ja
sub
xchg
arpl
fdivrs
popa
pop
aam
inc
pop
cmp
jg
xlat
push
inc
cmpsb
lds
push
inc
addr16
repz
mov
imul
jl
xchg
iret
bound
adc
adc
lods
repz
bound
jbe
sarb
pusha
mov
jmp
inc
mov
inc
in
jmp
and
dec
inc
in
sub
mov
xlat
mov
stos
or
dec
cmp
jno
aaa
xchg
and
outsb
mov
adc
push
cwtl
mov
jge
popf
jp
xor
inc
mov
add
jo
movsl
hlt
dec
ret
test
lods
jp
jo
jp
mov
cmp
jns
lret
jmp
and
cmp
insl
cmc
cli
divl
pop
arpl
xor
jl
push
jle
inc
cmp
mov
pusha
cmp
lahf
test
push
sahf
mov
mov
xlat
pusha
sub
pop
dec
add
mov
movsl
insb
cmp
sbb
inc
dec
pop
sbb
aam
shl
pop
decl
pop
pushf
inc
test
orb
xor
mov
mov
inc
and
push
sub
ret
adc
sbb
arpl
mov
jb
shrb
aad
jbe
jmp
pop
imul
hlt
inc
addl
and
clc
adc
jp
movsl
outsl
insb
add
int3
sub
cmpsb
fs
xchg
sub
sub
sbb
lock
outsl
mov
lock
lahf
xchg
das
jbe
pop
sbb
add
xlat
ja
sbb
out
push
jno
pushf
daa
dec
mov
test
aad
ds
std
inc
lret
push
dec
jg
mov
jl
sahf
pop
es
mov
sbb
cmp
sub
pop
mov
imull
lock
pop
in
test
daa
and
sbb
fsubl
fwait
testb
jl
imul
adc
dec
pop
xor
add
xchg
imul
xlat
sbb
add
sbb
dec
daa
or
out
lahf
dec
xchg
ret
ss
xchg
push
es
fsubr
ja
xchg
and
push
sarl
sarl
fldt
repz
scas
xor
insb
or
stos
dec
fidivrl
cmp
lret
insb
hlt
jmp
mov
popf
pop
test
sub
add
dec
push
inc
jle
lods
jae
mov
xor
cmp
pop
call
out
sbb
outsb
xchg
ret
hlt
adc
lock
pmuludq
jno
cmp
push
insb
enter
test
lods
mov
in
lods
sbb
push
test
sbb
daa
sbb
push
xor
pmulhw
jb
fcmovnu
out
loope
sub
or
psrlq
sub
push
cwtl
dec
sahf
andb
jmp
mov
and
sbb
cmc
outsl
pcmpeqw
push
mov
sti
sar
mov
out
aas
sub
jp
fidivrs
popa
push
inc
aas
or
sti
or
push
and
fcomp
fdivrl
and
mov
into
inc
ret
xor
test
dec
daa
lods
insl
fisubs
bound
or
push
andl
shlb
imul
and
mov
and
test
cwtl
mov
pusha
sub
test
sbb
lock
push
leave
xchg
stc
fcoml
dec
ret
bound
dec
push
popa
cltd
mov
mov
pop
sarb
xchg
or
stc
fisubrs
lcall
cmc
out
inc
push
cmc
cmp
arpl
iret
loopne
sub
mov
daa
sub
in
dec
mov
xchg
lcall
and
stc
pop
data16
sub
mov
dec
and
xlat
and
ficoml
outsl
pop
int
movsl
aaa
or
and
out
xchg
dec
push
cmp
ljmp
icebp
xchg
fldl
in
sbb
pop
pop
ljmp
decb
mov
into
leave
add
clc
xchg
xchg
mov
fstps
jno
loop
sbbl
adc
mov
lcall
fsubs
pop
outsb
adc
into
insb
xor
dec
lret
nop
dec
leave
cmp
dec
xchg
xor
out
fisttpll
into
andl
mov
inc
idivl
pop
xchg
inc
xorl
aad
ljmp
mov
inc
and
lahf
lcall
das
add
mov
rcrl
dec
push
xor
pop
add
shll
test
cmpsb
sub
cmp
pusha
pop
or
add
ret
mov
into
mov
xchg
dec
imul
pop
xchg
jb
add
xchg
pop
xchg
and
das
int
add
scas
jnp
shll
xchg
cwtl
xchg
movsl
cld
cwtl
stos
aas
push
sub
dec
and
mov
inc
pop
fld
lea
mov
mov
adc
add
sub
mov
fsts
mov
mov
inc
jne
imul
pop
int
push
data16
xlat
pop
dec
call
orl
cli
sbb
mov
iret
push
ficoml
call
and
or
pushf
push
add
sub
lods
and
and
adcl
cmpsl
mov
call
subl
or
call
lock
popa
jmp
test
add
mov
mov
out
pop
repnz
dec
daa
lret
out
movzwl
cmp
jb
aaa
or
pop
pop
js
shl
inc
jae
jecxz
fidivs
xchg
fwait
cmp
add
adc
xchg
mov
pop
mov
repz
das
scas
clc
sub
shll
sar
sub
in
ret
bts
cltd
or
pop
and
movsl
jg
mov
das
and
imulb
and
mov
and
test
imulb
call
fcoml
sbb
push
mov
inc
dec
jl
faddp
ret
cmp
jbe
cmp
dec
imul
aad
sbb
nop
mov
mov
addr16
and
add
inc
sbb
sbb
jmp
mov
pop
sub
inc
pop
fstp
inc
or
inc
mov
pushf
insb
in
mov
pop
pop
lcall
das
cwtl
cltd
push
pop
icebp
pop
aad
mov
adc
arpl
xorl
loop
mov
inc
cmp
dec
jge
ds
addb
jp
jge
push
adc
cmp
adc
mov
adc
outsb
lea
ljmp
das
cmpsb
cltd
and
sub
jge
ss
xchg
add
test
icebp
fwait
add
lock
mov
push
pop
mov
subl
add
cmp
push
rolb
ret
aas
sbb
imul
lods
test
cltd
inc
push
dec
pop
xor
inc
bound
cmp
fadd
mov
cs
adc
xchg
neg
sbb
adc
mov
or
jmp
cmp
add
jo
mov
mov
mov
int
xchg
sub
outsl
rcrl
inc
cmp
sub
xor
mov
sbb
call
xchg
xlat
out
in
test
fwait
push
mov
pop
lcall
addr16
mov
xor
fsts
addr16
xchg
lcall
fstl
repnz
and
xor
mov
push
add
xchg
ret
xor
outsl
leave
pop
push
adc
inc
jnp
xchg
pop
and
mov
dec
jl
push
jo
pop
add
cmp
imul
and
xor
loope
out
add
ja
xor
ja
push
ss
pop
xchg
jecxz
lds
adc
imul
or
jne
inc
imul
ret
mov
mov
jecxz
adc
repnz
cmp
add
lret
lea
fwait
jns
arpl
mov
inc
or
pop
xlat
cwtl
dec
movq
cmp
js
sbb
cld
mov
popa
in
adc
fsubrs
or
jo
adc
sbb
cld
adc
xor
int
icebp
and
int
adc
cwtl
jmp
or
pusha
pop
jg
add
aaa
fsubs
out
or
lcall
jecxz
hlt
pop
icebp
dec
push
add
ja
xor
mov
pop
adc
test
mov
pop
fnstcw
test
pop
ret
mov
fiaddl
mov
push
mov
enter
les
adc
push
mov
push
fcomps
push
dec
outsb
mov
jmp
bound
push
cmp
inc
cmc
sbbl
sbb
pusha
sub
xchg
sbb
lahf
inc
pop
outsb
fcomi
mov
dec
push
adc
or
test
mov
pop
arpl
mov
ljmp
dec
cld
popf
int3
stc
dec
xchg
repnz
into
add
cmp
inc
shrl
dec
ja
rclb
hlt
inc
push
aam
xchg
lret
imull
mov
in
cmpsl
aad
push
xchg
js
pop
and
cmp
subl
adc
imul
mov
inc
shll
in
ret
sub
mov
dec
imul
cs
pop
xor
mov
lods
data16
iret
pop
add
movsb
pop
xchg
mov
scas
fcmovnu
ja
setno
jbe
into
add
popf
je
daa
out
add
fistpl
add
ret
push
mov
cmpsb
into
fimull
call
sub
sub
cmp
add
inc
faddp
cmp
adc
inc
add
mov
jae
and
jbe
cmp
jmp
pop
hlt
mov
les
stos
add
jmp
rorb
imul
sar
add
pop
push
mov
fcomi
inc
shll
testl
enter
lret
and
leave
enter
rclb
lea
mov
xor
dec
cmpsl
mov
push
xacquire
xor
cmpsb
push
inc
sub
cmp
aas
xchg
jns
cmp
cmpsl
xlat
mov
cmp
mov
repz
in
loopne
test
xchg
xchg
jge
or
out
iret
aas
rcr
cmpsl
inc
ficoml
rcll
aad
cmp
lock
jle
lock
and
leave
sahf
scas
gs
std
or
and
aam
subb
aad
aad
xor
or
shl
in
mov
movsb
cmp
jg
mov
adc
mov
jo
sub
push
std
int
mov
pushl
das
sub
testb
sbb
mov
jmp
fidivrl
imul
movsb
rorb
movsl
fisubl
pop
mov
pop
xchg
clc
cmpsb
rorb
sbb
imul
in
jae
adc
js
xchg
inc
les
cmp
and
pop
adc
push
push
outsl
shrb
cmovns
pop
int3
jnp
dec
mov
arpl
dec
mov
lcall
in
testl
pop
push
xchg
das
mov
jmp
or
sub
test
in
xlat
xor
mov
shl
inc
pop
insl
push
cld
aam
push
or
xor
test
les
in
popf
jmp
imull
jg,pt
pop
mov
dec
hlt
test
add
inc
cwtl
adc
sub
cli
aaa
push
repz
mov
and
cli
popf
lcall
scas
cltd
inc
dec
fcoms
xchg
ja
cld
shrb
fidivrs
lcall
iret
es
outsb
je
push
sbb
pop
push
sbb
ds
cltd
pop
ret
loope,pn
jge
sub
xchg
arpl
or
adc
adc
ret
das
mov
xchg
pop
dec
inc
mov
sbb
or
jnp
out
divb
out
fdivl
aas
cmp
or
ja
icebp
adc
jae
test
xchg
mov
mov
in
mov
jb
pushf
mov
vandnpd
or
out
aam
fldt
dec
cmpl
jg
outsl
lds
dec
sti
out
xchg
inc
sub
push
xchg
pop
mov
movsb
push
mov
add
loope
iret
ja
pop
cmp
addl
dec
insl
jnp
mov
movsb
sbb
rcrb
dec
adcl
shll
sbb
arpl
mov
sub
and
jns
das
jae
iret
pop
xor
cmp
inc
and
inc
nop
rol
imul
jle
pop
mov
repnz
je
jae
jecxz
mov
loope
outsb
out
adc
std
or
jecxz
out
aas
mov
mov
je
dec
inc
scas
ljmp
ljmp
pop
std
out
aaa
dec
pop
push
lods
cmp
xchg
xchg
push
inc
add
xor
movsl
cmpsb
mov
scas
pop
push
stc
mov
adc
fisttps
xor
lret
out
loopne
pop
pusha
scas
aaa
pop
xor
push
je
mov
movb
adc
popa
aas
push
inc
or
jecxz,pn
mov
push
sbb
fwait
jmp
jbe
cmp
imul
mov
cld
cmpsl
es
xchg
lahf
mov
js
xchg
mov
xchg
jb
cmp
iret
push
pop
and
mov
aaa
cmc
dec
push
in
sub
daa
into
mov
imul
push
sub
push
pop
notl
sahf
dec
push
jle
mov
lcall
ja
mov
bound
scas
fildl
inc
cmp
mov
lahf
and
jmp
xor
mov
xchg
pop
stos
dec
ficompl
xchg
mov
sub
mov
cmp
decb
inc
lea
inc
inc
xchg
test
addr16
iret
adc
lea
inc
or
int3
and
stos
mov
outsb
roll
push
inc
bound
lods
enter
fldt
sbb
jno
sub
testl
or
movsb
scas
sub
es
xchg
inc
movsb
cmp
xchg
inc
es
das
aad
js
add
lret
add
in
and
out
push
je
xor
and
or
paddd
test
arpl
cmp
mov
or
or
mov
mov
mov
sub
loopne
cmc
cmpb
jg
jno
daa
imul
bswap
push
xchg
jl
fimull
pop
jmp
inc
stos
mov
outsb
dec
add
push
mov
xlat
mov
fsubr
and
mov
xor
jge
mov
or
adc
or
ja
loope
fistps
mov
or
mov
daa
rorb
cli
cmp
xor
sbb
ret
mov
mov
cmpsl
cmp
loopne
fiadds
mov
ds
xchg
insb
insl
jge
push
add
out
mov
xchg
loop
lret
pop
sahf
mov
scas
jae
xchg
aam
cmpsb
subl
mov
mov
leave
push
stos
mov
test
aam
sbb
out
mov
jg
pop
and
dec
cmp
push
inc
fldcw
call
std
cmp
sub
dec
adc
int3
shll
xor
push
out
icebp
in
call
mov
mov
out
daa
in
sbb
jno
out
pop
jle
pop
imul
pop
jo
popa
mov
movntps
pop
incl
test
xor
push
notl
push
sub
aaa
xchg
jle
mov
sbb
andl
repz
xchg
pop
adc
and
sub
stos
sub
xor
and
jmp
fildll
rcll
arpl
mov
leave
mov
mov
int
loop
loop
test
cwtl
pop
cmp
jb
mov
push
mov
adc
jp
and
and
icebp
fbstp
xlat
adc
push
movsb
loop
mull
pop
sbb
pusha
sbb
sbb
mov
sub
sti
fwait
rcl
in
fmuls
or
lahf
cmp
pushf
pop
mov
cmp
ss
mov
dec
jg
xchg
enter
xor
jno
and
jae
inc
rep
scas
xchg
testb
out
std
sbb
sti
cmp
pop
adc
imul
out
enter
pop
lods
lods
add
cmp
pushf
xchg
mov
je
jbe
add
insl
sbb
adc
dec
pusha
sbb
jp
jl
mov
push
aad
push
xor
sbb
insb
std
dec
jns
cmp
dec
loope
push
cld
nop
fnstsw
mov
xor
mov
int
mov
arpl
shlb
cli
push
imul
or
insl
pop
mov
icebp
pop
lds
jecxz
iret
je
inc
adc
inc
loopne
loop
mov
xchg
mov
sbb
adc
sub
add
mov
cs
xor
cwtl
mov
dec
mov
lret
push
scas
mov
mov
call
stc
adc
stos
arpl
add
and
jle
xchg
xchg
mov
mov
subl
lcall
fimuls
mov
mov
adc
popa
cld
stos
imul
pop
int
mov
popf
mov
xlat
cmp
lock
aam
loopne
or
test
jl
jg
mov
pop
in
sbb
stc
sub
xchg
fsubrs
loop
xlat
sahf
push
add
fistpl
nop
mov
pop
aad
lods
insb
xor
push
out
add
xor
das
dec
aam
aad
adc
push
mov
cltd
add
dec
mov
xchg
pop
dec
add
arpl
int3
pop
jnp
rcr
lahf
or
xchg
call
icebp
out
cwtl
mov
pusha
hlt
aas
out
imul
sub
cmpsl
or
or
outsl
mov
sahf
xchg
aad
add
push
push
mov
adc
xchg
sbb
jp
cmpsb
inc
lds
rcr
cld
dec
popa
into
inc
daa
pop
pop
mov
inc
shl
pop
xchg
fisubrs
ret
add
gs
xchg
out
pop
pop
int
fcmovnbe
and
pop
push
xor
lods
sub
call
xor
pushl
add
jg
repnz
icebp
call
movsb
repz
jae
push
inc
repz
jmp
shrb
sub
inc
and
xchg
sbb
inc
xchg
pop
mull
mov
mov
roll
ja
fbld
jle
push
rorl
cmp
call
mov
sti
push
add
clc
adc
dec
repnz
popf
ret
pminsw
das
mov
and
pop
xor
jne
push
shlb
push
adc
aam
xorb
lods
fists
sub
lods
insl
sub
adcb
mov
outsb
or
lret
and
mov
in
in
inc
hlt
aam
int
push
cmpsb
dec
sub
mov
lcall
rcll
lods
std
popf
and
inc
cld
xlat
sbb
jge
gs
add
cmpsl
jge
test
mov
insl
sbb
lahf
lock
xor
pop
pop
xor
rclb
cwtl
mov
xchg
pop
xor
popf
aam
arpl
idivb
and
ss
mov
ss
sbb
mov
sbb
add
mov
inc
ss
movl
clc
mov
mov
fisubs
mov
int3
dec
xor
leave
addr16
out
pushf
mov
mov
faddp
or
sbb
cmpsl
dec
divl
lret
cmpsl
mov
mov
xor
push
bound
and
mov
jne
je
jmp
fcmove
aam
fildll
scas
mov
mov
cmpl
adc
inc
mov
cli
or
and
ret
and
movsb
fists
in
pop
or
test
fsubl
dec
and
inc
xchg
call
cld
test
add
cld
mov
movsb
int3
daa
movsb
dec
add
in
fsubl
je
orb
or
and
mov
subl
lock
imul
in
cmpb
rorl
fs
cmpsl
push
sbb
test
push
push
xchg
fdiv
push
mov
cmp
adc
dec
push
xor
pop
jae
rcll
jne
push
add
sub
aas
pop
ds
mov
mov
les
push
movsl
dec
pusha
add
fnstsw
adc
lods
sbb
mov
mov
mov
push
leave
xchg
fldt
push
add
and
pusha
call
test
clc
cmp
mov
adc
jl
xor
aad
cli
or
jnp
adc
or
enter
cmp
add
hlt
adc
jnp
jl
sub
push
cmpb
repz
pop
adcb
leave
pop
mov
mov
pop
xchg
xchg
rolb
xor
rorb
outsb
divl
mov
mov
lds
cmc
and
movsb
pop
and
cltd
in
loopne
mov
test
cmp
loopne
icebp
aad
adc
pop
push
sbb
out
mov
cld
and
ljmp
cmp
or
push
jmp
loope
int
mov
pop
pop
push
adcb
cmpsb
lea
loope
and
and
mov
addr16
mov
sbb
mov
or
cmp
mov
xchg
clc
push
mov
mov
aaa
jmp
xor
and
iret
mov
lret
fcomp
adcb
int
arpl
scas
loopne
pop
ja
jns
and
mov
and
mov
into
dec
xor
mov
and
pop
xor
xchg
xchg
pop
push
sbb
stos
mov
lahf
pushf
call
mov
or
add
adc
lods
movb
sub
pushf
loop
fnstenv
jmp
xorb
mov
lcall
stos
fistpll
pushf
idivl
fwait
ja
xchg
divb
sbbb
ret
loope
lods
sarb
pop
mov
mov
bound
sarb
out
pop
shl
jl
test
mov
ljmp
inc
push
push
pop
sub
add
xor
add
push
mov
push
fld
pop
lret
xor
cmpsl
xchg
outsl
cs
ss
movsl
add
mov
daa
aam
add
mov
enter
push
or
pop
icebp
fst
mov
jo
lcall
pop
dec
pushf
aas
mov
adc
pop
inc
popa
pop
xchg
add
je
xchg
rcll
xchg
mov
aad
scas
rolb
test
xor
scas
cmpsl
pop
out
cltd
adc
cmp
mov
or
imul
jnp
xor
or
push
fdivr
and
xchg
loopne
add
cmc
xchg
adcb
dec
loop
or
pop
push
xor
lea
cmp
sbb
add
pop
mov
xchg
fwait
jp
jle
add
test
push
and
mov
addb
mov
movsb
js
mov
sbb
sbb
sub
lods
dec
je
dec
and
jns
int3
or
pop
stos
fs
jp
lahf
testl
jb
push
lfs
push
stos
xor
daa
add
sti
mov
popa
seta
pop
fs
aas
mov
outsl
les
mov
rorb
sub
and
ljmp
sub
out
or
push
cs
and
popf
in
xchg
pop
mov
mov
movl
xchg
pop
jne
fwait
cmpsb
lds
ffreep
adc
inc
mov
out
sub
push
cmpl
xor
loop
fs
pusha
insl
dec
push
mov
mov
sbb
or
inc
stos
mov
mov
xchg
mov
ds
loop
mov
sahf
xchg
aaa
js
into
lahf
cltd
xor
cmp
push
daa
mov
aam
cmp
pop
mov
in
lret
xchg
jnp
pop
bound
xchg
push
fwait
and
outsb
lret
sbb
ja
xor
mov
addl
call
pop
mov
rcrl
adc
jnp
pop
mov
sahf
dec
push
imul
inc
aad
and
jp
iret
dec
cmp
lock
push
mov
movsl
icebp
sub
sarb
push
lahf
cli
cmc
cltd
mov
xor
sub
movsl
adc
ljmp
sbb
repnz
inc
xchg
test
sub
mulb
adc
jl
adc
jb
dec
jnp
jmp
xchg
fwait
pop
sub
jl
in
dec
cmpsb
imul
cmp
and
pop
sbb
dec
inc
fimuls
in
pop
inc
out
icebp
xchg
xchg
jge
verw
popa
xchg
xchg
xchg
sbb
jae
mov
mov
add
cwtl
sbb
jg
sar
dec
out
popf
dec
dec
xor
push
push
pop
pop
cmp
inc
lea
aas
ss
jb
add
mov
dec
in
xor
loopne
pop
lods
adc
add
fwait
cmp
mov
repnz
pop
push
pop
leave
adc
push
jo
out
sub
lds
cli
aam
push
repz
shll
sar
mov
lret
jo
cs
push
insl
pop
ja
jns
xchg
cmpsl
cmp
fwait
fwait
shrl
mov
jbe
push
mov
je
arpl
movsb
out
pop
mov
mov
ja
sarb
sbb
decl
cmp
aad
lds
xor
push
pop
inc
mov
popf
stos
pusha
mov
je
fiaddl
lock
out
cmp
xlat
xchg
mull
push
stos
fidivl
cmp
adc
add
inc
xchg
in
add
adc
xor
mov
aas
lea
shrb
test
xchg
cmc
or
or
ret
rcrb
push
rcrl
sbb
xchg
push
and
dec
cmp
pushf
sbb
jge
cmpb
xor
sub
cmp
gs
stc
ja
cmpsl
mov
cmc
scas
out
add
sub
push
adc
and
ds
out
push
inc
pop
maxps
mov
cli
fdiv
xchg
or
sbb
idiv
pop
sbb
aam
test
xchg
rol
push
mov
pop
xchg
mov
gs
cmp
hlt
jbe
cmp
enter
mov
lock
aam
test
cmp
dec
addr16
jnp
sarl
scas
lret
lret
lods
adc
rcrb
add
inc
and
xchg
xor
mov
or
rolb
mov
and
xlat
and
iret
cmp
lahf
adc
and
sbb
or
iret
ss
fwait
sub
mov
jp
adc
and
cs
inc
outsb
pop
cmpb
pop
mov
inc
out
mov
sub
mov
pop
pusha
mov
pop
aam
jmp
push
pop
mov
dec
test
ret
lds
or
fistl
data16
das
sarb
push
cmpsl
pop
cli
stos
sahf
or
out
mov
stc
xor
test
jp
xchg
inc
mov
sbb
loopne
jnp
push
jo
icebp
pop
movsb
repz
mov
sbbl
ds
movd
jmp
lds
addr16
aas
jae
cmp
and
add
inc
push
jb
mov
mov
insb
clc
out
mov
or
jae
into
and
ja
dec
imul
inc
insl
sub
shrb
pop
or
xchg
or
lret
mov
sub
test
add
cmp
lret
fistpl
ret
xlat
fiaddl
notl
xlat
bnd
test
rcr
inc
fcomps
in
cltd
sbb
xchg
inc
movsl
rcrb
leave
and
flds
xor
movsl
ljmp
pop
addr16
xchg
icebp
sub
insl
jbe
mov
jl
std
dec
mov
pxor
sub
sti
test
add
imul
cwtl
std
mov
dec
xor
jecxz
pop
aam
sub
lock
adc
imul
ljmp
out
mov
add
sahf
imul
ljmp
xor
dec
aam
sti
movq
mov
cmp
add
jnp
lret
add
mov
call
xor
mov
out
pop
and
sub
fidivrl
outsl
inc
dec
lods
or
xchg
mov
mov
mov
dec
shrl
mov
call
mov
push
push
iret
pop
jbe
aad
pop
repnz
push
sub
adc
xchg
cmpb
add
mov
shr
outsl
inc
mov
inc
loop
int
sti
xorb
sbb
pop
loope
or
sbb
imul
dec
and
mov
push
inc
pop
mov
fldcw
ja
add
inc
sbb
mov
ljmp
in
cmp
les
hlt
lods
stc
outsb
in
push
sub
sub
fs
jb
repnz
mov
decl
ret
xor
sbb
push
xchg
jmp
xchg
ss
and
add
add
mov
test
xor
adc
rcl
jp
in
or
fldcw
add
fs
vmaxpd
scas
or
xor
daa
inc
push
inc
inc
push
les
test
dec
add
mov
fs
insb
lret
mull
push
add
aam
fs
dec
data16
push
fldt
fdivp
lret
sahf
sarb
jg
imulb
popa
mov
cmovo
andl
sbb
pop
cmp
es
mov
hlt
jo
mov
stos
rcrl
xor
mov
xor
jae
jle
pushf
aam
and
pmullw
cmp
push
adc
ds
stc
add
sub
popl
ss
mov
sub
fidivrl
jb
nop
jmp
pusha
xlat
dec
notl
cli
int
mov
inc
jne
fisubs
lret
ret
int
insl
xor
push
ja
in
mov
jne
pop
push
push
adc
pop
loopne
fwait
gs
punpcklwd
and
cmp
call
aaa
mov
lea
test
adc
les
inc
sbb
stos
push
das
inc
repz
lret
pop
stc
insb
push
test
mov
cmp
or
add
fcomip
push
mov
dec
push
mov
mov
xchg
lret
pop
inc
cltd
inc
subl
and
hlt
out
xor
sub
adc
inc
rolb
push
jo
inc
fisubrs
lods
sub
cmpsl
mov
aaa
push
cmp
cmp
mov
iret
jbe
mov
lods
out
es
in
imul
inc
sub
xlat
inc
popf
mov
mov
iret
adc
mov
xchg
clc
cmp
inc
daa
jl
lods
pop
cmp
cld
sbb
jo
inc
dec
cltd
dec
faddl
sbb
add
dec
fucomp
jl
nop
fistps
mov
push
fildl
sbb
fwait
dec
ficoml
push
fcomi
sti
xchg
in
je
push
push
aaa
ret
lret
cmpsb
mov
out
shll
jnp
adc
and
xchg
adc
jns
jns
push
jbe
pop
cli
add
push
mov
push
jbe
or
dec
stos
in
pushf
shll
push
xorps
aad
inc
ss
data16
mov
xor
out
push
push
ss
call
std
andl
orl
pushf
mov
fstpt
mov
xchg
int3
popa
test
ljmp
mov
insl
lret
mov
mov
dec
and
inc
je
stos
jg
fisubrl
test
xor
mov
adc
arpl
adc
xor
ret
and
lret
xchg
cmp
xor
nop
enter
je
roll
or
xchg
pop
xor
in
loopne
xor
jo
aam
mov
or
out
add
inc
cmc
adc
scas
cmp
xor
movsb
push
mov
mov
push
cmp
and
addw
scas
and
ficompl
movsb
loopne
xlat
pusha
movsl
pop
add
negb
and
movsb
mov
cmc
and
adc
xchg
neg
mov
jbe
sbb
lcall
idivb
pop
les
xchg
pushf
cmp
and
inc
mov
or
repnz
push
out
mov
cld
call
gs
aas
mov
movsb
stos
cmp
dec
xorb
in
cs
jno
lcall
cmp
mov
imul
mov
enter
dec
push
xchg
rol
or
and
insb
mov
jmp
cmp
leave
call
je
sbb
push
movb
gs
call
outsb
fcoml
pushf
sahf
in
ret
cmpsb
xchg
inc
rcll
cmp
mov
movsb
fisttpll
xchg
ret
movsl
pusha
lods
add
lret
ljmp
xchg
adc
jae
sub
lods
xor
adc
imul
sbb
data16
incb
fstps
pushf
pusha
stos
pop
je
dec
inc
jge
mov
icebp
movzbl
jl
dec
popa
mov
jae
dec
inc
or
fisttpll
movsl
mov
sahf
sbb
stos
sub
and
es
add
xchg
inc
roll
sbb
and
or
adc
sub
outsl
call
mov
cli
enter
sub
fsubs
scas
mov
insl
ret
mov
or
sub
clc
fsubrs
push
push
xchg
xchg
mov
dec
mov
xor
pop
cmpsl
xchg
sub
mov
popa
ljmp
test
xor
fwait
imul
mov
loopne
dec
imul
adc
lea
xor
bound
fnsave
stc
cmp
ss
fimuls
cwtl
jmp
pop
mov
jge
lds
push
mov
les
dec
inc
ss
xor
mov
xchg
add
mov
jmp
jns
add
mov
loop,pn
outsl
push
rorl
pop
xchg
and
ret
mov
fcomps
mov
insb
pop
cwtl
rorl
stos
jg
add
enter
pop
nop
aaa
push
xchg
inc
lret
out
xchg
sub
xor
jg
stos
nop
xor
sahf
lds
in
inc
orb
add
test
lock
sbbb
fnstsw
adc
leave
push
hlt
mov
aaa
mov
and
inc
js
lds
mov
popa
imul
lds
daa
movsb
test
lahf
arpl
jae
clc
push
popa
mov
cli
popa
jp
ret
pusha
pop
push
cmpb
jmp
js
fnop
idivl
fmulp
pusha
cmpl
sahf
push
out
bound
data16
aas
jnp
jbe
dec
jb
shll
push
or
stos
jns
pusha
fcmovb
lcall
push
xchg
movnti
js
or
mov
inc
ljmp
repnz
loope
or
hlt
jae
and
push
xchg
jge
mov
add
inc
lods
scas
dec
fs
jb
rolb
inc
out
push
push
mov
out
and
pop
jge
cmpl
mov
mov
dec
mov
push
data16
neg
adc
imul
jne
pop
popa
push
jae
fs
mov
jbe
in
ja
or
sub
and
in
ljmp
out
out
xor
or
imul
test
sarb
in
mov
stos
push
inc
std
cmp
push
inc
stc
pop
repnz
sbb
bound
into
mov
decl
inc
pop
mov
lret
add
mov
out
mov
sbb
pop
in
jmp
imul
and
jg
js
mov
mov
lret
mov
xor
cmp
into
xor
sbb
js
xorl
or
out
and
cmp
lret
shlb
adc
xchg
subl
out
insl
testb
in
xchg
leave
fisttpll
jl
je
jp
cmpsb
wrmsr
or
ret
mov
fwait
inc
pop
xchg
xor
pop
pop
add
int
int
dec
dec
cld
pop
sahf
dec
cmpsb
or
push
enter
and
test
sbb
adcl
mov
loop
insb
ljmp
pop
xchg
fwait
data16
push
icebp
fucomip
or
out
rcrl
cld
mov
push
popa
scas
cmc
xor
clc
out
jb
push
lret
repnz
cmp
ret
jmp
shl
outsb
cmp
mov
jne
pop
mov
xor
mov
lcall
jns
fnstsw
sti
nop
or
aad
and
aas
out
popf
mov
div
ja
mov
les
iret
in
addr16
ds
xchg
xchg
fcompl
jne
in
mov
in
adc
pushf
fimuls
jl
out
in
adc
imul
pop
adc
and
cmc
fbstp
sbb
cmpsb
xor
or
or
mov
push
lret
mov
or
mov
lahf
shl
popa
movsb
lds
sub
pop
sarl
push
cmc
xchg
pop
cmp
inc
cmp
adc
or
dec
iret
imul
stos
or
ja
dec
dec
push
adc
cmp
xchg
sbb
sub
daa
nop
movsl
push
mov
mov
push
xchg
jecxz
mov
or
push
andb
repnz
pop
inc
jae
test
inc
and
das
shrl
sub
xlat
aaa
bound
rorl
pop
inc
jns
mul
test
aas
aas
mull
cmp
jne
stos
mov
dec
mov
adc
dec
mov
pop
pusha
shlb
jb
ret
ja
sbb
xchg
or
jle
mov
sub
or
cmp
iret
jnp
sbb
outsb
sbbb
nop
inc
in
scas
nop
into
je
jle
mov
mov
cmc
mov
lret
cmp
mov
loopne
in
jle
xchg
add
int3
ja
lods
mov
cmp
add
or
mov
mov
incb
cld
arpl
sub
dec
push
add
es
bound
mov
icebp
or
push
push
cmp
cli
cmp
hlt
adc
mov
lds
les
jbe
pop
xchg
mov
dec
sub
sub
or
sahf
xor
sbb
scas
int
insl
fildl
ljmp
dec
add
mov
push
fstpt
int3
xor
leave
out
jge
xchg
inc
pop
lcall
insb
imul
xchg
dec
jg
cwtl
pusha
outsl
out
imul
xchg
push
jae
data16
jbe
leave
pop
xchg
xchg
bound
imul
push
das
add
add
std
dec
fstps
jnp
repnz
aas
aaa
dec
jbe
je
push
out
jb
bound
cmp
xchg
jb
cmp
sahf
dec
adc
arpl
stc
aam
das
loope
and
push
in
mov
outsb
ljmp
pop
jb
pop
movsl
mov
pop
bndstx
jl
imul
not
das
daa
loope
icebp
mov
push
sbb
ds
xchg
pop
sbb
cmp
lcall
xchg
mov
lea
xchg
add
jnp
lcall
leave
aaa
inc
sarl
inc
shlb
lods
jecxz
dec
cmp
outsb
dec
loop
xchg
cs
jno
sar
loop
imul
push
movsl
sarb
gs
jo
add
adc
call
out
mov
xchg
iret
movsl
test
push
jnp
xchg
adc
mov
pushw
and
inc
mov
inc
dec
ds
push
leave
xchg
jb
sub
sub
sbb
pop
mov
mov
pushf
shll
faddl
and
popa
incl
outsb
pop
push
sbb
sub
push
cltd
pop
pcmpgtw
jb
js
xchg
loope
jle
inc
push
sbb
sub
mov
pop
loope
cs
orl
je
dec
pop
sub
mov
bts
dec
mov
out
test
mov
fwait
dec
test
pop
lahf
jge
pop
mov
sbb
ja
data16
incb
dec
pop
lods
jle
pop
xchg
ss
xchg
lret
sbb
stos
pop
xlat
and
mov
roll
xchg
shll
out
sbb
push
scas
pop
jg
mov
sbb
mov
cmp
scas
stos
mov
lods
in
mov
shrl
mov
int
lods
pop
movsl
pop
fisubs
bound
ficoml
and
push
xchg
xchg
and
or
push
aaa
pop
jmp
and
mov
push
mov
push
in
or
jmp
cltd
inc
xor
test
push
mov
xorl
or
mov
aas
test
xchg
nop
fwait
rolb
out
sbb
loop
pop
jp
andl
in
je
lcall
sub
pop
cmp
lea
std
lods
out
xchg
popf
or
or
dec
popf
pop
arpl
add
pop
pop
mov
cmpsb
xor
pop
mov
pusha
add
imul
rcl
push
mov
in
sbb
xchg
xor
mov
mov
out
sub
fidivrl
into
mov
fistpll
jge
xor
jmp
mov
mov
jecxz
push
fldenv
or
rcll
jg
jmp
ss
gs
sbb
mov
cmpsb
sar
xor
xlat
xchg
pop
mov
mov
mov
and
outsb
js
adc
mov
push
cmpsb
popa
pop
adc
and
push
push
inc
pop
data16
int3
fbld
leave
jmp
xor
inc
and
jmp
insb
cmc
gs
push
xchg
aad
adc
outsl
test
das
loopne
aam
fcmovu
pop
stc
and
lods
fdivrs
js
out
cmp
scas
ret
sub
push
xchg
sarb
sub
clc
push
and
mov
orl
das
idivl
sbb
test
test
mov
shlb
stc
jmp
fnsave
pop
xor
pop
xor
repz
popa
repz
jp
xor
sub
dec
scas
pop
inc
into
cld
cmpsb
lea
push
iret
insb
xor
mov
push
mov
ret
shr
dec
sbb
jb
pop
pop
dec
bound
pushl
lods
repz
xchg
nop
sub
jl
push
jno
repz
mov
cld
insb
mov
inc
xchg
xor
adc
push
jno
adc
jno
dec
pop
adc
push
test
dec
test
jmp
add
mov
aad
xorl
dec
popa
inc
push
scas
loop
lahf
jp
inc
xchg
negb
or
call
mov
stos
cmp
jne
les
addr16
daa
cmp
fcompl
jno
lret
test
fs
mov
sub
jl
push
loopne
sbb
in
dec
les
lcall
leave
lock
in
mov
pop
imul
inc
cmp
or
jo
movsl
fnsave
ljmp
add
mov
lock
jae
cmp
mov
cmp
fs
sub
cmpb
les
in
pop
outsl
mov
and
out
out
jnp
adc
jp
sub
fdivrl
test
xchg
mov
arpl
mov
or
pop
out
add
push
pop
adc
rcrb
imul
fists
and
ljmp
jmp
cmpsb
xchg
push
sarl
gs
xchg
xchg
dec
xchg
fsts
jecxz
icebp
sub
fnstenv
push
shll
xchg
loopne
repnz
repnz
jns
adc
and
jge
mov
mov
cmpsb
imul
mov
sub
imul
or
lcall
inc
sub
adcl
jne
cmp
push
dec
int3
sbb
fmuls
xor
popa
and
push
inc
jno
std
popf
shl
lret
xchg
add
push
lock
pop
jecxz
cmc
nop
push
and
push
loop
or
daa
pop
or
cld
lret
pop
push
and
jmp
add
pop
leave
ficoml
sub
repnz
into
and
add
lret
push
test
dec
sbb
lcall
sahf
int3
lret
cmpsb
aad
fildl
je
jns
lret
jmp
rorl
arpl
cs
cmpsb
mov
test
out
mov
mov
sti
xor
adc
add
mov
sbb
sahf
adc
test
sub
in
push
idivb
ljmp
test
xor
rolb
gs
daa
or
inc
das
cmp
mov
out
ret
pop
push
xchg
jp
imul
xor
je
clc
and
jge
sub
xor
or
cmp
push
stc
mov
jmp
loopne
xchg
mov
sub
ret
popa
inc
cmp
xor
adc
enter
push
xor
mov
lcall
js
push
aad
aam
cld
mov
out
mov
or
stos
mov
rorl
out
gs
or
mov
repz
dec
sbb
mov
sub
mov
and
repz
xchg
mov
jge
movsb
lcall
pop
pop
lcall
xlat
jno
jmp
sti
jl
ror
negl
sbb
lock
xorl
int
in
sarb
xor
push
cmp
xor
cld
push
xor
out
mov
adc
or
or
rcrl
and
jmp
stc
ja
out
dec
dec
insb
rolb
jmp
add
shll
mov
sub
shll
fisubrl
cmp
fdivl
in
jle
add
push
xchg
mov
stos
xchg
push
rol
lret
add
cmp
jl
sub
stc
adc
pop
and
bound
jbe
shrl
mov
push
sub
in
push
xchg
js
jne
mov
je
popa
cs
frstor
rcll
mov
push
bound
mov
mov
fimull
incl
lcall
outsl
fsubl
loope
fisttps
bound
inc
jne
out
aam
mov
or
adc
mov
jl
loop
shlb
lock
out
frstor
jb
and
mov
xchg
negb
push
arpl
xor
mov
lock
xchg
and
imul
push
mov
imul
jb
lahf
pop
jne
out
ljmp
mov
add
nop
jb
jno
mov
jbe
loop
dec
mov
sub
pop
xor
not
mov
cmpsl
inc
nop
inc
jmp
and
jnp
mov
and
ljmp
xchg
push
lds
or
jp
ficoml
decb
enter
outsb
iret
dec
jae
add
push
jne
ljmp
lahf
scas
add
roll
scas
xor
jge
mov
jno
adc
ret
call
pushf
fcmove
xor
mov
and
sbb
gs
test
xchg
jl
notl
cli
shl
dec
dec
and
push
inc
std
imul
jl
test
cmp
outsb
adc
mov
jo
scas
adc
sbb
pop
xchg
test
loopne
mov
sbb
sbb
fistpl
xor
mov
jg
and
xchg
and
mov
hlt
out
mov
fildll
rorl
xor
add
in
popf
pop
xor
xor
mov
pop
ret
lret
cmp
cltd
or
sub
rcr
jp
jbe
clc
adc
js
mov
cmp
psrlq
pop
dec
mov
dec
mov
hlt
andl
subl
repz
lret
fnstsw
sub
pop
imul
cmp
xlat
insl
mov
jae
jo
and
sub
xorb
mov
mov
sbbb
inc
icebp
movsl
mov
in
inc
cmp
sbb
in
push
pop
push
fwait
pushf
sub
pop
in
xor
out
fcoml
add
sub
mov
pop
subl
in
jns
movsl
inc
out
push
cmp
in
and
dec
pop
test
lret
nop
or
inc
cli
xor
inc
mov
out
scas
add
in
cmp
lret
jge
addr16
cmp
ret
add
aad
mov
lcall
fprem
aas
or
rcrb
mov
in
adc
stos
mov
and
out
fxch
cmp
mov
dec
cmp
into
stos
or
stos
mov
ljmp
mov
and
xchg
add
fucomip
jle
int
mov
inc
and
push
or
inc
cld
cmpsl
pusha
andb
or
add
stos
push
hlt
mov
mov
test
sbb
imul
mov
fmul
push
mov
test
cmpsb
cli
dec
insl
xchg
sbb
mov
lret
jl
insb
movsl
and
cmp
adc
lods
call
mov
cmp
mov
cmp
adcb
mov
and
arpl
test
loope
mov
mov
movsb
or
cmpsb
push
ljmp
inc
ret
jl
sbb
sbb
push
cmpsb
int
xchg
icebp
nop
fsts
ret
stos
xor
mov
stos
scas
push
sbb
mov
xchg
popf
mov
inc
or
imul
rcrl
cs
sbb
lahf
scas
inc
bound
or
sar
lret
xchg
arpl
arpl
xchg
loope
mov
sbb
inc
or
jo
pop
push
cmp
mov
lods
nop
int
into
push
sbb
stos
icebp
lret
mov
nop
sbb
hlt
inc
fidivs
sahf
xor
gs
mov
inc
test
pop
xchg
imul
jbe
lds
mov
xor
addb
xor
xor
pop
cmp
mov
pop
inc
cwtl
out
mov
imul
sbb
stos
mov
jbe
addr16
dec
loop
lret
outsl
repnz
and
sahf
cmpsb
loope
sahf
movsb
mov
mov
jnp
jnp
cmpsl
mov
cmp
dec
cmp
fisttps
pop
adc
pushf
sti
fildll
cmc
mov
int3
inc
neg
lahf
inc
mov
stc
fisttpll
pop
xor
push
jge
insl
mov
inc
xor
fadds
xchg
dec
mov
arpl
jecxz
fdivrs
into
dec
xchg
add
cmc
sub
int
cmpl
popf
sub
mov
popa
iret
cltd
stos
push
push
xchg
and
out
out
mov
mov
push
pop
out
lahf
repz
mov
in
sub
adc
ljmp
add
js
mov
test
inc
mov
insl
repz
xor
mov
mov
es
scas
cli
aad
mov
test
je
ret
mov
sbb
sbb
adc
adc
into
mov
in
and
xchg
mov
sbb
and
xlat
adc
aad
add
xor
mov
xchg
or
jo
xor
sbb
jb
mov
push
shrb
xor
fisubrl
ror
sbb
int3
scas
jne
subb
sbb
rcl
insb
rclb
ret
sub
sub
jno
mov
adc
movsl
int3
hlt
fisttpll
push
mov
adc
jecxz
std
sub
inc
popa
mov
jbe
leave
ss
mov
jle
dec
sbb
fsubrs
aam
movb
inc
insl
xor
ret
cwtl
insl
pop
jp
into
push
lret
stc
sbb
jno
push
bound
push
fdivr
out
add
mov
and
outsb
xchg
mov
mov
pop
adc
and
bnd
push
mov
in
loopne,pt
ja
and
das
or
aad
push
in
xor
sub
dec
inc
pop
dec
movsl
lahf
out
xchg
sub
jp
arpl
push
imul
pop
push
mov
mov
test
pop
inc
int
jno
mov
sub
jnp
or
push
cmpsl
or
mov
sub
cltd
inc
sbb
fsts
daa
les
imul
jp
cmp
loope
push
push
jmp
scas
dec
fidivl
int
add
scas
cmp
lds
xchg
sbb
xchg
add
out
sbb
mov
adc
fadd
jnp
divb
js
dec
call
insl
sbb
stc
sbb
xor
std
ljmp
pop
cmp
mov
mov
sub
push
jecxz
xlat
add
pop
std
sbb
jg
mov
cmpsb
lret
add
cltd
mov
imul
mov
mov
pop
fdivs
sub
sbb
fs
sbb
jno
mov
leave
call
cmovs
out
stos
or
add
mov
or
cmp
fmul
mov
sahf
cltd
sub
cmp
adc
fimull
bound
jbe
or
add
notl
pop
sarl
push
xor
xor
mov
mov
xor
cmp
push
and
inc
mov
fidivs
out
xlat
dec
sti
hlt
xor
sbb
sahf
in
push
cmpsb
inc
mov
xchg
sub
cmpl
movsb
fdiv
add
add
mov
das
pop
inc
or
mov
fisttpl
dec
je
mov
push
les
rol
mov
stos
mov
test
dec
fldenv
pop
sub
push
cmpb
pop
adc
xlat
in
mov
jmp
loope
mov
xlat
and
cmpl
cmc
sub
mov
cmpsb
scas
test
push
mov
dec
cmc
loop
andl
add
jns
cmp
inc
push
lret
loopne
daa
jb
loopne
loope
fs
pop
inc
mov
rcll
push
jecxz
jbe
inc
enter
lcall
sbb
mov
mov
adc
mov
lret
nop
push
mov
xlat
adc
leave
and
mov
and
cmp
sbb
outsl
xchg
pop
inc
jne
data16
mov
jnp
icebp
and
xlat
dec
cmp
cmpsb
xchg
test
inc
sti
push
fisubl
dec
dec
cwtl
mov
js
add
jp
decb
inc
pop
cmp
stos
add
adc
into
pop
push
cmp
mov
mov
daa
mov
fcoml
xchg
mov
popa
mov
ss
pusha
push
xchg
aad
mov
sub
hlt
add
outsl
in
xlat
pop
sbbl
sbb
jb
lahf
fisttps
mov
pop
lods
adc
scas
rolb
int3
test
pop
lahf
mov
arpl
mov
or
jecxz
repnz
mov
fists
insl
repz
xchg
mov
sbb
dec
mov
pusha
sub
xchg
bound
pushf
addb
cmc
idivl
lds
jg
repz
pop
popa
scas
pop
xor
test
subb
fnsave
inc
pusha
jae
add
add
mov
xchg
ja
jl
out
sub
or
insl
or
cmp
sub
and
dec
cli
aad
jnp
addr16
arpl
jne
mov
in
lods
or
xorb
outsl
fisubrl
xchg
lods
rcr
mov
adc
cld
jne
sti
andb
fistps
mov
into
dec
sarb
inc
fs
mov
insb
cmp
dec
test
cmp
ss
jne
cs
xchg
flds
stos
pop
call
adc
or
rcrb
sbb
push
mov
mov
and
test
add
scas
jge
xor
test
inc
stos
pop
std
test
pop
mov
lret
rcrb
add
jl
sbb
inc
mov
cmp
loope
xlat
ljmp
das
jecxz
xor
jne
sbb
je
fistps
insb
test
ljmp
cld
mov
fcompl
mov
xchg
xor
jo
fcoml
jo
mov
in
mov
jmp
aaa
jb
inc
lods
dec
cmp
xchg
imul
cwtl
jno
stos
jecxz
ss
jnp
mov
cmpsw
loope
dec
sar
mov
ret
add
test
sbbl
ja
push
or
out
mov
sub
cmc
mov
jl
inc
and
int
pop
nop
outsl
push
arpl
mov
xchg
dec
or
dec
pop
push
xlat
add
push
arpl
mov
push
sbb
or
push
xchg
rcrb
mov
aas
adc
std
pusha
fiaddl
and
mov
outsl
mov
or
add
loopne
jo
add
cmp
fiaddl
or
xor
lret
push
jns
or
xor
mov
pop
xchg
lea
jp
xchg
push
fists
push
xor
out
ret
aad
mov
pop
pop
js
jg
mov
out
sarl
in
addb
pop
dec
mov
sarl
pop
push
lret
fildl
rorb
mov
test
into
inc
xchg
mov
int
pop
xchg
and
pop
mov
xchg
test
repnz
add
push
loope
lret
and
inc
ret
shll
dec
outsb
pop
or
pushf
sbb
push
addb
xchg
popa
pop
jp
insb
fildll
shlb
jecxz
xor
sub
mov
sbbl
push
fisubrl
sub
fcoms
ret
sahf
int
lods
pusha
cmp
push
inc
or
insl
cmp
xchg
loopne
in
enter
aad
ds
out
cmpsl
fcmovnu
fsub
push
les
negl
jnp
test
push
mov
pop
push
xchg
mov
inc
movsb
sub
xchg
mov
xor
in
dec
sbb
jp
mov
outsb
xor
insl
xchg
xchg
mov
out
fidivl
gs
push
jne
xor
lods
mov
adc
xor
mov
clc
aad
add
insb
les
mov
and
cmp
insb
cld
jg
or
and
dec
or
lret
adc
enter
push
das
push
push
enter
pusha
cmp
lea
adcl
fdivr
inc
or
adcb
ds
mov
push
adc
inc
popf
lahf
orb
mov
inc
fdivrp
icebp
push
dec
lahf
das
sub
mov
int
or
call
clc
sahf
add
sti
mov
int3
enter
dec
pop
pusha
adc
int3
mov
jo
fwait
mov
mov
sbb
sbb
push
daa
mov
test
xor
xchg
add
jb
sub
loope
jmp
or
and
sarl
xchg
jle
sbb
rcrl
sbb
pop
push
xor
adc
mov
push
lods
nop
stc
jg
mov
dec
sarl
aas
xchg
sar
or
aam
pushf
jle
in
imul
enter
add
adc
mov
xor
mov
pop
pop
jle
outsl
dec
cmp
ret
add
pop
cmpsl
clc
lods
notl
int3
rcl
push
sub
dec
orb
mov
imul
mov
mov
out
cltd
out
xor
push
mov
push
movsb
xchg
jp
sbb
inc
adc
mov
add
adc
lods
roll
mov
or
test
inc
xlat
sub
imull
push
pop
aad
lcall
push
pop
push
pushf
shll
lahf
xchg
pop
xchg
jge
cmp
add
pop
hlt
dec
insb
sbb
ficomps
mov
inc
lods
and
lods
dec
les
xchg
out
roll
jbe
icebp
sub
arpl
sbb
fisubl
inc
dec
xchg
mov
inc
mov
sub
xchg
xchg
gs
movl
xor
imul
mov
repnz
mov
ret
sub
mov
jb
pop
sarl
dec
sub
stos
nop
mov
adc
out
xchg
lods
sub
sub
xchg
pop
out
mov
xchg
je
push
sbb
mov
fcompl
ds
xor
outsb
lahf
inc
shrl
sub
jecxz
sbb
out
int
or
movb
mov
push
lret
cmp
sarl
jb
pop
push
cmp
dec
gs
pop
sbb
pushl
es
aaa
pop
lock
fidivrs
aam
xor
loope
popf
push
or
divb
sti
jb
inc
and
xchg
cmp
sbb
sub
pop
sbb
ljmp
jmp
ffree
out
andb
pop
iret
shrl
push
cli
fucom
test
mov
adc
int
mov
pop
jae
mov
push
sbb
jmp
cmp
jecxz
pop
add
cli
add
out
or
lods
mov
lahf
or
cwtl
pop
nop
mov
fisttpl
into
hlt
mov
mov
lds
xor
xchg
cmp
sub
jno
out
test
and
fidivs
jmp
out
xlat
xor
in
jnp
or
pop
xor
adcl
fildll
cmc
xchg
xor
jo
cmp
jl
loop
dec
mov
shll
push
fmuls
jmp
mov
push
dec
xor
gs
adc
and
or
rcll
push
fs
jmp
inc
dec
sbb
mov
ljmp
in
xchg
fisubs
dec
cwtl
xor
and
pop
fstpt
sbb
push
mov
daa
inc
pop
repz
inc
and
cmpsl
mov
sbb
pop
pop
dec
mov
inc
scas
sti
mov
or
push
cltd
ret
test
shrl
inc
push
dec
mov
outsb
mov
test
loopne
ljmp
in
or
pop
mov
fstpl
cmp
sbb
inc
insl
inc
ds
repz
out
inc
push
lahf
bound
add
sub
scas
cmp
or
leave
rcll
mov
mov
and
dec
ror
ja
cmp
xor
xchg
lock
mov
dec
push
repz
lds
test
jp
outsl
mov
fisttpl
fisubrs
std
shrb
jae
add
insb
mov
out
dec
mov
hlt
cmp
daa
mov
sub
sbb
mov
xchg
mov
xchg
push
fwait
rcrb
mov
jecxz
popa
icebp
in
push
inc
pusha
or
or
inc
inc
xchg
pop
xlat
in
popa
dec
push
mov
xor
or
jne
ljmp
mov
lahf
ss
imulb
push
sub
jno
xchg
mov
pop
dec
mov
cmp
pushf
popf
xorb
sub
mov
adc
inc
inc
es
rep
divb
sub
stc
fnstcw
adcb
icebp
mov
xor
aam
push
jnp
mov
push
lods
aad
cwtl
xchg
sub
icebp
xchg
cmp
xchg
mov
dec
loope
xor
gs
outsb
mov
lahf
mov
xchg
pop
je
int3
mov
roll
cmp
dec
std
call
add
sbb
movsl
pop
movsl
pop
scas
push
mov
aas
clc
enter
pushf
mov
lcall
insb
out
or
hlt
cwtl
addr16
lret
out
mov
pop
jmp
inc
mov
and
pop
jo
mov
jb
fldt
push
fwait
jge
adc
cmp
mov
repz
cmp
jae
fcmovbe
and
mov
shlb
pop
cmc
cmc
outsl
out
xchg
adc
in
les
lods
ss
cmp
movsb
cwtl
sub
pop
mov
mov
pop
popa
pop
imul
mov
cmp
mov
pop
loope
or
std
lods
mov
lea
sti
mov
fcoml
in
add
inc
sub
or
dec
shll
inc
insl
jae
in
pusha
mov
xlat
repz
mov
add
jno
cli
cmpsl
mov
push
sbb
or
dec
mov
jecxz
add
gs
cmp
push
mov
out
pop
dec
pop
loopne
mov
outsl
xor
and
mov
out
ret
cmp
lock
in
gs
ds
xor
mov
xchg
and
cmp
lds
or
cmp
movl
pop
mov
adc
jnp
dec
push
mov
jb
mov
imul
stos
adc
pop
push
mov
adc
lcall
mov
push
pushl
jno
cs
dec
and
in
mov
test
daa
es
pushf
loop
jbe
fnsave
sub
mov
mov
cmpl
imul
mov
add
or
cmp
mov
cmp
mov
out
xchg
les
pop
inc
or
or
out
xchg
int3
loope
xlat
dec
mov
out
mov
cwtl
jecxz
push
insb
jle
int
clc
insl
sbb
mov
aaa
addb
jno
in
rol
loope
in
inc
xchg
push
lcall
cmp
sbb
mov
xchg
ds
test
cmp
imul
push
std
in
push
cld
push
addl
into
les
shrl
push
cmpsb
insb
es
mov
xchg
aam
mov
out
inc
aam
and
jecxz
pop
fcoml
cmpsb
fsts
insl
push
movl
xlat
shl
insl
jle
inc
lcall
clc
hlt
mov
iret
cmp
add
jb
add
scas
or
fwait
lret
cltd
xchg
add
mov
mov
shrl
movsl
in
daa
ja
push
pop
sahf
movsb
jle
in
aam
fxch
inc
sub
ficompl
cltd
mov
rcll
daa
pop
iret
sbb
int
enter
pop
jl
xorl
pop
dec
and
lahf
jle
jge
scas
mov
push
mov
enter
adc
in
pop
xchg
repz
push
rorl
insl
cmp
push
test
aas
cwtl
pop
xchg
mov
inc
out
mov
fmuls
popl
and
xchg
xchg
adc
push
xchg
mov
or
cmp
lock
insb
lahf
jmp
repz
inc
xchg
dec
pop
sub
adc
inc
pop
pusha
rorb
jl
out
adc
cmp
outsb
stos
xchg
jmp
imulb
loope
pushf
pop
jmp
ret
inc
push
xlat
dec
mov
rcr
rorb
out
fcoms
mov
push
inc
std
lcall
bound
pop
jecxz
adc
imul
mov
lcall
loopne
nop
push
mov
daa
and
iret
cmp
aas
lret
lods
mov
es
shll
ss
aad
cld
jecxz
sbb
andl
sub
das
les
push
loope
aaa
push
push
add
frstor
mov
lods
and
cld
lock
jle
inc
adc
pop
pop
cwtl
cs
iret
loopne
insb
arpl
mov
or
jecxz
ds
sbb
adc
sbb
jae
pop
loop
mov
push
addr16
xchg
loop
out
and
xchg
add
mov
clc
jl
dec
add
clc
fadds
inc
jno
sub
sti
scas
xor
sub
rcrb
loop
mov
imul
pop
aas
rcl
in
pop
adc
jmp
mov
pop
push
dec
mov
enter
popf
mov
js
inc
mov
jne
cmpsl
mov
pushf
push
popf
clc
arpl
fnstsw
pop
stos
bound
push
dec
imul
les
int
cmovnp
outsb
and
jns
sbb
mov
daa
fsubl
sahf
sub
xchg
fidivrs
test
ret
cmpsb
push
rol
jns
outsb
pop
pop
dec
lods
in
mov
add
xchg
xlat
test
push
mov
add
ficoml
je
xchg
adc
jp
dec
cmpsb
sub
sbb
dec
js
std
xchg
cld
mov
enter
fsubs
jmp
dec
jbe
std
xor
fwait
adc
push
std
push
lcall
add
ficomps
in
hlt
adc
loopne
inc
push
fwait
xchg
call
jl
outsb
ret
add
xchg
dec
mov
sarb
nop
pop
in
and
iret
int
xchg
test
mov
hlt
xchg
repz
int3
lock
dec
repnz
dec
lahf
in
cld
mov
cmc
adc
jbe
pop
das
out
mov
lea
sahf
cmpsb
dec
jmp
pushf
test
xor
das
lret
imul
mov
insl
and
into
pushf
dec
mov
lods
push
loop
jne
js
push
ljmp
test
inc
adc
sti
in
mov
xchg
sub
mov
ja
sub
mov
gs
mov
bound
std
adcb
ja
fwait
idivl
inc
xor
pop
push
mov
aaa
aam
push
js
adc
mov
mov
mov
add
insb
mov
popa
xchg
xor
in
dec
xchg
mov
vmovss
addr16
pop
pop
pushf
mov
jo
lahf
roll
adc
cld
dec
cmp
fs
pop
mov
dec
sbb
ficompl
xchg
daa
inc
push
jle
add
popf
popa
jge
inc
dec
mov
pop
add
mov
call
dec
orl
cld
imul
mov
lret
or
sbb
ss
and
sub
xchg
lahf
adc
imull
push
or
js
jns
push
add
jns
push
mov
sub
outsl
repz
mov
add
scas
lret
mov
ljmp
sub
out
imul
inc
xor
push
cmpl
add
loop
dec
test
flds
mov
dec
push
lods
xchg
and
pop
fsubl
rolb
jecxz
push
cmp
sub
sbb
in
jle
add
repnz
ss
mov
xor
xchg
cld
test
int3
shlb
dec
psrlw
nop
cmp
insb
ds
lock
mov
sub
mov
sub
push
jo
test
jmp
xor
jae
scas
mov
sbb
mov
lods
xor
add
aam
movsb
je
cmpsl
jbe
mov
subl
jmp
pop
pop
cmp
js
rcr
lock
xchg
mov
imul
sub
mov
loopne
sbb
sub
in
vmovhps
mov
stc
jg
in
push
inc
hlt
mov
push
ja
neg
and
scas
popa
outsb
mov
or
cmp
mov
inc
mov
iret
inc
xchg
xchg
lock
jmp
rorb
ds
add
mov
data16
jecxz
aas
jp
clc
or
outsb
fisttps
xor
movsb
movsb
cmp
out
in
test
mov
loopne
xchg
test
adc
arpl
xchg
cmp
test
xorb
testl
pop
jnp
mov
jg
call
sarb
dec
out
sub
push
cltd
scas
mov
scas
iret
bound
cmp
jo
loopne
xchg
ficomps
pop
int
aad
dec
inc
int3
or
pop
mov
data16
or
or
fsubrp
mov
stos
mov
sub
xlat
shr
rcr
sbb
mov
pop
pop
cmp
pop
xor
mov
ja
stos
push
mov
fs
pop
mov
or
dec
leave
jle
lcall
lods
push
inc
int
ja
mov
dec
pop
jg
mov
mov
push
sbb
imul
xor
in
and
fmull
outsb
mov
lret
in
cmp
adc
addr16
fidivrs
mov
adcb
and
or
fsub
fs
fucomp
out
in
mov
or
push
xor
cmp
mov
out
fcmovnb
loope,pt
pop
outsl
ret
lret
mov
data16
cwtl
mov
mov
scas
mov
std
push
push
inc
push
push
inc
in
jp
fbld
sbb
pop
es
vrsqrtps
dec
mov
imul
mov
arpl
leave
xchg
pusha
mov
decl
ss
push
movsl
push
cltd
mov
mov
xor
pusha
test
add
pop
xor
int3
push
mov
arpl
sub
mov
jns
jp
or
and
fldpi
pop
cli
jecxz
mov
pushf
mov
fnstenv
dec
lea
mov
xchg
xchg
std
lea
cmp
adcb
shr
mov
sarl
mov
cs
ja
mov
sub
sbb
or
cmc
mov
fs
mov
cs
pop
mov
test
xchg
xchg
xchg
je
lods
jo
jo
mov
dec
mov
fisttpll
nop
dec
in
sbb
stc
je
out
cltd
push
adc
jno
cld
push
cmp
stos
fcmovnu
inc
dec
out
inc
not
shl
mov
adc
mov
scas
sbb
mov
rcrb
fwait
xor
dec
js
int3
mov
in
pop
and
dec
mov
in
ljmp
inc
dec
jb
add
adc
popa
mov
xor
xor
mov
cmp
adc
sub
push
cmp
mov
clc
lcall
jge
mov
jo
pop
dec
das
push
in
loop
test
jp
out
mov
mov
int
or
adc
enter
mov
xor
stc
xchg
cmp
and
outsl
mov
ret
mov
ret
inc
mov
push
mov
xor
mov
xlat
lea
ljmp
stos
rolb
shl
pop
popf
push
jp
icebp
fsubp
subl
aam
int
fisubrl
add
pop
fidivl
je
dec
xchg
inc
push
in
aaa
sbb
fiaddl
std
pop
cmp
test
inc
ret
push
push
rcr
adc
idivl
fsts
div
push
movsb
fwait
jae
std
daa
inc
fucomp
lds
push
sbb
jle
ret
inc
and
and
or
daa
stos
jle
jecxz
outsb
nop
adc
ja
xchg
mov
iret
sbb
dec
sbb
nop
mov
dec
icebp
mov
loope
pop
scas
adc
mov
cmp
push
out
jns
insb
fistl
cli
pop
es
dec
and
xor
dec
dec
sub
adc
add
mov
rorb
cmpsl
fdivrs
imul
adc
and
mov
insl
je
adc
imul
pop
jno
mov
push
lret
jg
inc
sub
dec
jge
jle
cmc
mov
imul
shll
scas
mov
cmp
jo
push
mov
mov
clc
push
fldl
clc
cwtl
sub
lods
outsl
in
mov
pop
pop
fwait
jae
fisubrl
divl
jns
fadds
cmp
cmp
lods
imul
push
push
hlt
or
lock
or
in
or
rclb
push
cmp
mov
stos
js
xchg
mov
pop
jecxz
push
mov
inc
mov
mov
mov
mov
mov
mov
icebp
inc
popf
dec
mov
sbb
imul
stc
lret
movsb
out
sub
leave
pop
loopne
mov
jnp
stos
jns
fimull
lods
xor
push
outsb
add
inc
loope
xchg
mov
xchg
push
ss
mov
xor
int3
push
push
out
test
mov
sti
scas
jnp
hlt
ljmp
xor
mov
or
inc
xchg
jge
sbb
pop
push
in
jl
cmp
stc
mov
and
sub
stc
into
mov
out
pushf
and
jecxz
jge
sahf
xchg
mov
ds
xor
aaa
and
adc
pop
das
rclb
subb
mov
xchg
add
dec
test
dec
sahf
aam
mov
mov
ljmp
push
and
adc
lret
arpl
cvtdq2ps
pop
mov
xor
cmpsl
icebp
mov
sub
push
hlt
cmp
insl
lds
mov
ljmp
ret
loopne
dec
cmp
pushf
test
inc
inc
sbb
mov
xor
mov
pop
dec
iret
fsubs
and
test
or
inc
int
jae
add
out
pop
shll
pop
cmp
pop
mov
mov
mov
lds
cmp
sub
xchg
repnz
idivb
add
xor
rolb
jmp
and
mov
inc
repnz
mov
iret
iret
lea
mov
sahf
in
lret
pop
adc
sti
mov
das
add
loopne
jno
adc
cmp
mov
jle
dec
dec
jns
cmc
jb
enter
lret
xchg
and
int
ret
cmpb
sbb
loope
push
out
sub
dec
ret
xor
out
popf
pop
adc
jg
clc
cld
das
imul
popa
scas
sbb
lahf
mov
adc
lret
negl
push
xor
inc
arpl
pop
xor
or
movsl
mov
push
ds
dec
das
roll
clc
addr16
add
shlb
out
push
fwait
cmpsb
mov
in
shrl
push
push
repz
or
mov
aad
mov
es
cmp
xchg
push
sbb
or
inc
mov
cmp
push
push
movsl
sbbl
cmpsl
pop
xchg
popf
aam
outsb
or
push
scas
fcmove
cmc
loopne
add
push
mov
lods
js
lods
repz
mov
mov
push
mov
repz
ret
or
insl
out
popf
test
or
xchg
sub
into
outsl
xor
fdiv
dec
xlat
leave
fildl
jl
insl
jmp
fwait
mov
lcall
bnd
jno
movl
pop
inc
jle
mov
insb
jge
int3
jnp
inc
push
stos
repnz
mov
iret
pop
and
in
mov
outsb
enter
xchg
clc
int
inc
cwtl
repz
add
enter
sub
jo
fisubrs
sbbl
add
das
pop
xchg
dec
or
psubusw
pop
lods
push
mul
inc
arpl
fmull
iret
jo
pusha
dec
dec
test
xchg
push
fmuls
xor
mov
adc
cmp
cltd
sbb
ja
jae
scas
jbe
dec
jo
call
mov
add
dec
andps
pop
addr16
sbbb
lods
in
fists
lret
mov
push
call
adc
jecxz
mov
dec
les
stos
push
mov
cwtl
fcmovnu
in
mov
xor
or
sbb
mov
jg
lock
cmp
xor
hlt
jb
cld
into
and
pop
mov
addl
xchg
lret
popa
movsb
xlat
inc
shll
xchg
sar
push
fcomp
pop
pushf
lahf
rorb
xchg
xor
push
lahf
cmp
mov
lcall
shl
mov
and
mov
cmpsl
sub
cmp
pop
xor
jnp
jmp
push
test
push
scas
inc
push
das
or
fists
test
ds
jmp
inc
daa
sbb
cmp
pushf
jno
sbb
push
and
mov
dec
xor
mov
mov
mov
fmull
pop
xchg
ljmp
arpl
out
sbb
mov
lock
call
add
pop
cmp
mov
rcll
iret
mov
cmovg
sarb
mov
inc
xor
hlt
loop
dec
fcoms
insl
cwtl
fistpll
fwait
insb
lret
fidivrl
or
inc
es
pop
cmp
mov
fldenv
mov
jae
inc
mov
fildl
lock
jmp
scas
clc
mov
fisttpll
mov
mov
xchg
cli
insb
push
and
mov
inc
vpaddb
movsl
shrb
jns
xchg
fsubr
rolb
and
inc
push
xor
push
ret
mov
mov
mov
dec
jbe
add
call
mov
pop
es
test
sahf
ds
ja
movsl
aam
or
or
lods
das
test
mov
mov
cwtl
loop
mov
add
push
sbb
ret
and
repz
ret
xchg
scas
jge
mov
lahf
mov
hlt
aaa
movsb
rcll
xchg
insl
inc
or
std
jl
push
push
adc
dec
and
add
pop
push
push
ja
inc
es
jecxz
adc
sbb
stc
sbb
jno
xor
out
mov
shll
hlt
mov
push
dec
and
pop
jae
inc
jmp
add
mov
fdivrs
mov
out
inc
gs
icebp
jl
fiaddl
iret
cld
jge
pop
xor
mov
jge
dec
mov
dec
xchg
scas
andb
xor
push
mov
xor
adc
dec
es
push
gs
pop
nop
cmp
xchg
lock
push
in
dec
add
jne
decb
clc
icebp
std
sub
jl
loop
test
sub
xor
push
popf
std
pop
jecxz
loopne
push
bound
insb
push
jg
scas
cmp
cmp
inc
mov
sub
imul
dec
mov
repz
std
mov
jmp
mov
lret
dec
cltd
push
pusha
xchg
out
int
xchg
adc
sub
imul
push
cmp
adc
stc
faddl
aam
mov
loope
mov
cmc
inc
addr16
leave
add
push
sub
pop
pop
and
inc
add
mov
loope
mov
loope
int3
adc
lret
push
or
xchg
mov
call
or
out
popf
pop
mov
in
cmpsl
and
xor
ret
outsb
push
mov
fnstcw
and
jne
gs
inc
in
xor
mov
push
ljmp
mov
sub
aas
notl
notl
mov
fdivr
movsl
data16
xchg
mov
add
push
jae
out
in
sbbl
cs
sbb
or
je
cmp
aam
lcall
cli
lret
lock
xor
mov
jg
and
das
mov
mov
jno
push
ss
jne
or
xor
xor
fwait
dec
cmp
aaa
js
pop
sub
inc
nop
imul
jp
sub
or
mov
mov
pop
aaa
xor
adc
fnsave
pop
test
add
shrl
jg
and
sbb
test
aam
shr
inc
gs
mov
jo
fmuls
scas
jge
shrb
leave
les
mov
jo
cs
lea
fwait
pop
out
popf
sti
jae
dec
pop
dec
xchg
push
jne
inc
stc
xor
daa
in
and
fwait
roll
inc
sti
mov
repz
stos
push
les
scas
xor
notl
push
fnstsw
aas
test
je
testl
lock
pusha
mov
add
test
daa
push
lahf
push
movsl
ret
pinsrw
cmp
or
push
sbb
imul
sub
pop
lahf
scas
add
add
or
mov
in
and
sbb
outsl
fistpl
fbld
jmp
jmp
mov
push
gs
add
lds
cmp
pop
imul
test
scas
push
mov
mov
jnp,pt
sbb
cli
pop
mov
icebp
add
xchg
idivb
sub
inc
ljmp
in
inc
cwtl
xchg
mov
in
test
and
or
sbb
adc
sbb
ret
rorb
sub
and
lea
in
repnz
and
in
xchg
cmp
repz
flds
dec
cmpsb
rcrb
mov
add
mov
movsb
addr16
addr16
scas
push
mov
lret
ret
ja
leave
hlt
fucompp
pushf
pop
sahf
shl
in
mov
sub
loope
push
dec
jo
mov
into
out
outsl
add
mov
aaa
cwtl
dec
dec
xor
adc
mov
scas
repz
jmp
pop
dec
sbb
pop
testb
xchg
and
and
mov
xor
data16
addl
lea
mov
jle
lcall
cld
popf
push
jmp
jecxz
bnd
xchg
stos
cmp
add
fsubs
sarl
and
push
pushf
lahf
mov
jl
push
jp
shll
xchg
push
sub
or
daa
add
ror
jmp
inc
cmp
xor
jle
or
std
push
stos
unpckhps
sarl
outsb
jne
es
aam
inc
jg
cli
cmp
dec
imul
pop
subb
icebp
xor
mov
shrl
int
movsb
mov
into
xor
jae
movsl
dec
imul
popl
sbb
xor
cltd
push
out
loope
push
outsl
mov
jnp
loopne
push
sbb
imul
pop
jmp
das
push
xor
add
rorb
cmpsb
adc
pop
mov
mov
imul
fisttpl
sbb
pop
int3
test
xchg
pop
call
or
jmp
xchg
sub
inc
inc
ja
test
sbb
inc
cmpsb
mov
stos
mov
sbb
mov
stos
in
maskmovq
divl
sub
lret
xchg
popf
adc
or
mov
xor
es
sbb
scas
scas
xor
out
mov
rclb
pop
fisubs
mov
adc
repz
inc
push
sbb
imul
pop
loope
sbb
jb
adc
lret
in
loopne
or
xchg
jg
dec
imul
add
movsl
cmc
arpl
xor
daa
iret
mov
scas
lret
loopne
into
loop
inc
dec
sub
sti
or
push
out
in
sub
lea
add
dec
sbb
mov
in
and
fnstcw
sub
push
call
push
out
test
ret
inc
add
enter
sub
sbb
mov
mov
mov
jle
lods
daa
xchg
add
ret
push
cld
add
sahf
push
outsl
std
push
push
movb
shlb
lahf
xor
and
sub
jg
gs
jle
leave
mov
fs
pop
mov
sar
sysret
imul
int
sub
and
ret
btrl
sub
inc
adc
inc
mov
leave
enter
sbb
popf
adc
and
roll
shl
add
clc
or
sub
pop
pop
mov
imul
sbb
adc
mov
dec
mov
adc
das
cmp
lods
dec
jmp
xor
cmpsl
loopne
hlt
cmp
mov
fistl
xchg
xchg
shlb
dec
shll
clc
sbb
clc
cmpsb
inc
mov
in
jae
jae
loope
fcompl
mov
inc
push
mov
pop
push
pop
out
loop
mov
fwait
pop
push
or
das
mov
hlt
ret
dec
int3
mov
js
int3
push
int
jb
das
or
and
mov
jg
jecxz
push
iret
movsb
ficomps
mov
inc
and
pop
mov
add
rolb
xchg
pop
sbb
inc
jno
iret
or
inc
jns
stos
cmp
cmp
add
dec
ljmp
fmul
mov
int3
jmp
adc
popf
rcl
and
cwtl
fidivs
loopne
pop
leave
sti
mov
enter
add
and
add
mov
push
scas
sub
jo
or
pusha
sub
stos
sahf
out
xor
lret
imul
cmp
mov
gs
shrl
sti
lds
fyl2xp1
mov
push
add
add
adc
sbb
repz
adc
ret
roll
fisttps
jl
xor
lret
div
rclb
add
push
jmp
les
bnd
add
push
daa
out
add
sahf
scas
inc
out
outsb
pop
fisubs
fbstp
add
inc
jge
mov
test
and
adc
addr16
inc
je
inc
or
stos
fucom
inc
lods
nop
sub
stos
push
and
rcrb
fistpll
frstor
int
hlt
xchg
mov
jge
and
mov
cltd
lds
sub
aad
push
sub
insb
dec
subl
mov
sbb
out
ret
sbb
lods
int3
sub
add
aaa
mov
notb
xor
ficomps
and
pusha
cs
pop
mov
cmp
sub
adc
scas
loop
mov
or
je
movsl
clc
in
xor
dec
sbb
mov
divl
mov
and
mov
stc
lds
push
vcvtss2si
fisubl
ss
inc
mov
adc
mov
sub
push
jl
dec
mov
pushf
cmp
adc
jecxz
and
xchg
jg
lret
scas
inc
sub
repnz
aaa
xorb
mov
daa
sbb
int
test
jmp
ja
in
cmp
mov
xchg
jp
and
pop
scas
hlt
dec
cli
dec
xor
pop
jmp
rolb
jae
cmpsl
cmp
xor
lahf
aas
adc
inc
xchg
xchg
add
sub
pop
stos
mov
leave
inc
xor
into
pusha
mov
mov
clc
and
or
je
rclb
xor
pminsw
adc
mov
cwtl
mov
outsl
xlat
add
test
sbb
sbb
rcrl
into
hlt
push
or
and
aad
mov
loop
push
add
dec
mov
jle
movsl
xor
out
pop
cmp
push
push
pop
sub
or
or
lock
and
stc
push
lret
jle
call
pop
ja
fcmovb
xlat
sub
dec
dec
fs
and
fildl
jg
in
sub
mov
sub
psubusb
pop
jle
push
jmp
push
xchg
xor
test
jb
mov
xchg
xor
mov
xchg
js
jmp
lea
bound
nop
inc
dec
or
daa
pop
daa
out
fstl
dec
ja
cmp
or
mov
jp
jmp
repnz
cmp
mov
loop
xor
movsb
stos
dec
aam
pop
sbb
pusha
rcll
in
push
pop
popf
pushf
mov
test
dec
or
stc
jbe
dec
lods
cmp
xor
popa
xlat
pushf
js
mov
stos
xchg
lahf
leave
jmp
inc
xor
les
sbb
fisttpll
pop
jae
std
inc
cs
mov
cmpsl
sbb
call
and
or
gs
adc
push
sbb
mov
ja
cli
mov
cld
enter
mov
mov
xor
mov
add
outsl
cmp
sbb
inc
shrl
push
lret
or
mov
in
fucom
mov
stos
rcl
dec
xor
sbb
xor
shlb
arpl
out
jg
cs
outsl
std
push
call
popa
cli
inc
sbb
adc
es
movsl
push
dec
xchg
push
or
jb
sbb
mov
inc
and
fldcw
aaa
mov
or
xchg
cmp
shlb
pop
dec
test
sbb
sbb
lea
sub
enter
lahf
jbe
aas
ficoms
lods
cmp
dec
outsb
or
jecxz
in
mov
lea
xchg
leave
loopne
in
adc
pop
sub
jp
sub
loope
in
xchg
inc
dec
jo
int
add
imul
xchg
les
out
movsl
and
pop
xchg
int
mov
inc
add
push
subl
mov
pop
or
fdivs
cli
aad
pusha
cmp
iret
adc
mov
xor
imull
aad
xor
mov
arpl
ss
test
movb
pop
cmp
in
pop
inc
test
rol
ss
mov
or
inc
stc
das
jg
outsl
scas
sti
test
stos
mov
loopne
cmp
xchg
dec
and
cs
popa
adc
cli
sbb
jl
jb
push
aaa
adc
xchg
ss
sbb
xchg
mov
xor
fldt
push
cmp
mov
stos
sahf
iret
sbb
lcall
push
sub
sar
idivb
arpl
sbb
aam
dec
push
movsl
fiadds
mov
and
add
mov
adc
test
or
push
mov
or
push
mov
ljmp
das
sbb
push
testl
add
mul
mov
movsb
cmp
imul
fstl
imul
aad
lahf
or
xchg
lret
xor
or
add
cmc
jo
fisubl
or
mov
lcall
lcall
imul
mov
sbb
in
inc
sbb
jecxz
jmp
mov
mov
sbb
and
inc
test
xchg
jbe
mov
mov
pop
aaa
daa
pop
lret
shrl
mov
adc
sub
cmp
fdivrs
cmp
or
ds
adc
shrb
and
insl
adc
adc
js
mov
adcb
sbb
jae
cmp
and
pop
pop
mov
adc
and
shll
imul
aad
sub
inc
rolb
mov
inc
sbb
sbb
mov
shlb
mov
jnp
add
aas
aad
inc
adc
jmp
xor
int
arpl
cmp
pop
pushf
lock
test
lahf
xchg
mov
push
insl
sbbl
jo
sub
addr16
add
xchg
jmp
add
insb
xchg
or
add
icebp
sbb
adc
dec
mov
idivl
adc
stc
push
movsl
sub
inc
xor
mov
clc
adc
sahf
sub
cli
jns
mov
mov
aad
sub
lods
test
mov
cmpsb
dec
and
shll
push
mov
mov
sar
int3
cmc
loopne
mov
lret
rclb
mov
mov
cmp
into
outsb
lret
xor
js
icebp
out
jle
and
aaa
cltd
out
sbb
sarb
add
into
sub
faddl
negl
aaa
jg
jb
inc
js
pop
mov
adc
pop
aam
call
call
outsl
jp
iret
adc
arpl
jo
lds
out
xor
or
xlat
shl
inc
out
jmp
add
dec
mov
into
jge
cmp
fwait
pusha
xchg
adc
test
in
ret
mov
fildll
dec
loopne
int
pop
in
and
nop
jp
in
pop
push
sbb
inc
cmp
push
lret
stc
out
sbb
pop
add
sub
and
push
in
cld
pushf
sbb
outsl
inc
leave
jge
add
xor
cmp
or
xlat
js
push
fwait
aam
clc
imul
and
inc
neg
jge
stos
mov
mov
pop
mov
push
lds
xchg
jo
and
mov
pop
mov
rcll
xchg
notb
xor
mov
adcb
data16
push
loope
xor
jno
inc
jns
jp
movb
pop
subl
inc
mov
jecxz
xor
decl
mov
fwait
jecxz
fmuls
fs
sbb
cmp
mov
mov
dec
mov
mov
push
mov
push
jae
push
pop
or
lock
xor
aam
and
mov
sub
rol
icebp
cmp
imul
in
jae
repnz
push
movsb
pop
adc
mov
push
dec
mov
imul
dec
mov
dec
or
pop
in
pop
out
sub
add
adc
jnp
or
xchg
or
ss
jecxz
inc
mov
xorl
.byte
mov
std
pop
sbb
add
aad
xchg
repnz
jge
movsb
or
movb
sbbb
cld
mov
outsb
idiv
icebp
cmc
mul
sbb
jl
adc
divb
out
arpl
loopne
fsubl
inc
or
add
mov
push
jo
jae
jle
add
cld
dec
push
pop
push
dec
xchg
inc
push
stos
cmpsl
imul
lds
jmp
hlt
xchg
aam
push
loop
dec
fidivrs
push
insb
dec
aaa
and
add
xchg
inc
mov
xor
cmp
lret
pop
mov
sbb
xor
jnp
je
and
iret
mov
inc
scas
or
mov
sub
testl
cwtl
cmpsb
shll
adc
jns
sbb
pop
push
clc
adc
jle
mov
cmp
lret
or
punpcklbw
cs
aas
inc
mov
stc
dec
sub
rcrb
jne
insb
mov
mov
inc
sbb
or
sub
insb
jg
dec
pop
xchg
repnz
mov
ret
subl
add
rcll
daa
sahf
xor
hlt
test
push
dec
orb
and
ret
inc
andl
sti
mov
push
push
mov
mov
xchg
jl
aad
fsubl
in
subb
daa
mov
sbb
hlt
mov
call
aam
outsl
xor
shrl
mov
jae
push
mov
ds
nop
xor
pop
mov
and
lahf
scas
xchg
add
sahf
mov
les
xchg
fidivrl
insb
gs
int
es
dec
js
cmp
mov
sbb
mov
jp
frstor
cmpsl
dec
push
or
sub
das
jbe
je
jo
.byte
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
mov
call
xor
xchg
test
xor
imul
push
mov
pop
add
movswl
mov
pushl
push
push
jge
pop
pop
pop
mov
xor
mov
sub
xor
push
sbb
pop
push
popl
or
or
sub
mov
add
add
cmp
jne
push
mov
pop
jmp
inc
jns
pop
insb
xor
xlat
jmp
mov
jmp
in
push
jno
popf
mov
data16
insb
lret
mov
sarb
pop
or
mov
push
xor
inc
or
fwait
mov
inc
mov
fs
mov
aas
insl
mov
clc
fwait
and
out
into
hlt
fs
pop
pop
push
inc
popa
or
cwtl
or
mov
test
or
jg
add
sahf
int3
popf
mov
sbb
fmull
aam
fldl
mov
adc
sbb
lods
adc
inc
mov
fsubl
jmp
or
popf
mov
and
push
lahf
test
add
pop
inc
out
js
int3
xor
jnp
xor
call
sub
xchg
dec
cltd
mov
cmp
ds
inc
stos
fstl
iret
xchg
in
dec
cltd
lret
cli
aad
insl
lea
push
fbstp
sbbl
mov
dec
cltd
lods
and
lahf
xchg
inc
push
xchg
or
mov
jg
scas
lret
insb
mov
testb
xchg
mov
pop
iret
mov
data16
dec
or
pop
in
in
icebp
in
xlat
jecxz
stos
shl
or
test
cltd
mov
iret
xchg
mov
dec
xchg
and
in
dec
ljmp
fwait
mov
push
out
je
mov
in
dec
pop
adc
ss
cld
xchg
dec
cltd
adc
cmp
js
int3
xchg
aad
push
adc
sqrtps
imul
adc
inc
add
mov
mov
mov
xchg
xor
rolb
jns
pop
adc
mov
hlt
fadds
mov
roll
lahf
xchg
int3
pop
mov
pusha
clc
xchg
push
fcmovbe
std
lahf
push
sbb
inc
push
mov
cs
aad
repnz
aad
rorl
fwait
unpcklps
je
sub
sbb
addl
xor
lea
das
pop
lea
mov
inc
push
popf
lcall
mov
jmp
jne
pop
outsb
mov
testb
lret
je
scas
pushf
pop
test
fs
enter
loop
mov
sahf
lret
mov
sbb
dec
mov
arpl
lahf
sbb
push
sub
fs
enter
jo
fidivs
aaa
or
inc
xchg
test
jp
xchg
cmp
lods
xchg
scas
push
ret
jne
jge
mov
lret
cld
scas
inc
push
mov
cmp
inc
push
mov
inc
pushf
cmp
ret
jl
lds
dec
icebp
push
sbb
pop
push
cmp
dec
ljmp
pop
xchg
in
enter
lret
adc
mov
cmp
mov
pushf
or
or
sub
ja
rcrb
push
rorb
popf
data16
ret
fwait
mov
or
rorb
imul
sbbl
push
push
sti
sbb
fwait
jns
and
sahf
fwait
or
cmpsb
rorb
lcall
push
pop
imul
sub
add
pushf
int3
cmpb
jb
cmpsb
rcl
popa
xor
das
push
cltd
and
repnz
jns
push
inc
dec
cltd
push
sar
imul
call
gs
sti
shrl
cmp
aad
push
shrl
pop
jbe
sub
outsl
cmpsb
shrb
inc
cmpsb
sarb
push
pop
out
and
sbb
inc
cmpsb
rolb
inc
cmpsb
rcrb
lods
sub
insb
cmpsb
rorb
or
sub
sti
mov
push
ds
cmpsb
rcrb
popa
stos
es
cmpsb
rcrb
cli
clc
mov
add
out
cli
mov
or
popa
mov
push
adc
add
cmpsb
jmp
insl
cmpsb
shrb
or
mov
dec
or
push
shl
cmpsb
inc
outsb
mull
les
xchg
popa
stos
bound
sarb
push
mov
movsl
out
sbb
sub
out
sub
add
cmpsb
movsl
in
andl
enter
pop
and
aam
cmpsb
sti
mov
push
sbb
rcrb
add
dec
push
cli
shrl
push
cmp
add
mov
cs
jp
sub
push
cmp
sub
incb
movsl
fucomip
cli
test
adc
scas
add
mov
js
clc
cmc
leave
dec
daa
pop
andl
data16
js
clc
cmc
leave
dec
daa
cld
ljmp
pop
outsl
push
gs
insb
adc
and
xchg
sub
repz
sarb
js
clc
cmc
leave
dec
daa
clc
sub
sub
jle
cmp
mov
cmpsb
shrb
cld
repz
sarb
js
clc
cmc
leave
dec
daa
andl
shrl
shrb
cld
repz
sarb
js
clc
cmc
leave
dec
daa
andl
dec
jo
mov
push
fs
enter
push
shrb
add
imul
dec
in
cld
repz
fisttpll
rolb
cmpsb
sar
xchg
clc
lret
inc
dec
jo
jne
push
push
jmp
rclb
mov
pop
roll
pushf
lcall
in
pusha
sub
dec
roll
cmpsl
movsl
pop
roll
pushf
lcall
js
cmpsb
ja
aaa
xchg
sub
shrl
xchg
lret
das
sub
cmpsb
shlb
push
shrb
xor
or
inc
mov
sub
inc
out
sub
jg
push
push
sub
push
stc
push
add
mov
shrl
inc
pop
push
fisttps
inc
pop
insl
cmpsb
shrb
mov
fildll
test
mov
dec
push
jbe
push
adc
pop
sbb
cmpsl
in
cmpsl
cmpsb
cmp
es
cld
xor
fnstcw
sub
test
jecxz
repz
jl
dec
xor
and
or
cli
ss
movsl
jmp
inc
inc
das
pop
sbbl
xchg
lret
stos
or
fcmovnbe
data16
orb
pop
inc
inc
shrb
push
shrb
push
shrb
push
shrb
outsl
cmpsb
or
mov
shr
insb
cmpsb
shrb
push
cmp
sub
push
shl
mov
cmpsb
shrb
push
shrb
inc
and
test
rcll
or
jbe
data16
xor
mov
adc
cwtl
cmp
daa
imul
mov
inc
mov
push
add
cmpsl
call
jb
fs
les
add
lock
je
insb
imul
fldt
inc
mov
in
sbbl
or
fisubrs
jae
sbb
sub
insl
xchg
push
pop
test
ret
dec
pop
adc
hlt
and
mov
and
cwtl
mov
lret
xchg
cld
mov
popf
daa
or
push
mov
xor
test
cltd
lahf
add
fisubrs
test
fwait
stos
shll
lahf
mov
pusha
or
cmp
nop
mov
faddl
cmp
adc
xchg
xchg
or
push
jb
sarl
dec
lods
add
shlb
or
sbb
adc
mov
cli
mov
lods
dec
pop
jmp
sbb
jge
adc
jmp
adc
jbe
mov
jne
pop
fs
out
popf
mov
xchg
repnz
scas
shll
dec
pop
mov
shrb
and
std
sub
dec
in
out
xor
out
inc
nop
sub
adc
clc
mov
xor
imul
inc
les
lea
loopne
cs
jne
push
lods
push
pop
pop
je
adc
cs
jns
jb
out
pmaxsw
lds
ss
loope
fdivs
dec
loop
mov
outsb
sarb
push
push
jle
adc
cwtl
mov
push
adc
dec
and
test
roll
mov
je
mov
jle
shl
and
cmpsb
data16
push
insb
push
iret
push
enter
fnstenv
inc
mov
xchg
lcall
shrb
addr16
xchg
xchg
push
and
sub
ret
icebp
mov
mov
xchg
add
add
lods
xor
in
xchg
insl
js
lds
jb
and
jle
fsts
dec
and
scas
pop
repnz
outsb
mov
loop
subl
push
cwtl
xchg
sbbb
push
shlb
outsb
sub
ljmp
add
adc
mov
sbb
jb
mov
out
inc
jl
push
lods
dec
xchg
add
in
jnp
rol
rorl
arpl
dec
das
jmp
das
std
xchg
pop
mov
pusha
in
fildll
push
xchg
pop
xchg
fistpll
aam
push
add
jmp
xchg
and
jp
and
mov
xor
in
lods
js
pop
je
ret
popl
ror
lds
inc
in
pusha
scas
mov
dec
mov
push
int3
and
add
add
add
or
add
or
add
jb
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
or
add
or
add
or
add
push
add
or
push
add
or
push
add
or
push
add
or
push
add
or
push
add
add
add
add
jbe
jo
xor
cs
insb
add
imul
insb
add
gs
xor
fs
insb
add
insl
arpl
xor
fs
insb
add
jb
imul
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
add
add
add
add
add
add
add
addb
add
mov
push
add
add
add
or
add
fisttps
add
add
inc
jb
gs
imul
inc
gs
arpl
popa
jo
add
add
imul
jae
js
add
inc
gs
imul
outsl
outsb
dec
outsb
outsw
inc
add
add
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
add
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
push
add
push
add
add
push
aas
add
add
add
add
add
add
add
mov
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
push
add
add
add
add
xor
xor
inc
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
outsb
add
add
add
add
popa
add
imul
je
and
push
add
insb
add
sub
add
add
arpl
je
outsl
add
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
add
push
add
imul
push
add
jb
jae
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jb
jbe
xor
xor
pop
add
je
insl
add
add
add
add
add
add
add
sub
add
cmp
sub
add
push
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
add
je
jb
popa
add
je
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
add
add
test
xor
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
sub
inc
add
add
add
imul
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
insb
add
add
imul
je
jae
and
jb
add
add
jbe
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
pop
add
add
inc
add
add
pop
add
and
and
and
and
and
and
and
and
and
and
and
and
add
add
je
sub
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
sub
push
add
add
add
imul
outsl
add
jae
sub
push
add
add
add
jo
add
popa
add
add
add
add
jns
jae
je
add
add
add
cmp
or
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
mov
add
add
add
add
add
and
adc
add
add
call
add
adc
add
add
sub
add
add
pop
ljmp
add
and
add
add
add
add
add
addb
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
add
add
add
add
add
add
add
add
or
pushl
jo
xor
jo
push
aas
addb
idivl
divl
addb
icebp
pop
data16
dec
addb
stc
pop
out
dec
addb
incl
inc
add
addb
inc
inc
inc
jo
addb
mov
rcrb
jnp
jnp
pop
xor
rolb
add
add
mov
add
xor
add
add
add
loopne
xor
loopne
mov
loopne
xor
loopne
add
loopne
ja
sub
add
and
add
inc
add
add
add
add
add
add
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
xorl
xor
xor
xor
add
add
add
add
jnp
jnp
add
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
mov
xor
xor
xor
xor
xor
ja
addb
xor
aas
pushl
xor
push
addb
jg
aas
push
add
push
orb
div
aas
push
xor
push
addb
xor
xor
xor
add
testl
push
xor
testl
clc
mov
addb
xrelease
push
maskmovq
testl
incl
lock
addb
add
mulb
incl
addb
add
ljmp
cld
in
addb
add
jmp
cld
testl
push
addb
add
mov
xchg
ja
ja
ja
ja
ja
ja
add
add
inc
inc
inc
add
add
addb
add
inc
inc
inc
jo
pop
jo
add
add
inc
inc
inc
jo
pop
jo
add
add
inc
inc
inc
inc
inc
inc
inc
addb
add
ja
ja
ja
ja
add
add
mov
mov
lock
push
add
push
add
push
add
jg
add
aas
lock
aas
lock
aas
lock
aas
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
push
push
mov
mov
add
pop
jne
gs
mov
jge
sbb
ret
pop
or
cmp
jae
pop
lods
mov
jg
test
les
mov
mov
sub
push
xor
or
xchg
popa
fs
pusha
outsb
push
mov
xor
jo
mov
mov
ret
mov
push
and
ja
xor
fs
test
or
rolb
gs
and
outsb
mov
decb
push
add
sbb
into
in
adc
daa
mov
jbe
mov
jle
scas
cmpsl
dec
fbld
inc
loopne
aad
adc
mov
sarl
cli
icebp
pop
cld
js
ret
pop
dec
inc
rdmsr
ror
and
cwtl
push
rcl
fbld
jno
adc
outsb
and
std
out
mov
fwait
inc
mov
xor
cmp
cmp
ret
ret
mov
sub
roll
enter
push
aam
mov
push
cmc
fistps
clc
ja
and
add
mov
aas
xchg
repnz
sub
xor
rcl
inc
and
arpl
push
aaa
mov
iret
jp
iret
or
es
inc
push
xchg
mov
xor
pop
and
jns
outsb
mulb
inc
dec
imul
stos
jecxz
xchg
xor
in
jbe
ffree
xchg
bound
push
add
stos
pop
mov
pop
arpl
movsb
rol
add
xchg
jb
sbb
aam
sbb
sbb
and
xchg
addb
lea
xchg
and
sahf
je
inc
arpl
inc
movsl
fs
pop
mov
jo
outsb
jle
mov
xor
sti
or
pop
sbb
dec
scas
pusha
scas
icebp
inc
mov
lock
push
rorl
stos
lds
sbb
pop
arpl
popf
push
push
jmp
sub
xchg
and
popf
lods
stos
es
mov
das
stos
sbb
data16
popfw
pop
adc
push
incl
out
shrb
lods
ljmp
jns,pt
and
inc
jl
push
inc
add
fs
sbb
add
jns
jno
loopne
xchg
repz
fldt
jns
es
out
inc
ret
mov
dec
mov
mov
push
cmpsl
jmp
sub
mov
fs
shlb
jae
pop
fmulp
imul
cmp
pusha
lea
int
outsl
stc
cmp
repnz
arpl
sbb
sbb
inc
push
mov
mov
push
aaa
mov
sbb
jmp
imul
or
xchg
xor
aas
sub
popf
nop
rolb
lods
je
or
cmp
pop
lods
aad
fiaddl
push
mov
loopne
ret
fsub
sub
fcoml
push
xlat
loopne
push
testl
add
push
inc
into
gs
xor
lahf
inc
pop
cmpsb
or
sbb
xchg
jnp
or
mov
add
movsb
repnz
rcll
xchg
mov
iret
aas
mov
cld
pop
add
add
add
push
cmp
sub
pop
jbe
outsl
lock
xor
lahf
pop
adc
inc
adc
sahf
xor
pushf
scas
adc
adc
pop
test
pop
xchg
sahf
fdivs
loopne
xor
fwait
lods
rorb
push
imul
dec
dec
es
call
xor
jmp
pop
jp
loop
out
push
je
roll
movsb
lea
cmc
imulb
std
clc
stc
insb
gs
cmp
fs
out
push
add
inc
testb
ficompl
ljmp
mov
jmp
loop
pop
dec
mov
jnp
mov
pop
fcmovbe
mov
cmp
sub
xchg
pop
xor
ljmp
xchg
jmp
jecxz
add
repnz
push
jne
mov
sub
xchg
add
mov
fidivrl
icebp
iret
lock
outsb
xchg
and
les
lahf
xchg
fiadds
nop
lret
mov
jbe
mov
loope
push
inc
lea
andl
iret
scas
and
jo
or
popa
rcrb
mov
dec
mov
mov
ss
loop
lret
mov
jl
mov
lcall
jbe
push
sbb
dec
popf
lods
mov
cmp
out
dec
mov
inc
adc
sub
xor
mov
aaa
leave
inc
sub
inc
or
mov
cmc
add
add
jg
les
cld
pop
jg
jle
scas
xchg
icebp
push
int
sub
xchg
pushf
int
mov
cmp
stos
nop
sbb
mov
pop
pop
ljmp
sbb
pusha
incl
scas
or
cmp
imul
movsl
shlb
out
movsl
xor
sti
jmp
sub
dec
xchg
xor
xchg
add
push
sbb
inc
lcall
mov
inc
mov
cmp
stos
rcrb
into
stos
cld
iret
xlat
es
push
jno
xor
mov
aad
cmp
add
std
xchg
jle
sbb
movsb
out
nop
jecxz
aam
push
sahf
mov
add
test
imul
lods
xchg
mov
js
into
add
jbe
std
iret
fsubrl
sarb
jb
out
adc
fsubrp
push
add
jecxz
test
mov
fdivl
push
mov
rclb
mov
ss
pop
ret
rorb
repz
jo
out
fistps
or
jmp
insl
cli
mov
nop
or
adcb
xchg
pop
adc
sbb
addl
cld
or
mov
adc
adcb
and
jg
sub
in
jecxz
jno
imul
mov
pop
test
lea
mov
test
lret
push
lea
gs
stc
sbb
cmp
xchg
jb
stos
xor
push
mov
repnz
idivb
popf
jo
cmp
jae
pop
stos
push
dec
mov
repnz
pop
push
lahf
dec
and
xchg
lock
mov
adc
cmp
insb
aam
dec
mov
xorl
lret
xchg
sbb
psadbw
ja
mov
pop
outsb
jecxz
jo
mov
or
out
jne
sti
jmp
addl
pop
mov
cld
sbb
pop
sub
pop
adc
pop
jne
shlb
loope
push
xor
sub
cwtl
aam
sbb
sahf
testl
movsl
mov
idivb
dec
sbb
mov
or
lcall
or
mov
or
ljmp
inc
mov
jle
and
in
jno
sbb
xorl
adc
call
push
jnp
test
cmp
ret
dec
xor
sub
adc
push
mov
xor
lock
call
mov
orb
aaa
out
std
mov
push
in
out
rorl
or
inc
push
mov
cli
push
fwait
lret
outsb
arpl
inc
push
fnstsw
push
stos
mov
fchs
js
sbb
cmp
ror
add
cwtl
popa
mov
cltd
scas
xor
jmp
sbb
cmp
repnz
sbb
push
jnp
nop
pop
mov
xchg
outsb
adc
pop
push
cmp
mov
pop
push
cmp
shrd
test
out
aam
inc
shll
lret
cmp
ret
and
fs
test
iret
sub
dec
rorl
outsb
ljmp
cmp
add
pop
aad
xor
jae
shl
cltd
hlt
inc
mov
dec
push
cli
and
xchg
cltd
pop
ss
push
arpl
daa
lret
mov
fs
rorb
scas
push
pop
push
pop
xchg
imul
pop
pop
lock
push
sub
cmc
jbe
imul
push
cltd
and
push
mov
pop
int3
call
stos
jo
or
inc
shll
rep
rorb
add
pop
jo
shlb
idivl
fsubr
gs
into
xchg
movsl
iret
push
mov
jb
inc
out
lds
cmpsl
loopne
sti
and
out
add
jmp
jb
mov
xor
jno
xor
xor
xor
mov
cmpsl
aas
push
xor
xlat
js
dec
shlb
out
ret
call
aad
jbe
sti
mov
lret
jb
aas
push
dec
cmc
xchg
or
xchg
addl
test
adc
cmp
popa
mov
out
xor
gs
mov
addr16
mov
inc
dec
daa
out
adc
fistpll
dec
sahf
push
repz
daa
and
sbb
push
mov
mov
lcall
std
dec
xchg
adcl
std
xchg
not
adc
mov
jecxz
aaa
cs
sub
es
pusha
cli
add
cs
dec
mov
xor
jle
jbe
push
test
sub
jne
int
data16
pop
cmpb
adc
dec
and
loopne
jp
mov
mov
xor
mov
insb
mov
test
ret
adcb
jo
inc
add
scas
mov
and
sbb
pop
jo
and
and
testb
iret
jo
add
movswl
jg
xor
fcomip
insl
fwait
clc
xor
sub
lcall
or
pop
divb
out
out
ja,pn
or
lock
loopne
inc
fisubl
push
xor
imul
in
jg
and
cmp
lret
pop
mov
lods
mov
aam
mov
cmp
pop
jae
ja
xor
lods
popa
out
fmuls
outsb
scas
mov
lcallw
test
hlt
and
jnp
mov
mov
test
or
psubusw
jle
add
fisubrs
imull
xor
add
cwtl
or
xchg
pushf
insb
mov
ja
mov
cwtl
mov
xchg
or
ret
or
test
ja
xchg
es
jmp
mov
loopne
cmove
insb
aas
mov
mov
mov
cmpsb
in
and
pop
sbb
stos
mov
ljmp
xor
cmpl
adc
mov
xchg
shll
dec
pop
push
push
outsl
push
jno
jns
enter
in
fimull
adc
jb
bound
adc
stos
or
test
sbb
imul
mov
add
sub
push
pop
cmp
outsl
inc
outsb
lods
mov
or
test
test
push
jnp
inc
jle
push
arpl
jo
push
jle
jp
test
jae
lock
sub
pop
add
adc
jnp
inc
nop
lea
xchg
jg
pop
mov
lods
hlt
popa
mov
pop
ret
mov
jmp
repz
sbb
add
aad
dec
lahf
daa
or
sub
cmpsl
xchg
sbb
leave
nop
mov
push
inc
jnp
sbb
in
lods
mov
and
sub
aaa
sub
aaa
and
or
xchg
xor
lods
sub
cltd
mov
dec
insb
jge
pop
cmp
jl
sbb
outsb
sar
lahf
adc
imul
xchg
pop
xchg
call
xchg
hlt
lea
push
jb
inc
fwait
sbb
or
mov
hlt
in
push
pop
or
sbb
pop
test
push
pop
jg
add
cmpl
rorb
dec
int3
sbb
mov
push
adc
mov
rorb
out
add
mov
xor
and
mov
popf
test
lcall
call
push
fisttpl
repz
lret
mov
jl
cmc
jo
xchg
push
loopne
cmc
pop
jmp
mov
cmp
int
cmp
lahf
dec
int3
enter
shll
push
clc
movsl
pop
mov
lds
mov
mov
sbb
jae
inc
loope
mull
repz
mov
popf
add
repnz
insb
out
scas
sub
je
int
pop
jmp
rorb
rclb
jle
jns
test
push
fisubs
push
cs
or
or
jae
rorb
fildll
addr16
das
and
sub
mov
adc
mov
nop
insl
ret
inc
ljmp
fldenv
jle
aad
pop
lret
jl
cs
sbb
add
in
add
cmp
out
pop
rorl
enter
cmp
mov
and
lahf
fisubrs
mov
fstpt
subl
in
add
dec
sbb
mov
cmp
shrl
lods
mov
dec
loopne
sub
mov
adc
adc
mov
mov
les
mov
xchg
mov
jb
and
sbb
fs
arpl
mov
scas
and
pop
and
mov
push
push
sahf
movsb
mov
sub
jle
dec
lock
jb
xchg
cmp
insb
pop
xchg
je
addb
mov
test
pushf
sbb
lods
jne
jmp
adc
daa
jecxz
lret
jecxz
and
imul
inc
dec
sti
iret
inc
dec
fmull
ljmp
mov
scas
or
dec
or
adc
pop
xor
dec
xor
nop
mov
clc
pusha
out
mov
jg
xchg
std
mov
int
stos
js
jae
movsb
mov
mov
xchg
xor
sbb
aam
adc
jae
or
cmp
loop
aas
mov
lret
int
sar
test
cwtl
ljmp
test
and
and
sbb
cmpsb
icebp
dec
dec
add
lcall
sbb
ret
mov
and
in
and
mov
mov
jbe
xor
pop
mov
mov
jne
mov
insb
leave
push
mov
cmp
mov
sub
sbb
cwtl
and
outsb
jb
scas
popa
add
icebp
inc
sub
arpl
lods
lcall
jnp
pop
and
dec
dec
push
fmull
mov
fdivr
orb
sub
mov
xchg
in
je
mov
sub
outsl
inc
pop
mov
xchg
push
addr16
cmp
pop
jg
aad
fadd
push
shll
loop
loopne
and
adc
outsb
movsb
xchg
mov
push
lock
push
inc
jne
and
cmp
and
scas
inc
or
mov
sub
fs
pop
in
popa
cli
pusha
dec
jmp
jp
hlt
pop
ds
sub
fidivs
out
sub
jae
inc
jmp
mov
sahf
imul
xchg
jo
jecxz
pop
cmp
daa
push
addr16
dec
js
jno
fnstsw
jg
push
pop
stos
arpl
sub
test
scas
pop
jmp
push
in
cli
lods
imul
es
xchg
inc
jo
es
push
push
loopne
push
sbb
imul
mov
mov
mov
inc
jbe
mov
ds
incl
ret
lds
push
sti
jecxz
mov
shrb
out
mov
shlb
xor
pop
cmp
jmp
pushf
gs
fcoml
in
xchg
sub
cmp
xchg
xlat
mov
fbld
out
bound
test
lods
pop
int3
and
mov
movsb
xor
push
sti
mov
or
inc
push
into
hlt
push
xchg
out
xchg
sbb
pop
push
dec
popf
jle
out
fistps
inc
icebp
push
jo
flds
arpl
inc
jo
ds
in
xchg
aas
jb
jle
xor
and
adc
in
fs
mov
mov
shrb
cmp
cmp
dec
fsubl
addl
pop
xchg
insl
ffreep
cmp
sub
int3
cmp
xchg
cmpsl
sti
test
xchg
repnz
mov
xchg
and
fsubrs
cltd
mov
test
adc
aas
sub
repz
in
cs
scas
add
movsb
aam
cmp
dec
popa
cmp
lret
dec
sbb
movsl
cmp
shlb
sti
into
jle
xchg
adc
mov
mov
sbb
rclb
fmulp
xlat
sub
es
aad
mov
pop
push
xchg
std
repnz
inc
xchg
jle
add
xchg
out
insl
sbb
daa
mov
repz
push
lods
icebp
and
mov
xor
dec
pushf
inc
cwtl
addr16
xchg
mov
mov
xor
push
outsb
mov
loope
mov
sbb
sub
shrl
insb
mov
fidivl
dec
js
mov
out
cmc
jb
pop
inc
jbe
jle
or
mov
insb
mov
imull
cltd
xchg
dec
out
mov
mov
xchg
iret
enter
ror
loop
dec
ss
mov
roll
icebp
push
push
stc
rcrb
mov
test
and
push
call
inc
mov
rol
stos
xlat
ja
mov
and
jmp
jne
out
js
ret
mov
leave
pop
das
or
xchg
inc
fcmovu
fnsave
out
add
dec
dec
cmpsb
shl
xor
mov
jno
push
mov
push
adc
fcmovb
pop
mov
cwtl
scas
push
ss
push
in
test
sbb
popa
cmp
jle
dec
test
lods
mov
mov
mov
in
scas
pushf
cmpsl
push
enter
add
lods
rcr
xchg
lahf
pop
ds
outsl
lahf
jns
push
cmp
fstpl
push
add
scas
in
das
jns
leave
add
xchg
push
cmc
mov
das
sbb
mov
inc
faddl
iret
shlb
xor
js
push
push
pop
aaa
pop
shlb
imul
in
jmp
mov
arpl
xchg
add
mov
xchg
cltd
nop
sahf
insl
lcall
jg
fldcw
push
sbb
fsts
and
stos
sbb
loop
fsubr
sarb
push
and
in
pop
daa
mov
je
sbb
mov
or
mov
xlat
das
loope
gs
push
mov
dec
cmp
ss
scas
in
insl
push
punpckhdq
pushf
repz
sbb
mov
cmpsb
out
mov
add
rorb
ficomps
mov
hlt
aam
push
cwtl
jl
push
pop
inc
xchg
fnstenv
cmp
repnz
and
lods
dec
lret
leave
and
fsts
inc
or
jns
out
xchg
jnp
insl
pop
fidivrl
mov
jl
repz
fmull
ljmp
sbb
cmp
out
mov
cmp
pusha
mov
cmp
les
mov
jne
pop
xor
xchg
enter
add
add
mov
scas
scas
out
insb
lock
das
out
repz
jns
adc
in
pop
loope
popf
xor
dec
xor
mov
scas
push
dec
add
xchg
ret
roll
rcrb
enter
jo
mov
pop
jg
adc
cs
stos
cmpsl
scas
or
mov
adc
pushf
xchg
lods
fistpl
lds
fstps
xor
mov
mov
xorl
rcr
inc
cmp
xor
mov
fistps
out
sbb
dec
std
xchg
sub
push
aad
sbb
loop
add
add
cmp
fmull
outsl
lods
mov
aad
dec
xchg
ljmp
dec
mov
lock
mov
cld
mov
add
xor
lods
fs
jnp
jmp
cmp
mov
cmp
or
mov
mov
dec
cmpsl
push
adc
in
roll
out
or
xchg
push
xor
stos
scas
mov
sbb
inc
push
adc
into
fisttpll
jg
push
jl
mov
decb
push
fucomip
jns
dec
add
out
popf
or
add
into
js
xchg
sub
or
push
aaa
push
int
jno
push
hlt
testl
push
and
and
inc
xor
or
dec
dec
jbe
shlb
dec
gs
inc
imul
mov
imul
loope
std
sbb
aam
fmuls
movsb
aaa
stc
mov
xor
cs
test
movsb
ja
cmpsb
insb
lods
stos
jns
movsl
ret
mov
int
jno
jnp
jecxz
adc
mov
jb
mov
mov
mov
cmp
ljmp
pop
add
sub
xchg
jge
fidivs
jae
lret
xchg
mov
lcall
sbb
push
cwtl
dec
push
xchg
aad
xchg
std
xor
dec
test
inc
mov
repz
outsb
push
mov
pushf
cltd
adcl
lret
and
adc
std
adc
bound
outsl
sbb
jmp
inc
mov
inc
mov
jge
add
rcrl
stc
or
and
push
xchg
pop
jmp
in
mov
ficoms
aaa
pop
xor
lret
in
inc
pop
xor
inc
pop
les
cli
mov
mov
and
sti
movsb
mov
pop
cwtl
inc
jns
lods
outsl
call
sub
lcall
adc
or
loop
ljmp
adc
mov
fwait
push
dec
jg
cmp
popf
push
sub
inc
xor
add
loop
incb
pusha
dec
xor
mov
popf
xchg
push
add
mov
push
mov
dec
mov
fwait
inc
pop
or
jno
out
int3
mov
push
xchg
inc
loope
sub
cmp
sbb
cmp
movsb
jmp
inc
in
ljmp
fistps
lret
call
xchg
push
add
cmpsb
hlt
rol
jecxz
in
jbe
jle
or
inc
dec
int3
loopne,pt
pop
lret
mov
fnstsw
ja
add
push
mov
push
xchg
rorb
call
repnz
add
push
mov
jbe
push
pop
sahf
cmpsl
mov
sub
push
loope
incb
pop
jge
lcall
mov
jecxz
neg
cmp
lret
pop
imul
inc
xchg
mov
mov
xchg
push
mov
fsubrs
dec
ljmp
push
push
add
fdivl
mov
les
and
outsl
push
enter
fadd
inc
ret
xor
adc
mov
shr
lea
aam
jle
push
mov
dec
mov
inc
mov
int3
das
xor
mov
out
loopne,pn
aam
mov
loopne
pop
jns,pt
fsubrl
xor
mov
cmp
sub
lret
jae
fistpl
sub
les
sbb
and
adc
xchg
shlb
xchg
jle
lods
sbb
jge
test
daa
rcll
ret
ja
dec
inc
pop
call
pop
cmpsw
ljmp
jp
xor
sub
fdivrl
loopne
push
shrl
sbbl
lock
test
pop
push
lock
pop
pop
xchg
jecxz
xchg
mov
pop
dec
push
xor
pop
and
jle
cwtl
dec
insb
and
in
dec
push
mov
movsl
pop
xor
jle
in
gs
jecxz
scas
and
dec
fld
enter
loopne
jmp
sub
ret
xchg
das
imull
mov
insl
dec
mov
aas
lahf
dec
sbb
push
jg
xor
xlat
fists
sub
aam
pop
inc
adcb
icebp
sbb
lcall
daa
test
incb
sbb
repnz
clc
jecxz
and
lea
mov
mov
sbb
lcall
les
mov
sbb
dec
clc
fists
xchg
pop
dec
jle
leave
dec
sbb
inc
xchg
and
loope
das
cmpsb
jnp
test
lret
ficoms
adc
arpl
jno
xor
cmp
jnp
test
or
das
add
out
bound
or
add
pop
outsl
and
stos
mulb
inc
rclb
int
rcll
push
sub
aam
sarb
loopne
loope
adc
add
jb
jbe
loope
inc
test
xor
push
scas
sub
pop
pop
pop
fsubl
or
adc
fisttpll
cmpsb
js
data16
clc
outsl
aam
xor
adc
cld
xchg
cmpsb
push
jb
movb
cmp
ret
xchg
stc
and
mov
mov
sbb
mov
mov
cmpl
fidivs
sahf
movsb
xchg
int
iret
pop
sbb
ja
testl
test
aam
inc
stos
jae
aaa
aad
sbb
or
stos
xor
xchg
cmpsl
dec
outsl
cmc
pop
pop
loopne
lods
add
add
les
lret
aaa
jb
movsl
inc
out
rcr
scas
outsb
int
gs
sub
push
sbb
inc
xchg
cs
jb
add
aaa
or
adc
sub
es
mov
icebp
mov
push
cmp
mov
into
hlt
lahf
sub
or
xor
add
mov
mov
fcoml
movsb
out
cwtl
aas
lcall
cmp
clc
jno
and
mov
insl
popf
test
lds
inc
add
loope
mov
outsb
mov
psubusb
out
jo
cmp
lahf
sub
lods
repz
aas
or
xor
xchg
dec
or
add
jo
sbb
sbb
in
xchg
sub
push
jae
ficomps
lds
push
mov
fisubrl
dec
testb
cmp
sbb
out
dec
or
ljmp
stc
aas
aad
add
popa
shl
sbb
pop
jns
dec
xor
add
data16
or
fstpt
push
pandn
stos
jne
out
push
push
faddl
or
adc
in
and
add
cli
enter
jae
sub
add
std
pop
or
insb
dec
imul
incb
ret
mov
pop
sbb
adc
cs
in
scas
mov
rcr
xchg
cli
sbb
mov
mov
sahf
repz
and
cmp
add
jb
jae
and
cmp
dec
mov
pop
push
ficompl
jo
ret
push
aaa
gs
pop
inc
mov
loopne
daa
adc
loope
add
int
cmc
adc
cmpb
and
arpl
mov
fimull
push
vmovdqu
std
arpl
aam
cmp
push
inc
mov
aam
sbb
das
inc
jle
clc
xchg
daa
xor
aas
sti
lds
out
mov
ljmp
in
mov
cltd
mov
fsubr
xchg
dec
sti
inc
jbe
fsubs
and
lea
and
jnp
or
enter
ficompl
ds
std
fildll
out
cmpsb
aaa
rorb
cmp
pop
cwtl
shll
movsl
cmp
cwtl
rsm
or
cmpsb
push
xchg
xor
popa
jle
sub
pop
lret
push
fnstenv
mov
icebp
cmc
clc
mov
xor
sub
cmc
ret
xchg
and
xchg
mov
stc
test
and
jae
mov
sbb
inc
lret
cmpsb
dec
mov
dec
rclb
mov
popf
sub
fmull
pop
push
fisttps
dec
cmp
mov
pop
sahf
aad
jae
lret
pop
vcvtps2dq
jnp,pn
pop
mov
lods
mov
pop
xor
and
xlat
repnz
or
mov
cmp
int
pop
into
and
data16
leave
push
addr16
xlat
pop
les
ljmp
xchg
mov
sahf
pop
movsl
movsl
add
xchg
xchg
fiaddl
scas
sub
sub
mov
mov
testb
push
jnp
lret
imulb
or
mov
outsb
ret
mov
fwait
shlb
incb
and
insl
mov
jno
sbb
mov
add
aam
push
or
repnz
fwait
cmp
pop
and
xor
popa
inc
or
inc
xchg
xor
popf
and
mov
push
sub
clc
icebp
xor
push
mov
test
movsl
inc
add
mov
pop
jge
divl
pushf
orl
dec
cmpsl
mov
and
xor
xor
push
push
jb
mov
cmpsb
notl
jge
aad
fstpl
arpl
pop
das
stos
or
inc
inc
outsb
aaa
adc
test
cld
lahf
sbbb
add
ss
sub
pop
cmp
out
lret
iret
mov
rorl
sub
jb
dec
notb
sbb
lods
xchg
mov
inc
push
adc
or
enter
imul
cmpsb
mov
js
push
dec
xchg
inc
repz
shl
arpl
lods
mov
inc
xchg
cmpsl
test
jae
hlt
adc
inc
sahf
scas
int3
out
pop
dec
jns
dec
outsl
mov
sbb
outsl
and
pop
movsb
test
jns
lods
or
or
int
pop
mov
into
pop
daa
xor
loope
addr16
jbe
jg
mov
cmpsl
daa
xchg
fisubrl
mov
dec
or
push
data16
push
jo
mov
decl
in
iret
jnp
and
iret
jl
add
add
jmp
sbb
and
les
sub
mov
or
js
xlat
jmp
xchg
and
mov
xlat
arpl
jo
cmp
pop
fs
sub
add
ja
ret
cld
stos
xchg
xchg
aas
outsl
fildl
or
mov
loope
pop
xabort
adc
push
clc
inc
icebp
ret
ret
shll
xor
jnp
pushf
adc
sub
sub
std
sbbl
add
jle
pop
and
test
imul
jmp
jmp
inc
les
cmp
test
mov
xor
imul
dec
outsb
in
shrl
dec
sbb
or
shlb
gs
cltd
add
rorb
rcl
jg
pop
test
lods
mov
or
and
push
xchg
clc
hlt
jl
lock
xchg
sahf
cmp
push
pop
add
push
dec
sbb
mov
fldenv
mov
test
ret
nop
loop
mov
xchg
jns
gs
test
scas
or
je
sbb
add
inc
in
enter
cltd
xor
aaa
imulb
add
loope
mov
dec
pop
stc
lea
or
call
fisubs
aad
icebp
mov
leave
ljmp
notb
xchg
pop
sub
mull
mov
pop
sti
shll
lds
mov
cmpsb
mov
insb
shll
pop
sub
and
ret
mov
pop
das
aas
lahf
mov
push
push
les
test
push
adcb
jmp
cmp
inc
sub
outsb
int
lret
stc
clc
jns
fmulp
outsb
adc
jle
mov
mov
cmp
xor
repz
and
inc
adc
imul
lock
xchg
ret
jg
test
pop
leave
mov
inc
inc
in
or
aaa
cmp
and
adcl
or
mov
scas
aam
fcoml
pop
jno
add
fnstenv
in
sbb
test
popa
dec
inc
sbb
or
xchg
movsb
add
jecxz
xchg
xchg
pop
pop
cmp
arpl
daa
movq
arpl
idivb
mov
jns
aas
gs
or
fwait
push
int
fwait
xor
idivl
arpl
ja
pop
mov
inc
add
xor
jecxz
xchg
int3
xchg
js
insl
push
xor
loope
or
leave
out
xor
add
mov
jg
add
lods
aam
out
js
push
inc
xchg
ja
xchg
mov
cld
inc
or
insb
cmpsl
adc
pop
push
adc
sbb
gs
movsb
shll
cltd
movd
loopne
or
mov
pop
fsubl
sbb
and
or
ljmp
dec
jp
mov
fistps
or
ret
add
add
inc
pop
loopne
inc
adc
or
aam
pop
and
int3
and
mov
dec
jae
orb
ds
movd
loopne
mov
gs
ret
lods
inc
add
mov
loopne
popa
mov
stos
arpl
pop
cmova
fimuls
pop
out
inc
jg
hlt
push
push
andb
xchg
dec
jge
lea
stos
movsl
cmp
ret
in
cltd
mov
and
xchg
mov
dec
push
add
popf
hlt
popf
add
orb
lahf
fistps
popa
dec
iret
nop
mov
pop
repz
shll
ror
sbb
js
cmp
ret
xor
insl
sbb
loope
fisttps
popf
int3
test
cmp
pop
aas
cmpsl
fcomip
or
mov
fidivrs
mov
push
lcall
sahf
sbb
xchg
jnp
in
out
xor
ret
cmc
fldl2e
pop
xor
pop
cmp
out
sbb
cmp
cmpsl
lret
xchg
and
enter
fsubs
xor
cmp
xchg
stos
mov
xchg
fdivrl
xchg
sbb
jo
imul
frstor
popa
inc
fnstsw
lea
push
push
sbb
rclb
in
push
in
xchg
adc
test
and
out
sbb
inc
mov
das
xchg
inc
popf
pop
fists
mov
lret
adc
xor
das
rorb
sbb
ja
sub
in
xor
push
jge
in
mov
rcrb
sbb
es
movsb
insb
aas
sbb
mov
outsl
mov
jbe
stos
aad
or
out
jne
das
test
icebp
out
mov
repz
int3
cmp
insb
inc
mov
leave
jns
shrb
adc
lods
push
xor
dec
cmp
enter
enter
test
mov
mov
loop
pop
imul
inc
mov
sub
fdivrl
scas
cmp
js
jge
cmp
xchg
mov
lock
popa
leave
shrl
lea
push
in
push
mov
cli
xor
dec
aad
pop
push
xchg
dec
add
int3
cmp
mov
in
dec
push
daa
les
add
in
sbb
roll
jl
and
daa
xor
outsb
stos
sub
insb
ljmp
repz
adc
fsubp
mov
repnz
adc
push
movl
xor
cmp
mov
mov
enter
int
int3
cmp
sti
xlat
or
adc
mov
repnz
pop
sbb
sarl
pop
popf
adc
test
mov
loopne
test
mov
sub
popa
mov
loopne
aaa
pop
mov
fcoms
jmp
xchg
in
es
and
or
popf
and
dec
push
push
adcl
insl
mov
sbb
dec
repz
xor
fnstenv
push
test
js
sub
jno
cld
mov
sbb
imul
inc
mov
pop
and
movsl
aad
dec
sbb
das
xor
out
inc
pop
sbb
sahf
mov
push
sti
test
push
mov
mov
and
fwait
repz
push
mov
rolb
xlat
sub
fidivl
insl
xor
sub
pop
xor
inc
sub
sbb
fimull
mov
fidivrs
fbld
cmp
mov
lcall
push
mov
aas
ficoms
shrl
clc
iret
std
pop
jecxz
lods
aaa
mov
sbb
inc
sti
xor
jecxz
fldenv
jl
rol
cmp
sub
jge
mov
pusha
sahf
mov
imull
sar
xor
xchg
daa
mov
or
xor
jg
dec
add
jecxz
or
test
add
cmpl
or
jp
fstps
inc
shrb
cmp
jo
mov
and
mov
mov
in
imul
or
in
addr16
lea
push
jmp
in
mov
cmp
test
insl
lret
add
add
pop
jecxz
arpl
mov
push
mov
loope
cmp
xor
mov
sub
push
jp
mov
cs
jmp
xchg
movb
scas
pop
out
out
aaa
ret
adc
cmp
dec
rorl
outsb
sbb
xchg
pop
repnz
dec
adc
js
jb
sbb
fildll
stc
lods
xchg
cld
cli
jb
dec
sub
or
sarb
fdivp
pop
addr16
cmc
xchg
sbb
xor
pop
push
fldenv
bnd
in
sub
cmp
jmp
jb
and
std
pop
mov
sub
mov
or
dec
push
jnp
test
mov
hlt
stos
inc
hlt
aaa
into
iret
pop
sarb
jecxz
lret
aaa
ja
sub
or
cmp
sub
inc
inc
cmpsl
insl
mov
xor
scas
mov
mov
enter
jae
cmpsl
jb
jns
push
dec
jno
dec
add
cmp
push
rcl
ret
add
aad
outsb
mov
fwait
popf
push
fisubl
mov
fldln2
adc
frstor
cmp
mov
mov
sbb
les
mov
mov
mov
push
imul
mov
rorl
lcall
shll
dec
fadd
adc
dec
mov
sbb
mov
pop
lds
sbb
addb
jg
push
cmp
cmp
lock
mov
jnp
pop
xchg
mov
nop
cmpsb
dec
push
dec
push
je
inc
inc
mov
andb
mov
inc
mov
push
lods
xchg
scas
xchg
outsb
push
pop
and
jae
or
out
mov
dec
repz
sbb
pop
sarb
int
gs
cmp
mov
sahf
stos
sarb
dec
shrl
and
fsts
mov
daa
pop
cmc
insb
push
push
adc
jmp
jg
adc
rorl
sub
and
cmc
dec
adc
in
in
and
insb
cld
cli
inc
sbb
pop
sub
dec
lcall
jne
arpl
adc
fcmovnbe
ja
filds
jnp
cltd
inc
jmp
aam
push
mov
sbb
jb
popa
ljmp
cmp
lcall
loopne
inc
and
jmp
pop
popa
aas
rcrb
or
aad
jnp
imul
iret
data16
push
test
rclb
pop
and
movl
and
and
lea
fincstp
ret
test
push
adc
into
ds
int
out
aas
sbb
push
mov
fdivrl
mov
dec
mov
sahf
fs
in
mov
jns
sub
jl
aaa
lcall
pop
mov
fisubl
xchg
lods
sar
cmp
stos
clc
mov
iret
adc
adc
mov
xchg
xchg
mov
add
ds
dec
add
mov
in
scas
fdivrl
pop
cld
ja
push
daa
push
pop
add
add
outsb
jecxz
ds
cmp
lock
xor
icebp
lds
movsl
dec
dec
insl
aad
adc
jecxz
xor
pushf
fcmovnb
ja
sbb
add
xor
mov
and
add
pop
into
rcrb
jnp
push
rol
leave
int
sub
push
decl
fildll
das
add
lahf
scas
xchg
sub
jne
fcmovbe
pop
xchg
sub
mov
adc
or
adc
fsts
mov
mov
test
xor
and
int
pushf
jge
lcall
inc
jle
ret
loope
push
sub
loope
and
loop
xor
pop
jmp
push
in
mov
fdivrs
dec
pop
in
jb
stc
lock
sbb
enter
or
sarb
push
cmp
lods
mov
das
pop
pushf
faddl
cmpsb
es
cmpl
cli
mov
mov
psubusb
arpl
enter
in
ret
ds
popa
mov
ficompl
lods
or
out
fcmovb
mov
cmpsl
das
sti
sbb
mov
xorl
push
rolb
in
pop
xchg
push
mov
clc
notl
int3
mov
sub
or
ficoml
bound
sub
lods
add
inc
repz
sbb
adc
mov
or
in
add
inc
into
xchg
mov
adc
pop
mov
push
frstor
scas
movsb
dec
xchg
iret
out
push
xor
xchg
fcoms
cmp
andb
sbb
outsl
clc
dec
mov
cli
mov
dec
inc
cmpsl
lret
out
aad
lret
pop
jg
sbbl
or
mov
jg
popf
xchg
js
inc
hlt
ror
mov
inc
stc
stc
cmp
sbb
mov
xor
jne
sub
xchg
lea
and
xor
setae
fdivrl
push
push
pop
pop
loopne
xor
mov
and
cmpb
sbb
fiadds
mov
sahf
jp
and
sub
lcall
adc
mov
in
and
shl
or
stc
jnp
jmp
and
adc
fsubs
mov
push
cmp
xor
and
lcall
aam
clc
ds
leave
or
mov
scas
jno
insb
aaa
ss
xchg
fimuls
sbb
or
mov
js
aad
cmp
xchg
stos
mov
inc
pop
mov
cld
sub
call
out
adc
int3
inc
arpl
loop
jp
mov
aaa
loope,pn
mov
jns
cmpl
out
negb
out
pop
ja
xchg
iret
cltd
sahf
das
stc
inc
or
dec
jno
mov
mov
dec
dec
out
int
in
pop
mul
mov
xor
or
bound
rorl
fstpl
hlt
cmp
clc
pop
cwtl
xor
mov
dec
inc
js
test
stos
mov
mov
pop
out
sbb
mov
in
or
dec
add
jno
test
into
jg
add
inc
lea
inc
adc
mov
pop
adc
lods
insb
add
in
sub
cmp
sub
out
mov
lea
and
jbe
or
dec
cmp
dec
xlat
das
sbb
adc
sbb
inc
add
popf
out
add
adc
mov
mov
stos
jmp
fdecstp
push
daa
mov
repnz
movsl
dec
test
scas
decb
nop
and
or
push
mov
scas
aad
mov
xlat
rolb
std
jmp
push
sub
shl
mov
push
adc
ds
rcrb
in
mov
ja
cmc
in
pop
push
push
lcall
mov
pop
xchg
mov
pop
aaa
xchg
insl
lods
lock
xorl
inc
test
push
or
pop
push
ret
fwait
outsl
insl
sub
add
andb
ret
sub
insb
in
mov
mov
gs
mov
sahf
ficompl
sub
sahf
pop
pop
sbb
mov
sbb
pop
insl
nop
xchg
repnz
lock
dec
fcomps
jae
pop
test
call
out
in
lods
fsubs
jmp
sahf
stos
or
in
mov
sbb
adcb
repnz
push
scas
das
into
out
test
jo
mov
bound
push
push
dec
pop
mov
out
push
cli
add
enter
push
data16
sub
aad
ds
cmp
push
arpl
mov
mov
push
inc
insl
mov
cli
jge
jmp
mov
loopne
push
shlb
jp
movsb
imul
xchg
and
inc
aam
xchg
and
adc
out
lret
xchg
sbb
aam
pop
inc
dec
jnp
mov
fstpl
fisubrs
jge
mulb
sbb
call
push
fstl
jp
add
call
sub
aaa
sbb
lods
pop
arpl
jns
popa
and
inc
sahf
mov
and
add
xor
fnsave
push
ss
mov
xchg
call
mov
pcmpeqw
pop
xchg
cmc
xor
lock
flds
dec
repnz
or
loope
push
mov
pop
out
adc
cmp
mov
aam
pop
mov
jp
push
mov
fbld
ret
inc
pmullw
lcall
and
add
push
fiadds
push
cmpsb
cmp
das
rol
xchg
enter
xor
scas
and
popf
mov
push
repz
xor
push
or
or
sbb
mov
fisubrl
cld
sub
mov
mov
into
sbb
mov
cmp
add
jp
xchg
cmp
and
leave
push
mov
lods
xchg
xor
mov
ljmp
pusha
cltd
xor
rcrb
pop
sarb
push
push
jp
lds
dec
gs
sbb
jp
ljmp
inc
rcrl
iret
dec
fsubp
out
hlt
inc
xor
xchg
add
sub
xchg
jp
adc
std
das
mov
sbb
mov
or
xor
adc
dec
push
clc
lods
out
mov
sti
or
mull
and
cs
and
test
pushf
or
add
dec
outsb
hlt
mov
xor
jmp
adc
inc
ret
rcl
cmp
sbb
or
iret
int
push
inc
scas
push
xchg
jp
jle
and
or
mov
roll
into
sbb
dec
aam
jmp
add
test
lods
and
addr16
sub
mov
sahf
test
testb
jo
jg
arpl
inc
mov
adc
movsb
popa
popf
outsb
push
jmp
lret
ds
bound
adc
into
popf
je
add
adc
xorb
and
addr16
cwtl
adc
cmp
imul
or
add
cs
and
lds
jg
data16
repnz
sub
mov
adc
mov
jg
jbe
inc
push
add
fidivl
test
lret
add
andb
test
xor
jge
mov
xlat
mov
adc
xchg
jns
add
xor
xor
and
leave
gs
dec
jmp
and
std
loopne
mov
dec
test
dec
insb
ja
xchg
mov
or
ret
or
xlat
jae
xorb
mov
mov
adc
xor
mov
lret
or
adc
xchg
call
push
popf
ja
inc
jg
loop
or
sbb
xchg
movl
pusha
sbb
das
test
aam
pop
movsl
cmp
xchg
bound
sub
loope
push
dec
out
enter
mov
add
ja
leave
int
sbb
jg
push
mov
test
mov
repnz
mov
sar
mov
or
pop
dec
jge
out
cmp
inc
push
dec
cmp
push
cmc
sbb
ljmp
and
lahf
jns
xchg
popf
jmp
push
xor
popf
lea
add
pop
inc
add
or
mov
ja
stos
xchg
or
jecxz
loope
aad
mov
or
out
sbb
shlb
repnz
cmp
add
rcr
mov
stc
or
dec
call
icebp
out
sbb
push
ljmp
mov
outsl
and
mov
push
cld
out
outsl
xchg
jle
and
xchg
icebp
icebp
insl
inc
sbb
push
mov
sub
xchg
ss
in
sbb
lcall
push
adc
mov
adc
insl
sbb
jl
cmp
and
stos
mov
shl
stos
jle
pop
pop
pop
adc
cmp
jmp
cltd
fs
inc
or
mov
outsl
mov
pop
jg
sub
repnz
jnp
pushf
loope
aas
and
clc
mov
int3
jbe
imul
dec
add
dec
push
aad
add
adc
xor
in
mov
repz
inc
fldl
mov
ljmp
mov
dec
push
or
fwait
pop
adc
inc
cld
sub
fwait
inc
inc
and
clc
outsl
mov
pop
add
xor
ljmp
and
jns
jl
in
jo
lods
sbb
enter
cwtl
popa
adcb
fcomi
out
cmp
or
pop
xor
or
addr16
dec
push
mov
or
vpunpcklqdq
jno
pusha
pop
jbe
dec
sub
in
scas
call
subb
cld
push
imul
inc
inc
and
nop
imull
pusha
hlt
or
add
dec
in
leave
out
mov
mov
dec
mov
loopne
stos
pop
cmc
lret
rcll
mov
mov
test
mov
pop
or
scas
add
cmp
and
lahf
mov
loope
push
dec
cmpsl
mov
test
fnstenv
mov
fsubl
and
call
inc
cmpsb
out
seta
mov
pop
pop
pop
jb
jne
out
xchg
jge
loop
rcrl
jb
mov
jecxz
lock
push
cmp
mov
aaa
jno
pop
mov
xchg
dec
cli
dec
inc
adc
aaa
adc
cmp
les
popf
jno
inc
sub
das
fcmovu
add
mov
jecxz
mov
cltd
lret
mov
cmpsl
sbb
cwtl
add
push
stos
int
in
dec
dec
sub
xor
jge
test
cwtl
or
rcrl
fildl
add
sbb
and
jl
loope
pop
dec
dec
mov
xor
ljmp
push
push
arpl
xlat
sbb
jge
add
xchg
sub
xchg
cmp
cmp
fisubrs
hlt
adc
sahf
lahf
shl
lods
mov
xor
add
je
das
cmpsb
sbb
or
xor
sub
jno
add
dec
jmp
movsb
lahf
ret
sub
rol
js
cmp
pop
push
or
jne
pushf
out
mov
pop
out
cmp
scas
out
cld
popf
aam
cs
mov
shlb
daa
cwtl
sqrtps
insb
aas
sub
mov
cmp
outsb
mov
jns
xchg
or
and
imul
popf
movsl
cmc
xchg
pop
lea
aas
and
cmpsb
push
xchg
xchg
add
jp
sti
mov
and
adc
out
pop
mov
add
test
call
repz
movsb
fisubrs
lret
movsl
shlb
inc
jo
pop
jge
mov
and
stos
inc
xchg
pop
repz
inc
fxch
dec
sarb
cmp
leave
in
insb
bound
mov
push
mov
enter
inc
outsb
mov
sbb
pop
jl
mov
jle
jne
jb
mov
add
gs
fisttps
mov
mov
and
pop
push
popa
iret
mov
test
mov
and
test
xchg
inc
mov
xchg
adc
sarb
adc
mov
inc
mov
popa
xchg
adc
mov
cmp
push
fisubrl
ds
pop
jo
popf
inc
add
ss
xchg
adc
add
xorl
in
jl
adc
adc
cmp
inc
mov
cmp
data16
push
insb
ljmp
out
enter
xchg
aaa
rorl
pop
adc
jle
notl
aaa
movsb
jecxz
xchg
mull
pop
cs
fst
scas
ljmp
mov
sti
gs
cmp
mov
loopne
add
sbb
addr16
mov
mov
repnz
add
rol
repz
loop
cmp
adc
push
mov
pop
xor
push
mov
out
cmpsb
test
stos
push
push
inc
sbb
jbe
aam
subb
fdivrl
push
movsl
ss
push
out
or
outsl
sub
dec
aam
pop
test
imul
sbb
insl
xor
jge
dec
test
xchg
enter
and
das
mov
xchg
ja
push
daa
stos
das
testl
leave
lcall
jae
mov
testl
test
pop
fcmovb
out
or
sahf
lock
out
and
pop
jmp
adc
mov
mov
das
inc
adc
dec
mov
xchg
sub
rolb
lea
mov
pop
sub
cs
or
jne
sbb
jg
jg
andb
aaa
in
inc
and
sub
adc
fwait
jno
arpl
js
in
insb
mov
sub
push
push
pop
pop
out
pop
in
dec
or
and
mov
cltd
push
jecxz
aaa
mov
jbe
stc
pop
fcoms
ret
or
flds
pop
xorb
sub
mov
inc
movsb
pop
mov
shr
pop
mov
lahf
das
fistpll
cmp
pop
pop
in
or
mov
xor
das
stc
arpl
or
dec
add
or
xor
rcl
push
jp
adc
packsswb
sbb
sub
add
insb
cmpsb
push
lods
jl
mov
jno
pop
push
adc
dec
mov
lea
mov
test
xchg
daa
mov
int
dec
int3
sahf
je
push
jae
scas
inc
sbb
sbb
adc
aas
insl
std
push
lret
mov
int3
scas
lock
stos
fisttpl
inc
jge
sub
push
pusha
dec
fsubrp
and
cmpb
arpl
imul
mov
mov
gs
loopne
or
lcall
dec
mov
or
or
jno
cmc
sub
fistpl
and
dec
mov
jne
pop
outsl
mov
ss
aas
jecxz
adc
xlat
gs
insl
dec
sbb
out
outsb
fs
fldt
and
adcb
mov
stos
gs
pushf
and
pusha
mov
push
jne
dec
add
jg
inc
ss
sbb
xor
mov
dec
jecxz
mov
fadds
in
dec
out
pop
daa
cmp
mov
xor
xchg
adc
pop
gs
push
enter
sub
jo
mov
jns
fldz
imul
enter
adc
xor
jns
and
shll
mov
sti
lahf
mov
cli
scas
jns
sub
or
mov
and
movsb
insb
lods
add
mov
es
popf
pop
gs
sub
mov
pop
sub
xchg
imul
jg
mov
mov
pop
sbb
stos
dec
clc
jnp
insl
insl
mov
movsb
outsl
aad
mov
insl
xor
addr16
mov
mov
sti
push
inc
xchg
mov
push
sub
add
shll
in
mov
and
pop
and
lahf
mov
push
into
inc
pop
cmp
mov
aaa
adc
leave
cmp
out
mov
add
test
inc
jnp
mov
mul
mov
pushf
add
push
out
inc
aaa
mov
cmp
pop
jge
adc
outsb
sbbl
xchg
mov
mov
jnp
dec
xor
cmp
sar
mov
fwait
aaa
fwait
xchg
rcrb
hlt
lock
add
mov
es
mov
je
pop
loope
shrb
jno
sub
xchg
in
idivl
jne
sub
lods
hlt
rol
test
add
aaa
jge
xor
or
aad
aas
jl
push
mov
fs
mov
inc
pop
xchg
cmp
mov
mov
outsb
xchg
add
sti
dec
and
daa
pop
dec
mov
xorb
pop
mov
gs
jg
ljmp
jp
bnd
in
pusha
cmc
jno
sbb
inc
or
adc
adc
call
es
add
push
cwtl
adc
int
xor
roll
popa
mov
and
dec
out
loope
mov
sti
or
iret
jb
inc
test
push
arpl
scas
sbb
stos
lcall
in
cwtl
imul
pop
pop
adcb
xor
int
xchg
jmp
out
dec
adcb
stos
mov
fsubs
dec
ficompl
mov
fbstp
push
dec
loop
and
sarl
adc
xchg
in
adc
int
iret
rclb
incl
sub
inc
jmp
inc
ret
mov
pop
dec
lahf
imul
mov
pop
test
mov
fwait
and
xor
inc
enter
pop
out
push
push
testb
sub
pop
ud0
mov
test
imul
mov
push
and
and
in
cmpsl
xchg
pop
jnp
dec
pop
inc
push
imul
xor
fidivrs
jl
aaa
and
and
mov
bound
pusha
xchg
mov
fdivs
mov
push
sti
pop
xchg
flds
adc
push
repz
cli
xchg
mov
in
outsb
in
int3
pop
fidivrl
sub
jp
lds
sub
lret
testl
out
std
mov
mov
push
xchg
push
xchg
lcall
data16
sbb
push
adc
jae
bndstx
int3
dec
shlb
ss
pop
stos
mov
shll
jno
das
out
inc
pop
or
dec
outsb
sub
adc
add
sub
mov
mov
sub
loopne
mov
pop
xchg
dec
mov
cmc
dec
lcall
sub
stos
cmp
outsw
mov
call
jnp
inc
fwait
mov
mov
lret
mov
addb
inc
cmp
push
add
xchg
xchg
mov
rorl
ror
jl
rol
mov
mov
jle
xorb
call
push
cmp
pop
idivb
xchg
lods
push
es
aam
fildll
mov
or
mov
into
hlt
jecxz
test
nop
pop
jl
pop
int3
adc
or
gs
add
mov
mov
call
bnd
jmp
dec
aad
mov
push
daa
mov
aaa
push
iret
in
pop
repnz
aaa
je
jge
mov
dec
insl
imul
cld
dec
repnz
je
inc
mov
and
in
and
sbbb
and
pushf
in
stos
int
and
cmp
int
add
mov
adc
bound
lods
cmc
xchg
inc
push
cld
xchg
dec
sbb
out
imul
mov
std
aaa
in
inc
xchg
rcll
stos
icebp
icebp
xlat
iret
test
rcll
cmc
add
sti
mov
inc
mov
ds
mov
fwait
js
mov
inc
mov
jp
cltd
rcrb
pop
ljmp
mov
or
lret
xchg
jo
mov
adc
pop
jg
inc
imul
repz
adc
mov
add
pop
or
fistpl
les
pushf
mov
test
je
jmp
ficoms
test
loopne
jnp
mov
test
jnp
cmp
and
add
out
jo
xchg
loope,pt
repnz
sub
cmp
inc
test
stc
lret
xlat
fcomp
call
sbb
pop
in
pop
mov
cwtl
out
pop
or
jge
push
xor
push
fsubrl
bound
adc
scas
jnp
sbb
out
je
jg
dec
mov
pushf
jp
adc
imul
js
imul
mov
mov
fildll
das
in
lock
jp
fwait
sar
sbb
cmp
out
mov
das
pop
je
mov
stos
nop
or
aam
call
cmp
repz
call
jl
mov
aam
mov
testl
jo
mov
add
xchg
leave
or
jmp
hlt
pop
cld
in
es
std
pop
jne
aam
mov
pop
jp
lock
adc
sti
call
aaa
data16
cmp
adc
into
shlb
js
push
add
cmp
lods
rolb
sub
int3
lea
push
jb
lret
and
dec
fcmove
or
mov
pop
jmp
pop
push
pusha
mov
enter
push
dec
outsl
xchg
or
es
clc
cmpsl
clc
stos
pop
xchg
stc
inc
cmp
mov
lods
das
stos
xchg
daa
jp
pop
in
adc
xor
cmpsl
ror
sub
mov
shll
inc
stos
xchg
mov
sbb
adc
dec
xor
das
lret
add
iret
inc
sbb
stos
xchg
in
dec
cmp
dec
inc
cmc
and
inc
sbb
sbb
arpl
sti
jnp
mov
sbb
mov
leave
insb
in
inc
xchg
adc
jbe
cmp
lea
mov
inc
insl
fmuls
imul
imul
ret
pop
jmp
sbb
ljmp
movsl
mov
aas
call
sbb
cli
jp
popa
pushf
push
mov
aam
cmp
test
add
sub
lds
xor
cmp
in
mov
push
sub
jmp
cmp
loopne
xchg
mov
mov
orl
js
and
addr16
pop
enter
push
sub
push
mov
fs
enter
ljmp
dec
dec
pusha
sbb
jmp
inc
xor
dec
mov
push
pop
dec
mov
jmp
jmp
pop
fcmovu
aaa
fistpl
xchg
test
es
and
shll
ret
inc
cmp
cmpsb
push
mov
dec
cs
sbb
cmp
loop
lahf
mov
out
vshufpd
xchg
movsb
cwtl
rorb
jo
jecxz
jge
mov
cmp
sub
lea
or
je
pop
int
test
jp
cmp
cld
int3
inc
mov
pop
adc
push
and
sbb
orb
jg
and
js
je
imul
flds
add
popa
pop
stos
cmp
jno
sbb
pop
xchg
ret
fdivp
mov
mov
fldenv
ja
pusha
ja
inc
xchg
inc
jnp
cmp
jp
pop
sbb
sar
rolb
jnp
lea
fcmovnu
xor
into
call
lea
pop
push
leave
push
jg
lods
mov
mov
push
add
dec
outsb
popf
cmp
mov
nop
inc
and
dec
xlat
into
mov
fwait
or
movl
cwtl
push
xor
push
jo
out
pop
jno
fstps
mov
mov
mov
dec
jno
jg
iret
xor
mov
xchg
xor
add
dec
or
inc
stos
jge
outsl
xchg
push
iret
je
mov
sbbl
sahf
add
sbb
sub
add
or
add
mov
sub
or
push
mov
push
ljmp
push
fidivrl
adc
out
fwait
mov
or
or
mov
jnp
int3
mov
cld
xchg
or
jge
in
push
fisubs
add
into
lods
or
insb
movsb
ror
stc
sub
jo
pusha
enter
push
fadds
sbb
loopne
mov
jle
cmpsl
out
jno
cmc
push
cmp
in
mov
pop
cmp
push
xchg
jge
fwait
inc
pop
pop
sbbb
jecxz
out
lret
mov
jne
fnsave
mov
aad
out
movsl
mov
jne
in
adcl
das
jbe
mov
fcoms
call
out
cs
cmp
xchg
jae
int3
push
mov
push
mov
pop
mov
rcrb
mov
and
push
ja
nop
or
sub
popf
add
mov
movsl
mov
mov
mov
mov
fwait
mov
xor
out
inc
and
in
lret
jge
adc
in
pop
add
sub
leave
dec
sub
mov
nop
inc
sbb
or
pop
add
aam
imul
gs
nop
pusha
inc
inc
add
push
pop
mov
movsl
adc
subl
int
ret
dec
ret
lea
push
rcll
stos
orl
out
test
pop
dec
inc
xor
stos
inc
iret
fsubr
xchg
scas
sub
adc
sub
add
lods
and
or
pop
mov
test
inc
fwait
push
pop
inc
mov
jnp
cmp
scas
jle
mov
aaa
es
in
push
xchg
scas
in
jmp
pop
pop
cs
mov
icebp
mov
mov
pop
pop
cmp
sbb
cmp
push
xlat
orb
addr16
fstpt
sti
je
mov
shl
jl
out
sbb
dec
ret
jb
adc
frstor
aas
dec
sbb
repz
sarb
xor
or
inc
pop
aam
or
mov
test
imull
xchg
jecxz
insb
xchg
int
sbb
push
inc
inc
adc
notb
xchg
sub
data16
in
jae
push
lods
imul
into
dec
pop
js
adc
fildll
mov
mov
insl
ljmp
fldenv
fstpl
test
pop
fs
cmc
pop
ret
jecxz
fnstsw
push
lods
sbb
sub
repz
push
lods
xacquire
jnp
sbb
inc
mov
rcrl
sbb
xchg
mov
aad
inc
sub
fs
sarl
adc
clc
fsubl
jne
rcr
xchg
std
and
fstpl
stc
push
inc
fcmovnbe
mov
roll
imul
add
or
pop
lds
test
nop
pop
and
and
cmpsl
pop
cwtl
and
or
jmp
sbb
faddl
iret
rcrb
push
sbb
cmp
sbb
lods
movsb
test
xchg
fs
setns
cmp
or
das
inc
jge
and
xchg
lock
pop
out
push
mov
pushf
mov
mov
lds
je
je
xor
jae
cs
pop
sub
data16
int3
dec
insb
dec
pop
aam
aam
lahf
es
out
fldcw
push
lods
cmpsl
sbb
ds
and
cld
aaa
cmc
insl
fdivl
ret
icebp
push
mov
movsb
add
mov
ret
cmp
cmp
adc
int3
inc
outsl
xchg
inc
jne
stc
and
shl
ret
dec
cli
sahf
aad
ss
ret
add
cld
mov
or
push
mov
rcr
pop
cmp
jle
pop
inc
xchg
movsl
stc
xor
xor
test
pop
ret
rcrb
jne
loop
mov
mov
lea
fldl
fsubrl
sub
scas
lds
inc
rcl
jecxz
insb
add
outsl
leave
les
push
and
mov
out
movsl
cmc
push
insl
sub
daa
add
adc
fildll
mov
shl
lahf
push
xchg
mov
mov
cmp
sbb
fldenv
or
add
sub
xchg
test
fcmovnb
shrl
sti
add
out
mov
repz
push
dec
push
test
push
aam
imul
pop
fildll
pushl
std
sub
lock
hlt
call
ret
rcr
test
ljmp
cmpsb
jns
mov
add
pop
mov
mov
sbb
mov
pop
je
leave
ret
xor
in
adc
fstpl
aaa
ficompl
scas
sbb
sbb
out
hlt
ljmp
mov
es
jae
outsb
adc
scas
pop
push
lods
adc
mov
out
mov
lds
fcoms
add
notl
pop
data16
sahf
sub
enter
sti
es
pushf
and
fidivs
push
les
dec
shrb
or
test
shl
mov
xchg
test
mov
jnp
lea
mov
mov
adc
imul
xchg
aas
call
bound
outsb
jne
cmpsl
cld
ds
sbb
addr16
fdivrl
push
fcoms
or
insb
dec
je
push
iret
push
aad
push
hlt
lock
or
adc
push
idivl
out
xor
and
mov
xor
mov
in
jb
mov
sbb
xorb
jno
mov
and
imul
sbb
lods
femms
in
popa
pop
xchg
jbe
push
int3
push
xchg
sti
insl
loope
pop
mov
pop
into
xchg
dec
popa
cmpsl
pop
push
sub
aaa
mov
addr16
mov
cwtl
pop
mov
mov
imul
xor
aaa
add
and
iret
lods
in
test
js
adc
testl
cli
fnstcw
mov
les
loop
iret
pushf
loop
cmp
shll
ret
jle
shl
into
and
cmpsb
pop
xchg
mov
cmp
fmull
xor
repz
or
stos
mov
pop
pop
js
xor
mov
aaa
cmp
inc
sub
inc
mov
pop
fnsave
in
and
loope
and
gs
xchg
adc
cmp
push
jg
and
push
pop
call
and
mov
cld
sub
addr16
xchg
fucom
sti
xor
inc
sbb
mov
pop
aaa
cltd
mov
jb
mov
mov
pop
fildll
sbb
push
mov
test
loopne
les
mov
and
and
js
jecxz
stc
aam
jl
push
jb
jne
je
loopne
cli
xor
fwait
xor
mov
xchg
add
sbb
jl
ds
clc
repz
aad
dec
or
into
test
push
push
inc
push
xchg
dec
lcall
xorl
xchg
xchg
jecxz
jnp
cltd
push
sbb
adc
push
adc
dec
repnz
sub
aam
ja
aam
cltd
push
test
cmp
les
mov
mov
scas
and
xor
sub
addr16
jne
dec
shl
xor
imul
sub
add
out
dec
in
mov
mov
insl
lods
fimuls
shr
rcl
sbb
int
lods
in
pop
pop
fisubrl
mov
cmp
xorl
cmp
lods
pop
outsl
or
cld
mov
movsb
and
lret
or
stc
xor
push
enter
mov
jg
jge
js
mov
jmp
rorl
dec
jne
in
inc
leave
jae
ds
and
inc
mov
inc
clc
or
nop
adc
mov
jbe
jge
push
daa
stc
incb
in
jb
push
fcomip
loope
sub
xchg
cmp
pusha
fmull
mov
fistps
xor
mov
pop
cld
int3
stc
mov
daa
jbe
std
mov
stos
sub
pop
nop
nop
sub
sbb
in
pop
cmp
stc
fcmovb
movsb
rorb
bound
in
aad
jl
out
outsb
xchg
leave
push
sbb
out
and
push
add
sbb
lahf
out
inc
ret
fsubrs
out
icebp
xor
das
mov
push
outsb
xor
std
mov
in
mov
dec
and
das
and
mov
scas
enter
in
inc
sbb
xor
loop
int3
das
repnz
xchg
cmp
cltd
andb
enter
push
push
popa
mov
inc
pop
mov
push
es
jae
std
les
dec
sbb
mov
jle
aam
mov
loop
into
sub
fwait
test
adc
insl
aas
movsl
cmc
cmp
jo
fdivrl
inc
push
nop
jnp
push
sbb
cmp
jmp
xchg
fwait
pop
in
ljmp
jl
and
insb
cmp
inc
sub
loopne
push
push
addb
aaa
mov
inc
pop
lret
rclb
iret
out
in
movsb
adc
leave
fldenv
aam
sub
lret
out
imul
je
inc
push
cwtl
push
mov
lcall
xor
mov
stos
cltd
sbb
gs
and
sti
sub
cmp
imull
lods
stos
nop
inc
sub
or
xchg
test
gs
lea
jecxz
daa
add
pop
jns
adc
dec
jmp
adc
adc
mov
or
lods
sub
inc
clc
sbb
pushf
outsb
je
mov
jae
xor
inc
xor
jge
mov
add
mov
mov
fcoms
stos
add
xchg
xchg
das
sbb
test
test
cs
ja
sub
and
fs
sub
add
push
jl
inc
inc
repnz
lds
clc
push
mov
dec
mov
nop
sbb
adc
mov
out
loopne
mov
inc
test
mov
dec
mov
and
nop
or
rcll
ljmp
into
xchg
add
mov
aas
gs
imul
lret
test
sub
call
adc
sti
andb
hlt
es
imul
mov
cmp
cli
xor
rcr
dec
cmpsb
pusha
daa
xchg
les
mov
mov
xor
ljmp
fs
pop
inc
mov
mov
mov
pop
les
sub
adc
pop
add
jp
in
push
jnp
aad
mov
imulb
xchg
push
jg
adc
adc
stos
nop
inc
xor
sarb
inc
sub
jmp
mov
rclb
ljmp
jecxz
jmp
mov
cs
cvttps2pi
push
push
movsb
push
xor
mov
pop
pusha
sbb
imul
outsb
jge
dec
sbb
cmp
loopne
out
and
push
jo
sub
std
mov
mov
dec
inc
jo
jae
out
inc
outsl
jae
sub
jno
es
push
pop
cltd
int
scas
sti
pop
xor
mov
pop
mov
adcb
es
sub
aaa
sahf
repz
lods
mov
mov
adc
mov
adc
out
aad
cld
cmp
lahf
fiadds
cmpsb
sub
shrb
or
jno
mov
and
test
xor
xor
int
cmp
sub
sbb
sbb
icebp
fistpll
push
sarl
cmp
lods
sbb
add
inc
fwait
movsb
fmuls
pop
xor
loopne
cs
insl
sbb
fisubs
lret
in
js
xor
add
pusha
inc
push
sbb
jns
push
jbe
inc
rcrl
push
fs
lcall
sub
cld
cmp
cmp
sbb
xchg
sahf
dec
mov
mov
add
das
xor
leave
filds
cmc
and
stc
inc
adc
sbb
insl
lret
fmul
insl
pop
ljmp
jne
mov
fistpll
mov
xchg
cmp
aam
mov
stc
or
inc
mov
mov
mov
inc
inc
inc
jbe
aaa
adc
pop
fdivrp
xchg
sbb
jnp
inc
dec
pop
fcmovne
jecxz
ficomps
and
pop
pop
call
pop
stos
in
test
xor
adc
lret
mov
insb
or
lea
pop
adc
jno
sbb
jae
jno
sti
and
aas
int
mov
dec
rclb
daa
imul
hlt
xor
lret
mov
xchg
mov
jp
lcall
movsb
add
test
xor
push
in
imul
jl
ds
call
jp
add
pusha
pop
adc
stos
pop
mov
ret
add
into
je
repnz
das
xchg
xchg
stos
pop
adc
test
jae
popa
inc
push
insl
jmp
repnz
jmp
or
mov
sbb
in
push
pop
add
mov
pop
jnp
aam
sub
mov
popa
pop
jb
xorl
orl
ljmp
add
ror
adc
pop
sahf
out
pop
mov
jno
scas
stc
mov
adc
popf
sub
adc
mov
mov
pop
or
xor
cmpsl
jecxz
ret
xlat
dec
scas
push
movsl
jge
xor
clc
scas
je
addl
xchg
sarl
subl
int
sbb
ds
popa
xor
sarl
or
aam
cmp
xchg
push
mov
sub
jnp
xchg
xor
or
fwait
push
rol
or
enter
cli
add
sbb
fsubr
jns
push
xchg
sahf
mov
shlb
xchg
jns
xchg
adc
cmp
addl
and
push
mov
cwtl
dec
jb
sub
and
and
call
inc
xchg
fcmove
sti
frstpm(287
stos
mov
std
test
shrb
out
sub
jb
mov
fwait
dec
mov
mov
push
pop
bound
int3
mov
mov
mov
adc
das
fiadds
aas
or
push
xchg
adc
mov
fisttpll
or
cmp
and
xor
pop
outsl
jmp
pop
xor
push
or
dec
lods
rclb
shll
push
xchg
scas
movsb
push
test
cli
mov
mov
movsl
or
sub
cmp
out
add
dec
push
test
je
cs
push
pop
pop
subl
imul
or
imul
js
dec
xchg
out
js
cmp
neg
into
sub
push
pop
rolb
mov
subl
and
xlat
mov
clc
pop
loope
adc
loop
push
lahf
pop
adc
inc
jmp
arpl
xchg
sbb
sbb
pop
mov
sbb
dec
jae
xchg
inc
aad
jmp
mov
jne
or
jb
ss
aam
fsub
xchg
mov
mov
enter
leave
out
in
push
jmp
mov
sub
jmp
icebp
test
push
xchg
lcall
mov
sub
and
push
mov
stc
mov
js
in
fdivrs
sbbb
or
loope
int3
rcr
push
mov
inc
jae
mov
push
cmpsb
shlb
fsubl
pop
outsb
dec
dec
sbb
popl
pop
mov
and
cmpsl
aas
imul
rcrl
movsb
fadd
xor
jmp
shrb
push
stos
cmp
and
cld
inc
or
mov
data16
sbbl
ret
mov
dec
imul
mov
xor
xor
stos
inc
mov
cmp
gs
cmc
data16
cld
add
daa
pop
mov
cmp
push
je
rol
push
and
inc
fs
int
sub
sti
and
loop
in
sbb
xor
sbb
lea
ss
scas
fcoml
xor
cwtl
in
jnp
cmp
push
aas
rolb
sub
cmp
aad
push
lds
mov
lods
repnz
mov
inc
and
test
or
or
xlat
stc
fldt
das
loope
lea
sub
sub
adc
push
or
std
adcl
stc
sub
mov
sti
inc
pop
testl
mov
mov
negb
int3
clc
enter
inc
sbbl
es
lods
push
pop
pushl
add
test
jg
mov
cmp
jl
sbb
sbb
ja
cmc
sub
ds
xor
add
push
and
xor
hlt
push
clc
out
inc
push
lcall
cli
pop
js
test
xchg
test
cmpb
dec
add
pop
inc
sbb
popa
xchg
pop
cmpsl
inc
sub
push
xor
xchg
jae
inc
mov
sub
aam
jbe
fmul
shl
sbb
bound
daa
sbbl
movsl
daa
mov
inc
jl
enter
pop
push
sbb
mov
xchg
mov
adc
cmc
ljmp
push
mov
add
loope
sbb
mov
or
in
les
jle
nop
inc
or
test
push
mov
ss
fisubs
xchg
loop
dec
int3
mov
dec
outsl
xor
jae
cmp
into
mov
pop
in
in
pop
in
mov
outsl
sub
sbbl
lret
std
inc
or
mov
jae
mov
pop
pcmpeqw
dec
pushl
jecxz
test
xchg
fistpll
lods
mov
cli
js
std
fisttpl
mul
jg
mov
gs
or
out
adc
lods
inc
mov
mov
in
push
mov
pop
jmp
push
lds
out
cmp
into
pop
add
scas
mov
andl
sub
xchg
cmovns
pop
insb
idiv
sub
mov
into
push
pop
push
jnp
in
fs
fldcw
fidivrl
pushf
into
mov
call
dec
cli
adc
call
dec
clc
jp
test
shrb
loop
sarb
js
lods
mov
les
push
xchg
push
cwtl
jb
stos
data16
in
pushf
jp
lods
or
xor
mov
sub
or
sbb
xchg
jns
xchg
sub
clc
jbe
or
mov
xor
cmc
mov
mov
roll
sahf
inc
xchg
stc
sub
aam
xor
xchg
mov
mov
int
xor
lret
leave
loop
arpl
jbe
pop
imul
mov
push
jbe
loopne
rcrl
mov
adc
cwtl
push
test
lea
mov
sbb
inc
fdivl
and
mov
xchg
lret
pop
push
into
cmc
dec
ds
out
mov
pop
std
push
out
or
or
pop
xchg
in
test
adc
pop
lahf
jno
mov
mov
les
dec
mov
jo
mov
jb
push
sbb
mov
cld
xchg
sub
std
fisubl
pop
mov
adc
adc
mov
pop
ficomps
cmp
rorl
cmc
adc
shlb
dec
repnz
popf
push
sbb
jae
lods
and
jmp
pop
mov
ss
mov
xor
ja
scas
pop
nop
add
loopne
push
and
call
mov
cmp
pop
stc
and
mov
xchg
jg
jns
in
pop
push
inc
std
sub
mov
pop
and
ret
fnsave
lods
sub
mov
inc
and
call
push
adc
outsl
dec
jle
jg
jnp
daa
cmp
jbe
add
ds
dec
scas
test
dec
imul
jno
clc
out
outsb
mov
xor
add
push
cltd
push
aad
or
sti
pop
push
and
jbe
cmpsl
loopne
sbb
out
inc
xor
cmc
nop
mov
dec
data16
xchg
mov
not
fcmovu
ss
sbbb
aad
outsb
cmpsl
pop
push
mov
push
jne
dec
shlb
mov
add
das
fwait
loope
mov
sbb
add
lods
or
addr16
test
jno
sbb
sti
test
ror
lahf
push
fidivl
xchg
icebp
xchg
rcrl
pop
aaa
lock
orb
add
inc
jae
cmc
xor
dec
mov
sbb
xchg
pop
cmpsw
invd
fimuls
es
sbb
ret
push
insl
mov
jne
dec
out
inc
sbb
jge
mov
out
icebp
arpl
push
lret
incb
nop
fstpl
shll
ficomps
push
xorb
inc
inc
cmc
fnstcw
xchg
xor
mov
sbb
adc
imul
dec
scas
std
mov
je
adc
mov
jne
addr16
xchg
jb
xchg
pop
xor
jle
aad
or
xor
iret
sbb
movsl
pop
mov
mov
pusha
clc
mov
adc
ljmp
loopne
push
or
sbb
mov
lods
add
add
mov
mov
pop
mov
shlb
fcmovb
adc
xor
out
mov
mov
test
xor
pop
popf
inc
xchg
pop
inc
aad
sahf
adcl
mov
pop
mov
xorl
stos
roll
cltd
outsl
xchg
ljmp
xchg
sub
xchg
addr16
je
les
insl
lcall
iret
stos
adc
sbb
fimuls
shll
jmpw
test
fisubrl
push
jge
pop
cmp
cli
mov
or
into
ret
jmp
lea
dec
outsl
or
jne
sbb
loop
fs
jmp
les
aam
push
loop
and
std
mov
mov
in
mov
mov
inc
add
bound
stc
loop
xchg
mov
nop
xchg
push
das
push
sbb
mov
or
push
rcll
push
clc
out
mov
pop
push
ds
icebp
mulb
pop
loop
sub
cmp
sub
inc
or
mov
mov
arpl
add
mov
jmp
aam
jg
pop
mov
mov
fcmovnb
pop
and
aad
push
test
shlb
pop
jbe
jp
mov
dec
jbe
mov
sub
les
xchg
mov
ret
sub
mov
rorl
inc
pop
jnp
aad
bound
popa
loopew
jg
frstor
add
fcoms
js
ljmp
xlat
dec
scas
insb
sbb
dec
push
cltd
mov
addl
shlb
and
data16
mov
fisttps
add
or
add
jne
sbb
lock
sub
das
xchg
push
xchg
jecxz
mov
cld
xor
inc
popf
in
jbe
pop
aam
mov
popa
dec
adc
in
or
aaa
in
insb
ds
push
stc
adc
sub
clc
xor
inc
push
and
jno
or
adc
adc
cwtl
dec
or
repz
pop
jne
mov
inc
sub
cltd
lods
mov
jne
ljmp
stc
xor
xchg
and
push
lahf
dec
mov
int3
imul
lret
dec
mov
lods
dec
std
add
imul
sub
and
pop
xchg
scas
add
and
cli
xchg
mov
push
sub
mov
mov
das
pop
cmp
sub
push
xchg
outsl
aas
int3
inc
cld
sub
fcmovu
or
mov
xchg
mov
lret
mov
das
sarl
ret
push
mov
push
pop
dec
adc
pop
xchg
xchg
and
jns
sub
jl
mull
mov
xchg
mov
adc
push
adc
or
jb
sbb
jnp
mov
je
leave
pop
popf
xchg
or
pushf
mov
jnp
cmp
in
and
xor
mov
jmp
xchg
into
pop
icebp
jae
shlb
jecxz
lds
push
mov
shr
sbb
pop
das
pop
jae
or
andb
xor
test
mov
mov
mov
jmp
lret
leave
adc
arpl
mov
and
cli
addr16
xchg
test
lret
pop
aad
inc
push
pop
popa
push
mov
mov
test
orl
push
int
insl
sbb
add
adc
repnz
mov
out
xchg
mov
mov
push
faddl
sub
or
imul
test
and
push
fucomp
push
bswap
inc
pop
dec
out
or
sub
loope
popf
or
fiaddl
dec
dec
daa
cmpsl
rdmsr
xor
daa
sahf
sbb
mov
stc
outsb
xor
jb
pop
and
sti
jbe
adc
sbb
jbe
pop
or
mov
ja
mov
js
dec
sbb
jp
jecxz
js
sub
mov
popf
test
imull
mov
div
aam
push
mov
sub
and
adc
int3
sti
idiv
inc
enter
out
cli
add
in
shll
add
dec
int
pushf
int
faddp
fldl
mov
or
xchg
loop
xor
testb
cmp
xchg
sti
xchg
mov
jb
pop
add
sub
mov
pop
fmuls
lret
movsbl
cli
adc
sbbb
cmp
jae
jns
jl
and
xchg
jb
mov
xchg
in
lcall
not
test
dec
xchg
lcall
imul
sbb
decb
jp
pop
jns
lods
aam
sub
hlt
xchg
xlat
clc
xlat
push
dec
movl
jle
mov
cwtl
xchg
jmp
xor
cmc
sub
lahf
pop
pusha
ret
aad
imul
sti
mov
cmp
mov
idivb
mov
pop
xor
xor
mov
ljmp
cwtl
jbe
ret
mov
test
xor
adc
shll
test
stc
in
jg
jno
call
bound
pop
inc
popf
cmp
fistpl
jle
or
and
sbb
sahf
push
mov
inc
xchg
or
cmp
repz
push
pop
je
sbb
dec
adc
ljmp
add
incb
test
and
pop
xchg
mov
sbb
rcll
arpl
xor
xor
adc
inc
sarb
sub
test
and
nop
mov
sbb
sbb
insb
sub
add
outsb
clc
cmp
cld
pusha
or
bound
sub
cmc
pop
add
cmp
cmpsl
loop
cmp
pop
sub
repnz
pop
negb
jno
mov
sti
mov
fcmovnu
xor
es
in
jae
mov
pop
shufps
fbld
pop
aas
sub
addr16
push
jns
sarb
aas
mov
mov
xor
bound
xor
sbb
pushf
dec
xchg
aas
push
shrl
pop
xchg
lcall
sub
loope
call
and
mov
lret
into
mov
enter
mov
mov
push
xor
stos
xchg
fs
add
jmp
scas
rcll
fidivs
movsb
ja
in
int
out
xor
inc
pop
lahf
xchg
adc
ret
sbb
cld
sub
std
pop
rcl
shlb
popf
into
xchg
pusha
push
std
mov
repz
orl
scas
outsb
data16
dec
repz
lods
mov
cmpb
inc
daa
pop
and
pop
xchg
sbb
lahf
fsubr
lds
movsl
xor
dec
sarl
fwait
pop
dec
scas
enter
add
push
dec
push
pop
pop
cltd
add
cmpsl
popa
inc
lods
js
or
lea
sahf
ret
mov
push
add
inc
lret
push
push
movsl
cmpl
fldenv
adc
repnz
push
dec
push
push
mov
das
push
divl
mov
push
jl
pop
or
jns
stos
push
dec
adc
cmp
repnz
jmp
in
neg
pop
nop
cmp
push
and
push
xor
adc
xor
fwait
test
or
mov
out
int3
incb
outsb
inc
or
sub
loop
mov
inc
hlt
ljmp
xchg
xchg
in
cltd
adc
insl
ljmp
adc
cmc
enter
je
hlt
inc
add
loope
fimull
subb
inc
xchg
mov
loop
sub
pop
mov
outsl
adc
cs
sub
mov
inc
jge
sbb
cmp
mov
adc
mov
xor
loope
cltd
cmc
and
push
bound
cwtl
add
mov
pushf
or
or
movsb
test
xlat
jmp
leave
or
dec
in
xlat
jno
push
cmp
movsl
shrb
rorl
push
mov
cmp
jmp
mov
xor
je
test
mov
mov
stos
pop
daa
scas
dec
mov
cmpsl
adc
fmuls
pop
lcall
pop
in
movsl
push
inc
sbb
or
push
sub
push
ja
fisubl
pop
fsubs
arpl
and
test
jp
rolb
js
insb
mov
adc
inc
xchg
sti
loop
sti
mov
mov
data16
jne
add
shrl
jp
sub
movsl
out
cmp
xor
popa
outsb
insb
adc
les
lret
fcompl
bound
jmp
jno
jg
lret
movsl
inc
js
sbb
xchg
ja
and
adcb
cli
in
push
cmp
inc
cwtl
add
fnstsw
xor
add
pop
enter
leave
lods
mov
mov
mov
jmp
aaa
popf
mov
mov
add
scas
in
imul
shll
out
js
cmp
adc
sbb
dec
lea
insl
push
jg
sbb
xlat
es
hlt
add
mov
cmp
cmovs
jb
mov
outsb
jno
add
notb
pop
or
push
in
test
jmp
or
fucom
mov
shrl
mov
pop
cmpsb
repnz
hlt
fisubrs
lods
dec
pop
push
dec
jns
fcoml
call
rorb
pop
jmp
jno
or
pop
dec
adc
jne
add
dec
dec
mov
or
dec
les
push
call
adc
xchg
dec
adc
insb
adcb
xchg
lods
adc
push
lret
in
sti
stc
out
repnz
jle
mov
clc
and
dec
mov
sete
loopne
mov
push
mov
mov
inc
sarl
lahf
dec
nop
xchg
push
out
cmc
test
mov
and
inc
out
movsb
imul
into
sbb
icebp
pushw
mov
cs
xor
sahf
xor
fsubs
in
into
or
and
mov
loopne
mov
cmpsb
gs
addb
testb
add
idivl
pop
ds
pop
daa
jmp
enter
cmp
adc
dec
inc
xlat
push
stc
jmp
lods
arpl
lock
jmp
mov
add
xchg
insl
std
mov
adc
inc
xor
sub
or
sbb
sbb
push
scas
setno
lcall
sub
pop
sub
or
pop
push
mov
mov
sbb
mov
fstpt
lahf
ret
inc
fildl
cmp
nop
pop
scas
jge
and
imul
cld
pop
add
shll
cmpl
mov
ds
loope
das
outsb
jbe
idivl
xlat
ja
cmp
xor
aas
sbb
dec
nop
dec
fucom
ja
insl
cmp
js
mov
aam
jmp
inc
cwtl
mov
pop
mov
jle
rol
sbb
mov
fisubl
push
cltd
hlt
das
in
cmp
add
out
fstpt
addb
xchg
int3
les
adc
rcll
xor
or
pop
subl
and
pop
ljmp
mov
lods
adc
xchg
adc
cmpsb
lds
repnz
mov
sbb
add
xor
imul
pop
push
and
repz
ret
cltd
inc
cli
adc
mov
inc
clc
lock
push
push
outsb
scas
adc
sub
aas
fs
xchg
pop
pop
dec
sub
cwtl
sbb
nop
push
xor
cwtl
cwtl
dec
sub
cmp
mov
dec
sbb
inc
jne
push
enter
rclb
mov
out
sbb
sub
jg
pop
mov
sbb
testb
pop
sbb
ret
popf
mov
out
cld
sbb
outsb
pop
pop
sbb
das
jle
jnp
test
inc
test
in
mov
mov
push
push
adc
or
popl
hlt
adc
inc
dec
mov
jmp
pop
mov
fcompl
sti
mov
cs
out
cwtl
pop
pop
pop
pop
mov
sub
cmp
les
cmp
fiadds
or
pop
adc
test
je
sub
sub
loope
enter
cmpsb
in
sarb
scas
in
sub
loopne
jg
insb
mov
stos
xor
ljmp
pop
ret
cltd
gs
push
mov
add
gs
les
sub
in
mov
push
xor
mov
push
mov
bound
ret
mov
shrb
out
and
ja
jo
fidivrs
pushf
xchg
xlat
cmc
ss
fcmovbe
int3
and
cmp
inc
inc
arpl
cmpb
and
xor
aas
and
mov
dec
xchg
lods
push
xchg
cmp
cwtl
pushf
fwait
jnp
push
jns
mov
rcrb
jp
pop
lods
rcll
mov
add
cmp
into
push
mov
dec
ljmp
and
pusha
int3
and
pop
aaa
mov
in
dec
lret
xor
sub
dec
mov
mov
nop
fcmovnu
dec
das
sbb
out
mov
dec
outsl
or
les
pop
sti
push
xor
arpl
out
add
jl
popa
shlb
mov
mov
stc
inc
inc
pop
shll
mov
pop
dec
pushf
in
pushf
rclb
movsb
xor
testl
sbb
sti
outsb
int
ret
or
mov
shr
mov
mov
jp
sub
clc
cmpsb
insl
inc
mov
mov
dec
sahf
push
lock
mov
js
mov
push
mov
into
out
ficoms
jmp
pop
jno,pn
xchg
mov
and
out
mov
mov
out
lods
and
or
andb
mov
int
das
mov
xchg
jg
add
sahf
loope
sbb
imul
pop
inc
bound
add
repnz
xchg
repnz
lcall
xchg
dec
not
jne
pop
out
outsb
fs
inc
ret
loop
mov
fisttpl
xchg
mov
fdivs
loope
push
xor
jo
mov
out
ret
mov
lret
xchg
lock
pusha
fiaddl
das
lahf
hlt
jl
cltd
clc
add
pop
fs
xor
loop
ss
idivl
mov
outsb
jmp
mov
cmpsl
das
inc
fsubl
test
test
stos
lret
mov
sbb
repnz
rclb
lock
imul
sbb
lret
sub
mov
stos
daa
xchg
xchg
fadds
fnstsw
dec
js
cmc
in
pop
jecxz
push
push
leave
xor
pushf
andb
in
fbld
insl
insl
cmp
jns
aad
xchg
hlt
adc
cmp
inc
das
js
sub
jae
je
mov
cmp
xchg
or
insl
into
xchg
movb
fucompp
and
sbb
sub
push
cmp
mov
fs
jno
inc
mov
cltd
sar
cli
dec
ret
mov
jp
mov
inc
imulb
imul
pop
es
inc
pop
testb
enter
adc
adc
lock
out
pop
cmp
aam
adc
loopne
fldt
cli
xor
push
test
pop
cmp
mov
sbb
xchg
inc
popa
or
mov
inc
mov
hlt
stos
ja
mov
mov
lret
hlt
adc
fdivr
jle
arpl
cwtl
lret
jb
enter
aam
out
push
test
scas
insb
xlat
jno
and
xor
adc
insl
fmuls
mov
stc
jnp
aaa
push
pop
jge
out
fnstenv
pop
rorb
cs
addr16
mov
xchg
dec
dec
dec
lret
fmulp
xorb
loopne
xchg
dec
sbb
jle
ret
in
xchg
dec
int
shlb
call
pop
lock
add
sub
das
push
clc
mov
or
inc
pop
and
mov
cmp
test
pop
pusha
call
fnstcw
lds
in
push
cwtl
jb
test
inc
and
mov
xor
negb
arpl
sti
loop
xchg
xchg
push
lret
cmp
lahf
mov
mov
jnp
addr16
enterw
in
popf
je
repnz
pusha
mull
adc
sub
or
and
sar
dec
fildll
dec
popf
mov
mov
xor
clc
nop
out
push
jmp
pop
in
icebp
lock
jne
push
loop
arpl
and
in
and
fdivl
add
aad
in
les
test
pop
jae
decl
mov
int3
cmc
mov
cmpsb
dec
sbb
mov
dec
pop
shll
cmp
fldt
out
mov
adc
scas
enter
sbb
lret
jbe
inc
sub
leave
sub
outsl
xchg
add
pop
shll
adc
lock
dec
push
push
fisttpll
cmp
and
cmp
mov
into
mov
bound
xor
std
outsb
push
dec
cmp
inc
mov
or
js
popf
mov
xchg
test
push
stos
xchg
aas
inc
jmp
test
movhps
test
loop
mov
inc
and
dec
popf
enter
lds
test
jl
lds
lock
les
cli
imul
add
pop
out
xlat
push
push
outsb
nop
inc
pop
leave
mov
fisubl
negb
mov
ja
or
js
cmp
iret
sub
lahf
loope
and
test
divl
add
push
inc
sar
jo
cli
ret
push
push
mov
test
jns
cmp
lods
sub
mov
mov
sbb
or
outsb
mov
inc
data16
jge
xchg
adc
mov
pop
aas
loop
rolb
jnp
mov
jo
bound
push
jns
int
or
adc
hlt
testb
dec
add
mov
cmp
and
enter
xchg
inc
repnz
insb
leave
xchg
lods
xor
mov
sbb
mov
es
cmp
test
imul
testb
icebp
xor
add
fs
mov
lret
pusha
xchg
orl
sub
mov
faddl
imull
adc
popf
push
out
gs
mov
dec
xchg
sti
insl
int
mov
clc
xchg
push
mov
or
pop
sbb
and
pop
sbb
lret
xchg
loopne
xchg
jb
les
or
cmp
cmc
push
xchg
fwait
adc
clc
iret
dec
xorl
ja
sub
lods
mov
lds
push
scas
xlat
dec
adc
imul
lcall
push
lret
mov
je
cld
in
popa
inc
mov
int
pusha
mov
insb
ds
out
data16
lods
add
loop
loopne
int3
cli
addb
pop
jge
push
cmpsb
std
ret
inc
sub
mov
insl
xchg
pop
mov
clc
mov
dec
imul
jle
jle
fwait
jmp
jp
aad
and
cmp
push
cvttps2pi
and
movsl
aam
pop
dec
cwtl
or
xchg
xchg
xchg
fbstp
adc
int
es
sub
mov
icebp
push
dec
jmp
sub
std
jne
mov
jnp
xor
push
mov
dec
mov
in
ja
mov
inc
inc
jp
hlt
test
mov
fsts
jp
enter
dec
jmp
fmull
popa
out
pop
push
xor
xchg
ja
xchg
lcall
cmp
add
in
push
pusha
ret
sub
sub
fstl
dec
xor
fdiv
int3
fildll
out
lods
adc
mov
sbb
fwait
mov
lods
sbb
insl
cmpb
pusha
push
push
sub
ret
adc
add
mov
nop
push
cs
ja
add
sbbl
idivl
push
fldcw
loopne
mov
sbb
mov
push
inc
mov
jge
leave
adc
xchg
mov
retw
sar
mov
push
in
dec
xchg
mov
sbb
add
pop
daa
dec
mov
push
lahf
enter
push
sub
bound
les
test
subl
mov
decb
jb
jae
push
stc
pop
dec
push
movl
nop
sbb
inc
xchg
xor
fwait
jecxz
fistpl
fists
out
fs
daa
fsubl
or
loopne
push
xchg
mov
sti
mov
mov
ss
ret
push
test
pop
and
cmpsb
pop
dec
test
pop
aad
arpl
div
cmp
pop
cmp
cmpsb
xor
jnp
inc
divl
scas
insb
dec
addr16
cli
ja
push
les
adc
and
scas
daa
pushf
stos
leave
aas
hlt
inc
jle
and
stc
icebp
mov
push
das
mov
sub
into
xor
std
stos
imul
aaa
add
cwtl
sub
ja
adc
mov
mov
pop
inc
sarb
movsb
sbb
loop
xchg
pop
mov
lods
sbb
lret
repz
cwtd
jmp
shll
shl
xchg
add
fcmovnb
adc
cs
xchg
adc
jecxz
jno
lret
ret
pop
cld
jg
sbb
clc
das
adc
and
adc
into
les
pop
xor
mov
jecxz
mov
iret
rcl
adc
or
js
inc
dec
dec
inc
jae
into
inc
lea
into
mov
cmp
xchg
xchg
repnz
push
jo
sbb
inc
ljmp
xor
movsl
int
aam
int
cltd
push
lock
add
in
jecxz
mov
dec
fdivl
ds
or
mov
loope
adc
mov
jle
mov
mov
mov
das
testb
outsb
push
lret
mov
pushl
inc
es
out
aad
jns
in
xorb
daa
sbb
stc
mov
mov
pop
sub
btr
sub
sub
push
insb
mov
pop
es
data16
cmpsb
in
orb
inc
test
inc
je
xchg
and
imul
scas
sbb
dec
ret
xchg
push
loop
jno
movsl
sbb
jo
popf
cmpsb
ret
or
out
or
int3
out
jnp
loope
call
ds
sub
shll
jae
mov
sahf
cmp
xchg
adc
push
or
mov
xchg
das
lret
aaa
ja
in
or
insb
xlat
push
or
jl
add
cmc
xlat
fstpl
xorl
sub
xchg
mov
pop
cmpsl
das
adc
xchg
sbb
enter
mov
mov
ss
int
shrl
scas
xchg
je
js
lods
cmpsb
xchg
mov
lahf
mov
xlat
imul
inc
outsb
in
lods
push
insl
addr16
iret
mov
das
sub
outsl
sahf
jnp
fldl
push
mov
jp
jnp
fldenv
mov
xchg
pop
cmp
pop
mov
call
rorl
jno
mov
sbb
loopne
mov
dec
adc
or
insl
jecxz
js
insl
mov
pushf
sbb
ds
arpl
inc
inc
imul
and
in
cmpsl
data16
cmp
cmc
idivb
inc
xchg
cli
aas
fmul
repz
mov
add
lcall
adc
or
cmpsl
and
fisttpll
fs
pop
pop
dec
aas
lods
gs
imul
aas
push
push
jns
or
lea
ss
jmp
sub
push
std
fsubl
ret
clc
test
cmp
add
lds
movsb
test
add
in
lcall
xorb
in
add
loop
outsl
rcrb
xor
jg
inc
cmp
mov
xchg
fs
cmp
jbe
mov
jae
adc
mov
clc
fwait
mov
mov
xchg
sahf
pop
push
cwtl
daa
pop
xchg
sub
inc
scas
pop
push
push
dec
mov
sub
xchg
fwait
les
inc
test
ret
pusha
and
or
addb
mov
in
cmp
ds
filds
shrl
pop
aas
and
je
aaa
sub
jle
ret
mov
mov
popf
push
mov
push
aas
movl
lods
xor
mov
bound
scas
cmpsb
imul
clc
pop
sub
into
loopne
mov
addr16
adc
inc
fldenv
add
xor
aas
jge
sbb
arpl
pop
sbb
push
sub
or
imul
xchg
imul
insb
jnp
imul
jnp
hlt
pop
inc
shlb
push
sti
or
sbb
je
xor
stos
nop
push
arpl
or
ss
sbb
repz
sbb
dec
in
or
push
xchg
jg
or
push
mov
dec
sti
push
pop
xchg
adc
inc
add
add
jg
mov
imul
outsl
push
repnz
push
repz
test
xchg
jecxz
lahf
add
xor
cmp
mov
xchg
push
xor
das
mov
std
loope
xchg
ljmp
mov
or
mov
shrb
sub
push
sbb
mov
jns
jne
out
or
addr16
ret
loopne
inc
jnp
dec
pop
add
repz
icebp
cmp
xchg
mov
cli
jp
lret
add
ljmp
mov
adc
sbbl
dec
inc
xchg
subl
dec
push
jge
out
dec
int3
mov
xor
orl
xchg
dec
dec
lret
pop
ljmp
sbb
mov
xchg
into
mov
dec
clc
dec
cmp
adc
jl
addr16
mov
loopne
and
mov
pop
mov
cmp
or
mov
or
aas
add
push
jmp
test
push
xchg
fxch
lds
add
ljmp
cld
rolb
js
fwait
out
pop
push
or
lahf
add
arpl
sbb
in
cwtl
mov
in
lret
arpl
fdivrp
lahf
aas
adc
inc
inc
push
in
jl
jns
push
orl
rdpmc
imul
xchg
scas
movsl
jle
scas
clc
in
cs
push
mov
in
lea
mov
add
inc
dec
mov
add
xchg
pop
test
push
bound
sub
jne
and
shrl
inc
cmp
jae
aas
call
push
imul
pop
or
dec
shlb
push
inc
ljmp
cmpl
fcom
testl
or
xor
sub
fwait
lds
ret
aaa
ret
sub
sub
std
adc
xchg
stc
in
mov
pop
fists
popf
or
call
jecxz
mov
sub
mov
and
les
outsl
sahf
jb
cmpsb
pushf
pop
addb
dec
inc
cmp
ret
loopne
pop
imul
push
or
in
mov
xchg
ret
xchg
sbb
outsl
sub
adc
jmp
dec
loop
mov
ljmp
xlat
or
out
inc
std
xchg
enter
test
xchg
xor
arpl
iret
mov
in
adc
das
das
adc
push
mov
and
cwtl
fisttps
leave
and
jo
iret
rol
cmpsl
cmc
les
jae
dec
aas
mov
popa
mov
into
hlt
xor
pop
mov
incb
clc
sbb
cmpsl
out
and
dec
add
test
cmc
mov
xor
aam
pop
push
je
scas
std
fildll
and
mov
xchg
and
push
pop
ja
jnp
into
aam
mov
inc
cwtl
data16
sub
imul
inc
loopne
out
sbbb
std
je
sbb
jns
das
sub
insb
out
inc
jecxz
sbb
sub
add
sub
jo
mov
jns
mov
arpl
enter
out
xor
aaa
mov
enter
xchg
pusha
inc
jecxz
loope
cmc
mov
mov
jnp
stos
loop
mov
ljmp
jg
mov
mov
test
or
loopne
mov
lretw
sub
cmp
daa
xchg
jmp
cs
fildl
mov
or
or
add
and
pop
adc
test
fldenv
aas
pop
sbb
adc
sbb
test
mov
cwtl
loopne
mov
pop
aaa
mov
sub
imul
stc
xor
or
std
adc
jmp
push
cmp
in
ss
mov
xchg
gs
cmp
fcoml
or
sbb
cs
sbb
daa
pop
jp
push
cmpsl
dec
in
jl
and
mul
adc
dec
enter
jbe
dec
insb
imull
cmpsl
cmpsb
iret
test
lahf
into
sub
jbe
dec
jo
fcmovbe
fstl
mov
fwait
ret
add
das
enter
nop
sub
mulb
add
lock
fistps
cld
outsb
in
sbb
xor
movsl
pop
adc
push
push
paddb
in
loope
shrl
lcall
dec
mov
xor
or
adc
sbb
inc
popf
incb
lds
movsb
arpl
mov
movq
pop
xor
dec
sbb
xchg
sub
rcr
call
mov
ds
xlat
adc
jg
cltd
repz
in
loop
fistl
or
jo
and
and
orb
push
sub
mov
leave
out
jns
loop
add
push
pop
push
inc
inc
cld
inc
pop
and
sbbl
mov
dec
das
ret
mov
pop
movsb
add
clc
mov
adc
idivb
sti
stos
movsb
lods
mov
xchg
movsb
push
ret
fildll
test
add
add
xor
fdivrl
cmpsb
cmp
aaa
dec
pop
sbb
orb
pop
or
cmpsb
sbb
xor
lret
dec
fidivrs
das
lock
imul
test
dec
je
hlt
and
out
fdivrs
movsl
jns
push
das
pop
dec
fisubrl
clc
in
movsb
push
idivl
insl
pusha
inc
mov
cli
xchg
jle
push
inc
xor
mov
and
xor
out
mov
xlat
dec
imul
sub
mov
popf
mov
mov
mov
daa
mov
out
sti
loop
cwtl
stc
or
notb
add
pop
mov
dec
add
xor
in
fbstp
mov
dec
push
std
push
mov
sbb
lret
and
in
std
xchg
sub
popa
push
cltd
ja
jne
jns
xor
sub
lds
push
fcompl
insb
pop
cs
pusha
and
cltd
stc
xchg
xchg
pop
mov
jno
leave
xor
xchg
mov
push
cmp
mov
sub
subb
fildl
adc
sbb
xchg
les
pop
stc
inc
loop
sub
adc
jp
fimull
movb
mov
mov
or
insb
pop
add
xor
cli
mov
in
imul
xchg
xor
xor
mov
mov
jle
fsubl
lret
mov
scas
push
xchg
scas
dec
repz
das
testb
jae
mov
mov
xchg
cwtl
jno
xchg
fs
mov
rolb
xchg
movsb
pop
fisubrs
mov
mov
or
inc
xor
mov
int
andb
mov
std
fmulp
mov
je
push
shlb
adc
mov
stc
fsubs
cli
inc
cmp
mov
loopne
mov
inc
aad
xor
ja
insl
icebp
jns
add
push
out
inc
imul
pop
dec
iret
cmc
and
into
push
stos
or
mov
push
sbb
fdivp
test
out
test
insb
enter
xchg
push
ljmp
rcrl
fildl
pusha
cmp
lret
inc
es
fs
jge
test
mov
sbb
mov
daa
scas
push
cld
and
sub
shll
mov
jmp
dec
pusha
inc
push
shrl
push
aad
jbe
and
push
xchg
cwtl
dec
int
les
icebp
cs
xchg
cli
pop
movsl
and
and
fidivs
xchg
aam
loope
push
jle
enter
ljmp
jge
lea
bound
rcll
pop
out
sub
scas
cltd
pusha
cwtl
jae
aad
sbbb
addr16
jo
aaa
shrl
aas
dec
push
out
mov
and
test
xor
xchg
inc
fwait
lahf
test
mov
pop
sbb
mov
adc
mov
cmc
imul
sbb
jno
int
sbb
pushl
jecxz
daa
push
inc
dec
xchg
pop
or
nop
push
fcomp
dec
pop
push
inc
or
or
inc
push
paddw
jae
xchg
test
ss
dec
ret
push
mov
aam
push
adc
sbb
fldl
insl
dec
mov
lods
jmp
icebp
sub
aas
ja
xorl
cld
fisubs
jbe
fnstenv
insl
jmp
sbb
push
inc
pop
cmpsl
outsl
int3
leave
fildll
sub
es
jge
xor
and
mov
insl
cwtd
pop
lret
xchg
rorb
adc
push
rclb
sub
scas
push
nop
data16
sarl
ret
repz
cld
pop
aad
out
add
cmp
mov
adc
pop
xlat
sbb
outsl
idivb
jp
fildll
into
cmp
repz
sub
ja
lret
sub
adc
popa
loope
sub
movsl
fdiv
sbb
mov
mov
jmp
jg
out
pop
and
mov
mov
js
ljmp
in
aas
sub
mov
std
adc
ss
cmp
call
sub
dec
enter
ds
lahf
mov
dec
cld
aad
push
sti
gs
xor
jecxz
pop
and
mov
add
sub
adc
and
mov
inc
das
ret
pop
or
xchg
ffree
xchg
das
les
pushl
jne
pushf
pop
int3
adc
fistpl
into
dec
jmp
stc
mov
sbb
add
data16
cmp
push
adc
sbb
out
pop
mov
mov
pop
jno
stc
push
lahf
jne
insl
pop
or
leave
jge
popf
test
clc
xchg
jmp
or
leave
in
and
icebp
mov
xor
mov
incb
pop
orb
adc
stc
inc
rclb
push
sbb
hlt
pop
mov
xor
mov
pop
flds
cmp
nop
sti
xchg
pop
cmp
inc
mov
cltd
adc
push
fsubrs
stos
xor
mov
mov
push
inc
nop
nop
inc
cmpsl
shll
shlb
adc
and
add
push
cmovs
bound
enter
xchg
mov
enter
mov
hlt
inc
mov
ret
shrb
lret
fstps
sub
and
sti
repnz
xorl
bound
shrl
pusha
incb
inc
lds
cmp
cmp
sti
sarl
dec
sar
iret
fstps
add
dec
pop
mov
pop
test
pop
cwtl
loopne
cmpsb
push
adc
es
jge
mov
xchg
xchg
fcompl
mov
orl
jg
cmp
arpl
repz
mov
push
mov
loopne
mov
sbb
xchg
mov
mov
mov
std
call
subl
inc
or
xchg
sbb
ret
aas
into
fcoms
imul
xlat
dec
xor
leave
out
mov
jbe
enter
mov
xchg
or
repnz
shl
jnp
js
or
and
add
push
pop
or
xor
cld
mov
add
fimull
inc
jmp
bound
notb
inc
jmp
inc
shll
dec
cmp
push
fsts
mov
out
in
cltd
pop
dec
loop
aas
and
cmpb
fstpt
pop
movb
divb
sbb
jecxz
ret
inc
sub
push
sbb
adc
inc
or
pop
nop
sti
lods
xchg
aas
adc
aaa
push
mov
add
mov
imul
add
lods
xchg
inc
scas
jl
sub
pop
jb
pop
aaa
inc
mov
or
iret
js
sbb
fadd
repnz
lcall
xor
cmp
jle
add
cltd
xlat
jne
mov
inc
push
aaa
movl
lea
or
ja
adc
inc
pop
stc
out
ss
jl
pop
cld
in
clc
or
js
jp
mov
ret
mull
push
rorl
clc
jae
fdivrl
loope
data16
sahf
cvtps2pd
inc
inc
pop
ds
mov
popf
mov
pop
sbb
mov
cli
mov
into
jo
cli
enter
rclb
fstl
fmuls
loope
inc
gs
outsb
sbb
adc
pop
int3
or
lret
add
mov
cmp
ret
pop
cmp
sbbl
pop
insb
int
fcompl
mov
xchg
xchg
adc
mov
or
jb
mov
fs
out
in
mov
inc
push
outsb
dec
leave
jge
out
mov
inc
fwait
dec
or
push
ljmp
icebp
sbb
add
fnsave
cmp
out
cmpsb
inc
lods
and
dec
push
add
shr
xchg
js
fldl
jp
mov
in
mov
jae
xor
mov
popl
jb
scas
and
and
push
mov
mov
data16
pop
scas
mov
mov
pushf
xor
sti
pop
mov
or
orl
cmp
ljmp
push
jecxz
and
push
and
xchg
lock
mov
das
test
inc
xchg
pop
aam
mov
pop
incl
cwtl
jmp
push
inc
cvtps2pd
pop
mov
pusha
mov
xchg
adc
inc
repnz
sub
nop
addr16
aas
mov
mov
jle
mov
dec
enter
push
adc
dec
aas
movb
insb
cmp
push
mov
icebp
cmpsb
and
call
push
ja
jl
and
test
arpl
adcb
rorl
sub
std
cmp
sbb
loop
hlt
xchg
cmp
hlt
mov
cmp
adc
enter
insb
leave
sub
cmp
mov
pop
ds
daa
repz
dec
sbbl
shl
clc
mov
xor
aam
sub
add
jp
inc
pop
adc
xlat
dec
mov
xor
xchg
inc
sbb
sti
pop
hlt
cmp
mov
int
in
adc
push
jne
adc
out
push
inc
imul
sbbl
dec
mov
imul
lret
jecxz
cmp
pusha
xchg
push
jb
pop
loop
pop
xchg
jmp
add
stos
xchg
jne
fdivrs
fs
fstps
add
scas
xchg
loopne
arpl
inc
fistps
pusha
ds
fiadds
cwtl
mov
and
lcall
jle
xor
xchg
stos
idivl
jo
mov
sbb
mov
xchg
adc
cmp
sub
test
aam
out
sub
out
das
and
xor
add
xchg
test
or
cmpsb
bound
sub
push
sub
add
ja
in
dec
inc
adc
add
idiv
mov
jl
and
sub
fbld
insl
cmp
pop
into
leave
cmp
inc
lods
cwtl
les
mov
rcll
outsb
inc
sub
xchg
push
mov
fstl
add
cmpsl
test
push
das
aad
jnp
inc
fsubl
mov
ret
bnd
call
sub
lods
push
mov
stos
mov
gs
test
aam
xchg
pushf
xchg
pop
inc
std
pop
outsl
sub
xchg
int3
push
xchg
and
jge
imul
mov
push
fnstcw
leave
imul
sbbb
jge
mov
iret
jbe
ss
ret
sub
cli
hlt
sbb
fistps
in
inc
push
pop
dec
and
adc
sahf
mov
bound
and
into
mov
sub
pop
jmp
lret
loopne
mov
aas
lock
inc
and
fisubrl
leave
pop
pop
and
mov
lods
aad
shlb
mov
rsqrtps
sti
pop
mov
mov
inc
sub
push
aaa
insl
or
pushf
xchg
mov
into
cmpsl
lret
pop
ja
lods
lahf
out
jns
cmpsl
imul
sub
xabort
sbb
sbb
les
jp
aaa
adc
pop
ss
call
xchg
adc
test
mov
mov
bound
xor
jbe
cltd
imul
or
sub
push
daa
pop
adc
pushf
cli
in
mov
inc
mov
int3
lahf
mov
pop
add
dec
iret
repnz
adc
push
inc
scas
jmp
adc
insl
idivb
dec
push
adc
leave
lods
adc
xchg
in
fdivp
into
out
mov
jns
or
pop
cltd
shl
les
insb
xchg
sub
sub
fcmovnu
mov
mov
fsubrl
idivl
gs
les
mov
pop
pop
sbb
adc
mov
ja
flds
stos
fldt
or
loopne
dec
loop
movsl
repnz
push
inc
aad
pop
cmp
adc
xchg
cld
mov
and
sbb
aas
arpl
push
pop
adc
pop
fisttps
jbe
push
subb
sub
arpl
lcall
push
movsl
mov
jle
sbb
dec
push
cmpsb
repnz
jp
jp
sub
or
dec
xchg
or
mov
test
std
enter
sub
rcr
mov
jecxz
icebp
repz
sub
je
or
call
cmpsb
shl
mov
xor
das
pop
cmp
sub
loope
cmp
sbb
data16
sbb
push
ret
cwtl
aas
test
jl
mov
xchg
in
pop
sbbb
in
sub
sub
loop
js
dec
jge
fs
pop
mov
push
inc
or
dec
sbb
sub
sub
cmpsl
mov
mov
int
dec
leave
ljmp
add
and
mov
xor
push
out
sbb
pop
scas
adc
mov
mov
mov
out
rorl
shl
or
cmp
dec
xor
cwtl
inc
sarl
aad
dec
loopne
sbb
xor
lcall
gs
or
cld
xchg
sub
or
mov
rclb
std
stos
stos
jae
mov
mov
mov
icebp
push
enter
daa
pop
mov
sbb
imul
pop
adc
paddd
out
sub
jbe
jecxz
push
imul
clc
fistps
js
addb
scas
je
mov
push
jnp
scas
mov
adc
adc
add
inc
out
push
scas
inc
xorb
add
jae
cmp
mov
cmp
stos
test
mov
xchg
mov
and
lret
in
adc
pop
faddl
jmp
aas
sahf
mov
or
clc
std
cmc
dec
push
lret
stos
sbb
lahf
lock
scas
cltd
adc
mov
cs
aaa
imul
push
mov
rcrl
xlat
xchg
scas
sbbb
call
ret
xchg
and
add
mov
pop
cs
pop
int
call
popa
sbb
mov
mov
aad
lea
ja
orb
mov
pop
out
test
fwait
sbb
dec
cli
adc
adc
xchg
mov
mov
imul
xchg
mov
andl
fldcw
or
out
lcall
and
ljmp
xor
mov
dec
scas
mov
mov
xor
js
xchg
lea
xchg
and
xor
sarb
sahf
sbb
cli
dec
mov
jl
cmc
cmp
xchg
popf
popf
add
imul
cmpb
sub
adc
test
jae
sbb
test
ss
daa
inc
xchg
lahf
xchg
ret
rclb
loopne
arpl
push
jge
jmp
jg
fimuls
lret
testl
add
cmpsl
loop
popf
addl
dec
stos
mov
ret
cmpb
dec
add
scas
mov
adc
popa
push
icebp
jb
in
lock
xchg
sarb
in
ljmp
inc
test
sbb
outsb
cmp
adc
jb
fst
mov
xor
filds
cli
mov
gs
fildl
popf
cmp
aad
mov
or
lea
imul
xor
jns
pop
inc
mov
xchg
xor
out
or
push
rorb
push
aad
dec
push
add
add
mov
pop
imul
std
fistpll
push
addr16
pop
pop
jmp
pushf
cmc
js
mov
xchg
or
adc
jne
jnp
pop
dec
stos
cwtl
mov
sub
push
mov
pop
fdivp
add
pop
fistpl
xor
mov
in
push
xor
mov
adc
repz
push
jae
dec
imul
aam
mov
push
mov
inc
imul
cmpsl
ret
lahf
jno
add
mov
adc
and
jl
mov
out
fsubs
mov
mov
mov
outsl
ret
cmp
adc
dec
addr16
aad
cli
add
cmpb
repz
mov
pop
inc
inc
leave
cmc
sbb
inc
pusha
sub
jl
xchg
mov
mov
mov
mov
dec
inc
ret
es
push
mov
ficoml
pop
pop
mov
idiv
orb
lahf
mov
pop
insl
mov
add
fwait
lea
pop
fldenv
cmp
iret
add
cmp
movsl
insb
xchg
jb
sub
inc
xchg
and
iret
fs
call
inc
mov
fsubrl
addl
flds
inc
or
insl
addr16
jb
ret
sbb
inc
les
or
add
xchg
mov
cmp
ljmp
lahf
push
cmp
and
cmc
cmp
cmp
jb
iret
xor
adc
xchg
push
out
pop
shll
movsl
and
push
ret
inc
xadd
xchg
jp
jo
xorl
dec
inc
and
cmp
xchg
mov
inc
dec
xchg
lret
pop
dec
push
pop
cld
push
iret
in
xor
bnd
cmc
fisubs
and
negb
stc
rolb
cmp
repz
in
data16
cwtl
aad
std
adcl
adc
xchg
cmc
fists
push
xchg
ja
mov
mov
loop
mov
mov
inc
dec
cmp
mov
lods
mov
mov
pop
lret
mov
xor
test
sub
das
sub
addr16
xchg
xor
jbe
or
jbe
data16
inc
sti
or
js
mov
call
das
mov
shr
cli
xchg
inc
add
or
and
call
sbbb
outsl
xchg
sub
ret
out
shr
std
xchg
cmp
test
repnz
mov
mov
pushf
lea
mov
and
cmp
fxch
cli
push
add
ljmp
notl
pop
pop
and
lods
jns
lods
cmc
add
fdivr
xor
xor
xor
subb
loopne
mov
outsl
xchg
fadds
jns
dec
cmp
cli
push
mov
dec
and
fcoms
mov
or
lret
sub
mov
cli
push
popa
adc
js
and
and
mov
adc
sbbb
out
push
rcrl
daa
es
jle
pop
pop
pop
out
jo
adc
add
int3
cmpsb
add
fsts
pop
subl
xor
je
mov
mov
mov
aas
popf
pop
je
and
in
test
aas
in
lret
mov
pop
inc
xor
jae
dec
data16
sbb
out
int
test
xor
dec
pop
xchg
pop
insb
aas
ud1
stos
ss
adc
push
dec
stc
mov
add
in
imul
imul
scas
test
pop
inc
std
movsb
add
inc
and
cmpsb
push
mov
jecxz
sub
push
and
scas
lret
mov
cmp
push
pop
call
jnp
imul
push
inc
cmpsl
jno
jo
stc
aad
jecxz
dec
pop
xorl
out
fs
outsb
lock
lods
cli
sbb
lods
cmp
js
jbe
mov
int
jmp
fldl
mov
xchg
cmp
xor
or
dec
xchg
movsb
inc
sbb
inc
add
cmc
cwtl
push
mov
fists
cmp
aam
xchg
imul
xchg
cmpsb
fidivrl
or
mov
mov
popf
xlat
inc
fistl
loope
adc
push
cwtl
xchg
inc
sbb
jmp
mov
nop
in
mov
insl
scas
pop
push
push
jmp
jo
adc
call
mov
lds
cli
mov
testb
inc
push
loopne
add
fimuls
mov
pop
jp
stos
insb
sahf
std
scas
leave
rolb
aaa
icebp
pop
outsl
stos
xor
cltd
add
xchg
xor
or
sub
sub
cmpsl
cmp
loopne
sub
mov
rcrl
mov
jno
out
outsl
pop
and
je
mov
xor
subb
or
push
cmp
movsl
jns
loopne
jbe
mov
mov
jae
push
out
sub
fstpl
cmp
das
repnz
cmp
cltd
lea
ret
push
fists
mov
lock
adc
push
or
jge
pushf
and
jmp
xor
fadds
popf
and
enter
int3
inc
dec
mov
rcll
mov
dec
mov
lds
sub
mov
arpl
or
mov
pop
xor
mov
mov
mov
mov
sar
xchg
in
sbb
arpl
add
int
hlt
aad
or
cld
sub
fiadds
sub
mull
dec
or
mov
cmpb
cld
incl
xor
sbb
stos
popa
cmpsb
scas
rolb
js
sahf
adc
js
cmp
pushf
mov
mov
mov
adc
xlat
mov
adc
arpl
movsb
inc
cs
jae
dec
fs
test
inc
or
test
xlat
mov
lea
add
jnp
mov
out
xchg
mov
ja
xor
js
ds
in
fwait
and
adc
test
mov
cmpsl
imulb
adc
outsl
pop
test
xchg
mov
cld
jnp
stc
dec
xchg
idivb
dec
aas
push
inc
fisubrs
mov
xor
sub
sarb
ror
orb
icebp
jmp
lcall
jb
int3
push
cli
fcompl
out
jne
adc
mov
insl
xchg
add
add
jns
xorb
movsb
mov
mov
sbb
adc
orb
sbb
jne
inc
sarl
pop
mov
jmp
mov
mov
ds
push
xchg
subb
std
inc
repz
out
jl
xlat
dec
push
gs
cmp
cmpsl
sbb
xchg
push
lret
int
hlt
leave
nop
ret
cmp
in
cmp
test
push
call
mov
adc
push
loopne
cmpsb
sub
xchg
into
dec
cmc
insl
push
jg
and
sub
push
sarl
out
inc
stos
or
mov
lds
push
fcmove
cmp
sub
jae
lret
mov
sub
and
lcall
jmp
mov
inc
jnp
cmp
push
ljmp
scas
mov
jns
xlat
pop
push
inc
ljmp
cli
mov
aam
pop
and
popf
out
cltd
inc
test
xor
je
pop
xchg
testb
dec
pop
xor
xchg
pushf
mov
mov
sbb
cmp
or
pop
dec
jg
mov
adc
ror
xchg
and
jb
iret
adc
test
jnp
loope
xor
and
dec
pop
dec
sub
mov
les
lret
mov
mov
lea
cmc
shrl
dec
adc
daa
int
push
cltd
add
decb
imul
ret
sub
loope
call
lods
xchg
or
lds
stc
sbb
in
shr
in
and
dec
inc
dec
inc
orb
pop
arpl
jb
mov
jo
xorb
ds
insl
lahf
fstps
mov
xor
mov
mov
mov
xor
cmp
mov
dec
mov
cmp
mov
insl
sub
mov
ljmp
mov
dec
mov
jno
dec
ficoml
pop
test
test
and
inc
lret
adc
mov
movsl
sbb
in
gs
jl
jl
cwtl
sbb
pop
push
cli
pop
xchg
adc
xchg
fcoml
arpl
mov
cmp
and
or
outsb
ret
mov
pop
pop
ds
jae
enter
xchg
pop
jns
nop
xor
adc
mov
adc
xor
jns
imul
sub
scas
fld
fldenv
sbb
sub
and
pop
sbb
fistps
add
gs
repz
sahf
shll
das
fidivrl
movsl
ds
dec
add
cmp
rcll
lret
int3
or
jmp
jae
xchg
out
cmp
imul
in
mov
sbb
jle
idivb
jbe
arpl
and
xor
push
insb
sbb
imul
lret
push
clc
dec
inc
cmp
loopne
rolb
aaa
jno
out
inc
and
test
and
pop
movsb
cmpb
fiadds
or
mov
cld
sahf
or
dec
jnp
in
mov
mov
mov
cmp
cwtl
jb
xorl
pop
sbb
jmp
mov
fisubs
stc
in
cmp
out
sti
test
cs
imul
mov
mov
dec
dec
mov
loope
sub
sahf
add
dec
stc
pop
xchg
sti
popf
movups
scas
shlb
sarl
xor
xchg
out
jg
sub
call
sub
fsubp
and
aas
mov
add
push
je
sbb
repz
mov
mov
mov
xor
fisubl
movsl
and
inc
lret
test
sarb
es
inc
xchg
call
mov
cmc
push
repz
mov
out
mov
fmul
dec
ds
mov
jecxz
scas
and
stos
or
cmp
cmp
jecxz
in
sbb
and
mov
inc
dec
inc
adcb
inc
sub
inc
inc
idivl
jns
movb
aas
and
sbb
in
ja
ffree
popf
int
adc
stc
mov
and
movsb
out
int
aad
cmp
mov
push
je
int3
adc
lods
pop
mov
mov
ret
in
xchg
out
lahf
xchg
add
push
adc
mov
cld
pop
xchg
cmp
jmp
lahf
rorl
push
xchg
pop
pop
scas
or
sbb
jno
movsl
test
scas
imul
stos
mov
push
xchg
insl
dec
add
andl
pop
sbb
jb
out
mov
aam
cmp
dec
or
push
mov
lret
ja
jae
or
stos
jle
lret
add
es
scas
mov
xchg
push
cmp
shl
popf
sti
aas
lcall
inc
ja
ds
popf
outsl
push
fs
test
adc
test
inc
pop
jne
decl
and
dec
test
xchg
imul
jbe
add
jns
call
jbe
imul
outsb
ficoms
andb
lea
dec
outsb
fmull
jbe
jbe
xchg
jmp
pushf
pop
arpl
sbb
lcall
adc
xchg
push
xor
aas
or
dec
jno
shll
or
xor
xor
test
add
add
sbbl
lret
adc
pop
adc
stos
adc
icebp
jno
sub
aad
sar
mov
int
lret
mov
aad
out
sti
popf
rol
es
inc
daa
xor
xlat
aas
lods
push
or
ret
imul
add
scas
nop
mov
clc
shlb
pop
mov
pusha
cmpsl
sti
mov
popa
leave
insb
insl
sbb
movsl
out
jne
push
xchg
jae
xchg
add
out
jg
sub
in
aaa
lds
test
mov
mov
inc
sbb
pop
pop
mov
sub
pop
jle
mov
mov
jp
roll
sti
shll
mov
jns
fmuls
mov
mov
outsl
stc
es
jl
xor
mov
xor
jne
subl
xor
mov
jp
leave
ja
pop
jmp
dec
xorb
push
sub
jle
outsl
pop
sbb
loopne
aaa
lods
mov
fbstp
icebp
popf
mov
add
push
iret
and
push
test
jle
mov
vcvtsd2si
add
movsb
adc
shrl
mov
out
pop
xor
inc
je
movsl
dec
in
mov
push
sbb
mov
aas
push
arpl
xchg
lahf
sbb
xchg
jecxz
hlt
xor
inc
adc
sti
lods
sbb
aas
call
repnz
aam
inc
pop
push
lcall
movsb
mov
stos
inc
out
inc
aad
mov
mov
shr
xchg
sbb
mov
cmp
gs
sub
icebp
pop
imul
pop
inc
pusha
fbld
push
xor
je
lock
jmp
out
test
jo
fs
sahf
idivb
out
or
sbb
sbb
cmp
in
adc
cmp
pop
dec
cmp
aad
movsl
mov
sbb
sbb
movsb
iret
xsha1
cmpsb
dec
je
mov
xchg
inc
and
lea
push
jb
sbbl
adcl
xchg
sub
sbb
jmp
popa
jns
popf
fcmovne
and
into
fisttpll
or
pop
iret
xchg
movsb
in
js
push
movsb
xor
ljmp
add
and
shrb
lahf
jae
mov
cmpl
sbb
sub
dec
lahf
std
push
adc
stos
clc
and
xor
xor
into
push
mov
jbe
ja
xor
push
sbb
cld
out
jl
push
sahf
lret
jge
push
int3
xchg
sarb
cmp
push
mov
xor
jl
add
xchg
leave
lea
js
sub
ja
sub
lods
pushf
lcall
push
mov
xor
ss
lds
push
test
fcmovne
mov
in
sarl
cmp
std
or
xchg
sbb
pop
and
inc
push
pop
xchg
jmp
es
xor
jmp
movsl
mov
mov
or
rol
mov
cmc
aas
add
popa
imul
test
pop
testb
push
inc
mov
mov
pop
push
pop
cli
cmpsb
xor
outsl
push
add
dec
insl
sub
ds
sub
mov
or
cli
mov
inc
pop
sub
das
xchg
inc
fcompl
jle
mov
push
mov
pop
mov
test
icebp
inc
jns
mov
push
push
mov
push
mov
and
sub
fists
jb
das
inc
or
mov
pop
vcvtss2sd
xchg
sub
pop
mov
inc
lcall
call
mov
cmp
add
mov
mov
fsubl
ja
loop
jle
cwtl
and
pop
xchg
gs
call
out
xchg
mov
mov
add
fldcw
cwtl
sbb
test
insb
testb
idiv
stos
jb
inc
add
test
lret
out
cmp
adc
mov
jo
xchg
xor
sbb
enter
inc
rol
adc
jl
movsb
adc
xchg
orl
or
jne
sub
jb
mov
neg
add
dec
jmp
imul
xchg
pop
jne
addr16
sti
jle
movsl
inc
or
mov
ror
xor
adc
sbb
test
shlb
adc
dec
pop
shlb
mov
xorb
daa
arpl
iret
mov
jecxz
insl
sub
mov
sahf
xchg
rolb
mov
mov
xor
iret
mov
call
mov
je
pop
pop
cmc
push
ret
popf
cmovbe
out
push
jge
icebp
mov
pop
mov
mov
jle
jle
mov
jp
imul
mov
push
inc
pop
sahf
mov
jno
cs
mov
fstpl
add
add
push
mov
scas
dec
xchg
cltd
aad
mov
xchg
and
xchg
xor
test
cmp
adc
xchg
dec
push
cmp
ret
sahf
push
jle
mov
sub
pop
or
dec
mov
and
dec
adc
sub
add
add
cmpsl
lods
dec
rorl
dec
mov
sub
xor
fidivrl
mov
push
cltd
xor
pop
xor
push
xchg
sub
mov
sbb
fs
mov
and
push
mov
pop
mov
stos
arpl
sti
and
ret
ljmp
sub
adc
adc
xchg
pop
or
movsb
jge
jo
jg
pop
rcr
sbb
mov
mov
pop
mov
or
lock
fistpll
lea
jae
outsl
mov
shlb
pusha
sub
jne
pop
test
insb
out
dec
jp
dec
loopne
and
mov
mov
adc
ret
mov
mov
sub
lahf
popf
lret
push
insb
andl
mov
dec
jg
cmp
sub
sub
daa
mov
xchg
pop
clc
fstps
orb
mov
std
sbb
adcb
inc
mov
pop
fs
push
int
mov
ret
pushf
adc
outsb
jb
xor
gs
sub
dec
outsb
xchg
sub
inc
divb
pusha
mov
add
push
inc
and
mov
mov
hlt
sub
out
jb
out
mov
push
les
push
test
xor
clc
inc
rcrb
mov
icebp
or
pusha
cmpsl
sbb
out
mov
addr16
adc
mov
dec
sub
aas
test
inc
jecxz
je
lods
xchg
movsb
add
gs
jb
cmp
lcall
mov
jns
fildl
addb
push
notl
and
xchg
ja
and
push
leave
jno
pop
mov
mov
fnstenv
sub
mov
xchg
mov
mov
jmp
push
aaa
sbb
push
cmpl
fildl
adc
or
add
out
jae
or
dec
je
xchg
test
sbb
shl
lret
sbb
or
shl
mov
jge
and
ret
mov
cmp
jb
fmull
incl
lods
divl
enter
push
inc
repz
out
aaa
mov
arpl
cwtl
or
dec
pop
fcomp
inc
pusha
scas
cmpsl
lret
cmpsb
inc
fidivs
push
in
mov
xchg
ret
ss
imul
repnz
sbb
aaa
je
sti
aaa
xchg
xor
stc
cmpsl
pop
sub
xor
sahf
in
testl
orb
cs
mov
sbbl
fcmovnb
imul
mov
je
test
outsb
adc
inc
pop
cmp
loopne
inc
test
int
shll
mov
pop
and
mov
leave
pop
jae
sbb
imul
pop
dec
test
rclb
adc
or
cwtl
data16
clc
add
mov
mov
fbld
xchg
adcb
and
pushf
xchg
adc
push
ja
negb
lds
jne
jmp
out
cmpsl
pop
inc
lds
mov
cmpsl
adc
adc
cmpsb
xchg
movsl
sbb
sbb
or
adc
pop
fimuls
les
fldln2
dec
or
shr
nop
adc
push
fmull
punpckhbw
adc
bound
mov
ds
push
movsb
fisubs
mov
arpl
out
pop
cmp
xor
fwait
push
mov
push
test
mov
sahf
xchg
insl
cli
js
lods
fnstsw
jno
cmp
pushf
ret
xor
sbb
mov
sbb
xchg
notb
sub
outsb
fisubrl
mov
mov
jle
add
xorb
push
aas
add
bound
jl
subb
enter
fstpl
int3
iret
cs
jge
das
mov
cmp
push
add
jb
push
mov
popa
out
psubsw
pop
jnp
cs
repnz
cmp
cmp
outsb
pop
or
xchg
push
xchg
fmuls
xchg
mov
shrb
cmpsb
lods
add
jl
lods
stc
mov
fnstcw
push
mov
cmp
ja
push
cmp
jne
stc
xor
ret
or
adc
push
mov
dec
jnp
and
and
gs
adc
dec
add
pop
push
arpl
in
into
std
xor
sti
sbbl
call
mov
cltd
mov
sub
nop
or
lret
inc
daa
shrl
pop
test
sbbb
dec
jne
cmpsl
nop
jae
testb
jno
arpl
ljmp
pop
sbb
adc
out
jecxz
mov
negb
xor
mov
ds
mov
jo
insb
adc
rcrb
call
cs
push
movsb
or
push
xor
neg
popa
sbb
ds
cmp
push
pop
gs
cs
mov
jae
add
jbe
nop
in
mov
shll
fimuls
sbb
inc
add
inc
icebp
xchg
out
stos
std
fs
mov
mov
rcrb
in
sbb
push
mov
dec
xor
lahf
add
dec
into
xchg
fisubl
dec
sbb
mov
xor
and
jbe
dec
sarb
je
push
jmp
enter
jb
out
push
gs
sub
mov
push
inc
lret
outsl
lock
pusha
xlat
push
ss
xchg
sub
jle
shlb
mov
int3
adcl
cs
lahf
inc
push
clc
jne
arpl
dec
test
lods
xorb
outsb
push
rclb
pop
sbb
outsl
mov
sbb
jp
or
ret
popf
stos
leave
imul
ret
mov
repnz
fistpl
push
and
stos
out
fisttps
xchg
fs
aaa
sti
inc
test
mov
mov
mov
mov
mov
sbb
lods
cmp
call
mov
or
test
push
pop
xchg
pop
insb
push
xchg
movsl
dec
adc
push
inc
mov
inc
cmpsb
jbe
lock
daa
xchg
push
pop
pop
decb
scas
add
dec
dec
bnd
decb
xlat
movsb
jmp
pop
mov
sub
xor
push
fcmove
jg
frstor
xor
mov
adc
sub
fcompl
shl
mov
pop
mov
and
and
jno
sbb
xor
fldt
int
push
push
test
pop
mov
sahf
in
ss
cltd
lds
int3
addr16
mov
pop
adc
xchg
xor
sahf
dec
fwait
aam
push
les
push
hlt
pop
test
adc
aam
jecxz
or
push
jg
sahf
jmp
scas
inc
cmp
lds
les
das
stc
dec
iret
fwait
xor
mov
and
in
aas
fadd
mov
sbb
xor
jne
int3
mov
enter
mov
lea
andb
cld
ljmp
popf
and
mov
int
jbe
xor
xor
xor
push
sbb
scas
testl
aaa
mov
xor
pop
mov
mov
pusha
test
mov
lahf
cli
insl
xor
arpl
inc
imul
into
sbb
xchg
push
cmc
and
lret
cmp
jle
mov
pop
xor
mov
scas
insl
and
mov
lret
sub
sub
adc
int3
ljmp
push
or
test
adc
mov
sbb
sbb
cmp
jno
sarl
jb
mov
jl
xor
adc
les
mov
rorl
enter
jb
cmp
xlat
lods
mov
xor
pop
push
xchg
jecxz
roll
fisttpll
cmpl
mov
mulb
pop
mov
dec
cmp
push
lods
imul
and
jbe
xor
lcall
mov
js
nop
jb
imul
pushf
jle
jecxz
mov
int3
xchg
out
je
cli
or
push
mov
inc
mov
sbb
add
cwtl
call
gs
mov
adc
psubq
mov
loop
pop
push
divl
mov
inc
xchg
or
ljmp
pop
loope
xchg
jg
mov
std
jbe
lcall
or
fmul
push
xor
mov
scas
mov
mov
roll
push
lock
test
mov
pop
cld
push
pop
das
push
cmpsb
lcall
cmp
data16
sub
out
in
orb
bound
test
int3
lahf
mov
dec
addr16
lods
aad
xchg
push
jnp
inc
fldcw
cmp
jge
fadds
or
je
lods
cmp
icebp
divb
xor
aaa
aas
push
clc
mov
or
repz
push
outsb
or
bswap
in
dec
jmp
sub
sbb
or
lods
in
fists
mov
leave
add
mov
fdivs
pop
mov
and
lds
cmp
mov
mov
cmovo
rcl
fidivrs
popa
xorb
in
and
lret
fnstcw
xor
cmp
mov
rclb
and
sbb
loopne
xchg
imul
dec
pop
mov
das
dec
xor
pop
or
mov
cwtl
scas
inc
daa
js
pop
bnd
mov
sbb
cmpsb
faddl
mov
inc
rol
jg
loopne
inc
add
out
xchg
aas
mov
cmp
and
xchg
js
sar
mov
sbb
dec
pop
sahf
sbbb
cmp
inc
cs
clc
sbbb
daa
cmp
fnstcw
sbb
out
fnstenv
scas
push
cmp
cmp
fstpt
shrb
mov
repnz
and
ret
scas
shl
cmp
test
clc
call
stos
mov
jge
ja
cmp
aas
push
iret
sub
sub
ret
enter
sbb
fmul
cmpsb
fnstcw
adcb
fmuls
push
loope
ljmp
icebp
mov
sbb
fs
pop
out
pop
pop
mov
push
xlat
std
xchg
adc
lock
imul
jecxz
pop
and
iret
cmp
mov
nop
jno
mov
xor
mov
movsb
inc
pcmpgtw
pop
je
gs
mov
cmp
icebp
cmp
jmp
fimull
mov
jno
add
xchg
inc
jg
in
pop
data16
cld
arpl
xchg
sbb
push
xor
cld
sti
sbb
scas
sbb
jnp
sbb
mov
push
andl
addr16
pop
fimuls
push
xor
dec
lret
jl
in
cmpsl
add
mov
daa
mov
inc
subb
push
arpl
pop
adc
fs
jle
mov
pop
icebp
jl
lahf
dec
add
adc
xor
or
lahf
frstor
gs
and
sbb
in
xor
dec
ljmp
rolb
shlb
push
sarb
or
ret
repz
pushf
sub
lret
push
mov
jmp
jp
jne
add
push
les
enter
inc
xor
test
shrb
cmp
ret
stos
ficomps
sub
xor
popa
mov
add
xchg
xchg
cmpb
xchg
cmp
add
leave
adc
cmc
xlat
repnz
push
jg
pushf
test
adc
test
xorb
mov
jae
adcb
loopne
dec
sub
adc
xchg
jg
ss
das
xchg
rolb
cld
ret
jo
daa
stos
jo
imul
jo
repz
mov
enter
ljmp
rol
adc
xchg
adc
and
rolb
movsb
push
jae
mov
or
or
cmc
dec
xchg
test
xchg
fiadds
inc
cmpsb
iret
sub
fsts
mov
dec
xor
push
cmp
sbbb
jecxz
mov
xorb
pop
push
mov
iret
jns
xchg
mov
pop
fwait
or
cs
mov
jns
stos
bound
adc
add
push
push
iret
adc
fldl
jb
ss
sub
jecxz
hlt
dec
mov
cmp
or
jle
das
adc
pop
sub
lret
inc
and
out
insl
inc
sbb
dec
xchg
loopne
stos
pandn
mov
dec
ret
xchg
push
cmp
jle
fcomp
cmp
fdivp
pop
cltd
cld
inc
jno
out
js
adc
popa
pop
outsb
aad
nop
test
aaa
pop
test
popa
cmp
imul
dec
ds
test
movsl
lea
rcr
pop
mov
lods
js
in
add
or
paddsb
pusha
dec
addb
ja
imul
cmpsb
dec
cmpsb
or
mov
stos
fstps
sbb
data16
aas
xor
mov
jge,pn
cmp
mov
decb
mov
add
add
int3
inc
push
sub
push
mov
leave
ffreep
xchg
out
adc
hlt
mov
mov
and
dec
js
jbe
sub
cmp
jmp
fildl
jle
add
pop
push
lcall
push
pop
sbb
xor
leave
ljmp
rcll
xchg
pusha
cmp
inc
pop
outsl
pushf
jmp
call
and
add
dec
ss
lods
mov
fs
bound
xor
out
inc
das
mov
mov
std
mov
jge
push
arpl
adc
jmp
leave
sub
xor
cmp
dec
aad
dec
cld
gs
cvtps2pi
pcmpgtw
out
add
pop
push
mov
pop
fbstp
mov
mov
leave
dec
pop
mov
movsw
dec
mov
int3
adc
jo
ret
loopne
ljmp
inc
jb
pop
dec
hlt
orb
push
mov
dec
mov
rcl
outsl
dec
lahf
aam
scas
pop
sub
sub
scas
dec
pusha
sbb
aad
nop
sub
add
gs
xchg
in
rclb
mov
int3
test
push
xchg
daa
lock
in
nop
jne
data16
mov
mov
packuswb
sbb
inc
jne
lods
cmp
inc
dec
lods
ret
shll
fcompl
sbb
xor
movsb
mov
push
add
mov
lahf
inc
mov
push
jb
sub
jecxz
int
leave
push
popf
outsb
in
lock
xchg
or
iret
and
fistps
mov
outsb
push
push
out
fldt
xor
sahf
cs
jmp
jle
testb
inc
push
stos
xlat
cltd
jo
add
outsb
shll
jb
idivb
xlat
loopne
and
fimuls
push
aas
cmova
incb
subb
xchg
push
jne
jg
push
push
mov
or
lret
add
pop
loopne
pop
nop
in
lods
pushf
js
fidivs
and
ljmp
test
xchg
xlat
jle
sbb
mov
add
jns,pn
jae
add
es
ret
dec
sbb
or
xor
push
mov
cltd
cld
pop
and
mov
jns
pop
adc
xor
inc
movsb
insb
push
push
mov
jecxz
add
dec
scas
inc
call
mov
icebp
lret
mov
pop
xor
jp
push
xchg
pop
test
cmp
subl
jb
sti
pop
into
ret
addl
xchg
test
mov
cmp
push
jnp
mov
xchg
push
fbstp
jmp
push
movsl
das
inc
fdivrl
pusha
lahf
ja
lds
loopne
les
aaa
mov
out
iret
std
sbb
dec
out
orl
mov
sub
mov
sarl
aad
mov
icebp
cmp
addr16
pop
shl
or
push
mov
shll
mov
sahf
cld
push
out
int3
mov
fcomps
push
jle
stos
pusha
adc
sub
jecxz
or
mov
sti
sti
dec
xchg
lret
ret
mov
jno
cmp
std
inc
in
das
pop
adcl
stos
ret
push
xor
sub
xor
pop
fcomip
incl
mov
lds
sahf
dec
inc
or
notl
xor
pop
divb
mov
popf
stos
int
sub
lods
fs
roll
es
lock
icebp
lahf
loope
pop
xor
jmp
push
inc
das
dec
cmp
stos
mov
cmp
int3
mov
ret
fimuls
scas
imul
pop
mov
fsubrs
scas
out
lds
push
test
cmp
jge
or
pop
pop
pop
add
das
insl
daa
mov
nop
out
jne
sbb
int
and
outsl
idivl
pop
lret
lods
xor
mov
xor
dec
jo
mov
sarl
adc
and
xor
dec
cmpsl
shl
push
aad
cmpsl
nop
or
lods
mov
xchg
pusha
sub
dec
divb
loopne
cmp
jns
or
mov
aas
stos
testb
fistpl
stos
inc
xchg
jmp
pop
scas
mov
movsb
jecxz
into
rolb
aas
fimull
xlat
pop
xchg
sbb
popf
mov
rcrb
cmp
ljmp
jne
pop
add
orb
dec
fs
clc
ficoml
fbld
ret
inc
sub
and
enter
xchg
mov
fistpll
cmpsb
sbb
adc
sarb
xorb
pop
adc
scas
xor
aaa
fdivp
or
ficomps
pusha
loope
sti
jge
shlb
pop
test
ret
cmp
cmp
sbb
pushf
push
jo
jo
adc
cmpsl
fisubs
inc
cli
sub
call
xchg
sub
add
inc
or
mov
arpl
pop
xlat
or
rcrl
push
cmp
cmpl
rcrb
pop
pushf
sahf
out
and
sbb
outsb
push
andl
xor
jne
je
test
sbb
dec
jne
mov
pop
adc
in
xchg
dec
sub
cmp
loope
retw
cmp
and
clc
sahf
mov
adc
shl
rcrl
ret
sub
jns
aaa
in
push
fdivrs
xor
vphsubwd
jne
int
jle
mov
js
mov
fucom
mov
js
and
mov
rol
pusha
mov
sub
jnp
xor
rcll
sbbb
movsb
ret
cmp
and
lret
in
and
adc
int3
lods
cmp
inc
movsl
inc
mov
icebp
sub
sbb
add
fadds
sbbl
jmp
xchg
fldcw
fidivrs
pop
xchg
repz
testl
loop
dec
inc
adc
jno
dec
int
mov
push
and
popf
shrb
cmp
dec
in
mov
imul
xchg
leave
add
sti
sub
dec
adc
sahf
dec
jle
jns
lcall
adc
fildll
addr16
loope
sahf
mov
and
mov
push
lock
adc
mov
ja
and
xchg
sbb
xchg
add
sldt
lcall
cli
push
sub
or
and
lods
fcompl
sub
test
std
andl
std
sbb
nop
mov
addr16
loope
shll
popa
insl
sahf
xchg
call
out
lcall
cli
imul
xchg
mov
mov
push
enter
aam
fcompl
mov
jl
ficomps
adcb
imul
lret
push
adc
call
in
iret
cli
mov
scas
ja
cli
je
push
outsb
and
ret
std
std
cwtl
stos
pop
pop
loopne
jg
or
xchg
lds
aad
jne
pop
mov
ret
xor
cmc
push
dec
pop
jmp
popa
mov
pop
cmpsl
jnp
frstor
lret
mov
dec
inc
xchg
mov
loope
movsb
mov
insb
sbb
add
popa
femms
xchg
add
orb
icebp
adc
call
inc
mov
xorb
popf
ja
in
push
mov
jbe
dec
jg
sahf
dec
xchg
dec
cmp
aas
adcb
inc
shrl
jg
filds
cmpsb
cmp
inc
cld
out
xchg
xchg
mov
andl
jg
push
pushf
mov
cld
or
imul
movsl
std
test
lods
jno
shll
mov
xlat
imul
test
inc
lea
xchg
cs
aam
mov
or
inc
add
aas
shll
sub
pop
and
inc
sarl
sub
sub
ds
jo
push
adc
int3
mov
out
mov
es
in
push
sub
lret
fwait
xchg
mov
loop
pop
xor
je
xlat
jnp
xchg
push
mov
stos
and
mov
fcoms
cltd
imul
adc
stos
out
lock
scas
icebp
add
or
shr
imul
push
ret
mov
mov
cli
ja
mov
xchg
aad
pusha
daa
fsubrl
movsl
pop
pop
out
pushf
aaa
dec
xchg
cmpsl
test
cmpsl
imul
aas
and
dec
dec
outsl
in
sub
pop
mov
inc
outsb
cmp
pusha
cmpsb
adc
insb
add
push
add
cli
pop
xchg
push
adcb
outsl
or
stos
inc
ja
lret
imul
add
stos
dec
enter
into
jns
dec
inc
jae
gs
mov
push
xchg
mov
or
rclb
ljmp
repz
dec
leave
xchg
and
push
jae
repz
lea
push
je
jo
in
adc
in
icebp
sbb
aaa
enter
mov
sbb
inc
pop
pop
imul
mov
test
sub
stos
adc
jmp
in
xchg
negl
and
pop
outsb
or
stos
add
out
out
adc
mov
subl
cmp
outsb
movsb
cltd
jle
pop
divb
mov
add
jne
mov
ret
call
xchg
or
jle
sub
fisubl
mov
push
clc
xor
adc
pop
sbb
or
mov
repz
push
in
cmp
cmpsl
fcompl
int
push
mov
mov
fstpt
cwtl
cltd
cltd
xor
xchg
hlt
inc
popf
adc
or
pop
fs
call
pusha
int
xor
inc
cltd
fdivs
in
out
addl
inc
cmpsb
sti
mov
loop
xchg
push
mov
repz
popf
lahf
hlt
das
push
outsl
mov
icebp
and
pop
xchg
stc
sub
mov
aaa
pusha
or
dec
mov
sahf
sub
push
ret
sahf
dec
inc
inc
fwait
sbb
jo
jo
push
das
insl
ja
gs
inc
pop
lcall
sbb
ret
mov
adc
sahf
mov
ss
pop
cmpsl
dec
pop
push
cmc
insb
pop
movsb
inc
mov
and
cmp
mov
sbb
cwtl
sti
ljmp
fiaddl
imul
add
cmpsl
jle
sub
sub
push
rcll
test
push
cmp
mov
sbb
aad
sarl
lret
xor
sbb
ja
xchg
pop
insb
inc
mov
insl
jno
jo
cmpsl
rorb
sbb
js
and
mov
jo
inc
and
mov
or
push
dec
aas
inc
aaa
scas
or
scas
movsb
sub
mov
loopne
cwtl
icebp
xorl
lds
sub
jecxz
xor
lea
xchg
mov
xchg
daa
adc
dec
shrl
call
xchg
mov
xor
fcomi
cmp
jg
aaa
or
dec
sub
inc
dec
pop
pop
xor
sbb
mov
adc
lods
adc
sbb
and
jae
hlt
and
and
adc
fwait
in
movsl
test
cmpsl
xchg
daa
lret
pop
inc
je
or
jb
xlat
imull
fwait
mov
inc
pop
adc
mov
pop
xchg
movsl
xchg
jns
dec
dec
loopne
mov
jge
loope
cli
push
push
test
cld
jbe
test
test
idivl
fwait
cmp
scas
in
mov
jle
xchg
sbbb
cmpl
adc
imul
cmp
outsb
jno
shl
pop
icebp
sub
enter
loop
push
test
mov
dec
je
adc
lods
xlat
pop
lock
rcll
mov
mov
std
jo
mov
inc
mov
fs
cmp
mov
xor
jne
pop
push
dec
out
in
xor
in
int3
xchg
add
dec
test
cmpsl
mov
mov
insb
fwait
aaa
fstl
jb
repz
sbb
push
lret
dec
jge
aas
fcom
pop
fisubs
lea
hlt
cltd
insl
outsl
inc
push
les
neg
sbb
inc
pop
dec
dec
push
fisubs
loopne
pushf
pusha
lods
jb
add
push
and
dec
sbb
clc
mov
jb
into
sub
inc
dec
rorl
imul
sbb
xchg
or
test
out
cmpsl
dec
orb
pushf
sbb
cltd
roll
bswap
cmc
add
mov
imul
xchg
addr16
dec
adc
or
inc
xor
imul
sbb
loope
js
fldcw
sbb
jns
loope
pop
and
scas
stos
das
or
dec
loopne
fisttpll
jne
clc
mov
dec
jl
notl
cmp
pop
sub
push
nop
inc
pop
push
bound
jl
adc
jb
lret
jl
dec
nop
cmc
mov
mov
xchg
inc
jae
add
and
pusha
daa
mov
sbb
xchg
int3
mov
fstpl
pusha
test
out
mov
imul
jge
mov
loopne
rolb
rep
loopne
push
jns
dec
push
fnstsw
lock
fadd
cltd
and
scas
clc
icebp
xor
lods
dec
jbe
dec
or
inc
mov
aas
outsb
push
int3
mov
push
mov
cld
addl
ss
cmpl
adc
and
mov
push
addr16
xor
addr16
mov
jmp
xchg
lcall
into
pop
or
and
cwtl
xchg
cmpsb
ljmp
pop
xchg
imul
fwait
xchg
cmp
ljmp
push
or
nop
jg
ss
cmp
out
jo
and
push
and
mov
xchg
bound
jmp
stos
push
push
sub
jecxz
loop
push
shll
sub
call
dec
call
data16
push
lret
fstps
sub
jno
jg
adc
lret
shrb
scas
inc
mov
jg
sbb
test
mov
popa
jp
fs
sub
movsl
lea
rcll
mov
jns
shl
mov
movsl
sub
out
xchg
jne
das
scas
mov
cs
ja
test
das
jge
je
mov
or
imulb
bound
adc
xchg
sub
push
hlt
mov
rol
jmp
mov
faddl
insl
sub
jl
cmp
movsl
lods
lods
mov
or
sub
or
ljmp
sti
flds
inc
pop
notl
fs
mov
xor
add
pop
in
add
nop
cs
call
cmpsb
arpl
cltd
scas
or
sub
mov
imul
pop
or
dec
push
outsb
push
iret
fcmovbe
das
lods
and
subl
pushf
and
adc
xor
insb
add
push
mov
xchg
shll
mov
ss
jecxz
jnp
xor
cmp
add
and
out
push
pusha
repz
mov
xchg
pop
hlt
pop
rorb
pop
jo
lret
or
add
pop
pop
jle
sbbl
loop
adc
sti
xor
jae
adc
out
inc
mov
jecxz
and
roll
and
dec
popa
xchg
push
fnstsw
sub
in
cwtl
je
stos
dec
test
cwtl
pop
cltd
push
cmpsb
mov
mov
sahf
xchg
push
test
pop
nop
mov
push
das
mov
sub
jnp
jae
push
pop
insl
adc
int
jecxz
and
push
int
adc
or
in
jno
mov
pop
popf
icebp
cltd
jnp
lcall
shll
mov
jbe
dec
scas
fs
stos
out
lods
push
aaa
cwtl
dec
pop
or
int
sub
mov
pop
popa
dec
stos
fists
and
fnstsw
add
sbbb
in
movq
push
and
aaa
enter
bound
movl
mov
mov
sbb
xor
push
push
nop
pop
sarl
and
loopne
lret
aas
loop
jmp
mulb
test
pushf
push
leave
mov
xor
out
cltd
mov
add
mov
mov
pusha
or
mov
fwait
je
add
pusha
rcll
ja
xor
mov
and
sti
cmp
ficoms
mov
les
rcrb
inc
test
mov
sub
jno
ret
stos
mov
sbb
mov
fsubr
nop
pop
sbb
mov
mov
pop
fwait
pop
mov
dec
mov
inc
ds
mov
int
push
or
shlb
call
mov
mov
sbb
rclb
test
popf
aad
rclb
outsb
mov
or
ficoml
cwtl
xor
sbb
jb
test
imul
xchg
pop
ljmp
jmp
sbb
mov
or
inc
xchg
jmp
sub
push
cmp
mov
loopne
mov
xlat
pushf
loop
and
pushf
pop
repnz
adc
scas
testl
jbe
push
testb
icebp
into
mov
mov
or
jg
inc
rcr
xchg
push
fstl
jle
xchg
icebp
insb
jo
insb
lea
sbb
insb
jmp
cmp
clc
sbb
or
cmp
mov
nop
xchg
scas
mov
call
cmc
jecxz
data16
out
sub
sub
sbb
mov
xchg
mov
aad
aam
pop
sub
mov
dec
push
push
cltd
lcall
xor
shl
cld
jl
in
ds
fldl
inc
stos
popf
mov
jg
ljmp
inc
sbb
jg
fwait
ds
clc
mov
in
adc
jo
cmc
xchg
add
popa
xchg
jecxz
mov
ds
push
lock
into
jl
push
lret
icebp
cmp
stos
pusha
and
push
std
jl
jmp
jle
das
repnz
aad
imul
and
cmc
lods
movsl
push
cltd
or
out
cmpsb
jbe
stos
mov
stos
mov
push
jb
stos
cmpsl
call
push
mov
xor
pop
mov
std
out
arpl
cmc
scas
xchg
push
arpl
adc
xor
and
int3
push
ja
adc
jo
mov
mov
or
dec
push
mov
shlb
or
fists
lret
add
and
or
sbb
popf
and
jecxz
adc
push
lahf
push
mov
and
or
repz
test
js
and
and
inc
cmp
add
fistpl
pop
ljmp
mov
cmp
movsb
in
sub
icebp
sub
addr16
dec
divb
adcl
pop
xor
jmp
repz
divb
jp
je,pn
dec
add
or
jle
inc
outsl
sub
jae
or
movq
repnz
stos
call
push
jmp
imul
sbbl
addl
sub
push
lret
xor
xchg
ficoml
and
popf
sbb
xchg
jb
les
pop
rclb
stc
mov
xlat
cmpsl
bound
movsl
pop
pop
add
mov
aas
dec
mov
jae
mov
scas
push
pop
pop
push
push
xor
aaa
das
sbb
imul
hlt
daa
mov
sbb
aad
jl
out
sbb
cmp
sub
push
jnp
aam
repz
jb
repnz
jbe
cmp
sbb
lds
mov
lock
jecxz
ljmp
jp
rorb
cltd
jns
pop
loop
popf
mov
and
call
jbe
ret
orl
cli
bound
mov
daa
jne
pusha
addl
les
imul
cmc
xchg
nop
mov
push
add
repz
pop
and
dec
fdivp
mov
inc
add
in
add
fwait
add
cmc
mov
push
inc
shrb
cs
or
adc
add
fs
or
sbb
in
push
leave
adcl
push
out
adc
ds
xor
popf
mov
xor
or
sbb
cmp
fidivrl
cmp
mov
xor
jg
mov
push
clc
adc
ja
rcrl
cmpsl
icebp
inc
add
call
cs
dec
add
mov
clc
out
mov
lret
mov
dec
arpl
mov
pop
jp
pusha
and
rolb
pop
pushf
jno
xor
jp
idivb
mov
testl
sahf
mov
sub
adc
xchg
inc
call
pop
cmp
sbb
add
outsl
incl
test
out
xor
jo
dec
jae
incb
testb
xchg
push
movsb
push
mov
dec
jp
lcall
pop
aad
mov
hlt
pop
inc
inc
xchg
pop
dec
push
sbbb
pop
adc
test
sub
mov
stc
scas
cmpsb
fisttpll
aam
clc
lock
or
cli
dec
clts
icebp
pop
dec
xchg
mov
clc
pop
imul
inc
mov
dec
sbb
jmp
push
push
fistpll
xchg
push
scas
adc
jno
pop
out
or
mov
lods
frstor
mov
aad
or
sub
xchg
push
push
inc
push
add
push
cmp
and
mov
jl
xor
movsl
add
les
dec
pop
adc
mov
insb
mov
mulb
cmp
div
test
or
pop
addb
cli
rcrb
pop
mov
scas
mov
dec
out
imull
inc
gs
jmp
icebp
in
sti
lods
addr16
lods
sub
adc
cmp
xor
sahf
push
mov
jae
inc
mov
sub
es
jbe
and
addr16
daa
ret
andb
pushf
xchg
cld
test
adc
je
pop
das
scas
fnstsw
ljmp
fsubl
or
adc
inc
mov
jl
leave
sahf
imul
test
adc
out
sub
out
sub
arpl
adc
sbb
movsb
push
cs
mov
pop
int
dec
pop
insl
cmp
adc
leave
dec
mov
in
inc
pushf
mov
fcmovu
pop
repz
mov
frstor
jge
mov
sub
loop
fldenv
lahf
imul
jb
inc
testb
repz
pop
out
sbb
mov
sahf
lods
stos
cmc
les
mov
fwait
in
cmp
xor
mov
jo
out
mov
leave
shl
cltd
jp
stos
shl
pop
in
std
ret
jle
ja
inc
xchg
dec
cmpl
xchg
or
rcrl
push
popf
icebp
popaw
mov
push
cmpsb
filds
jge
lock
arpl
cmp
orl
mov
cmp
stos
ret
inc
cli
cmp
adc
add
insb
jg
mov
repnz
pop
or
inc
xlat
rorl
rorb
inc
lret
add
stc
cld
pop
addr16
cmp
xchg
cmp
push
and
mov
or
dec
dec
mov
inc
xor
inc
cmp
adc
mov
popa
in
lahf
mov
aaa
xchg
aam
dec
push
test
sub
jge
in
lcall
aad
leave
jp
call
movsb
or
daa
xchg
push
inc
lods
fisttpl
xor
mov
cli
hlt
lock
sub
mov
mov
xchg
ds
mov
push
mov
jb
scas
in
mov
ror
arpl
lret
gs
ret
adc
nop
cmp
addl
or
xchg
push
in
sbb
in
xchg
andl
aaa
jge
xchg
adc
scas
xor
xor
fldenv
fisubrl
and
sub
mov
push
in
push
popa
test
pop
mov
xor
in
mov
inc
pop
sahf
cld
xlat
push
inc
mov
xchg
fs
out
push
dec
fidivrs
repz
xchg
sbb
in
cmp
xchg
lret
xlat
int3
xor
call
in
or
subl
and
inc
test
add
dec
mov
pop
flds
or
stos
sarl
in
roll
push
into
mov
add
enter
inc
rcll
sub
mov
sbb
mov
insl
or
push
das
aas
hlt
test
jg
scas
cs
aaa
push
xchg
add
call
push
bound
xlat
popa
pop
aad
jae
js
jns
adc
stos
dec
jmp
in
xor
or
in
and
mov
jle
inc
divl
std
imul
xchg
scas
lcall
xchg
call
inc
mov
sahf
rorl
lds
add
int
pop
xor
stos
inc
inc
mov
jle
out
outsb
xor
push
sbb
add
nop
lea
xchg
xor
xchg
push
xchg
jne
cli
int3
fprem1
int
cmc
fwait
in
repnz
lret
sub
movb
pusha
ljmp
aas
loopne
ficomps
fcom
pop
pop
mov
xchg
and
cmpsb
out
xor
enter
push
stc
add
pop
or
inc
cmp
cltd
push
push
inc
inc
out
clc
mov
leave
int
and
mov
mov
cmp
imul
bound
scas
sahf
xlat
in
adc
repz
push
movsl
aad
gs
sbb
pop
in
pop
jecxz
repz
enter
mov
sbb
mov
pop
popf
sub
out
dec
out
outsb
fwait
cltd
subl
pusha
inc
test
or
nop
fisubrs
jo
xor
pop
sbb
cmp
dec
fwait
cltd
jmp
push
sbb
in
lock
push
sub
sub
outsb
in
sub
mov
pop
insb
xchg
add
xchg
icebp
xchg
push
inc
mov
and
movsb
sbb
loopne
or
or
int3
cmpsb
repnz
sub
out
cmc
xlat
mov
xchg
je
lods
xchg
dec
push
mulb
cmpb
aaa
out
xor
mov
arpl
ja
icebp
jge
hlt
cli
mov
fs
enter
jb
icebp
jmp
push
jle
mov
jne
out
pop
sub
call
inc
cmp
ss
ficomps
shll
jbe
push
lds
and
aam
fisubrs
jl
sahf
std
push
out
push
hlt
jno
mov
mov
negl
movsb
fsts
rorb
sbbb
jl
mov
ljmp
xor
movsl
add
push
xchg
lods
inc
pushl
cwtl
or
jp
jae
and
in
xchg
cmp
and
sbb
mov
and
jle
int3
and
imul
jo
out
ret
pushl
mov
mov
insl
add
dec
adc
xchg
sbb
cmpsb
lahf
movsl
xchg
jo
std
int
pop
out
and
test
fisubs
adc
or
lahf
push
pop
and
fmuls
outsl
mul
test
xor
cmc
fnstsw
xor
lret
push
mov
xlat
sub
repnz
lds
or
testl
ja
sbb
gs
and
enter
inc
or
add
sub
repnz
or
jp
stos
sbb
jnp
and
xor
fimull
enter
hlt
mov
push
test
inc
outsb
addr16
inc
fcomp
inc
dec
mov
int3
mov
movsl
mov
and
clc
dec
rcl
xor
push
jns
mov
addb
and
imulb
incb
test
arpl
mov
cmp
sbb
movsb
out
adc
and
add
cmp
pop
fdivs
dec
ss
cmp
les
pop
mov
fcompl
das
inc
into
adc
lret
mov
fstps
dec
and
insb
cmp
xor
std
out
mov
aad
mov
push
mov
aaa
adc
jo
inc
dec
outsb
test
movsl
xor
push
lret
lock
add
or
pop
jl
in
sub
movsb
std
pop
and
mov
mov
mov
adc
xchg
push
imul
xor
add
add
or
mov
rclb
adc
push
out
add
inc
cmc
sub
mov
mov
fdivrs
hlt
ret
lods
data16
imull
popa
xchg
cmp
xchg
aad
jg
lods
mov
sub
and
xchg
adc
xor
cmp
sbb
dec
jle
sub
xchg
mov
or
mov
xlat
cltd
and
xchg
fnstcw
iret
cmp
xorb
pushf
leave
jno
rcll
es
sbb
loope
push
pop
mov
dec
jne
aam
xor
fsubl
movsl
stc
pop
repz
inc
xor
or
xor
into
cmc
pushf
fimuls
faddl
cmp
xor
sub
popa
insl
ljmp
test
popa
imul
sub
subb
lods
gs
pop
inc
jge
lret
or
mov
stos
pop
sbb
add
sbb
jg
pop
mov
cmp
pop
mov
sub
xor
lret
into
push
loop
rcll
jmp
jbe
pop
jb
insb
stc
leave
jno
xchg
pop
sub
sub
jo
cmp
jbe
add
and
xchg
fsts
jo
push
xchg
clc
jmp
or
jg
mov
in
loope
adc
pop
mov
in
sbb
gs
jp
mov
gs
jp
add
fisubrl
std
outsl
into
jne
fisubrl
insb
add
dec
mov
insl
lds
test
xor
mov
adc
shrl
add
push
push
sub
popf
xchg
xchg
jmp
es
shl
scas
sti
insl
sbb
cld
fwait
cmp
xchg
test
shlb
xor
and
push
cmpsl
cld
enter
cmp
bound
outsb
roll
cmp
sub
lea
pop
in
sbb
pushl
lea
jns
shll
xchg
sub
fnstcw
jecxz
cmp
add
repz
enter
jl
pop
mov
std
sub
mull
insb
les
dec
push
mov
mov
mov
iret
fs
filds
sbb
fs
dec
pop
sbb
fldl
jne,pn
dec
lods
mov
jge
and
shl
jmp
xor
ds
bound
mov
mov
out
pop
or
cmp
inc
rorb
and
arpl
int
aaa
lret
jge
sub
jb
pop
jns
aas
and
sahf
pop
rorb
mov
pop
nop
push
clc
bound
adc
sti
mov
mov
adc
mov
mov
leave
mov
inc
push
sti
xchg
stos
mov
out
xor
leave
stos
jecxz
aam
xlat
addb
mov
call
xchg
push
movsb
shlb
cmpsl
scas
fcomps
clc
out
push
sub
shlb
fcomps
add
cltd
aad
sahf
stc
mov
xchg
in
mov
sbb
sahf
mov
and
je
fnstenv
jb
lods
push
js
dec
sbb
clc
adc
cmpsl
pop
ret
sbb
mov
jl
mov
xchg
cmp
sarb
inc
popa
faddl
ss
stos
nop
daa
rdtsc
push
jne
xchg
mov
cwtl
push
call
leave
sub
iret
je
dec
movsb
mov
in
pop
mov
jl
int
rsm
dec
ret
fisubrs
push
xchg
pop
push
shrb
mov
xchg
js
leave
ljmp
sbbb
jecxz
sub
jecxz
pop
or
loopne
mov
fistl
pop
test
sub
xchg
hlt
add
mov
insb
enter
mov
and
pusha
sarl
loope
lds
test
sub
sbb
loope
sbb
nop
aas
pop
fdivrl
push
int3
movsb
cmp
mov
jae
mov
and
lea
mov
or
out
adc
bound
adcl
clc
jge
push
jnp
cld
mov
into
aad
inc
pop
test
or
cmp
jb
jg
movsl
sbb
call
xchg
pushf
sti
inc
repnz
call
sub
fbstp
rolb
add
mov
mov
xchg
lret
loop
jo
iret
adc
lret
mov
fdiv
cmp
push
iret
addl
lods
mov
mov
mov
mov
fstl
rolb
mov
repnz
std
inc
inc
rol
rol
mov
dec
cmp
pop
xchg
xchg
inc
xor
inc
mov
in
je
pusha
jmp
jae
daa
leave
jmp
xchg
push
rolb
mov
in
mov
inc
pop
sbb
cs
inc
xchg
data16
bound
xchg
test
stos
jbe
cmpb
inc
pop
nop
cmpsl
pop
lret
inc
jp
mov
les
cs
and
jno
pop
test
jb
mov
xchg
in
pop
jp
iret
mov
ror
fisubl
pop
fcompl
movsl
sbb
mov
inc
and
fcomi
jb
movsl
mov
lods
dec
xlat
mov
xchg
xchg
mov
negb
je
push
lret
data16
jl
add
sub
pop
cmp
mov
idivl
jbe
xor
movsb
inc
inc
or
mov
clc
cmpsb
push
cli
cmp
cmp
ret
or
sub
ret
cmova
gs
dec
les
bswap
ret
icebp
scas
xchg
andb
and
mov
inc
mov
add
xchg
aas
test
bound
jecxz
pop
popf
enter
xchg
mov
shrl
sti
pop
sbb
xchg
lret
adc
push
push
cmp
data16
xchg
sarl
dec
scas
pop
inc
fnsave
pop
jle
push
jo
jb
xchg
push
or
data16
cmp
out
mov
mov
mov
sbbb
icebp
sbb
lock
pop
mov
add
pop
jge
mov
inc
mov
out
loope
xchg
add
aad
cmp
xor
add
les
scas
imul
ss
sub
or
in
and
leave
mov
scas
ret
push
jnp
outsl
mov
mov
stos
ljmp
jae
pop
lret
out
int
pop
idivb
test
into
sti
outsb
inc
es
shll
jns
gs
sbb
xchg
or
loopne
outsb
dec
imul
sbb
xor
jmp
je
sti
fldenv
xchg
imul
in
out
dec
rorb
mov
dec
cmpb
outsl
rolb
push
xor
popl
mov
xchg
std
mov
in
jmp
xchg
dec
shll
bound
imul
mov
sbb
mov
das
mov
xlat
outsl
jl
push
addr16
fucomip
dec
inc
sbb
cmpsb
mov
dec
ds
jg
lea
clc
or
cli
dec
jecxz
dec
sbb
mov
add
out
mov
add
or
inc
pop
or
pop
sbb
mov
add
push
xor
mov
sub
mov
rol
xchg
rcrl
ret
cs
arpl
icebp
or
fwait
inc
xchg
outsl
sbbb
sahf
mov
sub
pop
push
nop
xorb
dec
adc
mov
popf
xor
in
lock
pushf
cwtl
cli
adc
mov
imul
in
pop
lods
mov
pop
js
sub
pop
mov
xlat
dec
nop
and
adc
scas
add
mov
jns
fdivl
in
jbe
int
dec
icebp
cld
ret
sahf
jbe
mov
lret
push
cpuid
mov
and
fdivs
inc
xor
ss
inc
push
cwtl
add
jno
and
roll
mov
lock
mov
clc
lcall
pushf
das
aas
xor
mov
cmpsb
outsl
aaa
dec
mov
mov
push
loope
aad
push
lret
mov
ss
mov
test
sbbb
ljmp
mov
bound
cli
fnstcw
hlt
mov
call
fldcw
inc
aas
subl
xchg
jns
pushf
test
lcall
cmc
or
adc
andb
and
lods
sbb
lret
jmp
int
cltd
sbb
mov
loop
inc
mov
cmp
sbb
jae
andl
sub
cmp
pop
inc
pop
inc
pop
imul
fldt
mov
jmp
sub
add
push
jmp
repnz
aam
loop
out
mov
sbb
insb
ja
aad
sbb
js
dec
xor
outsl
test
test
xchg
add
pop
hlt
ds
leave
xor
xchg
aad
jp
jno
lock
push
test
mov
bound
jae
sbb
pop
lock
and
das
inc
pushf
dec
pop
dec
out
out
xchg
pop
in
sbb
loop
lds
flds
adc
add
jl
fnsave
add
test
inc
out
shr
aad
out
out
leave
sub
mov
pop
push
stos
mov
stos
rcr
data16
shll
mov
jbe
mov
dec
mov
dec
insl
dec
out
jmp
lcall
dec
and
mov
mov
popf
adc
mov
adc
sub
xchg
inc
jb
nop
sub
cmp
sbbl
sbb
and
jns
aad
or
mov
mov
outsl
pop
and
pusha
and
not
adc
aam
jp
mov
sarl
cmp
fwait
inc
clc
mov
js
mov
pop
inc
sbb
icebp
adc
loopne
hlt
mov
loopne
out
mov
push
js
rorb
adc
mov
push
fstpl
lds
shrb
cld
divl
inc
or
fptan
adc
es
popa
mov
shl
or
and
cmp
popf
dec
cs
xchg
lret
out
je
movswl
cmp
fcmovnbe
mov
test
mov
inc
movsl
add
dec
pushf
testb
test
nop
sbb
lods
adc
dec
pop
loope
aaa
sbb
shr
ss
xor
lods
cmp
les
sbb
jns
and
jo
jne
mov
and
in
xor
stos
cmp
xor
es
xchg
aam
cltd
inc
enter
lret
imul
adc
stos
out
lods
pushf
jp
mov
lcall
loop
mov
jae
daa
lea
mov
sti
mov
loopne
faddl
hlt
cld
rcll
hlt
mov
lods
aas
data16
push
iret
frstor
lea
loope
cmp
cmp
jl
mov
inc
push
bound
and
aas
stos
jnp
pop
test
dec
jb
xor
inc
pop
test
sbb
sar
pop
sub
leave
cmp
and
call
cmpsb
and
call
jge
sar
jecxz
outsb
dec
and
pop
push
mov
int
jle
sub
cmp
inc
ss
mov
adc
mov
xor
sub
lret
scas
rcrl
sub
lahf
sub
imul
dec
mov
fdivrp
addr16
dec
rcrb
mov
dec
mov
dec
cld
mov
xlat
fstpl
sbb
bound
aad
jb
lcall
mov
mov
fisubrs
push
movsl
pusha
in
test
and
pushf
mov
and
push
pop
idivb
stc
sbb
fwait
lcall
or
into
pop
int3
pop
shlb
outsl
mov
push
or
xor
sub
xchg
and
andl
mov
mov
cmc
and
outsl
fwait
lahf
adc
inc
push
mov
and
mov
cmp
leave
sbb
std
and
push
movsb
xchg
jg
sahf
push
movsb
xchg
dec
fbld
stc
mov
outsb
inc
sbbb
push
fxch
dec
push
mov
mov
mov
adc
lods
loop
mov
push
mov
in
push
mov
imul
mov
adc
aas
repz
push
jo
int3
lcall
mov
mov
pop
bound
push
cmpsb
add
lahf
in
call
inc
fwait
add
adc
mov
sub
pop
lret
or
in
sahf
jno
cmp
std
cmc
push
mov
and
mov
cmp
int
cmpsb
in
mov
cwtl
mov
jge
dec
test
in
scas
mov
sub
in
les
sarl
lcall
and
fidivl
clc
push
bound
sbb
mov
outsb
lahf
jae
adc
sarb
sbb
in
movsl
jns
leave
insl
fisubrl
mov
jmp
add
faddl
es
dec
or
inc
adc
dec
daa
cld
add
daa
popa
imul
rolb
push
push
scas
lcall
jge
xchg
stos
shll
mov
xchg
push
jns
mov
cmpsb
mov
das
xor
mov
sbb
sub
jge
nop
cmp
xchg
shrl
in
call
push
gs
aaa
push
push
insb
sub
scas
loop
jg
xlat
push
jbe
cld
mov
xchg
xchg
rcrb
std
lahf
xor
in
fisttps
xchg
mov
push
add
fdivrs
push
leave
or
mov
out
leave
sbb
int3
icebp
pop
xchg
sbb
cli
push
test
out
fisubrs
jno
dec
popa
es
loope
mov
js
sbb
adc
mov
mov
mov
jae
inc
cmp
sbb
jne
adc
cmp
sbb
enter
shlb
aad
dec
cmp
hlt
iret
or
adc
pop
pop
outsl
dec
test
leave
movsb
dec
loopne
add
mov
rolb
jp
outsb
fwait
and
imul
pop
data16
pop
push
dec
lahf
outsb
lcall
ja
xor
nop
mov
popf
cli
imul
xor
into
fidivs
cmp
mov
pop
arpl
jns
sbbl
mov
in
or
jo
mov
int3
lods
pushf
mov
ret
add
enter
push
je
dec
dec
xchg
fsubs
mov
enter
jo
jl
mov
mov
loope
movsl
jae
mov
lods
mov
fwait
incl
es
mov
mov
gs
add
mov
ljmp
dec
jnp
xchg
in
test
rorb
lock
or
mov
jmp
dec
lcall
sbb
mov
out
cmp
shl
je
aam
shlb
push
mov
xchg
jle
pop
mov
loope
mov
lahf
push
push
and
lcall
sub
xchg
in
std
dec
and
xchg
and
sbb
xchg
xchg
adc
das
xor
mov
jns
dec
adc
ret
mov
pop
stc
out
xchg
jg
jns
leave
or
sub
dec
push
roll
imul
mov
mov
fisttps
mov
or
jo
mov
sbbb
mov
lods
cltd
rcrb
mov
sub
out
xchg
fdivl
in
pop
fcompl
out
popa
ds
inc
pop
pop
push
sub
mov
popa
inc
aam
fmuls
xor
xlat
pop
mulb
into
mov
adc
adc
ret
les
mov
mov
popa
lcall
jmp
xchg
push
pushf
ljmp
push
xlat
cmp
fs
imul
jle
int
xlat
cmp
inc
mov
mov
sti
ds
repz
adcb
add
ds
sbb
dec
cmc
cmp
push
sbb
cmp
call
ljmp
sbb
std
fwait
add
mov
xor
mov
pop
pusha
xor
add
jle
ret
sbb
xor
enter
lea
cmp
pop
mov
out
mov
push
mov
pop
adc
ret
scas
loop
adc
xor
dec
scas
xchg
jg
xchg
dec
outsl
test
pop
scas
sti
mov
fwait
aam
fildll
aaa
aas
sbb
and
push
xor
stos
mov
push
call
shll
stos
mov
push
adc
cmp
sub
loopne
mov
xchg
push
out
into
mov
xor
xchg
mov
or
js
add
fs
cmpsl
hlt
arpl
cld
jb
stos
push
inc
xlat
adc
sub
icebp
fucomp
out
jne
cli
dec
adc
clc
cmp
jge
neg
shlb
push
in
outsb
popa
fcomp
movsb
add
xchg
push
push
cmp
and
push
mov
arpl
inc
cmp
xchg
and
fsubp
divb
fstl
adc
stc
lahf
pinsrw
pop
cmp
popf
jl
sbb
pop
push
out
lea
movsl
mov
mov
imul
hlt
add
in
rep
xchg
cltd
cld
lods
sbb
loope
inc
adc
mov
push
ret
jmp
imul
dec
rol
jno
cmpsb
jbe
mov
mov
xor
cli
adc
call
es
sub
test
mov
xchg
mov
pop
out
xchg
cli
xchg
popa
and
jmp
inc
lret
test
sbb
lahf
and
into
mov
jbe
stos
jge
or
incl
stc
mov
inc
fwait
adc
imul
aaa
cmp
xchg
dec
xchg
call
lahf
push
scas
sub
fmull
cli
loop
inc
lahf
rorl
cmp
pop
test
and
lcall
ja
mov
push
mov
mov
push
mov
inc
lods
lahf
in
adc
cmp
adc
fldz
and
sub
mov
jno
lods
ret
enter
push
push
aas
jns
push
mov
lds
xchg
pop
mov
fildl
or
inc
mov
neg
orb
push
ret
push
lahf
test
push
inc
inc
mov
push
lret
mov
test
pop
jnp
sbb
and
push
aam
pop
push
repnz
loope
pop
imul
lcall
inc
adc
or
popa
lret
dec
mov
pop
push
mov
add
xor
push
dec
out
daa
mov
dec
ret
popl
push
or
mov
cwtl
mov
test
add
loopne
fidivs
hlt
jmp
cmc
adc
push
xlat
xor
push
pop
xchg
add
movsb
xor
mov
sub
lock
adcb
xor
outsl
mov
lea
ficomps
and
cmp
outsl
inc
pop
jnp
push
leave
cmp
mov
add
mov
lahf
and
cmp
sub
iret
mov
in
out
pop
dec
mov
stc
cwtl
fsubl
sti
xor
pop
xchg
dec
popl
jecxz
cmp
sub
leave
cmp
pop
aas
xchg
mov
and
das
decb
sub
loope
iret
sbb
cld
rol
sub
jnp
mov
sbb
je
xchg
icebp
repz
and
pop
or
wrmsr
and
out
and
add
or
hlt
cld
mov
dec
data16
lret
and
xchg
jle
fdivl
mov
xchg
icebp
test
inc
cmpb
mov
jge
cld
leave
jge
repz
jg
insb
or
es
and
mov
add
inc
adc
mov
mov
notb
sbb
mov
mov
xor
popa
fucomip
lret
fs
pop
inc
lods
push
mov
fsubrl
dec
vpmadcsswd
cmpsl
jnp
movsl
outsl
cmc
imul
arpl
aaa
das
mov
and
sub
or
in
xlat
sub
cs
xchg
mov
push
push
or
or
fbld
lea
sub
mov
mov
mov
push
and
stos
data16
jl
xchg
cmp
xchg
movsb
pop
jo
dec
pop
xrelease
dec
mov
pop
outsl
fwait
inc
movsl
test
adc
push
pop
add
pop
mov
lds
push
fistps
and
out
loopne
call
jecxz
fsts
pop
loopne
add
mov
dec
stc
add
inc
push
rcrl
ret
jle
mov
aas
jmp
lods
sbb
xchg
in
std
push
mov
push
add
push
or
xchg
in
cmp
addr16
push
flds
mov
arpl
sbb
sub
scas
dec
popa
pop
nop
mov
aaa
js
push
xor
jnp
mov
lret
push
mov
test
jge
sbb
dec
sub
inc
repnz
and
loop
aam
dec
cltd
fwait
push
and
xchg
xchg
std
sti
mov
xchg
and
inc
xchg
sub
mov
mov
sub
mov
jg
push
scas
sbb
int3
aam
jb
mov
jmp
jle
cmc
aas
add
jb
ret
stos
pop
enter
leave
sti
xor
jge
xchg
int
cmp
jns
fndisi(8087
test
jnp
sub
sbbb
jecxz
push
sub
das
sbb
xchg
mov
scas
cs
xchg
dec
xor
jbe
and
and
jb
test
mov
xor
xchg
or
or
lods
mov
jns
add
adc
adc
inc
pop
xor
dec
mov
push
xor
sbb
or
les
mov
out
push
jno
adc
out
or
loopne
fsubp
pop
cld
jae
sbb
mov
xchg
pop
jge
inc
adc
lahf
cmp
push
or
es
test
push
insb
nop
mov
ds
dec
in
pushf
cmp
test
cmpsb
stc
dec
ret
mov
test
mov
jns
xchg
out
add
sbb
and
iret
inc
pop
inc
test
push
inc
sbb
pop
cld
ds
xor
mov
in
cs
nop
and
dec
ret
lahf
jae
sbb
push
inc
adc
ret
adc
mov
jg
xor
pop
lcall
or
daa
push
cwtl
and
idivl
xor
or
movsl
or
in
jns
ljmp
addb
dec
insl
pop
fxtract
mov
or
sub
testl
pop
push
push
pop
jle
pop
popa
lea
divb
sub
pop
or
mov
lods
shlb
push
mov
mov
ret
jo
je
test
ja
mov
mov
and
fdiv
jbe,pn
jae
jb
aad
push
mov
sub
insb
add
scas
lcall
mov
jmp
stc
pop
or
out
sbb
adc
stc
pushf
mov
daa
sub
shl
aaa
fsubrs
test
xchg
dec
fsubs
jo
or
int
add
push
mov
pop
mov
mov
or
loop
jne
rorb
push
pop
xchg
pushf
xor
mov
push
cld
scas
jge
iret
sub
pop
adc
inc
in
jb
in
xchg
xor
cli
fsub
dec
push
mov
icebp
mov
nop
negb
cmp
dec
lds
enter
imul
or
jnp
adc
sub
fucom
sahf
andb
dec
cmp
cmp
jae
enter
pop
test
mov
push
sub
ret
bound
imul
scas
jae
pushf
inc
jb
cmp
or
sub
shrl
scas
cmp
lds
mov
fwait
mov
or
ret
or
add
or
fdivrs
xchg
shll
sub
out
push
loopne
sbbl
pop
push
add
out
rcrb
jg
push
test
push
loope
push
sbb
adc
or
in
pop
nop
inc
in
xor
sub
lods
data16
aaa
insb
jo
outsb
imul
fcmove
pop
push
xor
inc
inc
mov
mov
mull
push
stos
int3
das
mov
nop
insb
jne
ret
jg
rcrl
shrb
lock
insl
ficoms
ret
inc
mov
dec
xchg
dec
jae
xchg
aaa
stos
jne
lea
test
cmpsb
cmp
movsl
stc
mov
popf
add
xlat
jecxz
fdivl
es
xchg
mov
mov
hlt
add
sbb
dec
jmp
sbb
fwait
cmpsl
rorb
and
fcoml
xor
xlat
mov
or
out
jle
imul
dec
scas
leave
andl
sar
jo
sub
fwait
or
test
lods
and
mov
mov
cltd
adc
movsl
push
xchg
mov
stos
cld
scas
movb
stos
jmp
leave
and
lods
sub
lret
cmpsb
mov
xor
jo
cmp
xchg
mov
test
pop
fsubrp
and
cmp
mov
repnz
dec
fidivrl
fs
test
sub
pop
dec
push
inc
je
cmp
popa
mov
leave
cmpsb
mov
cmp
mov
aas
xchg
clc
fmulp
sbb
lock
jae
inc
add
mov
outsl
bound
mov
pop
mov
test
aam
sbb
mov
mov
and
sub
cmp
sbb
jae
sub
std
dec
mov
mov
mov
movl
pinsrw
mov
pop
popa
cltd
test
loop
push
xor
aad
dec
mov
cmp
arpl
je
sub
lods
add
mov
sbb
fnstsw
and
rcrl
bound
mov
add
rclb
cmp
les
int
sbb
dec
cmp
inc
scas
lods
popl
cmpsb
push
mov
div
dec
jl
stos
xor
jmp
data16
in
test
push
mov
aam
mov
mov
adc
dec
inc
dec
mov
and
inc
clc
loope
icebp
pop
repz
out
sub
xchg
jb
and
loopne,pn
adc
nop
inc
popf
ret
jle
pcmpeqd
cmp
sub
cmp
sub
adc
ds
jno
mov
adc
pop
sbb
sbb
cmpsl
and
push
fstpt
arpl
inc
fnstsw
cmpsb
mov
dec
add
sub
movsb
cmpsl
xchg
mov
daa
int3
lcall
daa
stc
push
dec
outsl
and
cmp
daa
sub
fisubrs
cmp
mov
ficoms
pop
mov
sbb
sahf
imul
int
pop
addb
scas
or
adc
test
and
adc
pop
jb
and
push
adc
push
mov
add
lcall
mov
cltd
mov
pop
fcmovbe
je
icebp
lahf
pop
rclb
clc
loopne
sbb
mov
daa
xchg
lods
insl
shll
pop
clc
jno
mov
test
jmp
int
or
or
sub
movsl
push
shrl
mov
fxch
cmp
lea
mov
lret
les
sbb
cmp
dec
adc
and
cmp
and
mov
add
or
and
test
dec
pop
enter
movsb
lea
mov
frstor
mov
iret
mov
cltd
sub
xchg
das
and
iret
or
mov
or
lock
sbb
ja
gs
lods
test
ljmp
inc
adc
jmp
or
mov
loope
sti
jmp
xchg
xorb
out
pop
sub
testb
jmp
bound
shll
imul
jae
std
jae
out
cmpsb
or
ret
or
mov
test
sbb
jl
mov
in
push
in
lret
xchg
pop
imul
and
mov
test
pushf
dec
call
cmc
fdiv
lahf
jnp
mov
cli
xchg
arpl
iret
lods
out
sub
xchg
sbb
fucomip
xor
push
push
insl
sahf
cs
fildll
ret
and
stos
mov
jbe
push
mov
movb
pop
dec
repz
mov
cmp
add
out
sbb
fmull
push
xor
xchg
jno
aad
popf
lret
xor
setle
rcl
push
jae
out
ss
mov
imul
mov
ja
fimuls
nop
sub
in
testl
aam
rcr
mov
lret
mov
adc
aad
lret
mov
xor
and
or
iret
pop
inc
out
xchg
sub
jns
jno
mov
mov
and
pusha
adc
lock
arpl
mov
arpl
imulb
fidivrl
or
cmp
push
repz
mov
sub
cwtl
les
jp
enter
adcb
push
adc
jnp
int3
sub
or
lret
adc
inc
sub
lods
pushf
add
and
xchg
adc
push
aaa
push
push
fwait
out
xchg
aaa
sbb
in
sub
dec
sbbb
cltd
or
push
or
jb
mov
mov
adc
mov
movsl
into
repz
push
jmp
pop
and
inc
testb
mov
mov
and
jne
test
std
xchg
and
add
cmp
dec
fnstsw
lods
sub
add
jmp
sub
and
sahf
in
and
jne
pop
pop
sahf
lea
push
pop
call
cmp
dec
lret
loopne
push
stos
pop
push
sbb
cmpsb
push
pop
pop
addr16
pop
or
jb
mov
xchg
outsl
jno
sub
dec
fidivrl
cwtl
lcall
fs
loopne
loope
inc
adc
mov
dec
add
pop
les
les
pushf
xor
jo
fwait
sbb
cmc
push
sti
fbld
imul
cmpsb
imul
aaa
mov
fwait
cmp
repnz
aam
out
test
push
pop
xchg
andl
mov
jb
int3
or
push
sbb
das
push
jno
les
incl
enter
stc
pop
clc
mov
jge
xchg
dec
das
push
ficoml
pop
mov
enter
adc
mov
outsb
ja
mov
out
inc
xchg
lds
popf
imul
jne
outsl
pop
jo
aaa
roll
lret
loope
and
xor
and
and
push
ljmp
cwtl
mov
jle
push
jg
fimull
iret
mov
or
stos
in
adc
popa
out
mov
jo
push
jo
add
dec
lds
std
xor
in
test
cmc
fstl
daa
fcoml
pop
test
xor
bound
sbb
jbe
and
scas
imul
enter
add
in
xchg
and
lods
repnz
pop
push
sub
inc
inc
jo
adc
adc
fs
sub
sub
cmpsb
aaa
es
js
jp
xchg
xchg
mov
jg
sbbl
add
out
stc
and
sahf
icebp
ss
fstpt
insb
push
pop
loopne
jmp
ficompl
mov
pop
std
pop
push
lret
sti
pop
ljmp
dec
push
pop
mov
sub
mov
aas
shrl
pop
mov
mov
sub
cmp
shlb
and
mov
inc
cmp
inc
mov
sub
inc
repnz
xchg
sbb
inc
mov
lahf
cli
mov
push
rcl
pop
pop
movsl
cmp
cmp
sub
xor
loope
inc
rclb
cmp
aam
js
fdivrs
mov
andb
shlb
push
fnstenv
inc
adc
and
int3
mov
add
add
mov
mov
test
enter
es
scas
imul
mov
mov
jnp
mov
mov
jge
fwait
divb
shl
and
cmp
lcall
sbb
mov
outsl
xchg
dec
std
jbe
adc
pop
sub
fsubrl
andl
or
sbb
cld
arpl
je
fsubrl
fstpl
fidivrs
xchg
lock
addb
push
mov
cwtl
ljmp
call
mov
stos
xchg
cmp
mov
cld
xor
data16
mov
pop
fdivrl
or
test
fldenv
mov
ret
cmp
and
loope
or
out
add
aaa
test
and
fwait
mov
mov
mov
and
jne
pop
xchg
and
test
and
stos
xchg
pop
test
pop
imull
mov
jg
mov
sub
in
xchg
fidivl
cmp
push
jb
aam
out
jecxz
in
pop
ret
enter
xor
les
mov
push
into
lcall
mov
jge
je
insl
xor
bound
jp
sub
aaa
pop
cwtl
jns
fmuls
mov
pop
push
test
not
sti
and
sarl
fistpl
adc
push
inc
mov
js
push
mov
dec
pop
shl
aad
adc
iret
push
rcrl
xchg
mov
enter
mov
inc
mov
cwtl
test
lods
mov
xchg
lahf
jne
jb
cmp
loop
andl
mov
inc
shlb
dec
adc
jmp
popfw
clc
and
ret
pop
call
sbb
lods
add
cld
adc
je
loopne
mov
sti
jmp
ljmp
shrb
les
inc
int3
repz
gs
lods
cld
leave
out
or
cli
insb
jl
mov
dec
sbb
mov
xchg
and
fildl
cli
dec
or
fs
popf
ror
lret
inc
lods
iret
and
inc
cli
push
or
popa
fwait
rclb
ss
mov
lret
adc
loope
xchg
out
rorb
daa
xchg
jne
adc
cmp
leave
push
cld
sbb
pop
sub
and
scas
loop
jno
jmp
enter
mov
lahf
add
lds
call
frstor
int
cmp
cs
dec
sub
adc
jno
sub
lret
pop
dec
jb
dec
data16
mov
mov
test
daa
inc
out
lods
inc
ss
jmp
clc
jo
js
lahf
jecxz
fstps
xor
aam
push
dec
std
or
fisubl
mov
popf
punpckhdq
dec
loop
cmp
jo
xchg
cwtl
mov
aam
mov
lds
shr
jbe
push
jae
inc
rcrl
lds
je
fisubs
int3
out
add
sub
dec
mov
dec
dec
adc
pop
out
bound
pop
loop
ss
stos
sbb
cmp
inc
xor
mov
jp,pt
mov
pop
xchg
or
aad
sub
out
add
das
in
inc
mov
loopne
loopne
and
ret
push
loop
push
clc
aaa
cltd
push
mov
pusha
mov
adc
jmp
in
movsl
inc
add
repnz
das
or
mov
push
cmpsl
xor
push
popa
sbb
dec
and
xchg
je
push
dec
movsb
lcall
loop
and
stos
push
xchg
bound
dec
sub
push
inc
jmp
lret
ret
scas
lcall
lea
cld
insl
xor
sub
push
mov
adc
into
shrb
mov
jns
or
arpl
fisttps
adc
sub
test
xchg
mov
inc
gs
js
cmpsb
xor
cmp
push
sub
push
arpl
roll
je
adc
pushf
shrb
pop
dec
mov
leave
loope
cmp
push
jnp
push
pop
cmp
inc
mov
mov
addl
sbb
test
push
stc
rorl
add
ret
sti
lds
daa
jecxz
fimull
pushf
pop
loopne
xchg
sub
fsubrp
jmp
sbb
jbe
fs
mov
xchg
scas
scas
hlt
adc
jbe
jne
cmp
mov
inc
push
push
pusha
testb
dec
es
adc
pop
popa
or
std
faddl
ret
dec
or
and
iret
pop
pop
xlat
out
dec
xorb
dec
mov
jp
sarl
bound
xchg
jne
jbe
pop
out
ficoms
add
push
xor
dec
push
xchg
fisubs
and
add
notl
or
adc
dec
xor
pop
sbb
add
jno
lock
add
add
jns
sub
pop
push
adc
mov
rorl
push
push
sub
inc
mov
sti
push
pop
ljmp
sub
dec
mov
sub
mov
int
add
push
cs
mov
mov
fs
push
mov
or
clc
subb
pop
adc
pop
jl
mov
shlb
sbb
popf
fldt
mov
subb
roll
rol
dec
xor
js
popf
adc
and
mov
ret
mov
sub
xchg
je
mov
je
fwait
mov
fisttpl
sbb
cli
add
xor
iret
pop
leave
dec
mov
jae
sbb
jae
mov
xchg
and
popf
xchg
add
ss
cmp
lods
dec
ret
repnz
cwtl
arpl
mov
pop
cmp
std
fidivs
adc
or
popa
mov
and
ret
clc
lods
jnp
inc
jbe
mov
inc
adc
dec
cmc
in
jnp
lcall
movd
mov
loopne
inc
mov
mov
xor
push
out
pop
sub
xchg
xchg
lock
stc
pop
out
adc
aad
shlb
repz
lds
jbe
shlb
or
rolb
xchg
lock
dec
pop
lahf
xor
test
dec
xchg
lock
push
aas
daa
cmp
xchg
jne
lods
out
movsl
or
sub
sub
loopne
inc
loop
rcl
clc
sub
aas
ds
dec
std
dec
outsb
into
push
mov
mov
xor
adcb
dec
cmp
in
dec
push
test
out
movsl
ds
icebp
shl
push
cmp
cmp
lcall
mov
jge
pop
scas
cmc
jg
lret
fwait
mov
dec
push
std
aaa
inc
clc
add
sbb
int3
push
addr16
cmpsl
aad
repz
cli
sub
test
mov
pop
fwait
aas
out
addl
vsubpd
mov
sub
fdivr
int3
or
andb
int
add
mov
stos
iret
or
xchg
inc
movsl
movsl
add
aas
movsl
xor
mov
repnz
cmc
jl
fwait
pushf
or
cs
fcmovu
inc
stc
orb
mov
push
imul
bound
mov
shlb
adc
dec
xor
es
cmp
bound
rclb
mov
xor
cmp
inc
outsb
adc
fldcw
adc
push
mov
push
jae
mov
lcall
roll
cmp
cmp
pop
imul
and
xor
in
adc
pop
xchg
mov
sahf
adc
mov
dec
add
jns
cmp
push
fsubs
mov
jmp
or
xor
push
mov
fimull
pop
push
lods
dec
push
sub
jmp
xor
jb
frstor
fsubr
mov
or
fsubp
cmp
lods
repnz
jns
sarb
adcb
or
pop
jne
jb
jo
inc
test
sbb
mov
mov
adc
js
popf
cmp
or
call
addr16
fistl
insl
inc
mov
push
add
cmp
fs
shll
lds
xor
push
pushf
imulb
push
cmc
hlt
jge
jp
fmul
iret
js
xchg
test
jg
cmpl
dec
jb
in
sub
push
lret
clc
daa
sub
jb
sbb
movsl
dec
push
mov
push
fistl
fisubrs
clc
dec
and
in
or
lcall
or
iret
mov
in
xchg
hlt
scas
dec
stos
or
push
fisttps
fs
mov
pushf
pop
mov
in
arpl
push
testl
sti
mov
sub
dec
mov
sub
push
pushf
xchg
movsb
or
nopl
adc
xchg
bound
pop
scas
sbb
adc
stos
lock
adc
sbb
push
pop
data16
mov
xchg
and
cwtl
sar
popl
mov
dec
arpl
imulb
ljmp
xchg
mov
sbb
aad
into
je
iret
pop
mov
in
dec
sarb
sub
sbb
inc
xorl
int3
jle
frstor
cld
inc
pop
cmc
int3
jecxz
loope
je
cmp
sub
and
or
push
xor
mov
andl
out
sub
outsl
add
xbegin
cmc
inc
jnp
imul
enter
mov
and
xor
cmpsb
jae
push
je
or
push
out
dec
mov
mov
ljmp
pushf
xchg
mov
jo
add
inc
addr16
add
fdivr
repz
dec
jle
mov
ss
out
popa
je
subl
mov
xor
sub
jno
inc
cmc
sub
and
stos
in
cltd
xor
mov
movsb
das
add
mov
adc
lock
jns
add
popf
push
js
add
idivl
xchg
mov
cmpsb
or
imul
insl
mov
je
xor
lret
bound
icebp
cltd
jb
in
mov
test
pop
imul
mov
pop
out
mov
ds
add
add
mov
sbb
inc
cmpsl
xor
adc
ret
loopne
fstl
icebp
xchg
js
push
cmpsb
pop
dec
ja
sbb
cmp
icebp
fwait
mull
out
js
sub
inc
hlt
add
cmp
ret
push
daa
xor
mov
lcall
mov
jo
adc
test
nop
or
cmc
jl
push
pop
aad
jmp
imul
cmp
cs
mov
fiaddl
loop
rcl
enter
iret
jne
push
mov
pusha
nop
and
call
out
mov
cmpsb
pop
cmp
imul
xchg
push
cmp
jne
clc
shl
bound
sub
scas
push
lods
out
push
add
testl
rolb
push
cmp
mov
js
cltd
ror
inc
in
mov
jb
insb
leave
xchg
movsb
icebp
dec
mov
lret
cltd
mov
pusha
test
push
jl
movsb
mov
sbb
les
cltd
js
loopne
cmp
stos
iret
cli
jbe
dec
xlat
cmpsl
push
in
mov
jo
stos
sbb
mov
fucomip
sub
ds
add
jb
das
arpl
into
adc
xchg
nop
pop
pop
sti
cwtl
in
xchg
mov
out
jno
std
cmpsl
js
push
lock
inc
jp
inc
nop
jae
bound
add
repnz
push
pop
pusha
cwtl
and
loop
imul
insl
lret
mov
xchg
hlt
xchg
cmpsl
je
dec
xor
ljmp
aad
gs
inc
pop
push
adc
repnz
imul
add
loope
adc
mov
mov
mov
in
inc
or
xor
stc
pusha
mov
daa
iret
xchg
fwait
or
mov
fstpt
rcrb
mov
mov
fistps
lock
addr16
push
sbb
mov
or
mov
xor
sub
xor
sbb
shlb
push
scas
pop
in
out
outsl
sbb
movsl
test
push
lds
es
jbe
pusha
ds
or
inc
rorl
lret
mov
jmp
xchg
das
popf
pop
mov
imul
inc
dec
jae
mov
mov
lcall
cmp
sub
dec
xchg
mov
mov
lock
dec
add
ja
mov
out
jl
mov
jns
fsubrs
iret
mov
mov
mov
mov
xchg
mov
xchg
pop
push
movsl
insb
cmp
inc
gs
stos
push
lds
in
jecxz
inc
cltd
mov
pop
dec
lea
push
inc
jl
mov
cli
dec
xor
push
addl
cmp
mov
shrl
mov
movsl
lds
test
jb
pop
push
push
movsb
jae
mov
out
outsl
cltd
jp
and
adc
dec
mov
pushl
test
cli
lahf
ss
pop
mov
clc
mov
icebp
inc
rol
test
pop
inc
dec
pop
jp
push
fldenv
fnstenv
fmull
sub
aas
dec
incl
loopne
add
aad
je
push
push
notb
and
adc
push
in
test
stos
adc
mov
inc
mov
clc
push
out
mov
jge
lahf
or
les
mov
lods
mov
mov
sbbb
out
push
pop
mov
notl
xchg
and
push
inc
sbb
clc
testb
dec
sub
mov
rorl
or
neg
mov
cmp
lods
sbb
xchg
mov
push
pop
push
fsubs
mov
xchg
subb
scas
sub
cld
lock
mov
int3
js
xchg
sub
sub
stos
push
push
lea
lret
js
decl
je
sahf
jbe
cmp
push
mov
inc
in
dec
mov
push
mov
push
popa
mov
pusha
test
or
ljmp
cmpsl
rorl
lods
and
in
shlb
ja
xchg
scas
int3
fimull
scas
lock
rcll
inc
imull
and
cmp
or
outsb
cwtl
xor
sub
daa
push
int
repz
xchg
xor
pop
out
mov
xor
pop
jmp
mov
jge
adc
adcl
inc
test
push
fnstsw
std
sbb
fwait
lock
jnp
or
popa
aam
mov
xchg
imul
cmc
inc
dec
xchg
adc
fldenv
je
jp,pt
and
das
ss
cmpsb
iret
sub
test
mov
jns
insb
iret
adc
test
mov
shlb
int
mov
cmp
in
cmpsl
insb
add
adc
cld
xor
ffree
out
add
mov
add
dec
xchg
xor
cmp
sub
test
xor
mov
inc
fwait
scas
test
test
lahf
fistpl
sbb
add
sbb
out
mov
mov
cmp
call
lods
scas
rorl
mov
mov
sbb
xchg
ret
jae
andw
cmp
dec
in
sbb
movups
mov
int
cwtl
popa
jecxz
mov
sub
xchg
in
pop
inc
lcallw
sub
inc
fcmovnbe
cmp
rcll
xor
je
fistl
mov
pop
scas
test
jno
xchg
cmp
dec
push
sub
call
pop
out
insl
dec
xor
mov
fsubrl
mov
in
scas
adc
sbb
mov
or
movsb
push
push
cli
out
std
sbb
out
lods
xor
in
push
sbb
fsts
cld
and
mov
add
fldl
ja
mov
jecxz
xor
lock
adc
mov
adc
and
jo
lret
xchg
push
fwait
pop
lods
jmp
popf
roll
ljmp
mov
test
add
fsubs
push
aad
xchg
add
stos
xor
jbe
sub
pop
push
dec
enter
aad
mov
dec
cld
pop
push
add
ja
push
call
fisttpl
sub
dec
inc
push
in
cmc
lret
rorw
fiaddl
mov
and
adc
dec
xchg
push
dec
es
out
fstpt
push
lcall
in
sub
mov
cli
sub
xchg
mov
jb
pop
scas
outsb
and
fsubrs
mov
mov
aad
shl
mov
popf
outsb
and
test
push
ja
movsl
sbb
sub
pop
mov
add
pop
push
ds
jecxz
ret
cmpsb
or
pop
mov
and
push
jmp
and
sti
and
add
jecxz
sbb
fisttpl
popf
mov
adc
dec
aas
lahf
adc
jns
dec
push
or
sub
mov
aas
jg
jl
jne
adc
mov
xlat
in
scas
cld
int
xor
gs
xorl
les
mov
outsl
push
xchg
jmp
jbe
stos
insl
jg
pop
fldenv
and
or
xor
test
adc
add
and
sbb
mov
xlat
idivb
mov
fstpl
stos
adc
scas
jecxz
sub
push
lret
sub
or
pop
mov
add
fnstcw
clc
imul
or
adc
cmc
cmp
rcrl
dec
mov
sbb
add
stc
adc
and
cmp
add
add
scas
mov
in
out
cmp
sbb
lea
cwtl
lock
inc
dec
insb
sbb
shr
inc
test
cmc
test
mov
repnz
push
inc
dec
pop
nop
sbb
insl
add
mov
lret
in
pop
inc
pop
add
andl
int3
sub
cmpsb
roll
cltd
pop
cmpsl
insl
out
scas
cs
adc
fstps
mov
mov
cmpsb
mov
push
ror
inc
rcr
pusha
stos
adc
xchg
sub
mov
aam
dec
rorl
xchg
cmpsl
cmc
pop
jo
mov
mov
push
jae
scas
popa
push
push
insl
adc
pop
adc
ror
daa
jbe
mov
in
jns
mov
or
dec
pushf
add
sub
ja
inc
push
or
subl
jge
or
inc
sbb
pop
sub
shl
mov
loop
aaa
mov
pop
mov
out
sar
mov
push
cmp
jo
mov
and
jle
out
scas
and
xor
pushf
loope
cli
int
fwait
mov
cmpsl
push
push
jecxz
push
push
xchg
movsl
ljmp
cmpsl
stos
push
or
pop
pusha
into
sub
cmp
test
xor
into
pop
dec
jecxz
or
leave
fsubr
mov
pop
push
or
inc
jo
out
mov
fwait
adc
sub
and
shll
sti
push
and
insl
or
jmp
cmp
inc
mov
pusha
xchg
sbb
adc
cs
popl
pushl
cmp
outsb
jp
dec
frstor
flds
adc
jmp
cmp
dec
push
jb
nop
jecxz
xchg
out
mov
sarl
inc
or
push
mov
adc
je
popa
adc
int
mov
fimull
and
add
sub
push
mov
inc
mov
cmp
xchg
pop
mov
sarb
cli
add
mov
mov
hlt
and
and
sub
mov
jecxz
nop
fwait
cs
clc
inc
scas
mov
jne
xchg
push
stos
pause
addr16
mov
fldl
adc
aas
xlat
inc
sub
out
cmc
add
aas
jg
xchg
rcl
push
cltd
popa
cmc
jb
lods
xlat
cld
sbb
inc
divl
imul
pushl
je
mov
xchg
mov
jb
add
nop
lock
filds
dec
loope
push
mov
movsb
daa
mulb
jecxz
inc
lcall
cmpsl
or
in
mov
cmp
cltd
movsl
sti
lcall
cmp
call
out
ret
xor
sub
daa
repz
sbb
jnp
int
jecxz
or
jne
jmp
popl
insb
shll
incl
mov
das
sahf
cmpsb
insb
mov
rorb
dec
int3
jns
fdivrl
pop
cmp
popa
test
inc
jne
enter
mov
jb
dec
jno
xchg
adc
pop
push
inc
sbb
push
sbb
ret
ror
xor
cmpsb
mov
and
fsubrl
jle
loopnew
add
popf
popf
xchg
aaa
inc
out
inc
lret
stos
pop
inc
jg
dec
lock
xchg
jle
mov
push
jnp
loopne
sub
call
xchg
sbb
in
sarb
dec
push
sub
lcall
repz
loope
add
mov
movsb
xchg
xchg
leave
es
fisttps
les
sub
pop
push
out
and
cmp
cwtl
dec
ficomps
mov
mov
int3
jae
rcll
dec
jle
out
leave
loopne
or
push
mov
test
mov
push
push
or
and
test
or
sbb
lea
or
imul
jbe
movsb
sti
orb
mov
push
mov
outsb
loope
ss
and
mov
pop
ss
fcom
cmp
fisttpl
xor
mov
sti
ret
data16
ret
int3
cld
sbbb
mov
mov
cmc
es
mov
arpl
mov
test
dec
fs
dec
stos
rclb
jnp
jl
mov
adc
push
sbb
jae
bound
or
imulb
lods
mov
jne
and
push
enter
mov
adc
cmp
cld
test
aaa
cltd
cmp
in
cmp
icebp
idivl
cli
or
rorl
repz
pop
adcl
shrb
divb
mov
daa
mov
inc
insb
inc
in
stos
add
add
sub
cmc
pop
xor
pop
inc
loop,pn
and
push
xchg
adc
jnp
mov
push
test
jne
fists
push
mov
movsb
cmp
inc
scas
dec
fsubs
jae
jb
rcll
loopne
jns
cmp
add
testl
stos
mov
push
adc
mov
sub
jnp
dec
fldl
push
stos
and
fbstp
lcall
jp
and
nop
pop
xchg
push
sbb
pop
fwait
sbb
dec
outsl
jmp
ret
test
fbld
mov
imul
outsl
dec
mov
hlt
sbb
out
sbb
in
mov
loopne
aam
test
cmc
lods
pop
xchg
icebp
mulb
shrl
popa
dec
push
xchg
aam
and
dec
sbb
movsb
mov
int3
leave
jo
sub
pop
inc
add
arpl
cli
loop
adc
push
sub
cwtl
adc
sub
mov
dec
imul
lret
popa
mov
or
insl
pop
pushf
push
inc
outsl
xlat
outsb
clc
shll
pop
pop
insb
insb
imul
xlat
lahf
push
fstpt
inc
cmc
inc
mov
out
sbb
int3
test
push
ss
out
and
mov
xor
into
or
pusha
sub
cmp
inc
les
aas
inc
xor
push
mov
adc
int
jmp
and
dec
bnd
or
hlt
ret
icebp
adc
xchg
xchg
out
sti
push
inc
fmuls
pop
mov
ss
sahf
mov
int
jae
xor
dec
js
inc
rcl
sbb
cmpsb
mov
mov
out
push
js
les
mov
stos
test
pushl
ds
pop
xorb
mov
jb
movsl
or
jno
mov
rcr
insl
aad
push
cmp
insb
dec
mov
divl
cmc
lds
jp
dec
lret
or
push
sbb
xor
sbb
add
divb
push
jb
dec
xchg
xchg
sahf
shl
lea
dec
adc
xor
loopne
xchg
call
mov
sub
push
inc
jo
stos
jo
cli
sbb
inc
stos
hlt
xorw
inc
pop
cmp
pusha
pop
scas
ret
xor
rcll
lea
xchg
xchg
dec
jmp
stos
fs
jne
mov
jae
sbb
and
imul
or
mov
popa
into
mov
mov
push
dec
push
cwtl
dec
dec
test
cs
inc
pop
adc
add
jmp
or
testb
lahf
push
ds
push
gs
pop
cwtl
cmp
je
clc
pusha
lods
daa
inc
clc
inc
mov
xor
out
movsb
xchg
fidivl
cmc
mov
icebp
scas
xchg
cmc
rolb
repnz
shl
stos
add
jo
clc
jnp
aas
jp
loope
adc
mov
icebp
xor
aad
cli
fwait
adcl
ret
es
movsb
jp
lcall
leave
outsl
and
sub
aam
ficoms
jbe
out
mov
push
add
and
lret
dec
push
loop
and
mov
push
jns
call
ljmp
cmpsl
push
and
xchg
testl
sub
pop
out
sahf
addr16
bound
xchg
pop
pop
or
dec
ret
lods
sahf
inc
out
dec
xchg
push
push
xor
insb
loope
mov
lcall
push
mov
outsl
sbb
sbb
rcll
fs
stos
cld
fldenv
push
fwait
stos
repz
and
push
dec
dec
mov
cmp
lods
hlt
push
lcall
inc
cmpsb
adc
cmp
or
adc
in
mov
fidivl
jmp
lea
insl
les
cmp
xchg
add
dec
loope
dec
sub
int
sti
push
mov
std
jns
loop
lldt
jge
sbb
pusha
mov
stos
fbstp
push
lock
scas
dec
mov
pop
jns
idiv
movsl
jae
sub
sub
test
imul
push
mov
lcall
adc
lret
aad
jmp
test
scas
mov
xor
dec
mov
cltd
pop
jge
pop
inc
lcall
mov
pop
pop
xor
cmp
loopne
push
in
jmp
xor
mov
nop
data16
pop
or
mov
aaa
nop
dec
insb
ret
jge
add
and
xchg
mov
sbb
jo
cmpl
addr16
mov
int3
rol
test
pop
out
fnsave
shrl
shr
testb
add
mov
loop
popa
push
test
xor
mov
jl
jg
pop
aas
push
in
xor
pop
xorb
mov
fcoms
in
adc
loope
fwait
pop
xor
mov
jp
jb
mov
fsts
stos
mov
faddl
arpl
scas
mov
subb
je
in
and
xor
cmp
inc
adc
addr16
mov
es
pop
sbb
arpl
jns
cs
lret
dec
push
popf
cmp
out
daa
mov
inc
mov
mov
fldl
imul
popf
mov
dec
fldenv
insb
xlat
ficoml
xor
cmp
or
fstpl
xchg
jnp
adc
icebp
add
fidivrs
repnz
int3
mov
add
xorl
or
and
mov
bound
test
sbb
cmp
or
stos
arpl
scas
mov
pushf
aaa
aas
inc
mov
xor
nop
push
inc
mov
sbb
lcall
fstl
jg
pop
imul
add
cmp
cld
xchg
xchg
or
or
fidivs
dec
xor
xor
xchg
jno
pop
ss
dec
sub
lret
adc
xor
inc
add
jl
test
cmp
jl
xchg
mov
stos
faddl
xchg
in
sti
pop
fwait
in
jge
adc
loop
mov
rcrb
xchg
jmp
push
ret
sbb
ret
faddl
mov
xchg
mov
in
inc
mov
mov
pop
orb
hlt
sbb
cli
xchg
leave
cmpsb
int3
fidivrs
shrd
mov
inc
dec
leave
mov
xorl
nop
cld
outsb
push
stos
sub
outsl
adc
xchg
lret
dec
icebp
mov
ror
leave
pushf
cmp
jb
rep
sub
cmp
adc
sub
and
xlat
push
sahf
push
adc
sub
adc
ja
rolb
mov
xchg
push
adc
je
ds
mov
out
lcall
adc
mov
inc
dec
push
mov
pusha
fisttpll
xchg
add
dec
lds
lret
out
int
sub
jl
inc
std
jmp
sub
loope
xor
mov
cld
jle
push
dec
shrl
and
fdivs
popf
sbb
or
mov
or
sub
sub
lsl
sti
loopne
mov
cs
scas
dec
into
sub
sub
andl
cli
lret
jo
mov
and
dec
xor
test
dec
sbb
pop
dec
sbbb
or
popa
xchg
inc
out
cmpsl
stos
shll
fwait
push
data16
fcoms
mov
outsl
pushf
and
aam
add
adc
movsl
cmp
sbb
push
jnp
adc
enter
roll
push
hlt
dec
mov
mov
xor
inc
jle
in
or
popa
repz
jge
pop
fbstp
pop
data16
jno
mov
lods
sub
push
addl
and
sbb
push
lods
outsl
and
out
cmpsb
xchg
jo
insl
idiv
insb
add
mov
push
loope
test
mov
lds
flds
repnz
shll
push
pop
out
adc
mov
xor
es
jne
in
das
sub
ljmp
jnp
mov
int3
pushf
mull
js
pop
insb
sbb
xor
jo
int
insl
ss
mov
loopne
int3
mov
dec
sti
mov
inc
cmp
loopne
repnz
cmp
xchg
cmp
sbb
cmp
mov
sub
nop
rorb
xor
inc
mov
dec
and
or
aaa
mov
sbb
jns
invd
mul
push
jae
hlt
mov
bswap
fdiv
lds
in
std
hlt
outsl
rcrb
andl
xlat
std
clc
outsb
insl
addb
fidivl
mov
mov
cltd
mov
sarb
pushf
cmp
stc
fists
test
inc
cmpsb
das
sti
adc
and
pop
sbb
loope
fimull
inc
sub
movsl
push
data16
mov
outsl
xchg
call
dec
dec
mov
imul
adc
mov
jl
unpckhps
repz
dec
fmuls
add
cltd
sbbl
push
sbb
and
sub
cmp
jo
repnz
jg
jg
lret
mov
xor
or
mov
jno
adc
in
loope
push
mov
mov
adc
sarl
jp
inc
add
out
xchg
fnsetpm(287
pop
lods
jbe
loope
imul
es
out
xor
mov
push
sbb
or
cs
loope
insl
jle
cmc
shr
cmp
push
ret
mov
or
pop
pusha
in
stc
or
adc
xchg
fidivl
xchg
cmp
jmp
lods
sbb
cmp
out
dec
cli
cmp
push
and
mov
xor
pop
je
or
test
cli
jb
test
mov
push
scas
hlt
ljmp
pushf
inc
cmp
in
mov
in
aas
jmp
jge
stc
out
test
inc
es
cwtl
jmp
inc
test
lret
inc
pop
lods
push
mov
stos
int3
add
arpl
dec
add
cwtl
scas
adc
stos
cmpsb
pop
xchg
das
mov
shll
sub
mov
je
mov
sbb
call
pop
jo
sti
xchg
jno
scas
stc
xor
cld
cmp
sub
inc
test
inc
and
pop
rcrl
mov
aad
xor
pusha
aam
or
xchg
add
fcmovnbe
xchg
test
or
inc
mov
idivb
sub
dec
and
out
xor
jmp
mov
lods
or
inc
mov
mov
mov
or
add
push
clc
and
pop
popf
test
adc
xor
push
add
fiadds
imul
iret
xchg
push
das
jl
jge
jo
cwtl
scas
out
jle
stos
mov
aam
out
testl
or
repz
mov
test
addl
cmpsl
test
rolb
mov
push
lahf
rcrl
stos
jp
mov
dec
std
pop
xchg
xchg
int3
and
icebp
leave
add
fdivrs
cmp
adc
dec
movsl
test
call
dec
inc
xor
mov
adc
loope
mov
gs
into
pop
adc
ret
jb
pop
cs
push
in
loopne
rorl
xor
pop
neg
cld
out
loop
movsb
sbb
pusha
mov
int3
push
or
loop
cmp
out
lods
sub
loope
mov
mov
adc
or
imul
jb
cmpsl
push
lock
add
sbb
add
xchg
cmp
sub
jecxz
ja
or
dec
jle
dec
adc
inc
sbb
mov
and
fdivrl
mov
test
sub
sub
pop
popf
fld
sbb
pushw
outsb
mov
dec
cmp
fimuls
pop
lret
pusha
fs
jecxz
in
adc
mov
push
pop
mov
lret
and
incb
or
mov
mov
bound
pop
fldcw
pop
div
lcall
cmp
push
lret
fwait
arpl
icebp
mov
adc
sub
icebp
jnp
jl
mov
mov
cltd
push
jbe
pop
sub
outsb
push
push
lds
daa
out
xor
loope
clc
pop
inc
jns
xchg
movsl
addr16
addr16
lea
mov
fisttpl
jecxz
add
and
mov
dec
and
mov
icebp
push
sub
inc
xor
cmc
or
pop
ss
mov
es
daa
dec
add
mov
in
push
fldt
inc
jg
adc
jge
loopne
outsl
leave
in
jbe
xchg
sbb
repnz
xchg
fwait
repnz
es
mov
push
adcb
pop
xchg
mov
dec
jle
ja
sti
inc
add
jecxz
push
mov
loop
push
cmpsl
sbb
push
lret
out
xchg
pop
sbb
adc
fimuls
sbb
out
cli
and
cwtd
dec
ds
leave
imul
sti
mov
xchg
ds
jne
add
dec
sbb
sahf
dec
movsbl
fucompp
xor
pop
inc
pushf
cmp
mov
popf
mov
jns
add
and
jge
cmpsl
adc
outsb
add
or
push
or
mov
hlt
inc
push
add
jge
pop
jg
stos
push
push
sbb
in
je
jmp
rclb
mov
pop
out
xchg
jge
test
cmpsl
xchg
xchg
je
adcb
int3
and
dec
in
push
insb
insl
sub
mov
cmpsl
jge
dec
ja
outsl
mov
add
bound
jnp
inc
mov
pop
sar
and
lods
cwtl
pop
push
shll
push
inc
fwait
push
push
mov
or
aaa
or
xchg
cwtl
mov
sbb
cmc
jg
xor
fwait
iret
jmp
out
ret
mov
push
scas
clc
pop
mov
movsl
jle
push
hlt
fdivrl
sub
mov
lahf
sub
cwtl
adc
inc
mov
in
hlt
daa
mov
jno
pop
push
cs
outsb
aad
and
sub
aaa
push
adc
sub
cltd
pop
lods
ss
orb
push
adc
push
add
rclb
ret
or
ret
adc
cmp
inc
iret
mov
adcb
pop
jle
lahf
xor
popa
call
xchg
jl
jno
mov
in
pop
ja
fwait
cmpsb
icebp
movsb
test
push
rorb
push
mov
xchg
dec
xchg
dec
andb
mov
mov
imul
sub
inc
push
fstpl
imul
cmpsb
xchg
lcall
mov
sbb
mov
and
vxorps
jne
add
into
fldcw
enter
jmp
ljmp
cmp
xor
arpl
push
fidivl
cmp
mov
jo
lock
dec
pop
subb
cmpsb
xor
shl
or
scas
xchg
dec
lret
in
pop
mov
mov
xor
cmp
sbb
lret
or
scas
aaa
jnp
mov
movb
cmp
insb
adc
stc
inc
jbe
push
test
dec
or
or
lods
sub
dec
insb
rcll
inc
sar
inc
jbe
sub
dec
mov
js
popf
jo
inc
adc
xchg
mov
inc
imul
push
pushf
xchg
mov
sbb
adc
jne
lods
pop
fs
sbb
stos
lahf
xchg
mov
fxch
and
lods
std
adc
sar
icebp
push
adc
push
mov
mov
ret
mov
iret
push
xchg
lcall
std
push
enter
out
mov
scas
sbb
xchg
mov
pop
adc
lret
lods
and
stos
sbb
mov
push
je
or
xor
shll
in
sub
xlat
cmp
aad
pop
outsb
iret
cmp
call
adc
adc
ror
adc
mov
push
adc
rorb
arpl
mov
or
pushl
stos
add
test
push
xchg
cmp
push
loope
or
and
sub
movsbl
mov
xchg
mov
and
popf
mov
xor
xacquire
sbb
in
xlat
out
inc
std
sbb
sub
jbe
fisubl
decb
ja
leave
dec
xchg
gs
je
ja
or
leave
xor
xchg
rol
pop
or
adc
mov
incl
out
in
cmp
inc
pop
or
sub
dec
pop
jmp
dec
dec
mov
scas
dec
xor
lock
mov
stos
lcall
shl
movb
ss
stos
decl
inc
xchg
mov
add
dec
inc
pop
fwait
add
pop
aas
out
and
cmp
call
fisttpll
in
ret
pushf
pop
loopne
daa
adcl
mov
out
fs
cmp
push
xchg
pop
cli
fs
stos
pop
dec
in
dec
mov
int3
add
adc
enter
adc
int3
jne
add
mov
add
cmpsl
mov
push
cmpsl
jb
xor
aam
adc
test
and
stc
bound
inc
or
out
shll
add
jno
xor
in
cwtl
leave
dec
mov
mov
push
sub
popa
mov
inc
popa
cmpsb
outsl
mov
sub
mov
ror
mov
mov
inc
inc
mov
ret
ret
mov
jge
mov
xor
lret
shlb
or
mov
sub
pop
scas
into
outsb
jmp
cmp
xor
mov
leave
adc
pushf
scas
aaa
leave
push
mov
cltd
inc
sub
mov
sbb
sti
lcall
add
mov
adcl
cli
movsb
or
imul
lcall
aad
xchg
loope
inc
fisttps
shlb
mov
mov
cmp
ja
cmp
sti
sub
repnz
lret
pusha
mov
loop
pop
jge
mov
add
push
shrb
pop
cmp
gs
pop
fdivs
lret
pop
ret
ret
mov
add
imul
inc
xchg
mov
inc
xchg
xor
enter
out
jle
sub
xchg
mov
ljmp
test
inc
fistpll
pop
dec
dec
popa
js
push
out
fsubrp
xor
or
nop
jo
daa
loop
in
push
enter
iret
xchg
sbb
rclb
or
decl
sti
lcall
flds
pop
repz
inc
mov
pushf
jmp
cmpsb
shlb
test
pop
xchg
inc
aam
iret
mov
mov
arpl
and
pusha
dec
or
inc
sbb
jno
pop
test
push
add
inc
xor
cmp
out
das
ret
fldl
or
mov
sbbb
je
add
sub
scas
push
dec
ds
and
xor
call
stos
xchg
lock
pop
shrl
add
sub
cltd
fstps
mov
cmp
loop
pop
shrb
inc
sub
insb
add
push
fs
xor
mov
adc
and
divb
outsl
test
adc
js
insl
insl
xor
enter
pop
lahf
repz
cmp
xchg
push
pop
nop
test
mov
add
jns
push
inc
xchg
mov
xchg
or
mov
outsb
aam
int
cmpsb
push
dec
cmp
mov
int
idivb
lods
dec
mov
hlt
int
mov
add
dec
adc
sub
inc
icebp
sbb
cwtl
pop
aas
jge
xchg
aad
xor
and
lcall
mov
push
cmpsb
lret
hlt
adc
pop
lods
push
ret
xor
clc
jo
clc
sbb
hlt
cmp
shrl
mov
inc
mov
mov
push
mov
fstp
inc
mov
in
jmp
insl
mov
je
aad
pop
popf
push
sub
rcll
mov
add
frndint
lret
stos
lahf
and
or
les
je
jo
sti
addl
inc
or
add
sub
stc
cwtl
and
jb
add
cld
fdivrs
jle
stos
leave
rclb
adc
fcoml
mov
add
lret
jge
sar
mov
fstps
ret
pop
cld
xor
fldcw
mov
repz
fisubrl
out
jg
loop
outsl
aam
scas
int
push
or
mov
repnz
or
xlat
mov
sbbl
push
jecxz
pushf
repnz
push
cld
xchg
adc
testl
mov
mov
lods
cmp
mov
jb
xor
cmpsb
int
ds
or
rcrl
cmp
jp
pop
es
dec
scas
push
testb
sub
out
popf
fldcw
lahf
stos
daa
adc
or
fdiv
jo
test
arpl
xchg
stc
mov
movsb
insb
inc
out
mov
mov
out
movsl
mov
xchg
push
aas
xchg
xor
scas
fildl
push
aad
pop
add
sti
lea
add
push
lret
sbb
pop
push
xchg
rcrb
iret
mov
call
lods
ds
idivl
shrb
std
inc
jp
jae
aam
movl
push
test
push
in
fs
sub
mov
pop
ljmp
shlb
push
pop
inc
jmp
sub
decl
ret
int
cmp
jle
je
jne
mov
push
mov
lret
adc
std
xchg
dec
add
loope
int
ljmp
mov
inc
mov
repz
sub
and
push
jns
or
fwait
and
movsl
pushf
ret
js
ds
adcb
pop
add
cld
nop
dec
cmp
outsl
sub
mov
stos
adc
scas
ja
stos
int3
xor
nop
les
jl
inc
data16
dec
mov
divl
hlt
repnz
jmp
mov
cmpsb
packssdw
idivb
scas
out
xlat
xchg
rolb
popf
fistps
xchg
sbb
cmp
sbb
pop
and
call
pop
inc
lods
imull
lret
popa
mov
jns
xchg
in
or
jae
cmp
fimuls
push
mov
and
dec
nop
xlat
push
stc
aam
pop
outsl
jp
jne
scas
dec
js
scas
xchg
test
sub
lret
mov
fwait
das
cmp
and
nop
popa
repz
xchg
xor
repnz
stos
sbb
add
je
pusha
pop
lahf
lcall
jmp
add
test
lret
out
mov
les
aas
sarb
fnstenv
aas
ret
xchg
adc
ja
jl
push
mov
aaa
sbb
and
fstpt
movsl
fcompl
mov
hlt
mov
jb
cld
mov
frstor
clc
mov
insl
jmp
std
jns
cmp
and
icebp
bound
icebp
xchg
aas
popf
push
sbbb
bnd
fcomps
popa
stos
xchg
loopne
lcall
and
cmc
pop
cmpsl
scas
clc
push
pop
or
xchg
lahf
rcr
xchg
and
outsl
popf
add
bound
push
mov
add
imul
and
xchg
xchg
jge
arpl
push
aam
dec
push
testl
mov
bound
mov
sarl
push
inc
fptan
pop
adc
loop
ss
test
sub
or
and
jge
pusha
mov
lods
pop
in
rclb
and
bound
sub
daa
inc
cltd
mov
xchg
imul
sub
sbb
dec
ja
in
in
loopne
inc
mov
aas
add
call
push
lahf
mov
mov
dec
loop
fs
cmp
or
addr16
nop
scas
jne
inc
mov
xchg
xchg
sbb
fwait
add
js
jnp
xchg
popf
shlb
fucomi
aas
aam
push
sbb
xchg
xchg
cs
icebp
or
fsts
fistpll
arpl
fnstsw
rcrl
lret
sub
and
xchg
mov
shrl
mov
cmpsl
icebp
mov
or
mov
pushf
lahf
push
and
mov
in
push
mov
jmp
adc
cmp
shlb
enter
adc
shll
xor
jge
pushf
mov
movsl
es
fisttps
xchg
sbb
mov
movsb
sahf
pop
je
int
pop
inc
pop
lahf
inc
shll
repz
addr16
dec
pop
mov
add
xchg
jg
fwait
movsl
fstps
cwtl
fwait
mov
repnz
addr16
daa
out
in
adc
dec
into
icebp
xor
jbe
sarl
lods
xchg
pop
es
sub
xchg
mov
push
and
outsb
pop
pop
cmp
cmp
cmp
outsl
js
out
popf
lret
lret
dec
iret
shll
sbb
adc
sbb
aas
es
fcompl
in
sub
mov
in
jl
sub
dec
add
push
jae
repnz
jae
hlt
inc
mov
push
in
xchg
js
aad
sub
ret
in
xchg
mov
sub
scas
sub
lahf
mov
mov
cld
in
push
movsb
sub
add
scas
lock
dec
jmp
test
xor
in
rorl
sub
test
mov
pop
cwtl
int
rcrl
repnz
ja
fstpl
arpl
jmp
mov
push
push
mov
adc
sbb
push
std
adc
mov
xor
jne
push
insl
cmp
or
stc
sub
xchg
push
fisubs
or
sbb
outsb
push
subl
test
xorb
sbb
sub
jns
mov
lret
jle
in
inc
mov
xor
out
sub
jns
dec
sub
fwait
stos
lahf
les
fstpt
scas
fbstp
add
clc
push
outsl
inc
je
inc
xchg
icebp
faddp
jbe
jg
cmpb
mov
pop
jmp
popa
mov
mov
lcall
das
inc
test
jae
stos
mov
nop
movsl
inc
cmpl
into
bound
lods
xor
xchg
nop
sub
push
and
sbb
pusha
sahf
loope
es
pop
imul
jno
cmpsl
rolb
and
mov
mov
push
mov
in
mov
cmp
pop
cwtl
inc
mov
roll
push
adc
aam
xchg
jg
jbe
jl
lret
aam
push
mov
mov
jo
xor
xor
pop
sbb
je
cltd
aad
dec
fmull
mov
push
and
push
test
or
sub
mov
xchg
sbb
out
fisubs
stc
mov
sub
lret
pusha
out
adc
sub
outsl
mov
andnps
xchg
push
pop
and
mov
imul
mov
adc
bound
imul
ss
pushf
pop
mov
mov
shrb
stos
mov
lods
xor
int
add
jo
jbe
outsl
jg
fstl
pop
loopne
jle
adc
mov
lock
enter
loop
xor
xchg
stos
pop
sbb
mov
cmp
and
mov
xor
mov
xor
sbb
imul
and
les
out
nop
jo
push
mov
mov
jmp
xchg
or
les
pop
mov
fidivrs
or
lea
pop
and
cmp
sub
stc
arpl
mov
cmp
aam
cmpsl
lock
mov
sub
jecxz
or
sti
cmc
push
pop
sbb
cmpl
add
dec
cmc
mov
loope
push
xlat
pop
aaa
push
pop
hlt
aas
dec
xchg
sarl
pop
or
lods
movsb
pushl
adc
add
add
push
sub
or
stc
mov
sub
insb
test
insb
in
pusha
mov
xlat
lock
cmp
cld
pop
dec
jle
hlt
push
xorl
addr16
cli
jmp
sbb
in
xchg
sbb
dec
push
imull
in
movsl
pop
dec
mov
outsl
repz
dec
inc
mov
les
lret
fs
adc
mov
adc
jb
aad
and
xor
pop
rcrb
es
inc
xor
push
sbb
pop
and
mov
add
mov
enter
mov
lahf
stos
sbb
pop
ljmp
gs
cmp
data16
or
test
jbe
stos
icebp
arpl
xchg
rcrb
jo
aaa
aad
inc
test
nop
jle
push
and
xchg
mov
mov
dec
fcoml
out
sub
mov
jmp
imul
mov
mov
and
in
out
sbb
bound
enter
imul
xchg
pop
imul
test
push
push
scas
in
repz
xor
imul
popa
xchg
mov
pop
jl
sub
jae
mov
repnz
push
push
mov
jnp
adcl
cwtl
add
dec
gs
sub
enter
mov
adc
jg
test
adc
push
roll
mov
inc
push
incb
inc
out
stos
mov
ss
filds
cmpsl
test
push
mov
aad
fchs
aaa
mov
mov
add
cld
cltd
pop
negl
adc
test
push
adc
jb
and
xchg
xchg
add
pop
xor
or
add
aam
and
mov
mov
xor
inc
not
les
push
pop
out
leave
test
mov
outsl
and
ss
sahf
lods
jo
int3
push
mov
inc
fmulp
inc
sub
sbb
icebp
cwtl
mov
call
lock
enter
and
jl
mov
cmpsl
subl
jmp
lods
cmp
rcrb
inc
push
rclb
test
lods
xchg
mov
test
insl
js
inc
push
dec
les
js
jo
ja
sub
mov
mov
inc
nop
sar
roll
xchg
jl
dec
movsl
nop
mov
and
mov
jns
mov
sahf
in
rclb
jl
adc
push
out
xor
nop
push
mov
leave
xor
insb
test
xchg
mov
ret
adc
dec
cmp
or
fisubrl
insl
mov
or
xchg
out
jg
and
inc
mov
xor
stos
dec
and
sbb
lea
jmp
xchg
mov
ret
les
lret
int3
pop
idivb
loop
xor
ret
jge
mov
mov
imul
das
mov
or
out
and
sbb
xor
and
adc
or
popa
jbe
js
sbb
jmp
or
sbb
mov
in
dec
cmp
inc
lds
jge
repz
sub
sbb
mov
in
inc
stos
sub
mov
add
stc
jae
les
sbb
push
rcrb
rcrl
inc
mov
add
test
pop
add
daa
or
sahf
es
mov
sbb
cmp
push
loope
jno
lea
add
lea
sbb
scas
or
push
repz
cmpb
insb
jnp
jae
xchg
clc
les
and
sbb
data16
push
test
mov
and
lods
push
repz
ret
dec
cld
ljmp
in
xlat
add
inc
inc
in
push
xchg
ret
dec
pop
jle
pop
mov
jne
insl
add
ret
js
and
sub
add
sbb
mov
inc
xchg
sbb
sub
push
fisttps
dec
sbb
jae
ljmp
sub
add
loopne
fidivl
test
in
test
test
xchg
iret
push
or
arpl
mov
test
push
jle
movsb
ds
pop
outsb
adc
bound
cmpsl
fisubrs
ret
xchg
cli
scas
nop
je
clc
dec
xchg
in
jl
xchg
xlat
xor
dec
jbe
dec
loopne
xchg
subl
data16
movsb
mov
lret
jae
and
loopne
xchg
rol
inc
or
jne
lea
adc
xchg
lea
mov
stos
mov
sbb
jno
push
mov
scas
das
in
and
lahf
mov
testb
xchg
arpl
cmp
imul
stos
icebp
add
icebp
divl
loop
xor
pop
fnsave
add
or
inc
add
jmp
out
adc
jmp
adc
scas
pop
mov
jmp
addr16
push
dec
sub
jno
out
lea
and
aam
inc
aad
add
popf
jb
mov
sub
add
out
rcll
test
jnp
mov
inc
xchg
sti
dec
mov
lret
popa
fsubl
test
hlt
xor
jo
aad
dec
loopne
mov
test
cmp
jae
push
aaa
out
dec
push
rcrl
test
ja
push
xchg
adc
ja
mov
sbb
notl
inc
fstl
mov
outsl
or
pop
addl
pushf
add
pop
mov
loopne
outsl
jg
lods
inc
and
nop
and
push
xlat
dec
pop
cmp
or
lods
push
int3
pop
mov
out
add
mov
push
rcrb
loop
shlb
push
mov
or
pop
pop
loope
add
adcl
or
sti
daa
push
call
stos
lds
mov
and
scas
inc
int3
stc
ja
sbb
push
lahf
mov
sub
xor
popa
stos
or
cmp
xlat
test
lahf
cmpb
inc
cmp
pop
pop
inc
lock
jnp
mov
dec
and
jae
push
push
xor
add
cmp
cltd
mov
jne
iret
int3
insb
cs
les
test
adc
add
ljmp
sub
std
pop
cmpsb
xchg
shl
mov
in
xchg
test
adc
xchg
xorb
bound
into
mov
xor
xor
fwait
into
inc
jae
adc
ds
mov
xchg
sbb
in
or
fcomip
push
add
gs
push
xor
pop
outsb
dec
push
xchg
popf
push
lcall
negb
mov
in
test
cmpsb
xor
into
out
xchg
add
rcr
or
imul
and
push
sbb
xor
loopne
pop
mov
test
stc
dec
fdivrs
popf
mov
push
push
fmuls
scas
adc
cld
mov
mov
cwtl
cmpsb
mov
es
jno
movsb
sub
aam
push
or
pushf
mov
add
cld
or
mov
adc
clc
sbb
aas
aad
jo
hlt
cmpsl
call
mov
cmc
cmp
dec
ror
mov
jecxz
shll
pop
push
push
sahf
jns
xor
aam
adc
cmp
ror
les
cmp
fwait
pop
incb
test
int
das
lds
and
or
out
sub
mov
ja
sbb
xchg
xlat
mov
jns
xchg
mov
pop
jae
and
outsl
gs
fnstenv
pop
adc
cltd
xchg
mov
xchg
mov
mov
shll
pop
rol
les
fdivrp
mov
cmp
test
dec
aas
jo
sub
mov
adc
lds
push
cltd
in
mov
mov
push
mov
shrb
ss
stos
sub
call
adc
rolb
clc
add
pop
add
mov
pop
inc
xchg
mov
and
push
cpuid
mov
lods
ret
dec
lods
push
cmp
xor
fisttpll
sub
mov
test
or
mov
mov
and
xchg
sub
sub
int
imul
sbb
lret
xor
imul
js
sub
mov
in
pop
or
sub
ret
scas
pop
pop
pop
add
push
cs
cltd
xlat
jae
idivl
cmp
daa
xchg
push
inc
aaa
adc
mov
jae
fnstenv
idiv
testl
jmp
or
cs
ja
pop
imul
mov
or
mov
xchg
int
lods
cmp
adc
mov
jnp
sub
clc
mov
cmc
sarl
mov
loop
jmp
gs
lcall
sbb
ljmp
cmp
dec
xor
mov
loope
sub
aas
pop
jne
and
enter
mov
mov
fildl
cwtl
pop
mov
mov
pushf
aaa
shl
pop
es
cs
xor
shlb
aas
stos
adc
stc
daa
movsl
jg
push
in
rcll
and
mov
cs
sub
sbb
xchg
add
jecxz
jnp
xor
notb
out
jecxz
mov
lea
stos
cmp
sub
mov
fwait
bound
push
mov
outsl
jns
mov
or
pop
sub
mov
and
test
dec
mov
repnz
fstp
aaa
pop
adc
imulb
mov
loop
push
mov
cmp
adc
jg
jbe
aam
sub
loop
cmpl
paddusb
push
dec
fildll
mov
aas
inc
ret
jmp
and
pushf
testl
push
inc
xchg
ds
push
call
mov
fmuls
fstpt
lods
adc
xor
mov
divb
lcall
out
jmp
xor
sbb
cmp
jo
daa
adc
out
jno
out
dec
shrb
hlt
test
sub
xchg
ret
test
push
xor
test
aaa
inc
mov
sahf
mov
push
aas
xor
adc
sbb
shl
out
sub
imul
push
dec
xor
repz
mov
xchg
mov
aam
in
adc
mov
lea
rcrl
add
jne,pn
xlat
sbb
ret
dec
or
and
std
pusha
inc
jle
adc
fwait
xchg
es
sub
jne
xor
or
cmc
cwtl
inc
nop
fdiv
mov
sbb
mov
lods
data16
xor
cli
loopne
adc
fnstsw
jmp
xor
xor
pop
movsb
lret
loop
or
pop
fwait
in
fcom
xchg
mov
sarl
push
in
or
jne
dec
nop
sti
mov
cli
mov
jbe
lods
outsl
sbb
adc
mov
xchg
mov
mov
shr
mov
fisttpl
repnz
xor
dec
jno
stos
inc
jbe
add
pop
xor
test
mov
xchg
fldt
loopne,pn
sub
je
adc
fnstcw
test
and
lret
push
icebp
movsl
testl
xchg
xor
ret
ret
mov
pop
or
call
aam
daa
or
adc
push
and
nop
jmp
test
popa
sub
mov
jp
sub
test
out
sti
fiaddl
sub
xorl
mov
popa
lods
out
adc
or
js
fsubl
cs
mov
in
and
xchg
dec
ret
insb
push
int
ljmp
pop
inc
jecxz
mov
test
pop
inc
mov
rol
dec
fdivrp
and
bound
mov
lods
int
xor
mov
push
js,pt
hlt
invd
imul
cwtl
cmp
into
imul
mov
int3
enter
jne
arpl
cmp
mov
repnz
sub
addl
jno
cmp
push
or
xor
imul
cmpsl
insl
dec
adc
call
xor
push
pop
ss
sbb
push
sbb
out
in
aad
mov
lahf
adc
call
nop
fdivrs
mov
push
lahf
ds
insb
ret
icebp
jp
dec
cmp
int3
xchg
clc
adc
pop
adc
loop
pushl
push
mov
sbb
and
add
rcrl
addr16
iret
insb
push
push
xor
push
nop
pushf
cli
nop
fldcw
dec
push
fildl
out
add
iret
dec
adc
mov
fsubl
push
xor
in
cmp
mov
pop
push
push
imul
xchg
repnz
add
shr
cmp
mov
jge
and
pop
scas
repnz
mov
mov
mov
cmp
xor
inc
xchg
int3
sub
outsb
out
cli
stc
cwtl
xchg
inc
dec
mov
cmpsl
cwtl
and
ds
inc
pop
shlb
stc
xchg
decb
mov
and
sub
jnp
xchg
into
ret
push
push
inc
stos
push
adc
bound
rcr
rcr
xor
adc
mov
sbb
sahf
flds
mov
popl
fdiv
push
adc
popa
cmp
jno
in
or
inc
xchg
jbe
push
je
cwtl
xchg
inc
mov
xchg
gs
mov
sbb
andl
jnp
push
cltd
test
xchg
inc
imul
lods
lods
addb
lea
inc
cmc
shll
in
jns
jne
cmpsb
dec
sbbb
out
xor
in
mov
daa
cs
mov
int
rol
xchg
xchg
xor
daa
dec
inc
xchg
xchg
jne
into
mov
fdivl
lret
mov
fs
insb
fwait
sti
mov
in
iret
fildl
mov
in
xchg
loopne
and
jbe
jnp
pop
dec
cld
pusha
add
fistpl
jne
dec
mov
mov
mov
sub
or
ret
cmp
mov
mov
or
dec
imul
cmp
inc
adc
mov
js
bound
jne
mov
mov
mov
jnp
dec
pop
pop
xchg
add
lock
loope
or
dec
add
ror
ret
imul
scas
mov
add
adc
inc
lret
or
mov
inc
jns
movb
xchg
fcoms
mov
dec
loopne
aam
out
xor
fsubs
mov
jbe
sbb
dec
inc
stc
mov
test
xor
cld
jecxz
add
sbb
mov
cwtl
rcll
mov
out
into
inc
test
inc
loope
fbstp
cmpsb
decl
jae
sbb
sbbb
or
push
push
jnp
lods
adc
mov
pop
sub
adcb
insl
negb
jno
and
pop
imul
fcmovu
xchg
adc
jno
pop
mov
mov
out
orl
and
adc
lods
iret
sub
adc
mov
shlb
cs
stos
in
pop
or
repz
add
ljmp
xchg
je
vunpckhps
mov
cmp
out
push
pop
xchg
or
mov
lcall
das
in
mov
fdivrs
mov
daa
scas
xchg
mov
cmp
data16
inc
pop
dec
subb
pushf
test
mov
pop
dec
inc
sub
mov
pop
push
dec
xchg
out
push
pop
push
jge
aam
pop
fnstenv
repz
mov
xor
das
sub
lock
sub
xchg
push
mov
call
pusha
cmp
push
mov
ret
mov
push
jae
jp
jg
pop
cmp
sbb
sarl
inc
add
pop
pop
mov
xor
mov
cmp
pusha
mov
ret
inc
or
mov
ljmpw
daa
adc
mov
ret
movsl
mov
sbb
or
lock
sbb
sbb
addl
lods
adc
xchg
add
fwait
mov
cld
sub
inc
and
imul
push
pop
jns
ret
icebp
sbb
lods
in
jb
add
mov
mov
add
cmp
pop
sub
add
ja
xor
mov
rolb
and
jecxz
call
ja
inc
fcompl
push
imul
cli
mov
add
xchg
xor
xor
jae
mov
inc
fldcw
stos
mov
popa
insl
outsl
pop
jnp
jbe
into
inc
sub
aas
pop
sbb
fisttpll
or
adc
mov
and
push
mov
out
pop
dec
mov
test
cmpl
jle
mov
xor
mov
mov
adc
xor
adc
loopne
lea
fstl
test
dec
fisubrl
sbb
push
cltd
or
add
xor
mov
int3
sub
xchg
inc
cmp
xchg
stos
call
pop
and
push
icebp
in
bound
mov
leave
cmp
clc
and
sub
daa
stc
xor
int3
inc
ja
ja
test
mov
pop
push
sbb
and
je
xor
inc
sub
mov
dec
or
scas
mov
inc
lret
or
ret
fbld
ret
les
xchg
repnz
std
sub
push
adc
push
add
inc
bnd
out
popa
in
fistpll
test
pop
icebp
lcall
jo
lcall
jae
xor
sbb
mov
roll
pop
dec
loop
repz
pop
or
or
xchg
sub
mov
push
and
inc
test
cmp
imul
pop
inc
dec
jb
lret
jge
scas
adc
fsubrs
lds
mov
and
add
and
mov
cs
dec
sub
pop
into
iret
pop
adc
pop
push
sbb
jge
fcoms
mov
cwtl
mov
insb
int3
add
mov
nop
ret
jb
adc
cwtl
adc
mov
nop
adc
aam
dec
inc
jbe
mov
sub
mov
arpl
outsl
xlat
pop
mov
arpl
sbb
imul
push
inc
inc
in
mov
mov
or
loop
in
push
lahf
test
push
xchg
ficoms
sub
nop
ret
jecxz
dec
pop
fs
mov
xchg
or
cli
xlat
or
fs
int
pop
lret
cld
jge
push
repnz
insb
into
cltd
push
push
add
mov
imul
js
mov
cltd
cmpsl
enter
xchg
jmp
in
pop
cmpsb
pop
addl
pop
mov
pop
pop
add
inc
inc
ja
mov
shr
mov
movsl
sbb
ss
and
xor
loope
incl
cmc
xor
aaa
mov
or
mov
adc
cli
and
hlt
add
in
and
adc
clc
sar
and
xor
loop
mov
sub
cwtl
aad
std
call
sbb
stos
mov
jmp
filds
or
mov
stc
jp
mov
adc
dec
fcomi
sub
mov
jnp
inc
and
xor
mov
ss
mov
pop
mov
dec
divl
jge
push
loope
test
cmp
js
shll
push
movsb
adc
jecxz
in
mov
push
pop
adc
adc
roll
and
xchg
mov
fdivp
and
into
jb
push
pop
mov
ljmp
xchg
sub
in
out
inc
nop
ffree
adcl
mov
inc
je
push
xorl
dec
fcmove
adc
out
xchg
mov
andl
pop
push
mov
or
pop
inc
call
addb
jg
aad
out
je
jg
and
sbb
lods
lahf
es
sub
stos
jp
jns
push
out
out
push
xor
xlat
adc
mov
sti
pop
push
int3
jne
cs
out
jecxz
fwait
jmp
push
call
push
rorl
clc
xchg
and
or
or
or
std
jo
sub
decb
pusha
and
xor
mov
outsb
fmulp
mul
inc
lods
aam
push
xchg
cwtl
xor
push
mov
rorb
or
pop
sub
xor
out
lods
sub
aas
mov
jbe
outsl
cltd
jg
inc
sbbl
lock
add
clc
pop
jb
push
adc
repnz
lahf
int3
pop
sub
aaa
cmp
jl
sub
mov
and
sbb
cwtl
aam
jno
jp
cld
aaa
mov
loop
mov
lea
iret
cmp
pop
mov
jb
and
movsb
add
mov
xor
mov
sbb
ret
mov
testb
arpl
aam
or
inc
push
mov
leave
enter
cmpl
repz
cmc
mov
xchg
adc
lcall
jecxz
add
mov
mov
mov
or
call
orl
cmp
push
arpl
ret
pop
adc
inc
fbld
rorb
repnz
push
push
cltd
es
pushf
add
mov
pop
jae
repz
ljmp
mov
dec
mov
leave
loope
and
or
mov
push
sub
mov
fstl
mov
pop
loopne
sbb
xchg
adc
dec
call
mov
out
sub
lret
mov
jne
pop
unpcklps
movsl
std
mov
pusha
mov
xor
cmpb
rol
adc
xor
dec
sbb
add
pop
inc
mov
xor
shlb
mov
or
jno
inc
push
es
imul
push
jae
cmp
cmp
shll
add
bound
ret
sbb
pop
add
xor
pusha
stos
jnp
pop
hlt
jbe
adc
stos
sub
xor
jecxz
stos
add
mov
mov
and
sub
outsb
push
push
je
repnz
pop
ficompl
rcl
pop
aad
ljmp
fwait
out
sbb
std
mov
mov
adc
xor
outsb
jle
gs
aaa
into
jl
and
rclb
mov
cmp
jg
into
add
inc
dec
or
test
scas
dec
jl
push
das
ret
jecxz
pop
cs
dec
and
aaa
fs
mov
mov
clc
stos
push
mov
lds
movsb
jle
adc
cmp
std
fwait
incl
cld
xor
scas
rcl
xor
inc
int3
ja
loope
push
fmul
lds
xlat
sbb
rcrl
mov
dec
push
out
cmp
ljmp
fcmovnu
jl
and
mov
add
lea
ja
aas
rorb
leave
sbbb
addr16
adc
std
loop
ljmp
jl
insb
inc
push
lods
arpl
sub
xchg
mov
aas
pusha
sahf
xchg
vpshufhw
daa
cld
push
sbb
adc
shlb
notb
jbe
inc
pop
adcb
inc
aam
cmp
add
test
jge
cmp
imul
test
jg
inc
sbb
movb
stos
jecxz
lret
je
fildl
adc
ret
push
mov
sbb
inc
fstpl
mull
ret
mov
out
pop
xor
hlt
and
iret
cmp
pop
imul
iret
xor
xchg
es
cs
stc
test
dec
mov
repz
outsl
bound
xor
les
faddp
mov
outsb
shlb
stos
movsb
shrb
sbb
dec
or
inc
push
fdivs
xchg
cs
loope
mov
jnp
dec
lea
and
repnz
in
push
xor
jb
xor
jb
mov
insl
inc
fdivrs
pop
bnd
insl
cwtl
pmaxsw
aaa
divb
es
iret
and
scas
in
cmp
jle
inc
pop
ljmp
adc
pop
data16
push
jecxz
std
dec
push
lock
adc
sbb
push
cmpsb
mov
enter
mov
jl
mov
sub
iret
movsl
stc
imul
jge
cmp
ss
cwtl
in
mov
aam
mov
shlb
mov
pop
or
mov
jmp
jl
fidivl
cmp
mov
mov
pop
ja
sbb
mov
sbb
repz
rcll
xchg
in
adc
mov
jmp
gs
in
fisubs
iret
mov
rol
fwait
fs
inc
bound
jno
ja
ffree
xor
mov
imul
mov
mov
jo
xchg
insb
daa
inc
pop
xor
sbb
or
gs
xor
sbb
int3
push
cltd
sbb
sub
cwtl
xchg
dec
cmc
or
aas
in
inc
push
faddp
mov
rorb
sarb
pop
daa
sub
xchg
out
leave
dec
dec
xchg
in
mov
cmp
adc
mov
jecxz
repz
scas
and
sub
in
adc
dec
in
test
fxch
inc
out
mov
push
rcrb
dec
clc
xor
cmp
imul
xchg
popa
push
lods
cmp
inc
fidivs
nop
fisubrs
jno
mov
mov
out
scas
adc
lods
movsl
mov
sub
inc
lods
decl
mov
lcall
sbb
stos
bnd
enter
mov
sti
mov
cwtl
lahf
xchg
inc
or
add
jae
test
xchg
mov
repnz
mov
jns
cmp
pop
mov
cmp
movsb
push
int3
cli
push
push
dec
ljmp
shl
aas
icebp
mov
push
inc
mov
clts
int
push
js
or
push
jg
or
fs
jl
fcmovnbe
js
hlt
mov
push
inc
in
out
cwtl
cmc
jge
or
push
int3
cwtl
std
sub
test
push
inc
xchg
or
and
and
add
out
les
jmp
mov
dec
inc
movsb
mov
aad
mov
fsubr
push
ret
inc
or
jge
push
mov
aam
rolb
pop
pop
mov
aas
jle
xor
dec
jge
movsb
mov
add
jle
in
out
cmp
ret
sub
push
rcl
mov
mov
add
jo
mov
sbb
addr16
pop
leave
cmc
xchg
push
cmp
fst
mov
jecxz
jp
dec
push
cmp
stos
cmp
fidivrs
mov
cmpsl
cs
push
pusha
clc
mov
sbb
inc
jle
lahf
dec
es
jo
sti
add
pop
addr16
leave
outsb
push
fcom
out
and
in
cmc
cs
push
or
mov
test
arpl
inc
aam
jbe
and
push
ret
pop
aam
outsb
inc
xor
sbb
das
cmp
xchg
pop
imul
call
fstl
stos
or
push
aad
loopne
arpl
push
mov
pop
ja
repnz
pushf
dec
jmp
ret
pop
fistpl
jns
in
mov
lds
cmp
cmpsb
fs
pop
sbb
lahf
mov
jb
sbb
decl
popa
out
adc
add
or
xor
xchg
clc
pop
dec
fadd
shll
lahf
addr16
xlat
jb
mov
add
jbe
inc
jno
std
sbb
lock
mov
mov
jno
push
jbe
in
arpl
ret
push
sbb
ja
add
inc
lods
mov
mov
in
xor
fidivs
push
xlat
call
pop
sub
filds
jns
pop
xchg
mov
adc
mov
ss
out
xchg
jo
outsl
adc
shrb
inc
leave
jnp
mov
and
outsb
fmull
jge
push
rclb
inc
sbb
mov
inc
push
push
mov
or
mov
ss
jle
aad
lods
repnz
inc
ret
jns
mov
lods
xor
add
int3
dec
and
sbb
add
scas
fs
imulb
clc
lahf
repnz
imul
outsl
xchg
push
shlb
arpl
cltd
leave
popa
inc
mov
popa
fwait
inc
jb
cs
cltd
cmp
mov
fs
push
dec
adc
roll
pop
rol
xchg
test
rcrb
adc
pop
stos
imul
mov
in
inc
lret
movsb
xorl
shrl
adc
push
int
lock
push
and
imul
jbe
cltd
xor
in
pop
shl
push
or
jno
das
std
mov
xchg
mov
mov
addl
insl
push
pop
test
inc
push
xor
loop
push
sbb
add
fucomip
jnp
in
sbb
xchg
pop
and
cmp
adc
push
outsl
aas
inc
pop
lahf
mov
mov
mov
stc
inc
test
in
inc
or
stc
daa
xchg
fldenv
xor
inc
dec
mov
adc
loopne
popa
adc
clc
pushf
adc
inc
je
pop
push
cmp
xchg
jo
xor
push
dec
into
jo
mov
xchg
imulb
div
aaa
sti
mov
dec
push
dec
popf
mov
out
arpl
pop
lahf
icebp
ds
add
idivb
stos
inc
mov
xchg
inc
xor
in
pop
pushf
pop
into
cmpsl
ss
insl
add
mov
pop
ja
enter
cli
jno
sbb
push
inc
jns
cwtl
rclb
dec
lods
outsb
add
popa
dec
jbe
and
imul
stc
xchg
or
js
jne
cltd
or
mov
mov
cmp
jne
sub
popa
scas
jle
or
in
push
iret
movsl
jge
pop
xchg
sub
ja
sbb
push
cmp
daa
testb
cli
push
adc
cli
sbb
call
and
lds
push
mov
cmpsl
bound
sub
ret
adc
scas
addb
mov
out
xchg
mov
inc
mov
rcrb
fcomps
lahf
iret
daa
sbbb
push
test
cmp
inc
xor
dec
loopne
add
cmp
sahf
sbb
mulb
adc
cld
xchg
pop
fidivrl
addl
data16
lret
sbb
mov
mov
test
rcrb
jbe
ret
xor
imul
mov
xor
rclb
icebp
je
push
inc
or
mov
ret
cli
add
in
stc
rcrl
xchg
jno
iret
fmul
inc
sub
fwait
pop
addr16
outsb
jl
push
insl
push
mov
mov
out
in
mov
and
roll
adcb
jo
or
aad
leave
inc
fistl
gs
stos
fs
cmp
adc
xor
in
jno
pushf
pop
push
daa
mov
jae
jne
mov
pusha
adc
sbb
pusha
xchg
gs
repz
inc
push
xor
xchg
pop
or
pop
and
mov
jle
in
lret
sbb
ss
std
cli
cmp
dec
mov
sub
nop
stc
inc
aam
adc
int
ds
xchg
out
inc
andb
inc
or
adc
js
inc
jl
push
test
xchg
in
insl
jmp
xor
pop
sub
fldcw
outsb
pusha
or
cmp
pop
dec
mov
popa
xor
movsb
dec
sub
cmpsb
push
mov
pop
jo
xor
movl
pop
push
repz
clc
mov
test
clc
in
lahf
mov
push
or
jo
movsl
rorl
mov
arpl
sub
sub
cwtl
mov
mov
lret
in
in
shll
fisttpll
add
mov
fsubl
std
pop
mov
or
pop
pusha
arpl
fmull
inc
mov
aas
push
mov
dec
fsubs
into
incl
xchg
add
aam
dec
mov
fcmovnbe
test
fisttps
mov
push
fxtract
mov
addl
add
ja
cmpsb
ja
cmp
mov
sti
sbb
or
pushf
inc
mov
adc
jle
incl
inc
dec
jp
or
cmp
sbb
or
jo
xor
push
std
jae
stos
mov
add
adc
or
jle
insb
add
cs
testb
mov
inc
pop
push
sub
cld
push
cmp
sbb
cli
cmc
cmp
jne
lock
dec
loopne
mov
sub
into
push
sahf
jns
les
xor
outsb
ss
and
movsb
push
xlat
and
daa
push
adc
xor
pop
and
pop
gs
xchg
or
mov
pop
pop
adc
enter
or
pop
subl
js
push
cld
dec
ja
inc
push
loopne
movsb
sub
inc
mulb
popf
leave
xlat
jno
dec
test
adc
cld
cmpsl
mov
cmp
pop
pop
xchg
or
push
adc
mov
push
sbb
push
movsl
lahf
hlt
mov
mov
sbb
orl
pusha
jecxz
mov
fiadds
mov
dec
popa
inc
xor
scas
or
adc
lea
imul
faddl
dec
sub
add
or
ds
scas
mov
pop
xchg
mov
or
mov
sub
cmp
call
cmpl
cmpsb
mov
mov
cmp
and
hlt
out
bound
outsb
cmp
push
jmp
add
sarb
cmpsl
cwtl
aas
out
sub
cltd
sbb
mov
jle
sbb
add
les
jo
bound
xor
push
cmp
ja
adc
mov
mov
xor
cmpsb
fnstcw
aaa
mov
dec
sbb
mov
mov
push
ja
sub
loop
mov
and
push
mov
pop
jge
cmp
leave
pop
stos
daa
loope
xor
rsm
imul
mov
jno
push
push
in
jle
jmp
cmp
into
adc
add
and
fisubrs
or
add
jp
or
lcall
not
jle
lods
cltd
jno
inc
lods
pop
xchg
lods
cmp
adc
sbb
dec
dec
je
xchg
xor
pusha
ret
pop
fs
popa
loop
mov
scas
pop
mov
shlb
data16
shl
outsl
jp
add
xchg
out
mov
pushf
and
repz
gs
repz
sahf
test
jge
jle
scas
dec
inc
add
sbb
outsb
pop
cmpsl
fldenv
lcall
push
ja
lods
dec
lds
fnstcw
das
ja
pop
dec
adc
in
lods
push
test
adc
jg
and
sbb
pop
jle
xchg
mov
sub
enter
insl
cwtl
xchg
imul
out
xchg
push
sub
rcrb
lret
mov
popa
daa
push
inc
jg
daa
adc
mov
push
cwtl
negl
sahf
dec
stc
xchg
push
jo
arpl
into
push
outsl
push
mov
daa
jno
push
pop
movsl
aaa
in
push
inc
add
push
mov
stos
cs
shlb
pop
repz
sbb
or
lahf
jae
and
aad
mov
in
add
jno
daa
mov
repnz
outsl
movsb
pop
push
stos
and
cmp
and
fwait
stos
repnz
adc
lcall
or
mov
jle
in
jno
mov
and
lea
dec
inc
pop
jbe
or
imul
mov
int3
pop
stos
add
dec
nop
add
test
je
loopne
sahf
mov
cld
xchg
icebp
into
cli
stos
iret
dec
mov
mov
mov
dec
jae
aas
lret
lret
repz
xchg
mulb
imul
jmp
mov
lret
push
shll
and
js
fstpl
ret
or
call
fnstsw
decb
je
lds
popf
mov
jo
push
iret
hlt
sub
push
dec
mov
jmp
fstpt
dec
xor
icebp
cmp
pop
es
pop
ret
mov
mov
loopne
or
push
xchg
les
lcall
fiadds
cmp
ret
jne
popf
inc
add
scas
mov
in
pusha
or
mov
test
jg
movsb
adc
pop
inc
xor
scas
out
push
add
leave
sbb
jge
mov
data16
adcb
cmpsl
adc
xor
push
mov
mov
jns
adc
mov
dec
xchg
dec
adc
push
add
arpl
insl
jae
push
lods
pop
aad
popf
enter
daa
or
movsb
ljmp
aad
scas
or
ret
mov
into
push
sbb
cmp
pop
aam
aam
ret
mov
adc
pop
lds
stc
cmp
push
cmp
lds
push
cltd
ds
inc
std
push
dec
lods
addl
inc
xlat
push
mov
roll
dec
scas
or
jne
adc
aad
dec
addr16
xor
add
xor
js
add
mov
lcall
cld
les
adc
or
xchg
xchg
test
or
and
dec
movsb
in
jmp
mov
dec
inc
dec
fmul
sbb
int
pusha
arpl
mov
pop
mov
stc
xchg
incb
and
das
or
ljmp
aaa
xor
dec
shlb
aas
push
xor
jle
enter
add
pop
ret
or
pop
dec
xchg
inc
inc
addr16
fistpl
push
imul
mov
mov
inc
into
push
sahf
pop
movsb
fcmovnu
mull
jo
ficoms
in
in
insb
ret
mov
mov
xlat
jno
pop
xchg
xorl
and
sub
pop
or
or
xor
in
rolb
fstl
inc
test
out
inc
or
and
xchg
lds
xchg
jne
outsb
aas
fisubrs
bt
iret
testl
xchg
sub
push
fidivrl
pop
mov
pop
mov
add
inc
jae
and
mov
xchg
daa
inc
rcl
adc
inc
jmp
jbe
fistpl
adc
cli
add
jle
sbb
jo
std
ret
adc
xor
pop
pusha
sbb
jbe
out
je
push
lret
repnz
lock
and
push
adc
ret
dec
lods
cmp
dec
mov
testl
mov
bound
testl
fiaddl
pop
mov
out
cmp
in
es
gs
push
sahf
sub
cltd
test
fldenv
push
mov
jns
lock
cmp
cld
inc
pushw
push
or
inc
fisubrs
pop
add
fdivrs
pop
cmp
lret
jg
adc
push
add
lahf
js
cmp
stos
push
inc
leave
add
mov
cltd
out
clc
xor
addb
aas
rcrb
jbe
push
push
cld
test
push
xor
sarl
lds
cmp
pop
push
sbb
mov
mov
cmp
jl
je
fs
repz
call
mov
adc
int
mov
int
or
push
adc
je
xor
mov
mov
fstpl
stc
stos
adc
cmp
dec
xor
int
push
stos
jp
sub
push
pop
fldl
lcall
add
push
fstps
bound
jae
pop
sbb
cmp
jbe
stos
jno,pn
aas
test
push
cmpsl
stos
mov
mov
inc
test
repz
shrl
sbb
jae
xchg
or
cmp
andl
rcll
test
cmp
out
lcall
pop
mov
xchg
xor
lods
mov
stc
mov
xchg
cmpsl
rcrb
movsb
test
pop
cmc
xchg
shl
enter
mov
adc
or
insl
lods
out
cmp
or
xorl
sub
add
sbb
mov
pop
push
push
loopne
lods
adc
dec
push
inc
pop
in
and
mov
mov
loop
fwait
cmp
jl
xchg
stos
and
dec
leave
jbe
xor
jo
test
dec
add
xchg
insl
rcll
push
pop
or
out
js
mov
adc
mov
nop
pop
pushf
int3
insb
in
lds
jle
sbb
into
mov
stos
aaa
sbb
jnp
add
mov
xor
pop
or
ss
push
or
shlb
repz
popf
jno
pop
imul
lcall
push
adc
sub
fistl
in
or
dec
test
sahf
mov
mov
dec
pop
cmp
mov
dec
insl
std
andl
add
aad
std
adc
mov
pop
or
or
mov
adc
daa
add
out
push
int3
inc
rol
xchg
sub
pop
cmp
clc
std
popf
mov
je
out
insl
sbb
mov
ss
inc
pop
out
mov
popa
mov
and
loope
data16
negb
insb
xor
mov
in
sub
stos
dec
cmp
pushf
andb
and
dec
jl
inc
or
daa
test
adc
mull
dec
lret
in
repz
push
scas
jle
pop
push
jne
jno
jle
push
pop
add
mov
data16
jge
gs
dec
mov
popf
inc
cwtl
sbb
jp
daa
rol
rclb
mov
inc
fnstcw
add
sub
in
adc
mov
stc
mov
adc
xchg
lods
insl
dec
mov
pop
into
add
imul
and
inc
sbb
notb
popl
push
sub
jb
sti
xor
subb
dec
lahf
js
xor
add
jns
ja
hlt
popa
cltd
jnp
mov
or
rcll
jns
push
mov
mov
dec
inc
dec
into
inc
inc
or
mov
xchg
out
or
mov
jmp
and
cli
inc
mov
les
out
imul
dec
adc
xor
mov
ja
mov
jp
mov
adc
cmp
push
push
int
repz
lods
iret
mov
shl
lahf
jg
jg
push
pusha
std
popa
ljmp
sbb
js
nop
xchg
adcb
in
jmp
and
pop
inc
push
aaa
cmp
lods
lahf
imul
push
mov
call
fdivrl
dec
add
leave
dec
mov
hlt
scas
adc
leave
icebp
andl
adc
andl
cmp
cli
cmp
push
in
in
pop
xorb
mov
jne
cmc
xor
inc
je
addr16
pop
mov
jbe
cmp
xchg
push
rcll
sub
shlb
dec
inc
rcrl
mov
gs
stc
insl
xchg
scas
xchg
cld
xchg
pusha
in
mov
es
dec
mull
xchg
jne
cs
sbbl
ljmp
xchg
jno
cmpb
mov
dec
loopne
in
lds
mov
sti
adc
fwait
lods
mov
mov
xchg
mov
fldt
xor
mov
pop
adc
shll
or
sbb
sbb
mov
pusha
mov
mov
mov
std
movsl
inc
dec
push
movsb
adcl
loopne
lcall
add
movsl
sub
iret
test
popf
arpl
repnz
out
jne
and
ret
movsb
cmpsb
test
mov
ret
xor
adc
mov
gs
sub
int3
push
mov
decb
rcrl
jge
repnz
mov
ljmp
sbb
daa
xor
mov
mov
insb
xor
idivl
pop
mov
and
sub
inc
repz
sbb
dec
xor
pop
push
adc
xlat
xchg
int3
xchg
hlt
and
adc
xchg
xchg
xchg
or
lea
dec
inc
scas
and
pop
dec
subl
mov
add
inc
scas
cmovne
adc
jne
out
ja
fidivs
mov
jg
xor
jns
out
gs
add
mov
dec
jmp
leave
xor
outsb
loop
mov
mov
and
or
add
cmp
mov
inc
cmpsb
pop
jecxz
mov
jmp
cld
mov
ljmp
or
mov
cmp
ljmp
push
pop
and
pop
cmpsl
out
scas
mov
sub
xor
movsl
les
popf
cli
outsb
jns
aam
sti
mov
fidivrl
cmp
push
mov
popa
mov
dec
and
aas
or
mov
cwtl
adc
in
jle
lret
mov
pop
data16
pushf
daa
dec
outsb
adc
int3
mov
inc
repz
ss
dec
dec
hlt
fidivl
sti
dec
cmp
pop
imul
cmpsl
cmp
mov
lock
xor
xlat
fisubl
stc
out
mov
and
fisttpll
and
fs
mov
push
sub
popf
push
enter
scas
leave
scas
js
or
or
cmp
daa
repnz
adc
push
sub
sub
daa
jp
aaa
add
notb
cmp
loope
sbb
cs
aad
aaa
shrb
or
push
xchg
jns
sub
add
xchg
push
cmpsl
out
ret
addr16
dec
mov
test
mov
pop
adc
outsb
mov
xchg
lock
and
ficoml
loope
xchg
fcomps
push
add
or
and
mov
push
jle
or
imul
sub
xchg
pusha
movl
daa
dec
cmp
and
cs
fwait
mov
cmpsl
adc
divb
loope
stos
fwait
out
adc
lahf
test
adc
jp
cmp
jl
ret
rcrl
cmp
push
jnp
ret
push
lock
incb
xchg
test
push
sub
mov
fwait
sub
ss
lds
pop
fdivl
mov
xorl
xchg
das
xchg
mov
into
jle
icebp
and
dec
xchg
mov
and
and
fistl
insb
rorb
daa
xchg
insl
shrl
mov
push
adc
cli
outsl
stos
xor
or
pop
rclb
push
inc
cwtl
shlb
xchg
jbe
xor
scas
push
daa
dec
sbb
xchg
inc
decb
pop
push
cltd
andl
or
icebp
or
sub
cmp
sbb
cmp
cltd
test
sub
rclb
lods
in
in
jo
cwtl
mov
lret
xchg
popa
sti
imul
mov
and
in
mov
push
repnz
outsl
xor
imul
add
test
xor
or
das
push
enter
aaa
mov
cli
and
movsb
xchg
and
pusha
mov
xchg
testb
push
stos
into
cwtl
dec
arpl
lds
hlt
sbb
in
lret
dec
push
ficompl
inc
sub
push
fs
enter
bound
imul
dec
pop
and
pop
add
stc
insb
or
sub
sarb
or
in
dec
sbb
pop
inc
in
imul
fdivr
lahf
mov
pushf
fidivrl
jg
pop
pop
sbb
jnp
push
xchg
add
daa
pop
or
call
out
jg
jns
xchg
hlt
outsl
fldenv
sub
jae
sbb
cmp
xlat
clc
loope
out
xchg
mov
mov
jno
cmp
mov
imul
jmp
and
mov
xchg
xor
sbb
repz
test
frndint
xchg
and
arpl
nop
nop
pop
add
fwait
out
mov
or
jl
sub
outsb
fldt
inc
sarl
or
lods
xchg
ljmp
inc
test
xor
je
cmc
aaa
push
jecxz
call
jo
js
jp
insb
mov
adc
test
pop
push
and
pop
test
sbb
out
jle
mov
lds
aas
mov
fistl
dec
test
rorb
lret
sarl
xor
ret
inc
in
loopne
ljmp
push
movsl
xchg
jne
mov
push
fistps
data16
stos
sub
outsb
roll
mov
mov
xchg
insl
fmull
mov
mov
inc
push
lea
lahf
fdivs
movsb
test
mov
aam
sbb
jno
bound
test
repnz
pop
xchg
in
bound
into
lcall
push
inc
mov
inc
data16
hlt
jbe
out
daa
je
mov
dec
int
pop
in
sarl
ret
mov
add
mov
dec
cs
in
xchg
add
rolb
inc
jp
push
push
unpcklps
movsl
bound
gs
int
lods
mov
push
aad
aad
loopne
dec
sub
cmp
push
mov
jg
pop
dec
data16
stos
jle
bound
lcall
nop
shlb
jmp
push
inc
outsb
enter
pushf
out
cmp
cmp
stc
loopne
cmp
lcall
mov
loopne
dec
jns
sarb
out
or
or
divl
or
das
mov
aad
sub
or
ret
push
adc
xor
mov
leave
pop
sub
push
out
or
sti
pop
push
fs
add
mov
pop
xchg
popa
fsubl
mov
cltd
cli
xor
ljmp
ja
and
cmc
mov
xlat
inc
push
xlat
and
inc
rcll
fidivrs
push
mov
stos
mov
mov
inc
lods
jae
cwtl
sub
mov
movsl
mov
adc
hlt
sub
mov
add
loopne
xor
cmpsl
sub
test
leave
mov
mov
jb
stc
lea
mov
jbe
jl
and
or
pop
push
pop
das
imul
test
mov
scas
lret
les
out
push
cmc
mov
pop
or
jne
or
idivb
movsb
jns
add
sub
dec
xchg
fs
jne
sub
out
fistpll
and
dec
icebp
fstl
sahf
sub
jg
mov
mov
cmp
cmc
push
enter
call
out
cmp
mull
mov
lret
call
inc
sub
xchg
adc
mulb
movsl
xor
dec
call
inc
ret
jge
fmul
or
jle
ja
xchg
ret
or
aam
test
clc
cmpsb
push
sbb
xchg
xchg
ret
ja
jne
jns
adc
jp
negb
xchg
jb
jae
mov
movl
jno
fmuls
shl
pop
sbb
adc
sbb
xor
mov
inc
mov
mov
rolb
call
das
out
and
jb
negl
scas
test
ljmp
xor
scas
cmp
cltd
pop
fidivrl
xchg
or
mov
stos
jmp
rclb
jbe
ljmp
movsl
aam
cs
test
fbld
rcrl
cmpsl
add
jno
push
fisubs
shl
pushl
sbb
push
cmpl
dec
ds
pop
mov
adc
sbb
shl
xchg
pop
pop
and
sub
mov
dec
pop
sub
mov
iret
fidivs
dec
pop
insl
and
insl
vmovntps
mov
mov
mov
jnp
pop
mov
mov
dec
ficoms
sub
sbbl
lods
mov
xlat
rcr
neg
shl
shl
adcl
pop
fistps
mov
js
jl
fisubs
outsl
mulb
mov
sub
adc
push
lret
call
mov
sbb
bound
push
jle
push
jbe
sbb
push
hlt
xchg
fidivs
mov
xchg
lret
push
adc
mov
mov
xor
mov
imul
sahf
pop
in
mov
sbb
cmp
int
xchg
sub
sbb
push
dec
jnp
xlat
lods
imul
call
adc
idivb
add
fiaddl
inc
push
out
cltd
adcb
test
mov
fnstsw
pop
pop
stos
pop
push
decb
push
aaa
inc
insl
stc
xlat
and
stos
dec
inc
test
push
fsubr
mov
adc
dec
call
xor
and
inc
flds
sub
in
jo
mov
push
sbb
mov
mov
loopne
icebp
xchg
sub
mov
mov
iret
rcll
not
iret
cltd
mov
hlt
xor
ror
xchg
jl
dec
xchg
outsl
inc
push
push
imul
pop
jg
sub
rcr
push
sahf
pop
push
lods
dec
sbb
lds
jge
xchg
adc
adc
aas
pop
jmp
test
add
cmp
loope
and
dec
cmp
push
imul
bound
mov
inc
inc
mov
sub
xchg
sub
shl
mov
lock
push
aaa
lret
inc
call
ret
loopne
bnd
dec
or
in
ffree
ss
ds
sbb
and
dec
pop
adc
es
cmp
mov
sub
jb
arpl
into
pushf
stc
pop
sbb
pop
mov
push
push
push
mov
mov
lods
dec
test
lods
jle
adc
add
in
fnstenv
push
shlw
mov
mov
xchg
scas
shll
repz
mov
jle
les
jge
sbb
or
cmp
or
inc
mov
add
and
ja
int3
jge
hlt
mov
add
xor
bnd
js
into
imul
enter
jnp
pusha
dec
xor
cmp
or
rcl
mov
daa
xorb
insl
mov
lock
out
lods
aaa
fs
scas
sti
lahf
xchg
lret
call
ds
jns
test
lcall
xor
fldl
sahf
movsb
imul
push
pop
add
sub
fnsave
daa
imul
dec
dec
popf
mov
out
jecxz
and
jecxz
xor
jmp
add
cli
roll
and
pop
dec
pop
in
or
outsb
jbe
dec
arpl
xor
add
rcrl
arpl
aaa
sbb
xor
jo
dec
xchg
popf
push
stos
mov
sbb
mov
fcomi
lock
sbbb
add
fstpl
mov
inc
mov
dec
movsb
jmp
inc
icebp
test
out
or
jb
mov
hlt
adc
mov
cmp
scas
adcl
loopne
sbb
sbb
xchg
dec
jmp
push
sub
add
icebp
cmp
hlt
sub
cmp
and
mov
cmp
sbb
scas
sbb
ds
jno
jne
orl
mov
faddl
scas
shll
pop
aaa
cmc
inc
cmp
pop
xlat
push
jb
cmp
add
xor
pop
push
aas
enter
shlb
cmp
loopne
sub
test
das
push
dec
dec
xchg
and
imul
rcll
xor
or
sub
loope
jle
fwait
xor
leave
js
push
add
adc
data16
rolb
pop
loope
test
or
mov
hlt
cmp
mov
sbb
mov
mov
xor
push
fdiv
xlat
out
adc
xchg
aas
mov
jl
dec
dec
imul
popa
js
sbb
or
fimull
dec
sub
or
scas
cmp
mov
and
iret
je
int
cmpsb
jmp
inc
pop
sbb
dec
sub
lret
push
enter
mov
cmc
dec
fwait
in
push
fildl
inc
and
movsl
xchg
adc
dec
call
xchg
imul
ljmp
cltd
loope
xchg
popa
fisubrl
stos
push
mov
lea
in
xor
pop
sbb
das
les
stos
mov
jge
and
stos
sub
inc
sub
imul
mov
jae
mov
cmc
shrb
mov
xlat
jecxz
and
lock
push
fdivl
arpl
cmp
mov
repnz
dec
xor
jmp
gs
cmpsb
and
aaa
mov
jne
loop
stc
pop
scas
inc
fbstp
xchg
lock
imul
fnstenv
insl
mov
shl
jmp
add
loopne
repnz
in
cmp
push
cmp
cmp
pop
rcll
dec
dec
sub
into
pop
dec
sub
sahf
mov
or
mov
data16
lea
mov
scas
lock
cli
xchg
sbb
loop
ds
call
adc
sub
ss
rclb
push
imul
sbb
sub
jmp
enter
mov
mov
es
inc
sahf
dec
out
or
cs
in
cmp
imul
aaa
lret
pop
ja
lcall
mov
or
xchg
popa
mov
mov
or
xchg
push
arpl
in
fnstsw
jmp
sbb
cmc
cld
fldcw
xchg
push
cltd
push
add
dec
xchg
aam
sub
push
jle
aam
adc
imul
lock
inc
adc
inc
popf
lret
jnp
insb
ja
pop
imul
incb
stos
mov
pushf
and
dec
loop
inc
or
or
pusha
sub
inc
shlb
sub
aam
test
outsb
xor
testb
pop
mov
inc
sbb
adc
ljmp
data16
ss
clc
pushf
cmp
fucomp
mov
les
sub
jne
and
push
push
push
mov
pop
mov
jns
in
test
pop
jecxz
int
test
ljmp
pop
stc
test
mov
adc
xchg
jb
jmp
pushl
jp
and
push
xor
subl
int3
outsl
cmp
add
inc
jae
daa
adc
fcomps
or
cmp
lret
mov
lahf
fdivrs
in
fwait
dec
mov
add
push
sbb
push
icebp
outsb
cmp
idivb
call
push
lcall
incb
xlat
aam
addr16
push
into
shlb
leave
jbe
in
lcall
xor
inc
cmc
loop
inc
inc
dec
aaa
popa
xchg
mov
gs
adc
iret
push
add
xor
sarl
rorb
stos
xor
adcl
bound
ds
daa
bound
test
jmp
mov
pop
psrlq
add
pop
gs
jnp
xor
lahf
test
sub
adc
aam
inc
fcompl
jp
int
movsb
jle
xchg
xchg
push
mov
test
pushf
aas
mov
sbb
jl
jo
pavgb
lahf
lock
popa
lahf
xchg
cld
pushf
shlb
mov
aaa
xchg
enter
sbb
inc
lea
sub
xor
into
pop
or
lea
adc
mov
out
ret
test
jbe
fs
jb
mov
aam
outsl
data16
std
and
push
aas
jae
mov
push
out
pop
pop
mov
clc
lock
pop
ret
enter
cltd
lret
mov
inc
out
outsb
pop
sbb
out
mov
ret
push
nop
mov
lahf
in
dec
pop
js
subl
cmp
lret
push
in
clc
jmp
jl
xchg
ret
xchg
jae
in
or
sbb
cmpsl
shlb
lods
inc
push
addr16
add
stos
jge
lahf
ja
cmp
sbb
lock
movsb
test
pop
cmc
push
lcall
adc
arpl
fdivrp
mov
in
repz
bound
decl
into
xchg
inc
jb
fistps
int
push
sahf
sub
push
adc
nop
movsb
ficomps
lret
xchg
lret
xchg
push
dec
dec
aam
and
or
mov
fstps
adc
mov
ds
lock
out
js
sbb
sub
fisubrl
fsts
cmpsl
shlb
add
gs
xchg
mov
lcall
out
add
jle
xchg
sbb
add
clc
lret
pop
aad
aad
addr16
rcrl
lods
cmp
jnp
push
adc
inc
repnz
jns
orb
in
syscall
adc
sub
shlb
imul
xchg
lds
cmovs
xchg
shlb
jne
pop
lcall
loop
jbe
adc
fcoml
mov
cmpsb
mov
sahf
rcrb
and
pop
cli
cs
movsb
xor
or
jo
mov
aam
mov
popf
js
push
fnstsw
inc
pop
pop
bnd
pushl
pop
xchg
mov
test
push
mov
jne
push
dec
inc
mov
es
add
mov
aad
hlt
jp
dec
mov
push
pusha
ret
fisubl
xchg
mov
jge
rclb
mov
and
dec
rcl
fnstsw
or
sarl
sbb
imul
jns
lods
mov
jl
jno
insl
jge
addr16
scas
shrl
adc
pop
inc
adc
jo
fldenv
jo
cmp
or
movsl
shrl
push
push
icebp
testl
out
mov
dec
pop
push
jns
fidivs
xchg
outsl
dec
or
or
and
scas
mov
or
enter
push
lcall
int3
mov
movsl
xor
clc
subl
inc
adc
rcrb
lret
stos
ds
fistl
dec
sub
cmp
jecxz
sub
pop
jge
push
ja
mov
loope
arpl
mov
mov
call
clc
scas
push
jge
mov
pop
cmp
or
jmp
int3
orl
xchg
inc
pop
dec
jnp
outsl
mov
dec
ret
test
inc
and
aas
sbb
fldcw
pop
mov
lds
jge
iret
stc
rcr
xor
pop
push
in
push
jge
push
sbb
int
popa
in
pop
je
insb
pop
cs
adc
popa
lahf
adc
outsb
jmp
and
popa
sahf
sbb
mov
dec
push
test
je
mov
jge
testb
adc
jb
ljmp
add
dec
push
mov
pop
std
cmp
nop
jmp
ret
sbb
or
mov
mov
adc
aas
lcall
cmp
ja
push
decl
lods
mov
pusha
fidivrl
push
jmp
divl
pop
or
cmpsl
pusha
jl
daa
clc
aaa
incl
int
movsb
scas
shrb
scas
test
shl
jb
dec
adc
hlt
mov
pop
lods
cmpsl
mov
push
jle
repz
insl
lock
mov
in
int3
iret
lcall
adc
adc
js
test
or
add
fstp
cmp
cmpsb
stos
pop
lret
mov
pop
xor
int
sub
shrl
sub
jg
rorb
cld
testl
scas
int
inc
dec
aad
out
enter
xor
adc
jle
cs
pop
sbb
test
inc
add
sbb
mov
in
test
out
pop
xor
dec
movl
add
push
lods
subl
mov
adc
pusha
cli
add
push
mov
loop
mov
mov
and
insl
dec
inc
pop
pop
mov
mov
mov
and
stos
fbstp
pop
add
push
jo
add
fcomip
adc
in
mov
outsl
mov
sbb
ss
outsl
mov
loopne
orl
mov
or
xchg
aam
xchg
pusha
pop
hlt
dec
xchg
mov
mov
bnd
lock
or
sbb
shlb
loopne
arpl
popw
pop
cmp
dec
cmp
pop
lock
or
sub
daa
lds
push
lret
mov
shll
mov
xchg
jne
xchg
lods
mov
daa
mov
xor
jge
or
lret
pusha
out
inc
mov
push
je
mov
push
inc
jnp
and
or
cld
pop
movsb
loopne
test
lods
adc
push
je
push
add
cs
loopne
push
mov
pop
jmp
mov
fildll
dec
adc
aaa
leave
jo
jle
mov
jp
out
or
mov
ljmp
or
rep
jne
int
popa
inc
ja
fidivrl
pop
jecxz
adc
jb
fadds
or
pop
jb
cmpsl
sub
pushf
mov
inc
and
push
in
dec
lcall
dec
data16
orl
std
out
push
lods
fldl
and
pop
jmp
xchg
dec
push
push
test
push
sbb
andb
bound
inc
push
push
pop
push
mov
daa
lcall
add
jae
cli
gs
add
mov
and
jl
hlt
xchg
fistl
es
mov
fwait
sbb
push
fwait
imul
repz
sub
or
stos
inc
hlt
pop
aad
in
adc
addl
jg
fs
push
es
cmp
adc
xchg
mov
cmp
aas
imul
dec
pusha
pushf
data16
ss
jmp
movsb
and
enter
add
sub
jb
loope
and
cmpsb
shlb
mov
jo
mov
xlat
push
jb
mov
xchg
loopne
mov
push
pop
jns
decb
mov
jmp
bound
or
aaa
lcall
add
adc
insb
mov
into
jo
negb
sbb
sbb
pop
es
mov
xor
lret
shlb
push
mov
adc
jb
or
or
icebp
mov
xchg
sub
cli
lods
or
inc
push
ret
pop
and
das
cmp
jp
dec
sub
pop
pop
orl
xor
inc
sti
mov
add
lock
adc
cmp
je
push
cmp
fsubp
aas
xor
popf
dec
xchg
gs
pop
sahf
sub
movsl
outsb
or
jp
jmp
jl
jge
pop
ror
mov
mov
sbb
lods
aam
std
push
adc
push
and
jecxz
cli
mov
push
hlt
jb
dec
fsub
jmp
adc
wrmsr
into
push
push
idivb
nop
pop
cmp
sbb
pushf
xor
ja
std
dec
arpl
mov
adc
decb
push
movb
sbb
pushf
shlb
inc
xor
sbb
add
and
test
and
inc
sub
ret
stc
cli
jne
pusha
jae
inc
clc
mov
lret
fsubrs
cmp
aam
mov
testl
or
mov
xor
cmp
cmpsb
mov
roll
lret
aaa
or
int
cmp
sti
cmp
subb
rorb
cmp
xor
shlb
dec
mov
gs
jns
faddl
push
cmp
jbe
push
cltd
ret
sbb
sbb
adc
sbb
pop
pop
pop
cmp
je
lahf
mov
inc
pop
pop
xchg
sbb
inc
push
dec
sbb
push
cltd
out
xor
fstps
cs
enter
int3
and
cli
push
pop
pop
test
pop
pop
std
enter
jle
xchg
ss
cmp
lea
mov
mov
repnz
cltd
push
pop
rcrb
dec
into
pop
stos
std
and
mov
cltd
rcll
sbb
xchg
aad
in
in
imul
test
or
sub
test
icebp
inc
addb
add
aas
out
cwtl
and
sbb
int3
int
push
pop
fldenv
addr16
je
cmc
cmovne
jb
testb
add
lods
pop
add
scas
adc
es
push
outsl
mov
mov
pusha
insl
fwait
mov
enter
cs
cmp
test
jmp
cmp
cld
or
dec
roll
jmp
fs
jmp
imul
and
repnz
sbb
iret
inc
stc
mov
and
or
mov
xor
std
mov
cmp
mov
or
mov
cmp
out
fstp
or
scas
fistpll
and
stos
mov
popa
pusha
mov
das
adc
mov
dec
xorl
out
mov
jecxz
outsb
pop
add
mov
ljmp
test
jbe
jmp
div
cmpsb
sbb
mov
add
mov
mov
jne
jge
sbb
or
inc
sbb
add
cli
rcrb
xchg
cmpsl
inc
testl
and
mov
lds
jp
xor
adc
dec
test
pop
mov
jae
lods
cmp
cmpsb
leave
sub
inc
or
mov
cmp
addr16
push
out
dec
mov
jle
or
dec
xchg
pushf
xor
mov
push
sbb
jb
cmpsl
and
xor
jns
repz
in
mov
mov
sub
dec
fstps
add
bnd
jecxz
mov
jo
lds
push
cli
lcall
push
or
xchg
imul
outsb
leave
test
lahf
dec
push
xchg
ds
add
mov
xchg
mov
xor
cmp
inc
xor
mov
shll
xchg
cmpsb
push
outsb
arpl
adc
xorl
and
jle
cld
xor
adc
xlat
les
imul
mov
cmpsb
icebp
stos
mov
std
out
xor
loop
fcomps
dec
ds
repnz
push
jnp
call
lret
fiaddl
lret
xchg
inc
in
aad
mov
jnp
sub
add
test
mov
mov
scas
cmp
dec
mov
add
push
cmpsl
and
mov
add
pop
sbb
or
cmp
cmp
arpl
pushaw
cmpsl
jl
inc
adc
dec
pop
xor
loop
aam
lahf
sbb
aas
sub
jmp
push
push
std
hlt
xor
xchg
xchg
std
cmp
js
sub
lret
sub
xor
sub
push
and
fisubrs
addl
leave
xlat
lcall
xor
jae
je
iret
mov
fistl
lret
jp
stos
dec
test
mov
pushf
aad
sub
loop
popf
or
ds
shrl
popf
inc
arpl
pop
mov
mov
push
fisubs
push
rcll
add
jmp
adc
imul
pushl
push
inc
loopne
push
mov
sar
push
movb
dec
add
inc
sbbl
push
inc
je
xchg
push
mov
cmc
push
fwait
push
sarl
sbb
dec
push
pop
mov
jge
in
and
xor
jecxz
into
cmp
pushf
xchg
jp
jns
sub
dec
dec
adc
mov
hlt
xchg
or
or
dec
jb
arpl
xor
xor
test
push
xchg
popa
fwait
mov
dec
push
imul
in
xorl
std
jb
sahf
mov
loope
xlat
sbb
sbb
rcr
cwtl
lock
dec
jecxz
sub
jmp
or
lret
aad
jb
dec
adc
xchg
jecxz
pop
mov
loope
ja
hlt
xor
rcrl
js
xor
mov
call
add
ret
sub
leave
movsb
jg
lret
int3
push
jmp
cmpsb
fistpll
mov
pop
adc
inc
fists
mov
les
add
gs
adc
mov
mov
gs
aas
cmc
loope
dec
in
aas
roll
call
or
mov
adc
shll
jg
in
push
jb
pop
xlat
arpl
mov
leave
in
outsb
roll
ds
mov
jle
fistpl
lods
push
faddl
push
inc
outsl
out
stos
lock
sti
pop
sbb
in
adc
or
push
or
inc
cmpsl
imul
in
int
rcl
imul
xchg
jae
cli
fwait
mov
ret
rolb
inc
into
mov
fdivp
in
sbb
pusha
clc
shrl
outsb
jb
mov
pop
movsb
test
mov
cmp
andl
pop
sbb
pusha
movsb
outsl
mul
mov
stos
sub
push
jb
mov
gs
stos
add
cmpsb
adc
je
pop
inc
test
cli
cmc
jns
rcll
dec
push
dec
mov
repnz
jnp
pop
mov
in
in
lods
add
lods
mov
or
stc
into
ljmp
enter
jl
pop
sub
movb
push
pop
cmp
jne
mov
inc
in
in
mov
sbbb
mov
mov
and
mov
pop
pop
sbb
jmp
and
jb
iret
cld
push
jno
scas
sbb
dec
and
inc
pop
lock
mov
ret
dec
cwtl
push
and
bound
hlt
fadds
xchg
cs
dec
out
loop
push
cmp
push
shll
enter
iret
lahf
js
mov
push
call
jl
scas
scas
cmp
mov
sub
lock
sbb
dec
aaa
mov
mov
cmp
or
push
jae
cltd
mov
xchg
lds
push
adc
jp
ja
in
aam
insb
int
mov
ljmp
outsb
jne
mov
add
fs
lret
xor
ret
pop
lods
dec
and
inc
lret
cmp
mov
divb
into
rcr
es
ret
and
cmp
movhps
lret
popf
sub
ljmp
int
ljmp
push
movsl
ja
jp
arpl
cmpsl
jbe
lcall
inc
fcmovne
mov
sbb
adc
repnz
sbb
jb
xchg
cmpsb
fwait
xchg
mov
fisubrl
testb
xchg
xor
adc
in
in
xor
jo
lret
xor
jl
es
pop
adc
jmp
out
push
faddp
fcmovnu
je
mov
sub
aaa
pop
sub
fidivl
inc
push
xor
stos
aas
sub
mov
in
mov
xor
je
mov
mov
rorb
xchg
mov
out
ficomps
loopne
xor
lret
cmp
ficoml
mov
mov
data16
and
ljmp
dec
mov
outsb
mov
fidivl
pusha
fimuls
jp
cmp
xor
imul
test
cwtl
lret
pop
mov
sti
pop
scas
rcrl
call
dec
or
std
sub
gs
sub
ja
mov
mov
out
adcb
xlat
push
jno
xor
lods
stc
cmpsb
and
dec
outsb
not
xorb
mov
lahf
mov
int
ret
pop
jnp
push
mov
pop
add
sbb
ret
leave
call
inc
jmp
pop
push
add
mov
cwtl
fstps
or
mov
pop
cmp
and
stos
pop
sbbb
shrb
les
outsb
pusha
jecxz
lret
mov
inc
xor
fdivl
dec
mov
add
mov
fsubrl
push
fwait
ja
xor
jb
nop
sub
jne
jmp
lret
push
push
dec
je
pushf
inc
xchg
ss
inc
nop
push
lahf
jl
push
and
sbb
sub
loop
xchg
clc
sub
cmp
in
in
test
sub
mov
and
jmp
cli
sti
add
cmp
jne
xchg
aas
sub
cmpsl
out
in
ds
push
jl
jbe
mov
lea
fstp
adc
mov
sbb
mov
sub
pusha
mov
lahf
mov
inc
and
cltd
jmp
test
out
push
insl
jecxz
shr
jl
rorl
adc
cmp
mov
sbb
jl
sbb
cs
or
sbb
imul
pop
push
outsb
imul
xchg
inc
adc
pop
add
jnp
mov
bound
push
pusha
or
enter
outsb
mov
addr16
push
pop
sub
fcos
sbb
push
or
mov
sub
popf
mov
test
push
cli
mov
gs
daa
push
push
pop
movsb
mov
mov
js
pop
add
sub
mov
outsb
scas
out
mov
or
fwait
shrl
dec
sub
sbb
push
mov
xor
enter
inc
pop
push
dec
shlb
sbb
mov
repnz
dec
fdivrp
push
adc
rcl
add
insl
inc
xor
stos
mov
lods
mov
popf
sarl
dec
out
lods
sbbb
mov
pop
cmp
xchg
xor
insb
bts
aas
jne
mov
mov
sub
xlat
mov
pop
pushf
test
xlat
aam
loope
cltd
add
pop
xor
pop
cmpsl
mov
imulb
addr16
xchg
sbb
movsl
xchg
add
into
add
adc
test
push
mov
outsl
inc
jb
faddl
and
mov
notb
aaa
arpl
sbb
push
addr16
fmull
dec
push
mov
or
push
push
adc
cmp
rcrl
inc
in
orl
inc
cmp
or
aad
loopne
xor
enter
je
les
cmpsb
mov
lret
lods
movsb
sub
loopne
imul
sub
scas
pop
jmp
cmc
cmpsl
add
fadd
adc
mov
mov
pop
xchg
in
in
mov
cmp
lret
xor
jno
sbb
aad
cmp
je
pop
loopne
mov
aaa
enter
mov
ror
in
es
dec
xchg
mov
mov
cmp
and
popf
addr16
movsb
and
adc
push
call
xchg
mov
lret
repnz
xor
into
jl
push
mov
icebp
fdivrp
jle
sub
jp
xor
add
or
lret
mov
les
ret
gs
pushf
sbb
idivb
mov
insb
call
bound
adc
inc
test
push
test
test
outsl
sub
shrd
and
mov
push
notb
push
iret
insb
or
lds
lods
jbe
repz
adc
xor
jmp
addr16
out
in
sub
stc
aas
mov
mov
cmp
jmp
pop
cs
pop
add
or
mov
mov
scas
pop
sarb
push
pop
outsb
ret
jne
cmp
imul
add
push
movsl
cmpsb
aad
enter
mov
cld
mov
daa
test
cmc
add
sbb
andl
std
loop
dec
clc
imul
pushf
cld
add
ficoms
xchg
inc
add
lock
shr
lcall
ja
dec
test
adc
pop
scas
sub
xor
adc
push
ljmp
xor
adc
cwtl
fneni(8087
jnp
and
pop
add
mov
and
aam
repnz
sti
out
aam
xor
inc
jle
inc
jns
repz
dec
push
mov
shll
pop
xchg
clc
sub
xor
xor
mov
jl
mov
sub
jle
add
inc
mov
sbb
or
push
inc
inc
mov
dec
adc
jb
in
inc
stos
loop
fdivl
scas
mov
push
pop
mov
test
scas
jae
add
cmp
xchg
push
ret
data16
or
aad
mov
hlt
loope
aas
mov
aam
lahf
sub
ja
jle
add
int3
inc
and
jecxz
mov
sbb
add
pop
mov
mov
mov
js
mov
jno
jo
cmpl
shlb
fdiv
xlat
and
fidivrl
lds
mov
cvttps2pi
mov
or
inc
sahf
add
in
adc
scas
add
xchg
dec
add
or
popa
cmpl
sar
mov
and
dec
sbb
push
fwait
or
test
and
sbb
cmp
div
loopne
in
cmp
sarl
ret
xor
jge
lahf
xchg
jae
stos
pusha
imul
xor
mov
pop
fisubrl
arpl
xchg
adc
dec
xchg
mov
int
push
stos
pusha
pusha
test
mov
lock
fisttpl
fdivl
mov
add
jae
stc
push
out
add
push
lret
loop
aaa
hlt
inc
mov
repz
stc
dec
sub
rorb
scas
pop
fcomps
bound
js
movsl
das
sub
mov
bnd
push
mov
scas
xchg
aam
mov
std
push
inc
pop
and
dec
xchg
mov
in
sbb
push
xchg
int3
mov
ljmp
sub
jp
pushfw
xor
fbld
negl
sub
mov
mov
or
aam
fcmovne
sub
push
into
std
or
push
jmp
sub
mov
cmc
sbb
push
xor
mov
aad
out
fcompp
sahf
sbb
imul
outsl
orl
sbb
nop
xlat
xchg
inc
mov
in
add
in
jne
mov
std
jo
and
int3
push
clc
stc
jp
add
popf
jae
cs
push
cltd
sbb
and
mov
pop
lahf
ss
pop
cld
mov
fcmovb
mov
jmp
dec
jl
jae
jo
add
fs
scas
test
imul
push
mov
mov
mov
jae
out
dec
aad
addr16
sbb
aaa
mov
in
mov
in
je
ret
test
pop
movsl
adc
add
jecxz
sbb
lret
fildl
insb
pop
in
dec
out
inc
pop
inc
sub
ret
shlb
cmpsb
mov
int
dec
dec
pop
mov
cmp
lods
insb
adc
lcall
jg
cmp
xlat
in
or
jg
cltd
lret
stos
inc
stos
lret
add
movsl
pop
or
mov
cmp
pop
lea
xor
xlat
ljmp
lret
and
inc
add
jb
lret
arpl
rclb
fwait
pop
lahf
call
xor
pop
imul
aas
push
push
out
xor
lcall
imul
shrb
pop
sub
sahf
shll
pop
push
xor
fldl
add
loop
xor
mov
jmp
jle
pop
icebp
js
xchg
mov
sub
xchg
or
push
jg
cmp
icebp
push
fildl
mov
in
jb
faddl
out
stos
mov
cli
push
jg
neg
mov
add
dec
or
or
mov
loopne
mov
push
je,pt
inc
hlt
push
inc
scas
mov
in
mov
cmp
push
or
js
ds
leave
mov
andb
mov
or
adc
clc
imul
in
outsb
fadds
fisttps
sti
cmp
xor
cmp
ret
xor
cmp
jle
adc
mov
xchg
out
rcrb
add
push
movsl
addr16
xchg
lahf
mov
es
jp
mov
adc
lock
mov
push
movsb
jno
loope
inc
pop
lea
ficoms
or
lahf
jp
cltd
adc
xchg
cmp
cmp
lret
sub
fnsave
pop
xchg
push
adc
cli
out
popf
fwait
sti
push
shlb
inc
loope
cmpl
add
sbb
int3
mov
jmp
out
repnz
idiv
scas
ss
popf
sbbl
jbe
lock
cmp
sbb
jg
mov
outsb
fwait
cli
shl
push
mov
das
faddp
ret
add
adc
cli
inc
and
fnstenv
lahf
jmp
sbb
add
ret
imul
fwait
inc
fiadds
fiadds
adc
cltd
addl
mov
cwtl
test
call
mov
dec
xor
mov
pop
lods
xchg
in
cmpsb
pop
jg
jp
mov
mov
push
dec
call
jle
or
data16
mov
xchg
mov
or
dec
std
testl
ds
push
imul
iret
and
fiaddl
in
addr16
push
xchg
test
adc
mov
sahf
enter
cmc
jmp
add
or
cld
int3
sbb
lret
das
in
adc
out
jo
jo
das
xchg
stos
int3
or
inc
dec
xchg
push
lods
jne
mov
insl
lret
add
or
inc
inc
sub
adc
test
cmp
sub
js
orb
shl
mov
mov
dec
jnp
rcrl
jae
scas
sub
cli
pop
jnp
jnp
add
jae
xchg
cld
bound
enter
insl
out
daa
stos
push
cmp
int
mov
pop
es
mov
test
add
insb
shlb
cwtl
inc
xor
sti
adc
incl
jo
addr16
leave
pushf
xor
out
es
mov
movl
pop
push
ds
ds
xor
test
jbe
sbb
cmpsl
fistpll
mov
add
pop
sub
push
data16
fistpl
mov
or
lret
mov
daa
mov
insl
mov
push
cmp
sub
sahf
scas
scas
movsl
push
push
mov
aam
dec
pop
scas
mov
rcl
outsl
adc
xchg
pusha
enter
lock
mov
ja
mov
mov
mov
loope
icebp
lahf
mov
js
shlb
out
xlat
jp
pop
js
or
gs
mov
cmp
push
imulb
pop
aam
das
ror
adc
aas
add
add
and
fwait
xor
loopne
aas
loope
dec
push
pushf
imul
out
shl
insl
dec
mov
dec
jmp
les
sub
xchg
push
push
inc
xor
and
ljmp
insb
jno
das
and
xchg
lock
push
or
push
dec
pop
sub
outsl
mov
fstpl
mov
loopne
mov
repz
inc
push
push
xor
sbb
push
push
adc
and
xor
scas
sbbl
xchg
and
mov
pop
in
add
cmp
lcall
packssdw
cmp
mov
adc
adc
adc
cmp
jp
mov
cld
cmp
sub
loope
popa
fwait
std
lret
push
cwtl
xor
ja
fmull
add
or
outsb
sbb
pop
adc
mov
xchg
jns
pop
aaa
sub
adc
inc
mov
xchg
mov
stos
and
imul
mov
and
xchg
adc
stos
mov
andb
scas
andl
mov
fabs
and
pop
dec
xor
ss
lock
pop
roll
fnsave
adc
cmp
cmpsl
clc
dec
js
inc
repnz
mov
les
push
inc
loopne
adc
jecxz
mov
pushf
mov
add
fsubs
int
test
scas
xchg
push
mov
test
lds
loop
or
movsl
insb
jne
mov
mov
push
icebp
lahf
pop
mov
pop
add
cs
dec
add
ja
xchg
into
jnp
add
mov
test
ja
fistl
add
jnp
pop
jbe
inc
inc
fbld
orl
imul
nop
add
daa
push
xchg
sub
jae
push
sub
ds
ds
push
mov
iret
dec
nop
loopne
and
sub
xor
rorb
inc
inc
add
test
xchg
cld
jo
mov
in
daa
sbb
mov
jae
dec
mov
test
in
lahf
push
dec
and
rcr
cmp
orb
mov
dec
push
sbb
lcall
push
sub
sbb
and
ret
mov
inc
cmp
fisubrs
xchg
jno
cmp
dec
xchg
lahf
loopne
mov
repz
testb
das
nop
pushf
call
push
out
sub
loop
loop
in
ljmp
dec
lods
es
call
rolb
push
dec
ds
rol
cli
popa
inc
cmc
cmc
insl
push
fisubl
xchg
add
cs
dec
push
xor
push
loope
add
and
jbe
sarl
xchg
xor
aad
idivl
rolb
in
xor
xchg
push
jge
jle
shrb
fadd
push
sti
and
dec
cld
jmp
and
stos
gs
pop
pop
lret
fsubrl
sbb
les
lods
cmp
push
xchg
int
mov
mov
or
add
imul
out
pop
or
inc
sub
jae
test
repz
inc
adc
pop
enter
into
lods
sbb
inc
leave
arpl
daa
aad
lahf
xor
je
mov
or
shll
xor
test
insl
dec
mov
inc
arpl
gs
mov
sbb
adc
mov
inc
shrb
scas
arpl
xchg
or
shll
xchg
pusha
adc
icebp
out
enter
xchg
imul
loop
jmp
out
insl
call
xor
int3
mov
add
sarb
lock
dec
adc
es
jmp
push
xlat
scas
xorb
xor
or
cmp
xchg
adc
pop
push
je
xchg
pop
dec
test
rorb
sub
xor
xor
add
test
out
addr16
scas
sbb
mov
mov
mov
jbe
andb
test
shlb
mov
subb
mov
and
or
jb
and
repnz
mov
int
add
jp
lret
sbb
mov
jp
xchg
cltd
push
clts
imul
call
shlb
pop
sti
scas
inc
incl
inc
and
lods
pop
lahf
in
sbb
shlb
mov
pop
mov
mov
cmp
push
rorl
loope
mov
es
aam
ret
sbb
pop
mov
les
mov
xlat
pop
push
dec
les
rcrl
ret
xor
les
sub
lods
cmc
sub
mov
insl
test
leave
das
addb
adc
test
pusha
sahf
pop
inc
ret
mov
in
and
ficompl
xor
test
jae
jmp
jae
sti
data16
mov
sahf
or
xchg
mov
add
and
mov
or
adc
adc
scas
clc
sbb
mov
cmp
and
ja
xor
sub
lock
imul
mov
add
adc
xchg
xchg
or
repz
pop
xor
hlt
sbb
jmp
and
adc
insl
dec
or
ds
jmp
jge
dec
push
fmull
leave
jnp
fimull
dec
pop
inc
shlb
in
or
jnp
cmpsl
notb
aaa
enter
fbstp
sub
jne
push
imul
ljmp
mov
sub
cltd
cli
mov
sbb
jnp
add
jbe
bound
cmp
decb
xchg
fwait
or
out
pop
sub
sahf
pop
or
fnstenv
mov
inc
daa
sub
imull
outsl
add
icebp
jbe
scas
xchg
imul
cmpsl
stos
sub
mov
mov
dec
pushf
jae
loop
cld
push
aad
push
sti
mov
lods
push
jl
ret
int3
adc
scas
xlat
clc
adc
mov
cmp
jecxz
std
scas
popf
push
xchg
xchg
adc
or
pop
cli
ljmp
fiaddl
mov
movsb
or
mov
xlat
ds
inc
dec
mov
mov
xchg
sbb
push
mov
mov
adc
sub
aad
pop
and
xchg
shl
pop
popf
mov
mov
sub
pop
andl
lcall
mov
cmp
call
mov
xchg
mov
icebp
mov
test
sbb
add
test
xchg
jge
lcall
inc
xor
pop
or
push
hlt
mov
push
cs
cli
or
cmp
dec
or
adc
xchg
xchg
sbb
ret
stc
adc
popa
jno
and
xchg
mov
xchg
cltd
pop
sbb
adc
mov
sbb
pop
imul
adc
mov
dec
or
jge
outsb
int
mov
sbb
ffreep
pop
ficomps
icebp
and
inc
mov
add
cmpsl
movsl
dec
and
push
add
rcll
sub
mov
jmp
adc
int3
loope
inc
cmp
sub
or
cmp
push
sbb
sbb
out
push
clc
out
xchg
mov
test
repnz
pop
stc
jecxz
cmp
popa
mov
xor
jg
cld
mov
lret
jl
xor
and
sti
je
stos
cmp
xor
pop
int
xorl
insb
aam
jae
or
pop
lock
xlat
loope
xor
lahf
jne
and
lock
and
push
dec
and
sbb
ds
mov
out
mov
rcrl
out
lret
adc
adc
pop
shl
xor
aaa
std
in
push
scas
xor
outsb
jl
push
inc
cmp
fisttps
fidivrs
adc
xchg
fisubrs
sbb
jp
mov
inc
push
cmc
pushf
mov
out
popf
es
or
scas
dec
or
cmpb
addr16
mov
pop
rcl
pop
pop
mov
mov
dec
dec
int
adc
fadds
cwtl
mov
daa
ljmp
xchg
insb
pop
ss
jo
loopne
mov
mov
fidivrs
mov
and
popf
mov
pop
sub
clc
cs
dec
repz
jae
out
scas
pusha
out
add
add
lods
test
lret
popa
or
inc
mov
imul
insb
jl
jp
adc
inc
fstl
cmpl
push
adc
std
in
inc
into
in
inc
das
mov
push
or
in
test
lods
jmp
or
loop
pushf
lret
setae
out
adc
mov
sarl
cmp
cmp
mov
cmp
cmp
iret
icebp
js
and
cld
sub
or
arpl
decl
xlat
cmpsb
les
jo
jne
loopne
xchg
and
lcall
push
leave
xlat
dec
rcll
cwtl
adc
sub
inc
jno
out
out
inc
xor
cmpb
sub
lea
in
jl
in
xrelease
pushf
or
xchg
cmp
inc
jecxz
and
dec
push
xchg
pusha
loopne
push
and
insb
rorb
push
mov
ja
push
lods
push
cmp
xor
inc
jle
lahf
add
add
test
and
push
mov
pop
inc
inc
add
bound
cld
ficoms
inc
mov
dec
testb
in
pushf
addr16
test
inc
and
push
mov
in
or
mov
mov
in
movsl
jmp
loopne
pop
jns
sahf
mov
int
cmc
jp
outsl
imul
popf
inc
mov
cmp
push
imull
arpl
mov
jae
cs
pop
rcll
int
test
inc
mov
mov
add
out
xor
fwait
mov
add
lds
je
push
fidivrs
pusha
sar
notl
inc
fsin
jb
mov
pop
jns
sbb
test
mov
mov
sbb
dec
lods
sub
jge
mov
loopne
stos
pushl
or
sbbl
js
mov
add
ret
les
testl
xchg
sbb
add
adc
sarl
fistpl
scas
jge
popf
add
xchg
xchg
int3
pop
push
insb
jp
mov
cmp
xchg
mov
jae
mov
xor
std
xchg
es
inc
jno
mov
fldenv
sbb
outsl
jne
mov
cmp
mov
cmc
xchg
in
dec
shl
jge
pusha
js
or
jg
out
xchg
icebp
fisttps
mov
xor
out
push
repnz
mov
xchg
and
jns
pusha
mov
rclb
gs
into
lock
push
jg
loop
jne
pop
jg
ss
add
dec
push
std
lahf
dec
stos
or
jnp
lcall
jo
test
sbb
mov
mov
mov
adc
xorb
outsl
lds
inc
xchg
in
inc
fwait
scas
mov
pushf
xchg
pop
popf
lret
js
adc
fdivrl
std
leave
xchg
cmp
cmpsb
sub
aaa
mov
stos
cmpsl
lcall
out
cmp
xchg
std
sub
pop
mov
movsb
pop
sbb
rolb
sbb
sarl
cmp
adc
pushf
rorl
mov
imul
push
call
leave
jmp
pop
lcall
dec
mov
imul
les
rcrl
popa
int
or
cs
add
cmc
mov
mov
sbb
inc
push
add
sub
into
xchg
mov
add
xchg
push
iret
and
sub
clc
jns
gs
jmp
ret
xor
push
lds
push
inc
test
cld
push
push
out
stos
shll
jbe
dec
add
mov
rcr
mov
push
aam
mov
jl
pop
dec
pop
mov
stos
adc
xchg
fdivp
mov
add
movsb
les
mov
mov
negb
fdivs
test
xchg
mov
jne
fdivl
cmp
add
stos
dec
clc
pop
cwtl
or
lcall
test
sbb
or
mov
cltd
mov
fucomi
dec
clc
hlt
lret
iret
jg
cld
dec
cmp
std
scas
adc
mov
jl
cmp
dec
push
pop
rclb
inc
popa
and
cld
andl
xchg
push
mov
ljmp
cmpl
dec
int3
or
mov
call
repz
or
ds
add
roll
sbbl
jno
sahf
ret
test
and
data16
vxorps
jle
imul
daa
outsb
sbb
sbb
cmpsb
dec
aad
xor
push
push
pop
lds
add
cmp
add
jl
push
xor
hlt
ljmp
sub
inc
outsb
lods
sbb
inc
cmc
out
and
std
fs
out
addl
add
leave
cs
notl
lods
or
loopne
lds
lret
outsl
cltd
mov
sbb
jp
inc
insl
add
lods
addr16
pusha
xor
or
xor
adc
pop
fildl
out
push
sub
jp
mov
mov
insl
xchg
rorb
movsl
sar
es
out
xchg
lcall
pop
adc
pop
pop
stc
or
test
popf
in
push
xor
pop
mov
arpl
pop
and
jns
xor
andb
les
mov
sub
dec
outsb
xchg
jne
imul
aad
loop
pop
push
or
xlat
je
mov
mov
adc
xchg
adc
jg
stc
dec
aaa
cmc
and
aas
insb
lea
data16
les
leave
and
into
jge
or
das
lcall
or
lock
fstl
andl
jb
add
lahf
clc
cmp
mov
and
pop
and
icebp
insb
pop
jge
subb
jo
sub
mov
cmpsl
daa
sub
mov
sub
clc
lret
dec
mov
ret
adc
pushf
stos
inc
mov
and
insb
stos
cwtl
imul
shl
inc
jge
sub
xor
repz
iret
add
mov
leave
jmp
push
test
in
cmc
in
loop
jns
mov
fwait
sub
jle
and
dec
enter
mov
xchg
xor
xor
out
pop
inc
jl
ja
popa
jge
xchg
std
sbb
and
jle
shl
cwtl
mov
xor
jb
fcoml
mov
je
cmp
aas
iret
lock
dec
mov
mov
jg
mov
popa
xchg
ja
ret
fildll
out
test
push
xchg
insl
ss
mov
fcmovne
in
xchg
jns
lds
in
popf
das
repz
push
mov
dec
subb
sub
lret
leave
sti
lret
cmpsl
sub
cwtl
lret
mov
jns
in
int3
pop
adc
adc
pop
aam
test
cmpsl
call
mov
lock
mov
out
in
stos
int
scas
test
aaa
sbb
in
cmp
jmp
push
in
jecxz
push
xchg
add
pop
mov
in
pop
mov
pop
mov
pusha
je
jg
add
sbb
aas
aas
or
lea
adc
and
or
fldenv
adcl
pushf
xorl
in
push
lock
add
lcall
lock
sub
or
xchg
sarb
add
mov
fistps
in
rcll
add
shr
aas
mov
pop
pop
out
popa
sub
ds
jecxz
mov
shl
popf
dec
fsubr
xor
int3
xchg
pop
mov
cmp
mov
call
fimull
xchg
mov
pop
xchg
aas
std
push
test
stc
in
push
push
xchg
shll
jecxz
insb
cmp
test
loopne
sbb
and
lds
pop
int3
repnz
pop
mov
dec
jb
mov
lahf
sbb
mov
cmpl
or
cs
imul
xchg
mov
loopne
add
cld
or
lahf
jmp
jb
popa
fisubrl
xor
in
cmp
ljmp
loopne
aam
cli
jns
add
decb
xchg
dec
lret
pop
inc
pop
or
and
pusha
mov
ret
push
loope
dec
mov
dec
nop
fs
and
rcrl
movsl
and
xlat
rcl
and
push
cs
mov
jecxz
sub
add
repnz
cmp
lods
loopne
and
xchg
xor
jmp
inc
popa
dec
jge
call
push
cmp
mov
popa
enter
and
or
insl
int3
jno
xor
lock
shr
cmpsl
xor
xchg
mov
and
add
cmpsb
adc
ja
and
jae
push
sbb
jbe
or
xchg
mov
cmp
sti
cmp
xchg
and
mov
pop
add
push
adcl
fisubs
xchg
jns
std
insl
mov
fisubrs
push
repz
mov
cwtl
aam
mov
test
in
pop
roll
jle
cld
test
cmc
fs
dec
bound
xchg
inc
arpl
les
les
test
clc
andb
aad
pop
mov
xchg
inc
dec
fsubrs
cmp
sbb
pop
add
loopne
jecxz
xor
jmp
fwait
mull
mov
add
outsl
dec
mov
out
outsb
lahf
adc
arpl
bound
jle
nop
movsl
popa
int
addr16
xchg
cmp
clc
and
cmp
shr
ret
ljmp
fs
lret
popf
pop
push
das
std
xchg
dec
or
roll
imul
mov
std
push
aaa
outsl
jecxz
dec
test
in
icebp
xchg
cld
inc
jge
add
addb
jbe
jnp
les
imul
mov
jne
test
shlb
mov
add
je
xchg
dec
mov
push
aas
push
out
je
adc
mov
rol
jne
jbe
jle
shlb
sbb
sub
les
imulb
push
rolb
xchg
mov
inc
push
ss
push
mov
push
add
mov
add
jmp
cmp
mov
cwtl
icebp
icebp
xchg
popa
dec
fwait
adc
in
sahf
and
lret
or
cld
popa
call
das
push
stos
jbe
aaa
mov
test
mov
int
leave
or
in
enter
sub
adc
lahf
popf
dec
push
pop
push
les
nop
enter
mov
push
out
mov
or
jl
mov
adc
add
jge
dec
pop
pop
inc
push
dec
jecxz
test
push
xor
adc
sub
mov
adc
aas
xchg
pop
fmuls
fdiv
jnp
mov
or
dec
mov
daa
add
das
sub
loope
aaa
mov
rcl
dec
inc
jns
dec
sbb
mov
pop
jo
leave
sbb
sub
mov
stc
mov
cli
mov
ljmp
dec
push
enter
pop
or
dec
dec
sahf
and
cld
xchg
idivl
cmc
in
sbb
into
push
or
mov
fst
push
mov
jmp
pop
lds
loopne
test
ljmp
test
sub
ljmp
in
adc
mov
pushf
rorb
pop
cmc
xchg
cltd
sub
jbe
mov
adc
into
sbb
int
daa
fstpt
cmp
pop
pushf
stos
jnp
dec
mov
sahf
imul
xor
add
push
inc
adc
xor
cmpsl
mov
cmp
shrl
adc
aaa
test
cltd
push
andb
test
imul
push
sbbb
push
repnz
loopne
and
xchg
ss
xchg
jl
or
xlat
mov
jo
icebp
hlt
push
aaa
js
shr
or
clc
inc
nop
mov
outsb
pop
sahf
out
addr16
xor
dec
cmp
pop
dec
insl
mov
lcall
mov
sahf
xchg
sub
pop
cwtl
ffree
jae
jb
xor
xor
enter
bound
roll
mov
loop
cmp
inc
pop
mov
jg
stc
sbb
cmc
fdivp
xchg
cmpsb
ror
dec
mov
pop
jmp
jne
lret
cmp
mov
or
lds
jno
sub
cltd
push
push
repnz
sub
jle
inc
mov
push
jbe
xlat
sbb
mov
mov
mov
xor
jns
aam
mov
mov
cwtl
mov
cwtl
xchg
cld
xchg
pop
xlat
pop
jb
fstpt
pop
xor
cmp
ror
outsl
loopne
push
sbb
and
push
stc
and
lahf
add
sti
and
jp
mov
mov
add
loop
sti
addr16
mov
cmp
lock
add
cld
cld
sbb
and
and
lds
add
loopne
xchg
pop
pop
mov
inc
push
inc
daa
xchg
or
xor
imul
dec
adc
push
lret
fstps
or
fsubrl
mov
cmp
pop
or
out
test
lret
shlb
scas
xor
gs
into
out
lret
cmp
add
fxch
loope
repnz
in
sub
out
ljmp
stc
loop
ljmp
add
push
test
xchg
dec
xchg
xor
enter
xchg
aas
shll
xor
cwtl
sbb
aad
div
and
stos
sub
mov
aam
sub
cmp
dec
or
push
sub
inc
call
sub
xlat
lock
pusha
sbb
and
in
imul
ret
insb
mov
mov
jns
dec
add
stos
mov
setge
rolb
neg
out
aaa
stc
jl
scas
dec
hlt
pusha
mov
gs
sbb
movsl
and
ficompl
pop
out
out
fwait
sub
add
out
push
mov
and
stos
jae
cmp
cmp
sbb
xor
movsl
std
and
inc
dec
push
push
lahf
push
or
stos
jecxz
repnz
xor
xchg
js
shrl
jmp
xorl
jecxz
icebp
inc
xchg
xchg
dec
sub
and
insl
enter
es
push
xchg
fists
xchg
dec
adc
jae
add
roll
push
je
rcll
or
gs
mov
jecxz
xorl
xchg
sub
cmc
mov
jl
loopne
and
mov
bts
in
aaa
dec
loopne
cld
aam
cld
cmpsb
fucomip
and
jmp
mov
imul
push
mov
rorb
ljmp
push
or
out
push
test
dec
adc
imul
mov
cmpsb
movsb
ret
aas
fstps
leave
xor
inc
testb
test
lods
mov
sbb
int
outsl
mov
jb
into
sub
lock
or
push
mov
dec
push
test
test
pop
insb
and
dec
arpl
lcall
cmpsb
add
cmp
arpl
dec
and
cli
lret
sub
adc
loop
jmp
ds
inc
movsb
scas
leave
sbb
inc
fmuls
stos
mov
scas
inc
adc
enter
pushf
jecxz
cli
push
iret
popf
adc
adc
pop
ret
test
ja
out
xchg
mov
push
cmpsb
hlt
xchg
fildll
dec
pop
sahf
xchg
mov
mov
sbb
xor
mov
arpl
pop
mov
dec
mov
cmp
movsl
aas
out
push
adc
out
adc
mov
push
and
or
dec
mov
aas
lds
sub
cmpsb
fadd
push
in
and
mov
xchg
jge
inc
add
mov
fld
cwtl
ret
outsl
int
sub
imul
mov
movsb
hlt
stos
jb
cmp
daa
sub
iret
sarb
jns
cmp
sahf
pop
dec
fld
lock
repz
insl
push
js
es
or
push
in
movsl
push
mov
adc
clc
xchg
cld
mov
jp
sbb
dec
push
mov
sub
out
aam
fwait
xor
adc
mov
jl
ret
pop
js
xchg
in
jl
xchg
xor
into
add
test
outsb
test
pop
push
int3
ljmp
out
fcomps
cmpsl
out
jle
lods
pop
cwtl
leave
outsl
testl
lret
frstor
mov
sarb
mov
stc
pop
out
xchg
addr16
pop
ss
cmp
fstps
xlat
stc
sub
andb
js
sub
cmp
xor
jecxz
lods
push
test
shrl
xchg
aas
or
bound
sbb
jno
sbb
pop
xor
xor
jno
mov
imul
sbb
jae
or
punpckhwd
fisttps
enter
aaa
lcall
add
mov
adc
sbb
ljmp
mull
bound
fistps
int3
jl
xchg
or
push
jecxz
push
mov
lahf
aad
inc
jns
push
lahf
xchg
pop
pop
mov
and
rcr
mov
movsl
cmp
jne
cmpsb
mov
popa
addl
std
lret
push
inc
and
sti
xchg
stos
inc
test
fsubl
push
and
cwtl
push
fcomp
daa
push
sbb
mov
stos
xor
popf
in
pop
push
cmpsl
pop
jg
add
inc
popf
ret
push
dec
bndldx
push
add
test
dec
int3
adc
arpl
je
xlat
push
mov
out
addb
push
mov
scas
in
jnp
add
cbtw
mov
jmp
mov
jmp
dec
popf
sbb
fisubl
fs
jp
popfw
mov
push
rorb
inc
bound
xchg
cmpsb
cmp
mov
adc
jb
loop
add
push
out
xor
out
sub
imul
push
ficoml
enter
lods
leave
dec
pop
mov
add
fwait
cmc
cmp
dec
outsl
rol
jmp
inc
fbstp
imul
inc
xor
stos
jnp
fmull
add
mov
adc
jbe
ljmp
push
adc
inc
ljmp
ja
xchg
lock
sarb
and
pop
sub
xchg
or
das
ss
pop
loope
js
xor
outsb
cmp
gs
mov
push
push
dec
and
adc
std
add
sbb
and
jae
ss
in
lods
fidivrl
loop
sbb
jp
fwait
lcall
dec
push
xchg
or
xor
pop
mov
xor
call
inc
jne
lods
xchg
mov
push
test
mov
sub
decb
mov
lock
inc
cld
pop
or
sub
in
es
pop
dec
std
add
adc
enter
lcall
repz
jp
out
sub
mov
sub
imul
inc
lret
lods
cmp
outsb
stos
lods
xchg
hlt
mov
test
pusha
jb
pop
mov
push
sub
add
sub
dec
scas
push
mov
jns
pushf
imulb
pop
stc
mov
in
push
push
aas
mov
xor
scas
out
ljmp
rcr
mov
movsl
fs
sahf
mov
pop
jno
inc
mov
push
sub
adcb
loop
les
test
push
or
xchg
ljmp
lods
adcl
xor
mov
push
fcomip
adcl
adc
push
push
xor
lods
inc
fwait
xlat
pop
sti
dec
jbe
sub
push
pop
jbe
mov
jl
js
fistpll
shrl
xchg
gs
jp
xchg
aas
xchg
cmpb
xlat
out
lcall
mov
sahf
mov
mov
shll
xchg
mov
xor
in
push
mov
pandn
ja
outsl
add
add
pop
fstl
or
pop
es
aam
icebp
push
inc
cld
data16
inc
sbb
ror
pop
inc
in
or
add
cltd
fabs
rcrb
push
loop
or
outsb
lret
shrl
push
hlt
in
or
dec
add
into
mov
cmp
mov
jbe
cltd
push
cli
xchg
fdivrs
push
outsb
addl
std
sub
popf
xor
jge
out
call
stos
mov
and
push
xchg
shrl
fcmovu
loope
mov
loope
jle
push
shrl
mov
pop
xchg
cs
out
loope
cld
cmpsb
shll
jle
inc
loope
xchg
sbb
cld
sub
cmc
or
pop
cmpsl
dec
insb
jg
cld
mov
mov
rcrl
imul
push
xchg
ljmp
test
push
adc
add
add
xchg
push
and
sti
lods
jg
movsb
sbbl
lahf
adc
mov
or
lret
daa
inc
call
subl
sbb
es
mov
popf
xchg
sahf
mov
or
cmp
aas
in
xchg
into
mov
int
cmpsl
int
and
or
fldt
stos
test
ret
lret
lret
xor
cmp
xor
cmp
hlt
iret
push
xchg
and
std
pop
pop
es
rcrl
es
mov
push
sbb
xchg
call
cltd
fistpll
pop
pop
cli
mov
scas
lahf
imul
into
pop
cltd
mov
push
lock
test
xchg
aas
fdivrl
cmp
out
int3
pusha
pusha
in
sub
in
sbb
in
xor
dec
aaa
fdivrl
xor
outsb
nop
fldl
mov
aaa
mov
and
addr16
pop
fiaddl
push
mov
jg
popa
ds
mov
clc
ret
leave
cmp
pop
aas
pop
mov
lds
jne
xchg
cld
cmp
fdivs
push
jge
arpl
push
fisttpl
add
aas
xchg
and
cmp
push
in
sub
jns
dec
cwtl
stos
popf
mov
ror
repz
dec
lret
test
mov
push
sub
insb
bnd
push
ret
stc
xor
mov
scas
sti
aad
add
or
adc
mov
lahf
cmp
xor
ja
mov
mov
mov
jae
mov
add
sub
rcr
cmp
pop
shll
hlt
push
jae
pop
mov
or
xor
sub
pusha
data16
aas
cmpsl
and
xor
call
mov
jmp
cmp
in
imul
aas
fidivl
shll
pusha
roll
xor
loopne
mov
dec
xchg
out
pop
lret
inc
pop
dec
xchg
jne
mov
mov
int3
rcrb
or
mov
jae
push
dec
es
mov
mov
inc
pop
add
push
testb
adc
lcall
int
push
pmaddwd
push
push
rclb
push
js
lahf
aad
inc
adc
add
gs
imul
or
ret
rcrb
mov
jns
adc
insb
mov
jbe
movsb
jno
mov
addr16
mov
rcll
subl
out
inc
mov
ret
push
xchg
dec
xchg
aad
jmp
dec
into
jne
mov
daa
lock
ret
cmp
jge
pop
popf
popa
dec
popf
leave
push
mov
cmp
fisttpl
jg
add
test
jne
outsl
xorb
xor
insl
jg
aas
dec
loopne
add
mov
xor
sbb
push
jg
mov
adc
arpl
jg
rcrb
pop
inc
mov
add
cld
lcall
clc
pop
push
sbb
and
in
notl
data16
arpl
std
nop
repnz
or
inc
sub
sub
data16
out
shl
call
icebp
sbbl
sub
adc
or
adcb
pop
xchg
sbb
cmp
test
and
cltd
js
imul
cmp
fwait
xchg
scas
pop
roll
mov
mov
jg
cltd
push
stc
testl
outsl
sub
xorb
sahf
add
insl
push
adc
xor
cmpl
iret
ret
aas
fdivrl
stc
mov
orl
sbb
pop
adc
shrl
and
cmp
femms
xchg
iret
sub
fwait
add
or
jg
and
cmp
pushl
clc
xchg
push
movsb
inc
push
xchg
and
enter
test
mov
push
cmp
adc
xor
mov
lret
out
add
jmp
inc
loop
lds
popa
loop
jbe
in
out
lret
mov
dec
out
dec
cmp
add
mov
repnz
fidivrs
sub
or
orb
mov
add
mov
js
xor
pop
cmp
inc
fdivr
hlt
mov
xor
inc
pop
rcll
mov
inc
orl
dec
mov
adc
dec
sub
shl
lea
mov
cmc
scas
shl
frstor
push
mov
or
push
adc
push
test
scas
cmp
or
add
mov
pushf
ret
movsl
mov
sbb
sub
pop
sub
jg
std
push
test
jp
jne
xchg
xor
test
push
inc
insl
test
imul
aas
inc
popa
pushf
cmpsl
stos
push
sub
pop
into
adc
xor
mov
loope
loop
and
ret
daa
pop
jno
rolb
test
lahf
insl
test
mov
stc
push
das
push
cmp
pop
pop
sahf
shll
repz
les
mov
adc
ss
pusha
aam
addr16
jno
lods
jge
xchg
faddp
imul
cltd
xor
loopne
mov
xchg
arpl
movsl
sub
push
es
enter
sub
es
data16
mov
cmpsl
cwtl
jne
xor
bound
sub
insl
dec
adc
xchg
lahf
insl
push
icebp
outsl
shlb
subb
call
and
adc
or
repz
sbb
in
xor
mov
pop
and
inc
ret
loop
dec
cmp
xchg
inc
xchg
cmp
jae
fistps
scas
ja
xchg
daa
pop
xchg
xchg
or
addr16
mov
add
lea
inc
iret
filds
cli
xchg
adc
ret
xor
jae
adc
addr16
jmp
nop
jp
fadds
xchg
ja
mov
andl
mov
lea
test
mov
jo
dec
push
out
into
adc
scas
jae
mov
out
sub
fstps
jbe
repnz
sub
mov
loope
call
mov
pop
or
int
sti
std
aaa
jecxz
mov
fdivrl
arpl
adc
inc
dec
sub
cwtl
orl
int
add
sub
xchg
jnp
shll
cmpsl
ret
rcll
mov
aaa
test
add
into
cmpsb
sub
jge
lret
jmp
inc
subb
fcompl
out
ret
lcall
mov
mov
stos
out
out
in
aaa
cltd
and
adc
aas
fsubp
add
mov
cmp
pop
inc
xchg
pushf
jle
push
sti
ret
sahf
mov
test
daa
in
lds
call
outsb
mov
das
dec
pop
fistpll
cmp
aad
fwait
cs
push
out
scas
mul
pop
ret
insl
pop
loop
inc
sub
mov
sub
je
adc
or
cmp
and
push
hlt
and
fcos
add
or
or
xor
mov
leave
call
push
adc
cmp
je
outsl
sub
js
xor
jge
negl
add
adcl
inc
ss
rorl
xchg
in
pop
jne
clc
out
fisubrs
push
test
stos
ds
inc
and
popf
xchg
jo
inc
loop
jp
mov
inc
mov
push
hlt
pop
bound
aaa
inc
call
iret
das
mov
adc
and
loopne
into
js
and
call
data16
rcr
jns
cmp
mov
dec
mov
xor
xchg
ret
mov
ret
ja
dec
repnz
imulb
aad
jmp
mov
test
xor
in
adc
in
sti
movsb
sbb
in
in
sarb
or
sub
add
dec
cmp
jl
mov
outsb
clc
jne
cld
adc
lcall
push
into
test
imul
sub
push
jg
pop
pop
jb
and
dec
in
outsb
popf
in
iret
rcrl
mov
outsb
xor
fstpl
cmp
add
jns
lcall
je
dec
data16
clc
xchg
ss
add
sbb
add
push
push
mov
idivl
xor
jg
je
mov
inc
out
ret
push
pop
sbb
adc
add
adc
les
dec
mov
iret
mov
inc
xor
insb
dec
call
test
mov
ds
mov
adc
aam
lcall
mov
cmp
pusha
adc
aas
cmp
cmp
xchg
scas
push
add
jmp
adc
push
mov
lock
and
sbb
push
clc
mov
xchg
xchg
aad
aaa
jae
cld
repz
ja
and
imul
jne
stos
sbb
sar
adc
loope
repnz
std
movsb
hlt
push
scas
fistpll
push
es
xchg
sub
dec
jge
sti
sbb
add
mov
fmuls
fadds
lret
imul
inc
push
push
loop
xchg
imul
xchg
pushf
imul
gs
push
add
cmpsb
lahf
inc
mov
adc
pop
je
mov
or
shlb
xchg
push
dec
add
test
pop
inc
mov
and
pop
jno
in
add
cmovno
xor
jle
push
or
pusha
jge
and
xor
notl
push
push
clc
and
out
jne
push
push
pop
iret
in
lret
mov
jae
add
mov
cmp
rcll
fsubl
sub
xchg
fmuls
sbb
and
pop
retw
bnd
pop
mov
lcall
sbb
int
cld
cltd
test
mov
add
lock
test
js
out
insb
xchg
jle
fs
mov
sbb
je
and
sbb
inc
popf
inc
dec
mov
in
push
mov
shl
imul
aam
daa
lcall
in
xor
shl
dec
out
sub
jnp
pop
xchg
mov
add
mov
sbb
xor
inc
ja
and
clc
push
or
xchg
inc
jecxz
stos
loop
pop
dec
sbb
es
mov
mov
gs
push
rcl
pop
out
fsub
add
jnp
mov
push
push
pop
out
sahf
lods
aad
repz
hlt
std
push
xchg
mov
sub
pop
sub
mov
ret
outsb
pop
dec
loopne
sub
push
aaa
int
xor
test
push
sub
insl
scas
cmp
sub
inc
std
sbb
mov
in
push
out
lock
push
aam
push
sarb
loopne
jecxz
fstp
pop
fistpll
es
sbb
pushf
test
push
scas
test
jnp
lahf
cmp
test
das
cmp
cmp
push
pop
cmp
adc
into
add
add
outsb
or
ret
mov
icebp
xor
mov
push
mov
push
xor
sahf
inc
pop
das
mov
nop
out
mov
cmp
arpl
jle
xchg
jns
aad
nop
je
mov
add
leave
dec
push
lea
mov
outsl
shrl
aad
lea
push
mov
outsb
cli
push
and
int3
and
cli
jg
pop
daa
or
arpl
sarb
xor
jbe
push
sbb
xchg
xchg
push
mov
xlat
jne
repnz
fs
shll
lahf
adc
fisttpl
mov
and
leave
or
repnz
call
adc
outsb
das
add
test
jo
cmp
cmpsl
es
cmpsb
pop
ficomps
push
mov
xchg
adc
repnz
dec
scas
xor
mov
int
sub
repz
popf
test
out
into
jbe
sub
push
xor
iret
adc
sub
sbb
xor
cmp
ret
lock
sub
mov
push
jo
outsl
sarl
xor
jno
mov
notl
adcb
les
std
in
testl
adc
mov
mov
push
arpl
cmp
dec
xchg
or
fcmovne
loop
adc
ret
je
les
push
ret
mov
push
xor
pop
mov
sbbb
hlt
cmp
xor
sahf
lahf
icebp
lds
mov
push
xor
adcl
mov
mov
adc
or
cs
add
out
dec
dec
icebp
push
fdivrs
mov
loope
and
arpl
or
in
cwtl
lret
decl
gs
sub
fisttps
aaa
lods
inc
push
out
arpl
aaa
cmpb
lds
repz
movsl
divl
retw
test
push
repz
std
sub
insb
push
jns
movsb
lds
inc
push
xor
stos
rcrb
enter
xchg
shrl
or
outsl
mov
fwait
and
mov
xchg
jl
or
and
in
mov
js
fnsave
test
mov
sbb
add
mov
cmc
jae
cmpsb
or
xchg
cmp
cmp
sbb
lret
inc
mov
sbb
leave
push
repz
gs
mov
clc
fisubrl
mov
mov
sub
mov
pop
mov
daa
in
shl
pop
jmp
dec
clc
mov
insb
mov
cwtl
imul
dec
jg
sbb
inc
dec
sbb
movsb
in
jb
add
test
mov
push
xchg
cmc
leave
and
jnp
xchg
in
inc
mov
dec
inc
dec
and
jb
jge
pop
pop
adc
mov
push
mov
push
aaa
add
in
fstpl
leave
push
shlb
shll
gs
jmp
int3
gs
ss
pop
add
sbb
cmp
stc
pop
add
add
jb
jmp
jl
imul
outsl
jnp
ss
cmpsl
ljmp
mov
xlat
stc
push
inc
push
cmp
rorl
lock
jnp
gs
jo
cmp
enter
leave
aaa
imul
sub
mov
insl
test
jns
or
xchg
xor
dec
mov
mov
mov
sahf
ret
lock
mov
cmpsl
daa
addr16
rcrl
mov
jns
aam
add
mov
push
or
int
pop
push
cmc
mov
fdivr
loope
sbb
jnp
and
jp
mov
mov
sub
mov
xchg
int3
mov
jmp
push
xor
inc
inc
pop
loop
xchg
push
mov
and
int3
stos
xchg
cmp
add
imul
cmp
ret
call
push
pop
jne
test
add
rolb
pop
cltd
pushf
cmp
push
sbb
bound
pop
les
mov
sub
stos
mov
jge
fwait
lahf
dec
push
lret
jp
jmp
lock
add
lea
dec
pop
and
jns
leave
and
inc
lret
psubb
or
repz
xchg
insb
jne
fdivrs
mov
pop
dec
aad
mov
xchg
mov
push
sbb
test
or
inc
mov
lcall
dec
ror
push
ret
xchg
jl
mov
sub
add
add
jo
pop
mov
sbb
cltd
adc
push
or
pop
sbb
out
mov
cmp
es
jne
add
stos
dec
or
or
adc
int3
xlat
xchg
mov
dec
adc
comiss
scas
cmp
nop
pop
cli
inc
pusha
es
out
jno
in
sub
sbb
push
push
push
addr16
fdivl
push
std
mov
leave
inc
loopne
ret
imul
or
push
sub
pop
jmp
rcrb
daa
mov
rcll
mov
sbb
aam
sbb
cltd
dec
sub
lcall
xchg
or
pop
outsl
insb
and
mov
inc
adc
inc
jae
or
mov
or
movsl
scas
int
fwait
nop
inc
xor
pop
test
mov
fnstsw
clc
das
xchg
lods
mov
mov
xchg
cmpl
cli
lret
jb
inc
pop
leave
xor
sbb
sub
insl
sub
gs
add
repnz
andb
push
scas
mov
dec
cmpsl
pop
cmpb
pop
es
inc
or
enter
into
push
xor
mov
or
mov
and
stc
movsb
stos
sub
sarl
pop
jecxz
mov
out
xchg
dec
mov
lcall
jl
mov
lahf
push
pop
jmp
cmp
xchg
int
and
arpl
mov
aaa
aam
lds
xchg
ja
pop
inc
repz
gs
dec
outsb
shlb
inc
popa
inc
mov
push
or
mov
mov
jmp
imul
and
sub
mov
cltd
pop
mov
push
loope
xchg
icebp
inc
cmpsl
cmpsl
push
stos
push
mov
das
jmp
xor
testb
lock
jecxz
cli
add
and
into
fwait
call
clc
imul
sub
and
popf
push
cld
imul
sub
push
adc
jmp
js
and
std
push
lods
mov
adc
mov
movsb
inc
jmp
push
pop
cmp
push
out
out
test
mov
fidivl
push
data16
inc
loopne
jno
push
dec
int
jb
out
dec
je
sbb
pop
pop
ja
inc
nop
xchg
adc
inc
smsw
lock
clc
mov
or
dec
int
das
je
sbb
call
adc
hlt
imul
ret
clc
cmpsb
cmp
out
xchg
lret
and
adc
sub
rorl
mov
ss
scas
adc
scas
cmpsb
mov
clc
repz
divb
or
loope
and
arpl
nop
test
pop
adc
xchg
jne
mov
in
xchg
mov
jp
out
xor
push
vpdpwssd
pop
adc
mov
push
shrl
mov
outsl
pusha
in
imul
mov
xchg
push
int3
aas
enter
movsl
mov
inc
jg
ljmp
out
mov
icebp
jb
stos
idivb
push
push
sub
lret
fadds
test
and
jbe
mov
mov
dec
rol
ror
negl
cmp
mov
xchg
insb
or
xchg
cmp
jbe
adc
cmpsl
in
out
mov
mov
mov
shll
pop
or
into
push
jecxz
sub
cmp
or
cs
ljmp
data16
jg
cli
pushf
arpl
add
sti
out
shl
push
popf
jae
bound
cli
inc
xchg
and
mov
dec
add
sub
inc
pop
pop
mul
cltd
mov
pop
mov
scas
outsl
andb
enter
cmp
mov
and
inc
xchg
loopne
or
pusha
xchg
inc
xlat
pop
lods
mov
jnp
mov
iret
sarl
gs
cwtl
lcall
mov
inc
aas
push
jge
cmp
repnz
lock
xchg
xchg
or
xchg
mov
and
xchg
out
clc
adc
cmpsb
pushf
dec
and
ret
cmp
mov
movb
jno
stc
stc
dec
mov
pusha
xor
push
sub
xor
lahf
test
cmp
mov
cmp
adc
jecxz
mov
sub
fsubs
inc
imul
dec
enter
enter
icebp
imul
mov
or
in
xor
inc
adc
mov
dec
xchg
test
mov
and
xor
loopne
push
mov
lds
adc
lret
mov
gs
sbb
outsb
in
xlat
adc
outsl
testl
xor
movsl
ljmp
pop
sub
and
and
add
mov
cwtl
pop
pop
clc
mov
mov
push
push
aaa
fs
xchg
cli
push
xchg
dec
xor
fistps
jmp
popf
scas
shlb
popf
mov
fisubs
mov
inc
outsb
sbb
adc
and
pop
mov
push
jns
adc
inc
enter
sbb
insb
fldl
or
popa
or
fadd
push
xor
imul
or
out
and
inc
xchg
fxch
jmp
adc
cmp
pop
ret
push
and
mov
sub
fdiv
and
popa
xchg
popa
adc
lods
call
aad
jle
and
mov
jge
or
sbb
mov
and
or
cmp
xlat
jp
es
add
jge
sub
jp
inc
lcall
lock
mov
sbb
cmp
out
faddp
pop
je
jmp
mov
addps
in
push
inc
mov
ja
enter
mov
xor
lds
pop
mov
inc
or
add
sbb
pusha
mov
dec
mov
fistpll
xor
nop
cmp
adc
xchg
xchg
xor
sbbl
xor
or
fisttpl
inc
xchg
mov
sbb
ds
repnz
je
movsb
jle
pushf
sub
and
pushf
in
fisttpl
in
aaa
pop
push
pop
fistpll
jne
mov
sbb
daa
pop
pop
insl
lret
sarb
push
xchg
push
js
icebp
or
mov
scas
hlt
lock
out
lahf
in
call
jmp
jbe
push
les
lods
mov
in
sub
nop
mov
subl
sbb
test
pop
inc
cmpsb
lret
bound
mov
or
mov
mov
test
arpl
arpl
into
stos
mov
outsb
xchg
fstpt
adc
mov
pop
fwait
test
xchg
jo
push
fsubrl
cltd
rorb
mov
and
mov
shr
test
mov
adc
xchg
addr16
ds
fdivl
inc
ja
mov
mov
clc
push
xor
jecxz
mov
ds
in
mov
lret
lahf
mov
popf
pop
dec
cmp
mov
rorl
mov
cwtl
hlt
sti
jg
je
jno
insb
sbb
out
je
jge
leave
lahf
rorb
mov
addr16
mov
jl
inc
rcl
sub
mov
sbb
xor
fldcw
cmp
or
mov
dec
lds
sub
hlt
cli
xchg
stc
sbb
js
dec
repnz
idivb
or
fdivr
ror
push
pop
adc
cmp
scas
sub
cmp
pop
pop
mov
and
int
out
lock
push
pop
dec
mov
mov
jne
icebp
loop,pt
mov
jns
mov
lcall
cmp
mov
adc
and
test
shll
push
xchg
jbe
push
push
sbb
addr16
xchg
mov
and
daa
jmp
sbb
loop
jge
mov
and
ret
repz
sub
or
sbb
push
adc
faddl
mov
cmpsl
addl
jnp
jl
jle
jns
xor
fwait
push
fs
movsb
es
cld
stos
lods
test
psubsb
aaa
pop
cs
dec
fldl
mov
cwtl
dec
jmp
addl
movsl
in
fsqrt
dec
ja
dec
aaa
rorl
shl
rcrb
and
pop
mov
adc
and
int
mov
jmp
xor
xor
rcl
subl
and
les
and
leave
bound
nop
jo
clc
dec
and
daa
or
popa
adc
dec
leave
inc
lds
pushf
sub
inc
fiadds
test
cmp
dec
vpmaxsw
imul
test
pop
pop
shll
push
and
pop
fs
cmp
in
icebp
sarb
gs
sahf
fwait
xchg
xchg
shrl
outsb
popa
jp
jmp
and
or
xor
iret
loop
out
mov
mov
out
and
push
cmpsb
sbb
lcall
ret
mov
push
and
jecxz
mov
lds
ljmp
mov
ja
xchg
pop
rorl
sbb
lret
iret
dec
mov
and
mov
pop
mov
jo
fdivr
xchg
and
sub
insb
mull
push
and
pop
mov
mov
pop
sti
lret
lcall
adc
mov
inc
cs
jge
mov
test
test
gs
xchg
and
cmpsl
aad
sarb
lahf
and
loope
pop
adc
outsl
dec
sbb
jmp
sbb
cmp
push
xor
ja
mov
in
cld
das
lret
pop
lods
xor
into
out
int
adc
negb
and
dec
or
xor
sbb
lods
fisubrs
xlat
mov
repnz
ds
sbb
inc
jnp
outsl
push
add
pop
xchg
gs
into
or
cltd
add
cs
cmp
push
add
hlt
stos
into
jo
pop
lret
cmpb
jns
dec
js
mov
push
mov
shll
mov
popa
adc
jge
mov
dec
jg
lcall
popf
xchg
sub
emms
inc
outsl
jecxz
xor
int3
lret
outsl
dec
lock
aas
aam
sbb
adc
repnz
or
insb
pop
imul
mov
test
icebp
push
pop
icebp
addr16
lods
stos
es
inc
ret
in
mov
mov
cmpsb
ja
jmp
and
movsb
push
cltd
sub
inc
inc
and
sarl
arpl
mov
cmpsl
sbb
call
or
mov
addr16
push
jge
mov
add
cli
stc
insb
jg
mov
push
push
hlt
inc
jmp
inc
fisubl
aam
adc
pop
lods
out
push
xor
std
sub
call
and
xlat
xchg
jp
lcall
in
jns
xlat
xor
sarb
cmp
in
insb
mov
addb
mov
vmread
popa
js
adc
loop
arpl
mov
pop
mov
call
lahf
pop
daa
jge
fimuls
pop
js
sub
inc
adc
push
cs
sub
lret
fstpl
jne
fcoms
pop
cmp
stos
rol
call
push
xlat
fsts
dec
mov
cltd
jle
push
xchg
jg
or
and
cltd
adc
jno
add
mov
jnp
xor
push
cmpsl
decb
mov
js
rorl
lahf
xlat
test
lcall
cmp
or
pop
inc
pop
outsl
int3
out
jae
and
xchg
lods
sub
ds
es
pop
and
scas
sub
lea
inc
mov
and
pop
addr16
mov
testl
incl
mov
pop
mov
lret
xchg
mov
mov
movsb
mov
lods
cmp
jnp
imul
inc
or
shll
scas
xor
iret
push
inc
xlat
adc
mov
mov
sbb
push
lods
xor
and
jns
adc
push
cmp
lret
jns
ret
jno
dec
lds
jnp
stos
push
sbb
xchg
mov
call
repnz
flds
dec
cmpsl
cmp
xchg
dec
mov
test
test
movsl
pop
out
daa
or
in
sbb
add
hlt
cmp
mov
aas
inc
cli
sbb
push
test
ret
push
fsts
inc
leave
mov
add
shlb
imull
push
mov
jb
enter
scas
stos
mov
roll
jne
adc
pop
and
xchg
xor
add
aaa
sbb
inc
hlt
mov
test
sbbl
inc
repz
cmp
inc
jne
sbb
mov
aas
and
shll
add
movsb
arpl
mov
mov
pop
cwtl
mov
lock
xchg
dec
cmpsl
popa
cmp
roll
xchg
pop
jb
sub
mov
sub
inc
mov
aaa
jge
test
jbe
test
push
stos
cmp
jmp
dec
stos
mov
mov
and
inc
cli
ja
insb
jl
aaa
hlt
out
scas
out
pop
and
cwtl
mov
sbb
orl
jp
lret
xlat
push
imul
lret
int
cmpsb
ljmp
sar
inc
sub
loope
popf
popf
cmpsl
push
imul
stos
pop
std
adcb
repnz
xor
sbb
cs
dec
ja
les
aas
sub
sbb
std
adc
in
jbe
je
data16
stos
xor
rcl
sbb
aad
sub
roll
call
out
dec
mov
push
loopne
xchg
and
xchg
jo
movsl
fs
in
in
ja
scas
in
xor
rcrl
incl
imul
mov
mov
lcall
and
mov
adc
mov
outsb
rcrb
out
cld
mov
aad
movsb
inc
es
aas
push
pop
lret
das
imulb
xchg
cli
cli
adc
or
sbb
xchg
mov
shr
lea
enter
sub
mov
ror
adc
lods
cmpsb
data16
sti
aaa
lcall
mov
sub
mov
xchg
mov
subb
adc
aad
cltd
jecxz
adc
cmp
dec
inc
fcomi
ja
mov
inc
adcb
aaa
inc
inc
pop
rcr
jb
hlt
aam
cmpsb
ret
out
nop
cmpsl
mov
mov
add
xor
rorl
and
mov
lahf
and
ss
sbb
adc
cmpsl
or
sub
in
out
pop
cwtl
xor
jg
imul
mov
aam
dec
outsb
dec
test
lds
xor
stos
push
nop
rolb
repz
push
test
gs
sbb
xor
rorb
cli
ss
mov
cmp
fcomps
test
jp
mov
mov
cmp
jmp
and
sub
jmp
into
sbb
bound
cmc
jg
mov
inc
or
imul
mov
mov
and
ja
pop
loopne
stos
sub
pop
shll
push
xchg
ljmp
cmc
adcl
fwait
xchg
dec
test
stos
add
push
fwait
push
ds
add
xlat
xchg
mov
pop
mov
mov
mov
icebp
push
pop
fisttpll
insl
jne
into
dec
test
mov
mov
lods
pop
les
dec
nop
jns
fistps
jns
adc
jge
mov
push
xchg
cmp
dec
push
mov
fs
fldln2
es
sbb
rclb
movsl
fcoml
or
imul
jo
jb
jle
adc
aas
aam
fsubl
xor
les
sub
enter
jbe,pn
jnp
mov
sbb
mov
jg
sub
pop
sbb
mov
or
mov
push
xchg
sbb
shll
mov
push
dec
push
pop
addr16
enter
xchg
lahf
pop
push
mov
fildl
outsb
lock
into
sub
push
cmp
lods
insl
stc
mov
xchg
or
mov
imul
ret
pop
sahf
or
add
fdiv
and
in
add
stos
push
cmpsb
sub
rorb
mov
xor
test
push
xchg
leave
xor
pop
in
hlt
fcompl
cmp
mov
outsb
dec
lret
jg
nop
mov
xor
dec
ss
inc
cmp
mov
cmpsb
out
sub
lret
fistps
xchg
mov
mov
in
rorb
inc
cld
cmp
push
movsl
dec
dec
mov
jnp
xor
int
xchg
out
ficoms
jp
mov
xor
out
inc
daa
aas
push
push
xchg
stos
inc
popa
xor
loopne
cltd
cli
fcompl
push
adc
cmp
scas
dec
sub
std
push
xchg
stos
lret
adc
cltd
inc
shlb
movsb
add
cmp
scas
pop
scas
outsb
dec
push
inc
sub
jp
adcl
mov
decb
cmp
mov
cmc
repz
cwtl
xor
or
sbb
sti
push
jp
sbb
adc
xchg
idivb
in
jl
mov
lret
push
jp
mov
fisubl
pop
sub
mov
pop
sbb
lock
sbbl
mov
xchg
sbb
fdivp
dec
cli
rclb
out
dec
arpl
adc
push
jne
or
mov
ret
ret
addr16
shrl
out
push
fidivrs
mov
and
mov
insl
in
ljmp
cmpsb
jmp
stos
pop
addr16
ret
data16
jl
fwait
out
test
and
mov
fists
out
sub
mov
dec
dec
pop
ret
lahf
pusha
repnz
mov
push
or
pop
fdivrp
push
lahf
scas
das
test
ja
jge
lods
hlt
in
and
pop
xorl
sbb
push
mov
aaa
clc
int3
sti
or
icebp
mov
aad
notl
call
nop
jne
jns
out
and
aam
lds
or
xor
enter
je
or
pushf
jmp
xor
push
dec
jno
push
add
dec
ret
push
leave
lret
lret
cmc
and
cltd
mov
cmp
cwtl
cli
mov
mov
popa
add
jg
push
jle
inc
xchg
outsb
test
loop
inc
or
out
sbb
xlat
stos
popf
jb
or
gs
mov
mov
mov
outsb
jge
rclb
ficomps
xor
inc
int
arpl
jns
test
sub
add
adc
pop
imul
pop
cmp
sar
in
out
push
or
adc
das
loope
popf
ret
movsl
repz
jmp
sar
das
lahf
add
pop
push
bound
or
shlb
mulb
popa
cmp
jo
mov
sbb
mov
sahf
out
xchg
xchg
fisubs
lret
fwait
mov
inc
inc
xchg
insl
inc
bound
mov
outsl
shlb
leave
mov
and
fidivl
mov
sbb
dec
aad
push
outsl
outsb
hlt
sti
testb
dec
outsl
mov
iret
or
lcall
incb
lcall
xchg
cmp
jle
cli
int
or
out
mov
in
ret
or
movsl
pop
cmpsb
notb
push
push
pop
scas
outsl
loopne
or
cmpb
or
adcb
xlat
xchg
test
add
dec
pushf
pop
pmulhuw
sahf
andb
push
pmullw
popf
pop
xor
lea
imul
sbb
pop
inc
test
fsts
cmp
cli
mov
ficoml
or
sbb
test
push
shll
dec
test
sbb
xchg
arpl
mov
mov
sbb
movsl
scas
cmp
daa
add
lea
mov
imul
inc
push
std
outsb
pop
cmp
xchg
adc
stos
arpl
cmp
out
movsb
sbb
aad
xchg
and
push
jb
push
ret
jns
lret
pop
aas
push
jo
daa
jno
das
jmp
inc
je
jns
roll
mov
and
lods
cmpsb
jbe
cmpsb
inc
cs
in
cwtl
loopne
fs
adc
mov
filds
sub
iret
mov
out
pop
icebp
mov
ret
sub
test
mov
inc
dec
pop
test
repnz
inc
push
lahf
jo
mov
divl
jle
jo
mov
pop
test
mov
push
movsb
adc
sar
push
sbb
jl
inc
rcrl
xchg
xchg
sbb
fwait
mov
mov
xchg
lods
ret
ret
fcmovnb
jg
pop
rclb
cwtl
push
jo
mov
jg
dec
jecxz
push
mov
jge
int3
repnz
cmp
lods
int
dec
mov
lods
pop
push
jg
xchg
pop
inc
cmp
popf
mov
popf
lcall
int
jbe
cmpsl
pop
pop
and
ret
lods
in
insb
aam
push
cmpsb
push
and
inc
outsb
scas
cmp
adc
or
xor
and
ret
mov
pop
cmp
nop
add
inc
mov
jmp
xor
outsl
mov
xor
dec
cmp
jmp
adc
subb
pop
xchg
lods
test
push
in
mov
or
jnp
mov
lret
aad
pushf
push
movsl
push
mov
cmpsb
mov
iret
mov
pusha
loope
and
gs
dec
adc
jbe
loop
push
test
cmc
add
sbb
push
mov
scas
or
or
inc
aam
push
or
push
insb
mov
lods
cli
scas
inc
sub
leave
sahf
jo
lea
lret
rcrl
adc
int3
push
mov
xor
mov
cld
popa
jbe
inc
fildll
mov
push
cld
ja
repz
add
mov
jns
sbb
lds
xchg
sti
mov
sbb
sbb
test
lea
je
sub
or
or
ss
sub
aam
lret
jmp
dec
popa
add
mov
inc
xor
pop
jg
je
in
mov
movsb
out
pop
mov
pop
icebp
vdivsd
pushf
cmp
xor
pop
inc
or
iret
ljmp
xor
test
jne
jl
inc
inc
gs
add
push
pop
and
sub
scas
mov
mov
out
and
cld
sub
jmp
xchg
add
mov
enter
pop
fistpl
xor
jne
addl
mov
add
mov
test
mov
mov
or
scas
fisttps
mov
lock
xchg
sbb
punpckldq
inc
insl
add
fisttpl
out
or
mov
adc
or
mov
nop
lahf
dec
imul
data16
or
jae
sub
testl
or
inc
jmp
ret
cli
push
add
sbb
pop
std
stos
cmp
cmc
inc
pop
mov
pusha
ljmp
jmp
mov
imul
pop
fdiv
jbe
and
xorb
dec
add
pop
mov
es
jmp
mov
ret
fmull
mov
cld
fisubl
pop
xchg
mov
push
adc
jmp
add
scas
inc
hlt
lret
pop
mov
loope
jns
xchg
aaa
subb
loop
nop
scas
je
mov
pop
add
in
mov
add
push
ror
sub
xchg
add
cmc
rcll
mov
stos
mov
popf
push
shll
pop
sbb
ja
add
loopne
xor
xor
ret
mov
cmp
jno
mov
inc
andb
jp
sarl
stos
xchg
or
imul
inc
jle
inc
ljmp
rorl
lret
lods
sbb
hlt
lods
into
mov
rcl
push
sbb
adc
mov
add
dec
scas
xchg
test
dec
sub
jbe
inc
je
add
dec
mov
sub
or
push
cld
repnz
lods
addr16
dec
inc
and
imul
pop
sbb
pusha
cmp
adc
ljmp
jbe
mul
fsubp
icebp
call
icebp
das
lahf
pop
nop
add
loope
jge
mov
cli
mov
adc
jmp
mov
movsb
mov
shll
pop
sbb
mov
jle
loopne
cwtl
inc
divl
pop
adc
mov
mov
les
ljmp
in
mul
mov
fwait
or
push
aaa
test
test
cwtl
hlt
xor
inc
fldt
xor
insl
test
mov
outsb
outsb
jmp
jp
sbb
push
cmp
xchg
or
test
imul
and
bound
add
push
jge
jmp
or
adc
clc
push
lahf
aas
sub
fsub
xchg
mov
cmp
in
jno
sti
fisubs
mov
aad
fisttpl
dec
mov
mov
or
stos
pminub
pop
add
imul
movsl
dec
cmp
loop
sbb
add
xchg
xor
mov
pusha
push
push
into
or
xor
inc
leave
scas
scas
mov
adc
lret
add
test
mov
adc
xor
outsb
mov
ds
stos
movsl
js
inc
jge
adc
inc
inc
pop
push
pusha
mov
fnstcw
mov
push
iret
mov
scas
sbb
lods
sbb
pusha
test
fcmovb
out
jge
xchg
out
mov
cmc
push
and
movsb
xchg
pop
loope
ret
aad
stos
ljmp
jmp
jnp
in
ffree
mov
mov
and
jnp
cld
jge
push
xchg
popf
jge
sbb
push
pop
mov
sub
cmp
inc
test
cltd
pop
fdivrl
cmpb
int
mov
js
mov
repz
stc
pushf
adc
cmpb
out
mov
or
std
fsubrl
pop
popa
jl
push
mov
jg
push
insl
and
fisttpll
push
pop
push
xor
aas
inc
sbb
inc
mov
scas
mov
cmpsb
and
fsubl
nop
shlb
sub
jl
pop
xchg
jb
stc
and
sbb
addr16
jne
mov
adc
push
xchg
test
nop/reserved
sbb
int
loope
in
ret
popa
fsubl
bound
mov
sbb
mov
aam
fucomi
pop
xor
mov
xchg
mov
stos
rcll
xor
mov
cs
cld
orb
fistl
dec
jno
xchg
fcomip
movsl
jg
cmp
sbbb
jbe
dec
sub
out
andb
push
inc
mov
mov
inc
xlat
out
push
dec
rcrl
cmpsb
and
push
xchg
dec
cltd
int
xchg
inc
xchg
sub
pop
jnp
test
lcall
pop
push
jmp
pop
sbb
sbb
cmpsb
cmpsb
rorl
ret
fwait
cmpsb
or
gs
mov
inc
testb
sbb
call
movsb
xor
and
hlt
adc
int
add
divl
cmp
inc
push
lahf
aas
sbb
sub
add
lea
mov
testb
sti
mov
popa
push
cli
mov
push
imul
mov
dec
cwtl
pushf
xor
repnz
lea
pop
shr
cwtl
xchg
sbb
xor
push
fwait
lcall
mov
int3
mov
xchg
int3
ja
sbb
pop
dec
lret
mov
scas
es
ficomps
jp
jbe
leave
and
jmp
addr16
xchg
shlb
push
imul
dec
movsl
popa
mov
pop
cld
add
dec
xor
push
mov
in
call
push
jne
sub
sub
xchg
xor
jp
pusha
insb
cmp
mov
in
xor
das
nop
sahf
ja
sub
mov
jp,pn
sub
mov
cmp
or
out
mov
lods
cli
or
test
push
bound
popa
les
fsubrl
jnp
mov
mov
inc
stos
pop
aad
inc
dec
into
jae
ds
flds
aaa
jae
lea
cli
fcmovu
stos
push
jge
scas
inc
test
mov
sahf
cmp
scas
pop
pop
rorb
jg
rcll
mov
push
divb
in
mov
cwtl
into
xor
aam
inc
out
mov
push
sub
lcall
mov
call
and
adc
and
das
popa
xor
mov
loopne
push
jae
mov
sub
mov
dec
ljmp
xor
arpl
popf
shll
insl
mov
ja
mov
out
subb
mov
imul
stc
mov
cmp
fsts
cmp
xchg
mov
lock
arpl
mov
outsb
dec
sub
popf
jnp
mov
push
or
cmpsl
outsb
mov
inc
sar
jmp
ljmp
scas
enter
js
push
test
imul
dec
lret
cmp
movsb
xor
xchg
test
and
add
es
into
fists
loop
shl
lods
fs
inc
mov
fidivrl
mov
popl
cwtl
popf
mov
fs
dec
sbb
add
jmp
inc
jbe
lods
sbb
jp
add
xchg
adc
mov
iret
ljmp
and
push
insl
pop
lea
dec
xchg
cmpsb
add
aaa
or
jmp
out
adc
in
jecxz
jbe
lods
mov
lock
dec
push
adc
jb
inc
bound
loopne
xchg
test
sti
push
jecxz,pn
movsb
das
sub
pop
push
mov
dec
out
insl
xor
dec
lock
lcall
xchg
cmp
and
push
sub
loopne
sbb
and
fwait
xchg
outsl
out
inc
jne
loope
pop
or
pop
lret
adc
mov
jb
outsb
enter
push
mov
out
loopne
mov
mov
add
or
repz
jne
int
loope
inc
push
stc
or
ret
pop
in
pusha
inc
push
dec
repnz
cmp
mov
xor
sub
xor
adcb
pop
rcrb
or
xchg
nop
inc
push
add
addr16
cmp
cmp
push
mov
mov
lcall
xor
ret
ds
std
sub
shrb
imul
bound
out
daa
insb
add
cmp
inc
and
xor
mov
and
ret
xchg
faddp
rcrb
xchg
inc
dec
rolb
gs
mov
clc
xchg
sbb
das
pop
and
jbe
jno
fstpl
pop
jecxz
mov
insl
push
or
call
dec
sub
or
rorl
jg
iret
mov
cli
test
es
mov
cmpsb
adc
out
add
pop
xchg
pop
and
js
pop
pop
rcrb
xchg
std
mov
cmp
imul
nop
aaa
iret
push
xor
stos
adc
fstl
das
fwait
outsl
dec
mov
jle
mov
test
pop
push
leave
xlat
add
sbb
cmp
dec
jae
inc
dec
fsts
pop
or
add
sbb
pushf
cwtl
ds
cmp
movsb
stc
mov
xor
shrl
adc
xchg
test
pop
dec
mov
push
cltd
js
sub
test
push
push
fsin
fwait
or
stos
jecxz
sti
ret
adc
scas
push
jge
dec
leave
pop
jle
add
adc
sub
inc
lret
mov
xlat
cmp
mov
ror
scas
sahf
xor
mov
mov
sbb
popf
lret
insl
lret
insb
sub
test
in
xor
mov
jg
lock
imul
movsl
sbb
pusha
mov
iret
dec
mov
inc
mov
cmpsl
xchg
ret
jbe
shrb
cmp
mov
mov
lret
mov
lahf
jne
stos
inc
xor
xchg
lcall
int3
or
mov
outsb
daa
call
jmp
div
fstpt
adc
xor
in
add
rol
leave
test
push
aaa
or
inc
lock
mov
pushf
xchg
test
and
sahf
mov
pop
insl
ss
inc
or
ret
add
loope
dec
jle
pop
into
xor
pusha
scas
out
adc
xchg
dec
frstor
push
xchg
xor
cmpsb
jge
or
mov
cmpsl
dec
adc
cld
lahf
bound
jnp
lahf
push
sub
fldcw
hlt
and
jmp
scas
dec
add
js
inc
mov
in
adc
xchg
adc
mov
lods
stos
inc
jp
imul
into
mov
mov
cmp
gs
or
inc
stos
pop
push
pop
push
or
mov
test
pop
inc
cltd
test
sub
xchg
jae
imul
mov
xchg
loopnew,pt
xchg
jnp
jecxz
and
sbb
jno
sub
js
mov
add
shlb
xor
pop
sbb
push
xor
mov
sahf
or
and
rcr
mov
in
ljmp
aad
mov
out
pop
mov
sbb
push
add
jae
adc
inc
ret
rcrb
cmpl
fisttps
testb
repnz
ficoml
test
add
push
cmp
loope
test
lret
lret
ret
loop
movsl
movsb
mov
adc
sbb
sbb
mov
mov
xlat
pop
mov
dec
sti
inc
jo
and
and
inc
imul
inc
add
fdivl
add
arpl
rclb
mov
xchg
mov
cltd
or
sub
push
cmp
add
cmp
lods
testl
lret
add
pop
cmp
mov
cwtl
and
jmp
push
loopne
dec
dec
andb
adc
lahf
and
popa
push
imul
add
stos
and
gs
scas
ds
outsb
xor
xchg
daa
sar
test
and
add
push
cmp
xor
or
jbe
xchg
cmp
cmp
clc
outsb
mov
fs
add
mov
subb
push
stc
lcall
je
mov
aas
sbb
push
shlb
sub
test
mov
xchg
cli
pop
adc
sub
sub
mull
gs
mov
or
cmp
mov
xor
and
jmp
mov
xor
mull
xchg
gs
scas
data16
xor
jmp
decl
cwtl
icebp
rcrb
jno
in
out
push
je
mov
push
pop
mov
jg
pop
mov
ds
cmp
cs
call
sbb
jbe
cmp
fwait
dec
pop
xor
fcoml
filds
jecxz
or
push
xchg
lahf
shll
pop
cmp
enter
mov
cmp
lret
pop
gs
mov
imul
cmp
mov
cmp
lret
scas
and
cmp
add
ja
inc
stc
icebp
xchg
sbb
iret
jp
mov
outsb
mov
aaa
addr16
fwait
test
das
test
ficompl
sbb
cld
and
daa
int3
mov
xlat
cmc
ret
xor
imul
fimuls
and
das
and
insb
fisttpl
xor
fmull
sub
lea
outsb
in
popa
fcoml
xchg
push
mov
sub
dec
int
lcall
shl
shlb
fnstsw
inc
daa
xchg
mov
cmp
sub
or
pop
jae
ljmp
or
pop
push
jg
adc
or
cmc
scas
cmp
shlb
push
cmp
fstl
mov
push
stc
sbb
xor
xchg
or
push
sbb
add
cs
push
cmp
lods
adc
mov
ss
out
adc
outsl
lcall
cwtl
push
jmp
imul
gs
and
fbstp
loopne
int
sub
xor
jb
js
lahf
inc
adcb
icebp
xchg
mov
in
int
jo
mov
or
pop
dec
jecxz
lods
call
sbb
mov
outsb
sbb
push
sbb
pop
xlat
pop
adc
inc
loopne
lods
mov
xor
subl
mov
jne
push
adc
aad
jg
jns
pop
icebp
mov
rorb
mov
push
adc
stos
push
adc
xchg
jbe
inc
imul
popa
mov
mov
fdivs
push
pushf
add
lahf
lds
enter
jne
mov
jge
sbb
aas
ss
lds
push
mov
stos
xchg
inc
std
xchg
hlt
lcall
mov
sbb
adc
xor
gs
add
fnstenv
pop
jb
and
xor
adc
aam
cwtl
pusha
call
adc
lret
stos
mov
or
stos
test
stc
inc
xchg
push
lcall
ljmp
rcr
iret
mov
mov
lock
ja
pop
jmp
or
ret
adc
aas
and
mov
icebp
pop
pop
pop
add
mov
xor
loopne
ja
loopne
lret
ljmp
push
sahf
pop
test
ja
scas
mov
mov
pusha
add
sub
push
lcall
roll
sub
mov
pop
jl
imul
lods
adc
mov
popf
addr16
clc
sub
push
lcall
popa
imul
dec
mov
dec
add
sbb
inc
or
jmp
ret
jl
movsb
popa
add
lods
sub
mov
shlb
insl
data16
or
jns
dec
jae
cmpl
das
ss
pop
cwtl
inc
xchg
mov
std
sti
pop
pop
andb
cmp
xor
mov
xor
cmpb
shrb
add
nop
mov
lds
addr16
in
dec
aas
jecxz
and
mov
stc
daa
clc
mov
pop
sbb
mov
or
adc
popf
adc
js
jp
daa
test
xchg
jne
and
push
mov
mov
adc
and
cli
fwait
push
les
stos
hlt
pusha
scas
fst
sbb
inc
push
push
popa
into
cmp
insb
and
dec
bound
std
mov
mov
adc
ret
dec
push
aaa
lret
cli
mov
jno
js
pop
cmp
jl
jecxz
adc
clc
sti
mov
or
xchg
inc
ret
and
dec
into
cmp
std
push
ja
push
arpl
dec
cmp
xchg
mov
mov
mov
inc
popf
aas
mov
fdivrl
jmp
mov
add
lock
mov
out
push
sbb
in
out
or
add
loopne
inc
sbb
adc
mov
insb
cld
sub
loope
inc
dec
mov
inc
sub
mov
jo
std
or
cwtl
mov
scas
fimuls
mov
clc
mov
dec
es
push
mov
pop
fucomip
cmpsl
test
out
cmp
leave
arpl
inc
loopne
decl
push
dec
stc
ja
addl
add
adc
or
cmp
xchg
push
xchg
movb
jl
fldl
test
movsl
push
pop
and
jo
bound
ret
inc
inc
int
mov
push
mov
mov
leave
out
fcmovbe
add
jae
mov
push
sub
jns
lods
xor
add
mov
pmaxub
mov
repnz
mov
and
lds
inc
imul
or
jnp
imul
dec
in
jno
mov
mov
pop
mov
sub
adc
cmp
test
xor
lds
pop
mov
aas
movsl
insb
sub
shrb
pushf
jne
and
test
sbb
jmp
scas
sbb
arpl
or
fcomps
and
xchg
rcrb
cmpsl
sahf
popa
scas
mov
mov
xor
loope
push
bound
std
jb
sbb
add
fucomip
cmp
pop
nop
add
fidivl
lods
rolb
inc
sbb
in
gs
jns
xor
shll
jle
cmove
cli
push
adc
ja
sbbb
cs
pop
pushf
lahf
ret
adc
inc
dec
outsl
push
pop
dec
jb
test
xchg
xchg
sub
inc
jo
aas
stc
xlat
sbb
enter
test
je
adc
sti
sahf
dec
push
insl
push
cmp
mov
mov
shrl
push
imul
cmpb
imul
loopne
adc
loope
inc
jl
xchg
push
mov
stos
into
add
loope
jae
sub
jle
xor
loope
imul
stos
aaa
mov
inc
adc
sahf
add
sbb
pop
xlat
adcl
push
jno
jp
aaa
addr16
and
repz
iret
scas
nop
cld
xor
insl
mov
cmc
xor
mov
inc
inc
leave
cs
adc
sarb
jno
outsb
scas
xchg
adc
into
sbbl
pop
test
jne
lcall
negl
xor
sub
cld
fistpl
xor
pop
ds
xchg
mov
cmpsb
add
pop
popa
inc
call
pop
push
aas
out
and
enter
xchg
or
push
ljmp
or
cmp
ss
addl
cmc
sub
pop
mov
enter
push
outsb
imul
mov
roll
jns
mov
xchg
mov
in
jb
cmpsl
dec
push
cli
ror
popa
dec
popa
pop
xchg
xor
lret
popf
mov
das
push
ja
mov
xchg
inc
or
dec
ljmp
xlat
rorl
mov
popf
lods
loope
aam
jmp
pop
std
pop
test
pop
xor
data16
or
push
mov
gs
mov
cmp
inc
fwait
xor
loop
js
ss
cli
loope
pop
push
push
mov
xchg
mov
fbld
movsb
mov
adc
jle
xchg
pop
or
fs
xchg
push
iret
jo
pop
mov
push
jg
mov
clc
shlb
hlt
dec
inc
and
pop
dec
xchg
inc
mov
cld
jne
sbb
aad
mov
lret
call
inc
push
xchg
jne
outsl
xchg
aam
pop
inc
out
mov
jp
jae
inc
dec
mov
std
jl
into
jp
ja
push
mov
lahf
xchg
out
jge
xchg
dec
lds
scas
leave
add
cs
cmp
in
pop
and
scas
jo
jl
mov
int3
call
mov
addr16
decb
call
add
pop
push
mov
outsb
mov
dec
fdivrl
inc
xor
test
jns
and
aaa
pop
js
icebp
mov
and
or
mov
clc
daa
dec
pop
sahf
and
cmp
test
je
mov
mov
push
mov
cmp
sub
or
pushf
pop
lret
dec
cmp
push
cmp
push
and
std
pop
cwtl
jl
shl
sub
fsts
lods
test
xor
or
mov
mov
sbb
loope
push
pop
push
dec
test
add
lea
sub
cmc
mov
pand
and
fwait
dec
popf
xor
or
jne
lcall
ficoms
stc
mov
out
cmp
lds
ret
pop
sti
xchg
fidivs
pop
psrad
mov
inc
dec
xor
xchg
loope
push
fildll
xor
shl
or
out
fwait
bound
cmp
xor
pop
scas
add
sahf
cmp
data16
fs
pop
popf
add
xor
mov
fs
inc
std
push
jle
dec
push
es
imul
jl
lock
sub
outsb
in
loop
fwait
adc
mov
js
cmp
xlat
cmp
mov
loop
cmp
dec
add
cltd
inc
ret
push
subb
mov
es
loop
orb
lret
add
mov
xor
sub
shlb
sbb
pop
nop
je
add
pop
int3
mov
dec
jg
mov
ljmp
incl
cltd
in
das
int3
popa
or
into
mov
xchg
cmp
xchg
in
in
mov
mov
mov
jl
imull
inc
and
leave
ret
dec
scas
inc
insb
pop
pop
rcrl
jecxz
mov
push
fstpl
and
pusha
mov
mov
rcr
or
mov
sbb
incb
imul
jp
xchg
cmc
lods
xchg
dec
mov
xor
jle
int3
jo
jecxz
jmp
test
sub
pop
inc
frstor
lret
and
sbb
xchg
int
out
fiaddl
add
cld
cmp
nop
int
dec
xchg
mov
icebp
xchg
sbb
xchg
and
jg
mov
dec
subb
rorl
mov
daa
and
std
in
bound
xor
icebp
or
mov
ficomps
outsl
add
jecxz
xchg
push
inc
cmovge
mov
sbb
ds
call
divb
push
cmc
or
sbb
aas
push
aad
sub
popf
loop
xchg
sti
sub
and
push
bound
pop
xor
mov
fsub
pop
jbe
ljmp
cmpsl
cmc
lcall
mov
das
mov
push
mov
inc
push
and
push
inc
pop
int
pop
xchg
xchg
adc
mov
pop
icebp
test
mov
mov
fistpll
dec
xor
mov
xchg
dec
vpsrld
fdivl
dec
pop
xor
loop
or
lods
pop
fistpl
aas
sbb
fadds
and
pusha
cmp
push
or
dec
add
insl
jmp
mov
mov
mov
insl
mov
cld
scas
in
mov
sar
mov
push
insb
jp
push
popf
mov
push
cmpb
fsubrl
daa
and
push
sti
inc
dec
ss
xchg
jne
sub
cmp
js
pop
es
leave
cmpsl
jle
and
insl
add
insb
push
inc
in
and
inc
jg
or
jl
push
rorb
dec
outsb
shll
inc
lea
adc
cmp
xor
xchg
dec
dec
jnp
pop
and
sbb
imul
cmovbe
xchg
sub
cmpsb
lods
pop
ret
nop
cld
fidivs
into
mov
cs
aam
lods
sub
xchg
sub
lods
add
mov
cmc
dec
in
xor
and
mov
pop
wrmsr
stc
mov
add
jbe
mov
rcl
inc
sarb
xlat
xchg
sbb
sub
adcl
xor
test
neg
or
fildll
gs
cmpsl
inc
in
push
repz
orl
rcll
sti
xor
lret
mov
or
aaa
push
call
sub
sbbl
or
loop
jns
xchg
clc
mov
test
fidivrs
pop
adc
xor
sbb
shlb
testb
inc
push
dec
pop
push
jae
lea
insb
mov
dec
add
inc
sub
test
icebp
cmp
int
add
ljmp
sbb
mov
les
dec
jne
push
jecxz
mov
xor
sbb
push
push
xor
dec
test
cmp
fisubrs
stos
xor
add
iret
xchg
pop
test
dec
jp
sbb
pop
lahf
ja
popa
arpl
imul
xchg
ss
inc
and
sub
push
mov
mov
add
hlt
ja
ret
dec
or
push
cmp
std
lock
clc
inc
cmp
dec
fsubl
sub
stos
in
push
addr16
out
xchg
xor
int
lds
cmp
scas
fwait
jle
movsb
push
dec
dec
xor
pop
and
fwait
push
xor
cmp
scas
or
pop
insb
clc
xchg
outsl
jb
nop
lds
call
in
mov
out
mov
hlt
adc
dec
rol
fsubrl
cwtl
insb
pop
sub
inc
xor
les
dec
or
fst
icebp
rcr
mov
and
shrb
fsubrs
sti
in
pop
jo
cmpsb
mov
pmulhuw
sti
dec
shlb
inc
sbb
xchg
sbb
pop
movb
pushf
jb
jmp
cmp
ljmp
aaa
mov
shr
cld
mov
cwtl
or
fisubrl
mov
add
pop
out
lods
nop
inc
pop
adcb
dec
hlt
push
mov
sbb
dec
enter
hlt
std
fadd
in
sub
xchg
bound
mov
shll
dec
push
xor
pop
or
sub
pop
jae
leave
sub
cmp
sub
add
jp
aas
adc
or
jns
push
ret
rcll
icebp
repz
dec
shrl
outsb
sub
in
dec
push
xor
dec
stos
adc
xchg
jp
inc
ljmp
push
loope
or
push
insb
dec
pop
cltd
inc
or
out
insb
ja
sahf
and
or
aas
push
jb
in
das
xchg
ret
arpl
movsb
leave
inc
je
or
dec
sub
lds
aas
ja
insb
lahf
or
xor
adc
jecxz
jo
fisubs
push
cli
dec
test
daa
imul
jnp
mov
popa
dec
xchg
pusha
inc
and
adc
inc
adc
cmp
dec
mov
adc
mov
lea
mov
push
lock
int
neg
shld
popf
add
lcall
xchg
push
jl
xchg
jle
fidivrl
adc
or
iret
mov
and
fnstcw
imul
nop
pusha
jge
jmp
pop
add
jo
lods
jecxz
lret
insl
sub
xchg
adc
sbb
test
cmp
test
stos
pop
xchg
pop
sbb
cmp
movsl
dec
lock
fs
int
fdivrl
xchg
cmp
lock
into
adc
xchg
add
rcrb
adc
fnsave
mov
lods
and
scas
xor
xor
call
test
jp
aaa
lock
pop
pushf
jmp
add
or
fbstp
dec
je
cmp
addr16
jnp
mov
sbb
inc
cmp
cmp
mov
movsl
push
cwtl
xor
inc
rol
outsl
ljmp
or
and
mov
or
jp
adc
fucomip
in
mov
cli
dec
outsl
or
push
xchg
adcb
mov
repz
mov
popf
lahf
hlt
test
pop
mov
cmp
push
inc
shlb
cmp
leave
xor
stos
jmp
cwtl
jp
mov
adc
mov
lds
add
adc
lods
pop
daa
fdivrs
ret
push
aas
pop
lret
sbb
add
cli
std
sti
pop
add
sbb
dec
int
jmp
pop
mov
test
push
lds
push
loop
add
mov
out
data16
adc
adc
fadds
xor
cmp
lahf
lahf
push
in
jmp
dec
outsb
lcall
dec
bound
scas
jmp
in
enter
push
pop
inc
dec
sub
arpl
es
test
jae
repnz
shlb
cmpsb
inc
stc
or
push
mov
adc
push
hlt
or
and
add
sub
fidivrs
movsl
les
mov
adc
push
dec
sbb
mov
mov
pop
add
dec
andl
or
cs
mov
rorb
cmpsl
fisubs
insb
daa
pop
stos
ret
fisttpll
push
fldcw
jbe
pop
ja
loope
inc
cmp
mov
ds
test
inc
mov
test
lahf
and
lcall
cltd
pop
inc
fwait
dec
jg
cs
pop
and
mov
pushf
clc
pop
repnz
pop
cmp
and
and
fcmovbe
bound
dec
stc
jne
sbb
dec
mov
hlt
jmp
lds
xchg
jbe
call
stos
int3
push
cli
arpl
xor
clc
rorl
inc
mov
push
or
lret
cmp
in
jmp
test
and
sub
fisttps
faddp
push
pop
data16
pop
pop
or
movsb
sarl
sarb
xlat
jbe
adc
call
dec
xor
jmp
test
rolb
cmp
mov
mov
dec
rcll
cmpsl
sbb
xchg
add
inc
arpl
shrb
std
sahf
xor
or
jg
int
divl
mov
insb
cmp
dec
xor
call
or
jns
adcb
sbb
push
faddp
cmp
cmp
jne
std
std
lods
in
lock
sbb
clc
sub
jp
dec
rorl
xor
pop
loope
scas
fwait
and
xor
cmp
js
push
jbe
fisttpll
hlt
inc
inc
sbbl
mov
gs
js
call
les
stos
inc
xchg
cltd
sbb
add
push
xchg
jp
cli
imul
mov
fstl
xor
sub
xchg
mov
sub
push
ljmp
leave
gs
in
mov
mov
stc
clc
aaa
mov
jmp
jno
jl
stc
cmp
arpl
outsb
adc
adc
add
ret
enter
fidivs
push
dec
sbb
mov
push
inc
inc
outsb
xor
repnz
subb
outsl
mov
push
insb
cmovle
inc
pop
jge
outsl
bound
cmpb
jbe
out
mov
shrl
mov
mov
repz
sahf
cmp
jecxz
mov
jg
add
push
sbb
or
dec
mov
sub
jmp
mov
les
mov
out
pop
push
into
cmpsb
arpl
imul
or
or
add
add
rorb
lods
add
pop
shrb
sbb
push
imul
sysexit
jno
or
or
hlt
mov
inc
inc
xor
and
cmp
in
bound
je
addl
rcrb
pop
roll
push
cmp
cmp
fs
or
or
arpl
xchg
add
and
mov
pop
inc
mov
or
arpl
mov
lods
popa
cli
repnz
clc
insl
pop
jns
fistpll
leave
add
cmc
sahf
fistpll
push
mov
lods
dec
aam
cld
das
cmp
int3
cmp
xchg
jmp
out
xlat
imul
outsb
xlat
jns
test
js
push
xor
xchg
stc
mov
mov
sarl
pop
mov
ljmp
gs
or
mov
sbb
test
inc
dec
mov
push
lcall
inc
mov
dec
jl
repz
sub
insb
sub
faddl
add
pop
cltd
or
stos
mov
xlat
mov
xor
xlat
add
dec
sbb
pop
inc
pop
xlat
pop
or
imul
icebp
xchg
gs
sub
cmp
cmc
xor
roll
enter
jle
and
dec
aam
test
into
xorl
cmpb
jle
shll
or
and
mov
addb
lock
mov
cmp
mov
mov
aad
ret
lret
mov
repnz
imul
and
mov
sub
xchg
cmp
movsb
ficompl
xchg
in
icebp
hlt
cltd
or
ret
add
mov
ds
push
lock
lock
pop
in
fisttpl
sub
sub
out
int3
or
sub
imul
jmp
mov
mov
xchg
cwtl
pusha
sub
std
imul
leave
jle
inc
imul
add
sbb
cmp
pusha
notb
popf
adc
fs
jle
push
daa
push
shll
pop
xor
jo
push
dec
mov
dec
pop
mov
push
out
push
sub
cmc
pushf
lret
idivl
lea
ja
push
mov
xchg
and
pop
mov
aas
adc
mov
adc
test
aam
iret
dec
out
inc
std
add
mov
inc
lret
mov
in
popa
fwait
or
icebp
cmpsl
daa
inc
dec
jno
rep
into
sub
fidivs
push
adc
iret
or
adc
in
pop
mov
jl
enter
js
jne
hlt
es
dec
ljmp
lea
icebp
loop
pop
adc
cmp
inc
xor
lods
mov
jg
mov
xchg
adc
lock
cmp
sahf
repnz
mov
idiv
mov
roll
or
lret
xchg
add
mov
repnz
cwtl
rcl
adc
mulb
cmpsl
ret
dec
xchg
mov
in
je
pop
sub
mov
mov
scas
fsubs
dec
pop
mov
xlat
lahf
cli
cwtl
addr16
pop
bound
inc
subb
push
mov
sbb
clc
and
jnp
icebp
lea
sub
stc
xor
scas
out
mov
sub
in
lcall
sub
int3
ja
inc
mov
xor
loop
imul
dec
and
xor
fwait
andl
jecxz
xchg
inc
pop
sbb
mov
mov
jp
sub
bound
pop
and
cmp
jg
mov
or
mov
sub
imulb
sti
enter
or
add
cmpsl
int
lret
push
xor
pushf
addr16
sahf
dec
loope,pt
enter
inc
dec
dec
cmp
dec
inc
fdivrs
and
iret
xlat
dec
leave
sub
mov
inc
mov
xor
je
and
ss
dec
inc
sbb
lret
mov
ja
in
lock
call
inc
jge
rcl
cmpsl
jecxz
pop
push
gs
ljmp
repz
pop
pushf
pop
and
push
mov
xor
mov
fnsave
sbb
arpl
xor
mov
mov
dec
sub
mov
push
fisubl
aad
int3
ret
ret
sub
jae
sbb
loope
shlb
int
pop
xorl
out
mov
in
sub
pop
shl
rcrb
pop
or
mov
mov
xor
in
xlat
aas
push
mov
repz
xchg
rolb
daa
inc
fidivrs
out
insl
push
adc
pop
jge
popa
or
popa
mov
push
stos
sar
std
mov
or
or
test
out
dec
scas
xchg
clc
fcomp
pop
jge
sub
daa
mov
filds
jg
ret
stos
movb
test
adc
ja
or
adc
ja
popa
mov
pop
scas
inc
dec
andl
daa
adc
lds
enter
bound
cwtl
aam
sbb
imul
jmp
xor
xchg
dec
shr
jnp
xor
lock
or
stc
stc
ss
movsb
pop
dec
aas
xlat
pusha
repz
das
mov
mov
cmovbe
xchg
add
loopne
mov
roll
negl
not
dec
scas
mov
pop
mov
cmpsb
sbb
mov
push
jae
clc
pop
in
inc
scas
jb
pop
jnp
push
shlb
sar
adc
mov
imul
repz
pop
rol
jmp
mov
xchg
inc
or
repnz
stos
push
xchg
ss
mov
aaa
adc
jge
or
lds
loop
and
adc
fimull
das
push
adc
add
std
fcmovne
xchg
call
push
fisubs
insb
inc
adc
stos
in
inc
jmp
mov
mov
sti
mov
pop
scas
sub
leave
mov
jg
in
pusha
imul
cmp
loope
jmp
mov
sub
cli
push
or
insl
out
sbb
xchg
in
mov
sbb
fisubl
orl
andl
rcrl
shll
loop
fnstsw
xchg
inc
imul
rcr
fsubl
enter
repz
inc
cld
pop
mov
lret
repnz
push
subb
xchg
lahf
sub
mov
push
cwtl
jl
adc
jecxz
sub
mov
ret
sbb
cmpsl
movsb
mov
pop
pop
jge
sbb
das
js
inc
bound
xor
sub
in
mov
scas
xor
mov
das
push
in
mov
mov
je
xchg
xor
jecxz
jnp
mov
xlat
cmp
mov
add
fs
mov
xchg
xor
sub
mov
outsl
das
loope
add
xchg
cmc
cltd
aam
test
sahf
clc
add
jae
xchg
test
inc
push
pop
in
jp
cwtl
mov
insb
sahf
push
mov
stc
jp
ja
enter
jnp
mov
icebp
jg
subl
and
mov
loop
leave
jno
aam
xchg
mov
sub
jo
mov
out
xor
and
lods
mov
add
or
fxch
inc
mov
nop
ds
dec
cmpsl
inc
jo
jmp
mov
xor
sub
mov
add
jl
aaa
in
imul
push
xchg
pop
adc
sbb
jae
rorb
sbb
sti
jne
mov
pop
out
clc
and
mov
dec
jmp
sti
mov
ds
sbb
sub
or
inc
arpl
stos
adc
mov
push
dec
and
pusha
sub
cs
es
fdivs
push
mov
adc
push
mov
mov
mov
lds
push
or
xchg
dec
push
pop
leave
mov
sbb
sub
xor
lock
sbb
pop
or
ja
imul
mov
inc
and
fcompl
rcrl
mov
jle
stc
mov
mov
cmpsl
jl
psrld
jns
dec
mov
shl
es
pop
pop
test
subb
mov
ds
dec
add
add
inc
mov
or
lahf
stc
jg
pop
sahf
clc
into
lock
mov
xor
hlt
mov
or
shll
pusha
test
xchg
bound
call
mov
cld
scas
imulb
clc
es
add
mov
in
sbb
add
push
jo
imul
inc
pop
repz
inc
addl
repnz
pop
xchg
mov
mov
lret
insb
das
std
lahf
sbb
mov
mov
jge
add
xor
mov
mov
sarb
in
imul
pop
xchg
push
addps
adc
idivb
test
lea
rcrl
xor
scas
icebp
mov
pop
jp
je
sub
sub
scas
adc
inc
push
jl
aam
mov
sbb
in
dec
inc
add
xchg
sub
mov
jo
xchg
push
inc
cmp
ret
scas
pushf
imul
fwait
fisttpl
xor
lods
ljmp
and
fwait
ja
iret
cmp
mov
xchg
imul
cmp
dec
iret
pop
lea
xchg
mov
inc
sbb
adc
out
pop
incl
jle
xor
xor
leave
jno
add
and
sbbb
jl
cmp
mov
xor
and
bound
pop
enter
xchg
mov
cmc
cld
repz
lret
jmp
jns
xlat
fs
push
rcl
dec
shr
inc
test
inc
lds
adc
shlb
push
jbe
jle
pop
out
cmp
mov
dec
movsb
or
xchg
mov
pop
and
lret
aaa
mov
sbb
addr16
or
js
xorl
leave
dec
es
lods
test
inc
jbe
mov
adc
jmp
push
js
incb
add
xor
in
lds
or
cmp
and
lods
jno
pop
fcoms
pop
je
jmp
fmul
scas
adc
loop
outsl
pusha
test
jbe
dec
cmpsl
movsl
add
push
sbb
jbe
sub
sub
adc
and
and
ret
mov
mov
pop
sbb
adc
cmp
rcrl
in
add
clc
adc
or
iret
sub
ret
push
xor
inc
mov
or
xor
inc
cld
pushf
add
jae
inc
dec
lods
push
out
sbb
loopne
hlt
sub
or
sbb
xor
sahf
subb
mov
rcrb
xchg
in
rorl
insb
and
dec
pop
inc
ret
mov
out
pop
test
fstpt
mov
stc
xchg
aam
jl
cmp
lods
frstor
sub
pop
imul
int3
ret
cmpsl
inc
adc
mov
add
lcall
push
in
dec
hlt
sub
cmc
push
jne
add
lret
mov
pop
xor
sahf
sarb
inc
ficomps
sti
mov
push
push
mov
or
add
cmpsl
inc
es
inc
std
push
sub
rcr
std
gs
lret
inc
xor
push
or
cwtl
pop
mov
mov
testb
and
hlt
je
cli
insb
push
adc
out
sub
add
lcall
dec
cltd
loop
sbbl
or
mov
ja
imul
lds
mov
gs
push
dec
xchg
je
cmp
mov
mov
lods
and
inc
mov
add
xlat
push
jns
inc
leave
jmp
or
push
jno
nop
dec
pop
pop
mov
scas
adc
mov
add
fildl
push
loopne
fucomp
int3
into
sbb
add
and
clc
fmull
shl
mov
sub
dec
mov
adc
scas
jb
jae
scas
in
int3
mov
or
adc
xor
and
sarl
in
pop
push
cmp
loop
jg
aaa
cmpsl
shlb
hlt
cld
and
mov
dec
bound
jno
idiv
inc
gs
inc
xlat
jmp
add
lahf
shrl
sbb
sub
arpl
mov
mov
cwtl
addr16
xor
out
xchg
jecxz
jecxz
lcall
lret
xchg
hlt
shl
and
mov
stos
xchg
add
xor
add
add
dec
cmp
ret
push
lret
sahf
cmpsb
icebp
aad
int3
pop
xor
jle
xchg
test
jl
popa
adc
jns
shrb
mov
push
mov
jnp
loop
push
fucomip
andl
aad
pop
fldl
dec
push
lret
repz
cmp
and
mov
mov
inc
xchg
int3
mov
xchg
and
xlat
jae
rcll
loope
inc
loope
dec
in
sahf
sub
mov
test
cmp
mov
mov
sbbb
jg
les
jne
imul
sub
jle
xchg
aam
ljmp
in
cmp
xchg
pop
cmpsl
out
scas
fdivrs
lret
imul
shlb
aad
and
pop
fwait
gs
pop
xchg
fs
lret
adc
sub
imul
es
out
cmp
jmp
and
iret
adc
je
xor
xor
jnp
rolb
inc
jno
cmp
mov
fdivrl
fxch
jbe
pop
or
mov
dec
sbb
mov
enter
push
and
pop
or
repz
ret
cld
dec
cmpsl
lods
jmp
lcall
jecxz
and
andb
inc
cmp
insl
fmuls
xor
jns
aam
pusha
clc
push
int3
movsl
cmp
pcmpeqd
outsl
mov
dec
lret
repz
push
stos
loopne
jle
sbb
pop
push
add
jno
mov
mov
pop
fildl
inc
push
jo
sbb
pop
lret
xchg
pop
cld
js
adc
jnp
xor
or
xchg
mov
decb
or
jne
xchg
cmpsb
dec
inc
mov
dec
movsl
mov
lret
data16
cmpsl
ljmp
mov
rclb
lcall
movsb
fs
js
shrb
ja
sbb
dec
fstps
sarl
jle
ljmp
xchg
push
out
jg
outsl
mov
xchg
js
inc
pop
inc
int
pop
jmp
iret
sbb
bound
lahf
xchg
loope
hlt
enter
repnz
mov
xchg
inc
test
mov
mov
push
or
sti
mov
xchg
mov
cld
jge
pop
xchg
lea
push
fldl
pop
pop
out
mov
cltd
pop
stos
and
mov
std
push
ljmp
aas
sbb
mov
enter
cmp
insb
xor
adc
imul
jmp
arpl
sub
sub
jne
sub
sbb
in
rcl
movsl
xor
loop
daa
mov
lret
pop
pop
enter
pusha
ret
call
xchg
test
xor
xor
xor
mov
mov
push
xchg
mov
pop
dec
in
push
lret
ljmp
adc
aad
mov
mov
jns
gs
mov
int
mov
mov
das
cmpsl
nop
adc
jns
ds
sbb
scas
push
aad
xchg
das
jae
sub
clc
mov
jnp
movsb
outsb
imul
and
fcompl
lock
leave
hlt
test
dec
jp
fwait
lahf
and
xchg
push
adc
les
js
loopne
je
out
loopne
cmp
xor
add
fwait
pop
xor
call
lret
inc
scas
sti
add
leave
cmpsl
sub
rcll
push
call
fcoml
mov
jmp
ljmp
fdivrl
push
scas
andb
mov
xor
jl
hlt
sub
fsubrp
pop
and
call
mov
sub
dec
cmp
ret
mov
imul
and
fildl
sbb
sbb
xor
pop
push
rolb
lahf
stos
rorl
mov
inc
cmp
add
out
icebp
jb
loop
jbe
loopne
lahf
lds
jb
sarb
add
stos
cmp
jmp
cmp
pop
aam
dec
mov
ret
xor
mov
addr16
sbbl
test
mov
jmp
insb
or
in
mov
ljmp
mov
adc
ficoms
movsb
jmp
rclb
es
inc
pop
mov
repz
cli
iret
or
sub
xorl
adc
aaa
xor
fstps
fsubl
lret
out
xor
push
insl
mov
cwtl
jmp
lcall
adc
out
repz
xor
aas
dec
jmp
adc
inc
aam
repz
aaa
mov
inc
push
fs
call
xor
dec
xlat
lret
out
adc
cmp
mov
dec
cmp
in
jecxz
mov
shll
dec
and
outsb
mov
popf
leave
movb
adc
movsb
xor
mov
subl
or
jl
adc
jnp
insl
popa
testl
or
pusha
jge
andb
shlb
cld
bound
sarb
les
sahf
mov
std
add
insb
repz
jle
mov
das
addl
jae
dec
mov
sbb
sub
add
call
and
xor
jno
cld
stos
cmp
ret
mov
inc
jno
test
iret
in
std
adc
mov
out
andl
sbb
out
dec
pop
nop
sahf
fs
cmp
jp
test
das
xchg
repz
sub
aaa
ja
adc
addl
inc
dec
push
lock
pop
mov
inc
movsb
cmp
mov
xchg
ret
jl
or
cmp
adc
in
xchg
or
ja
or
or
jg
enter
mov
pop
push
mov
pop
ret
xchg
adc
xor
icebp
pop
push
loopne
mov
mov
and
cmp
mov
push
mov
and
sub
dec
mov
and
cmc
shlb
sub
adc
sbb
sar
aas
mov
jp
add
into
and
pop
cmpsb
pop
xor
mov
dec
leave
dec
xor
jns
pop
mov
inc
adc
pop
and
push
and
repz
lret
cmp
mov
leave
ja
cld
mov
fcompl
mov
pushf
dec
subb
adc
lods
sub
aam
xor
mov
dec
lock
sub
xchg
scas
sub
adc
add
cmpsl
pop
mov
jb
mov
dec
cs
dec
int3
and
xchg
stos
xor
mov
sahf
lret
mov
ret
data16
ret
roll
sub
lods
pop
jno
loope
pop
icebp
ja
push
and
shr
scas
mov
sub
xor
or
and
adc
ror
daa
jno
aam
bound
cwtl
adc
hlt
ja
lock
jp
cltd
push
push
or
lahf
xchg
lahf
mov
cli
bound
push
test
int3
push
xchg
stos
fs
bound
inc
in
adc
pop
pushf
mov
jae
daa
pop
movsl
adc
jl
lea
sub
xor
push
jns
mov
aam
push
out
pop
inc
sub
inc
adc
stc
ljmp
jae
xor
sbb
les
inc
jl
mov
daa
gs
push
mov
xor
jmp
cmp
sbb
fdivrs
aas
pop
cmp
cmc
push
lods
test
add
iret
dec
inc
lods
cli
or
movsb
lcall
cmpsb
lock
adc
loopne
add
and
lcall
loopne
ljmp
cmp
mov
outsl
lahf
in
sub
arpl
sahf
dec
fldl
imul
into
or
mov
aam
and
mov
adc
call
iret
outsb
sbb
sbb
sbb
pusha
test
and
push
inc
dec
cmp
iret
pop
mov
cmp
shl
or
cmovnp
repnz
pop
popa
addr16
lea
insb
dec
xor
sahf
sub
adc
paddq
push
lret
xchg
ljmp
out
lds
in
mov
jp
pop
inc
mov
imul
shl
dec
out
adc
cmp
push
push
mov
and
xchg
sub
mov
test
lock
mov
jge
sbbb
cmp
adc
into
out
js
lods
mov
push
pop
addr16
insb
test
rcrb
jne
adc
dec
fstpl
repz
cwtl
cs
sbb
jp
in
hlt
rcr
fwait
cltd
xor
dec
pop
ficoms
int
fs
mov
add
and
push
jb
pop
push
std
mov
jbe
push
mov
xor
pop
pushf
jne
bound
push
adc
xor
in
in
lods
sub
mov
repnz
dec
jo
out
pop
or
arpl
daa
lahf
lret
inc
mov
sub
dec
hlt
dec
out
fs
popf
jmp
and
in
pusha
cmp
push
sbb
dec
movsl
ja
push
jmp
dec
rcrb
lcall
nop
mov
push
or
rcrl
pop
or
mov
add
jns
faddp
jb
sub
xor
repnz
dec
sbb
dec
jle
mov
daa
mov
mov
repz
inc
or
mov
movsl
adc
out
adc
insb
inc
mov
lds
jg
add
ret
sbb
outsb
negl
test
out
loop
into
pop
cmpsb
cmp
dec
and
and
mov
add
add
xchg
outsl
xchg
jp
pusha
pop
ficoml
lret
mov
mov
jmp
test
rcr
jb
pop
jmp
ss
push
test
scas
mov
xchg
nop
rcll
out
fsubs
inc
xchg
out
orb
insb
sub
xorl
jmp
pop
inc
push
popf
fdiv
ret
fstpt
xor
mov
jns
loope
movsb
mov
pushf
cmp
xchg
pop
mov
or
inc
arpl
test
cmp
sub
push
xor
xor
enter
lcall
shlb
dec
xor
dec
daa
jmp
xchg
xchg
sbb
lahf
fsubr
mov
test
fwait
inc
inc
hlt
adc
cmp
ret
lret
andb
mov
lcall
xor
sbb
pop
test
jbe
add
decl
add
scas
sub
mov
adc
adc
xchg
mov
mull
stos
inc
mov
mov
and
aas
xor
pusha
lds
dec
scas
dec
inc
popf
stc
push
cmpsb
push
into
fmul
xor
icebp
and
dec
sub
mov
loope
movsb
xchg
xor
je
ljmp
jge
stos
std
jle
andl
push
mov
dec
movsb
mov
adc
aam
into
and
aam
popa
std
or
xchg
inc
pop
aad
sub
push
jns
cmpsl
js
jle
and
xchg
loop
fiaddl
push
push
lock
inc
xchg
cli
jmp
xor
pop
lock
fcomps
pusha
push
adc
xor
push
pop
xchg
in
add
inc
test
cmovnp
test
pop
and
out
movsl
imulb
lcall
pop
fisttpll
or
jb
sub
bound
enter
fsubr
jp
dec
dec
js
xchg
sbb
xchg
push
imulb
jae
xchg
cltd
sub
sbb
aaa
xor
pop
incb
push
mov
adc
aaa
mov
pop
add
subb
int3
or
mov
sub
jo
sti
aaa
xchg
adc
fisttpl
int3
in
jno
xchg
jge
inc
mov
dec
insb
mov
scas
bound
jecxz
lea
sbb
cli
scas
sub
cmp
repnz
sbb
or
pop
xor
lret
sub
dec
lods
inc
pushf
dec
jne
pop
orb
dec
dec
sub
sub
mov
jno
push
ds
fsubrs
cwtl
xchg
jge
call
imul
popf
lods
xor
cmp
jg
jo
imul
enter
cmp
mov
mov
test
pop
pop
dec
lods
test
mov
mov
loope
push
push
dec
mov
lods
jne
fwait
push
xchg
or
mov
cltd
mov
mov
pop
and
fiaddl
in
orl
mov
arpl
sar
rcrl
and
add
aaa
mov
xor
adc
inc
add
cmp
and
cltd
mov
js
inc
jmp
stos
sbb
push
and
sub
jne
andb
dec
dec
xchg
add
hlt
pushf
mov
leave
push
pop
lds
cmp
lret
insb
mov
sbb
lds
dec
rcrl
dec
push
in
and
test
mov
sub
sub
sbb
sbb
lret
add
sbb
inc
cli
dec
jge
fcmovbe
popa
xchg
cltd
sarl
shl
jb
jne
jecxz
repz
push
fs
mov
nop
sahf
call
mov
test
iret
mov
in
andb
sub
mov
adc
clc
jl,pn
stc
jno
lret
cmpsb
pop
sub
outsb
call
mov
mov
push
jo
pop
xor
mov
cmp
cmp
in
push
cmp
iret
add
repz
stc
pop
dec
ret
push
sti
int3
xor
xor
iret
cld
jle
test
xor
test
jo
push
jecxz
jns
mov
push
leave
dec
pusha
sbb
cmp
sbb
jnp
dec
mov
cmpsb
mov
mov
out
sti
or
or
mov
jne
xchg
mov
cli
aad
repnz
lahf
xor
jns
cmp
call
adc
push
cmpsl
xor
stos
int
and
xlat
popa
sub
lahf
lret
jne
popf
pop
fsubs
jb
mov
jno
cli
and
fisubrs
sbb
push
lahf
sbb
icebp
dec
dec
call
rcrb
mov
inc
jecxz
sub
sbb
mov
and
mov
xor
sub
xchg
adc
icebp
inc
lods
push
jl
push
mov
xchg
sbb
addr16
mov
mul
dec
es
loopne
add
cmpsb
insb
mov
or
mov
fdivr
push
push
aad
add
adc
and
cmp
stos
sub
dec
cwtl
jns
imul
call
mov
in
lcall
int
sub
push
lea
xchg
cmp
insl
lds
xor
push
mov
dec
jl
cmp
add
pop
and
jne
mov
icebp
rol
aas
fptan
addr16
adc
xor
ja
hlt
getsec
push
cmpsb
xor
fnstcw
sti
adc
test
push
in
mov
aas
sub
and
sahf
leave
xor
dec
jns
jo
push
sbb
shlb
imul
pop
mov
arpl
and
pop
mov
test
adc
stos
loop
lret
gs
sub
sti
jl
jbe
mov
dec
fsubs
sub
popf
gs
mov
outsb
cmp
cmp
fsincos
out
mov
xchg
les
and
inc
xlat
push
cld
lods
xor
adc
ljmp
and
addb
cmp
mov
or
cmp
pusha
sbb
out
fwait
and
dec
push
shrl
adc
aad
sub
pop
fstps
pop
cltd
or
mov
lods
ljmpw
xor
and
sbb
cmp
outsl
sub
cmp
pop
push
sarb
in
jg
sbb
inc
aas
cmp
mov
cmpsb
jb
or
aad
mov
push
addr16
scas
jnp
fisubs
mov
jl
mov
std
xor
lods
mov
and
fdivp
addr16
pop
pop
lret
dec
xor
pop
data16
je
xlat
sub
lcall
lods
mov
jno
hlt
sub
sarl
jno
outsl
xchg
xchg
out
out
data16
pop
leave
pop
subb
popa
push
inc
mov
mov
lock
and
mov
pop
stos
add
jl
dec
outsl
mov
pop
mov
icebp
cmpsb
rcrl
mov
sub
mov
jne
push
mov
lods
ljmp
mov
lea
shlb
mov
lahf
jb
test
shlb
add
or
jp
ljmp
int
adc
push
cmp
scas
mul
inc
lcall
outsb
data16
adc
sbb
aam
loope
cld
xlat
in
out
dec
repz
insb
jg
daa
test
aam
inc
pusha
rcrl
jle
je
xchg
jp
test
rol
outsl
inc
loopne
sbb
jecxz
mov
fistps
fisttpl
test
sub
and
rolb
leave
insl
into
add
or
inc
jp
daa
test
rorb
cmp
rorb
inc
fisttpll
stos
xchg
insl
sbb
dec
pop
dec
inc
pushl
mov
jecxz
or
mov
int3
fidivrs
push
push
push
test
and
mov
mov
push
xchg
mov
mov
test
cmp
inc
jge
nop
mov
xchg
lods
iret
jmp
xchg
xchg
in
pushf
xchg
shlb
pop
js
and
xchg
adcb
cs
push
je
mov
rcr
ficomps
ja
fs
cmp
pop
dec
lods
cmp
cwtl
or
lock
repnz
dec
add
jle
stos
test
popa
out
cwtl
lahf
lcall
and
rcl
xchg
stos
xor
inc
xor
sub
repz
daa
sub
aad
sub
inc
gs
ret
pop
jo
adc
dec
fwait
stc
lods
pop
push
mov
mov
adc
in
ret
xor
aaa
xchg
std
pop
negl
pushf
enter
sub
lea
iret
push
cmpb
jl
in
in
pop
imul
jns
jl
fistpll
add
in
sarb
add
jle
scas
test
rclb
push
adc
cmp
xchg
enter
outsl
mov
adc
push
repz
pop
jb
dec
and
shlb
outsl
dec
mov
cld
mov
pop
mov
mov
pop
mov
push
jle
inc
cmp
or
out
stc
adc
dec
mov
xchg
rorl
mov
lcall
jecxz
mov
imull
sub
insl
stc
mov
jb
in
jns
mov
pop
sub
ret
adcl
aas
push
sti
lods
test
dec
push
mov
dec
jge
das
les
popf
cmp
jge
pop
xor
sar
leave
dec
fbld
jmp
mov
pop
mov
stos
scas
add
and
jl
adc
inc
inc
xchg
gs
imul
cmp
fstl
int3
and
and
push
add
dec
lods
or
fs
dec
adc
jmp
push
mov
pop
in
fidivrl
in
insb
test
sbb
lcall
fcoms
push
gs
jge
aad
pop
dec
xchg
popf
jmp
movsl
lods
imul
or
call
add
inc
stos
insb
out
xor
es
mov
icebp
es
push
and
ss
movsb
jne
and
adc
push
xchg
adc
xchg
pop
jp
cmp
sub
insb
add
test
icebp
push
rcr
xchg
push
imul
mov
ret
test
in
push
jb
sbb
sar
int3
adc
pop
sub
mov
les
pop
aaa
enter
popf
in
mov
push
pop
jg
mov
jnp
lea
add
shl
lahf
lcall
outsl
sbbl
cmp
mov
xor
mov
or
cmpb
popf
fnstenv
dec
fwait
mov
dec
jg
repz
jl
pusha
jge
stos
mov
ja
jb
inc
jbe
mov
shll
sbb
mov
cmpsb
loop
dec
ret
jl
cli
mov
cmp
xchg
dec
mov
pusha
inc
push
data16
adc
jae
ds
xor
fcomp
movsl
sub
mov
sbb
mov
xchg
lods
xchg
mov
test
add
daa
arpl
xchg
movsb
outsl
ss
mov
mov
lods
jnp
andb
mov
or
jl
sbb
sub
pop
aas
mov
jge
jp
mov
pop
or
sbb
inc
sub
xor
mov
jbe
adc
mov
addl
imul
popf
lret
inc
xlat
nop
pop
xor
gs
sbbb
mov
sub
xor
mov
push
adc
js
xor
dec
out
mov
movsb
sub
inc
sub
rep
or
and
sbb
inc
and
shll
lahf
dec
cmp
test
movsl
aam
xor
repz
push
inc
lods
imul
test
adc
cmc
adc
ffreep
add
scas
jl
loopne
inc
lcall
push
xlat
std
dec
jo
cwtl
xor
cmp
pop
jae
xchg
inc
xchg
pushf
cmp
and
test
pop
aam
and
push
xchg
rolb
mov
sub
jg
jae
push
mull
or
cmp
pop
inc
das
stos
dec
mov
lods
leave
dec
stos
les
lods
inc
xchg
rol
mov
cmpsl
pop
in
roll
sbbl
rorb
push
stos
and
aaa
mov
test
cmp
adc
scas
addl
test
fsubs
shrb
out
push
sub
pop
add
jmp
mov
cmpsb
mov
dec
mov
xchg
cmp
faddl
and
xchg
ljmp
movsl
inc
xor
xor
inc
xor
int3
mov
cmpl
pop
mov
xacquire
jne
sbb
out
cmc
lock
mov
mov
inc
xchg
and
and
mov
rcrb
loope
pusha
addr16
nop
lcall
cmpb
jmp
lcall
dec
incb
push
mov
wbinvd
dec
fnsave
mov
cmp
jmp
sub
in
gs
push
lods
xchg
jbe
inc
popa
add
data16
shr
rclb
mov
std
inc
push
mov
sarb
imul
daa
insl
pop
pop
nop
rep
loopne
inc
mov
inc
xchg
mov
test
mov
sub
lret
xor
daa
lds
cmp
mov
shrb
popa
test
mov
pop
clc
add
ja
sbb
jmp
push
js
jmp
mov
outsb
aad
and
hlt
lret
inc
dec
pop
cmpsl
push
fcompp
scas
xchg
fdiv
decb
pop
xchg
sar
shl
pop
iret
gs
lods
loopne
jnp
lahf
xchg
mov
and
arpl
call
sub
dec
jmp
sbb
xor
inc
sbb
cmpsl
adc
js
jnp
adc
lock
mov
ret
inc
mulb
and
divl
push
lret
mov
xchg
int
push
or
and
imul
ss
cmpsl
jl
pop
fucomp
rcr
arpl
xchg
sub
add
addr16
pop
mov
sub
push
or
test
sti
lock
mov
and
cmp
loope
pop
xchg
or
mov
xor
outsl
test
imul
daa
fnstenv
xchg
mov
sbb
add
fadd
test
lock
rcrb
pop
lret
stc
movsl
femms
adc
fsubl
mov
mov
jo
or
or
jb
lock
data16
fisubrs
sub
mul
push
cmp
cld
leave
insb
scas
dec
leave
ret
push
rorl
xchg
dec
ds
cmpsl
pop
cltd
mov
popf
out
cmp
dec
xor
frstor
xchg
adcl
es
mulb
pop
cmp
mov
data16
mov
push
mov
jae
dec
arpl
xlat
in
mov
sbb
fcomi
xor
add
test
jb
add
add
in
in
std
fistps
aaa
mov
mov
jl
call
lret
inc
loope
jne
or
in
imul
mov
xor
adc
inc
mov
fiadds
cmp
adc
jmp
inc
inc
out
lods
xchg
cwtl
mov
movsb
pushf
cmovle
lds
mov
push
pop
pushf
pop
test
movsb
hlt
adc
or
aas
jo
mov
mov
push
rcll
jge
mov
jne
inc
bnd
cmpb
mov
adc
cwtl
mov
in
cmpsb
mov
sbb
dec
out
mov
jno
sub
lock
add
xchg
push
sbb
ficompl
enter
jp
mov
addr16
pop
and
aas
mov
stos
add
jle
push
pop
pop
rolb
sub
scas
in
or
loopne
mov
lret
clc
pusha
enter
lds
ljmp
or
aaa
dec
shll
and
aas
and
push
out
lret
mov
test
daa
in
popf
in
mov
and
aam
push
int3
insl
fsubs
out
andb
push
inc
pop
push
pop
ss
inc
pop
iret
pop
pop
movsl
in
or
ljmp
lods
adc
insl
mov
pop
std
pop
popf
dec
mov
jmp
jnp
push
popf
cmc
sti
es
rolb
lods
inc
cmpsl
inc
xor
mov
std
out
fsubr
in
jge
push
xchg
out
or
hlt
xor
pop
pop
dec
cltd
add
popf
enter
in
shll
and
adc
ds
jg
cmp
fiadds
in
insl
fs
or
xor
test
inc
pop
jg
cld
add
push
sbb
test
sub
sub
shlb
hlt
add
sbb
adc
cmp
dec
insb
add
jne
inc
sbb
rolb
pop
pop
jle
pushf
dec
rorb
dec
cli
mov
add
sbb
mov
nop
mov
push
fwait
sub
xlat
xor
cmp
push
xchg
mov
inc
out
or
std
popa
int3
out
addb
xor
cmp
pop
inc
rol
xchg
js
outsl
data16
xchg
dec
add
mov
push
push
ja
ret
std
add
pushl
nop
mov
repnz
popa
adc
adc
and
xor
leave
out
fdivs
loop
xchg
shrb
push
xorb
outsl
stos
insl
jo
sbb
fisttpl
iret
dec
negb
jo
push
aas
in
std
push
adc
jb
rorl
push
les
jo
push
test
cmp
or
cmpsl
jp
arpl
sbb
sub
notl
lods
xchg
imul
inc
jecxz
loope
jecxz
pop
daa
cmp
dec
ret
repz
mov
xchg
je
dec
int3
pop
daa
fisttpll
mov
jge
xchg
xchg
aas
fidivrl
jnp
ficoml
stos
push
iret
cmp
outsl
mov
and
mov
mov
lahf
out
into
jecxz
fs
sbb
scas
int3
int
xchg
loop
push
mov
xchg
jecxz
fucom
lods
out
inc
popf
data16
adc
rcr
insl
or
rcrb
mov
lock
out
inc
int3
dec
mov
mov
pop
test
out
push
jo
mov
fbstp
aaa
sahf
das
daa
dec
jg
and
lods
int
inc
andb
jns
add
push
xchg
jb
mov
adc
lcall
sub
mov
dec
cmp
mov
stos
dec
xchg
mull
in
pop
stc
add
pop
xchg
sub
loop
ds
add
out
popl
stos
je
cmc
and
mov
sbb
pushf
pop
out
fsubrp
leave
and
lcall
int
mov
pop
jns
mov
pop
xchg
dec
fdivrs
in
enter
jbe
inc
iret
mov
mov
xchg
ljmp
jns
mov
mov
or
out
xor
gs
ds
in
lahf
dec
stos
or
sub
ret
cmp
iret
mov
dec
xor
inc
push
and
jbe
adc
dec
mov
dec
ficoms
mov
add
iret
jns
push
mov
sti
xor
leave
frstor
fst
movsl
nop
rcrb
sti
xchg
jb
xchg
lret
push
add
out
jp
add
push
lea
pusha
mul
repnz
and
sahf
xor
jne
stc
mov
add
add
loop
mov
imul
stos
movsb
mov
in
pop
xor
sub
shrb
ds
cli
ficoms
mov
dec
nop
outsl
aaa
mov
lock
dec
roll
xchg
enter
enter
xlat
idiv
rcll
xchg
in
or
test
fsubrs
fucomi
adc
cmpsb
sahf
loope
aaa
sub
xor
xchg
jns
jae
sub
pop
dec
fxch
cld
bound
sbb
jp
jb
dec
sbb
test
mov
push
ja
fwait
dec
stos
jns
mov
fcmove
lods
fcoms
adc
push
addr16
dec
jb
adc
jp
pop
data16
mov
iret
cmp
loope
movsb
sub
xor
cmp
fidivs
in
or
mov
test
and
pop
sti
mov
mov
jmp
sbb
push
bound
ret
out
jnp
fxch
lcall
dec
xor
cmp
sbb
mov
cmpsb
xchg
jo
icebp
cmp
scas
aaa
je
adc
mov
lods
nop
inc
dec
mov
push
mov
test
mov
xchg
sti
jb
cli
mov
addr16
iret
nop
js
je
pop
mov
repnz
pop
js
pop
and
int
fstl
jne
shll
rcrb
and
icebp
pushaw
ror
mov
je,pt
cmpl
stc
repnz
sbb
mov
xchg
imul
or
icebp
push
mov
jbe
mov
jo
cmpl
inc
add
mov
xchg
ss
or
add
cli
xchg
mov
push
test
lret
js
xchg
adc
add
add
jae,pt
insb
xor
int
jle
push
pop
add
fiaddl
mov
ja
out
xchg
mov
cwtl
fwait
ja
pop
loopne
shrb
fwait
add
lock
std
fiaddl
cld
arpl
mov
imul
jns
push
adc
insb
cmc
test
dec
xor
mov
jg
xchg
push
mov
jae
pop
in
sbb
xor
les
les
test
sub
add
int
ror
mov
and
or
je
lret
stos
jae
xor
xchg
push
pop
pushf
jo
movb
loope
test
adc
lcall
movsl
pop
into
pop
push
aas
addb
cmp
mov
data16
jp
cmc
je
inc
xchg
pop
pop
mov
push
or
and
divl
mov
sub
or
and
imul
ljmp
repz
ss
int
stos
mov
sub
add
jecxz
ds
push
dec
or
ret
jle
arpl
loop
rcll
shll
dec
shlb
or
push
mov
jne
test
mov
repnz
jns
test
or
sbb
push
cmpsl
add
pop
mov
pop
aad
in
shl
hlt
mov
inc
mov
jno
movsl
sub
sahf
jbe
dec
lcall
mov
into
dec
fadds
xor
mov
xor
bnd
push
push
xchg
jmp
aas
repz
in
jno
and
jp
jne
ljmp
lods
jl
sub
jecxz
rorb
es
adc
sub
jb
and
call
pop
sub
mov
push
lcall
pushf
mov
inc
xchg
lock
lahf
fcompl
dec
es
stos
je
movb
dec
xor
push
xlat
ficoms
aaa
mov
adc
movsb
add
aad
cmp
add
insb
fcoml
lods
and
mov
jae
iret
sub
mov
mov
adc
stc
jnp
into
xchg
imul
repz
data16
test
arpl
out
jmp
lock
inc
and
or
out
xlat
push
ljmp
stc
arpl
inc
ret
ficoml
add
jb
test
rorb
in
mov
int3
lds
mov
cmovge
inc
cmpsb
popa
lahf
call
dec
add
add
loopne
xor
addr16
mov
or
movsb
dec
addr16
mov
push
icebp
pop
mov
sti
adcl
mov
imul
add
daa
outsb
dec
and
xchg
sub
loopne
fcompl
in
loopne
setne
cmpsb
inc
mov
ret
inc
xchg
loop
repnz
mov
or
or
jno
jge
out
pop
push
or
jmp
xor
jae
dec
xchg
icebp
mov
push
test
icebp
pushf
lds
into
dec
jmp
cmp
push
lret
add
scas
enter
out
es
mov
cmp
sti
add
sti
cmpb
insb
inc
fiaddl
ds
je
jecxz
loopne
pop
or
add
lds
xchg
add
sbb
xor
fbld
cmpl
out
rolb
bt
aas
mov
mov
mov
or
repz
addl
ja
push
test
repnz
xorb
mov
loopne
fiadds
inc
ret
aad
popa
or
scas
xchg
push
push
in
in
cmp
push
push
arpl
mov
mov
mov
leave
mov
dec
insb
add
push
jo
sub
inc
dec
imul
imulb
repnz
call
in
daa
icebp
mov
ret
xor
rcrl
fiadds
mov
ja
pop
xor
mov
lods
dec
mov
mov
xchg
mov
cmpsl
fsubr
sub
and
insb
lahf
jae
mov
mov
pop
jle
pop
aad
xchg
insl
dec
mov
pop
push
cmp
andl
jecxz
mov
push
sbb
cmp
mov
add
push
inc
or
xor
cmp
add
mov
sbb
jbe
xor
mov
xchg
pop
inc
adc
xchg
stos
and
sbb
mov
add
pop
pop
dec
push
scas
mov
mov
imul
lock
mov
dec
jae
orb
jns
mov
adc
xchg
sti
xchg
mov
out
sarb
pop
aas
loopne
imul
mov
add
or
xchg
xlat
push
jb
fisubrl
lods
outsb
mov
fstps
shrb
out
or
add
inc
mov
xchg
mov
ds
or
dec
sub
into
mov
adc
and
cltd
pop
fidivl
cmc
mov
dec
cmpsb
imul
sahf
adc
cmc
adc
mov
scas
insb
mov
aaa
adcb
push
jo
pop
xor
insl
mov
sbb
lcall
xor
sub
push
rol
mul
xchg
arpl
mov
ljmp
testb
fnstenv
push
arpl
or
sub
imul
out
jmp
daa
outsl
jb
xchg
add
adc
push
sbb
dec
mov
push
mov
cmpsb
mov
inc
test
mov
push
add
or
pop
add
inc
out
in
fcomip
mov
popf
les
mov
or
add
xchg
dec
in
xor
jmp
call
fmull
repnz
aas
es
nop
enter
xchg
popf
cmp
int
and
sub
jg
and
mov
sarl
jo
int
jmp
ja
xor
dec
jbe
stc
loope
lods
xor
xchg
call
mov
xchg
je
das
aaa
add
sbb
cwtl
xchg
icebp
sub
enter
dec
enter
jge
xchg
or
aas
adc
pop
push
jae
inc
add
and
cmp
dec
jae
push
dec
jns
pusha
and
arpl
jno
xchg
jl
jp
mov
adc
cwtl
fiadds
mov
loopne,pt
dec
and
idivl
in
test
cmp
add
imull
adc
push
and
into
dec
fs
in
inc
rolb
fildl
shrb
cwtl
and
jbe
and
std
ret
in
mov
and
cld
test
push
hlt
mov
popf
mov
in
pop
fidivrs
adc
nopl
shl
add
mov
int
in
sub
addr16
mov
fwait
pop
jecxz
pop
out
push
sti
xchg
xorl
outsl
sbb
dec
aas
rcl
xchg
into
xchg
lcall
repz
mov
mov
dec
or
leave
xor
xor
dec
aad
imul
out
test
mov
in
push
xor
inc
adc
and
mov
in
cmpl
xchg
sbb
scas
testb
call
jl
jo
rcrl
inc
mov
test
sbb
lods
push
add
lock
push
push
pop
movl
test
dec
stc
das
adc
mov
inc
cmpsl
movsl
rorl
or
inc
jmp
mov
sbb
and
bound
mov
lods
ret
mov
stos
and
jne
imul
js
mov
mov
fstpt
aam
ljmp
dec
mov
push
mov
iret
mov
adc
and
mov
or
ficompl
int3
notb
iret
sub
sub
ror
xor
push
outsl
icebp
outsl
arpl
add
or
fldenv
popf
cmp
and
sti
mov
adcl
or
or
insb
fsubl
cmp
filds
inc
and
addr16
dec
mov
fwait
sub
dec
std
push
jp
ror
push
inc
and
add
add
cmp
sahf
lcall
cld
xchg
jp
jmp
lcall
sub
fbstp
pushf
cmovo
in
fs
dec
pop
or
add
and
lcall
sub
mov
aad
sbb
mov
stos
nop
add
scas
test
fdivl
sub
out
adc
ds
mov
sti
in
mov
iret
sub
loopne
sbb
mov
sub
icebp
pusha
push
mov
push
je
dec
fisubrl
outsl
pop
jmp
frstor
jb
jnp
int3
call
xor
clc
nop
js
mov
and
fidivrs
loope
or
andb
jns
add
xchg
cld
xchg
mov
insl
xchg
inc
das
mov
or
repnz
inc
enter
push
xor
das
dec
jae
xchg
and
cmp
sbb
jb
sbbb
mov
jl
lret
mov
add
push
xor
cmc
outsl
xchg
aam
and
push
daa
mov
js
add
adc
test
or
lock
icebp
mov
popl
les
adc
mov
imull
es
les
add
sub
cmpsb
lret
sbb
pop
in
jecxz
lahf
mov
inc
sarb
jb
add
adc
sahf
fstpt
mov
xchg
gs
dec
xchg
into
es
hlt
mov
mov
and
cmpsb
mov
in
sbb
lret
or
hlt
lods
js
sub
mov
xor
pop
ds
sbb
neg
push
inc
xor
lock
sarl
js
stos
mov
data16
add
mov
pop
mov
push
pop
push
jo
mov
test
mov
mov
stos
repz
sahf
push
dec
es
movsb
sbb
imul
imul
paddq
jl
movsl
adc
or
inc
pop
pusha
pop
subl
jl
mov
in
mov
xchg
inc
repz
mov
in
mov
sub
int
mov
fnstenv
int
faddl
ret
dec
cltd
pop
popa
inc
pop
stos
sub
and
jne
adc
cmp
lret
and
inc
pop
pop
int3
fmul
mov
das
int3
mov
xchg
insb
sahf
in
test
and
repnz
jbe
xor
pop
xlat
dec
push
sbb
lods
dec
icebp
cmp
cmp
xchg
nop
xor
sub
mov
jmp
inc
nop
inc
leave
cmp
xor
dec
sub
sbb
jnp
popa
je
xchg
mov
xchg
sarl
sahf
fwait
call
loop
add
or
sub
int3
int
and
enter
push
repnz
push
sub
add
ret
jp
adc
in
add
xor
push
out
or
xchg
pusha
jmp
in
inc
scas
lds
popf
je
dec
xchg
out
add
int
mov
popa
push
into
loope
ds
pop
push
lds
inc
daa
mov
ret
and
cli
mov
xor
and
mov
xchg
int3
xchg
in
out
int3
cld
push
jno
jmp
test
cmpsb
ret
add
or
push
aam
push
mov
lea
sbb
or
push
lods
add
outsl
push
movsl
xor
push
sub
enter
pop
xchg
cmp
jecxz
dec
jp
dec
dec
or
pop
in
mov
fs
inc
xor
addr16
ficoms
jg
imul
fxam
cld
adc
movsl
clc
mov
add
int
xor
dec
pop
sbb
xchg
fildl
push
repz
add
xor
sub
and
fstps
fsub
mov
addb
movsb
test
hlt
or
test
inc
and
ljmp
push
add
pushf
dec
leave
mov
scas
pop
cmpsl
ja
dec
jl
icebp
jp
lds
mov
rorl
jecxz
sarl
mov
and
out
imul
mov
lret
sbb
fwait
rol
push
inc
jl
jecxz
mov
inc
or
mov
aaa
sbb
mov
mov
sub
cltd
mov
int3
push
pop
mov
cmp
mov
inc
push
call
mov
pop
or
fwait
in
les
or
mov
push
out
lds
mov
repz
mov
mov
outsl
cmp
out
adcl
sbb
mov
aad
orb
lods
inc
int
xor
or
jae
dec
mov
push
jno
outsl
jno
outsl
lret
mov
aas
imul
mov
lock
mov
femms
std
fwait
xchg
or
and
loop
and
lds
inc
sub
push
jo
shr
lock
and
std
add
and
jns
test
pop
lret
mov
test
add
ffree
lret
cmp
filds
jne
or
fadds
inc
aaa
mov
nop
es
mov
pop
int3
outsl
jmp
ss
xor
divl
lea
jns
aas
test
gs
inc
sub
icebp
jo
jno
mov
ret
mov
std
pushf
in
fnstcw
outsb
aam
xor
xor
mov
cmpsl
enter
xchg
mov
mov
rorb
inc
dec
lret
test
push
push
jno
jns
scas
or
divb
in
ret
das
mov
aaa
jno
push
fsubrs
sub
imul
adc
rol
cmp
sub
stos
outsl
mov
cs
fscale
clc
repnz
pop
ss
push
notb
pushf
pop
lea
mov
stos
je
stos
or
jecxz
sahf
xchg
ds
js
in
jo
iret
in
xchg
adc
push
dec
repnz
pop
loope,pt
xor
mov
das
es
adc
xchg
ljmp
cmpsl
stos
pop
cltd
andl
arpl
pop
sti
inc
imul
ja
std
mov
call
xchg
jge
lcall
jg
push
pop
pop
xor
stos
inc
inc
adc
sbb
jg
dec
xchg
loopne
loope
out
xchg
cmp
sahf
lock
scas
mov
lcall
and
jo
fdivrl
outsb
fbld
pop
or
dec
movsl
dec
les
lahf
mov
mov
sub
pop
cmpsl
push
cmp
repz
ret
dec
lahf
addr16
sahf
fiaddl
popf
pushf
cli
xchg
cmpsl
mov
mov
inc
dec
movsl
cltd
arpl
push
xlat
xchg
pop
mov
scas
nop
sbb
push
insl
pop
loop
orl
loopne
push
xchg
fwait
out
aad
pop
mov
and
fs
fcomps
xor
mov
or
mov
jg
cmp
cmp
cmp
dec
cmp
out
xor
xchg
enter
add
push
test
jne
mov
push
fdivs
inc
out
test
pusha
inc
pop
push
aad
cmpsl
push
jg
call
call
jle
ja
js
push
jl
pop
mov
push
xchg
in
mov
xlat
lock
mov
inc
icebp
push
add
cli
xchg
les
leave
cld
cmp
mov
mov
sub
imul
enter
xchg
enter
lret
push
int3
int3
ror
mov
xor
pop
repnz
fwait
loop
pop
ds
cltd
ret
and
rcrb
pusha
lret
add
insl
adc
pushf
lods
in
mov
lcall
jp
xor
xorb
push
pusha
mov
dec
sbb
push
insb
push
cwtl
sbb
cmp
dec
out
test
popa
stos
push
std
mov
jnp
dec
xor
sub
dec
push
or
mov
xor
dec
sarb
mov
xor
xchg
lock
outsb
dec
sar
or
insl
inc
inc
test
imull
dec
pop
repnz
and
ret
out
cmp
inc
cmp
das
adc
sbb
fldt
je
scas
sub
test
or
es
mov
inc
aam
ljmp
cmp
push
or
fstpl
adc
into
push
add
loop
aas
rcr
out
cmp
pop
dec
adc
test
add
and
out
inc
adc
stc
popa
fwait
ja
jmp
popf
push
xchg
scas
xchg
xchg
mov
xor
xchg
pop
xchg
jp
sbb
orb
pop
mov
mov
leave
xchg
cmpsb
mov
jp
jg
fcoms
mov
sub
fwait
mov
mov
or
sbb
push
je
ljmp
xchg
and
clc
jb
xchg
ds
push
mov
cmp
rcl
cmpsb
or
adc
sub
push
arpl
in
sbb
mulb
stos
lret
or
cmp
pop
mov
and
data16
movsb
push
in
xor
and
xchg
dec
pop
outsb
dec
cwtl
mov
out
jmp
mov
dec
mov
xchg
cmp
add
js
insl
fildl
lahf
jbe
in
test
popa
test
scas
cmp
mov
out
popf
or
inc
push
in
and
mov
push
loopne
andl
scas
out
sbb
fiadds
fadds
loopne
sbb
adc
iretw
and
inc
mov
ss
cmpsl
sub
iret
pop
enter
jbe
inc
je
stos
mov
add
cmpsl
pushl
xchg
addr16
stc
jmp
inc
push
adc
mov
mov
or
mov
or
push
jbe
mov
adc
orb
adc
rorb
mov
stos
xor
sub
out
and
lret
pop
sub
lret
push
or
rclb
fwait
rorb
jno
inc
and
orl
repnz
inc
mov
les
shlb
inc
fdivrs
arpl
and
mov
lock
aas
ja
lods
pushf
fwait
and
xor
iret
pop
add
sbb
js
stc
xor
lods
mov
sub
or
lcall
dec
mov
and
dec
outsb
daa
inc
cltd
jnp
mov
pop
mov
jmp
dec
dec
clc
leave
repnz
xchg
lock
das
mov
int3
test
das
in
mov
filds
cmp
vpmovm2q
push
loopne
jp
inc
or
pop
xchg
adc
jb
sub
rcrl
mov
or
mov
int3
push
sarb
and
call
xchg
pop
movsl
dec
std
lret
cmp
push
mov
push
fadds
bound
cmp
inc
loopne
jo
loop
shlb
cmp
test
outsl
or
outsb
lret
xor
and
inc
bound
sahf
jge
adc
xchg
lock
or
cmp
xchg
ja
fadds
xchg
lock
mov
and
jb
jle
or
adc
out
and
pop
add
orb
addl
pop
shr
inc
dec
fldenv
imul
lds
sti
inc
and
xlat
popa
es
mov
sub
xor
mov
out
mov
imul
das
push
xlat
mov
lds
out
mov
mull
cs
sbb
fsubl
sbb
pushf
out
and
fsubs
and
and
in
shrl
stos
mov
scas
jmp
gs
ficomps
push
sbb
rorb
push
xor
loop
in
ret
ss
mov
movb
xchg
nop
icebp
mov
jb
cmovbe
div
mov
or
in
fisttps
inc
xorl
cwtl
leave
xor
stos
out
jne
or
push
and
jg
cltd
jle
lcall
or
pop
sbbb
xchg
pop
ret
enter
movsb
pop
push
mov
xor
mov
stc
cmp
out
cmpsl
mov
imul
enter
cmp
inc
lock
enter
inc
jns
scas
mov
in
sbb
xor
outsb
inc
or
or
lret
fsubp
setae
fistl
and
daa
lahf
push
xorl
sub
pop
mov
mov
fsubrl
jle
lret
pop
push
scas
or
add
mov
pusha
js
dec
add
sub
outsb
jl
cld
bnd
mov
rcl
mov
sbb
mov
ss
xchg
addl
lahf
mov
inc
shlb
lds
aad
pop
jg,pt
inc
cmp
sub
shll
xor
jns
pop
mov
sub
push
insb
sub
inc
lods
ficomps
xchg
mov
mov
mov
mov
push
sub
adcl
sub
mov
adc
cmp
lret
pop
fistps
fadds
push
lret
push
loope
cmp
notb
js
cmp
sub
test
movsl
push
inc
leave
insl
jg
out
js
insl
xchg
mov
xor
sub
test
or
jp
fidivrl
out
push
jb
out
add
repz
repnz
bound
mov
push
jb
enter
lods
or
sbb
push
sbb
and
clc
or
jg
sbbl
sbb
mov
insb
jne
mov
mov
repz
fdivrl
xchg
scas
fs
jbe
dec
addr16
leave
sub
xchg
push
dec
pop
sahf
leave
jecxz
or
out
sub
pop
repnz
add
mov
fistpll
adc
insb
call
lea
decb
addr16
subl
data16
repnz
lea
sbb
popl
push
lea
sub
jg
icebp
xchg
dec
adc
dec
fisttpl
jle
add
xor
inc
ljmp
mov
ljmp
sbb
test
adc
loop
fucomip
ret
mov
xchg
dec
xor
sbb
les
sub
pop
or
adc
out
fwait
sub
out
or
dec
popa
cmp
and
mov
shl
nop
pop
fidivs
clc
cmp
push
ds
popf
rcrl
push
int
add
xor
jp
movsb
mov
mov
mov
dec
scas
mov
dec
cli
mov
cld
popf
pop
cwtl
outsb
sbb
lods
jo
sbb
jae
mov
push
sbb
aad
das
decb
imul
pop
fadds
cmpsl
jne
ljmp
add
cmc
sbb
aam
push
insl
out
mov
and
xchg
aaa
mov
mov
popf
in
cltd
adc
inc
push
sbb
cmp
and
pusha
push
mov
mov
xchg
fwait
dec
sbb
and
jge
jecxz
pushf
or
mov
pop
pop
pop
ds
and
jmp
fnsave
jg
and
mov
adc
out
cmp
mov
mov
xchg
jl
scas
rcl
mov
mov
ret
out
xor
inc
ret
aas
scas
mov
dec
xor
and
inc
rorl
push
jle
fwait
or
cmp
push
fisubrs
cwtl
mov
aas
in
fcoms
leave
or
xor
cmp
sbbl
sbb
pop
mov
mov
hlt
inc
mov
jae
cmp
rorl
adc
cs
shlb
pop
sbb
cli
xchg
xchg
popa
cltd
cmp
test
pop
sub
daa
xor
adc
xor
pop
mov
jl
addr16
mov
xchg
and
pusha
inc
insl
aas
pop
insb
dec
aaa
jecxz
mov
aaa
loope
jae
nop
fidivl
mov
dec
mov
ds
popa
mov
dec
pop
imul
cmp
outsl
les
mov
sti
xchg
mov
sub
jmp
shrb
push
out
dec
push
and
sti
call
insl
pop
ljmp
cmpsl
enter
pop
into
js
mov
push
inc
in
xchg
enter
or
push
ds
call
inc
lcall
xor
xor
or
movb
pop
frstor
sub
and
ret
lcall
insl
mov
xchg
scas
data16
je
push
ret
pushf
sub
pop
mov
mov
push
pushf
push
mov
leave
push
fdivrs
cld
xchg
je
notb
jns
pop
sahf
mov
xlat
je
push
loopne
dec
mov
mov
rorb
jp
mov
or
arpl
mov
xor
mov
lret
into
mov
mov
xchg
punpcklbw
dec
mov
idivl
fmuls
shl
jmp
add
or
mov
test
andb
adc
fwait
xlat
outsb
insl
ret
mov
call
and
adcb
out
das
jge
mov
ficompl
push
cmpsl
or
jmp
cmp
gs
ss
sub
push
adc
xchg
pop
cmp
pop
incb
loop
fsubp
test
or
outsl
stc
add
push
mov
movq
cmc
pop
xor
filds
addl
movsl
je
sbb
icebp
or
test
xor
add
scas
fcoml
xor
sbb
jbe
dec
ret
cmpsb
cmp
dec
adc
and
sbb
mov
shlb
mov
mov
sub
movsb
fildl
pop
cmp
js
pop
xor
outsb
mov
int3
add
test
mov
push
dec
jmp
int3
clc
call
dec
cli
dec
mov
push
push
das
outsl
fidivrs
or
hlt
mov
data16
sarl
mov
mov
pop
push
mov
push
jne
add
mull
lds
sbb
dec
sub
and
movl
mov
loope
dec
loopne
mov
sbb
cli
mov
sub
mov
into
xor
and
aas
aaa
pushf
test
lods
lcall
push
gs
sarl
repnz
sbb
ret
adc
push
sub
xor
push
pop
outsb
aam
pop
jo
dec
adc
dec
mov
inc
sub
lret
das
bound
repz
dec
repz
lods
push
mov
jle
in
xchg
mov
je
sub
sarl
xor
cmp
enter
aaa
and
push
and
and
rol
and
clc
adc
movsl
sahf
cmp
pop
shlb
pop
sub
add
shrb
cmp
jmp
and
daa
or
sub
fcoms
push
cmp
mulb
cmp
adc
loopne
add
sub
aam
rcrb
push
jecxz
rclb
pop
or
lret
gs
mov
lods
test
and
xchg
mov
push
daa
aam
std
sub
push
sbb
xor
xchg
sbbb
or
stos
xchg
in
and
rorb
sub
in
add
shl
push
adcl
adcl
jle
ret
dec
sub
and
int
test
mov
or
or
dec
jecxz
ffreep
xor
xchg
xor
loopne
rclb
cwtl
insl
adc
push
jg
xchg
or
out
jecxz
jns
or
cltd
pop
enter
hlt
jmp
lcall
sti
subb
add
adcl
or
mov
test
sub
enter
out
imul
arpl
iret
sbb
xor
ss
cmp
int
pushf
jle
test
out
pop
nop
xchg
add
push
test
pop
pop
push
nop
mov
xchg
daa
fists
sbb
mov
push
aaa
inc
inc
add
ret
or
mov
add
mov
adc
fdivrs
mov
scas
ret
push
ds
stos
sbb
fnstsw
cld
pushf
adc
iret
inc
xorl
es
adc
ud2
xor
and
adc
test
dec
es
out
xor
lret
sub
inc
lods
js
jg,pn
xchg
inc
fdivrp
jle
std
add
ja
imul
add
rorb
pop
push
add
daa
sbb
nop
jp
test
fmull
fs
push
insl
cmp
testb
adc
jecxz
jno
cmp
dec
aam
std
ja
adc
xchg
aaa
insb
mov
ds
adc
int
jle
mov
push
inc
dec
pop
xorb
xor
scas
in
hlt
xchg
push
enter
repnz
inc
xchg
outsl
cmp
adc
add
inc
inc
jb
sbb
rclb
popf
cmp
les
dec
jo
fnsave
push
mov
mov
loopne
pop
pop
jno
cmpsb
mov
or
sbb
mov
test
xor
fmull
insl
lock
loop
jmp
js
adc
jg
cmp
lret
stc
pop
xchg
orl
cmp
out
jae
push
jae
push
in
enter
fxch
xor
dec
or
and
push
les
inc
aam
sbbb
cmp
add
mov
insl
xor
movsb
dec
int3
push
pop
push
mov
loop
imul
mov
jnp
add
and
dec
pop
adc
lcall
dec
sbb
mov
js
push
dec
in
ret
sbb
das
adc
xchg
hlt
mov
cmp
xchg
in
sbb
ss
loop
notl
cs
ds
add
dec
stos
popa
outsb
mov
cmp
sub
xor
mov
int3
jb
out
sti
and
or
mov
and
pop
mov
xchg
shll
push
cmpsl
andb
ljmp
lods
decl
xor
testb
mov
fldenvs
repz
jg
push
das
ror
repz
in
mov
mov
sub
fwait
or
repz
push
incb
mov
push
or
aam
jb
cmp
ficomps
jns
out
rcr
shlb
add
scas
sbb
fsts
out
stc
jp
in
cmpsl
fs
and
pop
js
mov
push
xchg
ja
adc
or
pop
inc
xchg
idivb
jp
clc
cmp
pusha
stc
jl
inc
lret
pop
mov
adcl
xchg
test
insl
ret
mov
ljmp
arpl
imul
test
scas
gs
cld
mov
into
xchg
inc
stc
fldl
adc
adc
test
inc
xor
pop
movsl
popa
adc
andl
jb
or
and
jl
mov
imul
lcall
call
mov
js
iret
mov
and
xlat
inc
loope
inc
pop
dec
or
and
mov
mov
movsb
adc
shlb
int
xchg
fldt
cmpsl
je
xchg
ja
sbb
fs
jmp
arpl
cli
dec
pop
inc
std
add
xor
cmp
in
lock
mov
and
xor
fdivp
addr16
ss
ljmp
mov
ficoml
imul
mov
inc
and
adc
imull
sbb
or
pop
mov
std
or
fcmovnbe
mov
lret
sbbb
xchg
pop
dec
lahf
inc
inc
and
fldl
add
mov
xor
mov
int3
out
sub
mov
push
cmp
stc
mov
pop
xchg
js
push
ficomps
mov
xor
fstpl
cmp
xor
mov
add
iret
shl
xchg
jge
xor
inc
mov
rclb
add
and
notb
mov
mov
mov
lea
sbb
in
mov
mov
ret
jo
cs
mul
sbb
xor
mov
scas
push
xchg
dec
and
mov
jo
push
cs
repz
or
dec
shlb
testb
jno
mov
in
cmp
decb
cwtl
mov
push
xor
and
and
xlat
sarl
pushl
inc
imul
jecxz
adc
jnp
or
mov
jno
ljmp
mov
getsec
cmp
iret
loope
adc
cmp
pop
add
js
push
pop
movsl
fstps
cmpsb
es
jecxz
das
adc
mov
pop
loope
orb
flds
lret
push
pop
cmp
add
inc
mov
xor
add
jge
les
imul
mov
aas
or
hlt
das
pop
push
loope
push
xor
sbbl
sbb
pop
lods
in
sbb
into
mov
test
jmp
dec
pop
and
out
inc
test
adc
jns
push
mov
adc
in
lcall
sbb
fnsave
fsubrs
mov
add
sbb
loop
inc
stos
xlat
leave
daa
sbb
mov
sub
xor
jns
cmp
xchg
fnstcw
daa
adc
pop
aam
aas
sbb
lahf
sub
mov
xchg
loope
das
fisttps
push
xchg
mov
inc
jb
xlat
lods
adcl
push
push
int
or
jp
and
dec
and
cmpsl
addb
ret
les
call
xchg
repz
fcoms
jge
pop
dec
mov
insl
and
imul
mov
pop
gs
mov
ljmp
adc
push
dec
mov
je
lret
stos
mov
imul
pop
lds
and
sub
mov
inc
adc
xchg
cltd
rclb
insl
xchg
pop
cs
ret
adc
jp
fisttps
push
fs
and
add
jnp
out
enter
xor
pop
adc
test
out
fs
push
xchg
loopne
and
cmp
int3
popa
xchg
mov
xchg
andl
lahf
daa
xchg
jle
int
jnp
lret
ja
adc
ret
in
outsl
dec
pop
jg
sub
push
in
and
pusha
sbb
test
mov
popl
push
mov
ffree
sti
test
ficoms
xor
xchg
cmp
pop
or
xchg
or
cmp
inc
mov
stos
push
jo
inc
cmp
std
mov
fistl
pop
jne
cld
jne
adc
and
and
add
rcl
sahf
inc
call
lock
stos
cmp
mov
fisttpll
pop
cs
or
lret
cmpsb
push
ds
test
sub
sbb
lret
in
sub
test
cmp
popf
jno
imul
xchg
int
test
push
movsl
loope
cmpsb
pop
lds
pop
xlat
ss
loope
ss
gs
lret
sbb
mov
sbb
std
jle
cmp
emms
dec
sbb
leave
push
addb
std
push
mov
xchg
arpl
inc
leave
mov
in
lock
cmpb
xchg
sti
add
jo
mov
xchg
cmp
xchg
or
jmp
sbb
jne
push
xchg
fsubl
in
xor
and
jb
dec
jo
loopne
mov
adc
pop
movsl
je
aas
mov
fimull
arpl
repz
pusha
dec
xor
sub
sbb
mov
lock
mov
les
or
xchg
outsl
mov
ret
in
xlat
lea
adc
lods
mov
or
mov
xchg
adc
cwtl
push
jnp
jne
mov
xorb
push
aam
sti
cmp
and
xchg
bound
add
dec
push
mov
ja
adc
jmp
lret
inc
sbb
push
mov
adc
xchg
into
sbb
repnz
and
insl
xor
push
mov
sub
or
jmp
mov
and
in
rcr
and
dec
push
mov
mov
add
jmp
stc
daa
scas
adc
test
dec
dec
jbe
cmp
jle
ror
test
sbb
pop
dec
xchg
ficoms
std
add
ss
mov
jge
mov
pop
xorb
jne
fistl
imul
testl
adc
mov
xor
push
ja
ljmp
push
test
and
cmpsb
push
push
dec
dec
adc
bswap
ds
mov
cmpsb
pop
dec
xor
loop
mov
in
cwtl
inc
ss
mov
addb
ror
cmc
lret
out
mov
int3
loop
xchg
gs
popa
xor
arpl
stos
rorl
js
and
cs
es
mov
jle
out
pop
push
pop
cmp
mov
push
mov
mov
icebp
insl
repnz
add
pusha
sub
sbb
iret
ljmp
mov
insb
iret
outsb
xor
xlat
lcall
push
ljmp
add
popf
lds
leave
and
int3
adc
xchg
adc
out
fbstp
mov
sar
cmpsl
xchg
fisubrs
mov
xchg
pop
mov
fs
int
jg
fists
pushf
add
mov
rcrb
mov
dec
pop
xor
push
inc
xchg
mov
dec
cmp
adc
addr16
mov
cmc
xchg
sahf
sbb
push
lret
xlat
add
outsb
jbe
ret
inc
xchg
daa
jo
call
push
push
sbb
imul
inc
add
stc
cmc
add
vpackssdw
sub
popf
and
xchg
stc
popf
adc
jmp
push
or
xchg
lea
sbb
call
les
inc
and
jb
stos
out
add
imul
pop
out
mov
cmc
mov
outsl
jl
test
les
mov
jmp
sub
lret
fdiv
insl
jle
add
scas
and
jmp
push
je
stc
add
mov
pop
xchg
sbb
out
adc
aam
out
sub
or
jp
ss
mov
data16
mov
add
out
sub
cmpsl
dec
push
mov
xchg
mov
pop
pusha
movsl
pushf
xor
jl
sbb
and
jl
xor
mov
imul
dec
rclb
clc
lcall
dec
and
xchg
movsb
adc
xor
sub
decl
outsl
pop
fimuls
mov
stc
adc
jl
repnz
cmpsl
movb
inc
call
or
and
adc
loopne
lea
jo
pushf
out
inc
xor
aaa
pop
rorl
or
test
jno
cmp
rclb
pop
loope
adc
aam
and
jns
jp
sub
ljmp
mov
mov
shrb
or
cmc
testb
cmp
xor
clc
stos
sbb
cmc
ret
shrl
sub
jecxz
pop
popf
push
movsl
test
mov
stc
pop
mov
push
orl
push
repz
dec
daa
dec
ja
mov
add
std
sbb
out
out
push
test
scas
out
mov
sub
insl
cli
and
fwait
rorl
jle
divl
icebp
add
mov
add
xchg
jno
adc
repnz
xchg
cmpsl
test
popf
std
cmp
and
pop
enter
dec
mov
jns
and
insl
mov
sub
push
mov
push
jp,pt
or
ds
lods
add
das
arpl
and
sbb
xor
push
jle
jb
sti
stos
dec
sbb
test
cmp
lea
dec
aad
jl
inc
je
mov
jge
push
add
aas
jle
dec
dec
jle
dec
outsl
aam
int3
cli
xchg
sbb
aad
mov
movsl
mov
mov
notl
cltd
lret
ficomps
pop
mov
inc
gs
dec
orl
popf
adcb
in
les
pop
subb
xor
testb
push
cmp
sub
rorl
ds
cmp
add
sbb
ret
adc
jbe
outsb
in
in
hlt
sti
mov
mov
fisubl
xchg
inc
call
mov
mov
inc
sbb
xchg
test
push
lret
dec
outsb
or
arpl
std
adc
subl
mov
out
test
out
and
and
inc
xlat
mov
sarb
sub
or
xlat
shrb
dec
fstps
xor
in
in
sbb
adc
or
lods
loope
pusha
mov
aas
pusha
js
dec
lock
pop
cmc
inc
dec
aaa
xchg
aad
mov
and
jl
jmp
lock
jno
imul
jmp
outsl
cltd
orb
test
and
push
xor
xor
push
outsb
adc
imul
movsl
sbb
mov
pushf
inc
loopne
roll
push
pop
aad
adc
add
inc
jno
daa
push
pop
lahf
shrb
jl
mov
xchg
test
imul
js
lds
dec
in
pop
faddl
arpl
jp
sahf
cmp
dec
ss
mov
dec
in
mov
inc
pop
inc
cmp
adc
mov
fistpl
jno
lods
loopne
imul
int
fdivs
iret
adc
dec
pop
cmp
je
fwait
sbb
lods
movsb
jne
adc
pop
push
test
stc
mov
mov
out
push
das
and
cmp
imul
hlt
je
cmp
mov
push
pop
mov
repnz
jmp
test
push
out
sarb
lock
mov
fsubl
roll
test
into
xchg
jne
pop
jnp
jl
lods
cmp
inc
js
divb
arpl
mov
dec
pop
clc
decl
inc
leave
int
dec
stc
icebp
jb
cmp
push
inc
sub
jle
xor
push
inc
or
push
sbbl
mov
subb
mov
mov
iret
jle,pt
mov
lahf
std
rcrl
lahf
sbb
inc
sbb
out
adc
pop
popf
dec
stos
xor
sbb
push
jno
mov
shlb
mov
push
repz
jo
mov
je
mov
lock
sbb
bnd
bound
das
adc
clc
pop
or
jne
mov
mov
cmc
cmp
xchg
mov
dec
mov
sbb
test
ja
test
shrl
lret
inc
xor
sahf
notb
inc
daa
mov
andl
inc
inc
mov
test
dec
es
out
xor
into
mov
pop
add
imul
jp
and
movsl
int
cld
jecxz
int3
xchg
icebp
cmp
ja
scas
leave
adc
repnz
mov
push
clc
mov
pop
xchg
pusha
dec
mov
inc
push
adc
mov
test
push
adc
pusha
and
inc
push
or
call
insb
pop
inc
aas
lcall
out
rcll
mov
add
mov
xchg
xchg
in
push
inc
shrb
mov
bound
xor
xchg
jae
jp
cmp
jo
lret
dec
push
jge
lods
dec
push
jge
addb
mov
frstor
cmp
adc
lcall
jge
push
aad
idivb
lret
mov
sahf
rorb
mov
mov
cwtl
lcall
sti
test
aam
xor
or
fidivrs
mov
test
in
dec
add
dec
adc
and
xor
ds
jl
cmp
inc
adc
jae
jecxz
icebp
imul
les
add
js
ja
fldl
roll
mov
pop
xchg
scas
into
into
cmpsl
imul
push
jae
xchg
and
jle
pop
cwtl
into
aam
mov
ficompl
sbb
dec
popf
jno
hlt
xor
mov
jo
mov
hlt
fstl
fcomip
pop
arpl
bound
gs
cmovle
fsubr
push
inc
leave
into
cmp
mov
jp
add
aam
js
add
rorl
cmp
in
iret
rolb
stc
inc
addr16
pop
mov
ret
push
mov
fwait
sbb
push
inc
sub
into
jb
inc
fnstenv
jge
test
and
dec
lcall
mov
lds
les
insl
inc
out
jo
xchg
xchg
xchg
dec
jne
adc
call
add
inc
hlt
inc
mov
pusha
pop
ljmp
jmp
shl
or
cmp
or
stos
jecxz
xor
cltd
movsb
and
xchg
xchg
enter
push
and
xchg
call
imul
into
cmpsl
popf
mov
sti
fsubrs
dec
das
xor
lods
xchg
hlt
xor
inc
push
andb
in
mov
nop
fwait
sub
xchg
scas
cmp
outsl
xchg
adc
js
sahf
and
push
cmp
cli
js
outsl
fcmovb
xorb
sbb
mov
das
inc
icebp
jb
and
aas
inc
jae
pop
das
push
stos
sar
loopne,pn
mov
push
cltd
and
insl
ret
outsl
pop
push
divb
jnp
fsubl
inc
pop
and
ss
mov
test
sahf
es
mov
mov
nop
int
cmpsl
jne
lods
pop
dec
push
gs
dec
popa
mov
mov
inc
push
pop
rcr
or
stos
adc
adcb
rcrl
pushf
out
js
cli
rcrb
xchg
call
cli
scas
push
mov
xchg
lea
push
and
jl
fbstp
lods
mov
inc
adc
and
adc
mov
shr
xchg
xchg
jae
push
pop
hlt
sub
cld
iret
aam
movsb
sub
in
rcll
mov
sbb
sbb
xor
test
dec
lret
xorb
cmpsl
mov
clc
and
out
iret
std
mov
iret
shll
lds
dec
lret
rcrl
lods
xor
out
loop
pop
cld
jl
inc
mov
insb
loopne
jne
jp
jne
push
daa
fcmovnbe
fldcw
enter
popa
jbe
dec
idivb
cmpsb
mov
pop
dec
icebp
push
inc
mov
dec
in
xchg
add
cltd
aaa
leave
and
aad
push
scas
aam
and
mov
loop
push
push
and
xchg
loope
lret
mov
test
rcrl
mov
xlat
inc
cmpsl
dec
inc
dec
andl
ror
xchg
out
test
into
jp
mov
imul
mov
ss
rorl
mov
mov
ret
pusha
jo
dec
sar
or
add
adc
inc
push
shll
test
out
mov
ds
rorb
add
getsec
jmp
jmp
insb
daa
lods
push
test
sti
push
stc
jg
dec
movsl
clc
mov
je
arpl
mov
dec
mov
fsubr
scas
arpl
mov
xchg
cmp
popa
data16
mov
jbe
dec
cli
mov
incb
outsb
xchg
movzwl
xor
inc
sub
push
inc
sarl
sbb
fildl
fsubrl
mov
pop
ror
out
pop
or
push
fcos
in
jg
jne
add
and
xchg
test
sbb
frstpm(287
lock
cmc
in
sbb
repz
das
lcall
jmp
and
and
dec
lods
divl
mov
stos
dec
mov
ret
out
daa
std
test
jle
cmp
mov
pop
rolb
sbb
out
in
xchg
adc
sbb
enter
pushf
leave
jle
pop
and
pop
and
mov
jo
pop
popf
stos
inc
fsubrl
aaa
push
sbb
js
sub
leave
imul
mov
dec
fnstsw
push
stos
mov
dec
lcall
cmp
adc
jg
xor
adcl
jmp
jbe
inc
xchg
dec
inc
mov
enter
popa
xor
and
scas
cmp
pop
loope
jecxz
arpl
std
mov
enter
pop
fcom
movsb
mov
adc
into
roll
ret
xchg
add
cmp
jcxz
sbb
pmaxsw
inc
add
pop
pop
add
adc
fldenv
xchg
mov
adc
mov
jecxz
sbb
jnp
jno
iret
mov
xchg
xchg
imul
mov
daa
aam
popa
js
mov
iret
sub
outsb
adc
mov
je
pop
sti
xor
push
adc
mov
sbbb
in
out
test
mov
sti
enter
mov
xchg
mov
das
sbbb
fsubp
andl
vcvtsd2ss
pop
mov
sub
sbb
add
movb
mov
movsl
mov
cmc
dec
in
pop
xchg
inc
push
in
pusha
and
xchg
jmp
xlat
inc
cmpb
cmp
adc
jl
sub
lods
sti
jo
xchg
push
ret
test
xlat
jae
and
je
sub
or
or
add
ja
insb
add
push
xchg
mov
iret
fnstcw
adc
add
sub
addr16
imul
jle
inc
ffreep
repnz
insl
and
dec
adc
add
jg
cmp
test
repnz
lcall
xor
cmp
cmovnp
fwait
sub
les
xchg
and
sbb
les
push
shrl
cmp
aas
mov
xchg
jecxz
faddl
pop
sbb
addl
push
js
push
jp
mov
mov
pop
mov
jp
push
enter
in
scas
xor
push
push
jecxz
xor
mov
and
je
xchg
xchg
mov
sub
in
jbe
sarl
cmp
out
fwait
in
jmp
outsl
in
in
std
push
xor
mov
leave
sub
mov
push
adc
inc
fnstsw
push
data16
scas
test
addl
sbb
adc
mov
std
stos
das
jle
cmp
ret
mov
lods
mov
jbe
adc
adc
bound
jno
pop
cmpsl
dec
mov
mov
outsl
movl
jne
sbb
loop
fbld
fsts
ret
cmp
xchg
insl
lock
sbb
xchg
sub
mov
pop
fdivl
iret
jo
ds
outsl
mov
and
idivb
test
cmpsb
xchg
repnz
pop
fistps
rorl
lods
xor
les
out
cs
cmpsb
nop
inc
mov
ljmp
mov
xor
mov
movsb
inc
xor
adc
sbb
loop
nop
add
lods
ficomps
mov
insb
or
and
mov
dec
stos
dec
push
pusha
in
inc
mov
cmp
xchg
dec
xchg
push
cmpsb
sti
insb
jo
inc
ljmp
int3
test
xchg
cmp
pop
bound
dec
inc
lds
push
rolb
jl
loope
push
or
loop
mov
mov
pop
xchg
ja
dec
fidivl
mov
jo
push
sbb
rcrb
mov
push
xchg
xchg
cmp
jb
lahf
pop
sbb
add
fstl
cld
test
cld
push
mov
fidivrl
xchg
in
fcompl
jns
cmp
adc
stos
iret
out
add
pop
lods
or
mov
orl
into
fcoml
call
dec
or
sar
mov
incb
shrb
ljmp
jne
mov
cmp
adc
mov
fadds
pop
adc
pop
movsl
xchg
sbb
addl
scas
dec
bound
ss
gs
and
add
repz
adc
push
inc
jle
popf
movsb
pusha
lahf
add
pop
add
xor
cs
and
inc
leave
mov
stos
ljmp
add
mov
pop
cmc
mov
inc
lret
sbb
inc
or
xchg
js
mov
pop
mov
out
or
add
mov
jbe
stos
cltd
loop
add
pusha
jge
jns
pop
mov
push
jbe
fs
out
roll
push
and
les
jbe,pt
mov
ja
shl
adc
popa
stos
out
inc
fdiv
sarb
mov
push
pop
jnp
shll
std
push
inc
xlat
ja
mov
mov
jno
mov
xorl
add
gs
mov
loopne
and
mov
push
mov
lea
adc
mov
or
rcrb
xlat
movsb
dec
scas
cld
int3
imul
sub
cli
es
dec
int3
or
sub
movsl
cmpxchg
repz
mov
inc
addr16
mov
icebp
loopne
popf
jmp
dec
xchg
cld
arpl
insb
fisttps
into
cmpsb
gs
inc
cmpsl
out
mov
leave
in
insb
pop
inc
test
inc
xor
cmpsb
adc
push
and
push
dec
push
addr16
adc
movsb
pushf
fsubrs
jns
enter
push
js
in
sbb
mov
xchg
daa
or
test
sbb
and
movsb
enter
imul
inc
xchg
pushf
fcoml
mov
cmpsl
xchg
flds
cmc
xchg
sti
repnz
shll
aam
sub
scas
and
jl
fldt
xchg
popf
or
sub
mov
dec
enter
mov
jne
out
roll
sbb
ret
mov
ds
sbb
jg
mov
scas
movsb
mov
nop
xchg
test
add
stc
or
pop
leave
mov
mov
popw
adc
xor
sub
push
xor
js
inc
loopne
mov
adc
icebp
add
cli
sbb
pop
aas
and
stos
mov
and
std
nop
cmp
cmc
jne
aas
xchg
or
cs
push
push
dec
icebp
idivl
into
pop
das
das
ret
ret
cld
cltd
cmpsl
lods
mov
xchg
mov
cmpb
xchg
mov
pop
add
lods
xor
popf
ss
movsb
sub
jae
or
pop
enter
clc
out
iret
push
sbb
mov
outsb
insb
test
pop
icebp
xchg
loopne
jp
jo
sub
xor
add
fs
or
xchg
add
dec
out
ds
loope
inc
in
ret
pop
jno
xor
xchg
and
imul
ret
mov
mov
push
xor
aaa
inc
xchg
adc
pop
gs
test
arpl
sub
sbb
sti
lods
addl
xchg
inc
rolb
push
mov
mov
lods
mov
rorb
rol
mov
test
ret
adc
je
lods
jno
xor
inc
int
mov
sub
push
dec
pop
rorb
stos
scas
aad
je
mov
out
leave
pop
xchg
mov
add
enter
nop
pop
push
jecxz,pt
dec
cmp
mov
mov
or
orl
dec
cmp
push
sahf
inc
sbb
xchg
in
sahf
out
movsb
insl
rorl
pushf
pop
mov
arpl
ljmp
lahf
lods
lret
push
jne
mov
mov
xchg
ficompl
imul
ret
add
push
inc
lods
fwait
push
lods
pop
add
enter
repz
sbb
test
mov
or
mov
negl
dec
xor
in
cmpsb
dec
mov
lcall
add
pop
jl
call
cmp
popf
jmp
out
xrstors
nop
xor
push
mov
mov
mov
pop
sub
cmp
sub
in
loopne
pop
test
sub
jg
jp
in
sub
mov
and
dec
jns
or
sbb
xor
push
jbe
in
imul
test
lahf
test
aas
test
jns
imul
pop
js
mov
or
ficoms
jecxz
call
ds
enter
pop
adc
iret
xchg
lods
mov
adc
or
mov
std
je
mov
cmpsl
fcompl
lcall
icebp
adc
mov
cmpsl
adc
mull
into
loopne
inc
jns
test
mov
std
inc
xchg
jo
sbb
fldenv
jbe
lcall
jo
and
add
or
dec
adc
fadd
fs
in
jne
xchg
push
mov
inc
mulb
fdivrl
mov
mov
insb
out
mov
or
nop
mov
mov
xor
mov
push
jmp
mov
cmpl
int3
xlat
add
lea
mov
mov
pop
mov
mov
aaa
and
pop
lea
and
mov
aad
pop
aaa
adc
std
out
jno
movsb
sti
sub
lods
mov
push
inc
push
mov
cmovs
lods
stos
lahf
xchg
push
out
dec
cmpl
inc
aaa
sub
jecxz
inc
pushf
in
mov
int3
dec
js
xchg
xorl
push
xchg
mov
ja
jae
cmp
xchg
and
in
mov
mov
pop
data16
dec
and
cmp
mov
ret
sahf
dec
repz
sbb
adc
cmc
insl
jbe
jb
rcr
insb
cwtl
xor
loope
in
pcmpgtw
ja
in
sub
mov
dec
or
pushf
test
and
xor
outsl
mov
and
out
inc
shrb
push
je
call
xchg
addr16
sbb
daa
add
jl
lahf
sbb
pop
jbe
add
int3
mov
xchg
jp
pop
insb
ljmp
fisubrs
push
popf
std
dec
loope
xchg
xor
jae
push
add
push
jp
lahf
mov
out
cwtl
xlat
jmp
mov
or
adc
gs
push
outsl
dec
leave
iret
mov
inc
ret
clc
loop
enter
and
into
hlt
nop
sub
push
pop
push
negb
mov
xlat
jmp
ss
mov
inc
mov
pop
xchg
rolb
arpl
lahf
xchg
pop
mov
insb
mov
mov
mov
adc
jae
rorl
mov
adc
cmp
mov
dec
or
fstpl
cmp
mov
push
scas
dec
sub
aam
mov
pop
sub
jge
jle
sbb
push
daa
and
xor
push
mov
imul
mov
cli
cmp
cmp
pop
cmp
inc
fadds
shlb
xor
add
mov
xchg
repnz
jecxz
cmpsl
pop
loope
sbb
jbe
addb
jmp
mov
leave
stc
pop
daa
jge
adc
push
fcomps
enter
cltd
lea
outsl
sub
nop
dec
imul
cmp
pop
push
and
test
lods
xchg
rolb
push
stos
xchg
mov
leave
jecxz
jae
xor
xchg
dec
movsl
or
xor
mov
mov
mov
cmpsb
mov
arpl
insl
push
xchg
xchg
loopne
add
in
lock
mov
aas
push
xor
pop
lahf
mov
mov
js
sub
movsl
pop
add
rcrl
push
dec
nop
jnp
nop
popa
inc
pop
leave
cmpb
adcb
repz
testb
dec
mov
adc
sbb
pusha
inc
inc
cltd
lea
lods
adc
loope
sbb
negl
xlat
sub
repz
cmp
mov
sbb
xor
imul
and
adc
pusha
dec
shlb
xchg
mov
std
inc
and
test
insb
mov
push
ret
jp
jmp
imul
out
mov
scas
cmpsl
jge
imul
std
mov
je
xor
jb
leave
add
jnp
mov
push
pop
sbb
cmp
int
lock
sub
cmpsb
les
jl
dec
sbb
imul
mov
into
imul
sub
and
inc
and
and
stos
jmp
shll
leave
mov
mov
les
test
icebp
and
incl
jmp
pop
js
aaa
jecxz
adc
out
adc
lods
adc
push
or
xchg
cmp
jmp
imul
add
sahf
sbb
mov
push
mov
nop
popa
jbe
in
lods
sti
loop
popf
shll
mov
sub
xchg
decl
xchg
xor
mov
mov
dec
dec
iret
lahf
ljmp
js
push
xchg
or
dec
subb
mov
sub
loopne
mov
mov
lahf
push
xchg
stc
and
neg
mov
sarl
mov
mov
loope
push
xor
pop
out
sub
stos
and
mov
cmp
dec
les
call
popf
dec
mov
negl
cmp
loopne
out
xchg
dec
fisubl
lret
adc
pop
test
xlat
cmpsb
rclb
imul
push
cld
push
mov
lds
pop
notb
cmp
and
pop
mov
mov
lret
xchg
or
pop
pop
or
sub
iret
push
add
jo
jl
sbb
mov
mov
sbb
lcall
in
gs
inc
lods
repz
pop
push
mov
pop
cwtl
fadds
cmp
lahf
loopne
in
sbb
in
call
lret
xor
scas
loope
add
fldenv
sti
xor
inc
in
jecxz
dec
jnp
add
pop
cld
pop
into
mov
mov
jle
and
int3
xchg
pop
and
aaa
scas
push
jmp
or
out
sbb
mov
dec
add
push
and
lahf
and
or
cld
mov
and
cltd
pop
xchg
xor
test
lret
mov
test
jg
pop
mov
jns
or
pop
and
insb
mov
imul
enter
or
fucomip
imul
int
mov
inc
push
fs
xchg
stc
inc
push
and
or
or
mov
adc
jmp
jp
mov
cmc
add
jecxz
push
loope
ss
pop
shlb
sub
pop
es
mov
jl
outsl
push
pop
scas
mov
in
ret
dec
scas
test
and
es
stos
rep
pop
dec
adc
jb
mov
inc
cmc
jmp
ret
es
push
lahf
dec
sbb
lahf
sbb
jo
adc
outsb
mov
jecxz
sbb
repnz
inc
ljmp
jp
add
cmp
aaa
sarl
nop
popa
cmpsb
test
repz
icebp
add
sub
adc
pop
mov
les
nop
das
pop
push
and
ss
lret
insb
insb
and
hlt
pop
repz
fnstenv
imul
jecxz
aaa
cmc
test
mov
icebp
xchg
pop
and
nop
jmp
jnp
lcall
push
stos
outsb
fisttpl
pop
inc
mov
cmp
lock
sarb
mov
scas
je
test
enter
dec
decb
cmp
sub
shl
adc
leave
lds
in
test
add
std
inc
push
loopne
or
scas
push
inc
mov
lret
nop
iret
and
cltd
adc
pop
test
or
jl
les
icebp
push
mov
add
sbb
inc
cmp
sbb
jae,pn
icebp
jle
xchg
add
aas
stc
cmp
lods
push
jo
and
or
sbb
push
addr16
mov
mov
cwtl
jne
ret
push
fadds
roll
mov
push
adc
jmp
leave
or
adc
fldenv
pop
leave
int3
mov
in
lds
cmp
push
stos
jbe
imulb
xor
push
pop
pop
mov
scas
xor
jmp
js
mov
push
dec
push
fstl
xor
adc
shlb
cmp
aas
dec
pop
pop
cli
addr16
sbb
daa
mov
bound
bswap
xchg
cltd
cmp
sahf
jae
cwtl
scas
jmp
fistps
jo
ror
xchg
repz
cmpsb
or
stc
int3
mov
sti
lods
aam
dec
sbb
sub
push
into
es
ret
mov
cmp
cmpsl
cmc
icebp
jge
ds
inc
or
inc
addr16
ficoml
std
and
jecxz
in
repz
scas
sarb
fmul
sti
in
xchg
aam
sti
mov
push
mov
ljmp
jo
jae
dec
push
rcrb
and
stos
outsl
push
mov
push
sbb
mov
mov
movsb
cmp
mov
push
adc
sbb
lcall
movsb
stos
xchg
nop
mov
or
add
nop
insb
jno
lcall
push
stos
dec
xchg
cmp
cmp
cli
inc
jns
and
jecxz
xorl
mov
and
or
pop
nop
jge
mov
inc
andb
loopne
aad
xor
in
or
xlat
xlat
ds
sbb
lods
xchg
stc
stos
pop
dec
stos
cwtl
cld
test
nop
pushf
mov
addr16
and
add
imul
push
shll
xor
arpl
push
mov
dec
in
pop
xchg
mov
in
and
push
sbb
lahf
std
cld
cmp
mov
mov
cvttps2pi
sbb
lods
stos
push
xchg
mov
cmp
cli
aad
mov
ret
pop
scas
in
jnp
outsl
adc
popa
cld
mov
aam
cltd
mov
test
jno
xor
ret
mov
call
push
xor
push
das
imul
add
push
jl
das
and
mov
pop
pop
jb
cmp
xchg
cmc
inc
mov
fsubrl
or
xor
je
sub
cmpsb
mov
pop
scas
sub
lret
iret
imul
in
mov
movsl
mov
inc
sbb
xor
jg
mov
adc
inc
dec
mov
rcrl
mov
inc
sub
cli
testl
lahf
pop
sub
inc
stos
jl
not
or
lcall
ret
in
xchg
or
mov
psadbw
leave
dec
lret
jo
fld
jmp
cs
adc
jmp
sub
dec
or
mov
dec
push
repz
adc
mov
icebp
xchg
jle,pn
aas
mov
dec
rorb
mov
push
clc
stos
daa
dec
mov
out
mov
fmull
lods
mov
subb
mov
movsb
gs
fcmovnu
in
cli
mov
adc
or
push
mov
fs
add
inc
sbb
add
int
dec
outsl
std
imul
xchg
sub
out
xor
ljmp
lahf
int3
xor
cmp
test
out
int
inc
lods
les
dec
jno
pop
shrb
add
inc
in
jae
orl
push
icebp
adc
arpl
outsl
or
das
xor
and
in
stos
mov
into
jp
stc
mov
push
dec
mov
xor
leave
or
jge
iret
xchg
adc
dec
mov
dec
cmova
dec
cs
clc
or
mov
add
xchg
mov
inc
and
cmpsb
add
push
ds
cmc
out
shll
dec
std
jo
movsl
sti
add
xor
sbbl
lea
adcb
lea
enter
das
les
jo
push
jb
mov
xor
mov
push
test
popl
fwait
mov
lcall
cmp
in
cld
testb
dec
shrb
mov
enter
sbb
cli
cmp
inc
in
pushf
cmp
lock
in
mov
sti
std
jae
shll
pop
int3
clc
orl
and
push
movsb
rcll
dec
scas
pop
inc
daa
pop
xchg
adc
inc
lods
xlat
cld
arpl
mov
push
push
sbb
adc
pop
test
sub
mov
push
in
push
test
bound
test
enter
mov
aaa
mov
pop
jno
xor
out
or
pop
mov
rcll
or
iret
fldl
cs
shr
adc
adc
mov
stos
stos
fcmovnu
loope
inc
inc
add
rcrl
cli
cmpsb
cmc
mov
mov
imull
fidivs
xor
out
jns
pop
shll
fnstsw
sub
popf
roll
popf
xlat
xchg
in
jmp
jb
pop
scas
loope
sub
jns
mov
aaa
in
sub
scas
int3
sti
push
inc
mov
or
xchg
or
jb
push
rclb
pushf
or
cmpb
jmp
fisubs
imul
add
dec
pop
push
aad
repnz
or
xchg
std
cmp
int
fwait
test
aam
cmp
nop
sbb
out
loope
adc
fwait
outsl
outsl
pop
mov
fwait
aad
mov
lret
sub
addr16
out
enter
xchg
push
or
adcl
fucomi
inc
push
cmp
pop
jge
or
mov
mov
jmp
jbe
outsl
subb
cmp
xor
rclb
jnp
xchg
and
mov
adc
jecxz
lret
cmp
xchg
xorps
cs
push
out
adc
mov
aad
into
les
loop
lods
pop
in
arpl
mov
dec
movsb
jo
ret
leave
pushf
test
outsb
or
popa
jecxz
or
cmp
jnp
mov
or
mov
lcall
mov
push
push
lcall
push
sbb
sbb
in
mov
cwtl
call
jl
jp
push
mov
pop
lahf
sub
or
xor
sbb
dec
mov
xchg
lret
sub
mov
lds
jle
pop
xchg
mov
mov
leave
js
mov
enter
and
jmp
inc
mov
mov
mov
movsl
jl
insb
pop
cmp
arpl
loopne
sbb
out
lds
pop
xor
jmp
jne
nop
les
or
push
cmp
in
xchg
ds
mov
lods
mov
in
ljmp
xchg
std
test
inc
outsb
lcall
mov
xchg
dec
xchg
push
push
cmp
clc
js
cmc
jmp
push
outsl
or
push
cmpsl
mov
mov
pop
sbb
sub
cmc
das
cltd
lret
push
lods
xor
jne
adc
lahf
pop
jl
push
xor
and
mov
lret
aaa
dec
or
mov
mov
push
push
fidivs
shrl
orl
ret
arpl
jg
adc
cwtl
and
ss
push
popf
inc
pop
icebp
sub
test
mov
bndstx
push
jno
xor
fwait
subb
cld
mov
jbe
ret
fldenv
movsb
cmp
mov
sub
test
dec
xchg
icebp
inc
fdivrs
loope
mov
ja
nop
outsl
fldt
test
sahf
mov
lods
mov
sbb
divl
sahf
xchg
frstor
mov
int
popa
scas
mov
push
in
ds
leave
inc
pop
mov
dec
push
xchg
push
mov
stc
arpl
stc
sub
repnz
or
push
sub
in
in
daa
and
mov
jecxz
orb
test
in
mov
mov
pop
cs
sub
popl
or
add
jg
xlat
mov
in
ds
icebp
mov
mov
sahf
adc
dec
inc
mov
cmp
sbb
stos
sti
dec
jle
pop
pop
aad
mov
mov
sbb
repnz
dec
aad
mov
movsb
cmpl
pop
cmp
pop
mov
addb
cmpsb
sti
adc
mov
adc
mov
nop
sub
imul
mov
cmp
add
lock
jbe
pop
sbb
scas
mov
push
daa
rorl
xor
xchg
stos
imul
loop
lret
test
outsl
jb
aam
cmp
or
jbe
int
add
push
ror
mov
imul
cmp
shlb
pop
mov
push
pop
add
mov
adc
xor
adc
pushw
lock
std
fcomip
jbe
repz
mov
sbb
adc
and
inc
xchg
scas
dec
or
lea
inc
imul
cmpsl
and
lods
mov
negb
or
sub
dec
sub
lret
call
mov
and
rclb
jecxz
jno
adc
jg
inc
pop
pushw
dec
adc
cli
repnz
popa
or
jge
in
rclb
aas
test
fsubrs
mov
out
adc
or
pop
adc
movsl
push
jl
inc
fdivrl
out
and
lcall
mov
lods
jmp
nop
lods
lods
int
fnstsw
dec
gs
pop
jmp
sbb
mov
mov
addr16
xor
pop
and
inc
sti
leave
mov
jb
jl
xchg
jp
mov
jge
dec
lock
sbb
sahf
add
push
arpl
imul
fwait
or
inc
mov
push
inc
gs
rol
sbb
into
leave
xchg
das
sbb
jns
add
fbstp
fisttpll
cwtl
mov
mov
test
jo
mov
cmp
mov
cmp
jne
add
ss
bound
into
xchg
fdivs
xor
mov
cs
pop
or
add
sub
stos
mov
ret
lahf
mov
inc
sbb
rorl
push
mov
jo
pop
mov
in
cmp
cmc
mov
sbb
pop
dec
adc
leave
loopne
out
je
fbld
cmp
sti
popf
movsb
pop
jns
movsb
pop
cmpsb
and
push
xchg
pop
shlb
xchg
loope
ret
movsb
add
iret
enter
jmp
xchg
mov
mov
cmp
ds
xchg
mov
mov
out
add
xor
sbb
inc
aad
sub
jmp
fdivrl
jmp
pop
outsb
movsl
jo
pop
and
dec
fs
ja
sti
test
add
adc
and
jmp
jle
aaa
test
adc
das
fnstenv
dec
sbb
push
dec
and
testb
fistl
in
lods
in
loope
in
test
mov
jecxz
push
outsl
ret
xor
popa
xor
jbe
mov
mov
fisubl
mov
inc
adc
mov
pushf
loope
jnp
rolb
leave
lods
ljmp
xchg
adc
lods
and
mov
cmpsl
inc
aaa
push
sbb
xchg
xorl
lea
lret
outsl
cmp
mov
jge
mov
jg
icebp
push
loop
mov
shlb
fcmovb
cwtl
mov
daa
push
jle
fdivrl
mov
mov
mov
cmp
je
cli
cmc
ds
cmpb
aam
add
clc
sbb
fs
and
js
jp
pop
enter
jns
jae
shll
mov
sbb
sti
js
push
inc
inc
fisttps
sub
xor
add
mov
repnz
loope
movsb
daa
sub
sahf
iret
int
and
daa
outsb
or
xchg
add
xchg
mov
cmpxchg
mov
imul
push
ficoml
loope
cmpsb
mov
xor
fmull
sbb
cmp
dec
add
xor
sub
stos
dec
mov
xor
dec
mov
in
stos
jmp
mov
pop
mov
mov
jb
mov
adc
dec
aam
or
insl
in
je
jns
and
out
mov
xor
pop
inc
xor
cmp
fimull
xchg
adc
jo
pop
sbb
cmc
xchg
jmp
ror
or
jecxz
insb
test
lods
xchg
fcomip
dec
cmp
cmp
dec
mov
je
subl
repnz
inc
xchg
dec
stc
movsb
inc
repz
lret
movsb
les
in
xchg
push
frndint
push
jmp
incb
mov
out
outsb
xchg
shlb
imul
inc
and
movb
pop
mov
ficoml
movsl
sub
insb
jno
dec
xchg
mov
arpl
sbb
sarb
mov
sbb
fisubrs
iret
out
jo
lock
cmpb
sub
and
push
je
mov
sub
cltd
inc
outsb
fwait
jno
outsb
dec
jae
push
fstps
sarl
sub
stos
cld
jb
and
in
or
test
cmc
lods
cmp
ret
xlat
scas
mov
push
pop
clc
test
mov
ret
and
sbb
pop
lret
mov
lods
xchg
xchg
mov
cmp
cmp
mov
xchg
idiv
loopne
lock
mov
adc
mov
mov
rorl
mov
mov
add
inc
add
fidivl
xor
mov
push
mov
fcmovbe
dec
jg
push
mov
aam
in
enter
and
cmp
lret
movsb
shl
rcrl
cmp
lret
in
shrb
jg
ds
sub
daa
fistl
xchg
add
adc
sbbl
adc
fwait
or
push
cmovbe
xchg
and
and
enter
add
cmpsl
in
jo
lret
or
loop
mov
mov
pop
pop
mov
orl
push
jns
sbb
sarl
xlat
jnp
cwtl
push
in
loop
lods
test
push
mov
clc
cmp
mov
cmpsb
push
xchg
movsl
dec
shlb
mov
xor
pop
mov
xchg
in
hlt
sbb
push
jge
push
nop
or
imul
dec
aas
add
cmpsl
je
xchg
outsl
mov
test
fldt
or
gs
add
cmpsl
xor
push
add
jg
xor
ficompl
push
loop
push
xchg
jecxz
jno
cld
xor
sbb
dec
push
or
jmp
mov
lods
mov
jecxz
cs
jb
jnp
cmp
scas
stos
inc
adc
pushf
xchg
or
jno
sbb
test
pushf
lea
daa
pop
aam
push
mov
jae
sbb
xchg
mov
and
icebp
inc
adc
idivb
test
aam
mov
sub
mov
test
adc
inc
push
add
mov
mov
aad
imul
inc
dec
push
mov
cmpsb
push
mov
cmp
lods
jmp
or
adc
xchg
push
aad
cmp
int
pop
in
sbb
setl
mov
es
vpackuswb
pop
inc
movsl
xchg
add
dec
pop
jle
mov
lret
lock
jo
cmpsl
or
and
mov
fistpll
mov
cmpsb
xor
xchg
push
mov
je
mov
mov
pop
idiv
aam
and
add
loope
stos
sbb
sub
fcompl
rcl
pop
or
adcl
xor
add
loop
inc
cltd
mov
xor
adc
cmc
push
aad
jbe
mov
dec
scas
xchg
inc
dec
fistpl
repz
lea
xchg
stos
dec
cmpsb
fs
mov
push
mov
sub
test
decl
sahf
mov
es
jle
jmp
gs
test
jmp
ljmp
lcall
lock
xlat
lock
std
xchg
xchg
xor
ret
icebp
repz
jb
mov
inc
adc
in
das
data16
mov
cltd
xchg
add
sub
test
repz
xor
fwait
lret
sub
add
scas
test
jns
enter
jne
arpl
in
insl
push
fcoml
jl
jl
push
and
sub
pop
lcall
movsb
mov
fiaddl
push
aas
inc
pop
data16
sub
cmp
mov
setb
repz
add
xchg
sbb
xchg
inc
movsb
test
popa
loope
adc
xchg
cmpsl
sbbl
xchg
mov
lock
sub
jno
jmp
lock
leave
loop
and
popf
mov
push
push
fcoml
jo
outsl
sbb
cs
les
adc
or
mov
cmp
imul
out
pop
pop
push
or
or
mov
aam
xor
cmc
pop
hlt
jno
push
movsb
inc
fsts
rolb
push
not
add
sub
sbb
push
loope
push
imul
sbb
add
les
stos
push
dec
cmc
lods
lret
jecxz
add
in
insb
push
hlt
scas
inc
inc
movsl
pop
or
jo
push
jo
jecxz
pushf
imul
leave
sti
and
and
lahf
fs
mov
mov
stc
pop
and
and
jbe
aam
ljmp
hlt
push
fisubl
aad
cmp
movsb
out
pop
cmpsl
fidivs
sub
push
loop
or
imul
sbb
or
mov
cld
stc
lods
inc
hlt
cmc
leave
rcr
cli
cmp
stos
iret
outsb
test
ds
cmc
rcrl
jns
push
mov
xor
pop
xchg
aam
or
lock
mov
mov
lret
mov
sbb
xor
sub
adc
leave
dec
xor
sub
int3
scas
lret
jo
arpl
imul
mov
push
fadd
and
mov
inc
outsl
dec
frstor
pusha
push
push
int3
xor
mov
inc
xchg
mov
sub
inc
pop
pop
push
or
and
lds
pop
inc
loope
ja
lret
pop
push
or
notl
jns
xchg
fnsave
imul
js
ret
sub
shlb
inc
mov
add
push
loope
shrl
movsb
mov
jge
xor
or
mov
addr16
cmp
mov
ret
xor
xor
and
push
lods
rclb
and
dec
scas
dec
add
divb
pop
pop
stos
pop
rcl
xor
aad
jbe
in
mov
lret
jnp
jge
sub
ret
lea
mov
decb
mov
fstpt
add
in
sbb
loope
data16
adc
or
test
lcall
push
mov
sbb
jmp
xor
cmpsb
lds
aam
fcmovnu
fisttps
roll
adc
or
xchg
xchg
dec
fiaddl
test
aad
pop
clc
sub
daa
and
mov
jne
int
push
and
pushf
xchg
push
jge
incl
movsb
lret
je
stos
je
fs
into
xchg
sub
mov
or
leave
nop
mov
ds
faddp
dec
mov
push
or
jle
cmp
jl
mov
lcall
sarl
ret
and
add
ds
dec
nop
rcrb
pextrw
sbb
fsubrs
push
mov
pop
ds
push
xorb
fmull
popf
push
js
xchg
or
jae
xor
jle
mov
sub
xlat
inc
adc
lcall
lock
cmp
push
fwait
dec
adc
aas
adc
cmc
int
enter
mov
outsl
lods
pushf
xchg
push
inc
int3
xchg
icebp
push
jns
es
and
pushf
daa
or
pusha
in
jae
push
xor
out
add
cs
loop
cmpsb
cld
iret
xlat
xsave
ror
cltd
sbb
mov
push
faddl
mov
pop
mov
inc
pop
cli
mov
mov
rolb
je
fisttpl
xchg
jbe
gs
mov
xchg
adc
in
xchg
or
imul
mov
dec
dec
movb
imul
pop
push
hlt
clc
shrl
aaa
mov
push
mov
aam
cmpsl
enter
xor
fdivrs
imul
in
int3
and
jae
fs
inc
idivl
push
iret
arpl
jne
adc
pop
inc
int
stc
push
jge
jl
and
jl
ds
mov
sub
inc
shl
mov
dec
shl
aam
inc
cwtl
ret
xchg
leave
adc
repz
repz
pop
inc
inc
sub
les
push
jae
jb
pop
add
ret
jle
xchg
pop
rcrl
push
and
or
into
mov
hlt
jg
sbb
shr
pop
sbb
inc
fcoml
add
jle
ret
xchg
aaa
sbb
je
pop
fwait
inc
dec
icebp
pop
int
pop
mov
orps
clc
pop
data16
pop
repz
pop
fwait
xlat
adc
pop
ds
mov
pop
or
fcoml
or
jno
adc
dec
mov
and
je
lahf
loop
add
imul
and
mov
repnz
push
push
ja
or
sbb
push
shrl
push
imul
sbb
test
mov
lret
leave
movsb
pop
andl
test
push
xchg
insl
sbb
lret
jg
gs
cmp
push
mov
cmp
scas
sub
ds
mov
xlat
inc
test
sub
sub
inc
fdivrl
mov
push
add
pop
inc
ds
dec
adc
add
rcll
mov
inc
sub
iret
mulb
dec
adc
xorl
jbe
xor
sub
int3
xchg
dec
repnz
rcrb
sbb
bound
and
jp
pop
inc
jmp
imul
rcll
sub
loope
int3
rcr
push
daa
and
lea
int
pop
jecxz
push
pop
out
lds
mov
rcrl
or
scas
in
adc
xchg
or
shrl
ds
int
scas
testl
insl
mov
fildl
xchg
sti
xchg
push
jb
jne
cmp
sbb
mov
cmp
rcll
sbb
and
clc
xor
mov
or
jge
and
lds
xor
xor
filds
das
mov
dec
pop
shlb
sub
sahf
lret
adc
mov
xlat
fsubs
repnz
loopne
int3
or
aad
pop
sti
ret
in
xor
cmpsb
cmp
cwtl
xor
je
sbb
mov
adc
add
mov
fldcw
push
xchg
jp
out
cwtl
shl
andl
es
in
movsl
sub
inc
mov
test
int
jl
arpl
shrb
adc
leave
mov
data16
std
mov
pop
push
add
push
push
dec
and
sti
jmp
jmp
sti
in
popf
dec
loope
fprem1
fdivrs
dec
xlat
pop
xchg
jae
subb
and
test
mov
or
mov
test
mov
mov
push
jp
pop
add
inc
mov
pop
arpl
pop
ret
repz
sbb
xor
mov
arpl
enter
enter
jmp
add
push
lea
pusha
scas
lret
and
or
ljmp
mov
cmp
pushf
lcall
je
sbb
mov
pushf
insb
xor
and
cmp
lahf
gs
push
test
shrl
push
cmpsl
sub
loop
lret
cmp
ret
or
jno
adc
inc
insl
repnz
das
out
cmp
sub
add
or
sahf
fnstcw
pop
arpl
scas
sbb
cli
imul
insb
xchg
lods
cmpb
sbb
or
dec
cltd
adc
sbb
movsb
mov
or
or
cmp
pushf
test
cmpl
lret
sti
jne
ljmp
add
or
jmp
lds
xchg
loope
dec
pop
int
pop
mov
outsb
das
pop
add
aas
ret
je
xchg
hlt
in
adc
and
in
pop
lods
push
repz
adc
adc
fadd
push
enter
int3
call
pop
mov
sbb
clc
ljmp
lods
adc
mov
push
daa
aam
addr16
mov
les
stos
lods
add
cmp
ja
lods
inc
movsb
mov
adc
sub
pop
ret
pop
jns
and
xchg
std
sbb
iret
dec
and
cmpsb
jmp
lahf
cmp
popa
jae
mov
mov
jno
scas
rclb
cmp
inc
pop
daa
je
movsb
mov
mov
mov
stos
lret
push
jle
lret
xor
mov
out
push
mov
imul
xor
mov
and
mov
sub
pushl
inc
add
push
into
sbb
cli
lcall
dec
stos
outsl
sub
sbb
or
gs
data16
insl
fistpl
imulb
xor
loop
cmc
arpl
add
mov
cmp
sbb
sbb
andl
leave
mov
bound
in
outsb
jmp
mull
outsl
jbe
subl
loope
ds
adc
psubb
adc
jo
xor
pop
and
mov
stos
sbb
icebp
les
mov
push
inc
ja
inc
adc
and
les
outsl
jo
mov
sbb
sub
jae,pt
test
stc
mov
mov
inc
xlat
gs
push
sar
mov
lods
xchg
cmp
pop
cmpsl
mov
int3
movsb
int
das
jnp
pop
and
gs
mov
mov
adc
aad
cmc
push
and
fidivrs
call
mov
add
pop
popl
xchg
mov
into
add
jbe
mov
lock
lock
or
bound
rorb
mov
or
arpl
test
in
fwait
xor
jbe
daa
aaa
mov
fcoml
jne
int3
mov
test
dec
push
es
jnp
push
leave
test
mov
sbb
and
or
arpl
stos
nop
and
movsl
popa
in
sti
pop
mov
xor
add
repz
cld
insb
mov
shl
mov
leave
cltd
and
push
rorb
adc
ja
mov
daa
and
fdivrs
das
sbb
fsubs
xchg
ret
mov
inc
lods
loop
mov
push
in
mov
fs
aas
jnp
imul
mov
mov
shrl
pusha
mov
roll
scas
ss
ljmp
sub
mov
mov
xchg
xlat
ds
inc
jg
ds
les
stc
fcomp
fcmovb
cmpb
movsb
pop
xchg
cli
push
hlt
dec
mov
push
dec
push
push
add
jns
cli
cmp
and
rclb
fisttpl
sub
pop
adc
sub
je
mov
repnz
es
aam
pushf
xchg
and
outsl
ljmp
or
test
jl
aad
lea
outsl
jno
dec
sbb
in
rolb
call
shrl
in
bound
adc
loop
pushf
xchg
push
lcall
adc
xor
scas
hlt
gs
adc
mov
sarl
dec
movsb
jp
cmc
sub
or
adc
sbb
ss
jns
pop
and
fidivrs
xchg
scas
std
fiaddl
cmp
mov
test
cmp
call
or
inc
push
roll
shlb
cmpsb
fistpll
inc
adc
adc
rorl
jmp
jnp
out
js
adc
dec
jge
mov
add
or
mov
imul
xchg
adc
cli
test
shll
push
cmp
rorl
or
cld
dec
fcmove
out
mov
test
jmp
movsb
add
fistpll
lods
jl
ss
les
sbb
xor
push
leave
fisttps
dec
jl
loop
add
jne
push
mov
sbb
or
adc
jg
test
in
repz
sub
cs
iret
insb
push
xchg
pop
mov
fnsave
jmp
aam
jle
out
xor
cld
sub
es
sub
imul
imul
insb
into
std
dec
inc
jp
push
std
repnz
lretw
lock
addb
jle
call
test
cmp
inc
loope
lock
ss
lcall
hlt
in
fidivs
aaa
fnstenv
xchg
rcrb
cmpl
lret
push
cmp
mov
outsb
jo
adc
addl
bound
bound
rcr
push
sub
ja
jne
push
or
scas
mov
and
cld
ds
lock
aas
sub
cmp
mov
xchg
cmp
pop
push
lds
lret
lds
repz
cmp
mov
sub
ja
mov
sbb
in
rcl
shl
aam
push
mov
leave
jle
call
add
insl
pop
push
imul
add
shl
xchg
scas
add
fcmovb
mov
mov
loop
mov
sub
sbb
loop
fstps
ja
out
loop
xchg
cmpb
movsb
pop
inc
or
push
lea
pushf
cld
mov
jno
out
mov
or
lea
fisubrs
adc
dec
xchg
clc
cli
fldcw
in
test
stos
and
jle
fldt
mov
in
jmp
bnd
mov
je
frstpm(287
loope
push
in
sub
mov
inc
loop
xchg
loope
scas
mov
enter
jge
ret
std
fmulp
mov
push
aam
mov
mov
xor
in
or
repnz
mov
popa
out
movsb
addr16
imul
pop
push
mov
dec
ffree
lcall
in
ret
inc
push
fnstcw
xchg
test
enter
in
lods
add
jno
ljmp
stos
mov
test
xorl
dec
pop
sbb
sub
xorb
jo
jnp
int3
mov
and
andl
flds
cli
orl
imul
call
imul
adc
inc
lea
xor
dec
cmp
cmpsl
lret
lods
sahf
into
iret
sbb
mov
in
je
movl
jo
fnsave
adc
push
inc
cmp
adc
sbb
in
movsb
ljmp
loopne
xchg
mov
dec
stos
lahf
inc
movl
and
mov
lds
jb
xor
add
cld
movsl
cmp
mov
mov
out
or
orb
pop
div
sub
push
mull
popf
lret
mov
jmp
xor
pop
push
and
cltd
fistl
in
mov
mov
push
mov
fdivr
and
sbb
xor
xchg
je
outsl
jbe
xchg
mov
xor
call
push
cli
cwtl
ret
push
fildl
jno
fnsave
inc
test
imul
xor
sahf
jecxz
mov
push
pop
xchg
mov
dec
filds
std
sbb
xchg
pop
dec
cmpsb
and
pop
das
out
push
push
xchg
add
rcll
dec
sbb
dec
cmpsb
jb
xchg
push
mov
cmp
aad
dec
xchg
rcrl
cmp
add
jg
adc
or
cmp
aas
out
mov
push
in
sub
mov
mov
or
cmpsl
xchg
dec
jmp
out
loop
cwtl
or
dec
mov
xor
mov
mov
ret
insb
sbb
cwtl
leave
outsl
lahf
std
out
sub
cmp
sbb
ja
pop
es
sbb
fldcw
insl
mov
mov
or
add
xchg
int3
pushf
pop
fmulp
pop
jb
cmp
pop
sbb
mov
pop
out
int
pop
lock
xchg
pop
arpl
ja
push
inc
pop
jg
stos
out
out
jecxz
push
pusha
sti
and
add
push
mov
cmp
pop
cmp
dec
pop
inc
pop
stos
mulps
out
imul
add
mov
dec
lods
scas
ss
fnsave
movsl
fadds
sti
gs
mov
pop
mov
dec
dec
notl
jmp
xor
pop
inc
popa
jl
xchg
inc
js
push
test
sub
xlat
cmc
sbb
mulps
xchg
jecxz
xchg
pop
adc
push
outsb
xlat
in
pop
enter
jbe
adc
jb
inc
sbb
cmc
ret
pop
aas
mov
sbb
push
dec
sub
cmp
loop
dec
sub
push
or
in
mov
mov
jns
sbb
insl
mov
cmp
adc
push
fwait
and
lret
call
add
cli
out
cmp
pop
xchg
in
ficoms
add
adc
push
add
pushf
orb
icebp
call
test
loop
cld
mov
mov
fildl
mov
mov
inc
xchg
mov
mov
add
push
xor
in
sub
cltd
mov
cmp
popf
mov
jne
pop
push
je
out
jge
pop
cwtl
outsb
movzbl
xchg
mov
sbb
add
aad
push
mov
aad
scas
mov
jne
fldt
dec
mov
mov
in
das
js
in
push
out
dec
push
push
movsb
imul
mov
neg
lcall
scas
push
incl
std
fmulp
jle
pop
xor
cmpsl
pushl
xchg
sub
repz
cld
inc
fld
pusha
xor
or
and
scas
stos
adc
jo
clc
dec
cmp
or
add
es
inc
mov
adc
xor
and
adc
xchg
mov
xor
add
sub
or
and
jg
xor
adc
ss
cmpb
dec
cmp
jnp
fld
ret
in
icebp
add
inc
inc
sti
push
push
inc
ret
aaa
inc
sbb
xor
es
inc
lock
mov
jb
cs
ljmp
lock
add
mov
push
mov
shlb
ljmp
mov
jg,pt
ljmp
push
pop
rcrb
pushf
xchg
daa
test
dec
adc
cmpsb
pushf
sbb
andl
adc
ljmp
xchg
jae
or
mov
jle
fstpl
imul
stos
sub
in
shll
mov
pop
mov
pop
and
jnp
stos
cmp
mov
and
mov
rcr
imul
add
xchg
dec
xchg
inc
dec
cmpsb
push
jne
add
jmp
dec
loope
fucom
push
rolb
inc
rcrl
fstps
pop
mov
aam
movsl
jg
nop
push
rorl
aad
sbb
fnstsw
pushf
and
xor
xchg
add
add
bound
adc
mov
repz
lea
sbb
cmpb
test
test
lds
ja
push
jns
pop
ret
mov
jne
aaa
aaa
icebp
xor
out
ss
movsb
lret
in
pop
jecxz
adc
sub
fdivrs
add
je
dec
mov
sbb
mov
shrl
push
imul
and
or
inc
add
cmp
xchg
les
shrl
lahf
cmp
mov
mov
sbb
cmp
cmp
adc
push
lret
frstor
mov
clc
inc
dec
push
mov
mov
in
stos
cli
std
ret
mov
mov
call
and
aad
jne
repnz
and
mov
test
or
pop
adc
je
leave
cltd
pop
mov
in
ljmp
inc
fsubr
adc
gs
ds
sub
cld
ja
aam
mov
dec
insl
mov
shlb
fcmovnb
fnsave
jne
in
adc
push
pop
aas
cmp
arpl
pop
mov
rcrb
mov
jns
cmp
aas
or
jecxz
mov
je
cmp
repnz
ja
cmp
pop
rorb
scas
and
imul
incw
daa
mov
outsl
adc
add
leave
jnp
jmp
out
xchg
scas
call
jno
loop
push
add
jnp
arpl
bswap
andb
popa
clc
pop
in
lds
xor
mov
cmc
inc
out
dec
mov
fldcw
mov
add
cmpsb
mov
mov
repnz
fbld
sub
mov
cs
mov
and
stos
mov
inc
xchg
aaa
cmp
mov
jg
aad
lock
cwtl
xchg
jmp
sti
cmc
out
lods
outsl
sar
lcall
pushf
inc
ds
jg
sbb
cmpsl
cmp
inc
stc
sbb
insl
mov
add
cld
cmc
rorl
inc
int3
jge
add
sbb
cmpb
push
sarb
shl
and
mov
in
ds
loope
push
xlat
mov
cltd
jno
inc
in
sub
push
xor
mov
ja
jmp
cwtl
nop
adc
scas
jno
in
out
test
lods
sbb
xchg
adc
mov
and
xor
dec
sbb
lahf
pop
inc
push
mov
lcall
xor
adc
mov
pusha
fs
idiv
pusha
ljmp
icebp
in
sbb
jo
and
shlb
xor
mov
mov
cmpsl
frstor
mov
xchg
jbe
rorb
adc
mov
cmc
mov
inc
or
push
mov
inc
dec
lods
cmpsl
push
add
adc
inc
leave
lods
push
rcll
loop
mov
mov
push
mov
push
and
in
or
lahf
pop
adc
iret
mov
mov
testl
xchg
and
sahf
cmpsl
je
dec
dec
popf
rsm
inc
add
stos
jl
icebp
or
daa
aad
or
iret
push
test
sbb
sbb
fisttps
ss
xor
ficomps
hlt
push
std
dec
and
bound
dec
enter
lcall
sbb
mov
into
xor
movsl
cmp
jnp
out
movl
cltd
stos
fdivs
aaa
fdivrs
adc
xor
or
mov
insl
leave
fwait
adc
fimuls
or
add
adc
cli
movsl
popf
mov
xor
sahf
int3
sbb
or
sub
shr
pop
mov
cli
push
les
mov
jns
mov
icebp
mov
mov
test
andl
adc
push
jno
out
je
or
cmp
or
adc
cmp
fbstp
mov
push
push
push
addr16
mov
jo
lods
pop
sbb
pop
rolb
ja
xchg
test
lock
mov
stc
dec
std
jge
sub
fcmovb
and
push
cmp
fdivs
stos
pushf
pop
push
repnz
pop
jae
mov
cwtl
jmp
sbb
inc
xchg
and
dec
daa
arpl
add
dec
dec
sub
std
mov
pop
mov
dec
ret
adc
orl
cmpsb
mov
push
mov
lods
pop
sub
in
or
shll
inc
jle
insl
loope
lods
pop
pop
push
aam
pop
stc
xchg
sub
xlat
imul
out
daa
insl
scas
shll
pop
sbb
or
xor
dec
add
sub
mov
scas
scas
test
push
fchs
mov
out
loop
into
bound
mull
xor
rol
cmp
out
mov
dec
out
data16
imulb
jmp
repnz
les
xor
fmuls
mov
pusha
nop
jl
pop
ret
or
sub
rep
out
in
push
add
sbb
jl
ret
cmp
movsb
mov
pop
int
cli
cmc
mov
sbb
iret
push
adc
jp
add
adc
sbb
fcoml
push
and
mov
dec
ret
pop
imul
mov
push
adc
mov
scas
mov
inc
mov
sbb
sti
jae
jae
lret
mov
add
outsl
pushl
sub
inc
cmp
and
xchg
call
adc
in
sysret
mov
mov
jmp
xlat
push
ljmp
loopne
aas
mov
jno
mov
lods
call
push
cs
xorb
mov
sahf
sbb
or
fcmovb
mov
pop
jb
jb
and
push
icebp
rclb
sub
add
aam
mov
cmpsl
lods
jne
and
or
mov
add
dec
xor
call
mov
test
push
inc
fstpl
jge
scas
ret
nop
stc
jl
cmp
lods
push
or
fsubs
sub
cmp
popf
sahf
sbb
das
roll
mov
out
sti
pusha
mov
aam
push
push
sbb
mov
ja
adc
cmpsl
pop
inc
adc
nop
in
jmp
notl
lods
fsubl
hlt
xchg
cmp
iret
adc
xorb
ret
aaa
test
cmp
jo
xchg
xor
mov
add
lret
ds
daa
out
mov
pop
sub
out
xor
sti
movsb
ja
dec
inc
adc
push
test
insl
xchg
loope
data16
sbbb
andl
inc
jo
aad
loop
int
or
push
into
sub
mov
in
popf
pushf
fisubrs
fldcw
and
ficompl
jle
lods
mov
iret
push
test
loopne
imul
jae
xor
jmp
xchg
or
jb
fldt
push
orb
out
sbb
outsb
mov
fs
mov
jo
data16
in
jnp
push
push
loopne
addl
push
sbb
inc
cli
dec
adc
and
es
es
repz
pop
jl
in
lods
mov
lods
lds
hlt
cmp
jle
mov
loop
insl
jmp
jno
sti
cmp
fsubrl
mov
jo
ds
iret
or
repnz
stos
xor
mov
mov
mov
xor
sub
repnz
ss
jno
out
push
std
push
ja
xchg
mov
fldcw
add
rolb
nop
sahf
cmp
sbb
das
in
or
icebp
stos
jae
mul
sub
mov
enter
jmp
dec
or
cltd
imul
fimuls
xchg
lock
sub
and
out
adc
shlb
out
push
fs
cli
mov
adc
hlt
sbb
out
jno
bound
push
cltd
push
cwtl
sub
pop
aas
ret
fs
movsb
cmpsb
iret
into
adc
fwait
test
mov
insb
in
dec
xor
insb
sbb
data16
out
movsb
xor
adc
push
das
cwtl
cmp
dec
loop
mov
push
cli
aad
dec
idiv
sub
dec
cltd
fmuls
push
adc
into
ljmp
adc
push
gs
sbb
mov
jp
movsl
pop
cmc
stc
shr
dec
sahf
jae
lret
cs
pop
inc
sbbb
inc
jo
push
lods
pop
xchg
ja
add
add
push
es
nop
jnp
stc
xor
negb
jmp
std
mov
outsl
out
mov
repnz
lahf
leave
xorl
ds
jbe
pusha
add
inc
jl
stc
into
in
inc
sahf
sbb
jbe
mov
sbb
movb
into
jo
in
inc
push
shrl
pushf
mov
out
sub
sub
add
mov
mov
xor
xor
mov
add
inc
insb
int
sub
mov
cmp
jle
stos
jge
push
out
pop
push
sbb
in
lds
and
pop
mov
negb
stos
fnstcw
cmp
pop
outsb
mov
add
popf
lods
xor
dec
adc
fcompl
or
and
repnz
mov
gs
cmpsb
daa
sub
jne
addl
mov
in
imul
cmp
je
sahf
jle
jg
sarb
lretw
push
mov
loope
mov
call
xchg
jecxz
xor
pop
inc
pop
std
std
in
inc
in
inc
sbb
mov
rorb
sbb
mov
pop
inc
inc
jg
data16
or
jg
fsub
mov
dec
inc
pop
rol
mov
data16
loop
pop
jne
sbb
movl
popf
into
xchg
loop
mov
dec
mov
push
inc
push
in
test
fdivs
xor
repz
mov
aas
loop
jo
jp
jns
adc
or
pop
mov
dec
mov
pushf
sbb
xchg
xchg
mov
mov
inc
cmp
fists
mov
mov
adc
mov
or
push
xchg
and
incl
into
shl
out
push
xchg
jne
mov
inc
push
ja
arpl
movsl
loop
lds
sbb
cltd
adc
rol
scas
sbb
jns
pop
jns
shlb
pop
sbb
adc
sub
ss
and
enter
outsl
add
jp
sub
out
dec
push
cmpsl
pop
sbb
das
scas
cmpsb
push
adc
sti
cmp
ss
outsb
mov
iret
incb
lods
popf
add
js
inc
or
pusha
cmp
mov
ss
or
dec
cld
test
jbe
adc
pop
fldt
or
mov
scas
push
std
sarb
gs
push
lret
lahf
fs
aaa
ficompl
into
loopne
je
ja
lcall
sub
js,pn
js
xchg
jnp
sbb
cmpsb
lret
shll
je
inc
ss
addb
jl
or
loopne
out
xorl
cmp
minps
rcrl
dec
adc
outsl
andb
arpl
adc
sub
jb
cmp
sub
mov
lret
in
out
sbb
outsl
ficoms
or
iret
xchg
pop
push
xor
fistpll
push
sbb
dec
jle
fdivr
mov
mov
dec
inc
push
cmpb
jg
pop
lcall
push
inc
adc
pop
jne
ret
jp
mov
pushf
insl
mov
jne
out
loopne
jns
pop
leave
xchg
inc
cmp
cmp
mov
and
pusha
loope
stc
push
pop
rol
push
ret
add
inc
or
mov
shlb
out
or
test
fidivl
push
or
and
xor
ja
and
or
rorb
into
jmp
push
cmpsb
jecxz
imul
iret
test
daa
out
and
inc
arpl
in
aad
mov
jbe
testb
and
in
add
mov
jns
sub
fdivl
push
gs
out
xor
incb
pop
pusha
lcall
das
pop
iret
fistpll
xor
popa
lea
mov
fadds
push
insl
dec
push
lcall
test
xlat
sbb
enter
xor
test
lret
xor
xchg
and
addr16
lds
in
inc
jne
nop
cmp
jge
push
jle
pop
lcall
std
dec
fldl
orb
sbbb
jg
sbb
fwait
add
fistpl
outsb
stc
push
pop
int
pop
rcr
mov
and
lcall
mov
adc
shlb
repz
sub
add
xchg
xchg
push
and
sbb
jnp
xchg
jg
mov
fmull
mov
popa
xchg
aas
scas
mov
lret
add
mov
mov
mov
ljmp
or
cs
xchg
movb
out
push
js
cmc
mov
push
cmp
test
jle
push
pop
repz
movsl
mov
xlat
pushf
push
sbb
sub
or
mov
xchg
leave
jno
sub
sarb
mov
lret
cs
into
scas
sub
pusha
dec
sahf
push
cmc
sahf
out
cwtl
fsubs
stos
jno
test
fucomi
out
test
ret
jmp
mov
push
movsl
add
push
in
pop
mov
js
jnp
in
nop
sbb
pop
adc
rcrl
iret
xchg
ret
add
push
jns
push
inc
push
enter
out
fisttpll
outsb
jb
adc
push
shll
xor
push
or
cld
in
in
and
movsb
mov
outsb
push
xor
cmovb
xor
ljmp
mov
stc
push
mov
adc
sub
sub
xor
outsb
shrl
lea
scas
mov
pop
stc
aaa
xchg
lea
xor
and
loopne
out
cmp
xor
jns
push
popa
cmp
mov
test
aaa
fcoms
mov
cmpsl
dec
shl
pop
sti
mov
sbbb
mov
inc
test
xchg
adc
pop
cmc
sbb
xchg
sub
enter
lret
mov
pop
and
addr16
mov
sub
mov
xor
pop
dec
jno
in
mov
repnz
out
adc
jmp
cmp
dec
test
add
jb
or
mov
cmp
stos
push
xorl
daa
int
push
bound
icebp
jp
test
fimull
cmp
fnsave
cmp
mov
fwait
pop
lods
jns
sbb
and
test
test
push
in
test
stc
xor
xchg
nop
xor
push
cs
scas
enter
movsb
sti
repz
dec
pushf
jge
test
mov
and
push
push
and
push
adc
fbstp
or
lock
sub
sahf
push
sbb
xchg
jmp
lcall
inc
xor
out
adc
cmpsl
mov
stc
cmpsb
pop
inc
and
adc
cmpsb
push
fisttpl
int3
jo
push
data16
pop
movsb
addr16
push
je
inc
pop
fstps
ljmp
repz
adc
iret
into
inc
pop
and
mov
pop
xchg
bound
ror
addr16
dec
jne
pop
adc
arpl
fistl
mov
int
lea
rcr
xchg
scas
inc
and
in
mov
test
in
sbb
mov
push
mov
addb
clc
inc
mov
jp
hlt
in
loop
sbb
bound
or
sbb
and
or
adc
aad
push
pop
xor
call
gs
dec
push
cmpsl
push
and
jmp
std
pop
sbb
sub
sbb
pop
push
lock
insb
js
insl
cmp
in
push
adc
sbb
fsubr
into
sub
ffreep
jp
mov
xorb
add
pop
sbb
dec
movzbl
cmp
and
mov
jbe
cmp
add
xchg
add
cwtl
andb
mov
je
loope
clc
jo
pop
fists
movsl
lret
cmovo
enter
sub
cmp
mov
xchg
insl
push
shrb
shrb
fxch
sbb
into
in
sub
out
cmp
or
test
pop
mov
mov
movsl
sti
fwait
cmp
sbb
cmpsl
lcall
cwtl
outsb
pop
adc
aam
movsl
shlb
fcomps
pushf
push
jge
js
repnz
xor
outsl
and
int
bound
jno
movsb
movsb
movsl
ret
sub
imul
lods
adc
mov
ljmp
push
decl
sub
cmp
pop
iret
xor
mov
or
lahf
cmp
pop
mov
leave
mov
test
pop
push
push
pop
xor
test
dec
and
mov
pop
xchg
mov
sbb
stos
push
daa
fsubl
mov
sbb
cmp
cs
fld
sbbl
stos
ret
push
pop
ljmp
out
xor
cmp
push
ret
cmp
scas
xchg
push
enter
mov
xor
pusha
outsb
adc
inc
xor
rorb
inc
je
mov
jecxz
in
xchg
cmpsl
adc
je
aas
les
mov
dec
sub
pop
xor
daa
mull
gs
je
je
mov
jnp
push
pop
sahf
ljmp
jge
push
call
movsb
popa
pop
mov
and
ret
fists
adc
les
push
sbb
adc
mov
mov
popf
cwtl
push
pop
outsl
aam
sar
push
and
jnp
sub
sbb
je
or
jo
fdivr
mov
scas
xor
aas
popf
mov
or
mov
out
mov
dec
sub
xchg
mov
pop
xchg
adc
mov
push
push
clc
shlb
roll
fildl
jl
lcall
jecxz
mov
jns,pn
jns
xor
push
jnp
pop
ljmp
sbb
sti
sahf
into
dec
les
xchg
xor
inc
pop
scas
fisttps
popa
fdivs
adc
movsb
loope
incl
imul
fimuls
hlt
xchg
stos
sbbl
mov
sti
fldt
inc
lods
shrb
push
in
call
inc
and
jb
mov
or
lret
les
xchg
push
fnsave
inc
test
mov
dec
cld
push
fstl
imul
or
arpl
jb
push
daa
ljmp
pop
cmpl
sub
push
mov
fstpt
dec
mov
dec
sbb
adc
or
cmp
push
sub
out
jnp
rorb
mov
ss
jns
ret
xchg
int3
js
and
pop
pop
insl
insl
or
and
pop
aas
call
nop
cmpsb
xchg
test
inc
inc
pop
insb
in
frstor
cmpsl
pop
loope
jle
mov
jae
pop
push
nop
int3
insl
fsubl
lcall
xchg
adc
sbb
push
in
sub
subb
scas
mov
pusha
add
jl
test
inc
pop
push
jecxz
sbb
and
lret
jl
scas
out
stc
push
jnp
insb
shl
call
and
lds
aam
xor
and
or
lock
mov
mov
js
inc
dec
cld
cmpsb
das
repz
ficoml
pop
in
lahf
xor
adc
shrb
stc
mov
mov
fisttpll
mov
sbb
xchg
sahf
sub
lahf
add
repnz
mov
repnz
xor
xor
negl
pop
cld
pop
jp
testl
adc
pop
sbb
das
icebp
shrl
cmp
inc
sub
cmpb
mov
jno
sar
xchg
mov
sbb
sbb
cmpsb
push
jno
nop
fistpl
fdivp
cmp
push
sub
mov
push
sub
xchg
cmpsl
in
jmp
adc
mov
inc
std
xchg
pop
fsubrs
sub
pop
cmpsl
jne
stc
xchg
imul
mov
shufps
repnz
roll
outsl
sti
lcall
aas
or
add
push
xchg
int3
shlb
cmp
cmpl
or
jae
sub
inc
ret
adc
in
xor
add
inc
push
lods
or
add
inc
les
push
sbb
dec
mov
jns
scas
aaa
sbb
stos
mov
out
in
mov
inc
push
aam
lods
xor
push
pop
pop
icebp
pusha
fdivrs
cmp
and
pop
imul
test
sub
add
cld
cwtl
ficomps
jp
js
sarb
push
and
scas
test
mov
test
pushf
and
shrl
mov
and
fwait
mov
add
out
xchg
xor
mov
arpl
in
pop
inc
jmp
xor
cmp
push
and
cltd
sbb
sub
pop
mov
popa
xchg
jge
push
pop
adc
popf
data16
fwait
push
push
pop
popf
mov
xchg
dec
ljmp
dec
pop
dec
inc
shrl
add
pop
bound
lods
push
nop
stos
push
mov
nop
sbb
ss
xchg
inc
popf
push
adc
movsb
pop
clc
pop
test
sbb
pop
imul
dec
std
mov
xchg
push
cmpsl
fisubs
jg
jl
lret
or
iret
int
aas
ds
mov
cmpsb
cli
or
push
je
pop
stos
dec
cmpb
mov
jg
lahf
ja
inc
scas
ljmp
pop
repnz
dec
jo
loopne
dec
xor
movsb
popa
jge
enter
inc
jge
in
jl
push
fistpl
aad
xor
push
or
ja
cmc
push
mov
mov
rcrl
inc
rcrb
sub
dec
adc
pop
rcll
call
loop
mov
add
push
jecxz
nop
sub
jns
jnp
add
cmp
sub
jg
iret
add
test
jns
cmp
lret
test
test
push
jp
mov
or
repz
inc
and
fidivs
pushf
sbb
pop
mov
mov
out
cmp
sbb
cmp
adc
add
lock
push
popa
and
push
xchg
rorb
sub
jae
push
in
jno
xchg
and
cmpsl
in
roll
mov
xchg
sub
adc
insl
add
jp
out
cmp
inc
ret
jbe
aad
add
in
insb
mov
es
fsubrs
rolb
push
lret
xchg
xor
aaa
lods
icebp
adc
pop
inc
inc
dec
test
dec
jmp
jns
test
jl
mov
dec
and
stos
pop
jnp
cmp
subl
fs
imul
mov
hlt
mov
repz
insl
push
push
inc
pop
adc
cmp
mov
push
push
add
adc
and
pop
cmp
pop
pop
and
in
cli
sub
inc
mov
pop
cmpsl
inc
adc
das
sahf
scas
fcomip
push
inc
mov
lds
adc
sbb
loop
mov
mov
int3
mov
mov
sub
push
pop
lds
xchg
jo
push
mov
mov
lods
lcall
dec
xchg
hlt
jmp
mov
repnz
pop
enter
jg
arpl
sbb
std
push
pop
and
cwtl
das
das
iret
mov
cmp
fidivrl
lods
enter
sub
xor
mov
sub
jp
mov
xor
push
adc
repnz
cmc
adc
mov
fcmove
shlb
xchg
roll
jg
adc
and
cmpsl
dec
xchg
pop
xlat
pop
sbb
loop
jg
mov
cmc
fiaddl
je
fistl
add
sahf
hlt
xor
mov
mov
roll
pop
shlb
inc
mov
mov
add
mov
into
push
push
sti
lds
cmp
aaa
cmp
jmp
negl
cmp
fadds
mov
push
push
pusha
and
stos
and
pop
ja
xchg
cmpsb
les
add
fcomps
push
shl
and
repnz
or
aaa
insl
jnp
xor
push
xchg
lahf
mov
clc
sbbl
sti
push
repz
pop
outsl
or
dec
andl
dec
lods
mov
xchg
iret
cmpsb
aad
dec
mov
lcall
cmp
add
xchg
repz
into
jecxz
out
enter
add
int3
call
fwait
pop
shlb
in
std
shlb
dec
push
adc
mov
dec
mov
scas
inc
pop
or
cmp
fnsave
lret
or
xchg
push
mov
in
ss
pop
xchg
mov
sub
stos
jb
aad
cwtl
jecxz
lret
test
into
sbb
cmp
pop
cmp
xchg
ds
push
psubw
out
jae
or
ret
imul
test
and
push
mov
outsl
mov
dec
push
cld
out
ficoml
fsubl
imul
xor
push
cmp
call
pusha
jecxz
jecxz
sti
out
sbb
test
dec
scas
into
insl
lret
loopne
movsl
lret
mov
gs
jmp
mov
into
push
enter
mov
stos
gs
ja
pop
and
push
fwait
and
jnp
jmp
cmc
and
shll
xor
add
outsb
js
add
inc
sub
loopne
cmp
adc
adc
jno,pn
inc
push
xor
or
mov
jb
test
xor
add
in
mov
inc
xchg
mov
ss
dec
clc
enter
pop
dec
es
mov
test
and
inc
es
repnz
aaa
test
cmp
mov
and
cmpl
ja
icebp
pop
dec
psraw
or
jo
call
fnstcw
dec
push
out
loope
or
fldl
cmp
cs
aam
sarb
in
mov
scas
push
mov
mov
push
jl
cmpsb
push
inc
jnp
scas
out
jbe
loop
nop
pop
repnz
in
cmp
push
xchg
loop
add
adc
imull
iret
iret
mov
pop
xlat
adc
shlb
rclb
sbb
and
pop
sbb
cmp
cmp
testb
loop
pushf
in
lahf
sub
sub
je
cltd
or
dec
je
test
repnz
loop
lret
fwait
bnd
xor
xor
in
mov
push
pushf
jne
mov
pop
inc
push
fisubl
xor
addr16
movsl
aam
jg
sbb
shrb
fstpl
or
es
mov
daa
mov
orb
les
icebp
cld
jg
sbb
fs
mov
insb
and
call
ds
lods
inc
and
clc
jle
jne
aad
out
out
pop
jmp
xchg
mov
mov
popa
cmpl
push
inc
mov
cmc
lds
and
mov
inc
movsb
jns
xor
push
cmp
mov
in
.byte
