cmp
dec
pop
xchg
cmp
sub
inc
aas
mov
cltd
and
dec
in
or
neg
xchg
mov
and
repnz
sub
sbb
loope
push
pop
sub
cli
sub
jecxz
sub
enter
adc
arpl
mov
mov
rcr
pusha
sbb
leave
adc
cmp
push
in
adc
smsw
fsubrs
jecxz
add
add
inc
xor
jnp
into
xor
push
lret
xchg
fldt
imul
fnstenv
movsl
jo
data16
into
fcmovne
adc
es
movsl
push
xor
mov
fcoml
aas
jns
jl
jno
push
mov
adc
fstpl
andb
lret
fildll
sbb
data16
outsl
adc
stos
push
jbe
insl
sbb
insl
adc
insl
fidivrs
insl
sub
push
sbb
adc
pop
sub
pop
pop
fildl
mov
imul
aas
and
cmpsl
mov
out
sub
sub
xor
shll
sub
leave
push
push
jp
arpl
add
mov
add
ret
pop
mov
outsl
sbb
push
add
lcall
push
int
std
pop
scas
mov
mov
adc
jbe
icebp
and
repz
or
push
out
push
lds
or
imul
cmp
hlt
rorb
imul
enter
or
popa
mov
mov
fwait
ja
bound
pop
mov
cmc
push
popa
ja
mov
inc
addb
hlt
sub
insb
leave
inc
jne
fisubrs
push
sbb
aas
sub
fdivrs
push
jl
push
rcr
stos
in
add
cli
mov
or
std
push
cs
or
add
mov
mov
fisttpll
mov
daa
mov
movsb
cmp
add
fwait
addr16
adc
xchg
addb
repz
imul
pop
notl
fwait
popf
push
fcompl
outsb
and
dec
sub
jo
test
jno
jecxz
xor
mov
push
aam
adc
pushf
imul
outsl
pop
jle
popf
jnp
jp
push
in
jb
test
cmpsb
test
sub
data16
sub
sbb
cmp
mov
and
es
add
inc
fdiv
xor
daa
sbb
pop
sbb
push
xchg
sub
in
test
cmpsb
mov
int3
mov
mov
dec
mov
jb
cld
lret
test
out
push
cld
mov
fisubl
sar
mov
sub
adc
cld
sbb
jmp
jecxz
add
not
repz
lret
sub
mov
jp
xlat
xchg
imul
lods
adc
jle
ljmp
mov
lret
test
cmpsb
inc
adc
push
xchg
inc
push
jecxz
fimuls
mov
cmp
stos
popf
test
jbe
xchg
loopne
popf
dec
mov
inc
cmp
jmp
sahf
addr16
popa
dec
outsb
pusha
push
inc
lods
mov
jbe
xor
int3
adc
inc
fcom
sub
mov
add
inc
jo
pop
mov
pusha
ficoms
gs
out
cltd
add
outsb
dec
jl
sbb
in
jb
cld
mov
cld
mov
cld
repnz
push
jbe
mov
jno
push
jo
cmpl
iret
mov
push
ljmp
idivl
out
cmp
xchg
fildll
mov
xchg
cmpsb
imul
pop
icebp
xchg
fmuls
jle
dec
lret
lock
loopne
in
cvttps2pi
cld
adcl
int
add
aad
divb
push
adc
jl
out
jmp
cli
sbb
in
inc
aaa
cmpb
fwait
jecxz
ret
mov
mov
out
ss
out
ss
fbstp
std
je
fdivrl
xor
mov
cli
int3
test
fisubl
mov
popf
adc
out
inc
adc
aad
push
cwtl
call
add
frndint
dec
out
hlt
inc
in
sbb
ljmp
or
fs
faddp
xor
mov
test
push
pop
ror
or
pop
cmp
data16
jb
adc
push
gs
jmp
rcrb
cmpsb
adcl
int3
push
les
push
adc
dec
adc
ror
inc
sub
mov
sub
and
xor
push
fsubrp
fstl
adc
aad
rcl
sti
pop
out
add
test
jmp
das
fcoml
xor
out
pusha
adc
jb
and
and
ljmp
aaa
or
add
jnp
push
mov
sub
lahf
xor
jle
xor
imul
sub
scas
enter
jae
cld
cli
pop
sub
cmpl
jl
daa
fstpt
push
enter
ret
lret
cmp
dec
inc
sbb
mov
jno
or
push
fdivr
stos
icebp
mov
jle
mov
mov
jmp
je
fadd
push
xor
add
int3
cs
mov
rcrl
cmp
and
and
pop
loop
inc
pusha
call
push
jg
adc
push
enter
fwait
addr16
test
push
cmp
mov
mov
dec
adc
call
sub
fstpt
xor
out
iret
sub
sti
push
mov
and
ret
sbb
fwait
push
pop
repz
push
xor
dec
dec
mov
loopne
testl
test
lods
sub
or
in
andl
ds
das
cmp
adc
in
or
jmp
shl
jnp
cld
in
or
add
test
xchg
pop
or
mov
xor
inc
stc
xor
je
loop
mov
shl
inc
xchg
sub
dec
pop
lock
mov
dec
pop
out
inc
push
or
cwtl
push
or
cs
paddw
int
inc
push
imul
subl
sbb
or
xchg
mov
ret
int3
cmp
imul
stc
lahf
cmc
lods
addr16
lcall
pop
or
bound
bound
jp
icebp
lahf
fisttps
pusha
aas
bound
rcrl
je
mov
sbb
stos
push
or
or
divb
mov
mov
mov
jmp
adc
out
dec
push
out
fcoms
inc
adc
jne
fistl
filds
xor
pop
jb
out
inc
sbb
xor
jecxz
int
jecxz
in
popf
adc
adc
push
mul
sbb
jp
scas
mov
or
je
push
lahf
rcrl
pop
pusha
loopne
sti
sbb
inc
pusha
inc
in
imull
mov
shl
outsl
test
fcompl
inc
iret
stos
lds
pushf
mov
enter
pop
lods
enter
test
and
push
push
call
sti
mov
lods
mov
xor
mov
leave
push
and
into
inc
arpl
xor
imul
and
hlt
xlat
mov
insl
pushf
mov
arpl
push
jge
push
mov
mov
mov
bound
and
inc
cmp
fiaddl
je
scas
imul
dec
test
out
lahf
imull
or
push
inc
xchg
mov
dec
xchg
mov
xchg
scas
enter
xor
pop
test
mov
scas
fwait
mov
insb
ljmp
push
jg
xchg
pop
fstpt
aad
xchg
dec
dec
div
xchg
jl
sbb
int3
sarl
fldenv
pop
fisubl
stc
jecxz
xor
insb
mov
fistps
popa
dec
movsb
cmp
jns
dec
pusha
ss
popf
jae
bound
mov
mov
inc
lahf
jg
pop
cmp
xor
mov
adc
loopne
inc
jnp
out
addr16
repnz
jmp
xchg
mov
sub
xchg
in
jle
addr16
jge
ds
jno
xor
pop
sub
jecxz
adc
mov
adc
add
and
push
dec
jb
test
mov
dec
call
cmp
cmp
xor
fmuls
pushf
jmp
jnp
repz
ret
cmpsl
out
xlat
aad
push
shlb
loopne
mov
dec
jp
loop
xchg
movsl
lods
dec
hlt
aaa
push
jnp
call
mov
bound
sub
addb
push
mov
out
cwtl
je
dec
xchg
jns
inc
aam
xchg
dec
in
dec
mov
pushf
mov
xor
mov
insb
cmpsl
sbb
out
pop
add
mov
or
push
in
inc
push
lahf
add
push
cwtl
loope
push
fwait
cmp
jecxz
inc
add
pop
loopne
sbb
call
or
jmp
int
add
jp
mov
iret
mov
outsl
adc
sbb
in
popf
and
mov
mov
push
or
or
sbb
mov
jne
test
xchg
or
stos
xor
aas
lods
and
cmp
cli
decb
sahf
push
add
div
adc
or
cmc
mulb
ljmp
bound
push
popf
cld
xor
add
incb
in
in
sub
daa
and
enter
imull
lods
cmpsb
sbb
mov
sbb
sete
nop
arpl
jl
ficoml
mov
push
aas
xchg
mov
xchg
xor
data16
xchg
sbb
out
fs
mov
dec
xchg
lods
cmp
mov
shl
lods
stc
jmp
mov
lock
and
push
lret
in
mov
lret
jecxz
jmp
scas
pop
mov
loop
xchg
aaa
in
adc
jno
out
add
arpl
mov
pop
iret
pusha
pop
in
fwait
testl
into
shl
pop
sub
sub
std
push
jmp
jae
pop
mov
lret
push
push
mov
adc
push
dec
xchg
jns
pop
xchg
pop
xor
gs
insb
push
ja
pop
push
popl
stos
frstor
mov
arpl
mov
pop
lahf
add
mov
jmp
mov
push
hlt
adcb
fs
mov
mov
loopne
jo
in
jo
jns
lods
dec
repnz
lods
adc
lret
mov
fmuls
add
pushf
ret
ror
lds
addr16
in
push
in
repnz
je
sub
xchg
stos
mov
mov
lock
or
div
xchg
out
data16
mov
lds
cs
mov
loope
test
xchg
xchg
mov
mov
jp
js
in
ret
push
sahf
into
sahf
repz
movsl
push
lds
jo
imul
fs
es
fwait
cld
inc
add
inc
stc
cmp
loopne
dec
stc
fisttps
es
dec
rcll
shl
inc
outsl
jo
addr16
push
adc
jmp
mov
stos
ss
int
xchg
push
sub
popf
scas
jl
sbb
outsl
inc
pop
push
push
push
popl
aad
arpl
xor
dec
ret
inc
ljmp
outsl
sbb
xchg
adc
jno
mov
xchg
ljmp
clc
sbb
cmp
sti
mov
bound
repnz
mov
jp
pop
cli
xchg
add
ljmp
jge
das
mov
ja
popl
cld
sbb
push
add
dec
sti
pop
dec
and
in
fwait
xor
lcall
out
ret
jnp
jmp
dec
and
outsb
das
je
lret
insl
push
push
push
sub
je
mov
xchg
dec
int
xor
inc
cli
inc
arpl
imul
cmp
negl
pop
cli
jmp
test
mov
cmp
cmp
inc
dec
pop
mov
pop
sbb
mov
data16
aas
pop
dec
adc
sbb
iret
hlt
inc
clc
push
pop
cli
lret
daa
add
fs
cmp
outsl
or
push
or
adc
addr16
cmp
mov
outsl
stc
sub
xor
outsb
jl
sbb
dec
outsb
imul
shll
cmp
aad
xlat
sbb
mov
pop
leave
stos
popf
push
in
inc
xchg
mov
sti
xlat
int3
out
pop
lock
xlat
shrl
lods
jns
jecxz
outsl
movsl
ljmp
xchg
and
mov
imul
je
dec
mov
sbb
jecxz
movsl
aad
xor
ljmp
negl
in
testb
jo
dec
notb
daa
imul
cli
bnd
or
mov
arpl
lahf
adc
or
out
jns
iret
mov
sub
out
testb
lahf
inc
jp
jle
fsincos
jp
fdivp
js
jp
mov
shl
scas
cli
xchg
pop
insb
clc
push
fdivr
mov
push
into
sbb
sbb
push
les
mov
sub
dec
inc
push
xchg
addr16
and
dec
xor
fcomp
jns
ret
mov
dec
cmc
sub
je
cmpsb
sbb
imul
pop
bound
lret
aas
jl
add
imul
or
push
ljmp
clc
push
push
jmp
in
in
int
repnz
nop
rorl
fimull
mov
daa
lods
xchg
push
and
push
inc
jb
push
and
pusha
and
nop
ja
mov
add
les
xchg
dec
cmp
mov
pop
and
and
inc
aas
sbb
push
pop
les
pushf
out
inc
inc
push
dec
inc
xacquire
hlt
fwait
dec
insl
xchg
fsubr
test
fists
xor
mov
divl
sbb
adc
icebp
icebp
lahf
data16
icebp
push
mov
mov
xchg
jae
xor
insb
sahf
adc
mov
mov
lahf
in
loopne
in
call
test
shll
inc
pop
out
or
lret
mov
imul
cs
dec
je
sbb
xchg
cmp
test
sbb
out
jns
dec
movl
mov
fstpt
fidivrs
fstpl
sub
inc
xor
push
inc
or
fucomi
dec
mov
cmc
pop
inc
inc
in
mov
outsb
sbb
stos
jo
fisttps
lea
jne
mov
pop
sub
fwait
adc
push
outsl
int3
clc
rclb
pusha
cmp
pop
stc
scas
dec
movb
pop
mov
mov
mov
cmpsl
inc
sub
fs
pop
adc
mov
mov
fwait
mov
cmpsb
lds
pop
xchg
lret
mov
xchg
and
mov
je,pt
cli
jge
jle
mov
fwait
xchg
mov
sti
popl
and
dec
add
adc
adc
mov
bnd
fs
icebp
mov
outsb
pop
jg
in
push
jle
enter
pop
jae
arpl
aad
loopne
sub
fidivrl
jno
lods
inc
loop
jmp
push
enter
movsb
pop
in
pop
clc
sbb
call
mov
pop
sub
dec
xlat
sub
or
pop
push
pop
push
mov
pop
jecxz
and
ja
cli
popf
mov
pop
ret
jns
ror
dec
mov
fnstsw
mov
pop
ret
pop
push
test
stc
mov
scas
xorl
xor
mov
insl
addl
xor
or
or
mov
sti
mov
adc
push
dec
cwtl
aad
add
stc
xor
fidivl
stos
jb
mov
xchg
cmp
cmp
add
test
repz
inc
bound
jnp
loope
mov
stos
adcl
push
dec
cwtl
cmpsl
inc
les
lea
inc
and
sbb
jmp
sti
cmp
arpl
inc
lret
or
pop
adc
xchg
sbb
sti
lods
lret
jo
jp
loopne
inc
dec
or
adc
jmp
call
mov
dec
outsb
cmp
push
add
xchg
loopne
push
jecxz
lret
mov
scas
mov
cmpsb
pop
loopne
dec
mov
ret
cmp
sbb
add
stc
xlat
jp
fsubl
mov
xchg
std
lret
cmp
notb
repnz
cli
add
or
bound
cmp
repz
int
call
rcll
lods
pop
ret
fisubs
pop
lock
in
lret
or
sbb
push
mov
inc
pusha
shl
sbb
fsub
fildll
incl
sub
sub
iret
jp
and
fists
jo
push
add
popa
mov
pushf
adc
and
jl
pop
xchg
int3
das
sub
adc
jne
out
pop
lret
insl
lock
jmp
fcoml
vpsadbw
fisttps
imul
ret
inc
xchg
pop
dec
mov
jo
xor
cmp
pop
imul
loope
jae
flds
inc
outsl
je
aad
and
ljmp
jge
in
or
push
dec
mov
pop
mov
push
sub
popa
ja
sbb
pushf
pop
cld
sub
mov
imul
cmp
scas
jae
mov
test
loopne
jb
repnz
jnp
or
push
jmp
in
sub
cmpsl
ss
mov
jb
add
jae
or
xor
push
mov
outsl
lds
jb
xlat
jecxz
cmp
movsl
pop
fbstp
lods
cld
mov
pop
aad
jb
hlt
and
pop
pop
add
movsb
int
loopne
push
repz
pop
lcall
mov
mov
sub
push
xor
and
fwait
and
cmp
sbb
and
push
sub
je
mov
roll
lock
inc
dec
xchg
add
imul
sahf
dec
je,pt
or
pop
sbb
outsb
pop
in
adc
outsl
out
dec
aas
mulb
jp
sub
inc
xchg
or
lahf
jle
xlat
jnp
repz
arpl
or
insl
sbb
call
out
jg
mov
insl
stos
jmp
cmovnp
out
push
pop
decl
ljmp
hlt
lods
jae
imul
test
enter
xor
mov
jne
xlat
cld
adc
mov
mov
mov
jp
mov
lcall
lods
pusha
loopne
inc
dec
xor
or
icebp
das
push
adc
sets
or
jo
inc
cs
outsl
aaa
pushf
xor
jae
add
inc
mov
jbe,pt
dec
mov
aaa
testl
push
sub
nop
inc
cli
rorl
jle
push
fstpt
scas
cltd
jmp
push
mov
ja
sbb
sti
enter
ljmp
imul
dec
ret
sbb
or
push
in
mov
and
xchg
test
shrl
add
rcrb
sbb
add
adcb
scas
ljmp
inc
inc
fidivs
jle
enter
and
cmpsb
push
cmc
ss
dec
mov
imul
aad
sbb
das
popa
sbb
jl
xchg
jmp
sbb
out
mov
pop
mov
cmpsl
addb
xor
mov
sub
or
insl
stos
in
add
aam
xchg
jae
sub
push
out
and
jbe
sub
push
in
inc
testb
dec
call
fnsave
add
and
cmp
movsl
outsb
fdivrl
imul
movsb
insb
adc
imul
scas
aas
push
pop
sub
insl
in
sti
cmpsl
outsl
or
cmpsl
adc
jle
in
mov
inc
loope
jg
lcall
jl
jecxz
in
hlt
mov
jmp
mov
xlat
mull
and
das
cmp
jno
sub
stc
cmp
addr16
push
rorl
outsl
adc
insb
outsb
sbb
push
addr16
cli
jp
leave
movl
scas
sbb
fisttpll
push
mov
mov
pop
pusha
je
push
sahf
shl
out
dec
jo
pusha
hlt
mul
mov
icebp
sarb
push
in
stos
daa
out
dec
dec
loope
fistps
pushf
cmp
lret
pusha
sub
jb
add
in
and
jg
sub
in
repz
sbb
or
out
popf
sub
and
push
and
mov
add
sbb
mov
or
adc
adcb
daa
repz
sysenter
pop
jb
out
push
xchg
ret
jp
xor
push
inc
insb
mov
fwait
scas
aaa
cmpsb
ja
sti
leave
sbb
std
mov
out
mov
js
cmp
aam
cmp
or
ds
and
outsb
fnsetpm(287
xorl
pushf
repnz
sbb
and
insb
mov
sub
int3
jmp
insl
jb
ret
xor
in
nop
ret
imul
mov
and
push
gs
jecxz
jns
sbb
sbb
push
pop
lahf
jnp
jmp
insb
and
fs
and
xchg
mov
mov
insl
dec
pop
stos
lcall
cwtl
cli
scas
out
mov
sbb
bound
or
cmp
cld
cmp
loope
inc
xchg
push
mov
btr
sub
xor
add
sub
sub
jne
sub
push
jmp
lock
and
inc
stos
cli
ficomps
int3
xorb
stos
xor
sti
rcrb
enter
int
incb
sub
and
mov
dec
adc
ss
inc
daa
cmpsl
cmp
addl
pop
fs
lret
fwait
mov
jl
in
outsb
fs
repz
or
loopne
cs
cwtl
test
fnsave
popl
rorb
in
daa
cmc
icebp
mov
addr16
adc
and
adc
mov
lret
dec
into
cmp
hlt
iret
cltd
push
dec
int
pop
pop
loop
sbb
push
adc
lret
adc
int3
cs
and
test
ds
push
repz
pop
adc
lods
out
in
popa
jp
xchg
repz
ja
inc
lret
out
addr16
fwait
add
loop,pt
int3
ds
pushf
std
fcoml
inc
xor
dec
outsb
inc
lcall
sub
icebp
mov
sub
jnp
sub
xchg
dec
ljmp
dec
mulb
xchg
arpl
fcoml
jae
call
test
adc
fildl
sbb
pop
loopne
add
in
push
hlt
cmp
sub
fbld
xchg
out
stos
mov
push
sbb
pop
jecxz
nop
loope
pusha
jp
xchg
roll
inc
lret
mov
xor
in
sub
mov
fs
cmpsl
cmp
dec
ss
inc
push
cmc
out
sbb
loope
and
inc
outsl
loop
sbb
push
pop
sbb
arpl
jecxz
testl
mov
outsl
xor
ficoms
ja
insb
dec
pop
mov
aaa
jo
vmwrite
xor
mov
push
push
sbb
ds
popl
mov
pop
imul
cmpb
lock
jns
call
xor
fcmovnu
jg
mov
setg
aad
das
cli
and
repz
das
xchg
jl
lcall
add
xchg
pop
hlt
xor
sub
jb
mov
or
in
xor
push
sbb
out
insl
out
mov
mov
out
sub
mov
jecxz
cli
ret
push
mov
dec
lahf
fs
into
sbb
inc
mov
push
push
inc
shr
sub
inc
fcomip
enter
xor
push
xor
push
xor
cmc
and
lret
int3
popa
cwtl
pusha
enter
jg
stos
cmpb
push
aad
imul
jo
dec
xchg
pop
fwait
insb
jle
lods
pop
sub
mov
arpl
add
rcrl
inc
iret
sub
jb
outsl
dec
and
sbb
scas
jb
addl
xchg
cmc
shll
xchg
cmc
pop
mov
push
xor
int3
inc
xchg
test
push
push
test
add
mov
sub
mov
and
addb
into
dec
xchg
and
xchg
fs
ja
add
xchg
sar
dec
pushf
sti
test
push
mov
jg
mov
xchg
adc
stos
cmp
sbb
mov
sti
push
mulb
xchg
push
int
mov
sti
push
outsb
into
jmp
add
sub
pop
mov
and
mov
aas
in
xor
ret
hlt
xchg
pop
mov
stc
mov
mov
out
fists
xchg
and
data16
and
mov
dec
xchg
adc
out
sahf
arpl
mov
testl
inc
xor
inc
push
shrb
aaa
insb
mov
push
push
arpl
inc
jg
inc
mov
jo
jecxz
jno
ror
cmp
out
popa
scas
negl
jns
pop
je
addl
icebp
push
inc
jmp
es
mov
movsb
dec
sti
sti
je
sbb
insb
stc
mov
mov
out
push
out
fldlg2
pop
cmp
sbb
fdivs
ret
mov
dec
xor
testb
jmp
push
pop
enter
pushf
scas
loopne,pt
stos
jne
jae
jg
out
ret
lds
jno
in
pop
aad
repz
or
aam
mov
cld
shrl
cmp
or
sbb
loop
and
push
cmp
loope
jl
test
je
lahf
mov
xor
push
jno
jb
insb
push
add
jl
cmp
cld
shll
mov
xor
mov
push
pusha
lods
lcall
dec
dec
sahf
add
adc
testl
and
pushf
repz
push
popf
stos
jns
incl
inc
cmp
fs
clc
ja
inc
gs
pushf
imul
filds
add
out
jl
mov
inc
jae
sbb
call
mov
xchg
sbb
xchg
sbb
dec
out
jno
and
dec
in
dec
lret
sbb
add
int
xchg
ds
and
ror
lret
jae
sub
insb
inc
and
clc
hlt
sbb
sbb
mov
stc
and
sbb
sahf
jmp
or
sub
pop
sub
jo
rcr
cmpsl
int
jle
lcall
inc
xchg
dec
dec
inc
psubb
out
lds
xchg
dec
shl
adc
clc
xor
adc
stos
jp
incb
dec
dec
jmp
rolb
push
out
sub
test
mov
lods
mov
out
and
push
insl
push
call
int3
jecxz
das
cld
bnd
and
loopne
mov
lods
cli
loope
cs
sahf
rol
popa
sub
mov
pop
and
or
cmpsl
popa
test
mov
jne
aas
or
in
pusha
xor
sub
repz
fidivrl
cli
aaa
cmp
xlat
add
or
push
xor
and
push
jae
orl
mov
pop
dec
inc
int3
bound
mov
lahf
js
mov
iret
sarl
and
cli
xlat
cltd
dec
sahf
lahf
sbb
shlb
sub
je
lret
cmp
xchg
push
push
bound
cmpsl
dec
cwtl
mov
xchg
ds
push
mov
stc
xor
inc
mov
mov
mov
xor
lahf
mov
xlat
push
xchg
mov
mov
fwait
push
push
addr16
sbb
iret
dec
imul
xor
sub
xor
xchg
das
mov
outsb
mov
jb
push
mov
adc
and
fimull
mov
or
sti
pop
pop
pusha
xchg
mov
mov
jmp
xchg
mov
fcomps
fcoms
push
ret
test
test
xor
popf
repnz
lods
test
daa
es
push
pusha
fwait
xchg
push
rcrb
mov
add
mov
and
mov
je
cmpsb
stos
or
cmc
push
mov
jbe
push
mov
xor
popf
adc
mov
popf
jbe
and
push
xchg
jmp
out
jge
mov
adc
push
and
jnp
pushw
repnz
gs
xchg
jne
mov
mov
pop
test
iret
daa
repz
pop
push
decl
shrb
nop
push
mov
sub
mov
test
inc
repz
loope
and
or
add
or
adc
mov
in
addr16
sub
inc
sbb
call
pop
xchg
mov
ljmp
adc
jnp
push
or
jl
cmpsb
jg
jp
outsb
mov
lock
mov
push
cmpsb
scas
adc
cmp
jne
mov
loope
sbb
enter
xor
daa
sbb
sub
shrl
or
mov
cmp
xchg
jae
cmp
addl
push
mov
test
fnstcw
bound
mov
cmp
or
imul
andl
ds
iret
es
or
xor
sub
cmpsb
mov
out
test
jp
test
rcrl
fistl
incl
jl
arpl
jecxz
inc
lock
push
in
fstpt
pop
cmpsl
sbb
loope
std
outsl
aas
clc
push
aas
daa
adc
out
jae
pop
xchg
outsb
or
mov
mov
add
pop
rcll
xchg
cmp
out
out
xor
adc
adc
jp
or
cli
fcomi
cltd
push
loopne
lcall
mov
ljmp
lret
sub
inc
das
insb
negl
lret
push
ss
and
scas
stos
and
lods
icebp
lret
lock
push
stos
pop
lea
mov
pusha
xchg
or
mov
sub
mov
pop
into
lcall
xchg
pop
cmp
test
mov
pushf
movsb
enter
daa
jg
mov
stc
call
jp
fbld
dec
add
push
adc
mov
clc
mov
push
int3
popf
leave
je
mov
dec
aas
pusha
aaa
stos
dec
mov
push
mov
nop
fistpl
mov
pushf
xchg
stos
lahf
dec
jle
es
cmpsb
and
xchg
sbb
or
fsubl
xor
push
cmp
pop
mov
test
shl
iret
repz
out
rcl
andl
cmp
repz
insb
pop
jmp
insb
pusha
cmpsl
mov
adc
lds
in
inc
fstps
dec
sub
mov
movsb
jge
dec
nop
or
test
stos
cmc
mov
push
cmp
mov
sub
ljmp
jecxz
add
inc
add
int3
out
cmp
push
jmp
out
sbb
icebp
pop
repnz
and
dec
sbb
dec
outsl
add
push
jl
and
out
cmp
pusha
mov
dec
fsubrl
jge
ja
mov
repz
mov
shll
imul
xor
push
shl
pop
fisubl
push
mov
jp
jno
push
add
push
icebp
mov
adc
lret
inc
repnz
xor
stos
aas
cld
inc
in
outsl
adc
push
fstp
fcmove
or
cwtl
in
pop
pop
cmpsl
and
pop
mov
cmp
push
iret
nop
mov
sbbb
jmp
dec
repnz
pop
mov
int
cld
xchg
ffree
scas
mov
shlb
movsb
das
cmp
pop
sbb
and
push
mov
cmpsl
mov
mov
ja
es
outsb
clc
icebp
or
test
test
rclb
aam
or
and
in
push
dec
mov
xchg
jp
or
sahf
push
int3
mov
dec
cmpsl
addr16
lods
aaa
sahf
pop
cmp
or
scas
rorl
or
mov
out
jno
mov
scas
repz
push
mov
jne
jmp
pop
lods
aam
in
adc
adc
or
mov
dec
call
push
loop
imul
jno
adc
data16
subl
repnz
jmp
andb
dec
dec
and
clc
sub
out
dec
pusha
test
mov
fs
dec
insb
add
bnd
or
in
scas
loope
mov
ds
call
jmp
jno
sub
jmp
stos
jg
iret
in
orb
loop
dec
call
dec
stc
popf
enter
dec
test
push
push
push
xchg
jmp
cmp
sub
dec
dec
pop
sahf
sti
movsb
je
mov
xor
cmpsb
push
adc
jbe
dec
add
push
push
dec
repz
loopne
stos
lcall
sbb
in
push
push
roll
mov
pop
pushf
mov
loop
imul
push
push
out
and
lret
inc
ljmp
lret
and
nop
repnz
and
jmp
mov
out
mov
js
icebp
adc
mov
pop
push
shrb
mov
sub
add
insb
mov
xchg
mov
fistl
incl
imul
mov
or
cmc
pop
dec
iret
mov
outsb
push
fucomi
jns
popf
mov
ja
sbb
shlb
ds
xchg
mov
addb
stos
jno
outsl
fldcw
rol
dec
not
imul
loopne
add
sbb
add
jns
test
into
mov
sub
cmp
push
hlt
outsl
sub
push
dec
ret
ljmp
push
inc
ret
push
add
add
push
movsb
push
jmp
lcall
test
jmp
stc
ss
jnp
pop
sub
xor
pop
aas
into
fbld
adc
fistps
movsb
sbb
and
pop
loope
inc
inc
and
or
xchg
outsl
nop
rcrl
inc
fs
mov
lret
fmuls
mov
iret
cs
xor
dec
dec
dec
sbb
mov
dec
pop
jns
push
push
push
pushf
mov
pop
in
mov
dec
fwait
pushf
je
push
dec
jle
rcrl
mov
dec
loopne
repnz
lea
jb
mov
jl
inc
add
pop
mov
or
sbb
jle
arpl
mov
mov
pop
fsub
add
mov
xchg
inc
mov
test
stos
bound
mov
testb
add
test
mov
push
and
sarl
or
lods
outsl
cmpb
lods
jp
in
or
lret
or
fstl
daa
data16
xor
xlat
daa
jmp
jns
fcmovnbe
loopne
mov
outsl
pusha
int
mov
and
divl
mov
mov
lock
and
cwtl
fidivs
in
add
stc
xor
jae
xchg
mov
scas
bound
notl
xchg
mov
js
rorl
pop
inc
int3
cwtl
pop
inc
into
mov
jecxz
xchg
dec
fwait
push
push
in
and
cmp
add
clc
and
mov
sbb
in
or
xor
or
insb
add
popa
stc
cmc
and
movsl
inc
xchg
scas
icebp
arpl
lret
xlat
mov
jecxz
lock
sbb
cs
pop
jl
sbb
sbb
mov
xchg
incb
mov
ja
xchg
pop
shlb
test
mov
popa
in
pop
das
pop
mov
jo
fisubl
ja
push
imul
sti
fsubl
repnz
aad
aad
or
lds
add
hlt
je
push
mov
add
lret
aaa
bound
mull
stos
movsl
inc
adc
cmp
jns
sbb
ja
pop
test
lahf
mov
pop
push
aas
and
sbb
out
inc
sti
dec
mov
sub
rolb
clc
lahf
shrb
loope
mov
dec
sarl
and
push
pushf
push
mov
sub
sbb
repz
push
cltd
xchg
mov
add
sub
lret
jecxz
xor
xor
dec
fldcw
lret
inc
movaps
jns
cmp
shrb
shufps
shl
xor
sub
scas
sahf
test
lods
cmp
ljmp
cmpsl
pop
lea
shrb
jb
cld
cmpsl
push
mov
bound
mov
test
adc
push
popf
mov
jg
out
xchg
and
or
or
dec
push
push
fiaddl
jp
scas
imul
fs
xor
fistpl
cmp
lds
push
test
sbb
sbb
repnz
push
into
enter
arpl
sbb
mov
idivb
jl
test
out
lock
rorl
inc
loop
push
inc
adc
fbstp
and
mov
setno
lret
jg
in
std
and
ret
lahf
dec
jns
arpl
or
adc
pop
jno
mov
lds
pop
or
dec
pop
adc
sbb
cmp
pop
orl
push
mov
cmpsb
popf
rep
insl
lock
push
pop
into
in
pop
push
pushf
idivb
jp
in
loopne
fwait
in
mov
push
loope
scas
xchg
sub
sbb
pop
pop
sbb
dec
and
cmp
pop
jle
lods
dec
add
add
arpl
paddb
and
adc
push
fcmovnbe
pop
cld
out
add
hlt
push
out
pushf
lods
shrb
push
pop
test
xor
mov
into
jns
ja,pn
mull
pop
sahf
inc
mov
pop
arpl
adc
jmp
jno
push
add
mov
clc
mov
adc
outsl
out
sub
pop
mul
add
inc
jmp
cmp
pop
lds
scas
push
es
out
lret
push
jl
adc
fldt
jg
leave
mov
push
sub
enter
ret
sbb
scas
repz
aam
xchg
mov
out
arpl
ret
repnz
in
stos
outsb
adc
repz
loopne
sub
loop
out
rclb
lds
pop
fbstp
xor
mov
fsubrp
aaa
cltd
filds
and
push
and
mov
dec
lods
push
in
and
in
or
hlt
shll
sbb
ret
mov
mov
outsl
inc
out
lcall
popf
jecxz
out
data16
cltd
or
out
addb
paddsb
jns
mov
mov
scas
stos
aaa
shl
sti
shrl
fimull
sbb
test
ficoms
fdivp
aam
xor
jno
mov
out
or
jns
clc
jbe
push
in
jg
xchg
and
inc
pop
sub
daa
nop
rep
je
popa
jb
xchg
sti
test
out
jns
in
lret
rorl
push
xor
jle
add
sbb
sub
add
lret
rcr
jns
xlat
or
sar
jp
xlat
loope
out
or
inc
pusha
xor
into
rcll
push
cwtl
imul
mov
daa
push
xchg
sarl
rorl
gs
or
lods
addr16
jb
xchg
sti
test
fs
lret
testl
cmp
jle
cld
fcoml
jp
es
bound
imul
fstpt
pop
mov
cmc
cmp
clc
stos
pusha
dec
pop
jno
xlat
mov
jle
stos
shl
jne
push
mov
jecxz
rorb
mov
jp
nop
mov
das
aas
pop
hlt
addr16
lret
add
rcr
mov
mov
stos
jb
cmp
and
inc
jmp
adc
popf
adc
sahf
mov
repz
out
mov
cmpsb
jge
repnz
sub
mov
push
insl
sbb
loop
mov
gs
push
xor
call
cmc
push
and
ljmp
or
mov
mov
push
ljmp
test
adc
shlb
xchg
mov
dec
push
sbb
push
push
lret
scas
rep
jae
xlat
je
or
push
xlat
mov
lock
das
pop
jecxz
sarb
ja,pt
imul
and
movsb
push
add
hlt
fldcw
jg
or
in
inc
repz
adc
popf
jg
daa
movsb
jmp
xchg
mov
add
cmp
jb
xchg
adc
aaa
nop
repz
movsl
aas
aad
rclb
cld
xor
fs
loopne
es
push
pop
out
mov
lcallw
inc
add
jbe
test
cmpsb
fists
divb
call
inc
ret
inc
cmpsb
icebp
sbb
outsl
mov
pusha
imul
mov
loop
lock
mov
mov
ficoms
inc
imul
pop
sahf
cmc
clc
push
sub
shlb
rolb
inc
in
xchg
jo
aas
mov
push
adc
lds
jp
jmp
jmp
add
lea
push
mov
inc
xor
insb
stos
mov
push
int3
scas
cltd
or
in
xor
fcmovu
cmp
js
push
int
mov
jmp
lock
add
das
sbb
pop
inc
filds
es
ja
fimull
test
imul
in
sub
adc
sub
and
cmc
rcr
push
in
adc
dec
sub
xlat
stos
xchg
jb
popa
inc
mov
inc
nop
loopne
and
mov
pop
pop
jnp
loop
or
xchg
mov
divl
fs
pusha
nop
push
cmp
and
add
fwait
aam
ljmp
lret
es
fcoms
pop
loope
sbb
sbb
movsb
cmp
fstp
jmp
outsb
pop
mov
imul
cltd
insl
mov
add
orb
addr16
jno
repnz
dec
repnz
or
decl
ficomps
or
mov
push
cmp
jae,pn
mov
and
in
in
pop
pushf
fiaddl
dec
mov
mov
mov
addr16
imul
aad
jnp
scas
imul
imul
and
jno
mov
repnz
cwtl
sahf
je
mov
dec
cli
test
imul
cltd
sbb
inc
ret
or
jle
jmp
jne
pop
fwait
inc
jecxz
sub
sbb
sbb
dec
cli
push
aad
lahf
add
push
lret
sub
je
daa
fldt
cmp
and
sub
and
leave
pop
add
daa
ret
or
add
push
repnz
out
jne
jcxz
lock
cltd
addr16
imul
push
fildl
mov
dec
mov
inc
bound
dec
cmpsl
pop
scas
mov
lahf
lods
mov
lods
pop
cmpsl
mov
imul
mov
dec
xchg
cwtl
test
popa
mov
imul
or
mov
movsb
mov
test
hlt
divl
int3
cli
es
divb
fcomi
add
sti
clc
inc
in
clc
and
or
xor
pop
xlat
push
mov
in
mov
lgs
fisttps
push
push
jl
je
push
test
je
dec
jbe
push
lahf
push
cs
bnd
sbb
fsts
dec
negb
leave
aaa
jno
rcr
dec
mov
mov
lea
je
adcb
and
mov
into
fwait
repnz
xchg
inc
mov
ja
pop
or
ds
movsb
decb
lahf
shlb
jns
imul
cmc
push
jmp
cmp
mov
dec
jle
mov
adc
adc
pushf
sahf
mov
mov
loope
repnz
push
lahf
jb
mov
push
les
jle
cmp
mov
inc
into
cli
cmovae
mov
adc
xor
stc
je
repz
int
not
mov
inc
cmpsl
ss
jmp
in
test
pop
pop
lea
cmp
jnp
je
fnstcw
rclb
je
add
cli
pop
test
dec
cwtl
das
lock
or
outsb
pop
mov
push
dec
fwait
stos
jecxz
pop
or
bound
stos
add
adc
psadbw
push
clc
cmp
sbb
mov
adc
aaa
inc
out
sahf
in
jo
lret
sub
mov
fcoml
loop
xor
mov
mov
push
bound
pop
sarb
ds
push
sbb
lods
lods
push
sub
add
mov
cmc
mov
push
dec
jle
ja
cmpsb
out
rcrb
inc
repz
add
xor
cmp
jo
or
test
test
mov
mov
and
test
bound
shlb
add
js
add
mov
sti
loopne
or
inc
or
dec
ja
push
popa
pop
lahf
lods
rcr
mov
lock
data16
cmpsb
xor
imul
mov
rorl
movsb
je
cmp
stos
xchg
imul
adc
je
je
mov
inc
lds
ljmp
inc
lea
xor
repnz
jle
lahf
lock
fsubs
js
je
jb
inc
adc
popf
mov
divb
bound
dec
xor
lahf
cmpsl
sub
sbb
js
push
cmp
xchg
pushf
lods
add
inc
adc
inc
pop
pop
dec
stc
hlt
mov
addr16
jnp
jp
push
sub
or
cmc
andb
rclb
or
icebp
mov
pop
arpl
push
shrl
xchg
orb
add
rclb
into
test
and
pop
lcall
rcrl
loop
stc
rorb
pop
pusha
sub
cwtl
jnp
loopne
or
push
sub
lahf
out
mov
dec
adc
push
orl
jne
pop
bound
imull
xor
pusha
cwtl
mov
add
stc
pusha
fildll
movsl
lahf
les
mov
sti
dec
ret
lea
push
ja
dec
enter
popa
adc
mov
and
jb
mov
aam
push
add
jl
xor
inc
outsb
pop
cwtl
scas
inc
mov
lcall
bound
insl
push
lahf
jns
or
imul
jp
pop
push
dec
pop
dec
mov
add
push
inc
iret
dec
outsb
pusha
ret
out
fdivs
sub
stos
out
and
pop
movsb
ret
or
bound
dec
dec
inc
lahf
mov
push
or
mov
sub
xorb
test
dec
je
mov
push
pop
rcl
les
jp
or
mov
movsb
lahf
mov
aaa
mov
cltd
cmc
mov
lahf
lret
mov
je
mov
cs
les
push
cld
loopne
loope
subl
push
xchg
xchg
mov
pop
leave
cmp
jns
clc
js
mov
inc
dec
je
ret
jg
lods
mov
stc
dec
sub
xor
insl
inc
mov
or
dec
push
bound
sarb
xchg
cmpsl
adcl
pop
mov
scas
fdivrp
push
and
cmp
push
bound
fcmovb
mov
mov
lahf
cwtl
xchg
pop
push
mov
sub
sub
jp
lock
pop
std
push
push
adc
data16
pushl
scas
out
and
stc
mov
xchg
std
cld
xlat
cmpsb
dec
ss
lahf
dec
dec
pushf
sbb
clc
inc
jbe
push
loopne
mov
jne
ret
xor
iret
inc
inc
sub
xor
das
pop
sbb
and
lahf
lods
call
jmp
mov
dec
int
jle
addr16
lahf
leave
je
adc
push
imul
push
fstpl
iret
cmpsl
jae
in
add
cld
cmp
pop
ucomiss
mov
hlt
sarb
add
dec
sub
mov
pop
icebp
xchg
adc
mov
cmp
jb
pop
sbb
in
outsl
je
lahf
sarb
mov
decl
ret
mov
xor
ss
in
les
mov
in
mov
or
je
jl
aas
mov
and
add
aad
xchg
xor
adc
xor
adc
out
fldl
scas
push
xor
sbb
aam
imul
leave
out
inc
pop
add
lock
shll
xor
jge
daa
dec
and
aas
cmp
pop
dec
je
aam
or
sti
or
xchg
xchg
add
ret
cmpsb
mov
fwait
or
shlb
roll
push
lahf
aad
data16
enter
je
dec
lea
aad
sar
lea
mov
nop
stos
lahf
inc
hlt
push
test
xchg
bound
mov
inc
sbb
cld
mull
xor
pop
pop
jno
inc
xchg
rorl
lods
inc
jmp
or
in
cmpsl
es
pop
loopne
sbb
in
pushf
loop
inc
cli
dec
bound
sti
push
pop
js
in
or
sbb
mov
xchg
pop
sbb
sahf
sbb
lcall
roll
scas
dec
jns
dec
sbb
fld
in
dec
test
call
shll
popa
xor
hlt
adc
lahf
cmp
pop
mov
insl
movsb
cwtl
jo
ret
bound
insl
rcrl
inc
and
stc
xchg
popa
adc
inc
cs
mov
mov
xchg
fistpl
pushf
or
jae
popa
das
ss
mov
lahf
add
jl
scas
test
out
inc
aad
test
ds
lahf
aaa
ret
pop
xchg
cmp
or
mov
pop
sbb
xchg
rorb
xorb
mov
cmpsl
jl
sbb
addr16
popa
sti
or
and
scas
insb
lret
xchg
jo
jns
xor
push
subl
out
aas
or
mov
ds
and
xchg
add
outsb
das
or
subl
mov
jl
pop
lahf
cmpsb
sub
leave
dec
in
sub
xor
add
xor
sub
jmp
ja
pop
dec
cmpsl
cmp
test
mov
mov
es
add
dec
sahf
data16
mov
bound
mov
push
repnz
or
dec
mov
stos
gs
sbb
pop
or
or
rorl
test
bound
inc
add
lock
cmpsb
xor
mov
xchg
out
mov
dec
push
iret
or
mov
out
std
and
shl
neg
test
add
adc
scas
push
sbb
mov
sarl
leave
mov
lcall
or
add
jmp
sbb
or
sub
mov
dec
aaa
mov
and
sub
mov
ret
inc
mov
xor
jp
sahf
pop
fcmovnbe
sub
pop
stos
cwtl
enter
cmp
stc
hlt
ds
push
xchg
mov
push
sbb
mov
out
sub
cmp
bound
or
push
sub
xorb
sub
out
enter
movsb
aam
jb
xor
stos
mov
je
pop
popa
in
dec
mov
sub
adc
sbb
xor
mov
dec
jnp
lahf
push
sub
sub
jmp
or
popl
mov
and
bound
dec
leave
and
orl
sub
or
test
adc
mov
cmp
roll
xchg
daa
into
daa
das
jo
js
dec
add
jmp
mov
ffree
ret
rcrl
fisttpl
jmp
imul
xchg
cmp
iret
mov
push
ret
test
cmpsl
sub
pop
pop
lahf
aaa
xlat
pop
in
and
dec
data16
fs
jecxz
inc
sahf
fcmovbe
fsubrl
cmp
mov
mov
mov
xor
inc
ljmp
and
fwait
aam
std
mov
adc
je
mov
imul
add
imul
push
addr16
out
and
inc
pop
icebp
lahf
es
xchg
xchg
mov
mov
push
mov
popa
jmp
data16
movsl
xlat
jb
dec
loope
lahf
fnstsw
ret
aam
cmp
mov
xchg
dec
in
mov
scas
popl
sbb
inc
push
repz
mov
sbb
mov
mov
xchg
cs
insl
jb
pop
add
mov
out
jbe
push
or
mov
and
pop
scas
sub
push
mov
pop
add
nop
fdivs
bound
lods
xchg
je
lcall
mov
movsl
add
and
xchg
aaa
pop
or
je
clc
xchg
inc
dec
jmp
movsl
das
xor
mov
push
sub
xchg
lahf
and
repz
in
lret
iret
cmpsl
imul
dec
loopne
insb
mov
mov
push
push
pop
int3
xor
push
out
inc
xor
inc
sbb
inc
pop
data16
or
rorl
xchg
les
dec
pop
in
jg
popa
sahf
and
repz
fs
aam
jae
in
popa
adc
int3
jne
sub
lahf
lcall
inc
je
cmc
mov
mov
and
and
shlb
or
mov
xor
inc
add
push
and
push
test
mov
inc
and
jg
andb
dec
outsl
mov
aaa
or
mov
cmp
popa
ss
jp,pn
scas
add
aas
mov
inc
in
ljmp
out
das
mov
dec
mov
pushf
xchg
sub
adc
enter
out
pop
inc
push
xor
mov
inc
pop
in
sbb
ret
jno
inc
xor
jb
sti
loop
sub
nop
mov
pusha
test
or
popa
add
rolb
stc
add
xchg
scas
cmp
das
push
dec
mov
mov
dec
mov
xchg
faddl
bound
xlat
iret
rcrl
xor
adc
mov
sub
sub
fisttpll
push
xchg
sub
adc
and
shl
mov
notb
arpl
nop
xlat
adc
mov
jnp
push
mov
dec
cmp
add
xchg
cltd
mov
pushf
adc
loopne
popa
test
inc
lock
adc
rorl
jae
fimull
ljmp
jg
cs
or
jbe
add
gs
or
jge
push
adc
or
mov
movsl
sub
fisubl
push
and
loopne
lret
xchg
jge
aam
add
insb
in
lods
ret
push
stos
xor
push
lret
jl
das
cmc
mov
dec
fwait
sub
push
adc
daa
jo
je
xchg
jmp
xchg
mov
data16
cmc
lock
sti
cltd
mov
imul
dec
add
imul
jo
fildl
cld
jne
adc
ljmp
xor
das
in
jns
inc
mov
xor
xor
jmp
jae
xchg
add
xor
stos
push
lahf
into
in
imul
shrb
jmp
and
jle
sub
and
pushf
cmpsb
decb
leave
ret
xchg
adc
test
adc
mov
popa
push
sbb
nop
movsb
cs
add
cwtl
sbb
pop
bound
fistps
mov
scas
sbb
jmp
jmp
dec
js
inc
subl
repnz
and
jle
call
mov
adc
mov
insl
aam
cs
popf
int
adc
ja
and
xchg
addl
clc
cmpsl
sub
sub
es
adc
mov
test
bound
sub
lahf
sbb
or
insb
scas
loop
jp
ja
mov
lret
pop
inc
inc
scas
dec
bound
cmp
loop
or
sarb
stos
aaa
je
inc
sbb
std
popa
inc
sub
pop
into
js
fists
jmp
testl
outsb
aam
cmpl
jnp
inc
adc
insl
mov
sub
ret
pushf
jmp
mov
fldl
int3
jle
or
or
in
mov
xor
xor
pop
or
or
mov
fdivs
and
cmp
mov
fbstp
out
mov
or
or
add
flds
add
outsl
mov
loop
xchg
adc
lahf
sbb
mov
sbb
bound
arpl
xor
aam
sub
sti
outsl
inc
cwtl
lea
js
mov
loopne
mov
add
rep
adc
in
lods
mov
scas
repz
test
jecxz
cmp
jge
sub
push
jb
xchg
add
add
or
mov
lods
stc
clc
cmp
dec
cltd
mov
adc
inc
insb
jns
mov
sbb
jne
fs
cltd
cwtl
cmc
lds
adc
enter
inc
es
icebp
lahf
ror
push
cmp
aas
dec
icebp
stos
push
gs
sub
in
sub
xlat
push
cmc
mov
dec
movsb
fcmovnu
jge
adc
bnd
xor
and
push
gs
leave
testb
xor
repnz
es
hlt
push
ljmp
jns
cli
shl
stos
mov
leave
mov
push
cmp
bound
mov
mov
jbe
jg
sub
cwtl
adc
inc
incl
jg
cmp
aaa
js
mov
fwait
pop
jne
or
aad
add
sbb
lret
pusha
pop
jne
lahf
inc
lret
jb
mull
push
pop
rorl
lock
aas
rol
ret
add
and
jl
lcall
test
int
cmc
push
test
pop
jns
ds
jp
dec
sbb
mov
clc
inc
mov
xchg
and
sub
cli
inc
add
iret
or
push
arpl
aad
xor
mov
mov
dec
mov
lret
jno
pop
ss
jp
mov
pop
cmpsb
rdmsr
sbb
int
cmp
out
and
into
orb
add
mov
jo
data16
add
push
push
xor
jno
add
fs
mov
rorb
jecxz
lock
push
je
push
js
test
mov
pop
in
ljmp
hlt
lock
push
test
sbb
std
loop
or
cli
inc
call
pop
cli
xchg
pop
iret
neg
shr
loopne
mov
outsb
insl
cmc
test
push
test
fcmovnu
ds
fildll
call
sub
lods
ljmp
jb
or
mov
incb
jl
cmpsl
push
pop
pop
add
ffreep
and
shl
jae
jae
cmp
pop
int3
outsb
in
in
nop/reserved
aas
aam
add
jle
sub
cmp
loop
jne
sub
xchg
out
into
lods
stc
add
pushf
sbb
inc
negl
subl
or
je
aaa
pusha
cwtl
call
sbb
dec
mov
push
mov
add
jo
pop
mov
push
daa
adc
rorl
cmp
loope
insb
leave
jmp
in
adc
cmc
jns
lret
dec
sbb
fadd
rorl
loope
sbb
loope
bound
test
out
out
jecxz
or
cmp
aas
cli
repz
repnz
outsb
bnd
xchg
in
repz
icebp
fs
mov
fsub
imul
and
cmp
inc
out
mov
cmp
or
and
or
cs
sbb
cli
dec
cli
insb
rol
std
sub
inc
push
push
jo
out
icebp
subl
adc
jle
arpl
fisttpl
call
add
or
xchg
ret
test
jg
cmp
jg
xor
int3
cmp
das
shr
jg
jge
mov
in
cmp
add
cmp
jecxz
mov
sarb
mov
das
sub
nop
dec
push
jmp
jo
dec
lods
stc
xchg
fsubr
pop
fisttpll
repz
push
fucomip
mov
or
rorl
or
cmpsb
xor
inc
cmpsb
iret
or
sub
jge
shlb
adc
imul
xor
fildll
aam
pop
inc
rcrb
fstpt
rcrb
lahf
pop
cmpsl
daa
cld
pop
sbb
lods
loop
add
and
dec
sub
push
pop
xor
fnstcw
les
aam
lcall
shlb
cmp
fs
sbb
fadd
push
dec
clc
imul
inc
out
and
sbb
in
jp
clc
push
movl
sbb
xchg
les
jg
test
cwtl
fisttpl
pop
jmp
jmp
loope
or
nop
data16
pusha
jp
mov
pop
jge
cltd
or
stc
xor
int
fsub
mov
mov
clc
pop
jg,pn
fstpt
lret
and
push
into
in
fisubrs
das
shlb
and
pop
loopne
repz
aam
mov
stos
call
iret
hlt
xor
sub
popa
sti
push
imul
int
add
clc
mov
arpl
dec
insl
adc
scas
popf
sbb
xor
imul
adc
imul
lret
mov
clc
call
outsb
sub
push
cmpl
ss
and
repnz
mov
loop
insb
jno
or
js
sbb
addr16
sbb
out
sbb
add
in
iret
fcmovb
hlt
rcll
andb
imull
mov
push
loope
pushf
xor
call
sub
push
lcall
lcall
loopne
frstor
divl
out
das
rolb
sti
insl
fldcw
mov
aaa
jp
cld
aaa
addr16
mov
inc
cmp
adc
sbb
icebp
imul
dec
sub
pop
pop
insl
sub
pop
cwtl
gs
fldt
jp
dec
repz
cltd
cmp
jle
mov
fdivr
and
shlb
adc
jmp
leave
ret
aaa
push
and
movsb
jb
dec
xor
add
cmp
scas
jmp
cwtl
out
mov
cmp
pushl
pop
cmp
push
loop
sbb
inc
clc
cmc
push
or
mov
cs
movsb
inc
js
lds
and
je
push
mov
push
sbb
scas
in
loop
out
jg
mov
cmp
add
and
push
shrb
add
and
sbb
loopne
sub
pop
add
jecxz
pop
stos
out
ret
into
out
dec
in
and
jle
inc
in
sbb
ss
enter
ljmp
mov
lret
ss
push
fsubs
push
push
pusha
sbb
cmp
sbb
jecxz
je
out
pop
dec
out
incb
int
mov
gs
out
add
inc
jo
mov
or
pushf
push
pop
cltd
jl,pn
lds
clc
push
xchg
outsl
loope
pop
imul
pop
in
lret
gs
test
jecxz
loop
sbb
pop
iret
ds
hlt
jb
sbb
sarl
insb
lret
in
jmp
ljmp
sbb
mov
or
rcl
subb
iret
push
fcompl
int
adc
add
jo
outsb
sti
inc
rcr
ss
mov
and
mov
cmp
sbb
push
daa
sub
pop
jle
xor
in
loopne
and
push
cmp
lock
pop
mov
ret
dec
or
and
sti
xor
insl
cli
popa
lock
dec
fnstenv
cwtl
lds
adc
dec
cmp
jecxz
mov
xchg
push
and
fs
popa
dec
xor
fsubl
stos
pop
cld
call
arpl
sub
dec
movsb
push
mov
inc
test
push
lcall
adc
or
out
insb
dec
jmp
jmp
lock
jecxz
addb
lret
mov
xor
test
ds
addr16
roll
sub
sub
adc
sub
xor
dec
mov
xor
mov
and
sbb
iret
movsb
mov
ljmp
stos
addr16
jge
jns
shrb
leave
sub
pop
in
icebp
cli
add
shrb
div
push
imul
and
xchg
aaa
adc
sbb
pop
imull
cli
jbe
and
sbb
push
lds
sbb
or
jnp
incb
push
test
sub
sbb
insl
fistpl
fisubs
sub
in
sti
sub
sbb
jns
scas
and
inc
cmpsb
out
std
jae
sub
aaa
push
adc
jl
or
lock
aas
addb
sub
leave
cmp
sbb
add
push
sub
jg
jl,pn
fidivs
ret
pop
stc
add
in
out
repnz
loop
pop
outsl
bnd
int
add
sbb
mov
xbegin
push
sub
jcxz
into
in
cmp
cmp
cs
jg
sbb
scas
mov
cmp
or
mov
dec
fmul
jae
push
leave
std
inc
xor
stc
and
jp
jl
jmp
out
jmp
call
stc
cmp
dec
cs
mov
sbbl
adc
pop
fcomps
dec
lock
mov
es
cmp
int3
imul
mov
jo
sub
test
xor
fcomps
outsl
and
out
es
dec
adc
or
in
fsubs
xlat
sbb
sbb
xor
xor
hlt
or
dec
hlt
or
aas
cmp
cmp
or
gs
mov
cwtl
sbb
or
call
cmp
sub
and
fstpt
ss
and
int3
fisubl
adc
add
ret
pop
xchg
ja
fcoms
jle
in
push
test
xor
add
xor
hlt
test
and
adc
jmp
lret
fsubrl
inc
out
rcll
xchg
imul
mov
fistpl
and
lret
enter
fwait
lds
std
aaa
and
rcll
cmp
es
xor
pop
xor
fistpll
push
and
loopne
push
jne
loop
sar
jecxz
inc
jbe
mov
sub
pusha
cmp
mov
lods
and
mov
and
push
in
xor
push
dec
incl
fwait
mov
jnp
sbb
adc
sub
lret
mov
std
mov
outsl
mov
imul
js
jmp
pop
gs
pause
fs
out
push
mov
and
das
and
out
cmp
in
cs
js
call
pop
jmp
inc
push
repz
jg
in
lcall
repz
rcll
dec
dec
call
and
adc
es
cmpsl
in
adc
mov
repnz
shl
scas
ret
ja
jecxz
xchg
insl
inc
jae
sbb
jg
sahf
imul
out
lods
in
cmp
jae
in
repz
shll
in
daa
push
jecxz
and
loope
xor
sub
cli
dec
sti
out
stos
dec
sbb
xor
je
pop
gs
js
push
rcrl
inc
or
cmp
das
inc
dec
jecxz
inc
inc
sub
inc
mov
ljmp
hlt
fidivrl
rcll
imul
pusha
push
aam
pop
adc
icebp
js
out
jg
sbbl
mov
jmp
bnd
cmp
call
mov
jns
and
adc
arpl
aas
ljmp
jl
gs
or
cmp
mov
pop
mov
fstpt
sbb
cmpsb
cmp
cmp
lcall
push
out
iret
test
cmpl
pop
lcall
and
or
lods
pop
pop
enter
jl
lods
out
xor
jecxz
pop
scas
mov
es
mov
push
add
mov
and
movhps
les
sahf
and
ds
data16
lea
insl
cmp
or
add
popl
inc
adc
jl
jge
push
inc
xor
or
adc
cmp
cmp
push
in
sub
fcoms
call
sub
sbb
leave
jae
aas
add
sub
push
pop
or
jne
lock
dec
call
or
movsb
sub
ficoml
xor
or
jbe
lea
or
cmp
fists
adc
jg
xlat
cld
inc
or
in
subb
push
jge
out
outsl
dec
cmp
loop
bound
jge
es
cmp
lret
jae
lret
in
and
dec
ja
sbb
mov
jmp
imul
inc
aad
iret
mov
jns
sub
ret
sbb
mov
pop
int3
arpl
int3
in
sarl
push
js
stc
sbb
mov
add
and
pop
jo
adc
imul
adc
push
outsl
sbb
xchg
lock
mov
mov
sub
in
nop
jae
pop
or
daa
inc
enter
inc
in
subb
sbb
inc
mov
sub
inc
ficoml
lods
xchg
dec
or
xchg
adc
xchg
jg
cmc
cs
jo
mov
aam
loope
jp,pn
dec
repz
add
outsl
aaa
mov
xor
cvttps2pi
sub
nop
icebp
xor
push
das
jl
icebp
cmp
pop
sub
mov
cmp
int3
inc
inc
cmp
adc
or
xchg
jp,pn
dec
cld
popa
add
outsl
sub
inc
mov
jl
inc
or
clc
and
mov
pusha
xlat
lds
enter
dec
push
pop
decb
imul
or
jmp
mov
push
ss
jge
outsl
sbb
sub
out
adc
icebp
cli
clc
int3
aam
sbb
jnp
cmpsl
add
cmp
cld
jge
pop
les
sbb
aam
jo
rclb
sbb
jmp
and
ficoml
sarl
mov
and
pushf
insl
sub
cs
addr16
push
cli
ljmp
add
cmc
loope
jecxz
and
iret
push
sbb
xor
or
mov
or
mov
movsb
addr16
clc
xchg
mov
dec
rcrl
xor
in
pop
rol
or
inc
push
shll
into
jg
outsb
in
dec
leave
imul
mov
adc
mov
fiaddl
std
decb
les
das
mov
jae
mov
push
jp
cmp
jp
clc
rcrl
fs
cmp
inc
push
nopl
cmp
xchg
adc
mov
inc
xchg
aad
inc
fdivs
int
in
push
popa
jnp
mov
out
jo
loopne
mov
xchg
inc
shll
in
add
arpl
daa
mov
sub
push
fcomps
aam
sbb
inc
jb
jnp
scas
add
sub
insb
ret
pop
and
ds
cli
add
jno
mov
jmp
movsl
dec
mov
mov
dec
push
repnz
mov
sbb
dec
or
outsb
mov
push
push
addr16
out
sarb
xor
mov
fistpl
pusha
xor
dec
shrb
or
pop
sub
loopne
decl
in
dec
loopne
and
add
xrelease
push
cltd
loop
dec
loope
divl
aaa
inc
pushf
mov
jmp
aas
shll
lea
aas
adc
leave
test
mov
or
mov
or
lret
sub
sbb
cli
test
push
push
ficomps
sbb
jecxz
movsl
ss
fs
push
iret
testl
fs
mov
addr16
sbb
sub
loopne
testl
sub
inc
pop
mov
and
mov
mov
lcall
fisubrs
lret
inc
aam
imul
fnstcw
push
aas
jle
repz
dec
lods
ret
sub
and
popl
push
and
sbb
clc
mov
sbb
out
cmp
push
push
mov
lret
push
mov
sub
pop
popa
mov
push
cmp
aas
push
sub
push
sub
cli
inc
adc
dec
out
push
xor
inc
rcl
pop
std
and
pop
sub
cs
push
cmp
jno
or
out
sub
inc
xchg
and
add
cmp
adc
cmp
mov
stc
adc
jge
or
in
test
dec
xlat
ljmp
adc
mov
insl
outsl
sbbb
arpl
push
popf
inc
and
cs
mov
fwait
jecxz
test
sbb
int3
pop
popf
loop
mov
lcall
mov
loope
add
jnp
lods
mov
jecxz
ret
gs
iret
add
cmp
mov
or
or
testl
enter
jae
out
xchg
push
or
pusha
mov
insb
idivb
mov
popf
insb
or
addr16
data16
push
je
test
jecxz
insl
xor
cmp
mov
imul
adc
sub
roll
dec
jno
lcall
neg
andb
cld
test
mov
push
aaa
in
push
adc
aas
push
mov
jb
xorl
cld
das
shrb
das
imul
paddw
inc
dec
nop
sbb
fwait
mov
xor
or
dec
add
jge
or
rorb
mov
mov
stos
mov
test
lock
outsl
sbb
cltd
in
mov
test
xchg
ljmp
and
adc
mov
cli
jp
ss
sbb
xor
cld
and
testb
sti
fs
cli
scas
repnz
ljmp
sub
pusha
lret
rcr
jle
xor
inc
xor
jmp
sub
xchg
addr16
stos
push
cwtl
cli
sbb
jmp
rcr
cmp
jae
jp
xor
mov
push
jns
pop
xor
dec
sbb
es
xor
mov
outsb
bound
add
sub
jge
hlt
dec
sbb
mov
sahf
mov
popa
mov
push
fisttpl
rcrl
aaa
mov
daa
or
push
lods
mov
jge
stos
in
and
and
jbe
leave
jb
fistpll
loop
lret
or
aad
and
ja
cmp
int
mov
or
vpslld
inc
sub
shrl
daa
pop
push
push
sub
dec
pop
sbb
sbb
es
mov
jo
xchg
out
sub
out
inc
lock
inc
loop
mov
and
daa
into
dec
and
and
adc
mov
and
cmp
xchg
test
or
or
sbb
sub
or
out
or
fs
jo
dec
jl
stc
pop
pusha
cmpsb
sti
fmull
addr16
cmc
cmp
enter
in
push
ret
sbb
add
pop
mov
xor
inc
jne
ret
jle
dec
cmp
jecxz
cmc
cmc
pusha
or
mov
inc
adc
jns
cs
pop
adc
sbb
stc
sbb
push
jl
movsb
aas
popa
mov
lock
aas
jnp
call
pop
lea
fwait
daa
testl
jl
sbb
or
cmp
mov
adc
sbb
mov
cmpsl
or
loope
mov
mov
mov
mov
dec
sub
pop
mov
xor
fs
enter
jmp
cli
mov
adcb
pop
xchg
int
push
fndisi(8087
imulb
inc
inc
mov
and
cltd
adc
insl
or
mov
lcall
addr16
jecxz
dec
or
lret
pop
jl
stc
jmp
out
fidivl
jle
mov
mov
sub
andl
add
push
out
dec
pop
xchg
mov
enter
xor
aad
ljmp
sbb
imul
jg
idivb
pop
fwait
jb
clc
daa
std
es
je
hlt
pusha
mov
fmull
push
cmp
jns
rorb
enter
ljmp
cmp
sub
fs
fdivr
call
sub
jns
sbb
insl
in
push
ljmp
lods
aas
xchg
sub
push
cli
cs
in
mov
pushf
outsl
shrb
sub
and
dec
cmc
jae
imul
jl
push
pop
out
popa
ja
out
and
push
aas
pop
in
xor
testb
mov
jb
sahf
out
sbb
pop
out
and
dec
out
cmpsl
out
fldenv
bnd
add
pop
shrb
dec
loop
loope
aaa
loopne
out
mov
dec
or
jo
sbb
jne
mov
ljmp
lock
lret
loop
add
shr
and
adc
call
loope
dec
aas
adc
insb
flds
ret
push
xchg
and
and
mov
repz
mov
dec
mov
loop
popa
cmp
add
sub
dec
mov
out
jno
pavgb
rcr
out
jb
insl
pop
dec
daa
cmp
jb
sbb
sub
adc
repz
adc
push
and
int
cli
int3
adc
xchg
push
jns
loopne
xor
xchg
rep
jns
pop
pop
fbld
mov
in
jge
jbe
out
shr
in
pop
xlat
jl
or
ret
scas
xchg
addr16
iret
and
lcall
xchg
adc
push
mov
fidivl
or
xor
inc
leave
repz
add
cmovnp
movsl
push
movsb
dec
cmp
xor
pusha
loopne
fcom
out
push
int3
jmp
mov
idivl
js
adc
sbb
mov
push
cmp
in
imul
and
and
int
mov
push
jg
loopne
inc
mov
dec
pop
adc
sti
add
repz
mov
sbb
jmp
shlb
jnp
aad
xchg
enter
adcb
sub
ds
dec
sub
out
and
sub
pop
ret
mov
repnz
jno
mov
adc
fwait
pop
pop
iret
test
jl
outsb
push
test
mov
adc
dec
fs
cmp
arpl
std
push
popf
les
cld
jmp
daa
loope
adc
sub
sar
data16
shrb
fcmove
jae
int3
jg
sub
jo
into
and
fsubs
pusha
and
sub
dec
repz
data16
and
bnd
sbb
push
out
mulb
outsl
push
nop
in
xor
and
inc
sub
pop
sub
fldenv
dec
sbb
jbe
pop
lock
sbb
outsl
daa
loope
hlt
mov
cmp
and
and
mov
inc
movsb
lahf
ret
mov
xor
stos
or
push
mov
ljmp
int
sub
push
adc
push
inc
repz
jmp
mov
int
cmpsb
xchg
int3
dec
push
repz
xchg
inc
sub
in
daa
sbb
push
mov
fdivrl
jmp
mov
or
es
add
pop
cltd
int
push
add
or
insl
cld
xchg
inc
jecxz
and
sub
neg
loope
loop
jns
movsl
adc
jne
pop
andl
cmpsl
jp
xchg
in
push
cmp
imul
xchg
test
shlb
or
lods
lock
fldenv
imul
lods
mov
test
add
or
out
cmp
orl
push
fsubl
jno
fadd
fs
enter
js
icebp
pop
mov
es
jecxz
jecxz
push
cmp
testb
lret
cmp
and
imul
lock
adc
xchg
nop
sub
push
sub
rcrb
cld
dec
pushf
ret
outsb
inc
jb
outsb
adc
in
sbb
repz
aam
int
sbb
icebp
pop
idiv
ficoml
mov
outsl
xor
push
add
push
scas
sti
negb
adc
add
xor
xchg
push
fsubrs
jnp
xor
adc
hlt
inc
sbb
and
sti
out
jmp
sbb
jp
clc
push
lods
pop
mov
in
lock
push
pop
or
and
in
mov
fs
mov
mov
lods
imul
cmc
jo
les
add
mov
adc
cli
icebp
add
pop
arpl
mov
movsb
xchg
add
in
adc
loop
push
xchg
push
outsb
push
shll
lret
fildll
xchg
test
xchg
jne
or
jbe
loop
jp
adc
iret
mov
jne
sub
pusha
or
imul
sub
imul
fnstcw
jbe
loop
test
inc
fiaddl
jb
js
sub
into
fbld
cmp
outsl
sub
sbb
mov
jge
aaa
std
lock
add
ret
mov
gs
ljmp
sub
cmp
xor
nop
idiv
sub
xchg
fld
iret
push
and
push
lsl
push
mov
mov
sbb
pop
sahf
dec
jl
fldcw
lcall
mov
inc
mov
push
arpl
mov
jecxz
dec
int3
outsb
aam
adc
in
dec
lea
lock
xchg
and
add
out
ljmp
daa
in
lock
mov
mov
pop
jae
xchg
push
sbb
mulb
clc
arpl
mov
popf
mov
jmp
ja
and
add
mov
jnp
jo
sbb
clc
fs
add
jle
push
cmp
imul
sub
mov
hlt
fwait
cmp
repnz
mov
cmc
out
pop
pop
aaa
dec
mov
loop
test
xchg
pop
or
mov
sti
dec
pop
or
pop
lock
push
inc
repz
cli
out
jb
sub
lret
xchg
ret
jp
jo
xlat
sarl
loop
stos
mov
fdivrl
call
hlt
push
daa
insb
and
fwait
mov
jmp
sub
jl
push
cli
push
lret
sbb
or
imul
sub
jbe
bound
cltd
mov
mov
dec
repnz
mov
gs
adc
test
cmc
push
ret
pop
dec
aad
pop
adc
pop
sbb
jae
in
jno
fcompl
jns
cmp
push
data16
and
outsl
inc
xor
mov
mov
imul
xor
push
fisttpl
addr16
mov
add
mov
test
fs
adc
fincstp
jmp
lock
cmc
push
ret
ret
sbb
push
push
pop
inc
cmp
mov
mov
cmpsl
sbb
sub
in
dec
jnp
stos
adc
xor
or
in
movsb
addr16
xor
push
fincstp
sub
add
outsb
or
push
ljmp
addr16
outsl
imul
sbb
mov
es
ret
shll
xor
cmc
iret
add
lcall
inc
sub
adc
jecxz
lret
or
jecxz
scas
add
movups
jnp
ror
ljmp
mov
mov
outsb
dec
int
cmovae
ret
jl
cmpsb
bswap
jp
sbb
std
or
mov
sub
shrb
dec
dec
cmp
inc
ret
insl
or
push
movsl
loop
addr16
pop
shll
je
add
inc
pop
sti
hlt
daa
mov
ja
sub
lds
mov
jge
jo
sub
dec
jmp
loope
jae
stc
push
jnp
iret
ds
jnp
idivb
fisttpl
push
int
jle
int
sbb
aad
in
inc
cli
loop
mov
sbb
stos
adc
push
cltd
cmp
jae
inc
adc
cmp
or
int3
xor
imul
lods
jge
fcomip
inc
mov
stos
push
in
dec
les
std
fdivs
fbld
in
hlt
ljmp
push
push
sub
in
lcallw
adc
lock
push
ljmp
jp
xchg
pusha
loope
enter
mov
dec
daa
adc
cmpb
sahf
jl
adc
cmp
enter
enter
jp
fs
out
jp
aam
jmp
pop
sbb
stc
call
pop
outsl
pop
cmc
inc
pop
in
mov
fwait
sbb
aam
mov
pop
adc
mov
jns
out
out
in
pushf
lock
aad
ljmp
sub
orl
jb
out
xor
inc
fwait
inc
xchg
xchg
mov
outsl
idivb
arpl
and
data16
fwait
cmp
xchg
les
test
xor
sbb
test
and
jmp
cmp
push
inc
lcall
pop
shrb
and
arpl
jns
or
push
sti
push
popl
fimull
add
add
dec
imull
dec
cld
loopne
in
jl
mov
sahf
xor
pusha
mov
push
inc
jmp
outsb
les
lods
idivb
addr16
lcall
sub
sbb
shl
popf
add
adc
or
push
out
or
sbb
enter
jnp
dec
dec
push
cmpsb
xchg
add
jl
imul
push
fisubl
fwait
xchg
push
js
sbb
aad
mov
jne
pop
ss
inc
mov
pop
cmpb
inc
push
xchg
and
cmp
xchg
lea
into
mov
pusha
pushl
cltd
sbb
ret
lds
xchg
inc
lret
mov
inc
sub
test
pavgw
incl
cmc
cmp
int
dec
cmp
sub
out
out
fwait
lds
dec
fwait
xor
lcall
inc
pcmpgtb
pop
aad
out
aam
pusha
sub
sub
into
out
cmp
and
jecxz
mov
aam
xor
aaa
cltd
and
mov
and
inc
mulb
push
and
inc
lahf
ja
and
mull
stc
cs
aam
sub
cmpsb
xlat
adc
clc
xor
add
dec
sub
or
pop
xlat
or
outsb
and
mov
cltd
rorl
push
and
fcoms
xlat
je
jae
loop
not
cmp
outsl
and
addr16
into
cmp
enter
jae
sub
unpckhps
mov
rorl
xlat
movups
dec
daa
jae
push
das
fcmovnb
stos
and
les
and
repz
shlb
push
xor
or
xor
sbb
pop
sbb
jp
mov
sbb
mov
sahf
and
fs
pushf
dec
call
push
mov
popf
xchg
stos
sbb
out
cmpsl
sub
lret
js
hlt
les
popw
cmpsb
mov
sahf
lahf
sub
fstpl
lock
sbb
xchg
xor
mov
popf
xchg
jg
cld
dec
jno
adc
pusha
fidivs
jg
lock
aas
sub
cmp
cmp
lcall
clc
sub
mov
out
pusha
sub
cld
inc
fwait
rcrb
fnstcw
or
xchg
dec
mov
add
arpl
popfw
aas
pop
test
fidivrs
shll
sbb
lret
cmp
pop
test
clc
fnsave
sti
push
add
sub
jmp
shll
int
aam
cs
push
cmp
push
shrl
in
sbb
repz
xor
ret
mov
mov
sub
leave
lods
out
adc
sbb
cmp
mov
xor
fcmovb
cltd
call
rcrb
cmp
ret
pushf
or
lea
push
lret
aaa
outsl
xor
jl
mov
js
ret
adc
in
xchg
adc
fisubrl
out
loope
cwtl
jo
int
mov
xlat
sub
cmp
fucom
insl
dec
fdivrp
cmpsb
push
fstps
repnz
ja
mov
mov
sbb
sub
packssdw
pop
cwtl
mov
pop
bound
xor
add
inc
stc
xchg
add
inc
pop
fistps
push
shl
frstor
xchg
cmp
jmp
xor
cltd
repnz
xor
ds
dec
idivb
xchg
rorl
int
adc
pop
aad
and
inc
fbstp
dec
cmc
sbb
in
or
leave
fnstsw
jp
mulb
mov
xorl
sbb
add
jl
cmpsb
sub
xchg
or
mov
and
mov
sub
jns
push
out
mov
xchg
insb
sub
jb
xchg
lret
cli
pop
xor
repz
jp
lds
inc
pop
jno
pop
in
adc
push
cmp
dec
lods
enter
adc
lcall
push
repnz
cmpsb
add
xor
xchg
jno
movsl
sbb
movsl
xor
and
pop
and
out
out
lret
ja
cmp
in
cmp
jns
adc
sbb
mov
repz
int
fsubs
sbb
or
cld
popf
and
add
pop
adc
push
cmc
adc
pop
or
adc
inc
scas
xchg
jno
loopne
out
fidivs
les
test
aaa
add
dec
lret
adc
xchg
fcmove
test
pusha
sub
cs
mov
jne
data16
inc
es
pop
insb
outsl
int
js
adc
in
rclb
sub
xchg
test
call
js
rorl
add
inc
mov
adc
xor
jmp
adc
fcomp
jl
and
arpl
mov
inc
std
sub
in
or
pushf
pop
push
cmp
or
and
pop
int3
ss
or
movsb
fnstsw
test
and
lock
and
hlt
iret
gs
jmp
in
outsl
popa
mov
sub
shll
pop
mov
out
repnz
std
mov
pop
enter
pop
test
pop
pushf
in
pop
jae
addb
add
and
loopne
jg
sub
mov
jae
lock
std
pop
testb
dec
jl
cmp
into
das
xlat
stc
outsl
pop
das
jo
test
jae
sbb
and
lahf
ret
dec
sbb
fdivs
sbb
inc
push
ja
fdivr
push
and
pusha
call
pop
lock
enter
out
fcmovb
loop
sbb
cmp
jno
in
push
daa
aad
pop
cltd
out
ret
jno
or
test
push
cwtl
xor
arpl
pop
daa
outsb
out
notl
ret
pop
jmp
shufps
and
jge
in
outsl
xor
add
dec
cmp
jnp
jno
out
xor
xchg
push
cmpsl
fs
pop
push
cmp
mov
aaa
fisubrl
cmp
scas
sbb
nop
fnsave
cmpsl
ja
xor
xor
jmp
sbb
subb
and
mov
inc
or
xchg
pushf
mov
pop
cmp
xlat
jbe
jg
lds
mov
xchg
cmp
into
jb
lahf
out
add
cmp
xchg
jbe
jnp
aam
in
xchg
imul
stos
push
jle
stos
cltd
hlt
jb
or
leave
adc
lods
push
in
lds
xor
adc
pop
in
arpl
push
ss
adc
mov
pop
inc
mov
mov
ficompl
mov
mov
mov
clc
frstor
jbe
xchg
xor
cmpsl
repnz
mov
pop
loope
xor
fmuls
lock
addl
or
mov
jmp
pop
and
sub
pushf
mov
daa
loope
fimuls
js
add
imul
or
into
cmp
cmp
jns
pop
out
sbb
cmp
adc
dec
xchg
insl
sbb
or
inc
jmp
adc
cs
adc
pop
jecxz
rep
sub
rolb
leave
inc
cmp
adc
add
pop
pop
mov
sbb
mov
push
adc
and
jge
lret
cmc
push
in
jl
ljmp
lret
add
movsl
daa
and
jne
in
cmp
sub
mov
movsb
in
stc
repnz
icebp
push
sbb
sbb
popf
add
leave
rorl
int
shll
loope
ja
cmp
pop
loope
pop
in
xchg
cmpsl
cmp
fadds
sysret
jmp
das
nop
test
cld
into
mov
faddl
je
and
mulb
push
insl
or
jo
fimuls
imul
sbb
jbe
aaa
push
cmp
and
add
rorl
pop
rcrb
mov
dec
pop
shr
xchg
in
push
push
in
imul
fmul
in
xchg
sub
add
es
sbb
ss
je
cmp
push
adc
mov
pop
add
jnp
adc
jle
aas
arpl
sbb
lock
dec
sbb
js
insl
jnp
in
inc
arpl
jmp
or
movsb
pop
inc
sbb
les
pushf
jbe
mov
mov
and
add
adc
sbb
aad
ljmp
push
sbb
aas
pusha
push
rcrl
jo
and
or
dec
outsl
es
sbb
stc
imul
jg
xchg
cmp
pusha
arpl
hlt
and
cmpxchg
cmp
sub
inc
pop
jo
insl
scas
mov
mov
inc
pop
adc
cmpb
mov
jbe
push
push
lcall
mov
or
stc
push
adc
iret
into
lock
jecxz
in
jbe
ret
sub
sbb
adc
mov
cmp
int3
js
fidivrl
dec
daa
out
mov
push
sarl
jge
add
popa
inc
dec
ffree
pop
js
xchg
pop
shr
inc
jne
pop
sbb
je
lods
insb
push
in
xor
in
idivl
mov
ss
jecxz
and
xor
test
xchg
cli
sbb
fwait
out
stos
xchg
cmpsb
outsb
dec
int3
in
int3
cmpl
dec
int3
loope
fstl
jg
loope
xor
scas
sub
ds
sarb
sarl
es
add
fwait
pop
call
xor
mov
vshufps
or
rcr
xor
fdivrp
js
add
mov
in
cld
leave
sub
mov
aam
jns
sub
push
cmp
in
jmp
jg
mov
aam
jmp
push
enter
jo
fnsave
jmp
stos
push
aas
or
call
clc
andb
add
sbb
push
std
out
sub
inc
out
dec
cmp
pusha
or
imul
mov
rol
jo
fstpl
inc
sahf
outsl
repnz
adc
mov
inc
mov
fdivl
rorl
mov
imul
les
push
xchg
sbb
cmp
icebp
inc
add
adc
adc
loop
pop
orb
stos
sub
add
xchg
add
sti
xor
adc
mov
push
inc
jg
or
jae
fisubs
std
xlat
jle
iret
inc
jl
xor
imul
icebp
and
push
xchg
push
es
dec
xor
in
mov
pop
adc
int3
bnd
clc
repnz
sub
hlt
and
sahf
mov
push
mov
cmp
hlt
pop
repnz
loopne
cmp
sbb
jbe
push
insl
xor
jns
adc
mov
idivb
cmp
mov
fdivrs
fstpl
pop
push
rcr
pop
std
arpl
push
pop
cwtl
cmp
sbb
jecxz
jge
pop
jnp
mov
cmp
cmp
mul
add
lods
daa
mov
rcll
ret
divl
out
mov
sbb
popa
sub
inc
or
cmp
mov
xor
mov
dec
push
test
js
mov
or
cld
ljmp
paddd
push
or
mov
sbb
aas
cmp
les
and
sub
ret
jp
xor
mov
push
dec
addr16
shll
sarl
add
sub
cmpsb
out
daa
mov
sbb
push
outsb
jbe
insb
and
and
push
push
outsb
pop
leave
pop
xor
pusha
add
test
push
fisttpl
arpl
dec
jb
cmpsb
xacquire
fsts
mov
dec
adc
enter
sub
jnp
dec
fdivl
cs
push
fs
xchg
xor
add
push
xchg
imul
inc
cs
std
inc
cmp
pop
xchg
jl
test
fnstcw
cmp
data16
pop
sub
xor
rclb
ss
xchg
frstor
jno
mov
cmc
les
cmp
inc
mov
mov
int
xor
adc
push
enter
popa
fdiv
jbe
push
notl
push
sbb
xchg
ljmp
pop
popf
sub
sbb
inc
xor
aad
xchg
jmp
add
cli
adc
fcomps
jo
push
into
jle
sbb
push
out
push
jle
pop
sahf
xchg
mov
xchg
outsl
xor
mov
mov
decl
xor
dec
popa
push
sbb
adc
aad
cmp
xor
pushf
mov
leave
jmp
push
sbb
pushf
dec
pop
xor
cmp
sbb
cmp
fadds
outsl
xor
stos
gs
xor
int
pop
ss
pop
add
mov
cmp
fstps
sub
gs
jge
imul
mov
ret
in
mov
movl
cmpsl
bound
or
es
imulb
pop
fwait
xor
aam
clc
popa
loopne
fstps
fidivrl
dec
xchg
push
jp
inc
jmp
jp
cmp
ljmp
mov
test
stos
aaa
sub
maskmovq
mull
and
lret
cmp
push
popf
xlat
les
and
add
adc
sbb
out
sub
icebp
lcall
cmp
sarl
lret
dec
call
jno
push
arpl
or
scas
pop
jb
outsb
pop
neg
enter
cmp
sbb
push
sub
ss
xor
fidivs
cmc
ficoml
and
shl
jp
jnp
in
hlt
dec
pop
push
popf
pop
cmp
das
rcl
cli
cli
fcmovnu
and
xor
add
push
add
bndstx
sub
and
mov
rorl
hlt
leave
enter
dec
xor
dec
rorl
inc
out
xchg
or
xor
callw
and
jno
and
and
repz
mov
xor
push
cs
ret
xchg
jnp
adc
into
fmull
xor
push
fs
mov
outsb
pop
data16
jnp
sub
sbb
aas
adc
mov
stos
enter
int
enter
jo
or
cmp
in
push
lcall
or
sub
cmp
sarb
pop
les
int3
negb
ror
lods
fsubrs
jnp
dec
pop
pop
jb
cmp
fcoms
int3
inc
jae
sub
xchg
mov
jbe
in
popa
push
prefetch
aaa
adc
loopne
sahf
call
jbe
pusha
cmp
push
rcr
jmp
push
inc
fistl
xor
icebp
into
jb
iret
pop
push
jg
cmp
ds
push
pop
mov
jmp
inc
sub
push
mov
adcl
addr16
mov
add
out
pop
add
mov
xchg
ret
push
jbe
lret
push
lret
xchg
fisubs
imul
insl
out
fcmovnu
iret
rorl
into
outsl
pop
fsubs
sub
leave
or
pop
mov
and
mov
jg
daa
push
fabs
loopne
das
idiv
std
icebp
dec
cmp
paddb
insl
aas
dec
lret
fiadds
inc
stos
or
lods
enter
ljmp
mov
xorb
insl
inc
jmp
in
mov
in
fistpll
loopne,pn
push
or
out
or
daa
dec
jnp
psllq
sbb
cmp
sub
jecxz
sub
dec
xchg
nop
add
pop
ror
sbb
mov
or
pop
bndldx
stc
cmp
loop
aam
jp
mov
xchg
out
cwtl
xchg
mov
jne
mov
incl
xchg
cwtl
cmc
inc
jns
scas
call
xchg
xchg
cmp
sti
push
sbb
mov
lret
push
add
lahf
test
add
sbb
std
mov
xchg
pushf
adc
lock
pop
push
dec
xchg
sbb
jge
pop
stos
jo
pop
stos
jo
pop
stos
jo
pop
test
gs
call
call
push
mov
sbb
gs
or
outsb
aam
shrl
dec
mov
cld
jo
lods
cli
push
shl
or
adc
pop
out
adc
outsl
xchg
pop
repnz
sub
mov
push
paddsb
aam
in
or
adc
lea
in
jb
rorb
js
sub
mov
inc
ljmp
cmp
mov
push
pushf
sbb
loop
push
shl
lcall
sub
inc
shlb
pop
mov
jge
and
outsl
and
push
test
out
data16
inc
cs
lahf
jns
inc
idivb
es
insb
iret
out
sub
and
and
jns
aam
jp
pop
xchg
fstps
mov
jp
rcrl
cwtl
inc
out
pop
add
cmp
ljmp
loope
fisttpll
fs
sbb
repnz
stc
jne
pusha
pop
jp
xchg
movsb
arpl
std
je
adc
add
or
pop
js,pn
cmp
jmp
fidivrs
add
add
aam
or
fsubrs
mov
ja
arpl
pop
cmpl
push
push
fs
lock
xor
jmp
out
mov
add
jecxz
cmc
xor
bound
cmp
leave
js
sbb
rcrl
push
mov
push
ja
imul
pop
in
clc
cmp
mov
iret
push
in
enter
dec
push
jecxz
cmc
mov
dec
adc
js
mov
pop
int
test
mov
out
fmuls
add
cmp
lret
fisttps
push
shr
aad
cmp
sbb
jge
notb
shr
das
sti
xor
pushf
and
pop
xchg
add
lret
xchg
jl
outsb
lock
jecxz
or
je
lcall
dec
insb
pop
cli
repz
mov
adc
aad
or
repz
jge
xchg
outsb
or
cmp
lods
andb
jmp
jge
aas
hlt
dec
xchg
in
lea
divl
xor
imul
pop
xchg
dec
lds
pushf
loop
out
subb
cwtl
rorl
cmp
movsb
jnp
jne
rolb
movsb
push
jbe
add
and
popa
jg
inc
mov
shl
lcall
xor
sbb
sti
addl
gs
mov
incb
mov
add
fs
inc
sarl
xchg
cli
sub
in
fnstenv
aam
jmp
loop
in
insl
cltd
hlt
jecxz
pop
fldt
clc
sub
xor
and
cmp
out
mov
popl
popf
test
mov
aas
fadds
sub
jp
sub
fsubs
fsubl
loopne
xor
insb
aas
cmp
sbb
push
mov
sahf
test
adc
rorl
jae
and
into
jmp
sbb
sarb
fwait
mov
pop
sbb
cli
icebp
push
mov
xchg
adc
repnz
fcmovbe
imul
lea
mov
in
loope
fisttpll
cmp
mov
pop
popa
or
mov
xchg
inc
sub
and
push
push
cmpsb
or
pop
xor
lock
pop
adc
ficompl
jp
push
out
jnp
adcl
push
mov
lea
pop
jecxz
sahf
xor
sbb
xchg
mov
lahf
push
aad
leave
mov
sbb
xor
aad
mov
push
loopne
xchg
jl
push
lcall
pusha
pop
jle
mov
jecxz
xchg
insb
xchg
cmc
int
lea
and
sub
ret
pop
jge
and
ljmp
call
mov
js
imul
mov
cmp
add
cmp
cltd
xchg
test
sub
mov
xchg
icebp
adc
mov
bound
sbb
fldenv
inc
fnstenv
fs
pop
xlat
mov
adc
push
lods
out
popa
loop
sub
sbb
jmp
out
dec
add
jge
sub
xchg
int
pop
inc
or
add
pusha
xor
sbb
in
sbb
mov
div
outsb
inc
test
outsl
lahf
inc
mov
ficoml
pop
pop
cmp
adc
sub
iret
iret
popf
jae
adc
popa
push
push
push
pop
dec
push
mov
test
outsb
cwtl
popl
mov
and
movsb
imul
push
daa
test
pop
pusha
pavgb
data16
int3
jb
xor
es
mov
dec
mov
sub
iret
lods
jecxz
test
data16
sub
push
fcmovnb
xor
aam
pop
decl
test
loopne
and
hlt
sti
aad
or
scas
incl
out
mov
inc
cmp
push
adc
fldt
fadds
leave
jne
fidivrl
jnp
lds
sbb
gs
js
dec
adc
lret
sahf
mov
add
outsl
inc
repz
jbe
add
cmc
add
jb
add
add
pusha
or
je
call
pop
add
cmpb
jne
popa
jmp
fldt
cmp
add
pop
and
xor
mov
add
cmp
jne
movzwl
add
mov
add
cmp
je
sub
jmp
mov
mov
add
mov
add
jmp
mov
mov
push
push
call
call
pop
sub
mov
movb
sub
mov
popa
jmp
dec
and
mov
js
and
mov
sbb
cwtl
dec
es
leave
in
js
pop
das
pop
mov
xchg
enter
jmp
mov
sub
cmp
mov
dec
push
ss
and
mov
inc
ja
fs
jmp
mov
sbb
cwtl
dec
and
je
and
jl
sub
mov
mov
inc
mov
inc
mov
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
jae
xor
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
je
push
sub
mov
pop
mov
inc
mov
jmp
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
sub
mov
jne
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
push
mov
sub
rep
pop
jmp
dec
shl
mov
inc
mov
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
cmp
jae
cmp
jb
inc
push
mov
sub
rep
pop
jmp
cmp
ja
add
push
mov
sub
rep
pop
jmp
mov
inc
xor
shr
je
adc
mov
push
mov
sub
rep
pop
mov
jmp
sub
mov
popa
ret
jmp
jmp
add
incl
jb
addr16
imul
fs
mov
mov
adc
adcb
je
jae
cmp
mov
test
xchg
and
and
inc
xchg
ret
ret
and
imul
inc
add
fs
je
xor
inc
add
in
add
cld
pusha
sbb
or
jne
jmp
push
jo
insb
adc
and
lret
pushl
fwait
add
or
je
and
cwtl
dec
fisttps
mov
or
xor
xor
or
pop
jge
popa
mov
leave
ret
mov
jl
sub
cld
pop
xor
xor
jo
mov
adc
or
xor
pop
mov
xor
scas
add
jmp
adc
je
push
inc
pop
daa
bnd
mov
stos
stos
jnp
ret
xchg
pop
add
mov
mov
push
stos
ret
jnp
dec
ret
faddl
call
adc
or
mov
push
push
push
xchg
push
or
gs
xchg
dec
clc
inc
sbb
jne
inc
jle
cmp
add
mov
rorb
add
mov
adc
xchg
hlt
call
or
fimull
lock
and
lods
lfs
and
cmpl
je
cmp
add
adc
out
popa
or
pusha
inc
lret
call
sub
push
xor
mov
and
jmp
ret
push
push
cmp
pop
icebp
pop
fsts
jne
out
pop
aas
mov
or
mov
test
cs
enter
test
pop
mov
sub
stos
adcl
add
incl
push
cmp
outsb
jb
int3
inc
mov
push
rorb
adc
cmp
or
jne
movl
and
test
cs
mov
sub
cmp
in
jge
add
adc
test
or
pop
mov
outsl
xchg
xchg
sbb
inc
or
adc
into
test
and
adc
fiadds
loop
xor
out
inc
sub
add
and
adc
mov
adc
or
test
adc
add
push
aas
inc
and
adc
mov
inc
fldenv
and
iret
or
test
and
adc
and
adc
popf
adc
in
and
inc
repnz
repz
xchg
mov
add
or
inc
xchg
and
and
adc
add
add
inc
xor
and
and
xor
adc
adc
sbb
mov
or
jo,pt
xchg
adc
in
adc
xor
adc
adc
sbb
cs
mov
les
dec
push
inc
mov
or
adc
mov
adc
or
and
pop
inc
jmp
lods
jge
and
mov
mov
sub
dec
push
je
inc
sub
jno
sbb
dec
mov
sbb
and
inc
in
sbb
or
inc
jns
pop
mov
nop
add
pusha
lea
es
add
sahf
adc
aas
pop
je
or
xchg
cmc
inc
push
sbb
xorl
push
add
adc
out
out
cmp
push
test
lret
orb
dec
adc
push
dec
ret
xor
sbb
mov
or
mov
adc
jns
or
mov
mov
adc
xchg
int
ficoml
xchg
cmp
js
js
jbe
cli
enter
call
dec
or
jne
xor
adc
adc
mov
cmp
stos
shlb
or
cltd
popa
js
pushl
mov
rcrb
xchg
mov
pop
pop
cmp
push
jmp
in
clc
pop
popa
adcl
add
adc
cmp
add
inc
xor
pop
ret
mov
xor
aam
xor
mov
adc
jae
adc
scas
push
loope
in
push
sbb
mov
sbb
sub
xchg
cmpsb
mov
jne
or
in
ret
insb
fildl
inc
mov
adc
sbb
sbbl
clc
fwait
es
adc
mov
and
jo
fwait
test
js
add
jl
inc
xor
rcrl
cwtl
cld
sti
div
mov
xor
call
pop
add
out
push
and
xor
loop
and
in
aam
sar
call
inc
ror
mov
add
mov
dec
in
es
or
lods
test
mov
cld
xor
daa
cld
push
hlt
or
xor
mov
or
inc
ret
adc
cmp
sub
dec
mov
xor
jo
push
pop
and
sub
test
inc
or
pop
fists
and
pop
push
popa
pop
les
in
test
add
call
lea
push
push
sub
adc
jne
cmp
mov
into
inc
and
hlt
xor
sbb
push
test
pop
pop
psubsb
cmc
idivl
sbb
lock
sahf
or
call
jo
mov
push
push
stos
cmp
jb
jne
jb
inc
les
pop
lahf
shlb
or
test
insb
inc
shl
cmpsb
rolb
shll
or
cmovle
nop
mov
pop
ret
idiv
adc
insb
movsb
rcr
push
out
push
call
add
push
clc
jle
sbbl
inc
mov
push
fsubrs
jmp
int3
movsl
enter
mov
test
add
test
test
add
jp
jne
popf
cmpsb
cmpsl
or
push
adc
sbb
pop
and
push
sub
mov
leave
scas
rcrb
pop
jns
les
jg
outsl
add
les
adc
lock
mov
adc
add
mov
xor
loop
and
adc
or
aas
pop
sbb
or
xor
jmp
mov
sub
movsb
or
mov
and
mov
or
or
or
outsb
or
or
and
pop
hlt
xor
fbld
fcoml
cmp
adc
das
call
pop
and
jge
inc
repz
popa
xor
sbb
or
ss
cmp
and
jbe
inc
aam
push
lret
ret
xchg
adc
and
leave
add
cmp
jne
mov
mov
outsl
push
call
movsb
add
pop
loopne
nop
add
inc
mov
lret
lret
mov
std
dec
inc
mov
and
jmp
add
sub
and
lea
das
or
inc
jb
xchg
in
mov
ret
mov
push
outsl
fsubs
inc
arpl
push
or
sbb
outsl
pop
inc
ror
push
or
dec
daa
cmp
or
into
mov
notl
xchg
adcl
test
je
testb
flds
in
push
movsl
adc
xor
adc
pop
bound
dec
or
pop
jg
cwtl
push
jo
cmpsb
push
out
xor
xor
sar
inc
adc
out
or
mov
dec
add
push
or
push
loope
xor
shlb
adc
xor
or
add
stos
xor
data16
push
sub
or
inc
sbb
adc
ss
add
ret
in
out
cmp
inc
mov
ror
lret
test
fdivl
add
add
xor
mov
jmp
push
bound
data16
push
outsl
jo
pop
or
imul
inc
fnstsw
fs
xchg
jb
sbb
push
fcomps
xor
in
dec
std
shlb
push
add
xor
push
push
xor
pusha
sub
or
fisubrs
or
adc
mov
inc
movlps
sbb
incl
pusha
js
or
inc
fiadds
push
je
inc
add
dec
nop
xor
xor
xor
jns
jo
dec
jp
je
insb
add
stos
fcoms
inc
arpl
jb
int
lret
xor
push
inc
add
in
enter
adc
and
mov
lock
adc
and
popa
pop
adc
inc
and
adc
adc
or
sbb
inc
or
movsb
jne
inc
adc
or
jns
cltd
jno
or
mov
cmp
movsb
mov
fs
cmp
bound
jnp
push
and
or
xchg
je
mov
mov
or
and
dec
and
cltd
in
inc
cld
cltd
imul
adc
and
faddl
mov
aam
int3
xor
mov
adc
xchg
xchg
and
xor
imul
and
or
pop
js
jp
jl
jle
jle
nop
data16
jo
cs
sub
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
dec
shll
jle
movsb
add
push
repnz
jb
inc
pusha
js
nop
adc
xchg
lock
jae
xor
shll
push
or
xor
and
sub
rorb
data16
jo
inc
int3
in
cld
adc
add
pusha
jns
mov
mov
and
push
xchg
push
outsb
jae
add
insb
nop
mov
pop
scas
pop
movsb
push
inc
and
pop
push
fld
pop
pop
inc
adc
sbb
orb
or
mov
mov
xor
es
or
outsb
arpl
jae
pushf
inc
je
add
cmp
mov
cld
cmp
rorb
sub
es
hlt
push
aad
es
xchg
cmpsl
insb
xchg
cwtl
mov
dec
fwait
mov
and
mov
pusha
decb
outsl
fs
push
pushf
rorb
xchg
mov
inc
jo
and
cld
xchg
icebp
fs
aas
mov
inc
nop
or
adc
push
inc
and
repnz
adc
dec
push
flds
xchg
push
jl
xchg
sub
xchg
or
xchg
mov
adc
jno
call
into
ret
dec
push
addr16
rorl
jae
xchg
and
push
pop
mov
lcall
dec
movsb
sbb
pop
and
repz
outsb
cmp
faddp
nop
imul
and
inc
add
push
js
lea
nop
lods
dec
mov
enter
sbb
test
or
enter
inc
leave
sbb
test
or
lock
and
sbb
fnstenv
out
sub
xchg
rorl
and
and
inc
sti
and
test
and
push
inc
pop
pop
incl
enter
xor
imul
and
add
jns
inc
xchg
mov
jmp
or
xor
and
jmp
pop
xchg
cwtl
inc
jo
andl
dec
stos
dec
adc
insl
inc
mov
sub
je
push
sub
and
mov
jmp
addr16
and
addb
filds
dec
cwtl
adc
cs
repz
orb
movsbl
jmp
push
cmc
fisttpl
mov
rolb
in
loope
sub
push
push
push
test
je
addl
lock
mov
cmp
cmp
sub
inc
push
or
mov
movb
mov
cld
xor
or
mov
cltd
push
adc
mov
push
adc
lea
mov
movsl
lahf
loope
dec
lea
lds
ret
mov
xor
dec
lea
xor
sub
bound
mov
adc
call
popl
or
sub
ret
push
inc
or
pop
jge
sub
pop
add
hlt
scas
sub
add
mov
sti
ljmp
add
loope
stos
mov
scas
into
add
out
sbb
outsb
and
movsl
xor
jle
test
adc
or
je
push
sbb
insl
jo
outsb
jns
push
out
fs
outsb
into
ds
test
inc
mov
jae
and
cltd
jg
gs
out
xor
cs
lret
jne
xchg
cld
cmp
call
in
jmp
iret
or
xchg
gs
adc
mov
adc
mov
mov
sbb
inc
and
ds
add
push
jnp
inc
push
pop
dec
fisttps
add
aad
jmp
cli
pop
mov
add
ljmp
and
fmuls
insb
push
inc
arpl
sbbb
je
and
incb
adc
loope
fsubl
movsl
mov
arpl
mov
add
inc
cmp
inc
movl
add
mov
cmpl
lea
orb
cmpb
jle
popa
invd
dec
jne
fsubrs
dec
and
stc
inc
adc
shrb
int3
push
sub
add
repnz
mov
mov
mov
stc
cmpsb
xor
clc
sbb
adc
cltd
push
hlt
push
adc
gs
add
pop
clc
shl
add
sub
xor
fisttpl
cltd
jb
xchg
cmp
cmpsl
jmp
dec
and
decb
or
jmp
ret
or
adc
or
inc
ja
and
inc
add
push
in
hlt
cmpl
jb
data16
jbe
in
stos
enter
rorb
cld
adc
cmp
sbb
adc
push
inc
dec
jne
cmp
mov
sub
mov
fwait
push
rorb
int
shll
cs
es
jmp
mov
and
in
push
jge
add
sbb
dec
pop
les
insl
sbb
sbb
les
mov
sbb
inc
mov
add
xor
push
add
int3
int
pop
sub
xor
ss
inc
adc
fistpl
in
lret
jo
shrb
jbe
add
mov
jecxz
mov
push
inc
jne
cs
adc
nop
push
dec
mov
mov
lock
enter
mov
out
push
out
decl
xorl
roll
aas
ja
or
xor
hlt
jno
xor
sbb
jmp
les
stos
mov
adc
push
push
mov
pop
adc
push
inc
ja
mov
in
adc
sub
idivb
mov
mov
inc
mov
push
mov
mov
sub
fimull
push
inc
hlt
pop
or
adc
mov
or
add
pop
xor
mov
pop
and
sub
ret
sub
pop
or
shl
or
mov
gs
lret
xchg
add
sbb
clc
adc
push
int
push
sub
adc
adc
adc
jmp
add
mov
pop
sub
sbbl
push
add
das
jnp
push
sbb
pop
pop
icebp
imul
lock
mov
ljmp
pop
add
jp
lcall
push
xchg
js
test
cli
pop
outsb
testl
or
out
cs
inc
sbb
jmp
push
in
jecxz
mov
jmp
xlat
sbb
stos
mov
or
popa
repnz
sub
call
addr16
ret
adc
je
push
dec
ret
orb
and
fdivs
xchg
mov
xor
jo
sub
dec
add
xchg
movb
ret
cltd
push
bound
or
xchg
inc
dec
mov
sbb
ja
js
je
call
and
adc
xor
mov
lea
add
xor
jnp
push
xorb
sub
inc
add
cmpsl
in
imul
mov
negl
inc
js
add
dec
cmp
jne
faddl
mov
jnp
mov
fwait
sti
jl
shlb
js
xchg
out
jne
fldl
fwait
pop
inc
ror
add
push
xchg
in
loop
add
cmpsb
fidivs
push
adc
cmc
sub
jg
pop
out
jno
or
dec
dec
add
jbe
div
inc
mov
and
sbb
cmp
add
dec
add
ja
pop
xchg
ss
in
in
cwtl
add
cmp
push
int3
jne
call
cmp
add
mov
cmp
ljmp
icebp
mov
pop
or
cmp
lock
and
mov
in
or
sub
cmp
adc
xchg
adc
mov
xlat
ja
or
jno
mov
in
ja
outsb
or
shll
push
mov
pop
sub
ret
or
xor
add
mov
repnz
push
xor
test
dec
test
mov
cltd
clc
cmp
loope
or
mov
lahf
inc
rcrl
dec
mov
sbb
xor
jg
adc
or
outsl
cmp
lret
xchg
add
dec
popf
pop
mov
cwtl
pop
mov
adcb
in
adc
sbb
pop
mov
xchg
and
sbb
and
and
sti
inc
mov
mov
dec
fbstp
dec
and
push
pop
add
outsb
scas
cltd
inc
jo
test
je
sbb
sbbl
mov
sbb
add
xchg
push
lcall
gs
cmp
rcl
adc
push
aam
inc
push
xor
dec
add
push
sti
pop
nop
add
inc
add
dec
mov
repnz
data16
inc
and
mov
add
jnp
cwtl
nop
es
sub
mov
add
mov
pop
imull
jae
fucomi
cs
inc
fs
lcall
cmp
and
jl
and
sahf
mov
loope
out
or
icebp
add
mov
push
mov
add
ror
cwtl
jns
mov
inc
add
xchg
aam
pop
push
and
push
or
jle
add
mov
ljmp
add
arpl
ja
ret
adc
test
enter
xchg
fiaddl
jmp
add
or
clc
cld
cmpsb
xchg
pop
mov
icebp
xor
cmp
int3
cmp
shrl
adc
add
pop
xchg
enter
repnz
fadds
sbb
jae
arpl
push
xchg
mov
or
push
lock
cmp
add
or
int3
mov
xchg
adc
icebp
and
imul
mov
subb
insb
sub
push
dec
testl
push
iret
push
jne
fcmovnb
sbb
mov
leave
add
dec
adc
cmp
jnp
add
rolb
mov
mov
ret
push
shr
out
mov
fdivr
xchg
mov
and
aam
xabort
pop
or
jl
les
dec
mov
inc
mov
add
push
mov
or
notl
and
sbb
push
sub
inc
loope
filds
arpl
jo
cld
push
lahf
xorb
nop
sti
or
and
inc
sub
mov
adc
dec
in
push
lds
aas
shlb
mov
inc
test
or
mov
mov
sub
jl
and
fucomp
xchg
in
inc
dec
sbb
add
mov
mov
out
cld
add
add
in
ljmp
jge
or
and
hlt
mov
mov
inc
push
adc
sub
push
xchg
repnz
stos
ljmp
es
fdivrs
pusha
outsl
mov
inc
sub
mov
adc
xchg
dec
xchg
and
lods
mov
add
add
repz
sar
clc
jne
inc
nop
loopne
addr16
adc
jae
adc
push
rorl
in
mov
cmp
inc
jb
add
insb
fisubrl
jl
stc
jbe
and
and
and
icebp
sbb
sbb
push
outsb
pusha
pop
ret
arpl
bswap
xor
add
pop
addb
cs
push
mov
adc
iret
notl
repnz
test
xchg
push
dec
pop
cltd
adc
imul
adc
add
xor
filds
jne
js
jae
push
dec
xchg
aad
add
cmpsl
cwtl
mov
mov
add
jno
inc
sub
cwtl
sbbl
daa
and
scas
jno
add
jg
mov
inc
add
push
mov
mov
inc
shll
out
push
pop
and
fisubl
scas
add
pop
add
push
mov
adc
icebp
int3
nop
enter
sbb
mov
jecxz
arpl
icebp
dec
cld
inc
rolb
ret
mov
aas
cli
mov
mov
cmp
xchg
rol
lods
mov
fcmovne
add
mov
xchg
sbb
add
cmp
call
adcl
mov
in
add
movsb
inc
mov
add
cwtl
arpl
sub
enter
out
mov
jne
mov
and
and
xor
adc
add
inc
lahf
xor
int
pusha
or
subl
mov
and
rcll
xor
test
mov
add
pop
adc
cmpsb
jo
jb
imul
xchg
sub
aas
fsubrp
mov
insb
ja
nop
pop
mov
mov
ret
in
mov
inc
aas
jno
adc
test
enter
sub
andb
or
push
jae
fidivl
push
or
fldenv
push
mov
xchg
push
xchg
xchg
sub
loopne
hlt
nop
loopne
cwtl
insl
pop
lock
push
push
fstpt
dec
cwtl
add
adc
dec
add
test
lcall
mov
shll
mov
and
repz
test
aam
mov
mov
mov
xlat
or
and
mov
dec
lcall
and
aam
aas
jecxz
jmp
cmp
mov
stos
insl
mov
jb
jns
sbb
push
jae
jmp
inc
outsl
call
test
aaa
push
repz
lods
fadds
xor
adc
movsb
or
pop
xchg
add
mov
push
push
or
add
sbbl
xor
out
std
push
ret
sub
lret
repz
inc
sbb
repz
dec
xorb
xchg
mov
movsl
add
sarl
in
shlb
add
sbb
add
or
inc
push
repz
pop
push
clc
mov
mov
jmp
enter
or
inc
adc
pop
ljmp
mov
es
pop
push
xchg
aam
insb
movsb
pop
push
dec
push
push
xchg
sbb
push
mov
outsb
into
les
repz
xchg
jl
jo
adc
mov
out
mov
and
sub
add
stc
sbb
jp
add
mov
mov
fcoms
fsubs
adc
pusha
jl
call
or
add
std
add
xor
mov
insl
rolb
je
sahf
imul
movsb
jns
ds
lahf
lock
fstpt
jnp
add
daa
adc
popa
pop
jns
pop
fdivrl
bound
xchg
lods
push
lea
clc
add
mov
xchg
pop
mov
add
adc
test
clc
add
shll
xchg
sahf
mov
aam
cltd
push
mov
jecxz
lock
pop
add
and
mov
jbe
lahf
xchg
scas
add
sbb
clc
and
negb
add
movsb
lahf
cwtl
sub
inc
add
shl
stos
mov
mov
xor
mov
iret
dec
add
pop
mov
cmpsl
xchg
aad
insb
out
sbb
xorb
add
jne
add
lcall
add
mov
insb
xchg
pop
imul
push
iret
shlb
cmc
repz
cltd
lock
jl
push
fstpl
add
and
push
add
repz
mov
shl
jmp
and
xchg
inc
clc
fbld
mov
dec
jl
sbb
scas
and
mov
movl
inc
lods
out
dec
cli
pop
add
inc
sbb
pop
sub
sub
and
push
mov
nop
in
add
mov
mov
push
inc
loopne
xchg
icebp
xor
mov
adc
jnp
divb
jbe
ja
mov
jge
pop
rcll
add
aaa
dec
les
xor
add
insb
and
cmp
fisubs
shlb
fldt
mov
jp
mov
jl
push
sarl
mov
daa
mov
mov
sub
sbb
and
adc
sbb
add
pop
sub
mov
xlat
sbb
cmp
and
jg
pop
shl
push
repz
pushf
cld
push
cmp
adc
out
pop
mov
stos
testl
lcall
adcb
sub
cmp
push
sbb
or
sbb
adcl
add
jecxz
faddl
dec
and
or
add
mov
pop
push
xchg
jne
cmp
inc
movsb
push
ljmp
jae
mov
outsl
add
sahf
add
ljmp
cmp
sub
mov
pop
pop
les
xchg
sti
adcl
test
mov
xor
mov
mov
les
subl
inc
adc
hlt
or
popa
add
and
movsl
mov
cmpb
call
or
popa
and
add
fwait
pusha
mov
adc
add
shrl
or
adc
mov
xor
nop
lret
xchg
add
sbb
test
push
xor
call
or
add
inc
jno
inc
jecxz
cmp
jne
sbb
roll
int3
adc
shll
cmp
sbb
adc
jo
sahf
divl
push
and
and
inc
add
imul
movsb
and
or
add
mov
add
push
dec
push
fadds
scas
jo
dec
sbbl
int
ret
out
daa
loopne
fs
cli
jp
pusha
mov
sbb
test
clc
scas
aam
in
xchg
loop
in
pop
mov
jb
comiss
and
adc
shll
add
adc
push
add
dec
push
das
cmp
inc
push
cld
movb
add
cmp
jmp
push
add
andb
xor
and
aam
push
cmp
ja
sbb
fisubl
clc
fildl
ret
cmc
sub
xchg
add
test
rclb
jle
movsb
add
insl
mov
pop
pop
cmpb
mov
repz
ret
sarb
lods
add
mov
das
loope
orb
pusha
mov
push
add
add
jae
push
loope
sbb
push
pop
xchg
dec
lods
movsb
xchg
add
or
or
inc
arpl
add
add
insb
add
rcr
mov
add
xor
or
subb
je
inc
ja
cmp
jle
or
mov
or
pushfw
fnstcw
and
cmp
pop
xor
enter
popl
lock
outsb
dec
cwtl
cld
jb
rcrl
movsb
ret
xor
and
push
loopne
orb
adc
loop
sbb
call
addb
mov
paddd
sub
nop
mov
push
cmpsb
ret
push
bound
and
jnp
sub
sbb
push
les
or
inc
enter
mov
add
repnz
mov
xchg
cmp
sbb
pop
add
pop
mov
mov
jl
jo
rclb
add
aas
or
sub
out
fmuls
xchg
or
lcall
mov
aam
adc
hlt
popa
push
mov
dec
and
hlt
inc
push
inc
push
test
and
jl
mov
in
fldl
idiv
and
push
or
sbb
xorb
or
mov
lret
cmp
jo
int
orl
shrb
adcb
xchg
icebp
jb
or
mov
jg
xchg
jle
add
jae
shlb
jb
loopne
xchg
add
clc
inc
outsb
xchg
fmuls
fcomp
pop
dec
insb
xor
add
into
rorb
idivb
lods
aas
fs
sbb
fadds
mov
push
mov
pop
adc
jo
rolb
fildll
adcl
jecxz
insb
aaa
test
addb
rcrb
jb
xchg
xor
mov
cmp
sbb
mov
dec
xor
push
clc
fidivrs
mov
out
sub
mov
mov
in
in
pop
mov
fdivrs
cmp
dec
mov
adc
jl
repz
aam
mov
add
pop
mov
push
rolb
icebp
inc
call
clc
sbb
sbb
js
data16
jmp
sbb
mov
imul
mov
jnp
cs
imul
dec
mov
scas
sbbl
adc
jle
enter
xchg
pop
cwtl
insb
inc
xchg
lock
ja
and
fadds
dec
imul
stos
call
xchg
dec
add
fdivs
roll
rorb
pop
add
iret
movsb
sti
fcomi
push
add
test
shrb
repz
and
inc
call
scas
out
je
inc
mov
add
cmp
pop
jbe
in
push
cmp
jle
sub
ss
or
mov
jmp
xor
mov
push
outsl
insl
and
shrb
fwait
insb
movsb
add
dec
lods
inc
mov
adc
and
popf
or
test
sub
adc
jecxz
in
fwait
jle
mov
loopne
push
adc
xchg
mov
rcrb
or
inc
xor
mov
sub
xorl
and
pop
lock
lret
test
enter
jmp
and
and
sarl
dec
les
je
rorb
popf
pusha
sub
jae
mov
add
sub
cltd
cmp
movsl
sbb
popa
inc
imul
jp
add
cmpl
push
sarb
inc
and
pop
stc
out
mov
std
sbb
jbe
ss
and
or
hlt
mov
cwtl
add
movl
in
mov
shll
jge
xor
mov
scas
or
jb
or
in
shrb
dec
add
lret
inc
and
push
add
xchg
pop
dec
cmp
jb
and
jle
test
push
add
mov
adc
jg
repnz
adc
pop
adc
cmpsb
icebp
cmc
insl
dec
orb
mov
cmp
xchg
outsl
movsb
or
mov
sub
push
adc
sbb
lock
and
dec
push
sub
push
jl
add
ret
sbb
xor
xor
loop
jmp
push
ljmp
stos
or
xchg
or
sub
cmp
jb
rol
xchg
jae,pt
dec
and
mov
roll
fstl
addl
jo
and
hlt
xchg
rorl
popa
in
dec
rolb
les
hlt
subb
or
pop
push
add
inc
rcll
mov
sub
dec
in
and
inc
out
mov
fs
cmp
xchg
jns
pop
dec
loopne
sti
sub
scas
imul
rol
rolb
out
xchg
mov
and
inc
and
pop
xorl
pop
repnz
hlt
pop
inc
stos
mov
mov
inc
clc
and
cs
movsl
inc
mov
xchg
or
and
dec
jle
pop
sbb
aad
and
andl
add
imul
xchg
ja
mov
rclb
fs
ret
xor
jns
mov
add
enter
jo
call
or
add
loopne
push
aas
sub
mov
fwait
xchg
add
outsb
les
ss
or
mov
ret
pop
mov
xor
test
enter
ja
pop
movsb
push
inc
or
clc
fs
inc
aad
push
cmpsb
jnp
dec
stos
testl
cmpb
xchg
jbe
cli
add
jge
sbb
mov
lods
xchg
cwtl
cmpsl
and
out
mov
add
or
repnz
and
sbbl
sub
repnz
lods
loope
cmpl
jl
movsb
pop
pop
movsb
adc
jge
add
scas
mov
mov
incl
pop
andb
adc
je
push
jnp
mov
add
cld
or
mov
inc
lret
ljmp
add
ret
fcoml
adc
sub
add
pop
push
dec
xchg
aaa
add
imul
outsb
cmpsb
jno
pop
sbb
xor
sub
add
jg
sarb
hlt
or
add
xorl
jl
dec
call
addb
mov
shll
add
je
je
imul
pop
stc
nop
dec
xchg
push
add
jnp
and
cmp
and
std
or
outsb
nop
sbb
mov
test
decb
pop
adc
popa
add
mov
int3
repnz
xor
jno
in
je
notb
mov
inc
xor
mov
xchg
cmp
outsl
mov
xchg
rorb
add
push
movsl
ret
jnp
inc
and
and
xchg
or
clc
cli
fadds
cmpsb
mov
mov
add
adc
sub
rcll
sbb
add
push
loop
or
or
fiadds
jl
cld
int
in
cmp
repnz
and
mov
xchg
call
add
out
pop
mov
mov
or
pop
xor
add
sti
test
xchg
adc
xor
nop
adc
in
mov
in
loop
xor
adc
push
xchg
fs
popa
mov
loop
sbbl
and
mov
xchg
roll
pop
jne
inc
xor
pop
pusha
adc
and
xchg
adc
repz
int3
adc
cmc
pop
lret
jge
pop
cli
xchg
bnd
add
pushf
loopne
subb
or
jb
gs
push
ret
mov
icebp
in
jo
push
push
push
xchg
repnz
fiadds
dec
fldl
cmpsl
push
ret
inc
les
adc
out
stos
mov
shll
inc
xor
jmp
sub
add
lret
fldcw
sbb
mov
repz
clc
imul
lods
jl
sqrtps
cmpsb
addb
push
test
jb
cwtl
call
pop
xchg
or
mov
test
jge
mov
sbb
sub
add
int3
jmp
or
push
xchg
outsl
aam
ja
mov
push
cmpsl
lahf
inc
insb
test
movsb
loopne
inc
pushf
ret
pop
mov
mov
pop
mov
inc
or
fdiv
add
push
dec
imul
movsl
jo
push
movsb
adc
shlb
ja
jle
cmp
rorb
xor
insl
dec
leave
ret
out
roll
bnd
xor
imul
mov
dec
andl
adc
or
inc
xor
ret
mov
test
or
cwtl
inc
mov
add
jl
sbb
arpl
inc
xchg
inc
add
scas
fs
mov
cwtl
adc
shrl
mov
rcl
dec
jnp
jbe
ds
addb
sub
aam
pop
dec
test
cli
dec
add
sbb
jge
add
mov
sub
lds
lret
lods
mov
jo
jg
jecxz
and
rcll
pop
dec
or
sbb
sti
mov
les
mov
xor
mov
add
and
fwait
dec
cmp
inc
adc
mov
dec
sarl
and
add
shrb
add
lock
pop
scas
cmp
add
fwait
push
mov
adc
test
loopne
xchg
add
cwtl
adc
fldl
insb
and
mov
adc
push
and
mov
and
push
adc
aad
pop
imul
and
fdiv
sbbb
in
add
jne
add
inc
mov
les
and
sbb
push
pop
into
hlt
addb
les
xor
xor
push
enter
push
fcoms
sahf
sub
in
cmpsl
cld
pop
fnstsw
mov
popf
and
add
clc
mov
adc
sbb
sbb
mov
or
pop
sub
inc
ret
dec
jno
jecxz
mov
addr16
add
dec
xchg
shll
push
repnz
mov
js
in
bnd
mov
movsb
xor
add
mov
xchg
or
or
bound
orl
bound
das
lock
add
rclb
inc
fsubs
lret
loop
adc
fisubl
addr16
push
pusha
int
jb
sub
sub
dec
divl
adc
nop
mov
mov
shlb
sbb
mov
push
xor
leave
enter
sub
pop
mov
fstpl
and
inc
mov
bound
adc
sbb
sub
outsb
adc
inc
mov
mov
cmp
push
sub
pop
dec
outsb
add
dec
hlt
lock
cmc
cmp
lods
mov
sahf
cmp
dec
mov
std
and
insb
or
xor
cmp
xchg
adc
add
outsl
sub
or
mov
rol
add
cmp
xchg
in
popa
cmp
movsl
pop
dec
xchg
pop
subb
mov
das
ss
shl
add
sbb
adc
mov
inc
inc
pop
insl
enter
cwtl
adc
add
lods
ja
ret
nop
fwait
in
andb
jle
hlt
add
aas
xchg
call
nop
test
add
push
sub
loope
clc
dec
test
fwait
jo
add
int3
fcomps
movsb
add
aam
lahf
add
repnz
pop
push
out
sub
in
sub
add
push
mov
sub
shll
pop
enter
jecxz
js
xchg
jl
loop
push
sbb
push
aam
mov
push
shll
pop
and
mov
scas
inc
aas
mov
pusha
loopne
ja
lret
adc
stos
mov
or
and
and
mov
jnp
in
inc
les
add
adc
insb
mov
inc
mov
or
sub
sub
add
sbb
pop
lods
fidivrs
insb
mov
loope
jo
add
nop
out
add
dec
adc
dec
add
add
je
pop
mov
xchg
ja
lods
inc
arpl
inc
idivb
mov
cli
sbb
xchg
dec
test
sub
in
mov
add
dec
mov
hlt
push
adc
and
jge
sti
jb
dec
cmp
xor
jp
lock
sahf
or
cwtl
pushf
mov
mov
adc
push
cmp
inc
mov
push
add
mov
inc
ds
movsb
enter
mov
bound
adc
shlb
and
push
xchg
fists
stos
adcb
or
sub
mov
add
lods
jo
ss
cmp
jbe
test
js
insb
bound
popa
das
and
rcrl
outsb
sarb
or
scas
jnp
mov
push
and
repnz
adc
test
mov
lods
mov
lea
loopne
outsb
dec
mov
rcrl
cld
or
loop
jnp
out
fcoml
hlt
mov
jl
in
popa
sahf
lret
add
sub
dec
cltd
sub
xchg
pop
push
mov
fidivrs
pop
pop
push
aam
data16
inc
arpl
adc
add
mov
outsl
pop
jmp
mov
sbb
xchg
and
dec
ja
or
movsl
mov
in
and
mov
lods
mov
pop
dec
jle
je
inc
mov
cmp
call
mov
jg
or
cmpsb
push
inc
or
xor
xlat
sahf
push
jae
add
adcl
mov
test
je
loop
adc
add
inc
pop
cmp
into
loop
inc
lds
inc
push
movsb
ret
inc
sbb
aad
push
int3
test
dec
hlt
jbe
add
mov
call
popa
and
sub
or
ret
je
lock
dec
lret
inc
call
repnz
dec
aas
xor
pop
inc
mov
jle
xor
mov
cmp
popw
jbe
inc
cmp
add
mov
sub
mov
cmp
out
adc
xchg
enter
lock
xor
pop
push
icebp
call
xor
dec
in
xor
jl
pop
sub
xor
int3
int3
test
mov
dec
rcr
mov
lcall
pop
and
cmp
aam
movsb
dec
ljmp
hlt
adcb
and
fists
mov
mov
std
aam
out
push
cltd
push
pusha
mov
fucom
rcrb
cwtl
call
or
popl
lds
dec
add
mov
jnp
and
out
dec
daa
fistps
pop
push
pusha
jg
cld
pop
push
arpl
cmp
mov
addb
and
in
dec
rorb
mov
mov
xchg
inc
dec
xchg
add
loope
jnp
mov
or
fstl
repnz
repnz
mov
add
cmpl
aaa
fcoms
mov
cmp
adc
daa
shr
lock
lcall
mov
add
mov
pop
or
xchg
sub
add
xchg
add
out
xor
cmp
cmp
imul
add
dec
xchg
mov
dec
movsb
rcr
inc
sbbb
cmpsb
mov
push
mov
xor
in
push
ret
mov
dec
push
pop
rorb
loopne
fdivs
pushl
and
cmp
pusha
enter
lods
or
xchg
out
clc
adc
call
push
mov
mov
sbb
pop
pop
outsl
jo
mov
cmp
push
insb
stos
mov
andb
add
arpl
adc
lcall
dec
movsl
mov
pop
out
cld
mov
pusha
mov
xor
pushf
push
movsb
adc
in
inc
addb
lods
jl
cwtl
mov
add
jp
mov
sbb
out
xchg
insl
je
subb
jmp
or
roll
cld
adc
mov
shlb
pop
and
cli
sub
or
shrl
dec
aam
fidivl
sbb
xchg
jbe
js
cmp
adc
repnz
jno
test
jno
cmp
fwait
xor
arpl
xor
loop
jae
jno
call
xor
shlb
rclb
in
insl
jo
add
dec
and
or
pop
lods
cmpsb
dec
je
sub
pop
fnstsw
adc
mov
inc
push
pop
fadds
lret
mov
xor
fwait
xor
xor
imul
rolb
pop
inc
xor
cmp
nop
repnz
push
add
mov
insb
add
pop
inc
mov
es
fiaddl
lret
add
test
mov
scas
enter
adc
mov
push
fwait
ret
movsb
adc
ror
fs
ss
arpl
int3
je
or
mov
push
ljmp
add
gs
in
cwtl
and
std
add
les
mov
sub
loope
xchg
js
dec
push
mov
add
arpl
shr
sub
adc
je
pop
sbb
pushl
rolb
and
sub
rol
mov
mov
add
jo
xchg
mov
pushf
mov
ljmp
je
add
clc
outsl
movsl
xchg
cwtl
cwtl
or
add
push
cmp
mov
sbb
inc
ror
out
adc
dec
popf
nop
mov
adc
pop
popf
jl
xor
dec
mov
into
jno
jb
arpl
pop
mov
cwtl
or
add
jno
push
ret
mov
shrb
add
mov
adc
dec
mov
add
lret
frstor
jmp
adc
out
insb
pusha
mov
mov
mov
inc
push
outsl
leave
pop
mov
mov
nop
andb
and
xchg
insb
adc
ret
jle
pushl
repz
mov
movsb
pusha
into
movsl
dec
dec
add
je
in
cmp
sub
addl
lods
loope
xor
dec
add
xchg
inc
stc
jp
pop
add
sub
das
dec
mov
sub
mov
push
mov
outsb
jo
push
jae
and
xor
add
push
pop
push
je
inc
fcmovnbe
nop
mov
repnz
jp
ffree
push
pop
mov
das
push
movl
rcl
mov
dec
fwait
lods
movsb
xor
pop
add
insl
mov
test
cwtl
test
xor
add
xlat
mov
mov
imul
pusha
test
scas
mov
and
mov
inc
inc
pushf
add
int
lods
imul
xlat
cs
ljmp
xchg
hlt
xchg
jns
into
xchg
xchg
lahf
cmp
pop
adc
push
pop
stos
movsb
clc
xor
sbb
pusha
sub
mov
outsl
arpl
and
adc
testb
in
fabs
sbb
jge
insb
mov
inc
and
sahf
je
inc
add
sbb
xchg
cmpb
mov
subb
bound
adc
mov
sbb
sub
fmull
fcoms
pop
mov
lods
jnp
add
cmp
dec
add
pop
xchg
xor
mov
and
or
fcompl
sbb
subb
lods
cmp
shr
je
xor
movsl
or
sbb
in
stos
pop
xchg
add
or
jbe
mov
or
xlat
dec
xchg
lret
lds
in
arpl
addl
inc
add
dec
mov
cmp
mov
pop
out
mov
xor
pop
mov
orb
aaa
loopne
js
xlat
mov
jl
xor
loope
push
or
lods
nop
push
pop
out
push
loopne
lods
xor
cmp
jo
lcall
les
adc
icebp
test
out
inc
mov
mov
mov
and
enterw
adc
rolb
mov
xchg
push
fsubrs
das
adc
movsb
inc
rcrb
sbb
add
cmpsb
jl
or
das
out
add
in
mov
cmp
inc
cmc
sbbl
loope
or
jecxz
dec
in
push
jb
xchg
or
inc
add
xchg
mov
cmp
sti
lret
adc
negb
mov
mov
pop
pop
nop
adc
mov
inc
push
xor
or
shlb
ljmp
add
repnz
lea
xor
dec
pop
inc
inc
mov
aad
nop
dec
xor
sbb
dec
shl
or
lock
mov
ja
inc
jo
test
xor
push
adc
adc
cwtl
add
test
sub
dec
add
cmc
add
lret
push
cmp
aas
adc
dec
lods
pop
jl
push
pop
sahf
or
jns
mov
add
cltd
mov
aam
jmp
loope
sbb
mov
sub
add
xchg
jle,pt
cltd
outsl
stos
aad
add
in
sbb
test
hlt
psrld
test
inc
push
fwait
push
sub
cmovp
push
cli
add
xchg
daa
mov
orb
mov
pusha
xchg
sbb
popa
push
cmp
cmp
xor
sub
add
dec
add
cmp
jo
test
dec
mov
adc
je
jb
add
sub
mov
xor
xchg
mov
adc
jmp
pop
mov
pop
pop
mov
adc
jb
push
adc
and
mov
hlt
mov
dec
mov
inc
or
xchg
clc
mov
push
in
cmp
pushf
ret
iret
ljmp
outsl
jo
flds
adc
jno
dec
clc
dec
aad
push
mov
dec
add
lds
jl
mov
dec
sbb
ret
xchg
nop
das
add
in
add
call
cltd
or
adc
xchg
sub
inc
adc
fiaddl
xchg
inc
jo
cmp
add
ret
cmp
pop
cmp
add
push
push
push
cmpsl
dec
push
ficomps
sbb
mov
pop
mov
leave
jns
jns
sbb
sbb
adc
imul
dec
sub
or
loopne
js
adc
aas
pop
jl
adcb
mov
add
lods
shlb
add
jge
mov
sarl
jg
inc
or
rorb
addr16
pop
add
adc
int3
add
pop
sbb
mov
mov
hlt
mov
mov
jle
xchg
outsb
push
pop
lret
or
shlb
push
xlat
addr16
add
xchg
mov
sbb
imul
sub
jno
sbb
arpl
push
inc
std
sar
fadds
popf
out
cmpsl
push
xchg
push
pop
pop
push
loop
adc
pusha
nop
sbb
pusha
fs
push
clc
mov
dec
adc
mov
sub
adc
lret
loopne
add
mov
popa
xor
mov
push
jb
or
js
cmp
xchg
rorb
repz
jmp
xor
xchg
movsb
mov
mov
mov
adc
cmp
jl
imul
push
call
push
cld
jl
orb
add
and
jb
adc
in
out
ja
cwtl
lods
dec
loope
sarb
pop
cwtl
push
imul
pop
mov
enter
xchg
bound
adc
mov
sub
mov
ret
lock
inc
pushf
xorb
xchg
sahf
sub
dec
adc
sbb
sbb
push
shll
ret
jmp
call
mov
cld
rorb
gs
data16
lock
subb
dec
repnz
add
incb
mov
enter
jmp
sbb
ret
and
and
adc
loop
add
cmp
lods
or
sbb
rolb
ficoml
scas
add
scas
or
pop
jl
pand
jne
or
pop
jb
movsb
int3
xchg
xorb
je
pop
xor
add
sahf
fld
in
or
jb
orb
cmp
push
adc
sub
js
cmp
lcall
xchg
inc
or
data16
insb
jo
mov
push
les
and
pop
inc
js
pop
das
cs
out
shl
adc
test
jp
jne
ret
pop
push
mov
xchg
mov
add
rcr
mov
adc
mov
fstl
sub
and
xchg
js
in
aam
mov
jno
imul
pop
mov
pop
icebp
dec
mov
jl
dec
in
leave
pop
add
in
and
lock
stc
arpl
mov
sub
daa
clc
xchg
inc
cmp
adc
int
cmp
jmp
cld
sahf
add
sub
mov
test
adc
loope
das
adc
inc
mov
add
xor
or
popf
sub
cmpunordps
fcom
es
xor
fstpt
daa
imul
shl
jmp
mov
roll
je
in
out
rorb
test
dec
pop
mov
fcomps
inc
lods
loop
int
les
push
push
aam
out
sahf
addb
push
fdivs
push
sbb
inc
test
xchg
xchg
add
mov
popf
cmpsb
cwtl
leave
in
push
mov
dec
fcomp
lcall
js
fldt
jno
hlt
sti
sbb
jae
and
test
sbb
add
outsb
xchg
enter
xchg
sub
xchg
js
fsubs
adcb
cmp
pusha
xor
lods
mov
and
rclb
xchg
movsb
lods
lock
aas
mov
and
mov
lret
or
popa
movd
call
xchg
test
scas
sbbb
jne
or
aam
sti
xchg
dec
scas
aad
pop
cs
imul
and
add
xchg
inc
xchg
xchg
xor
stos
sbb
jp
pop
les
enter
and
jns
or
call
sub
jb
add
mov
repnz
in
inc
add
aas
fsubrs
js
mov
ja
xor
fs
es
mov
or
in
sub
inc
jae
cli
fisubrs
pop
je
hlt
mov
and
add
push
xchg
push
sarl
sbb
xchg
adc
stc
clc
pop
pushf
inc
test
out
cmpb
loope
pop
jno
mov
xchg
cmovns
daa
cltd
jmp
js
pop
lock
xchg
sbb
orl
fwait
jl
les
repnz
mov
in
lock
add
test
adc
lret
sub
mov
pop
loop
xchg
add
imul
dec
jp
arpl
sub
inc
icebp
xor
mov
sub
into
out
jb
sub
or
mov
mov
inc
adc
jb
out
cmpsl
ljmp
leave
icebp
hlt
icebp
xchg
or
je
cwtl
inc
test
clc
lods
mov
js
rcrb
pop
adc
out
push
inc
mov
add
add
add
adc
cmp
xchg
fwait
add
lcall
add
xchg
pop
sbb
or
sbb
adc
pop
jno
xor
push
hlt
add
jo
in
push
sub
and
mov
or
mov
stos
add
pop
add
loop
test
fucomi
dec
and
cmp
mov
cmp
jg
fistl
push
aas
pop
or
shll
inc
mov
mov
sub
xchg
sub
xor
imul
insb
cmp
mov
pop
sbb
mov
sub
jge
xor
pop
stc
insl
mov
in
add
cs
cmp
mov
sbb
push
test
lahf
adc
push
jo
add
mov
or
xor
enter
cltd
mov
dec
pop
and
mov
mov
sub
jnp
popa
mov
loope
addr16
jl
and
fisubs
sub
xchg
xchg
nop
inc
jo
cs
pop
or
repnz
and
test
xlat
jne
push
cmp
mov
inc
sbb
aam
ficomps
inc
sub
sbb
cmc
add
orb
xlat
push
jp
mov
cmp
shl
arpl
add
lahf
call
and
xor
inc
jne
arpl
popf
jnp
lahf
rcrl
pusha
inc
sbbl
or
out
in
clc
inc
add
mov
mov
add
movsl
jno
dec
sub
es
add
dec
xor
outsb
sub
mov
insl
or
cmp
mov
sub
xor
or
add
jbe
mov
ljmp
add
ret
fucomp
repnz
adc
inc
out
jne
aas
sub
sahf
leave
adc
mov
inc
mov
cwtl
cld
add
into
inc
dec
fcoml
inc
das
call
js
sub
add
mov
faddp
mov
cmp
push
in
mov
or
clc
dec
push
dec
in
icebp
cmp
or
adc
xchg
sbb
xchg
outsb
mov
or
mov
lcall
dec
inc
adc
ret
enter
sbb
add
xor
xchg
insl
out
ror
mov
call
inc
jno
cmp
mov
inc
loope
cmp
and
fs
jle
cltd
xchg
and
xchg
shl
mov
roll
lock
xchg
insb
in
in
jl
push
imul
cwtl
sbb
xor
pushf
pop
adc
pop
les
cmp
or
xchg
outsb
lret
xchg
and
repz
or
ljmp
or
jp
data16
pop
sbb
or
sbb
mov
or
into
or
arpl
or
or
pushf
add
xchg
pusha
jge
sub
inc
pop
xor
inc
lea
sbb
or
outsl
add
sbb
les
sbb
sarl
in
adc
jle
adc
pop
xor
sbb
orb
js
inc
jb
arpl
test
xchg
inc
sub
bound
or
pop
jg
sbb
cmp
or
xchg
mov
nop
pop
mov
sbb
or
or
sbb
adc
nop
push
in
add
call
and
fwait
inc
bound
and
rcll
xchg
dec
add
mov
int3
sub
clc
fisttpll
sub
rcl
xor
and
jle
or
add
adc
adcl
ljmp
in
mov
or
dec
adc
or
and
jne
add
xchg
adc
add
loope
gs
icebp
inc
clc
pop
mov
orb
scas
or
jns
arpl
jmp
or
xchg
sbb
sub
and
cmp
inc
pop
lahf
cmpsb
inc
icebp
add
xchg
add
and
inc
add
mov
xchg
dec
xor
movsl
or
or
sbb
roll
sub
aam
cwtl
mov
xor
popf
inc
in
push
imul
xchg
stos
push
fistps
pop
adc
inc
push
cmp
inc
hlt
push
stc
push
test
or
rcrb
inc
cmp
dec
xor
xor
shrl
sti
mov
ret
pop
xchg
jle
xorb
dec
dec
scas
mov
or
or
dec
insl
aam
jmp
inc
mov
mov
cwtl
cli
lock
xor
stos
adc
sbb
test
push
add
stos
addl
dec
mov
mov
in
and
mov
add
pusha
sbb
pop
xchg
xor
add
mov
and
iret
aas
popf
out
jb
jg
xor
out
rorb
nop
mov
movsb
push
lock
fildll
out
jmp
loope
andl
fsts
sahf
xchg
fsubrl
test
roll
lods
sarl
mov
divl
dec
rolb
jl
int
jo
cmp
cli
jmp
mov
or
push
das
mov
add
shll
lcall
or
and
loope
cmc
out
loopne
add
enter
je
movhps
mov
movsb
push
gs
jb
jo
inc
inc
insb
cmp
sub
aas
push
ret
xchg
add
lods
and
mov
fs
stos
cmpsb
adc
adc
jns
mov
aad
push
lahf
cmp
add
shrd
xchg
aas
push
mov
mov
daa
pop
dec
sti
lods
mov
mov
sbb
mov
or
cli
mov
sbb
rcl
add
mov
xor
mov
movsb
xor
adc
xchg
add
push
shrb
js
nop
adc
cld
arpl
and
repnz
dec
mov
mov
and
cli
shrb
lods
pop
fldl
nop
cmpsb
mov
xor
loop
movsb
sbbb
inc
push
ror
add
and
leave
hlt
faddl
loope
pop
cmp
dec
je
push
dec
movsb
adc
sub
lock
push
pop
add
flds
push
adc
jg
pop
js
add
jl
add
mov
popa
sbb
jl
mov
xchg
ret
cmp
adc
lock
or
add
test
insb
leave
xlat
inc
rclb
andb
pushf
sub
loopne
dec
int
pusha
fld
push
mov
inc
lods
mov
add
jmp
and
movsl
adc
lods
mov
enter
cmpb
pushf
cmp
lock
pop
insb
fidivl
sub
insb
add
push
lods
lret
sub
stos
aad
adcb
sti
shl
insl
inc
add
sub
jnp
jmp
inc
cwtl
je
cmp
ljmp
dec
mov
and
dec
xchg
mov
mov
clc
fiadds
jo
lods
xchg
rorl
inc
movb
sbb
in
push
add
es
loop
add
sbb
insb
xchg
rcrb
mov
jl
cmpsl
push
mov
and
aas
mov
jbe
xor
sub
imulb
fs
xchg
ljmp
test
rorb
xchg
mov
notl
mov
sbb
lds
fmul
int
mov
add
push
dec
mov
lods
sub
in
sbb
xor
sbb
inc
nop
cwtl
in
xor
push
bswap
fs
xor
xor
jb
lea
sahf
sbb
testb
scas
nop
js
add
push
ret
adc
ror
cli
jg
es
in
add
not
pop
and
jle
dec
add
das
mov
jle
movsl
sub
mov
js
lret
lahf
or
or
lods
orl
pusha
and
add
es
push
js
or
in
xchg
pop
je
add
jb
jo
fwait
movsb
mov
jl
xor
dec
adc
movl
jne
add
and
into
dec
add
stos
mov
test
adc
xchg
testl
fadds
cld
jg
mov
or
cwtl
xor
test
dec
jmp
xchg
nop
add
adc
es
les
shlb
roll
mov
dec
adc
je
nop
addps
cwtl
push
adc
sub
arpl
rolb
xor
sbb
divb
sbb
sub
add
inc
and
add
pop
jge
sahf
pop
add
popf
sti
outsl
mov
loopne
popa
movsb
mov
mov
add
mov
lock
jp
add
pop
in
jnp
dec
lret
jmp
xor
ficoms
jl
nop
lods
orb
jnp
sub
les
into
and
shrb
add
rclb
lods
or
pop
cmp
lcall
cmp
es
rcrb
add
mov
cltd
nop
add
mov
mov
lock
push
inc
jb
mov
add
stos
add
rolb
push
dec
nop
pop
or
cwtl
pop
lds
popa
inc
or
imul
xchg
push
rclb
aam
clc
push
aad
pop
shll
pop
push
mov
sbb
xchg
daa
add
imul
mov
mov
test
adc
popf
xchg
rclb
add
cmpsl
push
lds
lcall
out
mov
inc
lock
or
or
jnp
mov
adc
lret
ja
inc
mov
gs
push
in
push
mov
mov
repz
test
subb
mov
icebp
and
test
or
sbb
dec
out
leave
or
aam
dec
filds
sarb
enter
jl
mov
sub
sbb
add
push
jae
or
shrb
dec
sub
or
and
out
push
add
mov
inc
push
insb
cltd
adc
push
lods
test
test
or
cs
lea
sub
mov
cmp
sbb
push
shlb
lcall
sbb
mov
shlb
call
inc
xchg
adc
ret
in
cs
movsb
mov
and
ret
and
cmpb
nop
js
or
pushf
lods
out
push
mov
adcb
les
adc
jns
and
ret
iret
mov
loop
dec
fs
cmpsb
cwtl
sub
fdivl
xor
andb
add
outsl
jle
xor
in
in
nop
mov
sub
adc
mov
mov
add
lcall
cwtl
push
cmpsl
and
jbe
xor
push
hlt
or
int3
adc
les
shlb
sub
push
and
pushl
rcl
lods
and
sbb
jle
adcb
lahf
or
add
int3
movsl
xchg
mov
dec
xor
mov
cmc
rcrb
enter
incb
jb
push
add
ja
xor
mov
imul
popa
in
ret
sbb
rorb
fwait
push
adc
inc
aam
dec
cltd
mov
mov
loop
add
pop
lcall
adc
daa
add
clc
adc
cwtl
cwtl
pushf
ret
into
cwtl
adc
sbb
add
je
mov
sbb
mov
jns
rorb
ret
jb
inc
pop
fadds
sbb
sub
mov
pop
fiadds
or
inc
shll
jp
insl
shrb
out
and
and
sbb
mov
test
and
dec
movsb
loope
loope
movsl
popa
dec
enter
adc
lahf
enter
adc
sbb
pop
call
jo
pop
dec
mov
xchg
mov
sub
hlt
orb
dec
test
lcall
jp
outsl
mov
push
ja
sub
sarb
cmpb
add
cwtl
dec
jne
add
movb
fucomp
sti
add
and
mov
add
in
jle
xor
fucomp
jo
xor
cmp
adc
or
cwtl
in
leave
aam
repnz
xor
mov
adc
mov
xor
in
pop
and
lods
les
jl
repnz
jp
inc
out
cld
aam
xchg
orl
hlt
pop
pop
inc
push
and
js
test
mov
je
push
pop
jge
les
mov
imul
mov
pop
adc
add
jp
pop
adc
mov
pop
orb
outsl
lret
adc
and
lock
add
inc
xchg
cmc
xor
nop
adc
ret
jb
and
pop
add
mov
cwtl
in
adc
push
and
pop
inc
add
mov
je
loopne
jl
rdpmc
out
test
ds
jns
pop
mov
add
mov
xlat
in
xor
add
jg
les
int3
add
pop
adc
testb
jae
shrb
cwtl
xor
in
inc
hlt
rolb
mov
mov
shlb
repnz
addb
and
xchg
call
cli
add
and
ljmp
nop
insb
adc
add
and
adcb
faddl
mov
lret
sbb
call
cmp
jbe
mov
cld
or
sbb
dec
fcompl
sbb
les
xchg
lods
pop
sub
mov
add
mov
sub
sub
sbbb
pop
loop
xchg
add
xchg
jns
ja
xor
or
lods
push
xor
cmp
call
es
das
push
orl
xchg
or
cmp
xor
movsl
cwtl
fwait
lods
and
pop
sbb
pop
add
clc
ficompl
mov
sbb
mov
adc
add
and
xchg
cmp
imul
or
xor
mov
ret
push
lods
imul
iret
mov
or
adc
andl
pusha
sub
or
fsubrs
pop
inc
shlb
mov
inc
pop
push
adc
daa
pop
lock
cwtl
add
inc
or
adc
mov
call
cmpsb
and
mov
cmp
movsb
ljmp
xchg
add
dec
pushf
dec
cltd
sbb
enter
dec
inc
cld
outsb
fmull
js
push
pop
push
mov
jae
sub
sub
scas
xorb
clc
add
out
sbb
sbb
lcall
sbb
cltd
or
ret
loope
test
adc
push
jge
clc
sbb
and
ret
shr
mov
andl
enter
sub
xor
inc
imul
shlb
mov
lret
jge
push
dec
rclb
adc
sub
or
pop
movsb
adc
pop
les
jg
mov
test
sti
rcrb
dec
adc
add
test
lock
pop
aam
jb
or
subb
or
and
subb
or
push
cmp
add
sahf
inc
xor
dec
inc
add
les
xchg
jg
jp
inc
cwtl
cs
xor
or
mov
add
inc
add
push
cwtl
jle
data16
sbb
mov
mov
xchg
fwait
adc
stc
pusha
or
xchg
popa
mov
add
lret
bnd
nop
nop
mov
lcall
jnp
mov
shr
int
call
mov
movsb
inc
sub
push
mov
lds
ljmp
sub
cwtl
mov
outsl
movsl
jge
adc
and
or
rcrb
mov
sarl
call
movsb
rolb
jle
cli
adc
jb
jp
in
cmp
sahf
cmp
rcrb
les
lods
pop
cld
jo
lods
in
pop
cmp
bound
jecxz
fsubr
sub
loopne
addb
in
push
add
dec
ficoms
and
or
lock
addr16
gs
shlb
jp
call
mov
imul
in
add
repnz
mov
mov
test
call
add
dec
push
aad
cwtl
mov
pop
mov
jo
jne
push
dec
xor
lret
daa
filds
int3
outsb
xchg
mov
sbb
imul
std
aam
testb
mov
xor
push
lret
sub
in
and
cwtl
pop
push
mov
verw
addr16
mov
pushf
or
aam
pusha
push
dec
mov
in
mov
add
mov
and
mov
xor
mov
ljmp
orl
cwtl
add
xchg
add
sub
jmp
daa
push
out
scas
sub
shlb
mov
out
dec
pmuludq
and
sbb
inc
cwtl
in
mov
rolb
inc
movsb
mov
mov
and
fwait
clc
loopne
lods
add
push
pop
in
rolb
movsb
xchg
int3
cmp
lahf
mov
pop
dec
mov
shlb
cmp
sub
cwtl
sub
ds
push
cmp
add
adc
add
mov
clc
call
xor
add
lcall
xchg
adc
push
scas
sbb
aam
sahf
sahf
inc
jo
pop
cwtl
pop
out
in
out
insb
sahf
add
lock
dec
imul
adc
cmp
data16
jg
and
or
cltd
outsb
rolb
sarl
movsb
adc
aad
xor
sub
dec
sub
sbb
jbe
add
test
jb
cwtl
inc
sbbl
test
lds
enter
dec
enter
ljmp
mov
ss
and
cmpsl
add
sarl
fisttpl
push
and
lret
pop
cmp
add
cli
or
shrb
and
mov
xchg
jp
mov
and
cmp
xchg
and
push
or
add
fadd
mov
lock
mov
push
fldenv
sub
sub
rorl
fwait
dec
je
popa
sbb
pushf
jo
or
inc
nop
hlt
outsl
push
pop
rclb
add
icebp
pop
sbb
fs
movsl
outsb
int3
jnp
adc
loop
sbb
push
rolb
call
imul
cmp
mov
and
mov
sbb
cli
enter
clc
mov
mov
dec
mov
nop
stos
pop
and
cwtl
loopne
mov
xor
or
push
sbb
push
arpl
fcom
repnz
pop
out
jb
add
out
jae
adc
lock
push
clc
gs
dec
add
dec
pop
dec
mov
test
es
lret
mov
dec
cld
cwtl
test
stos
out
insb
xchg
clc
cmpsb
gs
out
sub
adc
test
mov
cs
push
or
test
or
or
movb
xor
xor
mov
jb
aas
lods
mov
push
in
add
addr16
ret
xlat
dec
pop
test
leave
adc
cmp
ror
into
repnz
and
andb
sub
sbb
test
xor
lods
and
sar
orb
jp
rol
sahf
inc
fsubrs
xor
add
fimull
push
lret
mov
test
pop
mov
adc
push
push
scas
adc
jno
out
lret
inc
idivb
in
mov
add
fcom
sbb
mov
adc
add
rolb
inc
mov
lods
push
pop
cmpb
fnsave
jge
adc
jae
mov
movsl
aad
inc
fsub
mov
mov
add
push
roll
test
mov
int
imul
bound
add
scas
rcrl
add
sbb
sub
sbb
xchg
enter
mov
mov
pop
push
stos
add
pusha
pusha
fsubr
jnp
xor
xor
jmp
cmp
mov
repnz
mov
jnp
inc
aam
sti
mov
stos
xchg
add
jp
test
popl
sub
inc
jmp
push
adc
cwtl
sub
mov
or
add
pop
add
cmp
dec
cs
mov
out
rcrb
cmp
loopne
cmpsl
ljmp
xchg
scas
movsb
test
test
mov
xlat
jl
dec
fcomp
cmc
cld
loopne
aas
rorb
test
pusha
dec
cmpl
inc
cs
scas
mov
add
popf
jl
imul
repnz
test
in
or
and
sub
arpl
mov
push
outsl
add
xchg
pop
push
leave
clc
add
jnp
fdivrl
fwait
mov
pop
push
sbb
in
and
adc
push
inc
xor
push
sub
rclb
gs
mov
adc
add
jne
sbb
dec
cwtl
sub
dec
rolb
arpl
cmp
sub
aad
or
inc
cmp
je
in
ja
je
mov
mov
jnp
aas
add
out
pusha
push
and
mov
out
add
add
sti
aad
loope
mov
xor
and
xchg
ss
sahf
pop
pusha
ret
sbb
inc
sbbl
lock
or
cmpxchg
push
inc
adc
cld
sub
pop
and
xorb
clc
xor
addb
xchg
test
mov
and
movsl
xor
ljmp
lods
jne
popa
jb
jo
call
or
add
dec
push
sbb
adc
jnp
popf
add
push
lds
loop
or
pop
xchg
mov
push
add
lods
inc
sub
sarb
sub
loop
inc
mov
cltd
in
shlb
fdivs
inc
cld
mov
scas
test
pop
sbb
and
mov
jbe
icebp
mov
or
cltd
mov
add
ror
mov
gs
mov
xchg
mov
sub
cmp
lock
pmulhw
inc
cmpsb
stos
bound
add
movsl
jbe
and
jl
mov
and
into
add
add
mov
mov
push
mov
jne
popf
xchg
sub
clc
faddl
jbe
sub
stos
jo
pushf
pop
adc
clc
mov
lcall
sub
loopne
rcl
and
mov
dec
and
push
and
add
ret
jbe
add
dec
rclb
push
lods
or
mov
inc
mov
sti
push
test
pop
out
sbb
imul
inc
sbb
mov
sbb
pop
or
sub
pop
lret
cmpsl
mov
adc
bound
xchg
sub
add
mov
lds
lods
push
add
add
push
xchg
add
shlb
mov
aam
fwait
pop
push
hlt
aaa
mov
or
sub
fstps
xchg
inc
mov
test
mov
lock
ja
mov
jb
mov
sub
dec
fnstsw
add
push
add
scas
lcall
je
add
iret
cmpsb
loope
faddl
fdivrs
mov
sti
mov
xor
mov
imul
inc
out
fists
sub
add
lea
add
and
cmpsb
scas
push
mov
inc
sbb
jo
sahf
insl
add
push
dec
xchg
fcomps
sub
mov
and
jo
loopne
add
sbb
out
pop
lock
push
mov
cmp
imul
or
inc
loope
je
xchg
dec
stc
add
ret
cmp
jo
fst
add
lods
or
dec
push
js
mov
jmp
rcrb
and
xor
mov
xchg
and
dec
aam
call
inc
sub
sarb
xor
stos
or
jo
mov
add
pushf
dec
nop
pop
leave
es
add
mov
repz
cwtl
cmp
shll
add
lret
mulb
add
imul
xchg
lcall
xchg
movsb
ret
jp
sahf
in
push
jl
test
mov
adcb
leave
adc
add
and
cli
jmp
sbb
and
faddp
mov
lahf
filds
jo
adc
jl
dec
xor
pusha
incl
sahf
add
fwait
push
dec
out
fmulp
out
aam
mov
sbb
sub
pop
in
lock
mov
pusha
sub
outsb
xor
es
js
mov
jae
sub
jl
xchg
aad
das
add
neg
sub
cwtl
sub
xchg
repnz
lock
jnp
rcl
xor
or
inc
test
repnz
rolb
enter
mov
cmpsb
inc
movsb
or
inc
nop
inc
adc
lcall
xchg
xor
mov
cwtl
mov
xor
test
int3
inc
test
add
fwait
dec
push
add
rorb
int3
push
dec
in
pusha
fsubrs
pop
data16
cmpsl
adc
rorb
test
xchg
hlt
add
push
popl
fbld
cmp
sub
inc
cmp
nop
pushf
xchg
test
loop
xchg
xor
out
or
repnz
inc
and
out
sub
xchg
jmp
sub
in
insl
in
gs
loopne
scas
movsb
jno
bndldx
rcrl
fiaddl
in
cmp
mov
sub
xchg
sbb
add
sub
mov
js
cs
jp
adc
xor
enter
imul
clc
inc
xchg
or
fldl
pop
mov
lcall
mov
xchg
adc
sbb
ret
out
aam
push
pop
clc
bt
mov
es
sub
or
pop
or
cli
cltd
fsubl
js
xchg
and
mov
add
imul
adcb
mov
cmpsl
push
rclb
push
scas
fistpll
cltd
and
push
add
clc
movsl
lock
cmp
cmp
jp
cmp
fcoms
jb
mov
es
mov
sub
data16
jp
cs
mov
pushf
insb
push
adc
push
inc
mov
rolb
and
rcll
pop
sub
cwtl
nop
fiadds
insb
ss
and
mov
sub
subb
adc
mov
fsubs
addl
adc
dec
aad
enter
mov
mov
and
test
hlt
mov
popf
into
dec
sub
inc
in
push
shrb
gs
pop
pop
add
sbb
xor
mov
add
or
cmovno
push
inc
cwtl
jo
inc
cmp
lahf
dec
insl
pusha
adc
in
pusha
imul
push
xchg
ljmp
cltd
outsl
shlb
lret
rolb
push
in
pusha
in
lods
or
sub
sub
jp
aad
ds
sub
out
lods
sti
xchg
je
jmp
outsb
sbbb
mov
loopne
cltd
and
adc
add
pop
movsb
sub
pop
pop
jb
aaa
mov
sarl
mov
xchg
and
pushf
in
add
std
mov
aad
sub
sbb
mov
lock
jb
jge
dec
jl
cmp
and
loopne
mov
add
fs
jl
loope
testl
xchg
aad
out
add
or
push
or
mov
loopne
push
pop
inc
lock
aad
jl
loopne
cmp
mov
icebp
xchg
cld
fadd
xor
ret
jb
dec
cmp
push
les
add
out
xor
jl
xor
add
test
sbb
cmpsb
adc
js
push
or
add
stc
pushf
xor
sub
les
jg
ds
in
mov
pop
mov
seto
adc
or
and
shrb
shl
adcb
in
addl
sub
jo
adc
jnp
add
addr16
adc
jne
pop
cmp
mov
and
push
sti
push
loopne
rorl
je
sbbb
enter
outsl
jo
dec
add
pushf
daa
xchg
lods
xchg
mov
shlb
xchg
or
outsb
mov
int
out
push
mov
inc
fs
sub
out
iret
cs
mov
adc
xchg
pop
inc
inc
test
mov
sub
mov
push
and
jo
add
pop
fisubl
xor
dec
clc
loop
dec
adcl
push
daa
push
push
cltd
mov
inc
inc
out
dec
pop
pop
pop
test
xchg
adc
add
imul
xor
add
xor
add
mov
add
cmp
add
fists
clc
or
call
and
add
pop
mov
test
lea
pop
xchg
adc
jmp
add
roll
xor
add
lret
push
dec
fsts
and
and
and
cmpsb
inc
or
cmp
bound
repz
test
sahf
sbb
add
arpl
xchg
addr16
fs
dec
cmp
cmp
cmp
mov
and
scas
aas
clc
mov
cmp
xorb
mov
pop
dec
lock
lds
mov
and
push
sub
insl
pushf
sbb
mov
xor
stc
mov
mov
ljmp
nop
rcr
test
fcomps
cmpsb
dec
push
sub
push
loop
and
jg
add
dec
mov
add
stc
mov
faddl
adc
mov
push
cwtl
add
pop
pop
dec
xchg
add
add
xor
insb
sub
scas
cmp
mov
test
aad
xor
mov
push
ds
sub
cli
clc
push
or
arpl
xchg
jbe
ficoms
cmp
or
loopne
dec
cmpsl
mov
into
push
insl
add
lahf
add
gs
inc
cmpl
add
adc
and
das
cmp
pop
sub
call
loopne
dec
add
sti
decb
addb
pop
dec
push
cwtl
lahf
loopne
or
xor
push
or
sub
jmp
inc
inc
nop
jecxz
enter
and
in
add
mov
mov
xchg
sub
add
test
push
adc
adc
out
pop
jcxz
adcb
sub
mov
cld
popf
xor
arpl
mov
mov
ret
sub
cmpsl
cmp
or
daa
and
add
out
clc
ret
into
or
mov
pop
gs
sub
and
and
push
mov
sub
enter
rol
movsb
add
add
pop
push
cmp
scas
imul
ja
adc
ljmp
ret
call
mov
adc
aam
mov
imul
add
and
pop
cmpb
inc
lret
sub
sub
cli
xchg
add
cmp
ret
arpl
cltd
inc
add
js
hlt
push
js
push
adc
mov
push
jb
xorl
mov
inc
ret
inc
adc
xchg
cld
in
ficoms
pop
and
add
daa
add
dec
push
push
push
pop
pop
adc
daa
pop
out
add
adc
les
add
notl
inc
adc
xor
inc
mov
lahf
and
push
adc
pop
test
dec
jmp
xor
jp
sarb
ret
cmp
jae
jns
pop
fucom
sbb
xchg
rclb
push
or
jo
adc
loop
add
movsb
test
aaa
sbb
jbe
jmp
sub
sbb
aam
mov
and
int3
ret
inc
shrl
das
ljmp
and
out
outsl
cmp
fs
and
xor
add
and
dec
push
mov
xchg
xor
adc
aas
sub
addr16
ljmp
mov
sti
ss
sarb
or
dec
cmp
std
adc
or
mov
add
sti
rol
adc
popa
and
stos
cmp
jno
rclb
fisubl
lock
sub
sar
dec
xchg
add
cmp
push
jae
inc
adc
push
xchg
add
rol
stos
cmp
incb
bswap
inc
mov
dec
or
pop
sub
xchg
stos
push
mov
pop
push
sbb
jo
xchg
mov
xor
cmp
pop
add
in
pop
mov
pop
xor
adc
andb
and
sub
xchg
and
aad
rcrb
das
es
incl
mov
and
lock
rclb
xlat
push
fistpll
inc
fwait
mov
divb
sub
mov
push
les
sub
dec
notl
sub
xor
or
loope
push
fsub
clc
xor
or
mov
pop
adc
dec
dec
std
xchg
test
add
xor
repz
sbb
push
and
sub
adc
sbb
push
data16
cwtl
and
mov
fs
sbb
scas
pop
ficompl
movsb
es
jbe
sbb
jo
push
adc
dec
cmpsl
inc
xor
push
pop
rcl
mov
add
dec
add
mov
and
cltd
in
mov
test
cltd
cmc
dec
sahf
ficompl
mov
push
push
stos
js
sbb
mov
pop
add
lcall
in
ljmp
sbb
loope
mov
sbb
adc
jb
adc
aam
cmpsb
cmp
dec
and
das
pusha
mov
and
push
and
add
outsb
add
jle
and
mov
xchg
mov
in
and
sbb
nop
mov
adc
fwait
add
and
and
int3
aas
and
add
orb
or
stos
andl
ljmp
imulb
mov
add
xor
cmp
pop
xor
dec
fists
xor
mov
pop
je
addb
lea
mov
inc
lods
add
fs
mov
and
clc
xchg
test
cmp
cmpl
je
cwtl
mov
adc
pop
xchg
adc
fstl
sbbl
popa
xor
sbb
adc
and
jnp
call
xor
push
pop
xor
push
adc
fs
dec
jnp
ds
fcompl
enter
in
in
push
sbb
push
rolb
xor
mov
stc
test
enter
and
pop
pusha
inc
adc
inc
and
add
les
adc
adc
or
imul
dec
pop
mov
lock
add
outsb
and
mov
add
xchg
in
dec
inc
push
or
in
mov
mov
mov
std
jb
mov
dec
imul
or
or
push
pop
cmp
and
mov
add
sbb
add
jl
push
mov
and
cmc
add
lds
inc
add
pop
push
xchg
and
push
xlat
inc
dec
add
cmp
push
sbb
js
mov
es
add
adc
insl
cmp
cmp
xchg
cmp
es
inc
in
cltd
scas
popa
mov
push
loopne
in
nop
lock
clc
cmp
loop
pop
sbb
ss
lock
and
add
cmp
jne
leave
dec
sbb
dec
and
xchg
cli
add
add
nop
mov
fwait
cwtl
pusha
ret
lock
add
fs
mov
or
adc
out
adc
jg
adc
xor
xchg
inc
in
repnz
mov
inc
in
and
cld
inc
mov
fiadds
data16
outsb
js
nop
dec
lret
xorb
lahf
enter
data16
push
add
add
add
call
pop
arpl
dec
test
adc
in
cmp
or
adc
movsl
and
mov
dec
sbb
sbb
and
cmp
push
addb
cmp
orps
inc
hlt
es
add
mov
and
std
ja
or
stc
pusha
js
jp
imul
dec
cmp
mov
cmc
mov
adc
cli
sub
es
sub
mov
mov
xor
sbb
scas
push
es
adc
mov
js
stos
cmp
sbb
test
push
push
stc
or
lret
sbb
sub
and
and
ret
dec
dec
inc
enter
cmp
movsl
outsl
dec
mov
pop
adc
push
fwait
push
faddl
jo
mov
dec
sub
test
shr
xchg
xor
pop
mov
jl
mov
call
add
rolb
cmp
cmp
outsl
dec
les
data16
jmp
cs
fildl
sbb
push
mov
lea
lods
mov
inc
sub
or
loope
and
pop
test
inc
adc
andb
cmp
sahf
sbb
test
ds
cmpl
popa
imul
sbb
xchg
add
push
cmp
add
ja
dec
mov
mov
dec
or
fsubr
popa
sub
adc
xor
imul
or
fadds
shlb
fdivr
add
aam
pop
ret
jns
mov
cmp
arpl
rcr
xrelease
jbe
sbb
sub
and
sbb
add
xchg
out
test
pushf
arpl
push
mov
pop
mov
add
adc
faddl
clc
test
jmp
and
fdivrs
adc
xor
add
sti
imul
es
adc
adc
cmp
int3
push
inc
cmp
mov
xor
pop
ret
orl
jmp
fsts
sti
fwait
rclb
je
add
popa
sbb
cmp
add
add
mov
pop
xor
xor
or
mov
mov
push
loopne
jmp
xor
jae
lret
push
mov
jae
inc
xor
or
push
push
mov
push
jmp
pop
xor
ss
in
add
lahf
enter
and
inc
jg
pop
int
dec
jno
pusha
mov
xsha1
cmpsb
dec
push
adcl
pop
add
rdmsr
lods
insb
push
enter
xor
orb
jg
mov
stos
pmovmskb
subb
jmp
in
xor
mov
jo
pop
pop
jmp
faddp
dec
jo
js
mov
sbb
into
push
bound
pop
roll
mov
out
sti
mov
sbb
pop
xor
cwtl
mov
push
and
adcl
sub
xchg
pop
cltd
addr16
mov
sbb
mov
xchg
add
jmp
mov
xor
ljmp
andb
push
or
in
jno
sub
add
test
int
adc
sub
mov
mov
add
sbb
or
or
mov
adc
push
push
dec
dec
xchg
cmpsb
xchg
dec
dec
xchg
mov
add
not
and
into
push
adc
cmpl
xchg
sub
fdivrl
movsb
pop
mov
dec
jno
dec
pop
pmulhuw
sub
jb
pop
shl
out
xchg
jecxz
push
ficompl
pop
pop
fimuls
in
sar
push
mov
jle
push
pop
add
or
pop
and
add
ret
jmp
add
push
adc
jmp
pop
xchg
pop
dec
xor
push
mov
add
dec
rcrl
dec
adc
movsl
add
push
push
jmp
hlt
add
push
mov
adc
mov
xchg
subl
pop
inc
mov
push
cmpsb
mov
push
test
popf
out
xor
sti
xchg
cmp
lcall
jl
imul
push
cmp
jmp
xor
int
dec
push
inc
sub
stc
nop
icebp
cmpl
push
push
xchg
bound
cmp
clc
movsl
or
add
pop
sub
jbe
push
push
sub
dec
mov
inc
inc
repz
add
or
xor
mov
add
shr
not
push
dec
inc
addl
bsr
sub
shlb
push
push
lea
mov
add
sahf
jl
movsl
and
jecxz
pop
push
adcl
mov
mov
sub
ljmp
jmp
adc
push
cmpl
inc
lahf
jge
pop
add
loop
nop
jp
loope
push
dec
andb
inc
pusha
outsl
ret
popa
ds
xor
pop
fs
lahf
in
sahf
pusha
cld
push
push
pop
cltd
subl
sti
pop
or
mov
out
in
push
push
dec
inc
push
push
inc
jb
pop
loope
idiv
outsb
mov
xor
pop
push
jmp
loop
dec
inc
mov
lret
movsl
push
pusha
adc
inc
lock
jno
inc
sub
sub
add
xchg
mov
cwtl
xor
sub
in
repnz
adc
pop
rcr
aas
pushf
stos
pop
mov
mov
add
popf
xchg
andb
push
mov
mov
or
mov
and
sub
out
dec
pop
sub
mov
es
jmp
loopne
out
loop
cmp
pop
test
push
push
jp
or
nop
daa
add
mov
pop
cmc
jns
pusha
jecxz
push
push
push
push
or
ljmp
add
xor
daa
pop
adc
mov
pop
push
push
out
pop
notl
mov
push
sub
xor
fildl
shl
inc
xor
mov
lods
addr16
enter
lods
enter
sbbb
pop
sub
cmp
rcrl
mov
lret
shll
cld
loope
and
call
cwtl
mov
je
insb
dec
xchg
cwtl
jmp
xor
pop
sub
pop
mov
mov
lahf
mov
ret
add
out
in
fcomps
xor
aas
jmp
repnz
idivb
mov
xor
mov
mov
mov
mov
xlat
pop
faddl
dec
adc
outsb
jmp
jno
movsl
and
incb
mov
loopne
bound
xchg
dec
add
push
loop
rcrb
pop
sub
xchg
iret
sbbl
ficomps
mov
xor
sti
push
adc
add
jp
add
fiaddl
loopne,pn
adc
ljmp
cli
add
jne
sub
xchg
jmp
nop
or
sub
call
mov
mov
outsb
mov
out
in
or
push
or
sbb
and
pusha
push
pop
filds
xor
lds
push
xchg
jmp
in
sbb
jbe
mov
outsb
pop
insb
shlb
jns
loopne
lods
mov
sahf
adc
mov
lahf
mov
pop
shrl
mov
inc
bound
repnz
push
adc
add
int
sub
add
pop
lods
xchg
inc
or
fsubl
dec
cwtl
cmpsl
jg
dec
imul
mov
mov
mov
cs
xchg
test
shl
orb
stos
pop
jg
sub
jnp
sub
dec
iret
push
test
in
lret
jo
loope
xor
pop
xor
xor
xor
into
cmpsb
xchg
icebp
inc
xchg
push
neg
adc
mov
mov
xchg
mov
je
mov
es
xor
add
sbb
sbb
mov
adc
idivl
inc
pushl
je
insl
bound
sub
bound
push
mov
pop
jne
add
or
pushf
test
testb
stc
shrb
das
xor
dec
push
add
and
mov
es
insl
xor
add
loopne
ja
stc
xor
shll
xor
aas
mov
or
mov
loop
jo
jle
and
mul
jl
bound
sub
xor
jmp
add
outsb
push
push
and
or
sti
dec
out
sbb
jb
pusha
imul
sub
mov
push
xchg
add
pusha
jae
sbbl
push
push
lret
sub
add
mov
jmp
pop
cwtl
rolb
add
cltd
sub
inc
imul
aad
cmp
push
pop
shl
adc
add
push
in
jmp
push
mov
addr16
lods
jp
orl
cltd
arpl
hlt
push
or
push
mov
lea
add
pop
pop
pop
jmp
inc
int
and
inc
sub
repz
aaa
orb
push
cwtl
jb
lods
xor
insb
fnstenv
int
fwait
test
out
les
add
paddd
push
stos
lock
add
or
jecxz
add
jmp
mov
notl
dec
xor
mov
inc
dec
in
and
pop
pop
outsb
adc
push
mov
pop
jae
xor
mov
xchg
fistpll
unpcklps
iret
mov
cmpsb
test
push
push
sti
pop
add
adc
sub
or
ja
add
gs
or
mov
ret
push
and
ret
mov
pop
inc
fistpll
xchg
push
pop
not
push
shl
sbb
pop
fs
add
cld
loop
sub
or
negl
lret
and
and
les
stos
test
mov
jae
sub
pusha
rcll
jb
add
testb
insb
mov
cmpl
xchg
roll
add
dec
fs
and
push
add
xor
loop
cmp
or
pop
testl
adc
outsb
mov
sbb
call
pop
cmp
sub
xchg
dec
dec
rorb
cmp
push
pop
xchg
std
mov
dec
daa
jmp
shr
syscall
inc
cld
xchg
imul
xchg
sub
inc
frstor
add
sbb
lds
js
test
movsb
sub
add
mov
pop
xor
in
fnstsw
add
je
add
sbb
rclb
jnp
iret
push
xor
pmaxub
dec
push
dec
add
xlat
add
mov
daa
in
and
iret
add
ljmp
mov
pop
leave
xor
jne
pusha
fs
pop
adc
jmp
mov
xor
test
loope
imul
ret
inc
pop
add
jmp
xchg
mov
mov
not
mov
les
mov
xchg
mov
mov
jl
or
push
pop
leave
xor
sub
test
dec
xchg
jecxz
imul
test
push
or
inc
clc
repnz
sub
subl
pop
arpl
mov
mov
outsl
inc
js
xchg
shll
inc
inc
frstor
dec
push
sub
inc
outsb
stc
and
fwait
outsb
inc
jg
dec
push
sub
jl
mov
xor
push
sub
jno
fwait
jae
and
jb
dec
andb
and
fcomps
cmp
pop
ret
or
pop
push
jmp
cmp
jae
lcall
add
addb
dec
push
jmp
pop
xchg
cmp
and
stos
aas
int
or
push
mulb
jns
mov
jb
adcl
xor
pop
or
mov
cmp
add
pop
neg
push
mov
sbb
sti
lds
xor
push
cmp
xor
sub
test
dec
movsb
pop
mov
dec
push
jb
adc
arpl
adc
dec
lock
mov
shlb
aas
jb
xor
adc
push
data16
incl
xor
xlat
cmpsl
mov
jl
mov
add
loop
pop
add
dec
jb
daa
xchg
pop
call
shr
cli
movsl
dec
int
add
test
add
fldt
and
pop
ja
leave
test
sub
and
fwait
bnd
jae
mov
xchg
test
push
push
add
jge
mov
push
mov
add
adc
or
sbbl
jg
add
mov
shl
mov
lret
xorb
stos
test
daa
enter
push
push
xchg
or
out
sbb
adc
fmull
and
pop
mov
pop
add
dec
shl
loopne
addr16
or
jl
inc
mov
addr16
jge
xor
out
sbb
fdivs
mov
outsb
add
mov
or
push
dec
jecxz
cltd
jno
add
movsl
rcll
or
dec
neg
add
xor
rol
mov
pop
sub
pop
adcb
push
lods
add
dec
push
mov
sbb
pop
cmp
sub
icebp
test
invd
pop
xlat
sbb
sub
loopne
cwtl
dec
inc
add
test
and
mov
iret
pop
lods
mov
loopne
pop
rcll
inc
out
jmp
sar
dec
jle
das
or
pop
push
rolb
mov
cmpsb
push
and
or
imul
lcall
mov
mov
and
and
push
leave
stc
je
sub
shrb
repz
insl
add
pop
xor
pop
jmp
and
shrb
adc
inc
and
aaa
in
or
jp
fistps
aas
jecxz
icebp
xchg
je
mov
mov
inc
lock
testl
sbb
lcall
xor
or
add
pop
push
add
sbb
out
dec
dec
sbb
orl
adc
fimuls
jo
sbb
pop
ficoml
push
lock
sbb
and
inc
nop
and
xchg
add
dec
sbb
or
jo
xor
push
inc
push
outsl
xor
inc
sub
or
lods
or
pop
imul
add
push
ljmp
xor
push
xchg
or
fld
mov
sub
sarl
or
test
pop
pop
jp
xor
test
push
add
pop
jmp
lock
add
pop
add
pop
shr
jno
dec
jne
push
imul
stos
add
and
call
mov
ja
or
cmpsb
arpl
mov
xor
inc
dec
ja
addb
out
or
mov
xor
ja
add
or
pop
loop
nop
push
mov
sub
es
cmp
sbb
adc
xor
clc
int3
add
test
es
mov
pop
jmp
outsl
jmp
movsb
in
inc
add
and
int3
and
cmp
and
or
add
add
and
in
add
xlat
fstl
sub
lods
push
cs
out
inc
xchg
call
cltd
cli
or
imul
insb
shr
adc
pop
and
dec
sbb
add
notl
mov
movsl
pop
xor
mov
lret
push
out
hlt
orb
mov
rcl
push
call
dec
inc
sti
mov
push
inc
pop
mov
mov
in
add
push
cmpsb
repz
add
add
outsb
dec
jmp
or
inc
inc
add
sub
loope
mov
es
or
outsl
adc
test
rcrl
push
xchg
pop
ljmp
pop
sarl
dec
les
add
fdivs
sahf
cld
adc
pop
xor
rol
jl
push
push
mov
or
mov
out
setge
movsb
adc
mov
imul
mov
push
sub
fisubrs
push
inc
out
cmp
ficomps
sub
loopne
sub
push
push
test
mov
xorl
sub
add
addr16
jmp
pop
add
je
inc
dec
mov
das
mov
add
xor
or
fwait
cmp
fs
sbb
pop
push
dec
pop
test
mov
jmp
sub
fdivrl
stc
and
push
bound
cmp
dec
pop
add
nop
or
fsubrs
or
ja
jmp
pop
shlb
and
movb
outsl
or
je
fmuls
cmp
mov
pop
cmpb
jb
imull
add
inc
bound
mov
push
sub
add
out
cmp
ret
mov
shll
cld
and
shld
lock
sub
mov
jge
cmc
aam
incl
mov
inc
mov
add
loopne
add
xchg
lea
shl
cli
cmp
add
sbb
rcl
xor
jmp
lds
inc
mov
xchg
dec
xorl
ljmp
stos
add
mov
or
xor
in
jo
xor
pop
cwtl
push
xor
dec
dec
add
push
or
iret
jmp
cmp
add
and
push
jmp
jb
or
jmp
enter
jmp
jmp
xchg
lret
inc
push
xor
adc
adc
out
mov
fdivl
in
and
or
in
dec
dec
arpl
add
adc
out
daa
sbb
or
sub
imul
outsl
mov
sub
rorl
aad
rolb
adc
pop
xchg
shlb
or
in
adc
ret
sub
adc
cwtl
add
je
jle
fbld
lcall
jle
jbe
or
nop
orb
aaa
sbb
add
sub
dec
lock
repz
ss
testb
jmp
push
mov
les
mov
pop
rorl
sbb
dec
cmp
add
call
add
sbb
or
xor
sub
xor
in
lret
aaa
xor
dec
nop
imul
ds
add
fstps
in
lret
inc
loope
jg
movsl
popl
loope
push
mov
xor
jmp
inc
mov
pop
das
xor
ds
or
and
loope
out
ficompl
cmp
rcrl
fimull
sub
or
mov
in
or
inc
sub
jmp
push
sbb
xor
rorb
pop
and
pop
pop
mov
daa
jmpw
ss
pop
xchg
push
inc
mov
aad
jmp
ret
mull
in
mov
rorb
and
jl
outsb
imul
cmp
push
adc
inc
rcrb
adc
add
popa
mov
ret
std
ret
cmpsl
xor
inc
xor
sti
test
or
xlat
or
outsb
or
jge
or
icebp
fsubs
hlt
push
lcall
dec
add
repz
and
popf
mov
add
add
xchg
aas
outsb
call
or
call
inc
xchg
rcrl
jmp
aas
adc
adc
xorb
aad
es
push
sub
push
push
cmp
adc
cmc
and
adc
fiadds
lret
or
add
cmc
mov
push
inc
gs
nop
push
dec
cmp
jg
lret
push
push
adc
pusha
sti
push
pop
rorb
outsl
jmp
xor
jmp
xor
adc
mov
pop
mov
cli
pop
mov
daa
or
adc
mov
push
inc
mov
mov
xchg
xchg
sub
ror
mov
ret
insb
add
je
dec
rol
xlat
out
inc
mov
roll
push
mov
add
mov
addb
inc
shr
neg
push
dec
mov
adc
leave
add
sub
adc
add
mov
imul
add
xlat
ffreep
push
mov
sub
nop
cmp
pop
xchg
lahf
sbb
inc
push
ss
sbb
les
push
add
jmp
jge
xor
dec
or
mov
xlat
xlat
rcrb
sahf
or
iret
sub
mov
les
mov
test
or
sahf
push
mov
sar
mov
aas
outsb
adc
call
add
jb
add
psraw
in
mov
icebp
jae
clc
jno
push
push
mov
jle
out
aad
jnp
xchg
xorb
xlat
mov
add
jecxz
mov
pop
sub
icebp
xchg
dec
lret
pop
orb
jnp
add
xchg
jp
sbb
pusha
fs
nop
push
pcmpgtw
in
mov
bound
or
xchg
inc
dec
push
jbe
xor
out
jns
add
inc
movl
adc
enter
js
in
jp
lds
bound
sub
cli
lods
dec
icebp
mov
pop
pusha
add
pop
adc
cmpsl
call
arpl
enter
add
lods
push
and
adc
test
adc
rorb
cltd
mov
popl
out
mov
push
mov
inc
mov
pop
dec
lret
icebp
aad
pop
or
fstpl
add
pop
nop
ret
xor
jg
rorb
lret
mov
or
add
and
inc
sub
pop
ficoms
push
out
push
push
pop
pop
cmp
jp
mov
jl
imul
cmpsb
lods
mov
push
or
add
mov
loope
cmpsl
add
rep
pop
sbb
add
cmp
mov
xor
lods
xor
xor
icebp
inc
nop
sbb
pop
fistl
and
jmp
roll
or
mov
sub
or
fs
int
inc
or
jmp
lret
jp
je
jnp
mov
mov
cmp
aas
and
in
ret
dec
lret
aas
jo
xchg
sbb
pop
rdtsc
dec
sahf
movsb
sbb
lret
dec
jp
sbb
push
sbb
out
mov
ud0
das
popa
fcompl
filds
add
pop
pop
lock
adc
sti
pop
jno
inc
movsb
int3
add
or
fistps
mov
mov
cmp
add
out
pop
or
clc
mov
jmp
out
test
pop
xor
mov
mov
sbb
push
push
mov
cld
fcomps
add
test
mov
inc
pop
movsl
sub
mov
out
pop
outsl
add
adc
and
jmp
xor
sub
push
inc
mull
sub
stos
jno
sub
adcb
test
and
fldt
popa
xchg
or
cmc
call
jmp
jns
lea
aam
scas
in
mov
das
push
add
dec
or
and
pop
sbb
enter
pop
mov
sub
mov
ja
stc
lds
jne
or
pop
lcall
sub
orb
cmp
repz
sub
insl
sbb
add
xor
push
into
add
popa
loopne
dec
add
mov
pusha
and
pop
fisubs
pop
dec
clc
cs
push
ficoml
notb
mov
sub
pop
daa
add
push
mov
fwait
rolb
addr16
mov
pop
fdivrl
inc
movb
dec
nop
addr16
sahf
cmp
sbb
shll
mov
fs
repz
idivb
xchg
push
icebp
loopne
popa
fsubs
sub
les
or
test
push
sbbb
pop
inc
jl
fs
scas
sub
cmp
pop
jae
incl
mov
mov
mov
adc
imul
mov
andb
adc
lahf
mov
cld
sub
push
cmpb
pushf
outsb
sarb
cwtl
sub
pop
test
lods
inc
stos
cs
inc
gs
xchg
push
mov
add
not
inc
adcb
test
or
xlat
and
iret
fistpll
xor
ret
daa
test
ret
mov
loope
xchg
sub
push
fistl
ja
ret
adc
add
stos
inc
je
fnstcw
dec
adc
and
cld
pop
pop
call
jmp
mov
ja
xchg
adc
arpl
adcl
push
or
add
sbb
int3
daa
pop
je
xor
inc
hlt
bnd
xor
movsl
in
repz
jp
or
mov
add
mov
js
dec
xchg
fildll
add
xchg
cmp
cmpl
push
xor
or
sar
loop
fistpl
mov
mov
cmpl
add
sub
dec
pop
push
int
cmp
les
mov
push
addl
jge
pop
adc
aam
pusha
leave
sbb
add
and
adc
clc
mov
iret
lcall
fsin
into
xchg
and
xchg
push
xor
pop
outsl
stc
jmp
cmp
fldcw
es
xchg
orb
dec
es
push
mov
pushf
add
out
add
pop
shll
daa
xor
xlat
jg
lret
dec
sub
lods
xor
mov
push
jne
sub
pop
mov
leave
je
push
data16
push
jle
jns
repnz
ds
icebp
jl
add
xchg
outsl
xor
inc
mov
popf
pusha
out
adc
pusha
mov
adc
or
jmp
push
mov
daa
out
in
shrb
push
div
rclb
pop
inc
orb
icebp
sub
stc
in
fs
jmp
inc
mov
ds
leave
mov
sub
mov
stos
pushf
leave
pusha
sub
inc
add
sub
leave
mov
into
shlb
xor
push
fs
push
jmp
xor
adc
and
loopne
xor
jno
iret
jl
and
sub
push
jl
xor
pop
mov
sbb
aad
adc
lahf
add
clc
dec
add
xor
jb
pop
push
mov
jmp
mov
jmp
pusha
popa
pop
push
add
leave
orb
xchg
push
adcb
sti
inc
lahf
pop
ljmp
out
scas
add
insl
add
out
push
fldcw
mov
mov
movsb
mov
inc
shr
jmp
sbb
nop
das
xor
mov
cltd
mov
mov
das
scas
jo
cmp
inc
adc
pop
sub
adc
mov
arpl
push
xor
pop
mov
ret
iret
pop
pop
sbb
push
inc
add
xlat
inc
shl
pop
daa
aas
add
sub
fsubrs
fcompl
adc
notb
xchg
or
jno
add
fstpt
mov
pop
jmp
cmp
sarb
aad
add
and
and
xor
movsb
adc
add
adc
fiaddl
out
dec
xor
enter
mov
and
test
pop
or
mov
aaa
sbb
jae
mov
or
addr16
test
jb
push
inc
xor
in
mov
sbb
pop
into
mov
test
add
add
ret
or
jmp
jbe
dec
add
test
pop
jo
and
clc
add
in
pminub
jno
and
out
js
or
nop
test
push
and
and
pop
loop
inc
or
outsb
jmp
mov
repnz
and
xchg
roll
push
xor
push
jmp
addr16
imul
subl
cmp
aaa
pusha
jmp
pop
aam
adc
jg
adcb
xchg
lss
inc
xor
adcb
add
int
adc
rclb
ja
dec
pop
cmp
gs
in
and
insb
xor
sub
jmp
clc
and
gs
or
fs
xor
test
add
add
lea
or
add
lret
scas
or
incb
roll
add
adc
sahf
dec
mov
xchg
mov
lret
and
loope
loop
push
mov
lods
bound
cmp
add
jmp
add
cltd
fsubrs
or
stos
mov
mov
push
lret
jecxz
pop
push
in
add
les
jae
cld
out
fcomps
testb
mov
pop
popa
jmp
jle
mov
mov
inc
inc
pop
loop
lret
fldenv
es
daa
and
out
into
push
repnz
pop
mov
lock
and
add
test
fisttps
xor
jmp
xchg
xchg
jmp
lock
sbb
imull
test
filds
dec
add
or
or
and
imulb
xchg
fs
lock
lret
or
adc
mov
andl
test
xorps
clc
call
rcll
out
push
sbb
add
jno
cmp
push
cmp
cmp
push
cli
cmpsl
mov
and
pop
inc
es
iret
lds
daa
and
mov
lahf
add
add
jb
xlat
dec
pop
or
popa
mov
dec
push
dec
push
xor
lds
inc
mov
cli
adc
iret
add
or
arpl
dec
std
and
inc
jmp
sub
xchg
scas
ret
mov
xor
dec
repz
in
fnstcw
add
push
icebp
adc
sar
sub
jne
dec
add
pop
add
push
shlb
adc
icebp
pop
loop
adc
cmp
cmpb
cmp
dec
call
mov
pop
push
push
je
dec
scas
and
int
pop
cltd
adcb
adc
je
mov
fistpl
test
test
mov
jbe
hlt
adc
and
add
push
jno
not
xchg
push
pop
dec
adc
in
sub
xchg
xchg
clc
adc
iret
and
xor
pop
loopne
push
pop
xchg
pop
out
mov
push
add
testb
pusha
push
push
js
stos
mov
or
js
test
jbe
icebp
das
cwtl
jno
jns
mov
mov
push
cmp
addl
mov
add
scas
clc
push
and
je
fiadds
pop
pushf
or
cs
dec
xchg
test
add
push
popl
repnz
jmp
dec
in
int3
or
repz
insb
or
and
nop
jge
test
pop
push
mov
xor
mov
push
push
dec
in
es
movsb
call
push
sbb
mov
jl
shrl
aas
and
inc
ret
push
popa
add
rolb
or
sub
int
ret
cmpsl
add
mov
fisttps
aam
movsl
andl
mov
push
xchg
test
cli
add
loope
rcr
mov
sub
pop
clc
add
gs
mov
push
jmp
imul
add
mov
sbbl
test
out
loope
lds
inc
les
adc
pop
push
add
je
cmp
in
jecxz
pcmpgtb
push
pop
dec
push
xor
pop
test
pop
add
notl
out
jle
pusha
ret
mov
push
es
pusha
int3
pop
subb
lock
in
adc
adc
rorl
rorb
pop
mov
push
push
pushf
jmp
and
adc
adc
mov
dec
pop
cwtl
inc
cmp
inc
mov
and
cmp
dec
xchg
pop
enter
jecxz
arpl
add
lahf
daa
pop
sub
clc
lret
orb
aas
iret
aam
out
cmp
icebp
inc
add
arpl
dec
lea
cltd
cs
jbe
sti
sub
pop
adcb
dec
pusha
dec
mov
or
pop
int3
jmp
push
ljmp
jno
repz
je
fildll
jne
xchg
push
stc
rcr
mov
sub
add
rcrb
xor
ret
dec
ljmp
mov
lock
sub
pop
mov
aad
or
add
js
dec
jmp
adc
rorl
add
push
mov
mov
xor
jne
push
mov
scas
dec
cmp
insl
fbstp
sarb
cs
push
incl
mov
lods
adc
rolb
push
add
and
data16
dec
dec
pop
adc
adc
mov
aas
add
inc
icebp
or
xor
andb
dec
adc
loop
nop
hlt
pop
pushf
mov
mov
add
add
fidivs
pop
outsb
shrl
test
mov
cmp
cld
loop
inc
sbb
pusha
jecxz
les
mov
mov
xor
push
adcb
dec
movsl
dec
pop
push
fs
dec
mov
pushw
push
mov
js
jg
xchg
ror
pop
dec
not
mov
xor
add
or
add
or
fisubrl
test
jae
repnz
cmpsl
popf
data16
icebp
or
fs
jmp
mov
lret
subl
jge
push
jmp
push
push
mov
xchg
push
insl
ds
ss
add
mov
das
mov
adc
lret
or
nop
mov
pop
gs
call
sbb
cltd
fs
addb
pop
iret
mov
ret
and
push
pop
pop
call
lret
mov
inc
sbb
js
iret
push
and
fimull
jo
popf
xchg
pusha
cmp
mov
cmp
pop
and
jne
add
aas
jp
cvtps2pd
dec
loope
sbb
and
push
ds
icebp
out
mov
push
pop
pusha
mov
sub
addb
or
pop
mov
jmp
xchg
das
cmp
add
push
insl
inc
addl
dec
cs
sub
inc
pop
subb
fdivrs
rcrb
xchg
aam
clc
inc
jmp
cmc
arpl
adc
pop
cld
adc
mov
and
jg
bnd
add
fdivr
aas
and
push
mov
adc
xchg
pop
test
cmpb
imul
aad
rcrb
shr
sub
jge
dec
daa
cli
add
xlat
and
insl
es
test
jns
sub
pop
adc
clc
adc
popa
insl
add
push
add
sbbb
cmp
inc
cltd
in
pop
push
mov
adc
outsl
mov
sub
loope
div
fs
mov
es
push
mov
jmp
mov
ljmp
add
mov
adc
add
push
and
push
inc
mov
mov
loope
push
adc
jns
xor
dec
cmp
cmp
lcall
jg
sbbb
fs
inc
sbb
xchg
jno
and
cmp
mov
lods
sbb
jmp
shl
inc
dec
add
lret
push
jle
rsm
push
fimull
cli
dec
or
and
dec
ss
add
xchg
scas
movsb
mov
hlt
cli
aaa
rol
lock
push
dec
daa
in
ret
insl
add
cmp
clc
test
test
push
or
in
cs
pushf
jle
mov
enter
add
or
mov
inc
pop
push
addl
add
jbe
push
and
dec
xchg
dec
adc
mov
les
cmp
inc
out
dec
arpl
loop
pusha
sub
jae
sti
cs
pop
push
pop
jmp
movsl
push
mov
add
or
and
jp
pop
lahf
sub
enter
push
push
test
std
movsb
fsts
out
jns
inc
or
je
and
push
jmp
lcall
pop
jb
movsl
push
or
jge
push
dec
lods
xor
aas
dec
dec
test
mov
inc
jge
orb
jmp
xchg
jae
jnp
dec
insb
pop
cmp
pop
add
jmp
push
clc
sahf
popf
xchg
pop
or
xchg
sbb
xchg
xchg
xor
ret
jo
pop
pop
dec
xchg
andb
je
xor
pusha
sub
adc
movsb
and
out
or
inc
xor
aam
push
pop
das
mov
adc
testl
clc
in
adc
mov
out
mov
cmp
or
cmpsl
jae
fsubs
sbb
sub
or
sub
sub
ds
adc
sar
sub
ret
inc
mov
jo
les
push
loop
rorl
pop
add
mov
xchg
cmc
add
cld
mov
push
and
aam
pusha
mov
cmp
adc
cmpsl
andl
pop
inc
cmp
imul
dec
push
and
testl
gs
scas
fs
aad
add
push
inc
icebp
mov
mov
sahf
xchg
jmp
out
xchg
adc
sub
pop
mov
dec
mov
fmull
movzwl
pushw
dec
sbb
not
fwait
cmp
popf
adc
lock
jbe
add
mov
call
mov
lods
stos
xor
dec
xor
cmp
test
call
shrl
ficomps
push
pop
loopne
push
jmp
mov
xchg
out
or
incl
jmp
ret
dec
jns
dec
mov
push
adcl
add
lds
test
shlb
dec
sbb
jmp
dec
pop
mov
jg
and
in
or
clc
mov
cmp
inc
ds
js
pop
pop
xor
push
es
sub
xchg
add
push
pop
out
xor
inc
js
imulb
and
divl
or
xchg
pop
sbbl
stc
or
and
cmp
mov
push
movsl
int
and
leave
pop
mov
push
lret
inc
imul
loope
xor
cld
add
das
aad
and
idivb
call
xchg
dec
xchg
pop
xor
negb
or
data16
addb
ds
cwtl
fiaddl
sbb
jo
jb
cmp
sub
dec
mov
sbb
jge
sar
shlb
jecxz
push
int
shr
inc
ret
test
push
mov
sbb
mov
movsb
push
adc
scas
adc
mov
mov
test
aam
ja
mov
addr16
adc
movups
push
add
movsb
adc
mov
jl
jne
icebp
jmp
outsb
loop
frstor
aam
sbbb
sbbb
dec
pusha
scas
add
cld
insl
sahf
shl
jae
adc
mov
jbe
add
pop
xchg
jg
push
loop
xor
adc
xor
pop
pop
mov
ret
xor
inc
ss
fnstenv
cs
cmp
sub
or
jmp
add
sarb
test
add
dec
mov
pusha
insb
out
jo
fists
outsl
jmp
fs
mov
or
iret
or
jno
sub
test
call
dec
rcll
inc
adc
sub
mov
movsl
add
push
jge
lock
sbb
in
jmp
push
pop
pop
mov
xchg
lock
lahf
adcb
rcll
push
mov
cmp
pop
scas
repz
dec
daa
je
push
ret
add
lret
pop
jle
mov
wbinvd
and
pop
or
add
shl
rcl
call
pop
jl
rcl
jne
sbb
dec
pop
addl
movsl
inc
cmc
outsb
fisubl
pop
push
nop
pop
lods
roll
and
cwtl
repz
iret
push
dec
testb
push
ret
push
jns
out
sarl
shrb
mov
out
stos
in
cmp
daa
dec
cmp
add
mov
lret
pop
sub
fwait
inc
add
test
clc
int
mov
repnz
notb
inc
repnz
mov
mov
adc
push
push
jge
dec
pop
push
sarl
nop
dec
lea
shr
loop
fdivrp
add
jmp
lret
inc
lcall
nop
dec
lock
arpl
sbb
cmp
insb
xchg
leave
call
adc
std
pop
cmpsb
jbe
inc
xor
sub
sub
mov
push
in
push
jae
out
repnz
sbb
mov
pop
and
inc
cmpsb
adc
adc
std
imul
add
push
aam
repz
jle
push
cmp
push
adc
subb
sub
scas
sbb
out
or
in
mov
pop
push
mov
in
pop
addb
jnp
stos
bts
shll
pop
inc
cwtl
lahf
pop
cmpl
rcl
sub
jmp
lods
adc
lcall
movsl
sub
inc
lret
lahf
push
cld
mov
mov
movsb
inc
cmc
or
adc
pop
mov
bound
test
push
jns
pop
adc
lds
jecxz
or
or
iret
sub
mov
test
jmp
lds
ds
lock
aad
test
sbb
jne
mov
aas
push
xchg
xchg
out
mov
lock
pop
mov
inc
and
adc
push
jne
sahf
adc
insb
iret
sub
loope
clc
xor
fsubr
inc
push
imul
jle
sub
or
mov
or
or
int
push
cltd
add
jmp
pusha
fcomps
shll
mov
icebp
in
adc
adc
pop
xchg
punpckhbw
push
aam
xchg
mov
inc
lcall
stos
sahf
cmp
fmuls
mov
data16
popl
les
push
dec
ret
loop
add
jg
push
add
push
push
jmp
stos
push
inc
in
mov
mov
jmp
imul
or
insb
fsubrs
adc
pop
dec
scas
testb
lret
push
ret
daa
dec
addps
mov
adc
add
push
daa
pushf
mov
add
and
mov
xchg
push
jo
mov
lret
inc
mov
push
imul
bound
or
adc
push
xor
sub
jmp
mov
add
out
mov
aam
and
push
stos
sbb
xor
sub
hlt
pop
dec
and
inc
popa
add
cli
jle
je
pop
or
pop
pop
push
mov
test
pop
jmp
rcll
dec
sub
int
push
orb
xchg
cmp
dec
pop
add
jle
mov
jb
xchg
mov
mov
jg
popa
adc
movsl
jl
dec
testb
pop
lcall
dec
pop
int
add
mov
push
sbb
jbe
aad
mov
pusha
movsb
popa
aam
int3
gs
je
sub
jno
mov
push
mov
mov
jmp
push
hlt
lock
loope
xchg
repz
pushf
icebp
and
mov
adc
je
xchg
pop
inc
es
jmp
or
rcll
popf
push
call
or
jl
xor
push
ret
addr16
repnz
mov
pop
add
cli
xchg
popa
lcall
sub
push
lods
pop
rorl
movsb
fstps
xchg
jl
xchg
loope
pop
iret
pop
jg
imul
sub
add
dec
xchg
pop
not
cwtl
fldl
pop
and
shr
aam
int
inc
inc
xchg
add
pop
fisttpll
add
mov
mov
das
ds
sub
loope
mov
adc
daa
pop
pusha
fs
ucomiss
xchg
jl
xchg
in
shlb
add
mov
clc
lods
add
push
pop
sub
mov
push
shll
inc
cmpb
sbb
sbb
mov
jne
jmp
cmp
bnd
scas
loopne
in
adc
lock
orb
add
jmp
test
dec
repnz
das
imul
inc
leave
dec
dec
or
cmp
orl
jb
popa
jo
enter
inc
dec
push
jno
fcoml
shr
int3
push
add
mov
lds
andl
mov
and
neg
cmp
popf
pop
ljmp
push
lods
and
inc
add
push
or
adcb
jbe
or
push
jle
and
mov
jp
xor
mov
sub
loope
iret
add
mov
fcoms
mull
pop
daa
popa
adc
mov
push
xor
xor
sub
cli
lods
xchg
adc
push
inc
push
push
pop
pusha
add
std
lahf
rcl
xor
mov
sub
push
xor
fiadds
sar
pop
jne
pop
aaa
shll
mov
xchg
sub
push
push
push
clc
inc
loopne
je
jl
add
shll
stc
jnp
inc
inc
sbb
lock
mov
out
dec
sub
call
into
add
scas
and
and
pop
pop
inc
out
loop
daa
and
lcall
pop
shl
subl
outsb
js
fcomps
push
sarl
push
adc
je
add
cmpl
jbe
dec
or
mov
bound
sahf
ret
repz
add
lods
mov
aas
jmp
dec
mov
mov
push
inc
andl
cmp
repz
adc
add
testl
xor
cltd
jne
inc
orb
push
shrl
rcl
and
rclb
jmp
sub
dec
in
pop
movsl
jo
and
sbb
clc
pusha
sbb
jmp
popa
mov
mov
xor
lea
icebp
mov
fistl
daa
xchg
xor
push
hlt
jne
push
fstpt
sub
lds
mov
mov
clc
jmp
sahf
or
test
lods
xchg
pop
jb
negb
int
ljmp
jb
lret
xor
bound
jns
xchg
jecxz
mov
sub
mov
pop
dec
add
mov
int3
std
mov
shll
pop
fimuls
outsl
es
add
pop
imul
push
aam
inc
push
mov
ja
inc
fisttps
cmpsb
and
or
imul
fs
mov
add
inc
jge
mov
loop
push
fcomp
xchg
dec
mov
bswap
pop
movsl
sub
xor
sub
fs
lds
pop
outsl
and
cmp
enter
cmp
repz
push
sub
lods
sbb
test
mov
inc
addr16
inc
mov
out
adc
inc
fmulp
pop
add
fs
xlat
clc
lret
push
adc
push
sub
jge
jmp
sub
push
cmp
xchg
ds
adc
fdivrs
push
add
movsb
les
jmp
shlb
add
mov
jmp
dec
xchg
sbb
pushl
push
daa
inc
dec
or
jne
ljmp
mov
adc
cmp
add
and
rcr
mov
push
pop
aas
push
jmp
add
add
adc
repz
inc
and
pop
xchg
mov
push
inc
daa
jno
mov
cltd
in
ja
push
sub
jmp
fdivr
mov
mov
je
sbb
sbb
push
mov
aad
add
jmp
sub
jle
and
sub
or
neg
push
mov
cmp
jecxz
add
push
jne
mov
pop
gs
adc
push
mov
mov
pusha
and
sub
jnp
dec
pusha
rcrl
add
sub
or
cmpsb
data16
pop
or
out
pop
mov
xchg
mov
loopne
push
inc
push
jecxz
push
and
shr
inc
pusha
subl
mov
pop
test
dec
mov
movsl
or
popa
push
sub
jmp
in
pop
andl
xchg
jb
pop
add
mov
mov
sub
sub
inc
jmp
jo
sbbb
or
repnz
hlt
sbb
fstl
or
int3
sub
cld
scas
mov
popa
and
pop
das
mov
dec
or
sub
push
and
xorb
mov
push
add
sub
cvtdq2ps
scas
xchg
mov
js
sbb
push
mov
add
addb
push
ss
add
call
xor
popl
push
or
clc
ja
pop
add
fsts
adc
lret
jle
mov
lahf
out
dec
pop
iret
and
add
notb
or
mov
daa
add
dec
adc
loope
adc
sarl
sbb
or
ror
das
dec
cmp
jns
int3
add
pop
jmp
push
lea
cmp
mov
mov
dec
aam
sub
in
shlb
inc
jne
xchg
add
push
shl
inc
hlt
xchg
mov
jg
xor
push
push
sub
aad
xchg
sub
rcrl
test
mov
xchg
cmc
repnz
adc
push
fsubl
mov
testl
or
jne
jg
pop
jb
fiadds
ja
clflush
mov
int
fdivrl
add
fadds
or
and
pop
fmul
mov
xlat
push
fs
bound
pop
jb
ljmp
push
not
dec
das
ret
idivl
push
pop
or
sub
testl
aad
mov
add
push
mov
jmp
imul
xor
lcall
sahf
sub
push
or
xchg
das
nop
aam
mov
rcll
xor
or
clc
das
xchg
add
pop
pushf
add
sbb
not
jg
rcrb
ret
movsl
cwtl
xor
dec
push
jmp
jecxz
inc
sub
daa
aas
push
pop
xchg
push
mov
cwtl
or
adcb
pop
rcrb
sub
in
or
jne
xchg
push
jecxz
jmp
out
sub
sub
gs
mov
cmp
or
movl
push
push
push
adc
or
mov
rcrl
and
in
xorb
shr
negl
pop
push
in
out
daa
pusha
rcrw
ret
xor
sub
out
inc
cltd
arpl
mov
je
mov
popf
ja
jae
dec
jb
cwtl
lods
jg
cltd
push
add
jmp
add
dec
adc
push
pop
lahf
sub
or
mov
xchg
sbb
and
mov
adc
lahf
mov
sbb
sbb
push
test
dec
xchg
aas
aad
xchg
rolb
inc
add
sub
inc
popf
aad
xor
or
outsb
repz
or
jmp
lret
rorb
add
or
out
fisttps
jne
aas
push
push
jmp
dec
sub
or
xor
xchg
or
mov
mov
and
and
jbe
mov
hlt
dec
pop
cmp
dec
loopne
and
sbb
cmp
jp
mov
inc
push
movsb
imul
push
dec
insb
inc
clc
jb
mov
shrl
test
xchg
sub
ret
mov
shl
lds
pop
jmp
pushf
loop
test
popf
and
loope
rcl
clc
das
pop
cmpb
xlat
jae
jmp
out
les
pop
dec
mov
shl
fnsave
dec
jl
pop
pop
fldcw
mov
push
push
repnz
inc
inc
arpl
inc
xchg
push
inc
pop
pop
or
xor
lock
inc
cmp
adc
adc
cmp
and
shrb
stos
inc
clc
jno
stos
sub
stc
es
sbb
stos
push
push
leave
js
rcrl
mov
mov
xchg
rorb
in
mov
jo
xor
out
pop
jge
adc
pop
sahf
and
inc
cmp
push
cltd
sub
incb
sarb
dec
push
lahf
push
xchg
pop
repnz
fstpl
mov
jle
sarl
cmpps
jae
subl
add
outsb
in
mov
xchg
or
jmp
fcoms
jno
shlb
xor
push
cld
adc
movsb
inc
pop
rolb
mov
stos
out
xor
add
cmp
fwait
or
pop
add
aam
push
daa
pop
dec
js
and
push
out
xchg
xor
cs
push
mov
in
push
and
add
subb
cmpsl
mov
push
aaa
pop
cs
cmp
push
mov
roll
call
sbb
loop
xchg
repz
mov
xchg
imul
adc
inc
imul
xor
pop
ljmp
test
add
or
pop
xorb
xlat
jmp
mov
mov
mov
push
add
add
sub
divl
movsl
add
push
mov
test
in
or
jle
xor
inc
pushf
call
mov
mov
push
rorb
and
push
mov
sahf
sbbb
fs
xor
dec
insl
fdivrs
push
sub
test
cmp
fwait
mov
arpl
fisubrl
or
cld
lahf
pop
mov
add
cmp
adc
push
xor
jne
xchg
loop
repz
pop
out
add
push
push
pop
orl
xor
adc
aam
addb
js
xor
or
sub
fists
cli
sub
jg
and
or
push
adc
xor
pop
sbb
mov
test
pop
mov
daa
scas
xor
lds
mov
lcall
cmp
xorb
loope
pop
sub
rcr
push
loope
pop
push
pusha
inc
outsb
shlb
fcmovne
pop
pop
or
cmp
mov
sub
push
jb
push
push
and
aad
jl
lds
adc
xchg
iret
mov
decb
int3
mov
push
rcrb
sub
sub
and
sbb
popf
clc
sbb
or
push
out
xorb
and
cmp
mov
loopne
adcb
ret
scas
hlt
lds
pop
sbb
and
pusha
ret
or
inc
adc
mov
push
jge
push
push
sub
aam
in
inc
xchg
les
pop
popa
jmp
repz
dec
rcr
jmp
dec
cmp
sub
add
cmp
jmp
shr
not
cmp
add
add
ret
movsl
out
icebp
ret
jmp
scas
scas
cmp
shlb
sub
inc
stos
sbbl
repnz
pop
xor
or
mov
arpl
scas
cmpb
shll
add
punpckhbw
dec
and
mov
push
ret
jbe
pop
mov
xchg
xlat
and
dec
and
adc
aaa
pusha
jle
cmpsb
pop
dec
rorb
pop
jnp
pusha
dec
push
cs
mov
mov
fildl
xor
cld
imul
push
mov
pusha
mov
scas
nop
daa
xchg
mov
ljmp
leave
adc
cmpl
cmpsl
xchg
ret
mov
movsl
movsb
add
pop
jmp
int3
xor
adc
test
add
es
pop
and
and
mov
jmp
pop
cld
rcrb
xor
sub
sub
in
dec
pop
sar
test
mov
roll
neg
fcompl
push
jmp
xlat
punpckldq
ret
mov
dec
rorl
and
scas
jo
sbb
lds
push
push
adcb
test
add
adc
adc
imul
cmp
not
adc
incl
dec
sbb
or
fidivs
aas
movaps
mov
daa
fs
add
pop
orb
mov
popa
sub
call
fdivs
mov
rcrl
pop
inc
pop
test
dec
jge
adc
test
xor
into
mov
mov
sub
inc
mov
and
sarb
push
movzbl
xor
add
lahf
out
mov
int
sub
push
test
xchg
inc
data16
jne
ja
rclb
mov
out
adc
int3
xchg
jne
inc
adc
push
stos
test
or
adc
leave
stc
push
dec
jl
mov
pop
add
or
jg
je
std
imul
das
out
or
dec
inc
adc
mov
shl
in
outsb
xchg
xchg
lods
mul
push
add
notb
dec
jmp
mov
mov
xor
mov
push
mov
mov
push
cmp
fmull
mov
and
mov
cmp
decb
or
pop
jno
shlb
fisubrl
cmc
push
sub
xchg
cmp
loop
or
addr16
testb
stos
nop
push
movsb
and
add
mov
movsl
or
fists
dec
popa
adc
jb
sti
cltd
repz
pop
mov
sub
hlt
mov
xchg
stc
push
add
mov
jle
lods
incb
cli
in
cmpsb
dec
jecxz
jg
inc
and
inc
push
in
jmp
or
ret
fcomip
cmc
or
out
add
int3
add
int
jmp
loope
xchg
rcrb
adc
sub
call
cmpl
mov
jmp
pop
and
in
fs
mov
jae
pop
in
inc
dec
rcrb
or
out
sbb
addr16
pop
and
push
stos
ja
bt
xor
dec
push
inc
push
outsl
push
or
mov
fiadds
lret
icebp
loop
pop
shll
scas
sbb
mov
rolb
cmp
mov
clc
in
arpl
int
mov
fcomps
or
clc
push
pop
and
pop
int3
ret
dec
pop
mov
dec
inc
test
cwtl
add
jle
adc
pop
jmp
sti
dec
or
pushw
out
fwait
lret
cmp
mov
xor
or
enter
aas
add
fcomps
fdivrl
cmp
dec
cmpsl
or
mov
jmp
out
lods
popf
adc
lcall
and
pusha
xor
push
push
repz
rcrl
fcmovne
lret
add
cs
cmp
xlat
or
mov
repz
mov
pop
enter
dec
sbb
sub
insb
pusha
jne
stos
or
ret
test
subps
addr16
add
jp
cmc
lds
mov
fimull
add
sub
repz
aam
adc
jecxz
sbb
shr
mov
dec
or
and
dec
xor
jg
sbb
gs
xchg
lock
pop
add
aad
into
dec
jnp
push
rorb
jl
dec
cmp
mov
pop
sbb
pop
cmp
popf
ljmp
mov
add
or
or
push
push
adc
ljmp
cmp
insl
xchg
in
shl
add
lcall
pop
cmp
loop
inc
dec
inc
adc
pop
fisubl
pop
add
xchg
cmp
and
jmp
dec
icebp
je
mov
pop
sub
pop
sub
hlt
cmc
push
jne
add
mov
jno
push
aam
cltd
les
iret
mov
xorb
and
les
icebp
add
outsl
sub
jg
arpl
jne
push
popa
push
and
jmp
sbbb
lret
es
js
add
mov
sub
hlt
repnz
lcall
or
hlt
scas
jg
or
rorl
addb
call
and
int
cmc
movsb
jmp
fs
adcb
xor
pop
pop
mov
stos
aas
add
dec
repz
add
and
mov
push
pop
fmuls
push
dec
cmpsl
lds
mov
jle
test
and
add
pop
or
nop
jo
xchg
int3
cmp
inc
cmpsb
jl
jae
iret
pop
daa
in
es
pop
mov
jmp
mov
add
aas
adc
cmpsb
fs
int
cs
testl
push
lea
push
aad
sbb
dec
sub
daa
imul
pop
xchg
push
pop
imul
jge
push
cwtl
xchg
pop
leave
dec
jnp
sbb
add
mov
es
insb
lret
and
cs
sub
xchg
add
add
lret
pop
sub
clc
push
cmp
or
or
mov
xchg
adc
push
jmp
sub
sub
adcb
pop
pop
addb
bound
ds
mov
pop
jge
aam
and
mov
mov
xchg
aad
out
jbe
dec
in
jge
shl
bound
mov
add
add
inc
std
push
pusha
mov
add
add
sbb
pop
pop
in
mov
push
push
add
dec
rcll
mov
js
lahf
in
roll
mov
pusha
lret
adc
jmp
in
jecxz
hlt
jmp
repz
add
cmc
push
add
pop
ret
and
ret
lds
cmpsl
pop
dec
sbb
movb
and
add
ljmp
inc
stos
jmp
pop
pop
in
leave
dec
enter
test
mov
rcr
push
adc
and
jae
inc
outsl
dec
fisttpll
dec
mov
inc
testl
jmp
sub
and
pop
push
push
add
mov
sub
lds
call
jo
mov
jnp
or
xchg
and
mov
xor
lock
out
push
pop
data16
repz
mov
pop
inc
aad
clc
pop
mov
cmp
inc
push
jnp
in
pop
inc
dec
enter
bound
push
test
jl
or
cmp
pop
lods
adc
repnz
aam
xor
xor
lar
aad
jmp
inc
pop
stc
cmp
xchg
add
cmp
add
out
add
outsb
adc
icebp
in
mov
in
adc
test
stc
push
xchg
pop
push
leave
aam
fists
insl
ret
test
push
mov
cmp
in
lahf
dec
mov
es
stos
add
xor
cltd
push
fildl
sahf
sub
cmpsb
in
add
mov
mov
subl
add
or
push
pop
pop
cld
out
out
mov
mov
pop
fidivrs
pop
imul
dec
lret
mov
adc
pusha
in
lahf
inc
fwait
ja,pt
ret
pusha
out
adc
jnp
cmp
lods
xchg
aaa
sti
xor
push
pop
pop
pop
jmp
mov
add
int3
push
xor
movsl
mov
je
jae
pop
mov
and
std
lods
cmp
push
clc
cwtl
xchg
and
pop
jbe
arpl
add
mov
push
repnz
aam
outsb
or
stc
fucomp
or
pop
xor
or
outsb
dec
out
loop
jge
mov
add
insl
fsubl
jmp
adc
rcrb
pop
add
mov
adcl
mov
not
jl
mov
push
daa
sub
cli
test
xchg
cmpl
movsl
xchg
in
push
std
ljmp
js
out
data16
mov
stc
repz
mov
jb
wbinvd
jne
aas
mov
push
cmp
sub
sub
jmp
popa
in
push
fadds
data16
aad
and
shr
mov
mulb
pop
jg
hlt
out
cltd
fwait
scas
sub
jg
es
repz
out
lock
test
dec
fs
popa
sar
int
int3
add
dec
dec
rcr
test
rclb
inc
stos
jns
cmpsl
mov
rcrb
dec
or
mov
add
jne
inc
inc
cld
inc
cs
mov
ds
and
daa
add
bound
in
mov
aas
adc
cmp
mov
subl
dec
adc
std
jo
jge
loop
push
jns
outsb
pop
mov
lahf
rorb
pop
mov
pop
mov
test
jl
mov
mov
fs
cld
mov
push
lock
add
cmpsl
call
lret
das
inc
jge,pt
mov
pop
sbb
add
add
cwtl
dec
add
lcall
push
inc
into
rol
pop
push
push
lods
sbb
mov
loopne
xchg
push
pop
inc
push
sub
data16
loopne
add
in
sub
shl
add
adc
sub
sub
fsubr
or
loop
jmp
and
or
loop
shlb
mov
aam
shl
or
xor
inc
test
fldl
jmp
in
jmp
fidivrs
loop
ja
push
push
imul
inc
dec
testl
and
sub
add
popa
xor
adcb
adc
test
cmp
inc
loop
xchg
mov
mov
mov
lods
lahf
ret
lret
xchg
xchg
jnp
mov
shlb
lcall
pop
xor
pop
jne
mov
jne
or
fwait
test
loop
roll
jns
js
push
and
xchg
cmp
jo
fsubr
mov
push
mov
inc
shl
shll
add
daa
or
mov
rol
jg
in
push
iret
adc
test
arpl
cld
sub
int
cmpsl
pop
out
jmp
adc
mov
mov
xor
test
dec
mov
stos
push
adcb
sub
in
mov
xchg
sub
int3
cs
addb
dec
das
in
sbb
fsubp
jmp
xchg
inc
add
cwtl
ret
lret
pop
push
lahf
in
or
jmp
xchg
jge
imul
and
push
inc
jnp
cmp
add
std
mov
dec
lods
cmp
push
test
sar
arpl
mov
pop
aas
lds
sub
xlat
fs
outsl
inc
lods
jle
push
push
push
mov
or
ret
jecxz
adc
popf
in
clc
lret
push
mov
inc
std
push
pop
incb
test
jno
or
cmp
xor
ljmp
std
shrb
jmp
sub
mov
push
outsl
pusha
mov
dec
xor
sbbb
test
jmp
and
dec
test
stos
int
in
lods
les
adcb
jmp
not
mov
test
test
shl
insl
lea
adc
divb
sbb
inc
mov
sub
leave
sub
dec
mov
xchg
jb
push
xchg
ja
cmc
add
js
mov
cmp
push
inc
pop
and
enter
es
inc
lds
pop
sub
pop
sbb
or
and
fisttps
adc
mov
sbb
je
pop
subl
testb
inc
cmp
or
ret
and
jmp
in
js
shll
jge
xchg
ret
push
sbb
popf
ficoml
cmc
sub
jmp
pop
outsl
inc
push
mov
jmp
sub
cwtl
mov
inc
lea
icebp
push
and
ror
cmpsl
cmpsb
sbb
cmp
push
push
pop
out
test
dec
daa
mov
das
push
jl
aaa
sub
or
pop
mov
push
das
jb
icebp
sbb
push
sbb
push
fs
fstpt
in
sarb
test
mov
bound
mov
sub
int
mov
mov
repz
in
xor
repz
add
daa
mov
pop
outsb
mov
adc
inc
add
push
mov
sbb
leave
enter
push
sub
shlb
mov
call
fsts
lds
dec
push
rcrb
loope
cmp
psubq
add
dec
nop
sbb
jo
leave
js
nop
adc
adc
push
fists
adc
or
pop
xchg
xor
sbb
pop
pushf
jmp
mov
adc
mov
jmp
jp
mov
pop
mov
inc
sub
enter
sti
ljmp
inc
scas
or
xor
outsb
aas
mov
int
insl
sub
mov
sub
int
popf
push
das
les
adc
xchg
sub
mov
pop
jmp
daa
xorb
in
andb
daa
sub
cmpsb
dec
sbb
or
out
mov
jle
shrl
cmp
adc
lret
int3
popf
test
jno
add
xor
push
pop
mov
add
rcll
push
mov
rcrb
cltd
add
add
or
inc
pop
inc
cmp
mov
in
ret
pop
mov
lea
stos
pop
lret
mov
add
jmp
xor
sti
dec
add
div
xor
adc
fnstsw
jnp
gs
sub
push
fcoml
add
or
aas
sbb
shl
call
into
in
mov
pop
mov
jmp
and
pop
sub
inc
add
sbb
js
xchg
cmp
dec
je
and
jmp
cmpb
xchg
add
outsl
xor
inc
test
pop
stc
outsl
mov
mov
pusha
xor
dec
test
movsb
popf
sub
mov
and
iret
and
cmp
pop
cli
ret
push
inc
inc
pop
adc
push
mov
push
aaa
jmp
or
xor
cld
call
cmp
test
mov
pop
repnz
test
xchg
or
pop
or
xor
jns
sub
out
popa
jg
adc
stc
adc
imul
mov
sbb
mov
push
lret
loopne
sub
xor
or
imul
in
mov
push
dec
xchg
test
fsubs
movsb
or
add
jnp
and
cwtl
sets
jae
movsb
add
je
mov
ret
push
push
out
mov
pop
push
add
sarb
movsb
dec
add
fisubrs
sub
dec
test
sub
or
clc
scas
dec
mov
in
dec
or
xor
pop
les
push
or
out
pop
push
push
xlat
and
cmpsl
lcall
jne
push
mov
fnstenv
adcb
cmp
aam
icebp
bound
stos
adc
inc
nop
sub
scas
and
xchg
mov
mov
out
adc
sub
orb
pop
mov
dec
mov
push
or
dec
int3
sub
int
push
push
cmp
inc
test
mov
push
mov
or
add
push
mov
add
mov
jecxz
pop
in
dec
rcrl
sbb
sbb
into
cmc
das
xlat
add
sub
dec
dec
std
mov
xchg
imul
shlb
shrb
mov
sub
pop
out
push
fisttps
inc
or
jge
dec
mov
push
ja
mov
mov
leave
dec
or
xorb
fcmove
pop
or
dec
into
add
mov
popf
mov
push
cmp
xor
sbb
cwtl
sub
outsb
loope
adcb
outsl
or
xor
and
add
sti
mov
addr16
add
cwtl
stc
push
adc
arpl
cmpl
lock
jmp
sbb
lods
fwait
ror
and
call
lods
lock
mov
decb
cmpb
add
icebp
cmpsl
ds
mov
test
mov
dec
cli
push
mov
push
jmp
shll
adc
repnz
fdivr
add
dec
push
test
mov
jg
cmpsl
bound
or
sbb
dec
in
inc
aaa
pop
pop
test
in
mov
fisttpl
xor
and
test
jle
jecxz
adc
mov
sahf
jnp
fs
push
push
cltd
cmc
and
sbbl
jle
add
daa
lds
dec
push
push
popf
cmpb
and
stos
dec
xchg
jne
push
aad
xchg
jmp
movsb
cmp
cltd
dec
test
and
bound
pop
shl
xor
and
sub
hlt
mov
adc
rolb
mov
fsubrl
bound
mov
push
sbb
ret
je
scas
int3
lds
not
mov
shl
sub
lret
stos
mov
ret
dec
sbb
call
aas
mov
es
shr
pop
pop
push
cmp
xor
push
es
mov
in
and
movl
push
inc
data16
push
adc
and
sub
add
mov
xor
fcomps
or
jb
sbb
add
shr
add
mov
cmp
sbb
mov
popa
loop
mov
or
nop
fs
inc
mov
add
fldcw
pop
pop
int
add
sub
jae
xchg
jno
out
sub
pop
fisttps
stos
gs
mov
pop
pop
sub
mov
mov
stc
mov
es
or
xor
sahf
sbb
push
mov
dec
and
iret
push
push
or
test
or
add
sbb
outsb
aad
ljmp
adc
push
out
popl
faddp
sbb
pop
push
xchg
sarb
cld
sbb
push
pop
jae
xchg
lds
out
mov
sub
push
ret
bound
dec
neg
inc
dec
and
addl
rorb
sub
nop
add
aam
push
adc
pop
sub
inc
mov
or
orb
cs
cmc
add
rorl
mov
jp
pop
pop
pop
inc
out
push
fidivrl
pop
sbb
inc
and
mov
and
pshufw
fiaddl
add
xor
out
je
cs
adc
test
jbe
mov
lcall
and
out
aas
mov
lods
ret
add
outsb
in
inc
mov
jmp
popa
testb
inc
hlt
rsqrtps
cwtl
in
xor
pop
add
dec
add
movsl
subb
pop
inc
and
rcrl
pop
cmp
and
sub
xchg
rclb
jne
pop
pusha
shrb
jmp
or
xor
xchg
je
or
movsl
ss
in
sbb
pop
jnp
aaa
and
pop
jmp
add
pushf
and
adc
or
sarl
jp
mov
pop
loop
test
pushf
cmp
push
insl
not
push
add
lods
aad
adcb
adcl
mov
pop
pushw
cmc
es
out
sub
and
cmp
mov
repnz
or
mov
jle
aam
orb
out
addb
out
cwtl
mov
mov
jg
jmp
enter
adc
pop
out
pop
jb
popf
add
test
sub
push
jl
push
add
test
xchg
lds
pop
jle
add
out
cld
cmpsb
repnz
and
leave
adc
in
lods
es
cmp
out
push
outsb
dec
test
les
cmp
lea
ds
xchg
cld
mov
sub
movsl
test
push
loopne
inc
add
pop
push
add
and
shll
mov
hlt
mov
and
inc
or
adc
sarb
adc
jmp
pop
leave
xor
sub
sub
sub
jne
iret
dec
pop
subl
idivb
add
sub
lock
or
das
adc
addr16
insb
jnp
subb
or
out
sub
add
sub
pushw
fsub
or
js
xchg
popf
in
out
push
sbb
mov
mov
push
rorb
lock
pop
fcmove
push
inc
mov
push
cmpsl
aas
xchg
lock
mov
inc
pop
sub
pop
jmp
sbb
clc
jae
and
imull
add
fs
shlb
sbb
inc
cwtl
jmp
scas
dec
ljmp
movsl
pushf
pop
add
negb
outsl
sbb
mov
jnp
subl
das
inc
adc
sub
outsb
gs
mov
dec
pop
jmp
std
shl
mov
push
xor
jmp
jp
out
insb
lahf
out
xchg
cmpl
or
ss
popf
std
in
loopne
lret
pop
ret
jge
mov
repz
xchg
cmp
cmp
mov
xchg
es
mov
and
lods
push
xor
inc
outsl
pop
push
and
push
jbe
rcrl
popa
stc
push
jecxz
mov
pop
in
mov
shlb
pop
in
ja
lods
or
mov
cwtl
jmp
js
out
add
jmp
fwait
lea
addl
push
or
adc
mov
fsubp
pop
mov
sarb
cld
jne
jae
jg
and
or
push
mov
sub
mov
repz
or
add
mov
sub
sub
jne
jmp
add
add
mov
pop
xchg
or
adc
sbb
pop
sbbl
outsb
inc
mov
sbb
negl
dec
mov
sbb
dec
daa
inc
xchg
dec
add
in
bound
sahf
jnp
push
sub
cs
push
sub
call
pop
adc
mov
movsb
outsl
rol
jmp
push
mov
jmp
incb
mov
dec
cld
shll
iret
xor
cmp
and
jmp
adc
shl
sub
adc
push
xchg
push
push
bound
xchg
fmuls
inc
aas
movsl
mov
movsb
push
outsl
sbb
adc
jmp
in
mov
notb
iret
mov
xor
mov
imul
cmpb
sub
in
imul
add
rcr
pusha
jae
adc
and
call
shlb
jp
xor
pop
inc
sbb
jmp
popl
push
loope
jp
xchg
outsb
adc
or
sub
add
mov
push
test
pop
call
aas
ret
push
or
mov
cmp
or
cmp
and
dec
ficompl
addr16
push
mov
mov
sub
mov
adc
mov
ret
dec
andl
sbb
inc
or
pop
xchg
pop
or
jmp
or
or
sub
nop
xchg
add
ja
shl
jp
and
mov
and
adc
stos
jne
dec
jp
xchg
cmp
sub
or
inc
cs
xlat
cmp
loope
mov
push
mov
push
ljmp
pushf
adc
pushl
mov
mov
jo
add
adc
pop
mov
adc
add
push
mov
dec
add
psubusw
mov
xlat
cmc
jne
xchg
ficompl
lds
pop
push
mov
in
pusha
add
loop,pt
jo
sbb
inc
jmp
in
jge
les
adc
add
subl
call
sbb
xorl
js
pop
je
cwtl
les
push
rorb
mov
xchg
das
daa
mov
mov
mov
mov
dec
xchg
dec
dec
inc
push
pop
pop
push
jo
stc
ret
lret
fs
jbe
fs
aaa
imul
cmp
sbb
pop
and
pop
into
inc
mov
jbe
lock
and
imul
inc
sub
lods
rol
lods
ret
sub
lock
clc
add
into
orb
and
aad
push
sub
mov
out
or
sub
push
inc
mov
mov
test
lret
dec
mov
add
add
out
popa
jne
jo
add
fs
nop
out
dec
pop
rcll
add
inc
push
inc
and
jb
lock
cmc
mov
test
mov
cwtl
hlt
or
inc
add
cmc
mov
inc
enter
stos
add
sbb
into
mov
nop
mov
icebp
jmp
daa
jp
push
pop
mov
pop
push
mov
in
ret
hlt
int3
mov
jl
or
clc
dec
test
or
push
out
cmp
movsl
lret
or
cmpsb
pusha
jns
mov
push
cmp
pop
dec
les
movsl
pop
jmp
jg
inc
pop
movb
inc
idivb
push
sub
sub
lret
jge
pusha
inc
jp
outsl
cmp
bound
xlat
andb
cmpsl
or
inc
and
inc
jge
hlt
daa
sbb
ret
add
mov
add
pop
push
testb
test
imul
push
movsbl
enter
mov
and
add
idivl
or
jge
cmc
sub
rcrl
lods
jge
or
pop
mov
push
jle
lds
adc
stos
xor
dec
add
dec
cmpsl
push
jg
lds
jl
add
sub
pop
dec
ds
daa
mov
or
arpl
testl
add
in
push
xor
push
aad
in
pop
adc
dec
xor
call
adc
fcoms
jle
out
add
push
push
callw
orl
jg
out
lods
jae
jne
jae
mov
add
push
jb
aaa
push
push
iret
jmp
clc
cmpb
test
movsl
push
adc
sub
push
mov
inc
cmp
sahf
push
adc
cmp
leave
fnstsw
jb
std
mov
les
pop
add
push
mov
add
xor
scas
clc
mov
sbb
ret
popl
and
movsl
cmp
lods
add
sbb
fistps
push
imul
cwtl
cmp
mov
dec
test
xchg
dec
sarb
mov
test
push
mov
or
or
repnz
je
xchg
cmp
lahf
rolb
inc
xorl
stc
idivb
std
sarl
imul
add
mov
xorb
dec
and
mov
fisttpl
lahf
inc
inc
sub
xlat
push
ljmp
neg
or
sbb
push
cltd
rcll
cmp
inc
add
subb
push
shl
sub
mov
pop
pop
and
sub
xchg
test
lcall
mov
xchg
hlt
push
or
das
mov
dec
pop
push
push
add
push
int3
lock
mov
jb
adc
cmp
jecxz
or
ret
mov
mov
jmp
out
dec
pop
add
inc
jp
inc
cltd
push
or
sub
sub
adc
or
sub
cld
pusha
mov
jg
stc
push
rol
push
or
push
daa
mov
jp
hlt
sarl
jmp
pop
rol
sub
cld
out
jmp
out
imulb
jbe
in
lock
mov
leave
adc
lods
mov
jnp
ret
add
mov
add
lret
add
in
cmc
xor
and
ljmp
shrl
and
cmp
in
pop
sbb
inc
jno
xchg
and
cmp
bound
jg
mov
fidivrl
test
hlt
mov
sbb
push
es
jns
push
nop
jbe
pop
and
in
test
bound
in
mov
aad
das
inc
jle
cwtl
mov
sub
jmp
in
pop
fwait
xchg
push
add
lea
push
cld
inc
sbb
fildl
pop
xor
pop
dec
jmp
pop
cmp
clc
lods
mov
adc
pop
ds
jmp
pop
sbb
dec
div
add
rcl
xor
pop
dec
pop
inc
dec
push
ss
sub
dec
mov
xor
push
jmp
mov
mov
sbbb
stos
sub
mov
and
test
jbe
mov
add
call
mov
shrl
push
inc
popf
out
aas
sub
mov
adc
add
xchg
mov
sub
adc
out
sbb
add
repnz
jp
add
test
sub
bound
shrl
xor
push
inc
sub
outsl
sbb
push
scas
sbb
xchg
shll
in
leave
xor
xchg
stos
dec
cmpsb
and
bound
push
fimull
cmpsl
test
mov
les
lods
stc
arpl
push
adc
mov
fildl
inc
mov
movsb
jmp
or
jns
and
adc
lock
sub
push
xor
pusha
push
test
cmp
dec
test
mov
sarb
xchg
jnp
loopne
neg
inc
stos
xor
outsb
push
push
ss
push
or
jmp
xor
cmpsl
outsl
sub
jmp
xor
stos
insl
jp
inc
jle
jp
negb
lock
jp
adcl
je
das
sahf
jne
aad
xchg
aam
push
inc
clc
sub
add
mov
inc
xchg
inc
push
test
dec
or
stc
dec
sbb
loopne
inc
add
mov
cmpl
rol
in
pop
cwtl
or
cmc
lret
cmp
je
sbb
pop
loop
clc
loopne
dec
cwtl
or
cmp
pop
xchg
int
in
add
pop
add
mov
cmp
fs
aas
bnd
sub
mov
pop
sub
iret
push
jg
jmp
inc
mov
dec
lods
cmp
sbb
pop
jnp
mov
in
adc
outsl
mov
call
scas
lods
add
mov
testb
fstpl
adc
out
test
add
pop
inc
jmp
or
std
lldt
sbb
cmpsl
fadds
add
add
inc
daa
data16
inc
in
not
push
push
mov
add
cltd
fs
and
lds
std
add
scas
add
jmp
sub
add
xor
lods
add
add
push
mov
or
fcompl
daa
inc
push
aas
es
in
mov
inc
push
cmp
inc
orb
or
and
decb
out
mov
sbb
neg
pop
dec
xchg
sbb
sbb
popf
fisubs
adc
add
loopne
or
mov
pop
stos
cmovl
nop
lret
dec
push
js
js
stc
test
sbb
std
stos
adcb
sub
or
xor
nop
fiadds
jmp
scas
jae
inc
add
call
xchg
and
adc
jg
cmp
rclb
pop
push
sbb
inc
lods
rcll
call
lahf
dec
jne
in
jno
pop
mov
or
cs
xor
lea
fldcw
adc
xchg
out
or
push
and
out
inc
cmp
pop
push
scas
or
adc
and
fiaddl
sub
or
dec
or
rcrl
mov
icebp
jg
add
jmp
lock
loop
add
cmc
add
cmp
xchg
rcr
jb
mov
enter
clc
pop
cmp
out
dec
mov
adc
stc
and
imul
and
xor
dec
mul
mov
lock
xor
add
mov
adc
mov
ret
xor
fldenv
or
jl
push
repnz
or
adc
xchg
stc
add
xor
call
in
ss
and
push
jl
sbb
push
push
add
pusha
push
pop
arpl
or
imul
sub
and
adc
pop
mov
leave
enter
subb
adc
sub
push
pop
push
nop
and
sahf
test
nop
xchg
mov
pop
out
pop
jmp
adc
shl
push
mov
sub
in
dec
xchg
inc
sub
pop
add
sub
add
mov
lods
sbb
test
jbe
in
mov
cld
mov
lcall
sti
loopne
pop
cwtl
ja
daa
insl
shlb
stos
hlt
les
push
or
les
int3
pop
xchg
lds
xchg
adc
add
cmpsb
inc
movb
popl
gs
popa
pop
outsl
xchg
or
cmp
addl
pop
ret
push
outsb
test
jge
mov
dec
cmp
sub
sub
or
pop
mov
out
subl
mov
dec
in
cmpsb
xchg
mov
arpl
mov
jns
push
test
fistl
mov
xchg
shlb
inc
and
sub
lea
int
mov
je
add
js
stc
fsts
scas
mov
sbb
jne
dec
cwtl
rorl
mov
sbb
and
jmp
or
dec
outsl
mov
hlt
dec
jmp
sbb
sub
pop
shr
mov
sbb
ret
or
adc
dec
pop
pop
xor
push
nop
sub
sbb
iret
das
jbe
icebp
notl
mov
ror
jns
sub
ret
push
fucomi
loope
in
movsb
mov
daa
mov
icebp
mov
jg
sbb
pop
mov
into
mov
daa
push
dec
fimuls
addl
stos
adc
pop
or
cmc
enter
or
fs
rcpps
stos
lret
sti
cli
mov
pop
mov
pop
iret
push
push
push
jmp
repz
cmp
shlb
cmp
sub
jecxz
das
call
push
test
in
pusha
pop
sub
mov
dec
rolb
and
adc
and
sbb
daa
inc
push
loope
pop
sub
xlat
scas
push
fs
test
jmp
push
mov
loop
cmp
mov
push
test
movsb
adc
je
das
push
pop
in
mov
adc
pop
adc
pmaxub
scas
aad
out
cmpl
xor
mov
jb
addl
adc
imul
and
scas
sub
in
push
xchg
add
xor
pop
mov
xchg
pop
adc
xor
pop
dec
jne
cmp
loop
add
xorl
jmp
xchg
dec
and
stos
gs
push
xchg
dec
bound
clc
push
ds
mov
xor
mov
inc
jmp
push
adcb
or
mov
jp
jns
fwait
mov
loope
mov
fstl
loop
in
and
and
ja
pop
jp
and
or
add
xor
and
pop
sbb
adcl
rorb
jp
jmp
push
or
inc
xor
loope
xor
xor
jge
lds
and
cwtl
ret
out
pop
inc
arpl
into
and
outsl
adcb
inc
fsts
xchg
fdivrl
add
or
push
dec
adc
lret
sub
and
int
mov
jbe
fstps
mov
sub
push
mov
mull
data16
jmp
enter
push
and
shll
sbb
es
dec
sbb
or
pop
mov
stos
lret
add
loop
xchg
mov
or
or
pushf
or
pop
inc
call
fsubl
rorb
cmp
push
add
cmp
pop
js
add
lret
icebp
push
stc
sbb
scas
jmp
adc
popf
aas
hlt
add
imul
jle
mov
das
sub
data16
repz
sub
cmp
neg
xchg
lock
in
mov
xor
inc
or
or
popf
loop
ret
pop
ljmp
ret
insb
add
inc
xor
jmp
sub
test
xchg
cli
test
jo
pusha
push
mov
xor
aaa
push
mov
lds
ds
test
cmp
sbb
sbb
xor
xchg
push
xor
ljmp
pop
mov
adc
pop
mov
jne
and
or
das
mov
pop
shll
adc
cs
out
shrb
pop
scas
and
xchg
sbb
insb
pop
out
pop
test
xchg
adc
mov
les
push
mov
mov
xor
iret
into
mov
dec
mov
jmp
push
out
mov
jp
push
call
movsl
testl
pop
rorb
dec
ret
neg
sbb
out
inc
ds
pop
stos
mov
sarb
pop
inc
and
mov
push
or
jbe
out
jecxz
lods
mov
push
mov
test
push
push
lds
mov
jb
mov
mov
ret
fdivrs
js
dec
add
mov
mov
hlt
pop
or
aam
push
pop
shll
xchg
push
scas
xor
sbb
add
cmpsl
and
lahf
xchg
xor
push
loop
push
pop
jle
xor
bound
jno
leave
pusha
mov
shl
add
mov
stc
sbb
jmp
pop
call
in
sbb
sti
stos
movsb
out
popf
insl
jg
fucomi
cmp
sti
push
cmp
mov
xchg
mov
fisubrs
xchg
lods
enter
test
icebp
adc
adc
mov
shr
pushf
movsl
mov
cmpxchg
dec
iret
imul
mov
and
enter
inc
clc
push
loope
repnz
pop
orb
pop
pop
pop
pop
lock
adc
fldenv
and
cmc
add
inc
pusha
push
add
test
lahf
inc
adc
push
add
add
jo
popf
gs
or
or
pop
mov
dec
pop
out
jo
rcrb
andb
cmp
mov
stos
mov
out
nop
mov
icebp
jo
dec
into
shlb
neg
nop
ret
dec
and
js
or
adc
imull
add
mov
sub
add
dec
mov
dec
pusha
mov
sbb
mov
adc
or
popf
or
adc
dec
or
pop
int3
push
hlt
or
inc
arpl
js
sub
or
sub
inc
xchg
shrl
or
aas
sbb
adc
insl
inc
sbb
xchg
les
cli
sub
sub
test
mov
sub
subb
push
ret
add
clc
pop
sub
pop
xor
push
cmpsb
mov
sbb
in
mov
dec
sti
jge
ficomps
aad
jno
mov
adcl
fnstsw
add
mov
push
clc
leave
dec
test
loopne
push
add
cmp
adc
cld
fstps
mov
iret
add
add
and
and
xor
cmc
les
lret
ljmp
dec
es
or
test
xor
lock
add
mov
push
bound
into
xchg
xchg
inc
shl
cmpsb
das
lcall
mov
pusha
push
or
std
lods
test
cltd
add
in
push
and
push
cwtl
jp
mov
push
add
packssdw
sbb
sub
mov
push
in
jecxz
cmp
mov
dec
mov
mov
pop
int
pop
jmp
leave
dec
pop
mov
test
dec
sub
push
push
jmp
or
adc
dec
cli
jns
xchg
inc
push
push
pop
mov
cwtl
inc
out
int3
sub
stos
and
popf
cmp
js
cld
loop
mov
fstpl
push
add
push
popf
adc
jmp
and
adc
pop
loope
and
jbe
clc
in
and
addr16
scas
cmp
inc
dec
push
lods
adc
cmp
push
mov
sbb
popf
clc
jmp
and
dec
daa
dec
or
or
imul
lret
and
cmc
jge
stc
mov
mov
mov
mov
adc
sub
lock
mov
popa
shll
and
mov
and
aas
add
add
mov
daa
popa
enter
push
cmp
sub
jmp
imul
push
jl
and
test
xor
push
pop
cltd
adc
call
popf
dec
or
das
inc
dec
jmp
scas
fdivl
int3
sbb
sub
shr
adc
das
mov
dec
imul
pop
xchg
test
sub
pop
xchg
push
mov
add
and
xchg
decl
addb
pop
out
xchg
inc
push
cmp
xor
into
or
jbe
mov
push
xchg
add
push
push
loope
pusha
pop
shll
dec
adc
ret
je
push
sbb
imul
negb
shll
xor
and
xchg
mov
aad
pop
shlb
dec
mov
jno
shll
insb
mov
in
mov
adc
loopne
addl
push
mov
and
jb
jmp
mov
xchg
jo
push
mov
and
xor
mov
std
pop
inc
add
add
sub
stos
pusha
mov
dec
test
test
jae
push
mov
push
and
xchg
nop
mov
movsl
sub
cld
xor
jnp
add
dec
add
aas
out
push
mov
mov
lods
mov
xor
push
and
mov
fiadds
pop
mov
push
inc
or
or
repnz
les
stos
enter
dec
mov
and
jns
push
jb
fidivrs
mov
cmc
sbb
and
fld
subb
mov
notl
int
testb
jmp
jnp
jg
stos
les
and
fwait
mov
movsl
sbb
call
das
sub
or
gs
mov
shl
cmc
test
and
mov
out
fiaddl
push
rcl
ret
add
jmp
fstpl
dec
ret
xchg
push
add
repz
lea
sub
or
add
pop
aas
or
cmp
clc
andb
add
sbb
jecxz
pop
in
mov
maxps
add
shl
stc
push
mov
lahf
xor
inc
in
fwait
sbb
jne
xor
sub
mov
negl
mov
out
jmp
imul
pop
mov
add
sub
iret
jmp
push
out
seto
pop
ljmp
mov
pop
imul
inc
push
adc
das
xchg
push
xor
sbb
out
add
mov
fs
add
ret
les
pop
cs
test
push
pop
dec
fwait
rcl
out
cld
add
mov
jmp
lret
pop
push
add
xor
minps
or
stos
ja
lcall
mov
jns
push
rcll
lcall
add
dec
pop
loop
xchg
lcall
mov
movb
xchg
loop
pop
jns
mov
lods
push
or
and
lods
adc
add
mov
and
bnd
cli
pop
mov
bound
fsub
pop
icebp
sarl
mov
fistl
push
ror
frstor
sub
pusha
cmp
jne
ja
lret
aaa
push
cs
daa
and
pop
fdivrs
jecxz
inc
repz
mov
push
or
and
add
mov
rorl
sarl
mov
or
lock
or
xor
test
jge
xor
es
cmpsl
add
out
mov
stc
lahf
imul
shrb
lahf
inc
xor
icebp
ljmp
loope
fisubs
jg
add
mov
pop
xlat
push
push
mov
add
fcomps
shll
xor
sbb
xchg
jnp
lods
imul
pop
mov
ljmp
sub
pop
pop
xor
adcb
sbb
or
cmp
or
mov
add
xor
int
lcall
cmp
mov
add
fisubl
xchg
jns
fdiv
and
imul
sbb
sbb
dec
xor
xchg
or
stc
in
sub
imul
sbb
shll
fnstenv
dec
dec
out
fwait
pusha
addr16
cmp
dec
test
pop
sbb
xchg
mov
cmp
xlat
lods
shll
jbe
shlb
jmp
or
shlb
in
jecxz
pop
sub
loopne
stc
call
dec
push
rcrl
add
sub
fnstcw
dec
data16
lods
or
jl
cs
aam
pop
pop
dec
jmp
out
fs
inc
lret
pop
std
jmp
sti
add
imul
add
xor
push
jmp
in
fstl
cs
inc
cmp
pop
dec
andb
into
jmp
in
arpl
mov
cs
sbb
shrl
ret
cmovp
clc
adc
into
adc
xchg
add
fmul
inc
cmp
or
pop
cli
lahf
xchg
push
inc
sub
or
sub
and
mov
outsb
add
inc
ljmp
inc
movb
test
pusha
pop
aas
cmp
pop
test
dec
cld
out
mov
lahf
es
push
push
add
push
out
and
cs
xchg
imul
adc
or
loope
adc
sbb
shl
jmp
mov
test
test
std
stc
xchg
jb
loop
push
pusha
adc
lods
mov
or
cmc
in
out
add
sub
pop
subb
in
add
gs
jg
pop
xor
dec
inc
xchg
jg
cmpsl
jb
push
pop
outsl
lea
xchg
xor
push
or
add
je
sub
push
sub
lock
bound
fsubs
mov
jmp
mov
jl
or
and
dec
sbb
mov
inc
lods
pop
add
mov
aam
int
inc
movsb
aam
mov
or
leave
pop
sbb
dec
push
nop
stos
pop
add
insb
sub
inc
mov
xchg
out
popa
or
or
adc
xor
sbb
add
adc
insl
lret
sub
lock
inc
or
data16
js
fbld
mov
inc
daa
je
cwtl
aam
xor
sbb
xchg
and
xchg
pop
insb
sub
lahf
mov
adc
push
popf
sbb
sbbb
neg
inc
pop
or
cmp
pop
inc
testl
shr
inc
pop
repnz
and
mov
add
stos
pop
sbb
adc
arpl
movsl
pop
pushf
addr16
adc
dec
icebp
lock
hlt
add
or
fistps
inc
subl
pop
leave
movntps
nop
js
cmp
mov
sub
dec
mov
sti
push
sbb
gs
mov
cli
mov
test
inc
mov
and
imul
pop
xor
or
add
add
mov
add
enter
xor
pop
faddl
lcall
in
mov
jb
jge
xor
es
rolb
addr16
push
cmp
or
jp
jae
cmp
mov
outsb
lds
fcom
adc
jl
mov
rcll
pop
dec
rclb
cmp
add
adc
lods
mov
adc
repnz
lods
stos
inc
sbb
cwtl
xchg
ret
in
push
push
cmp
addr16
rorl
add
push
int
stos
rorl
dec
inc
cmp
cli
cmpsb
or
cmp
inc
lret
jecxz
sub
push
mov
shll
dec
rol
lock
loopne
xor
and
push
leave
fmul
push
sub
fimuls
ljmp
and
xchg
out
and
aad
pop
lret
xorb
mov
or
pop
ss
cli
and
pop
push
mull
lock
test
jge
test
xchg
xor
in
mov
xchg
push
imul
icebp
ja
and
daa
movsl
mov
call
cwtl
cmp
sarl
or
es
dec
push
xchg
cltd
dec
push
jo
test
cmp
push
inc
loopne
or
lock
pop
lahf
adc
enter
push
fs
and
ret
push
cmp
mov
nop
mov
mov
cmp
jo
pop
call
jbe
daa
jle
sbb
stos
ret
rcll
std
mov
movsb
lret
into
in
push
leave
hlt
fs
sahf
pop
add
sub
cmp
call
stc
or
ja
mov
adc
xor
or
out
fiadds
pop
or
adc
inc
or
sub
sub
pushf
dec
popf
or
pop
inc
out
jae
mov
adc
adc
push
cmp
jmp
ret
repnz
sub
push
dec
or
mov
push
outsl
loope
cli
add
lods
jnp
jo
mov
rclb
cwtl
movsl
or
add
clc
pop
add
aam
sub
jmp
addl
inc
jb
xor
les
pop
adc
test
daa
add
inc
insb
imul
clc
popf
dec
stos
fadds
pushf
loop
cmp
sub
pusha
fisubrl
jecxz
pop
jo
and
mov
push
adc
xor
into
inc
sub
jecxz
enter
es
sbb
jns
shl
inc
repz
mov
mov
mov
mov
add
clc
cmpsl
ffree
shll
dec
add
scas
inc
jle
mov
cmp
sub
jl
movsb
mov
enter
lock
mov
pop
int3
mov
pop
add
pop
dec
inc
dec
cmp
inc
repnz
into
sbb
add
dec
aas
xchg
push
push
xor
popa
mov
adc
fcomps
dec
inc
movsl
add
fs
adc
cli
lds
subl
fidivrl
push
jmp
push
push
sbb
ds
mov
test
pop
or
pop
divb
aam
and
testb
int
mov
aam
leave
pushf
sbb
push
push
call
push
pop
sub
dec
jg
sgdtl
mov
jle
outsb
xor
xchg
push
xchg
push
inc
mov
xchg
ror
push
push
aas
pop
sub
std
cmpsl
cmp
gs
subl
adc
or
sbb
pop
inc
and
pop
fwait
insb
and
sub
dec
cmc
ss
mov
jl
cli
test
sahf
push
hlt
push
std
adc
add
push
pop
xchg
notl
sarl
shr
dec
pop
inc
js
pop
test
pop
inc
je
shlb
aas
out
push
add
push
cmpsb
pop
in
sub
clc
cmp
pop
add
mov
mov
in
xchg
mov
pop
mov
dec
xchg
add
sub
sbb
mov
xor
nop
mov
jge
cmp
dec
scas
testb
mov
lret
stos
cmp
ficoml
jmp
or
adc
sub
pop
push
or
dec
pop
mov
inc
shll
or
mov
pop
xchg
pop
lea
movsb
inc
test
loopne
jae
pop
nop
js
stos
dec
or
jmp
add
xchg
das
push
mov
iret
fsubs
data16
sahf
mull
in
loop
mov
dec
add
add
gs
dec
mov
int3
push
imull
adc
mov
sti
xor
dec
fidivs
and
daa
fmul
jae
outsl
push
jmp
fisubrl
sub
mov
iret
mov
jl
stc
das
jmp
lret
mov
cli
cmc
jp
daa
dec
pop
push
mov
repz
out
popa
sbb
dec
es
fs
and
adc
add
rcl
bound
adc
add
rorb
fsts
pusha
fisubl
test
cld
dec
xor
fwait
lcall
jae
or
cmpb
mov
or
mov
repz
pusha
aad
xchg
push
push
pop
and
sub
or
hlt
in
mov
sub
jmp
or
or
inc
inc
rcll
mov
shll
and
leave
scas
adc
mov
out
sub
pop
outsb
jmp
stos
or
inc
jns
mov
es
cld
pop
mov
add
aad
xlat
cmp
mov
ret
adc
sub
lods
or
cmp
sbb
xor
inc
leave
add
pop
jp
jg
sub
cmc
pop
dec
fstps
cmpl
inc
fimull
loope
dec
mov
stc
jo
loop
enter
add
jo
jecxz
pop
lret
stc
jns
and
dec
inc
xor
add
lret
add
ret
push
jle
adc
push
test
mov
int3
cs
cmp
rolb
xchg
dec
bound
sub
xor
pop
clc
sbb
dec
loop
pop
and
fldl
inc
xor
jmp
sub
pop
daa
mov
cmp
cmp
xchg
add
mov
incb
push
push
push
ficompl
mov
loopne
add
mov
stc
mov
outsb
or
add
pushl
jbe
xchg
je
or
push
ja
push
neg
std
imul
inc
clc
jae
adc
sbb
inc
push
fwait
push
sub
or
adc
mov
sub
dec
pop
xchg
lock
mov
add
cs
jmp
mov
xchg
callw
test
insl
sub
testb
add
cmp
dec
ror
leave
adc
inc
or
outsl
jmp
jmp
loop
popa
pop
push
pop
add
cmp
adc
adc
pop
popf
xchg
and
les
adc
or
or
out
sub
cmp
into
xor
repz
aad
sbbb
fmuls
mov
or
mov
jns
sub
cli
sub
cli
cmp
push
pop
push
push
mov
loop
sarb
inc
sbb
jmp
inc
xor
repz
rcr
lods
lahf
adc
popf
push
sub
dec
cmp
cmp
clc
pop
xchg
das
sub
sbb
into
mulb
cmp
in
or
mov
pxor
mov
in
and
xor
test
and
xchg
loopne
pop
test
push
les
jl
sub
dec
mov
xor
flds
imul
xchg
pop
jmp
mov
mov
fs
cmp
pop
ret
mov
sahf
xchg
mov
mov
and
jbe
lods
xchg
dec
lret
cmpsl
mov
fdivl
stc
hlt
mov
add
and
imul
dec
test
pop
int3
mov
movsb
cmp
shrb
sub
fdivl
mov
daa
out
jl
adc
adc
arpl
es
cmc
push
push
xlat
sbb
xor
aad
aam
adc
or
mov
data16
push
add
fisttps
dec
xchg
add
pop
xor
or
dec
cmpb
notb
mov
dec
clc
or
lods
into
pop
das
sub
ret
pop
pop
bound
add
xchg
mov
mov
int
mov
xchg
lret
adc
mov
sbb
adc
inc
jne
push
push
push
in
test
push
sarb
mov
pop
jmp
add
sbbb
add
scas
or
lret
jb
sbb
pop
jle
in
xor
out
sub
les
add
in
or
in
and
jmp
dec
cmc
sub
or
or
mov
hlt
dec
jmp
add
jae
in
into
outsb
adc
cwtl
aam
xchg
pop
punpckhbw
xlat
sbb
jl
push
push
mov
shl
imul
movsl
jnp
mov
push
jb
push
push
inc
mov
out
test
lret
daa
cld
adc
push
mov
ficoml
xor
jmp
sub
xor
mov
jmp
lods
inc
add
sub
cmc
inc
sub
mov
lret
mov
aam
fcomps
pop
add
shl
je
add
ret
mov
lret
mov
or
outsb
rorb
test
or
shl
into
jno
daa
in
sbb
dec
ret
xor
sub
dec
addl
inc
es
prefetch
inc
or
mov
pushf
adc
pop
popa
fs
xchg
fstps
shlb
add
xor
in
and
add
cmp
mov
pop
sub
insb
shr
jmp
mov
and
hlt
bound
scas
pop
cmp
loopne
or
and
jbe
dec
jge
cmpsb
pop
pop
lret
push
fimuls
dec
cli
sub
xor
rolb
or
pop
add
or
push
lock
push
xchg
push
pop
in
cld
fcompl
div
ret
popa
imul
out
push
adcb
dec
scas
sbb
dec
add
xchg
jge
sub
add
jg
inc
add
jmp
lea
pop
jo
ror
sbb
mov
loop
add
adc
dec
popa
sub
sub
or
cmp
je
shr
ret
xchg
scas
popa
xor
mov
movsb
orb
cmpb
not
push
mov
sub
dec
iret
or
add
hlt
sub
ds
cwtl
xor
mov
push
pushf
jg
loop
out
xor
inc
mov
leave
add
xor
lock
or
add
nop
into
xchg
add
insl
inc
and
std
sahf
adc
or
xchg
sbbb
in
int3
rcrb
mov
or
nop
mov
dec
and
jle
shlb
sbb
pop
sbb
pop
mov
mov
jge
sub
pop
repz
rorb
cs
xchg
inc
out
add
aaa
addr16
hlt
mov
add
imul
add
cmp
shrb
add
sti
pop
cld
int3
dec
xor
cli
mov
dec
std
sub
mov
ret
in
dec
mov
gs
inc
xchg
push
mov
mov
pop
xor
ret
push
xor
roll
push
mov
sarb
or
xchg
in
mov
mov
call
mov
cmp
jecxz
sbb
sbb
sbbl
mov
jle
test
insl
gs
aaa
pushw
add
xchg
jnp
daa
pop
xchg
subl
xchg
dec
mov
push
jecxz
aas
add
pop
inc
ss
daa
inc
into
sub
and
push
rcll
stos
inc
add
pop
aam
push
aaa
outsl
cmpl
inc
inc
outsl
out
icebp
dec
icebp
jl
mov
cmpsl
dec
or
addr16
add
jmp
xor
das
int3
pop
mov
sub
sub
out
leave
out
sub
add
sub
and
rol
ljmp
test
or
jns
adc
add
stos
mov
sti
in
je
mov
nop
sub
jle
or
jns
jmp
sub
or
sub
mov
mov
add
dec
mov
sub
dec
sub
test
iret
xchg
out
mov
inc
das
dec
cwtl
out
push
mov
enter
add
data16
jp
push
mov
aas
or
push
jmp
push
movsb
xchg
lock
test
xchg
adc
notb
das
pop
sbb
push
lahf
shr
push
lea
add
sub
ret
ss
in
xor
sub
repnz
cmp
inc
fstpl
add
addb
dec
or
or
sub
dec
adc
xor
add
and
repz
inc
mov
push
sahf
inc
jg
mov
mov
es
bswap
push
add
lret
sbb
fstl
jp
repnz
add
jmp
push
push
push
imul
dec
pop
rcll
aas
xchg
xchg
push
and
dec
pop
addl
jns
and
dec
sbb
mov
rcl
mov
scas
sub
sbb
adc
sbb
adc
xor
les
lods
fldenv
push
and
sub
dec
xchg
pop
mov
sub
add
btc
mov
pop
push
xor
rcrl
jbe
dec
inc
cmc
adc
and
sbb
adcb
pop
movsl
in
mov
or
outsl
or
incl
dec
nop
lahf
mov
or
das
andl
fidivrs
cltd
lcall
push
cmp
arpl
or
sub
cmp
jl
xor
cmp
adc
xchg
pop
pushf
inc
shrl
ds
xor
mov
icebp
aas
cmp
dec
inc
adc
jno
pop
mov
or
cmp
or
mov
add
inc
xchg
imul
add
jmp
in
cwtl
mov
popf
jp
sub
xchg
gs
cmpsl
jp
sub
push
pop
stos
dec
or
in
xchg
call
push
or
jmp
out
and
mov
sub
dec
xchg
daa
mov
mov
push
sub
dec
stc
jo
fwait
sbbl
push
mov
fists
or
mov
push
adc
or
shl
bnd
dec
mov
fistpl
mov
push
mov
pop
xor
lret
sub
roll
repnz
and
push
dec
push
ljmp
wrmsr
mov
sub
xor
icebp
add
mov
scas
sub
outsb
adc
repz
sbb
or
jmp
ja
pop
fldenv
pop
fistps
inc
nop
mov
imul
dec
dec
shlb
mov
pop
ret
and
xchg
adc
push
push
sub
add
add
add
cld
xchg
pop
rolb
mov
adc
xor
aad
mov
push
jmp
add
orb
mov
fisttps
shrl
scas
jo
test
or
pop
lea
sub
ret
jg
pop
lret
pop
adc
lret
adc
push
xor
cmp
cli
or
and
xorb
push
dec
cld
add
push
leave
test
lahf
aas
adc
sarw
imul
mov
mov
mov
out
inc
mov
add
mov
nop
iret
dec
jo
dec
dec
mov
into
inc
pusha
mov
cmp
add
inc
icebp
pusha
mov
push
add
jecxz
std
or
and
jb
imul
rol
neg
mov
scas
pop
in
add
stos
jb
mov
js
dec
scas
ja
loop
pop
dec
adc
out
pop
js
mov
fsts
wbinvd
push
push
jmp
in
add
orb
push
stos
xor
xlat
ljmp
cli
int
fstps
lret
or
daa
dec
clc
mov
addb
mov
jmp
xor
out
jns
pop
negl
test
ret
nop
cmp
maskmovq
or
adc
xlat
cmp
jo
or
or
sbb
and
sub
nop
xor
cs
and
cmp
push
add
dec
push
push
dec
les
and
bound
dec
mov
movsb
or
idiv
dec
pop
test
push
movsb
mov
mov
add
int3
jns
nop
cmp
sub
mov
dec
xor
mov
aam
sbb
rorl
push
mov
out
mov
dec
add
adc
sub
pop
repnz
xchg
lds
int
cmc
inc
and
add
lods
push
mov
sub
mov
lock
pop
jmp
cmp
je
nop
sub
out
pop
mov
sbbb
mov
adc
mov
sbb
fsts
mov
cmp
pop
push
inc
push
fnstcw
jl
adc
jecxz
push
jmp
das
sbb
dec
cmp
add
jg
sub
mov
push
jmp
push
adc
pop
ljmp
dec
orb
cmpxchg
lea
out
xchg
add
popa
sub
cmp
xchg
scas
fisttpl
jmp
push
mov
xor
testb
pop
pushw
inc
pop
arpl
fxch
mov
dec
sbb
subb
jb
lahf
pop
les
or
or
push
shll
xor
jmp
or
inc
dec
sub
or
sub
hlt
xor
cmpsl
test
mov
adc
jmp
dec
sub
jmp
mov
push
and
dec
lahf
addl
mov
adc
add
pop
mov
enter
out
jge
push
dec
xor
xchg
xorb
xor
hlt
pop
jns
jp
add
sbbb
sub
xlat
lahf
cmpsl
pop
scas
aad
pop
push
in
or
sarb
mov
inc
cmc
cli
jbe
icebp
mov
mov
sub
leave
shlb
push
es
and
inc
mov
mov
orb
push
sub
mov
add
out
add
ds
sub
mov
jmp
mov
daa
sarl
mov
xchg
pop
ja
mov
loope
and
pusha
int3
lods
push
fwait
xor
jg
lds
xchg
fistl
les
das
dec
xor
in
fs
or
pop
fnstsw
repz
decb
call
subb
leave
add
add
call
aad
pop
mov
mov
cli
pop
lahf
loop
push
rcrl
loope
sbb
push
les
filds
jb
fsubl
push
loopne
xchg
sub
xor
aam
push
or
jp
xchg
push
lcall
js
lmsw
jecxz
outsb
mov
repnz
mov
fldpi
sub
lret
out
mov
mov
stos
pushf
cwtl
sti
push
insb
dec
mov
push
pushf
aad
add
add
lret
and
stos
push
mov
mov
or
sbb
jl
and
cmpsl
popa
xor
pop
pop
cmc
inc
fcompl
lcall
adc
pop
xor
mov
adc
mov
adc
icebp
stos
leave
and
sarl
std
js
outsb
rcll
aas
push
sbb
pop
test
int3
mov
adc
pop
push
mov
add
cmp
in
cmp
shl
or
and
fsubrs
pop
lahf
cltd
dec
dec
push
xchg
push
popf
sarb
ret
push
test
mov
stc
std
xor
or
and
sub
mov
add
add
jno
jg
out
and
leave
pop
jge
push
push
int3
out
mov
push
inc
cld
and
incb
dec
test
mov
cmp
or
mov
push
inc
lods
jg
sub
xor
xchg
xor
or
adc
pop
pop
add
repz
movsb
jp
mov
movsb
in
cmp
dec
ljmp
fisttpll
dec
pop
test
repz
cmp
addb
push
xchg
inc
push
sub
pop
add
movsb
orb
cmp
jo
push
or
xchg
test
mov
fimuls
movlps
mov
inc
flds
dec
jns
add
imul
jmp
stos
jne
jp
decb
popf
in
movsb
pusha
pop
fimuls
clc
pop
xor
int3
fs
stos
pop
cmpsb
stos
ret
div
lock
add
jmp
jmp
jp
mov
jmp
xor
push
inc
popf
push
mov
add
jne
imul
cs
xor
inc
pop
and
aas
pushf
jg
xor
icebp
pop
mov
add
iret
xor
jmp
rcr
xorl
push
pop
pop
lock
add
dec
cmp
sub
or
out
cmp
out
lea
ljmp
shr
das
dec
fmulp
loop
push
into
shrl
sub
jg
add
adc
xlat
mov
hlt
inc
mov
mov
mov
xor
add
roll
movsl
andb
test
sahf
cmp
in
add
pop
jmp
cmp
dec
popf
push
movsl
stos
fucomp
insl
jns
mov
lods
push
icebp
or
xor
push
aam
dec
xor
imulb
push
cmp
jl
imul
push
data16
imul
xor
decb
lret
sub
imul
adc
or
ret
adc
jbe
cltd
fwait
dec
pop
cwtl
testl
pusha
add
and
mov
push
pop
cmp
clc
cmp
dec
mov
pop
push
sub
push
fwait
or
dec
inc
xchg
clc
stos
add
dec
daa
push
sar
ljmp
popa
or
aas
mov
dec
fs
mov
mov
clc
adc
lods
and
dec
les
mov
pop
pop
dec
fbld
lret
push
sub
ds
add
pop
pop
mov
pop
adc
sbb
inc
movb
in
cmp
movsb
add
outsl
aam
and
jl
mov
xor
stc
in
mov
add
xchg
jns
jmp
sahf
pusha
and
decl
add
das
aam
mov
movsb
fimuls
stc
jmp
and
js
fmulp
out
sbb
sub
sub
add
mov
and
inc
xor
add
adc
fs
loopne
test
insl
dec
leave
cmp
sbb
mov
pmaddwd
inc
jns
rorl
inc
movl
inc
repz
or
fidivl
push
clc
mov
mov
imul
inc
dec
sti
mov
lds
cli
inc
xchg
add
stos
sub
in
jno
fwait
dec
adc
out
dec
mov
pop
inc
int3
stos
lods
jge
dec
mov
mov
add
bound
std
pushf
popl
bound
lret
mov
or
jb
inc
mov
sbb
shl
addb
mov
jo
ret
mov
xor
mov
add
popa
or
loope
in
repz
rolb
xor
cwtl
xchg
dec
dec
push
xor
add
or
mov
xor
pop
dec
pop
movsl
shrl
pop
pop
inc
popa
or
or
push
aad
inc
bound
test
fwait
orl
cmp
sbb
jmp
sub
inc
mov
hlt
or
or
pop
mov
addr16
xor
sahf
adc
inc
mov
mov
push
jbe
lods
mov
push
pop
inc
in
inc
pop
push
push
pop
or
repnz
int3
das
mov
dec
mov
shll
in
pop
and
mov
aaa
xchg
pop
sti
or
in
mov
push
mov
cmpb
lahf
fdivs
and
gs
imul
pop
fsubs
add
xor
add
nop
repz
insl
cs
cld
add
insb
or
repz
lahf
inc
pushf
sub
cwtl
mov
mov
inc
cmp
stc
in
push
mov
adc
jg
test
jle
xchg
int
inc
cld
das
pop
rcrb
pop
jae
xchg
cmp
fcompl
xor
adc
push
stos
test
cmpsb
rcll
pop
test
ljmp
push
and
pop
es
sbb
sub
push
icebp
and
cmc
pop
out
add
in
jmp
mov
mov
out
sub
pop
mov
jnp
ss
xor
pop
dec
or
jae
dec
inc
push
mov
dec
jg
pusha
ljmp
sbb
lcall
rcrl
sbb
push
add
push
jle
push
mov
push
les
fistps
cs
add
push
adc
xor
test
test
stos
cltd
push
outsl
sub
stc
ds
jle
mov
dec
mov
or
add
in
add
mov
movsl
pushf
add
lea
jno
nop
movsl
addb
ror
loop
add
jb
subb
cmp
test
sub
jbe
xor
ja
and
out
jae
and
or
ja
outsb
pop
lret
add
push
inc
into
pop
movsb
ret
shl
add
roll
jl
pop
pushf
mov
jg
sbb
lcall
xor
das
pop
adc
pop
jne
std
jo
ja
cmc
orb
pop
xchg
not
andb
xor
lret
js
daa
out
mov
js
add
adc
lods
pop
enter
push
mov
imul
sbb
push
out
xrelease
lock
daa
imulb
add
popa
sub
add
ljmp
mov
rol
jmp
scas
lret
int3
daa
push
mov
jmp
sub
dec
push
pusha
stc
jmp
jnp
nop
push
subb
push
ljmp
mov
sarl
mov
mov
mov
fdivs
push
clc
pusha
aaa
cmp
inc
jne
push
push
lahf
push
add
shlb
inc
stos
pop
aas
pop
jmp
movsb
dec
ss
mov
popf
sar
mov
add
test
sub
lahf
jmp
jle
add
leave
xor
push
xchg
or
sbb
or
aas
pop
lods
cmp
push
lods
jo
adc
mov
sub
mov
mov
roll
icebp
leave
xor
push
xor
push
imul
addl
and
xchg
push
sub
or
or
dec
enter
or
add
adc
cmp
dec
sub
cwtl
ret
es
sbb
jb
fcmovne
add
jno
dec
lea
bound
mov
pop
es
ficoml
hlt
add
sbb
mov
outsl
sub
push
and
addl
js
push
mov
pop
dec
mov
out
add
sbbb
sub
mov
or
sbb
add
insb
add
fistps
jmp
ds
lds
rorb
aam
xorl
xchg
jecxz
xor
jo
add
icebp
xor
cmp
adc
lods
dec
add
cmpsb
inc
add
test
adcb
int
cmp
mov
scas
loopne
push
outsb
push
je
into
or
lahf
rolb
or
push
lcall
mov
xchg
push
dec
push
xchg
mov
xchg
or
in
inc
adc
jmp
lret
and
lods
std
test
jecxz
test
add
es
pushf
ret
xor
pop
inc
xchg
das
incl
jg
pop
push
mov
mov
push
cmp
pop
add
je
push
adc
ficoms
add
dec
psubusb
pop
ljmp
xor
push
mov
push
xor
push
xor
add
insl
and
jmp
nop
jmp
scas
fcos
mov
imull
cwtl
out
xchg
pusha
mov
jle
ds
imul
sub
mov
mov
mov
push
xlat
in
mov
loop
pusha
and
or
mov
adc
ja
loop
fwait
dec
lahf
inc
dec
or
dec
neg
mov
push
movsl
enter
scas
mov
xchg
xchg
out
mov
andb
repnz
pop
xor
pop
dec
out
jge
xor
repz
jns
iret
mov
jmp
add
jmp
cmp
sub
mov
jmp
mov
and
xor
aas
push
and
cmp
jge
dec
and
add
pop
movsl
std
cmp
test
sarl
pop
lea
or
xor
xor
addr16
adc
adc
bound
orb
push
aad
mov
sub
mov
ret
filds
xor
sub
cmp
xchg
mov
jge
repz
mov
sbb
popa
dec
jle
mov
popf
mov
inc
cmp
add
dec
rcrb
mov
and
clc
cmp
mulps
ret
mov
dec
xchg
or
dec
in
enter
outsb
xor
push
add
jmp
in
out
cmpsl
push
cmp
or
add
or
pop
sub
inc
sbb
mov
mov
mov
pop
test
inc
push
std
cmp
iret
cli
loopne
xchg
adc
and
push
jae
and
gs
jmp
pusha
insb
aad
mov
repnz
jno
sub
inc
xchg
out
jmp
inc
xorb
call
int
or
rolb
xchg
movsb
mov
cmp
repnz
fisttpl
add
inc
mov
insb
sub
dec
or
scas
xor
cmp
imul
fcmove
mov
mov
in
push
cwtl
int
fs
pop
lods
dec
dec
in
jg
and
mov
adc
xchg
imul
lret
xchg
xor
add
outsl
jmp
insl
inc
adc
mov
inc
loopne
nop
mov
or
and
insl
cwtl
push
pop
or
jmp
add
and
sub
repz
xor
jmp
in
jae
push
mov
mov
xchg
clc
outsb
and
and
icebp
cmp
das
pop
out
shrb
rcl
xor
dec
shl
xchg
or
push
add
iret
jmp
test
repnz
sbb
xor
pop
dec
pop
add
scas
iret
int
loop
das
test
sub
lcall
fwait
xor
pop
sub
repnz
dec
mov
mov
sub
mov
in
xor
cld
adc
jno
imull
inc
xchg
push
pop
push
jge
loope
lock
add
jmp
and
aas
les
cmp
mov
rcr
enter
addb
sti
pop
into
stos
mov
adc
ret
push
cmpsb
shlb
xor
adc
stc
pop
xchg
in
fisubrl
clc
dec
sbbb
out
dec
dec
dec
dec
pop
sbb
out
sbb
loop
push
push
mov
clc
mov
lret
not
stc
outsl
mov
cmc
mov
push
cmp
fsubrs
call
adc
inc
add
jmp
dec
add
inc
pop
je
inc
lcall
aam
int3
jnp
std
cmpl
lock
push
and
das
cmpsl
push
adc
push
jbe
leave
pop
fs
lds
icebp
repnz
das
jbe
cmp
jg
ret
jns
ret
pushf
jmp
icebp
mov
push
fiaddl
pop
push
mov
or
or
jge
cld
adc
leave
jge
mov
sahf
pop
ret
dec
out
and
sub
jne
and
or
pop
sub
jae
cmp
jnp
add
inc
cltd
mov
sub
cmp
ja
testl
repnz
or
add
jle
jb
pop
mov
cmp
add
xor
cli
dec
inc
sbb
cmp
dec
js
stos
sbbb
push
push
dec
push
add
outsb
mov
insl
mov
sbb
sarl
jp
test
jo
push
jmp
es
or
xor
push
fimuls
or
sbb
sub
sbb
fs
push
sahf
push
xlat
sub
shlb
pop
mov
or
mov
push
inc
pop
add
clc
insb
in
fdiv
das
sbb
inc
fmuls
jge
fdivrl
add
shll
push
or
imul
not
xchg
dec
call
scas
into
cmp
push
das
and
in
fimull
popa
or
pop
sbb
sub
pop
lock
sub
rcrb
out
imul
jb
adc
mulb
jle
out
push
or
les
fldl2t
mov
push
mov
mov
sbb
dec
adc
idivb
and
int
xchg
shr
shl
xor
and
cmc
stc
pop
cmc
or
hlt
jns
lret
add
loope
push
or
dec
lcall
or
stc
cmp
sahf
js
mov
xchg
mov
mov
ret
enter
cmp
jg
stos
add
push
call
scas
xchg
cmpb
not
mov
add
shll
or
lret
or
push
or
xor
cwtl
dec
pop
jge
or
ljmp
aas
and
cmp
dec
fadd
pop
push
lcall
icebp
sub
movsl
jo
gs
mov
test
ds
or
jo
nop
test
pop
inc
push
out
or
pop
xor
ss
mov
std
pusha
mov
xor
mov
pop
dec
xchg
add
sbb
lret
mov
ds
or
adc
je
je
mov
push
add
sub
in
mov
in
or
sub
int3
mov
sbb
xchg
mov
ret
mov
xchg
loop
test
jmp
cs
dec
or
xor
imul
jbe
inc
pop
aam
cli
mov
call
pop
mov
xor
mov
dec
inc
jmp
clc
pop
inc
pop
aad
xchg
repnz
enter
je
and
adc
les
jmp
fcmovb
xchg
pusha
test
lea
stos
mov
jmp
lcall
jl
fbstp
jo
imul
bound
ffree
pop
sti
out
xchg
hlt
cmp
in
insl
jne
sub
or
into
mov
xor
loope
in
dec
mov
scas
out
pop
push
cmp
and
stc
sub
xlat
cmpsb
add
leave
fsubrs
pop
out
ss
mov
cltd
cmp
jmp
push
push
fs
call
scas
lret
flds
pop
das
sbb
or
fstp
shll
flds
in
dec
mov
mov
pop
adc
sub
popf
add
push
mov
or
pop
xor
add
xchg
mov
cmp
jmp
mov
scas
jae
or
inc
push
pusha
push
fmul
xchg
dec
xor
adc
inc
push
imul
push
or
cmp
push
xor
shll
arpl
rorl
iret
daa
leave
xchg
and
pop
jnp
jmp
or
sub
repz
and
pop
cmp
ficoms
ljmp
pop
pop
mov
push
imul
push
cmpsl
mov
or
pop
fsubl
in
pop
xchg
or
mov
scas
and
cmp
or
xor
cmp
mov
leave
cld
jne
dec
outsl
xchg
push
rorb
popa
aas
adc
jnp
jge
dec
push
fsubrs
inc
pop
adc
cmp
push
push
xchg
pop
add
dec
lods
or
cmpsl
pop
shll
sbb
les
addl
outsl
repz
stc
jle
pop
aam
icebp
cmp
shll
mov
in
enter
dec
leave
and
mov
inc
push
mov
iret
out
mov
pop
inc
dec
movlps
mov
ret
sbb
popf
in
movsl
in
adc
sub
sub
adcb
dec
fiadds
imul
jl
fldenv
xchg
or
xchg
mov
lahf
cs
mov
mov
data16
aam
mov
sub
rcrl
mov
ret
pop
dec
xor
out
mov
pushf
repz
out
icebp
pop
dec
mov
mov
out
push
ret
push
or
addb
sub
add
inc
popa
cmp
inc
mov
addb
mov
adc
mov
jp
mov
mov
xor
pop
test
loope
mov
and
idivl
in
mov
sbb
jmp
sub
ret
jge
dec
mov
out
jp
dec
dec
and
xor
adc
fstpl
dec
or
ret
dec
imulb
push
xchg
mov
popa
icebp
jecxz
cwtl
mov
das
xor
inc
jge
cwtl
mov
mov
add
mov
dec
test
jg
scas
dec
jg
xchg
or
das
or
mov
xchg
test
fldcw
nop
jns
in
or
mov
out
xchg
push
pop
call
and
jno
cmpsb
inc
push
lea
push
ja
pop
test
adc
add
ret
add
orb
mov
inc
pusha
in
fs
add
aad
cmp
add
dec
ljmp
sbb
subl
add
xlat
push
jb
push
mulb
and
pop
rcrl
adc
pop
negl
pop
add
cs
or
das
les
aam
dec
mov
jns
sub
int
add
aas
push
mov
jne
cwtl
mov
mov
push
and
push
mov
std
adc
mov
pop
xor
and
das
shl
mov
cld
mov
call
loop
std
pop
pop
cmpb
inc
pushl
fistps
shlb
cmpsb
sbb
add
clc
push
or
idivl
and
scas
mov
rcrl
int3
or
mov
sahf
dec
mov
aas
outsb
cmp
mov
inc
push
xchg
adc
test
jbe
push
jns
lods
filds
icebp
adc
cwtl
rclb
cwtl
dec
mov
jae
ds
adcb
outsl
push
adc
and
cmp
out
push
sub
shrl
cmp
nop
addr16
insl
cmpb
xor
jno
xor
pushf
fwait
adc
cmpsl
dec
scas
sbb
dec
sbb
stc
push
cli
mov
lahf
or
ja
jae
jmp
mov
and
imul
sub
scas
pop
mov
into
pop
jmp
dec
testb
les
cmp
sub
mov
int3
mov
rclb
adc
adc
movsb
add
dec
dec
xchg
lret
mov
repz
popf
dec
sub
or
push
jo
mov
sub
xchg
rcl
bound
ss
dec
pop
hlt
iret
testl
pop
test
mov
push
add
adc
ss
lahf
add
testl
in
nop
pop
lods
sub
jae
jmp
xor
out
adc
lock
sbb
ret
and
lods
lahf
dec
push
mov
pop
pop
repnz
jl
push
xchg
das
pop
cmp
aaa
jmp
jmp
dec
call
adc
and
pop
add
push
cmp
lret
jmp
pusha
sbb
sbb
mov
xorb
cwtl
in
pop
push
add
sub
push
call
sub
pop
push
pushf
or
int3
ja
out
gs
xchg
and
cmp
sub
std
fnstsw
out
sub
add
pop
pop
test
sbb
shr
loop
jmp
dec
mov
scas
push
mov
shlb
lods
test
call
repnz
add
jmp
shrb
pop
push
mov
mov
fstpl
imul
shlb
sub
dec
sub
pop
rclb
jge
pop
mov
pop
or
sbb
shll
sub
negl
ds
pop
std
add
cmp
addl
arpl
mov
dec
jmp
push
and
push
stos
jg
add
add
and
adc
les
fcmovbe
pop
fimull
cwtl
stos
inc
push
xlat
pushf
inc
sub
imul
mov
cmp
sub
ljmp
jnp
jo
lahf
jbe
imul
ret
jb
and
insl
adc
rcrb
test
push
mov
xlat
xorl
sub
xor
mov
adc
out
jae
arpl
ror
cmp
stos
push
cmc
in
push
int
movsl
adc
sub
mov
mov
jmp
cltd
pusha
push
sub
mov
add
xchg
or
mov
fsubs
or
jne
adc
in
push
add
or
and
scas
inc
sbb
pop
and
jno
and
jnp
add
aam
and
jnp
inc
sub
sbb
loope
xor
ja
add
add
push
mov
xchg
jns
jmp
add
cmp
push
or
and
and
add
jno
ss
fs
leave
xor
sti
and
les
imul
and
addr16
cmc
dec
stos
push
xor
pop
xchg
jno
in
lods
jge
pop
pop
cmp
fs
dec
loopne
mov
nop
rorb
adc
dec
mov
shrb
imul
cmpsb
bound
sbb
push
push
pop
pusha
lock
and
and
pop
addr16
insb
jle
es
mov
push
push
popa
push
adc
or
repnz
mov
aam
les
pop
push
lret
and
sub
pop
out
pop
or
mov
mov
sbb
cmp
sbb
jmp
and
mov
out
inc
push
and
fdivs
push
lods
cmpsb
lock
dec
dec
lcall
and
adc
loop
icebp
push
mov
movsl
cld
and
xor
mov
les
xor
push
push
mov
push
in
add
testl
cmovle
jge
cmp
pushf
jl
adc
sarl
lds
jg
dec
xlat
out
das
lret
inc
je
jmp
inc
jge
push
pop
jbe
loope
sahf
das
int3
mov
adcl
push
dec
pop
sbb
jmp
xor
outsl
mov
xchg
andb
ret
dec
and
rol
lock
es
add
add
rolb
cmpb
shl
pop
sub
xchg
mov
pop
pusha
xchg
addr16
or
mov
push
fistps
xchg
jbe
movsl
push
sar
das
mov
das
add
sub
xchg
dec
push
mov
cwtl
and
stos
push
test
mov
add
inc
sbb
mov
dec
flds
scas
in
into
add
add
inc
mov
add
fistl
loop
fnsave
in
ret
mov
xchg
xchg
and
xchg
pushf
dec
mov
push
mov
cli
xchg
dec
adc
inc
shr
into
pop
inc
xor
ret
or
pop
mov
pop
bound
adc
cmp
cmp
frstor
pop
cmp
jo
lock
mov
jmp
push
loop
icebp
imul
aaa
pop
push
pop
das
clc
and
rcrl
jno
mov
xor
jecxz
imul
pushf
rclb
cli
xor
aam
xchg
pop
ret
in
outsb
add
mov
call
rclb
repz
mov
xchg
lcall
dec
out
push
or
inc
sar
in
jb
test
icebp
clc
rcl
jl
pushf
inc
fimuls
mov
jne
dec
rolb
rep
gs
or
sub
ret
sahf
dec
loopne
push
out
jp
ret
adc
mulb
jo
pop
adc
aad
test
pop
push
xor
leave
sub
dec
les
mov
add
sti
shlb
mov
add
mov
mov
enter
or
mov
out
ds
aam
sbbb
mov
lds
push
ss
shufps
xor
jne
stc
pop
mov
scas
inc
cmp
push
sbb
and
xor
pop
adc
mov
jp
adc
cwtl
inc
mov
inc
jmp
inc
dec
cs
mov
jno
add
sahf
sbb
daa
add
outsl
cmpsl
sbb
mov
clc
sub
test
mov
mov
sub
inc
das
and
jbe
gs
mov
test
das
xor
push
cmp
xor
js
rcll
ja
push
loope
sub
pop
xor
push
test
cmp
dec
sub
pop
add
add
pop
sub
nop
pop
orl
dec
add
mov
mov
add
lret
sub
mov
fildl
dec
xchg
and
and
push
mov
imul
mov
cmc
out
fmull
push
scas
dec
or
add
pop
cmpsb
js
je
inc
mov
rolb
stos
mov
pop
and
adc
add
pop
sub
xchg
sbb
xchg
add
mov
mov
push
xor
jns
jp
jge
and
into
pop
mov
push
xchg
call
add
pop
loopne
inc
jle
std
push
mov
cmp
je
dec
lcall
popa
inc
popa
push
inc
add
pop
mov
push
inc
adc
inc
test
inc
jb
sbb
adc
imul
sub
push
loop
or
rolb
sub
sub
mov
testl
js
jp
add
mov
scas
icebp
xchg
push
jo
fisttps
jmp
and
push
gs
add
lock
cmc
out
add
fidivs
push
rclb
inc
test
insl
and
shll
in
leave
outsb
outsl
add
jne
jmp
dec
pop
xor
scas
fdivrl
repnz
add
sbb
pop
mov
pop
or
pop
adc
cld
out
pop
mov
xchg
adc
cmp
jg
sbb
ficoms
lret
jo
rclb
out
dec
adc
dec
mov
cmp
sub
cli
cli
lahf
or
xchg
or
jns
dec
test
push
mov
jmp
test
flds
pop
push
orb
ljmp
push
adc
fcoml
add
add
out
pop
xchg
mov
dec
scas
sub
sbb
adc
popa
xchg
jb
ljmp
leave
mov
cmp
push
loope
add
dec
mov
outsl
popf
push
out
or
add
push
mov
jb
data16
or
dec
cmp
xchg
and
sub
ret
xor
les
xchg
xchg
sbb
add
mov
push
call
in
lret
add
sbbl
mov
mov
sbb
test
sub
cmp
xchg
into
in
ljmp
loope
lcall
sub
movsb
or
xor
addb
out
or
pop
loopne
mov
lcall
and
sub
xchg
jne
jnp
mov
dec
movsl
cmpsb
and
inc
popa
mov
pop
cwtl
loopne
and
mov
push
dec
mov
incb
pop
push
sub
pop
add
dec
inc
int3
daa
push
shll
inc
mov
test
xchg
jle
pusha
dec
or
add
jnp
sub
adcl
adc
xor
lret
pop
jns
bound
or
and
mov
and
pop
adc
test
or
adc
xchg
xorl
add
dec
cld
push
daa
ljmp
add
into
out
pop
movsb
mov
mov
lods
jne
inc
and
inc
aaa
inc
in
les
mov
add
mov
sahf
mov
insl
sub
ret
rcrb
and
xchg
cld
sbb
and
add
or
adc
js
xlat
xor
outsl
cmp
xor
test
ljmp
inc
shlb
stos
ficomps
push
mov
outsl
hlt
inc
cmp
push
push
adc
add
bound
jle
ret
jo
sahf
aas
cmp
out
or
ror
sub
jnp
fadds
popa
insb
pop
leave
push
sub
add
jmp
movsl
or
push
lahf
out
inc
jmp
xchg
sbb
mov
repz
shl
int3
mov
inc
dec
sub
out
add
fadd
hlt
out
sbb
add
xorl
cmc
jecxz
cli
out
daa
jg
pop
xchg
xor
add
adc
pop
push
sbb
or
sub
adc
push
repnz
repz
pushf
pop
jmp
and
in
and
push
fstpl
cs
int3
add
rcll
inc
insl
push
shll
cmpsb
int
and
mov
mov
jne
or
jge
pop
sub
and
push
jmp
mov
in
mov
sub
cmp
fstpt
jae
pop
push
push
mov
dec
ljmp
pop
scas
sub
xchg
out
push
inc
jle
adc
sbb
sbb
iret
insb
mov
push
add
push
rcr
jne
adc
rcrl
mov
in
xor
pop
fsts
shll
lods
xor
jge
es
push
adc
dec
mov
push
leave
clc
pop
xor
mov
sub
insb
adc
sbb
pop
sub
flds
push
mov
mov
sub
or
or
loopne
push
adc
and
mov
push
nop
xor
cwtl
lods
push
in
add
pusha
shrl
cmpsb
cli
sub
push
push
mov
add
pop
jmp
iret
dec
add
in
pop
jmp
push
aaa
lock
adc
push
and
or
and
jmp
mov
rol
add
jno
mov
and
cmp
jo
push
xchg
lods
ja
enter
call
mov
adc
xor
shrl
mov
mov
xlat
pusha
push
popl
push
sub
mov
mov
add
sub
jmp
pop
lahf
inc
push
push
loopne
push
dec
inc
cmp
das
mov
xor
adc
xchg
xor
dec
das
mov
and
popf
add
xor
les
repnz
cs
jle
xchg
ja
inc
xor
jmp
pop
push
shrl
push
inc
int
das
in
fwait
xlat
pop
in
lods
rcrl
and
sub
push
vpaddq
loop
xchg
add
push
push
push
jmp
mov
out
jge
sub
mov
lods
mov
das
mov
xchg
mov
ret
xor
in
cmp
mov
or
enter
gs
xor
pop
mov
ret
je
das
jmp
pop
test
std
in
and
jge
mov
jns
sub
outsl
or
add
repz
pop
dec
jg
hlt
cwtl
dec
jmp
inc
test
js
ljmp
cmpb
mov
cmp
adc
push
mov
xchg
lcall
cmpsb
jp
jo
cltd
dec
icebp
cld
pushf
fimuls
xchg
fs
bnd
add
lret
and
sub
std
push
cwtl
pop
jg
sub
stos
xchg
fstl
jbe
inc
adc
xor
rclb
adc
xorl
or
shl
sub
sbb
inc
ret
mov
loop
or
outsb
fidivs
sub
lock
int
mov
add
jmp
ljmp
sub
jns
dec
mov
push
movsl
mov
inc
popa
push
cmpsb
scas
pop
pop
repnz
es
and
inc
or
or
enter
dec
in
imull
xchg
add
add
mov
jnp
inc
lret
and
cmpl
sub
into
jge
mov
mov
pop
push
push
ljmp
outsb
cmc
lret
add
and
lock
outsb
and
adc
xchg
ficompl
pop
iret
rcl
bnd
sbb
test
jno
xor
ffreep
clc
pop
call
sub
movsb
out
fucom
mov
xchg
push
push
mov
addb
imul
mov
in
or
mov
pushf
pop
dec
add
xor
scas
ja
mov
inc
enter
and
and
and
xor
loop
or
and
and
push
push
or
push
mov
mov
call
dec
enter
imul
shll
imul
in
sub
movsb
fldenv
sub
jo
sbb
ds
bound
cli
loop
and
fcomps
sub
inc
in
testb
loope
mov
shll
or
jge
mov
jbe
add
movsl
add
cmp
ljmp
pushw
pushf
jbe
adc
cld
dec
jmp
aaa
out
mov
jae
mov
stc
mov
movsl
push
cli
repnz
mov
and
inc
add
shll
add
aad
sub
jo
cmp
das
call
jmp
cltd
xlat
shl
push
xchg
mov
pop
leave
push
push
mov
and
cmp
mov
dec
push
pop
scas
cmp
pop
cwtl
adc
test
mov
les
xlat
mov
sub
mov
shrb
nop
sarl
push
mov
push
sub
mov
cmp
jmp
jle
and
jo
popf
push
pop
push
mov
push
pop
not
inc
xor
mov
add
rorb
dec
add
cmc
jo
or
push
and
pop
mov
js
mov
ret
or
enter
xchg
aam
jae
loopne
test
test
add
mov
out
inc
std
divb
sbb
jle
or
pop
jns
pop
data16
dec
sub
lock
enter
cmp
or
in
shl
add
push
pop
lds
sub
loope
push
jns
xor
insl
fnstsw
imul
aaa
sbb
mov
orl
xor
and
adc
movsb
dec
mov
pop
jmp
das
pop
jne
lea
lret
vpsllq
pop
add
dec
sub
pop
out
mov
xlat
jbe
pop
add
and
xlat
out
pushf
fadd
stos
mov
mov
int
popa
pusha
and
push
mov
int
jo
popa
insb
inc
mov
mov
xlat
es
pop
or
mulb
sub
bound
and
dec
xchg
pop
xchg
inc
add
and
enter
lcall
sbb
and
fdivrs
int3
pop
cmpb
xor
hlt
mov
xchg
jge
mov
mov
push
sub
lret
ret
ds
xchg
cli
xor
mov
rol
popa
sub
ret
pop
jmp
inc
pop
push
mov
sub
idivl
dec
pop
adc
xor
das
dec
aam
sbb
fcmovnu
fldenv
jl
sub
sub
adc
or
jecxz
cmpl
add
or
das
inc
pusha
dec
sbb
fwait
jle
icebp
or
not
out
and
xchg
pushf
push
inc
decb
cli
mov
pop
or
jno
xorb
pop
mov
in
add
ror
cmp
imul
sbb
cmpsl
and
cmp
add
subb
stc
or
daa
pop
pop
add
daa
inc
xlat
lea
je
cmp
sbb
xor
dec
movsb
sub
push
sub
out
mov
and
leave
pop
in
jle
xor
rclb
push
mov
jno
mov
push
jmp
sbb
sub
pop
jbe
add
inc
les
jmp
pop
movsb
mov
pop
dec
mov
sti
cmp
push
test
add
mov
or
sbb
mov
stos
jae
sbb
mov
into
subb
cmp
rorl
lods
adc
aam
adc
icebp
je
pusha
testl
pop
pop
data16
outsl
movsl
add
pop
add
and
mov
jno
jnp
gs
out
mov
ret
out
mov
inc
dec
jp
icebp
fstpl
push
push
sbbl
ror
aaa
ja
mov
add
xor
xchg
sarb
push
mov
jae
push
push
add
xor
push
push
rcll
pop
jnp
mov
pushf
xor
mov
mov
and
divl
es
sbb
imul
jns
leave
daa
arpl
inc
push
roll
pop
outsl
inc
xor
lds
addr16
mov
negl
in
dec
adc
inc
mov
and
cld
loop
pop
flds
mov
stos
jb
mov
icebp
xchg
adcb
sub
cmp
cmp
inc
push
pop
sbb
mov
xlat
rorb
outsb
push
xor
dec
stc
or
aas
pop
out
add
mov
push
or
cmp
cmc
xor
mov
push
movsb
mov
dec
neg
xor
adc
mov
clc
jb
repz
dec
add
pop
or
lea
mov
push
fwait
add
pop
dec
jle
ret
cmpsb
push
icebp
and
cmp
lock
pop
aam
loopne
jb,pt
fnstenv
xor
testl
cmp
sub
mov
fwait
jb
pop
daa
mov
xchg
push
inc
and
add
pop
xlat
pop
in
sahf
and
fadds
and
inc
in
imul
lods
icebp
sub
in
negb
add
xchg
test
mov
and
adc
mov
test
js
sub
aaa
movsb
inc
stos
fstps
xchg
and
in
xchg
rorl
mov
clc
push
mov
leave
xchg
and
test
dec
sti
push
icebp
popa
dec
xchg
imul
shrb
loope
dec
mov
jne
and
or
gs
push
inc
jno
pushf
or
cmc
add
adc
add
das
mov
xchg
loope
pop
pushf
mov
movsb
sub
xchg
div
ret
lds
jmp
sbbb
add
sub
sub
pop
mov
or
push
dec
lods
add
add
shl
inc
lcall
inc
xchg
subb
movl
or
inc
jecxz
int3
add
icebp
push
lcall
mov
imull
push
js
cli
sti
xchg
jno
mov
mov
push
xchg
push
divl
jmp
rorb
push
inc
lods
les
cld
xor
sti
mov
dec
in
mov
pop
jbe
jbe
ret
sbb
lock
out
push
xor
shr
repz
std
and
jmp
ret
cmc
int3
pop
and
mov
xchg
daa
fnstsw
out
mov
lds
inc
nop
aas
cs
cmpl
mov
add
jmp
arpl
lds
pop
negb
xchg
mov
mov
add
jne
lods
xor
jbe
pusha
or
ljmp
jb
or
into
mov
and
fisttps
and
test
push
adc
xchg
jae
or
and
addl
rorb
or
fs
adc
push
jg
push
sbb
outsl
push
pop
mov
mov
and
call
pop
sbb
inc
pop
cmp
pop
mov
flds
add
add
sub
adc
dec
les
mov
scas
push
test
add
adc
outsl
dec
mull
daa
inc
xchg
sub
jbe
jo
jmp
repz
mov
and
push
imul
sbb
adc
pop
push
inc
lock
mov
sbb
cmp
orb
lea
aad
adc
mov
mov
lods
ret
shll
mov
xor
loope
push
jg
ss
rcrb
add
icebp
pop
dec
shll
and
push
pop
cmpsl
shlb
aad
inc
adc
jge
inc
cmp
sub
addr16
out
dec
pop
ret
inc
icebp
mov
cmp
jge
add
xor
fistl
jmp
mov
xchg
cli
push
aaa
aam
loope
pop
pop
jnp
jge
and
xchg
adc
cmpsb
hlt
and
and
pop
or
loope
sub
mov
sbb
lods
mov
jp
and
std
inc
push
cmpsl
call
adc
dec
jmp
adc
mov
adc
clc
popf
pop
fldl
adc
roll
and
mov
or
ficompl
aas
stc
imul
ja
bound
push
add
out
rcl
or
repz
ja
add
in
pop
push
aam
inc
mov
cmp
add
repnz
lock
adc
xchg
icebp
shrb
nop
bound
stos
sub
and
cmpl
popa
or
inc
subb
lcall
mov
mov
leave
fsubs
fildl
js
push
fnsave
rolb
pusha
add
sub
cmp
gs
and
sub
pusha
sbb
xor
jge
push
add
and
mov
push
hlt
fprem
cmp
test
test
pop
mov
ja
mov
adc
jl
mov
out
lret
fadds
push
mov
hlt
mov
insl
and
push
imul
popf
das
flds
or
or
pop
mull
daa
cli
mov
das
mov
or
test
ja
jg
sub
subb
iret
push
out
jmp
jp
jg
pop
pop
sarb
and
jno
and
or
cmp
ficomps
xor
fdivs
push
push
dec
xor
jp
aas
orb
lock
pop
lea
jmp
sub
imul
mov
inc
xchg
outsl
sahf
scas
lcall
imul
aad
cmp
inc
rcrb
pop
mov
in
movsl
les
iret
into
loopne
jmp
xadd
in
inc
dec
je
int
in
fwait
mov
cs
add
dec
mov
jmp
push
inc
cmp
dec
adc
jg
in
in
and
shl
sbb
mov
mov
push
icebp
icebp
or
les
mov
dec
pop
mov
inc
das
pop
icebp
push
cmp
push
fdivs
pop
pop
sahf
into
jnp
mov
dec
ret
mov
mov
xchg
add
mov
rsqrtps
sbbb
andb
cmp
add
xor
push
xchg
pop
or
shl
rclb
and
loop
popf
inc
jae
and
pop
add
nop
lock
sub
xlat
test
mov
add
loope
rcll
xor
or
call
sti
jg
push
filds
push
mov
jne
ficoms
xorl
sbb
pop
shll
mov
and
icebp
ja
pop
mov
scas
rcl
or
jmp
inc
imul
mov
inc
ds
mov
punpcklwd
negl
out
add
cmp
cs
inc
loope
add
cmp
xor
pop
cmc
pop
enter
shl
sub
out
andw
std
mov
dec
stc
push
rcrl
mov
mov
cmpsl
jl
xor
inc
pop
push
add
hlt
jno
and
or
sbb
pop
inc
push
jb
lahf
inc
sbb
sub
bound
or
xchg
jmp
das
mov
jmp
push
jecxz
sbb
sub
aas
xchg
das
mov
pusha
mov
in
insl
pop
pop
xor
sbb
mov
dec
push
cmpl
mov
in
fstpl
cs
push
jo
add
add
sub
inc
not
add
push
mov
popa
push
cmp
cmp
adc
shlb
mov
idivl
mov
call
ja
je
outsl
orb
inc
sub
sti
ret
shll
and
sti
cmp
repz
or
mov
mov
in
push
pop
adc
push
sarb
cmp
jge
outsb
nop
push
pushf
pop
outsl
push
je
cmc
pop
pop
xor
popa
lds
in
lahf
add
dec
or
cmc
jecxz
test
push
imul
shlb
push
pop
inc
xchg
leave
cli
sbb
push
pop
stos
sbb
inc
and
cs
loope
aad
mov
and
ret
rclb
nop
lahf
cwtl
ja
ret
ljmp
xchg
daa
jmp
shl
fcoml
sub
jno
xlat
inc
or
inc
daa
sbb
pop
xlat
loop
test
icebp
push
pop
movsl
pop
cmp
pop
fists
mov
fmul
ret
add
fstps
test
jl
push
xchg
xor
sub
pop
xor
mov
pop
int
test
stc
jae
add
scas
rcrl
bound
gs
pop
jbe
cmp
xor
addr16
cmp
jno
inc
push
jl
adc
sti
lds
push
hlt
xchg
je
mov
push
popa
je
mov
rorl
je
mov
add
jle,pt
inc
icebp
xchg
add
adc
jb
xor
jns
inc
push
ret
cld
push
fidivl
in
roll
outsb
outsl
inc
es
sbb
jge
cs
and
pop
mov
pop
add
repz
cmc
xor
adc
bswap
push
mov
leave
roll
pop
xor
sub
insl
add
test
jo
dec
out
loop
mov
fists
and
cs
scas
jle
pop
paddusb
std
lds
pusha
and
les
mov
lds
inc
inc
std
and
data16
fnstsw
sbb
clc
movsb
add
mov
and
movsb
outsl
mov
leave
add
pop
in
jae
add
jl
inc
aam
rorb
outsl
sub
lock
jbe
and
sbb
filds
jb
sarl
in
out
cmp
sub
mov
jo
not
inc
call
nop
outsl
xor
pop
adc
pop
ret
not
jmp
pusha
rcl
cli
popf
push
sub
ja
into
popa
inc
lds
lods
xchg
jae
pop
lcall
jo
jl
mov
sub
pop
loop
mov
pop
xchg
jae
push
xor
and
popf
push
pop
cs
cmpsl
cmp
and
dec
push
cmp
adc
ret
dec
std
xlat
test
mov
pusha
jno
inc
in
dec
and
je
or
pop
xchg
nop
pusha
sub
push
add
push
push
or
push
into
xchg
mov
mov
mov
xor
imul
add
fisubrs
dec
stos
sub
ja
add
sbb
push
mov
in
mov
xchg
stc
push
jmp
mov
mov
jle
mov
loope
lds
out
mulb
or
scas
cmp
inc
cli
popa
jne
xor
aam
jns
or
cld
jg
out
xor
hlt
adc
loopne
push
scas
mov
test
mov
dec
scas
pusha
setl
mov
push
daa
push
xor
and
pop
pop
jmp
out
ret
lret
loope
cmp
movl
daa
or
jmp
inc
mov
insl
sub
add
sti
rclb
adc
data16
ror
mov
pop
arpl
cmp
popa
cmp
icebp
push
inc
jmp
sub
testb
lahf
dec
pop
add
sbb
daa
mov
inc
out
fistps
pop
cltd
add
dec
es
mov
into
jne
jle
frstor
jecxz
test
pushf
stc
das
shll
aam
inc
inc
xlat
repnz
mov
push
jns
mov
dec
adc
push
dec
fwait
test
push
mov
and
dec
cli
xchg
add
adc
push
adc
shll
pop
fmull
jne
fsubl
pop
stos
add
lea
idivb
add
pop
xor
push
call
xor
push
mov
ja
hlt
push
sub
cmpsb
iret
rol
lods
out
or
fsubr
lds
pop
jmp
ds
pavgb
mov
jnp
clc
sub
fbstp
jne
add
push
ja
dec
daa
andl
adc
mov
insb
adc
pop
mov
adc
idivl
outsb
mov
sub
push
push
inc
aam
sbb
or
data16
jae
scas
movsb
sbbb
mov
jg
dec
dec
ds
lret
xor
imul
jb
cwtl
mov
call
cmp
dec
push
ret
rorl
adc
cmp
pop
xchg
xlat
jmp
data16
cmp
ficompl
out
movsb
pop
and
adc
lea
mov
mov
dec
shl
adc
push
push
dec
mov
xchg
mul
cltd
xchg
movsb
ds
xchg
fs
test
mov
aaa
outsb
lds
ds
dec
push
and
mov
mov
fstl
mov
cmp
ret
lds
jg
in
testl
lahf
and
daa
pop
push
loop
inc
mov
sub
and
fsub
mov
jmp
mov
mov
addr16
dec
fisttpll
inc
or
pop
stc
cld
imul
mov
insb
xlat
sbb
mov
lcall
push
shlb
dec
loopne
push
jbe
push
aam
jmp
repz
subl
test
mov
jb
insl
mov
ljmp
pop
pop
sti
in
add
xor
jmp
push
addb
adc
call
adc
out
fcoms
mov
and
mov
pusha
dec
movl
and
adc
sub
in
add
aad
adc
das
inc
cmpsl
mov
rcl
stos
shrl
cmp
xchg
fstps
xchg
mov
int3
pop
push
push
push
loop
cmpb
sahf
sub
sbb
adc
bound
mov
lock
lea
jmp
dec
lds
fiaddl
or
mov
pop
pop
aad
push
fcmovnu
sub
sbb
mov
ret
jmp
daa
inc
inc
insb
xchg
and
jp
push
lahf
push
xchg
lds
or
jmp
xor
jge
inc
or
sarb
pop
lds
pop
mov
inc
sbb
xor
add
rorb
sub
and
imul
pop
sub
shll
andb
loope
das
lods
dec
jmp
test
out
fwait
add
ljmp
push
xor
or
pusha
mov
mov
xchg
mov
sbbb
mov
push
in
lea
pop
or
test
mov
pop
push
scas
sub
lahf
sti
push
xchg
add
xlat
and
xor
inc
xor
in
jmp
or
or
subb
push
jne
call
fadds
mov
repnz
dec
add
cmpsl
mov
xchg
add
cmp
mov
shl
mov
fs
lods
jmp
pop
jbe
inc
pushl
les
cmp
mov
dec
or
sahf
mov
outsl
add
pop
loopne
xor
push
and
orl
and
adc
dec
and
dec
rcrl
or
xor
movsb
or
jb
pop
repz
insb
or
dec
xacquire
xchg
call
or
pop
jle
xchg
repnz
add
jmp
add
push
pop
fiadds
sbb
sar
mov
or
inc
leave
and
test
stos
sbb
adc
and
pop
xor
or
fnsave
sub
sbb
pop
aam
push
mov
sub
xchg
sbb
add
jp
aam
sbb
scas
sbb
data16
lods
xchg
and
pop
mov
stc
adc
data16
mov
cmp
repnz
dec
imul
shll
jmp
pop
push
sti
xchg
xor
add
roll
loopne
andb
loop
adcb
push
add
xor
add
mov
movsl
mov
mov
sbb
add
adc
pop
addb
pop
push
subb
dec
push
jmp
cltd
cld
and
lea
inc
mov
pop
arpl
or
adc
push
push
adc
xor
test
ficoms
test
inc
rorb
ljmp
lock
cmpsw
or
and
lods
add
mov
lcall
in
nop
arpl
stos
fsts
adc
add
js
das
mov
jecxz
xchg
out
adc
push
fdivl
nop
rorl
mov
mov
nop
xor
or
loop
sbb
xorl
push
in
push
rorl
dec
inc
fmul
rol
or
in
mov
add
xchg
xor
adc
adc
mov
mov
jo
or
and
les
shl
or
mov
es
addr16
dec
or
or
cwtl
xorl
push
lock
inc
ffree
inc
sub
arpl
push
mov
test
jl
pusha
pushf
cld
call
out
loop
das
push
mov
mov
jl
cmp
inc
sub
add
adc
cmp
inc
popl
or
jne
sbb
je
jp
fiadds
lock
sbb
xor
add
mov
xor
cmp
add
imul
bound
movsl
sub
jmp
dec
enter
mov
iret
fimull
push
or
sbb
jecxz
mov
das
lea
pop
sbb
cli
push
cmp
jnp
mov
mov
or
push
mov
sub
popa
pop
xor
xchg
jo
stc
jb
das
and
sbb
push
sub
adcb
mov
xorb
fstpl
pop
cmc
adc
ss
pop
shl
jmp
sti
inc
test
pop
push
cmp
clc
jp
popf
jmp
pop
push
add
aad
or
std
or
pop
sub
shlb
push
lds
jno
push
sbb
mov
inc
pop
adc
push
dec
scas
fnsave
push
or
push
mov
pop
lock
test
mov
leave
loop
mov
ret
dec
add
incb
add
popf
lea
add
shll
adc
jo
fs
stc
or
sub
dec
jmp
fcoml
jnp
std
mov
sbb
pop
pop
mov
adc
xchg
add
adc
mov
sub
push
pop
inc
push
xor
aas
dec
adc
pop
inc
and
mov
mov
jge
sti
daa
sub
pop
mov
inc
xlat
inc
pop
pop
arpl
or
push
sub
pusha
jns
popf
push
testb
imul
loopne
lahf
dec
into
mov
xor
jmp
jbe
cmp
mov
enter
cli
fisttps
jmp
in
stc
xchg
fcmovu
or
inc
cmp
adc
fisubrs
divb
les
mov
loop
loopne
stc
mov
pop
lret
push
enter
or
dec
jmp
cli
out
pop
and
aas
cmp
and
in
je
mov
aaa
dec
dec
fildll
mov
movb
sbb
outsl
int3
inc
sub
add
sub
adc
pop
xchg
mov
imul
push
sbb
int3
cmp
call
pop
icebp
mov
xor
fwait
testl
aad
mov
das
and
sub
clc
adc
add
lahf
inc
loopne
sbb
mov
out
dec
dec
ljmp
dec
xor
cld
pop
in
pop
pop
dec
ret
loop
ljmp
inc
cmp
and
fimuls
or
xchg
xor
inc
sub
cmp
and
cs
shlb
add
add
inc
flds
movsl
pusha
icebp
mov
cmpb
xor
push
cld
push
add
mov
movsb
jge
sub
pop
jecxz
cs
push
dec
sbb
pop
sub
imul
add
scas
int3
cmp
cli
testl
xor
lret
lods
push
daa
push
lret
fistl
aad
ds
call
adc
pop
xor
es
clc
aas
fdivrs
jne
inc
dec
repnz
sub
pop
out
addb
push
adc
mov
or
repz
test
orb
xchg
xor
pop
test
add
shlb
andl
test
sub
pop
in
or
mov
pop
pop
push
stos
mov
or
sub
js
cld
aaa
pop
push
push
push
or
scas
rolb
push
das
cli
sub
push
cwtl
lcall
jnp
dec
ss
data16
lcall
mov
inc
cld
jp
jl
dec
cwtl
mov
shll
mov
mov
xor
mull
xchg
imul
loopne
pop
inc
mov
mov
xchg
loopne
test
or
inc
insb
frstor
xchg
pop
jmp
cmpsb
sub
sbb
test
xchg
jmp
inc
call
adc
gs
jp
ror
mov
or
int3
int3
les
clc
lea
cmp
loop
xor
add
roll
pop
mov
sub
jns
shr
mov
pop
xlat
jno
or
scas
cmpsb
test
or
cld
push
out
or
push
int3
jmp
adc
mov
add
dec
scas
adc
cmpl
icebp
add
pop
sub
adc
xchg
insb
dec
in
outsl
std
cld
jl
xor
mov
mov
lcall
push
mov
and
add
ret
sub
fwait
scas
xor
push
cli
test
xchg
sbb
mov
movsl
call
pop
nop
push
cmp
int
jmp
push
push
xor
sub
push
cmp
lcall
add
mov
pop
jae
popa
sub
or
inc
sarb
and
jmp
scas
popl
mov
sub
dec
incb
out
daa
out
jmp
pop
xor
pop
in
xchg
adc
fldenv
imul
sbbl
add
loope
inc
sub
out
out
stc
popa
or
cltd
pop
testl
dec
jp
push
jne
and
push
mov
sub
neg
sub
xchg
cmp
dec
inc
repz
xor
sti
mov
pop
mov
movsb
mov
push
popf
inc
dec
or
cli
jle
pop
and
insl
xchg
add
jecxz
and
adc
pmaxub
in
cmp
add
inc
and
call
aam
inc
add
or
orb
add
cmp
xor
loopne
push
sahf
stos
add
pop
fildl
push
jmp
pop
mov
adc
sub
shlb
fisttps
test
das
mov
jmp
mov
xor
adc
push
neg
orb
leave
loopne
fs
push
mov
add
jecxz
pop
inc
stc
mov
sbb
pop
or
aam
or
enter
test
leave
push
jns
mov
pusha
fldl
std
sbbb
xor
sub
fstps
loope
icebp
cmp
pop
mov
xor
mov
xchg
pop
push
add
stc
sub
hlt
xor
dec
mov
add
rolb
xchg
inc
in
pop
push
pop
ret
ss
bound
jl
add
cmp
jmp
xchg
mov
inc
pushf
int3
push
push
fiadds
push
stc
insb
pop
cs
adc
adc
cmp
push
enter
pop
and
dec
push
lock
push
and
pusha
sub
push
mov
dec
sbb
xchg
cmc
or
jae
pusha
cltd
xor
add
adc
in
sub
ret
lds
pop
dec
add
dec
push
es
adc
test
popf
popa
arpl
mov
and
xor
test
pop
push
fwait
inc
pop
push
cmpsb
jns
outsb
add
push
imulb
mov
dec
cmp
sub
push
aaa
mov
lret
mov
adc
icebp
test
scas
cmpsl
nop
dec
sub
jle
filds
mov
mov
dec
xor
or
pop
mov
rcll
adc
cmp
fiadds
xchg
sub
dec
inc
lds
xor
sub
jmpw
cmp
ret
nop
fwait
add
sub
int
frstor
sub
push
sbb
adc
jle
hlt
mov
pop
mov
pop
push
mov
mov
divb
loope
push
xor
adc
inc
mov
dec
add
jnp
sub
mov
mov
dec
or
ja
xchg
sub
fdivs
out
lock
xchg
aam
sbb
sub
mov
push
push
push
jge
or
iret
push
inc
push
sub
and
mov
mov
mov
flds
ret
dec
pusha
repnz
sbb
and
adc
pop
fsubrp
dec
cmpsl
pop
imul
mov
or
les
cmc
or
sbb
out
cmp
add
cmpb
icebp
sub
xor
in
ds
jnp
hlt
add
enter
inc
inc
or
ljmp
nop
dec
mov
fs
pop
add
repz
sub
fmuls
pop
sub
push
scas
inc
mov
cmp
clc
jle
sub
movsb
adc
cmp
inc
or
test
mov
jmp
out
push
push
push
scas
test
push
add
int3
cmc
cmp
xor
sub
xchg
mov
xor
fsubs
dec
arpl
push
pop
testl
inc
adc
adc
or
push
enter
and
rcrl
xlat
aam
adc
enter
dec
pop
xor
ds
push
add
aas
and
call
push
adc
insb
out
xor
add
popf
mov
in
fsts
push
into
out
lock
inc
aas
das
fwait
daa
pop
in
push
pop
mov
out
pop
std
or
xor
add
cmp
ds
cli
cmp
pop
leave
je
adc
fmuls
inc
test
mov
hlt
add
jne
xchg
xor
sbb
xor
xchg
aad
jmp
es
xor
inc
and
ret
xchg
fsubl
mov
push
sbb
or
psubb
push
push
mov
dec
jmp
insl
dec
and
cmp
shlb
shr
and
imul
push
dec
jge
aas
fcomps
xchg
push
and
lock
or
inc
add
arpl
int
push
fistpl
sbb
arpl
dec
xor
sbb
test
inc
mov
fsubrs
or
leave
cmc
sbb
sarb
jecxz
dec
loopne
nopl
mov
mov
shl
pop
xchg
adc
fcoml
adc
loop
dec
scas
or
cli
sub
xchg
leave
out
push
jbe
mov
sub
pop
nop
xlat
shr
or
cmc
xchg
pushf
nop
adc
pop
adc
dec
mov
xchg
cmc
testl
cmc
shll
add
jmp
pop
push
xchg
jmp
jge
push
xchg
sub
push
mov
dec
fildll
mov
add
mov
mov
jg
push
sbb
adc
cli
subb
jne
sbb
mov
jnp
rcrl
sbb
pop
push
sbb
loop
leave
dec
pop
push
and
jge
mov
sti
or
data16
push
push
pusha
fsts
cs
mov
not
lods
and
or
add
sbb
decb
mov
repnz
outsl
sub
mov
insb
pop
pushf
sahf
mov
addr16
xlat
jae
sbb
dec
ljmp
andl
xchg
dec
pop
sbb
push
pop
cli
push
loop
and
jl
sbb
xchg
movsb
test
add
inc
adc
add
push
push
dec
push
adc
jl
and
sub
add
xor
jbe
dec
or
adc
add
push
mov
mov
popa
xor
pop
mov
lcall
mov
add
scas
push
add
clc
pop
shl
xchg
mov
loop
repnz
fadds
mov
movlps
in
jne
adc
push
sub
adc
clc
movsl
pop
mov
out
cwtl
shl
bound
mov
push
push
mov
mov
xchg
mov
or
jmp
popf
pop
call
std
adc
add
push
fisubrl
mov
cmp
and
sub
enter
roll
mov
rorl
mov
mov
mov
dec
lea
dec
xor
jmp
adc
insl
mov
pop
pop
stos
xchg
dec
fmull
stos
subb
add
daa
dec
or
xchg
push
add
pop
andl
adc
lods
dec
mov
inc
popf
movsb
add
bound
iret
xchg
add
and
test
ret
push
jmp
imul
dec
push
inc
movsb
dec
cmp
add
int3
pop
je
add
mov
jnp
xchg
push
add
in
xor
mov
movsl
in
lcall
sub
jle
bnd
enter
add
outsl
mov
push
push
jo
jmp
mov
mov
fistpl
pusha
and
scas
inc
out
mov
xor
cmp
cmp
lock
jae
pop
push
mov
jmpw
sbb
sbb
cld
int
add
ljmp
pop
mov
push
and
bnd
pop
int3
dec
int
push
insb
fwait
jo
pop
push
xchg
cld
inc
in
je
cmp
adc
xlat
bswap
shlb
push
push
or
fcmovnb
add
cmp
cld
outsl
loopne
aas
adc
repnz
lds
inc
mov
dec
loop
mov
add
pushf
xor
ret
jg
cmc
cmpsb
xchg
dec
adc
fcoms
add
dec
lea
sub
ljmp
xchg
test
or
and
fsubs
sub
xor
jmp
inc
sarb
dec
je
add
loop
xor
je
cmc
adc
mov
xchg
iret
pop
push
pop
jne
jmp
and
outsb
xor
add
push
add
jg
or
push
mov
rcr
pop
push
mov
sti
movlhps
int3
xor
call
mov
les
scas
mov
pop
rclb
adcl
hlt
inc
or
mov
ret
or
inc
pop
and
fstpl
mov
lock
sbb
sub
jge
ficoml
and
or
pop
nop
jo
mov
inc
call
inc
lret
mov
cs
jnp
in
or
icebp
jp
jg
sub
aad
or
stc
fcmovnu
xchg
push
add
out
adc
leave
cmc
mov
mov
jmp
and
mov
cmp
mov
pop
add
xchg
dec
sub
pop
sarl
repnz
inc
leave
push
sub
dec
xor
orb
cmp
pop
mov
out
bound
add
inc
mov
adc
fwait
jbe
and
push
outsl
xchg
or
test
or
outsl
push
push
pusha
stos
jbe
sbb
push
loop
push
cld
scas
add
shll
cmp
inc
shl
fidivs
addb
mov
dec
sub
lock
jmp
push
pop
push
lds
sti
push
mov
hlt
sub
pop
add
repnz
es
push
push
push
adcb
addr16
dec
sub
inc
xor
add
add
add
mov
mov
shll
add
scas
out
out
dec
or
or
enter
out
popf
inc
movsb
mov
xchg
mov
adcl
pop
sub
mov
mov
aad
jge
nop
not
xchg
sub
and
out
or
jmp
orb
sbb
pop
jo
pop
mov
shll
push
sub
insl
ret
fadds
push
pop
pop
repnz
dec
push
inc
ss
movsb
aad
inc
scas
pusha
sti
sub
push
or
adc
inc
push
mov
push
das
cld
negl
inc
rcr
fbstp
je
testb
mov
sbb
das
mov
pop
cmp
pop
call
or
add
jnp
add
hlt
iret
dec
push
xor
push
aad
imul
pop
in
inc
adc
dec
clc
mov
pushf
lahf
jns
push
pop
xor
rcll
mul
push
cs
jae
ret
jb
push
iret
adc
fdivrs
leave
imul
cmp
inc
push
sahf
push
call
cmc
push
rcl
rclb
lods
lret
cmp
pushf
loop
pushf
daa
ljmp
xor
cmp
pop
dec
scas
ret
mov
xchg
daa
mov
mov
xor
jns
pop
jmp
pop
out
cmp
sub
mov
add
movsb
or
add
addl
in
es
mov
and
cmpsb
push
or
and
adc
mov
icebp
or
or
xor
xchg
aas
movsb
dec
adc
inc
loopne
je
pop
pop
jecxz
jl
dec
adc
inc
mov
andb
sub
std
pop
add
mov
gs
or
pop
stc
dec
or
cs
es
jne
cli
sub
and
nop
xchg
pop
push
adc
shl
or
jno
stos
andb
push
add
out
jmp
sti
add
cmpsb
cmp
mov
mov
push
adc
or
lds
subb
icebp
nop
int
inc
xor
add
sub
aam
sub
and
mov
in
push
dec
xor
es
imul
lret
fidivrl
push
cmpsl
add
jl
aad
test
fisubrl
sub
in
add
cmp
fs
cmp
mov
push
icebp
inc
popf
and
dec
scas
ss
pop
jnp
add
add
enter
sbb
ret
sbb
push
jo
push
imul
add
scas
and
les
xorb
mov
push
mov
cmp
in
aam
xchg
dec
pop
inc
jmp
dec
inc
lods
fidivrl
add
push
or
xor
push
mov
jae
and
or
or
xor
inc
dec
add
mov
adc
and
loop
sarb
sti
push
add
push
into
mov
pop
aad
leave
subl
in
gs
pop
mov
les
mov
mov
push
sbb
sbb
or
pop
fwait
mov
imul
jae
lods
sub
add
add
cmpsl
nop
xchg
aaa
mov
pusha
call
or
xor
daa
pop
sub
xor
mov
dec
mov
sbb
cli
dec
cs
outsl
inc
or
lahf
add
adc
jnp
or
pop
loopne
ret
jge
iret
cs
fld
repnz
ficomps
jo
mov
cmp
push
add
out
push
mov
and
cmp
and
mov
pusha
jno
repnz
add
insl
test
jmp
in
popa
sub
out
inc
cld
adc
pop
sub
cmp
jne
or
xchg
das
push
adc
mov
gs
jmp
jg
mov
sub
or
sbb
mov
and
cmpsb
mov
into
out
xor
add
sbb
inc
frstor
pop
iret
mov
data16
push
loope
xor
jecxz
lods
push
in
aas
adc
pop
mov
push
mov
shrb
xlat
je
pop
pop
aaa
sub
imul
sub
xchg
cli
fsubl
pushf
into
push
mov
popa
push
or
xor
fdivs
or
pop
sbb
enter
xor
push
dec
not
leave
popa
pop
loope
mov
push
mov
or
pop
add
cmp
jle
mov
or
mov
xchg
jmp
add
or
inc
sbb
dec
xchg
sahf
cs
jmp
push
cmp
inc
jmp
test
das
ss
loop
xchg
incb
pop
cmp
jecxz
or
xor
xor
cmp
mov
sub
fidivs
push
pop
pop
out
clc
add
gs
sub
in
add
inc
inc
jne
adc
loope
and
add
and
and
loope
clc
or
jmp
sti
orl
ret
or
xchg
dec
xchg
add
push
mov
adc
mov
pop
sub
push
inc
out
push
test
cmc
jb
repnz
sbb
add
fcomps
inc
jmp
add
add
aam
add
clc
out
sbb
movsb
jae
push
pusha
mov
xor
jg
xor
pop
push
pushw
lcall
inc
mov
hlt
nop
shlb
aad
cwtl
or
add
cwtl
repnz
shl
into
jmp
push
mov
xor
fnstenv
ret
out
jmp
aad
push
scas
jp
jns
andb
xor
sbb
loope
jl
clc
or
pushf
mov
and
sub
jecxz
sub
popf
add
jmp
jbe
out
call
or
test
cmp
pop
or
out
shl
sbb
inc
inc
outsb
or
push
stos
das
xor
hlt
inc
push
add
dec
xchg
xorb
xchg
clc
mov
les
stc
pop
dec
movsb
mov
sub
xchg
ljmp
push
out
push
repnz
xor
jecxz
mov
jno
or
js
jmp
jno
mov
js
pop
dec
add
arpl
xchg
lock
inc
mov
div
xchg
daa
imul
sbb
jecxz
frstor
push
rcrb
push
sarb
cmp
dec
mov
jne
jge
dec
inc
les
jne
xor
sub
into
and
mov
push
fmuls
cmp
push
test
add
rcrb
adc
pop
jmp
nop
ret
ljmp
jae
roll
lods
jmp
sub
and
andb
jg
mov
sar
push
push
jno
mov
pop
push
xorb
aam
repnz
insb
jae
sub
mov
mov
add
repz
loope
adcl
subb
out
pop
inc
shll
int
pop
cwtl
pusha
jge
fstpt
xorl
xchg
aas
js
and
into
push
ja
dec
sub
sbb
or
das
pop
movsl
stos
and
out
add
bnd
push
movsb
mov
aad
loopne
scas
in
sub
imull
clc
lds
mov
push
xchg
and
mov
sub
or
outsb
cltd
flds
xchg
pop
rorb
mov
jns
add
push
in
jecxz
push
sbb
les
ficoms
jle
pop
push
ds
mov
lods
ljmp
push
ficompl
mov
jg
jl
pushaw
dec
sbb
lret
cmp
addb
or
aam
fldz
or
pop
or
push
xor
xor
stos
jmp
fst
cli
add
rcrl
xlat
lock
pop
jb
out
mov
std
xorl
jo
rorb
imul
ljmp
xlat
sub
js
sbb
jbe
sub
jb
jge
test
loop,pn
pusha
mov
xor
sbb
test
or
mov
inc
orl
mov
push
movsl
xor
or
dec
mov
sarb
fsubs
inc
pop
repnz
into
or
sub
in
inc
clc
stos
lret
jmp
pop
push
gs
cmp
sub
xor
dec
add
cli
push
dec
xlat
cltd
das
gs
pop
lock
mov
xor
popa
mov
sbb
mov
out
sbb
addr16
jge
push
int3
les
pop
ret
jl
inc
mov
icebp
in
ret
jne
aaa
or
sti
jno
lock
jb
xchg
push
das
addr16
mov
lock
and
xchg
adc
and
pusha
pop
rcl
sahf
jo
push
mov
cmp
lds
push
push
adc
sbb
and
mov
shll
and
stc
xchg
lret
pop
fidivs
orb
pop
nop
jbe
adc
mov
or
mov
out
jmp
sbb
clc
xchg
mov
inc
mov
cmp
ret
dec
scas
mov
bound
pop
outsb
test
into
and
push
or
mov
push
mov
push
push
xorl
sub
cs
popf
js
add
cli
sbb
push
iret
ret
pop
xchg
call
and
cmp
push
push
push
syscall
call
sub
add
fsts
pusha
or
inc
dec
cmp
inc
cmp
jl
or
pop
not
sub
pop
push
test
add
loop
dec
gs
mov
mov
pop
add
pop
adc
jno
bound
icebp
jg
mov
cmpsb
js
and
pop
pop
sbb
dec
int
mov
inc
outsl
nop
outsb
es
push
dec
adc
loop
fistl
mov
shlb
cwtl
xchg
pop
cltd
lds
jl
cltd
pop
pop
jge
mov
or
pop
push
sbb
movsl
mov
outsb
jp
sbbl
mov
or
pusha
bound
pusha
xor
into
push
pop
filds
subl
jp
loopne,pn
add
mov
rcrl
bnd
jmp
stos
and
jne
pop
scas
cmp
ljmp
ficoms
xor
int
jo
ret
ds
pop
ret
pop
mov
or
jg
daa
add
shl
scas
inc
mov
jae
in
fstpt
or
notl
fcompl
pop
sub
mov
nop
xchg
mov
sub
ficoms
lcall
inc
push
sbb
stos
aas
and
int
das
loopne
lds
and
lret
test
in
jmp
faddl
dec
and
out
repz
pusha
jmp
or
jnp
xor
xchg
jbe
loopne
pop
mov
sbb
imul
cld
stc
sbb
fnstcw
outsl
inc
dec
cs
jo
pmaddwd
and
adc
add
mov
mov
and
dec
jmp
or
shl
mov
pop
mov
fs
xchg
push
xchg
push
inc
xor
or
mov
inc
jl
adc
jl
fistpll
xor
and
push
fdivrl
pushf
adc
push
add
add
add
call
movsl
adc
jo
push
push
add
inc
fdivrl
aad
mov
lods
daa
fists
call
fidivl
mov
push
ror
adc
push
aad
out
sahf
lods
mov
fnstcw
adc
push
jecxz
xchg
or
rcr
mov
push
dec
pop
add
rcl
cwtl
les
ficoms
inc
add
scas
add
inc
xchg
sti
sub
cmp
sbb
push
and
call
pop
sbb
jl
rcrl
addb
push
jmp
test
adc
and
pop
cltd
fstpt
sub
js
mov
pop
xchg
std
dec
add
pop
pcmpgtd
xor
push
jmp
sub
xchg
in
stos
flds
les
dec
or
add
inc
push
ds
cmp
aaa
test
or
sbb
pop
and
stos
stc
xchg
ret
dec
cmc
fs
xlat
mov
rorl
adc
mov
mov
mov
mov
add
imul
rcrb
aad
loop
add
xorb
push
mov
repnz
sbb
dec
sub
pop
add
loop
les
fadds
push
push
out
sbb
negl
addb
jmp
in
adc
not
xor
xchg
pop
and
mov
aaa
mov
add
push
orb
add
in
inc
ret
inc
adc
inc
outsl
or
jp
scas
push
adc
mov
add
decb
and
pop
test
mov
je
iret
add
push
mov
neg
popa
jae
add
cmpps
push
dec
test
lea
cs
fwait
and
push
cmpsb
xchg
add
andb
divl
jae
or
push
jne
add
jl
lahf
dec
daa
push
adc
or
shrb
in
jmp
repnz
leave
mov
xchg
or
push
mov
jmp
bound
imul
xor
add
jp
mov
testl
shll
inc
pop
cmpsb
iret
cs
arpl
notl
sti
jl
mov
sub
push
add
jmp
push
jae
ss
cmp
out
leave
repnz
fcoml
pop
pop
stos
xor
pop
cmp
sarb
js
and
xchg
and
stos
and
jmp
jmp
out
push
stos
cwtl
pop
ret
pop
jbe
jae
mov
repz
mov
and
fs
sbb
push
sbb
pop
dec
loope
popa
rolb
inc
stc
mov
mov
xchg
cltd
mov
jmp
ss
xor
fbld
jbe
cmpsl
add
dec
gs
jecxz
push
lret
adc
add
lret
inc
dec
cmpsb
push
clc
xchg
dec
mov
inc
sub
push
pop
dec
mov
xor
sbb
or
dec
push
push
mov
cs
out
or
mov
push
or
adcb
xchg
movsb
lret
loope
xor
and
add
repnz
fstps
outsl
sbb
rcrl
push
sbb
jmp
adc
fiadds
xorb
pop
dec
or
and
cltd
push
mov
xor
jae
mov
add
loope
sub
jge
mov
mov
push
fs
or
sub
cmp
sti
jns
mov
jecxz
repnz
test
loop
pop
aad
xchg
sub
fsts
or
lods
xchg
cmpsl
add
repz
je
push
fiadds
mov
cwtl
pop
or
jge
jb
dec
cmp
mov
arpl
pop
rorb
or
mov
or
pop
sub
test
inc
sbb
int
test
add
scas
add
daa
add
loopne
mov
inc
aas
dec
push
and
jle
sahf
cmp
pop
lods
pop
sub
fistl
and
inc
jle
push
sub
lret
adc
inc
lods
movsb
stos
sbb
orb
pop
or
lahf
cwtl
dec
adc
jne
inc
repz
nop
or
jl,pn
cli
insl
xchg
pop
adc
fisubl
jecxz
out
loope
sbbb
int3
clc
shl
in
in
imul
jbe
sub
fidivrs
scas
rol
xchg
jmp
lods
test
jnp
ljmp
sti
ret
je
int
movsl
jl
pusha
call
hlt
or
call
fcompl
push
lret
push
jnp
lods
ret
xchg
push
add
ss
jp
in
xorb
dec
and
mov
mov
popf
loopne
adc
adcl
add
or
pop
dec
stc
test
test
es
push
mov
jne
cli
repz
shlb
loop
jl
sub
iret
xchg
push
cwtl
add
jp
push
and
mov
pusha
jne
andl
loope
imul
js
jmp
xchg
push
mov
jnp
je
adc
mov
push
das
int3
subl
pusha
sub
test
pop
inc
or
pop
pop
or
fdivl
or
sub
pop
jge
testb
and
push
cs
imul
lock
inc
adc
repz
pop
fnstcw
or
or
mov
mov
pop
push
outsl
push
xor
xor
pop
dec
mov
mov
sub
aam
out
and
jle
and
mov
inc
push
cmpb
jg
inc
inc
inc
sub
dec
adc
or
push
out
mov
out
mov
and
bound
out
decb
xor
xchg
fidivs
jb
lds
push
push
push
pop
not
or
sbb
or
dec
sub
sub
clc
in
add
xor
sub
lret
push
mov
cmc
or
sbb
not
or
test
ja
loop
pop
jbe
inc
sub
sub
jnp
in
and
sbb
das
inc
pop
pop
mov
hlt
pop
nop
pop
pushf
xor
lods
push
xor
or
loopne
pop
stc
add
ret
pusha
ret
iret
dec
clc
xchg
add
arpl
push
sti
adc
or
pop
add
adc
enter
push
scas
xchg
roll
leave
lret
clc
dec
jmp
or
or
vcvtsi2ssl
shll
xchg
jns
and
dec
xchg
cmpsb
add
inc
add
clc
pop
push
into
jmp
push
dec
cmpsl
push
lahf
xlat
ficoml
xor
dec
push
push
pop
jmp
cmc
push
mov
mov
push
mov
mov
test
mov
xchg
jno
aad
ret
pop
icebp
push
lods
pop
test
jg
mov
sbb
rcrb
xor
sbb
dec
mov
ljmp
ds
out
add
imul
clc
xor
xchg
add
sub
sub
shlb
inc
aas
xor
mov
push
ret
jnp
dec
jnp
lret
cmc
mov
cmpsb
movsb
xor
sar
divb
dec
dec
pop
sub
sbb
sbb
push
or
out
loopne
adc
or
gs
aam
pusha
mov
mov
sub
stc
clc
inc
nop
xor
bound
int3
es
test
or
loopne
sub
fcoml
push
push
dec
add
sbb
jne
sbb
add
pop
cs
push
bound
dec
jp
add
addb
imul
pop
and
dec
jnp
or
adc
dec
push
pop
xchg
and
add
xor
or
shrl
jae
adc
push
cmp
add
push
repz
jmp
cld
into
sbb
cmp
mov
ficompl
or
jl
jno
test
dec
inc
jecxz
adc
and
outsl
push
or
scas
aad
rcl
idiv
push
push
push
jmp
stos
out
call
mov
push
add
fwait
pop
add
cmp
inc
cmp
xor
mov
sbb
out
jg
das
int
icebp
pop
mov
fcoml
dec
adc
mov
cli
adc
xor
lahf
pop
ficomps
fcoml
add
push
insb
push
stos
pop
sub
sarl
or
sbb
lret
ret
add
push
adc
sbb
push
ret
dec
loopne
push
dec
add
cld
aaa
pop
test
test
pusha
in
and
outsb
test
sbb
push
mov
inc
out
add
add
popf
shrb
pop
leave
fidivl
xor
adcb
xor
jns
mov
negl
dec
idivl
dec
adc
sbb
roll
lock
mov
popf
add
aam
stos
ss
rcll
into
ds
jne
in
inc
dec
dec
and
pop
add
sub
xor
je
dec
dec
cltd
imul
xor
int
and
mov
cltd
out
inc
or
pop
fcoml
jbe
push
fiadds
arpl
mov
hlt
pop
sub
test
mov
fisubrs
mov
push
mov
aas
scas
in
lods
xchg
jmp
addb
xchg
jmp
pop
inc
xchg
inc
lahf
lret
mov
push
pop
lds
or
inc
aam
paddsb
inc
fidivs
lock
jmp
lretw
cld
std
mov
pop
lds
sub
insb
ret
push
push
pop
pop
xchg
cmp
sub
jp
jbe
pop
dec
mov
in
and
mov
movsb
ljmp
mov
xor
sub
sbbl
pusha
dec
clc
add
dec
add
sub
or
xchg
jmp
lds
lods
jl
fldcw
out
cwtl
xor
negl
out
jmp
cmc
addr16
fimuls
lods
jbe
loop,pn
mov
add
or
dec
scas
pop
push
add
jmp
in
inc
sub
and
outsl
jns
pop
idivl
in
xchg
and
jne
pop
fimull
mov
cli
dec
js
lods
push
pop
push
jp
push
pop
xor
add
pop
loope
pop
sub
les
cmp
loope
scas
mov
pop
ljmp
test
cld
or
pop
ljmp
xor
adc
mov
int
xor
inc
add
ret
idivb
xchg
and
stos
nop
xor
add
movsl
loop
lods
lock
cmp
cmpb
loope
shl
lds
ja
sub
pop
jg
adc
jl
rclb
sti
fnstsw
adc
mov
or
push
dec
mov
mov
out
jge
das
mov
insb
push
xchg
fstl
loop
mov
inc
aam
jb
sub
bound
or
bound
dec
data16
push
push
pushf
sbb
pop
push
add
and
add
dec
mov
movb
dec
rolb
pop
out
jp
sub
mov
add
pop
dec
sbb
sub
xchg
imul
and
mov
in
jp
xor
repnz
jge
incl
push
and
jle
add
add
xor
aaa
and
mov
mov
out
mov
add
adc
stos
dec
out
cmp
adc
jmp
or
pop
mov
ja
jg
xor
and
mov
mov
je
clc
jmp
gs
inc
shrb
ja
mov
jmp
xchg
inc
pop
daa
jne
mov
jp
jb
stos
lods
mov
sbb
jl
cmpsb
push
adc
mov
push
and
pop
ljmp
pusha
shl
aam
rol
pop
repz
addr16
imul
inc
flds
gs
ds
je
insb
sub
sub
mov
push
xor
cltd
sar
lock
arpl
and
push
mov
lret
jmp
sbb
pop
sub
stos
into
lds
push
sbb
or
rorb
daa
mov
aaa
in
inc
mov
cmpsl
ds
icebp
inc
adc
inc
pushf
mov
rcrb
or
cmp
pop
rclb
cwtl
push
loopne
pop
jmp
shrl
jne
loop
xchg
adc
mov
cld
aaa
pop
mov
iret
lret
mov
push
mov
sbb
add
jp,pn
in
pushl
push
dec
out
addb
in
add
jmp
scas
mov
roll
inc
mov
je
outsb
dec
add
adcb
add
jo
mov
jle
insl
dec
jmp
or
pop
in
out
sub
jmp
pop
xor
loope
jb
xor
push
pop
lcall
push
inc
sub
bound
fisttps
lcall
push
lock
pop
or
into
mov
std
inc
subb
outsl
clc
out
jo
or
popa
push
mov
fdivrl
sub
and
adc
stos
mov
and
pop
and
adc
jne
out
push
loope
outsl
mov
adc
pop
gs
pushf
pop
popf
shll
test
mov
xor
dec
lock
cmc
lds
fisubs
gs
es
push
les
push
mov
sarb
gs
fwait
mulb
xchg
cmp
or
push
arpl
xchg
sub
jbe
push
dec
xor
inc
adc
jo
pop
clc
add
nop
dec
adc
pop
fsubrl
mov
xor
pop
add
andl
add
and
out
fsubrs
mov
xor
fwait
xchg
arpl
cs
js
xor
inc
das
daa
mov
pop
scas
inc
imul
and
clc
in
sub
push
pop
ja
cmpsb
and
les
mov
mov
dec
test
mov
push
mov
pop
in
sub
enter
adc
dec
cli
cmp
imul
sub
inc
out
in
mov
nop
mov
push
pop
and
out
out
sub
dec
jbe
or
fldl
das
push
dec
scas
jbe
jb
pop
and
addb
decw
jnp
xchg
adc
ljmp
inc
mov
lock
pop
or
lds
mov
lret
xchg
andl
subb
sbb
push
or
dec
pop
mov
adcb
adc
jmp
and
fwait
dec
mov
adc
notb
add
cmp
cmp
pop
rcll
sbb
shrb
dec
sub
ljmp
cmpsb
bound
mov
into
mov
add
sbb
pop
xchg
sbb
or
pop
dec
ffree
mul
loopne
cmp
ret
jge
push
mov
xor
mov
mov
scas
mov
in
dec
push
loope
xor
push
in
loop
stos
xchg
popf
ret
je
data16
rcrb
shl
es
push
test
cmp
in
add
pop
adc
cmc
or
jmp
or
das
in
lret
lds
add
mov
dec
dec
xlat
mov
ds
fisttpl
sub
cmp
repnz
add
mov
adc
daa
rcrb
add
and
push
sbb
shlb
rcrb
jecxz
fs
pop
or
jl
or
xchg
mov
add
imul
push
sbb
add
pop
stc
dec
lock
std
outsb
mov
xchg
mov
inc
mov
mov
push
and
fcomps
fmull
pop
push
add
inc
sbb
jle
or
push
scas
loop
inc
pop
add
xor
pop
mov
mov
ret
lds
in
mov
dec
aaa
pop
test
push
xchg
dec
or
add
or
jge
add
push
cwtl
cld
cli
mov
loopne
xor
inc
xor
pusha
lret
push
push
cmp
pop
add
outsl
testl
push
and
pop
xor
mov
cmpsb
xor
xchg
aam
sub
add
stos
cmp
lock
xchg
push
mov
add
js
cmc
xor
add
sbb
fstps
sbb
test
mov
mov
js
out
popa
cmpsl
mov
xchg
cmp
mov
ds
repz
sub
lahf
push
pop
mov
push
xor
mov
aad
sub
popf
pop
inc
jp
xor
nop
cmp
movsl
cmpl
aaa
push
add
std
push
pop
xor
or
adc
ljmp
pop
cli
mov
adc
push
dec
xchg
xchg
mov
in
imul
nop
leave
and
pushf
lahf
add
mov
loope
outsb
cwtl
sti
xchg
xchg
sbb
rcrb
sub
pop
pop
les
pop
lods
arpl
mov
mov
jnp
shrb
add
push
daa
add
push
dec
sub
jmp
or
sbb
xchg
addb
dec
or
push
adc
ljmp
andb
mov
sub
dec
jge
fdiv
lret
inc
inc
cmpxchg
xor
cmp
fsts
pop
outsb
cwtl
ds
sbb
out
aas
lcall
mov
stc
or
jmp
sbb
nop
mov
in
mov
mov
jecxz
xchg
repnz
div
or
dec
addr16
in
insl
jo
jge
or
pop
pop
push
aad
cmc
push
fildll
int3
mov
jns
dec
push
clc
add
dec
sbb
xor
lods
pop
outsl
and
adc
add
out
sbb
bound
dec
pop
pop
sub
xorb
pushf
push
add
jge
jmp
push
sahf
daa
mov
fstpl
scas
fs
mov
cld
adc
sbbb
push
cmp
testl
imul
or
shll
adc
and
add
sub
xchg
fldenv
aaa
movsl
jle
and
nop
emms
dec
loope
cmpsb
lahf
jnp
jae
push
out
fistpl
inc
jo
pop
mov
imul
je
dec
mov
jle
pop
push
push
stos
rclb
data16
aas
add
inc
das
add
pop
xlat
or
push
adcb
clc
out
fisubrl
mov
fcomps
jle
dec
insl
add
or
xchg
push
add
xchg
popa
adc
cmpsl
rol
jb
lret
xchg
popf
xchg
sbbb
ret
mov
push
cmpsl
and
push
fsubr
mov
pop
aad
add
add
jecxz
cs
std
ret
jle
xor
stos
pop
xchg
adc
ljmp
push
push
js
daa
and
loop
lock
shlb
or
out
pop
je
pushf
inc
cwtl
add
loop
xchg
jmp
ret
add
push
sub
inc
and
ja
mov
xor
popa
jmp
fldenv
push
ds
test
imul
or
inc
dec
pop
lods
push
dec
xor
or
cltd
cmp
sub
stc
jnp
pop
mov
dec
test
xor
xor
inc
sub
sub
push
pop
push
jmp
mov
push
mov
out
pop
mov
adc
repz
in
andb
hlt
cmc
push
jne
inc
add
rcr
or
lods
ljmp
out
fadds
cmpsb
pop
dec
sub
push
ficoml
mov
xlat
ljmp
mov
ja
add
mov
popa
jp
adc
adc
lcall
add
push
xchg
stos
add
xchg
aas
or
push
mov
shr
push
sub
lahf
lcall
mov
cmp
fidivrs
pop
pop
add
add
cwtl
or
cs
xor
roll
push
push
jmp
dec
push
leave
jnp
jbe
clc
mov
jb
mov
js
daa
out
ss
daa
jle
dec
push
sbb
or
xchg
jns
iret
pop
xor
mov
dec
mov
jecxz
xchg
add
push
pop
test
aad
inc
mov
loop
inc
orb
jl
ja
popf
add
outsl
int
les
pop
pop
aad
clc
ljmp
ret
adc
test
or
insb
push
gs
add
das
push
xor
mov
mov
add
sub
aam
mov
pop
mov
aam
xor
push
or
add
pop
dec
jmp
mov
jbe
clc
pop
pusha
mov
sbb
push
mov
inc
jmp
idivl
and
fs
cli
pop
jo
loope
lcall
imul
xor
lret
push
add
adc
jb
jns
ljmp
addb
mov
fadds
insb
mov
outsl
and
jecxz
inc
add
lock
pop
daa
add
fdivr
cli
pop
test
stos
mov
cmp
jae
pusha
stos
push
adc
dec
mov
mov
outsb
dec
push
mov
mov
cmp
incb
int
mov
pop
sbb
add
sbb
adc
mov
jo
sub
punpckhbw
ds
and
mov
cmp
mov
popa
xlat
in
decl
les
mov
imull
cmp
imul
roll
xor
jno
cmp
bound
inc
mov
xor
lret
pop
repz
and
inc
inc
fwait
push
push
call
addb
mov
sarb
lods
add
outsl
add
addl
sbb
mov
sbb
jo
cmp
lahf
or
mov
or
adc
fwait
outsb
dec
fs
add
sub
push
loope
sub
pop
sub
xor
xor
or
add
xchg
pop
xlat
pushf
pop
mov
sbb
ret
scas
bound
pop
pop
xlat
test
sub
jne
mov
imul
and
jg
nop
adc
sbb
push
aas
test
adc
push
push
stos
cmp
jno
or
xchg
xor
ret
pop
pusha
pusha
mov
pop
jmp
sbb
dec
add
xchg
sbb
outsl
ret
pop
lea
add
jno
push
ret
mull
pusha
sub
mov
sbb
ret
jmp
mov
or
add
xor
dec
loopne
mov
jge
mov
not
cmp
loopne
icebp
mov
mov
ja
push
xor
mov
inc
movsl
jo
push
jmp
and
loop
and
fcoms
add
jbe
in
push
cmp
adc
add
jne
test
push
mov
lods
adc
arpl
gs
adc
sub
jle
ljmp
mov
fsubr
in
add
jle
mov
jmp
cwtl
inc
add
data16
popf
rorl
xlat
jp
rcrb
shrl
loop
jnp
mov
test
xor
lret
xor
fsubrl
sbb
xor
test
inc
jecxz
insb
pop
push
aaa
push
or
cmpsl
das
pop
hlt
mov
les
push
addb
cmp
imul
and
or
inc
out
rcrb
and
addb
popa
jnp
in
mov
mov
dec
lock
movsb
int
test
pop
mov
xchg
jb
mov
pop
push
jle
push
and
rcll
sub
xlat
repnz
hlt
enter
cld
jmp
cmp
pop
mov
and
lods
mov
mov
jg
dec
inc
ja
add
cmpsb
or
loope
mov
adc
test
push
dec
add
sub
pop
adc
cld
push
scas
xor
stos
or
jmp
sub
mov
js
pop
inc
cmpsl
mov
mov
in
rorl
out
add
xor
sahf
mov
icebp
lock
popa
aas
sbb
or
push
pop
xchg
negl
mov
mov
shl
lcall
mov
xor
or
rcrl
add
fiadds
fucomip
jecxz
and
shrl
inc
jmp
ljmp
add
bound
bound
inc
mov
mov
std
pop
daa
repnz
ljmp
add
jmp
mov
cmpb
decb
adc
jge
neg
and
and
jle
xor
shll
adc
mov
mov
aam
jg
push
cmp
cmp
std
xchg
clc
sub
mov
and
or
xor
push
or
mov
out
sub
dec
fldt
or
cmpsl
int
rcrl
xor
sub
push
loope
psubd
jl
les
adc
push
jno
xlat
push
repz
cs
inc
sub
sub
push
lods
xchg
fisubl
cli
fmuls
mov
nop
adcb
mov
add
mov
lret
adc
mov
pop
or
imul
adc
ja
arpl
mov
pushf
xchg
pop
jmp
cmp
and
out
jb
dec
cli
out
lods
leave
movsl
insb
jecxz
pop
imul
ficoms
in
inc
push
mov
not
jno
pusha
shl
jmp
mov
pop
dec
adc
push
dec
sub
mov
add
fdivrp
cltd
cmp
sbb
pop
inc
sub
test
cli
icebp
addr16
pop
decb
pop
fstl
jae
fnstenv
lds
scas
mov
adc
sub
mov
sub
jecxz
sbb
pushf
xor
jae
add
xor
aas
call
addb
push
not
jmp
sbb
cmpsb
clc
pop
mov
sbb
cmp
shll
mov
imulb
lahf
or
dec
mov
and
mov
mov
je
xchg
and
adc
add
shrb
scas
pusha
mov
dec
pop
stos
cmpl
jb
push
xchg
push
jp
mov
jecxz
fcmove
adc
rol
cmp
stos
out
and
mov
stc
cltd
pop
or
adc
jg
cld
pop
test
pop
lahf
scas
cmpsl
shr
fiadds
xor
push
mov
push
add
sub
pop
push
out
jnp
add
in
dec
test
or
cld
outsl
push
xor
mov
lds
aaa
xor
mov
add
outsl
jbe
icebp
rcrl
mov
add
sub
sbb
lcall
add
pop
ret
push
push
inc
imul
sub
ret
daa
jle
adc
fwait
add
push
cmpsl
ret
or
daa
adc
add
add
repz
pushf
loopne
adc
xchg
mov
lock
out
mov
jb
addl
outsb
adc
clc
lods
xchg
sar
add
pop
push
inc
jmp
jne
aaa
mov
ret
mov
adc
ret
jle
test
imul
push
push
inc
sub
in
mov
adc
pusha
dec
push
inc
scas
and
and
jmp
push
jg
mov
add
dec
xchg
loop
clc
and
push
mov
fnstenv
mov
pop
aam
pop
mov
sbb
jo
push
daa
sub
push
les
repz
jge
cwtl
xor
cmp
jp
daa
js
cltd
adc
cli
jl
arpl
inc
fs
shll
jge
das
mov
testl
idiv
pusha
adc
push
inc
in
stos
stos
pop
fdivrs
dec
sub
cld
iret
pop
mov
pop
pop
xchg
or
jl
pop
xor
mov
jb
lds
inc
and
movsb
pushf
cld
mov
out
movsb
sbb
lahf
sbb
aas
call
ret
sbbl
inc
and
jp
pop
call
lock
jbe
push
mov
dec
add
sbb
lds
add
mov
push
sub
add
mov
mov
or
xchg
aam
mov
mulb
pop
push
dec
sbb
stos
and
jmp
movsb
ljmp
leave
fcompl
jnp
lock
hlt
mov
aas
inc
leave
add
jmp
pop
clc
seto
and
xchg
or
pusha
sbb
xor
sbb
sub
jmpw
decl
mov
inc
aad
xor
adc
sub
push
inc
nop
cmpb
jg
sub
cmp
insb
mov
lock
add
sbb
push
push
add
mov
and
pop
sub
aas
or
jg
call
sbb
int
insl
repnz
repz
lods
mov
xor
pop
sub
sub
clc
ret
cltd
jo
lock
adc
or
lds
pop
dec
xchg
out
jb
cmp
xor
jbe
mov
xchg
mov
push
and
rcrl
mov
push
cmp
xor
xor
mov
cmc
shlb
adc
shrb
mov
inc
sbb
jb
pop
leave
mov
cmpsl
xlat
gs
sbb
xchg
sbb
jo
ja
shr
add
movsb
pop
sub
sbb
jp
lods
inc
mov
test
dec
cmp
out
mov
xchg
jno
and
stos
dec
addr16
idivb
push
test
ror
ja
pop
addr16
add
jmp
or
pop
push
dec
dec
push
ret
int3
inc
addb
add
dec
sub
outsb
add
loopne
call
add
fs
addl
cmpsl
mov
and
fidivl
add
dec
jo
fxch
aam
insb
dec
je
add
scas
lock
pop
lahf
jle
mov
jmp
in
fsubr
jge
aam
sbb
pop
and
mov
mov
mov
mov
in
scas
sub
inc
ljmp
insb
jmp
stos
int3
push
jns
add
add
pop
xchg
in
push
call
jmp
sub
jbe
add
xor
pop
neg
add
jecxz
push
mov
loopne
jmp
jmp
add
xchg
adc
adc
pop
mov
ljmp
les
iret
je
or
adcb
and
add
andl
lods
bound
sti
sub
ret
xchg
aam
push
aad
lahf
push
pop
add
push
pop
and
add
in
jmp
neg
sub
movsb
pop
ror
movsb
adc
pop
jmp
cmc
aaa
mov
xchg
dec
cmpsl
cmpsb
neg
and
std
rcrb
xchg
in
and
enter
jmp
call
ret
add
ds
mov
or
jge
pop
jb
adc
pop
imul
mov
cli
insb
imul
add
stos
ljmp
js
jg
jo
xchg
roll
cmp
ret
pop
jmp
or
pop
pusha
sub
jmp
jo
jmp
add
in
sbb
fs
pop
out
int
in
jne
sub
sbb
stos
push
test
push
mov
addr16
dec
add
pusha
imul
outsb
mov
scas
insb
push
aam
mov
push
inc
mov
ret
rolb
or
lea
loope
xor
jnp
or
sub
in
adcl
cmp
dec
popf
add
jmp
mov
mov
add
pop
jmp
sub
roll
xchg
mov
xchg
xorl
icebp
dec
jecxz
leave
cld
bnd
scas
daa
lea
pop
push
mov
and
cltd
lret
dec
push
add
push
addr16
testl
jge
repnz
jmp
mov
cmp
loopne
lock
xor
add
xor
push
mov
jmp
popa
add
pusha
mov
cli
sarl
and
sub
xchg
aaa
call
cmp
jne
push
mov
js
dec
push
sbbb
mov
pop
pop
cwtl
lahf
pusha
cmpsl
pop
push
push
mov
push
aas
push
xor
and
imul
test
pusha
cmp
sti
pushf
and
in
sbbl
or
divb
push
sub
cs
add
in
jo
fwait
dec
roll
push
movsb
xor
mov
ljmp
push
dec
mov
jmp
adcb
xor
push
and
imul
and
rclb
cld
not
call
cmp
sub
add
call
push
fs
mov
push
pop
stos
cmp
push
mov
ret
loope
outsb
imul
stc
pusha
aad
mov
not
hlt
sbb
mov
cli
xor
in
mov
or
inc
sbb
xchg
jle
loop
jmp
ljmp
popf
ljmp
hlt
das
pop
xlat
sti
leave
inc
sub
mov
push
ja
pop
std
scas
inc
or
call
out
jmp
or
sbb
lahf
add
jnp
xor
sub
hlt
or
lahf
add
cmp
or
or
and
and
push
ret
rorb
push
jo
test
sub
or
jmp
lahf
mov
aas
mov
cmc
mov
cs
aad
sub
add
adc
sbb
or
push
aas
mov
clc
lea
mov
cmp
std
add
popa
ljmp
xlat
pop
cmp
jl
push
adcb
clc
notl
and
test
adc
jge
shrb
push
mov
xchg
sub
add
out
mov
repnz
into
fs
push
inc
dec
jmp
add
in
das
loop
add
inc
xor
pop
inc
or
test
and
add
ficompl
mov
mov
and
add
stc
push
arpl
lea
adc
push
cmpsl
lcall
xchg
add
shl
push
adc
sbb
shlb
repnz
adc
cmc
xor
and
fidivrs
jg
or
xchg
std
pop
sar
mov
or
cwtl
and
test
adc
add
or
push
or
dec
int3
push
mov
push
sub
push
lock
pop
mov
out
jb
je
mov
loope
sub
rorb
sub
and
xor
adc
loop
jnp
aam
pop
pop
negl
and
dec
bound
rcll
or
nop
jmp
mov
lcall
cmp
push
mov
pushf
mov
fisttpll
scas
dec
loope
mov
and
pop
dec
negl
mov
in
xlat
or
adc
dec
popa
jnp
int3
inc
das
aas
mov
sbb
roll
pop
add
jnp
leave
js
xor
dec
test
cltd
cmp
mov
jl
sbb
hlt
dec
jo
loopne
mov
cmp
dec
adc
mov
call
inc
mov
insl
inc
push
push
push
pop
shl
ljmp
sbb
xchg
in
cmp
pusha
inc
jmp
lods
sbb
aaa
je
push
int
jg
cmp
mov
push
push
jns
cmp
adc
mov
iret
or
add
push
add
jle
or
std
xor
ss
add
ret
gs
pop
repz
mov
rcl
mov
add
cmp
push
shl
pusha
popl
enter
sub
call
addb
xchg
cli
push
insb
mov
into
and
test
das
pop
push
out
dec
adc
inc
sub
pop
repz
js
sbb
push
les
jmp
pop
pop
or
or
pop
pop
cli
push
mov
lahf
rcrb
adc
mov
pop
lahf
jg
and
test
dec
ja
sub
in
or
mov
addr16
xchg
rorl
or
xor
pop
add
and
aam
sub
test
jmp
pushw
cmp
mov
jmp
scas
mov
mov
in
aaa
xlat
lods
mov
stos
cmc
loopne
idivl
fisttps
add
shlb
add
in
xlat
or
and
add
sarb
cmc
mov
hlt
and
push
pusha
cmpsl
pop
mov
mov
mov
repnz
stc
test
in
pop
ja
sbb
aad
sub
and
and
add
sub
jg
mov
mov
repnz
sub
repz
dec
ret
adc
pop
push
inc
mov
ret
ficompl
fisttpll
lods
push
movsb
ljmp
jo
add
dec
dec
orl
and
xor
enter
sub
inc
jl
stos
lahf
adc
ror
lds
pop
mov
jp
fstl
jmp
enter
dec
fmuls
mov
ficompl
xor
loopne
roll
mov
dec
das
xchg
sbb
or
jmp
pop
out
and
fidivs
pop
add
imul
ror
das
rcrb
cmp
shl
add
popa
push
or
jno
xor
popa
jb
push
jns
add
sbb
or
jg
arpl
sbb
das
mov
dec
xchg
arpl
add
mov
jmp
ret
xlat
xor
jmp
cmp
pusha
shrl
xor
loop
adc
ljmp
dec
movsb
rcll
mov
push
jne
das
sub
push
push
mov
pop
ds
scas
bound
and
sub
add
imul
in
sub
add
orb
sub
jae
or
jmp
pop
out
mov
xor
jnp
lret
loopne
lods
popf
insb
inc
inc
push
loopne
divl
lahf
fsubrl
and
fcoms
cmp
pusha
xchg
xor
mov
divb
sub
mov
and
mov
sbb
or
xchg
add
add
outsb
push
hlt
cli
cmp
outsb
cmpsb
fistl
push
mov
scas
clc
pop
cmpsb
les
push
es
push
or
add
mov
jb
ja
jnp
cmc
or
mov
mov
dec
cltd
in
fs
xor
cld
push
jg
and
cmp
and
movsb
mov
adc
inc
bound
push
jne
addl
or
cmc
loopne
add
bnd
and
mov
xor
jmp
add
xchg
adc
dec
cld
out
push
xchg
lods
dec
cmp
sarl
xor
fsubl
add
jo
cli
push
rcll
mov
cmp
and
pop
iret
push
out
push
push
inc
adc
ja
jl
les
add
inc
jne
dec
jg
mov
mov
adc
jmp
push
push
aas
pop
sarl
add
into
push
mov
cmp
mov
cmpsl
mov
out
mov
sbb
dec
out
push
mov
ret
popa
dec
std
test
or
push
xcrypt-ctr
cmpsl
pop
cwtl
push
sahf
aam
filds
lds
adcb
dec
jmp
or
sahf
adc
xor
gs
push
and
mov
and
sub
add
aam
insb
add
fs
push
push
jb
and
hlt
xor
mov
ret
add
and
pop
push
xlat
stos
leave
sahf
fstps
sub
inc
idivl
push
and
jge
daa
xchg
roll
mov
pusha
mov
or
xor
mov
xor
xor
idiv
add
mov
add
cmp
jbe
cwtl
cld
addr16
push
popa
add
push
gs
and
mov
out
les
test
jge
sub
pop
inc
and
out
mov
shlb
loope
mov
cmpsb
jb
nop
movsb
pop
fsubrs
imul
iret
lcall
mov
scas
movsb
clc
and
scas
mov
adc
mov
sub
sub
lret
adc
bnd
push
mov
nop
pop
and
int
sbb
push
jge
xlat
add
fwait
dec
mov
push
adc
nop
or
sub
pop
insl
loope
pop
in
and
mov
aas
xchg
loope
pusha
xorl
daa
cmp
sbb
push
sbb
push
jle
outsb
sbb
mov
dec
jecxz
add
jmp
das
inc
jmp
jge
dec
adc
cs
add
testl
and
jmp
shl
loope
cs
push
dec
loop
in
mov
lret
les
dec
inc
mov
push
js
daa
xorb
inc
adc
or
and
cld
pop
sti
pop
mov
inc
dec
std
fildll
fstpl
mov
mov
scas
add
sbb
out
or
pop
mov
push
inc
ljmp
les
cli
fmul
js
sub
pop
cmp
lds
scas
push
and
ret
lods
out
mov
push
push
sbb
fidivl
dec
or
add
pop
push
pushf
cwtl
fmull
cld
sub
and
ljmp
fwait
movsb
or
ljmp
jbe
les
rcrb
dec
pop
js
inc
dec
pop
xchg
xor
cwtl
xchg
jl
inc
mov
sbb
sbb
in
push
sbb
je
cmp
std
mov
add
lahf
pop
sub
sub
ret
ret
leave
pop
xchg
push
mov
cmp
cmc
stos
push
subl
in
xchg
lds
enter
mov
daa
daa
lea
dec
xchg
in
mov
adc
loop
in
inc
mov
cmp
test
ret
and
and
pop
lahf
in
sbb
repnz
push
inc
mov
push
mov
add
cwtl
lret
dec
jno
fsubrl
jns
in
xor
outsb
mov
int3
xor
fsin
adc
fs
mov
add
aam
pop
movsb
dec
and
loope
push
cmpb
test
push
and
xchg
sbb
stc
call
jmp
push
mov
popf
pop
sub
or
push
mov
pop
rol
inc
pop
add
jb
arpl
xor
adc
fstl
popa
and
push
mov
int3
push
pop
inc
sub
or
sub
aam
or
jp
push
or
inc
scas
nop
lcall
int
jmp
sbb
imul
sbb
js
mov
cs
jle
jmp
push
dec
adc
sub
adc
sub
inc
sbb
bound
sbb
fsqrt
jecxz
xchg
jmp
add
adcl
adcl
cmp
mov
icebp
in
lcall
adc
mov
movsl
and
insb
pop
push
cwtl
mov
sbb
cmpsl
shrb
jle
daa
and
ds
xchg
lds
dec
fbstp
mov
lock
and
jmp
push
mov
aaa
popa
adc
into
xchg
fs
xor
xor
sub
add
xor
subb
add
and
shlb
pop
std
sbb
and
push
jae
shld
shl
aam
sahf
mov
ficomps
push
mov
ljmp
xchg
sub
pop
ja
or
fcmovb
adc
mov
push
add
sub
and
ja
and
push
imul
mov
out
dec
adc
mov
xchg
repz
out
mov
arpl
xor
inc
lods
add
cs
es
and
pop
movsb
pop
pusha
icebp
outsb
push
cmpsb
add
pop
clc
sub
push
int3
push
scas
sahf
push
sbb
xchg
pop
adc
push
fidivrs
mov
fidivrl
xchg
pop
xchg
add
popa
cmp
add
pop
mov
or
lods
jno
jle
jp
sbb
or
pop
sti
loopne
push
mov
cld
dec
ficoml
jno
mov
mull
and
jle
or
mov
jmp
xlat
js
enter
cltd
stc
andl
mov
cmp
dec
dec
shr
pop
test
lea
ret
subl
mov
addb
ret
dec
add
add
or
testb
mov
lock
std
dec
es
sbb
jmp
repz
xchg
mov
and
jmp
pop
sti
cmp
sub
xlat
ljmp
xor
jmp
lret
xchg
or
pop
add
test
popa
jae
jg
adc
cli
push
jmp
repz
daa
xchg
shrb
mov
not
in
push
das
cmp
loopne
pop
adc
mov
xchg
dec
xor
jae
mov
sbb
pop
pop
and
and
add
and
push
enter
sub
add
enter
push
mov
mov
dec
add
add
lret
addr16
push
lea
sbb
out
xor
jmp
pop
lods
sub
push
xor
push
push
stos
jns
repnz
jmp
add
or
sub
arpl
scas
into
xor
mov
loope
sub
mov
lock
icebp
pop
push
and
lock
xchg
sti
push
pop
mov
sbb
push
inc
orb
push
ja
sub
cld
popa
inc
pop
lock
cmp
jae
jnp
jg
push
cwtl
fcoms
loope
inc
mov
rclb
cltd
outsl
mov
jp
insb
insb
add
andb
mov
jb
push
imul
or
cltd
cs
xchg
pop
mov
pop
dec
add
das
jmp
add
mov
add
add
outsb
xor
cli
and
push
lods
outsb
inc
and
dec
pop
adc
add
mov
sub
mov
mov
jmp
mov
and
pop
inc
jns
mov
daa
jl
pop
adc
idivb
inc
inc
sub
pop
or
jno
sbb
xchg
xchg
inc
mov
pop
loop
rcrb
mov
test
ljmp
add
dec
push
pop
mov
cmp
sahf
cmp
in
or
jmp
adc
xor
pop
jmp
or
inc
loopne
mov
scas
loopne
push
or
sbb
nop
jmp
jge
pop
cli
push
mov
push
add
fidivrs
adc
cmp
sbb
cld
repnz
adc
inc
or
add
lahf
push
addb
ficompl
and
lret
push
inc
inc
push
scas
xor
js
push
es
loopne
inc
pop
push
sub
mov
inc
shrb
lcall
xor
shrb
rorb
jo
dec
shll
mov
dec
push
pop
sbbb
mov
mov
sti
xchg
fidivrs
xchg
sub
sbb
fsubrs
push
push
hlt
sahf
mov
jecxz
repz
inc
pop
jnp
xchg
mov
mov
test
mov
in
sub
push
mov
adc
pop
jo
adc
add
ret
and
data16
add
sti
cli
in
add
push
in
adc
or
pushf
outsl
jmp
shlb
and
inc
sbb
sub
or
jecxz
je
in
jecxz
les
mov
sbb
mov
mov
pop
pop
and
push
not
pop
mov
push
mov
push
int3
adc
pusha
mov
adc
adc
adc
repnz
ret
decb
dec
fnstcw
jno
in
stos
xchg
xor
inc
ljmp
aad
or
add
dec
in
cmc
or
mov
in
jp
push
adcb
into
sbb
cmp
out
inc
adc
inc
sbb
mov
cmpb
jmp
adc
jg
add
xchg
mov
bound
dec
scas
sbb
push
outsb
dec
lret
dec
clc
or
clc
pmulhuw
and
or
scas
repz
lock
adc
insl
push
jno
lods
and
mov
cmp
pop
push
and
adc
loop
push
dec
mov
cmp
fildl
cmp
xor
push
inc
mov
push
mov
je
and
dec
mov
dec
xor
add
scas
mov
ds
sub
sub
test
out
out
je
mov
jl
xor
add
add
jl
dec
adc
pop
cmp
outsb
sbb
aaa
rcrl
mov
push
imul
add
dec
sub
mov
mov
jae
sub
fisttpl
pop
in
sub
fdivp
xor
push
add
pop
icebp
adc
hlt
cmp
inc
mov
out
cs
adc
inc
dec
add
push
pop
or
push
ss
sbb
insl
fs
sbb
sub
lret
ds
in
xchg
pop
jnp
shll
inc
in
and
roll
cmp
inc
sub
xor
sbb
out
mov
dec
lea
je
jb
shlb
add
jmp
pop
jmp
test
addl
ret
adc
leavew
bound
in
sub
pusha
sub
lock
jmp
gs
add
and
push
pop
xchg
in
push
test
inc
hlt
adc
ljmp
aad
mov
gs
cmp
fistpll
lock
fldl
pop
cltd
std
adc
or
cmp
jae
mov
aaa
push
ljmp
ror
push
and
aam
fsub
mov
cld
or
loop
add
shll
cmp
xchg
inc
mov
adcl
xchg
dec
clc
push
adc
out
mov
mov
pop
xor
jnp
jne
imul
roll
rolb
cmpl
sub
pop
mov
subl
std
adc
pop
lock
or
lret
jo
xchg
push
popa
jnp
adc
lret
jb
and
popf
sbb
outsl
gs
cltd
and
adc
mov
je
ds
mov
in
add
addb
inc
inc
and
in
vphaddubq
in
add
jne
mulb
mov
or
xchg
hlt
lret
adcb
or
dec
lcall
mov
mov
cwtl
out
xchg
hlt
cltd
xor
lods
add
pop
sub
sub
testb
inc
jp
fidivl
fadd
cltd
inc
stos
xor
mov
sub
test
or
pop
ja
or
and
jg
pop
push
fstpt
inc
cli
shl
add
mov
and
adc
mov
adc
andps
push
add
enter
push
mov
mov
aad
add
ret
cmp
push
mov
mov
dec
icebp
out
fmul
dec
repnz
adc
sub
mov
xor
subb
sub
mov
inc
and
call
dec
faddl
cmp
sub
and
dec
push
inc
push
jo
hlt
dec
lds
or
sbb
add
jle
int
adc
xchg
jecxz
addr16
dec
add
jo
adc
ja
add
pusha
nop
loop
cmp
outsb
mov
das
add
les
insl
adc
or
je
pop
cmp
cmpsb
mov
mov
mov
and
mov
pop
inc
mov
mov
add
popf
adc
push
sysret
xchg
adc
rcll
mov
or
or
push
and
fcmovb
add
dec
dec
sbb
lret
out
add
ffree
pop
aas
xchg
shr
icebp
and
dec
push
stos
adc
push
or
dec
mov
push
rorb
jmp
in
fnstenv
jl
add
stc
jmp
mov
adc
outsb
cmpsl
mov
adc
cwtl
sub
subb
je
add
dec
cltd
out
sub
rcl
add
add
das
adc
mov
scas
sub
repz
outsl
pusha
sti
mov
xchg
push
daa
popf
insl
lret
sahf
mov
mov
movsb
pop
push
add
mov
push
adc
and
or
les
cld
fisttpll
push
int3
add
pusha
sbb
sbb
outsl
mov
mov
out
cmp
sbb
movsb
xor
jns
pop
or
mov
cmc
lcall
nop
push
dec
out
fistpll
sub
add
stos
movsb
jae
rorl
jge
test
loope
cmpsl
lds
pop
cmp
fildl
call
mov
nop
push
or
daa
xchg
js
dec
dec
mov
pop
add
dec
ljmp
ds
sbb
mov
xchg
bound
out
ror
jecxz
repnz
or
adc
sbb
pushf
aaa
imul
push
xorb
sbb
sub
push
and
or
inc
sbb
decb
dec
insl
and
out
lret
xor
mov
cmp
sub
je
jno
inc
pop
xchg
pusha
sarb
testb
popa
ljmp
dec
sub
mov
inc
fistpl
je
cmp
clc
jmp
xchg
xor
test
jecxz
xchg
dec
sub
mov
jmp
ss
mov
sar
ffree
js
rolb
jmp
push
jne
aam
repz
push
out
pop
jle
cmp
cmp
or
shr
js
das
test
dec
mov
lcall
cmp
rcrb
setge
dec
push
inc
dec
sbb
cmp
adc
sub
xchg
loop
lea
lcall
es
pop
jp
ficoms
rcr
fbstp
pop
mov
cmp
popa
add
repnz
shr
push
lds
nop
xlat
or
or
xchg
fisttps
jae
lcall
cli
lods
add
xor
ss
pop
or
enter
mov
mov
sbb
jecxz
shr
push
mov
testb
push
mov
add
and
adc
sbbl
outsl
jmp
mov
clc
in
push
loope
repnz
in
adc
loopne
jmp
jnp
jg
mov
dec
pop
loopne
enter
sub
xor
ret
push
add
dec
pop
pop
cmp
mov
shrb
mov
pushf
mov
dec
dec
xor
mov
sub
mov
jge
fistps
imul
mov
daa
sub
sub
xor
ret
insb
mov
mov
mov
nop
loopne
loop
pop
out
push
sub
inc
xor
scas
addr16
pushf
and
dec
push
stos
jns
cmp
jecxz
add
shlb
jns
jnp
das
xor
cmp
inc
add
mov
jmp
xor
push
push
mov
xchg
stos
movsl
inc
das
stos
gs
add
add
add
dec
jp
push
pop
jae
or
inc
fbstp
pop
rclb
pop
test
out
out
les
jb
cmp
xchg
arpl
push
icebp
sub
imul
lock
loope
imul
inc
sub
shrb
in
in
out
pop
orb
jle
jmp
adc
cs
mov
mov
popf
add
pushf
aam
cwtl
das
inc
stos
fnsave
and
add
xor
and
cmpl
loop
dec
in
dec
add
mov
int
es
cmpsl
add
cmp
jmp
not
mov
mov
xor
fs
test
mov
inc
pop
push
sub
das
push
push
mov
jno
fisubrl
add
xor
pop
adc
lahf
push
mov
je
or
dec
jg
es
stos
mov
lahf
and
adc
sub
cmp
imul
mov
jo
jo
xchg
and
pop
and
jge
mov
pop
arpl
jmp
in
dec
xor
pop
sbb
mov
pop
scas
lret
insb
jl
shl
jmp
inc
aas
rcll
fwait
jp
outsl
je
call
pop
xchg
xor
sbb
jmp
fiaddl
cmp
sbb
inc
sbb
out
or
clc
jnp
mul
inc
je
push
shrl
inc
mov
push
cmc
movl
sub
pop
jl
sub
and
mov
jge
xchg
out
nop
push
or
stos
or
push
sar
clc
add
inc
sbb
jmp
lret
jns
insb
mov
push
pop
dec
lods
nop
add
repnz
add
mov
test
notb
mov
ret
das
insl
xchg
stc
adc
sti
and
mov
adc
pop
in
hlt
sub
and
icebp
ror
out
xor
cmp
add
es
repnz
xchg
gs
or
inc
cmc
int3
xchg
jbe
jp
sub
outsl
sub
pop
scas
jmp
cmp
test
ljmp
jns
decb
sub
hlt
inc
rcrl
xchg
ficompl
jmp
mov
xor
adc
inc
das
lret
xor
cmpb
dec
sub
push
mov
dec
xchg
test
cwtl
and
lahf
sbb
mov
jg
pop
dec
ljmp
mov
xchg
adc
loopne
mov
clc
xor
mov
push
xor
jmp
inc
mov
iret
inc
jns
repz
push
mov
pop
push
cmp
pop
jp
xor
adc
jg
mov
pop
push
pop
pop
mov
mov
aas
push
and
mov
shll
scas
add
pop
push
loopne
popf
mov
push
pop
add
add
lods
mov
jmp
mov
rcl
mov
cmpsb
fwait
add
add
jmp
mov
push
pop
ficomps
dec
popa
movsb
xchg
test
not
xchg
cmp
adc
push
out
pop
cmp
adc
or
aaa
rclb
mov
or
fiadds
ss
movsl
bound
lahf
loopne
lock
imul
cmp
xor
mov
call
sbb
cmp
ds
jb
imul
jmp
adcb
sbb
cmpb
or
push
jp
ss
push
sub
loop
add
push
inc
adc
loopne
cs
add
jno
xchg
movsl
dec
stos
bound
push
shrl
mov
and
je
add
inc
test
mov
arpl
mov
add
dec
add
jg
sub
jl
aas
xchg
mov
push
stos
pop
orl
imul
mov
push
hlt
jmp
sub
cmpb
xor
mov
jns
sub
push
subl
in
dec
sub
dec
icebp
and
push
pop
ret
push
imul
imul
fs
clc
fmuls
lahf
add
clc
mov
mov
xchg
jo
and
cmp
adc
ret
xor
jae
add
push
hlt
add
add
jg
stos
sub
subl
and
insb
sub
jge
fildll
repz
mov
arpl
or
aad
adc
mov
into
inc
aaa
adc
xchg
mov
or
imul
addl
pop
jbe
add
mov
icebp
add
rcrb
ds
xchg
stos
xchg
mov
jb
dec
mov
jo
jmp
outsb
mov
pop
jo
andl
mov
adc
subb
or
pop
rorl
ret
or
cli
adc
mov
test
mov
mov
pop
jbe
sbb
cmp
stos
add
fbstp
mov
jo
and
sahf
daa
pop
cmc
add
push
push
nop
je
ret
dec
mov
pop
adc
flds
push
mov
aam
scas
sub
jo
mov
in
push
jp
and
pop
lds
add
out
and
enter
das
inc
in
add
mov
mov
stc
sbb
ljmp
sahf
adc
fadds
lock
or
adc
jmp
push
mov
imul
outsb
test
cmc
sbb
adc
movsb
mov
pushf
xor
sbb
fsubl
push
outsb
dec
popa
dec
xor
pop
in
adc
xor
insb
add
mov
sub
add
and
ret
xchg
les
pop
pop
sub
cmc
mov
pop
pop
sbb
cmc
jnp
sbb
int
adc
or
lds
sub
mov
xchg
das
aad
inc
lahf
call
or
movsb
add
call
cmp
push
scas
fstpt
pop
jmp
sbb
sarl
jle
dec
dec
jns
scas
pusha
mov
sbb
push
xor
add
gs
inc
jmp
pop
pop
scas
and
cs
iret
cmpb
popa
adc
add
pusha
cmp
imul
adc
push
mov
adc
pop
in
push
das
sub
jne
or
push
add
xor
jmp
pop
loope
bound
leave
mov
rcrb
jno
iret
pop
fcompl
int
cs
sbb
insl
push
or
out
mov
stc
subl
sbb
rorb
and
inc
jecxz
fcompl
jno
loopne
jmp
subb
lret
orl
hlt
ja
jle
xchg
push
adcl
mov
ja
add
inc
jmp
outsl
mov
push
pop
stos
and
movsb
je
jg
daa
pop
xor
and
push
push
jmp
lock
adc
ja
mov
push
test
or
mov
scas
int3
inc
dec
mov
dec
xchg
sbb
or
inc
lret
or
mov
add
outsl
mov
out
in
cmp
push
testb
or
push
mov
and
jle
cmc
stos
out
add
addr16
in
xchg
cmpps
adc
xor
pop
or
xor
add
popa
shr
sub
cmp
movsl
sahf
ja
cld
pop
and
add
jmp
fidivs
mov
push
out
ficoms
sub
pop
add
les
push
mov
xor
inc
xchg
sub
add
and
adc
enter
stos
mov
jns
fstl
adc
repnz
int
in
sub
pusha
jp
arpl
sti
jbe
xor
push
int3
sbb
loop
or
bnd
jne
icebp
popa
inc
pop
pop
push
or
mov
and
aaa
les
dec
mov
pop
pop
shr
not
and
pushw
pop
shrl
push
mov
push
xchg
inc
jbe
cmp
mov
out
push
xchg
dec
call
ja
add
rorb
scas
push
outsl
sbb
sar
add
add
jmp
mov
into
not
push
fldenv
xor
sub
xchg
xchg
dec
jne
mov
and
jg
xor
fildl
xor
outsb
rolb
test
movsl
ljmp
cmp
add
jnp
das
cs
inc
or
add
dec
mov
mov
pop
sbb
cmp
jno
das
aas
mov
pop
inc
mov
jg
icebp
xor
cmp
and
jle
mov
sub
push
jae
adc
sti
or
add
lea
cmc
adc
xchg
call
pop
add
scas
mov
mov
lods
jmp
cltd
dec
aam
add
sbb
xor
cmpsb
add
pop
sbb
mov
mov
mov
mov
stos
adc
mov
cmp
inc
aam
push
push
push
xor
repz
sub
pop
add
sub
inc
xchg
cld
push
in
mov
push
sbb
add
dec
fs
and
push
cltd
je
and
jg
bound
not
dec
mov
push
gs
add
sub
mov
out
and
and
add
outsb
xchg
or
pop
jmp
xchg
xchg
shlb
xchg
ja
push
mov
ds
inc
xlat
imul
outsl
hlt
push
pop
cld
jne
out
loop
push
push
sub
pop
daa
inc
js
iret
push
push
xor
int3
mov
in
or
mov
test
aaa
popf
iret
and
cmpsl
out
mov
gs
lret
decb
lods
add
add
fmul
mov
jbe
stc
out
orl
mov
jae
mov
in
ret
rclb
xor
roll
icebp
adc
push
mov
mov
out
enter
jle
outsl
xor
repnz
mov
incb
push
push
nop
enter
add
loopne
sti
sbb
flds
pusha
inc
and
push
mov
lock
je
push
xor
pop
sub
cwtl
mov
dec
aad
leave
push
jp
dec
xor
stc
push
dec
inc
je
add
add
cmpsl
bnd
ds
jg
xchg
jl
or
js
mov
mov
push
mov
pop
idivb
push
jle
pop
and
pop
dec
lret
das
test
mov
adc
add
loop
dec
repnz
pop
inc
xor
pop
loopne
jnp
xor
and
jg
jge
or
insl
sbb
mov
stos
aaa
dec
sbb
sub
mov
xor
cltd
loop
mov
push
jg
jmp
popa
cmpsb
out
pop
das
mov
pushf
movsl
adcl
inc
sti
fsts
and
add
push
xchg
ds
cs
jge
add
shlb
btsl
pop
add
jg
adc
xor
add
sub
or
orb
repz
xchg
movsb
and
cmp
test
adcl
dec
stos
frstor
inc
mov
movsb
lea
stos
push
dec
shrl
dec
inc
add
fidivrs
xor
test
stos
dec
cmp
das
out
shl
pop
mov
push
or
mov
jg
shrl
jmp
mov
ljmp
out
push
shr
pop
dec
jp
sahf
add
xor
data16
add
adc
dec
or
add
mov
cmp
in
test
and
pop
xor
ljmp
cmp
pop
xchg
cltd
sub
add
add
mov
jmp
ret
mov
or
rcrb
out
mul
xchg
pusha
push
andb
jns
jg
out
fnstenv
cs
inc
jo
adc
es
inc
cmp
mov
xor
dec
pop
pop
mov
add
daa
mov
adc
xor
in
jg
stos
dec
std
or
aas
ss
push
xchg
shlb
sub
movsb
cmp
bound
adc
sub
xchg
fldcw
xchg
mov
add
lock
lea
mov
jg
fsubrs
movsb
inc
iret
sti
repnz
jae
daa
add
xor
cmp
rorl
inc
pop
call
fs
sub
outsl
push
je
sbb
hlt
cld
mov
or
mov
inc
mov
icebp
xor
and
push
mov
fidivl
in
push
or
jmp
add
xor
out
mov
jge
add
mov
clc
das
pop
or
cmp
push
mov
js
andb
lds
inc
jne
inc
mov
or
push
insl
testb
push
into
jo
rorl
or
cmp
cmp
in
rolb
mov
rclb
or
push
push
ss
ret
repnz
pop
sbb
stc
jge
loop
push
stos
mov
aad
mov
add
push
sub
inc
xchg
push
insl
cmc
call
faddp
ds
push
xor
sub
xchg
ret
mov
js
sub
mov
and
sti
and
add
arpl
and
imul
adc
cmp
or
or
shlb
jmp
push
pop
mov
stos
iret
cwtl
dec
mov
sub
inc
or
adc
pop
xchg
mov
add
xor
mov
fwait
cmp
into
xchg
or
add
rcll
add
xchg
mov
arpl
call
aad
inc
sub
lock
adc
push
or
pop
sbb
popl
call
push
in
lcall
int
and
mul
mov
jmp
mov
cltd
pop
leave
movsb
adc
pop
inc
in
aad
cmp
decb
daa
and
sub
mov
pusha
negb
xchg
dec
sbb
adc
pop
cwtl
or
mov
addr16
push
xchg
sti
pop
pop
bound
jmp
adcb
jl
push
jmp
mov
addb
fcompl
sub
push
lods
xchg
ds
inc
int3
pop
outsl
jmp
add
les
add
xchg
and
enter
xor
add
jmp
or
mov
pop
jecxz
or
mov
cmpsl
pop
pop
mov
adc
push
pop
fsubrs
add
std
stos
pop
and
push
adc
pop
jbe
ret
aam
fs
out
mov
iret
push
add
sub
add
rorl
push
shrd
xchg
adc
xchg
jae
outsl
push
push
cmp
lea
dec
std
dec
sub
pop
out
sub
add
mov
daa
div
popa
jge,pn
and
jl
orb
push
sub
divb
inc
cltd
or
js
dec
out
popf
iret
jnp
add
dec
rorl
in
aam
push
hlt
pop
call
test
scas
fdivrs
or
dec
nop
add
test
cmp
call
mov
inc
mov
push
xor
xor
call
stc
lods
iret
mov
add
mov
mov
add
idivb
xchg
cmp
pop
xor
or
stc
and
mov
or
dec
push
out
add
add
pop
or
xchg
pop
xbegin
jmp
int3
pop
xchg
addr16
or
mov
mov
int3
mov
jg
push
aaa
pop
dec
jae
push
das
nop
insb
js
ja
xchg
add
xchg
xor
jmp
clc
das
inc
fwait
das
in
test
push
into
inc
mov
adc
or
push
jmp
cmp
cli
cmp
dec
cli
lea
mov
aad
mov
out
adc
adc
in
scas
dec
mov
jmp
xchg
inc
xchg
inc
mov
ds
inc
add
movsb
push
inc
add
das
jbe
out
sub
adc
jl
pop
test
add
cs
enter
mov
fildl
std
ljmp
cmp
xchg
fdiv
fildl
ret
pop
cwtl
add
out
push
xor
jmp
std
xor
clc
pop
cmc
stc
push
imul
xchg
pop
mov
dec
sbb
shr
jno
int
icebp
xchg
scas
movsb
mov
stos
mov
call
xchg
movsb
xchg
push
mov
mov
aaa
pop
mov
jae
testl
xor
lea
pop
xor
sbb
in
fcmovb
repz
and
push
fbld
add
or
adc
xchg
icebp
adc
cli
data16
and
adc
daa
push
or
and
sub
mov
repz
mov
imul
ds
scas
mov
cmp
out
hlt
not
or
mov
push
dec
xchg
clc
int3
mov
xor
dec
sub
dec
je
mov
neg
ret
add
mov
push
shlb
dec
orb
fs
cmpsl
out
mov
mov
sub
out
jbe
andb
push
xor
lret
je
xchg
inc
shrb
sbb
lcall
jnp
pop
stc
mov
je
leave
pop
jmp
lds
shl
jge
aas
and
outsl
sub
push
into
test
mov
das
notl
in
aaa
fwait
fs
mov
inc
add
mov
cmc
xchg
mov
mov
clc
and
xchg
add
shl
fadds
sub
jmp
fs
or
inc
pop
push
dec
adc
ja
mov
test
lret
test
sbbb
lret
std
and
lahf
stos
stc
inc
les
fsts
roll
sbb
sbb
test
mov
sub
cld
push
dec
mov
stos
das
pop
and
xor
push
add
jmp
xor
adc
inc
cmp
dec
xor
fstp
or
sub
sub
sub
cmp
icebp
push
imul
and
sub
adcb
neg
loope
iret
adc
cltd
jg
mov
jmp
jmp
das
and
mov
inc
xchg
xchg
not
and
roll
jle
cmpb
ljmp
popa
mov
scas
xor
or
out
das
rolb
pop
ret
data16
sbb
pop
and
push
xorb
dec
push
nop
pop
pop
divb
jl
add
leave
test
jne
ret
mov
jmp
jb
ret
sbb
dec
fptan
stos
cmp
xcrypt-cbc
cmpsl
xchg
std
add
add
mov
sub
xor
pop
fnstsw
test
dec
mov
in
insb
aas
add
loop
add
xor
xchg
cmc
mov
out
shl
lea
testb
lret
stos
aad
dec
test
add
mov
cwtl
stc
js
sbb
repz
xlat
out
cmp
push
mov
je
pop
xlat
insb
inc
xchg
jbe
inc
fyl2x
lret
scas
dec
dec
test
push
daa
or
int3
dec
xor
nop
or
jp
insb
push
mul
jo
xchg
fists
scas
push
and
mov
lret
fadds
or
dec
jmp
je
sbb
sahf
leave
add
sbb
dec
xchg
lahf
idivb
mov
adc
imul
movb
rolb
adc
jnp
dec
filds
add
push
adc
addl
mov
cwtl
inc
add
sti
loop
add
pop
cmpsl
jne
into
inc
movsb
mov
xor
jb
xchg
jbe
cmp
lahf
loop
inc
push
cwtl
fadds
pop
jno
push
sub
dec
xchg
mov
in
int
in
punpcklwd
ljmp
add
shll
mov
mov
add
lock
pop
scas
fadds
xchg
mov
jp
jg
or
add
addr16
pop
jmp
test
pushl
push
xchg
xor
push
inc
jmp
int
xchg
or
rcr
jmp
aas
or
xor
mov
push
add
push
mov
pop
or
mov
or
or
cmp
mov
mov
adc
adc
and
sbb
push
cmp
pop
cmp
inc
mov
out
push
cltd
mov
sub
xor
test
cld
push
pop
movsb
sbb
enter
mov
ja
add
dec
mov
js
or
jg
push
aas
mov
sbb
ficompl
popl
andb
aas
jmp
push
out
adc
in
inc
jno
mov
pop
push
loopne
or
or
add
mov
mov
push
rcrl
les
fildll
fidivs
cmpsb
or
scas
test
add
jns
addb
fwait
adc
lcall
jbe
mov
dec
add
push
mov
and
pop
insl
loop
push
adcl
jmp
push
mov
enter
dec
cmp
push
add
xor
add
fs
xchg
mov
sub
inc
loope
aas
dec
into
pop
jmp
stc
mov
mov
mov
cmp
repnz
fisttpll
inc
adc
ret
xchg
sub
int3
insb
daa
jae
push
fs
rcr
pushf
cmp
jo
sbb
xchg
pop
std
or
dec
add
mov
push
mov
nop
pop
cmp
push
inc
xchg
jmp
cmp
clc
dec
loope
gs
add
jle
or
sbb
jge
inc
xor
iret
sbb
mov
add
rclb
int
bound
jmp
push
adc
cmp
adc
es
sub
jae
mov
dec
jmp
xor
icebp
pop
popa
add
lret
or
xchg
js
sbb
hlt
pop
cli
inc
loope
or
data16
icebp
jmp
pop
xor
sub
pop
jne
add
pop
dec
mov
aaa
push
mov
and
mov
imul
inc
adc
jge
xchg
sub
out
inc
popf
mov
ds
daa
push
sub
pop
or
pop
out
add
add
or
not
shl
or
push
pop
mov
ljmp
jmp
cmp
neg
or
push
or
mov
push
ljmp
ljmp
mov
not
rorb
xchg
and
push
fcmovne
or
popf
xor
mov
jg
fdivl
gs
sub
adc
fdivrl
and
inc
ds
inc
add
addr16
mov
sti
pop
stc
out
xor
or
xchg
in
das
mov
fnsave
mov
rcl
lret
or
in
stos
lock
push
adc
xchg
add
in
cmp
cmpb
add
test
movsl
aas
inc
jns
push
add
xchg
xor
dec
arpl
jmp
call
cld
stc
sub
dec
jmp
pop
or
loopne
pop
mov
sub
adc
mov
adc
test
jae
loope
in
clc
pop
and
and
stos
out
cmp
or
sub
add
scas
mov
xor
nop
add
sbb
xchg
hlt
loop
enter
xor
mov
inc
out
add
addr16
adc
mov
test
aaa
gs
jmp
xchg
fcoml
jo
icebp
nop
dec
fstps
dec
cmp
jbe
cmp
dec
clc
jmp
push
in
es
lret
repnz
inc
push
jbe
xor
notl
cwtl
sub
loop,pt
jne
add
fsubrs
js
in
add
push
pop
pop
mov
push
or
add
fsubrs
xchg
xor
push
cli
les
stos
addr16
ret
push
sbb
pop
inc
je
js
pop
sub
xchg
ljmp
cmp
mov
push
push
iret
fsubs
push
lock
inc
add
cli
mov
setnp
push
in
cld
mov
jo
sub
or
push
cld
rol
xor
mov
mov
xchg
rcrl
pusha
jne
popf
loopne
aas
cwtl
andb
and
add
pop
lock
jns
cmp
jl
aad
bound
adc
mov
ret
or
scas
adc
jl,pt
dec
std
int
add
xor
scas
fcomp
call
adc
into
xchg
roll
or
sbb
fwait
dec
inc
mov
push
outsb
cmpsb
cltd
pop
cmp
bnd
add
addr16
jb
out
add
mov
fstps
jo
push
das
pop
dec
loopne
fists
imul
jmp
xchg
dec
gs
addl
mov
sbb
shlb
inc
js
xor
add
loop
dec
inc
push
add
jge
gs
pop
mov
sbbl
dec
mov
mov
xor
sub
adc
daa
lcall
cwtl
pop
dec
push
jecxz
dec
adc
loope
sbb
rolb
sub
test
insl
add
ret
add
loope
mov
and
jns
pop
stos
push
xchg
jne
bound
add
pop
push
mov
dec
mov
xor
dec
cmp
xchg
aad
int
xor
sub
and
and
rcl
and
pop
aam
imul
push
je
xchg
nop
testl
add
sbb
add
jge
jecxz
sub
inc
aam
loop
xchg
add
fsubrl
gs
add
xor
xor
stos
repz
xchg
sbb
inc
jl
jo
testb
cltd
sbb
pop
push
cmpsl
push
push
popf
pop
addr16
dec
push
push
mov
aam
jle
pop
cwtl
in
sti
cltd
ret
mov
sahf
xchg
and
add
and
mov
lock
push
and
push
mov
mov
movsb
std
or
xor
lcall
dec
dec
pop
cmp
test
dec
dec
loopne
test
and
sbb
inc
sub
lods
jns
or
xchg
imul
psubusw
add
cmc
and
push
lods
mov
cmpsb
repnz
add
pop
sub
mov
outsb
lret
pop
dec
repz
dec
or
dec
sbb
push
sbb
ljmp
mov
inc
and
xor
loop
ret
repnz
ss
cs
test
mov
das
pop
jbe
mov
call
movsb
shrl
or
pop
push
pop
lret
jp
incl
cltd
fisttps
lods
jmp
inc
ss
mov
dec
dec
pusha
das
xchg
insb
xor
jne
mov
jmp
jno
dec
push
sarb
inc
xor
cwtl
into
jae
jne
popf
pusha
dec
xor
lahf
push
fdivr
pusha
sti
push
and
xchg
pop
push
adc
enter
sbb
icebp
push
fs
mov
psrlw
cmp
mov
pop
shl
idivb
loope
addr16
sub
or
movsb
adc
pusha
call
or
push
jle
cmpsb
dec
ja
mov
or
sbb
add
mov
sbb
fsubr
faddl
xchg
mov
jl
pop
ja
xor
out
mov
push
lret
es
ret
sti
adc
dec
out
pop
xor
cmpsb
jae
lods
jo
sbb
outsb
ds
push
xchg
or
jp
or
push
mov
aam
add
push
rolb
and
adc
inc
dec
and
xchg
loope
mov
je
mov
cmp
push
outsl
clc
mov
mov
xchg
mov
cmc
loope
sub
push
mov
push
pop
aad
fsubs
xor
sarb
or
or
inc
or
add
cmp
jmpw
andb
push
mov
sub
or
mov
jmp
mov
or
scas
in
orl
repnz
scas
or
add
cwtl
rorb
leave
std
sub
cmp
mov
data16
cwtl
sar
adc
mov
mov
mov
int3
mov
push
inc
dec
movsl
dec
ret
jmp
scas
inc
sub
push
push
dec
imul
pop
pop
and
and
cwtl
mov
add
loopne
mov
add
and
pop
out
inc
or
lret
sbb
scas
nop
inc
sbb
sbb
mov
push
aam
mov
push
xchg
dec
push
ficoms
and
jecxz
push
ljmp
loop
dec
inc
call
xchg
movsb
pop
pop
mov
jo
test
movsb
jmp
movsb
ret
es
mov
idiv
sti
adc
pushf
push
icebp
pop
dec
js
das
ret
and
mov
dec
cmp
pop
jmp
ljmp
push
loope
pop
sub
aaa
dec
xchg
or
fldpi
insb
adc
lods
daa
shl
mov
rcr
jbe
xor
lds
pushl
jmp
ljmp
xor
data16
cmp
sbb
mov
bound
inc
in
lds
test
iret
mov
mov
adc
jle
jae
jmp
xchg
cmp
xor
push
or
push
mov
pop
xlat
idiv
cmp
dec
mov
and
pop
pusha
mov
es
jb
xchg
adc
adc
add
jmp
fldenv
roll
imul
ja
push
jnp
or
adc
add
xor
inc
jmp
mov
mov
push
push
in
xor
out
dec
inc
pop
dec
mov
cmovg
or
adc
shl
push
add
xor
pop
xor
jmp
ret
and
push
add
mov
cli
jl
dec
push
lds
ret
jmp
or
push
mov
cltd
jl
jmp
xor
test
jmp
inc
mov
xchg
jnp
adc
repnz
mov
or
rol
pop
test
and
loopne
jmp
and
jg
sub
inc
mov
dec
ljmp
mov
lret
dec
sub
popa
pop
pop
repnz
xchg
out
add
lock
pusha
jae
mov
cmp
mov
loopne
or
or
in
ret
dec
daa
inc
push
sbb
inc
add
mov
shlb
je
or
adc
popf
das
mov
xchg
push
les
lret
jmp
or
inc
out
xor
mov
add
lea
cmp
push
add
sub
jb
xchg
push
sbbb
xchg
lahf
xor
movsl
cmc
and
jb
ljmp
lcall
push
add
push
lock
jo
es
daa
ljmp
cmp
mov
adcb
mov
pop
jmp
pop
or
out
movsl
roll
fwait
lcall
jle
jnp
push
jmp
in
push
mov
inc
push
popa
or
add
jl
push
add
pop
test
and
faddp
jmp
iret
xor
pop
jl
movq
sbb
push
js
dec
mov
out
pop
push
sub
pusha
xchg
in
inc
mov
loopne
mov
into
inc
pop
mov
xchg
pop
inc
pop
push
movsl
gs
sar
andb
daa
and
add
imull
mov
sbb
jmp
inc
mov
mov
cs
jo,pt
cmp
call
repnz
xchg
pop
in
addr16
aas
jge
inc
lock
jge
adc
repnz
adc
xor
pop
add
push
mov
pop
outsl
movl
aas
or
push
andl
jne
mov
dec
outsb
inc
js
jb
and
add
inc
sub
sub
fdivl
dec
mov
imul
or
pop
shl
or
leave
and
xlat
add
pop
lea
repz
push
push
jge
fiaddl
pop
popa
pop
das
lods
and
cmp
in
jo
loopne
inc
sarl
sbb
fbstp
in
fcompl
adc
addr16
cli
popf
pop
inc
jmp
or
xchg
sbb
cli
sbb
add
mov
xchg
inc
sarl
loop
xor
jecxz
outsl
cmp
ret
cmp
push
into
pop
sub
lods
lock
add
adc
mov
xor
cs
push
xor
mov
xor
push
cmp
add
pop
inc
inc
inc
arpl
div
orb
in
xchg
ret
jb
inc
fcomp
sbb
in
sahf
or
push
push
mulb
dec
daa
ror
dec
sub
or
mov
out
and
shlb
mov
or
dec
mov
mov
or
mov
daa
pop
pop
adc
cmp
add
test
cmc
imul
mov
dec
jle
xchg
push
xor
xlat
mov
js
sbb
sbb
scas
cwtl
in
inc
add
call
mov
loopne
mov
xor
fbld
add
xor
push
inc
pusha
pop
mov
and
push
nop
frstor
sub
popa
add
and
dec
jmp
jmp
mov
testb
and
in
sbb
outsl
popa
outsb
dec
rorb
sub
ja
icebp
or
roll
push
push
pusha
out
push
jp
push
pop
fidivrs
data16
in
dec
pop
dec
pop
stc
jecxz
sub
and
jmp
fcmovnb
dec
shrl
notl
pusha
dec
mov
mov
gs
pop
push
mov
xchg
std
mov
or
xor
cmc
pop
out
mov
push
pop
sub
ror
cmp
push
test
inc
xchg
sub
sbb
jge
bound
inc
pop
arpl
jb
mov
insb
push
loope
lcall
mov
mov
es
mov
mov
out
pop
inc
aam
xor
fdivr
mov
or
push
icebp
mov
stc
ja
ret
sbb
pop
je
or
pop
and
and
xor
popa
std
andl
pop
outsb
sbb
fabs
pushf
insl
or
pop
out
and
dec
add
xor
pop
xchg
ljmp
push
addb
test
pop
jecxz
test
scas
lret
bound
sbb
push
out
push
push
js
inc
and
or
mov
adc
mov
xlat
out
movsl
dec
ja
mul
jmp
push
xchg
pop
iret
add
and
out
das
loope
lret
add
in
push
lods
outsb
dec
or
xchg
in
ret
xlat
jmp
inc
lock
aas
enter
xchg
repz
dec
leave
movsl
stos
jae
inc
shr
pushf
cwtl
xor
fcmovb
aad
mov
inc
call
add
pop
js
in
lds
mov
cmpb
mov
sbb
pushl
scas
cmp
sub
fstps
add
in
xor
pop
jmp
push
pop
neg
cld
imul
sbb
push
cmpb
cli
shrl
ret
mov
lods
imul
inc
scas
fstpt
out
sysenter
push
gs
or
pop
out
mov
push
push
xchg
sbb
aad
movl
and
mov
int3
test
mov
aaa
inc
dec
sarl
jbe
mov
lcall
jecxz
je
mov
movsl
inc
jb
pop
fsub
leave
or
pushf
or
loop
xchg
jne
and
mov
mov
les
mov
sub
jecxz
xchg
push
mov
and
jp
mov
movsb
jb
or
es
out
xchg
sbb
sbb
jge
inc
or
push
mov
fcom
push
sub
or
ror
xchg
xor
xchg
jmp
andb
int
hlt
movsb
push
sub
hlt
out
cmp
incb
enter
daa
loop
int3
fcoml
inc
fwait
jg
add
mov
inc
mov
mov
add
inc
add
out
repnz
imul
push
adc
xchg
mov
inc
lods
ss
test
lods
mov
pushl
bound
fldenv
shl
call
ret
outsb
fnstenv
test
xlat
inc
xchg
mov
add
xor
outsl
push
call
out
in
arpl
jmp
int3
inc
cld
jno
aam
xor
jo
pusha
push
fsts
das
out
sub
into
mov
mov
leave
dec
cmpb
dec
push
repz
aaa
mov
xchg
movsb
inc
stos
mov
out
or
jmp
andl
inc
adc
nop
ret
nop
adc
shl
push
imul
in
mov
ret
sbb
addr16
test
popf
mov
rorl
sbb
or
testb
mov
outsb
or
clc
or
int
inc
jne
and
sub
in
add
insb
mov
insl
cmc
push
cmp
stos
mov
mov
in
xchg
vgatherdps
jmp
ret
sbb
clc
loop
add
test
and
aas
sti
xchg
imul
mov
mov
lahf
lods
rorb
les
pop
pop
mov
dec
xchg
mov
sbb
out
add
xchg
fdiv
stos
xchg
pop
mov
and
mov
popa
xor
in
pusha
and
call
push
mov
test
das
jmp
push
mov
in
loop
add
push
mov
jmp
cmp
shlb
lret
jmp
ficoms
lahf
push
fs
out
sub
add
or
xor
daa
pop
aam
js
push
jo
lahf
push
mov
sbb
adc
xchg
rolb
rcrb
ds
jne
call
bound
out
xor
ret
or
jo
and
and
adc
mov
ss
adc
subb
jmp
insb
push
mov
movsb
mov
add
pmaxub
jbe
cltd
mov
pushf
inc
jmp
mov
or
or
mov
add
xor
jmp
inc
pop
pop
mov
ret
push
inc
mov
dec
imul
sbb
dec
xchg
xor
lock
shrb
pop
mov
ja
cmp
sub
imul
adc
dec
adc
sub
mov
inc
jo
cmp
imul
dec
jmp
mov
subl
bound
notb
cmp
inc
dec
pop
dec
adc
inc
jnp
xlat
mov
add
flds
fs
jmp
divb
sbbl
js
adc
push
adc
ret
popa
cmp
push
push
and
pop
lock
jmp
mov
aaa
dec
xor
adc
dec
adc
repnz
sar
sub
pop
popf
dec
sub
das
mov
mov
sbb
sub
call
jl
and
xchg
enter
xchg
push
addr16
dec
rclb
sbb
add
pop
cs
jo
dec
add
adc
out
jbe
dec
nop
insl
pop
ret
mov
scas
pop
or
daa
jb
push
movsb
stc
and
mov
or
xorb
adc
mov
inc
add
sub
rcrb
adc
ds
test
pop
mov
push
dec
test
adc
or
lods
xlat
fcomi
out
inc
jg,pt
adc
lret
adc
pop
mov
movsb
in
pop
mov
enter
sbb
xor
jmp
into
sub
or
mov
cmp
sub
inc
push
in
inc
cmpsb
add
hlt
cs
dec
pop
push
imul
les
jg
push
cld
or
test
pusha
je
cmc
loope
inc
or
sub
adc
or
inc
test
call
push
les
std
mov
push
mov
or
mov
mov
mov
lock
dec
xchg
movsb
rorb
sbb
fimuls
sbb
cmp
or
pop
in
add
ret
arpl
jmp
sbb
pop
pusha
dec
pop
scas
mov
xchg
inc
push
push
inc
or
sub
and
pop
subb
pop
fdivp
sub
nop
push
cmp
movsb
mov
adc
mov
push
outsl
sbb
cld
push
daa
sahf
fdivl
jle
dec
mov
rorl
pop
push
jnp
mov
mov
mov
iret
lock
pop
xchg
shll
in
mov
mov
dec
in
in
jle
lea
es
push
push
pop
inc
into
iret
into
adc
adc
jg
ss
ficoms
int
jmp
mov
ret
sub
sbb
pop
mov
cs
cld
rolb
inc
mov
dec
movsl
addb
lock
add
aam
xor
test
in
dec
xlat
icebp
push
aas
cwtl
pushf
sbb
mov
pop
or
enter
add
adc
dec
enter
xchg
xchg
jle
mov
cmp
push
cmc
push
add
xlat
mov
and
adc
mov
data16
test
inc
inc
or
xor
pop
nop
adc
or
jmp
pop
and
add
mov
clc
daa
pop
and
mov
adc
divl
jmp
jg
int
xchg
xorl
sbb
dec
fwait
cmp
iret
je
mov
aas
cmc
scas
int
inc
or
add
push
mov
jmp
adc
inc
cmp
push
in
and
shr
nop
add
sub
ret
and
je
test
and
sub
jp
subb
adc
or
hlt
imul
inc
das
cld
pop
ficoml
sbb
jmp
dec
test
shlb
dec
das
mov
lds
adc
cmp
fbstp
sahf
lahf
dec
pop
push
or
mov
and
mov
arpl
push
ficomps
adc
mov
dec
jmp
repnz
adc
cmc
adc
cld
jno
pop
mov
insl
mov
lods
test
testb
and
inc
cmp
fmuls
add
add
or
leave
jle
fnstenv
jge
and
dec
test
dec
test
mov
sub
sarb
pop
fcmovbe
cmpb
push
add
push
or
inc
jno
fdivl
sub
add
sub
add
cmp
clc
push
push
pop
sbb
pop
cmc
mov
test
pop
mov
dec
inc
test
mov
scas
sbb
icebp
add
push
in
lds
mul
test
jns
push
xlat
hlt
pop
mov
adc
jmp
mov
aas
leave
mov
or
and
or
inc
push
mov
jge
nop
daa
fmull
push
mov
xlat
in
frstor
ret
pop
cs
push
and
ljmp
cld
inc
jnp
fisttpll
sbb
xchg
jge
jb
pop
xor
or
jge
ljmp
sub
das
sub
mov
cmp
inc
mov
sub
jmp
push
loope
mov
xlat
mov
fadd
push
xchg
js
mov
jl
out
add
add
dec
subl
adc
pop
dec
fsubp
adc
aad
fsubrs
repz
add
xchg
imul
lahf
pop
dec
es
popa
push
xchg
mov
aas
fists
sbb
movsb
cmp
loope
push
push
rolb
add
xor
mov
fscale
pop
cmp
adc
or
cltd
imul
lock
pop
push
in
rorb
cltd
shrl
test
mov
test
mov
pop
add
cwtl
push
add
shll
in
sub
fbld
popf
lcall
xchg
xlat
rcrl
in
aad
cli
push
out
pop
push
mov
xchg
pop
jmp
fadds
addb
pop
cmp
sbb
push
cwtl
loop
push
add
sub
cmpsb
or
inc
inc
ss
jne
or
jmp
mov
cld
add
inc
mov
shrb
xlat
and
sub
push
stos
dec
pop
ja
cltd
jo
add
or
xor
popf
out
scas
pop
add
outsb
aaa
loope
sub
test
addr16
jmp
inc
test
insl
and
sub
in
push
pop
hlt
add
aad
push
adc
sub
pop
dec
stos
inc
cmp
or
inc
out
fisubs
call
xchg
jle
scas
add
je
nop
clc
push
pusha
js
add
push
xchg
jmp
pop
xorb
adcl
dec
in
in
dec
int3
dec
push
out
sbb
imulb
jno
dec
insb
fsubr
adc
clc
das
dec
pop
cmp
sbb
add
in
xchg
jp
jmp
xchg
ficoml
outsb
dec
daa
or
iret
aas
fs
popa
popa
inc
or
sbb
popf
push
pop
pop
aam
add
leave
test
das
jp
sbb
mov
cmpsl
ljmp
xor
out
jae
bound
push
adc
xor
stos
add
adc
js
adc
aaa
cwtl
test
add
dec
fwait
and
movsb
jl
test
inc
loopne
lahf
inc
jnp
dec
andb
icebp
dec
sub
ret
leave
adc
pusha
fcoml
lcall
cwtl
xchg
inc
add
dec
mov
or
cs
push
rorl
add
inc
ljmp
add
push
jb
mov
frstor
sub
jmp
sub
xlat
jo
xchg
ja
inc
aas
mov
rcrl
into
ja
adc
cmp
dec
rcl
xchg
inc
lcall
mov
pushf
or
and
mov
cs
cld
cmp
sub
pusha
sub
xor
out
and
cmc
push
mov
test
ret
and
inc
pop
add
ja
jns
dec
push
xor
jg
aam
push
add
icebp
jmp
mov
xor
dec
xor
inc
push
or
cmp
ret
lahf
sub
or
ds
adc
xchg
add
dec
test
loope
mov
sarl
lret
scas
pop
pop
dec
and
push
mov
ja
dec
pop
mov
pop
mov
popa
mov
mov
in
pop
dec
call
or
push
mov
sbb
iret
adcb
or
xchg
push
pop
add
out
or
add
jns
je
mov
iret
testl
adc
push
mov
push
les
pop
inc
loop
jne
lds
add
xchg
or
mov
divb
sub
hlt
jno
sub
je
jmp
inc
jne
push
arpl
movsb
pushf
cmpsl
jno
sub
mov
fs
js
and
push
push
and
es
or
js
cli
and
arpl
cld
hlt
mov
das
cmp
pop
jmp
mov
insb
fildl
sub
add
xor
xchg
push
xor
xor
in
loope
int
aad
sub
bound
ret
clc
cwtl
cmp
adc
pusha
outsb
mov
outsl
or
fnstcw
mov
push
es
ds
test
jns
neg
dec
pop
mov
jae
push
outsb
outsl
or
jb
lea
not
push
xchg
cmpsb
jmp
xchg
in
les
add
sub
pop
inc
dec
jnp
and
mov
adcb
jbe
fsubr
cmp
cmp
mov
mov
push
push
aam
loop
cmc
popa
add
add
out
nop
rorl
pop
sub
xor
loope
push
out
add
and
repz
xor
in
inc
and
dec
pop
ret
mov
jecxz
push
xor
sarl
cmp
sub
lcall
mov
cmp
pop
cs
xchg
cmpsb
push
sbb
pop
adc
or
xor
jmp
cmp
ds
dec
or
movsb
das
pop
mov
add
jnp
cmp
xchg
punpckhwd
sti
imul
loope
loop
inc
mov
les
sub
sbb
push
outsb
into
es
sub
aas
pusha
xlat
enter
jle
jo
xchg
xchg
inc
mov
inc
loope
repnz
out
mov
rcr
add
and
dec
jmp
repz
ffree
cmpsb
xchg
mov
out
cld
sub
shll
mov
dec
loope
imul
int
or
pop
xchg
pop
movsb
push
in
inc
nop
cli
mov
and
mov
push
or
out
aas
push
and
arpl
cmpl
jno
adc
fsubr
cmp
cld
inc
mov
adc
add
testl
pop
dec
outsb
mov
pop
jmp
mov
add
shrl
jb
add
rclb
mov
std
lret
or
adc
push
sub
aaa
les
enter
lret
adc
push
jg
mov
mov
sbbb
push
pop
dec
imul
add
std
xchg
add
bound
cs
ret
xor
cwtl
dec
popa
jmp
cmp
xor
pop
js
pop
inc
xor
stc
pop
inc
mulb
add
rdtsc
outsb
mov
pop
leave
or
lods
inc
movsl
jg
and
sub
inc
jle
and
mov
pop
popf
je
xchg
insl
hlt
pop
dec
adc
test
pop
dec
test
adc
daa
lods
fstpl
xor
les
cld
testl
fs
inc
cmp
jge
les
mov
push
lcall
or
xor
jle
adc
xor
test
test
and
adc
sti
ja
pusha
jp
mov
pop
dec
xchg
mov
cmp
stos
xchg
rorl
mov
mov
sub
arpl
in
jp
sarl
icebp
add
add
dec
imul
cli
sub
xchg
mov
call
pop
adc
mov
ja
jbe
ja
mov
out
lret
xlat
loop
push
sub
aaa
push
push
mov
shll
test
mov
movsb
mov
pop
iret
add
push
dec
cwtl
repnz
sarb
pop
popl
stc
push
neg
mov
out
popa
jmp
add
incl
cmp
sbbb
push
add
cmp
xchg
mov
add
ds
jg
out
mov
lret
adc
dec
pop
cs
pop
mov
stos
jo
aam
xor
cmp
ret
fists
and
out
sub
outsb
or
add
rcrb
popa
fstl
push
adc
pop
mov
sub
and
inc
xchg
imul
fstps
sub
mov
stc
push
repnz
mov
add
inc
xor
hlt
pop
daa
and
ret
or
in
add
rolb
jmp
push
pop
dec
xor
push
sub
movsb
and
cmp
push
cmc
stos
and
enter
out
or
sbb
notl
into
push
aam
pop
fmuls
push
adc
xchg
test
lret
mov
cmc
or
or
lret
push
cmp
jmp
xor
dec
movsb
insl
or
test
or
cld
mov
xor
dec
pop
out
rclb
inc
or
dec
fstps
push
adc
dec
add
lcall
pop
or
mov
cmpsl
push
mov
jg
pop
dec
sub
dec
adc
jg
pop
jg
jnp
pop
dec
fists
nop
test
xor
dec
call
lods
inc
les
and
mov
or
pop
filds
ficoml
inc
jmp
dec
cmp
fs
cmp
stos
xorl
push
inc
lcall
cs
cmpsl
imul
sub
mov
fdiv
push
lret
in
lods
inc
pushl
enter
adc
sbb
jecxz
adc
ret
div
in
and
jle
push
dec
sub
ss
add
pop
inc
iret
push
dec
dec
enter
fadds
xor
push
jmp
cmpb
and
mov
sbb
fisttpll
sub
pop
daa
and
add
pop
lds
decb
mov
fwait
pop
rcl
jne
dec
dec
je
add
push
aad
inc
cmp
adc
fildl
jno
jae
add
and
add
pop
mov
xchg
clc
xchg
out
lcall
mov
je
xor
pop
adc
testb
ret
lds
mov
sub
pop
dec
ret
dec
xor
add
fsubrs
mov
or
dec
bound
add
and
add
inc
mov
jg
fs
ror
and
push
jge
pusha
dec
call
leave
into
sub
jmp
push
bound
out
add
int3
je
jmp
xchg
in
je
mov
leave
mov
jae
push
loope
add
mov
pop
xor
inc
push
test
push
add
aam
mov
test
sbb
add
lahf
out
mov
pop
mov
cwtl
loopne
or
or
jb
stos
push
add
add
and
jo
cmp
iret
dec
cmp
jb
movsl
js
mov
jl
pop
push
in
sub
jne
rcrl
mov
leave
pop
dec
cmp
pop
stos
popa
add
sbb
push
mov
dec
mov
and
cltd
ds
out
mov
pusha
mov
int
mov
loopne
cmp
notl
mov
stos
xor
jmp
adc
push
loope
lods
push
test
dec
dec
mov
sub
repnz
fisubs
arpl
mov
adc
pop
mov
popf
jle
adc
pop
pop
xor
mov
neg
ret
push
das
push
adc
dec
nopl
lds
mov
adc
dec
orb
dec
lcall
insb
xchg
cmpl
jb
dec
fmul
xor
push
test
inc
pop
pop
repz
das
jg
sbb
fadds
mov
mov
xor
jo
push
rcrb
sbbb
inc
or
xor
push
js
inc
test
andb
pushf
jnp
xor
jno
imul
dec
subl
out
rcl
jmp
out
inc
js
mov
xchg
xchg
iret
test
mov
xchg
std
and
xlat
mov
dec
xchg
or
pop
daa
push
mov
pop
jle
xor
sub
aam
dec
and
pop
orb
jl
testl
push
add
mov
stos
mov
xchg
out
ljmp
and
aas
jp
cmp
sub
push
in
ljmp
xchg
orb
sti
xchg
hlt
mov
test
adc
daa
sub
and
es
int
movsl
inc
outsb
xor
inc
repnz
ret
cmp
ret
imul
push
mov
sub
rcrb
jge
data16
leave
adc
roll
dec
das
mov
lcall
add
mov
pushaw
jg
enter
and
dec
and
add
je
cmpl
fnstsw
add
sub
pop
adc
or
testl
mov
add
push
mov
jmp
dec
mov
dec
popa
dec
add
and
outsb
lods
stc
add
fsubr
sti
das
idiv
jmp
add
dec
add
addr16
loope
push
or
adc
outsb
xor
dec
pop
cld
inc
add
jmp
inc
or
mov
jno
leave
inc
inc
dec
xchg
test
sub
inc
push
popf
push
pop
outsl
divl
and
enter
jmp
mov
or
add
push
add
bound
or
sbb
mov
xorl
jb
jno
in
enter
out
loop
add
push
in
dec
or
cmp
push
mov
movsl
fs
or
inc
push
pop
notb
lock
arpl
push
push
incl
lods
jle
or
outsb
jno
shrl
or
dec
inc
mov
in
bound
or
das
out
or
pop
dec
add
and
sub
jmp
aam
shrb
outsl
loopne
repz
jg
negl
sar
fmul
pop
sbb
jmp
inc
sub
add
sub
sbb
pop
js
cmpb
loope
dec
cli
add
data16
mov
xor
mov
fmull
push
ljmp
jge
pushf
aad
pop
push
push
mov
xor
jae
mov
inc
push
lret
jmp
insl
sub
int
cs
jnp
xor
jmp
xlat
adc
mov
xchg
stc
inc
adc
add
pusha
inc
ja
in
xchg
add
add
add
pop
jo
sub
or
and
pusha
not
mov
xor
pop
fs
sbb
sub
cmc
cmp
imul
adc
cmp
push
jmp
jae
mov
insl
imul
shlb
outsl
xor
sbb
xrelease
mov
out
xchg
shr
dec
aad
jp
jns
xor
pushf
leave
cmp
mov
cld
mov
cmp
pusha
bound
fimuls
pop
pop
icebp
dec
daa
test
rclb
jae
mov
mov
imul
mov
xor
adc
incl
out
mov
mov
cli
inc
cmp
std
jmp
push
push
sbb
inc
shrb
popf
mov
pop
mov
or
outsb
mov
or
sbb
inc
addb
out
push
decb
mul
cmp
jmp
cmp
bound
jb
pop
lock
sahf
add
mov
mov
or
cmp
or
nop
sbb
cs
add
jb
jmp
mov
aad
sub
std
inc
inc
adc
push
sbb
sbb
jp
jmp
and
and
or
inc
into
arpl
mov
movsb
or
outsb
push
pusha
sub
jmp
or
js
aas
sub
icebp
push
hlt
adc
adc
mov
ficomps
repnz
scas
sub
sub
sub
push
enter
pop
inc
jne
sbb
into
cmp
out
test
sub
out
add
int
inc
jmp
xor
push
mov
movb
rclb
ds
lods
push
sub
pop
and
mov
cmp
je
or
xchg
test
push
aas
into
sub
aaa
fs
inc
leave
push
lds
fdivrs
popa
mov
in
xlat
das
repz
pop
and
push
insb
pusha
addr16
or
dec
xorb
add
pusha
lcall
or
inc
je
fucomip
stos
jbe
xchg
out
fwait
pop
fldl
aam
or
into
out
mov
popf
inc
call
push
mov
mov
cs
jo
sbb
and
adc
inc
xchg
loope
push
push
xor
and
mov
sbb
lods
ds
insl
push
int3
inc
inc
cltd
sbb
in
xchg
out
and
pop
push
push
xchg
test
jmp
sahf
pop
nop
xor
add
pop
sbb
int
push
push
sbb
loop
or
shl
fsubs
lret
pop
push
sbb
and
bnd
loope
mov
dec
lahf
orb
sub
mov
and
movsl
xchg
ss
aas
ret
loop
arpl
jmp
enter
inc
arpl
xchg
out
jne
add
imul
jmp
aam
das
lahf
jl
pop
ret
pop
test
mov
in
jmp
cmp
fnstenv
push
cmpb
pop
pop
add
xchg
jne
rol
mov
pop
sahf
xlat
mov
mov
or
push
jle
out
imul
pop
and
mov
dec
fistl
stos
imul
pop
aaa
mov
jne
xchg
cmp
lahf
fsubr
rcr
scas
inc
inc
test
jno
push
lods
inc
leave
push
je
pop
jg
nop
test
cmp
jp
mov
stc
xor
jnp
cmc
adc
inc
addr16
adc
lock
fwait
cmp
xor
cld
cmp
pop
es
add
stos
pushl
jl
pushf
cli
jo
cltd
fildl
arpl
test
sub
jmp
push
popf
aam
pop
jns
push
add
pop
sub
cmp
dec
movsb
add
xlat
add
pop
jg
xchg
or
cmp
pop
pop
fwait
cld
pop
xor
rorb
jmp
sbb
repnz
sub
imul
xchg
mov
pop
pop
clc
mov
mov
sub
xchg
clc
std
pop
mov
enter
inc
shrb
enter
les
and
inc
pop
push
cmpsb
jns
xor
repz
pop
pop
inc
inc
mov
sbb
and
incb
dec
pop
mov
sub
sti
cltd
xor
push
lret
inc
push
push
in
mov
cmp
ret
xchg
shr
test
mov
stos
mov
int
leave
in
fistl
fsubrl
pop
cs
pop
pop
add
aad
loop
in
bound
ficomps
dec
xchg
dec
pop
clc
jecxz
aas
dec
xor
scas
push
cmp
pop
pop
push
mov
xorb
xchg
inc
cmp
sbb
jne
or
jmp
bound
push
pop
mov
inc
and
xchg
xchg
fsubrl
inc
mov
xor
rorl
in
movq
daa
jmp
dec
push
lds
stc
inc
lret
or
mov
cli
mov
outsl
mov
jnp
mov
das
jns
repnz
jno
push
mov
dec
pop
or
add
inc
adc
add
sub
jns
fiadds
cs
pop
jmp
aam
inc
adc
adc
pop
test
stos
bound
dec
aad
add
jg
outsl
pop
mov
add
mov
sbbb
sbb
push
mov
sub
xchg
arpl
mov
int
shll
add
pop
fcmovnu
xchg
test
nop
and
repnz
mov
mov
inc
inc
cmc
jp
movsb
fisttpll
jl
stos
add
push
rcrb
stos
pop
sub
cwtl
and
lods
inc
sub
movsl
jae
sub
nop
xor
insl
stos
pop
lock
iret
dec
mov
jmp
mov
cmp
cs
add
push
push
add
scas
stc
outsb
add
push
mov
scas
pop
mov
clc
pop
jno
adcl
jmp
sub
push
sub
push
mov
xchg
in
sbb
cmpb
imul
sub
mov
andps
sub
movsl
loop
push
mov
dec
js
es
call
add
rcrl
fs
or
pushf
inc
loope
imulb
jb
mov
and
cli
orb
orb
mov
xchg
test
push
popf
mov
shlb
vmread
ret
jb
mov
sub
jne
and
xchg
xchg
stc
sub
es
addl
dec
mov
dec
dec
pop
adc
je
mov
inc
lcall
sub
pop
decb
into
add
imul
or
imul
cmp
pusha
dec
push
xor
packssdw
addl
mov
test
mov
jecxz
add
imul
rcl
pusha
cmp
push
pop
daa
jmp
jp
add
imul
pop
imul
xor
in
push
fidivl
xchg
mov
stos
adc
movsb
mov
mov
xchg
push
mov
rcll
xor
xchg
sahf
cmp
fsubs
mov
inc
add
in
lret
or
add
adc
mov
popf
add
dec
pop
pop
enter
fwait
jne
push
out
addr16
add
scas
mov
sarl
or
push
and
or
or
mov
mov
sub
push
xor
jp
dec
sub
xor
jmp
xchg
test
loop
xor
add
loopne
or
or
cmpb
and
pop
cmp
hlt
sub
adc
jmp
test
xor
iret
add
das
popa
int3
mov
arpl
aas
xor
pop
and
pop
xchg
cmc
adc
jb
cmp
adc
cmp
xchg
ret
loop
pop
popa
roll
and
inc
mov
or
jecxz
inc
adc
cli
jo
adc
jmp
mov
mov
sub
mov
out
repnz
ja
pop
dec
cltd
push
push
mov
imul
ret
push
sbb
adc
and
jne
or
sub
or
pop
jnp
add
shl
jle
xor
sub
mov
clc
loopne
in
and
and
rcll
push
stc
into
fadd
cs
push
cmpl
or
sub
incl
pop
inc
jo
pop
sarl
xor
jmp
adc
repnz
jle
mov
pop
xchg
inc
notl
adc
or
cltd
pusha
lds
popfw
mov
inc
scas
enter
xor
pusha
int
call
dec
xor
pop
shr
pop
xchg
jp
ljmp
shrb
into
or
xor
test
jne
push
or
orb
insb
mov
cli
negl
sub
test
jp
xchg
jmp
adc
dec
and
xchg
scas
push
adc
fisttps
xor
pop
adc
insl
pop
jnp
in
mov
psrlw
cmp
jnp
or
cld
clc
jb
in
bound
mov
and
cmp
js
push
push
sbb
loopne
pop
jecxz
inc
aam
aas
sbb
and
xor
or
icebp
push
int
pop
clc
pop
roll
xchg
in
xorb
mov
je
sub
pop
jle
cmp
or
add
xchg
test
and
loop
xchg
fisubl
je
aaa
sub
mov
mov
rolb
sbb
mov
push
mov
fcmovnbe
fsub
xchg
and
adc
add
adc
dec
clc
adc
fimull
test
sub
cmp
addb
dec
add
mov
lahf
inc
and
cli
inc
pop
sub
add
cs
ret
jo
dec
jmp
das
pop
call
stc
inc
mov
repz
xchg
cmpsl
std
sbb
fisubrl
xchg
xor
jb
les
xlat
sbb
add
cmc
mov
cmp
push
push
lock
or
and
adc
cli
adc
mov
or
jl
pop
out
sub
or
push
mov
push
dec
add
push
andb
hlt
pusha
fildl
mov
cltd
dec
or
pop
inc
jmp
mov
and
mov
push
cs
or
sub
fnstcw
js
das
xchg
or
push
add
jne
pop
scas
inc
scas
inc
cs
pop
and
jb
push
push
push
dec
lahf
jp
pusha
cmp
pop
mov
add
sbb
push
es
adc
sbb
jmp
pop
out
cmpsl
push
adc
sub
ljmp
insb
into
cld
bnd
hlt
andl
rol
dec
popf
lahf
test
adc
inc
aaa
shlb
insl
in
cmp
roll
dec
adc
or
subb
outsl
jb
jbe
nop
in
or
add
pop
repnz
pop
and
push
or
push
jne
push
mov
pop
sbbl
push
jle
movsl
cmpsl
stos
jge
lret
ss
out
cmp
push
pusha
jb
popf
mov
mov
cmc
movsb
rcr
pop
pop
aad
add
inc
push
int
loopne
jge
mull
push
mov
adc
jl
shr
in
ss
push
jmp
hlt
ljmp
enter
push
push
adc
ret
scas
mov
ja
inc
imul
inc
sub
jae
mov
and
mov
bound
jmp
xchg
inc
push
jge
dec
mov
leave
nop
shlb
xchg
or
dec
mov
pop
jbe
out
and
out
dec
imull
inc
sbb
pusha
xchg
inc
jle
adc
inc
add
xchg
pop
incb
mov
addb
push
sub
sbb
enter
rolb
cmc
jb
ljmp
push
pop
pop
pop
xchg
jbe
or
pop
inc
fcom
roll
push
es
loopne
lea
and
cmp
cmpsb
mov
out
adc
lds
insl
fdivrs
jne
gs
cmp
out
pop
push
pop
inc
dec
add
fnstsw
loopne
or
test
and
ja
mov
and
adc
lahf
mov
sub
adc
std
xor
or
sub
pop
push
enter
mov
xor
inc
and
push
mov
jge
dec
dec
imul
push
or
int
aas
mov
imul
fnstsw
lods
popa
rcrb
ds
sbb
push
push
push
repnz
xchg
sbb
jne
mov
inc
mov
xor
loop
mov
insb
pop
test
les
ljmp
dec
loopne
push
xchg
pop
jg
arpl
and
jnp
mov
add
pop
push
push
mov
pop
je
adc
add
and
js,pn
or
dec
movsb
nop
popa
jns
sbb
dec
lahf
rolb
or
sub
sub
add
add
dec
test
pop
push
sbb
pop
sub
je
stc
clc
xchg
cwtl
dec
dec
je
repz
adc
add
in
mov
mov
popa
aaa
cmp
pop
and
aam
jmp
test
lds
call
push
jmp
push
ss
pop
push
dec
pusha
xchg
imul
std
repz
hlt
outsb
push
stc
dec
daa
sub
into
dec
adc
sub
xchg
jmp
mov
adcb
sub
xor
es
ret
cmpl
loopne
negb
int
adc
dec
cmp
pusha
lods
cmpsl
fcompl
mov
test
add
and
mov
idivl
add
movsl
inc
adc
addl
jo
sub
test
js
adc
cmc
pop
jmp
shrb
add
xor
in
jg
addr16
push
add
mov
in
rclb
mov
pop
xor
cmp
push
xor
popf
mov
push
filds
and
sti
xchg
sub
iret
pop
xor
inc
cmp
adc
inc
mov
or
fcom
jmp
das
add
dec
call
jb
cwtl
cmpsl
popf
rclb
std
and
xorb
sbb
das
pop
sub
cmc
out
sqrtps
and
add
sbb
add
mov
fldenv
push
push
jmp
incb
pop
pushw
dec
adc
xor
lock
int
lds
ds
nop
aad
cmp
cmp
or
jl
sub
inc
sub
pop
mov
lea
dec
loop
das
and
xor
add
dec
jmp
stc
xchg
iret
pop
or
fcomps
sahf
jb
push
int3
inc
xor
mov
int3
test
dec
cmp
gs
int3
xorb
clc
cmpsl
popf
mov
mov
jmp
dec
adc
lret
adc
cli
into
test
xor
sub
cli
or
pop
das
pop
xor
push
movsl
xchg
frstor
mov
jae
std
sahf
stc
xorb
dec
dec
popw
jge
add
push
pop
pop
pop
sub
xor
sbb
sbb
imul
push
xchg
lret
pop
push
push
push
divl
movsb
push
pop
out
dec
pop
sub
jmp
lock
jp
dec
adc
add
dec
push
mov
xor
daa
push
into
in
adc
mull
pop
aam
inc
sbb
ds
sub
adc
and
enter
inc
and
lcall
cmpsl
xor
jmp
mov
mov
cmp
mov
mov
rcll
repnz
xor
cwtl
sub
mov
popa
sbb
add
movsl
orb
addl
sti
nop
cmp
dec
push
or
test
sub
lock
cmp
push
adc
nop
lcall
cmp
shl
es
mov
xchg
push
mov
ljmp
dec
jg
jl
jecxz
ucomiss
sub
push
sarb
fst
or
adc
sbb
loopne
mov
sub
dec
add
daa
mov
ds
mov
and
adc
and
out
lea
daa
xor
loop
or
jno
cmpsl
je
sbb
test
and
imul
imul
mov
mov
mov
pop
push
or
sub
pop
push
sahf
aad
and
lahf
les
pop
clc
int
sbb
inc
dec
ret
jle
loop
pop
ljmp
in
mov
dec
dec
popf
sub
pop
pop
jns
pop
push
lds
call
mov
call
or
mov
dec
and
push
icebp
cmp
pop
sbb
add
aaa
sti
lret
push
jl
xor
fcoms
add
jmp
iret
push
mov
test
cmp
mov
jns
cmpl
sbb
adc
pop
pop
push
mov
fwait
dec
lock
lret
or
ficoml
pop
jbe
xorb
pop
stc
pop
divb
cmp
aas
add
push
dec
and
and
test
pop
add
jo
idivl
mov
or
dec
jl
sbb
movsb
lods
clc
mov
je
jmp
shll
pop
mov
std
out
bound
xchg
mov
in
dec
pushf
hlt
inc
bound
mov
lahf
cmp
or
movnti
loop
and
fsubrs
jg
cld
dec
dec
ds
rclb
mov
call
sbb
adcl
add
sub
pop
in
ret
push
test
out
test
mov
xor
daa
sub
lea
or
out
sbb
test
pop
les
and
add
xor
pusha
lret
push
gs
or
push
pop
adc
or
add
mov
sti
push
xor
add
sub
scas
and
outsb
cli
pop
pop
ljmp
push
adc
or
repnz
xlat
cwtl
pop
add
cmpb
mov
cli
or
cmp
jb
pushf
add
cmc
mov
test
arpl
push
je
jo
xchg
dec
cmp
adc
xchg
andb
daa
mov
int3
add
and
int
push
mov
mov
and
das
mov
test
movsl
add
dec
mov
or
call
ficompl
shlb
fs
das
dec
xor
add
mov
call
mov
push
mov
mov
jle
cmpb
mov
fstl
popf
gs
cs
push
mov
addl
jnp
stos
mov
js
lahf
fldz
in
push
jl
hlt
sub
xor
push
js
fcomps
outsl
add
mov
ja
mov
sub
mov
add
mov
mov
push
aam
push
out
imul
mov
xchg
ds
jg
lret
inc
scas
push
push
rcrl
pop
and
outsb
lea
test
rcl
mov
sar
imul
movsl
mov
adc
shr
push
xor
hlt
or
or
cmp
jmp
cld
jecxz
pop
aad
add
xor
lcall
js
rcrl
pop
jge
pop
jns
andl
test
pandn
add
stc
and
or
hlt
sbb
pusha
dec
mov
xchg
push
outsl
inc
jbe
jb
lahf
pop
rcrl
pop
push
aas
push
add
insl
jmp
stos
add
adc
test
sub
fnstcw
imulb
rorb
sub
and
mov
push
push
inc
ss
out
ljmp
dec
pusha
add
lahf
pusha
sub
test
xchg
mov
mov
testb
push
test
cmc
jmp
outsb
sub
enter
fbld
aad
ja
jge
dec
mov
dec
and
imulb
or
test
ja
jp
push
out
cmp
sbb
jg
out
clc
lahf
outsb
and
repz
adcb
jg
popf
jne
xchg
add
dec
mov
fidivrs
cmpsb
mov
jae
pop
testl
pop
or
or
pop
push
mov
icebp
xor
sbb
fwait
leave
add
mov
jo
cwtl
xchg
sbb
and
pop
add
lahf
jae
cltd
pop
out
lahf
sub
sbb
shrl
inc
es
pop
rclb
mov
aam
push
daa
int3
or
dec
inc
leave
pop
lods
fbld
bound
push
shll
or
adc
or
leave
jmp
je
mulb
sbb
repnz
cmp
push
dec
pop
sub
cmovno
movsb
clc
xor
inc
cmp
and
mov
or
mov
aad
or
shll
cmp
pop
outsl
pushf
out
xor
pop
aaa
js
jp
and
fiadds
ret
add
add
out
pop
lret
sub
jns
adc
pop
sbbb
pop
mov
cmp
push
cmpsb
xchg
enter
mov
jbe
nop
stos
pusha
notb
mov
or
xchg
or
into
cmp
mov
pop
mov
test
outsl
and
adc
pop
lcall
ds
das
pop
call
mov
push
xchg
cmp
adc
jbe
rclb
dec
das
cmp
pop
fbld
cmp
xor
cmp
repnz
jle
push
inc
loopne
into
mov
push
mov
outsl
mov
test
incb
mov
pop
div
pushf
cmp
pop
push
sub
or
lcall
inc
aas
sarl
rolb
setp
dec
out
aad
pop
in
roll
dec
adc
ja
imul
adc
pusha
push
ja
lahf
xchg
xchg
clc
cltd
pop
jg
mov
cmp
add
mov
xor
push
pusha
or
push
mov
fmull
dec
cli
pop
lods
test
adc
scas
div
dec
ja
dec
inc
mov
nop
nop
rcrb
inc
dec
mov
sub
cmp
bound
sub
adcb
fimuls
jbe
add
lock
cmp
lret
dec
pop
push
jmp
adc
and
and
mov
jns
mov
push
sub
sub
jne
roll
pop
jmp
stos
bound
jp
mov
pushf
sub
xor
or
sbb
insb
sub
in
cltd
cmpsl
or
test
jecxz
addb
in
mov
xor
and
int3
add
sbb
cmp
out
data16
xor
jl
xor
pop
push
push
xor
es
and
xorl
dec
shll
jle
xorb
mov
jmp
and
out
add
cmp
push
adc
fimuls
int3
sbb
jmp
cltd
jecxz
or
push
gs
and
daa
leave
xor
adc
push
jl
pop
fs
dec
sbb
sbb
repz
push
lret
and
inc
or
sub
xor
mov
stos
or
ret
lods
clc
rcrl
fcompl
movsl
stc
push
or
pop
inc
sbb
jp
push
shlb
xor
insl
ret
and
sahf
lret
sti
in
mov
ds
rclb
mov
and
ret
and
fcomps
rcrl
jmp
je
sub
rclb
cwtl
dec
jge
xchg
fisubs
sbb
cmpb
hlt
xchg
pop
out
jecxz
loope
cs
inc
push
xchg
dec
jnp
xchg
add
mull
adc
or
adc
mov
stos
sub
rcr
test
mov
inc
cld
rcrl
sub
leave
mov
test
data16
push
hlt
and
popf
mov
jg
push
mov
mov
adc
xor
xor
xchg
lcall
and
outsb
stc
inc
sbb
int
mov
dec
ljmp
jbe
stos
cld
push
lods
popa
sub
lds
rorl
sub
stos
xor
aad
out
xor
push
push
adc
out
jae
mov
sub
push
call
cmp
ljmp
cmp
push
test
in
pop
dec
mov
in
mov
jmp
fs
pop
addb
outsb
mov
cmp
scas
addr16
shr
inc
out
iret
inc
inc
outsl
stc
mov
popa
les
dec
push
sub
and
xor
xorb
xor
sbb
cli
cmp
dec
fdivrl
sub
push
les
gs
mov
add
add
and
sub
daa
call
shrb
out
out
cmc
test
push
pop
or
xor
test
pusha
ljmp
mov
pop
out
push
jge
pop
xchg
xor
inc
nop
in
add
in
pop
out
and
mov
pop
pushf
push
mov
xor
mov
xchg
pop
shrl
rorl
cmp
mov
sarb
jmp
xor
subl
add
jne
lds
enterw
jno
movsl
cli
xor
ror
jp
test
fsubs
sbb
adc
andl
add
pusha
mov
inc
push
in
xor
mov
and
mov
icebp
add
out
push
popa
sarb
pop
clc
inc
loop
lret
inc
dec
mov
ljmp
mov
stc
fisubs
push
dec
add
loopne
push
jmp
mov
add
jb
fadd
xor
pop
movsb
data16
sub
pop
popa
daa
test
mov
stos
fincstp
and
cli
inc
adc
xchg
mov
mov
mov
adc
add
push
sub
dec
in
mov
fnstcw
jp
inc
xchg
imul
cmp
lods
inc
add
sbb
or
push
into
loope
pop
neg
sbb
pushf
mov
loopne
mov
pop
push
adc
jmp
pop
imull
sub
cmpl
inc
loopne
outsb
lods
push
fcoml
out
jge
mov
cld
movl
out
cmp
das
xchg
and
in
xorb
lret
pop
and
lea
cmp
out
and
mov
das
mov
test
mov
dec
test
xchg
aam
sub
sub
fsubr
or
add
and
iret
cmc
out
xlat
stc
bound
das
repnz
add
ds
adc
movl
lcall
in
ljmp
jno
inc
ds
scas
mov
mov
add
and
adc
adc
ds
or
xchg
push
mov
jp
sbb
xor
das
mov
lods
xlat
mov
xchg
repnz
outsb
ds
out
sbb
cld
xacquire
mov
cmpsl
decl
out
testl
pop
scas
jbe
mov
mov
ret
mov
int3
rcll
and
xor
mov
aam
ljmp
stc
sbb
ret
shlb
xchg
and
or
jecxz
xchg
movsl
es
movsb
inc
daa
jle
cmpsb
lahf
daa
ja
mov
push
add
stos
add
adc
and
cmp
jno
inc
add
jno
add
mov
dec
cmpsl
cmpsb
adc
frstor
jno
jl
fs
jmp
shrb
push
push
cs
inc
dec
jno
and
loop
push
jno
addb
xor
add
pop
cld
shl
sub
int
or
pop
mov
sar
fdivs
insl
push
push
sti
mul
js
loop
xchg
clc
je
decl
aad
adc
cmp
mov
or
add
in
dec
add
ret
jmp
jmp
shrb
ljmp
int3
mov
or
add
jo
dec
jmp
pop
out
sub
pop
dec
mov
push
mov
jmp
pop
leave
push
pop
cmp
cmc
das
adc
pop
nop
add
jl
cmp
dec
add
inc
xlat
cmp
sub
rcrb
pop
xorb
mov
jmp
jns
fstpl
and
sub
dec
cmp
clc
jbe
adc
stos
sub
cmp
push
lret
mov
call
in
les
dec
and
cltd
pop
inc
jecxz
fstp
fsubl
notl
sub
xchg
cwtl
push
std
adc
and
pop
pop
outsb
cmpsb
sti
add
stc
gs
fs
adc
pop
imul
mov
adc
adc
stos
ss
xchg
out
inc
xchg
push
movsl
jne
xchg
cmpb
mov
lahf
and
cmpb
fistpl
shr
sub
lods
lods
sub
imul
xor
jmp
dec
imulb
jo
sbb
jmp
mov
jb
push
push
cwtl
or
mov
popf
mov
xchg
scas
loope
cmp
sub
cmp
mov
rcrb
mov
fbld
xor
orb
cld
sub
fucomip
add
pop
push
loope
into
jp
daa
in
jmp
mov
divps
mov
jecxz
loopne
add
shrb
imull
orl
inc
add
fistl
push
jle
lcall
mov
jo
sbb
pop
push
mov
jmp
mov
je
fs
sbb
loop
sub
jmp
fdivs
cmp
stos
js
es
add
icebp
push
pop
or
jne
adc
and
test
packssdw
enter
push
loop
sarb
fsubr
inc
cmp
pop
inc
subb
push
mov
movsl
clc
xor
sub
std
pop
adc
or
pop
insb
cmp
jb
sbb
inc
adcb
repnz
jl
mov
negl
popf
and
lahf
cvtps2pd
xorl
or
dec
test
bswap
sbb
or
in
test
or
out
push
sahf
mov
adc
pop
lods
repz
or
cmc
or
dec
adc
popa
pop
bound
sub
into
mov
sub
push
icebp
data16
mov
adc
movsb
lods
push
nop
jecxz
rcll
or
inc
jmp
xor
lods
clc
fsubs
push
dec
test
xchg
scas
jo
push
push
jmp
clc
or
or
ja
test
add
je
insb
jmp
mov
or
notl
in
orb
les
push
add
jg
mov
call
mov
push
pop
pop
jbe
dec
mov
push
imul
stos
out
jg
add
xchg
jmp
stc
pop
bound
adc
insb
xlat
xor
imul
and
mov
add
daa
xor
loopne
icebp
pop
nop
stos
push
cs
lds
sbb
data16
push
inc
pop
xor
sub
sub
aad
xchg
push
sub
fcmovne
popa
jmp
lock
bound
in
cld
xor
mov
jmp
pop
mov
das
ret
push
add
pop
mov
and
add
jmp
lret
or
cltd
inc
mov
xchg
or
mov
jns
dec
pop
imul
or
push
push
les
test
add
mov
nop
jo
lods
pop
and
or
scas
test
cs
lahf
addb
loop
stos
adc
das
test
or
xchg
push
or
ss
adc
cltd
add
mov
push
iret
sbb
mov
jle
mov
mov
je
mov
adc
lock
call
jl
cmp
add
sub
je
out
mov
outsl
or
pop
adcb
mov
repz
or
fdivrs
add
scas
add
add
sahf
cmp
leave
mov
push
jmp
cltd
rorb
cli
fstl
shrb
jg
testb
add
mov
xor
xchg
push
arpl
cmc
imul
pop
mov
fiadds
mul
push
pop
sahf
outsl
xor
dec
rclb
or
in
lock
pop
shr
or
xchg
orb
ljmp
lcall
bound
iret
push
mov
gs
jmp
bound
into
add
or
not
rorb
pop
sub
bound
jmp
add
xor
pop
addb
xchg
pop
pop
imul
and
push
lahf
push
movsb
ficoml
daa
sub
sbbb
adc
pop
or
sub
test
aad
mov
fcmove
sub
into
xor
jl
mov
dec
xorb
in
mov
dec
push
pop
rclb
adc
add
pop
cli
stc
mov
cli
clc
das
hlt
xorl
in
add
or
pusha
push
inc
add
inc
in
add
or
or
jb
faddl
sub
ret
dec
mov
sub
pusha
ja
jo
dec
fs
sub
mov
push
mov
jmp
pop
dec
mov
mov
add
out
into
iret
nop
mov
movsb
lahf
add
sbb
faddl
pop
or
dec
mov
lods
aad
pusha
cmc
dec
adc
scas
mov
mov
loope
fxtract
xor
mov
and
out
pop
rorl
pop
loop
xchg
pop
imul
imul
lcall
jno
push
je
fnstsw
das
push
mov
iret
adc
lret
xor
jbe
inc
dec
add
pop
inc
sbb
xor
push
pop
cmpsb
jp
sbb
mov
loop
scas
outsl
add
mov
gs
test
and
fwait
push
push
cmp
cmpsl
cmp
cmpsb
ja
and
inc
cmp
dec
inc
jnp
repz
jle
mov
jmp
shl
or
inc
xor
cld
and
push
negb
inc
std
leave
cli
fwait
sub
lret
xchg
xor
xchg
movb
xor
shr
in
xchg
roll
jle
fwait
outsb
rorl
inc
dec
in
in
sub
je
mov
sub
or
lahf
gs
mov
jmp
jmp
out
enter
jnp
movsb
dec
int
aam
mov
mov
and
sti
repz
cld
fs
popw
push
xor
or
pop
pushf
pop
and
pop
mov
sti
inc
stos
cs
bound
add
jmp
sbb
lret
rclb
jbe
pusha
xor
push
and
scas
cmp
add
or
pop
push
xchg
cmp
pop
daa
push
movsb
stc
cli
xor
pop
pushf
andl
mov
and
out
icebp
mov
push
push
cld
pop
dec
adc
or
out
std
push
pop
mov
pop
rclb
enter
sub
add
pop
xlat
jns
leave
xlat
xchg
pop
stos
out
or
in
inc
int
jle
rorl
out
cmp
movsb
cs
ja
ret
icebp
add
pop
mov
das
add
sti
cmp
mov
xchg
pop
or
push
pusha
imull
mov
push
in
in
jns
add
sbb
inc
les
add
or
and
jbe
shr
scas
push
lcall
inc
out
or
inc
call
or
mov
adc
mov
rorb
push
bound
ja
cld
in
movsb
inc
mov
jmp
dec
popf
lock
sub
and
into
push
push
sbb
pop
sbb
dec
push
ficompl
sub
vpsllq
add
sbb
push
clc
cmp
jmp
enter
repz
subb
push
push
pop
es
push
push
mov
inc
es
inc
test
insl
jle
dec
rolb
jmp
sub
jle
lock
sub
fistps
push
mov
mov
outsb
adc
mov
jg,pn
pop
jo
xchg
pop
lcall
pop
aas
rcrl
sub
test
stos
loope
out
icebp
sub
push
push
and
push
jnp
dec
sub
inc
sbb
or
cmp
addr16
xor
jbe
mov
add
and
push
js
repz
and
jle
push
dec
lahf
andb
sub
pusha
pop
ja
push
add
inc
andb
jecxz
fisubrl
add
adc
xchg
in
or
sbb
loop
add
daa
add
insl
inc
or
icebp
imul
sbb
jo
cmp
pop
push
add
pop
rcll
test
aam
lahf
movsb
xchg
push
aad
stos
fbstp
aas
jmp
xor
inc
or
in
jl
or
jno
sub
into
or
jmp
mov
leave
jle
mov
sbb
or
pop
pop
stos
add
dec
xor
lds
sti
push
push
add
cmpsb
mov
loopne
push
popf
test
push
stos
dec
add
loop
pop
jl
adc
out
out
dec
xchg
sbb
xlat
ret
cld
xor
cs
testl
sub
test
and
mov
add
inc
adc
fninit
adc
mov
cs
or
and
jl
subb
push
mov
jmp
fsts
incb
dec
xor
cmp
subl
fs
push
out
xor
pop
mov
pop
psrad
stos
aas
inc
arpl
or
lds
jmp
add
or
imull
inc
push
adc
hlt
and
pop
add
jno
call
adc
js
loop
les
adc
ljmp
add
bound
dec
inc
and
and
testb
mov
aam
out
mov
push
push
rolb
xor
adc
jle
cld
push
loope
dec
mov
or
pop
add
test
imul
inc
pusha
roll
mov
sub
push
fidivrs
jbe
je
cwtl
mov
push
out
stos
enter
mov
bound
pop
sbb
jb
mov
std
push
sub
add
xor
testb
cmp
ljmp
enter
xor
push
pop
pop
inc
xchg
in
xlat
push
fisubrs
push
push
aas
andl
and
loop
or
inc
push
addr16
cmp
pop
mov
icebp
mov
addb
in
xor
pop
add
pop
xlat
ficompl
lea
pop
adc
mov
mov
std
dec
mov
iret
push
pop
call
shr
lods
neg
in
test
iret
aaa
and
das
into
imul
add
loop
push
popf
mov
stc
dec
mov
imul
cmp
adc
mov
andb
cs
sbb
call
adc
sub
sbb
lea
pop
lret
xchg
mov
loopne
sbb
xchg
jl
cmc
nop
push
add
mov
fistps
les
pop
cmc
leave
sbb
mov
orl
mov
cmp
cli
adc
sbbb
add
xor
test
xor
daa
lds
xor
gs
std
push
push
loopne
cmp
test
dec
dec
mov
adc
ja
mov
jb
adcb
cmpsb
call
pop
flds
or
jg
es
pop
sarl
idiv
pop
in
sbb
in
add
jp
pop
xor
push
movsb
sub
add
pop
jmp
push
int3
add
mov
out
lahf
push
sbb
lock
scas
mov
std
leave
adc
sub
xor
mov
or
adc
shr
pop
xor
mov
push
pop
add
jno
jbe
pop
out
and
inc
jmp
fsin
mov
jg
cltd
sub
dec
jnp
pop
xor
lret
sbb
sub
ds
in
sub
in
fisubs
jp
add
xor
imul
and
jmp
mov
dec
push
sub
add
push
or
sbb
dec
add
add
rcrb
cltd
std
xor
je
inc
ss
and
rorb
jl,pn
mov
pop
mov
ret
xchg
pop
mov
push
pop
pop
mov
push
xor
mov
mov
cmp
int
es
test
and
and
and
sarb
inc
stos
sub
add
xor
cmp
jb
jge
negb
sub
mov
out
add
mov
arpl
push
data16
jle
inc
mov
add
inc
out
icebp
add
out
or
jb
add
xor
pop
sub
or
pop
xlat
in
in
mov
shr
and
nop
jmp
lea
out
xlat
add
scas
cmp
pusha
push
mov
lods
mov
loopne
jmp
lret
sbb
push
and
int
ficomps
and
cmc
in
mov
adc
xor
mov
mov
sub
jge
test
or
adc
cmp
and
mov
inc
fnstcw
arpl
add
add
sub
mov
adc
mov
lcall
je
mov
shl
gs
pop
mov
sar
in
bnd
out
imul
cs
sub
xchg
jns
addr16
xor
pusha
ret
loop
jmp
mov
icebp
push
hlt
ljmp
cmp
mov
outsb
jle
cmp
fdivl
and
push
in
movsb
ret
sub
xchg
add
out
jnp
mov
mov
or
sbb
lahf
les
add
mov
mov
pop
insb
and
sub
push
push
js
cmp
icebp
mov
movsl
pop
xor
gs
shrb
lret
nop
mov
push
in
or
dec
mov
push
out
stos
and
adc
in
xor
test
shrb
adc
mov
inc
xchg
jl
mov
xor
and
adc
fwait
mov
test
cmp
mov
in
leave
xchg
sbb
xor
push
inc
insb
cmp
pop
sub
fucom
xor
hlt
push
or
add
jnp
fs
xchg
gs
adc
outsb
mov
mov
xor
ja
push
cs
fisttpll
and
push
xchg
mov
sub
lods
mov
mov
pop
pop
mov
or
pop
fstpl
pop
fsubp
jmp
sarl
rcrb
lods
add
out
call
testl
sub
or
or
and
shlb
in
or
adc
pusha
jg
sub
add
adc
add
orb
in
sub
daa
xor
add
and
push
aaa
sub
inc
push
popf
xchg
gs
adc
scas
nop
popf
shl
cltd
nop
add
addl
jle
mov
mov
pop
daa
lret
sub
dec
push
jbe
outsl
sbb
sbb
add
int
cmp
or
rorl
inc
pop
or
in
push
or
addr16
das
ljmp
sub
pop
sub
push
lods
xor
xchg
and
dec
sbb
mov
dec
jnp
xor
sbb
xchg
fidivs
jb
jle
push
pop
das
mov
or
or
movsb
pop
xor
das
pop
jno
mov
sbb
mov
nop
lahf
or
lret
adc
xchg
aaa
jnp
mov
nop
xchg
lahf
jb
ds
adc
mov
fadds
shr
jo
sub
addl
sti
pop
inc
mov
iret
cltd
rol
out
or
loope
inc
xor
notl
xor
pop
xorb
int
loope
movb
dec
push
inc
lahf
xchg
add
push
cld
scas
test
cli
pop
push
push
pusha
jl
dec
dec
mov
or
in
mov
jmp
jmp
nop
es
shr
jge
out
fisttpll
sbb
leave
jmp
lret
pop
inc
fs
jg
mov
mov
add
mov
nop
ljmp
and
push
xor
lods
test
push
fwait
fs
push
shll
adc
pop
mov
data16
test
or
add
adc
pop
jmp
out
cltd
nop
or
arpl
hlt
sub
mov
sbb
push
mov
or
or
loop
fistps
jge,pn
ja
mov
mov
loopne
fmuls
jg
shrb
and
push
sahf
and
clc
xchg
pop
xor
mov
push
out
insl
stc
sbb
mov
lahf
das
js
inc
inc
dec
aaa
mov
ds
and
scas
loope
adcb
adc
sbb
negb
mov
pop
inc
sarb
test
shll
les
lods
push
push
add
pop
testb
flds
jmp
test
pop
test
int
mov
lods
stos
mov
push
repz
repnz
adc
cli
cmp
lods
fcom
out
mov
das
ret
cmp
push
or
mov
dec
xor
inc
fldenv
push
neg
or
sub
mov
outsb
not
filds
jmp
xchg
xor
insb
imul
or
pop
xchg
enter
dec
sbb
inc
or
fcompl
dec
lahf
or
push
arpl
testb
data16
adc
in
mov
mov
subb
aas
add
aaa
rcrb
fptan
adc
shll
sub
inc
pusha
push
or
or
stos
call
aas
pop
push
jl
inc
ffreep
push
xor
daa
push
pop
push
xchg
cld
ret
jno
aad
pop
hlt
jo
adcb
dec
push
mov
pushf
loope
inc
mov
inc
xlat
and
add
mov
xchg
ror
ret
adc
filds
cmc
xor
jb
decb
add
xor
les
fsubrs
dec
dec
std
dec
mov
pop
sbb
xlat
scas
shl
push
cwtl
pop
push
adc
adcl
or
sub
pmaxsw
and
adc
fiadds
jnp
icebp
xchg
jbe
ss
add
adc
mov
lret
insl
scas
test
add
pop
pop
mov
cltd
stos
push
cmp
popf
sbbb
mov
sub
cld
pop
xor
and
dec
in
add
pushf
xchg
or
out
filds
bound
jns
pop
ljmp
aas
and
pop
and
push
dec
sti
mov
sub
jg
scas
mov
lret
je
leave
pusha
stos
pop
jmp
xor
adc
dec
push
stos
fwait
popf
bound
pop
inc
rcl
leave
cmp
scas
pop
xlat
add
add
sub
xor
inc
push
xchg
or
imul
dec
jmp
add
sbbb
popa
push
les
sub
jl
in
xor
inc
xchg
fcoml
cld
outsb
repnz
jg
inc
and
ficoms
sub
sbb
sub
int3
int3
add
das
sub
sbb
out
jno
pop
or
mov
orl
jecxz
aam
jbe
inc
add
jp
lds
lahf
js
jns
and
and
mov
mov
jecxz
inc
adc
pusha
aaa
add
ret
jb
sarb
addr16
pop
fs
mov
and
push
pop
lret
insb
hlt
and
and
pop
inc
dec
push
lods
pop
movsb
subb
inc
inc
mov
rcll
das
pop
and
adc
push
sub
xorl
add
fmuls
pusha
inc
push
clc
fstps
inc
sub
pusha
add
pop
push
xor
sbb
sbb
cmp
mov
push
sub
mov
cltd
pusha
pop
outsb
in
adc
out
push
jnp
xchg
clc
hlt
mov
flds
rcr
fdivrl
aaa
xchg
jmp
orb
lret
filds
orl
jg
mov
add
push
jnp
dec
pop
and
or
scas
mov
or
std
pop
out
inc
repz
jp
cmpb
push
xchg
into
inc
jns
jbe
cmp
adc
cmc
sub
mov
add
enter
dec
xor
loopne
js
mov
mov
and
shrl
imul
jo
push
mov
adc
jl
jg
mov
loop
jmp
jmp
sahf
adc
test
es
mov
inc
lods
fstl
daa
aad
inc
push
sub
mov
add
mov
pop
in
add
jl
popa
addb
cmc
push
pop
roll
cld
sub
imul
add
jmp
push
mov
cmp
fsubrl
ja
or
bound
lcall
dec
add
rcl
mov
jmp
dec
and
clc
push
pop
lock
pop
fwait
orb
or
or
cld
jb
mov
cli
fcomip
out
sub
pop
pop
out
neg
ret
push
mov
jns
or
jl
sarb
pop
or
popa
movsl
outsl
sub
bound
jp
inc
test
rorl
jo
ret
sysret
push
pop
stos
jmp
cld
pop
shr
dec
insl
xchg
jo
lock
push
jo
dec
lods
scas
pop
pop
sub
mov
sbbb
pop
push
cmp
add
sbbl
das
adc
cmp
add
inc
lea
das
scas
inc
bswap
jae
leave
xor
aad
scas
out
xor
jmp
bound
xchg
dec
push
faddp
push
imul
lods
repz
and
pop
adc
mov
fucom
js
add
out
push
and
mov
loope
and
dec
push
clc
scas
adc
push
add
fdiv
inc
sub
in
sub
push
sti
cltd
or
out
and
popl
repnz
xor
add
mov
pushf
push
adc
lea
cmpsb
fs
push
mov
jecxz
sub
lcall
push
jae
mov
xlat
push
sub
nop
cmp
fisubrl
push
mov
aad
arpl
inc
add
push
out
mov
push
or
cs
mov
xorb
mov
ljmp
pop
adc
sub
and
in
jae
jmp
pop
cmpsb
lret
xchg
sub
and
pusha
sahf
ljmp
push
inc
sbb
popf
fnstenv
mov
xor
sub
popf
fsubr
push
loopne
add
loopne
or
xchg
pop
sub
cmp
scas
xchg
and
cmpl
add
fnsave
aad
push
cmp
jl
mov
push
cltd
add
add
sub
mov
pop
cmc
mov
in
adc
je
mov
shld
add
inc
shl
push
cli
inc
test
sahf
cmp
and
jae
fistps
rcrb
cmpsl
mov
dec
mov
fcomps
cwtl
jbe
jg
cmp
dec
iret
adc
push
jmp
dec
sub
mull
mov
fldcw
in
test
cmp
inc
sbb
inc
mov
and
add
pop
sub
add
sub
clc
pop
sarb
push
dec
sub
push
movsl
cmc
orb
inc
add
in
sti
daa
cmc
lcall
cs
out
lret
movzwl
shl
dec
jae
add
push
push
cwtl
sti
push
push
push
roll
dec
out
mov
dec
cltd
and
cld
jns
sbb
leave
cmpsl
pop
outsb
xchg
dec
iret
inc
into
dec
or
jmp
add
jb
test
jg
stos
lahf
sub
adc
out
xchg
pusha
mov
adc
xchg
and
call
pushf
mov
xor
inc
cmc
add
cli
sub
sub
cmpl
push
inc
daa
ds
icebp
outsl
jmp
out
dec
push
in
jge
sbb
mov
cs
repz
inc
dec
dec
clc
cmp
jmp
and
dec
mov
in
shl
push
dec
xlat
push
sbb
pop
jbe
and
je
loopne
dec
icebp
test
mov
adc
adc
in
mov
jl
lahf
pop
cmovne
lahf
gs
int3
popf
cmc
sub
inc
lods
add
ficoms
or
fisubrs
stos
hlt
icebp
xor
adc
scas
movsl
add
push
lahf
pop
add
adcb
scas
pop
xchg
pop
and
fmuls
sahf
pop
rorl
xchg
movsl
in
or
adc
mov
jno
mov
cmc
dec
repnz
enter
adc
outsb
test
clc
push
xchg
je
cli
jl
sub
imul
or
or
pop
test
sbbl
inc
xchg
pusha
fs
push
add
mov
mov
push
xor
int3
andl
cmp
inc
mov
shlb
cmp
xchg
add
fisubrl
sbb
in
add
and
enter
mov
daa
pop
push
mov
pop
xchg
out
mov
imul
cmp
andb
aad
sti
and
nop
pop
adc
ret
or
leave
lea
outsl
mov
rcl
xor
add
add
pop
dec
push
pushf
lds
add
mov
aas
mov
adc
sub
cmp
mov
xor
imul
mov
push
push
movsb
mov
mov
xor
imul
jg
xlat
loopne
xor
dec
push
adc
cmp
add
jge
add
mov
or
imul
add
sub
fisubrs
xor
and
pop
cmp
inc
in
jnp
push
flds
inc
scas
aaa
or
es
jg
ljmp
sub
mov
push
mov
or
insb
outsb
sbb
inc
popa
xor
arpl
cli
ret
push
js
and
stc
mov
ja
mov
or
xor
or
int3
test
push
test
out
popf
out
cmp
andb
and
add
push
imul
xor
add
das
and
sbb
mov
addl
out
sbb
sub
push
push
sub
je
sub
cld
push
and
stc
inc
adc
dec
mov
jb
pop
push
jo
push
push
and
movsl
cmp
adc
cmpsl
adc
push
arpl
push
add
and
popa
push
sub
add
or
jmp
jp
stc
daa
je
mov
push
ss
scas
add
stc
sub
inc
je
or
pop
std
int3
aaa
jnp
fwait
mov
or
testl
sub
out
pop
rcrl
add
mov
nop
dec
or
push
aas
push
pop
cli
repz
add
lret
ret
mov
or
mov
or
mov
cmc
jmp
push
jge
pop
mov
lods
xor
rcrl
push
leave
sub
testb
and
xor
loopne
inc
mov
adc
mov
push
push
mov
adc
add
shl
cmpl
jno
shll
mov
sbb
ja
pop
add
fs
inc
sub
xlat
sbb
cli
push
std
mov
ret
add
dec
subb
adc
cmpsl
hlt
out
adc
incb
loop
push
sub
fldcw
cmp
or
cmpsl
or
push
adc
rcll
add
pop
dec
ljmp
sbb
les
and
das
adc
pop
push
ja
test
popa
mov
add
mov
sti
pusha
mov
popf
shl
mov
std
stos
sbb
call
jo
jo
jbe
or
push
popa
adc
push
or
test
dec
mov
mov
scas
pop
arpl
inc
xchg
mov
dec
or
sti
aam
ret
shl
dec
adc
or
ret
add
pop
inc
push
dec
lret
fildl
lds
pop
sub
gs
js
sub
mov
pop
mov
nop
jg
out
jle
fldenv
add
pop
dec
jne
pop
mov
imul
xlat
sub
jo
add
call
das
xor
sbb
jmp
adc
call
sub
push
imul
iret
push
or
adc
push
add
out
inc
add
int
pop
les
sahf
dec
cld
xchg
cmpsl
and
pop
pop
sub
pop
xchg
add
mov
and
push
shr
push
mov
xor
or
add
cmp
and
gs
fs
lret
sbb
xor
or
stos
out
adc
sbb
inc
and
es
xchg
xchg
jl
pusha
mov
sbbl
dec
call
in
sub
iret
lret
jb
pop
leave
jnp
cmc
pushf
dec
adc
iret
sarl
push
add
sti
inc
mov
orl
jno
mulb
repnz
mov
jmp
push
stos
lret
or
test
or
push
movsb
call
loopne
mov
sub
shrl
mov
adc
roll
in
dec
cwtl
pop
sub
jbe
nop
sbb
mov
dec
jne
sarb
aaa
xor
cmpsl
lahf
lock
test
lret
lock
mov
push
test
jmp
sti
pop
sub
jmp
xchg
add
jnp
add
pop
movsb
and
rcl
jb
sbb
xor
sti
jle
mov
out
fsub
out
leave
mov
sbb
mov
scas
mov
adc
les
inc
pop
push
pop
adc
mov
mov
lods
rclb
ja
insb
scas
and
insl
dec
jg
stos
jg
mov
pop
push
push
adc
aad
popa
lahf
xchg
ljmp
sbb
outsl
pusha
fists
push
adc
sbb
add
jecxz
jmp
and
rclb
aas
push
pusha
sub
cmp
cli
pop
jno
not
dec
pop
xor
dec
sub
ret
mov
jne
jp
push
mov
inc
adc
out
mov
pusha
rorl
rolb
in
push
mov
xor
jne
cmp
lods
jo
loope
stos
imul
sub
mov
pop
pop
dec
xchg
push
mov
rcll
mov
push
inc
or
flds
lea
jmp
jbe
shll
push
xchg
cmp
jmp
add
mov
inc
ret
jp
mov
out
and
jmp
mov
jb
mov
push
idivl
ja
popa
or
subb
decb
xchg
out
sub
mov
mov
mov
mov
adc
aad
jnp
push
pop
aad
cmp
sbb
mov
dec
std
rcrl
or
scas
jg
testl
repz
jge
xor
lret
add
mov
out
insb
jae
stos
adc
int
mov
mov
add
xor
mov
mov
cs
pop
jae
mov
es
adcb
enter
push
add
aam
add
jmp
sub
pop
inc
test
inc
inc
push
cmp
sub
fstp
inc
enter
in
pop
jle
pop
mov
lret
mov
roll
jg
and
inc
or
pusha
scas
psrlw
out
out
or
mov
mov
out
xchg
push
or
iret
inc
roll
mov
shll
pop
out
sub
cmpb
xchg
cmp
call
pop
jnp
dec
push
push
jmp
mov
mov
sub
repz
and
test
mov
cmp
icebp
adc
add
mov
jmp
ljmp
in
inc
push
cld
repz
xor
add
int3
push
dec
push
and
sub
sbbb
or
pop
xor
sub
cli
rorl
enter
repz
std
add
xor
sub
fildl
scas
mov
ds
mov
cmp
dec
mov
pop
divb
or
adc
xor
inc
and
cmp
mov
gs
cmp
xor
pop
adc
lea
jno
sub
pop
add
daa
lret
cmovae
rorl
push
shlb
sti
not
xchg
fs
dec
fs
push
mov
adc
pop
xchg
adcb
jbe
ret
add
mul
dec
out
or
push
pop
in
scas
sbb
jns
ret
psrlq
sub
movsl
pop
inc
stos
jb
cmp
bound
cmp
neg
outsl
push
popa
pop
and
jecxz
es
pop
mov
cs
loop
xchg
daa
decl
dec
xchg
scas
rorl
push
or
outsl
pop
dec
js
rolb
add
dec
pushf
je
jo
cs
pop
or
lret
or
jns
jo
leave
xchg
jno
mov
idivl
outsl
sub
push
insb
pop
add
pusha
sbb
lcall
cs
roll
inc
or
pusha
dec
je
test
fisubrl
jo
loopne
icebp
add
mov
call
adc
repz
cmp
test
flds
test
add
adc
push
imul
add
push
sub
ret
mov
bound
or
ljmp
cld
pop
xor
push
pop
pop
sbb
add
pop
mov
pop
push
aas
leave
add
cmp
repnz
orl
cmp
int
incb
mov
repz
pop
mov
adc
ljmp
dec
mov
sbb
out
push
push
je
add
stc
imul
push
push
or
int
xchg
sbb
jnp
cmpsl
xor
pop
xorb
dec
bound
sub
mov
push
or
lds
int
jne
pop
das
jmp
in
fdivl
xor
bound
mov
fmuls
out
pop
and
ret
call
shll
or
roll
sub
push
mov
sbb
mov
rorl
xor
add
inc
mov
mov
sub
iret
aas
and
cld
and
pop
jmp
dec
push
lcall
shrb
inc
push
or
xchg
lds
aad
negb
lock
jbe
push
scas
cwtl
popf
pop
cmp
cmp
mov
cmp
sub
sub
je
mov
push
cld
xchg
ret
sub
xchg
adc
mov
pop
jmp
dec
pop
push
jno
lods
out
std
xor
jecxz
idiv
rcrb
hlt
mov
cmp
ret
xor
sbb
ja
ret
xchg
imul
xor
xor
pop
inc
mov
aad
into
aad
test
in
daa
xor
push
test
mov
pop
js
xor
xor
lods
mov
sub
xchg
cs
mov
loop
inc
test
add
and
enter
pop
in
call
xor
mov
sub
add
movsl
xchg
push
and
push
mov
daa
rcll
or
sbb
popa
ret
jmp
cmc
popf
sbb
in
jbe
ds
or
movsl
sub
fcmove
dec
ljmp
or
mov
or
or
ja
ret
aad
pop
or
sub
jne
pop
test
aas
adc
sbb
test
add
mov
sub
imul
addr16
dec
push
stos
add
jae
incb
lods
movsl
lock
push
rcpps
mov
sub
adc
pop
movb
stc
int3
mov
jp
rcrl
ja
jo
out
mov
jae
shr
dec
loop
dec
xlat
lods
cmp
adc
out
inc
aaa
xor
jle
adc
xor
out
leave
test
pop
fists
or
addr16
mov
xchg
add
or
aas
scas
les
pushl
in
adc
and
jae
jmp
das
movsl
jo
add
jmp
pop
inc
pop
rcrl
jb
sbb
cmpsl
imul
js
add
dec
ja
xor
hlt
inc
xorb
std
gs
jmp
jp
call
mov
push
nop
cwtl
add
sbb
pop
inc
in
mov
imul
mov
dec
inc
mov
ret
add
pop
ja
pop
test
add
fsubrl
sub
fucomip
xchg
mov
jno
call
jecxz
push
in
or
dec
sub
and
neg
push
mov
repz
loopne
insb
out
jmp
popf
and
dec
or
push
and
dec
push
aas
cmp
in
cltd
mov
xchg
fimull
lret
jecxz
inc
xor
sub
cmp
jmp
inc
std
ss
aam
adc
mov
cmpsb
inc
inc
decb
les
shll
or
jecxz
and
imulb
and
rolb
push
xor
add
sahf
xchg
push
ja
xor
mov
adc
sub
dec
push
mov
jne
or
mov
mov
xchg
cmp
add
faddl
add
gs
mov
dec
pop
adc
popf
jo
das
sub
push
sbb
push
clc
pop
add
jae
push
mov
inc
daa
test
jg
pop
push
rorl
jmp
ret
rcll
sub
jbe
mov
stos
dec
std
sub
pop
dec
inc
hlt
addr16
sub
sub
or
xor
jbe
xor
test
pop
pop
cwtl
push
jnp
subl
or
inc
stc
pop
push
dec
dec
push
stos
mov
pop
pushf
jge
push
mov
dec
outsb
xor
fs
xchg
xlat
mov
aaa
fs
mov
jmp
movl
rcll
push
cmp
insb
push
sbbl
add
dec
les
mov
mov
dec
aam
cmp
jmp
int3
stc
mov
jmp
xlat
sub
xor
rorb
fisubl
stos
pop
testb
pop
pop
mov
push
incb
mov
dec
adc
pop
push
stc
cmp
jge
mov
pop
xchg
cmpb
cmp
in
incl
or
sub
push
push
push
add
inc
lahf
clc
ja
lcall
aad
mov
insb
pop
pop
not
adcb
mov
push
jno
mov
mov
xor
and
sub
inc
or
shll
aam
cmp
pop
jbe
daa
push
pop
int
sahf
push
sub
jno
cmp
mov
adc
sub
inc
out
xor
jo
daa
or
push
xor
pop
jbe
xlat
add
mov
imul
push
cltd
push
adc
insl
les
fstpl
cmp
aas
push
push
pop
jmp
or
movsl
daa
movsb
xchg
sahf
stc
jecxz
pop
jge
sbb
les
mov
repnz
int3
push
jnp
loopne
pop
fnstenv
or
mov
sub
adc
rcl
lret
pop
imul
mov
xlat
movsb
pop
lods
cmpsb
sbb
pop
dec
hlt
dec
out
cld
dec
test
enter
push
lods
rcll
mov
add
inc
rcll
jl
and
xor
daa
sbb
fistps
inc
sbb
cmc
jae
iret
fwait
sub
dec
loopne
inc
jl
xor
jmp
outsl
bound
stos
mov
jne
into
mov
push
adc
mov
add
cli
vandpd
ret
sub
sbb
or
pop
add
shll
sarl
ljmp
loop
in
mov
xchg
jne
xchg
fsubrs
call
xchg
mov
pushw
daa
jae
push
or
inc
das
push
decb
inc
sbb
in
ds
push
mov
lret
jmp
pop
xchg
dec
sbb
fs
dec
sahf
pop
and
daa
jge
add
nop
scas
inc
sti
daa
aam
repnz
cmp
and
mov
aas
fs
mov
addb
decl
mov
loop
call
xor
data16
add
hlt
pop
or
lahf
imulb
sub
sub
jne
lret
adc
cmc
xor
imul
add
cld
rolb
add
dec
pop
scas
jno
xchg
out
ds
aas
mov
fistps
add
pop
and
sub
mov
cmc
xchg
aas
rolb
daa
loop
arpl
rorb
xadd
inc
ja
in
bound
or
or
cmp
je
sbb
nop
jl
mov
in
rolb
inc
cmp
push
addb
std
fcomps
pop
jmp
cmpsb
clc
mov
push
adc
dec
mov
jmp
push
xor
lds
fstpl
mov
dec
mov
sub
jg
dec
pusha
rclb
mov
mov
cmpb
and
pop
pop
and
sub
mov
xor
sbb
out
sbb
xchg
bound
repz
orb
and
and
decb
pop
xchg
sub
dec
stc
xchg
adc
pop
test
push
adc
xchg
aas
daa
repz
sbb
or
lahf
mulb
pop
add
repnz
mov
sub
adc
inc
pop
arpl
jo
and
pop
push
shrl
loopne
jmp
sub
outsb
cwtl
int
xchg
push
enter
iret
jmp
adc
mov
ss
setb
aam
inc
mov
fildll
cwtl
xchg
repz
add
xchg
push
cmp
insl
test
push
mov
not
mov
in
fcoml
mov
loope
pop
popf
push
cmpsl
xchg
sahf
rclb
fcompl
pop
jge
arpl
or
nop
adc
stc
inc
les
mov
in
push
sub
mov
pop
push
mov
leave
icebp
out
cmp
push
loopne
sub
dec
mov
lods
sub
sti
repz
push
incl
loop
add
test
sub
imul
xchg
hlt
jbe
stos
daa
xchg
cwtl
adc
cmp
pop
push
mov
push
sbb
mov
call
adc
movsb
dec
lds
add
popa
adc
jl
add
sbb
xchg
add
jecxz
outsb
push
cmp
mov
inc
jmp
stc
sbb
cmp
mov
jmp
out
fisttpl
adc
lods
inc
push
push
pop
in
into
add
int
hlt
pusha
adc
in
add
loope
jg
and
cld
dec
cli
sarl
push
rcrb
xlat
push
add
pop
sbb
shlb
dec
stos
or
push
das
ja
push
sub
add
test
jae
and
mov
enter
fsubrs
fsubl
aas
lahf
jmp
daa
aad
mov
dec
push
cld
aam
or
add
or
and
andb
not
mov
aaa
jp
and
pop
mov
dec
sub
rcr
or
das
and
lds
clc
sti
ds
scas
test
mov
shrb
movhps
dec
mov
adc
shll
xlat
push
fsubs
dec
xor
mov
arpl
add
mov
rol
inc
sbb
jge
cmc
ret
call
dec
mov
adc
mov
fnstsw
sub
mov
or
inc
cmp
movsb
dec
lret
dec
lret
test
add
dec
adc
add
jp
sub
dec
inc
movsb
push
ljmp
or
aad
xchg
ljmp
fs
pusha
cs
mov
inc
jecxz
push
add
jmp
loopne
enter
orb
sbb
ja
inc
idivl
popa
idivb
or
pusha
inc
adc
in
test
xchg
sub
imull
data16
push
test
sub
popf
inc
call
lret
ss
sub
cmp
jmp
jg
sbb
mov
rol
jns
in
sahf
cmp
pop
xchg
add
and
scas
or
imul
jl
adc
adc
icebp
xor
ds
clc
jl
and
or
lahf
jl
dec
cmpb
pop
and
dec
lds
jns
add
sub
add
add
dec
xchg
mov
mov
cli
arpl
add
call
cmp
add
push
out
fisubs
dec
pop
sub
mov
lods
xor
pop
adc
hlt
xor
movsb
push
jl
dec
shlb
insb
gs
add
fsubrp
outsb
test
add
or
popa
ljmp
and
sub
enter
add
aaa
inc
inc
stos
sub
cmp
fists
push
cmc
and
inc
addr16
mov
push
push
pop
rcrb
or
sub
jmp
lar
cli
dec
imul
cmp
subb
mov
pop
cmp
out
fdivp
xchg
jmp
adc
ja
stc
or
jmp
rcrl
cmp
cmp
xor
pop
sub
jb
pusha
sub
adc
dec
jecxz
or
ljmp
mulps
mov
xchg
adc
imul
jp
popa
mov
push
sub
imul
aaa
jmp
mov
dec
jnp
aam
mov
fwait
xchg
jo
push
adc
push
aad
loop
inc
xorl
les
mov
cld
cltd
lds
aas
jecxz
xchg
in
arpl
movb
add
and
push
mov
sub
pop
push
out
jl
int3
jg
js
dec
pop
xor
ljmp
or
loope
push
scas
popa
mov
fisttps
sub
fimuls
stc
jle
jo
push
jbe
mov
inc
fdivrs
repnz
pop
mov
in
cmp
or
dec
arpl
ljmp
push
push
push
cmp
push
mov
xorb
mov
jp
sub
push
pushf
ds
ds
lea
call
adc
cli
xchg
or
rol
repz
xchg
andb
add
daa
adc
mov
mov
and
mov
dec
xor
jmp
fidivrl
adcl
mov
cwtl
mov
mov
add
mov
and
dec
push
ljmp
cmp
jnp
jmp
or
mov
mov
fldenv
in
jae
sub
jae
xor
es
out
and
xor
push
aas
cltd
dec
gs
cld
test
hlt
sbb
add
adc
ljmp
lds
xor
mov
loop
add
xchg
pushf
mov
lahf
pushf
sub
sbb
and
pop
bound
jnp
cmpsb
data16
push
pop
pop
or
push
subb
ljmp
or
add
cmp
rcrl
push
push
es
cmp
in
push
out
or
or
xor
jne
test
jbe
enter
fsubl
fsubr
fistl
xor
pop
ss
leave
jle
push
jo
xchg
dec
idivb
pop
out
jl
ret
ret
cmpl
and
stos
dec
jmp
leave
cmp
pop
shrb
fdivr
add
or
in
push
testb
xor
mov
add
jmp
in
mov
jns
jae
mov
mov
out
sahf
daa
andb
insl
sbb
jge
or
or
push
addb
fidivl
jp
das
xchg
stc
lcall
sbb
push
fnstenv
mov
and
mov
push
push
add
cmp
cmp
das
dec
inc
jmp
leave
sbb
loopne
outsl
xlat
test
jg
push
push
es
xchg
sub
add
or
mov
push
sub
inc
loopne
mov
xlat
dec
mov
and
ret
fwait
mov
inc
shlb
in
inc
cmpsl
and
push
xor
cmp
jne
stc
xchg
add
insb
and
xor
add
mov
jno
je
out
xlat
scas
aas
mov
add
mov
xchg
das
xchg
mov
push
aam
and
pop
mov
jmp
cmp
sbb
pop
daa
ret
push
pusha
ljmp
loope
inc
jo
inc
xorb
fucomi
or
cmp
je
js
or
adcb
dec
pop
xlat
add
cli
std
mov
out
rclb
cmc
sbb
adc
ret
xlat
or
pop
shr
or
fnstsw
jo
push
fs
out
add
or
add
and
or
sub
sub
jno
jmp
mov
xor
outsl
test
mov
or
push
xor
in
dec
push
xchg
ljmp
pop
or
iret
loope
je
cmp
mov
lock
repz
add
js
mov
int
sbb
pop
xor
push
mov
pop
sub
xchg
ja
daa
mov
xchg
jecxz
push
inc
sub
add
adc
cli
cli
add
into
es
aas
dec
inc
pop
jns
sub
inc
dec
mov
es
push
xchg
imul
adc
rcll
daa
push
ficoml
xor
sbb
cmp
dec
repz
inc
or
rclb
mov
out
test
leave
jns
lods
sbb
push
mov
cs
fcmove
cmpsl
jl
cmpsb
push
jns
mov
push
rclb
and
adc
mov
cmp
shll
mov
int
cmp
mov
mov
mov
xor
test
test
std
repnz
pop
lock
add
sti
push
cli
sbb
jmp
jle
fcoms
out
aas
dec
cltd
imul
dec
add
mov
mov
lods
sbb
ss
jmp
mov
mov
inc
inc
neg
jmp
inc
mov
xchg
push
xchg
scas
jns
cmp
hlt
imul
pop
repz
xchg
inc
test
add
and
adc
lods
out
jmp
ss
or
gs
pop
loop
add
jmp
mov
dec
mov
lods
std
jbe
add
lcall
icebp
or
mov
sbb
push
jb
and
lret
shl
js
mov
leave
test
jmp
and
push
sub
jmp
loopne
daa
xor
pop
dec
xchg
jg
int
sub
daa
in
fsub
pop
jae
lahf
inc
inc
and
mov
out
xchg
fisttps
sub
or
push
inc
inc
adc
in
gs
and
cs
adc
dec
mov
push
pop
mov
out
in
or
lret
rep
cmp
arpl
lods
cmc
xor
sub
subb
inc
pusha
mov
mov
inc
sub
es
push
xchg
push
mov
dec
rcrl
or
jecxz
out
call
pop
adc
or
xor
adc
inc
ljmp
idivb
lahf
xchg
lds
and
xor
adc
adc
mov
sub
pop
daa
push
lock
ds
push
adc
add
or
pop
mull
mov
out
mov
into
es
pop
fimull
add
inc
lea
ljmp
js
test
jns
std
int
loopne
pop
dec
movsb
mov
cmp
inc
and
int
sarl
sahf
sti
lret
add
imulb
mov
push
cli
push
mov
cs
push
xor
sbb
push
pop
pusha
inc
or
mov
test
push
or
and
mov
mov
or
mov
andb
jbe
inc
fisubrs
test
mov
dec
cld
push
rcl
pushf
into
and
sub
enter
cmpsb
cli
jge
mov
in
add
add
push
mov
sbb
clc
lar
push
cwtl
jae
test
clc
scas
stos
and
popa
push
test
dec
sti
sub
mov
icebp
xor
adc
mov
xor
jb
dec
jb
out
rclb
negl
jp
push
add
sbb
xor
mov
or
push
mov
add
sub
lret
scas
sbbb
pop
mov
jne
ret
mov
xchg
sbb
sbb
push
adc
mov
ret
mov
or
ss
lea
adc
xlat
adc
stos
cli
adc
adc
notb
jecxz
adc
je
mov
adc
adc
sbb
pusha
loopne
or
sbb
aaa
mov
and
sub
jae
std
inc
push
imul
wrmsr
sbb
jmp
sbb
add
les
mov
push
lahf
mov
inc
popa
add
mov
dec
pop
adc
pop
iret
adc
sbb
sbbb
or
pop
inc
cmpsb
sti
cmp
aaa
pushf
or
loope
rcr
mov
pop
loopne
push
inc
call
inc
mov
sub
or
sbb
leave
les
cmp
push
mov
mov
testl
and
inc
mov
sbb
hlt
or
imul
lcall
shrl
sbb
icebp
push
mov
pusha
adc
out
adc
sbb
lret
mov
test
and
cmp
xor
dec
dec
add
sbb
ret
sub
orb
les
clc
aaa
xchg
cmp
mov
cwtl
jg
pusha
sub
pop
or
cli
dec
and
inc
addb
stos
mov
shlb
adc
mov
cmp
or
mov
or
test
sbb
xchg
jl
pushf
xchg
jne
inc
mov
enter
inc
rorl
inc
sbbb
test
dec
cmp
bound
xor
or
adc
xor
or
add
add
lods
push
insl
sbb
xor
or
in
sbb
ja
jns
les
repz
or
or
bound
into
dec
sub
cwtl
mov
or
jg
bound
sub
push
mov
and
test
dec
adc
and
add
add
adc
mov
adc
adc
mov
push
pop
adc
and
faddp
pop
test
inc
rcrb
shrb
pop
mov
pop
imul
pop
pop
popa
add
sub
jmp
jg
das
or
dec
jae
xchg
not
in
fstps
aad
mov
cs
mov
stos
pop
cltd
or
or
pop
jmp
loop
test
imul
es
sbb
bound
rorb
pop
jmp
inc
nop
leave
mov
jne
jg
jns
rcrb
mov
rorl
xchg
or
cmp
add
jl
dec
sub
or
xor
cmp
je
lds
loope
add
and
out
cmp
aad
or
cltd
mov
inc
ljmp
pushl
mov
adc
add
and
or
pop
push
xchg
xor
add
shll
mov
add
daa
pop
dec
lods
out
mov
and
jne
dec
or
scas
mov
pop
cli
mov
repnz
add
add
test
ds
dec
pop
mov
jo
mov
jmp
or
pop
and
jg
icebp
fnstenv
mov
pop
push
jb
inc
sbb
push
dec
cld
iret
and
pusha
scas
call
stc
or
xchg
rol
jo
adc
jge
out
lods
add
sub
outsb
pushf
xchg
call
lds
xchg
mov
sub
shrl
jg
test
pusha
sub
cs
push
fimull
data16
sbb
pushf
scas
mov
call
call
jle
push
sbb
and
imul
lcall
cmc
gs
dec
out
or
mov
pop
mov
rorb
inc
mov
popa
sbb
dec
inc
dec
pop
xchg
push
xchg
pop
pop
lret
jmp
pop
push
out
adc
insl
int
cld
cmp
push
dec
cmp
push
add
dec
ret
push
lahf
andl
sbb
push
jmp
ret
faddl
sub
inc
sarl
push
sbb
enter
jp
adc
xor
cld
or
es
imulb
dec
push
inc
daa
cld
pmulhw
add
pop
and
mov
add
adc
outsl
push
pop
lock
test
push
sub
or
and
daa
inc
mov
shl
push
ret
lea
xor
xor
xor
mov
sbb
arpl
leave
pop
push
push
imul
inc
or
push
or
andb
inc
mov
cmp
jp
into
jmp
push
das
jmp
adc
sub
sub
dec
divb
push
ja
shll
jge
xor
inc
or
push
imul
clc
mov
pop
pop
xchg
mov
aad
shlb
inc
sti
mov
lret
loop
ret
add
ror
add
mov
add
cs
inc
test
xchg
and
and
aas
inc
mov
adc
pop
inc
fildl
or
mov
pop
xor
pop
adc
cli
jnp
mov
push
and
inc
jmp
jno
mov
push
and
xlat
and
xchg
mov
cs
lods
mov
add
sub
adc
les
add
push
das
inc
mov
push
xor
pop
and
out
sbb
frstor
add
jb
ds
sub
mov
das
fstps
fiaddl
xor
jl
push
je
test
rol
xor
inc
and
xchg
repz
xchg
out
mov
jne
adc
mov
jmp
lea
jae
or
add
and
faddl
jmp
mov
ficoml
dec
sahf
pop
add
fmul
and
sahf
lahf
stos
fstl
push
mov
or
sub
cmp
jle
jecxz
dec
jg
mov
add
xlat
and
ja
adc
push
mov
mov
test
inc
add
and
or
or
out
test
jmp
or
adc
loopne
and
or
jae
pop
add
sub
ret
bound
add
ja
loopne
push
adc
xchg
inc
xor
hlt
jns
outsb
lods
or
adcl
rorl
sbb
jecxz
stos
jnp
js
inc
push
push
pop
add
dec
cmp
fcomps
mov
or
pop
pop
fstp
pop
in
nop
pop
push
push
pop
mov
pop
pop
xchg
iret
mov
mov
cmc
pop
xlat
inc
es
jg
mov
mov
cltd
add
adc
test
dec
fnstenv
nop
ljmp
fwait
sbb
and
push
pop
add
into
inc
adc
int3
push
pop
jnp
push
jge
push
sub
sub
stos
cmc
sub
mov
mov
dec
call
add
popl
add
lds
cmpsb
popa
mov
shl
add
test
inc
or
cmp
mov
pop
dec
neg
addb
push
adc
ljmp
jnp
mov
and
popf
jns
es
in
fsubrl
dec
mov
xchg
pop
arpl
imulb
cld
adc
jmp
mov
ja
cli
lret
aad
push
mov
shrb
jecxz
cmpb
testb
mov
add
mov
xor
repnz
jmp
outsl
sbb
jl
cmp
das
xor
bound
mov
add
mov
mov
add
push
aaa
ja
loope
and
insb
daa
xchg
jns
idivl
sbb
subl
push
aas
repnz
lcall
sbb
inc
xchg
pop
mov
cmpsb
sub
mov
push
sbb
std
jge
aam
daa
dec
dec
mov
mov
cmp
fdivr
ds
call
mov
add
pop
xor
or
jmp
mov
add
bound
add
push
cmp
mov
lret
sub
cmp
push
adc
mov
xor
push
jmp
icebp
fsubp
or
pop
sbb
xor
and
xor
fwait
jns
jne
cmpsb
loope
inc
jecxz
add
jmp
popf
xor
or
fsubr
popf
jmp
inc
add
pop
push
xchg
lea
adc
aas
or
into
or
mov
xlat
inc
inc
hlt
popf
cmc
inc
arpl
sub
outsl
jbe
add
popl
jno
in
test
and
xor
cmc
cmpsl
js
dec
or
adc
jmp
mov
push
ret
or
mov
cmp
popf
aam
mov
and
xorb
push
xchg
test
pushf
push
out
ret
dec
stc
fldl
mov
push
xchg
ja
add
jmp
pop
dec
out
cmp
mov
or
in
shlb
ss
pop
or
jmp
aam
push
inc
xor
pop
mov
mov
imul
pop
incl
stos
and
fisubrl
mov
ds
hlt
cmp
sbb
xor
adc
stos
mov
in
xchg
repnz
rcr
loopne
push
lahf
mov
mov
imul
xchg
push
iret
nop
iret
daa
jne
aad
stos
jmp
divl
add
or
inc
loop
jge
aaa
stos
inc
test
jecxz
shrb
and
cmp
xor
and
sbb
sub
adc
negl
push
lret
push
pop
lods
sbb
or
sub
imul
inc
and
and
xor
push
jo
inc
mov
push
mov
push
in
xchg
lock
bnd
sub
add
js
cwtl
pop
movd
jae
jge
mov
add
ss
push
jmp
pop
in
lods
pop
add
xor
test
ljmp
out
sbb
add
inc
add
mov
addl
xor
mov
adc
ljmp
mov
into
andl
mov
add
add
mov
sub
loope
sti
pop
ficoml
iret
rcll
push
fsts
pop
pop
adc
shlb
out
jnp
das
inc
push
xchg
mov
cmc
and
sbb
xor
pop
sub
add
mov
or
push
push
lcall
inc
mov
push
pop
lea
popf
shll
daa
enter
inc
add
xor
cmp
sub
in
cmp
fldt
in
pop
mov
add
mov
and
aas
mov
push
and
lcall
cmp
cmp
sahf
les
fs
movsl
call
mov
mov
jge
xchg
faddl
nop
mov
pop
out
or
sub
inc
pop
xor
or
dec
mov
fisttps
adcl
repz
lds
std
mov
in
and
pop
out
fidivrl
js
add
js
aaa
sub
mov
es
cmp
push
push
push
cmc
insb
into
lahf
fildl
and
or
xlat
add
pusha
ficomps
js
jmp
mov
imul
mov
jns
add
mov
je
dec
in
pop
dec
nop
jbe
sbb
xchg
loop
test
jmp
xor
sub
add
mov
subb
into
inc
stc
js
into
jns
adc
push
mov
mov
mov
outsl
add
mov
inc
lret
jae
push
push
mov
sbb
adc
popf
sbb
mov
jns
mov
adc
and
jmp
pop
cmp
cmc
add
insl
adc
enter
fistpll
test
out
sbb
out
adc
inc
pop
std
addr16
mul
addr16
enter
push
andl
and
or
scas
shl
dec
inc
cmp
jge
sbb
and
push
addr16
loopne
jb
xchg
sahf
inc
push
or
add
call
sbbb
and
sub
mov
cwtl
mov
xor
pop
push
cmp
mov
outsl
push
data16
push
add
xor
pop
out
mov
mov
cmpsl
movsl
pop
xor
dec
add
fwait
sub
mov
jnp
xor
aad
lods
enter
btr
pop
idivl
sbb
push
push
xchg
jge
rcll
add
jnp
outsb
jmp
sbb
sub
addb
or
jmp
add
clc
mov
push
adc
sbb
shll
jmp
dec
aaa
gs
push
pop
dec
and
punpcklwd
xchg
dec
repz
xor
xchg
addl
mov
aam
loopne
movsb
add
clc
add
lea
pushf
mov
shrb
dec
adc
inc
push
pop
not
pusha
add
jae
add
push
loop
and
bound
mov
lods
lock
inc
xor
mov
mov
movzwl
je
movb
out
xor
adc
xorl
sbb
fbstp
mov
flds
xlat
test
int
lods
enter
dec
pop
xchg
addb
jae
sti
xchg
mov
mov
ss
mov
insl
or
lret
das
imul
movsl
mov
cmp
adc
jge
xor
out
insl
adc
lret
fildl
daa
or
xor
fucomp
pop
div
imul
sub
mov
pop
repnz
mov
add
fisttpll
sub
mov
jle
shll
pop
dec
xor
incb
neg
out
rcrb
jnp
sbb
pop
ret
jg
adc
push
xchg
pop
cmc
mull
cli
pusha
pusha
pop
adc
outsl
and
sub
push
mov
jecxz
mov
sbb
mov
push
push
mov
outsl
rcrl
ds
mov
pop
dec
test
and
stos
insb
pusha
scas
int
sbb
push
push
adc
add
sbb
xor
fs
sub
sub
ja
ret
inc
mov
roll
mov
es
pop
ds
xor
and
sarb
xchg
jne
mov
lret
push
pusha
lock
or
push
sbb
mov
mul
xchg
stc
cltd
mov
sub
rorl
push
roll
add
scas
cmp
dec
in
std
ret
adcb
movb
push
jmp
inc
mov
mov
int3
in
sub
cmp
pop
add
jae
lret
or
cmp
and
or
jne
fsubs
jb
and
push
sti
add
repnz
jo
les
aas
pop
xor
cmp
lcall
stc
add
shlb
fcmovb
hlt
inc
and
jno
pop
orb
lahf
adc
ds
mov
push
and
je
leave
fcomip
mov
jp
jae
or
ds
sbb
jecxz
repnz
int
pop
cmp
lock
mov
add
mov
dec
adc
mov
sbb
xor
fidivrl
loopne
add
and
ficoml
out
xchg
push
in
push
push
sti
mov
add
shrb
incb
mov
pop
jecxz
xchg
xchg
add
insl
push
push
add
jne
divl
pusha
es
pop
pop
sbb
xor
pop
gs
mov
loop
icebp
push
mov
cmc
idivl
in
push
push
mov
sub
jmp
or
push
pop
ds
and
or
sub
xchg
pop
lods
sub
std
mov
enter
jns
cmpb
fiaddl
sarl
mov
jmp
mov
add
dec
or
ja
testb
into
or
jmp
sub
stos
imul
add
cmpsb
bnd
sbb
in
push
and
push
lret
add
lods
dec
add
and
add
out
int3
add
lcall
push
cmc
ljmp
sbb
gs
jmp
xchg
mov
xor
xor
loopne
je
mulb
leave
cmp
out
add
dec
into
or
dec
bound
aad
inc
mov
scas
xchg
lcall
pop
std
iret
ret
add
mov
push
in
or
fs
add
fistl
aad
cmpsb
and
lods
xchg
insl
jne
jge
psrlw
add
and
mov
sub
addr16
jae
inc
xchg
adc
rorb
add
cs
je
add
ret
pusha
pop
sub
lock
adc
pop
test
adc
fs
les
or
mov
movsb
inc
push
ljmp
cmpsb
fldenv
adc
rcrb
lret
insb
and
pop
call
cmp
das
loop
pop
cwtl
hlt
and
pop
daa
xor
inc
std
aaa
and
mov
jg
mov
test
sbb
inc
lea
add
and
mov
pop
pop
push
mov
loopne
push
pop
inc
in
push
ret
sub
pop
push
ret
pop
cmp
cwtl
sbbb
mov
sub
imul
push
mov
subb
pop
pop
shr
andb
int3
add
mov
xor
daa
lods
lret
jl
adc
mov
push
popf
loop
jne
add
jno
dec
xor
xor
push
inc
std
addl
pop
mov
push
out
jp
pop
cmp
cmp
scas
dec
pop
cmp
add
adcb
or
push
pop
addb
push
ficoml
xchg
flds
sub
adc
pop
inc
xor
mov
inc
repz
adc
push
jno
mov
xor
mov
in
ret
adc
xchg
out
sub
dec
xor
arpl
or
std
push
cmp
push
or
add
jo
mov
push
ljmp
sub
mov
mov
push
adc
add
filds
es
int3
jns
pop
sar
add
data16
push
mov
inc
jle
lds
insb
adc
add
dec
fstps
ja
rclb
inc
adc
daa
cmp
push
nop
loopne
push
or
in
xor
outsl
mov
jl
into
pop
xor
push
dec
ljmp
cli
xor
pop
mov
fadds
push
adc
and
jmp
push
stos
movsb
adc
ljmp
inc
pop
movsl
jae
clc
or
push
push
push
jmp
inc
pop
xor
cli
push
lock
mov
mov
fldl
dec
xchg
iret
gs
mov
sbb
pop
fbstp
push
sbb
inc
ja
mov
imul
dec
cmpsl
pop
js
test
adc
and
call
or
or
add
inc
sub
andl
xlat
mov
adc
jmp
pop
add
lahf
mov
mov
bound
push
push
inc
and
addl
jg
popa
pop
jle
pop
pop
pop
or
dec
mov
das
enter
jb
dec
lahf
push
add
outsl
lret
cld
jno
shrb
insb
lods
inc
call
test
pop
add
push
pop
bound
xchg
adc
insb
mov
cwtl
lahf
inc
orl
adc
stos
in
lock
xchg
jp
and
adc
or
pop
cld
pop
bound
ljmp
mov
mov
jne
push
mov
xchg
gs
mov
sti
inc
loope
cld
sub
lret
jno
inc
push
in
mov
ret
mov
sbb
lock
rolb
cwtl
sbb
stc
insb
or
lret
rep
xorb
addb
shr
icebp
leave
jl
insb
pop
loope
mov
pop
mov
or
add
icebp
add
popa
movsb
and
jl
inc
mov
xor
sahf
inc
aaa
jb
out
scas
dec
and
pop
cmp
mov
xor
push
outsb
sahf
imul
cwtl
das
pop
daa
int3
jl
jb
js
add
mov
pop
fsts
add
xor
pushf
rorb
in
add
les
push
lret
daa
push
pop
and
ret
insb
xor
or
data16
cwtl
fldenv
and
cmpsl
jae
mov
iret
bound
xchg
scas
dec
pop
pushf
mov
inc
inc
pop
in
iret
push
loopne
mov
sub
mov
and
nop
sub
hlt
cmp
mov
pop
inc
scas
xor
pop
repnz
jmp
mov
mov
inc
and
fisubl
orl
xchg
jmp
mov
leave
ljmp
lods
jno
sub
sbb
xchg
icebp
test
jb
jns
sarb
pop
fisubrs
push
movl
movsb
cmpsb
mov
add
mov
inc
jl
icebp
xorb
adc
sbb
rcrl
das
repnz
mov
repz
aas
aaa
imul
pop
subb
nop
push
popf
push
lcall
or
adc
xchg
cmc
mov
adc
bound
xchg
stos
mov
adc
movsb
les
mov
xor
xchg
push
jns
ret
test
push
and
pop
or
popa
pop
cs
in
pop
testb
mov
cmc
pop
stos
add
cmp
mov
insl
fucomp
call
mov
addl
adc
dec
xor
imul
mov
das
or
or
filds
aaa
pop
and
and
inc
push
cltd
cmp
rclb
jmp
push
cmp
mov
jp
and
mov
fmulp
add
dec
push
cmp
test
sbb
or
inc
loopne
cltd
mov
imul
sub
push
jg
mov
pop
pop
mov
ljmp
push
pusha
in
cmp
mov
push
mov
pop
sbb
push
or
cmp
pop
decl
cld
cwtl
adc
jg
cwtl
mov
cmovnp
mov
fsubs
hlt
aam
jno
cmp
mov
cmpsl
cmp
movsb
rcl
std
add
jo
inc
es
xor
idiv
xlat
fs
or
int
icebp
das
jae
cmp
lock
sbb
fwait
mov
adc
in
in
mov
sub
ds
xchg
lret
mov
or
data16
mov
ret
or
jmp
xchg
xchg
jecxz
cs
inc
add
repz
rorl
test
and
leavew
jmp
push
pop
pop
mov
or
or
pop
loopne
xor
mov
mov
das
pop
add
push
rcl
in
addl
cltd
pop
sub
shr
and
fbld
mov
sqrtps
add
iret
imul
mov
inc
cld
cmc
fwait
jmp
not
mov
dec
push
ja
outsb
mov
cmp
out
rorl
push
jo
inc
pop
fs
push
xorb
add
loope
int3
addb
jmp
out
iret
mov
mov
mov
sarb
pop
ror
sbb
and
je
daa
pop
sbb
jecxz
mov
ds
pop
nop
jns
out
notl
or
loop
fmuls
inc
pop
dec
mov
xchg
into
dec
and
sub
add
sub
add
pop
pop
jb
mov
sti
mov
jmp
xchg
mov
dec
push
or
jmp
xchg
push
cmc
not
xor
xchg
sbb
push
sbb
pop
pop
rclb
je
inc
mov
cmova
mov
cmpsb
es
cwtl
pop
xor
cs
lds
and
jmp
sub
es
hlt
sub
outsl
hlt
leave
aad
shrb
imul
pop
pop
mov
cwtl
push
fimuls
sub
clc
mov
add
movsl
and
fdivl
rorb
mov
cmp
add
pusha
stos
lcall
in
daa
dec
mov
xchg
out
xchg
cmp
sub
xor
test
mov
mov
outsb
and
out
inc
lds
cmp
mov
stos
push
pop
dec
incl
nop
adc
or
xor
sub
ja
jp
push
pop
cmc
in
adcl
inc
xchg
mov
hlt
mov
xorb
sub
nop
pop
jl
pop
mov
fsub
or
sub
cwtl
dec
mov
mov
ja
mov
fstl
mov
or
pop
dec
jae
add
out
add
add
xor
loope
inc
or
aad
mov
jno
das
and
ficoml
mov
mov
or
and
cmp
out
mov
shlb
push
lds
rcl
in
xchg
pop
mov
sub
jmp
bound
dec
pop
add
fstl
mov
mov
inc
roll
push
neg
add
cmp
mov
pop
mov
bound
push
add
sub
jns
loope
js
xor
imul
push
jo
jmp
clc
lock
shll
ret
pop
inc
mov
rcr
leave
icebp
jno
in
jno
jp
xor
loope
stc
call
or
pop
clc
outsb
xlat
push
imulb
orl
push
add
ret
ror
jo
add
mov
ret
jge
pop
out
orb
jns
xchg
add
dec
flds
xor
in
adc
sub
ss
rorb
iret
inc
push
cwtl
pop
add
mov
push
adcb
in
pop
push
loopne
jmp
stos
mov
movb
push
jmp
mov
pop
push
inc
add
mov
or
iret
dec
je
inc
push
jmp
jge
and
inc
scas
fldl
pop
add
repnz
pop
xchg
xlat
fs
pop
add
mov
add
and
xchg
cli
ret
mov
add
ja
pop
sub
pop
push
xchg
dec
mov
inc
lds
movsl
adc
xchg
push
cmp
mov
testl
pop
xor
out
pop
clc
lcall
xor
xor
pop
loop
iret
jae
sar
mov
push
int3
addr16
add
loop
pop
xlat
or
push
jg
lret
sbb
sbb
or
cmpsb
ja
xchg
lds
or
xor
cmp
lods
sub
dec
jae
dec
and
xchg
pop
mov
mov
dec
inc
xchg
push
in
cmc
push
leave
pop
icebp
lahf
gs
mov
shl
xorb
div
or
out
push
mov
jmp
pop
cmp
jnp
sar
jle
add
sub
lods
xchg
or
xchg
mov
pop
push
mov
adc
lahf
ljmp
mov
inc
mov
repnz
xor
test
mov
jmp
pop
leave
jmp
fimull
aaa
es
mov
insl
xor
in
loop
addb
pop
dec
scas
push
add
push
scas
add
scas
push
btc
repz
jmp
adc
jo
dec
or
xor
jmp
sub
aam
pop
jb
pop
rol
les
mov
sbb
push
ds
int
push
xchg
stos
cmp
dec
movsl
mov
in
jmp
or
rorl
pusha
xlat
arpl
and
and
push
mov
sub
test
adc
clc
jne
pop
and
xchg
orb
jecxz
pushf
xor
adc
aam
or
addb
jne
outsl
push
sti
or
insb
sbb
jmp
sbb
je
jmp
or
shll
add
jl
es
sti
adc
mov
add
adc
jg
mov
je
mov
cwtl
leave
sarb
scas
adc
mov
mov
jb
jge
aas
repnz
test
jo
das
test
cmc
pop
push
sub
xchg
mov
xor
jmp
cli
sub
sbb
sub
ja
imull
adc
or
sub
jle
call
or
xchg
add
sbb
pop
push
pop
cmp
add
dec
pusha
cmp
jmp
test
jge
orl
add
xor
mov
push
fwait
mov
je
xchg
out
mov
lret
movsb
popa
push
adc
insb
push
mov
lahf
aas
cltd
pop
call
push
dec
mov
jg
cli
mov
xchg
mov
add
pop
jmp
into
aam
inc
ret
mov
imul
jmp
out
std
add
out
in
mov
fisubs
lds
xchg
jg
fwait
out
fwait
inc
mov
sub
pop
aam
leave
add
sub
xor
insb
push
mov
rcll
push
inc
and
in
inc
add
mov
dec
xor
lods
rorb
jecxz
jp
sti
mov
or
popf
ljmp
hlt
pop
dec
mov
addr16
sub
jmp
cmc
mov
pop
push
cmp
dec
sbb
dec
inc
mov
add
aas
fistps
divl
out
pop
sub
xchg
add
push
add
jg
cs
sbb
popw
or
aad
mov
jge
dec
sub
or
and
mov
push
repnz
inc
or
xor
add
and
lret
push
outsb
test
lea
sub
xchg
daa
pop
in
xchg
jbe
imul
mov
dec
cmp
dec
popa
pop
push
inc
adcb
dec
xchg
inc
pusha
loop
inc
fdivrp
int
test
fs
insl
push
adc
lods
adc
leave
int3
push
je
orb
jbe
frndint
sahf
mov
or
dec
sahf
dec
test
xchg
fiaddl
or
adc
out
notb
mov
ljmp
xorb
mov
jo
xor
sbb
into
lret
notb
cmp
test
jmp
daa
push
jbe
call
mov
sahf
sti
inc
xchg
mov
iret
mov
or
mov
and
sbb
xchg
or
add
jmp
sbb
adc
rcrl
mov
xchg
or
dec
outsb
lods
jo
in
inc
rcl
cmovbe
orl
sarl
mov
sbb
xor
mov
ret
mov
inc
sub
or
sub
std
xor
hlt
xor
xor
mov
xor
sub
or
lds
pop
sub
out
mov
rcrb
addl
dec
push
add
pop
aad
mov
mov
jne
js
adc
inc
stos
ror
arpl
and
cmp
ffree
pop
sub
das
inc
cmp
in
leave
insb
sub
sub
pop
fimuls
xor
rcl
add
pop
inc
add
mov
mov
xor
xor
testl
shl
dec
push
cmp
je
ljmp
popa
dec
scas
cmp
dec
and
in
pop
jne
mov
sbb
mov
sub
sbb
or
add
add
dec
sub
adc
inc
outsl
fimuls
test
bound
pop
sub
mov
and
pop
add
jnp
cmp
mov
bound
sub
iret
test
or
test
in
cmp
add
jo
add
xor
pusha
aaa
std
fcoms
and
mov
loopne
jecxz
bound
xor
push
gs
jge
push
int
hlt
jmp
add
jo
loop
pop
sub
fidivs
jbe
push
shl
stos
xchg
cs
sbb
cmp
pop
fyl2x
jmp
pop
pop
mov
jo
nop
add
mov
test
rcrb
sub
push
pop
adc
cwtl
pop
add
pop
add
jne
mov
add
sbb
pop
lods
push
add
stos
inc
scas
xor
push
lds
push
adc
rcrl
pusha
sahf
push
push
adc
cld
jmp
or
negl
mov
jmp
hlt
nop
jno
rclb
push
sub
fs
inc
push
mov
cli
jmp
into
subb
scas
inc
adc
push
stos
xor
out
mov
sub
testl
scas
arpl
and
adc
adc
enter
push
or
sbb
push
or
jns
pop
jbe
add
out
mov
fistl
adc
dec
pop
mov
lret
test
pushf
pop
pop
push
pop
push
lret
jmp
pop
decl
mov
iret
sub
dec
in
xor
sub
pusha
kandb
sub
add
pop
lret
or
pop
jecxz
cs
and
call
and
icebp
mov
or
cmpb
dec
push
and
cltd
sbb
push
dec
mov
push
push
call
push
push
pusha
out
mov
jge
jns
iret
pop
test
inc
cmp
pop
pop
stos
and
jae
andb
inc
mov
mov
add
in
das
adc
inc
or
jg
js
negl
in
lahf
cld
js
push
mov
jne
push
cmp
lock
sbb
out
or
ja
cmp
sahf
cli
push
or
test
push
adc
movl
and
rcrl
je
inc
popf
flds
xlat
push
pop
pop
xchg
pop
fsubp
mov
jmp
jmp
ret
iret
push
cs
push
mov
test
add
rcl
jae
std
lahf
sti
mov
dec
stos
sbb
ficomps
in
dec
movsb
push
out
or
xor
or
sbb
mov
sub
pop
and
mov
jmp
nop
mov
add
xor
sub
mov
and
push
ss
sub
xchg
testl
inc
jmp
fistpll
in
lahf
xchg
add
fsts
rcll
sbb
mov
mov
add
mov
daa
lods
or
jne
cmp
fwait
inc
shrl
pop
pop
jae
push
pop
push
jmp
xchg
stos
mov
and
push
rep
xor
xor
das
and
mov
pop
pop
sti
add
in
jmp
cmp
fs
mov
push
push
jmp
call
or
ror
fwait
add
push
ret
idivb
stc
insb
cld
repnz
inc
add
stos
pop
mov
mull
bound
clc
stos
dec
mov
inc
scas
call
jl
xchg
jne
mov
inc
xlat
daa
add
jo
jns
dec
jecxz
fidivrl
add
addl
sarl
xchg
cmp
add
fwait
xor
dec
xchg
mov
add
push
in
sub
pop
adc
enter
fdivr
pop
pop
push
pop
mov
loop
lret
cwtl
sub
aaa
mov
mov
popf
addr16
adc
mov
pop
cmpb
cwtl
push
cmp
lret
stos
das
lret
popf
out
cmpsl
jne
or
ret
pop
pop
cwtl
push
shr
loope
cmp
push
mov
or
dec
pop
cmc
push
push
add
cmp
pop
jns
mov
inc
std
inc
lds
adc
sahf
add
dec
push
imul
add
inc
mov
negl
fs
inc
pop
mov
adc
mov
arpl
mov
pusha
jge
mov
outsb
notl
xchg
cmp
arpl
sub
in
or
cmp
jle
or
sarl
inc
add
add
or
not
lds
and
or
fcmovnu
mov
lret
and
rcrl
xor
popa
inc
sbb
or
cmpsl
inc
pop
adcb
jmp
sarl
or
add
push
mov
sahf
mov
jmp
pop
push
je
add
adc
imul
push
jne
pop
adc
inc
mov
repz
mov
mov
xor
add
mov
adc
mov
cmp
loopne
add
mov
sub
adc
into
jle
xchg
fdivrs
and
pop
push
xchg
ss
jne
mov
mov
mov
clc
adcl
pusha
push
pushf
xlat
cmp
repz
shlb
sub
xchg
or
jmp
testb
jge
sub
add
xchg
inc
nop
xchg
dec
or
sbb
ljmp
and
js
je
mov
fidivrl
je
fwait
clc
sbb
and
jmp
fimuls
lock
pop
push
pop
cli
mov
jl
test
add
js
inc
jmp
dec
push
bound
rcrb
lcall
dec
sub
out
js
aas
mov
iret
xor
mov
sub
mov
not
add
nop
xor
push
shr
push
fdivrs
repnz
lock
cltd
or
jmp
and
xchg
sub
jo
iret
daa
cld
xchg
shl
sbb
push
xchg
sahf
fnstenv
ret
adc
push
dec
mov
push
or
les
not
cli
adc
mov
into
or
pop
sub
pop
das
inc
aam
jg
jmp
adc
dec
and
in
inc
or
cmp
call
jmp
je
lahf
inc
cmp
or
push
xor
in
mov
movsb
inc
scas
adc
daa
jb
fnstenv
ret
and
xor
jmp
adc
popf
call
and
lods
mov
xlat
jns
ret
icebp
pop
mov
push
and
sbb
pusha
sbb
xorl
add
jnp
dec
sbbb
adc
clc
lock
mov
pop
or
icebp
and
test
push
jb
lahf
in
aaa
and
xor
jl
lcall
fnstenv
lea
movsl
sub
mov
js
xchg
inc
pop
xor
mov
sub
inc
mov
jge
and
fadds
and
sarl
pop
mov
sub
sarb
push
and
sbb
jmp
out
sub
lock
inc
mov
ljmp
mov
fnstsw
mov
add
lret
add
cmpsb
inc
roll
xchg
je
popa
jmp
xchg
add
aam
les
in
es
adc
dec
push
pop
add
ret
xor
jl
jae
push
ja
cmovle
ljmp
arpl
jl
notb
aad
call
lret
sbb
mov
mov
xchg
xor
test
jmp
fdivr
dec
mov
mov
sbb
out
neg
mul
pop
pop
mov
les
mov
cmp
mov
cmp
push
sbbb
adc
sti
stos
mov
jecxz
mov
xchg
dec
rcrb
jle
insl
mov
sbb
and
mov
js
adc
add
jb
pop
push
inc
jbe
nop
inc
icebp
in
dec
pop
jle
cmp
cmp
push
and
dec
dec
or
pop
test
icebp
xchg
push
xchg
int3
sub
lods
adc
stos
xchg
add
or
mov
loop
aad
dec
inc
jmp
roll
inc
jmp
push
loop
fcoml
data16
xor
les
inc
jle
xor
sti
dec
cld
lods
dec
sbb
adc
sub
sub
push
sub
dec
inc
jb
add
jae
lds
std
cmp
subb
mov
pop
pop
fsubrl
pop
cld
lahf
mov
lock
sub
jno
dec
popf
rcr
and
js
dec
push
sbbl
pop
aam
nop
das
movsb
jnp
mov
push
mov
pop
lcall
lahf
pop
pushf
ss
pop
adc
mov
jmp
std
ret
outsb
repz
lea
jae
clc
inc
or
jno
sarb
rorb
rcrb
inc
xor
icebp
cmpsb
subl
push
cmp
imul
xor
daa
cmc
cmp
lahf
test
dec
into
and
ret
mov
data16
dec
mov
xchg
pop
leave
adc
pop
sbb
sbb
pushf
add
cwtl
and
lret
scas
dec
jp
pusha
mov
add
jmp
or
lock
jecxz
xor
pop
fs
add
cmc
or
pop
mov
pop
xor
sub
testl
adc
cmp
xor
cld
xrstors
or
lret
and
scas
xor
push
xor
shl
or
inc
and
cld
int3
shll
xor
mov
in
xchg
cwtl
lds
ficomps
or
sbb
daa
and
or
pop
adc
insl
mov
lret
or
push
push
out
lcall
add
clc
and
mov
fs
loope
mov
cld
scas
lahf
rcrl
sub
inc
stos
mov
mov
push
add
out
jno
xchg
sub
in
stos
pop
sti
and
jmp
fst
faddp
cbtw
or
mov
test
cltd
imul
jmp
into
imul
jb
mov
cmpsb
and
xorl
fildll
and
pop
dec
dec
in
jmp
js
test
push
inc
and
pusha
test
mov
sbb
mov
out
jo
push
in
out
mov
adc
test
nop
inc
sub
xchg
mov
cmp
data16
lea
ss
sub
sbbl
jns
push
xchg
cwtl
scas
jmp
leave
and
jbe
pop
or
out
cmpsb
inc
and
pushf
sub
rolb
testl
pop
call
rol
jmp
adcb
sub
dec
add
cmp
add
xor
push
sbb
jmp
or
cmp
movsb
push
pop
mov
and
adc
lock
add
in
sub
jmp
cs
out
ror
fwait
sub
add
shrb
jl
push
cmpsl
inc
cmp
xchg
mov
inc
hlt
or
in
nop
or
add
mov
add
cmc
sti
loop
lret
add
or
in
sbb
neg
in
add
or
cmp
inc
mov
add
add
and
xchg
in
dec
sub
jp
sahf
clc
and
ret
aam
iret
dec
or
jp
xor
adc
lods
xchg
fcomi
mov
cmp
push
in
adc
pop
arpl
shl
adcb
or
pusha
dec
or
and
ret
or
mov
push
test
adc
push
mov
inc
nop
outsb
xchg
mov
cli
push
pop
jbe
cmp
into
push
and
add
jmp
stos
pop
leave
jg
jle
das
adc
add
cmc
xchg
pop
out
mov
mov
pop
or
shr
push
add
xor
push
push
mov
fadd
and
cmc
and
mov
or
xchg
aad
push
add
xchg
aam
xor
sub
das
mov
pop
and
mov
mov
mov
daa
movsb
jg
stos
lods
sbb
cmpsb
loopne
arpl
mov
pop
in
xlat
stc
nop
dec
stos
mov
lods
lahf
inc
add
inc
mov
xor
add
jmp
cmpsl
inc
jo
jo
loope
ljmp
push
mov
inc
push
pop
testb
sub
fsubr
or
out
jecxz
mov
shlb
jg
jmp
inc
and
xor
cmc
jo
and
push
jmp
mov
es
dec
outsb
jl
es
and
das
push
loope
jbe
das
push
push
add
dec
pop
sub
push
sub
mull
daa
clc
cwtl
es
mov
shll
add
aaa
lcall
dec
jae
mull
push
mov
xchg
pop
jbe
mov
mov
pop
pop
movl
pop
dec
jns
cmc
popf
inc
jle
mov
pop
sub
pop
push
les
and
push
cmp
movsl
or
jg
shll
adc
push
jbe
stos
fadds
mov
dec
add
inc
popa
dec
cmp
add
pop
pop
jmp
mov
ljmp
add
jmp
bound
in
mov
cmc
sbb
xchg
adc
or
jnp
and
add
nop
icebp
in
popa
cmpsb
push
in
add
cmpsl
push
pop
pop
repz
stos
enter
mov
dec
push
cmp
pop
into
fmuls
scas
cwtl
inc
test
mov
xor
mov
xchg
into
dec
repz
adc
repz
aaa
push
xchg
aas
xchg
int3
jmp
daa
clc
xlat
xor
add
and
and
xchg
test
shr
mov
pop
ret
cmpl
mov
and
test
out
pop
pop
mov
divb
clc
jmp
testl
movsl
inc
push
mov
shl
lahf
rcll
bound
jbe
cld
lcall
repz
ja
add
cmp
aas
dec
push
mov
push
loop
add
mov
pop
movsl
jnp
pop
xchg
cmp
loopne
aam
pop
lock
div
loope
and
inc
pushf
add
insl
inc
adc
xchg
pusha
dec
out
fs
rcr
xchg
inc
mov
inc
ret
jne
add
clc
or
adc
lods
inc
xchg
mov
stos
push
mov
push
pop
xlat
jo
pusha
leave
push
pop
push
mov
repnz
icebp
nop
into
not
fisttps
dec
push
int3
dec
mov
addl
mov
daa
push
pop
cwtl
jb
mov
std
movsb
hlt
cs
loop
dec
xor
inc
mov
mov
jne
or
dec
sbb
lds
push
sub
pusha
mov
stc
pop
pop
inc
lahf
adc
lods
push
inc
fimull
out
push
inc
dec
inc
add
std
mov
mov
mov
lahf
jns
imul
and
cld
ljmp
pusha
mov
and
sbb
mov
cld
or
rcl
arpl
add
mov
sub
fstpl
jle
movsl
jle
cmpsl
add
add
inc
enter
in
out
jecxz
xchg
pop
out
xchg
out
sti
inc
sbb
in
lret
rorb
movsb
sbb
adc
xchg
xor
rclb
cmpsl
or
xchg
xchg
in
inc
lea
push
pusha
mov
mov
mov
xchg
shll
sub
std
sub
loope
in
test
rcll
jo
jmp
ja
iret
inc
xorb
adc
cvtps2pd
mov
xor
push
push
ja
test
movb
pop
xor
pop
push
inc
xor
or
pop
push
add
mov
stc
js
inc
push
je
loopne
sub
pop
mov
stos
jno
push
mov
mov
push
sub
add
ljmp
popf
inc
cld
int
add
adc
lds
xor
mov
repnz
cmp
cmpsl
ret
dec
mov
loope
xor
mov
add
loopne
addb
xor
add
outsl
and
popa
xor
jmp
nop
mov
inc
insb
or
sar
in
mov
mov
insb
orb
dec
mov
and
aas
lret
sbb
inc
mov
mov
aam
adc
mov
in
sub
add
data16
mov
cmp
cmp
or
fists
in
pop
inc
je
jmp
inc
inc
push
cmp
jmp
bound
and
pop
push
adc
rolb
jmp
arpl
and
dec
pop
add
test
xchg
lock
arpl
xchg
xchg
enter
mov
inc
push
xchg
push
add
xchg
add
inc
mov
std
xorb
pop
lret
add
mov
ljmp
cmp
add
aad
or
cmpsl
or
std
mov
mov
cmp
leave
or
mov
cmp
xor
mov
inc
js
ja
fimuls
aam
pop
mov
in
sarl
in
ret
test
jmp
pop
lock
repz
jmp
loop
andl
xor
mov
pop
add
or
fs
in
add
push
lock
add
push
dec
push
repz
xchg
push
aad
leave
int
or
scas
mov
adc
jmp
xor
adc
add
in
and
and
pop
xchg
pusha
fucomip
mov
imul
pop
mov
inc
jmp
inc
or
push
lret
jbe
adc
inc
shrl
xor
mov
enter
add
push
mov
mov
xor
scas
scas
push
jbe
add
es
pop
cmpsb
xchg
sub
dec
shl
or
xchg
jle
cli
int
jnp
repz
pushf
mov
mov
mov
iret
jmp
sbb
dec
mov
std
icebp
mov
popa
ds
pop
cld
test
movsb
pop
pop
imul
popa
int
jmp
pop
mov
loopne
ret
jmp
out
mov
and
pop
cwtl
roll
add
sub
and
filds
pusha
mov
jecxz
lock
je
in
jmp
icebp
pop
clc
inc
shrb
adc
add
je
push
sbb
pop
test
jnp
or
jbe
adc
xor
add
push
push
mov
leave
loope
jns
ret
jmp
es
cmp
pop
cld
add
add
push
in
ret
push
leave
push
cmc
into
repz
sbb
out
inc
in
bound
shlb
icebp
and
jl
pop
cmc
loopne
jmp
xor
in
subl
inc
jmp
inc
ret
andb
shrb
je
loop
dec
dec
mov
and
inc
jge
fldt
std
adc
mov
adc
ret
inc
or
push
jmp
push
push
jge
jp
mov
inc
lahf
ror
cmp
sarb
fstl
and
imul
popa
jmp
out
pop
test
stos
inc
jb
mov
sub
sub
scas
cmp
pushf
mov
loope
das
mov
bound
filds
inc
mov
pop
xor
add
or
das
push
loopne
jg
pop
mov
adc
mov
and
push
js
lret
inc
push
or
or
inc
bound
cmpsb
push
rcrb
inc
sub
loope
mov
shr
ja
sbb
mov
push
sbb
jne
pop
fsubl
scas
push
test
cltd
ret
rcll
daa
les
xchg
aad
scas
leave
mov
lods
fmull
popf
sub
sub
mov
push
aam
data16
pop
add
pop
negb
aaa
movsl
xchg
xlat
pop
imul
xlat
xor
cs
clc
lahf
mov
andl
insl
stc
xor
repz
add
mov
xchg
pop
push
ljmp
sbb
mov
andl
cmp
sub
jmp
repz
mov
inc
xor
jl
mov
or
outsl
fcomps
inc
rorl
and
into
je
pop
mov
sarb
shll
into
adc
push
jmp
and
repz
out
mov
add
push
or
test
or
push
inc
push
cmp
jl
or
add
add
xchg
std
out
daa
cmp
push
loopne
mov
and
clc
addl
sbb
jmp
in
add
lahf
movsb
mov
inc
lds
loop
cmpsb
xor
mov
mov
mov
imul
mov
pop
pop
neg
sti
add
push
or
mov
pop
sub
notl
push
sarl
push
mov
lock
shr
inc
mov
std
lods
mov
loopne
xor
inc
xchg
add
jmp
rorl
mov
out
add
enter
or
rcll
mov
mov
ret
in
xchg
mov
push
mov
cmpsb
cmp
cmp
test
call
icebp
lcall
mov
mov
ja
std
repnz
or
loope
bound
pop
pop
call
ds
xor
dec
mov
cmp
int3
jle
and
mov
mov
pushf
push
movsb
sahf
pop
mov
nop
add
lock
dec
push
popa
or
loop
pop
lea
sbb
add
pop
clc
or
pop
add
aad
movsl
jnp
neg
xchg
or
div
loopne
ret
adc
fildl
and
pop
pop
xor
scas
aam
jmp
repz
pop
jb
and
push
test
jge
lds
cmpsl
bound
mov
push
mov
scas
push
mov
adc
mov
std
jmp
fcomip
mov
loopne
mov
and
lds
or
shlb
in
rol
pusha
pop
sub
and
push
add
pop
sbb
lds
outsl
out
movsl
or
inc
repnz
dec
sti
into
imul
mov
jae
aas
sbb
pop
fisttpl
push
pushf
nop
das
fnstenv
icebp
jns
shl
icebp
lcall
add
lock
inc
push
inc
push
pop
pop
dec
stos
nop
lcall
cwtl
out
mov
dec
lea
or
cs
mov
add
repz
jmp
jmp
rorb
neg
in
and
and
jmp
js
adc
jne
cld
xchg
daa
xor
adc
popa
inc
inc
pusha
sub
dec
pop
lock
pop
lret
jmp
out
pop
sub
mov
jmp
cmc
pop
push
mov
call
fcmovbe
pop
pop
add
xor
outsl
jmp
xchg
pop
mov
adc
mov
dec
mov
or
push
pop
push
push
push
sub
sub
addl
push
divl
out
adc
dec
pusha
push
xor
dec
insb
stos
sbb
shlb
push
push
mov
lods
cltd
nop
push
arpl
daa
xlat
pop
jmp
cs
sub
call
sbb
push
cld
lcall
add
adc
cmp
xor
int
jp
sti
cmpsl
fwait
push
arpl
dec
pop
mov
dec
jl
inc
sti
andl
leave
xchg
push
jo
repz
and
je
mov
js
cwtl
inc
or
jmp
push
mov
in
sub
pop
lods
out
pushf
xchg
push
add
mull
pop
dec
inc
xchg
fists
mov
adc
ljmp
jmp
jmp
sbb
add
xchg
xor
jmp
movsb
push
clc
sti
mov
ss
sti
iret
out
loop
sahf
lret
sahf
out
push
outsb
sahf
jg
popf
sbb
cmp
pop
imul
push
mov
test
pop
shr
rclb
js
jecxz
movsb
fdivl
sbb
xchg
mov
mov
jmp
sub
mov
loopne
mov
pop
mov
jnp
inc
or
pop
lock
dec
sahf
lcall
pop
push
sub
mov
mov
jp
push
iret
sbb
mov
dec
mov
jo
cwtl
mov
dec
mov
lods
je
nop
mov
aad
cmp
sub
scas
push
mov
sbb
xorb
jno
add
inc
jmp
int
jnp
shl
pop
add
nopl
dec
jg
sub
cmp
jo
mov
push
out
cmp
adc
mov
xchg
or
inc
sbb
and
neg
add
lret
pop
xor
imul
or
and
jmp
hlt
cmpb
stos
mov
sub
or
les
sub
sbb
mov
xchg
mov
in
out
mov
add
jle
cmp
in
sub
aaa
inc
pop
pusha
dec
inc
push
push
jecxz
push
push
mov
jmp
dec
and
loop
push
pop
inc
xorl
loopne
add
jp
inc
loope
dec
fiaddl
leave
test
inc
pop
mov
add
pop
add
push
pop
sub
push
or
fwait
stos
fstps
and
pop
into
xor
fbstp
cwtl
cmc
jg
sub
incb
add
ss
mov
mov
das
mov
or
xchg
das
test
mov
pop
jle
repnz
xchg
test
jo
sub
movsl
push
iret
dec
or
loopne
pop
pop
cmp
jmp
nop
jl
decb
test
gs
cmc
cmp
jo
sub
mov
push
les
out
sbb
and
xchg
addb
lock
or
cmp
mov
inc
or
testl
add
sub
sub
cmp
or
rclb
dec
pop
movlps
and
rcrb
jno
loope
bound
or
fildll
popf
dec
adc
in
mov
sbb
mov
cmp
push
lret
sub
add
sub
icebp
adc
cmpsl
xor
imul
xchg
jmp
mov
popa
pop
lods
add
lods
xchg
dec
out
pop
leave
cmpsl
mov
add
popa
adc
cmp
rclb
ret
adc
jg
test
xchg
movsl
adc
mov
push
jp
mov
or
sbb
jmp
fsubrl
loop
in
sbb
mov
sub
testb
scas
inc
out
rclb
sub
push
add
outsl
inc
clc
mov
cmc
icebp
sbb
lds
mov
add
push
inc
sbb
in
aad
and
sub
add
repnz
sbb
push
inc
cmp
fcmovnbe
or
jb
or
ret
clc
push
mov
add
pop
fdivrl
add
subb
shlb
scas
jns
pusha
mov
loopne
mov
arpl
xchg
sti
xchg
leave
or
or
mov
out
dec
add
sbb
adc
daa
mov
pop
add
mov
imul
inc
inc
movsb
ds
inc
pusha
cmpsb
cs
dec
dec
dec
subb
ret
lods
pop
sub
add
push
push
jmp
mov
mov
xchg
xlat
xchg
in
nop
add
cmpsl
bound
js
loope
sti
out
inc
test
mov
dec
js
lret
insl
lock
cmpb
movsb
xchg
movsb
in
addr16
fstpl
mull
inc
jp
sbb
rorb
push
inc
pop
adc
sbb
cmp
adc
mov
jmp
test
mov
xor
jle
fmull
mov
mov
jb
je
outsl
dec
push
inc
add
mov
mov
mov
lods
jo
or
xor
jne
pop
pop
mov
mov
int3
cmc
sbb
push
xor
sub
add
inc
jmp
inc
mov
sahf
or
adc
dec
cld
pop
inc
and
xor
xchg
mov
ror
pop
in
test
fwait
pop
sub
lret
outsl
sub
ret
push
add
lcall
stos
jbe
icebp
in
cmp
inc
or
pop
sub
pop
or
dec
adc
adc
and
notb
sbb
test
pop
stos
and
repz
out
cltd
jnp
or
scas
cmp
mov
push
int3
mov
int
addb
repnz
pop
stc
sub
add
add
sub
repz
mov
lods
loope
sti
imul
addb
adc
or
shlb
sub
aas
pop
or
xchg
jbe
add
xchg
incl
cmp
mov
out
cwtl
pop
pop
aad
gs
out
cmpsl
or
out
bound
xchg
inc
fsubrp
dec
jbe
and
gs
sbb
pop
adc
adc
loopne
mov
popf
inc
adc
jnp
mov
xchg
outsl
ret
or
cmp
lahf
int3
and
in
pop
pop
movsb
jno
inc
rolb
jecxz
or
ret
or
mov
test
wbinvd
inc
push
leave
sub
leave
outsl
push
testb
in
rcr
xchg
in
in
insl
sbb
fsubs
cli
test
xchg
jo
nop
xor
sub
xchg
gs
sbb
sbb
adc
and
clc
daa
adc
pop
jbe
cmp
xor
movsl
add
sub
orl
std
sub
inc
je
divl
nop
mov
add
inc
push
cmc
iret
mov
out
pop
fucom
sub
xchg
add
or
shlb
push
mov
aam
imul
fs
push
fdivrs
cmp
leave
rclb
sub
inc
adc
loope
pop
loopne
adc
ja
jo
xchg
cvttps2pi
in
ss
push
sub
popa
and
jo
cmpsb
xchg
les
jb
cmp
mov
call
push
xchg
movsl
ljmp
push
jmp
fisubs
sub
pop
movsb
add
pop
push
popf
std
or
add
push
mov
shlb
xor
scas
sub
out
mov
aad
jmp
lret
and
push
lock
add
ljmp
add
jge
pop
or
jbe
or
xlat
and
xlat
test
cli
xchg
xor
out
shll
imull
loop
cmp
xchg
jl
dec
out
shlb
add
jmp
pop
xor
push
cmp
pop
out
popf
movsl
cwtl
mov
ret
sub
pop
sub
clc
sub
sub
cmp
sub
stos
lods
cltd
dec
out
cmp
adc
pop
add
sub
add
insb
jo
pop
xchg
jmp
mov
jmp
mov
lahf
cmpsl
xlat
movsb
lcall
mov
adc
in
test
ss
push
sbb
mov
add
and
cmove
adc
adc
sbb
mov
jnp
xlat
ret
aaa
in
and
dec
aad
fildll
data16
je
cmp
dec
cmc
test
and
inc
xchg
add
rolb
jmp
popl
mov
mov
aaa
test
xchg
cli
mov
inc
imul
cmp
sub
test
clc
movsb
or
mov
roll
aaa
jge
add
add
fldcw
es
repnz
jg
pop
push
loope
sub
mov
je
mov
inc
push
stos
dec
cmp
or
xor
pop
mov
jge
rol
pop
mov
inc
out
push
jne
push
push
add
fwait
adc
add
hlt
mov
pusha
pop
ljmp
dec
push
push
push
lods
sarb
pop
add
dec
mov
loop
push
adc
ss
sub
dec
ja
pop
subb
fstpl
ja
into
and
add
push
xor
mov
loope
sub
sbb
cmp
lods
out
sub
aad
aad
xor
push
inc
addb
dec
aas
and
roll
fists
dec
lods
std
sub
lret
cmp
mov
jge
and
cmp
add
jbe
push
shl
jg
cmp
mov
int
pusha
lods
out
daa
int3
pop
fisttpll
push
dec
push
push
mov
jmp
fs
pushf
gs
dec
lock
cld
out
add
dec
gs
cwtl
ret
pop
adc
cmc
subb
jb
mov
cmp
outsl
call
mulb
aam
or
pop
sub
popf
inc
mov
rcr
add
cmc
nop
mov
xchg
shll
arpl
sti
outsb
cli
mov
mov
cmpsb
xchg
out
push
neg
lret
jg
xor
sub
mov
js
push
mov
shl
fidivrs
popa
dec
push
add
jne
sbb
and
mov
lods
or
rol
pop
pop
loope
jo
push
adc
dec
pop
pop
push
mov
subl
and
sub
push
xor
push
xchg
mov
jns
adc
leave
cmp
dec
shl
aad
push
add
repnz
jmp
or
testb
or
mov
scas
xchg
jne
aam
mov
sbb
inc
dec
cmp
mov
cs
mov
xchg
mov
mov
adc
sub
adc
or
rcrl
dec
jne
and
add
inc
in
or
inc
aas
mov
test
jmp
add
jp
sub
add
loopne
xor
inc
pop
out
and
xorl
lods
and
dec
pop
cmpsb
in
pop
cld
and
cmpsb
inc
add
jmp
add
out
in
or
mov
call
xchg
sbbb
add
pusha
pop
fdivs
xchg
jb
ret
pop
adc
adc
inc
sti
imul
xchg
lds
lock
adcb
punpcklbw
call
outsl
pop
push
add
sbb
push
dec
ljmp
push
adc
push
roll
mov
rorl
jg
and
dec
ss
out
add
xor
xchg
lret
mov
sub
add
in
jle
inc
jge
sub
pop
ja
mov
mov
mov
scas
ret
jge
shrl
mov
push
or
dec
lock
and
ljmp
pop
mov
mov
adc
sarb
jbe
push
jmp
in
in
push
in
jecxz
popf
addl
lea
cmp
mov
push
das
fsub
push
daa
loope
pop
pop
insl
pop
mov
sub
aas
mov
das
inc
divb
push
push
icebp
push
lock
dec
xchg
xor
add
shll
leave
hlt
clc
andb
jg
data16
sbb
xor
lods
fdivr
adc
push
mov
sub
cmp
add
movaps
rcrb
outsl
pop
out
ja
imul
rclb
lcall
popa
sbbb
dec
mov
fidivrl
sahf
sub
add
aas
xchg
xor
loopne
or
add
push
jnp
push
and
movsb
push
repnz
arpl
mov
imulb
out
cmp
mov
andl
js
fmull
jnp
xchg
mov
inc
icebp
ja
mov
cltd
xorl
dec
pushl
mov
and
pop
dec
xchg
adc
loop
push
mov
sub
ljmp
jno
push
or
jge
cmp
stos
adc
xchg
fisubrs
push
pop
sbb
out
xchg
call
jno
jecxz
lret
push
and
jl
in
aaa
jo
add
sbb
cld
xor
pop
pop
cmp
lods
lods
ljmp
xor
cld
add
jmp
addl
sub
push
js
pop
fdivr
cmp
std
out
lea
lods
aam
fwait
arpl
sub
add
adc
std
xlat
lahf
shlb
cmp
dec
push
in
out
sbb
popf
out
addb
mov
jbe
jl
call
mov
fisubl
cmc
sub
popa
lcall
fisttpll
sbb
adcl
push
adc
push
das
inc
push
inc
push
mov
mov
mov
inc
sub
orl
xlat
push
stc
push
mov
test
add
adc
pop
sub
loope
push
daa
ljmp
movsl
inc
adc
cmp
das
xor
adc
and
xor
push
add
inc
ret
xlat
fidivrs
mov
push
std
adc
sbb
mov
cmp
sbb
sbb
out
imul
sbb
push
daa
pop
inc
ret
mov
xchg
stos
push
cmc
cmp
ja
shlb
dec
jmp
aad
cwtl
insl
push
gs
mov
sub
lods
pop
sti
cmp
jmp
stos
rorb
fnsetpm(287
stc
lcall
daa
loopne
push
adc
inc
int3
xor
push
jnp
add
push
cwtl
rcrl
mov
lods
mov
fists
pop
pop
adc
sub
xor
movsl
sbb
mov
roll
cmp
aad
mov
jmp
aas
pop
das
jmp
push
inc
jo
dec
in
xlat
adc
push
inc
icebp
sub
jl
das
fistpll
pop
std
and
jmp
add
jl
sub
int3
and
std
ret
cmp
adc
dec
xor
rcr
cmp
add
cmp
xor
sub
xor
jmp
pop
stc
and
cmp
push
pop
in
adc
bound
es
or
add
jmp
or
std
mov
mov
out
and
inc
faddl
jmp
and
imul
dec
mov
call
adc
mov
lock
xchg
pop
xchg
imul
dec
sbb
jae
mov
arpl
nop
pop
pop
add
pop
jno
nop
inc
adc
or
inc
push
adc
icebp
mov
or
jmp
pop
push
pop
mov
push
mov
xchg
cld
mov
adc
add
rcrb
aam
jae
ret
pop
jns
inc
sub
jg
movsb
jne
mov
movsl
inc
push
cmp
jmp
loop
and
test
mov
repnz
adc
frstor
xchg
imul
push
push
in
vmread
mov
loopne
xor
jbe
pop
int
inc
lock
inc
and
pop
dec
pop
xchg
das
jns
aad
xchg
inc
addl
subb
pop
dec
cmp
mov
cld
mov
es
xlat
push
xor
es
cs
xchg
or
stc
inc
mov
pop
push
jl
movsl
pop
imul
push
mov
xor
add
sub
jmp
lret
sub
popa
xor
iret
or
cmpl
mov
call
pop
pop
and
or
sub
sub
xchg
fstpl
aas
sub
push
pop
mov
adc
fstpt
icebp
or
push
sti
das
push
or
sub
mov
andb
dec
jmp
mov
mov
into
daa
push
inc
lds
fildll
adc
mov
jl
and
push
sub
lret
iret
dec
std
sbb
nop
adc
notl
adc
add
es
outsb
in
xchg
pop
ficoms
and
dec
pop
xchg
cld
gs
fstp
adc
std
cmp
mov
leave
aas
mov
shlb
xchg
cld
je
jmp
sub
into
loop
sub
nop
mov
in
mov
or
ror
push
cmp
pusha
jmp
dec
adc
mov
mulb
leave
inc
push
jo
jb
push
and
inc
sub
loope
int3
add
loope
mov
pop
pop
mov
mov
cmp
fldcw
dec
fnclex
pop
fmuls
mull
dec
cli
mov
call
mov
popa
sbb
mov
jo
fnsave
add
roll
mov
lods
and
mov
fmuls
adc
or
push
push
xchg
mov
cmp
fiaddl
or
cmpsb
pop
popl
xor
or
push
mov
mov
adc
mov
cmp
in
dec
jp
xorl
jl
sub
negb
and
cmpb
add
push
and
pusha
ja
lods
add
add
adc
shrw
mov
mov
cmp
ret
jmp
inc
movsb
in
int
rolb
nop
xchg
jmp
jmp
scas
xor
ljmp
push
and
add
jg
cmc
sbb
adc
mov
mov
pop
fdivrl
and
mov
dec
pushf
jge
adc
out
push
pusha
or
std
mov
pop
addl
pop
jmp
and
ss
xchg
push
popa
pop
push
movl
mov
and
aas
jmp
pop
imul
call
out
imul
sbb
mov
adc
inc
lods
mov
loope
sub
pop
inc
cld
push
push
jno
jno
icebp
scas
push
and
out
or
mov
mov
shr
loop
sarb
sub
sbb
add
and
stos
push
negl
push
and
sub
adc
in
mov
mov
push
cld
inc
bound
jae
and
adc
push
add
es
insl
imul
movsl
mov
repz
xor
inc
mov
add
jo
loop
xor
xlat
push
xchg
mov
push
push
aas
leave
jge
pop
pop
pop
bound
daa
test
popf
inc
imul
jbe
addb
lcall
push
adc
incb
shl
push
add
xorl
cli
push
dec
or
fadd
or
add
jns
pop
or
add
add
ret
push
ljmp
ret
mov
rclb
sub
sub
jns
inc
push
mov
call
add
mov
imul
jp
int3
int
cwtl
inc
push
dec
rolb
pop
insl
arpl
xchg
jmp
sahf
cmpsl
jg
lret
cmp
inc
repz
pop
jl
and
mov
push
jb
shrb
shrb
xlat
add
insl
push
lret
mov
cld
and
xchg
sbb
lret
incb
add
mov
mov
inc
pop
jle
and
add
push
and
mov
adc
lea
in
adc
idivb
in
or
lcall
ljmp
popa
mov
loopne
sti
lcall
xor
jnp
xlat
daa
add
pop
mov
jmp
fadds
arpl
test
lea
sub
dec
add
xchg
rcll
mov
cmpsl
and
out
test
roll
cmpb
mov
or
sbb
add
xor
out
rcr
cmp
pop
pop
les
mov
pop
not
inc
add
ret
mov
push
in
push
lods
fildl
push
mov
jge
loop
add
imul
rcrl
pop
push
xor
pop
out
in
dec
sbb
cli
popf
jp
rolb
sub
adc
aam
fstl
dec
pop
movsl
xchg
loope
into
jl
les
cmp
jne
mov
into
fwait
inc
repz
stc
ret
jnp
mov
pop
add
sbb
inc
pop
push
mov
sbb
icebp
ror
std
xlat
add
mov
sbb
test
pop
cmpsb
repz
push
aaa
sbb
sub
mov
sub
xor
pop
lret
push
fucom
cmp
mulb
outsl
repz
mov
lea
cld
movsl
sti
enter
adc
popa
dec
adcb
loope
nop
loopne
adc
mov
shr
push
mov
stos
pop
shll
out
orb
mov
jmp
mov
adc
mov
scas
pop
in
das
or
xor
pusha
dec
cmp
movsb
mov
xchg
lea
sub
dec
pop
testl
pop
jno
call
fs
or
xor
mov
and
xor
mov
repz
or
jo
aas
lods
push
xchg
scas
leave
adc
inc
fisubs
lret
hlt
fcomps
sbb
inc
mov
jl
subb
call
gs
testb
xor
and
popf
push
push
mov
adc
test
into
clc
dec
rcl
push
mov
mov
in
enter
pop
sub
sub
sub
push
sub
loopne
jmp
mov
out
mov
pop
or
and
movsl
jecxz
ds
push
sub
test
enter
lahf
add
and
xchg
loope
xchg
and
js
lods
xchg
inc
jo
ror
pop
js
nop
mov
pop
dec
sub
insl
jp
ficompl
movsb
inc
adc
xor
or
dec
adc
pop
push
lds
out
mov
sbb
sub
pusha
cmpsl
insl
jne
movb
pushf
nop
inc
mov
repz
or
insl
int3
or
not
jg
xchg
loop
xchg
ja
cmpsb
orb
inc
cmpl
loopne
mov
sub
call
and
fstl
or
jb
pop
dec
test
add
xchg
mov
mov
fsubs
loop
jne
lahf
push
stc
pop
lret
xlat
sahf
fdivl
adc
call
pop
mov
daa
cmpb
sub
mov
add
push
insb
mov
mov
cwtl
cmp
dec
stos
cmp
xchg
popa
push
jl
add
out
jmp
leave
cmp
cmp
sub
enter
leave
cld
xor
cs
push
mov
jp
cs
inc
mulb
cmp
dec
inc
cmp
jp
sub
sbbb
mov
loopne
push
or
rclb
sbb
pop
xor
jmp
xchg
into
mov
or
cmp
sbb
sub
sub
pop
hlt
push
loop
mov
and
icebp
add
xor
sub
mov
cltd
or
push
ret
add
jmp
cmpsl
inc
not
and
pop
push
mov
call
pop
mov
test
aaa
shll
jmp
das
out
pusha
ds
in
daa
jmp
lods
dec
roll
jbe
or
cltd
sbb
dec
xor
cmp
dec
mov
test
cwtl
fs
scas
out
mov
jb
lahf
mov
jbe
rolb
rcrb
sarb
insl
sbb
sub
push
flds
add
mov
mov
mov
loope
xor
in
jge
shrb
sub
iret
lret
daa
ret
mov
jnp
pusha
adcb
and
pop
dec
push
mov
add
popa
loopne
addb
sbb
orl
xor
sub
jle
cld
cltd
jmp
dec
add
jmp
loop
push
insl
xchg
and
pop
pop
jbe
xchg
push
add
jo
or
fbld
jle
loop
push
dec
xchg
dec
test
scas
stc
sub
rep
push
outsl
sub
lods
jmp
lret
icebp
push
mov
insb
in
mov
scas
pop
pop
push
pop
adc
mov
mov
mov
mov
decl
or
cmc
push
add
and
push
jmp
pop
xchg
mov
mov
sbb
jecxz
aad
or
push
movsb
je
cmpsb
inc
rcrl
sti
jnp
adc
mov
adc
sbb
or
add
test
in
stc
call
or
jno
imulb
jmp
dec
fisttpll
push
adc
dec
cld
add
xchg
lcall
push
and
fsubrp
xchg
pusha
xchg
and
sub
lahf
jno
loop
mov
inc
pop
push
mov
and
jmp
gs
addl
jb
push
repnz
or
aad
xor
pusha
pop
mov
pop
pop
xchg
pop
jmp
leave
std
mov
mov
pop
call
mov
mov
push
push
mov
mov
pop
mov
push
mov
lret
push
mov
cltd
into
cltd
push
in
out
repnz
nop
dec
in
mov
inc
in
out
lock
lret
mov
in
dec
daa
test
cltd
adc
mov
xchg
add
lock
push
stc
jle
mov
mov
mov
aad
adc
push
push
cld
xor
stos
xor
pusha
sbb
adc
inc
jg
or
enter
inc
jne
out
pusha
add
in
add
cmc
add
inc
mov
movl
push
imul
push
mov
inc
mov
mov
cmp
inc
pop
xor
cmp
or
in
xor
mov
add
push
decb
addr16
add
push
cmp
ret
ds
in
push
adc
or
mov
jns
outsl
push
shlb
inc
add
mov
iret
push
out
mov
aad
call
add
cwtl
rcll
inc
lahf
push
mov
lret
sbb
fxch
shll
mov
pop
xchg
jo
lea
pop
aam
pop
jmp
cli
std
cli
andl
andl
push
imul
pop
out
sbbl
cmc
and
leave
pop
push
roll
xor
push
lock
js
add
dec
sub
mov
mov
imul
mul
jno
xlat
sub
cmp
cmpxchg
or
push
and
icebp
mov
aam
pop
mov
mov
mov
pop
cmc
in
das
rcrl
pop
scas
xchg
ret
lods
dec
sub
pop
adcb
in
pop
arpl
sub
scas
cwtl
cmp
xchg
pop
xor
cmp
push
mov
and
jae
jge
lds
maskmovq
testl
push
push
shll
iret
cmp
cmpsb
mov
jb
fcomip
xor
test
pop
pusha
mov
cltd
arpl
outsl
and
dec
xchg
xchg
push
out
or
and
xor
jmp
subb
sarl
push
push
data16
and
push
pop
pop
pop
jmp
and
push
inc
ja
rcrl
or
adc
cltd
repz
call
xorl
inc
dec
push
pop
scas
mov
xor
sub
lods
dec
add
loopne
pop
pop
jg
in
xchg
mov
xchg
fldl
mov
daa
in
push
or
jge
fs
push
add
jg
es
push
movsb
les
fsubp
inc
push
pop
lods
and
cmp
pop
add
cmp
out
int
stc
sahf
outsb
xor
pop
sub
dec
xor
dec
push
shll
pop
aaa
xor
call
jg
jge
dec
mov
pop
add
mov
mov
mov
fists
scas
les
cmp
ja
in
push
or
dec
icebp
add
push
int3
aam
out
mov
jl
mov
fisttps
cmp
pop
mov
adcb
incb
out
and
jle
jo
sbb
sbb
sti
push
popf
inc
out
mov
jns
cmp
andl
pop
pop
ret
sar
jmp
psadbw
fs
mov
mov
adc
mov
and
mov
dec
cmp
dec
sti
push
mov
lock
aam
pushf
shll
mov
push
mov
push
clc
testl
out
hlt
xor
sub
or
push
or
adc
adc
push
hlt
push
push
pop
xchg
icebp
call
pop
int
xchg
add
andb
sub
push
divb
mov
sub
push
leave
pop
cmp
arpl
popa
orl
cmp
sbb
lock
sbb
jae
nop
in
push
inc
mov
mov
cld
adc
mov
or
jg
xchg
xchg
ret
and
push
adc
dec
mov
mov
sub
clc
and
push
cmp
or
cmpsl
push
in
dec
add
shll
or
das
jge
pop
dec
or
mov
xor
leave
in
cmp
dec
cmpsb
loopne
lock
jmp
bound
push
out
xchg
dec
and
mov
popa
push
outsb
or
movsb
xchg
mov
insl
and
mov
fsts
pushf
test
neg
push
mov
inc
xchg
loop
out
cwtl
jecxz
push
xor
inc
adc
into
cmpb
mov
cmp
outsb
nop
xchg
gs
sbb
cs
iret
xor
pop
dec
leave
rolb
stc
test
cmp
lods
or
mov
ljmp
mov
mov
push
stos
shlb
mov
push
das
scas
inc
add
xchg
mov
aam
jmp
xchg
adc
ret
xor
fistl
pusha
popa
push
sbb
rcrl
inc
inc
add
add
push
into
daa
xlat
cmp
rcll
outsl
loopne
add
int3
push
lock
addb
inc
cmpsb
fwait
jnp
xchg
cmp
fwait
xor
stc
add
push
pushl
pop
test
jp
mov
dec
js
les
leave
and
pop
outsb
push
stc
sti
test
sub
aad
shlb
into
mov
int
int
mov
rclb
ljmp
push
shl
mov
push
xchg
adc
jmp
jo
mov
setge
jl
cmp
addb
stc
cmpsl
adcb
sub
xchg
or
roll
imul
subl
sbb
add
outsl
js
xlat
out
cwtl
fadd
inc
cmpsl
xor
sub
mov
dec
pop
or
lea
inc
outsb
sub
add
popa
shrl
sbb
sahf
shlb
add
out
pusha
pusha
xchg
or
stc
push
pop
dec
dec
out
adc
push
sub
mov
pop
pop
test
sarb
jno
sbb
lds
pop
pop
and
or
mov
lahf
out
mulb
les
xor
outsb
mov
sbb
sub
inc
adc
push
push
pop
jb
mov
outsb
mov
into
incl
sarb
adc
or
jb
pop
pop
cmp
pop
mov
sub
jae,pn
in
jnp
or
adc
cmp
adc
stos
mov
or
jnp
cmp
adc
xchg
hlt
pop
inc
jmp
jge
and
xchg
popa
ret
lods
add
mov
sub
pop
xor
lret
lret
dec
cmp
leave
xchg
sti
xchg
cmp
mov
mov
nop
sub
xchg
test
xor
mulps
or
shr
adc
adc
xor
dec
stos
dec
sbb
imul
out
out
fwait
popw
add
lcall
inc
lret
and
pop
dec
and
ss
stos
pop
jmp
pop
mov
addr16
popf
and
ror
pop
add
and
inc
adc
mov
or
xchg
mov
xor
push
lret
cmpsl
out
jge
or
outsl
test
fs
sub
test
xchg
push
adc
lods
std
pop
out
push
inc
adc
cmp
sub
notl
mov
outsl
insl
mov
add
sbb
cmp
lret
dec
cmpsl
sarb
add
arpl
bound
das
or
inc
mov
push
push
lea
movsb
out
xor
adc
jne
cmp
pop
inc
mov
mov
into
jnp
jmp
addl
in
xor
add
cmp
add
mov
sbbb
pop
pop
pop
xor
lahf
sarl
lret
insb
cld
je
pop
shrb
add
es
add
sub
sti
sub
incb
dec
negb
xchg
pop
push
jmp
cmp
and
jle
outsb
imul
imul
sub
jmp
mov
mov
dec
xor
cmp
iret
cmpb
fistpll
inc
dec
pop
jns
scas
repnz
mov
stc
adc
sbb
dec
and
mov
pop
into
cmp
lock
pop
push
imul
jno
sub
xor
aas
cmp
dec
add
cld
insl
mov
push
add
dec
sub
xchg
push
or
xor
subl
adc
ljmp
sub
cmpb
fmul
inc
and
jb
xor
mov
dec
int3
dec
push
les
push
add
dec
stc
push
cmp
xchg
or
xlat
inc
push
ds
dec
aaa
and
loop
jmp
ljmp
out
rcrb
adc
mov
pop
pop
or
int3
or
out
pop
and
and
arpl
sahf
mov
xchg
adc
sbb
rclb
out
test
adc
push
data16
jle
jae
xchg
add
pop
repz
mov
mov
inc
dec
sub
test
dec
in
adc
divb
outsl
sbb
and
das
or
push
push
add
fnstenv
cli
lock
clc
mov
cmp
adc
scas
xlat
mov
out
pop
or
adc
cmpsb
fcoml
dec
jb
mov
insl
filds
pop
in
cmc
dec
out
jb
add
movsb
push
cmp
sbb
dec
je
bound
ja
mov
lahf
xchg
pusha
pop
inc
xor
cmp
add
or
das
jbe
add
pusha
xor
or
sub
xor
or
push
dec
pop
jo
pop
jp
jl
add
sub
mov
or
jbe
and
jbe
push
mov
jmp
popf
cmc
sbb
adc
repz
popa
stos
fs
push
adc
xchg
jns
loop
mov
cmp
je
add
push
arpl
xor
incb
orb
adc
repnz
dec
inc
in
les
sub
mov
arpl
cmp
adc
loopne
loop
pusha
fisubrs
and
xor
popf
popf
repnz
int3
gs
pop
popf
add
mov
xchg
je
push
xchg
cmp
and
and
imul
outsl
lcall
cmpsl
fdivrs
aaa
ja
mov
mov
or
push
pop
bound
std
inc
xlat
imul
leave
pop
sti
inc
push
sahf
mov
int3
mov
dec
aaa
push
mov
fildll
push
pop
or
jne
push
sbb
test
mov
out
add
adc
sub
sub
jmp
adcl
adc
push
xor
mov
sub
negl
jno
cltd
sbb
clc
out
xor
mov
ja
and
mov
xchg
insl
sbb
xor
out
mov
adc
lahf
pop
mov
icebp
add
je
push
adcb
outsl
mov
add
es
xchg
jmp
je
or
shlb
sub
out
jno
inc
mov
sub
cli
add
dec
adc
sub
inc
insb
push
lss
rorl
xlat
pusha
gs
movd
mov
push
jb
push
sub
sbb
add
mov
gs
leave
push
xor
sbb
dec
push
push
shrb
sub
ja
std
xor
push
jmp
sbb
xchg
inc
and
bound
je
lods
dec
test
cli
xor
push
push
pop
movsl
lret
jbe
xor
adc
cmp
jmp
aad
icebp
dec
sbb
xchg
jmp
ljmp
and
adc
xor
stos
fs
in
sub
es
push
xor
frstor
sub
mov
rorb
int
xor
or
neg
add
aad
ja
pop
je
add
decl
or
enter
and
cmpsl
pop
pop
out
outsl
and
sub
adc
sbb
mov
mov
out
pop
addb
jmp
lcall
jle
es
lcall
pop
nop
adc
call
lret
in
loope
push
xor
call
jbe
ds
push
inc
bt
add
popw
xor
js
shrl
pop
pop
int
data16
fs
orb
xor
inc
sub
ret
xlat
sbb
xor
push
push
adc
push
xchg
xchg
dec
out
pop
adc
inc
mov
das
add
push
push
dec
call
mov
negl
inc
lret
and
jmp
stos
push
push
xor
arpl
nop
xor
push
test
popa
or
mov
dec
pop
dec
or
movsb
hlt
icebp
daa
mov
and
add
mov
pusha
jbe
and
xchg
push
push
push
fs
pop
int3
pop
popa
mov
sbbb
sub
enter
sahf
mov
test
popa
clc
scas
mov
mov
dec
jmp
sub
lock
subl
inc
jo
sbb
sbb
gs
movsb
movsb
push
xchg
rclb
sbb
or
add
lret
pop
mov
push
mov
daa
pop
jns
loope
push
movsb
test
or
icebp
or
jmp
add
xchg
jmp
jae
cmp
push
push
stos
and
fisttpll
lret
test
rclb
testl
push
inc
xor
mov
dec
push
pop
js
call
xchg
dec
loopne
imul
ret
or
dec
and
and
incl
push
mov
popf
in
shl
sti
fistps
repnz
je
movsb
icebp
xchg
inc
aas
das
rorl
or
insl
cmc
ja
sti
xor
xor
sbb
xlat
cwtl
dec
push
dec
test
ljmp
inc
pushf
lods
cmpsl
mov
mov
jecxz
ljmp
sub
cltd
cmpsl
ja
movsb
mov
clc
adc
lcall
shlb
in
jo
and
mov
mov
sbb
out
push
jae
cmp
pop
dec
push
push
xor
cmc
fsubrs
test
xor
fbstp
or
dec
push
inc
jp
loopne
jp
jmp
cmpl
lods
push
mov
pop
mov
add
ljmp
inc
dec
and
imul
sub
mov
mov
mov
repz
jmp
or
aad
mov
add
dec
push
cmp
lahf
subb
or
add
sub
stc
fimuls
inc
insl
mov
push
dec
jne
sbb
leave
je
or
shl
xor
push
cld
jp
inc
and
jmp
out
test
sbb
jae
dec
insb
jp
fs
aas
dec
movsb
adcb
in
push
andb
inc
andl
test
addr16
adc
divb
cwtl
cmp
pop
mov
adc
and
xor
insb
andl
pop
icebp
arpl
ds
add
imul
je
mov
dec
add
inc
xor
pop
push
rcll
push
cmpb
push
and
test
sbb
push
fsts
jle
fstpt
fcomps
cmp
ds
pop
push
imul
cmp
cmpsb
push
je
leave
add
rorl
inc
mov
xchg
out
dec
lret
subl
cmovb
dec
inc
repz
hlt
leave
pop
push
dec
jne
leave
and
daa
ja
fdivs
pop
sub
pop
cwtl
mov
lods
jb
lods
adc
jecxz,pn
push
aaa
adc
xchg
and
jo
xor
ds
pop
jo
sbb
hlt
call
hlt
ret
mov
xor
inc
clc
cs
inc
xchg
inc
xor
out
enter
pusha
lods
out
jecxz
add
xor
shr
pop
pop
push
inc
xchg
mov
shr
push
inc
pop
mov
cmp
mov
xor
fwait
hlt
mov
orl
fcoms
fisttps
outsl
sub
sub
ret
fldcw
ficoms
xchg
enter
mov
sbb
sbb
into
xor
nop
pop
add
jmp
add
lcall
inc
mov
lahf
lock
mov
jnp
and
cmpl
aaa
sub
and
shl
mov
add
add
clc
cmpb
pusha
lods
mov
outsb
mov
mov
push
push
ljmp
adc
jmp
pop
mov
pop
push
in
mov
jecxz
dec
mov
popa
pop
sbb
not
mov
pop
xor
jmp
mov
mov
xor
sbb
jo
adc
ret
lea
jle
push
adcb
add
mov
arpl
fcoms
out
fincstp
std
add
enter
xchg
mov
adc
mov
mov
and
push
pop
cmp
fmulp
push
cmpl
stc
movsl
and
pop
std
pushf
adc
dec
or
cmp
pop
neg
pop
add
sbb
mov
sbb
or
add
imul
inc
jle
nopl
pop
mov
jmp
lahf
call
sub
sub
adc
stos
push
insb
inc
xchg
int
pop
dec
jle
add
clc
or
dec
outsb
faddl
stc
add
cli
fs
stos
nop
dec
lods
orb
lods
inc
xchg
jg
iret
adc
xchg
ficompl
pop
xchg
mov
or
inc
mov
mov
pop
push
add
and
jae
sub
xchg
pop
add
adc
addr16
push
mov
dec
es
adc
and
pop
rclb
imulb
enter
mov
es
add
fisttpll
sbb
or
sub
pusha
inc
jae
out
pop
push
pop
xor
cltd
fmuls
sbb
loop
sub
and
rcrb
add
jns
push
or
dec
mov
push
cld
test
dec
out
outsb
aas
lcall
mov
ss
dec
cld
sahf
es
inc
das
and
lock
mov
dec
test
stos
dec
fstpl
push
pushf
pop
xchg
mov
sub
fadd
pusha
repnz
and
mov
jbe
or
ret
pop
mov
xchg
push
xor
inc
add
das
test
mov
fiadds
sub
lock
add
ficoms
ja
sub
mov
mov
pop
fsubrl
scas
loopne
pop
outsb
les
add
cli
mov
add
test
push
cltd
pop
incl
dec
push
mov
mov
jmp
push
fbld
xchg
inc
imul
add
push
mov
cmp
push
add
jmp
fs
or
movsb
cltd
pop
stos
movl
popf
jbe
daa
lahf
das
push
and
push
pop
xor
xor
inc
out
mov
test
xor
imul
xor
pop
pop
stc
push
xchg
or
popf
aam
in
add
adc
xchg
add
or
ror
push
fbld
repnz
jmp
sub
and
push
in
adc
cmpsl
lock
mov
pushf
jl
push
add
add
addb
add
dec
jmp
inc
cmp
inc
mov
jmp
ja
repnz
xor
inc
cmpsb
or
add
push
mov
and
add
push
sub
xor
mov
inc
es
push
addb
mov
xor
js
or
adc
or
dec
add
jmp
or
hlt
xchg
inc
jae
andb
mov
shlb
out
cli
push
sub
dec
ret
pop
jl
mov
sbb
push
xadd
arpl
scas
mov
dec
or
inc
sbb
dec
test
test
loope
push
lret
xchg
push
jge
xchg
shl
lods
xchg
in
or
sbb
rcl
lock
out
pop
or
loopne
mov
mov
sbb
repz
dec
aam
mov
cli
daa
or
sub
lock
fneni(8087
jno
ja
pop
and
mov
in
push
nop
push
pop
push
and
lea
pushf
push
mov
shll
mov
test
movsb
out
subb
sub
movl
das
push
or
cwtl
nop
or
push
or
scas
mov
push
or
iret
rol
sbb
dec
mov
push
jmp
mov
dec
push
mov
jb
jnp
das
and
jp
mov
addr16
std
inc
push
mov
push
mov
test
dec
popa
adc
jmp
std
adc
ret
mov
mov
stos
jo
movswl
xchg
pop
test
imul
imul
movsb
jmp
hlt
aad
cld
sub
dec
shrl
xchg
mov
pop
mov
data16
or
xor
test
loop
sbb
cmp
rclb
out
movsl
cmc
pusha
xor
push
mov
or
insb
and
repnz
push
sub
nop
mov
shl
mov
ret
loope
lret
insb
mov
scas
xchg
out
clc
out
cwtl
push
sub
int3
sti
add
push
sub
push
sub
inc
jmp
std
orl
mov
jmp
inc
jb
loope
cmp
fs
mov
add
jno
mov
sub
ss
rcll
mov
icebp
pushl
jo
or
clc
insb
add
jmp
adc
idivb
add
jae
add
scas
shrb
mov
jp
adc
xchg
push
stos
movsb
andb
pop
inc
sbb
sbb
sbb
nop
cmp
pop
xchg
icebp
sub
push
aaa
pop
scas
xor
hlt
insb
les
mov
xchg
dec
add
cld
xor
add
ret
add
rcll
jae
xor
adc
fldt
add
sub
lret
mov
push
push
lcall
lds
dec
xchg
push
rcrl
ret
mov
fs
mov
aam
inc
pop
push
lret
stc
dec
mov
rol
xor
or
dec
lock
sbb
out
mull
sub
orb
ret
mov
pop
lods
jmp
jae
cmp
cltd
mov
dec
add
and
enter
inc
shr
inc
xchg
inc
lods
pushf
push
cmc
aaa
mov
aam
fbld
ret
adc
fwait
in
ret
gs
dec
mov
inc
iret
push
pop
jmp
pop
and
inc
sbb
jae
push
lret
scas
in
cmpsl
pop
jns
cmp
xchg
cmpsl
dec
inc
xor
sub
sbb
inc
sub
nop
sub
call
fistps
jnp
ljmp
es
xor
push
gs
push
adc
fcoml
into
popa
loope
es
aas
ret
ficoml
cwtl
ds
dec
adc
cmp
jmp
add
inc
jno
test
mov
inc
pop
ds
pop
movsl
movl
dec
inc
imul
xor
add
neg
jmp
das
and
inc
mov
jo
fisubrl
fadd
cmp
adc
cmp
stos
or
stos
ljmp
sbb
test
xchg
mov
das
jmp
rolb
pop
xchg
xchg
int
outsl
adc
mov
clc
lods
xchg
lahf
mov
inc
aad
jle
ss
pop
lock
pop
add
and
push
sub
xor
xchg
cs
aas
arpl
push
jb
shll
or
dec
lcall
dec
pop
pop
cwtl
inc
dec
sbb
and
in
repz
ljmp
lret
sti
and
scas
adc
sub
xor
or
pop
popf
rcl
icebp
nop
pop
mov
in
lcall
xor
shl
subl
cmp
adc
scas
mov
pusha
loopne
jmp
loope
jg
imul
out
xchg
bound
in
cmp
mov
pop
inc
popa
add
inc
jl
jmp
pushl
das
testb
cmp
push
pop
pop
pop
in
mov
lods
shr
push
sub
rcll
inc
popf
push
xchg
push
xorl
lret
and
sar
ret
jmp
dec
ljmp
push
push
jmp
movl
in
std
in
jmp
aam
sti
pop
gs
adc
popf
out
inc
pop
movb
test
or
cmp
cmpb
in
inc
or
cmp
inc
not
lock
push
adc
push
mov
mov
inc
int3
jge
xor
push
in
les
inc
leave
iret
xchg
fs
pop
xchg
pop
cli
sub
testb
in
mov
icebp
dec
shr
jb
rcrb
addr16
test
daa
lods
inc
push
push
pop
jp
push
test
mov
pop
ds
dec
aas
jl
pop
xchg
dec
xor
adc
pop
inc
popf
pop
pop
and
mov
cs
roll
cmp
sub
pushf
mov
mov
hlt
lcall
movsl
pop
jne
adc
ret
sbb
mov
lret
fistpll
pop
cmpps
popf
and
and
xchg
cmc
jne
inc
stos
std
loop
push
test
dec
inc
fstl
or
push
shlb
movsl
jge
cmpsl
movsb
mov
dec
cmp
sub
pop
pop
inc
movsl
in
mov
ret
mov
call
cs
pusha
sub
ljmp
xor
loope
inc
popa
add
mov
mov
lods
jl
jbe
out
xchg
pushf
adc
fistps
pop
mov
fildll
cld
mov
test
outsl
cmpsb
cmpsb
adc
out
jno
aaa
cmpb
ljmp
cmp
rcrl
loope
neg
div
jnp
mov
ds
xlat
pushf
mov
rorl
xor
jecxz
mull
leave
xchg
or
pop
pop
push
cmpsl
jmp
lret
mov
es
xchg
add
insl
js
jge
adcl
aam
pop
and
or
subb
and
sub
es
jns
push
or
lea
test
fldcw
dec
xor
dec
or
adc
push
push
mov
sub
xor
out
sub
jnp
imul
and
and
cmp
les
nop
push
inc
aaa
mov
pushl
cmpsb
cmc
outsb
jmp
adc
pop
pushf
xchg
sub
call
jge
nop
xchg
jp
popf
add
dec
push
push
jb
push
sub
mov
add
or
push
rcrl
mov
nop
cmp
pop
adc
dec
daa
inc
scas
jae
adc
and
mov
loopne
lea
lret
push
mov
add
sbbl
lock
in
sub
inc
pop
xorl
jmp
sub
push
pop
das
lea
pop
cmp
mov
stos
shlb
jo
adc
arpl
cmp
call
stos
inc
sbb
pop
lahf
and
xor
push
and
or
ja
pop
call
mov
xchg
lods
mov
push
mov
jp
flds
ret
or
lret
or
aaa
out
xchg
roll
jmp
sarl
inc
je
jl
add
fsubrs
lcall
sti
cmp
push
sub
sub
repnz
mov
xor
jl
outsl
clc
mov
icebp
cmp
lea
or
xor
cmp
sti
lret
mov
jecxz
popa
pop
ss
cmpsl
loop
sbb
sbb
xchg
outsl
and
sbb
out
movsb
mov
mov
xor
in
daa
cmpsb
icebp
dec
dec
xorb
inc
dec
add
pop
or
in
mov
sbbl
add
fcomps
std
xchg
adc
sub
push
jae
xor
mov
push
mov
mov
sbb
fmul
and
aas
add
ror
pusha
or
inc
nop
ljmp
xchg
data16
push
add
jnp
pop
mov
fsubr
mov
int3
pop
std
call
lods
and
add
add
pop
inc
or
fidivl
or
jmp
jl
mov
jmp
repz
lcall
add
xchg
movsl
mov
roll
flds
js
xchg
push
addr16
dec
mov
and
sub
hlt
aad
mov
fs
xchg
inc
jnp
cmp
sub
cmp
jno
clc
and
adc
inc
das
ret
test
pop
and
add
adc
lret
mov
outsl
sub
test
int3
xchg
push
adc
shlb
fs
pop
andb
add
out
rolb
pop
sub
or
loop
xor
or
push
and
push
pop
push
jle
inc
jmp
xchg
sub
loop
insb
cld
sarl
outsb
dec
adc
pop
out
jmp
push
sbb
or
push
push
add
loopne
in
mov
mov
std
les
cmp
pop
jae
and
arpl
xor
not
inc
sbb
pop
int3
fadds
enter
loopne
call
emms
add
pushf
xchg
add
mov
adcb
out
or
pop
mov
sub
ds
add
sub
sub
and
mov
cltd
test
fmul
mov
cmp
push
sub
ljmp
xchg
shrb
imulb
sub
cmpsl
adc
fldl
sbb
das
fistps
sti
or
inc
or
or
sbb
mov
dec
pusha
int3
bndldx
push
ljmp
or
jecxz
mov
dec
jmp
in
and
jbe
add
cmp
xor
mov
and
inc
mov
push
cmp
add
sti
repz
mov
jecxz
push
std
pop
pushf
lds
loop
roll
imull
jp
loope
cmpsb
je
add
fnstcw
or
push
mov
or
lcall
mov
pop
ret
ret
xor
pushf
adc
sub
push
jmp
popf
hlt
lock
pop
popf
gs
das
movhpd
pop
popa
and
adc
movsl
imul
mov
push
xchg
arpl
add
out
movl
imul
shrb
push
cmpsl
adc
inc
in
add
mov
scas
cmp
fidivs
aam
sbb
shll
insb
jmp
das
sub
mov
mov
push
in
jno
sbb
ficomps
ret
add
xchg
push
dec
jle
xor
push
inc
dec
adcb
xor
inc
add
cltd
int
pop
test
add
mov
or
xchg
push
sub
in
pop
jb
orb
scas
sbb
pop
fisubl
pop
sub
push
mov
insb
rorl
loop
mov
jmp
leave
jnp
int
sub
int
jg
gs
xor
orl
iret
out
inc
das
bound
idivl
jle
sub
sub
dec
xor
pslld
out
pop
ljmp
add
xchg
jo
xor
mov
lahf
fidivs
mov
ljmp
add
out
cld
jmp
cmpb
jne
addl
and
jle
inc
jmp
fisubl
pop
sbb
cmc
add
mov
xchg
iret
mov
negl
bound
or
and
jae
or
pop
mov
xor
rclb
pop
push
dec
add
xor
mov
push
sub
adc
arpl
loope
out
push
aad
hlt
cmp
inc
push
fistpl
mov
mov
jmp
and
jne
add
in
mov
push
ss
xor
adc
or
mov
jmp
pop
loop
clc
roll
or
mov
and
pop
sub
inc
add
mov
adc
inc
popa
addb
adc
scas
push
loopne
lret
out
push
aad
sahf
xor
or
dec
sub
hlt
push
jnp
mov
xor
lcall
xchg
pop
aam
or
mov
lcall
mov
mov
jae
loopne
or
and
and
pop
dec
push
outsl
lods
and
pop
push
pop
out
cld
ljmp
jbe
loop
cmp
jne
xchg
dec
mov
cmp
xor
das
leave
mov
mul
and
xor
dec
out
pop
cmp
add
test
sbb
cmpsl
add
mov
stc
test
xchg
imul
mov
iret
xchg
jg
adc
xchg
dec
mov
ficoms
stos
enter
mov
fidivrs
inc
cmp
mov
nop
push
push
inc
std
and
mov
into
inc
add
xchg
xchg
inc
repnz
xchg
mov
gs
mov
or
push
jns
mov
rclb
fs
ss
mov
jmp
in
push
xchg
pop
push
jo
sbb
pop
xchg
fcoms
push
mov
sub
aaa
push
ja
adc
adc
or
and
pop
and
daa
sub
mov
popa
es
scas
scas
dec
sbb
sub
and
sbb
pop
jmp
cwtl
jp
sub
pop
mov
mov
cwtl
adcl
ljmp
mov
adc
sub
add
es
test
mov
paddd
fcmove
jmp
ljmp
mov
or
sub
bound
cmp
loopne
xor
xchg
add
pop
das
mov
mov
push
push
add
cmp
cmpsb
aaa
or
enter
mov
pop
push
or
dec
add
sub
jge
cld
mov
jmp
mov
and
js
sarl
cmp
add
jo
mov
cmpl
jnp
cmp
popa
rol
mov
fildll
popa
es
or
test
dec
xchg
iret
stos
push
inc
xchg
ds
xchg
jnp
lods
jb
dec
and
loopne
sub
mov
lahf
adc
test
out
jb
or
mov
stc
ret
frstor
call
not
ja
inc
outsl
jp
into
add
mov
inc
mov
sub
jg
adc
cld
out
add
sti
popa
enter
push
lcall
push
rcll
rorl
cmp
inc
fidivrs
pusha
int
and
add
push
jae
and
pop
dec
adc
mov
and
sti
sbb
jmp
ds
sbb
rclb
arpl
push
fbstp
sahf
verr
jnp
loop
jmp
mov
inc
push
add
cli
jle
xchg
out
imul
inc
pause
insb
ret
or
hlt
ljmp
test
mov
loope
jl
add
out
mov
jmp
inc
pop
mov
jecxz
stos
mov
popa
inc
xor
fcompl
inc
push
mul
mov
pop
sub
aad
fsincos
cmp
fildll
jmp
cmp
jnp
mov
inc
push
cltd
and
pop
cmpsb
push
push
mov
mov
mov
adc
das
push
push
repz
imul
or
xor
pop
xor
popa
jmp
icebp
imull
or
dec
shl
inc
xlat
nop
push
add
mov
push
mov
jl
pop
mov
jle
popa
mov
jge
sbb
in
sbb
popa
in
add
cwtl
fdivrp
xchg
sar
mov
pop
cli
fmuls
xor
pop
pop
stos
es
pop
aas
arpl
and
inc
mov
or
cmpsb
lock
cmp
dec
rcrl
shll
lods
sub
or
inc
lcall
or
pop
cmp
xchg
arpl
xchg
adcb
pop
or
adc
cld
out
dec
sarl
mov
push
mov
punpckhbw
aam
mov
lds
inc
sub
fcoms
data16
xchg
pushf
mov
dec
dec
pop
sti
pushf
incb
into
cmpsl
mov
jne
imul
sub
outsl
mov
std
ret
xor
xor
repz
outsb
stc
or
mov
sub
or
adc
test
orl
jle
aaa
int3
and
jbe
daa
or
and
sub
xchg
nop
jo
repz
movsb
dec
jmp
mov
data16
jmp
dec
pop
mov
sub
lret
dec
outsl
lret
jo
adc
sbb
jb
sub
mov
sub
sbbb
sub
notb
les
cmc
or
clc
mov
mov
mov
jbe
push
dec
mov
or
les
out
out
jecxz
daa
add
insb
mov
lcall
mov
daa
and
jecxz
push
int
inc
hlt
leave
push
xchg
hlt
mov
lods
push
push
lods
adc
aaa
adc
incl
jmp
adc
sub
cmpsb
or
cmpsb
add
aam
add
insl
js
add
in
cs
add
mov
mulb
cmp
fs
push
add
in
dec
lret
imul
dec
pop
inc
int
dec
adcb
sub
jmp
mov
fsubs
or
clc
or
fs
in
jmp
and
icebp
das
sbb
mov
jnp
in
xor
mov
and
fldenv
sbb
jmp
xchg
notb
mov
xchg
movsb
cs
cmpb
dec
push
loopne
inc
add
and
shrl
jmp
add
lcall
add
dec
add
push
or
cltd
jle
rolb
ds
data16
int3
sahf
loope
pop
adc
lock
sub
cwtl
lods
or
adc
daa
ljmp
push
sub
push
or
or
dec
inc
add
es
loop
out
out
out
pop
dec
popa
xchg
pop
pop
xchg
inc
pop
add
loop
pop
mov
jmp
push
push
push
sub
in
jb
or
push
sub
push
subl
inc
sbbb
pop
fs
or
cld
arpl
or
jmp
icebp
in
push
mov
test
sub
inc
enter
inc
divl
push
rorl
xor
divl
mov
shl
push
add
xlat
push
shlb
push
dec
cmp
pop
repz
adc
pushf
jp
cmp
jmp
or
or
mov
out
cmp
mov
das
pop
std
enter
dec
inc
into
jl
sbb
or
add
pop
push
push
pop
mov
xchg
aad
insl
popf
push
decb
pushf
dec
sub
leave
aam
idivl
mov
fadds
lock
cs
jnp
add
or
jmp
pop
clc
out
fadds
mov
mov
xchg
sub
imul
frstor
daa
jge
lods
das
inc
cmp
fwait
xchg
inc
inc
xchg
jae
addb
popf
ret
jmp
enter
cmp
pop
push
in
testb
dec
xor
xor
aaa
sub
push
add
jg
adcb
mov
pop
mov
shr
or
sub
aam
int3
out
stc
jo
mov
imul
mov
mov
push
lods
cmp
xchg
jno
movl
add
adc
cmp
xorb
mov
sbb
push
inc
js
xchg
mov
inc
not
push
call
syscall
or
shl
loopne
fsubl
xchg
stc
and
inc
lods
mov
push
hlt
mov
loop
mov
ds
mov
jmp
repz
sbb
icebp
mov
sahf
lret
xor
bound
js
sbb
inc
andb
mov
das
aad
call
mov
fs
into
push
imul
hlt
or
push
cmp
add
push
mov
dec
xchg
sbb
push
jo
jle
xor
or
sbb
shl
and
sub
push
xor
sar
mov
pop
pop
cmpb
sub
je
or
and
xor
cs
enter
pop
xchg
cltd
sti
or
dec
mov
negb
inc
push
popf
cmp
ret
adc
sub
or
data16
jl
push
sub
xchg
std
in
push
sbb
push
mov
loopne
imulb
arpl
daa
jmp
gs
jmp
dec
outsl
dec
mov
enter
xor
add
cs
lret
push
jmp
pop
jmp
or
rcll
mov
pop
mov
and
imul
in
in
sbb
jge
inc
xchg
lods
mov
pop
add
test
sti
mov
pop
and
addr16
push
pusha
dec
movsl
jmp
cmp
es
add
mov
dec
xchg
cmc
and
sbb
cmp
ret
pop
icebp
std
jns
or
dec
ffree
cmp
mov
cmp
das
stos
ror
xchg
leave
ss
push
xchg
repnz
dec
pop
es
ds
cmp
jmp
lds
jbe
xor
push
test
neg
icebp
push
outsb
cmp
mov
bound
popa
inc
sarb
xchg
icebp
test
or
dec
dec
cli
mov
or
mov
adc
sbb
dec
pushf
fimuls
leave
pop
jb
and
mov
outsb
aas
movsl
std
ljmp
push
aam
shll
mov
add
mov
add
sbb
cs
push
repz
xchg
add
pop
bound
les
push
rorb
jae
pop
and
stos
test
adc
gs
std
lret
aas
leave
incl
mov
adc
push
pop
cli
pop
pop
shl
xchg
xor
add
clc
mov
inc
sub
push
les
dec
add
int
hlt
xlat
mov
pop
add
pop
push
mov
and
repz
jb
push
clc
negb
cmp
sahf
daa
out
cwtl
jl
pushf
cmpb
add
xor
jmp
fwait
orl
sbb
cmp
das
cmp
das
sbb
fidivrl
les
mov
dec
add
xor
jbe
cmpsl
push
push
mov
repnz
pop
sub
mov
ja
mov
fisubl
shrb
arpl
xchg
pop
iret
orb
outsb
push
cld
mov
ljmp
and
lcall
and
or
shlb
add
mov
test
mov
xchg
add
mov
inc
xchg
push
jg
sub
pushf
rcrb
pop
push
adcl
xchg
pop
fisttpl
pop
arpl
cmp
je
inc
jbe
or
andb
psubsw
inc
repnz
inc
fs
xor
insl
dec
sub
incb
or
pop
test
out
cmp
fdivrs
inc
xchg
frstor
add
push
dec
add
jne
insl
inc
xor
mov
inc
dec
mulb
cmp
stos
sbb
and
xor
xchg
roll
push
test
sbb
push
movsb
sbb
pop
xchg
scas
loop
xchg
mov
rcr
jns
adc
lea
jo
or
push
push
lods
jbe
or
lods
jmp
cmp
or
dec
sub
ficompl
jne
fsubs
jne
adc
in
roll
ds
push
not
or
daa
test
in
sarb
loopne
lea
jae
aaa
sub
lock
neg
xlat
fiaddl
jbe
je
out
lret
mov
cld
jp
popf
inc
popa
out
xchg
mov
dec
icebp
sarl
lods
push
shr
call
in
jo
lahf
fiadds
cmp
insb
adc
sub
inc
shrl
sub
mov
roll
push
dec
jns
cmp
sbb
jmp
pop
xchg
or
pop
xchg
or
pop
pop
in
aad
add
add
add
fs
xchg
inc
mov
cmpsl
popf
imul
fucomp
push
ds
jnp
push
ds
push
add
mov
std
in
fwait
xor
jmp
pop
dec
lea
push
cli
pop
inc
in
mov
test
xchg
cmp
push
addl
sub
mov
or
pop
pop
mov
lret
dec
mov
cmp
inc
push
adcl
cld
mov
dec
inc
repnz
mov
jmp
addb
push
or
out
leave
pop
jle
and
inc
and
outsb
push
push
pop
aam
and
dec
pop
push
pop
rdtsc
lahf
rcrb
movsb
jle
or
jae
jbe
and
and
lock
pop
inc
inc
repnz
icebp
dec
jnp,pt
xor
sub
dec
scas
sbb
mov
inc
jne
aad
lock
add
inc
cmc
dec
nop
data16
gs
outsl
dec
sahf
or
cmp
ljmp
js
and
and
or
decb
je
mov
mov
dec
les
outsl
int3
dec
test
adc
xor
insl
mov
ja
cmp
push
push
stos
mov
sbb
pop
cmp
and
pusha
jge
xchg
cmp
dec
cmp
adc
sub
xchg
test
int
or
ret
lock
lar
jmp
shr
add
xor
sub
push
push
mov
pop
mov
xchg
push
mov
neg
popf
out
pop
imul
and
and
fwait
inc
push
mov
outsb
sub
and
imul
in
ja
ljmp
dec
mov
push
or
push
and
imul
inc
jne
jae
cmp
jmp
sbb
jb
addr16
pop
sub
jge
mov
push
push
xchg
jo
popf
jle
insb
clc
aas
cmpb
add
sbb
inc
insl
pop
xchg
jmp
shrb
push
cld
add
pop
andb
mov
sub
pop
mov
jle
jae
mov
fdivl
mov
mov
jmp
mov
inc
cmpsb
xor
xchg
adc
pusha
mov
cmc
pop
sub
aas
push
dec
lret
stos
sarb
int3
cmc
xor
pop
jmp
test
pop
cltd
xchg
pusha
add
cmp
jb
test
cmp
out
cltd
or
push
pop
cs
and
cli
cmp
nop
das
add
ja
les
push
cld
or
cmpsl
xor
mov
pop
lds
ljmp
xchg
daa
xor
outsl
cli
imull
xor
loop
adc
sbb
push
fmulp
sbb
adc
xor
and
mov
push
mov
popf
and
mov
mov
aas
out
roll
fisubs
add
pop
push
mov
jp
cs
fxch
test
adc
mov
inc
mov
into
icebp
inc
inc
adcl
arpl
dec
sub
and
repz
inc
test
xchg
test
mov
inc
mov
mov
inc
rolb
push
lret
or
inc
pop
icebp
loopne
lods
jo
xchg
cmc
xor
sub
jne
fwait
xor
mov
in
int
mov
jp
or
das
andb
out
sub
outsb
lock
iret
data16
jge
and
mov
insb
pusha
cmp
ret
jo
cmp
pop
dec
loop
or
outsb
pop
pushf
dec
push
dec
cmc
xor
push
pop
and
and
or
scas
inc
jl
sub
xor
lcall
add
xor
jg
jno
push
call
push
push
movsb
cmp
inc
rol
jp
psubb
cmp
repnz
mov
push
loopne
mov
mov
or
scas
mov
pop
fs
mov
ja
into
sbb
lds
xlat
scas
inc
insl
out
dec
pop
ret
in
lret
add
push
cld
dec
inc
movsl
jo
cmp
andl
jmp
inc
or
hlt
cmpsl
cmp
dec
add
sbb
shlb
push
mov
sub
jo
adc
or
push
add
add
pop
out
mov
dec
stc
add
add
cli
orb
test
push
scas
insb
inc
mov
hlt
daa
push
iret
dec
adc
and
dec
cmp
das
inc
dec
rclb
stos
xchg
and
aaa
mov
test
sbb
cld
mov
ss
mov
xorl
mov
jne
bnd
movsb
pop
xchg
adc
mov
add
lcall
sub
imul
scas
pop
in
add
or
push
loope
xor
xchg
or
jmp
int
lods
sbb
inc
xchg
jb
addr16
xlat
subl
xor
imul
pop
je
jmp
ret
inc
cwtl
mov
xor
push
nop
and
jne
push
pop
push
out
and
out
jbe
pop
test
icebp
jge
fwait
mov
add
shlb
pusha
jmp
std
not
push
ljmp
addb
sub
jnp
repnz
ret
pop
dec
jno
xchg
and
pop
dec
mov
jmp
mov
xchg
mov
push
mov
pop
cs
inc
cmp
sbbl
or
or
add
and
or
test
push
jae
jmp
dec
inc
push
jns
xor
xor
jne
jno
sub
cmpsb
lods
sub
js
push
pushf
xor
cmp
pusha
sbbl
in
inc
movsb
pop
and
inc
add
shl
lahf
dec
imul
pop
or
dec
rorl
mov
xchg
adc
scas
js
jmp
jp
test
outsl
mov
jge
pushf
and
pop
pop
push
mov
and
pop
insb
sarl
adc
adc
arpl
mov
and
leave
or
xchg
or
push
and
xchg
clc
add
mov
mov
adc
adc
push
movsb
cmpsl
jmp
rorb
pop
nop
cld
dec
mov
das
fmuls
push
cmp
mull
xor
jmp
cmp
in
push
jbe
push
mov
mov
mov
andps
dec
pop
adc
sub
ja
bound
jge
in
leave
popf
subl
shrb
cmp
mov
mov
mov
in
mov
pop
mov
jmp
ret
jg
adc
add
xor
mov
pop
dec
pop
test
adc
mov
decl
sub
fs
or
jne
inc
lock
fucom
mov
rcll
jb
cmp
fwait
movsl
and
jg
fsubp
mov
dec
mov
xchg
enter
es
aas
mov
push
pop
test
mov
push
lahf
sbbl
cs
mov
xchg
stos
ljmp
cwtl
out
out
pop
les
dec
pop
bound
and
or
out
jne
adc
cld
lahf
test
and
sub
in
sub
xor
jae
dec
shl
shrl
adc
cmp
mov
jp
or
or
dec
add
add
call
sub
shll
push
mov
in
cmp
sub
setl
or
xor
xor
jge
jecxz
outsb
stos
mov
cmpsl
aad
and
pop
dec
daa
xor
movsb
adc
cmp
js
inc
and
mov
addr16
xchg
adc
mov
or
push
push
in
inc
nop
js
pop
xor
adc
add
into
clc
add
shrb
push
aas
js
shlb
cmpsl
or
xchg
mov
jmp
pop
cld
xlat
ret
jmp
inc
push
add
push
fbstp
jp
add
fcomi
lret
add
cmp
cmp
push
add
pop
dec
neg
aaa
push
push
fwait
sbb
add
fnsave
mov
xchg
inc
sti
test
or
pop
ret
js
mov
scas
and
sahf
les
mov
xchg
mov
pop
jmp
mul
mov
test
daa
insl
dec
cmp
adc
mov
pusha
bswap
push
nop
pusha
das
cmpsl
push
jno
mov
and
mov
std
push
popf
repnz
pop
fadds
push
bnd
xor
xchg
adc
imul
cmc
hlt
push
sub
out
push
adc
notl
dec
or
sti
lahf
mov
mull
hlt
xchg
jo
mov
in
pop
addl
sbb
and
jno
mov
adc
sub
or
gs
inc
and
jmp
cmc
sarl
push
mull
push
jno
lods
push
cmp
rcll
dec
out
in
cs
adc
adc
push
pop
mov
pop
jl
cld
insl
dec
xchg
xor
or
ja
daa
jmp
xor
push
jmp
push
jg
cld
dec
lcall
or
inc
int3
sub
enter
stc
loope
jmp
in
add
dec
push
aaa
cmp
pusha
push
movsl
sub
lods
pusha
jns
inc
dec
inc
and
adc
idivl
ss
pop
ror
mov
fnsave
fucomp
xor
xchg
add
or
sub
aad
sysret
daa
push
mov
jae
subl
jmp
pusha
or
xor
mov
adc
call
pop
test
pop
mov
xchg
cmp
jnp
pop
stos
and
dec
xchg
pop
xchg
scas
sbbl
imul
jno
outsl
xlat
sub
mov
lods
pop
mov
jo
imul
pop
push
mov
mov
je
or
ret
repnz
loop
dec
pusha
inc
push
adc
rcrl
jbe
or
mov
and
aas
incl
add
rcr
mov
adc
mov
jle
push
jne
inc
dec
out
cli
test
xchg
jg
repnz
jmp
push
sub
and
push
pop
icebp
das
cmp
inc
ret
cmp
inc
xor
pop
xchg
mov
sub
mov
shl
repnz
add
pop
push
add
push
cs
cwtl
pop
or
test
xchg
dec
scas
into
pop
dec
mov
push
cwtl
inc
mov
sbb
fwait
hlt
je
add
cmp
push
pop
push
adc
inc
scas
mov
xchg
xor
jle
push
cs
ret
jb
add
aad
pop
mov
sub
sbb
cs
mov
jle,pn
pop
nop
ret
repnz
or
pusha
mov
cvtpi2ps
or
sub
fmuls
cmpl
jnp
sub
fs
pusha
lcall
inc
push
or
shl
and
pop
les
imul
mov
add
jp
testl
mov
cmpb
sub
pop
fadds
iret
jb
and
jnp
or
stc
pop
movsl
adc
sbb
scas
sbb
insl
cmp
fimull
add
inc
sbb
fsubrp
sub
push
pop
adc
jbe
call
and
arpl
loop
pop
and
jmp
lret
inc
lods
push
in
adc
cmp
sarl
pop
pop
orb
add
out
pop
fdivrp
shufps
cwtl
or
cmpsl
rorb
popf
push
xchg
add
xor
jnp
mov
pop
stc
ja
mov
fdivrs
vmwrite
test
and
pop
scas
mov
push
jns
pop
scas
shrb
outsb
cmp
in
ds
jp
mov
shrb
adc
pop
imul
cwtl
in
xchg
push
repnz
dec
arpl
pop
dec
cmp
not
nop
hlt
or
jne
push
fsub
pop
sub
mov
pop
xor
mov
sub
add
pop
test
sahf
les
add
stos
xchg
adcl
or
stc
mov
jmp
out
xor
mov
cld
lock
aad
jb
std
ror
bound
jp
punpckhbw
or
dec
loop
aad
pop
or
cmp
mull
adc
mov
cld
cmpsb
inc
in
pop
pop
dec
inc
pop
xor
and
sub
imul
lahf
sub
leave
cmp
fcoms
push
decl
mov
push
aad
inc
addl
sti
add
inc
in
pop
or
lcall
mov
jo
mov
rcrl
out
pop
icebp
aaa
ds
or
fistpll
push
add
sbb
leave
mov
push
push
enter
mov
shlb
repz
aaa
sbb
test
add
aaa
add
push
outsb
add
jmp
pop
xor
pop
dec
add
cli
add
movsb
imul
mov
ret
jae
ja
fbld
add
jmp
fdivl
adc
loope
leave
lds
sub
or
jecxz
mov
mov
add
inc
xchg
data16
pop
neg
mov
js
xchg
inc
pop
xchg
pop
or
pop
imul
cmp
fmuls
cmpsb
add
out
rolb
int
loop
mov
or
inc
or
aam
xchg
fisttpl
clc
mov
add
jo
dec
jg
or
das
and
push
mov
add
dec
jnp
mov
xchg
xor
jmp
jle
gs
mov
ret
mov
or
sbb
icebp
and
xor
mov
ret
jle
dec
inc
mov
mov
jns
hlt
mov
cs
repz
mov
fucomip
dec
pop
lret
pop
mov
jle
das
jp
cmc
cmp
push
sub
aaa
daa
lock
imul
mov
mov
pop
incb
imul
adc
xchg
pusha
mov
lds
pop
clc
mov
push
into
jne
push
out
and
leave
dec
pop
sbb
mov
pop
push
ret
call
xchg
adc
jns
jge
stos
sbb
or
pop
into
not
cmovns
sti
shr
cmpsl
xchg
in
xor
dec
and
nop
rorb
inc
inc
add
orl
sub
cmp
cmovbe
jbe
lea
jmp
xlat
fcoms
xchg
pop
xor
scas
sahf
mov
inc
or
into
test
fildll
pop
test
mov
out
sar
dec
push
pop
call
imul
cs
js
adc
pop
cmp
movsb
sub
or
jne
dec
cs
out
filds
xor
cmpsl
movsl
daa
call
cmp
inc
push
xchg
addb
nop
inc
pop
pop
and
push
jmp
into
lock
mov
inc
fs
lock
cmp
test
enter
cwtl
and
mov
sub
and
mov
cmp
cmc
movb
xor
xor
cltd
pop
push
mov
sbb
xlat
push
call
push
andl
push
faddl
xlat
lret
or
mov
push
inc
dec
or
leave
je
or
mov
daa
pop
pop
inc
pop
push
jmp
mov
aam
es
mov
add
addr16
in
mov
jg
xchg
ljmp
jp
fyl2x
decb
stos
mov
inc
jmp
add
insb
pop
inc
jmp
adc
shr
and
lahf
adc
adc
pop
enter
stos
add
pop
add
pop
adc
mov
out
int3
inc
jmp
sub
notl
mov
inc
test
popa
lret
lret
sub
mov
ret
jo
popf
fadd
cmpl
mov
sbb
pop
mov
shrl
and
jae
arpl
fdivs
test
inc
add
and
stos
ret
loopne
xchg
ds
or
pop
mov
lahf
enter
out
dec
pop
and
enter
and
rcrl
jecxz
mov
sub
sar
push
xor
stos
adc
ljmp
xchg
or
roll
mov
aas
jmp
sbb
mov
dec
addb
push
and
out
jnp
daa
aam
pop
mov
std
jg
sti
pop
push
mov
push
or
loop
out
add
out
mov
mov
loop
adc
je
push
jmp
rol
jae
adc
adc
pop
and
push
jl
and
movsb
inc
mov
pop
fstpl
push
and
das
adc
mov
push
pop
xchg
mov
add
hlt
fcoms
add
adc
inc
pop
and
adc
jmp
mov
jne
mov
dec
fistpl
repz
stos
fnsave
jecxz
out
mov
leave
add
jge
adc
cli
jo
push
adc
leave
and
cs
pop
mov
test
movsl
fists
cmc
pushf
sub
mov
add
popa
cmpsl
insb
popa
fwait
in
add
sub
jno
outsb
push
xchg
fnstenv
sbb
shl
cmp
sbb
dec
xor
add
adc
jl
mov
and
cmp
dec
or
gs
pop
cli
mov
cwtl
addr16
xor
xchg
movsl
inc
mov
push
sub
mov
mov
fucomip
push
pushf
sbb
mov
loop
lods
push
mov
mov
add
pop
ljmp
jecxz
jo
addb
mov
nop
push
dec
cmp
shl
gs
negb
adc
sub
mov
rclb
lods
add
das
js
adc
mov
push
and
lcall
filds
or
int3
jbe
sub
mov
push
push
push
pop
lahf
daa
push
and
inc
icebp
cmpsl
sub
sub
add
aam
push
imull
fldenv
add
roll
push
cmp
jae
xchg
xchg
out
mov
adc
inc
call
dec
imul
sub
or
ja
push
ret
int3
leave
and
iret
test
pop
mov
leave
movl
sub
push
filds
or
xchg
dec
stos
adc
stc
jmp
pop
out
sbb
lret
inc
sub
add
jmp
mov
cmp
loope
outsb
rclb
pop
ret
cmpsl
cmpsb
leave
sub
fdivrl
subb
je
cli
adc
xor
xchg
orb
adc
pop
add
aad
dec
mov
or
jmp
fdivs
xorl
dec
sub
push
mov
cmpb
movsl
popf
ret
mov
into
hlt
xchg
push
cmpl
outsl
mov
repnz
cmc
cmp
fstp
xorb
xor
xchg
orb
std
mov
imul
rcll
jo
nop
or
mov
fidivrl
out
dec
add
sahf
mov
dec
push
xor
mov
pushf
mov
rcll
cmpl
mov
inc
iret
mov
cmp
mov
inc
sar
mov
push
xchg
jge
inc
test
je
add
out
add
jnp
jmp
fldcw
cmp
jl
xor
or
mov
cmp
jmp
jns
jo
lea
pop
leave
sbb
das
mov
mov
daa
into
and
out
js
sbb
dec
add
je
push
jmp
xor
fdiv
outsb
sub
lds
push
pop
cli
cwtl
aam
mov
push
cmp
pushf
or
cmp
add
pop
pushw
bound
jmp
out
cmp
dec
push
and
stos
sub
jns
icebp
mov
xor
adc
sbb
adc
lahf
inc
or
xor
arpl
arpl
push
inc
xor
dec
xor
jmp
mov
or
popa
inc
mov
ss
and
mov
lret
mov
cltd
decb
dec
subl
jmp
cmp
jne
pop
mov
adc
inc
or
lret
mov
push
movsb
pop
jmp
stc
cli
mov
test
mov
test
jmp
and
inc
inc
sub
push
dec
mov
or
adc
push
add
cmp
fs
sub
mov
out
mov
xor
mov
lcall
das
cmp
cwtl
ss
or
xchg
rdtsc
add
lds
test
clc
out
test
loopne
and
xchg
mov
je
cmc
adc
xor
xchg
jl
jno
stos
loopne
ljmp
cwtl
and
pusha
xchg
sub
jmp
negl
jp
inc
mov
sub
ljmp
rcrb
pop
cmp
or
lock
pop
lret
les
xor
das
clc
and
dec
push
sbb
inc
push
cmp
faddl
push
movsb
jnp
xchg
or
pop
lods
cli
xchg
scas
sub
add
mov
mull
jmp
jne
movsl
shl
adc
lods
adc
mov
nop
push
push
insb
and
out
jnp
pop
push
pop
jmp
sbb
fwait
dec
dec
out
add
jmp
ja
outsl
xchg
push
add
xor
rorb
mov
out
pop
dec
sub
jbe
mov
sub
xchg
out
mov
cmpb
fsubrp
push
add
cmp
icebp
pop
inc
mov
jp
adc
push
fimull
mov
fdivrl
jne
pop
or
sbb
inc
cs
test
jmp
mov
cld
adc
mov
jb
imul
add
jmp
pop
shlb
out
inc
cltd
mov
outsl
and
mov
pushl
ffree
daa
loop
imul
xor
cmp
test
div
push
orl
neg
add
fstpl
jnp
data16
hlt
or
add
jmp
dec
movsl
das
sub
mov
jb
cwtl
aad
inc
mov
aam
mov
mov
dec
pop
je
in
dec
scas
daa
or
fistpl
dec
call
or
pushf
pop
or
lock
es
push
xchg
xor
cmpsl
jne
xor
into
insb
aad
mov
dec
jecxz
out
sub
insb
mov
or
sbb
pop
lret
and
pop
idivl
mov
nop
adc
dec
dec
inc
lods
pop
xchg
jno
fsubl
lods
inc
cwtl
sub
or
adcl
loopne
js
sbb
pop
leave
xorl
inc
sbb
push
fisubrl
aas
movsl
pop
ja
loopne
pop
mov
add
inc
xor
into
imul
jnp
xor
dec
inc
cmp
test
loopne
xor
dec
sub
jo
arpl
ret
adc
push
push
in
dec
dec
push
pop
and
loopne
addr16
nop
add
lea
add
int3
bound
lahf
jle
and
mov
xor
scas
lret
mov
loope
sbb
in
add
sub
push
xchg
mov
jb
push
cs
dec
je
pop
outsb
call
aad
cli
lret
scas
sub
dec
inc
jnp
jge
inc
cmp
dec
jo
sarl
xchg
pop
xchg
fdivs
jo
xchg
fiadds
ljmp
pop
sub
addps
ljmp
push
adc
jo
add
adc
shll
stc
out
icebp
jmp
jae
lods
sub
movsl
aaa
pop
cli
mov
dec
jmp
push
cwtl
dec
cmp
dec
leave
add
mull
jne
adc
adc
cmp
rcrl
popf
shr
inc
mov
push
lcall
subb
inc
jae
mov
jmp
push
fst
in
push
mov
xchg
in
mov
cmp
ljmp
cmpsb
add
mov
push
add
sbbb
adc
cmp
xchg
cld
push
fdivrs
lea
add
outsb
jp
mov
sbb
mov
add
push
jge
repz
adc
push
add
sub
jmp
sti
cmpsl
dec
psrlw
push
cmpl
xor
test
sbb
xchg
inc
pusha
mov
push
or
adc
pop
add
jae
pop
imulb
mov
mov
std
and
leave
pop
movsl
jecxz,pn
mov
je
xchg
ljmp
sbb
enter
in
add
and
sub
das
pop
and
add
in
repz
jmp
in
adc
lds
lods
inc
mov
mov
jl
or
jae
cltd
int3
lods
je
mov
scas
rolb
push
sbbb
cmc
push
push
jno
add
int
sbb
adcb
aad
sub
out
push
mov
hlt
jge
mov
repz
mov
lahf
cmp
and
add
aam
lret
pop
call
dec
jle
adc
cmp
lods
add
std
cmpsb
mov
cmp
or
xchg
xchg
imul
test
out
loopne
fmuls
xor
jmp
subl
pusha
fldcw
pop
aas
dec
int
test
add
push
dec
mov
inc
out
icebp
cli
inc
mov
xor
xchg
sbb
cmp
andl
cmp
insb
add
add
leave
ds
sub
ret
js
sbb
mov
addr16
or
sub
subl
xor
push
cmp
jo
pop
lock
xchg
mov
or
leave
std
add
mov
roll
scas
inc
add
in
sbb
loop
inc
push
inc
mov
out
adc
lock
mov
sbb
mov
data16
sbb
xchg
push
addb
or
push
mov
push
rcll
std
inc
lods
in
inc
pop
bound
out
rolb
push
mov
or
push
jge
adc
or
pop
lods
sub
and
fsubs
push
mov
jmp
stos
imul
jns
call
into
sub
xchg
out
jno
jnp
ds
insl
mov
or
into
dec
das
add
mov
and
cmp
test
in
daa
int3
and
jo
mov
pop
pop
lret
cld
stos
sarb
sub
jnp
xchg
jp
mov
outsl
orb
sti
ftst
or
cmp
arpl
sbb
je
jmp
pop
mov
sub
add
stc
es
add
cmpsb
cmp
sbb
fistps
jg
sub
adc
sbb
adc
addr16
jns
pop
scas
dec
cld
aad
in
mov
adc
jno
jge
xchg
popa
push
cmp
fimuls
add
cmp
pop
test
xor
dec
lock
inc
hlt
lret
push
sti
inc
scas
jg
inc
push
into
pop
and
sbb
mov
test
sub
xor
ljmp
aad
shlb
and
xor
pop
lock
xchg
ret
push
pop
lret
mov
sub
push
cmp
nop
mov
daa
ficomps
mov
paddd
inc
stos
imul
pop
ds
mov
add
sub
lea
push
incl
or
in
sub
mov
mov
cli
gs
mov
adc
repnz
push
push
sub
cmp
rcl
xchg
push
add
dec
out
xor
push
out
jb
cli
mov
ficoms
imul
scas
repz
fists
pop
jb
sbb
and
adcb
xor
mov
lods
inc
pop
sub
enter
sbb
add
int
in
adc
or
imul
or
pop
and
sub
ret
stc
sub
aas
aad
mov
push
mov
mov
in
popa
mov
in
pop
mov
mov
dec
cmp
dec
or
roll
sub
sub
movsb
or
inc
pop
pop
sbb
push
mov
leave
or
push
pop
in
aas
xchg
jns
cmc
repnz
enter
cmpb
sbb
mov
ds
cmp
arpl
cmp
enter
jle
pop
xchg
shrl
sbb
pop
out
mov
into
pop
into
pushf
pop
lock
pop
xor
sti
testb
mov
push
out
add
mov
push
lret
add
or
jmp
sbb
scas
pop
adc
popa
es
popf
pop
adc
mov
pop
add
or
mov
sub
sub
push
adc
stc
dec
jmp
adc
inc
sbb
and
xchg
xchg
sarb
call
xchg
js,pn
or
dec
enter
mov
inc
out
lods
dec
jge
push
mov
adc
dec
loop
jp
ret
or
in
pusha
das
not
mov
adc
loopne
adc
stos
sbbb
insl
mov
push
add
out
js
add
fnstcw
cltd
pop
push
mov
adc
fisubrl
mov
mov
pop
lahf
and
fsubrs
or
data16
flds
movsb
push
add
jp
fcoml
adc
out
push
or
out
add
pop
mov
shl
jp
xor
push
mov
data16
movl
push
and
adc
lar
xor
je
push
lea
mov
jle
lds
mov
sub
ja
add
inc
cwtl
pop
add
inc
shr
mov
add
push
xor
or
dec
inc
dec
and
pop
push
testb
add
adc
cmc
pop
add
xlat
and
shrl
sbb
idiv
jge
or
lock
lods
push
mov
pop
inc
out
mov
dec
mov
iret
mov
lcall
lret
inc
adc
xor
push
sti
add
mov
cwtl
sbb
xchg
add
pop
sub
lock
ficompl
jmp
call
sarb
xor
add
and
push
push
mov
push
stos
and
mov
cmp
cs
cmp
push
imul
push
insl
or
pop
mov
lret
popa
pop
mov
mov
cmpsl
mov
xor
insl
and
std
sub
sub
pop
dec
lahf
xchg
adcb
mov
out
cmp
and
pop
jl
shl
sub
popf
jmp
mov
outsb
addb
or
daa
bound
cmpsl
push
sub
lahf
fisubs
mov
cmp
adc
sti
bound
sbb
pop
mov
adc
dec
and
and
inc
or
out
call
bsr
and
lds
cmp
dec
inc
or
dec
or
pop
mov
xchg
mov
xchg
mov
jbe
fistl
repnz
or
es
xor
or
out
mov
jmp
cmc
sub
xor
int3
test
das
sub
pop
mov
bound
div
popf
sbb
dec
pop
scas
movsb
mov
scas
dec
roll
pop
pop
cli
fs
add
dec
cld
xchg
push
lea
jns
pop
pop
sub
outsl
ret
out
ds
ljmp
popa
and
xlat
add
pshufw
fdivrl
fcoms
inc
gs
push
shlb
in
out
adc
outsl
add
fwait
mov
adc
inc
pop
leave
jg
cmp
js
xor
stc
dec
xor
out
loop
mov
jmp
jg
mov
xchg
data16
xor
inc
sbb
aad
scas
dec
jl
jp
imul
adc
or
sub
sbb
dec
xor
add
das
adc
inc
cwtl
insb
in
out
in
in
sub
insl
mov
ss
lods
mov
cmp
cli
sub
push
sbb
test
xor
pop
adc
sti
push
int
mov
push
mov
sub
aad
inc
insl
jmp
pop
push
mov
push
aad
fbld
add
mov
jmp
popa
sbb
nop
inc
add
jb
pushl
adc
xcrypt-ctr
cmpsl
sbb
dec
dec
xchg
pop
in
inc
pop
scas
push
jb
sbb
popf
adc
push
jae
or
xchg
pusha
frstor
pop
and
js
out
dec
dec
xchg
push
call
ret
sti
lods
adc
orb
inc
push
xchg
add
xor
daa
test
andl
outsb
xor
ret
pop
mov
mov
adc
movsb
in
or
inc
bound
pop
push
pop
cwtl
mov
pop
mov
push
xchg
outsl
inc
jmp
pop
inc
pusha
adcb
push
or
or
fucompp
popf
clc
push
dec
bound
fwait
or
out
pop
popa
cli
and
popf
xlat
movsb
and
sti
mov
scas
bound
pop
fs
inc
icebp
iret
scas
repnz
pop
aam
jns
push
ret
mov
fs
dec
push
dec
test
or
or
cld
xor
adcb
ret
into
cmp
cmp
loope
push
or
jle
jb
lds
adc
add
xor
adcb
clc
and
fxch
jbe
lods
xor
or
jl
xor
xchg
test
int3
ret
mov
xchg
clc
test
pop
cld
xor
aad
test
mov
xorps
push
stos
mov
sbb
cmp
lret
ljmp
pop
ffreep
mov
jmp
jmp
adc
cmp
pusha
push
mov
mov
pop
inc
ja
incl
pop
push
mov
ss
repz
mov
adc
or
sub
ja
sarb
enter
mov
mov
xlat
adc
test
or
inc
scas
inc
pop
add
pop
imull
mov
gs
xor
push
and
mov
in
lret
add
in
adcl
sub
sti
and
out
decb
inc
lods
pop
push
jnp
aam
cmp
add
push
pop
mov
repnz
push
adc
mov
jmp
cs
adc
push
dec
icebp
or
stos
andb
push
inc
xchg
push
sub
mov
cmp
mov
notb
imul
cmp
push
test
jle
pop
mov
or
mov
push
mov
imul
sub
mov
or
lret
sub
rcrl
in
iret
sbb
pop
pop
dec
or
aad
sub
and
inc
mov
data16
sarb
std
jl
or
adc
mov
pop
or
mov
hlt
insl
leave
popa
pop
dec
mov
js
dec
jno
loopne
push
or
call
sbb
mov
jnp
xor
and
jp
xchg
pop
cmpsl
adc
adc
sub
iret
or
js
add
sbb
dec
jle
pop
negb
lock
sahf
push
xchg
pop
or
mov
ss
mov
arpl
jmp
insb
xor
or
mov
pusha
decl
popf
fnstcw
jmp
leave
dec
push
xchg
xchg
jo
adc
ret
dec
cwtl
mov
push
xor
adc
or
push
inc
jns
mov
sbb
mov
js
push
push
pop
icebp
inc
add
mov
cwtl
mov
or
and
or
daa
jmp
mov
mov
inc
cld
call
iret
test
mov
lock
std
inc
or
sbb
dec
or
pop
fisubrs
add
gs
sub
cmp
or
sbb
mov
xchg
jmp
repnz
adc
loop
das
movsl
add
addb
adc
inc
xor
push
xor
and
add
ret
push
addr16
xchg
sbb
jns
xor
xor
loopne
add
xor
dec
jno
cltd
push
mov
add
std
inc
cmp
dec
adc
pop
pop
jmp
aam
ljmp
addl
scas
xor
cli
popa
loope
push
pop
clc
call
sbb
movsb
xor
add
push
mov
jns
add
push
push
test
jbe
test
ss
insb
out
mov
sub
lea
jmp
dec
mov
int3
ret
cmp
sbb
inc
test
and
fiadds
push
cmp
or
sub
rcll
and
push
adc
dec
sub
loope
daa
sub
cmpsb
or
stc
out
loop
pusha
out
and
cmpsb
shrl
mov
sub
ja
add
pop
mov
jmp
je
adc
xchg
or
ret
push
mov
movsl
in
xor
les
pushf
out
adc
push
pop
popa
mov
mov
dec
jge
adc
adc
lea
mov
not
or
outsl
loop
test
xchg
lret
outsb
adc
mov
jmp
movl
movsl
iret
clc
loope
cmp
cmp
push
dec
add
aas
shl
mov
adc
shrl
bound
xchg
sub
jl
subb
sub
cmc
loopne
aas
xor
ja
sub
push
or
frstor
jns
insl
jmp
add
fcoms
mov
push
out
scas
jp
push
test
stos
loopne
jmp
push
jbe
les
incb
pop
scas
mov
repz
or
cmp
test
loop
xchg
sbb
dec
xor
xchg
jmp
pop
mov
shrl
mov
out
movl
jnp
jnp
push
push
stos
bound
push
pop
add
sub
jo
xor
jmp
js
mov
mov
pop
hlt
test
jg
xor
imul
dec
mov
repnz
sbb
cmp
sub
lds
jmp
sub
add
add
pop
push
xlat
mov
push
jg
push
js
fisubrl
push
mov
mov
ss
scas
fiadds
jl
outsl
cs
jmp
test
push
xor
xor
add
lahf
mov
fstps
jl
or
xchg
out
sub
cli
add
sub
add
mov
out
push
xchg
xor
ja
lret
daa
add
cmp
push
loop
filds
push
out
out
imul
pop
and
lods
pop
cli
mov
jmp
mov
and
and
xor
ret
adc
sahf
jl
and
xor
dec
xchg
movsb
inc
or
xor
scas
mov
dec
or
les
mov
jae
jge
neg
dec
jb
mov
lds
push
iret
movsb
in
mov
int
scas
negb
cmc
push
or
xor
lods
pushf
hlt
test
jmp
stos
sub
les
adc
stos
cmp
arpl
lds
rorb
inc
loopne
cmp
je
dec
fadd
adc
ja
out
push
loope
aas
bnd
stos
repnz
data16
daa
jmp
lahf
dec
inc
mov
pushf
add
mov
xor
out
and
pop
inc
scas
shl
movq
pop
in
pop
mov
inc
xchg
inc
shll
cmpsl
and
xchg
je
mov
adc
mov
testl
and
and
xorb
aas
push
adc
mov
imul
ljmp
nop
dec
dec
inc
nop
popa
or
cli
std
adc
pop
cwtl
dec
xchg
xchg
inc
mov
enter
hlt
stos
xchg
pop
shlb
xchg
fstpt
mov
xchg
push
push
daa
dec
je
scas
sub
pop
dec
xchg
sub
push
pushf
sbb
jg
xchg
lcall
pop
dec
sub
xor
hlt
xor
std
pop
mov
dec
xorb
sti
les
in
push
stc
cmp
lods
pop
out
inc
mov
pusha
and
add
roll
xor
popa
cltd
je
repz
xor
dec
sbb
add
test
or
les
shll
insl
aam
push
lea
xchg
inc
cmpb
xchg
or
or
xchg
orl
push
rcl
xchg
dec
ret
int
xchg
xor
dec
or
inc
push
flds
and
lods
mov
sub
pop
sbb
jle
aas
addb
jns
pop
and
jmp
mov
cli
scas
pusha
mov
jl
dec
xor
xchg
loop
sbb
aas
cwtl
stc
mov
shlb
push
mov
mov
xor
push
insb
and
popa
and
scas
xlat
shll
xor
push
pop
push
loope
sarb
and
adc
jo
aas
aaa
pop
push
clc
mov
gs
in
mov
cmc
add
xor
or
sbb
mov
sub
out
sub
fisubrs
mov
outsl
mov
sbb
xchg
add
xor
push
and
add
or
jns
push
mov
push
fdivl
fimuls
push
push
lret
clc
dec
adc
ret
pop
mov
push
push
insb
lret
shl
adcb
sub
nop
push
into
add
inc
xchg
or
adc
dec
fwait
jmp
int3
mov
inc
push
push
rcrb
fisttps
inc
adc
mov
imul
icebp
jmp
cli
push
adc
mov
sub
sub
inc
xor
lret
xor
ret
cmpsl
ds
jl
mov
dec
mov
bound
adc
cmc
aad
data16
adc
shll
adc
pop
pop
mov
pop
sub
mov
dec
sub
inc
or
ljmp
je
dec
pop
sub
xchg
or
or
mov
jecxz
and
jl
loope
cli
sub
hlt
add
outsb
push
jge
inc
push
iret
or
in
cmp
mov
leave
mov
xor
stc
clc
inc
neg
ret
sbb
data16
stos
dec
cwtl
or
mov
and
mov
nop
fwait
or
add
mov
xor
pop
rolb
andl
cmc
incb
sbb
jle
pop
cmp
sahf
mov
pop
stc
dec
push
mov
add
pop
cmp
push
test
arpl
push
clc
and
test
pop
std
leave
and
add
std
mov
dec
mov
mov
popf
dec
pop
aam
int
sub
xor
nop
icebp
xor
mov
add
mov
jmp
inc
aad
xchg
stos
adc
jl
es
add
or
sti
jb
dec
cmp
push
push
sbb
pop
shlb
dec
xchg
mov
and
xchg
pop
push
jnp
xor
fwait
adc
inc
inc
and
mov
insb
orb
xor
push
add
xor
mov
mov
mov
pop
and
jge
fsubp
push
pop
test
push
in
shll
stc
aas
repnz
les
inc
mov
aad
mov
mov
stos
push
daa
push
dec
cmpsb
arpl
push
aam
sub
and
mov
jne
call
sti
pop
jge
insl
std
test
jg
scas
in
cmp
push
ds
push
imul
es
fistl
mov
xchg
jmp
sub
jg
adc
das
rcrl
xor
xchg
add
loope
lcall
pop
nop
fs
add
mov
sub
add
pop
pop
pop
push
fsubs
out
pop
ss
nop
sbbb
sbb
imul
mov
in
gs
xor
ja
cld
jb
test
mov
sub
addr16
push
mov
add
or
fdivp
add
pop
rolb
inc
jnp
lahf
xchg
pop
in
loop
sti
cmp
pop
or
add
adc
pop
mov
lahf
jno
shlb
jmp
pop
faddl
pop
adc
lahf
cwtl
outsb
or
dec
xchg
cmp
or
bound
mov
add
int
add
xor
je
sbb
jae
sbb
mov
gs
add
push
mov
xlat
dec
scas
add
stc
and
xor
adc
pop
xor
ffree
push
lock
add
les
mov
shrb
pop
scas
or
xchg
outsb
sbbl
mov
push
xchg
add
orl
jmp
push
out
test
loopne
movsl
dec
xchg
mov
scas
ja
sbb
lods
xor
enter
sbbb
lock
xchg
iret
fsts
outsb
adc
xchg
mov
xor
jne
sub
scas
push
push
shl
and
xchg
ljmp
mov
hlt
jl
sbbl
inc
fldl
scas
insb
or
add
jnp
jg
rcrb
jmp
lea
lock
ficompl
scas
mov
push
pop
mov
out
mov
insb
and
ds
cs
push
jecxz
test
and
push
xor
xor
xor
pop
push
popa
push
cmc
inc
test
dec
pop
sbb
test
mov
into
add
insl
xor
jle
scas
std
and
pop
or
inc
lock
roll
stos
testb
sti
lods
pop
movsl
mov
aas
lret
pop
pop
mov
push
mov
mov
int3
sub
inc
sbb
test
lods
das
lds
sbb
js
orb
push
lahf
jmp
mov
sub
push
mov
filds
int3
or
rol
mov
mov
je
adc
loop
stc
cmpsl
pop
in
and
push
cmp
jae
pop
push
push
push
sub
push
pusha
fistpl
pop
add
pop
mov
mov
ljmp
sbb
lea
xlat
inc
mov
cs
jb
push
inc
stos
aam
lods
cld
js
mov
jge
mov
lods
nop
or
jmp
mov
jb
orl
stos
ret
push
xor
jae
xchg
cwtl
sbb
sub
pusha
push
repz
std
xorb
loop
mov
jns
lret
mul
bnd
pop
push
ljmp
push
mov
cmp
mov
repnz
cmp
push
or
xor
ficoml
imul
xor
adc
insb
ljmp
enter
mov
dec
stc
dec
cmc
or
add
dec
push
or
ret
add
repnz
push
in
test
mov
jecxz
bound
cld
dec
cmc
imul
push
gs
not
push
pushf
add
cmc
jmp
jbe
mov
stos
adc
decl
aas
int3
das
clc
jmp
push
mov
pop
cmp
jecxz
ljmp
fstpt
adc
jmp
inc
push
mov
xchg
push
pop
xchg
rol
mov
mov
jge
in
and
repz
lock
mov
push
push
adc
lock
lods
sbb
cld
mov
iret
mov
pop
and
leave
add
inc
js
xchg
test
imul
sbb
out
or
sbb
push
pushf
jmp
es
cmp
cmc
in
or
xadd
mov
push
and
call
xchg
xor
pop
shlb
jo
jb
sbbl
push
stc
xor
mov
mov
xor
mov
mov
inc
in
je
xor
jmp
lret
cmp
and
je
addr16
pop
cli
cmp
cs
xchg
test
cmp
inc
jne
or
sbb
roll
in
adc
addr16
xchg
repnz
xor
dec
mov
pusha
mov
add
out
or
enter
pcmpeqb
pop
shll
and
fdivrl
lahf
out
mov
and
or
sub
int3
mov
jbe
mov
mov
jecxz
mov
call
insl
sbb
sub
pop
mov
sti
add
xchg
fs
inc
cmc
fmuls
in
scas
rolb
xlat
or
dec
arpl
pop
dec
xor
add
inc
push
in
xor
dec
ljmp
pop
fisubl
xchg
lock
adc
loopne
push
mov
imul
jb
sbb
mov
cmp
push
into
adc
dec
add
iret
cmp
in
in
repnz
clc
jmp
cmp
popf
lret
add
jnp
xor
or
divl
add
aas
icebp
fstpt
push
sub
dec
add
cmp
sub
loopne
push
imul
sbb
inc
jmp
push
and
orl
aad
push
push
push
push
jmp
pop
inc
push
mov
or
inc
dec
adc
sbb
or
fmul
xchg
or
xor
inc
cmpb
das
dec
xor
fsubrl
mov
fcoml
shr
fiadds
push
das
hlt
add
push
bound
fildl
addr16
and
ret
mov
adc
mov
or
pop
cmpsl
dec
es
sbb
pop
mov
jl
std
lds
stos
adc
pusha
psubsw
inc
popl
or
ds
xchg
loope
add
clc
imul
and
out
sarb
lock
cmpsb
mov
mov
test
push
pop
aad
inc
mov
adc
add
in
mov
mov
adc
test
cmp
addl
sub
xor
pop
pop
shrl
jle
outsl
repnz
jbe
push
pop
adc
dec
ret
jmp
mov
jg
stos
jmp
jmp
mov
jae
push
iret
mov
ficompl
and
mov
mov
sbb
push
inc
pop
mov
push
pushf
daa
cs
xchg
mov
mov
out
adc
cld
or
or
iret
movaps
clc
inc
cmpsl
jns
push
add
jmp
mov
mov
js
xor
stc
mov
out
movsb
lahf
dec
mov
imul
and
adc
jmp
mov
adc
fisttps
xchg
inc
lock
jmp
stc
dec
mov
mov
mov
mov
xchg
rcrb
xor
or
pop
call
ret
pop
bound
push
movsl
inc
mov
push
repnz
jge
xlat
and
add
cwtl
js
add
push
call
add
out
mov
mov
push
fsts
add
adc
andl
loopne
call
dec
lcall
push
pop
jmp
mov
fnstcw
add
inc
mov
sti
scas
loopne
in
push
jb
xor
mov
and
aam
insb
push
je
mov
sbb
jno
add
xchg
add
adc
insb
or
push
loop
ret
inc
add
movsl
mov
and
das
jae
and
mov
pop
dec
and
out
push
dec
pop
inc
mov
rcrl
jb
adc
out
xor
jo
push
das
mov
jge
push
push
call
or
stos
into
in
shrb
xor
push
nop
fiadds
sahf
xor
ja
adc
testl
add
add
sbb
jmp
xlat
rcll
mov
dec
cmpsb
lcall
ss
popa
sbb
fwait
ret
cmp
add
jmp
pop
xor
pop
push
fists
dec
pop
jmp
stos
icebp
cmp
push
push
mov
dec
rorl
cmp
test
mov
dec
scas
sub
or
es
icebp
fs
jmp
push
adc
out
das
fistl
scas
dec
clc
rorb
xchg
mov
fdivl
mov
mov
push
repz
les
cmpsb
data16
mov
jnp
sub
dec
icebp
insl
jle
adc
test
fidivl
mov
mov
aaa
fs
movsb
add
and
imul
mov
roll
insl
cmp
addr16
jnp
int3
push
adc
xor
repnz
and
push
loopne
jmp
sarl
pop
xor
addr16
subl
es
loopne
and
and
pop
les
pop
shr
xorb
into
rcrb
gs
jmp
xchg
push
stos
or
cmp
sub
push
push
daa
mov
pop
mov
sub
shrb
dec
lock
or
in
sub
in
mov
or
and
pop
xor
jo
or
push
lret
sub
fwait
leave
or
inc
lcall
jp
into
or
sbb
adc
mov
loop
aad
sbb
les
mov
or
lret
jl
cmc
in
mov
add
add
adc
push
dec
cmpsb
adc
cmp
rorl
ret
or
test
js
sub
lds
and
popw
add
add
out
bound
mov
adc
dec
inc
xor
mov
lret
bound
ret
pop
dec
sbb
mov
mov
xor
xlat
gs
mov
and
push
mov
or
inc
and
and
lods
pop
in
fsubl
cld
sub
jmp
dec
pop
dec
push
dec
mov
jmp
fsubrp
cld
jne
ds
in
roll
dec
aad
scas
fs
add
jmp
mov
ja
push
shr
fists
mov
or
out
fs
stos
popf
jle
mov
stos
inc
popa
push
dec
test
adc
jp
cli
push
in
icebp
sahf
js
push
push
mov
pop
out
outsb
mov
sti
inc
rcrb
mov
shlb
mov
jns
jo
pop
mov
jl
mov
lods
test
iret
pop
dec
insl
loopne
mov
ja
add
xchg
xchg
fisttpl
fwait
jb
out
adc
dec
mov
pop
mov
adc
jge
pop
fs
sub
sub
roll
sbb
sub
xor
out
mov
out
or
mov
or
out
or
repnz
enter
cld
out
subl
add
lret
or
or
repz
adc
add
test
call
imul
push
pop
jl
mov
add
pop
push
push
scas
iret
xchg
ret
xor
and
and
test
mov
jmp
push
pop
mov
icebp
in
cmp
subb
pop
inc
dec
mov
ljmp
push
dec
cmp
lcall
lods
mov
sarl
add
mov
cmc
xchg
inc
imul
mov
add
xchg
mov
pusha
test
or
jmp
mov
pop
stos
sar
roll
cli
shrb
adc
andb
sbb
pushf
or
adc
mov
fcoms
pusha
in
ret
cmpsl
adc
add
fdivr
shll
popf
xlat
sbb
lahf
in
ret
or
sub
push
cld
leave
mov
cli
fwait
pusha
jp
push
push
mov
repnz
sub
pop
jbe
outsl
leave
adc
cmp
push
stos
sub
mov
mov
mov
push
mov
roll
adc
dec
mov
add
or
pop
inc
femms
addr16
fs
aas
nop
or
iret
stos
aam
scas
lods
push
in
xor
rorl
and
add
dec
inc
xchg
xor
lahf
arpl
fnstsw
in
xchg
mov
xchg
loop
or
pop
push
mov
push
fsub
add
cmc
insl
js
jbe
hlt
push
adc
xor
jl
jle
gs
cltd
mov
inc
xchg
loope
xor
popf
sbb
add
jae
je
or
push
push
add
ja
sahf
mov
or
mov
inc
imul
mov
xchg
jno
les
push
jmp
jnp
mov
jmp
cs
jne
imul
mov
pusha
lret
dec
dec
add
sti
sbb
jmp
or
sub
pop
lods
mov
adc
ja
mov
sub
push
or
dec
or
xchg
inc
push
pop
inc
shr
mov
scas
sbb
repnz
movsl
push
or
push
inc
jae
add
mov
cmp
cli
jecxz
sbb
or
dec
and
inc
dec
add
es
pop
xor
adc
add
clc
aam
cli
lds
fstpl
sub
cmpsb
sub
outsl
popa
and
out
sub
shlb
sub
sub
iret
test
scas
out
dec
pusha
aas
or
xor
and
or
or
pop
mov
and
pop
shlb
add
enter
repnz
test
xchg
ficomps
and
pop
push
pop
jmp
scas
inc
mov
stc
add
jae
push
cli
and
ret
jl
inc
lahf
adc
dec
sub
aaa
add
or
lea
cmp
inc
decb
cli
inc
mov
adc
jl
cmpsl
or
push
scas
sub
cs
pusha
pushw
popf
sahf
lods
popf
inc
sbb
dec
mov
sub
add
push
clc
iret
lret
ljmp
push
or
push
jge
nop
dec
and
fucompp
or
lods
test
adc
setns
pop
or
pop
xor
ja
leave
and
cmc
scas
or
cmpsl
lock
outsb
sahf
jns
add
adc
and
or
jb
cwtl
xor
jp
insb
and
out
mov
sub
dec
sub
rclb
cmp
cli
jl
sbb
add
data16
pop
daa
jae
jge
xor
xlat
test
sbb
data16
pop
test
sbb
add
mov
mov
das
add
or
or
movsl
mov
push
xchg
mov
add
dec
xchg
shlb
arpl
sbb
je
stc
xor
or
fwait
rcl
subl
imul
jbe
roll
xchg
and
cmp
test
push
rcrl
push
push
jo
mov
pop
jp
adc
icebp
push
ror
xchg
xchg
aam
mov
mov
push
pop
gs
add
lods
dec
pop
shlb
leave
fmull
or
ret
popa
out
mov
call
jmp
sub
mov
push
and
pop
add
push
xor
mov
xchg
psraw
add
out
imul
mov
jnp
pop
and
sahf
pop
push
rcrb
les
mov
dec
lock
mov
imul
mov
mov
ja
pop
jge
lock
adc
in
cmpsl
fmuls
fsts
xor
pop
cld
cmp
and
shl
push
sbb
push
das
scas
sub
add
jmp
scas
push
add
dec
in
cli
pop
inc
mov
shr
add
shlb
jmp
orl
push
adc
out
adc
sub
mov
pandn
jnp
negl
or
cmp
loope
adc
dec
pop
stc
pushf
adc
pop
mov
inc
pop
xchg
push
test
jo
mov
xchg
test
push
mov
sub
mov
fwait
ret
dec
jne
and
pusha
sbb
inc
sbb
fdivrs
pop
adc
xor
jg
cmp
lcall
insb
call
in
dec
dec
cltd
xor
jg
out
ret
inc
rcll
popl
mov
mov
lock
lds
fcoml
push
pop
push
mov
sub
lret
pop
mov
cmc
fsubrl
in
hlt
test
bound
ljmp
sti
mov
pop
decl
in
pop
and
lahf
cmp
pop
pushfw
mov
add
shr
out
rcl
imulb
cmp
xchg
es
aam
adc
je
insb
lock
and
mov
and
add
out
mov
lods
xchg
sub
sub
mov
sbbb
dec
dec
adc
fisttpll
pop
repnz
mov
lahf
lret
out
rclb
imul
pop
xchg
add
scas
push
hlt
imul
jmp
mov
jne
pslld
repnz
mov
scas
sbb
jp
sub
xchg
push
repz
mov
mov
jne
jno
outsb
ljmp
jge
and
xchg
pop
add
mov
xlat
jb
sbb
jp
adc
jb
push
bound
testb
add
inc
int
fs
shlb
mov
inc
js
out
cmp
sub
dec
mov
add
jmp
and
add
negb
dec
or
and
jnp
jp
stos
push
jne
xor
sbbb
jnp
mov
aam
jmp
dec
cs
add
loope
mov
cmpb
sbb
xchg
inc
xchg
clc
xor
jae
dec
xchg
shr
decb
mov
xchg
push
pop
in
jnp
addr16
and
mov
and
dec
shrb
mov
push
inc
sub
sub
clc
bnd
and
insb
jno
dec
pop
mov
out
into
das
cmp
mov
push
cs
pop
es
test
ret
push
pop
pop
dec
mov
stos
popl
inc
add
mov
mov
push
lahf
cli
mov
stc
stos
mov
pop
icebp
xchg
sub
xor
mov
pop
pop
sbb
dec
fistps
pop
lock
imul
cs
jmp
cmpb
push
sub
jmp
add
jns
pushf
push
xchg
sub
pop
out
cs
push
or
js
mov
rclb
mov
imul
add
inc
shl
iret
pop
sbb
jno
pop
pop
adc
pop
or
dec
push
dec
add
test
fcompl
jns
add
filds
sub
jmp
popf
or
icebp
orb
adc
loope
cld
orb
lea
in
or
inc
cli
sub
stc
cmp
xor
lods
icebp
inc
add
mov
js
test
cmp
or
mov
cmpsb
repnz
lret
out
mov
mov
mov
jge
orl
add
clc
pop
jmp
jb
movups
sti
cmp
lods
orb
repz
fs
dec
cmp
pushf
fiaddl
movsl
stc
arpl
adc
ljmp
insl
es
ret
add
shlb
jg
or
pop
xor
ffree
sub
out
lods
mov
or
cmp
add
adc
jo
imul
push
mov
push
mov
inc
pop
icebp
cmp
jmp
jmp
sahf
sti
leave
jmp
jmp
sub
mov
pop
or
push
xorl
or
sub
int
pop
fiadds
fiadds
adcl
es
jno
popf
filds
mov
mov
pop
sub
push
lds
aad
jg
xor
sub
xor
std
rclb
add
and
mov
inc
xor
sub
jecxz
sub
hlt
xor
jge
loop
lahf
mov
and
addr16
add
pop
idivl
push
pop
testb
push
jmp
fmul
push
ja
push
or
dec
push
or
push
outsl
imul
or
pop
adc
adc
push
add
jmp
test
jmp
daa
dec
inc
jl
sub
mov
ret
push
add
and
push
fs
lods
lods
ret
push
imul
pop
inc
loopne
popf
dec
mov
push
sti
in
in
fsubl
mov
aaa
xchg
push
dec
ljmp
bound
mov
test
mov
jb
jbe
ret
out
adc
stos
ret
faddl
inc
fdivs
sbb
and
add
lods
pop
jmp
out
cld
rcrl
hlt
sahf
out
lahf
fsubrl
or
mov
cmpsb
fs
xchg
insl
cmp
or
inc
or
outsb
or
fimuls
lock
repz
push
mov
es
xlat
add
and
divl
push
imull
cmp
dec
jle
into
test
ja
popa
aad
mov
ret
testl
pop
cmp
xor
ret
or
andb
icebp
pop
ljmp
inc
loope
adc
or
sbb
sub
mov
xchg
mov
leave
cmp
cmp
mov
cmp
es
ljmp
in
andl
data16
xchg
loopne
sub
bnd
xlat
dec
jns
jg
mov
mov
pop
inc
shl
dec
mov
mov
cmp
jmp
pusha
pop
pop
js
fs
movsl
add
lock
sub
jmp
xchg
or
dec
sub
xchg
jnp
jl
fstps
push
rcl
jae
imul
fstpl
xor
sar
stos
pop
in
or
mov
rcll
rcrb
bound
std
pcmpgtw
adc
std
xchg
dec
mov
sub
inc
mov
aad
cmp
push
in
bound
fmuls
leave
cmp
xchg
or
sub
and
add
pop
or
dec
jnp
rcll
aas
pop
xor
inc
in
shll
adc
pop
sbb
sbb
in
mov
xchg
xor
jl
dec
pop
xchg
dec
das
xchg
xchg
es
lahf
inc
sbb
pop
jbe
in
mov
sub
arpl
and
aam
sub
xorb
xlat
mov
mov
xor
les
or
xor
jl
sub
inc
js
in
xchg
addr16
mov
fbstp
incl
sub
lods
mov
out
rorl
sarl
loopne
pop
or
aam
loope
push
push
dec
sbb
add
pushf
scas
cld
ds
enter
fs
sub
nop
push
popf
jg
nop
jmp
mov
push
push
sbbl
pop
push
push
push
and
or
jne
mov
dec
scas
or
xchg
pop
jnp
pop
das
ret
into
sbb
test
int
and
das
xchg
pop
hlt
or
push
testl
jle
cmp
mov
pusha
in
xchg
push
lahf
jl
jmp
cmpsb
test
jp
jo
pop
insl
jb
jns
movsl
pop
out
sbb
and
inc
stc
cmpsb
push
mov
add
inc
or
pop
push
sti
pop
ljmp
xor
loopne
cltd
ret
test
dec
mov
test
adc
fcoms
nop
xor
ret
adc
jmp
or
xor
sub
inc
sub
daa
push
sub
adc
add
call
ljmp
into
fdivrs
pop
mov
fistps
jl,pt
incb
mov
out
xlat
xchg
push
add
add
fcompl
pop
and
push
jp
dec
fstl
inc
inc
outsl
aam
cmpb
or
imul
pop
inc
mov
fwait
jmp
and
pop
adc
cli
mov
pop
jmp
rol
pop
in
sbb
pop
fcmovu
push
or
sarb
inc
incb
in
mov
jg
jmp
call
lods
jae
mov
js
add
sub
roll
pop
fldenv
add
adcl
inc
pop
repz
or
inc
push
jmp
jbe
leave
cmc
call
daa
sbb
inc
ret
call
ret
jmp
dec
int
or
inc
in
in
mov
ja
xchg
add
leave
pop
cld
shld
out
lret
iret
adc
push
int
incl
cmc
dec
push
mov
mov
push
xor
and
and
jl
mov
xor
and
int3
add
or
idiv
fwait
add
push
pop
cmc
je
push
das
mov
outsb
lods
dec
mov
mov
pushw
pop
mov
inc
in
push
fs
sub
mov
xchg
leave
mov
jo
stc
inc
outsb
loope
pusha
mov
or
dec
inc
add
mov
mov
out
pop
mov
jg
movsl
sti
mov
jle
test
push
lahf
cltd
mov
call
or
retw
pop
push
es
ljmpw
adc
sub
shlb
cld
or
push
dec
sub
xor
decb
jmp
or
pop
xorl
pop
sbb
xor
imul
fsubp
iret
pop
das
push
cld
ljmp
push
ret
cmc
xor
shr
add
inc
or
dec
pop
mov
out
neg
jg
pusha
pop
and
or
sub
inc
gs
add
pop
out
out
xor
lds
adc
cmp
xchg
xor
adc
dec
out
xor
addl
rorb
iret
mov
jnp
mov
loop
pop
adc
mov
pusha
add
push
mov
push
push
push
pop
add
pop
clc
sub
stos
cli
std
xchg
push
andb
cmpsl
shll
or
aam
lcall
add
test
jns
pop
hlt
push
mov
mov
jl
pop
jge
aad
adc
stc
popa
stos
pop
loopne
jmp
or
adc
sbb
leave
add
dec
sub
lahf
pop
adc
sbb
dec
push
pop
push
repz
mov
sub
arpl
call
sub
add
add
jle
pop
sub
test
mov
xorb
and
aas
adc
inc
sub
gs
xchg
outsl
popa
xchg
test
test
mov
cmp
cld
inc
lods
inc
test
mov
xchg
pop
ljmp
test
mov
lods
mov
lods
xor
lret
dec
pop
lcall
push
lcall
pop
sarl
pop
mov
orl
jbe
sub
mov
das
add
xor
lahf
jno
mov
push
jle
add
inc
addl
out
sbb
je
and
sbb
xor
jecxz
cltd
push
das
mov
add
mov
sub
fistl
sub
and
pop
jl
xchg
adcl
push
adc
clc
adc
into
pop
pop
inc
icebp
pop
push
lock
out
cwtl
sub
dec
xor
ds
adc
int3
jp
and
in
popf
dec
jl
les
out
int
cmp
or
sbb
out
xor
mov
xor
not
mov
mov
sub
cld
mov
orb
push
sbb
xor
ss
jmp
or
ret
aam
orl
stc
jmp
imull
test
pushf
test
int3
add
xchg
cwtl
rol
mov
jne
push
xor
lods
cmp
lock
test
test
les
or
pop
dec
xor
dec
mov
mov
sbb
nop
testl
mov
imul
shrl
jno
push
sbb
ret
xchg
mov
sub
mov
adc
in
pop
adc
cli
icebp
or
mov
push
add
inc
inc
mov
movsl
push
cld
pusha
aas
stc
xor
rclb
pop
stc
xchg
cmp
inc
pop
adc
or
out
push
jno
es
and
cmp
iret
in
jmp
cmp
jl
jo
adc
js
and
mov
pop
add
add
xor
icebp
js
sub
inc
or
sub
mov
call
pop
sub
inc
inc
gs
es
sub
push
add
scas
test
jmp
lcall
std
inc
das
nop
sub
dec
mov
mov
fbstp
or
and
repz
rorb
cmp
lea
or
dec
out
mov
fwait
aas
ret
movq
andl
mov
rcll
mov
mov
pop
pop
data16
not
daa
xchg
fldt
mov
add
div
insb
sahf
xchg
add
leave
aam
sub
or
jno
movsl
out
bound
xor
jmp
pop
leave
inc
pop
pop
sub
test
adc
fisubl
js
pop
jg
push
push
pusha
push
sbb
imull
dec
mov
cli
loop
hlt
rol
push
pop
mov
loopne
pop
pop
dec
or
pop
sbb
scas
push
lds
adc
add
imul
dec
mov
cmp
ja
or
fldcw
sub
stc
inc
inc
mov
push
inc
bound
pop
pop
push
pop
es
cwtl
push
or
dec
adc
cmp
add
inc
adc
les
add
mov
fstpl
mov
xor
dec
xchg
cmp
mov
sahf
scas
dec
add
loope
add
sbb
mov
push
das
fcmovne
pop
inc
inc
cli
stos
test
shr
ret
call
lds
and
insb
adc
inc
cmp
fadd
or
mov
jmp
leave
lret
adc
sub
pop
add
add
insb
imul
add
push
mov
or
or
sub
dec
xchg
jo
stos
test
mov
dec
out
mov
sub
out
inc
sub
xchg
lods
or
scas
pop
mov
les
push
jb
mul
stos
adc
xor
xor
pop
cmp
dec
add
imulb
movsb
aad
jo
pusha
into
add
pop
insb
sub
test
sti
idivb
dec
pop
inc
mov
or
aaa
sub
ret
jg
mov
push
rolb
dec
rcll
mov
rcr
adc
pop
and
std
and
in
inc
mov
sub
call
jo
mov
sbb
or
stc
clc
aas
enter
xor
pop
enter
jns
jp
daa
pop
inc
pop
adcb
push
mov
add
jmp
adc
cmp
mov
lods
nop
cmp
add
adc
dec
lock
xor
stc
inc
adcb
or
mov
jo
cs
out
pop
dec
inc
cld
and
sahf
nop
je
push
clc
adc
out
into
enter
pop
mov
jbe
push
jge
or
sub
shr
ja,pn
stos
ret
jns
or
dec
insb
fs
adcb
xchg
mov
xchg
clc
push
jmp
xchg
scas
cmp
jmp
mov
mov
jmp
cwtl
pusha
dec
movb
mov
adc
and
and
xchg
pop
push
add
mov
jae
inc
jns
or
add
lds
repz
push
mov
sub
std
jns
jge
adc
and
movsl
imul
divps
notb
jno
sub
push
push
movsl
push
xor
popa
inc
in
pusha
sub
push
insb
sbb
jp
out
inc
pop
or
jns
cmpsl
fidivrs
and
xchg
inc
add
or
xchg
ljmp
lret
xor
push
mov
push
pop
adc
xchg
cmp
faddl
pop
sbb
push
dec
add
push
loop
adc
lret
or
out
mov
xchg
lret
sub
push
jmp
xor
insl
or
movsb
dec
lret
scas
sbb
adc
push
daa
out
jl
mov
mov
sub
test
pop
test
bnd
ret
inc
or
add
push
lret
addl
add
add
jbe
xchg
add
inc
imul
ja
pop
cld
xor
dec
fisttps
imul
popf
jle
inc
addr16
mov
adc
adc
mov
das
jle
shrl
insb
pushf
sarb
and
orb
push
mov
xor
push
inc
pop
dec
andl
repnz
int3
ret
add
flds
mov
sbb
aad
lds
ja
jge
xchg
jl
sbb
push
sub
shrb
or
shl
xor
mov
cld
pop
fs
dec
lock
dec
mov
inc
mov
push
movsl
gs
mov
pop
mov
test
inc
movsb
xor
int
pop
lea
in
jnp
push
std
and
loop
adc
popa
mov
test
xlat
adc
call
mov
inc
lcall
adc
jle
lret
jne
int
loopne
pop
lcall
sbb
repnz
aam
and
mov
imul
push
cwtl
ja
hlt
cmp
cmc
rclb
add
js
movsb
sbb
bound
hlt
popa
pop
pop
outsb
cmpsb
cmpsl
add
je
pop
or
add
cmc
and
loope
dec
pushf
ds
add
add
sub
pop
es
pand
xor
popa
sbb
mov
cwtl
repnz
pop
add
hlt
mov
and
jmp
sbb
or
pop
add
inc
sbb
fs
adc
add
xchg
inc
in
in
mov
fidivrs
mov
adc
inc
add
shl
jmp
or
jecxz
lods
mov
cmp
jmp
sub
or
cmp
mov
and
not
inc
test
mov
push
cli
inc
loopne
in
pop
stos
shll
dec
enter
shll
rcrb
insl
ret
sub
sub
jne
push
pop
jno
cld
add
lret
cltd
out
adcb
ficompl
xor
cwtl
clc
or
rcrb
mov
add
cmp
andb
dec
sub
nop
mov
dec
lahf
cmp
ja
or
shl
jne
gs
pop
push
aam
jb
aad
xor
push
cwtl
cs
rorb
int3
and
push
repz
or
add
jp
adc
ljmp
mov
xor
mov
or
iret
mov
clc
inc
push
pusha
mov
xchg
orb
shll
inc
adc
in
lods
wbinvd
add
les
fwait
pop
xchg
movsl
lds
andb
nop
mov
sbb
idivl
xlat
mov
pop
pushf
fwait
mov
sub
push
and
mov
sahf
pop
sbb
lods
or
fnsave
daa
int3
or
dec
push
pop
and
sub
jl
pop
int3
add
lahf
jnp
mov
xchg
cwtl
jb
inc
and
fcomps
xor
dec
pop
sub
push
sbb
sbb
and
push
out
pop
sub
jl
iret
repnz
int
mov
fnstcw
mov
shr
aam
incb
push
inc
and
lret
push
adc
xor
adc
movsb
cli
out
lock
es
sbb
pop
push
mov
das
hlt
sbb
or
xor
ret
loop
int
out
and
xchg
pop
lretw
repnz
in
jbe
rcl
bound
cmp
shr
or
cld
jle
fs
ror
add
ljmp
fists
or
pusha
cltd
ja
in
mov
cmp
sub
xor
push
jne
pop
cld
jne
cs
adc
ficomps
cltd
xchg
loop
out
sub
mov
pop
imul
or
add
inc
jmp
mov
test
xchg
aam
push
idivl
fstpl
daa
pop
pop
cwtl
xor
psraw
nop
iret
jl
mov
movsl
dec
pop
mov
inc
lahf
jmp
mov
loopne
lret
add
lret
lahf
dec
nop
js
mov
xchg
ret
pop
xchg
push
sbb
jnp
xchg
icebp
pop
pop
test
mov
push
add
mov
dec
cwtl
cmp
dec
sti
jl
jmp
sti
sbb
mov
pop
and
xchg
sbb
out
xor
out
lods
sti
adc
mov
pop
mov
daa
cmpsl
sbb
and
pop
xchg
punpckhwd
popf
loop
add
data16
lret
inc
stos
fcmovnbe
clc
aad
pop
or
shlb
jmp
push
jae
movsb
jg
jge
repz
pop
pop
aam
sbb
add
xorl
das
andb
or
push
shll
dec
in
sub
sub
pop
lcall
and
into
insl
ret
or
cli
in
mov
push
lret
cld
movsl
dec
jp
mov
sub
adc
push
adc
pop
std
adc
clc
pop
fadds
xchg
mulb
or
push
push
mov
or
enter
gs
adc
jb
and
mov
in
dec
mov
jmp
sbb
je
stc
sub
pop
xlat
fwait
mov
iret
in
lock
stos
les
xor
int3
sbb
in
aad
repnz
mov
pop
ret
jge
sub
aad
pushf
pop
jp
movsl
ljmp
pusha
or
and
gs
in
cmpsb
int
or
shlb
add
push
xor
dec
jb
xor
loope,pt
xchg
xchg
mov
or
mov
adc
sub
aad
pop
push
pop
lods
adc
push
in
push
mov
push
inc
mov
popf
rcll
out
jl
sub
rep
xchg
jmp
sbb
xor
sub
sbb
nop
arpl
pop
xchg
rorl
sarb
arpl
mov
dec
ret
sub
and
push
cwtl
out
xchg
stc
jmp
mov
inc
jl
pop
repnz
imul
scas
leave
jp
daa
mov
jg
mov
jno
clc
xchg
jae
push
push
pop
add
jecxz
test
dec
jne
pop
adc
dec
add
inc
or
and
bound
adc
mov
push
rorb
jmp
jge
icebp
into
and
sub
arpl
cli
mov
js
or
jns
inc
cmc
icebp
popa
cmp
das
dec
jo
dec
pop
sub
add
add
in
cmp
mov
pop
test
mov
inc
push
mov
xchg
mov
jnp
inc
mov
dec
xor
imul
dec
adc
or
jbe
jmp
add
jae
xchg
xchg
sub
xchg
add
mov
in
mov
popf
mov
hlt
push
jle
ret
pop
sub
leave
push
enter
stc
cmp
aas
fdivrl
outsl
sbb
push
push
pop
pop
roll
sub
push
xor
fidivl
addl
ljmp
pmulhuw
push
imul
xlat
and
cvtsi2sdl
adc
sbb
mov
fsubr
xor
sub
and
add
dec
insb
and
xchg
shrb
jecxz
xchg
dec
pop
mov
stos
decb
dec
loope
pop
fxch
js
add
cmc
xchg
or
sti
and
push
mov
xor
push
inc
in
xchg
testb
pop
and
push
shl
dec
push
fcoms
test
adc
jbe
addb
jae
pusha
add
sbb
test
or
add
sub
cmp
sub
shrb
xchg
enter
xchg
cmp
aad
cmc
xchg
jp
out
pop
sbb
push
mov
and
mov
cmp
outsb
dec
push
imull
jg
shll
add
pop
jnp
and
and
out
xchg
or
and
adc
loope
call
cmp
push
push
aas
rcrb
jmp
add
sub
or
loope
cs
inc
and
add
xchg
push
subl
repnz
jo
loopne
xor
sbb
sbb
add
sub
pop
dec
out
hlt
sub
insb
into
out
movsl
fwait
jne
pusha
mov
jp
adc
scas
and
pop
mov
ja
sahf
xchg
aaa
mov
in
sbb
outsl
adc
and
sbb
jns
jg
cmp
jo
adc
push
call
sub
inc
sub
test
sub
jbe
gs
xor
adc
xor
mov
les
std
add
lods
loope
pop
mov
adc
dec
inc
mov
fildl
push
pop
aam
sahf
sbb
mov
and
mov
sbb
cmovb
in
add
push
les
lods
mov
bound
xchg
sub
sub
ret
xchg
adc
call
or
imul
cmpl
movsl
and
sarl
mov
imul
jl
push
xchg
iret
insl
outsb
mov
push
leave
push
jg
repnz
dec
cltd
in
sub
aaa
mov
xchg
mov
mov
jp
mov
dec
ret
sarl
fstp
pop
xor
xchg
push
dec
nop
test
cmp
sub
sub
xor
rclb
and
sub
dec
sti
push
push
daa
mov
test
pop
lcall
sbb
js
int
mov
jne
push
or
xchg
test
xchg
ret
fsts
push
pop
push
xor
mov
push
adc
xchg
or
push
out
push
das
mov
jmp
jmp
jno
mov
sbb
sbb
add
dec
jl
aam
xchg
or
incb
pushf
pop
std
push
inc
jae
push
ret
test
push
test
mov
dec
dec
mov
pop
mov
movsl
insl
pusha
add
stc
dec
pop
mov
dec
or
push
inc
mov
hlt
and
dec
dec
and
jns
inc
std
jmp
jb
dec
icebp
mov
call
movsl
fcompl
mov
mov
jp
xor
push
xor
inc
push
xor
pop
pop
pop
ja
in
mov
cmpsl
pop
push
push
test
xor
out
sar
cmp
mov
add
and
or
out
loope
mov
nop
add
and
ss
ljmp
adc
arpl
and
add
pop
push
add
test
repnz
add
ja
je
pop
pop
add
incw
pop
or
or
pop
sub
and
clc
push
adc
loopne
or
out
add
jbe
popa
mov
cmc
das
mov
scas
cmp
sarl
add
out
lds
sub
pushf
jnp
push
push
jmp
add
xchg
outsb
outsl
fildll
or
jnp
mov
stos
jnp
andb
jecxz
jmp
push
loop
push
ficoms
out
jae
add
pop
stc
sbb
jge
push
xchg
dec
mov
shrl
pop
or
inc
cmp
inc
dec
in
cmp
mov
sbb
xchg
inc
hlt
add
jmp
mov
xchg
mov
shl
add
inc
lcall
cld
ret
pop
pop
enter
push
and
jne
test
jmp
jns
cltd
xor
add
lds
ds
repnz
xor
scas
mov
or
xor
outsb
push
jmp
jns
mov
dec
mov
repz
mov
movl
push
cmpsl
mov
and
sbb
pushf
rcll
cmp
or
pop
ret
mov
sub
and
inc
and
dec
push
xor
xlat
jbe
daa
pop
sti
int3
jns
push
fs
jle
ret
in
stos
mull
stos
inc
test
add
ljmp
inc
push
pusha
add
or
ret
stc
pop
sub
or
add
jecxz
mov
mov
repz
lods
scas
and
add
je
icebp
cmp
ret
xchg
mov
scas
mov
dec
out
gs
push
lret
sbb
je
mov
test
lods
leave
inc
adc
jno
pop
testl
push
clc
pop
mov
and
jl
test
dec
and
ret
jmp
lock
adc
fbstp
xchg
sbb
pop
lahf
adc
inc
or
push
fmull
adcb
sbb
push
pop
scas
sti
cli
pop
pushl
pusha
sbb
js
in
pop
jge
mov
loope
push
pop
les
out
inc
insl
adc
out
cmpsb
push
or
testl
mov
push
jns
int
das
lods
movsb
shrl
mov
lods
dec
je
mov
cmpsb
adc
hlt
sub
adc
push
mov
lds
stos
pop
sbb
xor
xor
xchg
mov
fstpl
flds
pusha
fdivrl
lods
push
push
imul
scas
adcl
clc
lret
sti
divb
and
xchg
push
ss
popf
pop
and
je
roll
pop
insl
inc
or
flds
inc
sbb
or
mov
imul
hlt
mov
mov
cwtl
inc
cmpsb
das
push
sbb
hlt
stc
popa
pop
push
push
and
dec
pop
ss
add
or
xor
pop
or
add
das
and
movsb
aam
cwtl
leave
imul
inc
lret
mov
orb
pop
dec
pusha
pop
out
add
and
outsl
idivb
sti
jp
xor
push
sbb
sub
pop
scas
cmp
sub
cmpsl
sti
inc
nop
icebp
push
dec
out
adc
xlat
or
popl
outsl
shrl
mov
pop
push
data16
jge
in
xchg
or
inc
call
and
cmp
or
or
xor
mov
or
or
in
adc
push
out
mov
mov
mov
add
cmc
shl
inc
aam
jl
adc
repnz
jnp
cmpl
js
xchg
testb
or
clc
mov
in
das
cmp
pop
cmc
stos
dec
das
aam
mov
push
inc
jg
inc
mov
mov
dec
sub
das
cli
ds
mov
push
or
out
fidivrs
andb
or
scas
imul
jmp
sub
mov
pop
ds
cmp
mov
sbb
push
pop
xlat
lock
add
mov
loope
insb
movsl
call
jne
mov
inc
or
push
cmpb
loopne
xor
stos
xor
ljmp
pop
in
sti
arpl
jne
lahf
push
iret
jo
add
push
popf
cmpsl
loop
mov
mov
cmp
pop
add
or
popa
test
dec
xorl
dec
iret
push
pop
out
popa
nop
sub
pop
jbe
jge
push
jae
dec
push
pop
push
loopne
and
fmull
pop
lahf
dec
test
es
pextrw
andl
sar
cmp
and
push
add
add
push
cs
pop
push
push
in
or
mov
leave
add
pop
push
pop
std
lret
jmp
pusha
clc
push
push
nop
mov
cmc
out
in
shrb
mov
adc
repz
adc
inc
bound
jnp
cs
or
and
push
push
push
sub
js
push
pop
jmp
pop
jae
and
or
dec
mov
and
cli
mov
or
adc
inc
nop
mov
pop
and
pop
xor
pusha
add
jge
outsb
cmp
or
call
pushf
cmpsl
sub
mov
rclb
mov
outsb
rorb
push
cmpsl
add
add
jmp
pop
sbbb
sbb
dec
cmpsb
pop
sarb
sarb
hlt
fs
jno
jecxz
popf
loopne
xor
stc
push
sub
jmp
je
mov
jmp
ds
icebp
lahf
xchg
inc
rol
mov
call
jge
jmp
cmpsl
subl
loope
xor
mov
and
sub
fsubl
push
mov
mov
pop
test
mov
icebp
xlat
mov
mov
mov
jne
sbb
add
pop
cwtl
test
test
repz
js
pop
ds
xor
xchg
out
loope
cs
movsb
loop
rol
xor
mov
cmp
nop
xchg
jmp
pop
and
or
into
jne
pop
xchg
xor
pop
cmp
sbb
push
xlat
jmp
movsb
jns
xor
inc
add
push
and
jo
sub
pop
adc
inc
push
push
pop
stos
mov
rcll
xchg
or
and
mov
cld
fstpl
popf
imull
shl
rcl
fs
rsqrtps
sbb
and
dec
xor
std
sbb
jmp
rcrl
incl
push
add
roll
in
stos
pop
mov
pusha
mov
xlat
shl
dec
dec
mov
push
loopne
jg
pop
shl
mov
mov
jge
nop
inc
pop
push
nop
sub
mov
add
or
xchg
adc
and
pop
lahf
add
sub
xor
ror
arpl
mov
pop
mov
dec
jecxz
xchg
dec
adc
mov
lods
inc
imul
inc
jecxz
es
push
mov
outsb
ret
lods
pop
xchg
lret
rcl
xchg
dec
mov
aaa
adc
mov
xlat
test
mov
pop
add
xor
lcall
dec
fidivrs
push
inc
stc
or
dec
movb
push
xchg
add
push
or
aad
cmp
inc
into
pop
loop
lcall
loope
jmp
xchg
adc
sub
cwtl
fiaddl
fs
xor
outsl
xchg
xchg
dec
or
add
cmp
sbbl
pop
pusha
loope
ret
shr
lret
bound
xor
mov
ficomps
mov
andl
insb
lock
add
stc
jno
lods
sbb
push
and
sbb
test
aam
ljmp
lret
lret
pop
cld
pop
out
stc
push
mov
js
sub
sbb
mov
fwait
push
inc
sub
lock
mov
xor
das
dec
jmp
repnz
add
imul
mov
in
inc
cmc
inc
push
or
xchg
mov
pushf
jmp
stos
dec
pop
pop
mov
add
and
fstl
scas
imul
insb
cltd
xor
or
sbb
insl
mov
mov
and
jo
fucomp
push
jb
cmc
cltd
and
pop
ds
xchg
repz
dec
outsl
and
push
out
jle
or
js
pop
mov
fcoml
cltd
sbb
sub
xor
add
js
addr16
cld
push
shlb
xor
adc
mov
xor
dec
cmpsl
popf
cld
jg
jmp
push
mov
or
sub
fs
inc
mov
ja
and
push
inc
push
xor
cs
jecxz
inc
inc
jae
sub
or
dec
xor
jmp
das
mov
inc
adc
xchg
call
jnp
lea
notb
and
dec
nop
and
inc
jl
daa
arpl
lret
sbb
sub
push
xor
lret
fildl
push
adc
sub
or
cmp
xlat
add
jno
pop
lea
jbe
xchg
ss
out
nop
add
int3
shll
mov
pop
push
sti
xor
push
sahf
leave
jne
add
dec
imul
add
sbb
ffreep
or
fsincos
pusha
outsb
adc
push
jmp
xchg
mov
cmpsl
lahf
push
icebp
bound
adc
daa
pop
push
popa
repz
and
sub
add
jp
outsb
mov
mov
jnp
imul
sub
lock
lods
dec
lcall
roll
sbb
imul
jg
add
push
push
xchg
aaa
dec
cmp
push
sub
les
jl
repnz
mov
mov
fs
rclb
xor
pop
and
inc
roll
inc
jbe
enter
xchg
mov
mov
lret
sbb
adc
lret
mov
popf
daa
aad
xor
mov
adc
inc
repz
mov
in
int
pop
add
jp
or
mov
int3
ljmp
ljmp
daa
add
lea
icebp
push
fbld
das
push
shlb
in
bound
add
sti
xlat
shrb
das
or
je
and
pop
popa
sbb
hlt
inc
push
push
out
inc
sub
add
and
xor
mov
xchg
dec
sbb
inc
adc
add
movl
faddl
cltd
stos
ss
cmp
in
pop
ret
add
xor
pop
xchg
pusha
cld
nop
and
in
call
add
shlb
dec
inc
inc
add
push
jae
push
xchg
add
ret
lret
push
lahf
add
mov
add
popa
lods
xchg
rcl
lock
nop/reserved
out
sbbb
jbe
add
cmp
insl
mov
pop
adc
pop
cwtl
cmpl
push
out
push
or
sbb
aaa
or
fisttpll
out
add
mov
fsts
inc
xchg
and
add
push
mov
mov
push
or
cmp
mov
inc
pop
pusha
jb
add
fs
mov
movsl
js
mov
sarb
inc
add
add
lahf
test
call
add
je
aam
sbb
inc
cmp
xor
push
int
les
add
push
xchg
add
pmulhw
insb
mov
and
cmc
adcb
or
jns
lods
push
mov
add
cmpsb
mov
es
cvtps2pd
add
cli
cmp
sub
orb
js
mov
mov
sbb
sub
jnp
jo
test
dec
lahf
inc
cmpsl
xor
or
jl
mov
add
in
push
xchg
mov
orl
shrb
outsl
cmpsl
cmp
jge
pop
out
mov
add
xchg
leave
mov
stos
rolb
xchg
pusha
insl
add
pushf
add
dec
jbe
cmp
setg
in
or
push
and
stc
mov
push
mov
or
push
bound
inc
sti
add
and
add
push
mov
sbb
add
decb
lock
test
loope
ret
lcall
push
pop
fsub
movsb
and
jp
or
filds
data16
fisubrl
xchg
loope
stos
add
mov
inc
xchg
adc
pop
outsb
out
in
roll
sub
dec
add
arpl
add
or
sbbb
ficoml
mov
test
fsubrs
lret
jno
je
aad
or
xchg
sbb
or
jmp
test
nop
scas
fs
xor
xchg
pop
jmp
lods
pusha
aas
cmova
inc
orl
repz
sbb
cmp
jne
ljmp
sub
jge
addb
fldcw
mov
xor
adc
pushf
inc
stos
cmp
adc
push
xor
outsb
xchg
add
lods
sahf
iret
ljmp
mov
fsubl
and
add
gs
cmp
push
dec
cwtl
daa
cmp
testl
adc
imul
push
cmp
mov
fwait
mov
cltd
loopne
jmp
xchg
movsb
add
xor
inc
lcall
test
and
cmp
dec
add
push
sub
popa
and
out
mov
or
cmc
pop
inc
inc
adc
inc
inc
or
xor
push
xor
add
push
push
pop
jecxz
xchg
add
mov
pop
mov
addb
cmc
call
push
mov
icebp
xor
mov
jl
adc
or
push
repnz
lea
sub
jne
mov
xchg
cmp
jecxz
pop
lods
cli
xor
mov
mov
rcl
bound
jge
and
movsl
pop
and
fdiv
cmp
or
mov
loop
sbb
dec
xadd
int3
dec
fcomip
pop
orl
pusha
cmp
jecxz
mov
sub
fdivrs
outsl
cli
and
in
push
sub
jl
fnstcw
mov
xchg
cmpsb
mov
pop
add
test
adc
stc
insb
inc
mov
int3
movsl
nop
cmp
xor
dec
pop
jmp
dec
mov
inc
bnd
in
lock
int
xor
mov
push
faddl
sbb
mov
add
mov
mov
add
mov
std
xchg
cltd
pop
add
add
dec
push
push
add
sbb
out
shlb
in
dec
mov
cwtl
mov
fisubrl
daa
rorb
push
inc
jo
xchg
xor
test
mov
imul
cmp
jmp
ljmp
loopne
in
mov
cmp
or
pop
pop
xchg
and
lock
add
jne
aaa
sub
loope
inc
mov
sub
cmp
mov
cs
cmp
std
in
inc
mov
jge
test
sub
fdivr
outsl
dec
dec
sbb
ja
xchg
popa
dec
add
scas
jns
jl
add
inc
dec
jo
mov
cmpsl
inc
ja
rol
or
shr
or
add
xchg
inc
mov
fs
sub
and
inc
insb
jg
xor
inc
stc
cmp
pop
adc
sub
xchg
lods
das
xchg
lret
mov
sub
add
test
ja
cmp
lods
xchg
xchg
push
inc
movsb
fs
add
cmpsb
hlt
dec
stos
lret
flds
mov
push
xchg
dec
mov
and
stos
xchg
sarb
jle
and
pop
add
les
enter
jge
adc
insb
pop
int3
pop
out
or
test
mov
sub
lret
adc
dec
pop
mov
mov
pusha
add
cmp
in
dec
or
call
jo
and
sub
sbb
loop
mov
ljmp
inc
pusha
xor
or
add
roll
dec
fwait
std
mov
andn
xor
pop
xor
in
sbb
mov
fcoml
jo
and
rcll
stos
dec
popf
imul
cmp
flds
mov
ljmp
loopne
add
adc
cmp
inc
movsl
aas
sub
pop
sbbb
fdivr
aaa
pop
call
push
imul
sbb
popf
add
pushl
push
addr16
pushf
mov
repnz
test
cs
push
mov
pusha
in
or
aaa
mov
cltd
mov
mov
leave
add
movhlps
and
fildll
jbe
jp
mov
add
xchg
push
push
lock
add
cmp
popf
mov
mov
test
gs
in
cmpl
data16
clc
add
pop
dec
pmaxsw
aas
ljmp
xchg
test
mov
add
pop
pushf
xchg
icebp
inc
add
nop
sahf
mov
roll
pushf
jmp
lret
fdivrl
add
pop
add
popa
mov
movb
mov
mov
sbb
and
in
and
or
loopne
dec
sbb
or
hlt
pop
sub
push
test
shlb
lret
cwtl
sbb
movsl
dec
and
aam
stos
pusha
js
add
fldt
and
test
push
add
pop
inc
mov
add
xchg
jae
sbb
cld
das
pop
push
mov
js
add
fldl
mov
add
xor
lods
xorl
popf
push
scas
aad
mov
pusha
pop
movsb
sbb
pop
mov
and
mov
dec
lea
mov
scas
add
or
cmc
push
or
or
clc
sbb
push
mov
dec
push
xor
imul
cmp
add
jg
jo
cmp
daa
xor
sarb
mov
sub
or
movsl
rolb
and
lods
add
jge
push
int3
dec
fdiv
add
pusha
dec
movb
xchg
sbb
jns
add
push
adc
setl
inc
jb
and
icebp
movsl
mov
testb
or
js
fnop
scas
mov
xor
test
or
int
add
movsl
test
cmp
fidivrs
mov
fsubrl
inc
shll
and
inc
andb
xlat
ficoml
sub
popa
popl
lcall
mov
pop
sbb
jo
add
sbb
rorb
adc
or
mov
sbbb
add
sub
imulb
cmp
jle
pop
insl
into
and
push
dec
xchg
cltd
add
jp
adc
ret
dec
xor
jg
xchg
cmp
dec
sub
fsubl
fs
movsb
lret
leave
add
pop
jl
xchg
pop
testl
inc
sbb
and
and
push
subb
rcll
mov
mov
cld
pop
int3
lock
xchg
sbbl
add
jmp
add
outsb
push
push
mov
andb
dec
pop
repnz
mov
cld
cmp
pop
fisubrs
leave
jno
xchg
mov
into
cmp
mov
sbb
add
adcb
add
pop
mov
sbb
lea
in
gs
or
mov
fsubr
das
add
out
pop
jns
decl
cli
xchg
xchg
sbb
out
sub
sbb
inc
mov
dec
insl
clc
fmull
and
and
push
ret
inc
mov
pop
sub
jle
add
aas
stos
cmpl
sub
xchg
sbb
sti
ret
mov
aaa
das
adc
popf
xchg
arpl
xchg
and
xchg
sbb
test
mov
cld
ds
and
imul
xchg
pop
inc
sbb
les
push
or
inc
xlat
inc
adcl
or
pop
pop
ljmp
cmp
out
or
and
push
decb
out
pop
add
les
inc
pop
xlat
inc
add
aas
rolb
mov
mov
mov
nop
pop
out
cltd
lods
movsb
clc
inc
lret
jno
addb
add
addr16
sbb
dec
cmp
mov
cmp
cmp
sbb
or
push
adc
xchg
or
add
add
inc
ja
sbb
iret
inc
and
cli
pushf
add
cmc
inc
out
pop
mov
into
negl
or
ficompl
ret
add
ss
jae
jb
xlat
frstor
adc
xor
out
adcl
iret
fiaddl
adc
dec
pop
out
inc
aad
lcall
aaa
inc
cmp
rorb
cmp
push
fldt
jne
sub
inc
aad
push
push
and
out
vandnpd
lds
xchg
shll
clc
out
sub
jno
inc
mov
sub
inc
xchg
test
lret
add
arpl
ds
dec
orb
xchg
pop
jle
add
mov
imul
pop
sbb
pop
sbb
cmc
mov
inc
sbbl
push
add
imul
lcall
sbb
out
pop
adc
mull
push
push
mov
jae
iret
out
push
cwtl
mov
xchg
mov
std
cmp
das
inc
mov
cmp
sub
dec
inc
je
scas
sub
orl
stc
and
push
popf
adc
mov
push
mov
mov
push
mov
dec
add
in
add
imul
add
pusha
stos
cmp
aaa
dec
pop
testb
xchg
outsl
jbe
cmp
cmc
dec
jo
add
pop
inc
push
stos
or
sub
dec
es
dec
xlat
adc
and
je
rclb
gs
test
int
sbb
inc
je
and
nop
or
pop
pop
jae
sbb
push
add
shr
cmp
into
jle
add
ficoml
add
sbb
fsubrs
jne
mov
jns
push
dec
daa
scas
mov
xchg
scas
sarl
push
imul
dec
movd
mov
jno
les
pop
inc
outsl
mov
aad
loopne
cli
add
insl
adc
mov
in
in
out
jecxz
sbb
test
repnz
or
lds
mov
popf
push
add
js
es
imul
out
cmp
dec
iret
in
int
imul
lahf
push
mov
pusha
add
mov
filds
lea
and
dec
std
lret
addb
subb
fisubrs
loopne
adc
xlat
into
mov
call
subb
dec
in
cmp
xchg
push
add
cmp
pop
daa
test
xor
or
dec
jp
add
repnz
jo
negl
add
push
mov
xchg
xor
mov
jae
mov
or
sbbb
mov
and
add
outsl
mov
mov
or
push
add
xor
loop
lods
popa
sub
push
mov
push
pop
jbe
or
data16
xor
inc
push
adcl
xchg
adc
dec
pop
aam
inc
por
adc
int3
sub
mov
mov
jp
clc
js
jl
pop
mov
aad
mov
shll
fwait
mov
and
inc
das
pusha
xchg
dec
in
jbe
cli
xor
sbb
adc
mov
add
and
push
xchg
mov
jb
cmp
add
cmc
mov
dec
push
and
movsb
push
add
ja
sub
mov
cli
pop
sbb
mov
or
xchg
inc
ljmp
in
dec
add
pop
test
in
mov
add
mov
arpl
push
sub
add
mov
sbb
add
cs
iret
sub
inc
jne
sub
lahf
rclb
lds
std
jl
add
mov
or
int
aam
or
add
popf
pop
rclb
sahf
addl
inc
test
clc
mov
mov
add
clc
push
lock
mov
cs
mov
popf
arpl
fcmovnb
scas
and
test
and
leave
add
shrb
fmuls
out
aas
xor
rclb
xchg
lock
movsb
pop
xchg
aaa
or
outsb
nop
fs
lcall
subl
mov
xchg
push
pop
add
inc
cwtl
add
imul
mov
fisubs
adc
xor
mov
mov
cmp
clc
lret
sub
sahf
gs
loopne
push
xchg
sbb
inc
dec
sub
add
gs
mov
or
fwait
mov
pop
adc
add
xchg
nop
xor
test
mov
andl
sub
xor
sar
add
jl
cmp
lcall
ror
sbb
ret
sub
fwait
lock
insl
popf
call
call
pop
add
lcall
cs
lods
nop
and
push
sub
popf
cmp
inc
mov
mov
mov
xchg
nop
int3
or
push
inc
lock
addr16
xchg
lock
add
and
ljmp
cmp
clc
mov
aaa
incb
je
add
sub
mov
pop
das
faddl
lock
mov
add
push
or
xor
adc
lcall
test
dec
dec
or
mov
nop
sub
pop
call
xchg
mov
sbbl
adc
inc
push
cwtl
push
mov
jae
stc
sub
das
xchg
mov
inc
and
or
test
mov
xchg
dec
aas
cs
cwtl
cmc
sub
mov
add
ds
shll
shrb
jno
xchg
mov
pop
lahf
add
xchg
imul
cwtl
pop
bound
call
lock
test
add
imul
add
sub
aam
add
jae
add
fcomps
lock
and
roll
iret
cmpsb
add
dec
je
test
insl
push
lret
shrb
inc
les
pop
add
inc
xchg
xor
es
adc
daa
push
lcall
and
sbb
jb
stos
ret
lret
pop
test
loopne
cld
lret
or
add
jl
push
add
fimull
adc
mov
cmp
inc
inc
xor
enter
and
in
xor
cltd
cwtl
andb
mov
adc
jno
nop
cmp
ret
cltd
cmp
xor
stc
inc
popf
clc
sbb
gs
add
std
insl
ss
jl
add
dec
push
jecxz
push
mov
jle
add
mov
movsb
push
ret
fiaddl
mov
imul
dec
call
je
out
iret
enter
test
xchg
xor
mov
jo
je
or
sub
sti
xor
push
mov
pop
inc
and
adc
push
pushf
adc
lret
jbe
dec
push
cmp
rcl
jno
mov
cmp
lds
pusha
sub
xchg
cs
call
leave
push
add
mov
fchs
lcall
xor
orb
enter
pop
or
jge
adc
add
pcmpgtd
xor
insb
cmpsl
loopne
mov
mov
aad
movb
stc
clc
lock
add
imul
sbb
add
and
push
outsl
add
push
mov
ret
cltd
pusha
shrl
scas
pop
int
popa
fcoms
add
lahf
inc
push
jle
jb
dec
jl
and
adc
jle
jns
in
sub
stc
addr16
dec
sbb
inc
fwait
mov
sbb
pop
xor
jp
xchg
inc
sub
cmpsb
dec
mov
add
pop
je
test
or
js
sub
pop
mov
mov
add
mov
xchg
jb
push
shrb
add
jecxz
pop
mov
mov
icebp
add
dec
adc
inc
aaa
adc
rcrl
cmp
leave
xor
pop
cmpb
pusha
insb
xchg
ret
xchg
mov
test
into
mov
push
mov
mov
mov
or
adc
roll
mov
inc
dec
ja
push
stos
or
shr
ret
cmp
das
mov
faddl
push
aaa
mov
and
jg
mov
out
iret
mov
pop
mov
mov
shrb
cmp
pop
movsb
mov
mov
stos
xor
sti
fidivrl
rcr
fdivrl
inc
and
icebp
shrb
pop
orb
add
push
lea
cmp
lcall
bound
pop
or
loop
or
pop
lea
rolb
jge
cmp
push
xchg
lret
jo
das
push
or
pop
add
int3
or
inc
mov
mov
js
popl
jl
or
data16
or
add
push
stos
test
fsts
sbb
xchg
cwtl
push
iret
data16
xor
cld
lret
xor
stc
sbb
xchg
nop
dec
add
ret
cmp
js
loopne
clc
pop
fwait
and
rol
cmp
sbb
hlt
adc
iret
jo
sti
push
mov
loope
push
imul
adc
jae
add
into
push
fidivrl
mov
fnstenv
roll
mov
sub
rcll
mov
lock
xchg
add
adc
mov
push
cs
push
push
add
aas
repnz
lret
push
ret
xor
pushl
mov
add
iret
es
and
xor
adc
and
subl
or
clc
mov
fs
add
mov
cwtl
xor
pusha
and
push
cmp
push
inc
mov
push
mov
xchg
cmp
les
and
stc
in
or
mov
aam
mov
sub
mov
cmp
add
nop
pop
out
fsubrl
lret
mov
loopne
jb
mov
pop
aas
push
test
das
sbb
faddl
and
les
and
pop
fsubs
cmp
pop
xchg
pop
repnz
andb
push
inc
divb
scas
subb
test
enter
data16
mov
scas
push
cmp
cmpsb
inc
sarb
mov
je
push
xor
sbb
xchg
xchg
mov
jno
and
inc
fsubl
jg
pop
cmpsb
cmp
fwait
popa
cmovne
int
push
imul
add
mov
lods
jmp
xchg
mov
sarl
mov
mov
pop
xchg
rorb
pop
test
or
aaa
mov
add
mov
sub
hlt
sub
adc
xchg
dec
adc
or
je
jno
push
dec
pushf
xor
lret
dec
pop
cmp
mov
jns
ret
xor
inc
sti
and
shr
xor
mov
pop
roll
aas
xor
adc
in
cmp
int
pusha
push
repz
lcall
into
cs
jl
sbb
mov
push
or
or
cmp
pop
cmc
or
xchg
lahf
and
repz
mov
in
sbbl
xorl
imul
mov
fs
pushf
inc
cmc
insl
mov
lret
mov
lret
rorl
stos
mov
fstpt
les
aaa
sbb
push
scas
push
mov
pop
data16
fistpl
sbb
fcmovb
outsb
mov
aas
in
lret
cmp
cltd
cwtl
dec
or
push
sub
repz
into
adc
repnz
adc
and
or
xor
xchg
xchg
adc
add
pop
pushf
add
pop
xorb
cltd
or
xchg
jmp
pop
outsl
add
xor
cwtl
mov
adc
rorl
mov
loopne
dec
pusha
f2xm1
test
inc
dec
xor
or
imul
nop
lock
cltd
or
inc
push
movsl
popf
clc
inc
test
and
inc
cltd
or
fs
loopne
pushf
mov
push
sub
repnz
and
or
adc
or
lods
je
push
pop
jo
scas
push
mov
ljmp
movsl
enter
cmp
je
fildl
cmp
sub
imul
ljmp
add
xchg
unpcklps
js
jnp
and
loop
mov
mov
sub
sbb
cwtl
stc
adc
enter
mov
out
repnz
sub
cmp
fs
fmuls
dec
or
sbb
sub
les
and
lock
jge
mov
and
test
jmp
add
jge
lock
pusha
lock
cli
sub
dec
test
mov
add
adc
mov
js
fs
add
mov
adc
in
add
rolb
or
dec
add
insl
lret
add
mov
push
mulb
inc
data16
xchg
and
cld
mov
push
pusha
fildl
test
inc
inc
jne
pop
dec
enter
or
cmpsl
stos
cmp
fadd
xlat
sbb
fwait
push
pushf
mov
push
ret
xorb
pavgb
sbb
mov
pop
cs
aas
lock
gs
xchg
add
test
xchg
sbb
mov
test
mov
sbb
adc
mov
ret
rolb
mov
mov
mov
notb
jne
add
lea
loope
push
test
push
add
mov
and
pop
mov
cmp
cmpsb
shlb
mov
mov
and
test
push
inc
mov
mov
loopne
call
movsb
inc
push
mov
sbb
push
popa
mov
mov
jecxz
mov
mov
and
dec
and
push
adc
repz
rolb
fadds
mov
shll
rolb
add
mov
push
xchg
sti
add
shlb
shrb
maskmovq
notl
mov
pop
addb
xchg
rcl
mov
loopne
lods
popa
lock
xchg
pop
cli
jmp
xchg
dec
mov
orb
cmp
mov
add
cmpsl
sahf
cmp
sbbb
pop
cwtl
lea
daa
cmpxchg
sub
cmp
add
xchg
sbb
sbb
sub
insl
enter
pop
in
xor
push
pop
mov
sbb
subb
sbb
shrl
scas
scas
push
lahf
or
xor
sub
cmp
mov
jo
adc
into
jge
pop
aaa
sub
rorl
in
aam
out
rcrl
sbb
mov
cwtl
fucomi
mov
pop
push
inc
fldt
jbe
xor
sub
xchg
add
inc
inc
lock
icebp
add
cmp
xor
cmp
jns
std
xchg
fistl
add
or
push
xor
aam
jl
scas
inc
adc
inc
rclb
inc
fidivs
push
add
sahf
and
lret
imul
jnp
mov
add
sub
lock
adc
xor
ret
sub
fcompl
adc
dec
sub
movsl
mov
xchg
xchg
sbb
cmp
loope
jnp
dec
mov
cmp
dec
sub
sbb
aaa
pop
fdivrl
rol
push
lahf
movsb
movsb
in
test
je
mov
push
and
jno
or
inc
fs
xor
sbb
and
mov
subb
cmp
adc
or
inc
cmp
add
mov
mov
aam
jnp
inc
or
les
insb
popa
fldt
test
fildll
lds
pop
loopne
lss
andl
and
pop
test
das
or
js
js
orl
mov
adc
or
shl
cmpsb
adc
cltd
sub
sarl
mov
popf
cmp
inc
fcmovnu
pusha
daa
movsb
test
inc
test
sbb
call
mov
icebp
sbbb
cltd
pushf
lretw
js
mov
int
mov
and
fstps
jnp
adc
add
ret
lods
inc
cmp
outsl
adc
jecxz
out
pop
addr16
xchg
push
mov
jae
push
pop
mov
jnp
mov
mov
dec
inc
lods
sub
pop
test
or
push
mov
jmp
add
mov
cmp
xor
push
lods
inc
cmp
xchg
or
pop
jnp
push
clc
jbe
popf
jb
sub
add
mov
add
cmpsl
mov
leave
jle
sbb
mov
jno
adc
sbb
rcl
jnp
add
lcall
in
jo
mov
adc
xor
mov
and
inc
subb
push
mov
fcomps
xor
clc
sub
add
sbb
xor
jno
out
cld
jno
add
dec
sub
sarb
jae
jp
fwait
sub
aaa
add
sub
clc
cmp
iret
add
push
xchg
shlb
adc
pop
add
leave
int
bound
fwait
add
cmp
xchg
or
or
add
mov
and
pop
loope
add
loop
mov
cmpsb
xchg
icebp
xchg
push
or
bound
sub
lahf
add
cmp
js
add
loopne
test
lods
in
jb
add
test
cmpsb
into
out
add
shlb
adc
ret
xchg
xchg
jo
add
movsl
add
mov
pop
or
jle
iret
sbb
cmc
add
xchg
cmpsl
mov
incl
xor
push
inc
adc
ror
cmpb
jge
shrb
mov
out
pop
ficompl
arpl
call
mov
xor
insb
fdivl
or
push
add
jo
adc
int3
add
int
mov
add
test
fstpl
outsb
cmp
push
mov
or
mov
mov
out
add
push
lret
mov
or
lds
sbb
nop
jg
add
lock
pusha
daa
jo
flds
mov
push
jne
xor
push
or
lcall
sbb
add
mov
push
dec
sbb
inc
imulb
cmp
mov
add
and
lods
adc
dec
in
add
and
push
imul
cli
inc
shl
or
int3
addl
add
outsl
jecxz
jno
add
pop
aad
add
cs
add
mov
ret
add
sbb
jnp
int3
sbb
in
fucomip
sldt
enter
insl
pop
dec
sbb
jmp
dec
push
or
bound
test
pop
addr16
mov
ficomps
inc
lea
psrlq
and
ret
dec
lahf
jecxz
fisubl
lds
icebp
inc
add
in
pop
cli
sbbb
gs
andb
xor
daa
adc
mov
outsb
ret
inc
aad
or
jmp
xor
pop
setbe
sub
or
add
fcoms
hlt
insb
sbb
scas
popa
push
orb
mov
out
add
not
pop
add
cld
aam
add
mov
xchg
xchg
out
and
nop
pop
mov
sahf
xchg
push
inc
or
test
out
add
shl
imul
loopne
sar
out
inc
mov
fdiv
push
push
add
pop
mov
in
movsl
xchg
fsubl
jns
enter
xor
push
jo
fbld
mov
cmpsl
and
add
out
xchg
mov
dec
ljmp
out
fldenv
or
add
mov
insl
add
int
ficompl
outsl
add
cmp
xor
or
pop
push
hlt
dec
lcall
pop
jo
mov
rolb
and
rorl
loopne
hlt
insl
add
insb
add
enter
cmp
jp
xor
cmpsb
xchg
popf
mov
pop
dec
mov
mov
mov
mov
push
adc
test
mov
leave
jno
pushf
lods
dec
inc
test
sbb
cmp
add
xor
jge
push
rclb
xorb
nopl
lahf
add
sbb
ja
sub
xchg
lcall
push
mov
es
lods
inc
scas
cs
sahf
int3
bswap
sbb
cld
add
test
lcall
jnp
adc
xor
or
cmp
pop
sub
pop
clc
lock
dec
subps
sbbb
xchg
pop
inc
lods
sub
sub
mov
inc
mov
add
sar
or
mov
movsb
and
rol
sub
dec
dec
lods
jl
xchg
push
add
pop
ret
sbb
xor
jp
and
fimuls
iret
aaa
repz
aad
adc
xor
fisubs
int
ret
pusha
sub
push
lret
or
test
cmp
popa
add
jne
std
loop
add
je
ret
sbb
movsb
sub
bound
rorb
add
jbe
jne
cmp
pop
cmpsl
mov
lock
repz
mulb
nop
jl
push
loopne
push
stos
mov
dec
les
xor
test
in
andb
or
inc
dec
cvtps2pi
ret
out
leave
jle
fadds
add
push
stos
mov
jg
push
orl
xor
cmp
aam
cwtl
jo
insl
cmp
gs
inc
lret
pop
add
push
fnstenv
add
es
cmpsl
add
shrb
push
jge
add
iret
repz
bound
lret
mov
pop
mov
mov
mov
xchg
and
or
cmp
orl
jno
sub
icebp
jg
movsl
add
rclb
sbb
mov
sbbb
fimull
fistps
lret
jg
and
or
jp
jge
pop
mov
adc
into
mov
xchg
add
ja
in
add
add
or
negb
test
lock
ret
cltd
je
push
outsl
xchg
jge
add
push
pop
mov
mov
xlat
fcmovnu
dec
add
popa
lret
jns
rorb
bound
adc
jno
mov
andb
add
into
mov
or
pop
cltd
mov
jno
rclb
push
add
push
add
lock
test
adc
mov
or
int3
imull
cmp
add
mov
adc
arpl
mov
shrb
xor
xor
nop
add
lret
or
jp
out
xor
mov
int
xorl
cmpsl
out
cmp
leave
repnz
xor
out
xor
mov
mov
sti
xor
iret
cmc
push
add
push
push
push
test
leave
mov
cmpsl
loopne
sub
xchg
sbb
daa
mov
push
inc
rcrl
add
es
sbb
pop
aad
sbb
push
ret
fwait
cmp
adc
push
cs
add
add
cltd
iret
adc
add
pop
cmp
iret
add
aam
mov
cli
pop
add
outsl
aas
int3
push
push
sbb
test
imul
repnz
fwait
cmp
ret
cmp
stc
loopne
rcrb
imul
hlt
jns
popf
jbe
mov
aaa
arpl
cmp
sbb
shl
push
cltd
adcl
fisubs
aam
inc
push
mov
adc
js
jmp
push
xchg
mov
jecxz
add
mov
mov
in
add
and
mov
or
fcompl
push
xchg
push
jp
pop
dec
bound
pusha
push
dec
idivl
rcr
js
int3
pop
mov
mov
lock
mov
sub
push
add
push
rolb
add
ficomps
cmp
mov
add
mov
or
add
int
cmp
push
je
push
jmp
aam
mov
popf
mov
adc
xor
fcompl
pop
adc
adc
adc
and
inc
mov
jl
push
addb
lcall
andb
les
add
jmp
push
push
gs
loopne
and
inc
rcl
mov
adc
and
dec
fcoml
mov
adc
and
dec
les
or
add
mov
sub
mov
push
push
inc
cmpb
pop
adc
pop
bound
mov
pop
sbb
mov
inc
in
lods
loope
jecxz
inc
xor
adc
add
push
and
jmp
sub
adc
add
add
leave
cmc
push
or
mov
or
mov
push
jo
dec
add
jecxz
sub
xor
and
pop
sti
sub
movsb
out
xchg
in
add
xor
stos
jmp
push
push
add
out
mov
das
or
inc
dec
ljmp
sbb
mov
in
and
rolb
push
push
out
xlat
pop
shlb
push
add
mov
rclb
pusha
cwtl
cltd
int
or
movb
push
sbb
enter
mov
jle
jo
ret
mov
fnop
push
pop
pop
sub
push
ss
and
adc
nop
pop
ret
scas
add
sbb
sbb
inc
stos
add
sub
push
test
in
dec
or
out
loopne
bound
push
jle
popf
test
adc
inc
shll
push
iret
push
and
aad
fiaddl
cmc
xorb
mov
mov
fisttpl
adc
nop
xchg
push
iret
test
dec
push
repnz
sub
shl
push
push
out
cmp
xchg
xor
push
pop
adc
repnz
jo
pop
out
jne
and
sub
arpl
jae
push
movsb
push
mov
jg
adc
out
sub
xor
jae
or
or
inc
mov
or
sub
cwtl
fs
testb
repz
adc
sbb
and
into
or
cmp
psrad
pop
jp
cmpb
sbb
xlat
jle
mov
loopne
xchg
mov
mov
cmp
jp
testb
cli
js
js
pop
xor
mov
xor
xchg
incb
xor
imul
sahf
sbb
in
cmp
clc
add
addl
aaa
xor
or
in
cmpsb
clc
stc
xor
ljmp
lock
cmpsl
lock
dec
cmp
push
je
loopne
sub
test
in
or
fadds
divb
push
mov
leave
hlt
add
aad
je
sbb
cmc
xor
lret
sub
mov
xor
xor
imul
or
jo
ds
dec
in
andb
movsb
clc
xor
jp
repz
xchg
adc
sbb
rorl
ret
adc
or
cltd
add
movsb
add
stc
jg
mov
lret
or
jns
push
jle
inc
mov
rcrl
add
ljmp
sub
fldt
xchg
sbb
loop
xor
aad
jmp
filds
mov
jecxz
add
aaa
dec
or
loop
mov
and
lock
das
adc
data16
out
hlt
inc
fs
push
sbb
aaa
test
out
pop
jnp
aas
xor
add
stos
aam
int
cmp
xchg
andl
gs
orb
ds
movsl
add
aaa
or
adc
dec
mov
dec
aas
addr16
push
and
mov
dec
in
xchg
fmulp
sub
cmp
and
mov
adc
test
jnp
in
jp
or
mov
hlt
dec
push
adc
push
shll
sbb
pop
cs
or
xor
push
addr16
pushf
mov
xchg
add
dec
aaa
jle
add
outsb
xor
mov
mov
mov
add
fadds
andb
cli
adc
js
subb
sti
addr16
mov
inc
rol
mov
mov
push
loop
mov
fsubs
sub
xor
jno
add
rcrb
mov
dec
js
shrl
push
addr16
dec
rcll
data16
js
xchg
add
and
pop
fidivrl
lock
test
sbb
inc
sbb
mov
arpl
dec
sub
repz
jg
pop
fcoms
ljmp
jae
pop
jl
pusha
out
mov
rorb
addl
fists
adc
push
mov
shr
imul
mov
sub
lret
dec
xchg
mov
cmp
stos
and
bound
aas
rclb
addr16
lcall
repz
xor
dec
adc
cwtl
div
push
push
dec
xchg
push
sbb
in
dec
pusha
add
add
les
or
or
movsb
sbb
sbb
dec
or
add
xchg
pop
lcall
movsl
mov
add
cmpsb
hlt
push
xchg
movsb
in
push
mov
imul
mov
insb
xor
loope
add
sbb
dec
inc
loop
scas
dec
add
cwtl
add
jl
push
fwait
or
clc
lahf
ret
adc
icebp
sbb
cmpsl
daa
cltd
cmp
subl
insl
sarb
pop
popa
loope
add
or
lods
adc
movsb
mov
adc
cwtl
movsb
xchg
mov
or
inc
cmpsb
sub
cltd
adc
cmpsl
andl
sub
pusha
test
xchg
or
or
or
add
and
pop
fwait
sub
inc
es
adc
or
xchg
scas
mov
mov
lcall
mov
mov
movsb
push
jmp
add
rcr
add
jg
sbb
inc
icebp
movsl
and
dec
push
std
or
pop
mov
cld
je
or
xchg
mov
xchg
cmpsb
or
bndldx
adc
stos
adc
xor
jmp
int
mov
fwait
xor
adc
and
jne
sbb
sbb
cmp
loopne
or
jae
leave
mov
inc
imul
sbb
dec
fcmove
jns
push
fisttps
and
shll
lret
outsb
xchg
sbb
mov
sub
movsb
mull
ja
jno
addr16
gs
pusha
xor
mov
cmp
push
hlt
fists
pop
sbb
dec
rcl
imul
mov
adc
ja
and
or
fs
test
add
adc
mov
mov
mov
cmp
cld
lcall
push
mov
enter
aam
lcall
sub
and
xchg
mov
in
movsl
or
popf
fwait
lcall
dec
sti
addb
lock
popf
mov
outsb
fistps
fcom
in
sahf
push
fdivs
fdivs
pop
push
sbb
push
cmp
sub
cmp
cmp
add
shrl
add
in
sub
mov
mov
adc
and
pop
add
loope
pop
adc
ja
mov
jns
jnp
repnz
mov
out
and
xchg
sbb
push
cmp
pop
call
lods
dec
mov
xor
mov
mov
out
icebp
scas
add
out
lret
adc
add
dec
dec
ds
call
je
imulb
cld
add
cmp
sub
adc
lret
adc
push
pop
xchg
sub
and
in
mov
sbb
movb
icebp
xchg
xor
mov
imul
dec
and
pusha
or
push
cmp
xchg
xchg
mov
leave
cmp
iret
cwtl
push
or
and
adc
push
xor
leave
and
lock
pop
mov
push
outsl
adc
push
or
and
lcall
adc
dec
cwtl
and
push
sbb
outsb
or
ljmp
push
xor
lock
mov
push
add
pavgw
inc
sub
in
leave
push
testb
loop
ret
push
into
sar
adc
pushf
sahf
aaa
xor
fwait
cmpsl
mov
add
push
aas
icebp
jg
xchg
in
hlt
std
xchg
pusha
fwait
int
cmp
mov
dec
inc
and
and
sbb
aam
and
pusha
or
jmp
jne
and
adc
add
int3
inc
pop
mov
sub
aaa
ss
dec
in
pusha
orb
sub
fiadds
mov
jecxz
adc
mov
cmp
out
cli
cwtl
xor
pcmpeqw
frstor
add
das
ljmp
rorb
inc
loopne
or
sub
add
and
adc
lret
movsb
imul
shll
stc
cmp
sbb
mov
add
inc
sahf
inc
stos
inc
int3
add
int3
sub
sbb
cwtl
mov
jbe
insb
xchg
hlt
sub
sbbl
test
aam
dec
inc
ss
cmp
cmpsl
ret
imul
scas
ud1
xlat
fbld
adc
shrb
js
xor
test
pop
lcall
lods
push
jbe
lcall
pusha
enter
xchg
push
adc
xor
or
or
fs
mov
into
xchg
test
mov
pop
push
data16
bswap
test
subl
cmp
adc
out
cmp
loop
jns
roll
ds
je
jo
mov
nop
xchg
jae
in
fisubl
ret
and
cli
add
lea
cmp
mov
test
pop
dec
pop
add
nop
hlt
push
jbe
add
or
xchg
fwait
jnp
les
cld
add
xor
test
cmp
xor
jmp
aad
inc
or
sbb
imul
pushf
pop
add
ss
movsl
andl
xchg
sub
cs
cmpsl
je
dec
mov
xchg
lock
or
into
pop
xor
pop
mov
push
inc
movsb
iret
add
imul
push
adc
dec
test
pusha
rcrb
sbb
in
leave
or
dec
test
daa
lods
in
rclb
roll
shrl
popf
xchg
xor
mov
aas
sbb
add
sbb
rolb
fadds
push
sbbb
xchg
mov
cli
mov
andb
sbb
popa
mov
pop
and
and
sbb
daa
sub
push
inc
mov
in
adc
loope
xchg
cmp
add
or
aam
gs
out
and
dec
mov
lods
out
pop
xor
add
mov
test
add
psraw
arpl
xchg
pop
in
nop
add
jl
pop
mov
filds
jno
arpl
pop
inc
nop
push
and
add
leave
dec
xor
xchg
sbb
incl
xor
fcoms
inc
rolb
push
mov
xchg
pop
adc
out
ret
inc
fcoml
and
cmp
les
cmp
xorb
testb
xchg
cmp
mov
lods
fwait
xor
mov
outsl
shlb
cwtl
and
cs
aam
dec
mov
nop
xor
mov
cmp
xchg
rorb
adc
pop
xchg
inc
fdivs
lods
out
add
mov
jns
xor
or
mov
add
inc
out
adcb
push
sub
aam
sbb
fldl
imul
xchg
test
ret
cmpsl
jno
arpl
jae
jmp
jb
data16
and
pusha
push
sbb
loope
loopne
xchg
mov
nop
lcall
cld
add
mov
xor
incb
add
lods
mov
dec
shll
bound
movsb
pusha
fs
je
cmpsb
shlb
mov
xor
add
sub
cld
dec
lret
je
shlb
ret
cld
xchg
adc
push
push
inc
adc
xchg
xor
pop
rclb
sub
rcrb
fs
ficomps
add
idiv
mov
dec
mov
adc
sub
dec
aaa
and
mov
test
dec
add
add
inc
cmp
sbb
aaa
or
int3
mov
dec
jns
je
xor
jo
dec
inc
and
inc
lock
sub
arpl
mov
test
mov
sbb
ret
dec
lret
and
push
in
sbb
cld
fbld
lods
pop
mov
iret
xor
xchg
das
ja
xchg
adc
fldt
sub
dec
xchg
jo
pop
addb
sub
mov
mov
pop
and
cmpl
setp
mov
sub
movb
sub
cmp
jmp
xchg
loopne
dec
adc
std
shlb
dec
rolb
das
insb
sahf
movsl
inc
ljmp
aas
imul
shrl
pushf
xchg
ds
mov
int3
sub
mov
xchg
jmp
inc
inc
pop
xor
adc
push
mov
addl
test
loop
or
push
and
mov
adc
adc
or
test
out
leave
loope
sub
jae
rcr
xchg
mov
xor
shlb
cwtl
lock
mov
ljmp
cwtl
data16
mov
ror
add
xchg
jae
xor
add
cld
ss
xor
sub
insb
adc
mov
scas
add
or
sub
adcb
test
ljmp
add
addl
faddl
leave
cmp
andb
loope
and
inc
pop
ret
inc
sar
dec
stos
jmp
add
dec
std
and
pop
dec
mov
dec
inc
in
push
push
push
in
loop
jae
cld
rorb
pop
jb
cwtl
fdivs
jmp
lods
aam
rorl
hlt
lret
sub
cmp
sub
xchg
push
popa
pusha
imul
aam
loope
adcb
mov
cmpsb
and
xor
pusha
mov
and
xor
mov
push
insb
rcrb
sti
cwtl
insb
or
inc
and
cmp
pop
faddp
mov
mov
mov
sub
mov
cmpsb
add
in
cs
add
lret
dec
and
out
adc
inc
mov
and
sub
orl
data16
cmp
push
or
cmp
adc
dec
out
je
add
sub
or
orl
inc
dec
or
mov
popf
xchg
shrl
jbe
in
or
push
rol
je
xor
in
sbb
adc
jnp
je
jecxz
movsl
gs
or
std
push
fs
rorb
aam
or
rorb
cmp
sub
add
mov
mov
incl
push
inc
pusha
and
add
cmp
xchg
inc
push
das
insb
add
xchg
cli
clc
add
mov
mov
inc
mov
movsl
in
adc
hlt
xor
test
jae
xchg
xor
mov
add
ss
jmp
lret
lods
fsubs
jno
int3
add
les
bound
sub
mov
cld
jne
int3
dec
in
adc
pop
rorb
xchg
loopne
xlat
add
pushl
enter
or
cmp
das
sbbb
rorb
fimuls
loop,pt
icebp
xchg
call
js
mov
adc
testb
addr16
popf
or
fs
or
nop
or
push
addr16
push
or
pop
push
stc
lock
setle
inc
test
lock
jmp
popa
mov
pop
sahf
in
adc
pop
cltd
test
or
xorl
popf
xchg
sub
push
cmp
adc
sbb
pavgw
push
dec
in
mov
and
test
ffree
jmp
pop
add
test
cmp
and
cmp
add
loope
inc
pop
sub
inc
xor
les
and
imul
sub
push
mov
add
xor
fwait
lcall
add
ss
addb
pop
push
fs
mov
mov
pop
je
into
in
xchg
mov
cmpsb
mov
ja
xor
pop
or
xlat
adc
inc
fs
test
adc
shrb
fwait
lea
mov
sbb
inc
cltd
dec
add
mov
rol
lret
gs
push
xor
sarb
and
loopne
push
adc
gs
add
and
jp
ds
xor
mov
cli
sti
fs
pop
mov
dec
lods
xor
aad
add
leave
mov
add
cmp
out
push
jl
lret
pop
pop
pusha
add
nop
cld
cmpsl
sbbl
fsubrs
sbb
or
dec
out
testb
cld
mov
jp
lahf
add
into
adc
sbb
xchg
arpl
add
pusha
fiaddl
addb
push
sbb
add
mov
jp
repnz
pop
cmpsb
insb
jno
add
dec
fiadds
lds
sbb
mov
push
cs
roll
lret
sub
cld
shll
rcrl
adc
pop
arpl
mov
or
sub
lea
shll
mov
xchg
add
cmp
mov
add
pusha
cmp
loopne
xor
sbb
clc
xchg
shll
mov
fisttpl
jecxz
add
cmpsb
scas
jae
push
loope
insb
push
jno
add
sub
jl
mov
clc
dec
call
sub
mov
inc
inc
jne
shr
sti
pop
dec
mov
orb
jp
fisubs
imul
stos
push
mov
adcl
dec
adc
shrb
test
cli
push
and
out
leave
jae
pop
add
insl
or
sarb
jno
mov
sbb
xchg
or
push
pop
cmp
dec
jecxz
in
mov
add
mov
ss
sub
push
jge
push
fsts
jo
add
enter
addr16
or
sub
shrb
clc
in
cmpl
aam
mov
sbb
cld
leave
mov
push
mov
fimull
pop
push
pop
loope
inc
xor
in
jno
and
fldenv
popa
sarl
fs
cmp
mov
pop
shl
add
jecxz
in
push
sub
push
inc
jno
arpl
add
sbb
fs
fsubr
mov
mov
movsb
adc
sub
sub
and
test
add
pop
mov
test
hlt
mov
sub
std
dec
sbbl
mov
jl
add
or
and
insb
cmp
fsubr
mov
push
test
js
fs
sbb
fcoml
or
stos
leave
bnd
mov
adc
inc
lods
adc
mov
or
aam
sbb
enter
adc
lock
dec
inc
xchg
inc
dec
push
or
nop
jno
sub
test
scas
enter
andl
jns
and
push
pop
xor
test
jp
dec
add
adc
movsl
inc
dec
xchg
sub
jnp
or
popa
testb
or
dec
clc
xor
or
bound
or
das
stos
insw
or
sub
pop
push
sub
mov
xorb
xor
faddl
in
xor
pop
push
pusha
int3
adc
jne
cmpsb
mov
sub
sub
and
je
mov
cmpb
mov
add
jnp
cmp
ret
dec
xchg
es
xlat
fidivrl
jb
imul
pop
adc
pop
jbe
add
sub
pop
inc
push
jecxz
inc
mov
mov
add
mov
push
jne
shlb
jmp
pop
add
in
cmpsl
jo
aas
mov
repz
in
or
testl
and
pop
add
push
and
popa
inc
pop
adc
icebp
dec
dec
mov
xchg
cmp
sbb
or
push
or
repnz
cmp
add
clc
inc
pop
add
adcl
popa
fsts
pop
mov
sub
cmp
jl
int
scas
mov
outsb
iret
push
call
jmp
dec
cmpsb
cmp
dec
add
cs
cmp
mov
push
out
hlt
or
aam
xchg
aas
mov
mov
in
out
clc
add
ret
or
push
icebp
dec
movsb
pop
pusha
mov
std
xchg
daa
rclb
inc
mov
cltd
les
aad
add
push
add
adc
popf
sub
lods
sbb
loopne
mov
add
dec
mov
pushf
jg
push
add
dec
scas
inc
cmp
je
pop
add
jg
mov
adc
mov
mov
dec
push
aam
add
mov
shl
xchg
push
mov
cwtl
add
lods
inc
mov
sub
and
or
arpl
mov
xor
pushf
adc
mov
and
cmp
xchg
movsb
dec
sti
and
and
aam
pop
aam
ljmp
jle
loop
loopne
and
mov
in
inc
int
mov
hlt
xchg
mov
dec
jae
xor
sbb
or
xchg
mov
dec
pop
sbb
xor
and
xor
add
sbb
xchg
jo
lcall
dec
scas
adc
and
push
addr16
push
insb
xchg
sub
enter
in
dec
orb
repz
or
add
daa
inc
sbb
stos
addr16
xchg
fiadds
rcrb
repnz
divl
inc
or
mov
add
lcall
push
adc
mov
inc
sbb
push
pop
std
mov
xor
mov
push
mov
mov
popf
mov
and
push
and
add
mov
fstpl
adc
and
pop
cmp
es
stc
sbb
mov
aam
out
pop
cmp
test
add
test
mov
out
adcb
arpl
stos
loop
add
push
xchg
fwait
into
aaa
clc
popa
bound
sub
cmpsb
popa
add
inc
lahf
or
cli
pop
pop
fadds
mov
cmp
test
and
repnz
fimuls
mov
mov
cld
shl
dec
or
or
sbb
sahf
mov
daa
mov
xchg
test
sarb
jmp
aad
cmp
shlb
mov
add
inc
and
jl
subb
mov
xchg
psrlw
adcb
popf
mov
sbb
sub
add
jl
js
xchg
cmpsb
js
or
sbb
sbb
adc
or
mov
add
and
push
cs
je
sarl
add
xchg
adc
xor
add
adc
xchg
adc
dec
cmp
dec
je
mov
mov
cld
into
rcr
lret
fdivrs
jmp
lock
mov
jae
pusha
dec
push
and
out
mov
rolb
sbb
add
add
push
test
int
jno
fadd
add
scas
adc
mov
add
iret
addl
ljmp
xchg
nop
jo
pop
sub
sbb
test
mov
mov
cld
mov
lea
push
mov
jmp
push
mov
mov
loop
scas
jne
jo
cmpsb
cltd
lds
sub
mov
iret
xor
fsubs
xor
jmp
push
daa
sahf
rcl
pusha
clc
pop
sti
es
es
je
dec
pop
daa
mov
loopne
loop
cmpl
andb
add
aam
jne
or
lret
push
push
pop
pop
fwait
test
push
add
add
js
test
mov
xor
mov
leave
dec
ljmp
shll
adc
sub
cmp
or
je
ror
icebp
aad
sub
and
orl
pop
adcb
pop
imul
fistpll
sub
int3
jp
add
mov
mov
sar
dec
pusha
fs
hlt
mov
sub
mov
pop
push
roll
sbb
arpl
adc
pop
adc
pop
xor
mov
mov
aam
push
in
stos
dec
sbb
lret
sti
dec
sub
mov
push
mov
andl
and
jge
lret
push
cs
and
dec
mov
pop
daa
mov
imul
js
pushf
mov
cmpsb
ret
aas
add
push
mov
dec
fldt
xchg
dec
cmp
sbb
ljmp
shlb
mov
clc
xchg
arpl
scas
pop
and
lods
or
add
nop
xchg
xchg
stc
sub
cltd
mov
pop
or
cwtl
jle
test
fsubr
add
clc
fs
mov
and
jl
sbb
xor
dec
sbb
xor
mov
rol
arpl
stc
fisubrs
add
enter
call
in
movsb
sub
xchg
or
add
inc
test
sahf
mov
fsubl
cmp
test
movsb
or
shll
cwtl
and
dec
push
mov
dec
and
mov
mov
mov
lret
pusha
imul
cmpb
dec
es
mov
cmp
scas
mov
or
nop
cmp
hlt
shrb
in
add
addb
cmpsl
jmp
cmp
and
push
loopne
dec
fwait
mov
aam
xor
iret
addb
fiadds
shlb
dec
push
shlb
or
std
xorb
dec
cld
sbbb
fmuls
ss
ficoms
and
daa
push
jp
in
in
mov
mov
cld
fdiv
cmp
jno
clc
iret
mov
jmp
xchg
or
cld
enter
arpl
mov
or
jecxz
inc
ja
push
repz
sbb
xchg
xchg
jae
or
clc
jae
add
adc
jns
dec
xchg
pop
test
sub
mov
add
xor
xor
pusha
leave
cmp
xor
sub
frstor
and
pop
subb
adc
jl
sbb
or
push
js
dec
jl
mov
adc
lods
add
or
int
and
sbb
add
aaa
xchg
pusha
xchg
pop
inc
adc
pop
mov
in
dec
nop
adc
test
lea
push
cmpsb
cmp
insb
subb
add
dec
xchg
jae
adc
push
and
mov
pop
xchg
scas
sub
test
mov
sub
faddl
xchg
aaa
mov
dec
or
mov
or
push
mov
cmp
adc
pusha
jne
rclb
mov
shll
pop
nop
jl
mov
mov
rcrb
adc
mov
adc
sub
lods
or
fsub
insl
pop
sahf
pop
in
dec
sbb
mov
mov
sbb
push
inc
sarb
jmp
xor
dec
push
fnsave
fs
or
cli
andb
cwtl
xchg
arpl
jg
and
aam
into
cmp
mov
dec
inc
pop
push
clc
push
insb
mov
pop
mov
outsl
orl
addr16
jb
shrl
add
ret
test
sbb
dec
rorb
push
and
aas
call
push
ret
add
sbb
clc
cmp
dec
mov
sbb
fisubs
push
aam
je
test
mov
adc
jo
clc
pushf
mov
test
and
cwtl
pop
lods
push
push
cld
mov
rolb
dec
adc
pushf
adc
inc
das
add
adc
adc
adc
shll
lret
pop
mov
les
mov
fs
lret
gs
pop
xchg
rorb
jge
outsb
int
loopne
call
sub
mov
push
lret
adc
insb
push
inc
aam
and
xor
xchg
add
data16
hlt
mov
dec
xchg
scas
lock
xor
fcom
lods
in
mov
xor
les
addb
fildll
hlt
aam
mov
xchg
cmpb
iret
pop
sbb
out
add
in
and
xchg
ds
mov
jmp
aam
je
xchg
mov
adc
xor
add
idivb
pusha
mov
mov
pushf
add
in
dec
in
mov
fldl
and
call
xor
lods
fsub
mov
xor
inc
xor
imul
pop
mov
aam
cltd
mov
pusha
push
pop
jmp
dec
clc
and
xchg
jmp
add
in
out
iret
imul
inc
cwtl
out
in
mov
mov
lods
add
movsl
je
push
inc
mov
cmp
test
add
push
pop
adc
xor
add
xor
fsubs
or
mov
cs
pushf
pushf
loop
daa
and
dec
cmp
pusha
rorl
adc
xor
push
dec
shlb
ja
addr16
repz
adc
inc
mov
pushf
pop
mov
add
repz
inc
cmpsl
xchg
shlb
ret
mov
or
jbe
mov
dec
push
dec
lods
add
inc
in
dec
cltd
and
sub
loop,pt
xchg
test
cmp
and
addl
test
dec
dec
inc
test
lods
fmull
cmp
outsl
adcl
and
notl
add
xchg
out
fadd
sbb
cmp
add
dec
popf
ret
test
nop
js
inc
pop
cmpl
cltd
cmp
jne
inc
jae
sbb
ss
loopne
pop
xor
mov
add
jl
or
sarl
push
insb
lea
inc
rcrb
loop
adc
fcoms
and
jg
jo
pop
leave
add
mov
add
daa
sub
jle
jo
push
lret
add
cmc
call
sub
xchg
in
pop
add
mov
in
and
push
pusha
andb
in
int3
pop
hlt
test
es
xchg
mov
add
push
inc
mov
cmpsb
idivb
cwtl
mov
or
mov
imul
lods
gs
and
ret
mov
aam
add
aaa
loope
and
jns
mov
add
les
xchg
add
inc
cld
lock
mov
add
xchg
shrl
aam
lcall
test
and
mov
adc
jno
sbb
mov
inc
jl
xchg
inc
mov
push
sub
mov
add
adc
pop
jp
js
xorb
and
pop
and
dec
inc
inc
nop
lods
add
insl
cmp
mov
mov
add
cmp
pop
xchg
adc
mov
mov
sub
cmp
jl
rclb
mov
or
cmpsl
js
add
add
mov
mov
clts
mov
mov
mov
dec
dec
or
mov
fiadds
and
repnz
add
lods
imul
cwtl
add
mov
nop
xchg
and
or
or
mov
pop
dec
adc
and
lods
mov
test
in
cmp
adc
pushf
cld
inc
xchg
mov
fdivs
lock
dec
push
cmpb
mov
and
shrb
clc
cltd
test
mov
push
jl
in
fcmovu
lret
arpl
pop
pop
clc
push
rorl
add
popa
sub
xchg
xchg
bnd
push
in
or
test
aam
int
sub
mov
stc
mov
and
pusha
sbb
dec
pop
jl
mov
dec
adcb
mov
rolb
addr16
arpl
js
add
hlt
sub
sub
jl
fsubl
push
test
push
mov
fiadds
pop
push
xchg
leave
add
gs
lret
add
and
das
outsl
xchg
sbb
and
sbb
add
jecxz
cltd
add
inc
add
sbb
push
xchg
mov
subl
inc
jbe
movsb
mov
scas
lcall
leave
ja
daa
subb
fadds
add
xchg
pop
les
pop
fidivrl
insb
xor
cmp
adc
stos
add
mov
mov
cmc
in
and
inc
lea
xor
divps
data16
jb
cmp
sub
add
out
arpl
lock
imul
jnp
daa
push
ds
xchg
int
cmp
xor
mov
mov
pop
ret
inc
mov
mov
cwtl
pop
xlat
rclb
sub
andb
dec
xor
mov
push
and
mov
adc
add
sbb
xor
and
mov
outsl
int3
in
add
and
cmp
or
fucomp
subb
jne
adc
dec
add
je
mov
pop
add
paddusb
sub
push
xchg
mov
or
mov
add
xchg
outsl
mov
mov
xorl
rclb
fmuls
add
sub
add
sub
and
lret
xor
insb
cmpsb
dec
sbb
addb
pop
mov
adc
nop
or
mov
xchg
sub
hlt
and
or
out
dec
test
int
inc
inc
push
fsubp
stos
mov
sub
or
outsl
mov
sbb
jnp
rorl
push
jae
test
mov
sub
mov
mov
adc
and
fnstsw
mov
sbbb
xchg
mov
mov
cmp
sbb
ss
cmp
jmp
cmp
and
jb
jo
push
push
pop
cltd
je
cmp
lahf
mov
push
pop
ss
aaa
inc
dec
data16
sub
lret
push
adc
mov
jo
pusha
sub
jbe
mull
mov
mov
push
and
inc
mov
xor
outsl
adcl
cmp
mov
imul
outsl
inc
fsubr
mov
add
ss
int3
nop
mov
sbb
lods
mov
movb
xchg
fwait
xchg
inc
mov
xchg
push
jle
arpl
add
nop
push
inc
and
pusha
aas
or
jns
dec
daa
xchg
cwtl
push
mov
cmpsb
lea
cwtl
inc
sub
dec
lea
push
nop
adcb
adc
in
fdivrl
and
es
or
fists
test
and
add
mov
aaa
xor
mov
subb
aam
pop
adc
adc
mov
cmp
nop
cmp
idivb
lods
mov
push
xchg
fldcw
inc
adc
jge
movsb
mov
mov
in
ret
rcrl
add
sub
sub
inc
loop
or
sbb
lds
xor
sub
pop
mov
sbb
outsl
sub
in
ret
xor
fdivrs
jb
mull
in
adc
adc
cwtl
sub
test
cmp
xor
sub
fldcw
pusha
mov
in
add
fcmovne
mov
aas
cli
xor
lods
sbb
push
mov
jnp
cmp
fldcw
jmp
mov
pop
sbb
aas
push
xchg
movsl
sub
mov
ret
loope
and
out
popl
sahf
rorb
xacquire
dec
cmp
add
cmp
and
aam
pop
setle
or
sbb
cltd
mov
ja
orl
xchg
sub
adc
bound
stc
mov
test
or
add
outsl
or
loope
mov
scas
hlt
jle
mov
dec
imul
out
xor
js
mull
sbb
pop
or
xchg
xchg
out
shlb
testl
lea
bnd
push
add
jb
mov
xchg
popa
xchg
and
arpl
xor
push
xorl
dec
pop
xchg
push
adc
xchg
addr16
inc
ret
push
sbb
test
pop
rorl
icebp
inc
and
out
hlt
sub
jecxz
mov
cmpsb
cmp
stc
xchg
inc
lods
data16
shrb
pusha
aam
lock
movsb
lahf
xchg
je
push
fwait
pop
pop
rcr
mov
mov
push
cs
mov
xor
pop
inc
out
arpl
pushf
imul
mov
push
popa
pop
pop
int3
iret
in
xchg
ret
stos
xor
call
mov
stc
adc
nop
jmp
mov
cmp
shrl
hlt
lret
mul
xor
add
in
sbb
jae
les
sub
mov
out
call
mov
mov
inc
fsubrl
mov
xchg
or
push
pushw
test
lods
mov
arpl
xor
es
outsb
pop
cmpsb
jb
or
adc
mov
inc
mov
popl
lahf
aam
mov
hlt
loop
inc
ret
xchg
fimull
push
outsb
mov
popf
dec
mov
dec
sti
push
sub
lods
push
mov
in
add
repz
dec
ja
arpl
cs
stc
xor
and
and
push
loopne
add
cmp
and
scas
mov
jl
in
das
fs
loopne
loop
sub
jp
xor
mov
fisubs
dec
add
inc
jne
sub
lods
pop
nop
out
add
jns
inc
mov
push
sbb
jle
es
movsl
pop
lods
enter
adcl
aam
ret
and
mov
lods
vpminsw
mov
movsb
and
xor
lcall
fucom
in
cwtl
mov
or
pop
cmp
xor
int
loopne
dec
leave
xor
push
out
rol
dec
or
and
push
adc
cmp
lahf
shr
shlb
mov
daa
mov
cwtl
jnp
jnp
push
and
sahf
add
pop
imul
mov
dec
aaa
or
leave
bound
mov
xor
js
mov
pop
repz
popa
lods
inc
push
mov
pop
jg
mov
inc
cmpsb
js
sub
adc
sub
imul
popa
idivl
sub
into
mov
popf
push
addr16
cmp
fists
jmp
dec
movsb
lock
pop
sub
in
or
push
mov
jge
sbb
stc
mov
lea
decb
pop
lcall
jne
cmp
shrl
cmp
cmp
xchg
inc
arpl
cwtl
cwtl
and
pusha
mov
mov
loop
sub
aas
pop
and
leave
out
test
inc
ss
les
shll
in
adc
mov
inc
push
push
push
repz
dec
or
das
into
cs
pop
addl
lods
sub
sbbl
scas
jp
ss
sub
fstpt
in
pop
sub
daa
mov
scas
aad
test
out
inc
push
outsl
int
xor
fstl
mov
inc
xor
sbb
pop
mov
jl
xor
sub
lock
push
inc
shlb
push
popa
dec
sub
fucom
cli
xor
mov
adc
and
sti
mov
mov
mov
arpl
pop
test
push
jb
cmp
outsb
stos
jle
mov
jg,pn
mov
les
roll
and
xchg
out
xchg
clc
adc
jp
push
es
aad
fldenv
and
or
mov
out
jecxz
fsubp
dec
pop
xchg
fcoml
pop
movaps
mov
ret
mov
adc
and
mov
je
notl
adc
daa
mov
mov
or
jl
cmp
inc
fldl2e
testb
mov
push
icebp
fisubs
aad
in
xchg
pushf
or
or
push
testb
in
nop
add
xchg
inc
scas
push
jo
insb
push
rol
inc
mov
clc
mov
cwtl
insb
or
hlt
xor
or
mov
loop
mulb
sub
push
jecxz
xor
mov
dec
xor
and
loop
cs
mov
popa
imul
jae
mov
push
adc
aad
xor
lods
add
insb
pusha
and
sub
pop
int
sbb
add
lock
fnstenv
adc
sbb
mov
cld
ss
inc
scas
adc
stos
loop
mov
push
loop
dec
pop
pop
bound
int3
or
adc
and
push
push
sbb
push
in
inc
rclb
jmp
leave
add
imul
mov
call
out
imul
or
loope
gs
fidivl
add
inc
loop
mov
wbinvd
flds
arpl
pop
jo
movsl
jns
mov
xchg
outsl
jb
adc
popa
sbb
inc
jns,pn
frstpm(287
mov
push
movsl
dec
add
mov
addr16
push
les
rorb
jae
xor
in
movl
movsl
loopne
push
or
inc
sub
addl
mov
xor
pop
in
inc
fstpl
cmp
clc
xor
loope
mov
enter
cli
int3
les
ret
in
dec
mov
push
dec
jg
aad
mov
jb
negl
dec
adc
rcll
push
insl
mov
xor
imul
jge
inc
ficoml
inc
mov
dec
add
aam
cmpsb
push
xchg
jg
ljmp
int
push
dec
iret
ds
dec
xor
pop
mov
fldl
insb
jne
into
jp
ret
fs
shrl
dec
dec
cs
pushf
and
pop
adc
mov
xchg
push
pop
adc
dec
mov
dec
js
jno
shrl
out
mov
nop
adc
mov
movsl
xor
out
sbb
dec
xor
lock
or
inc
lcall
jmp
xchg
lret
aaa
sub
fdivl
fs
mov
addb
mov
push
inc
call
inc
and
dec
fdivr
xchg
or
mov
sub
movsb
test
pop
repz
gs
stc
inc
iret
mov
or
dec
movsb
jge
dec
arpl
repz
jmp
push
popa
mov
dec
pop
push
mov
mov
cmpsb
rorb
jp
rcl
aad
pusha
inc
pop
dec
sbb
xor
mov
jne
lds
cmc
mov
out
mov
or
sbb
in
dec
and
and
push
inc
jl
and
cmp
pop
pop
jge
dec
xor
add
dec
mov
add
or
jmp
mov
sub
aas
std
push
sbb
jge
push
add
fsubl
sbb
pusha
fstpl
daa
push
push
sub
inc
cli
gs
inc
pop
add
pop
dec
repz
adc
push
xor
rolb
stos
adc
mov
int
out
cltd
mov
add
pop
shl
push
sarb
jge
and
push
mov
xorl
mov
push
cmc
jo
arpl
and
cld
insl
push
jae
and
or
sbb
sub
insl
mov
push
xor
cmc
aad
mov
movsb
shlb
inc
jecxz
arpl
pop
fs
push
fisubs
cmp
call
add
fisubs
mov
jae
xlat
daa
test
or
and
popf
cmpsb
clc
cltd
cmp
mov
ret
mov
push
lcall
xchg
adc
sti
fnstenv
lds
push
xor
repnz
call
hlt
out
mov
in
icebp
cmp
pop
fcompl
jmp
lds
cmc
fnsave
iret
iret
enter
dec
rcl
pushf
and
mov
xchg
add
push
lea
adc
inc
into
mov
cs
xchg
rcrb
mov
dec
sub
jb
xor
ds
fucomp
jp
bound
int3
pop
add
lahf
or
push
movsb
and
adc
pop
addr16
outsl
dec
xchg
cmp
mov
mov
mov
cmp
lret
add
fidivl
jge
inc
sub
ljmp
fmul
je
sub
lock
rcrb
sub
mov
inc
mov
test
adc
push
mov
cmpsb
movsb
dec
mov
jl
push
adc
cmc
xchg
loopne
sbb
push
lret
int
mov
testb
dec
sbb
stos
je
push
sub
sbb
iret
popa
dec
jne
sub
and
stc
repz
in
inc
push
pop
repnz
lea
loop
out
pop
xchg
xchg
mov
sti
xchg
daa
mov
dec
adc
add
int
xor
loop
test
lds
loopne
xchg
cmp
int
aas
cmc
mov
fs
xor
mov
test
jbe
push
xchg
pop
nop
adc
mov
out
lcall
movl
shlb
pop
out
or
mov
arpl
mov
orb
pop
sub
mov
xchg
cmp
jmp
jmp
sub
lds
add
sbb
arpl
mov
dec
mov
mov
fisubs
pusha
outsb
inc
jno
sbb
sbb
lret
sbb
add
andl
je
repnz
movsb
xor
push
sahf
mov
sbbb
mov
or
bound
ss
adc
push
ret
add
push
mov
mov
mov
sub
mov
xor
add
fsqrt
add
lods
data16
test
jmp
call
int3
call
adc
jae
rcrl
xor
mov
js
pop
mov
jnp
mov
or
stos
mov
mov
inc
push
push
popl
and
lret
andb
icebp
push
aas
bound
and
jp
xorl
adc
sub
adc
fstl
dec
mov
mov
push
out
fiadds
leave
cmp
sub
push
mov
cmpsl
add
push
enter
sbb
jnp
and
sbb
mov
mov
mov
repnz
imul
pop
lea
push
cmp
xor
repz
xlat
dec
xchg
xlat
mov
mov
outsb
sub
fldcw
insb
pop
inc
or
pop
jb,pn
test
out
pop
jns
inc
pop
adc
pop
xor
sub
dec
ret
pushw
xchg
mov
mov
sub
lret
ljmp
push
daa
xor
inc
push
or
cmpsl
and
xor
lcall
mov
lret
or
sbb
jno
jmp
sub
xor
ret
mov
rcrb
imul
into
loop
mov
mov
outsb
xor
js
push
push
xchg
sbb
mov
pop
lock
fsts
inc
repz
addl
mov
and
or
xor
sub
jp
cmp
notl
xor
lods
mov
subb
aad
lods
cwtd
pop
orl
int3
cmpsl
add
repz
in
jmp
dec
insl
xchg
jl
stos
dec
mov
and
pop
jne
push
xchg
leave
push
repnz
lock
repnz
fldcw
in
es
push
pop
fstpt
addl
dec
lock
jno
flds
test
mov
sub
xor
mov
repz
cmp
fidivrl
or
out
aam
lock
add
negl
icebp
push
cld
xchg
or
adc
stc
sbb
pop
push
adc
test
lods
cmp
mov
out
add
or
cmp
imul
test
mov
mov
stos
pop
cmp
jl
mov
subb
int
testl
pop
sub
scas
add
jnp
push
add
push
psubd
call
lods
lret
iret
adc
call
shll
jge
mov
rorb
mov
icebp
cmpsb
lret
pushf
cmp
outsb
sahf
mov
popa
jb
or
jge
inc
rclb
mov
aaa
lods
and
cli
pop
jnp
cmp
add
popl
fisttpll
hlt
xor
and
cwtl
xchg
mov
add
xor
sahf
adc
cmp
sarb
fisttpl
sbb
lock
adc
test
sub
enter
jo
and
jnp
lret
stc
add
cwtl
lods
mov
outsl
pop
xor
mov
jns
mov
lds
push
jl
or
pop
int
stc
mov
fcmovnu
and
je
mov
movsl
fcmovnb
fs
loop
das
cmp
andb
xchg
or
inc
nop
mov
enter
jecxz
addb
and
dec
and
or
pop
mov
repz
add
movb
imul
lock
mov
xor
cmp
lds
stos
mov
push
sub
in
adc
in
mov
push
and
imul
fs
xchg
adc
pop
inc
inc
and
xor
or
popa
jmp
int
add
arpl
and
nop
pop
mov
or
fwait
jb
mov
enter
rcl
icebp
sub
mov
sarb
outsl
sub
shr
icebp
dec
mov
cwtl
movsb
int
and
imul
fs
subl
mov
mov
push
les
rcrl
das
movsl
mov
lcall
mov
lret
test
pop
mov
cmp
pop
push
cmp
and
mov
sbb
mov
jmp
mov
xorl
roll
mov
mov
xor
mov
test
lcall
adc
mov
dec
pop
or
jmp
mov
dec
idiv
and
out
daa
cltd
subb
dec
or
sub
push
dec
mov
mov
push
cli
ljmp
jns
sub
mov
cmp
jbe
mov
xchg
lcall
dec
xchg
jle,pn
jg
fstps
or
lret
int3
sar
aad
pop
lret
rcl
ss
adc
mov
lea
rol
mov
cmp
inc
ficoms
xor
ret
imul
or
sub
aas
cmpsl
pushf
jl
sbb
add
fyl2x
push
daa
rolb
dec
jne
dec
les
mov
cmc
jge
fldl
adc
add
sbb
inc
push
je
push
xchg
cmpsb
xchg
xchg
xor
ljmp
push
adc
mov
mov
sbb
loopne
adc
fisubs
sub
cmp
test
jo
adc
xchg
subps
ret
add
add
fsubrl
push
push
or
aaa
mov
jbe
mov
movsb
ret
cwtl
fisubrl
es
imulb
popa
mov
push
bound
mov
and
adc
push
dec
dec
movsb
inc
sbb
mov
adcb
cmp
push
and
pop
xchg
jno
sbb
pop
push
mov
push
adc
fwait
mov
outsl
mov
add
push
xchg
mov
imul
mov
push
pushaw
adc
fmuls
mov
fcoms
aam
mov
js
push
in
adc
popf
mov
ficomps
cmp
lea
cmp
push
mov
in
push
cmp
sub
dec
push
popf
lahf
jle
and
lods
xor
push
xlat
xchg
lahf
sub
ret
jns
scas
inc
cmp
gs
mov
mov
jl
push
add
mov
aam
xor
sub
int
les
push
add
mov
mov
cmpsb
mov
jns
inc
mov
dec
sbb
xorl
das
clc
push
or
mov
and
xchg
push
out
cs
and
dec
mov
loopne
or
dec
cmp
sbb
jl
sarl
push
andb
daa
jns
clc
mov
dec
mov
mov
dec
xchg
jne
out
mov
mov
mov
dec
in
jp
xchg
mov
cltd
jge
xchg
mov
pusha
xor
add
hlt
lahf
in
cmp
add
out
cld
dec
push
in
inc
test
and
daa
outsl
mov
es
xchg
or
rcll
enter
or
pop
orl
mov
and
xor
add
lock
sub
rcr
add
aaa
out
and
shlb
enter
pop
add
jmp
sub
pop
inc
stos
mov
sub
in
fcomip
es
sahf
mov
mov
shll
js
push
adc
mov
bound
mov
pusha
lods
add
movsb
xor
jne
subl
aaa
in
loope
dec
cld
outsl
dec
icebp
push
adc
jns
mov
dec
and
adc
sub
inc
or
add
mov
lret
jne
jns
int3
inc
aas
imul
sbb
imul
mov
push
data16
cmp
ds
inc
aaa
push
out
cmp
cmp
lahf
xchg
ja
test
cld
imul
mov
mov
mov
aam
mov
inc
nop
bound
mov
sub
jne
cmp
xchg
jne
mov
dec
lods
inc
mov
cmp
mov
mov
lods
sbb
dec
jnp
cwtl
lock
addr16
lahf
jmp
xor
fistpll
pop
ja
mov
jmp
pushf
sbbl
rcll
loop
out
fwait
mov
mov
test
imul
test
sub
inc
out
lcall
pusha
jae
test
mov
push
out
inc
fistpl
ret
mov
clc
insb
sbb
sahf
adc
daa
mov
xor
add
rolb
gs
icebp
cltd
jo
ret
add
mov
mov
cwtl
loop
incl
mov
mov
int
rcll
rorb
inc
int
popf
adc
cmp
push
fstps
dec
add
cmp
and
repnz
add
mov
ret
and
xchg
imulb
test
push
ss
mov
mov
imul
enter
xchg
rorl
lock
cmp
xor
sub
adc
lods
dec
test
jecxz
ljmp
sub
jbe
and
mov
faddl
pop
inc
test
mov
les
fmull
pop
mov
adc
or
jno
dec
inc
inc
cmpsb
lcall
push
sbb
dec
jbe
sub
popl
dec
popf
aaa
call
mov
or
and
in
jno
push
imul
test
in
cmpsl
std
mov
xorb
mov
mov
xchg
sbb
nop
sbb
sarb
int3
sub
jp
jnp
nop
xchg
lods
mov
loope
dec
es
repnz
sbb
mov
gs
insl
imul
fbld
cmc
sub
dec
int
fists
mov
push
lea
mov
or
loopne
jo
xchg
mov
hlt
js
bt
mov
inc
jo
std
jl
ja
call
push
dec
lret
mov
add
and
cs
in
fwait
nop
outsl
jae
sub
insl
adc
xchg
sub
shll
popa
push
out
add
fcomip
fistps
pop
and
mov
mov
mov
out
or
std
idivl
cmp
pop
jp
pop
out
add
sbb
or
xor
andl
pop
je
lods
jnp
out
jo
or
repz
inc
sti
adc
mov
dec
push
shll
add
popf
dec
sahf
or
rcr
add
pop
and
jle
push
xchg
js
in
add
xor
out
enter
jmp
push
test
scas
sbb
mov
cs
sub
or
filds
xor
test
insl
mov
cmc
inc
mov
mov
mov
arpl
push
pusha
pop
pop
push
mov
in
cmc
inc
or
in
hlt
sub
fsubl
adc
and
es
or
push
andb
pop
pusha
xor
adc
ja
aas
out
xor
xchg
dec
int
jae
sbb
or
and
notl
push
cmp
icebp
or
sbb
push
je
movsb
inc
adc
push
movsb
bswap
jnp
in
imul
ret
xor
clc
sbb
and
and
aaa
cmp
cwtl
add
inc
sub
add
hlt
xchg
mull
clc
mov
cmc
mov
pop
or
addb
aaa
cmp
and
xchg
pop
shlb
test
mov
fwait
sbb
xlat
ja
dec
jbe
or
ss
dec
gs
push
jp
sti
dec
cld
dec
lret
push
addr16
loope
push
jl
hlt
out
cmp
repnz
outsb
aas
jb
cmp
push
sbbl
and
testl
push
adc
sbb
cltd
cmp
psubsb
mov
das
dec
mov
inc
out
cmp
push
imul
and
pop
sbb
fcmove
jns
pop
mov
clc
nop
pop
inc
push
jmp
add
addr16
les
dec
jns
add
xchg
mov
imul
lock
sahf
and
push
sbb
sub
push
call
inc
xor
divb
mov
ss
and
push
cmpl
sub
dec
xor
mov
mov
ret
pop
test
and
mov
mov
enter
push
jo
adc
jb
adc
mov
je
adc
pop
add
je
mov
push
xchg
fnstenv
popa
int3
pop
stos
push
inc
cli
out
shr
scas
mov
shrb
jge
cmc
mov
cli
mov
stc
pop
js
sub
cmp
cltd
bound
mov
sbb
and
in
out
daa
jb
test
add
push
test
sti
or
addb
add
lea
in
orl
mov
fildll
test
outsl
sbb
push
pop
pop
push
mov
dec
jno
jecxz
movsl
cld
and
or
repz
rorl
daa
push
xchg
or
pop
adc
in
lret
or
mov
or
pushf
sub
adc
mov
xor
lahf
push
mov
push
or
pop
imul
int
cmpsb
ja
addl
hlt
cmpsl
lds
ret
cmp
lret
add
ds
mov
mov
stc
andl
sub
push
mov
mov
add
es
repz
dec
push
xor
xchg
nop
push
insl
xor
imul
icebp
cmp
arpl
ds
inc
sbb
out
inc
xor
cli
mov
leave
pop
xchg
in
les
les
xchg
hlt
add
or
or
mov
rcrb
adc
mov
push
and
push
mov
cmp
mov
dec
jnp
jns
repz
mov
aam
mov
insb
xchg
and
jmp
outsl
push
bound
ret
call
lea
in
mov
pop
rcll
cmp
xchg
push
xor
mov
dec
gs
js
sbb
and
sahf
mov
into
clc
dec
cmc
bound
jmp
fcomi
call
mov
dec
mov
and
mov
pop
mov
and
lods
in
les
das
adcb
pusha
das
mov
pop
daa
push
dec
jbe
jae
mov
pushf
xchg
push
lock
jecxz
fmuls
loope
sbb
push
mov
cmpsb
sub
cmpsl
jl
dec
inc
push
out
xchg
xor
xchg
in
hlt
pop
mov
push
and
sub
push
push
dec
inc
insl
out
aas
lcall
xor
and
or
dec
insl
ja
dec
fwait
inc
test
rclb
xchg
xchg
je
imul
mov
cld
imull
lock
add
bound
or
inc
or
popa
cmp
lds
push
imul
imul
test
divb
aas
out
inc
lret
lds
mov
jl
add
fbld
aaa
notb
dec
enter
and
ss
and
adcb
sbb
int3
xchg
sub
adc
sub
or
daa
in
ret
xor
test
cmp
pusha
in
add
stc
push
leave
gs
mov
or
and
aas
push
xlat
lcall
xchg
mov
jg
jnp
inc
xchg
dec
xchg
sahf
popf
dec
cmpsb
shlb
loopnew
xlat
dec
mov
insb
cmp
pop
add
mov
xor
adc
loop
xchg
push
jge
mov
push
ficomps
lds
hlt
lock
push
push
imul
pop
sbb
rcrl
xchg
mov
int3
insl
pop
out
or
je
lgs
pop
adc
lret
sbb
and
ds
dec
mov
outsb
fwait
dec
mov
shlb
jbe
mov
test
outsb
adc
inc
arpl
mov
aaa
popf
lods
into
je
rorb
stos
stos
add
cmp
fidivs
mov
jbe
rcr
push
repnz
je
das
pushf
push
push
shlb
shll
lahf
pop
jb
lods
loop
shlb
inc
mov
dec
arpl
push
cltd
mov
popa
sbb
les
jg
sbbl
inc
pushf
pop
mov
sub
cmc
scas
inc
adc
mov
or
xchg
shlb
lahf
sub
push
push
in
jnp
je
lods
je
addr16
andl
mov
jmp
mov
in
push
ja
lret
pop
mov
mov
roll
push
mov
nop
inc
mov
hlt
inc
sub
outsb
mov
repnz
sarl
call
sbb
inc
lock
mov
out
pop
int
jl
sbb
add
pop
imul
cltd
xchg
fs
cmp
xor
int
push
or
aaa
jl
mov
and
in
or
or
je
fiaddl
mov
das
daa
mov
sbb
and
fcoms
jle
subl
cwtl
cwtl
out
jp
outsb
dec
xchg
stos
cmp
insb
mov
imull
bound
adc
or
rolb
call
aad
mov
pop
aas
xchg
dec
repz
movsb
cli
xor
aas
out
and
orl
sub
inc
icebp
mov
jg
lods
push
pop
add
push
xchg
sahf
das
sbb
push
mov
add
mov
ret
je
sbb
jnp
and
cwtl
mov
mov
lahf
inc
xor
adc
mov
mov
insl
mov
mov
and
sti
das
lcall
out
xchg
sbb
shll
cmp
mov
pop
cmp
pop
cmp
jae
pusha
and
or
cmp
adc
les
sub
dec
loop
sbb
jle
leave
add
cli
cmp
sti
push
imul
dec
in
sahf
fstp
lret
imul
jecxz
repnz
sbb
add
pop
xacquire
ret
pop
in
into
mov
mov
test
dec
int
ret
aam
dec
in
xlat
icebp
sbb
mov
mov
mov
fldenv
push
and
enter
fbstp
imul
push
shlb
or
cld
sub
pop
arpl
or
je
ficomps
fcompl
mov
inc
jbe
aam
jae
insb
orl
dec
mov
add
xor
push
pop
add
out
add
add
fdivrl
add
mov
pop
mov
ret
or
sub
sub
ret
xchg
in
or
out
into
and
adc
jo
mov
sub
add
adcl
das
cmp
inc
mov
mov
xchg
aam
cmp
flds
adc
push
loope
movsl
movsb
vpsubd
mov
fildll
dec
push
mov
rol
inc
lock
out
and
mov
in
mov
enter
scas
dec
pop
xchg
outsb
lret
test
fdiv
pop
imul
jns
out
push
push
dec
push
aam
cmpb
sbb
xchg
jg
in
das
sbb
sub
mov
pop
sahf
int3
dec
int
xchg
subb
dec
clc
mov
pop
sbb
sbb
xchg
mov
cmpsb
xchg
icebp
jecxz,pn
mov
xchg
xchg
out
test
xchg
and
add
bound
ss
jb
ret
scas
outsl
push
xchg
mov
or
subl
call
icebp
sbb
cmpsl
pop
dec
jle
push
sub
add
imul
push
sahf
and
mov
mov
xchg
in
inc
add
cmp
int3
imul
pop
inc
jmp
pop
sbb
xchg
cld
or
in
cmp
and
cld
shll
out
ror
add
mov
jg
das
ljmp
dec
lret
sbb
mov
mov
mov
out
jae
out
aad
lock
inc
sub
roll
or
push
sarb
xchg
loopne
cwtl
dec
leave
add
repz
cmp
jb
push
cmp
cmp
adc
or
ja
sub
mov
push
movsb
out
sbb
xchg
into
or
sub
xor
mov
shlb
into
jle
iret
dec
leave
or
inc
inc
cwtl
cmpl
lcall
push
imul
pop
sbb
jl
adc
mov
sti
dec
mov
outsb
lcall
push
jmp
pop
inc
xchg
pop
imul
jle
mov
jmp
jae
stc
outsl
test
mov
fiaddl
ds
vpminsd
jmp
gs
cs
mov
insl
xor
or
sbb
dec
mov
stc
xchg
mov
adcl
imul
in
adc
out
cmp
xchg
xchg
mov
mov
dec
in
fistps
push
cmp
xor
and
push
mov
cmp
daa
cmp
xlat
sbb
arpl
add
or
inc
cmpsb
mov
out
push
imul
mov
push
stos
lahf
sbb
movsl
lea
ljmp
add
xlat
sub
pushf
scas
outsl
xchg
loope
pop
imul
adc
stos
fld
add
addr16
dec
mov
imul
cld
inc
rcrb
xchg
test
mov
sub
and
inc
fsub
push
pop
lret
pop
subl
popa
insl
jecxz
jo
clc
adc
aad
cmpsb
pop
imul
daa
dec
shlb
mov
imul
mov
xchg
enter
add
push
push
mov
pusha
loope
mov
xor
inc
mov
mov
jl
fmull
outsl
mov
lret
pop
jp
jns
sbb
test
repz
jo
lahf
mov
sbb
cs
dec
pop
adc
jge
insl
out
js
in
adc
push
cmc
cmp
stc
les
ret
mov
sbb
fists
and
lods
jmp
pop
loope
rorl
inc
xor
cmp
mov
enter
aaa
nop
push
and
inc
and
ds
lahf
mov
icebp
cmpsl
rclb
mov
inc
or
inc
movsl
pusha
or
pop
push
dec
jo
lods
lahf
daa
fistpll
fsts
les
jle
inc
or
xchg
and
repz
sub
shlb
mov
cmp
adc
lods
lea
xchg
and
mov
hlt
sbb
or
xchg
and
mov
or
mov
xor
cld
xchg
ljmp
data16
enter
xor
jo
push
incb
pop
push
fsts
sbb
stc
inc
lahf
adc
pop
lahf
inc
lahf
pop
xchg
push
and
sub
cmp
mov
dec
mov
std
sbb
repnz
addr16
xchg
adc
pop
clc
dec
cmpsl
sbb
jnp
push
push
pop
inc
push
adc
pop
push
push
addr16
inc
filds
pop
pop
push
iret
aas
mov
cmp
icebp
pop
jmp
inc
dec
rcrb
add
sbb
xchg
out
push
cmp
pushl
push
pop
outsl
rorl
icebp
jno
into
int3
jg
jne
sbb
push
pop
sti
push
mov
cmpl
inc
xor
int
inc
stc
mov
stc
dec
sub
push
pop
pop
pop
or
sbb
add
pusha
jnp
jg
fdivrs
cmp
pop
lcall
mov
cmp
mov
pop
mov
test
push
icebp
xor
lock
or
jg
sbb
adc
imulb
jae
mov
jge
movsl
insl
jge
sahf
push
lods
sti
add
jmp
jns
cmp
inc
mov
inc
jne
mov
push
ja
lcall
and
mov
jg
fsubrs
mov
or
sbb
push
les
in
and
inc
and
push
add
xor
adc
icebp
outsl
pop
out
data16
pop
jge
sahf
fisubl
inc
push
xchg
addr16
xor
push
int
stc
ja
mov
pushf
pop
or
adc
pushf
fnstsw
fsubl
fmull
inc
sbb
ja
pop
sub
je
and
inc
je
addb
outsb
xor
pop
jns
je
sbb
cmp
and
jp
pop
ja
int3
sbb
shll
lea
xor
pusha
push
push
push
pop
pushf
jno
fnstcw
pop
inc
fneni(8087
sbb
into
inc
ja
jl
push
ds
inc
xchg
inc
pop
divb
sbb
inc
pushf
daa
push
jl
push
aam
je
or
and
cmp
push
jmp
mov
iret
enter
daa
push
sub
in
push
icebp
out
sarb
jnp
or
push
cmp
adc
or
pop
mov
push
xorb
jecxz
aam
fucom
ret
cmp
and
sub
pop
add
inc
jge
pusha
nop
push
or
in
cmp
xchg
push
cltd
inc
cmc
pavgw
shrb
jae
or
cmp
sub
add
or
push
push
mov
add
cmp
cmp
mov
ret
pushf
pop
lcall
or
loop
call
rcrb
xchg
sub
sub
pop
or
je
push
test
sbb
push
cwtl
popf
mov
and
sub
addr16
push
add
dec
shll
fimuls
pop
lret
or
jg
pop
insb
pop
push
roll
movsb
shlb
in
call
add
sbb
jnp
add
push
cmp
jo
popa
or
pop
inc
dec
addr16
mov
out
out
out
out
loope
or
leave
add
cmp
jo
bound
and
inc
testl
mov
jmp
pusha
sarl
std
aaa
adc
daa
lret
pop
call
sbb
je
push
cwtl
cld
or
sub
incb
mov
pop
add
adc
ret
push
cltd
push
pop
jno
popa
roll
push
push
sub
adc
arpl
sbb
loop
push
adc
pop
dec
idivl
and
add
and
pop
and
out
pop
adc
pop
fs
mov
mov
out
mov
cmp
jle
pop
sbb
mov
adc
adc
adc
add
loop
call
add
xor
sub
mov
sub
push
std
xor
and
cmp
or
nop
or
test
pop
sbb
xor
hlt
adc
sub
sahf
adc
push
sub
push
je
lock
add
paddusb
inc
push
mov
push
outsl
push
and
sub
daa
pop
mov
add
or
cmp
sub
sub
xor
inc
js
mov
pop
jl
mov
mov
dec
repz
fisubrs
mov
pop
xor
fsubrl
in
sub
repnz
or
mov
cmp
pop
out
mov
fsubrl
push
pop
aaa
mov
or
dec
xor
ret
mov
bound
inc
mov
xor
push
cmp
sub
xor
mov
mov
hlt
fs
out
cmp
mov
and
pop
lods
mov
aad
cwtl
aas
incb
fwait
mov
and
push
cs
lods
and
imul
cmp
push
inc
and
inc
xor
daa
and
and
insb
faddl
cmc
and
test
add
push
lock
gs
fs
shll
loopew
jmp
arpl
jl
xor
hlt
lods
js
jno
cli
int3
fdivl
sbb
jge
roll
adc
imul
and
xchg
cli
push
js
mov
ss
jge
out
fiaddl
inc
cmp
lret
pushl
push
cmc
fistpl
int3
enter
fs
sub
jle
xor
fnstsw
int3
jecxz
jle
call
adc
inc
adc
jb
inc
adc
xchg
adc
xor
mov
test
lcall
push
mov
xchg
scas
sbbl
enterw
inc
pop
sbb
inc
ljmp
fmuls
push
rorl
jns
iret
xor
xor
outsl
add
cmpsb
aas
int3
adc
adc
and
daa
pop
fdivr
sahf
pop
sub
push
es
adc
fbld
fucomp
inc
mov
fnstenv
or
aaa
inc
nop
outsl
sub
mov
addb
ja
jle
cmp
mov
xchg
fnsave
cmp
inc
pop
fsubrs
pop
lret
shrl
ss
and
xor
popa
adc
and
in
fdivrl
scas
dec
xchg
adc
sbb
mov
sbb
in
add
or
mov
or
test
sbb
fldl
pusha
js
aad
sbb
push
fcomps
add
fcom
sub
inc
cmp
repnz
inc
dec
and
adc
mov
sub
push
nop
adc
out
pop
or
jp
inc
fsubr
test
jb
les
sbb
and
rorb
loopne
fistl
sti
dec
imul
mov
jns
fbld
sbb
rol
adc
sbb
push
aaa
dec
rclb
jno
inc
lock
std
and
arpl
in
faddl
or
loope
sbb
inc
insl
xchg
addr16
jb
scas
or
push
sub
jmp
outsb
les
sbb
clc
inc
add
test
aaa
sahf
add
lret
pop
xlat
jle
or
lock
jo
xchg
stos
xchg
lret
inc
dec
icebp
xor
fdivl
xchg
ljmp
movsl
sub
pop
mov
ljmp
inc
xchg
mov
xchg
lahf
mov
test
xchg
pop
cmp
inc
popf
inc
jmp
rclb
gs
push
mov
addr16
popa
das
fimuls
or
rolb
xchg
push
dec
dec
or
add
jl
fdivl
mov
popf
clc
jae
test
fstps
push
dec
sahf
iret
add
mov
loop,pn
out
lds
adc
aas
jne
leave
clc
insl
sbb
push
and
sbb
adc
les
lea
xchg
movsb
jbe
stos
pop
inc
xor
into
xchg
in
enter
cltd
negb
or
test
dec
mov
mov
jae
enter
nop
shlb
test
xor
adc
jg
mov
rol
xor
mov
or
push
rorl
addr16
shrb
cltd
jnp
mov
mov
loop
fwait
cmp
out
jnp
iret
jnp
push
loopne
shlb
andb
lret
out
push
or
roll
xchg
push
sbb
outsl
lcall
and
fsubrl
jbe
std
icebp
xor
pop
mov
pop
or
pop
inc
hlt
sub
lock
fsubl
dec
in
aam
mov
adc
call
jmp
inc
test
mov
pop
popf
ror
sbb
xchg
and
jnp
mov
inc
adc
fadds
in
and
add
cmp
ret
add
fisubrs
sbb
inc
in
jl
int3
arpl
ret
mov
pusha
mov
lods
adc
or
pop
js
int3
les
faddl
mov
sub
hlt
sbb
ret
or
xchg
xchg
outsb
inc
adc
add
clc
pop
loop
mov
or
bound
xor
fidivrs
lds
fcom
lcall
aad
or
or
add
cld
mov
or
sti
dec
fstps
cmp
and
jbe
negl
jmp
clc
mov
fldl
les
out
fs
mov
and
sti
dec
fisubrs
shl
xor
mov
mov
mov
mov
cmp
aam
sti
bound
sbbl
xchg
adc
mov
scas
pop
xlat
call
push
insb
pop
cmpsl
fisubrs
xor
adc
jno
jns
inc
xchg
ds
decl
xchg
push
ds
repnz
imul
pop
rol
shlb
mov
rcrl
push
inc
fcmovnb
lret
and
enter
jb
repnz
es
cmp
mov
inc
adc
insl
adc
and
xor
dec
push
arpl
cli
push
mov
aad
fiadds
sub
add
cmp
sbb
fnstsw
rep
movq
jl
mov
clc
aas
mov
lret
ss
icebp
enter
inc
arpl
mov
adc
leave
push
or
sbb
jo
aam
jo
je
cli
or
call
flds
fisubrs
inc
pop
fnsave
dec
test
cs
adc
mov
sbb
fnstsw
test
push
scas
leave
enter
test
repnz
les
clc
into
lods
insl
sbb
cmp
nop
sti
xchg
pop
pushf
jns
and
test
inc
mov
jecxz
dec
pop
es
and
sub
dec
pop
popa
outsb
ja
or
cmpl
cli
sahf
dec
add
sub
adc
out
mov
or
xor
jp
mov
stc
add
pusha
inc
xor
fimull
and
push
push
sahf
sub
loop
mov
xchg
and
hlt
jp
xchg
mov
cmp
ret
outsb
and
int
mov
dec
mov
out
and
add
call
push
add
outsl
pop
movsl
adcl
shll
outsb
push
lret
jns
sbb
and
mov
inc
jecxz
dec
loop
orl
mov
gs
es
popf
ret
bound
dec
sahf
in
fldenv
call
push
xchg
in
xchg
cmpsl
loop
xor
ljmp
push
fsubrl
inc
cmp
icebp
jb
pmaddwd
sub
and
in
inc
adc
call
inc
add
stos
jne,pn
adc
ret
lret
mov
push
js
and
gs
push
popa
and
imulb
and
dec
add
ss
and
jbe
fdivl
mov
movb
in
inc
adc
ret
pushf
mulb
sbb
nopl
adc
push
aas
dec
ss
mov
lret
and
inc
xor
jns
imul
inc
cmp
lods
pop
loop
dec
push
movl
bound
inc
xlat
clc
mov
mov
and
sbb
push
cmp
push
into
cld
dec
lret
jmp
sub
imul
sbb
or
and
or
bound
lcall
into
jnp
dec
adc
mov
int3
or
cld
int3
ret
rolb
cmpb
adc
inc
adc
push
mov
ficoms
cmpsb
xor
ja
es
mov
add
push
mov
imul
data16
jb
xor
dec
arpl
popf
mov
and
scas
fwait
out
and
dec
cvtpi2ps
imul
push
inc
pop
sbb
ficompl
sarl
and
xchg
xor
mov
fldl
cmp
push
dec
xchg
xchg
cmovs
mov
mov
test
xchg
cmc
sti
je
insl
movsb
out
adc
or
sub
idiv
loopne
dec
lret
movl
fisubrl
push
lds
adc
add
jle
jp
iret
pinsrw
xor
sub
cmp
adc
repnz
ds
andl
fidivrs
out
jbe
cmp
iret
loopne
jl
mov
inc
jge,pt
jmp
or
xor
pop
jns
and
adc
adc
xchg
mov
cmp
cmp
pop
out
movsl
mov
add
mull
xor
arpl
adc
push
fcmove
rclb
mov
add
test
push
jns
xchg
stc
and
out
sbb
cmp
imul
bnd
outsl
outsb
out
int3
insb
push
ljmp
jle
lock
out
int3
jbe
cld
sbb
xchg
cmpsb
mov
jbe
jns
push
cmp
jp
cmpsb
and
mov
addb
es
scas
fsubs
shlb
jp
movd
xchg
push
mov
sbb
xchg
fldcw
dec
cmp
push
stc
or
testb
xor
pop
jno
mov
lea
jnp
lahf
jbe
out
jg
rcl
aaa
ljmp
stos
pop
inc
lock
pop
adc
xchg
inc
xor
push
fisubl
and
or
in
sub
sahf
daa
adc
fwait
dec
out
inc
lea
adc
inc
mov
pmaddwd
ds
add
dec
clc
adcb
jle
in
hlt
outsl
xchg
sub
out
cmpsb
ss
jo
lahf
mov
dec
add
and
mov
and
iret
xchg
inc
xor
adc
dec
inc
sbb
fsubrs
push
fldl
cmpsl
mov
push
inc
pop
dec
fidivl
mov
ret
lret
or
xchg
or
cli
xchg
mov
push
loop
es
insb
scas
fidivrs
jno
mov
inc
vrcpss
gs
sbb
sbb
push
jbe
mov
sbb
xor
push
sti
ret
cmpsb
sbb
lock
test
je
sub
les
repnz
add
pop
cs
ljmp
loope
mov
rcl
cltd
scas
adc
in
mov
ret
push
xchg
sbb
cwtl
cli
aas
popa
push
leave
fldenv
int3
dec
mov
sub
and
jb
daa
fstpl
or
into
pop
testb
mov
push
mov
leave
negb
stos
adc
sub
sub
mov
mov
cmp
xchg
in
fs
xchg
sub
mov
xlat
nop
xchg
xlat
mov
cmpsl
mov
lret
xor
push
rclb
sbb
push
fisttpll
loopne
stc
out
push
fistl
std
and
xchg
shrl
add
and
pop
lock
dec
sub
stc
xor
mov
shl
or
mov
fisttps
data16
test
negb
dec
fsubl
outsb
daa
push
into
and
in
shl
and
adc
and
fidivrs
pop
test
std
popa
and
pop
and
lcall
cli
gs
adc
jnp
cltd
aas
dec
outsb
loope
je
xchg
rcrb
movsb
inc
mov
sarl
xchg
nop
ja
push
sahf
push
pop
andb
cld
push
nop
fcomip
jmp
aam
xchg
add
mov
jae
pop
cli
xor
xchg
in
ja
popa
pop
push
repz
adc
fldcw
inc
int3
add
mov
frstor
into
mov
inc
sti
dec
enter
pop
insl
es
xchg
cmp
fsts
pop
fwait
in
mov
xchg
pop
cmp
inc
punpckhbw
scas
push
bound
push
pop
sub
pop
pushf
sbb
jecxz
xchg
xchg
sbb
or
mov
ret
pop
jns
pop
bound
test
ss
jl
je
in
sahf
nop
adc
mov
dec
and
inc
pushf
fwait
pop
idivb
mov
stos
sbb
mov
mov
cmpsb
xchg
mov
pop
ret
xchg
or
pushf
bound
test
addl
add
xchg
out
push
scas
fs
jecxz
and
lret
sahf
dec
xchg
int
push
push
sbb
dec
dec
xor
xor
cs
add
cld
div
cs
push
sarl
out
inc
jb
push
imul
insl
loop
idivl
jmp
stos
cmpb
dec
pop
xchg
mov
dec
cmp
rolb
fcmovb
adc
in
cmp
lahf
pop
aad
jb
ds
adc
adc
cli
divl
loop
sbb
pop
sbb
adc
xchg
jno
lcall
lods
aaa
out
xor
mov
in
loope
and
lar
testb
mov
gs
dec
orb
xor
in
ss
pop
nop
lock
lret
adc
pop
stos
inc
push
aas
ss
cwtl
cmc
insl
outsb
sbb
addr16
addr16
dec
lea
in
adc
outsb
shl
xor
adc
and
outsl
mull
addr16
jge
push
mov
out
cmc
fiaddl
mov
lock
outsl
ret
lea
xchg
or
fcoml
adc
jl
inc
xor
jne
jp
ss
add
pop
das
loopne
sub
xor
ret
es
pop
and
xor
mov
and
cmp
test
fsubrl
dec
int3
xchg
and
cs
jns
leave
inc
imul
js
sahf
hlt
in
dec
cmp
dec
sbb
negb
and
jmp
inc
xchg
fnstsw
dec
pop
cld
pop
dec
cld
mov
mov
ss
imull
test
gs
ljmp
inc
mov
push
sarb
pop
movups
jp
cmp
cmp
xor
adc
int3
in
lahf
mov
xchg
xchg
mov
xchg
mov
cmpsl
sub
push
jno
imul
repnz
add
fdivrp
dec
psrlq
dec
daa
in
sub
insl
xchg
dec
dec
test
lcall
mov
jmp
cmp
sbb
mov
mov
clc
ds
adc
inc
in
je
jl
ss
shlb
fstpl
movsb
ljmp
movsl
lahf
test
out
xor
mov
cmpsl
leave
mov
mov
adc
into
rorl
push
jecxz
push
ret
or
mov
lahf
cmp
int3
dec
lcall
stos
and
mov
xor
fldl
push
or
sarb
and
push
mov
bswap
push
enter
or
jb
push
add
loop
adc
and
aaa
mov
repnz
push
xor
sub
or
out
or
sub
or
ljmp
pop
popf
nop
ret
xlat
sub
pop
push
pop
lret
int3
jle
mov
mov
inc
cmpsb
int3
fisubrs
pop
or
int
test
fidivrs
inc
fcomps
rolb
sti
cmp
mov
arpl
rcrl
loopne
das
aas
push
mov
adc
or
out
cmc
out
scas
cmc
adc
xor
inc
sbb
repnz
pop
push
in
iret
decl
adc
push
call
lcall
or
sub
fxch
dec
jbe
jmp
enter
push
in
sub
in
and
push
orl
jle
mov
mov
inc
test
mov
inc
mov
adc
push
addr16
cmp
push
sub
jp
push
outsb
into
repz
lods
loopne
push
xor
mov
bound
es
scas
mov
into
mov
adc
clc
push
scas
inc
pop
fdivrs
sbb
cvtps2pd
mov
stos
xchg
and
iret
adc
sub
mov
inc
ret
mov
sbb
xor
cli
push
ja
movsb
adc
inc
and
in
adc
mov
mov
inc
outsb
push
push
in
das
movsl
pop
and
sti
test
mov
jge
in
mov
int3
dec
gs
sbb
dec
aad
imul
bound
test
inc
mov
sub
in
test
sub
inc
lds
cmpsl
push
lcall
mov
inc
ja
fidivrl
frstor
mov
fs
sbb
rcll
sahf
lret
fiaddl
inc
test
nop
loop
mov
jno
shll
in
add
sub
xor
fldt
lahf
mov
adc
jecxz
fwait
dec
out
repnz
or
cmp
inc
mov
fsubp
inc
addl
sub
pop
and
cmp
ud0
push
or
cs
punpckhbw
add
pop
lds
dec
pusha
repz
jbe
arpl
mov
stc
inc
or
inc
adc
rolb
and
jb
lahf
and
bound
dec
xor
push
jge
mov
push
and
pop
cs
dec
and
push
and
adc
leave
push
les
inc
mul
daa
adc
or
xchg
lcall
dec
or
iret
mov
data16
hlt
mov
adc
ds
push
pop
psrld
push
mov
adc
dec
jne
inc
pop
add
std
and
cmc
jge
in
and
cwtl
cmpsb
imul
test
int3
xchg
jnp
pop
hlt
sub
pop
push
jge
es
rorl
jp
lds
ret
mov
push
cli
int
adc
ss
xchg
sub
push
mov
inc
mov
push
orb
sbb
inc
loope
pushf
jae
mov
rcr
xchg
insl
push
stos
popw
in
add
repnz
dec
fwait
push
sub
shlb
push
cmp
int3
psrlq
push
and
fisubs
pop
adcb
push
stos
leave
push
aaa
mov
mov
xchg
addl
mov
push
jnp
mov
adc
adc
outsb
and
popf
mov
shlb
mov
lret
testl
lret
pop
arpl
inc
inc
shr
or
mov
rcrb
or
cli
mov
mov
ds
xor
mov
mov
ficoml
pop
shrl
mov
les
testb
ss
sub
xor
sub
pop
sbb
rcrl
pop
dec
and
frstor
xchg
xor
nop
xor
mov
sbb
rorl
ja
or
enter
xor
jo
jb
dec
add
hlt
xor
out
ficomps
mov
and
adc
shrl
jmp
jbe
hlt
addl
adc
jo
cmp
test
ja
mov
pop
inc
loope
mov
cmc
add
jge
pusha
loope
pop
mov
inc
bound
dec
xchg
add
fldcw
jnp
xchg
jno
insb
aas
jp
es
std
aas
jo
in
fmul
sub
xchg
push
lret
adc
push
adc
test
into
jg
dec
movlps
loope
adc
mov
mov
cmp
xor
mov
mov
xor
push
lods
insb
in
lds
mov
popf
dec
push
mov
in
and
cmp
dec
jo
outsb
push
inc
dec
popa
jmp
addr16
inc
loope
cmpsl
ljmp
sub
push
jbe
imul
lcall
repz
dec
mov
jns
dec
add
outsl
and
arpl
inc
jecxz
cmc
jbe
cwtl
cli
outsl
push
jae
xor
fs
daa
ja
cmp
lods
and
mov
pop
stos
xor
insb
adc
push
insl
push
rcrl
sahf
or
std
rclb
dec
adc
push
pop
in
push
inc
dec
push
dec
cmp
pop
push
xor
fs
add
sbb
outsl
movsb
and
push
xor
cmpsl
leave
push
xor
cmp
jo
gs
fimuls
mull
push
jnp
push
inc
insb
sti
lret
sub
insl
mov
jns
outsl
jne
inc
je
push
jns
outsl
std
mov
inc
or
imul
jle
daa
jb
insb
fbld
mov
repz
xor
insl
ss
mov
data16
es
mov
jmp
sbb
insl
sub
cmc
rclb
testb
dec
out
in
and
push
lods
cmp
bound
xor
push
movsl
jp
adcb
dec
inc
popa
jle
sub
fwait
or
bound
jne
pop
je
pop
sub
jae
std
fistpll
in
mov
cmpsl
outsl
insl
stc
adc
stc
mov
or
je
push
pop
pop
rcll
arpl
rorb
mov
ret
mov
mov
pushl
lret
lret
sbb
jo
lods
add
jp
mov
sub
or
adc
jae
call
je
es
pop
add
pop
push
or
scas
fs
insb
jmp
movb
ja
push
pop
push
jo
dec
mov
in
or
and
hlt
jb
out
sbb
insl
out
js
pop
arpl
in
outsl
cmp
in
popa
ret
dec
push
insl
imul
jl
bound
cmp
xor
mov
lret
lds
imul
aas
jp
xor
shlb
daa
cmp
iret
bound
inc
xchg
fs
push
mov
mov
cs
push
inc
leave
arpl
mov
push
or
and
mov
sub
call
test
imul
jns
sbb
popa
jo
insb
cmpsb
cmp
dec
gs
add
push
fs
lea
push
pop
aad
stc
call
outsb
sub
mov
pop
adc
jns
fmull
sbb
out
jmp
mov
jmp
xchg
fcomps
pop
add
jecxz
into
rclb
add
jnp
data16
movsl
mov
push
popa
and
xor
sbbl
in
or
mov
xchg
xor
or
inc
mov
adc
lea
dec
mov
mov
pop
add
and
mov
scas
popw
and
push
call
pop
ret
and
addl
ret
pop
mov
sbb
xchg
lds
sbb
mov
test
or
std
mov
and
scas
cwtl
js
adc
test
dec
aas
mov
rol
push
mov
sbb
ljmp
sbb
shrb
push
ds
xor
mov
xchg
movsl
inc
cmp
mov
add
icebp
fistpll
sbb
nop
sub
xchg
xor
and
mov
mov
cmp
cmp
je
sbb
loopne
aad
add
std
sub
pop
add
roll
insl
inc
lahf
push
enter
xchg
flds
or
ret
pop
ret
xchg
mov
mov
pop
ret
out
arpl
push
jae
sub
pop
and
jmp
jmp
add
popa
addr16
loop
pop
aas
or
pop
pop
or
mov
push
popa
pop
ret
enter
add
ret
sbbb
adc
pop
std
add
push
xlat
add
or
push
mov
shrl
pop
cmp
sar
in
popf
popa
add
test
xchg
mov
and
rcrb
or
xor
or
inc
lock
cmp
inc
sbb
adc
adc
push
jmp
add
sub
dec
xchg
nop
fs
movsb
data16
push
xor
loop
in
aas
jo
or
fsubs
mov
fistpll
fldt
les
adc
inc
int
or
pop
xchg
std
mov
xchg
or
out
or
mov
sbbl
xor
not
push
mov
jge
movsb
xchg
pop
and
addr16
rcrl
sbb
out
add
popa
shrl
or
pop
add
xchg
cmp
sbbb
idiv
orl
adc
mov
sbb
mov
stos
lods
xlat
sub
push
and
dec
cmp
push
sbb
ret
mov
push
add
sub
lods
sbb
stos
leave
nop
mov
mov
cwtl
rclb
push
jae
inc
push
lea
lds
sub
mov
jmp
mov
pop
pusha
loop
dec
jmp
data16
int
ds
and
in
sub
add
pop
ret
in
pop
inc
inc
loopne
push
ret
add
ja
mov
jmp
shrl
push
fidivrs
adc
mov
test
push
mov
push
mov
inc
add
dec
das
or
fs
push
inc
mov
ljmp
push
cmp
sub
mov
dec
clc
movsb
cs
and
add
push
test
mov
sbb
addb
cmc
pop
cmp
or
mov
js
push
inc
or
test
pop
outsl
add
enter
scas
shll
js
testb
ljmp
xor
jo
sub
cmp
movups
add
pop
test
push
fcomps
lods
dec
pop
scas
adc
subb
hlt
js
mov
cmp
push
adc
loope
insl
jns
adc
or
add
mov
or
xchg
fistpl
pop
ja
and
cmp
sub
mov
push
repz
movsl
adc
mov
lcall
jno
imul
push
and
mov
add
jbe
xchg
pop
popf
or
add
cli
add
xchg
call
lods
mov
jle
jae
outsl
pop
or
les
imul
mov
pop
xor
call
jnp
test
or
jl
pop
mov
in
in
pusha
mov
call
pop
add
xor
clc
popa
popa
sbb
lcall
mov
mov
scas
cs
pavgw
xorl
or
outsb
xchg
mov
fnstsw
roll
movsb
jl
or
mov
pop
jns
pop
sbbl
frndint
sbb
dec
push
out
ret
or
stc
push
adc
pop
inc
mov
push
and
popa
mov
lret
mov
jno
sbb
pop
fwait
insl
andl
add
js
sbb
add
adc
lods
or
aad
xchg
add
add
inc
rorb
add
mov
test
jmp
jp
and
icebp
ja
das
addr16
jge
es
shlb
adc
xor
test
adc
mov
daa
cmp
adc
add
cmpsl
dec
jbe
mov
repz
sahf
imulb
sahf
rol
xor
xor
sbb
mov
imul
add
mov
pop
mov
xchg
cltd
popf
sbb
mov
dec
les
pusha
xor
xor
aam
in
je
hlt
sub
xlat
jbe
adc
adc
sahf
and
add
mov
add
lret
push
cld
ja
adc
jge
test
cmc
jmp
je
adc
ja
cmp
adc
or
pop
sub
and
xor
jmp
push
fcmovnb
add
and
jl
push
sbb
pop
adc
test
sbb
jo
add
imul
xlat
ret
mov
sar
xor
inc
shl
rcll
mov
add
icebp
jmp
add
cmp
xchg
icebp
std
or
in
push
ljmp
push
xchg
add
or
pusha
adc
mov
js
or
xor
xor
imul
pushf
sbb
add
in
adc
aas
inc
push
xor
xchg
pop
or
mov
and
cwtl
add
call
leave
push
pop
dec
sarl
add
adc
dec
add
push
popf
pop
adc
test
cmpl
psrlq
inc
outsb
mov
out
mov
test
ret
xchg
outsb
mov
fldenv
pop
popa
sub
jno
pop
add
fisttpll
fiadds
ds
xchg
enter
aad
and
or
lods
aaa
xchg
xchg
nop
push
imul
or
and
into
or
and
clc
add
jmp
xchg
leave
mov
sbb
mov
clc
add
mov
mov
test
add
or
sbb
out
test
adc
mov
cmp
or
xor
adc
sub
add
das
cmp
xor
or
bound
xor
or
sub
and
sub
ja
hlt
sub
imul
mov
jp
xor
sarb
push
mov
shll
inc
xchg
adc
les
inc
mov
xchg
loopne
ret
sarb
jb
xchg
mov
daa
pushw
rclb
les
ret
push
push
push
pop
push
mov
mov
xchg
mov
push
adc
xor
and
xchg
lea
and
stos
add
ja
fisubl
push
mov
pusha
call
xchg
ret
sub
mov
pop
inc
and
xchg
jb
int3
incb
or
shl
mov
dec
and
shrb
mov
pop
fists
push
push
xchg
push
sahf
add
and
sbb
xchg
pop
rcll
xor
cmc
std
cmp
in
aaa
rcrl
orl
pusha
push
adc
cmp
lret
push
dec
in
lret
sub
add
dec
stos
jne
and
xchg
inc
insb
stos
xchg
pop
or
jl
sub
pop
sub
icebp
scas
pop
rorb
mov
popf
inc
add
mov
adc
sub
push
std
movsb
or
es
and
or
mov
mulb
sbb
inc
daa
mov
outsb
subl
negl
sbb
lds
mov
divl
xchg
lcall
jg
cmc
push
pop
jmp
insl
aam
daa
or
testb
jg
add
cmp
push
cwtl
push
mov
adc
lahf
rorl
add
clc
shl
andb
lea
adc
mov
test
shl
mov
nop
pushf
jne
adc
es
test
or
scas
pop
add
and
sbbb
lds
cwtl
ficoml
jno
sbb
mov
lds
outsb
sbb
sub
mov
xor
adc
jecxz
mov
sub
sarl
xchg
pusha
jmp
push
inc
xlat
xchg
push
pcmpeqb
ljmp
mov
add
rcrl
mov
adc
or
ret
out
shrl
loopne
dec
rolb
add
lea
mov
or
xchg
rcr
jmp
aas
mov
or
xchg
roll
pop
sub
mov
cltd
xor
jno
cs
jae
and
xor
mov
mov
push
dec
fwait
cmp
mov
das
jl
adc
ss
ror
dec
jne
adc
dec
add
mov
add
lock
sub
es
cmp
mov
insl
sub
cld
sub
push
rcll
or
imul
inc
inc
xchg
cmp
adc
test
mov
pop
push
xchg
psubsw
add
mov
mov
cwtl
loopne
mov
push
rclb
int3
adc
pop
fimull
idiv
jmp
lods
jo
push
jne
adc
adc
xor
ret
adc
pop
fdivrl
add
cmp
lret
pushf
mov
pop
out
sarb
sarb
xchg
cltd
add
ret
jg
int3
jge
add
fldcw
fadds
testl
dec
pop
xor
mov
in
into
sti
xor
mov
xor
js
cwtl
mov
inc
scas
sub
bound
add
subb
xor
sbb
jne
mov
push
js
aad
inc
adc
pop
push
fnstenv
adc
fmul
mov
mov
cmpw
push
or
int
and
bound
insl
inc
jnp
stos
mov
sub
inc
arpl
addb
enter
cmp
push
adc
mov
sbb
cmp
inc
mov
fidivl
clc
add
test
sbb
push
mov
lea
xor
push
and
and
and
into
cmp
loope
jae
addr16
popa
jl
lret
pop
and
lock
mov
mov
cmp
andb
pop
daa
jecxz
cmp
jmp
or
add
pusha
bound
push
xchg
inc
inc
jge
imul
insb
mov
sbb
jne
pop
lret
in
movhlps
mov
dec
mov
pusha
mov
dec
add
into
loopne
mov
pop
push
pusha
fiadds
mov
addb
xor
mov
add
add
adc
in
lea
das
sbb
addr16
inc
sbb
popf
cwtl
add
lea
outsb
dec
push
add
sbb
testl
repnz
pop
mov
mov
xchg
lret
jp
pop
shlb
rorl
bound
icebp
cmp
xor
roll
or
loop
lods
jl
xchg
push
das
data16
pop
enter
movsb
pop
sahf
xchg
cmpsl
and
xor
inc
add
arpl
mov
test
pop
sub
sbb
push
push
cld
add
or
mov
and
test
dec
jl
push
shl
scas
inc
cmp
and
mov
fcoml
dec
aad
sarb
push
or
add
mov
jle
flds
in
mov
fisttpll
mov
cmp
les
pop
push
sub
xor
cmp
inc
add
xchg
push
adcl
mov
pusha
dec
inc
rclb
ljmp
aad
xlat
push
mulb
adc
imul
aas
push
mov
cmp
mov
inc
pop
mov
aad
inc
mov
mov
jle
mov
mov
push
mov
cwtl
mov
mov
jbe
adc
movsl
xor
or
mov
insl
xor
lea
dec
iret
xor
lea
xchg
or
inc
out
push
out
insl
loop
xor
cmp
cmp
movsb
add
mov
daa
add
ljmp
pop
push
fidivs
icebp
xchg
sbb
push
mov
test
insb
mov
mov
push
inc
cmp
test
adc
lods
xchg
mov
sub
jmp
imul
int
and
fistpll
pushf
mov
mov
repz
mov
mov
fdivs
xchg
push
shr
sti
addb
add
sbb
repnz
popf
cmp
cmp
stos
inc
test
frstor
jne
ds
mov
mov
add
push
adc
minps
rolb
xchg
dec
and
je
sbb
ds
push
adc
pop
pop
pop
or
cltd
cmc
jae
std
adc
dec
pop
call
sbb
and
mov
rolb
sbb
add
fisttps
cmp
push
add
push
or
mov
sub
test
adc
or
sbb
cld
pop
arpl
sarl
je
adc
mov
int3
gs
sahf
jno
add
dec
push
add
xchg
push
adc
dec
xor
scas
adc
test
mov
push
divb
mov
bound
dec
xchg
repz
dec
pop
push
je
es
adc
push
push
inc
pop
lods
adc
xchg
inc
mov
xchg
dec
insb
adc
jp
xchg
pop
int3
adc
shlb
pop
add
pop
add
lods
popf
mov
ret
fdivl
jne
mov
add
aam
dec
clc
cmp
mov
stc
cmp
push
ret
and
loopne
xchg
xor
call
jae
or
jmp
inc
sbb
cmp
cmp
faddl
andb
rcll
repz
mov
sub
mov
jbe
loopne
cmp
push
or
push
mov
out
dec
call
fists
or
lea
mov
out
and
xor
lea
inc
mov
jne
insl
in
int
xchg
fwait
lods
push
dec
xchg
shl
jmp
push
in
xor
outsl
in
das
inc
sub
test
mov
cltd
jnp
or
push
adc
push
xorb
movsl
and
add
mov
push
add
jb
add
js
lahf
sbb
or
xchg
add
cmpsl
gs
nop
mov
or
pop
enter
and
fs
imull
clc
fimull
xor
xchg
clc
xchg
lea
sub
cmp
cmp
das
or
outsb
cld
cmp
pop
adc
mov
insl
sbb
and
xchg
or
push
lret
outsb
pushf
or
pop
stos
push
push
mov
mov
push
push
add
or
jp
ja
fldt
test
xor
testl
mov
loopne
or
adc
push
pop
mov
jae
int
pop
outsl
outsb
outsl
cmp
push
loopne
aam
shrl
mov
mov
cmp
in
or
mov
ds
pop
mov
push
mov
loopne
cmp
or
enter
dec
aad
daa
cltd
adc
call
push
fldl
or
inc
imul
add
in
scas
insb
cmpsb
lds
jmp
jns
cltd
push
push
in
adc
loopne
sub
or
imul
pusha
lock
xchg
sbb
adc
mov
adc
jno
ja
push
dec
push
es
pop
xor
sarl
test
pop
mov
mov
test
enter
pushf
inc
int
ss
xor
bound
movsl
adc
aas
in
xchg
lock
bound
sub
or
in
push
mov
cltd
pop
outsb
and
addl
ret
mov
lods
ljmp
das
enter
adc
mov
imul
jge
stos
dec
or
out
adc
in
mov
and
push
push
orb
cs
outsb
rolb
or
shr
mov
outsb
mov
popa
pop
mov
dec
push
pop
push
push
sti
mov
push
jg
mov
cmpsb
push
out
int3
mov
lods
pop
xchg
movsb
mov
sub
cmp
leave
dec
add
insb
mov
fimull
ds
cmpsb
or
sti
fstps
dec
inc
imul
mov
mov
loop
xor
aas
mov
daa
push
or
ret
imul
inc
lock
xchg
dec
and
test
mov
test
adc
xor
add
aaa
call
dec
cmp
sub
adc
add
sbb
js
repz
test
stos
ds
loop
pop
bound
and
add
data16
lahf
mov
mov
shrl
adc
add
inc
cld
adc
bound
pop
dec
out
add
push
push
xchg
add
in
xorl
inc
xor
and
test
in
das
dec
ret
pop
xor
into
dec
mov
cs
mov
push
loop
add
and
and
xchg
mov
pop
aaa
add
mov
adc
add
jg
int
ss
cmp
test
sbb
getsec
push
jl
sbb
or
pop
pop
inc
add
das
inc
and
nop
movsb
or
cmpsb
sbb
pop
gs
ret
outsl
push
enter
adc
mov
mov
and
in
test
add
mov
mov
sub
ficoms
and
inc
mov
add
aas
xchg
pop
mov
std
cmp
cmp
jmp
loopne
test
loop
add
mov
jg
xchg
pop
add
test
enter
les
pop
xor
add
ficoml
push
ret
in
sbb
in
inc
imul
sub
leave
call
sub
jle
scas
push
xchg
or
mov
and
push
loopne
sbb
sub
sub
fsubrl
pushw
mov
rol
and
push
ss
sbb
xor
mov
push
xor
jbe
add
xchg
dec
arpl
imul
imul
in
add
mov
and
and
in
mov
mov
add
insb
add
ljmp
sub
push
push
or
fmulp
dec
or
negb
and
push
cmpsb
or
push
and
rorb
lret
out
adc
or
push
sub
shlb
adc
int3
cli
fmull
sub
or
adc
sbb
jecxz
dec
outsl
adc
inc
or
xchg
inc
add
int
add
pop
pop
pop
xchg
fwait
call
add
popa
jno
repnz
fsubrs
in
stc
shll
push
idiv
aaa
out
loopne
shll
mov
xchg
or
cmp
mov
jae
outsl
cltd
adcb
dec
fucom
sbb
xchg
gs
adc
pop
or
cmpsb
cmp
jmp
add
cmp
xor
lea
and
add
pop
and
cmp
add
rorl
popa
mov
adc
ds
mov
test
xlat
lret
dec
dec
push
mov
and
mov
repz
cltd
loope
ret
cmp
adc
sub
xchg
adc
in
lahf
dec
shlb
adc
stc
fsubrp
add
mov
pop
les
or
fnstcw
fnstcw
or
fdiv
test
clc
add
jne
cwtl
xchg
daa
arpl
stc
xchg
loopne
lret
fnsave
mov
fadds
push
sbb
mov
rol
cmp
push
and
aad
adc
divb
inc
sub
cmp
jne
rolb
or
mov
movsl
cmp
loop
push
cmc
pop
jecxz
sub
or
fimuls
push
xorb
add
xor
adcl
stos
xchg
call
xchg
or
or
xchg
add
sbb
cmpb
and
int
lods
inc
out
mov
inc
cmc
enter
int
fs
pop
push
cld
add
neg
jns
push
pusha
cwtl
pop
cwtl
cmpsl
mov
push
popa
pop
fldenv
adc
stc
scas
mov
fwait
push
test
adc
test
pop
adc
testb
adc
popa
mov
movb
adc
add
pop
sub
xchg
dec
fiaddl
mov
mov
dec
sarb
daa
pop
aaa
add
das
fmuls
nop
and
mov
xchg
sub
aad
add
mov
and
add
les
mov
cmp
adc
cwtl
sbb
loop
repnz
pop
test
pop
cld
fsts
push
pop
int3
clc
mov
xchg
test
lods
test
rorb
leave
loop
fcomps
pop
inc
addb
sti
mov
movsb
sbb
fwait
les
xor
punpckhdq
xor
pop
xor
push
push
sub
int3
clc
or
pop
add
leave
hlt
or
mov
rcl
mov
sub
xor
and
mov
push
mov
jmp
dec
xchg
and
cmp
clc
andb
dec
lods
cld
sbb
inc
xchg
xchg
fsubl
jmp
xor
sub
decl
mul
shll
aas
or
pop
pop
add
add
and
pop
shlb
mov
cmp
in
fimuls
or
inc
add
cmp
adc
sahf
insl
andb
adc
pusha
jno
add
mov
mov
cld
das
jmp
add
clc
inc
cwtl
xchg
pushf
add
cld
faddp
xchg
inc
mov
push
inc
and
sbb
movsb
xchg
adc
pusha
xor
bound
add
popa
jnp
add
push
push
cmp
push
call
scas
xorl
sbb
xor
lock
push
dec
punpckhbw
das
ja
stos
aam
xor
jge
push
popa
push
sbb
inc
add
fucomi
aam
push
mov
movsb
out
andb
fmull
aaa
inc
loop
add
es
inc
push
ret
movl
inc
or
sub
jno
adc
jmp
mov
xchg
inc
pop
sub
add
xchg
mull
stos
sub
pop
xor
fadd
and
push
rorl
cld
dec
rorb
daa
xlat
pop
clc
jo
adc
stc
mov
repnz
add
xor
or
aad
or
js
inc
push
sti
add
xchg
dec
adcl
xchg
sbb
dec
out
cmp
mov
push
and
or
add
inc
inc
push
xchg
cs
ror
or
jnp
in
xor
jnp
in
rcll
mov
stos
adc
add
jmp
test
jg
xor
mov
sub
insb
addps
or
mov
sbb
pop
xor
xor
fs
push
rolb
test
lock
rclb
pop
cwtl
out
ds
add
aaa
fstl
repnz
xchg
mov
add
dec
or
pop
and
mov
pop
jl
shll
divb
mov
inc
aas
daa
add
stos
lret
pop
jmp
lea
push
add
jmp
and
push
jo
cmpsl
loope
xchg
inc
test
or
movl
adc
mov
insb
or
fstl
add
sub
addl
rcll
or
cmp
mov
push
mov
aaa
push
adc
mov
int
daa
aad
shll
mov
mov
add
dec
stos
rclb
mov
mov
adc
clc
mov
jne
add
cmc
inc
add
add
push
dec
add
or
xchg
ds
call
sti
or
dec
push
push
inc
mov
cmp
jb
xlat
loopne
arpl
loopne
in
call
or
pusha
xor
loope
clc
int3
mov
pushf
aaa
inc
add
leave
cmp
test
or
mov
sub
jns
fs
inc
push
push
sub
inc
xchg
and
xchg
nop
jne
pop
movsl
jl
pop
pusha
fldt
add
cld
or
ret
and
mov
ficoms
std
push
in
jmp
ret
inc
push
pusha
stc
shr
or
sbb
or
arpl
push
adc
cmpsb
mov
sub
insl
lds
sbb
out
mov
lea
inc
arpl
xor
or
aaa
dec
subb
pop
pop
test
add
and
mov
pushf
loope
lahf
outsb
stc
dec
push
int3
or
mov
fwait
or
dec
mov
xor
add
adc
mov
mov
lret
cmp
push
lea
dec
adc
jmp
fnstsw
push
jle
outsb
sub
enter
lock
addl
data16
and
mov
inc
dec
sub
push
adc
nop
adc
xor
push
jmp
pop
pop
mov
adc
push
lcall
sub
std
test
pop
push
or
loopne
pusha
sub
sbb
movsl
fstpt
or
add
cmpsl
xchg
enter
cld
enter
test
cmp
xor
js
gs
jo
scas
dec
std
xchg
jb
popa
or
dec
in
adc
mov
xor
mov
insb
mov
ja
imul
imul
dec
pop
push
push
aam
stos
xchg
add
dec
add
data16
jae
pop
inc
push
push
dec
sub
outsl
pop
mov
aaa
jno
jp
popf
and
jo
or
imul
sbb
adc
into
push
pusha
inc
call
test
and
scas
jb
sbbb
nop
repz
mov
cmp
lret
mov
sbb
inc
cmp
test
mov
in
ficomps
loopne
mov
and
jecxz
and
mov
imul
clc
and
push
xorl
dec
aad
iret
jno
push
adc
mov
push
mov
out
and
add
and
mul
push
inc
data16
sbb
insl
movsb
fs
inc
or
mov
cmp
pop
mov
cmp
add
nop
or
push
xor
sub
aam
imul
sub
inc
push
adc
dec
sub
rcll
mov
repz
test
enter
out
pop
or
lock
fdivrl
or
int
pop
les
in
negl
add
call
mov
or
xor
out
pop
xor
iret
lret
pop
or
push
and
movsl
sbb
jne
and
pusha
xchg
mov
add
jne
mov
sub
mov
testb
mov
xchg
sub
call
lret
mov
aas
nop
add
push
pop
imul
mov
out
or
add
test
sub
pop
psubsw
fwait
and
mov
cmp
jae
sar
mov
and
stos
les
add
adc
add
jns
mov
aas
xor
add
push
or
shrl
mov
clc
mov
lret
and
adcb
push
jge
adcb
nop
mov
pop
mov
dec
push
and
xchg
mov
inc
inc
testl
mov
lahf
in
loopne
mov
add
sub
pop
mov
jp
xchg
mov
sub
xorb
repz
sub
jns
push
push
jecxz
or
das
shrb
cli
or
aas
jle
xor
mov
and
dec
in
ror
mov
imul
mov
jle
cmpb
push
and
push
shl
xor
cltd
repnz
and
mov
fstl
les
mov
sbb
add
das
insl
js
push
mov
ja
push
mov
sub
push
jp
lret
xor
dec
iret
loopne
rcrb
add
enter
inc
gs
cmp
popf
mov
fldenv
nop
test
jae
lods
fdivr
push
sbb
mov
lea
inc
sbb
lahf
cltd
incl
roll
lahf
int
pop
xor
and
jo
shl
jno
rclb
mov
sub
jl
push
xchg
cltd
cld
inc
test
lea
hlt
mov
and
xchg
pop
cmp
push
ret
repnz
inc
std
add
inc
bound
frstor
mov
dec
pusha
mov
sub
or
jmpw
or
push
lock
pop
adc
cmp
mov
add
inc
enter
inc
adc
pop
loope
outsl
add
adc
sti
outsb
lret
add
loop
or
les
xor
loop
cmpsb
mov
jo
test
sub
dec
pop
pop
cwtl
add
mov
sar
fiadds
xchg
mov
dec
imul
or
nop
push
mov
adc
js
cld
pop
mov
jg
in
sub
push
xlat
addr16
cmp
rcl
pop
push
movsl
pop
mov
stos
add
mov
cmc
outsb
add
inc
insl
lahf
lret
cmp
jns
cli
popa
jnp
add
pop
negl
ret
jmp
jge
xor
and
ret
jmp
xor
out
mov
fisubs
andl
mov
or
push
fsubs
fdiv
and
iret
shrb
mov
and
add
mov
sub
mov
cwtl
in
in
mov
cmp
iret
mov
bound
push
out
adc
push
rcrb
inc
mov
sub
pop
push
xchg
or
jo
inc
adc
mov
lret
and
ret
xor
cmp
jbe
daa
fldcw
mov
cwtl
and
mov
lods
in
xchg
add
and
ds
int
add
add
lods
mov
enter
inc
ror
stos
or
mov
inc
sbb
leave
in
and
fst
adc
or
aam
out
jp
popa
aam
inc
and
lea
pop
mov
xor
stos
and
rcr
rcl
add
aaa
jns
hlt
dec
or
enter
pusha
lcall
push
sub
rclb
enter
add
test
cld
into
rcl
jp
or
test
push
ds
jmp
arpl
repz
fwait
mov
nop
adc
cmp
test
xorl
mov
sar
xchg
inc
add
mov
jnp
xchg
add
xor
cmp
jb
ljmp
sub
push
push
adc
sub
dec
or
addr16
cs
mov
adc
fadd
ret
sbb
ljmp
aaa
cwtl
adc
mov
jp
clc
pop
test
jns
test
adc
push
mov
cli
cmp
out
fstps
movsb
adc
add
cmc
mov
cli
es
sbbl
xor
mov
cld
and
pop
add
jmp
cmp
and
jo
lcall
add
aam
shl
jmp
inc
popa
adc
pop
sbb
aas
cmp
ss
pop
bound
in
loopne
jnp
xor
rcrb
enter
add
ret
mov
mov
sub
sbb
and
push
lret
jbe
loopne
mov
ret
test
inc
add
fiaddl
adc
ret
lcall
sbb
repz
iret
add
inc
adc
bound
pop
sbb
rol
xchg
sbb
sub
lret
add
jecxz
inc
mov
testb
jbe
push
ja
outsl
fwait
add
xchg
inc
outsb
inc
xchg
add
idiv
sbb
xor
pop
jno
or
arpl
xchg
pop
lea
notl
sbb
add
or
sbb
sbbb
ret
cmp
dec
mov
sub
xor
into
dec
xchg
test
xor
sbb
adc
jo
addr16
mov
pop
xor
add
scas
cmp
rorb
push
pop
sub
pop
js
push
mov
add
inc
fwait
push
push
aaa
push
xchg
clc
pop
sbb
add
stos
mov
inc
in
mov
aam
inc
lods
pop
mov
adc
insb
std
dec
imull
push
sbb
dec
xlat
cld
lock
xorb
int3
push
gs
or
stc
lods
repnz
add
and
jl
mov
add
mov
movsl
shll
sub
sub
dec
jge
mov
faddl
fdivrs
inc
test
fisubs
test
add
int
adc
xchg
les
adc
sahf
out
sti
xchg
dec
mov
ds
xorb
rcll
mov
cmp
jne
test
push
std
sysret
pop
aaa
pop
orb
loopne
rol
add
pop
add
inc
mov
fwait
mov
add
and
pop
popa
insb
outsb
jnp
int
popf
jmp
mov
lds
aas
repz
test
jb
ss
push
cmp
inc
in
dec
mov
pop
nop
mov
sbb
pusha
or
aad
push
testl
pop
pop
or
loopne
repnz
push
add
clc
adc
add
add
sub
xor
add
cmp
or
add
in
cmp
mov
rolb
push
loopne
lret
xchg
mov
pop
or
pop
cld
mov
adc
jb
xchg
adc
iret
pop
cltd
and
lock
mov
xor
stos
or
dec
dec
mov
out
cmpsb
or
dec
add
mov
push
shl
bound
out
jle,pt
out
add
test
cmpb
sub
cld
add
mov
mov
xchg
imul
pop
roll
mov
and
aad
mov
clc
inc
xchg
mov
lock
adc
add
scas
shrb
outsb
sbb
gs
pop
jge
movsb
fucom
stc
popl
pop
xor
sub
push
push
cmp
jne
inc
mov
mov
jno
rcrl
bnd
adc
in
int
sbb
push
fucom
jp
and
in
pop
and
ret
push
add
adc
mov
sbb
add
mov
cmp
jg
aam
dec
add
xchg
push
or
cmp
in
add
movsl
popf
and
cli
andb
dec
add
jne
mov
enter
ss
notb
pop
in
add
jge
mov
repz
outsl
fmuls
test
adc
xchg
push
mov
and
add
hlt
filds
pop
mov
ja
add
cld
nop
sbb
push
xor
mov
rclb
testb
movsb
lcall
repz
xor
jns
mov
movsb
mov
and
lock
scas
add
in
xchg
push
mov
inc
mov
sarb
add
imul
push
push
mov
jbe
shll
pop
jmp
fidivrl
out
scas
push
pop
dec
in
inc
push
mov
cmc
pop
rol
cmp
arpl
fistl
dec
mov
out
mov
bound
xor
dec
mov
mov
xchg
pop
flds
ror
ja
js
adc
inc
add
xlat
fsubr
dec
mov
xchg
pusha
insb
pop
or
fs
stos
outsb
pop
je
xlat
or
sti
nop
sbb
out
divl
fidivrs
cmp
pop
fdivs
jg
add
adc
inc
imul
mov
adcb
movb
int3
adc
xor
and
xor
cmp
add
mov
jg
xor
push
shll
in
xor
cmp
clc
jnp
xlat
repz
cmp
pop
inc
sub
add
adc
outsb
push
adc
mov
mov
in
cmp
repnz
jmp
out
add
sbb
std
xchg
or
hlt
sub
enter
pop
cltd
mov
sub
sbb
divb
adc
mov
add
lea
inc
pop
dec
push
fnstenv
jo
cwtl
ret
jecxz
pop
push
fwait
ret
inc
add
mov
xchg
sub
rcr
scas
xor
add
jbe
cs
movsl
sahf
push
repnz
negb
adc
jbe
add
mov
aas
cmp
clc
js
adc
cmp
mov
xchg
fdivrl
subb
pop
ljmp
add
lods
outsl
cmpl
pop
test
mov
cwtl
add
rcrb
out
sub
sldt
fdivrp
xor
mov
adc
mov
iret
and
xor
and
in
scas
jae
add
fcom
and
inc
push
test
rclb
fistpl
loope
cmpsb
popf
xor
mov
clc
dec
xchg
xchg
cmp
addb
call
dec
add
ds
daa
lahf
adc
push
cmp
lock
add
add
jno
cmp
pop
jle
les
rcrb
clc
fidivrl
jge
das
or
xorl
mov
imul
lret
in
push
dec
pop
mov
jecxz
aas
mov
dec
xchg
enter
cld
sbb
jo
xor
pop
out
dec
rclb
sub
jo
repz
push
xchg
mov
testb
jl
ja
add
xlat
push
icebp
add
sarb
mov
testl
and
lea
sub
and
add
ret
mov
mov
flds
pop
sub
fcmove
js
or
mov
popa
fdivrl
add
jo
stos
out
and
pushf
mov
repz
or
push
push
inc
inc
jnp
and
imul
jne
adc
adc
push
or
lds
dec
cld
sub
call
jmp
addl
sar
addb
nop
in
xchg
sub
mov
mov
stos
in
add
jns
push
add
loopne
dec
mov
loop
inc
pop
stos
and
ds
push
subb
test
fldenv
loopne
xor
hlt
ret
mov
idivb
or
jp
add
outsl
mov
clc
int3
adc
push
add
fcomps
aaa
sarl
jbe
cmc
cmp
sahf
in
into
in
jne
mov
cmpb
ljmp
add
xchg
add
loope
into
aad
jns
out
fsubrs
jl
outsb
dec
cmp
mov
lahf
push
ret
not
mov
ljmp
pop
mov
mov
cmp
mov
add
sbb
xchg
sahf
adc
xlat
fidivrs
jbe
dec
bound
repz
enter
adc
add
pusha
xchg
mov
xorb
mov
arpl
test
imul
popl
rcrb
roll
inc
push
outsl
lods
stos
jg
push
and
sub
push
add
push
faddl
popf
shll
and
add
test
hlt
pop
jno
pop
adc
jmp
in
inc
enter
into
xor
add
iret
nop
lods
int
into
or
sahf
std
daa
adc
addb
mov
into
imul
pop
push
dec
jp
cmp
pop
or
inc
add
jo
rcrb
or
enter
cwtl
mov
dec
push
insl
bound
push
cwtl
mov
cmp
dec
pop
xor
xchg
punpcklbw
mov
sahf
jecxz
daa
mov
outsb
add
sbb
adc
sbb
add
add
std
xor
sbb
mov
pop
stc
leave
mov
hlt
cmp
mov
imul
sub
adc
sahf
test
lret
and
mov
jge
push
push
mov
dec
mov
jl
pop
cmc
mov
aam
pop
mov
pushf
ljmp
inc
adc
add
or
mov
js
loopne
adc
in
mov
pusha
xchg
inc
fdivrs
push
sbb
jecxz
mov
add
orl
pushf
test
cmc
add
adc
cmp
add
fdivrl
or
enter
add
mov
clc
in
fs
jg
mov
andb
add
mov
jmp
fidivs
add
jp
loopne
mov
jb
add
adc
sub
add
cmpsb
push
jmp
inc
test
jle
add
jns
adc
pop
adc
add
cmpsb
daa
inc
sbb
mov
jae
insl
jno
repnz
ljmp
mov
test
mov
xchg
hlt
imul
add
sarl
stos
aad
push
rcrb
sub
cmpb
cmp
pushf
in
and
shlb
ror
test
mov
add
fcomps
pop
mov
add
sbb
mov
pop
sbb
mov
or
pusha
xor
enter
jns
fstpl
mov
jb
dec
sbb
mov
movsb
adc
jmp
inc
mov
loope
push
insb
cmpsl
adc
add
pop
cvtdq2ps
lock
aaa
add
imul
add
mov
push
ja
xchg
mov
jns
add
nop
add
gs
push
and
insl
dec
ret
outsl
sar
aas
sbb
filds
pusha
lcall
dec
jle
add
mov
insl
pop
fs
mov
sbb
add
inc
push
add
mov
pop
cmp
call
mov
push
hlt
pusha
cmp
push
lock
cmp
outsb
and
xor
mov
push
add
xchg
xchg
sbb
fimuls
or
dec
add
mov
scas
mov
mov
pop
xorb
bound
jnp
aas
sub
scas
insl
sub
subb
pop
jmp
cwtl
stc
mov
rorb
icebp
je
add
adc
xor
dec
mov
js
or
or
or
cmpsb
add
in
sub
push
jmp
aaa
jp
das
and
adc
ror
mov
ror
jge
les
insb
push
adc
cmp
fwait
cli
adc
idivl
or
inc
xchg
xchg
mov
xchg
mov
push
add
mov
loope
ret
xor
mov
stc
orl
cmp
or
es
cmp
adc
xchg
fiadds
into
add
jo
fdivrl
add
out
cwtl
xor
stc
scas
repnz
xchg
add
add
fsubrs
insl
mov
jg
add
out
dec
adc
pop
scas
sahf
push
mov
es
enter
jo
push
out
mov
push
rolb
test
xchg
pop
leave
int3
add
std
movsl
inc
pop
xor
add
adc
mov
add
pop
inc
scas
adc
lret
jo
add
ret
sub
pop
xchg
mov
lods
sbb
add
call
add
popf
add
cmp
gs
fdivl
push
test
fisubs
scas
or
adc
rolb
push
inc
dec
add
aam
add
fbld
mov
xor
rcll
inc
daa
pusha
push
adc
lock
add
xor
push
cmpsl
je
js
outsb
movsb
xlat
mov
adc
cmpsl
sub
mov
jmp
sub
add
jle
inc
into
adc
add
or
mov
mov
or
inc
mov
add
stos
push
pusha
lock
mov
nop
push
cmovg
xor
or
push
pop
divb
add
rolb
imul
inc
je
mov
imul
sub
add
das
push
cmp
shlb
add
pushf
insl
orl
lahf
mov
cwtl
sbbb
enter
ljmp
sub
adc
sub
call
mov
out
mov
xor
iret
xor
pop
add
filds
push
pop
and
or
add
pop
push
sbb
and
insb
xor
popa
ja
scas
inc
cmp
add
addl
je
scas
add
arpl
fwait
add
push
ss
shrb
andb
inc
sti
or
or
pop
loopne
xchg
or
sbb
jbe
dec
lgs
int
stc
xor
cmpsl
popf
xchg
add
int3
leave
push
sbb
int
jp
push
cs
add
sbb
imulb
add
jp
hlt
adc
or
ja
loope
cmpsb
add
push
stos
cli
push
dec
add
cld
push
sub
xchg
es
jae
pop
push
push
or
loopne
mov
gs
insl
mov
sub
adc
adc
cmpsb
cmp
shll
mov
sub
cmp
pop
outsl
mov
in
pop
or
xchg
scas
sti
add
add
fwait
pop
or
add
js
add
add
sbb
mov
pop
xchg
dec
xchg
add
and
fs
out
add
leave
sbb
xchg
filds
and
loop,pn
mov
pop
xchg
add
cmpsb
divb
aam
rcr
add
test
and
and
cwtl
cmp
sub
xor
out
adc
pop
pop
mov
repz
mov
add
das
inc
fs
clc
cmp
pop
sub
add
ja
xor
add
push
cmp
sbb
out
push
add
xchg
pop
or
cltd
push
pop
stos
arpl
stc
cmp
xchg
in
xchg
sub
mov
into
andb
mov
dec
lahf
add
jl
pop
pop
xor
xlat
add
imul
sbb
add
test
loopne
leave
add
push
add
cmp
iret
mov
lods
sarb
add
push
cmp
add
push
jbe
inc
mov
add
add
push
lock
push
jg
inc
mov
ret
mov
jb
jmp
enter
nop
push
pop
adc
dec
mov
adc
fstl
add
adc
rorb
mov
fwait
std
sbb
out
sbbb
aaa
sbb
gs
imulb
mov
cmpsl
adc
daa
sbb
dec
jl
adc
sub
xchg
xor
push
pop
and
pop
std
adc
jo
nop
fidivs
test
lahf
jae
xlat
cmpsl
in
mov
call
aam
jo
add
xor
push
hlt
repz
xchg
dec
out
pop
int
shrl
xchg
lods
in
test
cmp
cmovnp
xor
pusha
jl
and
cmpsb
add
rcrb
cmp
in
sub
aas
add
pop
mov
mov
push
movsb
add
xchg
xchg
mov
sub
add
inc
add
shll
push
jl
push
pop
sahf
xchg
pop
push
add
mov
or
xor
xchg
mov
lock
test
xorb
jg
inc
mov
insl
cmp
rcr
cmc
cli
adc
lods
pop
and
test
aas
inc
add
mov
dec
add
pop
pop
pop
imul
nop
mov
xor
insb
lahf
ja
mov
data16
in
sub
cmp
jb
and
jo
mov
pusha
daa
lock
test
push
inc
lcall
les
add
xchg
push
add
out
inc
mov
jnp
jns
adc
jo
pop
int3
hlt
out
sbbl
add
mov
push
and
int3
inc
add
lods
cwtl
xlat
xchg
add
xchg
mov
add
sti
mov
jg
loopne
subb
out
pop
bound
loopne
xor
ja
adc
fisubrs
add
cmc
add
shlb
stc
test
or
out
aad
or
repnz
fwait
xlat
lret
cmc
mov
movsl
js
stc
jae
mov
add
sub
sub
adc
loope
js
cmp
icebp
es
pop
push
sub
sbb
adcb
pusha
sbb
add
stos
and
push
add
mov
jp
test
xchg
xchg
lock
fistps
and
xchg
cwtl
push
dec
lods
repnz
or
add
jb
inc
shlb
push
sbb
aas
lds
sbb
add
outsb
je
cmp
jo
aas
jge
mov
mov
jae
pushf
add
jecxz
push
inc
and
repnz
mov
add
push
decb
add
sub
pop
inc
das
addb
and
hlt
or
fdivrl
pop
pushf
mov
sub
adc
inc
adc
push
sti
sbb
jge
pop
cmpsb
fimull
sbb
pusha
decb
dec
out
insl
xchg
push
in
add
or
cmp
inc
dec
cmp
cwtl
mov
shlb
lods
jle
addr16
nop
add
sbb
add
inc
imul
or
or
std
js
xor
and
xchg
mov
mov
out
mov
sarl
add
fbld
ja
loopne
inc
clc
add
cmp
sbb
mov
push
or
or
add
movsl
adc
addl
dec
cli
dec
pusha
stos
xchg
add
mov
lret
loopne
int3
loop
push
or
ret
ret
xchg
mov
adc
xorb
adc
std
fs
sub
add
inc
test
cmp
inc
mov
lock
in
fsubs
test
out
sbb
add
inc
rclb
jg
mov
push
rol
add
popa
mov
xor
pop
mov
cmpsl
inc
push
lods
mov
add
in
dec
or
mov
sti
aaa
add
rcrl
jbe
mov
jae
sbb
ja
das
nop
pop
invd
mov
cmp
mov
loop
jbe
add
push
or
stos
insl
ja
mov
adc
add
js
inc
inc
inc
ds
daa
inc
iret
jl
add
pop
insl
arpl
adc
jge
and
and
mov
nop
adc
sub
lret
ljmp
scas
add
dec
push
ret
xchg
dec
pop
inc
xlat
or
cs
or
mov
out
cmpsl
and
test
or
sub
test
dec
jmp
mov
std
sub
dec
loopne
out
sub
dec
adc
adc
rolb
push
test
fs
inc
enter
and
cmp
fimull
inc
lahf
pop
and
inc
dec
cli
lret
mov
adc
and
inc
push
into
jnp
rolb
sbb
cmpsl
int3
cld
sub
add
pop
outsl
lahf
loop
pop
jo
mov
mov
mov
jns
out
cmpb
push
cs
xchg
adc
cmp
ss
mov
fucomp
or
cmp
inc
pop
fldl
add
sbb
pop
imul
add
adc
int
inc
mov
imul
add
jns
push
dec
test
mov
push
inc
mov
jmp
push
movsl
jmp
jb
adc
inc
mov
cmp
shlb
arpl
dec
inc
divl
rcrb
mov
mov
add
lret
fistpll
pop
mov
jo
push
cwtl
push
add
mov
repz
leave
aaa
add
add
ljmp
fisubs
ret
mov
in
adc
lret
rcll
adc
insb
lock
js
shll
ret
or
decl
adc
stos
and
addr16
repnz
pop
int
pop
clc
pop
dec
dec
sti
or
outsl
jo
jb
dec
test
std
aaa
mov
pop
shrl
ret
jg
inc
mov
push
pop
push
cmp
dec
inc
jl
lret
xchg
mov
lahf
ficomps
rorb
arpl
jns
adc
cmp
push
pop
mov
std
mov
aaa
add
icebp
imul
repnz
testb
repz
outsl
in
jae
add
gs
jns
adcb
cli
into
add
adcb
xorl
cmp
sahf
pop
mov
cmp
mov
into
and
sahf
add
out
unpckhps
mov
cld
sbb
imul
lds
stos
mov
lahf
jae
add
int
loope
and
pop
add
arpl
sbb
pop
push
add
imul
cmpl
and
sbb
xor
push
movsb
xor
dec
or
pop
data16
and
out
add
mov
add
or
xor
jge
add
cmpb
icebp
and
push
sub
add
stc
iret
or
or
fprem1
mov
fcomi
loope
jb
mov
add
es
jnp
rol
cmp
push
dec
jbe
pusha
dec
outsb
enter
pop
cld
mov
add
sbbl
sbb
push
inc
iret
insl
add
mov
loopne
push
jo
les
pusha
lea
xchg
outsl
in
inc
rcll
jnp
repnz
sub
pop
out
pop
pop
push
add
xchg
bts
xor
in
cmpsl
and
jbe
movswl
or
out
jo
push
jle
cmp
fnstsw
out
nop
cmp
inc
js
jl
add
xor
lods
xchg
int3
sub
rclb
adc
add
inc
fdivrl
add
ds
outsb
add
sub
mov
jle
jmp
mov
in
add
or
add
or
pop
jnp
push
mov
stos
inc
mov
inc
in
sub
dec
mov
dec
adcl
out
int3
scas
adc
lods
sbb
cmpb
push
xor
mov
sbb
pop
cmp
outsl
sbbb
xor
mov
lcall
add
gs
fsubrl
inc
std
adcb
ss
adc
add
mov
mov
inc
call
and
test
lret
repnz
add
dec
ret
jbe
push
push
cmp
and
insb
or
jge
mov
jb
push
mov
mov
hlt
jne
ljmp
add
pusha
popf
fwait
or
out
int
rorb
aad
mov
adc
repnz
add
scas
jno
cmp
xchg
cmp
add
cwtl
cmp
clc
and
mov
cmpsb
jmp
mov
cs
pop
and
daa
xchg
popf
add
mov
sub
out
hlt
add
xchg
mov
aad
push
mov
push
bound
movsb
mov
mov
add
das
mov
pop
mov
addr16
xchg
sub
inc
cmp
sbb
add
jne
daa
jl
xor
pusha
sbbb
and
lock
mov
pop
mov
mov
rol
shrb
add
inc
inc
push
test
adc
cmp
or
aaa
fwait
pop
out
pusha
shlb
jecxz
sti
mov
add
sbb
pop
fcomi
add
and
sbb
fwait
aam
out
dec
repz
mov
out
xchg
mov
mov
mov
xor
and
dec
mov
call
ljmp
outsl
nop
mov
jo
testb
sbb
incb
add
xlat
and
or
add
lcall
push
push
pop
dec
add
push
lds
mov
adc
xor
movsl
scas
hlt
pop
pop
xchg
mov
cmp
push
cmp
and
add
add
sub
mov
mov
add
cmpl
fnstsw
out
adc
cs
jo
cmp
mov
dec
push
clc
in
jno
add
and
lcall
aas
sbb
push
imul
loope
inc
bound
fcmovnbe
dec
imul
lods
jae
stc
ss
mov
fidivl
fdivl
rorl
jbe
pop
jp
inc
add
mov
popf
pop
xchg
pop
jl
sub
add
or
and
jb
mov
orl
add
add
xchg
popa
lock
inc
jno
xchg
mov
pushf
or
ficompl
rolb
in
pop
insl
sarb
shlb
mov
adc
std
les
jmp
lret
add
stos
inc
ror
aas
test
enter
jb
mov
dec
jmp
xchg
call
add
call
rcrl
test
in
sub
bts
push
mov
xlat
repnz
das
jnp
inc
xor
filds
mov
inc
push
mov
pop
add
movsl
mov
cmp
mov
pop
sarb
dec
rorl
jp
shll
fcoms
mov
repz
pop
mov
xchg
xor
idivl
add
or
and
sbb
addl
sarl
in
ds
or
loopne
rol
add
or
jmp
test
xchg
sbb
add
jmp
les
add
push
jo
repnz
or
mov
pop
or
ja
push
imul
jns
add
std
xor
jbe
adc
repnz
imul
add
clc
sbb
loop
cld
xorl
in
enter
xchg
add
adc
movsl
jb
popa
cmp
fistpll
test
ljmp
xor
cmpl
roll
ljmp
mov
add
test
sbb
push
mov
out
fs
mov
xor
pop
cmp
rorb
add
loop
sbb
lret
dec
add
js
insl
adc
mov
pushf
bound
out
sub
cmc
ljmp
push
inc
adc
add
xchg
add
rol
addr16
push
add
cmp
pop
dec
sub
das
sub
xchg
cmc
repnz
sbb
cltd
aad
dec
push
add
mov
pop
inc
cs
call
in
dec
mov
jmp
loopne
and
inc
xorl
popf
jnp
testl
add
mov
xlat
add
ret
das
or
lods
fiaddl
jae
stos
lds
or
je
pushf
add
sub
cs
or
lock
mov
add
or
cld
mov
xor
inc
iret
cmp
rcl
nop
fistpll
push
xchg
mov
fdivrs
pop
dec
push
sub
mov
jg
shlb
rorl
sub
daa
push
dec
js
ret
xchg
sub
jge
mov
lret
cld
cmp
pop
es
mov
xchg
stos
aad
nop
out
add
cmc
js
mov
cmpsb
mov
fcoms
fimuls
add
and
stos
cmpsl
pop
cli
test
insb
pop
adc
add
adc
fcmovne
inc
into
push
aam
outsl
scas
mov
xor
push
in
jecxz
xor
jmp
hlt
daa
cmp
add
mov
pop
lret
add
das
hlt
fbld
push
test
jg
pop
add
lock
pop
mov
xchg
sub
pop
fiaddl
lret
fsubs
mov
mov
or
dec
adc
cmpxchg
push
cmp
push
xchg
outsb
xor
pusha
dec
int
jecxz
add
jns
push
mov
mov
dec
ja
shl
dec
cmc
push
fwait
inc
mov
iret
pop
pop
add
mov
jmp
xor
cmpb
faddl
sbbl
insb
ja
sbb
jo
push
mov
lahf
addr16
add
lods
movsb
mov
jg
push
loopne
inc
add
orl
or
dec
add
mov
rolb
sbb
mov
fildl
cmpsl
mov
add
dec
clc
xchg
sbb
stos
pop
popl
testl
inc
fbld
test
in
aam
push
mov
shll
sbb
jbe
add
add
or
dec
pop
in
mov
jecxz
cmp
pop
outsl
ret
push
sbb
lret
jge
orl
lret
jnp
movsb
mov
jmp
cmpsb
xor
pop
hlt
or
and
shrb
adc
push
fs
jle
push
fdivrs
lds
and
inc
pop
add
and
and
add
mov
shr
add
scas
stos
xchg
in
aaa
jle
add
dec
push
cwtl
std
aam
roll
dec
repnz
nop
jbe
jnp
add
mov
jmp
icebp
aam
adcb
in
pop
xlat
and
inc
and
sub
push
pop
xchg
mov
push
scas
push
push
jo
inc
pop
adc
subb
daa
xchg
push
enter
test
mov
dec
xor
je
dec
add
jno
pop
cmp
les
sub
lahf
arpl
add
dec
push
xlat
add
cmpsb
jecxz
daa
notb
loope
nop
sbb
scas
movb
filds
adc
imul
mov
leave
enter
xchg
rol
inc
jo
or
mov
test
jl
mov
jl
add
ss
daa
push
jb
add
in
aas
sub
enter
sbb
sub
mov
std
insb
or
jne
pusha
aam
dec
cmp
pop
nop
inc
mov
fmul
scas
ds
loopne
add
sub
cmp
xlat
and
add
ss
lea
fnstcw
stos
pop
pop
jo
add
cli
into
xchg
notb
jmp
jmp
mov
fadds
mov
int3
mov
jmp
inc
add
cli
shll
xor
or
incl
jae
jecxz
ret
fcmovu
ljmp
rcll
negl
loopne
push
out
into
pminsw
je
pop
sub
loope
and
inc
int
jne
xorb
loopne
aas
sbbl
jecxz
push
arpl
test
xchg
cwtl
inc
fs
inc
ret
push
rclb
testl
xchg
cvtps2pd
jl
call
add
inc
add
add
dec
cmc
nop
mov
ret
mov
mov
lock
or
sub
push
insb
sbb
pop
movsb
clc
sbb
fisttps
push
add
cwtl
movsl
jno
pop
hlt
jnp
pop
jecxz
xchg
sbb
pusha
push
add
out
xchg
pop
out
push
int3
add
outsb
mov
push
rolb
push
inc
cmp
bswap
add
xlat
dec
sbbb
in
add
loop
add
pop
push
scas
shl
rorl
cltd
add
add
shrl
add
shrl
je
add
shrb
popf
xlat
add
dec
xchg
and
fucom
add
je
push
xchg
inc
jno
add
cltd
xorb
das
call
mov
clc
test
fcomp
test
sbb
rdtsc
in
push
or
pop
xor
cmpsb
pop
pop
roll
jle
push
lods
mov
xor
sbb
adc
clc
rcrl
jo
add
cwtl
fwait
and
xchg
cmpsl
fsubr
add
mov
xchg
jecxz
adc
xchg
rcll
inc
test
pop
out
or
fistpll
push
pop
mov
mov
ljmp
xchg
fadds
jp
pop
mov
mov
jnp
xchg
mov
add
cmc
dec
and
and
lret
add
and
or
scas
jmp
mov
pop
inc
jnp
sti
add
adc
mov
pop
imul
je
add
into
loopne
sahf
add
or
fdivrl
sbb
insb
add
mov
and
xchg
add
cltd
sub
or
mov
jl
mov
imul
add
mov
repnz
add
sub
mov
push
cmpsb
addb
cltd
mov
jmp
stc
mov
popf
lods
lea
mov
mov
test
add
outsb
nop
jecxz
and
add
mov
inc
xchg
sahf
pop
flds
jne
jg
loop
andb
leave
cmpsl
enter
add
add
mov
lods
sub
jnp
mov
les
ret
xchg
add
fidivrs
adc
out
popf
xchg
sub
mov
xchg
bound
adc
hlt
xchg
lahf
inc
mov
pop
add
cmp
rcrl
pop
dec
in
fildl
pop
or
dec
ret
or
je
add
mov
nop
inc
int3
clc
cmp
pop
jle
lods
jae
sbb
mov
sbb
jmp
fbld
stc
in
add
lahf
dec
add
and
xor
divb
movsb
dec
stc
add
bound
xchg
push
inc
inc
cli
add
aaa
iret
in
les
movsb
jl
add
xchg
stc
sbb
cmc
push
mov
out
add
or
jns
call
jno
xor
xor
fstp
sarb
add
test
sub
lods
push
add
pop
cmpps
jo
xchg
push
jnp
jg
add
popf
aaa
rcrb
and
fbld
add
lcall
popa
add
repnz
xor
test
data16
fidivrl
jno
outsb
dec
aas
mov
js
inc
add
jmp
sbbl
cmpsl
insb
xchg
stc
rcrb
orl
enter
fdivrs
dec
xchg
adc
mov
inc
sahf
sbb
pop
xor
ret
and
jmp
jge
inc
or
push
mov
insl
idivl
or
add
not
xchg
cld
sub
add
pop
inc
pop
add
cs
add
jl
aas
fwait
outsl
push
push
stos
sub
dec
add
sahf
add
outsl
loope
and
cli
test
inc
cmpl
sbb
sub
xor
aad
cmp
cmpb
sub
jo
xchg
adc
mov
add
mov
in
pushf
pusha
adc
mov
mov
fneni(8087
jg
inc
pusha
and
mov
pop
daa
lods
jo
sbb
testl
fcmovnb
pusha
mov
pop
popa
adcb
or
in
clc
pusha
or
mov
fistps
inc
mov
add
pop
insl
adc
sbb
je
movsl
inc
popa
add
mov
add
pop
test
push
xchg
pop
lcall
and
push
mov
or
pop
mov
in
leave
cmp
flds
test
or
mov
inc
stos
sbb
pop
jnp
fiaddl
or
hlt
or
ljmp
outsb
cmp
clc
stos
lret
pop
adc
lahf
lock
xchg
pop
jo
inc
mov
shlb
dec
cld
ds
cmp
lock
or
pop
inc
or
add
xor
clc
xchg
movsb
mov
pushf
sub
cs
or
mov
aad
and
xor
pop
pusha
add
aaa
fildl
mov
ret
jp
adc
xchg
je
push
push
cwtl
pop
xchg
sbb
lret
push
push
in
je
sbb
sysexit
les
inc
movsb
mov
shrl
push
and
sub
mov
dec
js
add
pushf
lcall
insl
js
add
sub
xchg
call
pop
mov
add
into
cmpsb
faddl
add
in
sbb
adc
add
out
add
and
into
jbe
pop
outsl
test
or
add
cld
addr16
push
push
mov
mov
lods
mov
xor
jl
aas
fs
in
test
andb
jg
pop
add
int3
xor
add
or
pop
jg
shll
lcall
jo
jns
push
dec
add
and
aaa
pop
mov
and
mov
je
mov
sub
std
mov
cmc
nop
fldenv
pop
mov
add
loope
add
mov
gs
insb
sub
das
std
sbb
push
jne
cmp
je
sub
sub
mov
push
add
pop
mov
jp
lcall
pop
loope
jge
xor
adc
or
imul
ret
or
bound
mov
aam
testl
adc
cmp
mov
ficomps
jmp
or
sub
leave
or
inc
cmp
mov
dec
in
out
push
test
add
mov
add
xchg
mov
popa
loope
clc
rolb
mov
sub
sbb
mov
and
stc
push
ljmp
mov
pop
add
pop
pop
xlat
mov
pusha
and
push
add
and
mov
xlat
orl
pop
daa
es
aaa
sarb
enter
popf
outsb
jl
jp
add
inc
repnz
adc
loope
xchg
sbb
and
cmp
cs
pusha
push
xor
cmpsl
fnstsw
add
sbbb
movsb
in
add
xchg
les
mov
inc
cli
lret
mov
add
je
iret
jno
aas
push
sub
sub
sbb
stos
pop
cltd
loopne
scas
nop
adc
cmpsb
into
cld
sahf
add
add
inc
pop
sub
es
cmovno
xchg
ret
faddl
mov
jno
cwtl
mov
mov
mov
ja
int
repnz
pop
xor
add
rcr
add
mov
enter
imul
or
insb
lcall
sbb
cltd
fistps
sub
add
inc
lock
lret
mov
lcall
add
in
scas
hlt
jno
subb
or
push
rclb
add
pop
mov
dec
lret
inc
in
jl
or
and
adc
pop
add
jo
push
xchg
mov
sub
push
and
jns
pop
call
lock
push
mov
mov
adc
or
stos
ret
add
std
inc
loopne
or
pop
push
mov
jae
inc
xor
add
ficoms
icebp
sub
mov
out
inc
or
mov
and
rolb
pop
cmp
dec
aam
inc
add
pop
aad
mov
push
test
xchg
fisubrs
dec
out
iret
adc
loopne
les
push
fadds
add
xor
sub
ja
xor
movsb
jo
push
push
dec
or
jp
and
pushf
add
insb
or
or
std
and
dec
ja
cmp
mov
rcr
cmp
loop
xorb
push
jno
pop
dec
mov
test
mov
add
jp
js
add
in
inc
mov
clc
lock
cwtl
sub
ret
sbb
jmp
mov
sub
loopne
push
enter
add
shll
mov
jo
xlat
daa
push
push
cltd
sti
dec
shlb
pop
stos
or
mov
and
push
cmp
add
jle
inc
dec
jo
cmp
jnp
filds
nop
insl
jo
add
add
sub
sbb
sub
dec
sub
adc
push
fcomps
xor
sub
sub
ja
pop
push
outsl
decl
inc
in
add
push
shlb
adc
inc
pop
ja
xchg
fiaddl
mov
xor
fst
ds
daa
push
jns
pop
or
dec
and
sbb
cmp
add
jl
push
sarb
add
popf
out
lock
outsb
sahf
sub
xchg
nop
ds
fisttps
js
clc
or
popf
scas
sbb
rcrl
add
call
pushf
add
cli
xor
or
or
cmp
test
add
jno
out
inc
pop
pusha
scas
jecxz
sahf
aaa
sub
xchg
fimull
mov
push
add
jg
xchg
movsb
fcmovnbe
rcrb
mov
testb
jmp
jns
shlb
inc
mov
loop
int
adc
popa
dec
pop
cmp
mov
fwait
xor
test
adc
jne
add
in
dec
dec
add
inc
fistpll
ret
lock
push
lods
test
inc
clc
mov
dec
push
nop
cmp
rol
add
xor
pop
aad
adc
push
push
scas
out
filds
adc
aad
cmp
outsl
sar
iret
ss
jb
xchg
js
ror
popa
add
adc
cld
add
xor
ret
xor
jno
adc
or
rcll
aam
ds
sub
adc
add
mov
lds
or
shl
dec
dec
add
out
mov
in
cmpsl
or
jp
rolb
bound
push
aas
fcomps
pop
adc
cltd
add
cmp
lods
adc
jb
push
scas
sbbb
cmp
cmc
add
les
addr16
fs
into
add
xchg
notl
sbb
vmovntps
aam
aas
pop
xchg
cld
or
mov
add
mov
jle
test
sub
jg
shl
inc
int3
fidivs
or
jae
xchg
inc
cld
lock
je
lret
xorl
out
lds
xor
jmp
mov
mov
jno
lcall
push
push
sbb
in
es
mov
orb
push
xor
test
lret
adc
xor
cmp
rcll
movsb
aam
movsl
shrl
inc
xchg
bts
and
imul
daa
dec
and
sbbb
or
and
mov
jns
xchg
insl
xchg
and
mov
ret
add
loop
fisttps
mov
mov
clc
out
shl
mov
add
test
stc
push
or
js
sbb
movsl
shlb
pop
movl
mov
cmc
pop
dec
lock
mov
adc
dec
push
pop
andb
adc
jecxz
inc
inc
mov
add
test
addb
add
aas
sub
and
sub
add
and
cwtl
adc
clc
faddl
sbb
icebp
sub
in
addl
ljmp
inc
out
adc
movsb
jbe
sbb
xchg
cmp
loope
loopne
sub
cmc
imul
mov
sarl
es
jecxz
xchg
test
cmp
inc
loope
sbb
lret
dec
and
add
inc
xor
popa
xchg
jmp
pop
lahf
mov
adc
add
xor
push
shrb
lret
xchg
mov
rcr
aad
add
mov
mov
cmpl
rcl
out
outsb
in
mov
mov
push
inc
out
add
aaa
mov
into
lret
shrl
add
loope
je
adcb
jp
mov
push
js
push
dec
and
push
mov
daa
sbb
mov
and
add
jnp
xor
mov
mov
clc
push
data16
ljmp
sbb
mov
add
push
movsb
adc
pusha
cltd
add
sbb
cld
fstps
lock
add
fs
fisubl
mov
mov
add
xorb
push
out
divb
filds
pusha
ror
jle
add
repz
into
sbb
jo
or
push
pusha
je
add
loopne
adc
filds
rep
sub
int
fisubrl
xchg
nop
push
inc
add
ret
loope
into
dec
add
or
cmpsb
orb
mov
add
sbb
loopne
adc
clc
xor
bound
add
pop
inc
dec
mov
pop
inc
pusha
push
mov
add
mov
cld
mov
add
sbb
sbb
adc
mov
add
jb
prefetcht0
add
out
push
loopne
dec
xchg
insb
ja
jmp
jmp
nop
add
xor
fstpt
scas
and
push
adc
dec
push
inc
xchg
js
or
cs
in
add
mov
cltd
repnz
or
outsl
dec
mov
pop
cli
jle
add
cwtl
fwait
pop
shlb
add
jb
jecxz
or
jmp
loop
imul
test
cld
mov
dec
push
push
icebp
add
xchg
mov
ds
dec
test
mov
test
or
int3
pop
mov
sbb
jno
cltd
and
je
pop
andb
xor
add
push
lods
adc
dec
push
es
dec
xchg
dec
add
call
sti
in
js
ffree
xor
adc
sub
dec
push
loopne
in
cmp
or
rorb
mov
cld
in
arpl
mov
add
dec
dec
lods
mov
jbe
jae
hlt
cmp
call
jg
pop
bound
jp
inc
lea
sub
test
push
xchg
out
add
gs
add
stos
fnsave
and
mov
inc
pushf
jae
enter
pushf
jl
mov
test
jne
sbb
shll
fbld
adc
in
jb
cmp
les
push
pusha
mov
and
repnz
mov
and
daa
lock
jecxz
in
or
cmp
mov
and
aam
and
cwtl
adc
mov
add
adcl
enter
push
xor
add
aas
sub
pusha
dec
sbbb
add
inc
adc
sbb
jne
push
jmp
add
iret
mov
sti
addr16
sarl
pop
test
subb
cmp
ds
add
add
pop
movsl
leave
imul
mov
outsb
sub
fwait
xchg
add
ds
push
dec
decb
pop
xchg
inc
mov
and
xor
test
clc
pop
cmp
mov
imul
sarb
cltd
loopne
xor
mov
mov
xchg
adc
leave
dec
push
add
push
and
pushf
bound
mov
pop
adc
es
add
or
and
shrl
add
mov
lcall
jge
dec
adc
data16
jbe
mov
inc
jae
push
das
cld
je
adc
mov
js
scas
data16
pop
add
cmpsb
lahf
stc
add
and
loope
adc
aaa
out
movsl
mov
faddl
mov
lret
insl
or
adc
leave
mov
or
int
and
popa
hlt
jl
ret
push
jle
push
inc
and
xchg
pop
je
gs
and
sbb
push
cmc
pop
inc
push
rolb
scas
notl
imul
stos
std
xor
mov
adc
loopne
mov
jo
mov
pop
pop
clc
fsubrp
int
insb
xchg
mov
add
mov
mov
sbb
bound
negl
adc
fmuls
inc
mov
or
insl
add
loopne
add
sarl
mov
stc
popf
sbb
fists
enter
and
aas
fsts
sbb
mov
dec
jl
fisttps
jmp
hlt
sub
fnstcw
notl
jge
cli
or
add
scas
das
cmp
sarl
xor
stos
xor
add
add
scas
or
pop
enter
jo
add
jns
icebp
jb
inc
pop
dec
mov
push
xchg
outsl
pop
test
xchg
or
jno
xor
inc
sbb
adc
fcoms
dec
or
mov
add
popl
cwtl
iret
push
mov
roll
jg
mov
xor
xchg
std
cli
clc
add
xlat
jmp
cmp
fiadds
icebp
filds
enter
and
or
jb
xchg
mov
jo
stos
int
sub
xchg
sbb
dec
and
repnz
push
aad
xchg
xchg
xor
inc
inc
mov
call
xchg
ljmp
std
add
andl
or
stos
das
xlat
rclb
sbb
nop
popf
add
and
mov
mov
push
fmul
enter
imul
pop
repnz
add
add
cs
fistpll
pop
xchg
gs
dec
enter
jle
xor
ljmp
test
pop
or
jne
je
add
mov
cwtl
daa
shll
roll
push
jl
xchg
mov
pop
add
stos
lock
lods
jo
inc
push
and
jp
fwait
lock
add
outsl
dec
mov
jmp
lret
add
sub
cmp
aad
das
loopne
xor
shll
pop
jge
js
cmp
lret
inc
dec
or
dec
jo
add
push
and
daa
lock
cmp
enter
outsb
push
xchg
jle
jns
das
idivb
ja
pop
inc
enter
cmp
xchg
add
stos
ds
cmovae
mov
jno
xchg
fistps
and
dec
mov
fwait
popf
add
enter
jno
sub
mov
aad
or
add
add
sub
push
call
adc
pop
fisubl
movsb
inc
sub
popf
pop
ds
lods
xorb
or
out
pop
and
sarl
in
sbb
xor
in
cli
adc
dec
clc
cld
add
adc
cld
or
enter
push
add
mov
add
xchg
mov
dec
lock
pop
sub
lcall
rcrl
ret
add
popa
rol
push
mov
lret
rorb
sbb
add
or
shlb
jo
in
push
mov
shlb
pop
int3
jnp
xchg
rcrb
leave
pop
andb
mov
push
sub
fadds
pop
in
fsubrs
sub
push
loope
rorb
outsl
dec
sbb
jb
or
xchg
ljmp
comiss
je
and
pop
xchg
out
je
and
clc
and
call
pushf
pusha
aam
or
les
jl
addl
loopne
lret
icebp
lahf
out
mov
dec
and
pushf
ds
sbb
mov
cld
push
inc
and
push
lds
movsl
mov
mov
loopne
mov
dec
dec
rorb
mov
or
jo
je
pusha
add
mov
gs
add
jo
cmp
push
sub
and
sbb
repz
ljmp
mov
cmp
cmp
or
mov
add
push
pop
adc
xchg
clc
pop
rcl
shll
mov
sbb
or
das
xchg
dec
mov
sub
sbb
cmp
movsl
pop
lods
add
in
lcall
stos
lock
pop
pop
sbb
mov
mov
dec
jmp
and
add
call
mov
push
jmp
loopne
mov
into
js
mov
test
mov
jno
add
cmp
jp
cli
sbbb
adc
std
int3
and
inc
dec
add
insb
or
lods
xlat
popa
into
add
xor
push
add
out
rcll
adcb
stos
add
movsl
xchg
fists
xchg
popf
mov
das
add
mov
jecxz
nop
incb
outsl
pop
jne
leave
repz
cmpsb
fdivrs
lds
mov
and
rolb
add
adc
add
scas
push
pop
add
and
or
das
pop
xchg
add
stc
inc
sub
std
pop
rcll
dec
cmc
sub
aam
add
lods
test
cmp
cld
mov
xchg
pop
add
iret
pop
nop
adc
mov
xlat
push
dec
call
xor
dec
add
cmp
pusha
dec
mov
lcall
mov
popf
mov
notl
ss
or
test
sub
sbb
and
pop
mov
push
xor
xchg
loopne
or
push
inc
mov
test
mov
cmpb
cmp
push
dec
jnp
inc
repz
lret
push
cwtl
dec
fstpl
add
mov
jo
je
or
pop
or
nop
inc
mov
mov
and
jnp
add
loop
in
fidivrs
sub
add
cmc
or
insb
xchg
add
loop
adc
inc
dec
bnd
adc
xor
jmp
outsb
xchg
adc
lock
pop
add
stos
or
push
jb
sahf
fadd
andl
sar
xor
push
addl
lea
xchg
daa
cld
or
add
xchg
mov
aaa
cmp
pop
fiaddl
scas
or
xor
pusha
cmp
add
xchg
ffreep
addr16
mov
or
mov
inc
das
popf
adc
inc
mov
std
jle
push
movsb
cmpsb
lcall
pop
mov
push
xor
pop
mov
sbb
scas
jb
enter
xchg
lock
int
insl
dec
push
push
jnp
fdivrs
xchg
arpl
movnti
xchg
push
inc
shrl
lcall
pop
jns
add
ds
les
into
pop
push
mov
add
mov
cmp
xor
jecxz
pop
or
or
add
jl
sbb
jmp
xchg
add
jl
cmp
inc
roll
push
adc
int
dec
mov
mov
and
std
fimuls
ret
frstor
je
rolb
mov
cmp
inc
add
pushf
mov
fsubl
add
out
jnp
cmp
pop
or
xor
push
mov
adc
cli
into
mov
sbb
fsubs
inc
test
xorl
push
stos
sti
sbb
sub
shlb
sbb
xchg
jle
push
and
jmp
mov
ret
ffree
xor
test
sbb
daa
dec
inc
fcomp
add
push
pop
xor
icebp
jb
xor
pop
push
inc
sub
pop
mov
dec
ret
jg
imul
test
out
jnp
cmp
inc
sub
adc
jecxz
test
dec
xor
lods
out
mov
xchg
clc
pushf
add
adc
pop
test
iret
test
sbb
rorl
repz
xlat
push
push
adc
arpl
dec
outsl
pop
sbb
sub
ss
hlt
or
loopne
cmp
mov
mov
stos
sub
xchg
push
fcompl
popa
dec
xchg
sub
xor
mov
add
out
repnz
push
xor
mov
popa
icebp
mov
jne
es
add
sbb
andb
stc
test
xor
cmp
mov
aad
or
andb
les
sbb
jb
and
add
pop
xchg
fiadds
adc
out
sub
push
add
orl
mov
dec
fadds
mov
aad
sub
add
sub
sub
faddl
sbb
add
mov
mov
inc
mov
int
sbb
xchg
cmc
out
int3
addb
aas
ds
adc
dec
mov
js
test
loopne
mov
jg
adcb
jne
sbb
jo
or
mov
js
pop
andb
ltr
adc
add
fcoml
sub
or
or
or
mov
nop
rorb
movsl
lds
loopne
push
dec
add
add
cld
pop
pop
loopne
outsb
out
add
fmuls
ss
mov
cmpb
clc
add
daa
or
cmpsl
dec
rol
test
ret
add
outsb
in
adc
adc
jno
ret
jecxz
mov
push
sbb
xor
pop
bound
xor
repz
scas
pop
arpl
fs
push
mov
adc
inc
in
cmpsl
add
sbb
add
jb,pn
xchg
orb
popf
sub
sub
xor
push
scas
dec
int3
mov
rolb
das
sub
hlt
and
je
cmp
add
call
dec
or
or
adc
fimull
push
mov
jae
sbb
int3
mov
in
jo
repnz
jmp
inc
inc
fdivrl
dec
add
dec
mov
test
adcb
loopne
push
ljmp
add
mov
imul
arpl
fdivrl
mov
adc
jg
js
rcll
inc
jno
mov
addb
jge
lret
pop
inc
sub
hlt
rcrl
xchg
ret
mov
and
mov
shr
add
xchg
rclb
insb
adc
pop
and
or
dec
xor
call
call
jo
and
xchg
nop
pop
addr16
mov
adc
into
dec
js
adc
mov
mov
daa
cmp
add
jmp
push
dec
stos
nop
push
jno
pcmpeqb
outsb
mov
xlat
add
leave
ja
xor
dec
aad
clc
mov
pop
cmp
push
cmpl
lcall
les
sub
pop
and
mov
pop
out
cwtl
push
jecxz
andl
add
testb
mov
mov
add
cmp
incb
ljmp
out
pop
xor
mov
fisttpl
or
adc
mov
jne
ds
cwtl
aaa
sub
addr16
test
js
or
int3
vmovsd
arpl
cwtl
test
adc
xor
dec
add
fdiv
clc
mov
jecxz
fistps
or
std
gs
lea
sub
xor
mov
les
sub
push
daa
and
push
je
pop
jo
cwtl
jne
add
mov
in
or
push
in
lock
sbb
add
add
cltd
jl
pop
xor
aas
pop
out
adc
dec
add
cli
subb
outsl
enter
sbb
ret
fnstsw
push
fadds
repnz
push
cmp
push
inc
daa
dec
incb
pop
mov
mov
mov
hlt
mov
pop
pushf
add
xchg
inc
nop
push
xchg
push
add
fdivr
pusha
dec
sti
or
pop
rolb
mov
loopne
mov
jl
add
call
dec
mov
add
push
adc
sbb
xor
call
add
decl
and
pop
clc
rcl
mov
notb
sub
push
js
jae
jbe
adc
xorl
lahf
inc
insl
outsl
xchg
pushf
repz
mov
in
int
cmp
add
mov
in
mov
mov
loopne
and
sbb
mov
pop
leave
jo
imul
mov
iret
pop
xchg
or
mov
push
add
insl
jae
int
adc
or
sub
fldt
mov
inc
nop
shlb
lods
div
in
iret
jecxz
pop
xor
cwtl
push
cld
loope
or
inc
push
add
test
jno
add
pop
subb
je
das
popa
fwait
xor
into
out
or
sub
call
iret
jns
add
pop
adc
add
ret
enter
jecxz
ror
jno
or
push
aaa
sub
sbbb
test
in
ret
mov
jb
inc
adc
add
cmp
push
and
sbbl
outsl
adc
dec
xor
sahf
loopne,pn
add
cwtl
adc
js
add
clc
call
pop
test
mov
mov
fdivl
add
inc
pop
insb
test
les
xchg
sub
mov
xlat
add
mov
test
stos
mov
jle
lods
fidivs
add
cmpl
or
in
xlat
fwait
jp,pt
loopne
add
cmp
and
mov
inc
add
cld
cmpsb
jg
rorl
add
fs
dec
or
fsub
in
add
lcall
and
roll
scas
out
arpl
inc
jl
repz
adc
inc
add
lds
xchg
or
add
jmp
add
add
push
xor
add
xlat
lock
fdivrl
add
testl
mov
mov
pop
addb
push
sbb
subl
pushw
sar
cli
out
jp
add
or
aam
jbe
andb
jnp
mov
in
imul
mov
test
enter
dec
pop
fiadds
aam
push
jbe
sbbl
cmc
lcall
push
fimuls
push
add
nop
ret
push
enter
add
mov
repz
xchg
clc
nopl
push
leave
test
cs
push
pop
andb
dec
sbb
mov
les
xor
ljmp
add
bnd
lods
sub
add
inc
pop
xor
sub
inc
cld
repz
jb
add
pop
push
dec
add
movsl
mov
stos
xorb
mov
cmp
das
insl
ljmp
stos
jecxz
rcll
clc
add
in
mov
in
mov
add
or
adc
adc
fisttps
and
test
lods
repnz
aas
inc
frstor
add
mov
lcall
enter
and
loopne
pop
and
mov
mov
xor
xchg
addr16
add
pop
push
addb
rcr
repnz
imul
adc
popa
dec
sbb
sub
mov
lret
pop
shlb
pop
out
imul
mov
mov
std
mov
shll
bound
repnz
das
sub
jl
cld
out
subb
push
inc
xor
mull
sbb
sbbl
imul
jle
add
fnstenv
add
insl
cmp
addl
add
or
cmp
push
add
adc
in
xlat
mov
mov
ror
sub
pop
gs
mov
int3
cmp
push
inc
xchg
test
or
mov
mov
loopne
aam
pop
mov
cmc
inc
mov
and
ljmp
push
add
in
lret
gs
shl
mov
aas
add
add
es
inc
pop
stos
icebp
mov
jne
ficompl
sbb
sarb
mov
fadd
pop
mov
pop
addb
and
push
xchg
imul
jns
into
push
fwait
xor
and
inc
imul
insb
push
cmp
and
add
xchg
imul
icebp
jne
pusha
mov
lock
or
rorl
stos
sub
jle
add
xchg
mov
iret
pop
cmpb
addr16
cmp
sbb
cltd
pop
mov
movsl
push
loopne
fdivs
mov
or
cmpsb
filds
mov
pop
clc
aaa
cmp
shll
movsl
int
xor
popa
xor
dec
or
or
fdivl
inc
out
add
xchg
jl
jno
add
ret
sbb
mov
movsl
leave
je
les
push
cmp
std
pop
lock
dec
inc
fmul
xor
sub
hlt
add
mov
cmpsb
jae
and
xorb
test
lea
ds
scas
add
xor
inc
jmp
gs
sbb
adc
arpl
add
loope
roll
sbbb
push
cmp
jg
das
popa
sbb
sub
out
in
and
xor
jle
add
push
repnz
stc
adc
shl
clc
add
jp
lret
jnp
jl
add
dec
stos
pop
pop
or
add
mov
add
pop
ret
cld
fnsave
or
mov
and
or
cmpsl
add
push
insl
in
insb
roll
jp
mov
call
pop
dec
dec
mov
sub
mov
daa
inc
sarb
loopne
or
xorl
mov
lods
cmp
pop
xor
jp
dec
push
add
mov
mov
std
pop
cmpsb
jbe
mov
or
mov
cmp
shlb
sbb
arpl
fcomp
jb
jle
add
in
and
dec
jl
pop
shlb
or
or
mov
mov
cmp
mov
jl
loope
clc
or
lcall
xor
popl
or
jne
pop
cwtl
jns
add
mov
mov
adc
jp
mov
cld
mov
jp
jo
xchg
or
jge
jl
movsl
push
mov
mov
stos
rcrl
ds
fsubrl
mov
mov
into
adc
adc
sahf
mov
add
out
mov
loope
adc
sbb
fldl
lret
outsb
out
and
jno
scas
jmp
xchg
test
nop
pop
jle
popa
push
stc
subb
cwtl
lock
iret
insb
dec
dec
fwait
shl
std
mov
dec
mov
fdivrl
add
push
mov
push
add
mov
add
shl
or
sbb
lock
cmp
jle
ret
add
neg
f2xm1
mov
mov
push
add
xor
mov
jg
mov
icebp
shl
scas
shl
insl
sub
fsubl
loope
and
add
jne
add
jae
cmpb
ret
mov
out
add
jge
dec
lcall
add
mov
pushf
test
inc
jo
repnz
adc
xchg
adc
stos
addl
ret
fs
mov
rclb
lock
mov
jmp
cmpsl
fcmovb
scas
lock
popa
out
stos
arpl
inc
add
insb
scas
sti
jno
das
or
in
mov
stos
or
inc
pusha
notl
mov
sub
aad
inc
pusha
jno
pop
cltd
xor
insl
cwtl
icebp
add
lret
mov
sbbb
adc
fstpl
and
pusha
xor
out
daa
xchg
clc
xor
jo
push
add
decl
add
push
add
mov
pop
add
inc
mov
jmp
sti
out
inc
mov
jnp
add
sub
jns
lret
xchg
iret
add
scas
add
push
popf
sbb
ljmp
mov
add
xchg
pushf
sub
hlt
mov
clc
sub
mov
test
push
out
lds
dec
xchg
cmpsl
lcall
jo
adc
push
popf
imul
scas
stc
adc
pusha
insb
out
or
jl
aam
sub
add
adc
loop
ljmp
ja
ss
out
and
les
gs
pop
cld
inc
pusha
imul
lods
pop
xor
imul
jecxz
jl
add
test
aam
call
or
push
cmc
inc
ds
stos
loop
popa
jmp
or
inc
or
pop
jbe
push
sbb
addr16
mov
lahf
dec
add
sbb
xchg
in
add
lea
shlb
pop
push
test
cmpb
push
cwtl
icebp
ds
sbb
jl
outsl
lret
in
scas
pop
xstore-rng
cmpsl
shl
and
push
call
es
pusha
jns
jno
cmp
mov
or
push
lock
aaa
lock
into
push
loopne
push
cmc
and
sbb
outsl
sbb
lods
push
inc
shrb
or
pusha
shlb
mov
or
movsb
add
insl
dec
mov
sub
jbe
xchg
xor
in
aad
add
mov
pop
adc
stos
mov
enter
mov
je
add
rorb
stc
ret
repnz
add
pop
fsubr
mov
pusha
xchg
xchg
inc
push
aad
pop
jmp
pusha
fimull
roll
or
mov
adc
jecxz
vpsubusw
icebp
int
jg
jnp
aam
add
in
cld
rorb
sub
js
or
push
in
ret
decl
js
jbe
or
stos
pop
pusha
sbb
cwtl
jecxz
fcomps
dec
mov
cmpsl
lock
add
shll
sbbb
imul
int3
jge
add
lock
arpl
mov
paddusw
cwtl
leave
mov
pop
or
loopne
insl
popf
adc
aaa
shlb
add
xlat
xor
pusha
ret
cmp
fcoml
mov
inc
inc
call
in
sbb
or
jmp
mov
sbbl
push
mov
mov
mov
jns
hlt
and
and
nop
mov
push
lock
mov
and
cltd
loop
cmp
enter
je
cmp
test
cmp
sub
ret
fstpt
add
add
js
insb
push
xlat
sub
xor
xor
cmp
sub
adc
xor
test
push
sub
mov
mov
or
sahf
jle
andb
mov
mov
pop
xor
mov
hlt
shlb
add
push
cmp
add
sub
addr16
out
enter
mov
sub
fisubrs
lock
jne
cmp
jmp
enter
push
out
int3
add
cmpsl
inc
pop
outsb
je
add
shl
sbb
inc
and
pusha
adc
add
into
popf
and
or
cmp
stos
mov
pop
das
fwait
jae
mov
push
fnstenv
push
mov
loopne
add
fisubs
add
int3
xchg
adc
scas
inc
and
mov
pop
mov
mov
sub
ss
mov
pop
int
xlat
aas
add
jno
xor
mov
sbb
lods
add
shl
add
xlat
add
outsl
sub
adc
ret
fdiv
inc
scas
pushf
mov
mov
leave
pop
push
scas
inc
add
ja
ret
sub
fdivr
push
mov
inc
scas
lock
inc
mov
into
push
js
cwtl
mov
dec
inc
int
cltd
add
and
das
popf
nop
nop
lea
rcrb
mov
add
jo
push
add
mov
aad
leave
test
add
add
xchg
sarb
cmp
aaa
lea
cli
sahf
sbb
ljmp
flds
mov
cmpsl
or
lock
pop
inc
stc
hlt
dec
test
push
add
movsb
mov
imul
aam
xchg
mov
cmp
push
lret
lods
xor
push
or
add
scas
adc
mov
pop
mov
sarb
inc
add
je
aas
clc
add
mov
or
out
pop
push
insl
mov
out
mov
add
cmp
les
rorl
clc
lods
xchg
jne
sub
add
or
test
add
cvtps2pi
jbe
pop
push
mov
push
xchg
cli
add
pop
bound
jp
jecxz
adc
or
adc
mov
pop
or
jo
rcrl
cmpsb
xchg
inc
rcr
jo
jnp
xchg
inc
nop
divl
jg
nop
dec
arpl
add
mov
pop
sub
shlb
hlt
daa
mov
jp
in
add
fs
push
and
adc
pop
adc
je
add
icebp
lods
fstpt
dec
push
dec
xchg
add
push
mov
and
lea
das
jno
into
bound
mov
popa
inc
adc
daa
adc
cmp
das
mov
push
jmp
push
dec
add
and
aad
fs
pop
ss
cmp
add
fadd
stos
in
push
xchg
lock
xchg
pusha
sbbl
adcb
call
pop
addb
inc
xchg
jp
insb
arpl
jne
add
dec
js
mov
or
jnp
mov
cmp
cmp
scas
call
add
inc
addr16
cwtl
test
push
js
fmul
cmp
cmp
dec
in
xor
jnp
and
outsl
add
ljmp
jl
add
imul
nop
or
pop
add
stc
inc
loopne
xchg
test
xor
jns
and
in
lret
dec
dec
lds
hlt
scas
add
icebp
jo
add
popf
adc
movsb
addr16
mov
sub
dec
mov
cmpb
inc
nop
add
stc
or
sbb
test
and
pop
into
push
mov
dec
movsb
aaa
fwait
pop
test
and
inc
add
in
loopne
nop
js
xchg
fmull
jnp
jl
jmp
shlb
js
int3
ss
orb
sub
push
add
lret
jae
or
pop
push
cmp
ret
push
punpcklbw
mov
add
je
daa
cmp
fistpll
cmp
xchg
add
ret
ljmp
or
mov
je
sub
or
mov
dec
adc
sbb
xor
iret
jns
stc
dec
mov
sar
pop
pop
test
adc
adc
sbb
cltd
mov
faddp
rorb
adc
bound
xlat
int
scas
inc
xor
scas
rolb
cmc
sub
in
add
cmpsb
orb
mov
adc
lcall
sbb
into
fwait
std
xor
int
cld
mov
add
inc
xor
push
or
jecxz
test
test
jg
int3
lods
pop
adc
inc
jmp
mov
out
insb
lahf
shlb
pop
sub
je
out
repz
aaa
orb
adc
mov
push
fbld
insb
ficoms
cmp
mov
movsl
jb
cld
sub
cmpsl
loope
xchg
push
test
in
outsb
add
dec
or
jo
movd
mov
inc
pusha
sbbl
sbb
call
adc
jns
ja
push
and
outsl
or
stc
jmp
into
add
in
xcrypt-ecb
cmpsl
lret
inc
jb
mov
rolb
xchg
call
cmp
dec
out
int3
mov
add
push
cmp
sbb
outsl
mov
pushf
mov
push
cmc
pop
push
iret
aaa
and
stos
shll
xadd
xor
movsb
inc
icebp
add
jno
stos
ss
pusha
dec
loopne
sub
lret
xchg
add
faddl
sysexit
mov
mov
frstor
add
cmp
xlat
das
rorb
addr16
cmc
push
fdivl
int
mov
xchg
mov
mov
dec
mov
popf
add
sbb
push
jae
daa
dec
popa
test
or
sub
sbb
cmp
mov
jbe
push
cwtl
xorb
inc
aam
ds
nop
or
inc
adcl
add
cli
test
mov
ljmp
pusha
push
mov
in
ret
adc
pop
pop
mov
outsb
test
push
mov
sub
jns
push
ljmp
push
pop
lods
mov
ljmp
add
subl
insb
lods
cld
imul
out
mov
xchg
mov
mov
clc
lods
add
daa
outsl
xchg
add
cld
add
dec
pushf
mov
add
into
in
das
push
loopne
push
and
addr16
clc
outsl
mov
lcall
dec
test
test
clc
adc
shrb
add
and
sub
faddl
dec
test
mov
pusha
in
aad
or
sti
loopne
shrl
or
push
add
les
adc
test
lock
mov
cmp
xchg
xchg
add
push
in
xor
dec
loop
add
dec
mov
jp
mov
rclb
repz
mov
xchg
sbb
xor
add
hlt
pop
test
dec
sub
test
mov
cmp
adc
inc
adcl
loop
adc
outsb
or
xor
mov
enter
pop
pop
mov
in
out
and
call
aad
xchg
inc
mov
or
sbb
cld
bound
scas
pop
rcll
mov
push
mov
out
popf
and
orb
pop
inc
in
add
lock
mov
pop
loope
fs
loopne
insl
addb
rcl
hlt
mov
in
xor
inc
pop
leave
sbb
insb
fnstenv
cmp
test
int
and
cmp
outsl
mov
add
mov
adc
xor
push
lods
pushf
insb
add
scas
jmp
add
mov
mov
popa
push
sbb
ds
sub
add
pop
inc
pop
xor
mov
sbb
into
pop
inc
lods
adc
clc
iret
pop
and
lods
mov
dec
push
in
push
jmp
cmc
add
rcrl
jnp
add
gs
divb
sbb
and
clc
pop
aad
add
and
or
inc
mov
fmull
sbb
pop
out
imul
dec
repnz
jne
mov
jp
add
mov
jno
sub
out
faddl
add
push
aas
inc
rcrb
cs
mov
add
jmp
sbb
add
lock
mov
and
add
adc
pop
dec
jno
mov
cmp
sbb
andb
mov
in
int
or
or
movl
push
dec
adc
add
aas
aad
or
rorb
popf
jo
mov
fs
sahf
outsb
push
out
pop
out
sarb
enter
add
mov
adc
inc
cmp
xchg
or
xchg
push
fwait
mov
cmp
add
push
test
dec
fsubrp
push
mov
pop
mov
shrl
xor
sti
into
cli
add
mov
cmp
push
push
lret
out
out
cmp
sub
clc
xchg
imul
cwtl
cld
aas
cmp
subl
popa
mov
outsl
cli
int
add
mov
or
int3
shlb
push
repnz
push
fs
or
test
mov
pop
movsb
test
jge
jnp
pop
mov
popa
arpl
fnstenv
jne
mov
mov
push
push
je
add
andl
cmpsl
adc
mov
add
mov
dec
jns
test
cmp
js
fisubl
mov
xchg
scas
int3
add
inc
sub
and
xor
inc
add
dec
pop
mov
jp
daa
lods
sub
into
enter
mov
fisttpll
push
push
std
lods
inc
mov
cmp
test
xlat
call
test
sbb
cld
movsl
shr
test
das
hlt
xchg
bnd
xchg
adc
push
mov
add
or
pop
mov
push
add
push
sub
imul
cvtpi2ps
mov
dec
add
lret
imul
call
int3
pop
js
data16
adc
popa
fmul
push
mov
mov
xor
and
and
ret
add
sub
js
sar
adc
add
mov
shrl
or
push
out
mov
sub
leave
lods
add
stc
mov
rcr
and
outsl
outsb
add
push
mov
sbb
loopne
popa
pop
cmp
pop
add
xor
pop
jge
dec
or
icebp
daa
add
add
in
adc
mov
add
nop
or
mov
push
dec
add
mov
imul
outsl
push
xor
dec
sarl
faddl
dec
adc
pusha
pusha
jmp
add
sub
and
pop
cmpsl
mov
inc
call
add
dec
sub
fucomp
test
sub
xchg
push
push
jns
rolb
pop
add
stos
imul
sub
call
mov
add
pop
dec
mov
xchg
mov
pop
push
cs
fildl
pop
and
hlt
hlt
movb
dec
inc
lods
stos
inc
inc
sub
xchg
loopne
cmp
or
cld
xchg
add
and
mov
add
push
scas
add
mov
pusha
popa
push
lcall
cmp
andl
das
out
xchg
add
push
mov
jge
add
aas
ds
call
mov
jle
add
hlt
mov
mov
out
mov
outsb
das
and
dec
push
xchg
jl
add
loope
movsb
shll
jnp
fs
pusha
loopne
sbb
mov
jmp
icebp
sbb
call
and
in
test
icebp
clc
push
jg
arpl
notl
ror
jbe
mov
jle
nop
shlb
xlat
in
xchg
js
dec
cmp
pop
add
jge
lahf
arpl
xor
mov
stos
loope
add
test
js
jg
je
pop
ja
roll
dec
jg
add
cmpsb
xor
testb
inc
sbb
cld
into
xchg
inc
mov
push
popa
mov
rclb
clc
sbb
and
shlb
push
inc
pop
out
adc
cmp
nop
dec
iretw
roll
cmp
dec
add
imul
rcrb
and
push
push
add
jns
pop
mov
aad
nop
or
jmpw
out
cmp
push
adc
aam
insl
loopne
scas
fstl
cmpsl
add
mov
pop
mov
aas
arpl
in
mov
add
aad
jmp
andb
inc
sbb
push
xchg
pop
outsl
jmp
mov
cmp
inc
add
movsb
pop
pop
loopne
add
pop
addl
rclb
in
aam
pop
test
iret
xchg
add
les
add
jnp
or
pop
roll
add
enter
sbbb
jb
lock
mov
add
cmp
pusha
lods
fsub
sbb
scas
mov
cmp
adc
dec
jno
cmp
int3
add
scas
add
sahf
sub
ljmp
cmc
mov
int3
jno
sbb
pop
in
pop
adc
mov
int
dec
sbb
pop
add
mov
mov
mov
add
mov
add
add
or
mov
data16
mov
hlt
in
sub
pusha
lea
loopne
into
jp
popf
movsl
enter
cmp
in
cmp
xlat
inc
scas
aas
rclb
notl
pop
test
int3
addps
push
push
fldl
dec
les
ds
sub
mov
mov
mov
popf
xlat
ljmp
addb
and
pop
cmpsb
push
mov
and
aaa
dec
xchg
dec
cmpl
or
mov
or
shlb
jns
shlb
fwait
pop
xchg
popf
add
xchg
icebp
sbb
dec
sbb
rcr
stc
movsl
lock
jmp
fisubrl
sbb
mov
jle
adc
lret
mov
mov
push
pushf
inc
push
push
xchg
stc
jge
nop
mov
push
nop
push
mov
xchg
sbb
scas
sub
sub
repz
xorb
fimuls
lock
pop
leave
or
add
jo
pusha
clc
xor
and
push
cmp
xchg
ret
cltd
pop
addb
mov
loop
iretw
andb
mov
xchg
add
mov
icebp
in
clc
out
add
lds
pusha
test
loop
fistpl
inc
outsb
mov
cmp
jnp
test
andl
or
sub
xor
cli
xor
dec
add
add
push
ss
les
and
testb
test
lods
out
nop
inc
mov
fidivrl
lock
adc
loop
xorb
adc
loope
data16
jmp
repnz
sbbl
setge
mov
push
mov
push
rorl
xor
add
dec
in
cmp
xchg
dec
push
repz
and
push
mov
clc
lcall
outsb
or
xchg
jecxz
mov
inc
pushf
jmp
pop
popf
cmc
inc
push
jecxz
push
add
lock
data16
add
and
sbb
dec
cs
mov
xor
add
push
test
inc
ja
xor
cmp
int3
or
out
les
inc
shlb
shr
xchg
outsl
add
test
hlt
jmp
pop
fidivrl
std
mov
roll
ds
fldt
cltd
cmp
or
add
cltd
scas
push
sub
dec
test
inc
or
fildll
insl
cmp
call
sahf
jge
jp
dec
outsb
mov
adc
ljmp
mov
or
xor
arpl
xchg
and
cmpsb
mov
mov
cmpsl
call
dec
adc
pop
enter
cmpb
ss
push
jmp
or
adc
data16
test
xor
lahf
add
mov
pop
cmp
mov
rolb
inc
int3
push
xchg
rcll
fsubp
inc
and
mov
jl
pop
ss
pop
and
fucomi
sbb
jp
ljmp
je
and
sbb
out
and
and
js
cmp
daa
push
cmp
call
nop
push
sbb
adc
sbb
icebp
fisubrs
insb
cmp
xchg
scas
cwtl
fwait
xor
jmp
xchg
nop
add
mov
not
jecxz
into
sub
dec
jmp
fisubrs
mov
mov
insb
push
lcall
cli
and
loopne
inc
sbb
std
xor
adc
imul
in
cmc
add
sbb
add
jmp
inc
call
popa
adc
and
push
or
push
nop
clc
rcrb
shll
out
xchg
popf
adc
or
add
roll
adc
icebp
xchg
cmp
rcrl
lea
mov
bound
add
icebp
imul
in
sub
dec
dec
adc
cs
sub
push
push
movsb
es
leave
mov
xchg
sub
add
mov
int3
adc
aad
shrb
icebp
imul
clc
cwtl
sub
adc
repnz
shlb
xor
pop
fidivrl
or
sahf
sub
loope
add
test
xor
test
mov
rcrb
or
insb
mov
adc
data16
jne
movsb
cld
add
mov
in
fsubrp
inc
mov
hlt
and
jae
call
fisubrl
pop
xchg
xchg
ja
add
xor
scas
add
dec
fisttpll
fildll
test
sub
add
loopne
cmp
mov
xchg
jle
lods
test
xor
addl
imul
pop
adc
mov
push
mov
xlat
mov
clc
das
aas
addb
lret
pop
popa
pop
push
repnz
inc
xchg
mov
add
or
cld
sub
mov
sbb
xor
mov
cmc
shlb
xlat
sti
sbb
fisubrl
sahf
adc
clc
outsl
ss
cmp
test
or
jg
test
lods
imull
lret
cmp
dec
mov
push
out
push
sub
test
setp
cwtl
cmpb
fucomp
inc
mov
mov
sbb
and
cmp
call
mov
loopne
js
lahf
enter
inc
mov
fadds
add
xchg
fcmovnu
xor
push
mov
push
std
mov
xchg
jne
pop
loope
es
mov
mov
enter
or
add
repnz
cwtl
rcrb
adc
inc
xchg
push
push
add
push
sub
test
and
loopne
pushf
paddsw
shlb
rorb
xchg
xchg
xchg
addb
sub
mov
dec
cwtl
js
add
fidivrl
inc
add
mov
int3
pop
loope
cs
adc
push
mov
add
mov
hlt
fcomps
mov
stc
in
scas
es
ret
nop
adc
mov
test
inc
jg
jp
decb
add
repnz
ficoms
or
mov
jecxz
inc
add
xor
lret
pop
adc
xchg
cmp
sbb
mov
sbb
mov
add
leave
fs
add
adc
orl
pop
sarl
in
jl
sbb
cwtl
push
out
mov
testl
push
lods
mov
sub
mov
xor
push
cmp
mov
mov
adc
pop
int3
sahf
push
jns
xchg
add
out
lock
out
imul
inc
ljmp
jae
or
movsb
nop
cmp
push
movsb
cmp
mov
xchg
push
test
jp
cmpsl
or
or
adc
add
in
adc
addr16
fistl
push
setns
xchg
das
add
fs
lret
mov
dec
and
sbb
ret
pop
lret
cwtl
mov
test
and
icebp
pop
rorb
call
daa
fmull
movsb
pusha
fucomip
inc
and
je
call
sbb
jnp
or
subb
mov
mov
out
addr16
push
fwait
mov
dec
mov
and
cmp
sbb
and
icebp
xchg
push
push
ret
and
xchg
fiaddl
int3
push
jns
pop
loopne
in
xchg
cmp
mov
pop
mov
mov
and
nop
pushf
and
subb
push
add
sbb
jg
test
sbb
add
jge
inc
cmp
add
push
sbbb
mov
dec
jo
or
jne
add
movsb
nop
inc
nop
xor
push
add
push
adc
mov
mov
ds
mov
out
inc
mov
into
xorl
sub
test
cmp
sub
loope
add
mulb
les
fcompl
sbb
loope
gs
in
pusha
and
repz
inc
adc
js
or
cmp
lea
sub
xor
xchg
fimuls
aas
inc
arpl
and
nop
iret
mov
test
inc
in
inc
out
add
inc
inc
push
pop
sub
add
jecxz
sub
cld
stc
popf
mov
cmp
sub
scas
jp
test
loopne
fs
mov
cmp
sbb
adc
push
and
mov
test
cmp
cld
push
shlb
add
mov
fsubrl
in
mov
and
stos
mov
icebp
mov
cltd
loopne
add
sti
mov
dec
mov
or
dec
adc
adc
jo
jle
or
je
jno
dec
mov
bound
cmp
loopne
xchg
add
nop
add
xchg
jo
jle
jmp
subb
fmuls
call
or
insl
shr
in
pop
adc
push
das
or
xchg
add
mov
xchg
cmove
lea
sub
mov
aam
add
shlb
sbb
cmp
pop
cwtl
and
xor
xchg
in
xchg
cs
add
daa
outsl
mov
adc
sub
mov
mov
adc
push
push
pop
xchg
aad
xor
jae
insl
call
jl
dec
leave
xor
mov
dec
aaa
ss
pop
lock
loope
shlb
or
add
int
add
xor
mov
int
ljmp
lcall
inc
lods
jnp
pop
add
xchg
mov
je
adc
lea
shrb
jns
sbb
cmp
movsl
xor
adc
aas
push
mov
daa
push
jecxz
popa
mov
loopne
xchg
insb
jb
cwtl
addr16
inc
stos
push
add
pusha
nop
pop
dec
mov
jg
int3
mov
jmp
loopne
jns
fwait
in
cmpsb
pusha
mov
sub
xchg
ret
jle
mov
mov
daa
les
shlb
add
inc
or
xor
jb
dec
xchg
mov
pop
sub
inc
and
mov
sub
or
jne
dec
pop
jno
cld
adc
pusha
mov
push
adc
or
cmp
jae
adc
sub
in
inc
cmp
shl
and
into
ficomps
sbb
xchg
add
adc
mov
mov
imul
sbb
adc
lods
out
iret
and
push
dec
dec
or
int3
or
push
cs
mov
mov
fadds
out
push
lcall
inc
add
or
inc
cwtl
add
repnz
js
in
clc
hlt
por
push
loopne
jno
jp
mov
mov
adc
cli
add
xchg
mov
sar
movsb
mov
outsb
movsb
push
dec
xor
test
xchg
aad
loop
dec
sub
mov
fsubl
inc
pop
jnp
fbld
dec
outsl
outsb
pushl
sub
mov
rclb
add
xchg
push
adc
stc
cltd
in
loopne
dec
xor
sbb
jle
mull
in
push
in
rcrb
sbb
mov
movsb
mov
test
test
cs
dec
lret
inc
mov
jecxz
pusha
lds
icebp
mov
fsubs
sbb
ret
popa
enter
jecxz
gs
lea
loopne
push
loopne
std
inc
fwait
loope
xor
push
nop
sub
lods
ljmp
dec
pop
aas
ss
popf
inc
adc
xor
scas
push
adc
inc
jb
out
test
xor
dec
sub
hlt
mov
test
mov
xchg
subb
push
out
mov
pop
inc
sti
add
xchg
xor
mov
jnp
nop
pusha
decb
mov
xchg
enter
inc
mov
or
add
fmul
pusha
xor
xchg
lods
jg
in
outsb
cmp
jne
adc
fsubs
dec
add
rcll
int3
and
push
mov
inc
add
fildll
out
aam
fwait
xchg
nop
jne
popa
sbb
sbb
or
cmp
outsl
rolb
call
mov
add
insb
jecxz
xor
pusha
push
xor
cmpb
sbb
jno
sub
js
int3
cltd
shlb
sbb
es
push
adc
cmpb
or
inc
popf
rolb
cmpsb
das
jg
loope
mov
cltd
mov
and
mov
sbb
dec
test
jle
cmp
adc
scas
das
mov
addr16
ljmp
mov
jl
pop
inc
xchg
lock
scas
add
popf
ret
stos
std
sub
push
lds
or
aaa
mov
push
in
mov
mov
lea
jb
scas
dec
inc
and
push
mov
adc
lahf
and
add
xor
insl
inc
adc
push
emms
xchg
xor
cmp
subb
faddl
add
sub
ret
js
push
adc
add
mov
rorb
out
jns
pop
or
data16
fwait
inc
pop
inc
mov
cmp
xchg
push
push
sbb
mov
add
push
mov
mov
or
insl
arpl
sub
push
inc
mov
add
es
cwtl
inc
sub
fcomps
inc
push
in
lahf
add
push
cmpsl
cmp
sub
add
inc
cld
add
xor
lock
sbb
inc
inc
add
in
pop
dec
mov
aaa
or
mov
pushf
cmp
cmpsb
pusha
push
lcall
cmpsb
add
dec
mov
inc
loopne
sbb
xor
xor
popa
clc
stos
add
dec
mov
sarb
pop
imull
pop
test
cwtl
mov
outsl
nop
popa
cmp
sub
inc
imull
mov
mov
dec
sub
jns
pop
add
in
cmp
fiadds
je
sti
push
push
push
mov
push
mov
adc
and
fdivs
add
cmpsl
pop
pushf
sbb
and
das
jl
cvttps2pi
inc
push
mov
mov
rorb
andb
loope
lret
insl
insb
adc
js
or
jg
mov
inc
jp
inc
mov
icebp
scas
js
mov
pop
push
dec
adc
xorl
xchg
add
mul
push
xor
sub
mov
mov
scas
cmp
mov
cmp
add
call
test
jo
call
mov
loopne
rclb
jge
lock
das
add
xor
lock
fdivl
xchg
rol
popa
sbb
mov
mov
dec
enter
je
xchg
es
mov
sub
rol
xchg
or
nop
or
inc
pusha
inc
pop
dec
add
shll
mov
jg
js
repz
push
xor
enter
psubq
push
xor
inc
cmp
add
jl
je
xor
arpl
fs
stos
and
adcb
push
xchg
loope
cmp
and
push
xchg
mov
xchg
es
push
js
hlt
iret
xchg
lcall
cmp
dec
add
repz
adc
scas
adc
aam
sub
push
stc
jg
cmp
push
lahf
jle
andb
mov
pushf
add
mov
dec
fists
inc
mov
mov
mov
push
hlt
mov
add
or
scas
inc
daa
andb
lods
sbb
pop
cmp
bound
in
xorl
sub
test
lret
add
jg
sarb
int
aas
dec
or
add
add
in
mov
out
mov
sbb
mov
jns
sbb
dec
hlt
inc
lds
pop
xor
adc
sbb
jbe
xor
imul
sbb
cwtl
add
cmp
test
loopne
add
cmp
inc
inc
roll
jae
and
in
mov
je
sub
add
xor
mov
cli
scas
cs
xor
dec
test
loopne
aas
xor
add
dec
jbe
ljmp
inc
mov
xchg
shrl
aas
push
sbb
addl
lret
inc
sbb
xor
xor
aas
add
lods
fimuls
xchg
stos
pop
lock
imul
lock
jns
add
sub
nop
fnstcw
sbb
cmp
adcb
mov
xor
sbb
push
or
scas
push
xchg
dec
das
inc
and
add
push
movsb
jno
or
and
aas
nop
xchg
insb
push
add
pusha
mov
inc
pop
inc
popf
aaa
nop
add
pop
test
xchg
jl
stc
andl
add
test
xchg
es
jle
rcrb
xor
add
pushf
push
dec
out
imul
push
cmp
push
mov
dec
xchg
les
inc
add
add
xor
std
push
xlat
adc
inc
push
pop
syscall
xor
jle
loop
jb
mov
sbb
lods
filds
lcall
cmp
int3
cmp
ret
jnp
add
xchg
lods
sbb
mov
jno
insb
dec
into
iret
repnz
jecxz
push
lea
adc
or
addb
pop
sub
add
scas
insl
add
data16
inc
movsb
pop
iret
call
fiadds
push
out
inc
add
hlt
mov
pop
add
pop
mov
xor
cld
lret
add
and
sbb
fwait
in
adc
inc
mov
and
addb
pusha
add
insb
lock
dec
push
movsb
add
push
leave
lret
pop
inc
mov
addl
add
imul
sbb
divb
fdiv
inc
adc
add
mov
add
adc
cld
aad
add
hlt
mov
mov
pop
sub
inc
sub
push
inc
mov
adc
lods
cmp
and
add
add
cmp
jns
mov
pop
sub
or
jl
stos
in
jo
dec
xchg
push
add
in
loope
mov
fldcw
or
xor
jbe
fldl
sub
popa
dec
or
xchg
test
add
mov
inc
loope
mov
sti
ds
adc
shlb
mov
add
mov
xlat
notb
cmp
das
push
and
xchg
in
inc
addr16
mov
lock
fwait
jnp
and
mov
adc
les
aad
inc
adc
push
adc
int3
sbb
cwtl
mov
xor
setns
xchg
and
in
cmp
pusha
test
std
outsl
jno
cmp
cli
in
cmp
sub
adc
popa
sbb
das
std
mov
mov
sbb
cmp
andl
mov
or
inc
jmp
clc
add
shl
push
fsubr
subb
lods
mov
in
sub
mov
sub
xchg
cmpb
pop
cmc
adc
in
xchg
add
or
or
mov
and
xor
inc
scas
dec
daa
mov
pop
sarb
popf
loope
shlb
xor
cs
add
mov
int
mov
outsb
xor
inc
fsubrs
jb
inc
cs
test
jb
and
mov
clc
xlat
lods
add
scas
call
jg
in
or
add
cmc
add
mov
adc
cmp
or
mov
cmp
jmp
addb
sbb
in
rcrb
js
fs
push
lahf
jecxz
fldt
fnstsw
add
imul
add
jmp
out
adc
add
inc
lret
inc
add
xor
jns
cltd
out
test
cmp
sub
lods
and
arpl
sahf
std
cmp
inc
mov
repnz
int
inc
pushf
fmull
cmp
or
jl
inc
xchg
jg
mov
in
fadds
test
adc
ret
lret
add
out
dec
pusha
enter
test
adcb
out
add
mov
or
mov
and
js
jo
lret
rorb
das
sbb
mov
and
mov
and
xor
cmp
push
pusha
mov
jns
fisubrs
mov
and
movsl
jle
out
cli
cmp
mov
mov
aam
into
mov
sbb
cmpsb
shl
adc
sbb
cld
popf
adc
scas
sbb
xor
rcrb
pop
push
out
loopne
inc
in
pop
gs
add
ljmp
pop
cmp
inc
sbb
push
into
lds
xor
mov
nop
pop
xor
fidivrl
inc
shlb
outsb
or
and
xchg
sbb
mov
sub
andl
adc
and
add
gs
dec
shlb
dec
xlat
mov
rolb
inc
xchg
movsl
add
sub
scas
mov
inc
xor
subb
pop
xchg
cmpb
pushf
enter
nop
and
dec
out
hlt
jo
dec
or
imul
sbb
add
mov
pusha
or
daa
cmpb
mov
lods
add
xor
or
stc
add
sbb
add
inc
pop
push
sbb
push
push
or
cmc
push
push
jno
inc
add
dec
add
pop
pop
jo
test
add
adc
cmp
sarb
bnd
xchg
push
xchg
jecxz
inc
je
cmp
cwtl
outsb
lock
popa
push
hlt
out
sbb
das
or
xchg
repz
xor
adcl
jmp
cs
adc
adc
int
add
iret
insb
pop
sub
inc
rolb
bound
cmp
push
pop
pop
push
shrb
pop
movsl
les
test
push
lret
mov
cld
and
cmp
imul
in
in
push
cmpsb
int
add
nop
dec
stc
dec
in
add
jmp
in
out
and
xor
mov
add
mov
or
out
xchg
inc
dec
scas
inc
mov
cmpxchg
dec
loopne
or
in
loop
sbb
add
pushf
jl
call
and
jl
dec
mov
pop
and
mov
inc
mulb
lock
add
insl
lcall
outsb
mov
mov
bound
movsb
jae
aam
xchg
and
add
test
jbe
xchg
aam
inc
shll
cmp
add
jo
dec
rolb
jb
popa
xchg
sti
or
lret
daa
rcr
loopne
js
ds
add
adc
daa
pop
loopne
aad
push
clc
repnz
sub
push
or
insb
mov
mull
mov
je
mov
mov
sub
mov
xchg
xor
jns
faddl
scas
push
les
sub
in
add
mov
cmpsb
add
add
popf
std
cmp
or
add
repnz
inc
js
push
ds
pop
xor
lea
and
cmp
mov
outsb
xchg
mov
lea
test
fwait
add
das
cli
sub
in
add
inc
inc
loop
mov
push
fdivrp
mov
mov
cmp
adc
add
enter
inc
sub
jp
sub
and
ljmp
sbbb
add
mov
xor
das
xchg
insb
pop
int
or
call
xchg
leave
inc
cld
and
mov
add
fwait
lock
dec
mov
adc
add
imul
fstpt
push
popf
sbb
cmp
cmp
orb
rolb
sub
int3
jg
dec
sbb
imul
cmpsl
int3
xchg
icebp
mov
in
add
orl
cmp
rorb
inc
mov
je
add
shrl
jmp
push
cmpsl
shrb
pushf
add
repnz
inc
sub
jg
and
dec
push
fwait
lahf
and
dec
aam
sbb
sub
in
cli
inc
push
sub
mov
add
jae
fimuls
adc
mov
and
dec
xor
cmp
inc
lcall
add
shlb
imul
orl
and
punpckldq
pusha
pushaw
fcoml
push
cmp
push
pop
dec
insb
or
jo
jns
xor
mov
inc
enter
loop
sbb
mov
lret
sbb
lods
jno
add
dec
f2xm1
hlt
sahf
add
inc
js
jo
cmpsb
push
dec
jmp
add
pusha
and
jnp
push
fdivp
dec
inc
jno
cmpsb
loop
pop
in
cs
fadds
lahf
sbb
mov
sti
bound
push
popa
out
pop
jnp
shlb
dec
movb
rcrb
rcrl
jo
xor
push
push
ror
negl
jb
add
cld
xor
mov
mov
pop
and
bound
or
loop
test
sbb
or
lods
mov
add
add
pop
faddp
jmp
loop
das
in
pusha
ljmp
jmp
or
dec
nopl
push
fists
jl
clc
xor
add
arpl
push
das
mov
pop
stc
lock
pop
add
add
out
in
xor
lods
push
add
mov
xor
int
jle
pop
pop
rolb
mov
pushf
add
mov
xchg
jl
icebp
sbbb
lret
aad
push
enter
push
sahf
add
mov
int
mov
cmp
inc
push
mov
in
cld
out
ret
fistpll
mov
icebp
test
ret
jae
or
lea
xchg
adcl
repnz
icebp
lahf
into
xor
movsb
mov
sbb
addl
or
push
addb
lds
xlat
out
push
ret
jnp
xor
push
scas
pop
call
or
cmp
adc
xchg
cmpsb
and
jne
jmp
xchg
dec
xchg
dec
lcall
sbb
sub
test
mov
and
inc
sub
lcall
pop
or
adc
adc
lods
and
enter
xor
dec
aam
add
scas
mov
insb
add
push
cmpsb
add
mov
or
add
sbb
or
mov
imul
cs
js
add
dec
nop
pop
lock
push
es
aas
orl
add
cwtl
mov
int
add
lods
xchg
inc
icebp
into
testl
mov
jne
loope
aam
xchg
add
xor
decb
lods
add
inc
xchg
mov
pop
lods
jecxz
mov
inc
cmpsb
fnsave
push
aas
xlat
fdiv
bound
fs
push
stc
jb
add
dec
push
sbb
cmc
std
daa
mov
test
pop
pop
fimull
shl
iret
add
lods
xor
test
pop
xor
push
xchg
mov
call
insb
sub
test
pop
test
inc
and
clc
adc
pop
outsl
mov
cmc
ss
imul
xchg
rcr
pusha
fwait
pop
cwtl
icebp
push
in
xchg
shrb
stos
imul
lcall
add
cmp
into
push
loope
pop
lds
or
pushf
add
mov
inc
cli
xor
pusha
add
pop
add
sub
cmp
lods
movsl
add
cmp
add
cmpl
dec
jnp
aad
leave
jge
or
cmc
fwait
aam
push
in
add
pop
out
shr
aad
pop
xchg
cmove
jp
es
int
sbb
fimull
imul
cmp
mov
and
and
mov
adc
hlt
jb
add
or
jns
add
test
mov
sbb
clc
mov
test
adcl
sub
cmp
pusha
dec
xchg
add
pop
fbld
cli
add
call
movsl
cltd
ds
jbe
adc
imul
les
arpl
ja
sbb
pop
jno
add
add
jns
add
mov
ss
push
enter
outsb
call
movsl
xor
jae
add
orb
mov
aam
pop
mov
jmp
jl
add
xchg
push
and
push
push
mov
fxch
aam
mov
xchg
push
fisubl
mov
dec
cmp
pop
pushf
adc
insl
or
pusha
push
mov
pop
cmp
pusha
cli
vmptrld
add
mov
jne
add
daa
in
enter
fbld
insl
outsl
jno
adc
dec
xor
daa
add
xchg
mov
call
push
repnz
or
in
and
jo
and
adc
pusha
and
inc
lahf
add
repnz
lock
xor
mov
push
ret
movsl
enter
mov
add
pop
dec
xor
popf
add
mov
dec
ret
inc
gs
orb
outsb
cmp
pop
movsb
mov
ja
add
and
loopne
pop
add
mov
arpl
sub
and
push
push
sub
scas
and
dec
push
mov
push
jmp
out
mov
sbb
shll
lret
push
add
add
aad
push
add
sbb
sub
stos
add
adc
sbb
pop
push
sbb
mov
mov
out
jno
add
adcb
mov
xor
ljmp
test
mov
sub
js
rcrb
xor
xchg
jns
push
in
cmpb
mov
nop
sub
inc
adc
add
orl
mov
scas
xor
mul
add
cltd
cwtl
mov
sbb
and
sarb
add
test
fisubl
mov
adc
js
mov
addr16
add
pop
cmp
sub
into
decb
pop
mov
pop
or
sbb
mov
rcrb
jno
in
add
inc
inc
shl
icebp
pushf
adc
add
pop
and
push
inc
mov
add
shll
push
sbb
sbb
int
sbbl
inc
add
dec
mov
or
mov
add
push
inc
push
lret
xlat
out
rcl
push
push
addr16
push
jmp
mov
add
nop
in
jmp
sarb
mov
out
incl
jno
push
insb
inc
mov
jle
testb
inc
int
sub
adc
mov
mov
loopne
repz
test
fimuls
push
cmpsl
add
mov
or
push
sahf
scas
jle
ljmp
in
pop
in
sub
movl
and
or
les
sbb
bound
mov
sbb
sti
mov
lods
add
enter
cmp
xchg
add
je
loope
fiadds
js
scas
fwait
sbb
cwtl
std
dec
add
inc
stos
cmovs
add
les
pop
aas
add
inc
cmp
mov
roll
jo
xchg
add
push
dec
fists
push
add
xor
lahf
lods
push
mov
jbe
mov
cmpsl
incl
add
jecxz
jnp
inc
rcr
xchg
and
cltd
addr16
pop
xchg
cmc
add
insb
in
add
dec
push
data16
add
xchg
pusha
push
sbb
leave
mov
add
scas
fnstsw
add
or
xchg
add
adc
insl
add
mov
fsubl
js
xchg
jge
cmp
add
xor
dec
mov
xchg
fiaddl
and
pop
xorl
das
imul
es
adc
ja
push
filds
cmp
addl
xor
sti
jne
adc
lcall
mov
sbb
cmpl
xorb
adc
inc
add
shll
sarb
sbb
add
jb
hlt
mov
sbb
pop
mov
jg
add
lret
shrb
add
pop
iret
cwtl
cmp
cmpsl
add
sub
aas
enter
fldt
icebp
jecxz
hlt
inc
pop
xor
add
adc
add
fucomi
clc
add
fwait
fwait
lock
add
inc
enter
add
xchg
jbe
idivb
test
pop
add
lock
dec
and
add
pop
rclb
pop
in
cmp
ret
rol
push
and
test
in
xchg
and
and
cmc
int3
sub
daa
int3
out
adcb
sub
test
aam
hlt
scas
cmpb
testb
pop
mov
xchg
lock
inc
jmp
adc
int3
incl
mov
fisubl
pop
or
push
ljmp
push
bound
mov
repnz
iret
xchg
and
mov
add
pop
xor
rcrl
inc
add
mov
faddp
or
cmc
lret
notb
repz
add
hlt
add
mov
in
cmp
js
rcrl
dec
flds
cmpsl
mov
daa
lods
mov
sbb
mov
iret
rolb
jmp
mov
int3
seto
fisttpll
add
dec
sub
cmp
mov
add
test
adc
mov
fdivs
stc
pop
push
push
lods
and
inc
mov
jnp
lods
pushl
add
mov
xor
jmp
xor
mov
pusha
int
add
jg
and
jmp
xchg
cmpsb
imull
and
add
sti
ljmp
sbb
jo
mov
add
push
or
xchg
notb
ret
fcomps
mov
adc
adc
pop
mov
fiadds
popl
je
jo
int
adc
or
cmp
fstps
cmp
mov
adc
aaa
inc
nop
mov
push
add
loopne
add
lock
add
and
nop
cmp
inc
gs
jle
sbb
adc
call
lock
jge
adcb
movsl
aad
das
add
in
jb
cld
scas
stos
out
sti
shlb
or
sbb
movb
push
cmp
or
pop
pop
pop
cli
ret
pop
sbb
and
iret
sub
shll
aam
js
cmp
inc
lea
clc
mov
out
pop
cmp
and
fldcw
fadds
addb
fstpl
jl
pop
pushf
or
pop
mov
jae
or
add
mov
pop
push
loopne
lock
push
mov
fcomp
mov
dec
imul
and
mov
sysexit
into
add
enter
dec
fistpll
pop
add
sbb
cwtl
jb
lods
orl
dec
rcr
fs
inc
pmullw
push
movsl
sti
int
cmp
add
sbb
sbb
mov
outsl
test
jae
pushf
push
dec
add
out
rclb
cltd
jno
test
add
hlt
xor
pop
fcmovu
fcoml
add
fadd
sub
add
neg
inc
neg
ds
or
ret
lods
out
movsb
add
rcrb
lcall
jne
pushf
loope
fstl
sub
repnz
pusha
xor
inc
inc
jg
add
add
cwtl
cmp
xchg
dec
cmpsl
sbb
in
testb
xchg
sahf
jp
out
sub
add
in
test
cli
pop
sbb
xlat
push
cwtl
scas
ret
pop
adc
insb
lcall
push
mov
pop
mov
lods
inc
jg
pop
cli
xor
add
aam
sti
and
in
mov
bound
push
add
out
jb
imul
shrb
das
or
invd
add
out
adc
mov
std
stc
inc
mov
cmp
add
pop
sub
mov
hlt
pop
insb
push
xor
sti
cmp
push
cld
aaa
add
inc
ds
or
add
pop
cmp
add
add
xor
mov
jne
push
add
inc
sub
aas
mov
add
xchg
repnz
sbbl
pop
or
push
comiss
sub
sub
or
mov
dec
jae
mov
or
imul
sbb
and
arpl
popf
add
sub
sbb
pop
and
add
lock
mov
sbb
jbe
adc
or
adc
adc
mov
sbb
cli
add
movsb
test
in
dec
rorb
lock
ja
shll
loope
inc
or
and
leave
dec
xor
es
jl
adc
popw
cmp
add
and
sbb
lods
mov
enter
add
wrmsr
mov
sub
add
and
add
pop
fsubl
push
push
arpl
lock
dec
das
inc
rcrl
and
xchg
sbbb
in
out
cmp
add
in
incb
andl
mov
sbb
insb
fsubr
jge
scas
xchg
sub
sbb
out
mov
mov
mull
icebp
jmp
imulb
pop
pop
mov
pop
aas
cmp
add
dec
xor
add
sub
pop
adc
sbb
arpl
push
in
stc
inc
pushf
rcr
divl
xorl
popa
push
and
mov
and
cmp
mov
jbe
inc
push
cmp
pop
scas
aas
lods
add
push
les
and
cmpsl
add
sbb
adc
mov
push
mov
dec
xor
lods
inc
clc
arpl
dec
ret
mov
iret
fsubrs
insl
cmc
sub
sbb
movl
sbb
daa
test
xchg
mov
and
mov
jge
stos
mov
test
mov
ficomps
and
push
dec
jns
cmc
and
out
cli
or
out
and
add
imul
fs
loop
xor
pop
aaa
out
cmp
lea
arpl
jae
sarb
sub
add
insb
and
sbb
cwtl
sbb
andb
dec
sub
clc
mov
xor
aad
jb
sbb
push
add
lret
cld
rolb
fisubrl
adc
inc
daa
add
mov
in
or
fdivrl
out
jge
orl
negl
iret
lret
push
pop
and
add
inc
enter
sub
adc
mov
loopne
sbb
enter
sub
pop
inc
je
xchg
sbbl
add
out
inc
cmp
sub
out
sub
xor
xchg
cli
test
shl
cmpsl
testb
sbb
push
sahf
cs
add
or
mov
ljmp
pmaxsw
add
lods
pop
push
ja
add
inc
sbb
lock
nop
addb
pop
hlt
lock
loope
lahf
aas
sub
adc
cli
shll
jge
add
xchg
imul
outsl
mov
xchg
lret
nop
cwtl
es
mov
mov
in
inc
and
out
pusha
xchg
mov
adc
cmp
jl
add
rcrb
push
mov
call
or
scas
mov
add
in
out
push
notl
repz
fidivs
lret
inc
xchg
mov
mov
bound
pusha
sbb
cmp
jecxz
gs
sub
fs
and
add
xor
jmp
gs
add
xchg
shl
pop
loopne
inc
lret
js
xor
ja
add
cmpsl
and
outsl
daa
jo
mov
jbe
les
cmp
imul
or
ds
pusha
mov
ss
pop
add
and
pop
ds
xchg
test
testb
add
pushf
repnz
mov
ret
pusha
mov
bound
sub
cltd
lret
or
stc
xor
shrl
pop
cmp
jno
sbb
adc
mov
or
enter
aas
adc
or
andb
inc
jg
jl
push
sar
push
sub
xchg
testl
push
inc
ljmp
jo
pusha
push
mov
jle
stc
dec
aam
add
test
jne
scas
out
in
es
cli
je
xchg
sti
add
cld
push
insl
add
push
xor
xorb
pop
addr16
enter
js
add
test
jge
push
in
push
xor
cmp
mov
cmc
push
xchg
jg
das
imul
add
push
ret
pusha
aad
jo
sub
les
mov
loop
es
or
daa
cmp
fisubl
sbbb
push
pop
jmp
stos
mov
push
dec
mov
mov
and
and
sahf
sub
push
mov
inc
ljmp
paddw
clc
xchg
in
xlat
add
sub
inc
hlt
cmpsl
pushf
jg
inc
insb
add
sarb
std
shrb
lods
ret
shrb
loope
xchg
inc
add
orl
jle
add
cld
mov
and
in
cmp
add
pop
out
test
jns
mov
mov
pop
lods
cmp
imul
push
mov
cld
stos
or
push
lea
loopne
xchg
push
add
lahf
lods
push
xor
lcall
ret
add
add
inc
cmp
stos
xchg
stc
add
sub
pop
and
dec
ss
dec
loop
jle
pop
sbb
cmpsl
inc
loopne
das
adc
f2xm1
add
mov
insb
icebp
push
call
mov
rorb
lds
negb
loope
jae
xchg
and
inc
mov
das
pop
in
and
jae
sub
pop
cmp
jle
add
adcb
add
mov
xchg
popf
and
and
or
loopne
sub
or
mov
out
fistpl
int
push
movsb
cmp
daa
and
incl
sub
cmp
fildll
add
cmc
add
faddp
icebp
addb
into
push
rorb
stos
dec
sti
mov
dec
iret
adc
pop
test
add
jnp
scas
add
cwtl
pop
mov
jl
enter
scas
sub
push
mov
sbb
dec
add
popf
jge
jl
add
inc
inc
int
je
imul
jl
sub
les
daa
fcomps
dec
imul
inc
orl
xor
mull
fadds
pop
jmp
cmp
xor
sub
stos
xor
add
mov
fbld
inc
mov
dec
add
and
iret
lea
mov
dec
je
add
out
mov
or
add
cwtl
lods
jmp
repnz
cli
xchg
aaa
pop
es
leave
sub
shr
add
jb
das
sbb
scas
pop
cmp
cmp
dec
aam
inc
or
mov
xor
jo
cmp
mov
push
sub
cmp
testl
loopne
pop
mov
mov
adcl
enter
add
sbb
add
insb
int
add
mov
pusha
mov
add
icebp
or
inc
scas
loopne
add
sub
jno
notb
pop
mov
loopne
or
fbstp
mov
imul
pop
and
mov
jbe
xor
imul
add
and
in
mov
mov
mov
mov
ss
push
jno
mov
in
pop
loopne
icebp
fiadds
ss
pop
add
popf
xor
cmpsb
and
pop
add
int3
les
add
push
push
inc
pop
sbb
arpl
ret
sub
push
cmpsb
xlat
div
sub
iret
add
jge,pn
shr
add
stc
pop
sbb
aad
aas
inc
jmp
sbb
inc
fisttps
mov
inc
xor
push
add
jmp
outsl
sbb
pop
cmc
lods
pop
rcrb
add
dec
push
cmp
mov
cmp
movsl
in
mov
jnp
mov
jno
out
rorb
cmp
mov
push
rcl
pop
les
popa
pop
fldenv
je
leave
add
jge
or
xor
pop
push
mov
cmp
fiadds
sbbb
or
div
add
popa
lock
pop
dec
add
addl
lahf
push
mov
hlt
sub
jp
jb
fdivrl
jmp
and
insl
dec
lds
mov
dec
or
stos
popa
imul
cmc
nop
cmp
add
addr16
int3
lock
push
or
outsl
mov
and
xchg
add
fstps
add
mov
xor
pop
orb
inc
push
gs
add
pop
into
add
aad
scas
insl
sub
inc
mov
test
or
bound
aad
ficoml
ret
mov
adc
pop
mov
jecxz
sub
in
cmc
jne
loopne
pop
or
fs
pop
push
orl
enter
inc
cmp
pop
mov
inc
push
add
je
test
inc
sub
mov
imul
inc
cli
loope
add
test
shll
sbb
loop
add
sub
add
inc
dec
push
fidivl
lret
jo
das
ja
push
stc
mov
and
cmc
cmp
bound
in
inc
adc
jmp
xchg
inc
jo
inc
fadd
adc
fidivrl
sbb
and
outsl
fadds
test
jl
mov
pop
add
mov
bound
dec
jno
cs
xor
les
jnp
les
sarl
pop
add
js
fidivl
nop
xor
jle
push
pop
dec
cmp
xchg
gs
xchg
cmp
add
mov
pushf
rorb
xor
sub
and
xchg
cmp
nop
data16
jle
add
jle
rcrl
add
pop
mov
sbb
pop
sbb
cmp
pop
add
jle
xlat
sub
mov
mov
fiaddl
ds
add
sbb
add
and
rolb
cli
bound
int
xor
adc
mov
mov
testl
rcrb
neg
jns
sarb
add
xchg
fwait
dec
add
lret
leave
insb
add
push
jae
popl
orl
mov
xor
ret
push
les
mov
add
mov
dec
popf
or
mov
out
lock
add
push
divb
add
sbb
pop
shlb
pop
sbb
rolb
mov
push
mov
inc
mov
pop
add
in
dec
mov
xlat
add
in
loope
adcb
dec
cld
cmp
sbbb
mov
jmp
je,pt
dec
movsl
jge
es
xchg
sbb
add
out
jo
rolb
daa
clc
sub
mov
xor
sahf
std
cmp
out
adc
cmpsb
xchg
add
jp
mul
or
xchg
das
adc
add
sub
add
cmpb
sbb
outsb
mov
mov
pop
js
pop
inc
push
xorb
jb
aam
xchg
add
inc
call
mov
bound
clc
outsl
test
jo
xor
xor
mov
cmc
std
sbb
add
sarb
arpl
push
stc
in
dec
xor
sub
aad
xor
int3
add
add
adc
xchg
ds
mov
dec
xchg
movsl
rolb
dec
add
sbb
push
rolb
sbb
xlat
popa
cmc
sbb
pop
out
or
cmp
cmpsl
cmp
bound
das
or
out
mov
push
add
jne
add
mov
sub
jecxz
xchg
cmpsb
mov
adcl
add
inc
mov
jp
and
add
repz
int3
inc
jl
add
loope
sbb
add
adc
cmp
mov
dec
adc
add
push
push
ret
add
cmp
in
test
sbb
mov
mov
mov
out
xor
ljmp
cmp
adc
cmp
mov
jae
sbb
outsl
sarb
mov
add
cld
sbb
imulb
fsub
mov
sbb
iret
movsb
divb
xchg
loope
aam
lret
out
or
dec
andb
sub
rclb
push
insb
fs
imul
sbb
bound
inc
push
or
and
jge
pop
or
fldcw
xor
sahf
arpl
mov
xor
rcrb
int3
mov
jecxz
push
or
sbbb
movsl
xchg
pop
aaa
mov
lret
add
pusha
mov
insb
sub
push
stos
cmp
push
xor
xor
fstpt
scas
jge
sbbb
sahf
cmp
adc
and
xchg
adc
and
and
or
add
fldt
lock
dec
push
mov
inc
sub
rcl
out
andb
addl
push
dec
adcl
icebp
imul
xchg
cli
mov
add
xchg
mov
add
ret
push
aad
adc
push
jmp
int3
push
sbb
adc
push
jmp
icebp
movsb
rcrb
mov
ja
jp
inc
out
and
dec
daa
or
and
inc
insb
sbb
into
push
jge
cmp
out
rcpps
call
test
jo
out
rsqrtps
addb
test
shl
mov
mov
out
mov
mov
mov
cmp
add
dec
cmpsl
mov
or
sbb
mov
lock
fs
cwtl
lods
pop
xchg
jae
int3
dec
hlt
out
shlb
xorl
sub
cmp
addb
je
mov
add
and
add
shlb
cmp
push
mov
popa
dec
icebp
push
sub
outsl
add
adc
lret
lret
int
movlps
ret
pushf
arpl
cltd
in
xchg
jbe
gs
cmp
inc
sbb
daa
sbb
inc
xor
pop
pusha
xorl
loopne
shll
add
test
cltd
imul
fidivl
add
outsl
sarb
cmp
push
in
mov
push
sbb
add
jno
out
xor
and
and
jl
push
xor
sarb
or
loope
jg
fisttpll
adc
add
adc
ret
sbb
mov
adc
rcrl
push
mov
add
and
add
fucomip
into
cmp
cwtl
inc
xchg
lods
jns
sbb
mov
sub
push
movsb
add
jecxz
sub
and
aam
mov
add
sub
xchg
enter
loopne
push
cli
sub
sbb
mov
mov
mov
sub
nop
test
xor
mov
jmp
int3
push
bound
push
adc
cltd
add
pop
clc
jo
jecxz
dec
push
push
sub
mov
cli
and
sub
psrad
add
sub
xor
dec
clc
adc
sbb
test
pop
fiaddl
and
dec
popa
add
pop
lcall
cmp
or
inc
test
sahf
imul
xchg
test
add
jmp
int3
push
xor
adc
dec
test
andb
loopne
out
mov
and
and
rclb
and
imul
jle
pop
add
inc
adc
ret
inc
fisubs
adc
shlb
xor
add
and
pusha
jnp
lahf
loopne
sub
pop
pop
push
lods
push
es
sbb
add
loope
jmp
icebp
xor
clc
aam
shlb
adc
cmp
shrb
mov
sahf
push
mov
stos
mov
mov
sbb
and
add
insb
adc
jb
sbb
sbb
cmp
xor
jns
and
jb
faddl
stos
jns
fsubs
mov
pusha
xor
mov
mov
mov
and
dec
sbb
imul
je
xchg
repz
adc
jg
add
scas
push
dec
inc
mov
sahf
push
jno
lock
inc
jns
outsb
nop
xchg
popf
mov
dec
cmp
into
aad
cwtl
sbb
xlat
mov
inc
dec
inc
jp
lcall
dec
sbb
xor
jge
dec
stc
sbb
xor
push
dec
movb
pop
sub
adc
push
and
or
mov
icebp
dec
or
rcrb
pusha
sub
add
push
adc
and
scas
shlb
jmp
cmp
test
dec
mov
cmp
inc
xor
jo
jb
loopne
pushf
add
arpl
cmpsb
pop
or
scas
dec
nop
xchg
or
iret
push
mov
test
and
lahf
cmp
dec
bnd
or
xor
mov
popa
lock
hlt
fistl
sub
bound
cmp
je
mov
dec
jb
cmp
outsl
mov
adc
mov
pop
add
rclb
push
lret
movsb
and
arpl
rcr
out
and
in
mov
popf
cwtl
adc
xchg
push
adc
popf
add
test
imul
xchg
outsb
test
sbb
in
add
xorb
addb
inc
cwtl
dec
and
adc
mov
dec
push
aam
fs
or
ljmp
adc
sub
sahf
mov
inc
shrl
or
sahf
dec
jns
xor
pop
adc
fisttpl
adc
or
xor
in
into
cli
mov
pop
imul
jl
in
cmp
outsb
and
sbb
stos
sbb
push
iret
inc
add
mov
push
add
pop
pushf
adcb
arpl
popa
ret
pop
xchg
push
cmpb
dec
nop
jbe
movhps
in
jns
pop
test
cwtl
aas
add
push
inc
add
fdivrs
inc
repnz
push
add
lds
and
lock
sbb
xchg
or
inc
push
jb
cwtl
sbb
pop
push
or
mov
sub
sub
add
xor
adc
and
fs
repnz
jne
flds
push
popa
or
mov
or
mov
sbb
mov
jl
xchg
imul
add
jbe
lock
mov
lods
jmp
jmp
cld
mov
enter
loopne
inc
and
xor
cld
push
push
and
inc
lcall
jmp
mov
push
mov
inc
add
jo
mov
rcrb
mov
loope
add
mov
xchg
test
mov
inc
adc
xchg
or
and
mov
push
xchg
jg
mov
into
shrb
cmp
add
movsl
rorl
add
in
pop
aam
cmpb
rcl
xor
adc
jne
pop
jno
xchg
rclb
loopne
je
test
nop
sub
popf
adc
add
xor
add
and
push
and
ljmp
leave
and
push
sbb
sbb
addb
adc
xlat
pop
or
hlt
mov
jge
cltd
movsb
loope
adc
jg
cmp
adc
adc
lcall
rorl
cmc
sar
pop
nop
leave
mov
mov
sub
sbb
mov
addb
cmpsb
mov
nop
daa
jns
mov
and
or
cmp
rorb
leave
add
push
add
push
sub
popa
test
ror
mov
mov
adc
jo
or
cmp
in
add
jns
cmp
or
es
movl
idivl
mov
call
or
inc
mov
je
push
and
or
leave
dec
and
pushf
cmpsb
mov
mov
or
movb
push
in
mov
adc
add
hlt
scas
cmp
inc
fimuls
or
add
xchg
les
add
xor
test
and
xor
test
inc
xor
test
sarb
mov
adc
repz
cltd
enter
in
arpl
les
mov
jmp
int3
decb
adc
jmp
jno
fistpll
cmp
sbb
cld
mov
inc
adc
or
cwtl
hlt
adc
out
cmp
stos
ret
xchg
pop
mov
andb
sub
rol
mov
aam
arpl
xor
xor
das
popa
or
mov
shl
xchg
and
adc
jne
cmp
aam
push
imul
and
jge
mov
cmp
pop
add
or
iret
fstpl
inc
jge
cmp
inc
stos
mov
shlb
inc
jno
adc
sbbb
frstor
sub
leave
or
pop
nop
test
mov
xchg
iret
push
mov
inc
loopne
sub
jno
rorb
xor
repnz
adc
dec
sub
or
insb
je
pop
mov
inc
adc
jae
and
popa
lock
sbb
mov
inc
int3
jno
mov
jbe
dec
js
push
push
xor
or
insl
pop
xchg
jl
inc
cmp
ja
mov
bound
cwtl
cmp
imul
pop
cmp
cmpb
xor
sbb
loopne
or
icebp
mov
clc
mov
clc
add
mov
adc
or
and
enter
xor
add
test
divl
push
aas
sub
movsl
inc
and
xchg
enter
subl
mov
dec
lods
xchg
popa
add
xor
mov
jne
add
or
sub
ds
cs
adc
rcll
push
or
or
jb
cmp
jo
sbb
xor
sbb
data16
jae
testl
push
or
aam
cs
pop
add
sbb
or
xchg
dec
dec
mov
sahf
dec
popa
and
cmp
adc
mov
cmp
dec
imulb
add
lods
enter
jns
and
cmp
add
enter
mov
fdivrs
or
mov
adc
adc
jo
fs
outsb
fs
insb
adc
sub
push
int3
adc
add
ja
jg
orb
rolb
into
lidtl
lea
test
sbb
sti
cmpb
dec
pop
sbb
push
mov
xor
cwtl
leave
or
dec
dec
daa
add
lea
add
jae
mov
sbb
dec
dec
aaa
push
jmp
add
into
dec
inc
dec
lods
sub
xor
cmp
insl
adc
lods
fiaddl
xor
push
lods
push
repnz
push
ret
rcll
dec
pop
pop
sbb
add
insb
mov
jle
and
popa
add
pop
cwtl
add
inc
imul
dec
ret
dec
out
jl
ret
sub
dec
adc
or
xor
dec
mov
pop
icebp
dec
jge
or
xor
xor
mov
sbb
or
lret
call
sub
in
rol
call
cltd
push
mov
pushf
cmp
mov
mov
clc
xor
dec
rdtsc
das
xor
popa
push
popa
add
incb
push
sub
push
or
inc
mov
pop
jge
sbb
in
shrl
je
add
lret
es
stos
adc
or
jecxz
movsb
icebp
enter
outsb
movsb
add
mov
jmp
call
jle
shll
scas
mulb
adc
mov
imul
jnp
pop
fcmovnb
and
push
sbbl
sbb
notb
jle
add
jo
icebp
xchg
pusha
sub
jne
jb
or
xchg
cmp
rcll
repnz
call
xlat
sahf
pop
cltd
movsb
dec
addb
lock
mov
push
pusha
xor
arpl
pop
push
nop
enter
inc
adc
imul
lahf
outsl
in
add
mov
and
dec
pop
roll
and
inc
hlt
sbb
xor
hlt
shll
fwait
dec
adc
fcompl
in
clc
xor
cmp
mov
outsb
insb
and
cmp
imul
and
loopne
mov
push
sbb
and
and
outsl
jmp
mov
sahf
mov
addr16
push
or
push
lcall
mov
pushf
sub
mov
add
jne
dec
sarl
fwait
cmp
xchg
adc
je
push
and
cld
lcall
les
xchg
lahf
jns
xor
loop
sbb
push
xchg
add
shrb
push
movsb
or
mov
shl
pop
add
dec
jo
jl
inc
mov
xchg
and
rclb
or
jmp
push
mov
mov
fnstcw
stos
inc
orl
pop
inc
lret
add
pusha
movsl
nop
rcrb
and
sets
adc
pusha
push
xor
xchg
add
pop
jnp
xorb
xor
adc
ja
mov
cmp
repz
add
fdivr
imul
sub
arpl
add
fnsave
mov
or
fs
fdivrl
jb
add
pusha
arpl
add
lahf
and
mov
sbb
add
hlt
ss
adc
dec
push
jle
je
into
add
rcl
sub
shll
mov
xor
rorb
fdivrl
ja
test
mov
jl
dec
cmp
lahf
imul
sbb
inc
cmp
fistps
cmp
cmp
xor
sbb
or
mov
and
xchg
xchg
mov
cmp
mov
shlb
in
mov
inc
inc
loope
add
add
hlt
sahf
adc
or
jns
push
push
xchg
mov
pusha
add
cmpsb
mov
arpl
out
scas
out
fidivrl
sbb
xor
jnp
rclb
faddp
clc
jbe
je
push
cmp
add
pop
dec
icebp
popf
pop
dec
and
stos
and
insb
repz
and
push
pushf
cmp
cmp
inc
mov
cmpb
sub
sbb
jecxz
or
inc
cmpb
mov
movsl
and
shlb
insb
clc
or
jbe
xor
aad
testl
mov
inc
lcall
sahf
mov
in
es
aaa
rolb
push
lahf
cmp
sti
add
daa
loope
xchg
add
sbb
fiaddl
xor
push
dec
mov
jle
dec
std
fcoml
sub
fucomp
aas
and
or
sub
sub
inc
fdivs
sbb
lea
push
stos
iret
cmp
add
sbb
shll
mov
ljmp
lods
repz
inc
cmp
push
loopne
out
sarl
sbb
adcb
pop
or
nop
bound
push
mov
xor
mov
xchg
or
or
bswap
jl
cmpsb
sub
scas
movsb
add
loop
mov
test
test
pop
xor
outsl
enter
and
pop
movsb
lods
jle
adc
test
dec
js
icebp
cmp
jo
xchg
inc
in
dec
mov
gs
jle
lahf
lahf
fcoms
into
addb
inc
dec
cmc
sub
outsb
shrb
push
fcomps
add
loop
inc
cltd
adc
pusha
lock
push
pop
stc
pop
sbb
sub
sahf
mov
mov
ret
fdivs
cli
les
cmovs
lods
rorb
jmp
movsb
mov
push
sbb
popf
inc
xchg
mov
cmp
xchg
xchg
jo
movsl
sub
adc
lds
loopne
mov
cmpsb
jae
ret
addb
sbb
adc
pop
adc
in
sbb
inc
or
ret
sbb
or
add
lock
add
push
and
mov
cmp
shl
pusha
push
cmp
jo
lock
mov
mov
fsubs
imul
inc
repnz
jnp
cmpsl
and
push
gs
lds
pusha
addr16
add
cmp
pop
in
pop
andb
xchg
test
jle
loopne
lods
dec
lret
scas
dec
shrb
or
popa
add
leave
and
mov
pop
add
jne
insb
test
xor
dec
loopne
adc
insb
mov
rclb
es
sub
in
add
ss
in
cmp
mov
jl
push
xchg
mov
iret
and
into
add
stos
rorl
in
sbb
xchg
test
xlat
adcl
mov
sarl
clc
nop
mov
lods
or
test
xchg
add
test
mov
mov
xlat
sbb
testb
fbstp
ljmp
and
repnz
push
je
fs
dec
add
into
popf
add
lods
lods
decb
adc
jno
mov
or
ss
or
add
xlat
fnsave
sbb
pop
sbb
add
aaa
ret
test
enter
push
lock
lods
push
jns
push
in
insl
clc
scas
stos
cmp
add
adcb
push
pop
add
je
pop
push
add
add
jno
mov
xor
adc
fidivs
stos
cmp
setbe
pusha
xchg
mov
out
add
into
pusha
lcall
add
shll
stos
mov
arpl
mov
inc
and
into
and
push
daa
sbb
dec
sub
movsl
das
test
push
cs
inc
cmp
sbb
xchg
or
sub
mov
push
hlt
pop
add
dec
mov
js
mov
enter
imulb
dec
jle
flds
ja
and
xor
and
daa
out
fdivr
in
add
imulb
jl
inc
xor
and
out
sbb
mov
or
jns
js
jl
cld
sub
dec
adc
and
das
pop
nop
add
xchg
mov
iret
mov
cltd
sbb
sbb
mov
test
mov
fbld
pop
cmp
inc
jae
hlt
mov
jnp
scas
imul
orl
aas
xor
or
jl
sub
mov
push
subb
scas
clc
add
lds
addb
repnz
lret
cmp
outsb
xchg
mov
test
rorl
sbb
xor
inc
dec
mov
cltd
dec
and
push
in
xor
fstpl
stc
repnz
cmp
cltd
inc
lock
fisttpl
test
fisttpll
inc
fwait
push
pop
loopne
add
cs
fdivl
test
cwtl
mov
cmp
jae
jo
scas
jns
inc
fmull
and
add
rolb
test
test
repz
ss
fdivr
bnd
add
scas
mov
scas
or
mov
jbe
adc
xor
adc
cmp
in
xchg
aad
mov
jns
test
dec
cltd
negl
cmp
mov
loopne
les
pushf
sbb
rcl
push
rolb
jbe
add
clc
addb
mov
or
sbb
call
fs
insl
notl
loopne
adc
cmpb
cmpsl
jge
inc
cmp
add
scas
adc
or
jns
hlt
lahf
sbb
stos
pop
nop
test
popa
in
incl
cmp
inc
add
push
insb
cmp
dec
pushf
test
mov
stc
or
add
xchg
sti
iret
andb
sub
test
cs
imul
sub
add
popa
mov
pop
dec
xchg
sub
sbb
and
xlat
sbb
scas
adc
jb
aad
lock
mov
cmpsb
sbb
sub
cld
push
fadds
and
pop
push
es
push
orb
out
cwtl
jl
fdiv
and
adc
scas
pushf
fcomps
test
fidivrl
sti
or
mov
bound
and
fidivl
nop
lods
lods
or
test
lea
pop
inc
sub
faddl
lret
aam
nop
dec
pop
jnp
cmpsl
lods
xor
test
fs
or
xlat
sub
xchg
xchg
add
cwtl
pop
cmp
push
movsb
add
fdivs
test
xor
ja
jo
xchg
mov
clc
int3
ficomps
xor
inc
xor
jbe
and
nop
push
or
arpl
sarb
cmp
add
cmp
orb
push
fs
or
lea
pop
inc
out
iret
scas
xor
dec
sub
dec
addl
pusha
inc
inc
jne
ret
movsl
sbb
cli
dec
lret
mov
pop
pop
fstp
mov
adc
and
cmp
inc
dec
dec
in
and
add
jecxz
popf
sbb
mov
xchg
push
clc
insb
adc
pop
xchg
add
cmpsb
push
xor
loopne
fwait
sub
or
and
cmpsl
lods
sub
hlt
je
ret
mov
and
mov
scas
add
jmp
jecxz
lcall
mov
mov
lahf
aam
jno
and
aas
cmp
lock
mov
shlb
mov
sbb
pop
xor
ret
dec
pop
add
jo
test
bound
js
jo
add
fwait
outsl
lret
out
push
adc
sub
test
xchg
push
add
imul
lock
xor
adcb
int
jle
mov
add
jecxz
mov
fcoml
in
push
mov
dec
in
mov
ret
sbb
sub
imul
pop
out
sub
fs
push
cld
clc
repnz
ss
mov
inc
push
cli
xor
sbb
jl
dec
mov
stos
xor
jmp
mov
cmp
mov
inc
push
pushf
mov
shlb
pop
sub
add
sbb
popa
int3
push
mov
push
fdivl
mov
in
xchg
adc
mov
les
sbb
xor
rcrl
popf
testb
cmc
lcall
mov
je
stos
xchg
rolb
pop
adc
loope
push
cmpsl
pushf
das
ss
xor
nop
lock
cltd
add
sub
add
setle
fmull
adc
mov
add
in
jg
inc
and
std
pop
add
cmp
out
sub
in
jl
out
test
cmp
adc
inc
jle
pop
stos
xor
pop
es
andb
mov
clc
test
jecxz
clc
je
in
imul
sbb
mov
mov
faddl
popf
add
sub
inc
in
add
pusha
jp
in
cmpsl
jne
inc
add
adcl
jae
outsb
stos
sbb
jge
push
jb
xchg
andb
clc
add
cmp
fimull
data16
mov
pusha
rcrb
fs
cmp
pushf
and
bound
xorl
push
sbb
aad
lods
js
or
mov
add
cmp
push
nop
pop
sahf
je
mov
mov
and
in
mov
insl
jp
dec
add
or
xchg
ljmp
loopne
cwtl
fdivr
add
sub
andb
push
cwtl
or
add
ss
test
cltd
push
or
mov
iret
cltd
sbb
or
add
mov
icebp
es
rorb
or
pop
inc
inc
add
xchg
clc
xor
push
sahf
add
mov
jbe
lcall
xor
stos
rclb
adc
jecxz
add
mov
sub
xchg
stos
dec
mov
das
cmpb
ror
leave
test
push
jmp
sub
push
add
shrb
adc
rcr
add
clc
roll
shl
mov
add
notl
jp
mov
repnz
sbb
add
mov
sbb
jo
push
add
icebp
and
jb
nop
add
mov
bound
cwtl
xchg
arpl
cmp
xor
cmp
das
nop
pop
adcb
mov
push
pop
xchg
jns
sbb
mov
pop
sub
lock
jnp
ja
test
dec
clc
cmp
mov
sarb
cmpsl
inc
lea
pop
add
popa
imul
dec
push
xor
mov
xchg
inc
jle
add
add
fs
push
out
xor
xor
adc
outsb
sahf
add
stc
repz
add
enter
lea
push
cmpsl
jb
test
call
inc
sub
pop
jge
jae
ret
add
sub
lcall
sar
stos
sbb
xchg
pop
fcomps
icebp
pusha
cld
xchg
sarb
in
add
repnz
sarb
push
lahf
aaa
mov
arpl
mov
iret
stos
shlb
add
adc
inc
lret
sbb
scas
mov
add
or
and
jbe
movsl
subb
push
xchg
js
add
add
fsts
mov
mov
loopne
cs
lods
gs
mov
and
cld
in
pop
add
test
sarb
pop
adc
cmc
addb
outsb
adc
or
cmp
or
xchg
mov
loop
loop
fwait
adc
push
add
inc
test
lods
add
fs
mov
test
popa
test
pop
xchg
cmp
and
add
int
scas
movhps
js
and
pusha
test
shrb
les
jge
pop
cmp
jl
dec
sub
add
push
sbb
pop
add
cs
or
movsb
cwtl
sub
sbb
push
inc
push
das
lret
les
pop
and
add
jg
pop
dec
popa
popf
int
mov
add
xor
test
pop
addb
in
inc
test
sbb
xor
mov
xor
dec
add
lods
dec
pop
es
into
nop
jl
loopne
cs
shlb
cwtl
add
and
push
imul
in
popa
fs
jns
add
push
add
test
inc
clc
orl
sub
nop
movsb
push
and
fadds
and
xchg
sbb
cmc
sub
cmp
dec
das
flds
jo
add
or
lahf
xchg
or
fdiv
mov
xchg
int
xchg
ret
addb
dec
push
jp
inc
and
push
mov
sahf
or
clc
ret
add
cmp
or
enter
lds
sahf
rolb
mov
or
push
lret
jl
mull
mov
les
scas
xchg
fisubl
cmp
pop
or
shlb
in
enter
jbe
mov
push
faddl
xchg
and
aas
xorl
xchg
cmp
enter
push
sar
stos
loopne
dec
xor
cmp
fisubs
jno
hlt
outsb
xchg
add
xor
shrb
cmpsl
xchg
xchg
mov
aam
dec
adc
enter
mov
sbbb
cmpsl
les
movb
add
add
xor
mov
adc
add
orl
mov
ljmp
or
aaa
and
xchg
inc
mov
xchg
xchg
loopne
aam
cmp
xchg
adc
fistl
movsb
mov
lret
inc
mov
dec
cvtps2pi
adc
inc
flds
pop
mov
inc
adc
stos
dec
sub
mov
xor
out
bswap
jo
push
xchg
enter
popf
pop
pop
nop
pop
call
iret
sbb
mov
lods
inc
mov
dec
cld
push
push
inc
pop
pop
and
test
jnp
hlt
mov
jle
mov
into
inc
insl
aas
sahf
out
xchg
add
inc
clc
jl
add
mov
repnz
loopne
add
in
sub
jl
loope
sub
add
ja
xor
loopne
outsb
adc
mov
cwtl
cmovne
xchg
xlat
rorb
pop
in
add
push
adc
cmp
cmp
ljmp
add
fcmovne
dec
mov
call
rorb
mov
add
add
divb
mov
fwait
sub
decl
xchg
sub
popf
iret
lock
or
and
add
sbb
mov
dec
jg
add
xchg
xchg
dec
out
add
imul
adc
sbb
mov
pop
push
cmp
pusha
adc
aad
or
jge
ret
or
stos
adc
dec
test
push
mov
ds
roll
xchg
cmpl
inc
jl
mov
hlt
in
inc
jp
sti
sbb
xchg
cmp
xorb
dec
xchg
lock
mov
inc
sbb
sbb
adc
testl
loop
lds
add
xchg
and
pop
push
and
jle
lock
pop
or
ljmp
push
mov
xchg
or
xchg
jg
repz
pop
or
in
cltd
mov
out
ds
jbe
lldt
ja
sbb
add
pop
cmp
inc
enter
andl
pop
xchg
movsb
enter
jecxz
jg
mov
in
add
dec
mov
bound
leave
inc
inc
mov
hlt
and
pop
call
jae
dec
orb
pusha
mov
test
sbb
mov
loope
dec
je
cli
add
add
scas
daa
sub
les
sbb
inc
lock
ja
add
mov
scas
jbe
dec
test
lret
xchg
or
push
fdivr
gs
dec
mov
cmpsl
cmp
jo
adc
mov
jbe
sbb
mov
xlat
test
mov
adcl
adc
push
jo
jl
pop
xor
call
ja
jo
test
mov
inc
and
jo
movd
and
adc
xchg
mov
xchg
cmp
add
jl
popf
adc
mov
movsb
add
add
jb
es
fldl
insl
add
sbb
jo
pop
sbb
mov
mov
adc
sub
dec
xchg
cli
pusha
imul
pusha
scas
adc
mov
cmp
cld
fmuls
testl
nop
or
nop
enter
pop
jo
inc
fldt
sti
dec
mov
cmp
or
in
cltd
outsb
lods
cwtl
mov
and
add
mov
sarb
mov
cmpsl
add
mov
loop
push
lret
mov
fsubrs
sbb
add
pop
enter
add
les
jno
adc
or
fstp
add
adc
lods
cmpsl
adc
push
or
xchg
std
imul
clc
jmp
icebp
or
and
in
leave
sub
pop
js
imul
pop
loope
adc
xchg
ljmp
mov
push
xor
outsl
and
clc
add
lret
mov
sub
dec
or
cmp
mov
test
sbb
cmp
pusha
nop
add
and
aaa
icebp
sub
and
lret
and
add
aas
pusha
clc
mov
and
lock
add
push
push
or
gs
inc
jbe
push
or
lcall
xchg
sbb
fsubrp
sub
jo
hlt
test
add
popf
insb
adc
xor
mov
add
pop
loopne
push
pop
add
sbb
mov
add
xchg
cmpsb
mov
or
jne
rclb
out
inc
inc
push
fmul
pop
or
std
sahf
aam
xorl
mov
add
in
jmp
out
ret
rclb
cmp
dec
dec
cmp
and
mov
inc
or
stos
imul
sub
xlat
pop
nop
pop
nop
ljmp
pop
fmull
enter
add
xchg
xor
add
aas
fnstenv
inc
out
repz
or
jl
cld
xor
add
cld
popf
imul
inc
call
xorb
jno
imulb
add
or
inc
arpl
adc
sub
test
cmp
and
loope
mov
jns
fbstp
pop
sbb
push
sub
pop
aam
or
dec
add
mov
mov
test
and
xor
adc
and
add
cli
mov
or
or
pop
repz
xor
mov
rolb
jg
or
push
jo
movsb
push
hlt
sub
xor
mov
aas
int3
xchg
cmp
ret
push
test
scas
dec
sub
cld
pop
divl
lret
inc
sbb
or
push
jmp
add
sahf
mov
jecxz
popf
dec
cmc
pop
sub
enter
pusha
add
icebp
cmpsb
sbb
cmp
sbb
nop
cli
push
in
xor
mov
jmp
push
ret
dec
adc
popf
ret
or
xor
jg
sbb
pop
scas
add
aas
insb
mov
add
push
sbb
mov
mov
xlat
imul
sub
jge
push
mov
cmp
add
pop
sub
outsb
lods
test
pusha
xor
lods
lods
xchg
out
jl
push
and
xchg
jl
mov
push
push
mov
subb
popf
cmp
or
sti
mov
adc
xchg
movsl
pop
push
in
outsl
dec
aas
enter
sarl
and
divl
call
lret
js
data16
fisubrs
jmp
xor
push
add
jo
sbb
dec
sti
add
push
jmp
xor
pop
push
subb
dec
loope
and
outsl
jae
add
int3
mov
jno
push
add
push
out
xor
mov
fsub
xor
ljmp
xorb
jle
mov
lods
and
add
hlt
call
dec
sub
repz
std
or
repnz
or
mov
mov
sbb
push
xchg
jg
orl
sbb
xor
mov
negl
add
fstpl
push
inc
sub
inc
and
xchg
add
mov
push
xchg
addl
mov
jo
cmpsb
add
push
sbb
rol
dec
adc
add
call
add
mov
add
mov
push
cmp
movsb
lds
pop
negb
stc
insb
add
lods
div
sbb
sub
movsl
add
addl
inc
stc
cmpsl
push
inc
mov
aaa
push
out
sub
add
xor
nop
jmp
jno
cmp
pop
dec
orl
sub
dec
xor
lret
jno
dec
shr
inc
xor
mov
cltd
rcl
sbb
ds
dec
add
or
adc
ficoml
push
jmp
les
inc
mov
stc
mov
movsb
inc
cld
sub
mov
inc
mull
or
fidivs
xor
cmc
dec
and
sbb
adcb
repz
mov
pushf
inc
pop
sbb
pop
pop
les
ret
pop
cmp
dec
in
jmp
addr16
mov
xchg
pop
jl
ljmp
pusha
adc
jmp
out
cmp
orl
xchg
loopne
inc
icebp
jb
jb
mov
sbb
inc
add
ds
test
sti
fcompl
repnz
jl
and
je
jge
pop
jmp
mov
icebp
pusha
cmc
test
cs
je
aad
add
shll
add
loop
push
or
imul
jo
jl
pushf
mov
or
mov
test
inc
mov
cmp
jne
pushf
lock
jb
dec
aas
push
nop
hlt
and
decb
adc
sbb
pop
jg
add
mov
and
add
mov
out
mov
mov
add
stos
cmp
mov
sarl
roll
in
popa
imul
enter
outsb
and
sub
pop
stos
mov
jno
rclb
shl
outsb
mov
scas
test
cmp
mov
push
and
idivb
adc
daa
shrb
pop
or
inc
or
add
fwait
mov
add
inc
imul
dec
aad
stos
add
je
roll
lods
pop
loopne
inc
mov
mov
je
push
add
push
cmpsl
sbb
loopne
test
xor
fs
mov
cmp
ds
mov
pop
add
sub
add
imul
push
xor
lock
mov
std
cwtl
sbbb
leave
sbbb
pop
inc
pusha
enter
push
jmp
subb
push
arpl
lahf
imul
rclb
pushf
adc
and
sti
mov
sub
movsl
add
pop
or
push
adc
pop
dec
and
test
mov
dec
repz
jae
sbb
outsb
fsubrs
stos
ret
add
inc
pusha
adc
lods
adc
and
sbb
jmp
shlb
pop
addr16
pop
push
sbb
scas
adc
aaa
pop
ret
and
jns
fcomip
pop
fstl
add
mov
lea
inc
enter
xchg
cs
cwtl
xor
insl
xchg
add
push
inc
cmc
in
bound
push
add
mov
addr16
enter
inc
mov
or
xchg
daa
out
nop
call
xor
nop
add
lcall
push
dec
mov
xchg
inc
test
cmp
movsb
sub
adc
das
cltd
addb
in
dec
adc
sbb
lahf
int3
mov
js
and
mov
sbb
in
push
shlb
cmpl
adc
insb
push
fmuls
sbb
sbb
mov
sub
push
cmpb
sbb
pop
rol
inc
mov
or
jge
mov
mov
inc
fucomp
scas
pop
call
jecxz
nop
cmp
and
rorb
jle
fs
ret
lsl
das
imulb
add
pop
sbb
fdivrs
mov
nop
jo
mov
leave
cwtl
inc
xor
mov
in
repnz
sub
imul
rcrb
lods
je
inc
and
or
push
inc
adc
stc
cmp
xor
xchg
cmp
es
mov
int3
sub
int
or
add
ds
divl
xchg
js
out
mov
xchg
inc
push
mov
mov
dec
inc
xchg
xor
adc
sysenter
popa
in
cmp
cmp
icebp
imul
je
adc
xchg
mov
or
sbb
test
push
mov
push
imul
push
jmp
pop
inc
fdivrs
pop
and
pop
mov
add
xor
dec
inc
xor
mov
jne
sbb
xor
inc
adc
or
pop
cmp
hlt
lret
push
push
das
inc
and
div
outsl
rolb
xor
sbb
cmp
mov
in
in
ss
es
into
add
in
aas
in
mov
xchg
mov
mov
add
jl
test
dec
stc
clc
adc
mov
mov
subb
pusha
dec
pop
push
leave
and
xchg
bound
jbe
add
xchg
xchg
hlt
xchg
xor
jo
sbb
xchg
and
sub
pop
pusha
or
dec
scas
xchg
jecxz
lock
cmp
cmp
push
cmp
inc
shll
stos
add
loop
pop
sub
xchg
push
mov
mov
push
jmp
inc
call
add
cmp
pop
inc
iret
js
add
and
add
push
jmp
inc
cs
je
pop
inc
and
xchg
std
mov
sti
mov
jp
mov
pop
cld
jnp
dec
loop
lock
push
sub
sub
mov
gs
inc
scas
push
loopne
pop
sti
add
lock
int
loop
sti
addb
add
add
movl
stc
jl
cmp
or
ljmp
loop
clc
dec
adc
pop
pop
dec
cld
repnz
lods
ret
cmp
mov
xor
es
adc
movsb
addb
rorb
sub
add
hlt
pop
inc
aaa
add
push
push
and
pop
in
ja
bound
add
mov
mov
je
stos
add
ret
push
jmp
mov
dec
inc
inc
lock
and
pusha
imul
in
in
arpl
sbb
add
mull
cmp
ljmp
add
cld
pusha
fsubrl
adc
rorb
enter
in
mov
orl
ror
sar
addl
jge
xchg
or
pusha
inc
mov
enter
movsl
mov
icebp
push
jnp
pusha
dec
in
clc
sahf
push
mov
inc
sbb
fisubrs
add
js
xor
ljmp
test
jno
sbb
add
addl
xor
lahf
nop
inc
orb
inc
sub
je
pop
add
xchg
aad
ror
jns
push
push
xor
mov
cmp
icebp
sbb
or
mov
xor
and
mov
xchg
add
stc
aam
fistps
sbb
adc
and
fs
pusha
or
or
or
sbb
xor
stos
gs
ret
sahf
je
add
jnp
addb
subb
or
adc
jl
cmpsb
es
sbb
and
mov
adcl
mov
and
mov
jp
or
ljmp
test
adc
scas
inc
mov
adc
nop
xor
inc
add
movsb
pop
xchg
add
rcl
repz
sbb
loopne
dec
pop
or
pusha
jp
adc
or
xor
jmp
test
in
jl
pop
mov
mov
fwait
lock
aad
jns
repnz
nop
jle
push
shl
cli
xor
rcrb
pusha
leave
adc
xchg
lret
dec
nop
sub
inc
xorb
fbld
and
addr16
dec
aas
add
pop
sub
in
and
cmp
xchg
enter
movb
pop
test
or
out
inc
push
jne
test
cmp
dec
mov
or
sbb
sub
inc
push
xchg
mov
adc
faddl
push
daa
xchg
mov
jl
cld
adc
cs
inc
nop
sbb
ret
and
add
lcall
inc
add
and
xor
adc
orb
enter
adc
add
outsl
sub
push
push
jnp
push
mov
data16
nop
repz
mov
ljmp
mov
repnz
sbb
push
push
xchg
and
adc
sbb
mov
out
dec
add
xchg
leave
xor
es
xchg
lret
xorb
adc
mov
ds
js
mov
sbb
and
sbbl
sub
clc
jnp
popf
xchg
mov
mov
dec
dec
inc
test
loop
or
mov
cmpsb
lods
and
add
dec
enter
add
imul
xor
call
sub
inc
push
jbe
inc
movsb
in
pusha
loopne
mov
push
cld
sti
rcrb
fcmove
sub
js
lea
xor
jnp
loope
mov
icebp
lock
inc
pop
pop
mov
push
dec
bound
jl
mov
ja
add
aas
jb
stos
ret
pop
orb
adc
xchg
pop
mov
clc
add
jb
xor
mov
dec
xor
add
xorb
add
push
or
jo
inc
sbb
mov
mov
mov
ret
hlt
add
push
insl
sbb
dec
nop
lods
inc
popl
and
bound
xor
cmp
mov
cld
or
sub
fsubs
addb
neg
movsb
shlb
or
test
iret
loopne
loop
addb
movsl
ret
sub
mov
adc
orb
cmp
movsb
jle
shr
mov
cmpsl
je
add
xchg
push
rcll
fiadds
stc
sbb
jne
jp
and
xor
xor
clc
xchg
lahf
imul
inc
sbb
mov
sbb
jo
loop
xchg
dec
and
out
fs
sbb
dec
nop
pushf
inc
cs
gs
popf
lret
pop
out
adc
cmc
clc
out
pushf
popa
sub
adc
cli
idivb
popf
insl
jb
and
mov
mov
dec
jb
pop
xlat
mov
inc
mov
xor
cmpb
arpl
pop
mov
lods
daa
push
lahf
jns
in
lea
and
mov
arpl
lret
pop
imul
jo
mov
pop
inc
pop
enter
mov
jae
adc
inc
adc
push
aaa
add
push
push
sub
adc
leave
lret
jp
pusha
mov
fadd
or
loope
xchg
faddl
jae
rcll
push
ret
xchg
call
mov
or
cwtl
mov
push
call
pop
jp
mov
xor
jge
lcall
adc
mov
mov
mov
rorb
mov
add
dec
int
cmpsb
mov
mov
repnz
add
lds
jl
int3
fisubl
jle
dec
test
mov
mov
mov
test
pop
push
mov
push
dec
lds
and
or
movl
and
mov
push
inc
push
data16
sbb
and
jmp
mov
ja
lret
mov
psubb
xchg
lret
dec
mov
fldl
push
lret
adc
add
mul
sbb
add
pop
gs
mov
dec
mov
cmp
xchg
icebp
xchg
sbb
xchg
mov
or
aad
push
and
mov
mov
jne
dec
loopne
adc
cmp
inc
add
dec
xorl
jo
adcb
ficompl
inc
sbb
mov
pop
fcomp
and
adc
mov
mov
arpl
xchg
mov
ret
dec
xchg
inc
nop
inc
dec
add
les
adc
lock
mov
inc
pop
gs
push
jnp
mov
jmp
leave
fs
push
test
add
icebp
mov
jmp
sbb
add
sbb
cld
jl
lock
xchg
scas
jbe
xor
push
push
jp
cmp
enter
mov
sub
push
add
inc
push
and
xor
aam
fldt
cmp
pop
add
test
scas
fistpll
fdivrs
push
addr16
cmpsl
mov
xchg
pop
rclb
push
testl
push
int3
mov
mov
dec
mov
orb
or
add
mov
shl
inc
mov
rcr
sbb
jmp
dec
sbb
pop
push
in
in
arpl
sarb
dec
aaa
lock
mov
dec
movsb
aam
mov
cmp
or
sub
add
add
leave
and
add
in
add
popf
hlt
xchg
lock
adcb
loopne
or
mov
fsubrs
push
pop
dec
add
dec
jb
dec
cmp
push
mov
stos
mov
daa
mov
adc
add
adc
push
scas
roll
push
lods
inc
mov
aam
jmp
repz
push
popa
inc
loopne
test
pop
jb
sbb
push
sbb
mov
xchg
lret
add
into
and
add
je
inc
add
cmp
xchg
push
push
add
and
jge
out
pop
movsl
test
sbb
jp
and
sbb
push
into
xor
loope
lds
lock
jl
xchg
xchg
movsl
clc
and
push
call
gs
mov
xchg
sbb
xor
add
insl
movsb
add
les
rol
and
add
pop
scas
mov
jns
stc
mov
test
sbb
fneni(8087
xchg
ja
cli
sub
fmul
add
aad
cmp
push
or
or
lds
adc
and
out
mov
movsb
les
loopne
mov
aas
mov
mov
pop
inc
mov
movsb
js
add
out
mov
roll
xlat
cltd
mov
test
nop
pop
addr16
sti
fisttps
and
enter
add
push
ja
sbb
rcl
mov
jns
repz
add
pusha
mov
call
cmp
fwait
and
out
stos
sahf
add
pop
jge
cmpsl
xlat
pop
add
das
nop
adc
dec
and
jg
and
push
arpl
adc
cmovp
add
aam
and
cmpb
push
jne
idivb
add
add
jno
addr16
ficoms
pop
push
aam
or
test
mov
pop
cmp
mov
outsb
add
add
add
das
leave
cmovg
jle
es
pusha
xchg
lods
pop
push
add
or
cmp
jns
jne
into
ds
mov
fwait
pop
ret
sbb
add
loopne
jp
mov
pushf
mov
adc
popa
and
jecxz
cmp
add
or
js
pop
sbb
mov
in
sbb
rolb
sub
pop
jno
inc
jp
imul
add
xor
mov
in
inc
pop
aas
dec
roll
test
xor
nop
add
cmpl
jecxz
leave
lahf
popf
add
jg
mov
stc
int
lock
xchg
repnz
mov
scas
dec
push
pop
iret
cmpb
push
popf
enter
xorl
jae
ficompl
add
in
in
aas
std
xor
jb
push
cmc
push
inc
stos
inc
cmp
or
sahf
dec
cmpb
mov
push
nop
xchg
pop
dec
lea
movsb
ficompl
inc
pop
xchg
mov
mov
sub
ficoml
repnz
add
or
pop
inc
add
rcr
xchg
xchg
and
dec
aas
or
cmp
repnz
xchg
pop
pop
mov
xchg
inc
arpl
xor
insb
adc
nop
dec
add
rcrb
pop
push
push
psubsb
add
push
in
orb
add
ret
add
inc
leave
mov
xchg
shll
fwait
clc
ret
js
add
pop
jmp
ret
lds
ds
add
lahf
shr
xchg
into
sbb
incl
filds
lock
add
xchg
and
fldl
stos
aas
mov
add
jae
dec
xor
add
add
lea
leave
jnp
xor
push
jns
rcrl
xlat
pop
jno
cmp
sbb
jae
movl
inc
hlt
daa
mov
nop
mov
dec
sbb
add
loope
adc
mov
and
add
mov
add
imul
jle
add
cwtl
push
fnsave
inc
pusha
xor
jle
push
das
clc
jno
inc
test
sub
stos
adc
jl
je
add
cmpsl
push
jno
dec
push
or
pop
xchg
or
std
sti
nop
in
pop
fwait
and
mov
stos
pop
dec
lods
ret
enter
lret
aaa
pop
adcb
adc
ret
pop
mov
ja
cmc
add
inc
cld
pop
cmp
cwtl
in
push
add
lahf
jb
pushf
add
sarl
push
addr16
pop
test
outsb
es
stc
mov
xchg
add
inc
iret
sbb
subb
and
pop
jmp
mov
xlat
shrb
pop
add
jno
out
stc
rolb
mov
je
pusha
popa
repz
xor
push
xchg
sbb
xchg
fs
add
add
jl
push
sahf
add
imulb
stos
xchg
mov
pop
mov
clc
jb
add
xor
fdivrs
add
lds
dec
mov
xlat
jg
jp
lret
push
into
sbb
cmpl
fcmove
mov
lea
cmpsl
jae
adc
jle
add
enter
shll
xor
xor
adc
rclb
mov
mov
out
jmp
clc
inc
lret
shl
orb
inc
push
push
into
dec
xchg
loopne
add
stc
shrb
dec
out
add
xor
pushf
dec
icebp
out
adc
stos
fldl
loopne
in
add
add
pop
mov
iret
pop
pop
pop
sub
jne
add
mov
sbb
and
mov
jns
or
popa
add
xchg
mov
ljmp
pop
mov
adc
jl
mov
loopne
pop
inc
pop
cld
mov
mov
xchg
pop
sbb
outsb
jnp
jbe
js
in
mulb
add
or
nop
jecxz
rcrb
aam
cwtl
sbb
int
insb
inc
jmp
sbb
dec
test
iret
xchg
xchg
into
out
loopne
pusha
cmpl
xchg
sahf
pop
jns
into
incl
clc
gs
jge
mov
push
and
out
daa
mov
int3
jmp
pop
xchg
sarb
addr16
lcall
pop
jecxz
icebp
xor
adc
ljmp
mov
sahf
add
pop
xor
xor
sbb
mov
js
jo
rorl
add
sarb
testl
int
pusha
sbb
and
jp
stc
add
clc
pop
add
cmp
xor
pusha
mov
or
push
and
pop
adc
psllw
and
push
adc
js
lret
hlt
add
cmp
inc
push
cmp
inc
sar
scas
adc
aam
mov
add
test
adc
scas
pop
sbb
push
shlb
sbb
sbb
xchg
movsb
xor
xorb
mov
inc
mov
imul
mov
cmp
push
out
sub
cmp
push
cmpsb
sahf
lret
dec
inc
jne
addb
jmp
sbb
insl
addb
push
popf
shrb
pop
aas
lds
push
ss
add
push
lret
mov
mov
out
push
das
mov
xchg
jmp
xor
shll
mov
outsb
mov
cmp
cld
test
and
clc
dec
cmpsl
add
movsb
add
xchg
mov
test
andb
jb
test
jns
push
adc
cli
aam
xchg
add
push
xchg
push
fstpl
add
inc
xorb
lcall
rdtsc
add
scas
std
and
pop
cld
mov
inc
ret
mov
xor
mov
jno
dec
push
mov
xchg
scas
test
and
out
cmp
in
xchg
mov
pop
jecxz
push
mov
outsl
cli
sub
inc
add
add
push
add
std
and
and
dec
loopne
sub
push
popa
push
push
movl
sarb
mov
ficomps
cwtl
and
je
add
imul
pop
and
inc
mov
mov
pop
cmpsb
mov
add
bound
incb
popa
dec
xchg
in
and
bound
mov
incl
inc
popl
notb
add
int3
ljmp
sti
xor
leave
pop
xor
pop
push
cmp
pop
add
or
popa
mov
fnstcw
shlb
fwait
xor
sbb
adc
add
xchg
cmpb
incb
xor
add
xchg
ljmp
testl
cwtl
xchg
rcrb
ljmp
mov
mov
out
sbb
and
out
cmp
outsl
pop
add
xchg
movsl
dec
movd
sbb
rolb
out
or
jecxz
sbb
cmp
sbb
das
inc
imul
jle
pop
pop
add
xor
add
inc
dec
inc
push
fidivrl
sbb
push
mov
insl
xchg
addr16
jbe
add
xor
cmpb
fimuls
ds
adc
insb
outsl
jmp
shlb
adc
push
fsubs
and
adc
out
push
pop
add
push
pop
sub
loope
push
mov
data16
icebp
inc
orb
jno
es
dec
mov
inc
orb
sub
pop
push
fcoml
fildll
sub
sub
movsl
jo
mov
or
adc
popf
mov
outsl
mov
jle
es
dec
add
mull
add
leave
dec
xchg
and
add
cmp
push
int3
or
sarl
mov
pop
mov
sbb
sar
pop
and
dec
push
loop
mov
fsubp
inc
dec
inc
mov
sbb
movsb
jbe
call
sub
fidivrs
adc
add
cmp
test
dec
lods
incl
and
pop
stc
popf
pop
xchg
xor
add
sub
test
cmp
push
stc
cltd
add
dec
hlt
les
mov
ret
in
inc
xchg
and
add
aaa
mov
rcrb
aam
add
int3
shrb
movsl
add
test
and
or
cli
dec
test
sbb
or
cmp
push
loopne
inc
inc
pop
sub
aam
and
nop
add
aas
testl
jecxz
pusha
mov
arpl
pusha
or
cmpsb
push
jp
nop
sbb
test
add
mov
or
es
add
fs
or
fisubl
mov
lret
add
insb
mov
ret
arpl
sbb
insb
xor
or
jns
mov
loopne
or
adc
push
mov
mov
xor
rorl
add
mov
push
nop
stos
or
push
mov
dec
or
xchg
pop
mov
xor
adc
subb
fdivl
enter
mov
or
lds
cmpb
add
shrl
add
mov
xor
adc
and
inc
and
and
jle
in
rclb
movswl
out
out
mov
pusha
mov
mov
lea
into
lea
xchg
addl
push
xchg
push
test
mov
add
push
getsec
lea
sbb
add
ret
xlat
pop
sbb
pusha
popa
or
cs
imul
scas
cs
test
jmp
mov
sbb
insl
push
scas
pop
lods
jae
or
pop
add
pop
sti
shlb
push
pop
hlt
icebp
lret
mov
andl
les
call
add
xchg
dec
and
mov
push
hlt
mov
addr16
rol
sbb
cmpsb
add
mov
mov
movsb
add
dec
repnz
aam
rcrb
insb
adc
icebp
call
rorl
jno
sub
xchg
inc
cmp
xchg
shrl
mov
enter
adcl
pop
jmp
hlt
inc
lret
mov
repnz
pop
cmpb
sub
mov
jbe
js,pt
stos
add
mov
aas
ret
bound
or
and
or
in
or
movsb
adc
iret
adc
stos
test
loope
mov
test
xor
push
pop
movl
adc
mov
sub
dec
pop
push
jecxz
sbb
and
xchg
es
xor
pusha
ret
loope
movsl
add
cmpsl
iret
cmc
mov
cmp
dec
pop
sub
push
leave
dec
aad
lahf
sarb
mov
and
fisttpl
aad
inc
jae
decl
pusha
sbb
xchg
jne
add
mov
or
insb
xor
push
cwtl
adc
push
into
mov
les
or
mov
xchg
mov
jne
sbb
pop
popa
nop
and
jp
aam
popf
cmp
repz
mov
sbb
add
jo
scas
imul
pop
in
add
fcom
push
movzbl
call
inc
enter
jnp
dec
add
fists
add
test
mov
adc
sub
addl
adc
mov
mov
and
fwait
leave
sub
ja
cltd
pop
jns
or
loope
pusha
cmpsb
cmc
fstpl
jne
mov
push
ss
xchg
jg
xchg
push
cmp
inc
xchg
pop
add
dec
sub
lea
push
add
pop
adc
mull
add
insb
pop
mov
push
add
mov
enter
dec
jmp
dec
scas
fwait
daa
pushf
sbb
or
es
sbb
subl
clc
cmp
adc
mov
inc
inc
mov
test
add
in
mov
push
jb
jp
dec
pop
leave
adc
adc
andb
xchg
push
xor
leave
or
bound
adc
popa
or
roll
push
das
sub
aam
xchg
add
or
sub
add
mov
and
inc
jle
pop
sub
xchg
jmp
je
sub
sbb
leave
call
fsubrs
clc
insl
xor
cmp
dec
popa
stc
cltd
and
aas
mov
add
or
int
aaa
mov
inc
push
mov
fdivl
xchg
mov
mov
inc
in
add
movsl
xor
roll
cmp
pop
push
sub
flds
dec
xchg
mov
sbbb
pushl
and
cmp
xchg
aad
or
test
mov
sub
icebp
leave
xchg
loop
jle
fdivrl
push
push
sbb
movntps
pop
add
ljmp
stc
and
popa
cmp
pop
push
xor
lock
jle
jmp
inc
inc
imul
and
add
sub
push
in
leave
add
lock
sub
notb
lea
scas
add
adc
dec
popa
ljmp
and
cmp
mov
repnz
pop
out
je
fimuls
fwait
hlt
bound
xor
dec
or
mov
fidivl
xchg
scas
push
pop
inc
cmpsl
outsl
add
and
or
out
lods
dec
pushl
xchg
adc
sub
mov
insl
insb
sbb
leave
or
ja
xchg
dec
lea
and
xorl
push
ficoms
push
in
enter
aad
xchg
nop
push
dec
imul
fists
cmc
mov
ret
sbb
cmp
lds
mov
mov
rorl
scas
call
mov
push
enter
cltd
fwait
sbb
adc
mov
lea
or
ret
js
xchg
aad
inc
orb
jp
mov
mov
inc
sbb
addr16
sub
mov
add
mov
xchg
lea
lret
mov
frstor
inc
add
push
sub
or
sbbl
push
fdivrl
aam
mov
repnz
int
in
fldl
sbbb
or
mov
fiaddl
fs
pop
xchg
push
cmpb
pushf
mov
inc
sub
roll
inc
or
test
push
mov
nop
jecxz
cs
cmp
pop
cmc
int
add
add
ds
rolb
sub
pop
xchg
mov
sbb
jle
mov
or
add
adc
loope
lret
and
js
hlt
aad
mov
inc
f2xm1
inc
xchg
flds
lock
add
lea
push
sti
mov
push
pusha
add
xchg
nop
outsl
jae
push
add
jp
xchg
and
sbb
mov
adc
adc
pop
dec
jne
imul
outsl
or
jmp
arpl
adcb
xchg
aam
jmp
out
mov
add
call
mov
loopne
push
or
xor
xchg
push
call
sti
xor
out
loopne
push
and
sbb
add
pop
mov
jmp
dec
adc
dec
mov
xorb
jo
push
and
mov
add
adc
dec
sub
in
fisubrl
loopne
dec
and
out
xor
mov
push
fistl
push
popa
adc
cmp
ret
mov
jo
xchg
jae
nop
mov
call
push
push
nop
hlt
add
outsb
cmp
ret
aam
mov
cmpsb
cmp
inc
sbb
sti
pop
xchg
push
mov
and
xor
ret
adc
xor
mov
or
daa
push
push
cmpsl
jbe
add
popf
sahf
dec
mov
cmp
adc
inc
jo
loope
loopne
hlt
inc
lahf
push
push
pop
aas
and
add
inc
or
adc
cmpl
sub
pusha
dec
popa
adc
or
loope
xor
loop
jl
aaa
or
or
adc
cmp
aam
gs
sbb
nop
push
mov
and
push
pop
addl
fstpl
cmpsl
push
ss
or
push
ds
mov
cli
loopne
add
sti
popf
xchg
fucomip
push
into
add
push
pop
lret
push
mov
call
add
xor
pop
jecxz
shrb
pop
pop
pop
add
fidivs
mov
cmpsb
ret
nop
mov
pop
jecxz
dec
mov
add
scas
mov
movsl
daa
loopne
jno
add
jno
sub
pop
lret
xchg
dec
xor
mov
es
mov
pop
pop
mulb
pop
inc
out
movsb
add
inc
cmpl
sbb
popa
mulb
add
mov
mov
shlb
mov
lods
xor
mov
out
xchg
sub
push
sti
nop
and
mov
mov
inc
jl
movsl
inc
sbbb
stos
jmp
insl
cmp
call
mov
dec
jmp
inc
dec
rorl
push
mov
inc
cmp
jl
mov
bound
and
push
cltd
test
xchg
test
add
pop
cmpsl
cld
add
mov
adcb
or
int3
jo
xchg
ja
adc
mov
and
iret
jge,pn
loope
outsb
and
mov
pusha
ficompl
xor
mov
mov
or
push
call
mov
iret
jge,pn
add
jge
xor
cs
cmp
xchg
add
mov
mov
daa
mov
cmp
cmp
out
push
test
sbb
popa
push
imul
rcll
pop
adcb
mov
test
xchg
or
popa
pusha
mov
push
lds
popa
lcall
hlt
iret
jmp
andl
sbb
imul
loopne
xor
ja
or
xor
jne
aas
popa
daa
adc
clc
sbb
es
and
pusha
jnp
inc
pop
add
pop
mov
add
adc
mov
add
or
ds
adc
cltd
mov
lret
push
mov
out
arpl
aaa
sahf
hlt
iret
nop
orl
lock
xor
imul
loop
fcmovnu
pop
sbb
sbb
lods
cs
sbb
rcrb
cmpsl
in
pop
fldt
ror
inc
cmpsl
jns
adc
fscale
fisubrl
les
nop
push
bound
nop
das
sbb
and
dec
repz
push
stc
pop
in
and
mov
sub
imul
add
and
imul
int
insl
dec
out
les
in
imulb
sbb
call
test
lcall
jmp
lds
push
pop
xor
sbb
rclb
dec
xor
repz
jg
loopne
mov
popf
jae
mov
jmp
inc
negb
jno
int3
aas
jmp
push
loopne
mov
lds
pop
pop
jnp
pop
pop
sbb
adc
ret
mov
imul
mov
adc
ds
and
or
dec
xor
imul
add
in
xchg
mov
mov
imul
in
les
rolb
sub
xlat
insl
add
test
mov
push
stos
jo
mov
push
or
or
icebp
inc
adc
std
mov
repz
outsl
or
repnz
lret
or
loope
add
mov
iret
insb
andb
xchg
dec
adc
insl
push
pop
dec
lret
arpl
fiaddl
ss
enter
or
inc
cmp
adcb
ret
icebp
jl
sub
mov
add
or
mov
sbb
jg
push
mov
mull
jecxz
js
adcl
dec
or
nop
pusha
leave
inc
fdivr
mov
decb
jmp
test
pop
loopne
hlt
test
loop
dec
mov
add
sbb
sti
dec
add
cmp
xor
jle
jecxz
mov
add
repnz
pop
nop
aaa
or
aas
insl
sarl
mov
dec
pusha
or
cmp
int3
aas
cmp
fldt
push
mull
xchg
fistps
xchg
pop
jo
mov
adc
test
xchg
lock
arpl
jp
cmp
cmp
cld
out
push
fstpl
cmp
sahf
clc
pusha
loope
mov
pop
jmp
cmp
daa
pop
in
and
dec
andb
mov
je
pop
adc
adc
sahf
movsb
in
imulb
in
lods
std
pmulhw
repz
push
mov
mov
push
repz
or
mov
adc
pusha
add
cmc
dec
add
adc
xor
call
sub
adc
dec
sbb
jo
stc
test
jnp
inc
aad
lock
push
pop
mov
ret
loopne
lods
pop
pop
push
roll
mov
shlb
jge
jo
mov
or
movsb
adc
jl
sub
xor
dec
mov
adc
out
mov
aas
test
rcrl
jb
add
jge
add
mov
sbb
insb
imul
fwait
lds
pop
test
mov
dec
mov
xchg
jne
movsl
or
aaa
adc
negb
and
and
jb
adc
mov
add
mov
aad
lods
sub
nop
push
and
add
rdtsc
cmp
adcb
sbb
les
pop
push
ljmp
lahf
mov
xor
or
call
in
adcl
leave
dec
and
jns
jns
xchg
bound
call
adc
add
dec
pop
aam
shlb
mov
inc
fsubrs
sahf
testb
imul
testl
mov
pushf
lods
test
pop
pop
adc
jmp
mov
xor
add
push
andl
add
push
clc
call
mov
pop
repz
cmpsl
in
inc
adc
adc
mov
xchg
fdivrs
add
xorb
test
add
jne
xchg
or
cmpsl
loopne
mov
pushf
insl
outsl
imul
cmc
pop
mov
xchg
cs
cmp
pusha
in
lret
fmull
stos
jb
fistps
add
sub
mov
outsl
pop
test
cltd
cs
aas
push
add
xchg
pop
pop
sbb
ret
jae
dec
xor
movsl
hlt
add
bound
jns
jnp
nop
push
cmpsb
push
add
sbb
inc
xlat
arpl
dec
mov
jg
sbbl
and
or
or
and
inc
jp
cmp
pop
outsb
xchg
jl
aas
mov
mov
xchg
dec
jae
insl
pop
cmp
mov
pop
jo
js
mov
sub
shl
add
addl
and
leave
test
sub
imul
pop
jle
hlt
add
mov
lods
pop
or
rcr
jg
or
movsl
pop
es
fstps
dec
lret
in
pop
sub
jo
inc
pop
or
mov
inc
pop
mov
cwtl
in
push
xor
mov
lret
mov
inc
xchg
adc
adc
sahf
adc
mov
jecxz
subb
push
and
shlb
cwtl
jbe
mov
and
adc
mov
dec
pop
daa
leave
lods
cmp
xchg
mov
ret
es
frstor
inc
push
lock
mov
jns
adc
mov
mov
jb
pop
sbb
and
in
sub
xchg
nop
mov
inc
mulb
into
pop
das
pusha
mov
mov
sub
cld
jle
push
rcrb
setp
mov
push
popa
cwtl
add
sub
dec
mov
mov
add
rorl
xor
or
sbb
mov
dec
fdivrp
mov
pop
insl
pop
inc
mov
and
jae
add
dec
xchg
pop
lcall
fwait
cmp
xchg
push
pusha
mov
sahf
or
xor
mov
cmp
push
jmp
fwait
aaa
mov
mov
inc
sbb
and
add
icebp
lods
pop
dec
nop
sub
add
cld
sahf
sbb
or
sbb
ja
xor
call
add
inc
adc
testb
mov
and
push
lcall
adc
out
sub
add
out
dec
hlt
add
pop
pop
movsl
adc
xchg
xor
in
pushw
add
add
pusha
or
jmp
adc
sti
imul
dec
cmpsl
mov
mov
push
pop
cmp
pop
mov
ret
mov
mov
pusha
mov
mov
cmpsb
arpl
and
sub
dec
cmp
cmp
mov
cmp
orl
cli
mov
pop
aaa
sub
xor
mov
jbe
dec
psubusb
std
dec
mov
dec
in
pop
rcrb
pop
or
pop
roll
lds
push
lahf
dec
cmpsl
scas
lret
xor
adc
inc
add
insb
aad
das
sbb
sbb
cmp
ds
out
push
jmp
ds
xchg
jmp
and
inc
cltd
add
cmp
sahf
mov
push
ret
jno
pusha
jbe
popa
or
cltd
xor
ffreep
popf
inc
inc
mov
mov
je
pop
dec
xchg
push
jne
mov
stos
jecxz
insb
and
mov
jne
push
jmp
mov
sbb
and
add
mov
bound
or
jno
test
jne
pop
add
mov
mov
inc
jl
cld
push
mov
sbb
jbe
sbb
or
jmp
mov
mov
mov
mov
les
lcall
pop
sbb
dec
pop
adc
sub
push
sbb
in
mov
pop
pop
push
push
jne
add
adc
loope
jnp
pusha
incl
enter
xchg
jge
add
adc
jb
add
aam
xchg
aaa
push
mov
jge
das
shlb
sbb
add
pusha
iret
loopne
scas
add
push
jbe
int3
inc
sub
pushf
cld
mov
out
sub
pop
push
mov
pop
adc
jo
pop
add
ljmp
in
mov
sahf
movsb
cs
cmp
dec
sti
fwait
icebp
shlb
mov
mov
testl
or
xor
adc
xchg
cmp
inc
into
subl
in
jo
jb
pusha
fwait
xchg
gs
or
sarl
sub
outsl
outsb
std
add
xchg
and
hlt
xor
add
out
dec
pop
pop
fidivs
pusha
popa
push
stos
and
pop
mov
in
add
enter
arpl
sbb
sbb
mov
clc
je
inc
sbb
pop
out
jmp
popa
mov
jns
outsl
sbb
adc
add
mov
jecxz
sub
push
and
shlb
leave
cmp
jmp
faddl
mov
aaa
inc
cmc
jl
ret
xchg
fists
jns
sbb
cmpsb
fucom
mov
sub
scas
fstpl
push
mov
inc
pop
call
mov
sub
test
aad
mov
jbe
pop
pop
push
or
outsb
push
ja
cmpsb
pop
pop
jbe
xchg
or
cmp
adc
fidivrl
jl
mov
push
mov
insb
cmp
pop
cmp
test
popa
pop
mov
stos
mov
insl
push
cwtl
mov
pop
mull
push
cs
mov
add
pop
cmp
fucomi
daa
fistpll
and
pop
out
loop
andl
loope
out
cli
mov
aad
push
add
cmp
movq
mov
inc
lds
testl
push
jae
add
ja
xchg
sbb
sub
dec
outsb
repnz
xchg
sbb
stos
mov
pop
stc
and
outsb
adc
pop
adc
cmp
dec
es
xchg
adc
ja
loope
sub
push
out
adc
mov
jb
pop
and
add
sub
repz
xchg
mov
mov
cmp
addb
xchg
pop
imull
dec
out
mov
jo
mov
fldl
mov
push
nop
cmp
lods
pop
xor
pop
cmpsl
push
pushl
sbb
cmc
pop
or
or
iret
stos
sub
daa
pop
pop
roll
xchg
test
jne
inc
and
nop
cmp
out
cmpsl
ss
std
dec
clc
addb
cmp
sbb
pusha
rcrb
add
pusha
int3
popf
call
lea
mov
and
inc
add
int3
xchg
and
popa
add
daa
and
inc
push
push
xor
push
leave
push
jge
loop
push
push
faddl
cltd
imul
xchg
cmc
sub
loope
nop
sbb
stos
and
fs
scas
fstpt
dec
lea
popf
mov
out
loope
call
or
lods
int
adc
nop
add
mov
cmp
or
or
ds
pop
xchg
xlat
fmull
cld
pop
push
xor
pusha
push
push
cmp
lret
and
int
lcall
popa
fidivl
in
adc
loope
sub
pop
test
mov
stos
lock
fdivr
mov
pop
addl
punpckhdq
js
jae
in
jmp
cmp
add
bound
fldt
jle
dec
or
sbb
pop
adcl
push
or
push
push
pop
loop
dec
pop
or
push
pop
fimuls
inc
fimull
pusha
mov
dec
int3
push
add
mov
loopne
enter
and
lock
jecxz
and
movsl
testl
jnp
fists
or
aam
push
lods
lret
xorl
icebp
pushf
cmpb
idivb
lea
adc
pop
rcll
dec
inc
add
test
loope
adc
js
add
cmpsb
mov
sbb
push
dec
mov
xor
popf
icebp
inc
cmp
out
sbb
pop
fldl
scas
scas
das
add
pop
mov
xor
aas
out
adc
ret
dec
jae
xor
jg
pusha
mov
mov
adc
adcl
inc
sub
xor
dec
movl
xchg
sub
mov
rolb
dec
fsubrs
add
int3
mov
xchg
aad
cmpsl
popf
add
dec
add
sub
add
push
mov
jo
and
mov
xor
mov
loope
sbb
mov
mov
sub
xchg
shll
xor
fisubs
and
sub
add
inc
lret
fs
adc
pop
mov
xchg
sbb
push
or
xor
mov
and
xchg
add
adc
add
aad
add
mov
sub
adc
or
cmpsl
std
inc
imul
push
clc
xchg
andl
addl
outsb
mov
or
cmp
sbb
insb
sahf
mov
add
sbb
inc
gs
sub
cmp
jns
sub
xchg
faddl
ja
sarl
push
inc
mov
imul
push
pop
aam
inc
pushf
pop
enter
stc
popa
insl
mov
loope
push
pop
shlb
jb
stc
test
sub
pop
inc
xchg
leave
pusha
ds
pop
add
xor
add
cmp
call
or
cs
adcb
movsl
outsl
jmp
dec
shl
mov
out
add
and
mov
xorb
dec
icebp
sbb
leave
and
lcall
jp
mov
pop
test
xchg
dec
ror
add
lea
scas
in
dec
insl
or
mov
daa
aad
inc
mov
and
mov
xchg
ror
movsb
inc
test
stc
pop
mov
inc
xor
out
push
inc
jecxz
dec
std
push
dec
ds
inc
dec
inc
int3
mov
xlat
lret
fstpt
rorb
dec
mov
je
xor
std
mov
imul
cmp
cmpb
jl
xchg
icebp
add
cltd
int
jns
lea
sbb
in
mov
test
das
dec
pop
xchg
test
jge,pt
iret
pusha
in
inc
les
aaa
and
pop
imul
inc
movswl
pop
adc
mov
sub
xchg
dec
shl
and
ret
jmp
out
adc
aas
rcrb
mov
ror
cmp
cmp
mov
push
sub
push
fistl
cmpsl
pop
mov
xchg
lds
jns
xchg
mov
sub
lahf
in
pop
push
mov
add
or
adc
mov
mov
movsl
das
sub
stos
dec
movl
push
negl
dec
push
repnz
ja
mov
ds
es
mov
sti
out
cvtpi2ps
addr16
test
xchg
mov
int
mov
pop
xchg
xchg
or
mov
test
add
ror
push
ds
out
je
and
int3
int3
insb
stc
and
jno
mov
popa
xor
xchg
outsb
add
sub
mov
mov
push
dec
sbb
mov
mov
mov
sub
sub
pop
mov
xchg
call
jle
and
mov
stc
fwait
mov
push
xor
jmp
adc
outsl
add
sub
xor
ljmp
scas
outsb
lcall
stos
ja
fs
dec
sahf
pop
mov
push
or
bound
cli
mov
pop
test
add
cmpsb
sbb
imul
add
in
add
popa
and
sbb
fwait
mov
testb
scas
xor
test
popa
ret
jmp
andps
nop
stc
adc
or
xor
mov
push
or
adc
and
or
push
fnstenv
outsb
add
test
mov
push
adc
pop
pop
xchg
dec
and
movsl
and
pop
aad
outsb
inc
add
xchg
cmp
jae
in
scas
mov
push
pop
mov
push
pop
mov
imul
dec
lcall
adc
inc
call
out
jbe
repnz
add
out
jo
jnp
or
cmpsb
or
mov
jns
and
or
fcom
in
fneni(8087
dec
cmp
aam
push
rcrl
mov
jmp
xchg
push
xchg
mov
add
jno
ss
or
add
jge
jnp
shll
mov
out
dec
add
popf
rorl
push
xchg
jns
shr
push
mov
testb
lods
das
insb
loop
mov
and
mov
sub
cmpl
or
cli
cmc
adc
sub
adc
dec
inc
das
lret
test
jae
and
sbb
pusha
lock
adcb
test
jne
sub
roll
arpl
ss
or
xorl
sub
sbb
das
push
push
mov
mov
xchg
ljmp
adcb
mov
loopne
shll
imul
mov
pop
dec
shr
add
jae
jns
ds
jge
sbbb
sbb
imulb
jo
mov
jge
test
ror
sbb
out
mov
pop
test
push
add
jnp
sahf
adc
jecxz
or
cwtl
jo
outsl
adc
jle
mov
cmp
inc
ret
push
adc
fstpl
cmpsl
mov
push
mov
fidivrl
ljmp
sbb
ljmp
xchg
mov
adc
push
add
sub
push
sub
adc
jno
cmc
in
jae
jo
or
jne
dec
xor
shlb
add
mov
xor
movsb
pop
cmovnp
inc
cmc
enter
dec
xchg
mov
stc
adc
das
inc
jb
dec
dec
add
mov
xchg
jno
cmc
pop
mull
imul
repz
pushf
sub
int
aam
push
or
bound
xchg
xchg
pop
mov
mov
pop
outsl
mov
loop
dec
dec
pushf
xchg
sub
push
xchg
call
cmp
jg
lahf
out
push
loopne
pop
testl
sub
sub
mov
xor
fwait
jle
xchg
jo
stc
push
push
inc
fildl
mov
cli
inc
arpl
push
add
cltd
cltd
mov
loope
push
pusha
jb
hlt
adc
fdivl
mov
sub
push
and
jo
fidivs
mov
adc
sub
cmp
outsl
enter
daa
out
test
inc
pop
jmp
add
xor
cltd
cmpsl
rclb
iret
adcl
repnz
popf
sub
ret
sub
jnp
jo
cltd
add
imul
loopne
xchg
xor
add
add
pop
push
mov
sti
fdivs
add
scas
and
cmp
add
sbb
out
add
jne
sub
mov
adc
cli
inc
mov
pop
out
das
xchg
xlat
jnp
pop
sbb
jns
testb
push
fs
add
nop
in
inc
mov
js
add
jo
aad
div
xor
movsl
pop
mov
add
inc
sahf
inc
nop
icebp
das
sbb
cmp
cli
add
imulb
sbb
fstpt
bound
pop
pop
mov
out
std
xchg
mov
add
mov
cmpl
mov
add
movsl
rcll
inc
cltd
pop
into
pop
cmp
xor
out
clc
pop
mov
and
adc
pop
hlt
inc
int
inc
inc
mov
aas
dec
mov
dec
mov
lret
and
or
loopne
out
stos
aam
ja
pusha
out
loopne
push
int
and
sti
or
ljmp
dec
dec
sahf
mov
pop
adc
add
xchg
jge
jle,pt
xchg
or
push
push
addr16
jb
sbb
pop
shr
mov
iret
push
mov
add
jo
lret
popa
imul
push
jne
or
pushf
dec
xor
pop
mov
out
es
push
clc
sub
loop
aam
mov
cmp
jl
dec
adc
push
in
mov
push
nop
pop
cld
adc
dec
insl
and
popa
pusha
mov
sub
mov
or
aaa
dec
pmullw
mov
cmp
xor
mov
test
jns
and
in
or
adc
sbb
sub
or
xor
xchg
repnz
popf
sub
mul
xchg
mov
mov
aad
scas
mov
es
lock
pop
fisttpl
sqrtps
out
pop
or
and
push
clc
loopne
mov
sahf
and
fimuls
es
xor
adc
dec
sti
test
pop
test
ja
stos
pusha
out
loopne
cmc
jmp
inc
outsb
in
test
mov
ret
mov
fld
sub
push
call
mov
cmpsb
in
aas
add
push
inc
sbb
pop
mov
dec
and
fwait
xor
in
pop
popf
out
mov
lods
mov
cli
scas
xor
mov
push
pop
sbb
shr
rorl
jo
jb
sub
sub
loop
xor
adc
cmpl
cmp
lods
fs
add
enter
std
inc
or
sbb
jae
js
cvtps2pd
sbb
test
les
sbb
test
cmp
xchg
inc
xor
out
idivb
add
adc
add
subb
test
pop
xchg
out
mov
mov
add
dec
xchg
pushf
push
es
sub
or
mov
mov
mov
aad
imul
aas
call
push
mov
add
mov
xor
mov
movl
jo
shlb
push
mov
shlb
jae
jo
sbb
lods
sub
popf
imul
add
mov
sbb
mov
in
inc
loopne
add
stc
lock
mov
mov
mov
mov
cmp
mov
ficompl
cmpsl
push
inc
pop
lret
mov
dec
psubd
popf
roll
push
jns
shrb
pop
inc
and
inc
or
mov
dec
jbe
hlt
or
push
outsb
adc
lods
sti
imulb
popa
mov
test
mov
jno
cmp
mov
rcll
cmc
mov
arpl
xlat
add
mov
rcrl
push
std
pop
popa
mov
loope
enter
sub
repz
sbb
mov
lods
inc
pop
test
or
pop
addl
aas
mov
adc
pushf
nop
adc
jle
nop
test
movsl
hlt
or
xchg
stos
push
js
inc
push
inc
idivb
call
test
mov
sub
mov
add
jle
fdiv
push
sub
nop
or
movsb
mov
ja
bound
test
call
mov
fdivrl
xchg
xchg
insl
jne
inc
add
dec
add
sbb
push
mov
adc
add
out
fmul
mov
loope
repnz
mov
xchg
dec
xchg
inc
cmp
and
mov
add
push
adc
das
xor
add
dec
push
cmp
sbb
pop
sahf
repnz
sbb
xor
call
xor
daa
or
in
xor
movsl
pop
adc
or
dec
push
inc
jo
pop
call
fwait
and
sub
cmpl
iret
divb
add
push
add
leave
mov
cmp
mov
nop
fsubs
pop
adc
popf
jge
adc
push
mov
xchg
cwtl
mov
pushf
and
mov
add
xchg
xor
sar
jns
mov
add
mov
std
or
shrb
dec
or
call
xor
jo
inc
sub
mov
mov
jns
cli
test
addl
and
mov
dec
test
test
mov
pop
lods
inc
lahf
sub
jns
mov
outsl
inc
mov
push
mov
add
test
dec
movsb
mov
mov
mov
mov
add
mov
or
xlat
push
clc
daa
outsb
sub
in
and
pop
in
inc
fldenv
aaa
popl
jne
cmp
mov
lock
inc
cmpsb
in
add
ret
inc
insl
mov
xchg
push
push
fldenv
mov
sarl
icebp
cld
add
and
pop
push
inc
sub
jp
int3
sbb
dec
out
xchg
mov
mov
lret
mov
adc
test
fmuls
fsts
icebp
or
or
out
xor
insl
jnp
and
mov
add
mov
jnp
jo
mov
out
dec
lahf
inc
xchg
jno
add
movsl
adc
lret
jg
shrb
pusha
dec
daa
push
dec
jp
ds
add
mov
add
push
sub
pop
or
ljmp
aaa
push
add
xor
xchg
mov
mov
xlat
or
pop
roll
popa
cwtl
mov
icebp
cli
cmpl
xor
lods
mov
gs
sbb
and
loopne
mov
cmc
mov
xchg
test
jne
cmp
inc
sub
inc
and
rclb
add
fildll
adc
sbb
outsb
addl
jp
daa
xchg
leave
xchg
xchg
lock
cmpsl
mov
ret
repnz
ds
add
or
cmpsb
xchg
or
jo
adc
sub
sub
test
mov
sbb
lret
fldl
pushf
test
pop
xor
sub
or
pop
das
test
pop
lcall
incb
jle
mov
add
xchg
adc
leave
ss
sbb
dec
or
sarl
xchg
pop
movsb
jmp
jne
std
adc
int3
push
insl
xchg
mov
out
xor
mov
mov
jne
mov
jecxz
mov
ja
mov
mov
add
pusha
es
outsl
mov
add
sub
mov
dec
imul
add
cmpsl
cmp
push
fmuls
popa
add
xor
mov
cli
in
dec
sub
pop
in
pop
inc
cmp
dec
out
outsl
push
jae
xchg
popf
add
mov
cmpsl
fdivr
scas
les
ja
dec
flds
add
dec
call
nop
mov
fdivrp
and
add
loop
sub
ror
adc
push
test
cmp
mov
push
aaa
pop
or
loopne
mov
pop
and
mov
rclb
cld
cmp
out
lock
add
popa
repnz
mov
mov
mulb
pop
pushf
inc
push
inc
push
dec
stos
movzbl
popa
sub
lock
push
mov
stos
xchg
cmp
ds
xchg
pop
out
mov
test
sub
mov
add
add
jb
ret
lods
dec
nop
lods
inc
add
push
add
aaa
or
je
jecxz
inc
ja
pop
call
cmp
cltd
mov
lret
daa
aaa
jge
mov
in
fisubrl
add
add
es
popf
sbb
or
cmp
jle
and
dec
xchg
insl
int
mov
cmp
sbb
insb
rolb
ss
lock
push
mov
pop
lret
or
scas
js
pop
push
cs
mov
adc
cmpsb
je
add
sbb
sbb
sub
add
inc
dec
jne
adcl
mov
or
cs
icebp
or
cmp
adc
add
insb
jns
add
pop
popa
cmpl
imul
xchg
popf
and
and
cmp
pop
sbbl
and
mov
adc
mov
cmp
and
inc
inc
cmp
and
jle
loope
dec
dec
movsl
jmp
and
mov
add
pusha
add
sbb
aam
fildl
or
js
xlat
xchg
loop
fisubl
pusha
cmp
fwait
pop
je
push
mov
adc
cmp
movsl
fisubs
lock
aas
xchg
nop
and
or
jmp
cld
add
mov
mov
mov
add
icebp
sub
jo
push
mov
jno
mov
or
dec
xchg
push
je
and
sub
call
je
inc
jae
sub
insl
dec
movsl
pop
jb
sbb
mov
add
mov
sarb
nop
ljmp
push
movsl
mov
or
out
push
jo
subps
xchg
and
lea
push
sub
add
mov
mov
lods
mov
inc
lea
mov
mov
pop
aad
clc
pop
pop
adc
lea
ffreep
cmp
or
ret
add
nop
xlat
mov
add
cmpsb
lcall
pop
daa
jmp
mov
push
or
mov
dec
rorb
and
dec
stos
movsl
sbb
mov
pop
mov
xor
mov
push
add
fsubrl
aam
xor
add
mov
xor
or
cld
xchg
push
inc
cmp
mov
pop
xchg
push
pop
mull
adc
dec
mov
aam
loope
mov
out
inc
add
rolb
hlt
outsb
outsb
adc
push
mov
stc
inc
inc
or
loopne
mov
and
les
lahf
adc
fiadds
scas
nop
mov
ret
cli
sub
mov
cmpsl
cmp
lods
adc
nop
jl
popf
or
imul
xchg
push
mov
inc
sbb
sarl
push
rcrb
pop
xor
movsb
jo,pn
jle
loopne
add
cmp
and
lock
movzwl
mov
jns
mov
pop
xor
call
add
test
inc
cmpl
test
loopne
les
pop
ja
dec
mov
out
xor
cmpsl
or
jne
mov
test
adc
lock
arpl
sti
out
and
pop
in
inc
mov
out
xor
push
pop
and
add
cmp
adc
xor
and
xorl
xchg
dec
jmp
dec
ret
mov
sbb
xchg
mov
insl
sbb
shr
xor
cmpsb
add
mov
inc
rcrb
xchg
pop
in
addr16
mov
push
sahf
pop
cltd
pop
mov
push
shll
leave
mov
cs
movsb
shll
cmpsl
pusha
in
dec
adc
test
inc
adc
stos
inc
pop
mov
push
pop
ja
imul
and
sub
idivl
mov
das
cltd
adc
mulb
outsb
xchg
testb
lods
insl
inc
repnz
jnp
mov
pushf
xchg
sub
test
movsb
push
adc
loopne
out
pop
jle
test
or
inc
cvtpi2ps
stos
dec
out
subb
cmp
jp
roll
hlt
fsts
roll
xor
sub
setle
inc
shll
push
out
mov
jmp
dec
jle
add
bound
fildl
jo
out
add
in
mov
daa
ja
call
mov
mov
cmp
adc
add
mov
mov
nop
imul
in
fcoml
and
lcall
and
aaa
push
xchg
xchg
mov
cli
mov
fiadds
push
jnp
scas
stos
pop
pop
pop
dec
inc
inc
pop
inc
call
insl
push
jno
xchg
repz
cmpl
lods
lea
and
leave
inc
sub
jns
nop
mov
pop
xor
andl
cmp
add
add
push
jne
push
lret
test
pop
dec
lods
leave
popf
mov
add
fdivs
int
lods
sub
or
popa
or
vpsrlw
test
mov
adcl
inc
mov
xor
das
jmp
pop
add
mov
xor
jmp
cmp
or
or
addr16
xor
shr
cmc
pushf
push
add
dec
mov
pop
dec
repz
outsb
ss
mov
push
lcall
adc
push
sbb
daa
rclb
fnstsw
and
add
outsb
xchg
add
or
xorb
jmp
jne
insb
jno
pop
ljmp
mov
mov
mov
mov
dec
or
sub
insl
xchg
test
cwtl
lret
stc
dec
sub
and
or
syscall
movl
and
xchg
sbb
push
mov
sbb
or
cmc
xchg
sbbb
and
jno
mulb
mov
dec
dec
adc
xchg
xchg
fldt
xchg
loopne
pop
bound
pushl
mov
lea
push
shlb
dec
clc
stos
jo
mov
scas
xor
sbb
add
mov
cld
lods
mov
les
cli
jns
scas
mov
enter
aad
mov
dec
bswap
stc
mov
ret
outsb
mov
leave
outsl
cmp
inc
stos
xor
shl
sub
subl
add
loopne
stos
lea
loope
addr16
sti
js
popf
test
js
rcl
mov
pop
aaa
push
mov
mov
cmpb
xchg
cmp
add
flds
mov
sub
fistpll
cld
ds
adc
dec
iret
sbb
lods
mov
cmpsl
outsb
ss
adc
sub
mov
jg
push
dec
ret
jbe
fimuls
fcoml
cmp
hlt
out
xchg
push
push
lods
stos
scas
aaa
mov
in
adc
pop
xchg
cwtl
adc
out
dec
and
xlat
cmp
pusha
xor
test
loop,pn
sub
popa
pusha
add
pop
into
jbe
imul
loopne
push
mov
pop
cltd
test
and
mov
add
dec
mov
inc
mov
cs
mov
mov
xor
aaa
mov
pop
inc
jle
es
jbe
dec
sub
popaw
dec
ficoml
jmp
sub
nop
xchg
sub
mov
add
jo
or
popf
fldl
mov
pop
lret
movups
or
clc
test
fcmovnb
and
dec
mov
test
dec
xchg
mov
subb
jmp
xchg
push
loop
testb
inc
fcmovnu
mov
push
test
xchg
lock
or
mov
fsub
dec
nop
icebp
mov
add
mov
push
icebp
dec
xchg
add
sub
pushf
loope
shrl
lret
lock
or
jecxz
mov
pop
add
xor
in
fcoml
movsl
mov
les
lret
daa
cld
adc
mov
mov
lsl
int
daa
cmp
cld
xorb
pop
pushf
mov
enter
adc
push
repnz
in
push
lds
add
ret
push
push
dec
inc
jecxz
inc
or
and
sbb
pusha
cmp
lods
fwait
jb
add
cld
popa
das
xor
std
sahf
or
or
or
jns
jle
mov
iret
add
add
dec
jge
jg
inc
pop
out
lds
pop
movsl
cmpb
add
aam
xor
push
pop
popa
movsb
mov
inc
pop
mov
adc
and
hlt
dec
mov
loop
stos
dec
loope
test
into
or
push
add
mov
fwait
pop
sahf
adc
jmp
xor
aad
mov
in
daa
pop
aaa
jle
push
mov
adcb
jns
mov
xor
popl
lret
push
mov
mov
movsl
ret
adc
push
or
pop
or
ret
add
or
stc
push
pusha
adc
mov
ds
add
cwtl
lods
jl
mov
clc
xchg
xor
imul
daa
es
sbb
sub
sbb
sbb
in
je
cmc
dec
lcall
push
push
or
mov
ret
push
mov
mov
mov
cltd
sub
enter
subb
hlt
add
lea
inc
adc
mov
sub
lods
mov
cmp
mov
mov
js
push
add
pop
test
mov
and
fs
mov
repz
xchg
adc
xchg
aad
rcll
out
pusha
sbb
and
dec
sbb
imul
mov
and
jmp
les
or
aaa
testl
and
pusha
scas
ret
dec
out
outsl
and
fsubrs
popa
mov
into
add
aas
or
mov
les
mov
leave
jnp
pop
xor
or
xchg
adc
dec
add
or
std
ja
jo
divb
add
stos
mov
and
xchg
or
pop
dec
jo
jb
sti
fisttps
cld
mov
loopne
loope
add
add
cmc
lods
addr16
subb
and
mov
dec
iret
fcoms
lea
xor
aas
add
mov
popa
pop
lds
xor
cmp
mov
popf
mov
sbb
jns
adc
sbb
mov
mov
add
push
dec
in
push
int3
andb
mov
rolb
lcall
in
in
sti
inc
push
fists
pop
or
inc
or
mov
cmp
ret
sbb
mov
adc
ljmp
orb
stc
mov
mov
ja
mov
jmp
pop
adcb
clc
pop
jge
dec
adc
std
mov
push
add
pop
dec
hlt
add
enter
push
push
pusha
fwait
mov
fistl
insb
pop
enter
mov
mov
sub
jb
or
pusha
int3
roll
and
add
rolb
je
and
addr16
pusha
push
add
add
dec
xchg
and
leave
bound
add
xor
testl
push
jge
mov
jne
xchg
xchg
nop
scas
jnp
js
lds
push
push
adc
mov
pop
adc
dec
mov
addr16
and
pop
xchg
add
sub
sbb
or
test
pop
cli
pop
and
adc
int3
pop
mov
rolb
xchg
mov
push
repnz
and
add
hlt
in
shlb
or
pop
pop
push
jno
scas
insl
aas
shrb
mov
or
stc
loop
dec
outsl
add
xchg
popf
fwait
sub
push
pop
out
mov
xor
pop
js
jmp
ficompl
loop
aad
lods
stos
movsl
fs
arpl
xchg
adc
xchg
fldl
xor
add
lret
mov
cld
cltd
hlt
imul
movsb
add
mov
and
addb
push
icebp
adcl
push
cmp
xor
add
repz
sbb
dec
mov
imul
and
sbb
and
push
popa
add
mov
sub
out
fwait
pop
mulb
pop
add
dec
pop
or
popl
jb
ret
rcrl
mov
addb
mov
inc
fmull
cltd
cmp
or
nop
cmp
sub
testl
into
jge
lods
lret
mov
add
mov
repnz
lea
imul
jge
or
mov
push
lods
outsb
cmpb
xor
out
sub
xchg
jne
sbb
loopne
jmp
test
dec
push
xor
xor
stos
adc
pop
pusha
int3
and
jecxz
push
jo
out
pop
push
or
lea
std
jp
dec
or
cwtl
inc
or
add
popf
adc
sbb
test
es
cmp
and
add
push
inc
fs
mov
pop
xchg
pop
js
cmp
test
push
cmc
imul
stos
ss
imul
inc
xchg
pop
in
xchg
mov
xchg
nop
pop
dec
shrb
rcrl
mov
js
gs
daa
cld
out
stc
testl
add
bound
cmovg
out
paddsb
xchg
fwait
or
pop
ljmp
mov
adcl
adc
add
xor
mov
imul
std
in
loope
add
subb
outsl
adc
lret
mov
dec
push
into
mov
pop
hlt
xor
mov
pop
or
mov
mov
mov
adc
or
jns
mov
add
adc
aad
testb
push
movsl
aad
dec
mov
fadd
xchg
mov
ret
mov
pushf
dec
out
jecxz
mov
mov
data16
lods
adc
fwait
dec
lret
xor
inc
adc
adc
mov
jecxz
cmpb
add
cli
sbb
lret
loop
xchg
cmc
je
or
push
dec
mov
test
pop
mov
lret
cmp
xchg
addb
test
pop
or
and
mov
out
loopne
cmp
int3
mov
fs
fdivl
mov
inc
add
das
push
into
sub
add
xchg
movsl
jae
mov
mov
iret
inc
jecxz
mov
jg,pn
and
add
pop
fs
adc
jp
cli
push
sub
sbb
push
inc
dec
orl
fistpll
repz
pop
lcall
mov
imul
mov
insl
pusha
int3
xor
add
and
mov
outsl
repnz
mov
cwtl
jmp
inc
hlt
push
xchg
add
aaa
push
and
xchg
sbb
or
sub
sub
dec
add
rclb
jecxz
and
fisubl
or
lods
or
clc
nop
dec
push
call
pop
pop
add
xchg
adc
ljmp
push
pop
out
sbb
push
dec
dec
sahf
lcall
std
cwtl
pop
int3
cmp
and
repz
lds
fucomi
in
or
mov
cld
movsl
mov
xor
jae
xchg
push
daa
call
jae
jo
xchg
pop
adc
mov
cld
cmp
cmp
and
push
cmp
andb
dec
sub
ss
add
push
and
mov
mov
in
pop
aam
jae
and
imul
xchg
sub
cmp
inc
push
pop
sub
inc
push
pop
xchg
repnz
ja
jae
pop
movsl
pop
sbb
ja
sbb
xchg
add
push
and
mov
ret
clc
iret
xor
outsl
xchg
adc
xchg
in
shrb
movb
ficoml
jmp
repnz
lret
es
hlt
cmp
jg
es
push
add
mov
xchg
scas
push
nop
mov
les
pop
add
inc
cmpsl
lods
push
mov
pop
push
xchg
mov
sub
nop
cmpsb
es
fsubl
xchg
jge
adc
adc
mov
js
add
xchg
mov
push
xchg
das
sub
das
lcall
xlat
sub
pop
dec
push
dec
mov
or
push
pop
or
jns
test
and
xchg
dec
xchg
jns
mov
mov
pop
sub
std
and
cmc
mov
sbb
pop
mov
push
cli
daa
psllq
mov
stc
out
les
and
and
xchg
in
add
pusha
loop
sub
pop
pop
and
xor
imul
popf
add
shl
push
mov
or
cmpsb
dec
pop
ficoms
ds
and
add
mov
pop
sub
mov
and
jns,pt
mov
sti
pushf
xor
jg
inc
or
add
sbb
pop
push
pop
pusha
adc
mov
xchg
xor
andb
or
dec
fcompl
add
jmp
movb
jb
push
pop
mov
jge
mov
icebp
inc
add
mov
mov
jl
enter
repnz
adc
clc
andl
mov
or
jecxz
lds
sub
jns
lock
icebp
jo
dec
ja
sbb
mov
jnp
in
outsb
sbb
push
dec
cmpsb
mov
fnstsw
daa
addl
daa
jnp
fld
adc
pop
negl
mov
xchg
rol
ret
cmp
xchg
sahf
pop
add
pusha
dec
jl
leave
and
xchg
cli
add
test
movsl
or
jo
pusha
mov
mov
popa
fldenv
lock
scas
fdivl
sub
xor
xchg
repz
sahf
sahf
int
xchg
xchg
loopne
in
mov
cmp
jmp
fwait
daa
call
push
sbb
add
adc
or
ja
js
cwtl
adc
movsl
jo
xor
loop
lods
jl
add
das
data16
shl
inc
jns
inc
cwtl
adc
jmp
mov
aad
das
out
jae
add
fwait
loopne
fnstcw
lahf
add
imul
push
mov
ud2
out
pop
or
inc
dec
push
daa
aam
fiadds
cmp
das
xlat
rcll
cmp
lret
into
push
popa
inc
or
outsb
mov
das
adc
sbb
jne
jae
out
movsl
fs
sbbb
dec
and
xchg
sub
or
cmpl
and
mov
xchg
adc
daa
sub
jbe
jecxz
pop
adc
xor
dec
stos
sbb
mov
fisubl
xchg
jecxz
push
dec
pusha
mov
dec
test
movsb
pop
inc
cli
dec
jp
daa
mov
nop
cmpsb
test
push
andb
add
pusha
dec
mov
push
cmp
into
push
and
push
xor
cmp
jg
add
xchg
dec
pop
rorl
notl
add
stc
sub
frstor
xor
ss
sbb
adc
inc
or
xchg
cmp
inc
lods
insl
lds
xor
arpl
popf
std
xchg
imul
sub
mov
lock
and
mov
das
rcr
adc
xor
adc
mov
aaa
sbbb
mov
add
dec
sub
je
lea
testb
leave
addl
inc
sbb
mov
out
jnp
add
push
imul
testb
addb
mov
psubq
fidivrs
adc
jo
mov
cmp
xchg
mov
daa
sahf
cmovp
popa
out
xchg
push
adc
sbb
and
push
roll
jge
aad
add
mov
mov
pop
rorb
imul
sub
mov
nop
push
pop
jge
or
add
and
cmpsb
mov
fsubrl
cmp
sub
mov
jb
add
pop
nop
add
push
and
inc
adc
test
mov
xchg
dec
iret
movsl
add
and
nop
push
adc
popa
decb
repnz
pop
cmp
lea
adc
jnp
pop
cmpsl
xchg
fcoms
adc
or
add
adc
xchg
cmp
rcr
add
dec
pushf
testb
fiaddl
xchg
mov
ds
pop
pop
jns
frstor
pop
adc
mov
cmp
sub
inc
cmp
mov
stos
outsb
ret
add
imul
mov
mov
push
xor
xchg
test
add
sub
jecxz
in
sub
sbb
mov
mov
xchg
outsb
mov
das
dec
or
imul
out
decl
add
or
fbstp
es
call
loope
mov
orb
inc
dec
ret
push
cmp
adc
stos
push
mov
nop
and
cmp
add
push
sub
inc
fcompl
lcall
jo
jbe
bound
movsl
dec
mov
das
jae
movsl
push
nop
push
xchg
jnp
cs
mov
mov
mov
aaa
daa
sub
jle
hlt
adc
inc
icebp
mov
or
jecxz
js
lahf
in
mov
jbe
pop
xor
add
dec
xchg
inc
adc
jns
sti
ja
sbbb
mov
sbb
repnz
test
test
stos
push
loop
enter
or
mov
adc
movsl
out
mov
je
outsl
mov
stos
mov
scas
push
mov
lock
mov
mov
mov
dec
arpl
int
in
push
inc
sub
or
dec
jmp
repz
sbb
jl
dec
push
arpl
stos
imul
sbb
push
push
rorb
xor
mov
lcall
mov
push
xchg
repnz
pusha
mov
test
gs
xchg
add
test
xchg
jbe
fcompl
xchg
dec
and
sbb
aad
sub
fildll
mov
mov
cltd
mov
dec
sbb
xchg
inc
out
adc
ficoms
adc
and
inc
add
jnp
out
adc
inc
mov
mov
mov
sub
mov
mov
call
and
jno
pop
mov
mov
pop
imulb
stc
in
int3
adcb
and
sti
lods
push
add
pushf
inc
ljmp
fldenv
add
jbe
xchg
fbld
call
jno
pop
dec
xchg
push
pop
or
pop
jmp
adc
int
sbb
test
pop
mov
pop
inc
lret
or
push
dec
mov
mov
sbbl
sub
sub
jge
sub
cli
pop
lods
mov
mov
mov
xchg
mov
add
sub
mov
xor
lea
and
inc
lods
pop
and
lahf
lret
movsl
add
mov
das
add
dec
push
or
daa
add
dec
out
pop
nop
inc
cmp
add
outsl
movntq
outsb
rcll
jge
cwtl
aam
scas
dec
jbe
xor
inc
and
add
sbb
xor
add
pop
lcall
sub
pop
xor
dec
mov
jae
insl
jle
adc
out
sahf
pop
lretw
in
dec
pop
fisubl
or
insl
push
xor
sarb
add
add
repnz
mov
push
or
stos
jbe
dec
pusha
rcrb
mov
mov
ljmp
shl
jmp
rclb
scas
pop
sbb
les
sub
mov
sbb
and
adc
and
jno
test
fadds
leave
dec
pop
movsl
test
sbb
jo
ss
arpl
das
sahf
jbe,pt
in
pop
add
jns
or
sub
sub
setle
xor
cmp
inc
cmpsb
push
sahf
insb
rorb
fs
xlat
fimull
ret
es
ds
shl
adc
aam
mov
scas
adc
sub
out
add
push
xchg
xor
push
add
mov
in
lods
pop
sbb
add
mov
add
bound
mov
stos
mov
stc
inc
mov
xor
pusha
leave
dec
rorl
mov
fxch
push
cld
enter
lock
rcll
mov
and
add
cmp
pop
mov
push
testl
push
scas
inc
scas
scas
loop
jae
jmp
int3
mov
inc
bound
je
or
lods
or
and
and
mov
dec
nop
pop
stos
aas
push
rcrb
inc
test
pop
add
add
push
and
adc
mov
cmp
adc
adc
sbb
lds
and
in
pop
out
rol
jmp
cmp
inc
dec
mov
rol
add
testl
xor
int
sbb
xlat
sbb
add
mov
pushf
mov
insl
leave
mull
testb
ds
jp
add
scas
shr
in
pusha
mov
dec
imul
mov
pcmpeqb
or
xor
add
imul
xchg
dec
sub
add
ret
cs
add
pop
dec
mov
sub
pop
dec
repz
push
loop
push
xor
and
cmp
roll
jbe
mov
jecxz
shl
mov
out
xchg
cmpsb
push
stc
inc
mov
push
sbb
rcll
xchg
les
out
cmp
mov
mov
dec
push
icebp
push
mov
cmp
mov
adc
sbb
and
inc
pop
pop
std
mov
jbe
sbb
lcall
int3
filds
ds
addb
in
fsubrl
es
xchg
and
mov
push
dec
cmp
cmp
popf
add
dec
test
aas
int3
jo
add
cwtl
int
cli
or
add
mov
push
test
fiadds
dec
xlat
sub
jb
in
mov
sbb
sti
adc
add
lock
dec
pop
shrb
xchg
add
mov
xor
xchg
xchg
movsb
arpl
sbb
cmp
jae
push
lea
jle
cmp
imul
or
repnz
out
cld
dec
mov
sbb
dec
mov
push
std
cmp
sti
pop
test
adc
xchg
add
inc
scas
add
dec
jne
jmp
or
mov
fistl
les
xchg
mov
aas
dec
cmp
ljmp
xchg
dec
sbb
rcr
jmp
in
jl
add
andb
push
xchg
lahf
push
add
inc
leave
rcrb
int3
lock
dec
sbbl
add
xchg
popa
xor
jmp
pop
sub
pop
add
mov
and
cmp
out
inc
cs
dec
cmp
pop
stos
notb
jg
adc
add
pop
outsl
push
push
mov
jg
or
dec
jp
out
add
ds
inc
arpl
popa
xchg
outsl
addr16
pop
add
out
lea
mov
or
jg
orb
nop
test
fidivs
or
xor
cmp
cmpl
daa
adc
push
xchg
mov
scas
xchg
sarb
imul
gs
incb
pushf
fucomp
addr16
push
lock
std
es
push
decb
add
jmp
add
push
mov
push
rcll
add
jmp
adc
jbe
je
pop
stos
adc
jp
adc
sarb
jnp
in
shlb
pushf
fxch
sbb
das
dec
jae
sub
add
mov
xchg
aam
push
xchg
jmp
shl
mov
add
jb
push
ss
jns
or
jbe
pop
mov
ss
cmp
pop
cltd
mov
and
loopne,pt
xor
mov
mov
scas
xchg
dec
or
adc
rcrb
jb
cmp
rolb
sti
add
xchg
push
clc
fcompl
dec
adc
mov
xorb
adc
xor
testb
pop
int3
xor
add
loopne
rclb
sbb
fadds
adc
cmp
adc
fwait
sub
and
or
rol
nop
fildl
or
mov
pop
into
jo
shll
call
dec
outsb
lahf
sub
addl
aam
and
lock
and
adc
and
loopne
add
add
nop
or
mov
adcb
int
rorb
add
cmp
es
fmuls
cmp
cmp
adc
rcll
fwait
ucomiss
mov
in
adc
fnstcw
mov
inc
add
test
pop
inc
pop
adc
mov
adc
das
xor
loope
push
rorb
pop
and
mov
xor
mov
xor
mov
cltd
movsb
xchg
xor
ss
hlt
loopne
sbb
mov
push
and
and
inc
rol
add
dec
pop
in
mov
sub
add
inc
aad
je
jno
and
mov
jmp
dec
stos
rcr
or
inc
fimull
adc
imul
ljmp
push
clc
dec
arpl
sub
push
in
icebp
inc
dec
cmpsb
repnz
push
jne
mov
inc
add
adc
sub
nop
inc
call
and
add
lret
cmp
int
pop
ja
mov
mov
sbb
jns
lods
fildll
mov
imul
jmp
push
jb
jne
std
pusha
dec
xchg
pop
push
cwtl
mov
loopne
cmovo
int
bound
cmpsl
cmp
lret
add
cmp
aas
or
pop
dec
incb
xor
iret
xchg
pop
pop
loope
mov
sub
rorl
cmp
fmuls
jge
lcall
pop
and
inc
mov
repnz
mov
mov
mov
sbb
sarb
inc
push
mov
cmpsb
out
push
xchg
pop
addl
into
sbb
aas
outsl
and
inc
daa
js
add
shlb
adc
icebp
sub
testb
jmp
sbb
dec
stos
add
mov
add
mull
push
pop
add
push
mov
jne
pop
mov
pop
xchg
or
lock
inc
aam
add
xchg
xorl
das
inc
insl
test
and
outsl
jl
cmc
xor
mov
adc
push
dec
pop
loop
popa
sti
cmp
xchg
add
jnp
mov
xchg
les
mov
cmpsl
lahf
push
inc
arpl
jno
movsl
add
pop
jp
jbe
add
push
das
inc
cld
stc
lea
mov
and
aas
bound
lcall
insb
and
mov
aas
xor
dec
fists
test
mov
and
stc
movsb
inc
popa
add
push
sbb
cmp
inc
in
or
adc
scas
add
push
lods
inc
fistpl
mov
push
sub
pop
or
cmp
adcb
shlb
movsl
nop
pop
add
outsl
lret
dec
add
bound
mov
add
sbb
and
mov
cmp
jl
adc
daa
xor
in
add
jae
js
ret
jnp
add
scas
icebp
cmp
enter
add
mov
sub
push
xor
jl
xchg
insb
add
jb
arpl
insl
lds
xchg
sarb
scas
cmp
loope
mov
xor
cs
lret
xchg
cld
scas
out
and
push
sbb
mov
pop
push
and
dec
sbb
lock
inc
or
pop
mov
ror
cli
aam
or
pop
pushl
pop
push
aas
aas
rclb
add
es
decl
idivb
into
add
sub
cmp
inc
or
pop
jae
mov
add
cmp
cld
push
verw
jo
aam
into
sub
pop
inc
or
push
add
inc
push
into
or
inc
ja
outsb
xchg
sar
xor
imul
je
hlt
pusha
das
cmp
vmwrite
mov
jmp
add
and
in
cld
dec
mov
add
bound
cltd
dec
movsb
add
push
jns
inc
test
pop
jne
or
mov
pop
pop
inc
shrb
clc
addb
xlat
push
mov
pop
pop
mov
push
add
inc
dec
xor
mov
sar
jecxz
pushl
dec
adc
test
pop
das
pop
sub
popf
add
mov
std
movsb
movsl
push
fistpl
fs
xchg
popf
add
cmpsb
lock
mov
mov
sub
fnstsw
in
cld
fcoms
cld
push
mov
mov
jecxz
js
add
jl
insb
sarl
lahf
lret
sbb
mov
mov
loopne
xchg
iret
and
sbb
loope
mov
cmovae
pop
cld
repz
jl
xchg
sti
loopne
push
inc
add
mov
or
das
pusha
mov
rclb
lahf
or
popf
fst
and
add
test
pop
mov
xlat
push
inc
mulb
push
or
jae
pop
push
xlat
fs
sbb
adcb
adc
cmp
or
xor
ljmp
jbe
or
fnstenv
push
mov
dec
mov
call
and
les
xchg
dec
jnp
inc
lret
in
mov
jecxz
imul
pop
push
add
inc
adc
icebp
les
orb
push
mov
arpl
mov
sbb
lcall
icebp
pop
or
cmp
nop
pop
mov
into
rcrl
dec
icebp
fcmovb
jg
ret
sub
decl
popf
dec
sub
mov
stc
mov
sbb
inc
and
cmovns
adc
pop
inc
faddl
pop
cmp
stos
cs
into
outsb
cmpsb
add
cmp
stos
out
out
inc
add
sbb
cmp
pop
or
nop
orl
xchg
out
inc
call
xchg
sbbl
addr16
jecxz
and
orb
or
jno
pop
stc
inc
jge
mov
test
mov
cmpsl
clc
lods
push
push
mov
cltd
add
mov
add
push
shlb
pop
mov
sub
jae
ficoms
xchg
add
test
enter
xchg
add
repz
push
mov
repz
and
nop
movsl
xor
xor
scas
xor
sbb
leave
aam
adc
adcb
adc
and
fistpll
in
add
xchg
inc
add
mov
pushf
inc
cmc
inc
out
mov
cmpsl
add
jnp
ljmp
imul
and
cwtl
mov
push
das
mov
mov
mov
push
jle
cwtl
push
dec
mov
sub
outsl
mov
ljmp
outsl
lcall
add
loopne
mov
outsl
mov
sub
int
mulb
lea
out
sbbb
jno
pop
xor
in
cmp
pop
adc
insb
or
jae
dec
mov
jne
sub
xor
rcrl
push
ja
add
xor
fists
sbb
mov
loopne
insb
jecxz
dec
adc
inc
out
das
xchg
xor
mov
mov
stos
out
mov
or
xchg
mov
icebp
stc
add
dec
inc
mov
pop
pusha
mov
push
add
sub
andb
popa
or
xor
mov
pop
sahf
les
mov
lret
sarl
fimull
adc
cmp
add
sar
cmp
std
shll
aam
mov
add
fwait
pop
jmp
sub
adc
mov
in
stos
ja
or
add
or
inc
or
outsb
int
inc
sbb
xchg
iret
or
sub
cmpsb
cmp
mov
loope
out
adc
jle
jp
loopne
inc
lds
arpl
dec
jo
adc
dec
iret
nop
push
das
cmp
loop
add
cmp
jmp
in
or
push
or
push
or
or
hlt
std
cld
add
pusha
aaa
out
xlat
pop
out
and
imul
or
xor
in
cmp
adcb
idivb
push
or
fadds
push
or
lock
faddl
add
cld
xor
decb
sbb
ss
stc
mov
jge
mov
insb
dec
xchg
int
inc
filds
lea
popf
insl
or
or
mov
pop
push
mov
or
or
dec
fisttps
pop
rorb
loopne
hlt
adc
nop
push
outsb
mov
jno
data16
dec
add
sti
mov
push
decb
mov
jno
inc
mov
mov
mov
or
pusha
and
xor
jge
aas
iret
inc
dec
test
movsl
in
push
xor
lret
inc
push
icebp
fcomps
pusha
add
aaa
sub
cmp
scas
fcompl
add
stos
fwait
inc
aas
lcall
mov
sub
xchg
fcmove
subb
ljmp
sub
addl
and
int
stc
xor
lcall
or
push
cmp
dec
ficomps
mov
ds
or
sub
jns
imul
out
sub
andb
repz
test
mov
arpl
leave
dec
loope
adc
or
mov
mov
gs
mov
pop
mov
pop
es
jecxz
dec
out
mov
xor
adc
pop
or
push
push
incl
das
faddp
push
add
out
inc
mov
aas
outsb
add
loop
pop
push
hlt
mov
xchg
jecxz
pop
cmpsl
dec
cmp
scas
cmp
mov
jmp
imul
add
or
mov
mov
adc
mov
push
fdiv
xor
rcrb
jo
mov
add
xchg
sbbb
out
push
jp
and
insb
mov
lods
jnp
pop
pop
cli
dec
xor
jmp
je
jp
sbb
pop
cmp
adc
jo
lret
lds
in
add
xor
pop
dec
loop
sub
pop
addr16
rcrl
pop
jbe
push
ficompl
adc
xor
int
add
pop
les
xchg
sub
andb
int
fldl
mov
lds
outsb
ljmp
push
adc
xchg
mov
adc
mov
jge
mov
add
popf
dec
fildl
mov
rol
mov
insb
mov
sub
mov
mov
sti
pop
cmp
stc
sbb
dec
stos
sahf
lock
stc
xchg
je
fcomps
mov
fs
and
test
adc
pop
push
sbb
push
jne
dec
popa
repnz
faddl
dec
cmp
das
sub
cld
das
pop
pop
lds
adc
in
dec
add
or
int
dec
lret
mov
jecxz
pop
mov
nop
pusha
leave
lahf
negb
add
pushf
mov
lock
push
or
push
mov
or
repnz
std
push
js
adc
enter
icebp
jp
mov
das
pop
cmp
xor
sarl
jmp
mov
addb
add
sbb
or
sbb
pushf
fdiv
mov
cmp
sahf
aam
into
cmp
push
jbe
cmpsl
mov
sbbb
push
mov
cmp
incl
push
pop
mov
jae
push
jle
adc
das
inc
cld
cmc
cld
add
imul
ljmp
lret
imul
clc
add
jecxz
xor
sahf
jae
jmp
add
xor
xchg
or
mov
xchg
jnp
add
and
or
enter
mov
push
aad
nop
jge
out
mov
dec
shlb
bound
inc
in
imul
push
loope
inc
std
loopne
scas
insb
push
daa
mov
fcomps
lock
jbe
and
push
test
jmp
cld
in
pop
inc
push
sub
pushf
loopne
xchg
add
mov
hlt
xlat
aad
call
stos
jne
cmpsb
inc
mov
out
rorl
adcl
stc
aaa
cmp
xor
lahf
push
stos
rorb
test
std
pushf
inc
cmp
rolb
jmp
ss
mov
cwtl
test
out
mov
push
fstl
fildll
add
jge
mov
mov
ss
flds
cmpsl
xchg
mov
or
icebp
out
cmc
and
pop
jmp
or
and
xlat
outsb
fadds
lahf
push
sti
jg
scas
sub
and
mov
mov
jnp
btc
pushf
push
mov
push
and
test
lods
mov
jns
test
xor
mov
mov
repz
cmp
push
or
adc
int
sahf
jnp
or
addl
movd
incb
add
jg
sahf
pop
jle,pt
adc
out
out
and
mov
push
pop
pop
xchg
mov
adc
or
or
adc
hlt
dec
stos
mov
mov
jo
arpl
push
dec
or
les
je
sbb
adc
sub
add
xor
add
data16
dec
or
pop
or
mov
movsl
or
das
bound
leave
mov
adc
jne
and
and
out
aam
mov
stos
inc
push
xchg
stc
pusha
push
mov
test
rcrb
or
or
xchg
aad
rolb
mov
cmp
jmp
and
incb
dec
add
repnz
add
and
adc
std
lahf
mov
cmc
add
jo
and
xchg
sub
add
push
stos
sbb
and
fdivrl
cmp
ss
mov
jne
cwtl
jle
je
mov
sub
insl
repnz
pusha
dec
xchg
dec
dec
test
data16
icebp
xchg
pop
sbb
inc
test
or
adc
fsubrl
jo
movsb
sti
mov
stc
lods
sbb
mov
jp
xchg
ljmp
gs
push
add
inc
in
lret
stos
cmp
mov
xchg
xor
ds
stc
jne
xchg
out
push
mov
fimull
xchg
scas
data16
test
cmp
pushf
sbb
rcll
ljmp
imul
jmp
mov
push
blcfill
xchg
mov
inc
push
lods
jecxz
inc
push
push
cld
fwait
xchg
and
xor
or
inc
mov
pusha
xchg
mov
pop
mov
add
xchg
inc
push
ss
and
sbb
xor
add
and
in
stos
xchg
dec
insl
lea
pusha
jmp
sub
dec
nop
nop
sahf
shll
cwtl
inc
pop
out
push
cli
inc
ds
nop
idiv
loopne
xlat
mov
jo
mov
icebp
pop
add
push
loop
xchg
xchg
add
fwait
cmp
jge
jnp
xor
ja
adc
adcb
bound
lds
xchg
mov
into
pushf
addl
and
fcmovbe
repnz
popa
pop
das
xor
push
andb
add
lds
jno
xchg
push
jle
pusha
mov
xor
shrb
pusha
jo
enter
jae
mov
jo
jae
xchg
mov
outsb
xchg
jle
rcrb
jo
xchg
out
out
add
movsl
sahf
shrb
push
or
mov
xor
pop
push
in
fnstenv
pop
push
push
ret
std
add
loope
ss
sub
inc
test
inc
add
pop
mov
jno
stos
add
add
mov
adc
popa
int3
sbb
or
mov
pop
pop
xchg
fwait
scas
orb
mov
add
loope
cs
xor
push
call
add
lods
add
fdivr
lea
push
and
addr16
mov
nop
and
jnp
jno
ficoms
jns
loopne
sub
sbb
test
and
fs
or
push
pop
dec
add
xor
mov
xor
jne
jge
sub
sub
scas
sti
dec
fsts
sbb
adc
inc
cmp
mov
lods
test
adc
fimull
iret
adc
xchg
shlb
and
dec
inc
popf
xor
jmp
test
mov
push
cld
jmp
dec
test
pop
daa
add
pop
sbb
jb
or
jecxz
out
sti
pop
das
add
sub
xchg
repnz
or
mov
sbb
pop
in
inc
adc
icebp
lods
dec
and
xchg
aaa
pop
mov
jp
push
call
ret
or
cwtl
jmp
adc
fwait
lret
sbb
dec
jno
lret
jg
mov
sbb
pusha
jl
rorl
adc
int3
lods
rclb
nop
and
push
popa
in
xchg
movsl
iret
ret
nop
fs
xchg
add
rclb
mov
jecxz
dec
mov
rorb
mov
add
push
push
mov
daa
inc
or
sbb
or
jnp
in
pop
inc
adc
inc
pop
stc
inc
cmp
sbb
dec
test
adc
push
scas
enter
nop
dec
int3
jg
imul
add
jmp
fsts
ffree
add
jl
push
or
adc
xchg
data16
and
in
or
adc
rorb
sbb
xchg
clc
jo
adc
movsb
add
inc
testl
orl
push
sbb
xchg
mov
cltd
cmc
push
stos
xchg
cmc
aaa
lods
add
fs
xchg
ficoms
lds
sub
sub
popa
mov
add
xchg
inc
jbe
adc
popf
mov
pop
and
imul
sbb
mov
push
pop
iret
daa
ljmp
shll
sbb
mov
das
cld
inc
jno
adc
movb
addr16
mov
jecxz
adc
ror
in
icebp
dec
or
call
jecxz
or
push
hlt
mov
and
mov
xchg
sbb
jae
stc
icebp
js
daa
mov
jns
pop
sub
loope
adc
xchg
sub
mov
testl
and
in
ja
xchg
jg
iret
mov
sub
mov
jge
sar
sub
inc
arpl
xchg
push
jbe
jle
mov
and
lcall
cmp
dec
inc
cltd
aas
popl
jg
movsb
add
in
push
aas
imul
shrl
in
pop
push
mov
sahf
test
pop
mov
mov
add
xchg
dec
mov
loop
pop
cmp
pop
in
daa
insl
fisttps
mov
lahf
or
or
shl
daa
movsl
inc
fisubl
xlat
mov
insb
and
add
ficoms
enter
mov
dec
dec
nop
mov
mov
cmp
idiv
lods
lcall
xchg
push
test
dec
cwtl
orb
in
mov
mov
inc
lret
jae
sub
fucomip
pop
fwait
dec
xchg
add
lods
jmp
jb
xchg
mov
sub
jo
mov
dec
sbb
movsb
fcomi
mov
add
cmp
and
cmpl
push
mov
push
stos
cltd
xchg
pop
popf
push
sti
inc
xchg
in
call
mov
pop
popl
cmp
pop
int3
ret
xchg
adc
aaa
cmp
test
stc
push
mull
gs
fs
and
push
lcall
push
mov
clc
pop
push
aaa
xchg
add
outsl
mov
and
xlat
sub
addl
mov
or
mov
dec
dec
mov
pop
loope
dec
cmpsl
arpl
push
dec
int
mov
jae
adc
adc
addb
jg
nop
add
or
xorl
sarl
fsubl
or
lods
pop
xchg
es
xlat
xor
cli
int3
add
or
mov
dec
jno
and
sar
rolb
cwtl
mov
jp
gs
cmp
enter
mov
mov
inc
pusha
cmp
mov
pop
lret
test
negb
or
pop
leave
adc
mov
repnz
xchg
or
fs
sbb
xchg
jle
xchg
lds
sub
ret
push
cs
aas
pop
orb
movsl
inc
xorb
roll
jmp
jp
decb
out
fcmovb
movsl
add
sub
sbb
mov
xchg
adc
and
or
and
in
aam
push
pop
roll
adc
scas
mov
adc
mov
jbe
ja
mov
cmp
in
pop
pop
scas
dec
in
xor
push
outsb
adc
rcr
fidivs
mov
xchg
mov
sbb
imul
loop
mov
sub
pop
sub
lahf
cli
mov
outsb
in
fisttpll
movsl
sti
dec
dec
std
lcall
sub
pop
js
xor
push
jecxz
dec
lods
add
repz
dec
rclb
shll
push
aad
sbb
xchg
aaa
pop
xchg
adc
lret
lcall
inc
fimuls
add
js
inc
loopne
psrlw
cmp
nop
mov
scas
dec
pop
sbb
or
jmp
arpl
jmp
je
jl
jnp
dec
pop
mov
sub
add
adc
movsl
add
cmp
mov
in
pop
jecxz
mul
mov
or
std
xor
sub
test
pslld
xorb
push
ret
xchg
hlt
pop
in
pushf
jp
out
fs
mov
cmp
mov
add
repnz
inc
in
nop
mov
cltd
adc
pusha
repnz
mov
stc
out
sbb
lahf
xor
addl
and
dec
pop
mov
jo
xchg
add
or
jl
stc
cmp
sti
pusha
mov
mov
pop
jbe
jb
mov
xchg
and
stc
jp
test
push
and
mov
pop
add
das
not
mov
xor
mov
add
mov
add
dec
xchg
adc
sbb
and
push
std
bound
push
jne
mov
int3
push
add
leave
and
addb
movsb
push
aad
cli
lds
loopne
cmp
stc
cmp
pop
fisubs
or
hlt
mov
loopne
pop
push
push
test
mov
pop
push
mov
add
jo
xchg
jp
icebp
xchg
je
inc
scas
outsl
jnp
and
and
into
xchg
pop
jl
inc
adcb
cwtl
fldl
jecxz
adc
mov
cmp
push
sub
mov
bound
jge
mov
mov
fidivrl
jmp
push
mov
add
js
xchg
push
or
cli
lock
cs
xchg
sbb
sbb
dec
orl
adc
in
mov
fidivrs
and
fsubl
xor
std
add
out
sub
adc
lds
lods
and
rol
inc
out
sub
pop
add
cmp
sub
add
lock
loop
lahf
xadd
add
xchg
sbb
mov
pop
cmp
mov
mov
cmpsb
or
outsl
add
sti
lea
lahf
add
sub
mov
push
pusha
jg
jne
mov
xorb
jne
cmc
jno
mov
and
pop
js
sub
lea
mov
adc
cmpsb
sbb
rcll
cmp
scas
arpl
cmovle
adcl
mov
or
ds
dec
popa
lret
adc
cmp
sbb
add
push
dec
sti
inc
cmc
jmp
sub
sub
pop
dec
or
pop
xchg
or
bound
mov
stos
jl
mov
or
into
jno
xor
jno
adc
clc
adc
jnp
xchg
lahf
dec
shlb
popa
pusha
into
call
test
sub
pop
dec
out
loope
icebp
shrb
mov
in
sub
or
cmp
adc
jne
cs
out
fwait
or
add
loop
add
xchg
call
or
mov
cmpsb
je
ljmp
mov
jle
roll
add
outsl
lds
or
sub
inc
addb
and
daa
push
cmp
cltd
push
mov
mov
jle
imul
scas
aam
cli
jp
add
xchg
mov
xlat
lock
dec
and
into
shlb
test
inc
mov
nop
inc
das
and
xor
mov
fisttpll
data16
xor
or
in
xchg
mov
outsl
std
imul
mov
aam
hlt
sub
pusha
fists
cmp
xchg
frndint
aam
in
mov
aas
lcall
jg
or
fidivl
test
push
push
jp
mov
xor
or
mov
mov
rorl
xor
faddl
nop
cmpsl
mov
sti
or
jmp
ds
cld
dec
stc
int
adc
mov
loopne
sbb
daa
pop
cld
adcb
add
jbe
pop
rclb
scas
cmp
xchg
sbb
test
lea
mov
dec
fisubl
push
int
int
cs
aas
or
push
lret
je
pusha
cmpsb
xchg
sahf
cmp
popf
data16
jns
jecxz
test
sbb
scas
cmp
fwait
das
pop
push
sarb
std
cmpsl
lods
cmp
idiv
mov
aaa
js
jl
stc
and
ret
mov
dec
or
enter
push
jns
mov
push
imul
or
roll
xchg
adc
xor
aaa
xchg
lret
push
sbb
popa
mov
and
pop
stos
adc
adc
popf
or
cmp
pop
das
push
jns
test
inc
inc
pop
sub
decb
xor
push
pusha
aas
mov
test
add
jg
add
push
popa
nop
inc
xchg
popf
dec
or
adc
fdivrs
sahf
sbb
pop
or
int
loop
cld
andb
xchg
sbb
mov
cld
rcll
ss
inc
and
test
inc
push
pusha
cmpsl
adc
fs
es
cmp
aam
cmp
jmp
adc
je
and
push
add
hlt
shll
mov
add
icebp
bound
xor
pop
rsqrtps
xor
inc
movb
enter
adc
test
enter
popa
rcrl
loop
mov
clc
cltd
push
xor
sbb
xor
adc
inc
cmpsl
aad
std
add
movsl
ds
sub
sub
hlt
incb
call
popa
xchg
into
mov
sti
pop
push
add
add
fwait
dec
or
and
sbb
dec
pop
test
jecxz
xchg
sti
mov
add
inc
xor
loop
xchg
sti
repz
sbb
add
outsb
leave
insl
fstpt
mov
cltd
ss
and
inc
pop
cld
push
fwait
test
test
out
jle
add
mov
fisubs
xlat
addr16
or
scas
mov
orb
popa
mov
add
out
xor
inc
mov
or
sarb
dec
add
out
das
jmp
or
or
jns
adc
adc
adc
inc
adcl
mov
sub
or
or
inc
inc
sarl
fisubs
push
mov
cmp
adc
test
in
popa
sub
cmp
outsl
mov
mov
pop
adc
or
dec
and
dec
lods
shrb
out
inc
or
cld
jne
das
ds
ror
pusha
sub
sahf
sub
pop
pusha
xor
xor
sub
out
inc
xchg
dec
xor
lods
jno
adc
add
mov
lods
adc
dec
sahf
mov
or
push
xor
in
inc
dec
sub
inc
sarb
fstpt
jg
test
adc
out
fisubl
jb
sub
pop
cld
fistl
je
sub
and
cmp
adc
jne
icebp
test
call
rcrl
push
jb
int
inc
pusha
insl
int3
sbb
mov
into
push
push
mov
in
leave
dec
enter
push
inc
lcall
push
clc
jge
jne
cmc
xchg
sbb
mov
and
testb
dec
hlt
cli
dec
xor
cltd
add
jl
dec
stc
jno
add
pop
sbb
ljmp
sbb
pop
mov
mov
jge
rorl
stos
lock
into
add
iret
outsl
cs
xor
mov
imul
out
sbb
es
inc
adc
loope
mov
lds
call
pop
fdiv
rolb
imul
push
xchg
xchg
roll
and
mov
dec
cwtl
sbb
bound
push
orl
pop
clc
cld
xchg
or
aaa
call
mov
mov
or
mov
cmp
rcl
cmp
mov
sbb
xor
pop
push
jmp
je
mov
sub
sbb
mov
mov
sbb
fmuls
sarb
push
roll
pop
dec
pop
jp
jge
push
out
mov
pushf
rcll
mov
add
fadds
pop
test
mov
test
add
sub
sub
cmp
cmpl
aas
addl
in
ja
shrb
pusha
frstor
add
cmp
fildl
leave
in
das
and
jmp
xor
imul
dec
loopne
dec
jns
enter
dec
mov
or
nop
lods
rorl
jle
out
rcrl
mov
cltd
mov
and
fsubp
xchg
scas
lea
pusha
aaa
fldcw
test
lret
imul
or
call
dec
jle
imul
xchg
out
cs
loope
jp
jb
mov
jb
test
out
add
pop
pop
dec
pusha
jns
sub
fdivrs
dec
lret
add
jno
xchg
cltd
jae
adc
add
add
out
cmp
jg
lds
dec
dec
dec
sarl
sub
in
pusha
pushf
adc
adc
insb
or
je
adcb
lcall
push
in
imul
add
mov
ds
stos
or
mov
mov
dec
data16
fcmove
popa
or
das
or
pop
lret
mov
loope
scas
outsb
test
pop
xor
cmc
dec
jns
lds
adc
loop
ljmp
pop
add
add
rcr
jns
jp
add
stos
cmp
ss
and
push
es
mov
mov
mov
dec
pop
or
lods
jmp
adc
adc
and
sub
loopne
fidivrs
mov
add
mul
or
and
add
sahf
ss
call
ret
push
cld
fwait
pop
subb
cmpsl
pop
cmp
loop
sarl
in
jbe
push
cmp
jle
fldl
add
inc
inc
mov
mov
sbb
push
imul
clc
pop
xchg
popa
and
sbb
push
ss
call
push
lock
lock
jl
popf
gs
aad
sub
movsl
mov
jl
xchg
mov
cld
bound
rcrb
jbe
stc
inc
add
add
into
jo
out
push
fcoml
inc
test
daa
mov
mov
dec
pop
cmp
adc
out
iret
imul
rolb
mov
sub
inc
paddb
inc
stos
fs
jae
fidivs
dec
cmp
sub
mov
mov
out
jge
mov
daa
jb
dec
popa
stc
out
call
incl
pop
mov
adc
pop
lcall
outsl
in
int3
es
mov
mov
push
add
cmpsb
xchg
ja
and
pop
xchg
int
fldl
es
repnz
test
pop
adc
cmpsb
pop
test
in
lret
add
push
pop
add
add
mov
popa
das
sub
inc
xchg
cmp
adc
pop
fisttpll
daa
mov
xchg
pusha
lahf
stc
inc
mov
out
loopne
shl
adc
pop
fdiv
and
adc
or
test
mov
pop
in
test
popf
es
inc
aad
dec
popf
xor
and
repz
popf
xchg
push
pop
jns
jl
test
mov
push
popf
decb
adc
mov
sbbb
aas
mov
gs
inc
sbb
xor
xchg
movsb
push
dec
add
fidivrl
lock
rcrl
or
clc
or
cmp
pusha
xor
adc
pop
xor
dec
push
imul
icebp
dec
das
leave
mov
sbb
lahf
ljmp
mov
out
daa
cmc
dec
inc
or
ja
cmp
mov
lock
dec
lock
adc
push
pop
nop
repz
jbe
xor
jae
mov
lahf
push
sbb
nop
ret
js
dec
push
jns
sbb
test
mov
ljmp
jo
call
cmp
aad
sub
fstl
in
ja
ud1
dec
icebp
clc
cli
je
push
jl
dec
in
addr16
add
fbld
out
add
test
and
sub
xor
rorb
push
add
mov
out
dec
es
sub
ljmp
fwait
mov
dec
push
aas
xor
xlat
frstor
fldl
jp
add
push
mov
push
rorl
mov
shlb
lock
pop
and
cs
fcomps
add
push
inc
jge
enter
push
push
jbe
fstps
scas
mov
rolb
dec
push
int
push
adc
add
cmp
daa
inc
movsl
dec
and
adc
dec
dec
cmpsb
es
and
shrb
xor
push
dec
insb
je
cmpsb
xchg
mov
xor
into
ret
xchg
cli
das
or
add
adc
insl
jge,pt
call
jae
movsb
pop
jmp
inc
xchg
and
mov
out
cmpsb
scas
cmp
mov
into
insl
sbb
out
nop
xchg
dec
imul
jno
sub
cltd
flds
and
adc
push
adc
xor
adc
cs
lahf
popa
mov
mulb
ljmp
std
nop
cs
inc
icebp
dec
push
push
sbb
add
mov
jmp
aad
add
popa
fbstp
pop
push
ret
cmc
mov
jbe
push
fisttps
rcrb
mov
cli
fidivrs
mov
pop
pushf
movsl
jmp
lock
sti
push
adc
fs
cs
ljmp
push
adc
popf
fnstcw
push
pop
out
pop
or
test
popa
jmp
push
add
rorb
inc
push
dec
mov
sub
pop
and
cld
xchg
sub
dec
inc
fldl
faddp
adc
rcrl
mov
addr16
lcall
mov
pop
mov
aas
mov
jg
and
and
aad
mov
mov
lods
in
mov
mov
daa
jle
xchg
xchg
or
aaa
push
lahf
jge
xor
lods
mov
or
test
hlt
lods
sub
mov
frstor
xchg
xchg
inc
ljmp
pop
cli
and
movsb
xor
ja
aad
out
and
bound
jo
xchg
pop
mov
mov
bound
sar
jns
sub
mov
jmp
cmp
mov
pop
ret
das
cmp
cmp
incb
popf
sti
lock
xchg
outsb
in
or
ret
idivl
hlt
push
imull
sub
leave
dec
cmc
add
push
pusha
js
or
fcoms
add
xlat
ret
sub
adc
cmp
pusha
in
inc
xor
adc
jp
mov
mov
mov
xor
scas
sti
shrl
dec
pop
popf
out
insl
cmp
inc
in
pop
outsb
jbe
in
repnz
cmp
nop
jno
xchg
jo
push
xor
into
mov
stc
mov
subl
add
es
pop
in
scas
mov
stos
xchg
lcall
movsl
call
cmp
xor
in
scas
mov
and
test
out
outsb
lods
sbb
ret
push
mov
xor
mov
adc
mov
xor
sar
mov
fiadds
fisttpl
cmp
setge
das
lods
rcr
nop
cld
idivl
mov
mov
mov
jecxz
mov
xchg
sub
cmp
decb
ret
sub
jmp
fs
fwait
push
dec
adc
push
lret
sub
movb
rcll
add
mov
adc
xchg
pop
pop
push
mov
inc
aas
xchg
add
sub
repz
daa
loopne
in
pop
add
adcl
jne
pop
out
push
lahf
inc
dec
add
imul
movb
stos
hlt
lcall
jmp
sub
push
lods
jns
add
dec
lret
xchg
sbb
test
cmpsl
fmull
jnp
xor
pop
push
test
mov
leave
sbb
lcall
ds
and
popa
cltd
inc
test
imulb
dec
jp
add
jb
xchg
pop
xor
andb
xor
xchg
mov
mov
sbb
rol
cmpsl
loop
add
in
and
and
xor
adc
or
iret
mov
xchg
sub
push
add
sub
cmp
or
or
pop
adc
and
stc
pop
shlb
mov
in
xor
mov
inc
das
jo
andl
inc
xchg
add
mov
jmp
pushl
push
sbb
stos
jno
cmc
mov
int
pop
mov
jno
jo
adc
push
mov
pop
scas
lcall
sbb
jp
and
bound
mov
test
xchg
jae
pop
pop
sbb
or
hlt
sub
xchg
nop
mov
scas
pop
into
negb
xor
enter
lods
loop
sbb
mov
ret
repnz
push
fwait
in
js
jl
and
add
pop
and
mov
sti
out
adc
mov
dec
mov
movl
jns
js
adc
sahf
pop
lds
fidivrl
cmpsl
push
add
add
out
lcall
jp
xchg
sub
cmp
lcall
movsl
rol
dec
test
cmp
les
andl
mov
add
jle
sbb
dec
mov
jns
imul
pop
or
add
inc
push
sub
das
aad
push
mov
mov
xchg
call
or
push
pop
xor
loopne,pt
cmp
adc
xor
add
ret
sbbb
in
test
xchg
inc
mov
xor
cs
mov
push
or
dec
push
nop
cmp
in
cmp
or
jnp
add
jbe
adc
inc
aas
inc
cmc
in
inc
jp
stos
pop
push
enter
stos
or
jl
mov
mov
push
pop
pusha
cmpsl
cmp
or
mov
push
dec
jg
das
cmp
add
mov
cld
mov
inc
add
xor
mov
push
adc
ja
cmpsl
add
inc
clc
inc
mov
push
xor
sbb
dec
jmp
outsl
pop
mov
mull
andl
test
pushf
xlat
testb
push
call
fwait
rcll
popa
mov
loop
fsubrs
sub
hlt
sti
outsl
insl
add
adc
xchg
xchg
and
jmp
mov
mov
add
lods
sbb
stos
leave
pusha
mov
das
mov
setne
sbb
aad
loop
or
jl
mov
rorb
loopne
repz
and
xor
dec
xor
fbstp
dec
adcb
repnz
cltd
sub
or
add
and
lods
imul
ljmp
dec
cld
lods
or
add
cltd
pause
push
mov
fcmove
mov
int3
sub
cli
push
inc
fistpl
nop
mov
test
inc
mov
push
call
adcl
xor
dec
adc
xor
push
adc
mov
dec
das
sbb
pop
roll
imulb
int
inc
xchg
pop
inc
mov
inc
or
xchg
cmp
dec
orb
pusha
push
adc
pop
loop
mov
cli
scas
xchg
jb
out
add
cmpb
mov
int3
test
xor
jo
mov
and
xor
xchg
lds
dec
je
daa
insl
cmp
adc
test
cld
cli
mov
sub
and
aam
iret
mov
cltd
sub
daa
pop
nop
xchg
pop
fsubrs
mov
in
push
aam
sbb
outsl
test
out
test
jp
repz
es
inc
adc
ljmp
cwtl
push
daa
popa
add
inc
mov
xchg
bound
dec
fstpt
jns
add
pop
jle
lret
dec
xor
or
or
mov
mov
add
push
out
fdiv
fstpt
xorb
xor
adc
mov
xchg
mov
or
cwtl
xchg
ficoml
clc
sub
fistl
pop
in
add
shlb
shll
inc
xor
clc
xchg
add
fidivrs
enter
and
cmp
sub
lea
das
mov
test
dec
add
mov
sbb
cmc
add
add
jmp
gs
test
pop
addl
push
add
repz
mov
and
popf
pop
and
std
call
cmpsb
mov
add
fsubs
aaa
mov
add
repnz
test
sti
int3
in
xorb
dec
pop
push
and
inc
adc
fsubs
pop
xor
add
mov
subb
pusha
js
aaa
mov
inc
adc
pop
fwait
iret
adc
fldpi
repz
outsl
and
out
mov
jg
out
mov
xchg
fucomip
xchg
or
and
icebp
inc
adc
ja
add
fs
mov
adc
jo
lahf
sbb
loop
add
frstor
cmp
addr16
pop
popa
std
mov
mov
lods
mov
mov
outsb
dec
add
inc
sbbb
int3
leave
daa
jl
inc
out
test
or
add
jne,pn
out
mov
ret
fsubrl
out
add
mov
xchg
rorl
das
or
push
int3
sub
roll
mov
add
push
ds
jns
or
pop
ret
jp
dec
fmuls
mov
ret
jnp
pop
popa
dec
add
jle
pop
cmpsl
ret
fs
cs
mov
and
in
notl
add
xchg
sahf
ret
pop
std
dec
rcrb
add
jl
repz
loope
test
stos
mov
insl
sub
sbb
das
test
iret
int3
inc
xor
pop
pop
ja
sbb
inc
inc
add
mov
mov
pusha
clc
mov
ss
jno
adc
xor
out
loopne
xor
js
testb
loope
add
fisttpl
test
fists
je
int
rcrb
cmp
push
nop
filds
mov
push
mov
sub
mov
repnz
or
pop
and
jp
add
mov
clc
jns
lcall
in
pushl
xor
pop
sbb
mov
xor
jb
out
adc
add
test
sbb
test
jb
outsl
jbe
mov
sbb
xchg
sti
sub
inc
jns
mov
outsl
mov
lea
add
repz
cwtl
add
mov
xchg
add
dec
sbb
popa
inc
dec
xlat
dec
out
push
in
fbld
pop
or
cmpsb
pop
jecxz
jae
out
xor
add
sub
or
repz
je
add
add
add
or
jp
rorl
mov
xchg
and
aaa
dec
pushf
mov
je
lds
cld
and
sbb
pmaxub
testb
adc
bound
sbb
mov
add
aam
adc
jnp
xchg
mov
into
and
mov
fistps
pusha
inc
pop
xchg
insl
loop
xchg
shrb
and
push
fisttpll
out
xlat
lea
stc
xlat
xor
jge
mov
pop
push
mov
push
sti
mov
sti
mov
out
mov
stos
mov
jne
loope
pop
jmp
adc
jne
adc
push
stc
mov
push
stc
mov
mov
imul
outsb
lock
xlat
ja
pop
lock
cld
push
pop
add
mov
aas
nop
pop
mov
mov
aam
mov
mov
dec
scas
dec
inc
stos
push
inc
lret
movsb
cs
fstps
xor
xchg
fisttpl
dec
jae
pusha
xchg
lret
sub
xlat
jo
fwait
xor
or
pop
enter
and
dec
loop
sbb
stc
hlt
mov
out
cmpb
cmc
and
aas
fs
add
call
jle
daa
mov
std
xchg
push
rcll
loopne
imul
jl
mov
xchg
flds
sahf
inc
sub
aas
divl
cmp
lret
xchg
push
pop
pop
mov
jnp
cmp
aad
insb
fadds
jge
xchg
sub
and
cmp
rol
addl
lret
aaa
lahf
add
mov
ficoms
and
jge
pop
or
adcb
inc
xchg
and
add
pop
dec
adc
fisttpll
inc
jmp
test
clc
add
out
xchg
int3
loop
das
insl
jae
pop
xchg
mov
aad
inc
mov
add
push
mov
outsb
jp
test
mov
xor
test
dec
fldl
sub
xchg
mov
mov
movsl
cmc
and
sahf
leave
testb
jle
mov
and
xchg
add
call
iret
sub
mov
jo
jecxz
jae
loopne
in
and
das
dec
jnp
mov
xchg
insl
dec
rolb
mov
add
add
movsl
jbe
add
pop
das
sbb
adc
and
rcl
add
jno
lcall
iret
pop
test
std
cli
push
or
jae
enter
adc
xchg
pop
aas
ss
aam
inc
and
pop
hlt
xor
add
adc
das
inc
mov
adc
mov
mov
sub
sbb
sub
and
pop
ret
fdivrs
mov
mov
jmp
push
imulb
xchg
mov
imul
shrb
add
popa
jg
ja
and
bound
push
add
mov
out
std
xchg
mov
mov
je
aam
jnp
or
pop
out
adc
insl
adc
mov
fwait
stc
and
inc
xchg
jle
dec
lret
clc
pop
mov
mov
mov
daa
sub
fildl
pushw
pop
pop
testb
das
shlb
fcmovu
aaa
aam
into
dec
push
mov
adc
testl
frndint
mov
bound
mov
mov
int
sbb
pop
pop
or
xchg
pop
push
arpl
ljmp
push
cmc
xchg
jge
lea
pop
scas
and
add
paddq
mov
add
mov
sub
cmp
test
loopne
or
ss
jns
cmp
test
gs
and
jl
ret
stc
pop
push
push
fiadds
xor
ljmp
lods
jne
xor
scas
add
xchg
stos
pop
ret
mov
shr
mov
cmp
jp
add
mov
dec
pusha
fistpl
sbb
inc
les
inc
xor
cmc
add
adc
cmpl
mov
enter
int
xchg
xor
jns
jne
ljmp
mov
lcall
daa
jp
add
aam
mov
lock
add
inc
test
or
xor
popa
pop
fldl
push
xor
int
mov
nop
push
jecxz
icebp
cmp
rclb
xor
mov
dec
cmp
int
inc
mov
xchg
jae
add
jnp
and
clc
jae
enter
mov
push
sti
pop
pop
mov
stos
add
mov
mov
add
fstl
iret
dec
and
dec
les
xor
icebp
aad
or
rcrb
adc
addb
push
sub
ds
movsb
enter
push
sbb
mov
push
inc
xchg
pushw
add
mov
dec
hlt
pop
mov
dec
mov
jbe,pt
sbb
mov
pop
lret
fst
or
scas
xor
inc
sub
ja
jb
hlt
add
fdivl
test
and
add
add
jno
jle
xchg
fcmovbe
sbb
adc
mov
and
ror
fcoms
add
mov
jg
adc
add
popf
jge
jp
sbb
mov
xor
loopne
subl
test
stos
fimuls
stos
int
sub
mov
sti
xchg
subl
push
mov
fwait
xor
gs
push
jmp
xor
cmpsl
fisttps
ret
sbbb
cmp
enter
inc
rcrb
rcll
mov
ret
add
mov
test
icebp
push
xchg
add
push
cmc
or
mov
in
sbb
push
cli
xor
cmp
add
loope
outsb
inc
inc
push
jnp
add
xchg
jl
das
sbb
adc
std
imul
xchg
mov
pusha
or
xchg
addl
mov
outsb
pop
call
and
push
jns
xchg
mov
test
lock
add
push
call
xchg
push
dec
ja
shrl
pop
nop
mov
push
xor
ficompl
mov
push
add
xchg
fnsave
cmc
shl
push
pop
add
in
fisubrl
mov
into
stos
jbe
out
jns
inc
daa
and
std
push
mov
mov
xchg
test
test
cmp
sbb
dec
loop
je
add
pop
pop
mov
test
or
push
das
ret
lahf
push
or
sub
dec
mov
xor
and
call
popa
add
xchg
jmp
mov
dec
mov
adcb
outsb
xchg
ljmp
into
icebp
popf
test
cmpsl
cwtl
cld
pop
cld
jno
mov
addr16
call
and
loop
nop
xchg
or
mov
nop
aad
sub
dec
push
jp
popf
dec
lret
dec
jo
sub
pop
sti
aas
push
outsb
test
xor
andb
cld
xor
movsl
add
out
xchg
shr
mov
mov
mov
lods
dec
cld
inc
imul
pop
or
lcall
mov
loope
jge
lret
mov
pusha
pusha
push
ljmp
adc
pop
add
xchg
xor
das
xor
push
dec
add
jno
xchg
inc
fnsave
pusha
jp
nop
test
xchg
sbb
les
adc
adc
sbb
shll
imulb
rcrb
popa
pop
fisttps
add
out
pop
xchg
sub
xchg
scas
add
inc
mov
mov
add
cmp
shl
or
stc
subb
add
sahf
push
cmc
pop
test
adc
in
lds
xor
call
mov
test
xchg
push
ret
jb
and
sub
xchg
mov
and
inc
testb
mov
inc
aad
and
rcrb
xor
xor
test
insl
xor
add
or
adc
test
decb
or
xchg
mov
mov
je
inc
adc
imul
inc
add
jmp
jp
add
pop
mov
jge
mov
fldt
cmp
out
and
push
aaa
xchg
add
cmpsb
scas
loope
cmp
arpl
mov
add
fldt
xor
adc
int
jle
or
cld
std
or
dec
sub
scas
push
fs
outsl
faddl
jmp
mov
lcall
inc
dec
pop
xor
popa
push
sub
add
mov
mov
shrb
stos
outsl
mov
add
pop
push
add
mov
in
lcall
pushf
push
incl
shr
xchg
in
dec
mov
mov
sub
stos
add
push
pop
pop
scas
fisubrs
lea
inc
cs
mov
add
inc
mov
loop
jle
icebp
lods
repz
adc
data16
or
or
mov
or
jae
mov
daa
aaa
jmp
mull
cmp
xchg
sub
rol
fisttps
or
mov
je
sbb
jmp
sbb
sbb
nop
or
cmp
add
cmc
xor
adc
mov
pop
pop
andb
popf
fnstsw
mov
jnp
pop
sbb
fldl
ss
loope
pop
cmp
outsl
orps
or
add
outsl
pop
xor
lahf
insb
xlat
aaa
push
cli
imul
or
popf
mov
je
jb
pusha
aam
mov
pop
sbb
push
sbb
fidivrl
into
adc
and
xchg
sub
pop
or
fwait
mov
popa
idivb
cld
mov
add
inc
jmp
mov
sbb
or
add
dec
fstpl
dec
push
mov
dec
dec
add
cmpsl
push
mov
es
inc
movsl
ret
cltd
test
mov
aad
add
rorb
pop
inc
push
movsl
cld
sbb
insb
imul
pop
fstl
bound
mov
inc
mov
xchg
gs
xchg
xor
scas
mov
aam
xorb
clc
mov
ret
mov
dec
add
pushaw
dec
and
mov
cmp
imul
mov
push
dec
push
inc
sub
adc
or
mov
inc
pop
scas
mov
imul
sbb
stos
or
or
jnp
pusha
lahf
or
mov
mov
pop
inc
dec
pusha
lock
pop
lods
inc
sbb
andl
test
add
push
lret
or
leave
int
addl
sub
imul
push
or
data16
pop
lds
add
add
sarb
adc
pop
xchg
pop
adc
xchg
std
mov
pop
adc
mov
push
divb
mov
xor
test
lds
xor
pop
call
xchg
mov
sbb
mov
inc
sub
adc
faddl
cmpsb
add
addr16
mull
add
cmp
xchg
inc
push
sbb
sbb
mov
fsubs
mov
movsl
test
cli
mov
negb
fmull
mov
inc
daa
mov
test
adc
pop
mov
mov
fistpl
or
mov
test
pop
mov
and
or
ret
adc
out
xlat
cmp
loope
mov
mov
cwtl
sub
xchg
call
mov
nop
dec
xor
stos
aaa
maxps
je
push
or
je
jbe
dec
xchg
enter
insl
fcmovnb
sub
push
out
mov
push
jecxz
dec
out
jno
add
popf
cmp
mov
shl
xchg
and
jp
push
jmp
fmuls
inc
ds
test
xchg
mov
xor
mov
stos
mov
fdivrs
add
xor
mov
mov
or
inc
orb
movsb
ljmp
cmp
xchg
sarb
jmp
ret
xlat
cwtl
jno
rcll
sub
mov
sahf
addr16
sbb
inc
outsb
xchg
leave
add
imul
pop
pop
rorl
cmp
dec
aas
fidivl
stos
lret
leave
and
add
fildll
js
scas
sbb
sti
and
cmp
dec
xor
aaa
dec
inc
hlt
out
scas
pusha
add
inc
jmp
jae
rclb
and
fisubs
xlat
popa
mov
loop
and
xchg
pop
icebp
pushf
dec
and
and
das
ja
leave
sbb
pusha
jg
lock
push
insb
test
lea
stc
fcmovbe
jmp
sbb
add
idivl
mov
aaa
sbb
jmp
daa
daa
gs
mov
dec
dec
mov
lods
mov
sbb
insl
push
and
movsl
push
xor
icebp
cmp
aas
clc
movsl
inc
repz
out
add
pop
mov
dec
cld
push
movsb
aam
mov
add
pop
loop
jo
in
sub
lcallw
mov
in
mov
lahf
or
gs
inc
fs
pusha
fnstenv
jl
xor
je
add
lds
mov
pop
xchg
hlt
and
or
cld
add
lcall
dec
push
notl
test
cltd
in
and
pop
pop
pop
in
sub
sbb
push
int3
sub
sti
stc
jae
cmp
xor
ds
sub
sahf
rorb
insb
xchg
fimull
enter
adc
push
dec
mov
rorb
inc
or
push
jle
inc
push
sbb
dec
popa
sub
mov
bound
iret
or
mov
pop
roll
loop
inc
pushf
or
cld
jmp
and
sub
cmpsl
je
xlat
leave
fcomi
add
ret
mov
sub
popa
hlt
repz
mov
jno
dec
add
or
or
pushf
gs
aam
and
push
jmp
pop
xchg
mov
cmpsl
icebp
dec
inc
clc
cmp
jo
jge
call
inc
sar
cmpsb
xor
mov
mov
jle
cmp
lret
adc
ficompl
or
std
cs
loopne
incb
sahf
xlat
shrb
aaa
cmovnp
and
mov
xchg
imul
or
rcrb
cmp
sub
push
in
mov
push
pop
mov
int3
jg
sub
popa
xchg
mov
ret
xchg
fnstenv
loop
push
test
inc
sbb
inc
stc
xchg
pop
push
cld
adc
mov
das
cmc
jl
dec
pop
pusha
add
inc
or
xchg
mov
jge
stc
popa
into
mov
mov
jbe
mov
dec
mov
inc
add
es
test
add
outsl
ss
rcr
cmp
pop
mov
adc
mov
pusha
addr16
push
cmc
mov
push
popf
and
stos
int
das
add
push
sub
adcb
cmp
dec
mov
out
jmp
mov
cmp
pop
shll
or
imul
xchg
enter
sbb
or
ljmp
movsb
lahf
adc
add
push
sbb
stos
arpl
js
cmp
rorl
fstl
movsl
pop
or
js
xlat
dec
pop
xchg
sarl
pop
sbb
pop
out
lea
rcll
inc
fwait
stos
enter
stc
je
pusha
sub
jnp
inc
inc
inc
jne
sbb
cmp
mov
jecxz
xorl
add
push
mov
in
hlt
lods
adc
mov
dec
xor
mov
fs
add
bound
leave
mov
and
aaa
adc
aaa
mov
cmpsb
repnz
add
xor
leave
sub
sbb
and
sub
dec
icebp
cli
fstpt
stos
enter
pop
mov
outsl
or
lcall
popf
sbb
inc
and
adc
dec
fildll
lods
mov
cwtl
fisubrl
or
shll
out
adc
test
xor
pushf
jp
xor
aaa
xor
mov
cmpsb
or
xchg
ljmp
cltd
sbb
push
movsl
pop
or
mov
xor
cli
dec
push
push
cs
or
pop
in
outsb
out
pop
ja
inc
mov
add
pop
rclb
xlat
test
fbld
cltd
jae
stc
jmp
enter
mov
add
in
imul
popa
jge
cli
cmpl
xorb
cvttps2pi
pop
jbe
lret
out
jle
hlt
add
push
push
repnz
cmp
add
pop
jo
jge
fdivr
fcmovne
push
fndisi(8087
or
xlat
out
or
sbb
sub
adc
lea
add
mov
nop
fisttps
nop
xchg
pop
mov
mov
lcall
push
sbb
test
dec
sahf
jnp
cmp
test
xchg
xor
sub
add
mov
add
or
dec
dec
pop
inc
cltd
add
imul
dec
add
fucomp
dec
cmp
dec
and
gs
add
add
movsb
pushf
stos
call
mov
outsl
addb
cmp
dec
xchg
mov
mov
add
inc
popf
mov
inc
mov
cmp
sarl
push
shll
out
jo
fnstenv
xchg
nop
add
cmp
pop
pusha
mov
nop
and
out
subb
out
std
cli
adc
jle
addb
sbb
pop
mov
mov
outsb
in
imul
inc
sarb
mov
in
fwait
adc
mov
mov
cmp
pusha
sbb
in
adc
dec
lods
or
xor
adc
and
ds
cmp
mulb
adc
adc
daa
add
xchg
or
mov
les
ret
or
push
mov
push
lds
popf
sbb
sar
mov
xchg
xor
add
mov
stc
out
mov
inc
insl
cmpsb
std
mov
rcrb
sub
and
dec
addb
or
add
fcoms
cmovno
pop
push
pop
outsl
xchg
das
push
or
repz
jbe
loop
inc
aad
cmpsb
fildl
inc
adc
jo
popf
sbb
cmpl
and
mov
mov
adc
or
sub
inc
and
add
mov
xchg
inc
sub
push
dec
fcoms
movsl
mul
test
stos
les
adc
push
cmp
mov
pop
jp
aam
inc
pop
stc
sub
test
add
ja
loope
rol
test
mov
cld
scas
mov
pop
cmp
jno
pop
sarb
or
adc
add
jnp
add
cmp
shlb
sbb
jno
dec
mov
cmpsb
add
sbb
daa
jnp
jbe
inc
sbb
add
fcompp
rclb
daa
loope
mov
add
call
repnz
stos
or
cld
push
ljmp
add
lea
pop
xchg
fstl
mov
fwait
mov
push
inc
stos
push
xchg
xor
mov
add
in
dec
xlat
add
mov
mov
sub
jle
push
stc
mov
scas
or
je
push
push
add
movsb
shlb
jge
inc
cmp
dec
daa
cli
inc
scas
push
mov
lock
jbe
mov
sub
mov
cmp
sti
pusha
imul
push
in
lock
ucomiss
daa
and
push
add
mov
cwtl
cmp
mov
and
movsb
out
stos
out
mov
fdivrs
or
pop
xchg
push
in
lcall
xchg
pusha
or
jmp
pusha
les
mov
repz
rcl
add
adc
ja
lcall
xor
or
fwait
xor
sbb
aaa
sbb
daa
arpl
shlb
dec
or
divb
cli
and
or
fisubl
sub
aas
mov
aam
mov
in
xor
test
pop
pushf
hlt
in
shrb
ja
ss
push
roll
mov
test
mov
mov
jo
int
and
adc
xchg
sbb
lcall
shll
je
int
mov
mov
and
xchg
add
sub
inc
mov
or
rcl
cmpsl
dec
ss
inc
push
xchg
sbb
nop
and
nop
mov
aam
pop
mov
inc
pop
jecxz
push
push
jo
insb
mov
ret
jmpw
pop
sti
pusha
sub
cmp
icebp
dec
enter
js
fildll
enter
leave
popa
fldenv
jp
insl
or
dec
inc
imul
icebp
jp
fwait
dec
mov
sarl
push
xchg
mov
fs
mov
mov
cmpsb
aaa
jecxz
sarb
fs
mov
dec
jmp
call
push
mulb
or
roll
sub
cmp
addb
push
push
ret
mov
sub
out
xchg
in
jb
mov
cltd
push
push
push
ds
pop
xchg
pop
das
or
cli
mov
xchg
sbb
repz
pop
in
xor
dec
mov
mov
cmp
xchg
loopne
add
enter
push
pop
and
bound
or
jg
jnp
jae
inc
mov
mov
mov
inc
mov
xor
add
add
movsb
mov
jmp
sub
popf
lds
pop
pop
in
push
cld
lock
scas
cmpsl
das
mov
insl
and
jge
pusha
clc
rcr
shrl
add
ljmp
add
cmpsl
and
cmpsl
inc
pushl
in
push
data16
adc
vpunpcklqdq
outsl
cwtl
fmull
jg
add
divl
cld
rcll
testl
lds
cltd
out
sub
sti
adc
out
cmpsl
xchg
dec
push
add
fisubl
sub
sub
mov
loopne
cmpb
daa
les
jne
xchg
mov
scas
repz
adc
push
fadd
or
jge
rcrl
test
nop
and
repnz
jge
add
sti
jp
mov
mov
sub
mov
addl
jmp
xchg
push
enter
mov
icebp
mov
iret
dec
dec
lcall
ds
or
xchg
jb
ljmp
pop
xchg
or
cmpsl
push
in
out
cltd
xor
pop
in
xchg
and
mov
pop
call
loopne
jle
adc
test
movsl
jle
pop
mov
dec
jbe
jmp
rcrb
test
cld
orb
dec
in
dec
inc
mov
mov
xor
jl
sub
add
jle
push
in
jg
add
insb
xor
push
pusha
popa
dec
pop
call
add
gs
cwtl
xchg
mov
fdivrs
inc
lods
sbb
add
inc
dec
adc
mov
mov
sbb
add
clc
aaa
mov
sub
cltd
mov
jne
insl
addb
jl
pop
daa
jo
repz
mov
mov
xchg
mov
jmp
mov
cmp
lret
and
adc
lcall
scas
nop
notl
cld
int3
aaa
cmp
imul
sub
cmp
add
movb
xchg
add
or
rorb
dec
mov
pop
je
dec
or
mov
jmp
jmp
icebp
mov
pop
mov
push
mov
add
mov
inc
gs
incl
push
mov
jo
and
mov
les
fwait
test
stc
jnp
pop
push
or
lret
jnp
jns
lret
loopne
leave
and
addb
add
test
ret
jne
sbb
aas
mov
xorb
push
leave
cmp
std
adcl
pusha
push
cltd
dec
jo
add
mov
mov
rolb
or
insl
adc
popa
nop
insl
add
sbb
cmc
pusha
adc
inc
fistpll
outsl
int3
cmp
cli
sub
out
fdivrp
sbbb
mov
imul
adc
sbb
mov
jns
in
pop
shll
test
mov
inc
push
push
incl
xor
sbb
push
or
and
rcr
cmpsb
jo
or
and
loope
cmpsl
std
add
mov
mov
xor
mov
jno
mov
xchg
jns
orb
mov
or
add
mov
sub
xchg
rolb
jge
inc
and
sbb
sbb
ss
mov
pusha
scas
out
push
sub
clc
mul
mov
cmp
outsl
pop
fisttpl
mov
aaa
fistpll
dec
mov
dec
mov
mov
adc
hlt
adcb
jmp
pop
jmp
pop
dec
mov
jl
faddl
push
dec
movsl
out
xor
and
clc
adc
mov
sub
push
add
lock
or
xchg
dec
or
xchg
mov
xchg
or
in
push
mov
test
sub
push
and
pop
mov
out
int3
xchg
addl
les
add
push
in
lock
jno
or
out
dec
flds
roll
xor
jl
add
pop
das
pop
imul
or
enter
xlat
insl
inc
cmp
push
add
imul
shl
jmp
or
jo
popa
xchg
jns
cmp
dec
mov
xor
xlat
ja
or
test
xchg
xor
jg
mov
jge
jne
or
fisubs
sub
bound
jns
dec
push
sarb
mov
pop
sarl
lods
adc
xchg
and
das
jb
mov
and
sbb
adc
cmp
imul
pusha
dec
popf
push
cmp
stc
mov
or
lret
and
jbe
loopne
mov
cs
dec
or
or
pop
movsl
fs
insl
call
aad
cmpsl
jmp
add
stc
xchg
sub
sbb
repz
dec
dec
mov
mov
adc
xchg
aaa
adc
imul
adc
push
or
push
aaa
sbb
or
les
lea
and
adc
ds
rcr
and
xchg
sbb
or
sbb
push
sbb
mov
test
repnz
jmp
dec
frstor
xchg
sbb
test
mov
and
hlt
add
mov
in
push
sub
xchg
ljmpw
lahf
inc
lods
inc
pop
xor
cmpb
xchg
push
xchg
pushf
push
dec
or
add
pop
lahf
and
shll
mov
rcrl
jmp
xchg
cli
mov
xchg
je
push
add
arpl
add
sbb
les
rclb
out
adc
pusha
test
xchg
add
mov
adc
pop
cmc
push
repz
mov
rolb
cmp
add
sub
xchg
mov
or
and
sub
cli
push
mov
jp
or
call
mov
out
je
push
push
das
jb
pop
je
outsl
imul
cltd
push
push
xor
inc
mov
repz
mov
pop
out
xchg
push
and
cwtl
imul
inc
push
adc
pop
outsb
mov
pusha
inc
pop
inc
xchg
imul
iret
adc
dec
push
mov
dec
or
dec
mov
pusha
xor
dec
in
bound
inc
addl
ret
test
jmp
hlt
call
les
in
icebp
cmp
xchg
repz
fdivs
aas
das
lock
inc
arpl
adc
lds
in
pop
das
pop
in
sahf
or
sahf
cmp
mov
jno
add
aaa
cli
das
mov
and
leave
in
fistps
xor
ljmp
or
pop
mov
fcomps
xchg
mov
lahf
pop
bound
pop
and
ja
push
mov
inc
add
imul
loope
xchg
add
xchg
push
mov
ja,pn
push
popf
jbe
daa
add
and
mov
and
inc
test
or
out
scas
xchg
pushf
push
out
stc
xchg
dec
adc
sub
mov
popf
ret
aas
in
negb
or
inc
and
inc
xchg
scas
call
cmp
or
dec
imul
popf
jns
mov
adc
faddl
xchg
pushw
leave
push
loopne
jne
sbb
nop
lds
sbb
pushf
inc
cmp
xchg
mov
push
fldl
mov
and
das
out
loope
xor
iret
mov
movsb
rol
add
or
add
push
cmc
sub
add
outsb
jns
in
jp
add
leave
xor
adc
repnz
and
shrb
xor
or
clc
dec
into
xchg
mov
xor
push
notb
cmp
mov
add
xor
or
test
sbb
cmp
push
cmc
xor
inc
dec
por
adc
xchg
mov
mov
jns
xorb
das
sbb
pusha
mov
adc
and
dec
sub
cmp
adc
add
clc
push
push
pop
mov
push
push
sbb
ljmp
jo
shlb
leave
jg
shl
iret
test
adc
std
inc
mov
inc
cs
mov
sub
jbe
inc
sbb
shlb
mov
pop
aam
xchg
cld
rorb
incb
xchg
imulb
clc
sub
ret
xchg
dec
pop
mov
pop
repz
sbbl
lock
addb
push
pop
popa
jne
pop
cmpl
lcall
out
dec
movsb
imul
inc
xor
popf
inc
xchg
lcall
push
jmp
ljmp
jmp
ljmp
adc
imull
mov
mov
stc
aaa
ds
fcoms
sub
mov
fisubs
xchg
cwtl
loope
test
les
inc
mov
stos
lods
pushf
imulb
test
pop
out
test
sub
push
leave
dec
sub
icebp
ffreep
mov
or
inc
and
pop
pop
mov
mov
enter
mov
adc
xor
lods
outsl
popa
mov
inc
outsl
fsubs
add
aas
xchg
xor
mov
ret
mov
mov
mov
popa
add
jb
add
jo
lds
mov
dec
add
addb
gs
fcompl
mov
stos
loopne
lret
add
pop
popa
jmp
dec
or
sub
cmp
inc
insl
je
push
push
mov
mov
mov
rol
aam
fcoml
out
adc
add
fs
fnsave
pop
adc
add
das
lods
adc
mov
or
negl
mov
frstor
sarb
adc
mov
pop
xor
jp
and
add
jbe
mov
mov
cmp
push
outsl
adc
les
jno
rcrb
and
sub
dec
scas
pop
jb
fs
std
nop
shlb
out
arpl
dec
mov
xchg
inc
sbb
xor
sbb
aaa
or
mov
mov
and
mov
adc
dec
pusha
fiadds
mov
add
inc
jmp
jno
add
testl
mov
cmp
adc
pop
ljmp
lahf
add
inc
push
jne
clc
enter
push
fsts
ret
add
add
outsb
push
mov
lret
mov
or
mov
lcall
adc
sub
lret
mov
sti
test
call
jns
pop
out
cmp
test
bound
cmp
fistpl
fs
sbb
add
mov
xlat
pop
pop
imul
sbb
aas
and
or
mov
mov
call
popf
jo
ds
sub
xor
inc
xchg
std
hlt
adc
sbb
and
pusha
cwtl
shll
movsl
cmp
or
or
popa
out
stc
in
and
imul
movsl
outsl
ret
xor
lret
push
pusha
in
sub
movsl
testl
movsl
fxch
add
pop
ds
mov
jg
push
fistpl
xor
ret
mov
inc
and
test
pop
mov
test
ja
push
dec
mov
xor
fildll
cli
xchg
lods
add
pop
mov
pop
jle
dec
out
dec
mov
nop
xorl
push
and
test
in
cmc
test
sbb
addr16
rorb
loop
sbb
xchg
xchg
pop
and
lds
mov
dec
mov
add
xchg
stc
add
outsl
imul
mov
cmp
add
gs
xor
mov
ret
test
pop
mov
jbe
xchg
mov
imul
or
hlt
add
mov
cld
cmc
sti
imull
push
rcl
lds
ljmp
out
repz
mov
inc
shr
sbb
les
insl
mov
pushf
sar
adc
data16
mov
and
mov
ljmp
fnstcw
imul
dec
pop
xchg
adc
mov
cmp
jecxz
popf
mov
or
xor
jbe
faddl
std
jg
push
inc
and
ljmp
mov
jo
in
push
loopne
add
cmp
dec
push
nop
inc
mov
jle
test
js
dec
add
jns
xchg
push
mov
inc
jmp
out
loopne
cld
cmp
push
scas
inc
pop
push
bound
cmp
add
pusha
clc
add
and
mov
cmp
out
push
mov
movsb
mov
jge
xor
daa
daa
pusha
in
lock
adc
loope
imul
pop
lods
aad
aam
mov
mov
mov
pop
jo
aas
add
push
xor
mov
add
xor
sub
xchg
xchg
sbb
ja
mov
push
add
nop
push
push
push
pop
pop
je
pop
pusha
xor
jmp
ljmp
add
pop
add
lret
lcall
imul
sahf
sub
sahf
pusha
xchg
xor
cmp
lods
das
rorb
pop
xor
xchg
cmc
cwtl
sar
ds
arpl
clc
add
repnz
or
xchg
stc
and
mov
je
jo
jae
add
ja
adc
out
jmp
orb
pushf
add
mov
mov
popa
or
je
xchg
cwtl
pop
and
sbbl
dec
mov
jno
ffree
fistps
fwait
or
shll
jl
pop
popf
push
inc
stos
sub
and
in
lods
leave
les
inc
jno
lahf
loope
sub
lret
add
and
adc
mov
lds
je
cmc
sub
mov
outsl
neg
add
pop
xchg
mov
fsubs
inc
jbe
xchg
add
fidivrs
cmp
enter
or
pop
subl
cmp
add
sub
fsubs
push
mov
call
mov
mov
dec
push
das
push
inc
dec
in
mov
jbe
add
add
mov
mov
mov
dec
lahf
call
push
fwait
pop
ret
cld
data16
pusha
mov
jecxz
xor
lea
xchg
nop
iret
xchg
stos
std
and
clc
push
xchg
adc
mov
cmovns
rorl
cmpsl
xlat
xchg
pop
inc
das
add
loop
jbe
cmp
addl
push
mov
es
xchg
lea
psubusw
pop
add
dec
shll
add
inc
xchg
mov
lods
pop
cs
xor
xlat
mov
call
cmp
cmc
cmpsl
aaa
cltd
and
aaa
aas
add
sub
jb
mov
outsl
inc
imul
mov
pop
sub
jne
cmp
dec
jmp
xchg
add
stc
inc
mov
push
or
xchg
fimull
out
enter
mov
icebp
mov
les
stos
cmpsl
mov
xchg
cmp
and
ja
push
mul
mov
mov
dec
repz
and
cmpsl
mov
cmp
out
enter
adc
nop
scas
cwtl
pop
sub
jnp
or
cmc
aaa
or
mov
jge
cmpl
loop
cmp
push
ds
pop
mov
mov
and
lahf
popw
mov
pop
push
pushf
add
cmpsl
mov
mov
rcrl
negl
jmp
dec
int3
jl
dec
ljmp
addl
fidivrl
mov
dec
pop
jg
fistpl
int
aas
int3
xchg
xor
mov
and
and
add
mov
add
or
cmp
out
mov
xor
ret
or
iret
adc
in
xor
and
jge
pop
xchg
add
in
jno
push
lcall
test
add
sbb
fstps
xchg
rolb
xchg
and
push
or
cmp
aad
xchg
ljmp
dec
int
inc
nop
fisubrl
mov
xchg
lods
ret
adc
and
imul
xchg
cmp
adc
sub
mov
stc
jg
dec
add
pop
in
cld
xchg
xchg
pop
fcompl
add
mov
popf
sti
add
sub
mov
and
push
cmp
add
popaw
xchg
xchg
mov
jns
dec
out
outsb
stc
and
mov
test
int3
add
push
push
adc
inc
sbb
popf
cmp
pop
andb
popf
lret
or
and
jge
shlb
xor
dec
dec
mov
cmp
sbb
mov
fisttps
ljmp
mov
outsl
mov
mov
and
xchg
dec
out
xchg
jge
mov
sahf
sub
sbb
push
jmp
push
mov
xchg
dec
out
popf
mov
add
jp
xchg
push
push
adc
mov
lret
xor
mov
cltd
mov
cmpsl
push
adc
add
ds
sbb
sub
and
andb
mulb
mov
rcrl
mov
mov
cli
fsubl
popf
push
roll
jo
push
loopne
lock
adc
fcomps
mov
pushl
adc
test
push
fldenv
xor
sbb
jb
adc
dec
pop
pushl
mov
add
fadd
clc
test
loope
sti
jmp
mov
pop
mov
push
add
dec
bound
ret
pop
mov
addb
xor
shll
jne
mov
adc
popl
fidivs
bound
or
subl
ret
adcl
sub
test
push
or
ja
pop
and
adc
or
shrl
aaa
mov
iret
sbb
mov
stc
popa
pop
test
add
mov
dec
sub
sbb
mov
xor
mov
pop
mov
pop
ja
add
dec
mov
lock
sub
pop
fstps
incl
mov
pop
sbbb
mov
jmp
nop
and
or
add
mov
add
jp
mov
mov
xchg
push
or
or
mov
sub
cmp
inc
dec
test
or
pop
add
mov
outsl
test
lret
ss
loopne
or
or
add
jge,pn
cmp
add
aad
fisttpl
pop
divb
roll
lcall
mov
leave
xor
cmp
or
cmpsl
and
rolb
fdivrs
hlt
pushf
pop
test
pusha
mov
addb
dec
add
xchg
sahf
push
pop
mov
mov
iret
ret
and
dec
pop
ljmp
inc
ja
sub
pushf
jo
lea
mov
dec
outsb
fcomps
push
ja
jbe
add
cmpsl
adc
xchg
add
pop
jb
xchg
shl
adc
in
sbb
fmul
cmp
xor
fldenv
mov
clc
adcl
popa
mov
push
das
js
mov
add
mov
push
adc
out
add
sbb
das
push
xlat
or
cmc
les
enter
add
push
sub
je
xchg
ret
repz
fbstp
in
std
faddl
sbb
pop
cld
shl
enter
or
or
sahf
andb
icebp
mov
add
xor
imul
push
ror
add
ffreep
loop
fs
xor
in
add
xor
inc
jl
jne
xor
mov
aas
jno
lea
icebp
sbb
jae
add
out
loop
push
ja
pop
sbb
sbb
adc
xor
and
scas
movsl
and
or
jne
popa
test
add
mov
insb
jno
shrb
xor
sub
jno
xor
and
sub
mov
and
and
jge
xchg
push
cmpsb
jecxz
push
fwait
nop
add
lahf
out
js
lods
nop
adc
cwtl
jmp
repnz
push
pusha
bound
or
adc
mov
push
mov
cli
imul
xor
cli
add
lods
cmp
mov
sbb
dec
jl
addb
movsl
dec
mov
adc
mov
xor
pop
pushf
dec
stos
cmp
mov
lcall
dec
cmp
add
stc
out
mov
lds
in
fdivr
sbb
shld
rcrb
push
clc
pop
loopne
mov
popf
inc
and
sahf
shlb
loop
stc
clc
jl
je
cs
cmpl
inc
clc
add
mov
arpl
pop
inc
mov
rcrl
and
pop
scas
dec
jae
xor
in
dec
add
push
xchg
mov
dec
add
fildl
push
repz
imul
mov
add
jl
dec
jl
sbb
cmpl
and
xchg
xor
adc
lds
out
dec
out
in
xchg
and
fmul
add
enter
lret
sti
aad
mov
js
adcl
test
and
mov
psubsb
push
add
fdivr
adc
iret
mov
push
andl
loopne
andb
add
movsb
jb
or
mov
xlat
cli
dec
dec
pop
in
add
and
in
add
xor
mov
add
sarb
iret
and
into
inc
or
sbb
rorb
add
mov
cmpsb
add
inc
insb
sti
cltd
ret
jno
sub
testl
sub
aaa
sbb
adc
repnz
dec
sbb
push
cwtl
or
out
dec
je
xorl
dec
pop
lret
and
pop
add
and
in
js
or
inc
and
dec
pop
std
inc
add
xor
and
mov
cmp
mov
inc
mov
and
jmp
ret
mov
xor
add
push
lods
repnz
cmp
and
mov
sub
sbb
push
xchg
push
dec
dec
inc
pop
add
mov
sbb
movsb
popf
inc
daa
das
scas
mov
in
lods
cmpsb
inc
outsb
add
pop
cwtl
add
roll
xorb
aas
mov
idivb
and
dec
jae
imul
cmp
adc
add
test
mov
mov
pop
cmp
js
or
clc
pop
sbb
and
push
lret
sbb
add
rcrl
inc
adc
into
cld
adc
pop
cs
cmp
loop
xchg
inc
mov
pop
add
xchg
push
push
sbb
add
mov
sar
sbb
add
pop
fmuls
iret
stos
pop
push
scas
push
mov
test
and
xchg
lock
roll
into
pop
cs
lods
pop
jecxz
pop
loop
or
stos
cmp
xchg
leave
add
pop
aad
sbb
aas
add
pusha
or
add
sub
nop
fcoml
xchg
lcall
in
pusha
popa
add
in
jae
arpl
add
adc
loopne
push
adc
fstpl
lock
jecxz
or
xchg
jns
fcompl
mov
adcb
mov
testb
cmp
out
jecxz
add
sti
and
pop
dec
lock
sbb
sahf
and
sub
sub
dec
std
fcmove
cld
or
icebp
bound
movsl
mov
and
dec
shrl
sub
ficoms
mov
cmp
cld
jae
dec
icebp
sbb
mov
sub
adc
fsubs
dec
test
sbb
push
int
outsl
add
fmull
pusha
outsb
icebp
shl
mov
hlt
iret
xor
fistpl
cs
push
push
xor
std
sarl
cwtl
icebp
cmp
sbbl
je
push
shlb
sub
das
jp
mov
inc
add
out
ja
push
mov
push
jno
sbb
add
sbb
push
or
cwtl
bound
loop
add
loope
and
sbb
push
push
subb
movsb
push
pushf
add
das
sub
ljmp
out
and
cltd
mov
cwtl
add
add
fistpll
dec
pop
sbb
ds
scas
icebp
lds
sbb
popf
xchg
or
and
addr16
xlat
add
or
lods
or
loop
xchg
and
int3
divl
jge
cmp
add
sub
add
jns
popa
push
imul
repnz
sbb
sarb
add
in
push
out
dec
inc
or
lcall
xor
or
xor
push
jbe
in
jge
out
scas
jle
std
add
xchg
or
shl
adc
shlb
and
cltd
idivb
jg
add
gs
enter
aaa
sbb
pushf
test
adc
jb
enter
add
inc
jle
inc
nop
and
pop
add
subl
daa
hlt
in
sbb
mov
or
hlt
out
sbb
and
cmpsl
adc
add
insb
pop
jne
add
jbe
adc
and
add
pop
mov
xor
add
scas
pop
fcomip
push
push
xchg
hlt
push
add
push
pop
cld
add
push
dec
and
sbb
jmp
loope
adc
daa
jae
jecxz
push
jl
incl
iret
jo
imulb
jns
mov
inc
cmp
pop
repz
pop
fistpl
mov
sahf
mov
push
pop
dec
leave
inc
jmp
imul
adc
ret
shlb
shll
shlb
popl
pusha
jmp
xor
mov
repz
fistps
cmp
adc
inc
and
in
mov
dec
loope
add
push
adc
out
add
dec
mov
xor
add
mov
clc
lea
and
cs
cmc
iret
cwtl
or
aaa
add
xchg
pop
pop
jl
addl
push
inc
xlat
cmpsb
inc
dec
mov
dec
add
push
jecxz
lock
or
js
add
mov
adc
fs
mov
movsb
inc
add
add
mov
push
aam
mov
jo
js
pop
jecxz
dec
rcrb
dec
add
shl
gs
inc
in
add
lahf
icebp
sbb
cmpb
or
jne
insl
and
sub
xor
jo
mov
dec
test
push
orb
cltd
nop
mov
inc
add
mov
dec
dec
push
mov
sub
jle
jge
add
fldt
loopne
ficoms
and
in
dec
xchg
pusha
mov
add
jae
mov
adc
mov
sbb
push
clc
roll
push
stc
xchg
mov
push
cmp
sbbb
daa
test
pop
stos
jbe
repnz
cmp
sbb
pop
pop
cwtl
jle
sub
sub
divb
orl
or
add
loopne
fwait
xor
mov
inc
insl
js
sbb
and
cmp
adc
inc
push
pop
fildl
sbb
rcrb
daa
add
push
or
push
mov
stos
sarl
sub
loope
xor
sub
xor
and
push
push
nop
inc
add
fdivr
jle
or
cmpsb
sub
cmc
daa
ret
add
in
mov
out
out
add
xor
pop
pushf
mov
add
pop
cmp
add
sbb
ss
inc
jo
lods
sbb
add
clc
cmp
dec
and
ja
xchg
xor
fucomip
xor
mov
push
jns
sbb
and
and
add
out
stos
cmp
pop
scas
pushf
sar
les
repz
xchg
or
negl
mov
fiadds
sub
add
xchg
xorl
jo
leave
add
and
lods
or
iret
sub
pusha
popf
sbb
icebp
mov
or
sbb
ret
cwtl
mov
pop
sbb
jg
xor
add
add
cmp
in
push
lret
fcoms
das
outsb
orb
je
sbb
aaa
pop
fadd
ja
out
movb
lea
jge
xor
in
and
add
cmp
je
or
mov
leave
jo
sub
xor
add
out
add
xchg
cltd
lahf
mov
in
outsl
and
cmc
inc
add
ds
das
inc
fcoms
leave
push
or
push
and
mov
sbb
popa
inc
sub
and
outsl
xchg
js
pusha
adc
pushf
into
and
das
sbb
mov
ret
xor
adc
addr16
stos
out
hlt
loope
adc
add
dec
jae
fdivr
addr16
inc
jb
xor
fwait
adc
outsl
and
negl
sub
ss
repnz
shl
mov
jno
lods
adc
or
daa
lock
mov
push
hlt
scas
das
sbb
mov
xor
stc
gs
inc
and
ljmp
or
jno
and
int3
add
dec
push
push
adc
cmpsb
cmp
add
xchg
jmp
add
out
add
xorb
xchg
ljmp
addr16
aas
jo
orl
mov
sbb
stos
shl
adc
bound
es
popa
xor
cmp
pop
xchg
cmpsb
jg
add
pop
pop
addb
sbb
xor
push
inc
fwait
and
jge
add
sbb
sbb
pop
jle
aas
cmc
ss
dec
sbb
clc
lods
repnz
dec
push
in
rcrb
jg
cwtl
push
cmp
int3
xorb
pop
sub
push
cmp
add
mov
cld
or
out
mov
test
mov
or
sbb
add
fcoms
mov
ret
adc
pushf
xlat
add
popf
xchg
loopne
dec
mov
arpl
fs
xor
jmp
shlb
lret
add
mov
dec
xor
adc
leave
fisttpl
and
cs
add
dec
pushf
push
mov
inc
shlb
pop
or
mov
and
or
add
add
testl
mov
sbb
enter
cmp
adc
sbb
mov
fneni(8087
xlat
loopne
xor
fucomp
xor
popf
hlt
loop
add
mov
mov
shlb
sbb
call
jmp
shll
ficoml
adc
pop
add
cmp
and
scas
data16
pop
ret
add
les
jno
nop
jo
pop
cmp
cmp
mov
stc
cwtl
ljmp
lahf
xchg
es
or
mov
out
mov
lret
cmp
cmp
jns
push
pop
push
jg
push
aad
fmuls
mov
add
pop
outsb
mov
adc
loop
test
xchg
mov
sub
dec
add
sbb
ja
or
mov
add
sub
cmp
fisubrl
inc
pop
insl
mov
pop
pop
inc
test
sub
xor
mov
cmp
fstps
test
cmp
dec
stos
push
jnp
add
das
fchs
inc
jns
popa
gs
shl
jl
add
pusha
ds
sbb
enter
mov
daa
loopne
or
es
push
mov
and
cmp
xchg
or
lods
add
cmpsl
pusha
rorb
shl
enter
mov
faddl
jbe
or
aad
in
popl
andb
add
mov
mov
sbb
xor
jno
inc
out
sar
add
insl
leave
sub
or
pop
loopne
outsl
dec
inc
or
mov
inc
cmp
stos
sti
fcoml
or
add
inc
pushf
inc
mov
adc
xchg
in
movsb
mov
test
in
flds
mov
out
mov
into
sbb
ficoml
or
cmpb
orl
or
push
icebp
xor
adc
add
imul
xor
test
flds
and
pop
inc
insb
aam
adc
cmpsb
xor
fcoml
loopne
ret
rcll
jno
sbb
jg
add
enter
out
add
pop
mov
add
cltd
dec
shlb
cs
xchg
enter
jle
in
xor
sbb
adc
pop
cmp
and
popa
xchg
fstpl
add
add
push
fcomps
out
sbb
add
cmp
push
rorb
imul
add
adc
lods
add
aas
cmp
mov
mov
int
mov
cmp
pop
xor
movsl
adc
pusha
mov
mov
enter
mov
or
setp
add
jno
arpl
add
outsl
dec
xchg
xor
das
push
pop
push
push
pushf
add
or
mov
test
daa
push
push
loopne
push
dec
cwtl
cmpsb
add
xlat
dec
and
repz
pop
repnz
in
leave
cmp
cmpl
add
or
scas
pop
icebp
jae
std
inc
inc
mov
push
mov
add
daa
pop
adc
test
push
iret
add
lea
pop
sbb
sub
jnp
outsb
xor
shl
adc
push
in
test
push
add
insl
test
movsb
cmpsb
cmp
jp
mov
add
rorb
scas
sub
add
cltd
dec
jns
add
xchg
aam
pop
jle
pop
xchg
cmp
pop
cmpsl
push
add
mov
xor
mov
int3
mov
gs
adc
in
add
or
xor
out
rcll
arpl
inc
negb
pushf
lea
fwait
jl
pop
and
rolb
and
add
jns
mov
add
xchg
push
shl
mov
add
daa
pusha
sahf
lock
push
mov
add
jns
add
arpl
rorl
and
bnd
cltd
gs
add
jge
ret
stos
xchg
add
in
scas
mov
lods
out
or
scas
add
dec
mov
nop
lret
push
jb
add
hlt
int
lds
rcl
cmp
add
sbb
mov
pop
rcrb
fs
pop
xor
movsl
nop
add
mov
sub
add
pop
pop
stc
cmc
push
mov
sarb
mov
arpl
lcall
xor
add
pop
cli
fldt
sbbl
mov
and
orb
fidivl
pop
stos
in
cmpsl
jmp
jb
in
outsb
or
fistl
inc
mov
inc
fs
popf
sub
aam
dec
xchg
push
dec
imul
add
repnz
sub
adc
jbe
insl
out
jmp
in
cwtl
lods
xchg
add
movsl
mov
dec
push
add
push
pop
imul
adc
adc
adc
add
cli
dec
add
inc
sub
add
pop
jl
cmp
mov
pop
in
add
inc
divb
add
push
call
pusha
outsl
sbb
iret
rcrl
jnp
mov
xor
repz
jg
cmp
dec
add
xor
add
jb
stc
mov
out
mov
xchg
es
jp
aam
jge
hlt
dec
sti
push
or
cmpsl
add
push
loopne
sub
cld
xchg
mov
inc
pusha
push
imul
or
nop
cld
mov
sbb
mov
mov
ret
add
pop
or
cmc
and
leave
xchg
add
xor
cld
sbb
enter
mov
outsl
imul
add
xchg
add
or
add
arpl
test
inc
loopne
dec
and
xchg
out
icebp
shrb
jle
xchg
scas
repz
out
xchg
sarb
and
and
jo
push
rolb
loopne
push
es
ret
pop
mov
fstl
stc
test
add
sbb
mov
and
ja
add
shrl
pop
imul
pop
jnp
add
or
in
add
add
jnp
push
push
adc
jns
js
add
ret
cmp
hlt
dec
or
fcoms
int
cmp
add
sti
out
and
fmull
add
or
pop
insb
jl
add
adc
movsb
inc
adcb
flds
inc
fisubrs
xchg
das
bound
adc
sbb
sarb
pop
and
ret
js
mov
mov
mov
dec
arpl
imul
in
add
sbb
fadds
mov
sbb
sub
or
mov
push
mov
xchg
test
sbb
add
or
inc
aaa
movsb
lds
jg
mov
outsb
push
push
fwait
mov
add
fsubrl
xor
adc
aam
adc
add
dec
in
aaa
cmp
clc
and
pop
cmp
pop
aaa
fs
sahf
and
sbb
loopne
push
add
xor
xchg
mov
sti
jmp
test
dec
cmp
adc
loope
mov
jl
add
loop,pn
pop
sbb
cmpsl
add
sub
or
lret
repz
outsl
fs
subb
fisubs
mov
add
xchg
jb
push
arpl
das
xchg
inc
lods
test
rcl
xchg
or
les
std
add
ret
outsb
nop
adc
mov
push
pop
inc
or
not
lods
popa
inc
adc
add
fisubs
sbbb
add
fsubrl
sub
pushl
sbb
add
lea
add
into
mov
lods
sub
insb
xor
dec
in
leave
push
add
cmp
push
std
jb
callw
call
cmp
lock
cmp
je
pop
repnz
dec
shrb
xchg
pop
mov
lret
sahf
mov
hlt
xor
jl
mov
int
lea
fcoms
or
inc
dec
cmpsl
add
pop
inc
fldenv
add
aad
mov
push
rorl
je
jno
or
sub
xor
out
rcl
jo
leave
movl
daa
in
xor
jnp
inc
add
xchg
inc
and
rclb
add
into
xor
andl
stc
sti
push
add
or
mov
xchg
popa
fildll
mov
add
xchg
adc
cs
insb
mov
mov
mov
xchg
cmp
lahf
and
aaa
fs
fwait
test
or
mov
xor
addb
mov
push
sbb
shlb
add
dec
scas
pop
pop
mov
stos
or
sbb
cld
cli
jns
std
pop
ja
or
or
sub
iret
popf
data16
pop
add
add
jb
int3
push
add
ja
cmp
sar
xchg
jmp
push
insb
jg
addr16
fsubrl
adcb
vpcmpgtb
mov
mov
pop
sbb
add
mov
sub
cmp
inc
nop
pusha
arpl
aaa
or
dec
scas
mov
dec
mov
jbe
lahf
push
sbb
mov
popa
ja
arpl
mov
mov
scas
and
add
lahf
jns
ret
fimull
add
loope
sub
rolb
inc
pop
orl
cs
dec
xor
lret
push
add
enter
ret
and
adcl
push
decb
add
insl
mov
push
mov
call
inc
add
ja
sbb
aam
mov
adc
push
add
sub
dec
or
scas
fnstsw
outsl
xchg
movsl
add
pop
in
and
sub
leave
aas
mov
mov
pop
add
adc
fsubrp
add
adc
pusha
outsl
mov
mov
nop
mov
xchg
pop
ljmp
add
inc
jecxz
lods
pop
xor
mov
xchg
push
or
pop
in
add
sarl
sbb
and
je
mov
cmp
cld
fimull
in
loope
add
lret
mov
insl
mov
roll
int3
adc
add
std
xor
movsl
mov
fcmovb
popa
jae
push
por
cli
sub
fdivrs
mov
push
cmp
mov
dec
out
lret
sbb
jle
adc
cmp
in
mov
movsl
loop
dec
arpl
cs
into
sub
adcl
in
sti
add
xchg
lods
dec
add
cld
inc
cmp
sbb
push
popa
std
sub
les
push
mov
mov
add
mov
dec
jp
cmp
adc
pop
mov
dec
cmp
adc
dec
xor
lret
sbb
loop
add
cld
outsl
fistps
jl
sub
push
in
add
jmp
jle
and
push
jno
add
test
xor
or
add
pop
into
sub
adcl
das
jno
and
and
add
cmp
test
sbb
add
scas
cmp
xchg
pop
push
sbb
outsb
incb
in
jns
pop
push
mov
mov
pop
insb
add
aaa
clc
fs
jno
xor
inc
in
in
pop
jo
stos
xchg
pop
push
add
out
jnp
cmp
dec
xchg
inc
jno
clc
roll
mov
in
aas
inc
cs
in
or
mov
sub
push
inc
mov
arpl
test
add
add
cld
jnp
adc
dec
or
add
pop
and
test
sub
xor
out
nop
push
jo
pusha
faddp
sbb
addl
xlat
mov
add
out
sub
scas
test
aaa
pusha
fs
mov
mov
fisubrs
or
push
or
and
rolb
add
stos
aaa
mov
or
sbbb
pop
adc
jno
jno
add
fldl
fwait
or
loope
les
nop
adc
and
aas
push
xor
pop
add
mov
sbb
inc
stc
faddl
cld
packssdw
push
lea
nop
std
mov
jbe
xlat
pop
shll
sub
xchg
fs
and
jo
addb
and
pop
aas
add
cmp
fwait
andb
imul
jp
ficoms
sbbl
sbb
shlb
rolb
mov
js
hlt
add
add
lods
jo
add
fmull
lret
add
add
inc
js
pushf
jo
out
add
mov
push
orb
cli
mov
test
sbb
int
cmpl
sbb
sub
mov
add
push
cmovo
imul
neg
lock
sub
fnstenv
pop
into
mov
andb
pop
ss
out
push
jg
xor
roll
jge
pop
int
inc
and
mov
xor
cld
inc
cld
movsl
add
test
cwtl
sbb
addr16
push
aaa
cmp
inc
push
mov
jp
xchg
jb
pop
mov
pop
roll
lcall
frstor
ljmp
outsb
lock
or
sbb
mov
nop
add
je
sub
sbb
pusha
mov
adc
fcmovnu
or
fstp
mov
adc
xor
or
xchg
aaa
mov
call
push
rcrb
pop
lret
jecxz
ret
and
sbb
aas
sarl
js
push
lock
push
mov
cli
add
lock
cmp
cmpsl
dec
stos
and
mov
fwait
clc
punpcklbw
fadd
xlat
xchg
mov
jmp
fadds
sti
std
jno
xor
arpl
or
out
int
fldl
mov
jmp
int
mov
mov
and
jp
add
insl
mov
adc
add
dec
sahf
xor
dec
sbb
addb
pop
jbe
mov
push
mov
hlt
scas
jne
bound
fisubl
movsb
add
inc
sbb
bnd
push
or
xchg
add
pop
and
pop
xor
cld
test
mov
call
aaa
std
push
pop
lret
sbb
pushf
pusha
mov
ds
add
jle
imul
add
push
jge
int
daa
or
xchg
sahf
sbb
nop
xchg
insb
sub
xor
dec
add
test
je
mov
sub
inc
cmpsb
lret
mov
sahf
andb
add
mov
and
cltd
int
sub
sbbb
into
mov
pop
lcall
sbb
mov
jl
adc
hlt
jne
cld
lcall
repnz
add
imul
in
jge
rcrb
daa
cwtl
cmovo
and
fisubrl
inc
xor
out
dec
xlat
mov
add
xor
hlt
iret
mov
dec
mov
repnz
js
in
xor
add
or
sub
xchg
push
aam
cld
sti
add
stos
repnz
cmpsb
and
jl
add
or
sub
mov
add
push
imul
fmuls
mov
add
xchg
mov
add
shll
push
incb
test
lock
add
mov
push
pop
out
imul
push
in
push
in
pusha
in
mov
mov
mov
cmpsb
out
push
fdivs
sbb
mov
add
cld
rorl
fs
out
pop
mov
sti
add
dec
enter
push
aam
sbb
inc
lcall
insl
jge
push
scas
lahf
add
jae
adc
and
cmp
sub
xchg
dec
add
outsl
pop
or
sub
push
stc
inc
inc
ja
push
cmp
clc
or
push
jns
xchg
orb
mov
dec
ja
mov
fisubrs
push
ljmp
ficompl
arpl
sub
sbb
ljmp
jmp
add
or
sbb
inc
into
dec
add
mov
xlat
add
fsubs
sbb
adc
aam
aad
pushf
inc
mov
mov
cmc
fsubs
cs
movb
jge
stos
addl
pop
pop
sbb
sbb
popw
aad
pop
mov
inc
test
or
in
lea
nop
mov
pop
adc
push
add
push
pop
sub
dec
xor
cmc
clc
in
and
and
ret
aam
push
adc
jae
mov
loopne
push
and
mov
push
push
mov
fdivs
stc
and
pop
mov
in
orl
hlt
adc
stos
lea
ds
push
cmpb
cmpb
loopne
xchg
loop
pop
je
or
outsl
xlat
sbb
insl
xchg
cli
add
movsl
pop
subb
jl
xchg
outsb
fists
cmp
add
push
xor
jae
mov
lods
lock
push
pop
add
pusha
and
add
sbb
movsb
lods
outsb
push
and
pop
jns
ja
in
pushf
ret
sahf
xor
por
add
sbb
cmp
add
fldl
sub
into
dec
inc
lret
dec
enter
add
aam
xchg
idivl
pop
or
adc
dec
and
add
test
pop
mov
rolb
outsb
popf
push
movsb
std
arpl
add
aad
add
icebp
ds
sub
pop
inc
movsl
repnz
lds
pop
pop
cwtl
add
jle
out
jl
rorl
and
daa
add
cmp
jb
mov
stos
add
cmp
push
rclb
fcmovb
out
pushl
sub
jns
add
fsubr
das
xchg
outsb
movsb
and
flds
sbb
push
int
add
and
mov
mov
sbb
xchg
sbb
mov
or
in
and
jecxz
dec
mov
adc
pop
into
mov
insb
jne
xor
lea
mov
and
mov
xchg
std
sbb
out
adc
add
and
mov
add
shrb
in
mov
cmpsb
lcall
addr16
fimuls
stc
fadds
testb
repnz
add
push
test
xchg
dec
jecxz
mov
add
dec
call
xchg
sub
add
adc
or
daa
jo
imul
cwtl
xchg
push
mov
cmp
fidivs
sahf
es
das
xchg
add
and
fists
add
leave
push
sbb
sbb
gs
int
and
add
push
jo
or
loopne
lods
cmp
jl
or
xor
shrb
call
add
mov
int3
int
add
push
popf
outsl
add
add
sub
inc
push
add
inc
paddq
and
shlb
cmp
test
in
jmp
sbb
jge
lahf
and
xchg
jns
jbe
and
js
imul
rcrb
sahf
lcall
sbb
mov
imul
js
hlt
aam
pop
movsl
subb
xor
frstor
xchg
or
add
inc
cld
pop
add
ret
add
fstpl
fnop
adcb
pusha
xor
push
and
add
fs
sub
push
inc
cmp
stos
add
arpl
adc
cmp
mov
movsl
inc
hlt
rcrb
loop
add
fadds
pop
jg
repz
in
outsb
jl
adcl
shlb
cmp
repnz
cmp
push
jecxz
adc
add
lock
push
or
dec
insb
xor
inc
cmp
add
mov
cmp
and
push
add
nop
scas
repz
xchg
cmp
cmp
aad
push
incb
xor
stc
add
sub
stos
nop
fs
fsubr
rorb
inc
adc
cmp
add
into
xchg
loop
fimuls
xor
push
add
fwait
inc
mov
icebp
mov
out
scas
add
arpl
iret
add
adc
fnstcw
pop
loope
shlb
test
push
adc
out
jo
adc
mov
aam
aad
mov
inc
xor
repz
ret
sub
jb
mov
call
xchg
pushf
rorb
cmp
push
or
inc
sub
fiaddl
outsl
scas
add
mov
add
jmp
faddl
stos
imul
cmc
inc
xchg
add
ret
lcall
lock
add
icebp
ss
mov
cmp
xchg
or
mov
sti
dec
clc
xor
ljmp
add
xor
stc
mov
mov
mov
adc
pop
in
jl
add
imul
and
cmpl
fbld
inc
dec
push
loope,pn
mov
scas
aad
push
out
std
jbe
stc
pop
sub
loop
loopne
push
aas
movsb
sbb
inc
imul
cmp
add
sbb
add
popa
into
mov
xorb
pop
mov
ljmp
adc
mov
and
pushf
jmp
and
xlat
and
cmp
add
pop
dec
jmp
dec
or
pusha
popa
inc
movsb
aad
loope
out
out
pushf
push
negb
in
ds
jne
pop
movsb
es
push
or
daa
shlb
add
mov
flds
xor
pop
add
loopne
jl
add
sub
fiaddl
xchg
inc
adc
add
fldt
jnp
ficoms
ljmp
pop
and
daa
lea
push
sete
sub
xchg
vprotb
cwtl
add
sbb
mov
in
add
out
xor
cmpsb
pusha
jns
ss
aas
push
xchg
into
jl
mov
jle
add
notb
jbe
pusha
jne
add
mov
mov
mov
test
orb
testb
sbb
je
in
scas
push
mov
in
inc
dec
jo
fs
loop
add
test
fstpt
mov
mov
mov
repz
push
out
int3
roll
xorl
rclb
pop
jbe
ficoms
push
cmp
xchg
aas
xchg
inc
pop
cltd
or
lock
push
jae
pop
stos
lea
mov
lea
fs
mov
cmpsb
sub
push
call
add
cmp
stos
not
je,pn
and
dec
pushf
sbb
pop
loop
add
add
movl
push
imul
stc
sbb
insb
xchg
les
mov
mov
int3
pop
mov
jo
pop
and
pop
imul
push
mov
add
in
nop
mov
adcb
add
rol
add
loope
daa
test
int
xchg
insb
pop
scas
mov
mov
incl
fs
fwait
push
add
jle
mov
adc
pop
add
jmp
shlb
add
nop
mov
inc
rep
mov
pop
fcom
ljmp
and
fmull
mov
iret
or
pop
sbb
fbstp
add
icebp
ljmp
mov
adc
cmp
add
inc
add
ret
mov
add
push
pop
jg
mov
addr16
in
out
enter
pop
int
add
mov
add
adc
pop
fs
addb
in
in
jno
add
fwait
xor
cmpsb
inc
add
stos
loopew
push
gs
ficomps
data16
add
dec
mov
jg
add
cmp
iret
dec
loope
mov
sub
add
out
mov
movsb
test
dec
or
dec
outsl
ljmp
arpl
pop
repz
add
and
ljmp
ds
stos
fwait
ror
movb
arpl
std
call
jnp
mov
test
stos
popf
fistl
adc
mov
pop
pop
push
cwtl
push
dec
pop
nop
add
arpl
inc
add
jmp
jecxz
xchg
arpl
jns
fmul
add
pop
xchg
int
pop
cmc
dec
outsl
add
dec
leave
sbbb
ret
pusha
xor
add
pop
rorb
jb
sbb
mov
cmp
add
shll
sub
loope
inc
fs
movsb
scas
rorb
jecxz
les
xchg
mov
add
inc
pmullw
cld
addb
sbb
cli
stos
mov
pushf
int3
or
jmp
popf
addb
fnstcw
or
add
stos
test
call
pop
mov
inc
push
jbe
adc
imul
ljmp
fs
in
adc
push
add
orb
push
jmp
adc
fdivs
in
cmp
fidivrs
push
aad
jg
repnz
adc
cmp
sarb
jge
repz
add
adc
xor
call
aam
xchg
or
or
mov
inc
sar
movsl
add
and
mov
int
sub
les
push
test
leave
iret
push
orb
xor
push
dec
lahf
mov
adc
fsub
or
add
pop
fwait
mov
add
xchg
add
and
mov
add
call
sbb
add
xchg
jmp
adc
sub
lods
je
push
push
mov
sbb
xchg
add
cmp
cmp
stos
add
cmp
sbb
xchg
cld
add
shrb
push
pushl
cwtl
sti
shll
add
mov
sub
jnp
pusha
cmp
incl
sub
push
roll
mov
xchg
je
test
fiaddl
push
loopne
nop
add
ss
jbe
add
xor
pop
scas
mull
mov
mov
mov
inc
or
mov
pop
add
push
aad
mov
sbb
xor
ljmp
sub
jge
stos
xor
push
fldl
fistpll
ss
sbb
pushf
cwtl
pop
sbb
pop
pop
dec
clc
dec
and
add
mov
cmp
daa
jmp
test
enter
repz
lret
aas
ret
lock
mov
sti
add
test
inc
pop
movsb
es
add
cltd
jmp
pop
scas
scas
sbb
mov
push
jne
and
or
or
push
nop
pop
pop
jecxz
loop
scas
and
sbb
cld
or
nop
leave
jo
add
cmp
add
sbb
mov
scas
add
push
sub
xchg
or
les
pusha
jl
and
add
jns
xor
mov
push
addb
add
push
cmpsb
or
decl
xor
lock
add
mov
hlt
push
mov
and
sub
add
ljmp
jnp
cmpb
movsb
mov
push
cmpsb
sbb
gs
out
sbb
mov
dec
push
mov
aad
mov
push
call
fnsave
inc
pop
add
les
push
jp
cmp
adc
movsl
fmuls
out
mov
and
add
lods
lret
xor
add
mov
sub
cmc
in
loope
dec
jmp
inc
add
outsb
mov
mov
mov
jns
je
in
hlt
das
or
mov
add
cwtl
add
in
lods
cmp
mov
pop
adc
add
mov
mov
stos
shrl
sahf
jbe
std
imul
lret
outsl
fcoms
sub
popf
inc
mov
add
stc
inc
fdivrs
pop
and
test
test
sbbl
cli
mov
add
mov
push
fs
lcall
rorb
mov
dec
add
je
cmpsb
pop
mov
in
dec
mov
ljmp
mov
jl
add
arpl
push
mov
add
mov
fidivrs
mov
mov
lods
pop
sub
in
inc
popa
push
or
loop
dec
mov
fs
cwtl
ret
add
bound
cmp
lods
mov
cmp
call
mov
jge
fst
out
add
inc
int3
jns
push
loopne
inc
add
pusha
add
outsb
nop
add
cmp
negb
movsb
push
push
loopne
mov
fldl
add
and
and
sub
cmp
es
mov
mov
repnz
and
mov
fistpl
inc
imul
add
pop
add
jns
iret
xchg
xor
xor
mov
pop
das
insl
jo
push
add
push
adc
cmp
js
mov
sbb
jge
add
sub
pop
faddp
inc
mov
xor
leave
or
pop
movsl
filds
mov
sti
or
cmp
push
clc
add
dec
xlat
lret
adc
add
out
xorb
shl
sub
cmpl
lea
jg
mov
push
or
std
sub
in
add
movsl
fnstsw
cmc
cmp
popf
loop
testb
jg
mov
in
int3
sbb
popf
and
cmp
and
jns
movsl
xor
jno
and
fsubs
test
mov
arpl
lods
sub
add
inc
mov
dec
call
mov
rcr
call
mov
inc
scas
jge
test
pcmpeqw
shlb
sti
adc
call
jecxz
imul
rep
or
dec
add
lcall
shl
push
add
fmull
sbb
lods
pop
stc
fcompl
jne
and
ret
xor
fisttps
push
jmp
add
cmpsl
mov
add
mov
pop
or
cwtl
gs
add
pop
inc
insb
dec
fwait
cmpsl
lods
scas
inc
add
add
int
repz
rclb
cltd
popa
add
mov
or
or
std
int3
push
mov
xchg
xor
push
push
cmpsl
lret
pop
jo
push
pop
repz
rcll
mov
fdivrs
cwtl
mov
cmc
push
and
xchg
push
or
cmpsl
inc
jo
xchg
mov
or
cmp
ljmp
push
or
inc
add
lock
ficoml
or
outsl
cmp
cld
adc
inc
and
int
ret
inc
lds
dec
cmp
jns
add
adc
mov
ljmp
pusha
mov
jo
cmp
pop
cld
test
lock
push
insl
addb
lods
add
or
lds
adc
xorb
jle
ds
jae
in
cmpb
pop
test
testb
dec
jg
xor
orl
mov
in
sbbl
add
sarb
sar
push
jo,pt
in
cmp
xchg
pop
fldt
jno
push
pushf
incb
sar
je
loopne
cmp
je
icebp
sahf
inc
fsubs
in
or
in
pop
pusha
cmovno
pop
add
jl
dec
or
fdivl
sbb
push
imul
sub
sbbb
pmaddwd
xchg
aad
cs
inc
rcrb
repnz
cwtl
or
ds
push
or
aaa
lock
push
lods
imul
sbb
xor
into
lods
pusha
in
add
mov
mov
jmp
jp
mov
or
inc
push
mov
dec
xor
mov
out
mov
ret
rorb
mov
scas
pop
mov
aas
nop
movb
popf
mov
mov
adc
js
and
cmp
insb
inc
or
add
xchg
dec
xor
adc
sub
insb
clc
imul
xlat
adc
inc
dec
cmp
and
ljmp
mov
xor
jmp
add
pop
test
out
fildll
push
dec
rorb
and
inc
and
pop
out
into
inc
rcrb
sbb
sub
cmp
shr
dec
mov
add
mov
movsb
insb
inc
cmp
in
push
sbb
sub
ror
in
add
mov
mov
dec
xlat
add
icebp
inc
sar
popf
lds
jnp
cs
clc
xor
aam
mov
mov
dec
push
lods
ds
rcll
inc
ljmp
inc
loopne
xor
sub
add
mov
das
enter
in
sbbb
popa
and
rorb
and
or
adc
sbb
cmpsl
enter
and
mov
inc
inc
and
push
adc
leave
and
or
adc
ret
push
rorb
dec
sbb
ds
fldenv
inc
sbb
es
or
xchg
clc
out
adc
xlat
loopne
nop
jle
add
fldt
dec
sbb
push
fs
clc
ja
mov
into
fidivl
test
sub
push
xorb
jnp
int
xor
dec
pop
pusha
pushf
cmp
adc
lods
and
adc
movsl
xorb
lret
push
push
mov
xchg
movsb
inc
cmpsl
call
mov
pop
xor
pop
jmp
inc
test
xor
and
adc
dec
mov
shll
je
mov
les
les
pop
test
loop
aaa
les
push
jl
cld
sbb
inc
dec
lret
popa
out
inc
shll
js
add
adc
arpl
add
sbb
js
jo
inc
push
and
stc
xor
test
dec
sub
test
push
mov
out
fsubl
in
mov
sub
cli
in
movsb
test
mov
mov
fnstsw
adc
or
mov
es
loope
adc
xor
and
icebp
jnp
adc
les
inc
inc
into
jmp
pop
adc
icebp
add
insb
cmp
clc
mov
jge
lret
jns
pop
adc
mov
jl
aad
loope
repnz
icebp
sub
nop
lahf
and
dec
push
rclb
mov
cmp
bound
xor
mov
clc
mov
push
loope
pusha
inc
cmp
pop
sub
jge
jmp
arpl
jns
xchg
ret
cmp
int
mov
or
jle
call
lods
popa
jle
fsubl
dec
jae
pop
rorb
and
add
jb
je
pop
in
inc
add
ret
mov
fisubl
sub
adc
pop
mov
xor
pop
cld
rcr
cmpsb
push
jp
dec
mov
loopne
sub
fnstenv
loopne
dec
xchg
push
pop
adc
inc
xchg
mov
icebp
jae
imul
movsb
mov
mov
fcmovne
movsb
and
sub
mov
test
and
and
dec
pop
jl
dec
ljmp
ret
shlb
lea
hlt
and
out
mov
daa
adc
into
pusha
jno
jmp
test
jo
mov
sbbl
sbb
test
hlt
jp
cmp
push
mov
ret
adc
inc
sub
inc
mov
sub
aam
pusha
adc
jg
dec
add
lods
push
pop
push
and
aaa
dec
out
leave
jmp
cmc
push
and
lcall
jae
push
test
xchg
popa
pushf
pop
xlat
adc
bswap
test
adc
js
adc
movsb
cmp
and
mov
aas
and
test
es
dec
scas
adc
or
mov
adc
and
xor
into
mov
imul
in
mov
xchg
cwtl
sub
sub
and
adc
mov
jae
mov
jmp
and
fcoms
and
les
les
xchg
sbb
adc
or
fdivrs
push
dec
aam
sbbb
add
sub
andb
ret
test
imul
mov
orb
pop
sub
cmp
inc
mov
jecxz
ret
add
loopne
inc
mov
test
enter
addr16
inc
movsb
inc
les
mov
scas
rolb
sbb
xchg
mov
mov
inc
dec
popa
push
test
lods
popa
jns
mov
stc
pop
xor
mov
inc
in
or
cmp
and
add
loopne
aad
orb
jae
adc
xchg
push
rorl
sarl
js
cmp
jb
sar
ds
dec
cmp
or
out
cltd
xchg
leave
cwtl
or
xchg
rorb
jb
sub
mov
cmpsb
adc
mov
xchg
ret
sbb
cmpsl
xorl
test
mov
mov
sbb
mov
xor
or
xchg
mov
mov
ret
push
and
pop
mov
loope
movb
outsl
les
push
cwtl
sbb
sub
cwtl
mov
xchg
movsl
xlat
xor
pop
ljmp
in
sbb
mov
jl
loopne
sub
jbe
cmpsb
cmp
sbb
lods
movsb
add
clc
cmp
inc
notl
outsl
pop
cpuid
je
xor
clc
pop
mov
cltd
xchg
add
hlt
sar
int3
test
mulb
xor
sub
cwtl
jns
mov
insl
sub
jmp
dec
cmp
sbb
je
adcb
xchg
add
adc
add
ss
daa
les
movsb
jmp
cmp
push
lcall
push
mov
mov
lds
popa
sub
xor
and
push
or
mov
iret
cmpb
sbb
stc
js
and
sub
pop
daa
inc
imul
cmpsl
xchg
add
xor
xchg
add
sub
and
pop
xchg
or
lds
and
stc
mov
gs
or
popa
mov
nop
insb
add
adc
bound
push
cmpsb
add
repnz
bound
xor
push
push
cwtl
lcall
js
sbb
clc
adc
addb
mov
add
sub
cmp
fcmove
adc
push
rorb
jbe
test
inc
cmp
pop
push
xor
dec
mov
and
pop
filds
sahf
mov
movsl
inc
daa
and
push
cld
dec
push
jmp
cmovbe
cmp
ret
adc
mov
fists
call
mull
sbb
pop
es
pop
shlb
je
hlt
jmp
add
mov
dec
nop
je
movsl
sbb
incl
push
sub
cs
aaa
loopne
pop
add
mov
in
add
call
fidivl
es
dec
push
fcoms
cwtl
xor
pop
test
push
inc
lret
inc
daa
shlb
dec
or
mov
pop
out
pop
hlt
mov
cmp
lods
mov
or
sbb
repz
mov
mov
lret
sub
sbb
nop
test
mov
dec
and
add
or
jmp
es
roll
call
insl
xor
add
icebp
popa
mov
or
xorb
mov
add
mov
mov
out
add
cwtl
lods
scas
sbb
cwtl
test
fdivrl
cmp
mov
dec
dec
nop
mov
pop
xor
mov
mov
lret
test
out
and
mov
xchg
addr16
mov
pop
pop
adc
daa
dec
inc
mov
jae
rclb
mov
les
es
lcall
sub
dec
or
mov
ds
nop
and
adc
cld
repnz
es
das
push
les
loopne
mov
dec
jno
test
unpcklps
push
and
fs
mov
add
sub
fmuls
insl
dec
push
rolb
je
daa
and
adc
or
pop
or
sbb
pop
leave
sub
hlt
stc
cmp
repnz
and
dec
fstps
cs
stc
rorb
mov
andl
insb
bswap
cmp
scas
subl
adc
jnp
push
inc
jne
fs
imul
mov
outsl
sub
es
push
outsl
movsb
pop
push
adc
add
sub
xchg
jl
clc
dec
xor
test
jno
adc
sbb
sbbb
daa
fsubrl
fidivl
movsb
xor
into
jo
gs
fwait
icebp
fsubl
xchg
xchg
mov
cli
stos
inc
jl
lock
inc
mov
movsl
fcoms
mov
hlt
cmpsl
and
adc
add
mov
hlt
out
repnz
xchg
add
mov
dec
mov
mov
pop
and
ret
add
imul
sub
flds
dec
incl
in
push
or
and
sbb
xchg
mov
popa
pushf
or
push
cwtl
js
push
xchg
aam
out
lret
lods
mov
mov
fisttpl
dec
cmp
pop
push
negl
sbb
mov
in
daa
cmpb
lea
xchg
js
push
jo
push
sbb
xchg
pop
add
aaa
push
orl
pop
ds
lods
mov
and
push
subl
les
mov
xchg
fnstcw
aas
repnz
xchg
pushf
add
sub
es
adc
pusha
sub
rcl
fistps
or
adc
jl
inc
add
xor
mov
cld
sbb
inc
lds
cmp
mov
ret
jle
je
imul
loope
push
pusha
pop
push
inc
xor
mov
pushf
inc
sub
adc
push
das
popa
test
ds
les
test
movsb
jb
dec
int3
nop
push
dec
xor
mov
pop
movsl
cmpb
xchg
or
jmp
loope
dec
pushf
lds
xor
test
pop
out
dec
pop
ret
in
int3
pushf
mov
adc
mov
int3
mov
xchg
enter
or
insl
fsubrp
sbb
jp
mov
mov
mov
push
push
add
aas
xlat
jmp
movsl
xor
inc
js
decb
and
enter
xchg
call
mov
sub
test
and
sub
les
add
js
test
ljmp
shl
in
js
mov
shrl
sub
push
popf
xchg
and
shrb
push
xchg
cld
nop
xchg
fwait
test
jl
adc
aam
adc
fmuls
sub
jnp
inc
push
mov
movsl
and
mov
rol
xchg
fwait
daa
push
cwtl
sbb
add
lret
xchg
push
cld
scas
inc
adc
pop
clc
sarb
fdivr
adc
daa
insb
mov
fsub
push
pop
xor
ds
movsl
sub
in
in
ret
pushf
adc
loope
sbb
inc
test
sub
xor
adc
mov
sbb
repnz
cmpsl
lock
pop
loop
dec
jmp
or
cmpsl
adc
pop
adc
sbb
lods
fisttpl
imul
cmp
imul
movsb
jp
add
push
add
xor
adc
push
add
cld
rcrl
inc
and
or
mov
cmp
ret
mov
or
xchg
frstor
xchg
inc
fmull
shll
jno
adc
jl
pushf
or
js
sbb
adc
ds
adc
sub
pop
call
push
mov
jns
ss
in
shlb
cmpl
pushf
loopne
sbb
xchg
jo
call
enter
push
jno
mov
and
xor
inc
cmpsb
pop
rolb
mov
bound
adc
add
andl
pusha
into
jno
pop
cmc
cltd
pop
or
mov
imul
nop
xor
rclb
mov
add
add
mov
jl
popf
add
mov
stos
jo
ds
cmpsl
sub
or
js
shlb
popf
mov
test
add
xchg
dec
xlat
pop
je
sbb
or
loopnew
ds
lds
les
cwtl
movsl
xor
loope
pop
mov
sub
pushf
dec
or
loopne
movsb
mov
jo
je
pause
pushf
add
in
push
mov
or
mov
jno
adc
ljmp
and
sbb
addr16
xor
inc
lahf
loopne
push
out
add
pop
insb
loop
lds
les
jno
js
add
sub
adc
adc
out
push
pushf
bound
sbb
stos
and
stc
jo
fcoms
sub
out
push
js
in
inc
adcb
adc
je
jmp
push
xor
lods
xor
xor
js
or
jle
imul
and
inc
push
sub
lret
inc
push
mov
jmp
xchg
or
in
fbstp
mov
inc
add
fwait
je
ret
mov
pop
iret
subl
mov
add
enter
or
pop
ret
lock
insb
and
in
mov
inc
mov
jecxz
andb
xchg
mov
xchg
inc
mov
pop
cmp
leave
jmp
pop
xor
inc
mov
pusha
out
clc
inc
nop
pushf
dec
or
in
xchg
or
test
and
push
mov
mov
shll
xor
xchg
nop
adc
mov
lds
in
lods
js
nop
xchg
xor
enter
insb
adc
dec
mov
test
cmp
xchg
cltd
dec
mov
adc
sub
adc
sub
pop
enter
shlb
xchg
push
sub
sbb
lahf
mov
mov
sbb
mov
cmp
dec
xchg
push
nop
cmp
imul
pop
call
dec
aad
add
mov
pop
je
rclb
dec
pushf
clc
or
lods
mov
and
sbb
clc
and
sti
xchg
add
call
in
pop
jbe
lcall
dec
adc
fnstenv
and
sub
aas
nop
mov
push
clc
lds
mov
adc
and
xchg
je
in
pusha
xchg
mov
inc
inc
inc
push
cld
push
fdivs
ds
inc
adc
mov
lds
clc
mov
sub
xor
orb
mov
inc
imul
sub
dec
adc
xchg
or
adc
addb
aaa
arpl
mov
dec
dec
mov
mov
and
and
repz
movsb
inc
imul
pop
leave
subb
mov
dec
fistpll
jb
cltd
aam
mov
mov
cmpsb
xor
jns
scas
cwtl
and
push
xor
add
out
mov
jo
mov
rcr
js
adc
and
aas
das
scas
clc
clc
popf
add
in
inc
in
add
push
fcomps
repnz
and
fbstp
inc
mov
dec
pusha
push
adc
fdivrp
mov
jnp
inc
xlat
ficoml
lret
mov
dec
sub
fwait
sbb
les
xchg
inc
dec
insb
adc
or
lods
sub
sub
pop
dec
or
test
or
dec
daa
shll
lock
push
rorb
sbb
or
popf
nop
call
sub
lret
and
icebp
mov
daa
pushf
sub
je
int3
and
cmpsl
enter
pop
test
adc
in
out
cs
xchg
adc
sub
int3
xor
sbb
inc
xchg
test
loopne
mov
inc
mov
xchg
push
or
enter
pusha
js
lahf
cmp
loopne
jmp
pop
inc
fs
jl
xchg
adcl
mov
ljmp
inc
sub
cmp
jns
pop
mov
jae
dec
mov
jp
inc
andb
and
leave
push
xchg
inc
pushf
cmp
xor
negb
cmp
push
pop
and
shrb
sahf
push
mov
loopne
jne
jl
mov
ljmp
icebp
pop
rolb
inc
addr16
jecxz
mov
and
dec
add
pop
daa
std
push
pop
mov
push
leave
add
sbbb
lods
dec
inc
insl
orb
movsl
push
inc
push
cmp
mov
mov
or
and
sbb
shlb
lea
jg
pop
push
jns
and
jns
hlt
mov
push
add
mov
rol
add
insb
sbb
push
xor
rorb
sub
mov
dec
mov
int3
incb
cmp
sub
or
test
jne
test
fdivrs
add
pop
or
daa
mov
dec
enter
dec
fs
jmp
add
sbb
test
das
inc
enter
bound
sbb
iret
fistps
jl
int
mov
cmpsl
push
lahf
inc
jg
dec
aas
fnstenv
sub
ret
and
pop
es
mov
mov
mov
lods
sub
jns
jno
jp
insb
cmp
in
cltd
mov
and
mov
in
das
test
shll
fs
jbe
xlat
mov
lods
jp
in
push
mov
les
rolb
mov
inc
je
icebp
or
int
mov
imul
lea
cs
and
jl
xchg
dec
sub
repnz
mov
sub
les
add
jne
enter
leave
xor
or
out
pusha
mov
and
inc
jae
mov
cmp
push
outsb
test
sub
popf
sub
cmp
or
fcoml
add
dec
lahf
cmp
xchg
dec
int
sub
sub
pushf
inc
adc
aas
jl
lea
addl
roll
dec
movsb
jbe
xchg
int3
sbb
xchg
aam
xchg
mov
push
or
test
xchg
pop
mov
push
test
mov
pusha
mov
jle
je
lds
jmp
add
pop
adc
mov
loope
adc
dec
in
ret
flds
int3
in
daa
mov
adc
cmp
stc
in
pop
andb
mov
add
sub
aas
out
mov
outsb
and
movsl
pushf
or
jmp
xor
lods
pop
cmpsl
and
out
mov
xor
cmp
ret
test
sub
xchg
mov
imul
and
inc
scas
sub
nopl
inc
data16
pop
or
js
pop
pop
pusha
insb
ficompl
add
lahf
cmp
sbb
push
cmp
dec
xlat
insb
push
sbb
jl
and
add
jge
adc
jae
rolb
leave
sub
jle
push
cmpsb
adcb
fsts
adc
or
and
sub
cmp
push
cmp
clc
lods
or
cvttps2pi
mov
lret
icebp
out
mov
leave
jo
jb
mov
adc
add
add
add
popa
adc
js
sub
mov
aam
add
inc
pop
lret
sbb
adcl
scas
sub
test
and
mov
cli
push
adc
mov
cld
dec
stos
adc
adc
leave
les
sbb
or
lods
in
inc
test
sbb
ret
jo
xor
xchg
insb
add
ret
pop
pop
lock
push
mov
mov
mov
mov
lods
or
das
in
sbb
dec
pusha
leave
ret
inc
sbb
das
and
push
cli
pop
sbbb
mov
sub
pop
aad
add
enter
mov
add
cs
xchg
in
pusha
xchg
bound
mov
test
or
push
insb
adc
mov
or
add
inc
sbb
push
add
add
fsubl
mov
out
xchg
pop
xor
pop
hlt
and
loope
call
inc
push
js
jp
es
leave
aas
in
inc
lahf
popa
pop
stc
out
push
dec
mov
push
frstor
adc
pop
cmp
sub
das
ds
pop
jo
sub
pop
mov
or
push
sarb
or
xchg
xchg
fildl
enter
xor
push
call
sbb
sbb
call
jnp
mov
pop
xor
and
xor
xchg
lock
sbb
push
insl
push
inc
loope
nop
sbb
nop
pop
pusha
sub
mov
enter
inc
enter
sub
idivl
movsb
test
mov
and
jmp
test
pop
sub
and
pop
cld
jno
aas
cmp
lret
ret
sub
in
fcoml
fsubrp
inc
push
ret
pop
push
or
mov
inc
xchg
jb
mov
clc
or
xor
aam
xor
pop
xchg
mov
subb
cmp
sarl
mov
push
dec
les
mov
rclb
adcb
jbe
popf
insb
sarb
dec
or
jo
pop
or
push
or
mov
fstpt
cmp
jb
shrd
icebp
push
faddl
jg
mov
dec
xchg
cmpb
xchg
xor
out
xchg
andb
xor
mov
mov
bound
jo
mov
movsb
and
or
clc
sub
mov
clc
pop
push
pop
dec
std
repnz
sub
push
popl
dec
adc
dec
mov
or
push
mov
icebp
add
inc
int3
ret
lods
ljmp
push
lock
adc
and
mov
fcoms
or
adcl
inc
es
dec
mov
push
dec
fdiv
mov
in
mov
mov
ljmp
imul
ds
sub
cltd
cld
cwtl
inc
cmp
xor
pop
cwtl
int3
lods
jle
sub
addr16
cmpsb
jbe
xor
mov
inc
jno
xchg
and
dec
push
mov
lds
lods
hlt
lds
lret
and
shrl
adc
pop
das
adc
push
notb
adc
jge
stos
push
xor
fldcw
icebp
or
sub
pop
cmp
mov
sub
mov
ficoml
das
data16
outsb
xor
pop
mov
int
imul
or
in
cmpsl
test
ds
mov
jo
das
push
ja
sbb
lock
clc
xor
pop
mov
add
xchg
or
cmp
adc
xor
dec
xlat
push
les
pop
add
mov
inc
jmp
cwtl
mov
sub
sahf
mov
mov
mov
cmpsb
andl
push
hlt
mov
mov
daa
push
add
or
and
nop
mov
mov
push
test
jmp
sub
sahf
enter
in
sub
bound
icebp
addr16
out
test
add
xchg
shl
out
add
outsl
jno
or
inc
add
jmp
add
cld
pop
jmp
shrb
imul
jns
sbb
sti
pop
xchg
push
xor
xor
sub
sahf
popf
hlt
jmp
mov
mov
pop
ja
sbb
in
sub
in
andl
or
or
add
pop
jecxz
std
test
jns
in
cmp
xor
sub
sub
adc
leave
jae
sbb
push
idiv
test
adc
mov
jmp
stos
hlt
mov
add
lods
dec
into
sub
lock
pop
mov
xchg
push
shlb
out
clc
mov
sub
add
xor
lock
sbb
scas
xchg
mov
test
xor
cltd
cmp
in
or
fneni(8087
icebp
les
jns
xchg
xor
dec
rorl
lahf
sarb
test
clc
or
and
mov
sub
jmp
add
test
dec
lcall
pop
sub
xchg
dec
sbb
sbb
stc
arpl
and
inc
xchg
mov
out
push
jmp
in
inc
mov
pusha
test
mov
dec
ficoms
shll
jecxz
adc
sbb
mov
sub
or
mov
mov
mov
subl
movsb
dec
xchg
add
xor
or
sbb
jns
xor
xchg
add
fptan
or
inc
js
sub
ficoms
dec
adc
mov
bsr
hlt
mov
or
popf
sbb
stos
mov
das
xchg
cmp
mov
inc
sbb
sub
lock
lods
dec
ljmp
xorl
adc
push
cwtl
push
arpl
rolb
stos
imul
ja
jl
call
sbb
popa
pusha
add
cmp
repz
xor
and
fs
adc
fsubr
push
roll
ffreep
xchg
sub
lods
addr16
mov
enter
inc
push
jno
notl
pop
cmpb
nop
push
inc
enter
push
insl
es
or
out
sbb
sbb
xchg
fists
test
pop
xor
xchg
sub
adc
movsb
sbb
fadds
hlt
cmp
faddp
jae
xor
mov
inc
mov
sub
cwtl
int3
aam
xchg
adc
shr
gs
add
xor
jns
fcmovnb
mov
push
sub
jae
add
rclb
xor
icebp
add
aas
cmpsb
fisubl
mov
add
in
movsl
and
pusha
mov
pop
jnp
or
dec
cmp
subb
es
adc
dec
dec
aad
inc
test
push
push
add
mov
add
and
les
inc
adc
ds
scas
adc
std
cwtl
fsts
outsl
xor
add
push
push
js
push
and
pusha
pop
stos
call
addr16
aaa
out
xchg
and
mov
es
pop
or
cs
mov
mov
jmp
jnp
mov
mov
inc
pop
push
dec
jae
pop
das
or
pop
sbb
sbbl
xchg
push
mov
dec
stc
cwtl
xlat
mov
mov
pop
jno
sub
sahf
sub
sbb
mov
push
nop
dec
mov
ret
out
shlb
ss
imul
daa
cli
addr16
icebp
inc
mov
add
loope
popl
and
test
jbe
hlt
pop
jge
cld
notb
and
xor
mov
jns
xchg
stc
orb
add
mov
push
and
popa
fstp
dec
iret
test
and
xor
and
aad
xchg
icebp
or
xor
dec
pushf
sbb
and
xorb
pusha
and
pushf
or
fmuls
cmp
fstpt
add
mov
add
jl
push
add
push
or
add
sub
or
pop
adc
ror
xchg
fmulp
popa
inc
mov
push
lahf
adc
add
fsubr
and
cmp
shlb
or
mov
stc
pusha
nop
mov
push
inc
pop
dec
and
rolb
mov
insb
insl
and
mov
dec
mov
push
sbb
test
mov
inc
adc
cltd
jae
test
mov
test
lock
rcrb
cmp
out
test
push
jns
mov
jle
dec
iret
mov
cltd
daa
js
enter
aad
inc
pop
test
fnop
xorl
arpl
rolb
push
and
pop
loopne
aam
fmul
xor
adc
sub
inc
addr16
sbbb
add
dec
add
mov
xor
xor
in
shlb
pop
mov
xor
xchg
sti
jl
stc
xor
inc
sub
jge
sub
sub
mov
fcomps
scas
outsl
icebp
inc
imul
pop
dec
dec
xchg
leave
inc
pop
xor
and
mov
inc
lock
pusha
shll
inc
mov
mov
addl
jmp
mov
push
and
mov
leave
add
andl
sub
push
push
test
xchg
xor
fbstp
push
enter
or
or
jg
ret
adc
xchg
repz
pushf
arpl
mov
andb
fisttpll
dec
and
mov
push
mov
inc
push
mov
and
mov
cmp
in
ret
jmp
mov
fwait
es
fmuls
or
pop
in
sbb
sub
je
or
ss
imul
mov
pop
or
rorl
or
cwtl
xchg
jmp
call
sub
mov
adcb
dec
jge
into
xorb
sub
out
xor
sub
adc
clc
xor
inc
pop
xchg
xchg
jb
call
or
inc
sbb
cmpsb
pop
rclb
les
fs
ja
xorb
loopne
jge
or
pop
ljmp
lret
pushfw
sub
ss
add
push
test
mov
rolb
rorl
test
cmp
mov
pusha
jo
bound
jmp
inc
jbe
or
sbb
popa
push
sub
out
add
mov
push
jl
adc
inc
stos
pop
and
sti
inc
insl
push
jp
mov
inc
fdivl
xchg
sarb
cwtl
add
adcb
pop
adc
xor
pop
push
mov
dec
jo
adc
lock
add
les
enter
push
inc
iret
notb
dec
fsub
clc
and
fildl
shl
jle
addb
pop
aam
pop
divl
ret
mov
enter
mov
push
sbb
jno
mov
sub
lods
adc
xor
clc
push
mov
or
and
addl
mov
fsts
in
dec
jge
push
add
lock
fmuls
sbb
and
add
mov
mov
pop
push
jo
test
dec
pop
pushf
ja
push
add
and
sub
out
popa
faddl
fidivrl
adc
cld
lcall
aam
add
fmull
fstl
xchg
xor
dec
icebp
adcb
mov
aaa
cmp
fsubrl
and
push
and
in
fstps
and
sub
mov
mov
sbb
xor
adc
xor
pop
adc
xchg
pop
andb
mov
das
mov
repnz
jo
dec
mov
in
subb
jmp
mov
xchg
fidivs
lea
popa
add
lret
push
pop
sbb
lock
adc
mov
or
dec
and
lahf
lock
push
sub
pop
clc
xor
pop
outsb
mov
xor
jo
rolb
push
stos
jp
and
mov
xchg
insl
sbb
arpl
jb
inc
or
mov
pusha
dec
test
adc
adc
mov
mov
push
mov
sbb
movsl
jae
xorb
mov
out
rol
das
and
mov
dec
rorb
push
pop
xor
dec
cmp
push
andb
out
add
dec
imul
adc
push
enter
into
outsl
jnp
or
sbbb
mov
push
mov
adc
dec
xchg
mov
ljmp
iret
and
ds
aaa
pushf
dec
xchg
sub
jae
add
out
xchg
or
xorl
mov
ss
jb
cmp
or
pop
or
adc
add
xor
enter
bound
add
clc
nop
mov
jecxz
pop
fsts
shr
ficomps
pop
xlat
add
lock
mov
inc
dec
out
xchg
sbb
mov
shll
xorl
fs
shll
int
sar
add
into
dec
stos
repnz
push
add
jle
mov
push
cmp
and
mov
cwtl
mov
mov
add
repnz
mov
xor
stc
out
add
jg
nop
mov
push
cmpsl
or
pusha
xchg
inc
mov
cli
or
int
mov
push
pop
fistpl
decl
scas
mov
fildl
xchg
push
mov
pop
cltd
mov
mov
mov
mov
mov
dec
jg
ret
cmpsb
in
punpcklbw
insl
pop
jmp
js
mov
inc
add
fistpl
repnz
add
popa
or
inc
mov
push
pop
or
dec
jl
fs
push
or
lock
fistps
cmpsl
cmp
sub
fwait
nop
add
mov
mov
xchg
movsb
andb
xor
cwtl
adc
insl
cmp
shlb
fs
xchg
mov
sti
adc
jno
inc
mov
jl
cwtl
or
mov
add
adcl
inc
push
xor
pop
shlb
imul
lret
loope
mov
or
pushf
push
hlt
out
cmp
clc
push
fwait
lock
pop
loopne
inc
pop
std
andl
push
ror
popa
push
in
xchg
dec
imul
pusha
inc
fwait
out
pop
cmp
push
or
adc
call
or
call
cld
in
scas
pop
push
arpl
js
pop
lds
out
rclb
sbb
sbb
mov
lahf
push
rclb
or
adc
addl
loopne
xchg
aad
test
sub
loop
push
inc
fisttps
xor
sub
cmp
int
sub
push
mov
adcb
push
pop
add
mov
fnstcw
xor
repz
scas
stc
repnz
jl
push
gs
adc
pop
sbb
or
inc
hlt
mov
xor
pop
pop
jl
xor
rcrl
push
shlb
or
dec
negl
leave
loope
call
gs
cmp
adc
aaa
lock
gs
std
mov
xchg
aaa
mov
mov
sbb
xchg
xchg
adc
lock
adcb
jg
fmuls
inc
sub
popa
sub
sub
mov
sub
pop
adc
pop
int3
jns
add
dec
cmp
outsl
sub
sar
add
lock
push
add
xchg
stos
xchg
outsl
jno
sbb
enter
xor
jae
addb
mov
and
mov
or
or
push
stos
push
add
xchg
test
shll
cld
orl
mov
or
adc
xchg
test
dec
notl
adc
loopne
xchg
and
dec
stos
ret
movsb
xor
cmp
cmp
xchg
push
cmpsb
lret
or
dec
inc
jbe
xchg
ljmp
cmp
jns
pop
das
shlb
dec
sub
aad
inc
loopne
in
popa
dec
sbb
aam
pop
push
inc
mov
push
les
int3
mov
mov
push
orl
xchg
and
mov
xor
mov
push
cmpsl
mov
push
std
xchg
and
sub
xchg
mov
add
jns
andb
out
je
xchg
xchg
stc
push
insl
cmp
gs
sbb
flds
adc
xchg
andb
mov
xorl
dec
shrb
dec
adc
mov
adc
add
push
dec
inc
dec
jp
icebp
out
or
shll
push
push
mov
ret
pop
pop
jbe
mov
sahf
and
sarl
xchg
aaa
mov
add
xor
popa
push
call
push
adc
jl
scas
pusha
inc
mov
mov
xchg
xor
test
outsb
or
jnp
fmull
sub
daa
out
inc
push
stc
and
mov
in
xor
pop
loopne
nop
jmp
rcrb
jae
lods
cmpsl
in
add
jmp
or
adc
jmp
nop
jge
mov
repnz
cmp
sbb
push
xchg
andl
ds
mov
sbb
and
adc
icebp
mov
and
and
xor
push
rcrb
adc
cmp
sub
std
arpl
fbstp
lock
add
mov
outsb
pop
mov
dec
pop
add
xlat
mov
shlb
ret
mov
lods
push
sub
cmpsl
xchg
inc
push
dec
rcll
adc
stos
and
imul
add
jo
addl
mov
mov
andl
pushf
add
out
push
call
fsubl
loop
xchg
push
jbe
pop
push
addr16
out
cmp
loopne
cli
mov
lahf
loope
js
fistl
inc
add
inc
sbb
sbbb
jae
adc
fsubrl
add
inc
xchg
sub
outsb
out
ret
dec
or
adc
and
fs
sbb
nop
js
data16
movsb
insl
and
cs
xor
sbb
ret
sbb
bnd
and
pop
int
and
dec
cld
sub
jns
popf
ljmp
and
cmp
mov
leave
arpl
cmp
in
loopne
clc
mov
imul
mov
cli
ret
cltd
pop
fld
push
jns
jl
or
mov
repnz
insb
xchg
xor
adc
mov
adc
add
pop
lock
adc
xor
xchg
movsl
sub
sbb
xchg
push
popf
js
sbb
add
sub
shll
ret
adc
into
lahf
pushf
pop
sbb
enter
add
and
mov
popf
jno
andl
push
inc
push
push
lock
add
mov
pop
and
inc
sub
xor
or
dec
mov
sbb
jae
imul
std
mov
xorb
jp
sbb
out
or
mov
pop
mov
sbb
jge
fstps
mov
hlt
bound
rcll
add
xchg
shlb
aad
xor
into
or
or
add
jno
pop
ret
push
repz
mov
pop
daa
mov
mov
push
repnz
mov
and
xchg
leave
or
mov
mov
cwtl
cmovg
stc
mov
mov
mov
push
sahf
ds
cmp
sbb
popa
cmp
lea
popf
mov
roll
mov
push
mov
imul
dec
mov
or
mov
dec
hlt
jp
push
cli
push
data16
pop
js
mov
pusha
sub
sbb
push
cmp
pop
mov
dec
pop
and
mov
add
mov
add
add
dec
mov
adc
xor
or
mov
aaa
mov
fiadds
xor
dec
adc
mov
add
push
sub
sbb
test
pop
and
imul
inc
mov
and
add
add
push
pop
push
nop
les
mov
movsb
insb
int
je
mov
rolb
popa
mov
mov
push
push
push
pop
icebp
mov
sbb
xor
or
inc
add
sbb
pop
lcall
pop
shrb
popa
ud0
mov
add
push
std
ss
and
loopne
pop
sbb
dec
std
rcrb
roll
pop
loop
int3
sbb
jp
add
and
xlat
mov
addl
or
xor
cwtl
or
insb
pop
shlb
jno
push
cmp
xor
test
push
sbb
xlat
pop
and
sub
ds
sub
add
es
sub
fld
fadds
mov
mov
inc
ds
popf
aaa
outsb
rol
insb
negl
add
inc
and
add
into
orb
lock
fxch
jb
loopne
aam
clc
cmp
pusha
cmpb
pop
mov
pop
popa
mov
xchg
mov
xor
std
push
push
daa
mov
adc
cmc
repnz
addr16
mov
mov
cli
cld
add
mov
pop
add
mov
mov
and
mov
add
mov
xchg
dec
lds
or
pop
sahf
mov
sub
cmp
pop
es
dec
lock
lea
add
stos
jns
mov
cmp
or
mov
sbb
adc
adc
dec
andl
cmp
or
mov
sbb
loope
lcall
adc
inc
sbb
aad
add
in
rorl
pop
mov
pop
cmp
ret
jnp
cwtl
and
ret
and
repnz
andb
test
mov
adc
fbstp
je
inc
and
sbb
lock
sahf
roll
jnp
mov
and
pop
push
mov
mov
fsubs
inc
mov
pop
inc
icebp
or
mov
xchg
sbb
xor
sbb
xchg
nop
sbb
inc
fdivl
out
popl
cwtl
lea
sub
in
scas
mov
inc
and
mov
dec
push
adc
and
add
test
in
adc
fadds
lods
adc
loope
pop
stos
mov
addb
add
fadd
xlat
xchg
inc
dec
and
mov
and
and
sub
sbb
mov
xchg
adc
push
shlb
inc
in
jns
and
mov
mov
pushf
pusha
popa
inc
in
aaa
test
aam
sub
cwtl
dec
push
push
fistpl
and
clc
andl
pop
jae
lret
sub
mov
add
and
fnstcw
cmp
jecxz
mov
mov
cltd
pop
sbb
sarl
jl
or
test
mov
loopne
adc
dec
mov
xor
cmpsb
cmp
push
ds
add
aad
ljmp
inc
sbb
and
adc
fadds
push
add
sbb
movsl
fwait
xor
stc
or
sahf
and
into
notb
lea
rcrb
aas
or
sub
push
in
or
sub
test
fldl
dec
mov
push
dec
xchg
adc
push
movsb
xchg
push
xor
loope
dec
dec
rorl
mov
inc
rorb
aam
pop
sti
inc
in
inc
and
fs
int3
sub
push
rolb
jecxz
pop
enter
push
pop
lods
add
stos
xor
inc
rolb
sub
xchg
sbb
fmulp
dec
je
adc
inc
and
call
inc
pusha
in
shrl
pop
ret
fcoms
pop
pop
mov
and
mov
adc
inc
dec
cs
mov
fadds
sbb
or
loopne
dec
sub
inc
cmpxchg
jno
ret
mov
clc
push
iret
icebp
inc
dec
popa
and
roll
and
cs
mov
aaa
roll
add
test
adc
fs
out
popa
incb
or
push
inc
pop
add
orl
test
mov
dec
adc
xchg
sub
or
add
cmp
cmp
stc
push
cld
icebp
and
outsl
out
inc
lock
pop
or
add
pop
testl
or
fcomps
jp
inc
loope
pop
and
hlt
mov
jae
test
inc
push
mov
push
add
adcb
push
adc
mov
std
push
mov
push
inc
fwait
shll
push
or
cltd
mov
movsl
test
jge
lods
push
push
sar
popf
pop
add
test
mov
fnstcw
scas
cld
movsl
pusha
insb
push
les
xchg
test
mov
or
es
jae
adc
adc
mov
fildl
cmpsl
clc
js
das
inc
and
push
adc
push
ret
push
add
xchg
std
fdivrl
mov
pop
in
jecxz
in
add
push
out
fwait
cmpsb
adc
push
test
mov
push
mov
mov
call
dec
in
mov
push
ds
dec
push
fnstsw
call
or
mov
mov
jge
xchg
lock
faddl
clc
pushf
mov
lea
mov
adc
addr16
adc
mov
stos
mov
mov
cmpsl
dec
jbe
jge,pt
mov
fcoms
pop
loopne
lret
sub
cmpsl
rcrl
or
inc
push
psrad
or
into
and
fdivrs
jg
xchg
ljmp
idivb
adc
cmp
mov
ret
sbbb
ror
add
outsb
pop
cli
aas
mov
pop
int
icebp
sub
mov
or
insb
data16
clc
xchg
cs
rcr
sub
add
das
in
lahf
sub
clc
loopne
pusha
std
mov
icebp
enter
adc
cmpsb
fistpll
mov
mov
inc
jl
repz
movntq
js
insb
and
cld
push
aam
roll
fsubr
incl
jle
out
icebp
fdivl
sar
mov
or
lock
jg
in
push
push
std
and
stos
ds
cld
push
in
add
jmp
jp
mov
arpl
pop
adc
mov
and
jp
cld
push
hlt
mov
xchg
cmp
test
mov
push
clc
mov
loope
stos
ljmp
dec
das
xor
cmpsl
and
xor
nop
xor
and
dec
push
inc
nop
inc
sub
je
pop
sahf
push
cli
js
leave
jle
mov
push
push
adc
xchg
cwtl
ficoml
inc
dec
sbb
inc
xchg
or
add
adc
mov
in
or
dec
adc
mov
xchg
cmp
scas
inc
in
adc
test
sub
or
mov
in
das
adc
test
mov
movsl
bound
adc
push
insb
pop
mov
popf
inc
dec
adc
fdivs
test
or
inc
add
lret
or
sbb
mov
adc
les
or
inc
adc
pushf
test
and
jge
test
fsubs
adc
mov
xchg
mov
push
inc
mov
lods
or
or
mov
int
adc
inc
adc
mov
adc
xor
push
adc
test
or
cmp
pop
mov
cli
mov
adc
adc
sti
sbb
inc
test
rclb
cmp
test
cmp
outsl
ret
or
or
and
adc
sub
test
and
or
add
jmp
mov
std
or
ret
and
sbb
xchg
add
jbe
call
cmpl
mov
out
jecxz
and
sbb
fadd
pop
mov
sub
or
adc
xchg
xor
je
push
push
sub
mov
inc
or
popf
ret
sarl
adc
inc
and
arpl
push
and
push
push
add
or
sub
outsb
lea
or
mov
sbb
pop
loope
pop
jge
add
jo
adc
add
jmp
in
add
aad
jnp
add
test
xlat
adc
ljmp
int
out
sub
pop
mov
xchg
scas
clc
mov
cmc
in
nop
bound
inc
push
mov
add
jns
stos
call
inc
clc
push
or
xor
or
test
mov
inc
rcll
jmp
add
aad
les
mov
cwtl
xchg
popf
pop
jb,pn
das
fcmovb
lock
xchg
add
push
xor
inc
or
or
add
cli
pop
pop
ret
add
adc
das
leave
xorl
add
sub
dec
fnstcw
andb
xchg
mov
or
push
add
add
add
adc
add
shl
or
adc
movsl
sbb
add
mov
mov
and
mov
movsb
sub
clc
xchg
jo
pop
add
std
sub
inc
orb
nop
mov
jns
cmp
ds
sbb
jl
loopne
sub
mov
mov
jns
iret
cmpl
ret
ret
shlb
in
lock
or
lock
push
fdiv
jecxz
sahf
lret
in
pusha
movsb
jns
push
int3
push
repz
lods
in
dec
adc
stc
add
xchg
mov
push
xor
adc
enter
es
jnp
std
and
sbb
lods
xor
fdivl
mov
shrb
mov
stos
rclb
push
das
aas
repnz
or
and
or
out
pop
in
lea
mov
xchg
shrb
les
sbb
aam
mov
mov
arpl
test
pop
cmpl
xchg
add
in
cmp
pop
add
rcrb
mov
cmp
push
adc
leave
and
dec
mov
add
mov
test
lock
sub
adc
jae
loop
sub
ds
dec
out
add
shrb
or
aad
add
std
add
add
pushf
in
dec
pop
add
cltd
pop
mov
rcrb
add
push
data16
addr16
sub
rorb
nop
mov
push
rcll
in
or
and
addl
add
add
ret
sub
xchg
imul
addr16
xor
add
loopne
or
push
mov
mov
add
pop
test
aam
ljmp
orl
cmpb
scas
movsb
sub
adc
sub
add
xor
cltd
pusha
pusha
fistpl
sub
mov
adcl
mov
sbb
gs
inc
imul
leave
or
sbb
add
lods
leave
adc
cmp
pop
jp
xor
inc
add
pushf
sub
mov
mov
scas
dec
add
mov
gs
and
ja
xchg
jnp
aas
push
dec
cmc
push
jbe
xlat
fisttps
add
mov
aam
lcall
jg
jp
test
xchg
andb
sub
cmp
jle
or
or
and
mov
add
xchg
xchg
push
arpl
adc
sub
sbb
pop
mov
sbb
mov
loop
add
sub
fwait
or
push
mov
dec
roll
es
lcall
mov
add
insb
cmpsl
sub
add
mov
out
popf
jge
stos
push
stc
int3
cmp
xor
rclb
je
mov
mov
ror
out
dec
add
test
sub
cmp
enter
dec
push
push
popl
stos
jle
outsl
add
mov
sbbl
imul
sahf
negl
adc
sarb
cmp
mov
cmp
loopne
push
fldl
das
jbe
push
sub
cmp
jno
arpl
or
xchg
jl
push
mov
mov
and
dec
insb
imul
add
inc
add
mov
xchg
shl
xor
popf
fstps
adc
mov
mov
mov
sbb
sti
add
addb
mov
jb
dec
or
jp
inc
mov
cmp
andb
shr
and
jmp
mov
mov
sub
add
push
popa
ja
addr16
or
push
and
cwtl
inc
push
add
jne
and
adc
xchg
mov
jp
mov
mov
mov
cwtl
jns
cmp
add
mov
push
inc
sub
xchg
into
mov
insl
ficomps
jnp
outsl
push
dec
cli
adc
decl
dec
sub
lds
cmc
jge
movd
and
mov
call
fcompl
in
aaa
xchg
push
lret
add
addb
xchg
insl
cmp
ret
mov
pop
iret
xchg
stos
sbb
mov
jmp
sub
lea
popa
imul
das
sub
pop
dec
les
cmpsb
jno
popf
ret
and
inc
pusha
lods
and
jle
pop
jne
jmp
jge
adc
inc
xor
or
movsb
pop
mov
inc
iret
and
pusha
imul
mull
and
stc
or
or
adc
mov
aam
sub
shll
sbbb
sbb
scas
sbb
and
xchg
sub
fs
call
scas
pop
loopne
or
call
xor
mov
mov
pop
xorb
fisubl
lods
lock
add
addr16
mov
mov
pop
mov
jl
add
jp
push
inc
dec
adc
out
add
dec
add
jae
aas
popa
pop
adc
or
fdivrl
add
push
out
mov
push
or
push
pop
add
xchg
sbb
sbb
imul
cmp
push
pop
jae
add
xchg
sub
cwtl
cmpsl
stc
mov
loope
and
xchg
cmpsb
add
add
add
call
ds
hlt
mov
xor
mov
add
test
roll
les
add
bswap
lret
xchg
inc
add
hlt
xlat
lods
out
das
add
inc
or
ja
shlb
fcom
and
mov
in
arpl
cmc
push
sahf
cmp
in
imul
shrb
mov
xor
inc
lret
ds
test
mov
int
das
inc
xchg
add
push
and
rcrb
inc
hlt
xor
xchg
fwait
mov
xchg
popf
push
daa
dec
mov
or
lods
push
enter
ss
lods
divb
pop
in
fisttpll
add
push
or
push
js
inc
jb
push
jmp
fnstenv
out
in
and
add
mov
jno
jo
pop
aaa
adc
mov
ja
mov
cmp
out
aas
jecxz
sub
push
jg
cmpsb
pop
cltd
movsl
add
arpl
rolb
sbb
cmpsb
inc
in
pop
xchg
ret
mov
add
xlat
loopne
popa
pop
add
loopne
les
sbb
mov
shl
add
cs
mov
add
leave
add
mov
sbb
jl
inc
inc
test
subb
sub
xchg
popf
outsl
clc
add
filds
retw
add
add
jp
push
pop
xor
mov
mov
aad
adc
add
iret
push
into
scas
xchg
xorb
xlat
popa
dec
outsl
cmp
repnz
dec
in
scas
xchg
add
push
jb
sbb
pop
andl
jnp
pusha
jmp
cmc
ljmp
mov
cmp
std
jns
cmc
pop
movhps
lds
jno
cmp
daa
add
fstpl
rolb
fdivrl
leave
mov
xchg
pop
mov
pop
jbe
out
lret
pop
mov
sahf
add
daa
sub
sbb
add
cmp
cmp
pop
or
cmc
nop
xor
dec
cs
mov
push
fiaddl
ss
movsb
sti
push
push
cmp
nop
mov
inc
sub
sahf
xchg
adc
mov
sub
lcall
aam
sub
sub
test
adc
sbbl
inc
add
repz
lret
addb
sbb
nop
iret
daa
or
cmc
pop
shrl
sarb
xchg
cmp
inc
mov
push
push
add
cmp
fs
xchg
or
cmpsb
lahf
iret
push
sub
sub
xchg
loope
add
or
dec
add
inc
sti
add
in
sub
mov
add
push
add
xchg
data16
dec
add
xlat
iret
cmpsb
int
fs
inc
xchg
sbb
cmp
lret
mov
and
sbb
sti
add
xchg
add
loop
xor
call
inc
sbb
cwtl
hlt
jae
mov
fildl
sbb
fcompl
add
call
sub
jne
or
ret
flds
sahf
or
out
aas
push
repz
add
call
gs
adc
mov
add
push
icebp
add
sti
cwtl
push
lahf
xchg
pushf
pop
sbb
xor
push
pop
pop
gs
add
mov
aad
jmp
jne
divl
loopne
dec
jns
jge
add
jb
jge
pop
cwtl
push
movsl
mov
inc
add
int3
in
inc
aad
adc
xchg
mov
popa
sbb
add
cmp
or
pop
push
insl
dec
push
inc
xchg
push
adc
std
xchg
notb
ret
cmp
call
fsubp
jnp
pusha
jbe
inc
xlat
cmp
adc
stc
xor
sbb
mov
jne
add
sahf
mov
into
leave
lcall
lods
out
pop
pushf
scas
repnz
xor
out
clc
add
mov
call
jl
pop
outsb
test
sbb
xor
sbb
bound
mov
imul
ret
mov
or
mov
or
out
idivl
add
cmc
jmp
shrl
jne
out
iret
mov
das
ja
mov
loop
cmpsb
fmull
es
negl
push
fildl
in
sbb
ds
ja
inc
fcomip
imul
pop
js
add
std
cltd
push
cmpsw
lock
add
pop
jmp
cli
sahf
cltd
lea
jns
jg
bswap
cmc
int3
hlt
inc
adc
add
decb
add
jle
xchg
cs
and
mov
shrb
inc
orb
out
add
pop
jmp
movl
mov
testb
es
stc
cmp
mov
daa
mov
pop
pop
fs
enter
mov
mov
sub
adc
or
out
fwait
les
mov
lds
idivb
roll
aas
pushf
stos
dec
or
add
shll
sbb
push
add
sti
fcoml
jg
pop
add
xchg
addb
mov
pop
adc
lods
cld
lea
dec
scas
jae
ret
cltd
shlb
or
scas
cmc
lret
sbb
sahf
pop
inc
jno
add
adc
ljmp
sub
repnz
jle
in
fdivr
cmc
jb
and
aam
xor
dec
clc
mov
outsl
add
pop
test
xchg
pop
sub
sbbb
dec
mov
cltd
pop
mov
nop
add
sbb
mov
fistps
sbb
mov
shll
test
and
rcrl
in
xchg
loope
les
sbb
xchg
sbb
cmp
loopne
mov
jo
pop
out
cmp
cli
mov
loope
lcall
fwait
sbb
daa
hlt
cmp
rcrb
rcll
push
aaa
in
mov
fildll
xchg
jne
jmp
add
leave
ja
mov
fsubl
dec
aaa
or
shll
push
sub
call
idivl
xchg
xor
lds
fwait
cmp
pop
aam
add
push
push
in
pop
and
mov
add
add
mov
xor
cltd
loop
add
adc
stos
add
ss
std
stos
scas
pop
inc
cmpb
pusha
sbb
icebp
push
sub
insb
js
add
int
push
daa
mov
or
rcrb
push
lods
jnp
test
or
imul
mov
inc
andl
ret
insb
pop
and
add
xchg
add
fldenv
pushf
push
sbbl
add
ss
dec
lcall
stc
lahf
mov
inc
mov
pusha
test
add
sub
inc
adc
sub
cwtl
orb
or
push
out
cld
add
imul
mulb
mov
or
out
cld
inc
cli
fs
dec
test
add
jp
adc
sbb
add
pop
cmp
movaps
rolb
rol
cmp
aam
cli
jno
dec
in
notb
or
mov
clc
bound
jle
scas
sbb
dec
stos
jne
add
push
aas
in
je
xor
aad
cli
xchg
add
loope
dec
daa
fnstenv
notl
incb
add
add
pop
sub
psllw
shlb
sbb
push
add
add
in
mov
push
pop
fucompp
inc
xor
sub
sahf
nop
cmpb
loopne
dec
sub
inc
cmpsl
mov
mov
xor
push
push
fsubl
lret
fwait
inc
cwtl
xor
ljmp
cmp
jecxz
push
imul
xor
mov
adc
add
sahf
test
pusha
inc
js
repnz
pop
aad
incb
fcmovb
inc
fcoml
adc
mov
adc
xor
add
and
or
or
lea
loop
inc
cmp
mov
cmp
inc
fsubl
add
mov
add
ficompl
dec
jns
add
jmp
roll
sub
push
daa
add
aas
pop
imulb
int
cmp
xchg
inc
ret
ficompl
outsb
add
sti
jns
arpl
mov
out
mov
aas
sbb
push
lock
fldl
bound
dec
enter
out
mov
insb
mov
and
fnstcw
pop
clc
lret
jo
add
mov
push
mov
add
wrmsr
inc
cmp
inc
jmp
ffreep
fs
ss
xlat
popa
add
dec
jnp
addl
int
adc
xor
adc
jb
insl
ljmp
mov
inc
add
roll
inc
add
cmpsb
xchg
add
lods
jecxz
or
sub
sub
test
add
dec
pop
movsb
or
add
ljmp
sbb
cmp
mov
jnp
in
popa
push
mov
pusha
mov
pop
idivb
hlt
inc
jl
out
or
cwtl
daa
test
sub
mov
adc
addb
sarb
ljmp
jg
sbb
sahf
push
push
mov
cs
bound
fstl
mov
fs
scas
pop
loope
clc
rcl
add
dec
push
rolb
inc
mov
test
mov
jg
pop
ret
jb
out
pop
add
sbb
popf
add
imul
dec
cmp
out
dec
hlt
sub
pop
pop
push
xchg
outsb
mov
mov
sbb
dec
int3
or
movsb
or
sub
test
pop
cltd
fs
add
sbb
add
decl
xchg
sti
es
pop
out
mov
popf
push
add
pop
pop
test
inc
cmc
fwait
add
jnp
std
cmp
cld
lods
stc
stc
and
roll
cmp
cmp
pop
stos
mov
in
mov
fstpt
push
testb
adc
movsl
pop
test
aaa
and
sbb
jnp
inc
std
inc
lret
mov
pushf
add
outsb
jb
lret
aam
push
pop
or
cmpsb
cmp
adc
loope
add
insb
out
loop
lods
shlb
shll
xor
add
sub
lahf
inc
cmp
add
xchg
ret
rclb
iret
test
sbb
push
and
fsubl
cmp
in
mov
adc
sbb
aam
les
cmp
lds
adc
sbb
inc
mov
andb
mov
add
movsb
add
aam
mov
xchg
cmpsb
pop
cld
cmp
cmp
pop
sub
push
jl
add
aaa
sti
adc
lret
loopne
cmpsl
insl
fwait
add
mov
jl
xor
adc
cwtl
scas
add
jbe
xchg
push
loopne
xor
and
inc
inc
push
popa
call
icebp
pop
push
push
loopne
cmp
mov
sub
adc
mov
ret
pop
add
mov
stos
daa
cwtl
push
mov
jnp
ljmp
jae
sbb
dec
addr16
mov
xchg
test
jnp
aad
mov
adc
paddb
inc
in
mov
jnp
mov
movsl
leave
ret
sub
cmp
mov
das
dec
mov
in
pop
mov
cmpsl
sub
cli
adc
adc
andb
les
add
out
mov
mov
in
lods
pop
xchg
je
pop
push
rcrb
arpl
mov
imul
push
inc
add
inc
pushf
xchg
pop
call
movsb
add
mov
and
or
leave
jle
push
mov
and
shlb
adcb
add
xchg
dec
leave
and
out
adc
add
or
push
or
cli
add
std
xor
mov
imul
in
push
js
mov
sbb
std
orb
ret
mov
pusha
insb
cwtl
pop
rcr
dec
jg
add
add
sub
leave
js
test
xchg
int3
mov
xor
mov
add
lea
loope
pop
daa
nop
sbb
out
add
and
repnz
dec
push
leave
add
and
push
aam
push
mov
out
xchg
nop
dec
in
add
fnsave
stos
scas
cmc
test
add
jae
xor
inc
xchg
mov
add
add
pop
mov
pop
mov
adc
sub
dec
sti
cmc
rcrb
rorb
in
int3
rclb
call
inc
xchg
fwait
dec
enter
fs
xor
lock
pop
jb
xchg
add
orl
pusha
add
lcall
mov
sub
cmp
mov
pop
adc
sub
sub
insb
mov
leave
sbb
cmp
dec
mov
inc
adc
cmpsl
shr
lds
aas
push
pusha
testb
sub
lcall
and
test
push
aaa
xchg
xchg
iret
pop
test
out
movsb
mov
pop
mov
fs
xlat
mov
mov
xor
jmp
add
cmp
test
gs
cmc
add
adc
adc
addb
enter
leave
stos
out
jo
cwtl
add
repnz
mov
mov
add
test
ficompl
aam
xor
es
ret
addl
pop
push
into
jg,pt
lock
sbb
gs
mov
cmp
xor
push
jbe
inc
sub
mov
or
sarb
jmp
cmp
sbb
gs
fsub
les
dec
stos
jnp
sub
imul
movaps
jbe
inc
sub
adc
inc
int3
das
or
push
lcall
jmp
add
repnz
add
push
mov
and
pushf
jo
scas
nop
mov
stos
shlb
add
lods
mov
and
std
insb
fdivrp
mov
add
fmuls
xor
and
push
mov
fcmove
test
add
sbb
cmp
clc
int3
aaa
add
incl
inc
cmpsl
xchg
dec
mov
lea
jmp
or
mov
jl
out
sahf
or
sbb
movsl
and
mov
cmp
or
inc
mov
xchg
add
lcall
mov
shlb
adc
pop
wrmsr
sub
push
fadds
inc
stos
pushaw
dec
ficoms
and
add
fsubs
shll
fsubrl
dec
test
ret
xor
mov
movsl
or
scas
xor
inc
add
cli
outsb
aam
lret
aaa
aam
test
hlt
and
nop
stos
dec
sub
add
mov
inc
add
inc
lods
sub
jnp
mov
dec
pop
dec
jo
mov
in
jl
adc
add
inc
shlb
or
les
push
fmull
add
je
mov
or
mov
lods
add
inc
add
jne
adc
pop
adc
insl
sbb
inc
rcrb
push
shrl
sub
add
mov
push
sbb
ret
dec
repnz
and
rcrl
fcomps
add
cmpsl
adc
dec
test
scas
xchg
add
cmp
add
outsb
ss
xchg
pop
add
imul
mov
data16
test
adc
xlat
dec
and
imul
inc
testb
add
pop
add
sub
aam
jmp
ret
inc
xchg
xchg
adc
pusha
repnz
push
add
repz
sub
cmp
xor
lock
cwtl
jb
sti
ret
mov
sar
outsb
les
xor
sarl
mov
mov
into
cmp
or
enter
rcrb
push
fiadds
adc
loop
out
notb
xchg
cmp
mov
in
mov
roll
fwait
jl
pop
push
push
dec
mov
ss
hlt
scas
stos
sarl
xor
or
jnp
mov
pusha
fucomip
jp
add
mov
fwait
cmp
and
cmp
enter
insl
xchg
and
lea
add
or
loopne
addb
cltd
movsb
in
adc
cmp
cmp
pop
push
adc
shl
or
in
and
and
xlat
pop
add
sbb
shrb
or
roll
or
inc
scas
xchg
data16
add
aaa
ret
popa
xchg
stos
mov
add
push
adc
push
sbbb
addb
and
and
rcl
dec
push
loopne
sbb
test
xchg
outsb
adc
mov
rcr
arpl
or
or
add
test
push
lods
add
rcl
je
add
fldenv
ret
and
mov
xchg
lret
dec
nopl
es
mov
icebp
add
lds
and
add
inc
fisubrl
inc
shlb
mov
xchg
add
and
mov
dec
aas
mov
inc
xchg
jecxz
add
or
adc
sti
add
fwait
jle
jae,pt
and
adc
add
jno
mov
inc
push
xor
stos
arpl
imul
data16
push
sub
cmp
dec
mov
popf
or
adc
inc
xor
pop
enter
or
fbld
push
mov
aaa
dec
movsb
sbb
mov
jae
add
pop
inc
jp
cs
stc
mov
and
lahf
mov
dec
or
xor
push
adcb
xchg
stos
sub
nop
clc
pop
sbb
cmc
into
push
add
shrb
add
push
fwait
or
insl
cmp
jl
test
sbb
pop
outsb
rolb
jns
fistpll
ret
in
aas
jecxz
gs
pop
cmp
mov
enter
sbb
imul
stc
btc
loop
insl
push
push
sub
dec
add
lahf
mov
rcrb
sbb
ret
pop
push
and
outsb
or
aas
pop
movsb
or
in
mov
adc
out
aam
gs
mov
jne
mov
scas
xchg
mov
push
mov
insl
jns
add
sub
je
add
leave
fucomp
jl
dec
sbb
mov
ret
mov
mov
in
faddl
jne
movsl
push
bound
jo
add
lahf
lret
inc
add
arpl
pop
js
xchg
lret
jle
cmp
mov
repnz
dec
je
int3
mov
inc
loopne
dec
mov
add
cmp
jle
mov
jo
int3
inc
clc
add
lds
xor
add
outsl
sbb
jo
adc
inc
add
adc
push
mov
cmpsl
arpl
xchg
adc
adc
add
roll
inc
in
scas
add
mov
xorb
jb
jl
imul
sub
das
test
mov
loopne
xor
jmp
xchg
mov
aas
or
add
add
add
repnz
pop
das
mov
fwait
add
add
inc
mov
ret
xor
adc
and
in
adc
inc
popa
or
cmp
cltd
out
mov
scas
add
or
nop
mov
fistps
adc
leave
lock
mov
mov
push
stos
ljmp
xor
add
popa
icebp
dec
mov
cmp
hlt
jge
xlat
int3
das
adc
roll
adc
test
or
xchg
pop
push
jbe
fdiv
data16
mov
adc
push
adc
clts
jecxz
mov
pusha
js
mov
mov
testl
xor
cmp
insl
filds
dec
shl
jmp
or
jle
fs
inc
in
lods
or
mov
mov
cmpb
and
mov
xor
pop
loop
jg
test
and
add
fcomps
xchg
lahf
rolb
pop
imul
push
add
xor
loopne
pop
cmp
push
loop
lods
mov
je
mov
ret
je
add
inc
mov
cmp
in
pushf
push
pop
pushf
arpl
lahf
fildll
daa
push
add
in
pop
push
inc
or
mov
or
sbb
sbbl
pop
sbb
push
cmp
jb
out
dec
daa
mov
add
add
xchg
xchg
call
out
movsl
push
ror
rcll
or
int3
push
sbb
sbb
push
cmp
push
cli
pop
add
or
in
arpl
cmpsl
xchg
sbb
push
push
adc
and
pop
repz
or
iret
out
test
xor
sete
pop
sbb
xorb
mov
add
mov
out
test
adc
sbb
pop
test
xchg
cmp
addr16
cs
xchg
stos
adc
inc
pop
insb
mov
xor
dec
je
sub
aam
ror
pop
add
popa
xchg
xlat
sub
loope
and
push
pop
imul
adc
pop
and
xor
sahf
pop
arpl
cmp
fisttpll
ret
cmpsb
je
push
add
popa
push
sbb
cltd
add
fidivs
enter
jno
pop
pop
xor
cs
cwtl
push
push
das
imul
scas
add
jo
mov
dec
mov
pop
jle
xor
sbb
xor
and
jmp
les
add
aad
daa
pop
push
xchg
dec
rclb
xor
shl
scas
imul
cmpsb
andps
add
pop
mov
and
mov
xchg
push
sbb
loopnew
add
bound
cmp
adc
cmp
inc
inc
mov
and
enter
push
sub
rcll
inc
add
gs
popl
pusha
dec
xchg
mov
and
inc
xchg
insb
es
adc
fisttps
and
pop
fwait
outsb
adc
gs
inc
and
adc
lods
xchg
test
and
add
mov
mov
aas
imul
out
push
adc
adc
xor
cwtl
sbb
and
push
inc
cmp
mov
mov
nop
in
sbb
cli
mov
inc
femms
lods
stos
cmp
xlat
rcrb
aaa
mov
jno
inc
add
js
es
sbb
jae
rorb
outsb
xlat
push
mov
adc
dec
add
cmp
ret
je
pusha
dec
and
mov
add
loopne
add
test
rorl
jle
inc
mov
inc
mov
mov
nop
fsts
add
cmc
popa
adc
add
add
lret
imul
mov
jbe
mulb
cmp
jae
jne
cmp
xchg
sbb
enter
add
lcall
xchg
aas
xchg
cld
in
loopne
inc
sbb
cmpsb
je
enter
mov
inc
and
std
xlat
add
add
xor
rorl
repnz
das
mov
cld
pop
in
add
dec
cs
sbbb
mov
xorl
adc
sarb
jmp
js
cld
imul
adc
loop
scas
or
pushf
mov
mov
or
add
push
enter
xchg
inc
inc
pop
dec
sarb
pop
mov
jns
scas
popa
mov
adc
mov
bound
fcoms
rcrb
mov
imul
loop
add
cmpsb
stos
and
lahf
adc
test
pop
or
xchg
pusha
xchg
cmp
aam
das
or
cmp
add
pop
mov
or
mov
ret
call
jmp
add
nop
push
push
mov
dec
pop
aam
push
setns
bound
jne
sbb
jb
xor
int
and
adc
pusha
push
xor
rorl
xchg
outsl
add
inc
jle
add
shrl
mov
push
into
es
rolb
ret
add
sbb
xor
and
adc
in
iret
jae
jo
adc
sbbl
and
push
mov
or
jle
cmpsb
xor
flds
scas
aam
mov
add
jmp
xor
pop
outsb
adc
stos
aad
loopne
cmp
cs
mov
je
pusha
mov
cmc
sysret
fldenv
sub
xorb
bound
ljmp
in
mov
pop
movsb
mov
sarl
rcr
hlt
xchg
mov
cli
cmp
stos
xchg
xor
out
mov
rorb
add
lahf
repnz
out
or
int3
aaa
xor
or
or
fnstenv
jno
pop
addr16
insb
imul
add
push
int3
sahf
dec
sarb
cmp
in
jbe
ficomps
jnp
mov
call
stos
orb
out
into
mov
adc
cwtl
ret
popf
arpl
outsb
mov
in
imul
dec
testl
pop
out
xor
sbbl
lahf
es
or
roll
cld
mov
shll
mov
mov
int3
lds
adc
add
push
xlat
fisubs
aam
ja
xchg
mov
icebp
nop
cmp
inc
push
and
popf
in
pop
push
gs
xchg
and
sbb
fdivrs
shl
lds
add
mov
out
dec
pop
or
ffreep
push
test
sub
es
or
mov
sbb
xchg
adc
xchg
js
push
xor
cmp
jmp
test
clc
ret
fstpt
mov
add
mov
cmpl
sbbl
xchg
xor
gs
mov
nopl
xchg
rclb
pop
andb
and
jbe
sbb
repnz
inc
add
inc
cmc
add
mov
ss
neg
jge
inc
arpl
fisubrs
fcompl
inc
lock
pop
fnstsw
fcmovu
inc
lods
shll
cmpsb
movsb
test
andb
popa
jo
xor
cmp
cli
int
jge
je
xor
rorl
jg
prefetch
or
jns
icebp
or
andb
call
mov
jno
mov
jno
in
lods
pop
inc
cmp
daa
xchg
jbe
mov
aaa
rol
in
mov
mov
and
stc
mov
andl
pop
sbb
or
add
and
enter
test
loopne
cs
andl
dec
xchg
clc
jecxz
clc
popa
repz
add
jp
in
mov
mov
jle
or
fisubs
shlb
inc
sbb
jge
test
inc
dec
cli
jecxz
cmpsl
orb
les
mov
gs
stos
data16
add
repnz
cmp
rol
mov
loopne
pop
jno
movsb
pusha
adc
sbb
in
add
imul
repz
jb
and
popl
subl
add
or
sub
clc
lret
pusha
mov
ficompl
hlt
dec
pop
sarb
out
test
sbb
add
xchg
clc
aam
xor
cmpsb
enter
icebp
sub
or
subl
adc
or
xchg
sbb
lock
orl
push
insl
push
and
or
and
out
jecxz
pop
mov
mov
jo
mov
loope
daa
in
pusha
mov
xchg
cmp
cwtl
cwtl
dec
shlb
xchg
add
movsl
add
mov
pop
cwtl
adc
out
add
insb
addl
addr16
push
push
jnp
sub
mov
test
and
cmc
adc
or
cmp
pop
lcall
adc
sub
cmp
xchg
popf
js
cli
aaa
sub
cmp
pop
xorb
imul
fldenv
xor
xchg
push
push
jl
sbb
je
aad
jmp
mov
add
or
int3
or
pop
pop
and
shll
lea
add
mov
push
sub
test
add
xorb
int3
cs
dec
js
mov
fs
push
das
mov
jp
xchg
jmp
popf
aam
dec
fistpl
out
add
add
fiaddl
lods
pop
mov
cmp
cs
adcb
xorb
inc
jbe
mov
cmp
test
ss
scas
dec
xchg
test
je
pushf
cs
jo
add
xchg
add
mov
in
mov
xor
or
in
cmp
sbbl
sbbb
into
or
daa
pop
sbb
imul
mov
lods
or
xor
jle
add
sbb
cmp
adc
mov
xchg
or
push
sbb
add
sarb
sets
jb
lret
sub
pop
ljmp
mov
mov
ret
adc
mov
jp
out
cwtl
mov
ret
ret
lds
push
and
jecxz
push
sub
loopne
add
lock
bound
les
jmp
jnp
push
hlt
pop
aam
add
adc
xchg
pop
add
dec
out
sbb
sbb
ss
cmpb
cwtl
fstl
pushf
cmpb
mov
pop
adc
xor
cwtl
arpl
mov
inc
daa
add
push
mov
in
push
adc
push
add
cmp
push
into
mov
inc
dec
mov
inc
adc
xor
or
or
add
xchg
push
push
dec
out
sbb
clc
and
andl
cmp
or
mov
js
pop
cmp
sub
rcrb
leave
mov
cmp
xor
cltd
out
or
or
mov
js
nop
push
arpl
push
loope
sbb
xor
push
mov
push
lea
leave
add
sbb
mov
jle
mulb
adc
dec
xor
adc
push
orb
movsl
sbb
fwait
mov
xchg
scas
ret
or
sub
scas
stos
add
in
mov
in
push
add
lcall
add
dec
subb
fists
add
test
sbb
or
addl
xchg
dec
adc
xor
sbb
out
movsl
adc
or
stos
xor
les
outsl
or
rorb
xor
lods
push
fbld
adc
inc
ljmp
xor
in
add
icebp
out
mov
es
test
mov
or
push
outsl
sarb
inc
ds
in
iret
ljmp
mov
div
in
cmp
jl
xchg
jb
pusha
aad
popf
fnstenv
adc
mov
pop
add
fwait
xlat
and
fstpl
jb
add
movsb
xchg
and
or
rcl
fcomip
gs
andb
dec
xchg
xchg
add
icebp
push
mov
and
mov
mov
or
lret
das
sbb
sbb
ljmp
adc
loop
adc
inc
xchg
into
mov
mov
mov
imul
dec
mov
sub
cwtl
jge
loop
aam
test
adc
cmp
cwtl
and
mov
inc
mov
cmp
or
mov
psrad
cmpsb
xchg
dec
mov
add
cmp
add
lea
push
nop
movsb
push
jns
add
insb
jno
std
xor
ds
popa
push
andb
dec
scas
lock
dec
or
mov
add
mov
sahf
movsl
mov
cwtl
jl
push
fstps
test
add
in
xchg
xor
call
test
cmp
mov
xor
mov
mov
cmp
in
sub
nop
mov
fisubl
outsl
xchg
icebp
pusha
imulb
fldt
inc
mov
repz
xor
loopne
xor
fnstcw
in
addl
adc
jo
jmp
inc
movsb
adc
jecxz
mov
push
mov
cmp
adc
loop
lock
or
cmp
andb
jle
je
nop
pusha
pushf
add
add
jl
push
fstl
testl
mov
and
and
mov
dec
xchg
dec
test
or
and
rolb
pop
xor
loopne
pop
jp
or
mov
loope
or
loope
or
mov
in
pop
fidivrl
hlt
and
pop
js
filds
in
enter
addl
pop
jns
int
jl
movsb
loop
adc
jmp
scas
dec
push
or
popa
or
mov
mov
adc
adc
inc
push
pop
or
rorb
cmp
jge
or
popa
shlb
js
add
ret
sbbb
imul
jnp
mov
movsl
push
xchg
push
orl
and
addr16
dec
test
cwtl
add
bound
les
push
ss
sub
pop
pop
adc
fcom
jl
pop
xchg
nop
or
adc
in
repz
insb
movaps
xchg
je
pusha
mov
scas
std
push
cmp
loopne
cmp
xlat
movsl
cmp
jge
mov
mov
or
lret
pop
shl
sub
hlt
adc
mov
mov
bound
or
mov
addl
testl
inc
sbb
insl
nop
add
movsb
mov
mov
bound
push
cwtl
or
outsl
jl
jo
pop
jmp
fs
outsb
cli
xor
jno
add
idivl
imulb
and
dec
mov
sar
rorl
popf
fildl
jge
mov
and
int
orl
sti
sbb
lds
insb
rclb
add
mov
test
pop
xchg
adc
and
scas
xchg
fdivr
dec
pusha
pop
cltd
adc
sbb
jno
add
or
fsubr
movsb
xor
in
sub
jo
rclb
nop
clc
sub
test
adc
and
in
cltd
cmp
sbb
loop
lds
hlt
fdivrs
mov
pop
stos
lds
sub
lods
dec
mov
add
add
je
pop
push
push
aas
xor
psadbw
or
scas
inc
nop
jl
scas
push
inc
fsubrl
xchg
je
loope
jnp
jno
push
lods
push
xor
in
and
jo
imul
mov
add
repnz
es
inc
out
push
insl
daa
sub
scas
dec
add
test
or
daa
insb
push
andb
repnz
fxtract
adc
mov
mov
dec
jo
enter
add
xchg
mul
pop
aaa
xchg
pop
mov
jle
filds
jno
out
mov
add
xchg
ficoms
dec
mov
ss
xchg
sbb
xor
pop
bound
xorps
push
push
sbb
mov
cmp
mov
imull
add
imul
es
es
mov
insb
add
rolb
loopne
int3
jns
and
push
arpl
rorb
xor
or
sbb
mov
pop
add
dec
jp
adc
fdivrs
mov
lret
push
imul
sub
out
movl
mov
xor
push
popf
add
in
jnp
inc
fwait
lret
xor
or
mov
add
test
add
in
push
out
popa
jl
into
or
xor
and
add
jge
jmp
cmpsl
enter
test
sub
in
loopne
xchg
sbb
pushf
push
push
mov
and
or
popf
inc
and
jbe
scas
lret
fs
and
xor
nop
sbb
pop
mov
adc
sbb
pop
inc
mov
nop
xchg
and
mov
jo
aas
inc
cld
or
push
jb
sahf
xchg
mov
filds
sti
icebp
or
sbb
cmp
add
xchg
daa
stos
aaa
test
push
xlat
cmpsb
push
or
ljmp
or
aam
add
cmpsb
push
jno
popf
sbb
rolb
outsb
inc
add
mov
addr16
clc
xchg
sti
cwtl
iret
push
and
call
mov
push
xorl
xchg
fmul
enter
cmp
fisttps
sub
clc
mov
push
xchg
adc
add
lret
xchg
cmp
in
ss
push
mov
arpl
cmc
lret
mov
add
cld
xorb
or
repnz
sbbb
xor
jmp
pop
leave
cmp
mov
subb
xor
push
lds
sbb
push
dec
or
sbb
fcmovbe
andl
xchg
out
xor
in
rclb
pop
mov
push
pusha
lret
sub
add
lahf
jo
rcrl
and
stos
ljmp
push
cmp
and
mov
jo
pop
sbb
jbe
add
rolb
xor
bound
sub
add
push
xchg
out
out
cmp
enter
call
push
mov
bound
mov
fs
mov
pop
dec
ds
xchg
cmp
sbb
inc
shlb
add
add
or
and
int3
add
das
push
cmpsb
sbb
flds
repz
jns
mov
and
cmp
push
add
mov
ret
pop
add
in
sbb
push
and
rorl
std
add
dec
cmp
lret
fnstenv
bound
push
int
jbe
sub
clc
icebp
pcmpgtb
outsl
add
mov
sbb
or
or
add
add
sub
jnp
xor
mov
subl
add
loopne
lds
jecxz
enter
sbb
mov
lret
adc
or
lahf
xor
pop
sbb
cmp
pop
adc
mov
jecxz
cmp
aaa
add
mov
ja
dec
jb
aad
inc
push
add
call
out
aam
and
not
and
rorb
push
fwait
jle
filds
xor
push
divb
mov
pop
pop
stos
popa
add
mov
jb
add
ljmp
mov
xchg
jb
sub
jno
add
inc
loopne
loope
mov
mov
xchg
jl
xor
daa
jns
lock
sti
add
adc
xlat
in
fbld
pop
add
xor
int3
mov
jnp
sbb
mov
add
dec
jb
push
pop
ss
sub
or
push
mov
cmp
add
test
int3
cmpsl
rcr
nop
add
adc
add
adc
nop
mov
testb
loopne
jg
xchg
cld
or
stc
adc
sub
mov
stos
movl
mov
xchg
mov
push
inc
test
push
mov
add
xchg
fisubs
stos
insb
cs
ss
call
cmp
pusha
outsb
adc
rorl
cld
test
nop
add
stos
mov
ds
jl
jb
fildl
inc
sub
je
das
xor
loopne
lods
adc
xor
mov
out
or
add
mov
inc
push
pushf
iret
jno
movsl
lahf
sub
mov
fwait
out
add
mov
xchg
fs
lea
jne
xchg
in
lock
aas
aaa
cmpsb
bswap
mov
mov
push
jp
fcomps
jae
pop
js
push
mov
test
sub
cmp
je
push
add
jge
mov
icebp
cld
cltd
cmp
add
dec
cwtl
lock
add
icebp
arpl
add
push
mov
push
clc
bound
inc
lahf
js
clc
adc
and
insl
sub
jns
adc
dec
ret
pop
add
sbb
jns
stos
mov
sti
pusha
ret
xor
je
out
pop
add
or
xchg
packssdw
cli
add
jo
nop
push
push
lock
cmpsb
add
js
inc
or
xor
sub
ds
mov
mov
jnp
pop
dec
jg
movl
mov
shlb
add
xchg
jbe
out
shl
testb
dec
push
cld
imul
mov
in
push
xor
adc
jge
mov
jno
mov
and
test
mov
pop
or
fiaddl
jae
push
jmp
xor
pop
push
push
loop
loopne
jle
cmpb
and
lea
popl
into
fxch
repz
add
scas
fwait
cmpsl
add
mov
xchg
movhps
insb
inc
movsb
in
xchg
push
imul
pop
sub
lods
add
test
movsl
lock
add
rorl
adc
andb
dec
into
mov
mov
bound
lock
test
sbb
out
xor
xchg
nop
call
sahf
xchg
mov
dec
xchg
inc
or
mov
cmp
daa
add
mov
mov
in
cmpsb
pop
into
rolb
loopne
add
pop
xchg
add
sarl
xabort
lahf
xchg
cmpsb
sahf
add
bound
into
rorb
mov
jo
das
sbb
dec
stos
sbb
cltd
jbe
add
mov
and
call
adc
flds
popf
cwtl
in
mov
jbe
loope
rorb
outsl
jle
adc
mov
and
sahf
dec
pop
xchg
xor
add
lret
add
repnz
stos
insl
ds
mov
orl
in
insb
push
xor
mov
test
scas
popl
pop
dec
sub
pop
fistps
xchg
adc
lret
fnstenv
and
or
shl
adc
cwtl
add
int3
ljmp
fistps
out
inc
orb
int3
adcl
negl
inc
push
mov
cmpsl
add
mov
jbe
xchg
ret
mov
xchg
jle
daa
mov
clc
andl
test
dec
insb
sub
test
xchg
dec
cmpsl
mov
hlt
add
xor
or
push
imul
mov
pop
les
sbb
add
jbe
ljmp
sti
pop
pmuludq
and
aaa
shlb
pop
add
or
roll
loop
negb
shlb
aad
sub
pop
scas
clc
add
roll
dec
mov
test
add
mov
push
and
idivl
pop
xchg
xchg
inc
mov
leave
inc
shl
pop
cmp
add
cmp
fadds
cmp
xchg
enter
jl
mov
add
sbb
sub
into
movsl
mov
dec
add
cli
add
cmp
add
dec
sub
mov
in
in
cvtdq2ps
sarb
push
les
mov
in
clc
xorb
add
loop
stos
shlb
mov
sbb
popa
push
add
jns
mov
iret
jb
mov
insl
ds
pop
pushf
jbe
out
cmp
call
add
push
sub
fdivrs
add
js
inc
out
in
mov
aad
jl
xor
in
mov
cmc
add
sub
ljmp
addl
ja
cmc
mov
dec
jb
adc
scas
or
or
lret
pop
test
in
and
loope
out
add
lret
cli
sub
pop
push
mov
imul
in
dec
dec
adc
fidivrs
mov
mov
push
shlb
test
inc
jl
pop
jle
aam
pop
loop
lods
pusha
sbb
add
pop
cmp
sbb
xor
add
xorb
fs
add
xor
icebp
js
xchg
cmp
je
cmp
test
cmp
sub
add
pop
stos
sub
lock
cmp
add
in
bnd
lods
dec
push
add
inc
mov
and
test
pop
icebp
or
add
push
int
andb
add
loopne
cmp
add
test
bound
sbb
adc
add
adc
inc
rol
sub
add
outsb
test
dec
inc
add
lods
in
pop
into
rcrb
int3
sbb
js
orb
add
enter
dec
loope
fimull
xor
mov
and
adcb
inc
add
popf
nop
xor
adc
and
addb
stc
adc
xor
sbb
clc
aaa
iret
add
dec
fnsave
push
xor
xlat
imul
inc
sbb
scas
movsl
push
mov
dec
jns
mov
stos
daa
test
imul
fdivs
add
push
cwtl
dec
add
add
sub
std
sbb
test
cmc
adc
sbb
shlb
add
xchg
xor
cmp
push
sbb
dec
jo
pop
xchg
leave
gs
mov
push
sbb
out
test
flds
mov
rcl
mov
cli
adc
or
add
xchg
xchg
les
mov
push
add
pop
xor
add
ja
call
ret
loope
and
out
test
and
pop
add
push
jno
mov
adc
bnd
scas
xchg
sbb
ret
popf
ret
test
movsb
mov
sbb
xchg
jge
nop
mov
xor
inc
sbb
les
clc
xor
xorb
inc
pop
in
cwtl
lret
or
add
jg
jno
pop
nop
adc
test
cmp
imul
inc
add
ss
hlt
cmp
loopne
add
lcall
push
add
push
pop
adc
movsl
inc
cmp
and
lods
imul
and
jge
test
cmp
mov
jo
loopne
cltd
subl
int3
rolb
add
mov
sbb
testb
std
dec
pop
xchg
mov
mov
sub
cli
iret
jnp
and
jmp
cwtl
mov
inc
outsl
adc
xor
mov
pushf
movsb
in
cmpsl
mov
adc
mov
outsb
xor
cmp
push
cmp
xor
xor
mov
xor
cmpsb
mov
sbb
sbb
xchg
insl
sub
ret
add
sub
shlb
or
inc
fsts
push
cmp
hlt
pop
loopne
add
inc
loopne
push
and
sub
lcall
decl
dec
cmp
push
cltd
fidivl
sub
xchg
add
roll
and
push
stos
mov
push
cmp
mov
out
enter
xlat
pushf
mov
mov
jno
movsl
cld
pushf
mov
jo
sbb
cmp
dec
add
sbb
pop
pusha
xlat
adc
test
add
ja
pushf
loopne
arpl
dec
mov
dec
xor
xor
push
stos
sti
mov
bound
jmp
imul
add
push
mov
jmp
fisubrs
push
cmpsb
idivl
xchg
clc
sbb
jp
adc
sub
cmp
test
or
fimuls
insl
lahf
push
out
add
push
add
icebp
sbb
je
inc
lods
jmp
add
mov
fistpl
dec
mov
cmp
dec
inc
mull
jge
mov
xorb
ret
or
aas
sbb
mov
jecxz
cmp
jmp
push
inc
mov
icebp
hlt
jp
imulb
cmp
mov
test
das
sarb
push
push
add
inc
mov
pop
jns
xchg
pop
cmp
xchg
mov
fists
adc
movsb
add
mov
or
add
cmpsb
fadd
mov
push
lret
add
imul
nop
cmp
outsb
and
add
jbe
scas
fbld
add
mov
xchg
ret
out
rorb
rcrb
jae
ja
fnstcw
pop
iret
mov
cld
lds
loope
shlb
push
add
es
mov
sysexit
push
aas
testb
jl
add
mov
loop
mov
sar
add
mov
dec
lea
add
lods
clc
pop
add
scas
rorl
mov
je
rcl
ss
lret
dec
add
add
add
jg
pop
clc
and
lahf
mov
ja
loop
popa
cmp
add
sub
ds
sbb
mov
dec
test
jnp
or
sti
xchg
xor
je
push
roll
jns
sbb
int
add
add
dec
stos
pop
add
jnp
lea
dec
xchg
out
fmul
in
push
or
pop
adc
add
xchg
cmc
add
movb
cmpsl
cs
or
push
ret
xor
cld
or
sub
and
add
call
fs
daa
push
gs
pop
xchg
mov
add
loop
mov
out
je
sbb
lds
out
movsl
add
adc
inc
test
int
add
push
push
mov
in
cmp
sbb
and
fdivrs
add
mov
ljmp
sbb
jg
jle
mov
jne
stos
je
adc
mov
fs
rcrb
prefetch
shrb
roll
xor
mov
ljmp
sub
cmc
push
sub
adc
pop
fmul
lret
and
mov
pop
int3
sar
call
inc
add
loop
jmp
or
push
xchg
add
scas
lods
mov
aam
fiadds
ficompl
cmp
addr16
fs
add
shll
cmp
clc
push
mov
sub
mov
outsl
sbb
lcall
imul
jecxz
in
jbe
scas
sub
push
jmp
iret
or
call
vmwrite
jg
inc
shl
pop
cld
scas
add
int3
xchg
mov
loop
js
inc
cwtl
mov
add
into
ror
mov
mov
dec
add
and
sub
arpl
jecxz
push
imul
cmp
out
adc
jo
sbb
adc
or
mov
icebp
ljmp
hlt
popa
lds
jg
fmull
sbb
imul
jp
cmp
bound
call
pop
subb
iret
lcall
xor
hlt
loope
add
xchg
addr16
jecxz
pushf
cmpb
mov
xor
mov
sarb
add
cmp
call
cmpsb
test
jmp
add
fwait
mov
cmp
cmc
add
iret
push
add
push
adc
loopne
out
xor
cmc
mov
cwtl
xchg
push
mov
add
dec
js
add
jge
popf
or
pop
pop
push
cmp
stos
fld
rolb
icebp
cmc
notb
scas
cmp
imul
mov
mov
cmp
pop
push
dec
pushf
jmp
ret
outsl
add
and
loop
dec
aam
lcall
cmp
or
rol
push
loop
jb
add
bound
call
enter
xchg
ficoms
es
ret
xor
cmp
add
or
or
jl
loope
dec
add
daa
jmp
xlat
sbb
pop
dec
aam
xchg
add
loope
push
fwait
pop
adc
roll
xlat
mov
mov
inc
cmpl
add
cwtl
je
test
test
mov
push
cmovae
jns
pusha
into
sarb
mov
push
and
add
subl
cmp
mov
xchg
xchg
xchg
adc
mov
sub
cmp
outsl
dec
dec
add
test
and
adc
fists
push
js
push
sar
mov
pop
dec
hlt
jo
out
lcall
pop
and
aam
mov
mov
mov
into
ret
lods
pop
lock
dec
inc
aas
push
int3
jns
cli
add
jae
pop
mov
sbb
jno
iret
mov
bound
in
or
loope
or
push
leave
fs
pushw
dec
add
cmp
fdivrs
and
add
and
inc
or
aam
loop
int
jo
mov
in
add
and
jne
shlb
loopne
cmp
pop
lahf
xchg
scas
nop
sub
xchg
out
enter
mov
mov
cmp
dec
and
idiv
iret
mov
cld
cs
xchg
pop
orb
add
pusha
out
adc
das
gs
aam
rolb
xchg
mov
jae
rcrl
mov
mov
and
cld
add
xchg
into
test
scas
outsb
push
rcll
cld
jb
out
xor
movsl
scas
loop
add
adc
into
mov
push
add
call
adc
add
dec
out
or
push
mov
shrb
add
iret
inc
or
and
add
xor
add
mov
push
add
push
out
cld
or
in
add
scas
dec
test
scas
arpl
lea
inc
cmp
popa
push
xor
mov
adc
inc
test
inc
popf
and
xchg
in
loop
push
inc
call
pop
sbb
mov
add
adc
push
imul
jns
and
rclb
outsl
inc
outsb
jge
rorl
fbld
pusha
cmp
push
pop
hlt
test
int3
shll
sbb
sub
add
scas
aam
mov
fstp
daa
bound
add
mov
jl
ljmp
pop
lock
leave
add
mov
testb
loop
rclb
xlat
add
lret
jo
jle
xchg
aad
icebp
je
push
adc
dec
sbb
fsubrs
push
jl
jno
sbb
fnstenv
adcb
jle
ret
cmp
outsb
xorb
dec
ret
and
idivl
mov
repnz
ret
out
pop
dec
into
mov
inc
add
push
fdiv
loopne
push
mov
in
imul
repz
ds
pop
push
sbb
outsl
fmul
lods
inc
mulps
adc
std
add
sub
pop
jecxz
repnz
js
fildl
loope
mov
xor
cmp
add
fcoml
sub
mov
inc
xor
jae
lods
cmpsb
sbb
sbb
hlt
mov
cltd
xor
or
testb
lea
inc
mov
sub
inc
rclb
add
mov
iret
sub
jmp
out
add
mov
push
inc
js
in
loope
clc
add
imul
mov
push
or
and
add
add
cmp
lret
sbb
jge
inc
mov
mov
and
ss
add
stos
jecxz
and
mov
add
mov
aaa
cmpsl
idivw
sbb
imul
stos
dec
scas
shlb
lret
jnp
cmpl
add
push
mov
insl
mov
inc
sub
cmp
or
or
inc
add
and
iret
xorl
imull
mov
and
mov
inc
enter
xor
adc
aaa
mov
loopne
and
in
dec
sbb
jle
stos
add
int3
add
jb
sbb
sahf
ljmp
sbb
push
loopne
cmp
test
jmp
jle
aad
jno
aas
mov
jp
dec
movsl
dec
andb
mov
mov
lock
adc
push
mov
mov
or
sub
cmp
and
movsb
fneni(8087
adc
xor
sub
dec
popf
ljmp
mov
es
mov
xchg
out
lcall
ss
data16
je
mov
cs
rcll
inc
pusha
test
sbb
sub
cwtl
icebp
push
cmp
pop
loop
sbb
or
cwtl
sub
cltd
roll
pop
jb
mov
jo
mov
sbbl
mov
jb
pop
adc
popf
sahf
add
sub
jg
rolb
mov
xchg
mov
add
mov
in
je
adc
mov
add
sub
hlt
add
mov
loopne
push
add
and
mov
pop
aad
push
jmp
xchg
out
lock
std
cmp
pusha
add
andb
push
dec
cli
inc
adc
xor
mov
sbb
shlb
shlb
pushf
cs
loop
sub
add
inc
arpl
push
adc
addl
cmp
outsl
add
neg
cltd
jge
or
xor
push
sti
mov
insb
notl
out
add
pop
jle
mov
jmp
jecxz
xor
add
sbb
dec
add
ret
fiaddl
repnz
jmp
sbb
jnp
add
int3
gs
or
leave
pusha
sub
inc
or
add
dec
add
add
insl
adc
dec
mov
add
hlt
and
jmp
rol
sub
add
sbb
ficoml
cs
mov
xor
adc
jmp
pushf
je
scas
jbe
pop
sub
andb
iret
rclb
std
imul
xor
inc
jecxz
mov
jno
sbbl
xchg
psubusw
repnz
sbbb
fcoml
sub
dec
cmp
out
int3
xor
sub
cmp
iret
sbb
fsts
adc
add
scas
mov
jmp
xchg
lds
xor
pop
add
ljmp
add
call
pop
sbb
js
sbb
shlb
xchg
or
mov
pop
jp
jge
add
and
jo
loopne
push
enter
inc
fdivrs
cld
mov
add
mov
test
aad
pop
jmp
and
sbb
mov
jmp
out
stos
xchg
loopne
nop
mov
jmp
sub
add
aas
fbld
mov
arpl
cld
sub
push
push
mov
sub
sbb
jno
pop
sti
iret
stos
push
call
xchg
fs
arpl
add
popa
fcmovu
mov
fsubl
dec
add
xchg
adc
xchg
pop
addl
leave
inc
repnz
add
ret
ljmp
test
inc
push
dec
outsb
lret
mov
outsl
xchg
add
add
call
add
sbb
sti
xor
add
daa
int
out
or
loopne
add
add
pushf
and
and
adc
sub
jg
emms
cmc
mov
xor
pop
in
pop
add
cli
js
aas
mov
push
dec
inc
cmp
mov
in
scas
aam
lds
leave
cmp
sub
pop
mov
inc
add
pop
cmp
and
mov
jle
add
rcrb
fmuls
int3
add
insl
arpl
cmc
dec
add
pop
in
std
enter
int
iret
loopne
add
lock
sarb
push
cwtl
dec
lds
into
sbb
pusha
fcoml
add
sub
bound
cmp
enter
add
repnz
push
dec
out
inc
and
ljmp
pop
push
aad
inc
or
lahf
push
dec
jecxz
add
repnz
fstl
leave
test
dec
add
out
sub
pop
clc
cs
sbb
sti
add
out
cli
add
stc
cmpxchg
add
xchg
loopne
in
movsb
nop
fmull
ja
mov
add
hlt
mov
aam
rorl
pop
lcall
into
add
or
mov
sbb
rcl
mov
jnp
mov
xchg
repnz
out
mov
iret
and
xchg
cmp
repz
das
add
cmp
xor
popf
adc
push
std
fld
das
add
rclb
xor
cmp
jb
enter
jns
stc
pusha
xchg
outsl
mov
xorb
shl
and
push
push
icebp
fstpl
imul
sub
pop
ja
ret
push
jo
loope
adc
sub
xchg
mov
add
mov
xor
lret
vsubss
adc
shlb
repnz
add
shll
jg
cmp
es
mov
sbb
jns
pop
aam
lods
arpl
jmp
xor
stos
inc
xchg
add
jl
pop
cmpsb
lea
add
outsb
lds
scas
jne
jns
sbb
xor
fmul
cli
push
stos
je
xor
ret
and
dec
cmc
jle
add
sub
or
xchg
push
sub
add
inc
insl
ja
out
jo
mov
xchg
xchg
out
push
and
dec
jmp
je
out
int3
mov
cmpsb
cltd
mov
or
aad
mov
pop
push
lret
imul
xlat
fsts
dec
xchg
dec
popf
incb
push
jae
pop
cltd
mov
pop
jecxz
loopne
mov
jo
xor
sbb
dec
inc
mov
js
sahf
or
popf
mov
fisttpll
pop
daa
inc
mov
add
push
mov
icebp
pop
scas
add
mov
or
sbbl
sbb
or
sbb
rcr
ror
mov
pushf
adc
fidivs
sbb
add
xchg
sbb
ret
sub
lret
add
add
sbb
repnz
shlb
sub
orl
mov
and
into
aaa
jp
add
mov
mov
hlt
xchg
push
lock
add
mov
xor
jb
lret
sarb
orl
xor
mov
leave
sbb
cmp
sbb
push
es
push
popa
push
xchg
push
clc
cmp
frstor
and
mov
sub
imul
test
aaa
dec
xor
testl
clc
add
dec
adc
in
scas
lock
daa
push
push
scas
inc
in
fidivs
or
sti
fs
fstps
ljmp
and
and
nop
outsl
sub
and
push
shlb
roll
fnstenv
fiadds
sub
push
lret
lods
add
repnz
cmc
push
inc
fnstcw
dec
jmp
sahf
out
mov
roll
add
dec
push
loopne
xor
sub
imul
mov
pop
push
daa
pop
add
movsb
mov
ficomps
jge
add
add
cmp
and
cwtl
and
arpl
cmp
cmp
pop
xor
inc
stc
jg
xchg
lods
mov
les
fstps
and
sbb
jo
sub
pusha
add
and
ljmp
mov
lea
mov
jo
mov
jl
addb
dec
adc
jge
pop
add
add
enter
cmp
pop
test
inc
inc
mov
mov
jp
and
push
pop
mov
pop
ss
push
add
pop
lock
sub
cmp
popf
ret
and
lock
add
call
in
and
fs
cmp
sub
jmp
pop
out
subb
sub
sub
inc
cmp
and
add
and
mov
push
pop
in
pop
xor
adc
mov
or
xor
mov
pop
inc
out
nop
rolb
fisubl
bound
inc
jbe
xchg
xchg
sbb
mov
hlt
xchg
dec
in
pop
adc
scas
sub
mov
mov
call
out
imul
in
pop
jle
xor
in
pop
and
lret
int3
add
jg
mov
cmovle
lds
jl
jp
ret
mov
das
mov
push
dec
jge
fnsave
dec
imul
rolb
lahf
imul
add
sbb
add
jg
ljmp
lods
or
pop
mov
leave
clc
mov
mov
shrb
add
mov
jl
imul
lret
fcmovnbe
adc
add
cmp
mov
mov
into
dec
mov
mov
lds
and
add
mov
lock
mov
andb
cmp
jge
push
pusha
mov
add
push
push
ret
add
push
add
ret
or
add
push
add
int3
test
push
sub
cmp
sbb
int
sarb
jecxz
pop
dec
ret
ror
rorl
add
ret
xorb
jb
cld
inc
sbb
arpl
dec
adc
enter
bound
int3
add
xchg
push
fnstenv
jb
inc
cmp
mov
nop
sbb
xor
pop
arpl
test
inc
or
push
xchg
daa
cmpb
or
sub
add
push
cwtl
pop
sub
add
xor
cmpsb
inc
mov
add
negl
pop
mov
sarb
mov
inc
fisttpll
addb
and
add
loop
movsl
add
jae
int
mov
add
es
cltd
sub
inc
xor
sti
ss
in
pushf
add
inc
xchg
pusha
add
or
pushf
cmp
lahf
andb
mov
lret
mov
mov
dec
dec
cmp
iret
stos
push
jbe
pop
popf
jns
nop
push
ds
js
add
aad
ss
inc
mov
mov
js
out
test
push
fsubrp
rorb
in
inc
push
pushf
call
andl
rorl
sti
xchg
adc
nop
add
inc
or
adc
sbb
mov
and
add
mov
stos
mov
xlat
or
dec
in
add
and
mov
inc
cs
dec
jno
fwait
leave
add
mov
daa
adc
pop
jne
add
rcll
add
mov
int
push
in
jge
enter
ficoml
test
jbe
or
jb
jno
dec
fiadds
jecxz
cmpsb
adc
push
lods
jg
lods
movb
add
cld
adc
pop
lods
cmp
mov
rol
ljmp
dec
mov
out
pop
inc
loop
add
jno
mov
push
add
xchg
mov
clc
and
add
push
add
mov
push
dec
dec
js
add
lret
das
and
repnz
add
idivb
movsb
jne
sbb
ds
sarl
add
arpl
adc
cmp
push
sbb
dec
xchg
imul
sbbb
mov
lcall
bound
mov
or
movsl
and
pushl
add
push
inc
rcll
adc
jmp
mull
jb
cwtl
sub
pushf
shrl
loope
push
lock
jp
jge
subb
jle
xchg
fistpl
push
sub
js
xor
add
mov
xlat
ljmp
sub
inc
shll
sbb
cmp
lods
jns
push
bound
repnz
xor
add
in
int
xchg
cmp
dec
mov
enter
add
jg
sbbb
sti
add
int
loop
stc
pop
xlat
add
aam
les
push
je
dec
add
mov
jle
fwait
pop
das
clc
jne
loopne
mov
lods
add
sbb
adcb
clc
adc
loope
xchg
inc
sub
mov
adc
add
movsl
cli
pop
xchg
dec
add
adc
dec
shr
jno
add
les
xchg
add
dec
repnz
add
mov
and
jg
sub
jge
or
add
adc
jecxz
pop
jmp
add
sbb
insb
test
ffree
add
mov
sbb
scas
gs
push
lock
out
aad
sub
popa
adc
push
dec
push
pop
xlat
push
and
add
xchg
sub
jnp
cmp
push
pop
add
in
xchg
add
lock
pop
dec
xchg
dec
mov
mov
add
add
jl
sub
add
fmulp
pop
mov
adc
push
in
and
out
enter
in
and
dec
add
aas
push
out
add
test
lods
icebp
addr16
sbb
add
and
add
fs
clc
leave
mov
inc
add
jno
test
std
mov
mov
add
cmp
add
or
sbb
push
js
or
sub
jmp
enter
or
mov
add
shll
mov
jnp
or
fiaddl
pop
stc
aam
imul
andl
xchg
pop
mov
dec
js
inc
jecxz
jne
mov
jg
inc
in
out
sbb
cwtl
pop
adc
outsb
cmp
cmc
pusha
das
mov
rcll
xchg
iret
pop
push
add
pop
lcall
add
push
iret
in
mov
js
enter
add
jmp
leave
les
sub
pop
mov
push
sub
icebp
sbb
xor
test
push
lock
xor
adc
pop
dec
aas
sub
jge
add
ret
add
jmp
inc
xchg
pop
aaa
test
stc
clc
xor
mov
leave
add
adc
or
shr
inc
mov
lret
ror
and
aam
sbb
jno
cld
sbbb
dec
int
push
sbb
movsl
push
add
xor
scas
add
jecxz
insb
imul
cli
mov
loope
push
loopne
fimull
mov
sub
outsl
sarb
add
js
add
aad
xor
add
jg
dec
add
leave
xorl
add
aaa
cmpsl
lea
xchg
mov
xchg
popa
inc
adc
mov
call
lret
xor
std
mov
fcmovnbe
enter
js
mov
add
lcall
jge
call
add
popf
mov
push
pop
push
rcll
or
add
sub
ss
test
or
add
add
nop
mov
add
xchg
mov
and
ret
shlb
aam
sub
ds
mov
ret
divl
in
adc
add
xchg
jbe
adcl
loopne
and
and
jbe
xchg
lds
sbb
out
mov
into
mov
push
vmwrite
nop
gs
add
mov
cmp
or
inc
hlt
divb
mov
pop
xorb
dec
popf
add
aam
jno
add
jne
pop
iret
pusha
stc
and
add
fsts
sahf
or
movsl
add
dec
divb
rolb
jns
enter
nop
push
jo
add
xchg
cli
sbb
mov
add
jbe
add
dec
add
iret
aad
mov
out
mov
mov
loopne
nop
popf
or
daa
jae
inc
sbb
insl
push
clc
and
or
rolb
pusha
in
or
xchg
and
dec
or
nop
add
and
es
inc
cmp
subb
outsl
in
xchg
add
dec
lds
pusha
adc
push
adc
pop
xlat
jno
cmp
pop
aas
lret
mov
ret
or
pusha
enter
icebp
repnz
inc
mov
loop
inc
cmc
int3
and
in
movsb
add
orl
flds
shll
and
mov
or
xchg
adc
adc
dec
dec
mov
incl
leave
adc
jnp
in
je
add
stos
lret
push
sbb
scas
push
ja
sub
in
incb
js
xchg
pop
cmp
sbb
jg
add
jge
add
test
mov
syscall
fidivrl
mov
jb
ret
mov
enter
std
inc
cmp
push
add
int3
xchg
pop
push
movsl
mov
ss
adc
out
repnz
cmp
cmp
dec
mov
mov
clc
mov
xor
push
and
pop
cmc
cmp
das
xor
add
add
and
dec
pop
dec
out
dec
or
pop
hlt
scas
add
dec
jg
or
dec
and
lods
fisttps
hlt
jbe
js
sbb
add
inc
jae,pt
in
loope
xchg
push
add
cmp
cmpl
cmpb
mov
mov
enter
dec
or
shlb
push
mov
outsb
or
ficoms
xor
add
nop
and
add
shl
jge
aam
add
pop
aas
mov
pushf
pshufw
and
pop
mov
fbld
in
outsb
add
xor
lea
lds
cmpsb
sub
ljmp
js
add
jne
cmpsl
clc
mov
or
mov
xchg
ret
loop
or
sarb
cmp
cltd
mov
mov
stos
negl
fnsave
add
test
nop
xchg
imul
stos
aaa
sbb
push
pop
pop
add
xchg
cli
imul
mov
call
int
lahf
scas
inc
jp
jb
add
mov
pop
out
clc
push
adc
dec
shlb
lahf
mov
in
dec
out
div
push
cmp
sti
pop
mov
rolb
mov
shll
xor
xor
add
bound
mov
sub
pop
and
lcall
je
call
shr
mov
mov
jae
add
out
nop
mov
push
dec
pop
inc
adc
add
push
out
push
cmpsl
or
lock
les
iret
mov
aad
ljmp
xchg
cmc
push
add
fsub
in
add
imul
dec
loop
pop
shlb
xorl
sbb
mov
das
push
adc
lcall
jns
push
testl
repz
mov
add
sub
add
addr16
outsb
imul
rcr
push
sub
sbbl
add
shrb
push
mov
mov
arpl
jb
cmp
lds
rcl
or
sti
xor
and
loopne
fneni(8087
lds
add
pop
iret
in
stc
xor
add
pop
push
push
sub
dec
add
fcomi
cmp
push
adc
out
fcmovu
add
pop
jge
xchg
or
adcb
jns
faddl
sbb
pop
fcoms
xchg
adc
nop
pop
adc
fnstcw
sbb
add
mov
inc
fsubs
mov
add
fwait
jb
aam
fstpl
sub
or
sbb
xlat
push
scas
fsubrs
int
aaa
fisubrl
cmp
sbb
loop
and
fldl
xor
pop
push
push
lock
mov
jp
hlt
cmpsb
mov
pop
es
xchg
mov
test
cmp
add
inc
fwait
push
addb
mov
mov
inc
ret
add
xchg
mov
dec
pop
add
lea
inc
or
push
add
cmp
ds
pop
dec
add
ret
lds
mov
add
or
sahf
fcoml
jns
dec
xchg
jns
and
leave
popf
dec
push
push
xor
pop
cmp
sbb
dec
in
or
cmp
xorl
cmpsb
outsl
int
push
out
enter
add
jecxz
addl
fnsave
gs
aam
xor
ficoml
push
push
jb
add
mov
into
add
xor
mov
adc
in
mov
fwait
ss
add
cmp
push
jl
push
int3
hlt
imul
insl
mov
sub
int3
xchg
jbe
xor
out
cltd
add
jnp
pushf
fwait
mov
movsl
and
pop
pop
cltd
pop
pop
lret
inc
jnp
pop
lcall
sbbl
popa
outsb
and
shl
lret
xchg
add
imul
jg
add
imul
inc
jbe
sub
mov
push
shlb
mov
add
and
rorb
xor
aaa
sub
rcrb
rcrl
pushf
rorb
and
ljmp
jg
cs
jb
inc
add
fcomps
add
mul
push
inc
int3
jns
jge
add
and
cmp
add
dec
out
ret
mov
aas
add
rcll
divb
add
imul
push
mov
or
insb
in
add
dec
pop
movsb
das
mov
add
mov
or
repz
or
pop
push
push
mov
arpl
push
jge
xchg
int
inc
inc
cli
xlat
and
adc
xchg
ret
push
std
enter
mov
icebp
test
pop
push
dec
adcb
xor
cmp
sti
add
cmc
lods
lock
movsb
lahf
add
pop
xlat
or
faddl
rcr
lret
andl
mov
mov
loopne
push
mov
xor
iret
jmp
subl
cmp
fwait
mov
jge
add
mov
pop
in
push
pop
cmp
add
shl
mov
insl
push
xchg
fisubl
xchg
jo
scas
add
xor
ret
dec
iret
shrl
inc
stc
mov
pusha
jmp
cmp
dec
push
add
fisttpl
gs
jns
bound
inc
adc
popa
add
inc
xor
inc
mov
ret
add
popf
adc
fsts
xor
scas
add
push
ds
lahf
inc
scas
inc
or
add
fwait
add
sbb
jl
jle
sahf
loopne
xor
adc
dec
cmp
sub
nop
or
arpl
lods
add
je
add
mov
push
push
or
xorl
imul
add
cmp
pop
ljmp
cmp
add
es
dec
loopne
fildl
xor
add
push
add
jl
ret
jmp
mov
jo
mov
out
in
je
add
or
cld
push
add
in
push
test
mov
add
test
in
add
loopne
ja,pt
cs
test
lock
and
outsl
les
repnz
add
pop
stos
jns
pop
push
adc
sbb
add
outsl
mov
xor
mov
mov
test
and
or
adc
js
pop
fsubl
or
sub
pop
imul
aad
pop
xchg
or
push
loopne
add
inc
aam
inc
sbb
xchg
add
lcall
add
test
jmp
push
rol
loope
or
verw
or
mov
cmc
add
ror
sub
pop
jns
cmpb
lahf
and
pop
insl
dec
xor
mov
push
pop
mov
cmp
cltd
pushf
cli
sbb
mov
dec
jbe
fiaddl
mov
lock
loopne
cmp
xchg
nop
sbb
sar
lods
mov
in
popf
daa
test
push
mov
sub
push
inc
cld
push
inc
ret
jno
xor
js
sub
mov
push
sbb
int
daa
paddusb
cmp
add
sub
jecxz
mov
sbb
add
sub
jmp
fcmovnb
testl
lret
mov
add
jb
bound
movsl
xchg
rorb
insb
dec
mov
push
rcrb
inc
inc
add
push
outsb
cmp
iret
addr16
fs
add
vpmullw
mov
arpl
sbb
ja
push
in
adc
rcl
ss
adc
subb
imul
loopne
sub
int3
nop
dec
add
push
adc
xor
cld
sub
out
std
xor
pop
mov
pop
add
idivl
xor
pop
push
cs
add
pop
xchg
push
mov
sbb
add
lods
rcll
lahf
sbbl
inc
mov
and
add
xor
pop
push
pop
mov
mov
adc
inc
push
es
in
pop
pop
dec
mov
aad
cltd
sbb
pop
es
stos
sbb
icebp
pop
mov
incb
pop
mov
mov
and
sbb
add
inc
mov
cli
aas
in
add
xor
dec
mov
push
mov
out
ljmp
rcll
jo
and
mov
dec
sub
pop
adc
mov
jnp
js
inc
stc
add
cmp
arpl
sub
add
jge
adcb
jg
aas
jmp
sarb
loop
add
xchg
xchg
insb
mov
jno
add
mov
adc
mov
or
dec
clc
into
add
dec
dec
movsl
dec
lods
sub
mov
ret
repz
add
cltd
and
js
and
adc
adc
cmp
les
loopne
aad
pop
dec
and
inc
add
iret
or
fcompl
pusha
add
add
jmp
jno
scas
push
jecxz
mov
scas
jmp
aas
lea
lods
pop
or
jo
mov
sbb
cmp
scas
add
repnz
js
addr16
mov
inc
ret
xchg
pop
movsb
xchg
mov
add
jnp
inc
addw
and
das
arpl
icebp
rcrl
adc
mov
jo
add
popa
mov
pop
das
sub
sahf
sub
pop
and
enter
out
xchg
sub
add
and
push
in
mov
fcmovu
ds
adc
pop
clc
jmp
push
adc
movsb
sbb
lahf
add
aam
cli
xchg
pop
adc
roll
fucomip
ret
ja
aad
push
add
sbb
add
and
push
push
scas
inc
aad
jnp
add
adc
sbb
xchg
push
add
in
cmp
adc
fwait
popf
loope
or
mov
add
inc
xchg
dec
mov
push
mov
int3
xor
imul
rcrb
int
add
mov
les
sub
and
sahf
outsl
ss
add
inc
aam
cld
clc
dec
add
push
or
add
int3
jle
push
stos
mov
iret
rolb
dec
hlt
scas
add
jbe
add
add
aam
add
inc
gs
call
lock
pusha
lret
fidivl
movsl
sbb
inc
push
xor
dec
add
outsb
push
mov
add
xchg
addb
sbb
cwtl
icebp
jg
or
sub
in
mov
cs
ret
add
mov
dec
imul
add
sbb
add
sub
inc
adc
in
scas
adcb
aas
ret
mov
in
enter
out
mov
repz
rclb
xorb
xchg
add
int3
push
adc
mov
add
rclb
push
loop
jge
out
pop
adc
adc
sub
shl
leave
add
inc
lea
dec
in
dec
lock
jge
xchg
sub
dec
stos
mov
mov
roll
and
jmp
imul
loopne
mov
xchg
lret
fdivl
sar
mov
xchg
mov
in
lds
je
cmp
dec
jnp
jmp
std
jae
out
in
jns
inc
pop
mov
pop
inc
cmpb
sbb
cltd
and
cld
insl
xchg
adc
add
pop
stc
mov
lock
add
stos
sar
inc
lahf
mov
or
fsub
iret
aad
and
xchg
sbb
mov
jecxz
sub
inc
sub
inc
or
pop
pop
gs
dec
or
or
mov
push
ret
add
filds
pop
add
les
leave
jp
mov
add
shrb
cltd
mov
pop
jbe
cmp
in
sub
shrl
add
add
xchg
clc
ja
mov
cmp
dec
jmp
pushf
loopne
push
push
jle
nop
jp
or
jnp
mov
js
jmp
push
clc
sub
pop
ds
imul
xchg
push
pop
cwtl
ljmp
dec
jle
jo
in
and
mov
inc
xchg
sbb
inc
sbb
mov
cmp
jo
mov
sub
les
inc
out
pushf
add
adc
shlb
add
and
cmpb
jno
mov
push
cli
jl
xlat
jmp
ret
pop
push
add
out
gs
das
or
icebp
pop
imul
or
in
mov
mov
in
fisttpll
fbld
xor
add
jp
push
push
test
inc
lcall
mov
leave
push
in
or
repnz
sub
dec
pop
loopne
insb
and
cmc
pop
push
lds
iret
sbb
inc
filds
push
inc
push
mov
stos
add
gs
into
or
mov
lret
ja
or
xor
ficompl
cmp
adc
subl
je
cmp
push
pop
dec
loopne
pop
add
fisubrl
pop
add
call
add
out
int
cli
std
pop
test
pusha
pop
add
jl
sub
int3
dec
add
daa
ret
lret
ljmp
int
pop
jmp
add
ret
add
jae
add
adc
add
mov
ret
testl
enter
pushf
push
add
mov
xchg
push
in
add
push
and
orl
xorb
fwait
hlt
dec
xchg
in
add
ss
dec
mov
mov
mul
test
inc
inc
push
push
dec
adc
js
push
mov
cwtl
or
cmc
mov
mov
xor
insb
push
imul
lcall
les
pop
inc
inc
lret
das
inc
and
inc
data16
xchg
ja
dec
icebp
and
add
lret
xchg
add
jnp
cmp
ss
sbb
sbb
mov
xchg
and
sahf
int3
push
adc
adcl
adcb
aam
jg
fistpl
cmpsl
jnp
inc
adc
mov
popf
mov
push
cmp
cli
dec
add
dec
rcrb
pop
jae
dec
scas
mov
gs
add
mov
cmp
sub
push
or
add
repnz
cmp
jbe
jcxz
popa
loopne
mov
iret
test
pusha
inc
xchg
cvtps2pi
repnz
lcall
imul
mov
lds
jb
call
xchg
ljmp
pop
scas
in
xor
or
dec
out
sub
pop
or
addr16
sbbb
inc
mov
rcll
test
add
pop
mov
dec
movsl
loop
add
sub
fldl
push
pop
lea
push
add
hlt
jmp
push
xchg
push
add
jge
and
out
add
push
pop
test
test
or
inc
mov
and
jl
xchg
jo
or
jmp
xchg
call
dec
hlt
xchg
xor
or
push
xchg
movl
repnz
clc
xor
cmp
add
push
or
test
mov
push
pop
push
sbb
push
mov
jne
fnstsw
add
pop
pop
and
add
pop
nop
ds
mov
add
xlat
pop
out
xchg
into
add
mov
or
add
lret
fwait
push
and
pop
jns
flds
xor
add
fadds
xor
fidivl
rclb
imul
pop
jo
adc
movsb
jns
ret
scas
pop
test
xchg
mov
repnz
jg
and
mov
rcrl
pop
xchg
push
fxch
cmp
aam
notb
clc
push
add
mov
fwait
repnz
cli
sbb
mov
lea
repnz
sub
xchg
xlat
test
push
cld
dec
jmp
add
xor
aas
ret
orb
sbbb
imul
testb
sbb
lea
mov
mov
dec
push
jae
pop
shrb
sbb
cli
lahf
in
out
in
aaa
call
enter
iret
and
movsb
mov
fcmovnb
push
out
lea
pandn
pop
in
sti
popw
addb
sub
mov
mov
adc
mov
adc
cmpsl
ret
cli
addl
cld
movsb
adc
data16
add
push
cmp
pop
idivl
shl
sub
push
push
inc
mov
dec
cwtl
mov
sbb
cmpsb
sub
dec
nop
daa
lret
add
cmp
xor
lcall
dec
not
jp
sbb
dec
jns
or
adc
sub
xor
pop
subl
push
and
adc
add
mov
lods
jbe
jae
push
sbb
xor
out
or
sahf
xlat
xchg
push
add
popf
cmp
je
push
stos
add
mov
and
add
xor
stc
dec
adc
and
int
or
or
stos
and
sub
scas
cltd
jl
sub
push
or
shlb
pop
hlt
add
dec
push
jge
adc
testb
mov
mov
cwtl
cmpl
push
mov
xor
rdtsc
je
daa
jns
add
and
testl
and
inc
and
lods
mov
fldt
jae
sarl
xchg
lahf
nop
out
adc
pop
and
add
cs
jbe
mov
mov
in
dec
shll
loopne
xchg
add
push
cmp
sub
inc
clc
add
orl
add
vmwrite
aad
ret
mov
in
mov
xchg
icebp
pop
ret
sub
jae
push
mov
sar
movsb
mulb
cmp
push
inc
cltd
js
add
lret
mov
xchg
cli
mov
pop
add
cltd
popa
mov
ss
setbe
sub
xor
lret
cld
jns
mov
pop
add
jae
push
add
inc
loop
add
aaa
outsl
mov
movsl
ror
sti
jecxz
add
add
jge
stos
jl
fdivs
mov
sbb
push
add
int
js
sub
icebp
daa
fstl
sub
or
and
add
repz
add
lret
dec
aam
pop
ljmp
inc
add
pop
cwtl
scas
aad
add
sbb
ret
inc
sub
add
xchg
push
cs
add
insb
inc
pop
cmp
sub
or
jae
popf
mov
mov
imul
cmp
xchg
add
xchg
mov
pusha
cld
sbb
mov
add
std
hlt
rclb
and
lcall
add
xor
mov
cmpb
pop
push
xchg
call
insb
movsb
push
mov
icebp
movsl
ret
cs
js
push
out
fldl
popa
aas
mov
push
add
adc
imul
adc
jmp
popf
loope
test
bound
mov
div
mov
mov
fldl
add
call
test
cmp
pop
jecxz
mov
adc
add
enter
imul
add
and
jns
pop
andl
adcb
idivb
xlat
mov
mov
cwtl
add
or
cmp
xorb
sub
jge
inc
adc
aam
xchg
add
mov
lcall
sbb
bound
in
add
adc
mov
jb
idivb
or
inc
add
dec
sbb
repz
pop
adc
nop
scas
in
inc
mov
cmpxchg
sarl
mov
mov
push
and
incb
fwait
data16
jne
imull
dec
pop
mov
mov
ss
mov
add
jnp
mov
loop
xchg
xchg
mov
fisttpl
mov
mov
mov
xchg
mov
adc
add
mov
xor
dec
add
daa
cmc
cmpl
pop
data16
add
and
aas
adc
sbb
mov
sub
cmp
xchg
cmp
sub
add
push
mov
inc
add
dec
mov
jmp
xor
sbb
hlt
scas
pop
scas
pop
xor
loope
into
lret
sbb
add
mov
insb
add
sbb
fnstsw
jecxz
or
and
add
insb
mov
inc
add
sbb
xlat
or
pop
fidivrl
pop
ds
jmp
cmpsb
mov
push
mov
movaps
mov
sbb
add
cld
jns
sbb
psubsw
jl
xchg
sbb
lds
outsb
andb
jae
int
dec
loopne
sahf
loop
mov
add
add
mov
aad
in
ljmp
iret
dec
add
out
into
or
add
loopne
mov
push
add
jp
add
daa
ja
jb
repnz
pop
aad
testb
inc
add
mov
ljmp
psubusw
test
cmpsb
lods
add
push
sbb
mov
into
or
add
and
mov
cmpl
jb
jecxz
jnp
push
in
jl
gs
add
shrl
stc
add
add
aaa
add
je
cmp
jo
add
jno
das
add
nop
cli
les
jnp
ja
jge
movl
testl
jne
fsub
fbstp
in
leave
sub
repnz
enter
nop
pop
ret
or
jb
ss
push
add
cltd
jno
cld
enter
jo
add
jecxz
sbb
mov
inc
push
sti
inc
inc
into
shrl
jl
repz
icebp
xchg
aas
aam
or
nop
jg
mov
pop
je
loopne
add
imul
adc
mov
add
mov
xchg
addl
push
fldcw
sbb
lods
cmp
in
leave
sub
add
stos
and
aad
cs
out
pop
add
fmuls
lods
aas
mov
cmp
mov
cwtl
push
unpcklps
jg
add
fsts
xor
dec
sub
aam
push
add
lea
js
setne
pusha
dec
addr16
push
push
push
ret
mov
push
cmc
inc
cmp
adc
jnp
into
xchg
popf
dec
push
add
inc
or
sub
jae
add
cmpsb
push
mov
pop
adc
add
sub
xchg
movsl
pop
fldz
xchg
int3
mov
sbb
rclb
add
andl
add
pushf
addb
cwtl
cltd
add
and
push
pop
xor
pop
inc
add
jge
insb
add
adc
out
out
psubusw
dec
adc
jl
aas
hlt
mov
jmp
call
popf
xor
pop
mov
jne
arpl
out
mov
popa
cld
roll
nop
jl
leave
scas
xor
aas
test
pop
push
pop
sbb
int3
aam
or
mov
out
clc
push
in
add
fs
or
dec
and
add
insb
fcmovnu
roll
sahf
cmpsb
inc
add
cmp
mov
dec
scas
cmpsl
push
mov
xchg
mov
sbb
adc
dec
sti
add
inc
sbb
xlat
sub
push
aas
pop
add
insb
fwait
jb
push
add
mov
add
add
push
lahf
pusha
mov
pop
and
adc
sub
addb
pop
mov
stc
add
rorl
add
arpl
test
mov
jns
mov
loopne
mov
mov
lahf
pop
dec
sahf
out
test
inc
ret
loopne
mov
lcall
xchg
getsec
leave
jno
pusha
push
dec
aas
add
xor
movsb
mov
push
mov
dec
dec
ja
add
insb
pop
push
orl
push
mov
aam
cs
add
dec
pop
add
or
add
push
mov
inc
ds
int
add
dec
ljmp
bound
mov
ret
push
mov
pop
inc
aas
sarb
pop
sarl
adc
mov
fwait
roll
addr16
sbb
std
mov
mov
out
push
inc
das
shrb
inc
mov
imul
cmp
pop
xor
xchg
popf
aas
lret
push
pusha
inc
pop
sub
rolb
xor
and
and
push
pop
cmp
mov
les
jg
in
shrb
add
mov
add
ret
jne
inc
add
push
pop
loop
sbb
push
xlat
cmp
mov
ds
cwtl
mov
jb
add
sbb
and
sidtl
pop
gs
in
sbbl
movsb
inc
add
les
lret
sub
mov
repz
jge
add
frstor
push
out
push
hlt
jnp
jns
out
adc
aam
jge
mov
adc
push
sbb
cltd
push
push
xchg
ja
out
add
inc
adcl
push
pop
cld
push
jb
or
sbb
xor
movsl
out
mov
fidivrs
dec
imul
add
jg
mov
sub
add
out
call
fcompl
jnp
and
push
pusha
es
inc
inc
clc
adcb
inc
sbb
mov
sbb
or
dec
in
mov
popf
sbb
xor
das
movl
xchg
cmp
lea
lahf
and
shlb
add
stos
cs
cld
scas
push
stc
xchg
nop
mov
lock
add
fidivs
fwait
ds
popa
aas
xor
add
sub
addl
and
ficoms
push
mov
add
add
inc
cmc
push
cmp
pop
cmp
movsb
clc
dec
add
sbb
xchg
cli
or
jge
mov
pop
int
push
aaa
sahf
repz
ss
pop
sbb
jae
add
lock
mov
mov
pop
push
mov
sub
sub
jg
inc
test
hlt
out
pop
or
sub
xor
dec
mov
add
sub
decb
pop
inc
mov
add
xorb
fstpl
jo
sub
call
mov
inc
cmpsb
add
ljmp
add
xchg
push
xor
pop
into
push
adcl
add
cmp
pop
daa
inc
mov
sbb
push
inc
add
rcrb
std
enter
sub
lods
add
cmp
mov
jl
stos
or
or
enter
test
repz
and
call
push
fucom
in
ds
inc
cmp
add
add
xchg
and
loop
adc
mov
jecxz
repz
add
ds
test
nop
xor
sbb
add
movsl
inc
jns
push
add
jbe
dec
sbb
out
fsubrp
dec
sbb
mov
rolb
and
xlat
sbb
aaa
mul
mov
push
mov
loopne
xlat
add
arpl
or
mov
mov
ret
mov
stc
addb
test
lret
andb
rolb
pop
das
adc
mov
andl
ret
clc
mov
xchg
jmp
add
pushf
inc
mov
xchg
mov
cmp
inc
out
xchg
testl
xchg
mov
jecxz
sub
test
or
ret
add
or
xchg
fwait
push
popl
movsl
in
sub
add
jmp
add
pop
sbb
icebp
addl
or
xor
clc
in
add
scas
cmpsb
sub
add
xor
insb
fs
in
add
outsb
push
in
push
adc
pop
in
testb
and
mov
xor
push
add
push
sub
jno
jo
cmp
pusha
pusha
ret
out
lret
jnp
testb
adcl
clc
add
mov
imul
add
sub
mov
xor
movsb
add
inc
cmp
in
push
pop
cwtl
and
daa
mov
dec
loopne
add
dec
shlb
mov
sbb
sub
int3
and
dec
mov
fmul
fiadds
mov
icebp
outsl
lods
add
js
cmc
or
test
mov
jp
fnstsw
fs
cmp
add
dec
sahf
gs
pop
xchg
add
das
mov
clc
jb
lock
xchg
push
add
addr16
mov
imul
mov
shll
adc
call
popf
fisubrs
sbb
adc
jge
bound
jp
mov
and
dec
sub
mov
sahf
sbb
push
stos
or
lods
sbbb
out
sub
or
add
mov
out
cmp
add
xorb
mov
das
mov
jns
out
push
icebp
lock
inc
xor
mov
xor
sbb
jne
popa
enter
sub
sbb
and
mov
pop
cmpsb
adc
orb
sbb
add
rcrb
add
lock
cmpsb
lea
pop
cmpsl
dec
xchg
xchg
push
insl
mov
cwtl
add
mov
jo
aas
add
or
jbe
inc
fiadds
xor
das
lahf
stos
lods
out
fwait
out
add
xchg
mov
push
add
out
aad
add
ljmp
adc
jl
loopne
in
add
call
in
out
add
push
and
pusha
dec
adc
repnz
into
jle
scas
call
xchg
movsb
sbb
subb
gs
add
dec
call
add
sbb
or
cmp
push
loop
add
mov
add
dec
add
xchg
inc
pushf
adc
neg
add
dec
xchg
mov
add
mov
adc
hlt
ret
dec
dec
or
nop
adc
jmp
andl
test
stc
inc
into
mov
cltd
mov
inc
mov
xor
jecxz
xlat
add
sahf
pop
hlt
sbb
mov
sub
dec
pop
and
in
ljmp
ficomps
dec
cmpsb
aam
pop
add
stc
xchg
les
adc
fmuls
addl
xor
jno
pop
data16
jge
add
fs
adc
inc
in
loopne
insl
mov
hlt
mov
cli
cs
mov
jb
jne
add
test
mov
rorb
aam
jecxz
push
xchg
dec
sbb
dec
add
push
jae
add
gs
xor
flds
notl
add
stos
inc
out
xchg
roll
jno
xor
inc
cmpl
add
call
cmpsb
fs
bound
les
add
inc
imul
loopne
jbe
add
sar
call
adc
push
mov
js
ja
push
xchg
cmc
les
add
cmp
add
stc
inc
mov
js
adc
or
dec
out
mov
sub
push
cmp
faddl
les
xlat
add
fcmovne
out
mov
pop
out
aaa
add
xor
fdivr
add
dec
daa
add
les
test
push
xor
pop
and
and
push
mov
sub
mov
add
lock
add
xchg
cwtl
sbb
and
lahf
fwait
stc
mov
loopne
push
dec
pop
andl
cmpsl
cmp
mov
enter
sbb
fbld
hlt
ffree
je
fs
lret
scas
add
por
xchg
in
call
clc
mov
add
push
adc
xor
add
out
add
cmpsb
aas
mov
ss
push
sub
in
mov
aam
aaa
sbb
cmp
add
test
pop
cltd
dec
add
fldcw
mov
or
in
js
add
mov
dec
out
filds
dec
adc
jg
inc
inc
sbb
pop
pop
out
push
inc
into
lock
ret
jg
test
mov
pushf
fbstp
mov
es
jbe
aaa
mov
rorb
stc
addb
inc
inc
js
add
out
adc
rorb
push
sub
repnz
xchg
and
cs
and
inc
data16
add
or
jo
popl
pop
iret
adc
into
sbb
mov
and
jo
sbb
test
xlat
insb
cmpsl
dec
pop
fwait
sbb
rcll
add
insl
sub
mov
dec
jecxz
or
sti
mov
dec
jb
fnstenv
add
cltd
pop
aam
out
xor
hlt
push
sbb
pop
mov
xchg
nop
int3
ja
and
out
addl
stc
mov
jp
adc
mov
xor
mov
fnstsw
aam
pop
out
push
add
rclb
sti
xor
and
insb
aam
inc
jne
add
jne,pt
rclb
pushf
iret
incb
adc
xchg
fwait
xor
out
mov
mov
lds
xchg
sti
test
inc
jle
add
mov
mov
add
das
pop
and
popl
lcall
xor
cmpb
rorb
pop
sbb
daa
addw
xor
add
pop
pop
jmp
jp
push
or
and
call
add
movsb
ret
call
sbb
aas
add
int3
filds
into
popa
lcall
sahf
loopne
inc
mov
daa
sbb
xor
add
jmp
test
mov
mov
sbb
adc
rclb
mov
add
loop
jbe
and
outsl
add
adc
sbb
xor
jae
repnz
jnp
lret
sub
jbe
fadds
fidivs
cmp
push
push
xlat
ds
add
xchg
mov
out
and
mov
int
gs
add
ds
fs
jge
push
stos
clc
sahf
js
pop
test
pop
sarb
push
sbb
add
in
pop
loopne
cmpsl
adc
testb
xor
mov
mov
jmp
pop
sub
cmc
test
inc
push
jns
jo
mov
out
or
pusha
pop
das
test
je
dec
movsb
rcl
inc
jg
add
subb
add
and
jl
add
jo
or
insb
mov
cltd
adc
mov
add
in
push
sbb
outsb
sbb
mov
mov
jne
and
faddp
test
push
in
into
add
mov
push
data16
cmc
dec
and
sbb
out
cmpb
sbb
cmp
loop
fmuls
fistpl
mov
flds
cmp
or
dec
std
aam
aam
add
jo
add
and
push
sub
push
in
sbb
nop
sbb
xor
jp
add
inc
shrb
loop
or
adc
jns
add
fs
stos
xlat
outsl
jg
nop
test
ret
mov
lret
in
mov
xor
ss
es
int
mov
push
fildll
mov
je
in
inc
cli
out
cs
dec
add
cmp
sub
or
and
scas
inc
pop
pushf
jns
fidivrs
lds
mov
popf
adc
push
leave
ror
xchg
adc
jge
lcall
adc
dec
aam
lret
mov
or
sub
mov
jg
out
add
pop
xor
lahf
bound
mov
adc
cld
push
add
lcall
add
mov
out
pop
clc
lea
pushf
lock
repnz
mov
sbb
xchg
mov
ror
mov
neg
int
aam
mov
int
daa
mov
test
stc
aaa
jecxz
sub
mov
pop
mov
ljmp
jp
add
push
sub
xor
ret
mov
test
cmp
shll
adc
repz
loopne
mov
mov
push
pop
pop
sub
pop
into
sub
pusha
fidivl
jge
lsl
push
ss
stos
cmp
mov
sbb
inc
cmp
pop
add
test
inc
pushf
insl
dec
call
lea
sub
imul
shr
movl
xchg
add
push
dec
out
outsl
push
ljmp
insl
aas
jns
add
add
mov
add
pop
inc
dec
inc
mov
add
sbb
jle
cs
psubb
repnz
and
lea
cmp
pop
add
mov
pusha
dec
nop
inc
add
push
push
xchg
fcompl
mov
push
pop
xchg
jo
inc
adcb
sar
add
mov
out
cli
add
add
mov
inc
jmp
mov
iret
pusha
xlat
mov
add
lods
push
xchg
cmpsl
cmp
mov
xorb
xchg
sub
mov
lahf
sub
mov
jl,pn
xor
cld
lock
lock
sub
adc
hlt
add
pop
pop
mov
and
rorb
loopne
inc
data16
add
pop
add
push
enter
ficomps
fs
or
mov
cld
and
out
ret
mov
sbb
cmp
faddl
cmp
add
into
xchg
push
jns
incb
je
shlb
mov
jnp
idiv
shl
mov
sbbb
jmp
addb
scas
mov
adc
out
xor
in
test
clc
adcl
ja
dec
inc
jp
add
or
inc
cmp
inc
push
cmp
sub
in
jb
add
es
fwait
push
push
add
pop
mov
add
xlat
mov
mov
dec
dec
movsl
add
xchg
fsubrl
mov
sahf
mov
jecxz
adc
cmp
loop
cmp
xchg
loope
cmp
pop
out
xchg
sbb
lret
insb
clc
inc
aad
add
in
lcall
sbb
sti
shl
stos
add
fs
test
cli
inc
inc
push
rol
jno
add
outsb
pop
push
xor
fiadds
and
ja
ret
add
int
sbb
cmpsb
mov
ret
push
pop
jns
add
pop
fs
leave
add
shlb
pushf
mov
cli
add
pop
add
gs
out
inc
test
pop
sub
or
xchg
popl
xor
cmc
les
add
inc
xor
cmp
sbb
sbb
sahf
jbe
or
lock
icebp
adcl
mov
xor
cmp
arpl
movl
shll
mov
dec
pop
stc
in
add
repnz
pop
dec
outsl
aas
stos
add
ret
cmpsl
push
xchg
adc
pop
add
mov
push
outsb
add
pushf
mov
cmc
add
stos
scas
push
push
mov
les
test
inc
outsb
pusha
pushf
sbb
dec
push
adc
and
dec
aas
add
xchg
adc
fucomip
xchg
xor
clc
pop
mov
shlb
push
add
sbb
hlt
jb
mov
inc
pop
sbb
cmp
enter
rorl
movsb
or
or
decb
lock
shlb
add
addl
adc
call
add
jno
in
test
push
bound
xor
fdiv
flds
mov
sbb
sub
ds
and
mov
mov
hlt
in
cmc
lret
scas
addl
adc
out
inc
cld
push
cmp
test
cmp
inc
test
fiaddl
pop
add
mov
jbe
pop
lock
aad
pusha
decb
imul
push
dec
add
lock
add
cmpsl
scas
int
inc
add
add
stos
cli
mov
mov
pop
iret
push
sbb
jne
add
inc
imul
sub
mov
in
add
mov
inc
or
shlb
jp
add
stos
rcr
call
roll
stos
mov
sbb
out
dec
push
mov
cwtl
movsb
add
add
or
adc
dec
test
popa
xor
adc
minps
aam
mov
cmc
cmp
bound
mov
mov
repnz
aas
push
jnp
add
loope
add
xchg
dec
addr16
ds
add
daa
je
sub
in
adcl
pop
and
clc
push
lea
icebp
dec
jmp
jg
mov
fcomps
test
jnp
rorb
xchg
shll
xchg
and
inc
loopne
stc
clc
in
sahf
insl
pop
push
lock
popf
push
add
cmpsl
jp
pop
scas
nop
clc
nop
inc
add
rolb
add
jg
inc
xor
rolb
add
mov
jge
push
add
xchg
push
aaa
add
mov
push
int
in
sbb
push
xchg
in
jle
andl
jge
adc
sbb
pop
mov
loopne
cmpb
mov
pop
cmpb
movsb
mov
lods
mov
dec
fldl
clc
enter
cmp
mov
ucomiss
mov
mov
arpl
push
lock
add
mov
inc
lock
mov
mov
add
fistpl
int3
roll
adc
insb
aas
xor
ja
add
jge
stc
xorb
and
ss
inc
adc
iret
daa
add
sbb
in
and
jle
cmp
dec
int3
lods
into
aas
iret
jmp
xchg
out
jmp
add
fbstp
mov
cwtl
add
mov
gs
xchg
and
add
push
enter
nop
test
inc
cli
pop
xchg
pop
sub
out
pusha
jb
fmull
insb
andb
mov
in
ja
add
loop
jnp
push
adcb
mov
push
xor
adc
rcrl
mov
pop
dec
es
jl
add
add
pop
pop
mov
mov
add
into
in
or
xor
jo
lret
nop
jecxz
and
clzero
dec
fdivrp
in
mov
inc
mov
xor
jnp
pop
adc
rorb
data16
enter
fs
test
add
sub
pusha
rcrb
dec
loopne
cmp
enter
sub
mov
inc
movsl
cwtl
imul
mov
out
pop
pop
imul
inc
cmpsb
jns
xchg
xchg
movsl
outsl
add
mov
xorl
repz
inc
insb
push
inc
int
aad
add
cmpsb
gs
in
pop
jbe
stos
cwtl
adc
ljmp
pop
and
ja
pop
mov
mov
jo
aaa
repnz
sub
add
test
movb
gs
repnz
dec
jge
add
les
loop
add
jno
in
cld
mov
xor
xorb
mov
mov
dec
mov
push
sbb
and
cmp
cld
sub
bound
loope
pusha
and
sub
add
mov
jbe
fisubs
sti
dec
xchg
cltd
jge
gs
dec
push
lods
test
cmp
xlat
adc
mov
or
or
or
ret
inc
pop
adc
push
add
xchg
clc
clc
test
push
or
rcr
sub
sti
dec
add
aaa
test
je
adc
dec
and
sbb
sarb
test
pop
adc
and
popf
sahf
inc
test
jg
xor
push
jle
roll
pop
cmp
sub
cmp
ret
dec
loop
jle
add
je
sub
push
loope
mov
add
lock
nop
push
pusha
push
cwtl
and
fs
push
fidivrs
pop
rorl
dec
sbb
add
pop
inc
sbb
xchg
pop
push
add
idivl
mov
lods
in
lods
jl
pushf
dec
dec
cwtl
inc
or
leave
cltd
frstor
addl
xchg
jge
xor
sub
scas
clc
lods
inc
push
xchg
add
sbb
cmp
xchg
add
loop
test
add
pop
mov
mov
enter
ret
mov
add
leave
aaa
xchg
js
lahf
daa
add
push
dec
ret
scas
movsb
bnd
je
inc
add
pop
inc
cmc
fsts
call
sub
andl
nop
pop
icebp
push
pop
cs
in
arpl
lea
push
es
loopne
pop
loope
jo
inc
jns
xchg
sbbb
lods
arpl
enter
pusha
cmc
es
push
aaa
shlb
testl
sbb
sti
add
pop
pop
mov
lock
add
lcall
pop
test
cmp
or
xchg
and
fs
movsb
jb
or
mov
idivl
ret
push
push
cltd
inc
add
lcall
push
mov
imulb
insb
cmp
push
int3
sarl
rcl
fcoms
fldenv
mov
jle
add
mov
dec
inc
clc
add
les
pop
aaa
mov
inc
add
lret
out
std
cwtl
add
mov
lahf
aas
mov
bnd
add
mov
lods
add
into
mov
cmp
ds
xor
jns
push
lret
or
jl
subb
cmp
or
iret
loope
enter
xchg
lock
or
dec
xlat
sbbl
fcomp
push
dec
call
sbb
call
or
jecxz
rolb
lret
in
rcrl
or
mov
and
add
lcall
sub
inc
add
push
enter
fldl
or
jmp
arpl
inc
shrb
dec
cli
mov
push
cs
inc
mov
mov
cmp
jmp
or
cmp
popf
addb
cmpsb
xchg
sbb
mov
cli
out
cld
add
pop
push
cltd
popf
cmp
push
add
inc
inc
pop
in
iret
dec
jo
xor
add
stos
add
mov
notb
mov
aam
add
pop
inc
inc
add
sub
mov
cmp
fimull
add
or
int3
lret
or
loope
sub
jne
ret
cwtl
adc
or
jmp
and
or
int
scas
jnp
roll
jp
or
inc
xchg
sub
jo
test
xor
add
test
ret
adc
stos
add
mov
cmp
mov
insb
rcrb
lret
arpl
ljmp
cmp
cwtl
bound
pop
mov
int3
sub
jl
movsb
pusha
cmp
push
int3
add
dec
jo
jg
outsb
adc
inc
mov
add
add
loop
in
add
or
add
xlat
ja
xchg
mov
test
jmp
add
fs
pusha
xor
add
xchg
lret
add
inc
xor
xlat
lock
outsb
push
cmpsl
mov
out
pusha
mov
iret
ljmp
jbe
add
mov
xlat
cltd
or
and
test
push
push
inc
mov
test
xchg
add
pusha
lcall
push
or
test
sub
adc
dec
or
int
into
imul
push
jb
add
cmp
fdivrs
or
out
mov
dec
xchg
das
add
gs
js
ret
fsubp
shlb
fs
nop
jne
jl
add
mov
fsub
push
pop
or
sbb
add
cli
mov
mov
paddd
scas
rorl
add
mov
jle
add
xchg
adc
pop
sub
icebp
push
scas
jp
lcall
add
jo
jl
and
xchg
insb
scas
in
xchg
add
jg
test
pop
pop
and
lods
xor
sbb
push
push
sub
sub
adc
call
orb
fwait
out
cmc
jl
xorb
mov
fnstcw
loope
lldt
push
inc
fcmove
out
mov
imul
sbb
xchg
loopne
or
cmp
xor
icebp
aaa
push
pushf
and
cmp
mov
sub
add
daa
cmp
pop
jl
and
aaa
fmull
push
out
mov
sub
xchg
in
movsb
je
inc
into
mov
add
lods
xchg
mov
in
popa
xchg
add
out
mov
rclb
cmp
stos
popf
xchg
mov
loop
dec
sahf
sbb
inc
mov
add
xor
orl
sbb
or
loop
aas
lods
rclb
xchg
fdivl
xchg
xchg
xor
pop
pop
push
decb
sbb
cmp
push
jae
jo
pusha
adc
jnp
shrl
insl
add
les
mov
push
divl
and
outsl
stos
add
mov
add
mov
push
or
popf
lds
push
add
mov
add
nop
pushl
add
cmp
repz
and
imul
cwtl
add
or
add
or
filds
stc
in
sarb
add
mov
loope
stos
add
icebp
jns
shl
xchg
outsl
loopne
hlt
cmp
mov
daa
cmpsb
cwtl
xchg
push
je
sub
aaa
popa
and
aaa
add
jns
pop
add
push
add
mov
test
adc
pop
cmp
ret
add
push
sub
inc
das
jmp
ss
xor
test
fwait
pop
repnz
in
insl
outsb
add
add
fisubrl
sub
mov
or
pop
imul
popf
jns
adc
stc
movsb
mov
out
js
add
push
pop
mov
mov
inc
jecxz
arpl
inc
movsb
outsl
add
pop
lret
xor
xor
sub
fdivs
add
shr
or
push
mov
cmp
in
ljmp
and
lods
ja
add
leave
xor
daa
dec
add
enter
mov
add
sarl
add
ds
and
jns
ret
add
sbb
mov
add
ja
test
sahf
adc
pop
stos
sbb
outsb
cmp
loop
add
int
call
add
push
insl
xchg
fstps
jl
add
movsb
repnz
addb
cmp
xchg
add
cmpsb
imul
dec
scas
add
jl
and
push
out
orl
outsl
lds
sub
lea
sbb
or
ffreep
repz
jp
jne
jae
pop
mov
aas
add
dec
mov
jnp
add
dec
jp
jl
inc
sbb
mov
xchg
rol
pop
pop
or
xchg
add
xchg
das
clc
cltd
mov
aam
sbbb
sbb
add
test
jne
dec
addl
lds
into
cmp
xor
add
imul
add
mov
mov
cmp
and
sub
jb
adc
inc
mov
mov
daa
push
dec
outsl
fs
or
xchg
mov
xchg
sarb
add
push
mov
fwait
dec
fxch
add
cmp
outsb
call
push
jp
pop
bound
cwtl
or
cmpsl
out
sbb
jbe
sbb
shr
cmc
xlat
fistpll
into
sub
adc
movsl
jge
sbb
aad
mov
mov
cmp
pop
negl
add
sbb
xchg
jae
pop
add
xchg
sbb
add
shrb
shl
add
test
dec
sbb
sub
mov
or
jb
xor
cmpsl
sti
adc
add
lds
and
add
cld
dec
cmp
loope
and
cmpb
sbb
mov
inc
out
push
push
ret
adc
sbb
sbb
cmp
rclb
sbb
es
add
mov
mov
adc
jo
and
pop
jmp
testl
mov
negb
fcmovne
dec
cmp
adc
add
mov
sarb
ljmp
cmp
stc
pop
cld
and
int
sbbl
cltd
lock
addl
mov
in
jl
jge
xor
mov
add
and
jbe
sub
test
and
cs
leave
pop
adc
pop
scas
dec
mov
mov
popa
xchg
sbb
rcl
cmp
in
cmp
jo
repnz
add
leave
aas
push
cli
test
addb
sub
or
cs
mov
imul
pmulhuw
and
pushl
mov
cmp
xor
movsb
in
pop
loope
lock
xor
jbe
cmp
bound
pushf
mov
add
aas
outsl
popl
push
jno
outsb
pop
repnz
leave
add
add
mov
sysenter
mov
cmpsl
inc
add
daa
jecxz
jecxz
pusha
sbb
add
push
add
xor
and
add
jne
pcmpgtw
xchg
inc
in
inc
dec
ret
lock
cmpsb
mov
cmp
push
out
and
ljmp
sbb
jb
add
cmp
xor
add
loopne
and
test
or
sub
push
outsb
pushf
out
je
add
cmp
repz
jno
push
in
insb
fmuls
add
or
jo,pt
add
std
inc
add
sbbb
dec
add
dec
mov
popa
dec
out
push
mov
jecxz
mov
clc
pop
xor
pop
ja
hlt
adc
push
push
xchg
push
xor
testl
mov
push
mov
nop
popf
xchg
jne
mov
sub
test
sub
push
mov
cli
pusha
aas
adc
or
mov
jno
dec
imul
aas
add
ret
mov
or
notb
add
mov
inc
sub
pusha
dec
and
lret
outsb
or
xor
lds
aas
add
xor
sub
mov
pop
push
mov
std
int
add
xor
fs
push
xor
or
sbb
pop
adc
aam
mov
pop
mov
hlt
xor
mov
xchg
jno
add
xchg
jnp
xchg
jg
stos
imul
sub
add
mov
fcoml
lock
pop
add
adc
mov
scas
lock
pushf
jg
mov
stos
cmp
cs
ret
xchg
cmp
adc
xor
xchg
mov
andl
xchg
jl
icebp
xor
shll
inc
test
adc
and
push
or
and
dec
gs
ljmp
adc
adc
sbb
adc
sbb
mov
icebp
and
xor
adc
shlb
out
cmp
cli
push
cs
add
and
mov
pop
sub
jle
or
data16
mov
lds
sbb
cmpsb
xchg
adcb
rdmsr
add
add
add
int
mov
push
outsb
adc
mov
xlat
add
rorb
xor
cmpsb
add
and
pop
bound
jne
cmp
call
jle
movsb
cwtl
enter
int3
test
jecxz
mov
cmpsb
add
sub
es
shll
add
mov
or
pop
aam
stos
sbb
enter
xlat
data16
add
pop
mov
addr16
and
lret
in
mov
add
pop
mov
repz
inc
jecxz
int
pop
add
fnstenv
test
push
jnp
add
push
add
push
pop
add
cmp
mov
add
push
icebp
fucomi
mov
xchg
or
and
test
je
js
add
xor
xor
lock
push
setno
add
jbe
mov
imul
int3
cmpsb
sbb
enter
adc
pop
adc
je
stc
hlt
hlt
jo
bound
idiv
mov
nop
add
pop
sub
sti
push
addl
in
xchg
shll
dec
add
leave
dec
lea
or
xchg
add
in
clc
and
push
stos
cmpb
sbb
iret
xchg
dec
pop
add
insl
lahf
adc
das
or
adc
shll
popl
imul
loop
inc
out
xor
popl
xchg
loopne
or
sub
cmp
sbb
icebp
or
cmc
in
cwtl
add
repnz
in
cltd
sbb
addl
mov
rolb
stc
xor
mov
add
mov
inc
and
sbb
test
iret
inc
stos
and
cmp
shrb
decb
nop
adcb
xor
pop
fsubrp
lods
sbb
and
mov
inc
sub
repnz
add
sbb
js
jecxz
cmp
out
mov
sub
mov
pop
stc
ljmp
sbb
cltd
pop
add
in
imul
adc
dec
jmp
dec
mov
clc
flds
add
add
mov
push
inc
or
fwait
sbb
inc
insb
je
adc
jle
add
inc
mov
add
adc
add
lods
leave
mov
add
bound
aaa
mov
adc
pop
jl
xor
ljmp
adc
int3
pop
scas
pop
or
cmp
aaa
sbb
jl
and
adc
add
xor
or
mov
sbb
lcall
xchg
add
xor
xor
pop
add
cmp
sbb
mov
call
jmp
outsl
jbe
cmp
pusha
add
mov
fadds
inc
adc
mov
or
in
inc
and
add
mov
lods
insl
ret
test
les
testl
add
mov
arpl
push
add
das
cld
mov
add
jae
lret
and
dec
dec
xor
add
inc
das
jge
push
test
dec
push
aam
adc
xor
enter
out
mov
xor
dec
pop
dec
jns
jnp
add
int3
pusha
inc
into
inc
add
xchg
xor
in
xchg
cmp
loopne
sbb
mov
idiv
xor
dec
push
push
xchg
dec
jnp
add
add
add
popf
in
inc
xor
push
loope
in
adc
aas
and
xchg
sub
shlb
fs
add
icebp
repz
push
mov
lods
test
sub
mov
mov
add
xchg
xchg
or
pop
ret
arpl
popf
lds
daa
ljmp
icebp
out
cmc
sbb
push
ja
xor
xor
inc
pop
mov
sbb
jmp
addr16
add
out
mov
push
fldcw
adc
loop
enter
shll
out
sub
and
popa
fldl
jl
in
mov
fdivrs
jmp
add
movb
add
mov
out
setb
es
jecxz
and
add
ret
roll
int
cmp
loope
xchg
repz
or
mov
jmp
adc
push
jae
ss
sbb
js
in
cwtl
les
les
xor
leave
call
xor
cmp
popf
nop
pusha
aam
add
sti
andl
cltd
xor
xchg
lock
jbe
sub
push
gs
mov
add
cmpsb
nop
dec
loope
inc
add
mov
mov
mov
hlt
in
mov
cmc
movsb
xchg
aad
pop
sbb
sbb
enter
iret
cmp
and
shr
out
adc
dec
shl
sub
jne
add
dec
pop
or
mov
cmp
pop
add
std
dec
clc
mov
ret
test
inc
int
xor
ror
sbb
lods
add
notb
outsb
add
jecxz
data16
insb
add
inc
dec
pusha
nop
rcrl
add
imul
xor
xor
jb
out
js
aaa
fadds
adc
lret
sbb
mov
mov
lahf
add
mov
or
adc
inc
cwtl
pop
sahf
sbb
add
push
loop
push
inc
pop
aam
data16
and
cmp
mov
and
add
test
test
in
mov
jp
cmpsb
clc
push
std
xchg
push
push
jle
or
add
dec
les
cmp
addl
mov
les
mov
mov
int
pop
or
leave
in
pushl
pop
lock
add
ds
repnz
filds
std
xlat
pop
jg
add
push
ret
pop
fisubrl
in
jne
mov
dec
adc
add
pop
fidivrs
cwtl
jb
mov
inc
mov
nop
iret
mov
sub
add
push
int
sbb
lret
add
iret
addb
mov
sbb
mov
push
shl
add
mov
push
add
xor
pusha
pushf
test
sbb
adc
dec
or
add
push
inc
or
add
jge
cs
jl
add
sub
enter
add
and
xchg
add
imul
inc
inc
add
imul
cmp
dec
jge
iret
js
xchg
mov
cmp
ds
inc
sub
sub
adcb
xchg
mov
xchg
xchg
xor
dec
pop
in
add
cmp
js
push
cmpsb
add
push
mov
lret
mov
add
sub
lahf
and
mov
push
adc
or
loopne
roll
test
sub
pushf
cmp
nop
cmpb
pop
stos
dec
add
jno
sub
insb
cmp
sarb
cmp
movsb
mov
repnz
jmp
imul
sbb
xchg
in
lret
enter
inc
adc
and
test
push
xchg
cld
les
loope
cmpsl
add
test
mov
add
xor
xchg
add
xor
pusha
fstpt
add
lea
adc
add
pushf
jb
add
adc
daa
add
and
roll
je
or
mov
jno
adcl
jge
add
je
inc
pusha
lock
pusha
fwait
xchg
add
in
mov
mov
lods
mov
add
popf
xchg
cmc
and
arpl
addr16
mov
das
cmp
daa
jp
xor
xchg
add
mov
fdivrl
pusha
jns
addb
sahf
add
pop
dec
outsl
es
data16
loopne
dec
adc
mov
cmpsb
sbb
cld
mov
push
dec
stos
fnstsw
push
pop
mov
ljmp
add
dec
nop
xor
add
jmp
cmpsb
cmp
jmp
mov
in
iret
add
pop
mov
orb
addr16
enter
test
add
lods
pop
add
fisubrl
add
inc
cmp
cmpsb
das
rclb
xchg
adc
outsb
push
add
in
lret
mov
jo
or
ret
loope
or
ja
mov
mov
psubw
and
pop
xchg
add
call
out
jnp
push
repnz
pushf
inc
mov
or
call
mov
adc
adc
fdivp
call
orb
cmp
mov
mov
cld
aad
call
fs
mov
inc
add
pop
andl
loop
cmp
pusha
lret
and
jge
les
xor
faddl
xor
xlat
xor
fprem
pop
ljmp
in
xor
fimuls
sbb
add
xchg
insl
inc
add
ljmp
mov
mov
test
mov
add
xchg
dec
and
inc
add
out
and
push
sbb
into
push
xlat
pop
and
fs
repnz
and
add
mov
and
arpl
adc
pop
inc
in
or
sub
dec
add
pop
jecxz
call
mov
inc
adc
cmpl
xor
add
ficoml
pop
cs
lods
mov
and
xlat
ljmp
fstps
pop
outsb
stos
dec
pop
ja
jp
push
stc
out
lret
dec
xchg
mov
add
jb
inc
mov
ljmp
cmp
rcl
xlat
out
sbb
push
cld
push
or
sbb
add
movups
es
ret
add
data16
sub
loopne
and
cld
mov
dec
sub
test
jns
loope
jno
add
push
adc
int
sarl
add
dec
push
pop
test
mov
sbb
mov
adc
add
test
fwait
ss
xchg
es
jle
loope
and
push
add
into
dec
adc
xlat
cmp
sti
mov
mov
lods
mov
ljmp
adc
subl
cmp
dec
or
loopne
lahf
es
scas
pop
pop
sub
mov
adc
rolb
add
add
and
pop
push
cmpb
push
add
inc
pusha
or
stos
ss
adc
add
pop
and
add
jmp
dec
add
shl
add
pop
or
cmp
fstpl
mov
push
mov
mov
xor
inc
shld
add
aas
add
fwait
cmp
rolb
push
and
add
push
xchg
inc
in
daa
pop
add
lds
jmp
cmp
add
lock
inc
sub
inc
add
adc
ret
pushf
push
or
push
dec
repnz
xchg
scas
and
out
pop
add
jbe
ljmp
movsb
scas
mov
push
adcb
iret
icebp
fdivl
lock
rcrb
imul
mov
add
cmc
lahf
into
and
repz
bnd
adc
cmp
jge
testl
je
imul
jmp
cmc
sbb
jp
cmpsl
in
stc
or
add
lcall
add
lret
push
mov
shll
inc
ret
dec
rclb
loopne
jmp
call
or
cmp
movsl
flds
xor
ret
cld
add
ds
jecxz
add
pop
fstpl
jmp
rcrb
imul
nop
pop
in
addr16
fcompl
lods
mov
sarl
addr16
sbbl
addb
jns
jo
enter
pop
pop
lock
jb
loopne
mov
inc
add
mov
daa
movsb
add
test
ljmp
sbb
xor
enter
lcall
mov
arpl
jns
jp
pop
pop
mov
jnp
and
popa
sbb
les
xor
xor
mov
addb
cltd
lock
not
add
mov
adc
and
gs
incb
mov
mov
cmp
push
arpl
sub
mov
data16
shrb
adcb
xor
or
loop
pop
lret
and
add
idivl
pop
fstl
pop
and
int
pop
sbb
xchg
subb
pop
add
sub
sarb
add
std
jg
add
cwtl
sahf
mov
pop
xchg
roll
xor
lret
add
popf
cmp
pop
mov
xchg
cmc
jns
add
add
and
outsl
or
mov
dec
sub
add
jo
mov
add
adc
jns
nop
push
dec
mov
int
ja
test
lcall
lock
add
mov
dec
insl
test
mov
dec
mov
or
pushf
cmc
inc
ds
loopne
add
outsl
sahf
xchg
je
add
cwtl
jp
add
int
test
out
inc
insb
add
mov
or
jb
add
pop
cwtl
add
add
mov
pop
add
xchg
cmp
xor
jno
add
xchg
mov
andl
sarl
sub
in
lock
aad
addb
xor
pushf
cwtl
lds
fiadds
push
and
pop
push
xorb
repnz
sub
stos
inc
inc
lea
sbb
enter
inc
sbb
scas
aas
int
xor
adc
js
ret
jecxz
lcall
sub
push
sub
add
cld
sbb
xchg
das
out
stos
cli
add
jp
dec
or
lods
push
and
outsl
fs
add
stc
xor
out
add
or
insb
pop
mov
add
pop
and
lcall
sbb
lock
sarb
popl
mov
or
lods
call
orl
xchg
sar
xorb
dec
jo
daa
mov
inc
jnp
sbb
push
sbb
add
insl
or
fs
xor
roll
add
cmpsl
pop
loop
jmp
mov
cmp
add
mov
aaa
lock
push
dec
inc
and
adcl
jp
into
inc
add
inc
testb
and
ret
mov
adc
cmovb
dec
sbb
cld
clc
arpl
add
inc
jl
sti
nop
adc
sbb
inc
add
jnp
pop
inc
push
cwtl
jne
pop
add
iret
mov
cli
xor
add
xchg
and
jae
daa
add
xor
jge
jecxz
add
cmp
mov
inc
movl
mov
aaa
add
jge
das
bound
call
lret
or
dec
push
and
add
add
arpl
fcmovu
pop
hlt
jl
adc
cmp
jle
subb
sub
icebp
push
add
rcrb
ret
out
lods
mov
xchg
adcl
or
loopne
dec
in
aaa
xorb
scas
call
mov
add
out
push
scas
lds
shlb
or
scas
mov
sbb
repz
int
andl
lahf
icebp
repnz
paddw
into
stos
add
inc
outsl
rorb
ja
push
or
cs
cmp
add
xor
inc
cmpb
fcom
and
insb
push
nop
mov
dec
cmp
xor
mov
add
ret
xor
out
jecxz
jb
pop
jb
movsb
pop
or
mov
jl
imul
mov
add
push
xchg
fisttpll
mov
cld
add
mov
xchg
ss
jo
pusha
xchg
sub
ljmp
jne
add
add
or
push
cmc
lea
mov
push
sub
fnsave
iret
pop
pmaddwd
xor
mov
xor
add
dec
xchg
mov
out
mov
mov
test
lret
jo
ficoml
adc
ja
xor
pop
mov
cs
std
mov
pusha
pop
inc
dec
mov
add
icebp
sbb
loop
jge
add
sub
pusha
pop
pusha
popa
iret
aad
sbb
jo
adc
ds
add
fildl
sub
sbb
sarl
mov
test
idivl
adc
mov
xchg
cs
xchg
lock
les
lret
ljmp
dec
push
xchg
ja
popa
add
pop
addb
pop
in
mov
dec
rcr
jno
sub
pop
stos
or
sbb
add
cli
push
jns
cld
xchg
add
in
mov
push
adcb
dec
mov
lahf
push
add
sahf
add
xchg
sub
jo
pop
aaa
outsb
stos
pusha
sbbl
cmpsl
les
repnz
jge
cltd
sbb
or
lea
add
dec
mov
daa
add
add
test
xrelease
dec
mov
xor
out
je
adc
jo
lock
gs
cwtl
sub
and
adc
lods
test
add
test
inc
xor
push
xor
xor
sbb
aam
add
pusha
shrb
cli
in
dec
add
mov
dec
out
rorl
cld
xor
sbb
jno
int3
adc
sub
in
sbb
das
popw
add
xor
push
daa
add
lcall
call
jl
iret
mov
add
xchg
subl
cmp
andb
dec
popl
subl
adc
add
lret
pushf
add
xchg
inc
rclb
add
xchg
mov
popf
lahf
adc
inc
repz
sahf
enter
inc
mov
loopne
cmpsl
sbb
ljmp
and
in
cmp
sbb
sbb
or
jbe
xchg
dec
pop
push
pop
arpl
rcrb
mov
andb
add
je
xchg
out
inc
icebp
add
popl
aam
int3
mov
mov
dec
mov
lahf
aas
or
orl
adc
pop
bound
sarb
cli
shr
js
and
aad
rcr
data16
aam
dec
add
mov
mul
scas
jo
cmpsb
lods
pop
fs
mov
mov
dec
mov
push
jbe
test
in
repnz
popl
sbb
iret
jmp
ljmp
loope
dec
rcrb
in
ds
push
data16
inc
ss
add
inc
xorb
not
xchg
clc
xchg
std
cmp
scas
jmp
mov
rcl
cmpsl
jo
cs
repz
and
jo
xchg
pop
test
or
mov
movsb
xchg
pop
fildl
and
cmp
mov
add
inc
call
cli
aam
call
sub
push
cs
mov
dec
lcall
movsl
mov
add
test
add
mov
sbb
clc
insb
add
jp
test
cmpb
pop
add
sub
arpl
lock
ss
sar
aaa
add
mull
sbb
into
js
or
sub
lods
test
es
les
adc
in
push
fs
sub
xor
fisubl
xchg
jmp
xor
lods
add
sub
imul
call
sub
mov
iret
push
sbb
cld
xchg
mov
shlb
scas
shll
xchg
lods
push
or
daa
lcall
sbb
je
out
jecxz
xchg
lret
out
popf
mov
test
jge
add
jge
xor
add
test
mov
add
test
rorb
mov
add
pop
jp
test
pop
adc
xchg
mov
add
dec
or
or
push
ljmp
fwait
add
cmp
sub
jg
add
loop
inc
or
or
add
xor
dec
inc
add
fsubl
dec
sbb
aam
cld
add
xor
or
xchg
adc
dec
inc
cmpsl
shl
jge
cmp
add
mov
mov
push
ds
imul
fdivl
ret
sbb
jl
pop
je
mov
stos
fwait
add
in
sahf
or
pop
dec
add
test
in
faddl
jnp
lods
cmc
push
xchg
mov
add
jg
push
mov
cmpsl
or
add
sbb
mov
and
add
dec
adc
cld
and
mov
or
call
cmp
push
scas
add
adc
add
push
and
inc
and
loope
sbb
inc
xchg
add
push
negb
xorl
repnz
jne
add
xchg
or
cmp
outsl
sub
sbb
xlat
sbb
xchg
add
jmp
ljmp
test
loope
xor
xchg
xchg
pusha
or
push
pusha
mov
xlat
pop
dec
jo
sub
jbe
daa
inc
mov
cmp
imul
dec
popf
push
rol
pusha
je
jnp
or
xchg
mov
push
rolb
mov
add
or
stos
stos
popl
incl
in
mov
in
cwtl
pop
and
cmp
enter
cli
mov
int3
xchg
sbb
jmp
add
lods
mov
dec
jb
mov
sbb
add
push
push
add
pop
adc
xchg
cltd
popf
jp
xor
outsb
loopne
stc
mov
sti
mov
dec
add
arpl
shlb
fwait
inc
lock
test
pop
insl
adc
loope
or
ror
mov
and
push
dec
nop
sub
xor
xchg
push
cs
movsb
cmp
aaa
add
push
add
in
popf
in
sbb
lock
inc
dec
cmc
pop
adc
pop
mov
dec
and
jnp
add
cmp
jno
mov
dec
add
xchg
dec
movsl
pop
out
mov
out
pop
inc
push
dec
ret
mov
add
push
in
ja
rorb
or
mov
or
mov
aam
repz
imul
sbb
mov
nop
inc
push
jno
jo
add
pop
add
je
mov
pop
scas
outsl
dec
adc
dec
jg
shlb
mov
or
sbb
test
setno
cltd
repnz
lret
xchg
add
std
pop
mov
cli
ret
adc
xchg
mov
daa
xchg
pop
jl
add
sbb
aad
imul
lret
out
mov
into
jo
lcall
movsl
add
push
movsb
imul
sbb
xor
mov
stc
dec
loop
and
cmp
fwait
pop
clc
jp
dec
add
adc
pusha
sbb
xorb
adc
jbe
add
push
add
xchg
adc
sete
fidivrl
dec
add
sub
mov
repz
iret
orb
mov
lret
sti
add
leave
std
jb
leave
adc
fmuls
add
loopne
aaa
pop
int3
jl
in
jae
add
or
pop
lock
xchg
outsl
add
xlat
and
and
cmp
push
dec
jp
insl
xor
adc
push
aam
bswap
sahf
push
les
xchg
cmp
inc
repnz
test
adc
setb
sbb
loopne
mov
fwait
mov
xchg
sahf
pop
enter
xor
adc
loop
add
in
mov
jno
out
sbb
mov
mov
push
movsb
aas
arpl
dec
add
xor
add
mov
add
sub
fildll
jnp
push
sbb
les
sbb
lcall
loopne
pop
add
lret
sub
inc
cmp
lea
ficomps
xor
pop
arpl
clc
sbb
sub
shlb
mov
lods
and
test
scas
aas
add
sbb
cmc
das
or
cmp
add
ds
hlt
add
insl
add
fnsave
or
bound
add
xor
xchg
xor
add
mov
sbb
and
pop
adc
imul
inc
sbb
sub
lds
and
test
andl
xchg
jns
in
add
fmuls
inc
jp
and
add
in
lods
cmp
popf
add
shlb
aas
sub
lcall
inc
fsubs
sahf
dec
je
jmp
or
add
in
jg
insb
imull
sbb
add
adc
jge
pop
push
fstpl
in
hlt
mov
inc
lods
or
xlat
mov
shrb
stos
sub
xchg
dec
lods
imul
push
jl
andb
and
out
fcmovnu
in
or
adc
mov
push
cmp
cmp
jo
test
test
push
out
add
jmp
mov
daa
clc
mov
jo
pop
xchg
push
aaa
add
mov
mov
add
adc
stc
mov
popa
jae
push
das
xchg
nop
or
or
dec
xor
in
pop
pushf
lods
mov
add
fldpi
sarb
shr
faddp
sbb
les
lds
sbb
add
lret
fcom
aam
add
sub
lock
les
sub
je
add
cmp
dec
rclb
and
cmpsb
inc
or
imul
mov
inc
lock
mov
outsl
add
pop
bound
xor
sbb
inc
pop
or
aaa
sbb
sub
and
add
xor
sub
mov
lods
fldl
es
out
into
rolb
add
fwait
outsb
nop
xchg
aaa
add
sub
clc
sub
jne
add
jge
mov
add
or
repnz
add
enter
push
sbb
jo
pop
cmp
mov
xor
add
xchg
xor
add
and
add
outsl
and
stos
es
xorl
push
icebp
cmpsl
addl
lcall
mov
mov
pop
xor
pop
adc
mov
fistl
pop
dec
add
inc
aad
inc
dec
cltd
clc
cmp
dec
lods
push
cmp
bound
xchg
sti
cmp
add
int3
orb
dec
add
pop
mov
add
mov
sbb
xor
fldt
aad
into
mov
dec
dec
pop
subb
loopne
rol
or
cmpsb
sbb
sub
outsb
adc
mov
adcb
mov
jae
subb
push
sarl
out
jae
or
xchg
add
ret
mov
xor
sti
and
stos
lret
setno
loop
fwait
and
push
rolb
add
bound
fiadds
and
pop
dec
pusha
adc
fs
add
sub
push
lods
hlt
jo
inc
and
push
push
dec
insb
add
mov
dec
jo
inc
rcrb
icebp
arpl
lods
mov
out
add
sahf
add
xor
sbb
mov
sbb
cmc
ljmp
out
aas
and
adc
mov
roll
aam
add
rcrb
ljmp
int3
add
mov
add
inc
xor
dec
and
int
add
xor
jb
pop
mov
push
push
push
xchg
icebp
lret
add
jge
adc
add
hlt
clc
fadds
dec
jb
es
mov
add
pop
nop
pop
push
pop
out
fdivs
movsl
rol
lahf
add
pop
lret
inc
or
or
inc
add
hlt
jbe
jecxz
xchg
es
add
test
lret
testl
mov
fcmovnb
xchg
in
les
out
xchg
mov
je
out
ss
rcll
nop
push
push
xchg
mov
add
cltd
jnp
pusha
int3
mov
inc
xchg
dec
jo
add
and
leave
add
xor
fnstenv
test
sbb
sub
and
sbb
add
outsl
xor
xor
in
add
jno
outsl
jo
or
cmp
dec
pop
lea
add
jne
pusha
insb
int
ss
das
mov
add
jo
jb
add
and
add
push
dec
inc
sbb
sub
out
gs
arpl
dec
add
sti
mov
pop
push
mov
clc
sbb
pop
lock
int3
test
and
inc
insl
mov
mov
stos
outsl
push
jno
add
lock
enter
lods
xchg
sti
or
aad
call
fwait
jg
or
push
lcall
mov
push
loopne
das
jb
xchg
out
cmp
fadds
or
scas
daa
lret
add
stos
addl
cmp
add
add
testl
pop
ret
cs
std
pop
jg
add
adc
and
cld
insb
jb
add
aad
push
mov
pop
sub
daa
sub
push
inc
xor
sbb
pop
dec
pop
add
fldl
sub
lret
xor
aad
into
add
sub
js
or
add
xor
or
nop
add
fcoml
add
imul
lcall
pop
insl
inc
in
nop
cltd
add
fnsave
int
fbstp
sbb
cmpsb
adc
jge
add
movsb
and
xchg
add
nop
xchg
add
mov
xchg
mov
sahf
cli
mov
sbb
sub
fmuls
adc
test
aad
add
fists
dec
push
sub
adc
ret
les
adc
lock
mov
lods
fsubrs
shl
ds
testb
inc
adc
inc
or
jbe
add
es
and
out
jl
xorb
add
stc
addr16
ss
sub
adcb
rcrb
add
ficomps
pop
pop
popa
mov
mov
test
inc
mov
pop
mov
scas
rorb
orb
mov
mov
jle
aaa
adc
add
mov
inc
or
je
sahf
adc
dec
movzwl
gs
adc
add
cmpl
add
or
add
mov
mov
add
cld
fidivrs
push
sbb
xchg
addr16
inc
arpl
xor
sub
dec
xor
in
enter
ucomiss
nop
daa
sub
loop
lret
pusha
mov
add
xor
pushl
inc
adc
push
popf
push
inc
jl
pop
add
inc
jns
cmp
sbb
ss
xor
out
sub
adc
psubsb
xchg
add
js
mov
addr16
pop
divb
repnz
orb
sub
add
cld
aaa
clc
jb
ja
dec
rorl
test
push
adc
lock
adc
and
movb
jb
dec
sub
mov
cmp
pop
fs
nop
lods
hlt
insl
sbb
xchg
ret
xchg
shlb
add
ja
decl
and
push
inc
gs
add
push
push
inc
imul
add
insl
das
inc
add
popa
mov
push
mov
sub
subb
faddl
call
incw
adcl
das
mov
add
mov
xor
add
lds
icebp
popl
fstl
incl
bound
and
lock
scas
add
imul
dec
xchg
sbb
adc
rcr
imul
mov
cmpsl
outsb
xor
ljmp
rol
jl
add
or
enter
xor
push
jecxz
scas
dec
stos
add
rorb
ja
cmp
sbb
ja
push
shll
cmp
push
pop
out
mov
jo
out
jl
add
mov
rcr
std
repz
jge
inc
mov
ficoml
cwtl
inc
adc
popf
push
lock
cmpsb
jb
dec
add
test
add
sti
mov
add
scas
dec
es
sbb
push
push
icebp
add
inc
mov
les
roll
adc
cltd
shlb
mov
add
cmc
sbb
pop
fisubrl
movsl
test
hlt
cld
xor
mov
into
rolb
lea
pop
jne
sub
mov
and
or
push
pop
xchg
pusha
pop
add
jp
aad
jnp
pop
pusha
mov
shll
cmp
jg
addl
into
jne
jle
add
dec
xor
adc
pop
or
add
dec
jmp
add
pop
int3
xor
push
test
aas
scas
push
add
push
mov
and
and
xchg
dec
pop
jo
push
xor
add
xor
push
xor
mov
pop
arpl
sub
loope
add
shrb
rclb
add
daa
lahf
mov
push
push
jecxz
cmpsl
mov
mov
lahf
clc
sbb
into
fcoml
add
imul
pusha
mov
out
cmpsb
sahf
add
mov
mov
sub
inc
les
push
sub
fnstsw
pop
jb
push
xor
imul
and
add
in
fnstcw
popf
mov
sbb
jp
cmp
fdivl
fbld
and
mov
sbb
leave
jmp
add
out
and
je
shrl
add
lret
xchg
add
pop
fdivl
sub
cltd
jo
lret
loope
jb
add
lock
sub
aaa
add
pushl
add
pop
negb
rcrl
pop
ss
sub
mov
adc
jo
roll
mov
cli
inc
xchg
add
xchg
imul
jne
out
or
aad
mov
frstpm(287
rcl
rcrb
xchg
ret
add
inc
sbb
inc
push
das
mov
add
cmp
jb
add
popf
lods
add
call
add
in
ret
push
jne
mov
or
je
or
mov
mov
pop
ja
outsb
hlt
jno
or
adc
or
adc
pop
popa
cmp
ret
mov
mov
lret
cltd
fildll
dec
push
jl
cmp
and
rorb
dec
rol
leave
idiv
mov
cwtl
enter
pop
fcomp
es
test
xorb
mov
mov
cltd
mov
mov
push
out
add
mov
sub
sbb
je
xchg
mov
outsl
fisttps
xor
out
scas
push
cmp
lods
loopne
test
dec
push
cmp
cmp
lds
pcmpeqw
loop
sbb
jg
cmp
jae
push
cmp
push
js
fidivrl
push
inc
xchg
lea
rolb
adc
xor
push
adc
incl
mov
mov
or
sub
or
ret
out
cwtl
cld
or
js
xor
fdivr
jbe
pop
add
inc
xor
xchg
pop
pop
and
icebp
lds
ficoms
xchg
jp
add
out
loop
stos
stc
ljmp
add
rclb
imul
jb
sarl
cmpsl
mov
test
mov
aam
add
enter
xchg
std
mov
imul
sub
cwtl
mov
adc
add
and
loope
andl
mov
xor
ljmp
call
pcmpeqw
aad
and
fs
les
pop
jp
add
mov
push
in
mov
add
aaa
jg
cmovno
sbb
loop
xchg
push
les
adc
push
and
xchg
out
lret
icebp
pop
jo
sub
test
aad
loopne
sub
dec
sbb
jne
bound
jmp
cmpl
add
pop
nop
add
fsubl
sbbb
mov
lock
daa
gs
cmc
cmp
mov
mov
les
out
add
jg
stos
js
pop
stos
add
popl
subps
or
dec
sub
rolb
xor
mov
lods
ljmp
push
cmp
or
fwait
out
add
or
fstpt
mov
jp
add
faddl
inc
mov
xor
mov
and
dec
add
xchg
lock
jo
hlt
mov
sub
sub
add
push
xchg
and
inc
add
inc
ss
daa
or
cmp
cli
xor
scas
sbb
les
fcmovu
cmpl
das
jno
ret
jle
call
mov
dec
insb
mov
loopne
int3
add
lret
or
mov
aam
lock
sti
fstl
nop
pop
addl
sahf
inc
decb
add
loope
mov
mov
lret
push
xchg
dec
lcall
mov
add
adc
scas
add
mov
add
or
or
mov
sbb
stc
js
add
or
das
jnp
inc
sbb
cmp
or
cmpsb
call
cmpb
nop
mov
orl
pusha
inc
push
inc
inc
push
cmp
test
lods
rcrb
lcall
sub
jl
adc
dec
fwait
push
das
imul
icebp
and
jb
add
sahf
add
add
cli
push
cmc
add
pop
sbb
shll
xor
dec
test
addr16
xchg
cmp
mov
dec
cmp
inc
sub
pextrw
add
in
cwtl
xor
sub
jle
jo
push
lods
push
inc
lock
daa
pushf
arpl
dec
adc
jne
add
mov
aad
sub
stos
add
dec
out
ja
adc
push
xchg
jl
pushf
pusha
jo
xor
push
arpl
pop
mov
dec
in
js
inc
cli
pusha
jne
in
mov
add
inc
test
sbb
xchg
ds
pop
jno
add
sub
insb
mov
sti
sub
inc
daa
inc
mov
mov
inc
push
sbb
and
repz
push
jae
xchg
mov
fnstenv
mov
pop
add
mov
and
adc
mov
jle
xor
cmp
hlt
push
inc
stos
push
mov
sbb
int3
std
dec
lcall
jo
jae
or
sahf
ret
or
cmpsb
imul
fadds
inc
xchg
pop
hlt
test
daa
dec
pop
loopne
sbb
jp
int3
orb
fwait
mov
hlt
jle
cld
iret
adc
add
sahf
enter
jo
pop
inc
or
sbbb
pushf
clc
inc
add
add
mov
inc
mov
sbb
or
aaa
lret
leave
ljmp
mov
sub
jg
add
push
jle
mov
popl
adc
outsb
push
add
and
test
js
adc
in
mov
test
stc
add
mov
pusha
outsl
xor
das
and
mov
pop
lea
add
fs
repnz
mov
mov
dec
jne
adc
mov
dec
rclb
pop
inc
and
ja
xor
add
xor
test
aad
pusha
mov
xor
add
add
rolb
sub
loop
pushf
mov
add
adc
sub
push
cmc
add
cmp
mov
es
sub
sti
rcrb
and
sub
mov
xchg
pop
cld
or
les
cmp
pop
inc
jge
sarb
inc
aaa
sub
divl
add
cmp
repnz
cli
adc
add
add
enter
sarl
sarb
movsb
test
sub
push
aad
mov
push
cmp
add
xchg
sbbb
pop
es
add
mov
pop
repnz
leave
movsl
clc
mov
and
jno
mov
cmpl
lahf
repz
sbb
out
jecxz
and
mov
das
stc
mov
lds
mov
add
push
mov
pushl
testb
pop
adc
out
shl
mov
push
cltd
jae
repnz
cmpb
sub
jg
pop
notb
ret
add
ret
cmp
xor
pop
mull
cld
adc
adc
mov
int
test
mov
adc
dec
sbb
push
mov
int3
fbstp
cmpsl
mov
movl
jb
and
std
and
inc
adc
lock
and
mov
sbb
and
inc
pop
cwtl
mov
pop
bound
mov
dec
pop
test
aaa
mov
daa
outsl
fdiv
xor
push
adc
add
pop
sub
cld
mov
cmp
sbb
and
push
fwait
cmp
add
dec
dec
scas
in
in
sbb
cmovo
scas
add
shll
jb
jnp
add
dec
int
sbb
ret
icebp
es
adc
xchg
jb
push
aaa
mov
lret
pusha
ret
sahf
fs
in
fistps
or
rcll
lret
xor
mov
sbb
mov
xchg
add
cmp
push
test
int
add
inc
sbb
sbb
andl
cmp
dec
in
xor
int
fs
sahf
pusha
push
or
adc
add
xchg
idiv
lahf
enter
mov
loope
or
cmp
fwait
xchg
pushf
add
push
jns
add
and
test
or
inc
mov
stos
popa
mov
add
xlat
cmp
cmpsl
mov
ret
cs
cmp
inc
mov
xchg
push
xor
inc
sbb
mov
cwtl
mov
inc
mov
mov
jno
xchg
mov
movsl
cmp
icebp
je
push
adc
jl
shrb
movsb
mov
xchg
out
incl
or
mov
in
or
and
hlt
jl
mov
je
sbb
inc
jbe
scas
test
cmpsb
aad
out
lahf
add
jg
inc
cmp
test
stos
push
xchg
xchg
cmpsb
push
add
lret
pop
sahf
cmpsb
clc
add
loopne
int3
adc
fwait
push
push
xchg
aas
xchg
enter
or
inc
popl
repnz
add
sub
add
adc
pop
jp
xor
cmp
mov
xchg
xchg
add
mov
setbe
or
aaa
add
dec
int3
iret
lret
push
and
pop
pop
aam
mov
mov
in
int3
mov
icebp
or
out
adc
sbb
ds
testl
mov
pop
pop
xchg
sub
scas
cltd
pop
add
outsl
jbe
das
xor
rorl
pop
and
push
xchg
fs
aaa
andb
cld
add
data16
std
es
add
jle
cmp
flds
cmc
out
repz
jo
ret
lds
dec
xor
cwtl
mov
push
mov
xor
int
mov
lock
and
je
inc
fcoms
cli
xchg
push
lret
xchg
nopl
test
mov
les
sbb
jno
sub
fwait
jno
lcall
mov
repnz
adc
mov
cli
xor
movsb
inc
jmp
in
daa
mov
jns
mov
xor
jne
loopne
add
and
and
scas
jne
add
mov
xchg
xorb
jl
adc
popf
jno
lds
pushf
or
ror
andb
jno
pop
sbb
xor
movsb
ds
in
pop
sub
dec
pop
add
cmpsb
mov
pop
push
cltd
cmp
hlt
sub
sbb
mov
add
adc
xchg
mov
add
sahf
movsb
das
xchg
in
add
jl
fwait
sbb
cmp
inc
mov
lods
rcl
adc
add
inc
sbb
mov
fsubl
leave
mov
push
out
insb
aam
inc
add
inc
loopne
add
test
je
into
sub
add
ja
cltd
xchg
jnp
jb
jns
add
or
mov
stos
pop
test
sub
xlat
sbb
ljmp
daa
test
lods
sbb
inc
out
add
push
sti
fs
fmull
lods
punpckhbw
fiaddl
cmpsb
ljmp
addl
mov
sub
add
je
pushf
mov
jle
adc
cmpsl
mov
lret
adc
xchg
outsl
lock
lods
jge
add
in
jb
cld
inc
add
or
sub
jle
or
adc
jb
or
cmpb
push
shll
mov
cmp
sub
xorl
mov
lds
and
jne
add
inc
push
enter
out
and
sbb
pusha
cmpsl
inc
xor
addl
das
jns
sub
sub
aas
sbb
mov
cmp
addr16
dec
cwtl
sub
add
and
fisttpl
jns
inc
outsb
mov
sub
mov
mov
adc
dec
shrb
mov
or
ret
jo
scas
mov
pop
roll
add
adc
adc
data16
inc
and
dec
or
sbb
push
push
dec
pop
pop
fisubs
add
popf
cmp
lods
out
daa
popa
scas
shll
add
pop
pop
int3
add
mov
cwtl
and
fiadds
add
popa
movsb
sbb
add
shll
sti
gs
enter
add
xor
add
lahf
shlb
movb
dec
add
cwtl
cli
cld
add
push
cmp
push
push
dec
jo
mov
in
and
fs
or
jg
mov
mov
repnz
aaa
in
sahf
das
cmp
pop
aad
enter
cltd
pusha
les
rorb
mov
add
std
movaps
pop
inc
inc
dec
mov
lods
xor
pop
cli
cmp
leave
stc
jb
add
repz
xchg
push
push
mov
loope
faddl
inc
sti
inc
movsb
inc
dec
dec
sub
ds
xor
mov
out
sub
insb
arpl
sbb
ret
pop
jg
xor
insb
push
xor
nop
sbb
int3
out
sub
les
lock
stos
aas
add
xchg
xlat
mov
dec
aas
xor
sahf
out
inc
ret
scas
mov
les
pusha
push
addl
adc
out
sub
jo
pop
sbb
inc
push
outsb
inc
enter
xor
sbb
std
test
sub
cmovne
and
rcll
shl
push
dec
dec
add
xor
scas
inc
pusha
xchg
test
movsb
xchg
ja
xor
and
jne
subb
dec
jle
xchg
mov
sbb
jno
fcoms
iret
icebp
add
aam
pop
call
cld
loop
or
mov
ds
and
xchg
xchg
stc
inc
add
loop
inc
fstpt
adc
enter
mov
pop
xchg
pusha
jo
aad
add
aam
dec
repz
add
xchg
push
pop
imul
shr
add
xchg
mov
jbe
enter
jge
gs
hlt
sbb
sbb
mov
xchg
mov
cmp
enter
js
push
lahf
movsb
jl
mov
pop
mov
add
mov
xchg
dec
out
dec
repnz
mov
add
xchg
push
inc
in
lock
add
push
aad
mov
mov
stos
xchg
add
mov
rcll
and
add
mov
insb
push
popa
hlt
pusha
sahf
into
dec
repz
lret
xchg
dec
mov
adc
mov
adc
inc
sub
mov
scas
xchg
pop
orb
xorb
mov
mov
sub
and
hlt
das
outsl
lods
fidivs
mov
dec
xchg
inc
adc
adc
add
dec
and
cwtl
pusha
jb
dec
repz
jo
shrb
pop
cmp
inc
inc
or
push
test
lahf
mov
adc
dec
lods
fimuls
inc
pop
xor
or
pop
or
lds
pop
mov
sub
push
sub
pusha
mov
inc
lahf
addb
jecxz
sub
rorb
adc
dec
adcb
push
sahf
xchg
shll
add
xlat
fwait
es
dec
or
leave
xchg
xor
xchg
or
or
mov
sub
xor
shr
fcompl
mov
fs
mov
push
les
stc
jmp
and
add
or
ljmp
adc
fbstp
sub
dec
or
sbb
xchg
je
jns
cwtl
lret
test
mov
push
xor
loopne
dec
and
test
add
int
adc
jmp
push
mov
dec
adc
lock
out
adc
jno
or
dec
inc
cmp
stos
cmc
dec
adc
add
pop
popa
js
or
xchg
pusha
add
cmovae
push
popl
movsl
jno
adc
rcll
nop
xor
or
loope
inc
shll
cmp
push
mov
dec
dec
test
imul
sar
stos
sbb
or
fildll
cmp
sahf
lods
mov
subb
pushf
js
adc
dec
push
fiaddl
insl
push
ljmp
xor
sarl
add
xchg
xchg
into
roll
iret
and
push
or
cwtl
movsb
mov
sub
inc
inc
orl
cs
pusha
jl
hlt
int3
inc
pushw
addb
mov
and
mov
rorb
push
cmpsb
push
dec
ljmp
pop
mov
sbb
xchg
sub
mov
cwtl
mov
adc
cwtl
into
enter
xchg
jae
inc
and
inc
in
or
insb
adc
sub
add
add
xchg
imul
in
cmp
sbb
and
test
fisttpll
adc
or
loopne
or
sbb
lahf
jmp
test
sub
or
jbe
inc
jecxz
hlt
and
test
sbbb
mov
dec
inc
test
adc
dec
add
pop
dec
orl
sub
pop
add
sarb
fs
or
sub
or
nop
cmp
sub
xchg
lret
adc
push
ret
pushf
mov
mov
lods
xchg
add
sbb
adc
mov
add
lea
xchg
mov
rorl
leave
rcrl
and
or
rcll
sbb
add
or
cltd
int3
fists
mov
rolb
push
mov
jge
out
cwtl
scas
negb
fdivl
mov
cmp
pop
shlb
inc
mov
adc
in
push
mov
mov
sbb
adc
push
add
adc
jne
dec
adc
inc
xchg
inc
cli
jns
out
sub
dec
or
dec
dec
mov
lret
inc
fsubl
mov
repz
dec
es
xchg
jo
pusha
outsl
sahf
add
and
xchg
int3
fistl
sub
inc
pop
cli
inc
jmp
pop
subb
in
loop
fdivr
add
adc
mov
clc
dec
sub
push
or
jmp
movsb
les
test
in
adc
or
cmp
mov
sbb
push
and
fisttpll
clc
and
mov
mov
movsb
pusha
scas
mov
popa
pop
test
sub
and
fs
sbb
or
imul
or
mov
xlat
push
jle
dec
dec
sub
cmp
adc
inc
fmuls
mov
xor
sbb
jmp
jl
mov
or
incb
insb
sbb
inc
imul
hlt
sbb
jle
pop
pusha
je
cltd
xor
push
mov
icebp
gs
mov
or
mov
sub
or
loope
cmc
push
les
adc
rcrb
les
fs
xor
add
scas
cwtl
cmp
inc
xor
sub
mov
mov
orl
insb
or
sbb
push
xor
inc
and
pop
dec
arpl
mov
inc
mov
mov
arpl
pushf
loop
push
es
xchg
sub
nop
sub
sub
rcll
xchg
add
jae
cmp
inc
fstps
and
ret
test
enter
xchg
adc
xor
insl
jo
test
adc
int
stos
pop
jns
and
adc
cmp
push
test
xor
or
inc
inc
cltd
fisttpl
xor
nop
mov
add
call
mov
dec
outsb
stc
add
stos
adc
mov
pop
fldt
sub
int
or
test
inc
movsb
or
mov
js
hlt
xor
jl
or
or
xor
xor
scas
mov
cmp
stc
cmp
xchg
test
js
mov
test
sub
aam
adcl
imulb
and
adc
negl
push
cltd
sbb
or
out
dec
inc
addb
push
xor
shlb
arpl
lods
xchg
inc
pop
mov
shlb
test
add
push
push
cwtl
cmpsb
xor
mov
push
cltd
inc
out
loopne
sub
adc
nop
sbbl
or
arpl
push
push
add
insb
dec
inc
adc
sub
cwtl
adcb
mov
test
push
test
inc
sahf
ss
xor
adc
je
pop
adcb
inc
cwtl
adc
sbb
or
xchg
ret
push
or
mov
call
adc
push
outsb
bound
cmp
ret
fisubs
adc
mov
nop
icebp
or
icebp
or
sbb
or
dec
adc
roll
imul
adc
dec
popf
cmp
push
pop
rcrb
loope
and
cmp
adc
dec
cmp
lea
mov
lods
fistpl
add
xor
fs
imul
adc
mov
adc
inc
fldcw
pusha
mov
jns
cmp
add
cs
dec
aad
jmp
cwtl
cmp
push
mov
mov
inc
dec
or
adc
and
dec
lcall
icebp
and
inc
out
and
add
sbb
adc
inc
xorb
cmpl
cmpsl
mov
jge
xchg
icebp
inc
add
jae
orl
cmp
xchg
pusha
sbb
xchg
call
cmp
stos
mov
inc
xchg
dec
icebp
dec
xchg
inc
inc
je
xor
xchg
insb
les
mov
pop
das
sbb
dec
push
pop
adc
xor
jle
std
enter
adc
loopne
sbb
mov
or
adc
mov
jmp
or
insl
cmc
dec
xor
sbb
or
cmp
mov
loopne
inc
aam
push
inc
cmp
les
mov
or
xchg
inc
xchg
lock
and
cmp
pop
mov
adc
pop
push
and
jge
lcall
outsb
mov
or
push
push
out
mov
jo
pop
movsb
mov
rcrb
pusha
sub
bound
and
fwait
or
adc
mov
dec
pop
sbb
or
mov
les
xor
cltd
inc
fs
mov
and
imul
sub
int3
mov
nop
adc
add
adc
or
fmull
mov
push
and
and
sub
nop
in
sti
gs
xchg
outsb
inc
cmp
fs
dec
xchg
jo
xor
adc
aam
inc
roll
cs
mov
dec
jnp
pop
adcl
mov
xchg
cltd
sbb
and
mov
and
pop
fisttps
ja
add
pusha
add
or
aam
cwtl
cmp
xchg
lods
sub
out
sbb
or
outsb
bound
and
test
pop
ljmp
and
add
orl
add
xchg
jbe
adc
inc
addb
enter
enter
sbb
je
mov
xor
xor
xchg
ja
fs
rolb
add
cwtl
test
pop
or
jge
mov
adc
test
arpl
mov
and
inc
push
push
mov
sub
jl
mov
mov
jge
inc
dec
adcb
jmp
cltd
subl
dec
inc
mov
xor
scas
push
js
cmp
sbb
push
sub
std
cs
mov
and
adc
jmp
xchg
cwtl
fs
bound
cwtl
or
mov
insb
dec
adc
dec
js
or
pop
imul
xor
or
inc
int3
out
nop
hlt
sub
inc
sbb
push
jbe
mov
lcall
dec
sbb
xor
stos
add
cmp
lahf
and
sub
clc
sbb
jbe
test
subb
xchg
lcall
aad
dec
fwait
or
adc
aam
inc
pop
inc
cmp
cs
push
push
pop
xor
mov
adc
into
loope
addr16
adc
cwtl
lret
pop
mov
hlt
movsb
mov
dec
les
ret
add
mov
sub
add
ret
jg
mov
test
push
arpl
push
xchg
sbb
jo
pop
mov
test
xor
rolb
scas
fstpl
mov
push
jle,pn
mov
mov
lods
aad
inc
push
mov
add
pusha
les
jbe
or
pop
sbb
daa
sub
sub
jmp
and
imul
aam
adc
dec
aad
shlb
push
sbb
repz
cld
add
std
xchg
mov
jmp
and
pop
push
inc
out
pop
and
push
pop
inc
sahf
or
inc
sbb
and
push
ret
jb
push
cmpsb
dec
outsb
rolb
xchg
adc
test
inc
shl
push
fildll
add
test
or
adc
aam
in
in
ret
add
leave
mov
mov
into
inc
and
int
and
pop
fisttpl
mov
ja
pop
aad
jnp
and
imul
bound
test
adc
ss
arpl
lock
add
push
mov
inc
xor
arpl
xor
and
shrb
pushf
iret
lds
stos
fidivs
cmp
or
sub
cmpb
fwait
sahf
pmaxsw
inc
clc
test
xor
xor
dec
adc
subl
mov
movsl
cltd
fdivl
or
sbb
and
mov
rolb
loopne
pop
inc
sahf
rclb
jge
mov
loopne
sub
je
add
push
pusha
inc
call
pop
pop
ds
cmp
mov
jecxz
inc
mov
cmpb
sti
out
and
pusha
push
mov
js
clc
insl
sub
and
aas
add
cmc
dec
xor
fistl
mov
inc
sub
in
ffreep
sub
dec
lods
dec
call
cld
dec
loope
xchg
fldenv
daa
and
dec
lds
dec
faddl
pop
inc
js
subb
jb
fwait
cs
add
sbb
jno
mov
mov
stos
std
add
jne
add
add
push
mov
movsb
add
psrld
xchg
filds
sub
es
popa
pop
dec
fistpl
add
cmp
mov
add
xchg
mov
sub
movsl
cmp
incb
mov
push
dec
or
mov
fcomps
jae
jb
add
sub
outsl
add
jne
cmp
iret
add
inc
sarl
push
loop
push
xor
pushf
push
mov
lods
in
pop
popf
mov
xchg
add
int
push
insb
xor
jge
fiadds
dec
inc
xchg
sahf
and
test
cmp
xor
popa
jnp
add
mov
in
jno
add
call
sub
mull
or
add
jp
ret
pop
xchg
fldt
mov
maxps
pusha
out
fndisi(8087
adc
je
insl
gs
xchg
and
daa
xchg
mov
sub
cwtl
fpatan
inc
add
xchg
push
je
outsl
or
mov
mov
xchg
jb
cmp
dec
out
stos
add
push
pop
cwtl
pop
inc
repnz
cs
adc
and
jl
mov
fadds
mov
dec
lods
aam
push
sbb
sbb
repnz
je
dec
popf
mov
xchg
leave
jg
push
sub
xor
jne
mov
cmp
mov
mov
mov
and
add
scas
dec
fs
xchg
into
add
xchg
adc
ficoml
cmp
add
fnsave
add
lahf
xor
sub
stos
loopne
in
test
pop
cmp
ss
sbb
push
int
in
ljmp
xor
stc
mov
inc
xchg
pushf
cwtl
out
cmp
pop
push
and
aad
arpl
push
add
sub
mov
dec
stos
pop
pop
add
mov
movsb
sub
or
add
inc
add
push
fldcw
pop
dec
mov
add
out
outsl
lret
aam
or
cmp
or
xchg
scas
loop
xor
adc
test
adc
lods
xchg
mov
into
sub
and
loop
add
insl
enter
add
mov
sbb
mov
dec
dec
cld
adc
ja
xchg
add
insl
sbb
dec
xor
add
push
inc
add
mov
adc
and
fucomi
loope
add
pop
call
lods
inc
scas
xor
push
push
cli
sub
jo
bound
jns
and
and
push
xchg
mov
add
adc
ja
pop
xchg
add
enter
pop
mov
xor
push
jmp
daa
inc
mov
fmull
push
shll
sahf
rcrb
mov
add
test
in
add
cmc
stc
push
mov
leave
inc
dec
iret
mov
add
pop
inc
repnz
mov
mov
in
add
adc
stos
add
mov
test
shrb
add
inc
push
sub
cltd
adc
or
enter
cmp
xchg
mov
push
push
and
dec
inc
push
mov
mov
adc
cmpsb
iret
insl
ja
movsb
push
lret
pop
addl
stos
and
push
mov
shll
push
and
sub
mov
mov
push
xchg
mov
mov
addb
push
outsl
push
push
cmp
nop
nop
adc
clc
sbb
scas
push
xor
ja
cmp
mov
int
fsubl
mov
in
pop
fmuls
out
xor
les
add
inc
or
add
dec
mov
out
cmp
sbb
gs
lock
and
add
fidivrl
mov
adc
mov
dec
add
or
notb
lods
enter
cs
add
xchg
fistpll
mov
mov
add
push
leave
popf
or
pop
push
add
xor
arpl
add
inc
xor
mov
lret
sbb
ja
movsb
iret
stos
cmc
mov
es
mov
cmp
sub
clc
in
xor
pop
les
out
pop
jb
iret
pop
leave
sbb
pop
aam
test
out
dec
add
stos
xor
cld
in
pop
push
pop
inc
sahf
test
mov
and
ret
xchg
jl
mov
test
shll
add
push
inc
rorb
push
dec
out
ljmp
cmp
mov
cld
test
add
push
mov
popa
push
xlat
add
insl
inc
mov
add
inc
in
sar
bound
push
add
mov
cmp
add
in
xchg
jge
push
ljmp
mov
jbe
sub
add
inc
add
inc
test
pop
jp
push
cli
dec
xor
xchg
pop
push
pop
adc
mov
stos
add
cmpsb
shlb
pop
popf
aaa
inc
cwtl
jecxz
fstps
dec
mov
mov
or
push
mov
daa
push
mov
mov
jmp
mov
jbe
cmc
sbb
mov
cmp
mov
xor
adc
add
shl
stos
jge
jne
mov
xchg
mov
mov
jo
cmp
or
mov
xchg
xchg
add
ljmp
sbb
mov
add
and
mov
addr16
fimull
bound
pushf
ja
and
loopne
cmp
out
mov
add
leave
pop
inc
adc
inc
pop
lahf
mov
fwait
push
mull
add
loop
jno
cwtl
pop
rorl
dec
les
jo
in
orb
loope
in
add
pushf
pop
and
inc
testb
aam
lahf
xchg
scas
jne
clc
imul
mov
sbb
stos
fildl
lahf
loopne
out
add
mov
mov
inc
sub
jo
add
pop
mov
addr16
adc
pop
mov
pop
lcall
ss
lahf
cli
add
mov
add
push
xchg
rorb
imul
jge
sub
cld
sub
test
add
in
add
xchg
and
add
rolb
cmp
push
shll
in
mov
lds
push
mov
aas
cwtl
out
add
cmpsb
in
shr
add
sub
sub
sub
pushf
push
xor
jmp
sbb
into
in
xchg
mov
and
mov
call
mov
add
mov
imul
or
add
div
xchg
std
jl
cmpsb
cmp
fsubrp
cmp
pop
xor
dec
jo
dec
add
sbb
add
lret
push
pop
insb
in
cmp
icebp
iret
jnp
jmp
ret
mov
add
subb
aad
jnp
cmp
pop
sub
std
dec
push
and
fadds
xor
popa
or
lods
ficompl
iret
je
and
hlt
add
roll
out
mov
jbe
icebp
cmp
push
cmc
add
les
jno
cwtl
lret
xchg
sbb
addr16
addl
sbb
popa
pusha
xor
sbb
orb
das
inc
lret
jp
mov
adc
jne
add
xchg
push
nop
sub
repz
add
es
repnz
jg
test
out
movsb
nop
jnp
pusha
mov
xchg
pusha
es
fstpl
aas
xor
fiadds
mov
add
aaa
int
ret
notb
in
es
add
pusha
add
mov
jbe
add
test
push
bnd
fadds
in
cmpsl
les
fidivl
js
into
mov
sbb
aam
add
xor
outsb
dec
out
pop
push
add
lods
adc
xchg
mov
sti
lahf
pop
cmp
in
mov
jbe
rolb
sarb
add
dec
ljmp
add
test
inc
add
cmpsb
push
xor
sahf
rolb
xchg
xchg
divb
fnsave
clc
icebp
loopne
add
rorl
add
aas
stos
inc
adcl
repnz
cmp
and
or
jl
loop
add
push
imul
xchg
or
add
ja
es
add
or
inc
cmpsl
ret
movsb
add
add
mov
add
rorl
adc
leave
sbb
sub
out
icebp
sbb
pusha
adc
lods
lods
add
cmp
pop
fiaddl
clc
cmova
jl
push
test
in
in
enter
mov
loop
jmp
js
add
cmp
push
mov
dec
shll
stos
sbb
xchg
in
cmp
push
sub
nop
fdiv
fimull
mov
ret
and
add
cwtl
pop
mov
movsb
es
lods
sub
xlat
lret
push
nop
into
into
popa
ss
mulb
or
push
inc
pop
dec
addl
cmc
mov
je
popl
or
rorb
loopne
nop
cmp
add
and
and
push
push
jns
push
jne
scas
push
test
fmul
add
addr16
pop
dec
scas
add
lret
jnp
enter
push
jae
or
add
dec
fldcw
sbb
shr
cmp
ss
lods
add
ret
sbb
jns
cld
lock
xchg
in
lcall
div
add
aas
mov
add
lea
filds
push
sarb
and
fdivs
pop
inc
sti
hlt
add
iret
lock
scas
loop
xchg
out
cmp
fbstp
test
add
orl
mov
or
popa
sarl
sbb
test
dec
loopne
xor
imull
adc
or
shlb
test
movsl
lret
cs
scas
add
dec
add
sbb
ja
mov
pop
mov
fprem
inc
add
cmp
push
arpl
call
fdivp
push
adc
pop
cs
inc
add
jb
aam
sbb
pinsrw
xor
jns
lret
or
add
ficoms
out
sbbl
clc
add
cmc
pop
dec
sbb
lock
mov
dec
loop
push
add
mov
cmp
rclb
dec
hlt
mov
lret
icebp
push
aam
divb
int3
sub
xor
dec
or
sbb
jge
cli
je
sbb
jl
xchg
dec
adc
movsb
adc
js
test
add
stc
arpl
out
add
pop
dec
lods
add
add
stc
push
lock
dec
jns
clc
pop
xchg
dec
add
jnp
jg
mov
mov
incl
xchg
xor
fdivl
pusha
shl
sbb
shlb
inc
inc
nop
cld
in
mov
xchg
add
jo,pn
sbb
repnz
pop
add
mov
inc
xor
test
pop
jnp
cmp
pop
loope
or
mov
xchg
add
popa
das
movsl
add
test
push
dec
mov
int3
nop
flds
daa
xchg
enter
fidivrl
xchg
and
add
add
xorl
dec
or
add
psubb
dec
add
lds
mov
std
and
inc
jl
lock
lahf
inc
lret
add
mov
sub
or
push
out
inc
mov
dec
fsubr
popa
add
mov
arpl
leave
andb
mov
mov
mov
jmp
mov
and
int
add
adc
stos
testb
test
andb
cmc
mov
or
sbbb
xchg
data16
inc
lods
ljmp
and
add
gs
in
cmp
jge
fsubrs
or
je
dec
ret
rorl
sub
daa
push
ja
add
and
jl
das
aas
scas
test
dec
lock
sub
adc
sbb
push
mov
mov
xor
aam
jg
xor
aaa
into
fcoml
repz
xorb
dec
call
in
add
das
push
pushf
adc
push
add
insb
mov
add
cltd
stos
dec
pop
lahf
out
insl
dec
add
add
jle
add
sbb
test
es
mov
outsl
rolb
ficompl
xchg
shlb
cmp
call
sahf
xchg
aas
mov
outsl
add
or
pop
add
movsl
jne
test
jbe
push
ljmp
fiaddl
add
mov
repz
xchg
add
adc
inc
fadd
pop
insl
in
pop
sub
cmpsb
add
sub
rorb
or
add
rorl
shlb
jp
mov
and
mov
sbb
push
loopne
push
sbb
inc
sbb
xorb
push
jns
push
or
idiv
sub
cmpsb
adc
jo
mov
popf
ret
movsl
pop
xchg
mov
cli
add
add
inc
pop
mov
orb
xchg
add
out
jbe
sub
pop
add
mov
stc
insb
add
aaa
push
add
mov
out
inc
incl
mov
and
je
push
push
lea
outsb
sub
fcompl
out
loop
push
xchg
movb
sbb
xor
mov
rorb
mov
call
mov
inc
add
push
and
in
cmp
jge
addr16
inc
add
andb
mov
xorb
jnp
push
dec
or
enter
mov
fdivs
and
dec
repz
iret
inc
loop
push
push
pop
cld
xorb
test
add
scas
adc
add
daa
adc
cli
cmp
scas
cmp
movsl
sbb
xor
lahf
push
and
add
je
xor
push
jmp
mov
xchg
lods
aaa
mov
out
pop
add
jbe
add
and
push
add
or
add
xorl
clc
add
mov
sub
mov
stc
imul
xchg
mov
idivl
add
pop
daa
imul
adc
cmpb
pop
or
mov
push
pop
jbe
mov
negb
cs
jno
pusha
or
aaa
popa
cmpsb
jbe
add
lret
push
add
mov
inc
repnz
popa
add
in
inc
jb
setge
adcl
dec
ficompl
push
scas
mov
addb
shlb
push
add
mov
add
cmp
mov
dec
adc
gs
push
mov
aas
andl
jle
imul
xor
and
mov
ja
inc
jbe
sahf
lods
add
sub
dec
lds
xor
and
ficoml
dec
cmp
add
ret
xchg
mov
sbb
jle
pop
je
and
xchg
add
int
addb
sub
push
pop
jnp
add
mov
sub
idivl
mov
pop
push
add
pusha
xor
pop
xchg
add
jne
mov
aas
mov
add
xchg
cmp
mov
sub
ret
push
mov
into
pusha
fistpl
pop
jne
lock
cwtl
mov
pop
mov
lock
pop
push
fwait
fisttpl
sahf
add
jmp
imul
cmp
xor
cwtl
lock
test
cmpsl
push
mov
shrb
cmp
fbld
loope
xor
rcll
dec
lcall
nop
inc
push
cmp
add
pop
inc
test
jo
fcoml
push
jb
std
add
cmp
pop
aad
mov
lcall
and
pop
call
addr16
test
aad
pop
push
fnop
mov
test
push
jmp
dec
add
loop
test
call
insb
mov
jge
push
dec
add
push
pop
jp
xchg
fildl
pop
inc
ljmp
add
andb
dec
xor
inc
add
popf
incb
mov
loop
dec
add
out
int
sbbb
mov
aad
cmp
mov
mov
push
es
leave
rolb
loope
test
int3
lahf
lods
pop
ror
inc
ljmp
push
nop
lds
rorb
jo
jmp
and
aas
mov
add
dec
sbb
push
jecxz
cwtl
inc
sbb
add
mov
testb
mov
or
xchg
cmp
and
loope
mov
int
mov
fstpt
jno
fdivl
pop
add
jecxz
pop
dec
adc
xor
jo
test
jbe
mov
mov
lds
jo
xor
ljmp
ficompl
movl
mov
loop
inc
lret
in
mov
and
pop
pop
into
xchg
shr
in
cmp
test
rcr
add
jno
cmp
push
add
out
das
outsl
out
hlt
add
jns
paddw
pop
bnd
data16
imul
mov
sub
add
clc
jge,pt
push
dec
loopne
add
pop
add
sub
fcomps
sti
add
inc
aaa
repz
pusha
mov
mov
int3
add
mov
xchg
add
dec
fisttps
imul
cmp
sahf
int
add
out
mov
jnp
test
pop
pop
outsb
or
stos
mov
add
mov
pop
inc
inc
adc
cmp
outsl
mov
xchg
add
sbb
out
mov
pop
push
add
call
jno
cmp
jns
xor
sbbb
lcall
sbbl
push
mov
lock
jae
add
cmpsl
in
add
loopne
cwtl
push
adc
push
rcrb
add
out
daa
jnp
imul
pop
push
shlb
pop
mov
lock
pop
mov
lcall
int
jecxz
mov
adc
mov
or
mov
sbb
add
cmpsb
dec
xor
fistps
xor
add
jg
add
sbb
dec
jns
push
inc
js
and
xchg
sub
or
add
push
hlt
mov
insb
sub
pop
icebp
lcall
push
cltd
add
push
xchg
dec
mov
mov
icebp
add
daa
jp
xor
jne
hlt
sbb
dec
or
scas
xor
add
repnz
ret
mov
xchg
jge
or
or
movsb
aas
setae
add
pop
mov
lds
mov
jle
add
test
xor
or
adc
add
pop
jbe
sub
pop
push
pushf
sbb
jns
xchg
add
fldl
jno
inc
pushf
sti
test
lock
insb
call
mov
add
adc
lds
dec
jb,pn
lret
das
fwait
jg
sbb
xlat
mov
rolb
pop
rclb
cmp
insb
add
dec
mov
daa
or
cli
in
dec
and
ret
xchg
notb
fldl
and
sub
push
pop
cmovae
aam
dec
cmpsl
mov
mov
jl
mov
dec
mov
mov
or
test
add
mov
pop
test
popf
add
fs
dec
add
out
push
or
adcb
add
loopne
or
ja
add
xchg
mov
adc
sbb
test
adc
lock
daa
mov
or
push
xor
aad
sub
mov
dec
or
dec
pop
dec
stos
stos
mov
stos
xorb
fildll
hlt
loope
xchg
lods
mov
cmpsl
cld
arpl
xchg
fiaddl
or
sbb
enter
xchg
jae
jl
sbb
cmp
mov
xchg
add
insb
jne
std
xchg
push
add
lret
aas
repz
push
sahf
bound
scas
addl
and
fdiv
in
pop
pop
dec
add
add
sub
pop
mov
xorb
aam
xor
loope
shlb
dec
icebp
negb
outsb
cmp
add
push
in
jmp
mov
fisttpll
mov
pop
dec
add
add
daa
or
mov
add
dec
add
add
sahf
xchg
jb
rcrl
dec
mov
push
insl
je
test
and
cmp
scas
cmpl
shr
inc
fmul
add
xchg
and
ds
pop
pop
mov
mov
inc
mov
mov
cmp
add
xchg
mov
dec
aas
push
xor
jge
mov
xor
in
ds
adc
js
add
or
dec
inc
inc
sbb
hlt
and
add
mov
cwtl
lea
or
addl
pop
filds
add
push
sbb
xor
adc
add
and
pusha
xor
xchg
outsb
leave
push
and
ret
mov
jmp
dec
jnp
jp
pop
out
popf
mov
jle
jl
push
mov
cmp
and
cmc
xor
in
sub
push
rcrb
ret
add
pop
adc
out
xchg
loope
xchg
sub
add
sub
jnp
jecxz
outsb
jmp
clc
cmp
add
test
mov
add
push
add
jl
add
sub
lock
pop
mov
xorb
xlat
fdivs
add
js
arpl
subb
call
sub
rolb
int3
lds
inc
mov
rorl
add
and
or
sub
ds
pop
cltd
movsl
in
stos
or
loop
test
adc
and
push
fidivl
inc
arpl
or
outsl
lret
pop
sbb
popa
into
inc
pop
test
push
mov
push
fsubrp
mov
rorb
jp
cld
xor
add
out
lcall
cmpsb
mov
shr
inc
rcl
xor
inc
daa
sti
push
fisubrl
into
rorl
icebp
shlb
mov
mov
add
lret
jb
loopne
add
and
inc
loop
add
cmp
dec
lods
movsb
add
xor
pop
outsw
cmpsl
sub
or
cmpsb
xlat
sub
pop
push
gs
and
dec
dec
inc
shlb
int3
sbb
sub
popl
xor
insl
add
xchg
stos
push
bswap
in
mov
pop
push
cmpsl
les
dec
in
add
and
aas
inc
or
dec
adc
cmp
mov
lret
stos
addb
mov
movsb
loopne
repnz
rclb
dec
sbb
inc
arpl
js
adc
sub
sbb
rolb
lret
jnp
test
mov
mov
pop
lds
add
xchg
mov
add
in
pop
aam
out
add
mov
jg
add
sti
pushf
add
dec
cmp
insb
fcomps
fnstenv
rorl
ljmp
add
int3
and
cmp
daa
pop
add
push
insb
pop
inc
lret
add
jbe
adc
pop
jmp
ret
bound
dec
enter
insl
xchg
xor
lea
stos
scas
xor
ja
cmp
insl
fistps
call
push
cli
and
aaa
loop
mov
pop
cmpb
jbe
jmp
push
fs
jnp
roll
faddl
ja
jmp
rolb
dec
or
mov
xchg
aaa
xor
push
testb
dec
sahf
cltd
sub
js
xchg
out
mov
sbb
sti
int3
mov
rorb
fsubrl
add
jmp
inc
ljmp
stos
movsl
pop
rcrl
dec
xchg
jbe
out
rclb
pop
add
test
inc
or
mov
ja
cli
pop
pop
movsb
dec
add
lret
adc
add
sub
add
dec
stos
cmpsl
push
mov
jb
add
icebp
mov
add
pop
jle
mov
add
push
aaa
mov
mov
fiadds
xor
imul
cmp
iret
add
insb
rorb
xor
jno
add
jg
pushf
fistl
loopne
out
pop
mov
fucom
shl
mov
dec
xlat
sti
mov
lret
dec
push
loop
add
fcmovu
enter
or
push
and
pop
add
jb
cmpsl
lahf
mov
in
enter
add
ret
adc
popf
ret
add
mov
cmp
jmp
add
inc
xchg
pusha
jg
add
pop
scas
in
xlat
jle
inc
je
outsb
dec
jno
and
mov
dec
addb
pop
fwait
mov
ficoml
push
add
aaa
xlat
in
mov
mov
add
cs
loop
mov
clc
fs
jl
mov
add
movsl
data16
push
dec
sbb
test
and
dec
xchg
popa
ljmp
jmp
lret
pcmpeqb
loope
andb
fmuls
inc
rclb
outsb
add
divl
mov
add
test
gs
clc
in
push
adc
xchg
inc
mov
or
int
add
fistl
divl
cmp
pop
sbb
add
call
jl
jle
imul
shlb
pop
pop
dec
cmpl
cmp
pop
add
xchg
add
pop
pusha
cltd
fildl
add
push
sti
in
std
sub
add
outsb
adc
add
mov
out
add
aaa
push
pop
push
popl
pop
aas
lcall
push
out
pop
jo
insb
sub
ret
push
aas
xor
add
addb
add
sbb
ds
add
fs
mov
int3
daa
lea
int
adc
in
pop
xor
or
scas
shlb
sbb
mov
jne
ja
arpl
push
into
dec
int3
imul
mov
ljmp
jmp
rclb
and
icebp
adc
xchg
and
add
jecxz
cmp
jge
jo
pop
add
into
inc
dec
pop
insb
or
cli
pusha
xchg
enter
push
arpl
fcoms
mov
pop
lcall
enter
fidivrs
movsl
cmpsl
scas
push
push
fwait
mov
inc
shll
push
jb
add
aaa
scas
icebp
nop
outsl
shl
mov
push
mov
dec
mov
xor
pusha
mov
aaa
jmp
in
or
mov
out
nop
push
das
stc
pop
add
xlat
stos
dec
cmp
mov
mov
push
lahf
es
mov
and
mov
outsl
push
popf
out
and
test
stos
jo
mov
or
aam
cmp
mov
or
cmp
pop
lods
add
jecxz
cltd
pop
enter
lods
mov
add
cmc
cmp
fdivrl
pop
cmpsb
loop
jl
jmp
pop
inc
add
pop
mull
lods
sub
frstor
add
in
out
sbb
add
in
ds
sbb
or
sbb
pop
imul
and
iret
push
mov
add
mov
xor
or
push
sub
dec
popl
mov
or
dec
fstl
aad
inc
mov
and
js
data16
add
pop
mov
sub
add
xchg
idivl
mov
mov
pushf
sti
add
loop
in
inc
das
mov
gs
cld
add
cmp
cmp
mov
in
jle
sbb
mov
push
cmpsb
mov
or
inc
add
jmp
pusha
add
jmp
aad
jnp
xchg
add
adc
or
pop
add
into
test
jae
mov
andb
nop
mov
les
jne
lds
fwait
cmp
jo
xor
xchg
fcomip
add
lock
or
mov
cmp
mov
add
cltd
jmp
pop
push
inc
add
mov
cmp
adc
lret
mov
cmpsl
add
jne
add
lock
fistps
cmp
movups
js
adc
or
mov
pop
ljmp
js
cld
call
add
in
pop
and
out
pop
popa
shll
xchg
je
aam
xor
xchg
sbb
add
hlt
shr
inc
ret
mov
add
mov
lcall
jnp
push
dec
sbb
in
pop
or
jge
xor
decl
jbe
fldl
mov
adc
xchg
xchg
fidivrs
inc
outsb
repz
shrb
fistps
lret
push
sbb
add
and
ss
nop
pushf
add
jns
shrb
or
popf
clc
mov
adc
jecxz
cli
mov
mov
notl
lock
xchg
mov
cli
popa
add
mov
iret
cwtl
int3
add
test
adc
xor
mov
fmuls
jl
inc
cmpl
pop
push
popa
bound
mov
ret
xchg
cs
aas
or
mov
sub
call
test
add
xor
loopne
cmpsb
add
imul
jecxz
add
inc
shll
popa
je
pusha
xchg
loope
add
add
push
je
xchg
sahf
xor
sarb
add
ljmp
push
or
xor
or
das
stc
jbe
and
push
push
ficoml
repnz
or
jp
push
mov
push
pop
or
out
jo
int3
and
nop
add
imul
add
or
cmp
lret
mov
rcl
jg
iret
jge
sbb
ds
lods
xor
pop
loopne
inc
mov
rcl
xor
movb
push
jp
pop
rolb
dec
dec
xchg
pop
mov
mov
rclb
fsubrl
add
iret
in
jnp
mov
adc
and
add
arpl
add
mov
shrl
or
add
lret
and
push
rcrl
mov
mov
fnstenv
int3
cs
cmp
add
stos
and
fisttpll
jmp
adc
dec
addr16
and
mov
mov
test
aas
out
or
adc
dec
add
mov
and
mov
pop
mov
sbb
xchg
xchg
fiadds
call
iret
add
mov
and
or
sub
cmp
cmp
add
lret
movb
mov
lods
adc
jne
pop
pop
shl
jbe
push
scas
outsl
add
sub
add
cmp
mov
mov
inc
fcompl
fnstenv
add
jp
sbb
fnstsw
test
test
sbb
roll
pop
ja
mov
add
add
adc
dec
jo
add
pop
xchg
cmp
sub
out
sbb
adc
jo
mov
or
cmpb
add
insb
sub
add
lods
arpl
fisttps
sub
cmp
and
cmp
cmp
inc
gs
xor
push
imul
enter
out
icebp
sub
loop
in
push
scas
std
push
add
stos
andb
cmp
dec
xchg
sbb
add
daa
cmp
adc
sub
add
pop
pushf
movsb
push
inc
call
xlat
add
cmp
fcompl
add
sarb
hlt
add
dec
dec
add
mov
add
dec
lret
push
popf
dec
mov
cltd
add
xor
stos
mov
imul
loopne
or
mov
shlb
push
daa
mov
sbb
add
adc
add
pop
mov
je
rcl
addl
adc
dec
mov
xor
add
mov
dec
in
or
jmp
fs
add
sub
or
jb
test
jae
add
imul
and
mov
cwtl
or
lahf
aaa
add
addb
addb
addr16
xchg
mov
scas
orb
ffreep
or
inc
mov
jae
add
jns
stos
adc
xchg
lods
arpl
fs
pop
test
add
cmp
and
test
mov
add
xchg
pusha
pop
xchg
xor
inc
scas
cs
jb
pop
jne
sti
add
inc
cmp
jae
cs
push
aas
pop
roll
add
pushf
popa
push
lahf
inc
mov
shlb
dec
xor
push
add
leave
enter
aas
lock
sahf
pusha
inc
add
add
repnz
xchg
dec
sahf
clc
mov
hlt
cmp
xchg
mov
fstpt
aas
mov
add
push
add
fldl
adc
mov
movsb
ds
pop
add
or
or
outsb
mov
jle
iret
scas
loopne
inc
mov
mov
or
inc
or
or
cmp
mov
stc
scas
fildll
mov
add
cmp
out
sbb
fcompl
and
add
add
mov
push
repz
movb
wbinvd
aad
ret
pop
loop
jp
add
jge
out
sbb
ret
push
inc
je
insl
push
cmp
dec
push
pop
add
dec
daa
sbb
mov
push
and
lret
dec
sub
jo
lods
rolb
add
in
mov
dec
out
add
lock
leave
movhps
or
ret
lds
andb
jo
add
mov
hlt
aaa
fnsave
jne
sbb
mov
lcall
pop
and
loope
negb
insb
pop
popa
xchg
xlat
cmpsl
lods
xor
cmp
mov
orb
out
add
xlat
pop
inc
push
movsl
mov
cltd
jmp
cmp
mov
adc
push
pop
sbb
mov
cmp
orb
mov
call
add
lods
sahf
adc
add
loope
mov
lea
add
jmp
dec
mov
adc
imul
stos
fstl
pop
outsb
inc
pop
scas
out
ficomps
jecxz
add
gs
cmpsl
scas
dec
sbb
push
fcoms
subl
mov
inc
sbb
mov
mov
hlt
ret
or
lret
sbb
adc
dec
gs
repnz
inc
test
jge
lahf
push
popa
mov
clc
lods
js
sbb
jns
mov
push
or
ja
iret
dec
mov
int
cmpsb
sub
cmp
notb
fidivrs
or
pop
xor
fdivrs
rolb
in
add
add
adc
jp
je
mov
mov
and
dec
or
arpl
jbe
inc
mov
flds
stos
scas
cli
jno
cmp
mov
js
cld
sbb
leave
mov
jecxz
movsl
add
sbb
lods
lret
das
add
addl
jl
cli
add
sub
jmp
incb
imul
faddp
xlat
dec
rclb
hlt
mov
or
push
pusha
jnp
cmp
hlt
sbb
ljmp
xor
push
or
mov
in
cld
fwait
add
push
subl
xchg
or
es
inc
add
loope
push
dec
and
or
xchg
test
pop
pop
add
cmp
or
adc
sbb
jl
cmpsb
jmp
push
in
jle
leave
cmpsl
mov
jl
shlb
pop
mov
add
rcrl
cld
lret
push
mov
lds
mov
adc
aas
rorb
out
jns
sbb
adc
rorb
repnz
cmp
je
fwait
loopne
sub
in
xor
mov
mov
pop
leave
inc
add
inc
mov
in
lret
add
test
adc
adc
insl
aam
cmp
shl
popf
cmp
cmpsl
xorb
fisttpll
int3
dec
cwtl
add
aad
sti
das
movsb
and
jmp
dec
out
nop
xor
ds
int
jno
imul
sbb
cmp
jo
mov
movsb
arpl
dec
hlt
rclb
add
cmp
push
shlb
inc
mov
mov
add
std
cli
in
or
int
rcrb
iret
mov
pusha
lret
dec
out
mov
add
mov
nop
or
adc
ja
sub
pusha
and
sar
aaa
pusha
daa
adc
add
pop
jecxz
cmp
mov
ret
push
add
sub
sbb
loopne
aam
sbb
mov
mov
jl
setp
jae
jne
bnd
add
cmpb
lret
push
mov
aam
arpl
add
jo
push
test
xor
add
cmpsl
adc
test
ret
xor
icebp
imul
add
rorb
std
bound
mov
lcall
sbb
mov
fnsave
mov
xor
std
adc
sbb
ret
addb
push
stos
pop
fstl
enter
sbb
mov
sub
adc
mov
mov
pushaw
mov
nop
push
push
mov
lods
jne
rorl
and
jo
xlat
adc
call
xor
mov
dec
inc
cmp
scas
cmpsb
popf
add
mov
cwtl
add
mov
shrl
sbbb
mov
mov
in
shll
add
sbb
and
js
add
mov
cltd
dec
lret
add
and
shlb
js
jno
adc
jle
add
bound
adc
stc
sub
mov
shrb
sbb
movb
icebp
lock
ret
pop
inc
fadds
push
cmp
addl
test
mov
add
rcrb
repnz
popa
push
dec
or
sub
mov
add
rolb
xor
xlat
sbb
adc
sub
dec
mov
pandn
insl
aaa
cs
pusha
pop
in
pop
cli
lock
sbbl
call
sub
mov
and
push
addb
mov
iret
ss
mov
out
xchg
lea
test
rorb
dec
ret
add
mov
cmp
cwtl
push
push
inc
ja
sub
inc
mov
jbe
xor
cmp
rorb
adc
xor
dec
jbe
pusha
cmp
pop
adc
imul
sahf
jno
out
inc
or
popf
add
add
cs
and
adc
push
mov
jae
popf
or
cmpsb
ror
pop
aaa
push
pop
sub
pop
loopne
outsb
push
addr16
mov
sbb
stos
sti
insl
clc
sub
add
mov
push
sub
sbb
mov
pop
pop
mov
cmp
xor
call
add
data16
pushf
test
cmpsb
jle
ror
pop
sub
dec
sub
rolb
in
and
pop
lds
dec
into
lcall
fsubrl
popa
lods
jo
xor
ja
dec
add
sbb
mov
add
lret
cltd
mov
pop
outsb
push
bnd
out
jnp
sub
or
enter
cmp
sahf
daa
sbb
inc
sbb
pusha
mov
pop
mov
xchg
int3
and
adc
arpl
pop
mov
jno
add
or
pop
aad
inc
and
pop
push
and
ljmp
mov
mov
add
sbb
xchg
negl
lods
add
in
mov
ror
test
pop
pop
cmp
xor
scas
insb
test
adc
jle
fadds
xchg
negb
fidivs
cmp
or
dec
roll
test
add
mov
sar
mov
xchg
add
bound
iret
aad
lock
add
clc
loopne
js
xchg
add
mov
adc
sahf
movsb
mov
pushf
es
cmp
outsb
jg
adc
or
pop
dec
cmp
lret
pop
sbb
cmc
mov
adc
rolb
add
xorb
mov
aam
int
mov
and
jle
jnp
out
add
sub
xchg
jno
pop
sbb
mov
sbb
out
and
and
ficoms
inc
movsb
push
mov
cwtl
bound
xor
xchg
sbbb
xor
sub
jle,pt
sub
sti
push
mov
sbb
and
cs
adc
mov
xchg
cwtl
jmp
clc
ret
xor
ds
stc
push
dec
add
and
add
sbb
fdiv
and
loope
outsl
push
and
aas
xor
add
clc
popa
cli
push
loopne
pusha
data16
mov
aas
dec
scas
mov
loop
shlb
lahf
adc
or
cwtl
jae
hlt
add
push
add
mov
daa
mov
cltd
mov
mov
xorb
sbb
xorb
xchg
stos
inc
add
mov
aad
xor
shlb
sbb
enter
adc
jae
jno
inc
pop
test
or
inc
out
push
mov
sbb
mov
dec
mov
and
sbb
cmp
sbb
or
jmp
repz
push
sub
sbb
daa
add
into
cmp
dec
pop
pop
sub
adc
mov
pop
adcb
mov
fldl
adc
cmp
dec
sub
push
movsl
inc
xchg
sub
testb
je
jecxz
add
pop
jp
cmp
push
sub
xor
or
cmp
or
cmp
mov
mov
ds
mov
or
mov
repnz
or
test
and
inc
adc
insl
sbb
and
mov
mov
push
cltd
add
dec
inc
adc
xor
xchg
mov
push
lret
add
xor
and
shr
mov
imul
add
xor
dec
inc
xchg
pop
leave
dec
daa
jo
or
xchg
pop
arpl
pushf
jns
add
outsb
divl
mov
push
add
add
arpl
int3
or
inc
sti
insb
add
pop
into
cmp
inc
and
and
aas
icebp
popf
and
adcl
pop
or
jb
or
cmp
jp
test
test
int
xchg
sbb
add
mov
mov
xchg
mov
je
add
movsb
movlps
stos
jle
add
cli
cs
jno
jge
bswap
and
pop
aas
out
add
cli
cmp
mov
jb
mov
movsb
test
dec
add
pusha
pop
std
or
push
repz
or
jmp
je
xchg
inc
inc
cltd
xchg
add
call
jle
and
push
xchg
lahf
add
pop
cwtl
mov
sbb
cmc
mov
sbb
jns
ficompl
popf
add
sahf
dec
push
repz
mov
fistl
in
sub
add
xchg
loopne
dec
jl
cmp
jg
icebp
adcl
in
popf
sbb
leave
aaa
inc
sbb
lods
mov
pop
lret
insb
mov
add
jae
push
add
fs
xlat
in
or
and
nop
call
cli
lods
xor
test
push
js
aas
subb
xor
aas
add
aaa
inc
enter
inc
add
mov
scas
push
insl
push
push
movsb
dec
lahf
inc
add
cld
cmpsl
cli
dec
sbb
data16
cmc
xchg
scas
sahf
lods
cmp
mov
addl
xorb
mov
jbe
add
add
jmp
test
push
test
ljmp
add
push
add
inc
add
adc
pop
cmp
lret
adcb
add
sub
pop
mov
mov
imul
int3
sbb
dec
repz
push
les
or
add
dec
sub
push
sti
addr16
mov
xchg
push
mov
add
imul
repnz
fs
push
jmp
testl
pop
ljmp
adc
icebp
inc
repz
enter
repnz
int3
pop
sub
xor
je
out
and
test
mov
xlat
aaa
add
lock
sbb
fcmove
movsl
icebp
pop
mov
stos
jo
lret
cmp
fs
lods
aam
xbegin
scas
adc
add
mov
call
stos
add
cwtl
jecxz
data16
add
push
add
inc
cld
and
xchg
mov
pop
and
dec
pop
push
dec
sbb
adc
inc
add
iret
jo
aad
repnz
lcall
mov
sub
rolb
dec
mov
js
incl
in
popf
pushf
mov
es
adcb
fsub
outsl
mov
test
mov
add
ds
outsb
push
loope
cld
add
inc
or
nop
sbb
daa
lcall
pusha
bound
fidivrl
inc
cmp
pop
dec
add
cwtl
fyl2x
int3
jo
nop
mov
mov
mov
movsb
adc
inc
mov
std
aam
and
sbb
imul
mov
and
or
lea
add
ficomps
xlat
sbb
movsb
adc
ds
sub
sub
lds
mov
sbbl
sbb
sbb
push
lret
out
jns
jbe
loopne
pusha
adc
ds
adc
xchg
int
mov
add
inc
das
mov
add
outsl
mov
pop
in
mov
dec
pop
out
mov
add
push
loopne
xor
add
fwait
pop
iret
add
dec
cwtl
add
mov
xchg
ds
outsb
mov
orb
jl
ret
add
dec
push
pop
repnz
enter
sub
jnp
mov
out
imul
cmp
and
dec
xor
fidivrl
add
cmp
and
sub
inc
add
lea
std
icebp
popa
orb
sbb
pop
roll
xor
mov
sbb
popa
repnz
gs
aas
add
sub
daa
adc
jmp
cli
clc
jg
jbe
pop
and
std
lods
inc
hlt
xor
xchg
mov
push
mov
inc
outsl
add
pusha
je
inc
xchg
mov
shr
xchg
jg
mov
or
fsub
add
and
cmp
movsb
hlt
or
sbbb
pusha
sbb
add
add
jge
les
xchg
mov
sub
mov
je
add
sub
jp
dec
push
add
mov
add
jmp
add
repnz
push
out
leave
mov
bound
lret
fs
push
hlt
push
sbb
xchg
sbb
loope
push
and
mov
in
test
bound
shrb
cmp
add
xchg
jae
sahf
loopne
ja
add
fcomps
vpcomq
loope
jmp
addr16
dec
xor
mov
mov
movsb
addl
adc
popa
cmp
xchg
push
into
xor
add
lods
or
mov
jmp
inc
mov
pop
push
mov
les
inc
cmpsb
sti
add
push
in
adc
bound
loop
add
loop
popf
pop
movsl
add
outsl
push
scas
dec
push
adc
inc
xor
out
push
call
pushf
mov
push
enter
dec
mov
addr16
lock
sub
bts
mov
jmp
iret
cli
mov
push
add
inc
xchg
mov
mov
or
es
and
and
sbb
sub
cmp
sbb
add
adc
mov
mov
sub
sbb
stc
imul
dec
leave
or
push
pushf
xor
sub
cmp
add
pop
and
repnz
mov
cwtl
fbld
leave
insl
ret
and
cvttps2pi
in
or
in
aad
pop
mov
filds
test
in
sbb
xchg
dec
add
sbb
adc
fiadds
outsb
mov
flds
shll
mov
push
repz
jb
pop
sti
test
insb
cmp
adc
pop
in
in
pop
pop
adc
push
cmp
lds
ret
addr16
nop
in
sbb
jnp
and
adc
mov
daa
xlat
mov
enter
pop
dec
fidivl
cmp
mov
bound
inc
mov
push
int
push
mov
add
lock
pop
shll
add
inc
call
mov
cld
inc
aad
add
jmp
scas
push
in
dec
das
pop
xor
mov
xor
jge
adc
leave
ljmp
mov
add
sub
push
add
add
pop
scas
bound
test
mov
mov
bound
adc
hlt
and
xchg
test
lock
cmp
or
pushf
add
ja
adc
sahf
f2xm1
add
mov
inc
add
cmp
pop
inc
imul
test
add
sub
and
add
lods
jle
out
sarl
or
mov
in
mov
inc
jb
xor
sbb
cwtl
jns
mov
adcb
dec
xchg
xchg
je
sbb
out
daa
dec
pop
lret
imul
out
xchg
fs
and
xchg
in
sub
and
clc
out
aad
shlb
pusha
inc
pop
in
jg
sub
in
add
mov
add
pop
push
insl
mov
mov
fisubs
inc
subb
mov
mov
push
push
push
add
les
in
xchg
xor
xor
addl
xchg
lret
ljmp
adc
adc
and
inc
cmc
push
inc
push
mov
aas
ficoml
cmp
mov
push
shr
add
jb
es
cmp
loop
cld
add
cmp
push
mov
inc
sahf
out
lret
dec
xor
add
add
push
xor
cmp
mov
add
inc
cmp
adc
std
sbb
inc
int
sub
mov
mov
test
clc
xchg
add
xor
lods
or
ljmp
out
pop
push
filds
sub
and
das
jl
scas
mov
or
add
sbb
pusha
addl
mov
mov
cmp
add
adc
ret
inc
shrb
cmp
cmp
jl
add
xchg
sbbb
aam
xchg
xor
ret
in
fcomi
sub
nop
or
outsl
xor
xlat
add
inc
int3
nop
shrb
or
int
add
push
imul
mov
loopne
adc
or
mov
add
adc
jle
sub
add
sbb
mov
fadds
push
jmp
sbb
or
mov
les
cltd
inc
mov
shrl
rclb
loope
cmpsl
sbb
fnstenv
addr16
pusha
adc
std
xor
push
mov
cli
aad
xchg
fsub
pushf
gs
add
adc
mov
xor
nop
ss
add
sbb
scas
test
es
and
fidivs
inc
mov
out
jo
insl
mov
and
movsb
mov
jecxz
pop
repz
jnp
push
sub
xchg
adc
pop
test
sub
add
cmp
add
pop
jo
push
xor
mov
imul
sub
mov
add
mov
xchg
push
add
mov
xor
pop
ret
in
outsb
dec
add
aad
and
inc
lods
lret
push
cmp
sub
add
pusha
lock
mov
sub
push
jle
rcrb
lds
shlb
adc
mov
jl,pt
das
enter
test
adc
cmp
fiaddl
jns
add
add
jne
outsb
cltd
loope
call
inc
or
mov
xor
subb
dec
int
and
repnz
je
push
ret
stos
inc
and
loopne
pop
xchg
inc
test
fs
sbb
sbb
mov
mov
cmp
push
adc
imulb
pop
out
insl
cmp
out
or
and
jno
fadds
mov
jmp
mov
pop
in
adc
mov
pusha
loop
xchg
gs
pusha
adc
sub
mov
sbb
and
push
imul
bound
shll
int
adc
jnp
or
add
jo
dec
mov
nop
mov
sbb
orb
mov
ret
xlat
push
sub
inc
add
xchg
pushf
add
jbe
cwtl
mov
dec
xor
pop
loope
and
jnp
adc
out
or
sub
jp
repz
xchg
rclb
mov
push
nop
adc
or
je
xchg
push
xor
sub
mov
sbb
jl
stos
add
xor
add
inc
clc
mov
pop
mov
popa
add
test
add
add
add
shrb
sbb
sbbl
add
rcll
mov
lods
iret
sbb
insb
adc
and
nop
adc
jo
xorb
pusha
and
in
cmc
aaa
adc
lock
add
pop
cli
mov
xor
rcll
sahf
jecxz
adc
jl
add
scas
fldcw
mov
ret
mov
and
push
test
add
adc
lods
sbb
pop
mov
jo
push
add
push
xsha256
cmpsb
xchg
fcoms
push
sbb
mov
add
pop
outsb
adc
mov
pusha
sbb
nop
sbb
fists
jb
test
imul
ficoms
mov
stos
out
je
and
xchg
xchg
pusha
and
lea
and
ret
outsb
adc
mov
sbb
fldenv
mov
adc
in
jg
mov
mov
sbb
mov
sub
adc
adc
movsl
push
test
push
inc
mov
add
repnz
iret
mov
fcoml
or
nop
jno
loop
shlb
test
fsubrl
mov
cmpsl
test
imul
fldenv
test
pop
inc
inc
sbb
movsl
int3
dec
cmp
push
inc
gs
les
icebp
sahf
sbb
mov
movsl
orl
pop
rcrb
test
je
lock
sbb
test
mov
add
mov
jb
sbb
movsb
push
pop
rorl
divl
loopne
jo
push
sub
jb
cmp
push
and
adcb
mov
pop
mov
adc
aad
push
test
mov
pusha
stos
loopne
sbb
fidivl
xor
or
push
xor
addl
cmp
out
dec
hlt
ds
hlt
sub
lock
adc
pop
push
jo
and
and
stos
mov
fsubrl
mov
imul
mov
hlt
mov
lods
or
add
fdiv
cmpsb
cwtl
outsl
cmp
icebp
cmpsl
aam
dec
add
jecxz
out
add
add
jne
inc
repz
mov
jb
add
popa
adc
mov
inc
mov
in
sub
mov
movsl
jle
cmpsl
and
mov
shl
hlt
cltd
mov
mov
add
jae
sub
adc
jmp
inc
mov
sarb
icebp
pop
and
popf
mov
test
mov
fadds
jg
or
push
in
pop
sti
sbb
jp
out
repnz
icebp
jno
insl
clc
add
push
ret
push
sub
int3
stc
loopne
add
xor
sub
pop
dec
jno
lock
push
inc
cmp
xor
lods
arpl
xchg
sbb
jmp
adc
clc
push
xor
ja
push
inc
add
mov
adc
pusha
sarb
sbb
cli
or
pop
test
mov
xchg
push
cld
cmpsb
mov
inc
out
xchg
call
inc
int3
insb
rolb
sar
mov
pop
cwtl
xor
cmp
ret
scas
inc
aas
adc
enter
imul
sbb
out
test
roll
or
mov
jg
mov
shlb
imul
ret
adc
cld
ret
or
lods
sbb
or
lret
nop
negb
pushw
inc
out
adc
xor
mov
sub
push
js
xchg
sbb
lahf
bound
mov
or
in
push
sti
mov
aas
add
cmpsb
aam
push
test
inc
rcrb
mov
or
decl
jp
shlb
mov
and
and
movsb
sub
xor
sub
push
dec
in
add
push
cld
xor
and
fcmovb
mov
push
clc
cmp
xchg
xchg
mov
adc
pop
xor
and
add
aam
adc
dec
icebp
or
mov
rorb
add
sti
xor
cltd
mov
mov
inc
cmp
std
scas
mov
xor
push
popa
mov
fs
push
sbb
out
dec
sub
push
call
add
push
inc
jo
cld
inc
std
out
test
inc
call
xchg
push
mov
xor
je
divl
push
mov
adc
push
pushf
out
mov
sarb
xchg
repz
pop
sti
scas
popa
xlat
jno
sahf
push
mov
push
mov
xor
jbe
push
adc
mov
push
aam
inc
hlt
mov
xor
pusha
mov
lea
push
cld
sbb
cli
sub
out
popa
sbb
jo
sub
and
enter
cwtl
and
xor
inc
sub
test
repz
cmp
cmp
sbb
xchg
aam
adc
mov
shl
xor
mov
dec
loopne
inc
xor
and
push
bound
shll
mov
inc
cmp
jge
mov
inc
add
mov
je
fwait
adc
mov
xor
dec
jl
cltd
xor
mov
pop
inc
int3
xchg
das
jo
xor
int3
dec
test
fnstcw
out
jmp
icebp
add
jae
push
sbb
inc
call
inc
cmp
call
sbb
push
xor
rclb
pop
and
arpl
and
mov
jae
mov
cmp
add
aaa
mov
fimuls
pop
cmp
add
jo
add
dec
mov
ja
mov
lahf
loopne
inc
lcall
int3
addr16
mov
mov
sub
add
shll
push
scas
aaa
jne
push
negb
cltd
test
or
inc
ret
cwtl
jg
xchg
nop
adc
add
xchg
sub
mov
mov
lods
add
adcb
cmpb
or
sbb
rclb
xchg
xor
or
rolb
pop
psrlq
jbe
inc
push
cwtl
nop
and
push
jge
clc
cwtl
bound
out
leave
fcom
add
jle,pn
cli
scas
pop
inc
sbb
out
adc
pop
push
sbb
or
inc
add
mov
in
push
cmp
push
cwtl
mov
xor
mov
inc
mov
aam
push
inc
mov
ds
push
cld
and
add
popa
clc
inc
xor
push
pop
push
pop
dec
bnd
and
adc
movsl
pop
enter
addr16
pop
sub
test
in
fldcw
and
repnz
lcall
out
push
inc
inc
rcrb
add
mov
lods
pusha
enter
mov
addr16
test
inc
cmpsb
dec
test
jo
mov
push
mov
push
pop
dec
and
repnz
insb
jmp
shrb
sbb
rep
outsl
sub
aam
push
mov
rolb
fs
and
xchg
or
fs
add
mov
ja
lods
or
pop
cmp
js
and
sub
ds
leave
fdivrs
pop
and
insl
addb
or
pop
loopne
push
in
fwait
push
and
repz
clc
imul
pop
sbb
jne
fwait
xor
pop
xor
mov
sbb
aas
cmp
int
out
insb
xchg
sub
pop
ss
xor
sti
xor
mov
dec
xor
push
xor
ss
or
inc
cmp
jo
loope
les
mov
loope
stos
xchg
sbb
xor
mov
dec
dec
inc
pop
mov
clc
std
or
cmp
imul
add
xlat
mov
push
inc
and
add
or
mov
out
repnz
lcall
pop
addb
test
stc
dec
imul
mov
inc
xchg
lods
je
fsqrt
stos
push
rcrb
xchg
or
leave
push
xor
sti
ss
stos
imul
fldt
subl
add
and
xor
xchg
cmc
pop
mov
dec
rcr
dec
jecxz
mov
and
dec
insb
mov
dec
divb
nop
and
js
mov
cltd
ss
mov
mov
sub
jl
lcall
mov
mov
xchg
push
dec
sbb
mov
mov
xor
mov
mov
test
lcall
pop
xchg
je
jns
push
rcl
es
inc
out
dec
enter
and
test
adcb
inc
adc
imul
push
push
sbb
jmp
sub
cmp
xchg
aas
jno
pushf
mov
xchg
mov
sub
sbb
xor
int3
repnz
or
jbe
push
mov
lods
adc
clc
stos
cli
jl
rorl
mov
icebp
repnz
faddl
lds
jle
xor
shlb
adc
sbb
les
sub
test
es
dec
movsb
or
je
andb
in
xor
and
decb
mov
dec
or
loopne
add
xorl
mov
inc
inc
cld
cwtl
mov
mov
inc
xchg
outsl
addb
subl
sbb
lock
mov
ret
xchg
and
jmp
sbb
add
lahf
xchg
sub
jae
mov
jp
inc
cld
jp
js
sbb
mov
adc
loopne
pusha
test
adc
jp
repz
in
dec
fadd
cmp
mov
ret
mov
mov
pop
aas
or
cmpsl
pushf
dec
adc
pop
push
shrl
scas
add
and
ret
cmp
subb
adc
nop
or
stc
enter
es
and
jmp
in
test
xchg
hlt
mov
lea
and
push
xor
clc
fsubr
sbb
push
push
xor
xor
dec
dec
fsubs
mov
mov
or
loopne
das
sbb
xor
adc
mov
sub
add
movsb
xor
dec
std
ds
cmp
dec
bnd
adc
adc
fs
xor
jne
int3
js
mov
scas
repz
in
divb
or
inc
mov
inc
inc
mov
and
clc
jmp
push
jns
adc
fsts
sbb
pop
push
and
adc
cmp
fisttps
mov
cmp
sahf
dec
inc
pusha
cmovs
icebp
dec
sub
mov
inc
fsubrs
and
mov
and
lock
movsl
xchg
call
inc
jae
xchg
pushf
sarb
cmp
jecxz
and
xchg
mov
movsb
and
fnstcw
pushf
inc
fiaddl
xchg
subb
dec
bound
adc
mov
adc
sbb
sub
adc
add
and
push
fs
push
and
sbb
in
dec
sbb
jge
sub
mov
adc
cmpsb
sub
cld
mov
add
sub
or
outsl
inc
pop
xor
inc
xor
leave
int3
mov
imulb
add
cmpsl
dec
lds
cli
xchg
fcompl
inc
and
loop
mov
or
leave
pop
in
cs
pop
cmp
nop
repnz
adc
sbb
cmp
test
out
imul
and
dec
jns
mov
cmp
add
or
xorb
jge
jo
in
lods
outsl
cmc
call
push
popa
out
add
pop
add
sbb
add
cmp
orb
shr
mov
pop
mov
pop
jb
adc
mov
int3
arpl
add
mov
out
lret
jl
add
or
shlb
adc
shlb
add
outsb
cmp
aam
repnz
dec
push
movl
xor
fnstsw
mov
push
mov
enter
les
inc
jo
test
shlb
roll
push
mov
push
jle
xor
lret
xchg
mov
xor
dec
ss
push
mov
mov
in
fucomp
push
and
imul
repnz
incb
pop
clc
push
adc
lret
push
in
mov
fdivs
xchg
add
fwait
dec
ret
add
enter
sahf
clc
or
pop
cmp
movl
lcall
jecxz
enter
pop
xor
xchg
mov
arpl
ja
cmp
jns
mov
and
test
add
bswap
push
add
popf
xchg
aam
cld
dec
movsl
add
lea
clc
mov
jp
add
int3
in
into
push
sar
and
cs
pop
les
push
mov
add
imul
scas
pop
inc
lods
push
lock
aad
dec
rclb
cmp
bound
mov
rcrb
xchg
outsl
pop
inc
fs
or
add
mov
fisubrs
daa
adc
mov
loop
and
and
loopne
movups
ja
mov
mov
or
and
inc
notl
mov
and
roll
cmp
and
and
xchg
adc
in
lret
mov
jns
add
insl
and
into
add
cmp
or
push
push
bound
pop
dec
popa
sub
and
ljmp
jns
jmp
ss
cmp
add
dec
aad
les
shl
jl
add
nop
jno
xchg
pusha
dec
push
outsl
xor
add
pop
into
sbb
push
rolb
call
mov
add
rcrl
add
push
dec
mov
leave
jecxz
xor
add
pusha
xchg
in
xor
and
out
cmp
cmp
add
std
or
imul
and
and
add
push
loope
sub
sbb
adc
adc
shlb
add
mov
or
xor
and
popf
daa
adc
imul
pop
jmp
addl
add
shlb
loope
fdivl
add
mov
inc
inc
aas
fadd
xor
rcrb
pop
jbe,pt
adcb
dec
fwait
mov
xchg
sbb
scas
dec
xor
xchg
enter
inc
jl
push
in
into
ret
and
fiadds
add
out
inc
mov
xchg
lds
push
lret
dec
sub
jb
adc
pop
call
fsubr
test
xchg
enter
xor
clc
add
xchg
test
push
imul
andb
xor
inc
pushf
and
das
sbb
jae
rorb
test
ret
sub
ss
xor
xor
daa
push
mov
push
mov
mov
ret
mov
mov
lahf
nop
add
xlat
pop
bound
xor
and
add
mov
pop
aaa
int
xchg
cmp
cmpsb
inc
ljmp
xchg
add
stc
xchg
gs
rcl
imul
fs
pop
add
sahf
iret
and
or
xor
pusha
sbb
jns
cwtl
mov
loopne
or
ja
movsb
sti
adc
dec
add
adc
mov
cmpsb
add
mov
bnd
push
and
fwait
aaa
add
clc
sahf
cmp
mov
add
ja
add
repz
jg
aaa
cs
scas
lock
pop
adc
xchg
dec
sub
cmp
jb
sbb
add
inc
or
hlt
jne,pn
add
mov
mov
addr16
andl
push
popl
sub
add
push
insb
add
imul
push
pop
bound
enter
out
mov
dec
mov
cmp
or
add
pop
xchg
xchg
dec
mov
xchg
mov
rorb
mov
lcall
cmc
add
mulb
out
inc
and
xchg
pop
cltd
repnz
sub
lea
pop
push
or
mov
rorl
cli
and
popa
fwait
add
xor
xor
jp
cmpsl
enter
lock
fwait
mov
insl
stc
xchg
outsl
xor
and
pop
cwtl
leave
cmp
and
pop
add
pop
bnd
or
fst
flds
adc
jb
add
out
xchg
dec
push
cmp
mov
cmpsb
leave
fsubl
add
inc
cltd
cwtl
jb
pop
sub
cmp
in
mov
dec
aaa
sbbb
in
popf
mov
popl
orl
xor
stos
test
popa
mov
push
iret
stc
push
ja
nop
add
or
aam
mov
xor
push
xor
dec
inc
mov
adc
les
add
add
mov
in
in
addb
aam
das
pop
jmp
xchg
adc
pop
movl
popf
scas
push
cmpsb
sub
je
push
pop
mov
ficompl
xchg
sti
jb
sub
xor
dec
int3
push
lcall
mov
cvttps2pi
out
test
iret
mov
xor
xlat
imul
stos
add
fsts
pop
out
cmp
inc
out
std
aaa
jl
lods
inc
jnp
and
in
jno
push
repz
fwait
repnz
stc
mov
lahf
add
inc
jge
inc
mov
mov
addl
scas
inc
repnz
cmp
cld
add
add
iret
or
das
add
popa
rcrb
mov
mov
cmp
mov
fs
orb
or
pop
test
add
and
add
mov
xor
in
ljmp
jp
add
push
mov
dec
jb
enter
sub
mov
pmaxsw
aad
jle
jle
add
xchg
adc
mov
fsubrs
add
cmp
notl
rorl
mov
mul
movsl
mov
lcall
in
add
and
and
xchg
hlt
ss
sbb
jle
or
xor
in
push
loop
rclb
repz
mov
ss
ret
cld
bound
jmp
sbb
imul
lcall
int3
loope
ret
xchg
jne
mov
or
mov
xor
mov
ret
test
mov
jmp
iret
sub
pop
xchg
sub
and
fmuls
xor
jmp
and
add
jno
sbb
sub
call
into
mov
jb
add
push
pop
int3
pop
mov
mov
test
pop
out
fidivs
pop
or
addl
test
xchg
push
pop
cmp
mov
adc
cmp
xor
add
mov
daa
sbb
loope
xchg
mov
shll
cltd
and
adc
pop
or
push
dec
mov
inc
and
push
add
xchg
fdivrl
add
imul
fs
sub
movsl
add
and
sub
jae
jbe
and
test
xor
add
cmp
fdiv
push
outsb
mov
sub
repnz
fstl
fistpl
popf
mov
jns
mov
in
inc
add
adc
test
add
cmpsl
mov
shlb
xor
test
jbe
popf
gs
add
ret
fwait
push
loope
hlt
aaa
mov
add
xor
es
stos
cld
pop
ficompl
popa
cmc
popa
xchg
in
hlt
loop
push
cmp
cmp
xor
xchg
jle
stos
gs
xchg
insb
add
sub
in
and
mov
dec
addr16
mov
adc
jp
in
pop
mov
jg
adc
ljmp
jb
cmc
push
addl
jne
and
shr
add
rcll
or
fs
add
faddl
stc
add
cwtl
ja
pop
arpl
add
mov
add
pop
mov
pop
or
and
movsl
pusha
jbe
sarb
leave
sbb
cmp
mov
or
ja
add
sub
out
dec
fimuls
movsl
ret
pop
fldl
mov
fsubl
xor
scas
lahf
push
loopne
jge
xor
inc
mov
sub
pusha
sub
pop
popf
or
add
mov
rolb
popa
mov
roll
or
rol
mov
roll
data16
jne
push
hlt
sbb
in
movsl
loopne
call
ljmp
mov
cltd
cwtl
add
and
jecxz
adc
jno
icebp
mov
in
repz
pushl
in
xor
or
xchg
mov
xchg
pusha
sbbb
ret
hlt
xchg
cmp
rolb
push
add
inc
pop
xchg
in
mov
mov
ds
and
loop
bound
sub
or
jge
cmp
call
add
lcall
and
jg
xorl
fisttps
in
xor
lds
cmpsb
mov
clc
adc
or
jmp
jecxz
pop
add
mov
cs
adc
sbb
mov
push
add
mov
and
shl
or
or
pusha
aad
xchg
add
pop
inc
cltd
sub
add
lock
mov
pushf
cmp
pop
add
inc
pop
pushl
les
pop
rolb
cld
or
push
andl
inc
cmpsl
xchg
jo
sbb
add
jnp
int
rcl
mov
sub
imulw
add
lcall
out
in
mov
js
jge
stos
stc
pop
lahf
or
push
adc
inc
pop
es
add
popl
inc
ss
pop
push
cmp
lock
lcall
add
push
rorb
dec
and
mov
lods
xchg
xor
dec
add
ficoms
sbb
and
daa
ret
push
xchg
les
adc
add
cli
scas
cmc
cmp
outsl
jp
dec
cmpsl
pop
ret
mov
inc
hlt
mov
mov
cld
clc
je
inc
mov
loope
fsub
aas
add
lret
add
scas
mov
test
mov
adc
push
jne
pusha
loopne
jno
or
push
pusha
cld
xor
xchg
adc
rorb
xchg
adc
sbb
lock
lods
loopne
std
push
xchg
ljmp
sub
jp
cmpsl
cmp
add
pop
lahf
cmp
loopne
mov
adc
add
mov
in
out
dec
movsl
clc
das
add
xchg
not
rorb
outsb
mov
loop
shrb
loopne
call
pop
stos
pop
mov
add
jns
das
lcall
movsb
push
sbb
pop
shll
add
jmp
loopne
movb
outsl
or
repz
insl
cmp
loopne
sbb
pushf
add
stos
idivl
lcall
movl
pop
xor
push
add
nop
call
jle
loop
clc
jp
stos
pop
dec
inc
jnp
xchg
push
xor
add
pop
pushf
dec
push
sub
movsb
insl
fcmovnbe
push
xchg
xor
psubw
imul
negb
mov
lret
sbb
mov
sub
gs
mov
dec
adc
jnp
ret
add
cltd
popf
jb
mov
mov
bound
in
push
sub
fcoml
aad
inc
push
jbe
dec
sbb
mov
sahf
in
push
jecxz
add
sti
icebp
and
aam
mov
adcl
call
rcrb
sub
orb
sub
mov
dec
jns
pusha
cld
pusha
jo
xchg
or
dec
adc
std
add
popf
adc
push
fiadds
inc
dec
cwtl
pop
or
shrl
pop
jge
movsl
add
je
aad
xor
and
mov
push
mov
xchg
in
fwait
test
in
add
gs
adc
push
cmpsb
nopl
inc
daa
pusha
js
push
das
xchg
add
inc
dec
cmp
adc
jg
mov
jmp
sbb
inc
es
mov
lods
adcl
mov
test
cld
orl
cmp
push
mov
cmpsb
cmpsl
out
sub
insl
add
mov
nop
add
js
push
and
pop
rorb
sar
test
lods
inc
les
cmp
mov
pop
scas
push
mov
aaa
pop
inc
lahf
data16
add
sbb
imul
mov
jns
outsb
and
dec
movsb
and
add
pop
sbb
movsb
cli
or
jnp
call
jmp
dec
les
sbb
pop
xor
and
mov
rcr
out
and
sbb
cli
ret
pop
test
sbb
mov
jb
add
and
dec
imul
sub
add
and
test
shrb
xchg
adcb
ficomps
cmp
add
imul
lods
out
cmpsb
add
leave
ds
push
jmp
mov
sub
adc
in
daa
lahf
mov
inc
stc
xor
inc
mov
mov
loopne
pusha
mov
add
add
hlt
movsb
or
sbb
outsl
mov
out
jmp
stos
jno
dec
add
pushf
adc
in
add
and
in
jle
add
testb
add
or
cmp
xchg
adc
add
loop
jge
pop
mov
nop
push
into
mov
jle
add
and
or
stc
add
sbb
in
add
pop
je
xor
jo
fisttps
cmpsl
pop
cmp
test
dec
sbb
sbb
dec
cli
mov
add
out
mov
sbb
es
lret
add
mov
pop
loop
inc
je
add
mov
out
movsl
add
pop
cmp
popa
jecxz
out
pusha
inc
call
add
xchg
sbb
xchg
je
mov
add
adc
jb
xor
and
test
xchg
mov
xor
push
loopne
add
enter
das
jb
push
pop
mov
push
pop
test
stc
jecxz
dec
call
nop
mov
or
ds
sbb
adc
jno
and
in
aam
movsb
pop
ss
add
stc
into
lahf
std
mov
add
aas
andb
jg
pop
and
inc
icebp
xlat
lock
dec
add
fdivrl
add
xchg
xchg
inc
loopne
jo
sbb
push
add
or
orl
jp
fdivrs
xor
lds
test
and
add
sbb
or
or
lods
inc
addl
andb
xlat
xchg
cmp
cmp
rcrb
xchg
popa
roll
add
dec
add
je
add
shlb
out
pop
sub
mov
inc
test
push
push
in
aam
sbb
push
arpl
sub
cmp
mov
pop
xchg
xor
mov
int
ds
dec
orb
push
cmp
add
aad
cmpsb
adc
fst
or
or
mov
into
cmp
cmpb
jb
std
xor
add
lcall
push
pop
cwtl
ffreep
inc
out
cmpsb
mov
add
imul
jecxz
rorb
mov
dec
dec
or
sahf
mov
mov
les
add
lock
aad
add
rorb
jl
mov
xchg
push
add
lea
or
jne
nop
call
pop
xchg
push
dec
push
push
test
push
xchg
pop
push
mov
xchg
addr16
sub
leave
push
cmp
mov
pushf
jp
lds
xchg
sbb
sub
fbstp
add
xchg
out
cmp
mov
mov
inc
inc
add
outsb
cmpsl
sbb
add
and
mov
pop
jg
negl
mov
lock
out
push
push
push
add
jmp
mov
dec
int3
pusha
add
push
xor
lcall
push
jle
scas
sub
test
mov
xor
clc
ds
push
dec
or
xlat
mov
cld
add
add
jne
int3
mov
jo
cli
xor
add
adc
and
sbb
pusha
in
enter
push
jno
ret
mov
and
rolb
cld
dec
jmp
jo
lahf
add
testl
jg
push
data16
xlat
cmp
loopne
dec
add
jbe
and
jle
or
xorl
sti
nop
or
cmp
xchg
movsl
mov
cmp
add
add
adc
xchg
add
in
idiv
cmp
mov
cli
insb
add
sub
and
xor
orl
test
xorb
fisttpll
fnstenv
xlat
addb
pop
push
mov
add
lods
xor
add
inc
jnp
add
or
int
and
push
inc
insb
prefetcht2
mov
cmp
outsb
dec
fdivl
add
sub
sub
out
pop
sahf
in
mov
push
cmp
inc
in
cmpsl
inc
add
xor
popf
dec
jne
and
pop
sbb
mov
pusha
iret
cmp
add
push
ss
xor
add
xor
xchg
and
cmpsl
xchg
addr16
and
jae
les
test
push
and
xchg
rcrb
mov
add
ljmp
fstpl
stos
insb
movsb
sbb
push
out
inc
push
push
sbb
fistl
cltd
and
mov
add
pop
push
mov
rclb
movsb
clc
test
loop
aad
mov
jge
mov
fidivrs
sahf
clc
add
push
jle
add
rclb
cli
loopne
mov
add
push
adc
cltd
dec
sbb
add
dec
pusha
mov
scas
jp
dec
das
lret
jecxz
aaa
adc
xchg
fdivs
out
push
movsl
sarb
ljmp
mov
pop
fldl
pop
jns
test
xchg
xor
mov
push
jo
repnz
rclb
gs
adc
add
js
iret
sbb
cmpsl
push
mov
pop
xchg
shlb
mov
out
and
aas
add
add
pop
xchg
jns
add
and
cmp
pushf
cmp
arpl
inc
mov
sub
add
add
nop
cmp
ret
adc
dec
mov
xlat
hlt
xor
sbb
scas
icebp
mov
cmp
cmp
add
aam
mov
pop
add
jecxz
add
push
jle
pop
and
jno
mov
add
mov
pop
ds
mov
cmpsb
mov
mov
add
leave
sbbl
add
xchg
pop
mov
sub
loopne
pop
add
xor
sub
fnsave
sbb
fwait
cld
mov
or
int3
js
and
dec
inc
mov
inc
cmpsb
inc
aad
cld
scas
scas
or
out
ret
inc
or
lahf
in
std
inc
push
data16
out
mov
add
adc
pop
sbb
mov
mov
push
add
adc
out
addr16
ljmp
adc
pop
push
pop
xchg
add
clc
dec
add
jmp
mov
pop
adc
pop
push
and
test
and
ds
xor
pusha
pop
push
mov
push
add
ja
test
add
sahf
lret
and
stos
add
mov
cmc
je
pop
lock
xchg
testl
sub
les
imul
lds
jge
push
mov
mov
xchg
push
adc
mov
sub
lds
push
add
push
pop
or
aam
mov
mov
dec
pop
sbb
mov
cmpb
push
xchg
testb
lods
pop
dec
sarb
mov
add
fisubl
and
adc
mov
push
and
push
inc
enter
in
mov
bound
add
fildl
jns
rorb
add
mov
add
gs
push
sub
xor
add
ss
mov
cmp
add
out
jg
or
dec
pop
mov
fcoml
movsb
insb
and
fnstenv
xor
cmp
or
xor
xor
into
ja
aas
xor
cmp
stc
xor
mov
in
popa
aad
pop
pop
or
dec
sbbb
out
fs
les
mov
cld
adc
mov
add
sbb
mov
sbb
or
dec
inc
cmc
and
lahf
leave
fiaddl
insb
or
imul
cmp
dec
imulb
out
fld
stos
std
mov
xor
cmp
cmc
jns
add
mov
mov
push
jge
mov
xor
adc
cmp
mov
pusha
add
and
loope
adc
push
fldl
sub
lock
popf
lret
or
xor
add
es
jae
je
mov
xchg
testb
js
rcll
gs
add
inc
xor
sbb
and
push
ret
addr16
fs
stc
scas
daa
pop
add
jne
ja
add
cmp
xlat
add
pop
xchg
push
inc
dec
roll
jl
sti
lods
jns
roll
or
mov
adc
cld
push
add
xchg
pop
xor
cld
cmp
test
pop
pop
lahf
and
or
cmpsb
pusha
mov
push
cmpsl
clc
add
add
ds
test
orb
sti
insl
or
add
js
pop
inc
dec
add
and
xchg
jno
mov
test
cld
fildl
lds
cwtl
and
inc
mov
mov
and
mov
in
or
and
xchg
subl
jb
enter
rcrb
pusha
iret
rorb
jl
xchg
rcrl
xor
ror
pushf
icebp
cmpxchg
xchg
insl
push
leave
dec
aas
mov
add
adcb
daa
lods
and
incl
addr16
inc
sbb
sub
jo
inc
add
pop
cmp
sti
dec
leave
or
movsb
inc
sbb
mov
add
mov
sbb
aaa
pusha
call
stos
pusha
imul
out
fsts
xchg
inc
and
jo
icebp
mov
jns
add
lock
xor
jg
gs
je
and
faddp
pop
iret
add
fnstenv
sub
inc
js
or
stc
imul
icebp
mov
loopne
push
addl
inc
lret
fadds
add
add
nop
sub
mov
movsb
repz
xchg
in
into
fs
movsl
cli
fidivrl
shlb
lods
cmp
dec
cmp
cmpsb
loopne
cmp
mov
sub
push
cld
ds
lret
in
leave
testb
inc
imul
rorb
add
mov
xorb
xor
add
mov
push
lret
pop
cmp
or
int3
add
push
add
adc
stc
sub
movsb
fisubs
mov
xor
fadd
icebp
add
enter
lcall
ljmp
jo
xchg
inc
add
mov
enter
pop
pop
jne
add
push
dec
inc
int3
mov
popa
xchg
sbb
adc
stos
notl
add
ret
pop
cmp
mov
jp
xor
add
jb
fwait
add
sub
mov
jns
push
add
addl
push
dec
movsb
push
add
dec
ja
xchg
jg
repz
shlb
pusha
ret
sbb
adc
push
push
mov
adc
xchg
xchg
cltd
js
clc
add
mov
jae
mov
dec
push
push
dec
fsubl
mov
popa
mov
movsl
sbb
sub
adc
hlt
add
cmp
pop
ret
pop
add
xor
ficomps
jl
jmp
push
icebp
test
adc
inc
push
xchg
int3
fiaddl
adcb
xchg
ss
add
adc
inc
ja
mov
cmp
daa
stos
das
movb
lods
add
test
int3
out
ja
dec
jle
add
xor
imul
push
cmpsl
pusha
jno
xor
add
in
ret
out
push
sub
rcr
iret
ljmp
rcl
scas
or
mov
add
lods
jge
daa
sbb
mov
dec
mov
movsb
ja
add
lods
fs
insb
jns
cmpsl
pop
sbb
loopne
add
mov
xor
shrd
add
fbld
push
jnp
cmp
out
sarl
pop
xchg
add
in
dec
mov
shrl
scas
shll
xchg
hlt
xor
push
add
ret
lds
insl
adc
cmp
and
add
int
fisttpl
or
cmpl
in
mov
loope
mov
or
ljmp
push
cwtl
clc
lea
xchg
add
loope
scas
add
insl
in
test
rolb
dec
jmp
add
mov
daa
sbb
sub
js
mov
push
test
fnstsw
xor
in
jge
decb
jecxz
add
and
pop
mov
cmc
mov
jb
test
add
mov
stos
mov
inc
movb
xlat
adc
cmp
xchg
popl
jge
inc
mov
test
ljmp
jl
pop
cmp
xor
icebp
mov
in
mov
mov
sub
cltd
lret
insb
add
mov
pop
push
mov
in
push
fmul
nop
sbb
scas
js
int
pop
fmull
mov
add
in
loopne
clc
xor
rcrl
arpl
pop
add
loop
push
scas
add
int3
jp
mov
sub
popf
addb
notb
cmp
push
add
cmp
scas
dec
lock
hlt
inc
dec
xchg
and
movsb
lahf
adc
sahf
cmp
xchg
call
fwait
test
inc
and
add
inc
jg
mov
lcall
outsb
pop
aas
push
jmp
repz
idivb
cwtl
icebp
push
mov
sbb
add
lea
insl
cmpsb
pop
xchg
push
loopne
push
jne
pushf
add
mov
dec
jl
rcr
insl
cmp
or
movsb
int
lods
fdivp
hlt
jo
add
shr
pop
xchg
xor
mov
cli
cltd
andb
inc
add
je
add
mov
lcall
jnp
testl
add
lret
pusha
add
mov
scas
mov
daa
js
add
aaa
notb
add
push
dec
lock
mov
inc
mov
stos
xor
std
test
jge
or
loop
xor
push
add
clc
push
sbb
pop
ja
push
cmp
lods
push
incl
or
dec
mov
dec
loope
add
pop
stos
inc
pop
scas
pop
add
push
jae
rclb
jmp
out
inc
add
outsl
stos
or
add
pop
xchg
push
add
sub
and
mov
dec
xchg
inc
cwtl
or
lret
push
jo
notb
add
lock
mov
mov
dec
push
dec
vpmovm2b
test
cmp
mov
outsb
push
test
rorb
mov
movsb
dec
adc
and
dec
lret
add
out
push
int
mov
pop
sub
cmp
xor
xchg
shlb
cmp
sbb
and
insb
lods
jbe
adc
xchg
das
bound
pop
aad
insb
or
jecxz
cmp
jno
loop
lock
add
into
jo
ret
push
add
jecxz
not
and
or
cmc
add
push
pop
lcall
or
inc
ss
push
bound
lods
push
adc
in
xchg
add
sub
cmp
and
pop
add
out
hlt
or
gs
das
nop
mov
lret
fdivl
js
xor
sbb
pop
cmpsl
adc
insb
xchg
stc
lret
aad
mov
sub
push
cmc
mov
sbb
frstor
cmpsb
or
pusha
mov
pop
repz
push
or
and
or
jg
jp
cmp
add
and
cmpsb
add
add
adc
jae
jb
pop
imul
jbe
xor
or
cwtl
mov
adcl
shlb
push
in
adc
lock
jno
push
insl
push
pop
mov
je,pt
mov
test
adc
lcall
pop
adc
cmc
xor
dec
das
pusha
lcall
imull
icebp
mov
ret
mov
mov
loope
shll
inc
shl
jne
add
out
pop
sub
call
lods
adc
add
xor
stos
inc
jbe
xor
leave
lret
push
pop
mov
adc
add
mov
cld
jb
out
pop
lcall
int
push
push
push
test
clc
or
add
xchg
and
xchg
sbb
imul
int3
mov
mov
push
push
xorb
je
repnz
test
add
jae
in
fcomp
fadds
add
jg
call
add
xchg
fcompl
jg
add
sub
test
jg
cld
rcrb
jmp
mov
loope
leave
mov
pop
inc
mov
in
mov
add
cld
mov
pop
jecxz
cmp
jbe
mov
mov
ja
inc
aam
sbb
hlt
xorb
add
push
rolb
je
sbb
and
sti
sub
add
stos
popf
ficoms
fstpt
mov
push
add
sbb
pop
aaa
daa
add
ljmp
adc
adc
pop
add
xlat
dec
inc
shl
jl
dec
push
add
roll
lods
rolb
js
mov
cltd
push
mov
sub
or
cmc
mov
pop
mov
mov
add
jp
and
inc
dec
adc
add
sbb
mov
jo
dec
js
inc
addr16
loopne
jns
sub
mov
add
outsb
and
imulb
inc
jbe
add
dec
call
add
ret
outsl
lds
add
xor
push
mov
mov
clc
mov
mov
test
faddl
xor
mov
adc
dec
mov
add
mov
cmc
sbb
lea
std
xchg
push
adc
testb
cs
cmp
orl
push
outsb
rolb
and
stc
add
pop
pop
lds
ror
mov
push
outsl
sbb
leave
out
xor
push
sbb
push
in
aam
and
cwtl
int3
out
adc
inc
mov
mov
inc
pushf
aad
push
add
dec
test
pop
xchg
add
lret
pop
jno
fstp
add
push
and
lcall
cmp
ret
and
test
sbb
daa
sbb
pusha
push
and
lret
mov
inc
divb
loop
dec
xor
gs
das
fisttpl
sbb
add
gs
cmp
add
cmp
les
inc
ss
add
mov
int3
mov
sub
add
dec
out
push
xchg
stos
jge
ds
test
mov
push
das
add
and
push
jecxz
fisttpll
push
aad
adc
test
mov
pop
add
xchg
pop
xchg
add
repnz
xchg
addr16
adc
mov
imul
mov
cmp
adc
adc
add
loopne
mov
test
test
add
or
pop
add
call
clc
inc
pop
sti
pop
data16
add
jae
rorb
jge
pop
mov
leave
dec
adc
mov
mov
popa
dec
inc
loope
adc
addb
add
jmp
cmp
mov
fiadds
jnp
add
faddl
movsb
sbb
inc
je
lea
int3
add
adc
sub
mov
sbb
cmpl
addb
loop
mov
sbbb
dec
xor
cmp
cmp
stos
push
add
jle
out
pusha
cmp
add
adcl
addb
add
dec
add
add
xor
and
and
bound
ljmp
mov
xor
fadds
aaa
addr16
mov
jle
add
lret
dec
inc
pop
fdivl
fadds
push
xchg
pop
or
adcl
add
mov
jle
jo
add
mov
add
push
cltd
jmp
nop
cli
pop
pop
add
jle
xchg
mov
adc
dec
mov
push
add
in
scas
insb
pop
pushf
mov
inc
cltd
outsl
add
pop
aaa
clc
jnp
adcl
into
push
ds
add
out
mov
outsl
pop
push
out
add
in
mov
hlt
test
sbb
lcall
add
xor
sub
add
in
outsl
push
lcall
or
setle
in
out
inc
add
test
add
repz
int3
sbb
or
stc
inc
std
push
orb
cmp
aas
add
push
leave
mov
cmp
inc
inc
out
fsubrs
add
ds
pushf
pop
jae
add
dec
rcl
mov
jnp
sub
pop
add
out
test
xchg
jg
gs
cmpsb
aas
push
or
adc
fsubl
outsb
shlb
in
push
add
arpl
sub
sbb
in
roll
int3
jp
adc
imul
stos
fisttps
pop
testl
pusha
or
movsb
lahf
cmpb
je
jmp
sub
cmp
test
adc
cld
shr
jecxz
ljmp
and
adc
hlt
popa
inc
test
in
pop
jns
push
dec
sub
mov
mov
cmp
sbb
push
push
sub
add
icebp
mov
or
ja
outsb
xchg
pop
cmp
jp
testl
sahf
mov
mov
lea
mov
loopne
cmp
adc
inc
in
iret
push
or
fcmovnbe
test
sti
jg
push
loope
cmp
je
add
push
mov
int3
mov
lea
inc
add
test
cld
sahf
mov
and
xchg
lret
fdivrl
cmp
repz
dec
add
scas
xchg
mov
cmp
mov
mov
rcll
adc
mov
cmp
xchg
sbb
cmpb
dec
add
scas
adc
mov
mov
insl
mov
loopne
jp
push
or
aas
bound
add
adc
mov
shl
cmp
lahf
shlb
dec
inc
aaa
or
jb
adc
jno
loopne
inc
xorl
and
adc
jle
mov
pushf
sub
leave
add
popf
add
push
inc
iret
push
addb
add
icebp
mov
mov
xor
add
sub
repnz
xor
push
xor
adc
scas
sub
pop
xchg
mov
stos
fcmovne
add
ret
jno
mov
iret
sub
add
divl
push
or
jns
or
push
adc
inc
pop
jnp
rolb
inc
jge
sub
and
insl
push
dec
into
push
jecxz
xchg
mov
fstpt
adcb
outsl
and
cmp
add
fisubrl
add
jbe
push
sub
or
cmp
or
adc
jecxz
cmp
add
imul
cmp
add
stc
fldl
shll
pop
call
sets
pop
mov
add
xchg
and
test
mov
xor
add
push
adcb
int3
insl
add
fcomp
sbb
aam
cwtl
pop
pop
loopne
fwait
loope
cmp
fildll
imul
mov
rcl
mov
jp
sahf
cmp
aam
pop
aad
repnz
enter
and
and
pop
mov
or
shufps
loopne
je
loop
pop
cmp
sub
and
aas
scas
xor
cmc
cmp
cltd
fchs
sbb
mov
dec
add
call
xchg
int
popa
jo
inc
sbb
cwtl
or
sbb
push
ror
sahf
repnz
add
jo
xor
push
aad
enter
lahf
pop
repz
mov
or
adc
and
nop
mov
pop
mov
loopne
mov
mov
add
sbbl
cmp
mov
push
std
inc
mov
mov
adc
dec
add
inc
mov
xchg
out
ds
jno
mov
addr16
push
jl
leave
adc
sub
sbb
cmpsb
mov
jns
fisubrl
xchg
or
and
mov
hlt
loop
pop
out
cmp
jl
or
xor
loope
xchg
jecxz
stc
add
sarl
movsl
sub
shll
stc
add
jmp
push
jnp,pn
add
fidivs
hlt
fadds
clc
jbe
fwait
ret
fdivrl
insb
test
mov
jne
add
in
shrl
in
out
aaa
bound
shlb
addl
inc
sbb
add
pop
shlb
sbb
mov
inc
ljmp
dec
ja
add
cmp
idivl
and
out
mov
sub
xor
bound
test
add
jmp
cmp
pop
add
rcll
jnp
sbb
bound
aam
and
ret
ds
mov
cltd
dec
add
pop
fisttpll
cmp
jp
sub
fidivs
add
mov
inc
inc
push
fcoms
inc
repz
cltd
cld
pop
add
pushl
loopne
int
test
pop
decb
add
dec
sbb
jb
mov
xor
push
int
push
mov
sub
movups
pop
shll
and
ja
jnp
test
pop
fnstenv
xchg
cmpsb
mov
sbb
cmp
add
pop
es
lahf
or
add
dec
mov
or
add
inc
sub
xor
cmp
stos
pop
test
jmp
pop
fdivs
mov
cmp
sbb
iret
push
inc
lods
arpl
adc
cmp
imul
push
icebp
test
cmp
pusha
lret
sub
fcomps
dec
ja
push
ljmp
jmp
pop
adc
ja
ret
pushf
inc
add
dec
mov
and
adc
inc
int3
mov
andb
jp
cmp
add
popa
and
clc
add
and
add
gs
xchg
popf
push
testb
inc
lds
add
xlat
imul
test
pop
jo
add
jne
mov
popf
jecxz
and
mov
call
add
ret
dec
add
sub
mov
push
scas
or
insb
fimull
add
fadds
push
lods
jp
sbb
cld
push
nop
jb
add
mov
leave
mov
add
out
mov
xor
jg
cmp
lret
out
fisttpll
xchg
jmp
cwtl
into
in
adc
rcl
xchg
mov
fmuls
inc
and
lea
inc
sarl
add
xrelease
cs
pop
xchg
outsb
fildl
xchg
lds
jo
sub
imul
test
lods
add
outsb
push
sub
nop
mov
push
push
out
in
std
test
add
jno
cmp
add
and
test
inc
icebp
jae
add
xchg
ljmp
mov
inc
mov
lds
in
mov
and
or
cmpb
cmpsb
cltd
or
mov
out
inc
cld
mov
fiadds
sub
movsl
mov
push
jb
push
vpunpcklqdq
add
hlt
je
outsb
nop
shlb
add
loop
pushf
rol
mov
addr16
push
add
es
add
movsl
mov
mov
sbb
fnstenv
push
push
cmp
push
jns
test
xchg
add
loop
int3
mov
jecxz
dec
pop
orl
mov
push
rcrb
inc
sub
push
shl
push
mov
pop
push
call
pusha
pop
cs
lcall
in
inc
xchg
sub
xor
movsb
add
push
imul
cwtl
pop
fdivr
cmp
sbb
dec
les
pop
pop
ljmp
adc
outsb
fsubs
adc
adc
push
sub
and
nop
inc
pop
aas
mov
jo
add
jae
add
dec
push
xor
ds
adcb
push
std
loopne
and
shll
adc
dec
mov
add
nop
push
out
sub
add
push
in
mov
leave
cs
stos
daa
add
setle
xchg
ss
pusha
push
push
pushf
lcall
add
pmullw
jbe
xchg
cmp
add
nop
cmp
and
ret
inc
xchg
add
xchg
adc
or
push
enter
sti
inc
jbe
stc
add
movsl
std
push
add
cmp
je
jne
push
add
inc
pop
cmpb
add
xchg
add
push
xacquire
add
mov
mov
cwtl
cld
add
adc
add
sbb
mov
lock
sbb
bound
cld
push
fiadds
je
and
mov
ja
arpl
cmc
insb
rcll
out
in
dec
aaa
sbb
cs
mov
fs
cmp
and
loop
neg
daa
cmpsl
pop
inc
fs
jb
popl
and
in
out
mov
aam
lahf
add
xor
mov
stos
pop
add
out
pop
or
movb
push
cmp
pop
es
movsl
jmp
cltd
enter
in
ds
and
jecxz
hlt
cwtl
mov
xchg
add
adc
cli
add
movsl
jo
pop
fisubs
cmp
mov
xchg
sbb
popa
loop
push
dec
imul
cmp
das
enter
add
dec
xchg
mov
add
or
adc
data16
add
jbe
or
fs
ljmp
pop
add
xchg
loop
mov
and
add
xchg
dec
push
xor
mov
inc
hlt
popf
or
xchg
add
ljmp
lret
mov
sub
push
sub
mov
jle,pn
add
imul
cmp
lret
add
pushf
push
xchg
enter
scas
sbb
mov
cwtl
add
sub
shll
dec
js
jb
add
loopne
sti
sub
pusha
add
add
enter
ljmp
cmp
pop
push
rcrb
lahf
push
add
faddp
aam
rolb
jle
xor
pop
lock
xor
hlt
out
mov
shr
dec
or
jl
out
lretw
or
rclb
sub
call
jecxz
inc
ret
fisttpl
pop
in
scas
or
mov
push
and
dec
add
xchg
fmul
cmpsb
or
aas
push
jmp
push
push
adc
add
fwait
sbb
loope
enter
push
add
in
sbb
and
sbb
mov
push
imul
pusha
add
lods
shrl
and
push
dec
stos
add
popf
pop
add
stos
add
push
inc
sub
sbb
add
sub
push
pop
popa
add
cmp
or
imul
iret
mov
pop
insb
pop
imul
push
sahf
jge
push
add
imull
nop
xor
add
push
sbb
jmp
dec
jle
add
stos
pop
mov
es
jae
inc
sti
ja
loopne
inc
or
jb
mov
dec
mov
cmp
leave
jne
insb
push
adc
inc
add
seta
lret
push
fisubs
add
jbe
add
andl
pop
scas
lods
adc
aaa
cmp
cltd
test
inc
or
add
mov
push
add
xchg
stos
lret
cmp
fists
mov
and
inc
mov
ja
push
fmul
adc
sahf
and
push
les
add
pusha
push
addl
loopne
mov
fistpll
and
jmp
inc
pop
nop
and
mov
outsb
jnp
add
mov
pop
popa
mov
pop
lock
scas
mov
lods
jl
push
bound
imul
mov
fnstenv
add
jge
mov
mov
and
dec
adc
jne
add
ja
cmp
ret
adc
filds
lods
mov
into
ror
jnp
cmpsb
les
ss
push
mov
push
int
pop
pop
out
mov
inc
in
xchg
jnp
mov
add
fdivr
filds
popf
push
rcrb
out
movsb
cmp
push
mov
push
pop
mov
fwait
js
sbb
push
xchg
imull
call
xchg
dec
push
mov
jmp
mov
add
sti
push
lea
xor
jne
jp
in
frstor
add
mov
aaa
testb
sub
inc
loopne
cli
nop
and
push
pop
scas
roll
jnp
popa
jno
fdivrl
shlb
jne
insl
sbb
les
divl
xorb
fcompl
push
pop
cmp
addb
jge
cld
loopne
pop
add
loopne
inc
mov
cmp
mov
cmp
jb
clc
and
pop
mov
aam
or
enter
push
push
cmp
mov
add
loop
mov
jne
pop
test
jge
add
jl
add
pop
add
fsubrs
test
xor
or
jl
add
pop
sub
sbbl
or
outsl
aad
stc
aas
push
xor
cmp
jo
pop
pushf
dec
and
insb
cltd
fisttps
adc
jbe
xchg
lock
out
mov
mov
mov
xor
leave
loope
add
inc
pop
adc
jle
add
fcoml
adc
aas
mov
sti
jmp
clc
lock
mov
insl
push
outsb
ljmp
push
mov
inc
bound
test
mov
sar
push
imul
add
sbb
inc
out
mov
stos
fisubl
xchg
aad
cltd
push
cmp
dec
dec
ret
faddl
movsl
push
mov
mov
roll
lods
scas
adc
adc
lock
and
push
aam
or
push
add
sub
push
push
add
aaa
add
test
or
add
cmp
daa
into
jl
ret
dec
or
push
push
loop
add
mov
jmp
push
ljmp
ret
test
lock
pop
mov
ficomps
in
add
inc
add
jle
ret
inc
add
mov
and
fimuls
sar
push
rolb
xchg
sti
mov
jno
test
or
cmp
cli
xor
aas
or
dec
mov
xchg
jmp
cbtw
addb
outsl
add
mov
add
cwtl
dec
lds
mov
inc
ljmp
popf
add
cmc
dec
mov
repnz
cmp
fimuls
xchg
lods
lock
les
movsl
jne
add
jb
xchg
adc
mov
mov
mov
mov
imul
inc
mov
xchg
push
shll
jb
sarb
xchg
pop
mov
fildl
push
loop
inc
pop
add
inc
cmpsl
call
sub
adc
sub
pop
sub
inc
add
and
cmpsb
mov
subl
jle,pn
add
jge
out
add
push
roll
mov
roll
cmp
mov
jae
cmp
nop
add
add
dec
push
or
add
push
pop
aas
mov
add
pusha
negb
jge
dec
daa
add
and
pop
rolb
shll
sub
or
stc
dec
idivb
add
cmp
loop
sbb
pop
shlb
xor
inc
or
push
xor
loopne
stos
pop
mov
movq
out
cmpsl
daa
fwait
pusha
or
outsb
push
adc
rcll
sarb
mov
loopne
scas
xchg
incl
loopne
fs
movsl
cmp
enter
jb
push
or
mov
pop
or
push
mov
cli
cmp
mov
mov
push
mov
cmc
ljmp
push
mov
pop
xor
addr16
shlb
add
roll
cwtl
jl
ja
add
pop
pop
ret
movsl
mov
and
scas
repnz
enter
lahf
addl
add
jg
jbe
add
inc
cmpsl
adc
movsl
mov
inc
xchg
sbb
lcall
mov
mov
testl
cmp
jne
adc
rcrb
lods
inc
mov
or
dec
add
mov
pop
mov
fldcw
out
xor
add
push
push
push
jbe
ficoml
into
insb
push
cwtl
roll
adc
aaa
cmp
add
cmp
push
and
daa
aas
andb
xchg
add
in
insb
mov
adc
ja
loop
push
icebp
paddw
sbb
push
out
scas
cld
rolb
mov
jae
add
jl
aam
lods
add
add
or
add
scas
pop
cmpsl
push
shrb
addr16
pop
pop
or
add
sub
xor
rcll
and
add
rorl
aam
insl
nop
xchg
jns
jmp
fnsave
jg
fsubrl
andl
push
imul
add
mov
dec
out
test
call
mov
push
dec
roll
mov
xchg
icebp
leave
in
pusha
scas
out
push
mov
sbbl
add
mov
fs
mov
xchg
xlat
add
pop
add
jo
jb
dec
sbb
mov
sahf
sub
loope
popa
into
push
mov
xor
jl
sub
sbb
shr
js
in
adc
test
xchg
filds
pushf
add
aad
add
lret
lcall
mov
mov
add
sub
int
mov
sahf
inc
aad
les
aas
add
sbb
test
imul
fsts
imul
pop
pop
add
rorb
shrl
jo
mov
xor
jns
aaa
fimull
sbb
test
call
dec
fcoml
orl
push
movsl
fldl
in
jmp
cmp
loop
mov
adc
scas
gs
xchg
sbbl
les
inc
jmp
jg
xchg
xchg
fiaddl
int3
ret
and
rcl
scas
xchg
cmp
inc
js
add
or
stc
jne
hlt
enter
popf
add
mov
or
cld
daa
repnz
sbb
sarl
aas
xchg
push
loopne
mov
sbb
and
in
sub
imul
ud1
or
test
push
add
mov
adc
jne
sbb
sti
test
insl
xrelease
cs
sbb
fst
in
dec
ds
js
dec
and
sbb
xchg
push
addl
add
icebp
pushf
nop
and
mov
adc
fiadds
enter
add
jmp
aas
sbb
inc
jns
push
xor
push
xor
popa
lcall
loopne
or
push
iret
orb
jo
fcmovnbe
mov
pop
mov
mulb
jo
clc
cmpsb
fsubp
fbstp
jo
cmp
sbb
sbb
mov
cmp
cmp
add
sub
add
out
loope
divb
dec
and
xchg
add
adc
lahf
xor
adcl
adc
inc
sbb
add
push
add
in
mov
mov
sarb
hlt
imul
dec
jmp
sub
add
rclb
mov
and
mov
bound
out
and
inc
int3
popf
lods
pop
xchg
sbb
in
xchg
add
mov
in
mov
ja
add
insb
cmc
or
jno
add
add
icebp
inc
xor
mov
push
push
adc
xchg
sbb
fst
dec
xor
mov
sub
or
out
aam
mov
jge
pop
pop
dec
sahf
je
dec
pop
scas
imul
incb
adcb
xchg
pop
mov
into
dec
xchg
and
add
xor
dec
mov
xor
shll
add
flds
nop
dec
add
mov
mov
lods
sbb
test
cwtl
rcl
jp
add
inc
jns
gs
clc
les
fcoml
pop
mov
incb
pop
fs
add
pop
mov
pop
out
xor
addb
or
push
mov
mov
pop
push
dec
daa
stos
hlt
icebp
insl
pop
scas
fdivr
into
xor
repnz
mov
pop
jecxz
lods
mov
pop
cltd
shr
and
dec
pop
lcall
jne
dec
popa
add
sub
mov
cmp
adc
add
mov
stc
jo
in
mov
add
mov
jb
add
testb
push
rclb
mov
iret
xchg
xor
add
jne,pt
add
sahf
lds
mov
xchg
or
xor
jne
ret
lds
cmp
pop
jno
loopne
mov
jmp
cli
sub
fldcw
fsubr
cmc
mov
inc
movb
xchg
insl
enter
add
mov
push
push
sbb
repz
push
and
xchg
testl
dec
add
out
lret
add
push
or
xor
xchg
in
xor
add
ja
xchg
add
xor
decb
fbstp
int3
push
adc
push
mov
push
loope
cmp
adc
lods
ficomps
sub
jle
pop
lds
daa
stos
inc
or
cmp
xchg
sbb
mov
mov
sbb
lret
add
insb
stos
outsl
lcall
add
outsb
lods
jno
pusha
faddl
lret
les
dec
or
test
add
fmuls
fsubl
cmp
cwtl
mov
add
cmpsl
xchg
call
sbb
enter
mov
setns
sub
pop
push
rorl
shrb
mov
add
pop
fistpl
xchg
cmp
or
jae
cwtl
sub
dec
shl
fdivrl
idivb
add
xchg
je
pusha
dec
mov
rclb
lea
xor
aas
in
add
ds
dec
xchg
add
movsl
cmp
insl
imul
pusha
inc
and
jmp
test
cmpsl
dec
fldcw
pop
adc
pop
mov
sub
xlat
mov
xor
scas
std
add
add
jbe
mov
cwtl
sub
scas
and
fsts
jecxz
std
or
add
lret
or
mov
push
cwtl
cmpb
fistl
and
xchg
mov
movl
sub
out
push
add
or
outsb
add
fwait
xchg
es
push
push
and
jae
dec
ja
popf
data16
adc
mov
insl
xor
pop
xor
arpl
jbe
fisubrs
jae
lahf
sbbb
cmp
add
sbb
mov
add
ret
faddl
mov
int3
add
sub
sub
hlt
sbb
popa
mov
pop
sbb
xor
mov
add
in
pop
insb
negl
pusha
test
divb
push
push
cmp
mov
cmp
loopne
sbb
lcall
mov
sbb
sbb
je
outsl
test
or
adc
rcr
mov
lods
xchg
idivl
push
clc
fldl
inc
ljmp
es
adc
lcall
punpckhbw
adc
and
testb
lds
dec
aaa
push
loope
mov
push
insb
insl
xchg
push
fcomp
mov
int3
xchg
cmc
mov
inc
inc
push
test
add
outsl
out
xor
ds
pop
fcoml
jae
cld
add
xchg
sub
int
dec
ja
fistps
add
loope
adc
mov
imul
or
pushf
and
cltd
jecxz
sbb
jg
test
sbb
inc
sahf
lret
cmp
and
sbb
add
adc
push
push
xchg
aam
inc
sahf
mov
xor
pop
int3
sbb
push
stc
lcall
mov
pusha
sbb
adc
stos
push
mov
cld
jecxz
gs
push
inc
mov
out
roll
in
fwait
scas
pusha
loope
mov
push
or
je
je
cmpsb
add
sbb
jp
xor
and
sbb
add
push
pop
jmp
in
mov
pop
inc
pop
adcl
subl
push
and
or
cmovno
pop
sub
lds
push
mov
add
rclb
or
mov
rcrb
jp
in
mov
movsl
push
add
addr16
or
mov
int
rolb
testb
add
enter
imul
add
popf
add
dec
ror
clc
jmp
xchg
mov
add
stos
pop
add
subl
add
cmp
mov
push
and
stos
xor
xchg
rcll
xor
adc
mov
and
popa
mov
dec
cs
sub
add
mov
orb
xor
sub
enter
mov
sahf
sub
xchg
mov
xor
mov
add
stos
lods
pop
divl
add
mov
adc
pop
pop
jns
push
movsb
sahf
add
clc
mov
add
add
adcb
or
ret
int3
adc
pop
inc
or
add
in
mov
call
xchg
iret
lea
sub
or
fists
scas
and
adc
test
dec
and
mov
cs
lock
xchg
and
and
adc
mov
inc
andb
hlt
xchg
and
jb
add
mov
add
inc
mov
enter
add
push
test
add
or
fs
or
testl
test
cmp
sbb
dec
mov
dec
jnp
jmp
or
pop
outsb
loop
jns
add
sbb
inc
add
cli
xchg
inc
adc
jns
add
cltd
hlt
cld
add
inc
add
sub
aad
cltd
insb
dec
lahf
cmc
add
loopne
in
loop
cmp
add
dec
aam
pop
out
js
add
clc
ja
mov
add
pop
es
nop
ljmp
cmp
int
hlt
fs
pop
xchg
psubsw
outsl
mov
add
lcall
inc
xor
sbb
jno
add
sarl
xchg
icebp
push
lds
jo
xorb
jle
push
jp
lahf
add
fwait
adc
mov
icebp
jmp
dec
andb
das
out
pop
or
into
jecxz
lret
add
in
ja
dec
xchg
addl
jmp
mov
hlt
int3
xchg
xor
cmovne
xchg
push
mov
mov
add
push
and
and
push
rolb
ret
adc
imul
mov
jmp
sti
add
jae
cmovl
mov
stos
add
or
jnp
nop
and
mov
cs
testb
sahf
loopne
fdivrl
pop
xorl
sbb
xchg
dec
add
xor
xor
inc
jnp
xor
add
incl
cmp
push
xchg
out
cmpsl
add
sub
dec
jnp
add
xchg
xchg
test
les
mov
test
dec
sahf
mov
push
xor
push
cld
jmp
xchg
or
and
mov
adc
add
jo
in
sub
pop
pop
mov
lret
add
mov
mov
add
in
jns
lret
mov
loope
pusha
addr16
out
jno
pop
in
out
fmuls
pop
cmp
inc
sbb
jnp
mov
add
iret
stos
inc
in
leave
mov
adc
aad
movb
and
popf
add
sub
clc
cmp
push
xor
inc
add
mov
out
pop
sbb
idivb
add
lock
in
mov
rdmsr
jmp
loop
add
outsl
xchg
inc
hlt
push
and
std
in
cmpsl
add
cmp
adc
loopne
xor
cld
pop
add
lock
std
push
add
fidivl
imul
flds
push
adc
add
andl
fsubrl
add
mov
or
xor
in
inc
mov
mov
test
rcr
mov
pop
ret
fisubrs
int
xchg
out
add
repz
sub
jmp
orb
add
pop
cld
cld
je
add
add
loopne
insb
out
cwtl
cwtl
xor
xor
add
mov
aas
cmp
in
push
call
add
in
jl
add
push
mov
mov
fdivrl
cmpsl
push
push
fiaddl
rorb
add
shlb
or
push
mov
repz
mov
cmpsl
iret
add
jle
popf
inc
xchg
jmp
mov
cmp
add
cmp
push
imulb
mov
jno
and
in
pop
add
hlt
dec
loopne
data16
cli
and
or
enter
dec
add
add
mov
inc
dec
repz
push
sub
faddl
xchg
jns
jae
mov
or
imul
pop
pusha
cld
xor
cltd
push
add
push
and
das
push
mov
loope
sbb
mov
mov
lods
int
mov
roll
adc
and
les
fiaddl
lret
icebp
mov
or
ficoms
in
mov
or
mov
mov
mov
sub
arpl
add
xor
push
cmp
adc
jb
jle
add
loop
clc
add
pop
jne
test
hlt
lock
sbb
scas
push
sub
incb
in
dec
sahf
pusha
adc
scas
insl
bound
cmpsb
ja
inc
sbb
loop
inc
call
in
and
lcall
mov
cmp
loopne
icebp
jbe
inc
pop
aaa
in
call
xchg
add
das
adcb
push
mov
jne
add
in
test
btr
into
shlb
push
jns
popf
jb
mov
inc
test
and
lcall
push
lcall
or
scas
in
add
lds
mov
dec
pop
sbb
mov
repz
cmp
xor
bound
add
adc
add
test
and
cmpb
call
add
stos
jnp
or
fsubrs
dec
dec
or
cmp
mov
adc
sti
add
cmpsb
xchg
push
pop
pusha
sub
fistpl
xchg
mov
or
shlb
mov
fiaddl
ljmp
clc
popf
mov
and
loop
outsb
pop
mov
mov
or
sbb
cmp
push
lea
and
dec
add
mov
push
sbb
mov
mov
xchg
test
fcomps
dec
lret
rclb
add
and
movsb
add
pop
push
lds
adc
mov
mov
mov
mov
cwtl
imul
repnz
add
fs
mov
xchg
aad
dec
xor
movsl
call
mov
mov
negl
scas
push
add
inc
daa
out
insb
mov
xor
in
repz
adc
or
and
cmp
add
dec
stos
mov
ret
jge
aam
xchg
pop
aaa
push
scas
movsb
xchg
fnstcw
pop
inc
imul
cwtl
xor
add
cli
jmp
mov
pop
ret
mov
pusha
not
daa
sub
flds
je
mov
addr16
fmull
sahf
sbb
pop
and
in
loopne
add
sbbb
inc
gs
add
mov
cmp
rorl
ljmp
mov
inc
sbb
jge
jno
sub
dec
scas
out
and
aam
inc
addl
push
cmp
pop
std
pop
mov
mov
roll
dec
push
jne
add
mov
bound
mov
pop
mov
xchg
sti
arpl
movsb
loop
xchg
loope
jp
shrb
icebp
dec
jecxz
out
sbb
ljmp
add
push
stos
out
push
orl
stc
push
jae,pt
add
stos
lret
jl
add
fisubs
and
xchg
jns
mov
add
sbb
insl
cmpsl
jnp
mov
add
inc
pop
dec
ss
sbb
mov
inc
cwtl
testl
add
pop
loopne
lret
inc
add
pop
mov
add
adc
push
mov
add
push
pop
jl
sti
xchg
imul
add
sbb
xchg
int
jmp
pop
lret
mov
fists
fildl
inc
adc
je
shlb
rcrl
or
out
jl
add
mov
and
lea
fs
pop
popa
pop
jle
loope
pop
imul
int3
add
shlb
cld
jp
cmp
subl
stos
int
pusha
inc
cwtl
out
cwtl
sahf
add
mov
mov
add
ret
xchg
lret
add
mov
add
cmp
sbb
sbb
rcl
icebp
jecxz
and
push
in
mov
flds
testb
xchg
lret
cwtl
adc
add
and
add
inc
cmp
jecxz
add
ss
mulb
sbb
inc
pop
add
xchg
enter
pop
movl
add
inc
aam
imul
arpl
add
stos
outsb
push
add
fcoml
fcoms
lret
adc
jns
pop
fistps
mov
mov
mov
lcall
add
imul
sub
insl
repnz
pusha
scas
and
xchg
in
jecxz
add
aaa
cld
xor
xorb
lcall
sbbb
mov
cmp
inc
or
test
inc
ret
add
adc
sbb
inc
ds
dec
into
add
data16
push
and
nop
add
shr
inc
out
jg
cmp
repz
loopne
mov
add
sbb
les
add
ss
push
and
xchg
xor
mov
add
dec
jmp
jbe
add
mov
xlat
in
add
and
aam
mov
jo
ja
das
loopne
rcrl
stos
dec
outsb
cmp
cmpsb
shll
ficompl
aam
add
sbb
andb
out
pop
hlt
mov
add
add
outsl
xor
pop
jno
mov
popa
push
loopne
cmc
add
pushl
inc
dec
in
push
push
pop
jnp
into
sbb
and
xchg
leave
mov
mov
push
or
les
push
testb
push
add
addr16
inc
jmp
es
int
mov
call
dec
stos
sti
cmp
push
orb
repz
out
add
nop
das
jae
add
mov
popf
or
mov
xor
sub
add
ss
cmp
loope
ljmp
fiadds
clc
adcb
and
sub
push
pop
pop
inc
add
js
add
fdivr
add
stos
in
pop
inc
sbbb
push
cmp
mov
popa
adc
sti
inc
int3
repnz
adc
push
push
add
mov
xchg
jg
add
dec
sbb
inc
mov
push
and
add
mov
lds
dec
cmp
cld
mov
lods
jecxz
mov
clc
movsl
mov
mov
mov
cmpsl
mov
sub
cmp
cmp
adc
pushf
int3
mov
add
out
lret
jno
push
testl
mov
sbb
cmp
fdiv
xlat
pushf
mov
cmpl
in
mov
jle
jno
aas
and
ja
push
sbb
jmp
cmpsl
lock
pop
add
aad
adc
fsubr
and
inc
add
pop
jae
add
jo
xrelease
stos
push
rolb
cmp
xor
xchg
cli
lea
in
sbb
movsl
mov
or
and
cmp
push
mov
sub
roll
in
fmuls
or
sbb
cmp
lret
in
push
fidivrs
add
push
and
roll
int
stc
xor
pop
cld
push
pop
add
push
mov
or
mov
adc
add
or
xor
lods
cld
mov
shll
sub
or
daa
ljmp
pusha
movsl
fdivrl
shlb
sti
popa
xor
adc
filds
add
add
flds
pop
add
or
cld
mov
out
daa
je
roll
sub
push
add
outsl
sti
inc
inc
jmp
stos
repz
mov
cltd
fwait
rol
pop
in
cmp
shlb
add
jg
cmp
mov
mov
js
je
or
add
std
inc
icebp
mov
mov
mov
add
jmp
jle
dec
cld
stos
pop
push
mov
mov
popf
xchg
imul
sub
pop
cli
arpl
cmp
fdiv
add
rol
leave
add
std
adc
jo
mov
sbb
shl
rcrl
pop
xor
pushf
scas
cmp
add
inc
cld
and
fcomps
pop
es
xor
imul
add
push
nop
pop
add
fisttps
inc
adc
rolb
jp
fsubr
sub
and
add
ret
add
xchg
jo
ljmp
add
fcmovne
shll
fadds
jge
fidivs
jecxz
add
sub
pusha
pushf
push
adc
xor
add
ss
hlt
jae
fsub
cld
subb
cmp
xchg
mov
orb
cmp
sub
inc
mov
orb
testl
shrb
add
outsb
lods
loop
mov
sbb
movb
and
cld
jno
adc
bound
repz
inc
mov
data16
adcb
jecxz
jge
lea
adcl
mov
mov
cmp
cwtl
adc
push
pop
xchg
push
push
clc
jle
jnp
pop
push
aam
addb
in
adc
mov
inc
sbb
mov
mov
xchg
in
sub
stc
pusha
sub
sub
sbb
icebp
xorl
mov
mov
fsubs
mov
testl
adc
jmp
jp
push
mov
mov
adc
cs
add
nop
ret
mov
call
add
jp
jb
or
inc
pop
or
add
and
push
push
pop
mov
movsb
sub
add
imul
cltd
add
int3
imull
add
es
addb
jecxz
xor
jl
addl
add
or
icebp
js
fwait
push
jno
mov
adc
jo
rcr
ljmp
mov
cwtl
dec
inc
mov
adc
xor
mov
add
cmp
jb
and
in
or
and
dec
adc
xor
fidivrl
mov
jle
fldt
mov
add
or
mov
je
out
into
add
pop
pop
sub
cmc
adc
stos
add
xchg
pop
sub
inc
loop
jg
add
in
mov
inc
in
in
sbb
and
aas
add
into
inc
stos
add
push
mov
rolb
loope
dec
cltd
fidivrs
insl
addb
outsl
mov
movsb
js
mov
arpl
ds
sub
aaa
push
or
nop
fsubl
mov
pushf
mov
dec
fs
cli
or
cltd
mov
adcb
lds
sbb
ss
addb
pusha
push
mov
sbb
cmp
lahf
add
sbb
inc
add
cmp
add
cltd
ljmp
inc
cmp
add
nop
jl
fiaddl
mov
push
add
test
je
xchg
mov
push
add
popl
or
adc
or
jl
jge
and
mov
dec
add
cmp
or
outsb
adc
and
push
aaa
add
add
imul
aas
int3
outsl
cmpb
adc
les
xchg
cmp
dec
cmp
inc
cmpsb
pusha
inc
lock
shl
and
es
push
add
jne
rolb
sahf
mov
adc
pop
into
add
loop
in
cmp
lret
cmp
add
mov
pushl
mov
xchg
and
das
mov
dec
inc
roll
aad
cltd
in
and
add
push
pop
ficompl
cvtdq2ps
lds
int
adc
adc
fldcw
add
es
mov
fidivrs
cmp
push
ret
pop
es
add
in
in
or
add
add
gs
pop
ja
cmp
add
and
inc
xor
adc
bound
mov
and
cmp
test
or
push
inc
js
sahf
ds
and
add
push
enter
add
pop
xchg
and
mov
add
lcall
in
add
adc
pop
jo
stos
fsubp
add
fwait
pmulhw
pop
lock
fistpll
mov
nop
xchg
in
add
adc
fsts
neg
fisttpl
pop
gs
rorl
ss
push
add
int
scas
adcl
jbe
movsb
imul
cmp
cmpsb
add
jae
inc
mov
jl
daa
movsb
shr
push
xor
nop
loopne,pt
test
std
lock
jbe
movsb
add
lcall
decb
adc
inc
dec
and
jns
cmp
jo
mov
fidivl
mov
jg
pop
mov
jne
and
aam
add
in
rorl
nop
sbb
adc
ds
insb
push
mov
mov
out
test
add
daa
je
scas
les
mov
pop
dec
add
pop
cli
fcomps
sbb
loopne
mov
mov
orb
gs
add
inc
call
add
xchg
rorl
xor
add
cmpb
sarl
add
jae
add
imul
mov
incb
sbb
testl
lahf
shrl
dec
popf
jae
mov
setl
addb
cmp
outsb
add
pop
jb
jns
das
call
shll
in
inc
fdivs
cli
sbb
add
jnp
mov
push
ror
mov
xor
ret
test
incl
add
xchg
rolb
mov
loop
inc
rclb
xor
xor
cmc
cmp
popa
pop
lahf
popl
movsb
cmp
inc
scas
imul
stc
sarl
scas
or
mov
int3
or
pop
outsb
and
lods
and
inc
mov
test
inc
jo
lods
insb
fdivrl
loopne
lret
and
dec
and
sub
adc
shlb
add
xchg
imull
fwait
push
rol
add
jge
std
sahf
xchg
sbb
enter
sub
xor
adc
push
dec
or
jg
dec
fcoml
jo
int3
add
in
mov
int3
pop
inc
jp
mov
push
lock
sub
fcompl
loop
add
bound
rorb
lcall
mov
mov
pusha
mulb
cs
cmc
insb
mov
lret
jg
add
dec
mov
inc
loope
mov
sti
andb
cld
mov
lock
arpl
pusha
movsb
sub
out
call
or
pop
sub
loop
pusha
cli
in
xchg
mov
and
inc
and
in
hlt
dec
mov
inc
inc
outsb
xor
jle
add
mov
add
xor
stc
mov
jno
pushf
jb
add
dec
fisttps
mov
out
and
in
jl
sbb
insl
out
fstps
sbb
xchg
add
adc
sub
sti
inc
sbb
inc
ljmp
in
add
mov
cmp
ret
rorl
jo
add
add
xchg
dec
imul
push
cmp
idivl
mov
ss
arpl
jno
push
jge
mov
mov
add
ljmp
inc
int3
test
cmp
mov
test
insl
jo
mov
inc
xlat
add
sbb
test
pop
ret
das
stos
mov
int3
hlt
out
call
jbe
fmull
or
cwtl
mov
gs
jecxz
sub
sbb
xor
jge
js
rcrl
fnsave
sbb
aaa
add
mov
mov
lret
or
sub
xchg
sub
arpl
xchg
es
rcrb
loopne
in
xor
hlt
ljmp
data16
icebp
inc
mov
xchg
add
jo
push
cmovge
imul
js
bound
pop
xchg
jp
sub
lock
add
inc
orb
sbb
jnp
add
pop
cli
ficoml
mov
call
mov
add
rcpps
xchg
aad
test
add
fs
jbe
repnz
fisubl
pop
add
push
mov
sub
add
in
jno
jnp
xlat
hlt
out
add
sub
add
loopne
push
mov
in
jno
add
add
dec
frstor
loope
sub
scas
fdivl
xchg
mov
xor
dec
add
xchg
popf
sarb
mov
jge
sbb
mov
and
ss
daa
xor
xor
sbb
repz
cmpb
jg
mov
rcl
addr16
push
or
lds
js
add
add
xor
cmp
aaa
fyl2x
incl
es
out
sar
bound
jle
clc
add
jae
mov
movsb
and
lds
aam
cmpb
imul
nop
shlb
mov
addb
ljmp
xchg
add
xchg
loop
add
push
test
cmp
inc
sbbl
jns
adc
fisubl
or
call
pop
ss
jmp
adc
ret
fcomps
cwtl
ret
mov
dec
pop
aad
xchg
stos
std
in
shl
mov
add
push
xchg
sub
xor
add
sbb
and
add
shrb
lds
enter
or
mov
push
sbb
hlt
jo
bound
loopne
test
cmp
jnp
jo
dec
repnz
lods
jle
hlt
lea
cs
not
js
clc
add
jg
mov
lea
dec
rcrb
cmp
jmp
out
call
add
mov
les
xor
int3
xor
and
dec
or
jge
nop
sbb
data16
cmpsb
inc
xor
cltd
addb
nop
add
cwtl
cmp
jle
ljmp
inc
fsubl
push
in
ja
iret
lcall
pop
jb
mov
into
insb
add
xor
js
push
pop
and
inc
loopne
lcall
ljmp
add
and
mov
jbe
pop
adc
rorl
jge,pn
mov
mov
adc
negl
mov
add
sbb
pusha
adc
lret
inc
fcoml
outsl
add
add
mov
bound
ljmp
sub
in
out
clc
adc
inc
popl
xchg
icebp
xchg
sub
jle
xor
cltd
and
xor
add
mov
cmc
or
addb
imull
movswl
lock
add
lret
or
or
scas
into
outsb
hlt
xlat
add
lods
out
cmpsb
xor
leave
jmp
nop
shrl
or
movsb
add
mov
cmp
add
pop
mov
add
mov
sbb
xchg
nop
xor
dec
in
incl
mov
xchg
push
or
adcb
jge
cmp
adc
pushf
pop
mov
repz
add
lea
in
sub
loopne
ret
leave
enter
jp
js
fimuls
jecxz
ret
int3
addb
sgdtl
insl
push
fsts
stc
loope
fisubrl
or
jmp
fcoms
pop
mov
int
and
out
movsb
mov
mov
aas
test
sbb
adc
cmp
push
dec
xlat
add
sti
mov
lret
mov
xchg
mov
add
lahf
adc
push
xchg
roll
mov
cmp
icebp
ljmp
loopne
aaa
add
lahf
rcl
xor
xchg
dec
lcall
xchg
lret
test
cmp
jmp
add
dec
scas
imul
cmp
rcl
arpl
jmp
push
lcall
cld
jns
pop
dec
xchg
es
mov
vmovmskps
push
sbb
test
ret
stc
adc
int3
int
out
negb
pop
push
lock
cmc
xor
subl
mov
repnz
jl
add
jg
sbb
jae
cmp
and
adcb
insb
inc
mov
or
or
or
data16
in
xchg
lahf
add
jmp
push
jecxz
sbb
aaa
add
sub
andb
ljmp
add
mov
mov
xchg
jns
jp
rorl
cmp
pop
sub
jecxz
add
push
pop
xchg
xlat
push
pusha
mov
or
lahf
rcrl
adc
mov
cmp
addr16
movsb
mov
clc
lds
test
ss
add
insl
ret
xchg
add
xor
sub
enter
in
sub
lahf
inc
push
jnp
addb
div
cmp
inc
mov
loopne
add
mov
fld
add
mov
mov
xchg
mov
inc
add
mov
jno
and
lea
mov
rcrl
sbb
fmul
mov
loope
cmp
add
pop
nop
xor
pop
orb
mov
sarb
pop
sub
outsl
jnp
dec
lds
enter
mov
push
dec
in
out
and
pusha
adc
int3
add
and
pop
jbe
rcrb
push
mov
push
add
test
inc
fldenv
sbb
mov
inc
sub
sub
jmp
out
add
fbld
or
jno
sbb
cmp
fdivs
in
or
add
mov
hlt
sub
sub
cmp
and
sbb
add
jbe
xor
dec
push
add
dec
mov
movsl
push
bound
xor
inc
jo
xor
push
pop
xchg
inc
rcrb
add
mov
and
mov
dec
sbb
push
pushf
add
mov
dec
neg
or
andb
sbb
xor
adc
and
inc
add
das
iret
js
mov
add
sub
mov
add
adc
inc
add
push
push
push
sahf
shrl
call
xchg
mov
add
inc
arpl
push
or
sub
loop
pusha
in
in
add
aas
lahf
or
mov
cmp
or
in
fstpl
lods
inc
test
jbe
xorb
add
fnstcw
pop
dec
xor
xorb
mov
fisttpl
xchg
jne
testl
outsl
jae
jg
icebp
or
or
push
loopne
push
ljmp
std
sarb
hlt
and
mov
mov
sub
outsb
xchg
pop
sub
or
push
sbb
ficomps
add
xchg
js
add
adc
test
sub
pop
pop
incb
lea
roll
xor
popa
fstpl
pushf
xlat
jo
sarl
push
mov
aad
dec
add
std
mov
add
mov
and
dec
out
ret
repnz
dec
add
loopne
dec
into
loop
add
xlat
pop
sbbb
inc
add
repnz
adcl
bswap
rorb
dec
fisubrs
add
imulb
push
or
lret
mov
sub
add
in
ret
add
nop
cmc
loopne
fldenv
mov
int
mov
jl
out
lahf
iret
js
sti
shrl
testb
mov
dec
pop
leave
jecxz
inc
jb
out
aad
or
into
or
add
out
in
test
mov
fwait
mov
sbb
sti
lock
add
sarl
cmp
add
movsl
fdivr
enter
icebp
xchg
nop
out
xchg
sahf
add
hlt
scas
jno
insb
mov
mov
fwait
mov
cld
lahf
stos
lods
mov
iret
into
sahf
push
mov
jecxz
xchg
sub
xchg
or
cli
mov
sub
add
cwtl
iret
and
sahf
push
rclb
jae
test
into
out
mov
mov
bswap
xchg
lcall
mov
xchg
out
push
cli
and
movsb
addr16
jg
call
xchg
mov
pusha
add
ret
clc
js
test
int3
jmp
and
stos
insl
inc
push
cli
hlt
sahf
nop
or
testb
fdiv
cltd
mov
jmp
xchg
cwtl
xorb
je
lock
pop
sarb
dec
adc
mov
or
scas
add
hlt
lcall
or
dec
stc
icebp
add
sbb
stos
aad
add
cli
icebp
inc
les
cmp
jb
sbb
add
hlt
test
jb
rorl
lret
sbb
adcl
insl
dec
or
xor
andl
xchg
jmp
or
pop
clc
jnp
mov
out
test
jecxz
pushf
sbb
lock
nop
iret
xchg
lock
add
call
xlat
mov
iret
adc
rclb
dec
add
lret
movsl
fidivrl
fiadds
fists
lahf
jmp
adc
dec
stos
dec
adc
mov
mov
stos
jo
enter
mov
or
adc
out
add
js
xchg
popa
sbb
icebp
pop
cmpsl
xchg
les
mov
and
stos
sbb
mov
std
cmp
jo
mov
enter
js
push
sub
inc
sub
test
movsl
lahf
ficoms
xchg
movsb
hlt
mov
sar
xchg
xor
sub
mov
cmp
call
xor
xchg
testb
jo
xchg
mov
scas
pushf
les
call
dec
mov
sub
mov
push
flds
and
cmp
clc
mov
mov
fistps
jo
add
mov
pop
push
pop
sti
mov
push
add
jp
jno
cld
adc
ret
and
outsl
dec
and
jbe
xchg
loop
cmpsb
pop
push
inc
test
jmp
xor
xchg
jnp
inc
mov
sbb
xor
js
sub
cmp
add
xor
push
jg
imul
inc
fwait
cmp
xchg
inc
loopne
xchg
cmpsl
jp
adc
push
stos
loop
dec
shrl
mov
scas
and
dec
call
and
xchg
push
lods
sub
lea
fadds
xlat
jl
sub
pop
adc
xor
push
mov
mov
push
adc
mov
mov
jle
xchg
xchg
stos
ret
subb
mov
icebp
or
jbe
cmc
push
repz
add
ret
mov
pop
subl
pcmpeqd
push
cmp
xchg
sub
enter
mov
mov
pop
push
inc
jmp
mov
enter
sbb
xchg
and
adc
mov
xchg
and
or
idivb
sbb
xchg
and
sbb
xor
or
cmp
lcall
imulb
jle
and
popa
xchg
inc
cmp
push
lods
stos
imul
sub
fsubp
loope
test
mov
or
sub
cmp
xor
push
dec
jbe
popa
sarl
add
sub
mov
or
ret
fs
mov
jle
jo
mov
dec
int
std
add
xor
arpl
outsb
inc
stc
subl
and
jp
out
out
cmpsb
xor
add
js
ret
inc
das
jae
and
popf
inc
inc
pop
incb
das
or
loopne
and
dec
mov
std
movsl
pop
dec
popa
lret
jae
cmp
testl
or
add
add
testl
push
mov
adc
test
std
push
clc
add
add
flds
push
stc
sbb
cmpsb
cwtl
cmp
add
lret
inc
in
or
mov
inc
or
pop
rcl
arpl
add
and
in
stos
xor
push
js
ret
mov
and
cmp
xchg
mov
imul
xor
add
fstl
pop
cmpb
and
or
push
ss
add
lea
mov
jge
add
pop
and
lods
in
add
test
xor
xor
pushl
xor
out
scas
push
lret
add
mov
add
idiv
adc
bnd
sub
cwtl
clc
jp
rcl
enter
pop
cmpsb
push
adc
sub
or
lods
xchg
fiadds
mov
sub
shl
and
inc
enter
add
mov
mov
bound
adc
cld
dec
jl
adc
push
dec
dec
xchg
es
add
orb
jmp
pop
pushf
adc
pop
lods
insb
cwtl
or
mov
adc
add
lret
pop
sbb
mov
ljmp
bound
pop
jns
and
mov
lods
lcall
sub
test
xchg
nop
or
and
test
xchg
sarb
mov
lahf
xor
mov
sub
stos
sub
xor
dec
orb
inc
mov
push
push
shlb
das
loopne
sub
mov
cmp
push
hlt
dec
and
testl
or
outsl
xchg
xor
push
scas
insb
adc
jl
add
shrb
push
xchg
dec
jecxz
and
lods
xor
lret
or
sub
sub
xor
and
mov
lcall
mov
dec
mov
push
outsb
test
add
pop
jb
or
xor
data16
js
xchg
add
je
cmp
shl
insb
xor
lea
pop
inc
icebp
or
xchg
cmp
imul
jne
mov
loop
sbb
mov
cld
test
shlb
dec
add
inc
dec
add
inc
adc
jb
xchg
and
and
int3
scas
les
cltd
inc
cmp
addl
pop
call
inc
add
outsb
gs
das
xchg
imul
cwtl
jl
mov
or
loopne
sub
scas
mov
jl
push
testl
xchg
jo
test
jl
into
push
mov
xchg
cmc
jae
or
mov
cwtl
or
out
and
mov
mov
jno
in
je
out
pavgb
xor
and
cmp
decl
adc
xchg
jge
pop
xchg
add
stos
mov
jl
sub
lods
xchg
ljmp
mull
mov
scas
and
sub
ret
pop
and
pop
xchg
aam
push
mov
xor
or
push
notb
and
adc
push
in
pop
cmp
xor
das
mov
xor
push
fdivrl
sbb
inc
push
jge
jno
or
xchg
stos
ret
roll
or
dec
cld
scas
mov
sub
or
mov
sub
mov
mov
mov
lock
mov
movaps
arpl
lock
adc
push
jae
into
push
mov
andl
add
push
mov
xor
out
jbe
xor
outsb
inc
pop
lock
test
push
sbb
cmp
mov
aam
loop,pn
lds
aad
jmp
cld
iret
jno
cmp
lahf
nopl
adc
stos
and
fadds
push
int
adc
lahf
push
mov
sbb
mov
push
inc
out
fmull
aam
push
push
sbbb
int3
jecxz
nop
out
test
add
movsl
push
repnz
sub
fimuls
test
and
add
pop
push
and
xchg
add
inc
lret
xorl
and
loope
iret
xchg
outsl
push
cmp
iret
push
in
dec
pushf
orb
dec
pop
push
adc
dec
pop
stos
push
sahf
mov
andl
pushf
les
pop
add
dec
lods
add
insb
push
faddl
fsub
je
bound
xchg
popa
add
hlt
xor
xchg
inc
push
daa
ror
pop
push
push
cmc
test
cmp
or
push
mov
push
in
loopne
pop
and
ds
or
xchg
clc
cmpsb
shll
xor
push
push
xor
jns
sub
and
cmpsb
shrl
jmp
dec
xor
lock
fistps
inc
inc
jmp
sub
rclb
xchg
push
add
and
pop
pop
push
int
fcomps
inc
mov
push
inc
dec
jmp
and
dec
cmpsb
push
pop
leave
inc
dec
pop
rclb
rorb
pop
fbld
add
sbb
arpl
pop
cmovs
loop
add
push
or
push
fadd
and
add
dec
mov
add
inc
or
pop
rcl
mov
nop
int
dec
lock
and
add
xchg
pop
pop
outsl
inc
imul
fiaddl
or
push
int3
mov
jmp
sbb
adc
sub
clc
mov
inc
xor
push
add
lods
mov
add
sub
jo
addl
sub
lods
cli
lods
pushf
xor
mov
icebp
nop
cltd
cmpsb
test
xchg
adc
mov
orl
arpl
or
xchg
jecxz
sub
ja
out
or
inc
dec
sbb
cmpsb
pop
mov
les
test
lret
inc
mov
sbb
and
mov
cmpsb
leave
test
xor
or
mov
adc
push
cs
jecxz
and
sahf
pushf
and
adc
fstpl
iret
pusha
mov
pop
pop
xchg
mov
xlat
popa
pusha
sbb
xchg
push
aam
lock
inc
cmc
dec
fcompl
daa
cmp
mov
aam
dec
pop
or
jno
add
cmp
jne
inc
or
call
mov
icebp
stc
push
mov
pop
and
or
addr16
outsb
or
dec
dec
lock
xchg
sbb
mov
and
int3
test
ss
xor
add
data16
adc
push
inc
addr16
mov
test
pop
data16
loopne
pop
or
xor
adc
out
inc
outsb
les
call
mov
loopne
pop
pop
pop
rorb
lock
push
add
push
or
inc
jge
sbb
xor
adc
xchg
movl
or
push
incb
rolb
and
or
and
pop
cs
or
dec
adc
and
jmp
inc
scas
push
rorb
sub
rcr
mov
mov
jbe
lods
cmpsb
push
loope
inc
addr16
xor
das
sbb
push
mov
push
nop
add
mov
mov
inc
xor
pop
shlb
lret
movsb
xchg
mov
mov
movl
xchg
movsb
xchg
cmp
mov
xchg
bound
call
and
and
fidivl
mov
dec
or
test
jp
adc
adc
nop
or
lock
sub
add
pusha
push
and
dec
dec
xor
inc
mov
push
xor
cwtl
jg
and
icebp
loopne
shr
cmp
movl
fsubs
sbb
sub
jae
push
das
outsl
xor
and
or
pop
pusha
or
fwait
jp
sub
xor
push
fs
inc
mov
pop
out
xchg
inc
adc
and
stc
fdiv
inc
xor
xor
lock
jl
test
cmp
call
push
inc
adcl
dec
in
pusha
addb
dec
cmp
inc
mov
mov
add
enter
adc
lret
in
nop
push
push
ljmp
nop
sar
pop
orb
aad
lock
int
into
xorl
ret
sbb
mov
fiadds
shr
dec
mov
push
inc
clc
jo
rolb
test
mov
fwait
dec
sbb
pop
stc
shlb
push
sbb
adc
push
movsb
push
pop
insb
test
push
dec
xor
inc
push
adc
repnz
test
xchg
mov
bound
sbb
dec
push
pop
stos
xchg
add
rorb
lock
mov
dec
mov
lret
cmp
inc
shll
pushf
and
outsl
test
js
adc
xchg
push
jne
pushf
adc
xchg
mov
pop
gs
push
nop
sbb
jo
push
inc
xchg
or
lea
scas
adc
xchg
dec
push
shrb
inc
xchg
inc
jge
adc
or
sbb
pop
mov
bound
sbb
sub
xor
mov
out
sbb
pop
xchg
mov
addr16
push
pop
inc
or
in
jg
aad
icebp
sub
sbb
rclb
push
ja
and
mov
mov
inc
enter
and
push
pop
jns
mov
leave
jns
adc
adc
mov
inc
loope
ljmp
je
test
push
xorb
mov
es
mov
sbb
and
ret
adc
icebp
jae
and
or
mov
roll
adc
test
addr16
les
mov
dec
rclb
dec
inc
sub
iret
push
out
mov
cwtl
ss
push
cmc
dec
xchg
addr16
aam
xor
and
bound
inc
and
cmpsl
ja
test
cmp
fsubrs
scas
pop
stos
push
push
push
outsb
xor
xor
in
sub
ds
and
jg
inc
sbb
sbb
sub
cld
or
fsubrs
fwait
popa
movsb
and
addr16
adc
cwtl
jp
nop
inc
and
repz
jmp
fiaddl
or
sbb
pop
sub
and
jg
incb
inc
sbb
loope
dec
dec
mov
sub
iret
jbe
test
das
mov
and
out
mov
cmc
add
mov
add
leave
mov
pushf
daa
insl
jg
js
or
icebp
sub
lods
cmp
addb
sahf
and
andb
test
xchg
or
ljmp
add
and
pop
ret
out
sbb
and
pop
add
sub
add
push
add
scas
mov
pop
push
insb
sbb
repnz
nop
or
in
and
movsl
xchg
inc
pop
lea
push
push
add
test
pusha
wrmsr
out
std
mov
mov
mov
sarb
inc
jl
sub
add
mov
push
scas
sbb
mov
inc
out
push
mov
or
lods
jo
mov
jb
movsb
scas
icebp
add
xchg
and
sub
fsubr
dec
call
call
fnstenv
cltd
jge
cmp
cmp
jmp
mov
dec
cmp
imul
sbb
rclb
insl
sub
into
outsl
in
inc
adc
sarb
add
xchg
and
add
cmp
mov
shl
sti
popa
add
dec
xor
inc
shll
pop
push
jbe
add
enter
popf
jno
in
pop
lahf
aad
lcall
cli
xchg
add
mov
xchg
xor
and
dec
push
fistpl
sbb
js
testb
or
jl
inc
jmp
mov
mov
mov
dec
xor
outsl
clc
repz
push
int3
mov
add
xor
ret
adc
add
dec
dec
mov
mov
jmp
flds
pop
enter
inc
call
faddl
jns
pop
inc
repnz
or
int3
xchg
xchg
adc
sbb
adc
or
and
pop
add
mov
jb
ja
jae
inc
mov
test
push
xchg
pop
dec
test
mov
add
sbb
cmc
or
andb
hlt
xchg
jno
sbb
xor
jg
cmp
dec
add
mov
mov
xor
adc
add
xor
out
scas
push
mov
dec
or
out
sbb
and
sub
into
add
repz
outsb
push
cmpsb
xchg
push
add
out
xchg
jb
lods
in
pop
add
imul
add
aad
pop
pusha
jle
out
sub
into
push
sbb
fst
faddl
jnp
mov
mov
fcomps
fldt
fidivrs
out
push
jne
pop
rcr
inc
outsb
clc
sahf
sub
je
sub
mov
mov
repnz
aad
push
xor
inc
loopne
xchg
repz
push
imul
mov
icebp
xchg
sbb
loopne
or
das
test
mov
and
adc
ljmp
cmp
push
push
popf
and
jmp
jnp
pop
addb
pusha
xor
push
push
adc
xor
orb
test
ret
fs
inc
mov
and
xor
in
mov
sub
adc
add
aad
in
sbb
jno
adcl
ja
call
xchg
loopne
mov
xor
add
imul
loopne
xchg
scas
addr16
mov
jns
xchg
or
je
stos
aad
cltd
xchg
jbe
hlt
push
mov
loop
lods
add
push
pop
adc
aam
imul
das
pop
shlb
mov
lock
cli
call
push
pop
or
aam
shlb
sti
mov
push
mov
testl
mov
shlb
or
sbb
xor
push
insl
rorl
scas
in
loope
xchg
xchg
adc
xor
rorl
sbb
mov
push
les
push
or
jl
repz
push
sbb
popf
pushf
cmp
or
mov
aam
fcoms
xor
xchg
inc
push
jp
lds
insb
inc
inc
cld
and
xor
mov
xor
inc
xchg
or
xchg
adc
adc
clc
cmp
test
ret
jns
inc
in
pusha
adc
lcall
pop
mov
and
pusha
inc
sahf
cld
mov
popa
pusha
jbe
jle
fidivl
cwtl
adc
and
inc
add
lods
test
pusha
sbb
mov
outsl
mov
inc
mov
and
and
cld
stos
movsl
rorb
push
fs
mov
push
aaa
stc
popf
movsb
les
shr
adcl
arpl
add
ljmp
mov
roll
cmp
xchg
insb
scas
add
cmp
mov
inc
subb
or
adc
cs
and
gs
push
inc
shrb
xchg
inc
or
data16
lret
js
cmp
int
clc
ja
subl
ficoms
mov
pushf
jbe
push
sbb
add
in
dec
xor
aam
lds
sbb
out
pop
xchg
loop
leave
inc
fwait
or
fistps
iret
ds
std
loope
shlb
vpsubw
add
inc
mov
hlt
aas
dec
mov
mov
xchg
xlat
adc
push
xchg
scas
cmp
fisubrl
mov
xchg
cmp
out
dec
mov
and
jge
and
nop
clc
je
mov
popa
pop
pop
fs
and
xchg
arpl
or
adc
sbb
popa
or
dec
pop
roll
orb
jle
push
leave
hlt
push
push
inc
cmp
xor
push
movb
jb
call
and
push
mov
inc
ja
test
dec
cs
bound
nop
and
jo
mov
mov
mov
jmp
cmpsl
add
xchg
bound
add
mov
mov
dec
cmp
or
mov
hlt
ret
pop
mov
pop
jnp
mov
repnz
add
push
cmp
mov
dec
icebp
add
inc
and
ljmp
sbb
jle
or
xchg
lret
iret
dec
mov
hlt
pop
lea
shll
mov
mov
sarb
mov
mov
inc
adc
lret
mov
pusha
mov
adc
pop
cmpl
outsb
or
inc
movsl
test
inc
test
pop
adc
adc
and
or
xchg
lea
jge
mov
pop
inc
pop
ds
fiadds
adc
mov
pop
sti
inc
adc
mov
movsl
jns
pop
cmpsb
add
push
inc
loopne
enter
jl
cmp
xchg
fmull
cmpl
std
cs
jbe
jbe
add
cmp
dec
lcall
pop
fdivl
sbb
rorl
pop
xchg
cli
nop
pusha
mov
dec
mov
push
xchg
add
sub
add
jle
adc
dec
or
testb
clc
mov
incb
and
pop
cmp
sub
push
add
jbe
add
mov
icebp
in
enter
jecxz
mov
inc
jo
add
sarb
add
loopne
imul
loop
dec
enter
xchg
jne
add
rcrl
out
ds
ljmp
dec
add
dec
clc
lcall
arpl
cli
mov
je
xchg
jl
adc
movsl
jbe
lret
dec
mov
subb
add
filds
cmp
sub
dec
in
arpl
into
popa
pop
add
dec
xchg
cwtl
xchg
cmp
add
out
adc
push
add
mov
ljmp
sbb
nop
add
movsb
xchg
arpl
add
dec
jbe
dec
aad
cwtl
jne
cli
lea
adc
or
clc
jne
add
pushf
cmpsl
xor
pop
xchg
je
jmp
bsf
ljmp
out
fs
pop
add
jmp
and
hlt
inc
fldl
andl
in
pop
lock
sahf
jbe
add
sarb
loop
imul
push
inc
and
icebp
push
enter
xor
cwtl
cmp
cmovs
cwtl
adcb
subl
jge
mov
pop
sbb
mov
adc
aaa
imul
lock
adc
lea
cmpsb
fnsave
push
sub
add
mov
mov
cmp
mov
movups
cmc
inc
or
and
add
sbb
popl
pop
mov
sub
fmull
add
stos
sub
out
outsl
add
nop
xor
add
aaa
push
pop
lret
xchg
js
lock
xchg
add
pop
rolb
jmp
inc
cmp
jo
pushl
xor
push
int
or
iret
jb
or
sbb
loopne
cmp
jno
add
jg
pop
popf
mov
add
inc
mov
or
inc
adc
add
mov
sub
aad
call
push
sbb
addr16
pop
or
mov
dec
xor
pop
loope
inc
dec
sbb
cmp
xor
adc
insb
push
inc
add
ja
sbb
sub
xor
mov
cmp
add
pop
ror
lcall
jecxz
jo
xchg
outsl
add
shrb
jne
add
add
pop
dec
jg
mov
sub
ljmp
mov
lods
or
mov
pop
arpl
push
add
push
fmuls
push
add
leave
lret
clc
inc
fmull
add
les
stc
mul
popa
push
cld
filds
xor
xor
movsl
xor
inc
cmp
addb
sub
mov
sub
jecxz
outsl
dec
mov
add
or
pushl
fucom
cmc
inc
lcall
out
mov
add
rcll
add
mov
mov
fistpl
xchg
pushf
in
test
or
popa
jmp
cmpb
outsl
cmp
rolb
jg
push
aaa
mov
push
mov
les
cmp
loopne
movsl
pop
popa
mov
sbb
adc
sub
dec
mov
addr16
mov
sbb
inc
sti
popa
xor
mov
xchg
or
fs
loope
push
ja
cltd
xchg
filds
sbb
mov
fildll
les
add
add
xchg
ja
cmp
orb
lret
int
cmp
loop
arpl
adc
dec
sarb
scas
or
jge
test
sub
mov
xor
mov
ljmp
add
je
sub
dec
pusha
test
mov
dec
add
mov
stos
add
ljmp
add
loope
xchg
sbb
aam
jle
lret
idivl
jne
ret
js
add
mov
and
loopne
push
call
push
arpl
mov
into
jle
lods
addb
fisubl
mov
push
mov
andb
out
adc
or
add
sbb
pushf
jg
add
sti
adc
add
pop
add
mov
xor
pop
mov
rolb
ror
xchg
cwtl
inc
xchg
lods
cmp
pop
dec
add
ljmp
adc
xlat
xchg
mov
dec
inc
jle
add
add
std
sarl
or
loope
jmp
add
pop
inc
jge
push
arpl
pop
jbe
pop
add
inc
stc
leave
pop
inc
and
add
stos
xor
insb
xchg
test
push
dec
add
shrb
aas
jnp
lret
add
xchg
mov
add
and
loopne
ret
dec
jecxz
cmp
xchg
in
pop
mull
insl
daa
imul
add
mov
push
out
sbb
mov
andl
dec
jbe
std
and
jne
sbb
or
mov
sbb
loopne
add
mov
pop
mov
lahf
rorb
mov
add
loop
or
mov
add
or
inc
rol
pop
repz
mov
aaa
cmp
test
cmp
xorb
add
test
dec
fildll
xor
mov
adc
je
add
pinsrw
pop
xchg
scas
ret
push
add
je
add
not
out
out
cld
nop
sub
repnz
cli
lcall
stos
adc
sbb
into
fldl
cld
xor
imul
mov
scas
xchg
sbb
jbe
gs
jns
add
push
add
ret
pslld
dec
add
stos
aad
pop
xor
daa
sbb
jmp
sub
nop
and
adc
test
mov
add
mov
fldt
push
loope
stc
in
mov
or
add
cwtl
shlb
and
rorl
xchg
mov
add
gs
incl
andb
pop
add
mov
mov
xor
int
xor
inc
mov
out
mov
push
nop
or
push
mov
rolb
fisttps
jns
ret
icebp
and
imul
add
out
incl
or
pop
mov
dec
push
cwtl
add
dec
mov
fldenv
pop
or
or
aad
adc
int3
xchg
leave
aas
mov
adc
and
mov
push
xlat
rolb
mov
add
sub
add
hlt
cli
jle
sarb
test
sbb
push
mull
add
pop
roll
rclb
add
aas
int
cld
cwtl
xchg
dec
sub
xor
mulb
push
flds
push
or
gs
pop
fisubl
pushf
lea
dec
dec
add
in
jge
dec
jb
cld
pop
popa
arpl
xchg
les
mov
push
sahf
mov
popa
jmp
and
xchg
or
out
sub
icebp
sti
movl
cmp
in
lret
arpl
fmull
pop
sub
xor
lcall
cmp
jg
sub
pop
add
mov
data16
dec
cmc
xor
dec
push
cmpb
iret
mov
add
push
les
insb
mov
dec
in
add
fsubrl
add
xchg
mov
pop
sub
xchg
pop
mov
mov
inc
shrb
pop
xchg
in
scas
sbb
iret
or
in
loop
push
insl
xchg
add
inc
push
pusha
push
out
lock
iret
push
cmpsl
mov
data16
sbb
out
fs
add
cmp
xchg
and
sahf
sbb
mov
or
sarl
loope
sbb
cmpb
fcomps
mov
inc
pop
mov
fisubrl
xor
jb
jle
int
add
aam
daa
xorl
add
xchg
rclb
add
nop
sbb
test
and
lret
shlb
ret
add
xchg
lds
add
loop
mov
push
jl
add
pop
xchg
pop
add
mov
add
verr
jmp
jno
add
inc
iret
cmp
xchg
mov
mov
mov
add
daa
shrl
fisttps
inc
mov
and
daa
loopne
push
pop
sbb
lcall
gs
or
repnz
add
mov
scas
lret
aam
mov
mov
out
inc
dec
dec
add
add
cmp
and
add
mov
xor
sub
mov
lock
rcr
ss
xchg
ret
repz
xchg
add
push
lea
icebp
call
mov
fldenv
sub
js
add
cmp
stos
sbb
xor
dec
xor
add
and
pop
in
adc
mov
push
jns
add
pop
push
faddl
fstpt
push
jmp
add
inc
call
fnstsw
loop
loopne
mov
pop
mov
enter
stos
jno
add
je
fdivs
movsl
test
mov
clc
enter
add
xchg
mov
cmp
inc
add
push
in
inc
out
das
aas
cmp
dec
sub
and
sbb
andb
xor
addb
xorb
xchg
add
add
test
mov
mov
out
push
or
add
insl
adc
cld
sub
lret
repz
add
aad
int3
lock
xor
clc
adc
stos
ja
and
sub
mov
push
xor
pop
mov
ja
jle
popf
add
pop
adc
mov
and
nop
dec
sbb
inc
add
adc
ds
or
or
sub
sub
cmp
js
subl
outsb
cld
roll
data16
jmp
push
fisttps
insb
jle
out
pusha
inc
dec
push
pop
and
mov
daa
lret
cmp
jb
xor
sahf
popf
dec
std
mov
cmp
xchg
xchg
push
loope
push
dec
stos
jp
je
and
add
scas
inc
lret
add
adcb
add
fsubr
adc
mov
xor
js
jp
push
cmp
pushf
or
imul
and
mov
ret
xchg
mov
ffreep
sbb
sbb
mov
lret
cmp
lock
sub
pop
cs
aam
out
incl
fadd
xchg
cmpsb
cmp
rolb
std
negb
fistpll
or
lods
addl
out
mov
adc
flds
or
insb
push
pop
jge
clc
testl
push
rorb
lret
imul
mov
loopne
push
add
push
or
test
dec
add
in
add
sbb
push
push
gs
or
fndisi(8087
pop
add
cmp
jo
push
shrl
or
add
shll
cmp
inc
ss
push
add
adc
sub
jg
loopne
add
mov
pop
adc
sahf
insb
adc
add
jno
jmp
push
lods
xor
pop
aad
js
inc
in
adc
subl
push
dec
fdivrl
fildl
and
inc
loope
pusha
aaa
add
jecxz
add
push
and
or
in
add
jmp
insb
std
cmp
cwtl
push
cmp
add
fcmovbe
jo
ds
dec
pop
adc
stos
insb
aaa
cmp
jbe
dec
add
in
lock
fildll
das
push
or
jecxz
sbb
mov
and
adcl
mov
jns
mov
xorl
or
test
rolb
icebp
inc
imul
xchg
aam
dec
cmp
fwait
in
dec
push
ljmp
mov
dec
jmp
add
pop
push
xorb
andnps
movsb
jb
jnp
mov
ja
add
lds
cmp
sub
jp
sbb
leave
push
or
je
add
pop
adc
add
adc
cwtl
ja
add
push
loop
add
pop
andb
rcrb
std
dec
xchg
or
or
call
or
inc
shrb
imul
negl
mov
ja
cli
decb
add
pushf
push
inc
mov
lret
mov
mov
rcll
cmp
sbb
pop
daa
xchg
xchg
movsb
or
test
add
mov
das
sub
sub
dec
xor
or
mov
pop
cli
cmp
xorl
xor
xor
in
inc
adc
pop
sub
jns
sbb
add
cmp
lea
inc
shlb
mov
cmpsb
jg
lcall
les
dec
add
mov
cmp
dec
or
call
insl
sahf
data16
ljmp
jne
std
dec
mov
add
xlat
cs
flds
ds
mov
add
and
jo
adc
add
add
xchg
aas
fwait
pop
push
xchg
data16
or
jo
mov
push
jae
adc
jnp
mov
xor
jae
add
xchg
xor
popa
lea
or
and
mov
hlt
cmp
add
int
and
add
popf
push
sub
sub
gs
out
addr16
add
inc
jmp
xlat
inc
lods
pop
mov
test
and
adc
in
mov
cmp
lea
sub
mov
and
mov
xor
jne
sub
dec
shl
adc
dec
and
sub
shll
inc
lahf
mov
sti
add
pop
pusha
pop
mov
xchg
push
lock
fcomip
pop
in
lret
add
clc
scas
into
mov
xchg
lcall
and
push
mov
cld
jl
inc
int3
add
lods
xor
daa
pop
test
mov
cld
rcpps
loopne
mov
add
adc
mov
lcall
xchg
or
popa
arpl
add
sub
mov
cmp
test
fstl
lret
xchg
into
add
dec
dec
cmp
sbb
dec
push
sbb
adc
inc
shlb
stos
pop
dec
loopne
fistps
hlt
in
es
fcmovbe
cmp
xchg
jl
sub
insl
dec
mov
add
and
enter
mov
jo
add
ret
gs
ljmp
outsb
outsl
int3
aaa
add
enter
push
pop
adc
pop
mov
mov
hlt
fstps
sub
add
mov
and
mov
repz
jne
xorb
pop
stos
ljmp
mov
push
lods
or
add
clc
cmp
mul
xchg
add
test
cmpsl
add
jge
subb
cld
mov
lock
loop
fimuls
inc
xchg
add
xchg
fsts
add
xor
adc
jbe
add
cmp
jno
add
aad
jb
and
sahf
nop
push
add
inc
movsl
movl
mov
sbb
nop
jns
sbb
add
and
push
iret
sub
cmp
fidivl
push
push
int
dec
fidivrs
push
scas
jno
icebp
in
loopne
pop
ret
inc
divb
iret
mov
mov
or
mov
in
mov
dec
xor
aad
mov
sbb
out
cmc
jbe
pop
int3
xchg
in
sub
ffree
xor
add
fwait
jae
add
cmp
bound
aas
push
cli
add
jne
sbb
or
hlt
or
ljmp
movsl
adc
add
add
inc
cltd
jne
xor
adc
pop
xsavec
pusha
sarb
rorb
shrb
mov
jns
adcl
cwtl
adc
repz
lods
inc
adc
jle
incb
fidivl
nop
add
nop
js
into
push
adc
sahf
add
adc
movsb
xlat
or
mov
rorb
lea
test
cli
add
inc
pop
pop
mov
and
xchg
in
out
add
lret
dec
test
scas
pusha
mov
popa
add
imul
or
and
add
stc
dec
fadd
lcall
and
ret
in
scas
clc
pushf
test
add
adc
es
fcmovnbe
andb
add
sahf
jbe
dec
shrb
jmp
push
push
cmpsl
push
xchg
loope,pn
mov
out
clc
lock
add
cmp
int
lret
add
ret
mov
sub
add
dec
add
pop
pop
mov
cmp
xor
push
add
pop
add
mov
cli
pop
jns
dec
pop
mov
int
xchg
shl
mov
or
shlb
xchg
ret
or
sbb
je
sahf
jbe
movsb
xchg
push
mov
pop
push
and
lods
add
into
in
shll
lret
test
pop
xchg
int3
mov
mov
aas
add
add
cmp
ja
fldl
jns
push
outsb
xor
inc
dec
inc
gs
or
ret
call
push
pop
pushf
js
mov
test
pop
add
imul
nop
pop
inc
jbe
add
add
repnz
stos
pop
mov
mov
mov
push
and
jns
into
xchg
arpl
insb
and
cmpl
fcmovnbe
fs
or
sarb
add
aaa
and
inc
add
and
push
shl
dec
lret
push
sbb
insl
add
add
sbb
inc
sub
jl
into
outsb
pmaxub
ret
scas
dec
ja
inc
mov
or
push
push
jmp
lds
repz
and
lods
jo
je
shl
out
out
inc
les
out
add
das
push
sbb
add
add
jecxz
mov
ss
adc
sbb
sub
ljmp
push
jl
stos
hlt
mov
pop
fsubl
lods
test
push
cmp
out
jg
jbe
push
mov
and
adc
add
push
in
add
popa
jg
sub
xorl
or
add
fisubrl
fistl
mov
pop
ja
inc
add
add
sbbb
mov
adc
std
dec
sbb
jno
push
mov
std
cmp
aam
cld
andb
fimull
mov
aaa
push
cmpsl
or
out
fwait
loopne
cmpsb
jbe
pop
nop
int3
add
xor
mov
add
add
sub
add
xor
cli
add
lea
in
dec
sbb
movsl
mov
or
mov
or
push
jmp
push
mov
jb
pushf
fxch
cmpb
or
test
add
dec
sub
rcrb
push
mov
sub
inc
in
add
rol
jae
out
push
cmpsl
cs
lahf
popf
or
andb
pop
mov
push
sbb
mov
mov
jb
mov
add
mov
mov
les
and
add
mov
adc
dec
mov
and
jecxz
add
cmpsb
mov
mov
fsubl
dec
leave
cmpsl
add
cmp
das
add
mov
cmp
add
mov
jp
lcall
xchg
or
leave
push
cmp
mov
add
fisttps
cmpsb
cmp
or
stos
xchg
addr16
add
pop
inc
add
out
add
das
iret
pusha
out
mov
les
lret
scas
push
mov
nop
insl
cmpsl
dec
movsl
les
popa
ret
lret
pop
push
sti
stos
add
das
cmp
xor
sub
test
iret
out
add
pop
sub
sbb
inc
pushf
mov
inc
inc
test
dec
xlat
mov
sub
scas
pop
in
addl
inc
stc
xchg
push
cmp
lcall
jp
and
mov
nop
sbb
xor
pop
repnz
movsl
pop
imul
out
andb
mov
mov
es
andb
into
or
movl
mov
pop
addr16
push
hlt
add
xchg
fisubrl
xor
or
ret
mov
mov
xchg
lock
lcall
mov
xchg
jl
jle
jle
inc
sbb
in
xchg
callw
and
adc
dec
or
lds
mov
mov
jb
add
shll
dec
aad
or
and
out
es
or
xchg
sbb
sub
push
push
hlt
cld
icebp
cli
cmovl
pop
mov
mov
repnz
outsb
or
stos
shlb
std
lock
into
add
inc
xchg
xor
ret
add
pop
lds
sub
push
ds
sbb
add
xchg
ret
adc
sub
nop
pop
test
ss
add
xor
js
or
fsubr
sahf
add
mov
dec
std
ret
adc
inc
push
pop
add
adc
insb
dec
imull
sbb
mov
outsb
rolb
mov
sub
ret
mov
popa
add
sbb
jbe
scas
mov
fidivs
and
dec
add
outsl
pop
add
xor
adc
fnstenv
leave
je
std
mulb
mov
cmp
loop
cmc
outsl
xor
pop
inc
add
insl
add
xor
sub
fstpt
test
pop
aad
int3
mov
xchg
out
loopne
sub
imul
add
add
inc
dec
repz
add
in
jbe
loopne
dec
inc
ficoml
push
xor
std
pop
jno
jb
push
pop
stos
pop
nop
dec
mov
mov
pop
inc
push
mov
loopne
cmp
mov
stc
rcll
mov
aaa
adc
mov
sarb
daa
or
add
sbb
add
fs
mov
das
lock
pop
pop
daa
fstpl
mov
sbb
adc
stc
add
mov
insl
call
fcoms
popf
sbb
mov
in
loopne
fs
cmp
or
add
mov
inc
mov
and
nop
cwtl
push
add
pop
adc
movsl
pop
add
mov
jne
jae
mov
cmp
push
cmp
jnp
xchg
mov
mov
add
jge
fldl
pusha
xor
push
and
lods
leave
fwait
adc
mov
push
jle
int
gs
pop
fmuls
dec
lock
jbe
sbb
cld
xor
subb
xor
xchg
inc
or
cmp
pushf
mov
mov
add
out
loope
inc
push
test
jg
mov
add
int3
in
and
rcrb
sbb
data16
xorl
adcb
mov
mov
js
pop
add
xor
dec
add
add
xchg
test
lock
xor
cmpsl
mov
aaa
add
push
or
loopne
inc
nop
stos
pop
popf
out
add
pop
add
jl
jge
inc
aad
nop
push
addr16
xlat
js
add
mov
inc
add
sub
xchg
je
ret
das
inc
mov
or
cmpb
add
cli
mov
dec
shrb
and
xchg
add
or
faddl
js
sarb
movsb
sbb
jo
add
mov
mov
cltd
imul
xchg
in
mov
adc
add
push
push
mov
mov
daa
imul
sub
adc
xor
mov
mov
into
sahf
aas
xlat
xor
add
pusha
pop
inc
dec
jge
mov
pop
mov
dec
xchg
mov
fnstenv
sub
add
shlb
sub
popa
push
adc
fdivrl
loop
rcll
iret
inc
add
mov
cmp
fistps
xor
js
lock
shrl
enter
inc
leave
idiv
addl
jb
jp
aaa
xchg
add
fsubr
dec
pop
cmp
outsb
mov
mov
cs
dec
sbb
rorb
add
lahf
push
out
addl
dec
dec
dec
loop
fs
outsb
mov
add
in
pop
xchg
leave
jbe
repnz
gs
outsb
pop
xorl
in
add
test
outsl
add
sbb
mov
jmp
das
ss
add
js
loope
insl
scas
jge
pop
ficomps
xor
xchg
xor
shll
int
xor
add
lret
sub
inc
sahf
add
dec
mov
cmp
xchg
xor
mov
xor
int3
add
dec
stc
xor
in
pop
add
pushl
movsb
push
or
pop
sub
xchg
add
pop
test
sub
add
inc
nop
jbe
repz
cwtl
and
xchg
inc
jb
idivl
xchg
mov
xchg
pop
xchg
pusha
and
inc
mov
xor
mov
push
push
fidivrs
shlb
sbb
push
mov
aam
sbb
outsb
pop
setp
add
scas
sub
add
mov
loopne
mov
xlat
inc
loopne
jg
sub
out
add
aam
add
pop
lret
lods
jb
and
leave
push
mov
aam
mov
pop
and
push
popf
add
scas
fwait
or
add
hlt
jnp
mul
call
adc
cmp
test
loope
adc
add
gs
imul
push
mov
add
push
ja
cmp
add
popf
notl
push
out
jno
aas
and
fdivrl
dec
and
cmp
aad
and
mov
imul
or
mov
fisubrs
xchg
out
pop
xor
fiaddl
icebp
sub
push
stc
xor
andl
pop
fiaddl
int3
add
popa
xchg
in
push
mov
int
adc
in
pop
jmp
sarb
xchg
xor
jno
xor
or
add
sub
xchg
popa
push
lods
dec
call
adc
and
mov
fstpl
push
jbe
jle
cmp
insl
sbb
add
mov
cmp
adcl
in
inc
test
out
lea
xlat
fld
fwait
mov
add
or
ds
enter
inc
into
adc
mov
xchg
insb
sub
mov
jg
sbb
inc
inc
adc
mov
xchg
sbb
xor
mov
jbe
pop
nop
lahf
mov
rorb
shlb
dec
aaa
add
fsubrl
into
sbb
jp
or
add
hlt
add
aas
adc
ja
aad
roll
cmpsl
xor
mov
add
cmp
add
and
add
lods
inc
data16
xchg
pop
add
repnz
sub
pop
sbb
xor
sub
add
jbe
scas
stos
xor
andb
into
pop
addl
in
jle
jecxz
adc
inc
sub
int3
fiaddl
std
and
lods
insb
add
out
xor
lods
negb
push
or
dec
decl
icebp
mov
pusha
cmpb
aaa
pop
ja
es
pop
lea
sbb
dec
cmp
dec
andb
pop
cmpsb
clc
popl
int
bswap
and
dec
mov
pusha
or
push
inc
xor
out
dec
add
shl
int3
jbe
jnp
mov
rcl
enter
add
mov
and
loopne
add
inc
push
mov
sbb
repz
ss
and
ds
mov
jecxz
inc
add
or
xchg
add
ja
push
adc
fdivrs
push
ss
and
mov
pop
jge
add
daa
rcrl
mov
dec
les
mov
pop
and
rcr
nop
jne
arpl
pop
and
rolb
dec
in
add
cmp
jnp
cmc
clc
or
and
or
std
insl
ret
adc
mov
adc
push
int3
out
add
cmp
or
data16
xchg
pop
mov
add
inc
fcoml
add
pop
scas
sarb
stos
sbb
lcall
repz
mov
hlt
arpl
sbb
stc
pop
mov
adc
pop
jmp
sub
xchg
push
mov
int
sti
in
pop
inc
push
lds
and
add
bound
shl
out
xlat
jo
fisubrs
aas
xor
mov
or
into
in
nopl
orb
nop
sahf
and
sbb
jo
or
imul
out
repz
and
jo
enter
pop
lods
enter
mov
xchg
outsb
push
inc
mov
add
lahf
or
push
inc
loopne
stos
add
push
inc
pop
nop
mov
mov
lret
rol
jae
sahf
add
xor
jns
lret
addr16
add
push
shlb
in
scas
sbb
pop
jae
cmp
push
add
adc
testb
mov
push
or
sub
add
dec
cmp
mov
mov
jbe
out
dec
sbb
popf
roll
xchg
sbb
add
and
add
std
orb
rclb
or
test
outsb
sub
lds
push
lcall
out
shl
cmp
add
test
xchg
mov
or
sbb
cmc
inc
add
or
add
inc
insl
loopne
loopne
sbb
adc
jl
adc
sbb
cli
sub
lret
das
jbe
lds
add
leave
flds
insb
add
jecxz
jae
xor
test
nop
add
mov
insl
mov
cmp
arpl
sub
or
or
cmpsl
cmp
pop
arpl
hlt
push
add
and
pop
lock
dec
mov
sarb
inc
sub
in
jle
jmp
je
enter
mov
and
inc
cmp
ret
xor
shrb
or
inc
sub
add
jne
xor
pop
push
push
lods
int
fldt
aas
push
ja
jb
and
or
fisubrs
push
in
xor
js
pop
add
sub
iret
xor
sbb
repnz
ror
mov
pop
in
ret
fsin
add
mov
mov
and
xor
jb
pusha
xor
in
add
lahf
sbbb
adc
out
shl
jmp
cs
adc
add
mov
ret
sub
cld
add
shlb
hlt
clc
jl
test
sub
jle
fistps
cmpsb
push
hlt
add
aam
sub
lea
inc
loopne
repnz
add
adc
or
cld
xor
jo
mov
pop
rep
sub
out
add
rcl
popl
fildll
push
add
pushf
or
addr16
bound
in
adc
add
mov
outsl
addl
push
or
inc
adc
ss
xchg
adc
sbb
jb
insl
xchg
add
fmuls
sub
jp
addr16
mov
out
je
ljmp
mov
cli
or
movb
adc
pop
loopne
sub
cmpsl
test
pop
jne
add
xchg
scas
rcrb
sbb
add
stos
and
test
lret
add
cli
sbb
loope
adc
mov
push
and
enter
dec
fcmovnbe
bound
mov
cmp
xchg
mov
xlat
mov
mov
add
mov
pop
orb
stc
dec
sub
scas
nop
or
cmp
mov
push
cmp
mov
dec
test
inc
and
push
adc
scas
xabort
xor
mov
addl
mov
call
dec
icebp
int3
jbe
sbb
add
popf
faddl
in
call
xchg
add
mov
xor
inc
scas
adc
andb
xchg
add
mov
mov
or
or
sbb
xor
repnz
add
mov
pop
cmp
push
xchg
push
dec
fstp
sub
xor
mov
sbb
insl
fwait
xchg
rolb
inc
rcll
add
sbb
push
inc
dec
pop
and
push
dec
xchg
or
xchg
inc
dec
and
jmp
sub
rcrb
xlat
pop
jbe
jg
and
test
adc
test
inc
jmp
mov
add
mov
or
sbb
add
scas
ret
pop
jnp
push
mov
push
rorl
mov
out
add
aas
push
cmp
dec
nop
sub
into
adc
or
inc
mov
popa
xor
add
pop
fstpl
dec
inc
in
jp
add
jmp
sti
outsl
outsb
dec
int3
adc
imul
add
cmp
push
add
sbb
pop
fiaddl
inc
mov
cmpsb
push
add
ljmp
add
xor
sub
add
inc
dec
mov
out
insl
imul
fbld
outsb
mov
xor
out
ficoml
in
sub
xchg
jnp
push
or
xchg
addr16
xor
in
pop
sbb
scas
or
jne
sbb
sbb
arpl
inc
mov
dec
adc
adc
push
jp
mov
aad
mov
and
jo
push
jnp,pt
orl
inc
xor
mov
adc
sbb
sbb
sti
insl
cmp
or
mov
aad
xchg
pop
cwtl
adc
cmp
lret
inc
mov
sub
add
pop
scas
out
mov
xchg
ds
or
jle
int3
sbb
add
js,pn
sub
bsf
xchg
stc
in
into
add
mov
clc
mov
xor
pop
daa
adc
cmp
sbb
dec
pusha
cmpsb
push
int
xlat
outsb
jg
pusha
jbe
rolb
add
cli
roll
push
xchg
stc
fidivs
and
cwtl
add
lcall
mov
stos
dec
cld
xchg
pop
cmp
add
fucom
and
scas
jnp
out
lods
cmpb
rol
pusha
adc
push
push
shr
add
ss
push
mov
arpl
or
in
cmp
popa
mov
mov
jo
jmp
sub
mov
sub
insb
fcomi
ds
mov
mov
add
shll
mov
pushf
sbb
js
out
pop
shrb
sbbl
scas
and
or
das
xor
sbbb
and
jo
sbbl
add
shrl
mov
mov
pop
lcall
adc
cs
sub
sbb
cmpsb
js
shll
add
and
dec
cltd
mov
movsl
decb
loop
ficomps
enter
xor
imul
ja
add
addr16
movsb
and
xor
adc
cli
sub
adc
vcvttsd2si
add
inc
jno
adc
push
add
and
adc
test
add
ret
shll
cmpsb
inc
dec
xchg
aaa
or
pop
jmp
sbb
bndldx
pusha
in
cmp
ss
xchg
cli
adcl
test
nop
pop
push
cld
add
pop
adc
sbb
es
push
sbb
gs
call
or
pusha
cmc
push
mov
pop
jae
cmp
mov
pop
cmp
lret
rcrb
sbb
add
mov
dec
outsb
sub
add
setnp
cmp
int3
jle
add
pop
sub
mov
push
add
xor
scas
inc
fwait
xchg
adc
xchg
insl
cwtl
jg
jp
rol
dec
xchg
inc
push
add
out
insl
cmc
inc
mov
xor
adc
mov
idivb
pop
xorb
jecxz
pop
add
mov
xor
les
pop
jb
add
inc
pop
push
ja
and
nop
testl
ds
add
aam
xor
fs
insl
xchg
cmp
or
and
loope
add
sub
add
sbb
or
jp
inc
sahf
insl
or
addr16
sbb
sbb
and
adc
xchg
xchg
lds
fidivl
fs
cmp
loopne
pop
mov
jbe
or
mov
addb
fs
sbb
mov
loop
int3
sub
dec
and
jo
fildl
add
and
in
add
inc
mov
fucom
add
fimull
aam
or
mov
call
push
mov
mov
cs
push
xchg
jg
add
dec
mov
adc
add
sti
push
adc
dec
inc
cmp
xor
mov
dec
sub
mov
shrb
jo
add
int3
fwait
bound
cmp
les
cmp
mov
jg
pop
lcall
push
add
ret
inc
xchg
mov
or
mov
cmp
js
sub
jge
fsubrs
push
fimull
clc
negl
mov
testb
jae
jno
sub
push
lds
cmpsl
jo
sbb
add
mov
xlat
mov
cli
xchg
and
hlt
mov
mov
jnp
out
adc
sbb
mov
add
test
fistl
stc
aam
jno
sbb
in
sub
incb
sbb
f2xm1
pushf
jns
sbb
mov
fndisi(8087
shll
inc
hlt
cmp
add
and
jnp
leave
notb
mov
in
lret
cmp
xchg
fwait
int3
mov
stos
outsl
mov
pushf
cmpsl
out
icebp
add
adc
mov
into
sbb
mov
aam
hlt
add
fwait
lods
jne
pop
jmp
addr16
loopne
mov
insb
jecxz
inc
jp
mov
subb
lods
sbb
xor
pop
rcrl
idivl
addr16
pusha
mov
jecxz
pop
dec
jno
arpl
loope
add
rcrb
adc
mov
inc
xlat
enter
pushf
xchg
push
pop
test
add
mov
push
das
nop
jno
sahf
or
or
pop
lock
loopne
stc
mov
jl
jg
sbb
dec
dec
xor
out
test
outsb
push
sbb
aaa
fwait
xor
jns
loop
call
lock
loopne
sub
flds
push
les
stc
dec
xor
add
lods
test
xor
or
or
sar
add
or
cmpsl
icebp
sub
xor
push
mov
sbb
in
mov
rorb
cmpb
leave
dec
mov
callw
inc
pop
pop
add
adc
add
jl
mov
push
popa
addb
sub
mov
nop
cli
add
je
sub
push
hlt
xchg
ds
adc
and
pop
lret
sarb
movl
cmp
scas
add
cmp
out
pop
sbbl
add
push
jle
dec
mov
mov
ljmp
adc
cwtl
add
lret
out
je
pop
pushf
cmp
ret
orl
lret
inc
iret
out
add
xchg
daa
mov
pop
mov
aas
lret
mov
sbb
subb
lahf
xor
add
push
test
mov
bound
rorb
test
xor
mov
adc
orb
add
xchg
lea
and
mov
mov
mov
fsubl
call
adc
mov
stc
sbb
inc
adc
dec
fcmovbe
adc
lock
add
aaa
and
jmp
adc
iret
sub
jp
in
js
je
jge
lret
std
add
mov
loopne
ljmp
or
mov
inc
pushf
addb
lahf
pop
popa
imul
push
mov
test
xor
mov
jmp
add
jle
or
lock
xrstor
mov
idivl
add
xchg
cs
or
mov
mov
arpl
jae
add
int
enter
scas
push
jnp
mov
psllq
lret
or
push
cmp
add
pop
test
jp
ret
inc
cmc
inc
and
dec
std
movsl
ss
pop
negl
roll
scas
in
add
mov
les
cmp
lods
inc
pop
popf
jmp
or
sub
xchg
and
inc
pop
push
and
and
mov
add
lcall
cmc
dec
dec
shlb
rclb
xchg
ret
daa
or
sub
cld
ljmp
inc
rorb
inc
insb
and
mov
push
jle
push
pop
fadd
xchg
add
mov
adcb
aad
jg
psraw
sbb
mov
sub
fldl
pop
xor
outsb
sbb
xchg
loopne
add
leave
or
cli
mov
mov
jo
and
ret
out
add
lcall
jmp
xor
push
les
pusha
cmp
pop
mov
push
adc
imul
push
pop
jns
pusha
xlat
add
fld
aaa
int
test
pop
xchg
cmpsb
or
push
dec
hlt
loopne
xlat
cmp
push
jecxz
dec
pop
cmpb
jmp
add
sar
sar
xor
mov
inc
dec
leave
cmp
lea
lds
push
mov
sub
add
scas
or
push
testl
xor
cld
cwtl
add
pop
hlt
aam
cmp
jns
jge
add
and
stc
testb
popa
sbb
shl
xor
js
mov
inc
mov
mov
push
pop
add
bound
add
add
fidivs
stos
xor
mov
popl
mov
call
dec
lcall
mov
rolb
pushf
mov
iret
inc
rol
add
imul
mul
add
dec
aam
jecxz
sahf
sbb
xchg
mov
pop
lea
xor
inc
ret
mov
or
push
bnd
outsb
hlt
push
jo
mov
push
add
cs
cld
inc
mov
push
add
dec
sbb
jge
lahf
push
lock
jb
xor
push
scas
cmp
cld
in
dec
and
aad
test
addb
ljmp
mov
cmp
cmp
push
les
adc
aam
imul
xor
rolb
cmp
or
sub
add
mov
add
mov
lock
add
xor
adc
mov
pusha
adcb
xor
inc
cwtl
arpl
cld
jecxz
xor
and
add
pop
or
pop
add
lds
dec
test
outsb
or
jo
jp
inc
adc
pop
mov
push
push
out
sbb
jae
andb
add
jp
pop
pop
test
xchg
fsub
mov
cld
xlat
fdivl
dec
mov
movsb
mov
mov
cmc
inc
add
int
and
jg
cld
inc
cmp
mov
add
sbb
loope
mov
les
jl
mov
push
fs
lock
dec
out
pop
test
fwait
sbb
addl
ret
inc
add
jl
xor
add
xchg
rcrl
sarb
jge
add
test
sub
jne
sub
cmp
cmp
mov
add
shl
add
pushf
xchg
xchg
xchg
aas
add
loopne
out
jle
in
mov
nop
sbb
rorb
cmp
pop
push
or
cmpb
aas
loop
sub
add
jge
dec
push
or
adc
push
out
decl
fwait
fldl
pmaxsw
sub
sub
roll
clc
mov
pop
inc
pusha
adc
lea
jge
and
mov
pop
mov
add
in
pop
push
jge
rcl
addb
subb
push
sahf
out
stc
add
in
pop
cmp
or
pop
lock
adc
push
add
aam
dec
std
cmp
mov
hlt
shrb
jge
add
shr
mov
movl
mov
xor
push
movsb
mov
das
jo
loopne
pop
pop
daa
jbe
jg
jae
dec
loop
dec
outsb
icebp
inc
filds
mulb
jmp
loopne
sbb
add
ret
cmp
sbb
pop
call
cmp
add
cli
dec
out
xchg
push
fwait
clc
add
pop
push
jno
test
cmp
mov
cld
sbb
movsl
ret
inc
test
ja
repnz
add
subb
pop
add
push
gs
push
dec
or
lret
pushf
dec
enter
push
jo
rcll
dec
pop
adc
jmp
fstp
sub
add
in
dec
test
mov
inc
mov
in
stc
out
cld
loope
int
jae
flds
inc
jge
sbb
sbb
es
sti
out
mov
popf
add
inc
inc
ds
sub
xor
or
add
add
cmp
or
xchg
lahf
or
and
jb
cwtl
add
mov
dec
cmp
add
int3
push
mov
in
add
repz
lods
movsb
fcoms
xchg
popf
jbe
aas
sub
push
iret
inc
jl
or
shlb
lock
sbb
iret
mov
xor
cwtl
xlat
mov
push
or
out
in
nop
in
or
cmp
andb
ljmp
jno
lcall
je
mov
enter
jno
jl
test
pushaw
add
fbld
mov
inc
inc
sbb
adc
movsb
sub
stc
sub
add
jbe,pt
push
mov
pop
subb
popf
fidivrs
sti
sbb
inc
mov
add
ss
xor
int
cmp
push
and
sub
jo
xchg
xor
add
lds
call
rclb
test
into
xchg
jle
pusha
add
ja
sbb
add
dec
adc
cmp
xor
adc
cmp
insb
adc
jns
movsb
dec
sahf
adcb
dec
incl
mov
insl
add
lock
inc
or
push
cmp
xchg
fucom
or
dec
cmp
adc
scas
stos
das
jmp
add
pop
mov
dec
jle
jp
mov
int
lock
mov
cmc
cmp
add
ljmp
push
add
push
sub
fldl
clc
sbb
adc
clc
jg
mov
ja
fs
or
mov
sbb
jecxz
scas
out
cmp
jmp
lds
pop
add
or
add
scas
inc
sub
out
jp
orl
es
shl
push
xor
arpl
call
add
inc
lea
cmp
sti
pop
push
push
jp
sbb
std
nop
pop
xchg
lods
pop
pop
mov
or
gs
mov
test
jno
pop
std
adc
imul
push
mov
or
roll
int
inc
je
sub
mov
leave
clc
std
add
cmpsb
sbb
add
mov
cld
stos
dec
inc
ror
push
ljmp
les
jmp
inc
and
xor
xchg
add
xchg
jmp
xchg
scas
or
push
adc
fucom
aam
xlat
cmp
and
mov
or
mov
icebp
arpl
pop
flds
notl
jl
lock
mov
subw
jg
loop
nop
dec
add
jo
loopne
popa
mov
test
cli
pusha
jnp
dec
lock
ds
cmpsb
adc
add
sub
cmovns
stos
int3
loope
jg
add
dec
cmp
mov
test
xchg
mov
sbb
cmpsl
clc
stc
add
push
in
inc
push
mov
aad
mov
repz
jnp
push
pop
test
mov
jbe
inc
pusha
insl
push
adc
add
inc
dec
and
mov
lock
jno
mov
cmpsl
inc
jge
aas
mov
dec
adc
pushf
pop
cmp
imul
stc
xchg
and
ss
test
shlb
lea
add
add
xchg
adcb
jo
aas
add
push
jns
lret
push
cwtl
or
or
addb
inc
cmp
add
data16
pop
push
add
mov
icebp
or
or
das
cmpsl
add
aas
xor
adc
add
dec
add
fistpll
xchg
jo
dec
mov
mov
jns
add
mov
jmp
jl
outsl
insb
ret
dec
add
aaa
lock
fimull
test
loop
mov
mov
jb
cltd
test
cs
pop
sub
xchg
jo
pop
add
pop
dec
push
add
popf
jae
stc
hlt
out
aas
add
loope
movsb
fdivr
ja
xchg
add
and
sbb
stc
std
insb
inc
lret
lret
add
cld
rolb
popl
cmp
rcl
lcall
add
mov
pushf
add
jg
aad
iret
add
inc
sub
clc
push
je
cwtl
lock
xor
sbb
jmp
hlt
test
inc
jns
dec
fisubl
pop
inc
pushf
jle
xor
repnz
data16
xor
pop
lock
icebp
cmp
ja
add
fxch
cmp
add
and
xor
sbb
mov
add
and
sahf
sbb
inc
pop
xchg
sub
loopne
sbbb
mov
xchg
stos
pop
fwait
push
jecxz
in
jnp
mov
or
loop
add
inc
inc
push
add
push
or
out
leave
pop
cmp
test
xor
stos
sbb
loop
insl
push
movb
add
jecxz
inc
pop
fisttps
xlat
lea
loope,pt
add
ss
nop
ljmp
nop
aaa
mov
jp
adc
fucomi
add
xlat
bound
imul
or
pop
or
sbb
roll
les
or
add
scas
nop
adc
adc
fmuls
jmp
add
aam
iret
es
ret
stc
and
jmp
movsb
cmp
aad
rclb
add
jb
in
test
aam
xchg
inc
fwait
js
dec
xchg
adc
mov
dec
add
fistpl
add
sar
imul
xor
inc
and
cmp
negl
adc
pop
mov
inc
xor
fbld
movsl
mov
in
xor
mov
and
cmp
stos
mov
loope
sub
add
fnstenv
push
iret
lods
scas
add
je
push
cmpsb
dec
js
add
insb
add
jecxz
popf
pop
data16
ss
mov
mov
fadds
arpl
or
adc
sti
jae
inc
test
imul
nop
andb
push
ret
lock
pop
inc
out
inc
mov
cwtl
xchg
repz
sbb
add
dec
std
mov
mov
test
lea
data16
imul
push
push
bound
repz
mov
in
lahf
and
add
popa
outsb
sbb
or
shl
jo
add
mov
sbb
in
xor
test
jo
and
aam
jecxz
clc
mov
sub
les
push
inc
lret
shrl
outsb
sub
sub
xchg
xor
push
out
mov
hlt
pop
mov
sub
gs
mov
es
stc
add
dec
sbb
and
jp,pt
pop
test
jl
xor
cmp
mov
xor
fwait
xchg
cwtl
and
sub
and
orl
dec
pop
xlat
push
sahf
inc
push
mov
test
pop
leave
movsbl
repz
and
adc
mov
daa
test
mov
or
shlb
fs
add
fstps
adc
rorb
nop
popf
mov
adc
mov
add
cmp
mov
cwtl
ss
pusha
andb
lahf
dec
inc
clc
icebp
rol
pop
pop
lcall
nop
bound
pop
mov
and
fidivrs
stos
ja
arpl
pusha
pop
sub
testb
call
aaa
mov
incb
lcall
inc
inc
clc
ss
cmp
xor
int
ret
insl
xor
sub
and
xor
ret
mov
rcr
je
imul
and
ja
xor
lods
aam
jmp
cmp
add
leave
sti
push
dec
insb
popf
push
add
shll
push
add
dec
add
lods
lods
pusha
xchg
add
cwtl
xor
call
mov
cwtl
cmp
inc
add
fistpll
ret
sti
pop
add
rcrb
xor
and
fmuls
push
addr16
xor
orb
inc
nop
jo
cmp
add
pop
pop
in
adc
fsubrs
xor
loop
outsl
mov
addr16
sub
lahf
adc
mov
inc
adc
mov
ficoml
mov
lahf
mov
add
fwait
mov
add
lock
add
repz
dec
rorb
daa
jno
add
xchg
sbb
add
sub
lahf
or
cmp
xlat
mov
add
rcr
cmp
xchg
clc
nop
xor
jae
pop
xchg
inc
pop
sahf
push
aad
xor
push
or
mov
popf
adc
iret
pop
add
dec
out
sub
cmp
cmp
mov
adc
add
xchg
push
insl
sub
mov
stos
push
fstl
pop
pop
ja
in
icebp
rorl
lds
ret
add
mov
std
jge
add
dec
imul
sbb
and
lcall
int3
out
hlt
inc
push
mov
sub
inc
mov
mov
cmc
push
sahf
mov
jno
ljmp
lods
sub
addb
aam
clc
sbb
add
es
roll
xchg
xchg
shll
inc
es
inc
or
mov
mov
push
sbb
rcll
and
test
rcrb
gs
adc
sbb
adc
xor
or
mov
xchg
pop
pushl
cmp
call
orl
pop
les
nop
add
insl
or
mov
add
fcomps
cltd
add
daa
into
cltd
cli
repnz
in
add
mov
not
jle
sbb
pop
xchg
out
xor
enter
daa
sarl
mov
out
jno
inc
xchg
add
nop
daa
mov
es
repz
add
pusha
mov
insl
bound
add
cld
aas
mov
loop
repnz
mov
inc
add
xchg
call
jl
mov
ret
xor
nop
dec
add
movsl
dec
cs
push
popa
push
aas
mov
add
in
movl
je
push
pop
inc
cld
and
adc
xor
add
repnz
rcrb
inc
shl
jb
inc
add
mov
jae
xor
call
jbe
push
adc
imul
adc
fmull
mov
aam
dec
push
testl
jbe
call
lods
pop
add
cmp
inc
fcoml
js
add
fwait
add
inc
and
inc
nop
fsubrl
adc
stc
daa
fisubrs
xor
xchg
in
jecxz
xor
lods
add
fisubl
hlt
jno
rcrl
lock
add
mov
xor
xchg
xchg
inc
clc
pop
rolb
adc
sub
les
cld
into
push
push
mov
jmp
cmc
jmp
pop
cmp
fwait
movsl
mov
xchg
xor
sbb
ds
insb
cmp
add
add
ret
addb
push
jge
aam
sub
pop
shll
test
push
scas
add
mov
in
pop
lock
fisttpll
insb
inc
or
loop
push
jl
push
js
lret
je
sbb
or
inc
pop
enter
movsb
push
outsl
insb
mov
mov
add
lea
jno
push
mov
add
sahf
jbe
push
jle
ret
nop
jns
pop
add
xchg
and
inc
and
inc
negl
popa
mov
jmp
mov
jns
add
ljmp
add
pop
jbe
sbb
pusha
clc
adcl
cltd
dec
push
fs
shlb
test
xchg
std
fwait
xor
push
test
inc
add
dec
push
in
or
cmp
add
clc
lea
add
jecxz
movsl
add
bound
mov
inc
xchg
inc
js
in
or
push
repnz
jbe
mov
add
pop
dec
jns
inc
loope
loop
lahf
mov
sub
ror
icebp
pop
sbb
adc
push
cmpsb
mov
movsl
pop
in
ljmp
pcmpgtd
jge
les
loopne
and
lcall
and
add
mov
push
sub
pop
mov
mov
adc
inc
popa
xlat
jno
shl
add
lods
add
test
je
adcl
dec
sub
btc
mov
add
pop
sbb
dec
cmpsb
mov
sbbb
subl
adc
add
cmc
lahf
aam
sarb
dec
or
andl
addb
xchg
inc
sysret
pop
adc
call
mov
mov
je
popf
jo
jl
les
jle
leave
dec
add
icebp
pop
aaa
movsb
add
int
sub
cmp
xor
popf
jp
lcall
call
mov
add
test
push
pop
sahf
jno
adc
ss
and
xchg
mov
arpl
jns
clc
punpckhwd
ja
addr16
sarb
fcoml
out
xor
pop
cwtl
push
in
inc
insl
xor
mov
add
push
lock
xor
xorb
stos
mov
jp
call
jbe
jo
push
fdivrl
xor
mov
fldt
cmp
mov
ja
push
xor
xor
rorb
std
imul
mov
sar
jle
sub
jecxz
dec
andb
xchg
aad
mov
lds
popf
sti
cmpsl
mov
mov
test
movsl
push
add
push
and
jmp
xor
repnz
mov
inc
add
add
ficomps
das
adc
or
push
push
pusha
lret
fidivl
mov
bnd
rorb
mov
add
lods
mov
or
or
jl
mov
mov
fisubrs
pop
mov
or
leave
je
addb
jecxz
sbb
adc
mov
xchg
push
and
add
mov
enter
push
dec
xor
das
cmp
push
lret
pop
leave
loopne
divb
mov
and
int3
lock
push
cs
cmp
or
in
inc
test
lcall
adc
mov
es
sbb
out
sbb
rcr
hlt
cs
fwait
pop
sbb
cmp
mov
std
pop
popf
mov
adc
and
pop
xor
scas
add
xlat
aaa
rclb
ret
je
loop
repz
cld
fbld
ds
lods
mov
ret
fiadds
xchg
repz
mov
pop
inc
mov
cmp
shlb
pop
or
imul
cmp
or
mov
cwtl
inc
popf
stos
popa
adc
adc
add
js
stos
loop
and
out
lcall
cmp
adc
rorl
sti
rcrb
push
jb
addr16
add
sar
or
out
add
ss
sub
mov
test
es
jae
popa
mov
push
pop
inc
sbb
pop
add
jne
xor
push
push
pusha
jg
mov
add
sbb
xchg
inc
push
mov
repnz
xor
mov
int
sbb
xchg
lret
nop
and
mov
pop
adc
loop
repz
inc
adc
add
outsl
test
iret
xor
adc
adc
mov
xor
push
jge
loopne
loop
add
push
sbbb
faddp
ja
jne,pn
mov
dec
dec
dec
loopne
rcrl
add
pop
je
add
lds
dec
xor
pop
add
out
cwtl
out
cwtl
dec
mov
and
rcr
es
hlt
add
and
ja
mov
fucomip
xor
add
fimuls
and
xchg
in
imull
fmulp
pusha
fbstp
mov
repz
mov
mov
repnz
pop
dec
sbb
test
js
pop
adc
xchg
or
dec
sbb
fcoml
fiaddl
leave
mov
push
adc
add
stos
mov
lods
pop
mov
dec
xchg
push
push
je
mov
rorl
out
add
xchg
es
addb
jecxz
or
lods
scas
add
jb
jbe
and
adc
daa
aam
push
leave
mov
add
push
sahf
in
ret
clc
lds
pushl
shl
call
pop
mov
xlat
add
sub
int3
std
sbb
inc
sub
cs
in
add
jo
bnd
cmpsl
sbb
add
mov
in
rcrb
fadds
rcrl
in
mov
sbb
pop
ljmp
sti
mov
cld
mov
add
enter
subb
add
adc
mov
mov
mov
inc
out
idiv
xchg
loopne
daa
iret
add
jo
lods
jne
jmp
les
out
fidivs
cmp
sbb
mov
add
add
dec
or
sbb
subl
fsub
enter
push
fisttpl
xor
out
push
pop
jecxz
out
jg
push
mov
lods
popa
shll
stos
test
mov
stc
test
sub
inc
int
lcall
adc
mov
or
push
mov
arpl
out
add
adc
mov
out
and
add
xlat
add
lods
or
jne
xor
lret
int
leave
sub
push
xchg
rclb
add
fcompl
add
adc
repz
and
add
and
sbbb
clc
mov
int3
jle
cmpb
add
sub
ror
jnp
add
mov
ljmp
cli
xor
inc
push
test
lea
pop
cld
push
lahf
jg
xlat
rorl
pop
lods
xor
adc
fimull
cmpl
push
and
test
or
out
fs
mov
pop
andb
sub
testl
mov
add
pop
addr16
xor
adc
and
cs
sbb
adc
push
in
loopne
jecxz
sbb
jbe
dec
out
xlat
and
fiaddl
pop
adc
pop
rolb
rclb
jl
fdiv
pop
inc
pushf
cmpsl
xorb
add
adc
add
sbb
add
pop
pop
stos
cmp
push
pop
xor
lds
fldcw
jo
rorb
rcrb
nop
cmp
add
mov
dec
jg
jbe
ds
fiaddl
xor
add
sub
test
inc
fcoms
push
adc
adc
or
push
pusha
leave
ds
shr
fiadds
push
mov
pop
push
jle
lret
movsl
or
mov
lcall
int3
lret
add
punpckhqdq
test
mov
les
lret
imul
fs
jnp
pop
xlat
stc
nop
push
mov
mov
mov
add
mov
fiaddl
sub
mov
mov
cmp
xchg
jecxz
inc
xchg
xor
es
inc
insb
add
or
push
pop
pop
push
popa
cmpb
lods
jle
nop
sub
popf
add
mov
arpl
adc
test
sbb
mov
add
add
fistpll
dec
add
pop
rolb
sub
pop
sbb
imul
jp
ss
add
lds
push
fs
int
jge
mov
outsb
out
in
pop
rcr
mov
cs
test
mov
cmp
add
mov
push
or
add
lahf
xchg
jno
add
sbb
jge
pop
pop
pop
stos
ljmp
pop
sbb
fbld
mov
jg
scas
outsl
add
loope
inc
add
dec
pusha
dec
add
fwait
push
ljmp
insb
fldl
in
std
sbb
pop
outsl
dec
mov
add
push
pop
out
das
out
mov
dec
mov
sbb
or
add
pusha
lds
mov
pop
jnp
mov
nop
inc
mov
add
mov
test
hlt
arpl
add
inc
sbbb
fsubl
adc
pop
imul
push
cli
fwait
add
stos
inc
pop
jb
dec
push
loope
in
sub
pop
add
and
push
jo
cmp
sub
fbld
and
or
xchg
push
psraw
add
cs
push
lcall
sub
iret
ljmp
jecxz
dec
push
or
loope
test
sarb
lret
push
inc
out
jo
bound
mov
insb
add
xchg
test
push
and
xchg
rcll
sub
loope
lods
fsubr
dec
jl
add
fadd
cmp
push
inc
jae
xchg
rcrb
andl
enter
add
test
idivl
lods
jo
scas
add
xchg
cmp
outsb
hlt
pop
add
add
mov
stos
aam
or
sti
jle
sub
jne
jns
add
pop
roll
cmp
scas
cmp
sbb
push
push
rcrl
packuswb
inc
and
test
or
orb
fmuls
adc
push
lock
adc
mov
mov
add
add
jb
mov
dec
in
mov
andl
sahf
sub
loopne
pop
sbb
mov
inc
cli
cmpb
insl
in
dec
imul
into
andl
add
mov
adc
xor
jo
mov
add
dec
and
cmpsb
xor
dec
mov
bsf
jp
popf
mov
inc
xor
add
and
aas
clc
cmp
dec
xor
insb
mov
and
xchg
pushf
mov
loopne
xchg
out
add
jnp
stc
push
lds
cmp
xor
adc
lock
or
cmp
add
fsubl
pop
sbb
cli
testb
xor
jo
mov
cwtl
dec
add
mov
add
lds
or
pop
es
fists
popf
inc
push
movsb
mov
or
add
loop
mov
cmc
pusha
inc
in
cli
leave
adc
enter
pop
cmp
subb
pop
aaa
shlb
dec
push
or
dec
push
dec
test
std
jl
jne
das
add
or
clc
lods
adc
sarl
dec
push
sub
clc
pop
sbb
jns
cmp
decl
and
mov
add
in
mov
push
pushf
out
gs
add
mov
cmp
add
test
push
dec
mov
pop
cld
loop
idiv
adc
xchg
popa
sub
pusha
js
add
out
lods
shll
stos
mov
movsb
sbb
ds
lds
pop
insb
cli
cmp
pop
and
mov
sbb
cld
and
add
xor
jecxz
in
cwtl
test
jle
xchg
dec
and
pushf
dec
std
ficomps
jns
insb
inc
cltd
sub
push
xor
push
mov
rclb
in
xchg
mov
pop
mov
lds
pop
hlt
dec
and
in
pop
jno
sti
add
cmp
push
std
cmp
or
repnz
dec
mov
cmp
pusha
mov
xchg
push
pushf
jge
mov
mov
add
mov
cmp
pop
adc
fcmovnb
push
mov
scas
add
sub
sbb
in
imul
dec
adc
xchg
add
or
inc
pop
dec
or
gs
mov
fs
rcrb
inc
shlb
and
mov
es
and
lock
push
jp
enter
scas
and
lds
ds
fldenv
mov
sbb
mov
jg
pop
jle
lods
mov
fldcw
inc
xchg
stos
xchg
or
xchg
mov
dec
sahf
mov
cli
push
dec
mov
add
xchg
xor
cmpb
fists
xor
insl
add
test
pop
jo
rcrb
inc
cltd
fsts
add
aam
fwait
xchg
or
rcrl
dec
movsb
mov
mov
cmp
pop
xchg
ret
add
out
repnz
add
xchg
jns
xchg
add
push
mov
dec
add
push
stos
mov
pop
orb
pop
test
iret
sub
sbb
add
arpl
fldcw
dec
or
outsb
pop
xchg
pop
mov
ret
jo
and
sti
jl
out
or
les
dec
push
ljmp
cmp
and
dec
xor
clc
cmp
int
loopne
cld
rorl
add
and
repz
movsb
les
and
por
jbe
jge
outsl
adc
sbb
push
pop
cli
add
push
pop
stc
pop
out
jno
xor
pop
sahf
mov
or
mov
popa
test
ja
addb
jne
mov
push
or
mov
push
ss
mov
cli
pushf
pop
mov
push
xor
sbb
jl
leave
repnz
jle
pop
jns
outsb
add
push
adc
arpl
das
add
enter
mov
pop
add
sbb
dec
testb
incb
int
push
push
push
sbb
test
push
cmp
adc
inc
fmulp
cli
add
popf
lock
cmc
popa
push
ss
js
mov
xchg
loope
ljmp
repz
adc
mov
mov
sub
aam
adc
fistps
xor
or
iret
add
loop
cmp
ja
pushf
hlt
add
jo
test
sbb
add
rcrl
in
xor
push
test
push
push
leave
cmp
inc
push
adc
pop
xor
loopne
mov
and
sub
or
push
xor
fbld
lock
xchg
mov
js
filds
movl
nop
sbb
push
stos
and
cli
add
add
rcll
pop
add
pop
in
push
mov
fnsave
lret
add
mov
je
rcrl
pop
movsl
add
jg
fidivs
outsl
inc
loopne
cmpsb
mov
fs
mov
mov
dec
popf
mov
aaa
popa
fildll
push
inc
cwtl
add
jb
inc
cmp
jne
adc
out
test
popa
jle
inc
test
loopne
adc
add
nop
inc
ss
jecxz
jmp
lret
mov
push
fcomps
sbb
daa
and
filds
out
pop
aam
mov
pop
add
xor
or
sbb
js
and
daa
lcall
adc
cmp
jnp
pushf
das
in
add
pop
mov
imull
dec
pop
sub
add
and
je
stc
in
int
add
lds
add
popa
mov
push
into
dec
xchg
add
mov
in
pop
push
cwtl
add
push
cld
fiadds
das
xor
in
xchg
sub
adc
xor
adc
or
add
test
sbb
jo
dec
lcall
cmp
repnz
add
or
cmpb
test
cmp
mov
cmpsb
mov
rorl
mov
movsb
popf
dec
adc
jg
into
add
arpl
cmp
in
mov
adc
hlt
mov
rorb
lret
test
ret
rclb
cmp
add
fs
xor
pop
scas
adc
fbstp
jbe
pop
lcall
mov
sahf
lahf
jo
xchg
xor
add
pop
mov
mov
or
add
sbb
xor
fadds
and
sahf
dec
cmp
out
or
adc
imul
outsb
cltd
fcomps
mov
add
scas
cmp
mov
push
movsb
add
jns
push
adc
add
roll
inc
cmpsb
movsl
push
roll
into
cs
sahf
pushf
loop
add
add
mov
insl
sbb
sbb
clac
je
into
in
cwtl
add
test
icebp
hlt
or
in
mov
in
pop
mov
mov
mov
mov
jne
aas
ret
and
out
mov
pop
inc
fdivp
hlt
cld
rcll
lcall
add
xchg
mov
mov
sbb
jbe
les
add
jne
call
add
fs
add
dec
cwtl
int3
lea
in
inc
in
add
je
mov
and
loopne
dec
fimuls
test
ret
push
push
into
jl
inc
dec
add
in
jmp
fldt
lret
pushf
movsb
mov
or
mov
fnstenv
inc
cli
mov
inc
rorb
inc
insb
xlat
push
push
sub
xor
pusha
xchg
ljmp
movsb
ss
aas
jo
jne
loop
aas
cmp
pushl
xorb
addr16
xchg
inc
push
inc
fs
add
and
sub
scas
aas
jns
dec
imul
pop
push
in
sahf
cmp
push
adc
repnz
pop
movb
vmovups
sbb
outsl
lock
lods
xchg
sti
sbb
rcrl
xchg
fbld
stc
pop
roll
sbb
push
pop
add
sbb
subb
fildl
stc
and
xchg
jb
dec
add
cmp
push
cmp
decb
pop
insb
push
cltd
lea
rcrb
sti
or
pop
xchg
std
cmp
add
xor
pcmpgtw
or
addb
xor
inc
add
or
mov
dec
je
cli
pop
pop
fucom
shlb
jle
add
mov
enter
inc
mov
rolb
mov
dec
xchg
icebp
adc
lods
and
clc
xchg
or
or
nop
pop
mov
sub
add
inc
mov
or
adc
adc
or
cltd
add
imul
test
insb
and
inc
and
rclb
jbe
xchg
sbb
addb
mov
push
scas
test
lcall
cld
xchg
popa
adc
bound
cmp
leave
mov
add
insb
mov
rclb
pusha
out
and
faddl
lods
addr16
loope
into
pop
dec
and
fsubrp
adc
cld
push
cs
fs
mov
nop
int3
mov
call
rorb
movsb
pop
mov
jge
add
popf
shrl
jnp
or
sub
and
aam
aam
xchg
xchg
pop
add
and
jle
sub
aas
sbb
out
xor
repz
andb
xchg
in
add
sbb
aaa
push
add
add
jmp
pop
and
adc
fadds
push
inc
adc
loop
cli
daa
subb
pop
ret
add
pop
dec
cld
sar
xchg
out
add
mov
mov
fwait
adc
clc
les
add
add
xorb
into
test
hlt
mov
cmp
sub
cld
pop
or
mov
mov
push
in
andl
icebp
das
es
outsl
adc
lock
and
push
shll
jae
mov
int3
add
or
sub
and
inc
enter
mov
xor
jns
add
aam
icebp
push
jl
adc
pusha
add
adc
bound
xlat
dec
daa
jmp
mov
dec
jg
lods
sub
add
cmpb
shlb
mov
movsl
aam
xor
sub
and
sbb
movlps
sub
and
dec
dec
sti
push
pushf
clc
cmp
sub
add
sbb
add
fistps
movsb
dec
cmp
xor
loope
add
cld
movsl
andl
mov
dec
lods
outsl
jmp
bound
pop
jo
fcomps
cld
insl
cmc
cld
mov
add
sahf
lods
movsl
dec
inc
loope
add
leave
lcall
add
cmp
adc
xchg
popf
in
rcrb
mov
sbb
adc
clc
mov
pop
push
pop
shlb
repnz
cmp
out
sbb
mov
imulb
int3
repnz
add
push
inc
add
inc
mov
pop
ret
nop
sub
bound
inc
mov
cld
adc
dec
add
popf
dec
cmpsl
sub
mov
dec
sarb
mov
sub
loopne
mov
cmp
jmp
cmp
xchg
mov
rcrl
push
daa
push
hlt
jnp
jmp
add
or
add
pop
add
pop
sub
jge
sbb
sub
ljmp
rcl
sbb
push
add
mov
out
mov
and
mov
xchg
pop
lcall
xchg
add
push
sbb
pop
and
ret
jle
inc
movsl
or
jl
xchg
cmp
hlt
sbb
xor
mov
push
shll
in
inc
mov
fs
sarb
nop
add
js
ret
pusha
jp
or
pop
in
add
add
loope
fisttps
test
or
xor
aas
out
add
lea
push
add
fisubrl
push
xorl
pop
outsl
daa
push
dec
sahf
sahf
push
sbb
dec
rorb
outsb
jge
jecxz
cmp
flds
enter
dec
and
mov
mov
ja
jecxz
lds
dec
add
enter
add
fsubr
dec
addr16
adc
out
lret
jnp,pn
and
iret
push
add
lahf
mov
push
add
js
inc
sub
mov
loopne
cld
mov
add
fstp
in
shlb
lret
inc
push
cmp
cmp
addl
ret
outsb
sbb
cmpsl
mov
pop
add
outsl
andb
add
adc
fidivrs
adc
cmp
cmpb
sub
std
cmp
sub
scas
popa
add
cmp
sub
mov
add
inc
xor
add
push
cmp
aad
adc
daa
movzwl
sub
loopne
xor
dec
pop
stc
jg
arpl
push
ret
and
pusha
add
push
inc
sbb
stc
rol
dec
sub
mov
adc
sub
loopne
in
or
pop
add
push
je
mov
mov
push
in
xchg
fldl
incl
lahf
call
pop
inc
cmp
pop
loope
add
lret
sbb
push
mov
jae
sbb
adc
mov
or
push
orb
testl
test
aad
sbb
or
orb
sahf
insl
pop
fs
sbb
push
loopne
lods
add
pushf
sub
std
add
pop
lods
daa
add
mov
test
push
mov
fistpl
inc
jns
add
ljmp
xor
addl
sub
pop
or
jmp
pusha
push
pop
imul
xchg
call
out
mov
mov
pop
cwtl
mov
sub
loop
test
nop
xlat
pop
mov
jg
add
ljmp
jo
outsl
xchg
add
out
aas
cmp
test
inc
cmp
andb
pushf
sub
cmpsb
add
lds
and
sarb
add
les
rorb
mov
iret
shlb
roll
or
test
cmp
outsl
pop
addr16
movsb
mov
jo
iret
adc
push
je
rolb
dec
sbb
cmpsl
std
rolb
xchg
add
clc
int3
mov
roll
test
lea
testl
fsubp
jb
adc
stos
dec
fwait
imul
jg
loopne
cmp
rorl
jne
pop
sbb
icebp
adc
data16
cwtl
or
out
xchg
in
inc
add
popf
imul
jae
xchg
insb
add
dec
jmp
dec
push
popa
cmpl
lcall
add
push
mov
es
movsb
sub
jg
in
rolb
dec
add
idivb
add
or
test
or
xlat
mov
shrb
mov
mov
int3
nop
or
aam
fcmovnbe
in
dec
hlt
popl
add
fwait
inc
jmp
cmp
pop
cmp
add
mov
ss
sbb
xorb
cmp
stos
loop
lret
pop
add
jle
jl
into
dec
add
insb
mov
stos
adc
xchg
outsb
test
filds
jecxz
inc
lea
out
push
add
sti
orl
add
add
iret
out
jge
add
loope
pusha
xor
add
mov
test
or
jp
cli
mov
call
or
sub
mov
add
shll
iret
int3
mov
mul
cmp
push
xor
add
adc
andl
incb
rorb
notb
jp
divl
jne
add
and
pop
xchg
lock
add
scas
cmp
xchg
arpl
push
push
cmpsb
test
mov
dec
addb
cmp
mov
adc
leave
inc
je
call
mov
and
xchg
sub
outsb
cmp
inc
cli
push
loop
shlb
fnsave
shll
mov
nop
sbb
mov
dec
pop
leave
cmp
add
or
add
push
insb
xor
cs
mov
mov
inc
pusha
cmpsb
jae
add
fmuls
pop
or
mov
mov
int3
or
pop
add
adc
das
jae
mov
xor
data16
or
enter
dec
xsavec
movsl
adc
jge,pn
sbb
inc
add
adc
cwtl
jg
in
mul
adc
jge
push
cli
mov
mov
aad
mov
fcmovu
das
and
and
subl
add
in
jge
popa
jno
add
fidivrs
add
mov
mov
outsb
and
adc
int
gs
lods
xchg
sub
pushf
fstpt
lock
mov
sahf
pop
add
fisubl
lahf
popf
lock
mov
push
aad
xchg
mov
cmp
les
inc
sbb
push
sti
in
adc
and
out
movlps
and
iret
mov
movsl
hlt
aas
into
cmpsb
xchg
lds
aad
ret
pop
and
sbb
lahf
add
mov
or
enter
incl
loop
stos
sbb
outsb
mov
fld
or
mov
xor
or
push
cmp
cwtl
xchg
add
dec
xchg
js
je
aaa
pop
ret
inc
js
dec
inc
jb
test
push
add
mov
adc
add
or
cmp
stos
push
or
out
sub
adc
sub
adc
inc
and
push
jae
pop
cmp
cltd
adcb
xchg
insl
ficomps
lods
xchg
pop
movsb
or
push
push
mov
and
arpl
adc
or
jnp
push
loopne
rclb
lea
lds
adc
mov
icebp
push
add
jnp
cli
ja
mov
lret
adc
and
sbb
dec
icebp
or
cmpb
add
and
int3
xor
lret
cmp
sub
sbb
adc
add
jno
cld
orb
sub
faddl
push
mov
adc
inc
xchg
sbb
jae
shll
sbb
push
sub
mov
dec
lea
mov
std
loop
dec
jo
iret
daa
into
imul
add
pop
push
and
cwtl
sbb
jb
loop
and
xor
dec
mov
cmp
paddb
and
push
out
cwtl
shrb
jecxz
mov
add
fmulp
inc
pop
mov
mov
add
repz
outsb
sbb
add
or
pusha
fcomps
mov
add
xchg
mov
xchg
pop
mov
add
and
ljmp
and
cmp
add
mov
pop
dec
push
ja
sub
add
insb
cmp
nop
test
add
mov
xor
push
out
iret
or
xor
loopne
sbb
mov
fwait
loope
shll
sub
je
adc
or
sbb
inc
mov
push
push
lcall
sub
pop
jo
add
mov
ffree
adc
push
in
fildl
faddl
fstps
gs
pop
leave
jle
addl
jo
dec
cmp
add
imul
shll
and
push
push
fcmove
and
incl
inc
xor
stc
cmc
xchg
pop
cld
mov
inc
fwait
jbe
add
fldenv
add
xchg
mov
shlb
pop
add
loopne
sbb
cmp
add
xchg
stos
inc
fsubrl
bnd
push
push
pop
stos
insl
shrb
jmp
lret
scas
sbb
xchg
stos
add
mov
ljmp
ffreep
in
insl
pushf
jecxz
out
sahf
test
cs
push
add
xchg
or
xchg
orb
mov
jmp
jle
jbe
and
testl
test
xor
adcl
stc
jl
jo
out
mov
fwait
jp
nop
popf
sub
lahf
xor
sub
stos
add
mov
loope
fsincos
shlb
mov
and
push
push
sub
shrl
ss
or
mov
dec
dec
pop
jl
mov
sbb
or
mov
je
add
jg
adc
fiadds
mov
int
imul
mov
add
jecxz
jl
sub
fiadds
jne
mov
jl
pop
insl
std
mov
mov
addb
outsl
aas
popa
out
add
jae
cmpsb
jl
xchg
add
pop
ret
imul
push
adc
ljmp
dec
add
or
sub
cmpsl
sub
mov
sarl
rorb
add
sub
jnp
fadds
mov
pop
pusha
int3
add
xchg
mov
mov
and
push
rolb
lahf
dec
xchg
and
fcomps
jne
add
dec
sbb
outsl
pop
movsl
inc
jmp
mov
or
mov
nop
in
mov
add
movsb
pop
push
or
repnz
das
xor
add
push
cmpb
ja
les
or
xchg
mov
ljmp
hlt
cmp
inc
add
xor
cmp
sahf
repz
sbb
shrb
imul
rclb
add
lods
dec
inc
dec
ja
cwtl
xor
cmpsb
nop
rolb
jl
cmpxchg
pop
push
shrb
popf
repnz
movsl
jb
lods
testl
cltd
add
mov
inc
jl
mov
dec
push
clc
test
lret
jp
sub
xor
sbb
xchg
int
rcll
sub
cmp
sarl
inc
mov
notb
inc
mov
fistpl
cmpsl
push
rcr
mov
mov
cwtl
add
pusha
dec
jo
flds
dec
cmpsb
cmp
sbb
rolb
addr16
jle
sbb
xchg
icebp
mov
inc
and
call
ss
addl
fiaddl
add
mov
pushf
fsubp
jo
lods
xchg
inc
sti
ficoml
add
and
ret
enter
add
dec
mov
adc
jns
mov
loopne
cmp
pop
add
xor
fstps
mov
outsb
ja
pop
push
movsl
and
mov
xchg
mov
iret
xlat
dec
jnp
jo
sub
jo
scas
or
xchg
dec
push
nop
push
add
ror
cli
adc
fiadds
loop
inc
jle
and
add
push
push
add
or
pop
outsl
addl
fcmovnbe
shll
adc
ss
mov
scas
pushf
inc
mov
push
sbb
nop
add
inc
mov
add
stos
dec
movsb
sbb
mov
loope
addr16
sub
xchg
push
mov
nop
and
add
shll
mov
sbb
mov
cmp
mov
mov
iret
adc
jmp
cli
push
xchg
mov
cs
cmc
add
mov
push
or
dec
hlt
mov
mov
inc
aam
mov
push
add
jnp
fsubl
leave
jl
inc
and
ret
push
sbb
xor
dec
mov
add
lds
add
xchg
add
sahf
add
lahf
stos
add
test
dec
das
imulb
add
mov
pusha
nop
lcall
lret
loopne
adc
add
jge
stos
cmp
rclb
iret
inc
arpl
mov
and
faddp
push
cmpsb
outsl
add
and
sub
mov
sub
jo
add
es
push
sub
cwtl
in
push
ss
inc
sbb
add
mov
incb
shl
or
addl
aad
fistpl
mov
push
xlat
adc
shl
pop
fmul
cmp
mov
add
shll
sbb
clc
or
xchg
add
cltd
adc
mov
xchg
pushf
xor
pop
pop
into
mov
or
add
andb
gs
sbb
pop
dec
pop
add
mov
std
test
add
gs
pop
inc
stos
sub
mov
fsubr
mov
je
mov
or
adc
lret
enter
mov
inc
mov
repnz
push
movsb
shrl
cmp
mov
lret
jle
add
jbe
adc
add
ret
cmc
mov
mov
out
xchg
xor
dec
adc
scas
sbb
mov
xchg
and
jno
jp
and
in
ljmp
add
inc
mov
test
into
inc
out
push
cmp
sub
adc
and
mov
add
sbb
stos
pop
xlat
out
sub
clc
ja
cltd
int
dec
je
and
mov
dec
popf
sub
fbld
push
jmp
sbb
jle
dec
xor
aaa
cli
add
shll
inc
and
pop
out
repnz
push
scas
fs
mov
add
rclb
fdivl
rolb
add
daa
imull
mov
fstpl
add
mov
mov
push
cmp
inc
and
lret
and
int3
adc
xor
and
lcall
pop
add
push
push
fcmovne
or
pop
shlb
lahf
xchg
out
add
mov
mov
push
rolb
ljmp
adc
add
gs
xor
leave
aad
or
mov
jle
test
sbb
mov
les
gs
cmp
dec
pop
mov
clc
je
addb
jb
adc
mov
call
in
mov
aad
push
pop
in
adc
stc
xchg
pop
add
out
or
push
sub
js
test
jmp
adc
ret
popf
in
pmovmskb
stos
in
inc
lcall
enter
pop
mov
call
add
cmp
mov
in
movsb
cld
mov
inc
das
jns
mov
add
cmp
lea
mov
jnp
jmp
or
or
jg
push
test
loope
sub
in
sbb
into
enter
dec
jge
pusha
jg
add
jg
xor
or
add
mov
enter
nop
js
xor
pop
add
lret
pop
enter
test
shlb
xchg
addb
das
jp
addl
mov
cwtl
mov
add
clc
je
pop
xchg
jecxz
mov
testl
add
fisttps
in
hlt
fnstenv
test
cmp
jo
test
loopne
inc
or
adc
and
adc
inc
jno
jp
addl
lods
call
mov
sbb
mov
mov
xchg
hlt
dec
add
add
cld
cmc
jo
inc
daa
jae
sub
rclb
cmpl
sub
ljmp
scas
add
mov
add
out
ja
push
adc
add
call
xchg
cmpsb
cmpsl
add
push
jno
sub
sub
inc
adc
rolb
inc
cwtl
or
jmp
call
adc
mov
and
lcall
mov
in
xor
push
popf
in
adc
push
mov
push
cmp
cmp
out
daa
pop
in
adc
scas
add
out
adc
mov
cld
or
gs
xchg
shlb
add
orb
add
bound
jp
jecxz
jl
sub
loop
add
and
xor
ucomiss
imul
sbb
popf
sbb
push
add
mov
cmp
mov
cmpsb
dec
push
jns
jb
pop
inc
add
shlb
scas
lret
aam
cmp
pusha
pop
into
lcall
mov
add
shrl
xchg
call
nop
jne
inc
add
aad
jae
addr16
ljmp
pop
mov
insb
orb
xchg
xor
add
std
or
fsubr
hlt
nop
pop
cli
jae
pop
push
cmpb
cmp
jbe
cmpsl
inc
cmp
ljmp
pop
xchg
inc
loope
mov
adc
xor
daa
fsubl
ljmp
cmpsl
push
arpl
shr
inc
int3
and
lods
int
mov
dec
add
pop
shrl
add
mov
adcb
jbe
and
or
ficoml
lcall
into
mov
inc
jns
jle
bts
xorb
roll
out
adc
add
push
ret
add
xchg
sub
add
jecxz
daa
push
jmp
push
add
call
aas
add
push
pop
je
add
mov
mov
jge
stc
mov
xor
call
test
jnp
push
pop
pop
mov
jae
pop
lcall
nop
pusha
jb
ret
add
push
in
or
mov
sbb
aad
popa
les
cmpw
add
jae
sbb
movsb
push
nop
add
test
ret
pop
fsubrs
xor
inc
nop
mov
in
mov
lcall
clc
push
push
loopne
add
nop
or
mull
sbb
ret
aam
cmp
outsb
pop
in
sub
test
mov
or
into
stc
les
arpl
dec
xchg
ja
add
mov
out
push
popa
sbb
mov
movsb
add
mov
std
cmpsl
dec
xor
adc
mov
add
and
mov
add
mov
js
add
cwtl
andb
xchg
jns
stos
or
test
jmp
mov
or
lds
mov
xor
cltd
mov
ss
add
jnp
mov
pushf
shll
add
sbbb
and
aas
mov
repz
leave
imul
and
into
loope
sub
push
call
push
das
mov
js
and
adcb
popa
xlat
loopne
pop
push
lods
add
mov
dec
addb
mov
hlt
mov
mov
push
lods
ror
cli
insb
xchg
cmpsb
or
xor
loopne
mov
jle
dec
imul
mov
push
or
xchg
fisubs
std
lods
add
pop
push
nop
aam
cmc
cli
xchg
inc
xor
loop
pop
stos
jns
and
add
sbb
test
sub
add
popa
test
or
jo
insb
mov
outsb
imul
mov
push
pop
outsl
jge
xor
and
sahf
adc
enter
hlt
cwtl
or
fstl
mov
xlat
sarb
jp
jmp
add
in
fbld
clc
mov
wrmsr
jnp
sbb
jp
fnstsw
cwtl
add
fwait
jecxz
mov
pushf
cmp
inc
es
xor
imul
out
fmuls
dec
addr16
sti
js
and
popf
add
push
mov
mov
cmp
icebp
aad
xor
pop
or
lods
in
add
enter
jmp
iret
xchg
mov
adc
and
xadd
pusha
dec
es
adc
inc
nop
loope
sub
dec
xor
push
mov
mov
cmp
lods
or
xchg
push
cmp
cmp
xor
iret
icebp
mov
popl
gs
js
cwtl
test
cmp
push
cltd
data16
add
pop
movsb
lea
xorb
cs
fs
add
addl
add
rol
push
scas
in
xor
fwait
xchg
movsl
mov
jl
add
insl
xor
cmp
call
loop
add
mov
cmc
push
bound
inc
loopne
fldl
xchg
scas
lock
xor
das
add
cs
fidivs
jle
add
inc
cmp
pop
add
mov
pusha
dec
repz
add
xor
cs
or
lahf
bound
add
push
call
push
dec
adc
int
cwtl
push
sbb
loopne
add
inc
arpl
inc
dec
or
cmc
dec
jle
pop
add
and
and
inc
dec
clc
jno
int3
fimuls
inc
push
mov
push
add
sar
ljmp
in
inc
scas
mov
adc
cli
mov
faddl
lock
cmp
shrb
cmp
push
add
pop
sbb
dec
push
sbb
push
fiaddl
inc
inc
add
xchg
sahf
test
jne
mov
add
lods
adc
or
gs
test
fwait
cmpb
cmp
xchg
sub
mov
jg
jp
pushf
pop
sbb
cwtl
ret
add
sbb
pusha
inc
jle
sbbb
inc
mov
jg
ljmp
loopne
xchg
test
popf
and
out
daa
cltd
mov
mov
add
cmp
mov
jg
and
push
cmp
add
stc
cld
rclb
cltd
sbb
add
lcall
add
or
jecxz
cli
pop
jp
mov
xchg
into
fmuls
push
scas
ja
outsl
adc
jne
sbb
dec
les
mov
test
mov
outsl
sbb
mov
fcmovbe
pop
xor
in
lods
inc
add
fldt
lods
add
call
push
inc
cmp
sbbb
mov
cld
ja
jp
add
fimuls
add
out
bound
notb
aam
movsb
add
xchg
add
pop
mov
add
mov
dec
add
mov
into
add
xlat
xor
iret
add
jg
pslld
lock
andl
shlb
cmp
ficompl
ss
mov
dec
notb
mov
add
dec
or
stc
add
sbb
fsubr
add
pop
push
sub
add
xchg
dec
jmp
add
cwtl
adc
jno
xor
mov
mov
pop
pusha
or
addb
or
iret
dec
fs
pop
pop
insb
lock
lahf
add
shlb
push
iret
rolb
push
stos
nop
inc
data16
mov
inc
in
add
add
arpl
mov
adc
mov
mov
pop
ljmp
pop
sub
mov
clc
stos
sub
cli
or
lahf
fs
add
mov
rolb
shlb
xchg
dec
andb
mov
sbb
add
and
dec
clc
mov
pop
dec
sbb
xor
inc
push
lock
in
mov
cmp
ret
add
or
mov
cltd
push
incl
test
add
mov
jmp
in
cmp
pop
cmp
idiv
loopne
adc
fimull
shr
mov
es
popf
iret
bound
adc
cmpsl
push
arpl
and
ss
sub
out
add
outsl
dec
pop
add
dec
sbb
das
sbb
in
jns
stc
jg
jmp
inc
dec
adc
cs
mov
xor
pop
push
orl
xchg
es
out
sbb
mov
ljmp
xor
add
lcall
pop
push
hlt
sub
pusha
push
add
or
dec
xor
push
mov
adc
testl
into
addr16
xchg
mov
mov
in
movsl
and
cmp
test
adc
push
dec
or
lods
jge
pusha
test
pop
mov
pop
sbb
lahf
adc
shlb
cmp
or
idivl
shlb
int3
adc
jo
sbb
sub
jns
push
xor
sub
fcmovnbe
ljmp
or
add
jo
add
subl
pop
shl
mov
xor
add
lods
je
test
inc
xchg
lret
out
jnp
sahf
ljmp
inc
rcl
jo
popa
aas
sbb
aam
addb
jle
setp
sub
push
les
subl
ret
dec
xor
sbb
leave
cmp
xchg
inc
add
andb
mov
mov
pop
js
in
and
cwtl
dec
jl
daa
test
add
mov
cmc
rolb
cld
int
in
js
xchg
push
loop
inc
and
add
leave
decl
cmpsl
or
sti
lods
mov
xchg
adc
adc
sti
or
ret
or
push
frstor
fistpl
mov
fcomps
adc
jl
and
mov
jp
popa
add
aam
sbb
jnp
out
or
ds
add
lret
test
and
stc
stos
or
dec
and
add
push
sbb
arpl
sbb
add
iret
add
add
push
aas
mov
mov
inc
sbb
push
xor
jl
flds
and
pusha
imul
aas
orb
and
mov
dec
popa
out
xor
pop
pop
rolb
pop
cld
enter
dec
jmp
xchg
and
mov
pop
int3
in
jne
cli
roll
scas
xchg
fs
jl
and
aas
or
dec
or
xchg
pop
and
dec
rclb
push
cld
pop
test
int3
int
ja
pop
mov
sbb
jne
add
enter
scas
add
hlt
sub
fildl
and
repnz
mov
lods
fwait
loopne
ret
cltd
pop
or
jo
add
sahf
imul
push
call
pusha
leave
xor
sbb
sbb
mov
jae
and
mov
dec
xchg
movsb
mov
scas
push
outsl
cmp
sbb
in
pop
mov
sub
xchg
ret
fisubs
xchg
shlb
bound
and
shl
xor
mov
pop
jns
add
rorb
cmp
lcall
outsl
xor
and
rolb
add
add
and
pop
cmpl
sbb
xorl
xor
push
add
ljmp
add
outsl
rolb
push
insb
decl
pop
add
loopne
addb
cmpsb
sbb
push
cmp
lods
sbbl
lds
sub
add
push
jmp
das
sub
add
dec
fs
popa
sbb
mov
rcll
add
imul
xchg
mov
mov
adc
add
xchg
sub
cs
stos
addb
iret
mov
xor
xchg
add
xchg
jno
nop
stos
jg
inc
addr16
loope
and
xor
pushf
adc
das
out
add
imul
or
rolb
in
addr16
movntps
pop
xchg
add
sti
add
jp
sub
rolb
push
push
pop
int3
adc
xor
int
mov
jne,pt
xor
and
fisubl
sub
jb
pusha
jno
add
rcl
sub
insb
mov
ljmp
push
dec
fildl
test
jbe
lahf
sbbb
cs
sub
push
fisttpll
test
push
cmp
out
insl
call
hlt
push
pop
insb
pop
mov
dec
jb
mov
in
adc
jbe
cmpb
test
sub
pusha
repz
sub
add
pop
in
mov
addl
leave
ds
adc
jae
hlt
or
mov
ljmp
out
inc
test
rorl
mov
sub
cld
dec
data16
js
jl
mov
mov
pop
ja
add
fmull
idivb
pop
shll
hlt
js
fisttpll
lret
cmp
js
dec
sbb
sahf
test
jge,pt
xchg
cmpsb
flds
add
dec
ret
push
pop
nop
jb
data16
cmp
push
xor
sbb
js
pop
addr16
jne
push
rcrb
add
sub
jno
cmp
movsb
inc
adcb
mov
cmp
lahf
cmpb
xchg
scas
inc
mov
bound
xchg
sbb
enter
out
addb
shll
int3
test
and
popf
xchg
add
mov
add
rcrl
sbb
adc
and
aas
adc
add
mov
sub
push
or
add
dec
jmp
sub
dec
sti
outsl
stos
and
sub
dec
insb
orl
pop
add
lahf
leave
cmp
adc
mov
mov
test
es
add
mov
cmp
add
inc
dec
jb
clc
adc
add
push
es
mov
pop
imul
xlat
sbb
out
sti
and
mov
cld
orb
je
add
and
cltd
enter
sub
sahf
dec
sbb
mov
bound
cmpsl
repz
jns
andl
sub
adcb
sarl
stc
add
mov
cld
cmp
cld
lods
push
fcomp
add
aad
jno
push
sbb
mov
or
loop
mov
je
jnp
sbb
and
or
cmp
dec
add
dec
call
pop
fwait
mov
cmp
jg
ret
movd
inc
add
pop
xor
clc
pop
jg
adc
sarb
outsl
sbb
fmuls
data16
shr
xor
mov
or
sbb
inc
add
mov
leave
arpl
cltd
xor
jae
insl
fwait
in
sbbb
pushf
cli
fmuls
mov
sbb
sub
fbstp
add
imul
sbb
addl
jp
add
fwait
sarl
xor
add
sbb
jnp
inc
cmp
rol
pop
cmp
cs
dec
push
daa
pop
cwtl
sbbb
rcl
inc
add
insl
fcmovu
sbb
sbb
cmc
daa
mov
add
jecxz
or
cltd
stc
adc
arpl
in
int3
xchg
lods
add
mov
adc
add
pop
lods
add
andb
jmp
xor
push
pop
aad
sbb
push
add
cmp
test
pop
sub
jae
or
jp
rol
into
mov
jp
or
xchg
add
and
or
loopne
fsts
loope
pushf
pusha
or
mov
push
enter
cmpsb
inc
shl
dec
inc
add
adc
add
and
push
xchg
cwtl
mul
pop
jo
packssdw
mov
push
pop
pop
cwtl
ret
inc
mov
xchg
add
jne
stos
scas
lahf
mov
insl
xchg
mov
inc
cmp
mov
dec
xor
insb
add
fcomps
pop
mov
data16
daa
call
test
roll
cmc
pop
ror
test
jno
out
shlb
in
or
insb
adc
cmp
mov
push
jae
dec
and
inc
icebp
push
add
outsb
cwtl
cmpsb
adc
shrb
cmp
dec
je
adc
adcl
lret
imul
sub
pop
dec
adc
pop
push
shlb
aaa
and
popf
cmp
testb
dec
xor
adc
aam
add
mov
or
lahf
sbb
mov
out
add
sub
xor
jns
dec
bound
rolb
or
cmp
ds
adcb
loope
sti
in
dec
outsl
std
into
pop
dec
sub
fs
jnp
movsl
aam
ret
adcb
std
fisubs
add
inc
andb
ljmp
and
sbb
je
jge
add
shl
enter
add
lds
mov
andl
enter
add
in
add
imul
rcrb
arpl
fisubs
jp
xchg
out
add
push
xchg
fs
add
loopne
xchg
sbb
sub
or
repnz
mov
add
add
push
shlb
push
rcrb
or
stos
cmc
mov
add
clc
push
add
jns
pop
xchg
sti
fcmovnbe
fiadds
cmp
or
shr
popf
lea
fistpl
and
xchg
lea
sbb
add
mov
mov
sub
mov
add
imul
sahf
loope
push
jle
hlt
aaa
cmp
rcll
outsl
inc
aam
push
add
jne
mov
aad
inc
cmc
gs
lock
inc
adc
mov
or
mov
sbb
adc
and
push
arpl
sub
mov
cmp
sti
cs
inc
mov
out
sbbl
inc
pop
or
mov
ret
and
jns,pn
mov
pop
les
jle
das
inc
rcr
add
xor
clc
sbb
xlat
repnz
and
mov
add
pop
mull
pop
add
add
fmuls
xchg
cmp
add
pop
lods
add
xor
cmpsl
mov
mov
outsl
mov
jecxz
or
ds
popl
adc
xlat
insb
add
sbb
mov
cld
or
movsl
mov
xchg
add
cmp
xlat
shlb
mov
cs
mov
dec
pop
sub
je
test
hlt
inc
or
mov
adcl
lldt
aaa
add
add
lcall
pop
mov
xor
imul
decl
pop
gs
inc
adc
pop
loopne
cmp
dec
pop
mov
outsb
stc
aas
xor
add
shrl
addl
int
xchg
aas
int3
inc
add
mov
mov
mov
sub
push
inc
push
sub
pusha
sub
pop
dec
xor
xchg
xchg
fs
mov
pusha
daa
push
cld
or
cmp
in
add
xor
or
shl
mov
cld
nop
test
mov
or
push
sbb
and
movsl
add
sarb
lds
inc
inc
pushf
pop
add
dec
push
xchg
cmpl
cmp
add
cmp
inc
out
enter
shrb
loop
adc
js
fs
dec
jns
jno
inc
sub
push
xor
dec
add
jmp
pop
lods
insb
clc
xchg
push
sub
adc
rorl
mov
add
sti
inc
mov
lods
pop
push
stc
inc
cmp
gs
sti
add
jo
xchg
or
ljmp
add
fs
add
xor
xchg
inc
movsb
adc
enter
lret
dec
std
mov
pop
xchg
push
jbe
mov
sbb
mov
adc
inc
aas
sahf
mov
sbb
cmp
int3
xlat
sbb
cmp
pop
add
pop
mov
push
nop
inc
mov
roll
or
jmp
mov
dec
mov
xor
mov
push
iret
out
and
mov
imul
mov
ds
xchg
mov
daa
mov
add
out
sub
pop
cltd
mov
cmp
mov
xor
lock
sbb
or
sub
sbb
roll
xchg
sahf
pop
or
mov
test
gs
add
inc
push
shll
pusha
ret
jp
scas
ficomps
stos
cmp
jbe
sbb
jne
testb
jle
mov
push
movsb
dec
incl
add
rcrl
je
add
and
inc
jge
mov
mov
xor
orb
add
dec
sub
xor
daa
or
test
mov
out
loopne
arpl
test
rcll
daa
xor
sub
test
sbb
add
jl
push
shrb
add
cld
and
xchg
in
test
loopne
mov
dec
inc
dec
sbbb
rcrb
push
pop
jmp
fwait
mov
sbb
nop
or
imul
jo
sub
outsb
dec
push
or
ret
sbb
sahf
or
and
aam
mov
test
push
sbb
lea
movsl
xchg
lock
push
cmp
push
mov
add
fldenv
ja
ret
fidivs
outsb
out
sub
lea
scas
push
jne
pop
add
test
out
rorb
add
push
sub
jb
xor
jnp
sbbl
dec
push
sub
inc
sbb
je
lods
std
adc
in
insb
jg
mov
sub
movsl
or
fs
push
or
inc
and
mov
cmp
out
jbe
mov
adc
test
loopne
add
jb
pop
pop
mov
out
sbb
cli
lcall
inc
test
pop
int
aas
roll
inc
cmovns
push
mov
iret
mov
mov
mov
fbld
loope
inc
addl
cmp
addr16
or
mov
add
ret
icebp
add
loopne
jnp
mov
pusha
xchg
lret
ficoml
dec
dec
pop
clc
lret
add
mov
lods
and
movzwl
adc
push
fcomp
pop
cltd
sbb
adc
adc
fisttpll
roll
push
add
xor
sbb
stc
int
jne
inc
stos
ljmp
inc
ret
sbb
add
mov
ljmp
lret
jmp
inc
inc
xorb
adcl
xlat
stc
dec
pusha
ds
mov
mov
mov
fdivrs
setns
mov
push
jns
push
iret
inc
ror
adc
std
fstl
test
cmp
or
push
adc
clc
push
xor
and
nop
pop
out
xchg
inc
mov
mov
out
cmp
add
stc
mov
cmp
pop
dec
mov
sbb
push
jp
leave
paddw
dec
fimuls
xor
iret
fisubrl
add
pop
xchg
shrl
add
adc
xlat
pop
inc
imul
fsts
dec
aad
les
mov
lret
jno
xor
sarl
add
or
call
mov
stos
sbb
lock
loop
out
dec
jmp
push
int3
in
aaa
cld
leave
in
add
sbb
cmp
cwtl
mov
in
loopne
scas
push
aas
ja
and
cmp
or
jmp
data16
test
movl
xor
iret
add
jge
outsb
movsl
add
call
rol
lock
sbb
das
adc
rol
adc
mov
and
in
mov
cltd
or
jmp
cmp
pop
xchg
pushf
insb
cmc
push
jle
pop
mov
shrb
add
lock
sbb
test
cmpxchg
xchg
notl
arpl
mov
scas
sub
subb
movsb
mov
mov
or
test
xchg
sub
fildl
out
dec
pop
and
aas
push
add
and
rcrb
sub
push
outsl
jecxz
in
add
mov
jno
and
push
sub
or
bnd
andb
daa
pop
stos
mov
lods
rorl
clc
shlb
in
pop
add
cwtl
mov
xchg
xor
xchg
adc
dec
mov
push
sbb
push
cmp
mov
add
hlt
sub
mov
and
cmp
and
pop
or
jmp
popa
sbb
adc
mov
les
aaa
xor
mov
sub
aam
cmpsb
jo
roll
sbb
adc
fcoms
enter
sbb
ja
icebp
je
jl
lret
xor
mov
iret
xchg
push
add
stos
ret
add
sbb
mov
cmp
in
cmp
es
jbe
shrb
or
stos
fisubl
jne
mov
scas
loopne
test
fs
out
inc
lret
aam
mov
movsb
adc
mov
jmp
pop
fsubl
xchg
movsl
lret
or
add
mov
push
mov
adc
cmp
lock
pushaw
xor
sbb
mov
and
dec
shl
adc
fdivrs
shll
cmp
lods
cmp
or
adc
jb
add
ffreep
clc
xor
add
jae
loope
pusha
loop
add
out
add
aas
xor
out
jnp
add
and
pop
sbb
pop
add
cmp
rcrb
add
jbe
sub
fadds
pop
sbb
fwait
add
fildll
push
call
fsts
jno
jae
push
adc
xchg
adc
mov
cli
push
popa
add
stos
pop
xor
cmp
mov
jl
add
adc
ret
imul
adc
cmp
pop
push
push
fwait
testl
std
sub
push
dec
mov
push
andl
mov
leave
mov
aas
sbb
cmp
jl
pushf
leave
sbb
or
mov
and
fadds
mov
loop
sub
ret
outsb
mov
cltd
inc
dec
adc
sub
movlps
xor
and
sahf
dec
add
sub
push
sbb
lret
jmp
mov
add
add
fldl2e
sti
popl
cmpsl
jp
inc
push
orb
lock
test
mov
cmp
cltd
add
mov
cmp
sub
push
pusha
mov
jmp
mov
cmc
add
stc
ja
adc
popa
stos
dec
popf
iret
and
push
xchg
mov
sbb
mov
shl
push
aad
mov
out
mov
push
sub
psubsw
jp
pusha
or
xchg
mov
es
pop
pop
mov
push
xchg
shlb
das
xchg
lret
jmp
xchg
leave
add
lahf
push
mov
test
cmp
push
pop
fildll
cmpsl
add
or
cs
sbbb
leave
add
es
mov
fbld
cmp
idivb
mov
orb
xor
jmp
loop
sub
xor
add
js
sub
cs
les
loope
movsl
push
es
into
add
stos
xchg
roll
sbbl
dec
push
cmpb
insb
add
sub
adc
adc
ds
daa
inc
aad
fadds
movzbl
adc
and
push
clc
in
cmp
loope
add
pop
inc
adc
pop
stos
dec
orl
cltd
add
cmp
inc
int3
in
cmp
add
fwait
mov
mov
nop
dec
push
ljmp
mov
dec
insb
mov
xchg
push
outsl
add
and
sahf
imul
into
out
inc
xchg
int
insb
and
mov
xchg
scas
add
dec
shrb
add
scas
push
ret
add
pushf
fidivrs
or
add
stos
cmc
inc
pop
or
fwait
inc
xor
dec
sub
adc
cmp
fmuls
push
mov
mov
add
add
sti
push
je
je
xchg
and
outsl
add
add
repnz
cld
gs
subb
push
sub
dec
sbb
js
fisubrs
add
dec
xor
sub
ljmp
sbb
sub
and
xor
dec
or
divl
test
fwait
xchg
popf
je
paddb
into
dec
icebp
xchg
or
inc
pop
pop
mov
fimuls
sub
push
rorb
and
out
adc
sub
out
add
cmpsl
test
mov
dec
push
jne
cmp
movsl
nop
add
stos
lret
ds
jno
add
xchg
in
out
push
add
repnz
cmc
adcb
insl
mov
and
pop
mov
cmp
cmp
fwait
dec
rorb
lcall
push
data16
roll
pop
mov
stc
dec
push
mov
sbb
add
movsl
mov
fmul
add
mov
xor
daa
out
push
repz
adc
sbbl
enter
mov
push
jne
xor
lea
add
inc
andb
add
push
in
fcoml
push
pop
fidivl
add
lret
cmpb
in
add
push
in
and
addl
push
mov
add
lock
jg
je
sbb
push
sbb
cmc
mov
xor
mov
add
sbb
jl
inc
subl
push
popl
mov
or
cmp
cmp
loopne
xor
pop
jmp
add
ret
jae
xor
dec
ja
sub
clc
cs
add
lds
test
push
lahf
pushl
test
xchg
push
or
rorb
dec
sub
adc
sub
mov
aad
push
cmpl
xor
arpl
sbb
add
pop
push
mov
push
sbb
xchg
xor
jl
inc
add
jmp
cmpb
je
or
in
pop
pusha
aaa
movb
cwtl
inc
push
pusha
andl
fistpll
jb
push
es
xor
test
enter
add
xor
movq
dec
loopne
ret
cld
add
addr16
add
jo
scas
in
outsl
pop
push
icebp
jg
subl
mov
xor
mov
inc
stos
fwait
add
adc
in
into
lods
loop
add
adc
pop
fbstp
cmp
loope
xor
push
int3
sbb
and
sub
cmp
lock
arpl
fisttpl
and
add
mov
dec
rol
jmp
or
push
cld
pop
mov
adc
adc
adc
inc
adc
pop
pushf
add
xlat
scas
std
dec
popf
add
xchg
fstps
pushf
push
lahf
xchg
mov
outsb
xchg
loope
stos
xor
push
leave
add
lahf
in
das
add
bnd
pop
adc
dec
inc
add
mov
shl
aaa
cld
add
test
dec
adcl
iret
inc
dec
leave
add
fs
add
push
movsl
add
cmp
mov
into
fldcw
mov
inc
andl
xchg
rol
pop
ljmp
jg
or
loopne
stos
lret
mov
cmp
ds
inc
cmp
repnz
mov
sub
cwtl
jmp
leave
cmp
cltd
mov
xor
push
loop
loopew
or
mov
jo
pop
outsb
pusha
ljmp
stc
xor
fs
lock
inc
push
mov
lret
fdivrp
sbb
fisubrl
sbb
roll
xor
mov
addl
aas
ja
cmp
out
cmc
dec
inc
div
inc
add
icebp
pusha
fucom
js
jb
xchg
mov
popa
add
sbb
sub
or
pop
bound
pop
int
mov
or
test
pop
and
iret
xor
mov
dec
and
inc
aad
add
or
mov
cmp
mov
icebp
shlb
shll
lds
xchg
andl
ret
push
mov
out
nop
jmp
incb
repnz
adc
outsl
aas
and
out
xor
clc
addr16
andl
fisttpll
jmp
add
inc
js
add
imul
lcall
sbb
add
bound
jo
adc
loopne
imul
or
inc
push
push
dec
sti
add
dec
inc
dec
lock
icebp
adc
and
adc
mov
xlat
std
add
jno
add
loopne
pop
cmp
jnp
cmc
dec
cmpsb
add
loop
shlb
pop
or
jp
mov
sub
mov
mov
mov
and
push
inc
ficoms
cmpsb
pusha
cld
and
js
add
adcb
sub
mov
xor
cs
sbb
cmp
jbe
jmp
sub
ljmp
jmp
pop
test
push
pop
cltd
lods
and
in
jo
pop
add
sub
rcrl
xor
cmovbe
int3
insb
loopne
sti
xchg
pop
stos
xor
push
sub
inc
ja
push
jo
dec
lahf
jmp
or
add
adc
dec
pop
dec
cmpsb
add
mov
repz
in
ret
dec
icebp
roll
mov
mov
jmp
daa
insb
test
adc
mov
xchg
and
inc
sub
aas
add
push
jno
adcb
add
into
shl
movsl
mov
sbb
sbb
and
imul
lds
dec
adc
cmc
add
testb
lea
mov
push
mov
cmp
inc
nop
mov
add
mov
iret
dec
ss
push
adcb
stos
xchg
and
scas
and
cmpsl
cmc
inc
pusha
and
sbb
into
cmpsb
cwtl
loope
jle
sbb
mov
jne
fwait
mov
inc
jae
and
push
pop
pusha
dec
stc
sub
inc
ljmp
popa
or
mov
jno
add
dec
xor
add
and
ja
jmp
jbe
dec
in
jge
add
pop
nop
and
aam
andb
mov
in
xchg
add
inc
push
jno
insb
add
add
jnp
xor
xchg
sub
pop
jecxz
aaa
mov
enter
xor
pop
or
repnz
xor
adcb
lcall
xchg
or
rolb
fcmove
jl
mov
insb
rcrb
mov
xor
clc
mov
adc
and
mov
mov
sub
add
pop
pop
xor
iret
jns
insb
mov
daa
jecxz
adc
xchg
insb
add
push
repz
mov
xor
xchg
sti
add
cmp
je
nop
xlat
sub
xlat
out
xor
inc
sbb
test
pushf
fxch
cmp
add
sti
dec
lahf
mov
and
or
or
and
add
jmp
adc
mov
mov
xor
mov
ds
cmpsl
arpl
and
push
xor
push
dec
pop
loope
and
cmp
dec
pop
lock
adc
or
push
or
jl
ret
loopne
dec
sbb
or
or
xchg
clc
push
and
subb
arpl
daa
out
add
jbe
mov
mov
ss
mov
in
test
add
loop,pn
jno
out
inc
fistpll
test
cmc
add
rolb
ret
add
jp
dec
into
mov
push
xchg
inc
inc
mov
clc
xchg
test
loopne
jns
cld
add
dec
arpl
es
push
pop
shrb
idivb
jecxz
shl
jge
jae
mov
leave
or
jo
cmpsl
mov
pop
xchg
in
add
and
jno
gs
pusha
adc
mov
cmp
mov
nop
adc
mull
in
adc
rcll
adc
push
cmp
cmc
mov
sbb
lret
and
roll
add
roll
adc
pop
data16
or
arpl
push
insl
in
shll
xchg
pushf
add
imul
xlat
cmp
xor
or
shl
push
out
shr
bound
jle
push
pop
cmc
fstpl
imul
xor
daa
pop
aas
fst
add
loope
shll
fwait
add
popf
jmp
les
addr16
insb
mov
dec
xchg
dec
pop
inc
ret
les
pop
and
inc
lret
dec
stos
pop
aas
movl
mov
hlt
push
adc
sub
dec
loopne
sti
jo,pt
adc
imul
push
sbb
jns
bound
popf
faddl
mov
hlt
repnz
sub
add
sbb
cwtl
imul
adc
mov
iret
jge
adc
xor
xchg
add
mov
xchg
adc
loopne
mov
cli
sub
jp
add
icebp
iret
xor
push
int
movsb
jo
and
pusha
fbld
stc
ss
add
popf
aas
stos
popa
cmp
sub
xchg
leave
pop
out
pop
add
xor
push
bound
add
mov
jno
or
jnp
sub
cmp
fs
push
dec
cld
ret
aam
mov
outsl
ljmp
cmp
pop
das
dec
inc
addr16
add
or
sahf
add
sub
cmp
jle
mov
dec
pop
mov
in
addb
mov
lock
mov
inc
idivl
icebp
enter
enter
push
fwait
aad
xchg
push
inc
repnz
shll
jns
lock
pop
lods
adc
or
std
ljmp
movsb
adc
das
rclb
add
or
push
sbb
insb
sbb
repnz
pop
mov
inc
inc
add
outsl
add
idivl
push
add
ss
add
sub
cmc
jb
imul
mov
sub
or
mov
cmp
mov
add
call
adc
sbb
jmp
mov
imul
pop
sub
jae,pn
and
daa
jne
out
push
sub
popa
pop
out
negb
cmc
or
cmp
rolb
sub
xor
test
std
or
leave
dec
sbb
sub
in
add
and
pop
call
add
aad
xchg
cmp
incb
jae
or
jno
int
test
mov
in
cmp
arpl
hlt
inc
add
in
lahf
insb
nop
test
fisttps
movsl
lcall
push
pop
out
daa
pop
mov
pusha
mov
pop
pop
push
sub
inc
scas
add
in
adc
cwtl
mov
sbb
lahf
add
xchg
loopne
scas
dec
icebp
rcrb
adc
dec
popa
xor
mov
cli
and
pop
dec
mov
cmp
dec
bound
movsb
xor
push
jnp
insl
in
pusha
xchg
and
adc
movsl
in
outsl
mov
iret
mov
xchg
jo
add
and
add
mov
stc
xchg
popa
adc
xor
push
pop
mov
or
push
or
add
sbb
or
push
push
push
mov
push
push
ficompl
add
jge
sub
pop
xchg
loop
and
push
pop
xchg
lock
movsb
or
pop
jae
cmpsl
les
insl
inc
rclb
xor
icebp
enter
jg
hlt
mov
and
or
push
cmpl
xor
inc
les
or
pop
adc
cld
rclb
dec
sub
add
cmp
sub
add
mov
cwtl
push
sbb
out
mov
hlt
push
inc
inc
or
and
ret
add
cs
push
or
and
xor
or
mov
push
mov
cld
cmpb
jns
pop
and
adc
dec
pop
in
dec
add
xchg
adc
dec
mov
lret
push
jge
cwtl
es
add
mov
loope
ret
add
mov
sub
pop
xchg
pushf
dec
mov
dec
jg
hlt
xor
push
fcmovne
push
stos
and
sarb
mov
scas
pop
push
inc
mov
pop
pusha
add
cmp
cmp
scas
in
cmpb
jg
push
ret
push
enter
loope
ror
aam
nop
mov
mov
add
and
or
mov
or
xchg
jp
add
inc
das
rclb
stos
sub
fists
adc
mov
jbe
rcrb
mov
aad
sub
push
sti
scas
in
lret
cmp
add
pusha
add
push
in
call
dec
mov
stos
cli
dec
jo
out
xchg
add
jp
pop
cmc
mov
cmpsl
pushf
jae
pop
sub
cltd
mov
push
xorb
sub
pop
or
jo
scas
xchg
sarb
nop
pop
xchg
lcall
js
mov
dec
add
cli
mov
rorl
data16
pop
loop
add
jbe
xor
out
xchg
lock
pop
ljmp
jecxz
int
adcb
add
out
dec
jl
cmp
es
mov
push
aad
cmp
or
cmp
lahf
loope
xor
xor
mov
push
je
pop
das
pop
std
or
sbb
ljmp
jle
and
lods
pushf
push
push
mov
add
mov
pop
cld
mov
and
repz
outsb
pop
movsl
insb
je
inc
xor
mov
fdiv
dec
mov
cmc
dec
jbe
daa
push
push
and
inc
orb
jecxz
push
into
jb
add
add
mov
ror
mov
cld
mov
lds
in
stc
adc
in
and
sub
sbbb
clc
into
icebp
and
add
pop
stc
jl
mov
adc
adc
popa
xor
xor
rcrb
in
add
push
and
popa
xor
pop
xor
nop
popa
lcall
arpl
push
mov
stos
pop
and
xchg
pushf
mov
imul
das
daa
sub
cmp
movsl
shrb
cmpsb
aaa
stos
clc
call
shrb
clc
ds
pop
and
dec
dec
call
or
addb
sbb
cwtl
jbe
xchg
pop
dec
inc
rorl
das
pop
add
rcrl
movnti
mov
add
jl
mov
and
add
rcll
enter
mov
cmp
push
pop
dec
cli
add
mov
lahf
lret
and
in
rol
add
movsl
add
mov
mov
xor
out
and
mov
dec
sahf
sub
adc
mov
testl
fsubs
inc
cmp
adc
mov
sbb
jnp
inc
nop
arpl
and
inc
xor
xchg
mov
fcmovnb
push
xchg
xchg
sub
or
jb
addb
jmp
ja
sbb
insb
nop
jnp
push
push
les
push
push
pop
pop
stos
push
aas
mov
int
adc
and
into
cmp
xor
test
xchg
aam
in
nop
aam
push
cwtl
push
pop
in
xor
xchg
sub
xchg
mov
imul
int3
jl
jno
fadds
insl
xchg
push
sub
stos
ljmp
mov
into
pop
xlat
and
jge
push
adc
jmp
cmpsb
cmp
rcl
adc
rcr
inc
shlb
inc
arpl
rorb
nop
test
out
sbb
daa
fstpl
shl
adc
mov
stos
adcb
les
jns
loope
inc
push
sub
lret
add
rolb
mov
push
sub
xor
or
xchg
or
xor
in
dec
inc
mov
add
push
sbb
jne
add
push
inc
std
inc
lock
push
dec
popa
or
frstor
in
pop
push
inc
and
add
xor
mov
in
lock
hlt
cltd
xor
xchg
mov
adc
add
insb
out
fcomps
jno
nop
push
repnz
std
call
decb
and
adcb
bound
rcrl
rorb
dec
imul
rol
inc
xchg
add
adc
and
sub
int3
adc
fs
push
lock
or
adc
mov
fimuls
pop
and
jb
dec
pop
inc
adcb
pop
or
xchg
das
adc
fs
repnz
out
repz
clc
faddl
sbb
mov
and
in
push
clc
cmpsl
push
xchg
ret
xor
cltd
pop
push
movsl
xchg
aaa
loop
xchg
pop
icebp
add
mov
mov
vpsubw
sarl
sbb
xchg
pusha
lcall
das
pop
aaa
sbb
dec
mov
inc
dec
iret
add
movsl
mov
xor
dec
jns
adc
adc
xor
decl
mov
push
dec
fwait
les
js
addb
call
outsl
push
mov
xchg
push
cltd
loop
sbb
cmpsl
add
and
arpl
add
mov
shll
jb
jp
add
mov
js
and
test
cmp
ficompl
sbb
push
stos
jbe
stos
dec
sti
lea
jns
andb
xchg
dec
push
dec
dec
dec
mov
sub
call
push
push
jmp
sbb
jp
mov
pop
dec
mov
jo
cmp
call
sbb
sbb
adc
xchg
lock
and
outsb
add
xchg
mov
loop
push
enter
sub
orl
dec
clc
or
repnz
mov
cmp
mov
inc
outsb
andl
lock
movsb
out
sbb
int
push
and
rorl
dec
jp
loop
and
mov
incb
fiadds
xor
inc
cmp
shufps
movsl
aaa
or
xchg
xchg
dec
imul
cmp
mov
jle
xor
test
and
movsl
push
xor
add
jge
mov
jl
cwtl
and
xchg
mov
mov
add
or
push
scas
cmp
inc
mov
push
jb
sub
cmp
inc
push
adc
out
movsb
inc
pop
pop
xor
test
add
test
push
shlb
adc
bound
sbb
jo
js
dec
subl
xchg
xchg
rolb
les
stos
push
cmp
add
lock
add
jg
ret
dec
rcrl
andb
jbe
adc
int3
or
sub
cmp
cmc
xor
repnz
xchg
lock
cmp
fs
add
sysexit
add
or
cmp
stc
add
and
or
les
mov
jae
mov
and
xchg
nop
fwait
inc
add
stc
sub
dec
inc
add
adc
test
adc
pop
push
imul
dec
or
add
popl
jge
inc
cmc
testb
dec
cmp
push
xchg
push
inc
call
xchg
insl
lds
hlt
jae
adc
cmp
inc
xor
sbb
mov
das
jp
or
into
pop
xchg
imul
test
jbe
add
pop
nop
dec
pop
fisttpl
and
push
push
pop
xchg
inc
mov
lods
pmaddwd
sbb
adc
lea
icebp
iret
pop
or
sub
fwait
cmp
jle
and
add
cli
or
dec
faddp
scas
aam
in
jbe
pop
ret
add
cld
jno
inc
stc
mov
fs
cs
stc
mov
jmp
insb
sub
shl
test
push
loopne
inc
sbb
loopne
arpl
push
adc
outsb
add
and
repnz
add
xchg
mov
icebp
imul
je
pop
mov
xchg
adc
pop
xchg
das
test
mov
mov
icebp
push
xchg
pop
jnp
sarl
shlb
aas
dec
enter
sbb
sub
cmp
lds
pusha
add
sbb
mov
adc
xor
pop
leave
jle
dec
insb
add
repnz
push
inc
aad
call
mov
push
stc
mov
or
test
mov
jns
dec
mov
sub
adc
dec
sbb
js
dec
add
mov
int3
push
xchg
add
adc
and
adc
dec
into
out
xor
or
cmp
xchg
scas
mov
sbb
jg
adc
cltd
frstor
adc
xchg
sub
data16
inc
and
cmp
pop
out
pop
clc
push
ss
dec
mov
je
sub
dec
push
out
pop
decl
xorb
ja
jecxz
jbe
cli
push
imul
sub
add
andl
and
pop
testl
adc
enter
shl
jmp
xchg
dec
push
scas
mov
push
mov
adc
dec
int3
or
jl
adc
cmp
fildl
dec
aad
flds
push
push
xchg
scas
dec
or
movsb
jp
and
push
cmp
insb
or
xor
pop
mov
imul
mov
xlat
pop
sbbb
ja
add
jl
fiadds
pop
dec
dec
lock
mov
pop
mov
adc
ficompl
mov
jp
push
andb
xor
mov
in
in
mov
and
lret
add
nop
das
and
lods
push
bound
xchg
sub
imul
or
add
mov
aas
mov
xor
pop
xor
bound
mov
cmc
pushl
mov
mov
and
jbe
leave
xchg
push
adc
dec
xor
shr
mov
es
sub
daa
inc
mov
mov
add
loop
add
jg
and
pop
sub
sub
push
aaa
subl
adc
in
frstor
icebp
dec
mov
dec
push
mov
pusha
sahf
dec
add
mov
adc
add
inc
add
mov
sbb
dec
inc
pusha
push
test
cltd
cli
movsl
add
or
fs
shrb
cmc
sbb
adc
inc
inc
mov
rorl
sbb
or
mov
mov
add
andl
add
xchg
cltd
push
out
sbbl
sub
in
xor
lea
mov
popa
stos
out
adc
rcll
or
ja
cmp
icebp
dec
adc
push
sbb
xor
shrl
xor
xlat
shr
and
or
test
dec
test
xchg
lahf
xchg
out
sbb
outsl
inc
jno
mov
lods
pusha
loopne
or
clc
mov
pop
and
mov
or
mov
add
popf
dec
hlt
pop
fistpll
jno
and
loope
jns
sbb
xchg
inc
in
out
add
push
mov
jo
push
ds
add
xor
arpl
rolb
or
cmp
adc
add
xchg
xor
dec
lret
push
daa
sbb
loope
xchg
cmp
or
mov
inc
add
mov
cmp
inc
and
cld
push
pusha
fwait
dec
mov
push
and
sub
add
sbb
in
mov
cmp
cli
sti
cs
dec
cld
mov
add
repnz
xchg
sub
xor
add
in
xchg
sub
pop
add
inc
shlb
aas
xor
sbb
mov
cmp
insb
mov
test
clc
and
ja
int
aaa
cld
or
outsb
das
shlb
popa
push
inc
ja
repnz
add
xchg
loopne
push
popa
mov
lahf
sub
add
call
pop
hlt
push
add
fstl
in
push
cltd
test
lock
call
sbb
mov
outsb
imulb
outsb
pusha
je
cmp
adc
mov
rolb
mov
js
cmp
inc
mov
sti
dec
in
jo
ret
add
adc
les
jns
icebp
pusha
inc
pusha
mov
jl
popf
nop
jmp
push
mov
push
adc
add
push
incb
or
movsl
shr
cli
inc
js
setp
pop
cmc
mov
xor
pop
movb
adc
mov
testb
sub
fistps
stc
add
pusha
lds
inc
cld
sub
mov
jo
and
outsl
cli
dec
add
aam
dec
or
cs
rclb
popa
add
pop
jmp
jl
and
dec
rdrand
jecxz
js
aas
pop
mov
push
hlt
out
add
xchg
cltd
push
mov
out
inc
data16
scas
je
es
mov
adc
pop
test
lahf
xchg
ret
mov
jo
mov
pusha
inc
pop
add
nop
xor
xchg
jp
pop
insl
jg
sarb
test
dec
fmulp
sub
lret
outsb
es
pmulhuw
sbb
xor
into
jo
add
fwait
push
push
add
or
testb
out
repnz
faddl
test
add
shrb
inc
pop
push
movsb
xchg
fiaddl
icebp
adc
push
mov
dec
xchg
pop
das
hlt
mov
xchg
mov
mov
push
or
iret
and
mov
inc
inc
stc
dec
push
aaa
ds
outsb
repnz
into
or
jle
call
xor
and
xor
pop
sbb
ret
and
or
cwtl
int
adc
push
sbb
jg
les
and
push
lock
xchg
or
mov
rcl
aaa
or
data16
nop
popf
xchg
bound
dec
ds
sbb
sub
cmp
adc
cli
add
xor
bound
pop
paddb
inc
fsubs
mov
adc
testb
adc
ss
or
std
cmpsl
add
mov
add
dec
imul
cwtl
enter
pop
in
movsl
dec
or
notb
dec
imull
jae
loop
add
or
insb
cs
cs
cmp
add
fadds
insb
push
jnp
out
popf
push
jne
mov
mov
push
mov
push
pop
jno
cs
xchg
add
pop
mov
stos
jb
daa
lret
sbb
sbbb
pop
inc
and
icebp
push
adc
mov
jno
loope
sub
xlat
pop
sub
add
mov
push
aaa
push
sub
nop
push
mov
xchg
add
aad
in
inc
mov
and
call
jns
pop
pop
icebp
push
bound
adcl
push
jbe
outsb
sub
stos
push
mov
inc
aaa
add
adc
inc
dec
push
push
sbb
add
inc
idiv
adc
xorl
fadd
dec
in
or
jae
fs
out
push
add
inc
jbe
loop
ja
pop
scas
rclb
add
popa
mov
stc
cmp
jl
and
push
lret
shlb
mov
orl
push
jns
push
cmp
or
fs
add
les
jle
push
jecxz
sub
jmp
stc
or
xchg
or
dec
fs
push
hlt
in
cmp
dec
pop
fs
add
sti
daa
mov
fidivrl
add
clc
mov
xchg
add
add
lret
push
xchg
and
or
out
mov
inc
lret
mov
and
int3
add
pop
inc
stos
lea
sub
andb
sbb
and
mov
shrl
cmpsl
or
int
test
sbb
adc
pusha
pop
ret
pop
lods
lds
test
xor
inc
outsl
movl
jg
mov
test
daa
push
or
add
cmp
lahf
push
cs
imul
out
jns
add
sbbl
add
jg
and
das
cmp
push
lret
out
mov
push
xchg
add
dec
shl
pop
push
inc
mov
sub
and
mov
les
or
cmp
inc
pop
fs
jno
xor
jmp
daa
out
or
pop
sbb
lock
inc
or
imul
adc
cwtl
scas
jmp
pop
jg
jne
lock
sub
pop
add
push
mov
inc
add
or
or
adc
push
push
sub
mov
xchg
pusha
adc
shll
in
pop
lods
and
mov
dec
mov
add
sub
mov
add
cmp
aam
dec
adc
add
daa
push
mov
in
scas
and
pop
add
push
test
and
inc
inc
push
scas
and
adc
or
aaa
enter
inc
inc
push
push
pushf
push
cmp
adc
push
push
add
cmp
shlb
cwtl
test
inc
sbb
aam
add
xchg
inc
scas
lea
push
push
push
cmpsb
mov
rolb
mov
call
mov
xchg
pusha
rolb
test
add
and
or
xor
loope
inc
cmp
andl
sbb
mov
jge
jle
loope
mov
cltd
das
inc
fsubrs
add
pop
mov
add
adc
or
clc
mov
movsl
inc
push
in
fsts
adc
add
add
or
inc
add
adc
mov
adc
mov
jno
mov
xor
or
ret
and
mov
bound
sbb
cmovp
mov
ja
add
pop
sub
or
mov
push
mov
lcall
mov
xor
pop
sbb
or
hlt
lock
pop
mov
sub
je
or
mov
add
mov
add
dec
or
jp
push
jg
jg
pop
call
popa
cmp
mov
xorb
add
and
in
aas
jp
add
jmp
popa
add
cwtl
pop
cmp
adc
out
add
xchg
mov
jmp
fadd
es
push
cmp
sub
and
jo
xor
dec
stos
inc
or
popa
or
lock
sbb
or
xor
loopne
sbbl
jg
jnp
sub
into
mov
movb
mov
mov
test
call
fdivl
call
mov
push
fidivs
push
addl
enter
movsl
add
jo
inc
fisttpl
fnsave
sub
pop
call
push
cs
jle
sbb
and
pop
mov
pop
jp
mov
xor
addr16
daa
jp
jmp
or
cmpsb
adc
pop
xchg
xor
insl
sahf
hlt
fs
test
fnstenv
pop
ffreep
rorl
test
lods
mov
sbb
call
out
pop
sub
popf
add
sub
ret
and
add
icebp
sub
or
cmpsl
in
je
add
popa
inc
in
pushf
adc
int3
pushf
or
movsb
jbe
sbb
shl
rorl
clc
xchg
add
es
loope
adc
mov
mov
jae
push
sub
lcall
rolb
data16
and
loop
mov
xor
arpl
lods
dec
into
jl
xor
popa
inc
cmp
xchg
sbb
jne
fstpt
adc
lds
stos
mov
xor
dec
call
mov
pop
sub
inc
ds
push
push
and
sbb
pusha
out
imul
ljmp
cmp
pop
xor
je
mov
vhsubps
clc
lea
and
add
inc
push
popa
enter
sub
adc
mov
push
jo
sub
adc
jp
je
or
cltd
mov
imul
sub
dec
sbb
rol
add
jbe
call
repz
add
shlb
mov
cli
mov
je
out
jbe
cmp
sub
adc
rcl
adc
pop
mov
push
neg
add
shll
cmp
sbb
adc
cmp
mov
fisubs
test
gs
or
fldenv
mov
dec
pop
adc
stc
xchg
xor
jg
or
fcmovbe
inc
out
add
imul
adc
dec
add
out
jno
pop
xchg
insb
adc
popa
xor
xchg
adc
add
xlat
mov
in
or
mov
or
pop
and
push
movsl
adc
sub
movsl
xor
lahf
add
dec
lods
icebp
cmp
or
lock
mov
adc
call
loopne
lret
mov
test
out
dec
movsb
dec
out
lahf
add
dec
in
rcl
ret
mov
sub
enter
lret
dec
add
mov
mov
lock
int
hlt
ljmp
fcmovnb
ret
mov
pop
mov
jo
nop
sbb
jp
les
add
icebp
jge
pushf
mov
add
inc
jns
cltd
in
sub
xor
aaa
add
add
sub
cmp
inc
je
sbb
add
sahf
xor
dec
xchg
adc
ret
hlt
data16
add
pop
add
mov
sub
mov
ja
and
insl
pop
push
sub
rorb
mov
mov
mov
in
adc
xor
mov
and
jae
rorb
add
ljmp
clc
lods
jo
push
add
xchg
push
dec
push
sbb
mov
cmpsl
lock
or
and
cmp
adc
or
sbb
mov
push
test
mov
shrl
mov
sarb
jno
jge
les
jmp
inc
call
sbb
flds
sub
lds
mov
scas
jo
push
sbb
stos
xchg
cmp
aad
xchg
or
cmp
dec
sbb
xor
pop
loope
test
ljmp
addr16
jo
sub
in
xor
pushf
sbb
push
orb
stos
bound
jecxz
cmpb
loop
insl
mov
int
add
cmpl
testl
jg
xor
add
jmp
xor
lods
fistpll
jle
pop
mov
jg
xchg
add
pop
andl
aas
test
aam
add
out
or
xor
xchg
fldl
nop
xor
mov
push
dec
or
rcll
mov
sbbl
int
int3
xor
add
sbb
inc
aam
sti
pop
cmp
cmp
in
mov
mov
add
pop
cli
pop
insl
jo
jle
call
add
xor
and
call
mov
inc
in
cwtl
addr16
jnp
cmp
mov
mov
and
add
xchg
lods
cmpsb
xor
cwtl
fidivrs
pop
btsl
inc
push
aad
sub
cmp
and
add
les
js
pushf
nop
push
sub
inc
adc
add
mov
stos
les
push
lods
leave
mov
add
cmpsl
in
xchg
mov
lods
mov
cmc
ficoms
pop
sub
lcall
pushf
pop
dec
add
arpl
divl
jl
add
lret
add
fisttpll
push
sub
add
adc
lahf
pop
mov
inc
or
cmp
or
and
insl
test
sbb
loop
rorb
add
enter
nop
dec
mov
push
add
mov
fwait
jmp
stc
sub
push
arpl
hlt
xchg
add
push
push
into
out
cwtl
push
sub
jbe
mov
leave
xchg
cmp
xor
mov
xlat
bound
add
fisttps
push
and
in
xchg
popa
and
mov
cltd
add
fs
stos
std
scas
aam
pop
jmp
lock
leave
shr
lods
add
rorl
hlt
int3
ss
add
mov
mov
nop
insl
add
push
jmp
adc
adc
test
enter
pop
mov
jb
sarl
xor
lcall
inc
sti
popa
nop
and
repz
mov
jge
xchg
ret
popa
inc
pop
pop
push
inc
add
jne
repz
cmp
add
js
push
add
adc
jmp
ds
add
mov
jg
push
repz
add
mov
mov
push
and
subb
outsb
xchg
call
int3
add
pop
sbb
dec
xor
jg,pt
test
out
in
nop
mov
xchg
cli
push
aas
pop
add
les
jb
cs
pop
inc
dec
fistpl
mov
ss
adc
mov
pop
int
mov
pusha
arpl
or
lahf
out
add
lret
outsl
push
adcl
lock
je
add
xchg
call
add
mov
inc
dec
add
push
mov
mul
lods
jb
stos
dec
pop
or
mov
add
insl
add
jp
repnz
ja
inc
gs
sbb
sub
cs
in
push
scas
jae
xchg
mov
add
cmp
add
iret
jg
call
jb
sub
xor
add
ret
inc
xchg
add
lcall
and
xchg
bound
add
loope
and
add
mov
ret
and
in
xchg
cltd
add
in
jp
push
rcrb
add
push
push
js
jae
jecxz
lcall
mov
repz
mov
dec
stos
enter
add
pop
cmp
aas
push
lret
and
cmc
cwtl
test
push
shlb
mov
pop
int
and
pusha
xchg
outsb
cmpsl
xchg
and
lods
sbb
or
stos
pop
jmp
push
into
inc
xchg
add
dec
outsb
fiaddl
shl
dec
add
fildll
adc
inc
mov
clc
mov
lret
xlat
sahf
cmpsb
fdivr
test
adc
fimuls
xor
inc
mov
lock
push
popa
cld
push
loopne
and
adc
stc
mov
ret
adc
mov
sbb
dec
pop
lods
cmp
dec
cwtl
test
mov
movsb
xor
xchg
or
add
pop
push
xchg
inc
fstp
mov
rcrb
or
filds
sbb
add
repnz
popf
push
adc
ret
and
mov
lret
js
xchg
push
add
daa
xor
mov
jl
loop
mov
or
es
and
dec
or
push
add
and
cld
sub
test
add
pop
sti
int
add
outsl
jnp
xor
xchg
xor
clc
cmc
pop
push
loope
sahf
outsl
jl
add
fisttpll
mov
mov
sub
push
int
or
and
pop
outsb
nop
xlat
cmovs
sub
push
inc
test
test
mov
add
mov
or
orb
inc
les
mov
sbb
cmp
or
shlb
and
xchg
add
lcall
insb
add
fimull
or
jmp
add
mov
into
cs
add
jl
cs
sbb
fsubs
push
add
aas
cmpb
les
adc
sub
ret
pop
sub
dec
mov
mov
es
and
mov
add
in
sbb
inc
add
jp
enter
add
icebp
jae
add
jle
out
sub
add
iret
add
mov
push
mov
push
imul
out
inc
sbb
sbb
cmc
mov
enter
add
std
lcall
out
sub
pushf
jg
pop
fldcw
adc
xchg
inc
ret
jmp
lods
sbb
inc
daa
jp
pop
in
add
jbe
inc
add
pop
ret
add
mov
daa
add
movsl
cmc
pop
sarb
mov
add
push
mov
inc
mov
jecxz
imul
jae
inc
pop
cltd
mov
incl
xchg
sub
clc
lea
pop
aaa
nop
xor
sub
mov
xor
cmpb
ds
fs
icebp
repnz
lea
cmp
mov
nop
lret
ja
xor
add
push
sbb
clc
add
and
mov
ficompl
repz
lods
ja
imul
pop
incb
xor
loope
add
addr16
hlt
cwtl
loop
xor
insl
lcall
add
sbbl
adc
mov
ss
mov
add
pop
lea
fimuls
psrld
out
popf
rcrb
arpl
pop
shll
push
mov
scas
jp
cld
out
add
sbb
pop
mov
iret
ficoml
xchg
sarb
add
lea
xor
pop
hlt
add
leave
cltd
xchg
jmp
jp
xchg
test
movsb
mov
loopne
cmp
add
sub
lds
ss
lret
sahf
add
push
cltd
in
push
add
xchg
cmpsb
add
sbb
jecxz
in
bound
ret
aaa
mov
sbb
inc
daa
inc
push
cmp
add
arpl
lea
cld
fcompl
imul
dec
scas
loopne
test
add
js
xchg
aam
stos
loopne
scas
and
push
insb
enter
aas
pop
mov
mov
add
xchg
mov
nop
mov
add
test
aas
adc
mov
cwtl
popf
pushl
outsb
jl
add
cmpl
je
mov
add
pushf
add
mov
int
push
scas
pop
cs
push
nop
inc
test
out
cmp
mov
call
and
adc
push
mov
filds
or
sub
add
inc
adc
loop
dec
neg
pop
and
add
xorl
or
xchg
jae
add
ja
fcompl
add
push
fldl
sbb
cmp
or
out
sahf
add
pop
aas
movsl
test
ljmp
add
stos
dec
xchg
add
shrl
add
das
jo
sti
jecxz
add
inc
push
les
sub
add
cmp
addl
inc
xchg
dec
ret
sub
xchg
aad
sub
out
xor
jbe
adc
imul
add
pop
cmp
push
frstpm(287
ja
ljmp
cltd
in
incl
and
pop
cmp
xor
add
inc
push
stc
ret
and
cmp
mov
lret
sub
scas
xchg
add
bound
scas
divl
add
in
mov
push
fildl
mov
loopne
and
test
stc
sub
inc
pop
add
jp
fistpl
jle
call
icebp
fwait
add
lret
lods
push
add
and
call
xor
add
dec
jecxz
or
mov
ds
js
jge
es
add
pop
pop
add
cmp
sub
add
cmpxchg
movsl
lods
sbb
add
movsb
fimuls
sbb
xchg
push
adcb
push
inc
pop
mov
outsl
add
aaa
addl
add
lock
sbb
mov
sti
or
cs
loop
minps
xchg
gs
mov
add
add
cmp
push
add
xchg
imulb
add
sub
or
loop
data16
je
ret
add
adc
pop
mov
sti
add
dec
pusha
jecxz
inc
loope
fdivrs
lahf
mov
shll
add
aas
push
mov
scas
lock
pusha
mov
mov
mov
and
pop
xchg
addb
in
add
sti
xor
add
mov
shl
and
inc
js
jmp
cmp
mov
cwtl
fwait
andb
sub
xchg
sbb
mov
mov
in
sbb
jp
cmpsl
ja,pt
push
iret
addr16
push
maxps
xchg
xchg
repnz
jbe
dec
addb
das
dec
test
and
xor
pop
ret
sub
aas
aad
lahf
enter
add
shlb
mov
pop
jae
jae
or
mov
push
lahf
xchg
push
cmp
sbb
sub
addb
add
cwtl
push
xorb
mov
mov
or
add
fists
pusha
xlat
push
pop
add
jmp
cmp
dec
mov
dec
popa
repnz
xchg
mov
inc
mov
mov
cmpb
out
cwtl
fidivrl
jnp
in
repnz
rol
inc
loopne
leave
add
jno
jne
iret
loop
inc
xchg
pop
lock
ret
in
mov
popf
scas
adc
adc
rclb
mov
pop
js
ret
negl
mov
jp
mov
lret
rol
mov
bts
movsl
icebp
mov
call
xchg
adc
jno
add
jae
push
push
aam
cmp
clc
pop
adc
inc
lret
dec
cwtl
idivl
add
jo
dec
pop
xchg
fcompl
xor
jecxz
sti
mov
jge
test
adc
pop
fwait
movsb
call
mov
push
inc
test
out
or
ljmp
iret
ljmp
lea
pop
out
fmuls
in
cmp
je
add
sub
sahf
aas
push
into
cmp
sbb
in
push
out
mov
testl
imul
clc
add
sub
push
cwtl
add
jbe
mov
jne
das
mov
std
inc
cmp
pop
add
test
shrb
cmp
sbb
lahf
dec
add
test
inc
out
add
std
mov
add
or
popa
fcoml
cmp
sub
mov
and
loopne
add
jbe
faddl
sbb
xchg
push
sbbw
push
cmp
loopne
popa
add
mov
pop
fwait
add
mov
test
std
push
clc
icebp
sub
fistl
cltd
test
aam
call
xor
in
add
sub
dec
dec
inc
aad
cli
jmp
push
cmp
fmuls
test
dec
pop
mov
jl
adc
divl
adc
cmp
cld
fisubrs
mov
je
lods
add
jl
punpckhdq
mov
stc
or
leave
mov
cmpl
xor
sbb
popa
add
test
inc
rorb
dec
jne
scas
add
faddl
hlt
sbb
shlb
lods
mov
inc
inc
out
cli
loop
add
sub
inc
cmp
add
sub
out
push
add
add
addr16
insb
add
arpl
lock
add
aam
cltd
lock
push
loopne
or
shlb
inc
xchg
push
fbld
shl
ret
pop
fadds
scas
cmpsb
add
mov
add
rdtsc
in
ficoml
add
adc
stos
add
dec
rol
shr
add
lock
mov
add
fadd
jecxz
lret
jnp
add
add
mov
jne
loop
lds
add
daa
pop
jno
fiaddl
cmp
push
mov
cmp
mov
push
shrb
fiadds
pop
inc
jg
ss
add
lret
push
lea
test
sbb
ljmp
enter
test
sbb
sub
add
sbb
jo
sub
mov
pusha
lahf
push
js
push
testb
bound
leave
sub
add
mov
inc
cmp
adc
pop
inc
clc
test
or
jns
xor
in
les
mov
decb
add
mov
std
add
xorb
aaa
cmpsb
jns
add
jbe
dec
add
dec
lret
loopne
mov
test
cmp
sbb
jne
add
mov
adc
xor
enter
les
lods
and
scas
add
xlat
enter
jbe
cmp
into
inc
sub
sbb
lods
jbe
add
mulb
jnp
loope
mov
and
ror
jp
testb
aad
fdivr
sub
jno
or
popf
cmc
sbb
and
cwtl
xchg
dec
add
push
fwait
mov
sbb
sti
push
and
pop
push
cs
and
and
adc
enter
fsubs
pop
dec
jo
inc
mov
adc
shlb
add
test
aaa
stos
or
aas
xchg
xchg
xchg
mov
or
aad
pushf
adc
jbe
nop
fistps
int
clc
or
fdivl
pop
jo
dec
sbb
gs
xor
xchg
add
add
and
lea
mov
mov
xor
mov
mov
jbe
inc
add
sbb
push
cmp
jmp
adc
mov
addr16
xchg
jno
sub
add
out
testb
cli
or
cmp
add
scas
roll
pop
loop
sub
fdivl
and
scas
pop
sbb
mov
cld
int
jb
pop
add
or
pusha
xchg
mov
add
sahf
mov
sub
mov
lock
or
inc
add
jbe
add
add
push
pop
lds
icebp
adc
sub
add
xor
sub
mov
add
into
dec
inc
mov
enter
cwtl
shl
add
mov
cmp
std
cmp
adc
jle
push
push
mov
aad
push
jae
or
adc
mov
xorl
xor
push
add
shlb
mov
int3
xchg
mov
xchg
add
mov
aam
sub
xchg
mov
or
pusha
mov
jg
add
cmpsl
add
mov
fmul
inc
adc
add
adc
push
int
sahf
addl
mov
mov
std
mov
int
add
inc
data16
xchg
jnp
xor
sub
sbb
add
aas
imul
or
lcall
ss
cwtl
pop
les
inc
sbb
cmp
aam
pop
repz
clc
jae
adc
lcall
fdivl
rolb
mov
or
adc
cmp
adc
jge
or
stos
cwtl
add
shll
sub
add
jbe
inc
add
pop
lcall
adc
test
push
fmul
dec
inc
xor
addb
inc
jo
test
negl
add
or
sub
repnz
out
jno
cwtl
mov
stos
push
cli
inc
cmp
xor
lea
leave
mov
add
push
out
pop
inc
int3
dec
push
in
rolb
cmp
out
mov
mov
push
mov
in
xor
repz
shrl
and
fiadds
jg
jo
nop
test
lahf
sub
pusha
cmp
cwtl
push
jmp
inc
add
rcrb
aaa
sub
fiadds
add
test
xor
stos
add
je
jns
jo
out
inc
and
pop
cmp
mov
dec
and
push
das
out
call
outsl
dec
cmp
mov
and
mov
movsb
add
scas
inc
sbb
add
jbe
adc
addr16
pop
jns
fwait
cwtl
xor
int
sub
add
xchg
mov
mov
test
loop
mov
add
inc
mov
pusha
sub
mov
add
jae
fstps
mov
pop
mov
mov
insb
bound
rol
cmp
cmpsb
out
cs
add
test
push
add
xchg
movsb
xor
jne
jge
stos
fiadds
jb
add
mov
addb
xchg
sbb
lods
xlat
testb
cmp
add
scas
add
incl
pop
pop
jge
xchg
jns
mov
push
and
xchg
scas
add
jmp
and
daa
pop
aam
lds
cwtl
stc
add
mov
add
jo
or
xchg
out
add
fisubrs
cli
xlat
stos
pcmpgtd
inc
out
adc
and
out
insb
cmpsl
js
or
fadds
repz
popa
jecxz
add
jns
subl
addb
stos
std
add
lock
add
dec
test
jbe
add
sbb
pop
in
icebp
add
repz
push
fptan
stos
movsl
mov
dec
jns
add
mov
add
jbe
dec
iret
or
cmp
call
js
addl
mov
add
push
cli
pushf
out
or
stos
dec
fidivs
popf
push
es
dec
and
mov
or
mov
fistpll
adc
inc
notb
push
inc
mov
scas
dec
imul
pop
and
adc
das
shrb
adc
leave
mov
pop
out
pop
add
inc
inc
dec
stos
sbbl
rclb
and
cmp
add
cmpsb
mov
ret
enter
nop
gs
pop
sub
push
push
loop
cmp
roll
inc
xchg
mov
xlat
jnp
xchg
data16
sub
call
add
addr16
arpl
adc
clc
icebp
push
pop
sub
callw
dec
adc
sbb
stc
jle
and
add
cmp
mov
jmp
or
ja
cld
jg
add
leave
push
jne
xchg
or
push
std
ja
mov
sub
add
mov
stc
dec
shlb
fmuls
cmpsb
dec
mov
es
and
sbb
enter
addb
pop
and
divl
add
mov
sub
sub
fiadds
and
xor
stos
mov
adc
nop
xor
loope
rclb
decb
andl
adc
mov
loopne
movsb
or
sub
add
popf
fadd
cmp
jo
push
and
out
push
cmp
add
insl
sbb
insb
fdivl
jbe
gs
and
es
hlt
test
xchg
dec
aas
sub
add
in
outsl
add
pop
push
add
es
dec
loop
sub
enter
setno
inc
inc
sub
jge
add
sti
aas
or
dec
cmp
addl
loopne
jnp
ja
clc
add
nop
scas
sbb
ret
push
add
mov
xlat
incb
add
nop
pushf
adc
and
sub
leave
shlb
inc
add
dec
jnp
fsubs
outsl
ja
add
adc
dec
jno
shlb
mov
leave
aaa
cmove
mov
loop
daa
idivb
and
pop
lds
jns
lea
shll
xchg
aam
cmp
aaa
fsub
lahf
lds
or
add
add
and
xor
add
sbb
test
add
push
push
sub
testl
rcrl
or
dec
add
pop
pusha
adc
add
leave
cs
aas
or
add
and
cwtl
ljmp
fidivl
pop
in
jbe
add
cmp
push
add
xchg
loope
aas
cmpsb
movsb
add
arpl
clc
scas
sbb
shlb
imul
ljmp
and
jmp
pop
stos
dec
repnz
adc
add
call
imul
pop
inc
add
or
sbb
adc
add
aam
int
add
movsl
add
xor
testb
insb
add
adc
jnp
push
push
mov
adc
call
pop
xchg
aas
ficompl
loopne
daa
loop
pop
shlb
xchg
out
cltd
insl
add
or
or
and
js
dec
into
pop
mov
cmpb
daa
pop
mov
fcomps
xchg
test
add
fists
clc
xor
add
fcomps
fcmovu
enter
inc
push
dec
jg
pop
orb
or
fs
shll
sub
f2xm1
stos
pop
dec
adc
orl
inc
push
shl
push
mov
icebp
add
stos
push
sub
shll
cmpb
push
stos
dec
lret
mov
push
mov
aaa
mov
ljmp
pop
add
dec
and
gs
pusha
mov
insb
sub
add
dec
xor
imul
mov
ret
ljmp
out
out
push
outsl
call
pop
sub
fistpll
xchg
enter
add
out
cmp
repnz
add
push
ret
mov
outsb
fmuls
les
popf
push
out
iret
jmp
add
subl
or
dec
sub
sub
add
pop
xchg
popw
add
test
xchg
les
push
outsl
jp
inc
in
enter
push
scas
mov
push
iret
enter
add
push
fiaddl
push
test
fcompl
dec
lahf
hlt
jb
and
mov
rolb
add
lret
add
or
rcll
roll
icebp
add
push
in
inc
es
mov
loopne
sub
push
pop
push
rolb
rclb
arpl
cmp
in
jae
pusha
std
imul
add
stos
in
pop
int
xor
mov
pop
adc
push
gs
arpl
lock
mov
push
add
idivl
adc
arpl
cmp
fwait
xor
sub
push
and
outsl
stos
inc
sub
mov
dec
rorb
cmp
sbbl
add
dec
jb
out
cmp
push
sub
icebp
fidivs
dec
mov
push
adc
add
xchg
jae
jo
xchg
pop
es
fwait
cmp
pusha
mov
repnz
mov
mov
cmp
outsl
xchg
mov
loope
cmp
cmp
lods
mov
add
shlb
jbe
cwtl
or
inc
jns
pop
lds
xchg
sub
add
add
cmp
movsb
and
scas
sub
clc
add
push
js
pop
jl
jo
mov
flds
mov
scas
out
adc
dec
push
out
sbb
loopne
push
jo
sub
mov
add
ja
sti
leave
test
dec
xor
add
sub
cltd
sub
std
add
mov
or
and
xorl
cmp
cmc
or
pop
jo
dec
mov
xchg
and
sti
jae
cmp
shll
mov
jns
xor
push
dec
lahf
mov
lods
push
and
rol
push
or
mov
stc
mov
js
add
aam
jno
lock
and
add
clc
fs
loop
loope
or
add
sub
or
daa
inc
jl
pop
fdivrl
sbbb
in
adc
pop
movsb
add
aad
adcb
iret
pop
add
mov
cmp
mov
or
pop
push
push
adc
xchg
call
adc
dec
sbb
xchg
sahf
pusha
rcrb
dec
push
lock
sbb
pop
cmp
pop
mov
pop
inc
es
je
jl
xor
jbe
mov
out
mov
loop
jo
mov
cmpsl
int3
add
pop
gs
insl
sbb
lcall
jo
test
orl
nop
hlt
rorl
std
scas
add
inc
out
mov
sahf
push
mov
add
mov
mov
sub
pop
lret
nop
notb
fcomp
or
push
enter
mov
mov
mov
add
pop
xor
or
jae
aam
sub
cmp
lahf
jp
rorb
jl
pop
popa
and
cmp
test
clc
mov
pop
inc
mov
xor
sub
add
mov
int3
loop
rcrb
add
addl
sub
scas
xchg
insb
pop
adc
or
test
inc
int3
or
popf
mov
push
or
shll
sbb
test
xor
addr16
push
push
mov
movsb
pop
std
mov
fs
xor
jnp
xor
cmc
add
sarb
sub
sub
sub
mov
dec
xor
cli
shrb
pop
inc
stc
int3
js
xor
cmp
lret
add
adc
jecxz
sub
xor
dec
and
adc
sub
cmp
cmc
mov
mov
xor
add
loopne
sbb
xchg
push
jmp
push
adc
mov
out
loopne
jecxz
loopne
fidivs
push
lcall
or
add
sub
xor
jp
sub
mov
cs
sbb
adc
push
jo
xor
pop
lcall
jge
dec
push
sbb
xchg
mov
jns
add
mov
and
call
pop
adc
pop
pop
mov
cmp
stos
push
xchg
popa
adc
inc
xorl
jmp
cmc
dec
arpl
xlat
xchg
mov
loop
add
pop
mov
mov
pop
push
rclb
pushf
pusha
jb
test
ds
add
sbb
int3
inc
aam
lock
adc
jmp
sbb
sbb
push
loopne
test
rolb
add
pop
lods
dec
xor
mov
jbe
das
mov
jp
xor
insl
js
lods
and
nop
or
adc
xorb
inc
and
mov
mov
add
pop
mov
pop
femms
flds
pop
fdivs
icebp
dec
push
add
push
adc
cmp
mov
sub
pop
lods
mov
loop
dec
add
leave
ljmp
add
dec
mov
cltd
stc
sub
sub
dec
cmp
leave
arpl
ljmp
mov
pushf
xchg
push
add
in
lods
aas
dec
mov
clc
cmp
xorb
movsl
lock
shl
mov
and
sti
sub
mov
in
add
adc
repz
jmp
repnz
dec
xchg
popa
pop
inc
js
insl
push
stos
jg
jmp
fildl
cli
xchg
cld
ja
fmull
out
pop
or
test
ret
add
or
das
jae
insl
push
mov
enter
add
fsubrp
outsl
xor
mov
jnp
or
aas
test
cld
ds
cmpsl
xor
scas
imul
aaa
add
add
xor
in
testb
jecxz
pop
xchg
pop
mov
subb
loope
in
pop
in
mov
add
cmpsl
sub
stos
filds
popa
xorb
mov
add
ja
test
fmull
in
mov
leave
mov
push
xchg
xchg
sub
add
sahf
cmc
pop
lods
xchg
cmpsl
adc
add
je
xor
adc
jae
adc
mov
adc
lock
dec
pop
imul
aam
repnz
fidivrs
jbe
jle
roll
pusha
xchg
inc
aam
or
iret
pop
pop
xor
sub
cmpsl
xchg
mov
hlt
or
add
xor
int3
and
dec
movl
in
inc
nop
sbb
xor
adc
loopne
jmpw
inc
mov
xchg
subb
mov
jns
testb
or
repnz
inc
sub
and
fldl
push
mov
aas
push
test
stos
fists
adc
push
mov
pop
xor
inc
and
iret
add
leave
jle
int3
fcomps
jo
imul
test
pop
lea
sub
sub
and
in
add
xor
cli
add
iret
cmc
aas
mov
or
xchg
add
cmpsb
adc
mov
js
jmp
sub
cmp
test
mov
xor
cmp
test
hlt
add
jmp
testb
add
sbb
dec
jo
test
add
subb
outsb
and
mov
out
bound
add
xor
mov
pop
sbb
jmp
xor
jnp
movswl
in
xor
mov
outsb
into
sub
adc
add
mov
cli
out
inc
les
xor
outsb
test
xchg
mov
orb
add
int3
jp
pop
out
addr16
and
mov
jg
clc
fldl
in
mov
das
mov
mov
pop
xchg
addr16
xor
shlb
fstpt
adc
clc
xor
outsb
fdivrp
lret
in
bound
and
mov
in
push
fdivs
mov
pusha
stc
loopne
inc
mov
insb
mov
jmp
movsb
jbe
add
stc
lret
mov
pop
or
xchg
xorl
pop
push
jo
repz
add
outsb
or
nop
and
push
and
jbe
cld
xchg
subb
arpl
cmp
mov
test
call
test
add
pop
sbb
mov
dec
cmp
pop
out
xchg
sub
and
fisubl
aad
add
cmpsb
dec
cmp
adc
aas
ja
add
repnz
push
loop
add
imul
andb
jbe
cmc
push
mov
inc
leave
out
mov
jg
add
rorl
xchg
popa
shlb
pop
mov
or
lods
loopne
divl
add
sub
sbb
ljmp
adc
into
jge
test
sbb
cmp
xchg
inc
add
jp
pop
cmp
xor
xchg
arpl
sbb
in
out
adc
add
popf
mov
add
mov
std
push
dec
xchg
roll
and
fdivrs
ret
add
loop
test
das
ss
add
push
sbb
lret
in
mov
pop
fs
push
add
movsb
add
cmp
or
or
loope
jbe
add
jp
inc
movsbl
lea
rcrb
add
jle
pusha
adc
ja
xchg
enter
js
sbb
add
adc
and
pop
dec
or
aaa
cmp
add
das
xchg
push
ljmp
mov
cmp
cld
stc
es
cltd
jg
divb
add
jnp
pop
pushf
cwtl
fs
sbb
jmp
arpl
add
mov
loope
push
lret
jnp
imul
sbb
xor
mov
fwait
cwtl
loop
push
outsl
sbb
jl
sbb
shlb
leave
sbb
ret
sbb
ljmp
jge
add
das
cwtl
push
stos
shlb
popa
addb
xor
adc
popf
das
push
jno
insb
add
sub
lods
xchg
cli
lock
ja
add
dec
and
xor
jg
iret
lods
bound
sbb
jb
adc
mov
imul
and
xchg
sbb
sbb
iret
mov
popa
pop
xchg
out
aam
mov
addr16
or
or
sbbl
xchg
enter
push
loopne
dec
add
xchg
inc
push
xlat
mov
int
xor
mov
andb
es
jmp
addb
mov
mov
js
filds
leave
ret
fsubl
aas
ss
inc
cmp
add
mov
pop
lret
push
fimull
repnz
push
jl
add
jmp
sbb
jle
adc
push
push
and
cmc
lcall
mov
cs
ss
gs
dec
das
idivl
or
mov
sbb
sub
loopne
xor
dec
inc
inc
cmp
add
mov
add
jg
cmc
mov
arpl
mov
insl
lret
xlat
std
insb
push
pop
filds
out
mov
dec
adc
jecxz
add
xlat
pop
push
mov
lahf
add
xchg
sbb
and
add
push
sahf
mov
scas
xor
adc
popf
stc
imull
cmp
mov
sbb
ds
cmp
pop
aas
pop
jo
ret
cld
and
scas
lret
enter
add
enter
das
std
jge
push
shl
loopne
adcl
add
fstpt
test
mov
mov
mov
sbb
and
jmp
sub
clc
add
filds
add
jnp
js
mov
add
int3
or
pop
mov
xchg
dec
cmova
dec
cli
mov
insb
add
aad
xor
lods
addr16
pop
cmpsb
jo
mov
rorl
adc
push
mov
test
dec
pop
pop
jne
pop
xchg
movsb
push
jle
xchg
cmp
jge
push
data16
in
xor
das
shl
add
outsb
sahf
cli
hlt
mov
jg
mov
fadds
add
inc
pop
scas
dec
xchg
je
mov
fxam
xchg
rcrb
popf
inc
sub
imul
cmp
out
outsb
xor
test
mov
je
pop
shlb
inc
mov
add
dec
adc
and
lgs
fs
movsb
insb
cwtl
mov
push
mov
xor
lock
xor
aam
arpl
push
shll
push
aad
cmpsl
mov
add
jg
pop
xor
xor
mov
jmp
int
cmp
clc
xchg
insl
scas
rcrb
add
int3
cmp
dec
push
xor
and
inc
push
jge
mov
add
jbe
popf
cmp
cmp
mov
dec
push
xchg
int
test
leave
push
rcrb
test
xchg
pop
jo
aam
mov
getsec
inc
movsb
fcmovb
cmc
leave
repz
mov
mov
xor
push
cmc
loopne
mov
xchg
loope
sti
mov
pop
popa
and
repz
fwait
js
dec
inc
mov
shlb
pop
aaa
call
cmp
pop
xor
mov
sarl
xadd
sti
loopne
cmpb
dec
sbb
daa
add
xchg
mov
add
sbb
xor
cmpsl
sub
mov
mov
enter
sub
sarb
sbb
push
push
inc
imul
adc
push
pusha
les
in
add
inc
sub
add
jmp
pop
cmp
mov
add
cld
and
dec
pusha
faddl
dec
sbb
lock
ja
pusha
iret
xchg
addl
out
movsl
ss
push
add
sub
sbb
ficomps
push
ret
mov
xor
cld
nop
lock
in
add
xchg
stc
sub
leave
push
les
jae
add
lea
inc
in
jmp
xorl
mov
dec
stos
nop
je
adc
sub
and
dec
jmp
sub
addr16
std
fs
leave
mov
rorl
xchg
xor
imul
adcb
popf
inc
cs
popl
push
pop
dec
jle
cli
push
inc
cmp
leave
imul
cmp
adcb
sub
mov
push
leave
cmp
scas
inc
sar
lret
fcom
rolb
mov
adc
xchg
outsl
pop
pop
xchg
sti
cmpb
in
bound
or
nop
xor
inc
add
test
icebp
push
cmp
jne
inc
fldl
lahf
mov
imul
nop
sbb
push
add
pop
popa
mov
xchg
xchg
je
cs
sbb
mov
adc
and
add
and
subb
jnp
popa
add
xchg
push
push
add
add
test
dec
push
shlb
insb
jecxz
mov
fdivr
sbb
loop
pop
pop
pop
mov
inc
lret
and
imul
pop
or
fldenv
sub
adc
int3
mov
in
std
adc
fimuls
std
or
jge
xchg
mov
lea
sarl
adc
cmp
imul
sbb
mov
dec
add
xor
mov
add
cwtl
jmp
inc
or
rol
push
imul
jmp
lret
test
cltd
add
fsubrs
hlt
sbb
cmp
fstps
or
scas
inc
testl
or
fs
push
mov
mov
dec
and
push
fdivs
push
das
mov
je
add
mov
lods
xor
pop
sub
jecxz
dec
jge
negl
mov
mov
test
loope
loop
mov
inc
aam
mov
lods
rol
push
push
add
and
iret
pop
loope
jbe
pop
sub
out
les
aam
sub
shrl
and
neg
cmp
sbb
das
sbb
jno
add
adc
int
mov
cli
popa
cmp
or
push
mov
jno
cmp
cmp
sub
shrl
cmp
inc
adc
and
ds
jg
mov
js
sbb
jp
mov
push
mov
push
add
hlt
data16
mov
cltd
mov
addr16
loopne
add
pop
mov
xor
popf
or
pcmpeqd
cmc
push
mov
orb
xor
mov
loope
fdivl
cmp
dec
pop
mov
adc
and
push
xor
push
cltd
aam
cs
inc
adc
adc
and
cmp
push
adc
sub
addr16
xchg
dec
mov
jns
add
and
fdivs
and
add
xor
es
test
and
sbb
inc
mov
and
mov
jp
pop
nop
pop
or
cmpsb
and
arpl
loop
or
sbb
popa
add
pop
bound
add
ds
lock
cmp
xor
fnsave
inc
aam
or
inc
loopne
or
lods
pop
mov
xchg
pop
adc
cmpsl
les
outsb
fdivr
add
psubb
fadds
mov
int3
repnz
inc
xchg
incl
cmp
cs
sub
xor
adc
mov
mov
faddl
std
mov
pop
lods
in
ss
sub
mov
filds
xor
pop
dec
mov
sbb
rclb
sub
and
push
add
pusha
negb
adc
push
push
mov
je
cmpl
test
sar
xor
mov
inc
lea
fcomps
data16
jge
mov
out
and
add
pop
or
rcrb
pusha
fidivrl
dec
inc
cwtl
adc
push
push
xor
imul
mov
icebp
add
addr16
dec
lret
in
lods
mov
cmp
adc
push
js
inc
es
xchg
xchg
iret
mov
mov
lea
sub
pop
inc
ds
and
and
adc
mov
dec
outsb
add
mov
imul
mov
jl
mov
add
dec
test
jo
cmp
pop
add
push
sub
xchg
pop
adcl
mov
jo
add
jp
int3
jmp
add
stos
pop
sbb
dec
lret
cmp
mov
insb
outsb
cmp
dec
sub
add
pop
test
les
aas
std
in
jge
out
movsb
jg
mov
div
lods
lret
add
out
and
mov
add
popf
in
shrl
jle
cmp
aas
add
fmuls
jle
add
and
push
subb
fwait
inc
int3
jg
adc
cmc
dec
inc
mov
aad
sbbl
cwtl
sub
div
or
jne
push
xchg
fnstenv
rolb
add
test
xbegin
jne
aaa
push
arpl
jecxz
sbb
popa
cmp
sub
mov
sub
ds
mov
orb
shlb
inc
pop
jae
out
mov
xor
leave
xchg
popf
mov
cmp
lock
add
dec
outsb
xchg
add
sub
adc
xorb
add
dec
stc
mov
flds
adc
lret
pop
out
addb
jnp
dec
mov
gs
add
daa
fdivs
add
mov
lods
out
add
mov
xor
sbb
sub
clc
adc
imul
and
mov
mov
mov
xor
push
fs
int3
in
add
xchg
shlb
cmp
in
sub
movsl
test
jmp
fists
jno
add
jmp
call
leave
add
and
test
add
xchg
testb
sbb
call
xlat
mov
add
call
mov
inc
testl
inc
nop
mov
fisubrl
lock
add
mov
and
jnp
xchg
cmp
nop
pop
cmp
lds
insb
lock
inc
add
mov
lods
dec
mov
or
fmuls
adc
cld
ret
ret
push
inc
push
sub
lret
inc
scas
ljmp
inc
mov
cmp
dec
jl
fnsave
cmpsl
mov
sub
cmp
or
adc
repz
dec
stos
pop
add
add
fcompl
inc
sbbl
xor
jecxz
xor
add
out
cmpsb
xchg
out
and
jbe
xor
mov
js
pop
xor
mov
sbb
in
test
mov
push
repz
add
mov
int3
cmp
or
mov
sub
shr
add
cwtl
inc
and
push
add
pushf
sbb
add
jb
or
lds
add
cwtl
xchg
les
pop
dec
mov
mov
mov
shll
add
lret
aam
popf
add
aaa
mov
cmpsb
jb
pop
sahf
lea
push
jo
ljmp
das
sbb
lret
adc
adc
cmp
add
fwait
xchg
std
sub
pop
aad
push
inc
cld
aas
push
add
mov
push
add
jns
dec
sbb
mov
inc
mov
xor
cwtl
add
push
popa
inc
add
enter
outsb
repnz
dec
cmpsb
insl
xchg
clc
add
mov
xor
add
rcll
push
mov
and
into
or
pop
addr16
sub
adc
aad
les
divb
push
inc
repnz
pusha
add
or
shlb
pop
jge
pop
xchg
scas
xchg
stc
in
enter
fcmove
push
push
rcrl
lock
lds
popa
jns
add
dec
mov
stos
mov
js
add
xchg
aaa
pop
in
sbbl
movsl
push
and
jg
sbb
sbb
cmp
lods
arpl
pop
dec
add
and
cmp
cli
push
add
xchg
cmpsl
or
sub
and
jno
sar
xchg
lods
jae
stc
sbb
mov
pop
xor
in
adc
cmp
mov
push
jle
call
rcll
ljmp
rolb
in
push
mov
aas
mov
xchg
pop
sub
rolb
jne
adcb
in
add
andl
pop
push
seto
jno
aas
mov
inc
mov
add
inc
lret
mov
cmpsl
add
scas
pop
sbb
jbe
jge
cmp
mov
mov
jnp
adc
scas
sbb
push
int
add
mov
cmp
push
inc
push
icebp
enter
inc
push
mov
clc
bound
outsl
sbb
pop
push
hlt
push
add
mov
nop
add
ret
scas
and
movsl
pop
push
push
js
loopne
or
inc
and
xchg
dec
mov
and
mov
outsb
push
jns
incb
into
je
enter
rcrb
call
add
jg
add
xchg
push
insb
mov
jno
add
testl
pop
cmp
outsl
inc
outsb
insl
sub
test
or
mov
cs
out
pop
popf
rcrb
mov
cld
sbb
aas
cmp
addb
xchg
pop
add
or
add
mov
mov
add
orb
sub
add
nop
out
xchg
dec
jle
shlb
cmp
data16
iret
jno
das
cmp
cvtdq2ps
jmp
add
scas
push
not
pop
and
ffreep
enter
in
pop
stos
shlb
es
lahf
pop
in
int
and
jne
fnstenv
stos
jle
inc
pushf
cs
dec
mov
or
dec
add
adc
mov
mov
jmp
mov
loope
and
ffreep
into
loop
sbb
jecxz
mov
add
shlb
add
mov
sarb
clc
push
sbb
push
rcr
daa
std
and
das
xorb
xchg
sub
inc
lods
mov
mov
jbe
add
jle
mov
pop
call
ljmp
test
add
stos
shrl
pop
dec
xlat
jae
les
add
dec
aaa
inc
divl
in
sbb
mov
addb
cwtl
dec
pop
scas
pop
movsl
sti
add
int
repz
cmp
sbb
sbb
sub
and
stc
cmp
rolb
jno
mov
mov
pop
xor
xlat
out
and
add
scas
pop
in
jl
push
bound
add
jmp
mov
or
jmp
xchg
mov
pop
shlb
outsb
push
push
cmp
testb
push
sbb
hlt
xchg
std
fmulp
dec
add
jno
out
int
pusha
add
pop
fwait
cmp
xor
xchg
xor
lahf
sub
jmp
push
subb
add
pop
sbb
rol
xor
test
sarl
xchg
cmovae
jp
mov
sub
icebp
lock
inc
mov
xor
loopne
leave
adc
js
clc
add
push
movsb
call
jno
mov
add
and
add
mov
dec
outsb
in
xchg
add
divl
and
add
dec
mov
mov
lret
fs
push
dec
xor
add
in
test
mov
mov
or
hlt
leave
add
aad
mov
or
mov
and
xchg
jae
dec
idivl
hlt
add
test
imul
or
enter
add
idivl
incl
jae
and
aad
fldl
push
xchg
mov
roll
pop
sbb
add
fmull
add
ret
test
push
add
or
cmp
cmp
pushf
movsl
insb
push
inc
fadds
cltd
add
inc
stos
jmp
cmp
negb
inc
add
sub
mov
dec
pop
icebp
dec
xchg
jmp
jnp
lock
inc
outsb
add
jle
insb
dec
pusha
mov
adc
pop
add
inc
addb
add
lahf
fisubrl
loop
andl
xchg
jp
xchg
sti
je
jp
or
inc
out
orb
insb
dec
sbb
cltd
faddl
cmp
pop
mov
addb
roll
jge
lret
jb
xor
fldcw
test
push
inc
ret
nop
inc
push
cmp
jge
rorb
inc
add
cltd
add
inc
mov
add
sbb
loop
cmpsl
xchg
cld
add
xorb
mov
cmpsb
cs
or
out
cltd
shll
and
xchg
add
aam
adc
sti
movsl
cmp
dec
gs
mov
shlb
fdivrs
in
addl
mov
dec
test
stos
sub
add
adc
add
add
cmp
sahf
fadd
push
dec
dec
in
ja
mov
fiadds
cmpsl
or
mov
lods
sarb
fnop
fildl
and
cli
pop
inc
mov
lahf
mov
xchg
add
jg
movsl
mov
jl
sbb
mov
add
jp
push
loopne
fs
add
push
aas
add
adc
add
lret
jg
sub
add
or
pop
sti
cmp
push
add
lods
cmpsl
orl
ds
add
mov
rcrb
add
mov
sbb
loopne
add
icebp
push
mov
ja
mov
push
mov
cwtl
faddl
es
dec
sbb
cmp
enter
cmp
dec
popl
ljmp
mov
sbb
dec
pop
pop
jne
xchg
push
sldt
add
push
insb
xor
loope
pop
add
sbb
inc
add
add
je
add
call
add
test
add
mov
cmpsl
or
push
ljmp
faddl
loope
in
std
lret
sub
add
test
sbb
fwait
jmp
push
shrb
fsubr
jns
cmp
mov
stc
xchg
sbb
sbb
jbe
add
adc
sbb
or
and
loope
fcomps
test
sbb
inc
pop
add
push
insb
push
push
shl
sbb
inc
inc
lods
loopne
icebp
ret
adc
inc
rcll
sub
aaa
cmp
dec
orb
lods
mov
mov
imul
dec
roll
dec
iret
adc
lock
adcb
add
fisubl
pop
push
sbb
pop
orb
loope
sbbl
cmp
pop
inc
adc
mov
hlt
popf
sbb
std
sbb
xchg
mov
jmp
pop
ss
jb
jbe
cmp
icebp
mov
sbb
xchg
loopne
js
in
add
into
mov
mov
stos
dec
add
or
mov
lcall
nop
jmp
mul
push
iret
in
xchg
mov
cld
pop
stc
mov
and
inc
add
leave
loopne
jnp
add
xor
jbe
add
rcrb
lock
movsl
popa
scas
lahf
jnp
or
int
adc
lahf
jp
movsb
shll
add
mov
xor
shlb
and
xor
push
call
and
inc
cmp
and
in
dec
push
fwait
int3
add
or
movsb
fadds
and
imul
out
outsb
mov
pop
ja
pop
test
add
cmp
pop
jbe
add
lds
add
sbb
adc
jl
adc
pop
xchg
mov
addr16
add
inc
pushf
loopne
push
sbb
es
rsqrtps
add
bound
inc
sbb
pop
movsb
das
or
cltd
loopne
add
mov
hlt
lods
add
mov
mov
add
fwait
cmp
xchg
outsl
loopne
push
cs
adc
adc
ret
push
cmp
arpl
outsb
repz
add
pop
repnz
jmp
mov
adc
ja
sbb
mov
repnz
xor
push
dec
push
in
and
add
lds
push
mov
jg
jno
add
cmpsl
dec
or
cmpb
jnp
dec
add
cmp
test
jb
dec
or
and
testb
add
cmp
mov
fs
adc
subb
loop
lret
pop
movsl
gs
sbb
in
pop
pop
or
pusha
mov
mov
loope
push
cltd
sbb
mov
add
jp
pop
sub
or
add
ljmp
iret
loop
inc
push
add
repz
add
out
andl
mov
imul
mov
add
mov
fimull
clc
xor
or
dec
sub
inc
xchg
out
xchg
push
lds
cmp
mov
lods
adc
push
test
or
pop
aam
push
lock
add
lods
sbb
xor
pop
jne
add
jbe
aam
pop
sbb
add
cmp
outsl
adc
fcoml
add
ljmp
jle
adc
push
push
pusha
fimull
push
fdivrl
add
adcl
jp,pn
loop
add
int
push
add
shr
add
cs
or
mov
dec
add
sub
xor
mov
add
push
lret
jge
fldenv
xchg
xor
xchg
xchg
mov
sub
dec
repz
out
add
nop
pop
nop
cwtl
ds
aad
push
cmp
lret
pop
lahf
ja
test
and
adc
jnp
loopne
adc
pop
xchg
dec
in
adc
mov
add
outsl
shl
add
adc
shlb
test
das
test
int3
xchg
mov
aas
loopne
mov
jmp
and
rcr
cwtl
dec
cmp
add
fcmovbe
xor
cmp
jnp
lds
xlat
sbb
subps
ss
add
xchg
xchg
in
aaa
aam
arpl
icebp
inc
mov
hlt
and
lret
aad
jle
fs
pop
sub
jecxz
jl
add
adc
xchg
in
pop
in
dec
sbb
xor
push
add
test
bound
push
repnz
outsb
lret
loop
ficoml
push
add
push
in
add
sbb
xor
mov
mov
add
add
aaa
jmp
jne
fdivr
lock
ret
push
cmp
loop
push
pop
insl
mov
and
rcll
and
xchg
rolb
jmp
adc
add
icebp
movlhps
mov
adc
dec
sbb
cmpsl
xchg
dec
inc
and
mov
lods
stc
pop
loope
add
mov
scas
or
arpl
sub
ljmp
cmpl
dec
sub
adcl
pop
testb
pop
fistl
imul
imul
adc
push
rcll
xorb
pop
dec
mov
or
loope
lret
ss
inc
cmpsl
jo
popf
pop
add
aad
mov
mov
xchg
aas
imul
pushf
dec
jns
iret
dec
adc
inc
xor
hlt
add
xchg
add
into
inc
int3
scas
xor
cmpsl
and
cmpsb
add
outsl
loopne
xchg
adc
sub
str
jle
popa
sbb
scas
add
orb
mov
push
rol
push
add
aad
add
test
mov
adc
mov
cmp
dec
mov
test
sub
packssdw
cwtl
pop
aas
lahf
js
fadd
lock
inc
test
mov
xchg
lret
ret
lock
pop
add
push
add
es
sti
cmp
mov
outsb
pop
je
das
adc
sub
and
jne
push
pop
mov
add
in
xor
pop
and
jo
loope
mov
push
lret
cmpxchg
std
dec
jmp
mov
jne
sub
test
jns
push
and
and
je
mov
add
sbb
outsl
idivb
pop
es
push
mov
push
dec
sahf
js
mulb
jbe
push
fs
mov
inc
add
or
movl
cmp
add
add
hlt
insl
push
ficoml
push
fistpll
adc
loop
rclb
dec
mov
push
dec
mov
push
dec
xchg
inc
sub
jg
jns
test
sbb
cmp
jo
adc
mov
in
sti
and
rolb
sbb
cmp
mov
mov
out
roll
mov
mov
pop
addb
cmp
pop
dec
pop
fwait
pop
pop
loopne
sub
test
inc
add
fsubrs
pop
lock
das
sbb
jae
add
incl
nop
movsb
inc
add
ret
or
cld
add
jbe
pop
inc
arpl
add
sub
add
dec
bound
das
pop
push
jecxz,pn
push
inc
xor
add
incb
add
mov
sahf
int
mov
mov
jg
loopne
inc
or
inc
in
stos
popa
lahf
add
or
out
add
cltd
mov
call
add
repz
test
cmp
clc
andb
xor
repnz
push
jae
mov
nop
jb
jns
push
cli
aam
or
jge
xchg
add
mov
out
adc
push
pop
xchg
add
mov
scas
orb
xchg
dec
add
ss
imul
mov
cmp
xchg
lock
pop
test
mov
sub
rorl
andb
adc
aaa
arpl
add
cltd
aas
mov
mov
mov
mov
call
fs
or
push
and
cmpsb
jp
push
clc
add
pusha
and
cli
fiadds
push
addr16
mov
insb
pop
push
mov
lret
add
mov
fcomip
xor
les
inc
mov
add
mov
add
add
imul
add
in
cmp
hlt
pop
mov
add
adc
add
push
inc
and
je
hlt
pcmpgtb
rol
adc
pop
data16
xchg
outsl
clc
cmpsl
add
test
sbb
cmp
mov
or
add
xchg
or
test
and
fwait
popa
aaa
push
pop
nop
rcr
mov
pop
jbe
lods
xchg
inc
inc
test
popf
outsb
js
jl
bt
jmp
mov
add
call
stc
add
push
add
xchg
out
mov
ja
jno
fstl
push
mov
sbb
add
nop
push
fistpl
pop
cli
shlb
testl
and
repnz
clc
mov
or
ljmp
adc
cmpsb
test
popf
and
jecxz
enter
pop
sbb
imul
mov
inc
mov
mov
dec
ds
or
and
fdivs
mov
mov
xor
sub
sub
subb
adc
repz
xchg
adc
int3
sub
call
sub
mov
outsl
cli
jl
sar
pop
adc
in
aas
add
push
aaa
jo
mov
lahf
lock
mov
stos
divl
je
jle
mov
xchg
daa
in
add
mov
les
test
jge
add
data16
add
xchg
loopne
add
or
xchg
loope
and
out
cmp
adc
roll
in
push
dec
icebp
jne
add
sbb
add
jle
repz
and
pop
inc
mov
hlt
pop
adc
incb
dec
dec
or
lea
lcall
fdivl
hlt
cli
adc
inc
test
aam
lock
andb
and
mov
or
fnstenv
jne
pop
dec
xor
mov
cld
push
jo
and
lahf
jae
push
push
clc
rep
add
adcl
xor
ja
push
aas
ss
adcb
fwait
add
mov
add
fs
dec
pop
sub
ret
cmp
ja
arpl
mov
add
cwtl
bound
and
push
add
arpl
lcall
add
addr16
mov
rolb
dec
ds
jb
cli
jp
push
xchg
jns
push
in
sti
mov
int3
or
fimuls
lods
test
daa
repnz
add
push
mov
fisubrl
jb
xchg
mov
int3
lret
push
movsb
add
xorl
mov
hlt
add
pop
outsb
or
and
mov
je
lods
enter
add
lds
xor
int3
cbtw
dec
fsubl
in
mov
ret
mov
test
mov
pop
rclb
add
dec
notl
mov
fs
mov
sub
add
int
dec
add
incb
jecxz
xor
pop
mov
or
push
and
sub
dec
mov
movsb
xor
scas
repz
fxch
imul
leave
or
jbe
icebp
adc
push
fsubrl
in
sbb
mov
add
or
xchg
push
dec
and
push
lods
pop
loopne
xchg
add
push
mov
testl
add
xor
movsl
add
mov
sar
dec
pushf
add
or
add
jl
rdmsr
jg
js
loopne
adc
movsb
add
inc
push
mov
add
sub
adc
push
incl
mov
jecxz
or
repnz
push
xchg
add
dec
cmc
mov
push
pop
xchg
repnz
add
jnp
sbb
repnz
call
fldcw
les
add
aas
rolb
and
cwtl
lock
add
out
adcl
add
mov
jecxz
push
aad
add
insl
xchg
sarl
dec
dec
pop
lcall
add
pop
jae
sar
add
mov
call
or
lcall
add
outsl
call
dec
ds
js
nop
dec
shll
dec
jbe
jmp
inc
sub
test
sbb
mov
cmc
mov
popa
mov
negl
sbb
mov
lods
mov
aam
mov
mov
push
addl
std
movsb
add
inc
jge
xor
pop
and
push
add
arpl
dec
stc
push
push
callw
push
mov
cmpsb
sbb
push
scas
cmp
add
fbstp
cmp
arpl
jbe
sbb
adc
dec
and
subb
push
add
push
lret
sbb
lods
cmp
lock
or
adc
aas
and
lea
jne
adc
sahf
aam
adc
pop
push
cltd
or
push
popa
inc
and
pop
iret
xor
out
dec
push
or
and
rolb
mov
push
sub
inc
jmp
xchg
out
add
lcall
out
jmp
imul
push
push
in
mov
xor
sub
ja
dec
addr16
or
in
push
loopne
add
sbb
movsl
xchg
sub
add
sbb
mov
mov
mov
int
scas
pop
mov
jge
ds
dec
daa
test
mov
in
pop
adc
cmp
sub
push
mov
pop
pop
daa
loope
mov
insb
fmul
pop
addb
pop
and
mov
lods
sbb
ljmp
sbb
push
pop
sbb
inc
rcl
addl
xchg
dec
push
or
adc
xchg
jg
out
movsl
jle
orb
xlat
mov
andb
rolb
or
hlt
and
mov
inc
inc
add
adc
fsubr
or
or
add
jnp
es
incl
add
sbb
mov
add
jae
mov
xor
inc
test
xchg
add
dec
cmp
loope
das
sub
adc
pop
pusha
lcall
pop
enter
sahf
add
and
jno
jg
adc
push
mov
aam
jbe
jp
add
mov
movsl
hlt
sbb
es
xchg
xor
mov
sbb
popf
shlb
pop
ljmp
shr
aad
add
sub
pop
sbb
push
add
movsb
aas
mov
add
xchg
and
add
jp
cmp
out
add
movsbl
inc
cmp
or
int3
cmp
or
adc
cmp
mov
add
maxps
rcll
push
push
in
sub
xchg
mov
sub
repz
add
lods
sub
sbb
clc
mov
sbb
cmp
add
xor
aad
outsl
sub
add
xor
push
add
or
nop
negb
xchg
nop
fdivrs
add
int3
mov
addb
daa
add
add
outsb
in
mov
loop
or
cmp
movsb
push
pop
push
mov
loop
adc
cmpl
js
adc
lock
stos
leave
outsb
dec
pop
add
or
mov
cmp
repz
pushl
mov
dec
push
add
xchg
add
pop
pop
stos
jg
cmc
addr16
inc
fsubl
rolb
add
push
and
daa
mov
mov
ljmp
xlat
sbb
nop
add
fistl
scas
add
ret
add
push
insl
add
or
mov
sahf
fs
mov
mov
jb
sub
cmpsl
inc
clc
adc
outsb
call
and
push
repnz
cwtl
inc
add
mul
sub
or
stc
pop
lret
sbb
xchg
cmp
push
repz
add
scas
pop
sbb
xorl
dec
insl
cmpsl
add
sahf
loopne
mov
cld
loop
xor
cmp
pop
push
lods
mov
lods
add
fs
or
out
out
add
ja
sbbb
xchg
mov
and
call
xchg
test
jmp
and
add
and
push
mov
cmpb
add
in
add
jle
fstl
jmp
int
std
call
mov
roll
or
data16
jb
add
mov
std
loop
fmuls
push
lds
nop
call
fdivs
imul
adc
add
ja
adc
jmp
dec
jge
jne
mov
shlb
dec
popf
cwtl
and
lcall
cmpsb
out
mov
fs
nop
mov
loopne
movsl
sub
inc
aaa
and
inc
inc
add
lahf
or
popf
aas
lret
or
inc
movsl
add
in
andl
es
push
enter
inc
lods
push
mov
add
rol
mov
add
mov
add
popl
cld
sbb
push
add
or
ret
sub
xlat
jnp
and
inc
out
fs
xchg
add
loopne
xor
jecxz
and
lea
sbb
add
js
in
dec
xchg
jg,pn
or
xor
pop
add
pop
out
and
add
mov
repnz
mov
sbb
rcr
hlt
sub
adc
push
push
rolb
mov
add
loopne
mov
push
add
lahf
sub
and
mov
sbb
xchg
rcrb
jecxz
jno
mov
scas
testb
cltd
sbb
rclb
jle
pop
out
dec
mov
into
sbb
push
and
cmp
movsb
add
mov
je
sub
add
fcomps
mov
dec
jle
jne
mov
cld
sbb
add
adc
adc
in
jns
mov
cmc
sub
cld
mov
shlb
subl
pop
out
push
mov
xor
test
jl
adc
in
mov
je
jns
mov
mov
lock
adc
aaa
add
mov
lcall
mov
pop
dec
lret
leave
fwait
inc
test
call
mov
pusha
add
mov
cwtl
adc
aaa
or
and
sub
sbb
or
add
icebp
jl
cmp
xchg
xorb
dec
inc
cld
add
jno
fdivr
jnp
sti
and
out
movsl
inc
mov
lret
les
inc
fldt
mov
fcoms
lods
repz
cmc
add
and
aad
push
dec
sub
aaa
lock
push
xchg
and
cmp
leave
lahf
fadd
inc
cmp
pushf
in
fists
add
daa
repz
push
aad
in
add
jecxz
mov
xor
lahf
mov
rolb
or
js
mov
lock
cmc
std
mov
inc
adc
add
fidivl
imul
faddl
sbb
sti
das
pop
jb
rcll
lahf
popf
inc
sub
cmp
imul
imul
nop
inc
scas
aad
sbb
pop
lahf
mov
adc
inc
stos
add
xor
add
cld
adc
in
cmp
in
mov
mov
push
adc
cmp
mov
lock
test
data16
sarb
push
dec
aam
xchg
punpckhbw
push
jge
cmp
nop
mov
je
icebp
cltd
add
cli
push
jecxz
stos
lret
pop
gs
aaa
sti
cmp
fidivrl
add
cli
add
fldenv
in
dec
add
sbb
fisubs
hlt
xlat
adcl
add
bound
or
sbb
loopne
mov
sbb
or
mov
rorb
mov
stc
popa
mov
and
sub
aas
mov
or
sbb
scas
test
mov
loop
int
enter
pop
sarl
addb
add
inc
xchg
lahf
cmp
subb
pop
push
shrl
mov
pop
xor
cmp
in
xchg
loope
cli
rcrl
lock
add
ret
push
xchg
dec
jb
add
into
lds
jge
pop
addl
add
push
cs
dec
lods
sti
pop
jmp
cmp
dec
and
xchg
adc
pop
hlt
out
xor
push
mov
push
ret
add
adc
mov
shll
mov
adc
sarb
addr16
jecxz
mov
rcl
pop
cli
sti
outsl
add
lahf
negl
cs
cwtl
xchg
pushf
add
gs
jne
push
call
adc
jae
add
stc
add
add
sbb
or
and
add
mov
add
jl
dec
add
inc
jmp
adcb
dec
xchg
incb
mov
dec
scas
mov
in
add
mov
mov
shrb
mov
daa
lods
xchg
out
add
or
enter
shll
xchg
mov
mov
add
pop
sub
push
lcall
xchg
loop
push
cmc
lock
mov
jbe
or
fisubrl
cmp
jns
pop
add
mov
data16
ja
add
xor
jnp
add
sbb
cwtl
rolb
hlt
scas
and
into
add
add
xchg
mov
out
push
or
rol
fsub
insl
push
cmp
ja
add
mov
int
add
mov
into
and
roll
cmc
outsb
ljmp
fldl
jbe
pop
jmp
jle
je
pop
int3
rol
loope
stc
in
mov
push
push
int3
in
add
shl
sub
lock
add
pushf
pop
das
xor
xchg
pop
add
stos
mov
inc
imul
push
inc
sbb
inc
cmp
int
mov
loopne
in
sbb
jle
movl
enter
fldcw
add
and
mov
int3
pop
add
inc
rorb
fadds
scas
mov
xor
sbb
stos
lds
pusha
test
add
xchg
dec
popf
addb
add
popa
xorl
add
xchg
std
lea
xchg
add
loope
jo
arpl
loop
dec
cmpb
cmp
sbb
cmp
pop
add
pop
and
sub
fucomp
push
pop
cli
add
test
add
frstor
or
and
cmpsb
dec
mov
test
clc
loope
push
lahf
rol
arpl
sbb
fsubs
xchg
or
cmp
mov
jp
pusha
movsb
xor
inc
push
xchg
aam
out
inc
cmp
jae
ret
and
sub
mov
fs
mov
hlt
nop
xor
loop
cmpsb
outsb
dec
jp
add
iret
dec
xchg
sub
fadds
add
ja
hlt
pop
mov
je
mov
mov
xor
and
daa
lods
mov
xor
xor
jmp
cmp
mov
in
imulb
push
sub
lret
clc
mov
and
fistl
or
pop
xchg
sub
cwtl
aam
fadds
push
xor
stos
sub
xor
jb
ljmp
or
push
pushf
xor
pusha
push
fadd
mov
mov
sub
sti
pusha
call
mov
jns
out
loop
sbb
add
iret
inc
add
pop
jmp
mov
xor
sbb
cld
outsb
mov
add
mov
mov
out
add
pop
mov
jge
push
cwtl
mov
sbb
xchg
push
pop
call
subb
push
xorb
inc
and
je
add
push
xchg
out
frstor
fisubs
arpl
hlt
aad
call
sbb
cmp
mov
psubw
repnz
push
sbb
test
popa
je
aaa
bound
mov
jg
icebp
push
lock
sub
inc
pusha
rcrb
jecxz
shrb
or
cld
push
in
cmp
out
arpl
nop
add
dec
lahf
or
sub
orl
ss
mov
rcl
jg
sub
and
jo
cmp
xorb
jo
or
xor
push
mov
lods
add
ss
sub
push
movsb
adc
mov
add
push
ja
test
sarb
aas
add
xchg
les
jg
add
cmpsb
jne
cmp
pop
leave
movsl
mov
sahf
imul
scas
test
pop
cmp
xor
mov
cld
or
mov
push
cmp
stos
mov
sub
les
addr16
nop
sub
sub
push
add
mov
push
mov
in
push
dec
and
jae
insb
sub
leave
mov
sub
fs
mov
mov
dec
add
sbb
sub
or
popa
out
add
xor
dec
push
add
mov
clc
sub
cli
fildl
jle
pop
cwtl
lds
add
imull
subb
in
pop
out
add
imul
add
pusha
insl
cmp
mov
pop
cmp
dec
add
insl
sbb
add
mov
mov
mov
ds
xor
mov
add
incl
pushf
cmp
test
mov
sbb
movsl
sub
xchg
sbb
add
add
adc
bound
andl
adc
jb
and
or
xchg
sbb
sti
inc
cli
js
lock
addl
mov
xor
lcall
mov
push
cmp
push
jno
lods
dec
and
xchg
mov
push
adc
inc
or
loopne
sbb
jecxz
inc
add
stos
xor
je
sbb
jb
sub
mov
add
mov
pop
xchg
js
xor
icebp
cwtl
nop
pop
bound
and
jmp
or
fisubrs
rclb
imul
fdivl
icebp
and
jbe
fcomps
dec
mov
pusha
jg
sbb
ret
jno
dec
mov
test
cmp
mov
lret
and
inc
bound
ljmp
xor
std
inc
and
and
ljmp
test
pop
or
add
mov
adc
pop
add
and
adcl
sbb
cmp
push
jbe
push
push
pop
or
push
jnp
fmul
cmpl
fsub
mov
das
sbb
mov
and
jo
jo
fisubrs
test
dec
add
inc
iret
mov
push
mov
bswap
icebp
push
shll
das
pop
jae
rcr
lcall
stos
rcrl
test
mov
mov
pop
push
mov
lds
and
fdivl
xchg
cmpsl
and
jecxz
lret
popa
xor
or
loope
stos
and
add
leave
or
lock
loope
push
mov
scas
fnsave
xor
arpl
mov
sbb
add
mov
shll
int
inc
mov
and
mov
clc
arpl
nop
add
lods
sbbb
and
jns
inc
adc
adc
jmp
cmp
pusha
test
insb
or
and
and
fucomip
test
add
cmp
cmp
test
pusha
test
aad
jo
adc
add
popf
ret
mov
add
iret
pop
cmp
cld
lcall
inc
and
xchg
inc
aam
sub
cmp
rcrl
mov
push
hlt
sub
mov
decb
and
pop
clc
adc
stos
cmp
inc
jle
add
loope
mov
and
pop
cmp
clc
xor
xchg
jns
insb
xchg
sbb
pop
stos
sbb
jl
lock
mov
shlb
js
jp
add
std
jo
and
aaa
add
insl
or
gs
rcr
jmp
dec
push
xchg
sub
pusha
add
test
push
xchg
lods
add
inc
add
and
call
jo
fcompl
ret
enter
sub
add
mov
lock
push
push
inc
mov
adc
adcb
mov
movsb
mov
cwtl
ret
pushf
mov
add
push
std
mov
out
lret
pusha
fcompl
loope
and
out
and
push
add
or
xchg
push
add
dec
sbb
xchg
adc
mov
lock
pop
mov
cmp
fldcw
ja
addb
scas
mov
mov
inc
sub
sub
jmp
in
mov
andb
call
fdivrp
cld
mov
fwait
dec
aad
loope
mov
das
pop
leave
cmp
and
sub
xor
dec
gs
test
pop
or
fwait
rclb
ret
daa
in
cltd
and
pop
xor
les
sti
xor
aam
inc
jo
mov
cld
test
test
test
mov
nop
sbbb
pop
stos
or
and
repnz
test
lock
lods
and
in
mov
adc
xor
xor
push
add
and
add
jo
sub
cmp
std
fistpl
add
jmp
cmp
and
int3
inc
jp
sub
mov
cwtl
test
sub
pop
out
inc
iret
cli
mov
adc
ret
xor
and
xchg
inc
cmp
fildl
lds
or
xor
jb
pop
cmp
pop
add
push
push
shll
stos
xchg
loop
adcb
test
lods
in
test
add
xchg
and
out
mov
loop
cld
loope
scas
repnz
shr
pop
adc
and
icebp
dec
mov
mov
call
xor
in
shl
mov
sbb
lret
aad
add
pop
sbb
add
jne
jp
mov
imul
add
inc
jl
es
test
xorl
and
adc
scas
out
dec
add
add
or
pusha
addr16
add
cmp
inc
cwtl
dec
mov
test
mov
dec
add
lahf
orb
dec
sub
dec
test
inc
dec
and
mov
cwtl
mov
sub
adc
test
xor
aam
xor
int3
add
lods
ret
test
clc
sub
and
aas
or
aad
cmp
jecxz
loop
mov
xchg
sbb
and
aaa
pop
xor
xor
mov
pop
add
ja
clc
pushf
movsl
lock
adc
adc
dec
mov
push
sbb
add
es
into
dec
push
sub
sub
lcall
pop
push
sbbb
jp
adc
push
shrb
mov
and
test
mov
jnp
sbb
adc
add
jno
outsb
mov
stos
scas
adc
jne
xor
subl
out
mov
jb
xor
mov
push
mov
or
add
push
fwait
lret
dec
stos
aam
jmp
sub
int3
add
subl
scas
movsl
add
xor
insb
mov
inc
cmpsb
mov
aas
sub
cmp
push
add
pop
dec
mov
adcl
push
enter
push
sub
sub
andl
xchg
scas
call
hlt
mov
sbb
cmc
test
cmpsb
into
mov
dec
in
pushf
mov
xor
inc
je
push
call
pop
hlt
pop
xchg
or
loop
pop
and
pusha
lcall
movsl
mov
mov
pop
sbb
cmc
cmp
cld
push
push
mov
test
push
mov
scas
fs
xchg
mov
push
loop
dec
cmpsb
insb
adc
addb
sub
sub
je
aad
nop
arpl
pop
or
sub
dec
jmp
fs
test
sub
xor
fwait
add
sub
sub
fcomp
into
popa
lods
dec
push
jmp
jb
xor
sbb
lds
cmp
or
insl
fstps
xchg
add
jecxz
add
inc
hlt
pusha
jae
pusha
push
inc
dec
mov
push
jo
enter
or
inc
jb
pop
jnp
jno
push
push
inc
sbb
push
mov
arpl
or
sub
cmpsl
add
push
push
or
adc
outsb
jo
dec
mov
and
pop
int3
inc
enter
ljmp
mov
sub
dec
inc
mov
mov
cwtl
push
or
fildl
push
sub
or
push
xor
or
and
mov
dec
dec
sub
push
into
pop
mov
gs
scas
out
xor
pusha
sub
xlat
pop
add
jmp
adc
adc
mov
or
out
adc
ljmp
mov
push
roll
add
inc
insl
fwait
cmc
pusha
hlt
imul
add
pop
push
lcall
cmp
sbb
scas
push
push
mov
out
cli
popl
cmp
movsl
inc
xchg
adc
jne
out
nop
test
es
mov
cmp
mov
adc
lahf
xchg
stos
in
aaa
or
popa
je
aaa
xchg
add
pop
ret
lahf
dec
add
in
out
cltd
jl
mov
cwtl
xchg
ds
hlt
and
mov
in
add
pusha
jg
cmp
mov
ret
add
adc
add
sub
mov
xchg
add
and
jg
or
fisubs
std
add
popa
sub
cmp
mov
push
call
lret
sub
mov
jbe
cmp
popa
and
fildl
adc
gs
inc
or
ja
dec
pop
rcrl
add
add
jecxz
or
fstpt
test
and
push
cltd
push
add
push
dec
mov
stc
dec
mov
add
xorb
sbb
scas
dec
movb
adc
push
test
leave
mov
and
add
cmp
add
mov
cli
popf
pusha
xchg
cmpsl
jmp
or
adc
pushf
xchg
lret
dec
xor
jne
das
fstpt
mulb
add
sbb
and
push
pop
cmp
mov
ret
jae
ss
and
dec
jge
add
in
mov
cld
psrad
sbb
adc
add
in
ljmp
push
repz
jb
cmp
dec
add
int3
sbb
mov
push
mov
fwait
jmp
pop
push
add
dec
call
add
gs
inc
add
scas
ret
cmp
and
fcmovb
loop
aas
or
insl
sahf
add
add
mov
jo
add
in
sbb
clc
sub
int3
fcompl
inc
cmpsb
pop
popa
add
imul
add
aas
std
pop
into
adc
pop
jge
loope
xor
in
sbb
push
mov
pushl
mov
push
push
iret
inc
fwait
mov
sbb
cld
pop
orb
inc
setge
je
jbe
pusha
add
insb
xchg
fidivl
add
orb
push
or
jno
out
inc
or
jnp
fistpl
leave
add
imulb
push
lret
xlat
adc
cmp
arpl
add
gs
mov
stos
shlb
inc
pop
xchg
and
lret
stos
mov
cmp
cmp
and
movsl
cmp
add
fidivl
pop
add
xchg
lock
cli
leave
jb
add
sbb
out
pop
dec
dec
stc
pop
js
xchg
ss
mov
addb
lock
sbb
ret
cmp
lahf
add
fidivrl
fldt
mov
fmul
inc
pusha
cs
lar
sti
inc
pop
add
xchg
adc
sarb
xorb
jo
nop
test
lcall
shl
js
add
xchg
ja
cltd
sbb
fucomip
shrb
xor
aam
jbe
add
filds
icebp
add
je
loopne
aas
pop
and
xor
ss
jb
icebp
or
sub
mov
out
jne
mov
sbb
enter
add
arpl
aam
inc
push
lcall
add
rcr
es
add
lods
inc
mov
daa
mov
lea
dec
and
jmp
insb
adc
dec
adc
xor
cmpsb
mov
jge
jmp
xorb
sub
hlt
inc
and
pop
add
std
pushf
mov
sub
loopne
into
call
bound
ds
mov
jno
or
sub
cmp
in
ss
add
shlb
pop
and
hlt
loopnew
add
ljmp
repnz
adc
out
mov
clc
movsl
ds
mov
rorb
mov
loopne
inc
shrb
xchg
enter
xor
sbb
sub
jge
lock
sbb
dec
ja
add
mov
imul
daa
popf
lods
add
addr16
xor
dec
in
shlb
rorb
roll
or
adc
outsl
mov
test
add
loop
insb
pop
or
aaa
scas
push
nop
rorb
jge
and
jo
add
or
es
rorl
imul
add
stos
nop
loopne
dec
jg
test
or
mov
iret
push
jg
sub
divb
jp
add
mov
sub
pop
adc
mov
addr16
mov
mov
pop
sbbl
adc
sub
lea
mov
mov
enter
pop
and
cmp
and
or
cmc
add
testl
xchg
dec
add
out
add
push
cmpsb
aaa
pop
fdivp
in
pusha
addl
mov
mov
mov
scas
dec
or
add
sbb
jno
add
add
stos
loope
add
fisttpl
cmp
aam
shlb
loop
sbb
pop
dec
jb
add
negl
pop
add
mov
test
call
xor
shl
sub
add
cmp
inc
dec
lret
dec
add
mov
or
inc
fistps
xor
push
jno
sbb
pusha
loope
inc
cmp
add
hlt
ret
add
sarb
jo
xor
hlt
iret
add
shrb
adc
fisubl
push
and
push
add
pop
push
and
sbb
mov
lahf
xchg
bound
jl
dec
sub
mov
add
adc
push
mov
mov
or
insl
lret
test
jnp
cmp
adc
add
shlb
xchg
cld
es
add
jmp
lcall
push
cmpsb
jl
ljmp
and
add
mov
not
sarb
stos
fcompl
sbb
xlat
fcompl
loop
jg
dec
pop
pop
into
insl
and
cmp
xor
orb
xor
fldt
inc
jbe
test
fsubs
mulb
xor
add
in
loopne
loop
add
mov
fisubrl
push
sub
mov
outsb
int
js
pop
ret
adc
or
setp
in
pop
pop
test
xlat
mov
sbb
movsb
hlt
ror
jnp
ret
xor
clc
cmp
mov
ss
sub
mov
daa
lods
push
jns
jl
push
jb
test
add
popf
in
loopne
cmp
add
out
sbbb
addr16
cmp
std
ret
add
pop
pop
nop
ss
sub
adc
pop
inc
add
aaa
or
pop
jmp
sahf
das
pop
pop
jno
test
and
pop
sbb
mov
fsubs
daa
dec
add
in
inc
add
push
add
rorl
jns
adc
and
inc
nop
psubsb
xor
mov
fwait
jo
sbb
stos
loopne
add
or
mov
push
xchg
mov
outsb
dec
adc
xchg
add
popa
sbb
add
fs
add
sub
add
das
pusha
mov
fstps
mov
jnp,pt
xor
imul
dec
jg
in
dec
leave
add
mov
pop
je
cmp
add
cld
hlt
repz
add
clc
dec
sarl
cmp
jmp
fs
push
mov
dec
mov
cli
leave
aas
mov
cwtl
dec
test
inc
mov
cli
aam
or
push
test
hlt
add
lahf
sbb
add
daa
aaa
add
or
test
add
das
push
call
jae
ljmp
cmp
add
add
or
out
mov
push
lret
cltd
clc
add
pop
and
add
pushf
mov
mov
add
mov
add
and
or
ficoml
push
pusha
jge
xor
repz
add
fcompl
cmp
fs
pushf
push
test
push
xchg
int3
clc
aas
pop
add
xchg
pop
test
rorb
arpl
rorl
cmpsb
push
les
pop
dec
jae
sbb
mov
jmp
leave
and
addb
or
test
adc
add
dec
imul
sbb
std
dec
or
bound
sbb
xchg
ds
add
imul
add
in
xchg
lods
pop
ljmp
push
adc
dec
inc
xchg
call
add
pop
push
lea
rol
mov
add
jmp
adc
mov
test
sahf
lcall
add
aaa
inc
inc
in
jnp
add
adc
js
lods
add
pop
xorb
lds
sbb
repnz
add
cmp
adc
inc
and
pop
pushf
loopne
loopne
mov
pop
push
jle
add
dec
mov
leave
push
clc
aaa
adc
es
mov
add
sti
ds
loopne
adcl
fiaddl
test
add
call
loopne
imul
pop
pop
jnp
xchg
adc
jl
mov
dec
sbb
call
aaa
clc
fucomip
gs
mov
orb
pop
mov
add
jo
cld
add
mov
cmpsl
pop
ja
add
je
add
xchg
lahf
clc
mov
jl
clc
add
push
xchg
into
or
cltd
orb
mov
lret
les
push
mov
or
pop
std
pop
outsw
int3
sbb
loopne
repnz
or
loop
mov
add
aaa
mov
mov
cli
add
sub
inc
lahf
dec
cmp
mov
cltd
push
js
das
cmc
add
lea
dec
and
testb
faddl
js
stc
movsl
popf
pusha
in
or
mov
in
add
addl
mov
fisttps
xchg
testl
pop
dec
ret
jae
leave
mov
in
add
repz
or
hlt
cmp
adcb
jo
add
fimuls
mov
dec
movsl
add
jg
inc
adc
jle
pop
pop
insb
add
aam
or
or
orb
cld
scas
and
push
lods
lock
adc
sbb
das
inc
sub
mov
call
sub
mov
insl
mov
adc
mov
in
notb
out
scas
outsl
jecxz
mov
pop
js
cmpsl
add
push
mov
add
ffreep
or
add
in
es
cmp
and
cmpsb
pop
mov
xor
xchg
inc
or
push
dec
int3
nopl
adc
daa
mov
xchg
mov
xor
test
lods
ja
add
pop
les
pop
cli
and
dec
pop
test
inc
mov
popa
lock
jbe
hlt
imul
add
and
add
repnz
mov
bound
pop
pop
int3
inc
mov
notl
and
test
push
jg
add
xchg
or
add
push
adcb
aam
mov
xchg
inc
sub
sub
sbb
add
das
popa
sbb
aad
sub
add
xchg
stos
mov
add
cld
cltd
pop
mov
jns
je
inc
add
xchg
imul
scas
push
rcrb
out
inc
fmuls
icebp
dec
dec
inc
add
out
mov
adc
xchg
test
jle
cltd
xor
and
push
adc
iret
mov
mov
or
mov
xchg
sbb
mov
mov
jno
outsb
pop
and
xchg
in
dec
push
dec
push
add
mov
add
xor
sub
and
cs
mov
jg
fisttps
in
leave
xchg
sahf
movsl
clc
adc
push
int3
test
std
ds
inc
pop
or
cmp
pop
cmp
lods
aam
inc
sbb
clc
idivl
adc
lret
xor
jge
mov
or
sub
cmp
pop
ja
jb,pt
add
or
popf
data16
mov
add
lds
xchg
ja
test
lret
dec
mov
ficomps
out
jbe
add
or
inc
movsl
jo
add
test
sbb
xor
or
xchg
adc
cmp
or
jnp
jns
add
int3
dec
sti
add
push
fsubs
lahf
pop
push
enter
loopne
cwtl
arpl
cmp
pop
jns
stos
subb
mov
add
and
adc
or
jne
movlps
jmp
mov
jo
sub
cmp
negb
add
pop
cld
xor
pop
xor
add
add
fcomps
add
mov
lods
mov
rcrl
loopne
roll
xchg
pop
jl
gs
cmp
sahf
and
rcrb
sbb
mov
or
xor
sbb
lods
fcmovne
add
mov
sbb
xchg
mov
mov
mov
add
push
xor
add
mov
dec
imul
or
paddusb
pop
hlt
inc
mov
jle
js
dec
dec
sbb
inc
jb
dec
mov
and
fsts
xchg
sti
std
add
pusha
ret
pop
inc
loopne
mov
test
jae
dec
fisttpl
testb
jnp
sub
adc
add
popa
and
das
sub
mov
xor
pop
or
sbb
pop
lock
or
pop
fldl
ret
inc
out
add
je
cmpsb
cli
pop
lock
add
imul
add
lea
outsl
add
jmp
daa
add
add
sub
inc
je
pop
nop
js
xchg
inc
and
pop
cmp
dec
and
add
add
or
add
lret
jb
hlt
test
mulb
xchg
gs
add
scas
shl
stos
addr16
pop
cmpb
pop
and
sbb
push
arpl
loopne
je
pop
daa
jne
pop
push
shlb
jnp
and
sub
and
push
pop
pusha
dec
std
jno
fldl
mov
lods
xor
xchg
cli
cmp
out
sub
cmp
mov
bound
xchg
add
and
push
and
and
jg
jle
sub
mov
xor
int3
lock
sbb
add
loope
movsb
fsubrs
in
roll
rolb
movl
push
adc
data16
add
dec
pop
cmp
es
xlat
push
inc
mov
pop
lret
sbb
pop
in
call
add
cs
test
xchg
mov
ljmp
and
call
add
leave
mov
jmp
dec
inc
jp
push
push
push
pop
lds
adc
mov
clc
rolb
pushf
add
and
sub
mov
pop
push
push
pop
iret
lret
jbe
outsl
in
xchg
fiadds
movsb
pusha
cwtl
mov
add
test
cli
mov
fnop
push
nop
jns
pop
imul
mov
sbb
enter
mov
push
js
clc
pop
inc
pusha
int
jp
jg
rolb
les
loop
ss
add
mov
lds
or
or
aad
push
adc
mov
daa
jmp
cmp
cld
ss
movsb
mov
jns
lret
sub
push
call
dec
addr16
or
lcall
and
imul
add
and
cmp
sbb
fsubrs
or
add
test
loopne
aaa
add
scas
fucom
jg
lahf
or
dec
mov
hlt
and
imul
mov
fldt
rorb
mov
pop
fsubrl
arpl
movsl
jnp
jbe
mov
adc
lods
je
lret
mov
popf
pop
dec
out
mov
enter
jp
repz
add
push
daa
sti
shlb
mov
psrld
outsl
dec
add
or
negb
movsl
loop
jge
add
pop
loopne
icebp
xor
cmpl
push
dec
sar
lock
loopne
xor
push
fldt
add
mov
addr16
movsl
add
sub
and
pop
add
enter
inc
jb
mov
add
and
add
lahf
inc
std
cmp
jno
fisubl
pusha
cmpsb
jae
add
push
mov
inc
ret
mov
jne
pop
loop
push
int
sub
mov
add
adc
sub
leave
add
enter
add
push
sbb
mov
call
lret
sbb
push
testl
add
pop
leave
popa
mov
repnz
push
lret
orb
xor
xor
dec
cmp
mov
adc
xchg
and
mov
add
mov
into
push
jp
and
fdivrs
mov
mov
and
mov
sldt
cmpsb
das
pusha
dec
mov
mov
repnz
pushf
sbbb
mov
lahf
jge
xchg
pushf
xor
scas
aaa
fbstp
ja
add
test
adc
test
push
ja
movsl
pop
push
or
ret
xchg
je
add
pop
aas
enter
add
inc
push
add
fistl
add
jle
xorb
mov
dec
outsb
arpl
or
and
push
sbb
cmpsb
xor
xchg
inc
ret
cmp
add
add
ja
xchg
mov
cltd
cmp
or
pusha
movsb
divl
cmp
dec
iret
addr16
pop
dec
out
mov
adc
daa
add
lcall
push
sbb
push
add
inc
out
mov
mov
cs
ss
add
insb
movsl
jae
jmp
stc
inc
rorb
sbb
enter
pop
jbe
pop
or
sub
orl
fisttpl
add
push
mov
add
arpl
add
jns
inc
mov
add
mov
push
and
xchg
popa
js
push
fbld
imul
lock
js
add
pop
push
lahf
dec
stc
xor
addr16
rcrb
pop
je
jnp
jo
jno
arpl
fidivrl
in
shll
gs
scas
int3
jbe
jg
incb
and
lock
mov
ljmp
inc
add
insl
sbb
lds
push
push
imulb
rorb
stos
rcll
shl
mov
repnz
fcoms
les
ret
cmc
push
roll
rclb
cmp
ret
add
iret
stos
xchg
fwait
jb
push
xor
or
push
mov
int3
add
in
xlat
mov
add
js
xchg
scas
filds
clc
das
mov
out
add
fisttpll
xchg
nop
add
or
jno
test
ja
add
push
cltd
add
jne
mov
xor
xor
and
xchg
outsb
sbb
adc
bound
pop
add
push
xchg
xchg
add
arpl
and
cmp
inc
enter
add
lcall
jg
fists
jno
pop
pushf
cltd
loop
mov
cmp
fnstenv
add
dec
lahf
inc
sbb
inc
popf
xor
into
push
push
movb
or
sub
sbb
pop
pusha
jg
add
repz
outsl
aas
pop
push
add
xchg
mov
xlat
push
pop
pop
pop
addl
popa
adc
jg
add
push
xchg
aas
and
mov
pop
mov
xor
adc
dec
movsl
sub
test
out
lret
push
cmpl
cld
push
imul
pop
mov
jp
cmpsb
and
sbb
roll
arpl
loopne
mov
push
pop
or
add
add
loope
cltd
out
stos
add
adc
mov
ja
dec
pop
addb
stos
mull
add
fwait
mov
or
mov
cli
xchg
hlt
mov
push
jge
push
mov
lods
repnz
inc
outsl
arpl
lods
cld
and
mov
insb
xor
in
cmc
sbb
xchg
sbb
sbb
stos
adc
cmp
add
mov
mov
out
loope,pn
mov
jge
test
aam
adcl
popa
jbe
gs
sub
pop
jnp
xor
jns
sbb
dec
cmp
fmul
adc
or
mov
mov
mov
add
sub
mov
hlt
xlat
add
movsl
imul
test
leave
jns
popa
sbb
clc
jge
inc
loop
cmp
lock
add
mov
adc
test
jge
out
add
or
pop
nop
push
add
lods
dec
jnp
fwait
add
xchg
add
orl
ret
add
mov
lds
add
mov
inc
mov
in
cmc
add
push
movsb
and
stos
or
pop
scas
add
xchg
xchg
cli
ja
sbb
mov
bound
add
loop
icebp
addr16
mov
je
jnp
pushf
mov
push
sub
aaa
cmp
push
repz
dec
daa
idivl
jo
ds
mov
repz
add
mov
popf
or
iret
fldl
mov
adc
and
jae
dec
int
rolb
fnstcw
faddl
add
out
ja
and
loop
leave
jecxz
out
xchg
jb
push
aas
sbb
jae
xor
cmp
xor
jo
stos
adc
add
jae
sub
ds
scas
add
push
dec
shll
jne
and
call
mov
orl
and
ret
xchg
pop
daa
inc
mov
sub
loop
pop
push
cwtl
sbb
leave
dec
cwtl
lret
push
loopne
inc
xchg
jo
lret
repnz
xchg
pop
push
jmp
lods
pop
not
add
popa
push
sbb
pop
cmp
repz
xchg
mov
imul
mov
repz
hlt
inc
cmp
movups
sbb
push
call
pop
aam
leave
ret
mov
jne
push
lret
or
xor
sub
pop
out
outsl
sar
movsb
rorl
fbld
and
add
jns
leave
xor
or
xchg
int
adc
add
test
roll
mov
cmp
lret
ret
dec
insl
dec
xor
les
ficoms
js
jge
cwtl
cmp
pop
push
add
cs
mov
add
jne
lcall
jno
lods
add
adc
cmp
cwtl
rolb
push
aas
lcall
mov
push
faddl
cltd
xor
mov
lea
cs
int
inc
sbb
adc
nop
sub
mov
sbbb
std
mov
es
jecxz
fildl
sub
sarb
dec
mov
in
adc
dec
aam
sti
pop
lahf
or
ret
insl
push
add
push
out
xor
xchg
inc
jmp
aad
pop
dec
mov
xchg
and
mov
push
sub
pop
and
shll
fsubs
add
mov
sub
clc
or
mov
add
outsb
add
pusha
imul
inc
or
fildl
and
lcall
push
stos
add
scas
and
faddl
ljmpw
mov
fisttpll
imul
add
pop
je
repnz
out
or
fsubl
and
sbb
sub
add
jne
push
cmp
sub
les
fistpll
sarl
icebp
int3
adc
xchg
in
inc
xor
push
xchg
or
incl
or
jne
ljmp
lock
and
mov
add
roll
btc
inc
stos
inc
xchg
rol
loop
add
push
mov
mov
or
lock
cmp
testl
gs
std
daa
xor
imul
cltd
add
mov
movsb
cmp
ljmp
xchg
fcoml
add
pop
fisubrs
fmuls
push
lods
jl
pop
dec
and
push
mov
push
les
xchg
std
sub
lcall
cmp
or
stc
add
jnp
add
cmp
int
adc
enter
push
cli
cmp
add
inc
ret
xlat
add
mov
sub
sbb
cmp
mov
cld
jnp
sbb
cltd
in
js
add
push
add
fs
cmp
add
shrb
add
mov
add
sub
cwtl
shll
cmp
sbb
pop
xor
sbb
lds
cmp
loope
pop
mov
and
add
loop
push
adc
nop
enter
jne
mov
sbb
loop
aad
enter
pop
call
loope
cld
test
int3
sub
add
jle
jno
ljmp
adcb
xchg
sbb
xchg
cmp
add
dec
stos
shlb
inc
cwtl
cmp
les
pop
pusha
pop
jb
mov
push
std
into
xlat
stos
xor
fstpt
jecxz
test
hlt
in
sti
add
ljmp
dec
leave
sbb
add
adc
stc
and
inc
outsl
inc
pop
test
fs
lcall
test
es
in
add
mov
add
push
jns
lcall
movsl
pop
rorl
repz
xor
add
leave
gs
ds
jmp
imul
push
arpl
aaa
sub
xor
cmc
cld
and
sbb
xlat
dec
dec
mov
inc
gs
cmp
cli
add
and
jo
sub
mov
icebp
shll
xchg
push
aaa
add
clc
lock
adc
xchg
mov
test
leave
push
sbb
pop
inc
inc
xor
fldcw
pop
mov
lock
mov
and
add
fimuls
add
add
in
imul
mov
add
mov
cwtl
add
pop
xchg
rol
mov
aaa
add
arpl
push
mov
cmp
cli
int3
or
or
test
xor
add
push
sbb
insb
addr16
lcall
jge
je
mov
sbb
lret
or
pop
add
push
inc
inc
repz
xchg
push
aas
sub
inc
inc
cli
inc
arpl
mov
add
dec
xchg
insb
shlb
fcom
cmp
jle
xchg
scas
pmaddwd
aas
jp
popf
dec
mov
add
insl
cmc
add
cmp
push
jns,pn
mov
xchg
lea
negb
out
mov
hlt
por
js
roll
lock
popf
outsb
push
por
into
lock
jl
hlt
or
push
push
outsb
pop
loop
cmc
jne
cwtl
aam
sub
ud2
add
scas
sbb
ret
cmp
add
adc
mov
push
lods
decl
add
icebp
mov
jo
sbb
inc
dec
xchg
mov
inc
add
dec
mov
add
outsb
jl
add
pop
repnz
add
jo
lds
add
jp
lahf
inc
xchg
cmp
outsl
movsb
add
xchg
sub
shlb
rorl
jb
sub
mov
sub
add
add
mov
sbb
push
sub
shlb
and
test
add
test
icebp
mov
add
lods
dec
pop
imul
mov
cmp
add
cmp
sbb
dec
int3
in
sub
mov
pop
out
popa
inc
jo
mov
dec
pop
add
aaa
adc
xchg
les
daa
xor
sahf
cli
clc
inc
add
or
lock
std
add
dec
ds
xchg
js
add
les
ja
add
rcrb
pop
jmp
pushf
xchg
fmuls
pop
andb
jge
mov
or
xor
mov
mov
mov
dec
clc
movsb
add
pop
cmp
imul
sub
mov
add
mov
add
sub
or
out
sub
mov
ror
scas
insb
out
inc
push
and
cmp
cltd
out
adc
jg
arpl
adcl
ror
cs
mov
jo
add
xorb
sti
mov
ja
lods
aaa
pop
bound
xchg
xchg
or
mov
mov
cmp
sub
add
mov
add
shrl
sbb
xor
jnp
jae
inc
sbb
mov
dec
add
dec
and
fs
repz
xor
movsl
add
and
pop
jb
movsb
add
dec
mov
adc
ficomps
mov
push
inc
mov
ljmp
mov
enter
mov
sub
mov
push
sbb
sbb
je
dec
mov
push
add
inc
pop
in
in
sbb
lods
dec
jmp
lods
scas
mov
dec
fidivrs
mov
stc
lahf
ds
call
hlt
adc
repz
pshufw
imul
dec
lock
lret
add
ss
sub
setp
rorb
add
push
negb
loopnew
int3
adc
cmpsb
js
cmp
out
repnz
jbe
pushf
add
fdivrs
icebp
sub
add
shrl
dec
cmp
sub
mov
scas
repnz
lock
lcall
out
ljmp
push
cmp
std
sub
sub
stos
and
std
sub
mov
xlat
aad
pop
add
add
stc
jg
add
cmp
scas
cmp
pop
jo
adc
jg
test
in
jo
pop
sbb
add
jne
inc
inc
xor
dec
stc
sub
pop
add
dec
clc
mov
adc
lahf
iret
fmull
inc
push
daa
lea
push
adc
or
mov
xor
testb
fwait
and
dec
pop
jbe
add
xchg
sbb
add
fdivrs
addb
cmpsl
sbb
pop
xchg
mov
lret
lret
dec
cmp
push
push
lods
and
out
andb
call
jp
setae
pusha
je
adc
call
mov
push
add
inc
ja
imul
cmp
repnz
popl
loopne
cltd
add
movsb
xchg
repz
test
add
scas
xor
sbb
add
pop
ret
stc
and
loop
test
pop
stos
pop
fnstsw
pushf
xor
cmp
clc
enter
das
add
xorb
mov
cmp
inc
lea
aas
inc
xor
mov
cs
push
add
jp
mov
mov
xor
inc
xor
push
out
inc
xor
lret
inc
mov
lahf
in
sbb
clc
and
add
jno
ljmp
cwtl
and
cmpsb
imul
fldl
lret
je
jl
nop
sbb
pop
outsl
ja
xorb
testb
daa
mov
inc
adc
xchg
push
xlat
orb
sub
jbe
mov
mov
rcrl
mov
add
addr16
out
notl
jae
or
cli
repz
and
fadds
imul
clc
inc
add
lea
addr16
mov
out
sub
adc
into
insl
cmp
daa
sbb
xor
out
pop
fs
ss
and
movsb
nop
pusha
add
enter
ds
or
xchg
lret
xor
roll
xor
divl
mov
jnp
dec
lahf
cmp
dec
cmpsb
daa
mov
fiadds
sub
push
dec
add
ljmp
mov
mov
xlat
and
int
movsb
cmp
jle
pop
mov
sbb
jmp
int3
das
es
add
xchg
add
mov
add
mov
ss
push
popa
xchg
ds
sub
xchg
adc
and
loop
mov
stos
push
mov
add
jo
inc
add
insb
pusha
mov
int3
andb
mov
insl
loop
dec
sbb
add
sbb
and
push
bound
mov
jge
inc
pop
in
xor
lea
mov
adc
js
popa
or
mov
cmp
pop
push
loop
cmp
ret
mov
dec
pop
pop
push
xchg
test
lock
js
shufps
pop
inc
int
jbe
or
xor
scas
sbb
mov
sbbl
lds
sahf
pop
add
sbb
sub
in
pop
xlat
adc
pusha
imull
inc
test
add
lahf
mov
lret
sub
adc
jecxz
push
jge
out
push
xchg
or
and
push
test
jb
mov
jmp
push
mov
add
out
imul
adc
mov
lret
mov
enter
inc
lods
xchg
jb
mov
stos
push
push
sbb
mov
pop
aas
push
inc
mov
je
fisubs
sbb
pop
adc
jne
jecxz
mov
mov
add
adc
jge
and
scas
int3
js
cltd
xor
movsb
add
and
hlt
dec
fidivrl
add
mov
or
xchg
outsb
sbb
scas
cwtl
cmp
xchg
cmpb
stos
fidivrl
add
jne
fwait
xchg
lock
add
insb
push
fcompl
push
jo
test
sti
inc
jl
clc
push
out
pop
add
popf
push
fsubs
das
ja
add
les
mov
out
cmp
dec
daa
mov
and
and
cmpsl
mov
jecxz
xchg
xchg
sbb
add
mov
mov
add
sub
mov
push
dec
add
sub
and
sbb
sbb
pop
add
mov
jo
std
sub
div
add
sub
call
mov
out
cmp
add
jo
or
into
add
dec
in
lretw
sbb
mov
mov
cmpsb
push
add
cld
rorb
out
inc
xchg
ret
push
in
pop
fadds
lahf
insl
lock
arpl
lcall
add
xchg
divps
mov
mov
pusha
icebp
std
add
dec
hlt
lcall
lods
repnz
sti
mov
int
jb
sbb
gs
jmp
mov
xchg
add
jne
inc
test
adc
and
gs
loop
mov
bound
ljmp
mov
push
rcl
mov
je
sub
add
xor
ljmp
add
fdivrp
andb
je
pop
ret
mov
ds
loopne
out
insl
sbb
ret
sub
stos
mov
imul
mov
push
mov
mov
mov
add
je
aas
xchg
mov
mov
add
mov
xchg
enter
add
mov
jb
xlat
dec
cmp
cmp
popa
mov
inc
mov
dec
mov
dec
add
cmc
sbb
imul
mov
jo
rclb
inc
sub
jno
repnz
mov
lods
shlb
xchg
mov
pop
in
cmp
push
sbb
rorb
mov
jecxz
fbld
loop
add
sub
jae
dec
add
ds
cmp
jge
mov
test
cmp
loope
movb
ficoms
push
imul
cmp
mov
jne
sbb
outsl
in
jl
add
mov
add
cmp
lahf
mov
pop
xchg
jle
fstpl
add
loopne
repz
ja
addb
xchg
bound
xchg
mov
ljmp
adc
fsubr
xchg
jo
test
push
xor
xchg
add
mov
adc
add
mov
addr16
fstpl
xor
add
sar
push
std
inc
push
sahf
jle
cmp
adc
adc
addb
pop
add
xchg
daa
in
fnstsw
mov
dec
out
cwtl
cmp
add
movsb
cmp
xchg
push
adc
add
int3
push
add
pop
dec
add
loope
scas
aas
add
fs
add
push
lret
add
ds
sub
add
test
sub
icebp
fnstenv
cmpb
xchg
lret
into
leave
sub
jne
and
add
push
jbe
add
cwtl
mov
pusha
xchg
clc
mov
fldl
jbe
mov
loop
and
and
dec
fidivs
inc
add
das
jo
jb
xchg
xor
mov
loop
cmp
mov
jns
cmp
int
add
pop
jne
into
ret
mov
add
and
lods
xor
add
bound
je
add
add
out
mov
out
pop
sbb
pop
sub
pusha
nop
cmc
jne
icebp
pop
sub
push
data16
mov
jecxz
push
pop
int3
and
in
jnp
cltd
repz
mov
cmpsb
pop
xlat
add
shr
repnz
int3
out
sub
xor
js
cmp
sub
call
sub
inc
in
fldz
add
push
push
test
fiadds
roll
test
jno
rcr
outsl
push
mov
jne
andb
stos
cmpsl
icebp
jb
call
pop
lds
mov
or
sub
cmp
rolb
add
push
stos
jae
xchg
mov
ret
int3
nop
inc
add
int
dec
pop
or
sti
lret
ja
mov
add
dec
push
push
aas
fdivs
dec
roll
aad
pop
shll
or
xchg
sbb
nop
sbb
xchg
lock
jl
add
jl
shlb
ja
add
add
mov
mov
es
cvttps2pi
fcoms
xchg
push
add
mov
or
in
mov
fdivr
loopne
mov
xor
ret
push
add
pop
push
mov
add
aaa
into
fiaddl
gs
insb
push
or
inc
push
sbb
iret
jne
sub
lahf
addr16
les
push
mov
aam
push
ljmp
call
xchg
add
incb
adc
push
arpl
clc
add
loopne
test
out
lock
xorl
inc
cmp
push
add
loope
pop
sahf
and
popa
es
aaa
dec
xchg
outsb
inc
enter
pop
addb
ret
jmp
fcomps
xchg
insl
add
and
in
xchg
adc
pop
add
cmpsb
inc
lock
jecxz
add
cmp
add
mov
inc
in
imul
add
into
test
int3
je
repnz
push
mov
in
add
jge
jecxz
add
lret
stc
addb
pushw
mov
std
pushf
bound
jle
xchg
mov
lock
sbb
mov
pusha
adc
hlt
cmpsl
jno
es
out
lahf
pop
fsubs
nop
in
add
push
lods
lds
int3
sub
sbb
push
enter
fbld
pusha
icebp
jnp
movsl
lods
outsl
add
dec
shrb
mov
push
add
inc
jl
iret
mov
in
add
sub
icebp
rorl
aad
jno
add
jp
test
xchg
insb
sbb
out
add
aam
dec
xchg
cmpsb
ret
fists
popf
jmp
call
int3
adc
sbb
sbb
xor
sarl
pop
clc
push
test
mov
int3
lds
jns
fisubrl
mov
jl
dec
pop
add
scas
jo
mov
and
in
inc
add
mov
jecxz
shl
push
imul
jnp
das
pop
in
ret
divb
rolb
inc
pop
and
or
ja
int3
add
stc
stos
cs
rclb
pop
adc
push
rclb
stos
inc
jmp
push
fsub
add
mov
cmp
mov
sbb
shr
add
cwtl
cli
imul
xchg
cmc
adc
add
jnp
scas
data16
aam
repz
mov
aas
int3
dec
in
add
lods
add
cli
push
ret
inc
push
add
add
mov
andb
aad
add
sub
add
mov
mov
sarb
imul
add
and
loopne
and
je
dec
add
mov
roll
sahf
and
nop
out
scas
mov
mov
ret
add
jg
imul
jns
lret
imul
lds
fldl
jp
insl
lods
enter
jne
add
jne
inc
mov
mov
push
mov
mov
gs
mov
mov
xorb
inc
pusha
adc
movsb
movsl
and
outsl
leave
adc
xchg
xchg
mov
jl
add
xor
and
adc
adc
ret
add
aam
pop
mov
lret
and
iret
stc
dec
cmp
divl
push
nop
out
or
cld
loope
sub
mov
flds
dec
jo
jp
pop
call
popa
xchg
in
ds
lcall
inc
sbb
lock
add
xchg
lods
bound
push
fnsave
add
lods
and
sbb
out
mov
pop
sti
sbb
rol
and
test
fsubs
out
add
adc
xchg
loope
inc
pushf
sub
aaa
divl
lods
mov
orl
mov
mov
xchg
iret
sahf
xor
and
shrb
add
ret
add
cmpsb
imul
cmp
mov
mov
xor
mov
sarb
into
dec
inc
add
xor
inc
jno
mov
pop
mov
cmp
xchg
cmp
std
lock
mov
fsub
adc
call
bound
jmp
sbb
fldcw
jmp
repnz
aaa
lods
inc
push
dec
sbb
xchg
sti
mov
adc
jno
cli
mov
std
add
loopne
adc
scas
mov
jne
inc
stos
xchg
and
ja
mov
in
jmp
xchg
cltd
add
adc
lcall
pop
pop
rol
arpl
pop
rclb
nop
push
and
shrl
jg
test
mov
or
jge
mov
jmp
and
cmp
jbe
hlt
shlb
xchg
repz
pop
sbb
xchg
mov
das
stos
leave
nop
es
pop
push
push
insb
cmp
add
in
fstpl
mov
xchg
mov
insb
push
andl
push
js
adcl
mov
into
addb
les
pop
xchg
add
dec
pop
jmp
xorl
and
mov
jg
pop
int3
mov
mov
faddl
shlb
sub
add
xchg
add
add
lret
mov
outsl
sub
mov
mov
and
xchg
insl
add
mov
and
fldcw
sub
stc
mov
cmpl
mov
add
add
pop
int3
fcoms
bound
aam
add
pop
lock
inc
clc
jg
add
inc
icebp
sub
rorl
inc
cmp
mov
daa
out
inc
pop
imul
movsl
add
jns
jnp
adc
sub
xchg
rol
push
or
aam
js
xor
cmp
sbb
std
push
int3
mov
sarl
add
stc
adc
cwtl
xlat
mov
sub
xchg
pop
and
inc
jecxz
sbb
js
shlb
flds
icebp
ja
sub
jl
add
das
cmp
imul
mov
jl
xor
outsl
ja
int3
insb
xchg
add
enter
aam
out
push
ret
mov
push
xor
cmp
pop
or
xchg
pop
mov
addr16
cmpsb
loopne
inc
lcall
adc
leave
add
jo
mov
sub
dec
lds
test
add
sarb
xor
aaa
ja
pop
xorb
add
lods
pop
mov
jo
mov
cmp
lret
mov
je
inc
ds
aas
stos
or
popf
cmpl
mov
clc
mov
pop
cltd
and
cmp
faddl
dec
mov
push
sbb
daa
and
cmpsb
lock
in
xor
add
and
rcll
or
lds
pop
jbe
cmp
fsts
mov
and
aam
mov
dec
lods
xor
push
mov
sub
or
dec
popf
inc
loopne
incb
fistpl
scas
testb
jle
mov
dec
push
mov
push
pop
test
fmulp
adc
pusha
mov
sbb
or
dec
or
lds
and
xor
lods
and
out
add
hlt
cmpsb
pop
push
xor
or
add
xchg
push
out
ss
ss
mov
hlt
mov
or
and
loopne
fdiv
rclb
pop
mov
sub
pushf
sbb
popf
or
insb
loope
pop
scas
and
cmpsb
inc
fcoms
and
push
jae
add
fiadds
and
scas
mov
pop
cmp
fidivrl
xchg
mov
add
adc
adcl
pushf
pop
mov
and
mov
xor
shll
inc
mov
popf
lea
pop
jle
pop
das
xorb
mov
jle
xor
cwtl
das
and
mov
mov
mov
pushf
sbb
mov
adc
jp
loopne
sub
mov
cmp
inc
loopne
roll
add
scas
in
push
loopne
fstp
pusha
lods
sbb
popa
adc
push
cmp
iret
icebp
rorb
dec
dec
push
out
push
nop
in
cmp
in
fidivrs
test
or
fwait
or
mov
aaa
fadds
push
call
icebp
sbb
mov
sbbl
fsubr
inc
and
call
test
scas
ss
mov
jecxz
fsubr
dec
shrl
and
sub
stc
les
and
mov
pop
pusha
movb
movsl
xor
push
fmulp
clc
push
sub
and
nop
or
add
aaa
inc
cmpb
daa
popa
sub
mov
pop
shrb
xchg
addl
and
mov
mov
mov
inc
sbb
lock
adc
es
cmp
movsb
in
sarb
int3
adc
xor
out
fwait
popf
cltd
clc
add
mov
in
push
add
pop
cwtl
stos
nop
adc
lods
pop
or
dec
call
ds
inc
and
lods
sbb
push
loopne
mov
sti
jle
sbb
mov
dec
and
and
push
xchg
lods
push
nop
add
test
mov
pusha
lea
mov
add
push
push
aam
scas
adc
mov
insb
jns
and
sbb
int
loopne
push
sub
test
pop
sub
push
nop
mov
es
or
ss
loopne
daa
sbb
pop
or
mov
js
movsb
pop
mov
scas
bound
test
repnz
or
loop
movsb
pusha
jg
lahf
repnz
fsts
enter
mov
and
add
rolb
lods
pop
push
or
mov
ficoms
jl
mov
add
and
add
data16
inc
js
jmp
test
aaa
push
add
mov
add
mov
nop
sub
dec
and
xchg
pop
or
xor
sub
js
add
pushf
pop
adc
scas
sbb
sub
sub
mov
lret
xor
jl
ss
push
adc
mov
pop
or
jmp
or
dec
in
sub
fs
inc
and
adc
es
or
and
inc
sbb
unpckhps
loop
mov
xchg
or
test
sub
gs
js
add
cmp
cmpsb
add
aas
jne
sbb
add
pop
mov
cmp
pusha
pop
push
enter
pop
rorl
add
aad
cmp
es
inc
inc
orb
xchg
or
sub
pop
stos
push
inc
addr16
add
jle
fiadds
pusha
cwtl
jae
add
notb
cmp
jae
lods
jge
das
add
cmc
mov
lret
or
addr16
adc
xor
loopne
push
mov
add
shrb
iret
idiv
insb
sub
aad
enter
push
fdivrp
fs
pushf
add
dec
sbb
fs
cld
insb
repnz
add
xor
sbb
inc
shl
fnstsw
pusha
repnz
add
jp
xchg
adcb
sbb
mov
mov
adc
add
jne
push
pusha
stos
cwtl
es
cld
add
mov
lahf
inc
add
add
dec
adc
mov
das
shl
iret
jmp
sbb
add
cmp
push
jmp
out
sbb
add
hlt
mov
ret
loop
xor
sbb
push
add
leave
dec
jns
add
inc
fbld
add
lock
je
or
popf
cmp
das
mov
xor
add
xchg
xor
push
add
and
and
in
push
out
js
in
xchg
cmpb
nop
lods
icebp
jne
lcall
in
fildl
das
shll
push
add
jno
xor
repz
inc
lock
in
jbe
jnp
add
aas
dec
dec
sbb
or
cmp
in
xchg
mov
xlat
jnp
fdivp
mov
dec
push
add
add
je
stos
shr
xchg
mov
or
sbb
int3
push
inc
jge
add
add
push
and
lahf
sbb
pop
adcb
adc
mov
jo
mov
sub
jne
add
call
sbb
mov
add
jne
push
mov
test
in
mov
rcrl
imul
loopne
jno
jl
stos
pop
lods
dec
fimull
sbb
ja
add
mov
lods
fisttpl
pushl
cmp
dec
jno
roll
ds
jne
xchg
rorb
ret
sti
jbe
sub
les
jmp
rcr
xor
add
addr16
popa
sub
lods
lahf
xchg
andb
sbb
mov
sub
std
xchg
add
mov
inc
lock
pop
fcoml
popl
ja
and
repz
or
jb
fs
adc
mov
orl
pop
rcrl
test
call
adc
add
lods
and
sub
mov
cmp
cmp
add
into
pop
pop
arpl
sub
mov
aad
gs
icebp
movsl
push
push
cli
sbb
outsb
add
imul
inc
and
add
add
or
add
fsubrs
jne
add
outsb
mov
stc
adc
fs
jge
push
in
aam
pop
es
movsb
lock
push
cmpb
inc
jge
insl
jns
fistl
leave
sti
add
es
jnp
loope
push
mov
insb
mov
ret
and
clc
cld
and
cmp
int3
and
ds
add
sub
jle
test
cs
push
adc
lea
ficompl
call
es
ret
test
add
jecxz
pop
mov
pop
mov
call
addb
pop
mull
out
divps
lahf
cmp
cld
mov
fistpl
icebp
add
or
mov
add
mov
mov
inc
sbb
call
inc
mov
add
add
rorb
sbb
and
xor
fucom
xchg
cmp
cmp
mov
cmpsl
loopne
movsl
or
movsb
and
add
mov
xchg
ss
pop
aam
sub
hlt
je
mov
and
xchg
add
jns
dec
jmp
jnp
cmp
mov
add
xor
cmp
cmpsl
dec
lahf
movsb
add
and
fiaddl
push
mov
pusha
add
enter
add
push
add
flds
call
adc
nop
lret
lods
gs
cmp
rolb
xlat
mov
adc
push
mov
fsubs
mov
test
aam
inc
add
cmp
adc
add
dec
call
mov
dec
test
ret
add
sub
out
ds
push
sub
aas
insl
je
popa
mov
aam
mov
cld
loopne
sbb
fdivl
jo
jnp
leave
inc
mov
js
movl
cwtl
inc
add
push
mov
mov
or
rolb
mov
std
or
add
lret
mov
in
add
out
fs
add
mov
enter
mov
xor
sbb
dec
sub
lods
add
xchg
fldenv
mov
or
loopne
mov
sub
push
or
and
pop
in
fcmovnbe
leave
lds
loopne
rol
int
mov
imul
addb
lock
fsubrp
lods
gs
xchg
fld
add
popa
fcoms
dec
repnz
out
clc
cmp
dec
add
mov
and
ja
add
out
lcall
inc
cmp
add
dec
mov
in
pusha
ret
mov
popa
add
test
mov
idivl
sub
nop
fcmovnbe
cld
or
fwait
in
sub
adc
jns
mov
mov
jae
push
xchg
out
mov
or
mov
xor
add
dec
fisttpl
add
xor
mov
daa
inc
ss
lock
pop
or
add
jle
iret
sub
jns
pcmpgtw
mov
or
push
lods
lds
nop
mov
adc
rorb
sub
jge
add
xchg
and
jbe
mov
pop
cli
add
jns
pop
cwtl
in
and
or
in
roll
lret
sub
shlb
pop
push
and
or
mov
jl
pop
mov
jbe
movsl
int3
adc
add
and
iret
adcl
push
mov
ds
and
fcompl
roll
push
repz
add
pop
and
add
mov
mov
mov
pop
icebp
out
push
add
mov
pop
sbb
sar
pop
je
out
shlb
xchg
das
in
out
test
mov
test
xor
add
ficompl
add
call
pop
dec
repz
rcrb
in
loope
stos
ja
pusha
call
out
hlt
imul
repz
jo
xorb
dec
cwtl
rolb
adc
sub
pusha
add
add
loop
addl
jg
add
xchg
push
sti
inc
dec
pusha
lret
or
dec
mov
adc
pop
and
add
hlt
and
xor
jae
cld
into
jge
add
aaa
jg
add
ljmp
xchg
andl
xchg
dec
or
mov
mov
mov
add
into
ret
mov
popa
xor
aam
xchg
sbb
nop
cmp
mov
jno
aas
add
insb
inc
les
arpl
mov
add
loop
in
adc
sbb
xchg
push
subl
inc
push
insb
add
xchg
xchg
dec
dec
bound
and
ljmp
push
xor
pop
inc
add
es
sub
push
call
fsubrs
sti
cmp
aaa
cmp
nop
imul
lret
js
pop
jae
sbb
add
add
push
aas
cmp
divl
pop
inc
sbb
jnp
add
add
ret
inc
cmp
in
sti
fcomps
mov
add
pop
scas
inc
mov
xchg
or
add
adc
out
add
jg
addl
cmp
push
or
loopne
sbb
es
mov
out
push
xor
aaa
cwtl
sbb
out
repz
sbb
mov
stos
in
xchg
jne
or
jo
arpl
clc
and
pushf
test
xchg
iret
push
add
in
sub
cwtl
pop
add
test
sarb
sbb
or
imul
movsb
jae
gs
add
loope
mov
jns
loopne
add
in
mov
je
sarb
dec
pusha
in
popa
mov
xchg
pop
jmp
xchg
and
test
jle
stos
add
xor
fimuls
add
dec
cmc
add
mov
cmpsb
stc
mov
adc
in
mov
arpl
dec
pop
fisubs
mov
pop
ret
inc
movsl
or
jge
sub
cwtl
inc
cmp
nop
xchg
or
inc
fs
hlt
jl
add
aaa
sbb
gs
mov
scas
mov
outsl
dec
jge
rcrb
jne
in
call
cmp
lret
add
push
cmp
ja
stos
add
dec
rcr
push
psubq
icebp
add
xchg
test
sub
popa
pop
jle
add
add
add
call
daa
xchg
ds
mov
pusha
push
mov
add
push
sbb
xor
fwait
xor
push
jae
imul
adc
out
rcrb
cs
dec
add
lret
orl
cmpl
xor
repnz
push
dec
sub
fidivrs
das
sbb
mov
add
mov
sbb
fmul
jbe
jge
add
cmp
xor
scas
fs
sahf
test
movsb
aaa
add
out
add
mov
inc
out
nop
bound
inc
iret
xor
popa
dec
rclb
mov
cmc
lods
sahf
sub
cmp
pushf
and
pop
push
push
outsl
sarb
stos
jge
je
dec
dec
popa
add
cmp
add
lea
cwtl
mov
incb
sahf
or
shr
dec
pop
add
aad
shr
jbe
pop
test
lcall
in
add
sbb
push
dec
cmp
into
cmp
out
add
insb
dec
add
int3
movsb
iret
sbb
dec
push
xor
fwait
sbb
add
aam
jbe
addr16
es
sub
rcll
out
dec
pop
adc
mov
jb
idivl
add
mov
mov
popa
lahf
push
sti
mov
mov
dec
add
mov
int3
icebp
pushl
in
int
cmpsl
clc
mov
dec
add
mov
lods
add
repz
outsl
movsb
mov
loope
out
add
pushf
push
repnz
incl
inc
mov
iret
test
inc
mov
jnp
sbb
inc
mov
xor
enter
popa
lret
dec
outsl
imul
test
cmp
pusha
aad
push
imul
xor
push
cmp
sbb
shlb
add
fs
add
fcomi
jo
inc
addr16
adc
cmp
arpl
add
adc
out
pop
icebp
add
lahf
inc
pusha
insb
xor
push
dec
cmp
jno
test
cltd
add
push
add
mov
xor
punpckhwd
mov
xchg
mov
add
popa
add
pop
mov
push
call
shr
mov
fld
xor
lret
in
add
je
rolb
and
insl
lea
daa
sbb
aad
jge
repnz
xchg
cmp
mov
inc
xor
or
adc
popf
add
add
jle
iret
out
inc
or
inc
fbld
mov
sub
pushf
push
pop
cltd
mov
inc
ret
cmp
jmp
bound
lods
mov
pop
idivb
and
jmp
addr16
mov
mov
rclb
in
cltd
add
cmpsb
adc
inc
es
add
xchg
lock
ret
inc
jb
inc
lcall
inc
or
push
add
xchg
jns
popa
insl
ljmp
lret
je
int3
xor
and
scas
fs
push
fldl
cmpsb
rcr
add
jl
cwtl
int3
in
add
mov
lds
add
sbb
mov
gs
push
add
mov
cmpsb
xchg
pop
out
sub
mov
cwtl
add
inc
lret
or
mov
pop
jb
jg
add
and
xor
adc
adcl
fnop
ja
cmp
pop
add
call
into
jp
mov
mov
aas
or
leave
sub
add
mov
popa
add
add
and
sbb
cs
lds
das
rcrb
push
lea
jae
pop
test
scas
bound
mov
leave
in
pop
jmp
or
outsb
xchg
iret
lods
add
xchg
add
jb
mov
ja
xchg
jle
add
sahf
fidivrl
jl
add
pusha
adc
cmpsl
fwait
xchg
popa
mov
add
pop
and
sub
dec
add
sarb
fisttpll
adc
add
or
fbstp
jecxz
sbb
aas
pop
pop
mov
lret
pop
popa
testl
xor
dec
sbb
pusha
sbb
negl
sbb
or
and
xchg
cmpsb
leave
sbb
outsb
hlt
popa
push
add
mov
movsl
cmp
iret
or
add
mov
daa
clc
jmp
xor
ja
jge
sub
push
mov
fdivl
ficoml
add
xorl
or
and
inc
lea
daa
push
mov
pusha
lods
mov
in
mov
xor
sub
shr
pop
fildl
add
lods
inc
je
cmp
pop
fwait
xchg
shrb
cmpb
out
movsb
pop
add
jmp
lds
jae
rcrb
add
xchg
fdivs
jb
add
add
int3
sub
mov
mov
push
add
push
and
fistpl
cmp
cmp
inc
insb
out
pop
out
add
add
je
or
hlt
jne
push
or
add
mov
hlt
jno
add
and
fnstsw
fsubs
add
in
std
je
lret
pop
jp
rol
fidivrs
mov
mov
test
pop
add
pop
pushf
aaa
mov
movups
mov
jg
jg
pop
out
jbe
xchg
stos
sbb
ds
gs
imul
push
es
std
cmp
jns
adc
dec
dec
sbb
adc
test
popa
add
inc
in
lcall
inc
or
ja
inc
push
dec
add
js
add
fiaddl
push
ror
pop
ds
inc
andps
inc
test
sbb
ljmp
ljmp
and
mov
stos
mov
add
pusha
cs
jno
add
cli
pop
cmp
dec
lea
cmpsl
add
mov
or
sub
pop
scas
and
mov
add
push
imul
repz
xchg
popa
mov
jno
or
icebp
xchg
out
fsubp
arpl
aas
push
nop
test
fadds
ret
cmp
and
daa
test
xchg
incl
lods
push
pop
mov
rclb
dec
loope
add
outsl
mov
jne
test
or
add
or
push
inc
jno
orb
clc
or
add
loop
sbb
lret
imul
adc
mov
mov
andl
add
inc
pop
jle
lock
fiadds
add
xchg
daa
lods
shufps
inc
out
rcrb
cmpsl
jbe
jle
xor
nop
sbb
push
xor
in
aas
dec
cmp
pop
lcall
adc
repnz
pusha
sbb
push
inc
add
movsl
pop
add
sbb
mov
sbb
inc
xchg
in
ror
cli
repnz
pop
add
nop
fldl
add
mov
fimuls
dec
pushf
and
pop
inc
xchg
mov
aas
add
pop
nop
xchg
frstor
bound
pop
jmp
in
mov
mov
aad
sbb
add
sbb
jnp
push
mov
mov
movsb
pop
movb
repnz
testb
sub
stc
dec
add
lods
loopne
add
xor
cmp
pop
and
mov
lret
mov
mov
sbb
mov
daa
xchg
lret
mov
sbb
adc
fstp
cmpb
add
or
lock
dec
lea
fdivs
std
add
cwtl
cli
cmp
movsb
or
imul
arpl
loope
sahf
inc
inc
jl
lock
into
fbstp
add
lret
es
cmp
pusha
and
add
pop
jbe
js
add
les
mov
add
jo
and
movsb
test
or
and
xchg
icebp
scas
pop
sbb
lods
fs
push
lahf
add
mov
inc
jns
les
xchg
dec
and
rolb
sbb
les
jns
lods
xchg
int
pop
mov
add
cmp
je
adc
inc
imul
mov
test
mov
shr
add
xchg
shrb
and
add
mov
sub
nop
xbegin
mov
add
xchg
aad
leave
iret
cmc
jns
sub
pop
adc
mov
xchg
mov
aam
jmp
icebp
fs
mov
pop
sub
mov
ret
dec
inc
adc
adcb
xchg
add
test
ljmp
daa
lret
int3
push
add
add
push
out
shrb
sub
fdivp
pop
jbe
ret
mov
pusha
jnp
jp
scas
cmp
incb
adc
test
in
sub
jecxz
inc
inc
ror
mov
xor
sub
fdiv
stos
arpl
cli
pop
pusha
push
mov
aas
adc
inc
and
movsl
mov
dec
add
jb
push
xchg
iret
lcall
add
sbb
cld
or
push
ret
mov
add
nop
out
icebp
clts
mov
aad
aaa
xchg
faddl
cmp
mov
adcb
jmp
sub
or
push
bound
add
mov
adc
push
cmp
popf
lods
out
lahf
movsl
add
rcr
jbe
data16
add
das
cltd
aaa
ja
mov
jg
xchg
mov
inc
in
loopne
imul
pusha
arpl
and
mov
add
fmul
jnp
cwtl
icebp
sahf
mov
imul
add
cmp
rolb
loope
outsb
stc
into
jle
mull
pushf
scas
sbb
les
inc
pusha
int3
inc
leave
add
aaa
pop
mov
jnp
out
fidivrl
out
incb
dec
subb
lcall
jb
jnp
and
sbb
rorb
push
xor
add
jo
shlb
adc
icebp
add
insb
mov
shl
incb
leave
das
inc
pop
rclb
hlt
xor
mov
sbb
push
in
pop
jne
loop
test
adc
out
stos
mov
pusha
pop
xchg
cltd
and
sbb
mov
iret
push
rclb
repz
popa
push
ds
nop
mov
mov
mov
or
lcall
xchg
movsb
test
adc
fidivs
xchg
and
mov
mov
mov
inc
into
out
push
das
or
pop
test
cmp
add
scas
mov
subl
add
in
fisttps
or
lahf
mov
call
jp
aam
cwtl
or
or
inc
cmpsb
bound
mov
shr
fs
pop
jo
pop
sub
inc
cmp
adc
jnp
repz
or
mov
hlt
sub
dec
xchg
out
cmp
ds
xchg
fcoms
and
dec
rclb
mov
mov
nop
dec
hlt
enter
cli
repnz
or
lahf
rol
sub
sub
sbb
pop
push
shl
push
fldcw
push
jo
leave
cmp
push
xchg
sub
add
dec
mov
movsb
jno
ds
add
insb
cs
subl
les
in
int3
test
arpl
movl
fwait
sarl
into
add
js
lret
xchg
or
and
adc
mov
loopne
pop
bnd
sbb
jno
test
shll
popf
aam
adcb
push
and
aaa
aam
iret
js
fsubs
add
or
pop
mov
xchg
adc
ljmp
and
fdivrs
mov
add
add
xchg
add
testb
lcall
fucomi
ljmp
push
test
push
jae
aad
mov
fbld
add
xchg
sti
lcall
mov
xchg
aam
cmpsb
mov
js
adc
cld
nop
cmpsb
xchg
ret
add
in
push
decb
nop
push
dec
std
divb
imul
sti
mov
and
imul
imul
mov
dec
or
jp
add
popa
nop
xor
mov
sub
cmp
fisubl
xorb
sub
inc
fstps
push
pop
cmp
push
out
and
inc
and
add
mov
lret
test
aad
push
pop
add
pushf
jmp
push
loopne
cmp
incl
lds
sub
xchg
pop
cmp
aas
or
dec
decb
ss
jge
lret
rorb
loope
mov
cmpsl
jecxz
scas
std
lea
es
add
jns
jnp
mov
mov
jmp
insl
clc
sbb
test
add
hlt
cmp
mov
and
pop
loop
gs
iret
pop
ret
push
pop
mov
jo
fsincos
outsb
les
loop
add
cmp
inc
mov
sti
add
xchg
dec
mov
inc
lods
push
cmp
mov
add
fsubs
add
sub
adc
lea
cmc
divb
ljmp
aas
cld
std
push
add
cmp
dec
icebp
repnz
add
ds
hlt
stc
mov
xor
add
dec
sub
and
testb
movsb
pop
xchg
sub
shrb
lcall
add
js
jno
lods
sbb
cmp
mov
out
jl
das
shlb
and
add
xor
shr
or
ret
and
add
sub
add
dec
lcall
test
out
jmp
cmp
inc
lcall
dec
stos
jo
jecxz
xor
xchg
aad
and
incl
pop
adc
aas
ja
and
or
jo
pop
fisttps
jge
lcall
insb
add
shl
jb
lret
xor
dec
pop
out
pusha
push
sbb
cs
jb
and
cmpsb
push
jae
xor
call
adc
leave
js
sbb
sbb
xchg
pop
and
mov
repnz
icebp
mov
adcl
push
push
jg
dec
mov
adc
fwait
sub
dec
repnz
push
inc
movsl
sbbb
pop
push
mov
cmp
cmpsb
shll
or
testb
loop
xor
push
xor
jae
clc
add
or
stos
cmc
push
add
rcr
pop
out
sbb
cmc
pop
faddl
xchg
cmpsl
sub
inc
pop
inc
push
jne
add
mov
mov
pop
xchg
outsb
jne
shlb
add
ret
add
mov
sub
add
sub
push
test
adc
clc
jge
js
je
push
mov
adc
sub
outsb
mov
in
sahf
imul
test
fucomip
lock
xchg
dec
mov
xchg
pusha
in
outsl
mov
add
push
add
add
es
push
test
add
ffree
in
add
mov
shll
xor
xor
or
out
add
jno
or
cmp
or
add
test
push
das
xchg
pop
and
hlt
jae
or
bound
or
std
push
aas
sub
or
pop
adc
andb
out
jecxz
pop
out
cld
inc
data16
pop
cwtl
cmp
test
rcl
sbb
sub
orl
jbe
es
add
pop
in
les
lcall
cld
and
inc
pop
push
leave
add
call
add
mov
pop
jp
add
mov
test
and
pop
mov
or
repz
add
outsl
pop
jp
in
or
or
sti
jge
add
aad
and
pop
sbb
sbb
adcb
xor
sub
test
pop
out
loopne
aaa
add
dec
push
call
imul
xor
xchg
stos
adc
iret
pop
xor
mov
jbe
add
sbb
jmp
or
orb
fldl
lods
xor
inc
jb
or
dec
orl
dec
cmp
pop
xchg
rorb
pop
pop
mov
push
pushf
sbb
add
incb
enter
arpl
sbb
mov
arpl
jp
add
scas
outsb
mov
imull
outsl
add
dec
add
sub
cmc
addb
repnz
adc
inc
add
mov
inc
leave
mov
add
pop
lods
cmpsl
testl
nop
push
adc
push
add
pop
mov
or
add
xchg
mov
hlt
ja
pop
popl
shlb
jb
mov
rcrb
add
push
pop
movd
nop
cmpsw
adc
jnp
add
in
in
dec
lods
cli
dec
mov
cli
lcall
scas
pop
dec
jg
sbb
nop
push
push
call
lcall
jnp
xchg
rolb
mov
loopne
mov
add
mov
shll
aam
test
stos
add
pop
cmpsl
xor
addr16
inc
shl
idivl
jbe
add
hlt
dec
lods
clc
mov
lods
jno
mov
xchg
pop
lahf
pop
cmp
sarl
mov
incl
icebp
jo
movsb
lods
mov
pusha
aam
into
or
cld
ret
enter
insb
and
outsl
addb
add
adc
dec
and
or
adc
xor
icebp
jecxz
cmpb
inc
out
add
gs
orb
stc
in
or
sub
mov
adc
jmp
pop
test
jae
int3
adc
ret
jns
xchg
xlat
rol
stos
inc
lds
xchg
add
sbbb
dec
mov
push
or
xchg
and
inc
push
xchg
inc
rorb
cli
loopew
jge
inc
and
pop
out
add
jmp
add
scas
push
xor
scas
movsb
ljmp
dec
mov
popf
add
arpl
rcrb
lods
sub
ficomps
jl
jg
cmpsb
adc
push
ror
js
setl
fdivp
xchg
fldenv
mov
mov
mov
in
push
xchg
add
dec
adc
out
add
je
add
jl
jne
daa
pusha
xchg
fbld
jmp
xchg
dec
jbe
push
mov
inc
mov
adc
enter
lahf
sbb
sar
inc
push
vsubps
inc
xchg
imul
mov
test
cli
movsb
inc
test
pop
push
movsb
inc
jb
shrb
out
jl
test
or
stos
cmp
and
fs
pop
push
ret
lods
test
filds
shrb
aaa
popf
add
sbb
sbb
int3
jmp
mov
cs
xchg
test
mov
pusha
movsl
jp
test
inc
stos
adc
testb
sub
stos
lahf
pop
fdiv
adc
fwait
and
mov
inc
mov
sidtl
mov
add
dec
push
rclb
add
cmp
pop
sub
cld
mov
add
das
hlt
cmc
dec
stos
pop
nop
sbb
sbb
jp
add
inc
pop
jmp
aad
and
add
les
pusha
cli
sti
and
das
or
hlt
test
sbb
or
cmp
fs
pop
flds
cwtl
test
pop
sbb
lods
jge
fcomp
xlat
pop
sub
fnsave
sub
pop
xor
push
mov
cmpb
add
pop
lahf
push
movsl
ficompl
adc
add
pushf
ljmp
cwtl
mov
sbb
dec
mov
imul
xor
cmp
sahf
jge
sub
mov
in
orl
test
loope
sbb
push
test
mov
inc
call
popf
xchg
mov
add
divb
in
sub
stc
ret
dec
mov
mov
jo
call
idivl
dec
cmpsl
or
pop
cs
inc
jbe
xlat
clc
xchg
add
repnz
push
ret
out
sub
adc
jmp
mov
inc
jb
aas
or
insb
mov
mov
add
jp
sub
add
mov
add
inc
inc
test
rorb
andb
lods
scas
pushf
in
jbe
je
in
mov
jno
bnd
jge
add
fs
pop
and
jge
or
mov
pop
push
dec
cwtl
movl
imul
fisttpll
add
hlt
cmp
xor
fstps
jbe
filds
ret
mov
add
pop
xchg
jb
rorb
jle
outsl
xchg
dec
cmpsb
pop
lods
xchg
adc
scas
aaa
sbb
and
xchg
sbb
or
rclb
and
sub
add
mov
sbb
je
or
int3
sbb
mov
dec
test
push
pushf
scas
pop
loope
add
xchg
cmpsl
pop
mov
add
mov
xorb
sbb
xorl
or
jns
sbb
pop
pop
rcrb
mov
inc
adc
insl
push
add
lret
inc
push
addb
inc
xor
dec
xchg
xchg
cli
gs
pop
or
hlt
inc
js
rorb
add
pop
movsb
scas
jmp
sub
xchg
and
out
in
push
jbe
mov
add
dec
adc
push
lret
sub
xor
xor
dec
pop
cmpb
sub
or
mov
dec
in
add
jno
imul
in
incl
push
mov
test
lock
xchg
jp
push
mov
add
es
jecxz
test
push
dec
into
pop
sub
mov
xchg
data16
xchg
pushf
mov
popf
push
fwait
mov
mov
xor
xchg
mov
cltd
lret
pop
hlt
add
adc
int
rcrb
jecxz
jne
dec
out
inc
aad
or
push
pusha
in
popa
icebp
wbinvd
xchg
pop
enter
or
pop
cmp
inc
fisttpl
sbb
or
fsubrs
dec
inc
sub
jb
add
add
or
sbb
add
lods
lods
add
adc
enter
orb
dec
jge
adc
fmull
in
pop
push
sbb
push
nop
aas
testb
mov
mov
cmp
push
or
scas
sahf
iret
stos
mov
cmp
fnstsw
in
xlat
test
xor
iret
jp
mov
add
push
in
mov
jp
mov
cmc
mov
mov
arpl
push
pop
xchg
inc
cmpsb
sub
inc
in
int
push
inc
push
xchg
lcall
sbb
mov
aaa
pop
into
or
mov
add
int
mov
and
inc
and
outsl
add
scas
es
mov
or
call
pop
add
pop
mov
outsl
loop
mov
enter
xor
pop
adc
dec
xchg
add
ret
jno
add
sub
add
push
enter
mov
or
fs
jnp
sub
and
sbb
add
xchg
pop
and
nop
imul
jns
push
cmp
int3
lret
xchg
add
rcr
aad
add
in
inc
and
insl
clc
sbb
icebp
pop
add
add
in
in
pop
pop
cltd
xchg
sbb
cs
push
add
enter
jo
in
das
int
pushf
dec
and
mov
repnz
mov
lahf
lods
pop
inc
xchg
mov
jp
xchg
flds
mov
sbb
jmp
cmp
or
cwtl
inc
fdiv
inc
add
stos
stc
inc
add
mov
rolb
loopne
cmpb
mov
jns
ret
cmp
cmp
int
jo
daa
arpl
pushf
add
rcrb
mov
cmc
scas
or
mov
push
push
rorl
mov
mov
add
lahf
cmp
xor
test
and
add
in
push
xor
dec
pop
aad
adc
add
test
push
addl
add
mov
dec
cmp
xchg
sub
push
stos
jno
add
lret
add
adc
lret
rcrl
ljmp
jnp
mov
fs
pusha
mov
jp
divb
jns
adc
cmp
inc
icebp
mov
test
sbb
fnstsw
sub
cli
in
push
add
scas
and
and
iret
loope
das
mov
push
adc
test
mov
pop
clc
add
inc
jg
lods
jbe
push
out
sahf
subl
jmp
cmp
mov
jns
mov
inc
push
sub
push
xchg
movsl
subl
js
xor
pop
sbb
xor
sbb
xchg
adc
and
into
outsl
outsb
sti
mov
push
sub
push
cwtl
pop
xor
sarl
clc
dec
jbe
rol
add
mov
pop
add
or
daa
in
or
mov
mov
xchg
add
cmpsl
cmpsb
ja
sbb
jmp
add
out
pop
jecxz
movsl
faddl
lcall
xchg
sub
pop
mov
xchg
or
hlt
push
enter
add
clc
mov
push
lock
jae
leave
lods
cmp
ds
cmp
adc
add
bound
rcll
loop
mov
mov
push
push
mov
fbld
or
fucom
and
stos
sbb
cmpsb
popa
in
inc
jmp
add
push
fwait
mov
div
adc
insb
pop
repz
mov
rcrb
and
mov
add
jecxz
adc
xlat
insl
aam
push
nop
into
pop
in
jbe
flds
and
fisubl
and
or
out
imul
lods
add
sub
in
push
adc
adc
cwtl
pusha
push
or
inc
pop
imul
xchg
xchg
jmp
add
mov
outsb
std
je
pop
add
xchg
mov
or
lock
sub
and
gs
xchg
xchg
mov
stc
pop
dec
in
jo
add
jle
aas
cmp
loop
cs
adc
xor
inc
call
mov
pusha
insl
cmc
inc
and
mov
add
xchg
cwtl
jmp
cmc
call
testl
lods
xor
lds
std
ds
push
outsb
shrl
or
mov
jo
sbb
jge
dec
xor
dec
mov
js
insl
lds
sub
jnp
in
adc
in
pop
sub
imul
clc
adc
test
dec
loopne
adc
xor
mov
mov
xchg
int
or
xor
cmpsl
popf
adc
pusha
mov
mov
mov
adc
filds
push
loope
and
sbb
jno
jns
add
sar
repz
add
adc
pusha
pop
and
mov
push
pusha
xchg
xor
push
cmpsl
popf
fidivrs
mov
psllq
dec
pop
jl
inc
add
cli
cltd
pusha
push
sub
mov
adc
dec
out
cmp
dec
jno
mov
std
xchg
sbb
push
in
or
jl
inc
movsb
loopne
shlb
test
popf
add
outsl
and
add
xchg
mov
push
xor
test
pop
mov
jmp
faddl
cmpl
add
mov
pop
in
mov
mov
cmpb
data16
adc
xor
in
in
or
hlt
inc
scas
mov
out
pop
lea
sbb
sbb
rolb
or
mov
and
xor
addl
and
cmpsl
ret
fiaddl
test
mov
scas
aaa
push
lods
push
daa
pop
add
shlb
std
pop
cmpsl
add
push
es
and
mov
mov
loop
inc
mov
mov
dec
pop
fwait
push
add
or
mov
add
inc
testb
rcrl
and
in
push
sub
pop
sbb
mov
insb
add
data16
dec
mov
shl
gs
data16
out
sub
push
pop
inc
add
es
sub
orb
or
add
std
push
js
mov
or
inc
incl
cmp
jb
cmc
inc
cmpsb
add
addr16
outsl
mov
or
xor
enter
jne
leave
ficomps
lea
pop
out
into
imul
jae,pn
push
js
pop
xor
jnp
in
add
stc
mov
jp
data16
xchg
mov
dec
aad
and
pop
bound
sub
fldl
lds
shlb
inc
jno
hlt
pop
or
lcall
adc
testb
xchg
movsb
push
stc
push
ljmp
push
lock
std
inc
movsl
insl
pop
jmp
lcall
lock
push
je
mov
or
and
add
or
into
jno
add
lcall
add
adc
test
or
adc
and
xchg
nop
out
dec
pop
fsubrl
add
mov
push
nop
xor
mov
or
mov
lds
adc
loopne
add
add
jns
into
mov
mov
decl
xchg
mov
push
fisubs
sub
inc
clc
std
dec
jge
add
mov
shrl
ffreep
rorb
stc
dec
add
jl
add
add
cmp
pop
int3
lock
or
bound
addr16
add
faddl
and
lods
cmp
xor
push
lock
lds
sub
cmp
push
add
out
add
add
loop
adc
insl
mov
xchg
dec
movsb
add
pusha
clc
shll
push
pop
add
jae
dec
jmp
or
sti
scas
popl
rcr
add
jnp
icebp
cmc
inc
mov
shl
add
dec
pop
out
push
jo
scas
add
test
dec
adc
popf
add
out
cmp
dec
xorb
mov
das
outsl
int
addr16
iret
out
repz
aam
pop
push
or
imul
outsl
into
rcll
or
out
push
add
loop
push
cmp
out
mov
leave
sbb
sub
xlat
add
push
dec
daa
mov
sti
sbb
rclb
jl
mov
ret
je
imul
andl
aaa
or
mov
int
mov
sti
xchg
mov
push
adc
push
add
rol
add
jecxz
cltd
and
movb
lods
idivl
add
push
lods
and
push
clc
psrld
dec
add
xlat
push
leave
push
push
xchg
add
fs
lcall
rclb
in
sbb
and
rorb
int
insb
insl
inc
add
xchg
ret
jle
sub
mov
jbe
or
repz
mov
int3
dec
es
in
push
jp
stc
cld
pop
in
mov
stos
dec
popf
cltd
and
inc
mov
fsts
xchg
sbb
inc
pop
xchg
add
clc
fs
pop
mov
test
sub
push
pop
les
data16
adc
adc
pop
push
lret
insb
xchg
cmpsl
cmc
adc
and
bsf
imul
adc
rol
add
inc
pop
fildl
mov
pusha
cmp
add
cmp
inc
inc
jle
sbb
mov
mov
lret
dec
insl
sub
or
add
sub
add
cmp
pop
jo
push
add
sub
xor
es
or
add
xchg
popa
mov
jg
cld
or
xor
pop
dec
or
enter
pop
into
push
pop
scas
rolb
pop
dec
clc
xor
cli
push
imul
mov
mov
cwtl
loope
sub
push
jbe
int
and
cmp
dec
hlt
sbb
add
jp
push
xchg
shll
pop
add
and
xchg
mov
adc
lret
mov
or
int3
xlat
jl
mov
daa
mov
sbb
dec
add
pop
xor
clc
mov
aad
add
daa
xor
pop
in
je
xor
sub
call
push
lcall
pop
stc
adc
xchg
add
lods
dec
pop
xor
movsb
lret
mov
jbe
xchg
cmc
loopne
fisttps
rolb
sbb
or
inc
stc
or
sbb
jmp
sub
add
pop
pop
outsb
out
mov
movsl
pop
sarb
sbb
leave
notl
xchg
add
mov
shlb
mov
dec
push
inc
pop
xchg
push
jp
xchg
xlat
add
jb
and
inc
call
cmp
pop
pusha
push
into
add
mov
pop
adc
lods
andb
dec
mov
xchg
mov
mov
mov
jg
adc
loop
mov
add
out
and
xchg
mov
pop
xchg
push
add
pop
int3
pusha
inc
fmull
cmpb
enter
scas
add
mov
push
jne
pop
lods
ret
dec
pop
cmc
xchg
pop
mov
dec
loope
les
push
scas
fst
or
repnz
jno
xchg
xor
inc
push
add
rorl
js
imul
scas
xchg
roll
mov
sti
or
push
sbb
xchg
ret
icebp
and
aas
sti
cmp
cmp
push
mov
into
out
xchg
sbb
xchg
shld
orb
les
xchg
into
sub
mov
dec
sbb
or
xchg
scas
mul
adc
fstl
hlt
add
insb
lock
cmp
lret
mov
hlt
mov
sbb
add
inc
clc
cmp
dec
repnz
loope
jne
daa
push
xchg
jns
jno
cltd
imul
ja
push
je
sub
cmp
jns
and
add
xchg
push
js
nop
inc
out
mov
je
ss
lcall
push
std
loope
jp
or
sub
push
sbbl
out
add
sbb
stos
pop
add
push
js
inc
sahf
mov
sub
mov
js
inc
add
or
lock
push
cltd
mov
cmp
scas
add
rcll
pop
aam
arpl
aaa
rcl
mov
sub
push
mov
jp
rolb
push
sub
pop
add
dec
icebp
shr
dec
pop
xorb
icebp
data16
in
cmp
test
fsubs
cli
and
push
jb
dec
inc
xchg
pushf
mov
outsl
loopne
xor
pop
add
jno
ret
mov
pop
rolb
or
mov
fsubs
lret
jmp
fistps
mov
fwait
sar
pop
nop
lret
inc
cwtl
and
jae
int
cmpl
call
jl
insl
xchg
inc
add
jns
push
mov
and
popa
mov
push
shlb
push
sbb
int
sbb
pop
xchg
loopne
sbbb
adc
scas
cmc
sub
cmp
lahf
rol
cmp
jge
cmpsb
push
xchg
sub
push
fisubrs
fbld
repz
mov
popf
stos
xor
sar
xchg
push
stos
sub
add
les
cmp
inc
cmc
je
adc
dec
xchg
test
jb
or
ja
test
insb
add
and
pop
sarb
add
testb
je
inc
ljmp
scas
push
out
push
inc
imul
test
sub
lock
iret
and
push
add
add
mov
xor
sti
xor
mov
add
dec
push
and
mov
dec
stos
rclb
jo
mov
movsb
test
shr
mov
loopne
sbb
mov
sti
mov
jecxz
sbb
lds
aam
inc
pop
repnz
mulps
pop
sti
ljmp
xchg
pop
loope
add
inc
pop
mov
nop
jecxz
jno
mov
imul
xchg
inc
xchg
inc
add
sub
add
mov
ja
sahf
cli
mov
jns
cmpsb
xchg
pop
loopne
clc
fucomp
push
fsubrs
lock
add
outsl
jbe
call
cmc
sbb
jae
sub
or
orb
scas
add
add
fisubs
ret
jb
pushf
push
mov
insb
pop
ret
push
xchg
mov
addb
fwait
pusha
iret
rcrb
mov
push
add
and
mov
add
popf
xor
mov
push
mov
cli
add
jae
xchg
adc
cmp
jmp
add
fs
add
adc
icebp
xchg
jne
jg
ja
cld
jne
sub
push
call
mov
mov
jg
ds
xorb
xchg
lahf
push
mov
and
sbb
mov
jnp
jge
or
cmp
orl
mov
test
inc
dec
add
lahf
inc
jbe
test
push
push
scas
pusha
imul
xchg
iret
dec
fisubl
insb
jg
or
jne
jo
add
sub
outsl
fisubs
les
sbb
push
bound
lock
and
insb
xchg
js
mov
jp
lods
sbb
out
lea
sub
es
or
sub
dec
outsl
sbb
pushf
jl
int
or
shrl
add
mov
dec
xchg
mov
xchg
sub
scas
adc
scas
mov
les
mov
lods
jl
stos
lods
cmp
popf
and
push
add
fistpl
mov
or
sbb
les
lods
xchg
or
pop
jmp
cmp
mov
shlb
mov
iret
pop
ds
movsl
jmp
aam
cmp
negb
addr16
jge
or
mov
fadds
je
xchg
lret
jmp
mov
xlat
mov
or
mov
or
mov
mov
mov
mov
mov
xchg
and
cwtl
out
cmp
xchg
jg
inc
adc
dec
arpl
sbb
jae
les
xorb
sub
add
pop
cld
jg
repnz
pop
xchg
inc
mov
adc
xchg
outsl
add
jle
cmpsb
repz
jo
mov
inc
aas
int3
fwait
stos
xchg
pop
and
pop
movsl
cmpsl
push
add
mov
jbe
scas
std
mov
mov
mulb
paddb
stc
lea
sub
fistpll
mov
inc
xchg
rolb
dec
mov
cli
xchg
cltd
push
testl
imul
jle
push
jle
mov
inc
pop
call
ljmp
sub
xchg
cmpb
add
sbb
fstl
add
push
cmc
jp
shlb
decb
pop
gs
pusha
add
adc
mov
mov
or
xchg
mov
pop
mov
pop
repz
enter
pop
stos
pop
dec
xchg
xchg
enter
je
and
std
ss
lds
sbb
adc
int3
or
add
sub
and
or
pop
into
adc
lods
lret
adc
add
mov
mov
enter
in
and
mov
sbb
jecxz
nop
push
adc
add
add
xor
mov
adc
mov
lds
out
es
mov
sub
into
jg
mov
imul
ret
std
push
and
add
sti
call
loope
data16
xor
js
inc
inc
add
and
xor
dec
mov
dec
fcompl
into
sbb
cmp
add
pop
pusha
ja
jp
add
mov
lods
and
movb
cltd
aaa
cmp
inc
xorb
lds
int
push
movl
sbb
sbbl
mov
mov
mov
cli
and
out
or
dec
sbbb
pusha
enter
rcrl
inc
mov
cmp
loope
adc
mov
xchg
mov
movsb
subb
push
add
lret
cmp
es
inc
xchg
ret
jle
inc
pop
andl
lret
mov
inc
mov
sahf
xchg
enter
lret
fiadds
xchg
leave
sarb
mov
xchg
das
insl
adc
inc
mov
insl
daa
out
cmp
push
cmp
mov
adcb
mov
add
pop
loope
scas
and
jae
inc
mov
and
add
aaa
or
movb
int3
cmp
push
push
gs
rcrb
add
adc
dec
push
popa
lret
mov
sub
pop
decb
inc
add
or
add
adc
in
jns
add
dec
inc
aad
push
xor
pop
jb
xor
xchg
sahf
and
xor
pop
or
push
adc
loopne
insb
push
or
or
loopne
xor
push
enter
and
addb
out
adc
xchg
mov
repz
jecxz
mov
aam
fdivs
or
push
insb
inc
fwait
andl
je
lahf
es
dec
adc
xor
movsl
xchg
push
add
rolb
bound
jge
hlt
jmp
adc
cmp
push
xchg
add
ds
sbb
xchg
push
sbb
cld
add
popa
sti
es
cld
testb
inc
jbe
out
psubw
adc
lahf
dec
and
or
cmp
sub
push
loope
in
jno
pop
push
mov
mov
jmp
sub
add
test
xor
jl
add
cmp
cmp
cmp
test
ja
popf
lods
and
xchg
jmp
into
add
fldcw
dec
jg
shll
inc
add
xchg
inc
adc
mov
fwait
in
mov
shl
lods
pop
jecxz
in
and
popw
pop
mov
add
push
push
movsb
sbb
dec
nop
or
sub
ja
inc
fcomp
or
shrb
cmp
sub
mov
adc
andb
sti
mov
insb
int3
push
pushf
pop
dec
in
xchg
adc
xchg
or
popa
mov
popfw
push
divl
jge
cmpsl
pusha
dec
jmp
adc
sbb
pop
push
pop
push
jbe
mov
les
or
sub
xchg
mov
add
int
ds
cs
inc
or
pop
xor
pusha
mov
scas
or
cmc
pop
js
add
dec
imul
cmpsl
insb
nop
inc
fwait
adc
xchg
adc
xor
adc
mov
xchg
sub
out
jle
int3
pop
popa
and
lock
jb
mov
mov
cwtl
insb
add
out
add
dec
fmull
add
fisubrl
jno
iret
test
lock
cmc
jo
mov
adc
enter
fsubs
imul
mov
aaa
shrb
jb
xor
mov
cmp
xchg
popa
mov
rolb
jnp
mov
adc
sbb
rep
andl
push
xorb
int
rcl
mov
test
stos
scas
in
mov
add
sbb
jl
pop
sub
sbb
imul
mov
xchg
or
or
adc
and
call
xchg
xchg
test
xchg
mov
mov
popa
dec
mov
shrb
adc
and
add
add
add
repnz
and
cmp
sbb
or
add
mov
jmp
dec
mov
xorb
data16
add
mov
daa
and
jp
xor
sbb
xchg
add
inc
xchg
nop
add
jae
in
pusha
jb
xchg
add
inc
or
jnp
add
xorl
cmp
cmp
fwait
pop
nop
add
jne
sbb
jge
push
jns
xchg
dec
outsb
ret
scas
cmp
add
mov
lods
dec
mov
lret
das
cmp
or
pop
lock
sbb
insb
cs
xor
xchg
xchg
adc
dec
dec
repz
add
shrl
xchg
sbb
and
adc
mov
jl
cmp
cmp
es
inc
mov
mov
loopne
pop
pop
add
push
xchg
mov
imul
je
cmp
test
dec
mov
das
mov
les
fs
mov
sbb
int3
dec
jp
and
push
ds
es
mov
ret
loope
sbb
in
pop
jo
sbb
mov
addr16
adc
idivl
cmp
dec
rcrb
in
mov
push
push
ret
arpl
dec
fildl
mov
xlat
ds
out
cltd
rolb
cmp
jmp
mov
jp
scas
mov
cmp
add
stos
outsb
addb
stos
add
pop
push
addr16
ljmp
add
push
jo
nop
pusha
imul
out
ficoms
mov
movsl
sbb
and
inc
incl
mov
add
lods
add
adc
inc
daa
dec
jns
andb
outsl
jl
jmp
test
push
mov
pop
push
das
loope
sarb
add
jns
add
sbb
loopne
mov
jge
dec
loop
cltd
je
sub
sub
jg
xor
jne
popa
adcb
sbb
test
xlat
sbb
xor
rcrl
cmpsl
cmc
add
jnp
jmp
and
repz
mov
xchg
movsl
push
loope
dec
inc
loop
dec
fidivrl
out
dec
mov
inc
aad
add
xlat
add
pushf
xor
cs
out
shr
jae
cmp
sbb
fs
and
adcb
in
or
mov
cld
mov
push
lret
and
jns
and
mov
dec
movsl
jo
mov
xchg
daa
or
ljmp
pop
mov
mov
stc
or
and
push
pop
call
ret
clc
fs
clc
add
orb
xchg
in
inc
push
in
sahf
les
or
sbbb
add
xorl
dec
wbinvd
daa
jecxz
dec
add
rorb
and
xchg
pop
pusha
out
pop
mov
mov
or
mov
jb
iret
mov
call
pop
adc
mov
aas
sub
push
dec
pop
stos
pop
push
popl
cwtl
xor
std
rcr
sbb
jmp
ljmp
pop
sarb
add
jmp
mov
push
fs
pop
jbe
pop
andl
ja
jno
add
aas
xorl
add
inc
and
fiadds
adc
mov
ss
pop
mov
mov
cmc
and
jge
jne
push
jmp
adc
test
add
loope
hlt
sbb
adc
and
and
inc
shlb
out
aaa
shlb
xor
sbb
and
and
loopne
jno,pn
in
and
add
sub
cmp
cmpl
mov
adcb
inc
pop
fcompl
mov
ret
push
dec
fstpl
or
xchg
lahf
pop
adc
push
int
fldt
pop
hlt
fwait
add
xor
dec
rol
xorb
add
lods
sub
jmp
in
sbb
inc
push
cmpsl
rclb
mov
jmp
push
hlt
orl
jp
dec
pop
adc
mov
lods
inc
aaa
test
dec
cmp
and
adc
cmpsb
cmp
inc
pop
cmp
xor
mov
sub
adc
fnstcw
nop
or
sbb
testl
jecxz
inc
inc
dec
in
loope
sub
cld
sbb
xor
fcoml
decb
clc
negb
scas
in
fiadds
inc
or
xchg
adc
xchg
pop
sbb
push
xchg
sbb
inc
pop
andb
push
add
pop
rorb
aad
sub
mov
add
push
cmc
sub
test
inc
xchg
adc
push
and
loope
sahf
hlt
and
ljmp
aad
jmp
call
sbb
addb
in
cvtps2pd
shlb
lods
roll
das
push
jae
loopne
shl
and
fsubp
jp
pop
mov
scas
imul
rolb
push
pop
sti
pop
shlb
adc
dec
cmpsb
ret
xor
mov
or
jg
add
mov
mov
addb
adc
push
mov
movsl
and
mov
imul
pop
fldcw
mov
lret
sarb
std
loope
pop
or
pop
and
mov
call
add
jp
jle
add
push
pop
enter
hlt
pusha
mov
lock
dec
dec
loop
jnp
outsl
adc
adc
fldl
loopne
pushf
lahf
call
imul
nop
jge
cmp
xchg
ss
xchg
mov
test
sbb
mov
xchg
jo
adcl
mov
dec
out
insb
das
push
xor
test
std
pop
pop
nop
cmpsb
out
aas
add
adc
stos
mov
je
cmpb
ret
popf
sbbl
push
jne
add
stos
lret
gs
mov
mov
adc
loop
and
push
adc
push
mov
movsb
idivl
incl
mov
cwtl
mov
sub
push
lcall
call
sbb
pop
mov
xchg
ja
pop
fiadds
stos
leave
inc
pop
cwtl
sub
jo
cmp
dec
sbb
fstpt
xor
and
cmpsl
dec
pop
sbb
xchg
icebp
or
ret
nop
roll
loop
add
xchg
cltd
scas
fsubr
fwait
add
sub
sub
movlhps
gs
fsubrl
adc
mov
sub
dec
into
add
push
adc
call
xlat
repnz
xchg
add
mov
sub
fcoms
daa
pop
dec
addb
in
or
icebp
mov
or
orb
enter
pop
sbb
fists
cltd
and
aas
ds
inc
adc
xor
push
inc
sti
cli
and
cmp
mov
cmp
mov
cmp
mov
imul
sarb
cmp
in
pop
jnp
test
add
mov
loope
movsb
sarl
test
inc
in
sub
jmp
sub
js
es
cld
dec
mov
sarl
outsl
sbb
test
add
pop
jp
lods
lcall
pop
imul
mov
dec
pop
in
and
sbb
loop
jp
fbstp
mov
jnp
insb
push
pop
pushf
push
add
push
scas
mov
and
add
mov
movsb
push
aad
add
push
aas
sub
scas
xlat
add
xchg
mov
xor
leave
xchg
sub
adc
divb
sbb
call
popa
clc
xchg
inc
jo
xchg
xor
push
adc
sub
int3
filds
jns
cmp
roll
fisttpl
jne
adc
add
dec
mov
in
mov
sub
dec
scas
in
in
xor
sbb
hlt
test
test
mov
xor
orl
xchg
dec
lret
or
or
xor
out
xor
mov
scas
push
test
addl
arpl
xchg
inc
arpl
dec
mov
icebp
xor
aad
inc
inc
in
outsl
adc
mov
mov
cmp
inc
jmp
cmpl
fsts
nop
pusha
mov
mov
js
xlat
andb
pop
not
sbb
scas
mov
aas
push
movsl
call
pop
loope
addb
mov
mov
out
jmp
add
add
cmp
pop
rol
test
jnp
adc
jne
mov
xchg
mov
dec
scas
out
fdiv
leave
push
and
incl
fistpl
mov
pusha
outsb
mov
insl
test
js
movsl
and
and
mov
sub
pop
mov
adc
ja
sub
jle
dec
fdivs
pop
mov
add
and
mov
cmp
inc
jne
adc
loopne
add
leave
jp
cmp
or
jo
mov
xchg
xchg
xorl
sahf
xchg
inc
shl
and
xor
xchg
int
enter
cmpsl
out
or
and
xchg
and
outsb
lret
xchg
xchg
add
test
jb
jecxz
adc
addr16
cmpsl
pop
add
sbbb
or
mov
add
and
sbb
loope
jbe
dec
mov
loope
push
jg
add
dec
ret
mov
and
xchg
mov
sbb
aaa
add
and
das
xchg
mov
adc
jbe
add
testb
std
fmuls
xchg
cmp
inc
push
jno
loopne
and
xor
and
test
sbb
cmp
jo
repz
imul
jno
sub
sub
scas
xlat
add
call
cmp
add
fisubrl
sti
jo
mov
mov
add
daa
out
push
incl
add
in
xor
pop
inc
mov
call
cmp
xchg
xor
outsl
out
xchg
pop
dec
into
push
jns
dec
cmp
cmpb
inc
lock
sbb
mov
cmp
mov
push
call
mov
stos
stc
cmpsb
add
sbb
adc
inc
call
scas
add
push
or
movsb
fsubrl
mov
enter
lea
jb
mov
pop
or
or
dec
out
ja
pop
in
addb
xor
xchg
push
push
dec
or
cmpsb
push
mov
add
or
push
out
inc
add
sbb
and
dec
xchg
cli
add
imul
xor
fs
pop
jne
mov
mov
xor
xor
sub
clc
pop
and
inc
add
and
or
pop
add
sbb
push
je
jb
andb
iret
out
scas
popl
mov
je
dec
jbe
rclb
sub
mov
adc
mov
dec
je
jmp
jbe
cld
cmp
jg
xchg
imul
jecxz
cmc
popa
sbb
ret
push
out
pop
jecxz
cmpsb
add
lods
decl
shl
pop
cmc
daa
jae
dec
das
and
cmp
xchg
and
dec
mov
dec
stos
ret
jp
xchg
inc
arpl
jbe
dec
ret
xchg
xor
mov
and
andb
push
or
add
jp
pop
cmp
cs
xor
pop
lods
out
add
insb
cmp
and
mov
push
test
cmp
in
data16
cli
aas
fs
lea
xchg
lods
cmp
xorb
shrb
loopne
lret
push
xchg
ja
sarb
mov
xchg
sub
push
popf
sbb
popf
cli
aas
ret
pop
push
ret
arpl
lods
add
movsl
aaa
mov
sahf
xchg
pop
add
xor
sub
add
lods
sbb
pop
jl
dec
dec
stos
fsubrl
lret
xchg
and
out
push
outsb
aad
and
cmp
pushf
iret
sbb
int3
push
jge
rcl
sbb
movsb
sti
cltd
scas
std
pop
dec
sbb
lahf
cmp
cmc
inc
pop
push
pop
stc
mov
sub
mov
aaa
mov
mov
lahf
push
mov
add
mov
ljmp
nop
stos
and
add
jb
orb
inc
imul
fstps
lahf
loopne
mov
adc
mov
add
iret
xchg
jne
pop
outsl
movsb
add
and
out
popf
pop
fbld
stos
push
pop
add
or
mov
push
pop
jmp
hlt
pushl
cli
loop
inc
pop
icebp
pop
pop
mov
dec
popf
testb
mov
out
int
inc
lods
in
loop
das
sbb
mov
push
pop
out
adcl
ljmp
into
mov
cmp
movsb
jns
daa
add
enter
inc
xchg
cmp
adc
mov
sbb
popf
loop
cmc
or
rolb
pop
arpl
add
popa
into
bound
or
rcr
movsl
pop
inc
cwtl
and
out
inc
lahf
add
in
sub
jnp
hlt
mov
mov
jae
mov
das
pop
sbb
rcr
loopne
add
pop
stc
sbb
push
push
add
pop
ss
push
inc
inc
pusha
pop
or
and
clc
and
xor
subb
rcll
sub
sub
dec
dec
je
add
shlb
and
push
test
inc
mov
jle
xchg
inc
outsl
lret
out
dec
popa
push
add
adc
fildl
mov
and
dec
jb
clc
iret
sahf
pop
inc
insl
xor
mov
dec
and
call
inc
jne
add
push
or
xchg
mov
jecxz
or
and
mov
movsl
xlat
jb
popf
inc
adc
test
push
imul
xchg
xor
in
aam
xor
dec
out
push
jns
adc
add
pop
nop
cld
jne
aaa
stos
orl
les
inc
and
pop
push
shl
testb
stc
loopne
stos
incb
cmpsb
jle
pop
pop
mov
inc
dec
or
shll
mov
jl
pop
mov
inc
mov
call
adc
ljmp
dec
push
mov
jo
mov
push
out
add
sbb
decl
cmp
jecxz
roll
shlb
push
test
add
imul
test
loopne
loop
and
jbe
dec
lock
adc
and
mov
das
xlat
pop
sbb
loop
pop
or
fldl
pop
out
daa
adc
pop
push
outsl
in
or
jp
cmp
sub
pop
mov
in
add
inc
aaa
push
xor
mov
fs
lods
adcb
add
push
jge
rorl
xchg
dec
xchg
mov
cmp
dec
sbb
jo,pt
sbb
mov
cwtl
xchg
mov
mov
adc
loopne
adc
jg
pop
inc
mov
sbb
dec
pop
jnp
add
sub
imul
jno
nop
mov
or
mov
xchg
enter
and
aad
mov
mov
mov
xorl
xor
mov
movsb
repnz
outsl
jb
and
push
iret
cmc
cmp
dec
mov
mov
dec
std
scas
dec
push
push
push
test
cs
imulb
repnz
repz
xchg
shl
pushf
jno
mov
push
xchg
sbb
mov
dec
xchg
shll
pop
push
loop
push
fcmovnb
in
add
cmp
inc
imul
es
mov
sub
push
and
mov
imul
inc
int
in
push
xor
pop
and
outsb
rcll
add
or
sub
lds
dec
out
push
inc
out
xchg
add
cmp
mov
pop
cwtl
pop
add
pushf
stos
cvtps2pi
push
adc
cli
pop
ret
pusha
or
sub
stos
loop
add
rclb
decb
pop
outsb
xchg
filds
inc
inc
pop
pop
fdivl
mov
push
dec
pusha
jno
push
lret
jmp
mov
add
dec
push
bound
movsb
cmp
lds
out
and
test
loope
andb
into
pop
pop
dec
aad
push
add
pop
sbb
vmptrld
test
adc
test
or
mov
inc
mov
jle
sbb
xchg
fnstsw
or
adc
xor
add
mov
push
fs
jecxz
sub
ja
sbb
addl
sub
les
push
flds
ljmp
add
cwtl
mov
xchg
cmp
scas
xchg
inc
xlat
push
pop
dec
push
stos
pop
les
push
in
inc
jle
test
pushw
adc
clc
shll
scas
stos
push
cld
ret
push
jp
jns
cltd
jecxz
daa
inc
add
pop
es
mov
push
fdivs
call
mov
cltd
xchg
pop
and
push
inc
mov
pop
mov
mov
inc
mov
add
gs
aad
das
leave
cmpsb
cmp
loopne
or
push
lea
cmp
lds
cmp
dec
add
ss
jno
pop
mov
imul
or
inc
mov
mov
orl
popa
mov
shrl
mov
int3
adc
add
insb
or
jg
mov
les
shll
fst
and
xlat
or
nop
cmc
stos
xor
ds
movsb
bound
jge
les
mov
int
mov
pop
and
sub
mov
mov
add
out
inc
mov
sbb
std
sbb
cwtl
hlt
dec
dec
jns
test
add
xchg
push
decb
lcall
jmp
mov
ret
push
xchg
shlb
mov
in
jp
or
shll
and
lret
fsubrs
sbb
jno
add
stc
daa
adc
adc
push
xor
pop
xchg
pusha
adc
outsb
add
repnz
sub
xchg
lret
addb
mov
orb
cwtl
push
ja
clc
jnp
ret
stc
add
xor
pop
jge
pop
loope
push
sbb
stos
clc
aas
lret
and
add
sarb
inc
add
hlt
scas
iret
adc
orl
enter
push
clc
cli
dec
outsb
adc
cld
cmp
mov
lds
int
or
sub
push
popf
xchg
push
popl
jns
repnz
lcall
dec
ja
or
mov
mov
add
add
xor
or
imul
jae
push
into
test
es
sti
cmp
or
cwtl
xor
add
insb
stos
gs
stos
fwait
rcll
push
fisttpll
adc
ja
pop
xchg
test
add
or
mov
mov
dec
sub
cmp
dec
insl
loop
add
sub
arpl
cmc
dec
rcrb
xchg
dec
push
push
aad
mov
mov
xchg
mov
pop
or
sbb
push
daa
adc
jns
xchg
ret
push
cmp
cs
test
add
ret
fmull
scas
cmp
ret
inc
inc
fistpl
inc
push
jge
in
lahf
sub
adc
call
out
sbb
rcll
mov
aaa
push
pusha
jmp
adc
cwtl
movb
fwait
bound
in
xchg
sbb
sbbb
and
push
loope
sbb
add
int
inc
fwait
in
jno
hlt
xchg
int3
ret
mov
inc
dec
jns
or
or
rorb
xor
sub
test
pop
pop
push
adc
add
and
adc
nop
xchg
add
sub
aas
cmp
add
or
push
pop
movsb
scas
shl
jmp
enter
imul
testl
test
ret
popa
jp
cmpsl
and
mov
jmp
stc
inc
or
shl
xor
pop
shrb
and
imul
fwait
inc
int
addr16
mov
add
and
inc
push
lcall
jl
jne
jg
jle
jnp
pop
std
pop
dec
mov
and
ret
scas
pop
shlb
xor
lds
add
fmuls
jo
jnp
in
pop
sbb
pop
adc
daa
mov
pop
xchg
push
dec
rclb
xchg
mov
push
cmp
adc
jge
jge
mov
test
scas
in
test
fistpll
and
lods
sahf
adc
minps
inc
push
setge
ss
in
xor
xor
pop
ljmp
js
add
rorb
das
xchg
mull
cs
jnp
fisubl
loop
push
adc
rcl
adc
in
dec
push
scas
rorb
mov
lret
imul
lock
repz
iret
pop
adc
movsb
pop
adc
cmp
dec
add
add
and
xchg
std
lahf
add
fbld
add
and
aas
bound
jle
xchg
mov
pop
mov
dec
aas
and
aas
int3
add
inc
mov
or
mov
or
iret
lods
mov
cmp
xor
leave
push
xchg
add
in
xor
adc
add
or
xor
filds
shlb
dec
sub
push
xor
arpl
adc
mov
fcomp
add
in
gs
jno
rorb
clc
and
mov
pop
stos
pusha
das
xor
les
sub
add
push
mov
xor
nop
int
xchg
or
test
pop
cwtl
and
xlat
test
scas
push
pop
add
fidivs
lahf
aas
mov
in
addb
adc
stos
mov
jg
adc
jo
in
setl
not
push
jo
cmp
add
xor
pop
stos
in
jecxz
faddl
mov
xchg
inc
iret
pop
jo
cwtl
sub
nop
xor
rclb
daa
pop
pusha
nop
mov
das
push
inc
and
pop
xchg
ficomps
into
sbb
push
or
inc
stos
xorb
fs
jl
daa
subb
ret
fisttpll
jno
jp
mov
aam
jo
rcrb
stos
and
cmp
pop
or
add
push
mov
icebp
movsl
jmp
jnp
pop
es
cmp
daa
mov
push
jbe
imul
dec
test
and
xorb
int3
fists
pop
jge
mov
clc
add
jns
roll
add
fsubrs
xor
push
jg
orb
jnp
sub
mov
mov
inc
sbb
cmp
mov
inc
sbb
push
sub
xor
ja
pop
dec
outsl
or
and
mov
lods
orl
adcl
lret
loopne
push
add
inc
js
dec
xchg
clc
xchg
mov
repnz
cld
add
mov
pop
ds
or
add
adc
mov
xor
inc
add
mov
popf
sub
bswap
inc
negl
inc
es
and
add
jnp
push
mov
inc
lods
pop
in
add
push
dec
lret
add
jl
pop
mov
adc
addl
sbb
les
or
and
jae
shlb
dec
sbb
popa
push
cmp
xchg
repz
add
mov
loopne
aaa
cmp
pusha
pop
or
mov
mov
and
mov
mov
sub
mov
int
jo
std
or
orl
nop
fdivs
mov
repnz
pop
clc
es
mov
fcoms
loop
push
bound
ds
sbb
cld
pop
pop
bound
lea
fstpl
sub
insb
jno
leave
push
cmp
and
pop
push
leave
jae
xor
and
in
outsb
hlt
push
xchg
add
popa
cmp
or
nop
loope
sub
mov
test
nop
or
in
hlt
mov
or
pop
mov
in
movsl
inc
adc
repnz
js
inc
aad
and
pop
mov
inc
jge
push
inc
pop
inc
add
xchg
mov
je
dec
cmp
mov
mov
stos
xchg
imul
loopne
xor
subl
sub
xchg
loope
popa
cmp
sbb
loopne
sbb
arpl
xchg
bound
pusha
mov
sahf
loopne
out
adc
fldcw
jmp
fwait
mov
insl
aas
movsl
push
push
lar
sbb
sbb
add
lods
lret
call
adc
dec
mov
mov
cmp
xchg
pusha
out
aaa
ret
xchg
add
outsl
imul
ljmp
std
mov
repz
dec
faddl
add
sbb
fcoms
lods
psrld
gs
and
adc
add
sub
cltd
add
inc
js
push
stos
les
test
insl
rcll
add
testb
dec
or
dec
mov
pushl
xor
mov
add
add
pop
div
dec
ficoml
and
sub
pop
mov
in
clc
lret
pop
sarb
cmp
fcmovnu
leave
in
jno
push
repz
out
mov
outsl
dec
inc
ljmp
push
add
adc
cmpb
pusha
or
les
cmp
jp
lea
inc
adc
imul
and
dec
xor
scas
cmp
mov
decl
pop
pop
movsl
cmp
sbb
mov
push
jmp
mov
and
ja
lcall
lcall
rclb
fcomps
dec
jb
fcoms
cmpsb
jge
xchg
mov
inc
push
xchg
or
fisubs
pop
mov
and
mov
cli
sub
push
out
enter
xchg
filds
adc
test
mov
in
sub
pop
pop
lock
xchg
push
push
xor
fdivs
mov
lods
adc
in
push
push
imul
or
xchg
aas
and
leave
jge
adc
daa
add
push
das
arpl
call
adc
scas
mov
inc
and
fs
xchg
frstor
and
or
icebp
je
xor
sub
mov
test
popf
push
mov
pusha
sbb
icebp
mov
mov
ds
mov
jmp
rclb
mov
pop
cmc
repnz
mov
inc
mov
pushl
movsl
ret
cli
inc
pop
xchg
fsubrs
outsb
dec
jge
or
insl
sti
cmpsl
cmpsl
xor
sbb
dec
cmp
jge
pop
in
pusha
mov
loope
mov
mov
jno
sbbb
cwtl
xchg
dec
fsubrp
jg
in
push
inc
add
orb
loopne
adc
mov
es
fldenv
pop
in
sbb
add
inc
lock
int
nop
loopne
lea
inc
xchg
xor
push
shll
mov
es
sbb
xorb
or
push
outsb
mov
imulb
add
dec
testl
stc
cwtl
add
ltr
mov
ret
cmp
pop
out
lods
xchg
mov
ret
xchg
push
xor
lock
xor
idivl
xchg
sub
andl
fcmovne
jae
orb
ja
in
mov
dec
xchg
push
mov
add
fldl
jp
push
in
sbb
sub
mov
push
push
outsl
mov
scas
sarl
dec
rclb
pushf
rolb
cmc
lock
cmp
fdivrs
outsb
dec
out
sbb
data16
jle
enter
dec
sbb
stc
cmp
js
les
nop
push
mov
sbb
adc
test
mov
mov
aaa
pop
jnp
and
push
mov
nop
enter
outsl
andl
mov
push
in
mov
xor
dec
dec
into
pop
adc
cld
lock
es
addb
andl
lods
mov
pushf
int
repz
test
test
cli
lods
loop
push
movsb
lcall
outsl
jb
dec
lock
sbb
clc
faddl
sbb
subb
pop
xchg
call
mov
lcall
add
mov
enter
fs
and
pop
subb
or
outsb
repz
and
ja
xorl
jmp
inc
aad
inc
cs
scas
cltd
orb
cwtl
orl
sbb
pushf
stc
dec
test
js
mov
dec
cltd
pop
cmpsl
adc
add
xchg
mov
imul
adc
std
pop
ret
mov
pushf
add
mov
add
subb
popf
dec
out
xchg
enter
sahf
push
repnz
cli
mov
fsubrs
or
mov
add
add
sbb
lods
xchg
sarb
ficoms
dec
pop
xchg
or
cmp
mov
icebp
flds
mov
addr16
lret
add
mov
add
scas
rcrb
cmp
inc
adc
jbe
xchg
add
jl
mov
push
icebp
lock
or
bound
xchg
shlb
das
sbb
loopne
sub
or
add
jno
push
nop
lret
push
ljmp
nop
sti
addr16
cwtl
or
and
lcall
adc
push
testb
mov
in
addb
data16
shl
insl
pop
es
dec
xchg
cmpb
mov
mov
icebp
mov
jg
inc
inc
iret
mov
pushf
cmc
xchg
data16
pop
psrad
add
inc
das
mov
cmc
add
ret
sbb
ret
push
dec
nop
ret
mov
mov
mov
fisttps
in
jmp
div
pop
fsubrs
mov
xor
outsb
or
adc
or
js
adc
pop
add
fwait
sub
xchg
sarb
mov
fldt
mov
scas
mov
xchg
and
neg
paddsw
push
loopne
mov
and
popf
test
add
add
adc
add
inc
and
jecxz
xor
jle
and
jle
push
pop
push
or
sub
mov
mov
in
xor
cmpl
push
add
mov
add
rorl
aas
lcall
ja
mov
out
adc
or
std
shl
es
or
pop
push
add
mov
sub
push
mov
mov
popf
add
jmp
enter
mov
imul
inc
mov
cmp
jp
mov
xor
imul
xor
fstps
mov
cmp
dec
pushf
add
rcll
shl
add
sub
sbbl
sub
mov
jl
test
test
mov
gs
dec
mov
outsb
xchg
sub
dec
cmp
fmulp
dec
cld
mov
decl
jecxz
sub
pop
push
jb
inc
ret
int
xor
cmp
adc
in
pop
mov
arpl
inc
js
not
add
adc
jno
repnz
mov
add
jp
clc
loop
sbb
les
nop
jnp
push
sub
adc
xchg
call
pop
lock
data16
andb
das
out
add
cld
and
add
rcrl
inc
pop
ja
push
call
push
inc
mov
ds
into
mov
mov
sahf
jne
lods
scas
cmp
fadds
rcrl
push
pop
add
mov
mov
pop
xor
leave
ss
cmpsl
xchg
mov
filds
cmpsl
inc
add
push
jmp
cmp
mov
dec
add
xlat
std
subb
pop
call
xchg
in
add
sbb
xchg
outsb
xchg
cltd
fsubrl
movsb
aas
cmpb
adc
or
inc
lds
les
std
xchg
lret
out
rclb
adc
inc
popa
jp
shlb
lret
adc
xchg
repnz
push
cmp
sub
pop
push
fisubs
fldenv
fprem
imul
popf
push
jne
jmp
imul
subl
push
es
int
addb
in
xor
inc
testb
or
pop
add
and
jg
and
jle
pop
sbb
in
stos
or
jp
add
cmp
and
xor
jne
or
sbb
test
sbb
gs
mov
jb
xchg
sahf
pop
out
loop
int
add
lret
jo
rcr
sbb
or
mov
inc
leave
mov
dec
add
stos
inc
aaa
nop
cmp
int3
cmp
adc
das
movsl
cmp
push
out
adcb
orl
sbb
mov
int3
fidivl
inc
stos
lret
mov
loopne
popf
loop
push
add
xchg
loopne
and
adc
lret
lods
lods
or
xor
or
dec
loopne
int3
loop
add
insb
xchg
nop
in
lret
xlat
sub
xor
sub
incl
jb
test
xor
push
popf
add
jo
rcrl
orb
pop
mov
adc
sub
add
stos
push
and
jg
jp
pop
adcl
adc
mov
lahf
call
inc
shl
rorl
add
xor
mov
ret
add
sub
xor
mov
jmp
adc
in
lahf
add
aam
les
decl
mov
mov
sarl
adc
out
add
mov
mov
mov
pop
pop
cld
jl
and
pop
inc
out
mov
pop
lods
mov
das
sarb
aad
lret
adc
test
call
pop
in
mov
dec
mov
les
imul
dec
mov
add
mov
je
adc
inc
sbb
inc
add
test
rorl
pop
scas
fiadds
pop
cmp
mov
push
jbe
or
jnp
push
or
ret
jbe
ja
das
sub
and
scas
and
pop
jl
lahf
mov
outsl
add
pop
pop
add
ficoms
dec
xchg
sbb
popa
aaa
xorl
cmp
sbb
cmp
cmp
cmp
mov
and
ja
lods
sub
adc
or
cmp
inc
pop
adc
imul
and
mov
call
mov
call
ds
dec
pop
mov
clc
pop
inc
scas
clc
test
mov
ja
movsl
dec
xchg
scas
nop
pusha
jge
and
les
adc
jae
cmp
js
mov
dec
adc
dec
mov
xchg
lea
pop
cmp
test
pop
pop
or
les
push
mov
mull
add
repz
xor
es
mov
lods
sbb
inc
dec
jg
mov
adc
xor
out
xchg
pop
xchg
inc
shlb
sub
call
movq
orb
into
dec
ljmp
popf
mov
adc
test
out
inc
add
sti
ror
jbe
inc
add
mov
lock
pop
or
subl
adcb
and
inc
and
hlt
pop
pop
jne
adc
repz
lret
int
fs
pop
scas
in
mov
repz
pop
adc
pop
jns
add
frstor
and
dec
mov
jbe
mov
lcall
add
or
xchg
mov
mov
mov
clc
das
sub
cli
sub
cmc
ljmp
or
jb
and
sbb
repnz
push
out
inc
sub
dec
scas
fcomps
xchg
xor
divl
lock
imulb
jge
mov
push
imul
adc
pusha
sbb
xchg
fidivrl
iret
les
cmp
dec
inc
xchg
popa
xchg
call
enter
mov
push
jno
cmp
push
xchg
or
inc
rorb
mov
pop
addl
sub
push
xor
pop
mov
stos
inc
ret
pop
mov
daa
inc
inc
inc
pop
mov
jo
adc
xchg
and
and
mov
popf
xchg
add
negb
mov
fs
fcoml
pop
or
cmp
sbb
inc
ret
mov
subb
pop
inc
stos
adc
imul
sbb
jb
push
add
stc
sbb
in
and
jns
xlat
inc
or
addr16
out
inc
ffree
inc
incl
cmp
add
pop
das
ja
inc
pop
test
and
inc
lea
inc
stc
clc
push
das
jp
jge
add
call
add
sbb
imul
punpcklbw
lret
mov
dec
xchg
jge
call
or
adc
jle
or
add
or
fisubl
add
dec
aam
pop
stc
lahf
or
xchg
sub
popa
pop
cwtl
test
push
adc
mov
jno
xchg
das
stos
sbb
jo
jmp
pop
mov
and
jne
mov
hlt
pushf
in
sbb
shll
dec
lock
cmp
cmpsl
divb
mov
rorb
js
cmc
pop
fldenv
adc
mov
rolb
incb
popa
sub
cld
scas
inc
cltd
fisubl
es
mov
mov
pusha
loopne
inc
mov
xchg
stc
repnz
out
sbb
roll
in
ja
inc
push
fadds
dec
out
pop
sub
sbb
bound
add
xor
mov
in
mov
movsl
jb
call
fstpl
aam
outsb
aad
mov
addl
and
js
mov
fwait
mov
push
jmp
push
in
add
aad
cmp
push
test
sbb
jmp
cmp
test
xchg
mov
mov
sbbl
mov
cld
jg
mov
iret
subb
xor
push
stos
jmp
or
test
push
pushf
push
pmulhuw
out
add
push
mov
xorb
push
or
xor
sub
das
mov
xchg
rorl
daa
adc
stos
mov
cmp
dec
aas
sub
rcl
pop
fisubl
mov
out
dec
lcall
pop
push
xor
add
mov
aad
lods
sbb
push
mov
mov
add
ret
xor
add
mov
xor
add
xor
mov
add
mov
push
test
std
sysret
mov
lret
add
cmp
les
jns
push
pop
addb
andb
adc
sub
orb
push
rclb
shrl
sub
fidivs
jno
mov
mov
or
lods
mov
call
mov
sbb
popa
scas
adc
add
xor
scas
or
lea
adc
push
sub
push
mov
mov
add
adc
shrb
xor
jno
xchg
dec
data16
sub
push
fs
sub
xor
sub
or
mov
fisubs
push
aam
loopne
add
stos
cwtl
cli
or
cmp
jp
jecxz
test
adc
mov
ja
cmp
out
pop
repnz
leave
insl
add
mov
push
lods
popf
mov
sbb
test
jecxz
movsb
dec
jb
adc
cwtl
or
imul
or
sbb
jle
adc
mov
push
subb
jecxz
cs
push
mov
inc
xchg
xor
fdivrs
in
jecxz
cltd
out
inc
jns
mov
loope
cwtl
jecxz
sbb
mov
and
pop
das
in
jns
add
mov
push
lods
das
add
cmc
mov
push
sti
xchg
sbb
push
add
jmp
lock
and
subb
cwtl
mov
adc
daa
rcrb
jl
test
sub
jne
subl
ja
inc
xor
push
movsb
test
push
inc
cwtl
ds
fdivl
dec
push
mov
fcomps
mov
pop
mov
mov
cmpsb
daa
mov
into
cmp
fisubl
es
in
or
mov
inc
push
fcoml
fidivrl
popf
mov
les
adc
add
lods
sbb
sti
ret
mov
rcll
je
outsb
pop
push
inc
popa
xorb
jne
pop
fisubl
push
xchg
mov
lock
dec
cmp
les
xchg
stc
xor
mov
or
add
shl
inc
int
loop
jne
stc
pop
and
inc
mov
ret
dec
pop
or
add
sbb
sub
pop
stos
or
xchg
push
ja
lret
nop
xchg
add
stos
push
mov
jl
xchg
and
lock
jae
hlt
shrb
adc
fldt
jns
test
sbb
nop
add
test
jmp
fisttpll
les
sub
shr
mov
lret
mov
push
dec
mov
jae
fiadds
add
dec
adc
aam
ss
sti
stos
adc
das
mov
sbb
sbb
pop
sbb
xor
fcoml
subl
addr16
jmp
int3
sub
push
stos
sub
adc
std
push
or
dec
add
sbb
cwtl
sbb
xchg
mov
jecxz
sbbb
es
cmp
dec
jno
popa
add
adc
or
xlat
push
scas
mov
mov
xchg
movb
lods
hlt
push
jo
mov
popl
ss
fwait
das
sub
jne
push
es
sar
xor
pop
pop
movsb
mov
lahf
cmp
out
jns
add
inc
xor
mov
and
xchg
loopne
cs
bound
scas
data16
cmp
push
addr16
loop
push
cld
mov
push
shrb
mov
jmp
stos
rcrb
mov
add
aaa
mov
xor
push
movsb
fstpl
and
inc
xor
dec
loopne
xchg
enter
jne
mov
fwait
push
int
repz
dec
lods
out
nop
leave
push
pop
jle
daa
cld
repz
mov
js
push
mov
int3
pop
and
idivl
push
mov
loope
pop
in
mov
stc
jb
imull
loopne
push
mov
in
mov
dec
cld
xchg
push
jae
add
dec
inc
inc
dec
push
mov
rorb
ret
push
or
das
mov
rcr
jp
imull
lea
bound
sti
addb
fldl
mov
inc
jns
xlat
push
dec
dec
lods
sub
ja
clc
pop
test
and
cmp
fnclex
sbb
sub
js
push
xchg
lock
sub
fbld
dec
pop
lock
sub
sub
daa
repnz
in
nop
fadds
bound
das
push
dec
popf
push
add
jp
ret
ja
push
out
rol
rclb
jo
lret
adc
movsl
mov
xor
xchg
out
fmul
pop
push
fwait
in
jbe
cmp
jge
stos
jecxz
rcll
push
cltd
fsub
pop
add
repz
dec
dec
loop
add
jb
popa
jne
shrb
jp
lds
scas
inc
pop
insl
fidivl
cs
mov
push
jge
lcall
pop
and
adc
or
int
lds
or
push
lock
mov
pop
add
adc
je,pn
sub
adc
and
and
and
call
push
je
pop
mov
cli
mov
add
pop
jb
ss
adc
sub
lock
in
call
decb
orl
sbb
insl
stc
inc
jg
inc
pop
dec
push
inc
cmovne
pop
mov
inc
push
push
fstl
add
es
jmp
ret
mov
push
idivb
nop
out
popf
fsubs
or
lret
fisubs
mov
test
lret
adc
or
popf
cli
in
cwtl
dec
add
dec
dec
or
xor
sbb
push
pop
push
popf
loope
mov
in
cmp
mov
popf
mov
test
dec
adc
add
outsl
loop
or
outsb
jl
xchg
jno
scas
int
cmp
mov
mov
mov
pop
push
and
int3
sbb
rcr
push
imul
in
cmp
dec
sub
imull
fwait
das
pop
xor
xchg
sbb
sub
pop
popf
mov
adc
add
aad
fcompl
jo
xchg
fs
mov
ds
jbe
jo
ffree
filds
ss
call
das
mov
or
sbb
pushl
push
and
popf
loope
data16
sarl
scas
test
and
add
fbld
cmp
pop
aad
jge
xchg
dec
jmp
or
jbe
dec
push
subl
mov
and
jo
pusha
popf
dec
xor
xor
inc
lahf
cmpsb
mov
pusha
arpl
movsb
pop
ret
add
sub
xlat
dec
jmp
repz
and
jb
sub
lcall
or
adc
jl
dec
jbe
and
fiadds
test
mov
mov
jno
hlt
mov
lret
add
ret
loopne
jmp
dec
pop
xchg
inc
or
xchg
sbb
shll
mov
incl
xchg
shrl
out
push
sbb
les
cmp
add
inc
movsb
jle
inc
les
nop
test
stos
dec
or
pop
push
jmp
mov
sub
or
adc
movsb
xor
mov
add
mov
imul
pop
loope
jmp
and
cs
xor
push
ds
inc
cmp
fwait
dec
idivl
rorb
cmp
add
pop
xchg
push
sub
mov
ret
loope
cmp
andb
stc
xor
cltd
add
cmp
sti
inc
add
xchg
adc
push
dec
xchg
mov
push
cwtl
jb
std
outsb
andb
into
jno
add
xchg
loopne
mov
cs
pop
push
cmp
jmp
fst
push
jb
mov
mov
jle
lods
xchg
inc
les
xchg
les
sbb
mov
cmp
lret
sub
push
ljmp
add
add
dec
adc
sub
mov
xor
jge
cmp
xchg
cmp
pop
scas
adc
inc
inc
ds
and
add
jb
imul
das
pop
push
fadds
jecxz
loope
add
out
jbe
subb
data16
dec
popf
imul
sbb
cmpsl
cli
mov
enter
aam
insb
lahf
adc
fcomps
out
repnz
in
pusha
xchg
xchg
push
xchg
sbb
xchg
or
mov
pop
popa
mov
adc
ljmp
popa
jns
adcb
out
clc
or
xchg
mov
aad
adc
jl
orb
sysenter
nop
add
loope
data16
sbb
inc
bound
daa
xlat
fistl
gs
insb
pop
gs
mov
fdiv
inc
xorb
push
stos
fsubs
mov
dec
mov
add
fidivrl
mov
add
mov
dec
pop
cmp
stos
daa
out
je
xchg
dec
mov
rcrl
inc
or
orl
adc
call
jmp
xorb
adc
push
mov
xchg
pop
cltd
or
or
pop
dec
cs
xor
enter
add
add
in
cmc
add
fcomp
mov
test
mul
push
popl
xlat
daa
clc
jmp
fisttpl
loopne
mov
scas
push
scas
sbbb
mov
lahf
aaa
push
add
ds
fmuls
test
ficomps
mov
or
or
add
add
jae
adc
pop
ret
or
mov
cmp
test
jo
ljmp
dec
ret
out
add
xchg
repz
aad
xchg
in
lock
adc
xchg
fisubl
mov
push
mov
cwtl
push
clc
pusha
iret
mov
sbb
lea
sub
sbb
pop
test
ret
ret
mov
push
pushl
shlb
push
clc
mov
cld
call
cmp
xor
adc
rclb
insb
ret
loope
inc
into
es
fcomip
xchg
push
jge
push
inc
xor
or
call
pop
mov
stos
add
lcall
dec
in
xor
rclb
ret
jmp
cmp
jmp
pop
push
test
adc
leave
inc
cmp
test
jo
push
xchg
fnsave
adc
test
jns
jge
push
pop
and
loop
inc
add
push
xchg
jo
xor
mov
dec
mov
mov
xchg
push
dec
in
sbb
push
add
add
or
and
cltd
cmpb
test
pop
mov
or
jmp
mov
add
xor
ror
loope
leave
inc
fucomp
inc
pop
sub
add
cmp
iret
mov
mov
test
push
xor
ror
inc
cmp
testl
or
clc
cld
and
out
and
jo
adc
push
mov
jmp
push
mov
inc
jbe
clc
subl
xchg
sbb
sub
inc
inc
dec
addr16
mov
add
insb
adc
mov
mul
add
and
fwait
and
ret
popa
popa
or
inc
int
sub
push
cmp
dec
push
or
add
sbb
icebp
lock
inc
inc
xchg
loop
rcll
and
push
sub
lock
outsb
dec
jnp
adc
cmp
sarb
and
inc
dec
inc
or
mov
cs
or
in
inc
dec
inc
cmp
cmp
jmp
xchg
inc
arpl
lods
nop
cmp
or
jg
adc
adc
cmp
enter
lea
push
add
call
pop
xchg
or
inc
pop
inc
mov
and
out
enter
inc
mov
aad
mov
xor
dec
mov
incb
add
adc
and
sbb
sub
and
cmpsl
adc
or
ja
and
adcl
push
inc
stos
dec
or
push
xchg
sub
std
xchg
xchg
dec
arpl
shl
cli
or
jmp
sub
jmp
les
rcll
popf
test
inc
mov
inc
add
add
add
mov
mov
shl
popa
ret
pushl
adc
or
arpl
or
jnp
inc
add
pop
fisttpl
and
or
sbb
adc
movsl
inc
insb
arpl
or
or
daa
push
iret
movl
or
es
inc
add
xchg
cwtl
jbe
aam
cmp
inc
cmpl
pop
clc
rep
lock
jae
shll
push
test
xor
push
pop
data16
dec
lock
or
mov
data16
imul
or
sub
sbb
pop
jmp
pop
add
adc
cltd
lock
or
clc
pushf
das
or
or
add
out
and
xchg
sbb
push
adc
add
popa
rolb
mov
pop
dec
or
xchg
cmovns
repnz
mov
cmc
sbb
jno
jl
int
lret
imul
jmp
mov
inc
test
jmp
add
or
roll
and
jg
dec
cmp
mov
jne
or
mov
push
mov
pop
mov
movsl
test
jg
aad
in
imul
jno
outsb
adc
and
mov
mov
mov
mov
jne
cltd
jmp
imul
mov
add
ljmp
pop
mov
xchg
call
mov
mov
add
daa
test
in
jno
fs
nop
push
pushf
pop
cld
cmp
jl
cmpb
or
lahf
mov
jb
ljmp
push
sbb
jmp
loopne
dec
xor
cmpsb
jle
xor
mov
sub
aaa
cltd
sub
out
pop
cli
aad
scas
jl
push
into
inc
add
outsb
push
inc
imul
push
cs
pop
add
and
cmc
dec
inc
popf
mov
in
inc
pusha
popa
cmpsb
movsl
or
add
adc
xor
mov
es
leave
pop
adc
das
je
test
and
xchg
mov
outsb
push
inc
sub
lret
pop
add
es
inc
mov
insb
test
ret
and
add
sarb
shl
fst
xchg
xor
add
and
push
aas
mov
cmp
and
cs
cmc
testb
rcrl
sbb
or
fadd
cmp
test
jl
cld
loop
add
jbe
inc
push
into
lods
adc
push
testl
mov
cmpl
push
sti
inc
add
fstl
jbe
iret
bound
push
aaa
sub
xchg
fstl
in
fwait
call
inc
cmpsl
and
or
jl
xlat
fld
test
pop
and
mov
and
sbb
add
icebp
addr16
fs
fadds
testl
call
nop
daa
into
iret
jo
add
lods
popf
rolb
mov
stc
jl
mov
push
sbb
inc
cmp
sbb
pop
pop
or
or
hlt
addl
jne
push
cmp
faddl
xchg
inc
inc
dec
rcrl
cmp
dec
xor
dec
incb
leave
sarb
xchg
cmpsl
and
addb
push
jb
lds
notb
sub
scas
subb
in
nop
adc
xlat
mov
mov
insl
jg
inc
dec
lods
loopne
dec
xchg
in
push
add
aam
sbb
lds
or
popa
icebp
cmp
inc
inc
add
nop
mov
push
xchg
mov
pop
lret
rcll
xorl
xchg
dec
add
mov
mov
adc
add
and
mov
mov
xlat
push
and
sti
xor
imul
in
push
leave
push
ds
xor
mov
test
mov
dec
clc
test
cmc
adc
in
adc
ficompl
add
sbb
mov
adc
and
in
push
xor
test
in
jl
adc
pop
ss
cmp
loop
mov
in
lock
sub
push
or
add
push
sbb
stc
stos
push
dec
ds
xor
fidivrs
test
popa
sub
mov
pop
mov
imul
stos
add
mov
insl
js
jg
hlt
inc
les
add
adc
xchg
and
and
mov
jae
push
imul
mov
mov
mov
lcall
push
push
push
je
imul
imul
add
mov
pop
dec
and
inc
add
pop
leave
jecxz
jnp
loop
pop
mov
add
push
mov
push
scas
sbb
pop
mov
sbb
out
adc
jns
add
sbb
mov
mov
inc
adc
ljmp
xor
push
mov
mov
or
lret
dec
adc
cltd
push
out
cld
inc
das
or
inc
and
pop
stos
and
outsb
push
or
push
dec
inc
jmp
dec
pop
pop
jl
bound
incl
lock
out
cmp
inc
cmpsb
call
xor
lds
incb
clc
jmp
xor
inc
or
jnp
sub
fisubl
pop
in
pop
cmp
add
sahf
imul
push
mov
jb
pop
inc
sub
mov
push
dec
hlt
dec
imul
sub
add
in
adc
scas
cmc
jmp
cltd
sub
mov
dec
cld
repnz
das
rorb
mov
stc
jp
push
cmp
scas
add
push
mov
mov
jmp
fs
inc
scas
popf
push
add
xorl
add
loop
stos
dec
cld
mov
add
adc
int3
push
hlt
fldl
adcb
popa
pop
pop
lods
push
and
xchg
movsb
push
mov
ret
xlat
mov
je
xor
dec
aam
add
sub
jns
pusha
negl
loope
mov
cmp
pop
add
push
in
mov
or
repnz
fisubrs
cmp
add
stos
out
arpl
cli
clc
push
cmp
inc
push
pop
out
cmp
cld
pop
int3
pusha
inc
add
js
dec
xchg
bound
pushf
sub
and
xlat
lahf
rcrb
or
imul
and
sub
xor
pop
jbe
adc
dec
mov
pusha
scas
inc
pop
fcompl
popf
dec
xchg
mov
xchg
sub
push
add
push
lcall
leave
add
das
mov
jns
ret
add
add
push
addr16
pusha
popf
mov
push
lahf
sub
pop
lods
or
fisubrl
xchg
outsl
and
loopne
pop
addb
add
jae
xor
pop
pop
pusha
jl
cli
ret
gs
add
xor
xchg
inc
adc
pop
ljmp
pop
adc
gs
js
dec
push
aad
cmp
adc
iret
cmp
sbb
mov
std
sub
divl
stos
mov
push
or
addl
mov
pop
jmp
in
dec
daa
or
shll
insb
test
mov
addr16
call
imul
movsl
dec
out
inc
ret
lods
rcrb
lret
fmuls
xor
sahf
add
shrl
jle
js
mov
iret
hlt
xchg
pop
pop
test
sub
mov
fisubrl
leave
or
mov
pop
pop
mov
in
dec
cmp
lods
jmp
fstl
add
pop
in
aad
xchg
or
daa
shlb
js
push
cmp
sbb
dec
lds
and
xchg
dec
das
pusha
push
lea
xchg
add
jmp
xor
xchg
push
and
iret
sub
inc
cmp
push
add
lret
jns,pt
out
inc
jl
cmp
cmpb
loop
pop
cmp
add
das
mov
or
movsl
lret
or
add
inc
push
xchg
stc
mov
adc
xchg
xchg
push
dec
sbb
leave
jmp
pop
add
and
dec
arpl
adc
stos
movsb
clc
xor
xchg
jecxz,pn
push
push
sbb
add
sub
xor
ljmp
dec
jno
ss
adc
lods
in
aaa
cld
pcmpeqb
ljmp
or
mov
inc
push
std
and
adc
ss
in
add
cmp
je
pop
add
xchg
aaa
js
icebp
jno
mov
imul
jns
push
add
insb
push
fstl
push
pop
jle
jle
and
nopl
cmpb
pop
xlat
push
push
jns
xchg
rcll
mov
mov
les
scas
cli
int3
lock
and
aaa
das
in
call
cli
inc
or
imul
aas
adc
push
pushf
pop
jge
mov
sub
push
stos
nop
sub
pop
dec
xchg
xlat
inc
fsubl
cmpsl
daa
les
subl
aas
int3
cmp
mov
cmpsl
out
aam
leave
jge
dec
inc
xor
pop
mov
or
std
gs
inc
inc
xor
xorl
es
in
sbb
cmp
xor
out
pop
or
jb
jg
pop
dec
pop
jns
push
je
add
in
insb
ds
sbb
add
pop
add
aam
pop
mov
loope
in
addr16
sub
cmpb
add
hlt
jg
bound
jecxz
add
xchg
repnz
cld
sti
sahf
push
push
add
sbb
mov
outsb
push
or
mov
jo
add
jecxz
mov
add
mov
dec
add
popa
pop
add
xchg
jno
mov
mov
cltd
sbb
add
push
cs
xlat
cmp
or
enter
dec
mov
imul
sub
pop
mov
push
and
sar
sbbb
sub
test
add
movswl
pop
mov
cmpsl
add
roll
mov
lcall
push
mov
mov
mov
pushl
mov
cmp
leave
ja
cmc
dec
push
push
fwait
cmp
push
ds
inc
inc
xor
mov
mov
cmp
fisubrl
push
jmp
cmc
dec
pop
adc
add
sbb
popl
pop
mov
sub
cmp
or
add
mov
xlat
outsb
lods
xchg
and
sbb
loope
sub
call
adc
xlat
add
jle
and
fiadds
mov
jmp
adc
pop
clc
or
fstpl
inc
add
fwait
or
sti
mov
pop
xchg
dec
xchg
dec
jecxz
adc
add
jge
mov
lds
rorb
add
add
add
mov
inc
nop
mov
clc
pop
sub
dec
out
push
fldl
add
push
mov
mov
stos
in
ss
lahf
add
jp
mov
pop
lods
rolb
or
movsl
dec
gs
fiaddl
inc
xchg
or
rcrb
ds
scas
xchg
cld
add
xor
shlb
pop
pop
or
sti
loope
sbb
add
jle
mov
cmp
add
cmp
add
xchg
int
add
fs
std
push
add
ret
sbb
je
mov
setne
imul
or
test
pop
mov
int3
jle
xor
out
aam
add
push
aas
movsl
mov
xchg
pop
jmp
lock
dec
add
hlt
mov
add
inc
je
and
fcmovnu
jecxz
mul
mov
xor
cmp
outsl
mov
jo
fcompl
xor
cmp
mov
mov
popa
push
pop
inc
imul
pop
dec
repnz
pop
nop
addb
fsubp
int3
stos
sub
adcb
inc
test
pop
in
jmp
add
push
pop
cli
test
inc
xor
sub
cmp
add
pop
lcall
or
and
pop
enter
in
cmp
add
call
xchg
mov
cmp
jns
ret
or
pusha
stos
rorl
fst
loope
add
and
sbb
cmp
mov
mov
in
ja
or
leave
dec
addl
pop
pushf
adc
mov
sbb
pushf
divb
jns
push
pop
jge
add
xchg
addr16
xor
mov
add
and
or
loopne
mov
in
outsb
and
ja
fldl
mov
fidivrl
dec
and
mov
clc
mov
or
lahf
xor
fsubs
sub
xlat
das
add
out
sub
out
sbb
jl
push
push
push
inc
sbb
inc
mov
test
jg
les
push
scas
loopne
sbb
sub
cmp
ljmp
mov
add
lahf
fbstp
pop
push
in
adc
imul
gs
mov
ja
subb
sbb
pop
add
push
mov
ja
add
xlat
shr
lods
sub
jnp
stc
and
mov
clc
push
add
stos
cld
out
mov
push
int3
mov
sarb
leave
xchg
jb
fs
jnp
push
lcall
ja
outsl
xor
out
rolb
outsb
loope
sbb
loopne
aam
push
add
movsb
mov
push
add
mov
into
adc
pop
jge
leave
sbb
in
aam
or
std
sbb
ja
xor
addb
dec
inc
loop
add
subb
out
pusha
and
add
or
jge,pn
cmp
inc
jg
and
mov
sahf
div
mov
pop
jns
js
add
mov
jp
frstor
cwtl
sbb
negb
lcall
fidivs
mov
dec
rolb
fcoml
jp
and
int
cld
add
jmp
sub
push
add
or
pop
sub
notb
mov
push
jecxz
bound
js
mov
add
imul
mov
add
aas
loopne
popa
inc
popa
mov
loopne
aam
dec
jnp
fprem1
pop
shrb
scas
add
push
fwait
pusha
xor
sbb
inc
out
dec
adc
mov
add
add
add
mov
mov
jle
insb
mov
out
push
je
add
jg
cmp
ror
add
incl
cli
mov
adc
dec
ljmp
pop
pop
and
data16
jae
jmp
add
cli
sub
jge
xor
popa
incl
cld
inc
inc
testl
sub
shll
jmp
cmp
mov
lret
mov
movsl
or
add
add
fs
pushf
xchg
outsl
imul
cmp
lds
add
push
test
add
iret
jo
dec
dec
add
and
ljmp
addb
push
nop
xchg
add
push
push
lods
pop
and
add
aad
adc
cli
add
test
out
xor
test
push
sbb
arpl
mov
cmc
insb
jmp
sub
or
popf
or
jnp
add
sbb
lock
out
addb
fcmovnu
cmovo
repnz
hlt
es
and
loop
add
xor
and
push
int3
nop
fistl
sbb
inc
push
xorb
mov
adc
pop
and
or
rolb
lcall
call
out
imul
daa
or
stos
call
repz
xlat
dec
fcomps
fsub
add
lcall
fucomi
mov
xor
or
push
xchg
dec
xor
pop
rcrl
add
lcall
mov
sti
mov
push
cmp
add
jo
daa
push
cld
xchg
cmp
sbb
sub
jecxz
in
mov
add
inc
adc
add
fsub
pushf
or
mov
mov
andb
or
sbb
cwtl
inc
leave
imul
mov
into
mov
jbe
jae
repnz
clc
add
mov
mov
xchg
pop
out
or
cmc
daa
cmp
js
mov
add
adc
insl
into
aaa
jmp
mov
cmp
or
sub
or
sub
hlt
add
mov
notl
and
sbb
stc
mov
add
insb
jbe
or
add
jb
sbb
push
or
mov
xor
dec
mov
call
add
xchg
es
xor
les
int3
or
cs
adc
pop
notb
jns
cwtl
lock
jae
jno
sub
xor
cmp
mov
ljmp
jo
inc
mov
lods
pusha
add
push
jge
pop
iret
or
cli
dec
aaa
inc
pop
inc
push
add
or
hlt
daa
cmpsb
cs
loop
mov
je
xchg
das
sbb
int3
jb
outsb
jne
jnp
aaa
xchg
add
dec
pop
lods
add
lds
xchg
fbld
sub
test
dec
push
mov
fildl
or
xor
or
ds
cmc
test
mov
fwait
cmp
repnz
nop
dec
hlt
fucom
orl
dec
mov
inc
shl
add
jge
or
and
enter
mov
fildll
insl
add
add
in
out
adc
jne
arpl
sbb
les
mov
dec
jmp
arpl
mov
pop
xor
adc
sbb
inc
arpl
or
and
add
mov
push
jne
ror
add
sti
or
mov
loope
jbe
add
lds
arpl
push
xchg
add
xchg
push
jno
loop
add
mov
xchg
mov
add
aam
mov
gs
loope
inc
push
add
mov
or
std
cld
jno
cmp
mov
les
mov
inc
scas
rcrb
mov
mov
xor
data16
in
xchg
cld
add
in
repnz
in
fildl
pop
add
int
test
add
add
push
xchg
push
lods
sbb
add
pop
jbe
add
pop
or
xchg
add
mov
push
dec
hlt
fdivrl
add
cwtl
pop
insl
pop
xchg
jecxz
dec
addr16
xchg
dec
cmp
mov
or
ret
jnp
ror
imul
icebp
adc
scas
pop
fs
jo
das
int3
pop
mov
in
mov
sub
sub
es
test
adc
pop
fs
sbb
xchg
bound
fwait
jmp
add
je
scas
adc
in
xchg
insl
mov
scas
inc
push
mov
mov
insl
mov
inc
ret
ja
mov
add
arpl
cmp
mov
mov
pop
push
rorl
add
aaa
aas
mov
dec
aam
jbe
shrl
outsl
mov
xor
and
ds
adc
mov
or
pop
into
inc
enter
lods
mov
out
or
cwtl
imul
cmp
setle
int
xor
xchg
mov
add
das
pop
push
arpl
test
jb
add
add
sahf
jo
bound
pop
dec
insb
stc
mov
pop
push
push
jp
pop
sbb
nop
xchg
add
add
inc
jns
imul
pop
stc
cld
lcall
pop
xor
add
mov
inc
mov
sbb
sub
xchg
cmp
mov
pushf
mov
jb
jo
aam
adc
outsl
sbb
cmc
rolb
insb
pop
aam
mov
cld
and
cwtl
rorl
call
loopne
pop
mov
fadds
call
adc
js
lock
and
addr16
popf
in
imul
rorb
test
pop
ja
insb
adc
ss
cwtl
push
mov
cmp
imul
pop
and
or
movb
sbb
pusha
fisubl
in
pop
jns
sahf
test
iret
addb
out
or
add
add
into
xchg
add
add
fistl
add
nop
mov
imul
add
adc
pop
xchg
pop
sbb
lret
outsb
push
sub
inc
sbb
jnp
jle
xchg
sbb
or
add
out
clc
dec
test
sti
sub
jo
loopne
add
dec
out
test
add
pop
cmpsl
ds
stc
add
sbb
and
mov
in
mov
in
add
jne
hlt
sbb
or
ds
xchg
xchg
in
inc
jecxz
cmp
add
imul
fldt
add
cs
cmpsl
dec
nop
dec
mov
cmpsb
stos
mov
pop
mov
in
or
jb
les
out
or
fbld
and
es
xor
aaa
pusha
call
jne
push
aas
sub
sahf
or
sbb
incb
cmp
loopne
inc
xchg
jo
jmp
lds
aam
test
mov
ljmp
inc
cmp
icebp
sahf
adc
or
jmp
and
fadds
push
add
fidivrs
in
rclb
loope
andb
and
aam
shlb
cmpb
add
test
jae
cmp
sub
in
lahf
add
xchg
rolb
jns
in
cmovs
js
and
mov
add
add
pushf
inc
mov
cmp
filds
sti
adc
or
idivb
push
xchg
sti
subb
imul
jge
loop
jae
repnz
rolb
push
clc
cmp
mov
in
xchg
fdiv
inc
pushf
loop
xor
or
popa
jbe
pusha
popf
popa
in
and
sub
add
sub
cwtl
inc
repnz
and
dec
popf
clc
mov
pushf
cmp
push
stos
adc
or
stos
das
jmp
mov
push
xorb
js
xorb
pusha
ss
or
in
fs
pop
xor
mov
add
movsl
mov
subl
lret
mov
sub
out
add
mov
rorb
lock
nop
inc
sbb
lods
aas
add
cmc
push
mov
loop
fiaddl
test
and
lds
nop
sub
or
mov
mov
jnp
adcl
push
out
ret
mov
inc
push
cmp
pop
mov
or
and
cmp
push
add
xor
pusha
mov
mov
mov
pop
jmp
sarb
dec
xchg
jo
cmp
imul
ljmp
test
cmc
fiaddl
mov
adc
sub
pop
mov
add
daa
cmc
cmp
fisubrs
sbb
fcoml
pusha
test
fs
insb
sub
cmp
lahf
adcb
je
out
cmp
add
mov
sbb
int
mov
push
rcrb
adc
inc
mov
outsl
and
adc
adc
xor
mov
fsubrs
jp
xorl
cwtl
push
andl
adc
add
mov
fisttps
testl
movsb
inc
pusha
sbb
pop
fsubrs
call
mov
inc
out
rolb
or
mov
adc
fldl2e
in
les
sarb
fsts
sub
add
inc
xor
bnd
mov
pop
pusha
hlt
adc
les
enter
fucomip
sub
notl
xor
jecxz
lods
data16
lock
add
dec
cwtl
sbb
in
dec
xor
sub
in
jl
and
dec
movsl
add
test
ja
js
andb
lahf
stos
leave
push
pop
lahf
lock
icebp
cmp
sbb
adc
hlt
inc
hlt
jl
out
jo
mov
es
xchg
aam
xor
sahf
adc
jo
adc
push
sub
shlb
aam
out
add
iret
popa
mov
inc
sbb
in
pusha
lods
and
sub
jg
dec
mov
loope
bound
xchg
cmp
adc
xorl
mov
add
inc
iret
popl
push
jle
inc
aaa
out
ret
xchg
dec
add
arpl
rolb
xor
jbe
popa
inc
xor
imulb
outsl
out
insb
ljmp
aad
dec
xorl
rolb
dec
test
or
mov
shll
inc
inc
fildll
in
or
or
sub
das
mov
and
adc
mov
add
jle
loopne
dec
aaa
jge
lock
and
add
jp
push
or
insb
hlt
add
adc
jo
and
repz
pop
js
sub
adc
dec
aad
sub
clc
inc
sub
lods
adc
cs
or
push
outsl
mov
push
adc
aaa
jmp
sub
aam
outsb
incl
ds
xor
push
pop
movsb
out
lcall
or
or
leave
test
inc
inc
lret
out
jae
je
out
subb
mov
jl
sbb
int3
fmuls
enter
in
sbb
lods
add
stos
lds
testl
call
mov
pop
sbb
add
aaa
and
add
inc
sbb
icebp
loope
cmp
or
push
cmp
xorb
repnz
cmp
sbb
faddl
popa
mov
or
inc
dec
or
shlb
push
das
icebp
pop
adc
aaa
mov
add
jns
repnz
out
cwtl
sbb
and
in
adc
js
cmp
test
stos
dec
dec
mov
aaa
rorb
and
add
stos
and
jmp
popf
in
popa
push
sub
xchg
jno
inc
mov
testl
int
ja
test
cmp
test
or
or
mov
or
out
cmp
repnz
xor
cmpsl
int3
add
add
lock
inc
loop
add
sbb
cmp
pop
or
xchg
jp
mov
adc
adc
aaa
ds
int
idivl
push
popf
into
cmp
mov
hlt
inc
add
in
mov
cltd
sbb
iret
pop
nop
jo
lods
add
fs
fwait
jge
ret
and
clc
sbb
cmc
or
mov
and
sbb
pop
loopne
add
xor
push
jae
inc
sub
enter
push
sbbl
add
dec
sub
add
jmp
mov
fnsave
dec
loopne
or
test
in
add
xchg
pop
popa
bound
pushf
add
and
repz
xor
pop
loop
inc
call
push
pop
fidivs
js
or
or
das
add
lods
adcl
cltd
and
xchg
add
and
xchg
lods
inc
nop
cmp
addr16
adc
cli
cltd
mov
xor
mov
push
jno
xor
jnp
fdivrl
push
leave
mov
ror
sub
pusha
inc
push
cmp
ds
adc
add
cmp
and
call
adc
mov
lcall
mov
add
lods
sbb
and
add
sahf
adc
push
add
sahf
mov
mov
rorb
cmc
sbb
mov
xchg
inc
or
cwtl
adc
cmpb
pushf
movsl
adc
sbb
dec
sbb
dec
into
sbb
xor
xchg
pop
jnp
scas
ret
xor
jo
daa
pop
repz
call
fimuls
les
loopne
nop
and
or
ret
push
imul
push
inc
cmc
rolb
sbb
aad
js
add
sub
in
mov
adc
repnz
or
stos
xchg
xchg
fsubrl
mov
fcomps
lods
enter
xor
sbb
add
jmp
adc
or
lods
pop
push
dec
sbb
cmp
sarl
and
addr16
mov
mov
adc
lahf
inc
xchg
shr
sub
jl
sub
pop
mov
sub
dec
cmp
movsl
fmuls
lock
ficomps
lds
mov
sub
adc
insb
jne
test
loop
jb
in
es
cmp
inc
out
roll
xor
sbb
cld
jb
repnz
cmp
mov
add
jo
jns
dec
sbb
inc
xor
mov
adcb
push
sti
aaa
cmc
add
push
pop
je
push
dec
stos
or
and
mov
fidivrs
mov
les
out
inc
adc
insl
cmp
xchg
lock
mov
add
sub
push
call
stos
in
fs
cwtl
subl
repnz
sub
add
sub
ds
or
inc
call
data16
repnz
push
cmp
or
fiadds
aas
pop
test
push
mov
inc
arpl
mov
movb
insb
push
pop
xchg
push
add
jmp
pusha
dec
pop
cltd
xor
loopne
push
insb
rcl
jg
xor
xorl
out
fsubl
or
sahf
add
add
mov
fisubs
cwtl
jno
sbb
lods
add
in
lcall
fldenv
pop
inc
test
and
movsb
rcrl
fsub
cmpsb
pop
or
jne
sahf
pop
mov
pop
lahf
add
push
les
out
test
aam
daa
mov
nop
add
hlt
pop
lods
sub
fwait
movaps
mov
xor
sub
pusha
enter
popl
aaa
push
psadbw
pop
sbb
imul
je
jbe
enter
cmp
pusha
fld
test
fistpll
shrl
pop
mov
push
xor
lock
test
adc
or
js
and
fidivl
js
jbe
test
dec
jmp
jne
mov
repnz
xchg
sbb
gs
jns
mov
dec
xchg
fdivp
sahf
pop
out
in
faddl
push
xor
and
aaa
push
push
add
lahf
pop
jo
lcall
add
ljmp
cltd
push
enter
sbb
xor
stos
adc
fs
jl
and
loopne
sbb
inc
fcompl
fcomps
push
aas
mov
gs
enter
outsl
js
inc
out
or
inc
les
or
outsl
inc
or
xchg
pop
add
out
iret
nop
fcoml
add
mov
cwtl
out
pop
jne
cmp
jo
jns
add
cmp
les
enter
adcl
jo
bound
and
in
int3
push
aas
push
and
mov
lahf
mov
jo
faddl
nop
addr16
ljmp
loopne
clc
icebp
add
aad
mov
and
into
inc
test
dec
mov
arpl
inc
jl
jmp
ja
lods
jns
pop
inc
mov
mov
add
sahf
push
lods
loopne
xchg
mov
gs
or
pushf
bound
adc
jp
fisttpll
jnp
popa
adc
cmp
sbb
out
sarb
pop
divb
hlt
in
fs
addl
cmp
add
xchg
adc
mov
xor
stos
loopne
popa
pushf
in
call
mov
pushf
mov
and
mov
cmpb
sbb
outsl
fs
and
pushf
and
jl
andl
mov
sub
fsubrs
dec
lret
push
dec
inc
push
mov
lods
aaa
add
je
je
arpl
add
xchg
mov
pop
inc
int3
add
mov
push
mov
mov
push
sti
je
add
cmp
inc
xchg
fnstsw
stos
jge
and
sbb
fwait
sbb
add
mov
adc
rdtsc
jne
add
adc
dec
inc
pop
sbb
jno
dec
jge
lods
add
xrelease
xchg
sub
fsts
pop
and
cpuid
inc
dec
ds
and
xlat
and
sbb
pop
rorb
adc
pop
add
fs
dec
movsb
call
pop
in
fwait
mov
in
and
pop
add
jb
jmp
push
mov
fldt
icebp
sbb
cwtl
xchg
call
pushf
push
push
and
cwtl
mov
pop
jbe
or
and
adc
sub
adc
mov
add
sahf
mov
lret
shrl
cmp
add
dec
adc
cmpsl
aam
add
pop
mov
push
ljmp
mov
mov
ja
adc
jo
cltd
mov
sub
sahf
add
cwtl
hlt
inc
inc
mov
lock
and
scas
pusha
into
loop
add
jecxz
jo
mov
sub
es
ret
add
cltd
inc
shlb
or
xchg
imul
add
and
mov
cmp
mov
and
int3
ss
xchg
and
add
add
add
pushf
inc
je
pop
nop
mov
je
lods
add
roll
xchg
pop
pop
adc
movb
jl
nop
repz
mov
jp
mov
or
sbb
inc
xor
cwtl
and
fcomps
and
sub
add
jo
imul
push
repz
test
loopne
pushf
mov
testw
test
out
mov
pushf
jne
cmc
hlt
inc
xorb
mov
mov
test
setae
jb
xor
lcall
cwtl
sbb
iret
push
pop
xchg
daa
and
ret
adc
mov
lods
or
loope
fwait
jb
xorl
cmpsl
mov
jno
loop
insl
push
mov
stos
inc
pop
cwtl
or
adc
add
xchg
mov
mov
aaa
adcb
push
mov
roll
jo
cmp
xchg
sub
add
add
mov
mov
pop
faddl
sbb
add
xor
adcb
mov
jg
cmp
xor
in
jge
ret
inc
pop
shlb
enter
add
das
jge
add
movsb
lret
pusha
mov
add
or
sub
idivl
dec
inc
into
mov
push
adc
add
arpl
xchg
xor
loope
stos
lock
in
xor
jb
add
fdivs
and
push
cmp
jecxz
mov
lock
push
sbb
js
movsl
sbb
mov
adc
ffree
add
notl
mov
stos
in
or
push
add
dec
scas
push
mov
imul
xchg
outsl
xchg
adc
hlt
lcall
push
mov
call
ret
mov
mov
call
push
inc
cmp
mov
pushf
inc
pop
or
cwtl
add
aaa
cltd
repz
outsb
mov
or
xor
and
cmp
hlt
out
mov
jb
sbb
add
push
aad
add
outsb
outsl
pop
fcom
pop
lldt
and
dec
add
outsl
jp
notb
add
inc
add
xor
mov
lock
pop
jl
push
clc
data16
pushf
xor
outsb
adc
stc
pop
clc
fs
pop
mov
add
pop
mov
jno
add
fildl
in
xchg
dec
add
out
ja
iret
sub
add
adc
sbb
stos
jbe
add
mov
xor
or
and
addb
xor
jb
dec
xor
loopne
jo
sbb
mov
add
sahf
pop
js
or
add
dec
lret
ja
jl
inc
rclb
inc
das
jno
iret
psubusw
pop
xchg
popa
les
aaa
insl
cltd
add
arpl
add
lods
push
or
shll
lods
into
pop
inc
adc
inc
insb
mov
or
ficoms
jo
add
loope
jae
sub
mov
repz
incb
cmp
jmp
push
ja
loopne
jmp
mov
dec
out
movsb
inc
cmp
pop
mov
or
mov
inc
pop
sub
cmpsl
in
mov
mov
aad
mov
and
js
outsb
xchg
xchg
cmp
add
inc
cwtl
inc
insb
adc
les
lcall
cmpsl
add
push
push
es
adc
int
or
mov
outsb
pusha
movsl
adc
mov
mov
cli
xchg
xchg
mov
dec
sarl
adc
xlat
dec
sbb
push
sbb
mov
sub
or
or
jg
aaa
jo
cli
fs
pusha
lds
xor
out
fisttps
mov
pop
inc
dec
mov
lds
test
dec
add
sub
mov
mov
pusha
fildll
imul
sub
pop
xor
rcrb
sbb
xor
dec
dec
stos
xor
add
sti
decl
add
jp
fisttpll
xchg
fstpt
push
inc
jle
pop
dec
clc
jge
call
dec
and
subl
jle
push
cmp
adc
fcoms
add
jae
pop
orl
dec
push
xor
and
pop
adc
std
inc
add
mov
or
inc
push
dec
push
mov
dec
ljmp
add
push
pusha
fldl
push
adc
fmul
pop
push
adc
sub
mov
pop
pop
outsb
pop
mov
adc
lret
pop
adc
call
jecxz
mov
add
aaa
leave
inc
test
nop
xor
pusha
jl
jnp
jne
push
shl
add
insb
fwait
scas
jg
cmpsb
mov
xchg
inc
aas
lods
push
jns
mov
cmp
mov
or
fxch
mov
add
nop
mov
icebp
add
add
jno
jge
jge
in
mov
sbb
mov
mov
icebp
aam
jl
push
rorl
inc
adc
test
add
add
cmpsl
leave
jle
pusha
lds
into
xchg
lods
mov
push
sarb
jnp
add
ret
mov
loopne
adcb
jle
add
int
mov
mov
adc
inc
add
sub
mov
or
inc
fdivrl
prefetcht0
sub
icebp
popf
sbb
data16
and
bound
jl
add
inc
inc
fs
mov
add
sbb
cmp
test
mov
shlb
xchg
clc
mov
push
pop
add
popf
sub
nop
and
ja
adc
fildl
mov
push
mov
int3
add
sbb
mov
and
in
aad
pop
mov
xor
mov
dec
in
out
sahf
addb
lds
pusha
int3
jne
xchg
mov
cmp
outsb
pop
mov
add
int
jo
inc
pushf
pop
xor
fs
sbb
cmp
xchg
mov
movsl
add
ret
cld
pop
sbb
addr16
inc
out
lret
out
add
mov
repz
pop
shl
push
add
and
mov
ja
mov
inc
sbb
js
and
jecxz
pop
mov
sub
or
imul
push
xor
lret
pslld
mov
clc
push
cli
rcrb
sbb
xlat
pusha
xor
and
sbb
cmp
pop
ret
ret
push
add
cs
imul
mov
adc
ret
add
je
pusha
sub
outsl
negb
cld
add
movsl
push
mov
pop
lock
inc
add
out
dec
aad
fsubs
jecxz
push
loop
pop
notb
andl
push
andb
lock
cs
push
lock
scas
and
jo
or
pop
jo
idivl
push
add
cmp
loopne
mov
in
imulb
jne
arpl
lock
sbb
adc
and
inc
hlt
inc
pusha
pop
push
sub
add
mov
ret
cmpsl
push
cmp
lods
pop
scas
sbb
mov
push
jl
add
inc
sub
xlat
jge
or
adc
dec
pusha
loopne
ds
sbb
inc
sti
leave
mov
maxps
dec
adc
xchg
les
notl
push
inc
xor
lahf
mov
int3
xchg
adc
or
mov
push
in
add
or
sti
mov
mov
and
insb
add
test
and
cmp
cmpb
outsl
cmp
imul
mov
or
fimuls
cwtl
or
loopne
xchg
mov
jmp
aam
xor
pop
sbb
addb
dec
jge
push
xchg
mov
stos
jg
mov
frstor
dec
stc
push
add
xor
push
add
aad
and
and
jns
add
or
cmp
icebp
add
and
push
pop
leave
pop
shll
inc
fdivs
stos
in
movsb
das
aad
add
adc
mov
add
or
test
stc
jbe
nop
stos
add
repnz
adc
mov
sub
inc
sub
xchg
rorb
pop
xor
pop
lods
bound
loope
fstpt
insl
add
shll
outsb
adc
mov
js
mov
mov
and
rcrl
cwtl
cltd
push
bound
xchg
jae
jmp
loopne
ret
pop
shlb
aaa
push
add
mov
fwait
or
dec
addr16
mov
cwtl
or
lock
sub
pop
adc
arpl
mov
adc
int3
xor
add
inc
jge
mov
in
or
cmp
xor
fnsave
pop
push
jno
add
add
in
jbe
cld
mov
loopne
ss
int3
lcall
data16
dec
lds
popf
mov
lods
cmpsb
mov
mov
sbbl
scas
add
mov
pop
es
xchg
inc
mov
or
lcall
adc
gs
inc
jecxz
add
loope
pop
in
push
cmpb
mov
xchg
push
mov
mov
add
or
nop
dec
or
out
mov
push
cmp
aaa
add
or
jb
and
add
or
fs
cld
ja
push
and
and
ds
add
in
jmp
pop
sub
andb
outsl
imul
fiadds
mov
push
repz
pop
cwtl
jno
xlat
test
push
push
and
arpl
and
add
cmp
icebp
xor
stc
mov
adc
dec
pop
mov
jbe
daa
xlat
add
dec
dec
bound
fistpl
in
jae
cmpsl
test
dec
mov
mov
add
enter
stos
jno
and
popa
lea
sub
add
aaa
sti
aas
scas
xor
repz
into
add
inc
xor
or
add
jae
out
lcall
push
xchg
push
jne
mov
dec
sbb
xor
add
aas
and
js
push
loope
xor
lea
push
cmp
aas
cwtl
ss
shrb
scas
push
xlat
add
or
jo
fwait
add
aas
push
out
fmul
call
mov
out
lock
movl
jo
inc
iret
cli
add
popf
call
xchg
paddd
sbb
push
add
cmp
add
in
cmp
repz
push
ret
add
cmovo
sbb
mov
add
push
jge
adcb
push
adc
lahf
gs
outsb
dec
xchg
add
xchg
and
add
pop
inc
add
dec
pop
and
add
inc
pop
push
xchg
ljmp
mov
xor
cmp
jle
or
cltd
enter
aam
lcall
leave
aad
dec
mov
adc
test
mov
and
cmp
in
rcl
mov
or
jne
push
add
lret
sbb
push
add
shlb
in
and
sbb
add
stc
loope
add
pop
jge
insl
test
jbe
add
cmp
pop
adc
hlt
mov
xor
cmc
and
push
fimuls
jns
jbe
cwtl
push
and
loope
sbb
je
scas
add
fcoms
mov
mov
test
out
movsb
add
je
cmc
adc
xchg
in
add
pop
add
push
pop
mov
andb
out
pop
pop
push
add
push
xchg
test
call
outsl
xchg
sub
jo
push
cmc
fsubrp
add
mov
daa
xor
outsl
jle
cwtl
jb
rclb
out
lock
jp
add
lret
movsl
test
pop
jmp
sahf
xor
movsb
aas
jle
inc
or
add
add
inc
xlat
int3
adc
push
enter
push
add
xchg
imul
inc
pusha
ljmp
push
xor
pop
sub
movb
sarb
jo
aaa
mov
xchg
jae
ss
sbb
push
cmp
test
pop
mov
and
mov
mov
daa
arpl
outsb
mov
subl
sbb
cltd
in
lret
mov
and
mov
sbb
imul
loop
rcll
dec
inc
or
repz
nop
push
lods
jle
add
adc
test
mov
and
add
popf
imul
js
pop
lea
cli
add
mov
repz
xorl
mov
add
loopne
cwtl
pop
jle
add
mov
sub
gs
pop
lahf
add
xchg
pop
fs
in
adc
fs
mov
cmpl
cmp
or
add
push
sub
push
aad
and
fwait
insb
add
xlat
sti
cmp
and
and
lds
ja
mov
cmp
insl
xor
inc
push
mov
add
es
xor
in
mov
inc
sbb
std
sbb
push
clc
sub
sub
or
push
mov
xor
xchg
mov
in
xchg
cmp
jecxz
push
cwtl
je
sbb
jle
push
pop
xorb
jl
mov
jg
mov
in
mov
popl
add
sar
jb
add
popa
cmp
pop
fcmovbe
inc
jecxz
loop
sti
dec
add
add
jae
imul
pusha
or
xchg
add
mov
fadds
cmp
or
push
sub
call
xchg
pop
mov
pop
sbb
aam
adc
sti
pop
jno
jne
push
add
cwtl
test
add
cld
jp
push
ret
xor
insl
add
push
lock
xchg
cwtl
inc
jo
add
and
pop
enter
jnp
pop
movsl
and
je
and
sub
fidivrs
xor
shll
push
add
xor
scas
in
les
out
jb
test
jecxz
mov
pop
int
mov
xchg
int3
js
sub
repz
scas
jbe
fimull
rclb
sub
sub
jge
outsl
inc
xchg
imul
push
bound
aam
in
pop
mov
jno
jecxz
enter
jge
orb
int
mov
mov
jne
mov
mov
icebp
or
push
sbb
shrl
or
in
gs
cmp
lret
pop
add
decl
pop
sub
ljmp
into
xchg
cltd
pusha
add
fwait
inc
pop
add
pop
mov
adc
inc
ret
jnp
mov
pop
scas
lock
fwait
push
test
xchg
imul
add
inc
sbb
cmpsb
push
jae
lret
repnz
push
sbb
jne
popa
roll
mov
pop
push
and
mov
xor
or
pushf
or
jl
hlt
mov
adc
mov
fdivs
dec
xor
repz
mov
add
repnz
and
mov
push
add
getsec
ret
pop
arpl
addb
mov
add
jne
dec
inc
add
pop
pop
push
push
call
add
push
shrl
and
add
mov
hlt
xchg
out
add
xor
mov
mov
insb
mov
ljmp
add
hlt
add
pop
popa
cli
pop
ficompl
outsb
in
subl
hlt
das
mov
into
xlat
roll
out
cwtl
add
push
test
sti
push
mov
or
lahf
into
add
xor
mov
jmp
pop
dec
dec
add
icebp
cmp
sub
faddl
ds
lods
inc
in
loopne
bound
pushf
add
jecxz
pop
lea
sbb
test
fldl
sub
aam
xor
into
dec
sbb
and
int
sahf
xorl
jl
lods
and
dec
mov
aam
mov
popa
push
hlt
mov
sub
push
xchg
testb
add
insb
mov
negl
sub
fcomps
cmpsb
sbb
popf
jmp
adc
add
mov
int3
pusha
cld
nop
adc
das
cmp
pop
in
add
jmp
xorb
movsb
dec
fwait
inc
adc
sub
out
sbb
jecxz
icebp
pop
pop
sub
add
inc
clc
dec
mov
xchg
xor
add
push
mov
ret
mov
add
pop
andb
add
lcall
sub
aam
orb
cltd
cwtl
cmp
out
das
sbb
add
jbe
lds
add
stc
jmp
orb
mov
scas
cs
add
ja
push
adc
aas
pop
inc
add
xchg
cmpsl
pop
les
daa
into
sbbb
fldl
int
movsl
das
pop
lret
push
arpl
jbe
filds
rcrl
add
out
orb
dec
ret
hlt
mov
add
sbb
repz
loopne
lock
gs
lods
add
data16
xchg
ljmp
adc
add
pop
pop
pusha
aam
adc
add
or
nop
roll
cwtl
pop
cmp
add
outsl
cltd
push
inc
xchg
pmuludq
nop
enter
call
nop
inc
inc
or
add
cs
clc
xchg
flds
add
daa
sub
xchg
jecxz
and
mov
push
cmp
add
add
sbb
push
and
jmp
scas
sbb
or
stc
pusha
lods
jp
cmp
popf
pop
adc
pop
mov
xor
int3
mov
test
add
loop
in
push
daa
inc
out
scas
cwtl
pmulhw
add
inc
pop
mov
aas
fstpl
fcoml
out
and
in
mov
shlb
mov
cltd
push
pop
jl
push
xchg
cld
sbb
cmp
lods
push
or
mov
push
cmp
jecxz
loopne
dec
and
pop
jno
push
push
inc
sbbl
cmp
xchg
dec
scas
aas
bound
hlt
pusha
sbb
mov
sbb
pop
clc
add
sbb
sbb
mov
sub
stc
mov
jnp
push
push
cli
test
add
inc
adc
jno
mov
stos
mov
add
xchg
add
push
jns
add
cwtl
fdivrl
lahf
mov
bnd
into
jmp
fdivs
js
imul
push
rorl
shlb
pop
scas
insb
sbbb
adc
jge
add
imul
add
sbb
ror
mov
jo
jl
cmp
popf
pop
cmp
int
pop
loope
loopne
cld
cmp
mov
popa
add
dec
scas
inc
cs
fsubs
rcrl
inc
inc
nop
out
dec
outsl
push
movsl
inc
sbb
mov
add
fnsave
and
adc
xchg
test
cmp
mov
std
das
testl
xchg
add
roll
gs
ss
fs
cmp
ret
iret
inc
stos
mov
push
inc
xchg
and
int3
lods
adc
push
or
iret
in
popf
jns
stc
xor
aas
ljmp
xchg
add
jb
and
push
dec
test
add
repz
or
test
sti
xchg
or
lods
insl
stos
pop
loope
ret
outsl
rclb
dec
push
cmp
movsl
cltd
mov
pop
shll
lock
mov
or
pop
xor
or
mov
mov
push
sub
leave
sub
mov
rclb
sbb
loop
out
scas
dec
pop
and
and
mov
scas
add
negb
cmp
add
cmp
xor
dec
les
pop
adc
lret
addl
sub
cmp
int3
push
in
xchg
xchg
mov
aam
hlt
sbbb
js
push
sarl
fsubs
lahf
shlb
movsb
push
dec
mov
push
cmc
sub
out
insb
push
mov
sbb
out
cmc
pop
pop
sbbb
rclb
cli
out
ss
fsubp
jns
out
adc
cmc
movsb
add
test
sub
adc
inc
xchg
adc
mov
pop
sbb
sub
clc
int3
sub
imul
jb
add
idivb
pop
jae
and
lea
arpl
fyl2x
out
andl
loope
adc
aad
outsl
mov
aaa
add
divps
in
insb
rcll
add
inc
ljmp
dec
sub
jl
pusha
or
pop
xchg
cmp
cltd
mov
in
jo
dec
mov
push
movsl
xchg
inc
mov
push
jnp
loop
xor
add
pop
dec
xor
lods
adc
jae
std
inc
mov
fnstsw
add
mov
nop
adc
scas
shl
cld
insl
add
sub
mov
mov
loope
sub
push
mov
in
sub
shrb
jno
add
cmp
mov
push
mov
jo
outsb
std
pop
add
lret
mov
test
cmp
into
sbb
adc
xor
addb
stos
mov
mov
jnp
shl
mov
jge
aaa
sarb
fidivrl
jecxz
push
adc
cmp
dec
es
push
mov
test
push
xor
repz
fsubp
pusha
mov
decb
ss
je
add
mov
out
popf
mov
push
mov
sbb
js
inc
mov
data16
test
mov
jae
add
shlb
add
into
push
add
sbb
test
push
add
push
cli
movsl
dec
and
jo
pop
xchg
ja
mov
test
das
sbb
dec
jns
fdivrs
add
inc
mov
pushf
cmpsb
insb
imul
adc
or
mov
fisubs
push
or
sahf
fcoms
call
push
add
cli
sub
sbb
adc
mov
ljmp
fcompl
add
push
and
pop
int
incb
xchg
xor
lods
inc
movsb
nop
push
inc
or
mov
push
dec
mov
ds
das
push
iret
lret
cmp
loopne
mov
jne
mov
mov
mov
out
add
gs
test
xchg
add
cmp
out
jmp
jb
push
insb
sbb
pop
cmpsb
es
push
js
xchg
repnz
stos
cwtl
xchg
into
add
out
mov
push
or
pop
xor
clc
xchg
mov
cmp
bound
cvttps2pi
mov
and
jns
mov
adc
call
ljmp
add
inc
mov
push
out
push
rcll
mov
cmpsl
rcrb
addr16
pop
sahf
lds
pop
add
lcall
mov
cmp
mov
ret
push
inc
loope
push
in
add
pushf
xor
mov
add
pop
mov
loopne
add
shrb
jp
sarb
aas
cmp
sub
addr16
push
fsts
add
insl
adc
inc
add
sub
iret
jo
pop
add
mov
decl
lods
leave
sbb
jp
add
ror
mov
or
and
repz
sbb
and
faddl
ds
pop
fs
clc
ret
push
push
js
js
sbb
mov
add
adc
into
roll
hlt
incb
sub
add
xor
jmp
arpl
and
mov
cmp
xor
add
adc
aas
dec
sti
addr16
sub
xor
test
ljmp
enter
jo
xor
pop
jae
cmc
jmp
movb
scas
mov
dec
push
jmp
les
sbb
ret
mov
pop
inc
roll
jecxz
adc
add
ljmp
mov
cmp
inc
js
sub
in
sti
loopne
jmp
dec
mov
adc
cmc
movsl
dec
addl
in
lds
pop
push
sbb
call
pop
mov
inc
pop
add
add
int3
sti
add
dec
les
add
inc
ret
xor
jl
mov
add
push
clc
fildll
stos
sbb
leave
nop
xchg
dec
scas
hlt
or
mov
orb
mov
mov
or
mov
psubd
cmc
inc
icebp
js
repnz
jnp
sub
loopne
negb
add
cwtl
xchg
pushf
push
hlt
cmp
les
mov
push
jnp
add
sahf
fldl
mov
push
sbbb
inc
rcrb
out
ds
push
cmp
cwtl
scas
or
inc
outsl
dec
xor
dec
add
stos
stos
movb
jbe
xor
or
push
hlt
xor
add
jg
pop
inc
sbb
ret
loop
adc
mov
cmpb
movsb
xchg
lahf
jnp
pop
std
sbb
adc
xor
adc
testb
push
or
jge
adc
mov
add
movsl
inc
and
adc
out
inc
mov
mov
xor
and
stos
je
in
sub
aam
sub
xchg
add
pop
repz
mov
pop
orb
push
fisttpl
push
loopne
sub
bound
push
lcall
rcl
cmc
or
push
mov
sti
fisubs
sub
add
adc
fs
insb
shlb
or
xlat
xor
mov
add
lahf
popf
cmpsl
sbb
adc
jecxz
push
mov
add
daa
cmp
sti
sbb
xor
into
mov
test
insl
jns
add
inc
mov
xchg
add
in
out
aad
es
arpl
cmpsb
xchg
lods
mov
gs
or
sbb
pop
sbb
call
nop
jecxz
je
dec
add
mov
popa
dec
imul
adc
dec
add
sub
add
rcrl
out
aas
fcomps
mov
cld
clc
inc
jns
ljmp
sbb
lock
pop
pop
ljmp
mov
jp
cmp
ret
subl
int
rol
addl
push
sbb
sub
mov
insb
ds
mov
dec
lods
stos
cmpsl
loop
nop
and
xchg
mov
mov
repz
mov
sahf
jg
add
push
jne
add
mov
loop
std
orb
cmpsl
jle
incl
mov
and
pop
sarl
add
mov
pop
aam
fildl
les
imul
and
mov
sbb
add
je
les
dec
mov
add
fildll
mov
or
inc
dec
leave
pop
mov
ja
test
cmp
les
dec
sbb
push
sahf
shl
or
jno
test
fwait
cmp
pop
pop
pop
add
cmpsl
cwtl
add
and
lods
pushf
mov
adcb
ja
inc
out
inc
les
jno
je
jno
add
popf
lret
shll
inc
inc
je
adc
add
xor
cwtl
scas
movsb
sub
add
xchg
cmp
pusha
dec
sbb
add
hlt
lahf
pushf
xchg
imulb
push
pop
stc
push
adc
mov
jnp
push
outsl
les
dec
in
cmp
iret
push
lds
mov
mov
addb
xchg
or
or
xchg
add
and
int3
pusha
daa
xor
dec
addr16
stos
inc
sub
scas
popf
out
int3
jno
lea
or
xchg
cmp
rolb
imul
lret
jle
add
or
iret
sbb
sbb
sub
pop
lock
push
mov
lar
push
mov
rcl
pop
mov
mov
xor
sbb
push
loop
add
mov
mov
daa
pop
jge
push
pop
negb
xor
pop
fidivrl
stos
mov
loopne
add
or
ss
das
movsb
pusha
jb
mov
sbb
movntq
inc
dec
inc
pusha
cmp
test
inc
and
loope
movsb
xor
enter
fmull
cs
dec
ffree
in
mov
sarl
mov
mov
add
scas
nop
mov
xchg
and
dec
pop
jge
das
fists
mov
repnz
jbe
loope
cld
inc
aaa
add
andl
test
add
pop
sub
cwtl
sbb
add
mov
xchg
test
push
add
jnp
mov
bt
sbb
out
mov
dec
add
inc
and
and
and
and
nop
jns
mov
mov
sub
fidivs
add
popa
stc
jmp
lret
into
cmp
int3
jbe
or
out
xchg
adc
pop
call
and
bound
scas
add
mov
cwtl
xchg
cmpl
jbe
add
and
add
xor
pop
aad
incl
rorb
pop
aam
push
jmp
in
movb
adc
pop
and
add
sub
jmp
add
int
jns
adc
lret
add
loopne
pop
dec
insb
imul
cmp
push
pop
and
sarl
or
cwtl
and
daa
push
cs
sbb
pop
out
mov
arpl
stc
dec
pop
inc
push
rol
add
xchg
cld
in
cli
pushaw
mov
and
pushf
add
jle
cs
sub
pop
cmc
push
xor
cmpsl
add
divb
aaa
rcl
xchg
add
js
add
pop
xchg
sub
mov
and
mov
push
fidivrs
add
sbb
add
or
fdivs
ljmp
in
xlat
cmp
out
inc
xchg
sbb
add
fdivp
stos
mov
add
bound
sbb
push
sarl
in
and
les
push
pop
adc
adc
cmp
xor
decb
pusha
sti
cwtl
mov
add
sbb
test
pop
sub
and
aas
lret
cmp
ss
sbb
popf
popa
into
jg
cli
jo
sub
cltd
mov
sbb
mov
jb
and
push
push
mov
mov
orl
jae
add
sub
fildl
lock
jmp
call
das
loopew
hlt
adc
enter
rcrb
xchg
loop
add
xchg
mov
mov
mov
ret
jmp
mov
movsb
push
xor
addb
jae
xor
sub
xchg
ds
add
inc
lea
ss
loopne
imul
cmp
lcall
insb
testb
in
jb
cltd
enter
popa
pop
and
ror
jl
xchg
into
dec
data16
fdivr
or
ret
xor
jp
xchg
and
loop
roll
mov
add
orl
pusha
imul
sbb
mov
and
hlt
jnp
lea
cmp
inc
jo
inc
mov
fbld
std
pop
inc
sbb
push
mov
add
les
xchg
xor
jl
jle
adc
test
cld
sub
sbb
addb
xor
cmp
add
into
lea
pop
mov
jp
inc
xor
hlt
cmp
jl
call
outsb
mov
push
arpl
add
stc
in
adc
add
sub
dec
aaa
xorb
rclb
shl
les
sub
and
aam
jb
add
dec
jno
int3
jne
adc
push
inc
cli
pop
and
add
jl
sub
into
outsb
mov
add
pop
mov
test
or
dec
add
push
dec
or
into
and
stc
sub
cli
outsl
add
shl
das
aam
mov
xor
push
pushf
add
cld
loope
test
add
into
inc
cltd
mov
cmp
lcall
pusha
mov
add
enter
xchg
in
inc
and
pop
sbb
push
fcompl
out
fs
iret
sbb
ljmp
inc
or
push
pop
push
and
dec
rcrb
add
inc
scas
xor
cs
xchg
and
inc
add
push
lods
inc
jl
add
inc
adc
roll
incl
sub
test
add
shlb
pop
dec
add
iret
mov
cmp
out
rolb
ljmp
inc
mov
aad
in
mov
add
adc
xchg
and
arpl
and
cmp
xor
sbb
jno
ficoms
adc
inc
and
pop
pop
daa
push
dec
scas
lods
add
cltd
enter
aas
add
mov
test
inc
cmp
rcrb
clc
cmp
mov
add
lods
xor
xor
push
adc
or
ds
push
mov
xchg
int3
das
dec
nop
inc
lret
and
mov
push
js
cmp
sub
push
addr16
xor
add
inc
fildl
cli
repnz
push
mov
xchg
stos
sbb
pop
rcrb
negb
mov
repz
lods
mov
mov
mov
dec
push
jnp
loop
repz
negb
push
cmpsb
vmwrite
test
xor
daa
adc
jle
and
add
popf
hlt
loope
loopne
out
add
push
clc
dec
aas
mov
mov
jae
pop
ret
add
inc
in
imul
push
add
sarb
xchg
inc
movsb
push
jle
sbb
idivl
inc
in
inc
iret
sbbl
jp
or
popf
or
lahf
inc
mov
inc
mov
mov
sub
scas
and
js
push
repz
adc
or
jns
or
test
lock
mov
scas
inc
popf
and
inc
je
pushf
mov
push
loope
fadds
stos
cmpsb
and
lods
inc
sbb
jle
loopne
lds
push
dec
push
jmp
xchg
pop
nop
and
and
push
sbb
pusha
sbb
pop
test
pop
std
ret
lret
and
pop
push
fcoml
les
mov
cltd
and
mov
mov
scas
pushf
inc
sub
inc
nop
mov
push
iret
inc
mov
lea
and
inc
fsubrl
or
in
arpl
roll
rdpmc
or
jle
aam
loopne
daa
sbb
ds
pop
mov
adc
cld
lock
adc
nop
or
lret
movsl
or
sbb
mov
cmp
add
cs
add
loop
dec
jbe
clc
mov
mov
cmpsb
aas
push
and
jb
add
sbb
stos
jl
add
iret
jp
sbb
out
es
pushf
xor
pop
subb
test
pusha
pop
lock
xor
and
andl
test
xorl
stos
pop
loopne
in
fistl
lods
icebp
add
inc
add
dec
dec
cwtl
cmp
popf
mov
mov
add
into
lds
je
lret
add
jl
xlat
mov
add
sbb
add
adc
add
xchg
add
and
je
pop
sub
lock
mov
jb
add
in
push
inc
or
sub
in
data16
ds
mov
add
xchg
dec
jns
adc
test
dec
mov
shrb
mov
add
ret
push
mov
add
sub
loopne
xorl
insb
cmp
fisttps
sub
andb
or
cmp
in
sarb
or
jge
cmpsb
jb
pop
divl
shrb
fstl
jnp
lret
dec
or
cltd
mov
ljmp
adc
pop
data16
ljmp
jns
mov
mov
add
adc
aam
mov
pop
add
es
mov
mov
cli
iret
jl
movsl
insb
rcrl
add
pusha
lds
bnd
fwait
mov
addb
adc
jae
lret
and
out
lock
add
and
repnz
jnp
cltd
or
pop
pop
mulb
push
addb
inc
sbb
sahf
xchg
mov
push
add
andb
add
fisttpl
hlt
cs
loopne
sti
pop
push
xchg
lret
adc
pop
movb
jge
fisubs
sarb
stos
and
test
or
fsubs
leave
scas
add
es
std
and
add
add
xchg
lock
adc
sbb
add
xchg
push
imul
je
mov
es
dec
loop
clc
ffree
call
ljmp
pop
stos
fdiv
das
hlt
mov
inc
out
rcrb
jl
jb
add
jmp
inc
sub
rorb
jae
push
sarl
or
clc
fadd
xchg
cli
add
pop
les
xchg
xchg
jbe
sbb
sbb
in
mov
lock
and
add
aas
call
fcoms
mov
adc
lcall
add
mov
fcomi
stc
inc
rorb
mov
fiaddl
mov
mov
dec
push
add
repnz
lret
sbbb
hlt
andl
xchg
mov
mov
fcom
mov
jge
xor
push
lret
aas
ret
push
cmpsl
pop
push
xchg
faddp
movsb
enter
push
enter
add
test
sti
push
push
in
flds
shrb
repnz
add
rcl
pop
lds
nop
push
add
adcb
lock
rolb
pushf
inc
jl
push
sarl
sub
pop
push
scas
jl
movl
insb
ljmp
mov
dec
insl
push
cmpsb
mov
imul
jge
out
or
lds
mov
cltd
bound
movups
inc
aas
shrb
dec
sbb
jge
cmp
data16
add
cmp
jno
bound
push
ret
add
rorb
xchg
shlb
insl
leave
loopne
or
je
lret
mov
test
or
and
add
xchg
into
fs
pop
hlt
add
mov
insb
cld
xor
cmp
pushf
push
sahf
add
dec
inc
subl
sbb
and
cmp
cmpl
cld
outsb
aam
pop
dec
mov
jle
mov
add
popa
cmp
push
call
inc
shrb
in
lcall
pop
push
int
and
jle
push
and
js
mov
add
adc
pop
mov
or
int
mov
es
add
sbbl
jns
cmp
add
mov
loop
push
ficoml
inc
scas
out
or
dec
lods
roll
aas
add
pop
out
and
xchg
add
inc
adc
int3
cmp
inc
add
inc
inc
push
inc
shl
test
pop
sub
jp
lahf
mov
rcrb
add
mov
xchg
test
icebp
cltd
sub
ja
lods
das
mov
out
subb
mov
in
jg
stos
add
bound
inc
or
mov
push
movl
outsb
fwait
ss
jp
push
sbb
clc
inc
or
and
sub
and
add
mov
mov
in
test
les
lds
and
jmp
imul
push
add
xor
pop
xlat
ficompl
or
adc
sbb
sub
push
enter
orb
out
cmp
fildl
popa
jns
push
or
dec
repnz
push
mov
xchg
sti
lock
add
shll
lcall
sbb
testl
test
loope
cmp
jnp
add
sub
int
jnp
arpl
or
xchg
cmp
or
je
jo
pop
xchg
pushf
adc
decb
mov
pop
and
sar
cmp
ret
add
fsub
ret
inc
lds
fildl
xchg
push
call
in
lahf
iret
imul
stos
sbb
xchg
push
subb
popf
cmpb
mov
pop
mov
lock
xor
mov
inc
leave
shlb
cmp
mov
dec
add
notb
mov
cmp
inc
adc
pop
lds
popl
addr16
add
mov
or
fld
add
pop
nop
add
xchg
mov
aaa
add
jg
xlat
add
pop
clc
push
sti
shrb
stos
negb
repz
iret
xchg
outsb
mov
clc
push
or
push
add
jge
dec
pop
inc
insb
add
outsb
push
jbe
push
and
add
adc
into
rorb
gs
mov
fcomp
stos
inc
push
push
popf
sets
mov
loopne
xlat
lret
fisttps
movsb
sub
add
addl
int
repnz
inc
out
out
add
add
loope
xchg
add
mov
out
movsl
mov
mov
cs
adc
jns
loop
mov
sti
pop
mov
add
jecxz
mov
gs
push
jno
cld
lods
pop
mov
lds
sbb
pop
mov
mov
sbb
shll
mov
mov
lret
add
es
sbb
ljmp
adc
or
stos
adc
xchg
fldl
or
mov
adc
adc
fistpll
shrb
xchg
outsl
cmpsl
mov
mov
dec
pop
inc
push
inc
or
add
dec
shl
mov
ret
and
and
fsubl
jo
fs
icebp
addr16
lret
push
je
pop
add
mov
loop
pop
fcompl
ret
jne
mov
mov
add
adc
push
cmovb
inc
xchg
cmp
sbb
dec
mov
or
xor
cmc
jne
in
pop
jge
rcll
push
fwait
add
cmp
lds
ss
lahf
les
nop
adc
test
sbb
add
mov
dec
push
movsb
pushf
int
jb
add
in
inc
lret
sub
dec
cmpsl
add
jge
stos
add
push
pop
jp
sbb
add
pusha
sub
pop
cmp
add
mov
cmp
sub
xor
add
sahf
mov
das
add
mov
aaa
sub
dec
icebp
pop
adc
les
xchg
cld
mov
add
lds
sahf
shll
scas
ret
hlt
roll
lods
pop
push
aam
xchg
subb
insb
call
out
test
add
fistpll
shr
pop
and
or
mov
mov
xor
adc
inc
les
mov
jbe
mov
and
fs
test
mov
loopne
mov
jge
arpl
scas
cmp
fs
mov
add
mov
jbe
mov
inc
icebp
lods
pop
leave
cmp
lcall
add
das
loopne
pop
jno
inc
dec
rcll
cmp
add
xchg
and
cmpsl
jns
nop
pushf
add
test
cs
mov
push
test
jp
ret
adc
insl
pop
mov
push
and
cltd
js
or
xor
and
pop
movsb
cmp
adc
cmp
andl
icebp
sub
add
adc
sub
addb
pusha
jne
outsl
jo
test
jbe
popf
sarb
add
push
call
add
loop
pop
add
inc
rclb
add
mov
add
inc
mov
jp
adc
dec
and
jg
inc
rcrw
sahf
pop
adc
addb
xor
and
adc
push
lret
jg
sarb
xchg
cld
inc
sub
loop
push
add
xlat
int
cmpsl
out
push
sbb
sub
sub
arpl
cmc
add
test
inc
jno
mov
mov
push
cmpsb
dec
test
int3
cld
mov
lock
out
or
mov
pop
test
into
jg
daa
and
repnz
push
push
dec
sub
outsl
movsb
adc
and
mov
pop
loop
xor
pop
cwtl
mov
pushf
fs
mov
test
lea
sahf
adc
add
push
mov
jl
repnz
iret
fwait
mov
addr16
adc
dec
mov
clc
call
pop
add
jo
mov
xchg
iret
add
push
xor
mov
add
pop
nop
push
jmp
xor
repz
dec
push
add
inc
mov
outsl
cltd
pop
loop
add
ret
lea
call
data16
add
jl
mov
call
cwtl
xchg
add
push
push
in
cmp
std
pop
fisubrs
insl
scas
inc
dec
push
testb
shl
pushf
add
lods
pop
popa
cwtl
in
fnop
add
lret
sahf
roll
push
in
pusha
mov
pop
call
mov
xchg
movsl
in
jns
pop
sub
dec
faddl
mov
jbe
out
add
fs
jl
add
repnz
fcmovbe
clc
cltd
add
mov
sbb
pushf
lea
test
nop
mov
scas
xor
inc
pop
sub
sub
inc
adc
insl
and
out
mov
xchg
pop
mov
mov
aad
dec
icebp
xchg
lret
jbe
js
or
cmpsl
cmp
mov
lods
cmpsl
jbe
ficoml
sar
idiv
or
and
scas
sbb
pop
lret
rorl
aam
mov
pop
adc
sti
test
add
sub
insb
mov
push
repnz
bound
push
addb
add
mov
pusha
notb
repnz
sbb
cmpsl
cltd
loope
xor
out
dec
inc
int3
enter
and
cwtl
mov
adc
outsb
dec
adc
add
movsb
inc
in
xchg
movaps
dec
or
or
scas
cmp
or
mov
push
int
fmul
inc
pusha
inc
sbb
test
add
pop
int3
stos
imul
xlat
adc
add
mov
sbb
mov
xchg
mov
sub
pop
and
sbb
daa
mov
pusha
test
push
add
add
xlat
stos
mov
nop
mov
stc
out
inc
mov
push
pop
sbb
sub
and
lds
addl
mov
add
sub
or
sub
mov
push
leave
loopne
dec
stos
imul
les
test
and
dec
xchg
and
jns
mov
rol
inc
shlb
mov
rclb
icebp
orb
push
ret
stos
mov
dec
xlat
enter
add
jns
into
sbb
andl
les
iret
push
pop
jg
mov
lods
inc
xor
inc
jle
mov
ficomps
fldt
sbb
data16
mov
cmp
xor
fimull
mov
sbb
add
xor
repz
cmp
in
pop
es
jo
add
adc
jno
inc
cltd
inc
add
in
cmc
mov
lock
arpl
and
add
pop
cmp
dec
dec
xor
sbb
sbb
out
pop
xor
add
mov
xchg
dec
pop
xlat
jg
or
fstps
fidivrl
lret
sbb
stos
into
addb
push
cmp
out
push
cmpsb
pushf
inc
cmp
decb
xchg
sub
in
aas
cmc
incl
ret
sbb
sbb
ljmp
inc
outsl
and
subps
and
sbb
or
lret
pop
add
iret
aaa
sti
in
pop
out
or
mov
clc
mov
rolb
movsl
lock
mov
jae
jnp
dec
jge
and
lret
mov
loop
add
cld
or
dec
popa
in
orb
popf
lods
shrl
outsb
fwait
add
adc
out
xchg
push
cmp
add
mov
lock
mov
push
ljmp
add
jb
jmp
mov
xchg
rorb
movsl
shlb
outsl
and
add
nop
xchg
test
jae
jmp
popa
mov
dec
pusha
mov
adc
adc
mov
sub
add
in
add
loope
and
mov
xor
cld
pop
or
pop
mov
jb
insl
mov
add
jnp
adc
dec
mov
or
add
mov
sbbb
dec
loopne
add
jae
stos
rorb
push
jno
imul
jne
sub
das
dec
adc
or
out
or
and
insb
fwait
incb
rcrb
cltd
push
ficompl
add
inc
sub
and
jnp
adc
rorb
and
add
loop
cmpsl
roll
push
repnz
aam
in
adc
mov
or
mov
or
cmpl
xor
inc
je
lods
rdtsc
insl
mov
aas
shll
inc
jp
add
jl
in
test
std
add
adc
cmp
test
and
aas
pop
or
sbb
xchg
aad
pop
pop
jbe
push
pop
add
je
push
add
cmpl
add
dec
pop
faddp
push
in
sti
fsubl
pusha
add
pop
pop
cmpsb
imul
les
dec
scas
subb
jmp
add
jno
bound
pop
adc
pop
pop
mov
aaa
lahf
pop
sbb
inc
mov
mov
dec
mov
pop
dec
cltd
xor
push
xchg
jo
cmp
xor
sbb
sub
sub
jbe
xchg
sub
in
lods
sbb
cmc
lahf
shrb
iret
pop
jnp
or
mov
dec
shl
pop
hlt
clc
xor
loope
in
xor
jb
add
xchg
mov
out
cmp
pop
mov
mov
dec
cmp
pop
test
aaa
jl
cmp
add
inc
shlb
inc
repnz
mov
fmull
jo
add
out
xchg
cmp
cli
adc
cld
jecxz
inc
jmp
aam
pop
fadds
and
aas
mov
sbb
shrb
int
cmpsl
push
add
fwait
popf
mov
push
adcb
clc
std
add
lock
jge
add
stc
in
loopne
rolb
xor
rolb
into
leave
mov
insb
adc
pop
dec
cld
add
mov
push
xchg
cli
or
idivb
pop
push
les
xchg
lds
icebp
call
aas
xor
cmc
fsubl
lock
fstps
cltd
pop
xor
popf
xor
sbb
adc
and
sbb
add
mov
call
adc
rorb
adc
cmpsb
filds
fcomp
jo
xchg
loop
test
cld
in
push
cs
mov
jg
ds
js
sub
jle
jmp
jns
icebp
or
int
push
aad
das
sub
out
sub
dec
sub
hlt
cld
sbb
adc
inc
mov
inc
and
add
outsb
icebp
fwait
add
jo
cltd
add
sub
sub
add
and
test
pusha
mov
iret
es
pushf
add
adc
call
pop
dec
pop
shlb
rorb
test
outsb
sub
and
or
mov
add
das
add
xor
js
inc
push
jmp
pop
add
push
jecxz
inc
fmuls
cltd
xchg
rolb
xchg
popf
ja
sub
loope
mov
inc
xchg
pop
xorl
out
inc
imul
mov
jp
mov
xchg
xchg
stos
stos
and
leave
pop
filds
jge
outsb
cmpsl
cmc
add
mov
shlb
aas
lods
push
mov
xchg
push
lret
mov
xchg
stos
pushf
nop
in
jl
inc
dec
push
loop
cmpsl
sub
nop
adc
add
fs
pop
hlt
inc
repnz
cmp
movsl
and
call
in
es
add
lds
pop
mov
ja
popf
int3
or
pushl
sub
aam
inc
add
cmp
fwait
inc
daa
add
dec
int
add
xchg
mov
or
lock
lock
xor
and
test
sbb
add
and
add
jbe
shll
mov
dec
xor
adc
or
pusha
stc
fnsave
fadds
enter
dec
jno
sub
dec
inc
cmpsb
xor
inc
sbb
cmc
test
pushf
lret
xlat
adc
testl
sub
ja
push
bound
dec
cli
and
and
and
das
adc
xor
cmp
xor
xchg
sub
push
aam
inc
inc
pop
and
inc
pop
shlb
pop
popf
les
add
jne
pop
or
enter
add
call
mov
pusha
xchg
pop
push
dec
xor
inc
add
xor
es
and
insb
xor
mov
aas
sub
aaa
je
add
add
inc
push
xor
and
xchg
cmp
adc
sbb
cmpsl
mov
stc
push
mov
pop
jo
cmp
xchg
mov
add
scas
mov
or
adc
push
push
orb
pop
dec
mov
or
push
push
loop
or
popf
xchg
push
loopne
nop
outsl
mov
test
into
or
lock
pop
mov
and
test
mov
dec
push
leave
add
mov
or
xorb
pandn
imul
data16
dec
pop
add
sbb
pushf
test
iret
sbb
fsubrs
adcb
dec
ror
rcrb
push
pop
ret
gs
sub
jne
loopne
dec
mov
sbb
or
fadd
roll
lcall
frstor
and
cmovno
daa
sbb
cs
andb
mov
mov
testl
dec
xchg
or
mov
add
je
pop
jne
sub
fs
imul
pop
jns
add
in
inc
push
add
imul
int3
jno
fwait
cltd
mov
push
or
arpl
shl
add
mov
ucomiss
dec
pop
cmpsl
test
lcall
adc
lea
iret
adc
sbb
nop
and
pop
xor
or
fidivl
pop
add
inc
mov
test
cmp
adc
jne
dec
movb
scas
out
pavgb
sub
outsb
data16
sbb
in
add
mov
lock
lret
vmovdqa
pop
xor
addb
popf
ljmp
ret
mov
xchg
cmp
jecxz
into
jge
rolb
sub
outsb
imul
mov
mov
mov
sbbb
repnz
cld
xchg
ret
pop
sbb
pusha
xor
push
aad
ds
aaa
frstor
sub
fadd
iret
test
jl
pop
ss
orb
add
cmp
push
push
add
js
pusha
sbb
or
and
jecxz
push
leave
lea
push
add
add
call
leave
outsl
cmp
sub
in
mov
mov
jns
test
pop
faddp
fcompl
add
das
xor
add
subb
hlt
mov
fnstenv
add
jp
add
xlat
mov
push
mov
pop
sub
popa
push
add
xor
mov
jb
xlat
sbb
fwait
out
add
ljmp
and
sub
int
xchg
pusha
fsubs
pop
jno
jmp
mov
or
xchg
jnp
sub
js
add
arpl
test
enter
or
inc
mov
or
mov
mov
outsl
add
pop
adcb
add
test
xchg
js
mov
div
cli
pusha
mov
fdivl
xchg
and
jl
mov
xor
push
jo
arpl
push
pop
and
dec
sarl
push
inc
adc
jecxz
adc
lods
loopne
mov
sub
add
xor
popf
bound
lar
int
jl
hlt
loope
cltd
nop
mov
cmp
mov
push
imull
cmp
mov
lcall
add
push
push
adc
les
dec
mov
pusha
and
adc
mov
jmp
add
int
addl
push
lret
js
dec
xlat
lds
sbb
xor
int
pop
mov
jno
push
jae
dec
mov
out
push
lods
mov
jl
hlt
ja
cmp
shlb
aad
cmp
test
mov
jecxz
cmpl
add
xlat
jle
in
push
adc
add
movsl
mov
fcmovnbe
ss
jmp
mov
or
out
push
loopne
out
out
repnz
cmp
icebp
add
sti
add
sahf
adc
mov
ret
cmp
insl
xor
out
and
xor
nop
jo
and
iret
inc
in
jae
sub
sbb
lock
pop
pusha
or
mov
jecxz
aaa
sti
push
xchg
dec
jbe
add
push
push
fnstenv
enter
insb
test
inc
pop
fidivrl
icebp
loope
cmp
daa
add
mov
aas
bound
fisubl
add
pop
mov
es
and
les
and
xor
and
ret
sbb
lahf
sub
sbb
lahf
das
mov
cwtl
lods
add
call
gs
ljmp
jbe
loopne
cmp
ss
rolb
movsl
pop
adc
add
cld
push
lret
cmpsl
add
stos
loopne
pusha
pop
push
dec
xchg
mov
push
xor
jo
cmp
push
pop
icebp
popf
int
loopne
jae
aad
xchg
adc
adc
pop
enter
jb
mov
popa
cwtl
pop
push
cmp
int3
or
ret
or
jle
pop
out
leave
pushl
jne
add
pop
or
out
add
out
xchg
pop
sbb
jae
test
lret
filds
loope
fs
jmp
pop
lds
adc
data16
cltd
orb
out
rolb
inc
inc
dec
xchg
mov
jmp
dec
or
loopne
loope
or
out
or
sbb
xchg
mov
pusha
push
jle
testb
push
jg
adc
push
fnstcw
sub
or
lcall
add
in
sbbl
cmp
out
into
xchg
add
pop
mov
inc
mov
jb
and
mov
push
or
and
jmp
inc
xlat
push
in
inc
mov
push
add
cwtl
mov
adc
jmp
sbb
popf
jne
in
sbb
mov
add
sub
roll
or
insb
repz
push
sti
test
dec
pop
stc
add
mov
cld
mov
mov
ljmp
mov
add
push
insb
inc
mov
stc
push
push
out
pop
lock
and
push
aam
dec
add
pop
sbb
lock
dec
test
xor
push
loop
je
add
popa
add
mov
sbb
pusha
xchg
add
lods
das
sbb
jp
pop
lock
rcrb
iret
cmpsl
add
add
inc
inc
cmp
sbb
dec
mov
aaa
xchg
push
sub
pop
faddl
popa
pop
or
mov
addb
add
idiv
adc
scas
push
aas
mov
push
xchg
addl
push
addb
inc
insl
lods
mov
cmp
jp
sbbl
inc
mov
je
fwait
cli
and
negl
add
pushf
adc
push
lods
sbb
sbb
mov
int3
add
mov
or
add
arpl
mov
in
stos
repz
cli
xchg
sub
mov
call
add
add
sub
dec
movsb
jne
in
lret
pop
aad
add
xchg
jo
add
les
add
or
mov
xchg
add
ffreep
dec
shll
movsb
push
nop
cs
out
xor
push
sbb
add
in
push
pop
into
mov
cmpl
imul
sbb
paddw
cmp
loopne
imul
test
mov
xchg
dec
fiadds
hlt
or
dec
and
xchg
adc
xor
js
in
test
shl
mov
adc
fiaddl
xor
imul
inc
lret
fbld
inc
gs
cmpsb
jp
shrb
inc
filds
test
into
sub
xchg
les
or
push
cli
insl
mov
xchg
stc
mov
pop
inc
lahf
sub
xor
push
test
add
es
xchg
pop
jg
and
loop
add
in
xor
add
mov
in
add
or
ret
mov
mov
icebp
add
mov
add
and
cmp
and
mov
push
push
outsb
pop
popa
gs
psllq
data16
sti
cmpb
jo
pop
push
test
cs
pop
jae
sti
lods
cwtl
popf
test
add
adc
loop
les
push
cmp
mov
mov
xchg
lahf
call
jae
add
icebp
or
pop
mov
je
cmpsb
bt
fsubl
mov
cmp
xchg
int3
sub
xchg
movsb
cmpl
das
fs
add
mov
lea
std
xor
add
aaa
add
jno
sbb
fcmovnb
cmp
aam
and
in
cmp
sub
pop
add
shlb
in
add
inc
xor
push
daa
out
test
inc
ja
mov
or
jne
les
add
and
movsb
push
or
hlt
add
or
ljmp
add
cmp
inc
mov
mov
mov
call
sub
insb
mov
pop
hlt
add
dec
dec
fcomps
add
xor
cmp
and
pop
cld
fcmovb
mov
pop
lahf
mov
sahf
or
sub
jne
loopne
cmp
lock
push
stos
sub
shrb
addr16
ret
clc
lock
sub
cmpsb
mov
push
js
sbb
or
in
pop
imul
pop
shr
push
mov
int3
sub
xor
loope
or
adc
loopne
pop
inc
fcomps
pop
dec
lret
add
mov
call
into
pop
sub
inc
sbb
pop
pop
jmp
pop
inc
in
or
pop
and
push
inc
cld
rcrb
add
leave
sbb
jp
sbbb
mov
std
insl
inc
leave
add
cwtl
cltd
push
add
es
les
jns
fwait
adc
and
ds
js
scas
pusha
adc
fcompl
sbb
popf
add
or
fmull
ret
std
adc
add
xor
jp
pusha
loopne
add
out
pushf
xchg
adc
ja
mov
mov
shl
xor
push
push
mov
lcall
sub
movsl
cmpsb
addl
mov
ja
cmp
or
jo
outsl
cmpl
jle
add
adc
das
adcb
add
mov
jo
popf
mov
nop
psllw
jg
sar
jl
ss
fs
loop
std
sbb
xchg
sarl
jb
jne
add
test
xchg
sahf
call
scas
andl
fadds
aaa
cmpsl
scas
and
add
sbb
pop
inc
js
xchg
mov
or
pop
sar
dec
mov
adc
and
mov
jmp
jge
cmp
jo
scas
inc
lock
or
hlt
pop
mov
in
div
fcmovbe
scas
or
cmp
push
adc
sbb
shl
jo
push
repz
out
es
and
dec
push
movsl
imul
inc
pop
pop
in
aaa
andb
pop
ret
lahf
push
mov
mov
call
lea
cmp
cltd
add
jecxz
mov
test
mov
stos
push
and
into
popf
rorb
ljmp
cmp
add
mov
push
addl
pop
clc
mov
out
sub
or
adc
add
and
data16
ljmp
into
mov
sbb
cmpsb
xor
sub
inc
jbe
adc
in
and
aas
dec
rolb
xchg
adc
lret
pop
add
insl
jae
and
outsl
sbb
and
lret
rcrb
mov
rclb
and
and
les
sub
mov
xor
repz
mov
push
and
pop
add
out
cmp
mov
add
loop
das
push
xor
add
mov
pop
sbb
jo
push
add
sbb
mov
xchg
mov
pop
adc
mov
std
bound
call
dec
pop
mov
pop
adc
add
lods
sbbb
into
js
xorb
and
mov
and
insl
call
sbb
fstps
push
xchg
sbb
inc
add
mov
out
sarb
push
popa
adc
daa
clc
sub
sti
adc
pop
cmp
shl
nop
dec
call
xchg
repz
cmp
das
push
push
or
xor
and
adc
mov
mov
test
or
pop
fdivrs
movsb
in
mov
lea
lret
dec
sub
cmpsl
mov
or
mov
add
int
inc
cld
ret
pop
sub
imul
fwait
nop
pop
pop
add
and
adc
ret
xchg
mov
in
xor
orl
jecxz
shlb
filds
int
lock
and
pop
subl
addb
sahf
aad
jle
xchg
lahf
pusha
push
or
fnstsw
and
pop
add
lods
add
stc
jo
adc
inc
pop
subb
and
fildll
inc
test
outsb
add
sahf
cmpsl
in
mov
or
ljmp
inc
scas
sbbl
and
test
sbbb
nop
mov
xchg
cmpl
movb
adc
test
mov
imul
rorl
add
add
cmp
lock
push
int3
movsb
sbb
mov
or
mov
and
iret
aad
arpl
inc
movsl
lds
daa
out
sbb
inc
lret
arpl
inc
add
nop
ja
in
and
push
roll
sub
cs
aam
fldt
mov
mov
add
out
sarl
int
cs
adc
add
dec
dec
aad
and
mov
add
lods
or
add
lock
jmp
jnp
test
pop
imul
jne
push
inc
mov
lock
adc
bound
pop
mov
cmpsl
mov
loopw
or
mov
cli
lock
pop
aas
xor
and
add
pop
and
ljmp
inc
adc
and
rcr
cmp
fsubs
out
push
push
add
scas
cmp
js
scas
or
add
inc
sti
xchg
popf
push
add
rorl
mov
adc
add
sub
repz
jl
mov
adc
fiaddl
cmp
sbb
dec
andb
xchg
xchg
insl
jo
jg
and
fxch
add
jp
sub
jp
xchg
and
add
sub
or
rcrb
jbe
add
ds
and
or
lods
pop
add
jp
les
xchg
xchg
dec
ror
push
jge
or
das
mov
ret
pusha
jl
inc
or
clc
mov
int3
add
icebp
addr16
ret
sub
adc
push
mov
xor
loope
jp
inc
cmp
push
cmp
jae
adc
push
mov
mov
imul
ss
xor
nop
or
fcomps
inc
ds
lcall
stos
sti
xor
lods
mov
xor
xchg
mov
adc
sub
push
adc
lcall
add
loop
jnp
gs
xchg
das
enter
fdivrl
or
pushf
addr16
das
mov
icebp
cld
fimull
lods
dec
pushf
les
cld
sub
out
adc
inc
stos
sub
fsubrs
lds
adcb
nop
cwtl
les
xchg
mov
out
sbb
andl
mov
outsl
inc
mov
ret
ret
add
push
push
xchg
or
xchg
adc
mov
pop
push
add
mov
cli
lock
lahf
or
gs
mov
scas
mov
inc
mov
into
shll
mov
scas
mov
push
add
hlt
lods
rcll
add
ss
and
inc
in
sub
call
push
ds
push
aam
jl
fs
mov
aam
dec
out
push
in
lods
dec
adc
jmp
loop
mov
mov
bound
addl
pop
lcall
jmp
pop
or
and
nop
enter
add
rep
cmp
jb
adc
movsb
das
sbb
mov
inc
daa
dec
out
pusha
or
mov
arpl
push
mov
daa
fs
sub
movsb
mov
mov
xchg
daa
and
je
jb
je
mov
pop
xor
xchg
xchg
test
mov
or
ja
lock
jb
mov
ret
lret
mov
out
imul
lcall
jecxz
mov
add
adc
or
insb
sub
pop
leave
push
xchg
pusha
adc
dec
repnz
into
mov
fstl
pop
push
inc
es
pop
inc
fimuls
das
xchg
or
in
cwtl
lods
sub
dec
push
push
negl
lock
cwtl
call
jo
call
mull
pop
sub
inc
mov
push
sbb
xor
add
lds
ss
out
adc
lcall
inc
or
or
sarl
mov
test
es
fdivp
mov
and
push
loopne
or
pop
in
in
std
or
scas
cli
add
mov
xor
je
fisttpll
nop
cmp
xlat
or
xchg
pop
mov
mov
adc
fcoml
les
cmpsb
cwtl
xorb
xchg
dec
or
fisttpll
adc
ret
inc
das
xor
bound
repnz
push
pop
inc
cld
add
cli
repz
inc
xor
daa
rcrl
cmc
js
pop
sbb
or
mov
pop
xor
out
jbe
push
sub
xchg
imul
mov
dec
inc
add
fdiv
add
pop
jns
push
inc
adc
pusha
inc
fwait
popf
pop
movsb
mov
mov
add
add
mov
data16
add
xor
xchg
mov
or
les
mov
adc
push
xchg
add
xor
mov
rcll
je
test
xchg
inc
inc
orl
pop
xor
test
sub
or
cld
loop
pop
jae
adc
test
mov
stos
adc
xchg
orb
add
sub
repz
iret
jge
jne
pop
xchg
addb
push
jae
add
addr16
mov
adc
cmp
mov
xor
mov
xchg
cli
hlt
pop
dec
repz
cmp
data16
inc
and
mull
xor
test
ljmp
or
aas
iret
aad
leave
add
and
or
test
lock
mov
and
ret
dec
add
rclb
mov
jbe
sbb
arpl
lahf
test
pop
addr16
pop
or
mov
jbe
out
add
cmp
dec
int3
cmp
add
mov
xchg
mov
sub
mov
imul
push
cmp
xor
jb
lods
push
pop
adc
daa
sbb
add
mov
lret
cmpsb
xchg
jp
xchg
xlat
shll
xchg
add
jo
cmpsb
fwait
lea
add
mov
pushf
mov
loopne
or
add
and
insl
sahf
and
jne
mov
divb
aas
pop
insl
adc
dec
inc
add
adc
fwait
mov
movsl
jg
and
lods
lret
or
adc
jecxz
aam
cmp
das
or
fldenv
insl
cmpsb
test
pop
cmp
or
dec
in
js
add
stos
jae
lahf
mov
and
adc
lods
adc
icebp
or
dec
pop
out
addl
shr
sbb
or
add
js
enter
addb
test
shlb
sbb
movsl
out
out
sarb
or
orb
fiaddl
test
xor
push
js
add
outsb
jl
mov
out
decl
push
jp
or
mov
repz
lcall
rorl
add
test
mov
sbb
in
cld
push
adc
lcall
cs
mov
and
mov
sbb
sub
adcb
cmp
or
iret
das
or
sub
mov
adc
in
mov
leave
loop
pop
mov
push
dec
push
add
frstor
xchg
dec
inc
lahf
ret
xlat
add
mov
das
mov
mov
into
xor
int
adc
push
push
in
in
nop
add
and
nop
rcll
rcr
ffreep
dec
dec
cli
shr
fdiv
add
cmpsb
jo
add
push
add
cmp
jnp
adc
add
pushf
add
sub
pop
je
xchg
in
movsb
les
and
lcall
add
das
mov
bound
daa
sub
les
push
aas
jo
xor
jecxz
lret
xorl
stc
mov
or
xchg
pop
mov
cmp
popf
test
add
scas
repz
incb
add
jnp
jge
jnp
lods
jp
push
mov
mov
xor
subl
movsb
add
fildl
or
jno
jmp
sbbl
inc
adc
pop
icebp
lcall
adcb
imul
add
std
lcall
inc
dec
add
fisttpl
sbb
test
dec
push
imul
add
scas
out
cmpsb
pop
pop
inc
add
orb
lods
cmp
adc
je
aam
fldl
lret
int3
mov
add
bound
push
mov
enter
movsl
sbb
mov
icebp
cltd
rcr
das
inc
stos
add
cmp
rolb
scas
aam
cld
add
mov
adc
cmpsb
push
add
loope
into
sbb
xor
cltd
cwtl
cmp
add
testb
xlat
or
cmp
sti
add
lock
aad
xchg
int
inc
pop
cmpxchg
add
pop
movsb
jno
mov
test
addb
and
sub
inc
sarl
add
cltd
fisubrl
mov
mov
xor
jmp
sub
sbb
mov
add
ljmp
hlt
jo
stos
div
leave
inc
inc
cmp
push
in
or
sub
test
or
or
add
negb
cwtl
add
lds
mov
push
inc
hlt
hlt
fimuls
xchg
aam
pop
subb
ret
add
pop
mov
add
push
mov
movsb
mov
pop
lret
add
or
out
mov
ja
je
xor
sub
imul
lcall
add
jge
aaa
xchg
cmp
ret
test
push
adc
or
popf
subl
lods
mov
movsl
mov
and
jnp
in
imul
add
inc
pusha
and
xchg
adc
dec
mov
out
fidivs
pusha
aad
lds
outsl
add
out
and
mov
jle
cmp
pop
popa
call
rcr
out
aas
jl
ret
pop
popf
mov
dec
cli
xor
add
in
add
insl
add
lahf
imul
pop
inc
xor
rcrb
mov
mov
test
inc
cmp
movlps
sub
or
popf
sub
cmp
lret
in
sub
push
insl
pop
into
mov
adc
push
imul
pop
lahf
andb
nop
add
popf
cmp
aad
sub
dec
ja
add
int
xchg
add
push
fimull
shll
sti
push
mov
cwtl
je
xor
or
and
add
movsl
adc
pop
xor
loop
movb
pop
xor
fistpll
repz
clc
dec
and
test
outsb
xchg
add
fdivrl
mov
in
xchg
aad
aaa
cmp
jo
dec
stc
xor
pop
sbb
out
pop
inc
stos
lods
iret
lret
sarb
movsb
pop
adc
nop
add
xchg
mov
jp
pop
mov
add
loop
lahf
xor
inc
xchg
pop
rolb
cmpsl
push
add
scas
jp
lea
or
inc
cli
imul
leave
jno
shlb
push
gs
rorl
inc
add
add
lock
mov
pop
or
movsb
jecxz
enter
fmul
mov
add
adcb
into
dec
faddp
sbb
out
pop
mov
inc
cld
scas
add
or
outsl
loop
loopne
jecxz
bound
jmp
adc
xor
add
dec
mov
jne
verw
dec
and
mov
roll
dec
cmp
push
mov
inc
sbb
mov
jl
and
ss
scas
scas
add
lods
add
jb
mov
xchg
xor
out
in
xchg
cmp
incb
or
sub
ror
dec
pop
add
and
loopne
ja
ss
popa
dec
push
rolb
lret
lret
hlt
cmpsb
orl
daa
clc
dec
rolb
or
adcl
push
cmp
unpckhps
ret
xor
or
and
cmp
das
jnp
mov
nop
in
add
insb
push
dec
xchg
test
aam
pop
lcall
gs
mov
iret
jp
sbb
jae
mov
fcompl
sbb
dec
fisubs
mov
adc
rcl
add
hlt
add
jecxz
call
ss
dec
sti
hlt
adc
pop
cmpsl
inc
enter
data16
and
popa
enter
bound
jno
adc
shlb
shrb
mov
inc
dec
in
pop
daa
jbe
aas
les
xor
shll
dec
sub
and
arpl
or
test
sub
inc
inc
in
rclb
adc
xchg
sbb
inc
ljmp
add
xchg
xchg
arpl
out
add
aad
adc
loopne
call
outsl
ficompl
xchg
insb
adc
call
xor
addb
sub
sbb
cld
movsb
pushf
lods
sahf
jge
repz
loop
loopne
int3
mov
out
mov
in
out
adc
idiv
test
sbb
jne
adc
cltd
inc
cwtl
mov
add
add
sarb
mov
call
dec
mov
test
hlt
add
bound
or
add
adc
ret
dec
roll
sub
lahf
mov
add
fs
cltd
sbb
dec
in
hlt
pusha
inc
loopne
leave
shll
test
jbe
pusha
je
repnz
enter
push
jle
xorb
fnstenv
or
sub
xchg
insl
inc
jne
adc
mov
adc
aas
fidivrl
cmp
addps
xor
jl
jb
or
das
pop
fistl
mov
repz
cmp
daa
add
into
xchg
std
push
lds
dec
imul
popa
aas
push
idiv
shlb
mov
loope
adc
push
out
xor
repnz
out
loopne
sbb
mov
in
loopne
gs
stos
add
in
stc
adc
cmp
sbb
cwtl
rcl
je
add
jb
adc
pop
lcall
pusha
sub
popf
mov
xor
out
mov
cmp
hlt
dec
jo
add
imull
mov
loopne
scas
inc
or
mov
add
iret
lock
adc
clc
fiaddl
fsts
repz
add
pop
ss
push
roll
xchg
ret
dec
jp
lret
add
testb
negl
ja
fimuls
and
cwtl
ljmp
add
int
sti
dec
sub
stos
add
push
xor
add
loop
call
add
jbe
pop
push
lret
mov
ja
sbb
in
and
sbb
sub
lds
test
iret
mov
add
mov
or
pop
in
and
les
push
ja
lcall
js
sub
movsb
cld
test
into
jns
std
aam
test
add
push
mov
xor
iret
and
mov
pop
inc
sbb
fldl
stc
jo
or
dec
scas
imul
xor
sbb
push
jl
cmp
addb
mov
pusha
in
and
leave
dec
add
pop
prefetchwt1
push
mov
push
test
add
add
enter
jne
pop
cmp
aad
repz
add
dec
inc
inc
dec
cmp
lea
inc
test
push
add
sbb
in
int
cmp
jle
push
aaa
ss
outsl
dec
jg
pushf
and
xor
sbb
dec
add
inc
xor
jo
rclb
sub
pop
shrb
daa
subl
xorb
insl
js
and
mov
jp
inc
rcrb
mov
or
orb
int
mov
aas
jo
cmp
adcb
sub
and
cld
push
stc
jmp
pop
fadds
push
cmpsb
jno
or
cld
stos
pop
sub
add
push
gs
lods
mov
and
pop
fwait
sbb
incl
fidivrs
add
xorb
test
cmp
push
xchg
xor
fisttpl
addr16
push
add
add
ja
cmc
in
pop
lods
and
push
jge
sub
inc
inc
test
test
fsubr
clc
scas
xor
add
rolb
pop
inc
xchg
pop
hlt
in
adc
pop
je
jecxz
rorl
xor
dec
mov
mov
incl
mov
loopne
inc
xor
icebp
in
push
add
popf
mov
add
sbb
inc
cli
popa
imul
subl
cmp
pop
cmp
push
jmp
ret
pushf
or
pop
cwtl
ret
fdiv
sub
mov
lock
add
inc
mov
popf
les
add
ss
mov
pop
int3
lock
push
cmp
outsl
inc
mov
sarl
ret
iret
out
mov
mov
outsb
cltd
stc
ret
add
mov
and
out
ficoml
jmp
add
mov
pop
xchg
and
pop
ja
xchg
aad
push
lahf
imul
cmp
pusha
mov
mov
add
sub
and
cwtl
fisttpll
fildll
xchg
mov
sahf
pop
mov
pop
cmp
push
dec
sbb
daa
insb
and
add
push
push
pop
adcb
mov
xchg
push
sbb
xchg
add
dec
pushf
iret
ds
jo
dec
test
sti
or
mov
pushf
sbb
add
mov
cmp
jmp
fists
es
cli
add
push
inc
mov
clc
incb
pop
les
rclb
pop
loopne
sbb
add
lahf
jae
sti
pop
mov
mov
sbb
adc
scas
sub
dec
mov
lret
mov
push
pop
xor
popa
push
in
pop
fwait
aas
inc
or
repz
sub
pop
out
jb
inc
add
mov
loopne
gs
pop
inc
repz
pusha
inc
scas
movsb
jle
add
mov
lret
or
pop
iret
loopne
mov
jne
add
jae
pop
mov
daa
xorl
fildl
dec
mov
scas
xlat
add
jne
or
insl
mov
add
lds
mov
add
jb
push
ss
iret
dec
xchg
xor
add
mov
in
and
xor
sbb
sub
pusha
dec
xchg
ss
jg
rorb
add
or
adc
inc
dec
mov
loopne
pop
loopne
in
mov
sub
test
fcom
stc
sub
lcall
stos
nop
or
jecxz
adc
add
push
test
cmp
sbb
ret
adc
push
mov
sub
mov
dec
stc
ds
notb
lret
cwtl
lahf
pop
mov
movsl
add
ds
rcrb
test
add
xor
add
sub
mov
shll
or
test
dec
out
or
add
bound
add
je
xor
or
sbb
xor
xchg
mov
jbe
cmp
cmpsb
pop
dec
dec
mov
lods
sahf
add
mov
arpl
movsb
in
lock
push
rorl
push
aaa
jo
cmp
sub
add
push
xchg
pusha
jmp
ja
and
jne
or
push
pop
lahf
mov
out
enter
jmp
cmpsb
jb
jg
add
aam
mov
add
cwtl
and
jb
jl
cmp
loopne
jmp
xchg
sbb
and
add
dec
imul
jl
add
aaa
cli
in
jmp
jns
add
dec
and
negb
mov
pop
cmc
aad
mov
sti
insl
inc
mov
add
adc
fs
mov
xor
and
movsl
add
xorb
hlt
adc
mov
stos
imul
sbb
pop
popf
sti
test
add
stos
rolb
fsubl
push
jno
idiv
sbb
pop
in
add
adc
mov
int3
dec
sub
lahf
push
insl
jo
sbb
ljmp
mov
add
fimull
fldl
fdivrl
in
push
jge
pop
in
xchg
cmp
addb
insb
jg
sub
mov
in
push
sbb
add
mov
xor
mov
mov
pop
jp
cmc
daa
push
cmp
rolb
mov
sub
aas
les
adc
add
add
push
into
add
cmpsl
add
enter
imul
sbb
push
sub
jg
or
or
add
fs
add
cmp
sub
hlt
scas
pop
add
and
mov
jb
mov
lcall
ds
addr16
popa
or
mov
adc
add
and
cmpsb
mov
or
push
ret
repz
jecxz
movsb
add
add
add
xchg
jbe
rcl
add
pop
in
jmp
add
adc
loopne
test
mov
cs
imul
mov
jp
fiadds
clc
adc
pop
into
shrb
mov
xchg
xchg
xchg
mov
xchg
sahf
movsb
add
xchg
mov
pop
cmp
sub
xor
push
push
add
and
or
sbb
mov
add
and
jae
lea
and
mov
push
mov
or
sbb
mov
aas
add
imul
push
std
data16
jne
pushf
add
mov
pusha
and
roll
call
lret
insb
icebp
push
lcall
lret
add
pop
push
add
push
sub
add
ret
test
jae
das
sub
ficompl
xor
dec
incl
add
mov
cmp
and
dec
and
cmp
lods
add
xor
xchg
cmp
add
xchg
into
sbb
or
pop
fstpt
clc
hlt
add
iret
leave
pop
add
sbb
xor
fs
and
jb
popl
and
es
adc
mov
add
rcr
add
mov
pushl
push
dec
rcl
loope
insb
adc
mov
inc
sarb
mov
add
out
mov
dec
in
leave
adcb
jge
xchg
pop
test
ja
pop
push
mov
mul
dec
data16
inc
inc
or
pop
test
shl
cmpsb
sbb
mov
adcb
or
stos
pusha
push
punpcklbw
leave
mov
inc
add
xor
scas
add
mov
and
mov
pop
push
pop
jecxz,pn
unpcklps
ljmp
sbbl
sub
lret
jns
sbb
adc
xor
and
xor
add
mov
subl
std
insb
mov
sub
les
push
je
fwait
xchg
pushf
add
push
xor
stos
into
cmpl
add
add
insb
or
xchg
add
aaa
sub
pop
movsb
mov
mov
dec
or
inc
jecxz
pop
pop
jge
lea
icebp
out
fadds
clc
sbb
xchg
push
cli
xor
push
xor
jmp
sub
daa
or
lds
mov
pop
sub
mov
add
fcomps
call
mov
push
add
fldl
pop
shl
mov
mov
xchg
out
add
fsubr
scas
mov
jo
aas
in
pop
cmp
xchg
sub
add
movsb
daa
inc
sbb
xor
lods
add
pop
adc
gs
and
add
xchg
test
lahf
vsqrtsd
xchg
into
scas
xor
repz
or
enter
mov
adc
adc
inc
push
loopne
cld
add
xor
inc
sub
adc
cmp
sahf
jnp
stos
int
cmp
push
xor
fsubrs
jmp
add
fcmovnu
mov
test
repz
dec
push
cmp
stos
iret
aam
test
mov
lret
dec
or
mov
lahf
fadd
pop
pop
sbb
xor
insb
mov
adc
lds
iret
xchg
shrl
hlt
pop
fidivs
cwtl
popa
add
das
pop
and
inc
push
jae
dec
lea
xchg
jmp
shll
mov
cmp
pop
ffreep
orl
outsl
lods
push
sub
add
dec
es
jle
cld
pop
sbb
add
les
add
xchg
test
mov
cmp
add
add
xchg
loop
and
pop
mov
in
inc
pop
add
enter
and
inc
add
dec
int3
or
aas
lods
pop
xchg
sbb
sahf
add
jl
mov
add
fistps
arpl
pop
pop
rcl
mov
pop
jmp
fsubl
add
cmp
clc
popf
pop
add
mov
pop
hlt
pop
dec
mov
cmp
andb
pop
add
sub
imul
nop
inc
dec
sbb
leave
int
xchg
in
mov
add
dec
clc
add
mov
cmp
mov
fistpl
sbb
je
ljmp
xchg
add
addr16
enter
jle
push
push
inc
leave
mov
xlat
cwtl
icebp
test
pusha
out
ret
xor
ljmp
adc
jmp
add
imul
push
je
and
inc
xor
adc
mov
add
add
aad
es
pop
subb
daa
add
repnz
flds
push
nop
in
or
lods
filds
add
scas
hlt
nop
fidivrl
int
jl
pop
jp
pop
mov
ficoms
repz
and
sub
add
out
adc
inc
aaa
add
mov
add
repnz
loope
push
add
icebp
and
sbbb
es
je
cmpsl
pop
push
push
sarl
pusha
nop
xchg
add
mov
inc
int3
pusha
pop
mov
bound
jns
mov
and
das
add
mov
xor
test
add
dec
aad
pop
in
pop
mov
sub
scas
icebp
mov
mov
test
call
and
int
add
imul
mov
inc
rcll
xchg
add
xchg
jne
lret
lock
pop
sbbl
cmp
call
add
adcl
and
fisubrl
jmp
loop
lock
mov
xchg
or
nop
rolb
hlt
mov
xchg
xlat
add
rcll
xchg
rolb
inc
rcl
es
xchg
mov
filds
divb
jo
add
incl
fisubs
clc
aaa
push
add
fimull
add
jle
and
xorb
or
dec
jmp
and
addr16
fstpt
sub
and
pop
sbb
pop
mov
cmp
loop
mov
inc
push
adc
pop
adc
add
loop
ret
pushf
xchg
add
pop
jge
imul
insl
or
ds
and
mov
or
fwait
mov
add
pop
es
gs
in
imul
mov
push
mov
in
jmp
push
and
dec
jg
or
js
mov
lds
rolb
mov
arpl
adc
dec
push
test
pop
push
pop
and
pop
pop
cwtl
or
je
jp
add
dec
stc
push
and
jnp
mov
clc
or
rolb
mov
dec
add
and
mov
test
outsb
mov
gs
loop
out
and
fwait
pop
add
cli
dec
pop
fs
add
jmp
inc
sbb
xchg
aas
clc
lds
cmc
mov
add
in
je
cmp
mov
xor
xchg
push
imulb
data16
add
sub
into
add
cmpsl
push
xchg
nop
adc
and
not
outsl
jno
comiss
add
adc
fsubs
jae
sbb
pop
mov
push
add
data16
dec
fistpl
xchg
pusha
mov
les
adc
jno
jg
add
xchg
sub
pop
pop
add
cmpsb
xor
rorl
rorb
aaa
pop
mov
mov
add
add
push
cmp
add
mov
push
add
shrb
add
xchg
js
push
add
imul
in
mov
sub
roll
and
sti
icebp
sbb
xchg
sbb
jle
cld
mov
testb
pop
mov
mov
jae
and
sbb
sbb
fwait
loop
pop
or
popa
test
pop
call
or
fidivrs
inc
cmp
inc
imul
add
fldpi
clc
jnp
imul
push
xchg
adc
call
xchg
clc
push
mov
cmp
insb
sbb
fdivr
loopne
es
inc
pushf
sbbb
inc
movsl
rorl
dec
sbb
xorb
call
ret
cmp
add
push
adc
popf
mov
add
cmp
js
pop
scas
pop
jb
mov
ja
mov
and
fs
push
jbe
add
lods
jmp
mov
dec
mov
imul
sbb
xor
adc
add
out
fdivp
inc
sar
add
inc
imul
xor
mov
mov
add
les
dec
lods
sbb
dec
sbb
adc
add
faddp
lret
decb
enter
push
add
fisubrs
mov
cmc
daa
jg
shrb
fbld
mull
adc
inc
pusha
sbb
and
jnp
fadd
add
mov
push
divb
sbb
ret
cmpsl
or
js
imul
aad
sbb
vmovddup
aas
ret
dec
add
cmp
sahf
adc
jmp
sub
push
iret
xlat
lods
test
ss
in
push
cmp
test
add
inc
js
adc
add
enter
add
mov
cltd
and
add
xor
sbb
inc
int3
inc
and
fincstp
movsb
mov
aaa
fwait
xchg
andb
jbe
sub
bnd
mov
or
pop
sbb
mov
add
add
dec
mov
ror
push
pop
adc
unpcklps
mov
les
nop
xor
cmp
cmc
mov
adc
es
add
fdivrl
fcmovu
cld
fs
adc
add
mov
in
flds
jnp
cwtl
sub
adc
mov
inc
test
out
lods
addl
iret
test
pushf
ds
add
shl
or
cmp
dec
cmp
xor
test
pop
inc
rclb
fcomip
nop
add
push
repnz
movsl
mov
mov
xchg
clc
lret
lds
negb
adc
ds
or
or
stos
loop
inc
lock
xor
jae
jo
add
outsl
fmul
js
adcb
mov
inc
fmuls
stc
xchg
pusha
and
and
mov
add
aas
jge
pop
scas
mov
clc
addb
dec
in
clc
add
mov
mov
in
out
rorb
js
add
push
addr16
mov
pop
jbe
int3
outsl
fisubrs
nop
and
jne
pop
sbb
push
add
sahf
aad
jg
xchg
mov
sbb
add
push
jmp
mov
add
mov
test
andb
and
cs
add
push
iret
pop
cmp
repz
mov
mov
mov
or
enter
clc
xchg
pop
adc
and
test
push
in
cmp
shll
lret
sbb
mov
jle
cmpsb
lahf
rcr
faddl
jmp
sbb
add
popa
out
jb
or
aam
and
in
inc
mov
lahf
imul
stos
addr16
add
add
push
mov
pop
jecxz
lods
pop
inc
arpl
popa
pop
addb
loope
or
add
lcall
adc
jbe
push
sbb
adc
add
pop
mov
mov
and
and
push
xor
in
sbb
cmp
mov
cmp
inc
push
inc
or
sub
addb
inc
pop
cmp
rcrb
xchg
sub
aad
call
lds
push
arpl
addps
xor
pop
gs
jl
or
jp
decl
movsb
sub
fistl
iret
mov
notb
push
scas
fdivs
add
shlb
ret
or
cmpsl
jo
push
sbb
or
cs
mov
xchg
clc
adc
or
mov
push
jl
testb
adc
outsb
aam
sti
arpl
dec
xchg
call
push
movsb
dec
add
arpl
inc
sti
push
rcr
mov
inc
aas
stc
pop
adcb
mov
adc
or
movsl
sub
xchg
pop
movb
sub
xchg
or
loop
aam
ror
xchg
push
add
je
mov
fstpt
push
bound
shlb
sbb
or
hlt
pop
icebp
out
pop
call
sbb
insb
fs
xchg
add
subl
or
xchg
sub
add
xor
addr16
add
or
insb
and
imul
fstl
cmpsb
or
push
cli
add
adc
jp
dec
std
loop
es
add
add
sbb
push
add
add
or
lret
jo
roll
stos
push
mov
sub
stc
adc
mov
in
loop
xor
adc
push
add
aam
sbb
inc
scas
mov
xchg
jge
adc
cwtl
xlat
fwait
add
xchg
inc
orb
loope
mov
ljmp
dec
inc
xor
into
jnp
add
mov
mov
or
add
pop
xrelease
dec
scas
cmpb
mov
cmp
xchg
push
mov
and
pop
imul
xchg
popfw
and
fdivrp
sbb
pcmpgtw
pop
or
das
mov
sub
sar
sub
fadds
xchg
sarl
imul
into
sub
add
mov
je
add
mov
dec
xor
imul
cmp
push
pop
dec
add
out
adc
mov
sti
inc
pop
pop
push
nop
jo
mov
adc
cmpsb
dec
arpl
push
sub
stos
mov
sbb
lret
and
sub
mov
rcr
add
out
loope
incb
in
test
aad
xor
addl
mov
subb
xchg
dec
dec
and
or
dec
xor
sbb
jp
sub
cwtl
addb
fisubl
and
sbb
lcall
sbbb
push
xchg
lods
popa
jmp
repz
push
aad
adcb
or
dec
sub
mov
fs
push
mov
push
xchg
aas
sbbb
js
mov
bound
and
sub
out
out
add
sbb
xor
sub
inc
and
pop
add
jne
pop
sahf
push
lods
pushf
popa
clc
jnp
push
or
incb
pop
push
shrb
andb
leave
dec
mull
movsb
inc
orb
xchg
jnp
pop
fadd
pop
sti
mov
jl
icebp
and
data16
fdiv
ljmp
pop
in
mov
pop
hlt
pop
lods
sahf
adc
leave
sarb
loopne
stos
inc
loopne
dec
jmp
insb
lahf
hlt
add
inc
add
pop
loop
cmp
fdivrs
flds
xorb
jmp
xchg
repz
dec
loopne
add
mov
call
mov
sbb
out
add
inc
call
popf
jge
mov
iret
loope
cmpsl
fisubrl
push
mov
push
mov
sub
add
and
lret
mov
xor
enter
inc
or
jl
mov
movsb
pop
imul
xchg
add
xor
js
inc
sbb
arpl
xchg
sbb
roll
inc
enter
push
adc
add
add
xchg
outsb
test
ljmp
and
insl
add
jne
mov
and
sub
pusha
jo
repnz
out
iret
sub
push
mov
adc
jmp
sbb
inc
int3
xchg
or
sub
fdivl
add
inc
daa
add
jl
nop
and
out
sub
fwait
add
xor
aam
jmp
ljmp
add
push
enter
or
sbbb
cmp
mov
push
cwtl
dec
add
ljmp
dec
xchg
loopne
sar
add
mov
dec
push
fs
inc
rol
inc
je
or
sub
subb
cmpsb
xchg
in
sti
cld
adc
fldl
icebp
push
lods
dec
daa
in
pop
add
test
int3
data16
push
cmc
mov
or
sub
sbb
daa
leave
push
addr16
cmpb
and
add
cwtl
adc
mov
jno
inc
fistpll
or
mov
jno
add
dec
fistps
add
jle
stos
int3
dec
les
sarl
or
rcrl
add
repnz
inc
pusha
inc
sub
add
cwtl
das
sub
xchg
mov
adc
mov
and
and
inc
lods
cmp
and
int
pop
push
jecxz
sarb
mov
sbb
xchg
mov
cli
add
imul
cmp
movsl
jb
pop
mov
push
adc
jp
push
push
mulb
loopne
dec
lock
sub
fcoms
aam
lods
mov
inc
jg
loope
and
pop
roll
jmp
popa
push
xchg
mov
js
dec
xchg
add
sub
out
data16
mov
add
mov
adc
cmp
inc
or
pop
pop
pushf
fdivrs
fincstp
add
andl
mov
adc
adc
cmp
and
es
ds
push
add
add
cmpsl
push
pushf
mov
test
gs
add
fists
aas
adc
push
iret
add
mov
mov
test
xchg
and
loopne
push
loop
insb
pop
add
and
add
pop
fdiv
pop
cmp
sbb
stos
xchg
sarb
or
jg
add
add
push
xor
adc
xchg
shll
pop
out
add
and
stc
xchg
add
popa
incl
adc
mov
loopne
sar
out
inc
add
outsb
stc
push
pop
cmp
ljmp
jmp
mov
loope
adc
and
jns
add
cmp
dec
sbb
or
bound
mov
and
mov
sub
mov
loop
cmp
and
ret
testl
dec
add
dec
push
dec
inc
sbb
xor
adc
fsubrs
xchg
jb
test
xor
push
je
int
or
mov
inc
add
inc
or
ret
in
xor
cld
xor
push
pop
add
into
push
add
cmp
rcrl
call
and
das
stos
dec
adc
cwtl
pop
or
sbb
dec
push
hlt
xor
aas
push
data16
xchg
pusha
sbb
sub
or
out
add
xor
lahf
fimull
mov
inc
or
scas
sbb
mov
inc
hlt
cld
add
iret
rol
dec
add
test
or
jns
push
add
lock
sbb
add
sbbb
jle
and
dec
rcll
mov
push
mov
loop
add
cmp
and
repz
pusha
sti
popf
roll
sub
fldenv
adc
andl
jo
clc
jg
jno
pusha
mov
sbb
pop
pop
lock
push
mov
add
mov
sub
nop
js
or
into
stc
mov
popa
jbe
inc
ror
push
les
xor
inc
push
xlat
sahf
std
cmp
push
addr16
test
fildl
push
or
movsl
xorl
cmp
das
sub
test
test
aam
inc
aad
notl
rclb
dec
lret
cltd
add
jmp
cmp
loopne
sti
stos
push
aad
sbb
mov
xchg
mov
adc
sar
add
cmp
jno
subb
jle
shlb
pop
or
adc
scas
mov
add
mulb
adc
xchg
fcoms
sub
nop
inc
adc
and
mov
leave
adc
add
mov
enter
and
mov
inc
ret
xchg
add
stc
lahf
xchg
and
push
xor
pop
mov
inc
inc
or
test
cmpsl
movswl
test
stos
and
in
pop
lea
dec
loope
mov
ss
jle
add
dec
adc
dec
add
xchg
dec
ret
les
adc
cmp
rolb
mov
ljmp
jno
fisubrs
fwait
inc
jbe
jecxz
sub
mov
mov
vmptrst
mov
mov
or
or
mov
sub
mov
testl
ret
inc
jbe
stos
repnz
mov
mov
ror
es
mul
add
adc
insb
or
out
add
mov
cmp
jl
adc
stos
clc
loopne
fildll
loope
sbb
add
fnstcw
and
orb
dec
sahf
add
clc
out
or
xor
movsl
iret
lcall
mov
pushf
inc
enter
scas
aas
mov
inc
xor
pop
mov
adc
push
sbb
bnd
or
jmp
mov
repz
add
lods
fdivrl
cmp
sbb
cs
cmp
xchg
add
pinsrw
add
jb
inc
xorb
ja
cmp
push
add
mov
divl
rcrl
lret
pop
out
xchg
decb
and
cmp
or
push
ds
inc
and
loope
je
or
sub
call
es
cmp
mov
shrb
pop
insl
mov
dec
lahf
dec
mov
xor
or
filds
sub
out
adc
nop
push
xchg
icebp
or
fdivrl
sbb
cmp
aad
mov
add
pusha
push
mov
pop
popa
aam
add
cld
or
or
inc
not
sub
inc
inc
add
addr16
push
aam
and
pushf
add
cmp
mov
pop
mov
imul
xchg
add
pop
and
inc
popf
aas
stos
or
mov
repz
mov
push
dec
mov
adc
sub
inc
ret
add
mov
stos
arpl
sbb
or
add
inc
add
push
sbb
cs
pop
lcall
lret
mov
lods
adc
mov
pop
xchg
outsb
inc
push
out
cmp
add
lock
xor
xchg
mov
push
inc
dec
rolb
outsl
iret
lock
add
mov
xor
das
push
mov
andb
adc
fldl2e
xchg
idiv
pop
and
mov
xchg
jg
pop
sub
add
outsb
mov
aad
push
imul
es
dec
std
and
pminub
dec
data16
fildl
mov
dec
fwait
out
and
push
in
btr
subb
rcrl
das
mov
dec
add
popf
mov
pop
cmpb
add
or
clc
or
test
cmp
mov
or
jo
jmp
add
ret
xchg
mov
dec
faddl
cmp
xor
sarl
outsl
rcll
cmp
inc
push
popa
and
fimull
jmp
aad
add
fisttpl
ljmp
dec
clc
push
adc
and
dec
hlt
icebp
adc
xchg
inc
mov
push
sarl
mov
xchg
lcall
cwtl
mov
xchg
xlat
andb
dec
repz
cmpsb
sahf
imul
outsl
dec
push
adc
and
or
dec
add
cmc
dec
sub
fstl
lret
sbb
std
pusha
mov
dec
xor
add
push
cmpsb
in
adc
mov
test
sbb
mov
push
movsl
mov
mov
andb
cmpsl
mov
add
mov
pop
imul
test
cmp
stos
jmp
dec
aaa
or
int
xchg
shrb
push
pop
add
shl
ja
js
mov
loope
std
ljmp
pop
mov
mov
pop
into
imul
jno
xor
mov
mov
std
and
movsl
pop
stos
andb
inc
test
scas
test
push
mov
xor
das
xchg
mov
cmp
sub
xor
sbb
in
or
fisubrl
inc
add
addb
add
mov
sub
jbe
popa
mov
lock
and
add
mov
jp
and
enter
sbb
loope
or
test
fsub
xlat
jg
test
push
add
mov
jmp
inc
hlt
movsl
movsb
sbb
jo
push
pop
cwtl
push
pop
roll
push
xchg
pop
add
aas
jl
cmp
mov
adc
jmp
add
ljmp
in
js
imul
ja
dec
jbe
daa
fldl
mov
mov
mov
sbb
insb
test
and
mov
mov
jb
jge
and
pop
shll
mov
aad
pop
inc
rol
dec
lock
outsl
push
mov
int3
lock
mov
mov
push
mov
lea
in
sti
mov
inc
and
mov
out
pop
jg
iret
pop
adc
xchg
js
rolb
test
push
shlb
cmp
loope
aam
lea
jl
scas
push
call
sahf
or
sub
dec
lcall
rorl
inc
lcall
cwtl
adc
pop
gs
jge
add
stc
testb
cmp
pop
add
je
lock
and
and
les
fnstcw
mov
dec
imul
mov
out
add
shll
jmp
int
fists
push
inc
push
mov
add
push
add
rolb
jbe
cmp
mov
push
imul
dec
fs
adc
add
jecxz
sub
movsb
ret
lods
mov
xchg
mov
mov
pusha
ds
add
xchg
cwtl
push
and
and
loopne
addr16
pop
add
jmp
out
and
lret
inc
pop
data16
add
icebp
push
mov
lods
dec
mov
or
dec
adc
mov
mov
mov
jle
push
movsb
lods
adcb
push
push
test
cs
sub
and
push
sub
cmpb
fwait
scas
out
int3
rcrb
add
aas
adc
push
cld
outsl
dec
and
andb
lsl
insl
xor
mov
addb
add
repnz
movsb
rolb
add
dec
icebp
testb
add
jle
xchg
mov
sbb
mov
dec
inc
push
loope
daa
andl
pcmpeqw
test
add
or
and
pop
mov
pop
loopne
mov
loop
mov
xlat
xor
call
pop
popf
pop
sbb
shrb
fisttps
cmp
push
sub
and
push
push
push
pop
or
rorl
jnp
lock
cmpsl
push
pop
cmp
sbb
mov
pop
push
mov
push
pusha
mov
ds
repz
rcrb
je
fmull
add
push
cmpsb
mov
dec
xor
xchg
icebp
idivb
iret
and
es
push
das
enter
in
jmp
insl
rcll
sahf
pop
add
push
mov
or
lcall
hlt
and
dec
fistpll
icebp
jle
push
pop
dec
dec
mov
in
add
test
push
jmp
dec
shlb
or
mov
jmp
mov
xchg
movsl
lret
fistpll
out
or
mov
sub
sbb
fdivl
add
cmp
cwtl
arpl
sbb
leave
fdivl
pop
orl
rorb
out
add
mov
lds
add
dec
pop
test
imul
or
sahf
test
cmc
leave
adc
adcl
xor
pusha
in
xor
nop
imul
fstl
test
loop
cmp
or
rcll
mov
add
push
test
sbb
add
xor
out
jmp
mov
add
dec
stos
cmc
daa
inc
repz
loopne
add
int
out
add
addr16
sar
stc
sub
data16
je
mov
push
xchg
pop
dec
rorb
sub
sbb
subb
cmp
subl
ds
inc
mov
push
icebp
ja
shrb
sbb
cmp
mov
jo
jo
pop
mov
pop
cli
dec
sub
repnz
bound
mov
dec
add
add
fsubp
repz
jge
cmc
mov
pop
inc
stos
dec
fildl
repz
das
jb
mov
mov
inc
cli
push
repz
push
mov
dec
and
jl
xorl
jg
or
jle
test
push
cmpsl
or
sbb
inc
add
popa
std
pop
pop
pusha
clc
flds
das
adc
cwtl
inc
sub
lods
popl
or
lret
mov
daa
pop
and
in
loope
add
adc
gs
in
or
pop
push
loopne
mov
push
cmp
cmp
sbbb
out
add
subl
cli
adc
cmc
mov
cs
xor
inc
mov
or
outsb
lods
xchg
pop
cltd
ret
sbb
sbb
push
dec
pop
cli
xor
push
jle
mov
xchg
pmaxsw
mov
decl
orb
cmp
ja
xor
pusha
lock
test
popa
ret
or
pop
aas
test
sbb
in
xor
lock
or
pop
std
and
push
js
jecxz
mov
dec
add
sbb
repz
imul
adc
push
ret
stos
cltd
push
jbe
pop
icebp
shll
clc
pusha
jp
cs
das
push
ja
mov
das
dec
inc
add
mov
mov
jge
loopne
pop
aaa
push
orb
scas
pusha
lcall
mov
mov
lock
into
fsubrl
lret
lods
stos
jne
sub
mov
lods
pop
add
ret
and
shlb
decb
je
inc
and
sbb
fdivrp
imul
mov
mov
insb
sub
xchg
popf
mov
add
insw
lods
ficoms
inc
inc
call
adc
jg
pop
dec
inc
adc
addb
mov
test
pop
ss
cli
ret
adc
sub
into
jae
rcrb
cmp
jge
sti
ds
adc
mov
insl
outsb
clc
and
pushf
lock
cs
xchg
and
sbb
and
jg
mov
mov
call
mov
jne
or
jle
pop
loopne
ljmp
repz
inc
addr16
pop
sub
jae
fsts
mov
lret
add
pop
mov
mov
cmp
xchg
sbb
pushf
jmp
enter
pop
ljmp
mov
inc
cld
cmp
add
cltd
and
insl
and
pop
mov
cld
pop
dec
adc
inc
xchg
mov
lcall
add
add
adc
push
add
mov
and
push
add
dec
push
popf
mov
xor
sub
sbb
mov
popa
adc
icebp
push
std
pop
cli
leave
test
cmpsb
stos
dec
addl
cld
addl
sbb
mov
lea
sbb
popa
dec
fcoms
adc
or
test
lock
mov
out
stc
imul
xchg
cmp
int3
shlb
mov
and
adc
into
jo
addl
push
enter
inc
rolb
xlat
and
and
push
pop
addr16
sti
cmp
into
adc
and
mul
xor
sub
mov
xchg
fidivs
lret
aas
push
and
dec
sbb
std
xor
add
and
adc
mov
movsl
dec
jg
add
pop
shl
sbb
lods
movsl
cmp
jp
lcall
test
imulb
cli
sub
lods
xor
adc
lods
fs
rcrl
add
pop
das
popa
xchg
orb
mov
push
fnstsw
scas
stc
dec
in
sub
xor
push
pop
and
adc
mov
cmp
adc
cmpsl
mov
out
lea
loop
sbbb
and
and
dec
stc
in
push
rolb
int3
pop
div
out
push
lret
decb
adc
roll
adcl
jne
inc
mov
sub
and
mov
add
pushf
mov
sti
or
ljmp
mov
rdpmc
add
sub
and
pop
out
add
shlb
mov
push
inc
or
enter
es
mov
orb
jno
out
mov
sbb
sbb
cmpsl
insb
lods
das
adc
mov
mov
lret
in
call
cmp
cmp
add
loopne
cmpsb
jge
sbb
loope
jle
push
pop
xlat
insb
mov
add
sbb
add
test
xchg
xor
adc
lods
xchg
mov
mov
mov
gs
mov
cmp
in
sub
pop
add
sbb
and
and
stc
cld
das
cwtl
js
push
cmp
orb
out
nop
or
or
and
into
dec
add
imul
inc
cli
sti
lea
dec
bound
out
repz
push
xor
hlt
lock
inc
pusha
pop
loopne
xchg
add
cmp
loope
movsl
dec
pushf
aad
lret
dec
xor
ds
mov
stos
je
xchg
stc
jg
dec
rorb
out
mov
and
sub
or
sub
xchg
sub
sbb
lock
mov
stos
mov
xchg
bound
sub
fldcw
test
pop
imul
flds
ljmp
addr16
fcomps
fs
bound
sbb
call
dec
jo
pushf
pop
sub
jne
push
int3
lock
dec
orl
dec
add
cs
bound
ja
jns
test
lock
push
das
scas
cmp
ret
pop
mov
jl
inc
js
rolb
mov
xacquire
add
shr
or
es
sbb
out
xor
pop
cmpsl
sub
cld
movsb
mov
and
add
in
mov
fimull
loopne
dec
push
xchg
pop
add
faddl
inc
and
js
sbb
xchg
add
add
repz
inc
mov
add
fisubrs
dec
xor
mov
divl
jp
insl
cmc
cmp
and
push
push
push
cmp
repz
jmp
sub
xchg
inc
adc
subb
add
jp
pop
mov
mov
ss
loope
add
clc
pop
icebp
pusha
int3
popf
bound
cmp
popa
mov
add
out
xor
scas
mov
mov
push
add
sahf
pop
loopne
idivb
pop
jno
mov
inc
mov
bound
stos
stc
xor
or
add
adc
negb
or
aaa
jae
int
stos
call
jne
les
ds
and
and
ret
fnstcw
popf
adc
push
add
push
mov
push
lock
arpl
inc
inc
sbb
lock
fiaddl
mov
xor
aas
or
jne
sbb
pop
xor
push
dec
shlb
movsb
push
add
lea
repz
and
mov
mov
inc
imul
setnp
aaa
shl
adc
adc
adcl
mov
cmp
lcall
loopne
mov
lds
add
bound
in
pop
or
cwtl
and
lods
sbb
pop
add
aam
add
data16
push
cld
sbbb
cmp
add
adc
jnp
sub
out
stc
or
xchg
xorb
lods
jnp
scas
inc
inc
dec
lock
in
mov
ret
or
ret
flds
shlb
iret
pushf
call
and
stos
cltd
inc
lods
add
pop
adc
xchg
pusha
and
xor
and
mov
enter
scas
add
fs
pop
stos
cmp
cli
sub
add
je
push
out
inc
fldenv
or
test
add
cmp
lret
dec
xlat
mov
repz
adc
xchg
mov
mov
sub
add
cmc
inc
aad
out
stos
nop
sbb
popf
sub
inc
or
jle
test
lret
shlb
dec
xor
pop
add
aad
negb
dec
test
imul
adc
dec
inc
jnp
pop
jecxz
pop
adc
mov
add
inc
lea
mov
or
hlt
fdivs
fsubrs
pop
mov
mov
push
scas
and
or
adc
push
lds
fisubrl
scas
inc
inc
in
lods
movsl
dec
mov
bound
mov
lock
add
fucomip
out
fcomps
dec
call
add
mov
sub
xlat
push
push
adc
scas
push
js
push
jb
icebp
adc
sbb
ret
or
sub
xchg
jne
cmp
add
sub
push
test
std
addr16
xchg
int3
push
leave
sub
push
cmp
add
sbb
test
mov
add
inc
sub
pop
xor
xor
ds
icebp
pop
rcl
dec
pop
scas
mov
dec
cmp
repnz
lret
mov
outsl
push
or
or
popa
add
shrb
scas
xchg
inc
lds
movsb
sub
push
mov
insb
add
lcall
or
loop
add
lret
dec
test
push
hlt
mov
adc
test
add
mov
cltd
out
out
add
sub
mov
mov
aad
lahf
lods
add
add
out
xchg
test
add
jb
pop
cmp
cwtl
push
pop
lahf
mov
xor
lods
lret
add
lods
les
jmp
mov
xor
inc
enter
ss
sbb
leave
push
push
and
in
dec
jnp
xor
rclb
test
and
repz
ljmp
dec
or
mov
cmp
inc
push
xchg
dec
cmc
stos
mov
mov
adc
arpl
add
daa
out
pop
add
loopne
push
cld
call
mov
add
testb
imul
inc
out
pop
or
xor
sub
or
dec
pop
add
jl
mov
loopne
jl
fwait
add
dec
push
mov
in
test
lret
mov
fistl
sub
mov
lcall
and
mov
add
mov
iret
xchg
sbb
sub
inc
cmp
push
cmpsb
mov
dec
js
femms
sbb
icebp
pusha
mov
jecxz
adc
add
loope,pn
xchg
lods
xchg
stos
shl
mov
mov
cwtl
or
pop
and
das
xchg
mov
fiadds
mov
outsb
dec
adc
or
cmc
je
and
pop
mov
jnp
icebp
pop
pop
adc
adc
in
push
mov
mov
pop
adc
cmp
mov
adc
adcb
push
cmp
rcl
mov
jp
enter
test
sub
lahf
cmp
mov
in
dec
cmp
sub
mov
pop
xchg
std
add
ljmp
imul
dec
lahf
jle
push
loopne
sarb
loope
movsl
adc
dec
rorl
daa
and
js
hlt
int3
mov
push
rclb
int3
sub
push
shr
test
add
xlat
daa
pop
sub
and
lods
add
jb
pop
xchg
and
stos
ret
inc
jnp
push
pop
cli
add
push
jb
xchg
subb
mov
xchg
mov
dec
insb
mov
xchg
push
push
test
mull
pop
jbe
test
lock
sub
xchg
pop
loop
push
scas
jns
addl
push
or
xchg
sbb
mov
nop
cmp
in
and
xchg
mov
nop
call
test
pop
adc
cmc
dec
ret
hlt
cmpsb
xor
movsb
jne
push
add
scas
lea
push
repz
orb
or
fs
lahf
loope
mov
push
lret
and
xchg
mov
or
pop
rcrb
int
orl
cli
jbe
sub
jmp
popa
mov
xor
inc
lea
add
ret
dec
xchg
loope
push
xor
enter
rcrl
xlat
out
psubd
dec
stos
js
mov
inc
insl
punpckhbw
pusha
or
mov
out
mov
or
jns
in
gs
add
lock
pop
in
dec
subl
inc
mov
imul
dec
fwait
mov
xchg
pop
xchg
je
test
aam
test
adc
dec
insl
dec
stos
sub
or
inc
pop
movsl
cli
adc
orl
add
or
dec
js
mov
cwtl
mov
inc
and
fsubl
out
adc
pop
sub
pop
cmp
rcrl
push
jmp
ljmp
cs
insl
add
repnz
stos
test
subb
js
out
ljmp
and
stc
sbb
leave
pop
adc
sbb
pop
cmpsl
testb
mov
pusha
adc
repz
jb
out
dec
cwtl
loopne
xchg
lods
inc
data16
adc
loopne
mov
add
movsl
xor
or
mov
add
inc
and
pop
push
inc
or
ret
xor
adc
test
lock
and
add
notb
adc
das
icebp
push
nop
stos
mov
ret
push
adc
imul
lock
jo
jno
mov
add
fistpl
xor
pusha
adc
lcall
sbb
shl
pusha
roll
mov
lock
add
jmp
push
mov
or
notl
iret
add
xchg
shlb
mov
push
clc
pop
add
leave
mov
mov
xchg
jg
sbb
mov
repz
test
rcrl
clc
stc
pop
xchg
ljmp
push
ljmp
cs
xlat
adc
incl
loope
aam
xchg
fwait
scas
mov
xchg
jns
pusha
cmc
popf
inc
xadd
inc
push
test
mov
movsb
mov
repz
sahf
inc
add
dec
inc
add
sbb
lock
push
jmp
mov
xor
dec
cli
inc
cmc
jl
inc
inc
or
cmpsb
and
and
xchg
push
mov
cmpsb
sbb
dec
pop
out
inc
shrb
out
xor
pop
test
adc
insl
ljmp
cmp
mov
scas
lock
mov
ror
adc
mov
outsb
loop
rol
sbb
cmp
add
add
xchg
sub
inc
adc
testl
mov
in
or
popa
mov
call
inc
lock
add
sub
pusha
cli
popa
pushf
mov
movsl
es
jno
or
into
and
leave
nop
sarb
cli
in
jo
mov
ljmp
ss
pop
ds
cmp
bound
or
in
dec
xlat
jp
or
ljmp
add
cmpb
xchg
lea
ret
sbb
and
pop
lods
add
stos
xor
xor
and
std
lock
inc
pop
inc
adc
mov
mov
pop
push
add
stos
push
sbb
pusha
inc
jbe
inc
je
inc
sbb
das
stc
std
or
adc
mov
or
jne
dec
or
push
leave
jmp
out
or
mov
jo
mov
in
inc
adc
lea
lret
int
and
inc
xchg
mov
sahf
movsb
ret
sub
cmpsb
fdivrl
scas
lds
popa
add
add
sti
xorl
into
movsb
mov
add
fbstp
or
cmp
xor
ljmp
and
add
add
bound
add
push
mov
mov
out
push
cli
sub
scas
or
mov
or
imul
gs
rcl
popf
test
pop
add
adc
mov
sbb
sub
add
lds
adc
shlb
loope
mov
cmp
xchg
sub
inc
jae
adc
lea
inc
push
cwtl
and
in
repnz
rorl
aas
push
aam
pop
insb
fs
pop
bound
xchg
aas
lods
cli
adc
mov
pop
jb
lahf
aam
je
fmul
pop
xlat
adc
add
pop
dec
shr
or
jle
add
push
add
nop
or
mov
test
fcoms
push
cmpsl
xor
pop
test
ljmp
fstpl
dec
imul
inc
roll
shlb
cs
or
popf
sbb
mov
and
dec
add
icebp
adc
sub
push
jb
xor
stos
add
push
pop
pop
gs
and
xor
mov
leave
jnp
lods
shrb
push
lahf
xchg
imul
and
cmp
inc
pop
jecxz
push
push
jns
rcrl
add
mov
cli
and
sbb
aaa
or
jns
cwtl
mov
mov
pop
out
push
xchg
testl
push
mov
out
sbb
jp
popa
dec
out
jnp
add
add
xchg
xor
aad
dec
push
lret
sbb
stos
xchg
fildl
sub
push
pop
mov
or
pop
pop
andl
jne
cs
dec
les
sub
mov
out
adc
cmc
pusha
insb
mov
sbb
and
lock
mov
xlat
mov
lock
das
arpl
stos
xor
icebp
ss
push
push
mov
xchg
dec
mov
rclb
lods
and
popa
mov
mov
pop
sbb
add
adc
pop
hlt
jne
pop
add
pop
push
xor
xchg
or
pop
mov
mov
add
adc
cmpsl
xor
mov
pop
mov
mov
call
lock
sarb
mov
jno
adc
rcr
cmp
fidivl
sbbb
rolb
out
outsb
mov
insl
sub
dec
lsl
or
adcb
jecxz
jmp
cmpsl
insb
xor
call
dec
shl
arpl
fs
insb
int3
stos
add
jl
and
sub
sub
outsb
xchg
pop
nop
dec
bound
cmpb
push
add
sti
loope
sub
mov
fcompl
sub
shll
adc
add
ja
push
data16
push
add
cli
nop
jb
scas
hlt
pop
popf
xchg
add
mov
ss
add
lock
popf
and
cmp
pop
add
mov
rorl
push
sbbb
lahf
fsubl
push
sub
mov
rcrb
push
fdiv
loop
add
movsb
fisubrl
xor
xor
add
sbb
ss
loop
stc
incb
push
pop
jb
scas
pop
int
movsl
popf
fcompl
mov
push
and
mov
fistpll
testb
mov
mov
mov
mov
arpl
test
es
or
jne
mov
pop
je
outsl
adc
insl
out
sbb
lret
cmp
mov
jno
xchg
pop
aas
cld
push
add
xor
ja
dec
and
dec
cmp
movsl
xor
add
ja
push
dec
jge
test
add
xchg
pop
pop
loop
ljmp
adc
pusha
xchg
cwtl
push
es
pop
lea
or
mov
sahf
adc
dec
sub
jp
sub
jb
imul
mov
or
dec
mov
das
mov
sbb
stos
inc
mov
inc
mov
lret
push
call
pop
loopne
mov
ja
jnp
adc
xchg
mov
pop
dec
addl
mov
dec
shl
shl
add
xchg
mov
xchg
lret
adc
lods
dec
add
cmp
and
adc
ret
mov
xor
sub
xor
mov
inc
gs
rolb
aas
les
jno
nop
negl
bound
mov
andl
loopne
cld
or
decl
xor
sbb
daa
test
adc
sarb
pop
ffreep
mov
loope
das
sbb
stc
add
stos
xchg
pusha
je
xor
popa
mov
push
push
rcr
push
xlat
or
jne
ret
mov
pop
fmull
je
jmp
cli
ret
pop
ss
add
adc
clc
mov
and
add
sbb
aaa
mov
hlt
shl
lfs
cmc
dec
test
sbb
xchg
or
shrl
add
scas
fisttpl
xor
loopne
in
add
lods
jnp
and
add
dec
inc
data16
out
jns
ja
movsb
cmpsl
dec
xchg
and
icebp
pop
add
xor
cmpl
mov
adc
jp
xchg
aad
in
or
jae
pop
adc
pop
cmpsb
push
mov
sbb
mov
or
adc
pop
maxps
or
mov
and
fisubs
xchg
cmpsb
cmc
push
mov
dec
dec
scas
and
add
cltd
push
sub
aaa
or
sbb
xorb
dec
xchg
ja
jmp
pop
jl
jno
adc
inc
gs
repnz
in
orb
mov
nopl
pop
icebp
mov
ja
pop
es
rcll
and
shl
cmp
int
lods
push
sbb
lahf
fwait
mul
out
cmc
inc
mov
pushf
xor
add
mov
ljmp
lods
iret
sbb
test
scas
cld
xor
jo
data16
scas
loop
inc
in
out
mov
jg
xchg
dec
cs
mov
cmpsb
pusha
jp
cld
ds
dec
loopne
mov
adc
add
orb
mov
push
and
fs
add
adc
addb
insb
sub
add
cmp
add
mov
push
call
jle
hlt
mov
jne,pt
jbe
adc
mov
mov
fists
das
xchg
pop
mov
jmp
jns
xchg
movsb
leave
cmp
or
and
mov
lods
mov
fsubrs
or
lret
mov
cld
pop
cs
sbb
xor
lcall
push
lods
xor
dec
andl
add
adc
pop
and
in
push
or
fcmovnbe
push
lods
pop
nop
xchg
jge
pop
lret
pop
add
mov
and
or
shlb
je
and
sub
add
negb
std
xor
dec
mov
clc
push
inc
inc
lret
dec
mov
and
or
xor
xchg
cmpsb
ss
stos
lods
mov
js
fdivrs
push
pop
xchg
lods
out
adc
adc
in
daa
sub
stc
jns
in
pop
sbb
cltd
fcomp
add
int
mov
out
mov
scas
pop
mov
mov
sbb
cli
fisubrl
jno
cmpsl
bound
rcrb
test
mov
sbb
mov
pusha
movsl
and
pop
or
jl
sbb
popa
jmp
stos
icebp
xor
sbb
sbb
xchg
repnz
inc
xor
das
dec
mov
es
add
jge
test
jp
jno
dec
imul
xchg
mov
lret
out
push
cs
and
cmpsb
loopne
sbbl
adc
loope
adc
dec
cmp
stc
jp
mov
ret
movsb
sbb
outsl
inc
mov
jp
sub
testb
movsb
inc
ds
enter
aad
test
insl
fstpl
add
dec
outsb
std
adc
add
stos
ljmp
cmpsl
fisubs
repnz
sbb
lods
cmp
dec
icebp
sub
lock
jns
pop
mov
shl
cmc
xchg
sbb
outsl
push
cltd
sub
pop
adc
rcrb
pusha
jae
sub
mov
std
dec
setg
movsb
mov
subb
pop
in
mov
or
cwtl
add
rcrl
add
shll
por
xchg
sti
in
push
cmp
inc
cmp
and
push
jae
je
push
test
cmp
push
xor
jl
std
mov
push
mov
hlt
or
push
push
dec
mov
jne
adc
std
adc
jbe
or
push
or
or
movl
in
inc
das
arpl
add
hlt
test
pop
shl
cmp
movsl
cmc
andl
cmpsb
cli
or
jo,pn
push
fdivrp
imul
stos
sbb
cltd
xchg
aam
or
and
aaa
idivl
mov
and
je
pop
in
jno
jmp
mov
and
dec
adc
addr16
xchg
xlat
movsb
sar
add
out
scas
add
shlb
push
repz
pop
sarb
jg
mov
js
mov
lcall
pmullw
xchg
inc
js
adc
daa
lock
test
aas
rolb
sarb
punpcklwd
mov
jecxz
mov
add
and
add
lds
fldt
cmc
mov
ljmp
push
xorl
pop
adcl
scas
add
and
fcoms
mov
xchg
leave
jo
xor
dec
adcl
enter
dec
xor
mov
push
loop
and
pop
push
adc
sbb
inc
popl
imul
mov
add
pop
mov
in
nop
rcl
aam
mov
popf
je
fsubs
mov
and
or
xorl
loope
add
clc
dec
push
aam
mov
movsb
daa
test
mov
test
sbb
mov
jmp
add
andl
shl
jp
dec
and
dec
imul
mov
fcomps
lock
pop
add
ss
mov
mov
mov
jae
sbb
pop
and
sbb
psrad
push
pop
lods
add
popa
rorb
imul
jecxz
pop
pop
mov
daa
sbb
adc
stos
loopne
inc
xchg
pop
addb
pop
in
add
xchg
addb
ljmp
lcall
dec
clc
inc
pushf
and
inc
rolb
aaa
inc
je
sub
jo
dec
ss
pop
dec
and
out
mov
dec
std
add
decl
and
pop
dec
sbb
inc
lahf
mov
sub
js
leave
add
shl
push
add
or
cld
rcr
add
cs
push
cwtl
ja
imul
test
adc
leave
jo
bnd
testl
lock
je
orb
add
es
test
cmpsl
add
sub
sub
sbb
jecxz
pop
stos
mov
and
pop
pushf
mov
lock
inc
nop
mov
adc
lods
ljmp
fcmovb
mov
push
jp
lcall
mov
jle
mov
or
inc
xchg
pop
dec
pop
pop
mov
aas
and
push
lock
daa
aaa
mov
jl
pop
adc
pushf
xchg
adc
inc
adc
bound
push
das
fsubs
add
xchg
mov
jle
jno
and
push
pop
ret
cmp
and
lret
add
loopne
test
mov
clc
iret
imul
add
bound
or
pop
xchg
sbbb
xor
sarl
pop
mov
cltd
push
aad
rcrl
pop
push
sahf
push
xchg
dec
fisubrs
out
daa
push
jbe
cmpsb
insl
pusha
test
sbb
add
ds
push
jne
add
aad
fadd
shrb
daa
stos
push
cld
and
add
xchg
add
xor
pop
sbb
cmp
jg
pop
pushf
movsl
or
sbb
cs
fistpll
ror
daa
nop
dec
adc
jo
add
icebp
or
rcll
fldl
das
dec
nop
rolb
cmp
lcall
mov
cmp
movb
jo
lods
les
repz
daa
inc
in
bound
aas
cmp
lds
std
lods
aam
mov
xchg
clc
push
add
jne
movsl
pop
stos
pop
mov
or
mov
pop
push
jbe
or
add
outsb
aam
in
cmp
add
ljmp
loopne
sbb
sbb
inc
or
hlt
clc
xchg
pop
sub
xchg
mov
push
leave
jae
mov
daa
aad
dec
cmp
xchg
sub
jmp
aad
cmpsl
adc
mov
mov
add
or
mov
push
in
sbb
cld
repz
xchg
mov
sbb
ss
fdiv
or
insl
ds
xor
or
inc
je
sti
imul
inc
repz
push
stos
jns
dec
lds
xor
pop
adc
pop
add
xor
rcrl
add
and
pop
cmp
mov
push
loopne
ss
jp
sub
add
add
and
dec
dec
jle
push
ret
and
mov
mov
fs
cli
mov
add
outsb
lahf
fdivs
mov
inc
or
andl
jl
movsl
sbb
or
mov
fnstcw
mov
aas
inc
adc
int3
rclb
mov
xchg
mov
jle
pop
or
dec
cmpsb
jmp
add
sbb
mov
xor
test
adc
xor
push
sahf
dec
jmp
test
push
mov
sbb
jge
fdivl
cmp
scas
addr16
adc
dec
into
lock
xchg
jne
adcb
dec
in
mov
lahf
jnp
mov
fs
in
push
mov
stos
mov
or
dec
add
sarb
mov
push
push
mov
xor
dec
scas
pusha
pop
cmp
xchg
nop
push
xchg
sahf
xchg
fisttps
sbb
loopne
jno
dec
jnp
add
xlat
out
or
cmp
and
sbb
pop
dec
sub
and
pop
in
xchg
scas
cs
sbb
orb
daa
les
fld
sbbl
and
and
sbb
loopne
lret
int3
adc
cmp
ljmp
dec
pop
aas
xor
inc
fdivp
push
mov
xor
bound
stc
arpl
add
and
fcmovnbe
and
sbb
mov
loop
ficompl
jne
stc
push
xor
xchg
outsb
inc
pop
mov
lods
cmpsl
mov
pop
jnp
int3
fwait
mov
in
pop
push
fnstenv
inc
cwtl
popa
inc
ja
sub
lds
pop
lods
rcll
movsl
jmp
and
nop
add
push
xor
add
push
mov
add
movsb
insb
xchg
imul
fiadds
in
and
sbb
icebp
int
and
dec
xchg
mov
inc
pop
into
sub
fcomps
mov
insb
nop
cmp
sbb
mov
xchg
mov
adc
add
or
std
rcll
sar
fcmovne
and
inc
xor
incb
inc
and
sub
inc
pop
mov
and
cltd
or
outsl
test
sub
rolb
adc
in
mov
jle
or
xlat
nop
xor
jae
pop
mov
xor
lret
pop
dec
sti
cvtps2pd
jno
sti
movsb
dec
test
scas
sub
cld
mov
dec
outsb
mov
lds
xchg
add
xchg
in
jbe
jecxz
cwtl
ja
add
mov
jmp
lock
dec
out
int
jg
mov
rorb
fs
jecxz
push
mov
std
outsl
mov
or
and
aad
inc
repnz
jns
das
xlat
mov
sub
ret
push
dec
fdivrl
xchg
clc
aaa
mov
fidivl
xchg
push
lahf
test
in
in
daa
mov
inc
dec
sbb
and
ljmp
pop
ret
out
fwait
add
clc
scas
and
fildl
shlb
shl
mov
xor
xlat
nop
and
jmp
add
adc
and
push
fsts
movsb
iret
pop
test
sbb
xchg
push
ljmp
sahf
mov
push
pop
adc
loope
fidivrs
cmp
bound
in
pop
pop
adc
das
add
push
je
gs
imul
inc
pusha
lods
xchg
pusha
add
cld
cmp
dec
xchg
bound
or
sbb
pop
mov
aam
aad
imul
loope
jl
and
stos
pusha
movsb
dec
mov
ret
test
out
sbb
mov
mov
pop
xor
or
fists
dec
dec
decl
xchg
repnz
mov
xchg
loopne
stos
pusha
push
inc
pop
push
jae
mov
cld
xlat
add
insb
pop
test
and
clc
cmp
subl
pusha
xchg
jecxz
add
out
insl
sbb
inc
loopne
mov
add
testb
xchg
jg
cli
cmp
and
jns
fistpl
dec
iret
fs
dec
andb
or
test
jnp
test
adc
jp,pt
pop
mov
mov
add
inc
mov
and
jnp
and
shrb
mov
sub
ds
adc
enter
fstpl
push
imul
xlat
jecxz
adc
mov
pop
push
adc
shlb
add
lods
mov
add
inc
jbe
mov
lock
xchg
or
xor
aam
cmpsb
dec
adc
cwtl
adc
add
add
pusha
mov
loopne
jg
adc
sub
stos
loopne
xchg
mov
xchg
mov
xor
cmp
or
ljmp
adc
add
push
pop
mov
push
adc
push
jmp
lock
dec
and
cmp
daa
repnz
cwtl
sub
mov
jno,pn
mov
stos
adc
add
aad
dec
xor
iret
cmc
mov
sbbl
push
cmp
pusha
pop
pop
add
mov
mov
test
xchg
mov
out
push
pop
add
popa
sti
xchg
xor
in
movd
lret
dec
les
fstps
iret
inc
mov
mov
and
mov
cmp
test
loope
in
add
adc
idivb
cmc
push
shll
es
and
inc
cwtl
dec
scas
sub
ret
cli
dec
pop
xchg
cli
setg
cli
dec
movb
add
pop
loope
test
sub
nopl
mov
out
pop
scas
out
and
add
lret
outsb
dec
aad
lret
test
xchg
lods
rcrb
popa
add
mov
call
subb
adc
sub
sbb
ljmp
cld
and
pop
cmp
xchg
sub
loop
add
jbe
sub
pop
outsb
push
test
push
cs
daa
push
ret
ret
sub
popl
dec
mov
fwait
push
jmp
xchg
mov
push
jp
and
cmp
incl
pop
pop
jmp
jecxz
add
decb
and
mov
roll
push
mov
push
mov
push
pop
sub
rclb
xor
mov
in
or
stos
add
mov
test
add
scas
push
fiadds
pop
push
inc
mov
ret
mov
pop
xlat
adc
mov
aas
pop
pop
jmp
pusha
or
cmp
fbstp
pop
xor
inc
pop
aaa
dec
xchg
cmp
sarl
xor
push
sub
xchg
dec
loopne
les
cmp
sub
call
xor
push
loop
jmp
out
or
repz
dec
add
and
pop
es
adc
repnz
ret
xlat
ljmp
orb
push
bound
test
pop
leave
push
loope
push
adc
sub
mov
add
dec
add
push
adc
xorb
xchg
in
popf
es
lock
add
data16
iret
mov
out
push
incb
add
sub
sub
mov
and
daa
sbb
add
cmpsl
jle
cmpsl
xor
pusha
subb
pop
push
mov
dec
cmpsl
sti
mov
jbe
push
pop
ret
cwtl
xor
and
cmpsb
rcll
fstps
cli
int
add
adc
cmp
adc
sbb
pop
jnp
cwtl
sbb
wbinvd
insw
jmp
test
cmc
movsb
xchg
ret
add
clc
mov
push
mov
test
pop
nop
jmp
aaa
mov
adc
pop
push
push
cmc
or
add
mov
sub
outsl
repnz
loopne
jb
mov
ds
mov
mov
roll
sti
inc
jne
mov
in
jo
loopne
data16
and
ret
mov
adc
ret
add
jge
xchg
jns
or
and
int3
scas
sub
sub
das
dec
push
movsl
mov
cs
cmp
icebp
or
bndldx
add
jmp
testb
cmp
mov
push
add
in
xor
dec
push
xchg
cmp
add
lock
lcall
dec
or
jbe
sub
xchg
lods
int
dec
jge
mov
inc
ljmp
sub
and
pusha
lret
mov
mov
fwait
push
sub
mov
imul
sub
lods
xor
inc
call
add
sub
ret
inc
mov
pop
xchg
cwtl
cltd
or
repnz
jno
andb
mov
fisubs
add
and
fs
xchg
add
loope
jecxz
xchg
jmp
push
inc
pop
mov
outsb
adc
mov
cmp
pop
lret
aaa
mov
xchg
sbb
aas
adc
cwtl
xchg
inc
inc
sub
add
jl
and
lock
jle
push
dec
es
cwtl
xorl
imul
or
or
jb
mov
insl
aas
int3
repnz
push
mov
inc
jnp
pop
js
sub
adc
sub
or
nop
dec
mov
add
das
xchg
add
insb
test
enter
mov
dec
pop
mov
add
sbb
pusha
loopne
cwtl
inc
jne
add
cmp
das
in
divl
andb
fldcw
insl
popf
fwait
sti
mov
push
mov
xchg
lods
xor
pop
pop
lods
pop
dec
xor
lods
or
sub
lock
jae
mov
pushf
mov
shr
fstpl
jb
or
gs
sbb
adc
cmc
imul
or
rcpps
leave
lods
add
test
jb
sub
inc
or
sbb
lods
cmp
inc
fsub
lock
xor
push
popf
mov
and
icebp
dec
mov
sbbb
mov
jae
js
inc
mov
paddusb
inc
scas
inc
das
push
fldpi
mov
bound
cmp
jmp
pop
inc
arpl
xor
cwtl
push
cmp
je
scas
adcb
ror
lods
mull
cmp
adc
add
jmp
scas
add
lock
cmp
aam
lods
je
adc
scas
dec
test
ret
das
mov
fildl
jp
or
arpl
shr
shl
xchg
loop
dec
adc
les
cmp
lods
mov
xchg
jl
push
nop
xlat
jns
ss
jmp
jmp
fimull
js
cld
nop
jne
pop
sbb
cmp
lock
xchg
sbb
sbb
jmp
scas
std
sub
in
or
js
jmp
jmp
xor
push
imul
mov
and
popf
xor
dec
imul
adc
lods
jl
pop
sbb
das
mov
mov
sub
sahf
stos
fs
xorb
xor
decb
push
mov
sbbb
mov
call
fisubrs
movsl
daa
jp
mov
adc
aam
sub
or
arpl
iret
inc
mov
mov
inc
pushf
push
insl
mov
dec
std
bnd
sbb
mov
test
add
sbb
das
pop
xchg
inc
inc
aad
mov
xchg
push
sub
rcrb
dec
loopne,pt
cmp
add
add
mov
mov
push
gs
lock
dec
and
xchg
and
or
loope
orl
xchg
pop
mov
and
or
mov
sbb
sub
add
out
add
lret
pop
cmp
push
in
mov
adc
sahf
ljmp
mov
mov
out
subb
push
in
out
cs
fcoml
dec
test
mov
add
clc
adc
rep
scas
inc
ljmp
xor
mov
daa
dec
loop
mov
mov
push
andb
pusha
cld
sbb
dec
lea
shlb
fidivrs
xchg
mov
add
lods
or
inc
push
outsb
sbb
dec
out
stos
adc
pop
pusha
in
xor
out
and
loope
movsb
and
ret
xchg
nopl
jo
jne
sbb
sbb
or
pop
ljmp
push
scas
in
pop
pop
mov
adc
testb
movq
nop
in
xor
out
jl
cwtl
pop
sub
sbb
lret
adc
jp
cmpxchg
or
sub
or
lea
sub
mov
mov
test
mov
or
insl
ja
dec
add
cmpsl
stc
jmp
adc
ficoms
sub
js
jg
xorb
fistps
fimull
insb
add
fistl
jns
fmuls
push
daa
sti
sbb
sbb
add
fxch
fildl
inc
fidivl
xchg
jne
jb
mov
cmp
jbe
and
das
std
test
jecxz
lods
mov
lret
or
push
shl
outsb
or
xor
dec
pop
push
push
out
mov
xor
and
jnp
test
xlat
add
push
dec
pop
xor
or
mov
sti
shl
clc
push
push
fisubs
adc
inc
dec
xor
add
xchg
repz
roll
hlt
sub
inc
es
test
std
shl
pop
imul
ljmp
pop
push
adc
push
jbe
test
cmc
lock
xchg
add
xbegin
mov
inc
cmp
lahf
insl
shrb
or
mov
testl
push
add
jae
or
or
shlb
pop
xchg
lods
fcoms
mov
push
xchg
bound
movsb
jns
xorb
mov
sub
mov
fisttpll
mov
and
jo
push
lods
push
add
outsb
dec
sub
sbb
sbb
pushf
fstpt
xor
adc
faddl
cli
inc
push
and
lea
xchg
xchg
jmp
cmc
or
call
inc
and
fistpll
or
rcrl
int
movsb
rcll
loope
imul
insb
test
fistpll
mov
or
xor
loop
ja
add
sub
cld
xor
mov
xchg
lods
xorb
lcall
lahf
push
jae
adc
mov
imul
mulb
cmp
adc
push
add
mov
test
in
pop
xor
xchg
shl
rcr
add
pushw
mov
mov
stos
rcrb
sbb
xchg
cld
dec
test
or
aaa
jmp
mov
sbb
cmpsl
push
fs
rcrb
test
adc
scas
sbb
pop
cmpsb
ss
loop
xchg
aam
and
lods
inc
pusha
xor
loopne
cmc
cmp
dec
sbb
and
mov
imul
lds
or
stc
dec
cmpsl
dec
mov
push
mov
add
xchg
cmp
addb
jo
and
cmpb
fisubrl
daa
inc
or
data16
in
push
jmp
pop
jae
ficoms
cmp
fs
cs
pop
lcall
aad
mov
stos
add
mov
sub
push
add
add
jbe
mov
mov
mov
pop
add
mov
rorb
mov
mov
or
pop
inc
dec
jmp
and
mov
imul
lahf
test
add
or
inc
loopne
or
sbb
sahf
push
popa
cltd
or
dec
jge
jo
mov
push
add
fcomp
fisubrl
jns
bound
mov
call
sbb
push
jb
jge
push
sub
std
loop
cmp
lahf
fs
ja
and
cmpsb
xor
mov
pop
jl
aam
add
outsl
add
filds
mov
or
sub
pop
jg
sbb
mov
and
push
xor
jge,pt
add
rolb
outsl
add
mov
cmp
inc
dec
lahf
imul
pop
add
lret
jge
pop
sarb
orl
lods
das
mov
mov
sbb
pmullw
imul
push
cmp
add
mov
dec
js
pop
ss
adc
pop
cld
adc
lods
or
mov
addl
xor
jg
add
or
and
fidivrs
loope
pop
cmp
xor
xchg
xchg
adc
lods
fnstcw
lahf
loopne
scas
out
imul
mov
push
xlat
or
hlt
into
add
xchg
cmp
mov
cld
cmpsb
pushf
push
and
push
lret
lcall
addb
dec
dec
sbb
mov
pop
sahf
scas
sub
or
push
sti
cld
mov
and
sub
dec
icebp
lods
add
add
sbb
js
mov
enter
mov
mov
std
loope
or
or
fistps
loopne
jecxz
cs
push
sbb
nop
aam
mov
rclb
and
pop
sbb
clc
push
add
xchg
jg
data16
stos
mov
lock
pop
cmpsl
insb
xor
mov
adcb
sbb
sti
xor
rclb
jbe
jl
add
push
sbb
movsl
imulb
insl
pop
sar
cmpl
and
push
in
mov
xor
into
jo
pop
mov
push
jp
mov
ret
or
cmp
xchg
clc
cli
mov
loop
popa
sbb
mov
adc
iret
in
dec
or
inc
outsb
fyl2x
daa
in
leave
jne
add
mov
ds
or
rcll
sbb
jb
jge
pop
add
mov
lds
push
add
lsl
out
sahf
cmp
add
movsl
outsb
or
or
jl
inc
rclb
dec
or
push
imul
aam
add
cmp
mov
lret
rorb
mov
je
add
lods
cs
xor
lret
fsubrs
add
test
test
jmp
xorb
fsubl
int3
and
mov
mov
xchg
xchg
lret
inc
stos
jo
add
and
hlt
push
push
or
inc
andl
push
loop
mov
add
sub
add
adc
pop
jp
das
pop
xchg
and
add
sti
pop
sub
adc
imul
pop
sub
dec
push
push
or
or
sbb
fisttpl
repz
hlt
mov
cmp
sbb
in
pop
pop
adc
lods
js
sub
push
adc
outsl
lods
push
add
cli
push
xchg
lods
mov
inc
push
repz
jno
and
mov
jno
ljmp
mov
xor
fcmovnu
sbb
push
in
pop
push
cmp
jmp
pushf
in
add
popf
add
inc
sub
mov
lock
fimull
inc
mov
mov
mov
stos
enter
test
dec
dec
xchg
inc
mov
inc
push
adc
test
mov
cmp
and
and
pop
and
and
ficompl
cmp
xor
or
sub
js
cmp
fwait
sbb
xchg
mov
mov
lods
cmp
outsb
mov
and
sub
xor
orb
add
insb
mov
das
fcompl
enter
pop
fucomp
insl
xchg
fcompl
mov
add
dec
addl
rcrl
mov
int
and
fnstcw
jl
or
sub
inc
xchg
push
and
or
jo
dec
push
xchg
arpl
out
sbb
jl
xor
jb
fmuls
and
and
fwait
adc
cmp
lods
add
or
popf
push
add
scas
outsb
mov
pop
std
ret
ror
xor
xor
imul
orb
je
leave
add
pop
add
js
jp
and
cli
mov
push
out
ljmp
cmpsl
je
addb
das
fildl
fiadds
outsb
ja
movsl
xchg
mov
pop
imul
pushf
push
stos
clc
imulb
call
jle
mov
pop
cmp
aam
and
xchg
pop
insl
loopne
adc
pop
mov
sub
shr
sub
jnp
xchg
or
mov
inc
imul
std
adc
push
scas
fiaddl
test
jp
addr16
popa
sahf
call
or
repnz
push
out
adc
inc
dec
adc
test
push
adc
adc
jbe
mov
jg
das
daa
xchg
adc
add
dec
pop
dec
sbb
and
add
insl
sti
pop
push
mov
add
loope
push
lods
ds
rorb
cs
imul
mov
jo
jae
in
sub
hlt
mov
push
xor
push
ficoml
cmp
jbe
and
or
jne
xchg
adc
inc
das
mov
sar
cmp
lcall
loope
insb
rcr
rolb
cmp
inc
and
xor
jl
roll
add
test
add
sub
push
xor
adc
push
sbb
jmp
mov
loopne,pn
mov
clc
jae
cwtl
cmpsl
out
shll
jmp
mov
mov
push
decb
xchg
xlat
bound
add
xor
mov
add
mov
xor
dec
pop
add
mov
pop
add
dec
jnp
cmp
adc
mov
leave
adc
push
je
add
inc
clc
sbb
imul
aad
inc
mov
cmp
jo
mov
insl
add
mov
push
cmc
shr
xorb
sub
pop
outsl
popa
mov
adc
xchg
xchg
push
test
sti
cmp
mov
leave
adc
or
sbb
std
pop
in
aad
pop
scas
loope
fdivs
mov
ds
dec
xlat
adcl
call
pop
adc
outsl
pop
fbstp
sbb
mov
push
daa
fldl
ds
jne
aas
inc
pop
incl
lock
out
xor
and
mov
xor
iret
mov
or
push
push
je
add
insb
and
xchg
iret
add
fildl
or
cs
test
dec
loope
aam
jae
pop
gs
mov
or
ret
leave
add
into
jno
push
xor
mov
and
push
add
data16
add
out
add
push
pop
into
pop
loope
orb
psubsw
daa
pop
cmc
sub
aam
cwtl
into
sar
adc
or
js
popf
jne
mov
leave
sbb
jns
orb
inc
mov
pop
nop
imul
fwait
lods
xchg
mov
ds
adc
aas
bound
or
test
rcrb
jae
icebp
movsl
popf
mov
xchg
insl
or
or
repz
push
xchg
pop
dec
ja
loope
push
mov
mov
movsl
ret
out
mov
inc
pop
nop
sahf
pop
mov
xchg
fisubrl
cmp
roll
int3
orl
fisttpl
sar
cld
xchg
adc
stos
repz
aam
flds
add
mov
cwtl
or
add
imul
or
test
xor
or
addb
cwtl
mov
dec
mov
add
add
xor
rclb
pushf
iret
add
mov
iret
aad
inc
cs
sti
push
test
es
enter
jg
fbld
add
in
xor
imul
cs
movb
and
xchg
add
sbb
dec
enter
inc
add
pop
mov
dec
imul
dec
in
cld
add
sbb
cmp
add
call
out
lea
dec
fs
add
into
insl
rcl
and
or
sbb
sub
add
xor
dec
std
jo
add
or
pusha
jo
dec
clc
sbb
inc
inc
cld
stc
adc
stos
cmpl
mov
lret
dec
and
rorb
insl
or
repnz
frstor
add
pop
fildll
clc
cs
xor
cmc
mov
push
push
out
fmuls
adc
jg
aam
sbb
rcr
mov
sub
hlt
ja
adc
inc
jp
xlat
ss
cmpsl
push
jbe
pusha
repnz
xor
sub
movsb
sbb
cwtl
xchg
loopne
pop
add
xor
out
lods
mov
pop
nop
dec
mov
push
sub
push
mov
movsl
lds
xor
scas
jne
sub
xlat
xchg
sub
inc
sbb
jmp
xlat
aas
rorb
imul
and
add
stos
test
xchg
add
rcll
push
std
test
adc
fs
fisttpl
jo
aam
sbbb
testb
es
scas
incl
xchg
xchg
inc
movsl
andb
push
mov
jnp
pop
lods
add
sub
iret
and
mov
test
je
adc
and
mov
scas
adcl
or
and
stc
xlat
in
xchg
int3
in
popl
daa
push
pop
jb
das
mov
push
and
dec
pop
notb
dec
clc
arpl
push
outsb
enter
lods
jno
sbb
push
and
out
push
and
mov
adc
lahf
add
mov
mov
outsb
movsb
bnd
fildl
pusha
push
push
mov
popa
push
rcl
loop
mov
sbb
addl
repz
mov
pop
mov
mov
sbbb
fidivs
sbb
jmp
lock
imul
fistpll
popa
mov
lods
pop
lret
inc
in
cmp
js
sub
jmp
in
std
cmp
arpl
out
mov
cltd
xchg
jb
jb
xchg
push
out
mov
push
or
pop
jg
mov
fcmovne
adc
mov
adc
test
bound
das
mov
enter
popf
pusha
mov
inc
xchg
bound
pop
cli
or
add
xchg
add
popa
pop
add
xor
les
outsb
mov
or
add
jg
mov
ljmp
scas
jl
add
fcompl
mov
add
push
mov
mov
shrb
lock
mov
in
lahf
jo
add
xor
cmp
inc
mov
or
dec
rol
add
sub
mov
jnp
or
add
pop
int
mov
mov
mov
sub
daa
pop
incl
mov
and
fsubr
sbb
insb
test
test
daa
mov
xchg
pusha
cmp
and
sbb
push
ljmp
mov
and
js
test
orl
add
rcrb
outsb
xor
scas
and
sbb
jb
adc
add
or
mov
test
outsl
or
inc
xorl
incb
in
pop
add
je
push
add
das
mov
repnz
add
stos
dec
dec
add
pushfw
mov
jg
js
add
aas
int3
mov
add
pop
scas
scas
adc
pop
mov
add
xchg
jnp
insl
sub
push
popa
incl
daa
pop
push
add
loopne
cmp
mov
push
daa
fst
push
inc
sub
pop
stos
sbb
lcall
popa
mov
mov
add
shrb
lea
pop
test
daa
pop
xchg
pop
fistl
inc
fsubr
mov
imul
pop
mov
test
subl
mov
gs
xchg
sbb
mov
ret
and
sub
nop
dec
dec
cltd
pop
lods
in
push
aaa
les
push
cmp
pop
cwtl
pop
fists
xchg
cmp
push
pop
loop
add
jnp
mov
push
js
xchg
add
sbb
or
lods
jo
adc
pop
adc
out
sbb
inc
push
push
loope
adc
jb
popf
aad
lods
pop
data16
adc
inc
arpl
jg
cmp
mov
sbb
shlb
add
bound
out
push
fdivrs
xor
inc
jle
add
mov
xor
out
cs
and
add
lcall
jnp
mov
xchg
rolb
dec
cmp
in
es
sub
scas
cmpb
or
or
repnz
movsb
xchg
add
dec
cmp
pusha
xchg
aam
xchg
and
jmp
push
leave
sbb
adc
test
inc
mov
sbb
dec
in
dec
clc
ret
dec
pop
mov
js
mov
mov
jecxz
lds
fsts
adc
leave
or
sarb
ja
mov
enter
adc
add
inc
and
mov
dec
dec
add
xor
in
stos
adc
nop
mov
aad
rorl
jmp
adc
ljmp
add
push
hlt
out
mov
ds
inc
or
lahf
jmp
leave
aad
in
fwait
xchg
cmp
pop
xor
add
cmp
gs
minps
and
add
movsb
cmp
mov
pop
ss
pusha
lods
and
cmp
mov
or
dec
cltd
test
fidivrl
or
inc
rolb
cmp
add
xor
push
out
imulb
loopne
ret
lea
adc
cmp
pop
sbb
dec
repz
addl
add
mov
cld
sub
jp
push
cld
stos
push
mov
xchg
inc
mov
ret
outsb
or
or
das
mov
jmp
xchg
or
pop
pop
xchg
loop
and
mov
push
push
nop
sti
ds
or
daa
and
ds
or
icebp
mov
das
add
mov
xchg
sarl
adc
or
add
nop
add
xchg
rcr
call
jg
int3
fwait
add
push
inc
push
sub
cmc
jns
dec
xchg
xchg
push
sti
icebp
cli
adc
and
rcll
cwtl
fwait
push
call
mov
and
lock
movb
pop
or
sub
fildll
adc
adc
in
mov
mov
jecxz
pop
dec
into
mov
inc
cltd
out
repz
pop
loopne
sbb
pop
repnz
mov
mov
dec
push
loop
jne
aad
lcall
xchg
fadds
outsl
mov
gs
in
stos
push
fnstsw
ss
and
mov
adc
pop
movsl
out
aas
cmc
jg
hlt
cli
imul
pushf
in
inc
or
or
or
shrb
and
jbe
mov
mov
sbb
adc
js
xor
wrmsr
lret
pop
jne
sub
lock
inc
xchg
inc
push
sub
dec
dec
inc
add
and
cmp
dec
cwtl
les
mov
pop
cmp
push
xchg
jne
rclb
xchg
push
adc
leave
enter
sahf
test
fdivr
inc
gs
push
mov
inc
hlt
in
cwtl
pop
add
aas
sti
fs
ljmp
cmpsl
incb
mov
pop
movsb
shlb
and
dec
pushf
adc
mov
cs
pop
repnz
shrb
mov
push
add
rcr
insl
xor
test
add
jo
lea
fwait
in
sub
add
lock
jg
mov
jnp
hlt
pop
dec
in
pop
cld
adc
and
adc
push
push
out
lcall
daa
lock
inc
inc
add
test
add
cmp
jno,pn
add
sbbl
jge
sbb
add
rcrb
inc
adc
mov
dec
lret
mov
test
mov
adc
js
xlat
and
jne
or
stc
inc
inc
and
sbb
jo
jge
cmp
or
adc
jbe
pop
xor
adc
loope
adc
xchg
or
pop
sarl
js
imul
test
mov
popf
addl
test
mov
mov
jno
fbld
fwait
aam
xchg
mov
sub
in
or
shrl
jmp
jae
int
int3
mov
add
jl
jo
lcall
adc
dec
inc
mov
mov
sub
fs
je
rorb
sbb
lea
mov
js
aad
dec
sbb
mov
aad
divb
inc
inc
dec
mov
in
insb
and
and
stc
imul
mov
mov
outsl
hlt
xor
hlt
subl
mov
mov
loop
adc
pop
sbbb
pop
mov
stos
daa
xor
js
int
insl
pop
leave
cmp
shlw
mov
out
push
sbb
ret
cmp
mov
dec
nop
dec
into
jge
add
cmp
push
shlb
sbb
imul
jno
or
pop
xchg
outsl
cmp
pusha
xor
adc
sub
cmp
cmp
mov
sahf
mov
and
and
pop
push
test
cmp
dec
cmp
ds
loopne
loopne
xchg
xchg
dec
out
cmp
cmp
mov
and
dec
das
jg
pop
out
add
int3
jg
enter
and
jmp
and
sbb
adcl
xor
lock
pop
push
mov
jne
pushf
lds
mov
inc
push
inc
mov
stos
mov
add
xchg
mov
pusha
adc
popf
mov
xor
add
sbb
push
sbb
add
dec
mov
popa
add
lret
add
cmp
js
aad
or
pop
xchg
clc
pusha
and
cmp
sub
add
xor
inc
test
or
popf
xchg
xchg
outsl
jae
mov
mov
sbb
in
pop
imul
vaddss
fstpl
packsswb
adc
ret
int
incb
and
xchg
adc
in
dec
sarl
mov
or
jbe
cmpb
push
jecxz
mov
aas
push
xchg
fs
cs
aam
ljmp
repnz
inc
add
cmp
stos
add
fnstcw
jns
popf
push
pushf
or
sbb
add
or
sub
sub
and
pusha
pop
stos
mov
lea
xchg
stc
incb
mov
fsub
lods
mov
add
ret
dec
stos
lret
jle
adc
test
shl
xchg
add
sub
nop
test
int3
loopne
xchg
jae
movsl
ffree
aas
or
adc
clc
aas
hlt
xchg
mov
bnd
xchg
lock
dec
inc
lret
mov
jb
sub
je
rclb
add
jo
sbb
adcl
aam
daa
adc
mov
inc
cli
lods
add
cmp
int3
leave
adcb
roll
ret
loope
ds
testb
dec
xchg
push
add
xchg
in
mov
inc
enter
leave
mov
mov
fcomps
jb
add
nop
push
cmp
scas
subb
mov
daa
lret
dec
test
cmpsb
lds
xor
push
and
ja
mov
sub
adc
fiadds
dec
jo
sub
fwait
add
shlb
aad
push
mov
icebp
loopne
aas
pop
sub
mov
inc
in
or
lock
push
jl
adc
icebp
pop
adc
les
pusha
push
inc
mov
cmp
insb
int3
je
sub
mov
dec
pop
test
loope
enter
and
shrl
pop
ds
mov
ja
xor
or
sarb
pop
push
mov
pop
xchg
or
ret
es
push
ds
in
adc
or
insl
fnsave
dec
pop
lods
jle
pusha
jle
nop
xchg
pop
pop
pop
out
mov
stc
jns
adc
xchg
std
imul
and
jb
sbb
daa
xor
mov
movsb
lds
xor
jbe
push
pop
imul
ljmp
ja
rcr
and
sbbb
cwtl
repnz
outsl
jp
or
jbe
fst
testl
push
cmp
adc
stc
enter
sub
push
add
lcall
bound
sub
push
call
jp
push
sarb
loopne
daa
and
cwtl
xchg
cwtl
out
fsubl
out
into
xchg
stos
rep
add
dec
or
adc
push
inc
std
mov
pop
xchg
add
xchg
xlat
mov
dec
out
jmp
ret
cmp
or
adc
outsb
xchg
sub
push
jp
push
cmp
andl
test
loope
pop
sub
nop
cmp
inc
cmp
lods
adc
cmc
lcall
loop
adc
xchg
dec
dec
pop
insl
imul
pop
jecxz
insl
xor
sbb
ret
push
or
dec
adc
sahf
xchg
rorb
xchg
xchg
jnp
mov
mov
aaa
out
and
out
shr
push
ja
xor
jb
stos
and
sbb
ret
pop
cld
roll
dec
xchg
aad
cmpsl
add
stos
in
hlt
in
repz
mov
push
ljmp
mov
test
sub
add
add
out
je
mull
dec
xchg
cmc
das
xchg
sub
mov
sbb
add
loope
pusha
je
das
mov
dec
pop
push
stc
test
jmp
pusha
scas
les
lcall
in
xchg
sub
pop
mov
jno
sub
and
mov
fstpt
mull
int
pop
pop
mov
add
xor
dec
int3
in
inc
jg
int
js
or
xchg
and
in
shrl
stos
dec
xor
iret
cmp
pop
cmp
idivl
dec
inc
add
clc
sti
xchg
push
xchg
push
je
inc
scas
hlt
insb
add
dec
mov
add
rcll
pop
test
sbb
sti
rol
sbb
mov
aas
rorb
daa
fldcw
test
xor
mov
stos
lret
mov
ljmp
add
jmp
mov
push
add
mov
and
out
inc
jl
fiadds
or
jle
or
xor
fadd
in
in
test
xchg
xor
jp
hlt
xor
pop
je
push
pushf
arpl
stos
dec
cmc
add
lret
and
or
pop
lock
push
jbe
in
outsb
sarl
mov
imull
or
roll
mov
pop
pop
xor
pushf
xchg
pusha
loopne
sub
add
jae
dec
leave
and
cmp
dec
addr16
add
fidivrs
mov
and
pop
dec
repz
jmp
insb
scas
jo
jae
xor
cvttps2pi
hlt
or
mov
call
data16
out
lods
push
or
ja
loope
subb
or
iret
scas
or
aaa
aam
add
shll
cmpsb
jl
sub
test
jns
push
pop
push
push
jne
xchg
cmc
cmp
imul
scas
cmp
mov
and
dec
out
dec
insb
jmp
mov
xor
fmull
addb
in
ss
cli
enter
fsubrl
loop
ja
iret
xchg
fidivrs
lds
adc
lods
and
fldl
mov
sbbl
sub
mov
xchg
pop
push
lahf
jp
jecxz
jmp
imul
int
sub
outsl
and
push
arpl
pop
mov
pop
mov
dec
and
stc
pusha
and
ss
enter
push
and
jp
inc
lods
std
or
inc
out
push
xor
adc
mov
insl
mov
testb
jl
add
add
fs
add
or
mov
add
subl
loop
ja
mov
arpl
add
out
xor
out
rolb
mov
jmp
int
int3
jno
loope
shlb
popa
movsb
mov
push
jmp
rolb
inc
leave
adc
ja
adc
sbb
lahf
cmc
js
ja
push
cmpsb
mov
mov
cmp
ss
lock
int3
jae
das
xchg
pop
in
sbb
jnp
inc
mov
push
test
js
add
add
call
sbb
mov
shl
xor
scas
ret
pop
faddl
arpl
aad
lcall
hlt
sub
adc
fwait
add
test
pop
mov
and
cmp
shll
sbb
mov
pushf
ljmp
push
xor
scas
add
sub
jge
cmp
inc
cmpsl
cmc
fwait
addr16
jmp
popf
dec
rcrl
sbb
loope
mov
fprem
or
fidivs
and
dec
jbe
int
jno
addb
jecxz
pop
mov
iret
js
insl
in
das
xchg
int3
daa
xchg
pusha
loopne
and
inc
lods
sbb
fildll
mov
add
jg
pop
jne
mov
addl
and
jg
jp
jl
sub
push
pop
js
sbb
out
pop
lahf
mov
inc
popf
fiaddl
jmp
leave
adc
add
cmp
std
dec
ljmp
sub
bndldx
jecxz
and
sbb
sbb
jp
orb
jmp
ret
jge
pop
mov
mov
dec
xchg
jae
test
mov
dec
gs
add
pop
or
sbb
xchg
pop
add
in
inc
or
sbb
cmc
int3
stc
dec
and
pop
pop
push
adc
mov
jmp
lods
adc
add
xchg
xor
inc
adc
or
aas
cmp
lods
mov
xchg
or
pop
mov
add
outsl
mov
and
cmpsb
cltd
testl
push
jl
push
test
pusha
mov
cmp
mov
stos
cs
icebp
or
leave
xchg
mov
ja
test
lret
push
out
test
sub
add
loopne
movsb
add
out
cmpsb
lea
inc
lret
jp
daa
loop
cmp
enter
test
shl
dec
dec
mov
in
push
sub
or
enter
add
lret
dec
iret
cld
cmp
int
mov
xchg
sbb
jle
or
jecxz
adcb
jno
add
add
in
imul
sub
test
push
inc
xor
pusha
inc
jns
xchg
lcall
dec
stos
or
jmp
ljmp
subb
cltd
cmpl
inc
js
jo
jmp
sbb
movb
aas
loopne
xorb
arpl
add
add
pop
sub
add
push
test
cs
test
incl
or
xor
xor
jno
das
pop
or
iret
push
xchg
fimull
xchg
loope
and
addl
test
push
jb
xchg
stos
cmp
subl
cs
pop
sti
pop
int
cmp
stc
pop
mov
aam
cltd
stos
mov
jbe
test
cmpl
pop
out
call
sub
add
pusha
cmp
pop
hlt
test
outsl
addb
xchg
mov
xor
in
bound
loopne
dec
dec
cmp
out
add
cmp
xchg
fbstp
loopne
xor
sbb
xor
and
jp
mov
in
test
dec
mov
test
mov
push
adc
shrl
mov
daa
adc
mov
pop
sbb
and
pop
mov
fmuls
sbb
cs
loopne
in
inc
or
xor
dec
pop
in
div
dec
pop
pop
sbb
pop
xchg
mov
dec
pop
fsubrp
lods
jbe
xchg
pop
sub
int3
cmp
aad
xchg
pop
jns
fnstsw
xchg
mov
dec
cld
mov
ret
and
imul
fldl
pop
test
cmc
mov
aad
stos
add
cmp
push
popf
lahf
or
loopne
idiv
imul
das
jp
mov
scas
movsb
shll
pop
lret
jae
mov
addl
rcr
enter
add
movsb
mov
adc
shll
shrb
or
and
mov
pop
aad
pop
fisttps
scas
int3
jmp
dec
pop
enter
pop
outsl
lods
pushf
add
aad
cmpsb
popf
pop
popf
xchg
paddusb
sahf
into
pop
sub
add
insl
addl
ja
lar
push
popa
ljmp
jb
in
add
xor
lods
sbb
lods
inc
sahf
jge
loope
insl
ss
pop
mov
push
jmp
js
sbb
cmp
and
or
cmp
add
jge
pop
pop
jle
mov
mov
fmuls
dec
mov
xor
lods
sahf
jb
xchg
aad
aaa
cmp
call
cmp
or
inc
dec
push
outsb
or
out
inc
and
xchg
inc
sahf
mov
xor
adc
cmp
das
outsl
mov
fs
lds
popf
cs
pusha
lods
iret
and
adc
xor
push
xchg
enter
dec
das
inc
daa
sbb
mov
outsl
jmp
aas
pop
rcl
imul
inc
mov
int
imul
outsl
jmp
mov
outsb
inc
fstps
les
aaa
in
icebp
test
sub
add
pop
insb
jge
sbb
mov
rcrl
mov
adc
xchg
inc
cmp
popa
loope
pop
add
cmp
or
mov
mov
cmp
fs
popl
fwait
jns
and
inc
lcall
push
movsb
or
dec
cld
mov
xchg
shrd
mov
out
popa
xchg
push
adc
add
and
inc
rcl
inc
mov
stos
dec
cmp
dec
ljmp
or
xchg
xchg
mov
xor
xchg
adc
dec
ret
or
and
pusha
xchg
dec
adc
cmpl
sub
mov
orb
sahf
sbb
pop
push
in
sbb
fidivrl
out
decb
mov
clc
and
andb
inc
jmp
mov
cmova
aad
push
sub
and
loope
or
adc
push
ret
call
pop
jg
lods
push
push
stc
and
fcoms
sarb
loopne
inc
or
add
lret
jmp
pop
stc
rorl
out
jne
fmulp
add
xor
mov
adc
jne
inc
dec
arpl
incl
jae
in
sub
loopne
add
mov
verr
fisttpl
adc
pop
add
fnsave
adc
xor
cmp
mov
xchg
cli
add
cmc
loopne
xchg
push
dec
push
mov
fwait
mov
and
jle
cmp
fstpl
imul
push
add
ds
and
pop
mov
outsb
subl
je
jo
lret
mov
adc
and
je
xor
mov
adc
pop
dec
and
inc
ret
adc
roll
test
sbb
push
xor
bound
add
pop
dec
enter
xor
lock
or
cwtl
jo
mov
jnp
call
mov
push
cmpb
jle
cwtl
data16
in
or
imul
cs
rcr
out
add
sti
mov
testl
mov
dec
into
mov
jo
and
out
sub
dec
into
xchg
push
pop
sub
dec
cs
cli
mov
das
or
mov
out
push
mov
sbb
pop
cs
loopne
and
je
cmp
nop
cld
les
aas
mov
push
sbbb
jae
repnz
or
mov
push
mov
and
cmp
xchg
sub
fisttps
and
adc
js
adc
sbb
rorb
push
and
mov
shl
jg
les
mov
outsl
loope
imul
inc
or
pop
jns
xor
out
adc
aad
xor
adc
and
or
cmc
push
popa
lahf
loopne
lds
cmp
test
sbb
sbb
add
or
and
rorb
imul
pop
fstps
test
stos
pop
mov
xchg
jp
daa
push
cmp
mov
sub
mov
adc
pop
call
sti
dec
vbroadcastsd
ja
stc
int
add
scas
out
rclb
cld
mov
lods
pop
xchg
mov
jl
repnz
int3
mov
int
ja
cmp
inc
movsb
jmp
xchg
mov
pop
leave
test
jge
inc
xor
mov
mov
jno
andl
scas
cld
dec
xchg
scas
add
sub
stos
dec
mov
pop
and
enter
push
in
popa
sarb
bound
ds
push
imul
mov
adc
repz
in
outsl
mov
xchg
out
sbb
adc
xor
arpl
out
addb
movsl
bound
popf
orl
jg
ljmp
stos
jle
notl
orl
cmp
pop
inc
dec
lcall
imul
lcall
popa
inc
jb
adc
jg
loopne
aas
mov
inc
ja
add
aad
push
cmp
sbb
movsl
sub
mov
aas
sub
mov
mov
pop
adcl
out
test
add
in
mov
addb
mov
leave
pop
loope
dec
and
or
movl
popf
xchg
iret
mov
push
ud0
add
or
sbb
add
scas
adc
mov
add
cmp
scas
cld
cmpsl
and
and
cmp
xor
rep
push
lods
xor
jecxz
and
in
popa
mov
mov
iret
inc
test
fldl
cmc
push
arpl
mov
xchg
inc
xor
jg
add
bound
adc
mov
fldl
movb
pop
clc
in
movsb
or
add
loopne
mov
in
inc
push
mov
jno
fwait
mov
stos
mov
subl
or
inc
mov
sub
ds
mov
add
testb
sbb
xor
add
sub
or
roll
adc
jo
fsts
jle
mov
mov
xchg
or
ret
pushf
cmp
or
enter
stc
sbb
movsl
xor
sub
rorb
pop
aam
push
push
nop
push
cmp
inc
pop
enter
lock
jae
jne
cli
and
push
and
jne
or
ljmp
jmp
add
adc
mov
pusha
jge
push
push
call
push
sub
test
push
and
mov
jecxz
call
leave
ret
mov
sbb
adcl
inc
out
pop
pop
pop
out
sahf
push
push
push
movl
dec
add
ds
sbb
cs
xor
or
jae
cltd
or
filds
sti
push
adc
add
xor
add
xor
add
xor
add
inc
andw
sbb
and
mov
jo
scas
mov
push
mov
ds
sub
or
xchg
pushl
fwait
lret
sub
adcl
adc
call
popa
orl
add
cld
and
cltd
or
cmp
xor
adc
add
push
adc
adc
icebp
pop
dec
or
xor
xchg
sub
sub
adc
clc
mov
inc
add
out
test
shrl
push
jae
cmc
test
aad
or
das
adc
xchg
sbb
jmp
out
pusha
pop
add
adc
sti
and
adc
invd
daa
loopne
outsb
lret
mov
inc
add
jmp
ds
in
sbb
sbb
jle
adc
pop
out
je
mov
push
add
dec
push
and
adc
lea
sbb
mov
pop
push
xchg
into
sub
fstps
push
add
add
je
pop
stos
stos
sbb
and
nop
cmp
and
les
leave
sbb
or
add
rep
repnz
pop
pop
dec
pop
out
sub
sub
and
xchg
pop
xor
dec
adc
stos
dec
scas
mov
inc
inc
push
cmp
test
xor
push
and
dec
inc
xchg
lret
inc
jmp
and
add
inc
int3
test
loop
inc
xchg
xchg
sarb
pop
test
push
mov
shrb
jns
rcrb
push
sub
and
mov
inc
inc
adc
and
adc
lret
adc
add
mov
clc
add
dec
xor
mov
add
lea
in
aam
mov
or
call
sub
sbb
or
lcall
xlat
pop
or
pop
inc
xlat
rcrb
fwait
dec
ljmp
das
neg
xor
or
xchg
lock
mov
test
jg
lds
mov
add
lcall
or
add
xor
and
add
sbb
popa
cs
sbb
daa
xor
or
xor
mov
xchg
jne
out
push
call
sbb
mov
sub
dec
bound
shrb
mov
es
call
gs
add
xorb
jg
jg
pushf
push
inc
or
daa
adc
xchg
int
inc
psllq
es
mov
inc
adc
mov
cwtl
xor
mov
aam
and
or
leave
cmp
loope
call
dec
sub
sbb
jmp
pop
jmp
sub
jns
cwtl
inc
aad
call
sub
mov
xchg
adc
push
and
jns
stc
rol
xor
lret
mov
mov
pop
xchg
add
cld
cld
inc
push
and
dec
daa
cwtl
cmp
mov
adc
xchg
into
test
jmp
and
cmp
or
pop
and
mov
mov
jno
or
incl
sub
out
idiv
in
or
lahf
clc
push
imul
push
push
sahf
jnp
rcll
lcall
sub
in
mov
cmp
add
sbb
or
out
mov
jl
int3
pop
mov
bound
push
adc
pop
pop
test
add
mov
pop
or
push
mov
or
pop
cltd
cltd
lea
mov
subl
jns
int3
jge
adc
hlt
addb
push
out
xor
adc
lods
inc
push
popa
lock
lcall
cwtl
mov
sub
ja
sbb
nop
das
test
sub
enter
repz
div
mov
cmp
jmp
cli
ror
xchg
dec
mov
stc
push
or
add
mov
dec
add
xor
test
sti
comiss
push
xor
adc
pop
sub
orb
jg
orl
and
adc
sbb
in
iret
sub
inc
push
xlat
add
testb
aaa
addb
sti
pop
adc
or
or
add
hlt
lcall
sub
test
and
and
push
and
mov
or
pop
xchg
mov
adc
clc
daa
inc
test
xor
mov
lods
ljmp
push
test
mov
jle,pt
lret
xchg
add
mov
add
aaa
adc
sti
jge
and
add
ret
ljmp
add
icebp
sbb
mov
or
and
and
xlat
sbb
or
stc
jb
add
xor
xlat
jg
add
insb
cs
add
push
xchg
cmpsl
add
out
fs
ret
imul
in
lods
cltd
sbb
jmp
aas
inc
adc
data16
inc
fcmovnu
add
xchg
int3
iret
mov
jno
lcall
push
and
outsb
in
mov
push
add
sbb
addl
aaa
je
lods
dec
orb
jecxz
mov
clc
shl
add
xchg
imul
icebp
inc
add
mov
rcrb
dec
pusha
mov
or
dec
add
fcompl
lods
sub
mov
add
outsb
jecxz
mov
add
mov
xor
cld
xchg
in
sub
pop
repnz
jp
mov
ss
dec
cwtl
fistpll
add
ret
sbb
cs
cmp
sbb
popf
shl
imul
inc
sarb
jmp
inc
pusha
add
outsl
loop
add
pushf
inc
mov
dec
mov
in
jnp
mov
aaa
pop
jmp
ja
ja
add
pop
lcall
repnz
inc
fcmovu
add
ret
and
sub
mov
loopew
or
add
lahf
mov
push
mov
out
and
add
lods
and
add
mov
push
xchg
xor
loopne
ud0
sbb
cmp
push
das
add
adc
jb
mov
in
outsl
lcall
mov
sbb
dec
jae
or
cmpsb
xor
inc
sbb
xchg
mov
les
imul
cwtl
enter
mov
or
xchg
lock
pop
lds
push
sbbb
push
sahf
add
dec
or
cmp
mov
xchg
xchg
testb
dec
and
xchg
loope,pt
and
dec
scas
sbb
les
cmp
fists
pop
cmpsl
pop
imul
pushf
add
xchg
jne
mov
xchg
push
inc
add
jp
mov
dec
or
push
lcall
mulb
aaa
arpl
xor
lods
aas
add
lahf
clc
cli
sbb
xchg
lret
xor
out
jne
xchg
push
test
or
lret
sbb
adc
jne
pushl
push
arpl
rorl
mov
pop
icebp
dec
adc
out
mov
jge
push
sbb
shll
cmpsl
sbb
addb
mov
sbb
cli
pusha
inc
cmp
cmc
enter
jae
mov
add
inc
notb
mov
jbe
add
xchg
xchg
loope
and
jnp
cmp
aas
add
lret
rorl
divl
mov
out
lea
aam
dec
mov
add
add
fsubrs
pop
stos
es
adc
push
test
add
xor
mov
test
pop
pop
add
xlat
adc
or
stc
sbb
into
push
jae
jae
add
dec
mov
hlt
mov
add
dec
sbb
ficoml
repnz
adc
lods
sti
jnp
and
add
inc
pop
imul
lods
cs
mov
ja
into
jle
dec
out
aas
enter
fistpl
sub
inc
sub
mov
xor
adc
mov
or
fiadds
inc
fbstp
mov
lahf
xchg
inc
jae
out
push
or
fbstp
add
shrb
or
mov
add
lcall
xchg
jmp
hlt
push
sub
sbb
sbb
adc
sbb
sub
add
enter
xchg
pusha
int
jne
cmp
sbbb
aad
cmpsl
adcl
mov
or
iret
les
mov
loop
ja
jp
and
push
pop
mov
out
add
dec
test
lods
shlb
cmp
cmpsl
jmp
rcll
xchg
cwtl
add
add
inc
popa
push
or
pop
leave
add
cmp
push
ljmp
add
jg
add
sub
aad
jge
cli
push
or
inc
mov
add
nop
movsb
lock
add
push
call
lea
int3
test
fs
add
add
mov
cmp
xor
sbb
out
cmp
nop
mov
inc
cmp
xchg
add
imul
pusha
or
pop
pop
mov
add
mov
stos
dec
dec
xchg
faddl
jg
imul
bound
adc
push
or
out
add
call
cmc
sbb
out
js
or
pop
jp
int
inc
lret
cld
mov
xchg
ja
clc
mov
aas
jae
add
pop
or
pop
cmpsl
adc
xor
mov
insl
add
or
add
pushf
insb
lret
cmp
fisubrs
sti
and
fdivr
adc
imul
add
scas
inc
mov
or
ja
mov
sub
dec
loope
jnp
sub
mov
push
push
cmc
addb
pop
adc
in
dec
int3
in
xor
test
pop
sbbb
mov
in
add
adc
je
pop
dec
lret
jl
sub
pop
dec
aam
push
push
add
xchg
frstor
add
movsl
adc
and
dec
jecxz
jne
xchg
fwait
push
pop
pop
jae
add
aad
adc
clc
mov
dec
cmpsl
adc
andb
mov
cmp
mov
add
insb
mov
rcr
fdivrl
jg
xor
sub
out
jbe
lods
dec
js
add
dec
insl
or
xorl
xchg
jmp
add
jecxz
jne
out
cmp
jbe
pop
dec
jg
in
jns
jl
dec
adc
mul
and
mov
mov
outsl
nop
les
xchg
push
stos
test
xor
pop
arpl
and
xor
push
sub
add
xor
cmpsl
btc
test
aaa
adcl
les
inc
insl
mov
add
pop
push
arpl
out
sub
mov
gs
in
mov
scas
and
mov
push
mov
pop
add
or
in
dec
into
or
push
dec
loopne
cmp
add
pop
mov
das
xchg
and
orl
inc
jo
rorb
add
adc
cli
bound
inc
lret
pop
rcl
out
int
xor
mov
lock
fiadds
jbe
data16
mov
sub
cld
add
mov
movsl
xor
scas
xor
and
cmp
add
mov
jbe
push
scas
arpl
fbstp
dec
push
movsb
cmpsl
rolb
in
outsb
adc
add
pop
pop
or
nop
xchg
sub
int
mov
or
ret
fdivr
xchg
add
je
cmc
mov
or
xrelease
xchg
push
mov
ja
dec
out
cmp
dec
lods
sub
out
cmp
fwait
mov
cmp
adc
scas
shl
fisttpll
jb
addb
shlb
ja
aas
shll
mov
in
sbb
sbb
lods
shlb
push
repz
nop
push
loope
rorb
or
test
leave
iret
sbb
push
and
cmp
sbb
jb
popa
insl
stos
mov
cli
stos
fmuls
push
lret
out
dec
jb
aad
xchg
mov
sarb
inc
test
in
insl
add
mov
popw
loope
popa
cmc
nop
jne
add
xchg
mov
fcoms
movsb
add
xor
ret
add
addr16
fwait
rcrb
mov
inc
mov
das
in
out
mov
dec
addr16
mov
add
push
sbb
adc
push
test
xchg
imul
add
mov
add
cli
andl
sub
mov
xorb
incl
jb
sti
adc
and
test
jl
push
cmc
or
sahf
sti
jbe
into
add
adc
and
into
push
icebp
and
or
popf
sbb
inc
iret
push
jnp
add
pop
xchg
lods
nop
jns
aam
mov
insb
jo
xchg
loope
inc
sub
sarb
addr16
jo
xchg
lfs
ror
xor
inc
loopne
dec
leave
push
pop
pop
jmp
lahf
ret
inc
dec
inc
push
mov
ret
nop
in
add
repnz
jg
mov
jge
dec
jle
inc
jp
push
mov
adc
test
imul
cmp
jmp
inc
scas
sub
adcb
cmp
push
inc
mov
inc
push
lock
add
push
add
push
lea
test
mov
add
jno
scas
push
test
jns
or
fstps
mov
mov
fadds
xlat
sbb
mov
mov
push
out
pop
push
fwait
popa
les
fnstsw
je
movsl
add
or
int
mov
add
outsl
or
jbe
or
push
add
xor
ret
shlb
fs
xor
stc
je
ret
les
lcall
cmp
sub
nop
dec
js
aaa
es
in
lcall
add
push
pusha
adc
mov
stos
xor
scas
popa
or
mov
ss
out
or
and
jmp
xor
xlat
or
and
add
push
mov
mov
ret
ret
xchg
push
pushf
scas
lret
call
pop
in
jl
movsb
loopne
stos
cmp
jecxz
push
in
xor
movsl
sarl
rolb
int
push
les
repz
push
sub
repz
popa
push
mov
cmpsl
mov
les
or
push
in
aas
das
lods
xorl
je
xor
and
popa
adc
push
stc
rcll
push
inc
nop
test
ficoms
add
push
mov
jecxz
and
stc
es
push
mov
cmp
jge
aaa
sub
std
and
pop
mov
stos
mov
loop
sub
pop
aad
mov
xchg
pushf
and
pop
and
cmp
cmpsb
sub
and
adc
mov
sub
add
mov
sbb
lret
mov
pusha
insb
sub
mov
cmovno
movsb
jnp
add
dec
mov
lret
mov
push
pop
sub
mov
add
cmp
push
sahf
mov
test
sub
andb
jbe
test
jge
mov
ja
aaa
andb
mov
andl
inc
cmp
cmp
add
and
fadds
add
inc
dec
sub
adc
mov
add
stc
fildl
daa
dec
and
cmpsb
hlt
pop
and
das
fs
cmpsl
pop
int3
or
dec
mov
sti
push
lea
add
lods
adcb
add
xchg
inc
jo
in
inc
orl
lahf
sub
mov
xor
adc
sbb
xchg
fs
icebp
push
adc
inc
ss
aaa
add
fcoms
clc
mov
jp
je
int3
jne
mov
jge
jmp
pcmpeqd
or
into
and
adc
push
les
clc
sub
out
inc
mov
mov
mov
rorl
ja
arpl
rcrb
in
jp
imul
or
mov
or
mov
add
sbb
enter
jnp
sub
inc
cs
clc
inc
jbe
sub
stc
icebp
mov
add
and
test
scas
ss
xchg
leave
loopne
mov
push
sbb
pusha
lds
leave
add
sub
fisttpll
sti
cmp
imul
out
or
in
jle
or
push
add
jg
xchg
mov
notl
shlb
mov
jb
out
rcrb
rcll
sbb
pavgw
addr16
inc
xor
mov
cmc
scas
sbb
add
push
add
out
fwait
popa
ret
push
lods
or
mov
or
cmp
jecxz
sbb
ss
dec
test
mov
leave
bound
or
pop
sub
imul
mov
push
xlat
jo
pop
push
imul
mov
and
cmpsb
aad
inc
je
scas
loope
or
add
cwtl
xor
mull
push
adc
and
add
das
cmp
push
movl
adc
xchg
dec
mov
add
mov
jbe
ret
add
adc
add
sub
fadd
stc
lcall
and
mov
movd
pop
imul
dec
lret
push
mov
pop
pushf
mov
in
popf
pop
xor
scas
pop
push
lcallw
pop
mov
jp
in
movsb
mov
xchg
push
add
xor
scas
mov
cmp
inc
negb
pop
std
add
jp
xor
sub
sbb
loop
fcompl
push
mov
pop
add
fwait
add
push
loope
dec
sub
xor
aaa
add
sahf
or
push
outsb
jp
push
int
idivb
mov
les
add
jmp
ffree
loopne
xor
notb
dec
fwait
xchg
add
mov
sbb
add
xor
lods
sbb
mov
incb
enter
loop
mov
jg
jne
loope
push
aad
popa
adc
inc
cmp
xlat
out
inc
add
fisubs
aas
or
push
mov
push
lahf
shlb
imul
jbe
cmp
push
jmp
pushf
incl
xor
sub
addl
addb
and
mov
adc
pop
mov
cmpxchg
dec
lret
jecxz
loopne
psrad
out
pop
cmpsl
push
sub
add
push
into
xchg
dec
add
inc
and
out
sub
outsb
add
or
or
add
adc
pop
sub
add
jg,pn
jl
orb
adc
jns
in
and
sub
andb
and
add
jmp
or
or
xor
pop
cmpsb
push
jno
insb
lahf
add
jge
sahf
inc
loop
add
lgs
adc
mov
je
es
or
sbbb
or
movb
sbb
mov
dec
test
rolb
test
push
fldenv
les
cwtl
mov
push
jp
fwait
push
lods
xchg
scas
dec
cmp
mov
push
or
mov
push
sbb
xchg
xor
inc
mov
mov
ficoms
in
sahf
mov
xor
in
jno
rcl
push
mov
lret
add
and
xchg
and
rcll
out
add
or
in
jnp
xchg
xor
out
or
push
push
cli
xchg
jl
and
push
aad
jno
xor
ret
lock
dec
lret
and
dec
mov
arpl
movsb
mov
sahf
sub
or
in
add
push
pop
pop
lock
cmpsl
push
and
jo
mov
add
insl
hlt
repnz
jb
jne
dec
mov
ret
and
xor
mov
and
les
adc
push
or
push
xor
mov
pop
dec
or
jbe
add
cltd
xchg
and
xchg
inc
mov
jle
push
lret
mov
cmpsl
in
push
fwait
and
or
pop
iret
jecxz
cmp
pop
shlb
pop
ficompl
ss
push
lahf
in
sbb
mov
push
mov
mov
add
push
test
orl
inc
mov
test
jecxz
ljmp
sbb
jmp
aaa
add
enter
ljmp
mov
add
sub
lods
clc
add
jecxz
adc
mov
jge
or
add
cmp
lods
inc
add
js
xchg
dec
orl
sub
sbb
ret
int3
adc
into
push
repnz
cmc
aas
rolb
pop
xchg
inc
lret
in
sbb
fdivr
add
mov
cmp
enter
sbb
ret
add
les
add
stos
dec
mov
pop
cwtl
orb
or
test
push
xchg
pop
adc
add
push
sbbb
ja
out
add
out
xor
stc
pushf
sbb
in
or
cmc
add
add
mov
jns
dec
test
rolb
ret
add
insb
cmp
add
jno
add
cwtl
xlat
mov
fwait
pop
scas
xchg
pop
jge
hlt
jo
dec
add
xchg
jns
mov
or
cltd
mov
jb
pop
pushf
movdq2q
mov
cmp
fnstsw
xor
xchg
cmp
add
jmp
add
dec
insb
jne
xor
loop
mov
loop
pop
pop
dec
push
mov
dec
add
lcall
add
mov
insb
pop
mov
jbe
xchg
mov
inc
pop
lock
cmp
jp
sti
and
call
lcall
inc
bswap
cmp
dec
mov
scas
call
pop
cmp
dec
cmpb
jb
add
or
sarl
xchg
aam
cmpsb
pop
pushf
push
xchg
jno
adc
sbb
ss
fwait
sbb
adc
andb
jge
xchg
or
push
cmp
stos
and
pushf
sbb
mov
lret
test
mov
ja
mov
lahf
xor
mov
dec
out
mov
lock
xlat
inc
and
fcomp
sbb
sbb
and
and
pop
xor
in
ret
inc
loopne
adc
lahf
add
mov
lahf
aam
movb
sbb
cmp
enter
lock
fs
subl
adc
sub
pop
sbb
push
fldenv
and
dec
xchg
mov
cmpsb
dec
jb
mov
dec
call
iret
leave
adc
fucom
or
lret
cmpsb
adc
cmp
daa
xchg
sbb
mov
dec
inc
pusha
lock
out
push
push
or
xchg
add
cmp
repz
js
jo
add
ljmp
cltd
sbb
dec
sahf
or
mov
inc
dec
mov
mov
and
and
pop
in
jle
inc
stos
je
mov
add
pusha
jl
seta
ljmp
aaa
aas
cmp
push
mov
mov
or
jae
ret
setl
loope
dec
test
add
sahf
push
lds
addl
stos
adc
xor
adc
pop
pop
test
inc
jge
cli
mov
gs
inc
adc
or
jle
nop
mov
mov
mov
xchg
cld
lock
sbb
inc
xlat
fs
pop
aaa
dec
jp
jo
bnd
mov
mov
xchg
enter
inc
ret
xor
es
pop
or
add
mov
jmp
or
xchg
jl
add
hlt
dec
fst
inc
orl
scas
push
or
rorl
test
mov
aaa
dec
xchg
leave
xorb
pop
pop
sbb
fmull
shlb
pop
add
jge
mov
inc
daa
pop
and
dec
scas
adc
pusha
dec
fisubl
rorl
cmpsb
adc
shlb
mov
and
int3
add
xor
cmc
mov
jmp
push
pop
scas
loop
dec
mov
aaa
sub
cmp
or
push
mov
enter
jnp
mov
xor
jns
jle
pop
cmc
mov
das
xor
jns
cmp
push
push
popl
mov
adc
mov
shrb
test
adc
shlb
sub
xor
ja
or
fidivrs
in
xchg
dec
add
rcrl
jno
sub
and
xlat
jge
out
add
jbe
xor
add
mov
push
pusha
adc
imul
mov
js
ja
dec
jo
add
pop
fisttpl
aas
xchg
shll
mov
mov
popa
add
and
enter
mov
inc
xlat
or
outsb
xchg
das
iret
jbe
sbb
roll
xor
pop
scas
add
std
faddp
add
pop
mov
inc
shlb
mov
shrl
and
push
rorb
pop
lods
aad
je
add
dec
xor
sbb
fdivrs
or
or
xchg
or
popa
adc
mov
cs
jmp
jns
and
call
add
cli
ret
adc
inc
loop
pop
mov
add
push
sahf
pop
fsubp
ror
scas
and
jl
push
ja,pn
into
enter
and
pop
xchg
stc
int
add
leave
invd
cltd
dec
cmc
add
js
mov
loop
jae
sbb
inc
pop
or
cmp
bound
popa
fisubrs
xchg
aad
mov
add
pop
pop
in
inc
mov
das
push
pop
test
sub
into
inc
push
add
rolb
lock
jnp
mov
and
out
sbb
add
sbb
pop
lea
xchg
and
cmp
sub
add
jle
clc
cmp
daa
xchg
cmpsb
and
mov
test
or
out
pop
add
aad
fwait
add
xchg
insb
in
stos
jg
push
add
clc
push
or
lods
and
push
push
pop
scas
and
rcrb
add
and
add
cmp
dec
push
cld
xchg
jae
add
int
pop
and
iret
rolb
cmp
mov
mov
jo
add
inc
fbstp
cmpsl
xchg
call
lret
cwtl
or
xchg
add
mov
enter
je
xchg
pop
mov
insb
add
lahf
ja
rol
sbb
cld
push
std
cmp
jnp
xchg
cmpsb
adc
insb
popf
add
repz
pop
shld
iret
mov
mov
clc
cmp
loopne
add
push
testl
sahf
add
repz
fsub
sub
test
lret
push
add
mov
add
sub
cmp
add
jne
sub
cmp
pop
sbb
sub
sarl
outsl
push
lcall
pop
or
ljmp
dec
pop
mov
pop
pop
xor
call
pop
arpl
lcall
inc
cwtl
mov
adc
mov
xchg
sbb
test
inc
cwtl
xchg
dec
sub
xchg
jno
cmp
xchg
sbb
xor
arpl
inc
inc
shlb
mov
add
inc
sbb
enter
xor
xchg
mov
call
in
and
add
and
push
inc
lock
sbb
xorl
and
add
repz
xchg
ret
xchg
xlat
mov
and
insl
cmpsb
les
scas
mov
repz
xchg
test
push
pushl
jae
push
add
clc
add
popa
or
jne
add
mov
cwtl
adc
sbb
mov
movsb
sbb
mov
loopne
pop
pop
addr16
cld
add
xchg
add
je
daa
lret
pop
or
and
lds
jl
push
xor
cmp
lret
dec
or
andl
add
jo
push
or
jge
lds
enter
add
sarl
nop
cwtl
pop
cwtl
xchg
mov
mov
xor
xchg
iret
inc
push
xchg
cld
push
add
nop
cmpsb
in
dec
push
cld
rolb
adcl
sub
fs
dec
out
add
pop
jo
add
push
mov
roll
mov
dec
sbb
mov
inc
adcl
lock
pop
and
jne
dec
imul
or
data16
jmp
shlb
and
lods
into
mov
jns
subb
lock
push
add
std
jno
add
repz
xchg
js
arpl
call
jne
and
inc
jmp
stc
dec
and
repnz
popa
inc
inc
loopne
mov
ljmp
sbb
cmc
jnp
cmp
sub
cwtl
pop
mov
lock
cmpsb
inc
popf
sarb
mov
add
rcll
fdivr
dec
add
cwtl
jp
xchg
mov
add
ja
and
test
add
lret
cmp
and
div
stos
popf
lcall
aaa
es
add
cmp
lds
push
in
mov
inc
scas
jns
imul
pop
xor
not
das
sarb
ss
fcmove
clc
imul
mov
pusha
in
add
test
push
addr16
sbb
in
pop
sar
xchg
in
fwait
and
lds
adc
inc
add
sub
aaa
cwtl
add
push
andb
add
sub
insl
jge
add
jne
mov
ror
dec
popa
or
add
dec
ret
rol
and
cmp
xor
mov
rolb
add
mov
mov
hlt
sub
and
pop
inc
mov
in
fdivr
das
sub
mov
adc
rclb
loope
sbb
sbb
xorb
add
dec
fnstsw
sbbb
ja
or
lods
push
stos
fucomp
add
mov
or
outsl
in
push
add
lds
xchg
add
mov
mov
in
testb
add
rorl
lock
add
aas
popl
sub
cmp
scas
inc
in
jle
jmp
pop
jns
fnstcw
jno
out
pop
mov
xchg
fdivr
stos
pushf
add
incb
test
push
push
shrl
push
popf
mov
jae
push
leave
push
sub
scas
mov
and
pop
bound
cwtl
clc
push
sub
sbb
movsb
mov
pop
outsl
mov
inc
xlat
add
sbb
inc
add
cmp
push
loope
mov
data16
into
pop
icebp
mov
cmc
add
leave
add
fbld
jecxz
notl
and
dec
add
push
and
out
addr16
add
test
or
sub
and
out
add
lods
pop
fidivs
jl
mov
pushf
add
or
xchg
rolb
add
mov
lock
add
jbe
sahf
mov
jecxz
add
cltd
push
xor
xor
inc
outsb
aaa
lcall
and
shlb
or
cmpsl
loop
out
xchg
faddl
sbb
enter
push
dec
pusha
movsl
pushf
inc
filds
push
test
mov
add
ljmp
add
adc
and
or
add
pop
jg
jns
stc
lods
mov
bound
fwait
add
enter
add
ja
arpl
and
fdivr
test
stos
imul
pop
sub
lods
ja
add
cwtl
dec
aad
scas
push
pusha
lock
inc
and
idivb
ror
jne
out
add
pop
push
sub
and
jno
stos
insl
fdivr
jns
add
lods
mov
pop
das
lret
ret
inc
fldl2e
arpl
int
mov
in
or
inc
ret
adc
jne
cs
fidivl
cltd
add
cmp
push
rcrl
pop
ss
int
aam
cmp
mov
insb
pushf
push
rcr
rorb
add
mov
add
dec
mov
add
sar
repnz
sbb
add
mov
addl
adc
xchg
pushf
add
pop
movd
cs
jge
dec
mov
fsubl
push
add
mov
jl
lret
push
test
mulb
push
cs
adc
or
sbb
cmpsb
lret
dec
jnp
in
push
popa
fcompl
stc
mov
mov
mov
add
sbb
out
mov
loop
popa
aas
ljmp
adc
lock
loopne
bnd
lds
pop
shll
add
out
lock
or
dec
pop
add
mov
inc
pushf
inc
fisubl
movsb
int3
adcb
add
es
cld
sbb
nop
dec
add
shrl
inc
shll
pop
cmp
shlb
call
fistpl
popa
sub
pop
jge
inc
add
test
gs
add
jne
fsts
lds
add
stos
push
test
rcrb
mov
fisttpll
adc
mov
std
and
pusha
sbb
roll
daa
ds
add
jne
push
inc
add
mov
in
loop
mov
jo
add
test
lock
rolb
pop
cld
inc
je
cwtl
and
das
jns
cmp
incl
inc
cmpsb
adc
adc
cld
fstl
push
in
roll
cmp
mov
adc
add
jns
fldt
data16
addr16
adc
add
mov
dec
adc
lret
dec
add
mov
pop
add
pushf
ret
lods
stc
int
loope
fcoml
jns
sub
jmp
mov
arpl
xor
insb
ljmp
xchg
lahf
cwtl
repz
daa
add
jnp
sub
fidivrl
add
add
cmc
push
mov
add
add
xchg
shrl
mov
ds
test
sub
lods
shlb
cmp
dec
cmp
adc
inc
cmp
pop
add
and
push
jno
mov
mov
popf
shl
adc
fadds
and
fidivrl
pop
fildll
lods
mov
cmp
outsl
mov
add
sbb
add
mov
add
add
pop
gs
lods
jl
stos
dec
fwait
add
mov
jp
mov
jmp
cwtl
fcoml
roll
mov
aaa
out
pop
adc
add
enter
add
sbb
jp
lods
add
xor
addb
adc
sbb
gs
jl
aaa
out
jmp
dec
add
cmp
add
hlt
dec
mov
jg
mov
xor
push
mov
inc
jl
add
cmc
pop
mov
add
mov
mov
lret
push
cwtl
or
adc
in
adc
jecxz
xor
jg
cld
xor
test
shlb
popf
push
in
push
int
add
loopne
pop
mov
out
jno
add
cmp
and
pop
test
rorb
roll
sbb
in
fwait
adc
xorb
sbb
cld
pop
cmp
xchg
loopne
fninit
inc
adc
sub
aas
cmp
pop
pmaxsw
adc
jne
add
imul
fadds
sbb
imul
ret
cvtdq2ps
cmp
mov
dec
add
mov
jl
ljmp
inc
mov
dec
pop
mov
dec
les
or
icebp
cld
hlt
addl
push
pop
in
movsl
stc
or
add
fsubrs
cltd
or
aas
in
pusha
jle
push
mov
rolb
pop
push
adc
orb
das
test
jns
add
test
jns
dec
push
push
add
repz
rorb
insb
aad
mov
aaa
add
icebp
das
stos
mov
adc
les
popa
je
push
sti
add
mov
hlt
lcall
jmp
add
cs
cwtl
sbb
sti
add
cmp
mov
hlt
xor
add
jb
lcall
sbb
mov
inc
adc
adcb
mov
cmp
xchg
pop
movsb
sub
add
stos
dec
xor
mov
xchg
push
sbb
test
andl
loopne
or
ds
fs
xchg
push
push
xor
test
pusha
jnp
pop
out
pop
sbb
adc
daa
pop
adc
add
fiaddl
inc
push
iret
adc
aad
insl
jge
or
add
push
or
sbb
mov
push
mov
cltd
fmulp
add
push
in
popa
js
jg
test
imul
pop
orl
lret
mov
and
in
add
cltd
test
sbb
leave
shll
ljmp
push
loopne
aas
adc
add
lea
add
inc
jnp
mov
inc
add
cs
mov
shrb
jl
dec
xchg
jp
sub
mov
ja
addr16
add
gs
repnz
cwtl
push
add
jns
pushf
and
cmp
pop
popa
add
add
pop
out
dec
cltd
add
xor
in
fsubs
aas
fucomi
or
shlb
add
mov
add
cmp
or
inc
add
push
pop
jecxz
fsubl
rolb
outsb
or
ss
mov
bsr
clc
and
repz
jbe
repz
ret
testl
gs
cli
mov
add
xor
fldcw
jp
orb
repnz
out
fcmovne
jns
js
mov
push
addb
push
xchg
adc
bound
dec
pop
add
sti
jle
ss
mov
scas
mov
imul
and
pop
push
popf
fnstcw
test
jg
jmp
mov
jno
cld
pop
add
cltd
shll
add
push
push
mull
imul
cmp
jle
add
stos
push
adc
add
roll
int3
lea
sbb
scas
fistps
cmp
sbb
js
das
xchg
test
lds
cmp
add
ljmp
add
sub
fadds
ljmp
orl
cmpl
add
lret
imul
divl
xor
push
arpl
addr16
loop
pop
inc
sub
stos
divl
jne
ret
or
fcomps
add
notb
mov
sub
jecxz
std
inc
loop
add
loop
mov
aas
add
and
xchg
test
mov
hlt
mov
push
notl
jbe
push
add
add
lea
add
lods
fwait
cmp
popf
add
ds
rcl
add
mov
cmc
add
aam
sti
js
sub
add
fidivrl
popa
nop
lret
enter
aam
and
dec
fsub
das
add
imul
in
test
or
cmp
add
fs
hlt
ds
fimuls
out
jbe
clc
mov
fbstp
fildl
add
and
and
pcmpgtw
push
iret
cmpsl
popf
mov
inc
fists
add
aad
out
or
fcomps
push
loopne
les
sbb
andb
and
sub
jo
stos
sub
js
inc
push
decb
mov
cli
out
in
cltd
pop
sub
dec
cmp
popf
xchg
ffreep
add
sub
sub
jns
add
add
cwtl
ret
xchg
xor
add
add
cmp
mov
addb
scas
loop
push
dec
js
out
mov
fadds
pop
sbb
ficompl
add
sub
mov
nop
fdivs
cld
jno
mov
pop
jb
cmp
inc
xor
dec
insb
push
subb
jle
add
js
movsl
mov
lcall
sub
adcl
jae
add
lahf
sub
and
inc
lret
fisttps
xlat
pop
jp
adc
cli
inc
sub
aad
dec
js
push
rclb
jo
pop
push
shl
dec
cmp
mov
mov
pop
sub
add
fsubl
mov
jle
push
cmp
aas
cmpb
jmp
or
add
dec
in
shll
cmpl
mov
add
daa
jg
sbb
push
bswap
add
inc
shll
jmp
insb
and
pop
cld
push
in
mov
add
adc
hlt
dec
inc
sbb
cmp
loope
clc
shlb
and
inc
sbb
sbb
jmp
lods
add
mov
nop
push
add
cmpsl
xchg
rol
or
add
or
enter
add
or
test
je
iret
dec
pop
stos
jns
andb
and
jnp
test
cmp
test
or
pusha
cmp
cmc
mov
push
push
cs
add
movsl
pop
imul
pop
mov
lock
push
subl
jns
push
add
and
mov
lret
cmp
add
xchg
out
mov
popf
lock
arpl
add
mov
mov
sbb
sbb
add
cmc
lds
mov
fmuls
adc
add
mov
add
lret
out
and
inc
call
add
add
cli
rorb
out
xor
xchg
mov
xchg
sahf
mov
add
inc
add
subb
ljmp
jge
addl
add
jns
test
sbb
cmpsl
mov
std
add
mov
pop
iret
enter
loopne
out
add
sub
int
out
fadd
jns
popf
scas
shr
inc
roll
fldenv
mov
push
add
add
mov
mov
xor
sub
add
sti
lds
bound
jmp
loop
mov
and
clc
and
cmc
cli
ljmp
shl
jo
ja
sbb
push
cmp
fmul
fildl
hlt
mov
dec
ja
dec
adc
mov
add
jae
repnz
filds
and
and
add
lret
mov
sti
lock
adc
nop
fistpl
xor
jno
add
outsb
sbb
add
jbe
inc
lds
add
sub
sbb
add
idivb
push
push
filds
add
loope
shlb
add
jmp
out
jno
adc
loope
add
dec
pop
test
cmpsl
add
shl
imul
or
out
mov
sbb
sub
out
lea
mov
imul
and
mov
pop
adc
ljmp
sbb
sub
lea
add
mov
add
jns
cmp
xchg
inc
je
repnz
fiaddl
xchg
adc
sbb
fxch
das
mov
jge
mov
add
fiaddl
mov
dec
or
xchg
mov
sbbb
lods
xchg
sub
pop
add
push
in
or
and
push
xchg
fmul
out
add
xlat
iret
mov
test
xchg
icebp
enter
inc
add
push
incl
pop
adc
push
test
mov
lret
add
in
mov
bnd
add
adc
je
fstp
fistps
repz
add
das
nop
add
xor
ljmp
pop
test
cmp
flds
or
push
mov
add
fcoms
jo
aaa
iret
xchg
mov
adc
pop
and
sbb
pop
das
jl
popa
and
int
dec
std
add
add
mov
pushf
inc
pop
lret
pop
call
push
mov
fimull
adc
gs
nop
in
add
push
bound
loope
int3
add
mov
out
pusha
xchg
shl
adcb
cmc
idivb
add
push
dec
loopne
addl
dec
sbb
clc
jl
mov
std
xchg
pop
pop
add
dec
aad
cmp
int3
xchg
and
icebp
insb
xchg
cmp
dec
push
ja
adc
sub
pop
rorb
sbb
jnp
dec
mov
call
adc
jno
orb
add
jo
and
fldt
out
add
push
dec
imul
js
popa
pop
cmp
lcall
and
and
test
push
dec
je
js
daa
fwait
sub
ret
mov
pop
repnz
mov
add
xchg
lahf
bound
movb
test
mov
add
adc
mov
xchg
repz
push
pushf
mov
xchg
lock
add
cwtl
shlb
sbb
jae
shrl
neg
add
stos
inc
adc
pop
add
sbb
loop
push
test
jl
scas
xchg
bound
out
adc
jmp
jle
pop
xchg
mov
test
cmp
loopne
enter
ret
ljmp
cmpsb
aas
sub
add
push
pusha
add
ljmp
out
rclb
out
add
and
mov
push
adc
add
lret
jae
sub
inc
outsb
jmp
sbb
inc
push
cmp
out
inc
pop
rolb
mov
test
das
les
or
int
loopne
add
xor
stc
pusha
jb
pop
jg
jg
loopne
jle
sub
cmp
inc
ret
inc
int3
cmc
rorb
sti
lahf
dec
in
les
adc
push
add
push
fwait
inc
cwtl
test
repnz
sti
adc
jge
hlt
outsl
fnsave
add
sub
pushf
std
inc
cmpsl
add
das
adc
pusha
lock
stos
movsb
loopne
add
pop
jns
push
xchg
hlt
in
xor
adcb
or
adc
or
lahf
sahf
add
mov
add
mov
adc
xchg
mov
es
and
std
sub
mov
mov
gs
sbb
jg
add
in
lock
enter
dec
sub
fldl
test
inc
push
ret
lea
sub
add
stc
adc
push
cltd
jno
push
lahf
inc
imul
adc
incb
xchg
cli
pop
inc
ret
cmp
jne
mov
jmp
mov
in
adcl
sub
push
mov
loopne
orl
adc
lcall
mov
mov
fwait
add
xor
lahf
add
fimuls
add
xchg
sub
in
pop
nop
cmp
das
jbe
adc
add
add
add
cmpsl
push
call
ds
rcll
icebp
cld
repnz
or
insl
sahf
fldlg2
idiv
cmp
fadds
and
std
mov
popa
xor
inc
lock
add
out
xchg
mov
out
jg
or
cmpsb
pop
adc
notb
or
popl
jge
stos
jns
orl
xor
mov
fnstcw
dec
fnstsw
add
rcll
cmp
add
frstor
mov
out
or
rcrl
or
sbb
popf
xchg
adcb
fsts
sub
in
add
lods
xchg
mov
insl
outsb
mov
call
sbb
mov
add
mov
call
sbb
jnp
or
dec
imul
sbb
addr16
adc
add
xor
sub
mov
mov
add
loopne
test
adc
mov
sbb
inc
js
mov
fadds
cmc
int3
mov
cmp
dec
or
mov
xorb
mov
cmpsb
and
cli
add
push
daa
loop
add
xorb
scas
xchg
add
push
add
mov
push
add
lods
fdivs
addr16
neg
test
jmp
jns
loopne
add
test
lods
out
fcoml
dec
sbb
cmpsb
clc
call
xor
xor
and
enter
ret
fstl
inc
aas
fcompl
imul
cmpsl
jp
pusha
or
sbb
and
clc
xchg
xchg
sbb
xor
pop
in
stc
xor
scas
add
add
fcmovu
loopne
push
xor
inc
sti
lock
cmp
adc
fcom
add
adc
dec
movsl
dec
pavgw
or
dec
test
mov
inc
dec
addl
shr
aam
add
adc
pushl
dec
fadds
jge
ret
fcompl
inc
add
mov
data16
out
ficompl
mov
or
subb
addr16
push
inc
arpl
and
sub
lahf
xorb
pop
mov
inc
nop
mov
add
and
stos
in
rolb
dec
fst
pop
xor
add
adcb
add
fwait
lahf
or
push
sbb
sub
mov
pop
movsl
dec
shlb
mov
dec
pusha
cltd
dec
aaa
jle
clc
out
push
stc
cmc
lods
xor
mov
es
test
mul
jb
pop
add
daa
fistpl
sbb
xor
mov
jg
lods
fcomi
xlat
adc
inc
in
bound
cmp
sti
xor
sbb
in
mov
add
jecxz
ja
das
add
add
lock
push
adc
add
xchg
in
mov
inc
xchg
xchg
inc
aaa
fcompp
test
jmp
add
in
or
popf
inc
add
out
add
addr16
les
jbe
add
cli
in
jno
movsb
jns
push
add
jo
xchg
cmp
scas
add
testb
push
sub
addb
fadds
xor
pop
add
ret
movsl
pop
and
and
sbb
adc
ss
or
lret
add
xchg
inc
fmulp
mov
pushf
xorb
filds
mov
scas
sbb
shlb
pop
lods
pop
jmp
fldl
cmp
xor
fs
ror
std
lret
in
movsl
mov
add
xor
js
fildl
repz
cmpps
inc
xchg
jne
jmp
loope
test
call
mov
pop
mov
cmp
or
mov
mov
subl
add
cmp
xor
or
pushf
out
add
lcall
dec
and
aaa
popf
sahf
pop
insb
leave
orb
xor
adc
filds
sti
and
add
cmp
adc
add
daa
mov
jb
clc
inc
sti
xorb
lret
add
adc
mov
inc
mov
mov
mov
bound
mov
jno
repnz
add
cmc
pop
or
add
jl
ljmp
inc
in
rol
sbb
cwtl
sarl
xor
mov
das
dec
cmp
pop
stos
adc
lcall
nop
in
js
or
jmp
aas
repnz
insb
sub
adc
jecxz
add
sbb
pop
dec
stos
push
adc
cmp
dec
add
in
add
int3
mov
ja
add
pop
push
test
inc
in
pop
xor
lret
roll
add
sbb
sub
and
mov
add
cmp
insl
cmp
and
stos
sbbb
xor
mov
je
or
cmp
sbb
shrb
add
in
adc
add
gs
inc
roll
sub
arpl
add
scas
fnstsw
add
jmp
cli
sub
push
insl
add
cmpl
sti
int
pop
xchg
push
rol
jnp
add
jne
mov
orb
add
jns
cmp
jg
add
enter
mov
jmp
xchg
and
or
enter
and
or
add
xchg
mov
add
push
mov
addl
lock
mov
sub
lret
lds
add
cmpsb
fdivrs
mov
sub
sbb
stos
sbb
test
dec
outsb
mov
and
add
repnz
aas
pop
xchg
xchg
push
daa
nop
cs
push
add
movsl
popa
adcb
cmpsl
filds
push
fcoms
mov
call
ds
cmp
add
sbb
add
mov
and
mov
sar
add
or
fistl
dec
movsb
out
lds
push
clc
testl
or
or
cmp
fisubs
mov
loopne
aas
popa
add
mov
fists
jo
dec
jno
add
jns
jne
jg
in
pop
adc
add
mov
cmpsb
mov
jae
divb
xchg
mov
add
stos
in
std
xchg
push
push
xchg
or
adc
add
loope
mov
xchg
test
xor
lods
or
xchg
aad
aas
pop
sbb
stos
mov
xchg
cli
inc
sti
shr
in
icebp
idiv
add
sub
insb
cmp
bound
repz
cs
popf
shr
xchg
sbb
add
lcall
pushf
add
orb
and
push
in
pop
jo
jnp
or
adc
jb
push
repz
pop
push
lret
pushf
aas
xchg
push
fwait
jbe
stos
push
mov
imul
rorb
dec
insl
pop
je
sbb
xor
data16
out
push
add
cmc
mov
enter
add
out
dec
or
stos
jg
jle
add
add
enter
in
inc
jbe
add
inc
dec
sub
mov
pushf
test
mov
xlat
add
outsb
je
nop
mov
add
sbb
dec
subb
cmp
push
xor
movsb
add
fldl
gs
or
push
adc
adc
xor
dec
dec
out
pop
stos
fisubrs
aam
fmulp
lret
fiaddl
sub
cmp
out
iret
lret
jno
dec
in
add
std
jns
add
jne
cmc
jbe
cmpsb
mov
add
aad
insb
add
or
add
outsb
popf
add
int3
xchg
jbe
test
push
stos
mov
mov
test
pop
xor
xor
in
in
xorb
loop
add
dec
xchg
add
mov
cmp
mov
loope
add
repnz
jmp
add
cmc
stos
and
jg
add
add
adc
mov
fldcw
add
fadds
jns
add
cltd
cmp
stc
jle
add
into
adcb
jle
add
xchg
imul
lahf
dec
int3
inc
je
inc
mov
sbb
rorb
cmpsl
push
pop
orl
mov
stos
shlb
fildll
or
add
out
roll
pop
jl
ret
out
ljmp
mov
push
fdivr
loop
jne
add
cltd
adc
das
xchg
cmp
ljmp
ret
adc
inc
push
xadd
daa
add
sbb
aad
and
dec
aas
sub
addb
push
shrl
and
inc
aad
inc
add
xchg
in
push
popa
add
loopne
dec
stos
mov
rolb
and
scas
sti
mov
mov
add
push
push
sbbl
adc
xchg
aas
add
rcll
jl
cmp
bswap
mov
jl
mov
cmp
out
movsl
mov
jle
or
mov
mov
add
sti
sbb
lea
pop
call
in
mov
xor
iret
sbb
add
xlat
cmpsb
cmp
cmp
mov
pop
pop
jge
add
xchg
mov
cmp
in
push
sti
sbbl
pushf
add
add
push
das
into
jae
add
sbb
lcall
in
test
mov
inc
cmp
fisubs
in
les
insl
sub
push
cltd
psubd
sbb
adc
add
xor
mov
pop
popa
enter
loopne
call
test
dec
jmp
stc
jno
mov
aam
add
addb
adc
add
mov
jnp
cmp
pop
js
sub
pop
jmp
or
mov
leave
test
cwtl
sub
sbb
inc
in
add
aad
mov
clc
and
cmp
pop
push
adc
mov
push
popf
mov
mov
rolb
adc
jp
add
jo
cmpsl
add
adc
jge
add
mov
adc
inc
mov
and
pop
mov
xorl
push
adc
cmp
cli
rolb
jo
ret
add
enter
int
mov
adc
lods
sti
adc
mov
test
mov
sbb
sbb
push
jmp
add
mov
cmpsl
out
aas
mov
mov
loope
pop
jae
push
xor
pusha
call
pop
add
mov
inc
ss
inc
call
adc
push
pop
adc
add
sub
in
add
or
and
das
xorb
ja
hlt
loop
out
pop
lods
jp
add
in
inc
sahf
pop
repnz
mov
fiadds
addb
add
inc
mov
sub
mov
repz
add
inc
push
aad
sub
push
add
dec
arpl
cmp
dec
or
or
adc
pop
add
pop
in
add
inc
fdivr
repz
add
aas
int3
lock
out
add
in
stos
and
mov
pop
mov
cmpsl
inc
mov
fsubl
nop
jns
rorb
add
xor
stos
xchg
lret
fcomip
test
pop
add
jmp
add
add
add
jl
cltd
pop
sub
or
add
push
mov
fsubrl
mov
pushf
movb
neg
and
bound
stos
add
xchg
sbbb
xchg
iret
ror
jo
imul
adc
nop
jno
pop
bound
sub
movsl
add
dec
sahf
xchg
xor
sbb
adcb
xor
pop
loop
add
scas
push
push
mov
enter
jae
popa
xor
in
adcb
fwait
aaa
cmpl
icebp
popf
andb
pop
imul
insl
loop
cmp
fisubrl
loopne
stc
mov
jae
push
xor
cld
test
adc
scas
fs
xchg
inc
and
addr16
rolb
sub
add
lds
sbb
sti
cwtl
loopne,pt
sbb
call
dec
mov
inc
add
sub
in
jmp
pop
push
push
dec
add
roll
or
and
xlat
add
sbbl
in
pop
jne
jl
adc
pop
add
in
decl
pushf
inc
jp
pop
sub
add
sbb
dec
aam
add
idivl
add
mov
xchg
stc
lret
lods
incl
inc
inc
or
into
mov
add
mov
fisubrl
xchg
out
jmp
inc
jbe
add
ja
cmp
xchg
inc
add
repnz
add
cld
pop
add
and
insb
mov
scas
jo
out
mov
inc
subb
pop
jle
mov
jae
xor
mov
insl
sbbl
inc
clc
aas
leave
sti
and
pop
sub
pop
add
sub
in
aaa
jo
js
lahf
pushf
jmp
dec
jg
push
ds
inc
and
push
cmpl
inc
les
mov
add
sub
pop
pop
imul
and
bound
xchg
outsl
loopne
add
fnsetpm(287
pop
add
mov
add
or
cmpsl
sub
xor
jne
mul
xor
xchg
fdivrs
call
xchg
or
pop
in
mov
cwtl
clc
cld
add
add
dec
adc
fcoml
js
pop
xchg
jge
add
pop
pop
xchg
loopne
add
out
ss
push
add
sbb
xlat
mov
fsts
in
pusha
push
fiadds
negl
fbld
jns
lock
push
xor
cmpsl
xor
cwtl
add
fimull
scas
and
and
out
fmuls
testb
je
ret
leave
add
rcrl
push
push
pop
and
mov
push
xchg
xor
mov
rclb
jnp
arpl
xor
mov
add
cli
or
insb
sub
add
mov
mov
adc
fldl
and
pop
xchg
enter
sbb
lahf
adc
lock
jp
jl
cld
call
adc
jns
cli
sbb
jge
push
aam
jo
inc
es
mov
adc
push
and
adc
push
sbb
lods
jns
loop
xchg
in
dec
and
push
sub
test
dec
mov
add
sbb
dec
mov
push
or
cs
add
pop
mov
and
push
loope
in
orb
imul
aam
push
or
pop
shlb
js
adc
jge
lret
or
jno
add
cmp
add
mov
jae
push
test
test
inc
std
mov
sbb
enter
push
scas
mov
sbb
lahf
jl
dec
fists
pushf
movsl
divl
shlb
cld
test
mov
movb
push
mov
daa
mov
bound
rcl
adc
mov
sbb
add
pop
cs
lds
xchg
in
enter
push
add
in
add
stos
jecxz
orl
xor
xchg
sbb
gs
pop
test
movsl
and
mov
add
adc
and
shlb
fildl
shrl
add
cltd
sahf
mov
add
daa
adcl
call
push
mov
insb
cmpb
dec
daa
sarl
xchg
and
or
jns
mov
mov
xor
xchg
push
cmp
xor
enter
push
sbb
call
jl
mov
pusha
lods
cltd
lock
add
es
out
pusha
xor
and
lock
pop
mov
arpl
fsubrs
orb
mov
add
iret
sbb
mov
daa
out
add
cli
fdivrp
or
adcb
and
cmp
mov
in
lds
inc
imul
lods
add
mov
fs
add
outsl
inc
pop
or
out
insl
adc
dec
movsb
pop
loopne
stc
add
imul
jmp
outsl
xlat
jmp
ds
inc
add
js
inc
sub
add
gs
add
inc
adc
jl
sub
add
shrb
inc
add
invd
mov
add
sbb
stc
mov
xchg
das
cmp
loop
dec
cmp
lea
enter
or
rolb
push
xorl
pusha
add
das
add
jmp
stos
adc
addr16
add
and
in
xchg
push
adcb
add
dec
push
pop
iret
scas
jmp
lods
sbb
sti
pop
out
xchg
test
xorb
andl
mov
jmp
out
pop
jo
pushf
add
mov
add
add
mov
pop
pusha
in
add
enter
add
mov
add
out
mov
mov
loope
stos
enter
sub
pop
pop
rcr
or
inc
lock
scas
jecxz
mov
addb
dec
or
inc
push
fldl
sbbb
xchg
data16
adc
jle
mov
insb
push
mov
mov
push
jne
pop
lcall
inc
inc
xor
loop
sub
adc
insb
add
pop
loopne
inc
popf
add
pop
imul
loop
aas
orb
adc
inc
frstor
lds
sbb
push
sbb
or
dec
inc
dec
add
inc
cmp
int3
inc
sbb
push
mov
jge
aad
jmp
cltd
jae
pop
push
fcoml
sub
sub
sbb
jo
rolb
push
cmp
outsl
sbbb
jp
pusha
mov
ljmp
movsl
add
jb
daa
inc
das
leave
jbe
jns
stos
jle
clc
loopne
mov
test
mov
inc
add
stos
loope
add
add
xchg
jno
push
es
daa
push
xor
sbb
test
and
std
jge
cmp
adc
lock
cmc
inc
push
sbb
add
jge
jne
out
or
add
jl
add
lods
jo
add
stc
std
inc
mov
push
aam
adc
enter
aaa
in
dec
sarl
sbb
add
push
cwtl
out
cld
sub
sub
and
mov
movsb
mov
stos
scas
add
mov
shl
jl
rcrl
cmp
cmpsb
test
sar
insl
sbb
pop
sub
mov
rcrb
add
mov
das
fsubs
jb
lahf
mov
dec
out
sub
lret
repz
mov
or
sub
pop
inc
xlat
mov
cmp
in
cmovp
int
loopne
xchg
and
xchg
daa
arpl
pop
clc
cmp
dec
stos
xchg
push
add
addb
or
or
arpl
rclb
lahf
mov
add
mov
xchg
insb
inc
push
add
aas
in
cmp
cli
mov
pop
inc
mov
push
sbb
add
sbb
push
add
and
stc
jp
call
mov
xor
mov
or
add
jmp
popf
push
add
aas
fnstenv
call
lcall
add
pop
fnstsw
mov
pop
lret
cmp
adc
mov
mov
xorb
xor
mov
mull
add
sbb
nop
ljmp
mov
cmpsl
xchg
add
xchg
pop
add
fistpll
cmp
push
stos
out
daa
mov
inc
test
and
dec
rcl
inc
fs
add
stos
mov
dec
add
mov
cmc
xchg
aas
xchg
mov
arpl
insl
push
test
mov
sbb
cmc
adc
fs
adc
cmp
and
add
sbb
xchg
add
cli
arpl
add
add
pop
jo
add
xchg
pop
mov
idivb
in
fldcw
lock
adc
dec
pop
aaa
inc
jecxz
sbbl
sbb
into
inc
arpl
mov
rcl
add
clts
xchg
xor
add
int
add
adc
add
ja
add
outsl
frstor
lret
jbe
test
sub
cltd
sbb
xchg
add
mov
cmp
jmp
xchg
addb
add
imul
imul
pusha
sbb
rcrl
pop
cwtl
mov
test
push
add
loopne
sub
in
rolb
sbb
mov
hlt
add
das
and
stos
and
add
xor
jmp
pop
or
fisubl
xchg
jnp
inc
ret
adc
nop
xor
cmp
mov
mov
mov
push
and
ljmp
inc
addr16
in
inc
add
push
sti
out
mov
cwtl
add
outsl
mov
mov
clc
fs
sub
mov
cmp
xor
sub
jecxz
cmpb
inc
cmp
daa
cmp
cmp
data16
sbb
clc
je
ret
cmp
ljmp
dec
mov
cmp
hlt
mulb
sbb
add
jl
xstore-rng
cmpsl
add
in
jo
lret
xor
shlb
add
stos
ret
lock
add
sbb
test
add
jmp
adc
loope
mov
pop
jb
add
addr16
fsub
xchg
add
push
pusha
in
adcl
jmp
xchg
pop
rcr
xchg
popf
dec
aas
add
inc
mov
enter
jns
add
xchg
push
pop
cmp
bswap
test
and
dec
add
test
insb
add
xchg
jge
cs
testl
repz
add
xor
sarl
fadd
cmc
sub
xchg
cmpsb
pop
cmpsb
mov
inc
adc
sub
jo
add
xchg
jmp
mov
adc
lock
sub
pop
and
data16
incl
das
add
cmpsl
add
daa
bound
lods
imul
xchg
fcoms
sub
lods
add
jmp
pop
ds
add
mov
add
sbb
aam
cmp
inc
sbb
push
movsl
xchg
mov
cld
pop
into
jl
sub
mov
popa
in
lock
add
roll
mov
inc
stos
pop
and
dec
shrb
push
mov
add
mov
rcr
call
ja
movl
add
popa
scas
and
cmp
push
fistps
jg
inc
sbb
jb
in
scas
xor
add
jle
add
add
cmp
add
xlat
flds
imul
sub
sbb
adc
pmaxsw
sub
into
push
mov
insb
push
pusha
and
add
cmp
idivb
jge
push
inc
sub
pop
out
fdiv
add
repnz
add
ret
call
pop
add
out
xchg
add
push
and
into
lock
mov
mov
mov
fstpt
and
lret
icebp
pop
lret
fbstp
pushf
lods
mov
mov
test
popf
push
mov
test
cmpsb
xchg
jb
aas
sub
cmpsl
call
mov
cmp
or
and
xor
jne
clc
mov
aad
pop
cli
leave
inc
int3
mov
push
add
rsm
xor
loope
sub
mov
inc
inc
mov
xor
cmp
shll
jae
sub
decl
lret
dec
test
testb
popa
lods
dec
sub
dec
popl
pop
add
sub
dec
outsb
add
and
pushf
or
rcrb
add
stos
das
pop
add
popa
jno
jnp
add
daa
jg
imul
lods
pop
scas
jnp
pop
je
out
or
pop
lock
mov
decb
or
ss
out
lock
add
cmc
or
add
movsl
mov
test
dec
or
xchg
pusha
imul
mov
stc
and
add
es
or
and
inc
out
testb
xchg
in
mov
inc
dec
fsubr
movsl
enter
add
mov
fisubl
push
pushl
add
sbb
lock
xor
inc
cmp
test
jbe
sub
sarl
adcl
add
add
mov
das
add
repz
out
push
jge
ror
sbb
adc
add
outsl
push
add
inc
inc
out
repnz
xchg
and
pop
jns
mov
xor
or
mov
lods
or
call
popa
shl
push
pop
lahf
pusha
mov
test
or
sub
mov
fiadds
cwtl
test
push
and
stos
pusha
mov
add
rorb
fwait
and
mov
fs
jb
mov
inc
jo
jl
and
addb
in
add
dec
push
xor
psubusw
loop
and
ja
mov
or
in
clc
xor
scas
mov
dec
mov
pop
add
and
in
jns
lods
inc
pop
into
adc
xchg
idivb
sbb
inc
or
add
sub
push
mov
add
mov
lock
mov
in
add
fstps
add
sbb
daa
cmp
arpl
jl
add
cmp
stos
add
xchg
jl
notb
sbb
adc
push
xor
mov
jge
lea
loop
mov
add
xor
clc
and
add
stos
inc
cltd
adc
scas
sub
lods
mov
add
dec
jno
outsb
add
pop
das
adc
jmp
pop
dec
in
lock
jbe
dec
iret
pop
cs
pop
jo
adc
push
add
data16
add
sarl
adc
in
mov
push
jge
popa
sub
mov
add
insb
sbb
adc
stc
cmp
filds
int
dec
push
lock
stos
sbb
mov
inc
test
in
in
dec
pop
adc
fisttpll
out
jle
cmp
add
or
and
fildl
loopne
add
movsl
add
pop
les
addr16
rorb
lods
or
add
jns
inc
cmc
mov
lret
xchg
jo
adc
push
call
pop
add
xor
cmpsl
pop
jns
and
xchg
pop
outsl
es
adc
mov
daa
cmp
popl
add
and
lds
pop
sar
mov
add
adc
add
mov
push
dec
push
mov
jb
lock
int
inc
add
add
pop
sbb
inc
cli
lahf
clc
cld
add
add
insl
adc
inc
or
push
mov
fwait
mov
add
xchg
loope,pt
cmp
imul
int
add
aam
cmp
loopne
movsl
iret
sub
les
int3
sar
add
mov
test
movb
jns
mov
xor
or
inc
das
cmp
or
lock
lahf
in
or
mov
rcrl
cwtl
andl
xor
roll
or
cmp
push
test
mov
int
mov
or
fimull
mov
nop
push
add
dec
stc
icebp
lock
push
add
das
scas
loopne
cwtl
roll
ss
cmp
flds
call
add
test
jge
xchg
cmp
jecxz
dec
dec
cltd
into
xlat
shl
lahf
cli
inc
add
xchg
mov
sahf
loope
dec
out
add
clc
xchg
hlt
add
dec
subb
aas
or
out
pop
jle
add
lret
in
xchg
icebp
mov
jg
jecxz
nop
loopne
push
mov
add
loop
mov
xchg
lods
daa
cmc
mov
xchg
lea
mov
and
pop
dec
test
mov
js
ret
jge
add
inc
lods
aad
inc
push
fucomi
lcall
add
fs
push
push
and
cmp
sub
jo
aaa
fistpll
and
jle,pn
cmp
dec
hlt
xlat
inc
ficompl
cmp
push
loope
pop
add
dec
out
inc
scas
adcl
push
cltd
sub
popl
or
sbb
ljmp
inc
dec
add
lock
jo
add
sub
cwtl
ds
pop
add
rcr
in
xlat
imul
sub
add
clc
cld
cmp
push
aad
and
add
in
pusha
std
and
push
lock
jns
mov
xchg
fsts
scas
add
in
add
pop
fdivl
dec
popf
int3
mov
ucomiss
imul
add
outsb
adc
out
in
sarb
ret
mov
inc
cwtl
add
or
fdivl
adc
arpl
jno
jne
das
shl
mov
mov
js
mov
xchg
repnz
sbb
add
sub
testb
xchg
dec
cmp
mov
paddsb
add
test
add
lods
xor
add
or
cmpsl
mov
and
adc
pushf
call
add
sbb
pusha
pop
jb
and
hlt
insb
xor
fucomip
std
dec
dec
cld
test
inc
lcall
push
loop
call
inc
xor
add
jge
pop
inc
pushf
xchg
sub
adc
inc
in
fsubs
add
mov
adc
setno
pusha
sub
add
adc
es
scas
add
mov
popw
add
pop
adc
cmc
call
mov
cltd
pop
pop
cmp
sbb
add
pop
test
jo
pop
add
sahf
inc
orb
add
adc
push
add
shll
rorb
aas
mov
shlb
lods
sti
sub
push
xchg
add
xor
inc
negb
inc
jg
mov
in
inc
sbb
daa
mov
mov
imul
loope
das
hlt
jns
sarb
mov
stc
iret
mov
add
lret
add
sahf
out
jns
aas
add
fcoml
mov
add
add
pop
gs
push
lods
sbb
add
leave
inc
pop
add
dec
lahf
incb
push
and
mov
stos
inc
rcr
add
or
out
call
inc
and
mov
add
enter
mov
call
or
orb
add
and
pop
ret
roll
fmuls
jmp
cwtl
xor
loop
sub
daa
add
jmp
in
or
rcl
pop
xchg
testl
adc
out
int
xchg
fadd
jl
push
add
xlat
aas
orb
sbb
add
shr
add
push
idivl
movsl
add
push
mov
lcall
add
jg
inc
add
xchg
pop
jl
sub
or
pusha
jno
and
out
fcomi
mov
addr16
cmp
fsubl
jmp
cmp
add
aam
stos
psubusw
add
test
inc
xor
faddl
xchg
bound
les
cltd
sbbb
loopne
inc
add
pop
test
mov
pop
aaa
call
sub
les
xor
xor
sbb
fdivl
push
outsl
mov
cmp
in
ror
sub
push
dec
push
out
jg
add
jmp
sbb
push
mov
lcall
cmp
or
cld
xchg
les
sti
hlt
push
dec
sbb
cmp
xor
es
pop
les
jge
jmp
in
add
mov
cmp
mov
sub
movsl
clc
dec
jmp
ret
in
push
add
dec
mov
sbb
mov
js
out
sub
cmp
std
add
lahf
jle
dec
popa
add
add
js
iret
shl
dec
daa
push
xchg
jg
add
jmp
pop
gs
add
jns
jb
fisttpll
hlt
cmp
jno
pop
inc
push
pop
aaa
mov
adc
dec
add
add
jle
lret
add
xlat
dec
hlt
add
or
ret
add
inc
aad
mov
int
add
fisubrs
mov
je
cmp
rep
mov
add
lods
inc
mov
mov
pop
scas
inc
add
xchg
add
push
mul
add
sub
in
cmp
push
ds
jl
push
sbb
shl
sub
roll
jne
jo
mov
loop
add
jge
and
das
sbb
xor
xchg
ljmp
mov
xor
xchg
cmp
inc
repz
add
jo
mov
adc
jns
mov
mov
add
mov
rclb
hlt
movsb
fdivrl
jl
add
pop
cmp
push
sub
jecxz
fdivrl
xor
lahf
stos
push
cmpsl
aaa
and
cltd
clc
loope
sti
mov
pushf
add
pop
dec
sub
fnstsw
jp
push
xor
popa
sbb
fimull
movsb
mov
add
fnstcw
add
into
clc
pop
pop
orl
cltd
jnp
pop
sub
es
addr16
adc
mov
outsl
cmc
add
jnp
adc
in
jnp
xchg
pop
aas
adc
adc
imul
jns
dec
call
popf
gs
es
mov
pop
pop
xor
icebp
or
add
out
js
movsb
es
pop
daa
pop
std
mov
and
xchg
xor
mov
push
fidivs
add
or
pusha
adc
cmpsb
cmp
stos
or
jbe
arpl
fildl
jae
add
xchg
xor
mov
test
aas
std
add
mov
jmp
jecxz
mov
mov
test
mov
addl
push
nop
ljmp
ret
rorb
add
shrb
sahf
shlb
clc
add
xchg
add
push
add
aas
test
adc
sbb
icebp
jecxz
add
adc
mov
clc
outsl
add
dec
sbb
mov
add
popa
rol
leave
cmp
mov
and
enter
add
es
add
sub
jge
dec
push
fnstcw
roll
aad
idivl
mov
int3
out
insl
scas
ret
or
lahf
sub
xorb
adc
loope
fstps
cmp
mov
aas
mov
add
dec
pop
xchg
adc
mov
add
adc
shlb
cli
int
add
lret
pop
push
xor
idiv
rorb
add
push
in
pop
loopne
mov
mov
inc
andl
add
fadd
lret
inc
scas
lcall
jns
stos
idivl
xor
jbe
and
notb
add
or
in
sub
sbb
inc
xchg
jmp
jno
push
test
jecxz,pn
mov
sub
add
loope
or
add
stos
call
xchg
add
push
sbb
mov
jno
and
in
mov
addr16
mov
jge
jns
loopne
js
out
nop
lcall
gs
stos
outsb
call
aam
xchg
mov
push
jns
out
xchg
add
out
aas
inc
xor
pusha
frstor
scas
jle
push
add
jns
shrd
hlt
inc
jp
jnp
clc
in
add
push
xchg
add
jnp
lret
das
pushf
add
outsb
dec
stc
add
lahf
jne
push
stos
push
loopne
xor
sbb
push
in
lock
push
cmc
out
int
jns
push
xchg
lods
xor
add
jl
lahf
push
aam
xor
adc
in
lods
add
and
lock
xchg
add
mov
xor
adc
adc
add
lods
loopne
out
pop
or
nop
sbb
ja
cmp
clc
cmpl
out
sbb
notb
dec
repz
cmp
fdiv
add
inc
rorl
or
jbe
xchg
inc
fmulp
jno
pop
cli
inc
mov
icebp
adc
sbb
jae
lock
mov
add
push
mov
pop
cltd
sbbb
mov
gs
xor
adc
add
cmc
pop
pop
cmp
sbb
pusha
and
jge
in
aad
pop
or
xlat
cli
dec
fistpl
dec
in
and
inc
jge
add
mov
lock
je
js
pop
sbbb
lock
insb
dec
add
addl
push
fimuls
dec
ret
add
mov
enter
fsubl
jno
lods
add
add
jns
pop
cmp
fsubrs
adc
sub
shll
ret
outsl
andb
mov
jge
in
out
call
dec
and
dec
lock
push
fstps
addr16
cmp
shl
jno
jmp
pop
add
cmp
loope
push
push
jo
jne
xchg
jl
add
arpl
add
inc
loop
std
in
push
outsb
testb
adc
mov
imul
push
pop
inc
mov
in
aaa
and
add
lds
add
aas
adcb
pop
xchg
cmpsl
dec
nop
insl
add
out
in
lea
lahf
addl
pop
popf
insl
xchg
sub
xchg
jmp
pop
add
add
clc
imul
xor
adc
call
pop
mov
push
inc
data16
add
daa
sbbb
and
seta
add
jg
js
mov
in
push
iret
xorb
mov
inc
cmpsl
jl
fcoms
or
int
xchg
loopne
push
add
fistpll
nop
adc
sbb
ss
inc
push
mov
nop
sar
outsl
xchg
adc
insb
push
lret
xchg
mov
loopne
push
or
cmp
pop
setns
inc
mov
mov
mov
jb
add
xor
sbb
mov
jns
bound
xchg
hlt
sub
inc
dec
dec
mov
addb
add
out
int
dec
das
or
jg
mov
add
icebp
sbb
adc
adcb
add
loopne
test
cmp
out
lcall
mov
and
lods
mov
pop
mov
or
nop
dec
test
dec
jecxz
test
and
and
adcl
mov
or
inc
mov
inc
push
jp
adc
mov
test
inc
lcall
stc
js
lods
mov
shll
inc
add
dec
test
inc
bswap
add
and
scas
add
pusha
mov
loopne
push
repnz
mov
push
dec
testl
insb
test
cmp
mov
add
or
int3
xor
repnz
dec
xor
adc
ss
jb
pop
add
xor
sbb
stos
add
in
mov
and
fisubs
je
jb
and
add
mov
jo
add
and
sub
fiadds
push
call
pop
cmc
mov
pop
mov
adc
jmp
xchg
inc
orl
or
inc
xchg
dec
mov
mov
fldl
ja
pushf
fldcw
add
mov
adc
test
mov
mov
stos
loopne
xor
push
jbe
dec
mov
ret
jmp
and
adc
cmp
sbb
pop
add
je
pop
xor
dec
test
cmp
jle
in
test
pop
and
dec
fnstenv
inc
icebp
repnz
into
call
rolb
aaa
out
and
cmp
mov
add
sub
add
push
loope
stc
inc
sarl
cmp
xchg
add
loop
sub
add
xor
sahf
cld
add
pop
mov
dec
aas
popf
mov
test
mov
andb
lcall
or
inc
repnz
arpl
jg
pop
add
sbb
rclb
mov
outsl
test
add
movsb
mov
add
inc
push
sbb
add
mov
nop
sbb
inc
dec
fucomp
push
mov
stos
xor
test
movsb
add
push
inc
aas
pop
cmp
xlat
or
je
ss
add
jae
add
outsb
xlat
fistps
xor
leave
mov
add
test
mov
xor
cmp
fidivrl
test
xchg
dec
xor
insl
rol
jge
xchg
hlt
or
push
sub
or
dec
in
inc
mov
mov
push
out
dec
jbe,pn
add
jae
xchg
ficoml
mov
add
mov
jns
dec
jnp
or
int3
add
mov
mov
imul
int3
jge
and
pop
loope
movsl
mov
push
jb
in
into
push
and
add
ret
add
cltd
lock
loopne
jbe
add
and
and
sbb
cmpsb
xor
push
add
mov
and
mov
and
add
push
and
or
test
out
inc
add
xor
jl
add
sbb
out
lock
add
and
jbe
and
fsubs
mov
aas
xor
pop
and
cmp
in
leave
inc
pop
xorl
nop
mov
add
imul
dec
sub
mov
mov
adc
roll
in
add
or
leave
pop
lea
push
nop
andb
dec
mov
lds
xorb
cmp
test
add
adcl
mov
call
in
test
enter
xor
adc
cwtl
mov
in
xchg
fmul
pop
add
das
outsl
cli
jle
jo
and
push
pop
andb
cmc
push
xchg
xor
jg
sbb
inc
pusha
adc
scas
dec
ret
lock
fs
lock
int
test
cmp
mov
popf
add
cmp
push
mov
insb
dec
rclb
cmpsb
in
jnp
push
sbb
popa
push
and
ss
scas
mov
test
int
pop
add
lods
iret
jno
gs
in
je
add
lahf
pop
xchg
cmp
add
mov
or
cmp
das
mov
pop
push
add
xlat
test
add
add
mov
out
xchg
fs
add
loope
inc
and
adc
adc
sbb
test
hlt
loope
shlb
xchg
std
sbb
sbb
les
sub
js
add
lcall
add
fwait
movsl
aas
sub
adc
push
test
mov
aam
leave
xor
xchg
ja
mov
imul
sub
insl
data16
adc
pusha
and
fsts
mov
push
je
jmp
push
fisubrl
xchg
mov
dec
fildl
out
nop
mov
data16
pop
xor
movsb
add
arpl
insb
jecxz
stos
cmc
mov
or
lcall
push
push
add
and
cmpl
in
inc
adc
adc
mov
daa
or
or
shll
add
fsubrs
inc
bound
or
sbb
rolb
loope
jo
sbb
popa
cwtl
cmpsb
adc
dec
pop
das
sahf
xor
into
mov
mov
test
push
xor
dec
call
paddw
ret
jnp
fbstp
mov
mull
and
jbe
mov
aad
xchg
pop
jns
inc
xor
js
lcall
in
add
mov
bound
icebp
pop
fdivrs
lods
pop
cltd
and
and
mov
lcall
mov
dec
add
sahf
stos
cli
repnz
xchg
add
add
lret
add
inc
or
jnp
inc
sarb
enter
or
mov
imul
fwait
mov
shlb
mov
dec
scas
lcall
xlat
sbb
adc
pop
mov
xchg
push
pop
out
add
es
std
stos
inc
or
cmpsb
inc
test
pop
mov
into
mov
cmp
sub
add
jp
dec
sub
sar
adc
dec
or
jge
int3
sti
fcmovb
loope
lock
mov
call
jo
insb
mov
or
loope
push
mov
lds
mov
roll
push
add
ficompl
popl
push
inc
sarl
sbb
mov
inc
sar
jo
in
inc
sbbb
pcmpgtd
add
or
add
inc
hlt
testb
dec
fistl
sbb
mov
test
sbb
or
cli
das
cld
adc
inc
fstpt
les
shlb
mov
sub
cld
push
lock
jle
add
repz
adc
sub
or
imul
mov
ja
mov
sbbl
inc
in
sub
sbb
cld
sbb
add
mov
adc
fdivrl
outsl
add
roll
and
stos
adc
push
jecxz
pop
xchg
sbb
jmp
pop
loopne
out
lods
shrb
add
arpl
std
mov
out
add
hlt
cmp
mov
shlb
cld
cli
or
jge
adc
sub
xchg
xor
inc
add
ja
icebp
sub
push
adc
or
shll
enter
sbb
jbe
out
out
test
jne
hlt
leave
repnz
push
jle
repnz
call
roll
push
dec
into
mov
mov
push
jbe
in
mov
subb
shl
nop
ret
repz
rclb
fwait
sarb
lret
sub
add
mov
add
aas
xor
cltd
clc
in
xor
add
iret
push
enter
mov
out
stos
loop
mov
pop
fwait
dec
or
xor
sbb
xchg
dec
popa
addb
xor
or
mov
incb
and
jb
repz
push
gs
add
dec
push
jo
iret
push
nop
cmp
test
push
bound
sbb
sub
movsb
mov
icebp
fisttps
or
insb
sahf
rcr
pop
data16
cmp
pop
stc
stos
test
fxch
add
pop
xor
sub
pop
adc
or
jae
add
repnz
add
ret
cmp
mov
mov
idivb
inc
scas
mov
jg
or
jecxz
add
imulb
repz
icebp
addr16
push
es
cmp
dec
bound
add
jo
sub
movsb
adc
mov
mov
add
push
mov
in
sub
add
jno
jg
popf
push
mov
leave
imul
push
ss
mov
jl
jmp
lock
cmp
xchg
pop
adc
pop
pop
fcoms
nop
sbb
or
dec
add
xchg
int
or
ret
sbb
inc
mov
pop
ja
rclb
pop
xchg
lds
xchg
popf
test
add
fs
out
push
jecxz
push
ljmp
cmp
add
outsb
xchg
or
fs
and
pop
pushf
add
shll
bound
xor
and
loopne
dec
add
daa
loope
sti
rcrb
ljmp
insb
mov
ds
mov
stc
adc
or
fmuls
add
xor
sub
stc
popa
scas
sbb
std
add
jge
andb
mov
or
sub
jne
sub
les
incl
arpl
mov
xor
xchg
inc
clc
loop
push
out
inc
testb
divl
ficompl
mov
pusha
xlat
es
jne
insl
mov
or
enter
sub
or
jmp
add
dec
icebp
add
inc
add
jns
sub
push
fisubs
add
xor
test
add
mov
mov
or
pop
mov
or
mov
js
mov
cmp
adc
data16
xorl
xor
pop
stc
jecxz
and
cmp
sti
sarb
and
pop
leave
push
loope
cli
lock
mov
add
or
mov
in
xchg
out
shll
and
and
lret
ss
and
push
add
sahf
jecxz
inc
popa
aam
jp
sti
in
stos
bound
cmp
xchg
shl
jns
arpl
pop
add
push
int3
mov
sbb
xor
add
lea
aam
add
add
add
pop
pop
jbe
sub
nop
mov
mov
addb
dec
cld
sbbb
push
jne
xor
jg
int
and
leave
cmp
pop
mov
xor
dec
mov
loopne
cmp
inc
clc
out
add
push
and
xchg
cli
ret
mov
js
insb
fistpl
or
xor
arpl
adc
dec
fdivrs
pop
repnz
lret
add
out
push
fimuls
dec
stos
nop
inc
add
or
mov
mov
mov
ret
jne
incb
insl
sbb
adc
fwait
xlat
add
push
cmp
xchg
sub
add
add
push
dec
rorb
push
sbb
cwtl
mov
mov
add
es
xor
mov
in
inc
cmpsl
fildll
insl
fs
xor
fsubs
enter
mov
jp
add
jns
lcall
adc
cmp
test
fisttps
dec
and
mov
sbb
clc
test
sarb
push
push
jae
cmp
js
aas
enter
sbb
repz
sbbl
push
fcoml
push
rcll
fsts
icebp
fmuls
xchg
repnz
add
cmp
sti
sbb
ja
out
pop
aaa
subb
pop
mov
daa
pop
add
mov
adc
test
adc
adc
mov
pop
dec
sub
add
les
add
push
xor
push
cmpl
inc
push
pop
les
and
pushf
int
push
ds
mov
or
in
das
lcall
add
pop
pushf
mov
add
sarb
dec
jg
mov
dec
js
decl
mov
adc
adc
dec
add
fdivr
test
adc
mov
sub
sahf
mov
jecxz
xor
lahf
or
imul
test
daa
xchg
xlat
imul
push
dec
loope
test
dec
fs
outsb
pop
add
xor
and
daa
or
cmpsl
adc
mov
sbb
js
jb
and
add
cli
jge
pop
push
inc
lods
jne
dec
cmp
sbb
inc
out
jge
adc
aam
add
push
inc
movsb
push
and
add
inc
outsb
and
int
cvtdq2ps
or
inc
int3
push
sbb
or
fidivs
pop
add
andb
data16
ret
or
dec
sbb
dec
push
cltd
in
rolb
sub
hlt
and
add
test
addr16
add
dec
lods
in
insb
pop
out
lds
cmpb
scas
and
adc
lock
mov
sub
add
xchg
test
dec
popl
push
pushf
fsubl
add
mov
xor
repnz
jne
dec
sbb
sub
or
sbb
add
andb
test
add
outsb
shlb
xchg
in
xor
aaa
ret
stc
stos
push
orb
movsb
add
xor
xchg
es
cmp
mov
stc
verr
mulb
add
cmp
dec
loop
sub
stos
iret
ja
cmovne
cmp
or
xor
push
fisttpl
mov
or
sbb
add
add
int
jle
mov
out
repz
cmp
mov
or
sbb
incb
add
loopne
sub
insl
fnstcw
outsl
addb
cmp
daa
sbb
sarl
dec
pop
inc
aad
insl
mov
add
hlt
sub
push
pop
push
add
adc
adc
pop
ljmp
or
xchg
xchg
cmpb
lahf
rol
mov
add
mov
ljmp
lea
clc
and
sub
shl
xorb
xchg
sbb
mov
ljmp
inc
inc
xchg
add
and
xor
add
outsl
repnz
add
cmp
outsb
jo
sub
jbe
pop
or
outsl
filds
sbb
xchg
call
fwait
add
scas
mov
lds
test
lock
in
pop
jns
jne
jmp
mov
push
jno
pop
xchg
pusha
rolb
cld
add
fldl
push
inc
mov
jecxz
icebp
push
loope
add
xchg
add
aam
cltd
js
cmpsl
lcall
sbb
xchg
pop
xchg
lea
fnstsw
sbb
scas
fildll
cwtl
mov
sbb
cmp
lret
add
jp
mov
fldl
pop
adc
in
and
pop
cmc
jne
jbe
mov
xchg
cmp
inc
mov
sbb
leave
ljmp
and
imul
and
add
in
fld
dec
jbe
adc
lret
pop
sbb
lahf
adc
add
lds
sub
mov
fs
and
loop
jmp
bound
stos
dec
mov
ret
dec
mov
ljmp
cwtl
push
inc
adc
andb
lret
jo
iret
pop
fwait
dec
add
inc
outsb
push
imul
lret
add
cli
rcl
mov
int
sbb
xchg
nop
lock
pop
adcl
mov
pop
cmp
notb
ss
pop
aaa
lds
add
jmp
out
mov
les
or
fidivs
ss
test
icebp
pop
cmp
sbb
and
push
mov
add
shlb
inc
add
les
sbb
pop
lahf
xor
xchg
mov
jge
jge
shrb
jae
pcmpeqd
out
xchg
cld
or
cmp
xor
and
dec
add
and
adc
mov
mov
call
xor
mov
jae
inc
or
testb
pushf
xchg
or
in
test
sbbb
scas
inc
add
ds
lds
lods
push
shrl
je
push
mov
rorb
xchg
addb
push
arpl
loop
pmulhuw
iret
mov
pop
xlat
xchg
mov
je
mov
call
decb
pop
cmpsl
cltd
cmp
pop
aam
add
xchg
cmp
add
jp
ds
cmp
xchg
xchg
decl
aas
jo
sbb
fisubl
shll
add
push
pop
mov
push
sbb
adc
mov
gs
xor
sbb
es
lret
sbbb
mov
add
les
out
mov
add
test
add
adc
jmp
mov
add
hlt
mov
jbe
in
dec
mov
or
cltd
cmpb
out
jb
adcb
dec
repnz
leave
scas
aam
test
add
lea
sbb
lods
add
cwtl
sub
bound
add
xchg
jecxz
rclb
push
push
dec
jnp
mov
stos
mov
aaa
add
and
mov
inc
mov
negb
add
cmp
arpl
add
cmp
hlt
push
adc
shl
add
inc
xor
and
push
pop
adc
mov
mov
jbe
pop
fildl
jb
loop
adcl
pop
mov
push
xor
rol
flds
adc
mov
shrb
and
andb
cmp
lcall
iret
add
cltd
filds
push
nop
pop
out
je
add
scas
out
xchg
mov
popa
cwtl
rolb
jmp
clc
inc
mov
push
add
sbb
fsubrl
dec
sbb
adc
fs
cltd
stos
inc
add
pop
dec
dec
mov
pop
mov
add
mov
inc
mov
jle
or
nop
push
insb
cs
in
cmpsl
add
popf
pop
cwtl
cmp
nop
daa
cld
mov
sub
in
add
jp
enter
jle
imul
insb
mov
sti
testl
xor
hlt
add
out
xor
or
out
adc
fs
sub
add
add
push
repnz
mov
add
cmp
nop
lahf
or
lcall
and
add
fidivl
mov
loope
xchg
push
push
enter
in
adc
cld
cmp
inc
xor
xor
inc
mov
ret
sahf
adc
fists
jg
vsubps
add
or
inc
add
lret
mov
rorb
sbb
add
dec
push
ret
add
mov
jp
adc
js
mov
rcrl
adc
xchg
test
dec
jb
aam
das
inc
popa
push
pop
mov
sbb
pop
inc
mov
or
jle
add
xchg
loopne
inc
inc
rol
arpl
and
mov
mov
popa
shrb
inc
mulb
sahf
add
jl
cmp
and
pusha
mov
push
ss
aaa
dec
push
inc
lret
mov
xchg
jae
loopne
lahf
add
xlat
std
push
adc
movl
inc
outsb
fadd
arpl
add
jecxz
xor
aas
test
inc
add
dec
cs
cmp
push
jg
nop
arpl
int3
xor
mov
aam
add
push
mov
std
ja
add
in
sub
jnp
pop
iret
stos
jg
fs
hlt
in
add
in
add
dec
repnz
test
outsb
cs
cmp
mov
add
dec
je
mov
movsl
mov
mov
sbb
es
push
pop
xor
in
or
sub
incb
rcrl
jnp
ja
cmp
dec
pop
jae
addb
enter
sub
push
shl
fistps
xor
add
outsl
cli
cwtl
jmp
lods
mov
rcr
xor
inc
mov
repz
add
loopne
mov
xchg
aad
imul
push
jno
movsl
adc
lods
ret
or
push
and
mov
adc
add
add
xor
add
clc
cmp
cmp
je,pn
rolb
cmp
pop
push
stos
push
lret
int
xchg
insl
nop
cwtl
int3
add
js
add
jbe
mov
add
pop
lods
pop
cmc
mov
lods
loop
fisttpl
stc
sub
add
cmc
cmp
js
dec
adc
sub
push
andb
xchg
int3
lcall
push
ds
add
scas
jnp
jns
in
out
jge
add
push
cmpsl
popf
cmp
xor
call
int3
enter
sbb
pop
pop
shll
lahf
sub
jl
xchg
and
bound
mov
mov
dec
mov
loopne
adc
or
add
dec
or
hlt
jno
mov
push
mov
faddl
pusha
stos
in
cmp
add
icebp
outsl
fisubs
and
add
gs
iret
push
aam
into
rclb
sti
in
addr16
sub
addl
mull
pop
loop
loop
hlt
in
dec
adc
xchg
push
bound
popa
pop
jmp
inc
lods
je
and
push
add
xchg
cmp
mov
ret
jae
dec
cld
mov
pop
aad
cmp
stc
xorb
add
imul
jnp
mov
or
pop
in
adc
or
arpl
icebp
and
cmp
cltd
aam
mov
or
adcl
fwait
cmp
jae
xchg
xor
cmp
ljmp
lds
and
ds
add
push
std
jns
push
mov
cmp
sub
int
add
lock
aad
xor
adc
sbb
push
leave
movsb
xorb
cmp
andb
inc
cmp
in
in
ds
fwait
cmc
addr16
jle
add
imul
fdivl
xor
sub
fists
inc
cmpsl
jmp
or
scas
pop
ret
add
add
out
xchg
les
mov
mov
sub
insl
add
enter
push
pop
stc
fcmove
test
pop
loope
out
xchg
inc
fxam
std
int3
add
push
das
and
mov
add
mov
inc
dec
enter
xchg
out
bound
cmp
pmulhw
cmp
call
adcl
lahf
and
xchg
in
fsubs
inc
cmp
popf
add
repz
and
cmp
rcrb
out
push
ljmp
pusha
sbb
and
inc
enter
xor
and
xchg
div
jl
ror
fwait
push
stos
push
add
add
dec
or
mov
push
mov
in
testb
fldenv
and
xor
xchg
cmp
cmp
mov
mov
in
iret
or
cmp
sub
ss
jmp
dec
push
loop
sbb
test
pop
jnp
pop
mov
rcl
test
fdivp
or
add
mov
cmp
movsl
movb
mov
shrb
push
jo
outsl
leave
in
roll
js
mov
add
jo
add
sbb
inc
mov
cmpsb
mulb
add
jo
roll
xchg
stos
mov
addb
xchg
jmp
call
add
pop
paddb
ljmp
sub
adc
or
and
add
mov
mov
loop
sub
pop
in
fnstsw
andb
inc
cmpsl
fcos
lcall
daa
add
xor
dec
lds
xchg
push
adc
dec
inc
push
pop
movsl
movsb
leave
push
or
insb
xor
rolb
push
arpl
fsubl
gs
mov
push
add
mov
loopne
out
in
ljmp
xchg
cmpsb
lret
and
add
xorb
push
sub
sbb
add
cmp
sub
movsb
scas
out
or
push
sbbl
pusha
outsb
or
add
xor
jno
add
add
pop
pop
cwtl
popl
add
hlt
pop
aaa
fcmovnu
aam
test
push
dec
ljmp
add
mov
cld
leave
or
loopne
add
push
inc
mov
or
mov
jb
rolb
adc
dec
add
pop
aam
push
add
mov
and
cmc
fidivrl
scas
pop
movl
or
addb
add
mov
in
out
add
fdivr
test
add
in
mov
out
les
outsl
add
jmp
and
xchg
add
jge
mov
or
mov
push
pop
shlb
and
jecxz
int3
mov
cld
push
mov
sti
or
xor
jecxz
sar
inc
push
mov
testb
fisubl
repnz
aaa
xor
xor
enter
add
mov
push
add
lret
sti
mov
inc
xchg
imul
pop
add
adc
pop
jb
pop
pop
fs
aam
imulb
incl
sub
shlb
sbb
cmp
scas
call
add
in
pushf
push
or
jno
or
sub
repnz
daa
rorb
and
pop
dec
mov
add
and
cltd
and
cld
push
add
mov
fildll
scas
add
pop
or
ror
mov
fneni(8087
cmp
enter
pusha
hlt
push
out
cmpl
and
push
mov
sub
inc
enter
adc
insl
shlb
ds
outsl
cmp
addb
lret
or
add
dec
mov
mov
mov
add
xor
cmc
daa
sbb
in
mov
sbb
lea
test
cmp
fcomip
xor
nop
jo
jecxz
add
mov
jle
xchg
inc
xchg
sub
nop
insb
outsb
imul
fsubr
repnz
push
jne
or
nop
fistpl
sub
xchg
adc
and
jnp
adc
stc
inc
or
cmp
add
cwtl
mov
aas
mov
add
aaa
push
sbb
pusha
insl
enter
mov
scas
sbb
jmp
les
jo
loopne
daa
out
cmp
sub
pop
add
pop
addr16
dec
push
test
call
or
ljmp
jns
pop
xchg
adcb
imul
fwait
or
sub
cwtl
cwtl
test
aad
add
pusha
inc
lock
xchg
sub
aaa
imul
sbb
mov
mov
add
push
and
xor
sahf
add
push
iret
and
or
stos
dec
add
outsl
stos
arpl
sahf
xchg
imul
jp
adc
xchg
inc
and
lcall
push
cmp
pop
mov
ss
mov
lock
int3
sti
push
sub
movsl
cwtl
xorb
jge
add
lea
pop
inc
xchg
cmp
cmpsl
xchg
xor
pusha
sbb
xchg
add
mov
add
mov
cmc
sbb
push
aad
nop
rcll
mov
push
mov
fbld
pop
aam
hlt
rolb
rolb
xor
mov
arpl
ret
add
inc
aam
jle
fnstsw
adc
xchg
adc
shll
pop
cmp
es
and
lds
call
emms
dec
add
and
dec
xor
push
fs
test
and
xor
pop
js
and
mov
nop
cwtl
jo
stos
sub
pop
fmull
das
mov
cli
fmull
pop
sub
mov
rolb
outsl
cld
and
jb
push
pop
ret
pusha
loopne
fnstsw
js
aas
adc
mov
ds
sbb
aam
test
add
add
out
inc
pop
fwait
rorb
xchg
mov
push
repnz
mov
in
stos
inc
add
push
jno
cld
dec
sub
lock
jle
dec
add
mov
adc
lods
outsb
add
int3
pop
mov
scas
ljmp
ficomps
cmp
pushl
into
and
adc
jp
rcll
mov
jo
add
mov
mov
adc
jl
add
rorl
sbb
jns
mov
arpl
mov
inc
jmp
mov
add
insl
inc
add
inc
js
fildl
pusha
jns
call
dec
loopne
mov
add
pop
in
dec
outsb
cmp
push
xor
and
enter
pop
jp
lods
mov
repnz
cltd
loopne
in
add
xchg
mov
dec
lahf
ret
and
std
imul
out
popa
mov
and
sbb
mov
out
enter
mov
and
orl
xchg
and
es
fisubrl
test
and
aam
and
pop
std
add
out
jecxz
aaa
cmp
cmpsl
pushf
subl
loopne
je
cmp
add
sub
pop
js
xorl
test
push
push
sub
ss
aam
push
shll
aam
and
add
fstl
lock
bound
or
in
or
add
xchg
jnp
dec
in
xchg
push
aaa
mov
add
sub
and
hlt
scas
and
call
movsb
inc
pop
adc
pop
pop
push
pushf
inc
mov
jl
dec
adc
add
inc
push
lret
sbb
sbb
xor
inc
xor
cld
sbb
mov
xor
stos
setne
inc
test
aas
cmp
dec
xor
cmp
mov
or
aam
out
xlat
add
adc
addl
jb
jns
add
jge
packssdw
stc
outsl
fs
popl
fstpl
out
and
xor
mov
sub
les
fildl
push
inc
add
repz
xchg
inc
sti
pop
int3
std
in
movsb
rolb
pop
add
lock
mov
ud2
adc
inc
rorb
decl
add
add
in
outsb
cmp
dec
jo
loopne
das
scas
lret
jl
and
inc
xor
jnp
add
jl
or
sbb
add
jecxz
mov
sbb
outsl
push
mov
inc
movsb
clc
scas
mov
jmp
shr
inc
hlt
add
fwait
and
nop
fbstp
mov
add
pop
push
fsub
pop
or
xchg
sbb
jb
and
out
xchg
pop
xor
cmpsl
or
sub
add
inc
pop
fstps
movlps
shll
dec
into
and
xchg
pop
lcall
push
aam
dec
add
hlt
test
pusha
imul
add
aaa
mov
mov
andb
adc
rolb
ja
enter
ret
add
mov
fs
push
daa
xchg
and
xchg
add
cltd
add
cli
test
aaa
sbb
out
push
pusha
push
mov
pusha
add
sbb
add
in
adc
adc
adc
out
jl
sub
mov
cmpsb
stc
rcll
sbb
orb
adcb
add
test
mov
rorb
add
mov
push
add
fdivl
jmp
xchg
or
subb
fcmovne
add
je
mov
add
xorl
ud1
incb
and
add
sbb
push
cmp
mov
pusha
sahf
add
add
sub
pop
jle
dec
lods
sbb
add
pusha
shl
insb
popa
or
fsubrs
iret
mov
jl
sbbb
fmuls
or
mov
pop
mov
push
int3
jae
add
outsl
or
or
imul
pop
jge
add
sub
ficompl
mov
shlb
dec
sbb
xchg
cltd
add
cmp
or
cmp
add
sub
push
test
and
idiv
xor
cmp
push
mov
adc
movsb
sub
xlat
das
or
cmp
mov
repz
and
pop
mov
lods
mov
sbb
ds
scas
enter
stos
add
or
js
mov
xchg
getsec
mov
mov
les
add
test
out
dec
addr16
fwait
xorb
lcall
or
add
out
ds
sahf
or
rorb
xchg
inc
mov
lods
pop
xor
das
lds
add
jno
inc
andl
add
mov
and
mov
xlat
cmp
push
cmp
aam
add
push
and
push
or
cmpb
pop
xchg
xor
xchg
mov
nop
push
mov
inc
and
call
dec
add
das
outsb
fs
sbb
add
dec
mov
lds
or
add
xchg
push
ds
jl
cmpsl
add
movsb
and
pushf
xor
jmp
jbe
fcoml
loop
lds
xchg
add
fdivl
dec
xor
pop
jb
shl
adc
push
in
enter
int
or
sub
dec
sub
cwtl
je
or
loop
movsl
js
int3
push
push
mov
gs
or
or
ja
add
cld
cwtl
mov
cmp
jno
cmp
mov
imul
cli
add
jnp
and
outsb
dec
jne
sub
pusha
push
xorb
std
pushf
rcll
add
fisttps
cltd
push
loop
imul
sbb
out
push
ljmp
loopne
push
adc
movsb
add
insb
int
cmpsl
jmp
insb
push
mov
dec
add
sub
in
push
push
adc
imul
enter
jmp
add
mov
inc
lcall
insb
add
cmp
rcl
iret
push
gs
add
jo
pop
lds
push
in
sub
cmp
and
test
clc
and
shlb
popa
or
fnstenv
sahf
push
mov
enter
out
pop
push
bnd
in
xor
lret
loop
mov
cli
xor
add
insl
xchg
pop
jecxz
sti
sbb
ljmp
xor
jo
and
xchg
lea
push
imul
scas
dec
divb
or
ret
xchg
loope
dec
add
and
movsl
and
repnz
sbb
mov
mov
mov
cld
jp
jmp
jg
mov
mov
and
add
inc
pop
lret
or
inc
les
in
mov
dec
mov
cs
xor
xchg
cmp
test
mov
xor
loop
movsl
sbb
jbe
mov
xchg
and
xlat
pop
scas
icebp
aam
cmp
push
mov
xor
lods
mov
je
and
roll
pushf
jg
or
dec
clc
shrb
xor
sub
cmc
sub
or
popa
mov
outsb
lods
addr16
out
or
mov
sbb
mov
in
or
push
mov
andb
jb
test
sub
jno
mov
xor
mov
mov
inc
enter
cmp
imul
xchg
ss
jns
test
enter
inc
add
xchg
cmpsl
ss
in
xor
test
cmp
lods
inc
mov
addb
jne
fld
daa
ljmp
subb
fistps
popf
lock
adc
jmp
lods
and
mov
dec
adc
pop
arpl
jno
push
jle
pop
add
sbb
cmc
andb
mov
and
lds
adc
pop
xchg
add
sbb
xchg
lods
cld
out
pop
idiv
cltd
inc
fnstsw
ret
add
mov
push
pop
movsl
push
add
add
and
decb
xchg
push
cmp
add
adc
jnp
and
femms
dec
addr16
add
xlat
out
dec
inc
pusha
fbld
call
fwait
bound
mov
dec
adc
inc
mov
sbb
mov
scas
xchg
test
or
mov
dec
cmpb
dec
shrb
cwtl
lret
scas
enter
int3
enter
pop
jb
sbb
push
lahf
xlat
ret
add
or
loopne
xchg
test
sbb
inc
loop
insl
mov
add
loope
xchg
mov
mov
ljmp
cmpsl
clc
add
jp
pop
cltd
rclb
fisubs
mov
rorl
xchg
inc
repz
lock
add
loop
add
popf
add
testl
push
jg
dec
and
xor
nop
sbbl
aam
inc
cmp
ret
mov
sbbb
icebp
ljmp
pop
inc
cmp
aam
cld
adc
aaa
push
and
js
cmpsb
leave
sub
inc
int3
fnsave
faddl
add
dec
repz
jb
aaa
add
ljmp
shl
sub
add
mov
and
cmp
inc
xchg
nop
and
cwtl
add
scas
in
sti
or
mov
cmp
cmp
and
fldcw
jo
pushw
push
test
jecxz
cmp
lret
xor
inc
sub
jl
add
das
movsl
stos
cmp
and
pop
add
les
loopne
mov
jne
push
pushf
or
mov
push
rcll
adcl
and
or
int
or
mov
out
add
sbb
jne
mov
mov
popf
xchg
out
mov
adc
add
mov
mov
lods
jb
sbbb
and
xchg
imul
xchg
loope
and
sbb
sbb
pop
lods
mov
add
in
dec
loope
shr
mov
nop
mov
aaa
sub
gs
loopne
cs
pop
mov
ja
rorl
pop
and
cmp
add
fcomip
or
push
dec
mov
ffree
jo
bound
and
loop
jns
cmpsb
mov
add
out
mov
bound
add
clc
cmp
add
mov
pop
lcall
xor
mov
mov
sub
add
jg
paddw
and
stos
push
add
cmp
adc
or
pop
xor
add
cmp
sarb
sub
mov
jge
and
or
jo
adc
jecxz
cwtl
loop
addb
inc
mov
aas
shlb
cmp
notb
insl
call
imul
flds
lock
ds
int3
out
xchg
xchg
add
xchg
into
sub
enter
jne
lock
cwtl
inc
xchg
cmp
add
sti
pop
lret
repz
xor
movsl
dec
or
ljmp
enter
nop
das
cmpb
jmp
dec
jno
mov
mov
xchg
loope
ss
loop
fiaddl
vmread
xchg
sbb
clc
aad
andb
and
shl
sub
add
or
cmp
xor
loope
sbbb
mov
adc
sub
or
jnp
pop
data16
rorb
add
push
lret
jo
out
cmp
clc
test
adc
dec
scas
pushf
jo
pop
adc
cld
mov
mov
pop
or
out
or
mov
xor
push
adc
sbb
mov
adc
add
mov
cwtl
push
enter
dec
mov
add
in
mov
lods
dec
cmp
pop
add
sbb
cmp
imul
push
inc
icebp
ret
lret
dec
in
pusha
test
in
add
inc
jb
dec
sbb
les
scas
jne
add
cmp
cld
push
push
dec
mov
sbb
add
sbb
push
stos
jecxz
xor
bound
sub
pop
add
test
fwait
int
push
push
roll
push
enter
jecxz
nop
mov
fldl
inc
dec
or
push
daa
out
and
incb
pop
mov
mov
mov
push
or
inc
xorb
sbb
in
add
repz
mov
in
adc
sbb
clc
mov
pmaddwd
pop
adc
shlb
sub
add
dec
daa
test
js
add
insb
inc
cmpsl
cmp
push
aam
jb
lods
repnz
outsl
jmp
cmp
adcl
push
in
hlt
jp
or
enter
or
sub
lods
fstl
jg
icebp
insb
and
push
insb
inc
or
stos
xchg
add
add
addb
out
cmp
dec
mov
shrb
add
ja
in
add
fwait
pop
xor
add
push
and
xchg
or
loopne
mov
cmp
inc
add
xchg
ja
pop
add
sub
push
sbb
dec
mov
push
rorb
push
xorb
jnp
ss
je
xchg
lret
daa
pop
add
mov
jmp
pop
or
cwtl
andb
and
imul
adc
fwait
adcb
add
shr
push
in
inc
and
test
and
ret
add
inc
adc
add
aaa
jg
mov
or
out
or
dec
lock
clc
call
in
xlat
dec
sbbb
lahf
ss
out
rorl
inc
and
sbb
and
jne
stos
dec
jno
pop
add
xchg
lea
add
pop
inc
add
loopne
dec
cli
mov
inc
add
leave
push
cld
xchg
and
ror
add
out
or
sarb
ret
shll
cli
xchg
popa
je
fldl
cmp
add
or
jnp
js
imul
jne
insb
and
adc
xchg
jmp
inc
or
dec
sub
inc
and
dec
adc
push
fcomps
xchg
sbb
pop
in
roll
cwtl
add
imul
xchg
lds
es
ljmp
jg
push
or
rolb
outsb
mov
add
jmp
push
cmp
in
test
movsb
pop
enter
add
mulb
frstor
cmp
rcrb
fbstp
push
inc
jb
fcomps
hlt
aas
push
sbb
nop
sti
push
test
push
jmp
xor
pop
dec
mov
add
mov
push
add
push
xorl
xchg
sub
push
pop
and
dec
sbb
int
inc
push
jbe
push
ret
test
je
mov
jns
push
inc
pop
jbe
add
aam
popf
es
push
cmp
xchg
dec
pop
lcall
mov
in
nop
and
pop
and
shll
hlt
call
mov
fcomps
inc
sbbl
stc
pop
sti
jno
idivl
mov
add
addb
mov
dec
jbe
shlb
xchg
cmp
mov
push
rorb
push
stc
outsb
inc
xchg
cmp
dec
xchg
inc
enter
fildll
clc
mov
shlb
push
out
pop
add
ficoms
jbe
loop
xchg
inc
add
iret
inc
mov
cmpsb
add
and
pushf
in
jle
inc
add
out
loopne
xor
sub
fs
movsb
inc
test
or
adc
fidivrs
or
mov
subl
xchg
test
dec
repz
jmp
test
loope
adc
out
hlt
jmp
mulb
lods
or
mov
sbb
test
mov
and
fildl
mov
sub
ja
mov
outsb
mov
js
lret
and
rolb
xchg
je
inc
and
sub
pop
inc
cmpsl
insb
stos
sti
movsb
jae
jg
xor
in
daa
shlb
cmpsl
lahf
push
mov
testb
or
cmp
cmpl
ljmp
std
push
in
or
jl
ja
int
inc
inc
or
push
pop
cs
es
jb
out
jmp
dec
inc
mulb
xor
sbbl
int
jp
leave
repz
cmp
iret
add
insb
lret
aas
or
cmpsb
pop
in
or
jne
or
mov
add
pop
popa
adc
adc
dec
fdivrp
jo
add
movsl
nop
pusha
mov
pop
sbb
or
pusha
mov
push
add
stos
or
mov
mov
sub
sbb
push
lcall
mov
mov
adc
sbb
scas
jmp
add
add
or
call
outsl
lods
adc
dec
pop
lods
ja
into
add
out
pushf
lock
jge
roll
push
notl
mov
dec
pop
mov
ljmp
enter
lcall
jno
fcomp
stc
insb
sbb
je
mov
sbb
cld
fldl
stos
loope
push
mov
fcmovbe
fst
dec
add
jns
in
icebp
mull
loope
jecxz
push
out
xchg
out
das
mov
push
adc
jnp
loop
iret
subb
fs
ficompl
add
mov
scas
inc
xchg
push
pusha
jmp
aas
std
adc
adc
inc
jae
std
ljmp
and
enter
push
xchg
pop
mov
mov
mov
sub
pop
adc
mov
dec
roll
add
insl
xchg
lock
rolb
icebp
push
and
add
ficoms
out
add
aam
flds
daa
adc
pop
push
loope
add
sysexit
cs
sub
xchg
pop
xor
push
insb
filds
mov
int3
sarb
mov
mov
test
subb
mov
daa
dec
stos
inc
das
sbb
and
and
adc
xchg
jb
repz
sarl
jp
out
pusha
stos
rclb
or
add
pop
add
jno
jp
add
jne
xchg
movsb
fmuls
repz
loopne
inc
lahf
jae
pop
mov
test
cmc
test
roll
mov
imul
fisttpll
icebp
push
stos
loopne
push
imul
paddq
data16
shl
inc
mov
xor
ret
sub
outsl
jno
dec
sub
adc
adc
xchg
add
pop
mov
push
mov
pop
push
pop
jae
and
icebp
stos
mov
stc
sub
lcall
mov
ds
dec
pop
xorl
into
sbb
cli
fcmovbe
pop
push
repnz
push
push
movsb
add
and
xchg
add
movsb
xchg
flds
les
xor
test
inc
aas
lret
add
out
xchg
add
and
fstp
and
sub
push
scas
hlt
jmp
add
cmc
mov
and
lahf
mov
insl
mov
push
xchg
loope
call
lahf
inc
addr16
pop
daa
add
fisttpl
lcall
dec
inc
jge
mov
lret
sbb
movsb
pop
cmpsl
dec
pop
out
fcmovbe
adc
pop
push
or
in
add
and
xchg
pop
mov
add
aas
call
xor
negl
fldl
insl
adc
jae
jg
fwait
into
pop
daa
xchg
sub
pop
clc
inc
movsb
sbb
mov
dec
call
cmc
inc
or
pop
dec
add
into
dec
lea
push
pusha
in
sub
subl
pop
inc
aaa
cmpsb
jns
pushf
arpl
out
and
in
push
or
outsl
push
in
add
or
xchg
or
adc
push
xor
fdiv
sub
and
add
mov
xchg
and
mov
mov
mov
or
adc
jl
add
cs
mov
pop
jp
inc
loope
jnp
push
add
shll
mov
cs
repz
in
add
outsb
orb
popa
jge
shrb
and
sti
scas
cltd
mov
aaa
lds
push
adc
shlb
pop
je
loope
jl
and
jno
jle
rorb
and
pop
sub
jns
adc
push
mov
out
enter
push
enter
push
aas
call
add
nop
pop
push
add
out
sbb
out
inc
mov
add
ds
pop
leave
add
cmc
jmp
aas
add
xor
add
test
fisubrs
xor
insb
lock
test
mov
pminsw
push
cmp
xor
mov
and
dec
mov
xor
xor
cmp
in
js
pop
or
aas
inc
stc
or
adc
lock
add
inc
sbb
inc
push
loope
and
add
push
clc
in
add
arpl
mov
mov
pusha
jo
lret
xor
dec
jmp
shlb
push
call
fldl
out
inc
inc
add
outsb
add
sub
enter
xor
add
xor
bound
or
ja
xor
dec
pop
add
stos
notb
hlt
push
add
test
cli
out
fcoms
loopne
add
xor
les
sub
orb
out
scas
and
cld
mov
pop
and
adc
nop
mov
call
jmp
ja
fsts
sub
pop
hlt
test
popa
loop
andb
xchg
out
imull
adc
xlat
popa
push
and
pop
pop
mov
sahf
ds
test
clc
add
and
inc
mov
cmp
cmovb
sub
nop
inc
xchg
mov
dec
dec
hlt
dec
arpl
in
push
dec
cs
sarb
jg
leave
shrl
lea
adc
jecxz
cmp
push
mov
out
in
sub
push
je
ret
scas
cwtl
inc
loop
stos
nopl
pop
pop
xchg
lock
add
shll
dec
ljmp
sahf
mov
dec
pop
cld
cmp
out
je
xchg
test
out
or
out
push
imul
jb
js
inc
push
orb
mov
jp
push
adc
cli
insl
cs
and
pop
cltd
or
jo
add
push
push
push
shlb
sar
in
jge
ss
shlb
jl
sbb
pop
das
ret
lock
add
push
in
cwtl
fwait
sub
adc
mov
nop
test
mov
outsb
mov
push
test
mov
lods
aas
shrb
aad
lahf
inc
add
lret
cmp
push
adc
push
pop
insb
add
sbb
into
or
test
mov
and
orl
add
add
or
push
jb
fmuls
add
stc
cmp
fstl
mov
dec
cltd
push
xchg
push
sbb
out
add
roll
fdivrs
add
mov
cmp
loope
outsl
call
mov
jge
mov
inc
pop
jp
dec
push
scas
lock
dec
xor
lock
adc
add
inc
pop
push
lea
aad
dec
add
inc
add
sbb
adc
add
cmp
or
add
jge
cmp
add
jl
loope
sub
push
cmc
scas
in
jp
int3
xchg
inc
jmp
std
sub
adc
sbbb
pop
mov
es
jge
push
mov
out
add
fsubs
add
and
inc
movsl
adc
sub
popf
outsb
xor
inc
jae
cmc
xchg
paddusb
lock
dec
adc
or
adc
sub
cmp
mov
ret
pop
add
sub
fmuls
or
mov
sbb
cmp
nop
and
loopne
push
lock
ljmp
mov
arpl
lea
add
mov
fdivrp
je
ret
addr16
dec
sub
mov
nop
inc
or
ds
insb
dec
stos
shlb
mov
clc
cmpb
and
movsb
cmp
sbb
mov
adcb
sbb
aam
mov
popa
sub
pop
ret
out
lock
sbb
push
test
pop
xor
mov
pop
pusha
jecxz
mov
lcall
sarl
lea
inc
add
xchg
jle
or
leave
fdivrl
pushf
mov
mov
jp
inc
sub
aad
xchg
add
dec
or
or
push
cli
inc
push
sahf
sbb
xchg
push
adc
enter
fisubrs
ret
add
or
cmp
stos
imul
jle
sbb
sbb
and
mov
sbb
xor
popa
pop
jo
lds
out
outsb
mov
and
mov
sbb
sub
dec
ret
pop
push
mulb
sbb
arpl
and
aas
push
ljmp
popf
sahf
pop
cmp
pop
stc
add
sbb
cs
mov
shlb
int3
mov
bound
jle
rol
jecxz
cmpsb
add
fincstp
mov
mov
pop
sbb
ds
add
cli
pop
inc
inc
jno
pushf
sub
sub
ret
imul
lods
rcrb
mov
pop
daa
xchg
pop
ja
mov
loope
fisubl
clc
mov
add
lea
adc
lcall
pushf
sahf
cmc
xor
sbb
pop
xchg
sbb
add
shrl
sahf
cmp
bound
or
movsl
inc
jbe
hlt
add
add
cmp
sbb
adc
xor
test
adc
mov
add
es
insl
fdiv
xor
lock
jecxz
push
push
mov
loopne
add
or
sarb
mov
add
stos
cmp
mov
int
jo
inc
out
ljmp
mov
add
idivb
add
imul
mov
lds
subl
xchg
ja
loop
roll
mov
pop
mov
sub
pop
sbb
push
out
pop
cmp
pusha
mov
pusha
lock
pop
pop
add
icebp
test
push
jl
mov
jno
inc
jbe
mov
jo
int3
fmuls
xor
lahf
adc
mov
xor
jg
sbb
arpl
addr16
jg
lahf
cmc
xrelease
or
xchg
jmp
mov
nop
insb
in
leave
pop
jecxz
jo
or
scas
cltd
pop
push
ja
adc
ffreep
or
xor
movb
jno
mov
pop
loop
add
mov
pop
pushf
adcl
lods
push
adc
push
or
xchg
pop
in
nop
sub
jns
aad
push
out
push
out
or
add
jle
xchg
xchg
cmpsl
mov
xchg
outsb
add
lea
test
scas
inc
aad
push
vaddsd
xchg
mov
insb
outsb
leave
popa
sbb
pushf
lock
mov
adc
adc
roll
test
fmul
add
aad
adc
push
sub
in
push
cwtl
add
cmpb
pusha
add
movsl
mov
and
leave
add
fcmovb
or
stc
sbb
xlat
push
cmp
add
clc
imul
dec
sub
outsl
jb
and
jnp
and
mov
outsb
adcb
or
sub
cld
gs
jmp
inc
sbb
dec
and
mov
push
jo
rclb
repz
pop
ret
inc
mov
mov
sbbb
and
sub
into
test
jmp
push
sub
xchg
sub
and
jmp
packssdw
cwtl
js
push
xchg
repz
mov
jb
mov
fiadds
push
testb
ds
mov
lahf
add
cmc
lock
je
jnp
adc
adc
out
sub
push
fadds
dec
rcr
sbb
mov
or
dec
fsub
fstpt
mov
js
cmpb
scas
xchg
add
sub
cld
and
ljmp
and
or
or
push
xor
pop
adc
mov
mov
mov
add
mov
popf
push
bound
repz
sub
add
jge
mov
int3
sub
aaa
jnp
mov
jne
add
push
imul
and
xchg
mov
es
lret
enter
test
pushf
add
xor
sarb
in
ret
sub
sahf
aam
pop
add
add
adc
shrb
jo
push
outsl
in
inc
sbb
push
push
adc
mov
push
imul
pop
arpl
xchg
xor
sbb
scas
mov
in
stos
mov
sbb
add
mov
cmpsb
pop
int3
pop
call
stos
clc
aam
ss
sbb
jo
dec
movl
fiaddl
notl
fs
jo
cmpsl
xor
push
add
or
std
lds
add
fisubl
jle
sbb
or
orl
jg
adcb
xchg
stos
out
aad
sbbl
jl,pn
jb
orl
js
and
xchg
cmp
cmp
in
xor
fldl
cs
xchg
adc
xor
xchg
jg
xor
ret
sub
and
shlb
jnp
mov
inc
and
loopne
push
cmp
push
xor
loope
js
push
enter
or
test
scas
std
rolb
and
out
lea
mov
sub
or
enter
add
and
push
test
mov
xor
sti
data16
cmp
imul
cmc
into
push
xchg
repnz
paddw
xchg
xchg
aad
pop
jno
aam
sbb
inc
mov
dec
adc
aaa
mov
sub
cmp
or
mov
sahf
push
jmp
cmp
adc
popa
andb
cltd
std
orb
mov
and
in
add
xchg
mov
xchg
ret
fldt
loop
dec
pop
out
and
cwtl
push
call
xor
mov
dec
pop
lock
sti
cmp
add
mov
subb
and
cld
leave
sub
inc
mov
sbb
sub
sbb
lds
xor
mov
out
nop
cli
cs
lret
add
sbb
mov
pusha
mov
dec
xchg
pusha
pusha
sub
add
mov
fbstp
ja
dec
add
insb
std
and
shrl
pushf
faddl
pop
aas
rclb
xchg
jge
push
mov
xor
idivb
inc
andl
pop
stc
mov
outsb
les
or
ljmp
sub
test
push
mov
mov
add
sub
jle
add
lret
push
rcrl
add
mov
sbb
ds
popf
ret
xor
scas
pop
out
pop
pop
stos
and
repnz
mov
lret
ja
outsl
push
out
sub
mov
or
dec
stc
push
xchg
call
inc
sbb
and
addr16
stos
dec
push
mov
sub
loopne
mov
jbe
dec
nop
shlb
inc
sub
inc
push
lea
sub
mov
pop
mov
inc
jle
mov
divb
stc
or
xor
dec
push
orb
pop
popa
lea
xchg
inc
shrl
pop
jecxz
jmp
add
ja
mov
clc
or
aaa
aas
in
adc
xor
mov
sbb
iret
sub
dec
cltd
add
xchg
sti
push
popf
cmpb
iret
in
js
mov
xor
or
adc
push
xchg
dec
bound
fs
adc
add
add
jmp
jne
push
hlt
push
loope
enter
roll
loopne
jp
jne
add
lods
cwtl
loopne
rolb
scas
lock
xchg
lcall
xchg
pop
fwait
mov
leave
jmp
dec
shll
sbb
xor
call
sub
push
stos
mov
and
int3
cmp
add
mov
inc
jle
add
fmull
in
jb
loopne
fsubrs
test
nop
add
icebp
dec
adc
pusha
push
test
xor
shlb
mov
rorl
jmp
sub
push
jge
add
mov
or
out
inc
cmpsb
pop
popa
arpl
adc
pop
jg
and
sahf
shr
aam
mov
repz
sub
mov
sbb
roll
jne
cmpsb
push
popf
mov
test
lods
loop
pushf
cld
xor
adc
add
dec
cltd
test
clc
mov
cmp
mov
mov
and
pop
push
inc
jle
or
lods
repnz
sbb
mov
adc
push
sbb
loopne
fldl
pop
out
push
popa
ss
sub
jp
mov
addr16
clc
adc
xor
push
xorb
jecxz
stos
sbb
push
roll
arpl
mov
pop
loopne
call
mov
sahf
adc
push
in
add
pop
ds
mov
mov
xchg
into
fdiv
es
ret
add
shlb
jo
cwtl
push
mov
xchg
or
and
or
sbb
imul
mov
push
push
ljmp
mov
mov
jns
add
mov
or
add
mov
add
mov
bound
lahf
in
push
ret
jae
aaa
in
fadds
pop
sbb
cli
out
adc
mov
nop
inc
or
pop
cwtl
mov
test
adc
xlat
push
jmp
aad
cli
in
fadds
xor
arpl
outsb
popf
pop
mov
xchg
subl
adc
insb
sbb
cmp
mov
adc
lcall
and
pop
outsl
cmp
xor
repnz
idivb
add
gs
scas
nop
loope
add
jl
jmp
out
lock
pop
xlat
inc
outsb
test
push
loop
cmp
and
fstpl
rorb
push
cmp
call
pop
mull
test
xor
or
stos
pop
rclb
shrb
cmp
pop
cmp
add
in
mov
les
sub
int3
mov
bound
mov
mov
adc
jmp
xor
je
sar
adc
fcoml
xor
leave
and
enter
dec
rorb
mov
movsb
lahf
cld
fsubrl
jo
adc
mov
inc
xlat
out
pop
pop
lea
pop
cmpsl
jecxz
xchg
repnz
popf
add
xchg
mov
mov
pop
mov
fucompp
add
pop
push
or
sahf
inc
lods
mull
pop
les
lods
xor
push
fmul
jge
xchg
loope
jl
xor
cli
push
outsb
mov
rorb
in
test
and
dec
and
cmp
or
jg
arpl
movsb
xchg
and
mov
sub
jno
pusha
movsl
push
xor
pop
dec
mov
rolb
stos
fstps
jne
add
adc
roll
jl
add
sti
xlat
push
sahf
jmp
sbbb
mov
cmp
push
ljmp
repz
sub
pop
inc
ds
popa
adc
jae
ret
pop
mov
inc
gs
les
stos
push
add
cmp
dec
lods
or
inc
mov
hlt
jnp
inc
pop
das
xchg
int3
notl
mov
cmp
inc
test
in
call
sbb
insl
xchg
push
mov
cmp
dec
test
dec
pop
in
je
mov
in
ja
xchg
sahf
jl
pop
mov
incl
and
mov
pop
das
cli
xor
dec
fists
push
insl
pushf
ss
mov
xchg
cmpsb
imul
dec
jge
sar
cs
imul
aas
dec
xor
add
lods
data16
sub
rcr
xchg
push
xchg
add
aaa
adc
fildll
scas
movsb
js
fadds
xchg
mov
pop
jg
and
stos
jno
addr16
and
sub
pop
xor
in
cmp
xlat
lret
push
movsb
cli
xor
or
bound
inc
pop
stc
xchg
cmpsb
add
mov
outsb
out
rcrb
xchg
imul
mov
lock
rcll
or
movsb
rorb
cmp
pop
shl
cmc
dec
outsl
test
inc
gs
xchg
push
add
sub
mov
adc
push
ret
add
pop
adc
gs
jmp
jae
and
jg
xchg
test
mov
push
fcompl
loope
adc
out
lcall
and
inc
cmp
add
aam
jns
mov
loope
in
std
inc
jb
xor
ss
aaa
push
jecxz
in
inc
mov
das
inc
cmc
and
add
xchg
inc
das
jge
cmc
push
jno
arpl
repnz
imul
lret
movntps
jb
inc
add
cli
sbb
int3
out
cwtl
lahf
adc
repnz
inc
stos
mov
repz
fs
gs
and
dec
cmp
sub
aad
mov
std
push
add
leave
pop
xchg
xor
inc
shr
push
cs
inc
sub
push
lahf
in
call
jecxz
inc
add
xchg
inc
sub
add
push
loope
movlps
xchg
push
mov
mov
cli
dec
push
jecxz
sub
sub
lods
xor
aas
push
push
mov
pop
js
jnp
and
push
xchg
mov
filds
jge
inc
sti
xchg
cmpsb
sbb
cli
lahf
pusha
cmp
mov
and
mov
test
fsts
add
xchg
pusha
insb
test
nop
das
loop
or
mov
mov
popf
jne
cwtl
jmp
add
mov
adc
flds
hlt
rcrl
je
or
js
xor
and
pop
lods
add
sub
push
add
arpl
mov
test
cmp
repnz
push
push
scas
cs
jl
jns
fsubs
pop
push
sbb
sbb
arpl
jno
adc
add
ss
ret
mov
xchg
test
mov
jne
adcb
pop
call
dec
stos
pop
test
xchg
ss
ja
mov
cmp
pop
and
xchg
loope
xor
enter
out
rorb
ficoml
mov
jno
push
push
mov
popf
jg
inc
fcom
push
icebp
inc
rol
notb
cli
cmp
cwtl
jmp
ret
fwait
add
mov
and
pop
inc
sti
ret
xor
pop
adc
out
cmpsb
loop
pop
xchg
push
incb
inc
je
jmp
fsubr
adc
popa
imul
pop
or
in
cvtps2pd
mov
or
dec
nop
pop
loop
add
orl
sbbl
pop
popf
scas
xchg
pop
mov
shlb
lret
clc
outsl
and
adc
rcl
add
xchg
int
fs
add
mov
pop
rclb
faddl
cmp
aas
xchg
or
add
inc
cmp
ret
xor
adc
test
and
mov
xor
arpl
push
xchg
loop
cld
lock
testl
add
or
fisubrs
mull
and
and
mov
sarl
sbbl
mov
pop
data16
jbe
sbb
lds
xchg
lahf
xchg
movsl
mov
popfw
aas
lret
or
sub
xchg
xchg
mov
and
sbb
or
add
frstor
mov
cmc
dec
push
fsubr
jg
cmp
stos
loopne
add
pop
sbb
cmp
jo
dec
cmc
hlt
adc
jmp
dec
sub
mov
in
jnp
dec
inc
pop
dec
gs
fldl
not
xor
movntq
mov
jge
orb
and
xor
dec
xchg
or
aas
bound
popf
popa
outsl
sarb
cmp
int3
imul
mov
mov
mov
fimull
cmc
or
enter
add
jnp
mov
mov
in
insb
leave
mov
aas
jbe
cmp
xchg
imul
xor
inc
lret
nop
call
push
mov
rcr
aam
loope
pop
mov
hlt
das
lods
dec
loop
xchg
xchg
xchg
out
jge
rsqrtps
add
jns
ja
inc
mov
fidivl
inc
mov
movzbl
cmp
dec
add
jns
pop
add
cmpb
jg
pop
add
add
rcrl
mov
dec
add
lock
inc
ret
cmp
insl
adc
xorb
add
arpl
jp
pop
rorl
cmp
pusha
add
outsb
cmpsl
cmp
nop
imul
and
imul
lds
dec
aad
in
xchg
fndisi(8087
pushf
add
sbb
sti
mov
sbbb
out
cmp
xor
xor
add
test
rorl
adc
out
in
cmpsb
or
sbb
rcrl
sbb
test
cmp
xorb
and
gs
mov
out
rclb
pop
sub
push
sbb
sub
pop
les
and
stos
in
mov
push
hlt
mov
or
push
outsl
mov
push
pop
and
mov
or
shr
fildll
shl
add
iret
jae
xchg
sbb
movsb
shrl
mov
add
mov
jmp
ficompl
push
push
xchg
jno
xor
jle
sbb
push
stos
cwtl
pop
dec
xchg
lcall
popl
jl
es
ds
push
cwtl
add
adc
clc
dec
add
stc
cmp
int3
fdivrs
pop
mov
xor
adc
aas
scas
loopne
mov
loop
sub
or
adc
mov
mov
ljmp
dec
mov
add
imul
add
inc
sti
xchg
test
fsubs
mov
inc
jp
pop
or
fcmovu
xor
hlt
fdiv
cwtl
xor
jbe
adc
scas
dec
or
pop
cmp
mov
movsl
pusha
pop
into
add
mov
sub
jnp
int
ret
mov
pop
cltd
scas
mov
iret
add
mov
and
adc
pop
adc
out
xchg
xlat
lods
mov
sbb
dec
mov
pusha
std
mov
sub
inc
add
fcompl
fsubrs
and
rol
add
ds
or
pusha
test
dec
mov
sub
movsl
adc
sbbb
xchg
ret
pop
arpl
inc
fimuls
and
rclb
dec
aad
leave
pop
jp
adc
nop
hlt
add
pop
xor
into
jb
mov
ss
pushf
sub
inc
roll
cmpsb
push
and
xchg
add
mov
push
mov
pop
aas
mov
ss
inc
cs
lock
xor
in
ret
pop
lods
adc
loopne
add
cmp
inc
lret
into
push
pop
add
jmp
imul
jge
enter
andb
fwait
adc
dec
xor
mov
mov
add
in
int3
aam
lret
dec
sbb
mov
pop
loope
dec
mov
mov
cli
push
jo
orb
jp
add
bound
sarl
pop
aas
sahf
xchg
cmp
push
iret
or
movsl
pop
pop
mov
outsl
and
mov
adcb
sub
xchg
out
cld
and
mov
cmpb
repz
pop
jne
push
popf
pop
test
imul
mov
push
xchg
jle
repz
adc
sub
orb
daa
adc
les
ljmp
dec
cmp
mov
adc
sub
mov
sub
dec
ret
mov
pop
xchg
push
cld
imul
js
test
out
pop
pop
adc
inc
fisubrl
xchg
iret
jbe
mov
inc
cmp
or
xor
push
addr16
adc
arpl
icebp
pop
lods
and
test
clc
cli
dec
test
sbb
rclb
xor
add
or
xor
add
mov
jge
enter
test
daa
lock
add
add
push
mov
pop
cli
add
push
mov
push
mov
push
das
jge
pushf
fldz
cmp
mov
insb
ss
push
sub
jno
or
imul
jmp
decl
mov
out
add
mov
incb
add
jno
cmp
pop
jo
push
cmpsb
inc
ror
cmp
cmp
xchg
sbbb
popa
and
bnd
xorb
repz
dec
xchg
mov
js
aam
or
pop
je
arpl
lret
xorb
pop
add
inc
ljmp
cmp
cmp
mov
in
cwtl
cmp
call
lock
and
xor
gs
or
dec
cmp
mov
data16
add
add
sbb
out
negl
or
pop
inc
orb
sub
push
call
inc
pop
mov
filds
xor
call
jnp
mov
test
adc
sbb
cmp
mov
or
cwtl
sub
push
mov
sarb
and
xchg
sbb
sbb
je
sub
jne
cmc
test
inc
add
mov
stos
sbb
adc
insl
jno
call
dec
lcall
int
sbb
movb
mov
loop
popf
and
jne
stos
dec
inc
xor
ss
int3
cmpsl
enter
add
mov
cltd
adc
stos
clc
inc
adcl
xchg
jno
mov
add
adc
or
stos
add
subb
imulb
daa
push
lds
xchg
popf
add
xchg
clc
call
and
mov
or
ret
lret
xchg
cmc
cmpsb
cmp
mov
lods
dec
test
cltd
pushf
and
and
cmp
stos
dec
or
fwait
movb
and
insb
pop
cmp
add
sbb
add
rcrl
ret
xlat
lods
pop
data16
popl
daa
rolb
sub
dec
mov
test
ds
ret
out
lds
push
xor
cmp
sti
mov
in
imul
sbb
add
mov
js
and
out
movswl
aaa
stos
and
push
mov
push
mov
jo
and
jg
add
cmp
pop
mov
int3
mov
fcoms
fildl
add
and
mov
inc
cmp
add
cld
or
inc
lods
add
aaa
daa
loopne
inc
xchg
call
mov
pcmpeqw
xor
add
mov
or
nop
dec
push
aad
mov
xlat
loopne
les
testl
sbb
dec
in
xchg
jmp
adc
and
cmp
fldenv
aas
mov
iret
cli
push
pop
pop
xchg
add
and
imul
xor
idiv
sti
pop
std
stos
add
mov
mov
xor
pop
mov
add
mov
push
sbb
pop
xor
cmp
mov
outsb
insb
adcb
jb
mov
dec
push
mulb
addl
mov
or
inc
mov
cltd
sbb
adc
aam
addr16
jno
push
dec
dec
xor
pop
mov
pop
xor
out
jo
fbld
pop
mov
aam
je
andb
fiaddl
lds
cmp
add
fdivrp
aam
mov
test
hlt
loopne
or
call
add
pop
sub
in
imul
addb
add
dec
pop
pop
pop
nop
push
shl
hlt
and
xchg
xor
add
cld
das
add
cli
pusha
xor
pop
aaa
and
jg
cmp
xor
push
pop
push
mov
lahf
bnd
sub
add
mov
out
aas
xor
pop
hlt
xlat
add
in
xor
stos
add
jb
add
push
add
pop
outsb
or
add
lahf
lods
pop
dec
int
add
jecxz
testl
test
arpl
xor
mov
sbb
roll
jno
mull
add
nop
mov
sti
push
sbb
mov
jo
adc
xor
cld
or
popf
cmp
add
cmp
dec
roll
nop
addr16
outsl
push
aam
or
jg
lret
das
dec
daa
lahf
mov
loopne
cwtl
push
in
cmp
inc
stc
scas
xorb
push
add
sahf
imul
ja
out
ja
sbb
stc
add
sbb
add
dec
dec
add
push
mov
add
and
xchg
push
sbb
aad
xchg
pushf
ss
subb
push
cs
or
adc
dec
scas
iret
sbb
in
jno
call
shl
loop
cmp
ja
je
aam
repz
push
add
shll
flds
push
rorl
or
in
cmp
push
repnz
mov
adc
data16
xchg
jbe
bound
inc
adc
mov
add
aas
pop
mov
sub
add
mov
add
push
jecxz
push
loope
add
scas
cld
dec
cli
adc
lret
int3
and
inc
add
xor
testb
nop
ljmp
add
mov
lds
fs
out
add
inc
pop
shlb
xor
nop
or
adcb
mov
mov
pop
adc
cmpsb
fwait
add
and
dec
adc
test
scas
or
add
mov
pop
not
add
sbb
pop
imul
nop
in
mov
aam
enter
inc
cltd
leave
jns
mov
fs
rol
add
aaa
add
add
xor
inc
ret
adc
cs
aaa
movl
pushf
aad
mov
xchg
and
out
lcall
sub
jmp
add
and
cmpsb
lret
sbb
pusha
and
ret
inc
sbb
sub
in
add
out
sbb
out
add
mov
inc
ja
incb
jmp
sbb
test
cli
imul
or
adc
adc
repz
mov
movsl
add
xor
or
insl
hlt
cmpb
add
divl
add
movsb
ss
dec
xor
or
daa
add
mov
shr
mov
add
sarl
cmp
fadds
rolb
aam
add
push
cmp
push
fnstcw
mov
add
jno
push
ss
xchg
inc
sub
add
xor
xchg
in
mov
mov
sub
add
push
xor
lods
pop
pop
mov
es
add
lock
ret
mov
jno
xorb
inc
cs
mov
fcmovbe
mov
jae
sub
add
les
ret
sub
pop
mov
pop
dec
clc
dec
inc
dec
fwait
sbb
cmp
fsubl
adcb
xchg
sahf
sbb
and
fcoml
mov
inc
xchg
call
add
jmp
add
mov
stos
repnz
in
add
movsl
fwait
mov
sbb
push
cli
out
hlt
outsl
jb
and
ja
xlat
jbe
out
ss
xor
mov
loopne
cmp
imul
adc
in
add
add
movsl
sub
mov
or
jmp
sub
add
and
mov
add
xchg
jl
mov
int3
popf
jecxz
cld
andl
call
sub
add
mov
scas
xchg
xor
fildl
cmp
orl
pop
fdivrl
add
push
pop
mov
loope
add
mov
outsb
or
xor
inc
add
and
mov
ficomps
andl
jo
shl
jmp
dec
pop
add
cmp
pop
cmp
mul
jno
je
sarl
adc
lds
cmc
hlt
out
sbb
ljmp
xchg
add
sub
sar
out
push
mov
add
xchg
mov
jns
rcrl
add
jae
jmp
add
andl
pop
add
mov
adc
add
out
inc
adc
das
testb
es
lcall
scas
lret
add
es
pop
cwtl
add
adcb
mov
push
aaa
dec
mov
push
nop
cmp
inc
lods
fstps
adc
adc
imul
jecxz
cltd
andb
pop
leave
cmp
lret
lods
icebp
in
insb
popa
add
and
cli
cs
dec
add
sarb
xor
cmp
sbbb
dec
push
pop
lock
test
mov
clc
add
outsl
mov
out
lock
mov
jb
insl
in
or
mov
add
mov
imul
mov
and
inc
mov
cmp
test
mull
xor
dec
add
out
out
mov
daa
add
rcrb
mov
add
xor
push
sbb
repnz
popa
mov
aam
in
adc
lock
jnp
lahf
adc
cmpsb
sahf
int3
cmc
ret
shl
roll
or
test
xchg
mov
and
out
shl
mov
or
sbb
or
scas
pop
dec
add
fcmovne
aaa
fcompl
testl
push
mov
xchg
pop
shrb
sbb
sub
jmp
mulb
adc
adc
jmp
mov
incl
cltd
addr16
cmpsl
xor
pop
mov
call
popf
push
xchg
addl
cmp
and
and
xchg
bound
fisttpl
jns
mov
cmp
dec
out
loop
inc
add
mull
and
pop
sub
in
and
push
insb
push
mov
push
mov
jle
imul
add
popf
push
jecxz
xchg
aaa
pusha
shl
jl
jo
dec
or
add
jae
ror
push
cmp
mov
add
xchg
sahf
push
jmp
and
push
cld
sbb
dec
test
add
and
dec
xor
mov
test
jmp
nop
xor
in
aam
negb
das
push
inc
pop
les
pop
mov
dec
dec
mov
repz
mov
add
jbe
scas
xor
pop
mov
in
xor
out
cmpsl
or
cwtl
dec
mov
xchg
sbb
push
cmp
adc
cmpsb
inc
js
jl
add
add
call
lock
lret
jbe
aam
xor
inc
cmp
add
mov
lea
mov
add
or
test
dec
lock
cli
push
repz
push
andb
jmp
add
mov
sub
movsl
ret
or
xor
pop
filds
stos
sbb
lock
ljmp
enter
loopne
cmc
add
xchg
stc
push
add
dec
inc
bound
fcomps
jnp
lods
lret
mov
nop
loopne
jno
push
faddl
test
leave
and
xor
adc
jge
xchg
add
or
add
dec
ljmp
cld
inc
insl
add
pop
daa
subl
sub
jmp
sti
sub
inc
xor
add
or
cld
add
push
pusha
cmc
jb
sbb
dec
cmp
jbe
hlt
inc
mov
xchg
add
pop
icebp
inc
push
or
add
and
or
adc
add
jo
inc
cld
leave
dec
test
xor
dec
bound
pop
adc
in
sub
and
add
fidivrl
push
in
jbe
outsb
inc
out
repz
es
adc
cltd
mov
pop
stc
data16
add
xchg
subb
jge
sub
orb
sarl
mov
cli
fcomps
add
sbb
push
xlat
xchg
add
pop
mov
incb
push
adc
dec
int
xchg
mov
pop
pop
mov
add
or
sub
add
xchg
cmp
mov
icebp
cmp
int3
insl
push
loop
andb
dec
sarl
scas
adc
in
scas
pop
sub
mov
data16
add
insl
pop
popa
push
cmp
add
mov
ljmp
roll
add
rcr
jae
add
inc
jmp
cmpsl
add
sub
imul
add
and
daa
test
outsl
inc
out
mov
mov
cld
or
jg
adc
sbbb
adc
js
lret
lahf
add
mov
mul
shl
xorb
add
punpckhdq
mov
sub
jecxz
adc
ret
dec
imul
or
jns
insl
pandn
cmp
cltd
or
sbb
add
and
subb
inc
jle
data16
and
aam
add
dec
int3
mov
adc
out
nop
int
gs
lret
stc
mov
rolb
add
out
lods
pop
ret
ss
shrb
add
adc
out
cmp
xchg
jne
repz
push
add
push
or
sarb
cmp
mov
push
xchg
mov
fwait
add
inc
mov
imul
push
add
aam
lcall
add
data16
test
gs
fs
mov
add
das
test
mov
add
xchg
test
add
dec
or
adc
out
imul
lock
call
sarl
mov
and
mov
in
int3
push
mov
jle
pop
push
mov
and
and
cmp
mov
rcrb
cmpsb
add
outsb
mov
add
stc
adc
pop
subb
pop
cmp
and
fisubrl
lock
fmull
mov
pop
pop
cmp
xchg
or
or
imul
ja
andl
divl
and
push
data16
sarl
add
gs
add
adc
inc
mov
or
sahf
fnstsw
mov
add
adc
jo
lret
or
popf
sbb
bound
aad
or
xchg
lahf
test
inc
cmp
fsubs
inc
push
pop
gs
stc
rorb
shrl
sti
sbbb
flds
sarl
adc
push
xchg
pop
and
add
jg
es
xlat
inc
nop
dec
ja
jecxz
jg
add
xor
xchg
outsb
push
loopne
in
xchg
mov
addr16
add
push
std
imul
lds
xor
xor
jne
cmp
data16
ljmp
pop
mov
shlb
mov
push
stc
push
cmp
add
sub
inc
shlb
inc
jl
adc
mulb
dec
cmp
pop
add
jge
loop
inc
fsubr
lahf
mov
js
jle
add
fs
add
add
cli
stos
sar
out
negl
lods
lret
fsubs
cmp
aad
mov
mov
cmp
subb
inc
add
pop
sti
push
push
xchg
cli
pusha
mov
ret
xor
pop
mov
jl
mov
mov
sub
inc
popa
andl
not
dec
mov
pop
bound
xor
jne
pop
mov
out
sub
and
mov
push
pop
push
aas
jp
dec
in
add
test
push
sub
leave
mov
rorb
incb
rcrl
sub
inc
push
or
loop
add
xchg
cmp
test
xchg
pop
sub
jl
je
xchg
mov
shr
stc
fcom
add
xorb
mov
aad
mov
push
jg
cmpsl
add
sub
adc
pop
cmp
sub
mov
loopne
add
ss
push
add
pop
pop
daa
lahf
rcrb
add
xor
adc
call
shr
add
adc
outsb
or
add
pop
out
jne
sub
push
add
xor
dec
or
jae
insb
vmwrite
test
add
mov
xchg
xchg
jl
ret
pop
rolb
inc
stos
inc
out
mov
lods
fs
int3
sbb
cltd
add
sbb
lahf
inc
mov
push
dec
int
inc
add
jb
fistpll
xor
sbb
push
and
adc
test
push
loope
loopne
sub
jno
add
imul
lods
lahf
jne
enter
mov
mov
loopne
hlt
mov
and
add
xchg
call
push
and
cli
push
adc
nop
sti
xchg
fdivl
dec
add
iret
dec
lods
test
sti
mov
in
xchg
mov
xor
xchg
das
mov
xor
dec
neg
add
xor
xor
mov
xchg
add
jne
pop
or
jb
mov
lods
arpl
and
fcmovnbe
push
jae
add
aas
jo
add
aaa
dec
adc
rolb
pop
or
inc
andb
imulb
add
in
or
and
xchg
lock
mov
into
bound
jns
addl
jge
test
add
aaa
and
mov
add
pop
andl
fmuls
popa
icebp
push
aam
movsb
push
xor
or
test
daa
cmp
dec
cmp
mov
sbb
jp
mov
jmp
jbe
enter
and
and
push
outsl
push
and
xchg
push
mov
sub
and
cmp
hlt
ja
push
repnz
adc
cltd
jecxz
xchg
pop
xor
sub
or
xor
xor
add
je
push
scas
sahf
frstor
rcr
lods
nop
xorl
mov
movsb
repnz
mov
sbb
or
ret
push
mov
xor
sub
fstl
mov
or
and
or
adc
and
add
mov
lret
xchg
iret
insl
ret
mov
rcrl
out
or
icebp
rcl
nop
push
and
cltd
ss
push
faddl
and
or
push
xchg
dec
repz
mov
xor
dec
dec
sub
pop
and
dec
add
rcrl
shlb
cmp
insl
cli
clc
xchg
push
dec
loop
or
sahf
mov
les
mov
dec
out
arpl
loopne
add
into
lret
shr
pop
mov
add
xchg
add
shll
push
xchg
enter
imul
mov
insl
cmp
dec
adcb
inc
stos
ljmp
cmp
loop
add
lods
push
pusha
inc
sbb
push
cmp
sub
mov
cmp
pop
outsl
xchg
add
mov
ret
and
cmp
addl
adc
cmp
lds
ror
stc
pop
scas
lcall
jg
mov
fadd
data16
mov
sub
cs
das
inc
icebp
mov
jnp
lods
enter
les
mov
add
cmpsl
clc
xchg
add
xchg
and
add
imul
adc
outsb
jbe
mov
ljmp
rorb
jns
cwtl
or
arpl
mov
cli
add
mov
add
scas
mov
xchg
test
add
rcrb
mov
xor
out
or
es
pop
les
ds
lea
icebp
pusha
sub
dec
cmp
insb
add
lods
int
add
shrb
mov
add
sahf
mov
rep
cmp
imul
and
clc
or
adc
jl,pn
sbb
mov
ret
or
cld
cli
inc
or
pop
add
and
cmp
sbb
sbb
out
stos
sarb
mov
mov
mov
inc
fmuls
pop
out
push
and
xor
push
xlat
add
stc
loopne
das
jns
cmp
insb
jp
sbb
fildl
xor
push
sub
push
or
mov
popa
cmp
inc
dec
xchg
add
adc
push
dec
aad
dec
das
add
outsl
orb
mov
loop
add
jmp
inc
push
sbb
add
mov
das
sahf
add
stc
aas
pop
mov
sub
cmp
hlt
xchg
inc
or
mov
add
or
jno
cld
pop
add
pop
stos
pop
and
adc
mov
add
mov
in
or
arpl
aam
jnp
jns
insb
dec
cmp
pop
jb
imul
pop
icebp
cmpsl
out
and
or
dec
cs
jmp
imul
roll
std
adc
xor
add
pop
icebp
addb
and
push
imul
xchg
ret
mov
sbb
mov
jnp
int3
add
jb
jp
shr
xor
inc
cmp
jmp
arpl
lahf
jo
les
add
inc
lret
jl
jl
add
in
pop
cltd
pop
dec
mov
nop
movb
fwait
shlb
cmp
movsl
in
stc
add
arpl
pusha
fsubl
or
push
mov
jecxz
mov
imul
mov
adc
pop
int3
arpl
mov
mov
and
add
sub
cmp
popa
add
sub
add
xor
clc
cli
popl
pusha
lahf
dec
and
xchg
cmp
jmp
sub
ffreep
in
call
push
out
cmove
inc
vmovaps
dec
or
pusha
sbb
pushf
adc
in
aaa
nop
test
mov
inc
xor
sub
add
pop
mov
cmc
mov
xchg
xchg
add
push
pop
ss
rolb
push
or
sahf
jb
add
ss
stos
add
sti
shlb
inc
arpl
xchg
adcb
mov
adc
jmp
sub
add
loopne
dec
add
mov
nop
pop
add
pop
iret
add
jle
testl
add
cld
xor
push
mov
jg
mov
cmp
int
jge
sub
mov
push
or
fisttpll
aad
mov
jle
or
pop
add
andl
cmp
xchg
in
in
fnstenv
cwtl
push
pop
lcall
rcr
icebp
push
push
jecxz
mov
lock
testb
das
or
add
divl
and
insb
popa
mov
cmp
push
xchg
adc
call
mov
push
add
xor
mov
aam
inc
mov
dec
mov
rorl
outsb
rorb
and
loop,pt
shl
mov
sub
pusha
xchg
add
lcall
std
pop
and
dec
cmp
xchg
les
jb
or
mov
add
mov
dec
add
cmpsl
enter
shlb
push
sub
cmp
loopne
add
pop
xor
xlat
loopne
inc
rcrb
inc
shr
into
sbb
fistl
das
inc
jmp
and
xor
fs
movsb
nop
popf
sbb
int3
pop
daa
push
fwait
push
xchg
push
push
lds
out
add
jle
and
add
mov
or
test
sub
lods
std
ss
xor
repnz
add
cmc
fwait
sarb
mov
push
pop
inc
sbb
das
sub
aas
sbb
or
daa
inc
mov
xchg
js
dec
add
pusha
xchg
gs
rorl
pop
and
fcomp
xor
std
test
sbb
and
repz
push
sbb
es
fnstcw
test
nop
mov
cli
push
loop
loopne
stc
mov
mov
leave
sub
nop
xchg
adc
and
leave
adc
cld
stos
push
add
je
push
add
jns
clc
jo
pop
jne
cmc
inc
cmp
and
pop
pushl
add
mov
xorl
sahf
push
fadds
cwtl
or
arpl
push
cmp
push
or
sti
lods
adc
sbb
mov
shrl
rcrb
xor
add
or
ss
lock
dec
sbb
add
movsl
sub
push
fildl
push
faddl
xorb
les
push
adc
sub
and
add
push
repnz
shrb
sub
pop
adc
push
jo
sti
testl
pop
inc
lret
cmp
dec
mov
push
jnp
scas
add
testl
sub
int3
jl
cmp
mov
mov
in
mov
cmc
repz
add
lret
push
pop
loopne
mov
mov
dec
repnz
fxch
ljmp
push
ja
fisubl
push
aam
xor
pop
mov
in
jns
sub
enter
inc
shlb
cmp
sub
add
jno
and
sbb
add
or
mov
ja
repz
dec
mov
add
mov
mov
sbbb
pop
ficoms
cmp
xor
and
pusha
mov
dec
das
faddl
nop
xor
sbb
enter
sbb
fldenv
push
mov
mulb
popa
loope
loopne
insb
imul
sub
add
or
lods
mov
and
pop
ljmp
lock
sub
adc
mov
es
repnz
addr16
xchg
pop
lods
lcall
subb
mov
ret
neg
add
pop
pusha
sahf
mov
push
repnz
push
icebp
ljmp
cmp
enter
mov
fwait
add
test
scas
sub
mov
test
jecxz
jo
push
push
out
xchg
dec
push
add
out
sbb
jmp
shr
nop
mov
popl
pop
cmp
push
xchg
aam
incl
aam
mov
sbb
inc
xchg
mov
pushf
inc
sbb
and
cmp
xor
hlt
add
push
je
lahf
fs
cmp
lock
in
popf
adc
repz
dec
cmp
ds
add
clc
adc
mov
cltd
cmp
stos
outsb
sahf
pop
sbb
xchg
mov
clc
cld
inc
repnz
sbb
dec
jmp
inc
repz
sbb
decl
jo
int3
mov
add
loopne
mov
mov
push
xchg
push
movsb
add
jl
stos
test
pop
mov
and
adc
mov
pop
push
into
lock
dec
icebp
cwtl
add
fstpl
and
jg
sbb
ret
cmp
xlat
je
push
sbb
roll
addr16
xchg
pop
stos
push
xor
das
mov
adc
pop
dec
jle
xor
or
cmpl
shrl
xorb
xchg
in
add
out
loope
rclb
scas
push
loopne
push
mov
daa
mov
pop
lods
movb
add
dec
adc
or
dec
mov
js
xor
jl
xchg
adc
outsb
mov
sub
add
ret
add
push
in
and
adc
or
adc
aam
out
aas
addl
push
inc
jbe,pt
subb
mov
rcrl
bnd
or
je
mov
test
aaa
sbb
mov
pop
pop
cltd
inc
fs
js
or
enter
xchg
ret
adc
cld
add
pop
sbb
outsl
rorb
xchg
mov
call
rcrl
adc
call
mov
pop
xlat
loop
cwtl
imul
add
in
sbb
cld
test
cmp
ret
pop
jne
clc
or
rorl
jno
ret
jae
mov
pop
hlt
mov
xchg
mov
mov
or
lret
mov
and
cld
inc
xchg
and
adc
and
adc
sahf
int3
dec
cmp
jmp
and
int
ja
lret
inc
loop
add
je
pop
into
mov
cmpsb
js
add
pop
int3
inc
movsl
adc
lods
sarb
ja
ret
out
mov
inc
xchg
xor
mov
adc
cmpsl
dec
push
lods
add
pusha
sub
sbb
mov
adcb
pusha
adc
mov
loope
in
fdivl
and
hlt
cmp
adc
mov
sahf
adc
in
dec
mov
add
and
jg
jo
movsb
ret
adc
pop
pop
adcb
pop
sbb
aas
or
sbb
sahf
add
cmp
sbb
popa
adc
sbb
mov
mov
jae
mov
arpl
adc
xor
stc
cmp
xorb
xorb
add
lods
sbb
sahf
pop
imul
lock
push
out
orb
add
mov
jle
sub
adc
and
sbb
subb
les
iret
add
push
loop
add
mov
test
filds
pop
xchg
cmpsl
lds
ret
les
cwtl
pop
dec
loope
add
daa
rorb
mov
and
sbb
lock
add
lods
adc
push
mov
cmp
fcompl
sub
pop
push
jo
std
add
sbb
push
in
add
mov
inc
fs
lods
cmc
movsl
cwtl
scas
inc
add
sub
or
call
es
js
xor
and
cs
add
fldl
nop
jmp
aas
das
data16
mov
mov
out
jo
addr16
mov
dec
pop
mov
fstl
pop
cmpsl
loop
lret
leave
add
icebp
mov
add
sbb
loop
push
sar
in
loopne
stc
out
xchg
adcb
pusha
in
xchg
es
push
mov
pop
inc
pop
lret
fucomi
add
hlt
cmpb
mov
add
imul
push
sbb
dec
mov
xor
add
xlat
add
jge
sub
add
fistpll
popl
test
cwtl
dec
xor
jnp
mov
hlt
dec
lds
push
sbb
jb
mov
add
imul
dec
movsl
clc
cwtl
and
pop
push
push
and
mov
out
sub
mov
ror
push
dec
cmp
push
add
xor
loope
mov
dec
mov
add
sbb
aam
jge
adc
je
cltd
jnp
std
and
xacquire
repz
xor
psllw
pop
lods
jg
cmp
test
loop
fwait
or
mov
add
xchg
les
test
out
add
pop
ret
pop
leave
arpl
dec
add
lds
loopne
sbb
jo
dec
repnz
add
ret
fisttps
sub
xor
mov
jge
out
adc
jnp
repz
push
gs
movsb
jl
inc
add
mov
mov
add
lea
enter
out
aas
and
outsl
lret
and
mov
or
push
sub
enter
out
rorb
test
add
es
adc
push
cmpb
jl
sub
andl
fwait
rorb
pop
add
in
mov
in
inc
mov
ficoms
push
lock
arpl
jne
out
add
pop
mulb
mov
lret
push
aam
xchg
dec
lock
inc
jbe
push
imul
pop
sti
cmc
stos
jp
mov
les
cwtl
pop
pop
cmp
call
loop
aam
pop
add
pop
or
xor
add
mov
add
inc
cmp
or
faddl
test
cltd
and
mov
add
insl
sub
iret
enter
add
xchg
xchg
xchg
pop
sub
dec
outsl
std
add
xchg
movsl
mov
mov
adc
and
outsb
add
test
sbb
insl
or
mov
roll
orb
lock
jle
pop
sbbb
inc
lret
pushf
add
test
sbb
and
insb
imul
ss
add
fiadds
pop
mov
sub
pop
xchg
jl
add
pop
xchg
xlat
loope
jg
add
push
dec
dec
outsl
pusha
pushf
pop
add
push
subb
mov
xor
dec
or
clc
xor
cmp
add
stc
sbb
mov
inc
ds
leave
scas
out
adc
or
pushl
fdivr
cmpsb
int3
pop
cmp
hlt
shrl
addr16
test
dec
jbe
mov
and
inc
push
add
loopne
sbb
dec
aas
lds
xchg
push
fdiv
pop
in
divb
loop
add
popf
mov
sub
aas
jl
sub
cmpsb
fsubl
inc
rcrb
rorl
mov
and
add
arpl
lock
mov
dec
sahf
sbb
inc
fsubs
and
pop
or
nop
int
jns
add
cmpsl
mov
into
mov
cwtl
or
jecxz
inc
push
dec
dec
mov
mov
jmp
xor
enter
stos
pop
pop
cmp
or
aad
test
mov
pop
in
bound
adc
pop
out
stos
ja
add
fwait
sub
mov
test
imul
mov
std
add
sub
pop
cwtl
cmp
ficompl
and
mov
mov
add
sbb
push
lock
inc
int3
sbb
add
lods
inc
je
cmp
add
jecxz
xor
lods
adc
adcb
es
addr16
mov
dec
add
pop
aaa
fdivrs
cmp
adc
sahf
sub
cmc
adc
mov
es
push
add
in
or
hlt
pop
mov
scas
test
insb
ss
outsb
push
or
jne
pusha
push
les
add
rcrl
jl
cmpsb
jbe
shlb
mov
add
mov
jne
sbb
mov
sbb
std
adc
sbb
dec
sti
push
sbb
out
arpl
cmpb
adc
pop
call
cmp
in
cmpb
aaa
or
daa
jmp
push
lcall
add
push
push
pop
shlb
clc
mov
mov
bound
pop
popf
jle
mov
mov
pop
pop
rcl
jb
and
call
cmp
pusha
add
fwait
sbbl
outsb
and
sbb
ja
pop
dec
pop
movb
les
inc
mov
dec
aam
pusha
rcll
add
mov
cmpsb
cmp
jmp
add
cld
daa
outsl
test
push
popf
xchg
sbb
add
pop
stc
pop
add
fs
inc
push
es
sbb
loope
idiv
stos
roll
jg
hlt
cmp
cmpsl
call
and
clc
outsl
mov
sbbb
and
mov
jl
adc
jecxz
das
cmp
ret
mov
dec
xor
add
mulb
xor
ss
add
js
jp
or
std
cmpl
mov
and
add
mov
jle
add
push
int
dec
popf
add
adc
sbb
dec
mov
mov
insl
jns
dec
mov
leave
mov
cli
mov
sti
jns
add
or
inc
sbb
lods
into
test
jbe
aam
insb
leave
jl
pushf
jecxz
ret
jg
push
jl
pop
stos
loopne
xor
add
add
inc
in
movb
call
test
cmp
sbb
ljmp
pop
aaa
adc
loopne
pop
push
inc
divl
add
push
adc
outsb
add
xchg
pop
or
mov
ja
test
lods
fildl
icebp
loop
dec
inc
mov
mov
jl
lods
adc
xor
setb
xlat
pop
popa
sbb
nop
hlt
andb
cwtl
stc
pop
les
xchg
push
fcompl
inc
imul
pop
lds
and
adc
jge
mov
pop
repnz
adcb
movsb
fsts
mov
pop
andl
gs
mov
aad
hlt
sub
adc
out
add
cwtl
sbb
or
and
incb
xchg
iret
lahf
inc
xor
add
rcll
add
and
sbb
cmpsl
pop
leave
and
pop
testb
loope
pushf
add
mov
es
push
mov
rolb
and
xor
jg
mov
pop
add
hlt
pop
adc
test
popf
into
rolb
inc
in
xchg
mov
mov
dec
and
dec
adc
and
and
add
je
push
rclb
mov
insb
add
add
add
stos
idivl
pop
xchg
cmp
out
js
jnp
neg
inc
add
sub
ret
add
je
fsubr
mov
xchg
stos
scas
aas
add
rcrl
inc
jmp
dec
add
adc
jp
mov
in
add
mov
movl
rolb
cmc
movsb
jg
jle
jb
or
inc
sahf
add
lds
int3
and
adc
jnp
pop
add
dec
icebp
cmp
mov
iret
jge
push
xor
adc
hlt
inc
test
ss
or
and
movb
pop
lea
inc
sub
jae
add
jne
shl
enter
add
sbb
stc
jl
subb
xchg
test
mov
les
mov
cs
gs
clc
dec
pushf
enter
popa
ret
and
mov
push
mov
add
push
lods
fsubrs
test
mov
iret
test
icebp
dec
repnz
add
fs
mov
push
lcall
fmuls
and
outsl
leave
xor
jno
gs
dec
sbb
xchg
stos
out
push
bound
lret
into
mov
leave
and
hlt
popf
add
lcall
pop
rorl
jno
ret
mov
adc
push
adc
insb
adc
mov
or
fcmovnb
push
arpl
adc
outsl
sbb
in
pop
add
pop
xchg
pmullw
stc
add
sub
loopne
mov
xchg
shl
add
out
test
es
fadds
faddl
jmp
jp
xor
xlat
cmp
jle
push
insb
push
lea
adc
imul
fsubrs
roll
adc
sbb
adc
cld
or
imul
fwait
jl
leave
pop
or
mov
xorb
push
lcall
dec
in
jmp
push
push
xchg
lea
xor
sahf
add
mov
cmp
mov
and
push
notb
mov
add
fs
sbb
add
addr16
jno
xor
mov
add
mov
sbb
mov
mov
add
mov
push
gs
cmp
popf
or
out
clc
pop
or
test
xlat
test
lods
add
mov
push
pusha
pop
and
rorb
shlb
mov
popa
inc
jp
add
shr
fs
adc
inc
in
ljmp
mov
and
imul
les
addr16
inc
inc
mov
loope
inc
cmp
ljmp
add
aaa
sbb
dec
test
add
ds
daa
xor
xor
sbb
cli
arpl
mov
add
inc
and
es
mov
add
mov
mov
sti
dec
add
aas
fadds
mov
xchg
push
mov
push
sarb
add
leave
xor
cmpsb
and
rcrl
adc
jg
frstor
dec
pop
pop
sub
and
mov
data16
dec
test
mov
mov
add
shr
loopne
adc
mov
xor
ret
add
sbb
sub
push
ja
jmp
xchg
shrl
fsubl
add
xor
push
in
bound
jno
pusha
and
pusha
cmp
jmp
out
cli
sahf
out
add
dec
cmpsl
push
xchg
loopne
xchg
cmp
pop
add
push
ret
mov
sbb
or
cmpb
jbe
push
add
xchg
push
gs
mov
add
enter
or
scas
xor
push
mov
daa
push
sbb
add
js
adc
daa
cwtl
add
and
clc
add
rcll
lcall
and
test
jb
es
repnz
fwait
inc
out
sub
movsl
mov
hlt
fstpl
in
push
pushf
and
add
test
pop
fistpl
insl
mov
filds
mov
rolb
inc
lcall
push
dec
cld
push
pop
mov
jmp
sub
hlt
pop
call
cwtl
inc
inc
outsl
stc
cmp
enter
rcl
or
dec
pop
dec
or
sahf
pushf
mov
cwtl
push
push
lret
out
sbb
pop
push
or
je
sti
jo
popf
or
and
dec
dec
aam
cmpsb
add
je
xor
fs
addr16
dec
add
aam
and
cwtl
setg
mov
filds
or
jecxz
pop
je
roll
jmp
add
xchg
scas
mov
inc
lock
cmp
pop
mov
pop
ss
add
hlt
loope
pop
mov
shr
outsl
sub
adc
mov
adc
pop
push
cmp
shlb
enter
cs
sub
dec
aaa
test
sahf
push
push
mov
push
add
ljmp
push
mov
jp
clc
mov
add
pop
repnz
pop
mov
scas
add
mov
nop
stos
mov
pop
inc
push
push
lock
test
fldt
add
ret
jae
nop
push
jl
call
stos
data16
add
popa
add
scas
scas
shll
leave
sbbl
push
xchg
add
xor
xchg
into
pop
nop
popf
adc
outsb
inc
sub
mov
icebp
mov
test
in
cmpsl
pop
out
or
pop
push
fstpl
and
movsl
lods
add
cmp
jne
add
fs
fimuls
jl
mov
xchg
lahf
ret
jo
test
xorb
in
aaa
stos
aas
fidivrl
es
cltd
dec
mov
nop
add
sti
in
sbb
scas
add
or
jg
in
test
jbe
xor
fsubl
hlt
rclb
add
dec
cmpsl
out
dec
add
push
int
add
xchg
scas
jne
add
pop
xchg
loop
addl
mov
sbb
lret
push
in
and
xor
cmp
ljmp
sub
dec
shlb
adcl
ds
std
mov
lea
add
lods
or
inc
or
je
jae
jno
int3
aas
data16
jne
add
sahf
mov
sbb
add
xor
add
outsb
add
cli
adc
roll
ffree
cld
test
add
leave
jmp
or
ljmp
jle
add
divb
push
ffree
push
loop
inc
les
jae
in
mov
test
sub
int3
jecxz
or
ror
add
bnd
loop
mov
dec
lock
mov
cld
arpl
shlb
mov
push
ja
and
pcmpgtw
cltd
and
xor
or
movb
xor
push
sbb
adc
data16
pop
pop
mov
dec
inc
cmpsb
dec
ds
or
add
and
fwait
mov
bound
mov
adc
movsb
lret
scas
cmp
ret
xchg
pusha
pusha
jmp
inc
shlb
rcrl
into
lds
mov
push
pop
mov
arpl
sub
clc
or
movsl
popa
roll
stos
imul
outsb
xchg
jecxz
iret
loop
cmp
cld
rol
pop
lds
sbb
or
stos
flds
in
xchg
addl
rorb
fistpl
rorl
in
xchg
lret
xchg
loope
xchg
scas
rolb
cmpsb
outsb
cmpb
dec
push
icebp
cld
xchg
repnz
add
fsts
cld
sbb
pop
cmpsl
add
push
shrb
cli
mov
or
jae
sbb
pusha
mov
dec
pop
ljmp
stos
push
test
adc
lret
push
addr16
adc
and
and
cs
lcall
push
mov
testb
pop
movsl
pop
mov
lods
jge
jmp
inc
stos
subb
and
jns
jnp
pop
add
and
movsl
bound
add
fmull
and
mov
scas
xchg
rolb
cmpsb
loopne
pop
add
add
add
adc
sbb
nop
add
push
cmp
xor
stos
jge
add
add
dec
jmp
repz
mov
add
push
negb
adc
pop
rcrb
inc
dec
sbb
lock
jp
mov
mov
mov
outsb
hlt
fadds
adcb
mov
dec
push
mov
cmpl
es
cmp
call
xchg
add
lods
sub
jae
cmp
pop
pop
leave
add
jne
stos
pusha
and
xchg
fsubl
popl
cmpsb
loop
jl
clc
xlat
mov
pop
push
rolb
movb
repz
addb
pop
and
or
aaa
bnd
dec
test
xor
stc
movsb
or
aaa
int3
push
nop
adcb
sahf
xor
rolb
jl
addl
mov
lock
or
dec
test
icebp
aam
xchg
out
aad
pop
int
mov
sub
inc
inc
sub
enter
sbb
dec
sub
push
sub
sahf
add
filds
mov
pop
sub
xchg
fs
in
fisttpl
xchg
mov
inc
test
and
xor
inc
adc
and
test
call
inc
xor
pop
out
sub
and
cmc
or
inc
call
cmp
jmp
es
add
dec
imul
pop
add
add
imul
sbb
push
push
push
xor
jmp
xchg
int
mov
movsb
adcb
xchg
xor
rorl
lods
stos
les
ja
add
jg
mov
icebp
inc
lock
int
popf
add
lds
mov
pop
mov
or
xor
int3
and
add
fsubr
pop
repz
movsl
lds
add
inc
xor
outsb
add
mov
cmpsl
push
xchg
stos
or
jge
repnz
jns
cli
pop
repz
jmp
bound
or
je
dec
fld
fdivs
rorb
sbb
push
add
rolb
lret
stos
add
sbbl
in
push
inc
inc
add
lods
mov
add
mov
ret
jg
pushf
loopne
shll
in
xor
jle
cmp
sub
mov
testb
pusha
push
imul
stos
xchg
push
bswap
ret
or
loopne
test
out
xor
adc
push
mov
adc
jmp
mov
pop
repnz
add
xor
mov
adc
jns
mov
jmp
sbb
adc
mov
aad
xchg
sbb
je
cmp
pusha
xchg
in
add
das
loop
xlat
test
into
es
leave
fcmovnb
test
or
add
mov
push
jmp
filds
mov
mov
sub
leave
xor
fcomps
mov
xor
xchg
add
add
pop
push
jne
mov
and
cmc
mov
shr
nop
and
inc
das
add
dec
fisttpl
and
add
add
shrl
jo
push
notb
mov
nop
add
sub
ja
xor
pop
inc
cwtl
stos
in
fdivr
push
movsb
mov
sbb
xchg
lods
popf
in
stos
xchg
rolb
roll
sti
cmpsl
gs
mov
cli
add
movnti
das
stos
into
push
ret
push
in
je
mov
or
mov
add
repz
push
xor
dec
and
mov
aas
push
sbb
rolb
mov
iret
cs
popf
add
data16
sbb
and
add
or
in
cmp
jbe
add
ds
jp
push
push
leave
cld
inc
adc
movb
pop
mov
test
or
pop
lcall
mov
add
mov
xchg
cmpsl
and
rorb
or
sbb
incb
pop
lahf
iret
loop
xchg
pusha
mov
repz
and
mov
xchg
and
nop
lcall
xchg
mov
jmp
pop
pop
mov
and
cmpl
call
add
and
xchg
adc
popa
add
mov
and
jg
test
push
or
push
jbe
sti
test
lods
sub
popa
comiss
or
pop
test
and
cmp
jbe
add
mov
sti
xor
and
push
push
clc
and
std
adc
out
jne
or
out
pop
add
loope
or
push
inc
loopne
pop
push
in
or
arpl
call
sub
iret
cli
sub
mov
scas
mov
add
idivb
lds
and
mov
inc
sbb
push
in
push
or
loop
jl
or
ret
int
jecxz
repz
out
in
pop
add
loopne
adc
jae
decl
mov
mov
jno,pt
testb
fs
rorb
jnp
add
mov
scas
mov
loope
imul
adc
inc
jbe
testb
aaa
out
add
xchg
pusha
mov
mov
out
mov
mov
mov
mov
lret
addb
aad
adc
xchg
jns
or
mov
add
aas
loope
mov
mov
jo
sub
add
dec
jns
dec
adc
data16
adc
add
or
cmp
stc
mov
mov
lods
jp
xor
shld
sbbb
mov
and
mov
xchg
mov
add
xor
jle
ret
inc
add
or
push
pusha
add
pop
dec
insl
call
std
cs
ret
mov
mov
inc
jno
add
cmp
shl
jge
inc
add
cmpsb
cwtl
add
or
cltd
out
add
push
in
arpl
cmpsb
sbb
mov
call
add
and
add
jecxz
ret
push
stos
push
add
add
mov
aad
inc
sbb
movsb
add
subl
pop
mov
mov
xchg
mov
mov
out
and
fs
imull
ljmp
test
add
xor
in
and
mov
daa
jp
pop
test
jle
lret
xchg
aas
ficoms
rorl
cs
pop
cld
sbb
clc
movsb
cmpsb
xchg
jb
add
cmp
push
inc
adc
xlat
gs
and
popa
add
loop
add
add
jae
out
add
into
ja
inc
dec
jb
js
je
in
jnp
adc
jl
xchg
cld
fs
or
mov
mov
cmp
stos
movsl
rcl
xchg
rorb
into
add
pop
mov
lret
add
lahf
js
loopne
dec
sbb
test
out
loopne
mov
adc
xor
lret
subb
scas
adc
xchg
mov
in
adc
pop
sarl
xchg
cmp
shlb
stc
pop
pushf
lods
add
jo
cwtl
cs
shll
jg
and
jo
sbb
inc
xchg
and
mov
push
cmp
jl
and
imul
xorb
faddl
xchg
lea
pop
add
push
dec
enter
dec
mov
hlt
add
mov
add
xchg
jns
outsl
nop
xor
femms
jge
daa
and
sub
xchg
inc
std
les
mov
sahf
les
or
and
push
popl
dec
add
dec
add
stos
lret
test
test
add
in
jne
lock
pop
add
sub
jge
mov
jne
pop
or
jmp
push
addb
clc
in
cwtl
jbe
movsb
mov
rclb
lahf
test
xor
rorb
pop
addl
adc
inc
test
fsubrl
adcb
fidivs
aam
test
addl
mov
jp
ljmp
jns
arpl
mov
cmpsl
xor
mov
xor
pusha
xchg
pop
mov
push
fadds
cmpsb
outsl
test
add
or
stos
mov
addl
fstpl
sbb
mov
loop
mov
cltd
mov
sti
cmpsl
shlb
popf
inc
cwtl
enter
mov
and
testb
pop
lea
sahf
cmp
leave
aaa
sub
ss
std
add
int
add
inc
les
leave
ficomps
sub
and
sbb
and
inc
cwtl
lret
sbb
add
stos
or
pusha
push
dec
xor
loopne
shlb
dec
or
mov
imul
sbb
nop
out
dec
pop
fadds
dec
jne
sbb
adcl
loopne
add
addr16
popf
xchg
and
add
mov
call
xor
or
fsubrs
push
addb
testb
shr
addr16
push
add
popf
mov
or
pop
add
add
negl
add
mov
push
sub
sub
dec
and
push
and
pmaddwd
and
shlb
or
rcll
cmp
mov
jae
daa
shr
pop
add
mov
shrb
les
out
add
add
test
inc
pop
les
or
clc
xor
lret
sub
stos
lahf
push
add
jnp
lock
int
loopne
pop
dec
xchg
mov
cli
xchg
adc
or
ret
test
pop
ror
and
sbb
ds
movsl
cmp
lahf
pop
test
cli
xchg
pop
andb
rcrb
add
fsts
pop
add
add
addr16
and
jne
in
fisttps
rolb
mov
add
cmova
mov
loopne
xchg
mov
decl
xor
sbb
outsl
pop
jl
cmp
jle
add
in
test
mov
out
add
push
std
cmpsl
pop
jns
add
sub
imul
dec
sarl
or
add
xchg
hlt
cwtl
xor
jp
and
xchg
ds
add
jnp
enter
mov
push
inc
ficoms
mov
and
daa
xor
add
inc
je
test
sbb
mov
push
in
xabort
pop
je
mov
mov
test
inc
sbb
mov
adc
mov
sbb
jb
ja
testb
fyl2x
mov
push
mov
jno
shr
stc
cwtl
pop
add
and
pusha
push
cmp
roll
dec
push
in
aas
add
add
mov
jecxz
mov
ret
pop
leave
scas
cld
imul
mov
push
test
movsb
xor
inc
rclb
fdivrl
loope
and
les
clc
movsb
add
lret
xchg
cltd
clc
lods
sbb
sahf
mov
pop
clc
test
es
les
cwtl
lea
shr
orb
mov
fs
sti
or
sub
rol
mov
push
lcall
lret
sub
add
lds
in
mov
mov
adc
and
inc
dec
mov
stos
pop
test
mov
scas
sub
push
or
adc
pusha
cmp
jae
jecxz
jb
addr16
iret
jmp
add
andl
or
mov
inc
pop
test
adc
das
pop
enter
push
jg
sbb
sbb
ret
inc
mov
fiadds
pusha
jo
add
pop
mov
and
xchg
add
or
xchg
cmpsl
mov
arpl
ds
insb
add
inc
movsl
into
push
out
add
mov
push
out
mov
xor
movl
in
add
ds
or
cwtl
mov
rolb
mov
and
xorb
or
pop
or
add
outsb
mov
cmp
movsb
and
nop
add
mov
gs
lds
pop
mov
scas
pop
movsb
xchg
fs
leave
or
mov
push
inc
aaa
jne
pusha
cld
loope
add
pop
pop
movsb
adc
imul
jnp
pushf
sub
add
shlb
inc
dec
or
dec
mov
add
inc
bound
cwtl
push
lret
add
cltd
out
mov
adc
pop
mov
insb
mov
fmuls
push
push
push
add
inc
and
cs
jo
pop
jecxz
addb
mull
push
ja
aam
sbb
nop
aaa
jno
push
xor
fldl
push
mov
aaa
adc
xlat
add
out
dec
add
outsl
int
or
sub
cwtl
lcall
mov
orl
add
je
jnp
es
adc
xorb
add
mov
cs
je
lock
sub
inc
hlt
sub
clc
add
sahf
test
push
imul
sub
sub
jns
mov
aaa
in
js
lods
pushf
aam
mov
add
sbb
push
not
test
cwtl
test
out
inc
in
sub
out
idivl
insb
push
dec
ficoml
subl
or
mov
popf
test
adc
shrb
jae
add
xchg
iret
shr
jnp
xor
xlat
movsb
addb
test
mov
pop
jge
sbb
fisttps
je
cwtl
pop
add
jne
sbb
xor
add
pop
leave
inc
push
iret
add
jns
addb
pmullw
adc
mov
sbb
test
push
pusha
aaa
add
or
ficoms
sub
outsb
mov
dec
and
cmp
push
and
sbb
cmp
ja
imul
jno
ret
xor
mov
adc
xchg
sbb
test
jmp
sahf
adc
sub
xchg
mov
push
js
mov
mov
pusha
sub
or
sbb
mov
les
mov
int3
mov
hlt
add
or
dec
mov
sbb
adc
movsl
dec
test
ds
out
xor
and
mov
sbb
rolb
stos
push
in
xchg
roll
xor
xlat
pop
push
sub
mov
mov
xchg
or
xor
inc
pop
js
sub
test
test
pop
jb
sub
mov
repz
or
popa
mov
or
adc
addr16
shlb
mov
adc
adc
test
out
imul
inc
push
jb
mulb
dec
adc
pop
add
add
sub
sbb
xchg
into
test
xchg
fldl
push
loop
call
jp
rclb
adc
jns
or
ficompl
cmp
popa
lock
scas
enter
fdivrs
jne
cld
add
mov
push
xor
pop
div
dec
pop
cmp
adc
incl
fidivrl
pop
lea
lret
add
mov
fcomp
xlat
pop
sarb
ss
fadds
jge
pop
mov
inc
push
hlt
xor
sbb
out
andb
sahf
scas
add
mov
push
push
sbb
popf
cld
pusha
add
cmpsl
xchg
add
sbb
xor
ftst
push
add
shll
add
test
filds
nop
dec
shll
push
pop
adc
xchg
add
and
xchg
and
repnz
mov
pop
addb
dec
leave
and
test
aas
rolb
mov
sbb
add
sbb
repnz
and
push
cli
ljmp
add
cs
mov
shr
pop
adc
xorl
pusha
call
sub
xchg
add
inc
repz
outsl
cmpl
mov
push
inc
sbb
cmp
mov
add
push
addr16
cmp
or
and
mov
int
sbb
or
mov
fstpt
mov
movsl
mov
fsubrs
pop
ret
cmpb
or
cmp
mov
xorb
fdivrl
dec
or
in
in
gs
sub
bound
cmp
push
sti
inc
inc
scas
sarb
mov
clc
add
sub
in
push
call
add
ret
stos
rolb
add
and
pop
push
imul
dec
insl
movsb
and
mov
sub
add
das
js
shrb
add
nop
mov
lahf
xlat
jg
mov
out
and
and
push
rorb
or
mov
pop
adc
sbbb
lods
out
in
call
sti
lahf
adc
test
mov
add
jge
ss
inc
icebp
decb
icebp
xchg
sub
adc
sbb
mov
add
lret
mov
js
adc
popa
push
enter
cmp
movsb
add
cmpsl
xchg
push
jo
gs
and
repz
insl
xchg
mov
xchg
jbe
dec
pop
paddsw
cmpsb
xor
mov
add
inc
mov
fisubrl
add
clts
cmc
sbb
dec
popf
es
xlat
lea
not
inc
cmp
mov
stc
pop
mov
add
out
sub
and
outsb
dec
push
jecxz
push
das
lahf
add
mov
mov
add
call
pop
les
and
inc
js
xlat
adcl
shlb
jmp
pop
push
sub
jp
xchg
shlb
loope
mov
mov
jge
aad
adcb
inc
add
adc
pop
rcrb
into
addr16
fdiv
xor
and
jnp
add
and
cmp
fistl
jmp
cmp
aam
add
iret
pushf
push
sbb
add
hlt
add
lret
cmp
mov
mov
fldl
jne
icebp
imul
outsl
push
adc
adc
add
cwtl
rcr
xor
aam
outsb
arpl
roll
pop
add
call
sbb
outsl
fs
add
imul
add
nop
dec
mov
cmp
and
xor
in
pop
mov
and
mov
cmp
add
popa
js
jne
mov
pop
mov
ja
jmp
add
adc
pop
cli
pop
push
ficoms
clc
ljmp
add
and
lahf
mov
inc
outsl
call
cmpsl
clc
bound
adcb
jl
sarb
int
mov
xchg
add
pusha
adc
lds
stos
cmc
add
rcl
pop
lods
add
adc
aaa
sbb
scas
out
or
sbb
mov
and
daa
and
jae
mov
push
outsb
add
jl
movsb
jb
sub
add
add
fstl
or
inc
mov
lea
xor
xor
andb
add
add
stos
sub
es
icebp
pcmpgtb
sub
decl
hlt
hlt
in
fimull
pop
sub
push
push
ret
cmp
iret
cltd
pop
call
lret
fnsave
test
loop
add
sub
clc
icebp
sub
ljmp
add
incb
test
lahf
inc
add
fdivrl
pop
adc
and
adc
int3
leave
sahf
mov
or
sub
cmp
sub
out
lods
adc
xorl
add
test
cmpsl
sub
pop
push
outsl
jno
pop
and
cmp
movb
daa
dec
fwait
sub
add
bound
jnp
int
pop
shl
and
fcoms
imul
in
jae
xchg
fsqrt
aam
popf
xor
xchg
adc
dec
aad
int3
add
fs
adc
stos
int
out
jae
add
xchg
mov
ret
fidivrs
ljmp
int3
pop
loopne
cmp
subb
add
andl
sub
lret
sahf
ror
add
shll
add
or
mov
jne
mov
and
adc
inc
jne
insb
push
ficomps
lock
mov
mov
xlat
cmp
mov
cltd
pop
out
je
mov
and
addb
sbb
clc
jne
sbb
subl
mov
or
enter
push
in
addr16
outsl
inc
sbb
out
or
jle
rolb
mov
cmc
push
sub
jo
add
push
out
mov
cmp
subb
out
cli
cmp
inc
or
add
jg
pop
pop
inc
xchg
cmp
popf
call
sbb
or
and
jp
inc
add
inc
pushf
push
jge
fwait
dec
or
push
scas
adc
pop
ja
inc
adc
imul
lock
add
jae
mov
test
jp
gs
sbb
and
push
nop
fs
sub
push
inc
ljmp
daa
inc
rorb
cmpb
pushf
xlat
mov
jae
pop
mov
gs
insl
push
daa
jmp
outsb
cmpsb
hlt
mov
lcall
inc
sbb
add
ja
fisttpl
push
push
daa
add
or
add
push
stc
fs
loop
push
jne
pop
addb
pop
sub
pop
or
movsl
and
mov
insb
push
sbb
push
inc
popa
add
pop
mov
mov
add
test
icebp
and
std
js
pop
xlat
adc
add
inc
cwtl
shll
cld
jae
mov
cmp
sarl
and
jb
test
or
es
push
add
mov
mov
loop
or
dec
mov
clc
cmp
call
push
push
hlt
repz
pop
scas
int
mov
ret
and
lcall
jl
cmpl
xchg
sub
imul
jl
or
ret
sub
cmp
mov
das
jle
or
dec
xor
cli
dec
sub
push
inc
sbb
cmp
or
xchg
dec
subl
das
push
loopne
sbb
jnp
inc
jl
int3
das
cmpsb
fs
add
xchg
vsubps
pop
mov
in
daa
pop
je
xor
test
mov
or
jge
mov
out
lods
add
push
sbb
cwtl
mov
adc
add
push
dec
enter
movsb
addb
add
push
add
inc
mov
dec
xchg
add
mov
clc
inc
cli
add
mov
pop
inc
fdivl
cmpsb
mov
adc
sbbb
sti
mov
add
sbb
pop
xchg
cwtl
inc
pop
push
xor
and
jge
adc
cmp
add
inc
fstl
fimull
scas
mov
add
xlat
loope
or
lea
imul
pop
xchg
dec
outsl
mov
mov
int
test
loope
xchg
inc
test
sbb
sub
sub
adc
icebp
xchg
jl
and
xor
lods
jno
les
sbb
dec
xchg
or
test
pusha
sbb
mov
roll
sahf
inc
add
test
bound
mov
je
sbb
mov
xchg
add
fildll
out
cltd
lret
out
aam
aaa
mov
ds
and
je
cld
testl
idivb
nop
or
arpl
in
cltd
add
jno
mov
add
sub
mov
outsl
popf
andl
fwait
test
sub
mov
insb
push
cmpsl
das
in
push
loopne
pop
xor
out
loopne
cltd
lcall
mov
gs
mov
leave
aaa
sbb
cmpsb
add
jbe
mov
notb
dec
push
xor
add
mov
jecxz
cwtl
data16
mov
adc
loope
fnstsw
pop
pusha
sbb
pop
repz
push
inc
mov
stos
pop
or
dec
add
and
sbb
mov
pop
int3
sub
xchg
loopne
repz
add
icebp
sbb
roll
jl
add
ds
mov
add
rclb
inc
push
in
nop
push
add
push
pop
push
popa
lock
and
cwtl
adc
sub
iret
and
jle
xchg
mov
imul
sbb
and
cli
mov
add
push
insb
and
lahf
fldcw
lcall
stc
aaa
cmp
call
and
imul
inc
push
or
adc
add
insb
dec
and
xor
or
cmp
sbb
xchg
inc
and
add
jns
je
xchg
stos
cmp
mov
add
inc
sti
enter
outsl
mov
add
xorl
cwtl
dec
addr16
out
xor
dec
pop
or
cwtl
sbbb
aas
pop
jp
subb
mov
add
push
and
push
xchg
pop
jb
and
add
dec
xlat
rolb
mov
gs
dec
add
sub
cs
pushf
push
les
mov
outsb
mov
pop
loopne
dec
fwait
mov
sbb
adc
xchg
daa
mov
mov
pop
mov
fnstenv
out
inc
aas
mov
add
leave
xor
sbbb
mov
aas
mov
mov
mov
pushf
dec
jle
sbb
ja
fdivl
cmp
adcb
pop
sub
data16
clc
arpl
ret
aad
sub
cmp
mov
or
shlb
and
adc
push
inc
add
out
sub
push
gs
in
pop
popf
jbe
sarb
or
jbe
add
stos
enter
leave
cmp
pop
data16
push
cmpb
scas
xor
add
sub
cmp
or
in
adc
sub
cmp
xor
jle
mov
test
imul
xor
sbb
adcb
addl
out
mov
je
mov
add
push
push
out
and
cmp
shrl
mov
das
outsl
xchg
cwtl
clc
add
stos
orb
dec
mov
jecxz
test
xlat
pop
xor
clc
mov
mov
push
in
pusha
cmp
xchg
add
cmp
sub
rolb
pop
and
lods
adc
aas
adc
outsl
add
jl
into
in
aas
xor
xor
lock
mov
inc
mov
loopne
fwait
shr
inc
jbe
lock
cmpsl
nop
mov
rol
sbb
std
mov
int
js
sbb
sub
mov
pop
loope
cli
push
enter
dec
pop
and
cmp
mov
jnp
and
enter
rclb
dec
cli
ljmp
mov
repz
imul
inc
outsl
lea
or
loope
lods
add
xchg
or
insb
outsl
gs
aam
dec
add
push
je
int
push
add
inc
addr16
add
insb
test
add
jb
mov
jl
aam
inc
add
ret
pop
sahf
js
pusha
lods
test
xor
jne
sbb
add
sub
ds
add
popa
sahf
repz
aas
mov
imul
fdivrs
lods
and
or
call
sub
rcl
add
push
pop
jne
jmp
dec
outsl
xlat
jecxz
out
mov
rcrb
cmp
mov
icebp
add
fwait
loopne
or
sbb
out
adc
pop
push
cmp
movsl
addb
push
cmp
ds
insb
jnp
inc
xor
jne
outsb
mov
sub
mov
das
adc
add
xor
dec
mov
loop
pusha
add
add
xbegin
ds
repz
sbb
stos
jge
cmc
ret
call
add
cwtl
shll
das
dec
lods
add
lock
outsl
pop
pop
dec
std
sub
pop
pusha
xchg
sub
fcomps
loope
mov
test
jl
mov
shr
aaa
out
inc
imul
xchg
push
jl
add
or
imul
sub
mov
aam
clc
dec
lea
add
add
push
mov
sbb
out
les
sbb
outsb
ror
int3
pusha
pushf
jp
pop
xchg
dec
adc
ror
sbb
sub
in
add
lods
sub
shrb
pop
dec
adc
fadd
dec
or
les
push
stos
xchg
jge
or
mov
jae
jg
mov
sub
scas
pop
sub
movsl
pop
sbb
xchg
mov
js
or
stc
jecxz
cmp
out
push
fsts
and
add
mov
sbb
mov
cmp
stc
sub
xor
add
int
jecxz
faddl
insb
out
in
out
nop
add
sbb
ljmp
push
lcall
inc
pop
mov
inc
fiadds
sti
mov
mov
pop
add
xchg
or
adc
dec
add
mov
andl
lcall
mov
mov
xchg
repz
pop
cmp
jp
lahf
sub
lods
add
mov
dec
pop
lods
mov
cltd
pop
xor
pop
gs
call
loopne
fdivs
fnsave
mov
hlt
cs
pusha
and
outsb
adc
mov
aaa
outsl
cld
mov
add
popl
inc
pushf
cmp
push
stos
sarb
mov
std
jecxz
xchg
mov
mov
sti
fsubp
icebp
insl
lea
in
xor
enter
xchg
push
ret
pop
pusha
xchg
stos
loopne
adc
out
inc
loopne
in
pop
cmp
scas
jg
inc
dec
xchg
xchg
movsb
add
fiaddl
insb
loop
dec
sbb
sub
add
popa
lret
mov
dec
lcall
sbb
add
push
jo
iret
cltd
add
mov
cmpl
scas
std
es
jne
push
cwtl
sbb
mov
aad
mov
xchg
dec
dec
roll
xor
xchg
mov
pop
psllw
push
push
lahf
scas
push
loop
add
push
jmp
out
aad
lahf
leave
lock
pop
mov
pop
add
cwtl
adc
add
dec
add
sbbl
jae
shlb
shrb
in
xor
lea
xor
pop
xchg
push
inc
xchg
sub
pop
mov
sub
ljmp
iret
idivl
je
and
inc
push
cmpsl
pop
add
popa
mov
mov
arpl
call
cmp
adc
xor
add
popa
fidivrl
and
insl
sahf
aad
ret
inc
add
outsb
sub
mov
loopne
jp
add
mov
imul
and
mov
lock
lret
mov
add
divl
mov
int3
add
sahf
lret
arpl
add
fists
cs
cmpsb
lcall
add
mov
and
imul
out
into
mov
xchg
nop
pusha
jmp
dec
ljmp
inc
cmc
fnstenv
out
loopne
aad
add
push
inc
cli
pop
js
leave
jbe
push
lret
and
ss
mov
test
add
aas
lea
xor
insb
pop
mov
inc
jne
add
les
xor
cmp
jae
cmp
inc
add
jb
jo
lret
cmp
mov
mov
or
out
loopne
sahf
adc
lds
cmp
inc
in
outsl
cli
add
inc
mov
es
add
xor
mov
cmc
mov
add
pop
outsl
shl
pop
scas
scas
cmp
jnp
jns
inc
rcl
sub
jle
sub
sbb
jne
add
jg
or
andb
pop
and
dec
mov
dec
out
rolb
inc
nop
inc
cmp
mov
lea
popw
outsb
fidivrs
scas
gs
je
mov
add
cmp
in
iret
clc
repnz
pusha
pop
test
push
mov
daa
outsl
loop
jp
into
add
mov
int
jl
cmp
pop
or
stc
pusha
lahf
jns
outsb
lock
mov
dec
adc
sahf
push
push
je
xor
jl
cltd
add
jnp
add
or
mov
add
mov
inc
pop
lahf
scas
dec
mov
add
cmpsb
xchg
enter
xchg
jbe
xchg
imul
rolb
jg
repnz
add
dec
add
pop
adc
sub
imul
repnz
or
aad
pop
movl
mov
pushf
aaa
add
adc
cli
sub
xchg
popf
incl
cld
mov
push
cmp
rcll
icebp
and
pop
clc
daa
nop
test
push
jbe
cmpsl
shll
movl
push
subb
scas
jnp
addr16
push
imul
stos
faddp
aad
subb
jo
adc
hlt
mov
sub
js
out
push
inc
dec
cmpb
xor
inc
pusha
adc
and
es
pushf
jbe
push
xor
pop
add
ret
roll
mov
insl
mov
lcall
cmp
and
cmpsb
add
and
lret
sub
pop
mov
sbb
scas
jecxz
push
cwtl
mov
push
mov
dec
pop
test
mov
push
fbstp
insb
pop
sbbl
lock
push
sbb
mov
or
push
sub
das
ja
add
mov
pop
push
pusha
pop
jno
push
inc
daa
add
out
dec
and
xor
and
and
pop
add
ja
add
mov
or
sbb
add
push
shlb
add
sub
test
ror
das
mov
sbb
lods
or
dec
inc
repz
add
push
xor
pop
dec
push
xor
sbb
adc
jl
xchg
roll
in
adcl
stos
mov
add
or
mov
test
filds
dec
push
aad
movsl
mov
repz
punpckhbw
pusha
subl
loope
out
repz
sbb
ss
cli
push
mov
mov
add
mov
cwtl
add
fst
ret
int3
sub
or
loop
ss
add
lret
hlt
ret
jl
add
push
or
pop
out
iret
xor
and
jp
adc
outsb
and
js
xchg
clc
fdivl
or
add
fsubrs
icebp
jmp
adc
adc
mov
or
mov
sbb
mov
inc
add
push
cld
decl
ret
sbb
into
pop
fnstcw
aaa
mov
ss
cmp
lods
and
and
fs
addb
mov
adc
insb
in
dec
add
sar
add
push
mov
loope
add
in
insb
popf
cmp
pop
add
and
mov
xor
mov
add
daa
xchg
gs
ret
jg
add
sub
push
rcrb
add
fwait
popa
and
pop
mov
repnz
add
jge
scas
leave
cmp
add
dec
or
lret
add
push
dec
jmp
in
add
imul
jle
xlat
ret
pop
rolb
bound
cmp
outsl
shrl
pop
dec
or
xchg
add
arpl
pushf
jbe
jnp
add
movsw
or
dec
cmpb
rcrl
in
fiaddl
add
cltd
int3
adc
loopne
add
lcall
cmp
roll
or
daa
add
out
fmuls
arpl
in
jecxz
stos
pusha
sub
cltd
mov
jno
aaa
fbstp
pop
pop
mov
sub
imul
xchg
scas
fs
and
rorb
into
and
aaa
mov
adc
repz
cmp
pop
ss
sub
into
add
fwait
adc
sahf
repz
push
in
movsl
push
add
out
mov
sti
adc
jecxz
shr
flds
fstpt
sub
bound
add
shlb
insl
or
inc
cmp
jecxz
stos
outsb
inc
xchg
pop
xor
cs
pop
xor
mov
fiaddl
shlb
and
xlat
sub
add
push
out
stos
movlps
pop
cmp
mov
xchg
inc
adcb
or
add
push
mov
stos
mov
jb
adc
xor
mov
inc
add
movb
add
mov
jo
pop
into
mov
ud1
mov
pop
out
sti
add
int
lret
sbb
cmp
test
aam
out
xor
mov
add
in
int3
repnz
push
das
add
jno
mov
sarb
icebp
add
sub
fs
cmpsb
pop
arpl
inc
faddl
aas
dec
and
pop
jnp
addr16
nop
inc
fisubrs
add
xor
inc
mov
xor
loope
popf
jne
je
jb
fcoms
xchg
jno
or
fiadds
jns
xor
icebp
pusha
mov
push
call
sar
out
lds
and
int
add
inc
icebp
dec
or
mov
mov
cmp
sbb
outsb
fcomps
sub
and
jmp
jecxz
loope
cmp
xchg
cmp
xchg
cmp
jmp
pop
adc
data16
jns
or
add
flds
movsb
add
xchg
cltd
test
idivb
or
mov
enter
cmp
adc
add
test
xchg
cmp
ficoms
out
out
mov
cltd
dec
imul
les
loop
loope
inc
int
imul
add
lods
nop
or
inc
sub
lret
les
fcoml
cmp
shlb
pop
push
aas
clc
add
and
hlt
nop
test
sbb
jp
add
mov
sub
mov
pop
sub
inc
fucomi
push
or
sarl
inc
les
sub
mov
sahf
or
movsb
push
add
scas
jnp
jp
jge
mov
cli
mov
pop
mov
pop
enter
psllw
xchg
cmp
arpl
stos
xchg
xor
sahf
xchg
fisubl
test
mov
iret
or
or
icebp
hlt
fcompl
movsb
sbbb
repz
dec
addb
add
stos
fistps
scas
jp
out
dec
js
popf
pusha
sub
add
frstor
in
fiadds
lahf
rclb
in
or
pop
sbb
fildl
adc
sub
movsb
cs
roll
jno
sub
mov
nop
mov
test
test
dec
das
mov
fwait
mov
add
popf
test
nop
ljmp
ret
cltd
aaa
pop
pusha
pushf
in
jbe
and
pop
xor
xchg
push
add
enter
cwtl
shlb
or
subb
bound
mov
inc
notl
aam
jl
mov
ljmp
lret
mov
movsb
int
cs
add
inc
inc
incb
mov
scas
ret
pop
jns
mov
lock
cmpsb
add
push
mov
dec
adc
add
cli
jl
dec
and
cmp
add
aad
pop
lods
sbb
loop
mov
pop
lcall
cmp
jmp
int
or
sbb
arpl
push
push
add
lahf
push
popa
pop
popf
scas
mov
cs
les
arpl
mov
mov
pop
xchg
inc
add
sub
and
scas
adc
dec
mov
mov
push
xchg
add
loop
jbe
scas
add
ds
pxor
push
pusha
cmpsl
lret
js
jbe
sbb
shl
mov
push
jp
daa
jmp
loope
data16
add
repz
sbbb
dec
test
insl
lods
and
sti
loopne
xor
pushf
mov
and
add
fsubrl
sahf
sbb
ljmp
add
jns
mov
in
int3
xor
jg
add
mov
sbb
fidivs
sub
jo
add
mov
dec
adc
out
add
jmp
mov
les
mov
mov
jns
mov
xor
sub
mov
mov
clc
dec
imul
cmpsb
call
mov
je
data16
lahf
or
push
mov
add
bnd
and
fwait
leave
mov
jns
pop
adc
push
sub
push
dec
xchg
mov
cmp
dec
aaa
inc
out
or
and
ret
and
sub
cmp
outsl
adc
sbb
add
pop
sub
hlt
dec
xchg
add
test
mov
aas
pop
jp
scas
push
shll
add
int3
xchg
ja
jecxz
fs
mov
hlt
test
mov
adc
or
xchg
xchg
and
insb
push
imul
cs
dec
cmp
in
das
add
addr16
add
pop
popf
movsb
sbb
jno
xor
addr16
add
testl
xor
add
jge
push
cld
adc
cmp
aam
adc
cmp
leave
mov
and
pushf
ss
inc
or
push
sub
stos
jnp
lret
inc
mov
xchg
push
loope
ljmp
mov
mov
jecxz
sahf
or
pop
fildl
iret
imul
adc
cmpsb
adcl
leave
cli
lret
cmp
ror
fdivrl
das
pop
xchg
icebp
dec
xor
mov
cmp
cmp
push
faddl
out
jb
xchg
outsb
inc
outsl
add
mov
inc
jl
in
mov
mov
nop
pusha
add
sub
push
inc
aas
movsb
enter
add
or
and
fmulp
sarb
dec
in
push
adc
out
jmp
lock
add
mov
cmpsl
and
inc
aad
push
je
cmp
outsl
loop
rolb
lds
add
or
push
pop
sbb
push
mov
add
ret
rcll
mov
inc
iret
pop
popf
lahf
out
push
xchg
mov
lods
lcall
dec
inc
add
and
cmp
add
mov
jbe
mov
mov
ljmp
sub
sub
jl
jp
and
das
int3
pusha
jne
push
push
push
nop
outsb
add
sbb
pop
dec
mov
leave
fidivs
or
mov
test
andl
movsb
mov
inc
clc
mov
and
mov
nop
sub
xchg
xchg
or
stc
add
out
int3
loopne
outsl
cmp
add
xchg
and
movsb
xchg
ffree
shrl
loopne
push
pop
jbe
cs
mov
leave
push
push
mov
mov
out
xorb
loopne
movups
push
ret
pusha
in
push
sbb
lods
dec
repnz
aas
add
in
and
xor
sbb
lock
cli
or
add
sub
lret
shlb
adc
fs
sbb
sub
lret
mov
adc
adc
mov
repz
add
jp
mov
push
dec
xor
dec
inc
iret
ret
cmc
ja
add
mov
xchg
push
jbe
mov
add
test
mov
add
push
and
das
xlat
inc
add
sbb
mov
addl
sbb
mov
lock
and
inc
lods
add
loope
mov
pusha
mov
pushf
in
leave
xchg
loope
dec
xor
or
sub
mov
sbb
scas
rolb
cmp
add
lcall
mov
fstps
jne
or
ret
cmp
pop
js
jp
add
sub
jle
pop
cmc
pop
mov
push
add
jl
adc
mov
rorl
inc
mov
or
jb
sahf
je
and
enter
add
popf
sub
push
adc
mov
mov
jg
push
and
or
inc
into
test
cmpsb
or
push
enter
shl
hlt
push
bnd
xchg
sub
fistpl
mov
loopne
cltd
pop
pop
test
cmp
push
pop
sbb
iret
cs
data16
jle
add
add
sub
dec
fwait
nop
fs
add
add
loopne
repnz
cpuid
cmp
int
ja
cmp
push
pusha
mov
movsl
push
add
lods
and
add
jb
sbb
mov
mov
adc
add
mov
mov
pushf
mov
fisttpl
add
xchg
adc
add
and
es
sub
pop
or
insl
lods
add
int
lea
fwait
cmp
into
cmp
ds
ljmp
mov
inc
flds
pop
cmpsl
lock
dec
adc
add
jl
jnp
cltd
imul
mov
leave
inc
outsl
inc
inc
lock
xor
sbb
faddl
pop
out
in
mov
idivl
mov
fwait
ret
add
sarb
test
stc
dec
movsb
decl
lock
bound
aad
add
hlt
pop
mov
xor
divb
divb
out
xchg
xchg
addl
sahf
shlb
add
icebp
dec
xor
push
pop
add
ss
sbb
or
sahf
jbe
jbe
add
dec
mov
pop
scas
aad
rolb
mov
add
jmp
shl
mov
fwait
or
std
push
mov
add
stos
ja
and
xor
gs
rorl
cmp
adc
xor
jg
cli
jne
mov
fmuls
add
dec
dec
inc
cmc
clc
adc
cmp
inc
adcl
cld
sub
mov
mov
into
sub
shll
shlb
xor
xchg
test
adcb
jl
outsl
fimull
sub
cmp
add
cmp
jle
call
test
pusha
push
cmp
movsb
adc
repz
mov
xchg
xchg
std
mov
pop
decb
push
daa
negb
pop
add
xchg
lcall
sahf
xchg
imul
inc
fcmovnb
jbe
negb
sbb
inc
add
push
mov
adc
out
scas
xchg
cwtl
stos
push
jo
out
aas
add
jbe
jecxz
divb
add
and
pop
pop
gs
sbb
sub
push
xor
add
sbb
sub
push
xor
pop
pop
loopne
std
or
out
popa
in
incb
cmpl
sub
in
pop
jge
jl
jo
jo
in
mov
cmp
sarb
hlt
dec
add
stc
and
pop
or
cli
movsl
popf
testl
sbbl
test
adc
mov
mov
or
jns
or
xor
cld
jnp
test
push
dec
mov
push
add
cld
inc
cmpsb
sahf
push
xchg
subl
hlt
ds
or
nop
sbb
xchg
mov
je
imul
mov
pop
cld
mov
dec
push
or
rcr
stos
xchg
jbe
ds
cwtl
mov
push
pop
bound
add
add
xchg
hlt
xor
push
and
mov
ds
add
push
das
xchg
pop
push
cmp
pop
insl
roll
adc
or
push
adc
sub
add
lcall
loop
pop
scas
dec
jge
pop
shl
ljmp
fisubl
inc
loop
add
out
popf
pop
and
xchg
jbe
daa
jne
out
add
test
ds
dec
lods
sub
mov
add
adc
pop
sub
lods
lds
out
or
andb
mov
fcomps
jl
jg
sbb
aaa
sbb
cmp
push
push
fisttpl
insb
add
dec
mov
jae
sub
ret
dec
add
push
outsl
add
cs
stos
out
mov
or
fbld
add
stos
xchg
aam
cmp
clc
sbb
push
and
in
xchg
je
add
mov
jg
xorl
into
xchg
add
je
cwtl
scas
mov
add
xor
adc
bound
xchg
pop
sbb
add
incl
in
sub
jns
jg
jl
scas
adc
cmp
pop
add
xchg
mov
lea
add
push
lret
push
popf
imul
ret
ja
cmp
adc
into
or
and
xchg
and
pop
pop
xchg
cmpsl
enter
push
xor
mov
push
movsb
mov
fadds
xorb
pop
jp
dec
stc
inc
ja
jo
xchg
jbe
pusha
out
and
mulb
inc
xchg
fildl
pop
lock
push
mov
xor
pop
andb
mov
xor
arpl
jnp
xor
enter
adc
lea
lahf
pop
mov
cwtl
add
jbe
aad
xlat
shrb
int
jno
jbe
mov
jbe
stos
dec
mov
mov
jb
xor
add
jmp
ficompl
mov
popa
je
sub
push
xor
out
insl
lds
popf
pop
adcb
adc
pop
lahf
scas
pop
jge
add
insl
inc
imul
jmp
add
and
enter
add
mov
and
jo
js
pop
out
call
dec
push
scas
rorb
inc
bound
adc
pusha
push
jo
popf
push
cmp
jne
or
jbe
xorb
stos
mov
popl
inc
xor
dec
les
scas
mov
mov
outsl
fnstsw
mov
iret
es
push
and
and
xchg
and
adc
add
push
out
sbb
and
add
je
ficompl
inc
in
pusha
enter
dec
aaa
es
jbe
sbb
dec
imul
mov
mov
in
or
gs
fdivl
lret
push
jo
sbb
rcrl
and
add
or
cmp
jge
stos
mov
mov
fisubs
and
pop
xor
lret
add
and
add
iret
out
sub
or
notl
adc
inc
sub
cmpsb
mov
sbb
xchg
rdmsr
or
jmp
push
shll
out
inc
aad
or
mov
and
mov
mov
add
test
jmp
cmpsl
add
xchg
rcrb
add
mov
testl
pop
xchg
sub
fwait
mov
jo
inc
ss
pop
jecxz
nop
xor
cld
std
add
nop
mov
pop
shlb
sbb
rcrl
test
jg
xor
xlat
add
and
ds
outsl
mov
call
insb
adc
add
std
dec
lahf
xchg
leave
sub
pop
sar
cmpsb
jns
adc
fimuls
out
dec
pop
loop
scas
dec
mov
push
or
cmp
xchg
shl
les
movb
push
clc
jne
cmp
imul
nop
mov
mov
incl
mov
sbb
xchg
and
jo
add
xor
cld
inc
inc
and
test
sbb
pushf
add
push
roll
in
outsl
fdivr
dec
scas
xchg
push
fbstp
add
pop
stos
std
sub
aaa
fs
pusha
mov
mov
push
cli
dec
xchg
test
cmp
and
or
je
hlt
lahf
jb
shrb
out
push
out
pop
popf
fldcw
xchg
xor
mov
xchg
cmp
xchg
and
xor
adc
ret
or
xlat
clc
adcl
add
subl
sti
dec
mov
xor
stc
add
pop
rcrb
push
xchg
movsb
not
add
loope
cltd
pop
mov
dec
sarl
adc
cmp
mov
cli
cmp
or
jns
call
add
xor
mov
ja
scas
cli
call
add
fsts
in
add
mov
inc
les
jnp
outsl
es
mov
fisttpl
pop
daa
adc
jb
adc
es
pop
mov
pushl
mov
jns
std
cmp
data16
or
shrb
inc
adc
dec
push
inc
mov
push
push
dec
incb
push
ljmp
out
inc
or
out
xor
xor
mov
jge
add
iret
repnz
jg
adc
scas
rol
or
pop
sub
mov
repz
jmp
add
add
jne
xchg
mov
vmovdqu
jns
mov
mov
ljmp
or
addr16
scas
imul
jnp
add
cmp
sbb
jae
push
sub
jbe
push
lea
xchg
pusha
cmpsl
xchg
xchg
inc
int
iret
add
or
loopne
xchg
cwtl
jp
dec
push
add
mov
lret
fdivrl
push
loop
lret
push
imul
loope
jle
push
das
inc
or
and
lea
stc
jg
and
int3
fs
loopne
push
fadds
daa
sbb
inc
and
popf
pop
add
vmptrst
add
ffree
mov
cli
daa
xchg
stos
mov
jo
lahf
or
sub
push
and
adc
mov
inc
aad
mov
dec
mov
jnp
adc
sar
test
dec
jno
mov
add
rcrb
enter
dec
add
push
mov
sub
pop
adc
fisubrl
ss
cmp
inc
jno
cld
add
xor
stos
sub
push
mov
xchg
lss
sbbl
aad
adc
xor
cli
mov
lods
lret
mov
xor
sbb
inc
cli
or
adc
add
int
ror
pusha
daa
mov
out
add
xor
dec
daa
sub
inc
mov
dec
add
push
gs
jmp
dec
data16
pop
loopne
mov
pop
bound
mov
pop
cmp
inc
fstpl
inc
sub
psllq
cmp
and
test
mov
jmp
test
popf
ror
rcrl
es
hlt
push
ss
mov
sub
jbe
push
or
loopne
adc
pop
inc
sub
pop
movsb
adc
cmpsl
lahf
mov
testl
or
mov
and
mov
js
out
sbb
lock
sbbb
or
das
rolb
adc
lds
and
add
adc
dec
pop
incl
cmpsb
and
dec
hlt
icebp
adc
pop
xchg
inc
mov
rol
dec
inc
hlt
adc
sub
scas
nop
or
sub
jle
and
cmp
xor
test
dec
stos
mov
sahf
cli
call
rcl
dec
sub
jmp
out
push
push
xlat
or
nop
push
mov
pushf
adc
scas
or
shufps
sub
mov
nop
push
push
push
inc
dec
out
pop
xchg
push
mov
add
test
testl
fdiv
stos
pop
dec
add
fwait
jge
pop
popf
xchg
mov
outsl
bound
jne
jae
push
popa
sbb
js
test
std
ret
jge
mov
sbb
sbbb
sbb
mov
imul
lock
les
in
xor
and
icebp
mov
imul
sbb
pop
push
nop
imul
mov
jb
rcrb
dec
dec
sti
adc
repz
mov
xchg
sub
xchg
call
adc
jecxz
push
or
cmp
mov
add
shr
push
mov
dec
xor
pop
add
mov
cmp
pop
test
xor
call
jp
jno
add
adc
mov
icebp
jb
mulb
daa
mov
loope
cld
mov
mov
sbb
xor
mov
inc
into
adc
mov
les
and
in
mov
xor
jle
lcall
in
jnp
sub
int3
add
sbb
push
lods
push
fwait
jne
lea
leave
stos
mov
jge
hlt
inc
fdivrl
out
xchg
mov
sbb
jmp
ja
pop
cmp
sub
pop
add
enter
cmp
cld
add
dec
fwait
outsl
cli
pop
sub
add
dec
int
adcb
inc
jecxz
sbb
cmp
xorb
add
lods
into
cmpsb
push
dec
int3
sarb
push
sbb
xor
aam
dec
mov
mov
add
or
jge
ret
call
adc
and
cmp
repz
fwait
mov
stos
nopl
xchg
add
mov
movsb
imul
mov
rcrb
aam
pop
imul
roll
mov
pop
dec
call
add
fdivs
xchg
pushf
ljmp
pop
enter
add
jl
clc
inc
clc
js
and
das
lods
loopne
sub
pop
mov
mov
pop
ss
in
repnz
rcrl
pop
loope
push
clc
jns
push
daa
jbe
or
setge
add
push
addr16
shrb
add
mov
movl
dec
dec
imul
and
in
into
mov
repz
jmp
andb
or
cs
xor
cmp
pop
jne
sbb
pop
push
mov
jno
cmp
sbb
xlat
adc
mov
adc
icebp
dec
add
push
int
sarb
outsb
lcall
add
lea
imul
and
enter
xor
xor
jmp
mov
add
add
bound
jo
or
in
cmp
fs
mov
sub
cmp
neg
imul
push
adc
sbb
inc
mov
cmp
imul
or
std
in
xchg
cli
pop
jne
cmp
bound
mov
add
cmp
sub
loopne
mov
and
inc
or
mov
jo
add
stos
in
rorb
cli
shlb
stos
xor
add
popl
sbb
data16
push
outsl
or
and
cmpsb
jno
mov
inc
lea
into
mov
xchg
xor
enter
or
jnp
push
pushf
aad
cmp
mov
pop
insb
negl
fldcw
mov
mov
inc
loop
jnp
mov
and
xchg
ffree
out
movsb
js
dec
mov
push
push
out
dec
cwtl
mov
ss
mov
xchg
sahf
add
lret
dec
fdivrs
dec
adc
push
mov
sub
std
push
cmc
add
cmp
dec
icebp
repnz
add
ds
hlt
stc
mov
xor
xchg
testl
cwtl
push
or
stos
and
andb
mov
sub
js
add
jns
insb
shrb
mov
inc
pop
pusha
lods
mov
add
lcall
or
jne
mov
cmc
subb
jne
push
es
xorb
repz
dec
inc
rolb
adc
adc
jge
adc
rcrb
push
jecxz
faddl
or
push
pop
mov
imul
sahf
mov
xor
cltd
xorb
addr16
push
shll
pop
pop
inc
jbe
pop
cmp
pop
and
dec
lods
jmp
out
inc
cld
and
cmp
jne
lcall
mov
pusha
push
inc
lahf
mov
sub
in
cs
cli
inc
lcall
mov
std
jo
fs
mov
orb
jno
cld
fnstcw
adc
daa
out
dec
xchg
push
or
and
and
and
jo
fimuls
out
or
mov
sbb
mov
adc
daa
jo
sub
add
inc
or
les
jmp
aas
dec
add
push
scas
in
pop
push
clc
push
leave
stc
cmp
adc
sbb
loop
lods
sub
daa
xor
ja
dec
pop
dec
bound
jle
and
fbld
jp
scas
fisubrs
mov
incl
mov
in
add
hlt
add
dec
add
scas
xchg
scas
idiv
jbe
out
push
xchg
push
cwtl
xor
push
xchg
in
push
imul
sbb
xor
or
pop
push
cmovnp
mov
jl
test
pushf
in
adc
aaa
inc
add
repz
outsl
mov
lock
aam
ljmp
cmpsb
mov
fadd
mov
call
js
ret
cmp
fs
inc
add
les
push
push
push
mov
cmovns
stc
add
scas
add
push
fstpl
gs
outsb
outsl
push
add
add
sub
test
shl
cs
lock
out
add
adc
inc
outsl
cmpsl
nop
sarb
aam
mov
fs
fs
xchg
lahf
cmp
dec
pop
movsb
dec
jp
fistpl
push
sub
mov
das
mov
pop
call
popa
mov
cmp
mov
or
add
mov
dec
jmp
pop
pop
mov
mov
sbb
inc
dec
int
rcl
bound
sub
ljmp
imul
push
xchg
add
adc
cmpsl
xchg
mov
inc
mov
pop
enter
add
jne
test
adc
sub
lret
insw
jmp
mov
xor
xchg
jg
jno
or
je
inc
clc
add
daa
pushf
mov
in
icebp
jl
or
dec
fsubr
jb
sub
and
ds
andb
test
pop
loopne
je
pushf
aad
push
xor
jne
xorb
in
xor
in
add
movsb
sub
sbb
not
add
rclb
xchg
in
rorl
nop
ds
imull
and
pop
pop
cmp
mov
filds
inc
or
enter
loop
mov
arpl
pop
cld
rolb
jne
sub
mov
inc
cmp
incb
arpl
mull
enter
insl
setb
dec
jle
ja
popf
mov
inc
and
sub
or
xor
mov
es
js
aas
add
or
push
fwait
inc
aad
push
daa
cmp
xchg
cs
mov
iret
rorb
jmp
and
jmp
dec
call
jae
arpl
dec
push
loopne
notl
pop
adc
or
pop
mov
cmovs
enter
movsl
push
adc
jg
xor
sub
daa
data16
sub
pop
out
shrb
mov
pop
incl
xor
dec
outsb
les
and
mov
sub
daa
and
pop
sbb
and
push
xchg
and
pop
xchg
stos
int3
aas
xlat
hlt
add
js
cmp
sub
imul
mov
call
xor
sub
mov
scas
loope
jb
ret
sahf
ljmp
and
out
pop
pushf
pop
cmpsl
insb
nop
fistl
gs
scas
jl
and
dec
jge
imul
sub
leave
aam
rorb
outsb
ds
and
sbb
add
mov
cmp
xor
rcrb
sub
insb
jbe
push
scas
repnz
xchg
les
pop
nop
jmp
sub
mov
adc
push
push
jb
pop
push
movl
mov
inc
ret
ja
les
test
mov
cmp
add
lods
sub
or
inc
inc
lea
test
adc
iret
les
shlb
add
and
adc
test
dec
and
inc
mov
les
in
adc
mov
inc
mov
sub
push
push
pop
call
ret
xchg
mov
or
inc
push
ret
fwait
lea
xor
mov
adc
mov
pop
ret
jnp
inc
sub
ret
mov
out
adc
fistpll
clc
cs
and
inc
push
sbb
ret
mov
inc
push
ret
and
add
frstor
push
or
jns
ret
xorb
mov
mov
push
jae,pt
mov
pop
ret
adc
ret
add
lcall
mov
adc
popa
lret
out
insb
pop
push
inc
add
icebp
cmc
add
ror
xchg
mov
mov
mov
dec
sub
adc
mov
dec
out
dec
nop
aas
mov
popa
jae
fisttpl
js
push
mov
sahf
add
shrl
fwait
add
iret
in
dec
adc
std
jp
mov
idiv
test
adc
mov
mov
xchg
cmovne
iret
int3
sbbl
pushl
inc
mov
adcb
loopne
mov
hlt
sub
popf
cwtl
add
ffreep
loope
punpckldq
xchg
dec
mov
sbb
inc
or
dec
add
sbb
lcall
cld
fstpl
mov
ret
mov
push
std
imul
sahf
loopne
mov
pop
push
cld
cmpsb
adc
or
movsb
sbb
bound
insb
pop
add
jmp
lods
sbb
and
mov
adc
fs
movsb
mov
xchg
imul
sub
pop
mov
out
icebp
sbbb
insl
lock
mov
outsl
enter
enter
xor
push
pop
out
repnz
mov
add
mulb
cli
lods
inc
pop
cmp
xchg
ret
adc
and
add
sub
aam
cwtl
jge
xor
jmp
and
insb
subb
inc
out
push
pusha
test
mov
fwait
mov
pop
mov
sahf
mov
add
sub
test
lret
mov
cmp
pusha
int3
sub
add
dec
in
dec
jmp
add
lcall
sarb
popa
mov
or
ret
or
popa
add
lods
cmp
push
ffree
sub
push
jl
sbb
test
mov
sbb
or
and
insb
mov
inc
nop
lcall
lcall
js
popa
mov
insl
les
lock
dec
dec
pop
es
pusha
je
cmp
repnz
call
adc
movsb
test
leave
inc
mov
pop
js
mov
int3
or
jmp
add
aad
aam
addb
jb
sbb
mov
lahf
push
mov
or
and
sbb
inc
and
inc
hlt
adc
add
xchg
insb
mov
sar
scas
add
and
lcall
cmp
or
push
fcomps
sarl
sbb
test
add
push
stos
cmpsl
loope
add
daa
addl
gs
js
inc
mov
lods
push
add
sbbl
cmp
jle
mov
xchg
adc
mov
test
xchg
add
cmc
sub
add
xor
sbb
nop
lods
negb
pop
hlt
and
test
les
shlb
insb
ret
lods
addr16
movsb
pop
sbb
aaa
sbb
cmp
lods
or
jb
or
add
daa
fstps
test
mov
imulb
test
xor
push
xor
cmp
js
fs
addb
loope
push
subb
mov
and
jl
icebp
xorb
inc
mov
pop
mov
aad
and
gs
pop
inc
repz
leave
xchg
sbb
add
mov
xor
and
inc
lods
imul
push
ds
mov
jns
add
mov
mov
mov
add
jg
int
fistl
mov
sub
sahf
add
hlt
inc
decb
inc
mov
gs
push
jns
std
add
stos
scas
inc
sbb
or
xor
pusha
jnp
push
pusha
mov
or
adc
xchg
sarb
es
lret
add
test
call
jne
stos
mov
pop
or
loopne
fiaddl
mov
lock
pop
movsb
rcl
sbb
inc
pop
std
lret
adc
xorb
inc
in
sub
mov
cmp
insb
jnp
add
adc
cld
and
sub
cmp
stos
adc
daa
push
jno
add
push
mov
or
mov
test
sbb
in
mov
jno
pop
in
aam
mov
fdivrp
inc
clc
mov
fdivl
xchg
in
dec
scas
push
mov
push
dec
xor
xchg
or
cs
iret
movsl
mov
jp
adc
fwait
dec
int3
inc
mov
adc
fwait
mov
sbb
xor
test
sub
pop
or
loopne
stos
jne
pop
daa
cwtl
ret
lahf
add
xor
clc
and
jae
cwtl
cltd
add
sub
add
dec
push
movsb
shll
bound
jbe
mov
xor
stos
sub
mov
add
pushf
ljmp
lods
je
cmp
jmp
jge
dec
loop
ds
mov
inc
mov
pop
cld
adc
push
xchg
dec
clc
int3
or
sbb
adc
add
xchg
add
scas
rclb
pop
clc
call
jb
adc
xchg
cmpsl
sub
sarb
and
fdivrl
xchg
cmp
jnp
sub
mov
jl
inc
sahf
imul
mov
mov
lods
add
cmp
nop
add
sbb
scas
push
add
mov
mov
jns
stos
mov
rcr
pop
pop
or
sub
les
sub
lock
div
xor
mov
loopne
jo
xchg
fadd
sbb
add
jbe
push
test
cmp
xchg
fcom
sub
sahf
subb
push
dec
je
mov
aas
outsl
add
and
lret
je
mov
and
add
aam
std
repz
push
cmp
ret
stos
icebp
xor
mov
nop
loope
sub
clc
sub
test
cltd
call
roll
dec
pop
pop
pop
add
in
pop
enter
mov
dec
out
add
pushf
je
in
push
mov
stc
loop
sti
data16
or
and
loope
xchg
ja
enter
test
aaa
jo
mov
xchg
xor
jg
fiaddl
cmp
stos
pop
and
incb
mov
mov
mov
adc
out
stos
add
fsubrs
pop
mov
popf
pushf
and
mov
mov
dec
mov
xchg
mov
pusha
adc
pushf
push
mov
and
push
cwtl
aam
mov
mov
loop
sub
sbb
dec
and
xchg
addb
pop
mov
mov
das
cmp
daa
mov
imul
arpl
adc
call
addl
out
sbbb
test
mov
add
xlat
lock
sub
push
adc
mov
les
adc
sub
jcxz
mov
xchg
test
and
movsl
sbb
bound
loope
test
jle
adc
xchg
add
add
stos
test
inc
xor
out
lock
or
cmp
dec
fisubrl
cmp
dec
lahf
push
sub
mov
iret
cmpsb
sbbb
jl
inc
icebp
mov
push
cs
and
mov
jb
movsb
push
mov
pop
and
fisttpll
cltd
adc
jl
mov
popa
mov
jge
mov
fbstp
aam
test
cwtl
pop
in
enter
popa
mov
push
push
and
loop
popa
faddp
sbb
add
or
sub
push
mov
xchg
in
sbb
lods
call
sub
dec
or
inc
test
mov
mov
jl
xor
pop
jnp
pop
mov
pop
or
sti
fs
pusha
adc
aad
add
inc
mov
mov
mov
push
addb
lods
addb
add
in
adc
clc
and
cltd
cmp
mov
lock
pusha
andb
in
xchg
nop
xchg
mov
test
cmp
sub
andb
das
popf
loope
roll
cmp
mov
daa
jmp
sbb
jb
inc
jae
adc
fstps
add
ficomps
or
xor
popf
and
sub
xchg
mov
mov
jg
push
jae
shlb
pop
adc
add
int3
add
test
insb
gs
pop
xor
cmpsb
call
in
jne
sbb
loope
call
inc
test
push
adc
jb
pusha
sub
cmp
psubq
call
jo
push
sti
push
shlb
jns
daa
sbb
pop
cmpsb
loopne,pn
outsl
add
rcll
int3
enter
mov
add
imul
jl
add
movsb
nop
fsubr
stos
mov
push
sub
xor
stos
gs
pop
and
test
mov
dec
test
loop
mov
add
movsl
scas
shlb
fs
clc
and
pop
inc
cwtl
dec
dec
mov
or
js
mov
push
or
xchg
out
imul
cmp
adc
add
negl
addl
mov
xlat
xchg
sbb
cmp
test
lods
lcall
sti
mov
add
dec
std
pop
call
inc
cltd
loope
cmpl
sbb
fsubp
sbb
fdiv
mov
dec
or
adc
pop
adc
in
jo
test
add
add
rolb
pop
rclb
dec
add
pop
mov
xchg
push
cld
or
test
inc
loopne
pop
mov
add
into
push
push
daa
movsb
in
push
nop
je
xchg
andb
push
add
int3
jmp
dec
into
test
sub
lahf
xor
xchg
lret
das
mov
mov
xchg
adc
call
push
mov
push
jns
sbb
jge
imul
fidivl
inc
jae
add
cwtl
mov
and
mov
add
loop
data16
stc
adc
dec
jmp
out
cli
aam
sbb
decb
and
inc
push
jg
sbb
decl
fdivp
jns
mov
adc
sti
pop
shrb
and
lods
arpl
daa
jo
sub
dec
test
sbb
std
add
adc
loopne
enter
dec
clc
nop
shlb
push
pop
add
jns
pop
dec
lahf
divl
pusha
pop
je
pop
stc
insb
aas
jo
fs
push
push
mov
cmp
es
enter
nop
shl
cmp
daa
orb
pushf
pop
lret
mov
mov
xlat
add
mov
lds
ja
les
pop
bound
pop
push
dec
subb
or
jmp
pop
mov
rcrb
pop
jp
dec
mov
insb
loope
mov
dec
hlt
roll
mov
test
mov
popf
movsb
lret
lock
adc
arpl
mov
stos
movsb
repnz
imul
push
hlt
mov
xchg
shl
roll
push
stos
andb
mov
cmp
add
in
les
cld
inc
rorb
loope
cmc
xor
adc
add
jbe
loope
movsb
and
inc
int3
and
xor
push
daa
mov
lods
push
add
loopne
leave
movsb
jae
jl
and
mov
call
or
inc
je
ss
add
scas
popa
in
cwtl
lahf
pop
and
and
int3
or
push
jmp
jns
mov
sbb
inc
les
or
ds
sub
dec
sbb
adc
mov
sub
add
push
sbb
cmp
shrl
or
add
xchg
and
ret
addr16
sub
push
mov
cld
rorb
push
test
xor
bound
psrad
and
dec
add
repz
gs
xor
push
xor
cmp
mov
movsb
ret
dec
cmp
mov
loopne
sub
mov
stc
mov
and
xor
mov
sub
fwait
add
lcall
dec
mov
movsl
add
mov
mov
les
mov
loope
cwtl
pusha
pop
pop
and
in
notl
inc
call
test
cli
mov
sbb
push
loope
dec
jl
push
xchg
cmpsb
out
fdivs
das
in
cmp
push
inc
fdivs
enter
pusha
adc
mov
sub
clc
sbb
jmp
in
dec
insb
repnz
in
and
and
leave
out
test
push
rcr
lahf
data16
mov
push
add
sub
xor
ja
test
sub
and
fs
push
rclb
cmc
nop
pop
popa
cmp
in
loope
loop
icebp
ljmp
or
add
subl
enter
pusha
cld
xchg
add
and
stc
int3
jl
negb
and
call
cmc
test
test
mov
mov
bound
add
daa
lods
fwait
ret
das
pop
pusha
aas
mov
xor
mov
in
xor
pusha
cwtl
mov
sti
and
inc
loopne
inc
repz
xor
adc
sti
int
movsl
sub
mov
xor
mov
xchg
adc
jo
mov
cmp
test
add
pop
adc
rcll
stos
cmp
xchg
es
fisttpll
rclb
sub
adc
popf
lret
inc
inc
mov
xchg
fsubl
gs
xchg
les
lods
clts
cld
or
dec
movsl
mov
push
and
inc
inc
xchg
bound
xor
test
loope
add
jnp
repz
xchg
ficompl
adc
in
lcall
leave
cmpsb
jne
cmpsb
mov
test
lods
push
and
cmp
enter
xchg
cmpl
xchg
add
push
and
jecxz
bound
fs
dec
inc
cli
mov
cmp
dec
std
clc
or
xor
xor
js
mov
lods
adc
test
mov
mov
iret
push
dec
mov
cs
sub
dec
fists
add
cwtl
dec
mov
jmp
fs
cmc
pop
jmp
add
fsin
mov
mov
push
ret
pop
in
dec
mov
add
stos
lods
xlat
enter
in
xor
shrl
mov
xchg
add
mov
aam
dec
mov
sub
xchg
test
mov
xor
add
and
loope
add
cmp
call
into
aas
aas
pushf
ret
sub
loopne
movsl
mov
mov
ds
inc
cmpsl
bound
mov
sbb
jns
add
mov
pushl
jl
rcl
cmp
movsl
mov
sarl
jns
add
loop
sbb
add
in
dec
iret
add
and
pusha
bound
imul
xchg
in
aam
pop
lcall
test
sub
cs
add
fistps
ror
cmp
jge
mov
cmpsb
adc
jl
mov
or
xchg
loopne
popf
test
push
push
jge
jns
test
loopne
fwait
pop
movsl
mov
ljmp
fsubrp
jp
mov
mov
stos
or
std
adc
add
and
pop
add
flds
xchg
mov
push
add
push
add
pop
xchg
cmp
test
cmp
adc
push
lahf
adc
mov
push
test
push
movsb
aam
push
add
jnp
dec
add
in
jo
dec
scas
mov
in
inc
xor
cs
adc
sub
xchg
inc
inc
movsb
mov
mov
pusha
sub
rorb
loop
sub
lock
aad
lods
repnz
jno
cmp
mov
lods
add
std
mov
in
cmpsb
adc
xor
mov
stos
add
test
pop
add
jo
dec
sub
mov
or
mov
out
sbb
addb
cmp
jne
daa
fiadds
push
sub
add
jae
ficoms
or
loopne
and
xchg
add
dec
das
and
lahf
shll
cmp
lret
jne
insl
dec
or
data16
or
shrb
rcr
pop
fistpl
movsb
arpl
andb
aad
imul
cld
inc
push
mov
into
jg
xchg
add
mov
movsl
ds
xor
xchg
or
call
xchg
add
push
add
out
cmp
push
sub
cld
fwait
mov
mov
lock
je
cs
xor
cmpsb
and
jmp
fsubl
xchg
outsb
xor
mov
inc
mov
lds
mov
mov
pushf
iret
ja
sarb
adc
movsb
sbb
aam
inc
or
sbb
mov
cmp
fdivs
add
sbb
loope
into
nop
dec
notb
mov
dec
mov
cmp
add
pushf
aas
stos
add
push
inc
sub
add
je
inc
aam
andl
stc
movsb
add
aam
cmp
mov
mov
daa
sbb
aam
mov
aam
pop
add
push
into
out
dec
sub
shlb
rcll
hlt
adc
dec
out
add
pop
into
inc
pop
dec
and
push
jp
das
and
nop
outsl
test
js
sbb
nop
jle
pop
jg
mov
push
jmp
addb
mov
shrb
mov
push
test
fs
icebp
cmp
rcrl
ret
test
dec
clc
xlat
adc
ja
mov
jmp
and
in
jo
mov
adc
imul
ss
push
ljmp
popf
mov
cld
adc
xchg
sub
and
add
pop
xchg
sub
sub
add
test
dec
add
jno
ror
jbe
shlb
adc
push
inc
push
inc
add
xor
nop
or
je
dec
cwtl
sub
and
out
mov
pop
fstps
sbb
ret
sar
and
jo
sbb
mov
fimuls
push
arpl
or
sbb
and
inc
je
push
test
add
je
adc
dec
push
jae
loop
sbb
mov
rolb
inc
out
loopne
repz
pusha
xchg
push
or
ljmp
inc
push
sbb
pop
roll
xor
lock
adc
xchg
or
mov
clc
jno
mov
subb
pushf
in
or
cmp
or
adc
insb
rorl
adc
cs
sbb
in
and
daa
clc
decl
jecxz
add
js
popa
iret
aas
jno
add
push
add
push
inc
clc
pop
roll
pushl
out
iret
or
pop
loopne
add
push
hlt
mov
and
add
mov
xchg
into
loopne
nop
test
in
dec
xchg
adc
sbb
xor
xchg
pop
aad
test
add
xchg
dec
xor
xor
rcrb
inc
clc
loope
inc
sub
faddl
pop
push
sti
and
mov
loopne
dec
daa
enter
int3
lret
fisubs
inc
pushf
call
test
scas
push
xor
cs
sarb
jl
add
dec
mov
cmp
push
subl
and
adc
and
test
int3
xchg
or
jecxz
xor
fsubs
aam
enter
mov
dec
inc
pop
pop
call
mov
and
mov
pusha
ret
inc
cmp
xchg
clc
lods
imul
mov
enter
xor
ds
ja
sub
push
in
inc
cmc
cwtl
cwtl
jle
loope
xchg
add
loope
gs
dec
mov
jge
enter
clc
stc
dec
push
jns
ret
out
inc
nop
add
test
popa
push
sub
jno
stos
fisubl
out
cmc
inc
mov
mov
jo
and
movsb
adc
xor
push
sbb
lds
in
add
clc
pop
mov
mov
lods
pop
push
dec
jmp
push
cs
inc
js
psubq
pop
mov
addr16
pusha
jbe
mov
sbb
fmuls
sbbl
outsl
mov
mov
cwtl
imul
sbb
cmp
adc
pop
jg
mov
or
push
inc
mov
or
add
xchg
mov
call
aas
inc
jbe
add
xor
outsb
enter
jo
sub
outsb
out
lds
cmp
and
cmp
sub
mov
push
jbe
pop
adc
xchg
ret
ljmp
adc
sub
add
jb
mov
or
in
inc
lcall
std
push
push
roll
cmpsl
sub
or
test
arpl
stc
xchg
loop
inc
or
cmpsb
hlt
jo
jae
pmaxsw
aad
or
movsb
xchg
pop
cwtl
cmp
mov
push
inc
testb
inc
inc
popf
test
enter
jnp
and
int
xchg
xlat
imul
xchg
in
and
arpl
test
inc
leave
or
int
decl
push
movsb
xor
cwtl
rclb
cmpsb
lock
outsl
push
jae
fistl
adc
fwait
shl
clc
xor
movsl
pusha
sbb
aam
mov
rolb
inc
add
inc
fs
dec
dec
add
sti
mov
jp
adc
add
test
andb
and
push
dec
pop
arpl
jno
cmp
add
int
push
loope
adc
xchg
jmp
mov
dec
fdiv
and
pop
dec
ja
iret
cmpb
mov
lods
cltd
sbb
add
add
insb
jl
push
rdtsc
nop
adcb
or
push
push
movsb
add
pop
idiv
adc
enter
pop
int3
mov
loopne
movsb
xor
sub
test
call
xchg
lock
jo
insl
test
popf
mov
jne
sbb
call
loop
dec
and
xchg
push
jnp
call
imul
cld
sbb
aad
inc
lods
push
pop
adc
pop
or
jb
sub
mov
pusha
sub
stos
adc
mov
test
xor
add
nop
and
or
int
inc
lcall
or
daa
popf
stos
mov
lods
jmp
jns
mov
rcrb
insb
sub
das
pop
inc
ret
push
jl
imul
bound
sub
daa
inc
lds
add
fisttpll
hlt
xor
in
out
sub
and
aas
inc
xor
pop
and
adc
sub
xor
loopne
inc
jl
loope
fiadds
sub
xor
mov
or
jb
pop
les
pop
and
inc
cwtl
cwtl
je
stc
insl
jl
xor
fwait
sbb
loope
lahf
adc
sbb
xor
sbb
stos
ds
test
popl
adc
xor
xor
inc
dec
mov
push
mov
pop
shrb
push
daa
mov
add
mov
mov
lea
rclb
and
pop
push
ret
cltd
cmp
movsl
gs
std
adc
xor
into
sub
mov
inc
sahf
inc
xor
push
sahf
movsb
add
sub
mov
xchg
cmpb
inc
mov
mov
add
testb
adc
subl
sar
test
push
lcall
inc
jo
int3
data16
add
in
or
addb
xchg
cmp
jb
push
int3
mov
dec
enter
pop
or
xchg
into
mov
jle
jae
addb
rorb
add
lock
dec
loopne
dec
push
test
and
or
nop
mov
out
jb
sub
adc
in
push
andb
int
cmp
xchg
andl
add
insl
incb
jae
nop
lock
dec
xor
sub
sub
jae
daa
in
pop
flds
add
add
lret
divl
out
lcall
push
nop
add
and
inc
rol
jae
adc
shlb
bound
adc
jo
popf
nop
sub
sub
or
xor
dec
push
scas
inc
add
dec
push
aas
sbb
or
adc
cmpsl
jge
adc
mov
and
add
or
fdivs
movsl
cmp
jns
aad
je
mov
dec
stos
lds
out
sub
subl
in
adc
clc
and
in
push
add
aad
cmp
pop
add
mov
or
push
dec
fsubs
mov
hlt
or
push
aam
adc
addb
cmp
lods
repnz
hlt
push
and
rcrl
sbbb
xchg
add
lds
aas
cld
stos
cmp
popa
dec
pop
inc
sbb
arpl
sbb
test
fdecstp
mov
movsl
jo
clc
insb
sarb
pop
or
fs
icebp
test
orb
push
add
stc
loop
adc
sub
data16
add
addr16
aad
ret
mov
mov
cld
xchg
xor
pop
pushf
add
movsl
push
aad
or
sub
mov
push
jl
cmp
pop
push
cs
test
in
loopne
sbb
in
rcrl
pop
dec
dec
add
out
and
pop
adc
add
imull
in
aam
lock
ja
nop
jne
aam
or
mov
inc
in
clc
push
icebp
test
jb
test
push
std
dec
cwtl
mov
imul
jns
adcb
mov
rolb
sbb
fildl
bound
and
cmp
ljmp
cmpb
cmp
mov
inc
fs
insb
and
mov
mov
sti
loop
mov
inc
and
lea
enter
add
push
xorb
adc
test
syscall
pop
fsubp
hlt
xchg
inc
stc
aas
roll
mov
add
pop
cmpsl
jge
addl
lods
jg
mov
sub
xorl
cmp
add
pop
loop
add
push
or
adc
in
add
loop
loope
out
add
rcpps
sbbl
dec
dec
add
mov
cmp
xorb
into
cmp
sub
add
jne
aad
fmull
add
out
loope
cmp
push
into
jo
imul
adc
aam
add
mov
inc
rorb
pop
ret
mov
mov
jecxz
add
cltd
sti
fadd
stc
repz
add
mov
and
cli
out
push
or
adc
xor
icebp
pop
pop
adc
mov
popl
pop
xchg
lds
data16
sbb
push
popa
xor
push
test
xor
mov
mov
jo
push
sub
jg
add
push
and
dec
dec
mov
add
push
pop
xlat
add
jo
in
jae
in
fnsave
repz
in
inc
xchg
dec
loopne
leave
pop
inc
testl
into
sbb
shlb
lret
cmp
cmc
jo
popf
cld
pushf
add
xor
int
mov
loope
sub
orb
addl
call
mov
js
xor
mov
and
mov
fimuls
fs
in
daa
cmp
loopne
std
rcrb
aam
rorl
fcmovnu
fbld
cli
ljmp
rcr
jmp
xor
repnz
or
lods
dec
arpl
popf
pusha
bound
sbb
subb
cmp
cmpsb
add
cwtl
push
xchg
icebp
pop
andb
addr16
and
add
mov
in
add
xchg
ret
fsubrs
mov
in
pop
aaa
pop
pslld
cmp
cltd
xchg
addb
add
fimull
or
adc
sub
es
cmpxchg
fcoms
std
arpl
lea
sbb
iret
repnz
mov
add
fsubs
add
xchg
insl
aas
pusha
mov
pop
xchg
pop
sub
out
jp
pop
add
scas
mov
xor
mov
movsl
mov
or
push
mov
mov
pusha
add
loope
lods
int3
movsb
adc
pop
aam
aas
addr16
push
loop
mov
sti
scas
daa
or
loopne
adc
or
push
ss
insb
add
mov
icebp
hlt
dec
push
dec
cmp
js
int
sbb
add
jecxz
push
shr
ret
div
insl
or
sub
pop
jbe
adc
mov
or
mov
jne
sbb
aad
adc
out
enter
mov
iret
fldl2e
jb
cltd
dec
add
mov
pop
es
inc
add
xor
mov
add
add
xchg
dec
jb
inc
add
mov
add
imul
scas
hlt
outsl
dec
sub
add
mov
cwtl
cmc
jmp
or
sub
push
cwtl
add
stc
gs
std
lcall
cmpsb
pop
stos
cmpsl
or
sub
roll
test
push
out
je
stos
adc
jmp
push
pop
ljmp
add
push
pop
add
out
mov
pop
test
into
push
rcrl
sub
clc
std
fcomps
lods
mov
push
fs
add
fcmovnbe
xor
jl
call
imul
pop
inc
push
repnz
mov
leave
clc
test
in
js
iret
mul
jge
cmpsl
adc
cltd
add
nop
xchg
push
daa
mov
pushf
sub
sbb
inc
dec
lcall
in
mov
mov
and
add
pop
mov
pop
fsubl
add
in
fiadds
xchg
add
addb
xor
fsin
movsb
add
insl
fwait
sbb
add
xchg
stos
xchg
jp
jl
mov
add
sbb
push
or
xchg
enter
in
cltd
add
mov
mov
sbb
xchg
test
mov
fld
xor
sti
js
and
lds
sbb
xchg
xchg
hlt
pop
je
jns
in
mov
jecxz
incb
outsb
push
leave
jle
sarl
xchg
mov
fildl
lret
loope
xchg
addb
or
mov
idivb
push
xor
adc
and
cld
out
adc
in
add
cwtl
push
shrl
cmp
xor
les
mov
imul
sbb
add
add
sbb
xor
hlt
add
idiv
or
and
jecxz
pop
in
mov
push
scas
repz
push
xor
add
push
xchg
fbld
in
add
mov
xchg
add
pop
iret
icebp
mov
sub
int3
loopne
popw
sbb
xchg
popf
fcomps
enter
xchg
outsl
jno
ja
mov
dec
adc
sbb
sub
pusha
jp
test
sbb
xor
mov
inc
push
add
push
adc
pop
sbb
aam
popa
ret
in
lcall
rolb
push
jecxz,pn
sbb
mov
add
adc
sbb
cmp
ljmp
or
in
ss
and
rcll
and
jl
lahf
adc
pop
daa
scas
add
dec
cld
jmp
add
stos
mov
add
pop
andl
popa
pop
xor
or
mov
add
jg
sbb
mov
jl
dec
cmpsl
inc
add
mov
or
stos
xchg
fcmovnbe
in
push
dec
xorb
adc
jmp
mov
add
push
pushw
jle
test
addl
jno
adc
jmp
add
and
nop
in
ficompl
fcoml
cmp
inc
insl
lret
xor
xchg
das
jbe
mov
jl
fadd
push
not
int3
xchg
popa
add
sbb
cltd
adc
pop
cmpsb
add
adc
test
adcb
pusha
inc
add
pop
mov
lods
sbb
pop
add
mov
dec
fldcw
out
jle
push
es
or
xor
cmp
je
mov
jmp
jmp
pop
and
loopne
cmp
cmpsb
ficoml
mov
pushf
popa
xchg
scas
das
mov
int3
pusha
lcall
orb
lods
cmp
sbb
inc
test
repnz
jle
inc
dec
cs
nop
dec
dec
or
add
pop
clc
inc
mov
push
test
and
ret
push
add
xchg
inc
pop
xlat
rolb
jmp
inc
nop
clc
in
or
incb
or
loope
cld
xchg
add
pop
int3
jb
mov
push
cmp
cmp
adc
jns
cwtl
pop
xchg
pop
push
add
xchg
adc
repz
in
mov
mov
and
add
add
push
cld
push
pop
cmpsb
outsb
mov
mov
stc
add
inc
int3
popa
xchg
sub
xchg
jae
add
add
dec
ret
aam
rolb
pusha
xor
mov
les
ljmp
push
sub
lea
xor
int
into
push
bound
dec
jo
xchg
addr16
add
mov
xor
arpl
cmp
sbb
das
call
add
xlat
movsb
pop
cwtl
sub
add
fldt
cld
add
in
xchg
aad
add
adc
test
dec
faddl
cmp
mov
shlb
cmc
add
cwtl
addb
mov
test
mov
les
test
and
cltd
bound
pop
sbb
faddp
les
js
rcr
add
adc
jmp
sbb
push
in
cmp
add
imul
add
jmp
je
sarb
xor
int3
xor
jno
out
push
mov
ror
cmpsb
cmpsl
sbb
loope
mov
push
outsl
popa
cwtl
stc
pusha
add
sahf
jns
add
cmp
in
loopne
cmp
cltd
adc
into
in
sub
inc
cmp
mov
js
jo
add
dec
out
jp
cmp
adc
jl
hlt
loopne
rcrb
sub
mov
xor
cltd
jno
cmp
xchg
ja
mov
popa
mov
js
pop
lock
bnd
add
lds
adc
int
mov
or
mov
inc
add
or
xor
leave
test
test
adc
lea
fwait
out
out
inc
std
test
stos
test
adc
inc
cli
sbb
sbb
repnz
movsb
into
rcrb
mov
or
jp
outsl
aas
popa
and
lret
xchg
jmp
aam
clc
sub
mov
mov
pusha
or
or
adc
adc
push
or
push
push
add
xchg
jecxz
add
lods
std
add
push
aad
jo
jne
pop
cmp
pop
imul
mov
inc
imul
add
insl
add
and
or
add
inc
push
dec
in
add
jecxz
add
add
pop
sbb
add
in
sub
push
aam
xlat
add
ret
xchg
test
outsb
or
push
fs
xchg
pop
add
movsl
mov
xor
enter
and
jae
add
mov
cmc
cmp
and
xor
lods
leave
jo
sub
add
shr
sub
test
orb
or
jg
xchg
push
push
push
jle
add
test
add
sti
pushf
sbb
sub
push
add
mov
leave
pop
stos
adcb
mov
mov
out
add
test
into
loopne
loop
add
xor
lret
jmp
lea
lahf
loopne
sbbb
daa
pushf
add
fsts
lock
bsf
in
adc
enter
outsb
jmp
or
cltd
sbb
sbb
xchg
insl
mov
mov
or
stos
lock
lahf
rcrb
pop
or
lock
mov
aam
pmaxsw
inc
pop
sub
shrb
add
mov
inc
pop
add
sbb
loope
cwtl
add
sti
jbe
xchg
cmp
add
push
push
repnz
leave
jle
call
pop
lahf
push
add
add
fists
cli
or
loop
mov
cmpsl
movb
push
lea
add
mov
add
orb
jbe
add
arpl
jecxz
pop
pop
lock
and
add
mov
in
pop
add
cmp
aam
xor
stos
dec
add
lret
aad
pop
sahf
movsl
mov
mov
cmp
mov
dec
sbb
fnstsw
rcr
in
insl
add
and
mov
jae
aam
pop
cmp
out
push
test
lcall
inc
add
loope
jns
sbb
cld
xor
sub
nop
add
pop
push
mov
add
push
rcr
fadds
loopne
inc
xor
dec
and
push
bound
add
mov
iret
add
lcall
add
mov
sahf
push
in
cli
cld
and
add
dec
inc
jnp
in
push
xchg
pop
outsl
sub
mov
fcoms
movsb
add
ljmp
repnz
pop
ret
adc
add
lret
fisubs
movsl
adc
pusha
insb
xor
sbb
jmp
dec
nop
xor
mov
add
adc
xchg
and
mov
rsm
scas
mov
mov
mov
add
or
cli
jns
mov
inc
jmp
inc
filds
mov
inc
clc
ljmp
out
mov
cld
jb
cwtl
fcompl
daa
lds
adc
inc
and
mov
add
gs
and
test
shll
jb,pt
jnp
jle
stos
add
shr
in
mov
and
adc
pushf
das
add
in
cltd
xchg
popa
sbb
andb
xor
sbb
lret
xlat
lahf
arpl
adc
jg
xor
outsl
cmpl
mov
dec
cmp
pop
sbb
mov
add
shll
mov
in
gs
jg
jns
stc
jl
in
jbe
out
adc
gs
nop
sbb
movsb
cmp
cmpb
jnp
iret
movl
xlat
and
cld
and
call
push
fcmovnbe
jmp
add
jno
mov
inc
pop
and
push
gs
mov
mov
adc
xchg
arpl
dec
push
idiv
test
stos
or
mov
movsl
push
mov
popf
pop
add
add
mov
iret
adc
mov
fwait
test
int3
sbb
mov
std
add
lret
inc
mov
addr16
pop
push
push
loopne
jns
add
xor
call
mov
xlat
mov
inc
test
xchg
fiaddl
xchg
fcmovne
mov
sub
int
push
add
sbb
lods
cs
ljmp
and
add
push
lods
xchg
mov
hlt
adc
xor
and
mov
rolb
jne
or
push
enter
sbb
shrb
std
pusha
xchg
arpl
inc
jle
mov
nop
add
lret
mov
push
mov
inc
push
add
dec
add
pop
shlb
add
xor
scas
mov
fdivrl
mov
push
push
pop
ret
add
mov
pop
frstor
test
lds
loop
andb
add
mov
shrl
out
lea
hlt
loopne
std
add
mov
gs
movl
clc
fdivrl
aaa
dec
mov
sub
cmpsb
mov
in
jo
xor
popl
jo
or
pusha
pop
test
adc
pop
pop
mov
pop
mov
inc
add
and
cmp
sub
sub
psubsb
xchg
pop
add
xor
jb
push
adc
sub
adc
add
mov
test
mov
in
in
inc
cmc
ljmp
mov
xchg
lret
mov
repnz
mov
loopne
aas
add
cmc
scas
repz
clc
push
mov
jno
fwait
sub
ds
and
popa
lcall
std
add
int3
pop
enter
stos
push
fimuls
cmp
add
mov
rclb
stos
add
push
cwtl
sbb
mov
enter
out
std
add
pop
lret
push
dec
pushf
mov
add
fwait
add
add
sub
in
mov
cwtl
xchg
ljmp
pop
sub
add
lret
push
test
push
mov
mov
mov
pop
iret
add
xchg
daa
adc
in
sbb
jl
mov
pop
addl
sbb
pop
rcll
sbbb
push
in
mov
dec
sbb
adc
add
test
hlt
cld
adc
mov
xchg
add
sbb
push
add
arpl
jl
iret
add
add
add
ffreep
movsl
outsl
xor
adc
imul
add
and
add
push
icebp
leave
clc
scas
loopne
xlat
movsl
jmp
mov
shlb
icebp
cli
add
sub
mov
xlat
cmc
add
push
or
inc
outsl
in
add
push
jb
fs
imul
enter
cmpb
scas
ja
push
repz
mov
dec
push
nop
push
sbb
jne
mov
pop
add
pop
mov
xchg
dec
inc
add
aam
pop
sbb
push
cwtl
push
pop
jne
fs
dec
adc
mov
mov
js
cmp
mov
loopne
add
and
ret
inc
fdivl
or
out
sbb
sub
dec
jl
inc
mov
stos
les
add
adc
adc
flds
cmp
rcll
ret
xor
xor
jb
loopne
iret
filds
ret
aam
addr16
iret
or
or
sbb
arpl
sbb
sub
sarb
push
mov
sbb
and
pop
and
sbb
stos
cmpsb
mov
lods
bound
and
fildll
cli
clc
fs
and
mov
cmp
roll
pop
leave
pop
adc
sbb
aaa
pusha
clc
push
add
mov
insb
pop
mov
fsubl
push
insb
jns
sbb
add
adc
loop
stos
cmpsl
mov
push
xorb
pusha
aaa
add
xchg
dec
ljmp
dec
test
cmc
loop
inc
call
in
loop
pop
inc
inc
lret
bound
pop
stos
mov
sbb
or
stc
data16
pop
xchg
pop
lods
out
jge
push
sub
lods
test
pusha
std
jbe
mov
loopne
xor
pusha
jno
hlt
loop
mulb
sahf
loop
scas
in
loop
imul
dec
lods
push
xchg
mov
sbb
xor
add
sub
lea
mov
imul
cli
not
pushl
mov
mov
jp
cli
sbb
cmp
call
mov
sub
test
cmp
push
xchg
jecxz
inc
shlb
inc
xchg
or
push
popf
cs
fwait
xchg
inc
loope
xchg
pop
cld
cmp
add
push
frstor
pop
jno
jmp
xchg
sbb
xor
jne
nop
test
xchg
pop
xchg
push
das
in
inc
les
mov
inc
mov
cwtl
insl
sub
mov
idivb
int
aas
bound
pusha
dec
jbe
jmp
jl
stos
stos
out
and
add
fwait
in
xchg
mov
shrb
sub
and
repnz
nop
call
jne
xchg
or
sbb
mov
mov
das
in
jbe
cwtl
jbe
add
sbb
in
and
and
addl
enter
clc
inc
sbb
lea
jbe
and
xor
xchg
insb
pusha
mov
sahf
repz
jle
push
mov
add
xchg
clc
or
xor
add
mov
stos
scas
mov
or
icebp
pop
jns
sbb
mov
insb
data16
jo
adc
jns
inc
test
dec
movsl
jecxz
adc
sub
test
popl
or
sbbb
icebp
aas
mov
push
jp
xor
add
and
xchg
movsb
dec
xchg
cmp
ljmp
and
into
xor
xor
jbe
loopne
jnp
fdivr
loopne
hlt
mov
jnp
fmuls
sub
jb
jb
test
add
les
jb
daa
pusha
jmp
int3
shll
xor
outsl
mov
std
mov
lock
adc
divl
cwtl
cmp
pop
or
jb
pop
mov
xor
shlb
push
sub
jns
sbb
or
test
cmpsb
push
insb
rcrb
ret
add
sbb
cmc
sub
jae
nop
je
cmc
mov
cmpsb
sbb
idiv
xor
adc
sbb
add
sub
sti
pop
push
sub
mov
daa
imul
clc
out
pop
lret
pop
jns
ret
popa
jp
add
lea
mov
adc
jl
pop
inc
mov
sbb
jecxz
xchg
sarb
xor
bound
bound
or
test
mov
mov
push
aam
adc
mov
adc
dec
lods
mov
adc
pop
xor
add
cmc
push
dec
sti
mov
mov
loope
fisubrs
pushf
push
inc
movq
daa
imul
mov
call
inc
push
pop
adc
aad
mov
inc
mov
stos
popa
gs
inc
out
icebp
pop
cmpb
dec
cltd
bound
repz
push
stos
enter
cwtl
add
outsb
sub
xchg
jecxz
and
daa
pop
jmp
pushf
lock
xchg
and
stos
add
jge
xchg
pop
lret
fcmovbe
mov
push
xchg
es
hlt
jl
fxch
pop
popa
pop
arpl
pop
lods
adc
inc
cmp
enter
shll
stos
test
cltd
fdivrs
mov
enter
and
xlat
xor
push
insl
in
out
push
or
lods
and
inc
sbb
lahf
inc
adc
jno
fs
mov
in
jge
push
dec
imul
sub
js
insl
lds
int
or
adc
lods
cmp
fldenv
adc
jno
add
enter
clc
outsb
das
std
mov
and
popf
jp
xchg
push
xchg
sub
mov
lds
in
inc
lret
test
pop
mov
lods
insl
nop
mov
incb
xlat
add
or
stos
imul
add
or
aam
mov
push
fsubl
push
pop
arpl
or
adc
xor
ja
add
ss
xor
scas
sub
hlt
jg
cmp
and
mov
ss
cld
cmp
loopne
push
mov
jno
imul
ja
aas
xchg
dec
cmp
into
xchg
inc
inc
fs
mov
dec
xor
mov
stos
call
jmp
lahf
loop
call
push
movsl
mov
addr16
add
pusha
adc
dec
js
movsl
aam
test
inc
das
pop
cld
leave
cmpsl
into
fnstenv
xchg
ud2
mov
push
add
fistl
pop
mov
jp
lock
sti
in
std
or
inc
sub
loope
jno
jns
sbb
movq
shr
jmp
xor
fadds
lds
mov
outsl
int3
and
sub
fimuls
add
inc
and
add
cltd
push
sbb
testl
mov
mov
aas
lret
insb
enter
insl
je
dec
inc
je
add
add
push
leave
loope
push
ja
cmp
inc
jmp
xchg
push
loop
gs
adc
popf
test
or
sbb
add
shll
jae
loope
inc
test
stos
cmpsb
mov
mov
nop
lods
shlb
das
lret
jo
movb
mov
adc
gs
mov
pop
xor
pop
ja
call
mov
and
add
nop
mov
add
mov
pop
pop
imul
or
daa
repz
repz
cltd
push
or
lods
sub
test
sbb
cld
das
cli
in
aad
insl
mov
mov
test
push
hlt
xchg
jne
xor
mov
daa
mov
jns
les
movsl
pop
add
pop
inc
cli
adc
jle
push
js
fxch
and
sub
subb
mov
sub
imul
in
outsb
dec
test
sub
dec
mov
add
lods
fistps
and
xor
insl
inc
movsl
jmp
mov
lock
adc
jmp
enter
ja
jle
inc
lods
imul
fistps
fdiv
add
jb
das
mov
arpl
nop
push
mov
adc
sbb
pop
jg
pusha
and
scas
sbb
nop
out
add
inc
mov
add
sti
lock
orb
je
and
mov
js
fs
pop
daa
rcll
subl
addr16
add
pop
mov
xlat
xchg
mov
sub
pop
insb
cmp
inc
add
xor
jg
mov
cmp
or
pop
mov
cmp
cmp
loope
pop
push
push
push
xor
pop
daa
popf
jp
pop
and
lahf
mov
xor
sbb
add
add
add
push
gs
and
stc
xor
jb
or
mov
add
inc
arpl
das
push
add
mov
push
mov
mov
test
cmp
mov
cmpsl
js
sahf
pushf
imul
inc
nop
push
loope
or
jb
sub
in
pusha
xchg
icebp
jns
aam
insb
add
xchg
pop
sbb
mov
out
inc
loope
fldl
fcoml
xor
ret
and
and
add
das
orl
int
add
sbb
push
sbb
pusha
sahf
jo
inc
idivl
lcall
sub
pop
pop
or
outsb
xchg
sbb
push
add
mov
in
aad
les
fsubl
jp
sbb
data16
inc
pop
test
faddl
stc
mov
fxtract
clc
inc
mov
or
pushf
jae
sbb
push
js
mov
fists
hlt
movsb
fldcw
xchg
mov
mov
fldenv
js
movsb
add
mov
pop
sub
nop
adc
cmpsl
xor
inc
loopne
and
cmp
dec
xor
mov
dec
or
jb
xor
cmp
fs
ret
add
sbb
mov
test
mov
fistps
scas
add
push
jne
inc
add
mov
adc
inc
popa
add
lcall
fs
add
add
xchg
fwait
out
dec
int3
push
add
fisttps
cld
mov
xchg
cmpb
mov
fdivs
in
adcb
fisubs
inc
jns
rclb
and
out
pop
mov
jmp
aaa
sub
dec
hlt
mov
add
dec
es
gs
inc
or
stc
cmp
or
add
or
call
lcall
xchg
in
add
int3
pop
test
xchg
mov
fcomi
and
fsubrs
add
push
imul
stos
and
test
lock
push
inc
push
pop
call
aaa
test
add
inc
rcrb
ljmp
jle
jns
je
js
push
cltd
add
dec
cmpsl
mov
in
movsl
cmp
push
sbb
je
mov
add
fcomp
les
sbb
adc
sub
in
jb
sbb
xchg
jo
add
ljmp
fisubrl
idiv
mov
test
xor
rolb
das
nop
cmp
repz
int
popa
fadds
outsl
push
adc
adc
mov
add
or
mov
inc
adc
xchg
int
add
insb
push
jbe
mov
mov
adc
fucomp
add
inc
hlt
mov
cmp
in
movsl
or
and
jno
add
mov
or
iret
loopne
add
fcompl
mov
stos
sbb
mov
ror
pop
loopne,pn
in
cmp
inc
shlb
push
push
lods
imul
inc
movsb
andb
ss
adc
in
sub
jae
movsb
cmp
mov
jg
loopne
mov
inc
add
sbb
pop
pusha
nop
xchg
push
pop
add
in
xchg
movsl
and
xor
dec
loopne
sub
xor
pop
xlat
and
add
sub
fwait
and
dec
enter
jmp
in
jo
mov
decl
mov
adc
pusha
add
pop
daa
insb
lods
jae
subl
mov
sbb
rorl
call
shr
bnd
mov
mov
pop
lahf
lret
aam
aam
test
xchg
addb
in
lahf
data16
and
stos
pop
clc
dec
mov
in
inc
jae
mul
clc
lock
mov
out
add
jecxz
arpl
aaa
fadds
mov
jge
inc
sbb
xor
fists
js
add
insb
jl
rorl
sub
pusha
mov
mov
daa
f2xm1
loop,pn
mov
xor
add
loop
cmp
data16
js
loopne
lahf
test
out
adc
shll
mov
adc
cmp
filds
repz
and
js
add
add
ret
fcompl
lods
outsb
repnz
push
mov
loopne
into
sub
pusha
inc
dec
stos
loop
aas
inc
add
shll
pop
cwtl
pop
adc
pop
out
adc
daa
pushf
pushf
test
lahf
mov
inc
push
shlb
add
stos
clc
sub
add
xchg
xlat
icebp
adc
jno
rcrb
nop
or
fcmove
adc
test
mov
out
sub
add
xor
dec
dec
push
int3
inc
sbb
aas
bound
jo
add
push
movsl
dec
cmp
add
loopne
call
and
adc
mov
test
int3
in
mov
sahf
mov
adc
enter
cmp
inc
mov
pop
adc
push
dec
das
enter
sbb
pop
inc
les
and
mov
push
loopne
lret
and
negb
adc
dec
je
es
jge
mov
sub
ficoml
push
jne
int3
mov
pop
addb
stos
sub
insb
movsl
adc
test
sbb
xchg
mov
pop
add
cmp
push
lds
les
cmp
les
scas
adc
jnp
cmc
or
xchg
cmc
mov
pop
out
imul
xor
cli
sbb
jne
lods
xchg
movsl
mov
and
notb
mov
cmpsl
mov
adc
loope
outsl
jg
call
xchg
out
clc
jo
mov
or
data16
adc
bound
bound
movsb
arpl
test
pushf
cmc
movsb
cs
pop
lcall
dec
dec
pop
pop
mov
or
cmp
test
lea
shll
loopne
rorb
cmp
push
rolb
sub
imul
jbe
inc
xchg
mov
or
pop
std
push
mov
push
pop
nop
jae
pop
dec
sub
int3
mov
and
mov
sbb
xchg
cmp
dec
sahf
mov
test
mov
sbb
and
adc
adc
stos
push
cmp
push
push
hlt
mov
pop
or
mov
inc
jo
clc
xchg
adc
std
cmp
add
cmpb
jne
push
or
dec
outsl
std
clc
les
popf
aas
or
inc
or
lods
fbld
inc
xor
enter
pushf
fstpt
adc
mov
fwait
adc
pop
movsb
jbe
and
pop
arpl
and
nop
movsb
imul
mov
push
sbb
mov
mov
add
arpl
loope
scas
fmul
mov
jl
nop
nop
and
jae
inc
jmp
push
pop
clc
mov
and
cmp
mov
jb
out
jo
push
jp
inc
mov
mov
rolb
loopne
dec
in
mov
pop
add
loopne
jns
add
mov
sbb
jne
loope
and
ret
lret
shll
add
testb
xor
aas
outsl
or
inc
or
rcrb
mov
mov
pop
cmp
xchg
enter
jnp
aam
negl
aaa
scas
test
nop
xchg
and
sub
sub
pop
into
sub
sub
jo
mov
test
xchg
addr16
sub
enter
push
and
pop
bound
in
mov
cmp
hlt
lret
repnz
cmc
xor
push
cmpsl
cmp
lds
xchg
loopne
xor
sbb
mov
inc
negb
mov
push
pop
inc
decb
hlt
xchg
scas
pop
cltd
xchg
cwtl
mov
std
cltd
int3
xor
mov
xchg
mov
adc
imul
js
mov
leave
js
hlt
es
divb
inc
and
mov
add
jo
pop
jae
data16
mov
mov
dec
add
sbb
jne
xchg
ficoms
xchg
in
add
cmp
pop
jnp
dec
sbb
jecxz
cmp
inc
cli
fiadds
push
dec
into
cltd
or
mov
jbe
sti
loop
data16
pusha
test
loop
add
pop
xor
fneni(8087
addb
inc
cmp
sub
hlt
jo
adc
mov
test
push
shrb
nop
jo
sub
sbb
mov
and
ficoms
mov
sub
je
or
adc
dec
add
inc
dec
xor
cmp
jl
pop
inc
add
test
and
iret
out
mov
lock
movb
cmp
pusha
mov
ljmp
orb
shrl
stos
test
sub
movsl
mov
das
mov
std
xor
imul
mov
lock
cmp
sbb
add
jmp
movsl
adc
mov
sbb
mov
mov
pop
add
mov
aad
sub
insb
pop
pop
cli
push
push
add
add
xchg
mov
mov
mov
add
cltd
hlt
test
negb
lcall
jnp
and
mov
mov
mov
pop
js
mov
incb
jb
mov
in
cmp
loop
mov
lcall
xchg
inc
jl
add
sti
pushf
xchg
cmpsb
lods
arpl
add
mov
mov
psrlw
das
sbb
imul
add
jecxz
rorl
lock
popa
das
int
push
and
sbb
sbbb
jo
cmc
xor
call
mov
adc
test
mov
xlat
cwtl
je
js
add
add
pop
jp
add
mov
mov
and
jne
add
jl
repz
add
in
sbbl
nop
dec
cmp
paddd
ds
dec
mov
jae
loopne
sar
addl
sub
cltd
dec
jl
sbb
adc
or
push
fmul
mov
call
mov
leave
add
pop
sbb
cmc
cwtl
dec
jecxz,pn
dec
popf
sub
hlt
sbb
ss
pushf
and
mov
add
mov
loop
mov
mov
jg
mov
pop
sub
lock
push
in
je
or
sbb
xchg
shll
sbb
push
lods
and
mov
xchg
rolb
add
outsl
or
loopne
std
jle
testb
add
mov
mov
dec
dec
fildl
test
cmp
test
fucomp
add
mov
and
fwait
call
out
pusha
pop
mov
and
jns
cmp
xchg
add
pop
jns
aaa
out
add
nop
mov
sbb
cmpb
jle
pop
fnstcw
mov
shlb
subb
mov
mov
loop
mov
pop
clc
sbb
scas
je
xchg
aas
fwait
out
jnp
sbb
sbb
or
nop
jle
lahf
mov
inc
lret
lcall
sti
fistps
push
daa
xor
pushf
dec
xchg
add
jb
fldl
inc
clc
sbb
add
outsb
les
clc
filds
add
in
stos
lods
xchg
hlt
jle
mov
cmc
ficoms
mov
lock
jno
or
mov
cmpsl
xchg
les
mov
int3
popf
and
shrl
ljmp
sub
xor
or
xorl
mov
filds
call
cmpsl
add
xchg
mov
push
inc
loop
mov
sbb
inc
out
add
pop
fwait
pushf
inc
adc
js
sub
dec
add
scas
jae
mov
mov
bound
push
jno
es
ja
mov
mov
jg
addb
cmp
stos
mov
fidivs
mov
add
daa
lock
in
dec
inc
loopne
add
or
jns
adc
inc
outsb
into
jno
idiv
rorl
and
js
pusha
je
lret
jnp
imul
out
sahf
add
sbb
jne
lret
js
mov
mov
and
pusha
mov
stos
add
pop
fdivrs
and
in
add
or
dec
mov
add
mov
sti
orl
loop
dec
cmp
clc
ljmp
mov
js
fiadds
or
lret
divb
cmpsb
in
pop
mov
inc
into
and
js
mov
aad
mov
ret
divb
test
lcall
add
dec
sbb
nop
xchg
sub
mov
dec
xchg
mov
jnp
sar
pop
add
stos
sbb
cmp
jge
mov
adcl
in
push
or
lods
gs
popa
jg
add
sahf
mov
outsl
sbb
or
and
xstore-rng
cmpsl
add
clc
jb
mov
fs
rolb
add
xchg
xchg
ss
enter
mov
dec
sahf
cltd
mov
cmp
mov
and
inc
pop
add
xchg
mov
mov
insl
mov
mov
add
xchg
and
pop
xor
add
inc
cmc
stos
add
xor
lahf
or
add
ljmp
sbb
sti
jb
mov
mov
xor
sub
push
inc
cld
cwtl
cmp
data16
xchg
pusha
lock
cmpsl
ret
sbb
pusha
scas
stos
cltd
push
stos
or
mov
or
xor
stc
cmpsl
and
loope
add
xchg
in
subb
cmp
sub
add
hlt
inc
push
and
pop
in
mov
add
movsl
jp
pop
mov
add
pop
fildl
stos
pop
add
fmull
inc
push
popa
sub
cmp
int3
cmpsl
cs
add
into
and
mov
adc
cltd
inc
hlt
inc
sbb
ss
pop
dec
out
cmpb
orl
sarb
adc
mov
xor
inc
jnp
rclb
jle
repnz
fidivrl
or
cmp
in
jae
sub
loopne
test
std
lcall
sbb
fistpll
pop
dec
scas
addb
add
add
test
jp
add
addb
sbb
xchg
cmp
hlt
add
mov
movsl
jnp
je
test
add
dec
test
mov
mov
adc
sub
and
lods
dec
aaa
lea
sti
mov
loope
cmc
int
ljmp
cmp
fs
call
ds
push
mov
hlt
push
repz
add
loopne
dec
and
jecxz
sub
loopne
imul
mov
dec
or
fstps
inc
push
loope
dec
dec
mov
add
clc
jne
or
lea
xor
add
orb
into
sahf
repz
push
mov
mov
push
adc
andb
add
xorb
rorb
fsubl
push
das
rcrb
mov
cmovp
add
test
nop
xchg
push
iret
test
add
mov
fsubrp
xor
dec
add
lahf
add
inc
sbb
mov
pop
ficompl
mov
and
dec
pusha
pusha
inc
sub
xor
and
jl
add
test
les
popa
incl
aad
stos
sbb
addb
add
icebp
stc
daa
pusha
lock
inc
adc
test
lcall
adc
push
sarb
xchg
ljmp
cli
jb
out
test
inc
or
dec
dec
sub
fcompl
sbb
cli
cwtl
inc
mov
sar
jnp
jmp
fiaddl
add
mov
fsubrl
inc
sbb
lahf
add
xchg
jl
sub
mov
sub
inc
cli
inc
xor
mov
stos
mov
fwait
dec
mov
mov
test
out
movsb
cmp
sub
jb
mov
je
stos
emms
mov
es
xor
or
inc
or
fsubrs
loop
adc
sbb
mov
rolb
inc
adc
cwtl
loope
mov
sbbb
sbb
sub
mov
in
push
orb
push
enter
insb
mov
scas
push
call
ret
add
mov
inc
and
in
xchg
push
mov
jnp
ja
pusha
out
das
ret
notb
jle
jae
fsubl
sub
add
mov
testb
mov
pop
push
rolb
ret
cmp
xchg
ja
add
xchg
cmpb
jmp
sahf
mov
imul
mov
jle
in
mov
push
dec
rolb
into
mov
shlb
mov
hlt
cmpsb
inc
add
mov
testb
xchg
mov
jb
fldt
roll
rcr
cwtl
pop
push
jg
loopne
call
or
movsb
xchg
dec
and
sub
es
nop
add
jecxz
pop
ret
ja
jb
pusha
adc
inc
pusha
shl
bound
flds
stos
sbb
xor
add
jae
push
repz
push
and
js
loopne
add
fisubrs
mov
xor
mov
into
add
fmuls
mov
add
add
inc
cmc
in
lahf
push
mov
test
cwtl
js
int3
mov
dec
xchg
clc
add
add
mov
sbb
in
xlat
jae
fs
mov
cmp
lock
sbb
popl
xlat
ljmp
sub
cld
sbbb
test
add
inc
loopne
outsl
inc
sbb
jo
bswap
ret
xchg
movsb
leave
jle
adc
adc
pop
and
push
mov
sub
ss
jo
in
stos
cmp
pusha
adcb
xchg
mov
out
mov
int3
push
add
xchg
pop
fwait
and
dec
inc
mov
add
aas
add
aam
add
or
icebp
sbb
xchg
cld
inc
mov
cmp
cli
pop
sarb
add
sub
and
hlt
mov
adc
mov
add
adc
enter
and
push
cli
add
xor
dec
push
jge
jnp
add
sub
pop
mov
idivb
cli
enter
les
out
adc
pop
push
mov
lahf
sub
jnp
add
xchg
aam
lea
repz
xchg
sbb
fisttpll
pop
orb
int
out
call
jne
out
in
loopne
ss
fstl
add
or
addps
xchg
push
popf
jg
out
mov
jnp
sahf
or
push
shl
gs
ds
icebp
xorb
ret
inc
sub
sbb
aad
sbb
jg
cmpsb
xor
push
or
neg
xchg
shl
repnz
ds
pop
adc
test
cmp
add
and
mov
and
addl
ljmp
jb
aad
nop
mov
add
pop
push
pushf
xor
pop
mov
xchg
cld
inc
xchg
out
test
add
negl
orl
mov
inc
roll
pop
pop
lds
ficoml
jle
in
add
call
andb
fsubs
pop
sub
ja
sbb
mov
mov
mov
dec
xchg
xchg
fisubl
shl
inc
push
pop
shl
or
fcmovne
xchg
addb
mov
mov
popl
movsb
jb
flds
jl
sub
pop
loopne
or
add
inc
pusha
repnz
inc
mov
fsubrs
lret
ret
jl
push
mov
nop
cld
rorb
mov
dec
sbb
add
sbb
mov
test
dec
pusha
lret
xor
add
call
scas
xlat
sbb
enter
xchg
lock
and
insl
adc
adc
inc
inc
test
test
xchg
es
jb
je
and
or
sub
pop
test
dec
mov
dec
test
cwtl
dec
cmpsb
andb
rcrl
and
dec
add
sub
mov
mov
dec
icebp
mov
sahf
sbb
pop
int
testb
and
add
sub
dec
fs
lret
aas
add
sub
sbb
pop
mov
loopne
outsb
and
fs
mov
add
in
dec
hlt
pusha
inc
add
dec
or
addb
outsl
movsl
or
jle
add
ja
je
lahf
mov
xor
or
sbb
add
faddl
int
adc
pop
pushf
xor
xor
push
js
and
adc
add
push
xor
adc
out
roll
inc
andb
stos
hlt
pop
mov
pop
stc
dec
push
pop
adc
in
add
inc
xchg
pop
jle
dec
jno
mov
add
cmc
sub
in
mov
adc
mov
aad
add
inc
pop
movsb
and
mov
add
dec
or
nop
ficoml
or
pop
lret
push
jno
ret
dec
pop
xchg
push
inc
movsl
and
xchg
xchg
addb
fdiv
filds
adc
das
mov
add
in
ficompl
push
add
cltd
roll
or
std
loopne
pop
add
jbe
jge
bnd
xor
ljmp
mov
loope
enter
sub
pop
xchg
jns
sbb
adc
out
sbb
sbb
inc
add
dec
push
mov
movsl
and
or
pushf
into
mov
and
add
push
dec
ljmp
ret
lret
xchg
lock
lock
add
xchg
insl
fildl
jp
mov
loope
aad
lock
mov
pop
add
into
clc
push
int
out
test
mov
dec
nop
rcrb
xor
add
out
jecxz
add
mov
sub
fmull
not
inc
and
add
adc
xor
in
mov
mov
pop
je,pt
add
adc
and
dec
mov
scas
stc
in
jns
sbb
jp
or
mov
je
loopne,pt
nop
cmp
lret
sub
push
shlb
inc
add
cwtl
jp
dec
push
clc
mov
and
xor
lcall
pop
dec
out
aam
xchg
sarl
push
and
pop
inc
sarb
pushf
sub
inc
out
jge
jae
das
push
add
jl
sub
inc
call
pop
lock
pop
cmc
fstpt
ret
add
push
inc
cli
mov
add
outsb
sub
in
add
sub
add
and
dec
add
push
jo
mov
add
add
add
xor
cmc
nop
pop
adc
cli
add
add
cs
dec
leave
in
add
lahf
js
sub
cmp
add
rolb
add
mov
xchg
jmp
jl
push
aam
cmp
add
mov
orl
jo
lcall
nop
test
dec
lret
add
sbb
sbb
stc
add
mov
xor
js
xchg
xor
add
nop
cmp
cmc
push
add
xor
sbb
mov
jb
and
mov
icebp
loope
pusha
fdivrl
cmp
lock
movsl
lret
and
inc
sarl
inc
jmp
add
add
adc
sub
popf
pusha
or
outsl
addb
bound
xorl
xor
movaps
popa
pusha
test
inc
movsl
lret
add
dec
leave
adc
int3
pop
inc
xor
adc
add
bnd
push
add
add
add
jp
call
fnstcw
shrl
xchg
mov
adc
add
dec
jo
pop
pop
mov
js
adc
pop
xchg
bound
xor
xorb
pop
push
fistl
xchg
scas
mov
dec
jp
xchg
repz
leave
in
addl
in
out
push
ret
or
cmpsb
in
test
mov
lods
push
pop
cmp
jae
sahf
xchg
out
out
mov
mov
add
ret
dec
insl
fbstp
sbb
mov
loopne
mov
and
stc
add
movsl
pushf
mov
mov
rolb
push
movsb
lds
mov
mov
inc
icebp
push
inc
xchg
inc
inc
scas
dec
lea
adc
outsl
in
sbb
adc
pop
push
fs
or
sub
cwtl
push
adc
add
dec
xor
sti
aaa
adc
cmp
sbb
inc
push
rorb
jp
push
xchg
sbb
inc
xorl
mov
pop
jp
test
jl
cmp
add
fistpll
jb
xchg
xchg
sbb
xor
addl
dec
mov
cmpsb
pop
add
rorb
jns
sbb
push
add
sti
fdivr
lcall
sub
push
push
mov
rorb
sbb
adc
or
adc
std
add
add
dec
jne
jno
jl
xchg
js
mov
cmpb
push
inc
mov
add
mov
sub
mov
movsl
adc
aam
shlb
pusha
icebp
jle
push
lcall
and
call
imul
mov
push
in
test
popa
jbe
cli
mov
popf
insb
jl
daa
lock
std
sbb
cmpsl
cltd
scas
mov
cmpsb
cmp
add
mov
roll
inc
hlt
mov
les
test
push
int3
in
add
sbb
sub
jns
es
push
inc
out
je
mov
cli
jp
mov
cld
aad
mov
add
mov
cmp
hlt
ss
adc
add
flds
imul
jmp
sub
bound
fisttps
inc
cmp
jae
addr16
push
cmp
jecxz
sub
jo
notb
sti
sbb
cmp
dec
pushf
shlb
mov
inc
scas
add
mov
shlb
call
jge
out
push
test
je
add
dec
mov
cli
pusha
sbb
loop
jecxz
and
add
inc
jg,pt
xor
xchg
mov
add
aas
mov
loop
ds
sbb
add
mov
filds
shrb
cli
pop
pop
jno
xchg
call
mov
or
setnp
xchg
sti
add
mov
cmpsb
sbb
push
ret
test
out
sbb
fidivrs
mov
daa
rcrl
push
dec
dec
sahf
dec
add
jnp
add
ret
add
sub
pop
mov
add
ret
movsl
pusha
fimull
ficomps
and
push
push
mov
adc
loopne
xor
xchg
jo
cli
mov
aaa
xor
lcall
rorl
stc
aas
or
and
cld
jl
out
cmpsl
add
call
stos
add
lods
inc
push
jp
add
add
inc
in
xor
mov
add
je
xchg
shl
mov
cmpsl
or
inc
lock
xchg
push
sbb
mov
sbb
pop
mov
imul
fwait
pop
fnstcw
push
add
outsl
lret
dec
jno
add
or
push
add
nop
sarl
mov
mov
sub
fildl
inc
push
jne
add
addr16
xchg
xor
sbb
pushf
dec
add
push
mov
sahf
sub
incb
push
jl
cmp
sbb
jg
fsubrs
lods
out
pop
inc
or
add
xorl
add
mov
dec
test
inc
mov
in
sbb
add
mov
xchg
dec
lods
add
mov
adc
xor
std
push
movsl
mov
lds
jmp
cwtl
dec
ljmp
xchg
es
mov
mov
xor
jns
into
adc
fstpt
pop
test
mov
push
mov
aaa
loop
add
adc
mov
adc
imul
loop
shlb
mov
icebp
push
cmp
test
add
out
stos
jne
mov
add
imul
sub
or
lods
into
add
pusha
cmpsb
gs
and
and
outsb
fs
addr16
and
pushf
test
aas
xor
test
push
xorl
xor
sbb
fwait
les
push
mov
lds
xchg
in
out
mov
test
pop
add
ljmp
dec
xchg
or
sub
cwtl
xor
and
in
add
popf
test
jge
in
ss
xor
fldl
pop
sbb
mov
mov
or
mov
ss
add
fstpl
inc
repnz
imul
add
hlt
out
mov
pusha
sub
loop
jg
out
jo
adc
add
fnstcw
pop
pop
inc
nop
mov
pusha
in
add
jecxz
imul
xor
out
adcl
push
mov
jo
push
xorb
xor
xor
add
cmpsb
xchg
shrb
cmp
inc
pop
adcb
sub
nop
push
lds
popa
jne
rclb
push
cli
xor
test
jo
mov
icebp
jmp
and
add
clc
stc
or
fwait
xchg
pop
jo
jnp
jecxz
adc
or
ret
ret
icebp
pop
icebp
dec
cld
inc
decb
movsb
xlat
sub
xor
xchg
lds
cmp
mov
leave
jnp
or
mov
push
sbb
dec
shl
hlt
rolb
js
mov
jbe
dec
scas
jl
std
inc
pop
xchg
and
imulb
dec
adc
in
add
sbb
add
test
loope
lock
cltd
enter
inc
pop
aas
out
mov
leave
mov
out
or
sti
xor
add
out
mov
cmp
das
lret
mov
pop
insl
mov
jp
dec
add
pop
push
mov
fwait
js
in
mov
mov
pusha
adc
add
inc
pop
cmp
jns
in
add
jle
mov
mov
les
enter
jo
inc
dec
add
hlt
cwtl
pusha
pop
repz
bound
cmp
loope
or
sub
lock
mov
adcb
enter
das
or
dec
xor
or
mov
sub
test
lret
pushl
mov
nop
out
sbb
lea
test
add
sub
xchg
adc
add
push
sbbb
dec
orb
sbb
add
sbb
cmc
adc
addl
add
int3
mov
add
jns
mov
mov
cs
outsb
loope
movsl
add
les
lock
lret
fstp
js
add
call
dec
clc
add
adc
lock
mov
mov
ljmp
or
adc
and
push
mov
or
arpl
lods
xchg
roll
jg
add
std
in
add
cmpsb
lea
or
add
das
and
fdivrs
mov
outsb
adc
inc
add
pop
test
aas
mov
es
add
push
mov
mov
sbb
les
js
sub
mov
pop
inc
fwait
stc
push
add
push
outsb
push
dec
insb
clc
add
mov
fstpt
cs
or
and
jge
movd
adcl
pop
lock
push
add
mov
stos
add
xor
sbb
cmp
push
or
mov
sbb
jns
pusha
dec
pusha
call
fldl
hlt
lret
add
push
loopne
push
inc
fwait
in
inc
pop
lds
or
jne
sti
mov
sarb
lahf
xor
pushf
jb
in
push
int3
add
enter
ficoms
pusha
sbb
nop
mov
loopne
mov
mov
sti
cmp
dec
cmpsb
loopne
cs
cmp
add
push
in
xchg
stc
clc
subl
cmp
or
mov
add
lcall
sub
sbb
jle
es
adcb
les
xor
add
cltd
ds
cmp
sub
lahf
push
xor
mov
pop
xor
add
ret
rol
or
mov
xchg
addb
lret
popf
loopne
addl
dec
cmc
jecxz
ds
arpl
mov
mov
ret
add
jge
sbb
mov
iret
push
pushl
movsl
add
cmc
lcall
cwtl
xchg
outsb
out
ljmp
out
hlt
add
jmp
add
mov
sub
push
xchg
sti
dec
xchg
mov
pusha
push
jle
push
daa
es
pusha
add
out
mov
cmp
fmull
xchg
inc
jbe
sti
or
call
mov
pop
xchg
cmp
mov
add
ret
add
dec
out
insl
stos
divb
dec
addl
mov
cmp
mov
cmp
lock
es
popa
cmp
add
in
pop
aam
sbb
leave
inc
sbb
lods
xchg
xor
pop
add
fwait
push
ud2
insb
ret
xchg
fnstcw
dec
repnz
add
mulb
les
mov
sbb
jns
inc
rclb
ss
cmp
mov
and
int3
mov
mov
and
lret
dec
setl
xchg
lods
sub
dec
int3
add
hlt
xlat
lahf
fisubl
sub
mov
pop
dec
lock
pop
scas
and
ds
sub
dec
cmp
roll
sub
jge
jle
add
dec
push
cmp
icebp
push
shlb
shlb
adc
pop
adc
cmpb
pop
dec
pop
ss
adc
jecxz
pop
adc
cmp
push
sbb
stc
ljmp
mov
das
add
aaa
test
adc
mov
push
rolb
jl
into
aam
add
mov
mov
cmpsl
add
ret
in
jg
add
imul
add
int
iret
clc
mov
add
mov
push
mov
mov
sub
loope
add
add
xlat
dec
repnz
add
sub
loopne
fcoms
push
cmp
int3
pop
aaa
inc
into
testb
insb
out
ficoms
sbb
jmp
add
cmp
mov
inc
std
add
pop
adc
add
fiadds
sahf
add
cmp
movsb
add
enter
jg
rorb
mov
lret
inc
jae
xchg
aam
cmp
movsb
addl
std
ja
push
inc
xorl
fcoms
inc
mov
scas
pop
in
sbb
popa
add
mov
sti
mov
addl
mov
dec
sub
jbe
jl
xlat
xor
add
rorb
fdivrs
add
and
in
ja
mov
mull
test
stos
xor
pop
jge
pop
sbb
jno
test
cld
push
inc
div
out
push
das
sbb
jns
pop
loope
mov
jge
or
lods
jg
push
adcb
mov
shr
sbb
mov
pop
test
mov
sub
sub
adc
shll
add
outsl
adc
cs
fstpt
add
aad
jo
and
mov
or
call
push
leave
mov
mov
mov
lods
add
out
add
aas
adc
mov
mov
dec
mov
pop
add
mov
cli
mov
addl
adc
sub
loopne
orb
leave
decb
dec
pusha
jmp
aam
mov
fdivrl
add
and
or
xor
mov
mov
cs
jmp
xchg
push
sbb
adc
mov
dec
dec
xor
mov
add
andb
add
cmp
and
cld
rclb
les
xchg
bound
and
mov
cs
add
push
push
mov
subb
or
adc
sub
push
ret
adc
push
jbe
xchg
push
test
xchg
add
das
dec
aas
mov
cli
pop
push
sbb
cs
add
push
inc
inc
mov
shlb
sub
sbb
add
or
insl
fdivl
clc
jbe
repz
test
cmp
scas
ja
cli
add
daa
loope
jno
stc
shld
test
add
sub
cmp
add
lahf
xchg
std
pushf
jns
cmp
pop
fbld
and
mov
xor
dec
add
cmp
xchg
jmp
push
add
movsl
mov
fwait
pop
jge
jb
rcr
sbb
in
mov
mov
xchg
cwtl
cmpsl
aas
mov
mov
mov
filds
aam
imull
lret
push
add
xchg
ds
ret
push
add
cli
inc
sarb
iret
popl
adc
test
sub
jecxz
and
nop
xlat
push
dec
icebp
repz
cmp
and
sbb
aad
arpl
cwtl
cmpsb
rol
lods
jmp
push
loopne
lret
outsb
fstpt
mov
and
jb
or
jmp
push
sub
addb
sub
adc
xor
loopne
jns
lea
push
mov
mov
call
xor
and
aas
mulb
add
push
jo
or
mov
xor
push
lds
aam
lock
enter
pop
dec
push
mov
and
sbb
popa
push
sub
and
cmpl
stc
leave
push
andb
add
adc
push
cmpsl
lret
or
jg
movsb
push
jp
add
sbb
stos
xor
add
pop
out
clc
sbb
xchg
insb
lret
out
pop
nop
xchg
sbb
add
clc
stos
xor
rolb
push
jp
inc
dec
jo
repz
test
out
push
jl
add
mov
adc
popa
js
xchg
enter
out
sti
jmp
add
mov
sbb
jp
rcrb
pop
xor
or
sub
aaa
or
push
lea
push
and
dec
cmc
mov
pop
fcompl
fwait
add
xor
scas
test
int
inc
loopne
add
loopne
leave
out
xchg
sbb
shll
xor
mov
mov
nop
sub
push
mov
mov
inc
rclb
adc
dec
sbb
mov
scas
enter
outsb
pop
leave
aaa
andb
rcrb
rdtsc
div
push
mov
movsb
into
ljmp
add
push
pop
inc
orb
xchg
dec
add
insl
repnz
pop
add
push
and
lea
xchg
mov
push
add
jo
dec
lds
pop
cmp
test
lret
mov
jb
and
add
pushl
icebp
push
pusha
adc
sub
push
movsb
xchg
inc
les
and
in
add
das
xchg
shlb
add
aad
mov
mov
xor
mov
xchg
mov
bound
push
mull
das
mov
xchg
add
pop
inc
and
call
aad
les
add
dec
mov
add
fsubl
pop
xchg
in
in
dec
std
xchg
mov
add
push
xor
dec
push
mov
add
fadd
imul
adc
adc
shr
roll
pop
jno
nop
ljmp
outsl
in
scas
and
push
rol
or
lds
faddl
mov
cmp
stos
adc
inc
add
loop
dec
addb
pop
aas
sbb
add
push
xor
push
retw
aaa
aas
pop
push
aas
jmp
popa
pop
adc
inc
mov
stos
fsubrl
negb
lret
les
add
push
or
ja
or
add
add
lods
mov
cs
fiadds
stc
sub
jno
daa
push
scas
roll
loopne
int3
adcl
imul
and
call
or
clc
sbb
mov
cmpsl
jmp
dec
xor
subl
or
sbb
cld
and
and
inc
pop
and
jnp
adc
mov
xchg
je
mov
roll
pop
jns
lcall
mov
mov
xchg
divb
jne
rclb
or
xchg
xchg
aam
movsl
sub
cmp
int3
mov
cwtl
jg,pn
pop
sahf
jg
and
pop
xor
cmp
mov
add
and
loop
add
pop
pushf
adc
sub
clc
sub
add
cld
mov
add
or
adc
and
idiv
add
inc
sub
adc
lret
adc
cmp
pop
sub
cmp
je
pop
mov
inc
add
repnz
movsl
jns
fs
cld
mov
js
aaa
cmc
xorb
push
add
add
sbb
xor
sbb
add
pop
mov
mov
or
test
sub
dec
push
movsl
or
push
jg
ret
push
stos
repz
aam
xorb
negl
xchg
fcmove
inc
xor
and
pop
loopne
and
lods
jmp
orl
adc
cmp
adc
inc
pop
fnstenv
sub
pop
push
mov
pushf
enter
xor
pop
rolb
mov
sub
mov
aad
leave
rcl
das
stos
in
add
inc
xor
add
mov
pop
jns
adc
stc
in
gs
jl
and
add
lcall
xor
xor
call
test
xchg
sti
hlt
cmp
mov
and
pusha
sbb
add
sub
jmp
pop
push
add
mov
xchg
inc
sbb
pop
dec
and
les
push
repnz
mov
xchg
lret
loopne
shl
dec
pop
test
lea
aas
into
add
mov
mov
mov
jne
add
in
mov
inc
pusha
mov
pushf
xchg
inc
push
cmp
hlt
jo
inc
daa
int3
mov
mov
or
jg
ds
jbe
fmull
lahf
dec
pop
inc
adc
imul
push
push
repnz
xchg
sarb
out
fmuls
aad
pusha
cmovnp
sub
xchg
mov
fdivrl
add
fistpl
mov
loope
sbb
pop
in
jle
mov
and
out
cmc
push
xchg
adc
dec
xchg
inc
enter
or
pushf
arpl
test
mov
out
outsl
outsb
sub
rol
es
mov
add
inc
mov
and
mov
in
push
out
adc
sub
xlat
push
in
test
add
push
les
sub
adc
addb
mov
sbb
pop
je
fmul
sbb
ds
add
std
push
leave
in
push
xchg
xor
pop
fsubr
sti
mov
jmp
stc
push
lock
adc
add
dec
je
add
adc
cmp
lock
movsb
push
dec
lods
incl
adc
aas
cmp
popl
sbb
mov
in
sub
ja
and
lds
mov
cli
int3
push
ret
cmp
int
cwtl
push
aas
xchg
add
iret
call
push
add
fs
lret
repz
mov
sub
xor
data16
cwtl
leave
lods
and
jbe
push
mov
mov
test
incb
fists
sbb
push
cmpl
mov
add
imul
add
test
repnz
adc
or
sub
clc
into
inc
mov
cmp
pop
dec
push
add
jo
or
push
mov
or
sbb
push
je
cmp
xlat
add
sub
add
push
ds
xor
jno
sub
cmp
push
rcll
sbbb
cmp
inc
hlt
data16
pop
nop
add
fimuls
jp
pop
filds
cltd
in
xorb
ljmp
mov
call
loop
enter
pop
sub
add
imul
cwtl
xchg
test
xchg
in
clc
pop
push
mov
add
jnp
in
pop
push
pop
or
jo
sub
ror
add
cmp
sub
mov
xorb
int
add
scas
out
dec
pop
sahf
add
rcl
jg
cli
lock
lods
jne
mov
or
jl
xchg
call
jmp
add
add
mov
jbe
rcrl
mov
xchg
adc
mov
nop
and
loope
imul
xlat
add
add
mov
add
lret
mov
jle
sub
cld
cmp
test
jmp
dec
mov
loop
mov
adc
sarl
dec
add
cmp
and
shlb
ds
sbb
rcrb
jg
into
xor
mov
shlb
adc
mov
and
fisubrl
sahf
push
mov
sub
int3
cmp
mov
popa
lea
mov
aam
repz
jle
inc
test
out
stos
jne
adc
ljmp
add
and
inc
daa
retw
add
loopne
out
aam
call
clc
inc
arpl
fst
inc
jle
jl
add
aaa
cld
movhps
ret
int3
insb
inc
sub
add
and
mov
pop
or
mov
jno
das
inc
subb
dec
add
mov
aaa
add
aas
je
popf
adc
add
in
xchg
push
sbb
int3
mov
xor
xor
cmc
int
or
stc
push
bound
sbb
push
hlt
js
mov
inc
sub
movsl
add
pushf
inc
mov
inc
mov
idivl
js
cmpsl
sub
xchg
push
les
and
sbb
cmp
stos
mov
rcll
imul
jg
sbb
jmp
add
push
shrb
push
adc
xchg
scas
in
pop
loopne
fdivrs
cmp
add
xchg
call
fstl
inc
xchg
push
es
push
add
push
add
sarb
cli
jno
pop
or
cmpsl
pop
and
add
jae
xchg
pop
test
adcl
mov
orb
popf
and
iret
cmp
rcll
and
adc
unpcklps
pop
mov
clc
and
and
bound
out
dec
shlb
xchg
sbb
adc
push
push
lods
loop
mov
and
or
add
and
inc
int3
sbb
aad
rol
xor
lret
shlb
add
pushf
mov
cmp
sub
orb
js
rol
jns
ds
inc
testl
or
jne,pt
add
and
popa
jecxz
xlat
aam
fdivs
stos
xchg
inc
stc
into
sarb
sub
mov
push
xor
cmp
out
xchg
pop
and
rcrl
jecxz
jge
cmp
rclb
push
cmp
loopne
add
insl
and
imul
pop
jns
and
je
add
add
push
mov
sub
push
fmuls
shrb
adc
push
add
push
jnp
jg
pusha
adc
sub
outsb
inc
pop
aam
pusha
movsl
movsb
addr16
shll
add
mov
fmull
jo
add
jae
sub
call
outsl
jecxz
add
mov
in
add
jae
push
mov
mov
or
cmp
inc
dec
xchg
stos
gs
ljmp
adc
xor
movsb
lret
pop
add
add
test
jb
dec
inc
int3
inc
add
add
or
shr
jbe
add
add
lea
add
jno
dec
mov
add
mov
out
add
push
dec
rorb
ss
mov
mov
cs
inc
sub
mov
pop
in
push
and
stos
mov
dec
cmp
mov
cmp
or
jecxz
lock
add
mov
push
dec
jle
pushf
loopne
add
push
test
imul
data16
jb
xor
xor
and
add
mov
inc
mull
jl
and
add
ja
or
jns
xor
stos
add
subl
loope
fcoms
aaa
ret
add
push
das
test
ret
jo
ja
cld
pop
inc
out
mov
push
pushl
pushf
call
repz
pop
or
movsb
ja
cmp
add
pop
out
add
popa
push
daa
push
or
xor
or
add
jmp
sub
add
rolb
lods
bt
add
mov
rolb
mov
jne
jb
ljmp
pushw
inc
fidivrl
stc
cli
repz
loopne
je
inc
add
enter
shrb
push
jo
and
test
stc
dec
imul
push
lods
leave
adc
test
sti
lock
adc
cmp
inc
fcom
xchg
lods
jge
rcrb
jb
add
xchg
dec
mov
mov
add
push
mov
sbb
mov
mov
sbb
mov
xchg
cmc
orb
sti
shlb
sbb
mov
mov
mov
and
pop
addb
jg
cmp
mov
add
popf
dec
push
push
shl
ret
in
adc
or
lds
loope
out
rorb
cwtl
sbb
ja
push
ljmp
add
or
mov
pop
mov
mov
rclb
out
data16
push
add
ja
out
sub
add
fimuls
jbe
or
js
or
clc
ror
popa
outsb
add
inc
add
sub
jo
andb
add
jnp
dec
pop
pusha
or
sbb
pop
aas
cmp
add
lret
sub
jo
dec
ss
add
jg
dec
pop
movb
xchg
inc
out
ret
in
mov
outsl
cmc
rcrl
add
mov
cmpb
pop
inc
xchg
sarb
outsl
rorl
cmp
xor
pop
in
push
lcall
data16
mov
pop
frstpm(287
or
add
inc
add
add
jne
add
dec
or
or
push
rorb
dec
pop
les
sbb
movsb
rol
cmp
adc
dec
jmp
or
xchg
and
and
pop
add
dec
and
cmp
pop
fwait
es
leave
inc
push
push
negb
sahf
loopne
lods
add
adc
clc
xchg
push
mov
lods
sbb
mov
fdivs
pop
je
cli
add
dec
mov
nop
loopne
mov
cli
pop
movsl
adc
sub
fs
aas
mov
pop
rcll
jb
add
pushf
rclb
dec
outsl
cwtl
scas
xor
test
dec
inc
orb
out
pop
mov
mov
cmp
add
movsl
faddl
pop
das
jns
push
fstpt
movb
sbb
mov
sbb
lds
adc
xor
mov
sbb
outsb
mov
push
dec
pop
addl
sbb
inc
hlt
movsb
pop
jg
sub
dec
inc
out
stc
jbe
sbb
fs
faddl
mov
sbb
or
stc
jns
cld
add
clc
sbb
jnp
push
cmp
or
add
mov
fstl
es
pop
dec
les
pushf
jge
add
mov
cld
add
fs
xchg
xor
and
rolb
pop
movsl
cmp
stos
mov
loopne
les
add
sub
sub
out
cmpsl
or
inc
enter
stos
cmp
sub
mov
outsl
icebp
test
outsb
cs
sahf
add
pop
ret
sub
add
mov
idivl
inc
mov
xchg
or
lahf
add
or
enter
clc
out
stos
sub
jns
pop
xor
push
or
mov
inc
push
push
sub
add
push
mov
and
adc
and
adc
or
lock
movsb
sarl
out
movsl
rol
jb
rolb
loopne
xor
fsubs
pop
and
add
imul
cmp
inc
lods
out
pop
out
jp
lock
adc
shlb
vpcomw
mov
mov
sbb
outsl
pushf
mov
pop
adc
sub
lock
push
push
dec
mov
sbb
sub
mov
cltd
daa
mov
add
jecxz
clc
roll
jl
insl
sbb
add
pop
out
or
add
cmp
add
jl
int3
jbe
das
in
add
cmp
call
add
fsqrt
pop
xchg
std
xor
dec
movl
rcrl
fadds
sub
call
mov
push
outsl
adc
or
pop
mov
enter
add
sub
mov
shll
push
mov
hlt
push
push
fnstenv
stc
mov
cmp
mov
sbb
add
inc
jecxz
add
xor
inc
repz
lret
dec
and
mov
fs
xor
mulb
cwtl
pushl
push
scas
xchg
adc
pop
or
lock
mov
xor
mov
dec
xchg
mov
fisubrl
rclb
or
loop
sub
jmp
pop
aam
sbb
fsubp
inc
xchg
popa
stos
rorb
cmp
add
add
jbe
push
sti
jnp
mov
push
push
xchg
jbe
add
cmc
mov
test
mov
jge
mov
mov
pop
loopne
and
stc
pop
ret
pop
inc
popa
add
insb
xchg
je
xchg
or
mov
xor
jae
mov
add
cmp
sub
mov
shl
das
arpl
ds
pushf
cmp
movl
dec
loopne
sbb
fisubl
pop
fistpl
add
adc
jbe
add
das
add
dec
addps
and
add
fnsave
pop
aam
dec
repnz
xchg
mov
adc
push
and
jnp
add
sahf
outsb
arpl
mov
orl
mov
sub
mov
fadds
scas
add
cmp
inc
mov
pop
mov
push
cwtl
lock
push
mov
test
out
or
into
mov
sub
lock
jae
and
add
cmc
push
add
and
push
add
xor
fs
jle
imul
add
xchg
dec
repz
adcl
mov
adc
xchg
add
mov
jb
adc
add
lret
jle
add
je
fstl
mov
xchg
add
add
fmuls
inc
adc
jae
jb
or
push
jle
inc
cmp
add
shl
mov
sub
add
lahf
inc
hlt
dec
cmp
push
orb
and
sub
pop
icebp
cmpsl
mov
sbb
jle
loop
add
loop
clc
add
andb
or
xor
add
sbb
cli
rolb
pusha
jne
test
adc
add
loopne
inc
mov
stos
enter
mov
xchg
sub
xchg
fwait
mov
fdiv
inc
jb
pop
jp
mov
loope
fldt
outsb
pusha
xor
inc
es
add
jo
les
push
add
sub
mov
jmp
addl
addb
je
icebp
sbb
push
ljmp
add
xor
jg
in
add
iret
stc
mov
outsb
mov
mov
mov
rcrb
subl
add
fimuls
jno
ret
addl
mov
loop
test
add
lahf
xor
mov
adc
add
aad
out
ja
repz
push
inc
sbb
cmp
subb
dec
or
test
repnz
dec
push
aaa
sbb
add
cmpsl
sub
or
push
gs
fwait
mull
dec
fiaddl
push
lret
dec
mov
and
and
sub
icebp
jnp
dec
nop
mov
add
xchg
fsubrl
push
mov
jne
dec
add
lods
push
mov
add
into
or
mov
arpl
add
cmpsl
sbb
jmp
ljmp
mov
das
push
add
inc
sbb
xorb
xor
dec
sbb
stc
hlt
xor
push
test
loope
mov
out
test
insb
and
pusha
leave
add
std
push
sub
mov
xchg
add
fwait
jno
out
pop
bound
sub
cld
mov
cli
stc
and
xchg
add
aaa
push
ror
test
add
xor
mov
jmp
xchg
cmp
testl
and
push
sbb
mov
and
scas
out
stc
cld
sbb
pushf
pop
jbe
mov
call
insb
pop
sbb
mov
mov
imul
in
movsb
popf
lds
pop
jo
add
mov
mov
subb
push
sub
push
insb
scas
jl
arpl
jne
lea
add
out
add
leave
pop
pushf
sbb
mov
xor
inc
pop
stc
and
test
mov
push
lods
xor
lahf
add
sahf
cmp
sbb
sbb
mov
mov
xor
das
ds
sub
loope
lock
xchg
sbb
push
add
sub
cmp
int3
repz
adc
xchg
add
es
mov
add
fnsave
shr
inc
or
sbb
std
add
rorl
nop
add
ret
xor
js
shlb
dec
int3
jl
pop
adc
mov
add
or
sbb
xchg
loope
shlb
and
test
cmp
cmp
sbb
or
pop
add
repz
xchg
shrl
sbb
or
jl
add
test
pushl
push
mov
push
int
push
cmp
mov
shrl
iret
push
cmp
pop
and
mov
lods
aam
or
out
outsb
adc
mov
hlt
or
dec
add
data16
pop
and
sub
sbb
pop
cmpb
jge
sbb
dec
lret
add
outsb
pusha
mov
sub
aas
negb
mov
sub
loop
cmp
add
sub
lods
pusha
es
adc
cltd
jl
cmpsl
mov
inc
call
mov
pop
int
dec
mov
or
add
mov
in
pusha
aaa
xor
loope
popf
rcl
popl
test
adc
movsl
pushf
aas
fdivr
add
xor
ret
fistpl
cmp
out
lods
add
push
test
repnz
imul
mov
loope
add
jp,pt
es
adc
lods
inc
add
out
adc
lahf
add
xor
adc
xchg
leave
xchg
add
cmp
sar
sbb
into
ret
cld
bswap
out
fiaddl
fistl
push
iret
pop
sub
xorb
or
in
push
push
inc
push
xchg
and
add
shrb
test
adc
mov
mov
dec
in
lods
test
lock
adc
adc
call
adc
inc
cld
cmpsb
sbb
leave
cwtl
addb
and
cmp
std
add
or
adc
add
shll
sub
sbb
cld
jns
les
add
mov
movhps
divb
adc
ljmp
imul
pusha
sub
mul
push
rorb
shlb
pop
adc
pop
mov
adc
push
mov
in
inc
pushf
add
ja
inc
push
inc
test
dec
insl
cmp
mov
dec
add
sbb
insb
jmp
mov
and
inc
sub
sbb
rclb
sahf
inc
fldl
lock
cmp
mov
xchg
out
pop
insl
lock
dec
add
add
stos
lds
ret
shlb
mov
xchg
xor
icebp
into
add
aaa
cmp
int
and
repnz
je
lods
scas
adc
mov
outsb
mov
in
cmp
js
adc
arpl
adc
push
adc
mov
std
mov
jb
or
int3
aas
cwtl
aad
jecxz
fadds
pushf
add
inc
xor
xchg
in
jmp
in
push
icebp
cli
imul
sub
jns
hlt
insb
push
fisubs
idivl
out
cmp
push
push
sub
jns
and
in
ljmp
lods
sbb
xchg
push
jns
test
test
adc
popf
xchg
pusha
jo
insl
dec
jmp
in
dec
add
xchg
popa
xchg
inc
out
push
pushf
in
jo
repz
pop
aas
call
push
popa
test
push
inc
sub
jmp
add
stos
mov
mov
cmp
and
test
loopne,pn
xor
cmp
rcrb
daa
inc
das
test
ffree
sub
pop
jbe
or
inc
xor
cmpsl
lock
fldt
add
addr16
push
fisubl
add
pop
sub
add
inc
mov
add
pop
dec
roll
in
jno
rcr
add
fstpl
or
inc
jmp
xchg
add
shrb
dec
mov
dec
xor
and
loopne
ret
in
jmp
jg
insb
rcr
fwait
sub
sbb
inc
add
and
xor
or
cmc
adc
xor
mov
adc
rorb
addl
push
call
mov
aaa
pop
rorb
out
ret
fists
scas
push
add
jp
jl
pop
mov
popf
jge
push
and
or
lods
push
test
loope
push
inc
add
daa
pop
mov
mov
jbe
vmwrite
jno
loopne
add
cmpsb
lret
adc
jb
arpl
dec
push
orb
add
rolb
and
add
in
inc
dec
sbb
mov
mov
pop
aad
sbb
mov
clc
add
into
push
add
pop
out
inc
insb
nop
test
pop
mov
aam
mov
mov
lcall
jno
push
inc
scas
mov
icebp
pushl
xor
adc
sub
es
inc
add
inc
stc
mov
sbb
fwait
cmp
add
jns
pop
sbb
dec
mov
inc
lock
and
dec
divb
ret
iret
mov
or
and
pop
or
stos
adc
fs
pop
fstps
cld
hlt
mov
in
and
push
adc
leave
aaa
bound
mov
pop
mov
mov
add
fs
mov
adc
adc
inc
mov
fsubs
mov
shlb
popf
outsl
add
add
das
out
jnp
dec
or
sub
cmp
add
call
leave
and
sbb
popa
or
add
add
mov
sub
aad
in
fldenv
push
cmpsb
add
pusha
add
adc
add
push
mov
xor
add
arpl
add
xor
subb
dec
inc
or
mov
cwtl
sti
dec
nop
add
lahf
pop
loopne
mov
insl
fnsave
movsl
shll
push
cmpsl
add
dec
cmp
cmp
sbb
xchg
pop
inc
pushf
les
leave
dec
xchg
notb
mov
pop
add
pop
ljmp
aam
add
sbb
and
mov
cmpsl
int
push
leave
lahf
repz
jecxz
xchg
add
mov
push
ret
add
and
notb
inc
push
jo
cld
add
mov
mov
hlt
test
add
inc
add
adc
hlt
insl
push
sub
push
xor
mov
stc
pop
out
add
xor
fbld
daa
jge
clc
mov
mov
push
mov
sbb
repnz
jae
shrl
jb
jnp
dec
mov
clc
movsb
add
adc
xchg
shl
dec
nop
sub
push
dec
mov
add
lcall
push
inc
test
stos
test
and
cwtl
data16
inc
fsub
sub
add
mov
loopne
sti
lret
out
xchg
imul
into
jle
idivb
pop
sub
mov
pop
push
clc
fdivr
inc
add
popa
pop
imul
xchg
jg
andb
aad
jbe
mov
pop
mov
ret
sbb
inc
pop
movsl
incb
jne
xor
mov
repnz
cltd
insl
bound
add
jae
fiadds
pop
adc
jb
add
adc
sti
sub
ret
push
xor
fistpll
dec
and
add
inc
cmp
jnp
out
imul
test
andb
mov
stos
inc
mov
cmpl
add
add
push
cmp
pop
pop
cli
into
add
mov
movsl
lret
push
ljmp
sub
das
push
add
and
inc
scas
add
xchg
rcrl
add
insb
cmp
mov
mov
adc
mov
or
xchg
xchg
dec
mov
out
jo
sbb
sbb
cmp
dec
xorps
sub
mov
insl
sbb
out
in
repnz
mov
or
addb
and
fwait
xchg
add
sbb
pushf
mov
add
and
cmp
test
popf
fs
pushf
lods
scas
dec
or
and
leave
nopl
iret
pcmpeqb
push
pop
loopne
sub
add
js
add
jns
sbb
add
cmp
add
add
cld
ss
lods
push
outsb
and
and
sti
cmp
outsl
fwait
outsb
out
mov
add
mov
mov
les
sbb
test
addl
sub
push
das
mov
pop
sbbb
jb
inc
outsb
cld
leave
pop
and
xor
std
add
faddl
clc
push
aas
hlt
sbb
jae
or
sti
dec
lds
mov
or
fdivrs
push
add
pop
incl
mov
cld
push
sub
lret
sbb
les
call
jb
in
add
movsl
nop
xorl
push
test
aaa
dec
loope
add
dec
pop
aad
std
imul
cltd
or
jle
xor
nop
push
pop
mov
mov
sbb
filds
gs
insl
adc
ja
or
lods
mov
inc
pop
pop
add
lahf
mov
cld
mov
sub
xchg
movsb
mov
sbbb
sbb
nop
inc
nop
add
mov
fcoml
loopne
out
add
je
push
add
inc
lods
and
add
xchg
adc
dec
rorb
and
popf
imul
cmc
call
dec
dec
movsb
add
lahf
jp
push
cld
add
jmp
push
xchg
bnd
push
xor
sbb
or
int
mov
pop
lcall
xor
pop
jmp
pusha
mov
mov
xor
call
sub
and
or
mov
sbb
inc
push
and
mov
mov
cld
cmp
mov
pop
cmpb
pop
es
or
fwait
dec
inc
loopne
inc
inc
push
mov
call
cld
out
scas
fisttpl
adc
mov
mov
ret
pushf
mov
xlat
jge
sbb
pop
adc
add
mov
push
and
pinsrw
jmp
sub
fisttps
shrl
das
repnz
add
or
add
adc
nop
sbb
sub
push
xlat
jae
cld
stos
sub
pusha
mov
fimull
lret
repz
add
lret
push
add
iret
pop
add
add
std
cmp
push
bound
push
or
stc
aaa
mov
jns
and
int3
int3
mov
test
sub
jns
rcrb
enter
shl
repnz
add
lcall
rcll
idivl
in
add
cmp
cmpsb
pusha
cli
roll
shlb
iret
and
ss
and
fiaddl
nop
mov
sbb
cmp
inc
pusha
push
rdtsc
mov
xor
jae
cmpsb
fidivrs
xchg
dec
adc
je
jae
test
pop
xor
repnz
je
aam
adc
ds
shr
lret
push
sbb
stos
loope
call
jle
dec
cltd
jns
pop
jno
outsb
push
inc
testl
push
enter
cmp
mov
es
pop
or
add
inc
dec
adc
inc
loope
mov
sub
cmp
and
mov
pop
cmp
pop
cmp
arpl
dec
addr16
jnp
push
mov
inc
sbb
shlb
cmp
lahf
icebp
lods
or
lock
push
pushf
inc
mov
mov
test
adc
add
fdivrp
ss
xor
mov
notl
ficompl
xchg
jp
mov
xor
cltd
cmp
fsubs
loop
xlat
add
dec
push
shll
pop
add
add
mov
mov
cmp
mov
xor
call
incl
ja
cld
adc
jge
fdiv
mov
shl
insb
mov
add
dec
fmul
sbb
and
bound
dec
dec
or
test
pop
cmp
lcall
jb
pop
sbb
test
inc
xchg
adc
nop
pop
inc
imul
push
in
mov
xchg
add
out
adc
inc
cmpb
std
cmp
imul
add
cmp
adc
xchg
popf
sahf
addb
icebp
cmp
adc
sbb
push
daa
scas
ljmp
jl
mov
and
push
ss
or
xchg
dec
fstpt
xor
fiaddl
jl
sbbb
push
and
add
push
or
test
add
in
push
imul
mov
inc
mov
pop
insl
push
push
movsl
add
popa
out
sbb
mul
push
inc
pop
xorl
scas
add
ljmp
jb
add
repz
add
scas
push
inc
cmc
outsl
xorb
adc
and
fwait
push
jae
xor
rol
popa
aaa
add
in
ficoms
leave
sub
mov
add
filds
ljmp
jp
add
push
lds
xchg
mov
xchg
jl
push
fisttpll
adc
xchg
stos
mov
push
mov
ror
cwtl
pop
jb
mov
fsubl
or
or
mov
dec
mov
lea
insl
outsb
andb
mov
fwait
xchg
mov
out
dec
xorb
sbb
sub
gs
mov
sub
loop
xor
mov
add
pop
imul
xchg
rorb
xlat
aad
in
mov
push
xor
sarb
pop
dec
add
popa
test
push
scas
add
pop
xor
xchg
lahf
push
push
cltd
jnp
jmp
or
popa
stos
aas
fs
js
pop
mov
dec
add
dec
stos
add
mov
push
ret
sbb
push
lds
add
in
dec
cmpsb
popf
mov
mov
and
jo
std
ds
add
inc
adc
loop
add
mov
or
mov
dec
xlat
shrb
and
add
movsl
jbe
jmp
shl
xchg
clc
and
aaa
movl
add
inc
and
testb
jge
push
cld
rcll
andl
mov
lods
add
xchg
add
sbb
adc
inc
or
inc
je
test
lock
jb
pop
sti
nop
xor
push
xor
bound
mov
mov
je
sub
xor
sub
sub
mov
add
shrb
push
clc
pop
pop
mov
adc
inc
xchg
mov
int
fcomip
and
mov
adc
movups
push
jbe
data16
xor
aam
rcll
loopne
leave
orl
lahf
rcrl
push
rclb
js
loopne
or
cmp
add
xchg
filds
ret
mov
inc
push
mov
subl
aam
add
aas
inc
fidivrs
fnstenv
je
push
cmp
aas
inc
insb
sbbb
add
adc
pop
jl
add
fwait
inc
mov
cmp
cmc
hlt
add
mov
push
mov
mov
or
shlb
adc
call
aad
fadds
inc
in
daa
fnsave
sub
jb
lahf
inc
int3
shrb
dec
push
inc
stos
cmp
rcll
filds
pop
push
clc
fildl
xlat
dec
pop
jae
cld
in
sbb
fcoml
xlat
xchg
in
add
and
push
lds
rol
cmp
pop
add
xor
hlt
into
sub
inc
cmp
xchg
or
add
adc
xlat
fisttpl
sub
xor
lock
push
jne
jge
cmpsl
add
push
je
jl
sbb
hlt
das
sbb
add
sbb
aam
or
int3
stos
inc
sub
or
mov
adc
rclb
pop
sub
in
jnp
pusha
mov
call
adc
adc
int
inc
arpl
sbb
pushf
mov
fsub
in
add
in
cld
sti
xchg
cmp
sarb
mov
dec
add
fwait
xchg
pop
pop
movsb
push
movb
roll
sarl
pop
cmp
mov
mov
sbb
leave
or
add
mov
pop
aad
clc
push
jae
jns
das
adc
push
das
add
dec
popa
xchg
or
rcrl
or
jl
movsb
fmuls
lods
cli
cmp
pop
aas
ret
scas
inc
mov
enter
cmp
mov
add
orb
mov
cwtl
cmp
int3
push
xchg
lods
mov
bound
jl
sbb
cltd
les
movl
into
dec
test
add
mov
in
add
sti
lock
jg
adc
mov
fists
add
push
test
daa
add
popf
mov
cmp
mov
fadds
or
xor
add
inc
mov
adcb
rolb
fmul
add
mov
rcrl
loopne
sub
jmp
mov
mov
stc
add
inc
xlat
dec
cmc
push
push
xor
dec
out
mov
and
jp
call
adcb
add
jmp
xor
sub
or
pop
ja
adc
mov
or
movsl
daa
sub
add
jecxz
aad
insb
pop
jae
cwtl
repnz
scas
mov
dec
data16
or
or
dec
mov
jo
outsb
fwait
dec
mov
jnp
ss
add
xchg
dec
call
test
les
cmp
add
xchg
dec
popa
pop
ds
xor
add
lret
loope
insb
notl
stos
enter
popa
sbb
add
cwtl
adc
inc
clc
fidivrs
loope
hlt
into
adcl
std
rcrb
or
cli
fidivrl
mov
fcomip
xchg
jp
add
dec
cmp
mov
and
add
xchg
pusha
outsl
fiaddl
add
mov
cmpsl
dec
and
push
pop
orb
push
inc
call
cmp
test
jb
or
add
push
push
and
mov
xlat
outsl
int3
js
in
sub
adc
and
cmpsb
mov
ret
shrl
add
lods
dec
aas
lds
in
rcrl
adc
sub
in
mov
mov
cmp
stos
incb
sub
and
cwtl
icebp
xor
test
pop
or
sahf
fdivrs
sbb
or
jmp
test
push
fistpl
jns
loopne
fistps
mov
and
adc
mov
add
roll
rcll
jo
cmp
out
pop
sbb
mov
adc
jmp
jecxz
cld
das
cmpl
inc
dec
sbb
popf
add
sub
sbb
fnstcw
rcll
dec
cs
mov
jg
adc
jl
or
je
cmp
nop
lds
enter
push
in
stos
push
adc
mov
push
enter
push
and
insl
sarl
add
mov
ss
iret
in
outsb
or
push
pop
mov
push
push
xchg
cmp
out
mov
jg
add
pusha
sti
mov
movsl
add
pop
cmp
inc
add
push
cwtl
ss
shrl
sub
popf
xchg
push
xchg
rcll
xor
jo
clc
popa
push
pop
pusha
cld
and
in
add
repz
sub
int
xchg
out
mov
lea
ja
out
sub
ret
xchg
mov
xchg
push
sub
das
add
mov
xlat
leave
xor
jmp
ficoml
js
push
in
xchg
std
pop
hlt
pop
push
out
daa
in
bound
push
test
enter
negl
mov
and
jp
add
dec
test
add
aad
loopne
sbb
inc
push
add
aam
and
push
into
cmpsl
cmpl
add
xor
mov
aam
std
add
adc
add
add
test
loope
popl
xor
enter
or
into
lds
pop
mov
int
add
push
ljmp
pushf
or
jb
cmpsl
jmp
call
mov
call
hlt
test
out
nop
add
fnstsw
add
cs
and
add
ret
dec
jle
fs
add
mov
cmp
rclb
mov
add
mov
clc
mov
jge
mov
xchg
pop
adc
sbb
add
cwtl
out
add
inc
xchg
xor
sbb
dec
test
fcoms
sbb
add
gs
and
jecxz
jno
lret
fidivrl
sbb
pop
loopne
xchg
lahf
xchg
popa
fmuls
push
lock
cmp
inc
or
xor
hlt
push
jo
mov
ret
xchg
add
std
mov
adc
cld
lock
add
lret
dec
sti
test
or
add
stos
sub
imulb
mov
add
clc
pop
leave
sahf
cmp
push
add
cs
fwait
push
ret
loopne
subl
mov
daa
sub
clc
cmp
or
and
mov
test
pop
cmpsl
lcall
dec
sbb
xor
mov
shrb
jp
pop
lret
movb
pushf
aam
pop
enter
xor
add
cmp
shlb
pop
adc
add
mov
add
jle
adc
add
jecxz
jp
mov
aam
scas
int3
push
cmp
rcll
lret
pop
out
mov
dec
sar
lret
orl
aam
call
es
fs
sbbb
push
mov
mov
push
pop
pop
subl
sub
add
cmp
xor
addb
dec
inc
cmovbe
push
leave
dec
xchg
and
sbb
lret
inc
jp
and
or
xchg
iret
in
popa
sbb
mov
push
add
dec
incb
add
div
cmp
push
mov
enter
push
add
mov
nopl
mov
mov
xchg
push
or
imul
fstl
add
push
add
mov
dec
sub
add
leave
mov
jmp
rorb
mov
in
test
inc
adc
cli
add
xchg
dec
push
dec
shl
dec
popf
xchg
inc
adc
cltd
inc
fcoms
jne
and
cwtl
inc
fildl
data16
pop
fisttpll
push
mov
inc
fstl
shr
pop
inc
jmp
mov
outsb
nop
add
mov
mov
xchg
cld
fists
adc
fcoms
push
and
dec
imul
mov
test
cmp
sub
push
xchg
repz
xorl
mov
add
mov
lcall
fidivrl
sbb
loop
add
arpl
sub
int
push
shl
mov
jne
sub
je
pop
punpckhbw
shlb
fildll
or
cmpsb
sbb
enter
cmp
adc
mov
std
fdivrs
test
cmp
daa
lods
pop
in
dec
add
dec
adc
mov
sbb
sbb
bound
xor
aam
movl
pop
jnp
mov
sbb
mov
mov
mov
xor
pushf
push
add
outsb
in
add
mov
add
cltd
jns
in
out
adc
dec
fwait
mov
xchg
jb
mov
sbb
hlt
dec
std
lret
rcll
pop
imul
js
test
sub
jno
dec
lods
and
ljmp
popa
rolb
jl
inc
xchg
pop
cmp
movsb
mov
jmp
in
add
pop
mov
testl
lea
sahf
mov
and
dec
loop
jle
mov
add
ds
xor
in
or
ljmp
in
je
xchg
les
pop
xor
pop
or
out
movsb
pop
aam
xlat
or
test
andl
pop
sbb
or
inc
int
scas
shrl
sub
sub
jl
pop
inc
pop
loopne
add
inc
push
push
fadds
pop
mov
scas
stc
movsl
test
int3
push
in
dec
push
cltd
leave
movsl
jp
add
and
vmovss
sub
cmp
ja
mov
das
jl
push
push
push
movl
mov
subl
shrb
outsb
shll
mov
add
adc
or
or
sahf
sbb
dec
int3
daa
or
movsb
jns
loopne
add
jecxz
mov
aaa
add
popa
inc
int3
push
adc
pop
sub
ds
cwtl
add
and
push
cmp
add
sarb
push
mov
mov
adc
fmull
call
mov
cmovne
or
and
pop
mov
cmp
insl
push
jmp
add
fistpll
loopne
push
test
repnz
mov
sub
movsl
xchg
ret
cmp
movsb
jle
add
add
or
jg
loop
cmp
add
cltd
sbb
pop
mov
fadds
pop
cs
pop
mov
xor
add
add
pushf
shlb
pop
xchg
or
lds
out
psraw
sbb
inc
sub
jg
add
rorb
push
mov
or
movsb
sub
shr
sub
jl
sbb
push
fs
mov
xor
mov
shl
jbe
nop
ret
cmp
mov
add
popa
lock
or
mov
xchg
pop
sbb
sbb
push
inc
int
insl
lock
scas
stos
mov
mov
add
lret
cmp
call
adc
lret
popa
insb
lods
rolb
sub
xchg
mov
iret
add
add
in
ds
jo
test
mov
jo
add
mov
cmp
pop
inc
movsl
js
push
mov
shrb
inc
dec
scas
add
mov
jno
cmp
popa
push
dec
or
fbstp
loopne
adc
mov
add
mov
xchg
sub
mov
add
aam
cmp
pop
sti
enter
xor
mov
jl
mov
mov
lock
fld
mov
loope
test
or
mov
cmp
out
lea
shl
mov
push
mov
add
cmp
lds
loopne
xchg
pop
dec
add
push
rcrl
inc
cmp
aad
pop
popf
push
add
pop
lods
dec
mov
add
push
loopne
and
cltd
lods
xor
jne
fs
cmpl
jbe
mov
xor
add
sub
stos
cmp
pop
xor
inc
jns
negb
xchg
shll
call
push
add
adc
add
push
inc
add
push
pop
mov
js
add
xchg
pop
add
hlt
add
add
lods
cmp
and
or
mov
sbb
jg
jl
push
movsl
xor
mov
sbb
sub
dec
or
les
cmp
add
outsb
pop
adcb
dec
mov
jno
sub
mov
insb
lret
ret
leave
add
rorl
ret
pop
loopne
dec
repnz
fcompl
or
add
nop
jle
cmp
sbb
cltd
push
outsl
popf
icebp
cmp
adcb
pop
cwtl
ja
das
sahf
cld
push
test
inc
subb
ficompl
and
lea
dec
js
data16
gs
in
pop
subb
sbb
sub
add
fs
imul
jnp
std
dec
inc
add
out
in
sub
dec
popf
cmp
xchg
sbb
adc
push
add
inc
jecxz
shll
cmp
test
lret
add
inc
shrl
scas
pop
loope
outsl
std
xor
int3
testl
add
jge
add
cli
add
xor
and
aas
daa
add
adc
loopne
adc
push
ret
std
enter
mov
inc
pop
push
cmp
pop
add
jbe
sti
jne
and
mov
or
pop
int
mov
les
jb
cmovs
shlb
imulb
add
popa
cld
cld
sarl
add
or
add
jnp
sbb
fistl
icebp
dec
stos
cwtl
inc
add
pop
iret
repnz
test
xchg
rcr
aas
in
sahf
popf
adc
or
jae
out
add
sbb
xchg
add
push
add
lock
movsl
pusha
loope
cld
stos
or
sbb
lods
or
sahf
test
xor
jns
xor
or
pop
sahf
enter
pusha
movsl
aad
mov
divl
add
xchg
lcall
xorb
cmpsb
repz
dec
shrl
in
add
mov
shlb
add
and
mov
mov
cmp
les
push
mov
lahf
add
out
in
jp
in
fidivrl
inc
adc
dec
adc
jmp
add
push
pop
mov
mov
pxor
test
aad
and
hlt
sbb
mov
jecxz
nop
adc
add
push
repnz
cmp
adc
cwtl
cmp
xor
out
loope
jle
adc
int3
add
dec
clc
push
wbinvd
cmpsl
loope
xor
repz
pusha
lock
fnstcw
or
sbb
insl
clc
add
je
cmp
adc
movsb
std
repnz
pop
fisttpl
xorl
mov
hlt
lret
movsb
add
mov
xor
aas
pop
loopne
jns
loop
jl
pusha
mov
add
ret
adc
adc
inc
pop
filds
cmp
sbb
test
int
inc
enter
add
icebp
cmp
adc
nop
push
add
leave
sbb
push
xor
cli
xor
or
sbb
cmpb
xor
mov
adc
ss
mov
loopne
add
es
incb
sbb
shrl
xchg
enter
fldcw
inc
mov
mov
aam
xchg
mov
call
push
sbb
push
fistpl
test
cmp
lock
aas
nop
xchg
sbb
int
add
inc
divl
add
mov
jg
jl
add
cmpsb
ja
in
test
or
sahf
call
shl
sbbb
add
out
adc
mov
fildl
cmp
lahf
mov
push
add
ror
mov
inc
jo
add
shll
or
sbb
add
stc
cmp
cwtl
push
ljmp
sub
fadds
popa
aad
cltd
xor
stos
xor
test
jp
add
xor
inc
add
lock
push
adc
inc
add
jle
ficoms
cli
loopne
add
int
or
mov
or
or
fisttps
ja
daa
das
pop
add
add
add
roll
pop
lea
int3
es
cld
add
add
lahf
je
add
cs
mov
sub
inc
test
xchg
je
fadds
add
ficompl
popf
add
cmp
mov
push
decb
xor
inc
lds
adc
out
adcb
roll
jo
nop
faddl
jmp
push
test
movsb
nop
fadd
sbb
push
cli
mov
add
mov
ja
lock
push
repz
inc
sbb
repnz
cwtl
mov
dec
sub
dec
clc
rcll
aas
pop
or
clc
dec
roll
pop
inc
ficomps
popf
daa
clc
data16
or
sub
dec
jo
call
and
fadd
in
nop
pop
pop
add
mov
lcall
test
mov
mov
add
movb
or
inc
out
add
dec
cmp
mov
fwait
enter
in
add
ret
pusha
xchg
addr16
add
jae
jle
add
add
inc
gs
pop
or
mov
inc
or
push
xor
or
add
jne
pop
or
or
test
add
in
repnz
adc
sbb
cs
push
outsb
cmc
shlb
out
mov
cmp
and
pop
xor
xchg
loope
loopne
and
xchg
hlt
data16
add
movsl
sub
sti
add
es
cmp
cwtl
add
test
inc
or
ljmp
inc
aaa
stos
sub
dec
call
or
xchg
add
cs
in
pop
daa
add
mov
inc
dec
pop
lea
adc
inc
jmp
jecxz
sahf
movsb
adc
or
imul
pop
jl
xor
out
dec
jg
xchg
pusha
xlat
pushf
loopne
jb
xchg
push
fadd
lahf
pop
xor
sbb
jb
or
lahf
xor
out
push
rclb
fwait
arpl
fcoms
pop
pushf
push
imul
push
or
outsl
aaa
stos
je
out
lret
enter
mov
mov
push
add
sbb
push
pop
insb
mov
push
add
iret
mov
inc
add
pop
pop
imul
popf
add
aad
sub
pop
sub
mov
push
jmp
iret
add
rep
dec
sub
pop
in
lcall
jne
and
je,pt
add
or
in
and
stos
sbbl
movsl
shrl
push
sub
arpl
cmp
and
dec
add
in
or
jae
in
xorb
cld
pop
mov
insb
pop
inc
stc
movsl
push
dec
mov
lahf
call
mov
push
sub
jecxz
add
stos
daa
pusha
in
aam
mov
push
movsl
pop
jmp
mov
fistps
out
sbbb
push
or
aas
mov
mov
dec
arpl
and
jmp
pusha
loope
xor
cmp
test
jne
loop
adc
dec
add
cli
pop
mov
and
mov
out
sub
mov
idiv
jp
cmp
js
mov
mov
push
push
jns
add
pop
in
inc
jo
add
cmpb
jno
add
jl
add
add
add
pusha
add
xlat
jecxz
and
insl
or
xchg
add
add
mov
jp
ja
das
out
push
sbb
ret
sbb
and
xchg
inc
ljmp
mov
add
ret
gs
sbb
dec
push
scas
xchg
shl
mov
xor
dec
loope
add
cli
cwtl
or
xchg
mov
cmp
adc
or
adcb
lahf
jecxz
in
loope
cmpsl
dec
mov
and
in
add
pinsrw
sbbb
fmuls
insb
sub
in
xorb
in
xchg
add
or
in
mov
jle
xchg
and
fldl
or
loope
push
pop
add
sub
sub
dec
inc
lahf
and
xor
mov
data16
arpl
or
leave
cld
or
push
fidivs
js
cmc
add
adc
cwtl
jns
push
cmp
and
add
repz
add
pop
daa
sub
xchg
shll
mov
mov
sub
cmp
lods
xor
push
stos
xchg
sub
int
sub
mov
stc
hlt
lret
scas
jne
add
lahf
sbb
rolb
pop
pop
mov
cmp
add
xchg
jg,pn
cmpb
sbb
mov
jl
mov
xor
cmp
fwait
cmp
mov
xchg
out
mov
stos
sbb
addb
stos
mov
ljmp
xchg
pop
shl
mov
addr16
sahf
int3
test
add
pop
movsl
scas
adc
add
sbb
push
mov
iret
repz
jae
lock
xor
adc
pop
test
inc
mov
xchg
test
inc
subb
inc
shrb
jl
loopne
pop
aam
push
std
fadds
add
inc
in
cmp
and
stos
sbb
jo
aad
mov
mov
xlat
push
push
hlt
sbb
xor
push
cmp
xor
add
leave
cli
and
outsb
or
and
shrl
leave
clc
push
sub
shlb
aad
dec
cmp
jg
or
cmp
mov
dec
cmp
fprem
enter
icebp
push
or
jl
imul
jg
int
add
mov
dec
sbb
add
sti
fsub
mov
subb
lods
jecxz
movsb
mov
adc
repnz
push
dec
lock
dec
add
mov
test
dec
call
in
adc
or
ljmp
push
test
in
jg
and
mov
push
xchg
lods
push
and
mov
adc
push
mov
or
fs
inc
sbb
inc
int3
adc
and
dec
sub
aam
xchg
dec
mov
imul
add
cmp
push
enter
push
mov
fbld
xor
push
les
jns
pop
or
cmc
dec
pop
icebp
fcoml
adc
cmp
sub
test
cmp
dec
xchg
xorb
cmp
push
push
mov
fwait
xor
and
mov
jl
adc
inc
cmp
gs
test
add
pop
add
mov
arpl
leave
mov
pop
jmp
leave
sarb
sbb
dec
add
les
xchg
dec
mov
and
leave
add
sbb
adc
and
dec
push
mov
scas
or
sbb
push
cwtl
dec
xorb
mov
jecxz
jno
adc
rcr
mov
pushf
stc
test
lock
or
pop
dec
sti
test
inc
outsl
subl
adc
pop
push
clc
test
sub
hlt
inc
inc
nop
dec
enter
xchg
adc
sub
push
pop
mov
xchg
test
adc
sbb
arpl
pop
mov
inc
pop
pop
lcall
nop
je
leave
or
add
out
popa
dec
pop
bound
add
sbb
inc
cmp
sbbb
dec
inc
aam
dec
jno
js
add
pop
dec
popa
insl
add
xlat
push
and
sub
push
inc
adc
push
mov
mov
sbb
clc
push
xor
sub
ss
lret
sub
nop
lock
adc
jne
ljmp
enter
inc
insb
loop
inc
adc
adc
adc
leave
leave
mov
cmpsb
loopne
or
movsb
orl
in
inc
fs
or
cmp
loopne
and
mov
add
mov
sbb
cmp
or
push
in
adc
sub
pop
and
pusha
or
or
push
aaa
xchg
sbb
leave
clc
push
in
aam
adc
in
inc
shll
gs
shlb
xchg
sub
nop
dec
les
mov
inc
mov
pop
dec
jmp
divb
cmpsl
stc
add
push
pop
pushf
enter
sbb
fs
sbb
push
shll
enter
sbb
repnz
sbb
push
pop
shrl
enter
aam
mov
inc
popa
sub
add
mov
aas
add
rclb
or
sub
xchg
push
pop
or
fcompl
push
cld
push
es
fstps
rclb
adc
call
sub
movsl
jmp
adc
jl
pop
fcomps
inc
mov
mov
inc
add
lcall
fwait
test
fldcw
iret
pushf
inc
cmc
mov
push
pop
in
add
addr16
and
or
sub
dec
mov
add
lock
inc
lock
dec
mov
push
push
sbb
push
pop
add
xchg
inc
gs
mov
mov
push
ljmp
sarb
mov
push
aaa
data16
push
and
cld
bound
loopne
cld
inc
or
add
dec
inc
jbe
mov
imul
and
into
sub
mov
nop
add
in
subb
mov
push
pextrw
shlb
lahf
dec
data16
dec
lret
aas
ja
sahf
xorl
adc
dec
pop
mov
inc
mov
xchg
orb
sub
test
scas
adc
add
ret
popf
and
shll
pop
mov
add
and
lods
testl
pop
js
adc
shl
mov
loopne
stos
mov
aas
inc
mov
fdivrp
cmp
mov
pusha
and
sbb
rcrb
test
subb
cmp
mov
iret
sub
add
jp
sbb
in
add
aas
inc
sbb
popf
mov
inc
adc
xchg
popf
stos
rcll
pop
leave
dec
xor
sbb
jmp
xchg
aas
cmpsb
jecxz
add
hlt
jno
fildl
jae
sbb
pop
push
out
cmc
add
cld
sbb
or
add
roll
sub
test
cmp
jmp
push
in
hlt
add
adc
lods
inc
add
das
sub
push
cmpsb
cmp
orl
arpl
mov
or
push
roll
lahf
and
push
cli
jp
and
fwait
hlt
into
add
or
push
loopne
or
and
xchg
xor
mov
jge
in
push
add
das
inc
sar
shr
iret
push
rorb
or
shrb
rolb
cmpsb
jge
movb
daa
sbb
mov
nop
int3
xor
inc
and
test
faddl
js
inc
ss
sarb
add
cli
push
ficoml
out
xchg
xor
pop
insb
and
jns
enter
jbe
inc
fwait
inc
pop
and
add
jge
ja
jae
fs
int
adc
jbe
push
sbb
in
jns
aas
pushf
je
sbb
aam
mov
nop
pop
sbb
stos
cltd
pop
int3
add
and
int3
or
jmp
fimull
push
pop
imul
sahf
loopne
js
fnstcw
and
and
add
pop
je
lea
sub
jg
aam
clc
movsl
xchg
push
clc
adc
cmp
inc
lock
mov
add
hlt
adcb
cmp
sub
mov
add
mov
jecxz
push
mov
sbb
xor
push
mov
xor
add
push
fs
lea
cmp
add
pop
jge
lret
jno
repz
push
xchg
add
mov
mov
adc
or
cmpsb
push
sahf
ljmp
movsl
add
aas
xchg
add
les
pop
xor
and
pop
fists
jae
pusha
gs
enter
adc
sarb
fmuls
add
add
mov
sub
pop
leave
cmp
inc
add
xchg
mov
jl
add
insb
mov
xor
cmp
xchg
dec
push
pusha
aam
ret
jmp
fsubrl
xchg
insl
hlt
shrl
xchg
add
push
sar
call
in
insb
push
sarb
add
inc
mov
jnp
lahf
jp
or
adc
xchg
rorl
gs
lods
cmp
into
nop
jb
aam
sbb
lock
add
cmpsl
movsb
ltr
out
cmp
add
adc
mov
sbbb
pop
cs
loopne
jbe
cmc
repnz
incb
stos
add
icebp
xchg
std
adc
das
add
pop
cmpsb
mov
js
test
cmc
test
xchg
icebp
test
stc
mov
mov
jp
les
xchg
mov
rcll
jge
out
push
jb
jg
xchg
mov
add
imul
scas
fildll
jb
lea
rolb
aam
jns
inc
add
nop
or
push
inc
rorb
mov
enter
mov
lock
or
sub
push
outsl
call
and
inc
mov
out
inc
sub
js
add
jns
cmp
popa
xchg
add
dec
inc
add
add
or
mov
dec
xchg
dec
rcrl
testb
xor
leave
cltd
xor
add
dec
lcall
mov
add
dec
sbb
fists
popa
mov
mov
pusha
push
enter
add
data16
and
jnp
mov
cmp
add
out
sti
xor
ds
mov
popa
je
dec
cwtl
mov
and
sub
icebp
dec
dec
add
xor
jmp
ret
mov
cmp
ret
and
add
iret
jo
adc
add
pop
or
pushf
xchg
dec
xlat
and
xchg
nop
sbb
mov
mov
xor
orl
in
push
test
xor
bnd
mov
xor
imul
mov
popa
es
mov
roll
mov
xor
push
nop
stos
add
adc
xchg
add
je
outsb
mov
test
cld
push
addl
cmp
scas
es
add
xchg
jle
mov
outsb
lods
mov
movb
adc
mov
adc
sbb
pop
icebp
push
hlt
xor
and
mov
enter
loop
aaa
stos
dec
gs
mov
lcall
mov
imul
pop
jmp
mov
push
dec
aas
cmpsb
mov
pushf
ljmp
aad
dec
fwait
aad
int3
cltd
jecxz
push
add
or
cld
lds
in
shll
cmp
add
mov
xor
adc
stc
stos
dec
or
and
add
inc
push
jg
add
sbb
or
arpl
loopne
jle
lods
sbb
les
addb
add
adc
mov
out
cli
or
mov
repz
pop
dec
movsl
pop
cmpsb
mov
hlt
pusha
inc
das
pop
fadds
imull
mov
roll
and
mov
push
mov
insl
cltd
push
adc
popa
faddp
dec
rclb
xor
and
pushf
push
test
and
pusha
sub
sbb
out
mov
pusha
outsl
or
dec
cmpsl
add
leave
aad
enter
in
push
adc
testl
cmp
aas
xor
andl
insb
mov
xchg
cld
mov
mov
add
pop
out
xor
jbe
add
aam
insb
xor
dec
or
pop
mov
cmp
roll
cs
add
rol
imul
xor
mov
add
mov
mov
in
adc
enter
xor
and
mov
loop
inc
fisttpll
ficoml
push
in
jg
rolb
cmp
icebp
pushf
mov
cli
mov
cmp
jle
mov
add
push
cwtl
or
lcall
scas
data16
adc
outsb
sahf
mov
add
xchg
pop
iret
je
shrl
pop
into
pushf
loopne
aad
jnp
in
rcrb
fdivrl
cmc
add
cld
mov
or
es
mov
xor
int3
lahf
sbb
add
mov
addl
sbb
sbb
js
xchg
pop
mov
roll
jl
sbb
cmp
sti
mov
bound
xchg
add
mov
push
iret
xor
xchg
loope
add
or
mov
cmpsb
sub
mov
and
into
test
pushf
out
jge
mov
in
in
push
xor
pop
adc
repz
add
jp
imul
mov
add
pop
pushf
and
pop
mov
add
nop
test
add
jno
hlt
lret
insb
sub
movsl
xor
outsl
jns
sub
push
or
imulb
movsl
and
xchg
gs
add
test
fdivs
bnd
add
sub
mov
mov
icebp
or
dec
lods
sub
mov
imul
dec
pop
lock
pop
ljmp
dec
jge
bnd
push
aad
cld
lock
pop
jmp
movsb
add
or
push
add
das
loopne
ja
nop
push
add
adc
stc
lock
out
shlb
inc
jns
stos
sbb
add
adc
popa
mov
pop
aad
jo
push
jbe
mov
add
lret
insl
popa
pop
or
adc
cmp
lods
add
scas
cld
xchg
and
jnp
or
shr
add
out
mov
stc
inc
or
or
mov
mov
inc
xor
xchg
rcr
into
mov
push
dec
mov
push
in
test
sbb
add
xor
push
in
xchg
popf
inc
dec
mov
mov
adc
lds
icebp
add
sub
iret
pop
pushf
mov
imul
pop
cmp
lcall
jns
inc
in
mov
call
push
in
frstor
inc
sbb
insb
mov
sbb
cmp
adc
push
les
fildl
jno
mov
sbbb
imul
jmp
mov
lea
add
xor
inc
mov
std
rcrb
loopne
jb
cmp
sbb
inc
xor
movsb
inc
mov
pop
cmp
lret
or
dec
mov
das
or
pop
dec
aad
test
outsl
loopne
lock
pop
fsubs
bound
inc
insl
cmp
mov
mov
mov
cmp
ds
cmp
mov
push
addr16
into
add
add
jge
inc
enter
push
adc
inc
clc
pop
add
xchg
loopne
inc
and
gs
or
sbb
pop
and
mov
push
sbbl
xor
in
xorb
mov
cmp
jns
add
repz
shl
jmp
mov
loop
dec
pop
jle
dec
xchg
add
imul
or
inc
mov
pop
add
mov
test
call
pop
out
fs
jo
add
nop/reserved
jno
inc
jle
adcb
sbb
xor
dec
loopne
and
out
rcrb
jb
out
ljmp
jb
aad
fcmovnb
pop
mov
scas
add
jo
mov
mov
scas
lahf
enter
pop
repz
add
pusha
test
in
fcomps
mov
push
jmp
shrb
jmp
and
cmp
push
add
xor
nop
mov
push
scas
pop
mov
sub
and
xchg
pop
lcall
pushf
add
rcl
push
xor
and
test
cli
xchg
push
test
mov
mov
mov
pop
fstpl
add
lret
mov
dec
shl
imul
sbb
mov
roll
mov
test
inc
push
mov
sbb
sarb
addl
loopne
xchg
fcomi
add
dec
sbb
pop
mov
sub
sbb
or
jae
pop
lret
add
and
dec
inc
mov
jl
pop
negb
popa
xor
add
cltd
rorl
xchg
xchg
test
add
sbb
dec
jge
cmp
ljmp
jb
or
jle
and
lret
outsl
rolb
mov
add
add
je
clc
mov
and
in
xor
shrl
testl
nop
xchg
xor
je
sbb
inc
xchg
shrl
mov
xchg
mov
rcrl
and
leave
fisubrl
pop
clc
nop
sub
sarl
adc
jge
in
mov
sbb
add
push
pop
inc
out
test
fwait
cli
add
lahf
pop
or
mov
scas
ret
mov
mov
jp
cmp
and
mov
mov
sbb
sub
lods
dec
nop
jb
test
xor
mov
loop
mov
lret
add
sbb
dec
roll
sub
enter
mov
push
enter
add
mov
or
and
cmpb
clc
adc
add
loopne
jg
enter
add
jo
rolb
loopne
jb
dec
mov
xor
inc
or
imul
and
dec
xchg
and
rolb
in
xor
jmp
movsb
lcall
shl
mov
lea
outsl
sbb
cmc
inc
mov
test
and
sti
popf
sets
pusha
xlat
movsb
lods
incb
js
mov
sbb
cwtl
in
sub
icebp
loope
add
pop
push
dec
sub
adc
call
out
sti
add
scas
or
mov
xchg
cmp
dec
lods
call
loopne
inc
mov
je
sbb
jno
add
inc
scas
sbb
pop
or
adc
aad
push
xlat
xor
dec
test
sbb
push
loope
out
or
fsts
add
js
fs
imul
fnstsw
sahf
pop
sub
add
loop
das
loope
fadd
push
or
ret
dec
cs
cmp
adc
xor
jae
es
mov
icebp
jmp
lods
mov
mov
or
cwtl
jmp
jp
or
das
cmp
jb
movb
out
gs
mov
push
push
mov
mov
xlat
test
js
mov
das
movsl
add
jg
lea
addr16
add
inc
mov
mov
dec
cmp
add
int
pusha
sub
faddl
outsl
and
into
and
adc
mov
daa
nop
sub
mov
sub
and
fs
in
or
xchg
adcb
or
lret
xchg
and
jge
mov
jns
idivb
ja
fidivrl
add
in
flds
push
sub
xorb
sbb
es
daa
add
jmp
fidivrl
call
cmp
cwtl
cmpsl
xor
fs
add
pop
push
xchg
daa
add
push
pmaddwd
gs
add
ret
in
dec
cmp
incb
lods
mov
push
adc
and
hlt
dec
and
jbe
xchg
add
fwait
pop
mov
shufps
sub
add
push
dec
push
call
nop
jmp
jo
fisttpll
fidivrl
aam
push
add
mov
push
dec
mov
and
les
or
sub
bound
and
sbb
jl
adc
inc
sar
jb
add
cmp
std
add
mov
mov
es
xchg
sahf
inc
jl
or
add
cltd
inc
stc
add
aam
mov
jae
cmp
xor
push
fdivrs
push
add
stos
sub
xchg
jg
add
cltd
cmp
dec
les
push
mov
iret
dec
nop
sbb
jmp
add
in
jne
add
out
and
fildl
add
sbb
xor
push
add
fldcw
jne
dec
xchg
and
stc
jmp
shr
inc
add
addl
adc
pop
xor
pop
inc
jmp
xchg
sbb
in
cltd
cmpsl
lds
mov
pop
daa
adcb
and
in
mov
in
in
add
imul
xor
dec
mov
inc
test
add
jmp
jbe
cltd
addb
repz
jg
or
or
lret
and
adc
in
dec
add
push
fstpl
int
add
pop
repz
aas
jns
add
fwait
imul
and
inc
outsb
clc
daa
shr
sub
pop
add
inc
fdivs
insl
and
or
lcall
mov
out
scas
add
dec
mov
add
adc
xchg
hlt
push
mov
and
mov
out
aas
xchg
add
and
xchg
scas
in
xor
push
gs
inc
cmpsb
aad
cs
add
inc
mov
add
in
add
enter
insl
imul
push
add
inc
and
loopne
or
outsw
lret
push
lock
sub
mov
push
or
repz
cmp
mov
mov
mov
aas
add
or
insb
loopne
out
popa
pop
lds
mov
jg
add
push
jno
mov
fidivrl
sbb
add
outsl
test
xchg
mov
lock
cmp
adc
add
mov
add
dec
adcl
ret
add
test
inc
sbb
add
jne
sahf
pop
pop
call
outsb
lds
add
inc
inc
fwait
cmp
int3
imul
fwait
js
cmp
jo
repnz
sub
jns
xor
sbb
jl
push
adc
sahf
sub
pushl
jbe
push
add
sub
mov
add
add
mov
push
adc
out
xor
cmp
testl
add
cmp
mov
add
std
mov
add
sub
lahf
add
inc
out
sub
cmp
cmc
out
loop
add
int3
in
outsl
lcall
or
push
push
cs
clc
xchg
shl
lsl
out
inc
addl
mov
lret
push
cmp
addr16
bound
sub
add
adc
fsubrs
push
cli
lods
inc
scas
add
adc
add
hlt
dec
mov
cs
jne
fisubl
mov
mov
gs
pop
mov
scas
adc
xchg
sbb
add
call
push
rol
cmp
and
aam
lret
xor
filds
int
mov
or
pop
test
aas
dec
loopne
adc
clc
add
iret
mov
shl
cwtl
add
sub
nop
xchg
dec
ds
movsb
pop
cmp
loope
adc
cmp
dec
add
mov
test
jae
mov
test
pop
shlb
add
xchg
icebp
ss
fdivs
rcrl
jno
outsl
cmp
xchg
push
loopne
in
shrb
cld
xor
sbb
jne
inc
test
mov
dec
fdivl
jbe
out
pop
xchg
loopne
loopne
add
and
mov
ds
add
testb
mov
mov
add
ds
add
mov
mov
pop
orl
add
hlt
fists
jg
pop
inc
insl
call
cs
push
imul
add
ret
dec
pusha
mov
or
test
repnz
movsb
insl
outsl
cmp
dec
subl
int3
and
test
sub
call
orb
inc
mov
add
sub
adc
jg
sbb
add
or
cmp
movsl
andb
inc
sarl
pop
scas
pusha
das
adc
ljmp
loop
movl
pop
adc
lcall
sbb
test
clc
adc
stos
sub
pop
add
jp
and
test
adc
cmp
adc
cmpb
rorb
les
pop
je
or
wbinvd
outsl
lock
sub
pop
xchg
call
aam
lock
fcoms
add
xchg
pop
xchg
subl
mov
adc
outsb
aas
add
push
repz
ss
inc
negb
cmp
divb
inc
faddl
pop
mov
call
sbb
add
loopne
push
std
add
out
imulb
add
add
sub
xchg
out
and
nop
mov
xchg
adc
or
arpl
xchg
test
stc
dec
cwtl
push
outsb
sbb
jp
add
mov
movsl
xor
cwtl
test
cmc
xchg
cld
pop
sbb
cs
dec
std
add
mov
mov
dec
orb
add
pop
push
hlt
pop
andb
dec
leave
mov
add
icebp
inc
cli
add
xor
stc
test
add
xchg
imul
fcoms
ret
jl
jnp
mov
add
mov
jmp
aad
sub
std
cmp
pop
fimull
push
and
push
inc
push
daa
mov
or
enter
icebp
xlat
mov
adc
jb
fsubr
xor
gs
lock
lahf
mov
inc
dec
xchg
push
pop
or
hlt
ud1
shl
jae
sbb
push
push
adc
add
and
dec
jp
test
sub
mov
add
insb
into
fcmovu
push
sub
rorb
xor
sub
dec
pop
ljmp
cli
sbb
mov
dec
or
es
and
pop
rclb
pop
fsubrs
jmp
inc
sbb
sbb
jbe
xor
sub
cmpsb
je
add
test
pop
mov
insb
jp
add
jl
dec
dec
mov
jecxz
outsb
dec
push
pop
lea
aam
jb
or
jbe
add
sub
sbb
inc
add
fisubl
stos
add
and
cltd
add
lods
shrb
test
and
sbb
cmp
idiv
ds
call
fwait
mov
xor
dec
sub
aas
add
out
add
cmp
add
pushf
or
jmp
add
mov
or
cmp
pop
cmpl
imul
inc
fstps
push
inc
cmpsb
out
in
xchg
dec
ret
xor
add
add
pop
leave
push
jo
aam
dec
sbb
dec
add
inc
sahf
sti
test
sub
sbb
xor
ljmp
into
fldl
xchg
lods
nop
dec
pop
ds
add
fadds
add
leave
cld
sysret
xor
xor
jo
add
jl
or
repz
enter
sbb
iret
cmc
adcb
les
xchg
jns
add
imul
push
lds
cmp
fnstenv
add
clc
adc
or
daa
add
fisttpll
adc
sbb
aad
mov
outsl
aam
cwtl
mov
mov
pmullw
jge
sarb
jno
push
out
test
and
push
add
add
xchg
cmpl
add
inc
imul
call
mov
cmc
mov
addl
cld
mov
les
out
shr
add
test
add
push
xor
lods
mov
or
jo
ret
jg
pop
pop
dec
cmp
mov
orl
jbe
fsubrs
cmpsl
pop
xor
cwtl
popf
push
pusha
repnz
cmp
dec
pushl
add
add
les
pushf
nop
scas
mov
hlt
sub
cltd
scas
adc
ja
inc
mov
out
roll
loop
iret
test
dec
xor
and
pop
mov
push
mov
mov
xor
mov
lret
dec
adc
std
ja
cmpsb
xor
shll
mov
mov
pop
popf
inc
int3
mov
cld
jl
mov
out
cmp
adc
cltd
sub
mov
cmp
stc
out
add
pusha
xchg
aas
pop
outsl
sbb
je
or
sub
xchg
sub
loop
or
scas
ljmp
lcall
add
shl
jns
mov
aad
sub
xchg
mov
add
xor
lods
sar
pop
ljmp
adc
dec
mov
out
sbb
int
shlb
add
push
inc
arpl
pop
cld
cmpsl
xor
lea
xchg
ret
jo
sbb
movsb
push
and
iret
add
lahf
and
add
pop
xchg
rcr
jp
sti
pop
lret
add
adc
orl
add
push
mov
adc
pop
add
in
repz
push
add
add
add
iret
aad
test
fsubr
loop
ja
popa
adc
adc
xlat
clc
xchg
lret
xchg
add
mov
fs
add
xchg
jp
cmp
ja
roll
adc
or
les
fisubrl
sbb
xor
fsubrs
add
jge
sub
lret
pop
mov
push
inc
inc
std
or
pop
adc
mov
and
test
sbb
push
mov
sti
jne
cld
sarl
add
or
and
push
mov
fistps
sti
sahf
jp
daa
enter
testb
or
into
or
adc
adc
mov
andb
push
pop
imul
dec
or
gs
addb
sub
sti
cwtl
mov
out
xchg
mov
add
cmc
scas
push
sbb
add
inc
jmp
hlt
push
jl
int3
add
test
push
gs
pusha
out
jmp
jo
testl
in
dec
outsl
cmpsl
xor
sahf
dec
mov
mov
inc
outsb
xor
push
dec
mov
sbb
cs
roll
add
lock
xchg
add
mov
pop
jae
ja
add
icebp
stos
inc
mov
add
push
fstpt
add
add
bound
cmc
ja
cmpsl
call
xor
push
dec
out
in
movb
dec
jecxz
push
xchg
aas
insl
add
test
out
sarl
dec
mov
ja
sbb
push
push
lret
jne
aaa
pop
hlt
and
fimuls
fidivl
push
pop
dec
pop
shr
insb
les
xor
cwtl
adc
add
mov
mov
dec
addr16
add
xor
inc
in
push
js
leave
or
rorb
pop
jnp
mov
ja
shll
ficoml
xchg
roll
lcallw
mov
cmp
xor
mov
pop
and
mov
outsb
stos
dec
bound
iret
pusha
mov
jae
test
push
imul
or
pop
fidivl
adc
add
daa
notl
push
pop
add
jmp
mov
inc
imul
das
in
mov
mov
mov
or
push
repnz
mov
lret
popa
or
sbb
inc
test
gs
push
rolb
add
or
pop
cs
scas
outsl
popa
psubsw
add
nop
push
jl
stc
inc
jae
add
dec
nop
inc
mov
adc
lods
cmp
jnp
subl
mov
adc
mov
sbb
shl
mov
pop
cmpsb
sub
mov
xchg
pop
dec
adc
dec
test
jo
addb
sbb
add
unpcklps
and
es
push
or
mov
mov
test
add
andl
dec
pop
bound
movsl
ds
sbb
or
push
pop
xchg
cwtl
stc
rcl
roll
roll
and
jmp
cmp
xchg
es
xchg
and
clc
dec
in
insl
aaa
roll
jbe
imul
sbb
cmp
cwtl
scas
rorb
mov
lds
out
add
sbb
add
add
sbb
rorl
cmpl
add
test
sbbl
inc
ss
das
xchg
add
ljmp
adc
push
jecxz
roll
pusha
hlt
iret
clc
fidivl
add
adc
inc
popa
repz
xor
sbb
jecxz
add
sub
pop
push
cmp
clc
scas
rcrl
cs
add
in
orl
xchg
jo
loopne
in
push
das
adc
stos
leave
sub
addb
ret
lock
pusha
outsl
adc
and
jae
jns
sbb
mov
inc
addb
cs
incb
subb
add
das
icebp
jne
fisttpll
or
scas
fdivrl
sbb
jmp
addr16
mov
cmp
add
cmp
daa
enter
add
leave
or
add
pop
ds
enter
xchg
or
and
insl
xlat
pop
sub
dec
xor
iret
jno
fisubrl
pop
add
adc
idiv
fbstp
int
fwait
add
cmc
fiadds
ljmp
loop
jne
cmp
mov
cltd
in
ret
xchg
ret
mov
dec
stos
repz
cmp
sbb
pop
stc
add
sti
dec
mov
data16
mov
push
insb
jg
push
mov
adc
adc
cmp
add
jecxz
xchg
add
int3
add
int
andb
jle
sbb
fistps
jb
pop
or
push
adc
add
jns
fst
sub
sbb
in
in
adcb
aam
ja
jnp
and
repnz
mov
scas
or
xorl
fcomip
sub
add
dec
jnp
push
adc
or
outsl
es
add
push
fstl
add
fsubrs
stc
jo
add
mov
add
ljmp
inc
test
xchg
mov
loop
jge
outsl
jnp
adc
pop
adc
movsl
mov
jno
stos
add
add
std
xor
es
dec
lds
sub
mov
add
sub
sub
xrelease
inc
shl
mov
and
push
loopne
cmp
lods
mov
or
add
mov
loop
and
popf
insb
ret
adc
pop
and
add
add
mov
lods
insb
and
scas
mov
xchg
out
push
fs
add
sbb
dec
ja
add
sbb
sbb
push
mov
stc
jp
ret
adc
cltd
adc
add
mov
ds
addb
pop
add
fisttps
inc
scas
bound
add
push
xorl
pusha
out
push
jp
add
out
leave
lret
fimuls
sub
mov
cwtl
xchg
push
call
mov
mov
and
cmp
scas
lcall
test
filds
add
pop
insb
gs
push
jmp
cvtps2pd
shlb
mov
sbb
lock
and
sti
shrl
add
fsubs
daa
add
lret
pop
mov
add
mov
addb
fsubrl
fwait
cmp
fildl
mov
repnz
xor
sub
lock
out
std
stos
add
outsl
call
mov
jecxz
mov
mov
mov
mov
pop
clc
int3
in
adc
cmp
mov
imul
pop
arpl
jl
add
cmpsb
sbb
add
jmp
add
in
xor
cmp
sbbb
xorl
mov
pop
mov
push
xor
dec
mov
sbb
hlt
ja
lea
or
push
xor
mov
pop
push
clc
into
jp
adc
scas
addr16
js
sbb
notl
sub
loope
add
cwtl
rcr
add
out
push
shl
add
and
mov
or
addr16
enter
imul
pop
xchg
push
or
sub
pop
mov
xchg
mov
lcall
jmp
mov
add
xchg
add
ror
add
cmp
fstpl
incl
jae
xchg
in
and
mov
ja
lea
add
mov
lahf
add
mov
nop
aam
dec
pusha
cmp
add
cltd
into
cmp
sbb
add
mov
or
popa
xchg
inc
loopne
pop
nop
mov
cld
mov
outsl
add
fstpt
in
ret
fwait
stc
int
sbb
add
lahf
xchg
pop
dec
stos
pop
push
add
push
ljmp
mov
cmpl
push
cwtl
or
fdivl
lods
mov
jmp
mov
sbbb
add
movsl
fimuls
xor
and
fildl
jbe
shr
xchg
clc
sub
sahf
std
cli
scas
jne
das
popa
mov
stos
iret
jmp
add
lods
addr16
mulb
or
into
movsb
popa
xor
mov
shl
loop
push
add
jl
jae
xorps
enter
add
mov
add
mov
into
inc
xor
or
mov
sbb
sbb
cmp
rolb
adc
push
mov
jnp
cs
js
sti
sub
add
insl
jl
int3
jnp
add
paddq
shrl
xor
cltd
stos
xchg
jae
cmp
std
add
push
pop
add
mov
jbe
jle
add
stos
inc
lahf
push
bnd
add
movsb
in
mov
pop
jge
push
dec
jbe
pop
and
nop
outsb
push
mov
sbb
mov
mov
nop
cld
cli
repnz
add
testb
int
add
sbb
andb
or
pop
das
cmp
xchg
add
jp
bound
mov
aas
rcll
jmp
in
mov
push
adc
add
pop
add
imul
add
loopne
dec
add
mov
mov
imul
and
in
xor
cmp
cmp
fidivl
popf
shlb
mov
jno
subb
add
sarb
mov
out
push
mov
outsl
pop
push
cli
out
test
jg
fmull
mov
jmp
push
jae
les
add
add
pusha
inc
and
cmpsb
es
push
loop
out
mov
jbe
icebp
pop
loopne
mov
cmp
lahf
fwait
repnz
pop
mov
add
mov
loop
fcoml
add
aas
mov
stc
popa
push
das
inc
inc
loopne
add
icebp
es
jg
cwtl
mov
sub
popa
lds
add
cmp
xchg
add
loope
jle
fcomps
lahf
xchg
testb
fildl
adc
loope
xchg
adc
mov
xor
add
push
inc
cmc
push
add
loop
mov
add
in
or
push
sub
call
mov
cmp
cwtl
pop
mov
mov
pop
adc
shlb
pop
mov
xchg
lods
mov
flds
out
subl
lods
sbb
push
xchg
xor
aas
add
out
cmc
inc
inc
mov
stos
iret
adc
add
ret
std
mov
cmc
cmpsb
inc
cwtl
lock
scas
in
mov
add
mov
ja
mov
or
adc
cmp
call
mov
add
fimuls
test
xchg
jne
xchg
ljmp
loop
loop
add
fs
jl
fmull
push
and
int
inc
pop
add
jae
in
mov
pop
vcvtdq2ps
pop
lcall
adc
inc
icebp
popa
add
nop
jno
cwtl
leave
adc
hlt
inc
mov
fsts
inc
gs
add
test
repnz
push
fnsave
ret
mov
aas
add
xchg
outsb
ja,pt
and
ljmp
push
xchg
xor
int3
sbb
push
and
test
or
arpl
bound
ret
fidivl
add
rcrl
loopne
xorl
add
jmp
inc
ss
add
adc
push
mov
push
add
inc
fildll
mov
popf
add
inc
xor
in
fs
add
push
add
pop
mov
or
dec
xchg
lods
mov
add
or
jg
xchg
pop
std
or
pop
pop
and
sbb
popf
mov
xchg
and
addb
adc
dec
pop
add
repnz
mov
loope
mov
cmp
jne
shrl
mov
ds
add
xchg
mov
icebp
out
int3
daa
sub
loopne
mov
add
mov
mov
int3
mov
inc
cmc
rorl
lds
test
popa
push
lock
lcall
imul
popf
sbb
inc
adc
xchg
bound
push
test
xor
add
arpl
cli
mov
add
or
or
add
mov
sub
and
dec
mov
ljmp
js
mov
testb
ret
add
mov
ss
or
xchg
add
mov
shrb
or
add
or
test
adcb
xor
aas
mov
fildl
mov
outsl
adc
rcl
add
adc
clc
in
clc
add
and
shrb
add
pop
add
add
mov
fcmovb
and
dec
stos
xor
lock
cmp
es
add
add
xchg
push
dec
push
bound
jae
les
mov
dec
push
mov
and
adc
add
arpl
add
sbbb
mov
push
add
roll
repnz
adc
cmpsl
lock
bound
add
sahf
add
fxch
add
inc
cld
nop
jl
push
add
inc
into
sbb
or
mov
movsl
cmp
insl
push
mov
mov
imulb
imul
add
ret
dec
cmp
stos
pushf
or
in
mov
pop
mov
gs
mov
mov
push
cmp
cmp
mov
xor
hlt
jp
and
cmp
xor
sbb
jbe
push
cmp
dec
add
rcrb
jge
psubusb
rorl
inc
add
push
xchg
ja
sbb
adc
stos
pushf
pop
insb
std
add
fnstsw
leave
sbb
add
pushf
test
add
cmp
and
cmp
cwtl
jbe
movsl
pop
cmc
xor
sbb
push
inc
aas
xlat
hlt
add
aas
pop
jno
add
sbbb
add
xor
insl
add
add
add
add
xlat
xchg
repz
pop
and
cli
xor
add
outsl
sbb
push
cmp
add
stos
push
sbb
mov
mov
jne
and
add
xor
test
lock
rcrb
push
in
das
push
outsb
ss
add
into
pop
int
mov
cld
mov
aad
sbb
mov
add
aaa
cwtl
bound
pop
and
xchg
add
and
inc
cmp
loope
sbb
cwtl
jne
lea
into
cmp
dec
add
sub
sti
add
pop
push
in
ds
cwtl
cmpsl
push
cwtl
inc
lret
ljmp
lods
mov
mov
dec
mov
adc
or
mov
lock
push
daa
sbb
sbb
or
add
cltd
push
in
stos
xchg
jns
cli
push
in
repz
push
add
fs
out
add
test
add
jp
cmp
sub
fs
mov
std
mull
add
fwait
nop
mov
add
popa
mov
call
xchg
call
and
lret
add
enterw
andps
mov
or
mov
add
mov
and
pop
dec
add
out
fisttps
imul
push
frstor
mov
pop
xor
mov
mov
add
stos
cltd
scas
jb
mov
fcoms
xchg
xchg
xchg
adc
add
roll
inc
sub
mov
bound
add
xchg
lcall
mov
andl
roll
xchg
xor
cwtl
jmp
cmp
fdivl
xor
subl
dec
add
jne
xchg
testl
push
inc
lods
stc
sub
les
loopne
xchg
insl
test
data16
mov
aaa
mov
jg
popa
shlb
sub
out
scas
add
xor
jnp
pop
mov
jp
or
mov
ja
inc
push
aam
add
pop
sub
das
pusha
adcb
push
es
add
cmc
sar
fmul
or
pop
sahf
fistpl
lds
shlb
mov
pop
jns
outsl
pusha
add
sarb
dec
cmpl
push
push
mov
add
sbb
push
sub
das
xchg
sbbb
push
jg
jnp
fistpl
pop
in
addb
mov
fwait
mov
sbb
mov
es
orl
inc
test
inc
inc
pop
mov
popa
and
push
in
and
int
or
inc
hlt
dec
push
mov
ret
jo
lds
push
gs
stos
jmp
rolb
mov
adc
jo
add
pop
xchg
mov
or
stos
arpl
stos
mov
int
add
out
mov
add
xchg
jmp
int3
sbb
pop
mov
cmp
add
out
adc
push
cli
push
data16
add
inc
cmp
and
cmc
mov
or
dec
jae
rclb
cwtl
stos
dec
xchg
add
inc
xor
je
stc
sub
mov
lods
jl
dec
movsl
mov
addr16
pop
or
xor
mov
add
outsl
mov
cltd
addr16
add
xchg
push
fs
call
xchg
ss
xorb
dec
add
loop
mov
fldl
xor
fimuls
add
mov
mov
add
out
xchg
rolb
or
jbe
mov
pop
add
mov
pop
jnp
mov
xor
dec
xchg
add
fsubrp
lahf
fwait
jo
inc
das
icebp
and
jbe
sub
xchg
scas
push
psubw
xchg
add
outsb
out
mov
sahf
and
int3
push
xchg
pop
ret
sub
in
xlat
jmp
add
push
sarl
pusha
sub
push
sarb
mov
jne
adc
popl
lcall
dec
push
testl
shrl
jg
pop
xor
add
cmpsl
push
xor
add
mov
mov
nop
xchg
jne
add
sub
push
addr16
lock
mov
sbbb
xchg
or
lea
xchg
push
xor
in
adc
loop
xchg
mov
inc
sbb
push
pop
push
shr
out
in
xchg
mov
mov
aas
jecxz,pn
xchg
pop
add
lcall
sbb
jl
js
push
push
sbb
movsl
insb
jecxz
jmp
add
inc
mov
sub
in
decb
push
stos
test
jne
xor
xlat
add
pop
cmpsl
xor
push
mov
sti
cwtl
mov
ds
dec
fdivp
pop
add
out
mov
inc
sahf
pop
mov
andb
shrl
add
outsl
add
ss
jbe
popf
cmovo
jle
mov
xor
jo
pop
in
add
orb
add
and
jae
mov
or
push
outsb
sub
in
xor
insb
cmp
add
cltd
mov
push
pop
pop
adc
les
add
incb
jg
pop
adc
jne
sbb
sub
and
fmull
add
jne
add
fwait
adc
add
outsl
hlt
cld
xlat
sub
adc
adc
cltd
inc
push
fisubrl
in
add
sub
mov
movsl
pop
pop
pop
outsl
add
mov
dec
push
jne
nop
push
loopne
clc
xchg
aad
push
xor
mov
mov
pop
mov
xor
cld
jbe
pushw
cld
test
pusha
hlt
dec
nop
xchg
movq
jo
orb
inc
adc
adc
or
shll
ret
and
mov
aam
jmp
pushf
add
jg
sub
push
mov
insb
and
sub
xchg
dec
fs
mov
add
dec
sahf
mov
shrb
aam
inc
or
add
lods
cmp
cltd
outsb
dec
in
sub
das
arpl
call
cmpsb
pop
or
loopne
or
or
fisubrs
and
outsb
mov
adc
stc
daa
or
pop
push
add
test
shl
mov
pop
adc
add
adc
or
sbb
inc
popf
test
add
jle
insb
imul
lret
scas
and
mov
daa
adc
fldenv
enter
add
pop
loopne
sbb
andl
sbb
jno
or
dec
sub
add
push
jnp
loop
mov
xchg
add
jns
movsl
push
out
push
add
loop
xor
jbe
mov
aaa
repz
and
pop
mov
pop
pushf
enter
push
adc
add
std
out
add
iret
xor
lock
fcmovnu
add
mov
mov
add
imull
mov
in
cmp
cmc
push
mov
enter
fwait
jb
js
rcrb
inc
in
fs
addb
imul
clc
filds
push
cmp
popa
repnz
and
fisttpll
xor
fiadds
dec
xlat
scas
xchg
cmpsl
stos
lods
adc
dec
push
sbb
pop
sbb
push
push
xor
inc
adc
and
into
add
insl
ss
nop
sub
xchg
adc
cs
add
popa
mov
push
mov
adcb
idivb
add
orl
pop
push
sti
adc
test
dec
jno
je
jmp
outsl
clc
outsb
inc
push
sub
movsb
pop
pushf
loop
add
ja
and
out
rolb
add
clc
into
or
xchg
adc
cmp
lfs
outsl
mov
push
cmpl
out
or
dec
and
add
mov
jecxz
xchg
sbb
rclb
gs
add
adc
sub
fs
pusha
insb
jo
ud1
xor
add
cli
insb
in
add
jl
xor
mov
or
clc
jnp
repnz
cmp
lock
jl
test
pop
into
cmp
adc
in
inc
scas
add
mov
leave
js
push
pop
add
clc
test
aaa
lahf
stos
fisttpl
popf
ret
add
xlat
adc
repnz
je
and
into
lahf
and
dec
push
cwtl
sbb
mov
fdivrs
mov
out
aas
aaa
add
ljmp
add
mov
pop
xchg
dec
xchg
mov
mov
add
jns
xchg
nop
cmp
and
fisttpll
mov
in
sub
rcrb
dec
test
adc
pop
loopne
mov
pusha
imul
mov
jle
jge
test
lods
mov
inc
jns
shr
pop
bound
into
das
dec
push
mov
icebp
push
mov
lock
and
das
mov
imul
stc
or
xor
add
pop
cmp
popa
int
xchg
add
dec
iret
test
pop
ja
in
dec
mov
ljmp
das
mov
cmp
out
mov
xchg
xchg
sbb
fs
fldl
gs
pusha
dec
cmp
sarl
sub
and
stos
arpl
scas
xchg
lea
subl
and
test
test
cmp
js
jmp
adc
add
ljmp
pop
frstor
aas
insb
ljmp
cmp
out
or
loop
jo
dec
aam
push
addl
mov
rolb
jae
repnz
out
pushf
sbbb
cmp
imul
push
in
add
fnsave
aam
sub
mov
subb
mov
daa
rorb
mov
shlb
insb
in
add
sbb
add
stc
dec
inc
cli
lret
jecxz
fidivrl
dec
pop
rorl
add
and
lock
pop
mov
rcr
test
jle
push
int
jmp
sahf
add
inc
lahf
mov
in
loopne
sub
ret
fucomp
mov
das
out
jl
repnz
inc
or
mov
pusha
adc
fistpll
popa
inc
sarb
enter
sub
les
cmc
dec
sarl
add
push
push
sbb
insb
xlat
cmpl
iret
fsubs
cmp
pop
inc
lret
sbb
addr16
cld
jo
mov
dec
jno
rclb
sub
rol
xor
dec
add
mov
mull
cmpsl
test
or
inc
add
stos
loop
clc
mov
cmc
and
leave
mov
dec
xlat
add
jnp
inc
rorb
mov
dec
enter
int
or
adc
cmpsl
dec
cld
sub
add
shrl
mov
call
cmp
pop
fstps
inc
dec
cmp
rolb
fmuls
das
add
add
or
mov
push
mov
mov
ffreep
add
adc
sub
mov
int
ja
pop
jge
mov
push
ljmp
shll
mov
mov
dec
scas
inc
nop
pop
lds
add
sub
mov
sub
xor
cmc
jne
add
shll
adc
ret
out
jb
pop
mov
push
push
sbbb
call
lock
cmpsl
add
sbbl
jbe
sbb
out
es
mov
cmp
jnp
or
int3
filds
pushf
aas
popf
or
xchg
push
dec
push
mov
add
pop
mov
and
sub
pop
movlps
cmp
jl
arpl
enter
inc
jecxz
nop
add
shll
cmc
add
mov
jp
or
call
add
lret
pop
xor
repnz
cs
adc
add
and
imul
jno
adcl
das
hlt
cwtl
loope
test
mov
pop
out
out
add
pop
add
push
xor
jl
push
ljmp
mov
inc
jns
mov
sbb
jnp
out
jae
cmp
dec
add
inc
sarb
movsl
add
call
dec
rcll
cmpsl
adc
sahf
adc
pop
testb
or
sti
sbb
dec
mov
movsl
ja
lret
add
mov
xchg
mov
movsb
push
xchg
add
repnz
dec
cmp
inc
pop
mov
fidivs
lds
ficoml
and
pop
add
xchg
add
ficoml
es
fsubrs
mov
loop
inc
or
mov
mov
lods
mov
jno
lds
insl
pusha
aam
cmp
xor
shl
push
push
cmp
out
add
cmp
push
and
test
jmp
sub
mov
mov
or
and
add
arpl
mov
shll
sbb
sbb
pop
mov
add
leave
fwait
add
cwtl
call
add
stos
xchg
dec
adc
cmp
sub
sahf
jg
or
sti
mov
pusha
or
xchg
add
cmp
cld
test
mov
dec
lret
dec
add
jbe
es
adc
iret
mov
xor
inc
add
into
jmp
add
popf
lock
mov
mov
cli
mov
test
in
ret
add
mov
cmpsl
jo
inc
adcl
daa
cmp
pop
xor
pusha
xchg
fwait
adc
data16
lahf
jmp
call
test
insl
push
pop
fs
add
dec
pop
and
filds
mov
sahf
stc
call
cmpsb
test
ljmp
outsl
sub
add
ret
rcrb
inc
add
jne
xor
ja
out
push
lcall
and
and
add
inc
inc
lcall
add
aad
ja
popf
sbb
add
subl
mov
lds
and
orb
lods
stc
pusha
inc
pop
sub
popf
sbbb
jbe
sbb
scas
cmp
add
xchg
mov
pusha
std
and
jbe
aas
addr16
sbb
add
cmp
sub
inc
inc
jno
and
and
jbe
xorl
call
in
pop
mov
cld
mov
jl
std
lods
pop
cmp
cmp
inc
test
and
fnstsw
push
icebp
pop
mov
cwtl
fildl
mov
dec
cld
and
sti
jg
or
movsb
roll
mov
add
out
and
sub
xor
jg
fldl
sub
fcompl
add
dec
jge
fdivl
aam
push
xchg
dec
add
mov
sub
cmp
jl
add
add
std
dec
cs
dec
add
sti
sub
add
xor
dec
inc
add
mov
push
sbb
jo
in
add
popf
clc
int3
pusha
xchg
filds
sahf
add
mov
les
out
add
xor
add
stos
mov
jge
nop
rolb
jbe
or
adc
dec
ret
mov
add
sbb
mov
pop
sub
dec
cmp
in
and
inc
inc
jmp
sub
insl
add
push
cmpsl
add
add
xlat
xor
sbb
js
add
sahf
adc
cmpsl
lret
cmp
add
std
sub
pop
add
sbb
popa
lock
lods
add
iret
jne
addr16
ret
rcll
outsl
std
movsb
fidivl
mov
jge
arpl
adc
movsb
and
push
in
mov
inc
iret
je
inc
add
pop
sub
rolb
jle
cmp
xor
pop
jge
xor
int
inc
sub
inc
jle
inc
out
adc
or
add
mov
call
insl
add
adc
sbb
rolb
popa
leave
sub
add
mov
sub
mov
mov
jge
dec
mov
add
sbb
out
add
sbb
inc
add
clc
btrl
in
add
xchg
les
add
push
cvtpi2ps
jbe
mull
adc
inc
pop
insl
add
gs
xchg
add
mov
lds
add
pop
inc
add
inc
xor
test
xor
pop
mov
add
mov
loopne
and
daa
movsl
arpl
lods
xor
pop
icebp
jo
push
add
pop
xchg
add
pop
clc
and
pop
mov
mul
ret
roll
jbe
test
adc
sub
pop
xlat
add
aaa
cmp
add
mov
popa
add
imul
jp
scas
add
loop
xchg
add
js
cli
dec
or
xchg
adc
dec
addb
inc
push
jge
push
xlat
lods
fwait
cld
nop
pop
or
xchg
idivb
xchg
iret
daa
and
sub
add
aaa
or
loope
and
loopne
xchg
in
and
movsl
cld
or
daa
add
lcall
icebp
jne
shl
fiaddl
dec
in
sbb
ja
cmp
clc
jp
add
fucomp
mov
scas
mov
lret
add
rclb
fnclex
sbb
mov
sbb
orb
and
mov
cmp
add
jl
or
jns
xchg
aad
or
jae
sbb
jo
fiadds
ss
ret
xchg
lods
test
sbb
lcall
lret
inc
dec
lahf
in
ljmp
or
add
cmpl
fadds
xchg
add
push
call
pusha
pop
xor
and
cmp
adc
stc
pop
xor
sub
dec
and
jb
add
sbb
pop
push
out
xor
sbb
cmp
in
xchg
mov
xlat
pop
rclb
mov
les
in
add
mov
leave
in
pop
pop
jns
or
xor
ret
or
les
cmpb
pop
int
sbb
loopne
dec
jge
stos
pop
imulb
sahf
inc
aam
inc
sub
rorl
aas
mov
addb
sbb
mov
xchg
cmp
jb
push
add
dec
mov
test
js
cmp
or
sbb
xlat
xchg
pop
aad
add
sbb
js
lock
mov
or
nop
xchg
lock
adc
add
jmp
pusha
pop
and
add
fiaddl
xor
fsubrs
xchg
mov
shlb
xor
insl
loopne
pop
mov
jge
mov
into
mov
pop
inc
mov
lods
add
and
lds
adc
sub
inc
jmp
in
adc
mov
mov
sbb
adc
lods
cmpb
push
sarl
and
cmp
outsl
aam
add
pusha
lahf
ror
test
jne
push
xor
gs
inc
cmp
aas
test
add
jnp
and
sbb
dec
faddl
mov
nop
adc
cs
outsb
loopne
xlat
aad
test
sbb
fistl
adc
sbb
mov
out
pop
repnz
popl
lds
pop
cmp
push
sub
mov
add
in
popf
dec
ljmp
xchg
mov
add
cmpsb
jp
push
pop
and
stc
out
pop
cwtl
cmpsl
fimuls
ds
cmove
mov
mov
sub
fildl
mov
out
bound
add
add
xchg
adc
das
add
out
lret
es
icebp
les
push
mov
pop
sub
sbb
jle
inc
in
popa
movsb
rcr
xchg
adc
add
icebp
push
ja
sub
mov
mov
add
std
push
sub
inc
xchg
jb
in
rorb
scas
xchg
je
adc
movsl
fdivrs
add
into
cmpsb
cmc
jbe
add
inc
pop
pop
in
push
xchg
js
nop
mov
mov
push
add
shlb
pop
aaa
mov
pop
hlt
or
cli
mov
sbb
push
test
and
add
jle
add
movsl
pushf
inc
stos
int
sub
adc
inc
call
scas
adc
cmpsl
notb
addb
js
in
xor
sub
jl
shlb
add
fcomps
stos
add
jns
inc
out
inc
pop
jae
lcall
test
add
xchg
scas
pop
add
mov
sahf
push
mov
sbb
inc
into
in
in
in
sub
daa
or
dec
jge
xchg
xchg
adc
rolb
fnstenv
jecxz
push
paddusb
shlb
out
test
fimull
imul
mov
fistl
cmp
pushf
sti
push
jmp
sbb
shrb
and
cwtl
jns
mov
lock
cmpl
cmpsl
pop
leave
sub
add
and
arpl
cmp
jne
in
mov
mov
nop
push
adc
sub
mov
inc
loope
inc
lods
sbb
cmp
mov
add
dec
inc
addb
aas
cld
loop
fdiv
pop
subl
adc
nop
test
add
shl
jp
lods
pop
inc
popf
outsl
jg
xor
ljmp
pop
outsl
add
pop
adc
add
arpl
xchg
sti
loopne
bound
and
call
and
xor
adc
add
push
lds
pop
loope
nop
xchg
outsl
mov
xor
mov
or
mov
int3
mov
cwtl
adc
or
dec
push
fmull
lret
loopne
mov
mov
dec
out
and
nop
pop
pop
movsb
punpcklwd
push
imul
push
xchg
adc
mov
pop
and
pop
iret
adc
aaa
pop
in
push
rcr
ds
or
sub
add
inc
mov
add
cmp
push
mov
js
das
call
bound
lcall
addr16
jae
mov
jno
add
out
adc
fwait
cmpsb
jo
dec
mov
shl
dec
add
or
cmpsl
aas
fcmove
sbb
js
incl
cmp
xchg
ljmp
call
dec
add
push
fsubr
add
jbe
out
test
mov
xchg
clc
fadds
aaa
mov
stos
icebp
cs
clc
mov
adc
aad
arpl
xor
sar
push
adc
mov
add
adc
scas
pop
andl
xor
mov
loopne
jo
es
stos
xchg
xor
add
sbb
sbb
pop
mov
add
dec
ret
popa
enter
insb
insb
add
in
je
add
mov
xor
div
mov
gs
sbb
inc
mov
mov
outsl
test
lods
out
xor
cmp
pop
std
cli
jmp
ret
int
repz
mov
jno
add
dec
mov
xor
jmp
ret
jecxz
das
fs
inc
push
add
adc
xchg
out
add
mov
or
cwtl
add
hlt
push
aad
xor
icebp
sub
fcoms
js
add
clc
shr
fisttps
xchg
pop
xchg
push
test
dec
mov
addl
fadds
mov
add
repnz
aam
add
cmp
sub
adcl
or
or
addb
mov
add
hlt
test
adcl
fdivl
fdiv
test
jnp
aas
ja
rclb
sbb
call
leave
test
jmp
xchg
mov
out
mov
scas
dec
test
add
enter
add
lret
cli
popf
inc
sbb
ja
xchg
iret
adc
and
add
rcrl
xchg
scas
cmp
in
xorb
jp
add
pusha
orl
sbb
push
je
test
les
sbbb
sub
add
cld
inc
add
stos
cmp
push
push
jbe
dec
mov
cltd
adc
mov
xor
out
and
negb
add
fs
xor
add
sbb
shl
adc
mov
add
push
add
mov
sub
rcrb
addb
shlb
int3
sbb
cmp
push
add
test
sbb
ret
xor
or
inc
mov
movsl
mov
ss
jg
add
push
cmp
xor
cmp
pop
ja
int3
or
xor
mov
ds
sarl
stos
std
mov
adc
jmp
cmp
mov
mov
sbb
xchg
xor
or
mov
je
pop
pop
cli
or
sbbb
in
add
add
jp
lock
outsl
jg
add
sub
sub
xor
cmpb
fdivrl
ss
cmpsb
sub
sbb
ret
vpsubusw
add
xchg
cmp
cmp
testb
loopne
xchg
insb
jo
add
pop
adc
sbbb
sub
push
cs
insl
inc
aas
add
scas
pushf
xchg
and
js
sbb
push
and
pop
pop
subb
add
shufps
jmp
stos
cld
clc
or
scas
add
sahf
cmp
add
mov
pop
icebp
mov
dec
repz
out
xchg
add
and
ficoms
or
xchg
cmp
dec
pop
xchg
mov
lret
add
jb
mov
and
lea
jns
adc
or
sarl
sti
fcompl
mov
lret
ss
cwtl
pusha
data16
add
sub
add
jne
and
sar
lss
push
or
jns
fstpl
mov
outsl
add
mov
mov
sbb
shll
pop
xchg
clc
add
pop
arpl
mov
sbbb
movsb
cmp
rcrb
ror
pop
dec
into
add
or
ja
out
lock
mov
mov
push
lret
push
add
lahf
imul
stos
imul
jbe
pop
out
sub
inc
mov
lds
je
in
fimull
mov
loope
add
scas
repz
pop
mov
adc
outsb
dec
push
adc
stos
shl
add
mov
and
mov
adc
mov
push
pop
fs
imul
ret
add
shll
sahf
push
pop
xor
mov
add
rolb
add
cmp
push
xor
lahf
sarl
fs
push
ja
pushf
inc
mov
jne
mov
ret
sub
jle
add
scas
and
sub
sub
bsr
roll
xlat
xor
decl
add
sbb
lret
push
and
out
fwait
cwtl
cwtl
jle
xchg
xchg
mov
jp
pop
sub
xchg
pop
mov
mov
xor
cmc
add
jl
push
cli
mov
mov
push
stos
mov
mov
mov
les
mov
xor
lock
repnz
lret
or
pop
mov
add
sub
cmpsl
loop
add
popf
insl
addr16
stc
adc
add
cmp
xlat
fisubrs
pushf
ljmp
ficoml
sub
stos
mov
mov
int
sbb
mov
shlb
nop
jmp
pop
xchg
add
stc
lret
or
loopne
loop
mov
bound
daa
inc
mov
in
push
arpl
fsubrs
ljmp
fistl
sbb
insl
and
mov
mov
mov
les
rcrb
pop
mov
adc
xchg
je
add
jle
repz
loop
outsb
sar
std
mov
add
lahf
mov
cmp
out
cmp
add
sub
imul
cmp
scas
ja
adcb
lcall
out
pop
pop
negb
dec
add
sti
rcr
stos
add
lds
sbb
mov
push
in
je
add
dec
outsl
ret
mov
dec
push
daa
cmp
xlat
adc
jno
das
jnp
or
int3
call
or
xorb
add
cmp
xchg
inc
add
dec
pushf
shrl
aaa
lsl
jl
fildll
mov
jge
clc
mov
nop
add
dec
mov
mov
mov
adc
push
jo
lcall
mov
sbb
xchg
sbb
add
pop
push
mov
in
shll
es
outsl
mov
enter
pop
roll
insb
and
mov
and
lods
mov
mov
fldl
mov
mov
fidivl
inc
xor
sbb
stos
shrl
repnz
pop
xchg
add
out
pop
subl
test
sbb
push
mov
add
and
sbb
je
add
mov
sub
jo
xchg
shl
inc
popf
fisubs
aad
xchg
mov
and
cwtl
jo
test
stc
movsl
dec
popf
mov
sbb
mov
test
mov
mov
fwait
cmp
mov
fmuls
cmp
repz
lods
sbbb
fsubs
loope
cwtl
insl
minps
js
pop
cmp
push
and
leave
push
decb
in
bound
inc
das
and
fldl
sub
imul
loopne
gs
leave
mov
push
sub
in
mov
jne
push
out
cltd
mov
mov
adc
xchg
sarb
roll
add
pop
int
push
xchg
xchg
push
stc
js
xchg
sti
insb
rcll
xchg
sub
mov
pop
js
push
add
scas
inc
fmull
adc
or
aas
sti
cmp
xor
pop
movsl
push
ret
mov
fidivrs
std
cs
jae
dec
dec
sbb
bound
sbb
aaa
stos
add
loop
and
scas
loop
bound
add
dec
test
pop
mov
cltd
and
mov
stc
pop
js
add
add
xchg
ja
inc
idivb
jl
pop
sti
pop
lret
adc
dec
pop
ret
mov
push
xchg
data16
movsb
add
ret
sub
add
mov
ja
and
mov
jp
push
xchg
cli
call
push
int
je
add
hlt
xor
dec
adc
xchg
dec
bound
dec
shl
sub
sbb
jmp
mov
ds
enter
pop
xchg
add
cwtl
push
jb
add
mov
add
mov
lock
pop
cwtl
dec
mov
mov
jecxz
addr16
test
inc
cmpsl
jae
daa
mov
fmul
data16
xchg
addb
xor
pop
aaa
add
repz
dec
add
movsl
je
test
orl
lea
inc
or
int3
pusha
aad
inc
jg
add
dec
in
je
out
jne
add
jl
or
call
in
sub
lods
push
add
movsb
fistpl
add
xchg
gs
orl
push
mov
cmpsl
and
mov
stos
cmpsb
xchg
dec
xor
add
lea
add
sub
add
dec
pop
addr16
test
clc
arpl
add
push
xor
cmpsl
jb
xor
mov
mov
js
rep
pushf
cs
mov
lret
inc
jns
sub
aam
subb
add
or
shlb
dec
inc
les
pop
sub
pop
and
push
shlb
insl
push
lods
ret
rolb
xor
add
push
sbb
adc
xor
push
xor
mov
jb
pop
pop
mov
push
jge,pn
fdiv
cmp
lods
adc
int
or
lcall
xor
cmp
or
xchg
int3
cmp
js
add
out
imul
pop
fstpl
ret
sub
mov
es
adc
mov
clc
repnz
and
nop
add
or
pop
lock
popf
repnz
fwait
stc
loopne
inc
xchg
adc
adc
sti
mov
int3
push
inc
add
pushf
dec
stc
arpl
inc
adc
call
add
scas
add
jnp
aaa
hlt
in
scas
push
test
aas
gs
add
add
andb
icebp
pusha
fs
fldcw
ret
add
aas
sahf
fiaddl
loop
adc
add
scas
add
sbb
rcrb
in
pop
add
mov
add
xchg
jle
xor
movb
jae
mov
mov
adc
add
fs
fistpl
pop
dec
sbb
xor
mov
add
pushl
stc
call
pop
lds
add
push
cmp
cmp
sarb
xchg
addr16
fsubrp
shr
push
or
pop
fildl
xlat
inc
scas
dec
push
add
xor
xor
imul
dec
xor
xor
mov
lea
call
ror
aam
andl
jbe
add
pop
inc
in
sub
mov
jbe
push
shl
adc
sbb
add
add
mov
and
push
movsb
lds
test
dec
push
lret
faddl
shrl
mov
lret
add
push
xor
nop
dec
adc
add
hlt
ja
push
push
ret
out
das
shr
xor
mov
cmp
shrb
jbe
fdivrs
add
loopne
mov
xor
out
mov
xchg
sub
insb
add
mov
or
sahf
test
dec
mov
jl
push
ret
inc
push
or
xlat
xchg
pop
ficomps
jbe
cmpsb
add
mov
or
add
std
gs
push
mov
cmp
and
cltd
int3
push
push
ss
or
adc
popf
sbb
or
sub
jmp
out
xor
out
mov
jbe
lea
jns
cs
lea
sub
push
dec
add
push
cli
cmp
mov
sbb
out
or
inc
mov
and
or
sub
cmp
jge
std
stc
fcoml
add
aam
fdiv
sub
sbb
test
push
int
or
mov
arpl
add
enter
jmp
repz
out
or
mov
cmp
xchg
push
adc
jno
xlat
shl
jecxz
or
rorb
mov
sbb
fistpl
add
int
jecxz
sub
loopne
aaa
pop
inc
decl
sbb
mov
push
mov
add
outsb
sbb
mov
mov
out
adc
xor
mov
pusha
dec
icebp
jmp
out
movsb
dec
imul
add
add
sub
popa
loop
in
dec
mov
add
loopne
insl
in
out
iret
sbb
push
lret
xchg
sub
pusha
push
jns
dec
adcb
xorb
push
mov
or
sub
cmp
push
dec
xchg
adc
push
rolb
push
cmp
cltd
sbb
push
lea
js
add
enter
xchg
add
shrl
cmp
in
mov
ja
sbb
push
lods
dec
aam
leave
cs
mov
push
xchg
ja
out
mov
mov
cwtl
lret
sbb
add
jge
xchg
cmc
bound
push
lret
dec
movsl
add
jae
insl
jnp
push
mov
loope
xchg
mov
testl
or
pop
mov
push
das
repnz
into
xor
mov
fcoms
push
mov
pop
test
stos
lds
punpckhwd
stos
add
push
jb
outsb
push
add
es
filds
cmp
pusha
push
sub
jns
add
sahf
outsl
arpl
stc
or
ret
push
pop
add
push
jmp
bound
faddl
lods
shlb
out
fucomip
imul
enter
orl
mov
sbb
loopne
int3
push
cmp
das
cmovge
pop
cmp
mov
jo
in
mov
pushf
enter
arpl
cwtl
sbb
mov
jmp
sbbb
add
xchg
adc
cltd
add
iret
mov
xor
push
sti
xchg
in
fistl
das
add
dec
cmp
enter
cltd
jle
mov
cwtl
jo
out
aam
fs
adc
push
xor
mov
pop
rorb
adc
insl
cmp
shrb
in
add
mov
inc
inc
sti
or
sbb
xchg
stos
xchg
add
inc
je
mov
imul
cmc
inc
imul
cwtl
sub
or
pop
mov
jle
add
inc
sarb
sbb
roll
mov
aas
and
and
cmpsb
test
mov
push
icebp
pop
lds
sub
je
faddp
nop
call
or
in
add
fldl2e
xchg
enter
add
lock
mov
in
push
add
cs
or
dec
sbb
in
xlat
add
data16
pop
sub
hlt
testl
mov
sbb
imull
and
decb
jno
push
addr16
call
inc
test
and
pop
and
jle
add
pushf
test
sub
lods
cmp
in
cltd
xchg
xlat
mov
adc
add
pushf
or
lock
lcall
or
sub
stos
rorb
inc
pop
add
cmp
xor
add
addr16
clc
in
orl
inc
out
jmp
dec
add
sub
ljmp
mov
sub
xor
sub
xchg
mov
add
das
imul
jbe
mov
add
sahf
cmp
ljmp
mov
xchg
push
xor
xchg
andb
mov
sbb
pop
mov
jp
xor
bound
xor
mov
rcrb
sbb
int3
jl
aas
sbb
push
push
dec
mov
fnsave
add
pop
in
push
sub
push
loopne
cmp
pop
pop
orb
stos
enter
inc
andb
imul
jmp
rcrl
popf
cmp
add
fnstcw
xor
movsl
pop
xor
leave
fsubrl
ljmp
xor
scas
mov
sbb
pop
jmp
je
and
mov
dec
inc
push
push
cs
adc
add
inc
mov
cltd
sti
popl
pop
adc
adc
cmp
imul
mov
shlb
clc
scas
inc
mov
xor
and
ja
adc
daa
aad
sub
arpl
and
jmp
mov
cmp
mov
dec
sbb
jae
cmp
push
and
jo
jne
les
fwait
insb
je
add
add
into
push
jae
push
mov
mov
jmp
test
add
lock
xchg
push
iret
movsb
test
and
mov
lods
rcll
les
add
and
add
xlat
mov
jp
imul
adc
or
sbb
scas
xchg
and
adc
addb
out
je
xor
xchg
sub
lret
add
mov
outsb
sub
test
fists
test
ljmp
gs
sbb
es
add
fwait
push
mov
gs
add
xchg
lods
je
jbe
js
add
sbb
mov
add
push
cmp
add
pop
push
inc
sub
enter
or
movsb
add
pop
cmp
jnp
xchg
push
xchg
outsb
xor
push
clc
mov
leave
xchg
rcrl
or
xchg
cmp
and
add
dec
pusha
and
rorb
add
mov
call
cli
jne
pop
lret
jl
mov
loope
cmp
gs
add
cli
clc
sbb
push
out
hlt
pop
xlat
je
clc
adc
les
cmpsl
sub
popf
pop
add
mov
rorb
fcomps
pusha
push
jo
addr16
movb
xchg
and
jb
lock
fists
rcrl
mov
lret
sub
fnclex
cwtl
pop
mov
push
add
loopne
int3
add
popf
adc
outsl
inc
cld
addb
inc
xchg
xchg
rorl
xor
inc
inc
sbb
mov
adc
movsl
jle
or
pop
add
or
add
addr16
or
outsb
fistpl
addb
jbe
lcall
mov
add
and
cwtl
arpl
rcll
and
jno
stc
jmp
int
jae,pt
adc
ja
mov
add
sbb
aas
sbb
xor
add
outsl
jae
adc
cmp
lods
cwtl
sbb
add
mov
cwtl
or
nop
daa
jmp
rolb
arpl
imul
mov
cs
pop
add
jbe
dec
cmc
data16
pop
cmpsl
iret
push
clc
mov
dec
and
cwtl
dec
sarl
ds
or
fsts
addb
sub
push
add
cld
test
inc
stos
test
lods
faddl
stos
cmp
mov
dec
mov
mov
imul
pusha
pop
or
hlt
movsb
loope
mov
add
mov
imulb
pusha
add
pusha
fcomip
fdivl
adc
das
add
lret
clc
add
out
pop
mov
sbb
int
cmp
xchg
adc
dec
mov
popf
data16
loopne
cmpb
inc
and
sti
in
test
jg
push
push
mov
dec
cmp
jge
cs
mov
dec
adc
pop
imul
or
enter
xor
repnz
addl
mov
repnz
cmp
xlat
lahf
cld
ds
orb
sahf
xor
cmp
jae
pop
es
push
add
add
cmp
cmp
jns
pop
inc
pusha
loope
cmpsl
rol
jb
xchg
rclb
jle
push
xchg
cmp
mov
mov
ror
inc
and
subb
popa
xor
add
xlat
movsb
add
repnz
into
jmp
loop
mov
cmpb
cmp
add
mov
xchg
call
mov
add
pop
cmp
sbb
insb
xchg
dec
inc
bound
mov
jne
mov
add
cld
and
pop
call
lods
lcallw
mov
or
shl
inc
adc
addb
xor
add
jo
add
mov
cmp
inc
or
rclb
mov
iret
pop
add
dec
cmp
add
xchg
aam
cwtl
cltd
incl
out
xor
in
inc
xchg
add
mov
inc
add
imul
jb
add
rorw
jno
add
add
mov
mov
lret
mov
pop
xor
out
add
bound
cmp
roll
ficomps
leave
ret
pop
shrb
lea
xchg
ja
enter
or
xor
jns
rolb
ret
sbb
shrl
shlb
addb
jno
ds
aas
das
dec
stos
or
out
add
sbb
icebp
test
xlat
mov
pushf
or
and
cmpsb
ret
jb
inc
lea
fwait
push
mov
into
mov
aas
xor
xchg
lds
movsl
fcomi
push
add
xor
lahf
out
jecxz
jmp
add
scas
push
out
aaa
cmpsl
fsubrl
mov
jo
jbe
dec
sar
mov
add
call
addl
mov
mov
mov
sbb
enter
mov
add
sub
scas
add
pushf
mov
cmp
xchg
jns
add
mov
jg
add
subl
and
xchg
xlat
clc
mov
or
roll
dec
into
xchg
xor
xor
sbb
jb
out
iret
scas
sbb
xchg
mov
pop
in
mov
xchg
dec
xor
outsl
mov
mov
cld
shrl
add
push
push
je
cmpsb
add
push
jae
in
xor
jl
add
stos
sbb
clc
pop
push
fadds
inc
push
int3
fisubrs
cmp
lea
cmpsl
out
mov
pop
add
daa
add
mov
sarb
add
push
cli
xchg
or
mov
mov
add
push
lret
imul
or
adc
sbb
insl
inc
bound
out
add
inc
xchg
inc
cltd
decb
mov
stos
and
add
sbb
jg
lahf
mov
xchg
subb
add
lret
insb
dec
jnp
int
cmp
repz
fiaddl
in
out
cmp
test
mov
clc
inc
inc
movsl
add
fnstsw
jo
test
add
mov
or
add
call
loop
hlt
pop
movsl
add
mov
sub
push
push
sbb
jg
xorb
sub
lods
das
mov
mov
inc
mov
mov
sub
xchg
add
fnstenv
cmp
push
dec
test
sub
jae
xchg
sbbb
fdivrs
add
ret
cli
sti
add
movsb
add
imul
out
or
add
push
mov
add
or
dec
sbb
jge
pop
stos
cmp
mov
loopne
out
add
pop
hlt
jp
jae
adc
test
add
mov
and
rorb
mov
push
push
fadd
loop
jge
rorl
dec
pop
sub
mov
ja
push
fwait
lds
pusha
cmp
push
rclb
jl
and
pop
mov
add
ss
in
popf
dec
lods
add
jg
aad
pop
daa
jmp
add
mov
dec
add
add
int3
hlt
xchg
add
cmc
or
mov
xchg
mov
jne
ja
jbe
cltd
aas
cbtw
mov
jo
orb
and
sti
pusha
rolb
jg
addr16
repz
rcrl
enter
push
dec
xor
add
in
push
add
sub
incb
in
push
sarb
fldl
pusha
pusha
popf
pop
jo
movsb
xorb
add
rcrl
add
sub
aaa
cmp
filds
jmp
cmp
pop
xchg
pop
in
xchg
mov
clc
and
jmp
add
sbb
sbb
ret
mov
mov
lea
mov
lahf
or
mov
add
in
stc
and
test
pop
mov
shll
stc
mov
mov
dec
roll
xchg
xor
loope
xchg
jo
add
mov
push
adc
xchg
push
add
jle
xchg
inc
pop
lret
cwtl
loopne
pop
scas
xor
out
mov
rolb
xlat
inc
out
aas
or
add
and
jns
add
mulb
sub
test
xlat
mov
test
je
ret
sti
inc
into
mov
cmp
in
add
push
adc
jo
movsb
cmp
xchg
add
cmp
in
dec
or
sub
test
pop
sarb
lods
in
add
stc
push
or
hlt
xor
loop
out
ds
mov
mov
das
loope
jns
add
rclb
xor
rcll
push
lret
mov
psllw
out
jbe
add
push
fistl
aam
xchg
add
adc
pop
add
xchg
add
aam
int
les
pop
sbb
sub
pop
out
sbb
or
and
int3
add
sar
and
mov
dec
push
icebp
sub
jmp
into
add
shlb
mov
loope
add
lea
or
cmp
and
add
cmpl
jl
jl
add
mov
sub
ret
xor
sub
js
fisubs
lret
lods
enter
out
and
repnz
add
cmpsl
mov
add
f2xm1
sub
mov
add
lret
sbb
jmp
mov
shr
repz
dec
arpl
stc
in
std
add
inc
cmp
dec
out
popa
add
scas
and
test
sub
addr16
cltd
cli
cmp
xor
push
subb
arpl
fdiv
sbb
xchg
stos
test
icebp
sub
sub
mov
or
dec
add
jp
adc
fisubs
outsl
insl
sbb
in
cmp
lock
dec
add
ret
add
xor
push
inc
xchg
mov
adc
dec
data16
call
jns
stos
dec
fcomp
cmp
jp
rclb
pop
popf
in
fwait
inc
or
add
loop
lds
push
sbb
cmpsb
cli
inc
or
jbe
fcmovbe
and
cs
decb
repnz
rolb
push
jno
add
and
shlb
inc
xor
add
pop
mov
jne
add
sub
mov
push
add
icebp
shll
fsubs
push
cmp
loope
in
negl
jns
jle
add
out
ljmp
inc
subb
add
int3
lret
into
rcpps
fidivrl
or
nop
pushf
or
xchg
pop
dec
cwtl
xor
push
add
jmp
and
andb
popf
adc
lock
test
jp
negl
dec
pop
dec
shlb
les
push
or
pop
lret
jns
aas
sub
pop
hlt
sub
cmpsl
leave
jmp
ror
push
lock
les
stc
dec
sbb
pusha
pop
sub
add
sbb
dec
push
cs
add
arpl
jge
ja
push
add
add
rolb
pop
out
in
or
pusha
or
arpl
xchg
inc
fldcw
push
add
shlb
add
dec
dec
add
pop
inc
addr16
xor
clc
test
stc
add
ret
loope
sarb
sti
xor
sbb
and
xchg
mov
dec
flds
ja
in
or
aas
fs
in
out
add
xor
add
cli
add
cld
inc
loop
dec
rolb
jg
mov
adc
das
push
lock
outsb
pop
jle
in
loopne
inc
lods
pop
or
mov
xor
xchg
push
lret
pop
or
xor
cwtl
bound
xchg
sub
xor
lds
fs
add
movsl
xchg
push
clc
roll
out
ret
lret
inc
pop
rolb
scas
mov
jecxz
ret
rcr
xchg
cltd
dec
mov
inc
xor
cmp
or
ljmp
pop
dec
jnp
lret
stos
sub
add
mov
mov
jno
pop
aas
icebp
rolb
xchg
bound
pop
mov
xlat
sbb
popa
cmp
jns
faddl
and
mov
xchg
push
orb
pushf
mov
mov
lret
je
aam
lcall
mov
in
lahf
iret
aaa
mov
pop
je
pop
inc
add
adc
call
mov
jno
add
mov
jle
jmp
add
pop
outsb
sub
cmp
cmp
cmp
push
repz
dec
fisubl
lods
cmpsb
and
xchg
bound
loop
add
cwtl
sbb
or
xchg
std
nop
mov
xor
dec
push
add
in
add
mov
pop
mov
aaa
ja
sahf
jbe
lock
jb
cmp
popf
test
pop
outsl
pop
and
stos
add
push
pop
cmp
add
xchg
test
test
cmp
icebp
in
or
mov
mov
dec
and
xchg
jp
push
jae
push
out
jle
fs
push
pop
loop
pcmpeqw
divb
push
mov
push
pop
and
andb
aaa
fidivrs
mov
sbb
inc
ljmp
push
dec
lahf
scas
and
and
shl
mov
stos
add
addl
mov
and
test
sysenter
lds
xchg
pusha
xchg
rorb
leave
mov
ret
out
push
add
out
and
mov
push
pop
andb
sub
adc
add
int
mov
pop
sbb
fldenv
push
mov
mov
in
out
fbstp
inc
mov
xor
in
jmp
add
in
pushf
sbb
mov
push
clc
mov
rcrb
shlb
add
mov
les
fisubrs
adc
push
push
jno
add
inc
xchg
inc
test
pusha
clc
xor
les
addb
mov
lret
add
shll
fldl
sti
out
fwait
outsb
adc
mov
pop
sahf
cwtl
add
imul
sub
add
or
roll
notl
sub
mov
ss
out
and
jl
add
push
mov
push
out
mov
pusha
mov
jl
test
jo
and
mov
mov
leave
cwtl
rorb
nop
pop
clc
iret
push
add
add
rcrb
pop
movsb
insb
outsb
pushf
sbb
aaa
sub
pop
add
cltd
inc
add
xchg
mov
pop
push
xchg
cli
add
ds
lea
add
mov
mov
lahf
dec
cwtl
adc
add
push
inc
aad
test
imul
xorl
repz
pop
mov
ret
xor
movsl
test
imul
into
pop
clc
and
push
inc
xchg
cmp
add
jge
shlb
ret
and
stos
cmp
test
cli
mov
in
add
ss
sbbb
mov
inc
jle
or
ficomps
xchg
sub
xor
mov
dec
lods
sub
fdivs
std
add
jb
and
arpl
out
add
shl
add
cmp
test
gs
cmpl
filds
frstor
imull
mov
ljmp
ds
add
or
pop
call
cmp
testb
fucomi
add
js
mov
addr16
push
push
sub
test
dec
mov
add
js
cld
insl
push
sub
pop
cltd
fnsave
popa
fwait
lcall
or
insb
cs
rorl
test
in
push
mov
stc
pop
scas
jns
add
mov
xchg
ret
dec
sub
add
scas
add
pushf
int3
xchg
push
add
arpl
sub
add
shr
stc
nop
xor
add
cli
add
fldlg2
and
add
or
push
mov
add
out
gs
iret
repnz
lret
jae
fisubs
rol
jb
pusha
in
mov
cmp
push
filds
jns
add
push
aad
add
jl
adc
push
mov
add
out
int3
mov
mov
rolb
call
mov
xchg
mov
fwait
push
xor
sub
sbb
loopne
andb
xchg
mov
add
sub
pop
and
test
cmpl
sbb
sbb
imul
cli
add
adc
mov
nop
cmp
fcmovnu
rorb
aas
fdivl
adc
mov
add
dec
dec
xchg
add
mov
cmpb
pop
jl
lret
and
jg
mov
push
ja
mov
add
cmp
inc
xchg
cltd
adc
add
cmp
add
pop
enter
add
sbb
std
punpckldq
add
or
sbb
test
cs
scas
jecxz
push
popa
addl
push
sbbb
addr16
lea
ret
or
add
loop
push
jle
cmp
inc
add
into
and
add
sbb
les
lret
cld
cwtl
xchg
add
sbb
pop
add
cmp
dec
cs
add
loope
mov
pop
jno
or
or
sub
xchg
cmp
mov
add
fs
nop
adc
lcall
hlt
pop
pusha
pop
xor
aaa
dec
nop
mov
imul
es
jne
iretw
mov
subb
add
adc
fdivr
hlt
jecxz
clc
in
lcall
xor
push
pop
pop
leave
inc
int
mov
xor
jae
cli
jo
ficoml
mov
fucomi
pop
pop
fxch
bound
loop
add
nop
cmp
cmp
and
jae
cmpl
into
je
mov
add
movsl
adc
dec
lea
fmuls
sar
mov
loope
mov
leave
pop
test
or
mov
sbb
adc
jnp
filds
add
cmp
insb
mov
lea
mov
je
int
or
add
mul
fwait
mov
icebp
add
dec
rorb
add
ret
push
ljmp
test
subb
pusha
cld
mov
or
das
cmpsb
sub
add
aaa
jp
out
xchg
pop
dec
xor
and
dec
jge
js
add
nop
inc
jbe
mov
xchg
jae
mov
xor
sub
adc
jg
mov
int3
test
out
add
lahf
jge
in
or
add
scas
mov
add
mov
fbld
lret
add
sub
adc
subb
in
inc
xchg
sub
pop
orl
int3
int3
ss
cmpsl
movsl
andb
rorb
dec
mov
and
popa
int
pushf
movsl
repnz
add
lcall
repz
mov
cmp
les
and
cmp
jmp
into
adc
int
pop
push
call
add
inc
ror
mov
add
sbb
pop
js
in
pop
mov
arpl
inc
ljmp
decb
add
push
in
rcl
mov
add
fnstenv
decb
mov
or
xor
adc
push
push
mov
adc
in
jns
mov
inc
jle
test
inc
lret
repz
xorl
mov
fs
add
rolb
int
add
leave
xchg
js
inc
mul
mov
add
das
xchg
and
pusha
in
mov
add
daa
jnp
push
std
cmpsl
push
jge
sbb
pop
loope
add
sub
pop
imul
sub
pusha
sarb
fucomp
imul
xchg
pop
inc
popa
test
add
clc
pop
cmp
xor
ret
dec
add
mov
roll
popf
jnp
push
inc
fdivrl
xchg
cmp
inc
pop
cmc
cmp
add
mov
mov
cmp
in
dec
jp
jo
xchg
bound
test
test
mov
add
jne
and
es
enter
push
xchg
and
shrb
add
mov
shlb
roll
mov
adc
ficomps
nop
nop
add
push
arpl
ss
mov
aam
in
jl
subl
es
jge
inc
add
sbb
mov
mov
mov
fisubs
xchg
adc
mov
test
stos
adc
xchg
cmp
add
pop
xor
mov
pop
pusha
mov
stos
in
sbbl
sbb
push
pop
das
mov
out
orl
mov
iret
cmp
dec
cmp
inc
cmp
es
inc
cs
mov
dec
jmp
push
xlat
nop
addl
hlt
cltd
test
sarb
shl
push
and
ret
loop
mov
add
movsl
daa
js
mov
push
inc
imull
rolb
dec
les
jle
or
adc
iret
test
mov
shl
push
mov
mov
jnp
les
xchg
and
sarl
mov
notb
sub
add
arpl
sub
cltd
mov
xchg
and
sbb
or
xchg
scas
nop
jo
add
enter
test
push
stos
jno
mov
out
mov
into
add
pop
dec
and
adc
add
mov
lret
or
add
fimuls
call
pop
inc
inc
add
dec
ljmp
or
sbb
add
pop
pop
out
fiaddl
xchg
fmull
out
popa
je
into
mov
pop
pop
test
test
pop
mov
movsb
stc
outsb
fcomi
aaa
push
inc
pop
lods
stos
jb
mov
jne
add
dec
and
cs
add
cmp
sarl
lcall
inc
out
mov
add
inc
fisttpll
push
rolb
pop
jmp
shlb
push
arpl
insl
les
jmp
xchg
nop
pop
cmp
icebp
add
cmp
add
popa
cmpb
mov
jecxz
rorl
test
loope
rcrl
add
call
xchg
or
aam
lds
dec
add
pop
xchg
ds
or
sbb
jle
test
xor
out
test
xor
push
push
sbb
inc
xchg
lcall
gs
rolb
jne
add
dec
cmc
push
jmp
add
mov
cmp
cli
xor
pop
push
ret
jne
pop
shrl
decl
fsubrl
dec
and
mov
roll
clc
mov
dec
lret
mov
sub
lods
insb
push
in
adc
ljmp
lods
aas
aad
add
lret
sbb
clc
cs
ja
mov
aad
and
mov
rcr
inc
sub
and
and
ss
enter
add
stc
and
add
xor
adc
jae
xchg
xchg
out
pusha
add
mov
add
outsb
stos
and
push
pop
sbb
and
lret
ss
inc
add
sub
in
add
xchg
sub
packuswb
mov
es
gs
ret
sub
sbb
stos
sahf
rolb
int3
push
xchg
push
xlat
mov
sbbl
push
pop
ret
mov
mov
out
imul
sub
mov
enter
icebp
pop
jmp
ds
iret
or
mov
push
mov
mov
dec
pusha
or
add
xchg
pop
xchg
addl
movsb
negb
add
lret
pushf
mov
enter
pop
aad
adc
arpl
add
add
data16
mov
cmp
jbe
jo
cmp
aam
xchg
add
dec
sarb
sti
pop
mov
dec
inc
sbb
mov
fmull
and
pop
clc
push
cli
add
add
ds
lahf
lcall
mov
ret
add
dec
lods
pushf
mov
push
mov
addb
je
add
sar
ja
jae
jnp
or
popa
inc
shrl
inc
jbe
nop
jp
orl
fmulp
add
dec
dec
adcb
sbb
cmp
faddl
bound
incb
dec
mov
add
pop
in
outsl
mov
std
popf
inc
or
xchg
xchg
sub
add
adc
sbb
add
inc
test
or
add
xchg
loope
scas
add
rcll
pushf
popf
pusha
jo
jge
xor
lahf
outsb
xchg
arpl
add
mov
pop
jbe
hlt
pop
popf
xchg
mov
mov
push
shr
xchg
sub
mov
dec
add
loopne
push
add
jmp
lret
add
mov
test
pop
popf
add
arpl
aas
mov
push
add
divl
sbb
call
outsb
ficomps
add
inc
out
or
cmpsl
add
scas
push
in
push
daa
mov
shrb
pop
iret
or
sub
cmpsb
add
cmpl
or
xlat
lods
xor
adc
repnz
outsb
aad
aas
add
stos
loopne
cmp
add
sub
add
rcl
sbb
adc
cmp
nop
sahf
scas
insl
add
les
sahf
lahf
add
push
and
push
cmpl
or
faddl
or
push
mov
cmp
pop
add
or
sarb
mov
sbb
jo
mov
js
roll
or
fwait
add
jg
push
fmull
scas
jae
sub
adc
mov
loopne
or
add
pop
or
push
out
fwait
mov
sbb
push
add
add
aad
and
jo
std
ljmp
or
mov
sbb
push
test
xchg
scas
sbb
jnp
cld
sbb
cmpsl
jecxz
addb
or
sbb
xchg
inc
stos
test
push
mov
inc
add
add
out
push
sbb
xor
jne
add
and
or
lock
push
loopne
dec
repnz
shlb
mov
or
pop
sub
jp
imul
xor
cmc
cmpsl
repnz
clc
cmp
mov
pop
in
xor
lods
pop
sub
daa
add
cmp
add
in
push
cs
add
and
push
or
push
pop
cmp
dec
pop
dec
cmp
add
sub
fildl
inc
jge
cmp
push
push
cmc
cmpl
stc
lock
mov
push
add
mov
inc
add
or
mov
pop
xor
add
mov
xor
adc
dec
pop
lret
add
cmpsb
lahf
clc
or
add
insb
jecxz
add
add
addr16
add
sub
pushf
add
jbe,pn
int3
daa
inc
add
mov
mov
std
or
jo
adc
leave
xchg
imul
mov
jbe
mov
mov
stos
xchg
inc
sahf
testb
lock
xorb
cwtl
push
jecxz
loopne
in
add
cmp
lods
ds
adc
cmp
mov
push
arpl
mov
mov
pop
inc
cld
incb
shrb
sahf
and
or
cmp
xchg
add
lods
inc
and
test
imul
jp
cmp
jle
dec
dec
clc
add
or
adc
popf
ret
aas
cmp
jno
mulb
push
inc
sbb
xor
push
and
jg
pop
adcb
out
ret
pop
sarb
enter
inc
mov
cmp
push
out
dec
jno
add
imul
xorb
dec
mov
pusha
jo
scas
call
iret
movsl
fucomi
sub
add
jae
cmp
mov
into
addb
add
jecxz
sub
and
add
fsubrs
repz
jne
jnp
dec
mov
dec
sub
sub
cli
add
add
movsl
jae
sbb
mov
adc
outsb
pop
mov
adcb
mov
add
hlt
in
mov
push
inc
and
jb
or
add
mov
outsb
mov
es
jns
add
push
sub
cs
push
repz
mov
loop
mov
iret
cmp
hlt
jno
rcrb
add
ficompl
ret
lock
add
mov
jns
addr16
in
lret
cmp
adcl
add
lret
cmp
sbb
shrb
push
or
xlat
add
iret
push
daa
inc
sbb
leave
push
sub
nop
fs
jne
mov
mov
stos
in
push
fwait
pop
adc
xchg
sbb
push
add
cmp
andl
mov
repnz
xchg
jle
imul
push
fsubl
jae
and
jns
xorb
jecxz
gs
test
stos
das
shrb
insl
push
add
sub
xchg
out
jl
cmp
mov
pusha
lods
pop
lret
cwtl
add
pop
jle
insl
outsl
or
cmp
daa
lahf
rclb
movsb
add
call
hlt
xchg
insl
add
mov
xchg
sbbb
jle
addr16
lds
stos
fwait
add
inc
out
push
test
mov
add
rcrb
pop
in
rorb
add
sub
push
les
sahf
cltd
dec
or
shr
add
or
popa
mov
add
sbb
scas
sub
sti
enter
subl
pop
push
add
mov
leave
mov
jp
lods
add
mov
out
mov
mov
push
add
aaa
xchg
imull
adc
inc
xor
sub
insb
add
and
or
mov
mov
sbb
xchg
cmpsb
mov
sbbb
sub
inc
sbb
lods
test
xor
clc
xchg
xchg
push
sub
xorb
push
add
xchg
es
adc
mov
mov
aas
adcb
out
cli
pop
jo
aas
adc
add
jg
cmc
test
mov
lret
push
in
negl
and
in
and
sub
and
pop
mov
xorl
push
out
mov
mov
cmpb
push
popf
repz
nop
jg
fcmovbe
aam
push
jo
iret
and
xor
jecxz
mov
in
fisubs
push
out
or
inc
mov
movsb
les
aam
out
enter
rcrb
add
js
aas
scas
push
sbb
cmp
in
mov
add
shlb
fwait
xchg
add
out
data16
icebp
fsubrl
mov
adc
mov
xchg
adc
add
js
cmp
repz
ss
lea
adc
inc
sub
add
pop
clc
clc
add
std
and
pop
sbb
adcb
nop
inc
int
mov
imul
mov
mov
add
push
popa
test
pop
mov
push
es
cmp
adc
fwait
addb
pop
add
jo
cltd
xlat
mov
test
out
gs
or
add
sbb
stc
mov
jne
push
inc
mov
pop
ja
call
add
sbb
push
cwtl
dec
add
inc
and
pop
push
mov
dec
and
mov
mov
ss
loop
add
pop
sbb
add
add
leave
or
mov
notb
inc
jl
pop
mov
leave
push
or
inc
movsl
cmp
or
push
add
lret
xchg
mov
mov
add
jmp
push
cmp
mov
jae
dec
movsb
jbe
movq
mov
mov
sbb
movb
out
loopne
cmp
cld
rcrl
andb
andb
scas
push
lods
add
aam
lods
dec
cmc
and
stc
jg
xor
mov
add
jae
cmp
pop
int3
xchg
aas
or
in
pop
fdivrs
psubb
dec
inc
cmp
cwtl
call
fsubr
es
hlt
loope
xor
mul
add
add
mov
sub
inc
clc
jmp
dec
addr16
pop
pop
lret
add
andb
shrb
sahf
aas
jge
add
and
enter
popa
sub
jo
add
call
and
fwait
in
fisttpll
xchg
jno
subb
mov
incb
andl
sarb
ret
xor
pop
pop
js
and
pushf
in
addb
rolb
lock
pop
add
test
hlt
pusha
test
mov
adc
xchg
add
and
mov
loopne
out
repnz
movlps
rolb
fbstp
aam
fs
nop
inc
unpcklps
dec
pop
mov
popf
mov
cmp
add
pop
arpl
mov
mov
cwtl
les
out
int
loopne
or
jle
jp
add
test
fcomp
sbb
in
add
loop
call
add
adc
xchg
or
rorb
sti
cmpsb
sar
cli
sbb
sbb
inc
push
push
testl
push
lahf
pop
pop
adc
cmpb
mov
lock
add
sub
jmp
add
testb
add
sub
push
sahf
push
loope
mov
sahf
outsl
add
sbb
push
push
lods
pop
sub
add
xchg
arpl
xchg
insb
fdivrl
or
mov
add
dec
xchg
add
flds
sbb
jmp
inc
and
or
aaa
inc
add
mov
leave
lds
add
xorl
popf
cld
or
sub
fldl
ja
lods
push
hlt
xor
sbb
inc
aaa
mov
jbe
out
mov
js
out
add
adc
rolb
dec
and
arpl
push
scas
add
clc
xchg
sbb
test
call
ret
mov
or
adc
mov
add
mov
in
xchg
ds
mov
add
push
mov
bound
imul
sub
adc
leave
xor
paddsw
mov
ss
jmp
fcomps
or
push
ret
icebp
repz
add
mov
rclb
add
jmp
je
push
in
add
sub
inc
mov
jmp
sti
xchg
outsl
cltd
or
outsb
pop
and
and
push
mov
int
loope
mov
out
in
fidivs
pop
jnp
nop
mov
cli
adc
orb
xchg
outsl
or
xor
mov
add
cltd
adc
in
adc
mov
xlat
mov
push
insb
push
test
sub
pop
push
fld
pop
adc
mov
sbbl
jecxz
cltd
into
jae
sbb
js
add
add
cmpsb
xor
rolb
xchg
mov
insb
adc
inc
mov
sub
fdivs
nop
jge
cmovbe
push
pop
and
fcmovnu
xchg
lahf
sarl
inc
aam
popf
outsl
add
int
mov
mov
and
and
pop
test
add
scas
fnstenv
mov
push
push
imull
cmpsb
pop
xchg
xchg
faddl
and
mov
out
cwtl
ja
fs
hlt
repnz
test
or
mov
add
push
adc
loopne
dec
cmp
jecxz
testb
scas
andl
insb
dec
mov
add
cltd
mov
mov
sbb
sbb
loope
cmpb
fwait
popa
dec
div
mov
add
sub
arpl
cs
movsb
pushf
xchg
pop
ja
std
inc
push
fld1
movsl
cmp
and
inc
xchg
xor
add
inc
pushf
jge
pusha
rolb
cwtl
pushf
adc
jg
sbbb
mov
and
out
sbb
lea
adc
outsl
jmp
mov
fs
sub
popa
and
lret
jne
pop
add
cmc
adc
out
mov
pop
popf
xor
fcoms
ret
mov
rol
dec
inc
push
loopne
cmc
push
lret
std
jo
inc
gs
mov
into
int3
jmp
in
cmp
mov
mov
subb
sbb
cwtl
pop
repnz
push
test
adc
xchg
lret
les
xchg
rorb
lret
ret
pop
jecxz
nop
add
bnd
ds
orl
xorb
rclb
sbb
jg
push
daa
shr
ljmp
out
mov
lcall
xchg
xor
sbb
gs
or
lea
dec
mov
add
adc
in
add
sub
add
icebp
jecxz
mov
add
addl
push
cmpsb
add
pop
mov
ljmp
add
and
movsl
enter
push
jle
dec
or
dec
shl
inc
insb
mov
loope
js
dec
clc
inc
mov
add
mov
push
jo
add
ljmp
add
push
clc
jl
insl
jmp
pusha
xchg
mov
cld
add
cmpsb
jle
or
and
daa
cmc
movb
xor
fdivrl
and
add
test
add
imulb
sar
dec
fwait
mov
insb
push
pop
push
jle
or
into
adc
cmp
fcomps
stos
inc
ljmp
stos
push
mov
pop
sbb
jmp
or
mov
lock
pop
pop
jbe
adc
lret
sbb
adc
dec
add
fbstp
xchg
fldcw
adc
stos
outsb
outsl
pop
mov
xchg
lock
pop
lret
fnstenv
jmp
sub
push
mov
sbb
add
aam
or
inc
repnz
dec
push
cmp
add
stos
add
imull
aas
maxps
xor
push
movl
mov
adc
out
addr16
xor
enter
mov
idivl
fnstsw
jmp
adc
cmp
xlat
cli
icebp
add
dec
aaa
out
add
lret
stc
je
cltd
jnp
sarb
dec
rcl
add
test
rorl
xor
pop
cmpsl
adcb
fucomip
xchg
pusha
out
add
subb
push
lret
add
movups
imul
cwtl
icebp
xlat
mov
mov
push
mov
mov
sti
arpl
aaa
lahf
add
adc
inc
push
jns
out
pusha
adc
jge
dec
or
js
jnp
and
lcall
stc
add
cltd
jmp
lret
dec
into
add
fsubrs
xchg
push
lds
add
cmp
adcb
cmpsl
pop
lea
mov
xchg
sub
outsl
iret
sub
mov
in
or
add
cmp
mov
movsl
or
adc
loop
jno
xlat
or
add
dec
cmp
ds
shrb
jae
lock
popa
inc
cmp
shl
icebp
out
xchg
or
cwtl
andl
lods
add
jmp
lds
incl
push
mov
sub
int3
adc
xlat
addb
ljmp
add
testl
jne
add
nop
bound
xor
int3
shrl
mov
adc
dec
sbb
out
mov
add
and
jno
mov
sbb
and
fadd
jmp
add
add
in
ljmp
fsubl
icebp
cmpb
outsl
add
aad
scas
cmp
xor
and
rclb
data16
into
insb
add
dec
push
cmp
inc
pop
lcall
dec
subl
roll
lods
fdivrl
fstpt
push
sbb
jle
dec
inc
push
pop
add
mov
xor
addr16
mov
mov
sbb
mov
mov
shlb
add
cmp
cmpsl
jp
pop
or
push
xlat
subb
push
sbb
movl
cmp
jl
mov
into
add
jp
and
cld
fiaddl
add
jns
add
les
nop
mov
sbb
inc
out
shr
add
mov
movsb
fisttpl
pop
aam
test
push
fucom
fsub
add
js
add
jns,pn
xor
into
cwtl
pop
or
xchg
in
add
add
daa
push
fwait
in
fimuls
test
sarl
fadds
clc
pop
jmp
sbb
insb
pushf
andb
pop
push
jg
mov
sub
add
mov
mov
pop
mov
int
dec
pop
subb
jo
cli
dec
ja
adc
stos
pusha
pop
les
add
ja
and
leave
add
lahf
inc
mov
xor
adc
pop
leave
add
clc
sub
xor
daa
out
fildl
dec
rolb
push
imul
dec
add
mov
inc
add
jbe
jmp
sarb
and
loopne
cli
add
lahf
dec
cld
xchg
cmp
out
adc
add
sbb
jno
out
cmpsl
mov
fwait
push
cmpb
int3
push
ja
pop
add
and
sub
push
dec
jmp
mov
jge
add
inc
fsubrl
add
add
cmp
xchg
cmp
cmpb
stos
mov
lret
mov
mov
inc
icebp
sbb
mov
and
dec
and
add
jo
add
adc
and
or
cmp
subb
jbe
add
stc
mov
push
mov
jns
inc
cmp
add
cwtl
push
cmp
ss
call
cmp
jge
aad
mov
pop
pusha
popf
push
test
lret
fwait
add
inc
xor
data16
mov
mov
add
dec
scas
pop
nop
faddl
sbb
out
lret
pop
add
mov
out
or
and
or
xor
inc
cmpsb
outsb
pop
xchg
jmp
insb
xor
es
repz
lret
add
cmp
ljmp
aaa
dec
or
inc
loopne
cmpsb
je
lcall
and
push
lret
xor
inc
mov
clc
add
in
xor
orl
add
sub
insl
scas
loopne
stos
add
xor
leave
add
cmp
clc
jnp
cli
xlat
lock
push
and
add
in
dec
clc
andl
mov
mov
into
or
pop
cmp
inc
mov
mov
call
arpl
or
sti
popa
and
xlat
mov
icebp
mov
mov
negb
cwtl
add
adc
push
xchg
add
repnz
xchg
jle
jge
add
inc
xchg
sub
lods
add
ffree
and
cmp
inc
xchg
mov
adc
shr
fidivrl
imul
sbbb
sub
cwtl
rorb
jo
test
shlb
and
mov
pop
int3
addb
call
es
out
nopl
adc
push
cwtl
pop
pop
add
lods
iret
adc
movsl
or
loope
push
mov
sbb
and
pop
mov
cmp
and
cmpsb
jae
jg
push
flds
ret
pop
adc
out
test
pushf
add
iret
cli
push
hlt
ficoms
pop
std
out
rorb
cmp
xchg
data16
inc
push
aad
add
stc
test
cmpsb
sbb
inc
notl
pop
mov
outsl
imul
jns
push
inc
xchg
cwtl
add
mov
in
add
cmp
push
and
fidivs
pushf
inc
lret
xor
icebp
hlt
adc
repnz
sbb
sbb
inc
out
add
testb
int
push
fcoml
xlat
and
push
mov
jne
jmp
loop
lods
scas
pop
mov
add
dec
cmpsl
mov
shl
in
pop
and
in
rolb
xchg
add
nop
out
mov
add
sub
mov
loop
mov
sti
leave
inc
rolb
cs
das
and
cmp
add
movsb
add
inc
push
inc
add
mov
lea
rclb
shl
mov
add
test
xor
leave
push
call
mov
cmp
lods
push
and
pop
or
push
add
and
dec
inc
int3
dec
out
fldenv
jbe
xor
les
shr
js
and
add
fnstcw
addl
adc
les
lods
outsb
sti
xchg
add
pop
mov
inc
and
loope
add
stc
stos
test
insb
pusha
jbe
xor
outsl
pop
gs
mov
cmp
add
add
into
jle
notl
push
adc
add
inc
mov
push
or
push
cltd
sbb
pop
es
sti
cltd
add
lcall
cltd
push
scas
mov
add
in
push
xor
push
imul
test
shll
cmp
pop
sbb
inc
add
pushf
mov
addb
push
fnstsw
mov
mov
insl
rolb
jnp
xchg
ss
pop
adc
add
jg
dec
ds
and
sbb
pop
and
stc
push
adc
test
cmp
out
cmp
test
rcrl
xchg
imul
ret
cmp
push
andb
dec
add
jp
fadds
pop
adc
push
and
jno
xor
popl
out
loopne
sbb
repz
pushf
add
inc
sbb
daa
and
and
push
add
push
xchg
cmc
mov
insb
sub
stc
adc
inc
add
add
mov
call
jnp
jo
xbegin
sub
mov
test
pop
jg
add
pop
lods
sbb
mov
adc
nop
lods
sarb
push
inc
mov
and
fdivrl
push
xlat
aam
inc
test
push
es
incb
gs
mov
push
dec
xchg
fstpl
add
pop
into
inc
ficoms
and
dec
jle
in
cltd
xorb
in
pusha
mov
adc
and
enter
sub
bound
and
jmp
pop
add
cmpsb
dec
ja
pop
push
mov
cmp
xor
lahf
and
ja
test
add
jle
push
cmp
jns
pop
pop
daa
clc
dec
shrl
mov
scas
mov
in
xchg
jns
add
xor
insb
pushf
xor
pushl
out
add
aas
cmpsb
filds
jo
dec
in
enter
jns,pn
lret
stos
dec
add
into
jbe
in
ds
repz
mov
adc
and
jnp
or
mov
test
loop
pop
popa
add
jl
adcb
sub
inc
das
mov
jg
pop
pop
add
jno
jecxz
and
sbb
push
mov
dec
add
ret
adc
popa
mov
mov
orl
mov
icebp
or
fbld
adc
add
cltd
shr
lods
cmp
xor
cli
xor
je
cmc
inc
call
xchg
mov
sbb
and
add
or
sbb
sbb
fsubr
xor
mov
mov
aad
jge
les
push
jo
cmpsb
xor
cltd
push
insl
scas
andl
and
mov
outsb
xor
sti
jno
inc
in
adc
add
jg
lret
add
pop
inc
push
lock
xchg
ljmp
add
mov
divl
and
in
dec
repz
fmull
sbb
mov
cmp
mov
imul
jae
loopne
mov
lahf
mov
add
sub
sbb
loope
js
xor
cltd
sbb
add
adc
sbb
je
daa
push
inc
divb
inc
push
ds
jge
arpl
nop
add
adc
cmpsb
pop
clc
mov
dec
add
arpl
add
movsb
mov
dec
dec
sbb
lahf
stc
lds
faddl
add
adc
nop
iret
mov
repz
pusha
lods
mov
add
ud0
rorl
mov
xchg
testl
jp
aaa
jle
cmpb
jge
ret
outsb
repnz
add
mov
lods
xchg
xorl
and
mov
je
adc
addr16
lock
dec
les
call
jle
pusha
xchg
push
add
or
andl
jp
add
mov
shrb
xor
sbb
js
mov
jg
mov
es
xchg
sbb
stos
mov
pushf
idivb
pop
rcr
and
dec
add
push
loope
cmpsb
in
movl
cwtl
clc
sbb
js
fiaddl
icebp
pop
inc
xchg
imul
or
shrb
add
mov
cmp
fwait
adcl
jl,pn
sub
cmp
int3
push
popa
push
mov
outsb
jmp
sbb
clc
fistl
pop
jbe
push
xchg
xchg
aam
rolb
ret
fiadds
clc
mov
loop
cmpsl
and
add
in
imul
xor
addb
orb
mov
sub
out
adc
in
xor
jp
aad
mov
out
je
jle
push
sub
add
xor
cwtl
dec
scas
loop
lods
mov
add
jno
test
mov
leave
add
mov
sub
stos
add
shlb
cmp
adc
movl
inc
and
repz
mov
lret
clc
xchg
clc
dec
loopne
int
leave
dec
add
xor
add
fdiv
push
pop
pop
xor
sbb
loopne
add
cmpsb
add
lock
icebp
fdivl
dec
lret
inc
add
rorl
xor
loopne
add
arpl
pop
test
loop
and
jecxz
cmc
sub
aad
imul
add
movsl
or
int3
imulb
add
outsb
xchg
outsl
daa
cmp
dec
inc
data16
xor
movsb
mov
stos
movsb
or
lods
push
std
les
mov
testb
push
pop
sub
popa
stos
pop
and
add
xor
test
jno
aas
pop
out
add
mov
pop
xor
jl
cmpsl
les
jo
aad
mov
stos
sbb
pop
add
push
xlat
mov
adc
aad
cli
roll
repz
and
mov
push
pop
add
out
sub
pop
test
fdivrl
hlt
leave
add
dec
push
mov
push
mov
sub
pusha
mov
add
xchg
icebp
into
adc
xchg
xor
adc
add
cltd
pusha
icebp
jbe
or
fs
movsl
mov
xchg
nop
ret
test
rclb
pop
jae
dec
adc
test
sbb
jb
add
cmpsb
jnp
cmp
gs
adc
sahf
add
loope
in
stc
xor
loop
push
xor
cmpsl
cltd
mov
or
push
dec
add
call
icebp
mov
movsl
xchg
dec
test
pop
leave
jae
mov
int
test
loope
pcmpeqb
clc
mov
jl
andl
test
xchg
fcoms
repnz
lock
nop
sub
test
scas
shrl
add
xchg
jno
mov
sub
jge
add
les
jo
fsubrl
xor
mov
adc
mov
mov
shlb
add
sbb
pushf
repz
pop
or
adc
and
cmp
cmp
add
adc
jb
inc
mov
mov
pop
xchg
add
outsb
rclb
push
or
sub
add
lods
outsl
dec
push
cli
sbb
mov
or
das
cmp
outsl
xchg
out
and
les
lcall
sub
mov
mov
call
adc
fld
add
int
mov
shr
icebp
shll
add
movsb
add
jmp
and
add
sbb
jb
repnz
xchg
pop
mov
inc
xchg
loope
ret
adc
cmp
popf
push
mov
push
or
adc
insb
mov
xchg
pusha
fcompl
out
inc
andb
mov
adc
dec
cld
add
daa
or
sbb
add
enter
cmp
xor
in
or
mov
jne
cwtl
jo
and
add
mov
pop
add
movsl
pop
mov
imul
push
aad
dec
mov
cmp
mov
sub
xchg
push
cmp
clc
add
xchg
jge
in
loopne
add
hlt
xlat
shll
and
add
mov
repnz
push
adc
add
loopne
lock
xor
in
out
inc
call
fadds
test
fldl
les
nop
jmp
roll
lahf
push
adc
add
in
fst
test
pop
mov
mov
inc
mov
cmp
das
mov
rcrl
adc
dec
insl
xchg
push
push
test
stc
push
or
jmp
cmp
popf
xor
roll
and
mov
lahf
mov
popa
add
in
fnsave
sbb
test
test
mov
pop
aaa
add
std
sarb
test
movsb
inc
cwtl
push
ds
xchg
repnz
sti
add
pop
gs
pop
sbb
inc
mov
or
jo
pop
sub
es
fbld
ja
and
cmp
shlb
dec
addl
in
pop
imul
adc
repz
fcoms
or
mov
movsl
push
ret
pusha
fs
jnp
test
std
push
mov
mov
or
jmp
or
int
pop
and
xchg
sbb
jne
pusha
movsl
push
jl
and
iret
addb
pop
pop
ret
cltd
xor
repz
sbb
loope
sahf
sub
dec
hlt
pusha
fwait
sbb
ficomps
or
in
jmp
adc
loope
sub
rolb
cmpb
add
repz
or
push
sub
clc
lock
test
inc
sti
aam
mov
and
shll
dec
jnp
sub
ss
icebp
jo
add
xchg
scas
push
or
lods
cmp
cmc
movb
cmp
testb
mov
pop
aas
cmpsb
aam
inc
cmp
icebp
in
arpl
gs
add
pop
sub
nop
aaa
ljmp
fwait
clc
ret
adc
add
sbbb
cmc
push
add
inc
add
int
dec
scas
pop
dec
das
pop
inc
or
pop
fcomp
incl
inc
cmp
xchg
loop
add
ret
add
or
test
mov
xor
adc
imul
xor
mov
in
lods
add
rorb
add
and
inc
xchg
stc
lret
xor
rcll
inc
in
pop
lret
test
mov
mov
repnz
mov
rcrb
add
jmp
out
dec
inc
add
fnsave
sub
int3
out
pop
or
or
loopne
outsb
add
adc
call
repnz
cmp
cs
pusha
mov
cmp
mov
jge
mov
push
mov
pop
jl
ret
imul
insl
inc
mov
loop
sahf
push
shl
mov
add
mov
mov
add
sub
add
fs
sub
leave
sbb
stos
push
dec
lods
jb
int3
inc
pop
pusha
aas
xor
or
inc
nop
xor
pop
adc
push
call
jno
rcrl
shl
fistl
stos
sbb
test
call
movsb
xchg
jne
adc
test
pop
adc
out
hlt
sub
xchg
xor
stos
add
stos
fwait
enter
and
fsubrl
add
cmp
into
gs
xor
xchg
jae
pusha
in
push
in
add
or
mov
into
inc
lcall
inc
call
xchg
xor
daa
jge
add
xor
test
xlat
lds
xor
out
jo
clc
jae
add
sbb
cmp
lods
jle
es
add
gs
imul
mov
sbb
mov
mov
cwtl
repz
loope
testl
push
inc
add
ss
xlat
sub
add
sbb
or
in
sub
pop
repnz
sbb
mov
add
fwait
sub
dec
dec
sub
sub
test
mov
stc
icebp
pop
add
cmp
push
test
insb
addl
push
sub
out
cmp
pop
shlb
and
xchg
in
xor
adc
inc
jne
and
or
cwtl
pop
add
pop
pop
sub
dec
shl
mov
out
popf
push
pushf
cmpb
and
and
mov
mov
xchg
add
ss
lea
mov
inc
negl
out
sbb
dec
in
or
out
and
xchg
in
fistpll
adc
mov
dec
pop
sub
inc
mov
and
clc
loopne
fcmovnb
rclb
call
stos
jmp
cs
out
loopne
mov
test
jnp
lahf
pop
in
add
sti
leave
mov
push
hlt
push
lea
xchg
inc
xor
add
jp
movsb
enter
call
sub
pop
inc
jl
sbb
stos
adc
cmpb
icebp
inc
arpl
movsl
subb
in
in
pop
mov
and
aas
popa
jne
jo
inc
hlt
shl
add
test
fadds
mov
or
mov
pop
aas
cmp
pop
jb
sub
add
mov
rclb
sub
jo
adc
stos
or
xor
loope
std
into
pusha
call
adc
inc
pop
inc
hlt
test
stos
mov
jge
sti
add
orl
add
sti
movsl
call
es
fcomi
dec
push
cmp
aas
add
sahf
mov
jae
pop
add
jnp
adc
inc
les
mov
sbb
or
lahf
orb
jne
mov
shrl
and
xor
nop
xor
and
mov
ret
sti
aad
or
push
jo
dec
movsb
cmpb
adc
jmp
sbb
shrb
add
outsb
cmp
aaa
inc
or
cmp
pop
adc
push
or
mov
scas
es
je
pop
adc
lods
jns
xchg
add
cltd
mov
sbb
pop
pop
lahf
je
test
je
pop
fmuls
push
in
cmp
lret
imulb
mov
out
xlat
dec
mov
add
je
add
push
int
xchg
test
dec
mov
dec
adc
fistpll
cmpsl
or
mov
scas
aaa
das
mov
call
jl
rclb
clc
mov
pop
or
and
lods
sub
mov
add
dec
lock
mov
leave
add
in
cld
rcrb
pop
ret
adc
mov
mov
push
out
add
fidivl
std
add
pop
flds
mov
nop
pushf
push
add
push
daa
push
cmc
scas
adc
loopne
push
pop
outsb
roll
push
test
add
movsb
sub
stos
or
xchg
mov
clc
fdivs
lea
adc
sub
shlb
pushf
mov
push
mov
fwait
pop
adc
pop
pcmpeqd
adc
les
sbb
iret
jmp
dec
add
jecxz
sbb
push
mov
jne,pt
cli
jo
or
and
out
orb
pushf
sub
mov
mov
icebp
int
add
fwait
push
mov
cmp
cmp
rclb
and
mov
sbb
mov
add
cmc
pop
sbb
sub
cmp
pop
stc
lret
fs
add
in
jecxz
cwtl
push
gs
jnp
sbbb
roll
pop
sbb
mov
mov
mov
adc
and
inc
ror
add
mov
push
ret
jecxz
mov
mov
jecxz
push
pop
dec
cmp
mov
add
dec
mov
pop
scas
lods
or
fs
jb
add
inc
orl
loopne
adc
sub
inc
or
shlb
add
xchg
and
jge
arpl
arpl
jno
movsl
push
pop
sbb
inc
add
xchg
push
hlt
push
adc
push
ds
fs
mov
add
sub
mov
mov
mov
stos
cmp
mov
pushf
js
add
mov
rolb
dec
lods
aas
cs
out
sbb
add
andb
les
int3
jne
and
pop
repz
daa
fidivs
or
add
sbbb
and
pop
jne
inc
pop
int
inc
xchg
ds
adc
mov
adc
addr16
in
xor
test
cmpsb
inc
xchg
dec
repz
cs
loopne
dec
xor
lds
popf
nop
pop
and
mov
fimuls
add
jp
and
xor
mov
xchg
nop
adc
fldl
iret
neg
and
lret
sbb
pop
adc
xorl
mov
push
icebp
pop
clc
aad
cmp
push
xor
inc
add
test
cli
sbb
sub
add
or
or
cmp
faddp
add
aad
les
sbb
push
jo
sahf
jnp
add
jns
inc
fucom
push
pop
dec
ds
mov
fcoml
or
cwtl
addb
fs
mov
pop
shll
sbb
pop
jbe
add
jle
add
xor
cmp
daa
mov
add
outsb
mov
push
movsb
xchg
dec
ja
in
daa
pop
mov
mov
sbb
lea
lods
pop
scas
pop
add
mov
ret
push
sbb
cmp
sbb
je
dec
out
push
push
adc
sahf
inc
out
push
mov
mov
cmp
iret
js
fmull
rcl
fwait
mov
jb
mov
mov
dec
or
add
in
pop
je
pop
mov
add
cltd
rcr
or
lock
test
pop
lahf
lods
inc
mov
iret
cltd
sarl
les
ja
iret
xchg
cmp
lcall
push
push
pop
jp
mov
lock
popa
pop
mov
add
outsb
adc
add
pushf
or
test
jbe
mov
push
in
and
mov
loop
aas
add
scas
cmp
rclb
les
sub
push
mov
xchg
sub
jo
stos
xor
in
mov
xlat
mov
pusha
mov
sbb
sub
pusha
fcompl
mov
cld
nop
pop
mov
sub
cld
daa
or
and
fsubl
ja
clc
andb
insl
mov
sub
and
push
mov
out
add
loop
mov
mov
test
pop
mov
and
arpl
add
sub
jo
sahf
aaa
idivl
mov
in
push
jl
sbb
xor
add
dec
int
cmp
add
add
daa
arpl
and
adc
in
je
and
push
cmpsl
add
adc
or
mov
and
xlat
or
cmpsb
sti
jnp
inc
test
mov
xchg
dec
ret
jo
add
pop
icebp
add
clc
aam
outsb
ret
jne
data16
icebp
add
pop
cmp
dec
nop
subb
mov
dec
in
and
cmpsl
rolb
adc
xchg
mov
fsubs
scas
mov
mov
or
pusha
sbb
cmp
adc
add
outsl
dec
jmp
jle
movsb
mov
adc
push
cmpsl
add
push
jl
cmp
inc
push
xorb
xor
cmp
push
adc
inc
add
inc
cmpsb
emms
add
push
outsl
pop
pop
lret
ret
pop
sbb
lock
lret
add
lcall
inc
nop
xchg
sub
sub
cmp
loope
xchg
fwait
les
lret
and
or
mov
mov
fmull
aas
testb
loopne
mov
add
testl
dec
pusha
dec
mov
push
cmc
and
inc
push
push
mov
scas
mov
les
popa
add
mov
lods
mov
sbb
pop
xor
cmpsb
mov
mov
test
test
mov
orb
mov
add
dec
pop
aam
jne
adc
pop
xorl
inc
arpl
add
adc
mov
fstpt
dec
mov
popl
or
xchg
pop
xor
imul
imul
pusha
pushf
push
test
xchg
sub
mov
andb
adc
pop
insl
fwait
or
lcall
mov
lods
push
sbb
js
jge
dec
cli
cmp
and
popa
mov
xchg
dec
push
add
mov
movb
dec
mov
pop
mov
and
mov
sar
lret
imul
andb
xchg
sbb
xchg
mov
lcall
adc
scas
pushf
add
xchg
cmp
pop
pop
fists
mov
and
cmp
pop
cmp
lds
mov
mov
add
in
mov
dec
add
enter
clc
sbb
add
jl
add
pusha
loopne
inc
xchg
jns
pop
out
mov
fbstp
mov
xchg
stc
das
inc
sbb
xlat
mov
cmpsb
stos
push
icebp
ret
push
jo
add
sti
inc
in
xchg
shll
xchg
insb
pushf
lods
cld
mov
pusha
and
imul
add
ja
inc
cmp
xor
roll
add
xor
pop
mov
xor
add
mov
xchg
add
in
lcall
imul
and
xor
es
xor
push
mov
push
dec
add
jecxz
sub
add
push
add
add
inc
cwtl
add
int3
push
xor
lret
and
add
dec
xor
dec
sub
in
add
sub
mov
push
dec
lss
lods
push
cmp
inc
adcb
shl
clc
bound
test
add
xlat
inc
fnstsw
loope
adc
addb
push
fildl
pop
jno
icebp
add
subl
inc
cmp
sbb
insb
incl
jmp
aad
lret
aaa
inc
iret
pop
xorb
or
lret
pop
sbb
push
loopne
aas
xor
shrb
add
test
hlt
mov
adc
andb
add
inc
xchg
lock
popf
mov
xor
xor
mov
jo
xor
cmp
add
lret
dec
loopne
leave
dec
ficoms
imul
add
dec
jp
ret
xor
push
test
pushf
jae
dec
adc
adc
lods
ficompl
fcompl
jo
add
mov
sbb
fsub
dec
cmp
jno
and
test
cld
add
fldenv
filds
ss
out
out
xchg
mov
ja
cld
loopne
ds
inc
or
adc
adc
mov
dec
xchg
clc
add
xchg
push
mov
sbb
jp
and
add
pop
push
pop
outsl
out
pop
jns
add
jnp
gs
cmpsl
jns
add
insb
inc
iret
mov
mov
popa
fadds
xor
bound
js
inc
pop
jne
sti
adc
hlt
push
sbb
addb
push
call
push
add
push
mov
push
or
andl
cmp
adc
add
dec
push
cmpsb
cmp
xor
jns
and
roll
mov
pop
mov
xchg
popa
clc
mov
pop
xchg
mov
jg
jmp
repnz
shlb
cmp
mov
mov
fadds
add
dec
pop
nop
ja
add
sahf
cli
fiadds
insl
ds
sti
push
leave
or
cmp
mov
inc
js
ret
adc
ds
mov
add
int
mov
rcrl
add
imul
aam
mov
cmp
add
mov
add
sti
mov
sub
mov
mov
les
mov
jns
pushf
push
lods
push
in
add
push
cmpsb
add
push
jnp
xchg
movhps
sbb
push
dec
jp
and
sbb
push
dec
jge
imul
and
outsl
shlb
lods
add
sbb
cmp
jge
js
loope
cmp
add
dec
adc
push
add
xor
add
pop
add
in
out
mov
jns
adc
mov
rcrb
push
ror
lret
inc
les
test
mov
rcrb
cmpl
add
xor
int
sub
nop
insb
icebp
xor
adc
fdivs
cwtl
pop
add
mov
outsb
sbbb
pop
and
cmp
daa
loope
aam
pop
add
dec
jmp
add
jbe
sbbl
push
add
cmpsb
xchg
push
inc
stos
mul
add
loope
inc
int
xor
add
cmp
rorb
cmp
popa
jo
or
pop
pusha
mov
jmp
xor
xlat
repz
cmp
movsl
sbb
pop
adc
andb
fs
out
mov
arpl
jge
add
inc
cmp
out
enter
jmp
cmp
or
cs
pop
adc
movl
adc
mov
or
not
and
dec
jbe
jb
dec
push
lods
add
add
mov
and
popf
sbb
cmp
pusha
imul
or
out
outsb
ret
add
in
mov
cmp
jle
popa
sbb
dec
loopne
fidivrs
inc
inc
sbb
shlb
incb
mov
sbb
movsb
xor
and
adc
in
inc
or
push
lock
subb
sbb
sbb
lcall
cmovno
or
rcrb
mov
mov
shll
cmp
xor
dec
int3
xlat
inc
push
int3
cmp
and
dec
aad
add
mov
mov
pop
add
into
inc
sub
cmp
out
cs
mov
xchg
dec
jmp
dec
imull
cwtl
addl
or
mov
and
sbb
and
inc
ret
rolb
ror
addl
hlt
push
or
xchg
stos
push
mov
or
add
pop
pop
andl
jo
fcomps
jl
cmp
in
pusha
iret
push
js
mov
inc
fmul
daa
hlt
js
sub
inc
push
sub
push
sub
and
out
sub
jmp
rclb
dec
jbe
add
mov
subb
lock
in
cs
mov
lds
popf
cmp
jmp
pop
arpl
adc
js
mov
jne
in
enter
dec
push
in
movsb
inc
repnz
or
adc
adc
jle
dec
jp
int3
adc
sarl
push
add
xor
pop
push
adcl
add
push
sub
in
jo
add
stos
mov
fisttpll
xchg
fndisi(8087
add
scas
js
pop
or
stc
sahf
fwait
lock
add
int3
cld
pop
icebp
sahf
enter
insb
rorl
cli
cltd
rclb
push
add
movsl
clc
ret
add
xchg
or
mov
aas
idivb
test
or
jno
outsl
jge
add
jl
and
lods
lea
push
and
sub
mov
lods
mov
xchg
sub
stc
lret
divb
adc
movsb
mov
mov
sbb
sbb
mov
dec
xor
adc
add
clc
jle
push
sub
sub
add
mov
add
inc
cmp
lea
andb
clc
cmc
pusha
mov
add
pop
xchg
fmulp
and
aas
add
add
mov
out
sub
mov
das
leave
loop
lret
call
std
sub
negl
add
xor
sbb
add
outsl
pop
inc
and
std
add
adc
fnsave
fsubr
mov
jns
sbb
hlt
add
mov
jb
adc
nop
mov
mov
dec
int
mov
cmp
popa
rolb
shr
arpl
add
xchg
xlat
pusha
outsl
mov
adc
fisubl
adc
adc
std
and
es
inc
aam
mov
cmpsl
das
out
mov
hlt
mov
push
xchg
xor
add
add
in
aas
stos
mov
hlt
dec
loopne
popf
out
sbb
sub
lods
outsb
loop
rolb
xchg
addr16
idivl
lods
and
loopne
cltd
dec
jnp
dec
loop
add
imul
jg
clc
mov
js
add
jne
ja
pop
shll
movsb
xchg
popa
inc
leave
add
push
adc
orb
popf
aaa
add
shlb
xchg
adc
push
mov
sbb
add
cmp
stos
add
xor
sbb
mov
sub
insb
pusha
push
sti
cs
inc
add
push
inc
jecxz
sub
pop
mov
pop
dec
sbbb
pop
add
ljmp
lds
dec
ss
loopne
mov
mov
test
inc
or
lcall
sub
sbb
cmp
movsl
add
lahf
push
mov
mov
add
pop
push
push
pop
imul
gs
mov
outsl
add
or
lock
fwait
sub
call
mov
cltd
add
jbe
cmp
rorb
inc
les
and
cmc
mov
fmull
jbe
and
fwait
gs
arpl
add
aas
imul
stos
jb
cmp
mov
pop
inc
mov
sbb
dec
rolb
inc
dec
add
pop
int3
loope
aam
cltd
push
add
pop
cmp
pushf
adc
or
and
jne
aaa
aam
ja
imul
es
xor
push
clc
add
mov
loop
pop
pusha
push
aaa
les
add
push
fisttpl
push
inc
shrb
and
nop
lods
add
jp
jb
lock
mov
dec
pushf
call
cltd
sar
into
dec
lods
lcall
imul
pusha
jp
ljmp
test
adc
not
add
iret
adcl
mov
jle
loope
adc
xor
rolb
push
fs
inc
dec
cmpsl
add
test
int
sbb
add
push
in
pop
int3
push
dec
sub
loopne
out
add
cmpsb
mov
lea
dec
ret
test
push
cmp
imul
add
clc
fimuls
add
jecxz
xchg
dec
js
jns
jl
nop
andb
lahf
jb
out
outsb
jmp
mov
mov
lods
mov
roll
and
add
lock
cmp
pop
add
insl
push
jbe
xchg
imull
add
mov
pop
cmp
rcrl
adc
xor
add
sahf
popf
cmp
inc
out
pop
ja
cmp
mov
testl
and
pop
xchg
push
add
mov
insb
fcoms
lods
mov
mov
rcll
rcll
rclb
pusha
ret
and
add
rcrb
mov
adcl
shlb
inc
jns
stc
mov
scas
mov
pop
fidivrl
jno
movsb
pusha
sbb
js
add
xchg
or
scas
or
lock
scas
mov
cwtl
sbb
add
fwait
xor
sbb
add
pop
clc
dec
je
jo
jge
fdivrs
andb
xor
ss
scas
addb
or
fadd
push
adc
les
jp
xchg
rolb
push
pop
dec
mov
add
ret
test
ret
adc
hlt
out
dec
add
out
clc
jno
aad
bound
popa
jo
sbb
and
les
push
popl
jge
icebp
xchg
je
xchg
loope
adc
cld
add
testl
mov
and
pop
outsb
and
bound
and
add
divl
pop
sub
xor
clc
ja
mov
or
rcrb
dec
test
mov
aas
cld
pop
add
dec
cmp
gs
lods
add
ljmp
add
adc
out
cmp
dec
dec
cs
lock
xor
dec
in
test
xor
dec
mov
adc
xchg
inc
std
add
enter
rolb
sub
inc
lock
adc
xchg
mov
and
dec
scas
adc
pop
or
in
mov
add
test
mov
in
add
arpl
and
jne
mov
push
dec
int
ret
cwtl
lock
dec
daa
clc
fmull
or
sbb
sbb
stc
sbb
lock
xchg
pop
sbb
add
fisttpl
pop
and
pop
adc
js
push
xchg
dec
inc
xchg
insb
scas
sbb
mov
sbb
cmp
insl
inc
add
jge
adc
xor
sbb
sarb
add
shlb
xchg
inc
faddp
inc
add
cmpsb
gs
fsubs
xor
xor
inc
mov
lcall
cltd
jb
add
popa
push
mov
jmpw
or
cmpb
push
adc
aaa
out
push
xchg
and
xchg
adc
div
outsl
int
inc
out
pushf
stc
pusha
enter
fwait
cmp
pop
push
add
shlb
push
push
andb
mov
push
xchg
or
inc
mov
jne
push
lcall
into
ja
mov
lahf
fisttps
repz
xor
loope
cli
and
push
add
xor
andl
leave
pusha
mov
dec
add
loope
mov
add
rcrl
dec
testl
lock
or
movsb
mov
out
push
xchg
inc
or
xor
test
xchg
roll
pop
cmp
sub
faddl
add
jb
adc
insl
ds
enter
je
repz
rcrb
fimull
sbb
jno
push
add
sbb
into
fisttps
cmc
je
add
add
ds
pusha
andb
jo
lods
push
test
orb
xchg
imul
mov
and
adc
mov
push
popl
xlat
mov
out
dec
or
pop
enter
or
mov
pop
pop
sub
adcl
add
or
cmpsb
inc
xlat
dec
xor
pop
xchg
insl
pmaxub
pop
or
xchg
mov
push
add
loop
lods
xorb
sub
add
std
jmp
outsl
icebp
add
test
out
aam
jl
or
flds
insb
push
pop
fildl
xor
bound
or
pop
inc
fwait
add
das
aaa
lahf
repz
add
hlt
mov
lret
sbbb
xor
ficomps
xor
cmp
sbb
dec
aam
shl
add
jnp
mov
sarb
xchg
mov
adc
pop
mov
shlb
mov
mov
pop
mov
icebp
inc
cwtl
adc
int
sbb
inc
idiv
push
xchg
push
mov
fisubl
sub
subb
push
add
pop
mov
out
test
and
mov
jno
and
push
cmp
lret
cmp
lds
pop
ret
lcall
subl
sbb
cmc
sbb
notl
or
inc
out
cltd
popa
pop
xor
test
sbb
shrl
fbld
sbb
xchg
xor
clc
add
push
loope
aad
aas
shlb
or
int3
loop
and
or
adc
mov
add
mov
jno
fistl
fdivrs
add
cmpsb
jnp
xchg
popaw
dec
cs
les
clc
rclb
push
js
bswap
rcl
orb
cmp
fistpl
lea
add
xor
adc
or
fdivl
xchg
rolb
cmpsb
add
push
adc
ret
mov
es
andb
clc
data16
inc
aad
cli
into
subb
call
les
jno
dec
out
insb
in
and
add
mov
call
scas
and
pop
neg
pop
jl
cld
pusha
clc
flds
mov
mov
and
pusha
shlb
mov
pop
mov
inc
pop
xchg
xchg
mov
bound
lock
pop
popf
lea
mov
out
lret
or
frstor
int3
push
fdivp
mov
cs
enter
and
out
mov
dec
dec
aam
outsl
out
pop
push
sbb
pusha
mov
dec
sub
mov
daa
sti
rclb
cmp
add
or
add
mov
push
mov
jns
adcl
int
mov
mov
xor
movsb
dec
fldcw
jnp
adc
mov
rclb
int3
cmp
inc
dec
pop
jl
bound
mov
mov
xlat
js
sbb
out
ficomps
jmp
pop
lahf
dec
icebp
jnp
add
gs
inc
mov
test
loop
loope
or
lods
in
sti
sub
mov
sbb
sbb
cmp
cs
and
jp
add
jl
test
cmpsb
testl
dec
inc
lcall
cmpxchg
out
and
add
xchg
ss
imul
lods
jbe
mov
sub
adc
flds
lods
add
adc
mov
pop
adc
mov
out
in
mov
or
adc
ja
iret
push
push
cmp
popa
mov
pop
pusha
or
pop
jno
and
push
inc
mov
arpl
add
lret
or
jo
fmull
ljmp
mov
sbb
mov
mov
adc
shll
dec
and
sbbb
rolb
add
fsub
mov
aad
aam
mov
mov
fsts
or
test
pop
fbstp
shlb
sbb
or
fxch
inc
pop
pop
repnz
nop
inc
incb
out
lret
mov
pop
lret
sub
stc
test
dec
in
mov
clc
pop
sbb
jecxz
jbe
and
flds
int
rcll
xchg
lods
pop
cmp
clc
or
sarb
in
inc
pop
hlt
mov
cli
adc
pop
xor
push
fdivl
in
ret
add
int3
loope
mov
add
call
das
or
leave
inc
repz
sub
incb
lret
loop
mov
not
pop
jle
add
xchg
and
stc
enter
inc
or
movsb
sbb
push
jecxz
loope
fmull
add
push
mov
mov
dec
xor
or
and
popf
cmp
dec
and
sbb
into
push
and
cmpsb
lret
adc
in
movsl
pop
repnz
enter
dec
mov
pop
scas
pop
mov
dec
mov
scas
ltr
jg
fistl
inc
js
outsb
pop
fcomp
dec
add
xor
xchg
pop
fistl
and
cmpsb
mov
mul
stc
int
or
mov
mov
mov
test
sbb
sarb
stos
punpcklbw
imul
add
pop
dec
mov
jmp
inc
loope
or
add
lea
cwtl
and
clc
xor
or
cmp
add
imulb
sub
push
mov
test
or
lea
sbb
movsl
call
addr16
in
and
push
push
jmp
cs
sbb
xchg
push
jo
sub
cwtl
mov
out
push
xchg
pop
push
fs
lcall
push
sub
mov
xorb
adc
mov
mov
test
idivl
add
fdivrs
and
rorb
pusha
pop
adc
nop
jle
xchg
lods
mov
jecxz
inc
cmpsb
xchg
test
xor
push
cmp
mov
flds
out
xchg
lds
mov
loope
jb
add
xchg
decl
fildl
inc
sub
std
sti
xor
or
xchg
js
das
mov
pusha
adc
xchg
push
pop
addb
lcall
mov
mov
dec
adc
sbb
cmpsb
fnstsw
frstor
or
mov
push
xchg
dec
cmpsl
pop
ja
cmp
mov
push
rolb
fs
sub
jecxz
stc
jmp
andb
add
sbb
cmc
call
pop
adc
orb
add
xchg
dec
sub
mov
out
jp
lock
pop
lahf
inc
jne
inc
flds
call
stos
sarb
daa
xor
mov
mov
xchg
roll
stos
loopne
jne
sbb
fistpll
cli
clc
ljmp
jae
loopne
mov
rcr
addr16
ss
sbb
mov
in
dec
mov
sub
mov
add
ficoms
xchg
add
dec
and
pop
sbb
fsubrp
xorb
in
inc
add
adc
mov
or
xlat
iret
mov
lahf
sbb
or
pop
lds
inc
rcll
push
add
jae
mov
pop
stos
push
jp
xchg
sbb
dec
add
inc
lea
add
push
enter
popf
push
movd
rorb
pop
rorb
cwtl
fcmovnbe
out
scas
test
out
mov
jle
jnp
pop
xlat
cs
cwtl
inc
add
cmc
xchg
sub
adc
add
dec
lods
add
jmp
cmp
shlb
xchg
hlt
add
sbb
stc
push
ret
inc
or
and
add
es
push
imul
iret
cmpb
and
pop
dec
jne
sub
adc
add
aad
stc
fdivrl
xor
pop
insl
or
out
or
adc
aaa
sub
imul
mov
in
dec
in
or
fbld
mov
outsl
fnstsw
dec
pop
lahf
mov
insl
sahf
popa
inc
sbb
jle
into
add
push
shrb
push
dec
jl
and
aas
mov
jo
fdivp
jmp
stos
add
add
xlat
aas
add
cltd
daa
inc
sbb
aam
rcrb
mov
xchg
movsl
add
pop
pop
insb
repnz
loope
cli
imul
test
enter
enter
add
mov
mov
shlb
xor
fwait
cmp
jae
sti
insl
test
cmc
popa
pop
lods
mov
lock
cwtl
adc
fsubrl
jmp
pop
jmp
out
dec
test
imul
icebp
stc
lock
repnz
fwait
ljmp
out
adc
outsl
push
popa
mov
jge
pusha
cmp
fwait
add
jb
clc
icebp
movb
jl
add
dec
push
orl
dec
pop
loope
push
jns
pop
add
bound
push
inc
rcrb
in
adc
cmpsb
je
fdivrl
push
inc
movsl
add
sbb
dec
and
fcoml
cmp
aas
pop
jb
sbb
in
stos
decl
add
ds
fstps
jno
test
xchg
add
lret
ret
cwtl
mov
jp
pusha
not
inc
add
sti
movsb
adc
int
mov
pop
mov
adc
outsl
or
dec
push
add
pushf
andl
add
xor
or
popf
add
mov
add
and
push
lock
ds
and
or
shl
add
mov
pop
pop
add
stc
outsl
lahf
imul
sarb
adc
jo
add
sbbb
pop
lods
jnp
mov
out
inc
fidivs
add
in
repnz
mov
add
mov
in
dec
pop
xor
fadds
push
jle
rclb
lahf
sub
pushw
out
lret
push
jo
add
cmp
mov
adc
fstl
jne
mov
movsb
cs
pop
in
add
and
jb
sbbb
or
add
and
sbb
pop
xor
inc
jbe
gs
xor
xor
addl
cmpsl
in
mov
mov
fildl
icebp
aam
sbb
pop
mov
dec
push
inc
jns
adc
js
add
or
sahf
aaa
in
add
out
push
xchg
add
dec
pop
and
cmp
cmp
gs
and
dec
mov
jecxz
lea
mov
ret
call
in
inc
scas
iret
sbb
add
inc
mov
xchg
scas
cmp
popa
push
cmp
add
cmpsl
mov
lcall
inc
jge
cmp
fildl
xlat
ret
adc
daa
add
ljmp
sub
xor
lods
add
xlat
sbb
sbb
ret
add
aam
pop
mov
call
jp
or
jmp
lcall
add
out
push
out
add
das
pop
fidivrl
jmp
xor
sub
out
aaa
push
nop
jge
iret
sbb
mov
add
out
aam
push
mov
sub
cmp
punpckhdq
mov
test
roll
andl
and
cmp
add
int
pushf
out
pop
sti
add
push
mov
stos
daa
in
mov
or
ljmp
loope
xlat
xchg
mov
pop
stos
call
push
mov
flds
add
and
movl
push
push
testb
pop
mov
shlb
popa
cmp
dec
mov
xchg
lds
xchg
inc
jg
inc
mov
mov
xchg
sbb
lahf
add
mov
xchg
roll
sub
addr16
mov
mov
movsl
sbb
fldenv
mov
ja
xor
adc
cmp
xchg
add
cmp
cmc
mov
mov
cmp
shl
dec
cld
lock
xchg
add
call
test
js
fdivr
aam
lock
sahf
das
xor
rcr
inc
add
sbb
lret
push
fsubrs
push
add
xor
iret
inc
mov
jae
test
cmpl
les
fisubl
pusha
mov
add
jmp
imul
jmp
mov
adc
mov
add
test
lods
mov
pop
or
add
mov
lods
lldt
jp
push
test
addb
dec
aaa
push
scas
inc
enter
add
int
adc
mov
inc
je
aad
ret
std
and
test
enter
popa
add
lcall
add
sbb
push
add
movsb
negl
and
jns
or
ljmp
addb
inc
repz
add
and
cmp
jle
out
add
into
push
lahf
test
cwtl
jge
push
ja
out
lret
fucomip
subl
nop
shll
subb
cmp
out
mov
jmp
cmp
pop
inc
fs
jne
cmpl
sbb
cmc
xor
ja
add
push
scas
out
mov
inc
mov
pop
add
cli
das
cmp
scas
fldt
test
pop
adc
cmc
push
aas
sbb
movsb
sbb
test
hlt
in
fisttpll
aam
add
mov
cltd
dec
or
je
lcall
ja
jmp
test
sbb
pop
jle
add
jg
lock
add
mov
xchg
push
push
pand
cmp
jne
pop
aaa
pop
pop
addb
in
xor
add
sub
nop
mov
dec
add
jb
or
aaa
xlat
pop
add
sub
mov
dec
ret
popl
inc
push
sbb
fadds
push
dec
rorb
xor
sbb
bound
cmc
in
or
sub
incl
sub
inc
inc
mov
add
sbb
push
loopne
push
push
jo
push
add
outsl
xor
clc
and
mov
mov
and
out
mov
lret
add
pop
loopne
xchg
cmp
xchg
mov
fs
ficomps
icebp
mov
mov
xorb
xor
cmp
push
add
or
clc
xor
shlb
xor
lcall
xlat
scas
das
sbb
jns
andb
outsl
adc
add
lret
xor
fnsave
faddp
pop
mov
mov
adc
adcl
test
add
out
cs
les
add
dec
sbb
add
or
cmp
insb
stos
cmp
mov
adc
stc
in
arpl
mov
cs
les
and
jl
mov
sarl
xor
test
or
stos
jge
rcl
inc
je
xor
wbinvd
daa
jns
mov
mov
aam
ljmp
stos
pusha
shrl
js
fs
mov
mov
in
inc
add
fcompl
imul
mov
cld
mov
dec
add
sbb
sbb
jecxz
shrb
add
dec
pushf
sub
lds
push
hlt
shlb
xchg
testb
sbb
loop
sti
aad
add
xchg
sbb
cmp
popl
xchg
mov
add
cmpsl
jp
cmc
shlb
and
mov
mov
das
adcb
push
clc
pop
inc
pop
xchg
or
movsl
movsb
lock
int3
cmp
add
xchg
and
cmpsb
cwtl
cld
add
pop
stos
cli
xchg
xor
clc
out
jle
mov
fdivr
dec
jbe
sub
loopne
das
push
cmp
into
add
mov
push
pop
dec
mov
into
lea
int
int3
cwtl
insb
mov
or
test
jg
sbb
dec
cmp
sbb
push
dec
mov
rcll
popa
icebp
insl
pusha
cwtl
ja
sbb
xor
push
loopne
imul
bound
popf
push
add
daa
jle
cmp
sbb
outsb
pop
xorl
xor
fwait
add
pop
movsl
xor
cld
push
add
and
rclb
insl
pop
repz
jo
cmp
mov
xor
xchg
add
shrl
mov
out
add
mov
les
mov
inc
insb
loopne
dec
dec
or
sarb
or
push
ljmp
pop
leave
mov
aaa
insb
cmpsl
cmp
jmp
add
jl
lock
or
jnp
inc
xor
lods
mov
add
pop
or
add
add
xor
push
loope
arpl
testb
dec
xchg
adc
jle
aaa
imul
dec
jno
mov
in
imul
pushf
add
movsb
sub
js
aam
add
xchg
jae
add
out
sub
xor
out
mov
xchg
jp
add
inc
adc
sub
cld
mov
xor
add
repz
fdivl
mov
and
mov
ljmp
xchg
xchg
and
negl
out
loope
sbbl
jbe
mov
shl
dec
and
xchg
iret
imul
add
adc
push
dec
mov
add
jno
lock
insb
mov
jle
adc
cltd
lods
add
inc
test
jge
ret
mov
jl
sti
mulps
out
inc
add
jo
or
push
cld
adc
add
fisttpl
cmpb
repnz
add
and
fiadds
in
mov
pop
mov
add
mov
pop
jns
jno
adc
or
and
flds
or
push
ljmp
rorb
push
or
jno
dec
adc
pop
add
rclb
out
add
jb
pop
pushf
into
leave
inc
les
addr16
pop
add
fbstp
or
nop
and
movsl
add
mov
or
js
add
inc
add
add
pop
or
add
shrl
add
fstps
ja
fisubs
add
push
mov
hlt
in
jnp
push
jge
insl
lret
les
js
adc
pushf
xor
jp
cmpsb
clc
sarl
and
push
fstpl
stc
lods
add
pop
les
movsl
push
testb
clc
into
mov
push
lret
cmp
jl
arpl
cwtl
mov
call
ret
arpl
dec
pop
pop
add
testb
hlt
add
adc
mov
or
int
test
or
cmp
sbb
stc
jecxz
inc
bswap
rclb
mov
ja
mov
mov
inc
clc
in
pop
fdivrl
push
shlb
mov
ss
pop
dec
insl
test
out
popf
sbb
mov
xor
decl
jp
outsb
add
imul
xchg
mov
test
imul
rcr
shlb
dec
out
and
xor
lcall
shr
pop
or
aam
add
push
pop
and
hlt
shrd
add
xor
lahf
cmpsl
mov
mov
pop
test
add
mov
mov
pop
and
xor
adc
add
scas
test
inc
out
inc
sti
loope
add
fldcw
xor
adc
cmp
adc
adc
jnp
and
addr16
mov
jo
inc
fiadds
cld
lods
add
int3
movsl
xor
inc
cmp
pop
pop
mov
fsubrl
iret
repnz
je
lock
push
cmpsb
or
rolb
dec
jbe
add
ss
jne
cmp
jne
mov
fldl
push
mov
inc
adc
xchg
jle
jne
aaa
xor
inc
test
bound
rorb
icebp
cmp
mov
sub
fwait
repz
sbb
test
dec
sbbb
adc
scas
jmp
clc
imul
in
or
dec
shll
scas
mov
push
cmc
add
jmp
xchg
xlat
add
into
psrlq
aam
aam
add
icebp
add
mov
lods
int3
movb
loope
stos
aad
dec
sub
sbb
xchg
aaa
add
in
jmp
dec
pop
push
mov
mov
inc
popa
inc
pop
dec
loop
aam
pop
push
ss
add
lea
mov
jmp
add
mov
push
mov
add
push
fstp
gs
pop
push
adc
loop
add
adc
add
mov
divl
pop
mov
jp
lret
push
or
xlat
aad
ss
rcrb
dec
add
mov
adc
test
and
movsl
fstpt
mov
mov
mov
js
rol
mov
mov
in
mov
fwait
ljmp
dec
inc
lds
sbb
clc
icebp
stc
inc
ljmp
js
je
add
das
test
syscall
insb
enter
dec
xor
dec
pop
mov
push
outsb
inc
and
sub
add
in
test
stc
je
jl
ja
add
incb
mov
aaa
popf
fadds
les
add
orl
adc
ja
add
inc
iret
sub
xlat
push
hlt
repnz
mov
fwait
dec
orb
xor
ljmp
cmpsl
add
jne
pop
cmp
pushf
or
xlat
jmp
inc
inc
scas
push
shl
inc
add
sub
test
bound
test
cmp
fadd
js
xchg
xchg
test
adc
xor
std
fadds
mov
fidivl
outsl
add
aas
add
fldcw
out
stos
add
fmul
jbe
xchg
sbb
or
lcall
adc
cmpsl
and
fs
inc
add
jo
sub
pop
xor
add
adc
or
cmpsl
decl
sarb
xor
add
xchg
dec
add
ljmp
mov
outsl
insl
arpl
inc
popa
mov
push
push
fwait
xor
test
int
les
icebp
add
add
cmp
inc
test
imul
pop
stos
jle
mov
add
out
lcall
lods
cmp
shrb
mov
mov
sbb
int
andb
xchg
push
xor
adc
enter
lods
add
loop
imul
sbb
cwtl
ds
push
jo
add
add
int3
dec
js
cs
call
mov
test
inc
and
push
dec
xchg
fildll
out
push
add
or
sbb
mov
inc
push
add
pop
mov
dec
js
add
fwait
lods
add
mov
pop
test
fwait
or
shrb
daa
jns
pop
in
in
pop
icebp
sub
imul
push
das
mov
add
cmp
xchg
repnz
jns
cwtl
xchg
xor
icebp
add
lods
mov
mov
sbb
add
inc
mov
daa
es
sbb
or
cwtl
or
mov
inc
inc
cwtl
cmpsb
out
dec
imul
pop
movsb
lods
lock
cmp
adc
dec
test
flds
int
daa
pop
add
outsb
ss
shl
in
adc
pushf
xchg
add
ljmp
jo
xlat
xchg
add
mov
mov
je
addb
fcoms
add
int3
mov
adcl
inc
fadds
and
or
mov
rolb
daa
das
repnz
mov
add
mov
jo
add
cmp
jb
add
adc
pop
mov
inc
mov
xorps
jp
jnp
mov
pop
push
jge
mov
xchg
lret
xchg
jne
daa
jnp
xor
mov
cmp
jns
mov
hlt
insl
clc
addl
stos
loope
addr16
shrl
arpl
enter
out
lock
mov
jg
les
leave
cli
push
add
pop
lds
add
incl
jo
test
nop
xor
cs
or
mov
loopne
sbb
xchg
jne
sub
mov
adc
and
dec
inc
rorb
lds
add
lcall
push
add
inc
add
testl
mov
mov
sbb
jne
add
jae
jns
stc
add
cmp
lods
icebp
pop
or
add
adc
shlb
add
pop
jno
or
sbb
pop
or
or
xchg
ja
stc
add
mov
jle
inc
outsb
dec
add
mov
subb
mov
mov
cmp
push
ss
xlat
inc
insb
data16
pop
cmp
std
dec
pop
xor
icebp
lock
jnp
imul
outsl
sub
pop
adc
out
in
mov
push
xchg
inc
sbb
add
outsl
mov
in
rcrb
lea
add
adc
imul
sbb
sub
mov
xchg
xchg
pusha
jno
pop
jbe
inc
pop
mov
xor
ljmp
jb
sbb
add
inc
call
or
inc
or
mov
sub
sbb
xor
ficoms
ljmp
push
push
sub
repz
pop
jae
xor
out
fsubl
push
jle
add
push
or
sub
rcll
mov
inc
xor
cwtl
fs
add
cltd
pop
test
gs
mov
rorb
mov
clc
add
cmp
js
fmull
lods
mov
and
out
xor
sarb
data16
xor
dec
mov
jecxz
pop
add
hlt
push
jns
push
nop
add
add
xor
mov
sub
sbb
ss
mov
and
or
xchg
sub
xchg
jge
dec
mov
add
xlat
or
mov
add
inc
sbb
jmp
fwait
sbb
enter
in
sbb
cwtl
roll
imul
ss
jg
sarb
or
iret
sbb
or
shll
in
push
adc
xor
std
mov
jne
add
arpl
and
pop
test
cmp
push
and
sub
jns
or
add
inc
cli
jge
shlb
mov
cs
or
mov
dec
shrl
das
push
aam
adc
inc
idivl
pop
push
stos
add
je
add
jmp
rclb
in
addb
xorb
addr16
push
add
test
daa
fptan
jl
lea
lret
roll
sbbl
xchg
cs
ss
orb
and
add
mov
pop
lea
jmp
insb
sbb
cmp
fwait
push
lock
add
sbb
ja,pn
add
sbb
jae
jge
mov
sub
int3
push
in
pop
into
inc
add
call
jb
aas
and
repz
sub
add
das
push
into
add
test
xor
add
xchg
pop
mov
in
sbb
cmpb
js,pn
movsl
adc
pusha
xor
loop
mov
negb
je
cld
sarl
arpl
out
add
mov
or
jne
mov
xlat
pop
push
cmp
icebp
add
inc
test
int3
push
push
xchg
adc
xor
into
out
xchg
sub
mov
aam
pop
in
clc
lock
or
xchg
rorb
fsubrs
add
enter
mov
xor
popa
inc
lret
or
iret
inc
push
sub
mov
pop
lds
mov
or
xchg
adc
sahf
mov
dec
xchg
cmp
pop
faddl
sbb
pop
idivl
lea
popa
clc
or
xlat
push
xchg
add
out
cmp
lods
out
mov
sbb
and
rcr
cmc
sub
nop
stos
mov
xchg
add
xor
stos
stc
loope
mov
adc
cwtl
add
adc
push
cmpsb
cmp
inc
and
push
fidivrl
rclb
mov
xor
pop
mov
orl
mov
loopne
xchg
add
loopne
xchg
sub
mov
push
pop
jg
push
lods
or
add
jbe
loop
inc
fildl
mov
mov
leave
xchg
jb
push
sahf
add
arpl
add
into
add
test
aas
std
push
int
or
add
clc
pop
push
repnz
mov
icebp
mov
dec
push
sbb
inc
add
cmp
add
inc
or
test
inc
dec
ret
stos
adc
inc
xor
lea
add
mov
push
jnp
pop
fs
inc
xor
shlb
mov
or
pop
nop
add
imulb
das
cld
insb
dec
cli
add
fstpt
cld
mov
pop
mov
jl
nop
in
outsb
add
xchg
nop
inc
in
adc
rolb
and
or
ret
test
cltd
data16
cmp
mov
or
mov
sbb
scas
sbb
daa
sub
fs
add
pop
cmpsl
call
mov
or
inc
filds
adcb
and
add
imul
decl
dec
adc
movsb
dec
addb
test
scas
inc
les
jge
ret
rcrb
cmpsb
add
dec
inc
sub
js
outsl
add
sub
ret
xor
push
dec
jb
faddl
lcall
mov
les
mov
fsubrs
sbb
es
and
sbb
addl
mov
mov
inc
sbb
leave
jg
or
mov
pop
lock
das
mov
dec
pop
dec
gs
roll
sub
add
setns
dec
jbe
cli
test
pop
inc
rcr
popf
add
or
or
add
lret
mov
cmp
lahf
inc
jecxz
sub
out
popa
adcb
dec
jo
or
and
xchg
cmp
mov
rclb
or
sbb
adc
jp
adc
push
pop
mov
inc
daa
mov
sub
and
xchg
xchg
cld
push
notl
xchg
push
jle
mov
pop
add
into
jmp
add
and
push
jno
outsl
add
jge
cmp
dec
out
pop
out
add
jp
cld
jnp
mov
and
push
ljmp
xor
loope
sub
popa
mov
jecxz
or
jno
hlt
add
adc
adc
fcmovnu
call
fldl
xchg
call
pop
sub
add
pusha
mov
cmp
cwtl
adc
ds
adc
sbbb
idivl
pop
shrl
fidivrs
mov
inc
sbb
jp
jl
push
add
push
lds
xor
pop
iret
inc
sbb
and
sbb
xor
mov
cpuid
xchg
repnz
add
push
sbb
and
iret
cmp
clc
shlb
mov
jne
or
or
jg
jbe
aam
dec
call
xor
filds
rorl
sub
insb
inc
outsl
add
push
int3
mov
and
add
out
inc
add
icebp
sbb
jp
sarl
test
in
and
add
mov
and
pop
xchg
mov
enter
fs
mov
scas
and
xchg
pusha
out
add
adc
push
add
add
adc
mov
in
andb
jno
add
inc
aad
xorb
mov
fs
inc
ljmp
or
test
out
bound
xor
repnz
sub
pusha
adc
rcl
add
jecxz
sbb
jge
xchg
stc
or
or
je
sub
scas
xchg
push
pusha
add
sub
mov
push
jmp
out
add
repnz
dec
fiadds
mov
cmc
stos
push
xor
or
dec
mov
out
dec
mov
jmp
nop
in
fadds
add
bound
push
xor
jns
add
jne
aas
das
jns
ja
push
mov
inc
adc
dec
add
pop
outsb
add
jb
ret
ja
push
xor
nop
add
sbb
cmp
ss
mov
subb
add
or
subl
shr
push
mov
xor
cld
dec
xchg
pop
add
sbb
add
rcrb
clc
jl
add
leave
mov
mov
dec
mov
lcall
or
roll
add
int
jno
mov
test
sbb
xor
push
cmpsl
adc
fdivr
sub
scas
movsb
cmp
jle
inc
cmp
jbe
dec
jo
inc
pop
fstpt
add
rol
sti
andb
add
sbb
pop
jo
mov
mov
adc
add
cs
sbb
add
xchg
jg
push
adc
cmp
or
data16
push
jnp
jno
mov
add
push
add
out
out
dec
sub
aam
sbb
subl
add
lret
or
push
lods
stos
add
mov
push
popf
add
in
loopne
js
pop
dec
lahf
add
mov
push
push
mov
adc
push
popa
mov
data16
lock
add
not
int3
adc
pop
mov
adc
adc
inc
cmp
dec
or
imul
sub
pop
icebp
add
jns
loope
pop
sub
inc
stc
dec
pop
inc
dec
lcall
push
cld
cmpsl
pop
jmp
movzwl
icebp
sub
daa
out
scas
mov
pushf
cmp
daa
aas
jo
fldenv
inc
or
in
dec
stc
enter
push
dec
stos
andb
push
loopne
and
imul
ret
cmp
je
jae
jl
push
dec
add
stos
nop
ds
and
daa
dec
push
fwait
mov
ss
ret
inc
push
lahf
and
fisubl
cltd
sub
bound
add
loop
add
rorb
cmp
dec
or
cmp
pop
add
jp
test
dec
mov
dec
gs
dec
sub
push
mov
in
mov
push
mov
dec
cmpl
inc
mov
xlat
popa
sbb
mov
insb
dec
call
inc
sti
mov
add
xchg
and
pop
cltd
sbb
adc
popf
nop
mov
mov
inc
xor
and
sbb
pusha
push
movb
add
sbb
cmp
out
inc
pop
mov
inc
xor
das
lock
push
aas
shll
mov
add
ret
loopne
dec
int3
push
add
std
add
add
movsl
out
mov
loop
mov
mov
jo
pop
mov
out
add
inc
mov
adc
mov
inc
jns
adc
xchg
pop
xlat
and
lcall
push
xor
sahf
rolb
mov
mov
xchg
cmp
test
mov
inc
and
or
mov
sbb
pop
push
mov
nop
and
popa
enter
adc
pop
sub
inc
mov
lods
add
sub
mov
adc
sbbb
fyl2x
adc
ss
inc
std
stos
test
mov
and
sbb
or
adc
leave
jo,pn
add
xchg
testb
fidivrs
and
into
adc
mov
pop
call
shlb
fiadds
pop
add
dec
cmp
adc
sub
bound
mov
jle
in
fwait
add
test
in
pop
and
add
jae
pop
jge
lret
mov
daa
sub
add
ret
int
daa
sbb
pusha
into
sub
fcompl
and
xchg
in
lcall
add
out
mov
add
add
dec
xchg
cltd
subb
push
mov
xor
arpl
or
pusha
sbb
add
ljmp
xchg
mov
out
xor
add
add
imul
int3
pop
push
cld
mov
xor
push
sub
jl
adc
add
shlb
pushw
xor
xor
out
enter
sub
pushf
add
dec
outsb
cwtl
xor
in
and
mov
leave
push
sub
add
dec
mov
or
cmp
push
push
ret
mov
sub
or
add
icebp
out
sbb
out
add
add
pop
adc
ja
inc
and
inc
push
add
xchg
sub
fwait
repz
scas
loop
pop
in
iret
mov
adc
push
faddl
mov
sbbl
xchg
add
push
xlat
cmp
mov
or
pop
jae
inc
mov
imul
xor
mov
lea
ficompl
mov
push
arpl
adc
scas
mov
add
lcall
mov
sbb
add
daa
mov
adcl
dec
test
in
jne
inc
aaa
jl
add
dec
lret
rcrl
in
fisttpll
add
push
loopne
jmp
mov
add
cmc
mov
and
popa
inc
pop
pushf
fadd
add
lods
and
in
add
enter
stc
xor
icebp
sub
sub
cli
cmp
xor
xchg
and
fistl
repnz
aas
fwait
ljmp
scas
mov
loope
push
inc
jo
mov
scas
repnz
mov
mov
repz
dec
arpl
stos
sbb
addl
jge
mov
mov
inc
adc
loopne
mov
mov
pop
insl
mov
mov
push
mov
xchg
pop
nop
adc
clc
jge
add
and
add
cltd
or
add
pushl
in
out
inc
cmpsb
movsb
jmp
sarb
mov
jno
add
in
iret
xchg
mov
rcl
dec
push
jae
add
fisubrl
fdivs
cmp
fwait
jae
dec
push
pusha
push
rcrb
jb
in
notl
cmc
fldl
movsb
pop
sub
gs
lods
incb
sahf
xchg
out
cld
jp
pushf
add
js
aam
std
pop
orb
lea
popa
add
jnp
sub
test
pop
dec
sub
push
adc
outsb
pop
out
int3
stos
lods
in
push
sub
sub
pusha
shll
pop
inc
and
jge
add
sbb
cmp
lds
and
mov
rclb
neg
mov
scas
daa
nop
add
dec
and
jl
mov
out
fs
jo
movsb
add
pop
mov
jae
and
add
popf
leave
cmpsl
shrb
out
add
js
sub
sub
mov
and
es
push
pop
stos
xor
xor
add
int
shl
pusha
dec
int3
popa
push
clc
mov
add
mov
adc
add
arpl
xchg
pushf
or
sbb
loope
into
ds
adc
fdiv
dec
mulb
aam
jmp
xchg
lods
clc
jecxz
add
and
jg
ret
enter
sub
mov
cmp
xchg
out
gs
xchg
sub
mov
mov
mov
or
ret
pop
sbb
adc
sbb
adc
adc
incb
fucom
jmp
xor
in
sub
jnp
popf
add
and
push
pusha
add
add
push
mov
insl
loope
lock
es
push
nop
popa
and
adc
push
jp
inc
ret
push
cltd
jle
cwtl
loopne
je
mov
mov
push
inc
pusha
shlb
in
xchg
ret
pop
loop
mov
adc
out
cmpsb
add
fwait
xchg
fnstsw
sub
or
mov
sub
fnstcw
mov
add
inc
cld
pop
ret
lahf
loopne
push
lock
adc
mov
and
push
add
push
jmp
lock
dec
hlt
xor
xor
mov
imul
test
out
data16
add
ret
push
inc
and
test
movsl
sub
sub
push
pop
mov
scas
add
sub
aas
pop
inc
push
sbb
fwait
dec
sbbb
fdiv
shl
adc
push
scas
sub
add
jbe
xchg
mov
xchg
call
or
popa
loop
shr
sbb
pop
inc
ss
call
shll
add
cli
fwait
je
sub
mov
cmpsl
call
push
cmp
pushf
fcompl
add
ljmp
arpl
mov
rcrb
cmp
std
add
repz
movsb
jl
imul
nop
jmp
jae
lret
and
add
fimuls
push
ffreep
sub
dec
shl
cmp
dec
pavgb
jo
loope
cmpsb
test
lods
adc
aam
dec
sbb
sbb
adcb
fistpll
repnz
mov
lods
pushf
incl
xor
insl
not
pop
iret
pop
pop
pop
je
out
rclb
or
js
xchg
sbb
ljmp
test
inc
in
aad
pusha
insl
jo
outsb
mov
jno
inc
xor
mov
gs
mov
sub
rcl
jle
shrb
popa
fisubrs
outsl
xchg
adc
ss
insb
xchg
cmp
add
pop
hlt
jo
ds
or
dec
dec
out
mov
pop
cmp
test
fmuls
icebp
cmp
out
stos
sub
pop
enter
scas
cmpsb
insl
dec
sbb
js
cwtl
add
add
jno
and
ret
or
out
sub
or
add
jbe
mov
xchg
daa
scas
jo
cmp
mov
sbb
in
push
adcb
loop
xchg
dec
xor
pusha
sbb
outsl
dec
inc
mov
add
cli
dec
in
andb
inc
mull
cwtl
lods
add
mov
inc
add
pop
pop
cmp
ret
test
sbb
leave
push
shrl
mov
lock
jae
jg
add
push
ficoml
push
dec
adc
ret
jmp
cmp
cld
subb
aad
push
lcall
push
out
and
dec
push
cli
outsl
xor
add
pop
cmp
add
add
jl
loop
mov
pop
aaa
stos
pop
jno
and
cltd
pushl
mov
hlt
push
fimuls
stos
add
cld
jmp
cmpsl
add
iret
xchg
xor
inc
ljmp
sub
dec
repnz
loope
inc
xchg
add
lock
shl
clc
daa
add
adc
mov
mov
jo
xor
add
push
add
add
jl
adc
mov
mov
pop
push
or
call
sbb
xlat
loopne
lods
pop
lret
jg
and
push
movsl
mov
das
testl
imul
arpl
sub
sbb
sub
decl
ret
mov
inc
dec
int3
cwtl
adc
push
mov
insl
outsb
jmp
add
dec
out
scas
add
in
shll
mov
push
mov
add
in
cmc
mov
push
call
jo
add
cmp
mov
sbb
call
pushf
sar
cwtl
dec
add
out
test
scas
xchg
or
repz
cmpsl
ret
jecxz
jae
in
imul
push
addr16
cmc
pop
aaa
aad
shrb
into
add
mov
xchg
leave
aas
in
add
xor
pusha
or
cmpsb
rcrl
mov
scas
sub
repnz
add
leave
mov
dec
pop
notb
dec
rolb
pop
cltd
push
pop
add
sub
sbb
add
outsl
ds
push
in
add
sub
jns
mov
loopne
aam
sbb
jnp
xchg
cmp
adc
mov
xchg
xchg
ljmp
pop
dec
enter
add
push
sbb
dec
es
mov
clc
std
and
or
xchg
jns
je
dec
loop,pn
cmc
subb
mov
ret
sbb
test
ss
out
inc
add
xchg
cmc
sub
add
std
pop
nop
sahf
jge
xor
jo
orb
add
mov
and
cld
mov
scas
inc
fwait
stos
icebp
xchg
mov
push
add
fistpl
iret
scas
and
lods
sbb
mov
add
repnz
xlat
loop
add
xor
rol
jae
inc
fcoml
mov
dec
es
cld
jns
inc
cli
pusha
shlb
sbb
pop
add
lahf
cmp
sarb
pop
into
out
pusha
push
mov
inc
push
sahf
sub
bound
and
inc
fidivrs
dec
icebp
out
cld
lahf
xor
add
popa
sub
dec
repz
testl
js
mov
int3
xor
mov
pusha
pop
mov
ja
icebp
stos
jns
jge
mov
mov
add
repnz
pop
sbb
mov
out
fldl
pusha
in
jbe
mov
je
neg
daa
jo
pop
mov
mov
lret
push
sub
mov
inc
inc
imul
ret
rcrl
mov
add
clc
and
rolb
pop
xchg
idivb
xchg
adc
mov
mov
sbb
add
push
nop
ficoms
rclb
fildl
pop
popf
stos
fidivl
ror
add
push
mov
ds
ret
pop
or
test
adc
sub
lock
ljmp
shlb
adcl
jo
adc
add
mov
and
push
add
sbb
mov
xor
test
mov
out
adc
cld
bound
addb
ss
jp
add
or
jne
aam
test
adc
les
std
jle
push
mov
add
inc
out
lcall
lret
negl
xor
pop
push
minps
mov
incw
repnz
and
add
fistl
inc
in
cltd
pop
pop
fistpll
inc
out
or
and
insl
jl
test
sti
data16
ljmp
addb
add
adc
xchg
adc
pop
adc
jmp
jge
add
lods
dec
in
movsb
movntps
push
and
push
mov
add
jge
cmpsb
cli
pop
add
jbe
xor
jb
push
mov
sahf
icebp
shrb
jo
iret
loop
add
mov
push
add
or
xchg
xor
pop
and
sbb
adc
ljmp
adc
cld
add
mov
push
aaa
push
dec
xchg
pop
add
in
lret
loop
push
jmp
call
fsubl
rorb
jo
lds
jnp
stc
or
xchg
sarb
pop
ret
int3
lret
in
add
jge
repz
dec
in
jb
inc
xor
add
cmp
and
mov
add
pop
add
dec
nop
fcoms
add
test
and
scas
adc
faddl
cwtl
fld
lock
dec
xlat
jbe
lds
cmp
inc
in
test
insb
jo
sbb
pop
int3
popf
clc
xor
xor
arpl
or
std
movsb
mov
push
cmp
loope
stos
dec
lods
ljmp
cmp
mov
test
mov
adc
jle
adc
loopne
mov
mov
scas
mov
push
data16
dec
sbb
stc
mov
or
sbb
add
xorb
or
xor
pop
xchg
jge
ss
iret
pop
add
aas
mov
add
aaa
mov
jno
sarb
orb
shll
repz
nop
add
pusha
cs
dec
cmp
call
mov
int3
add
jl
jle
and
mov
mov
das
mov
daa
add
subl
ss
addb
in
dec
int
jbe
push
add
xor
inc
imul
decl
insl
fwait
je,pt
and
xor
xchg
mov
mov
xor
xchg
hlt
shl
loope
in
setp
mov
mov
add
xor
adc
in
shl
gs
add
push
mov
rorl
lahf
shr
fcom
adc
inc
mov
cmp
push
cmp
push
push
fsubrl
and
pop
push
loope
xchg
out
subl
jnp
adc
add
in
pop
and
dec
ja
int3
mov
cmpsl
testb
enter
addb
insl
cwtl
xor
jo
mov
movsb
cld
addr16
imul
inc
nop
rcrb
adc
push
or
jg
add
jb
pusha
pop
ss
xchg
xchg
push
jae
in
pusha
push
fld
mov
addr16
out
mov
pop
loop
dec
push
in
add
dec
movsb
mov
and
mov
add
movsl
and
mov
xchg
mov
inc
mov
in
add
pop
push
sbb
test
insl
test
inc
fstpl
add
jne
aam
scas
loopne
or
insb
les
ss
lods
inc
xchg
jne
add
push
pop
inc
add
test
or
mov
pop
mov
add
xor
push
addr16
push
out
add
sbb
mov
out
push
mov
sub
xchg
test
pusha
jnp
xchg
sbb
jo
loope
adc
les
cmp
andb
imull
sarl
aad
insl
loop
movsl
outsl
cmp
xchg
jo
test
sub
add
in
pop
and
imul
insl
sub
rolb
and
push
mov
xchg
add
add
push
dec
push
xchg
add
sbb
repnz
xorb
push
flds
rclb
sub
add
inc
mov
jno
pop
daa
fsubrl
scas
fwait
loop
shlb
pop
push
stos
leave
push
addr16
clc
test
in
into
add
adc
jo
sbb
lret
xor
xor
push
add
mov
add
mov
in
mov
pop
adc
lods
out
mov
add
and
add
imul
repnz
add
and
shlb
mov
add
and
sarl
std
and
mov
mov
mov
icebp
or
and
sbb
add
xchg
rcr
add
insb
sar
add
mov
out
and
pop
mov
or
das
push
mov
stos
aas
into
cmp
shrb
sub
cmp
add
add
out
add
inc
mov
mov
mov
add
inc
xor
push
decl
push
pop
xchg
cltd
imul
xchg
add
into
cmpsb
call
dec
jmp
add
pop
fisttps
loopne
arpl
into
icebp
mov
shld
and
pop
roll
adc
cmpsl
ret
mov
mov
xchg
pop
pushf
cld
add
rorb
or
or
adc
ret
add
pop
sub
and
add
or
adc
mov
add
mull
repz
loop
add
or
testb
jb
dec
imul
sti
jle
out
inc
cwtl
incl
pop
xchg
push
aad
mov
sbb
daa
pop
inc
ss
mov
lahf
fsubp
jo
pushf
cwtl
insb
cli
adc
mov
fstpt
sbb
lds
pop
mov
mov
push
test
out
inc
popa
push
add
ljmp
in
mov
jns
adc
testb
hlt
dec
push
leave
aam
js
nop
daa
push
xchg
xchg
or
mov
add
je
add
dec
imulb
pop
add
jne
repz
xor
add
mov
mov
daa
sub
xor
in
and
dec
repz
pop
mov
test
rorb
push
sbb
cwtl
add
pop
mov
jg
repnz
in
pop
push
loope
mov
or
mov
sbb
in
lock
jno
xchg
xlat
add
pop
and
aaa
push
fdivrp
or
leave
add
jge
sub
sbb
add
dec
cli
repnz
cmp
subb
mov
add
jp
add
push
push
inc
in
push
pop
sbb
pusha
xor
sbb
insb
call
aad
xchg
iret
js
ds
mov
and
mov
rol
dec
add
cmp
push
dec
fld
cmp
negb
and
aas
test
js
sub
data16
scas
ret
inc
roll
andl
lahf
adcb
xor
rcll
add
xchg
enter
les
adc
rcrl
cmp
lss
jl
xchg
or
jge
push
add
in
and
rcl
jae
mov
add
jno
cli
push
sub
pcmpeqw
out
and
mov
adc
cmpsb
int3
sbb
mov
in
or
adc
sbb
ss
dec
add
sub
icebp
fucom
andb
lea
mov
pminsw
ja
jmp
shlb
push
les
jl
adc
daa
faddp
js
imul
xchg
add
popf
add
xchg
xlat
pop
add
repnz
inc
cli
rorl
jb
loop
add
scas
stos
fs
into
pop
call
add
inc
mov
lock
repz
add
scas
pop
push
scas
pop
or
mov
fs
mov
aad
adc
loopne
sub
mov
add
dec
test
push
add
mov
ljmp
and
cli
lahf
es
sub
aas
xorl
xorb
lret
inc
xchg
int
push
int3
popa
dec
add
lret
dec
pop
jp
jle
xor
clc
rcrb
scas
add
test
es
add
sub
xchg
and
sbb
push
push
mov
cmpsl
pop
push
imul
push
adcl
pop
sub
stc
pop
adc
fs
jl
sub
mov
sbb
jne
or
loopne
lea
cs
sbb
and
inc
mov
cmp
adc
sbb
add
out
out
sti
shr
test
add
jae
inc
les
sbbb
ss
inc
add
add
adc
es
push
test
in
xchg
stos
push
add
add
fwait
jb
in
jmp
dec
inc
inc
int
lahf
gs
jg
sub
jle
dec
push
add
ljmp
mov
xor
mov
pushf
mov
out
loopne
cli
or
xchg
in
lcall
cmp
arpl
lahf
movsb
sarb
aaa
dec
in
cmp
xchg
push
and
sbb
cmp
lahf
movsl
sti
jns
or
dec
pop
mov
mov
cmp
dec
add
pop
pop
bound
mov
addl
jno
in
or
xchg
add
idivb
pop
rcrl
add
adc
push
add
lret
pop
dec
iret
add
push
pop
add
jns
xchg
mov
and
movsb
cmp
jo
add
or
cmp
inc
pusha
add
pop
pop
ret
aam
stos
je
add
in
add
add
js
cwtl
or
and
movsb
sbb
xor
mov
xchg
shll
js
mov
push
int3
icebp
stc
or
push
mov
fldcw
test
and
fs
push
mov
or
rclb
cmpsb
add
aaa
sti
outsb
mov
push
xchg
mov
loopne
aam
add
jno
into
mov
or
inc
jle
mov
arpl
adc
or
or
add
aas
ljmp
adcb
pop
jo
out
mov
mov
cmp
rorb
rclb
aas
out
mov
add
lahf
jns
loope
or
inc
lcall
xlat
mov
out
push
inc
lret
mov
fcompl
sub
add
push
inc
mov
jne
inc
pop
cmp
mov
adc
mov
sub
sub
out
jmp
jae
nop
dec
sahf
inc
in
jge
inc
adc
mov
mov
cwtl
aaa
add
xlat
sbb
add
scas
int3
lahf
add
jnp
int
test
nop
call
dec
aaa
repnz
mov
pop
data16
sub
cld
add
mov
push
add
daa
mov
es
jno
mov
cs
cmp
aas
xor
push
xor
int
loop
cmp
add
push
imul
xorb
jp
add
dec
inc
xchg
pop
repnz
xchg
scas
lahf
loop
push
inc
mov
jge
mov
test
sbb
sub
xor
dec
mov
fiaddl
cli
or
inc
cmpsb
add
mov
push
fcompl
add
jle
xor
into
sbb
shll
cmp
xor
add
inc
jecxz
add
rorl
inc
mov
add
daa
clc
outsb
add
cmp
dec
inc
mov
add
lods
push
sbb
adc
push
sbb
divb
sub
int3
in
mov
adc
in
les
jmp
psubsb
test
xchg
loopne
push
xorl
add
mov
cli
data16
out
pop
gs
mov
repz
mov
orl
out
scas
mov
adc
push
xchg
xor
orl
jmp
add
fildll
bound
in
pusha
mov
add
faddl
jbe
sarb
push
push
add
lods
aaa
stos
mov
out
mov
andb
jp
pop
mov
pusha
scas
orl
add
xchg
adc
add
sarb
sbb
push
orl
push
outsl
or
xchg
push
cmp
add
popf
jnp
cmpb
imul
jnp
daa
mov
jg
lret
push
in
repnz
or
loope
cmp
adc
pop
push
je
dec
call
cmp
imul
cmp
jnp
loopne
xchg
aas
addb
xorl
clc
pop
popf
add
push
jo
mov
push
cmp
fucomp
add
test
and
popf
xlat
repz
add
add
stc
jb
aam
pop
adcl
inc
movsb
aas
pop
nop
add
add
cmc
pushf
add
test
scas
je
pop
fidivl
jbe
push
pop
xor
icebp
push
call
insl
or
loopne
fldt
pop
mov
sbb
xor
add
std
loopne
add
xchg
add
fisubl
fwait
add
sbb
fcoms
pop
data16
loope
mov
jg
mov
aas
sbb
or
xor
push
jb
jle
cmp
add
push
adcl
xchg
add
mov
lds
xchg
loope
add
sub
ret
testb
xchg
mov
xlat
add
fnstcw
in
mov
mov
gs
shlb
mov
shl
inc
add
adc
jbe
add
inc
rorb
cmpsl
sbb
lcall
mov
mov
jmp
add
ret
jb
mov
push
lods
lahf
add
loop
dec
lods
sbb
add
xchg
andl
pop
sbb
inc
mov
ret
xchg
xchg
lcall
inc
rorb
add
repnz
je
jmp
stos
clc
sub
cmp
push
scas
adc
inc
stc
rclb
cmp
pop
xchg
in
pop
push
mov
mov
adc
jmp
jl
push
out
jle
rclb
add
cltd
fldt
adc
lods
je
mov
push
or
inc
stos
or
outsb
xchg
lea
add
pop
cld
or
sbb
inc
xlat
in
addr16
xor
xor
push
push
and
add
addr16
int3
in
test
jno
inc
movsl
or
add
js
add
lods
pushf
imul
lcall
nop
or
addr16
sar
add
hlt
sbb
and
ds
shl
xlat
mov
jae
add
pop
xchg
and
sbb
add
lahf
adc
xchg
xor
in
mov
out
mov
dec
jbe
dec
pop
aas
cs
xchg
sahf
push
jae
jge
mulb
xchg
add
mov
jmp
outsb
adc
cmp
sarl
mov
out
pop
add
adc
pushf
je
imul
mov
outsl
cltd
les
rolb
lods
imul
out
ficoms
nop
jbe
add
jmp
mov
cmpb
loopne
ja
lret
mov
inc
sub
dec
and
mov
cmp
mov
sub
hlt
add
in
add
xor
lock
add
or
icebp
out
jns
lret
pop
inc
and
pop
jnp
aas
add
inc
in
js
je
pop
lret
out
stos
mov
iret
jp
lods
add
movsl
daa
addb
jae
repnz
add
fs
mov
int
fcoml
inc
ret
and
shlb
cwtl
rcl
mov
add
sub
lods
add
in
push
fidivrl
jge
aas
js
inc
mov
loopne
rorl
lea
pop
add
push
push
pusha
add
push
inc
cmp
mov
cmpsb
nop
sub
adc
sbb
ja
daa
dec
scas
xchg
addr16
add
insl
add
xorb
and
daa
hlt
push
dec
xchg
or
outsb
cmp
call
scas
enter
int
and
mov
inc
fwait
add
xchg
popa
jno
mov
add
pop
jns
cmc
or
mov
cmp
outsl
mov
data16
popa
add
xor
add
divl
je
add
cmp
add
lods
das
mov
cmp
stos
aam
mov
test
mov
and
jmp
jae
arpl
test
and
add
imul
mov
scas
mov
inc
shrb
mov
push
jp
adc
jle
pusha
scas
dec
or
xorb
mov
inc
dec
xor
leave
jp
les
add
ret
flds
xor
bound
xor
ds
js
add
or
mov
or
add
and
xchg
inc
add
push
mov
xor
push
orb
dec
imul
adc
xchg
call
in
or
add
loope
pop
jl
mov
cwtl
les
aam
dec
mov
test
mov
out
call
stc
mov
cwtl
push
in
or
hlt
and
fcompl
pop
enter
sbb
pop
and
push
mov
test
lods
add
bsf
or
movsb
push
add
pop
mov
add
jnp
add
and
sub
rcll
cmc
inc
dec
addl
xchg
les
mov
mov
data16
sbb
pusha
test
ljmp
das
lods
jnp
cmp
cmc
mov
add
add
push
adc
repnz
popf
cmpsb
push
rol
adc
sbb
add
adc
les
xor
std
add
rcrl
mov
ljmp
push
fidivrs
dec
sbb
add
mov
rol
pop
adc
mov
xor
and
jecxz
out
std
add
rclb
lods
inc
in
push
es
loop
mov
or
dec
xlat
nop
aaa
lcall
les
aas
dec
add
jne
insl
fwait
mov
js
fmull
enter
push
pop
outsl
jmp
add
xchg
add
sub
and
mov
hlt
scas
jle
add
xchg
in
add
js
cld
into
adc
jne
scas
add
sub
xorb
push
in
mov
call
pop
fldt
ss
pushf
fldl
jo
enter
aaa
gs
lcall
push
pop
pop
mov
add
ficomps
jns
lahf
add
cmp
dec
sbb
stos
ja
inc
mov
add
stos
cli
push
mov
mov
gs
dec
lods
sbb
inc
xor
add
scas
lods
loopne
mov
xor
fimuls
inc
add
imul
nop
scas
sahf
xor
mov
aad
jbe
int
lock
xrelease
push
mov
popa
add
test
xchg
bound
push
cmpsb
imul
xchg
repz
rorb
push
jne
cld
fldl
cmc
cmp
adc
xor
adc
push
fistpll
push
add
add
sbb
mov
sub
xchg
enter
jns
mov
jae
mov
pop
lea
xchg
test
pop
mov
mov
cld
or
xor
ret
inc
icebp
sbb
xchg
loop
xor
add
daa
mov
mov
jge
in
loop
add
dec
lahf
xor
mov
add
iret
shl
nop
add
xorps
cmp
xchg
nop
das
xor
add
adc
pushw
sub
pop
ja
add
mov
loope
dec
pop
hlt
decb
jne
cmc
or
cmp
out
loop
adc
xchg
add
int
or
lcall
mov
test
hlt
mov
and
cmc
cmp
pop
sets
pop
pop
inc
xor
stc
mov
dec
enter
xchg
test
and
shlb
gs
mov
std
in
mov
fwait
adc
sub
clc
push
sahf
and
jecxz
mov
sbb
lcall
mov
pusha
mov
pushf
sub
and
sahf
dec
add
pop
add
pop
cld
fadds
and
add
aaa
push
rcr
and
push
push
or
pop
jecxz
sbb
sbb
push
iret
cmc
mov
inc
fistpll
mov
loopne
test
or
cmp
aas
sub
mov
adc
test
nop
xchg
cmp
or
xchg
shll
movsl
andb
in
add
dec
and
into
fisttps
sbb
sub
jo
out
fldt
push
and
mov
or
js
icebp
jns
push
test
popa
loopne
in
mov
mov
das
add
cmpsl
or
int3
cmp
add
fs
in
dec
roll
stos
inc
popa
dec
imull
imul
daa
movsb
xchg
add
and
add
andl
popa
add
aad
mov
sub
pop
je
inc
stos
jbe
pop
lret
int
push
fidivs
and
cmp
and
pop
add
mov
inc
cmp
inc
pop
pop
mov
inc
adc
cmp
aaa
outsl
pop
push
xchg
and
adc
xor
cli
sbb
pop
lahf
cs
dec
pslld
jmp
xchg
add
fmull
in
enter
popf
add
and
cmp
out
add
mov
push
or
fadd
dec
add
lock
jle
sbb
nop
add
push
push
or
and
sub
stos
dec
fmull
add
pop
pop
mov
add
sub
dec
movsb
adc
xorb
cld
push
bnd
add
jo
lret
sarl
int
pusha
scas
mov
fs
or
pop
cli
sbb
imul
add
push
or
stos
add
testl
and
push
leave
add
dec
xor
inc
bound
add
mull
outsb
mov
add
or
nop
sub
sbb
cmpsb
pop
loopne
icebp
iret
stos
call
sub
add
or
enter
iret
pavgb
fdivrp
cwtl
rorl
fsubrs
jp
and
rcrb
adc
jae
jle
jb
or
or
add
or
das
sarb
fmull
cmovo
push
loop
xchg
adc
pop
adcl
sti
arpl
xchg
mov
ds
aad
jnp
popf
jecxz
adc
adc
xchg
cmp
lcall
lahf
or
add
mov
dec
mov
test
insb
inc
jnp
out
cmp
inc
inc
sbb
fwait
mov
dec
outsl
pop
push
inc
nop
pop
stos
xchg
fiadds
cmc
test
add
ret
cli
push
pop
les
mov
push
ja
dec
and
outsb
or
xor
xchg
jb
pusha
in
imul
sbb
sbb
pusha
fs
loopne
bound
sti
sub
pusha
rolb
jecxz
adc
adcb
jne
and
adc
mov
xor
push
pop
add
outsl
inc
dec
jl
mov
loope
push
jecxz
int3
arpl
and
add
test
in
or
add
mov
mov
inc
add
push
lret
mov
inc
outsb
fnstcw
push
mov
inc
pop
dec
xchg
add
out
lods
out
jg
shll
inc
clc
adc
add
mov
push
cli
push
xchg
push
jle
xchg
in
ret
enter
popa
stos
dec
add
pop
call
add
ret
push
pop
or
xchg
loope
add
nop
inc
es
sarb
sub
in
add
insl
fidivrs
add
or
add
jae
rcrl
fadds
xor
cmc
cmp
call
into
xor
add
mov
scas
test
add
pop
mov
mov
mov
cmp
ret
addb
cmp
rcrb
mull
pop
push
push
subb
inc
ds
nop
out
mov
sarl
add
ja
mov
push
data16
mov
inc
ret
jl
add
sub
int3
jge
outsb
dec
adc
xor
add
pusha
xchg
push
and
pop
add
imul
cld
cmpsb
pop
leave
pop
fstpt
pop
xchg
jmp
xchg
iret
pusha
push
dec
push
pop
sbb
mov
arpl
add
cmpsl
rolb
sbb
pop
mov
dec
in
pop
pop
punpcklbw
xor
leave
fadds
jg
push
inc
mov
fwait
add
jnp
fs
cmp
add
das
pop
mov
jo
mov
add
sbbl
push
mov
sahf
pop
outsl
add
and
jmp
stc
or
cmc
or
pop
push
outsl
mov
enter
or
les
icebp
cmp
xor
popf
add
xchg
popa
or
jnp
push
push
movsl
push
mov
jno
pop
out
repz
add
stos
movsl
aaa
xor
jo
cmpsb
loop
insb
sbb
jl
push
cwtl
dec
xor
insb
push
cmpsl
ja
xchg
sub
add
cld
in
rcrl
stos
pop
lcall
sub
or
push
add
sub
lods
jo
xorb
mov
add
jg
cmpsb
popf
adc
add
or
mov
pusha
xchg
ljmp
cmp
rol
aas
add
dec
fidivs
int3
insl
dec
mov
dec
rcrb
and
arpl
pop
jbe
mov
and
pop
cmp
lcall
mov
xor
add
mov
outsl
jno
add
andl
cld
xchg
add
push
mov
push
or
leave
xor
cmp
ds
mov
filds
test
into
cld
or
lds
xchg
sub
movsl
push
out
cmp
iret
or
add
arpl
jmp
les
mov
ds
pop
mov
mov
adc
cmpsl
xchg
add
fdivs
xchg
pusha
xor
push
jo
js
rcrb
mov
mov
fldt
out
xchg
loope
add
xchg
addb
cmpsb
mov
fldl
scas
ja
shrl
cli
out
add
adc
sbb
inc
dec
jmp
enter
sbb
inc
inc
xor
add
pop
lret
andb
xchg
xor
lcall
add
mov
int
jne
pop
loope
enter
adc
add
test
add
into
out
add
aas
test
mov
jo
pushf
inc
add
xor
mov
mov
push
mov
or
je
clc
ret
ficoml
std
add
mov
add
pop
sbb
call
loopne
repnz
add
dec
jns
add
in
push
xor
fs
adc
xor
sarb
pop
and
cltd
pusha
sbb
lock
mov
rep
pop
sbb
adc
fisubs
and
and
lods
pusha
aas
in
pushf
subl
mov
stos
cli
cmp
fcomps
mov
adc
jmp
add
push
ffree
aad
or
inc
or
dec
jo
lds
dec
dec
or
or
add
pop
sahf
shll
mov
fcmovbe
popa
inc
push
addr16
push
arpl
ja
aam
cmp
add
dec
adc
add
pop
push
or
les
push
subl
cli
dec
or
test
js
pcmpgtw
mov
sbb
lock
push
test
orb
shll
cmp
data16
and
fildll
in
int3
outsb
or
fs
loope
int3
jne
subl
into
testl
jb
add
dec
es
pop
enter
push
scas
loop
and
sub
mov
sti
push
lret
je
add
mov
add
jo
cmp
mov
adc
jb,pt
push
jae
cltd
cmp
mov
pop
out
int
pusha
add
xor
adc
mov
pop
clc
les
sbb
test
mov
mov
xlat
in
add
mov
push
rolb
jae
mov
lret
repz
jo
incb
repnz
add
aas
imul
xor
pop
push
into
dec
aaa
mov
inc
push
out
imul
pop
pushf
inc
inc
dec
sub
mov
lcall
outsl
loope
and
pop
add
or
aas
xchg
mov
adc
imul
shl
add
and
bound
or
es
cli
push
fidivl
pop
sbb
hlt
mov
inc
mov
fsincos
add
and
jnp
mov
add
pop
dec
negb
out
cmp
jae
mov
lods
xchg
fucomp
shll
out
addb
or
cmp
scas
push
mov
push
dec
add
xchg
fdivr
iret
hlt
add
pop
jnp
add
nop
les
rcrb
xor
inc
add
mov
adc
or
add
fcompl
dec
sbb
xor
mov
push
subb
ret
add
aas
nop
xlat
aad
adc
imul
sub
fidivrs
outsb
enter
leave
dec
xlat
add
out
lahf
dec
cmp
ja
lds
mov
out
mov
sbb
out
popa
add
data16
loopne
movsl
sub
mov
or
lods
sbb
daa
xor
dec
mov
bound
sbb
andl
jecxz
fiaddl
mov
lods
leave
jmp
xor
jo
sarb
test
xchg
arpl
lods
hlt
or
cmp
sub
inc
adc
mov
sub
not
jp
sbb
inc
or
mov
add
and
adc
insb
test
clc
push
sbbb
xchg
lods
inc
and
xchg
aas
cmp
inc
addl
xchg
ss
mov
xor
adc
mov
or
aam
cmp
sahf
lock
add
inc
inc
in
cmpsb
aas
mov
pop
lahf
jae
jp
jo
cmp
cmp
sbb
ljmp
cmp
sbb
icebp
cmp
push
roll
sub
lods
dec
sub
add
add
sbb
gs
rcrl
and
lods
cmp
mov
xchg
cmp
cltd
add
mov
sbb
fidivrl
lea
xorb
push
data16
andl
add
mov
adc
sbb
add
add
jl
dec
bound
pop
adc
add
roll
lret
add
mov
xchg
sub
fcomi
add
push
pop
xchg
andl
add
inc
faddl
out
sbb
insb
push
mov
dec
hlt
addr16
mov
or
loop
outsb
add
xchg
sub
pop
aam
push
mov
jo
movsl
cli
aaa
sti
add
mov
xor
int
cmpb
add
sbb
cmpsb
add
and
mov
sbb
out
subl
push
fadds
scas
xchg
dec
mov
add
shrl
scas
push
add
cmp
sbb
xchg
add
pop
dec
lret
xchg
pop
inc
add
pop
inc
xor
sbb
fiadds
mov
push
insb
push
movsb
sub
pop
xlat
jns
stc
decl
pop
xchg
lock
clc
cmp
popa
movsl
push
pop
loop
add
xor
add
lret
ss
or
push
rolb
cmp
ja
aam
add
sbb
negb
xorb
cld
jne
xchg
sbb
imul
adcb
add
mov
sbb
add
push
in
mov
and
pushf
dec
enter
data16
jl
cmc
mov
and
loopne
or
insl
int
lahf
push
add
mov
fnstenv
dec
pusha
add
xlat
shlb
push
pop
or
notl
inc
pop
jnp
in
addb
test
adcl
loopne
ja
mov
xchg
flds
cmp
into
sahf
push
cmp
jecxz
xor
add
jne
xchg
xor
and
jns
push
int
fcmovnbe
imul
jg
add
cmp
test
out
call
loope
ds
sbb
mov
je
add
adc
jp
add
pusha
or
push
mov
popf
xlat
aas
pop
daa
mov
cmpsl
cmp
sub
cmp
adc
xchg
cmp
sysret
cmp
and
xor
dec
jle
orb
incl
jnp
sbb
gs
jo
lret
mov
pop
push
pusha
loope
adc
mov
faddp
jb
into
adc
scas
lret
xor
xchg
mov
pop
or
dec
movsl
test
add
push
jmp
pop
outsl
push
roll
rcrl
addps
out
pop
add
jp
js
inc
insl
test
xor
xchg
bound
push
jb
add
shrb
jge
cs
aas
iret
cmp
adc
push
stc
int
sub
add
shr
in
and
xlat
lods
add
pop
hlt
xchg
std
in
scas
add
xor
mov
into
add
jno
pop
cli
addl
mov
mov
arpl
int
std
ret
andb
fcoml
push
mov
aaa
jp
gs
inc
add
push
adc
mov
pop
cmp
loopne
out
jmp
and
stos
push
jp
icebp
sbb
daa
clc
mov
cmp
arpl
ret
faddp
adc
jl
add
cmp
lods
subb
pushf
jmp
cmp
mov
ret
in
insb
push
shlb
pop
adc
out
pop
and
add
xor
fildl
cmc
mov
testl
imul
pop
mov
sub
sub
jae
movsb
xchg
adc
mov
mov
mov
and
pop
repnz
mov
and
cli
adc
loopne
sbb
les
movsb
add
pop
sbb
mulps
add
js
or
hlt
cmp
mov
mov
lock
lods
mov
or
mov
xlat
test
inc
sub
std
mov
sub
jl
cld
aam
repz
nop
dec
mov
gs
enter
or
outsl
mov
mov
fidivrs
popa
stc
loopne
mov
add
fnsave
cmp
clc
sbb
fcmovnb
arpl
lret
adc
std
loopne
dec
adc
mov
fwait
push
into
shrl
xchg
add
test
inc
int3
out
ucomiss
pop
mov
aam
pop
add
inc
arpl
stos
sbb
pushf
rorb
add
scas
mov
xlat
mov
shr
add
nop
setns
aad
or
xor
addb
cmp
cmp
hlt
push
clc
add
fdivrs
or
outsl
cmpsb
dec
and
std
push
jo
xchg
pop
dec
lods
push
add
lret
ljmp
scas
add
or
cmp
lret
pop
pop
jne
push
scas
popf
int
mov
enter
shll
mov
lahf
cmp
sbb
xchg
int
negl
mov
jl
das
arpl
dec
test
adc
out
mov
jnp
rorb
cmp
loop
inc
inc
adc
sbb
inc
test
pushf
icebp
sbb
sbb
inc
pop
lock
xlat
imul
add
lahf
test
add
sti
test
rorl
cmpsb
ljmp
push
sbb
pop
sbb
clc
mov
mov
add
out
or
out
lock
xchg
lahf
pop
insl
add
cmpsl
inc
jae
inc
xor
ljmp
iret
add
lret
out
ffree
cmp
stos
pushf
pusha
loopne
cmp
add
xor
mov
mov
cmp
inc
jmp
in
test
add
out
int
mov
push
mov
popa
mov
pop
cmp
pusha
movsb
dec
pop
bound
push
movsb
or
stos
sahf
shlb
push
sub
and
mov
xor
adc
adc
jns
imul
xchg
add
xorb
cmp
rolb
out
inc
add
and
xchg
int3
in
mov
add
lret
out
sub
add
fldl
add
jecxz
xor
mov
add
xlat
sub
adc
cld
adc
jle
out
mov
add
xchg
dec
call
add
push
sub
inc
fcomp
arpl
outsb
in
add
icebp
add
jb
ds
push
mov
fisubl
add
test
leave
add
rcr
cmp
vpmullw
add
xchg
pop
or
jns
add
test
test
sub
mov
add
andl
add
inc
inc
xchg
dec
imul
jle
and
loop
add
and
hlt
enter
add
ffree
int
add
cmp
and
rcr
jbe
hlt
add
lods
mov
add
pop
xor
int
lret
pusha
js
mov
call
lcall
mov
pop
fdivl
cmpsl
shr
adc
or
mov
or
jo
int3
call
push
out
roll
jge
ja
lods
pop
xor
rolb
test
or
nop
mov
cmc
movsb
sub
ret
sub
mov
mov
xor
jb
inc
je
mov
ds
adc
mov
add
mov
test
pop
shl
iret
ljmp
jl
fdivrp
lcall
xor
or
out
fildll
cld
or
in
hlt
loopne
mov
pop
adc
pop
in
lahf
pusha
dec
fcoms
pop
xchg
jmp
add
pop
je
adc
pusha
pop
sbb
cmp
jne
xor
sub
sbb
xor
loop
out
fcomps
add
cs
lds
daa
pop
loopne
add
add
and
arpl
test
dec
loop
and
add
mov
pop
pop
sbb
add
sbb
inc
add
icebp
pop
jmp
int3
mov
xor
leave
cli
mov
xchg
cmc
jo
lret
push
add
test
fdivr
push
aas
aaa
mov
repz
add
and
mov
push
clc
pop
call
mov
shll
sub
cmp
movsb
inc
mov
push
sarb
mov
jae
lcall
add
jbe
sbb
sub
lret
and
in
mov
icebp
mov
call
jne
push
lds
cwtl
add
pop
insl
pop
add
inc
out
shl
mov
jg
mov
and
sbb
xor
mov
mov
pop
leave
push
ret
cld
ret
add
cmp
shrl
js
push
cltd
xor
pop
mov
inc
cwtl
sbb
shrb
add
jp
jae
mov
popa
or
aaa
or
sbb
mov
push
add
lcall
adc
inc
add
pusha
xor
xor
cli
ret
pop
mov
add
push
sarl
ljmp
inc
lahf
jmp
add
xor
push
add
fistpll
out
add
lods
les
and
sub
loope
movsb
lock
cmp
cmp
xorb
xor
sbb
in
adc
mov
dec
mov
mov
movsl
imul
in
testl
or
sti
sub
dec
or
ret
repz
inc
mov
ja
mov
pop
or
ret
jb
xchg
xor
sbb
stc
test
gs
sbb
iret
add
mov
mov
mov
adc
add
loop
subl
mov
fmull
add
scas
lods
and
gs
lock
rolb
jp
call
adc
fsubl
cmpsb
add
movsl
cli
lea
sbb
xchg
sub
inc
ds
mov
dec
sub
int3
add
sub
or
fadd
mov
sub
dec
pop
int3
jl
mov
inc
mov
xor
sbb
jo
xor
and
mov
jnp
push
mov
leave
loopne
lea
or
add
or
mov
push
les
dec
adc
jp
int
ret
loopne
add
dec
jge
repz
add
into
lock
and
icebp
out
mov
mov
rorl
in
popl
aam
mov
bound
add
cwtl
cmp
add
or
test
push
mov
jne
add
push
push
mov
sbb
lea
les
xchg
loopne
inc
fwait
or
mov
movsb
cwtl
or
aas
shll
sbb
inc
mov
fimuls
movsb
rolb
and
mov
pop
nop
andl
inc
outsb
mov
fsubs
in
and
lds
add
cltd
jns
dec
sbb
add
adc
les
repnz
loopne
lret
ret
sub
pop
fldenv
xchg
bsf
add
jp
add
movsl
sub
mov
adc
inc
mov
add
jg
or
add
lds
pop
insb
jp
inc
xorl
sub
sub
fcmovnb
mov
xchg
test
icebp
ss
push
xor
leave
push
xor
jl
outsl
add
popa
mov
and
fstpt
and
int3
scas
jg
add
push
out
daa
pop
push
add
cwtl
loopne
sub
pop
or
mov
jbe
in
in
cli
rol
pop
idivb
test
fldl
xchg
clc
mov
insb
add
incl
das
add
ss
sub
sbb
xchg
dec
dec
inc
rcr
sub
out
sti
mov
add
mov
jecxz
add
xlat
loopne
mov
push
and
mov
cmp
sti
or
imull
mov
push
sbb
hlt
enter
adc
mov
mov
push
add
out
pop
ljmp
jmp
in
add
cld
xchg
or
rcrl
inc
mov
push
push
fimull
jnp
aas
lock
es
mov
lea
mov
cmp
sub
shr
jns
mov
add
pop
enter
lahf
add
daa
out
push
aam
cmp
dec
incb
sarb
add
icebp
jge
sbb
jns,pt
add
pop
es
and
fiaddl
insl
bound
mov
int3
and
verw
push
mov
adc
icebp
adc
js
hlt
mov
in
adc
lds
dec
sbb
or
mov
outsl
int3
rolb
dec
add
movsl
hlt
test
stc
cmp
loope
sbb
cmp
push
jae
sbbl
inc
sub
out
xor
push
cmpsb
call
push
mov
dec
idivl
pusha
pop
mov
xor
add
lds
push
xchg
stc
mov
add
mov
sarb
push
or
loop
outsb
mov
pusha
mov
xchg
push
popf
es
cvttps2pi
mov
push
pop
aas
mov
mov
outsb
cld
movsl
pop
popf
test
lock
jbe
inc
inc
add
mov
subb
out
lret
mov
rol
and
cltd
push
cmp
enter
jl
sbb
prefetch
popf
in
rorb
stc
mov
testl
push
or
inc
inc
inc
mov
add
inc
sub
jae
gs
pop
inc
std
shlb
roll
and
mov
ds
lock
cld
call
enter
fadds
mov
push
lret
mov
in
imul
sbbb
mov
pop
and
cmp
push
mov
ret
inc
call
push
test
inc
shlb
in
add
push
jae
dec
into
hlt
add
push
push
or
mov
xorl
and
sarb
hlt
add
repz
cmc
xchg
lods
adc
adc
enter
dec
pusha
cmp
push
sbb
sbb
or
mov
rorl
and
sub
and
cmp
push
push
add
sbb
xchg
add
aam
mov
add
mov
daa
pop
ret
pop
cmc
jge
pop
inc
lock
sahf
xor
add
repnz
push
or
jl
dec
add
mov
add
lcall
sbb
inc
aas
mov
sbb
icebp
jecxz
pushf
xor
xor
fildll
push
jmp
sbb
pop
push
push
push
add
pusha
mov
in
jbe
or
lahf
aas
adc
add
pop
add
mov
into
add
cmp
repz
call
cltd
inc
fs
xlat
add
and
mov
rorb
fildl
dec
cmp
dec
enter
add
popf
ss
lahf
xchg
inc
xor
sub
add
int
inc
nop
mov
icebp
add
sbb
aaa
shll
jnp
xor
mov
jo
shlb
fisttpll
jb
add
int
ja
in
pop
jbe
arpl
clc
or
popf
popf
test
jo
xor
mov
inc
add
cmp
add
aad
cmp
testb
or
rcr
arpl
add
loope
adc
add
out
mov
outsl
es
mov
add
inc
test
mov
xchg
add
adc
cmpsl
rolb
lret
lea
sub
add
inc
cmp
push
sbb
loopne
pushf
jns
in
int3
hlt
dec
add
sub
pusha
ljmp
rcrb
push
mov
sbb
add
pop
int
add
lods
dec
push
stos
fmulp
jno
sub
mov
add
inc
mov
rcrb
cld
mov
inc
aas
mov
inc
movsb
jae
add
outsb
mov
push
jno
mov
mov
inc
cld
or
ds
sbb
mov
insl
mov
mov
add
pushf
fiaddl
mov
sub
add
cmc
mov
and
clc
mov
sarb
inc
add
dec
lahf
adc
pushf
ds
pop
loope
push
or
les
mov
psubb
and
add
roll
dec
cs
cmp
in
fsubrs
jne
hlt
pop
rolb
and
and
lret
pop
add
lds
cmc
adc
or
and
pop
stos
cmc
pextrw
loopne
cltd
xchg
or
pop
or
jg
sarb
inc
dec
shrb
in
jl
pusha
shlb
ss
xor
pusha
xlat
dec
add
and
shlb
aas
lock
inc
out
add
inc
mov
xor
popa
aaa
shr
mov
movsb
mov
andl
imul
add
mov
add
popa
cmp
sub
xchg
jo
sahf
ror
jp
imul
mov
push
sub
add
xor
sbb
cmp
ret
add
xchg
sub
in
add
ffreep
jne
pop
in
xor
hlt
adc
or
lods
jg
push
pop
cmp
or
aam
andb
or
push
ret
add
or
dec
ret
cwtl
xchg
pop
xchg
xorb
adc
or
jne
clc
hlt
push
or
xchg
icebp
add
insl
inc
mov
or
jne
setle
movsb
add
or
stc
push
or
xchg
sahf
adc
dec
aam
and
adc
cwtl
test
cwtl
loop
iret
lods
pusha
loopne
inc
nop
hlt
add
repz
add
movsl
cli
xorb
gs
cmp
jo
push
add
inc
adc
sub
and
pop
daa
inc
add
mov
mov
je
sbb
add
jl
scas
inc
jbe
in
pop
aad
add
jmp
enter
sbb
xchg
jne
add
cmp
pushf
ret
inc
fdivl
loopne
insb
push
in
inc
push
mov
inc
sbb
arpl
clc
bound
jbe
lock
ja
add
mov
jae
add
enter
and
repz
divb
daa
mov
gs
dec
jbe
add
add
into
xchg
pushf
shrb
add
jp
imul
int
add
bound
popa
sub
fnstsw
jge
add
mov
cmp
xchg
das
xor
push
jecxz
nop
jle
jbe
aad
mov
mov
add
push
loopne
sahf
lcall
inc
pop
outsl
push
fcmovb
dec
popl
je
sub
or
add
out
sub
or
out
gs
mov
jne
push
push
lret
cli
sbb
and
lahf
push
addr16
ljmp
test
iret
add
inc
add
out
xor
rolb
fistpl
dec
add
inc
decb
and
cltd
test
jo
lcall
cmc
add
or
stos
fwait
jg
add
add
das
inc
inc
add
inc
cmpsb
scas
add
movsb
subb
ret
mov
jb
test
data16
or
in
and
xchg
xor
sarl
push
mov
pop
jb
dec
mov
jl
dec
mov
insl
sbb
inc
les
shll
jae
or
pusha
inc
adcb
pop
sbb
leave
test
xor
sub
push
jo
jns
xchg
sbb
add
outsl
cltd
and
add
and
mov
xor
add
shl
in
enter
add
lret
push
rorl
cmp
mov
out
cmp
dec
iret
andl
push
addb
pop
decl
pusha
sti
call
add
ret
mov
jmp
fwait
add
test
push
orl
mov
std
pop
adc
cmpsb
out
add
xchg
sbb
movsl
or
test
loopne
jmp
or
mov
mov
repnz
notb
add
pushf
dec
sbb
test
cmp
ds
je
pop
jns
jo
add
insl
inc
add
repnz
shlb
and
jnp
pop
sub
ljmp
cmp
sbb
jge
pushf
or
and
add
adc
orl
in
loopne
pop
adc
add
add
push
stos
or
add
arpl
into
ja
add
pop
mov
int
jae
inc
lcall
inc
stos
lock
scas
push
movsb
shrl
add
test
pusha
rcrb
outsl
add
ja
mov
ret
arpl
inc
push
jl
in
xchg
lock
sub
jns
sbb
lods
cmp
jb
mov
xchg
pop
pop
add
adc
lcall
jl
inc
dec
mov
loopne
pop
pop
enter
xchg
loopne,pt
xorb
or
outsb
jl
or
jp
add
lock
ret
out
mov
fistpll
loopne
xchg
aas
sub
cmp
inc
xor
mov
add
sub
push
js
outsb
inc
popf
add
cmp
and
mov
xor
push
cli
or
les
jae
sub
fildll
add
and
lods
inc
pushf
int
sarb
mov
fdivs
aam
repnz
xorb
sbb
stos
stos
inc
mov
add
faddl
push
add
lahf
cmp
or
mov
jns
lret
mov
jl
pusha
lock
je
jle
popa
sbb
inc
cmp
dec
outsl
mov
push
pop
ficompl
lret
dec
add
testb
cmp
push
filds
sbb
lods
lahf
inc
fxch
cli
jp
jnp
add
and
subl
sbb
and
cmp
and
jnp
add
sbb
sub
aad
nop
xchg
mov
xor
and
add
cmp
mov
pop
insl
add
pop
orb
pop
xor
jmp
dec
sbb
pusha
mov
int
mov
jo
push
lahf
scas
or
add
add
outsb
js
fmuls
mov
pop
add
mov
inc
pop
add
pop
cmp
xchg
jnp
sbb
rcl
push
push
fcoml
sbb
sbb
das
jle
cmp
jno
outsb
into
hlt
xor
js
and
stos
add
int
cmp
fsubrl
jnp
ljmp
mov
addl
ret
sub
mov
stos
fadds
jbe
popa
push
push
pop
add
jne
rolb
xchg
loope
sbb
xchg
push
jne
add
mov
lock
lock
pop
cmovp
sbb
cmpsb
add
xchg
decl
push
cmp
sti
pop
adc
dec
faddl
aas
icebp
aad
mov
xorb
les
jno
cltd
jg
sarb
jle
xor
jo
push
add
jge
dec
fidivs
inc
shrb
jge
cwtl
lret
add
xlat
dec
rcrb
lods
mov
cs
jp
add
fwait
push
xchg
dec
jo
stc
or
mov
add
scas
out
loopne
and
ret
adc
jle
and
sub
xchg
int3
fisubs
shr
and
repz
aaa
scas
mov
mov
outsl
add
jecxz
dec
pop
jo
enter
aas
cmc
test
or
das
inc
mov
and
push
fcoml
jge
xorb
pop
add
out
adc
fyl2xp1
inc
neg
mov
pusha
js
call
mov
cmpsb
add
mov
and
lcall
sbb
xchg
in
dec
sub
movsl
add
jbe
cwtl
pop
add
cmp
jnp
xor
cmpl
push
out
fnsave
ljmp
or
jbe
xor
add
cltd
xchg
fadd
test
pushf
cmpsl
adc
test
add
and
xchg
adc
sbb
js
mov
ds
jg
sahf
push
or
push
sbb
stos
mov
mov
pushf
shlb
mov
dec
inc
pop
imul
test
fbld
dec
rcll
xor
and
push
ror
in
mov
adc
flds
lods
iret
jbe
pop
hlt
push
mov
loopne
insl
or
add
cmp
adc
push
sbb
xchg
inc
adc
loopne
jo
data16
shr
xchg
dec
das
rcll
hlt
test
add
xor
cmp
rcl
jmp
movsb
pop
jle
mov
in
and
sbb
cmpsl
add
movl
mov
adc
repnz
loop
sub
sub
out
addr16
nop
add
inc
fiadds
add
pop
xor
xor
ret
mov
lods
mov
jo
out
lret
jo
jnp
push
dec
cs
inc
test
add
frstor
das
inc
add
mov
sbb
inc
pusha
enter
paddw
js
cmp
ljmp
inc
jl
icebp
out
inc
cmpsb
cmpb
shlb
cmp
je
jl
out
add
adc
cltd
jle
add
jo
iret
sbb
dec
pop
fldl
mov
pop
pop
lret
xchg
cmp
pop
call
and
add
fsubrs
jb
jmp
addr16
pop
leave
add
sahf
add
pop
jge
lret
pop
cmpsb
inc
sub
leave
add
xor
ja
or
push
loopne
inc
movb
shlb
push
and
es
popl
js
sbb
xor
mov
jp
jbe
pop
adc
lods
mov
sbb
flds
add
or
inc
cmp
and
cld
add
jg
lods
inc
mov
movsb
sbb
adc
push
mov
inc
les
outsl
cwtl
stos
dec
inc
fmull
dec
ret
xor
inc
xor
jne
add
or
insl
add
repnz
stc
js
pop
xor
or
add
xor
repnz
out
inc
dec
mov
dec
push
les
je
lahf
negl
add
mov
testb
add
es
jg
out
data16
addl
lret
push
pusha
jl
or
sub
push
dec
jmp
scas
mov
or
sbb
pop
nop
lds
mov
data16
fcomip
shlb
jl
xor
clc
les
sbb
std
add
add
and
enter
repnz
rclb
fstpl
pusha
sub
fadds
outsb
loope
lds
dec
pop
mov
jbe
sub
inc
fadd
add
shlb
fwait
addl
add
and
xchg
mov
int
sarl
add
mov
dec
pop
les
pop
jmp
jp
or
mov
mov
jle
lods
jno
test
add
inc
cltd
mov
fiadds
dec
or
add
movsb
xchg
sbb
adc
adc
cmpsl
out
and
xor
in
das
push
dec
daa
mov
pop
add
mov
add
pop
out
xorb
push
adc
cmpb
mov
nop
and
fwait
pop
add
and
cltd
divl
mov
imul
pop
adc
sahf
inc
add
iret
movsb
shrb
push
lods
add
mov
mov
ffreep
jne
add
lods
mov
repnz
mov
loop
adc
cmc
dec
jb
xchg
add
mov
fdivrl
adc
fidivs
ljmp
test
pop
push
movsb
mov
lea
rclb
icebp
add
insb
fwait
pop
mov
add
push
pop
add
sarb
add
in
sbb
call
inc
js
push
cmp
les
push
or
xchg
pushf
add
cli
loop
nop
dec
add
ss
push
xchg
shlb
cmp
loopne
add
das
mov
push
add
mov
inc
push
test
rol
dec
dec
push
push
xor
ret
and
or
mov
adc
add
jmp
leave
sbb
adc
inc
mov
in
sub
add
fs
xchg
xchg
ss
in
ret
loopne
and
aam
and
and
mov
stos
inc
xor
loopne
lret
inc
jns
xor
cld
rcll
jmp
decb
cmp
sub
xchg
int
inc
lcall
decb
aad
jecxz
or
fistpl
push
cs
in
addb
lock
cmp
mov
je
add
test
into
lds
andnps
dec
add
jo
pop
sbb
fisttps
repnz
jb
add
sub
adc
xchg
dec
add
mov
or
xor
adc
xchg
loope
add
fidivs
jg
ftst
pusha
pop
jbe
jae
mov
lret
aam
jg
fmull
pop
push
xchg
movb
mov
dec
iret
add
sbb
xchg
pop
out
mov
adc
es
into
add
xor
ret
leave
test
inc
js
mov
and
push
pop
xchg
xor
aad
test
mov
cmpsb
sti
sbbb
shll
push
mov
sbb
jl
shlb
filds
aam
cs
xchg
lcall
pop
sbb
inc
sbb
cltd
mov
cmpl
mov
and
sbb
mov
test
adcb
movl
push
mov
test
sbb
add
fstpl
add
xor
addr16
dec
mov
adc
outsl
fcomp
sarb
fwait
add
push
sub
pop
fnstcw
aam
mov
add
std
test
xchg
cwtl
insb
xor
jnp
in
fcoms
lea
arpl
movsb
ret
adc
mov
cmp
xor
add
aas
ss
cli
push
cmpb
lret
cmpsb
in
add
cwtl
or
mov
insb
push
push
mov
dec
sbb
mov
mov
mov
pop
add
imul
pop
xor
scas
xchg
add
rcrl
xchg
int
das
pop
add
dec
mov
jle
daa
ss
fs
mov
mov
or
inc
hlt
hlt
test
and
loope
mov
jo
adc
jle
push
cld
sbb
out
mov
aam
and
cmp
addl
sub
cs
push
adc
push
and
in
roll
inc
sbb
imul
lcall
out
sub
mov
xchg
int
rcrb
mov
imul
jnp
sbb
nop
testb
dec
dec
ret
push
adc
scas
mov
popf
pop
call
mov
es
or
mov
mov
inc
jmp
or
insb
scas
xchg
adc
stos
mov
add
mov
sub
push
pushf
dec
lar
mov
js
pusha
sbb
jae
icebp
aad
loopne
xchg
filds
mov
sub
sbb
pusha
add
leave
xor
cmp
js
add
imul
sbb
test
cld
pusha
jne
mov
into
adc
inc
cld
xchg
xor
adc
daa
jb
mov
sbb
add
or
movsb
cltd
jne
add
sub
ja
or
add
icebp
add
mov
ficoms
sub
frstor
mov
lods
mov
jp
xor
loop
cmp
movb
and
stc
jecxz
bound
lret
cltd
add
loope
mov
cmp
inc
test
add
push
inc
sbb
in
out
out
mov
movswl
mov
mov
sub
test
push
adc
nop
mov
push
and
mov
es
jbe
mov
add
call
cmp
mov
cmpsl
xchg
inc
xor
pop
popf
sbb
fwait
in
pop
sub
add
xchg
xorl
ljmp
dec
mov
lea
inc
or
jp
insb
cli
cmc
xchg
cmpsb
aad
xor
ss
xchg
add
daa
test
mov
hlt
insl
and
push
xor
and
cmpsb
sub
xchg
fidivs
enter
stc
call
xchg
jp
add
xchg
pop
adc
jecxz
jle
je
roll
into
adc
sahf
mov
mov
sbb
cmp
push
mov
loopne
add
lods
add
out
mov
call
insb
xor
or
lcall
divb
inc
xor
or
ds
mov
cmp
ds
add
clc
mov
add
cltd
jecxz
out
leave
je
inc
mov
pop
test
aaa
mov
jo
mov
xchg
jns
jecxz
in
push
insb
cmp
pop
sbb
pop
lock
stos
in
stos
push
mov
bound
pusha
inc
es
xchg
shl
cwtl
mov
sbb
loope
dec
or
add
das
and
roll
cld
fstps
and
hlt
mov
in
add
ret
sub
push
add
test
andb
in
rolb
shlb
push
jb
daa
add
fdivl
jmp
add
add
rolb
lcall
push
scas
cmp
pop
je
adc
repnz
jns
movb
cmp
jae
fnsave
add
add
mov
adc
sar
inc
out
push
or
ret
fnstsw
aad
xor
xchg
jmp
adcb
arpl
out
les
flds
mov
imul
adc
int3
jo
cmp
push
add
lcall
fiaddl
enter
fadds
add
imull
iret
imul
push
je
cli
lods
adc
xchg
shlb
sub
mov
pop
add
lods
push
aaa
test
fimull
inc
lea
scas
jo
pusha
adc
bound
sub
mov
outsb
aam
ud1
inc
shl
add
adc
xchg
dec
push
add
mov
inc
or
mov
add
les
inc
and
imul
mov
xchg
and
pop
push
ja
xchg
das
mov
mull
mov
mov
or
xchg
repz
mov
stc
negl
inc
leave
push
int3
pusha
xlat
dec
pop
mov
arpl
mov
enter
fsubr
add
aad
pop
loop
addb
test
lret
add
mov
fsts
sub
push
adc
out
out
cmpsl
movsb
xchg
cmp
xchg
dec
pop
push
inc
stos
popl
in
hlt
and
lret
mov
pop
loopne
xor
aad
out
je
xor
add
sbb
sub
sbb
jmp
shll
sahf
jle
bnd
lcall
mov
js
sub
push
push
add
mov
ja
inc
add
or
dec
lds
test
sbb
add
mov
xor
loop
incb
lock
in
or
mov
sub
out
nop
test
add
sbb
jl
inc
std
es
xchg
push
sub
shrl
add
movsb
dec
testl
test
xchg
or
mov
add
xor
jle
jo
add
cmp
dec
out
mov
jnp
add
sub
bound
and
addr16
fstps
cmp
hlt
inc
insl
push
xchg
cmpsb
int3
cmp
pop
insb
dec
add
in
add
ljmp
pop
jp
add
cmp
lret
outsb
pop
aaa
add
xchg
add
cli
inc
xor
add
repz
or
cmp
ja
push
in
add
into
repnz
mov
sbb
jmp
call
out
pop
scas
pop
in
xorl
subb
xor
push
add
out
mov
cmp
enter
sbb
pop
daa
mov
mov
inc
inc
mov
stos
pop
add
maskmovq
testl
repnz
add
in
adc
rclb
clc
divb
and
sti
or
add
leave
xchg
cmp
sub
in
add
lods
sbb
ljmp
rolb
xchg
xchg
fidivrs
lock
push
add
repnz
sahf
mov
std
cld
pop
lret
add
lcall
data16
inc
mov
xchg
and
negb
mov
push
sahf
stc
imul
movsl
xchg
inc
fcoml
fcomps
adc
pop
pop
xchg
add
testl
cwtl
xchg
int3
or
lds
stos
sbb
pusha
lods
and
mov
mov
neg
add
push
arpl
addr16
add
jo
out
mov
cmp
add
scas
sahf
cmp
or
adc
add
lds
add
pop
fidivl
je
imul
mov
rcr
add
and
fcmovne
in
add
cmpsl
inc
and
add
dec
and
sbb
lds
aas
sbb
je
mov
or
inc
lods
pop
jmp
mov
fs
clc
push
fildl
xor
jl
jle
ret
add
aas
das
jne
add
cwtl
pop
lret
shrb
out
insb
ss
inc
sbb
jo
rclb
mov
and
dec
sub
cmpsb
add
mov
popa
and
xchg
lahf
shr
mov
jmp
xchg
sub
pushf
clc
pop
jp
add
int3
fnstenv
pop
lods
jne
inc
orb
data16
rcll
and
insl
sti
add
jnp
push
xor
sahf
fsubrs
cwtl
add
mov
push
push
add
mov
lcall
insl
jle
dec
repnz
cmp
xchg
xor
sub
mov
rorb
add
scas
pop
mov
mov
push
nop
jl
in
mov
sbb
xchg
mov
add
sbb
rolb
sub
aad
lock
das
in
add
imul
pop
xchg
ds
push
inc
push
sub
or
jg
xchg
pop
xor
popfw
pop
sbb
push
hlt
pusha
inc
xchg
jbe
add
das
int3
mov
add
pop
jge
add
xchg
pop
add
loopne
lahf
dec
mov
mov
add
mov
push
sub
nop
mov
add
add
mov
int3
repnz
frstor
mov
jne
sahf
add
add
and
jmp
test
mov
fisttps
icebp
mov
gs
lods
ret
sub
pop
mov
push
cli
add
pop
push
xchg
psadbw
lods
mov
aas
flds
add
mov
inc
push
add
sbb
add
or
dec
cs
add
jle
xchg
xor
cmp
and
add
or
scas
out
adc
cmpsb
or
imul
sub
lock
add
cmp
test
add
aad
mov
add
adc
jl
nop
sub
xchg
lret
mov
mov
or
nop
adc
clc
js
out
or
add
and
in
add
rep
cmpb
add
sbb
mov
xchg
testl
pushf
jne
inc
or
xor
cmp
loop
pop
call
rcrl
je
pop
lret
mov
aad
pop
add
shlb
in
pop
and
mov
mov
clc
hlt
je
jp
cmp
test
xchg
in
insl
xor
jbe
add
or
pusha
stos
and
test
clc
add
inc
sub
jae
les
add
imul
adc
sahf
cs
add
sub
add
pop
push
fistl
inc
add
outsb
cmp
xor
jns
pusha
lock
ja
sti
add
dec
pushf
jbe
int
add
loop
or
aaa
jg
jae
cld
pop
outsl
lds
add
ds
add
ret
insl
lock
add
js
mov
enter
out
outsb
add
lock
xor
and
add
mov
jae
std
jge
dec
divl
push
or
add
das
lea
mov
rorb
cs
push
push
or
pusha
or
sarb
movsb
jmp
sub
ret
mov
das
xor
mov
out
shrb
repz
jl
adc
dec
push
fcompl
jcxz
lock
jmp
out
and
add
add
movb
or
xor
into
jl
and
add
cmp
enter
xorl
pushf
mov
fdiv
push
subb
and
ret
inc
add
sbb
pop
lcall
incb
shl
mov
enter
xchg
add
mov
loopne
stos
dec
dec
outsl
js
add
fists
pop
jbe
or
orl
fs
and
sbb
inc
test
cmp
bound
dec
test
or
sub
add
leave
adc
mul
loop
mov
lock
clc
jl
inc
lds
mov
sub
and
insb
orb
push
pop
jb
js
scas
bound
add
cmp
mov
sbb
popa
insb
inc
add
dec
lock
jne
add
jnp
sbb
pop
xor
add
jp
fistpl
mov
mov
jns
add
outsb
mov
jno
les
or
aad
out
shll
add
fmulp
lret
repnz
xchg
sbb
je
out
lret
mov
ret
icebp
nop
int3
shrl
sbb
add
imul
mov
aam
es
sub
adc
add
mov
and
add
rcr
mov
filds
arpl
xchg
loopne
dec
call
push
xchg
loopne
add
and
sub
cmpsl
sbb
jle
lea
in
jmp
cmp
ds
push
mov
adc
pusha
ret
push
adc
test
dec
dec
push
call
mov
dec
add
lock
mulb
xor
sbb
cmp
nop
clc
cmp
fadds
push
filds
pop
nop
sub
pop
lds
inc
loope
dec
mov
add
aaa
adc
stos
dec
ret
in
shll
add
jbe
loopne
pop
dec
jg
add
push
lock
add
leave
sbb
ja
mov
sbbb
jno
dec
sub
sarl
hlt
testb
mov
jle
add
movsb
pushf
sbb
gs
insl
add
roll
fdiv
ret
adc
mov
mov
arpl
push
test
in
sub
push
outsb
mov
inc
cmp
loope
dec
out
add
and
loopne
mov
inc
or
jbe
mov
xchg
ljmp
pusha
xorl
add
mov
mov
cmp
pop
dec
add
mov
and
out
fldl
or
mov
fcompl
js
repnz
movb
add
testl
add
movsl
pop
addb
push
xlat
mov
xor
repz
insb
jmp
push
inc
test
sbb
xor
addl
out
data16
pop
bnd
cmpsl
mov
xchg
add
pop
fmuls
xchg
bound
imul
inc
add
movsb
adc
cs
out
add
push
cmp
inc
add
clc
loop
add
and
mov
mov
out
daa
mov
push
mov
mov
out
rorl
inc
in
xor
sahf
pop
hlt
xor
mov
das
out
sbb
cmp
add
jp
xor
inc
stc
cli
cmp
pusha
sub
sub
push
lret
sarb
adc
call
jmp
jo
in
fadd
dec
xchg
les
jns
sti
out
jbe
mov
pop
cs
pop
aam
mov
add
push
andl
mov
incb
or
mov
sahf
xchg
add
jb
mov
add
faddp
loopne
out
inc
rcll
xor
in
push
cmc
push
mov
push
add
subl
popf
sbb
std
movsb
loope
sbb
jbe
lods
dec
cwtl
pop
or
sbb
add
outsl
clc
andb
lahf
or
repnz
cli
or
popf
jne
add
sub
xchg
sub
out
mov
pop
sbb
mov
rcrl
je
fldt
popf
lea
cld
test
add
call
test
jns
in
rorb
imull
stos
cmp
push
in
imul
xchg
stos
xchg
adc
cs
xor
out
add
cmpsl
mov
int
mulb
fdivs
nop
aas
jae
add
loope
ljmp
and
jo
jns
imull
jp
push
cmp
movsb
pop
xor
sbb
sti
or
aad
imul
jne
das
mov
flds
mov
push
add
insl
pop
pop
arpl
inc
shrb
mov
hlt
sbb
shr
sbb
lcall
pusha
and
pop
addl
adc
mov
or
adc
push
xchg
aas
int3
adc
jecxz
pop
mov
dec
cmc
data16
loope
adc
shr
xchg
pop
in
adc
pop
roll
cmpsb
xchg
sbb
loope
add
shrl
and
cmc
enter
cmpsb
add
adc
fmuls
icebp
sahf
mov
push
bnd
mov
add
mov
push
loop
xchg
jno
pop
stos
cmp
mov
imul
cmp
jne
addr16
and
and
xor
and
adc
mov
pop
add
or
inc
push
mov
xor
imul
mov
test
lock
push
mov
sbb
fidivl
outsb
nop
enter
insb
cmpb
test
push
adc
test
mov
loop
inc
adcb
pop
adc
mov
arpl
testl
push
xorb
ficompl
mov
ja,pn
rclb
push
fnsave
xor
add
jne
lock
into
cmp
addr16
cwtl
inc
sbb
sub
mov
push
add
mov
or
mov
ja
test
mov
xchg
xchg
xor
arpl
and
xchg
orb
stos
fldl
mov
nop
push
dec
addb
aas
adc
shrb
outsb
mov
cmp
roll
in
xor
loop
stos
add
pop
insl
push
jp
cmpsb
and
cmp
addr16
add
gs
clc
xor
test
sub
mov
sub
jmp
push
mov
adc
lock
pop
xor
and
adc
js
inc
sbb
icebp
nop
adc
sub
emms
scas
lods
or
out
mov
jb
mov
rcll
sub
jp
inc
mov
cmp
pop
dec
xchg
js
hlt
push
movsb
call
mov
outsl
cmp
mov
mov
stc
mov
inc
or
push
add
leave
adc
and
and
pop
add
cmp
xor
mov
fwait
js
and
mov
mov
dec
xor
icebp
mov
pop
xor
test
xor
cmp
cmp
xchg
lods
push
cmp
push
mov
adc
jno
mov
and
sub
lret
and
mov
fldcw
add
addr16
out
mov
mov
add
outsb
add
sub
pop
push
sbb
adc
lock
in
icebp
ret
sbb
add
jge
dec
aas
shrl
add
ret
push
repz
sub
aam
and
pop
enter
xchg
pop
lret
sbb
ljmp
mov
mov
lret
lock
js
xor
push
cmpl
sbb
mov
mov
push
xchg
pop
mov
mov
popa
inc
aam
aas
jp
leave
push
test
add
call
rorl
add
nop
push
sbb
add
iret
mov
adc
jge
adc
hlt
pop
rcr
pop
rorl
repz
or
push
mov
lods
xlat
or
int3
arpl
mov
jo
cwtl
inc
fwait
inc
pop
jle
lds
cmp
lea
enter
jno
jmp
push
add
les
push
dec
push
and
inc
xchg
mov
sarl
lea
lahf
and
pop
adc
fisttps
pop
dec
add
adc
mov
push
nop
xor
add
cmpb
inc
je
pop
push
nop
in
pop
dec
subb
repnz
adc
mov
sahf
in
add
pop
clc
mov
mov
push
mov
xlat
cmp
loopne
sub
mov
push
cmp
js
or
xchg
push
lret
add
sbb
jbe
mov
or
cmp
out
and
mov
inc
clc
shl
mov
sub
adc
mov
mov
mov
int3
mov
cltd
or
nop
filds
dec
lock
xor
loope
and
and
or
dec
test
and
ret
and
mov
adc
and
or
test
dec
adc
sbb
cs
in
adc
cmp
add
cmc
or
dec
and
xor
cli
out
dec
sub
aas
and
addb
mov
add
sbb
ret
cld
sahf
sbbw
jp
or
mov
jecxz
aam
popa
pop
pop
arpl
movsb
gs
je
jge,pn
jmp
jmp
sbb
addb
fstpl
cmp
and
das
in
movsb
xchg
movntq
out
pop
shlb
adc
mov
enter
aad
xchg
imul
inc
stos
jo
pop
adc
rorl
cmpsl
dec
roll
adc
repnz
dec
xor
in
push
mov
cvtpi2ps
jae
dec
and
pop
negl
clc
add
add
mov
movl
loop
mov
lret
lock
sti
lcall
outsl
add
ret
addl
jae,pn
inc
scas
adc
dec
add
or
push
adc
sbb
jnp
xchg
push
roll
push
jne
imul
lret
pop
into
jb
mov
dec
add
mov
cmc
inc
and
add
in
sub
cwtl
add
add
inc
mov
aas
test
xorl
aas
jle
mov
jno
lret
sbb
jns
lods
push
jbe
or
jne
push
sarb
push
ret
or
sub
icebp
adc
mov
or
cmp
inc
lahf
inc
or
and
jecxz
jo
cmp
xchg
cmp
mov
add
cmc
sbb
or
or
pusha
push
xchg
jmp
cli
add
fildll
aad
adc
jle
mov
push
dec
add
mov
jg
sbb
aam
flds
pusha
adcl
adc
cmp
pop
dec
cli
cmp
or
movsl
jno
xchg
sbb
insb
sbb
pop
mov
xor
inc
dec
repz
and
or
adc
dec
pop
in
add
mov
jb
lods
mov
dec
outsl
call
fcoms
fs
add
xchg
push
add
jae
or
rorl
add
xchg
inc
jge
test
cmp
jmp
in
in
and
adc
or
xor
or
sub
mov
xchg
faddl
add
push
outsb
mov
or
rcrl
aaa
sub
mov
je
add
stos
lret
fisubrs
push
add
push
subb
xchg
lahf
test
add
jne
sub
shl
pop
aaa
call
outsl
mov
cmp
jne
add
sub
xor
notb
sbb
test
jge
mov
aam
imul
into
fsubrl
shrb
inc
popf
push
mov
mov
sub
sbb
jbe
test
xchg
add
dec
adc
xchg
push
sub
leave
inc
daa
inc
jno
ja
adc
pop
add
xchg
inc
jg
mov
xchg
push
enter
sbb
sub
push
xor
jne
pop
add
add
bndstx
popa
push
add
push
and
and
cvtps2pd
punpckldq
test
add
push
aad
xchg
mov
aaa
jp
mov
adc
fisttpll
inc
sbb
mov
notl
and
sbb
icebp
je
mov
add
add
es
cmpsl
lahf
xchg
and
adc
add
push
ds
push
rclb
es
add
pusha
inc
mov
mov
mov
popf
jo
mov
push
sub
out
push
xor
mov
loopne
repnz
pushf
push
add
into
or
jecxz
jno
popl
hlt
push
enter
lea
and
push
push
nop
or
add
jl
test
and
clc
dec
test
nop
testl
push
ja
jp
mov
xor
rcr
add
call
clc
sbb
add
xorl
shlb
sti
inc
mov
repnz
cld
mov
add
xchg
pop
aam
cmp
add
inc
movsb
xchg
lds
lcall
fnsave
ss
or
jns
mov
fsubrs
daa
lds
scas
push
loopne
jns
jnp
in
and
mov
add
xchg
pushf
inc
stos
xchg
adc
out
daa
cmp
add
in
jg
sub
int3
cmpb
stos
pop
sub
sbb
arpl
inc
test
add
inc
test
scas
lahf
rcl
testb
pop
xchg
jle
ja
popf
mov
jno
add
push
scas
cmp
fiadds
cmp
inc
or
imul
adc
or
roll
mov
xchg
mov
loopne
jg
incb
add
xchg
pop
mov
aaa
in
loopne
sbb
add
hlt
xor
fldl
incb
add
push
xor
ds
lods
loopne
add
dec
sub
gs
imul
cmpl
pop
addb
and
sbb
or
jbe
add
shll
cmp
mov
sbb
or
add
jne
push
xor
sub
add
push
test
popa
pop
cmp
jge
test
out
and
nop
xchg
add
ficompl
inc
cld
add
ds
ss
clc
std
cmc
mov
aaa
dec
pop
out
cmp
add
jns
fisubrs
inc
mov
aad
sbb
sahf
jmp
std
adc
xchg
inc
addb
cs
stos
or
or
addb
out
cmp
push
add
xor
sbb
pop
cmp
pop
pushf
cmp
push
xchg
fwait
mov
mov
adc
xor
or
lods
push
mov
jne
outsb
jnp
cmp
inc
int3
pushw
mov
adc
add
shrl
arpl
xchg
int3
movsb
das
mov
xor
inc
cmpb
insb
pop
mov
pusha
not
pop
scas
add
and
out
xchg
jo
cmp
xor
inc
dec
dec
or
mov
outsl
cli
add
out
xor
inc
mov
mov
mov
xchg
scas
jae
mov
xchg
or
insb
roll
adc
xor
in
mov
xchg
inc
dec
push
pop
loop
sti
pop
xchg
ret
addb
das
int
xchg
pusha
pop
movsb
aad
lcall
xor
lret
fwait
into
pusha
pop
cs
fiadds
dec
stos
sbbl
push
add
jne
and
adc
ljmp
pop
cmp
pop
xchg
lahf
xor
pop
mov
roll
xor
es
sahf
push
in
xchg
bound
add
push
sub
xlat
xchg
mov
push
cmc
cli
ror
mov
jg
add
jb
add
cltd
fcmove
jg
lcall
mov
push
xor
sub
sub
ret
jecxz
es
les
ret
pop
jge
fcoml
fbld
rcrb
jbe
call
jl
dec
jge
add
xchg
add
int
xor
addr16
imul
sarb
add
out
cli
inc
lret
sub
arpl
add
add
mov
rorl
repnz
popf
jecxz
outsb
mov
jge
push
cli
lcall
icebp
mov
xchg
repz
les
sbbl
test
or
pushf
add
sbb
cmp
subb
out
add
int
jno
fsubs
daa
test
sbb
aad
ss
outsb
bound
popf
adcl
inc
jb
stos
xchg
imul
mov
mov
add
sub
out
sub
stc
inc
mov
fsubl
and
vpsllw
push
add
or
stc
pop
or
add
std
cmp
mov
sar
push
xor
add
outsb
cmp
dec
jbe
xchg
push
divl
or
sub
pop
loop
and
inc
adc
lock
push
and
repnz
sub
cmp
fimuls
out
or
add
jbe
sub
adc
add
fiadds
rol
dec
jecxz
mov
call
cmp
in
rcrl
xchg
add
mov
sub
cmp
pop
stos
or
cs
push
push
cwtl
call
jmp
xchg
push
xor
cli
shlb
xor
add
aam
lods
jge
push
mov
mov
add
or
push
test
call
mov
inc
int3
push
sub
push
xor
cmp
arpl
cld
pushf
pop
cwtl
xchg
sbb
into
sbb
and
std
lahf
bound
scas
push
pusha
adc
add
lds
mov
and
inc
rcr
inc
and
add
orb
lret
roll
xchg
mov
jge
add
mov
cmp
and
or
lahf
lret
push
out
sub
cld
sub
in
pop
sti
sub
adc
testl
xchg
lret
adc
add
mov
xor
daa
in
push
inc
out
or
in
jl
mov
and
int
cmp
mov
mov
in
mov
adc
divb
mov
clc
push
shlb
mov
lea
add
insl
push
lds
or
or
aas
or
sbb
cmpb
iret
xchg
outsb
into
add
lds
std
pop
stc
mov
inc
xchg
pop
leave
repnz
or
fwait
movlps
inc
pop
push
and
dec
pop
mov
xchg
sbb
adc
nop
push
pusha
add
jne
xor
subb
cs
inc
mov
adc
decb
add
subl
jne
inc
mov
and
andb
mov
push
push
sub
push
nop
nop
add
xchg
add
mov
or
int
cmp
jecxz
out
test
mov
xchg
lds
addr16
mov
pop
movsb
push
imul
movb
andb
out
push
add
cmp
xor
xchg
stos
repnz
or
pusha
push
ss
and
adc
int3
inc
cmp
sub
mov
mov
add
outsb
and
xor
enter
adc
sbb
sub
push
das
jge
mov
sbb
mov
adc
push
pop
cmc
out
push
add
dec
sub
daa
add
push
inc
and
cs
sbb
push
mov
sub
mov
aas
and
sbb
sbb
je
mov
mov
and
icebp
enter
stc
cwtl
lods
dec
in
and
push
sub
push
add
inc
jbe
mov
dec
pop
add
xchg
mov
addl
xchg
add
mov
mov
je
sahf
adc
sahf
jmp
inc
bsf
daa
add
xchg
mov
xchg
jp
incb
push
nop
push
or
sub
sub
jg
push
push
mov
loopne
addl
jo
dec
rcll
loop
add
xchg
dec
clc
cmp
aaa
adcb
std
xor
dec
push
lret
push
roll
aam
mov
test
shlb
or
xor
mov
pop
and
sub
adc
xchg
add
mov
or
test
cli
inc
dec
inc
cltd
rcl
xor
pop
add
dec
fwait
pop
sbbb
xchg
shlb
ret
jle
add
jo
inc
pop
cli
inc
mov
pop
out
sub
cld
nop
fwait
test
movsb
pop
mov
push
cmc
or
inc
xorb
add
push
push
xchg
bound
pop
outsb
xadd
xor
adc
pop
push
int
outsl
sbb
mov
inc
addb
or
adc
push
xchg
mov
push
test
push
movsb
bound
testl
cmpsb
sahf
insb
shll
adc
enter
sbb
mov
sub
and
dec
xor
std
or
leave
iret
pop
add
arpl
cmp
and
sbb
out
std
jo
ret
add
ficompl
or
mov
add
bound
push
negb
and
ffree
mov
push
xor
in
aaa
xor
add
orb
mov
rclb
roll
mov
cmp
xchg
push
sub
addr16
jno
outsb
sbb
mov
pop
cmpb
lock
nop
or
pop
and
jmp
popa
and
or
cs
fucomp
pop
add
adc
xchg
add
rorb
cmp
xor
movsl
dec
mov
pause
mov
pusha
add
fisubl
out
jbe
add
lea
sbb
ja
push
adc
fnstsw
sub
push
ret
add
mov
stc
pop
add
cld
cmp
add
pop
aas
mov
jp
dec
inc
addb
loopne
xor
sbb
push
or
dec
adc
inc
rcr
adc
dec
data16
mov
scas
pusha
cltd
sub
xor
scas
push
or
or
mov
or
repnz
push
inc
daa
cmp
addr16
aas
cmpsl
xchg
add
loop
add
jge
sub
add
add
and
inc
pop
mov
stos
and
push
jns
inc
cmp
push
scas
dec
cwtl
add
mov
sbb
add
sub
push
pop
xchg
test
adc
movsb
xor
mov
add
dec
test
stos
push
sahf
iret
mov
loop
push
or
into
fsts
push
mov
ja
popf
pusha
aam
xchg
jno
cwtl
das
add
sbb
lods
push
adc
add
rorb
or
aas
cmpsb
shlb
sbb
adc
sbb
pop
cmpsb
add
inc
hlt
stc
sub
fdivrs
loope
out
push
les
push
movsb
and
xor
dec
mov
mov
test
inc
repnz
jl
out
add
sbb
inc
imul
in
or
sub
add
and
aas
aaa
andb
jae
mov
xor
xchg
pop
leave
lret
sbb
ret
popa
ds
cmc
dec
test
in
mov
xchg
add
mov
clc
xor
loope
cmp
int3
incl
push
lods
cmp
mov
aas
xchg
push
fsubrs
add
dec
mov
arpl
mov
add
cli
xor
fcoms
loop
xorl
mov
out
into
popa
andb
xor
popl
cwtl
adc
inc
ds
mov
jmp
add
inc
jne
push
adc
pop
in
lock
mov
add
nop
les
rorl
and
adc
adc
xor
stos
or
int3
sub
add
addb
inc
add
ret
clc
mov
shrd
aad
cmpsl
inc
fcompl
add
fildll
rol
mov
push
lea
clc
jo
addr16
cmp
data16
ret
mov
jl
dec
outsl
add
shl
leave
xchg
add
adc
notb
mov
es
cmp
loop
shrb
lds
add
cmpsl
stc
xor
ss
jno
add
es
mov
imul
mov
xchg
mov
xchg
popa
jmp
movsb
leave
fdivl
sbb
jle
sbb
push
sahf
pop
pop
jns
mov
in
je
add
ja
enter
mov
and
out
pop
or
ror
lret
enter
cmp
mov
stos
ret
enter
in
cmpsl
enter
std
stos
ret
mov
int
insl
sbb
inc
repnz
sub
icebp
or
stos
fstl
add
test
inc
mov
mov
sub
push
pop
push
jecxz
in
add
inc
movsl
lock
inc
and
jl
out
fstpt
mov
or
je
jns
inc
fldl
mov
test
dec
mov
xor
adc
and
sarl
movsb
stos
lods
pusha
pop
cmpsb
xchg
outsb
sbb
jnp
movlps
sti
outsl
adc
mov
sti
add
sub
shl
lea
pop
aaa
inc
mov
cmp
xchg
cld
rorb
cmpsl
ret
pop
sbb
xor
mov
test
add
testl
add
mov
outsl
or
cmc
adc
sbb
push
push
ffree
jle
mov
cmp
push
xchg
dec
stc
clc
adc
push
and
nop
in
push
std
lock
cmp
or
sbb
sub
lods
mov
test
iret
add
push
stos
sbbl
bound
add
push
das
inc
sub
cmpsb
pop
je
push
into
in
push
loope
jbe
mov
daa
int3
and
add
dec
xlat
pop
sub
inc
fs
sbb
lock
sub
mov
dec
sub
add
and
mov
mov
or
dec
in
add
js
add
cmpb
mov
movsb
xor
or
mov
pop
fstpl
fistl
test
mov
aad
sbb
mov
decl
add
mov
add
adc
sbb
dec
pop
in
pop
mov
mov
into
lods
subb
xchg
inc
outsb
jg
lock
pop
cld
stc
mov
cmp
add
adc
jbe
sub
pop
loopne
dec
daa
cmpsl
sub
and
shll
mov
xchg
cmp
popl
fildl
mov
clc
out
sbb
dec
aam
in
add
mov
mov
xor
add
in
mov
daa
shr
xor
repnz
sbb
mov
pop
dec
inc
add
test
sub
push
pop
inc
mov
sub
or
aas
mov
hlt
adc
jmp
jno
jp
add
inc
test
add
sahf
iret
out
loope
jne
and
push
ljmp
int3
andb
nop
lcall
mov
dec
daa
rclb
jp
add
dec
out
inc
mov
pop
adc
add
push
sub
or
xor
add
dec
and
pop
xchg
jo
or
pop
rep
test
or
adc
pop
rcl
dec
sbb
cmp
sub
cli
sub
push
xchg
mov
sarb
scas
incl
adc
mov
repz
mov
jb
fildl
push
jno
mov
pop
add
rcll
sub
cmp
sbb
mov
insl
call
dec
sub
js
add
icebp
inc
cmp
daa
pop
cmpl
inc
sub
lock
or
xchg
adc
pusha
mov
or
push
xor
jecxz
out
xchg
repnz
sahf
movb
adc
pop
out
jmp
jg
or
adc
or
shll
push
imul
loopne
lea
push
rolb
mov
es
aas
xor
dec
mov
arpl
add
addb
orb
xchg
mov
add
sub
adcl
fisubrs
cltd
xor
sub
cwtl
aam
mov
mov
and
inc
add
pop
ss
fidivrl
fmulp
mov
in
or
das
mov
scas
push
xor
xchg
cmp
or
xor
adc
xchg
shlb
mov
decb
sub
mov
mov
sub
addl
mov
or
sbb
pop
xchg
das
add
adc
xor
enter
cmp
hlt
sbb
cltd
inc
dec
imulb
push
sbb
lea
insb
cmp
sbb
jno
lahf
pop
fiadds
push
popa
sbbb
lahf
fmuls
mov
cld
inc
jbe
dec
add
aad
jge
in
or
lahf
outsl
les
cli
jl
nop
xchg
cmpl
or
pop
mov
xor
xlat
cmp
outsb
xchg
pop
xor
or
iret
adc
inc
dec
and
into
pop
add
dec
jbe
and
xor
bound
add
cs
sbb
xchg
cmpb
add
jns
mov
add
in
xor
aaa
mov
jbe
sbb
push
scas
insb
mov
jp
mov
mov
fstl
dec
lods
add
add
pop
loope
lret
add
add
cmpsb
push
mov
gs
loope
les
xchg
add
mov
jecxz
add
pop
sub
inc
jnp
or
in
and
je
clc
mov
sbb
mov
push
mov
shll
out
sub
mov
or
mul
push
add
in
sahf
jmp
fnstcw
clc
dec
push
add
xor
push
dec
int3
test
mov
orl
add
mov
test
sahf
scas
rcrb
sbbl
data16
loope
and
or
lods
xchg
add
outsb
push
xlat
pushl
aam
shrl
lcall
out
fistps
adc
jmp
aad
insb
cmp
jmp
int
inc
sbb
repz
mov
rcrl
arpl
dec
jnp
jne
ljmp
mov
mov
js
adc
sbb
sub
hlt
sahf
add
ucomiss
xchg
sti
pushf
loop
add
mov
and
out
jge
in
test
push
add
cmp
dec
lods
notl
and
add
and
cmp
rorl
sahf
pop
loopne
std
or
fwait
cmp
jae
add
xchg
inc
cmpsb
pop
add
pop
sbb
pop
int
dec
fimuls
inc
ret
adc
pop
jp
decl
daa
sub
loop
nop
insl
dec
dec
outsl
add
daa
fildll
jg
push
clc
int
pop
push
lahf
call
ret
in
inc
add
sbb
mov
lret
add
cmp
pop
add
movsb
shrb
mov
or
cltd
adc
sub
inc
mov
mov
mov
pop
fwait
cmp
wbinvd
cmp
adc
add
pop
mov
sbb
js
sub
or
xchg
aam
mov
mov
jnp
leave
add
inc
movsb
shll
mov
mov
hlt
dec
cwtl
stc
mov
js
push
or
jg
jae
mov
xchg
add
add
shll
pop
mov
inc
inc
pop
filds
push
cltd
push
out
push
bound
add
pop
jecxz
aaa
gs
mov
jg
mov
adc
call
in
lds
int3
xor
inc
or
push
test
pop
loopne
mov
add
xchg
lods
loop
push
scas
insl
lods
add
call
mov
jbe
dec
add
pop
and
ss
adc
jo
sbb
and
addb
inc
mov
notb
cmpsb
pop
fs
js
add
xchg
dec
sub
or
mov
pop
add
xchg
in
add
sub
push
mov
xor
fdivrl
cmp
dec
or
icebp
adc
sarb
cmp
xor
adc
add
pop
pop
ficompl
fistpl
adc
xlat
pushf
mov
lea
add
jmp
pop
test
inc
mov
shr
lea
add
in
pop
xlat
movsl
mov
pop
cmc
pusha
fdivrs
mov
lods
fstpl
loope
lds
add
outsb
mov
adc
mov
fldcw
outsl
mov
cltd
lahf
add
mov
mov
push
outsl
loopne
mov
mov
ja
mov
roll
and
cltd
cmp
inc
movsb
fs
fisubs
push
cltd
sub
or
scas
lahf
in
add
jle
pop
test
bound
in
aas
dec
div
mov
sub
and
je
pop
xchg
push
lds
fistpl
dec
mov
add
ljmp
js
or
cltd
sbb
xchg
push
jae
jb
or
pop
mov
rolb
inc
add
jl
push
add
push
jae
sbb
mov
movsl
pop
push
lods
ss
add
arpl
add
mov
add
data16
iret
add
adc
adc
orb
dec
sti
cmpsl
jb
mov
mov
and
mov
pop
pushf
shlb
push
pusha
push
imul
push
daa
jnp
jbe
lock
stc
mov
cmp
bound
test
enter
hlt
inc
mov
js
xchg
push
mov
jae
xor
orb
mov
insl
pusha
push
push
lds
pop
sub
cmp
iret
pushf
js
jmp
lcall
fs
mov
xorb
cwtl
add
dec
ds
test
ret
xor
cmpsl
dec
hlt
push
fisubl
sbb
pop
xor
or
adc
dec
xchg
sahf
and
add
mov
adc
aaa
inc
popa
movsl
pop
sbb
test
stos
js
adcb
xor
and
jp
add
add
ss
push
mov
xor
cmpsb
clc
push
add
xchg
jo
inc
sbbl
fwait
mov
jno
mov
dec
lret
dec
js
mov
add
test
fimull
mov
incb
fisttpl
mov
jae
std
sbb
je
xor
ljmp
dec
adc
adc
cmp
mov
addr16
cmp
ss
jbe
nop
nop
xor
fists
push
inc
add
repz
pop
mov
push
lock
pop
out
in
add
dec
sub
ljmp
dec
xchg
fdivrp
imul
fimull
and
popf
sbb
cmc
jo
inc
shll
jnp
sbbb
mov
inc
mov
pop
xchg
pusha
pop
and
cmp
push
push
and
sbb
pop
xchg
nop
mov
cmp
and
cs
movsl
cmp
jno
je
sub
jge
inc
and
dec
add
fucomip
mov
or
enter
adcl
xorb
inc
enter
iret
sub
inc
xorl
mov
add
into
imul
mov
stos
cwtl
jmp
mov
out
pop
sbb
mov
lock
pop
cltd
inc
jle
jo
test
loopne
or
call
push
insl
pop
push
adc
rorb
xchg
dec
add
cmp
dec
rcrb
movsl
and
and
dec
mov
mov
add
mov
mov
pop
xchg
lods
add
xlat
popa
test
cmc
ljmp
mov
xor
lods
jb
das
lock
dec
or
pop
std
xor
push
test
sbb
arpl
mov
int3
fcmovbe
mov
add
xchg
cli
inc
add
push
aam
arpl
js
lahf
test
imul
mov
lcall
scas
nop
and
inc
mov
xlat
adc
xchg
sub
add
add
cmp
leave
aam
or
jg
adc
xor
out
add
rolb
xchg
sahf
pop
add
add
mov
mov
mov
xchg
mov
pop
mov
jb
lods
inc
push
movsl
icebp
cmp
jno
jp
sub
cmp
mov
pop
orl
xor
cmp
cmpl
xchg
and
mov
test
int
imul
or
jge
pusha
pop
call
mov
scas
xchg
lods
mov
imul
sub
mov
xchg
sahf
add
ret
xchg
dec
stos
filds
dec
nop
adc
sbb
out
lods
pop
add
or
shlb
outsl
add
aad
sub
outsb
push
push
or
push
xor
repnz
je
mov
xchg
lret
divb
fstps
cmp
imul
add
jne
push
push
push
jmp
or
rorb
add
sbb
mov
lods
sbb
lret
pusha
inc
pop
addl
icebp
mov
pop
iret
es
sbb
das
loop
imul
or
pop
sub
loopne
add
repnz
cli
inc
sub
jne
add
faddl
or
cmpsl
js
nop
jmp
mov
xorb
aam
sbb
arpl
test
cmp
or
add
mov
pop
xchg
jecxz
push
ret
adc
jmp
push
xchg
mov
push
adc
lea
in
sbb
sti
lcall
push
icebp
out
iret
jecxz
clc
sbb
punpcklwd
jo
pop
jmp
pop
add
mov
push
sar
fs
call
popf
add
mov
mov
add
jmp
jb
add
dec
mov
lret
dec
insl
dec
add
js
fiadds
ja
dec
jge
in
scas
add
or
jl
add
mov
add
movb
sub
out
rcrb
out
jmp
mov
test
mov
add
test
add
sbb
or
xchg
xor
je
push
bound
mov
test
xchg
adc
sarl
push
push
pop
and
pop
xchg
mov
int3
outsb
jge
cmc
andl
dec
orb
push
fists
int3
int
dec
test
add
jns
mov
sbb
and
sub
add
inc
nop
addr16
mov
pop
push
inc
add
push
lds
pop
stos
cmove
pop
adc
and
add
jge
push
sbb
adc
and
push
jl
or
or
pop
sub
in
call
mov
push
mov
adc
push
xor
or
cmc
mov
sub
in
fldcw
xor
ret
pop
xlat
push
lcall
adc
inc
mov
adc
and
or
ret
and
les
lret
outsl
xor
adc
or
jge
push
push
hlt
lods
pop
leave
ss
cld
aad
mov
cwtl
or
and
mov
and
push
loop
jo
inc
ljmp
pop
push
mov
pop
rcrl
adc
loop
pop
aas
add
push
xchg
out
jl
cmpsl
inc
mov
xchg
push
jo
add
lods
mov
imul
stos
xor
icebp
fiaddl
jae
adc
ret
and
pop
and
add
lret
pop
fwait
ds
sub
clc
ret
xor
push
ds
inc
out
dec
adc
fidivrl
push
cld
scas
and
or
dec
push
or
add
pop
xchg
or
nop
lock
pop
inc
mov
lret
jp
mov
lds
loop
aam
adcb
add
xlat
roll
aaa
retw
sbb
test
and
cmpsl
outsl
xor
sbb
cmp
les
xor
in
push
pop
jbe
mov
xchg
mov
push
pusha
xchg
sbb
or
sub
lds
add
outsb
mov
cmp
push
mov
mov
and
add
rcrl
inc
dec
repnz
push
ret
sub
lods
add
shl
jle
mov
sbb
lds
sub
mov
mov
rclb
loope
call
push
and
lods
cmp
dec
jo
adc
and
mov
mov
addr16
das
sbb
in
xchg
mov
mov
ljmp
sub
xor
test
mov
sub
add
setl
pop
iret
push
and
pusha
cmp
scas
sub
rclb
xorl
dec
xchg
sbb
add
ss
push
xchg
mov
imul
jns
call
shl
movl
xor
push
in
or
jae
cmp
fildll
cmp
fcompl
inc
sbb
push
mov
sub
mov
adc
adc
sti
cmc
cmpsl
adc
adc
mov
cld
inc
or
and
inc
pop
xchg
loop
or
mov
movsl
adc
lahf
stc
xchg
inc
sbb
mov
or
xchg
sarb
pop
int3
orb
add
cmp
jae
pop
ljmp
cmp
rclb
adc
shll
jp
adc
lcall
xchg
sbb
mov
repnz
incb
xor
dec
add
out
inc
cmpsl
pop
in
xchg
xorb
in
inc
jmp
sub
clc
cmp
add
fisubrl
mov
mov
adc
add
and
fmull
iret
fistpl
sbb
aas
roll
inc
sbbl
adc
or
stc
or
lcall
js
sub
sahf
jp
jge
int
or
jl
or
lds
fiadds
cmpl
pop
and
insb
rclb
movsl
sbb
sahf
movsb
movl
xchg
mov
pusha
xchg
mov
push
das
adc
jne
add
jmp
pop
into
in
push
push
jbe
mov
sub
or
cmc
cmp
jo
sbb
or
cs
loopne
dec
lret
cmp
gs
ljmp
add
inc
mov
scas
mov
add
push
lahf
xchg
mov
in
aas
cmp
add
cmp
ljmp
push
sub
orb
das
lcall
pop
adc
xor
mov
cli
xorb
sbb
xor
dec
mov
sbb
adc
ficoml
add
cld
std
cmc
mov
icebp
js
adc
ds
loope
xor
sbb
mov
inc
rolb
adc
adc
mov
add
int
popa
int3
scas
pusha
pusha
cmpsb
push
add
cmpsb
pop
mov
lret
cmp
and
rorl
add
dec
iret
mov
clc
repz
repz
aad
ret
jbe
inc
dec
pop
imul
ffreep
loop
dec
sub
dec
push
add
mov
mov
dec
adc
sub
xor
xchg
dec
and
mov
pop
sub
push
adc
ds
jp
pop
jp
pop
int
pop
and
arpl
jl
mov
data16
xor
les
mov
pushf
inc
mov
mov
mov
sub
jo
add
pop
pop
nop
sub
mov
fstpt
fidivrl
xchg
mov
mov
lret
adcb
add
dec
or
mov
test
dec
cld
das
pusha
cmpsb
mov
mov
add
or
insl
adc
daa
jae
and
sbb
jns
inc
idivl
pop
hlt
dec
lods
sbb
jnp
pop
inc
pop
stc
xor
les
push
xor
pusha
imul
sbb
adc
std
dec
imul
loopne
fiadds
test
add
add
pop
leave
xor
fwait
pop
sub
ror
jp
xlat
stc
dec
cmpsb
pop
lods
mov
es
inc
sahf
iret
cmpsl
leave
loop
rorb
scas
add
aad
mov
sbb
adc
scas
stc
xchg
test
inc
dec
sbb
pop
and
mov
loopne
and
cs
cmp
das
add
and
add
fs
test
xor
inc
dec
ljmp
aam
sahf
sbb
push
cmp
mov
push
sbb
cmp
add
lret
in
rclb
fsts
cmc
adc
cmp
and
add
mov
sub
dec
sub
pop
lods
adc
je
inc
stc
fdivs
adc
cld
cmc
or
xor
lret
mov
cmp
add
mov
pop
into
add
xchg
mov
fmuls
adc
pusha
inc
loop
and
mov
inc
shrb
push
addl
and
std
packsswb
push
mov
mov
add
sub
adc
push
inc
imul
mov
dec
xchg
sub
dec
pushl
lret
dec
ret
mov
inc
ret
scas
std
inc
mov
roll
jle
pop
loop
dec
mov
inc
cmpsb
sbbb
std
mov
rclb
xchg
and
or
test
mov
inc
mov
test
inc
int
sbb
out
jmp
dec
pop
mov
insl
jp
xor
imul
xchg
test
push
rorb
xor
ret
pop
push
xor
out
or
pop
xchg
jb
add
mov
jo
leave
test
xchg
add
jo
push
nop
cmp
insb
rorb
fwait
add
js
fadds
andl
xor
cmp
outsl
aam
nop
add
push
shrl
rcrb
and
inc
test
cmp
add
xor
xor
std
jno
add
daa
movsb
movsl
call
int
mov
shrl
or
repz
or
adc
cs
adc
loop
jmp
adc
cmp
rcrb
mov
add
shll
pop
clc
and
inc
jns
pop
orl
push
lcall
or
push
and
fsubs
jnp
int3
pop
jbe
cmp
mov
or
test
pushf
jns
sbb
adc
and
jno
xor
orb
fldcw
add
add
repz
xor
repz
push
push
add
mov
loop
push
lods
cmp
out
or
cld
mov
iret
fidivs
mov
xchg
cmpsb
repnz
ja
shlb
or
xor
subl
or
mov
add
xor
in
sbb
call
sbb
xor
add
not
js
or
inc
movsl
nop
shrb
ds
and
out
add
xchg
mov
call
fcompl
or
movl
repz
or
sub
add
movsl
jecxz
mov
or
mov
clc
fidivrs
add
loope
shll
addl
shlb
adc
fiaddl
jl
lahf
jmp
mov
insb
or
add
push
xchg
jae
add
mov
sbb
and
cmovo
std
sub
cld
daa
les
xor
scas
xchg
jl
in
and
mov
cs
daa
push
cmp
xchg
push
insb
jl
pop
and
hlt
push
adc
add
inc
rclb
aas
outsb
or
in
cld
ret
dec
dec
jno
orb
inc
cld
mov
add
js
dec
mov
cmp
add
dec
test
mov
ret
repnz
call
jnp
push
sbb
clc
addb
adc
lock
loopne
dec
add
shrl
aad
and
incb
inc
mov
lock
or
pop
jo
add
repz
stos
std
sti
leave
xchg
outsb
and
adc
hlt
aas
int3
pop
push
xchg
call
push
shrb
xor
add
rcll
add
or
sbb
xchg
and
pop
add
jbe
pop
pop
xchg
add
mov
inc
push
add
lret
rol
nop
cmp
fcoms
rcrl
mov
sbb
add
and
dec
add
push
mov
mov
or
xchg
dec
hlt
iret
lcall
mov
das
xchg
cwtl
add
mov
andb
dec
or
jae
adc
lock
loopne
hlt
mov
add
adc
ja
sub
and
pop
push
add
stos
dec
popf
add
movsl
aaa
jecxz
push
scas
in
ret
add
jno
shrb
jl
iret
lcall
add
inc
popa
orl
add
iret
jge
cmp
push
arpl
lret
add
aad
in
and
push
icebp
nop
jnp
pop
mov
lret
stos
dec
adc
fucomi
int
cmp
arpl
mov
xchg
xchg
orl
fs
cld
xor
pop
mov
or
aaa
lods
inc
pop
add
and
adc
sub
hlt
mov
fcomi
mov
fcmovnu
mov
or
int
or
pushf
dec
loopne
repz
push
shlb
xor
je
ret
jo
call
clc
out
sub
pop
add
mov
std
test
add
adc
fs
shrb
xor
bound
adc
orb
ficompl
bound
scas
pop
daa
lcall
add
or
jnp
xor
xchg
pusha
push
sub
cmp
dec
mov
sbb
nop
push
mov
pop
sbb
lods
dec
lcall
add
inc
or
dec
stos
jle
add
xchg
xchg
shll
adc
pop
imul
out
adc
sarb
lock
jl
int3
sbb
adc
int3
lret
jno
out
nop
repz
xchg
xor
jne
jnp
jae
add
ja
repz
cmp
mov
lds
dec
or
mov
mov
jbe
add
sbb
sbbl
in
and
mov
ljmp
sbb
and
je
mov
addb
jnp
xor
or
add
xor
mov
lret
mov
adc
sub
push
sahf
mov
cld
sbbl
sub
call
jmp
in
ss
and
lods
sub
sahf
cld
bound
orl
add
lcall
or
push
outsb
mov
add
imul
adc
dec
icebp
repnz
xchg
xchg
shrl
sarb
push
or
int
or
cmp
flds
orb
add
add
rclb
jle
insl
js
dec
push
mov
xchg
add
les
cmp
sub
and
cmp
add
lds
add
dec
cltd
add
inc
adcb
jp
subl
ss
mov
in
sub
pop
loopne
mov
mov
sti
xchg
mov
std
dec
mov
pushf
ljmp
es
adc
out
pop
or
xor
dec
add
mov
inc
bound
xor
adc
mov
cmpsb
and
lds
cmpsl
xor
push
int
xor
xchg
adc
les
mov
mov
es
dec
cmp
mov
pop
dec
adc
sub
jle
add
movsl
aas
addl
rcrl
add
inc
xorb
bound
rorb
jecxz
dec
fwait
inc
out
cld
push
sbb
prefetchnta
mov
or
push
xor
leave
mov
add
fxch
out
stos
outsl
xor
sub
lret
dec
popa
pop
in
test
mov
sbb
js
dec
mov
arpl
adc
outsb
cmp
and
imul
stc
cmp
jl
test
into
dec
pop
int
and
jbe
addr16
lods
xor
push
xchg
leave
mov
and
nop
adc
adc
push
sahf
out
das
addb
xlat
inc
sbb
cmp
popa
fs
cmp
mov
cs
loope
scas
adc
sti
cld
or
pop
sub
pop
shl
fsubl
sbb
pop
daa
enter
cmpb
jmp
push
xchg
outsb
cmpb
roll
in
pop
mov
mov
dec
test
and
xchg
add
and
sub
shll
sahf
jno
jp
adc
xor
xorb
mov
dec
repnz
lahf
ret
addr16
lcall
call
or
sbb
rol
test
nop
jb
dec
fildl
add
mov
add
std
adc
popa
in
lea
cs
icebp
adcl
lret
pop
or
inc
shl
add
cmp
cltd
mov
mov
lea
leave
add
xlat
mov
movsb
shl
call
faddl
je
rorb
adc
xchg
adcb
xor
add
mov
cwtl
add
sub
push
movsb
add
jne
or
pop
out
or
out
bound
cli
mov
and
loopne
andb
pusha
dec
stc
mov
mov
dec
std
xor
add
xor
sub
push
in
into
test
add
rorb
pop
loop
lcall
pop
shlb
jnp
cmpb
xchg
popf
push
pop
pushf
loop
or
fwait
push
in
adc
es
lahf
sub
insl
mov
and
enter
sub
ret
pop
mov
mov
xchg
dec
push
ficomps
mov
pushf
sbb
jns
es
mov
inc
jecxz
outsb
aas
sbb
push
or
aad
pop
aam
push
add
test
jne
or
loopne
repnz
cmpsl
sub
out
es
mov
jp
pusha
xchg
add
jb
mov
jle
nop
les
jo
and
sti
dec
pop
jl
adc
imul
movsl
jo
dec
pushf
push
mov
dec
aad
add
push
inc
jg
js
lahf
ret
cmpsb
mov
add
fists
cs
jb
xor
dec
aas
fidivl
int
xchg
xor
sti
mov
outsl
add
push
mov
out
add
cld
inc
aas
add
cmp
xor
sub
push
or
xchg
pop
xchg
pusha
faddl
jno
and
pop
and
xor
adc
pop
and
inc
jp
sub
fistl
mov
dec
add
mov
aam
and
xchg
cmp
ret
fcompl
ret
jno
or
adc
insb
call
add
es
popf
pop
fldl
mov
ret
adc
cld
or
jge
sarl
cmp
shrb
pop
cmp
scas
sbb
mov
inc
mov
out
add
add
or
jp
inc
subl
push
stos
adc
sub
int3
or
hlt
xor
push
je
and
add
ds
inc
les
mov
mov
add
fists
fucom
inc
movsb
xchg
popa
call
cmp
jl
add
xor
test
lods
push
xchg
adc
jecxz
test
sbb
cld
in
lret
xchg
loope
insb
sahf
cmp
xchg
shrb
test
cli
enter
out
popf
test
dec
call
sbb
jo
test
and
add
inc
je
add
add
repnz
mov
dec
jno
daa
outsl
aam
mov
jge
dec
nop
cmp
push
mov
jecxz
fs
popf
pop
loope
mov
rclb
or
pusha
or
push
notb
sbb
call
jne
ja
push
jle
mov
fstpl
cmp
orb
mov
loopne
xchg
jns
ja
sbb
xor
cwtl
mov
sti
out
or
inc
jl
ret
fists
call
xor
sub
std
mov
fisubrs
inc
loopne
jb
pop
xchg
ret
cmpsb
mov
mov
pop
cs
jg
or
in
push
dec
inc
loopne
cmp
mov
stc
stos
pop
dec
movsb
cltd
hlt
shl
mov
fsts
movsb
iret
add
jns,pn
pop
push
test
xchg
xchg
and
in
inc
add
jge
pop
jecxz
mov
dec
push
dec
cmp
int3
push
pop
cmp
inc
mov
stos
subb
adc
mov
add
pop
and
push
pushf
add
rcrb
xchg
jnp
dec
ret
call
nop
test
pop
in
or
ds
inc
jns
pop
sbbl
iret
fs
pop
or
add
lret
sub
dec
cmp
mov
scas
mov
ret
add
loop
in
push
lahf
xor
test
sbb
rcrb
pop
scas
pop
adc
jp
ljmp
add
or
rolb
insl
nop
jne
sbbb
roll
mov
cmp
or
adc
lock
add
inc
imul
jne
in
jle
shlb
inc
sub
push
jp
adc
leave
pop
repnz
or
mov
mov
rclb
mov
rorb
in
add
ror
ret
sub
ret
aad
add
and
pop
dec
call
sbb
or
dec
jl
pop
push
mov
enter
lcall
push
pop
outsl
jo
mov
xor
mov
into
xchg
add
ja
rclb
xchg
stos
cmp
fsubr
movsl
mov
adc
push
mov
scas
adc
push
cwtl
scas
add
mov
dec
add
or
pop
divl
iret
fsubr
aam
and
add
ffree
mov
aaa
or
dec
or
hlt
adcb
xchg
pusha
std
lds
dec
decb
jmp
scas
jge
xchg
pop
add
imul
cmc
dec
subb
xchg
nop
mov
adc
fimuls
push
sub
fld
adc
xor
das
dec
int
testb
in
test
mov
add
push
xor
add
inc
inc
jmp
lods
leave
cwtl
mov
jae
mov
in
or
movhps
arpl
fs
cmp
jg
inc
insl
push
add
movsl
dec
movsb
inc
pop
lea
cmc
loopne
je
mov
mov
add
push
mov
adc
cld
cmp
out
jmp
and
mov
mov
xchg
lods
js
jnp
add
push
adc
aad
jmp
add
dec
sahf
jmp
add
mov
sub
lds
fiadds
jnp
push
xchg
cld
pop
daa
test
sub
push
loope
out
add
addr16
adc
dec
stos
and
xor
cmc
xorb
jg
sbb
pop
add
add
add
sub
xorl
xor
mov
call
cmp
in
add
jno
popf
cwtl
xlat
xchg
loopne
cwtl
sub
pop
mov
andl
push
shl
inc
out
add
ret
bound
sbb
push
xchg
iret
sub
faddl
push
cmp
scas
sbb
adc
mov
mov
add
popa
pop
shll
xchg
dec
arpl
add
jg
or
adc
push
aam
subb
and
mov
adc
cld
inc
es
add
xorb
loopne
es
push
lock
ficoms
or
rclb
dec
ds
ljmp
sbb
add
jne
mov
ds
add
icebp
mov
dec
mov
fcoml
jge
xor
inc
mov
cmp
sub
leave
sbb
adc
pop
lret
mov
mov
inc
mov
testb
jae
mov
add
cmp
pop
push
add
sahf
das
xchg
ss
sbb
jp
pmaddwd
pop
std
and
inc
dec
std
add
daa
jmp
or
mov
or
imul
out
out
xchg
je
or
jnp
sahf
xlat
scas
cmp
rorl
inc
or
fsubrs
sbb
test
aam
xchg
pusha
test
or
add
and
cmc
adc
fdivr
add
mov
idivl
xor
and
icebp
lods
fwait
add
test
je
sti
sbb
or
mov
lea
jecxz
test
jmp
je
test
inc
jecxz
fs
dec
add
pop
nop
push
fistpll
push
adc
addr16
push
in
push
and
sub
dec
cmp
nop
adc
scas
jmp
xor
lods
xchg
cli
jmp
cmp
push
add
add
jmp
loopne
xor
xchg
outsb
mov
push
roll
sub
push
mov
mov
jbe
jmp
les
or
int3
pop
sbb
js
dec
sbb
jmp
scas
adc
mov
xchg
lock
sub
mov
xor
iret
mov
push
push
call
jb
sbb
cwtl
or
and
add
int
popa
and
pop
xchg
or
test
pop
popf
adc
add
xor
add
data16
out
loopne
inc
pinsrw
sbb
xorb
push
adc
jmp
dec
pop
or
mov
or
lret
xor
add
add
js
leave
add
adc
stos
shlb
aas
push
jl
loope
jmp
lds
outsl
lahf
out
and
in
fsubl
sub
jl
idivb
add
xchg
lret
sbb
in
or
add
add
cmc
xchg
adc
pop
jbe
cmp
or
fdiv
testb
mov
out
add
sub
pop
mov
rcrl
or
mov
and
jo
add
or
sahf
imul
data16
push
jae
push
pop
mov
in
inc
mov
stos
and
subb
sub
or
fsubs
add
dec
mov
dec
mov
mov
jo
repnz
cmp
cmp
cli
in
xchg
dec
jecxz
sti
mov
mov
sbb
push
sbb
or
fildl
push
mov
testb
movsb
pop
sbb
xor
push
sbb
lock
xchg
sub
sti
mov
arpl
add
dec
inc
xchg
mov
ja
dec
or
dec
or
adc
jp
inc
jno
xor
mov
add
loop
or
outsl
outsb
add
sbb
inc
mov
adc
add
hlt
cmp
adc
lret
and
clc
dec
mov
mov
adc
sbb
fdivrp
shlb
cli
fwait
sbb
push
xchg
dec
lea
mov
xor
add
call
or
int3
sub
push
sub
stos
cs
aaa
inc
inc
and
incl
iret
popf
push
sub
cli
inc
ljmp
push
jb
push
adc
lret
add
and
cmp
out
sbb
rcrl
test
mov
mov
adc
hlt
jno
xorb
idiv
ret
or
das
adc
or
test
xor
hlt
in
insl
pusha
and
dec
fsubrl
jbe
lods
roll
in
outsb
mov
fiadds
pop
lea
enter
dec
inc
and
xchg
and
and
cmc
int
sbb
repz
sbb
cltd
push
stc
xlat
scas
mov
or
int
sub
pop
inc
mov
inc
rolb
cmp
inc
and
add
dec
mov
mov
leave
xor
cmpsl
shll
in
mov
cmp
or
add
or
jns
je
mov
adc
push
lods
nop
mov
aam
dec
stc
add
ljmp
int3
inc
adc
pop
leave
adc
enter
lods
mov
mov
loopne
adc
push
sub
enter
push
jle
lods
data16
xor
and
and
leave
or
out
cmc
dec
inc
push
in
push
fdivr
or
mov
icebp
loopne
push
lock
ja
xlat
sbb
outsl
in
or
jbe
sbb
aaa
mov
cmpb
test
push
adc
cmpsb
hlt
lret
fwait
cwtl
clc
ds
jae
mov
sbb
repnz
sub
cmp
xlat
test
fistps
sbb
addr16
and
arpl
push
cmp
inc
in
stos
push
jecxz
icebp
add
movsb
test
dec
xor
fcoms
dec
and
mov
dec
sbb
add
icebp
xchg
pushf
or
add
add
mov
jp
repnz
xor
adc
jge
pop
mov
ljmp
out
mov
inc
mov
mov
cmp
inc
and
mov
jo
mov
sbbb
outsl
stos
and
sbbb
adc
imul
jecxz
test
cmp
lock
hlt
inc
jo
add
test
mov
mov
sti
add
adc
nop
jae
push
mov
sbb
push
xor
icebp
xchg
and
dec
sbb
pop
fwait
xor
loope
and
movsb
add
xchg
idivl
or
add
jp
mov
cmp
fisttps
shl
or
xchg
adc
mov
adc
nop
cld
nop
stos
dec
clc
in
inc
mov
adc
or
push
mov
cltd
loope
test
xchg
in
xor
dec
mov
dec
sbb
leave
pushf
arpl
mov
push
add
test
std
daa
mov
cmp
dec
and
inc
fs
sbb
js
fisttpll
movb
dec
sti
mov
adcb
pushf
adc
loopne
xchg
lahf
mov
jo
push
sbb
dec
shl
notl
sub
pusha
dec
dec
xor
addb
test
fnsave
pushf
out
ror
fists
adc
inc
add
dec
pusha
adc
dec
and
daa
adc
and
jnp
pop
in
nop
insb
or
cmpsb
and
fs
dec
mov
in
arpl
sub
inc
dec
or
mov
mov
shl
dec
cmp
mull
stos
fmull
adc
hlt
mov
daa
and
dec
mov
scas
sbb
and
cltd
orb
and
inc
ja
sbb
mov
cld
add
je
cli
sub
test
mov
and
aaa
pushf
js
add
mov
and
adc
add
nop
imul
int3
push
adc
push
inc
int3
and
rolb
test
aas
adc
inc
mov
cmp
push
and
push
hlt
dec
mov
pop
push
and
mov
pushf
addb
sbb
js
adc
inc
pop
push
fcoml
addr16
dec
mov
mov
out
loopne
jno
add
sarb
push
add
jns
inc
push
push
push
ds
xor
inc
jno
mov
sub
sub
bound
imul
adcb
jp
test
repnz
cwtl
stos
cmp
or
daa
or
push
cli
and
js
pusha
jno
clc
xchg
dec
pusha
inc
push
xchg
inc
cmp
push
add
push
mov
fcmovnbe
movsl
inc
aam
cmc
es
add
xor
xor
jl
xor
movb
push
iret
stos
pushf
and
cld
mov
xchg
lahf
mov
lods
hlt
add
mov
ljmp
in
mov
sub
adc
shll
out
dec
add
and
sti
orl
iret
loop
sub
cwtl
notl
pop
adc
mov
or
repz
cmp
sahf
cmp
jecxz
inc
xchg
cmp
dec
inc
jo
inc
outsl
add
in
stos
lahf
add
jg
sub
movsl
add
je
sub
mov
inc
fmull
pop
sbb
shlb
mov
push
cs
add
addr16
or
xchg
movsl
add
into
fcoms
or
add
sahf
add
jns
mov
push
cld
add
pop
icebp
cmp
sahf
jp
add
fwait
lods
lret
add
stc
lcall
pop
add
jmp
lret
add
fisubrl
rcrb
or
jns
xchg
loope
xchg
mov
loopne
cmp
push
call
xchg
pop
stos
dec
mov
add
repz
stos
ret
pop
add
leave
pop
cmp
mov
add
pop
nop
mov
jmp
add
rcrb
bound
cmp
add
dec
gs
add
lret
lods
sub
out
ret
add
aad
cwtl
add
jb
pushf
xchg
jp
sbb
adc
jle
pop
mov
mov
dec
sub
gs
cmp
insl
mov
in
cmp
sahf
sbb
xchg
jecxz
add
cmp
pop
stc
jmp
and
lock
shl
xchg
inc
xchg
and
xchg
xor
pop
repnz
sti
sbb
shr
pop
and
mov
xchg
shlb
and
enter
push
jnp
lcall
add
iret
add
mov
dec
arpl
sarl
cmp
jecxz
mov
mov
or
sub
hlt
xchg
jnp
add
adc
ja
subl
addl
push
lcall
fstpt
add
cmpsl
mov
rclb
jb
out
add
inc
into
lods
jecxz
add
mov
cld
cmp
xor
insl
stos
out
int
dec
es
fists
add
aas
cmc
dec
mov
inc
add
adc
or
push
add
dec
jl
aas
daa
xchg
pop
cmpb
xor
das
add
xchg
sub
loope
adc
shl
aam
and
shld
in
add
data16
nop
adc
and
fadds
mov
xchg
cmpb
scas
arpl
xor
inc
dec
sbb
inc
inc
jae
rclb
pop
test
add
cmc
nop
movsb
lcall
in
in
scas
mov
push
add
loope
or
pop
jae
in
cmp
jb
les
fistpll
repnz
add
lret
orl
or
mov
loopne
and
xchg
push
dec
les
add
sub
loope
mov
lods
daa
add
out
mov
ret
xchg
test
or
xchg
cmp
test
xchg
fwait
dec
sbb
into
mov
add
rolb
mov
mov
hlt
inc
xchg
jbe
add
fs
xchg
sbb
cmp
mov
add
mov
mov
les
sbb
lods
sbb
test
addl
lret
add
shlb
xchg
lock
fld
sbb
and
mov
add
or
test
dec
add
inc
xchg
jbe
add
leave
xor
clc
dec
pop
jl
add
mov
ficompl
push
or
ret
mov
nop
cmp
or
scas
arpl
mov
mov
ret
dec
sahf
shll
jbe
mov
mov
jl
in
je
mov
cmp
repz
filds
push
outsl
add
or
add
mov
add
xchg
sbb
or
popa
jbe
xorb
movsl
sbb
pop
push
dec
add
mov
out
ss
and
jge
add
int
loope
je
sbb
movb
sub
cltd
pop
fstps
adc
ljmp
test
push
nop
xchg
jne
mov
xor
inc
add
inc
sti
push
sub
mov
movsl
pop
jns
push
and
xchg
add
xor
or
adc
xchg
in
dec
dec
add
aad
xchg
clc
insl
lsl
and
dec
pop
adc
sbb
sarl
fcom
sar
sub
lret
daa
sarb
dec
pop
mov
inc
imulb
scas
popa
aad
sbb
out
addr16
xor
add
xchg
les
in
add
push
cmpb
cli
sbb
fbstp
int3
jg
jmp
pop
xchg
xorl
popa
and
adc
push
mov
jbe
add
jb
add
enter
out
jne
cmp
and
int3
jne
push
sbb
int
aaa
test
pop
out
push
xchg
mov
mov
scas
mov
jo
fwait
cli
test
into
pop
sbb
stos
shrl
dec
dec
lods
add
pop
mov
out
push
cmp
arpl
inc
mov
movsb
pop
fisttpll
sbb
pop
add
pop
mov
add
jne,pn
push
aad
mov
jmp
cmp
test
jb
jmp
iret
mov
movsb
aad
or
stc
rolb
cltd
enter
js
sti
add
insb
mov
nop
or
add
outsl
es
add
out
int3
int3
add
add
mov
pop
jno
add
cltd
cmp
loopne
cli
sub
pop
loopne,pn
scas
lahf
xor
and
int3
jae
fdivrs
push
xorl
lret
pop
cwtl
mov
pop
rolb
shrl
add
aaa
pop
xor
and
push
loop
pop
stos
push
or
sbb
loopne
cltd
xor
adc
dec
in
aaa
subb
adc
fdivp
push
adc
hlt
nop
in
and
ss
stos
adc
mov
pop
add
test
sub
nop
xchg
icebp
movb
adc
mov
add
jle
or
push
sbb
pop
and
add
fs
jnp
sub
sub
or
stos
push
xchg
cmp
sbb
pushf
in
xor
push
in
jnp
xchg
andb
cmc
mov
in
mov
sbbb
shll
adc
add
mov
testl
jns
in
add
lock
add
in
xchg
pop
out
aam
cmp
add
push
adc
add
and
nop
jmp
adc
jle
rcrb
mov
in
sub
push
mov
add
adc
rolb
jg
cmp
mov
faddl
cmc
lahf
add
das
gs
repz
rcll
scas
add
movl
sbb
pop
pop
bound
jp
test
in
fmull
add
insb
add
and
add
test
popf
imul
dec
insl
scas
sub
outsb
jecxz
xor
fldcw
pop
les
int
loope
adc
pop
sub
lock
push
test
inc
addb
sbb
out
lock
add
shrl
test
mov
fsub
jne
mov
add
push
mov
add
push
mov
add
test
push
dec
lods
nop
pop
push
loop
add
inc
adc
sub
pop
sahf
xchg
aad
fs
add
mov
mov
clc
cli
mov
sti
iret
ss
inc
and
ljmp
sub
jge
jns
es
subl
mov
shrb
mov
add
mov
and
and
in
ljmp
in
lods
jecxz
mov
pop
jp
cmp
lods
nop
mov
add
icebp
in
incl
and
mov
mov
add
les
orb
jae
add
xor
clc
movnti
or
sub
pop
jg
int
lea
mov
ret
cmp
jle
cs
loopne
paddusb
mov
mov
and
sahf
push
outsl
sbb
aad
add
loopne
dec
xor
add
mov
jno
ret
iret
or
out
or
mov
sub
mov
and
pushf
addl
mov
push
shll
cwtl
cwtl
jb
add
repnz
sbb
aad
sub
adc
pusha
enter
and
sbb
adc
sub
sub
dec
fs
adc
dec
pop
lds
sbb
mov
push
dec
lock
and
movsb
adc
popa
push
in
jg
test
cmpsb
outsb
call
inc
scas
cmp
pop
adc
sbb
add
scas
outsl
popa
int3
pop
shll
dec
inc
pushf
add
sbb
push
addb
dec
cmp
test
fildl
shrl
add
pop
sub
add
pop
sub
inc
mov
push
stc
add
push
notb
mov
xchg
inc
pusha
pop
or
add
leave
idivb
fiadds
jg
mov
jno
pop
xlat
dec
outsl
mov
in
or
inc
mov
or
hlt
mov
push
test
add
and
mov
cmp
xor
iret
lds
insb
lods
sub
rorb
adc
bound
cmp
imul
push
mov
pop
and
cwtl
push
and
jge
add
sbb
jns
insb
repnz
add
cltd
lret
ljmp
sbb
mov
or
mov
add
push
insl
pop
pop
out
ret
mov
jo
jo
sub
add
dec
ret
mov
aam
and
testl
stc
int
and
jecxz
push
ja
das
dec
and
pop
std
jne
add
xchg
imul
ds
push
hlt
cmp
pop
orl
dec
add
mov
inc
dec
fst
or
mov
adc
pop
or
call
add
jl
cltd
addb
inc
fwait
push
lods
mov
sbb
ret
add
cmp
sbb
shrb
lret
pop
push
mov
movsl
add
or
sbb
or
dec
outsl
add
push
push
les
pop
mov
mov
cmp
jbe
addr16
sub
pop
mov
in
adc
sub
add
por
iret
pushl
add
mov
outsb
incb
fcmove
push
call
adc
xchg
or
push
aaa
pusha
mov
mov
pop
pop
jnp
pushf
cwtl
jns
cmp
adc
push
xchg
and
repz
movsb
in
lods
mov
adc
icebp
aas
cmp
pusha
mov
add
inc
int3
inc
mov
sbb
add
mov
cmp
arpl
jne
add
mov
fdivrs
fstps
xor
fcmovnbe
mov
add
jmp
cs
dec
mov
inc
or
mov
les
pop
shll
add
sub
rol
add
push
adc
lahf
test
xor
rol
xchg
pop
fistl
mov
fcoms
lds
add
loop
mov
frstor
cmp
lret
push
nop
enter
js
mov
pusha
fmull
notl
or
xor
das
mov
faddl
xchg
bound
push
add
inc
dec
add
jl
mov
push
and
mov
testb
dec
mov
push
mov
fwait
xchg
sbb
lock
mov
in
cmp
sqrtps
sbb
inc
mov
pusha
lahf
cmp
add
sbb
cmp
roll
and
pop
and
sahf
out
adc
insl
shll
inc
mov
shll
inc
xor
inc
push
add
cmp
mov
adc
rep
cwtl
or
or
paddsb
arpl
sahf
psubsw
cmp
or
xchg
cmovne
ret
or
popa
lahf
fs
pushf
add
test
test
inc
pop
push
cmpsl
clc
add
push
add
test
movsl
outsl
aad
cmp
pop
test
xor
orl
and
aaa
cmp
out
add
and
aas
push
mov
loopne
or
xchg
leave
mov
pop
xor
xchg
mov
into
add
stc
shrb
jo
or
mov
or
loop
push
andb
add
cmp
addr16
or
jnp
stc
sbb
adc
pop
push
sub
test
sbb
xchg
adc
or
jmp
inc
rcl
stos
add
jl
jge
mov
ss
insb
cmpb
lea
ljmp
and
aaa
add
pop
sbb
add
mov
sbb
or
jns
sbb
xlat
int
int3
pop
xchg
sar
sarl
sub
fstl
ret
enter
incb
mov
roll
cmpb
dec
pop
sbb
add
lods
icebp
push
imul
cmp
pusha
push
scas
adc
pushf
add
sub
inc
lock
mov
pop
pusha
mov
mov
add
mov
insl
adc
xorb
loopne
pop
jbe
scas
add
push
mov
in
popa
sub
mov
push
dec
les
into
enter
stos
lret
adc
mov
adc
into
test
add
insl
add
ja
stos
mov
jecxz
fists
pop
push
mov
and
adc
jae
or
add
cmp
in
push
stos
cmp
add
mov
and
mov
cmp
pop
pop
rol
movsl
inc
out
pusha
sub
jg
nop
or
inc
xor
out
cltd
dec
sub
nop
std
dec
in
mov
pushf
sub
push
scas
xor
in
lods
adc
mov
rolb
pop
hlt
clc
mov
and
lahf
pusha
mov
or
hlt
add
dec
loop
mov
scas
add
xor
adc
inc
mov
mov
repz
xchg
sbb
repnz
in
popa
pop
or
stos
mov
lds
add
jecxz
pusha
mov
xchg
inc
mov
add
mov
test
push
in
push
lods
and
sub
pop
stc
or
inc
mov
mov
push
xchg
out
mov
mov
push
icebp
push
jae
loopne
xlat
outsb
adc
and
repz
push
movsl
data16
cmp
popa
push
sahf
jnp
out
add
mov
notl
loope
pushf
push
stc
cmp
fdivs
pop
sahf
das
add
mov
inc
xor
push
aaa
mov
sbb
xor
mov
sub
dec
inc
mov
cmpsb
mov
out
inc
dec
mov
xchg
add
ja
shlb
repnz
mov
jg
mov
bound
mov
cmc
shll
or
repnz
dec
xor
pop
inc
mov
pop
arpl
adc
dec
mov
push
jo
sub
add
loopne
jl
add
push
cmc
or
pop
mov
xchg
test
pop
push
insl
fucomip
mov
je
test
dec
mov
and
pop
cmc
push
idivb
jg
out
mov
das
imul
mov
xchg
sbb
or
jle
add
inc
xor
add
inc
shll
cmp
mov
sbb
dec
mov
movsl
rolb
lock
icebp
and
popf
push
adcb
sub
inc
xor
out
dec
pop
inc
jne
add
sar
in
mov
adc
inc
aam
pop
dec
push
out
rcll
ljmp
orb
dec
xchg
jb
jmp
cmp
and
adc
adc
movsl
or
ljmp
or
add
in
addb
icebp
adc
sbb
sbb
inc
push
in
daa
pop
cli
mov
or
pop
outsl
fsubl
push
push
push
aaa
or
lods
add
out
ss
das
xchg
cmp
int3
push
xchg
cmpsl
inc
mov
hlt
scas
pusha
and
out
xchg
pop
xchg
int3
jge
add
push
cmp
or
test
loop
mov
sub
dec
loopne
out
xchg
and
pop
out
dec
or
call
or
jg
loopne
xor
movsl
sti
add
mov
shrl
lret
sbb
add
fs
ss
push
pop
lock
push
add
dec
shrl
jno
add
pop
pop
add
xchg
add
mov
daa
mov
jb
adc
adc
jns
add
pop
bswap
pop
mov
and
add
push
dec
jno
cli
andb
int
xor
rclb
into
xchg
sahf
cwtl
dec
mov
mov
xchg
mov
or
stos
js
jmp
pop
pop
pop
mov
add
fldenv
adc
lcall
add
shlb
rol
enter
cmp
dec
or
loopne
add
jno
add
mov
mov
test
add
mov
pusha
inc
xchg
lea
mov
movl
aad
arpl
sbb
add
js
sbb
xchg
pop
add
mov
jo
lahf
jb
lret
stos
mov
add
insl
jecxz
push
mov
mov
mov
mov
add
inc
xor
scas
nop
int3
add
and
xorb
jecxz
adc
cmp
imul
addr16
jecxz
add
scas
das
add
pop
arpl
and
add
pop
mov
imulb
add
sahf
js
pusha
adc
push
mov
cmpsl
out
cs
daa
add
jb
jnp
sahf
and
jge
inc
shrb
lea
jmp
jb
mov
sbb
addb
sub
sub
dec
adc
add
stos
add
pop
cmp
pop
push
je
add
mov
sbb
jnp
inc
add
mov
add
push
push
scas
mov
outsb
mov
rorl
rolb
cmc
int
testb
pop
push
notl
sub
pop
mov
andb
adc
test
push
mov
add
mov
imul
add
gs
clc
popa
add
ljmp
aam
add
inc
add
mov
jo
adc
out
lods
jge
clc
xchg
ljmp
mov
daa
sarl
add
cmp
cltd
add
adc
test
add
cmpsl
and
mov
sbb
jp
add
mov
jbe
sbbb
js
add
mov
pop
dec
sbb
sbb
inc
cmp
adc
scas
out
and
cmpsb
sahf
scas
cmp
xchg
rorb
pushf
inc
in
add
nop
pop
stc
push
mov
test
cmp
jbe
movq
insl
mov
pop
or
add
pop
cwtl
add
pop
cltd
sub
gs
xchg
xchg
insb
movsb
dec
jnp
jae
jno
add
stc
icebp
cwtl
int
dec
inc
out
mov
cmp
push
lahf
inc
pop
cmp
cli
jp
and
idivl
jge
subb
adc
jnp
mov
or
xchg
sbb
shrb
add
mov
out
add
inc
adc
add
sbb
add
xchg
jle
call
mov
mov
test
jbe
dec
mov
sahf
pop
and
sub
lds
dec
mov
jno
or
add
stos
sbb
subb
inc
add
jns
ret
loopne
sub
xchg
cmp
sbb
lods
push
jmp
imul
add
add
int3
mov
and
push
call
push
jo
jne
nop
jecxz
lret
push
cwtl
cld
mov
push
mov
std
xchg
xor
daa
ret
mov
xchg
add
cld
sub
pop
shlb
std
jg
jbe
jae
and
cmc
mov
jg
mov
cltd
int
sbb
je
add
adc
ljmp
sub
pop
out
lds
ds
add
arpl
stc
test
pop
ds
cmp
mov
xchg
fs
sub
jmp
add
rol
add
sahf
enter
in
je
sub
stc
nop
inc
fmuls
xlat
mov
sbb
loop
inc
push
sti
xchg
loope,pt
xchg
scas
je
pushf
movsb
inc
icebp
fsubr
push
add
push
loope
add
cmp
xchg
out
push
loopne
jae
add
mov
or
test
add
or
in
sarb
cmp
dec
pushf
add
je
ss
adc
add
ja
pusha
test
test
jne
and
lods
pop
mov
pop
jb
add
jo
push
sub
add
xchg
cld
add
popa
es
add
fsubl
or
xchg
lret
in
shrb
and
fnstenv
int
fisttpll
lock
in
movsb
lds
aam
pusha
and
fmuls
or
ljmp
inc
inc
sbb
orl
aas
int3
ja
mov
ds
and
lahf
pusha
add
cmp
inc
pushf
sahf
pop
sbb
mov
pop
mov
add
movb
in
bt
cli
inc
sar
dec
push
inc
add
and
xchg
adc
pop
add
cmp
mov
jae
sbb
jb
imul
je
add
push
repz
inc
mov
jne
add
lods
push
sub
cwtl
jbe
push
call
add
jnp
or
mov
movsl
sbbb
cmp
add
sub
loope
lret
mov
lret
xlat
not
nop
sahf
imul
pop
test
lea
push
dec
movsb
mov
xor
cld
and
rolb
cmp
sub
sbb
add
add
xchg
outsl
push
pop
cmp
and
xchg
or
xchg
add
mov
cmp
into
jno
pop
inc
lahf
mov
and
cld
push
add
mov
add
cmp
push
cmp
mov
and
daa
sbb
pop
push
push
inc
ljmp
pop
add
sub
loopne
add
push
xchg
jg
mov
test
in
cmp
cmp
add
shlb
jo
push
push
cwtl
stos
push
repz
add
adc
jae
add
mov
call
mov
and
inc
arpl
sti
addr16
push
pushf
sarb
lods
popf
push
cmp
and
inc
daa
dec
mov
and
pop
pop
or
sbb
rcr
push
inc
ffree
add
xchg
iret
loop
lahf
cmp
ret
mov
in
loope
add
jg
sub
sbb
jp
jae
aam
dec
xchg
mov
in
add
scas
lahf
jge
adc
repz
les
xor
inc
rcll
stc
add
dec
pop
imul
in
sbb
cmp
pop
jg
imul
orb
enter
dec
sub
test
fadds
mov
xor
mov
push
lods
test
mov
inc
test
inc
in
cld
and
add
pop
sti
int3
add
jge
inc
mov
push
add
push
loope
inc
xor
stc
enter
push
sbb
or
mov
test
add
or
and
roll
nop
push
test
cmc
cmp
add
jbe
xorl
push
jge
jo
std
add
js
adc
repnz
int3
add
mov
addb
pusha
add
xlat
sub
rcrb
jmp
cli
hlt
enter
mov
loopne
out
fwait
adc
add
sub
stc
testb
dec
shll
cld
add
push
sub
std
push
mov
pop
add
movl
add
pop
iret
pop
movsl
lea
add
xor
or
sub
jae
in
enter
and
repz
dec
rorl
cmpb
adc
or
outsl
imul
icebp
and
cmp
fisttps
loope
sahf
adc
lret
xor
or
outsl
pop
ss
dec
jle
add
dec
std
ds
adc
ja
pop
pusha
mov
mov
and
in
adc
add
imulb
lock
cmp
out
dec
and
xchg
jl
push
jns
lcall
cmp
fcoml
jecxz
leave
cld
aad
rclb
adc
mov
dec
cmpsl
push
mov
jmp
xchg
push
push
mul
pop
mov
mov
in
pushf
je
jns
ret
add
jnp
in
cld
scas
adc
fst
and
mov
adc
add
cmp
hlt
in
rcl
add
sbb
mov
ret
adc
flds
decb
jae
mov
and
hlt
inc
inc
mov
jecxz
inc
mov
adc
icebp
jle
or
and
roll
mov
sbb
popa
or
repnz
jle
pop
dec
into
inc
mov
inc
in
and
and
sar
xchg
mov
or
inc
rclb
lds
aam
orb
adc
pop
popa
or
stc
xlat
dec
pop
adcb
out
fisubl
inc
dec
and
adc
cmp
fistpl
inc
sub
push
cmpsb
sub
mov
jae
inc
adc
gs
loopne
clc
andb
and
ja
sub
or
fwait
sbb
insb
mov
cld
mov
inc
mov
inc
rclb
inc
sarb
mov
and
or
add
or
nop
sbb
mov
inc
stos
and
icebp
or
mov
jne
and
and
or
inc
mov
push
icebp
orl
mov
xor
or
push
mov
sarl
jne
inc
nop
and
cmp
shrl
and
push
test
add
shrb
jns
add
aaa
mov
in
lcall
jno
ja
sub
sbb
push
stos
test
loop
pop
adc
jl
xorb
stc
aaa
test
mov
pop
sub
cmp
clc
sbb
adc
cld
sub
mov
sbbb
pop
or
xchg
lcall
mov
inc
fisttps
mov
mov
outsl
test
xchg
add
rorb
cmp
into
std
sbb
outsl
add
xchg
repnz
jo
scas
adc
stc
and
daa
mov
cs
pop
repnz
loope
xor
push
pop
cld
cmp
in
cmp
cmpsb
imul
jnp
scas
pusha
scas
inc
sbb
cmp
fdivs
mov
call
pop
mov
sbb
push
fnsave
cmpsb
mov
loopne
addb
push
mov
add
cmpl
mov
add
shlb
add
xchg
int3
ja
and
cmp
pop
mov
jle
faddl
ret
icebp
dec
adc
je
adcb
mov
inc
jb
push
testl
push
add
icebp
push
or
jecxz
mov
pop
nop
cmp
add
sub
lcall
dec
rcll
pop
add
adc
fwait
hlt
or
sbb
mov
cwtl
xchg
jbe
enter
scas
and
cmp
xor
add
in
add
arpl
addr16
cmp
or
sub
xchg
pop
xchg
lahf
dec
mov
cwtl
inc
addl
and
fcmovnb
into
ret
nop
push
lods
push
pop
clc
adc
xchg
xor
jmp
stos
add
fnsetpm(287
mov
dec
out
inc
sbb
jae
out
and
imul
and
jb
mov
fs
sub
jne
lret
popa
push
das
cmpsl
xor
je
arpl
xor
add
pop
adc
dec
lret
add
sbb
mov
fsubl
lret
inc
popf
pop
mov
or
lods
and
stos
and
out
xchg
cld
imulb
outsl
sub
movsl
mov
in
push
mov
inc
mov
movsl
add
fwait
rorb
xor
adc
push
call
mov
push
add
test
idivl
nop
sub
inc
adc
pop
push
rol
mov
add
arpl
stos
mov
inc
popa
arpl
roll
pushf
pop
cmp
call
cmp
add
lods
idivl
push
jmp
ljmp
sbb
sbb
mov
imul
cmp
arpl
les
mov
cmp
add
and
xchg
std
out
add
add
test
daa
mov
sub
out
lret
mov
cmp
xor
adc
add
and
fcoms
pop
cmpb
xor
push
pop
sbb
mov
imul
test
fcomps
mulb
std
repz
and
and
add
push
in
mov
out
mov
push
sarb
test
inc
dec
mov
shll
out
loopne
pusha
xor
inc
add
push
mov
sarl
sub
insl
cmpsl
fistl
jno
sub
in
cmc
push
xchg
lahf
in
loope
push
sbb
cld
pop
cmp
movsl
in
lods
mov
add
cwtl
xchg
filds
jecxz
cmp
test
push
push
aam
aaa
pop
mov
inc
pop
jge
push
testb
loopne
adc
jbe
pop
fs
inc
push
and
xorb
add
mov
adc
jmp
mov
jmp
popa
insb
fildl
sti
sbb
add
push
int3
adc
jo
mov
repnz
cmp
push
test
or
orl
xchg
cmpb
add
and
pushf
sbb
mov
pop
and
lods
jo
into
addr16
test
xchg
or
sub
dec
cs
sub
pop
xor
add
faddl
inc
dec
mov
shrb
fsubs
pop
pop
adc
adc
push
mov
hlt
pop
mov
mov
in
add
ja
push
and
xchg
shrw
sub
loop
add
mov
and
xchg
push
in
aaa
cmp
cmp
repnz
push
movsb
sub
shlb
mov
aad
add
fidivrl
add
xchg
mov
and
sbb
repnz
stos
test
lock
push
pop
push
mov
xorb
repnz
or
and
add
pop
xchg
jp
enter
xchg
hlt
testb
mov
aaa
mov
jge
adc
les
gs
ja
jno
add
insb
scas
mov
and
and
sbb
fcmovne
out
xchg
and
in
add
out
loope
adc
push
jb
ja
add
outsl
test
aas
xor
pop
sub
cmp
xchg
xchg
fimull
clc
add
sldt
jl
and
add
dec
shll
aas
in
inc
fdivp
nop
sbb
lcall
xor
insb
cmpsl
sub
loop
loope
stos
xchg
mov
orb
and
lahf
adcb
add
cwtl
dec
add
cmpsb
jecxz
je
add
cmp
stos
imul
sarb
fdivl
mov
clc
loopne
pop
xchg
call
or
xchg
and
add
repz
cwtl
push
mov
push
cmpsb
jo
andb
pop
daa
mov
filds
flds
orl
psadbw
fldl
inc
mov
mov
fbstp
out
sbb
dec
pop
std
mov
add
leave
xor
dec
mov
or
in
orb
sbb
rolb
add
sub
hlt
mov
dec
pop
orb
cmp
xchg
outsl
fucomi
cmp
lret
test
filds
icebp
dec
aas
dec
and
iret
adc
fistpll
xor
call
xlat
mov
add
sbb
xchg
fldl
fwait
test
lret
add
stos
mov
and
aad
or
aam
mov
cld
sbb
xchg
add
iret
mov
lret
popa
push
xchg
push
popl
mov
adc
aam
mov
iret
inc
add
lret
add
rcll
call
mov
push
loope
pop
lds
adc
cmc
nop
mov
push
movb
sbb
mov
arpl
testl
push
fcom
cmp
mov
dec
lock
mov
push
pusha
imul
dec
sbb
mov
je
xor
outsl
out
fs
mov
inc
push
int3
pushf
push
add
fs
enter
add
insb
fsubrl
inc
xchg
fmull
add
addb
inc
adc
sub
push
cli
xor
inc
jg
iret
or
call
into
xchg
dec
and
cmp
pop
push
ds
inc
xchg
and
shll
test
add
jmp
inc
or
rorb
xchg
loopne
in
sub
sbb
pop
jmp
sub
pop
cs
call
mov
add
and
cld
mov
das
pushf
jo
lahf
cltd
lds
mov
popa
jne
add
arpl
bound
js
fdivl
pop
adc
ds
lods
add
pop
and
jae
add
add
jae
rolb
adc
test
add
jno
pop
add
add
roll
test
sbb
push
jb
push
cli
sbb
push
mov
out
addb
sahf
aam
add
faddl
mov
in
inc
pop
push
jns
or
push
fdivrl
popa
mov
enter
cmp
sbb
sbb
scas
clc
leave
and
add
mov
dec
pop
mov
popf
in
or
add
fwait
out
dec
inc
lods
loope
cmp
aam
dec
in
or
adc
sbb
rolb
aam
sub
dec
out
mov
push
pop
lds
cmpsl
daa
mov
jle
add
sub
pushf
dec
pop
sbb
mov
xchg
addr16
mov
dec
addl
loopne
cli
neg
adc
out
outsb
cmp
and
pop
add
adc
mov
inc
mov
xor
xor
sahf
sub
mulb
rclb
imul
fcomps
sbb
lcall
add
jno
push
pop
mov
stos
push
push
sbb
repz
adc
mov
leave
bswap
int
lcall
add
cwtl
jg
pop
shll
mov
pop
test
sbb
sbb
enter
add
outsb
xchg
imul
add
push
xchg
dec
lds
add
xor
add
jnp
mov
push
out
std
lods
in
mov
sti
aaa
push
js
arpl
cwtl
cmp
nop
je
mov
mov
and
and
fmuls
xchg
add
jle
add
push
pop
sub
popf
add
add
inc
pop
repnz
xor
ds
mov
clc
jo
mov
xchg
or
test
outsl
push
or
sahf
adc
push
add
insb
mov
es
xor
inc
aaa
cmpsl
out
shl
dec
sbb
add
and
js
out
cmovg
or
out
push
mov
cmpl
movntq
or
pop
add
popa
push
stos
adc
adc
mov
xchg
je
add
imul
popf
fwait
push
add
dec
sub
in
push
outsb
mov
pop
imul
mov
stos
lock
mov
and
xchg
dec
loopne
hlt
cld
ror
or
test
xor
push
mov
dec
inc
add
ja
and
pop
adc
enter
mov
je
jnp
mov
jae
ret
jge
add
mov
push
cmp
inc
cmp
push
orl
rolb
andl
add
mov
xor
mov
or
sbb
and
ljmp
add
push
out
add
insl
xchg
aad
mov
lahf
xlat
ror
xor
fbstp
js
out
xor
into
rclb
or
cmpsb
pop
aam
mov
add
in
mov
xlat
pop
and
and
inc
inc
push
cmp
pusha
push
insl
mov
out
lea
or
jnp
imulb
inc
add
fwait
xchg
cmp
cmc
adc
out
rorb
cs
add
pop
xchg
push
repz
mov
aas
stos
push
sbb
inc
pop
cmp
cmp
std
insl
mov
idivb
mov
mov
adc
sbb
push
xor
or
subl
or
out
test
dec
and
fwait
xor
mov
push
mov
pop
or
popa
leave
int3
out
push
ljmp
or
orb
inc
mov
push
rolb
add
sub
xchg
sar
jb
cmp
add
scas
jbe
jnp
into
pop
pushl
mov
ds
test
jmp
xor
data16
mov
inc
cmp
and
dec
xor
repnz
push
cmp
pop
cmp
xchg
xor
hlt
loopne
add
mov
sub
into
fsubrs
outsl
push
push
cmp
iret
test
loope
fldcw
or
push
lock
dec
push
xor
xchg
jo
sahf
jo
add
mov
add
adcl
add
mov
pop
xchg
mov
call
add
imul
clc
adc
sti
shll
stc
sbb
int
aam
nop
add
testl
push
inc
repz
into
add
pop
pop
sbbb
push
mov
les
insl
roll
popf
add
jecxz
adc
sbb
jo
mov
xchg
sbb
cli
mov
add
sahf
push
mov
sbb
xchg
dec
push
dec
repnz
sub
jno
add
jne
cmc
mov
inc
inc
add
push
inc
adc
dec
add
ljmp
ds
mov
add
in
bound
ja
mov
add
sahf
leave
ret
or
add
mov
xor
mov
icebp
jecxz
adc
loopne
movsl
out
cvtpi2ps
negb
and
maskmovq
notl
jo
out
jmp
cmp
inc
push
jecxz
xor
cmp
dec
jmp
jns
sub
stos
mov
sbb
xor
dec
adc
or
xchg
les
mov
in
in
mov
mov
adc
inc
ja
enter
rcr
push
add
jmp
scas
and
jge
std
jnp
mov
adc
add
pop
sbb
add
in
testl
xchg
xor
pop
roll
adc
mov
ficompl
xchg
ret
add
add
sarb
addl
lret
add
push
sub
loopne
pushl
xor
fiadds
lcall
call
pop
in
push
inc
add
push
ret
shl
idiv
or
movsb
or
xorb
std
adc
xor
cmpsl
add
cmp
mov
add
ret
mov
insl
dec
mov
xchg
lock
push
sbb
filds
push
mov
pop
mov
inc
mov
repz
incb
pop
or
add
xchg
mov
dec
add
into
inc
push
or
adc
dec
inc
dec
and
sub
out
sbb
jmp
xor
out
and
xor
inc
xor
push
test
inc
mov
dec
mov
loopne
mov
mov
hlt
add
imul
dec
inc
test
push
sbb
inc
ffreep
js
loope,pt
adc
pop
ss
lods
xchg
jle
repnz
ds
mov
aad
or
lret
mov
adcb
out
and
mov
xor
adc
or
fildll
rorb
jne
pop
or
nop
rclb
mov
mov
and
cmpsl
shll
sbb
xchg
in
mov
cmpb
test
jne
add
icebp
sbb
mov
mov
xor
or
pop
jae
jo
xlat
sub
lock
dec
je
out
js
push
push
add
loopne
stos
add
lret
sbb
adc
add
mov
ret
jmp
adc
cmp
add
or
and
mov
js
push
add
mov
mov
add
mov
fst
test
add
push
popf
cmpsl
add
add
and
cmp
mov
dec
repnz
aas
and
std
inc
xor
movsl
jl
adc
rolb
ss
shrb
jle
aaa
push
fbstp
dec
mov
imull
mov
push
dec
test
sub
jp
scas
inc
pop
mov
mov
and
push
popf
push
add
loopne
add
idivw
pop
xchg
subb
das
sahf
popl
repnz
jbe
push
cmp
mov
inc
xor
cmp
mov
cmp
jg
nop
in
or
mov
dec
add
mov
clc
ret
jp
cmp
addb
xor
sbb
mov
lret
pop
lret
pop
add
adc
lea
inc
test
pop
or
pushf
push
push
fisubs
sub
std
lock
xor
out
sbb
add
cmpsl
sbb
jg
pusha
xchg
shl
pusha
adc
add
movsl
in
arpl
cmp
mov
and
aam
lds
fcoms
loopne
stc
sbb
or
loopne
add
ljmp
cmp
aas
jl
lods
repz
xchg
xchg
dec
inc
mov
es
fstp
loopne
loope
adc
xchg
or
imulb
dec
subb
inc
rorl
inc
int
cmc
add
repnz
aaa
mov
add
mov
mov
and
or
xchg
int3
in
jg
arpl
imul
lret
pop
addl
mov
insl
xor
adc
xor
pop
mov
sub
aam
mov
add
loopne
xchg
movsb
jo
push
out
out
incb
xchg
pop
push
jo
jmp
cmp
mov
mov
imul
lds
movl
pop
outsl
cmpsb
sarb
sbb
push
addl
test
idivl
loopne
in
pop
leave
cld
and
mov
rclb
add
shll
push
xorl
cmp
pop
mov
punpckldq
mov
lods
call
test
add
mov
shrl
or
dec
loopne
jno
bound
push
outsl
add
cmpb
lcall
addr16
dec
mov
jecxz
add
stos
jmp
xchg
pop
popa
or
lods
xchg
add
jno
jge
jg
add
outsb
pop
jecxz
mov
pop
andl
push
pop
repnz
add
jb
xlat
add
inc
mov
and
jns
adc
cmp
lods
adc
push
icebp
adc
mov
loop,pt
and
in
mov
adc
or
fldt
mov
fstps
movl
fcmovnbe
cmp
cwtl
lock
sbb
add
mov
adc
loopne
add
mov
jecxz
adc
imul
testl
popa
dec
call
xor
sbb
lret
lret
lcall
addr16
jno
pushf
or
xchg
xor
sbb
pop
sahf
inc
dec
mov
sbb
add
or
test
mov
dec
orb
mov
inc
add
incb
hlt
popf
cld
jo
add
mov
loope
mov
cli
aaa
xchg
add
out
mov
add
pop
std
inc
fldl
loop
dec
jp
push
es
enter
or
sahf
cmp
test
dec
cmp
lods
nop
add
mov
in
mov
pop
mov
mov
push
push
xchg
test
lcall
xchg
loope
mov
dec
inc
addl
add
repz
push
and
mov
in
pop
pop
lahf
xor
mov
popw
mov
and
and
sbb
pop
mov
add
pushf
pop
adc
cmp
std
dec
pop
aaa
mov
add
pop
jo
add
mov
icebp
add
lcall
mov
sbb
pop
ds
shl
arpl
xor
sahf
shlb
nop
adc
jno
xor
stos
adc
std
movsb
test
das
dec
push
inc
mov
scas
push
ja
mov
xor
or
mov
sub
and
in
xor
daa
mov
call
pusha
or
les
pusha
imul
addb
in
add
pop
adc
nop
mov
xor
pusha
hlt
call
and
pop
je
mov
add
or
js
prefetchwt1
test
aam
sbb
data16
insl
mov
addb
pop
shr
das
cmpsl
ds
dec
lds
fildl
mov
add
sarb
push
mov
shll
pop
out
ja
add
scas
mov
xchg
arpl
pushf
mov
or
adc
sbbb
fnstcw
lea
insb
cmp
add
cli
popl
xchg
push
sbb
cmp
mov
mov
push
jmp
call
pusha
mov
or
mov
cld
orl
mov
subb
sub
ds
cmc
call
mov
and
popf
add
or
push
jmp
and
mov
add
movsl
sbb
scas
mov
xor
adc
inc
fdivl
mov
cmp
lcall
pusha
shll
xlat
mov
push
imul
or
ret
pusha
mov
and
cld
subb
mov
cmc
adc
add
scas
sub
mov
or
addr16
cld
pusha
imul
pop
je
and
adc
mov
test
sbb
add
lcall
rcrl
jo
int3
pusha
je
pusha
enter
pop
mov
lock
cmpb
test
cmp
mov
mov
sbb
xor
fs
cli
add
test
add
mov
and
sbb
hlt
enter
add
out
push
movsb
xlat
mov
add
int3
fcmovnu
add
cli
add
and
out
test
int
dec
into
movsl
inc
ljmp
xlat
stc
push
adc
sub
lret
push
push
fidivl
loopne
xor
jb
outsl
shlb
cmpsl
or
inc
fists
pop
push
rol
xor
mov
add
mov
pop
int3
push
mov
xchg
les
sub
xchg
adcl
adc
xor
int
push
movb
idivl
out
mov
das
dec
sub
pusha
add
jge
test
ds
xchg
test
push
mov
add
dec
popf
cmp
jno
add
cmpsb
mov
rcll
xchg
popa
scas
jge
test
push
cmpsb
sub
pusha
or
ljmp
lret
out
add
and
orb
in
ja
mov
fdiv
add
cli
into
fistpl
sub
scas
data16
sub
sub
shll
mov
sbb
jae
xchg
lahf
imul
add
mov
enter
call
xor
outsb
ljmp
iret
test
std
add
push
sub
rolb
mov
jg
add
or
ss
mov
in
jle
mov
mov
das
fstpt
stos
leave
xor
inc
adc
add
mov
scas
sub
add
adc
xorl
or
insl
mov
jns
add
iret
and
jmp
xor
cwtl
lods
push
in
jno
add
call
add
sub
adc
ljmp
hlt
xchg
mov
aam
popa
xchg
sbb
mov
ficoms
mov
dec
push
push
cltd
add
ror
repnz
xor
es
ljmp
sbb
push
xchg
cmp
stc
mov
cmp
sbb
iret
sbb
stos
imul
sbb
shrb
stc
lds
je
add
add
repnz
xchg
cmp
add
mov
data16
xor
repnz
int3
mov
xor
and
add
lea
cwtl
mov
pop
ja
cmp
sub
add
xor
shrl
cld
outsb
out
add
pop
push
sub
mov
adc
and
mov
pop
leave
jb
notb
jns
cmp
mov
and
sbb
xor
pop
push
aam
int3
mov
add
and
fsubrs
push
and
jg
sbb
mov
xor
mov
lock
jge
inc
jae
flds
pop
loopne
cmp
xor
aam
mov
dec
xchg
sbb
sbb
repz
or
fsubr
pop
pop
xchg
jg
pusha
nop
mov
sahf
or
notb
sbb
push
ljmp
lock
rclb
add
or
out
mov
fadds
lods
push
loop
enter
jle
add
mov
addb
ljmp
xchg
add
pop
push
pop
push
inc
jge
mov
pop
jbe
cmp
cli
push
shlb
add
repz
add
jl
fldt
adc
loop
push
popa
mov
inc
or
push
add
pushf
stos
in
add
xchg
inc
adc
pop
call
mov
sbb
add
imul
mov
gs
mov
aaa
daa
and
arpl
jp
pop
idivl
add
cmp
gs
pop
scas
fidivl
addr16
push
mov
fisubs
cmp
cmp
daa
movsb
dec
jnp
pop
sbb
shrl
xchg
dec
pop
insl
daa
dec
lock
pop
add
cmp
inc
pop
ret
mov
clc
inc
mov
mov
add
cld
int3
bound
add
xor
pop
popa
fs
dec
add
jmp
jns
js
rclb
pusha
fldl
hlt
dec
mov
pop
push
mov
int3
xchg
cld
inc
pop
sbb
pop
das
dec
add
lahf
jbe
mov
dec
xor
mov
fs
push
add
pop
call
in
add
aas
xor
shl
sub
jo
imull
movsb
sbb
hlt
mov
or
lock
shrl
jg
cmp
in
push
out
jecxz
pop
add
and
mov
pop
imul
idiv
loope
xor
add
mov
adc
call
sub
inc
fimull
add
push
imul
xchg
xor
sti
add
xor
scas
cmp
cmpsl
test
fwait
sti
add
iret
pop
push
cmpxchg
inc
scas
mov
add
cmp
outsl
aas
sub
lcall
add
xor
mov
jmp
add
aas
cmpb
iret
nop
cmp
shll
std
jge
or
jge
insl
lock
dec
hlt
add
sbb
cmpsl
mov
mov
rolb
hlt
add
fdivrp
out
add
in
in
and
mov
out
leave
cmp
mov
test
xchg
cmp
and
cmpsl
jnp
pushw
test
ret
stc
and
out
add
or
sbbb
fdivrs
or
inc
push
ret
out
sub
mov
sub
cmp
add
mov
add
fnstsw
insl
pop
push
aas
inc
xchg
cmp
mov
or
cmpl
dec
lret
push
repnz
mov
movsl
push
enter
scas
mov
add
jmp
jp
insl
push
pusha
in
nop
jecxz
sbb
push
push
fs
add
add
sub
clc
cmp
movsb
lret
imul
dec
icebp
ljmp
cmp
subl
jl
add
mov
cmpsb
pop
xor
ror
std
mov
aad
lock
xchg
add
out
call
cwtl
add
mov
pop
jge
adc
or
int
jge
add
mov
push
adc
movsl
sbb
adc
pop
add
sub
sbb
dec
mov
adc
dec
add
inc
pop
pusha
pop
ficoml
iret
dec
movsb
add
ljmp
in
adc
les
cmp
adc
dec
lock
jle
pop
sub
and
add
adc
dec
pop
inc
add
mov
nop
enter
and
in
add
xchg
out
inc
pusha
scas
mov
pop
frstor
inc
cwtl
or
test
push
lock
test
jp
mov
push
jae
aaa
inc
jo
or
lods
jb
and
xchg
adc
mov
fcomip
loopne
dec
faddl
cmpsb
lcall
xchg
je
inc
jl
push
lock
add
xchg
pop
or
xchg
pop
adc
roll
sub
mov
push
xchg
lea
add
or
adc
fsubrs
add
ret
cmp
add
jb
incl
mov
out
mov
dec
adc
mov
dec
ljmp
mov
faddl
nop
add
pop
xchg
jle
sub
fisubs
imull
add
pop
sbb
sbbl
stos
mov
data16
push
cltd
jo
push
imul
or
cld
enter
jg
or
mov
add
mov
add
testb
fdivr
sahf
and
add
shll
mov
dec
and
int3
or
adc
mov
pop
das
or
test
push
cs
cmp
pop
sti
jae
jge
cmp
mov
sub
push
add
mov
and
loope
in
cld
mov
jno
mov
enter
lea
add
repz
fidivrl
push
inc
mov
decl
mov
repz
daa
fnstcw
dec
icebp
add
mov
jl
add
cmpsl
stos
rclb
sbb
adc
sub
out
les
inc
mov
pop
dec
mov
pop
pop
inc
sarb
sbbl
cli
inc
cmp
sahf
sbb
lahf
cmpsl
pop
imul
jmp
mov
fdivr
cmc
subl
pop
jg
mov
sarb
or
mov
cmp
jbe
push
cwtl
inc
cmp
in
jmp
ds
add
mov
in
pop
lock
hlt
mov
mov
divl
push
cmp
push
add
nop
add
add
ret
imul
push
add
xlat
int3
mov
add
ljmp
sub
lahf
mov
leave
dec
push
cld
sub
sub
in
add
or
or
inc
call
fcompl
pop
rorb
test
ret
test
aas
je
shlb
add
ret
icebp
xor
dec
xor
ljmp
cmp
pop
push
cmpsl
out
add
adc
push
call
mov
mov
xor
data16
sti
cmp
loopne
nop
jp
adc
sub
ljmp
insl
or
mov
imul
pop
ret
daa
enter
add
test
sti
sbb
ljmp
lods
das
add
mul
in
andb
dec
push
ds
pushf
inc
in
add
imul
mov
mov
add
mov
pop
imul
or
fsts
fsubs
add
int3
pop
or
xchg
jmp
jle
rolb
add
sbb
cmp
rolb
pop
dec
sub
and
lods
xor
in
add
sub
mov
sub
lahf
cmp
lock
cmc
add
call
outsl
push
add
pusha
push
push
sbb
pop
inc
add
out
jecxz
dec
fs
pop
jge
clc
push
sbb
lock
and
pop
cmp
sbb
fdivr
pop
add
mov
loop
mov
xchg
mov
in
jbe
cltd
in
mov
dec
inc
je
ud0
add
pop
pusha
mov
jne
mov
add
pop
jnp
clc
sti
ret
dec
push
fidivrl
and
in
andb
daa
orb
xor
test
sbb
test
movsl
pusha
insb
sub
ja
add
in
xor
out
cli
mov
push
mov
add
jno
mov
push
xchg
pop
cs
inc
rcrb
jp
fcoms
mov
pop
cld
pushf
add
lahf
push
pop
les
stos
mulb
les
mov
es
pop
mov
sub
cmp
jb
cmovb
clc
cmc
inc
add
nop
push
hlt
int3
push
add
shlb
movsb
mov
andb
stos
add
lods
or
lods
mov
push
xor
sbb
mov
shlb
mov
push
xchg
lock
push
or
cmp
cld
std
sahf
loope
fcompl
jno
add
scas
jbe
por
popf
xor
lods
outsl
dec
xchg
xor
cmp
notb
or
push
push
mov
jmp
and
loopne
adcl
push
loop
pop
add
int
sbbb
sub
out
fistl
imul
add
xchg
sbb
pushf
sub
aam
push
call
mov
cld
and
std
movsl
nop
pop
mov
cmpsl
aas
and
in
sbb
sub
orl
in
fadds
mov
nop
mov
add
inc
subb
adc
or
aas
jmp
mov
adc
add
sbb
aad
aam
xor
fwait
xor
push
cltd
add
ss
push
je
adc
popf
inc
mov
stos
hlt
add
adc
mov
ret
dec
mov
push
int
mov
push
das
movsl
inc
data16
sahf
add
jmp
cli
into
add
aas
repnz
sahf
cltd
popa
hlt
or
ss
add
inc
les
inc
push
in
repnz
add
jo
orb
xor
push
adc
add
popa
fs
add
inc
jmp
xor
sbb
cmp
aam
add
mov
dec
mov
scas
mov
jmp
pop
movl
sbb
leave
push
push
pusha
mov
mov
cmp
adc
rorb
cmp
lds
mov
outsb
xor
xchg
dec
xchg
popf
add
arpl
fidivl
sub
rcrb
xor
and
jmp
adc
decl
inc
mov
lock
dec
sub
xor
fldl
scas
in
push
add
pop
jbe
lods
lods
rcl
arpl
jge
mov
int
pop
lock
add
add
xchg
dec
fstps
shl
es
cmp
pop
sub
and
pop
aas
popa
jns
test
ljmp
push
jno
mov
pushf
add
enter
sbb
cmp
clc
out
outsl
add
inc
pop
loopne
xor
call
adc
adc
dec
nop
insb
lret
add
mov
add
sahf
in
fbld
mov
repnz
push
inc
pop
mov
mov
pop
add
add
lods
stos
pop
add
add
jmp
rolb
out
cmpb
pop
outsl
or
sub
rclb
pop
dec
je
aam
fs
push
mov
push
sti
call
pop
mov
ds
mov
mov
sbb
add
jo
mov
sbb
loop
aad
sub
lock
call
cmpsl
pop
sub
pop
je
cmc
sub
stos
push
cmp
ret
or
or
in
add
and
stos
jl
imul
add
mov
dec
dec
and
enter
pusha
in
xor
mov
cmp
adc
dec
mov
movsb
xchg
lock
fwait
out
add
xchg
sbb
aam
les
mov
ja
add
xchg
outsl
fstpl
jbe
xchg
shrb
mov
icebp
xchg
add
lock
mov
add
insb
fnstcw
nop
test
andb
pop
mov
cld
lock
pop
pop
enter
xchg
jg
ret
adc
clc
inc
or
loopne
xorb
add
hlt
insb
fs
or
in
mov
jo
in
sub
add
iret
mov
adc
cmp
sarb
xchg
add
pop
fstps
cli
rolb
icebp
cwtl
push
push
sbb
testb
mov
pop
add
ret
leave
add
lods
aaa
sarb
hlt
add
push
xchg
jecxz
mov
pop
shll
iret
data16
ja
xor
cmp
xchg
pop
loope
aas
mov
add
pop
push
ja
inc
inc
or
shlb
xchg
rcl
xchg
popf
add
mov
mov
inc
das
je
jns
pushf
call
fstpt
loope
jle
mov
and
mov
or
add
sub
inc
movsb
das
mov
adc
fwait
xchg
pusha
add
dec
and
sbb
jle
repz
das
movsb
cld
cli
add
jae
add
add
int
icebp
cld
push
jle
push
pop
out
enter
sahf
sub
ret
jo
lret
shll
insl
and
push
sub
out
ret
pop
pop
and
aas
inc
xchg
dec
stos
and
sbb
pop
mov
fldt
fs
and
mov
lds
repnz
sub
pushf
pop
jne
xlat
inc
push
cmp
rorl
sbb
es
push
cmpsb
xchg
outsb
add
xchg
add
adc
add
mov
fiadds
ds
pop
testb
dec
add
dec
mulb
aas
add
mov
or
sub
adc
iret
sbb
test
and
cwtl
lcall
pushf
add
lea
repnz
scas
jo
mov
imul
sub
sbb
mov
out
sti
jge
rol
decb
and
add
test
add
sub
ds
in
in
loopne
and
cmp
dec
dec
mov
push
repz
add
cmpb
adc
cs
js
mov
ror
xchg
mov
adcl
ret
inc
mov
inc
push
inc
or
stos
pop
push
repnz
outsb
adc
adc
jnp
pop
and
ja
fs
arpl
mov
add
jo
rorb
ss
jmp
adc
adc
stos
adc
dec
cmp
repnz
ds
mov
add
inc
stc
imul
push
lods
mov
dec
push
jmp
inc
lret
jp
pop
dec
cmp
lods
hlt
daa
xlat
push
pop
xor
inc
stos
in
and
add
loope
push
xchg
scas
cmp
push
sbb
pop
mov
add
bound
sub
fdivr
test
mov
lahf
xor
adc
jp
cltd
jno
mov
jb
loope
sub
out
cmp
and
and
mov
clc
repnz
jecxz
pop
adc
push
mov
mov
jae
or
div
adcl
sbb
push
in
cmc
pop
sbb
xchg
sub
rolb
lods
sbb
cld
mov
sarb
cmpsl
outsl
mov
pop
ds
loopne
loopne
sar
sub
mov
and
sbb
add
jnp
sahf
es
sbb
xchg
xchg
fs
add
and
add
stos
in
mov
repnz
sahf
je
jge
jnp
and
mov
repnz
push
mov
xorb
popa
jne
je
add
sub
xchg
jo
mov
faddl
inc
mov
pop
push
jnp
pop
add
or
add
out
lcall
rolb
lea
cmc
mov
test
dec
test
sbbl
jecxz
adc
or
ss
push
mov
bound
cmpsl
xor
add
xchg
repnz
cld
in
cmp
in
add
loopne
sub
stos
push
nop
outsl
test
jecxz
ret
inc
sub
jnp
sahf
cli
adc
adc
mov
insb
inc
cld
jmp
and
nop
inc
xchg
adc
mov
or
clc
imul
inc
and
and
and
push
ficoml
ja
pop
outsl
mov
or
inc
frstor
and
shll
pop
or
dec
push
fadds
adc
push
ret
add
pop
in
ret
popf
or
xor
jbe
pop
xlat
lcall
add
xchg
hlt
xchg
xor
aaa
or
add
sub
xchg
ret
stos
push
pop
repnz
adc
and
insl
lds
sub
push
sub
gs
inc
push
xchg
aas
xor
add
subl
jne
test
inc
or
mov
enter
cmpsl
prefetch
add
rclb
lock
pop
movsb
cmp
or
mov
dec
dec
mov
scas
mov
and
roll
cmp
inc
lods
loop
add
cltd
cmpb
add
cmpsb
xchg
pushf
shlb
jecxz
inc
mov
lahf
xchg
stos
pop
xchg
and
add
and
sub
push
clc
outsb
mov
les
std
movsb
push
call
repz
add
adc
push
xchg
mov
mov
shrb
add
cmp
push
pop
push
arpl
insl
cmpsl
lea
add
popf
cld
mov
fistpl
iret
dec
adc
sub
add
ss
pusha
mov
mov
sarb
jecxz
cmpsb
push
xor
std
mov
xchg
pop
sbb
cltd
sbb
mov
xchg
ja
pusha
and
pop
dec
or
pop
push
loopne
lahf
cwtl
dec
lcall
sbb
mov
scas
pop
outsb
call
mov
or
ds
inc
sarl
cld
test
add
scas
je
insb
enter
add
dec
mov
adc
add
cmpb
mov
scas
je
add
jle
jnp
addb
dec
pop
sbb
clc
xchg
inc
and
sbb
repz
pop
inc
and
sub
jne
arpl
ret
stos
and
push
adc
inc
xchg
scas
xor
xor
fsubl
or
xchg
arpl
ret
in
mov
subb
and
cmpsl
dec
scas
pop
mov
mov
aas
sub
xchg
ss
mov
cltd
pop
add
push
cmc
test
test
adc
fsubs
fdiv
je
sub
sub
adc
push
test
mov
mov
aas
ds
pop
cmp
mov
sbb
in
mov
cli
mov
jl
pusha
and
ljmp
and
test
in
pop
sub
popa
mov
jmp
and
shl
mov
sbbb
cmp
dec
inc
sarl
xchg
in
pop
aad
ret
xor
iret
add
adc
cmp
add
scas
cmp
fs
sarb
dec
xchg
or
mov
shr
pop
das
jge
mov
push
cwtl
push
dec
les
test
mov
mov
mov
sub
lea
push
xchg
xchg
aaa
jp
pop
pop
jns
call
dec
or
jo
rcll
int
adc
add
pop
fidivrs
inc
inc
and
add
loopne
and
jns
decb
lods
mov
jno
cltd
lds
pop
dec
fisttps
sarl
fsub
add
add
cmp
jmp
gs
inc
mov
push
cwtl
push
inc
int3
js
pop
shlb
cltd
loopne
loope
outsl
xor
pop
pop
dec
or
sub
add
mov
push
xchg
ds
mov
setb
adc
mov
sbb
xor
rcrb
sarb
adc
stos
jnp
insl
xor
jne
sub
fidivrs
jge
push
or
out
xchg
sbb
adc
push
sbb
lock
clc
add
lret
add
push
adc
mov
aas
adc
jbe
movsb
lret
add
cmp
jne
out
mov
xchg
lods
cs
add
or
lea
ja
or
ljmp
test
xor
call
int3
sbb
sub
pop
mov
mov
leave
jo
add
stos
int
movsb
mov
in
das
cli
es
xlat
into
mov
jl
pop
inc
scas
addr16
imul
inc
enter
push
enter
push
iret
fs
pushf
push
daa
jp
add
idivb
movups
shll
xchg
jl
mov
xlat
add
mov
fiaddl
add
iret
and
andl
pop
dec
mov
adc
jne
cwtl
mov
out
stos
cmp
mov
subb
popf
dec
subl
pop
jmp
lcall
add
jae
out
les
mov
sbb
filds
aas
cwtl
stc
es
mov
in
int3
nop
mov
jecxz
out
mov
inc
cmp
dec
js
imul
in
sahf
mov
add
in
mov
pop
je
cs
pop
int3
das
rcrb
cwtl
aam
dec
enter
lea
adc
int3
das
jp
stos
aam
cmpsb
testl
ja
pop
fabs
pop
test
mov
enter
push
rolb
pop
aam
or
shll
sbbb
bound
lock
jecxz
pop
roll
mov
mov
rcr
mov
in
popf
jb
add
call
cmp
aaa
dec
add
push
dec
mov
cltd
pop
sti
scas
testl
sub
adc
and
fdiv
les
pop
inc
dec
add
pop
xor
add
xchg
cmpsl
cwtl
das
arpl
pop
out
add
dec
cmc
arpl
bound
lret
add
mov
lods
sti
cs
mov
inc
clc
jg
inc
add
cmpsl
adc
pop
ljmp
sub
sub
fsubrl
mov
add
lock
dec
outsl
out
mov
fsubrs
in
pusha
mov
sbb
pop
pop
add
push
ds
mov
int
das
addr16
imul
pop
add
repnz
outsb
rorl
sub
test
fisubrl
cmpsb
idivl
xchg
enter
rol
dec
adc
test
add
sub
stos
repnz
les
mov
push
sub
cmc
sbb
notl
and
aam
xchg
xchg
inc
add
mov
inc
dec
popf
js
lock
aam
mov
xor
test
add
push
xlat
pop
imul
jmp
pushf
jae
xchg
cmp
mov
aas
inc
mov
jne
xor
in
repz
xchg
lock
shrl
lods
pop
mov
jne
xor
ss
in
inc
add
inc
xchg
lret
out
add
outsb
or
or
out
mov
adcl
aam
mov
in
inc
xlat
repnz
cmp
or
pop
je
dec
xor
xchg
sub
lods
sub
addl
inc
fxch
mov
cltd
mov
shr
sub
add
xor
mov
data16
add
jecxz
jmp
xor
lret
add
scas
mov
sub
or
arpl
push
cmpl
add
push
icebp
sub
test
repnz
ds
lock
es
add
rorl
xlat
aas
xor
push
fcoml
or
call
call
repnz
push
movsb
inc
sub
add
loopne
cmp
mov
fists
loopne
cli
repnz
lahf
mov
das
jo
ror
adc
orb
ja
hlt
mov
jl
add
std
sbb
dec
in
mov
add
pop
jnp
dec
pop
std
add
add
add
or
cs
and
push
mov
test
gs
clc
lods
cmp
cmp
push
in
push
fiadds
mov
pop
outsb
mov
dec
and
popa
cmp
mov
jmp
jae
rcrb
xlat
aad
and
adc
adc
cmpsb
add
push
test
lret
add
andl
jecxz
mov
rorl
leave
xorb
mov
mov
sbb
pop
test
rclb
add
cli
and
push
add
fsubr
lock
mov
jne
pop
inc
test
popf
push
hlt
push
sbb
lock
sub
xchg
fmuls
add
scas
in
sub
out
cmp
mov
out
bound
scas
lds
mov
clc
push
add
sbb
bound
add
cmp
cmpl
hlt
add
cmp
mov
dec
xor
or
xchg
add
lahf
push
sbb
incl
lret
movsb
cmp
add
inc
jbe
add
fxch
iret
fs
push
sub
pop
shrl
mov
jbe
scas
xchg
jg
mov
ljmp
add
lret
int3
xchg
dec
enter
add
adc
in
dec
cmc
loop
push
lcall
loope
popa
int
pop
aam
cmpsb
ret
add
stc
mov
cmp
je
testb
or
mov
sbb
aas
push
inc
inc
fstps
sub
sbb
aas
int3
lods
add
push
mov
outsl
lock
rcrb
out
push
cmpsl
xchg
pop
mov
test
cmp
xchg
push
add
inc
rcr
lcall
ljmp
or
mov
jnp
dec
int
int3
mov
add
mov
lds
lcall
jl
push
sub
push
dec
mov
dec
stc
in
aas
popa
cs
imul
jge
and
mov
dec
dec
hlt
scas
and
je
in
and
add
outsl
push
xchg
cmpsb
jo
fmuls
add
mov
pusha
sbb
xchg
popa
sub
aaa
cmp
jp
cmp
fwait
scas
imul
add
iret
lret
call
push
jbe
mov
fimull
cmpsl
cmc
dec
pusha
ja
or
daa
adc
fsts
jp
adc
mov
sbb
jge
pop
arpl
push
loopne
shl
sbb
dec
repz
jnp
or
hlt
sub
cmp
pushf
mov
adc
pop
mov
sahf
mov
out
push
dec
add
xchg
jg
popf
inc
jle
xchg
aas
jb
lret
add
push
xchg
leave
inc
jp
sub
cmp
pop
mov
mov
pop
rcl
push
jb
mov
bts
push
sub
pop
sub
sbb
push
aam
mov
test
or
ljmp
loopne
jbe
cmp
es
fcoms
xor
lods
add
add
mov
sub
rcrb
sub
mov
iret
adc
pusha
add
vmread
add
popf
mov
add
push
xor
lcall
and
push
and
inc
nop
pop
jmp
add
or
mov
add
dec
mov
mov
insl
shrl
pop
mov
rclb
insb
shrb
ja
push
loopne
jg
push
gs
mov
test
popa
movq
cltd
les
mov
lret
test
pop
dec
inc
jbe
xchg
xor
inc
or
cmp
xchg
insb
test
incl
pop
jb
jae
movsl
ja
mov
add
or
push
jg
xor
je
sahf
push
xchg
push
cs
shrl
cmp
mov
idivl
dec
sub
inc
and
mov
xchg
adc
push
repz
adc
inc
mov
and
cmp
or
adc
sub
scas
push
loope
aaa
mov
cmp
adcl
cmpsl
shl
add
nop
or
shr
add
aaa
add
stc
and
std
push
sub
and
imul
ffreep
out
notl
and
mov
in
mov
add
ret
hlt
pushf
mov
cli
mov
dec
and
pop
int3
lock
je
aad
dec
dec
cmp
rorb
pop
jo
dec
mov
pop
cmp
test
sbb
pop
js
xchg
fists
and
cmpsl
add
pop
movsb
loopne
lock
and
cmp
add
mov
mov
jb
rolb
or
in
inc
aaa
pop
les
jp
stos
ss
loopne
into
or
iret
cmp
push
sub
cmp
out
or
sti
sti
add
cmpl
mov
add
pop
out
push
js
inc
xchg
ffreep
and
mov
push
push
push
mov
or
ret
test
in
jno
fistpll
xchg
inc
xor
ja
cmovb
sbb
testb
xor
fcomps
mov
inc
jmp
xor
sbb
imul
mov
rorb
loopne
mov
popl
loope
outsb
xchg
jmp
movsl
jnp
dec
dec
add
or
xor
mov
aad
out
adc
ficompl
dec
pusha
and
pop
fwait
mov
mov
es
inc
mov
and
push
jae
mov
pusha
test
sahf
enter
jp
inc
xchg
sbb
cmp
imul
mov
jge
sbb
push
jp
inc
dec
adc
xchg
mov
scas
jg
loop
movsb
sub
and
or
jbe
sub
subb
sub
pop
mov
inc
push
adc
and
add
mov
cwtl
xor
xor
neg
mov
in
pop
mov
fs
sub
or
or
mov
ficoms
in
cmp
pop
jmp
push
mov
push
add
fstl
les
test
push
mov
sub
add
mov
push
shrb
leave
cmp
mov
add
mov
hlt
and
hlt
rol
rol
testl
les
sub
or
adc
add
xor
jmp
pop
add
push
addr16
shl
pop
mov
xor
jb
outsb
pop
push
inc
inc
je
nop
test
aaa
es
fisubrl
push
enter
sbb
sarl
mov
xlat
sbb
push
push
xor
jmp
adc
pop
pop
imul
add
fmulp
adc
pushf
inc
test
xor
and
outsl
push
mov
inc
notb
jo
sbb
sub
xchg
hlt
sbb
pop
mov
push
add
push
mov
mov
mov
inc
pop
cs
lahf
cmp
jb
inc
fildll
add
testb
enter
add
aam
loopne
call
bound
mov
cld
or
sub
adcb
dec
divb
or
xor
mov
inc
and
cs
pusha
fst
repnz
sarb
or
sbbb
hlt
push
ret
aam
mov
cmpsl
add
xchg
cwtl
and
adc
push
das
pusha
mov
jne
add
adc
mov
push
pusha
cli
cmp
and
and
shrb
add
mulb
adc
adc
and
xor
mov
bt
jae
cs
pop
sub
push
or
adc
mov
and
cli
cmp
add
out
xorb
loope
mov
sbb
push
insl
mov
inc
dec
cmpsl
nop
ds
xchg
lahf
sbb
sub
loopne
xor
sbb
pop
pop
jecxz
cmp
sbb
adc
jmp
notl
pop
inc
xchg
add
pop
adc
adc
push
call
sahf
xchg
dec
push
out
sbb
cld
daa
in
adc
fcmovnbe
dec
arpl
stos
fcmovb
pop
in
loop
push
daa
insl
movsl
hlt
jg
and
sbbb
sub
xor
mov
sub
and
cmp
or
mov
pop
cmpsb
in
fcmovne
xchg
inc
push
jg
fsubs
rorb
add
pop
add
cmc
mov
add
xor
mov
roll
fbld
js
mov
rolb
and
sbb
lods
lds
push
movsl
cwtl
out
xchg
xchg
out
sahf
daa
aam
cmp
jp
out
pop
push
les
mov
push
ljmp
unpcklps
loopne
mov
js
dec
inc
ret
andb
std
cli
mov
dec
in
mov
xchg
xlat
xor
push
leave
cmp
add
xor
in
mul
je
add
jne
mov
sbb
push
in
pop
jg
ror
nop
sub
push
test
pop
loope
js
push
sub
sub
dec
out
pop
push
and
fldt
lds
stos
popf
outsl
mov
dec
or
or
cmp
loopne
mov
xor
xor
jbe
add
fnstenv
gs
paddsb
dec
adc
mov
jecxz
add
pushf
add
ss
sbb
mov
andl
fwait
sbbl
or
jae
sbb
push
mov
je
mov
jb
mov
pop
test
or
pop
ss
xor
mov
push
roll
mov
repnz
ret
cmp
das
push
js
pop
in
pop
inc
enter
repnz
add
pop
dec
sti
cmp
adc
outsb
jge
push
bound
cli
push
jns
add
int3
cmp
addl
dec
stos
jo
add
flds
mov
out
pop
pusha
push
or
hlt
clc
inc
add
daa
loopne
adc
ja
iret
adc
jae
loope
stos
jno
cmp
jb
xchg
jnp
mov
rcl
test
loopne
pop
cwtl
pop
jo
adcb
jp
scas
pop
mov
add
jo
push
add
or
loopne
jle
dec
cltd
pop
cmpl
and
jp
xchg
ljmp
fwait
push
ret
pop
fcmovu
add
cmpsb
xor
in
sub
or
push
pop
fcomp
or
fisttps
mov
adc
mov
ret
lcall
in
aad
dec
or
js,pt
test
add
jb
push
pop
xchg
ror
push
dec
mov
add
or
popa
fs
clc
adc
in
movsl
jo
cmp
icebp
mov
cmp
dec
inc
jno
xor
pop
mov
xorb
jo
mov
jbe
test
hlt
add
push
addb
adc
xor
cli
insl
mov
mov
add
sub
mov
orb
fimuls
mov
cltd
mov
adcl
inc
adc
dec
pop
pop
icebp
add
loop
aad
push
jb
add
outsl
jnp
hlt
add
insl
out
push
cmp
into
in
xor
mov
scas
sarb
fisubrs
jg
jle
or
sub
iret
xor
js
sbbb
pop
adc
jmp
rorb
adc
fmull
jl
lods
clc
in
add
lahf
aad
add
pop
ljmp
mov
inc
xchg
push
rolb
push
jb
inc
add
clc
dec
test
sub
roll
fs
push
mov
repz
hlt
shll
lods
pop
ror
or
xor
in
sbb
das
cltd
xor
scas
inc
lcall
cmc
jnp
push
sbb
adc
add
lea
icebp
pusha
std
cmp
xchg
mov
sbb
scas
scas
or
jo
pop
mov
inc
aad
jno
testb
adcl
xchg
sub
sub
push
xchg
cmpsl
flds
lahf
or
push
cmpsl
iret
jp
add
sbbl
out
fsubl
or
out
pushf
xor
cld
pop
or
xor
jg
fisubl
jecxz
xor
dec
and
jmp
add
loopne
dec
dec
xchg
andl
test
cwtl
mov
in
repz
mov
into
or
jno
cmc
jmp
imul
pop
add
pusha
daa
jns
add
jmp
jmp
xchg
data16
jb
adc
fldcw
shrl
das
add
lods
add
or
cmp
sub
out
inc
cmpsl
loope
outsl
jle
test
daa
pop
and
aad
cwtl
das
data16
lods
xor
mov
push
and
cmp
add
inc
sahf
test
in
movb
sbb
cs
dec
xchg
sbb
jnp
pop
mov
jne
sbb
jl
jo
push
into
adc
pusha
addr16
pop
nop
fwait
jbe
fidivrl
add
xchg
lock
xor
insb
and
stc
add
loop
add
test
das
scas
hlt
clc
jmp
cmp
inc
pop
movsl
icebp
adc
shlb
or
shll
xor
scas
jmp
mov
dec
mov
shrb
sbb
popf
pop
inc
ret
inc
jg
mov
bound
leave
movsl
stos
outsl
xor
add
mov
cwtl
sub
push
ja
pop
jnp
icebp
hlt
and
ret
into
or
cmp
inc
es
xchg
xor
aad
adc
sub
dec
adc
inc
out
clc
push
cmp
mov
gs
mov
test
or
mov
inc
outsl
jb
pop
fcoms
loopne
jl
fildl
daa
and
mov
repz
push
mov
pop
mov
sub
inc
add
sub
add
js
xchg
push
test
push
mov
add
mov
jg
push
xchg
add
mov
dec
sub
add
nop
out
add
inc
mov
dec
inc
add
jnp
imul
xchg
jno
pop
or
es
and
ljmp
cli
pop
and
sub
jmp
xchg
in
and
orl
push
iret
out
mov
shl
push
mov
enter
out
es
lahf
cmp
cmp
cmpsl
cmp
das
or
jmp
push
pop
and
sbb
dec
add
mov
pushf
sub
dec
cmpsb
pop
xchg
mov
out
test
or
imul
or
adc
mov
sub
dec
pop
in
lahf
jmp
add
in
add
sbb
pop
arpl
inc
or
mov
int
outsl
test
das
mov
pushl
outsl
xor
jno
sub
add
jb
or
xchg
add
mov
add
inc
in
adc
movsl
or
or
fs
pop
cwtl
subb
inc
into
jne
hlt
ret
roll
js
loop
or
mov
or
in
mov
xor
sysret
stos
leave
sti
adcb
push
rclb
lret
adc
mov
jp
jge
rclb
sahf
push
ljmp
and
dec
testl
xor
mov
leave
call
test
mov
xor
jecxz
fnstenv
sbb
pusha
stos
mov
mov
mov
test
insb
mov
jne
xchg
xor
mov
scas
in
pop
mov
fiadds
or
enter
fs
push
outsb
adc
pop
add
unpcklps
pop
sub
pop
add
int
pop
pop
std
xchg
andl
cmp
leave
test
xorb
xchg
fbstp
pop
cld
mov
loopne
loope
lock
movzbl
adc
xor
or
movsb
icebp
cmpsb
mull
xchg
cmp
pop
push
cmc
cmpsl
mov
mov
push
int
jp
lock
das
xorb
incb
lcall
repnz
xor
sbb
inc
add
xchg
in
leave
xchg
push
pop
ret
jg
mov
cmp
xor
fnstsw
mov
int
adc
call
push
or
xor
lds
das
rorb
adc
enter
add
stos
scas
push
adc
in
pop
push
imul
add
jl
dec
and
cmp
push
add
or
or
fsubp
xor
in
andb
add
add
xchg
dec
adc
popa
jo
insl
shlb
movl
shlb
cmp
xor
add
fs
xchg
fcoms
cwtl
jo
jge
out
push
mov
out
pop
xchg
fwait
dec
jmp
fwait
cmp
jbe
and
mov
into
fstps
aaa
or
in
jo
sarl
hlt
pop
inc
jbe
ljmp
push
lods
stos
mov
or
stos
push
push
scas
inc
xor
cmpsb
pop
push
cwtl
fisubrs
mov
xchg
lods
call
lds
sbb
push
add
ja
add
into
jg
dec
mov
push
inc
shr
push
cltd
pop
inc
lods
std
inc
pop
mov
repz
jp
loope
sbb
inc
test
or
inc
mov
add
push
sbb
std
bound
jo
inc
mov
pushf
adc
add
cwtl
cmc
xchg
imull
add
mov
fbld
xchg
shlb
sub
or
push
je
insb
add
sbb
sub
pop
xor
lret
add
or
adc
dec
mov
movsl
cltd
fdiv
clc
cli
gs
dec
subl
adcl
adc
jo
arpl
test
fstpt
jns
aas
jge
outsl
stos
inc
mov
jb
sbb
rclb
pop
or
cmp
push
pop
push
pop
in
pop
out
pop
fldl
inc
stc
cmp
into
ret
jbe
sbb
xchg
shlb
push
jg
cltd
rcl
sub
lods
add
mov
mov
or
cltd
fsubrp
orb
mov
outsl
sahf
nop
xchg
add
mov
mov
xorb
inc
shl
push
enter
adc
inc
pop
sbb
and
xor
inc
xchg
imul
cltd
cmpsb
lds
and
test
sbb
xchg
out
xchg
dec
cld
notb
scas
cmc
xchg
test
inc
mov
vpsllw
sbb
movsl
sub
mov
cmp
cmpl
sbb
or
js
loopne
pusha
fwait
pop
pop
xchg
mov
inc
imul
shrb
cmpsl
mov
rcrb
add
pop
cmc
lret
ljmp
xlat
cmpsb
icebp
add
js
add
sti
sar
int
fs
aas
cs
add
std
mov
mov
pop
fwait
shl
xor
in
rcrl
loop
add
scas
cli
andb
nop
add
repnz
inc
jno
xchg
es
in
add
and
sub
test
add
bound
aas
int3
rcrb
add
ss
mulb
mov
nop
roll
push
rclb
mov
test
pop
sbb
in
inc
sbb
and
adc
dec
add
stos
sub
jbe
ret
sub
adc
mov
aas
outsl
in
call
hlt
call
or
push
jnp
or
mov
inc
notrack
pop
sbb
mov
aaa
pop
add
in
mov
push
pop
loopne
shlb
aam
inc
insl
test
shlb
xchg
inc
add
add
pop
andb
lock
add
pop
push
es
inc
shrb
cmp
push
fcompl
add
push
mov
popf
pop
bound
stc
popa
jmp
imul
jg
das
lods
xchg
jnp
xor
loope
cmp
push
pop
adc
xor
cmp
mov
daa
mov
sub
push
inc
aas
fstpl
cmp
xchg
sbb
shrb
push
popf
push
sbbb
shlb
leave
pusha
xchg
out
sub
sbb
sbb
push
lock
xchg
jge
inc
pop
sbb
push
mov
inc
push
cmpsb
jo
or
jmp
push
add
popa
jbe
cmp
rcll
loopne
mov
or
addb
rcr
imul
mull
je
cmp
add
xchg
call
enter
inc
mov
mov
aam
mov
and
sbb
sbb
mov
push
and
mov
mov
inc
addl
and
xor
push
dec
rorl
movsb
push
lock
jl
adc
das
subl
into
xchg
test
test
jnp
push
add
dec
cltd
in
xor
dec
js
add
push
mov
into
adcl
inc
and
fdivrp
imul
inc
cwtl
or
imul
and
mov
xchg
inc
das
adc
test
stos
push
xor
add
jb
add
push
sbbb
push
push
fsts
ret
cmp
inc
mov
lret
inc
gs
std
aas
pop
jge
add
jmp
cmc
enter
addr16
testl
cmc
cli
or
es
and
and
test
mov
push
push
sub
inc
add
test
push
popa
rolb
jecxz
and
pop
push
or
bound
mov
ds
loopne
rolb
mov
hlt
insb
test
cli
cmp
push
pop
xchg
add
jmp
in
pop
inc
fadds
sti
or
mov
cmp
lcall
adc
out
mov
cmp
sbb
dec
imul
out
cmc
xchg
or
jo
jg
mov
aad
mov
and
in
push
iret
sti
push
gs
add
testl
punpcklbw
mov
pop
xor
push
add
popf
mov
jbe
or
shl
or
mov
push
xchg
pusha
cmpsl
jb
cs
add
stos
lods
and
ret
mov
les
int3
outsb
adc
push
cmp
out
repz
push
dec
lock
dec
inc
push
dec
mov
cltd
mov
arpl
mov
lods
sbb
into
pop
in
push
bound
adc
sub
arpl
movsl
adc
into
in
or
adc
adc
dec
pop
iret
add
and
rcr
pop
xchg
popf
pop
xor
arpl
loope
fdivr
sub
lret
imul
mov
es
sub
stos
jae
xchg
sar
inc
sahf
inc
mov
lret
xor
xor
and
adc
dec
lahf
sar
adc
or
loope,pn
popa
imul
mov
xor
inc
cmp
sti
dec
sbbl
ljmp
pop
das
jbe,pt
lcall
mov
repz
xchg
in
and
push
popa
shl
in
jg
ficoms
test
pop
in
ljmp
stos
sub
shlb
ja
loop,pn
pop
xchg
adcb
pop
add
sub
in
inc
xor
or
cltd
es
add
push
or
icebp
pop
pop
imul
sbb
call
repz
test
out
and
mov
jo
test
cmp
loope
es
cltd
add
sub
push
xchg
je
mov
jl
push
add
dec
sub
and
pusha
repnz
sub
or
or
and
out
leave
pop
jge
into
mov
mov
sahf
add
pop
add
fwait
pop
jbe
or
subb
lea
xor
pop
sbb
inc
sti
sbb
xor
adc
lods
mov
arpl
das
es
jbe
inc
mov
jmp
cwtl
fmull
rcrb
das
dec
push
in
ljmp
das
lret
jmp
pop
ret
pop
mov
cli
clc
dec
stos
cmp
ds
cmp
pop
les
sub
push
pop
cwtl
rol
and
jae
add
repz
test
dec
pushf
xchg
and
int3
add
xchg
mov
push
cmp
inc
leave
test
mov
mov
jp
je
jl
add
loop
addr16
daa
jae
push
sub
stc
sbb
pop
mov
jl
lods
adc
jg
movsb
push
aam
mov
dec
ror
xchg
gs
add
cmp
mov
jae
jb
jno
nop
je
jns
test
int3
mov
lahf
xchg
add
pop
fwait
mov
daa
bswap
xlat
add
out
ficoms
or
jne
ss
loop
movsb
mov
xor
stc
xor
mov
dec
das
iret
xchg
dec
add
dec
addl
and
and
loopne
insl
add
sbb
jmp
push
pop
or
comiss
mov
dec
shl
mov
aaa
aam
fcoml
jmp
inc
ss
xchg
adc
pop
xchg
test
faddl
jo
cmpsl
iret
je
fdivs
add
mov
mov
lds
cmp
or
or
adcb
fsubl
cli
xor
mov
mov
jp
cltd
frstor
mov
adc
add
push
mov
cmp
and
scas
push
cli
xor
push
je
add
mov
insl
mov
and
stc
dec
mov
push
add
cs
jae
add
pushf
ret
loopne
and
push
mov
push
add
mov
aas
and
push
jo
bound
addl
loop
add
add
shlb
pop
add
ret
sbb
cltd
inc
andl
aam
mov
mov
jo
pop
dec
adc
addl
xchg
pop
pop
imul
mov
cmpsb
mov
xor
xchg
imul
inc
popf
fidivl
jbe
cli
loopne
and
testb
add
adc
stos
xlat
adcb
js
adc
std
cmp
add
je
mov
sub
int
sbb
jp
and
test
popf
add
scas
add
out
fnsetpm(287
outsl
push
daa
cs
xchg
add
jns
jg
das
js
adc
popf
stos
cmpb
or
outsb
inc
sub
arpl
jae
je
push
push
outsl
mov
push
mov
cmpl
in
fs
pop
out
push
nop
pop
imul
adc
popf
pusha
dec
loope
loop
fs
movsb
inc
stos
add
or
sub
sub
add
and
dec
pop
dec
lock
push
inc
in
pop
lcall
xchg
cs
flds
mov
cmp
fwait
scas
imul
jmp
cmpb
and
jne
mov
cmc
out
decb
add
lret
aas
bound
mov
pop
mov
sahf
ja
sbb
int
roll
les
sbb
shlb
ficoms
push
pop
shll
imull
push
lret
xchg
mov
fwait
je
addl
cld
pusha
popf
and
or
sbb
fisubrs
add
mov
pop
lds
and
pop
xchg
stos
int3
fistpll
mov
int
jno
jns
push
or
pop
test
fnstsw
int3
push
aad
fs
add
or
arpl
loop
push
subb
push
add
out
or
xchg
enter
or
sub
pop
mov
cltd
jp
inc
xor
je
mov
xchg
xchg
jb
shrb
mov
rep
daa
inc
or
dec
mov
data16
push
adc
or
or
cli
pop
aad
es
mov
popf
dec
cmc
jmp
nop
xor
sub
push
dec
bound
jle
lea
dec
outsb
add
add
inc
mov
lock
mov
lcall
sahf
push
cmpxchg
arpl
in
inc
add
mov
xchg
cmp
ds
jmp
mov
addr16
push
xchg
cmp
or
mov
or
mov
pop
into
inc
xchg
push
sbb
aas
jo
mov
adc
imul
cmp
gs
mov
sbb
xchg
and
jge
inc
sti
lahf
or
add
pop
loopne
add
inc
xorl
cmp
cmp
mov
aad
repnz
cmp
cld
cld
and
pusha
in
dec
inc
sub
pop
call
pop
add
jae
pop
mov
mov
dec
popf
jnp
cmp
mov
inc
or
jp
cwtl
jns
add
test
jge
arpl
mov
je
cmp
cmp
sti
idivb
into
lds
pop
test
test
cli
mov
popl
mov
cld
add
imul
jecxz
push
sbb
roll
xchg
xor
mov
pusha
adc
xlat
popa
test
xchg
mov
bnd
push
or
sub
xchg
adc
pop
or
test
adc
add
sub
sahf
repnz
imul
mov
pushf
movsl
subl
inc
xchg
clc
pop
cmovs
pop
push
pop
and
lcall
daa
subb
dec
mov
movsb
scas
or
xchg
xchg
xor
movsb
inc
xor
jae
mov
sbbb
movsl
dec
icebp
mov
aaa
adc
pop
jae
and
insl
icebp
sub
js
add
sbb
leave
sub
je
fildll
das
cld
jg
dec
adc
sbbb
dec
test
inc
stos
daa
rcl
lds
iret
in
daa
add
mov
repnz
outsl
sti
cmpsl
jp
xchg
dec
sbb
movsl
add
sub
and
push
push
fnclex
ss
push
and
jle
sbb
out
jge
fucom
fbld
in
cvtps2pd
push
bnd
rcrb
xchg
pop
sub
je
push
and
mov
adc
adc
lods
fimuls
fsubr
loopne
mov
push
cs
sbb
inc
push
repnz
mulps
cmp
dec
nop
xorb
dec
pop
mov
leave
shll
xchg
adc
mov
cmc
rorb
mov
jae
ficompl
pop
inc
xchg
stos
fadds
sbb
int3
xlat
hlt
int
xchg
adc
jle
add
inc
movsb
out
daa
call
cmp
shlb
mov
mov
ret
das
rclb
inc
cs
ss
xor
xor
pusha
and
pop
test
mov
inc
faddl
mov
xchg
stos
sbb
ficompl
xchg
add
jl
jecxz
test
cwtl
pop
xor
movsl
push
andl
xchg
fsub
or
sub
sbb
cltd
hlt
mov
dec
mov
xchg
add
xchg
cmp
jne
mov
aaa
push
test
pop
mov
mov
sub
jg
add
ss
mov
mul
cmp
stc
pop
cli
push
pusha
lret
lcall
mov
push
sbb
adc
xor
adc
or
je
int
and
dec
or
test
cmpsl
lahf
mov
popf
fdivl
jl
cltd
aam
jp
into
or
push
les
and
jmp
ret
add
mov
sbb
pop
pop
in
jb
mov
popl
mov
mov
and
pushf
bswap
adc
jb
cmp
negl
add
mov
inc
mov
arpl
dec
psadbw
push
sub
inc
cmc
incb
push
popa
jmp
pop
inc
cltd
in
sbb
scas
mov
mov
sbb
inc
ror
loope
jnp
jns
xorl
push
push
fucomip
adc
cmp
xchg
insb
lock
daa
cmp
fmul
pop
out
mov
fs
mov
adcb
dec
mov
mov
push
push
xor
insb
jecxz
xor
mov
js
arpl
or
stc
jp
popa
rolb
dec
mov
pop
xor
and
popf
push
out
enter
aas
jge
iret
stos
add
nop
fwait
inc
arpl
add
fmulp
sahf
xchg
mov
cmp
mov
pop
xchg
js
ret
xor
inc
jg
nop
ficoml
add
add
movsl
push
xchg
fiadds
lret
nop
push
add
jno
cmpsl
jo
push
in
cmp
jo
std
inc
movsb
fs
pop
cmpb
movsl
pop
stos
adc
pop
test
add
mov
testb
jg
jge
xchg
mov
inc
inc
and
mov
jne
mov
or
mov
adc
mov
pushw
dec
and
or
and
mov
jbe
test
mov
enter
cld
repz
clc
into
inc
movsb
fs
and
fs
jo
and
in
pop
adc
repz
adc
sub
imul
mov
inc
testl
adc
add
add
and
out
pop
add
fs
popa
mov
cmpsl
jns
push
push
enter
mov
dec
and
push
pop
xlat
inc
shrb
push
xor
test
adc
int3
pop
es
jecxz
sbb
dec
test
sbb
mov
dec
mov
mov
sahf
cld
add
pop
loopne
push
or
add
mov
scas
loopne
jns
jmp
xor
mov
add
xor
pop
stos
mov
cmc
scas
pop
in
or
add
mov
jge
sbb
mov
aas
and
mov
in
cmc
add
mov
jmp
dec
add
repnz
adc
xchg
jp
loopne
shll
jle
or
ffree
jle
lods
inc
testl
push
jecxz
mov
setns
add
adc
mov
mov
adc
mov
loopne
xchg
rclb
pop
test
cmp
std
ret
xor
ljmp
ret
cmpsb
cmp
inc
loopne
jno
cmc
mov
mov
jg
gs
mov
cmp
jbe
cwtl
and
aad
sbb
ljmp
xchg
lcall
insb
fiadds
stos
add
xor
and
std
inc
mov
lcall
mov
fs
add
shll
dec
cld
clc
xchg
pop
jp
and
shlb
mov
pop
inc
xchg
enter
push
xchg
addr16
scas
xor
pop
add
push
adc
sub
cltd
in
sbb
shr
dec
pop
jmp
ss
or
xor
push
imul
inc
cmpsl
pop
lods
dec
sahf
rolb
inc
cmpsb
pop
xchg
dec
arpl
and
lea
aas
push
mov
cmpsb
movhps
inc
fdivp
loopne
add
insl
xor
mov
xor
nop
sub
mov
lcall
addl
inc
mov
dec
pop
mov
adc
xchg
out
fiadds
shrb
sbb
mov
stos
mov
sub
clc
test
mov
popf
lock
out
adcb
or
dec
icebp
testb
jle
dec
xchg
ds
jbe
cmpsl
in
stc
dec
js
cmp
sub
sti
add
enter
adc
cld
mov
push
inc
insb
leave
mov
mov
das
cld
imul
sub
add
lods
or
mov
cmpsb
xchg
out
cmp
add
pusha
in
loope
sti
mov
pop
add
jb
repz
mov
xlat
test
adc
xchg
ficoms
or
scas
cmp
inc
das
jne
add
pusha
mov
xchg
mov
mov
pop
pop
in
add
mov
sub
dec
insb
cmp
dec
jmp
mov
push
ja
xchg
nop
pop
mov
xchg
jecxz
add
and
jl
dec
cmp
pop
rcrb
lock
jnp
xorb
das
and
and
add
adc
das
enter
mov
ret
jo
and
andb
test
mov
dec
loopne
add
int
adc
or
ret
add
inc
mov
pusha
and
mov
or
mov
cli
add
test
ret
lret
add
aas
push
adc
jae
nop
out
fists
adc
mov
pop
inc
rclb
xor
test
adc
shlb
cwtl
mov
shll
shlb
imul
lods
ds
sti
inc
loop
fcoms
mov
cmp
inc
add
std
jg
add
add
hlt
fwait
pusha
xchg
stos
jb
jl
lock
outsl
test
or
mov
std
pop
dec
daa
push
adc
ds
lods
fldenv
movsl
aaa
clc
mov
pop
fdivr
xor
push
pop
in
cmp
sbb
mov
test
sub
cmp
cmp
clc
adc
cmpsl
cmp
clc
add
jmp
int
xchg
inc
push
xchg
inc
adc
lods
clc
shll
mov
repnz
and
push
imul
outsb
or
push
cmp
clc
in
add
add
sbb
push
add
dec
jo
or
test
push
inc
aas
add
ds
rcl
jg
mov
jle
ja
pop
rorb
nop
xchg
cmpsb
popa
in
jmp
iret
cmp
push
mov
and
enter
and
mov
dec
cmpl
imul
in
cmp
xchg
mov
rclb
add
adc
aas
mov
fmull
iret
incb
cmp
jnp
daa
sbb
add
xor
bound
add
cli
and
je
adc
mov
jge
cmp
ljmp
cli
out
or
loop
inc
faddl
mov
add
shlb
loop
add
add
mov
xchg
imul
sub
adc
sbb
jno
fsub
leave
and
je
mov
hlt
into
mov
xchg
mov
sub
and
andl
cmc
test
and
xchg
scas
dec
xor
ds
sub
jno
ljmp
std
cli
xchg
mov
mov
add
push
pushl
sahf
jl
add
mov
loopne
das
data16
or
push
pop
jb
popf
rcrb
jo
or
jmp
mov
xor
pop
fsts
aam
rorl
shlb
loope
add
dec
out
inc
aam
inc
jmp
shrb
int3
popf
sbb
mov
filds
js
leave
mov
sbb
and
push
aas
std
push
xor
dec
mov
jg
std
cmpb
and
inc
add
shrl
cltd
inc
out
ja
dec
sub
scas
add
fsubs
icebp
jg
push
int3
scas
or
ja
in
lock
push
sarb
adc
ror
bound
pop
mov
je
sbb
cmc
and
mov
loope
add
cmp
xchg
mov
in
dec
push
nop
scas
in
cmp
xorb
push
gs
jmp
mov
xchg
cli
mov
add
out
cmp
xor
aad
cmp
add
dec
hlt
in
push
sbb
or
cld
icebp
adc
aam
or
sti
ret
xchg
stos
decb
inc
mov
rolb
pop
pop
inc
push
push
movsl
popa
push
lds
push
rcl
cmp
mov
add
into
adc
xchg
test
out
cmp
mov
fcmovu
enter
jae
add
jno
test
push
add
or
mov
add
roll
je
mov
xlat
sbb
loopne
and
or
lods
cmp
loope
clc
sub
sti
add
aas
mov
or
xchg
push
ret
cmp
and
inc
pop
iret
aad
outsb
or
jmp
add
jl
subb
mov
jmp
shrl
jno
pop
xchg
int3
push
sub
add
pop
cwtl
test
mov
xchg
dec
mov
adc
ljmp
das
into
dec
jae
incb
sbb
jmp
push
hlt
pusha
shl
negl
dec
je
or
stc
movsb
pop
and
popa
addb
sbb
in
jecxz
scas
mov
cli
add
pop
inc
repnz
or
pop
add
push
enter
out
push
lock
loope
add
call
je
rolb
testl
enter
cmp
cmpsb
add
imull
dec
lods
les
rcrl
cmp
mov
outsl
dec
adc
mov
into
adc
add
imul
scas
add
shll
push
dec
aad
push
pop
in
xor
and
add
push
pop
jmp
xchg
shrb
jp
int
fimuls
push
push
incl
pushf
mov
daa
roll
sbb
xchg
inc
mov
jnp
xchg
xchg
outsl
or
pop
ffree
out
cwtl
pop
rcrl
add
xor
mov
stos
add
les
dec
clc
push
jno
and
cmp
or
aam
dec
pop
cld
test
mov
test
lea
add
mov
ret
adc
lea
xchg
add
call
push
dec
pop
out
test
addr16
mov
add
sbb
sbb
daa
out
rcrb
fstpt
xchg
cld
add
xchg
into
bound
dec
sbb
add
sbb
lock
data16
arpl
mov
sub
mov
inc
lea
add
insb
bnd
inc
loop
xchg
aam
xor
andb
add
icebp
popf
pusha
sub
add
push
inc
xchg
adc
sahf
vmptrld
rorl
popa
out
scas
sarb
cmp
adc
lds
in
call
adc
loopne
mov
icebp
add
xor
movsb
popa
punpckhbw
or
js
xlat
call
out
push
jae
scas
loope
fucom
pusha
push
mov
cli
adc
and
test
cmp
sub
fs
sbb
sub
pop
rolb
dec
mov
xchg
push
or
adc
repnz
jae
xlat
sbb
jge
aaa
jb
out
daa
pop
pop
xlat
adc
es
mov
push
push
mov
sbb
adc
or
add
ret
mov
mov
rcrl
or
sbb
pushl
aam
lea
int
or
mov
sbb
add
ret
mov
dec
add
mov
mov
mov
loope
and
pop
clc
fdiv
add
add
adc
or
add
sub
add
pusha
mov
gs
add
insb
push
adc
xchg
sub
push
ret
push
fucom
fidivrs
add
fs
hlt
cmp
add
lret
pusha
adc
xchg
out
mov
sarb
xor
push
add
xor
dec
les
adc
adc
dec
mov
and
push
mov
call
rclb
mov
sbb
add
jbe
add
mov
mov
mov
mov
sbb
jl
icebp
mov
adc
lock
mov
xlat
iret
jecxz
int
das
add
xchg
cmp
jmp
ja
out
pop
rolb
add
push
and
xor
adc
arpl
sbb
cmp
dec
push
pusha
in
psubusb
outsb
jl
fnstenv
aas
mov
cwtl
mov
pusha
jmp
jl
xchg
xchg
or
jne
cmp
je
sub
mov
mov
aad
add
xchg
jbe
jle
shrb
inc
add
testb
xor
les
xor
out
daa
dec
mov
add
mov
and
nop
adc
add
mov
sbb
stos
orl
es
cld
addb
fwait
sahf
cmp
mov
adc
sbb
mov
jnp
cmp
and
inc
push
inc
or
mov
pop
test
and
sub
add
leave
add
sbb
int3
nop
and
enter
and
and
or
inc
add
sub
adc
or
mov
push
aam
xor
and
test
nop
xor
or
mov
test
mov
cwtl
and
inc
test
xor
sub
add
adc
or
cli
sub
lds
mov
pop
les
ljmp
stc
mov
in
inc
std
int
sbb
mov
cmp
mov
add
sahf
mov
sub
xlat
leave
ds
dec
jne
add
inc
inc
out
and
xchg
insl
cvttps2pi
or
arpl
lret
divl
enter
mov
lds
mov
mov
or
mov
jle
jns
add
mov
or
inc
adc
sbb
jg
mov
sbb
xchg
mov
aam
xorb
aad
subb
into
aam
gs
mov
cmp
leave
test
add
insb
jmp
push
xor
mov
icebp
in
add
rcr
or
sbb
out
popa
loopne
sbb
ljmp
mov
inc
xor
flds
or
add
and
out
dec
adc
adc
mov
mov
adc
add
pop
lock
sub
cld
push
dec
mov
std
mov
data16
insl
push
pop
mov
aad
leave
shrb
pop
btr
push
stos
push
adcb
clc
dec
add
push
add
add
aam
xchg
ss
add
pop
pop
jp
xor
testb
nop
and
fiaddl
inc
xchg
in
lods
scas
push
push
mov
add
sub
shrl
jbe
ja
sbb
std
jge
add
and
lea
add
nop
add
das
add
sub
loope
pop
xor
push
lock
loopne
popf
outsb
addr16
push
cld
fs
imul
pop
data16
jae
jo
dec
add
pop
xchg
addl
or
inc
push
int
outsl
cmp
int3
mov
ret
add
dec
mov
xlat
mov
sbb
ljmp
mov
test
dec
aad
xor
sub
call
cmp
out
inc
mov
add
outsl
hlt
int3
push
shlb
sbb
cld
cmp
int
adc
sub
sarb
lock
inc
stos
hlt
add
sbb
and
icebp
loopne
jnp
cwtl
cmp
xchg
lock
loopne
call
mov
scas
shrb
inc
sbb
mov
lods
out
cwtl
cmp
add
jge
int3
addr16
insl
jnp
in
inc
in
dec
add
inc
xchg
lock
add
fldenv
sti
lea
add
and
cmc
dec
sub
add
popa
inc
sarb
xchg
adc
add
fs
lock
sbb
bndldx
push
and
lea
in
and
xor
pop
xchg
xor
inc
and
shl
fidivl
mov
add
dec
bound
add
mov
fidivs
aam
inc
jge
push
mov
mov
inc
xchg
add
dec
sbb
jb
add
sti
movsb
or
cmpsl
push
adc
or
adc
inc
xorl
push
or
add
inc
cs
add
roll
movsb
test
cli
and
lods
cmpsb
test
fistl
add
filds
divb
add
int3
leave
mov
pop
stc
lret
pop
shrl
cmp
pusha
sbb
cmpsb
dec
mov
add
inc
out
jae
mov
bt
inc
rclb
iret
xlat
loopne
dec
inc
add
push
push
xchg
sub
icebp
cmp
ret
ret
mov
add
dec
lea
add
xchg
cmp
mov
pop
nop
add
es
shlb
jbe
mov
fidivl
les
fnstsw
cmp
pop
xor
or
and
adc
jle
or
in
add
jb
pop
sar
inc
and
sub
rolb
test
leave
ljmp
xor
sbb
or
mov
loopne
scas
jg
cs
jl
inc
lcall
adcb
or
js
add
mov
ds
add
testl
xchg
orl
inc
je
insl
jp
pusha
adc
dec
add
ror
or
test
jo
add
xchg
cmp
mov
popf
pop
xchg
adcb
cmpsl
fisttpll
mov
cli
outsl
adc
and
lcall
or
out
sbb
bound
das
cmp
js
xor
in
xchg
pop
notl
ds
ficomps
rorb
sub
or
aas
xchg
stos
push
push
mov
loop
add
xchg
fcoml
xor
aas
pushf
loop
add
fwait
add
shl
adc
or
push
sbb
jne
inc
sub
jb
lret
arpl
sub
and
and
jnp
movb
adc
or
pop
add
shll
add
jb
dec
cli
test
sub
test
das
rorb
dec
xchg
je
jb
ljmp
pushf
inc
dec
jp
add
push
fdivrl
flds
insb
ror
ljmp
subb
mov
xor
push
std
imul
stc
fucomip
mov
jns
addb
or
dec
add
cmpsb
nop
ret
add
inc
icebp
inc
stos
fisttpl
add
adc
sub
pop
into
push
jmp
and
int3
sub
mov
add
lock
pop
imul
xchg
cwtl
fldt
mov
jbe
dec
jg
cmp
subl
pusha
cmpb
dec
cmp
dec
out
add
dec
or
add
dec
inc
shl
add
mov
cmp
cltd
cli
push
mov
int
add
xor
test
and
ljmp
cmp
add
dec
subb
shrb
inc
das
and
add
jecxz
loopne
sbb
push
mov
fcompl
movsb
pusha
outsl
mov
push
shlb
cmp
in
jbe
add
jg
sub
jno
adc
addb
lret
xchg
repz
push
movl
xchg
mov
cs
aad
adc
lock
stc
nop
cmp
jmp
pop
rol
cmpsb
and
nop
push
xor
add
scas
bound
lea
mov
xlat
popf
cmp
push
shll
fdivrs
push
add
xor
mov
add
xorb
add
cmpsb
push
sbb
pop
repz
divb
pop
rolb
lret
ja
mov
dec
adc
or
sbb
mov
rolb
fwait
jbe
jg
in
jle
or
pop
cmp
mov
mov
orl
cmpsb
pop
mov
clc
iret
cmp
sbb
cmp
lods
jne
outsb
add
xchg
inc
sbb
add
mov
outsl
loopne
lods
add
pop
add
cmp
in
sahf
adc
adc
fbstp
jecxz
sti
int3
test
aad
add
inc
pop
sub
add
push
mov
stos
jae
add
daa
rolb
stc
sbb
sbb
xor
orb
cwtl
pop
and
pop
add
push
aaa
testb
cmp
ja
add
ss
add
add
cmp
shrl
add
pop
add
and
pop
push
test
dec
adc
mov
dec
add
aaa
roll
dec
rcr
ret
or
imul
mov
add
out
adc
pop
jge
gs
stos
mov
movsl
add
mov
ficoms
jecxz
add
mov
add
jmp
loopne
xchg
cld
add
sbb
cmp
add
or
inc
or
and
add
dec
pop
shlb
sub
jne
push
inc
sbb
sub
lahf
adc
movsl
sbb
dec
sbb
lret
xchg
inc
add
mov
in
push
add
clc
ret
push
cmp
cmp
pop
and
aaa
and
push
add
and
add
imul
mov
and
test
and
jge
and
out
add
dec
push
je
mov
ret
or
or
stos
and
int
fdivrs
in
insb
xchg
cmp
lret
shlb
lret
aam
mov
add
rol
xchg
mov
add
and
dec
jle
add
xor
clc
fs
pop
add
add
add
adc
clc
mov
bound
adc
lods
test
mov
cmp
or
push
add
add
sbb
mov
add
pop
pop
and
clc
pop
xor
cmp
nop
fnsetpm(287
jmp
flds
and
or
lea
enter
fdivrs
out
movsb
ja
xor
lret
add
inc
pop
jmp
lock
cmp
mov
sub
add
push
leave
push
add
add
call
movsl
outsb
clc
cs
lcall
pop
lret
cwtl
add
insb
add
adc
pop
add
lahf
pusha
inc
movsl
mov
jecxz
das
add
dec
jmp
insb
seta
mov
arpl
or
lods
inc
scas
leave
test
jp
lds
dec
add
xor
push
divps
push
cwtl
sti
add
repz
cwtl
stc
pop
jmp
fsubrs
push
inc
pop
dec
cmc
ja
jg
and
pop
add
movsb
ret
arpl
cs
cli
xchg
jo
or
incl
pop
add
movsl
inc
insl
pushf
pop
and
sbb
lea
jno
imul
leave
add
adc
dec
std
add
stos
push
loop
nop
add
sbbb
mov
push
add
pop
adc
mov
and
add
icebp
ret
or
mov
or
sbb
aas
cmp
dec
fisttps
sbb
scas
out
mov
push
pop
clc
pop
addl
mov
pushf
and
xor
pop
sub
adc
loop
add
mov
jo
add
insl
iret
aaa
cmp
adc
jo
loop
mov
jge
roll
mov
sbb
mov
sub
ljmp
mov
out
lret
xchg
sub
roll
outsl
loope
call
cmp
scas
cmp
jne
sbb
add
lret
mov
mov
js
bound
mov
pop
lds
out
add
push
arpl
outsb
mov
and
sbb
push
add
popf
lods
ljmp
cmpsb
loopne
push
push
sbb
pop
aam
mov
ss
xchg
pusha
xchg
js
add
pop
mov
add
insb
fcom
sbb
jle
add
dec
js
xchg
std
mov
lea
mov
mov
mov
sbb
mov
sahf
cmp
add
shlb
jg
rolb
sbb
add
ljmp
adc
sub
jg
add
mov
out
push
add
stos
mov
sbb
cltd
pop
jb
or
stc
in
roll
popl
test
push
push
js
adc
lods
mov
or
out
and
fcmovb
mov
xchg
xchg
or
push
pop
cmpsb
jbe
sbb
lock
movsb
sbb
or
bound
dec
push
aad
or
cmp
mov
add
iret
and
xchg
and
outsl
ret
fmull
jecxz
jbe
add
xlat
leave
push
dec
cmpsl
and
add
fdivrl
sbb
adc
decb
mov
pop
ljmp
or
cmp
mov
or
inc
sbbb
mov
data16
add
mov
in
cld
roll
jl
or
xchg
enter
and
ss
sub
xchg
mov
fiaddl
movsl
loope
mov
add
shll
into
mov
pop
pop
adc
push
pusha
lods
xchg
in
adc
je
cmpsb
push
movb
popa
scas
pop
enter
faddl
rcrb
add
jle
lock
push
lock
add
pop
enter
dec
inc
add
or
and
inc
ja
loop
cwtd
cmp
lds
lea
in
jle
push
xor
ror
lcall
testl
and
dec
add
mov
popf
idivb
pop
nop
or
incb
pop
inc
sub
ja
scas
sub
ds
nop
mov
dec
clc
shrb
add
rorl
add
loope
shrl
out
sbb
add
loopne
sbb
xchg
jl
add
sub
push
sub
cmp
xchg
lea
push
pop
and
orl
mov
pop
shr
mov
cmp
jecxz
sbb
addr16
test
add
sbb
and
fisubl
add
mov
je
xchg
faddl
xchg
das
inc
aad
adc
stos
mov
lcall
lods
dec
loopne
es
add
or
roll
fwait
repnz
pop
adc
push
out
lret
ret
in
cli
lcall
int
mov
dec
popa
js
negl
cwtl
call
or
cli
lods
add
inc
xlat
jp
add
sti
jecxz
in
stos
push
xchg
pop
out
cld
in
push
and
sahf
sbb
rolb
pop
ja
push
pop
fadd
sub
inc
in
or
jg
xor
xor
pcmpgtb
popf
pushaw
pop
xlat
add
loop
testb
push
add
push
cld
jmp
pusha
aad
in
sbb
pop
out
lret
jne
mov
cmp
das
dec
imul
xchg
adc
hlt
pop
add
outsl
cmp
aaa
adc
cmp
repz
and
mov
incb
add
lcall
add
inc
iret
jae
jg
cmp
add
dec
clc
xchg
add
js
or
dec
jns
add
mov
mov
dec
fbld
sahf
call
mov
cmp
insb
bound
cld
or
pushf
mov
and
stc
pop
push
inc
movsb
test
cwtl
cmp
add
daa
dec
leave
sbb
rcr
in
out
mov
fsubr
dec
xor
cld
pop
aaa
rcr
add
mov
neg
pcmpgtw
xorb
dec
insb
or
out
shll
addl
push
gs
fcmovnb
add
shlb
aad
bswap
cmp
daa
pop
inc
rcrb
add
insb
psrad
pop
push
jmp
pop
add
add
scas
sub
jl
fistpll
or
ss
add
lret
fidivs
dec
pop
je
inc
mov
add
jle
mov
into
add
cmpsl
pop
and
cmpsb
mov
mov
inc
icebp
push
mov
xchg
mov
inc
push
mov
lock
and
push
pop
loope
hlt
push
test
sbb
mov
cmpb
cmp
mov
add
sub
rcrl
jnp
push
sarb
testl
jae
sub
mov
jl
mov
hlt
mov
pop
cld
out
xchg
pop
loopne
add
iret
jg
setns
pop
mov
xchg
or
sti
in
enter
mov
lcall
in
add
mov
mov
adc
adc
or
testb
adcb
add
jg
lret
xor
fisubrl
sbbb
imul
xor
ljmp
cmp
mov
in
and
enter
call
subl
lods
push
mov
or
lahf
adc
outsb
mov
clc
mov
into
inc
xor
mov
and
mov
js
sub
nop
lret
push
jecxz
pusha
push
sbb
or
js
stos
packsswb
mov
dec
cmp
mov
dec
cmp
mov
xor
flds
sbb
mov
xor
dec
and
rorl
sub
call
sbb
or
nop
pop
aaa
adcl
add
sahf
xor
rclb
inc
sub
and
or
and
add
sti
add
or
add
sbb
pushf
into
rorl
jle
cmp
add
ljmp
xor
or
ror
jbe
inc
add
xchg
jmp
mov
add
sbb
je
jae
cmp
out
iret
add
add
lret
or
cli
movl
dec
push
cmp
adc
mov
imull
pusha
jns
rorb
cmp
pop
adc
xlat
sbb
push
cld
push
test
inc
daa
cli
mov
mov
push
jmp
pushf
xchg
test
dec
xor
out
inc
arpl
inc
je
aaa
rorb
roll
sbb
lods
xor
dec
je
mov
adc
mov
mov
add
cmp
cmp
sub
mov
jnp
sbb
add
movsl
call
out
shll
add
xor
jp
add
or
xchg
cmp
sbb
cltd
imul
loop
add
fistl
sub
das
mov
fadds
xor
sbb
cli
dec
adc
jno
jbe
rolb
aas
xor
shrb
aad
cmpsb
cs
jbe
add
sbb
out
and
lods
rcl
jl
mov
cmp
scas
shll
in
cmpsb
out
inc
mov
jbe
dec
add
cmp
out
cmp
push
jnp
dec
outsb
add
mov
add
test
jae
popf
xchg
je
divl
inc
insb
push
dec
es
add
jae
test
out
test
and
cmc
add
lret
fwait
std
lea
or
mov
xchg
popa
add
nop
inc
in
add
mov
and
add
lock
mov
inc
jl
shl
inc
aam
mov
loope
jno
das
add
mov
push
dec
and
add
ret
mov
adc
add
cwtl
je
add
sar
sbb
sub
hlt
sub
movsl
adc
push
or
xchg
cli
or
pop
gs
sbb
mov
jns
adc
push
shr
jp
add
push
mov
stos
pop
cmpps
imul
push
leave
add
sti
lret
fsubp
out
add
lock
ja
incb
into
out
repnz
dec
aad
les
incl
and
add
jae
mov
pop
sub
xchg
pop
sub
outsb
push
and
mov
in
mov
fmull
je
mov
jge
pop
pop
test
mov
sub
lock
arpl
pop
lods
cmp
outsb
rcll
and
sub
adc
fnstenv
pop
scas
push
dec
cmpsb
lea
adc
cmpb
in
test
sbb
fisttpll
add
lock
or
mov
fwait
dec
imul
arpl
fildl
add
add
hlt
xchg
xor
pop
fdivrs
outsl
out
pusha
add
adc
insb
xchg
inc
sub
jmp
pusha
dec
pop
in
push
add
jge
gs
cs
jle
pop
xor
sbb
mov
cmp
add
push
jge
and
mov
add
cwtl
mov
add
lods
test
imul
push
push
pusha
pop
clc
adc
lds
mov
rcrl
pop
xchg
jmp
sbb
or
lock
sbb
push
push
add
add
in
add
cmp
test
add
xor
push
or
daa
leave
mov
adc
andb
aam
mov
lods
xchg
pop
inc
add
mov
stos
into
xor
xchg
loopne
imul
test
ja
add
sbb
xchg
mov
add
jb
jae
sbbb
mov
pop
popf
in
cmp
fdiv
orl
push
add
mov
and
lods
add
push
nop
or
out
lock
adc
clc
add
xchg
mov
push
outsl
add
dec
inc
rolb
mov
adc
or
dec
fisubs
addr16
xor
iret
mov
clc
add
movsb
ret
and
add
stos
pop
into
mov
stos
pop
and
add
xor
js
xor
pusha
mov
pop
mov
or
roll
cltd
jmp
enter
push
inc
mov
mov
xchg
add
xor
mov
pop
rcrl
test
ljmp
xor
and
and
lahf
or
adc
pushf
movsl
add
adc
mov
push
push
sbb
faddl
sub
jle
pusha
inc
adc
popa
stos
xor
jmp
pop
push
call
popf
add
dec
dec
addb
adc
fistpll
mov
pop
push
test
cmp
add
test
lock
push
push
sbbl
stos
mov
xor
xchg
sti
fsubrp
lahf
mov
xor
add
and
aad
cltd
clc
lods
sub
add
ret
in
pop
int
pop
out
stos
push
lock
xor
xchg
jb
mov
cmp
add
jne
push
mov
dec
arpl
scas
jmp
mov
mov
push
cld
out
mov
xor
int3
sbb
mov
mov
pop
jae
jl
add
ss
add
sahf
clc
and
rorl
js
pusha
jmp
leave
test
add
adc
test
in
xchg
pop
ljmp
lock
add
mov
lock
sub
add
xor
sub
stos
orl
sarb
adc
addb
dec
push
add
notl
xchg
mov
or
xor
mov
ret
loope
xchg
jg
test
lret
ja
sub
mov
cmc
cwtl
add
sbb
add
mov
sub
and
call
fwait
bound
cmp
mov
sti
out
fbstp
push
xchg
mov
xchg
call
and
lds
cmpsb
add
mov
sbb
mov
lret
mov
pop
lret
mov
pop
mov
clc
outsb
xchg
push
dec
stc
add
cmpsl
push
lock
stc
fidivl
sbb
imul
adc
sbb
add
cmc
popa
mov
push
loop
push
add
out
lahf
push
dec
and
and
aam
shlb
pop
in
pusha
js
add
sub
mov
push
fimuls
cmp
inc
aas
cmp
loope
fstps
sahf
filds
lea
orl
mov
test
xor
mov
imul
jb
fnstsw
push
pop
cmp
shlb
pop
sub
mov
cwtl
enter
mov
testl
pop
jno
in
loop
cltd
pusha
sub
pop
cld
into
lods
outsl
add
mov
push
dec
sub
cmp
loopne
add
test
fcompl
popf
jo
mov
mov
rolb
fwait
or
mov
sub
mov
in
sub
add
out
pushf
leave
or
jo
push
daa
inc
loopew
dec
xor
cld
rolb
pop
mov
nop
sub
and
add
imul
inc
or
pusha
mov
test
add
das
xchg
push
pop
mov
add
push
dec
insl
rorb
xchg
jg
sbb
call
cmp
aaa
xlat
dec
std
xor
cld
add
sarl
rcrl
rclb
push
add
outsl
dec
pminub
pushf
hlt
jns
inc
xor
leave
rcrl
shlb
inc
push
mov
sbb
jnp
push
dec
sub
popa
push
std
add
add
clc
bound
int
rolb
shl
inc
sub
and
adc
adc
andb
pop
cmp
leave
add
or
test
jmp
sub
and
pop
xor
push
testb
pop
mov
stos
add
into
lcall
pusha
outsb
dec
jno
ljmp
fdivs
inc
cmpsb
daa
out
and
xor
sbb
xlat
sbb
ljmp
mov
stos
xchg
adc
int3
cmc
add
dec
add
lea
das
push
loopne
cwtl
dec
outsb
mov
cmp
mov
scas
in
fnsave
pxor
faddl
push
arpl
pop
push
cmpsl
in
incl
scas
ds
mov
and
in
mov
loopne
lods
push
cmp
imul
iret
push
add
dec
sub
das
cmp
shrl
and
adc
sbb
adc
add
cmp
call
add
add
pop
mov
sarl
aas
insb
and
push
shrb
hlt
cli
pop
shlb
addb
mov
xor
push
adc
or
ds
lods
xadd
loopne
daa
in
movb
mov
pop
pop
js
pop
rclb
jg
dec
vmread
fcoml
fildl
mov
sbb
jle
or
dec
scas
sbb
mov
loop
pop
filds
dec
fsubrl
push
sub
cmp
addr16
pusha
je
mov
pushf
daa
xchg
mov
fistpll
dec
xor
lret
xor
nop
add
xor
hlt
pop
fistps
and
mov
lcall
aas
add
mov
sbb
push
inc
pop
ret
dec
andb
fadds
es
andl
cmp
pop
in
jge
or
mov
dec
pop
mov
add
jg
xor
dec
pop
cmp
scas
push
cmp
ficomps
jmp
add
jno
inc
fdivr
xor
and
mov
pop
pop
add
insb
rclb
pop
fstps
rcll
lret
inc
lret
dec
jns
add
in
dec
add
dec
adc
xor
xchg
pusha
cmp
adc
mov
leave
adc
xlat
in
cltd
dec
add
xchg
push
jne
fbld
add
sub
lock
ret
add
jnp
stc
leave
mov
shl
popa
mov
rcll
jle
dec
pusha
les
add
lret
inc
or
loop
xchg
jge
pop
repz
pop
add
aas
std
sbb
add
pusha
lahf
add
lcall
test
or
mov
add
or
cwtl
add
xchg
int3
shl
lea
roll
stos
lock
mov
push
loope
fsubs
sub
pop
mov
add
je
pslld
popa
test
enter
mov
mov
cmpsb
push
mov
stos
sub
rolb
pop
mov
xor
cltd
imul
cmp
add
dec
sub
rorl
xchg
jmp
mov
or
jge
push
mov
sub
adc
out
dec
into
pop
push
in
jle
fcoml
es
aaa
and
sbb
pop
mov
jnp
sahf
xorb
cmpsb
mov
mov
scas
lods
adcl
push
and
jge
push
xor
sbb
inc
adc
xor
repz
lock
adc
mov
adc
shlb
popf
in
add
xorb
mov
add
loop
rclb
or
sbb
sahf
jle
push
mov
inc
scas
lar
test
add
and
scas
loop
add
add
add
pop
repnz
cmp
jno
adc
call
push
mov
add
and
fdivl
pop
sbb
cld
xor
push
icebp
mov
test
scas
insb
pusha
adc
cmpb
mov
add
xor
adc
pusha
mov
jl
add
fcomps
push
add
movsb
btc
sub
mov
sarl
cli
std
pop
stos
arpl
pop
js
push
push
xor
adc
cmpsb
sbb
scas
and
movsl
mov
sti
jo
out
jge
dec
frstor
mov
mov
and
and
cld
and
lea
ret
mov
inc
cld
lcall
shl
push
sti
add
mov
xchg
inc
add
xchg
inc
pop
js
jmp
nop
mov
addr16
out
rcrb
add
or
or
ror
lock
subb
fcmovnb
inc
addb
fiadds
insl
add
aad
xor
pop
inc
xchg
lock
xor
shl
aad
mov
mov
or
test
sub
pusha
push
push
add
mov
sbb
call
sub
add
add
jmp
cmp
psubsw
pop
mov
or
xchg
loop
es
add
stos
push
mov
les
and
push
out
divl
pusha
call
pusha
mov
in
daa
or
mov
dec
push
xor
into
jle
push
add
pop
pusha
mov
and
and
add
int3
scas
cmpsl
jecxz
lods
add
mov
ficompl
mov
ret
js
in
cmp
mov
sub
repz
pop
xor
inc
ljmp
cmp
leave
pop
mov
jl
add
fidivrs
jbe
rolb
lahf
lds
loope
dec
adc
insb
adc
add
add
repnz
jge
nop
bound
aad
adc
xchg
add
add
cwtl
insb
jle
add
fwait
roll
lcall
push
push
outsl
add
pop
push
test
sbb
das
push
push
hlt
pop
add
mov
loope
mov
pop
cmp
je
movsl
stos
test
add
add
xlat
sbb
mov
movsb
nop
pop
xchg
push
sbb
hlt
test
incl
pusha
rcr
mov
es
xchg
add
stos
lock
mov
outsb
js
xlat
add
mov
and
pop
cltd
shll
xchg
or
mov
loope
jae
lock
dec
xchg
sub
inc
mov
mov
push
bound
mov
inc
sbb
aas
inc
popf
andb
ljmp
add
jg
pop
pop
in
in
mov
fisttpl
sbb
push
sub
subb
popa
inc
inc
add
clc
xchg
dec
add
jmp
cmpsb
or
add
lcall
add
fldl
mov
dec
jle
dec
mov
sarl
fcomi
add
in
add
xchg
hlt
cmp
fcomp
call
inc
mov
adc
or
lcall
clc
movl
ds
mov
sub
cmp
mov
sbb
ret
xchg
push
push
push
add
fucomi
adc
lea
cmp
lahf
in
xchg
push
or
add
sbb
ret
hlt
fildll
aam
in
addl
shr
fsubl
cwtl
das
es
fwait
mov
ret
xchg
cli
hlt
popf
pop
sub
int
test
sub
pusha
and
xor
mov
or
bnd
in
inc
jnp
or
out
mov
adc
adc
add
mov
mov
test
imul
movsl
push
cmp
jmp
inc
mov
push
xchg
mov
jg,pt
xchg
xchg
push
push
rcll
sbb
mov
mov
push
ljmp
fiaddl
sub
lods
push
cmpsb
push
stos
jb
mov
add
enter
movsb
es
stos
imul
ds
ror
xlat
mov
mov
or
add
pop
cwtl
imul
pusha
sbb
cmp
pusha
fisubs
push
push
xchg
notl
arpl
movsb
cltd
lock
loope
add
cmp
push
xor
inc
int
cmp
or
call
adc
ja
adc
shll
cli
push
stc
and
inc
sbb
mov
loopne
add
push
sub
testb
fnstenv
test
ficompl
adc
xchg
add
test
dec
jg
pop
gs
cld
pusha
xor
lahf
js
add
inc
loopne
dec
xor
std
xor
leave
loopne
fsubs
rolb
add
jne
cmp
cli
nop
add
movsl
jns
les
mov
cwtl
insl
dec
cmp
icebp
cmp
xor
adc
sarl
outsb
jmp
mov
cmc
pop
add
xor
cmp
cmp
or
call
mov
pop
aas
jns
pop
lds
mov
mov
jb
adc
hlt
adc
pop
xchg
mov
mov
jb
pop
mov
mov
adc
mov
add
push
inc
push
in
popl
push
add
cmpsb
lods
xchg
mov
mov
mov
and
mov
outsl
mov
lds
mov
cmp
add
nop
lds
mov
aas
fldl
mov
cmpsb
pop
pop
push
test
insb
add
ficomps
add
int3
mov
push
pop
in
cmpsl
in
cmc
orb
aaa
inc
add
push
data16
lock
mov
cmp
sub
xor
adc
add
scas
mov
lds
test
push
loop
and
jmp
lret
sbb
jmp
hlt
std
add
sbb
add
into
mov
inc
mov
jne
xchg
rorb
popa
jle
cmp
pop
loope
adc
mov
cmp
in
xchg
int3
mov
jmp
add
aaa
enter
sbb
dec
sub
cmp
mov
xor
mov
dec
js
or
mov
cmp
adc
hlt
imul
inc
imul
sbb
cmp
icebp
lahf
xchg
shll
cmp
es
andb
xlat
and
inc
or
imul
cmp
add
mov
aad
or
cmp
xchg
cmp
mov
mov
rcrb
cltd
xor
add
adcb
cmc
mov
adc
add
mov
mov
add
lds
or
push
rolb
and
add
lea
movsb
dec
into
add
fsubrl
mov
pop
mov
cmp
adc
add
jle
and
mov
aaa
lea
in
push
inc
aas
cmp
pop
sbb
and
xchg
jo
add
ljmp
dec
pop
sbb
add
and
ljmp
cmp
jns
mov
add
jne
in
pop
sbb
mov
push
iret
add
and
mov
rcrl
add
mov
orb
sub
inc
inc
mov
push
scas
lcall
xchg
mov
xor
mov
mov
adc
add
jne,pn
es
popf
adc
mov
add
loope
xchg
dec
dec
lock
jb
add
adc
adc
or
and
jmp
clc
idiv
mov
fmuls
lcall
mov
add
mov
mov
test
pop
mov
mov
add
and
push
mov
sbb
dec
and
jp
pusha
xor
sbb
in
inc
and
test
inc
outsb
add
ljmp
dec
xchg
adc
addb
and
fistl
stos
add
out
jle
shrb
orb
orb
loop
add
ljmp
cmp
cmp
shl
popf
adc
inc
cmpb
rolb
fidivs
outsl
mov
sub
movsb
pop
sbb
dec
xlat
or
pop
imul
mov
dec
pop
into
insb
add
ret
pop
fidivl
add
out
and
mov
mov
and
jno
pop
inc
in
mov
pop
data16
pop
sbb
cmpb
or
adc
mov
cmp
push
rcrb
xchg
add
jbe
rcll
cld
mov
in
or
mov
int
pop
xchg
subb
rcr
mov
add
fistl
mov
js
test
lods
subb
outsb
cmp
adc
inc
or
int3
and
sbb
out
ror
roll
loopne
into
push
jb
add
add
loop
xchg
insb
out
add
push
xlat
clc
cltd
xor
imul
std
adc
jb
enter
mov
push
jae
xor
outsb
das
mov
in
pop
cmp
push
push
rolb
sbb
or
das
add
sub
jo
hlt
js
push
pop
call
sbb
jo
sbb
adc
cmp
test
add
dec
mov
xorl
popa
popf
insb
add
data16
mov
aam
xor
mov
push
lods
mov
popa
adc
pusha
cltd
addr16
lock
push
ss
adc
mov
mov
sbb
or
add
nop
xor
add
ja
mov
enter
mov
xchg
jl
add
mov
sbb
jnp
sbb
enter
int3
cld
inc
xor
sahf
fsubs
pusha
leave
xor
pushf
push
push
insl
mov
push
add
pop
mov
add
sbb
hlt
ja
add
mov
in
jne
movsl
cmp
mov
stos
add
sbb
push
daa
addr16
loop
shll
clc
or
sbb
push
daa
xor
lret
cmc
into
xor
imul
ficoml
cmp
and
jae
ljmp
add
cmp
test
pushf
dec
cmpsb
xor
dec
in
sbb
icebp
mov
ljmp
xor
mov
sar
mov
pushf
and
xchg
cmp
cmp
xor
xchg
fadds
or
or
mov
inc
fimull
lock
xchg
sahf
mov
mov
ds
mov
scas
mov
push
push
push
or
add
push
inc
mov
lods
cwtl
dec
lcall
dec
pop
inc
int
out
add
pop
fidivs
add
mov
xor
push
or
xchg
dec
mov
clc
mov
imul
pop
mov
add
cli
lods
or
ret
scas
xor
add
leave
clc
loop
lret
or
sbb
push
adc
in
and
repz
mov
ja
fdivs
cmp
test
dec
adc
arpl
fldcw
xor
cmpb
loopne
xchg
jge
add
pop
sub
add
mov
add
popf
xor
stos
fcom
jle
add
std
movsl
and
mov
mov
add
or
repnz
mov
loopne
xchg
pop
inc
idivb
inc
cpuid
mov
adcb
or
cwtl
stc
in
and
fsubl
inc
push
clc
sarl
out
xor
popa
add
lret
in
arpl
jbe
pop
imul
add
xor
mov
ljmp
ret
mov
pop
xor
clc
cld
pusha
ret
xor
out
add
xchg
mov
test
jns
adc
adc
cmp
mov
in
and
int
or
cmovge
movsl
push
mov
xor
sbb
clc
pop
adc
data16
sub
lods
add
and
je
loopne
add
outsb
dec
sarb
jp
popa
sub
or
sbb
test
mov
ds
add
or
lcall
push
pop
cltd
sub
loope
fisttpl
and
filds
imul
sbb
adc
add
jne
xlat
shlb
or
push
fildl
jno
push
dec
and
daa
push
lods
loop
inc
add
xor
cld
in
cmp
push
inc
push
push
notb
add
das
pop
jae
add
xor
mov
dec
push
inc
test
add
jno
in
jecxz
cmp
adc
pop
ds
cmp
sbb
mov
push
or
sahf
data16
push
cs
loope
inc
leave
jp
jne
mov
inc
cmpsl
test
pop
or
xlat
mov
jle
lea
mov
add
imul
push
pop
adc
mov
in
mov
jae
adc
jbe
sub
sub
mov
loope
lock
clc
jmp
add
add
scas
cmp
daa
jo
add
stc
add
xchg
xor
adc
faddl
aas
arpl
and
add
lea
lods
sbbb
adc
sub
fcoms
loop
add
fcmovnu
out
stos
lods
mov
cmp
jle
add
into
rcrl
jl
loope
leave
jbe
inc
cmp
dec
fstl
enter
sarl
cwtl
aam
add
push
push
push
xchg
jp
call
xor
sbb
cmpsb
or
inc
jo
in
and
test
pop
add
pop
aaa
mov
and
cmpsl
icebp
into
and
lds
loopne
js
mov
les
outsl
jnp
and
xchg
mov
or
sbb
bnd
leave
jno
loop
jmp
stos
push
sarl
lret
pop
jecxz
js
int
cmc
pusha
xlat
jmp
dec
int3
enter
ret
push
jge
jecxz
pop
pop
dec
sbb
int
or
hlt
jno
lahf
sti
aam
add
mov
adc
jp
lret
fidivrl
adc
push
cmpsb
cmp
inc
pop
test
in
adc
push
into
rcrb
sbb
mov
fwait
out
jne
or
mov
add
test
cli
nop
inc
data16
mov
push
mov
push
scas
cmp
test
jge
add
inc
pop
aam
mov
lock
mov
fldt
add
imul
pusha
popf
add
and
popa
imul
lcall
sub
pusha
push
hlt
xor
xchg
pusha
pop
or
into
mov
cmp
mov
div
jecxz
in
add
dec
mov
cwtl
popf
daa
sbb
in
cld
adc
add
jecxz
loope
adc
test
in
or
aas
fdivrl
pop
ljmp
movsb
fldcw
scas
fucom
push
adcl
add
adc
or
and
lcall
test
dec
sub
push
mov
lea
loopne
fs
outsb
or
in
loopne
jg
out
mov
inc
pop
jb
add
je
mov
in
add
xchg
xchg
dec
ss
fidivrl
sbb
nop
dec
adc
jle
aam
dec
add
icebp
sub
xor
mov
rcll
inc
xor
mov
add
pop
adc
popf
int3
rcr
xor
dec
cwtl
test
jne
add
mov
add
cld
add
mov
cmpsb
in
ljmp
pop
pusha
lret
int
ss
test
mov
mov
xchg
adc
add
xor
mov
orb
xchg
dec
pop
sbb
callw
cli
ja
rolb
js
add
inc
dec
xor
shlb
std
mov
or
and
cli
mov
sti
sub
loop
push
cmp
mov
leave
xchg
pop
add
mov
shl
dec
or
and
mov
add
push
lods
jae
inc
cmp
add
inc
jo
or
mov
in
and
push
cmc
dec
popf
xlat
hlt
xor
fistps
loop
rcrb
aaa
jns
cld
or
xor
je
fwait
add
xchg
cs
imul
and
or
rolb
dec
jne
sbb
sbb
add
pushf
push
nop
add
int
aad
mov
mov
divb
push
outsb
push
adc
xchg
dec
pop
jmp
adc
xor
jae
stos
fmul
inc
mov
adc
fcmovbe
sub
ljmp
scas
clc
add
cmp
mov
ljmp
test
lret
aaa
lods
jp
mov
test
loop
push
or
sub
jle
add
xchg
push
popa
adc
cmp
sub
daa
call
insl
sti
add
sbb
hlt
and
and
aaa
hlt
push
xchg
and
xchg
add
test
pop
lret
cltd
test
loopne
add
xchg
addr16
inc
decb
dec
mov
add
bound
xchg
add
add
shlb
sbb
sbb
xor
lret
sub
subb
cmp
lds
in
inc
scas
loopne
xchg
clc
or
fadds
sbb
dec
xchg
push
ret
jg
and
push
add
lods
shrb
inc
or
mov
fisubrl
sbb
pusha
pop
out
es
push
pop
xchg
neg
add
mov
shl
cs
xchg
dec
sbb
rolb
adc
repnz
ret
movsb
pop
mov
or
hlt
loopne
idivl
jb
setp
adc
jo
push
adcb
jbe
and
div
push
adc
ja
sbb
jmp
xlat
lahf
add
pop
inc
lds
push
push
ja
add
addr16
shl
mov
add
movsl
psubsb
mov
pop
addr16
cmp
jecxz
push
add
pusha
cmpsl
xor
rolb
cmpsb
dec
adc
add
push
add
mov
iret
dec
add
bound
mov
push
pop
mov
pop
test
xchg
add
popl
cmp
sbb
shr
add
mov
sbb
jle
sbb
xchg
out
mov
xor
daa
ret
dec
js
out
add
leave
movsb
pop
xchg
pop
idiv
in
xchg
dec
add
mov
enter
jnp
push
and
stos
rolb
loope
in
int3
add
sub
mov
hlt
jne
add
mov
and
fiadds
js
or
push
sub
ds
or
dec
jbe
sbb
or
dec
push
out
and
jb
scas
insb
loopne
repz
jo
nop
pop
sbbb
cli
cld
adc
xchg
sarb
and
jbe
aam
cmpsl
fcomp
shrb
test
add
mov
jmp
jle
pop
mov
xchg
inc
xchg
mov
dec
add
nop
jl
add
jae
lahf
data16
loopne
ret
shr
aam
xor
aam
push
and
dec
pop
mov
or
and
int3
jp
int
mov
dec
add
jmp
cli
pop
stc
loope
dec
add
inc
sub
les
shl
add
mov
add
or
lcall
repnz
lcall
push
xchg
pushf
lds
push
adc
cmp
and
in
cmp
cmp
mov
cmpb
movsb
mov
jle
adc
into
lock
lods
mov
mov
lahf
add
inc
sahf
div
mov
cli
fnstcw
mov
dec
int
orl
xchg
jo
enter
push
push
adc
fadds
xor
or
dec
lods
clc
pavgb
add
outsb
loopne
in
inc
mov
ret
lods
leave
mov
push
lock
setl
int
add
orb
ja
jns
pop
adc
jo
mov
ds
mov
xlat
add
jnp
mov
test
mov
inc
jp
loopne
cmc
es
push
je
pop
int
fists
xor
dec
mov
or
jl
add
add
lods
cwtl
aaa
shr
sub
sub
mov
cmovge
adcl
mov
call
mov
ss
ljmp
xor
mov
push
xor
add
ljmp
or
push
mov
adc
mov
ljmp
xchg
mov
pop
movsb
in
mov
xor
mov
nop
dec
pop
jno
in
jecxz
mov
test
popa
add
fistps
xchg
lcall
loopne
dec
jno
aaa
pop
cmp
cmp
roll
inc
ss
sbb
xchg
ja
push
add
enter
cmc
pusha
test
add
inc
repz
stc
pop
sahf
dec
push
popf
push
and
jecxz
aaa
add
xchg
ret
mov
ficompl
mov
add
out
or
jb
pop
and
add
mov
add
mov
mov
fidivrl
imul
cltd
jge
xorb
dec
mov
sbb
ja
decb
andb
add
je
jg
cmc
stc
mov
fstl
jp
testb
add
sbb
insb
shrl
add
cs
aaa
mov
xchg
or
mov
scas
movsl
lcall
adc
int3
ret
inc
adcl
test
cmp
cmp
xor
aam
dec
sub
or
bound
or
jo
lods
adc
test
loop
dec
rcrb
add
into
andb
movsb
aaa
movsl
dec
sarl
add
dec
mov
add
adc
cmpl
and
lea
pop
sub
sbb
out
push
mov
dec
lret
cmp
add
loope
dec
add
adc
push
xor
xchg
jns
adc
or
jg
mov
jl
lcall
fcomp
shrl
inc
push
loope
lea
add
jae
movb
ss
fwait
xchg
push
and
or
cmp
mov
add
fisttpll
adc
movsb
fdivs
es
je
sub
int3
adc
and
mov
xor
pop
mov
loope
lds
lea
mov
xor
scas
adc
out
add
cmpsb
lds
sub
call
cmp
mov
cmp
pop
int3
aam
in
lock
inc
repnz
out
in
mov
inc
pop
cmp
add
jns
and
push
pop
ljmp
aaa
push
das
xchg
lret
negl
je
xchg
mov
mov
clc
loope
push
pop
xor
imul
cltd
aaa
xor
testb
push
rol
pop
or
push
filds
scas
repz
movsl
mov
bound
sbb
scas
cwtl
push
cmpl
out
leave
and
ret
sub
xor
cmp
or
sbb
add
push
push
dec
outsl
add
aaa
lock
jb
add
pop
pop
add
fadds
mov
or
adc
xchg
jecxz
insl
fistl
push
or
arpl
lds
aas
insl
sub
mov
or
cmc
add
cmp
movsl
hlt
push
fs
adc
add
push
adc
add
and
mov
repz
cs
addr16
inc
jno
mov
ja
aad
add
sub
jmp
popf
addb
jg
repnz
daa
mov
xchg
jecxz
add
cmp
pop
jle
jl
movsl
lods
mov
ss
add
subl
iret
mov
int3
xchg
adc
lcall
inc
add
pop
into
aas
push
ja
inc
dec
es
push
call
push
and
xchg
xor
scas
adc
sbb
pushf
aaa
shll
inc
add
sub
inc
mov
aas
add
xchg
dec
enter
pop
mov
shl
ret
jp
add
cli
aas
mov
pop
lock
dec
lret
mov
ss
mov
cltd
sbb
or
mov
pop
in
into
cwtl
adc
add
jnp
lcall
popl
ret
cmp
mov
jl
in
aam
xchg
inc
jbe
stc
pop
pop
sub
pop
or
mov
lahf
jns
inc
or
fucomp
into
mov
mov
or
mov
wbinvd
test
mov
pop
xlat
test
or
and
aam
jo
sub
adc
push
outsl
add
out
xchg
cmpsl
add
scas
sar
xchg
cmp
mov
int3
mov
push
fs
mov
nop
add
test
sbb
add
jmp
addb
or
push
ucomiss
loopne
sbb
test
pop
testl
test
pop
movl
in
jae
ja
int3
mov
movsb
add
jmp
ljmp
push
int
sbb
dec
adc
jl,pn
movsb
push
inc
xchg
pop
in
dec
inc
popa
ljmp
lods
insb
add
lea
mov
cs
pop
or
stos
or
add
test
add
lret
das
mov
and
sub
fs
dec
or
jno
test
push
or
in
hlt
sub
test
repz
cmpsb
sub
add
jl
cwtl
clc
add
mov
sbb
cmpsb
aam
call
aaa
xchg
cld
sub
push
rol
movb
mov
sti
dec
cmp
pusha
sub
add
add
out
adc
andb
loopne
pop
add
add
inc
call
mov
fisubl
ds
mov
ja
add
mov
add
in
add
imul
jbe
jg
xchg
in
sub
pop
pop
and
repnz
in
mov
in
inc
repnz
idivb
push
mov
jno
mov
cltd
test
xchg
add
sar
ret
xor
icebp
jo
and
mov
mov
ss
and
pop
cltd
add
inc
shrb
stc
adc
add
subb
jg
pop
cs
stos
divl
outsb
push
mov
sarl
add
or
mov
movsl
push
xor
pop
inc
ja
das
cmp
lds
fadds
sbb
jmp
enter
mov
iret
fadds
enter
sahf
das
lock
mov
fmull
mov
sub
add
icebp
mov
lret
jmp
mov
sub
js
jns
mov
jl
add
lods
push
push
sub
outsl
shrb
and
repz
xor
add
inc
jg
jns
mov
jo
mov
cmp
add
jecxz
xchg
adc
nop
cmpsb
add
addl
mov
push
dec
cmp
aas
jle
sbb
or
cmp
sub
push
cmp
jnp
mov
sbbl
xchg
jmp
mov
enter
jle
pushf
aad
xorb
add
jb
shrb
lods
adc
fidivrs
inc
xlat
lock
add
adc
test
loopne
cltd
les
insl
sbb
xor
sub
ja
mov
lahf
cmp
sub
adc
or
ljmp
inc
cltd
mov
pop
gs
pop
dec
jp
inc
pop
fdivs
test
rcrb
stos
clc
or
mov
inc
xor
repnz
jno
add
cmp
sbb
add
cmp
scas
lock
cmp
add
movsb
sub
add
and
cwtl
daa
pop
scas
shlb
dec
sub
xchg
mov
pop
cmp
sub
lock
pop
cld
hlt
in
add
into
mov
out
iret
add
testl
insl
xchg
inc
pop
sbb
clc
lcall
lea
jge
out
jo
aad
inc
enter
movsl
dec
and
or
pop
push
je
pop
add
jo
mov
adc
into
mov
jl
repnz
add
xor
aas
stos
shll
and
lcall
shr
push
add
bound
fimuls
pop
or
add
inc
xchg
mov
mull
inc
mov
gs
add
sbb
push
pop
and
mov
or
fcmovbe
js
add
repnz
add
sub
xor
sbb
out
lea
jo
mov
popa
ds
rolb
lods
or
inc
push
mov
pop
xor
lods
push
sarb
push
xor
cwtl
adc
xor
pop
and
outsb
adc
push
call
mov
adc
or
jae
and
add
in
mov
rolb
pop
dec
add
jbe
mov
add
jno
inc
das
testl
jp
pop
scas
repnz
fucomi
ljmp
popa
fwait
pushf
xchg
sar
out
add
xchg
fdivs
jp
mov
je
add
cmp
sbb
mov
rcll
pop
out
fidivl
pop
or
add
pop
fisubrs
xchg
inc
ret
add
add
or
push
mov
hlt
out
out
ffree
aas
or
xor
das
or
and
cmp
inc
add
mov
dec
push
push
xchg
inc
xchg
inc
fs
mov
in
scas
mov
jnp
js
aaa
stc
test
push
inc
test
jp
adc
xchg
sbb
shlb
cmc
or
or
jecxz
je
add
inc
and
andb
out
jbe
mov
mov
or
add
stos
adc
add
fs
js
lods
push
add
pop
cmp
rcrb
xchg
cwtl
ds
adc
xor
loope
sub
jo
inc
mov
and
addl
pop
cmp
add
jle
in
mov
int
mov
push
cmp
xor
pop
movsl
cmpsb
sub
pop
jnp
jae
and
and
cmpl
or
cmp
jecxz
jns
add
stos
inc
scas
add
cltd
insb
fistps
jae
cmp
push
pop
sbb
push
imul
push
subb
popf
sahf
lret
fistl
jno
pushf
add
mov
imul
push
stos
and
movb
into
mov
rorl
adcl
xlat
cwtl
sbb
add
inc
imul
lock
add
push
pop
aaa
cwtl
jne
or
and
mov
jbe
cmp
test
outsl
pusha
pop
adc
fldl
pushf
xlat
mov
andb
fcmovnu
div
adc
mov
push
std
adc
loopne
popf
scas
in
mov
jo
mov
scas
popa
mov
and
pop
pushf
out
mov
shlb
add
fiaddl
jmp
push
xchg
and
mov
mov
cmpsl
verr
sub
sub
and
cmp
add
jl
add
push
inc
jp
aam
nop
mov
add
stos
movsb
test
out
inc
pslld
and
pusha
icebp
mov
daa
aaa
paddusb
adc
cmpl
loope
xchg
fmull
das
push
arpl
jno
pop
std
or
outsb
mov
stos
mov
xchg
scas
pop
subb
ret
inc
cmp
leave
push
sbb
add
or
int
push
and
lahf
pusha
in
loop
jecxz,pn
xor
mov
cmp
push
pop
add
adc
add
iret
lahf
lods
add
loop
pusha
test
lods
adc
xor
or
test
fcoml
push
or
push
pusha
jne
daa
adc
sbb
pop
fnstcw
outsb
les
inc
xlat
ret
popa
add
sub
cmpsb
lds
push
sbb
sarb
push
xchg
adc
int
lahf
cmp
or
in
ss
inc
and
int3
fistps
lds
add
pop
les
mov
test
and
inc
mov
push
fs
push
jo
in
add
cmpsb
or
pop
add
inc
mov
cmpb
ljmp
push
subl
movsl
or
addr16
out
add
enter
mov
jecxz
aam
inc
adc
outsl
lret
sbb
fdivrl
xor
decb
xor
mov
lea
sbbb
gs
dec
ret
or
pop
sub
dec
xchg
add
xor
cmp
adc
xor
repz
or
popf
loopne
test
and
adc
pop
pusha
mov
pop
sbbl
cwtl
and
adc
paddw
add
inc
push
cmc
dec
xor
add
xorb
inc
jnp
and
sub
sbb
jmp
sbb
mov
popa
mov
or
cli
xchg
or
out
in
or
and
js
adc
mov
hlt
sbb
sub
cmpsb
jo
add
pop
xor
cld
xor
sbb
xchg
and
push
aaa
pop
arpl
add
jae
add
mov
clc
jp
fcompl
push
mov
fnstcw
push
data16
sbb
lods
out
or
pop
sarb
sahf
aas
inc
pop
outsl
adc
dec
ret
or
andb
je
out
lahf
and
lods
rorl
or
cmp
bound
cli
stos
xor
xlat
xor
cmpb
dec
or
loop
add
mov
loop
sub
ljmp
movsl
mov
push
in
js
or
sub
shlb
inc
int
dec
mov
xchg
or
xchg
ret
inc
jnp
jle
jns
add
ret
add
dec
jb
iret
shlb
lock
add
inc
bound
pushf
sbb
mov
shlb
mov
out
add
hlt
addr16
movl
inc
adcb
sub
lahf
ret
lods
pop
mov
arpl
add
ljmp
xor
inc
test
mov
add
push
dec
lods
jmp
mov
mov
or
sub
inc
andl
add
lcall
add
xchg
in
testl
dec
in
shl
repz
rcrl
aas
jo
aad
std
popa
add
xchg
mov
out
mov
add
cmc
cmp
add
adc
push
iret
or
push
add
adcb
add
lahf
jnp
sbb
popa
adc
mov
test
jg
or
add
sub
ja
sar
xchg
add
adcb
in
clc
les
es
push
jbe
mov
dec
cmp
adc
dec
imul
or
mov
scas
cli
sbb
xchg
outsl
mov
test
jmp
addb
out
pusha
test
fistl
jmp
xorb
out
jbe
shlb
repnz
or
or
in
dec
ret
mov
out
mov
cmp
pop
jae
push
pop
mov
vfrczps
mov
or
cmp
lret
adc
xor
shlb
aam
jne
lcall
inc
addb
inc
int3
into
popf
pop
ret
mov
push
mov
mov
mov
cmpsb
lods
xchg
out
add
inc
mov
sub
movsb
ja
xor
xchg
cmp
pop
pusha
fists
jmp
leave
fadds
mov
push
push
jg
dec
jno
add
ja
jmp
jl
and
inc
and
and
adc
enter
adc
test
and
add
and
add
cmp
add
xor
out
lods
jno
clc
scas
roll
notl
xchg
dec
push
sbb
pop
xchg
jle
ss
ror
in
xchg
xor
xchg
and
sbb
inc
or
ret
cmp
mov
gs
cmp
adc
std
adc
pop
fsts
aad
sbb
push
dec
loope
add
pop
add
push
mov
and
add
mov
sbb
gs
push
into
pop
or
rolb
imul
or
loop
add
inc
add
lret
lahf
loopne
cmc
sub
add
mov
shr
mov
dec
popfw
pop
aaa
aas
pop
cmp
lret
ret
xchg
lock
fdivl
add
int3
enter
ljmp
jbe
orb
lock
push
sub
sbb
in
cmp
outsl
push
jmp
aad
rorb
in
pushf
cmp
jecxz
adc
hlt
pop
mov
sub
inc
push
js
inc
pop
ret
xchg
lahf
shlb
add
pop
xor
call
subb
int
sub
lret
enter
cmp
mov
rcll
and
mov
stc
jbe
add
loop
or
fnstcw
mov
sbb
cmp
lods
into
add
jp
add
pop
sarb
outsb
sbb
cltd
sub
in
fcmovu
mov
xor
and
loop
push
mov
pop
add
push
and
mov
iret
jno
or
xor
mov
jle
mov
pop
cwtl
mov
xrelease
mov
movsl
daa
sahf
fisubs
mov
dec
enter
imul
cmp
push
add
inc
mov
out
popa
xchg
pop
add
bound
mov
test
addl
test
add
push
xchg
pop
movsl
pop
mov
lock
test
mov
mov
clc
enter
and
outsl
inc
add
lock
insb
add
popa
mov
imul
mov
add
pop
pusha
dec
sbb
mov
in
stos
add
ljmp
add
jnp
mov
add
mov
sti
sbb
push
dec
inc
push
fsub
and
es
add
or
js
repz
cld
ret
or
enterw
mov
add
insl
or
shr
data16
mov
mov
inc
mov
fs
xor
in
aam
faddl
mov
faddp
imul
dec
mov
adc
shll
and
cli
out
xor
not
aas
inc
mov
cltd
adc
dec
daa
xlat
aaa
adc
add
lods
test
sub
add
mov
sbb
ds
cmp
adc
pop
xchg
das
jle
push
add
fcomps
and
cmpl
or
jb
lock
xor
sbb
in
mov
sbb
pop
add
cmp
or
jne
lods
js
pop
sbb
imul
mov
inc
push
add
or
call
mov
addl
into
nop
outsl
lret
call
fs
shlb
add
stc
addb
mov
push
call
hlt
pop
xor
aad
clc
jb
inc
mov
lcall
popa
ret
push
adc
mov
fsubr
add
jae
fldl
and
sbb
cmp
lret
jns
leave
std
faddl
js
cmp
in
test
add
xchg
negl
lcall
std
mov
inc
addr16
xchg
nop
pop
add
inc
stos
in
mov
cmpsl
out
xchg
aad
mov
rcrb
jb
adc
lods
push
out
mov
xchg
fldl
rorl
scas
and
clc
pop
add
pop
sbb
xchg
leave
repnz
xorb
xor
push
daa
and
enter
add
sub
pop
fistps
push
ret
subb
mov
xor
popf
xchg
push
popa
out
outsb
mov
add
test
push
ficomps
add
push
idivb
dec
push
loopne
push
dec
mov
jae
jno
adc
add
mov
sbbl
popa
fs
pop
mov
add
adc
out
sub
add
jmp
push
rolb
dec
inc
adc
insb
add
gs
mov
out
mov
popa
loope
rolb
cltd
jl
or
add
or
add
cmp
out
loopne
adc
out
sbb
add
or
mov
add
xor
loopne
repz
add
sub
mov
add
and
ss
cmp
pop
push
sbb
iret
pop
cmp
sahf
and
nop
push
in
imul
add
dec
incl
sahf
mov
pusha
das
xchg
rolb
inc
push
cltd
repz
adc
cli
mov
mov
fidivrs
add
es
cmpsb
pushf
test
in
dec
jne
movsb
out
add
gs
pop
mov
add
enter
andb
mov
in
adc
test
mov
in
pusha
adc
out
insb
cmp
cli
hlt
sub
mov
stos
cli
pop
mov
jmp
adc
sarb
movsl
mov
popl
and
inc
and
cmp
jne
pop
cmp
cs
mov
arpl
repnz
push
sbb
stc
clc
lods
inc
repz
test
loopne
add
mov
fsub
and
in
fadd
adc
add
and
hlt
cmpsb
shrb
add
movsl
ja
bound
xchg
test
int3
in
dec
and
into
out
enter
lea
mov
mov
hlt
popf
test
mov
push
lods
mov
add
nop
ret
mov
rolb
mov
mov
and
pop
insb
cmpsl
add
sahf
shll
popf
testb
and
xor
or
out
adc
pop
lock
fidivrs
mov
xchg
and
push
jbe
add
sbb
and
stos
mov
mov
add
lock
jne
push
shlb
xor
pop
jl
jb
punpcklwd
test
add
xor
cli
cmc
lods
test
push
mov
inc
push
pop
lods
adc
fbld
mov
pop
out
mov
sbb
and
inc
and
mov
jle
jmp
cmp
scas
sub
sub
pusha
sysret
xchg
mov
in
mov
insl
loope
xchg
add
dec
adc
and
lcall
fisttpll
add
test
mov
add
aad
push
insb
inc
pop
mov
add
adc
sbb
notb
test
jmp
pause
loop
xchg
xor
or
dec
add
shrb
cmp
sbb
push
into
pop
dec
dec
mov
push
jge
dec
add
lcall
lds
mulb
pop
out
ljmp
ret
test
sbb
adc
adcl
fbld
adc
jbe
mov
adc
test
mov
data16
cwtl
pop
xchg
add
lea
push
ss
les
add
jle
outsl
mov
test
fidivs
add
les
mov
insb
subb
scas
out
add
test
add
aas
fisubl
mov
add
xadd
add
or
mov
in
push
jge
add
add
cmp
mov
ret
mov
cwtl
repnz
add
add
test
jbe
add
jnp
lret
loopne
inc
in
sbb
add
push
pop
jns
int
roll
call
mov
lret
mov
sbb
test
add
and
bound
push
or
or
clc
cmpsl
adc
add
inc
cld
repz
dec
or
add
jmp
fs
outsl
or
mov
mov
xor
sub
call
fdivrs
add
jle
fs
jp
add
int
in
dec
rep
sub
call
dec
jo
add
ss
inc
pusha
daa
leave
sahf
pusha
sub
pop
pop
incl
pop
pop
lock
push
add
lcall
cwtl
call
pop
mov
int
fisubl
push
push
repnz
daa
in
andb
jnp
add
add
mov
nop
pop
lds
scas
add
dec
add
clc
enter
push
pop
arpl
lret
inc
add
mov
aas
pop
pop
mov
lock
out
imul
aad
sbb
sarl
add
and
mov
pusha
dec
rorl
mov
pusha
push
rclb
adc
mov
das
jae
jecxz
mov
call
pop
mov
rcrb
flds
dec
xchg
sbb
mov
jo
fisubrs
jae
test
mull
mov
clc
mov
xchg
into
out
mov
jnp
add
jle
mov
lret
push
mov
dec
enter
cld
hlt
jnp
pop
jmp
dec
cmpsl
popf
add
inc
push
dec
in
add
lods
imul
je
add
inc
fsubl
lock
rcrb
cmc
or
add
aam
aad
xchg
mov
mov
je
xchg
pop
cmp
xor
movsb
lock
fwait
sbb
cmp
add
js
in
mov
add
or
sub
push
stos
ret
lea
jne
aas
jb
mov
mov
insb
lcall
pop
pop
sbb
rolb
jnp
add
adc
xor
or
in
sbb
sbb
xchg
push
nop
adc
xchg
mov
sbb
dec
add
lock
cmpsl
push
add
mov
jbe
scas
or
add
jnp
sarl
arpl
mov
pop
mov
sub
ja
pop
pop
dec
sbb
sub
pop
inc
jp
xchg
xchg
lock
pushf
sti
xchg
cmp
les
pop
push
inc
add
inc
fs
inc
jle
cmp
pushf
icebp
pushl
push
fsubrs
sarl
xor
push
mov
mov
inc
mov
add
repnz
dec
les
dec
lret
ljmp
pop
adcl
sub
add
pop
pop
pushf
mov
add
jg
mov
inc
dec
data16
adc
jl
lods
inc
sub
xchg
fisttps
push
in
lds
jmp
xor
out
insl
add
or
mov
pop
dec
add
ja
mov
mov
mov
mov
dec
dec
test
or
repz
jp
hlt
inc
call
ret
mov
jo
lock
sbb
lods
js
or
sub
sahf
fdivl
hlt
inc
cld
vmwrite
fldcw
jg
sbb
dec
cmp
dec
dec
sub
add
fwait
inc
xchg
enter
inc
pop
adc
insl
push
div
push
jmp
xchg
in
lret
and
je
cmp
mov
stc
push
mov
in
jae
xor
loop
pmaxsw
loopne
mov
popf
pop
or
add
mov
lock
ss
inc
pop
cmp
jge
cli
add
addb
xchg
je
adc
out
jns
mov
add
lret
xchg
pop
sub
dec
or
dec
out
in
lea
mov
pop
roll
mov
nop
out
add
icebp
aad
mov
cld
scas
pushf
subb
pusha
fdivrp
aas
push
enter
cmpb
les
push
sbb
rclb
inc
jl
ja
lock
shl
adc
and
pop
and
bound
sbb
out
add
rorb
lock
or
sbb
sub
jae
mov
xchg
mov
imul
mov
xchg
and
dec
clc
xchg
dec
add
popa
scas
jns
mov
fmuls
scas
movsl
xchg
mov
jae
dec
cmp
repz
insb
dec
inc
fildl
jle
adc
adc
sbb
mov
pop
loop
jno
or
js
imul
mov
adc
dec
test
mov
popf
push
pop
dec
add
test
cmp
jae
jmp
cmp
add
mov
inc
pop
add
dec
shll
jg
stc
or
inc
gs
xchg
pusha
loope
fisubrs
mov
adc
mov
push
pusha
test
xor
or
js
test
adcb
incb
and
pop
fbld
sub
out
add
test
jae
and
aas
lds
or
cmpsb
add
sub
test
ljmp
roll
std
xchg
daa
ljmp
fildll
jae
nop
jge
not
add
ljmp
or
or
xchg
stos
xor
scas
stc
jne
loopne
clc
jle
push
mov
mov
sub
and
cmp
vporq
xor
sbb
dec
cmp
shrd
jno
xchg
jl
movb
mov
add
sbb
or
add
inc
out
loopne
clc
or
rorb
add
mov
fldenv
int3
test
sti
shlb
lods
shrb
gs
mov
mov
xlat
out
pop
inc
arpl
fldl
into
jmp
sbb
fdivs
mov
pop
cmp
pop
fists
lret
jno
cli
add
mov
imul
mov
mov
out
outsb
fnsave
sub
push
or
sub
test
pusha
hlt
lods
testb
ror
lods
lret
sarb
sub
insl
pusha
mov
test
fmuls
adc
mov
add
xor
lock
fldl2e
mov
leave
xchg
push
add
jb
fildl
lret
fsubs
orb
and
outsl
xor
call
repnz
push
add
or
orl
jae
inc
jo
stos
cmp
lea
add
les
iret
mov
shll
adc
dec
jbe
cmp
sub
fisttps
cmp
insb
jno,pn
jl
dec
rclb
mull
fsubr
sub
dec
adcl
adc
bound
and
xor
mov
and
ljmp
dec
mov
test
js
and
and
adc
int3
bound
sub
sub
pop
or
inc
loope
sbb
hlt
add
or
and
out
into
xor
sbb
movsb
repz
add
cmpl
jmp
jp
lret
pop
in
loopne
xchg
scas
mov
mov
pop
test
push
rcll
sbb
icebp
jae
js
add
and
scas
mov
add
out
jbe
mov
das
push
xchg
ss
push
ret
jmp
add
loop
mov
mov
lahf
push
shr
dec
and
cmp
push
add
or
cmp
loopne
jg
add
xchg
scas
bnd
inc
inc
add
push
mov
repz
pusha
sub
addr16
adc
or
sub
sub
ret
add
cmc
js
pop
jb
cs
lock
jo
lods
add
ret
sbb
push
into
xorb
data16
and
movsl
movl
adc
inc
rol
sti
and
faddl
mov
hlt
enter
sub
add
jne
fadds
pop
sbb
lock
sub
shl
sbb
idiv
adc
daa
xor
xchg
movsb
int
fdivrl
filds
push
ljmp
fadds
lea
test
add
cli
hlt
or
mov
call
push
or
movb
popa
mov
fiaddl
xchg
out
mov
movsl
and
push
aam
or
sub
mov
xchg
push
add
lret
xchg
movsl
add
pop
cmc
or
cli
cmpb
inc
out
add
jb
add
scas
test
adc
iret
decl
and
cmpb
adc
mov
in
in
mov
mov
dec
xchg
pop
add
dec
sub
hlt
jbe
enter
outsb
add
or
jecxz
or
gs
jb
push
bnd
rolb
mov
mov
rol
movsb
scas
testl
addr16
out
pmovmskb
imul
lock
sub
xor
nop
sbb
arpl
xchg
popf
out
mov
sbb
and
dec
pusha
dec
and
stos
mov
mov
pop
fadds
fldt
and
out
clc
sbbb
dec
pop
out
sbbb
add
mov
pop
add
cwtl
adcb
xchg
cmp
and
sub
pop
inc
out
jns
mov
push
inc
mov
or
add
je
add
pop
in
insl
adc
sbb
jo
sbb
sahf
push
outsl
add
out
mov
imul
push
mov
and
clc
cwtl
int3
sbb
ficomps
in
cmp
adc
testb
test
std
add
fs
nop
das
push
mov
jno
js
data16
inc
cmp
inc
insb
cmovnp
addb
cmp
mov
add
xchg
sbb
add
pop
sub
pop
roll
cmp
fldenv
outsl
jl
cmp
or
int3
mov
pop
xchg
inc
add
insb
jo
mov
jno
xchg
and
push
loope
rep
add
pop
call
cmp
push
pop
xchg
popa
lcall
mov
xor
loop
out
dec
cmp
mov
nop
loope
fcmovb
pop
dec
pusha
ret
push
cmc
sub
pop
jns
push
xorb
cld
sub
add
loope
mov
shrl
je
xchg
mov
aas
call
dec
out
std
loopne
mov
insl
mov
add
sbb
clc
enter
in
ja
adc
clc
rolb
jnp
fstps
fcoms
lahf
negl
dec
add
ds
loop
mov
xor
iret
pop
add
sub
add
xor
daa
mov
aam
adc
cmp
inc
push
dec
add
add
icebp
add
movsb
mov
movsl
inc
pop
sahf
in
data16
ljmp
in
mov
cmp
dec
push
scas
push
xchg
fmuls
clc
orl
mov
sahf
sub
inc
inc
fadds
add
cmp
bound
jne
lcall
and
xchg
shll
outsl
add
in
xchg
add
sub
and
imull
gs
dec
rep
pop
rolb
int3
or
jle
push
ret
sbb
gs
sbb
mov
sarb
outsl
cmpsl
cli
mov
and
fcmove
or
addps
push
add
subb
popa
add
cmp
addb
bound
push
outsl
fnstenv
call
ja
xchg
push
in
out
lock
add
pop
dec
cltd
jmp
call
ss
cmp
add
add
cwtl
lods
pop
nop
int
loop
test
into
scas
jbe
mov
mov
adc
and
jle
and
push
fs
push
rolb
jl
mov
inc
pop
pusha
adc
add
sbb
pop
inc
jnp
les
add
aad
pop
mov
lahf
mov
jge
push
jl
icebp
inc
sub
inc
sub
and
and
sbb
lcall
add
mov
push
popf
pop
fcoms
add
mov
xor
push
jns
xchg
jmp
or
mov
hlt
cmp
cmp
or
out
push
mov
nop
dec
ror
pop
in
add
sub
add
enter
add
inc
and
add
pop
inc
jo
xchg
jmp
jmp
es
in
add
xchg
insb
lret
hlt
mov
fimull
adc
jle
adc
push
sbb
sbb
jno
fiadds
jbe
and
gs
test
cmp
add
addr16
add
sub
mov
scas
std
pusha
cmpsl
leave
popf
cwtl
inc
add
mov
inc
inc
push
sub
mov
cmp
lahf
pop
mov
lea
sbb
push
dec
add
cmc
dec
addr16
int3
ret
scas
jg
loop
out
cmpsb
cmp
pop
test
rolb
inc
jge
std
push
gs
fwait
sub
sub
add
add
dec
sbb
je
mov
mov
xchg
pop
add
xchg
stos
hlt
into
pop
sbb
in
fsubr
mov
sub
xchg
rolb
push
pop
sbb
add
lds
dec
aaa
adc
lret
mov
in
cld
jecxz
lods
movsb
add
sar
sahf
popa
lahf
push
cmpsb
add
jmp
xor
out
pop
jo
mov
imul
adc
lea
cmc
jns
rcrl
repz
mov
mov
test
ds
in
shrb
mov
add
js
jle
cmpsl
js
icebp
pop
clc
mov
add
inc
stc
mov
mov
mov
in
adc
mov
jecxz
imul
add
pop
nop
ficomps
jg
add
xor
mov
sub
ret
negb
lcall
iret
rcrb
adc
xchg
push
jno
push
jno
cmp
mov
add
add
push
dec
rorb
xor
out
mov
cmp
rorb
jbe
in
mov
push
scas
stc
test
shll
or
addl
rclb
jne
mov
xor
addr16
pusha
mov
mov
cli
sbb
pop
or
cmp
sar
cmc
stc
mov
aas
or
andb
mov
add
jo
loopne
add
xchg
bound
sub
clc
add
sub
add
adc
mov
cmp
aam
lock
add
pop
xchg
das
and
sbb
jge
sbb
out
inc
cmp
push
xor
call
jae
ljmp
adc
and
push
xor
pop
in
ljmp
loope
mov
lret
test
scas
rcl
cmp
incl
pop
xorl
adc
pop
add
punpcklwd
je
sbb
jg
fists
add
in
mov
iret
inc
int3
push
mov
add
fwait
cmpsl
pop
inc
movsl
pop
enter
and
xor
test
call
test
aaa
pop
movsb
ljmp
lds
ror
cwtl
add
jb
xchg
jns
add
push
packuswb
add
lahf
mov
outsl
nop
jl
jnp
repz
xor
or
pushf
icebp
jns
pop
add
and
mov
icebp
add
push
dec
js
rcr
scas
adc
in
fnstcw
jbe
mov
ljmp
add
jnp
add
pop
inc
aaa
ja
bound
xor
aas
inc
pop
adc
pushf
add
jp
outsb
mov
rcl
jnp
ficoms
add
push
inc
add
mov
add
adc
push
add
push
push
repnz
enter
and
lock
out
and
xor
mov
sbb
cmc
pushf
push
adc
mov
inc
xchg
iret
std
loopne
add
adc
pop
mov
imul
xor
xor
dec
mov
mov
flds
and
mov
push
add
int3
iret
dec
inc
push
loop
or
jne
testb
stos
outsb
add
xchg
and
out
add
bound
sbb
inc
xor
pop
and
in
cmp
add
fadd
or
mov
add
sbb
stc
xor
loop
int
add
or
add
in
add
test
inc
inc
repz
adc
mov
add
and
ljmp
add
mov
add
fsubs
popa
adc
add
cmp
dec
pop
hlt
push
pop
xchg
subps
fbld
sub
dec
ret
gs
jl
fnstenv
sub
sti
or
sbb
push
add
insl
push
dec
add
sahf
faddl
gs
add
pop
lea
sub
jl
jae
cli
xor
xchg
test
dec
sub
call
or
sti
adc
add
dec
leave
rolb
cmp
jbe
dec
pop
test
call
inc
shrb
xorb
pop
insl
mov
orb
adc
mov
clc
gs
add
aam
mov
pop
add
jnp
xor
cs
add
xchg
ret
push
add
sbb
clc
or
add
repnz
pop
jp
add
out
sub
add
neg
push
shlb
sub
lock
enter
sahf
add
fsubs
orb
add
repz
cmp
add
and
les
das
xor
out
cmp
mov
inc
jge
mov
cvtps2pi
xor
or
cmp
mull
ja
xor
add
push
and
or
add
add
ljmp
mov
push
sub
lds
insl
add
adc
sbb
jecxz
fcoms
xchg
jle
scas
mov
or
imul
jo
or
push
addl
lcall
jecxz
jae
sti
mov
pop
movsb
repnz
add
pop
mov
sbb
out
dec
mov
test
cli
call
mov
lds
sub
lret
mov
int
imulb
mov
add
popa
rol
fwait
popf
add
inc
aad
jb
mov
jnp
xchg
sar
jmp
fs
lret
fstps
add
je
decl
int
inc
sbb
and
bound
jb
add
xchg
inc
adc
adc
mov
push
adc
ljmp
add
mov
rcrb
pop
fdivr
add
sbb
mov
mov
fadds
jp
cmp
cli
xchg
sbb
cmp
adcb
js
jmp
fildl
rcll
mov
cs
aam
cld
in
cwtl
stc
nop
enter
ljmp
xchg
cld
lret
jge
add
push
mov
std
sbb
pop
sbb
aam
stc
rorl
fdivrl
aam
movb
inc
mov
hlt
xchg
lods
es
das
das
add
outsb
add
cmpsl
cs
mov
xchg
iret
fs
cmp
add
cld
inc
sub
leave
xchg
loopne
xchg
in
repz
sahf
or
add
pop
mov
mov
xor
nop
arpl
mov
or
mov
iret
jg
test
cmpsl
lea
js
pop
pop
sub
add
fsts
das
add
xor
add
mov
aad
xor
jmp
popa
mov
jo
cmpsl
jbe
fnstsw
xor
push
mov
inc
je
adc
test
stc
nop
sbb
cmp
push
cmp
jmp
mov
push
mov
and
pop
orb
lods
add
and
and
fldl
cmc
lock
movsb
or
jp
add
sub
clc
inc
in
ljmp
movl
scas
push
and
in
orl
sahf
or
pop
cld
stos
sbb
dec
fildl
ja
std
add
imul
push
jg
pop
adc
xchg
ficoms
xlat
outsb
rcrb
push
dec
inc
fistps
mov
pushf
inc
add
in
cmpsl
add
iret
clc
jns
xor
popa
sub
mov
daa
test
cs
cmp
jp
popa
jo
push
xor
adc
mov
push
jp
inc
jecxz
mov
scas
imulb
das
dec
int3
mov
data16
mov
ret
ret
cmp
xor
decl
add
push
pop
int
inc
nop
push
pop
pop
jne
adc
insb
inc
iret
popa
cmp
and
lea
inc
xor
pop
cld
out
movsl
in
stc
out
pop
pop
mov
std
cmpb
movb
xchg
add
sbb
xlat
mov
movl
loopne
add
enter
pop
and
and
xchg
nop
or
loopne
push
lock
jb
sub
adcl
scas
shl
andb
or
mov
cld
sbb
mov
divl
jo
ret
inc
hlt
pop
xchg
sub
pop
cld
loope
inc
cmp
xchg
add
movsb
enter
xchg
clc
mov
je
xorb
pop
and
cmpb
mov
flds
or
add
xor
aaa
movsl
xchg
inc
inc
adc
push
jp
loopne
cwtl
scas
add
icebp
xchg
lock
sbb
leave
jnp
xchg
cmp
mov
in
sbb
insl
inc
add
jle
jb
and
add
ss
jp
int
call
scas
sahf
fs
add
mov
outsl
mov
pop
sysret
push
out
inc
pusha
test
pusha
scas
add
hlt
sub
inc
cli
popa
shr
test
call
add
cmp
sahf
pop
push
add
les
xchg
adcl
repz
lock
ja
add
das
ja
dec
mov
insl
xchg
dec
lock
xchg
pop
adc
xchg
pop
in
push
or
push
outsl
arpl
add
mov
cmp
add
inc
mov
sbb
mov
and
bound
stos
mov
sbb
ja
cmpsl
pusha
in
jmp
repnz
nop
int3
add
dec
mov
outsl
mov
adc
sub
xor
add
cld
mov
add
mov
mov
das
add
dec
fbstp
js
mov
add
and
push
or
inc
sbb
xchg
lret
jg
loop
jg
add
imul
and
xchg
pushf
shl
jge
jp
add
insb
sub
sbb
dec
cwtl
ja
sbb
mov
inc
shll
pop
jno
xor
aad
testb
sub
mov
push
xor
dec
rorb
pop
les
mov
andb
inc
cmp
pushf
jbe
inc
fildl
push
lcall
mov
leave
cwtl
pushf
add
or
sbb
dec
cmp
faddl
lret
add
mov
add
and
jle
int
add
jg
push
add
pop
push
pop
mov
std
fcoml
cmp
mov
stos
pusha
hlt
pop
mov
aad
and
ljmp
insb
cmc
sbb
xlat
jne
mov
mov
sti
push
movsb
add
pop
in
inc
pop
jnp
mov
mov
cmpsb
push
jl
dec
sahf
fsubs
lods
insb
pop
and
add
ret
dec
cmp
ljmp
shlb
add
and
ret
sbb
cmp
add
sahf
pop
push
es
xor
mov
ljmp
add
add
inc
cmp
push
adc
mov
mov
shlb
repz
lret
vpaddb
adc
cmp
add
ss
arpl
sub
jbe
inc
adc
ds
push
out
add
mov
push
in
loopne
jae
xlat
adc
movl
data16
lea
stc
adcb
bound
inc
fimuls
or
aam
popf
hlt
sarb
mov
xchg
fadds
pop
lea
popa
mov
ret
add
cmp
lods
stc
mov
pop
scas
call
cmp
xor
cmpsl
cmp
test
leave
and
and
cmp
mov
xchg
lea
stos
mov
add
imul
xor
rcrl
and
enter
orb
data16
jo
add
pop
inc
xchg
aas
arpl
aas
add
loope
xchg
push
jbe
xor
std
xor
addl
dec
fwait
pop
inc
stos
adc
or
sti
xchg
pop
inc
add
xor
fnstcw
mov
inc
gs
sub
add
dec
ja
test
cmc
std
dec
es
cltd
pusha
ret
call
fisubrl
negb
and
or
xorb
in
adc
pop
scas
add
mov
test
std
sahf
cmp
dec
lea
sbb
lret
pop
lock
sub
jnp
daa
pop
xchg
jo
fmull
loopne
je
dec
ret
lret
clc
xchg
mov
ljmp
std
cmpsb
test
aam
add
jp
add
inc
mov
rol
add
ljmpw
xchg
repnz
sbb
movsl
outsl
cmpb
mov
sbb
add
repz
in
adc
loope
sbb
or
push
ret
and
out
add
adc
movsb
mov
push
mov
add
cmpsl
xchg
pop
addr16
push
nop
movsb
add
xor
cmc
or
test
add
push
sbbl
dec
xchg
adc
push
or
xchg
and
jbe
hlt
fisttps
loop
inc
mov
add
jne
lcall
ss
xchg
add
es
aam
jp
test
push
dec
aaa
js
lods
lea
mov
pusha
cmpsb
xor
sub
sbb
mov
sbb
rolb
shr
and
sub
jmp
add
add
xor
rorb
sbb
jmp
shl
ret
jl
add
push
sahf
add
movsb
dec
loop
mov
sti
add
pop
and
mov
or
jp
ljmp
dec
nop
pop
mov
cmp
add
push
adc
sbb
xorb
icebp
jno
xchg
pop
push
movsl
fwait
or
shlb
lock
repnz
test
nop
xor
clc
add
push
sahf
orb
or
dec
in
add
and
ret
add
push
xor
adc
stos
add
andb
xor
cli
xchg
shlb
test
lods
shrb
inc
mov
cmp
push
lds
sahf
add
adc
bound
add
shl
dec
shll
aas
add
inc
rcll
cmp
hlt
adc
xlat
inc
fs
cmp
cwtl
jecxz
pop
ds
ljmp
mulb
push
add
xchg
mov
mov
js
sub
sbb
xlat
movsl
mov
add
mov
sub
push
or
pop
outsb
and
xor
out
int
cli
jno
mov
jp
add
or
div
add
push
lcall
lds
fstps
xchg
or
sub
xor
dec
push
and
xchg
add
lock
in
fildl
cmp
mov
test
in
outsl
fcmovbe
add
push
push
inc
and
adc
lret
in
int
mov
and
dec
dec
hlt
outsb
repnz
jns
stos
andl
jecxz
or
xchg
and
push
out
ret
xchg
pop
stc
or
es
mov
or
mov
add
xor
repnz
or
inc
or
xchg
and
and
in
push
in
adc
ret
push
pop
push
push
jecxz
shlb
add
sbbl
push
fildl
push
inc
call
inc
cmp
adc
orl
xlat
rcl
fdivrl
std
mov
inc
aad
jns
add
sbb
or
inc
sbb
xor
or
lods
scas
jmp
leave
lds
aam
inc
jae,pt
ffree
dec
xchg
add
push
and
or
inc
mov
lods
sahf
dec
int
push
xchg
push
test
add
or
dec
cmp
fnstcw
out
mov
testb
insb
and
xlat
cli
push
dec
aas
mov
xor
inc
add
nop
pop
insl
and
outsb
loope
xchg
call
movsb
data16
cmp
hlt
popa
lcall
dec
adc
add
ss
dec
mov
or
mov
out
cvttps2pi
lods
add
dec
jno
xor
adc
mov
rorb
sahf
call
add
fstpt
and
add
aad
mov
out
loope
mov
xlat
and
add
stos
andl
mov
lret
imul
add
mov
pushf
movb
stos
rorb
jmp
sbb
out
mov
test
loop
in
aas
mov
dec
aam
add
lret
call
sbb
popl
in
sbb
add
dec
sub
mov
nop
shrb
ficoml
xchg
fadds
insb
lcall
adc
jne
bound
push
add
or
fistpll
stos
das
push
sbb
jne
cmpl
pop
sub
inc
jno
mov
push
lahf
cs
add
fs
inc
add
sbb
test
test
jle
cmpsl
lret
push
arpl
mov
and
pop
jno
pop
push
into
leave
inc
xor
jecxz
mov
xchg
call
adc
je
xor
orb
cwtl
stc
add
mulb
mov
insb
mov
movsb
add
inc
xchg
or
push
dec
add
sub
lds
lahf
add
fcmovnbe
int
inc
int3
popl
insb
cmp
sbbl
cli
mov
sbb
xchg
pop
dec
mov
in
les
xor
add
xchg
add
xor
push
fidivrs
filds
aam
and
add
dec
and
clc
or
pop
dec
mov
subb
adc
xlat
mov
test
out
sbb
hlt
ljmp
pop
fwait
mov
aad
sbb
jne
or
mov
cmp
inc
stc
xor
js
les
jecxz
pop
and
dec
jl
add
mov
lock
insb
loop
aad
add
mov
add
inc
jns
xor
out
xor
push
cmp
in
addl
aam
mov
push
test
data16
xchg
push
rolb
enter
add
sarl
gs
clc
sub
push
add
mov
pop
shlb
dec
popl
in
scas
pop
push
jb
xchg
mov
push
xchg
pop
add
add
jge
data16
std
sbb
xchg
pop
pop
xorl
xor
sub
repz
add
push
and
jmp
lea
pop
adc
repz
xchg
pusha
jb
aas
push
addl
push
cmp
add
cmp
jle
ljmp
xor
hlt
jmp
mov
xor
and
jl
push
and
add
int3
movl
mov
dec
jb
inc
mov
mov
shll
jl
shrb
sbb
pop
add
xchg
xchg
jle
xchg
xlat
testb
pop
push
mov
daa
rolb
and
loopne
xchg
lret
jle
jp
pop
addr16
inc
lock
negl
xor
jle
popa
and
jbe
mov
add
fwait
sbb
enter
into
popa
hlt
add
cltd
lret
fwait
adc
clc
xchg
add
pop
lea
inc
int3
push
testb
arpl
enter
add
iret
pushf
xor
imul
push
int3
add
adc
out
jns
pushf
pop
and
fwait
popa
add
icebp
and
lock
inc
mov
cmpsl
pop
add
rol
sbb
mov
mov
fiadds
mov
jl
les
mov
cld
cli
popa
jae
push
clc
imul
dec
mov
sbb
imul
aad
xchg
add
mov
in
jl
cmp
sbb
sub
dec
jmp
add
jbe
push
jns
hlt
jo
lcall
es
sbb
test
ret
cmc
pop
inc
inc
push
scas
jge
adc
xor
jo
repnz
add
mov
mov
loopne
push
stc
jb
jnp
push
mov
xorb
xor
push
add
push
mov
add
movsl
push
pop
sub
add
ds
mov
and
mov
jno
imul
add
fldl
pop
cmp
lret
adc
or
dec
pop
pusha
popa
add
jno
pop
sbb
sbb
stc
mov
xchg
mov
cmp
push
lds
add
jmp
mov
xchg
pop
add
call
add
adc
test
lds
rcrl
les
or
xchg
add
cmp
push
dec
xor
pusha
cmp
imul
cmp
test
inc
mov
pop
xor
dec
add
inc
jbe
out
incl
add
cmpsb
pop
cmp
test
pop
dec
mov
adc
mov
sarl
or
lea
faddl
pop
lahf
stc
pop
loopne
imul
sub
adcl
roll
add
shlb
xor
in
mov
push
sub
xor
outsb
pop
xchg
jbe
cmpsl
xchg
cmp
jp
sbb
pusha
cmpsb
orb
mov
lcall
ret
add
lods
adcb
loopne
sub
and
pop
add
fisubl
add
lret
outsl
popa
lahf
mov
push
mov
xchg
mov
pop
jmp
sbb
clc
outsb
pop
daa
rorl
std
je
adc
int
in
dec
mov
lret
pop
test
imul
pop
pop
scas
pop
jnp
nop
cmc
adcb
addr16
les
test
outsb
enter
ljmp
std
addl
add
adc
lock
adc
repnz
out
shrb
rclb
popf
push
es
outsb
nop
ljmp
mov
fcomip
add
inc
pop
lods
sub
ljmp
xor
fsubs
andb
scas
je
cld
cli
roll
shll
popa
mov
repnz
add
inc
push
jo
add
and
push
sbb
dec
lock
in
adc
sub
add
stc
into
cwtl
testl
les
loope
pop
lods
jns
test
nop
cmp
xchg
imul
fmul
addr16
and
xchg
mov
loope
xor
andnps
add
and
mov
add
or
push
daa
jg
sub
test
add
pop
mov
jae
or
add
push
je
xor
insb
pop
jbe
adcl
lods
js
fstp
cwtl
hlt
sbb
push
sub
scas
loop
add
das
arpl
mov
pop
negl
jns
cmp
inc
dec
imul
insb
clc
jge
stc
pop
pop
jl
mov
cmp
adcb
scas
adc
xlat
sbb
dec
xor
fmuls
push
scas
inc
adc
sarb
rclb
add
repz
mov
mov
inc
shrb
ja
test
dec
add
mov
test
fildl
iret
inc
je
fcom
push
pop
pop
sbbb
mov
inc
add
cmp
mov
aam
rclb
add
and
push
dec
add
sbb
cli
or
imul
sarb
insb
xor
pop
add
jb
or
test
subl
cltd
add
pop
aaa
mov
cld
adc
and
fsubs
pop
js
xor
sahf
icebp
adc
dec
shlb
ret
fwait
cli
mov
imul
add
lock
add
lcall
add
test
int3
pop
lds
mov
int3
into
pop
add
jecxz
ret
popa
push
add
int3
mov
cmpsl
add
add
lahf
cmp
add
pop
add
and
inc
adc
mov
aam
pop
add
ljmp
add
call
pop
add
loopne
cmp
imul
push
add
cmp
dec
sti
pop
sbb
add
push
dec
mov
mov
fidivs
mov
mov
push
adcl
enter
push
dec
fnsave
add
pop
mov
jbe
in
xor
adc
push
dec
mov
or
pop
push
pop
push
insl
add
out
and
mov
pusha
sbb
rcll
data16
ret
popf
pop
ljmp
dec
cmp
in
add
adc
xlat
jmp
jge
cmp
stos
mov
jbe
add
std
fistl
lret
inc
cmp
adc
sub
clc
test
cmpsl
dec
add
add
lods
lods
inc
cmp
push
push
add
popl
sahf
out
loopne
xchg
shll
arpl
jp,pt
jle
inc
or
pop
sbb
add
adc
add
dec
pop
mov
or
imul
mov
stc
fiaddl
repz
cmp
mov
aas
adc
incl
cltd
push
pop
out
out
movsl
popf
ja
sarb
sahf
aad
adc
pop
add
or
and
pop
cld
ficomps
xorb
add
clc
jne
push
adc
in
in
clc
add
push
jo
rcr
pop
ds
add
pop
imul
adc
jbe
das
faddl
pop
je
sub
rcll
inc
push
loopne
pop
xchg
mov
add
add
dec
orb
adc
mov
scas
pop
pop
push
les
and
sbb
stos
dec
inc
add
data16
repz
leave
add
rolb
push
ds
dec
mov
push
repz
push
adc
add
pop
mov
pop
xor
cmpb
inc
xchg
add
push
and
mov
stc
add
xor
dec
mov
add
sbb
jno
inc
pop
add
lods
dec
dec
inc
push
jo
add
or
mov
rorb
add
inc
std
xor
add
add
push
xor
sbb
ja
mov
popa
add
into
ds
mov
add
dec
daa
dec
fdiv
or
cmp
notl
mov
mov
xlat
adc
clc
gs
scas
adc
clc
pushl
insl
pop
arpl
fdiv
into
inc
add
sub
bound
inc
addb
adc
xor
movsl
jbe
add
mov
push
jo
xor
shlb
cmp
pop
nop
fs
in
jle
add
push
sub
push
je
outsl
add
mov
es
adc
fldt
adc
pop
sbb
add
inc
cmc
stos
dec
cli
add
ljmp
add
push
jns
xor
in
inc
nop
fildl
stos
sbb
inc
cmpsl
jl
jge
pop
psubsb
rolb
or
dec
sahf
mov
cmp
repz
data16
jno
push
js
pop
fmuls
push
adc
nop
add
sub
push
and
dec
insb
sbb
inc
sbb
int
or
adcl
loopne
push
in
adc
cmp
pop
xchg
push
push
outsb
int3
into
mov
xchg
mov
pop
add
push
lcall
mov
dec
pop
and
in
imul
mov
add
add
aas
xor
nop
rcrl
or
add
inc
and
jb
push
xor
push
clc
pop
sbb
sbbb
je
mov
pop
lea
push
mov
hlt
inc
movsb
jo
add
or
test
mov
xchg
mov
mov
pop
hlt
push
fs
mov
test
cmpsl
pop
js
je
fwait
les
inc
push
mov
pop
popa
mov
pop
inc
hlt
add
jno
in
xor
outsl
push
adcl
gs
in
add
xchg
fcom
sarb
movsl
stc
pop
or
gs
sub
data16
std
pop
in
lock
xchg
mov
mov
into
push
scas
rorl
or
dec
mov
inc
push
push
jnp
add
push
sub
fwait
add
sub
and
cli
mov
popa
and
shrb
push
or
sub
adc
or
loope
cltd
fcmovne
dec
add
xchg
cld
ret
dec
xor
add
xchg
daa
sbb
xchg
and
dec
xchg
mov
cmp
sahf
out
inc
mov
clc
lock
dec
adc
add
push
mov
dec
insl
fadds
xor
push
fisubrl
add
aas
cltd
lds
mov
repnz
rcll
dec
insl
inc
inc
nop
sub
cld
pop
pop
jbe
ret
lret
push
pop
fsub
out
adc
insb
add
jg
sarb
xchg
push
stos
fnstsw
add
jbe
pop
aas
and
in
insb
es
dec
fwait
ljmp
add
movd
into
out
push
aaa
push
and
xchg
and
fildl
clc
rcl
xor
cmpsb
lret
mov
cli
addl
mov
adc
mov
add
aad
ror
lds
sub
xor
add
inc
popa
add
push
iret
xlat
xor
sti
mov
sbbb
add
dec
arpl
fndisi(8087
jo
repz
ds
loope
jno
fistps
adc
in
shlb
cmp
insb
dec
mov
movsl
xchg
sahf
xchg
push
out
in
add
add
pusha
lods
ds
add
mov
xchg
jno
in
bound
mov
sbb
cmpsl
and
inc
ret
add
test
test
lods
mov
inc
add
sbb
sbb
stos
add
cld
cmp
xor
xor
test
push
add
fldl
cmpsl
add
sub
cli
or
inc
shl
add
pop
mov
sub
xor
ret
ljmp
loopne
int3
add
adc
or
mov
jb
aas
stos
or
push
and
and
dec
loop
and
fdiv
dec
push
cmp
roll
add
mov
add
out
push
jecxz
in
testb
mov
loop
jle
mov
les
xchg
jb
ja
or
cmpsb
jmp
shlb
dec
scas
loope
lock
and
rcrl
fnsave
lds
repz
xor
jo
addb
dec
cmp
and
cmp
add
dec
mov
pop
add
stos
dec
lds
add
and
mov
xlat
mov
jns
mov
aaa
test
aad
mov
call
pop
loopne
movsl
nop
jg
jno
lret
arpl
sub
add
mov
add
sbb
mov
mov
les
inc
or
xchg
add
test
mov
pop
into
mov
aam
out
jl
fmull
mov
mov
add
test
push
xchg
add
int
aas
pop
inc
or
fldl
cmp
test
mov
aaa
mov
sbb
xchg
add
daa
popf
xor
int3
dec
add
lahf
pop
fsubrs
add
rcrb
pop
push
rolb
sub
sbb
in
mov
mov
add
mov
or
aas
push
add
dec
push
and
enter
mov
imul
lret
faddl
sbb
adc
in
loopne
arpl
int3
dec
cli
cmp
cmp
mov
xor
cmp
incb
movsb
pop
rol
add
or
loopne
test
daa
push
mov
outsl
pusha
mov
lock
push
and
inc
inc
pop
cmpsl
jo
sbb
lds
pop
mov
and
dec
outsb
or
sbb
jbe
push
or
mov
and
xchg
inc
stos
adc
popl
aad
mov
repz
sub
cmp
pushf
pop
sbb
add
mov
xor
in
int3
push
add
inc
mov
in
jg
es
xchg
out
fbld
add
in
pop
pop
int3
xor
fadds
ja
jecxz
lods
iret
inc
xor
xor
in
dec
cmp
out
nop
sbb
dec
sbb
and
popl
xor
or
push
sbb
mov
aas
sub
mov
int3
add
shlb
jmp
popf
mov
cmpsl
or
mov
add
outsl
mov
pop
mov
dec
and
push
testb
mov
imul
add
decl
into
cli
ret
leave
cmp
in
loopne
int
and
ret
out
jb
or
subl
add
sbb
in
mov
fcomps
mov
mov
or
mov
add
xchg
sbb
and
xor
mov
add
mov
mov
clc
pop
pop
mov
pop
push
sahf
push
adc
and
push
dec
cmp
inc
ja
mov
inc
push
out
sbb
repnz
mov
cli
bound
inc
or
popa
shrb
add
cli
mov
incb
cmpsl
popf
add
hlt
push
test
imul
push
cld
jne
mov
inc
jg
aad
testb
or
add
js
hlt
mov
adc
add
cmp
jge
dec
add
mov
add
fadd
jae
inc
or
mov
jb
push
xchg
fneni(8087
cltd
add
add
dec
jno
xchg
dec
adc
imul
and
popl
cmp
adc
push
add
sub
das
sbb
add
mov
insb
pop
in
testl
adc
jne
iret
or
loopne
bound
mov
es
shrb
lret
stc
xor
js
pavgb
mov
add
lcall
add
add
icebp
loopne
add
outsl
pusha
lods
lret
dec
fistpl
daa
adc
pop
ja
in
push
or
or
cmp
loop
daa
add
loope
in
mov
add
bound
mov
lret
mov
push
inc
cwtl
xor
subb
jge
fsubl
in
add
jmp
stos
call
leave
and
rcr
repz
aaa
xor
call
addr16
fildll
inc
fwait
nop
test
xor
lock
cmp
incl
sbb
jmp
add
mov
cli
add
pop
adc
add
cmp
divl
loopne
jo
jl
add
mov
lock
xchg
mov
jmp
jb
add
test
mov
outsb
lods
sbb
scas
mov
xor
xor
adc
adc
fsubs
dec
cmc
add
test
scas
inc
gs
xchg
push
ret
ret
stc
bnd
add
push
cmp
mov
mov
call
jmp
pop
add
mov
rolb
cmp
cmp
xor
mov
add
ds
fimuls
shlb
rcrb
mov
sub
mov
lds
int3
adc
cmp
mov
add
lahf
lods
or
rcll
jns
loope
xor
mov
into
lret
notb
and
movsl
or
nop
dec
xor
mov
in
test
mov
and
cmp
adc
sarb
es
pop
stos
cmp
pop
xor
push
scas
jo
int
test
addb
inc
cmp
mov
add
add
xchg
sbb
loope
out
movsb
add
xor
rorl
ljmp
ficomps
add
das
add
jle
add
push
shll
jp
ret
stos
adc
cmp
sbb
sub
call
out
jmp
push
sbb
fimull
mull
xor
pop
sahf
mov
shll
or
sbb
mov
dec
aad
add
mov
pusha
testl
insl
or
flds
bound
imul
adcb
js
sub
pop
mov
and
mov
add
in
sub
pop
js
pop
mov
mov
inc
push
sbb
lock
int3
mull
mov
je
add
subb
test
jg
jbe
add
pop
insb
mov
ds
popa
add
push
lahf
xor
add
pop
ja
pusha
leave
inc
addr16
out
xchg
xor
mov
mov
enter
or
mov
mov
in
adc
mov
test
push
out
add
lea
xlat
push
add
push
xchg
lods
jecxz
adc
addr16
orl
add
jo
test
cmpsb
push
push
push
mov
repnz
xor
fcompl
ret
push
out
add
es
test
jmp
shlb
sti
lods
cmp
mov
inc
and
add
push
in
jg
lea
push
scas
and
add
jnp
push
hlt
inc
out
add
sbb
or
push
add
repnz
enter
call
add
test
fcoms
and
or
sbbb
enter
popf
adc
pop
dec
iret
scas
int
andb
mov
push
mov
sbb
cmp
jae
mov
loop
cwtl
dec
xor
pop
rorl
add
mov
jno
cmp
add
loopne
jnp
push
pop
and
sub
or
pop
sbb
mov
add
sbb
and
jge
push
sti
push
add
pop
pop
shlb
inc
sub
jp
orb
push
je
fs
xor
shll
jg
enter
push
mov
inc
in
push
test
jmp
xlat
mov
add
pop
leave
dec
jecxz
in
mov
push
inc
cld
aaa
cltd
pop
mov
cmpb
mov
pop
add
fiadds
andl
adc
or
jb
and
add
sub
cmp
imul
js
jae
fs
add
mov
push
mov
testb
pop
lcall
mov
loopne
cmp
mov
or
fdivrl
cmpb
in
in
mov
inc
adcb
mov
sbbb
mov
jb
mov
sbb
or
call
xor
adc
mov
mov
push
in
or
xchg
jb
stc
icebp
mov
ficomps
loope
fcoml
sbb
jl
not
dec
int
inc
pop
xchg
rclb
je
inc
rolb
fs
leave
add
xchg
cmp
pop
jp
sahf
push
sub
mov
insb
lahf
stos
incb
dec
in
iret
packuswb
inc
xlat
dec
mov
loopne
lcall
mov
xchg
push
push
or
xor
xor
das
rorb
out
jg
fwait
or
adc
adc
ja
sub
push
sbb
fsub
cltd
lcall
js
idivb
mov
in
sub
add
and
inc
add
pop
sbb
leave
xor
inc
mov
dec
add
sub
add
mov
cmpsb
add
insl
cmp
dec
popl
cmp
lock
nop
int
add
push
or
add
xor
fs
bound
sbb
cmp
loop
add
mov
cmc
add
iret
inc
xchg
push
cmp
push
repz
add
and
lock
outsl
sub
add
xlat
pop
shlb
pop
xor
insb
add
xchg
or
add
inc
rolb
rolb
repz
jecxz
push
test
xor
enter
popl
add
xchg
push
repz
sub
dec
adc
add
cmpsb
dec
xchg
sbb
sub
insb
andb
test
inc
push
cmc
clc
insb
xor
popf
fst
jp
jb
mov
and
xchg
imul
pop
fmull
std
sbb
cli
mov
sti
cltd
pop
xor
or
dec
inc
sbb
fildll
inc
sub
mov
lret
daa
add
xchg
mov
into
push
add
subl
push
add
out
enter
pcmpgtb
push
cs
add
sbb
ret
jns
pop
movsl
movl
pop
call
addb
push
adc
out
mov
rorl
xlat
dec
in
mov
mov
mov
mov
dec
push
push
add
popa
push
arpl
call
and
mov
pop
push
jns
dec
or
out
add
mov
ds
xor
add
jns
and
add
fmull
mov
sbb
in
nop
sub
add
js
lret
inc
pop
aad
pop
pop
into
push
or
add
push
bound
add
and
inc
cld
dec
add
adc
adc
push
and
jne
pusha
or
xchg
mov
cmp
out
adc
jmp
add
leave
fwait
sub
lock
mov
xor
push
je
fildl
xlat
cmp
jb
add
jnp
jo
pop
pushf
add
repnz
fsub
sbb
sub
mov
push
fdivrp
movl
mov
add
adc
pop
neg
add
movsl
stos
mov
add
push
push
roll
mov
ja
psllw
cltd
pusha
or
mov
fsubrl
imul
adc
lret
insb
jne
scas
call
cli
clc
push
dec
sbb
inc
repz
frstor
iret
imul
cmp
sahf
stc
mov
and
shlb
cmc
aaa
sbb
les
sbb
loopne
rol
add
inc
push
add
and
pop
popf
xor
add
int3
mov
and
movsl
pop
or
add
push
lock
js
sbbb
xchg
ds
jo
xchg
dec
mov
cmp
and
popa
xchg
mov
add
pop
pop
add
push
add
negl
add
mov
rolb
fsts
jg
imul
pop
jmp
iret
pushf
and
inc
popa
lret
sub
xor
cmp
mov
in
dec
xchg
mov
rcr
cs
cltd
dec
add
adc
testb
into
xor
add
mov
or
mov
push
add
pop
dec
and
jb
lea
add
fcomi
push
fwait
test
add
push
xlat
and
xchg
push
lea
pop
outsl
mov
outsb
mov
mov
xchg
les
jecxz
sarl
mov
dec
ret
adc
mov
add
mov
lret
pop
add
push
cmp
filds
pop
cmp
add
add
lret
push
or
and
xchg
sbb
jle
sub
clc
push
cmp
xor
addr16
add
mov
add
insb
outsw
push
jo
and
dec
das
xor
subb
jno
movsb
pop
shrd
std
int3
and
cmp
les
xor
insb
sbb
icebp
and
add
sub
in
cwtl
fsts
jae
insl
into
notb
cmp
or
filds
add
adc
add
scas
shll
push
pop
mov
pop
push
pop
dec
and
mov
push
and
mov
add
out
mov
xorb
xchg
sub
mov
push
push
stos
mov
add
sbb
or
sbb
outsb
pop
shlb
test
and
daa
add
push
test
jg
add
inc
push
add
mov
pop
add
cmp
test
orb
pop
dec
mov
push
fsubr
xchg
mov
cmp
addl
push
add
pusha
mov
ss
shrb
cmp
int3
cmp
pop
adc
cmpl
rclb
rolb
inc
adc
xchg
fs
add
add
outsl
pop
dec
pop
lret
push
mov
push
lock
aam
jp
aas
out
sub
inc
call
test
add
sub
cwtl
add
jns
sbb
mov
add
jle
inc
dec
fdivl
dec
xchg
add
cli
in
das
iret
add
rcr
addr16
sbb
ret
jmp
xorl
mov
das
inc
dec
xchg
or
sti
add
push
outsl
mov
sbb
push
mov
xor
jae
lds
and
xor
test
add
xchg
push
addr16
pushf
adc
and
xchg
inc
pop
ljmp
dec
add
aad
cmp
hlt
sbb
sbb
mov
mov
sub
add
mov
hlt
add
push
dec
shrb
add
push
mov
push
int3
or
add
les
cmc
jno
xchg
aas
xchg
jge
mov
pushf
jne
in
cmp
data16
and
inc
push
loop
mov
pushf
jne
inc
pop
add
mov
jecxz
pop
aaa
lcall
sbb
cmp
aaa
or
bound
xchg
pop
call
aam
mov
lods
out
sbb
scas
mov
mov
addr16
xor
mov
andb
stc
mov
jae
cmpsb
imul
out
xchg
es
mov
sbb
test
fneni(8087
adc
dec
pop
mov
popf
mov
shlb
mov
sub
pop
fidivrs
adc
ret
call
adc
and
jo
or
sbb
inc
jge
mov
ud0
mov
and
pop
adc
push
or
clc
add
jbe
push
add
xor
js
mov
mov
jg
mov
jmp
out
std
mov
pop
xor
shll
roll
stos
push
mov
mov
out
imul
add
mov
mov
or
dec
test
loope
add
xor
scas
lahf
push
addb
push
and
mov
mov
addr16
adc
dec
lahf
jne
pop
xchg
mov
fildl
outsl
jb
or
adc
repz
and
adc
xor
mov
mov
outsb
mov
lcall
and
or
inc
cmp
jo
inc
sbb
xor
jns
or
fs
sub
and
adcl
movb
leave
push
push
pusha
jl
loopne
and
leave
dec
add
cs
add
sbb
jle
add
cmc
pushf
in
cmpb
lock
mov
icebp
mov
dec
test
sbb
cmpsb
sub
mov
movsb
outsl
jp
jno
mov
add
push
inc
mov
push
add
jg
out
xor
jb
mov
aam
xchg
pop
sarb
add
or
add
push
test
cmpsb
mov
xchg
add
xor
cs
es
dec
xor
scas
push
fldt
arpl
xor
or
mov
push
add
iret
daa
adc
dec
push
sub
sahf
or
mov
pop
js
getsec
vcmpss
insb
inc
fisubrl
add
iret
mov
dec
push
or
test
sbb
mov
stc
jle
pop
and
nop
jo
or
add
xchg
test
add
sub
or
out
cmp
inc
orb
add
jno
mov
add
xlat
sbb
jge
bound
jb
jp
rclb
pop
out
mov
mov
add
sbb
test
push
outsl
les
dec
jecxz
xchg
adc
pop
or
sbb
mov
mov
dec
cmp
pop
push
fisttps
call
js
mov
add
sbb
insl
adc
ljmp
sbb
pop
mov
movsb
fcmove
pop
cmc
jb
bound
inc
pop
xchg
mov
cld
push
lods
andb
dec
dec
popa
jne
inc
test
fcmove
adc
sub
imul
adc
mov
adc
jge
stos
cmp
mov
add
mov
gs
mov
push
add
push
add
ss
mov
jg
adcb
lods
add
fistl
imul
mov
dec
add
outsl
sbb
add
ret
jbe
add
lahf
fwait
cs
push
sbb
mov
das
aaa
test
cmp
jg
push
and
pop
xchg
sbb
loop
andb
lods
sarb
jge
stos
lock
arpl
add
int3
mov
mov
aad
jmp
nop
add
fsubrl
jnp
inc
push
out
add
jbe
mov
push
push
add
sub
dec
cmp
cmpsb
int
mov
les
fildll
sub
imulb
stos
pop
xlat
stos
sub
outsb
add
cmp
popa
sub
nop
adc
aad
push
addb
sti
addr16
adc
mov
arpl
stc
pop
push
testl
hlt
or
or
pop
repz
rorb
mov
push
lock
dec
cs
mov
pusha
ret
pop
outsl
push
mov
aaa
andb
add
pop
pop
add
les
push
leave
lock
jle
shlb
popf
adcl
pop
mov
lock
pop
pop
jns
test
mov
mov
add
or
pop
add
cld
dec
in
inc
flds
ret
fisttps
mov
xlat
mov
inc
add
push
cmc
aam
xchg
sub
cmpsl
loopne
add
sbb
push
jb
loope
push
add
pop
loopne
lock
sbb
outsb
xchg
jg
cld
pop
clc
fidivrs
push
icebp
ror
add
mov
pop
mov
push
push
and
or
insb
jl
pop
jg
fadds
sbb
cmpsl
or
push
fistpll
xchg
sbb
fdivl
data16
adc
xor
jne
jno
push
push
hlt
mov
mov
cmp
mov
out
ret
cmpsl
add
and
cwtl
mov
add
out
cli
inc
cmp
inc
movsb
sbb
mov
cmpsb
popa
gs
add
or
jnp
pop
test
out
rolb
mov
push
mov
test
cmp
mov
add
insb
test
lock
inc
xchg
pop
add
or
cmp
mov
push
adc
add
int3
rolb
add
xchg
loopne
jae
add
ret
fiaddl
fdivl
paddusb
insl
xchg
xor
mov
mov
imul
lds
cld
sti
xchg
add
adc
inc
mov
and
push
adc
pop
push
inc
test
sub
push
and
mov
add
mov
enter
pusha
es
jmp
add
cld
dec
test
in
push
pop
lret
aam
add
idiv
push
int3
pop
mov
mov
scas
nop
lret
fs
dec
or
add
pusha
pop
inc
loopne
add
push
out
movsl
sbb
inc
xor
xchg
shr
add
xlat
mov
into
popf
push
mov
pop
test
stc
fninit
movsl
mov
sub
aas
ret
cmp
nop
push
push
test
xorb
pop
inc
xlat
push
adc
andb
add
fmuls
es
add
jns
aam
pop
shrb
or
fwait
leave
stos
push
add
jmp
out
mov
sbbl
push
pop
push
sub
test
mov
mov
add
pop
call
cmpsb
mov
fisttpl
xchg
pop
inc
shll
outsl
add
sarl
add
jge
nop
dec
add
movb
add
pushl
ds
lods
add
test
fdivs
insl
pop
fsubr
dec
test
and
add
data16
sub
xor
xchg
fiaddl
mov
jno
cmp
loop
icebp
dec
daa
test
mov
and
dec
lods
shlb
es
jb
repnz
inc
add
pop
mov
ss
fildl
or
adc
push
lods
call
cld
inc
add
and
fstpt
jb
in
push
or
insb
add
push
push
orb
in
les
fs
jg
sbb
push
bound
add
sub
rolb
pop
cmpsb
subb
rcll
repnz
or
cmp
push
aas
dec
iret
testl
jno
sub
lods
push
imul
mov
test
into
mov
add
dec
pop
pop
mov
and
adc
jmp
jecxz
pop
add
push
test
out
and
add
add
int3
mov
mov
xchg
xor
jle
enter
lret
fwait
sahf
lock
leave
out
add
add
and
push
xor
cmpsl
sub
out
cmc
loopne
mov
xor
add
or
iret
or
lret
and
jno
add
stos
pusha
rol
xchg
je
xor
add
sub
add
mov
pop
sbbb
sarl
dec
xrelease
lcall
cwtl
adc
pushf
sbb
mov
fucomi
xor
add
movsb
mov
pop
sbb
mov
add
ja
into
out
pop
daa
jecxz
add
nop
ds
or
repnz
sahf
jo
mov
cs
or
popa
mov
jo
andl
mov
pop
lock
sbb
xchg
fcomps
imul
add
pop
ja
sbbb
dec
mov
jbe
addb
jae
sbb
or
sbb
fsub
adc
mov
dec
cmp
subb
popf
lcall
push
jp
add
xor
jnp
shlb
add
jmp
lret
xor
outsb
jle
dec
jl
add
mov
xchg
daa
jl
dec
and
push
lret
xor
lahf
add
pop
cmp
add
and
jle
add
dec
ret
mov
cmp
leave
test
cmp
push
ja
xchg
add
pop
cmpsb
stos
or
test
sbb
lock
mov
add
push
jno
xchg
or
jo
fadds
xchg
or
sbb
mov
cmp
subb
sbb
sub
jno
rolb
adc
movsb
iret
add
sub
test
popf
imul
xchg
push
jnp
into
cmpsl
xchg
xor
push
mov
out
mov
sub
add
or
pop
inc
popl
adc
aaa
push
xor
test
add
ds
lcall
mov
mov
add
pop
pop
or
add
jg
fistl
cmp
mov
push
xor
push
push
sbbb
adc
jns
sbb
test
adc
inc
dec
pop
shll
dec
jl
push
or
std
xor
jg
icebp
jo
inc
xchg
mov
pop
cmp
push
mov
add
mov
cwtl
data16
add
xlat
repnz
push
mov
or
rolb
imul
movsb
add
and
push
mov
dec
push
xor
nop
int
add
add
std
xchg
pop
rol
add
pushf
stos
in
test
decl
inc
lahf
or
bound
gs
inc
jecxz
ret
icebp
add
das
stos
in
and
jo
add
push
sbb
add
out
cmp
dec
xorb
sub
mov
add
xor
in
hlt
test
inc
push
mov
xor
popa
xchg
adc
sbbb
repz
pusha
test
xchg
jbe
add
aas
pop
enter
mov
repnz
imul
lcall
jo
movsl
add
cmp
push
add
or
cmp
adc
and
scas
dec
xchg
outsl
hlt
pop
call
cmp
loopne
push
xor
add
mov
out
cmp
ljmp
and
dec
cmpl
adc
cmp
jle
inc
ret
cwtl
fadds
aaa
dec
shlb
xor
mov
pop
stc
cmp
sub
movsb
js
imul
sbb
je
add
cmp
cmc
pop
mov
loopne
loopne
push
mov
jae
add
aam
xchg
dec
mov
and
das
add
outsb
jb
fmuls
or
loop
push
push
add
inc
incb
push
loope
outsb
xor
leave
pop
adc
aad
js
jnp
jne
add
mov
adc
out
add
mov
jnp
mov
mov
pop
pop
test
sbb
mov
cmp
inc
ds
dec
movsl
inc
mov
sbb
jle
fstl
xchg
mov
add
das
aas
jo
mov
je
dec
push
pop
ficomps
inc
xor
and
sub
imul
rcrb
sub
hlt
adcl
pop
movsb
int3
sub
add
inc
add
aaa
or
xchg
or
jge
leave
ret
add
push
mov
jne
add
cli
cmp
mov
fwait
inc
rolb
cmpsl
test
sbb
or
jno
rolb
or
mov
mov
jno
daa
lods
pop
iret
nop
aas
popa
fnstcw
sub
xor
cld
mov
subl
mov
xchg
dec
jno
stos
pop
sub
sbb
add
jmp
popf
orl
add
pop
xor
sbb
mov
cmp
adc
mov
xchg
std
and
cmp
lock
add
pushf
addr16
add
or
pop
ret
jnp
xlat
repz
clc
add
aam
js
cld
cmc
jg
dec
cmp
and
imul
in
add
incb
out
cmp
add
imul
loope
jge
jae
sbb
lock
add
rolb
leave
pop
ja
int3
dec
aas
inc
add
test
inc
dec
add
outsl
adc
mov
leave
outsb
xchg
shr
pop
fwait
add
in
push
inc
daa
add
mov
cmp
xor
in
pushf
inc
roll
cmp
mov
out
dec
xchg
push
aam
xchg
jge
jo
call
daa
dec
push
test
and
fsub
cmpb
les
or
enter
jmp
ljmp
cwtl
cld
push
xor
inc
and
xchg
add
out
mov
or
cmp
ret
imul
sbb
mov
mov
mov
dec
adc
push
iret
out
inc
jp
lds
orb
add
arpl
mov
mov
add
sarb
std
adc
lret
mov
xor
aaa
add
jle
lock
mov
or
or
adc
fcomp
lret
add
ret
push
adc
in
pop
and
push
push
sub
pop
inc
daa
add
inc
insl
or
xor
addb
pop
les
add
pop
out
jb
lods
mov
jne
fwait
xor
shlb
push
cmp
cmp
xchg
lods
mov
cli
dec
xchg
sbb
adc
mov
maxps
inc
adc
push
mov
adcb
push
mov
cmp
test
pop
jne
or
dec
lock
add
out
add
and
fisttps
cltd
jecxz
insb
and
cmc
add
sarb
fxch
sbb
imul
scas
movsl
and
or
dec
xor
sahf
cld
xor
xchg
mov
inc
jns
jbe
add
lret
mov
cmpsl
test
ret
push
and
subl
sub
pusha
mov
add
ss
pop
mov
xor
and
hlt
enter
ja
fdivr
pusha
mov
push
and
hlt
faddl
adc
lret
push
xchg
daa
xchg
inc
and
fisttpl
mov
test
ret
pop
inc
cs
add
out
add
lret
lods
int
cmp
push
loop
push
test
aas
shlb
inc
js
adc
cld
dec
cmp
xchg
faddl
dec
test
push
add
icebp
mov
jno
cli
pushf
add
test
outsb
fdivrs
jns
out
cvtps2pi
aas
xlat
dec
daa
mov
xchg
dec
add
test
sbb
gs
ljmp
out
adc
lahf
loop
es
ltr
jecxz
mov
add
jne
sbb
cmp
jnp
bnd
idiv
and
add
pop
xchg
inc
sbb
sarl
scas
mov
shlb
push
inc
lret
xor
ror
ja
dec
cmp
xchg
add
ret
mov
jns
mov
xor
int3
push
fldcw
cltd
jge
movb
add
and
jae
push
adc
xor
out
or
gs
into
ja
mov
mov
loop
lret
popf
dec
sub
rorb
in
je
pushf
out
add
ret
inc
inc
jo
cmp
movsb
add
rcrb
mov
shrb
fcomps
sub
xchg
cmp
sbbb
orb
orl
fstl
popa
ds
add
out
mov
scas
movsb
xchg
add
dec
xchg
scas
or
andb
mov
sbb
pop
clc
xor
jmp
add
xchg
sub
test
lods
pop
add
cmpsl
jo
lcall
mov
lahf
add
dec
fadd
stc
xor
add
sub
inc
xor
insb
add
das
rolb
roll
jbe
cmp
lret
psubd
orb
push
push
mov
out
adc
sbb
jge
in
add
std
aas
mov
gs
mov
sbb
or
push
jnp
movl
sbb
or
jl
in
das
sub
mov
lcall
cs
jo
lods
icebp
fidivl
lock
stos
jmp
cmp
jecxz
addb
add
xchg
mov
add
test
cld
dec
add
mov
clc
and
lock
xor
pop
outsb
mov
in
xchg
pop
add
jae,pt
adc
insl
pop
pop
cli
sbb
jge
push
aaa
mov
cld
roll
daa
lahf
int
mov
aad
in
mov
xchg
push
fwait
cmp
cwtl
lds
movsl
repz
loop
cmp
inc
mov
jb
in
mov
pop
add
cmp
xchg
std
sarb
cmpsl
mov
push
cmp
add
mov
xchg
loopne
mov
cli
leave
in
cmp
orl
pop
fisttpl
push
fisubrl
mov
mov
adc
cmp
jae
add
xor
bound
xor
icebp
push
and
lcall
repz
call
sub
cmp
mov
cmp
int3
add
mov
iretw
mov
pushf
add
push
sub
xchg
adc
xchg
xchg
loopne
add
mov
push
das
data16
lret
jbe
inc
loope
mov
sub
out
and
jns
lret
cmp
addb
add
add
fsubl
sarb
flds
or
out
push
cltd
and
cld
cmovs
daa
icebp
orl
mov
hlt
js
xchg
push
sbb
clc
jnp
mov
lea
mov
sub
shrl
dec
je
adc
mov
and
lret
and
fwait
mov
add
xchg
popf
push
in
and
sub
fiadds
jae
or
out
cmc
push
pop
dec
jg
pop
fsubs
fadds
fs
mov
jg
in
push
jp
xor
sbb
mov
in
sub
mov
lret
adcl
ss
cmp
mov
mov
test
adcb
adc
or
mov
and
mov
cltd
push
push
jno
add
int3
enter
test
or
pop
or
xor
add
lcall
int
aas
xor
bts
gs
pusha
into
cmp
ja
in
push
fldenv
lret
cmpsl
orb
xchg
xchg
add
lea
lds
mov
mov
addb
add
pop
dec
ret
mov
in
fs
add
push
movhps
test
jle
add
std
pop
mov
jne
dec
fisttpll
dec
push
mov
std
sub
cmp
add
mov
pop
jle
jno
cmp
mov
pop
jl
mov
clc
sbb
ud2
lea
ficoms
aad
out
adc
cmp
int3
jle
or
mov
sbbl
pop
aas
xor
xor
outsb
add
scas
fbld
push
orb
mov
repz
iret
mov
add
stos
mov
pusha
xchg
inc
daa
mov
jmp
fs
add
aad
test
in
sub
lock
mov
cmp
adc
add
sub
cmp
xchg
add
rcr
nop
roll
dec
adcb
pop
adc
hlt
divb
cmp
add
lret
inc
jge
add
call
or
adc
mov
pmulhuw
add
jle
and
sub
jo
popa
cmp
push
into
mov
jnp
adcb
and
repnz
aad
and
push
add
in
int3
enter
cmpsb
and
add
cltd
xor
add
dec
les
mov
inc
add
adc
jp
mov
lock
mov
icebp
mov
dec
cmp
pop
js
or
and
roll
mov
or
leave
dec
jle
add
add
cli
fidivrs
clc
roll
push
adc
les
pop
std
jecxz
fdivrs
jmp
dec
add
xchg
sub
pop
inc
fnstcw
insb
add
test
cmpsl
addl
fsubl
inc
sub
and
lds
add
push
xor
xchg
shl
stc
add
dec
ja
add
sbb
add
xor
lds
pushf
push
push
in
adc
sbb
xchg
and
add
push
adc
add
in
fsubs
test
push
leave
xor
data16
int
mov
and
imul
flds
mov
adcb
loopne
outsl
add
movsb
and
jge
rcrb
add
xor
aaa
test
xchg
add
adcl
jns
add
jae
sbb
jp
adc
lods
inc
jnp
xchg
lods
add
inc
dec
push
out
test
push
add
pop
xchg
clc
adc
cs
mov
mov
in
xor
dec
mov
cmp
out
sbb
shrb
fiaddl
sbb
mov
or
gs
dec
sbb
mov
enter
dec
add
stos
pop
fneni(8087
jecxz
push
loope
test
pop
push
xchg
add
in
in
jns
adc
and
adc
int3
xchg
ds
adc
mov
repnz
or
xor
adc
mov
cmp
jl
nop
sbb
mov
je
cmp
dec
jne
lahf
pop
or
fucomi
lcall
fdivl
lods
xor
fs
lods
xchg
mov
and
ja
add
or
hlt
xchg
pusha
andb
enter
aam
rol
cmpsl
popa
in
jmp
dec
jo
pop
test
andb
ljmp
aam
dec
cltd
push
add
mov
push
aaa
test
fwait
pop
in
int
mov
call
add
fwait
pop
mov
inc
push
test
xchg
inc
jnp
mov
lcall
test
adc
inc
fdivl
fisttps
ljmp
xor
jno
or
mov
inc
pop
addl
pop
mov
ret
addb
add
dec
daa
mov
sbb
cmp
dec
pop
mov
dec
or
cltd
mov
out
test
jmp
subb
mov
or
daa
dec
pop
mov
push
inc
xlat
shlb
or
cwtl
pop
add
push
not
aaa
push
stos
fadds
cld
testl
xor
mov
mov
inc
or
mov
xchg
sub
mov
sbb
add
fldl
adc
pop
lcall
fwait
std
lret
inc
adc
pusha
pop
out
add
xor
xor
fldl
add
out
xchg
cmpsl
dec
adc
dec
ds
adc
cmp
add
out
ss
jae
dec
mov
out
daa
add
loope
mov
imulb
or
ss
adc
inc
pop
inc
mov
ja
jb
add
cwtl
scas
lea
call
fsubs
pop
add
cmp
lods
adc
and
call
jle
push
std
in
ljmp
and
enter
push
lods
test
out
add
je
daa
popa
and
xor
dec
pop
pusha
cmp
rolb
sub
sbb
jno
adcb
pusha
jmp
loopne
add
sti
mov
in
mov
pop
push
in
xchg
es
pop
fsubrs
sbb
inc
sbb
out
mov
or
dec
mov
inc
imul
jmp
hlt
xor
mov
je
add
iret
fcoms
mov
sbb
mov
call
test
clc
inc
xorb
js
inc
lahf
pushf
arpl
push
xorl
inc
inc
ja
cli
cmc
add
and
shrb
fistl
mov
repz
jl
xchg
jbe
andb
mov
call
add
andb
movsl
cmp
sbbb
mov
add
ljmp
mov
cmp
mov
out
add
or
add
jmp
xor
int3
stc
add
cmc
push
punpckldq
lods
loop
adc
mov
arpl
inc
lods
loop
mov
ficomps
sub
sbb
push
dec
test
aas
xchg
stos
aad
pop
and
cmc
mov
mov
and
sahf
dec
cmp
fisubl
push
add
scas
or
adc
or
ud1
mov
loope
or
sbbb
int3
filds
insl
pop
xchg
or
pop
xor
in
add
aaa
mov
sbb
or
mov
inc
sbb
dec
aad
and
insl
movsb
mov
dec
add
frstor
sub
xchg
stc
xchg
rcrb
ds
and
sbb
mov
mov
ljmp
loopne
sub
out
mov
add
dec
test
movsb
xor
adc
mov
and
jb
and
das
add
xor
dec
dec
stos
addl
daa
mov
inc
sbb
or
shrb
push
xchg
mov
sub
lret
pop
add
testb
cmp
add
add
add
in
push
pop
test
movsb
cmp
adc
ret
add
dec
outsb
daa
clc
inc
add
cmp
add
add
insl
xchg
mov
mov
add
in
movsb
mov
int
and
popf
add
jae
mov
aam
mov
inc
mov
test
sub
push
out
fildl
add
rorb
xor
cwtl
pop
ret
mov
lds
shrl
gs
cmpsl
add
inc
sti
aas
lret
lea
add
out
inc
or
sub
adc
dec
inc
sub
add
inc
fdivrl
in
jb
sub
mov
or
jmp
mov
movsl
repz
shrb
add
test
xchg
je
arpl
dec
scas
addb
lahf
sti
mov
inc
clc
sbb
adc
or
xor
pop
and
dec
out
xor
movsb
sbb
dec
stos
call
push
mov
stc
ja
fdivl
dec
ds
adcb
stos
add
push
rolb
popa
push
adc
sbb
shlb
push
scas
add
lds
push
xor
decl
add
cmpsl
les
sub
add
fstl
pop
pop
xchg
popf
pushf
into
mov
fistps
jo
add
add
and
out
pop
mov
sbb
jbe
add
cmp
jnp
or
mov
incb
cmpsl
repnz
aas
cmc
sahf
mov
pop
dec
jmp
pop
pop
test
nop
inc
rolb
out
add
dec
push
adc
rolb
jg
test
cmp
jns
mov
aas
add
sub
push
shl
pop
and
xor
xchg
shlb
daa
and
testb
mov
and
verw
lcall
sub
outsb
notl
or
jp
movsl
fiaddl
cli
mov
adc
ja
out
pop
scas
xchg
dec
cmp
clc
cld
lret
mov
into
and
add
imul
mov
cmpsl
xor
mov
call
inc
pop
in
enter
das
add
and
aad
scas
pop
andb
ljmp
out
xchg
add
mov
add
and
add
xchg
cmp
popf
pop
mov
jnp
mov
pop
nop
hlt
add
lods
xchg
push
fwait
xor
xchg
add
addr16
sub
and
mov
sar
mov
jecxz
out
and
and
pop
mov
add
sbb
pop
negb
xor
jmp
clc
ret
repz
jne
out
mov
fidivs
mov
sub
fsubl
add
cmp
xor
sub
mov
xchg
adc
cwtl
xchg
ja
sub
jmp
mov
orb
cwtl
les
addr16
xchg
dec
xor
imul
push
subb
mov
or
enter
inc
in
hlt
cmp
add
add
pop
push
mov
xor
dec
stos
add
int
and
jmp
into
or
adc
les
sub
das
int3
jecxz
mov
xchg
test
lock
sahf
add
icebp
testb
or
cmpsb
insb
fcoms
clc
add
jb
push
inc
test
or
out
outsb
mov
xor
mov
dec
add
repnz
test
andb
xchg
add
notb
fistpll
scas
xchg
push
add
mov
fprem1
or
jb,pn
lcall
stos
in
ja
sti
jmp
fwait
test
add
iret
outsl
jge
cmpb
jmp
add
sub
add
jo
and
mov
jl
movlps
inc
cld
mov
cmp
pop
pushf
sbb
or
ja
pop
push
data16
jl
hlt
call
xchg
in
lea
cmp
jo
mov
loope
xchg
pop
xor
stos
cmc
and
jp
or
jno
rcll
pop
loopne
cltd
add
les
add
cmp
push
lock
add
sbb
mov
cwtl
xchg
pushf
addr16
stc
rcl
add
outsl
inc
sarl
outsb
pop
out
mov
push
and
lretw
push
bnd
add
xchg
add
mov
fwait
loope
xchg
pop
push
fdivs
xchg
aad
dec
jb
push
cmp
or
fldt
add
subb
xchg
add
mov
repz
add
int
pop
adc
out
add
xchg
divl
dec
xlat
clc
daa
test
dec
xor
mov
aas
push
push
fstpt
ds
out
dec
enter
add
pop
inc
fidivl
cmp
inc
fistps
lea
ja
fcom
je
inc
push
out
popa
mov
test
lret
pop
dec
aaa
jl
scas
pop
dec
ljmp
lds
mov
jo
jno
stos
add
xor
or
popa
fldl
fcoms
or
add
push
add
push
mov
in
sbb
pop
pusha
mov
popf
add
lds
xlat
dec
idivb
sahf
sbb
mov
push
push
std
or
fidivl
inc
push
sbbb
shll
outsl
flds
sbb
leave
pop
adc
test
out
rcrl
add
cmp
mov
sbb
arpl
pusha
mov
call
push
addr16
add
fstpt
add
das
ja
push
call
sub
mov
add
fstp
fiaddl
gs
dec
xchg
lret
cmp
sahf
push
adcl
add
pop
rcrb
add
test
into
cmp
aas
add
test
cld
cmc
xor
pop
add
add
fs
int3
inc
xor
pop
nop
and
lds
mov
in
call
stos
xchg
cmp
mov
ds
add
inc
repnz
mov
dec
add
pop
sub
mov
add
fnstcw
test
pusha
scas
mov
push
int
mov
xchg
push
and
add
add
dec
sub
dec
add
lods
sbb
es
in
jo
popa
add
ds
repnz
addl
or
jae
dec
int
sbb
cmp
adc
push
mov
jle
add
jb
ja
pop
mov
and
hlt
mov
add
je
gs
in
jg
add
imul
adc
roll
jmp
sbb
add
or
imul
adc
in
add
mov
jbe
cs
add
sub
dec
cmp
popa
push
invd
pop
adc
lea
inc
dec
push
xchg
add
icebp
insb
cmp
sub
add
adc
in
out
or
popa
jecxz
std
add
jge
into
and
add
xor
add
hlt
scas
ficoms
js
clc
push
or
std
loop
inc
cli
add
aad
cmp
cmc
pusha
or
enter
jmp
sbb
or
cmp
or
adc
mov
fdivrl
test
call
mov
dec
cmp
cmp
jne
rcrb
jecxz
pushf
jne
cmp
or
test
or
cmp
testb
call
loopne
jo
popa
rorb
add
add
pop
and
cmp
cmp
push
and
frstor
cmpsl
movb
stos
jne
aaa
out
jns
add
push
aam
sbb
sbb
mov
jmp
lret
push
sbb
or
mov
jb
enterw
cmp
aaa
xor
enter
add
lods
bound
fldl
xor
jmp
imul
shrb
mov
jle
sbb
or
dec
cmp
adc
pop
mov
out
lea
and
inc
repnz
cmpsb
ja
cld
jg
aam
and
xor
pop
adc
add
int
hlt
negl
shrb
add
add
stos
ja
clc
add
cmp
dec
xor
icebp
cli
out
loopne
into
cvtps2pd
ss
or
enter
and
setno
pop
scas
ret
sub
jg
push
add
sub
or
mov
mov
ficomps
ja
in
jns
sbb
jg
enter
outsl
jl
and
push
out
pop
inc
jne
pop
aas
pusha
lret
inc
int3
push
jbe
icebp
cli
add
std
mov
addr16
adc
pop
rcl
hlt
repz
sbb
cli
and
adcb
add
and
dec
aam
shll
fidivrl
xchg
adc
xor
sbb
and
sub
add
push
mov
fldl
ss
lret
aad
shlb
in
xor
rclb
hlt
decb
push
loopne
sbb
push
mov
and
call
dec
mov
add
aam
stos
add
push
leave
add
mov
sbb
sbb
sbb
mov
mov
fisubs
popf
add
xchg
pop
mov
adc
sub
cmp
push
orb
lods
and
jne
xor
imul
enter
mov
cmc
loopne
lock
xlat
and
adc
and
int
sbb
adc
pop
lock
xor
mov
or
xor
sbbb
add
sub
pop
xor
jmp
xorl
inc
jns
pop
add
aad
dec
pusha
cmp
ret
push
add
xlat
sbb
fldcw
adc
notl
mov
sahf
adc
pop
cmpsl
nop
add
xor
pop
and
or
ja
ret
sbb
mov
pusha
in
add
sbb
mov
cmp
sub
push
fidivs
out
xor
lret
data16
mov
or
adc
jge
loope
mov
cmpsb
mov
addb
or
pop
or
add
adc
mov
sub
pop
lods
nop
add
push
fsubrs
adc
loopne
inc
imul
add
cvtpi2ps
mov
mov
add
xlat
cld
out
dec
popa
fsubs
cmp
and
mov
out
or
jg
and
mov
xchg
push
pop
out
or
cmc
xlat
nop
and
push
mov
iret
out
push
inc
popa
lock
imul
pusha
stos
shll
shrl
sbb
dec
cld
scas
nop
and
add
xor
nop
dec
pop
mov
shlb
aad
call
or
lret
nop
push
ret
mov
js
repnz
add
adc
cli
pop
mov
add
and
or
pop
loopne
sub
mov
jb
adc
push
nop
in
sbb
clc
pop
and
shlb
pop
cmp
lock
adc
std
js
nop
ss
add
jns
cs
rolb
adc
popa
mov
adc
stos
add
icebp
adc
rcrb
jne
notl
jno
int3
mov
enter
lods
and
shll
jns
adc
rcrb
hlt
int3
ret
adc
add
aam
scas
jb
pop
pusha
push
pusha
add
or
push
adc
cli
js
add
test
cmp
mov
add
pop
loope
mov
pop
adc
or
lea
in
xlat
std
sbb
aad
popa
cli
jge
rcll
add
divb
push
or
insb
aad
mov
fmuls
mov
mov
fiadds
clc
popa
lcall
or
push
cmp
pop
hlt
mov
add
adc
cmpsb
push
or
and
xor
pusha
out
pop
mov
enter
add
out
or
repnz
add
lret
fsts
addl
pop
insb
ja
insb
fmull
inc
xor
add
push
xchg
add
sub
icebp
enter
sbbl
js
add
addr16
mov
xor
sbb
cmc
cli
sbb
hlt
leave
adc
in
enter
add
mov
in
dec
mov
lea
pop
sbb
cmc
movl
test
and
cld
cmp
and
scas
in
ret
add
and
xchg
mov
jecxz
dec
mov
rcll
or
inc
mov
icebp
or
mov
mov
push
test
sbb
inc
mov
test
ret
inc
ja
add
adc
cmp
cmp
pop
push
pop
inc
test
add
dec
jo
in
pop
mov
push
cmpl
dec
mov
pop
mov
pop
or
stos
push
xor
in
add
pop
add
xchg
push
mov
dec
repnz
fs
add
nop
arpl
cmp
jns
add
shl
lret
nop
jge
xchg
sbb
std
sbb
push
sub
ss
add
dec
inc
mov
inc
add
imulb
call
xchg
mov
loopne
push
sarb
add
mov
add
or
testl
rclb
sub
cmp
add
stos
adc
fwait
xchg
rclb
test
fstpt
ljmp
loope
pop
push
push
subb
sbb
dec
addl
clc
xor
mov
mov
lret
inc
pusha
iret
icebp
add
aaa
addr16
divb
add
cmp
sbb
sbbb
mov
add
dec
mov
pop
jl
int
test
sub
jecxz
add
jnp
jmp
inc
adc
mov
test
fnop
lock
push
repnz
add
push
adc
pop
push
push
or
cmp
inc
adc
cli
add
dec
testl
sbb
and
dec
add
ficomps
adcl
jp
insb
mov
jno
sub
xchg
inc
pop
add
es
inc
cwtl
add
xlat
add
rcr
icebp
adc
or
push
push
in
push
fbstp
pop
inc
sub
jecxz
xor
andb
fsubp
fxam
mov
xor
add
xchg
push
xor
sub
xchg
sti
mov
sahf
lods
adc
out
movsw
adc
mov
mov
hlt
add
nop
testb
jecxz
add
add
popa
mov
push
jg
lcall
imul
mov
sub
fdivrs
push
pop
mov
dec
inc
mov
data16
add
sahf
adc
cwtl
ja
mov
pop
outsl
dec
add
addr16
push
repnz
and
push
sahf
add
jnp
test
mov
cmp
jmp
in
int3
add
lds
sub
insb
in
mov
add
pop
aam
mov
sbb
pop
cld
pushf
mov
repz
push
pop
mov
adc
loop
or
add
sbb
push
add
cmp
and
imul
das
push
jg
jbe
add
jo
lock
add
sub
fistl
int
sbb
shll
push
in
pop
lock
add
mov
mov
jmp
cmpsl
add
cld
cmp
and
aas
add
leave
outsb
in
rclb
dec
mov
loope
mov
push
sbb
add
out
xor
aam
int
sbb
add
add
inc
test
add
xchg
and
ljmp
lea
int
xor
in
negb
aaa
mov
add
loope
sub
jne
add
jmp
xchg
jle
repnz
add
out
xchg
sbb
adc
and
mov
popa
xlat
int
cmp
dec
adc
adc
shlb
in
push
orb
pop
js
sub
add
ljmp
push
xchg
and
add
xor
mov
pop
jecxz
fld1
pushf
ja
ret
add
mov
loopne
add
push
cmpb
or
ffree
stc
xor
or
inc
clc
xchg
in
adc
sub
push
ja
mov
call
mov
and
mov
xor
add
bnd
add
dec
and
xlat
cmp
add
addb
or
xchg
pop
les
push
pusha
add
xor
dec
mov
je
mov
test
mov
and
jns
popa
inc
mov
add
test
dec
or
inc
pop
lock
pop
jae
add
and
add
fdivr
addr16
jno
jmp
daa
vpshufb
adc
loope
xor
sbb
push
xchg
inc
mov
sub
nop
inc
mov
inc
xor
test
xor
sub
add
js
les
cmp
add
in
sbb
adc
or
jl
sbb
mov
pop
ficompl
call
adc
or
loopne
pusha
inc
and
rcll
sbb
cld
add
pop
leave
xor
mov
pop
pushf
or
xchg
mov
lahf
add
jns
loop
test
push
jle
dec
inc
cmp
add
dec
stc
movsb
cltd
jb
add
cwtl
mov
cmp
inc
pop
aaa
mov
or
sub
xchg
xor
fcomps
mov
int
and
mov
pushw
aam
test
rcl
andb
fstpt
sti
pusha
fisubrl
jno
rclb
dec
in
add
fs
xchg
nop
sub
pop
xchg
test
into
lock
movsl
in
dec
add
mov
mov
add
mov
jl
lcall
fcompl
cmc
mov
xor
pop
pop
mov
xchg
pop
mov
aaa
inc
or
mov
addr16
jl
cmp
add
int3
mov
cltd
or
test
pop
aaa
or
add
repz
inc
out
mov
loopne
dec
in
xchg
push
add
pusha
xor
add
mov
mov
add
daa
adc
insb
pop
and
repz
add
enter
ja
lahf
cmp
sub
je
and
js
push
or
call
xchg
packssdw
adcl
cmp
ret
sbb
mov
scas
sbb
stos
pop
insb
pop
enter
pop
xchg
mov
orb
xchg
add
xor
adc
xchg
pop
xchg
lret
pop
dec
mov
pop
pop
inc
cmpb
ret
icebp
mov
cmp
and
inc
mov
xor
lcall
dec
sub
jle
push
fs
or
mov
jno
loop
insb
add
cld
sarb
rolb
in
or
jmp
sbb
sti
aam
or
jb
fcoms
shrb
jle
add
or
add
mov
das
jno
adc
mov
add
adc
push
int3
xor
sbb
xorb
fadds
add
into
dec
xchg
int3
or
in
push
or
call
dec
xor
test
or
xchg
and
mov
add
inc
jo
negb
jne
cwtl
outsl
and
add
sarb
mov
faddl
repnz
push
inc
jns
pop
lea
cmp
sbb
nop
xchg
lret
push
arpl
cmpsl
das
xlat
lock
hlt
jne
push
add
lret
mov
pop
push
test
movsl
js
sbb
add
or
add
or
jae
dec
dec
aas
push
sbbb
pop
mov
and
add
jmp
pop
imul
mov
call
adc
pop
jmp
xor
mov
popa
add
mov
or
pop
cld
cld
mov
and
mov
insb
arpl
inc
cmpsl
add
xor
rcrb
into
imul
add
xchg
out
movsb
adcl
xchg
scas
test
pop
xlat
es
in
add
roll
jae
stos
in
testl
mov
fs
sbb
movsl
cmp
dec
addr16
mov
adc
stos
add
lock
dec
testl
lret
clc
bound
mov
push
cmp
cmp
xor
jo
hlt
cwtl
push
or
cmp
aaa
stos
xchg
out
and
add
insb
pusha
outsb
mov
jo
icebp
enter
in
adc
mov
or
fxch
or
add
xchg
add
fdivrl
fcoms
mov
loopne
gs
adc
popf
mov
sub
add
push
roll
push
test
add
add
push
mov
scas
add
push
lods
hlt
int
add
pop
jecxz
jnp
mov
out
ret
add
jae
mov
add
xlat
xor
and
out
ss
mov
scas
and
arpl
orb
fistpl
and
sub
push
fsubl
sbbb
xlat
add
push
aam
clc
cwtl
push
call
mov
sbb
ljmp
or
add
cmc
and
pop
mov
push
popf
ret
add
xchg
insl
fcomps
xchg
xor
sbb
je
arpl
sub
insb
call
or
add
cmovnp
add
daa
pop
jle
in
and
add
jl
incb
jno
push
xchg
shlb
or
cmp
je
call
cmpsb
lret
mov
clc
roll
jb
xor
jmp
inc
add
cld
inc
rolb
sbb
pusha
enter
cmc
xor
jmp
sbb
dec
xchg
cli
add
add
cs
add
sbb
add
sub
out
pusha
aam
flds
jp
mov
jnp
push
push
cld
mov
iret
bswap
pop
lcall
sahf
cmp
pusha
or
cmc
pop
mov
subb
sbb
test
stc
add
xchg
add
sbb
push
mov
jbe
rolb
add
and
popf
loope
out
data16
shr
pop
pop
jbe
les
add
and
insb
hlt
add
sbb
sbb
out
ljmp
adc
jmp
push
addb
add
mov
add
fmuls
cmp
inc
fcmovb
push
mov
inc
xlat
mov
mov
jo
call
push
and
lcall
clc
les
lahf
loopne
or
jae
enter
push
add
pop
adc
adc
pusha
movsl
shl
xchg
mov
dec
sub
sbb
jo
imul
ljmp
enter
mov
je
lock
add
stc
add
movsb
shrb
cmp
and
loopne
and
cmp
cs
icebp
loopne
fwait
add
pop
sbb
outsl
add
push
orb
mov
insl
jg
or
test
mov
mov
testl
mov
inc
add
fistpll
icebp
enter
popa
loop
ret
cmp
mov
or
add
mov
lea
push
stos
xchg
das
lcall
xor
sub
fisubl
jge
outsl
push
mov
jp
xlat
pusha
std
out
add
pushf
cmpsb
in
mov
lock
std
push
iret
pop
mov
mov
je
add
sbb
adc
shlb
aas
lods
add
mov
mov
sahf
add
scas
sbb
ds
mov
add
aad
adc
hlt
xor
xchg
lock
jmp
add
pop
add
fidivrl
xchg
add
xor
jecxz
xor
lods
pop
push
sti
sub
adc
mov
add
sub
add
jne
ljmp
fisttps
jb
adc
shll
jne
pop
cmp
loope
adc
btc
and
pop
loopne
mov
adcl
lods
sub
push
imul
lock
iret
pop
push
or
add
mov
pushf
and
rclb
add
push
sub
addb
sub
pop
out
ffreep
cmp
insb
cli
mov
imulb
add
sbb
mov
cmp
sub
push
mov
add
push
fcoms
mov
add
lret
outsb
jg
jmp
out
das
outsl
sti
jne
add
fs
sub
int3
ror
mov
cmp
pop
and
mov
xor
in
stos
cmp
filds
fcompl
pop
ficoml
xchg
lcall
dec
test
ljmp
jne
inc
xor
ja
imul
inc
push
lret
std
or
add
cltd
scas
cmp
and
push
rcrb
in
or
sbb
or
push
add
and
add
imulb
int3
lds
mov
addl
cs
pop
pushf
xchg
lock
inc
jecxz
les
popf
add
loop
cmp
inc
outsl
mov
movsl
mov
sub
inc
les
jg
add
mov
lock
stc
fidivs
mov
lock
fistpl
inc
les
roll
sub
lret
xorb
div
loope
jnp
cld
mov
js
sbb
jno
jl
jbe
pop
mov
fdivr
push
add
lock
adc
aad
in
in
mov
imul
ret
test
inc
clc
add
mov
ja
mov
iret
jecxz
adc
and
add
pushf
push
pusha
cmp
sarb
inc
repz
add
mov
push
cwtl
ja
push
inc
aad
jne
push
add
gs
pop
movsb
ret
call
dec
inc
pop
shll
mov
add
enterw
add
xchg
repnz
iret
in
xchg
add
mov
daa
mov
mov
and
js
sub
shlb
pop
leave
add
pop
fiadds
sbb
int3
mov
push
jne
mov
jecxz
mov
mov
out
pop
fpatan
aam
int3
sub
jecxz
cmp
push
daa
je
sti
add
ljmp
and
adc
pop
aam
repz
adc
ret
add
mov
rcrl
aaa
add
stos
rolb
psubusb
mov
mov
movsb
lods
in
pop
cld
jno
push
sahf
test
add
cmp
xchg
dec
or
adc
jne
add
cmp
out
das
mov
push
add
in
mov
or
loop
insb
add
imul
mov
sub
push
cmpb
in
arpl
sub
int3
add
cmp
inc
mov
mov
or
pusha
lods
js
call
scas
in
cwtl
clc
pop
or
call
cmp
lods
xchg
jne
xchg
das
adc
dec
mov
cmpb
cmc
pop
add
mov
out
or
pop
or
and
add
mov
aas
add
ss
aaa
mov
sbb
sub
mov
push
xchg
cmpsl
in
and
inc
inc
dec
loope
add
mov
push
add
adc
and
jg
je
cli
sbb
imul
add
lret
adc
cmpb
cmpsl
pop
rclb
sbb
lahf
sbb
fimuls
aam
fldcw
lock
or
and
mov
sub
enter
je
add
icebp
push
iret
add
jmp
mov
cmp
mov
movsl
clc
add
pop
jge
shlb
lret
roll
outsl
sbb
pop
clc
loop
ja
add
or
xchg
and
ljmp
sahf
add
loopne
cltd
xlat
push
nop
inc
les
iret
xor
dec
clc
and
pop
add
lret
fcomps
daa
aam
add
insl
or
sbb
mov
cld
sbb
jp
push
adc
jo
pop
and
mov
add
jns
je
pusha
mov
xor
inc
jle
add
sbb
mov
and
in
push
loop
push
inc
mov
xor
lret
or
xor
add
les
push
cmp
and
test
divl
add
mov
sbb
mov
fsubrl
push
xchg
ret
loope
xchg
mov
add
clc
cmpsb
sti
add
loop
add
in
push
cmp
aas
add
xor
add
pop
pop
mov
add
sbb
aad
add
das
push
add
or
cmp
dec
xchg
outsl
push
in
and
dec
ficompl
movsl
lahf
add
and
shrl
cmp
xchg
add
or
cmp
xor
cwtl
mov
jg
push
pusha
sti
mov
mov
push
pop
add
clc
dec
or
sub
shrb
add
jg
xor
cli
incl
ja
cld
daa
mov
push
loop
scas
shlb
and
fwait
test
cld
or
jle
adc
xor
mov
aam
sub
hlt
pop
pop
iret
ret
cltd
add
div
jle,pn
add
xor
jb
pop
dec
fs
add
repz
movsb
call
outsb
es
pop
ficompl
inc
push
cmp
mov
popa
gs
dec
add
js
int
movsb
sub
mov
adc
lods
scas
inc
inc
fsubrs
loope
xor
ficoml
pop
loopne
fucomp
add
xchg
cmp
sahf
mov
jo
lods
shrl
add
shrb
add
ret
mov
nop
jl
imul
dec
roll
repnz
ja
adc
adc
repz
lret
xchg
in
mov
mov
fwait
mov
outsl
push
pop
xchg
sbb
mov
xorl
cld
mov
mov
add
xor
inc
cmpsb
xchg
adc
inc
adc
enter
sub
push
stos
mov
aam
add
pop
insl
add
adc
and
inc
add
inc
aam
inc
in
add
sub
mov
mov
xor
pop
mov
inc
xlat
sbb
jle
add
cmp
jecxz
mov
sub
add
adc
jae
sysexit
pop
ljmp
xor
or
inc
adc
pop
stc
mov
lret
push
xor
mov
add
add
sbb
push
add
and
inc
mov
and
add
jle
repz
out
adc
mov
pop
jo
push
aad
pop
inc
mov
lea
and
loope
xchg
in
rclb
cmp
pop
add
inc
adc
scas
jle
stos
push
clc
pop
rclb
inc
cmp
xor
inc
shll
dec
or
add
mov
pop
lcall
call
lods
aas
incl
mov
aas
sbb
adc
add
dec
imul
sub
fs
movsb
mov
jg
dec
movsl
rolb
jns
or
sub
sbb
sbb
jp
in
ret
test
stc
adc
rorb
pop
dec
add
push
loope
shrb
in
xchg
mov
push
add
cmp
mov
and
add
jmp
nop
inc
mov
psubusw
orb
add
ss
mov
ljmp
popf
clc
test
pop
gs
push
jb
stos
xchg
jns
out
add
xchg
into
das
sub
lods
xchg
fs
mov
orl
inc
bound
inc
cmpb
jmp
xor
fdivr
add
and
lahf
mov
or
cmp
fs
push
add
xchg
sbb
aaa
and
xor
pop
mov
and
add
and
cltd
fcmovne
mov
popf
rol
je
xor
daa
mov
mov
add
pop
stos
imul
inc
mov
push
or
mov
adcl
sub
xchg
stc
clc
push
jne
cs
aam
icebp
aaa
inc
iret
fwait
add
dec
lds
aas
ljmp
pop
popf
pop
aas
insb
pop
andb
lahf
cvtps2pd
fwait
jno
in
pop
adc
addb
push
in
xor
jno
enter
add
lcall
sbb
ror
jo
adc
dec
cwtl
in
dec
sub
add
add
jbe
or
popf
loop
or
ds
add
push
pushf
in
sbb
mov
out
or
lea
lret
add
or
jb
sbb
and
shl
mov
inc
test
mov
fimull
adc
cmp
xchg
pop
jbe
movsb
out
jmp
insb
add
dec
in
inc
ret
cltd
in
loopne
xor
add
out
inc
xlat
lcall
and
add
aas
sub
sbb
je
pop
out
add
pushf
aaa
mov
push
dec
pop
push
loop
jmp
mov
add
ljmp
add
cwtl
jle
dec
lea
jb
mov
out
adc
xchg
xor
jl
cmpsl
divl
rolb
jo
or
repnz
scas
pusha
dec
icebp
stos
std
adc
mov
mov
add
jae
jmp
add
dec
jmp
lods
in
testb
dec
jno
bound
or
sub
adc
add
mov
lods
movl
iret
test
add
shll
or
lods
jecxz
mov
or
mov
ljmp
scas
sbb
push
xlat
andb
lcall
inc
pop
xor
fdivrs
xor
mov
out
add
xchg
jl
pop
call
and
mov
adc
fisubrl
out
or
rorl
cltd
lea
call
xor
mov
in
fstpt
pop
ds
mov
insl
or
test
cmc
cltd
xor
inc
mov
add
pop
mov
xorb
int
or
pop
dec
int3
hlt
inc
xor
movsl
and
std
pop
testb
sbb
je
inc
jnp
loopne
jne
xchg
jle
add
sub
test
aas
and
mov
cmp
sub
shll
cmp
push
aaa
xor
addr16
adc
ljmp
cli
es
sub
popa
scas
or
mov
dec
scas
push
pop
push
test
in
adc
cmp
pusha
in
inc
pusha
insb
add
jmp
add
outsl
iret
cmp
add
daa
jg
shll
add
and
mov
rcll
lahf
cwtl
pop
testl
sahf
inc
mov
daa
rolb
bound
add
add
mov
and
inc
adc
inc
adc
mov
adcl
shll
mov
out
pop
xchg
add
fadd
adcl
xor
push
inc
into
gs
hlt
push
add
xchg
movsb
data16
pop
dec
mov
and
or
pop
cmp
adc
fs
lods
inc
adc
sbb
add
xor
jne
jmp
mov
pop
jno
stos
dec
mov
and
in
out
add
jge
cmp
gs
cmpsb
and
fisubrs
mov
or
jl
mov
add
lret
add
pop
mov
call
fnsave
jbe
mov
xlat
xchg
test
pop
cmp
movsb
sbb
push
cmp
dec
jae
mov
les
xor
sbb
pop
aas
add
or
add
push
sbb
jbe
pop
add
xor
adc
add
push
fucom
add
out
iret
mov
iret
loopne
pusha
push
popaw
loop
imull
jo
out
mov
xor
popf
cld
push
fidivrs
pop
sub
fdivr
filds
stc
fwait
jae
movsb
sahf
iret
jb
cmp
push
cwtl
outsb
or
incb
and
test
dec
jo
dec
add
add
outsl
les
cwtl
inc
jne
sahf
fisubl
add
mov
aaa
mov
std
aas
inc
adc
imul
mov
mov
dec
out
std
xlat
add
ljmp
shlb
sub
sbb
mov
add
cmp
std
add
fwait
cmp
push
jge
aam
pusha
ret
fnstenv
or
in
mov
add
push
and
and
dec
adcb
mov
mov
je
or
sbb
mov
test
lahf
xor
test
add
push
inc
add
lock
push
xchg
int3
xor
stos
shlb
mov
rorl
icebp
dec
add
sbb
sti
lahf
ret
add
xlat
pop
pop
movsl
lcall
jmp
cld
xchg
fnstcw
nop
adc
mov
js
add
push
daa
adc
in
xor
int
mov
and
xchg
dec
inc
fiadds
dec
add
sub
adc
les
push
aaa
in
xchg
mov
push
add
mov
add
rorb
jns
and
inc
or
fwait
sbbb
pop
add
repnz
add
arpl
mov
aam
out
cwtl
or
sbb
inc
lret
or
loopne
push
hlt
icebp
add
push
xor
xchg
pop
inc
xchg
add
movsb
mov
ret
sti
mov
mov
pop
pushf
mov
stc
rorb
dec
push
ret
xchg
or
or
jmp
add
mov
push
test
add
fnstenv
sub
sbb
cltd
add
div
lcall
aaa
and
pop
xchg
insl
mov
inc
push
jbe
int3
jns
inc
add
add
popa
xor
je
decb
cs
sub
aam
and
add
fucomi
dec
lds
dec
pop
pop
mov
dec
adc
ja
fldcw
popf
push
je
add
shlb
scas
mov
ljmp
push
pop
jo
add
adc
cmp
pop
stos
add
cmc
adc
add
cmp
push
add
popa
aam
mov
pop
inc
dec
js
sub
leave
sbb
add
sbb
je
add
imulb
cmp
fldt
sub
or
ss
add
mov
in
rcr
mov
add
test
fcoms
das
add
dec
xchg
jne
add
dec
out
or
fsubs
adcb
inc
or
xchg
iret
xor
push
aad
mov
mov
in
add
inc
lret
push
mov
mov
mov
adcl
or
into
out
jg
mov
pop
xor
rcl
mov
adc
pop
adc
jbe
fildll
cmp
andl
add
or
testb
lahf
xchg
outsb
xor
jno
sbb
push
pop
mov
scas
arpl
xchg
cmpsb
add
or
inc
addr16
jo
or
sbb
dec
add
sub
lcall
rcll
or
out
in
sahf
xchg
jl
jp
add
test
pop
insl
subb
rolb
pop
popa
fwait
popf
cmp
sbb
mov
test
or
lock
cmp
movsl
jns
push
leave
xor
iret
xor
repz
icebp
xchg
push
outsl
out
lret
cmp
cmc
movsb
push
lods
loop
test
xor
je
or
xor
mov
data16
enter
fistl
add
jg
adc
xor
pop
or
cwtl
mov
and
outsl
gs
jno
or
cmp
sbb
imulb
js
and
xrelease
test
xchg
sub
roll
in
into
xor
mov
dec
sbb
sub
and
aas
add
xchg
out
movsl
mov
les
push
aad
and
xor
jae
push
mov
punpcklwd
sbb
test
add
cwtl
lods
or
sbb
cmp
and
or
out
clc
push
dec
cmp
xchg
add
fwait
cs
in
jmp
aas
adcl
mov
add
pusha
cwtl
dec
sub
nop
and
add
loopne
stos
jne
xor
mov
adc
enter
lcall
mov
out
add
test
jne
inc
data16
insb
jb
popf
nop
adc
add
push
loope
push
jo
or
dec
aas
daa
or
pop
xor
ret
cwtl
and
cmp
mov
sbb
mov
testb
mov
xchg
inc
inc
mov
jae
jmp
fdivl
fstpt
xchg
xorb
roll
lret
mov
rolb
and
inc
dec
sub
jne
push
hlt
cwtl
xchg
dec
mov
or
int
popa
pop
leave
es
adc
add
xchg
je
fiaddl
xchg
movsl
sub
ret
mov
cwtl
mov
adc
adc
jb
add
mov
adc
add
jle
jae
jo
and
push
dec
push
dec
aam
cld
add
inc
sub
add
mov
pop
notl
add
pop
into
or
add
sub
push
aad
int
lcall
pop
sub
mov
jo
clc
push
push
or
out
wbinvd
rorb
adc
dec
int3
sbb
push
or
movsb
mov
sbb
pop
mov
cmp
add
adc
shlb
mov
add
loope
sbb
mov
dec
add
sarb
xchg
sahf
addr16
daa
cmp
xchg
mov
inc
adc
adc
mov
das
push
mov
adc
cmp
mov
add
repz
ss
fdivl
icebp
add
jge
cmc
subb
add
pop
jmp
mov
add
pop
fwait
mov
add
push
dec
jmp
int3
jbe
aam
mov
xchg
jecxz
and
mov
mov
or
inc
mov
jmp
repnz
clc
push
add
xchg
push
mov
mov
gs
fst
dec
ljmp
add
sub
in
mov
xchg
rcrl
outsl
popf
pusha
std
dec
push
fistpll
hlt
clc
add
push
jecxz
dec
popa
sahf
outsb
imul
sub
add
nop
add
mov
repz
mov
dec
inc
hlt
sbbb
jge
xchg
cltd
jecxz
scas
xor
xor
or
jmp
mov
lock
subb
mov
add
shlb
jmp
xor
push
stos
mov
or
in
or
mov
outsb
sub
add
out
sarb
enter
add
xchg
int
sahf
pop
out
add
out
push
jno
adc
sub
or
push
test
out
add
mov
sbb
stos
sbb
enter
mov
sbb
pop
scas
stc
hlt
ss
addr16
mov
add
pop
or
lods
pop
jle
out
or
push
xor
loopne
pop
test
add
test
cmp
andb
inc
jg
data16
inc
or
cwtl
xchg
xchg
subb
cmpsb
push
fnstsw
add
daa
je
inc
outsb
or
push
repz
xchg
mov
cmp
and
hlt
xchg
ss
push
mov
cmc
iret
add
mov
xor
arpl
cmp
ss
loope
sbb
pop
sub
outsl
in
comiss
into
mov
mov
push
add
fistpl
push
inc
es
xor
jl
jg
sbb
call
cmp
lods
inc
aas
dec
add
jmp
pop
aad
leave
mov
mov
add
push
out
movsb
dec
add
mov
cmp
js
arpl
add
mov
xchg
cld
push
pusha
add
or
rorb
rolb
icebp
cwtl
fdivrs
nop
inc
aam
rcl
sbbb
pop
es
xor
mov
imul
dec
mov
inc
fwait
xchg
ficoms
add
mov
shll
pop
mov
fsubs
ss
cwtl
add
mov
sub
jl
roll
add
test
nop/reserved
inc
push
punpcklbw
pop
pop
lds
ja
ret
loopne
dec
test
stc
int
subl
and
inc
loopne
aad
xchg
sbbb
lds
data16
cltd
scas
mov
gs
xchg
ret
dec
les
fwait
cmpsb
fidivs
pop
lahf
push
xlat
and
push
dec
call
scas
sarb
pop
and
add
shlb
es
and
add
mov
pop
xlat
jno
outsl
add
cmc
movsb
pushf
out
or
mov
sub
pop
mov
xchg
cs
gs
add
fidivs
xchg
add
cmpsb
jne
sub
lea
flds
adc
inc
adc
dec
or
cltd
add
cmc
xlat
add
lret
adc
pusha
mov
add
xor
es
lods
popa
ja
push
out
mov
or
and
dec
ds
xorb
push
fisttps
and
add
pop
pop
lods
pusha
lret
add
addr16
std
testl
das
or
iret
xchg
add
cmp
aam
clc
lds
daa
add
xchg
inc
mov
push
sti
sbb
sub
xor
add
popa
pushl
call
imul
ja
sbb
pop
cltd
adcb
test
jnp
add
jge
sub
xlat
cld
cltd
add
cmp
fcompl
mov
xchg
add
mov
cmpsb
call
dec
adc
clc
mov
pop
inc
cmp
test
push
clc
push
add
ret
sbb
jno
out
lds
sbb
cmp
sub
mov
or
jle
adc
push
jbe
or
sub
loopne
mov
shlb
add
je
xor
cs
pusha
into
rcrb
add
aad
mov
and
rclb
adc
lock
xchg
jbe
push
pop
fiadds
sbb
lods
out
sbb
sub
cmp
test
pusha
add
filds
cli
mov
movsl
unpcklps
pop
push
aaa
sub
mov
cltd
pop
pop
or
ljmp
mov
jmp
push
push
adcb
jg
mov
jmp
iret
outsl
xchg
cmp
jae
and
lock
or
sti
outsb
push
adc
add
adc
lahf
mov
std
xchg
das
and
xchg
add
aas
mov
mov
loopne
xor
lcall
inc
add
sbb
imul
mov
sbb
or
add
lds
aaa
xor
iret
add
dec
xchg
pop
jl
sub
mull
xchg
iret
add
add
imul
je
sarl
ret
sqrtps
out
xor
mov
mov
rclb
mov
sbb
ror
xor
outsb
imul
inc
cmp
pop
cmpb
pop
les
ss
push
int3
and
inc
das
xchg
out
popf
fs
push
fmul
jns
inc
pop
shlb
jecxz
outsl
sbb
cmp
lcall
mov
jno
or
push
mov
daa
dec
xchg
pop
xorb
pop
push
loope
imull
rcll
sbb
mov
stc
addl
push
cs
dec
cmpsl
out
xchg
rolb
sub
and
into
jo
xor
add
sbb
imul
jle
push
and
cmp
mov
sbb
push
dec
mov
movsb
xor
sti
pop
jo
add
sbb
cwtl
lods
leave
cmp
push
data16
pop
cmp
cmp
gs
rclb
or
out
push
shl
int3
or
jg
mov
frstor
mov
add
or
and
xorl
cmp
addr16
dec
push
add
insb
shr
or
pop
cltd
cli
push
push
div
cmp
ds
stc
rclb
aas
or
mov
mov
push
test
out
jmp
and
xchg
mov
xor
jl
xchg
mov
adc
test
sbb
inc
leave
insb
mov
inc
add
xchg
inc
nop
xor
add
mov
jo
push
or
and
leave
jne
add
inc
sbb
dec
mull
daa
sub
pushf
popa
std
sub
roll
cmpsl
or
addb
cwtl
mov
lds
and
jmp
scas
cmp
cs
fistl
scas
inc
and
imul
xchg
jo
jbe
lret
dec
jae
jb
xchg
popf
cs
pop
cwtl
jp
loopne
sbb
fdivrl
lods
push
xorl
addr16
mov
loopne
sub
sbb
subb
push
cld
enter
add
call
add
add
push
push
int
jbe
outsb
mov
jecxz
inc
mov
pop
or
and
jle
aaa
mov
pop
fisubl
and
sbb
lahf
cmp
clc
xorb
int3
or
xchg
std
xchg
dec
push
cld
cs
mov
leave
add
cmpsl
sub
or
loopne
adc
fimuls
push
fs
sub
lds
mov
jle
jns
mov
inc
xchg
popa
in
cmp
or
mov
add
and
jno
call
pop
add
dec
imul
lret
fisubrs
std
outsb
inc
aam
add
push
mov
pusha
nop
xor
addb
adc
add
dec
out
dec
jo
loopne
xchg
fbld
repz
mov
adc
aam
inc
pop
pop
inc
pusha
mov
or
out
dec
inc
add
mov
add
fadds
jg
out
or
jle
pop
punpckhbw
push
dec
cwtl
incl
dec
and
mov
push
add
inc
inc
xor
add
and
mov
mov
sbb
out
xchg
xchg
into
adc
xor
es
pop
or
cmp
push
movsl
and
inc
adc
sbb
mov
nop
insb
enter
pop
jecxz
jo
xor
je
mov
jl
popa
lods
enter
sbb
lods
aas
xchg
testb
shl
push
pop
out
cld
add
arpl
ror
jno
in
or
aaa
lods
push
jo
loopne
pop
push
sbb
add
ljmp
sti
push
jp
iret
jo
sar
int
addb
cmp
cmpsl
out
mov
movsl
mov
jmp
mov
sbb
sub
add
jae
fwait
mov
sub
test
imul
test
enter
std
roll
inc
dec
ret
out
mov
cwtl
cmp
pop
push
add
adc
add
push
fnstcw
mov
and
imul
add
cmpsb
sahf
xchg
and
es
clc
dec
add
sub
add
pop
push
and
daa
mov
and
in
js
ret
add
rcrl
rorl
mov
xlat
add
adc
inc
dec
add
inc
outsl
fmuls
hlt
inc
sub
and
jmp
aas
dec
or
xor
mov
shl
pop
xor
adc
dec
aam
xor
add
cmpb
sti
cwtl
gs
jno
push
fldenv
pop
inc
mov
xchg
add
cs
adc
add
outsl
adc
add
pop
fildll
mov
inc
sbb
rorb
aam
arpl
mov
add
in
add
fisubs
call
bound
add
cltd
push
pushf
push
jbe
test
sbb
add
fisubrl
test
in
sub
fimuls
push
sbb
ja
jbe
pusha
fucomi
xchg
cwtl
mov
idivl
add
cmc
push
outsb
loop
scas
mov
sub
cld
out
and
sahf
rcr
das
pushl
xchg
jne
adc
mov
dec
roll
cmpsb
out
and
add
sub
es
inc
or
sarl
ret
dec
jbe
jp
fnstsw
dec
mov
icebp
and
pop
xor
cs
orb
push
jb
xchg
push
mov
push
cltd
in
inc
stc
fwait
xor
mov
sub
adc
mov
sti
sub
inc
add
andb
mov
pushf
inc
xor
cs
fnstsw
pop
push
adc
faddl
add
or
xchg
int3
pop
ret
push
pop
imul
add
pop
add
xor
and
pop
pop
or
ljmp
aam
xchg
sub
push
mov
push
mov
test
stos
and
push
lahf
fs
sub
xor
add
sbb
dec
pop
out
inc
pop
push
loopne
adcl
aaa
popl
dec
pop
repz
mov
pushf
imul
mov
testb
or
pop
hlt
push
mov
or
popf
xor
pop
adc
mov
ds
add
int3
jnp
push
loopne
mov
pop
jo
add
scas
xchg
xchg
leave
add
jno
fsubrs
scas
clc
pop
dec
scas
ret
adc
sarl
stos
or
add
add
clc
inc
push
mov
orb
nop
ja
into
add
push
popf
shll
sub
jl
push
nop
mov
add
xor
mov
in
movsl
sbb
and
push
dec
sbb
incb
cmp
add
loope
sub
pop
cltd
mov
pop
test
pop
add
sarb
mov
int
jb
or
mov
mov
push
cmp
cmp
mov
testl
nop
jbe
icebp
dec
pusha
mov
test
jecxz
lahf
mov
add
das
push
int3
pop
inc
cmpsl
sub
es
mov
jae
stc
orl
enter
ficompl
lret
mov
loopne
add
mov
hlt
add
sub
or
push
xchg
xlat
cmpsb
push
imul
cwtl
fmul
in
mov
add
test
data16
cmp
sahf
aaa
push
sbb
pop
sub
imul
mov
lods
add
stc
daa
sbb
arpl
mov
and
punpcklbw
dec
and
cs
xlat
adc
je
nop
rolb
push
and
fwait
jle
xchg
add
push
push
push
sbb
nop
adcl
pop
jne
es
mov
lea
xchg
jle
dec
dec
fisttpll
les
adc
jae
shll
imul
add
jno
dec
clc
xchg
or
fidivrl
cmp
sub
pop
or
js
popa
flds
pop
add
adc
xchg
xchg
jb
out
jg
pop
lret
cmp
sbb
dec
adc
incb
leave
lods
ret
shrl
xor
in
cmpsb
adc
xor
mov
mov
imul
jbe
adc
loopne
addb
imul
xor
pop
jns
icebp
push
pop
decb
xchg
int
andb
jne
pushf
mov
jbe
add
sub
xor
cmp
fsubrl
cmpsl
rcr
xor
scas
clc
mov
addb
cmpl
sbb
pop
xor
push
cmp
xor
fcoml
outsl
pushf
sbb
out
dec
push
js
clc
jae
cmp
in
or
mov
pop
out
clc
dec
inc
das
jmp
std
inc
outsl
add
decl
jo
jbe
push
inc
mov
adc
pusha
adc
cmp
dec
or
lcall
stos
nop
jg
imul
push
stos
clc
pop
add
mov
and
mov
mov
paddq
imull
ss
or
popf
or
nop
xor
jle
sahf
xchg
ss
add
lods
add
sub
xchg
std
add
xchg
stos
bound
xchg
aad
in
outsl
xor
aaa
push
adc
imul
jne
jg
add
fsubrs
imul
push
jnp
adc
xlat
cmp
jae
fst
and
and
push
rcrb
xor
lcall
and
dec
sub
sub
adc
insb
lock
fucomi
js
dec
aaa
loopne
or
scas
shlb
add
pushf
popf
mov
pop
or
pop
out
nop
xchg
in
arpl
xor
push
loopne
insb
push
and
lods
jle
mov
movsb
jbe
aad
subl
repnz
add
sub
decl
or
xchg
cwtl
jge
dec
adc
push
pop
adc
cli
movsl
aam
adc
fcompl
stos
or
mov
movsl
call
mov
cmp
mov
shrl
dec
pop
pop
test
mov
inc
nop
pop
add
jnp
cli
mov
test
bound
xorl
jge
push
dec
lahf
dec
stos
xor
xchg
xchg
pop
xor
jne
cmp
mov
sub
push
xor
sub
and
push
push
dec
leave
out
les
pop
repnz
inc
xchg
sahf
fiaddl
dec
push
sbb
xor
pop
in
sub
add
push
pusha
das
lcall
add
xchg
loop
cmp
and
fwait
sbb
pop
sbb
inc
int3
add
aad
xchg
fwait
jbe
es
push
push
dec
dec
or
mov
outsb
sbb
jnp
mov
aad
cmp
lods
adc
dec
out
mov
lcall
add
sbb
push
insb
xchg
push
push
repz
adc
je
dec
mov
xchg
mov
push
push
push
pop
adc
andb
bound
xchg
push
inc
pop
jae
pop
or
vmulps
xor
mov
sbb
sti
or
inc
cmpsb
icebp
cld
cmp
add
sahf
mov
mov
cs
fs
add
and
xorb
mov
or
or
jl
push
push
jle
and
dec
aad
adc
into
add
add
cmp
or
loopne
cmp
pop
inc
mov
inc
das
add
mov
jmp
mov
iret
dec
add
pop
es
out
push
mov
sub
sub
add
ret
pop
clc
stos
subb
movl
bound
adc
je
push
push
fs
add
inc
xchg
ljmp
test
mov
cmpsb
sti
and
roll
scas
and
inc
ds
das
scas
or
mov
cltd
test
daa
inc
or
jae
push
pop
add
cmp
sahf
imull
mov
fwait
adc
inc
push
add
inc
xchg
das
dec
iret
add
fisubs
jge
mov
rcr
sub
push
mov
mov
mov
scas
cs
push
iret
pop
cmpsb
loope
or
sub
out
pop
adc
mov
mov
xchg
mov
sarl
mov
in
dec
lret
aam
add
das
sbb
and
sbb
subb
dec
lods
pop
idivl
or
ss
in
cs
mov
pop
cld
xchg
sbb
out
pop
mulb
adc
mov
rcrl
lods
add
les
cmp
push
inc
testb
xchg
inc
cli
inc
lcall
mov
sub
add
inc
mov
push
dec
cmpsb
xchg
nop
test
push
cmpsl
in
cvtps2pd
bound
cli
mov
adc
insl
cmpsb
push
xchg
pop
daa
test
adc
add
mov
pop
in
or
jg
iret
jbe
push
push
popa
xorb
loop
insb
dec
add
arpl
mov
sar
add
fadds
scas
add
and
push
sahf
cbtw
add
ficoml
sbb
jge
rolb
jl
cmp
addb
pop
add
sub
je
inc
add
sub
cmp
push
mov
push
push
mov
or
clc
jb
daa
out
push
mov
aam
xor
and
ss
ret
xlat
adc
dec
sub
insl
xchg
add
and
cmc
inc
ret
add
sub
cmp
lret
pusha
pop
xorl
stc
mov
jmp
es
enter
lahf
or
cld
dec
mov
pop
jmp
stos
stc
dec
movsb
sub
adc
int3
xor
mov
pop
dec
jo
das
int
pusha
fwait
ret
cld
str
push
ja
test
sub
add
mov
das
mov
add
hlt
clc
sbb
in
movl
mov
add
sub
fmull
dec
jo
push
out
pop
es
add
addb
adc
sti
lods
push
dec
repz
mov
pop
pop
and
sub
jne
or
lods
imul
dec
and
ds
pop
sahf
aam
inc
cwtl
lods
pusha
pop
sbb
mov
mov
insl
pop
jge
hlt
test
xchg
jge
addr16
sbb
ffreep
pop
xor
andb
scas
push
cmpsb
xlat
ret
adc
addl
xlat
add
das
jb
mul
imul
dec
cld
mov
stos
std
in
dec
test
xlat
sbb
in
add
mov
mov
dec
test
inc
xor
inc
shl
dec
cmp
rclb
sub
adc
aam
comiss
lods
pop
andl
sbb
jnp
or
fsubrp
out
test
or
push
gs
insb
incl
pop
xchg
lods
dec
jb
push
inc
stos
and
mov
nop
leave
xlat
insb
add
sbb
outsb
mov
or
cmp
lret
jp
or
ja
push
test
test
pop
cmp
fs
or
push
inc
jo
xlat
adc
mov
rolb
dec
push
add
or
jmp
add
adc
movsb
insb
adc
pusha
inc
stc
cmp
inc
inc
add
pop
stos
std
sub
or
les
test
inc
leave
fmull
orb
mov
stc
arpl
inc
sub
cmp
pusha
pushf
stos
dec
mov
pusha
and
dec
sub
dec
xor
sub
imul
mov
ljmp
push
cmpsl
subl
pop
mov
repz
rcrb
sbb
or
je
daa
stos
cmc
dec
sahf
into
outsb
psrad
adc
es
repz
mov
dec
add
pop
sti
or
inc
xchg
mov
pop
stc
mov
repz
pop
pop
xor
cmc
loopne
test
jp
add
sbb
ret
xor
sub
mov
popa
test
aaa
or
and
xor
icebp
pop
in
mov
clc
enter
in
mov
jbe
shll
add
and
inc
adc
cltd
je
pop
dec
adc
adc
xorl
push
mov
pop
cltd
or
in
pop
cmp
add
int3
dec
les
xor
daa
inc
ret
mov
pop
add
stc
mov
mov
mov
sar
inc
cmp
popf
fs
fldl
inc
orb
das
mov
xchg
pop
sbb
popa
or
dec
mov
pop
mov
ljmp
cmp
test
inc
pop
sbb
pusha
xlat
push
jmp
loopne
add
sti
je
sbb
int3
sub
add
in
test
decl
adc
sbb
xor
aad
inc
pop
xchg
xlat
das
nop
loop
shll
aam
and
jp
mov
jmp
dec
in
jne
iret
jg
test
orb
sub
jno
or
add
add
push
push
push
add
ds
pop
mov
sub
xchg
mov
pslld
outsb
adc
push
ficomps
adcb
add
mov
stc
les
je
lds
jns
aaa
xor
or
xorl
xor
jb
add
aaa
xchg
xchg
pop
xchg
ror
inc
add
mov
lahf
jmp
lahf
add
pop
mov
adc
xor
xor
mov
xor
fcmovbe
dec
sbb
and
insb
add
and
pop
add
repz
lahf
push
loope
xor
and
jp
jmp
pop
shlb
xor
jle
leave
popa
leave
and
pop
jge
xor
testl
ds
adcb
inc
dec
stc
nop
popl
fwait
roll
add
nop
push
and
push
mov
notl
aad
loopne
and
xchg
xor
add
jecxz
notl
in
pop
add
aaa
stos
or
icebp
push
xchg
outsb
mov
inc
mov
test
sbb
sbb
mov
popa
xchg
aad
adc
or
xchg
push
sbb
dec
add
das
out
pop
lret
cmp
adc
insb
cmp
adc
pop
dec
icebp
testb
sub
pop
rolb
dec
mov
int3
fbstp
xor
jmp
pop
lret
fisttps
push
add
dec
xchg
shlb
adc
lods
cmp
int3
mov
adc
push
xor
iret
cmpb
jne
loop
pushf
imul
and
sub
rclb
in
mov
int
and
sub
mov
test
ljmp
shlb
sub
add
fisubrl
and
fimuls
in
cltd
sub
enter
shlb
inc
add
leave
jle
orb
push
mov
and
fstps
and
pop
fiadds
aas
ret
fs
mov
aaa
xchg
xchg
scas
dec
xchg
addb
shlb
jno
cmp
hlt
dec
scas
push
and
cmp
jo
jecxz
imul
pushf
add
adc
dec
add
or
fnstenv
xchg
lds
push
cmp
scas
cwtl
int
push
inc
and
lss
bnd
sub
jne
push
pop
sbb
cmp
test
jne
add
and
xchg
jo
dec
jae
add
iret
jl
into
mov
add
xchg
or
enter
cmp
add
dec
mov
mov
mov
mov
xor
mov
int3
mov
xor
adc
hlt
outsb
push
add
xor
push
dec
push
jmp
cltd
das
sbb
inc
cmp
fistpl
les
sbb
pop
add
xchg
ficoml
mov
adc
add
push
popf
in
fwait
add
sub
add
push
push
cvtps2pd
test
ret
jp
mov
inc
pop
or
and
and
mov
scas
cld
dec
rclb
idiv
dec
push
or
cli
std
movsb
dec
jg
dec
adcb
test
mov
or
push
jmp
shlw
push
mov
iret
push
add
push
pop
xor
push
pop
dec
jno
adc
push
push
and
mov
pop
lea
pushf
pop
push
add
push
push
lret
add
sti
sbb
add
xor
add
in
pop
data16
push
daa
pusha
and
divb
jno
pop
mov
roll
add
add
popa
test
add
inc
arpl
jo
pop
imul
mov
popa
out
jnp
pop
push
pop
dec
lret
sub
out
mov
xchg
scas
mov
out
inc
mov
aas
jp
add
sub
ret
test
or
or
cmc
pop
inc
sbb
pop
pop
jae
ret
xchg
mov
push
mov
das
fisttpll
mov
or
pop
adcl
lret
aam
push
push
enter
sti
xor
push
sub
add
jne
mov
nop
fcoml
or
scas
test
push
ret
add
mov
adc
or
int
jp
jb
jg
adc
mov
inc
enter
add
add
add
js
or
std
subb
pop
dec
mov
ror
pop
dec
call
xor
sub
xchg
inc
movsb
xchg
std
insb
leave
mov
mov
cmp
sbb
cmp
add
inc
out
bound
xchg
mov
bound
and
test
cmpb
mov
int
je
call
popf
pusha
sbbl
mov
outsl
push
nop
shrb
daa
iret
lahf
xor
std
xor
add
cmc
inc
pushf
cmp
pop
xchg
cmp
push
push
fwait
lods
pop
in
push
cli
mov
push
inc
cmp
push
mov
mov
jmp
cs
and
xor
rorl
or
cmp
add
jne
out
mov
mull
dec
cmpsb
popa
inc
cld
jnp
aam
and
ret
and
xchg
xchg
push
fnstenv
test
movsb
mov
imul
jno
pop
xchg
mov
push
adc
clc
rol
test
sub
jo
repz
add
fldenv
xchg
in
scas
popf
mov
or
subb
inc
mov
pop
jle
sbb
cs
add
jge
inc
je
push
jae
xchg
clc
cmpb
mov
xor
add
decl
mov
shll
adc
lods
pusha
add
filds
adc
mov
out
jmp
das
sub
inc
cmp
push
adc
adc
mov
xchg
ret
mov
das
out
add
xor
out
add
nop
adc
or
les
jbe
and
movsb
mov
add
js
xor
xchg
es
add
and
lahf
stos
mov
jno
andl
out
pop
shll
lret
cmc
xchg
aam
pop
in
fnsave
leave
sbb
sub
push
cs
loope
or
nop
xchg
in
cmc
sbb
cmp
pop
dec
fdivr
inc
inc
mov
mov
loopne
cmp
adc
and
add
sbb
cmp
rolb
icebp
push
lock
pop
pop
je
or
std
addr16
leave
cmp
dec
jge
pusha
xchg
xor
or
mulb
dec
add
and
shl
ja
cmp
adc
fistpll
lret
or
test
adc
pop
in
add
or
aas
fildl
mov
jo
movsb
add
dec
jb
add
xor
lahf
outsb
test
fcmovb
out
pop
rorb
pop
insb
jg
cmp
fdivl
mov
addr16
int3
xor
insb
sarl
mov
add
loop
add
xchg
mov
cmc
push
sbb
cmp
mov
sub
mov
push
fucomip
and
or
decb
pushf
enter
jb
add
mov
test
adc
pop
roll
shl
inc
add
sub
lret
mov
xor
mov
mov
push
pop
push
push
mov
pop
xchg
std
add
js
mov
insl
outsb
rclb
test
rorl
and
add
cmp
pop
xchg
inc
mov
mov
ja
push
mov
mov
enter
add
or
nop
add
mov
test
sub
and
jl
push
jno
or
pop
push
mov
add
mov
xor
adc
test
mov
add
adc
std
scas
sub
cmp
add
jecxz
or
lock
lret
sbb
scas
inc
das
mov
inc
push
jmp
mov
pop
jbe
and
mov
xor
xlat
pusha
or
sbb
cmpsl
repz
sbb
es
in
push
add
call
imul
adc
inc
rcr
jmp
nop
out
shl
ljmp
sbb
jbe,pt
stos
dec
mov
xchg
pop
xchg
mov
stos
xor
jo
dec
inc
jnp
pop
in
sbbb
test
adc
and
sbb
das
dec
push
ret
pop
add
stos
test
and
stos
pop
or
jecxz
cmp
in
out
adc
inc
push
inc
sbb
mov
imull
unpcklps
cmp
cmp
adc
push
mov
adc
sub
mov
enter
test
cmp
lock
sub
push
xchg
sbb
ret
mov
rcr
jl
fldl
cwtl
adc
pop
pop
add
jne
stos
ds
cmp
adc
xchg
push
sbb
xor
addb
les
mov
pop
pop
push
js
mov
ja
dec
pop
add
out
bound
int3
test
mov
addr16
mov
sub
sbb
sbb
mov
add
dec
pop
inc
xchg
mov
mov
popa
out
xchg
pop
inc
sbbb
cmp
aam
in
push
icebp
add
mov
das
int3
fiaddl
jo
mov
js
aam
sub
pusha
pop
add
test
jae
or
outsb
or
adc
pop
fs
daa
sub
adc
fdivs
xchg
push
sbb
adc
dec
xchg
push
gs
cmp
int3
int
mov
xchg
gs
xor
adc
test
mov
fstps
mov
mov
adc
bound
lcall
lock
sub
pop
add
cld
push
shlb
stos
sub
pop
pop
sahf
or
xchg
dec
mov
mov
pop
insb
cmp
loop
pop
jo
nop
incl
fs
xchg
inc
cmpsb
jbe
ret
in
in
out
inc
add
xchg
sbb
pusha
cmpsl
xchg
cli
xor
sbb
std
adc
test
sub
pop
jns
rcrb
out
add
xchg
add
mov
sbb
addb
gs
out
xor
and
fisubl
and
sub
or
in
mov
pop
ds
rcrw
iret
and
push
orb
inc
loopne
or
lahf
add
enter
cmc
push
lret
mov
dec
push
pop
bound
subl
cli
hlt
adc
add
mov
or
and
add
lea
dec
outsb
stc
sbb
rcrb
inc
or
dec
test
andb
xchg
std
test
add
cmp
enter
jo
dec
ret
cmp
lret
mov
fdivrs
sbb
dec
add
cmp
dec
int
add
in
mov
shrb
ljmp
stos
xchg
dec
imul
mov
orb
call
mov
or
std
cmp
aas
adc
fistl
cs
add
adc
add
inc
push
out
lock
dec
push
js
inc
sub
pop
sbb
ficoms
out
cmp
mull
fcompl
add
cltd
push
lods
fcoml
sub
lea
mov
lret
js
add
mov
inc
cld
jo
int3
and
ja
outsb
les
pusha
fdiv
add
jb
mov
add
leave
iret
ficoml
sti
shrb
icebp
fldl
out
jmp
in
cmc
mov
cltd
or
jnp
pop
pusha
rcll
lock
pop
push
andb
addr16
xchg
hlt
les
stos
xchg
pop
scas
cld
inc
movsl
pop
mov
test
into
cmpsb
enter
outsl
jle
push
pop
mov
add
inc
jae
popa
push
nop
push
jge
ds
add
pop
cmp
ljmp
or
xchg
add
xchg
inc
mov
rolb
subl
cmp
jl
mov
cmc
scas
xor
gs
outsb
add
mov
out
sbb
and
mov
daa
add
dec
bound
xor
fidivrs
push
inc
out
std
repz
mov
into
sbb
sub
mov
adc
sub
data16
mov
std
pop
inc
clc
mov
roll
cmp
leave
pop
pop
add
repz
or
add
or
sti
mov
add
mov
sahf
fists
pop
test
aam
add
add
shll
pusha
test
ja
dec
cmp
fiadds
in
push
nop
pop
push
std
mov
mov
dec
cmp
pop
pop
xchg
movsl
adc
push
imul
shlb
testb
imull
jge
xchg
jp
add
aad
and
mov
cmp
sub
movsb
jb
push
adc
repnz
je
ja
int3
sub
data16
pop
lret
aaa
cmp
lods
push
add
arpl
jno
push
push
lret
sbb
dec
fldcw
mov
xor
sbb
or
sti
adc
stos
cmc
pushf
pop
movsb
cmp
ret
and
mov
cwtl
or
or
fsubs
and
dec
rolb
jae
lahf
xlat
rclb
enter
roll
adc
pusha
mov
aaa
or
outsl
xor
sbb
jl
add
push
in
pop
xchg
cmpb
lahf
pop
data16
adc
and
aas
aaa
inc
mov
inc
insl
inc
test
sbb
fstl
push
out
cmp
lock
adc
out
sbbb
pop
adcb
push
jmp
test
push
mov
jbe
dec
sarl
xor
daa
xchg
inc
mov
pop
adc
add
punpckhbw
xchg
lods
pop
js
jnp
jmp
imul
or
lret
mov
sub
aam
xor
sbb
mov
popa
cmp
lods
add
sbb
xor
dec
pop
sbbl
aaa
pusha
xor
cwtl
add
cli
call
decb
push
jae
pop
push
pop
mov
xchg
add
pop
cli
andl
enter
inc
mov
add
add
data16
fisubrs
into
jmp
pop
sbbl
popa
and
aad
call
insb
fstl
repnz
or
pop
adc
fsubrl
add
inc
fisubrs
push
adc
inc
xchg
in
sahf
add
iret
mov
xchg
or
jecxz
rol
mov
outsl
and
les
add
or
mov
out
pop
out
fnstsw
push
add
loope
std
pushl
xchg
fdivr
or
arpl
testl
in
xchg
cmp
cwtl
adc
rorb
or
push
xor
xchg
mov
adc
dec
test
add
leave
in
sbb
xchg
sbb
mov
cmp
mov
xor
add
inc
aad
add
stos
popf
inc
sarb
out
cmpb
rorb
push
or
or
je
nop
sub
jo
loopne
adc
sub
imul
jns
cmp
add
inc
movsb
xchg
vmovlpd
pop
and
iret
adc
imul
inc
pop
mov
xchg
pusha
fldl
dec
cld
nop
jns
cwtl
fidivl
rol
xor
xor
or
fmul
push
dec
pop
in
add
lock
inc
in
add
pop
xlat
and
fistpll
and
dec
add
inc
mov
cmp
fwait
mov
xorl
loopne
je
lret
pop
adc
cmc
jb
xor
outsl
in
imul
lret
rorb
push
dec
int
inc
add
dec
lock
push
push
outsb
stc
fadds
pop
mov
inc
cmp
xchg
pop
stos
lret
bound
mov
fcmovnb
or
pop
mov
push
mov
cmp
push
shlb
mov
xor
std
or
sbb
add
mov
add
js
adc
loopne
or
fstpl
push
imul
add
sbb
jl
add
pushf
mov
andb
sub
aam
pop
out
mov
dec
xor
pushf
adc
push
aaa
push
cwtl
test
push
shll
subb
aas
add
stos
inc
andb
sbb
cmp
jp
out
popa
mov
add
xchg
mov
enter
cmp
add
add
subb
jno
rorb
repz
pusha
or
add
lds
jbe
repnz
xchg
mov
push
push
shlb
loopne
sub
js
pop
mov
add
or
sub
adcb
pop
mov
jno
mov
repnz
scas
dec
cwtl
push
outsb
cmp
imulb
mov
mov
cmp
lds
jns
jp
push
jne
hlt
pop
mov
or
mov
shl
add
hlt
adc
mov
push
call
mov
add
lock
les
or
add
cmp
add
mov
bound
inc
iret
adc
adc
sti
mov
jb
lds
andb
mov
xchg
mov
jle
das
or
dec
in
imul
sbb
hlt
xor
jo
in
jne
mov
jge
push
imul
fwait
sub
push
sbb
loope
pop
jge
or
std
inc
arpl
adc
sbb
les
fstl
or
leave
pop
jo
aam
outsl
xor
stos
xor
sbb
adc
add
movsb
stc
imul
sub
shlb
or
sbb
int
or
or
mov
test
ja
fsts
sub
in
mov
add
mov
sub
add
dec
test
scas
pop
lahf
mov
add
nop
aad
sbbb
adcb
imul
divb
xchg
xchg
pop
add
sbb
orl
adcb
sbb
sub
mov
out
jl
pop
inc
push
dec
ljmp
mov
getsec
leave
xchg
je
outsl
mov
sbb
aas
je
in
imul
cmc
mov
sub
push
bound
sarb
or
jo
paddq
stos
sub
pop
pop
inc
or
shll
sub
cmp
movl
pop
les
xchg
jo
js
ficoml
bound
jno
mov
movsb
adc
mov
mov
or
push
push
push
and
inc
adc
jge
hlt
xchg
lea
mov
test
add
jne
int3
xor
lret
incl
mov
xchg
pop
pop
jge
fs
lock
add
mov
cmp
add
rol
inc
jno
dec
fimull
add
lcall
and
insb
push
fwait
je
add
add
jns
xor
lock
pop
jg
add
fdivs
add
into
test
pop
mov
out
shlb
push
pop
mov
nop
andl
dec
add
ljmp
js
lods
daa
out
pop
movb
lods
or
nop
jecxz
adc
shlb
lcall
jmp
adc
loop
lods
mov
sysenter
pop
xor
or
fnstsw
or
push
hlt
test
inc
cmp
xchg
rcll
pop
in
loope
les
jnp
or
dec
test
ljmp
jo
pop
fiadds
and
and
mov
add
xchg
and
es
dec
cs
repnz
sub
inc
lods
jo
mov
ja
adc
outsb
ficoms
lret
inc
sub
fisttpl
xor
pop
add
scas
push
gs
xchg
int3
fwait
roll
mov
mov
std
adc
adc
sbb
imul
cmp
sub
pop
daa
ds
jo
or
lock
jbe
stos
cmp
add
out
inc
jmp
dec
xlat
shrl
push
mov
adcl
mov
cmpsl
jl
cmpsb
push
mov
ret
or
xor
add
jge
pop
imul
loope
mov
xlat
inc
adcl
push
jmp
mov
imul
sbb
movsb
ret
mov
and
adc
scas
out
pop
lret
rclb
incl
pop
loop
xchg
and
jns
jne
cmp
cwtl
int
leave
push
push
ljmp
add
cmpsb
jns
mov
xchg
call
add
jmp
inc
push
das
daa
iret
fstl
sbb
inc
sub
dec
fildll
add
xchg
cmpsb
outsb
imul
loope
mov
dec
rcrl
adc
add
or
dec
cmp
in
adcl
ss
popa
fstpt
and
sbb
cwtl
sub
xor
dec
shr
add
clc
or
or
pop
movl
and
loopne
js
dec
pop
movsb
pushf
shll
xchg
mov
jb
push
sbb
fstps
ljmp
mov
and
or
jns
or
mov
hlt
mov
adc
and
adc
inc
jne
or
adc
sbb
push
ja
xor
sbb
lret
adc
or
rcll
fdivs
cld
outsl
or
inc
setg
and
out
sub
pop
adc
push
cmpsb
sbb
mov
pop
sbb
sbb
ljmp
dec
lahf
jmp
add
aaa
addb
loop
out
inc
std
sub
mov
add
cwtl
pop
push
movsl
lcall
arpl
jmp
dec
shlb
addb
lcall
mov
pop
jle
pop
mov
hlt
rcrb
jl
dec
fstp
push
add
rcr
dec
lret
adc
insl
sub
push
push
push
pop
add
ljmp
pop
sbb
sbb
adc
pop
sub
push
shl
add
lock
sub
pcmpgtw
loop
in
arpl
sbb
sbb
push
add
pop
idivl
shll
lods
inc
push
mov
jne
mov
push
mov
or
ljmp
pop
insl
subl
repnz
sbb
movsl
aas
imul
aas
loopne
xchg
out
cmpsl
mov
jmp
cltd
cmp
fmul
add
sub
cmp
adc
fistl
add
pop
adc
inc
and
out
mov
cmp
jno
bound
mov
movsb
xor
push
jp
pusha
cld
jmp
dec
loope
hlt
sbb
and
adc
in
cmp
xor
daa
in
mov
addr16
movsl
push
loope
call
cmp
and
loopne
aad
dec
sbb
fsts
push
add
lahf
sub
fistps
jecxz
ds
fldenv
arpl
inc
cmp
sub
rclb
inc
lds
sbb
inc
mov
cld
xor
add
insl
icebp
loopne
lret
add
sub
xor
dec
push
mov
sbb
push
es
xchg
adc
icebp
sub
xor
incl
loope
rcr
inc
sbb
xchg
cs
or
pop
xchg
shlb
mov
lock
push
shrl
and
call
gs
int
and
and
scas
adc
sub
inc
mov
test
jle
inc
xor
xchg
mov
sub
nop
mov
pop
test
dec
adc
or
push
mov
mov
out
mov
rorl
jmp
and
and
adc
daa
jae
jo
add
or
pop
aas
cmpb
pop
inc
add
inc
dec
inc
div
push
sbb
and
inc
ljmp
add
bound
ds
push
aad
add
cmpsb
jl
cmp
add
pop
and
sbb
lods
and
add
icebp
mov
jp
mull
push
mov
push
and
clc
dec
sbb
jnp
push
add
adc
sub
xchg
sbb
imul
jne
or
pop
xchg
out
jmp
jle
cmc
lods
pop
repnz
out
dec
xchg
sarl
out
add
js
jns
insl
lahf
into
xor
sub
xor
inc
das
mov
dec
add
lcall
aaa
jecxz
push
in
jno
icebp
movsb
and
popf
xchg
int
xorl
pop
mov
cld
out
inc
mov
arpl
clc
fcoml
sbbb
pusha
sub
andl
push
mov
cwtl
rol
xor
or
push
mov
sbb
adc
mov
xchg
stos
pop
mov
int
sub
lock
mov
stos
inc
fbstp
add
mov
dec
lcall
push
add
xor
sti
mov
les
dec
sub
repnz
js
or
and
out
jge
pop
xchg
in
adc
stc
or
shll
jg
lret
imulb
mov
dec
add
xchg
dec
pop
or
cs
mov
add
inc
movsbl
pop
loope
push
mov
inc
mov
push
push
in
call
adc
cmp
rcrb
pop
and
or
enter
mov
pop
test
add
push
in
xchg
inc
pop
rorb
add
fisubrs
orb
rol
push
popa
mov
adc
mov
adc
ljmp
sbbl
test
aas
cmp
pop
pop
aad
push
popf
clc
arpl
icebp
adc
jno
add
pop
mov
jb
loopne
adc
cmp
cmp
push
sbb
mov
cmp
mov
int3
sbb
add
outsb
jb
xor
call
push
or
jg
rcrb
mov
loopne
scas
mov
mov
mov
sahf
imul
fstl
push
fisubrs
cmp
shl
insl
in
pop
sub
xchg
aaa
mov
daa
clc
ret
or
aad
pop
cmpsl
sbbb
sbb
xor
push
rcll
mov
jp
fwait
push
shlb
outsl
mov
movsl
cli
and
fdivr
cs
or
clc
or
dec
stos
enter
xchg
incl
lea
in
es
cwtl
ret
ss
push
mov
xchg
out
ljmp
jae
push
insl
shrb
clc
loop
mov
adc
lret
cmp
mov
pop
cmpb
jae
cmp
push
sbb
adc
add
cli
add
pusha
push
stc
mov
and
push
in
ja
xchg
xorl
and
add
dec
add
cmp
or
ret
cmp
mov
fs
mov
or
adc
jg
add
cmp
imul
mov
xor
or
imul
rcll
jne
jge
mov
jl
daa
push
mov
pop
cmp
sahf
loopne
mov
test
loopne
ja
shll
adc
cmp
and
pop
cmc
lock
andb
repnz
pop
inc
or
pusha
adc
xlat
push
jae
insl
adc
pop
add
inc
or
and
sbb
decl
dec
jns
rorl
pop
sbb
das
mov
add
stos
cmpsl
ret
aaa
adcb
cltd
xor
mov
into
and
jl
push
bound
scas
xchg
test
subb
in
mov
int3
in
or
pushf
pushf
push
add
mov
pop
inc
cwtl
rcrl
adc
dec
jae
movsl
xchg
push
es
jns
push
loop
jo
pusha
rclb
xchg
pop
lcall
add
out
mov
mov
push
lcall
test
mov
inc
add
mov
inc
das
and
fisttpll
dec
xchg
scas
xchg
add
leave
loope
fcoms
dec
lods
shlb
jmp
push
addr16
inc
lods
cmp
pop
inc
loopne
filds
xlat
or
mov
hlt
mov
sbb
stos
or
pop
jnp
ljmp
test
addl
imul
jp
add
mov
pop
pop
adc
push
mov
jae
xchg
popa
sbb
pop
daa
dec
mov
or
je
sarl
imul
xor
mov
addb
sub
pop
out
pop
pop
incl
out
push
in
and
add
fs
dec
inc
icebp
jbe
add
sti
xchg
pop
sub
dec
fwait
xor
insb
inc
lods
jl
jmp
and
add
jns
outsb
aam
cmpb
sti
or
pop
cmp
loopne
mov
dec
xor
inc
cld
or
jl
lret
lods
dec
test
ror
sahf
mov
push
cld
ret
hlt
stos
cvtps2pi
ss
cmp
popa
dec
add
stc
mov
cmp
fwait
outsl
cli
or
mov
leave
fstp
aad
mov
pop
in
or
add
outsl
scas
add
lahf
cmp
xchg
bound
clc
sub
roll
cmp
add
mov
add
cmp
xchg
pusha
fisubl
push
or
sbb
xlat
ficoml
xor
mov
repz
mov
lock
xchg
add
mov
sub
adc
push
inc
mov
and
pop
clc
les
in
lods
dec
mov
mov
jge
rorl
mov
fnstenv
rcr
mov
jo
dec
imul
shrl
cmp
jg
dec
aaa
mov
cmp
js
mov
mov
ja
push
sbb
andb
cs
lahf
lcall
mov
add
xor
adc
xchg
and
adc
aam
nop
pusha
push
xchg
inc
push
fiaddl
js
loop
icebp
sbb
fs
mov
pop
test
or
mov
cmpsb
sbb
mov
add
hlt
rclb
sub
mov
and
jae
mov
inc
push
shll
xchg
stos
xor
aaa
mov
out
pop
outsl
or
pop
sahf
mov
test
xchg
inc
mov
sti
adc
ljmp
sbb
mov
push
jno
add
test
popf
leave
pop
lock
add
push
mov
repz
call
sbb
and
inc
jp
push
testb
icebp
and
jae
sbb
or
popf
test
loopne
add
nop
out
jb
cs
leave
cmpl
sbb
jne
testl
dec
imul
sub
and
stos
or
pop
xlat
aam
mov
rol
idivl
adc
mov
inc
lea
xor
push
mov
cmpl
gs
xchg
adc
adc
ljmp
push
push
pop
repnz
add
es
jno
inc
pop
xchg
in
inc
bound
or
movsl
push
jae
leave
js
mov
sub
xlat
in
xor
add
cmp
mov
hlt
lret
and
adc
sbb
movb
inc
jecxz
shlb
call
add
sub
pop
subb
push
hlt
push
lahf
cmp
jecxz
mov
ret
xor
es
fsub
fstps
test
sub
jno
jp
daa
pop
mov
lahf
out
out
cmp
xchg
jmp
or
mov
push
jns
addr16
xchg
cmp
jbe
dec
leave
in
aad
pop
cmp
xchg
push
ret
cmp
adc
lret
push
jle
add
daa
push
push
outsl
and
stc
mov
cmp
es
int3
and
std
pop
dec
pushf
push
add
xbegin
and
sbb
add
outsb
sbb
xor
cmp
loopne
and
sbb
sarl
mov
or
cmpsb
ret
inc
hlt
aaa
sbbb
enter
add
mov
cmpsl
leave
or
aam
test
xchg
pop
mov
ds
rorb
adc
fcompl
bound
jo
add
add
xchg
loopne
fsubl
xchg
mov
shl
imul
loop
jnp
arpl
mov
cwtl
int
repz
stos
push
lret
fldcw
aaa
loopne
enter
push
outsl
shl
xchg
add
das
sub
loopne
pop
andb
mov
sub
mov
or
popa
add
pop
or
push
jmp
mov
xchg
rolb
ja
mov
sbb
xchg
mov
pop
jp
xor
jne
cmpsb
jbe
jge
clc
hlt
mov
repz
sbb
lret
orl
push
push
cmp
push
add
aas
int3
cmp
add
and
ret
sub
bound
dec
mov
add
cltd
pop
inc
inc
sbb
out
inc
jno
mov
ja
xchg
pop
mov
pusha
push
and
and
add
rorl
inc
sbb
cmp
das
movsb
repnz
xor
jmp
adc
pop
add
xlat
ja
mov
or
add
and
movsl
inc
arpl
push
xchg
pop
sub
adc
std
dec
shr
adc
insb
mov
out
or
ret
test
xor
jbe
daa
lahf
imul
and
ret
add
or
test
push
pop
mov
or
std
mov
sub
js
jne
or
sbbl
in
sub
mov
testl
inc
imul
ds
jnp
inc
pop
int3
out
out
jo
hlt
adc
daa
mov
andb
loop
pusha
or
mov
add
movsb
push
xor
pop
les
repz
sarl
pushf
inc
aaa
jl
test
lods
pop
nop
pop
add
push
idiv
pop
push
xlat
xchg
mov
xor
push
fidivrs
popa
scas
cltd
int3
lods
aam
jnp
jge
cmp
bound
ja
add
in
jne
mov
xchg
add
push
pop
push
repz
subb
mov
xor
and
jmp
add
out
cmp
loope
xchg
or
stos
cmpsl
cld
adcl
mov
mov
push
add
sbb
mov
push
and
in
out
or
or
mov
rclb
cwtl
out
xchg
out
dec
movl
xchg
sbb
es
xor
push
inc
jns
cmc
pop
loopne
fiadds
cmc
xchg
jg
lret
les
sub
sbb
mov
mov
nop
shll
mov
push
add
dec
mov
adc
fisubrs
sub
sub
pop
pop
xchg
jl
shlb
jmp
out
dec
test
repnz
lahf
lods
push
call
or
iret
inc
add
fsubrs
lock
pusha
sbb
xlat
enter
into
jge
fmul
adc
xor
inc
sub
icebp
mov
lret
in
cltd
fisubrs
dec
add
test
out
xchg
lods
out
xor
cmp
mov
dec
loopne
les
mov
jg
add
or
daa
jbe
add
xchg
dec
aam
jecxz
dec
or
cmp
rorl
or
push
lock
jns
ljmp
xchg
xor
adc
cmp
push
cs
jp
repz
inc
sub
fneni(8087
mov
add
shr
push
xchg
push
mov
and
xchg
arpl
adc
pusha
rcll
adc
jbe
xchg
mov
les
call
jmp
xchg
xchg
mov
ficomps
sbb
inc
cmp
fcoml
test
xchg
inc
pop
lret
das
xchg
and
cmpsl
cmp
add
cld
jecxz
insl
lcall
push
push
and
cwtl
mov
and
lcall
pop
push
loop
inc
test
xchg
ret
push
imul
inc
adc
mov
lods
enter
fcomi
rorb
daa
cmc
dec
push
inc
fcomps
test
das
rorb
sbb
sub
jp
xorb
mov
xorl
push
push
sarl
pop
sub
sbb
clc
pop
jmp
lret
jl
lods
andb
mov
jae
dec
xor
sbb
sub
add
scas
add
lret
add
aad
pusha
add
ficomps
sub
pop
pop
arpl
xchg
les
inc
jb
roll
int3
loop
daa
and
mov
add
or
or
and
push
push
loope
inc
adc
ret
or
sahf
and
jbe
mov
orl
push
mov
sti
xor
cltd
loop
and
add
popa
leave
mov
icebp
adc
sub
andb
mov
shl
push
cmc
dec
mov
bound
clc
dec
mov
mov
pop
ljmp
dec
push
add
add
arpl
sbb
shrb
lcall
push
mov
add
clc
adc
jecxz
aad
push
xchg
sbb
push
push
shlb
sub
out
push
jb
adc
lods
or
icebp
jnp
leave
test
adc
mov
jns
pusha
daa
ja
sbb
imul
rcrb
mov
mov
jle
js
addr16
jmp
xchg
add
bound
jb
loope
lods
dec
xchg
mov
pop
lea
incl
add
adc
jae
jnp
jp
stos
add
lods
xchg
ljmp
and
add
cmpsb
repnz
cld
push
subb
add
movsb
push
mov
xchg
rclb
add
loopne
jle
mov
in
or
in
ds
inc
scas
mov
and
mov
cmp
insb
jmp
jp
rcrb
sbb
jmp
ret
mov
jg
imull
inc
fdivrs
cmp
popf
decl
stos
rolb
and
hlt
jmp
aaa
popf
xchg
adc
mov
mov
inc
cmpsb
icebp
cmp
inc
js
imul
pop
dec
in
inc
xchg
lods
aas
in
cmpsl
data16
fistl
in
adc
jg
js
sti
loop
sbb
int3
push
jae
sub
loopne
mov
scas
add
das
jecxz
or
insb
ret
push
inc
push
xchg
lea
jmp
adc
nop
sahf
lods
mov
int3
add
jge
mov
cwtl
and
popf
dec
fcmovnb
inc
arpl
scas
or
jg
sub
dec
cwtl
push
and
in
pop
loope
fistpl
mov
xchg
sbb
outsl
outsb
mov
rclb
test
in
and
outsb
daa
mov
fsubs
rcrl
inc
negl
nop
hlt
mov
inc
inc
sbbb
in
xor
js
sbbb
popf
pop
xchg
test
add
lods
shl
orb
shr
and
add
and
cmp
inc
popf
sbbb
out
mov
inc
pusha
inc
xlat
cli
mov
jnp
mov
aas
js
xchg
daa
xchg
add
out
pop
int3
fistpl
add
ss
fwait
mov
add
out
or
cmp
es
pop
push
mov
jmp
rorb
fcmovnu
cld
cmpsl
pop
bound
adc
popf
xlat
add
push
jbe
cmp
push
cmc
dec
add
icebp
daa
mov
sub
out
das
movsl
mov
adc
xor
call
nop
mov
repnz
cmp
or
mov
fcomps
lret
sub
in
dec
jbe
outsl
shlb
adc
daa
notl
testl
fsts
fsubs
mov
xchg
or
idivb
sub
subl
jne
pop
xchg
sub
xor
dec
and
sbb
imul
sarl
dec
jp
or
jno
sbb
ds
dec
or
and
aaa
mov
loopne
lret
jns
xlat
into
adc
dec
cmc
add
pop
add
or
ds
loop
add
and
mov
pusha
add
mov
pop
inc
mov
pop
loopne
jl
inc
jbe
icebp
or
ljmp
pop
dec
jne
mov
mov
clc
cmp
pop
mov
push
subl
dec
add
jno
stc
lods
leave
test
mov
lret
stos
stc
inc
mov
mov
pop
ret
xchg
jg
pop
adc
scas
sbb
loopne
adc
mov
rorl
mov
addb
and
mov
inc
insl
mov
cmp
imul
xchg
jno
sbb
test
mov
mov
loopne
lret
sub
add
mov
jl
add
mov
mov
inc
mov
sub
xor
xchg
dec
xchg
jmp
fnsave
fs
ja
fdivrl
add
jb
or
js
repnz
inc
pusha
inc
or
jns
rcll
divb
mov
pusha
stos
xchg
sbb
push
rclb
stos
jns
pop
pop
inc
xchg
mov
out
add
jno
cli
xchg
mov
loope
les
lahf
push
xor
add
cmp
jge
xchg
dec
in
sbbb
das
mov
jl
mov
clc
add
add
cli
rcrb
loop
out
inc
jae
daa
imul
push
push
add
xor
lahf
jge
xchg
sub
mov
jns
mov
fsubrp
cltd
imul
mov
mov
addl
mov
fistpl
ficompl
test
dec
scas
mov
jo
sar
shl
or
bnd
cmp
pusha
rclb
sbb
add
pop
subl
in
lea
out
das
or
mov
ljmp
or
out
mov
pusha
mov
add
pop
mov
lahf
inc
in
sub
test
mov
sarb
shll
push
cs
sbb
popf
out
pop
sbb
add
rcrl
and
mov
movsl
xchg
sbb
or
xchg
push
xchg
dec
stos
loopne
inc
pop
lret
mov
xor
xchg
and
push
arpl
xchg
iret
mov
inc
enter
pop
xchg
sub
xor
movsb
inc
repz
sahf
sbb
jle
addr16
jle
dec
push
scas
nop
xchg
adc
jmp
or
mov
add
or
sahf
mov
xorb
sub
cs
pop
add
aad
cmc
fwait
adc
adc
out
stc
les
jae
and
enter
mov
popf
orl
sbb
jmp
mov
out
out
jne
fs
out
and
ret
js
outsb
push
lods
std
inc
test
test
xchg
pop
add
daa
cwtl
cmp
fldl
jae
mov
add
movsb
dec
sbb
cmc
sub
lret
repz
loop
push
add
jns
test
cmpsl
fnstenv
inc
insl
sarb
mov
jb
call
repz
test
pop
jb
add
movsb
leave
lods
xchg
and
push
fistl
sahf
xchg
jnp
repnz
popa
out
sub
daa
add
jmp
pop
ds
js
mov
push
cli
mov
arpl
xor
lock
das
repz
insl
xorb
jb
rcr
sbb
add
lods
inc
add
dec
jbe
inc
rol
int
pop
mov
xchg
dec
mov
and
mov
mov
sbb
xchg
sub
adc
sbb
test
lahf
or
push
out
xchg
out
or
cmp
mov
cmp
mov
xchg
jo
adcl
xor
js
dec
jns
add
lret
sub
enter
imul
sarl
add
pop
mov
es
xchg
or
adc
adc
aam
in
pop
pop
jno
cmp
adc
stos
add
jge
sub
dec
xchg
xorb
stc
dec
loopne
cmp
test
push
mov
test
add
cmpl
add
roll
mov
imul
push
jle
adc
cmp
mov
out
add
mov
mov
pop
mull
insl
pop
rorb
add
sub
mov
gs
out
and
lret
pop
fsubl
sub
test
and
aas
push
adc
js
add
lret
shrl
add
add
adc
les
xchg
dec
insb
cli
mov
ja
or
sarb
pop
adc
xchg
dec
pop
mov
into
inc
je
add
cmp
dec
cwtl
xchg
adc
mov
and
adc
cmp
push
cmp
mov
popf
std
push
scas
cmp
int
es
call
out
adc
lahf
xchg
icebp
rep
add
mov
aam
mov
stos
clc
dec
int
jg
sahf
mov
xor
sbb
jno
daa
or
loop
push
inc
stos
dec
push
mov
hlt
lods
bnd
mov
sub
cmp
add
fucomi
xor
jg
add
mov
jo
out
fbstp
jg
mov
pop
movsb
sbb
clc
lods
jl
cmp
cli
test
lea
mov
push
jb
jl
mov
dec
stos
je
add
pop
rcrb
test
fldl2e
pop
inc
jno
mov
mov
sub
adc
add
dec
xor
jno
fdivr
mov
ljmp
and
dec
inc
inc
pusha
shll
sub
add
aas
cmc
inc
pop
wbinvd
mov
xor
stos
popf
shlb
imul
sub
mov
xchg
aaa
aas
jo
out
inc
cwtl
jge
std
push
fiaddl
into
jmp
lods
mov
imul
mov
cli
rcrl
sbb
xchg
add
sahf
jmp
out
jp
mov
cmp
mov
sub
jle
add
repnz
push
adc
ds
mov
in
mov
lock
hlt
xor
cmp
sub
mov
pop
add
xlat
cs
fs
mov
pop
push
lods
call
sub
add
xchg
jmp
xchg
jo
mov
inc
dec
rcl
jnp
pop
mov
insl
push
popa
es
shrb
daa
cltd
scas
fimull
cmp
das
mov
sub
xor
xchg
scas
popf
fldl
loopne
dec
add
adc
dec
outsb
mov
iret
pop
or
test
hlt
inc
in
sub
or
add
jl
sub
insb
mov
jae
cs
fcmove
shll
push
adcb
xchg
aam
mov
xlat
pusha
lods
lds
add
add
and
das
pop
stos
das
mov
mov
test
pop
mov
iret
adc
cld
iret
add
loopne
adc
adc
ss
add
pusha
loop
das
mov
popa
and
pop
dec
push
icebp
cmp
mov
xor
adc
fstp
loop
pusha
add
push
mov
jle
inc
shll
and
jmp
push
sbb
sub
in
notl
mov
lds
and
popf
pop
mov
imul
dec
cld
test
js
sub
mov
or
dec
push
imul
jo
mov
mov
cwtl
mov
arpl
push
in
popf
or
pop
mov
inc
add
cmp
adc
jge
cs
xchg
inc
xlat
pop
xor
lods
adc
rolb
jge
jb
jno
fcomip
pop
in
mov
call
pop
in
fisttpll
imul
push
xor
jle
or
scas
sub
fiaddl
or
xchg
aam
add
xor
fisttpll
cmpb
dec
mov
mov
int3
push
mov
orl
insb
jp
scas
cwtl
jmp
mov
mov
sub
lret
stos
movsb
sbb
pop
mov
mov
mov
adc
xor
cwtl
jl
mov
ljmp
and
add
testb
mov
mov
push
out
xlat
mov
jl
and
push
scas
sbb
cmp
add
shll
add
icebp
andb
clc
outsb
mov
inc
filds
pop
stos
in
jmp
rolb
pop
ljmp
add
aas
int3
add
pop
aad
jbe
dec
push
mov
fsubr
shl
mov
sub
in
pop
pop
mov
add
mov
sarb
inc
inc
sub
jecxz
lcall
pop
mov
or
pusha
jns
cltd
xchg
test
lods
stos
or
aam
or
mov
push
testl
dec
orl
pop
pop
es
xchg
xorb
add
and
js
adc
scas
add
lods
or
dec
call
cli
mov
mov
sub
loop
sub
and
repz
cmpl
inc
cmp
dec
in
mov
adc
mov
in
jno
sub
inc
sahf
fcoms
sub
push
cmpsl
mov
dec
xor
add
inc
xchg
push
sbb
mov
inc
xor
or
push
emms
in
outsl
cmp
shrl
or
ret
jne
pop
xrelease
imul
negb
mov
test
addb
dec
mov
fstpl
cmc
mov
xchg
pop
loope
add
ret
mov
push
jl
push
ss
dec
dec
dec
aam
adc
mov
pop
dec
mov
call
push
cli
pop
mov
jne
cmc
or
mov
push
push
sbb
enter
and
or
ret
adc
mov
or
or
rorb
out
push
int
shlb
sub
pop
mov
mov
jg
ljmp
shlb
sbb
lods
cmp
dec
or
pop
mov
call
push
mov
or
cmp
xor
adc
ret
cld
push
pop
cs
jne
ds
decl
clc
push
jno
fcomp
pop
push
movsb
rolb
and
add
cmc
dec
dec
mov
jmp
cmp
je
cmpsl
add
add
jl
movsb
addr16
sbb
add
sub
and
insb
rcr
daa
xor
or
fwait
and
fsubp
pop
pushf
pop
add
sti
push
std
or
xlat
mov
inc
push
cmc
add
push
sbb
fildl
sbb
loope
push
inc
sub
mov
sbb
ret
push
incl
mov
add
mov
xlat
and
pop
xlat
outsb
add
sub
into
out
jecxz
add
cmpsb
fstpl
mov
test
insb
mov
sub
mov
pop
stos
mov
mov
xchg
pop
xor
ja
fnstcw
push
push
xchg
scas
mov
and
rolb
adc
les
jle
dec
mov
dec
shlb
les
notl
js
out
push
mov
icebp
sub
iret
dec
aam
addb
jne
mov
mov
xor
dec
adc
jbe
sarl
xchg
movsb
pop
cwtl
subb
mov
jle
mov
inc
and
sub
jmp
and
mov
shll
pop
cmp
or
add
mov
inc
push
outsl
push
sub
sbb
mov
arpl
add
lods
xchg
lahf
mov
inc
or
dec
lcall
int
enter
pop
out
add
cmpsb
pop
inc
sbbl
test
ds
rol
imul
jp
xchg
fsts
jbe
mov
push
movsb
add
rcll
or
mov
and
test
clc
inc
mov
sbb
jno
jno
pushf
scas
push
fwait
clc
sbb
stos
call
and
add
enter
cli
stos
mov
pusha
xchg
cmp
sarl
jp
sub
movsb
ds
pop
adc
adc
sbb
shl
insb
xchg
dec
in
lock
dec
or
dec
cld
jne
sbb
fsub
mov
jns
mov
lods
push
adc
mov
add
mov
data16
in
sub
xor
dec
dec
shll
clc
cmpsl
addps
add
cld
cmove
xor
bound
add
loope
ds
cltd
xchg
popf
adc
and
mov
or
push
dec
cmp
test
cmp
and
pop
int
nop
mov
mov
pop
addr16
mov
rol
out
outsb
mov
inc
repz
setp
add
xor
or
ror
mov
xchg
mov
mov
lret
xor
lret
and
out
movl
xchg
add
dec
adc
adc
jmp
jmp
mov
or
fld
into
pop
pop
push
daa
mov
das
push
push
fs
sub
jmp
dec
popw
or
push
or
push
ja
push
aad
push
rorb
add
inc
and
and
adc
shl
vmwrite
jo
add
xlat
fisttps
fmuls
sbb
add
ss
imul
clc
add
dec
insb
xchg
mov
stc
add
rol
add
or
mov
sbb
jl
test
xchg
dec
and
add
jns
pushw
or
add
stos
in
or
inc
imul
insl
mov
xchg
adc
rolb
mov
sub
test
pop
or
ljmp
cmp
js
test
xchg
sbb
out
add
enter
stos
pusha
stos
ret
add
cmp
pop
cmp
clc
cmp
or
add
sub
adc
adc
adc
push
jmp
mov
dec
push
fidivrl
and
xor
adc
cwtl
xor
push
adc
orb
adc
insl
mov
inc
or
xor
ds
inc
dec
xchg
movsl
adc
adc
mov
mov
nop
sub
and
pop
vunpcklps
fdivrs
testl
xchg
nop
xchg
or
mov
pop
inc
push
push
add
subl
add
popa
pop
ret
push
mov
adc
rclb
adcb
add
and
cs
addl
pop
push
ret
cmpsb
dec
push
dec
pop
sbb
arpl
clc
jp
in
test
das
pop
or
adc
adc
xor
add
sbb
mov
ret
mov
push
adc
mov
xor
sub
nop
fildll
pop
incb
lgs
sbb
enter
dec
sub
jecxz
sbb
xor
add
fbstp
and
test
add
fninit
rol
lahf
rolb
push
push
and
leave
xchg
dec
xor
cmc
andb
gs
pop
lahf
cmp
lea
imul
add
neg
push
add
pop
xor
orl
jae
loopne
cmp
popl
andl
dec
jl
mov
subl
sub
outsl
adc
pop
xchg
sbb
add
inc
fsub
cltd
xchg
and
sti
fcmovb
mov
mov
adc
iret
xchg
add
sbb
pop
ret
orl
inc
push
jnp
add
mov
aad
mov
push
dec
pop
fwait
adc
or
subl
mov
inc
or
or
subl
xor
fdivrs
add
aas
adcl
add
jb
call
test
imul
arpl
xchg
orb
dec
mov
mov
add
rolb
mov
int
shlb
pop
mov
and
gs
push
sbb
flds
rolb
stos
sbb
inc
inc
icebp
repz
mov
xchg
push
and
sbb
mov
sbb
mov
inc
fcom
pop
cmp
cwtl
cmpsb
add
fists
ffree
mov
and
push
adc
xlat
add
add
filds
sbb
add
add
inc
das
xorl
xor
or
push
add
mov
iret
mov
push
pop
pusha
adc
jnp
jbe
repz
fildl
pop
lret
mov
stos
jb
lock
add
pushl
push
test
or
shlb
inc
pusha
clc
or
movsl
loop
jno
add
adcl
add
imul
fs
pop
jle
pop
mov
ret
jne
jg
inc
cmpsl
imull
jle
mov
push
pop
lods
jnp
mov
stos
sub
xlat
lods
inc
ljmp
das
shll
add
popa
scas
mov
add
ffree
push
xor
call
cld
sbb
fcompl
gs
pop
hlt
xchg
add
adc
push
mov
cltd
cmp
sbb
pop
loopne
mov
sub
cmp
popf
and
xor
and
mov
movhps
adc
add
pop
add
cmpsb
je
sub
callw
dec
xchg
das
pop
cmp
add
push
nop
and
add
arpl
add
in
sub
add
into
xlat
outsb
add
insl
or
inc
jne
loop
add
in
mov
push
push
xchg
add
xchg
outsb
cwtl
pushw
xor
push
jo
lsl
cmp
loope
sub
xchg
into
cmp
popa
stos
mov
add
add
or
or
pushf
fldcw
jl
xchg
movsb
and
ljmp
fadds
add
xchg
int3
adc
les
push
cli
shrb
fadds
and
inc
xchg
dec
inc
lret
lock
xor
fisttpll
jecxz
add
leave
mov
cld
xchg
inc
insb
inc
xor
jge
out
aas
das
add
sbb
xchg
mov
out
cwtl
pop
cmc
xlat
sarl
xor
jae
fwait
add
call
push
mov
loop
clc
mov
dec
xchg
jl
add
cmp
mov
sub
outsb
jae
add
data16
fiaddl
subl
add
pushf
sbb
outsl
push
stos
enter
mov
pop
jecxz
lods
lock
nop
adc
adcl
cmp
jp
add
es
mov
jb
dec
add
inc
pop
outsb
add
xor
pusha
mov
cltd
inc
push
xor
sbb
add
fists
add
nop
ret
pop
push
hlt
sub
adc
jae
add
pop
or
sub
mov
mov
movsl
cmpsb
push
xor
pop
sbb
jmp
arpl
push
xor
imulb
and
mov
mov
and
mov
adc
add
sbb
inc
mov
insb
add
push
push
sti
adc
pop
add
scas
jne
dec
lock
jge
jo
mov
and
lret
je
sti
int
popa
pop
je
add
inc
loope
fldenv
cmc
daa
jae
fs
sbb
dec
xchg
test
sbb
and
hlt
movsb
push
into
fs
call
fimull
mov
adc
cld
and
js
or
cmpsb
insb
xchg
js
add
sub
arpl
jmp
xchg
aad
pop
ret
test
aaa
jle
xchg
leave
lahf
daa
insl
push
pop
add
pop
sti
xor
sub
xchg
add
cmp
or
cmp
and
mov
push
add
push
adc
and
add
aas
call
popa
sti
notb
lea
sbb
jle
lret
mov
popa
push
pushf
loopne
sub
and
shrb
out
inc
out
out
pop
mov
sahf
fildll
xlat
stos
repnz
pop
sub
lea
lods
adc
dec
idiv
pop
push
call
xchg
lcall
or
and
push
shrb
mov
sub
jns
mov
cmpsl
fadd
mov
jmp
addb
add
sbb
lahf
int3
jle
call
incb
enter
sbb
outsb
adc
movsb
and
sub
cmp
jg
fcmovnbe
dec
push
hlt
mov
sub
mov
mov
or
xor
pop
test
movsb
sahf
cwtl
dec
aaa
dec
mov
push
dec
push
call
add
xor
push
cmp
dec
test
add
cmpsl
inc
or
movsb
add
in
jle
aam
mov
leave
scas
or
rclb
rorb
mov
mov
mov
and
cli
fnstsw
fimuls
jae
jge
mov
add
xor
adc
aad
cld
add
fiaddl
add
lcall
test
mov
andb
dec
in
icebp
add
pop
incb
into
test
movsb
mov
inc
bound
sub
mov
xchg
rcl
leave
push
out
dec
addb
test
xchg
pop
hlt
lret
daa
adcb
rcrb
jl
add
cmc
pop
pop
pop
roll
je
add
es
adc
and
movl
cli
add
lret
xchg
pusha
rorl
call
fadd
add
flds
imul
add
cli
push
adc
mov
in
or
leave
insb
add
aaa
cmpb
std
add
into
shrb
popa
clc
jp
in
rcll
add
cmpsl
adc
add
xor
jl
dec
aam
add
push
ret
ljmp
into
cmp
mov
mov
rcrb
stos
nop
test
iret
jae
repnz
out
daa
rcrl
in
xchg
pop
scas
into
loope
aaa
pop
pop
out
pop
cmp
jle
inc
jo
sub
add
adc
dec
dec
rolb
pop
and
rolb
dec
test
jb
hlt
imul
xlat
cmp
inc
add
dec
in
xor
cltd
sahf
stos
sbb
push
call
sbb
sbb
gs
mov
paddq
test
fnstcw
pop
cmc
jnp
push
pusha
mov
das
es
xchg
hlt
adc
add
popa
xchg
or
pop
call
xchg
push
jg
fisubl
xorb
and
flds
imul
idivl
push
cmp
jno
adc
cmp
or
lahf
xchg
es
inc
in
xchg
xchg
nop
add
xchg
pop
ljmp
adcb
dec
jle
push
sbb
add
test
es
and
push
mov
cmp
ss
pushl
add
int3
add
rcrb
mov
jg,pn
sub
sarl
or
movsb
rolb
enter
lcall
js
jmp
inc
rcl
test
pop
test
inc
dec
add
out
fiadds
imul
rol
cmp
int
push
dec
add
aam
adc
add
add
xor
addb
jg
mov
jb
and
sbb
add
pop
pop
sbb
mov
mov
or
dec
in
pop
inc
or
mov
add
imul
mov
jle
pop
push
mov
mov
push
add
jmp
sub
clc
mov
test
fdiv
jg
mov
push
add
sub
xor
loope
cld
xchg
and
lods
outsl
xlat
adcb
int3
add
mov
dec
inc
add
aam
mov
lret
sub
and
pcmpgtb
lods
dec
and
fimuls
subb
enter
shlb
dec
orl
out
dec
call
dec
dec
xor
in
mov
fs
int3
lcall
pop
fnstsw
jnp
mov
getsec
cwtl
icebp
popa
add
xchg
sahf
sbbb
ret
stc
test
fists
mov
add
lcall
mov
mov
cs
jne
subb
jmp
mov
sahf
mov
aaa
pop
add
clc
mov
dec
nop
sar
fistpll
jmp
xchg
add
andb
int3
mov
nop
shl
lods
pop
xlat
pop
sub
in
mov
sbb
adc
xor
cmpl
adc
jo
sub
push
xchg
add
les
subl
mov
mov
mov
add
add
lock
dec
cmp
sbb
push
sbb
ret
pop
cmpsb
adcb
jp
add
rol
push
xchg
pop
add
loop
push
mov
jge
xor
adc
dec
sbb
inc
push
ss
loope
adc
stos
push
lea
xor
and
adc
dec
mov
and
mov
jnp
add
hlt
loop
ja
mov
cmpsb
je
fwait
xchg
iret
and
stos
add
cmc
push
add
mov
xor
and
add
out
dec
adc
mov
dec
cmc
mov
pop
add
cmpsl
je
stos
jo
sahf
js
dec
mov
xlat
fiaddl
in
out
jecxz
jns
loopne
xorl
test
jp
insb
xchg
lods
inc
add
xor
xchg
and
inc
xor
js
mov
out
mov
jmp
mov
jno
inc
inc
sbb
inc
lds
and
enter
fiadds
stos
test
xchg
sbb
push
mov
outsl
jo
inc
adc
jae
lock
push
popa
nop
and
sarb
fldl
sbb
cs
cwtl
pop
xchg
add
and
scas
sub
lds
or
mov
add
mov
mov
add
mov
mov
push
mov
or
pushl
jnp
cld
or
nop
pop
mov
shl
and
nop
sub
mov
mov
and
mov
aam
enter
jle
xchg
lahf
test
je
fsubrp
xchg
scas
mov
lret
orb
add
jmp
push
mov
stos
inc
push
mov
dec
xchg
in
mov
orb
or
mov
test
jo
push
add
mov
dec
add
hlt
push
sub
rorl
insb
xchg
cltd
pop
jbe
les
movsb
jno
fs
add
push
xchg
gs
arpl
push
data16
jl
jp,pt
es
add
mov
ret
imul
js
or
nop
pop
sub
pop
stc
and
and
cmp
add
aam
sarl
pop
mov
sbb
cmp
mov
je
push
add
stc
ljmp
mov
lea
leave
add
ret
dec
aad
or
jo
add
rorl
add
mov
hlt
add
pop
mov
lret
jo
sbb
ror
sub
and
dec
mov
popf
mov
roll
mov
dec
repnz
cmpsb
imul
ja
dec
test
dec
in
js
inc
add
inc
mov
je
mov
aaa
lret
add
lods
adc
mov
add
out
pop
cmp
inc
arpl
loope
xchg
cmp
and
int
mov
add
and
jae
add
cmp
add
mov
test
add
mov
and
cmp
in
out
subl
push
add
mov
fldcw
pusha
outsl
hlt
jae
or
jmp
jns
add
in
stc
rolb
push
mov
je
sbb
aam
sarb
lret
dec
fbstp
mov
mov
lods
adc
les
jp
lock
xchg
add
add
sbb
out
mov
aad
loope
mov
cmp
mov
cmp
mov
pop
rolb
popa
sbb
andb
aas
adc
bound
test
pop
hlt
test
add
js
jle
sbb
push
sub
shll
cli
add
imul
dec
jl
sub
jo
popf
mov
adc
std
jg
mov
rclb
push
fidivs
jns
mov
mov
sbb
push
sahf
fistpll
xorb
fistps
enter
xchg
lock
push
subb
xchg
js
adc
add
pop
jl
lea
call
test
sbb
int3
loopne
cmp
jl
add
pop
jno
scas
pop
and
das
add
xchg
pushf
mov
xchg
add
mov
inc
xor
ss
pop
aaa
hlt
add
push
dec
inc
sbb
cwtl
or
adc
stos
enter
in
imul
andl
faddp
jmp
push
add
mov
sub
imul
lods
push
sahf
cmp
or
pushf
mov
mov
or
jmp
jecxz
in
mov
xlat
xor
ja
in
add
rorl
and
popa
lock
xchg
add
xchg
adc
add
pop
xor
add
sbbb
add
rol
mov
lods
mov
les
add
loopne
hlt
add
int3
cmp
and
repnz
ds
test
adc
dec
cmp
fwait
cmc
sub
js
add
mov
loopne
sbb
lods
mov
mov
mov
and
and
loope,pn
push
xchg
add
and
jnp
jle
popa
sbb
inc
sub
in
sbb
addl
shlb
mov
dec
adc
xchg
call
mov
sbb
xor
cmpsl
vorps
daa
push
bound
pop
inc
and
sbb
inc
popa
add
repz
mov
lods
ficomps
test
add
mov
sarb
sbb
ss
std
psllw
pusha
js
adc
and
dec
sub
mov
cmc
inc
testl
add
xchg
push
pop
cmpsb
add
jno
inc
cmp
adc
jb
push
call
inc
lock
divb
add
fcompl
pop
fldenv
jne
fldl
jl
adc
lock
rolb
cmp
cwtl
mov
add
cli
xchg
or
shll
add
jp
mov
sbb
lret
leave
jns
test
mov
add
mov
bndldx
leave
setl
loopne
and
inc
test
mov
test
mov
add
test
aam
mov
rolb
in
pop
and
cmpb
add
data16
addb
sarb
fs
mov
sbb
add
inc
add
enter
push
or
xor
in
sub
push
cmc
test
jb
inc
add
pop
add
jg
sbb
sbbb
mov
cltd
inc
cmc
js
mov
pop
add
jno
mov
jbe
xor
push
dec
stos
xor
je
add
in
xor
mov
cmpsb
pushf
xchg
cmc
data16
xchg
mov
jp
outsl
insl
loopne
cmp
dec
test
push
or
es
fadds
mov
iret
mov
adc
cmpsb
jle
lcall
addr16
outsb
and
jno
add
out
pop
dec
ss
add
jge
push
add
mov
loopne
pop
rorl
shl
xchg
dec
das
sub
mov
xchg
push
test
out
jmp
jmp
out
add
je
mov
sbb
xchg
add
inc
mov
inc
dec
or
in
fnstsw
add
mov
lock
adc
or
adc
push
push
fs
mov
dec
aam
push
push
or
xor
add
sahf
int3
or
sub
rolb
rcrb
add
test
div
arpl
and
or
sbb
pop
add
push
stos
ror
add
fisubs
cli
dec
and
inc
cltd
push
mov
mov
push
out
sahf
xchg
dec
mov
cmp
mulb
das
or
pop
mov
push
in
add
xchg
jle
aad
sbb
in
and
add
adc
mov
loopne
movsb
jle
push
pop
inc
add
cmp
sbb
sub
add
xor
popa
pushf
cmpsl
inc
in
push
repz
push
add
out
loopne
nop
add
or
xor
push
pop
xor
clc
mov
and
pop
shlb
sub
aam
xlat
movlps
pop
mov
fnsave
cs
je
stc
add
and
addb
sbb
shr
add
lds
and
daa
cld
imul
lret
cmp
and
jo
pop
jns
mov
inc
mov
or
imul
add
adc
call
jae
dec
das
mov
or
or
les
pushf
ja
scas
scas
push
fcomps
pop
add
jmp
add
sub
pushf
push
and
jns
and
bound
add
scas
fldcw
mov
pop
jnp
dec
mov
jae
in
or
jne
pop
out
hlt
adc
add
mov
popa
sub
mov
cmp
jnp
and
arpl
add
jne
and
sarl
rcrb
and
lds
inc
cmpsb
stos
pop
out
mov
xor
cmp
inc
pop
push
rcr
add
punpckhwd
or
cmp
jno
inc
stc
jnp
test
cmp
inc
enter
push
sub
rorl
pusha
mov
inc
add
test
aaa
dec
cmp
or
sub
mov
pop
pop
dec
lcall
mov
pop
shrl
adc
xchg
push
movl
dec
adc
add
sbb
pop
add
sub
ret
imulb
movsb
jno
test
push
cmp
jg
or
xchg
jp
aas
or
sub
sub
xor
mov
out
js
push
scas
pop
loopne
mov
pop
repz
les
cmpb
add
push
insb
mov
mov
mov
pop
add
push
jmp
js
add
faddl
lahf
daa
push
dec
add
add
add
movsb
pop
or
jb
scas
xchg
add
sub
sub
cmpsb
add
repnz
out
addb
int3
add
insl
es
pop
roll
cs
hlt
decl
mov
movsb
add
std
aaa
aas
cmc
push
adcb
rep
sahf
loopne
mov
dec
xchg
dec
add
leave
aam
xor
mov
movsl
sti
add
arpl
jecxz
mov
inc
loopne
mov
sub
ret
mov
pop
stc
rcrl
inc
xchg
aad
push
aas
xor
aaa
add
sbb
in
out
add
xor
cs
data16
ret
test
pop
stos
insl
aad
cld
cmpsb
dec
add
or
out
pop
cmp
add
mov
or
fiadds
pop
fcomps
sub
push
cmp
fs
lods
in
ret
dec
mov
js
hlt
xor
dec
xor
push
sub
jo
push
mov
test
outsb
movb
fsubs
pop
ficomps
add
pop
test
push
sbb
pop
push
cmpb
jno
cld
mov
out
icebp
out
fs
add
pop
mov
sbb
jne
xchg
mov
es
in
xchg
or
sub
adc
stc
stos
sbb
fwait
xchg
testb
test
data16
int
and
lods
insb
mov
dec
pushf
mov
cs
add
nop
divb
add
sarb
cld
aas
add
repnz
ror
or
pop
sub
popa
push
xor
hlt
add
in
insl
mov
outsl
lcall
ficomps
adc
xchg
adc
lock
movsl
cltd
iret
xchg
in
aas
inc
or
xchg
jb
jae
sbb
sbbb
out
xorl
cs
mov
lods
stc
lahf
mov
xchg
outsb
mov
push
add
rorl
add
je
outsl
loope
sub
add
mov
lock
add
mov
out
xchg
mov
or
mov
add
push
xor
jp
cmp
shrb
imul
mov
mov
add
jp
pop
insb
loopne
aam
shlb
add
add
and
xchg
mov
cmp
push
and
pop
xchg
cmp
add
dec
pop
xchg
add
sbb
mov
mov
push
pop
mov
je
pop
aad
dec
sarb
cld
mov
add
inc
bound
ret
push
mov
and
jno
faddl
aad
xchg
push
lret
inc
sti
and
dec
fsubs
sbb
and
mov
push
inc
test
dec
sub
lods
mov
push
add
or
aam
orl
jne
add
and
push
add
and
call
sbb
sub
loopne
dec
pusha
outsl
pusha
adc
lcall
std
xor
and
mov
inc
enter
dec
fldenv
aam
jnp
fcmove
dec
mov
fwait
repz
sbb
pop
insb
insl
add
jl
jp
jae
inc
in
xchg
cmc
add
mov
dec
add
add
add
mov
ja
mov
std
testl
jge
fsubr
rcll
in
and
sbb
pop
pop
aam
dec
pop
loopne
data16
rorb
adc
add
setg
pop
jae
cmp
call
or
pop
pop
addr16
adc
and
mov
data16
push
adc
xor
xor
adc
pop
icebp
loopne
push
add
imul
jns
add
xchg
daa
mov
loop
or
mov
mov
cmp
push
jno
cmpb
jecxz
cmp
mov
mov
pop
add
add
sub
adc
scas
cmc
insl
push
int
sbb
dec
iret
rclb
hlt
add
adc
ret
lret
ja
pushf
in
fcmovu
clc
andb
scas
cmp
adc
dec
loopne
or
sbb
sbb
pop
add
lcall
cli
and
xor
dec
mov
lods
adc
and
leave
sti
insb
nop
loopne
aas
add
cmp
stos
mov
push
or
mov
mov
dec
sbb
push
xchg
lock
lods
add
xor
aaa
add
pop
pushf
mov
and
imul
ret
int3
cmpsb
leave
dec
add
js
pop
lods
or
xor
cmp
lcall
int
and
lock
add
jp
fcompl
xchg
and
outsl
sti
inc
pop
xchg
sbb
push
add
lcall
lods
sahf
mov
aad
jl
fwait
and
xchg
sub
or
aam
fdivrl
or
cmp
xorb
test
pushf
mov
ret
clc
pop
mov
cmpsb
mov
or
xor
add
inc
and
mov
addr16
mov
pop
sub
xadd
push
pop
cmp
add
cmp
bnd
xor
xor
add
dec
rcrb
xchg
scas
mov
push
pushf
movsl
pop
sti
add
fiadds
dec
in
mov
dec
ds
mov
and
add
orl
add
popa
jb
or
pop
enter
xor
mov
mov
and
jmp
pop
add
push
hlt
incb
enter
testb
sub
mov
mov
repz
jnp
repnz
mov
or
add
inc
scas
push
aam
add
cmp
jmp
sbb
cmp
fimuls
push
into
inc
inc
test
add
cmp
sub
movsb
pop
dec
enter
sbb
push
or
rcll
sbb
add
cmp
xor
dec
add
sub
pop
dec
lods
or
mov
jg
dec
mov
jb
jbe
inc
push
call
push
lahf
xchg
or
es
xchg
shl
dec
push
inc
cmp
mov
test
pop
add
sub
xor
jmp
jecxz
adc
pop
push
add
scas
and
add
ljmp
rolb
sbb
push
inc
test
add
xchg
adc
stc
loope
rorl
in
pop
push
and
mov
xchg
add
or
sub
push
adc
mov
and
aam
or
rol
ljmp
jle
bound
or
add
sahf
gs
xor
hlt
lret
add
ret
into
xlat
cmp
nop
inc
movsb
fstl
movsl
add
ret
shrl
and
fisubl
pusha
push
cmp
mov
pop
int
jne
in
xchg
adc
cmp
movsb
cli
xor
rol
inc
fidivs
inc
test
mov
jmp
add
cltd
call
add
or
or
pop
loope
ret
or
sbb
loop
xchg
enter
mov
add
hlt
sbb
test
imul
fsubs
fadd
adc
testl
andb
push
nop
sub
add
aaa
fnstsw
les
aas
std
and
add
scas
inc
scas
out
xchg
add
mov
cmp
inc
sub
out
xchg
adc
cs
bound
or
add
fsubs
mov
insl
enter
and
stc
xchg
pop
mov
and
inc
or
popf
fisttpl
enter
mov
dec
test
movsl
inc
mov
jle
add
adc
push
shrl
shrb
clc
cltd
push
fs
mov
mov
je
add
jmp
gs
ret
sub
dec
sub
mov
imul
jge
sub
pop
add
and
push
aam
cmp
mov
mov
pop
stos
push
shrl
iret
add
daa
ljmp
sub
popf
or
neg
add
popa
mov
cs
push
and
inc
jno
lock
gs
dec
addl
mov
push
fsubrp
incb
push
adc
push
pop
jmp
dec
add
pxor
adc
shl
sub
xor
add
sub
and
add
mov
cmove
xchg
int
mov
lock
rorl
movsl
ret
cmp
pop
push
mov
dec
sbb
or
nop
dec
add
insl
cwtl
add
in
jg
lret
aam
xchg
cmp
ror
mov
outsb
movsb
into
int
call
add
xor
xchg
jmp
nop
adc
inc
stos
adc
insb
mov
call
ja
in
sbb
jle
fcoml
int
leave
jnp
lds
pop
xor
pop
xchg
xor
xchg
fistl
or
push
xor
pop
cwtl
incb
fcmovnb
pop
cmp
pop
clc
inc
or
fldcw
pusha
mov
cli
or
int3
xchg
loopne
fidivs
or
jb
inc
sub
divb
sub
xorb
adc
add
adcb
jae
push
add
xchg
mov
inc
inc
sarl
shrl
aaa
mov
daa
ss
or
sub
xchg
add
mov
jbe
pop
jno
add
cmc
push
or
xchg
sub
cld
jle
sbb
loop
add
das
xlat
idivl
add
aad
into
adc
add
jle
out
lods
je
adc
sahf
mov
inc
jecxz
mov
or
push
aas
xor
xchg
jnp
pop
dec
adc
add
mov
lods
sub
push
adc
jnp
dec
or
and
mov
add
incl
adc
ds
ret
mull
fdivl
jo
push
nop
xor
or
mov
mov
mov
add
inc
or
adc
xor
jle
ljmp
sbb
inc
cmp
cmp
call
cwtl
or
xor
dec
in
mov
loop
jne
pop
jmp
jnp
inc
loope
lahf
xchg
add
cltd
les
je
and
int
rclb
aas
xor
data16
je
sbb
in
pop
cld
scas
add
sub
push
jecxz
insl
add
int
into
add
jmp
ja
and
hlt
cmp
pop
imul
inc
loop
and
cmp
je
inc
shrb
add
ja
add
in
push
int
add
aaa
cmp
lahf
push
add
add
sub
xorl
add
mov
pop
or
loope
inc
xor
xchg
add
addr16
sbb
add
xchg
mov
stos
mov
xor
add
dec
cmc
adc
repz
xchg
pop
jae
or
adcl
or
repnz
push
adc
loop
cmp
pop
dec
and
mov
add
cmovae
cmpsl
add
mov
call
mov
or
mov
bound
add
cmp
aad
sbb
je
push
fstpt
push
mov
jae
xor
cmp
sbb
fdivrs
lods
cwtl
xchg
clc
ja
rclb
pop
cmp
dec
notb
out
add
push
xorb
or
imul
int3
adcl
hlt
pushf
lock
inc
lea
add
xchg
xlat
jle
pusha
add
les
gs
adc
rol
and
add
adc
cmpsb
imul
in
add
popa
in
mov
jp
fdivrs
cmp
push
fbstp
out
out
aam
sub
xor
mov
pop
mov
mov
fiadds
hlt
stos
xchg
and
mov
add
or
adc
and
or
pop
dec
mov
out
lcall
clc
mov
notl
clc
add
mov
lods
stc
add
mov
mov
pusha
or
scas
test
push
mov
xchg
data16
cmp
add
push
pop
lahf
dec
mov
push
or
js
sub
xor
adc
pop
jecxz
outsb
jno
xchg
or
cmp
add
cmp
inc
xor
mov
lock
mov
pop
mov
dec
add
cmp
sub
sarl
sbb
daa
and
add
jb
cwtl
pusha
add
push
mov
sub
xchg
sbb
inc
jp
imul
push
mov
adc
add
fs
out
mov
lahf
xchg
pop
inc
and
loope
and
mov
adc
inc
inc
push
sbb
push
aam
pop
sub
js
and
jb
pop
in
jns
in
out
data16
ret
sbb
add
insb
add
outsb
out
mov
and
xlat
andb
add
or
outsl
push
add
xchg
repz
mov
cmp
xor
ds
sub
cmp
mov
mov
inc
dec
dec
testb
into
add
xchg
push
mov
cwtl
mov
add
pop
das
mov
jmp
pop
movsl
mov
adc
sub
call
out
push
js
mov
mov
cmp
aad
enter
xchg
inc
clc
outsl
add
adc
push
add
loop
in
bound
faddp
cld
pop
jb
push
mov
push
lock
sub
popa
and
test
add
cli
sahf
add
movsl
mov
nop
or
inc
fnsave
sub
jl
jecxz
fs
dec
idiv
shrb
js
mov
jne
push
add
xchg
jno
loope
pop
xor
xor
or
jns
and
add
inc
cmc
xor
xchg
pop
inc
sub
int
pop
jecxz
pop
dec
add
push
cmp
add
fdivl
cmp
mov
jbe
add
adc
shrb
pushf
jg
add
leave
lea
ja
add
movsl
pop
aam
xor
rol
add
inc
ss
dec
cmp
jbe
push
dec
cmp
sub
sbb
fists
out
and
inc
mov
mov
rol
push
dec
jp
or
jb
fwait
add
jne
bound
sub
rcrb
inc
repnz
rorl
cmp
mov
mov
cld
mov
lods
mov
pop
das
cmovae
loopne
xchg
sti
rorl
ret
mov
push
loopne
xchg
and
xchg
loopne
mov
cmp
add
ficoms
push
std
sub
subb
mov
add
add
aas
dec
rolb
inc
test
fimull
cmp
ljmp
add
cli
dec
sub
xchg
or
lods
loopne
add
frstor
jnp
arpl
add
sbb
outsl
rcrl
scas
mov
mov
add
cs
popf
xorb
sub
jo
and
lcall
cmc
add
lods
sarl
in
cmpsb
pop
adc
mov
scas
loopne
adc
call
rolb
sar
add
movsl
aas
add
ljmp
shrb
in
push
cmp
mov
mov
mov
lea
lds
fmull
pop
mov
add
xchg
jge
pusha
iret
stos
xor
aas
std
pop
pop
cmp
fiadds
cmp
jb
fiaddl
loop
and
mov
push
xor
shll
add
test
int3
daa
ss
sub
pusha
sub
xor
bound
xchg
lret
popf
divb
scas
mov
jmp
in
mov
repz
sti
and
cwtl
ss
or
in
inc
fmulp
pop
xor
scas
mov
and
dec
iret
popf
loope
xor
test
jecxz
pushf
mov
out
int3
pop
mov
add
ds
je
mulb
ret
dec
adc
mov
jnp
pusha
dec
pop
inc
jge
mov
fnstcw
jmp
pusha
pop
sub
mov
addl
incb
out
ret
test
jle
jl
lcall
rep
cmpl
rorl
add
xor
mov
jg
loope
mov
cmp
mulb
sbb
jo
add
aaa
pusha
push
push
mov
mov
xor
test
outsl
xchg
jecxz
inc
ds
mov
push
mov
popa
sub
push
inc
imul
nop
cmp
das
pop
leave
call
mov
negb
pushf
cmc
dec
add
hlt
daa
lods
ljmp
loopne
cmp
cwtl
cmp
push
ficompl
lcall
pushf
test
js
int
ja
sbb
leave
jnp
shll
scas
popl
xchg
add
stos
mov
testb
inc
in
pop
jmp
push
mov
es
je
or
adc
enter
scas
xchg
or
sarl
test
adc
or
cmp
adc
or
js
pextrw
sub
rol
mov
add
sub
or
scas
insb
push
nop
arpl
push
and
fiadds
xchg
pop
push
cwtl
adc
sbbl
or
jae
daa
push
or
lea
incl
dec
cmp
loop
hlt
push
mov
sub
mov
sbb
int
ss
loopne
dec
mov
and
add
sub
mov
xchg
testl
rorb
jg
mov
mov
fisttpll
sub
mov
inc
sbb
mov
js
add
fwait
ret
dec
mov
pop
push
lods
jge
cld
cld
add
mov
dec
and
mov
sub
out
lods
scas
sbb
mov
and
xor
add
xchg
pop
mov
jo
jae
adc
bound
in
sbb
inc
dec
mov
adc
xchg
push
push
add
scas
and
pop
inc
lds
ret
ss
sub
pmulhuw
inc
mov
dec
loopne
mov
das
shlb
mov
and
add
andb
or
xorl
dec
mov
mov
lods
fsubp
jb
aam
push
add
dec
into
in
jmp
nop
sub
jle
dec
xor
pop
in
xchg
and
mov
outsb
and
cmp
lahf
dec
nop
mov
jo
mov
outsl
push
jne
sbb
adc
in
push
inc
jae
xor
das
push
push
mov
xor
bnd
stc
sbb
push
mov
sbb
enter
fists
cmp
jp
pavgw
jne
cwtl
mov
fs
lahf
add
fucom
dec
and
add
loopne
adc
outsb
or
lcall
sbb
inc
lahf
loopne
mov
cltd
mov
mov
cmp
nop
dec
std
cmp
inc
add
insl
fwait
and
or
xor
jb
fdivrs
loop
aas
push
pop
pop
dec
add
push
sarl
sbb
dec
mov
xor
pusha
adc
xor
daa
test
enter
sub
sub
pop
lret
and
ficoms
fdiv
jb
mov
xor
xor
mov
inc
imulb
dec
rclb
repz
mov
add
push
clc
rcll
leave
pop
inc
in
add
jmp
test
adc
mov
inc
insb
scas
inc
movsb
mov
andb
jge
jne
mov
mov
add
jp
aam
pop
sar
sbb
loop
daa
or
cltd
icebp
ss
sub
addb
out
push
xor
gs
adc
test
pop
inc
movsl
lods
push
mov
jne
pushl
nop
or
inc
cmp
imul
nop
pusha
jmp
sub
lock
inc
add
fiaddl
fistl
mov
js
pushf
add
xor
add
into
cltd
adc
or
add
adc
mov
hlt
ret
lods
in
ja
add
push
rclb
in
xchg
movsb
cmp
push
inc
out
ret
pop
mov
inc
push
aas
pop
sub
inc
js
adc
or
out
sbb
shrb
jo
adc
and
sub
or
aad
test
mov
mov
decl
sbb
push
jae
pop
add
jb
mov
mov
or
jne
cmp
inc
popf
sbb
cmpb
push
add
push
rcll
cmp
lea
mov
imul
sbb
xchg
jge
aam
clc
dec
in
in
push
loop
out
xor
inc
sbb
adcl
bound
xor
inc
pop
adcb
jo
int3
sub
add
xor
sahf
pop
lret
sar
cmpsb
jns
std
test
cmp
pusha
call
push
jo
call
or
in
ret
jg,pn
test
dec
test
ljmp
stos
mov
in
decb
aad
and
test
dec
xor
shrb
popa
pop
and
adc
negb
jno
outsb
cmpl
das
nop
in
mov
je
xor
mov
add
out
mov
roll
cmp
mov
xlat
mov
push
cmp
inc
xchg
pushl
mov
pop
loop
ds
in
jge
fmull
les
dec
pop
int
xchg
out
nop
lods
adc
xor
inc
xor
sbb
cmp
stos
sub
adc
ljmp
cli
test
loope
mov
add
cmp
lret
call
xchg
adc
out
pop
jb
jg
lea
rolb
imul
pusha
cmp
imul
jae
pop
pop
das
push
cmp
add
and
jo
or
sbb
dec
jno
add
cmpsb
outsl
jbe
push
jg
xchg
shl
movsl
inc
xchg
and
cmp
mov
add
push
mov
add
jo
subb
or
mov
mov
lock
ljmp
cs
inc
xor
add
add
sub
insl
fiadds
adc
xchg
mov
test
inc
subb
sbb
push
cmp
call
jns
adc
pop
and
add
dec
pusha
sub
mov
pop
lods
mov
dec
aad
mov
adc
imul
rcrl
notb
popl
or
mov
cli
sbb
push
cmp
push
pop
and
or
xchg
or
cwtl
push
into
or
and
std
lods
add
add
sarl
stc
add
test
sti
mov
sarb
nop
push
push
mov
cmp
add
mov
inc
daa
mov
mov
cmpsl
pusha
cltd
and
sahf
int3
adc
mov
xchg
ja
pushf
dec
movsl
cld
cmp
add
mov
aad
add
popf
pop
add
stc
lods
into
sbbb
push
add
push
fmull
outsb
adc
push
add
ljmp
cmp
subb
push
inc
lods
cmp
add
aaa
lcall
and
leave
add
xchg
inc
nop
faddl
inc
test
jge
lret
pop
cmp
mov
and
mov
flds
adc
and
repz
lds
add
shr
sbb
cmovbe
in
iret
shr
cmpsb
cmp
mov
ljmp
ds
inc
xchg
inc
add
or
in
xor
js
shrl
outsb
mov
gs
lahf
loopne
push
xchg
push
push
popf
inc
pop
mov
add
scas
inc
pop
push
jnp
sub
mov
in
push
sbb
add
jmp
sbb
jecxz
sub
add
pop
xor
adc
clc
mov
add
clc
std
das
shlb
notl
cmpb
cmp
xor
shlb
dec
push
mov
in
testb
iret
and
ret
aas
rolb
ds
add
xor
adc
add
pusha
xchg
sbbb
add
adc
cli
mov
dec
sub
cmc
xchg
jno
adc
outsb
pop
fcmovbe
add
push
leave
aad
push
dec
push
or
hlt
mov
add
ljmp
or
outsb
lahf
sub
mov
push
mov
mov
js
or
mov
pushf
repnz
mov
push
daa
stc
shrl
int3
dec
cmp
sub
inc
jnp
shll
out
add
fimuls
add
dec
add
dec
mov
add
cs
add
cmp
outsb
add
clc
jl
push
loopne
add
push
push
pop
and
jae
sbb
jmp
inc
xchg
ficoml
lods
rolb
push
cmpl
add
out
add
pop
ljmp
pop
orb
mov
mov
inc
add
jmp
in
pop
out
arpl
cwtl
add
mov
fimull
aas
jns
add
repz
add
mov
lods
aam
mov
sahf
pop
inc
loopne
jg
dec
sbb
pop
popf
mov
shrb
pop
add
sub
into
test
or
or
fsub
push
or
adc
mov
aam
insl
pushf
sti
rolb
out
mov
roll
jecxz
les
out
fldl
mov
add
push
lret
clc
mov
push
add
ljmp
add
insb
es
and
out
data16
std
cltd
rclb
mov
or
insl
nop
adc
xor
add
imul
shll
call
pop
shrb
or
xor
inc
xchg
stos
sbb
adcl
fdivrl
ret
push
xchg
cwtl
and
ja
out
jnp
bnd
int
aad
outsl
in
add
push
fmuls
add
sub
outsl
mov
hlt
mov
stc
pop
mov
inc
add
xchg
icebp
cwtl
xorl
jne
lods
mov
sub
mov
dec
sbb
xchg
jecxz
addb
pop
out
mov
nop
xor
adc
clc
lds
or
jg
lods
dec
push
aad
rolb
xchg
mov
cmp
jne
add
adc
jmp
jae
js
jbe
icebp
pop
outsb
xor
dec
mov
lds
add
xlat
jno
jne
fimuls
inc
in
add
mov
xchg
clc
push
jnp
push
shrb
jns
inc
in
cmpsb
mov
add
lret
cmp
inc
jmp
enter
xlat
fsub
dec
fstpt
je
push
subb
sub
scas
add
mov
add
inc
pop
mov
add
rcll
jle
and
fisttps
mov
aas
dec
dec
add
js
push
or
imul
bsf
dec
jae
push
sub
xchg
cmp
cmp
xlat
ret
jo
aam
mov
fwait
sbbb
mov
daa
and
xlat
xor
pushf
push
sub
push
xor
mov
test
mov
and
sbb
ds
add
xchg
aaa
mov
cmp
mov
out
rcr
in
popa
cmpb
test
ret
add
addb
pop
push
add
jno
aas
xor
test
in
cmpsl
icebp
lcall
out
pop
add
mov
or
push
mov
pop
fwait
notb
lock
mov
or
adcl
add
dec
aad
push
mov
inc
test
aas
add
movsl
sbbb
pop
leave
cli
push
jle
insl
lods
fst
add
mov
add
nop
and
dec
dec
inc
or
cmc
jne
cmp
cli
cwtl
xor
mov
cmp
lds
test
add
ss
sti
xor
inc
mov
outsb
dec
push
xlat
add
add
mov
cmp
and
xchg
loope
dec
shll
frstor
repz
or
add
fs
pop
sbb
and
pop
loop
xor
mov
js
addb
and
in
imul
cwtl
push
push
enter
stos
test
loopne
sti
cmpsb
stc
or
push
xor
cmp
ret
addb
add
sbb
fwait
pop
fcompl
fdivs
xor
xchg
add
mov
mov
out
js
xchg
adc
mov
dec
cld
xchg
push
jmp
inc
xor
scas
test
mov
inc
sti
mov
popa
push
int
andb
jo
das
xchg
stc
fidivrs
pop
sbb
mov
nop
mov
mov
sbb
sbb
add
test
lret
inc
iret
frstor
mov
arpl
mov
orb
mov
in
pop
scas
or
repz
clc
add
dec
inc
pop
mov
cltd
cld
sbb
mov
test
jge
cmpsb
in
add
push
add
cs
cld
fidivrs
or
add
inc
dec
andl
pop
adc
add
mov
js
add
mov
add
fldt
aam
pop
add
sbb
add
sbb
in
xchg
jl
cmp
cld
or
mov
lock
mov
pusha
lret
mov
add
jno
dec
adc
test
mov
out
cmp
inc
inc
data16
push
mov
sub
lods
and
jge
mov
fldl
les
incb
xchg
and
dec
add
push
ss
jge
inc
test
push
adc
out
and
pop
add
jp
push
mov
push
pusha
cmpsb
mov
push
scas
mov
inc
addl
sarb
arpl
dec
nop
subb
shrb
or
sbbb
push
add
out
jnp
mov
and
sbb
mov
data16
jns
sub
adc
sub
jp
frstor
ljmp
add
xlat
mov
mov
jmp
and
insl
daa
jg
cld
cwtl
or
cmp
add
mov
sbb
arpl
ds
push
cmp
add
mov
mov
mov
mov
hlt
add
jae
stc
jbe
inc
sbb
xchg
push
dec
fadds
and
adc
and
std
and
or
in
int3
add
push
and
popf
or
mov
push
add
cmc
jg
add
mov
cmp
adc
stos
lock
sahf
nop
pop
add
leave
mov
imul
mov
call
ret
pusha
add
jmp
add
push
bound
mov
and
sbb
xchg
out
mov
mov
xor
insb
pusha
pop
push
push
jno
and
pop
add
adc
sbb
gs
fwait
inc
xchg
cmpsb
mov
cmp
adc
js
mov
add
dec
data16
gs
cli
add
xor
ret
adc
add
inc
push
movsb
xlat
cwtl
loopne
rcll
or
xor
adc
inc
test
pusha
std
insb
xchg
inc
add
in
scas
push
xchg
das
dec
pop
rorb
push
add
fs
stos
add
addb
add
popf
push
inc
add
lcall
shrb
js
orb
sarb
add
inc
call
adc
sbb
mov
dec
xor
or
add
adc
add
in
fisubl
cltd
in
fs
sub
stos
add
add
mov
bound
call
pop
cmp
fcoml
mov
push
jmp
add
ja
add
cmp
cmp
mov
mov
test
fstpt
xchg
sub
lods
push
mov
pop
mov
xchg
adc
rolb
leave
insl
push
push
sbb
dec
dec
ret
sbb
add
or
fnstcw
or
ljmp
jns
mov
xor
insb
add
inc
dec
addl
jno
push
mov
adc
add
jmp
push
mov
ja
add
divb
push
in
jns
ss
add
xchg
hlt
or
and
pop
test
jb
cmc
sbb
in
andl
pop
movsb
fadds
cmp
inc
dec
xlat
cwtl
les
int3
neg
loopne
movsl
and
jle
xor
shll
int3
int
jne
sub
inc
xchg
add
add
getsec
xor
mov
fisttps
lock
push
inc
nop
add
jo
into
sti
dec
cmp
scas
add
adc
push
xchg
stos
cltd
add
ror
into
cmp
or
leave
cmp
scas
loopne
shl
lcall
add
std
cmp
or
mov
repz
shll
push
push
loopne
ja
and
inc
test
cmp
daa
and
dec
ficomps
inc
push
pop
sbb
inc
ret
into
testl
insl
rolb
mov
jo
add
and
jbe
and
les
push
int3
xor
rclb
sbb
add
and
add
or
xchg
mov
ror
jno
jo
add
pop
cmp
push
mov
xchg
lahf
add
mov
xlat
loope
mov
js
aam
inc
or
dec
dec
push
clc
aam
xchg
cmp
cmp
es
mov
sbb
cmovo
and
lds
xchg
jo
enter
jg
cli
sgdtl
lea
nop
sub
movsl
loop
pushf
cmp
ljmp
add
lahf
inc
mov
js
jbe
repnz
mov
rolb
ja
popf
and
vpmacsww
or
add
xorb
jb
mov
and
enter
sub
cmp
nop
sbb
add
in
sub
xchg
push
insb
mov
jmp
xchg
sub
mov
mov
stos
test
nop
and
das
add
jno
stos
cmp
mov
lahf
jmp
pop
loopne
mov
cmp
popa
out
aaa
mov
into
sub
mov
lret
add
sub
jmp
lahf
add
mov
mov
enterw
das
clc
sbb
xlat
js
cwtl
jl
sarb
adc
pop
call
lret
sbb
adc
mov
js
rclb
pusha
js
add
jecxz
int3
mov
xchg
daa
cmpb
call
cs
jb
xchg
rolb
dec
clc
mov
hlt
inc
clc
xchg
mov
stc
lock
cmp
ret
cmp
lock
je
add
data16
lods
xchg
in
in
adc
cld
pop
fcomi
pop
pop
xchg
repnz
mov
push
leave
leave
fstps
insb
add
mov
adcl
in
sub
data16
mov
int
fs
xor
jno
xor
mov
dec
mov
xchg
fcompl
sbb
mov
lock
dec
cld
sarb
adc
mov
iret
mov
xchg
cli
rcl
mov
inc
fs
push
lods
pop
sbb
insb
aaa
pop
adc
imul
push
mov
push
leave
mov
scas
sbb
add
pop
mov
inc
dec
popl
xchg
iret
rcll
fists
cmp
push
xor
xchg
fcmovbe
add
lock
pop
lret
dec
mov
push
orb
jge
int
cmc
inc
fadd
lret
sbb
clc
cmp
or
add
ret
sub
sbb
movsb
sub
sub
outsb
xor
mov
lahf
add
mov
fsubrl
push
nop
and
or
decb
sbb
lods
inc
cld
fstps
cwtl
push
xor
sub
icebp
dec
scas
adc
stc
mov
test
loopne
aam
dec
pop
mov
sub
shlb
fdivr
popf
add
jns
imul
dec
sar
xchg
sub
mov
add
loop
les
in
mov
cli
push
mov
cltd
add
add
test
push
jns
out
hlt
add
xchg
pop
ljmp
dec
add
call
mov
fdivr
push
lods
mov
or
test
pop
sub
out
arpl
or
jmp
push
mov
cltd
add
inc
stos
xchg
jecxz
aas
pop
insl
mov
test
or
adc
rcll
sbb
sub
movsb
xchg
cmc
or
and
mov
hlt
xor
ret
js
add
and
sahf
sub
rorl
sti
mov
aas
pop
mov
add
mov
add
in
mov
fidivrs
cld
add
addb
daa
xor
cmp
pop
shrb
cli
xor
xchg
jb
mov
call
add
pop
inc
sub
stc
movsl
push
cmp
fs
and
mov
icebp
add
fwait
loope
roll
inc
imulb
or
mov
std
jle
push
add
fstl
and
inc
shrb
dec
jno
add
lcall
pop
and
test
push
lret
mov
jp
cmp
dec
xor
mov
ret
sahf
mov
aaa
pop
sbb
xorl
cmp
call
mov
inc
dec
adc
out
mov
scas
out
push
into
shr
xchg
movsb
push
neg
test
cwtl
pop
outsl
jne
frstor
pop
push
cld
pop
add
das
hlt
and
in
mov
add
lock
adc
add
sub
dec
pop
adc
cmp
mov
xchg
test
xlat
cli
pop
lods
mov
mov
lock
stos
insl
ret
jmp
add
inc
xchg
rcrb
xor
dec
add
aad
dec
mov
pop
mov
mov
add
push
repnz
pop
and
fwait
scas
jo
jl
fisubs
cwtl
add
add
test
jo
dec
add
xchg
out
ret
add
rolb
pop
push
cmp
cmpsb
xor
inc
fucom
add
dec
inc
adc
test
sub
jecxz
pushf
outsb
shrb
xchg
add
push
aaa
xor
jnp
popf
in
aad
adc
add
jbe
push
lahf
add
nop
xchg
push
or
fldl
push
add
arpl
cmpsb
mov
mov
inc
inc
ret
rcrl
dec
test
pop
xchg
jl
and
dec
xor
add
and
or
call
mov
add
cmc
adc
rclb
or
cmp
fwait
mov
and
adc
fcoml
fmuls
pop
jne
inc
out
ljmp
add
lock
js
dec
out
daa
sbb
into
and
dec
out
push
daa
aas
and
out
das
add
popa
xchg
jle
dec
mov
mov
add
cli
daa
mov
stc
bound
sarl
addr16
add
cmp
cmp
mulb
push
add
daa
nop
cmp
enter
or
jle
incb
leave
dec
lock
pop
ljmp
jnp
pop
add
iretw
sysret
mov
sub
clc
add
add
insl
xor
negl
add
mov
push
add
push
and
nop
push
xchg
cltd
adc
out
rcr
jge
add
adc
cmp
sbb
call
jp
data16
add
xchg
sub
fcoms
mov
dec
mov
dec
push
insl
loop
add
shl
roll
sti
mov
nop
stc
add
pop
push
leave
hlt
xorb
cmpl
jo
in
cmp
dec
sub
add
lahf
jmp
add
cmpsb
fldl
adc
cwtl
mov
loopne
aaa
xchg
or
insb
mov
cli
xchg
enter
xchg
pop
xchg
sti
push
push
mov
add
ret
sti
add
rolb
mov
add
sub
adc
inc
lock
xchg
aam
mov
cmp
sbb
sbb
sbb
jae
addl
inc
adcl
inc
dec
mov
fcmovb
jle
jae
push
int
mov
pop
lret
jnp
push
and
fmuls
dec
lock
dec
lods
add
cmpl
dec
mov
scas
pop
sbb
add
sub
iret
scas
or
int3
mov
add
mov
push
shr
push
dec
inc
stos
adc
sti
and
out
ss
cmp
push
js
mov
add
add
xor
in
jo
add
scas
xlat
push
mov
cs
leave
fistps
lods
loopne
outsb
or
ret
jmp
sarb
out
push
sub
out
lahf
cmpsl
popf
test
stc
js
or
and
test
fnstcw
lea
es
fnstcw
add
lcall
adc
sbb
pop
xor
sub
iret
adc
add
push
mov
insb
jbe
adc
cmp
jmp
popf
jge
adc
sbb
psubsb
inc
jnp
enter
add
cmp
fsubs
jnp
cmp
fadd
pop
and
push
jg
cmp
fsubp
lock
push
sub
xchg
adcb
ret
cmp
loopne
xor
adc
push
hlt
push
gs
test
mov
mov
shlb
inc
cmp
ljmp
jae
xor
cmp
xchg
pop
dec
add
jecxz
xor
int3
jne
jl
add
stos
mov
mov
mov
test
dec
outsb
add
aas
sub
out
pextrw
or
outsb
out
out
ret
daa
mov
call
dec
test
pusha
rolb
and
fidivrl
jno
nop
mov
mov
sub
adc
sub
sbb
testb
je
jbe
inc
lcall
pop
aam
push
xor
cmpb
and
or
cmp
add
sbb
das
mov
in
mov
movsl
pop
jno
mov
add
inc
jo
cmp
clc
in
adc
inc
dec
xor
jae
pop
xor
pop
mov
add
aam
mov
lahf
stc
insb
lods
cmp
sbb
xorb
add
and
and
jne
add
fisttps
push
clc
das
push
jecxz
xor
sub
lret
dec
ss
sbb
jge
cwtl
pop
mov
push
test
push
jbe
sbb
pop
shll
and
nop
int3
cmp
dec
fdecstp
call
and
jno
inc
lock
pop
adcb
mov
mov
mov
test
pop
sub
cmpb
mov
fs
pop
gs
jge
shlb
push
xchg
xor
lretw
xchg
dec
mov
mov
xor
sub
movsb
xor
inc
and
loop
fisubrs
roll
es
scas
rclb
jge
or
mov
mov
dec
aad
add
iret
mov
rcl
sbb
xor
lds
aaa
push
cltd
es
sub
push
out
and
push
inc
stc
mov
mov
sub
sbb
and
inc
mov
sbb
push
subb
mov
imul
scas
add
push
popa
mov
sub
es
pop
adc
hlt
je
sbb
mov
outsl
mov
adc
inc
scas
sub
add
sti
shl
lahf
addr16
mov
sbb
xorl
sub
add
mov
dec
ds
enter
sbb
in
add
in
pop
pop
stc
mov
jg
adc
pusha
fsubl
add
mov
out
daa
push
sti
sbbb
add
lea
mov
ljmp
pop
int3
add
jp
in
inc
adc
xor
sbb
daa
push
into
push
xor
hlt
repnz
mov
xchg
xor
icebp
shr
xchg
push
jl
sbb
into
xor
cwtl
popa
or
cld
push
bound
mov
clc
add
pop
roll
xor
lcall
pusha
lret
sbb
ja
test
add
add
out
sub
mov
lcall
sbb
mov
xlat
pop
jno
fsub
bnd
repz
adc
rcrl
mov
xor
aam
sbb
pusha
stos
push
mov
add
pop
daa
push
int
lea
shrb
pop
lods
sub
sbb
inc
adc
stos
sti
push
adc
fsubs
in
sub
fmuls
es
subl
jl
dec
ret
add
dec
loopne
sbb
ficomps
stc
insb
data16
sub
sbbl
subl
dec
pop
call
xchg
or
sbb
jne
test
pop
pop
cmp
jl
mov
and
xor
inc
add
or
pushf
stos
flds
push
and
fsubl
movsb
mov
frstor
call
mov
cmp
in
mov
xchg
xlat
sub
xchg
cli
add
into
js
mov
out
add
pop
xorb
lods
add
push
jno
mov
stos
stos
pop
lods
add
lret
out
test
sbb
test
sbb
mov
cmp
fwait
push
ja
add
frstor
dec
mov
pusha
push
adc
xor
cwtl
push
push
test
into
or
jg
leave
scas
mov
cmp
push
in
add
mov
add
sbbb
popa
xor
push
mov
sahf
out
cmp
and
leave
jle
in
mov
adc
clc
in
push
dec
sub
mov
mov
pop
in
and
loopne
js
or
push
bound
ds
std
int3
jno
add
add
sbb
add
add
mov
sub
repnz
test
outsb
je
jne
clc
add
fwait
out
icebp
jne
inc
mov
lcall
loopne
jge
or
shrb
cmp
xchg
jl
clc
pushw
popa
mov
pop
repz
into
and
sub
out
pop
fisttps
mov
add
cmpsb
subl
leave
and
add
mov
cltd
cs
sbb
scas
dec
mov
or
aas
sbb
push
shrb
mov
scas
rcrw
or
gs
mov
jle
inc
xchg
in
addb
std
mov
add
loopne
ret
mov
pop
and
pop
clc
fcoms
loop
xchg
mov
add
xlat
add
test
daa
xchg
xchg
dec
jp
mov
int3
lcall
rclb
add
add
jg
test
dec
out
pop
xlat
inc
fstp
fwait
arpl
orb
mov
inc
cmp
mov
jp
adc
inc
adc
xchg
mov
ret
sub
jb
sub
sbb
xor
jo
je
je
adc
pop
fwait
adc
out
stc
push
mov
das
cwtl
sbb
add
mov
add
add
sub
int3
lock
mov
sub
xchg
or
test
cs
in
pop
mov
jo
test
out
jnp
mov
and
call
mov
cmp
xchg
or
pop
mov
lods
aas
xor
adcb
mov
sub
dec
loopne
add
xor
cltd
fbld
cmp
add
aas
imul
mov
leave
fsubrp
pop
adc
xor
cmpsl
enter
mov
add
push
cmp
loopne
jb
add
outsl
pop
stos
inc
leave
lcall
out
lret
outsb
cmc
cli
orb
mov
add
push
push
jle
inc
cmp
orb
mulb
or
adc
xchg
in
adc
cmp
stc
jl
lret
movsl
mov
pusha
sbb
cmpl
imul
cltd
sbb
in
push
add
repnz
and
bound
inc
movsl
fbld
sbb
pusha
call
aas
or
in
es
icebp
dec
add
movsb
sbb
xor
les
dec
and
mov
pop
push
ljmp
sbb
int3
fiaddl
shl
inc
xor
aad
call
xor
fiaddl
add
dec
push
jo
mov
mov
inc
in
mov
lock
or
cli
sub
loopne
sub
fildll
push
movb
cld
jecxz
fcom
fstl
and
outsb
mov
sub
loopne
push
mov
inc
push
add
lahf
mov
xchg
movsl
xchg
or
fcompl
jmp
je
stos
outsl
in
xor
sbb
xor
jecxz
push
dec
jp
and
out
mov
push
xchg
adc
xchg
cmp
mov
or
outsb
push
mov
lds
mov
add
andb
and
negb
jns
lret
loop
add
xor
lods
add
xchg
sbbb
sub
cmp
add
xor
mov
push
xor
mov
or
cmpsl
lods
int3
cmpb
and
or
inc
scas
or
fwait
sub
mov
sbb
add
js
inc
fistpll
fnop
idivb
push
dec
call
aad
mov
jg
cmp
jecxz
repz
cmpsl
rcrl
ja
push
loope
push
pusha
push
cmpsb
sbb
movb
cmpsl
or
fildl
pop
push
fdivp
dec
into
add
lret
mov
rclb
and
xchg
add
rcrb
jae
mov
pusha
mov
int3
cmp
pusha
packuswb
sub
or
aam
lock
xor
or
adcb
push
jno
addr16
daa
nop
mov
xchg
lock
fldl
mov
add
test
stc
push
add
jb
push
xor
push
push
mov
mov
ret
mov
add
out
dec
pusha
pop
xlat
sbb
add
fiaddl
add
lcall
jle
rcll
mov
ljmp
xchg
xchg
sub
adc
push
lcall
addr16
dec
loopne
adc
pop
in
stos
nop
mov
sbb
repz
mov
fidivrl
inc
sub
and
xchg
mov
inc
dec
push
pop
inc
xchg
add
xchg
ss
cmc
add
or
pop
pop
or
mov
aas
addb
mov
in
sarb
test
fisubs
lcall
push
and
roll
add
lahf
data16
inc
scas
inc
cmp
addb
out
or
cwtl
js
add
sbb
and
fs
add
rcrb
add
icebp
cltd
xchg
fwait
pop
test
xor
adc
in
stc
and
cmc
in
mov
je
iret
push
push
jmp
arpl
loopne
shrl
xor
xor
push
sub
lods
xor
aaa
jle
add
out
rcrb
push
inc
loopne
int
imul
fsubrs
push
in
and
cmp
sub
dec
js
jbe
sub
aaa
jo
ljmp
test
cmpxchg
iret
and
pop
add
ja
adc
hlt
mov
push
nop
jno
add
mov
icebp
jnp
add
addl
xchg
in
add
cmp
fcmovnu
cltd
add
shrl
inc
js
add
mov
sbb
testl
scas
test
sub
add
inc
cwtl
test
push
imul
xor
inc
xchg
repnz
sti
or
je
aam
shl
nop
add
add
add
and
add
jo
push
push
aad
xor
or
push
mov
push
jmp
rolb
lock
rorl
shlb
xor
sahf
pusha
adc
ret
sbb
insb
inc
stc
adc
sbb
inc
daa
mov
jo
add
cs
xor
leave
add
jle
lahf
imul
mov
pusha
push
pop
lods
cmpsl
fistps
and
mov
mov
ror
add
fstpl
jle
nop
or
andb
cwtl
and
sahf
scas
xchg
mov
lret
pop
repz
mov
jl
and
adc
xor
out
xchg
out
jg
push
inc
mov
scas
sbb
mov
mov
ljmp
repz
mov
xchg
add
fists
int
xchg
xchg
push
add
dec
frstor
push
test
adc
inc
int3
add
jo
sub
adc
dec
mov
rorb
adc
cmp
pop
addr16
inc
fnstsw
and
xchg
shlb
dec
cs
and
int
adc
mov
adc
int3
push
pop
stc
loopne
xchg
test
mov
adc
ds
scas
cli
into
fs
xor
pop
lock
loope
inc
add
pop
in
setne
in
clc
lock
inc
insb
icebp
lock
int
sbbb
mov
add
lock
je
shr
cmp
imul
adcb
daa
push
loopne
movsb
xchg
jno
scas
dec
push
in
loop
inc
cmp
jp
pop
sub
ret
add
adc
add
test
divb
stos
mov
fiaddl
push
popf
cmp
push
sbb
div
mov
int3
lds
pop
inc
faddl
pop
fs
and
xorl
pushf
pusha
adc
cmp
add
pushf
mov
jg
push
jmp
pop
and
mov
fadds
sahf
mov
cmp
add
js
and
das
movsb
add
push
ja
sbb
or
out
inc
add
mov
dec
test
addl
xchg
xor
xchg
mov
addl
je
pushf
je
stos
pop
pop
je
pop
repz
js
add
and
xchg
pop
push
and
ss
jo
adc
jle
pop
into
loopne
adc
mov
cmp
test
int
mov
push
dec
movsb
mov
js
insl
andb
sub
pop
dec
shl
cmp
jb
in
jo
xchg
mov
and
mov
push
rolb
scas
or
daa
sub
ja
push
push
mov
mov
roll
add
lods
enter
enter
jns
cltd
ljmp
jle
stc
xorl
addr16
les
and
shr
jnp
adc
push
mov
aad
mov
or
test
add
inc
daa
pop
inc
sbb
add
adc
fsubrl
add
push
ljmp
pop
cmp
test
or
ljmp
movsb
mov
or
add
jne
inc
xor
popf
add
in
and
jecxz
insl
adc
add
clc
xchg
add
outsb
push
in
mov
pop
je
dec
aam
pop
cmpsl
test
xchg
ds
das
ss
rorb
bound
dec
push
std
xor
loopne
mov
adc
pop
push
lret
mov
xchg
cmp
sbb
mov
and
inc
and
cmp
push
lret
shlb
and
insb
in
cmp
ret
daa
js
fcoms
push
and
cli
les
add
fsubrs
sub
jns
add
inc
jmp
or
push
in
adc
pop
inc
push
mov
mov
loope
les
sub
test
mov
test
pop
aaa
push
aad
jns
shl
lods
cmp
dec
adc
loopne
mov
imul
outsb
and
mov
push
or
xchg
mov
adc
jg
add
iret
jbe
jbe
add
fistpll
and
lea
adc
xchg
mov
sub
jnp
push
out
adc
shll
xchg
add
addr16
jne
cmpl
add
dec
cmc
mov
mov
fcompl
mov
rol
dec
add
testb
lds
and
mov
es
add
mov
mov
sbb
or
pop
iret
inc
les
dec
add
and
add
cmp
call
pop
jg
shld
inc
aaa
jmp
scas
xchg
jne
aam
flds
sti
adc
add
xlat
push
ljmp
or
cmp
pop
call
shl
push
das
mov
add
into
in
mov
and
pop
mov
test
hlt
call
hlt
push
xorb
into
jb
lds
aad
stos
in
jp
and
mov
add
and
xchg
sbb
sub
mov
add
insl
mov
xchg
aaa
pop
adc
cmc
int3
adc
add
or
sti
jbe
pop
add
filds
pop
or
and
xchg
int3
popa
xor
add
dec
pop
in
js
push
loope
nop
test
push
pop
xchg
sti
sub
imul
xor
in
pop
fbld
fmull
lock
sbbl
adc
mov
jns
and
fdivrl
gs
mov
rcl
mov
scas
pusha
pop
jns
jle
rdmsr
pop
fdivrp
xor
dec
aam
adcb
movsb
jle
jle
dec
aam
call
mov
sbb
orb
into
jno
je
add
adc
sarb
and
mov
rolb
rcrl
enter
add
push
add
inc
lret
pop
fsts
add
jb
mov
pop
jae
add
outsl
inc
xor
data16
fstps
cmp
mov
call
lods
add
stc
xchg
mov
or
in
push
sbb
dec
xor
loopne
fmuls
add
cmpsl
out
movsb
jne
lret
inc
add
icebp
push
call
hlt
nop
cli
fadds
mov
xor
xor
out
inc
jnp
adc
add
add
pushf
rol
bound
xor
inc
fcmovb
lock
pop
sub
or
push
push
rcrb
test
dec
imul
adc
imul
int3
and
add
aas
mov
das
scas
xor
clc
push
add
faddl
adcb
inc
fidivs
mov
test
test
sub
and
orb
add
fcomps
push
pop
sub
scas
xchg
mov
mov
in
cmpsb
add
push
divb
in
mov
mov
aaa
jmp
sbbl
mov
ficompl
xchg
pop
loopne
jl
fisttpll
sbbb
ja
les
movsl
mov
test
ljmp
leave
in
push
das
add
push
adc
push
scas
std
xchg
in
cmp
stos
pop
dec
xorb
pusha
mov
mov
dec
jnp
and
jae
lods
inc
sub
jo
and
xchg
sti
inc
mov
push
es
inc
shl
fst
loop
and
add
mov
and
movsb
pop
add
inc
fcoml
mov
sub
pushf
push
dec
jae
jl
xchg
cltd
scas
mov
roll
outsb
or
xchg
sub
mov
and
loop
cmp
dec
push
icebp
hlt
dec
xchg
test
cwtl
dec
pop
mov
out
dec
sbb
fadds
jmp
test
cld
push
adc
sbb
sub
adc
enter
push
xor
daa
xchg
adc
push
pop
loopne
test
pushf
or
add
dec
pushf
add
or
adc
inc
push
aas
clc
sub
xor
or
cmpb
cmpsl
push
mov
mov
shll
int3
sbb
and
sbb
fs
inc
mov
dec
test
test
mov
sub
inc
sub
test
sub
cmp
sahf
imul
movsb
xchg
ss
mov
xchg
jns
fs
push
or
repz
mov
pop
sbb
sbb
shrb
repnz
jb
or
mov
jmp
adc
adc
in
push
in
add
push
jnp
mov
sbb
adcb
mov
xor
cmp
push
add
test
jbe
xor
pop
rolb
loope
bound
rolb
jbe
xor
idivb
aad
das
or
pusha
pushf
pop
mov
imul
jo
out
call
jge
scas
or
cltd
fisubrl
and
mov
out
cli
jnp
sbb
clc
pop
add
mov
and
and
mov
pop
das
or
pop
aam
cld
push
movsl
jge
lret
push
add
mov
rcr
push
out
test
popa
in
mov
sbb
push
cmp
rcl
or
add
stc
sbb
cld
push
pop
inc
xchg
fs
std
pushf
ret
jae
xchg
cmp
fildl
add
insl
push
pop
in
loope
clc
into
jo
arpl
enter
shr
fnsave
cmp
jg
pop
and
adc
pop
lock
mov
push
add
jle
lods
mov
je
add
jo
sub
pop
test
jo
insl
call
pop
jp
jae
cmp
in
leave
dec
add
pusha
addb
pop
xchg
pop
into
lret
out
or
and
mov
jb
add
ss
test
aaa
roll
mov
mov
xor
add
psadbw
int
aam
js
mov
mov
imul
bound
and
and
in
pop
xor
gs
dec
mov
inc
mov
sub
mov
xorb
xor
js
in
jbe
inc
test
jl
jb
sbb
mov
and
mov
shlb
xor
add
or
push
pusha
sub
push
insb
inc
xchg
ret
pop
jb
dec
addb
dec
mov
dec
or
xor
xor
jl
add
subb
dec
pushf
add
mov
sub
nop
adc
push
and
cmpsb
add
nop
rolb
push
mov
mov
shrb
xchg
mov
je
dec
mov
and
fistpl
mov
js
test
ljmp
jo
inc
adc
lock
subb
daa
cwtl
mov
jle
add
push
cmp
push
or
sub
mov
lcall
pop
push
xchg
shlb
jo
inc
add
xchg
sub
lret
lret
inc
sub
mov
inc
pusha
cmc
jle
add
and
add
movsl
scas
mov
aaa
mov
pop
leave
and
popf
mov
pop
iret
aam
lods
cmp
xor
mov
jno
jbe
adc
cld
pusha
fcomps
mov
or
xchg
dec
out
jecxz
daa
das
sub
mov
jae
pop
inc
or
xor
pop
out
cvtps2pd
subl
ljmp
popf
pushf
sbb
add
add
cs
pusha
jp
add
sahf
loop
cld
in
add
jg
hlt
adc
enter
seto
adc
mov
and
dec
and
shll
out
sbb
inc
aad
gs
jo
ss
and
add
mov
jp
jl
xchg
dec
hlt
cmpsb
les
fcoms
rcll
out
add
inc
mov
jnp
xchg
add
adc
mov
jo
xchg
js
in
or
push
rcrl
es
mov
mov
das
pop
lcall
enter
clc
or
push
aam
ret
movsl
test
inc
pusha
jle
aam
jo
push
repz
push
fstps
subl
adc
andl
add
aas
into
les
push
xor
xchg
add
lock
hlt
shrl
nop
repz
fwait
int3
repz
pop
xchg
popf
pop
cmpsl
add
cmpsb
mov
imul
and
psubb
scas
mov
xor
and
ret
mov
pop
cld
les
iret
mov
sub
inc
dec
xchg
test
lods
mov
ret
sbb
pop
mov
mov
mov
add
add
add
jl
or
pushf
push
jo
add
aam
push
jge
or
cmpl
mov
aam
pop
inc
xchg
xor
or
scas
test
cmpl
cwtl
adcl
inc
enter
add
insl
sbb
ds
pop
mov
xor
push
push
xchg
movsl
cmp
fstpl
out
and
dec
orb
in
ds
dec
orl
or
std
test
xor
lea
ffree
jae
cmp
or
mov
popa
nop
xchg
decb
fisttps
jne
xor
add
fldl
lret
mov
mov
movsl
mov
mov
daa
xchg
fs
rclb
fwait
or
mov
mov
and
int3
aam
or
cmp
pop
repz
push
cmp
out
push
sbb
dec
lea
fsubr
push
push
data16
xchg
adc
mov
mov
das
pusha
add
xor
mov
cwtl
out
pop
mov
jmp
int3
aam
stos
inc
in
inc
pusha
pop
add
and
add
and
sub
fsubl
pop
shlb
or
push
mov
int3
xorb
fwait
imul
and
sbb
adc
in
divl
les
and
aaa
add
jb
sbb
std
addr16
pop
push
call
aad
loope
xor
mov
jmp
mov
push
pop
mov
clc
add
js
adc
cwtl
repz
stos
ljmp
push
ds
imul
iret
jmp
mov
loopne
xchg
adc
push
pop
add
adc
mov
or
add
call
xchg
xor
jnp
cmc
add
xchg
sti
leave
enter
aam
cwtl
pop
pushf
mov
mov
mov
add
dec
in
mov
pop
idiv
lds
inc
les
fcmovu
or
jge
enter
je
test
jbe
add
dec
lock
mov
test
popa
sub
scas
cmp
dec
xchg
and
inc
test
loopne
push
pushf
adc
jb
adc
pop
cmp
ja
shrb
daa
sahf
add
mov
jnp
std
lret
add
pop
mov
cmp
xor
mov
cli
adcl
xor
pop
lret
sbb
xchg
or
add
lods
in
mov
stc
add
cmp
mov
out
das
adc
and
int3
sub
subb
jle
in
test
lcall
les
sub
mov
orb
add
lcall
cmp
sbb
jp
stos
rcrb
lods
mov
outsl
push
pop
in
ja
fisubs
mov
int3
add
out
add
and
add
push
repnz
mov
lea
out
jp
jae
dec
cmc
or
xchg
add
inc
and
cmp
pop
clc
cmpsl
jbe
and
inc
rolb
push
xor
mov
loopne
add
clc
out
stos
mov
xchg
jl
add
inc
sub
pop
cwtl
or
xchg
aad
dec
push
mov
lcall
stos
add
pop
push
dec
xchg
std
push
add
pop
jmp
lds
dec
shrl
xlat
and
inc
mov
loopne
popa
sub
or
pop
sarb
nop
sbb
add
lds
sub
stos
push
mov
pop
mov
add
into
sti
xchg
pop
pop
fcompl
or
sbb
hlt
dec
mov
sti
cmpsb
fmuls
popf
pop
sub
enter
jmp
ret
adc
shlb
dec
flds
add
aaa
dec
xchg
in
mov
dec
shlb
pop
es
testl
cltd
aad
mov
cli
out
add
movsb
out
dec
and
add
xchg
pop
mov
pop
mov
sar
dec
cld
int3
jnp
call
pop
add
and
push
pop
inc
test
adc
ror
cmp
fs
stos
movsb
add
add
jl
add
or
mov
or
js
les
add
aad
cltd
test
mov
inc
xchg
pop
aam
lcall
dec
add
mov
inc
subl
sub
cmpl
das
jbe
add
insb
push
and
lcall
lahf
jnp
enter
add
mov
daa
aas
shlb
mov
add
push
cli
sub
jmp
decl
add
sbb
jno
dec
movsb
dec
jne
and
cmp
add
push
sub
add
arpl
sub
inc
pop
andl
jns
popf
jmp
mov
sub
sbbb
sub
xchg
and
stos
fdivrp
mov
push
cmpsl
pop
movsb
leave
ret
iret
sar
jb
pop
test
test
pop
cmp
mov
xor
or
loop
aas
incl
mov
call
adc
jmp
add
out
jg
rclb
or
nop
or
mov
hlt
or
aam
loop
fcoml
mov
pop
stos
add
mov
push
add
daa
and
xlat
adc
inc
enter
aam
sbb
add
ljmp
mov
es
jg
adc
add
lods
sbb
test
cltd
call
push
fcomi
jg
inc
ljmp
or
cs
incl
push
push
stos
mov
dec
jno
add
cmp
das
adc
arpl
lock
outsb
out
push
dec
sbb
outsl
cmp
insl
mov
mov
jbe
add
add
pop
adc
pop
repnz
lock
roll
and
pop
dec
je
scas
add
inc
daa
cltd
add
dec
pop
cmpsl
iret
jb
in
ds
dec
cmc
pusha
push
ss
add
arpl
mov
fisubl
sbb
aad
mov
adc
test
mull
and
loope
out
mov
mul
in
pop
add
lock
ds
add
or
and
les
hlt
adc
outsb
sahf
sub
dec
mov
popa
js
cmp
mov
bound
clc
xor
in
push
jge
inc
cmc
cmp
int
ds
dec
outsb
cmovbe
xchg
add
pushaw
outsb
arpl
push
or
nop
dec
dec
adc
mov
and
insb
enter
mov
push
sub
jae
xchg
sbb
pop
add
stos
push
mov
dec
jne
loop
pop
inc
or
imull
cwtl
add
inc
push
imul
les
hlt
mov
cmp
ret
push
pop
in
push
loope
pop
shlb
add
mov
fdivl
inc
pop
jecxz
push
mov
loopne
ret
push
loopne
and
add
push
sti
pop
loop
jb
and
mov
xchg
sti
stc
ret
jns
in
adc
int
fsubl
fcompl
addr16
in
icebp
xchg
push
adc
adc
and
and
mov
xorl
stc
or
push
pop
nop
insb
sbb
dec
bound
inc
int3
push
loop
sbb
xor
push
repz
add
test
popa
add
pop
sub
popf
fdivl
adc
add
mov
jmp
fdivr
hlt
lock
mov
push
add
out
push
jge
add
xchg
orl
jg
cmpsb
or
inc
dec
cmp
add
mov
jmp
fcompl
mov
mov
push
cmp
add
ja
js
pop
stos
fcoml
les
cld
adc
xchg
loopne
mov
push
ret
sbb
inc
mov
ja
les
int
jns
and
jnp
mov
pop
cmp
xor
jo
xchg
shrl
cmp
fnstsw
out
add
xor
and
loopne
add
mov
cmp
or
nop
cwtl
gs
xor
jecxz
das
sbbb
cmp
movsb
loop
add
dec
and
cmp
movb
cmpl
and
or
call
rcll
jge
repnz
stos
lret
adc
sub
cwtl
test
mov
fimuls
add
lock
fisubrl
stos
mov
lods
and
cmp
das
push
jl
outsb
popf
test
xor
pushf
cmp
ret
adc
inc
test
jl
add
dec
push
mov
jno
add
ror
cli
fiadds
and
les
sub
jo
add
jno
xchg
xchg
add
add
je
and
adc
pop
sub
jo
lock
add
loope
test
clc
lret
lods
add
cld
aam
sub
add
mov
adc
test
add
jge
mov
add
jne
rcr
xchg
adc
mov
cmp
xchg
xchg
sbb
out
push
xor
inc
cltd
fmull
xchg
les
dec
pop
addb
push
add
fs
inc
pusha
stc
shll
push
enter
subl
iret
add
and
cmpsl
out
xchg
movsl
sub
ds
sub
fs
jne
lahf
jl
add
push
or
or
imul
and
test
out
pop
adc
ret
sbbb
xor
add
test
jo
out
add
or
out
cmp
or
sub
fcomps
into
add
xor
or
lret
shl
jnp
or
and
jge
mov
andl
jecxz
loop
xorl
jno
arpl
aad
inc
test
push
lds
sbb
add
add
jmp
bound
jecxz
loop
jle
sub
cwtl
sbb
adc
pop
adc
push
cmp
sub
inc
mul
push
cmp
push
rolb
add
shlb
dec
add
cmp
movsb
orb
add
xchg
shlb
jns
add
fistl
jae
xchg
pushf
push
dec
notb
sahf
outsl
gs
add
jb
dec
das
testl
es
add
imul
mov
add
sarb
sbb
cld
cmc
mov
mov
xchg
pop
sub
xor
add
sti
xchg
int
gs
or
adc
lods
add
add
das
clc
shll
mov
push
rcr
pusha
add
xor
jecxz
jo
ds
out
dec
jno
pop
icebp
mov
movsl
daa
flds
adc
adc
pushf
add
xchg
lock
out
xchg
and
add
inc
cmp
add
lea
cmc
mov
cld
push
or
dec
inc
je
cmp
addb
aad
inc
add
xor
cli
add
subb
jecxz
loop
add
and
jmp
imul
mov
adc
inc
roll
ss
out
and
cld
adc
dec
in
in
pcmpgtb
mov
fimull
add
inc
fs
mov
out
jns
mov
pop
xlat
add
pop
jg
mov
push
aam
out
add
movsb
and
and
pop
pop
test
or
das
pop
add
add
int3
mov
stos
or
clc
pop
icebp
fldl
shlb
sub
jo
add
and
pop
adc
add
xchg
add
out
xchg
xchg
mov
ljmp
mov
movsb
loope
jle
sbb
inc
adc
je
push
and
divb
adc
dec
dec
xchg
add
push
sarl
add
adc
add
repz
ss
pop
add
rcrl
ja
cmpsl
sbb
repnz
add
sbb
push
mov
cltd
xchg
pop
aam
push
add
out
das
push
cmpsl
jae
add
cmp
adc
push
jecxz
cmp
xchg
dec
push
pop
inc
add
xor
into
arpl
sub
int3
inc
pusha
out
pusha
test
fmul
push
ds
cli
add
icebp
pop
fisttpll
imulb
ficoml
add
fwait
push
xchg
mov
xchg
pop
adc
jo
imul
adc
pop
inc
das
arpl
cmp
inc
loope
test
xor
mov
add
sbb
ss
in
rcll
sbbb
sti
ficomps
push
sbb
dec
aaa
movb
gs
div
pop
jno
or
lock
filds
xor
cld
push
insl
xbegin
xor
hlt
lahf
sbb
je
cmp
js
add
sti
xlat
or
dec
adc
imul
call
sbb
add
loop
fiadds
aad
add
sbb
xchg
push
jne
add
fstpt
add
mov
sbb
test
or
popa
pop
or
sbb
mov
inc
repnz
mov
and
jg
mov
lods
in
jecxz
pop
jns
add
dec
dec
mov
es
das
mov
cmpb
jge
pop
mov
fsubrl
sbb
jle
pop
add
lret
jmp
or
dec
push
in
shll
sbb
cs
pushf
roll
aaa
pop
gs
xlat
jle
inc
jb
imul
jl
add
mov
jne
in
pop
stc
dec
roll
lods
sbb
adc
sti
jbe
or
add
lods
inc
call
lahf
dec
scas
adc
cmpsl
inc
in
popa
sti
adc
xor
sbb
cld
insl
add
sbb
data16
js
add
in
push
sahf
enter
and
mov
dec
sub
push
out
mov
adc
pop
stos
add
fiaddl
shlb
mov
dec
nop
or
mov
int
jnp
sbb
cmp
sbbl
jmp
jle
add
repz
inc
add
lret
cmc
and
jl
scas
loop
jb,pn
xor
minps
repnz
add
aaa
leave
pop
arpl
ret
adc
stc
cmp
and
pop
loopne
fmuls
dec
sub
loopne
enter
lods
and
into
add
sarb
push
adc
pop
push
add
sti
cmp
js
jae
sbb
inc
and
jp
pop
pusha
inc
cmp
push
add
int3
lcall
xchg
cs
nop
fwait
mov
clc
imul
xchg
divb
leave
clc
jge
pop
add
in
push
adc
stos
into
loop
jno
add
sbb
ret
jge
dec
inc
andb
xor
add
or
xor
gs
int
enter
adc
call
pop
stos
xchg
lcall
cld
or
adc
jge
lret
add
loopw
push
inc
sub
daa
and
cs
leave
pop
ds
add
adc
pusha
push
and
js
loopne
push
cmp
mov
push
scas
mov
test
sbb
adc
jae
js
out
jmp
add
adc
insl
insb
mov
loop
add
stos
adc
xchg
pop
popa
je
pop
pop
imul
mov
mov
pusha
or
pop
scas
add
jge
add
verw
es
push
or
add
ljmp
jp
cmp
xor
add
inc
mov
outsb
std
insl
leave
inc
mov
lret
jl
rcl
imul
orb
dec
outsb
jno
or
mov
lods
jmp
loopne
add
int3
push
rorl
cmp
cwtl
jbe
pop
pusha
xor
fs
add
adc
cmp
orb
pop
lahf
sti
xchg
sub
insb
inc
pushf
sbb
pop
mov
in
xchg
hlt
lods
or
pop
outsb
rcrb
push
rcr
or
sbb
mov
popa
pop
add
loopne
jae
subb
mov
test
flds
mov
xor
sbb
add
lahf
std
inc
lcall
jns
mov
adc
or
jno
adc
dec
shlb
add
sarl
add
pop
push
add
sbb
pop
add
dec
dec
faddl
add
push
sahf
mov
push
xor
ret
js
movsb
clc
mov
aaa
movsl
push
nop
mov
rolb
inc
dec
add
jge
add
cmp
jbe
push
push
mov
subl
imul
in
lcall
dec
rcl
add
inc
mov
ja
mov
xchg
push
dec
cmp
lea
lock
das
mov
add
mov
scas
ret
push
fs
addl
mov
xchg
cmp
inc
or
push
dec
clc
add
mov
cs
jmp
adc
outsb
test
cld
mov
pop
int
ficoml
or
ficoms
pop
subb
push
push
iret
cmp
faddl
xor
into
add
mov
add
xchg
and
ret
rolb
lea
sbb
call
arpl
pusha
sub
les
pop
mov
and
fld
mov
sub
clc
mov
jmp
sbb
mov
sbb
sbb
int
inc
mov
and
mov
in
sub
dec
addb
mov
loope
xor
cmp
mov
add
add
jle
mov
inc
mov
ljmp
bound
inc
xchg
orb
inc
add
push
dec
std
xor
pop
mov
mov
add
nop
in
loopne
sbb
pop
add
cmp
pop
mov
add
cmp
repz
pop
arpl
icebp
fcmovnu
dec
std
adc
in
add
shlb
mov
into
inc
repnz
push
test
push
rcpps
jle
mov
xor
fwait
and
nop
sbb
sbb
sbb
cmc
rclb
adc
and
sub
int3
fmuls
fsubrl
add
and
movsl
inc
faddl
fists
fldl
iret
out
inc
cwtl
dec
mov
stc
adc
inc
mov
adc
sbb
sub
loop
add
mov
cmp
sti
daa
inc
mov
int3
in
sub
jo
pop
add
push
orb
cmc
movsl
xchg
pop
arpl
push
sub
mov
cld
mov
mov
adc
jae
es
pop
inc
add
jae
shll
pop
loopne
sbb
ret
xchg
rcrb
roll
movups
inc
testl
aas
mov
sub
es
add
pop
test
popl
pop
iret
mov
dec
fiadds
stc
add
pop
ja
pop
pushl
loope
insl
jp
cmp
das
roll
fs
bound
mov
gs
mov
test
jg
mov
test
xorb
sbb
inc
xchg
xor
inc
add
int
sti
push
fidivrs
push
dec
inc
out
sub
int3
xor
js
xchg
gs
out
or
in
push
jp
xchg
and
jmp
aam
movhlps
add
mov
ficoms
inc
icebp
pop
jo
mov
pop
shrl
push
je
sbb
mov
daa
or
stos
cmp
aaa
jg
xchg
push
xor
fdivr
outsl
imul
push
inc
or
out
xor
pop
jo
mov
jl
fmull
pop
imul
pop
push
fs
cli
mov
lds
and
loopne
add
cwtl
test
xor
sub
mov
loope
jg
arpl
decl
lock
adc
xchg
ret
add
lret
jmp
xchg
cmpsl
mov
add
shlb
inc
adc
push
sub
adc
or
jo
pop
cmp
cmp
gs
dec
and
cld
test
das
mov
mov
and
dec
cld
mov
mov
ret
pop
lods
clc
call
pop
inc
add
jge
inc
pop
adc
pop
stos
testb
inc
movsb
rolb
jno
pushf
pop
add
add
jmp
ffreep
outsl
add
cld
arpl
xchg
cmp
adc
xor
xchg
movsb
mov
jge
jle
mov
and
adc
pop
inc
cmpsl
sub
pop
aam
dec
ds
pop
xor
inc
sti
cli
mov
icebp
pop
push
rcrb
loopne
sbb
fisttpll
sub
mov
scas
inc
push
movsl
jno
and
or
add
aas
pop
inc
or
xor
inc
sbb
cld
aas
add
iret
arpl
fwait
or
test
or
ds
fldt
lea
sub
outsl
mov
mov
or
ret
xor
adc
dec
lret
add
cmp
adc
je
in
push
loopne
inc
add
dec
push
jb
xchg
aad
sahf
rol
add
insb
mov
cmc
pop
add
xor
pop
adc
cmp
dec
add
push
push
dec
pop
sahf
stc
loopne
popl
mov
adc
add
aas
mov
nop
sbb
clc
inc
nop
xor
lea
les
scas
mov
lret
push
nop
pusha
test
push
jo
iret
cld
insl
or
or
push
mov
mov
add
sub
xchg
sub
cmpsb
pop
daa
testl
pop
loope
roll
push
pushf
dec
outsl
cli
cmp
jae
jne
xchg
idivb
inc
and
push
lret
jne
sub
and
mov
in
cs
xchg
scas
loopne
cld
aam
insl
xchg
xchg
pop
ljmp
or
je
pop
sub
ja
add
sbb
add
dec
adc
cmpb
mov
adc
add
dec
rolb
jg
cld
aas
or
das
jp
jo
dec
gs
nop
mov
pop
incl
loopne
add
cltd
mov
dec
movsl
std
mov
aad
mov
add
jbe
sahf
push
stos
in
fiaddl
or
sti
push
pop
xor
add
mov
push
adc
shrb
or
clc
popa
sub
add
mov
dec
out
add
jno
xchg
sub
ljmp
add
dec
mov
mov
insb
jge
inc
fistpll
test
fwait
int3
add
push
fs
mov
aas
mull
add
hlt
ss
je
lret
sub
int
push
or
insl
mov
loopne
aas
outsl
lea
lahf
popl
hlt
add
mov
test
and
popf
cs
sahf
mov
scas
sub
xchg
stos
test
ja
pop
lods
add
je
ljmp
push
pop
dec
sti
cvtps2pd
cli
cmp
jl
adc
js
jmp
movsb
push
and
or
rorl
mov
sub
and
shlb
aas
cmp
mov
push
sarb
dec
add
movq
xchg
adc
out
fmuls
adc
sub
pop
les
add
fcompl
jp
mov
cwtl
dec
mov
pop
inc
repnz
clc
push
ret
sub
xor
in
es
add
mov
inc
addr16
mov
or
jne
scas
inc
pusha
push
sbb
add
loope
or
inc
in
xor
xor
repnz
fs
sub
xor
jmp
les
fs
clc
bound
pop
mov
and
nop
rcll
roll
fmull
cltd
hlt
or
add
in
and
and
outsb
call
sub
fists
cmp
cmpsl
add
shld
pop
jge
call
xchg
lret
jno,pn
or
jnp
int3
clc
cmpl
stos
push
push
xchg
and
and
dec
or
dec
fiadds
jmp
loope
mov
aas
stc
ret
or
in
pop
push
and
sbb
inc
ss
xor
cld
bound
mov
or
cmp
loop
fwait
xor
mov
nop
fldenv
xchg
js
add
fld1
loopne
int3
cli
incl
loop
push
sbb
sbb
mov
adc
dec
add
add
mov
ret
push
push
adc
subb
lea
dec
addb
mov
inc
inc
mov
popf
cli
dec
sub
loop
push
mov
or
cli
mulb
stc
lds
cmp
xchg
add
adc
mov
sub
clc
std
inc
mov
and
push
xchg
in
ss
dec
mov
scas
jg
packssdw
daa
subl
test
and
pushf
pop
out
sbb
mov
shl
and
sbb
add
sar
insb
cmp
and
stc
jge
insl
xchg
mov
lods
pusha
sub
adc
add
cmp
xchg
test
xchg
nop
sub
fwait
sbb
lods
and
cmp
test
mov
int3
xor
test
adc
mov
loop
sub
add
sub
xchg
ret
and
pop
xchg
and
arpl
cs
aas
inc
daa
sub
xchg
adc
xor
rolb
cmp
cmp
pop
cmpsb
adc
xor
imul
hlt
pop
push
popf
bound
xchg
push
roll
sub
sub
jecxz
enter
cs
in
pop
xchg
cmpsl
or
mov
fwait
lods
shll
jg
mov
add
sub
and
push
mov
lea
add
inc
adc
xorl
mov
lret
sbb
pusha
xchg
xlat
pop
dec
out
dec
add
cld
and
aad
bound
sub
inc
or
mov
or
pop
inc
stc
mov
and
push
mov
cltd
int3
push
adc
aam
addl
sub
test
cmp
add
xlat
ja
jle
push
sbb
mov
mov
mov
cld
and
xchg
push
push
leave
jmp
pusha
stos
mov
repz
fildl
mov
fcomip
inc
jb
pop
or
add
inc
andb
add
in
call
jae
mov
fs
inc
xor
jle
dec
mov
mov
xchg
pushf
nop
stc
mov
rorl
mov
and
enter
mov
sarb
or
mov
mov
je
mov
movsl
push
scas
imul
jle
jmp
or
jo
rcl
sti
les
scas
xchg
mov
les
fwait
sahf
orb
xor
jnp
rcll
dec
jno
jle
aaa
jb
add
dec
push
test
leave
xor
test
mov
dec
cli
mov
bnd
dec
mov
outsl
push
orl
sub
out
jo
mov
loopne
mov
inc
inc
cmp
cmp
shlb
loop
mov
inc
outsb
shrb
scas
xchg
into
out
insb
and
mov
popa
push
test
xchg
xchg
sbb
orb
rcrl
adc
push
xor
or
pop
add
daa
dec
mov
movsl
popl
mov
xor
inc
repnz
add
ja
roll
cmpsl
jne
mov
cmp
add
jno
movq
push
in
lcall
pop
jg
shrb
push
sbb
out
or
or
jp
scas
ficoms
lds
loop
adc
sub
sbbb
sbb
imul
popa
push
cmp
or
rdpmc
sti
push
shll
sub
xchg
mov
add
jl
fs
leave
sub
cmp
out
push
xchg
pop
cs
neg
push
mov
add
xor
call
cmpsb
xor
pop
push
mov
sub
pushl
push
pop
adc
loop
popf
mov
in
jl
mov
add
cmc
push
xlat
sbb
push
sbb
mov
das
xor
adc
repnz
and
jl
cli
jmp
sbb
inc
les
pminsw
repnz
incl
pop
sbb
sbb
stc
add
outsl
aam
icebp
jp
add
mov
lcall
bound
arpl
mov
or
mov
jae
mov
adc
scas
jge
add
sub
insb
jp
movsl
xchg
notl
pop
repnz
scas
rolb
nop
in
xlat
rolb
inc
sarl
dec
push
out
shrb
sahf
scas
cmc
add
test
dec
cld
mov
les
in
jg
pop
mov
mov
nop
add
std
subl
bound
add
int3
jg
xchg
aas
mov
popl
popa
push
add
pop
push
sub
mov
sub
ljmp
add
xchg
inc
inc
test
sbb
enter
mov
clc
push
and
jg
jg
int3
mov
xchg
call
sbb
in
push
adc
outsb
xchg
stos
xchg
in
push
gs
add
sub
pop
pushf
dec
popa
mov
push
xchg
mov
loop
jl
fnstsw
imul
addb
dec
test
in
add
addr16
xchg
sbb
neg
add
les
mov
mov
negl
sarb
cwtl
add
jl
dec
dec
mov
pusha
push
sahf
test
add
lcall
jge
adc
or
xorl
add
and
sbb
imul
pop
adc
lret
lock
imul
cli
sti
insb
push
inc
xchg
or
dec
mov
loope
mov
pop
adc
sub
rol
adc
ljmp
xchg
pop
repnz
push
push
aad
xchg
into
mov
test
in
lock
sub
cmpsl
mov
inc
stos
mov
jne
pop
or
inc
pop
ljmp
mov
jae
pop
sbb
pop
lods
sbb
add
cmp
sub
push
cld
mov
int3
jbe
xlat
cmp
lcall
mov
mov
xchg
jecxz
pop
fwait
pop
test
or
xchg
test
cmpsb
push
in
call
loopne
xor
test
cmp
jno
in
adc
enter
mov
outsl
dec
mov
daa
mulb
adc
add
fisttpll
movups
imul
frstor
dec
or
xlat
dec
fsts
gs
mov
dec
jbe
sub
cmp
mov
das
cld
push
cmpb
adc
jl
lret
dec
jns
adc
xchg
mov
je
and
shll
js
inc
mov
nop
dec
ret
aaa
mov
dec
cmp
jns
add
push
ss
or
jbe
jg
cmp
dec
or
inc
xchg
leave
data16
rcll
mov
loopne
sub
out
cmpsb
push
sub
sub
push
jecxz
cmp
adc
enter
adc
mov
roll
xchg
fisttpl
jl
adc
insl
push
pop
and
ficomps
pop
movsb
mov
mov
aaa
pop
data16
pusha
arpl
add
and
mov
scas
lock
inc
pop
pusha
lods
idivl
add
outsl
mov
adcb
in
push
jo
cmpl
leave
aad
mov
mov
cmp
push
adcl
mov
rclb
cmpb
loope
data16
push
inc
fidivs
mov
std
add
lds
xchg
mov
outsl
add
movsb
out
pop
mov
sub
jge
call
pop
pusha
insb
or
cs
sbb
sbb
inc
adc
in
les
aaa
xor
fsubrl
das
mov
jl
xorb
pusha
sbb
push
daa
jae
mov
add
and
imul
bound
shrb
dec
addr16
mov
test
sarl
add
mov
or
in
and
dec
xchg
fmuls
xor
stc
lods
pop
xchg
and
cs
or
inc
scas
sbb
mov
xchg
xor
fiaddl
mull
rorb
lret
jge
and
sahf
mov
stos
push
pop
adc
int3
jno
cmp
dec
fimuls
popf
jbe
rolb
xor
cmp
and
mov
sbb
shrb
or
int3
inc
data16
mov
fnstsw
pushf
push
jo
cwtl
pop
das
and
cmpsl
pusha
inc
gs
shrb
jno
or
in
sbb
inc
jg
stos
add
repnz
addr16
fistps
lods
sbb
dec
ud2
sbb
push
leave
je
int3
daa
sub
mov
inc
jno
sub
cmp
mov
test
pop
incb
mov
add
in
xchg
jecxz
sub
push
sbb
adc
inc
jbe
lock
xchg
mov
xor
insb
test
and
pop
adc
and
pop
stos
add
sub
xor
in
testb
faddl
cmp
jl
daa
orl
pop
jno
repz
iret
stos
loope
cmp
dec
xor
fdivrp
or
js
cmpsl
cmp
push
and
add
xchg
jb
dec
sbb
or
inc
pop
cmp
bound
adcb
out
nop
arpl
sti
push
ds
lcall
mov
xor
cmp
fisubrs
adc
cmp
lahf
xlat
mov
cmp
repnz
mov
enter
xor
jge
in
popf
lret
jo
xor
mov
jnp
js
rep
cmp
lahf
push
icebp
cmp
mov
adc
add
das
cltd
in
pop
push
jbe
inc
add
in
clc
mov
imul
xor
sahf
dec
pop
mov
popl
addl
sub
sbb
push
mov
in
jmp
push
inc
sbb
adc
push
mov
jbe
xchg
fdivl
xchg
add
mov
sarb
dec
aam
pop
data16
dec
or
rorl
cmp
pop
mov
stos
mov
inc
in
incl
jo
cmpsb
mov
shll
mov
test
add
inc
mov
test
inc
cmpsb
pop
lods
popf
cmp
mov
dec
adcb
mov
les
mov
out
in
push
xchg
outsb
add
lahf
ret
loopne
adc
xor
ljmp
test
xchg
inc
add
push
pusha
mov
into
mov
add
sbb
push
push
in
dec
add
and
cmp
add
pop
insb
mov
mov
out
mov
push
add
js
mov
cmp
cmp
add
ret
mov
xor
lock
ss
js
inc
xor
sub
imul
loopne
vminsd
nop
cld
daa
out
pop
int
push
jae
sbb
pop
inc
jne
mov
or
inc
xchg
pop
pop
adc
fwait
call
es
aas
push
adc
xchg
push
jbe
fwait
icebp
add
int3
fbstp
adc
mov
btsl
cmpsl
jno
hlt
mov
or
mov
mov
dec
mov
int3
xchg
add
sbb
xchg
lods
and
sarb
jmp
pusha
adc
in
icebp
imul
jne
push
jl
sbb
cltd
add
adc
ds
push
scas
add
push
dec
pop
addl
xorb
dec
cs
jne
add
cmp
push
sbb
ds
jne
lock
and
popf
add
or
int3
cmp
out
push
sub
pop
fdivr
into
lock
add
mov
lret
out
sahf
push
outsl
push
pop
adc
mov
int
or
add
inc
inc
aam
adc
xor
test
loope
div
xlat
pop
insl
inc
inc
leave
mov
xchg
cmp
mov
xor
and
mov
jae
xor
xor
popa
xor
add
punpckhbw
jns
adc
pop
dec
mov
sub
adc
ret
sub
pop
jl
ret
inc
jecxz
push
into
scas
mov
add
hlt
pop
pop
arpl
insb
orb
pop
cmp
pop
leave
xor
lds
enter
sbb
rcll
push
or
mov
jge
sub
xor
cmpl
xlat
cwtl
fwait
push
mov
xor
sbb
pmullw
push
fdivrs
xchg
daa
and
cs
push
or
dec
push
push
pop
leave
and
adc
sub
or
add
sbb
add
arpl
or
out
call
push
scas
inc
push
sbb
popf
lods
adc
fstpt
sbb
mov
add
dec
lock
inc
loopne
sbbl
inc
jno
popa
int3
pop
or
loope
pop
pop
data16
add
scas
out
inc
inc
popa
cmp
lods
add
xor
shlb
es
cld
aaa
incl
roll
dec
mov
outsb
movsl
pop
jb
xor
out
mov
cmp
dec
and
cwtl
pop
jp
inc
xchg
es
and
popa
int
enter
push
pop
ds
test
lock
jl
dec
pop
leave
add
xor
in
or
inc
mov
test
mov
out
inc
dec
pop
xor
cmp
pop
add
add
mov
das
adc
call
mov
fldenv
jmp
sbb
arpl
fsubrl
mov
push
sub
out
mov
insb
add
sub
jns
add
push
in
pop
iret
scas
shlb
cmp
pop
or
xchg
arpl
or
into
jo
adcl
rclb
int
repz
test
push
push
out
cmc
add
inc
mov
pop
dec
sbb
imul
mov
repz
out
jecxz
bound
out
pop
jmp
fcompl
jp
xchg
scas
dec
lds
flds
ljmp
iret
add
push
nop
sbb
push
je
push
popa
stos
dec
popf
mov
filds
push
into
add
xchg
add
loopne
push
sahf
mov
inc
dec
mov
and
mov
xchg
add
xchg
cmpsb
repnz
loop
sub
push
inc
jge
xor
push
adc
aaa
in
inc
test
or
rcrl
dec
icebp
mov
and
pop
imul
ret
pshufw
add
or
cmp
xlat
je
dec
mov
push
jno
incl
sahf
fdiv
push
cmc
add
pusha
ret
lahf
je
daa
cmc
and
mov
sbbl
out
or
sbb
sub
mov
dec
cmp
hlt
jmp
add
lahf
sarl
in
push
mov
or
cli
or
scas
xchg
dec
fildl
ret
push
xchg
js
mov
xchg
addb
add
out
mov
cmp
pushf
pop
cmp
push
cmpb
test
and
das
push
and
scas
adc
rcl
mov
ret
and
push
into
dec
mov
sub
lock
pop
and
lock
cmp
mov
cmc
loopne
dec
pop
jnp
add
and
pop
jl
push
scas
pop
and
mov
xor
js
dec
mov
mov
loope
sub
loopne
stos
mov
cmpsb
add
jge
daa
bswap
pop
push
jmp
js
popf
cli
adc
xchg
sar
ret
jne
and
inc
rolb
loop
push
add
das
scas
es
push
jecxz
sub
mov
jns
ja
pop
mov
push
fmull
flds
push
pop
cltd
jmp
mov
push
stos
lods
inc
adcl
dec
or
sbbl
sbb
fidivrs
hlt
loopne
clc
rcrw
mov
adc
loopne
jle
fs
cli
mov
lock
jno
mov
mov
xor
enter
xchg
add
cmp
ss
xor
pop
add
mov
movsl
adc
js
scas
xchg
movsb
mov
adc
mov
mov
mov
scas
dec
stc
and
pop
pop
and
scas
pop
jns
mov
stos
loopne
jns
mov
adcb
sbb
add
lret
jmp
xchg
and
pop
inc
fnstcw
imul
loopnew
fldt
daa
xchg
pusha
in
cmp
adcl
arpl
cmpsb
dec
sbb
or
pushf
pop
outsl
lock
adc
lret
inc
dec
fwait
movsb
jecxz
popa
mov
add
mov
cmpsl
repz
pop
and
sbb
lahf
xchg
sbb
mov
push
mov
and
xor
ret
sub
mov
mov
xchg
add
test
enter
mov
sub
mov
jns
sub
lock
imul
jo
rorl
mov
push
or
pop
out
sbb
xor
dec
mov
cmpsl
loop
add
nop
cmp
sub
rcll
push
in
adc
aaa
into
dec
data16
push
xchg
popa
in
loope
clc
pop
ret
jo
jmp
and
test
pushf
enter
aam
loopne
add
call
push
push
subb
fiadds
aaa
or
je
int3
lahf
xor
mov
jecxz
xor
dec
call
bound
mov
inc
dec
dec
std
out
or
mov
pop
mov
std
dec
lods
test
stos
hlt
add
pop
ret
rcl
add
add
pushl
cld
add
divl
xchg
imul
out
push
push
dec
imul
lock
dec
pop
pop
in
fstpt
inc
pop
scas
inc
push
subl
dec
mov
dec
add
xchg
sub
in
cmp
sub
stos
mov
daa
or
add
mov
jl
ret
dec
cmp
les
xchg
mov
pop
mov
dec
jp
pop
mov
sbb
idiv
push
icebp
push
movsb
fnsave
aas
mov
xor
aaa
add
add
add
dec
imul
mov
mov
xchg
inc
dec
movl
fidivs
stos
jno
jbe
cs
std
pop
and
out
xor
das
jmp
push
mov
jo
shlb
fiadds
aas
push
pop
add
outsl
pop
cmovo
ret
mov
shrb
sub
rolb
ss
rolb
xchg
push
mov
pop
adcl
mov
gs
shl
fisubs
sub
pop
cmp
adc
sbb
add
les
stc
inc
cmp
andb
decl
dec
fwait
mov
or
clc
jnp
mov
les
nop
mov
mov
sbbb
iret
push
and
or
enter
adc
in
pop
mov
xor
adc
mov
inc
push
xor
or
lahf
or
clc
rcrb
inc
sub
icebp
ja
xlat
js
add
mov
mov
push
sbb
ljmp
adc
out
mov
movsb
xchg
add
xchg
sub
pop
xchg
cld
pusha
add
and
sub
cmp
mov
mov
cmp
add
dec
jl
cmp
pop
mov
push
pop
nopl
scas
popa
imul
sub
pop
cltd
push
mov
clc
push
sub
push
pop
sub
cmc
jae
andb
hlt
ds
cmp
and
bound
sub
sub
lcall
out
mov
and
adc
dec
mov
pop
xchg
cmpb
es
sbbl
shl
test
push
dec
loop
and
inc
adc
pop
inc
enter
jns
sahf
add
push
mov
add
in
pop
xor
or
call
push
and
sahf
jle
cmp
rcrl
jns
jl
push
movsl
pushf
push
add
dec
jmp
pop
jmp
pop
inc
and
or
mov
or
or
mov
addb
push
nop
mov
dec
mov
scas
in
and
xlat
pop
inc
add
push
push
popf
fsubp
add
mov
enter
roll
dec
aam
in
movsl
fisttpll
xchg
lahf
fisubs
push
imul
mov
inc
ss
aad
inc
sti
adc
or
sub
sets
cmp
mov
and
push
sahf
add
jno
pop
jmp
cmp
fnstenv
add
adc
fwait
iret
sub
cmp
clc
and
or
add
pop
in
add
mov
mov
mov
sub
fwait
mov
arpl
daa
push
sub
lahf
nop
mov
mov
or
xlat
cwtl
mov
add
arpl
pop
sub
pop
add
inc
adc
pop
in
mov
sbb
pop
mov
push
and
xor
jl
add
pop
mov
ret
mov
mov
aad
jnp
ja
push
lret
ss
and
dec
into
jge
or
dec
cmp
jp
jno
sbb
push
dec
push
imul
rolb
or
subl
lahf
mov
imul
mov
and
jp
cmp
inc
mov
fistpll
xor
icebp
and
pop
in
push
xor
mov
mov
mov
lret
jl
and
xchg
subb
xor
adc
fisubs
pusha
call
test
adc
test
js
insl
fmul
sbb
cmpsb
inc
add
aad
add
stc
cld
dec
mov
push
dec
movb
push
pop
dec
mov
pop
rclb
push
adc
inc
mov
adc
inc
lcall
pop
cs
shrl
cmp
adc
sbb
pop
add
xchg
xor
sbb
les
or
inc
daa
lret
mov
add
push
xor
inc
or
je
pop
ljmp
mov
mov
mov
ljmp
lret
das
mov
aad
fsubrs
sbb
in
adc
mov
cmp
mov
out
jns
sarb
aas
sbb
push
rcll
xor
enter
shlb
das
out
jle
es
pop
pusha
push
cmpsl
jb
add
inc
pop
jne
xchg
mov
scas
pop
movsl
or
fs
repnz
push
cs
lock
sub
sti
test
mov
pop
xor
into
jle
or
sahf
mov
xor
fdiv
push
jle
scas
dec
push
or
popf
dec
adc
cs
add
aad
push
xchg
mov
scas
cmp
mov
loopne
sub
std
lret
popa
push
pop
aad
mov
adc
js
or
mov
add
dec
and
mov
lcall
mov
pop
pop
pop
or
pop
mov
xor
das
cmpl
lahf
or
dec
cmp
push
ja
add
popa
mov
push
in
push
imul
dec
cwtl
fs
inc
hlt
adc
scas
push
add
sub
into
call
mov
pop
inc
mov
insb
pop
in
push
sbb
push
add
xlat
loopne
outsl
int3
cmp
add
mov
jo
cmp
es
ljmp
jbe
imul
jae
fisubrs
rol
cmc
mov
cmpsb
or
lods
out
and
imul
lcall
shrl
xchg
aas
mov
mov
aas
mov
les
lret
test
mov
in
dec
cmp
mov
fildll
inc
or
popa
in
and
sbb
or
arpl
adc
popa
sbb
int3
pop
orb
jp
lahf
rolb
mov
das
pop
daa
mov
fbld
icebp
mov
aad
add
dec
add
sbb
movsl
adc
lretw
std
dec
adcl
pop
inc
adc
push
std
movsb
incl
and
negl
adc
addr16
jae
dec
cmp
xchg
add
mov
lret
add
xchg
jne
sub
fisttps
add
in
xor
dec
ds
lds
push
jg
mov
cld
in
cmp
xor
push
sub
sbb
sti
xchg
ror
xchg
jmp
sbb
and
pop
aaa
or
add
or
fstp
addb
mov
push
or
jbe
or
fdiv
clc
dec
cmpb
popf
je
add
mov
cmp
aas
sub
cmp
sub
adc
add
dec
sbb
sbb
sbb
inc
gs
inc
inc
jno
dec
adc
fdivrl
cmc
cli
xor
push
inc
movb
icebp
cmp
mov
mov
xchg
add
pop
dec
lock
js
mov
sub
daa
fstpl
jg
lock
xchg
jo
test
out
jb
sbb
enter
fildll
mov
fst
jmp
pop
notl
ret
add
lcall
add
ret
repz
jp
and
add
insb
rcll
sbb
roll
test
test
daa
mov
lds
lock
cwtl
inc
fcomp
call
sub
sub
push
jbe
ret
cwtl
scas
loopne
sub
bound
mov
pop
cwtl
lods
jb
das
inc
int3
jge
dec
lret
inc
adc
jl
add
mov
int3
clc
jge
dec
call
and
add
mov
test
and
clc
std
daa
ret
or
push
sub
in
fsubrs
jo
xchg
pop
dec
ja
daa
add
fucom
mov
inc
mov
and
push
jnp
xchg
xor
adc
out
add
leave
dec
repz
cmc
push
lods
add
lret
mov
sub
sub
inc
sub
xor
mov
add
fnsave
sbb
xchg
xchg
lcall
andb
daa
negl
pop
push
lret
sbb
inc
mov
outsl
pop
lods
sarl
cmp
adc
fiaddl
dec
pause
sbb
iret
adc
orl
mov
add
psubq
xor
fsubr
inc
adc
sub
xchg
push
fidivs
das
out
xchg
pushf
mov
or
adc
and
push
ss
pop
rorb
mov
push
pop
xchg
movsb
pop
mov
pushf
pop
in
add
xor
mov
pop
dec
lock
pop
out
push
movsl
leave
fsubrl
dec
jnp
aas
stos
push
sub
jbe
mov
xchg
adc
shlb
push
lea
or
mov
outsl
mov
adc
inc
pop
aam
inc
ret
sbb
mov
pop
adc
lcall
test
or
cmp
push
dec
xchg
push
stc
mov
sub
or
sub
dec
popl
sahf
and
lea
ficompl
xlat
rcl
xchg
jmp
mov
dec
pop
outsb
and
ret
jb
and
add
aad
out
cmp
bound
jo
fdivs
adc
push
cs
stc
pop
pop
shll
mov
addb
mov
js
iret
cmp
jge
clc
cmpsl
mov
mov
rolb
roll
or
test
inc
adcb
add
and
aas
ja
dec
mov
add
loope
adc
jo
leave
mov
adc
xor
rclb
jae
cwtl
out
btr
sub
into
movsl
orl
push
add
pop
lret
ds
push
and
scas
xor
movsb
gs
adc
clc
mov
mov
sahf
push
lahf
push
shlb
push
out
in
int3
fdivr
add
lahf
pop
xchg
rcrl
mov
outsl
std
add
push
mov
mov
mov
popl
notl
inc
mov
push
inc
mov
sub
push
sub
jge
sub
xor
mov
sbb
ficoml
add
roll
push
jmp
xchg
push
ror
outsb
fistpl
dec
sbb
cmp
add
outsl
icebp
pop
inc
pop
shrb
or
outsl
or
adcl
rclb
cvtpi2ps
sahf
subb
jae
add
cmp
xchg
add
std
mov
clc
mov
adc
shl
fiaddl
add
ficoms
aad
pop
push
jb
jmp
lods
fadds
or
add
fdiv
nop
mov
xor
pop
ds
push
cltd
cld
mov
xchg
out
cmp
and
dec
push
pop
imul
push
mov
sub
adc
mov
xchg
pop
cltd
lods
xorl
xchg
fisttps
mov
dec
call
push
aaa
inc
cmp
rol
xchg
xorb
and
push
cmpsb
pop
jb
or
and
out
lret
xor
outsb
out
inc
adc
mov
dec
dec
ds
lcall
fimuls
jbe
in
add
cs
push
pop
jmp
push
test
adc
adc
or
call
ror
add
sub
sub
push
xlat
and
adcl
pop
fs
mov
adc
cmp
mov
or
jecxz
sub
dec
testb
not
jl
add
pop
or
fstps
lods
out
xor
and
cmp
inc
add
movl
push
adc
lcall
aad
xchg
and
mov
xor
xor
xor
daa
cmp
faddl
dec
shrb
je
pop
mov
std
dec
sub
aaa
fcompl
mov
popa
adc
out
pop
mov
add
setl
pop
cli
mov
mov
cmp
jae
shr
add
mov
movsl
xchg
sbb
orb
enter
fucomip
jle
scas
or
inc
cmc
js
sti
adc
aam
push
add
scas
mov
filds
loopne
fs
stos
pop
pop
mov
lods
ja
xchg
and
testb
daa
pusha
jp
and
das
pop
sbb
into
dec
nop
out
adc
push
lret
mov
cwtl
mov
hlt
imul
add
ljmp
clc
cwtl
adc
inc
loopne
pop
add
xchg
mov
aas
call
sbb
add
lret
into
adc
icebp
int
addl
xchg
mov
jmp
and
sbb
or
stos
jo
lret
push
enter
fs
inc
mov
xchg
icebp
or
clc
pop
pusha
xchg
adc
fldt
pop
or
cmp
sub
mov
movsb
cwtl
call
cmc
inc
movsl
pop
stos
sub
add
mov
insl
xchg
adc
rorb
cmp
add
shlb
outsb
or
jno
in
and
leave
sbb
inc
das
out
mov
xchg
popa
lcall
pop
mov
pop
imul
xor
jb
cmpsb
sbb
mov
pop
daa
ja
loope
adc
xchg
or
aam
xor
aam
cmp
dec
test
inc
dec
dec
sub
shrb
jmp
push
xlat
pop
je
sbb
inc
inc
push
testl
pop
outsl
in
inc
movsl
imul
arpl
adc
orb
mov
pushf
dec
call
sbb
out
jns
cmp
jmp
add
jo
push
add
lret
nop
sbb
pop
jo
jecxz
shlb
push
shlb
pop
push
push
das
sahf
mov
lea
push
loopne
icebp
leave
sbb
push
pop
push
popa
jmp
into
xchg
pop
in
imul
ret
outsl
ja
cmp
imul
add
push
pop
jno
and
icebp
pop
add
and
mov
flds
daa
pop
inc
sarl
cmc
je
repnz
das
push
xor
pushf
cmpsl
mov
xchg
rcrb
add
sbb
pop
mov
sar
pop
jb
jo
fnstsw
pop
test
outsb
dec
stos
adc
enter
mov
in
pop
pop
adc
sysenter
mov
not
shl
push
dec
or
cli
pop
push
mov
jge
pusha
in
mov
xchg
pop
push
jg
add
and
ljmp
cwtl
add
into
adcb
in
xor
lock
push
pop
repz
and
jnp
mov
jbe
adc
pop
add
push
pop
push
inc
jbe
daa
filds
or
xor
inc
inc
testl
cmp
cld
sbb
dec
mov
add
dec
push
jb
ljmp
les
es
aas
fiaddl
add
js
mov
repnz
mov
add
dec
xor
in
push
in
loop
jne
push
sti
sub
mov
or
jo
inc
push
push
xchg
mov
xchg
cmp
mov
xor
cwtl
out
ficompl
cmp
xor
inc
int3
xlat
cmpsl
loope
nop
jnp
add
mov
lods
cmpsb
and
cltd
add
bound
cmpsb
shl
sbb
push
dec
out
push
and
mov
push
mov
cmpsb
mov
lea
and
roll
inc
mov
and
push
mov
cmpb
mov
repz
cmpsl
mov
fs
jmp
mov
mov
ret
scas
aaa
pop
mov
popa
inc
fmull
push
mov
mov
mov
jae
sub
adc
jmp
in
xor
adc
add
ret
mov
aam
xor
in
pop
xchg
jb
push
scas
xchg
test
pop
test
scas
pop
aaa
add
mov
incb
es
fs
fiadds
pop
mov
int
adc
mov
jmp
mov
daa
or
fst
and
rolb
std
mov
and
jmp
push
pop
add
add
ja
jns
daa
sbb
pop
fistl
aam
scas
push
and
out
cmc
imul
adc
jecxz
mov
cmp
iret
and
and
pop
push
test
out
lahf
jb
and
sub
mov
inc
test
and
pop
or
mov
or
xor
mov
lea
add
iret
add
push
mov
clc
cmp
mov
inc
dec
stc
por
aam
das
imul
jmp
fidivrl
or
das
lcall
stc
xor
jno
xchg
xlat
fbld
mov
mull
jge
jne
push
inc
stos
mov
pop
or
imul
add
fistpll
js
mov
pop
out
or
popa
not
mov
push
adc
lods
aas
mov
pop
sbb
lret
sahf
mov
das
add
out
into
jb
fcomip
mov
adc
jecxz
cmpsb
cwtl
and
jno
add
lahf
call
jns
sub
jae
es
into
inc
push
out
add
mov
jnp
fimull
jle
lret
jge
cmp
xor
mov
aas
cmp
add
mov
inc
add
add
pop
and
fisubrs
push
or
pop
pop
pop
pop
shl
sub
addb
mov
popf
loope
mov
cwtl
jecxz
adc
mov
sbb
mov
jp
mov
mov
cmp
mov
test
lahf
dec
sub
add
xchg
xchg
int
sti
mov
in
iret
add
xor
ds
and
mov
adc
ret
fwait
add
xchg
push
sub
cmp
and
inc
sub
xchg
push
imul
ss
fcoml
dec
jecxz
hlt
icebp
jno
adc
pop
push
pop
cmp
mov
iret
push
pop
cmp
in
shr
aaa
in
das
clc
cli
add
or
ret
incb
mov
int3
pop
testb
or
add
and
ss
rolb
fstpl
das
inc
jno
mov
push
mul
cmpsl
repz
ds
dec
pop
mov
clc
pusha
cmpsb
jmp
ss
out
popa
fcoms
push
inc
mov
mov
pop
xorl
jge
add
xor
jne
es
push
mov
mov
sub
dec
loopne
add
push
jbe
in
dec
lock
rol
rolb
shlb
mov
cmpl
add
mov
cmp
or
push
dec
addb
or
dec
aaa
addl
xrelease
pop
mov
ret
sub
dec
inc
sbb
xchg
push
mov
mov
ljmp
pop
hlt
jl
add
and
dec
lea
or
jo
fists
mov
stos
add
movsb
out
or
jp
mov
enter
stos
adc
add
popa
or
scas
clc
pop
xchg
inc
out
sahf
xor
and
inc
mov
pop
sahf
rdtsc
stos
add
push
mov
cmp
hlt
mov
fs
cmp
or
pop
xchg
and
jmp
xchg
movsl
enter
aas
loop
andl
aaa
in
fimull
sahf
cmpsb
push
mov
mov
jbe
mov
mov
shlb
mov
imul
mov
test
adc
sbbb
adc
push
push
das
sbb
nop
inc
xchg
leave
es
outsl
or
daa
mov
mov
mov
push
dec
in
sbbl
call
lods
ja
mov
cmp
addr16
inc
mov
push
add
mov
dec
pushf
or
xor
notb
pop
lods
scas
add
mov
mov
and
lods
pop
mov
daa
dec
leave
dec
xor
or
mov
aas
test
xchg
push
mov
incl
out
sub
push
sahf
push
xchg
out
push
pusha
jmp
mov
lcall
dec
cmp
sbb
stos
push
add
sub
or
adc
push
neg
mov
icebp
pop
sti
repz
enter
cmp
jle
push
pop
sbb
mov
inc
mov
loopne
pop
add
hlt
push
mov
pushf
daa
push
push
fimull
pop
pop
notb
cmp
outsl
inc
jmp
inc
add
lcall
fmull
imul
pop
mov
mov
fcoml
or
cmpsb
pop
hlt
inc
test
xchg
and
pop
xchg
xchg
jle
out
mov
neg
jo
dec
inc
faddl
inc
lret
das
pop
shlb
xchg
sbb
push
jnp
dec
test
sbb
push
in
cwtl
cmp
loopne
iret
sub
push
add
mov
cmc
movsb
fidivl
or
mov
cmp
cwtl
jb
push
xor
add
in
ja
mov
js
adc
or
repz
in
pop
adc
xchg
or
add
xchg
aaa
call
inc
sahf
mov
lahf
jg
cmp
dec
mov
dec
push
lret
jge
dec
movsl
stos
subb
cli
dec
add
mulb
sbb
mov
mov
orb
xor
jle
scas
and
popf
lods
push
inc
cmp
nop
mov
mov
sub
ja
loop
dec
and
jae
jne
hlt
clc
bswap
add
xlat
out
and
pushaw
cmpsl
or
push
pop
dec
repz
clc
xor
sti
or
je
jp
mov
dec
nop
or
and
inc
clc
xchg
dec
fcomps
xchg
xor
push
cmp
es
jbe
shlb
loope
fidivl
jnp
add
daa
into
jnp
push
push
pop
popf
mov
mov
pop
ljmp
mov
inc
orb
cmpsl
fcoms
jecxz
rcrl
pop
mov
sbb
leave
jnp
mov
sbb
lock
out
testb
push
adc
icebp
insl
xchg
sarb
fists
or
mov
pop
popf
js
xchg
inc
add
movsl
xchg
cmp
scas
daa
flds
inc
add
cmpl
imul
mov
cli
xor
dec
xchg
leave
pop
add
push
ja
adc
lds
mov
inc
push
add
lock
popf
bound
adc
mov
push
jge
xchg
scas
and
inc
add
inc
leave
rorl
dec
mov
push
mov
test
cmc
je
mov
mov
xor
jge
mov
test
and
rclb
shl
aaa
cli
pop
cld
movzbl
cmpsl
loop
add
push
sbb
in
xlat
ja
in
daa
xchg
cmpsl
jns
sub
sub
sub
adc
and
flds
sub
xchg
lock
inc
sub
std
clc
sub
inc
test
js
jae
imull
pop
jns
dec
shrb
pop
lret
sbb
leave
push
outsl
rclb
inc
or
xchg
out
pop
push
jmp
pop
sbb
loope
out
adc
pop
das
add
push
popa
xor
mov
or
lret
es
push
jmp
ljmp
enter
sti
adc
or
hlt
aaa
xor
out
fmull
negl
cmp
dec
inc
jb
xchg
std
add
int3
xor
add
adcl
enter
jge
movsb
add
test
popf
push
mov
mov
cmp
scas
add
shrb
push
mov
fmull
gs
addr16
fsubs
clc
es
inc
mov
mov
xchg
adc
addl
loope
aad
adc
push
fisttpll
xor
jno
movsl
js
sub
sahf
sub
adc
jle
jb
lea
mov
mov
push
cld
pop
shll
push
fld
jle
into
int3
sti
pop
pop
xchg
xchg
pop
mov
js
mov
pop
dec
mov
stc
add
sub
jnp
xlat
jno
leave
jae
xchg
mov
fstpl
push
pop
aaa
ljmp
sub
lock
mov
adc
xchg
mov
sub
xor
sbb
and
jp
or
ret
or
enter
dec
pop
testb
adc
divb
pop
add
push
add
dec
aam
push
adc
or
jp
addr16
jle
push
nop
test
add
push
icebp
pop
mov
jge
inc
push
pop
cmp
mov
push
jo
dec
call
out
cmc
stc
sbb
adcl
pop
add
mov
sub
and
add
test
mov
aad
push
mov
mov
movsb
push
clc
push
fistl
inc
stc
insb
and
je
and
orb
pop
test
cmp
xor
jmp
xlat
cli
std
xchg
pusha
lods
mov
test
out
pop
sti
add
insb
push
jecxz
test
and
clc
jle
dec
push
pop
add
pop
das
cmpl
dec
imul
dec
in
lock
add
rorl
dec
and
shll
call
sbb
pop
inc
push
aas
addl
jp
push
repnz
inc
mov
sti
cmp
push
andb
cmp
cmp
pop
test
add
ficomps
sub
ss
sti
outsb
mov
add
hlt
or
jle
out
dec
popf
mov
cmp
loope
div
movsl
add
in
xchg
sub
mov
idivb
adc
loope
mov
test
or
xchg
movsl
lock
mov
or
test
mov
lods
stos
adc
test
mov
lods
sub
mov
dec
test
adc
int
mov
add
and
adc
jmp
pop
cli
or
out
xchg
add
mov
and
out
add
add
mov
mov
mov
insb
jle
or
sub
sahf
andb
ja
out
in
movsl
pop
aas
lea
jle
jns
jbe
adc
and
stc
loopne
leave
fsub
jns
add
xchg
pop
imul
xchg
push
std
add
ret
jno
sbb
cmp
push
popa
mov
shll
mov
jmp
stos
pop
jns
dec
sbb
test
outsl
stc
sahf
add
clc
cmp
aam
fs
mov
fldl
adc
sub
mov
push
test
mov
add
add
add
xchg
sub
push
push
add
stos
insb
jmp
pop
jp
mov
testl
push
adc
outsb
mov
and
out
xchg
and
ja
lcall
incl
cmp
sahf
sub
out
jmp
mov
dec
cmp
lock
pop
stos
dec
fndisi(8087
push
popa
outsl
in
movsl
jb
lret
mov
mov
xor
inc
dec
mov
in
lds
xchg
dec
push
inc
add
sbb
xlat
fidivrs
xchg
xchg
xor
or
add
and
jno
std
cli
sbb
sahf
mov
dec
xor
movsl
icebp
dec
inc
mov
xchg
adc
daa
les
dec
mov
out
nopl
inc
outsb
jge
jno
and
push
cli
andl
xchg
out
mov
dec
xchg
inc
outsl
sbb
inc
push
popf
push
push
enter
das
leave
jnp
imul
cld
mov
jb
addr16
jbe
fnstenv
jp
popl
jmp
ret
push
adc
shll
test
outsl
inc
fdiv
mov
cld
int3
sbb
repnz
popa
cmpsb
mov
jns
aas
and
dec
jge
nop
jno
or
cwtl
sbb
xorb
das
addr16
pop
movsb
add
sub
sub
jg
xchg
mov
fs
and
aam
shlb
mov
xchg
mov
in
sub
adcb
jb
dec
push
or
test
in
lock
jmp
leave
ljmp
call
adc
push
ret
lods
ret
ljmp
xchg
dec
mul
add
xor
jmp
ss
flds
mov
xchg
add
pop
push
or
cmp
sub
add
fnstcw
and
out
add
cmp
fists
cs
pop
adc
out
notl
jae
mov
push
adc
shrb
pop
xchg
jne
js
xchg
bound
lods
pop
subl
mov
std
xor
daa
jno
add
int
repnz
push
cmp
mov
sbb
mov
cmp
mov
test
push
push
push
and
and
cmp
es
or
sub
and
or
ret
les
and
dec
cld
loopne
push
pop
add
stos
add
sti
sbbl
stc
ret
xchg
push
mov
fldenv
sub
add
loop
data16
insl
mov
fstpl
test
xchg
xchg
and
jne
mov
cmpl
sbb
pop
imul
add
pop
js
ret
into
sbb
addr16
call
lret
pusha
in
je
inc
pushf
dec
decb
or
jp
adc
jl
pusha
inc
cmp
fisttps
sbb
and
pop
dec
addl
call
ds
sbb
mov
test
mov
adc
push
mov
mov
push
cmpsb
pop
pushf
mov
pop
mov
or
rcr
add
aam
pop
sub
lods
lods
out
pop
jae
test
inc
js
dec
aaa
jbe
xor
sbb
dec
xchg
jmp
sti
add
das
je
push
movsb
pop
push
aad
jmp
cmp
sub
addr16
sbb
jne
std
in
mov
mov
and
gs
leave
add
or
jae
add
cli
sub
add
cmpsb
inc
adc
mov
sub
sbbl
rorb
sti
incb
add
mov
and
add
pop
mov
push
loope
push
rorb
daa
or
dec
cmpb
fisubrs
or
push
xchg
mov
xor
xor
push
lret
cmpsl
lock
mov
xor
dec
test
add
push
jnp
cld
xchg
jle
sub
xchg
js
sub
shrl
rclb
ja
adc
into
scas
mov
aas
cwtl
xlat
lcall
dec
roll
add
in
out
sub
xchg
notl
mov
adc
add
cmp
lods
pop
roll
mov
sub
call
or
insb
andb
dec
shll
les
in
out
or
add
xor
das
cmp
mov
loopne
daa
mov
out
pop
lahf
inc
jl
add
or
xchg
sbb
dec
add
and
lods
cwtl
inc
pop
idivl
stc
pop
push
ss
aaa
dec
or
jno
pop
fildll
xor
inc
aad
repnz
ret
mov
pusha
arpl
and
pop
adc
incb
testb
xor
sub
imul
inc
ss
ret
jmp
gs
outsb
or
and
cmp
sbb
jne
roll
xor
addb
add
shl
sub
fisubrs
adc
std
shr
mov
mov
clc
push
adc
mov
pop
ja
mov
into
scas
cs
pushf
or
dec
in
js
xor
lock
jecxz
lcall
lcall
adc
lahf
jp
add
push
pop
mov
pop
or
insb
jae
jmp
xchg
in
push
dec
rcrb
mov
inc
add
mov
dec
add
iret
xor
test
adc
xor
inc
cmp
outsb
and
or
or
lret
movsl
cmpsl
cmpsl
xor
nop
addl
insl
add
push
in
add
jne
lcall
sub
ret
imull
jbe
lret
cmc
sbb
loopne
add
mov
or
adc
jnp
dec
in
jecxz
pop
imul
xlat
mov
decl
xor
subb
cwtl
and
pop
push
and
inc
cmp
in
mov
dec
cmp
lret
pop
mov
popf
test
fsubl
fs
dec
repz
aad
add
push
mov
hlt
xor
inc
inc
pop
push
and
jl
cmp
inc
or
or
jmp
push
add
movsb
jmp
fcoml
mov
test
enter
insl
mov
fs
popa
test
imul
or
subl
fistpl
pop
das
pop
jecxz
sbb
add
test
adc
inc
mov
mov
xchg
std
cmp
add
inc
or
sub
adc
clc
dec
jae
pop
mov
mov
add
sbb
push
push
cli
sbb
add
js
inc
sbb
pop
lods
mov
aam
mov
xchg
out
jecxz
dec
cmpxchg
sub
mov
push
test
mov
inc
es
pop
xchg
cmpsb
jle
nop
add
push
xchg
movsl
incb
fcmovbe
gs
cmp
loope
adc
jle
jno
shll
push
scas
test
cmp
lods
mov
inc
gs
push
incl
das
pop
dec
jo
mov
mov
mov
add
arpl
das
aas
bnd
mov
and
out
and
out
daa
sbb
cld
dec
adc
add
push
add
outsb
xlat
repnz
fiadds
add
and
fnstenv
xchg
lock
aaa
decb
insl
jb
pop
mov
sbb
stos
outsb
cmp
and
addb
test
cli
add
int
adc
out
lret
lahf
shll
ret
xchg
mul
jae
xor
jns
and
add
adc
or
jo
xlat
or
daa
add
div
outsl
les
push
mov
xchg
subb
mov
sub
add
stos
je
sbb
shl
xlat
pop
sub
push
push
icebp
fwait
lods
ret
sbb
xchg
jno
adc
sub
pop
adc
fildl
add
jmp
add
xor
mov
pop
dec
mov
lods
dec
in
push
dec
mov
pop
jne
pop
mov
testl
fidivs
aad
stos
es
std
or
push
xor
fisttpl
lods
les
pop
xlat
mov
push
popa
rorl
cmp
dec
addr16
lds
jle
scas
jo
mov
fldt
movsb
push
clc
dec
inc
out
xchg
mov
add
xor
jp
sgdtl
push
clc
push
loope
and
dec
adc
pop
jle
cmc
enter
pushf
daa
jbe
push
xchg
xchg
scas
or
pop
pop
dec
dec
add
jb
lea
jl
add
fcomps
dec
add
shl
fmull
notl
add
and
pop
movsl
cltd
pop
lret
dec
into
jle
add
inc
pop
jnp
sbb
jl
and
push
test
rcll
cmpb
sbb
jo
mull
add
add
push
pusha
jg
ds
bound
stc
pop
xchg
mov
decb
jge
sbb
bnd
mov
pop
xor
mov
dec
adc
cltd
jae
fs
mov
lahf
dec
in
and
mov
jb
scas
inc
cli
out
or
or
pop
popf
inc
mov
orl
mov
cmp
jg
shll
jae
and
loope
xchg
idivl
arpl
lds
push
fidivl
stos
shrl
adc
filds
lret
jecxz
jp
ret
and
ret
pop
dec
push
mov
jp
neg
dec
or
cmpsb
sub
add
testl
pop
xlat
push
mov
lods
pushl
gs
clc
xor
pop
insl
fisttps
out
and
das
ds
xchg
rorb
loopne
and
push
lock
cmp
test
or
cmp
push
inc
insb
adc
push
xchg
cmpsl
lock
jg
roll
and
push
cmpsb
enter
pop
mov
cld
scas
icebp
mov
or
pop
pop
mov
cmp
cmpsb
fwait
into
int
in
popf
mov
rclb
jge
inc
leave
xor
shrl
roll
popf
or
or
jl
mov
xchg
call
push
out
imul
js
loopne
enter
jmp
and
lods
enter
adc
fs
das
jns
nop
rclb
jl
jns
pop
add
mov
stos
addb
fcoms
sub
cmpb
mov
sub
iret
std
mov
insb
mov
ja
and
setl
or
cmp
adc
jp
mov
sahf
or
imul
shll
aad
addb
mov
sbb
and
sar
pop
andb
pop
jne
inc
xchg
and
pop
ds
jb
sbb
cmp
jecxz
pop
adc
aas
scas
cld
nop
add
scas
inc
and
test
aad
adc
or
lret
sbb
mov
push
add
xchg
mov
into
ljmp
pop
rclb
gs
into
loopne
push
push
push
add
rorl
or
and
adc
and
aam
pop
xchg
mov
pop
xchg
inc
loop
mov
jae
dec
cli
sub
test
cmp
mov
pop
mov
jecxz
lcall
inc
pop
mov
pop
lret
inc
push
add
outsl
popa
in
enter
or
xchg
out
je
mov
lcall
inc
dec
sbbl
out
mov
lret
add
ds
jp
or
adc
fidivl
jbe
push
scas
cmp
pop
out
add
adc
sub
clc
cmp
inc
inc
out
pop
and
adc
lods
mov
gs
pushf
inc
test
mov
xor
shrl
sahf
lcall
mov
fcoms
inc
lods
dec
add
aas
mov
shlb
xchg
in
sbb
cmp
movsb
xchg
mov
adc
sbb
mov
jecxz
ljmp
mov
addb
mov
loopne
adc
cmp
sub
mov
jo
std
clc
lods
lods
dec
xchg
xchg
jb
pusha
or
adc
or
add
test
dec
jno
das
add
inc
adc
adc
xor
cmpsb
jmp
xor
repz
inc
loopne
mov
ds
out
ret
mov
mov
movsl
jae
sar
and
mov
popa
fstps
mov
outsb
lea
cs
jge
add
or
push
jl
xchg
jae
xchg
mov
xchg
and
lods
cmp
xchg
add
scas
popl
mov
ljmp
pusha
lds
jno
push
mov
inc
add
lods
cwtl
nop
hlt
fdiv
jb
add
ret
incb
dec
sbb
fdiv
push
fistpll
out
aam
scas
in
mov
daa
pop
push
xor
cmp
loopne
xchg
sbb
call
insb
push
or
stc
add
sbb
mov
pop
add
js
sub
dec
out
adc
stos
loope
sub
inc
xchg
adcb
and
jne
mov
xor
cmp
pop
pop
repnz
int
clc
xchg
pop
in
mov
stc
add
or
jecxz
jo
push
add
ja
cmp
mov
in
outsl
out
add
pop
sbb
pushl
sarb
mov
mov
sarb
out
pop
int3
push
pushf
add
or
or
mov
pop
sarb
pop
push
repz
aas
adc
insb
add
shll
leave
popa
jb
xchg
mov
push
sub
pop
xchg
add
insb
xchg
gs
call
and
aas
lret
stos
stc
jne
push
or
xchg
lret
popf
lcall
sbb
sbbb
orl
out
sub
fisubrs
mov
dec
add
std
cmp
adc
ja
cld
outsb
lahf
in
cli
jno
inc
xor
pop
push
mov
push
mov
neg
cld
dec
shrb
sub
push
das
aad
mov
and
jmp
decl
add
les
add
rcrl
xchg
jg
add
js
stos
fistpl
fists
mov
sbb
and
int3
fnstcw
cmpsb
repz
sub
and
dec
jno
push
mov
aad
std
xor
lods
or
lock
addr16
fildll
xorl
inc
jmp
popa
mov
dec
shr
icebp
pop
std
push
cmpsb
lahf
jne
push
sbb
jbe
mov
add
add
dec
add
jp
arpl
or
cltd
lods
test
clc
idivb
loop
scas
inc
in
ret
es
rolb
pop
cmpsl
loope
pushf
andb
and
icebp
outsb
push
push
push
xor
dec
lahf
fs
add
xchg
pusha
imul
sub
mov
or
lods
bound
ret
add
xchg
sub
loope
sub
push
lahf
or
sub
loope
mov
adcb
std
js
push
outsl
pop
add
push
ud2
push
cmpsb
pop
rcll
mov
clc
xor
sbb
adc
mov
rcrb
sbb
andl
dec
out
xchg
pop
pusha
mov
cmp
push
popf
sbb
pop
cmp
out
or
jle
pop
stc
pop
dec
inc
xchg
xchg
stos
and
mov
repz
notl
sarb
xchg
faddp
adc
add
call
mov
loope
sbb
mov
dec
je
dec
stos
clc
xor
pop
xlat
test
icebp
cmp
loopne
cld
pop
andl
xchg
push
ds
popa
pusha
push
dec
shl
inc
cmpb
dec
cmpsl
mov
icebp
add
rcrb
add
sub
add
rcll
repnz
sub
cmp
or
adc
add
push
sti
lock
adc
adc
mov
mov
fcmove
jne
inc
adc
in
add
jae
xchg
frstor
enter
pushl
fwait
dec
pusha
shlb
ja
add
testl
pop
xlat
rcll
fcomi
jo
xchg
xchg
add
sub
fdivr
mov
test
popa
stc
nop
pop
adc
add
xchg
pop
je
add
and
pop
fstpl
sub
pop
imul
popf
xchg
mov
scas
test
push
int3
inc
out
and
fstl
mov
in
jo
mov
or
out
pop
sbb
push
ljmp
insl
in
pop
xor
inc
js
scas
dec
in
stos
dec
sub
in
in
lahf
lock
pop
mov
shl
rclb
scas
movsb
lcall
cmc
inc
inc
adc
into
jge
push
xchg
dec
scas
and
stos
lods
ret
push
pop
add
xchg
les
cmpsl
sbb
mov
sti
es
cvtps2pd
lahf
pop
imul
xchg
bound
and
sbb
out
cmpsl
pop
in
push
push
mov
dec
roll
out
fwait
cld
jmp
mov
neg
adc
xor
or
loop,pn
sbb
mov
popa
idivb
pop
cld
mov
jno
push
mov
add
inc
arpl
dec
push
mov
adcl
aad
js
jb
sbb
daa
inc
call
and
cli
clc
std
cmc
cli
mov
sub
inc
dec
mov
lods
fisttps
adc
addb
loope
pop
and
jp
outsb
mov
add
imul
pop
or
andl
insl
test
sub
cmp
lock
cmp
sbb
icebp
fs
pop
sub
lret
or
cmp
aam
xor
ret
clc
and
pop
sbb
push
xor
jo
pop
push
call
mov
push
mov
or
pop
xlat
xchg
lcall
cld
jg
pop
sub
sub
sub
pop
push
push
ja
pop
pop
jno
jnp
cmpsb
push
mov
jbe
popa
out
sarb
ss
xor
inc
cmp
pop
fisubs
jg
js
sub
lods
push
daa
cmp
rclb
sub
divps
ds
jnp
lahf
push
filds
lret
adc
mov
add
inc
sub
dec
popf
mov
mov
repz
cltd
mov
aam
aad
and
lds
push
in
push
imul
cmp
test
push
stc
in
fsubl
adc
dec
or
xchg
testl
push
mov
or
cmp
lcall
mov
sub
mov
or
rorl
imul
cld
das
push
les
and
lret
push
sbb
call
and
inc
inc
cmp
push
pop
or
subb
popf
sahf
push
pop
pop
divb
out
in
cmp
gs
mov
testl
inc
cmp
xor
stos
mov
test
add
popf
add
fs
jg
lods
xchg
clc
sub
pop
leave
decl
cs
loop
orb
loop
push
and
test
or
hlt
mov
xor
add
pslld
xchg
dec
pop
jp
rclb
or
push
testl
test
and
xchg
push
sahf
xchg
xor
and
dec
test
daa
sub
jns
mov
insb
rorl
add
mov
push
xchg
stos
xor
ljmp
lods
movsl
inc
push
nop
sbb
and
add
incl
add
int
dec
jo
jp
ret
adc
pop
and
or
ret
and
ljmp
mov
xor
cmpsb
mov
jb
lcall
pop
mov
lods
or
imul
lret
mov
push
add
fistl
mov
and
mov
repnz
mov
lods
dec
fwait
rorb
xchg
add
mov
das
push
enter
fs
sarb
xchg
add
stos
inc
stos
ret
xchg
ffree
mull
cwtl
dec
cmp
adc
sbb
sub
xabort
xlat
mov
pop
ret
loopne
das
sub
inc
jecxz
out
lret
pop
in
lea
gs
bound
jb
cli
push
push
imul
pop
in
jp
je
sub
sub
mov
add
or
mov
ret
aaa
lods
scas
inc
or
es
xchg
xchg
mov
in
daa
or
dec
mov
mov
dec
mov
decb
fwait
les
jbe
es
lcall
pop
out
jmp
mov
test
push
dec
lock
inc
mov
add
pop
push
aaa
cmp
jb
adc
pop
or
pop
push
dec
sub
sbb
inc
repz
and
test
inc
xchg
xchg
mov
shlb
adc
push
dec
push
dec
test
push
xchg
jo
jae
jo
dec
mov
add
sahf
sbb
lods
adc
movsb
adc
inc
repnz
gs
stos
mov
mov
or
dec
hlt
pop
cmp
push
inc
pop
push
mov
push
repnz
outsb
cmp
xchg
hlt
jo
pop
add
mov
or
add
xchg
or
push
mov
and
lods
test
addr16
lret
pop
jp
inc
push
cmp
cmpl
adc
cs
push
mov
call
pop
push
icebp
rolb
shl
xor
inc
es
js
pop
inc
cmpsl
adc
pop
xlat
and
outsb
push
int
adc
stos
pop
push
rcrb
and
dec
jns
xchg
shr
jecxz
call
insb
pusha
xor
fistl
cmc
movsl
or
mov
addr16
push
add
or
jno
cmp
in
cmp
jo
pop
inc
add
jae
add
adc
mov
daa
lea
aas
enter
sbb
fldt
jns
pop
xor
inc
or
outsl
mov
xor
push
jg
loop
out
test
scas
inc
adc
push
sti
jae
push
cmp
mov
incb
lahf
lock
add
arpl
inc
out
lret
outsb
xchg
call
sub
in
jae
mov
push
push
sub
pusha
out
push
stos
mov
cmp
std
mov
sbb
inc
sub
repnz
xor
sub
ret
icebp
lret
mov
pop
cmp
into
xchg
minps
inc
icebp
add
test
bound
add
stos
mov
int
sub
pop
cmpsb
mov
lea
cmp
mov
mov
pop
xchg
outsb
and
mov
addr16
cmc
js
mov
aas
loop
dec
std
sub
cmpsl
js
add
cmp
push
sarl
pop
inc
add
sti
outsb
mov
push
das
or
lods
pop
mov
pushf
cmp
inc
lods
dec
stc
repz
incb
mov
ss
es
push
ud0
stc
xchg
out
lds
pop
insl
sub
inc
pop
xchg
loope
ljmp
pop
dec
jmp
das
add
mov
mov
lahf
cmp
xchg
lock
add
push
nop
idivb
fdivr
dec
inc
mov
jbe
mov
in
test
sbb
inc
dec
js
fs
or
lahf
in
push
popf
push
xor
adc
ljmp
push
movsb
cmp
jns
in
lock
mov
adc
xor
adcb
push
push
dec
mov
dec
dec
mov
jne
mov
cmpl
clc
test
mov
popf
lock
pop
push
pop
loopne
jmp
inc
sar
push
push
je
insl
nop
sub
cltd
xchg
imull
dec
out
sbb
add
inc
fcoms
xor
pop
or
in
clc
push
loope
imul
test
iret
pop
xor
xor
leave
and
repz
les
ret
cmp
jno
nop
inc
sti
pop
push
jnp
sub
daa
pusha
jl
ficoms
cs
in
push
add
neg
andl
ret
pop
leave
ficoms
rorl
in
lret
mov
inc
sahf
mov
lea
adc
bound
push
test
push
js
shr
pusha
push
jmp
add
inc
push
je
rolb
stc
mov
inc
jge
inc
lods
lods
ret
dec
push
icebp
lock
adc
jns
mov
and
or
xor
loope
inc
adc
das
xor
cli
jmp
mov
sti
mov
outsl
xchg
arpl
sbb
repz
jle
stos
lock
sub
xor
xor
cmpl
xchg
rcrl
xor
add
or
sub
xor
cs
out
sbb
faddl
inc
outsb
movsl
inc
jb
in
inc
add
fiaddl
sub
jmp
sub
cmp
jge
and
cli
add
xchg
add
mov
sbb
and
mov
mov
insl
rolb
outsl
ret
fdiv
loop
add
mov
mov
add
imul
adc
out
movsl
mov
daa
movsb
pop
mov
out
inc
mov
or
rolb
xchg
fldl
lcall
add
cmp
pop
dec
shrb
cs
mov
test
inc
mov
dec
sahf
js
dec
pop
jge
cmpsl
repz
push
pop
xchg
cmp
jg
mov
mov
inc
add
subb
jae
xlat
push
cwtl
lea
dec
lods
jge
orb
mov
or
mov
cld
das
cmp
ds
es
outsl
add
rcrb
and
into
daa
xchg
adc
mov
and
enter
das
loopne
into
mov
or
add
push
aas
inc
sti
cltd
aam
add
movsb
fs
test
and
test
sub
jecxz
out
sbbb
add
das
push
mov
mov
xchg
enter
xor
xchg
cmp
outsl
imul
dec
dec
out
and
jg
and
adcl
add
and
mov
mov
sbb
fs
ret
or
cld
push
ja
mov
push
adc
mov
sbb
or
imul
fdiv
lret
pop
sub
xchg
or
fcoml
movhps
and
int
jo
cmp
cmp
jl
push
add
xor
push
cmp
mov
daa
vpsubusb
mov
aam
outsl
sbb
pop
je
or
testb
add
inc
test
pop
out
das
nop
xchg
and
sub
mov
xor
mov
imul
mov
inc
les
imul
addl
jge
pop
clc
cmp
push
int3
les
add
leave
xchg
dec
dec
push
or
jo
add
mov
call
rcrl
and
ret
push
xchg
dec
iret
das
pop
repnz
xchg
xor
cmp
mov
dec
and
push
pop
in
mov
and
push
jno
outsb
stos
mov
adc
xchg
add
or
scas
sub
mov
inc
insb
aam
inc
mov
or
adc
jecxz
dec
xorb
aad
push
cmpsb
jp
sub
in
push
xchg
lods
and
popf
js
mov
pop
pop
mov
jo
xchg
cmc
jg
cli
outsl
dec
and
cmpsl
not
ret
xchg
add
test
lds
dec
cmp
outsl
in
imul
fmul
test
add
in
adc
jno
adc
repnz
mov
inc
push
inc
inc
insb
out
add
push
bound
jo
cli
add
jp
jp
jl
adc
pop
pop
std
hlt
mov
push
ret
addr16
outsb
push
call
sub
lods
or
add
repnz
mov
dec
and
adc
call
lods
cli
dec
jl
sub
inc
test
insb
scas
cmpsl
xchg
jl
daa
inc
push
pop
add
xchg
outsl
ds
iret
jbe
add
out
add
aas
stos
mov
test
inc
and
add
aaa
or
loope
push
stc
popf
pop
outsl
movsl
shlb
push
cmp
pop
aad
mov
mov
and
sbb
mov
mov
add
call
out
jmp
mov
jmp
xor
imul
push
cs
add
stc
lret
xor
insl
mov
popa
cmp
jle
pushf
add
sbb
hlt
movb
mov
mov
iret
mov
xchg
pop
call
out
ds
xchg
mov
push
pop
idiv
dec
aam
lods
hlt
outsb
daa
aam
adc
sbbl
xor
mov
dec
cmpsb
jo
fsubs
sub
je
adc
push
adc
jnp
pusha
stc
pop
xchg
adc
push
orl
sub
arpl
cmp
stos
mov
xor
inc
sbb
mov
pop
cmp
scas
inc
dec
fisttpll
and
insb
mov
movsb
inc
jp
pop
sarl
sbb
cmp
sbb
sub
imul
sarb
add
cld
jmp
loop
add
cltd
lods
xor
cmp
add
push
jnp
xchg
cmc
and
xor
test
lret
jecxz
xchg
cwtl
cwtl
jne
lret
xchg
fdivs
xchg
ror
adc
outsb
pop
mov
cmpsl
int
repz
jne
std
punpcklbw
add
sbb
sub
sbb
mov
lret
add
shlb
fldcw
out
adc
adc
lret
mov
aas
in
push
mov
push
mov
nop
mov
aaa
adc
and
and
mov
or
sar
call
popf
mov
add
leave
sub
push
repnz
or
dec
jnp
pop
lods
out
mov
cs
inc
adc
adc
mov
pop
pop
push
inc
jge
and
or
sbb
addb
jecxz
loop
std
pop
in
test
mov
sahf
mov
dec
mov
push
ja
lret
mov
popf
xchg
aaa
inc
ljmp
sub
mov
or
in
inc
push
xor
push
pusha
out
cs
dec
and
and
ds
aam
or
imul
add
es
xor
out
dec
adc
in
dec
cmpxchg
xchg
test
in
or
mov
insl
mov
fs
cmp
pop
decb
mov
sbb
pop
or
sbb
orb
pop
aas
adc
add
sbbb
fldl
repnz
leave
aam
pop
stos
std
stos
dec
pop
ja
sub
push
fsubl
and
scas
fldl
and
out
push
call
scas
add
popf
bound
pop
add
int3
jg
mov
xlat
outsb
imulb
out
inc
dec
xchg
in
cmpsb
cmp
add
cmp
or
sub
cld
stc
cmp
adc
das
loopne
jns
sub
sbb
inc
icebp
out
sbb
or
push
sbb
jbe
lods
jno
sbb
push
hlt
repz
insb
addr16
mov
dec
xor
inc
cmp
fs
sub
pusha
pop
xor
stos
xlat
cmc
mov
loopne
dec
add
fsubrl
inc
icebp
out
push
adc
or
push
test
lods
mov
push
push
mov
xchg
xchg
pop
js
inc
pop
pusha
dec
dec
stc
stc
les
pop
mov
xchg
mov
dec
and
xchg
add
sub
and
ja
lret
sub
add
shrb
add
dec
dec
pop
dec
lods
out
and
decl
pop
lcall
imul
loope
leave
jge
lret
testl
test
sti
popf
mov
xor
dec
mov
ds
jbe
adc
dec
insb
mov
rolb
adc
sbb
repnz
dec
mov
popf
fdivrs
stos
fsubl
insb
fs
mov
loopne
push
mov
cmp
cmp
mov
adc
adc
push
jl
xchg
std
mov
mov
and
inc
push
xchg
out
ficoml
lret
cli
pop
xchg
mov
mov
add
call
subb
jnp
and
flds
adc
xor
mov
loop,pt
pop
fstps
mov
popf
and
dec
shr
or
mov
in
add
mov
test
lock
xchg
je
mov
push
or
push
mov
ficoms
mov
movsb
push
add
cmp
pop
cli
jne
mulb
clc
imul
jb
xchg
dec
lahf
push
add
movsb
hlt
lods
iret
jmp
fldcw
arpl
sub
lods
jb
outsb
fistpll
icebp
jecxz
or
adc
rclb
jecxz
sbb
into
sbb
orl
mov
flds
or
pop
stos
mov
adc
sarl
sub
jecxz
lods
js
sub
lds
je
xchg
fimull
pop
dec
decb
scas
imul
js
repnz
push
in
pop
sub
mov
add
ss
cmp
mov
test
fmuls
imul
dec
pusha
in
xchg
psubsb
pop
mov
test
pop
cmpb
xor
push
xchg
pop
push
ss
out
pop
incl
int
das
sbb
mov
lock
fs
mov
mov
xchg
gs
sbb
mov
adc
xchg
ds
imul
inc
mov
mov
je
mov
nop
fwait
mov
sub
mov
cmpl
enter
lds
or
lcall
adc
xor
pop
out
mov
xchg
shrb
jp
add
lcall
in
jne
stos
jge
cli
push
push
test
out
ret
stos
pop
icebp
shrb
inc
ds
in
pop
enter
std
insl
shrb
or
loope
ljmp
mov
mov
or
sub
xchg
adc
xchg
sti
pop
sub
les
and
inc
jge
outsb
mov
ret
cmpsl
shl
jbe
push
sbb
xchg
add
lock
and
pop
dec
add
push
sub
sbbb
leave
mov
mov
enter
sbb
cs
pop
cmp
mov
mov
and
dec
mov
jl
mov
jno
mov
mov
jns
popa
mov
lcall
test
jmp
test
mov
inc
lcall
mov
jg
scas
cmp
cltd
aam
add
int
cmpsl
sub
dec
or
add
pop
sbb
jmp
xchg
xchg
lods
js
cmp
mov
lock
mov
xor
aas
shlb
orb
fbld
cmp
test
aas
mov
mov
andl
cwtl
xchg
lea
xchg
out
and
push
lahf
jmp
adc
lret
mov
pop
testl
int
les
movsb
or
sbb
mov
mov
jnp
mov
mov
mov
aam
mov
jge
rcrb
scas
inc
arpl
sbb
pop
xor
sbb
pop
psllw
jg
jl
sub
out
repz
adcb
jb
mov
stos
inc
cmp
adc
pop
dec
mov
xchg
in
movlps
or
aas
mov
lret
push
pop
sub
out
dec
mov
sub
or
mov
and
jle
insl
sub
mov
cld
ret
loope
fldl
push
shlb
adc
rolb
jg
add
jp
std
imul
orb
or
testl
add
orl
daa
gs
or
insb
mov
loope
jnp
popf
test
daa
xor
dec
das
scas
pusha
push
xchg
mov
sbb
jle
or
push
fdivs
xchg
shll
add
mov
mov
inc
push
xchg
push
loope
icebp
jecxz
adc
int
f2xm1
or
cmpsb
push
pop
add
inc
mov
mov
lcall
test
loopne
cltd
in
jbe
or
or
dec
pop
ret
add
out
imul
sbb
dec
fisttps
or
xchg
mov
pop
adc
lret
pop
push
mov
sbb
push
mov
stos
cmp
pop
add
imull
daa
sbb
sbb
adc
fstpl
into
sub
adc
gs
repnz
sub
sub
mov
rolb
ret
nop
roll
add
out
mov
popf
imul
push
sbb
pop
test
and
repnz
mov
or
imul
xlat
lods
push
dec
orl
xchg
add
cld
js
out
cmp
or
inc
push
clc
cmpsb
dec
ljmp
mov
in
jne
xchg
adc
sub
lds
push
rcrb
inc
xchg
dec
outsl
xchg
push
jo
or
adc
insl
xor
dec
and
decl
jecxz
or
mov
into
fiadds
pop
negb
push
sarb
imulb
orb
adc
push
sub
push
pop
jbe
mov
lret
ret
call
or
mov
push
out
add
jp
and
imul
jnp
dec
scas
add
popf
push
nop
cltd
add
in
jnp
enter
mov
sbb
xadd
addr16
fstpl
pusha
inc
push
inc
xchg
jge
mov
mov
popf
add
xchg
lock
adc
call
popa
adc
adc
mov
inc
mov
leave
jnp
das
cli
insb
int
push
mov
push
dec
mov
cmpsl
or
push
adc
daa
out
enter
or
cmc
add
rolb
loopne
hlt
jno
daa
loope
loopne
sub
push
push
pop
flds
lds
loop
jl
sbb
fsubrl
adc
xor
pop
andl
mov
mov
add
cmp
loop
ljmp
loopne
scas
xchg
pop
mov
out
loopne
jecxz
cltd
aad
fsts
mov
mov
and
cs
push
push
add
or
lds
jmp
xor
cmpsl
lahf
push
stc
adc
pop
adc
inc
mov
aam
push
rcll
cmpsl
sub
adc
repz
cmp
push
out
jae
dec
pop
cmpsb
mov
cli
add
cmp
adc
push
sub
mov
mov
or
add
pop
lret
mov
fdivl
outsb
fnstcw
out
sbb
sbb
mov
mov
jo
shrl
mov
out
scas
xor
icebp
or
repnz
jg
mov
dec
add
push
jne
pop
add
push
mov
mov
mov
idiv
mov
ret
pop
push
add
mov
sbb
xchg
adc
xlat
mov
add
inc
repnz
inc
mov
fs
in
sarb
andb
les
mov
and
or
cld
subb
stos
pop
or
fldl
xchg
pop
xchg
fdivrs
and
jecxz
out
push
or
pushf
ljmp
xchg
xchg
dec
out
inc
mov
xor
sbb
daa
cld
test
mov
xchg
fldl
xchg
clc
out
pop
xchg
pop
movsb
add
or
inc
call
sub
lods
dec
and
jns
mov
and
mov
adc
add
xor
add
mov
pop
lahf
and
scas
in
aam
xchg
in
sbb
cmp
sbb
xchg
stos
test
cmp
or
stos
pop
ljmp
jg
shlb
adc
shll
adc
push
loopne
pop
add
imul
mov
loope
dec
mov
sbb
or
pusha
xlat
push
dec
mov
dec
call
movnti
cmp
adc
add
sbb
sarl
in
repnz
adc
add
fld
test
jecxz
stos
sbb
lea
out
add
lds
test
aas
mov
cld
in
idiv
sbb
jb
scas
test
or
xor
cmp
mov
push
adc
outsb
sub
movsl
jbe
cmpb
add
sarb
hlt
pop
xor
shl
or
and
jno
test
aam
or
dec
push
imul
cmp
scas
inc
insb
test
test
adc
sub
cmp
clc
pop
int
push
outsl
mov
js
lock
jo
jo
sbb
or
rolb
shlb
aas
and
push
movsl
dec
ss
inc
adc
mov
inc
orl
jne
xchg
pop
cwtl
or
mov
pop
js
dec
test
mov
in
mov
movsl
sub
cmp
inc
or
aam
jo
daa
mov
mov
jp
sub
idivb
aam
test
or
pusha
mov
jno
outsb
add
xchg
in
ljmp
and
gs
inc
mov
jle
adc
cld
jae
and
add
pop
pop
cmp
add
add
inc
push
jmp
fld1
sahf
xor
lahf
popa
jno
or
adc
add
sub
jg
xchg
ret
dec
mov
pusha
cs
jp
dec
cmp
dec
pop
daa
xchg
pop
loopne
data16
and
cmc
call
pop
adc
xor
mov
in
pxor
lods
jg
popa
pand
orl
xchg
rcll
add
jle
dec
cmpsb
ret
stc
add
pop
push
xchg
pusha
mov
sub
into
lcall
pop
shlb
pminsw
test
xchg
cs
and
inc
mov
int
sbbb
subl
lods
jne
stos
repnz
in
dec
dec
addl
jle
jecxz
rorb
cmpsb
imul
cmp
test
push
push
hlt
mov
or
gs
inc
cmp
pop
pop
cmp
decb
clc
cld
or
rol
gs
repz
dec
inc
int
cmp
add
ss
push
lock
pmaddwd
push
sbb
sub
add
nop
neg
sbb
add
pop
push
jl,pn
ret
decl
sbb
into
adc
rcll
incl
xor
jo
adc
jae
std
mov
test
in
repz
add
jnp
mov
int
sar
add
aam
push
xor
fs
out
popf
lock
inc
fmul
fisubrl
test
xchg
dec
loop
dec
scas
pop
or
adc
xchg
cs
insb
adc
insl
arpl
dec
add
xor
imul
repz
aaa
arpl
loope
data16
mov
pop
cmp
push
xlat
xorb
imul
jno
xor
shl
add
push
sbb
push
cmp
add
pop
xchg
xor
mov
dec
shll
lret
cwtl
sbb
mov
rclb
iret
inc
out
lret
dec
das
cmp
pop
into
enter
jne
add
js
call
cli
mov
pop
dec
jbe
mov
pop
dec
jmp
add
xchg
idivl
inc
lahf
mov
adc
xor
in
and
aam
xchg
mov
outsl
movsb
out
add
cltd
mov
pop
orb
loope
ret
pop
jl
adc
ficoml
jb
adc
dec
pop
jns
jmp
pop
dec
dec
or
cltd
int3
xchg
cmp
sbb
insl
push
lds
dec
rcrl
jle
xchg
stos
cmp
push
add
mov
je
dec
mov
jnp
jae
xchg
sub
popf
fimull
sti
sub
lea
popf
jg
lcall
sub
mov
clc
test
fldt
and
out
jno
add
lahf
test
mov
jg
xchg
and
iret
mov
repnz
mov
cs
imul
xor
lret
adc
hlt
push
sbb
dec
pop
out
mov
cli
addr16
cmp
mov
movsb
dec
pop
jecxz
or
rcrl
add
add
mov
mov
test
pop
enter
lock
xlat
add
loope
nop
xchg
push
insb
add
sbb
push
cs
insl
mov
stos
sub
ss
mov
insb
std
add
mov
or
fadd
js
call
sub
pop
or
or
sarb
dec
fwait
in
mov
dec
cmpb
xor
test
adc
or
mov
mov
add
add
sarl
push
fs
mov
cmc
test
cmpsl
repnz
jnp
mov
fisttps
test
push
orb
add
pop
jo
xchg
push
xchg
scas
cwtl
ret
cli
mov
daa
or
cmpsb
mov
cs
icebp
popf
loopne
stc
lcall
ret
dec
dec
aaa
stos
fisttpll
jns
stos
nop
dec
and
add
mov
fldcw
adc
fldcw
pop
push
inc
les
mov
add
adc
inc
iret
and
sub
fnstsw
push
inc
mov
or
cwtl
jl
or
incb
add
adc
xchg
imul
cmp
mov
cmp
push
mov
jae
mov
shl
push
icebp
cwtl
sti
or
dec
pusha
inc
scas
cmc
adc
or
sbb
cmp
pusha
pop
jnp
jns
adc
add
jmp
mov
cmp
pop
das
adc
cli
mov
data16
cltd
mov
sub
sarl
mov
push
out
test
lcall
je
adc
fmuls
test
call
pusha
xor
jle
adc
jmp
mov
lods
movsb
mov
inc
or
mov
ficoms
daa
add
push
mov
loope
icebp
ljmp
add
jbe
fmul
sub
mov
outsl
adc
inc
mov
out
adc
outsb
sbb
loopne
xor
addr16
movsl
scas
or
xor
or
dec
add
sar
mov
arpl
out
jg
out
fimull
ja
imul
into
cli
sbbl
adc
jnp
scas
movsb
pop
pop
mov
idivb
adc
arpl
dec
push
xor
cmc
jae
sbb
jnp
cmpsb
inc
add
pop
sbb
dec
and
jg
fdivs
add
sub
in
adc
and
pop
pop
pop
pop
fsubs
dec
jge
shl
push
cs
pop
push
mov
xor
xor
in
inc
push
popa
jle,pt
mov
xchg
lret
aaa
mov
sub
mov
mov
push
out
sar
sub
add
jge
sbb
adc
ds
mov
add
imul
sbb
and
mov
pop
pop
outsb
mov
mov
mov
add
pop
int3
mov
push
fstp
testl
or
call
rorb
add
or
mov
jo
nop
sub
lods
mov
out
or
out
push
fsts
jp
outsl
add
inc
push
and
dec
testb
flds
add
xor
xchg
xchg
adc
mov
stos
mov
adc
mulb
mov
push
lcall
dec
mov
mov
xchg
inc
fwait
push
and
ds
push
out
add
xor
shlb
imul
in
cmp
dec
mov
xor
sti
add
push
jne
and
mov
adc
in
and
in
and
test
add
mov
jg
xchg
push
mov
pop
int3
into
popf
pop
lret
mov
adc
pop
xorl
jmp
xor
adc
icebp
or
or
repz
or
inc
jge
mov
mov
lret
mov
xlat
arpl
lret
push
mov
outsb
mov
add
and
adc
mov
outsl
mov
pop
cli
pop
in
add
jns
jecxz
dec
out
adc
push
leave
lods
or
pusha
out
inc
pop
mov
add
or
and
fwait
push
fs
xchg
or
ljmp
leave
rcll
jg
popf
jo
inc
lock
popa
fidivs
mov
aaa
pop
pusha
mov
and
repz
das
repz
mov
push
hlt
cltd
or
pop
cli
paddb
cmp
sbbb
imul
dec
ljmp
pop
hlt
cmp
xor
pop
mov
inc
xchg
cmc
ret
jp
sbb
sub
fisubl
jbe
add
pop
sub
xor
es
cmp
inc
sbb
xchg
jne
cmp
mov
sbb
lea
in
sbb
mov
cmc
lcall
jns
mov
sti
or
aad
mov
pop
xor
pop
dec
test
add
std
push
or
mov
or
into
inc
cmpsb
cmc
adc
sbb
out
pop
out
pushf
dec
inc
shll
int
ds
ss
bound
shlb
xchg
fnsave
out
shrb
pop
aas
lock
add
imulb
into
call
in
arpl
push
ljmp
lcall
fwait
add
mov
sub
cmp
shrb
fiadds
in
pusha
add
fcoms
mov
scas
mov
pop
dec
sbb
and
xlat
pop
push
repz
clc
push
fs
cmpsb
mov
or
lahf
mov
test
sarb
pushf
fbstp
or
sub
cmpl
arpl
or
inc
and
sub
out
or
sub
lret
adc
and
mov
insl
jns
add
jno
call
cmp
stc
cmc
ret
sub
sub
out
leave
es
jo
cwtl
fs
add
mov
adcl
ja
nop
xchg
add
arpl
outsb
enter
pop
mov
sti
sbb
adc
and
xor
pop
leave
popa
mov
push
fdivrl
lea
in
cmp
pop
sub
outsb
loopne
xor
jge
fstps
and
leave
sbb
push
mov
inc
cmp
shrb
lock
sub
clc
push
sbb
xchg
inc
ja
enter
sub
xor
lahf
adc
push
ret
cld
out
incb
iret
jp
scas
cli
mov
dec
inc
popf
dec
inc
or
fsubs
push
jecxz
sub
int3
std
push
imul
mov
add
cmp
add
addl
push
sub
and
add
aaa
dec
sbb
hlt
int
add
inc
push
pop
dec
pop
in
or
push
lock
dec
inc
xchg
push
mov
daa
jge
ds
xor
xor
cs
push
into
sub
mov
imul
cld
push
enter
push
adc
aaa
cli
or
xchg
jp
mov
or
xlat
stos
in
aad
fwait
jle
inc
sbb
decb
mov
push
xlat
dec
add
mov
cld
test
mov
orl
das
xchg
pusha
push
test
leave
adc
pop
stc
and
fsubrs
inc
or
scas
inc
lock
popf
shl
das
repnz
xor
jge
cmp
pop
imul
pop
scas
or
mov
inc
jge
cwtl
add
dec
pusha
into
test
push
cld
aas
and
sub
mov
rolb
hlt
pop
pop
in
lods
mov
scas
xor
orb
inc
add
out
mov
or
lds
xor
cs
pop
psraw
js
push
mov
fsub
jnp
jnp
xchg
pop
std
or
xchg
cld
jae
repnz
mov
lea
adcb
popa
scas
push
and
cmp
mov
sub
ret
stos
pushf
lret
addl
gs
jp
faddp
jne
or
in
or
mov
and
dec
xchg
xor
dec
subb
orb
push
adc
stos
adcb
das
daa
loope
push
or
inc
push
jnp
dec
pop
loopne
jg
pop
inc
ja
int
mov
jg
jl
push
and
lds
add
jg
rcrb
data16
cmc
jae
xchg
call
jle
fildl
add
repnz
jo
mov
cli
pop
and
sub
out
jo
popa
sti
mov
jno
adc
sbb
scas
jo
add
sti
call
mov
out
mov
mov
fsubs
jmp
dec
ja
push
adc
or
cltd
test
add
mov
in
mov
adc
adc
cmp
add
sbb
test
jge
imul
xor
pusha
mov
sub
cmp
inc
dec
mov
pop
dec
dec
in
lret
lods
mov
nop
movsb
adc
xor
scas
xlat
nop
imul
aas
push
in
cltd
je
mov
or
or
clc
dec
xchg
or
push
xchg
push
lods
xlat
pop
lods
adc
test
cli
sub
sub
pushf
xor
lods
xchg
cltd
pop
das
xlat
dec
cmc
in
and
test
or
gs
sbb
mov
pusha
mov
fdivr
nop
add
lods
test
mov
cmp
cmp
sub
sbb
loopne
sub
or
outsl
xchg
or
scas
add
imul
data16
lahf
loopne
shl
int3
rorl
leave
pop
adc
scas
pusha
adc
mov
mov
mov
inc
and
mov
mov
mov
jbe
daa
in
xlat
nop
xor
fiadds
dec
clc
mov
call
pop
mov
clc
or
cmc
add
push
sub
xchg
lret
ja
cmp
dec
xchg
incl
test
mov
popf
push
pop
mov
adc
adc
inc
testb
imul
leave
adc
pop
cs
sar
xchg
ljmp
gs
push
adc
fldenv
xor
clc
mov
testl
mov
ja
sbb
sarb
in
add
sbb
mov
mov
cmp
pushf
dec
lods
mov
jae
movb
lea
push
int3
fidivrl
sbb
and
add
xchg
mov
add
enter
jp
bound
in
movsb
in
inc
xchg
push
fneni(8087
addr16
out
pop
pusha
out
mov
ja
cmpsb
pop
or
mov
ret
push
ljmp
icebp
xor
enter
push
mov
jbe
adc
sub
out
nop
push
mov
and
lea
jp
and
inc
orl
adc
arpl
mov
fldl
xor
mov
lods
mov
dec
adc
cmpsl
insb
add
add
ss
xchg
cltd
lods
ds
adc
loop
dec
mov
dec
jmp
int
push
shlb
bound
push
add
add
out
mov
scas
lock
pop
ljmp
push
jle
bound
pop
push
aaa
in
rolb
hlt
dec
stos
pop
xchg
div
insb
lods
sub
adc
lock
xor
dec
aam
ja
cmpb
jne
add
add
fmull
mov
ror
lcall
or
shlb
orl
push
scas
aam
clc
push
sbb
loopne
add
cmp
adc
cltd
jmp
dec
mov
ljmp
jp
push
pop
inc
stos
dec
test
push
adc
cmp
es
push
inc
stos
das
scas
adc
loop
jge
jg
dec
lret
add
cwtl
lock
pop
adcb
pop
sub
test
jne
pushf
addb
adc
mov
add
aas
push
mov
jbe
popa
enter
mov
and
ror
sbb
dec
pop
pushf
clc
hlt
or
mov
shlb
xor
cwtl
mov
out
int3
add
cmp
push
pop
jne
jno
daa
mov
jle
sbbl
sub
repz
add
popf
dec
loope
add
sarl
jnp
ja
push
ljmp
cmp
xlat
call
popf
sti
fs
js
mov
pop
ds
pop
bound
test
fimuls
add
adc
pop
xor
mov
stos
and
pop
push
xchg
cli
test
cmp
cld
popa
fisubrl
adc
lds
mov
dec
mov
imul
push
push
xchg
push
dec
sub
js
lea
subb
add
cmpb
add
fldenv
mov
add
xchg
testb
cli
leave
sub
and
popf
in
scas
minps
fwait
xor
and
jne
out
mov
dec
add
jge
pop
pusha
mov
xchg
mov
mov
cs
jne
out
push
cli
cmp
mov
pop
movsb
xor
pop
adc
jo
cmp
out
adcb
clc
shrl
stc
sub
les
sub
xchg
scas
filds
test
mov
popf
mov
out
and
decl
js
and
cmpsl
pop
mov
dec
xor
movsl
lock
mov
mov
rorb
push
jl
sub
mov
adc
and
stos
mov
sub
pop
lea
jbe
xsavec
ffree
or
pop
push
mov
sbb
xor
and
rolb
rorb
xchg
adc
gs
push
inc
xor
inc
add
or
sbb
das
shrl
out
dec
inc
mov
add
hlt
dec
ljmp
ja
aas
out
es
adc
mov
inc
inc
aam
cld
push
cmp
int3
scas
rcll
roll
outsb
mov
test
data16
ret
cmp
xor
sbb
repnz
lret
jg
adc
rclb
mov
or
push
mov
push
rcll
push
lods
cs
inc
pusha
xlat
push
sbb
fldl
sbbl
xchg
decb
int3
sub
mov
aam
repz
fdivr
jo
out
add
cmc
pop
ljmp
add
push
adc
rolb
or
call
xchg
mov
popa
adc
or
add
fisubl
or
ja
outsb
jge
repz
xor
pushf
jle
add
sahf
dec
push
xchg
inc
ret
mull
subb
pop
push
les
loope
mov
push
add
mov
shl
movsb
mov
gs
pop
pop
enter
movsl
loop
push
xchg
inc
decl
not
jnp
xchg
adc
ja
mov
pop
cld
xchg
sub
sub
fcoms
mov
in
adc
adc
lods
lahf
mov
add
sti
push
add
add
cmpsb
addr16
cmp
pop
not
add
adc
pop
out
or
jbe
int
sub
cltd
aam
jp
mov
int3
int
push
aam
push
popl
popf
icebp
subl
pop
and
add
shlb
jnp
mov
test
add
out
jp
imul
daa
or
mulb
stos
xchg
seta
pushf
or
and
sub
ret
and
add
and
icebp
mov
nop
xorb
fisubrs
add
lds
scas
mov
lods
and
dec
popa
mov
out
xor
push
inc
sub
or
mov
dec
cld
add
shr
pop
inc
fcoms
jl
mov
sub
mov
inc
adc
pusha
add
push
cli
adc
mov
ds
push
sub
push
pop
test
scas
fcompl
nop
jnp
loop
push
mov
xorl
jnp
adcl
jae
sbb
pop
add
ret
jns
adc
ds
or
fisubs
bound
mov
lock
jmp
fdivl
insb
mov
bound
shlb
enter
ret
mov
dec
insb
mov
sbb
adc
lret
cld
push
and
call
xlat
and
stos
mov
das
cmp
add
sbb
cmpsl
sub
sub
mov
mov
mov
fstpl
cld
mov
pop
stc
and
pop
iret
je
or
pop
mov
cmc
push
fwait
or
and
lret
fadds
pop
push
and
push
pavgb
ret
jne
cltd
fsubrp
xchg
sbb
add
lods
pop
add
sub
stos
movsb
in
dec
mov
cld
jmp
mov
addb
dec
jno
ljmp
mov
loope
and
sti
inc
or
push
incl
daa
into
xchg
pop
orb
mov
cwtl
jae
clc
dec
pop
cld
jo
adc
incb
lods
dec
mov
in
dec
pop
lock
jb
mov
mov
adc
lret
jno
mov
pop
mov
lret
sbb
add
cmp
xorl
inc
out
jp
xchg
pop
and
push
xchg
jno
faddl
push
mov
xor
push
fcomp
add
dec
pop
cwtl
push
push
ret
sub
sub
ret
loope
jae
loopne
jmp
dec
cmp
push
cmp
pop
call
xor
in
add
or
mov
xchg
lds
mov
pop
mov
mov
mov
jno
repz
inc
inc
or
jecxz
nop
pushf
or
aas
mov
inc
scas
mov
rcrl
call
pop
xchg
lcall
xchg
or
xchg
xchg
jo
xlat
sbb
and
mov
imulb
xchg
lea
add
daa
or
dec
cltd
push
inc
push
mulps
add
jbe
adc
adc
iret
mov
add
dec
push
stc
pop
pop
imul
aas
mov
mov
adc
mov
decb
pop
add
ret
mov
clc
add
or
pop
hlt
mov
jbe
xor
shl
fidivl
pop
test
pop
loope
shrl
ja
add
xor
ret
xchg
adc
push
jg
daa
add
mov
leave
cltd
cs
incl
adc
sbb
dec
sahf
sub
orb
jo
lea
mov
es
push
subl
push
fists
lret
xchg
mov
std
es
aad
lahf
rorb
enter
das
sbb
in
mov
jo
addr16
pop
sbb
xor
adc
fs
jg
out
movsl
dec
or
mov
addr16
and
sbb
sbb
js
test
mov
jle
lock
imul
insl
mov
or
scas
test
adc
mov
mov
add
popf
add
or
cld
jg
jg
mov
push
add
adc
pusha
push
ja
adc
cli
insl
jns
pop
and
dec
and
out
sbb
push
sbb
sub
cli
cs
and
mov
stc
mov
scas
loopne
je
dec
push
fwait
mov
mov
mov
pop
xor
sbb
add
jo
and
arpl
outsl
adcl
and
push
std
jp
int
das
aad
int
cwtl
lcall
mov
cmp
jne
out
out
sub
mov
call
or
cmc
xchg
mov
ret
jnp
in
push
add
mov
add
xor
jmp
add
roll
daa
scas
xchg
mov
inc
push
cmp
es
aas
lret
xchg
mov
jle
and
jo
lea
in
xchg
xchg
testl
scas
and
xor
imul
nop
xor
pop
add
xchg
push
mov
sbb
mov
negl
imul
push
mov
push
mov
aas
movsb
or
aas
imul
stos
sar
das
and
or
addr16
and
sarl
inc
dec
fmuls
cmp
das
inc
push
adc
mov
push
inc
sbb
test
dec
lock
mulb
scas
gs
add
xchg
jbe
arpl
dec
and
call
or
rcl
inc
pop
loopne
mov
jae
lret
push
jp
cs
push
and
popf
push
sbb
sub
mov
dec
mov
sub
pop
sbb
dec
and
inc
popa
cmp
mov
adc
mov
push
pop
popa
add
mov
xor
inc
stos
pop
rorl
jne
shlb
or
and
mull
out
daa
sbb
pop
mov
imul
ljmp
lahf
icebp
cmp
setl
sub
adc
mov
xlat
xor
pop
lods
lea
push
or
imul
mov
adc
fnstenv
out
jge
push
or
imul
enter
sub
mov
aas
ret
jg
les
mov
adcb
adc
fistpll
dec
cs
shll
or
add
vunpcklpd
fistpll
loopne
in
pop
or
addr16
aaa
ja
jbe
xor
out
mov
sahf
daa
mul
xlat
dec
xlat
dec
icebp
imul
xor
dec
pop
negb
addr16
fs
mov
sbb
repnz
xchg
jmp
cmp
pop
das
xor
and
fisttps
sbb
push
pop
add
mov
add
push
mov
dec
cmovo
fmuls
add
pop
xor
pop
mov
push
xlat
daa
dec
inc
adc
mov
dec
jmp
xchg
xchg
aaa
mov
mov
nop
cmpsl
test
in
dec
enter
jp
dec
add
fisttpl
clc
insb
dec
and
stc
jmp
adc
and
xor
mov
sub
sub
mov
imul
stos
in
das
dec
mov
inc
lods
jbe
fisttpl
adc
add
pushf
mov
add
pop
sbb
loope
xchg
sub
lahf
mov
icebp
inc
push
jg
add
jns
cli
shrb
dec
and
add
xchg
in
aad
mov
js
sti
push
sti
and
add
mov
cmpb
sbb
sub
jbe
mov
mov
add
mov
cmp
ret
mov
sub
sub
sbb
mov
cwtl
hlt
outsb
pop
xchg
and
pop
adc
cld
mov
jno
loop
and
push
fcom
add
ss
push
or
mov
adc
movsb
subb
dec
std
mov
in
pop
loop
pop
push
and
insb
inc
pop
mov
and
sbb
xchg
jns
mov
jns
push
cmp
lods
movsl
push
sub
scas
inc
push
cmp
leave
mov
xchg
inc
xor
out
pop
cli
imul
sub
mov
jnp
cmp
and
shrb
mov
aaa
mov
shlb
clc
xor
mov
in
xor
stc
dec
pop
cmpsl
mov
cmp
bound
cli
pop
mov
fisttps
les
mov
inc
add
or
dec
mov
jmp
popa
ficompl
loopne
and
adc
inc
bound
js
test
test
jecxz
cwtl
push
dec
aad
lock
data16
or
mov
push
sbb
stos
adc
inc
clc
cmp
push
pushf
cmp
add
call
xchg
stos
mov
inc
dec
mov
dec
repnz
fwait
add
add
daa
sub
test
lahf
or
jb
mov
sahf
jo
popf
pusha
ret
xchg
enter
add
movsl
addl
adc
sub
add
jne
test
pop
fs
jb
sub
and
adc
add
rcr
std
mov
sub
xor
int
das
mov
mov
jge
add
outsb
mov
mov
jbe
xlat
and
mov
or
fiadds
mov
cmp
adc
andps
outsb
inc
shr
sbb
pop
cld
out
out
mov
sbb
scas
xor
int3
ror
stc
pop
jg
sarl
add
stos
addb
or
arpl
mov
adc
pop
cmp
ja
cmp
inc
sarl
bound
out
ret
adc
jnp
cs
incl
mov
inc
jae
pop
push
mov
cmpsb
fdivs
pop
and
mov
mov
enter
cmp
xchg
loope
stos
das
insb
adc
lock
push
add
loopne
not
inc
or
add
add
pop
push
jnp
xchg
jnp
or
ret
stos
fxch
clc
push
pop
adc
imul
popa
jmp
rorl
stos
sub
or
xchg
or
psubsw
stos
call
mov
lahf
add
push
in
xor
dec
mov
or
add
dec
jo
adc
daa
outsl
fisubrl
sub
test
js
arpl
xor
sarl
jp
subl
mov
stos
and
or
repz
sti
lods
push
dec
mov
sqrtps
das
stos
lock
xor
bound
movsb
jne
mov
pop
mov
int3
mov
popa
mov
ds
rclb
jnp
jg
adc
pop
inc
jp
ds
outsb
add
xor
push
pop
push
jno
ficoms
xor
ja
pop
adcb
add
fs
pop
mov
push
xor
sbb
pop
imul
add
dec
adc
xchg
inc
mov
scas
dec
pop
pop
imul
test
add
sbb
in
mov
ret
enter
out
or
ret
inc
push
pop
in
in
incb
imulb
cmp
ret
negb
es
shlb
js
xchg
jge
mov
jl
sbb
out
je
dec
psubsb
in
int
movsb
sbb
xchg
xchg
pop
scas
or
clc
or
data16
scas
xchg
pop
dec
inc
repnz
xchg
loope
stc
imul
add
add
jmp
mov
in
cwtl
add
das
jo
repnz
andb
push
stos
push
sbb
adc
jns
add
cld
mov
mov
sti
inc
jo
test
call
icebp
push
adc
sarb
add
xchg
jecxz
mov
cmp
cmove
push
push
mov
sbb
push
adc
ljmp
push
sub
pop
loopne
fisubs
or
lret
mov
fisttps
stos
push
addr16
fiaddl
push
lcall
fstl
in
pop
test
mov
dec
ror
test
dec
sub
stos
int3
adc
xrelease
lods
inc
pop
add
xor
xchg
xor
stos
xorb
shll
fcoml
sti
jno
pop
pop
test
dec
lcall
fdivl
pop
stos
add
pop
stos
test
test
aad
inc
pop
xor
fidivs
cmpsl
xor
or
dec
adc
es
add
shrb
push
cli
xchg
push
xchg
add
ljmp
or
inc
xor
adc
aam
jle
mov
lods
jnp
daa
es
decb
add
and
adc
stos
fwait
je
inc
mov
addb
and
adc
dec
add
add
dec
mov
enter
sub
mov
add
jno
cmp
incl
add
lret
in
dec
sub
outsl
scas
lods
pop
adc
xchg
lds
inc
add
sub
shl
in
adc
data16
mov
out
into
add
push
test
cmp
or
inc
push
add
cli
jnp
pop
std
mov
inc
std
rcrb
xchg
cmp
mov
fwait
decb
jae
test
push
jbe
pop
outsl
in
cltd
rcr
imul
insl
add
shll
in
outsb
inc
movsl
dec
dec
cs
ljmp
mov
pop
mov
jne
inc
enter
or
lret
mov
push
mov
jge
or
inc
pusha
sub
add
pop
stc
mov
sub
pop
xchg
imul
and
cmp
adc
mov
inc
xchg
mov
fimull
dec
fcomp
testb
and
dec
stos
xchg
sub
incl
adc
mov
je
insb
pop
andl
add
in
aad
jmp
icebp
or
add
jl
push
popa
fdivl
add
lahf
jmp
cmc
dec
aas
sub
mov
ret
push
cmc
add
les
int3
sbb
add
ret
aaa
dec
cmp
cmp
push
sbb
loope
jle
push
jo
jne
mov
dec
mov
sbb
pushf
ljmp
xchg
shrb
adc
push
xchg
fstpt
adc
jb
lods
fildll
das
fsubl
stos
insb
sbb
or
push
lods
das
push
add
fwait
cmp
inc
mov
pusha
xor
sbb
fidivrl
inc
adc
or
pop
lock
lcall
inc
mov
imulb
push
push
xchg
mov
dec
pop
xor
cmpsb
pop
loope
in
dec
orl
or
stc
cs
mov
mov
sbb
addl
adc
in
mov
addb
lcall
jl
xor
outsl
lods
iret
xchg
imul
mov
sub
mov
stos
faddl
mov
fiadds
scas
sbb
mov
pop
out
loope
idivl
inc
jecxz
add
inc
sti
xchg
stos
lret
scas
sbb
cld
and
mov
mov
mov
repnz
mov
stos
or
add
in
js
and
and
insl
xor
fsts
in
test
jns
test
cmp
stc
cmpsl
add
pusha
lea
lahf
addb
fmulp
pusha
sti
mov
mov
into
sbb
add
push
in
push
push
mov
push
cmp
cli
aas
cmp
xor
xor
sbb
pop
push
mov
lcall
movsl
imul
adc
jnp
pop
add
sub
outsl
mov
pop
lods
movsl
subl
pop
mov
andb
pop
or
testb
fxch
and
sub
mov
mov
or
inc
cli
dec
leave
cmp
test
enter
jno
scas
gs
sahf
movsl
fldt
push
repnz
push
lock
mov
add
mov
mov
lea
or
push
add
lds
ret
addl
lods
and
sbb
dec
scas
pop
xchg
add
pop
pop
jb
push
movsb
les
popf
loopne
or
mov
fists
mov
fcomp
pusha
or
adc
push
add
lods
imul
pop
and
out
mov
pop
notb
das
addb
mov
and
dec
jp
test
aad
stos
sbb
and
sbb
out
adc
pop
mov
fisubrs
fmuls
add
iret
shlb
mov
add
jge
add
jg
sub
pop
sti
rorb
xchg
sbb
mov
xchg
or
std
std
sub
push
lock
lcall
push
pop
xchg
mov
mov
mov
movsb
lret
and
bound
jns
aad
cmp
inc
filds
stc
xchg
cmpsl
icebp
movsb
adc
push
enter
xchg
sbb
xorb
out
and
orb
adcb
movsl
mov
sub
aad
add
adc
lods
add
pop
nop
gs
xchg
stos
das
push
cmc
std
add
cmp
mov
or
push
jg
jo
enter
or
mov
or
loop
sub
push
mov
subb
enter
ds
push
pushf
test
xor
adc
adc
aam
or
mov
cld
shr
rol
push
in
adc
out
leave
ja
repz
adc
inc
outsb
popa
and
mov
orl
int
add
mov
jnp
pop
in
and
sarl
inc
pop
mov
pop
dec
push
pop
pop
push
push
push
iret
push
pop
pop
mov
mov
push
adc
lahf
dec
sti
add
movb
add
jmp
bound
dec
and
scas
inc
mov
dec
mov
dec
inc
les
mov
xchg
cmp
cmp
add
pop
pop
stos
jns
cmp
and
cltd
pop
mov
add
and
or
out
pop
pop
fdivrs
add
idiv
popf
pop
pop
and
leave
pop
test
mov
adc
lret
push
lods
lds
push
fistpl
add
xchg
adc
sbb
jnp
xchg
or
jl
or
movsb
push
popa
jns
adc
mov
daa
pop
jno
sbb
sub
scas
shll
add
ret
xchg
adc
and
test
inc
insb
aam
sarl
xor
adc
sbb
test
test
in
mov
add
popa
push
pop
mov
mov
fwait
add
notb
cs
shrb
movsl
add
hlt
mov
fbstp
mov
adc
and
fsubl
fs
mov
push
cmp
lahf
pop
movsl
gs
enter
xor
xchg
add
add
movsl
repz
jno
push
add
cmpsl
scas
inc
mov
adc
push
fbstp
clc
xchg
xor
jns
ja
and
dec
mov
sbb
pop
addb
add
out
push
dec
mov
jb
ret
fidivrs
push
loopne
out
call
and
in
jmp
pop
clc
mov
sub
xchg
add
and
leave
mov
or
or
push
daa
stc
notb
in
hlt
cwtl
add
mov
pusha
les
cmp
fcomps
fnsave
test
mov
inc
lds
adc
mov
sbb
or
xor
test
xor
or
inc
jmp
and
or
cmp
inc
adc
or
pop
cmp
pusha
push
or
jp
mov
and
adc
cmpsl
js
add
jecxz
mov
push
mov
or
mov
inc
mov
test
sarb
inc
inc
push
pushf
adc
dec
lock
jecxz
fnstcw
ljmp
xchg
adc
and
mov
cmc
or
and
mov
dec
mov
in
pushf
sbb
adc
test
and
js,pt
cmp
dec
dec
test
or
inc
or
jns
test
loope
popf
pushf
bound
orb
loop
inc
or
invd
push
jb
xchg
inc
js
cmp
cmp
cmp
int
mov
xor
sub
nop
mov
xchg
inc
popf
dec
adc
adc
ret
icebp
inc
inc
xor
cwtl
hlt
or
inc
inc
adc
test
or
mov
ljmp
xor
mov
cmpsl
add
jmp
push
test
sahf
add
add
or
adc
push
and
or
pop
pop
imull
xlat
fcoms
pop
push
ja
dec
push
push
adc
pop
or
jns
jbe
lcall
cmp
sub
sahf
popf
and
cmc
inc
cmpsl
repz
adc
stos
jns
imul
jb
xor
push
inc
mov
mov
scas
add
inc
add
mov
mov
push
xchg
push
mov
mov
sbb
mov
xor
and
mov
clc
and
xchg
mov
mov
test
insb
jg
cmp
adc
frstor
xlat
cwtl
cmc
mov
or
lods
popf
mov
pop
jae
and
leave
pop
jo
rorb
add
rolb
cmp
xchg
div
stos
rol
jnp
cmp
fidivs
nop
shlb
shrb
mov
fdivr
or
xchg
dec
inc
push
int3
push
mov
popa
sti
dec
outsl
xchg
push
imul
mov
add
shr
iret
je
inc
stc
and
mov
bound
adc
loopne
js
in
inc
jge
push
addl
xor
mov
daa
and
addl
loop
popf
jbe
inc
cmp
ljmp
movb
cmp
dec
sub
fisubrs
in
outsl
add
in
lret
inc
mov
mov
mov
jns
scas
lcall
push
arpl
dec
sbb
addr16
hlt
jge
push
lret
adc
pop
sbb
loopne
js
add
loope
adc
or
and
jns
add
pop
or
sbb
fldenv
xchg
push
cli
fimuls
pop
call
inc
movsl
adc
xchg
sub
std
dec
sub
xchg
jg
jns
pop
push
nop
ljmp
xchg
jl
ja
les
cld
stos
icebp
xchg
imul
pop
loopne
push
mov
gs
add
nop
sbb
scas
add
inc
mov
outsl
add
sub
in
nop
or
aas
out
and
leave
in
jmp
sbb
mov
aad
lahf
push
pop
lea
sub
lea
fcoms
xor
cltd
cmpsl
mov
pop
mov
mov
pusha
shll
subl
js
and
loope
out
adc
fsubrs
xor
bswap
mov
loopne
jbe
lcall
mov
ficomps
push
or
stos
adc
xor
out
cmpsb
adc
sbb
jo
sbb
sub
jnp
cmc
add
aad
push
loop
mov
adc
daa
les
clc
popa
mov
out
test
cmpsb
push
subb
fs
push
lock
push
out
lods
xlat
add
sub
push
xlat
pusha
mov
lahf
mov
and
scas
jb
nop
rcrb
in
setnp
xor
imul
cld
hlt
sbb
add
fcomps
mov
sub
mov
dec
scas
add
leave
sbb
xchg
iret
fimuls
jbe
mov
scas
int
lock
and
nop
imul
mov
popf
push
mov
loope
mov
cmp
xor
cld
divl
mov
rorl
adcb
das
ja
arpl
repz
adc
pop
jl
daa
pop
mov
das
lock
add
push
adc
das
sub
in
inc
or
xlat
test
ret
ss
scas
pop
adc
xor
jo
adc
cld
push
add
adc
icebp
call
cld
out
test
int3
aam
lahf
popa
in
mov
sbb
add
jb
add
out
jge
push
pop
xor
dec
lcall
and
dec
scas
xlat
cmp
imul
cmc
pop
jecxz
sbb
xor
pop
test
lods
jo
jne
hlt
test
or
data16
insb
xlat
or
jecxz
jge
sub
mov
dec
nop
testb
mov
mov
xor
stos
cmp
jp
aaa
pop
mov
ds
push
jg
lea
push
mov
shr
xor
lahf
ja
cmp
dec
scas
stos
les
push
adc
sbb
dec
or
xor
shlb
mov
daa
lret
push
imul
fwait
pop
lock
cmp
imul
mov
aad
mov
fs
int
aas
sti
inc
adc
imul
push
cmp
jne
cmpsl
stos
jle
ljmp
mov
push
pop
fs
dec
aam
mov
aam
cmp
add
lock
mov
sub
testb
es
lods
enter
add
pop
add
jo
mov
sub
and
push
xor
in
daa
push
pop
pop
gs
shlb
xchg
xor
or
jnp
lods
sahf
add
stc
pop
mov
in
lcall
or
lahf
notb
clc
push
mov
aas
push
push
ret
fists
xchg
lret
cwtl
testl
mov
push
add
mov
mov
sbb
mov
lods
xchg
and
mov
sbb
loopne
mov
add
es
adc
outsl
mov
test
add
sbb
sbb
push
loop
pop
add
pop
negb
aas
rcll
xor
and
xor
repz
pop
and
inc
pop
imul
jbe
rorb
adc
mov
fwait
inc
insb
and
jbe
loopne
clc
adc
lret
jl
and
in
or
or
mov
dec
imul
and
lahf
add
rcrl
pop
and
pop
inc
popa
inc
cmpb
jne
aam
mov
test
pop
cwtl
clc
push
daa
iretw
fmull
or
or
js
imul
dec
pop
stos
rcr
cltd
mov
jecxz
int
repnz
pop
pop
mov
loopne
jle
mov
stos
shrb
popa
xchg
or
xlat
push
and
and
adc
ficoms
sub
cli
loop
leave
mov
sub
xchg
hlt
jmp
sti
in
sbb
push
add
int3
leave
mov
std
out
pop
dec
jae
out
push
xor
cmp
mov
inc
push
in
scas
int3
in
sbb
cli
shlb
mov
adc
adc
xchg
mov
mov
sbb
push
pop
pop
push
adc
clc
push
mov
dec
daa
push
dec
rclb
jb
inc
imul
in
dec
xchg
cmp
out
aam
adc
jmp
dec
fildl
and
jo
pop
mov
mov
in
subl
add
iret
add
out
loope
add
push
bts
lock
icebp
push
lea
jbe
sub
push
push
and
add
xchg
fistps
sbb
fstl
mov
push
lcall
test
mov
pop
push
mov
jae
add
push
rcll
mov
mov
int3
ss
ja
inc
imul
fldenv
lods
adc
xor
and
adc
ljmp
cli
or
filds
sub
js
mov
and
daa
and
push
lods
call
inc
cltd
ljmp
adc
or
stos
test
stos
and
rolb
add
add
fimull
rclb
push
mov
inc
lods
imul
adc
adc
xor
loope
push
aam
mov
negb
fcoms
jge
add
xchg
rcll
push
stos
inc
pop
in
ljmp
int
jne
cltd
jne
in
cwtl
scas
xchg
out
mov
call
and
repnz
sub
add
cmpl
scas
dec
daa
jg
fdivrl
push
xor
and
pop
test
and
sub
adc
and
mov
push
orl
xchg
cmpsb
and
in
popf
test
or
push
pop
xlat
xchg
int
adc
mov
bswap
push
jb
test
add
scas
push
rorb
jns
mov
sub
mov
lods
mov
inc
sub
loopne
loope
push
test
push
js
imul
add
jne
outsl
lock
push
mov
xor
or
sbb
movsb
jb
roll
or
push
add
dec
sub
sub
adc
or
cmc
adc
add
pop
movsb
and
adc
mov
sahf
pop
and
mov
repz
push
ja
orl
push
roll
shlb
xor
dec
pop
dec
out
mov
sahf
aad
adc
stos
add
ja
inc
aad
fisubl
mov
inc
and
cmpsl
or
jbe
pop
inc
ret
loopne
psrad
ds
or
pop
inc
xchg
fcomps
and
clc
test
cmp
dec
mov
adc
lods
push
or
dec
out
fdivr
jbe
xchg
ds
jle
cltd
sub
data16
jmp
adc
cmp
fistps
repz
popa
lods
push
call
mov
lds
push
mov
or
jp
repnz
add
cmp
das
push
jbe
test
iret
mov
test
imul
dec
and
cmpsl
sbbl
sarb
andb
mov
mov
jo
subb
pop
jle
jg
cltd
add
dec
imull
pop
idiv
lods
addr16
mov
dec
cs
dec
cli
and
fsubr
cmp
call
push
jmp
and
xchg
js
pop
aad
fidivl
dec
push
stos
sub
xor
pop
std
add
cmp
ss
in
int
xor
or
lret
add
and
push
inc
dec
jp
ja,pn
lods
lods
xchg
scas
leave
test
fsub
sbb
inc
jg
adc
addl
adc
sbb
pop
nop
push
shlb
xchg
in
pop
sbb
scas
fsubrs
mov
jge
inc
hlt
sub
mov
pop
jns
cs
push
iret
adc
stos
lea
pop
mov
push
mov
notb
jne
mov
sub
sub
push
jmp
mov
shlb
es
xor
push
xchg
fisttpl
int
ret
daa
or
pop
jmp
push
cld
mov
dec
mov
nop
jp
aaa
cld
cld
daa
pop
imul
sar
leave
pop
xor
call
call
mov
cmp
sbb
insb
fs
test
mov
sbb
add
mov
xor
insl
add
ss
rolb
mov
ds
xor
add
jbe
cmp
cli
mov
cmp
movsl
ja
lock
and
mov
pop
adc
add
mov
ds
jne
imul
mov
mov
jp
cmp
pop
or
and
push
xchg
out
pop
inc
add
push
ja
pop
popa
iret
jl
mov
push
in
xchg
in
sub
xor
adc
cmpsb
cmp
adc
jecxz
xchg
out
mov
mov
sub
scas
push
sbb
aam
mov
jnp
imul
rorl
unpckhps
push
lods
and
cmp
add
cmp
add
jo
jmp
add
add
jb
xor
fists
pop
imul
cmp
push
cmp
cli
add
or
popf
pop
fs
add
jmp
sub
add
fs
adc
adc
add
inc
js
xor
jg
test
lods
add
xchg
xor
add
test
inc
sbb
call
or
mov
inc
or
inc
xchg
sbb
fadds
adc
test
inc
add
add
loop
dec
adc
push
push
call
ret
inc
mov
in
sbb
cmpsl
xchg
out
lods
adc
mov
push
sbb
ret
mov
inc
push
ret
adc
and
adc
sub
lret
push
mov
pop
jne
aas
dec
inc
pop
inc
sbb
add
cmp
and
mov
aad
cs
popa
adc
mov
and
mov
mov
add
xchg
cltd
add
jle
in
xchg
add
xchg
jnp
add
lea
jecxz
mov
add
daa
pop
pop
mov
and
dec
mov
pusha
push
add
repz
xor
ds
je
pop
and
scas
test
testl
or
ficomps
mov
or
adc
xchg
cltd
jg
in
addr16
mov
mov
ret
cwtl
mov
add
insl
fs
jae
add
shld
push
outsl
add
jl
nop
and
pusha
adc
jb
inc
dec
push
mov
js
adc
add
fistps
lea
sbb
jp
mov
leave
mov
cs
mov
sbb
pop
cmp
shrl
dec
sbb
ljmp
loopne
or
pop
and
cmpsl
push
push
cltd
jne
sub
test
in
inc
add
jmp
jno
jne
mov
add
cmp
stos
sbb
push
rcrl
and
out
movsb
icebp
clc
outsl
jo
pop
jge
stos
scas
mul
jle
arpl
aam
ja
adc
das
jmp
dec
mov
shrb
pop
xchg
push
jecxz
add
sub
filds
add
aaa
xchg
lret
and
add
fisttps
pop
inc
cltd
cmp
xor
jg
bound
push
add
xor
imul
pusha
push
dec
mov
add
pop
rcll
out
xchg
inc
add
dec
mov
push
jl
in
fnsave
sbb
mov
cmp
mov
mov
cmc
mov
leave
push
push
out
jg
in
data16
pop
mov
xor
and
add
movsl
aam
add
stos
jb
fistpl
and
es
in
outsl
mov
add
sbb
jecxz
xchg
jae
sbb
mov
pop
mov
cmp
dec
dec
mov
mov
cld
push
xchg
add
and
push
int3
repnz
pop
scas
jbe
shlb
enter
test
outsb
loop
xor
or
imul
and
sub
mov
lock
mov
mov
push
push
loope
in
pop
nop
or
scas
push
mov
xor
ds
test
addr16
push
arpl
rcr
inc
stos
add
leave
out
mov
pushf
cmp
push
or
dec
push
or
das
inc
stc
addb
in
std
mov
add
mov
lods
and
filds
add
mov
xlat
shrl
rorb
jle
or
dec
ret
mov
push
adc
cmp
push
xorl
inc
sub
sti
xor
inc
test
dec
jnp
imul
sub
or
add
mov
lock
aas
add
cmpb
addr16
loop
push
push
mov
pop
mov
cmpsb
incb
rol
popa
jl
std
or
mov
mov
fldenv
and
mov
dec
subb
sahf
xchg
cltd
add
mov
outsl
add
stos
fnstsw
test
mov
pop
adc
ss
mov
pusha
pop
dec
cmc
push
aaa
cmpb
jge
add
outsb
ljmp
push
pop
enter
push
mov
mov
nop
subb
ret
cmp
sbb
pop
push
push
add
push
lods
int3
mov
push
pusha
outsl
push
nop
insb
xor
iret
xor
jg
mov
pop
or
push
call
out
mov
mov
inc
setae
jne
xor
mov
ljmp
mov
sub
sub
cmp
rolb
xchg
in
sahf
inc
in
scas
insb
push
mov
leave
dec
xor
and
imul
sbb
or
nop
xor
stos
add
adc
cli
jp
add
mov
pop
mov
xchg
cmp
loop
pop
sbb
mov
ret
lods
adc
cmp
pusha
lahf
sbb
sub
enter
fstpt
sub
jecxz
std
mov
fcomip
fidivs
lods
fnstsw
lahf
sub
scas
popf
jmp
push
inc
sbb
lods
nop
add
fwait
lret
xor
inc
stos
mov
in
pop
push
lcall
push
adc
cmp
cmp
sbb
sub
sbb
stc
fdiv
clc
nop
add
mov
imul
cltd
adc
pop
ret
pop
shl
pop
sarb
mov
push
sbb
sbb
sub
xchg
cmpsl
mov
sbb
iret
add
movsl
fs
call
inc
xor
cmp
fistpll
popf
pop
aad
and
subb
andb
popf
dec
push
ja
inc
in
ljmp
sbb
sub
loop
loopne
push
xor
clc
xor
xchg
jmp
ret
cmc
xchg
test
pop
xor
push
call
je
adc
pop
dec
push
pop
add
mov
jne
and
movsl
pop
inc
pop
push
push
std
dec
enter
lahf
arpl
sbbb
lock
rorb
mov
fiadds
out
popf
out
sub
jmp
xchg
lret
rcll
mov
add
stos
jecxz
xor
xor
sbb
inc
popa
nop
and
clc
xchg
adc
jbe
cwtl
pop
arpl
mov
sbb
fsubrs
mov
xchg
test
sbb
les
sarl
jns
push
daa
xchg
mov
sbb
add
dec
add
adc
add
mov
mov
clc
les
ja
push
movsl
sbb
outsb
bound
insl
push
test
mov
inc
int
in
repnz
lret
cwtl
loop
movsl
enter
xchg
or
mov
push
dec
sti
push
adc
mov
dec
andl
mov
jle
xchg
fsub
stc
fiaddl
test
sbbb
popa
call
inc
sbb
loop
ja
mov
pop
test
aad
stc
inc
sbb
adc
iret
add
jb
and
test
mov
repz
xor
and
enter
inc
pop
jmp
sbb
pop
sub
adcb
adc
xor
or
loop
cmpb
orl
add
adc
mov
cmp
sbb
outsl
mov
adc
xchg
adc
iret
sahf
jns
inc
mov
sub
jne
add
in
divl
andb
jl
or
push
lahf
neg
inc
mov
jno
push
or
mov
push
insl
inc
arpl
daa
sbb
fsub
mov
push
stos
in
stc
aam
adc
ret
in
push
inc
repnz
mov
push
or
ja
and
adc
inc
data16
push
arpl
imul
dec
rolb
mov
adc
repnz
repz
imull
sti
xor
stc
xchg
rcll
add
icebp
cmp
jmp
movsb
xchg
sbb
jae
sahf
gs
cmpsb
and
cmp
jl
add
outsb
dec
mov
loope
add
mov
lods
rclb
dec
cmp
addb
aad
push
xor
sbb
test
call
mov
ds
hlt
push
sbb
mov
out
or
jns
gs
xor
xor
adc
cwtl
iret
imull
adc
pop
addr16
lea
xor
loopne
mov
sbb
cs
rorb
dec
cltd
rcrb
es
add
mov
push
repnz
push
jae
xor
ret
pop
mov
add
cmp
add
gs
clc
daa
inc
ja
pop
ljmp
hlt
cmp
addr16
out
xlat
push
sbb
adc
cwtl
dec
pop
xor
test
add
into
adc
mov
inc
int
add
xchg
shl
cmp
mov
loopne
sub
mov
push
fimuls
sbb
sub
mov
pop
mov
jns
push
lret
repnz
inc
cmp
rolb
or
stc
dec
addb
cmp
add
adc
add
and
adc
jp
and
pop
xor
addr16
inc
and
insl
mov
or
outsb
or
mov
jmp
xchg
add
or
fwait
add
fldenv
mov
enter
push
sbb
dec
push
or
inc
inc
xlat
js
push
mov
aas
jmp
and
dec
fnstenv
movsl
add
pop
push
mov
add
cltd
cmc
lret
push
adc
dec
jmp
dec
and
vpsubb
stos
adc
mov
or
xorb
add
movsl
add
push
add
aam
inc
roll
outsl
xor
add
lcall
cmp
outsb
inc
cwtl
loop
jg
rorb
and
mov
mov
pop
pop
pop
movsl
ljmp
rorb
mov
add
in
mov
int3
push
add
mov
gs
push
nop
daa
aam
xchg
rolb
loope
jl
inc
sbb
or
mov
add
test
mov
or
inc
into
add
ret
inc
movlps
rcll
scas
add
insl
mov
out
sub
fisttps
sahf
mov
jae
enter
cmpsb
cmp
xchg
cltd
in
out
mov
scas
jae
ja
add
mov
addr16
sub
js
add
sbb
pop
add
das
adc
cli
sub
js
add
int3
fwait
sub
pop
mov
aas
pop
and
add
data16
xor
cmp
stc
xchg
pop
scas
outsb
insl
add
mov
fwait
dec
mov
sbb
inc
scas
std
mov
movsl
jbe
gs
and
imul
add
pop
loop
mov
enter
in
leave
cmc
imul
add
rcl
scas
aas
push
mov
add
test
pop
sub
mov
stc
mov
mov
ds
sahf
pop
xor
lods
imul
rolb
cmp
cld
pushf
out
or
add
jle
sbb
add
xor
add
sub
sub
jo
rcl
cmp
mov
add
xchg
fs
js
fiadds
mov
in
cld
push
das
mov
add
mov
bound
and
dec
arpl
dec
cld
xor
ltr
pop
movsb
in
add
adc
cmpsb
sbb
jl
add
test
scas
das
mov
mov
addb
aaa
loop
loopne
add
orl
popa
jb
pop
add
add
cmp
rclb
adc
lret
adc
xor
add
push
inc
and
add
mov
add
pusha
das
lret
ss
inc
adc
or
cmp
and
pop
clc
sahf
or
add
xchg
mov
add
gs
imul
mov
mov
push
add
jae
cmp
pushf
add
cwtl
mov
adc
cmp
pop
sarb
and
add
push
shrb
loopne
pop
pop
lods
pop
sti
add
inc
pusha
ljmp
mov
dec
dec
mov
add
inc
daa
add
out
test
add
xchg
jmp
add
popa
inc
adc
inc
pop
push
inc
loope
jae
add
jp
xchg
shll
imul
add
add
loope
adc
add
inc
jecxz
mov
pop
mov
js
into
push
xor
movsb
mov
pop
sbb
test
sbb
test
or
bound
mov
je
mov
stc
and
out
aad
shrb
clc
icebp
add
xchg
iret
inc
add
outsl
popa
outsb
xchg
pop
scas
in
cli
jb
cs
push
xchg
lea
pop
cwtl
cld
add
aas
dec
in
jge
lahf
xchg
out
inc
les
nop
and
pop
add
outsl
add
scas
ret
and
pushf
push
orb
ja
adc
inc
jns
lds
or
popf
decl
jne
add
xchg
cwtl
jl
sbb
and
add
add
push
dec
popf
sarb
cltd
pmuludq
dec
push
popf
xchg
xchg
push
add
pusha
sbb
cmpl
ret
push
inc
adc
add
mov
test
mov
jmp
pop
mov
sbb
out
xlat
xor
add
jne
in
out
and
jl
ss
cmp
repnz
jg
add
nop
movl
fcmovnbe
push
lahf
add
cmp
or
fadds
jg
jp
lock
rclb
add
mov
jmp
add
aaa
fimull
lcall
stos
pop
sub
jge
push
cmp
cmp
push
jb
push
add
fmuls
rolb
hlt
dec
popa
dec
cmp
pop
xor
subb
lods
mov
jne
les
mov
or
inc
imul
dec
pop
add
or
xchg
add
dec
outsl
and
adc
shl
rcrb
pushf
orl
orl
inc
xchg
repz
xchg
rcrb
xchg
sahf
push
add
jp
adcb
addr16
or
icebp
mov
add
stos
pop
add
mov
scas
mov
add
jo
or
add
and
sbb
shrb
cmp
push
and
push
mov
mov
aad
xor
add
xlat
mov
or
fsubs
pop
add
cmp
enter
sub
rcl
mov
jae
fs
adc
push
clc
and
hlt
pop
inc
je
rcr
xchg
shlb
pop
insb
xchg
bound
aam
rorb
and
popa
jmp
in
cmp
scas
inc
jne
adc
outsl
arpl
lock
out
stos
enter
and
mov
jl
mov
dec
push
cmc
cmp
pop
inc
sub
xchg
sbb
aam
popf
mov
insl
cmpb
test
or
ja
mov
xor
fs
add
mov
xorl
out
stc
lahf
testl
add
in
sub
xor
add
loop
mov
add
dec
mov
ja
mov
test
jne
push
clc
cwtl
data16
add
pop
dec
lods
cmp
add
mov
or
pusha
movsl
inc
jo
adc
sub
lret
fnsave
test
nop
jge
add
and
inc
mov
outsb
mov
pop
movsb
sub
add
inc
lods
popa
push
push
int
out
push
sbb
jge
add
aas
add
jmp
fildll
std
add
fiaddl
xchg
inc
dec
cltd
or
popf
mov
xor
mov
sbb
cltd
test
and
popl
cwtl
cmp
dec
loopne
jae
add
sbb
ss
aas
jno
es
xchg
rclb
push
cmpsl
push
or
fcomi
mov
popf
shll
loopne
call
jno
push
sub
mov
jnp
insb
orl
addb
jo
cmc
shl
hlt
outsb
pop
xlat
int3
mov
pop
and
jp
jl
add
adc
lods
add
adc
cmp
je
sarl
add
jmp
mov
test
mov
adcb
add
xor
sub
stos
jmp
add
push
mov
cwtl
add
std
test
stos
sbb
clc
add
ret
mov
push
push
add
mov
sbb
add
jnp
lea
pop
add
and
and
push
cli
pop
clc
push
inc
rorb
icebp
add
mov
push
add
mul
mov
dec
out
loopne
cmp
fsubs
in
std
push
xchg
add
ds
pop
dec
push
insl
xchg
leave
inc
ret
jb
sbb
xlat
addb
lcall
mov
and
mov
add
cmp
test
sbb
xchg
lcall
out
add
mov
pop
mov
cmp
jmp
pop
decb
pop
mov
into
add
test
nop
in
xchg
add
imul
add
fisttpl
lahf
nop
fwait
add
push
xor
in
loop
fiadds
divl
inc
mov
rcr
mov
iret
pop
imul
add
jae
add
push
pop
jmp
and
jl
pop
adc
lds
subb
lds
cli
imul
inc
adc
movsb
adc
or
les
adc
pop
ret
cmpl
mov
test
js
dec
faddl
push
adc
clc
lods
in
xchg
sbb
sbb
push
pop
popf
in
dec
test
add
cmp
xchg
add
stc
aam
bound
testb
adc
sbb
js
hlt
push
das
push
je
js
add
and
inc
jnp
xor
rcrb
cld
sbb
pushf
xor
and
push
icebp
js
nop
mov
add
mov
jae
in
adc
sub
push
ret
dec
inc
adc
push
popf
ror
cli
stos
pop
push
stos
adcl
inc
inc
mov
jl
sbb
mov
loopne
iret
adc
push
add
scas
add
jge
or
roll
dec
aaa
mov
rolb
addb
in
out
adc
add
sbb
mov
add
pop
adc
pop
inc
icebp
xchg
or
jnp,pn
subb
inc
sbb
dec
ret
cmp
push
popa
push
bound
inc
scas
cmc
nop
adc
sub
shlb
cmpsb
sub
push
mov
and
add
lcall
loopne
add
and
cld
rclb
add
lock
add
lods
push
xor
add
sbb
imul
inc
xchg
xchg
jg
scas
dec
popa
mov
faddl
cs
in
int3
int
add
mov
pop
push
and
adc
push
idiv
pusha
dec
jle
push
xchg
fsubrl
notb
arpl
aam
popw
jae
cli
inc
pushl
mov
pop
rcll
nop
and
sub
icebp
in
out
xchg
mov
out
pop
xchg
add
pusha
lcall
add
mov
adc
cmpsl
shl
shrl
lret
icebp
push
icebp
sub
lock
jle
repnz
lds
pop
shll
loope
mov
dec
pop
mov
movsl
enter
add
cmpsl
adc
add
add
lret
add
sub
adc
push
data16
push
stos
add
mov
repnz
ffreep
add
cwtl
dec
jg
rorb
shrb
pop
dec
cmp
stc
andl
bsf
mov
dec
and
sbb
popa
outsl
popa
jo
lret
fdivs
adc
push
lock
or
call
cwtl
sbb
sub
daa
push
mov
and
xchg
and
pop
fidivrs
jmp
je
sbb
push
outsl
xchg
lods
adcl
lea
or
jno
popf
out
iret
xchg
sbbb
ret
inc
dec
cmp
inc
and
xor
jns
cmpsb
sahf
push
and
fwait
psubb
jnp
mov
fdivp
xor
rclb
dec
mov
rorb
int3
sub
mov
adc
add
xorb
push
mov
xor
mov
jp
fiadds
push
push
dec
and
dec
sub
or
sub
add
cli
or
xlat
sahf
lds
mov
jp
lahf
push
sbb
xchg
rol
fmuls
fbld
in
cltd
in
or
dec
aas
cwtl
sbb
jp
out
mov
xor
or
sub
fadd
cld
ja
push
push
mov
sbb
movsl
rcll
aam
add
push
stos
sbb
and
push
mov
in
inc
adc
inc
clc
fdivrl
addb
aad
lock
cmp
dec
inc
mov
outsl
xor
into
xlat
xchg
push
cmp
shrb
aaa
ret
test
sbb
cmp
mov
lret
andl
pop
dec
pop
dec
jmp
inc
scas
xchg
fs
das
cwtl
sub
les
daa
inc
xchg
mov
fsubrs
add
mov
addr16
and
dec
dec
cmp
lahf
call
adc
push
mov
fnstcw
cmp
or
xchg
sub
jge
add
jecxz
ljmp
icebp
push
add
leave
push
fidivs
mov
in
add
les
or
std
add
jle
cmp
loopne
or
adc
pop
and
in
cmp
cmp
mov
fdivl
nop
sbb
repnz
mov
sbb
decb
imul
adc
out
rdmsr
xchg
rorb
add
push
das
mov
fsubs
pop
or
negl
dec
mov
jne
add
dec
stos
shll
push
sbb
mov
movsb
push
inc
and
subb
xchg
ja
adc
les
dec
and
sub
mov
aaa
clc
xchg
les
add
inc
scas
aaa
in
add
ret
pop
fs
shll
repz
push
xor
cmp
in
xor
enter
mov
push
xchg
aaa
into
les
push
cli
mov
test
mov
stos
add
pushf
cmp
push
add
mov
mov
or
mov
loope
push
add
fwait
mov
or
mov
das
add
roll
and
or
je
mov
test
and
sub
sbb
sbb
sub
lods
dec
loopne
or
mov
aas
aaa
adcb
repz
mov
adc
mov
add
cmpb
testb
aaa
jbe
and
xbegin
sub
push
imul
cwtl
adc
in
sarb
jo
pusha
sbb
jecxz
mov
inc
sub
jp
add
pusha
jno
call
mov
inc
fldl
inc
clc
addr16
std
adc
in
repnz
pop
xchg
dec
push
adc
bound
in
pusha
pop
jbe
add
mov
enter
xchg
in
cwtl
mov
mov
scas
aas
mov
jnp
jo
inc
pop
lret
add
push
cli
insb
sti
cltd
and
push
inc
out
addb
jl
fistps
jl
push
pop
push
loope
int3
out
dec
pop
or
or
insb
or
mov
ret
mov
xchg
push
enter
xchg
mov
inc
loopne
sbb
rdpmc
xchg
aad
jo
lock
xor
es
ljmp
lods
addb
sbb
and
fwait
lcall
inc
push
nop
inc
cmp
jb
dec
mov
dec
pop
adc
jp
jbe
fcompl
add
lahf
loop,pn
sub
fwait
mov
cli
push
mov
mov
rclb
mov
pop
pop
dec
dec
sub
out
imul
lock
inc
fs
push
pop
mov
mov
push
mov
sub
stos
xor
hlt
testb
add
push
push
sub
in
add
add
ds
je
jbe
mov
push
adc
pusha
movsb
lret
inc
mov
shr
push
add
mov
jns
loopne
mov
aam
adcb
mov
mov
andb
add
test
mov
je
dec
pop
mov
clc
add
leave
dec
adc
out
add
mov
mov
push
stos
add
sub
nop
add
inc
test
in
ljmp
cmpb
xchg
add
fwait
sbb
mov
xchg
jbe
push
pop
sub
cli
rorb
add
xor
push
sbb
repnz
mov
aas
mov
cmc
es
ss
mov
mov
or
or
lret
mov
lock
sbb
xchg
xchg
sub
jns
mov
jb,pt
jmp
call
je
inc
dec
lds
in
in
cwtl
and
pop
dec
mov
or
ret
fistps
nop
pop
or
xchg
cwtl
add
push
dec
jo
cmpb
sub
push
je
sbb
mov
loope
pop
sbbl
jl
into
xchg
jecxz
jne
mov
decb
mov
rcll
inc
and
add
aam
aas
sub
orb
jp
or
int3
inc
xor
jle
sbb
push
add
jo
int3
sbb
and
repnz
push
adc
aad
sub
loopne
or
xor
mov
lock
jne
lock
out
inc
es
fdivrp
xor
das
add
add
mov
dec
js
sub
push
pop
inc
notb
or
sahf
pop
ret
dec
cmp
sub
jge
adc
push
xchg
paddusb
pop
mov
mov
ss
dec
mov
jno
aad
add
cmp
ficompl
sbb
inc
sbbb
lea
out
xlat
mov
lahf
lret
xchg
cmp
hlt
dec
incb
mov
or
xor
xchg
dec
add
dec
cmp
sbb
mov
mov
fists
data16
pop
mov
addr16
xchg
arpl
and
inc
inc
add
in
les
jb
pop
jo
add
aas
xor
inc
add
aad
out
sub
dec
in
mov
mov
jne
das
pop
pop
xor
cmp
push
sbb
mov
adc
out
iret
sbb
add
inc
lret
pop
les
pop
scas
sbb
xor
push
ljmp
jae
aas
pop
out
dec
dec
ss
enter
data16
mov
sbb
cmc
jb
jns
add
xor
shrb
add
fcomps
mov
pop
push
cmp
cmpb
imul
push
adc
cld
sub
sbb
das
pop
jecxz
je
frstor
add
add
ret
mov
add
pusha
inc
push
jle
jo
add
int
mov
lret
add
test
push
popa
ja
aad
xor
fsubs
pop
or
cmp
int
roll
mov
ficomps
ss
sub
es
and
gs
sbb
lcall
add
pop
or
aaa
sbb
dec
test
orb
fisubrl
sub
jae
adc
icebp
js
jno
add
mov
cli
xchg
les
sbb
sbb
popf
fmul
in
popl
pop
push
mov
sub
cmp
push
push
mov
je
sti
cmp
or
xchg
lcall
jbe,pn
or
add
ror
jns
push
ret
imul
sbb
jl
jnp
add
test
inc
adc
pusha
sbb
add
lds
movl
shrb
jne
js
adc
add
xor
xchg
mov
stos
cwtl
movsl
pop
jg
cmc
outsl
add
shl
mov
add
or
mov
lret
jp
add
cld
lock
mov
mov
add
or
push
adc
loope
add
xorb
clc
loopne
add
cmp
subb
movsl
sub
mov
cmp
jns
add
repz
sub
cmp
lea
add
int3
pop
push
insb
add
push
aas
popl
lock
ret
lods
les
nop
xor
add
mov
dec
mov
repnz
dec
jge
insb
inc
test
les
jbe
push
pop
aaa
pop
and
pop
push
inc
sarl
add
cmc
dec
or
inc
sub
add
jae
sbb
add
fstl
push
out
or
inc
into
pop
sub
mov
or
sub
push
stc
mov
pop
imul
inc
movsl
cld
nop
cwtl
movsb
fcomip
adc
cmovne
test
mov
popa
rcl
push
pop
ret
int
mov
shrb
imul
sti
mov
cld
neg
add
sub
inc
scas
dec
or
fildl
ret
or
push
xchg
pop
rcrl
enter
pop
jg
lds
sbb
jbe
mov
add
lea
jge
pop
in
jl
pop
out
int
pusha
loopne
lods
add
push
xchg
mov
xlat
icebp
faddl
or
lret
xchg
pop
shlb
stos
insb
adc
incb
ds
adc
xchg
scas
repnz
ljmp
lds
clc
push
xchg
mov
leave
xchg
jno
mov
flds
dec
adc
cmp
add
xchg
mov
add
mov
addr16
icebp
orb
out
add
out
push
lods
add
aas
popa
or
out
jge
loop
daa
and
inc
scas
push
jns
and
adc
rcll
jno
add
sbb
and
cld
cmp
es
jg
add
mov
pop
push
xchg
add
or
jecxz
add
push
fwait
lss
xchg
mov
and
push
es
sub
fnstenv
sbb
add
sub
jl
add
add
pop
sub
push
push
or
xchg
jne
xchg
int3
push
pusha
pop
dec
std
je
out
pmulhw
mov
jp
push
addr16
in
sub
xchg
or
add
mov
cmp
pop
add
sub
cmp
xchg
inc
add
out
fdivs
lahf
out
int3
cs
loop
mov
push
adc
pop
add
stos
and
mov
add
lret
lea
leave
jg
mov
mov
add
jae
mov
sbb
jnp
push
or
jno
fadd
jge
xchg
pop
pop
and
sbbl
mov
lcall
cmpsb
popa
cmovo
cmpsl
and
shlb
je
imul
adc
xorb
sbb
pusha
in
xor
js
mov
sub
mov
out
dec
or
xor
cmp
mov
in
lock
add
xchg
dec
inc
cmp
sbb
loop
adc
ret
pop
lea
in
mov
std
mov
in
add
mov
shlb
repz
jae
add
xchg
orl
fwait
test
cmc
xchg
and
mov
popa
sbb
cmp
cld
add
std
push
or
lods
ret
in
or
dec
loope
xchg
add
cli
in
sbb
jge
add
inc
and
int3
xor
mov
inc
jo
cwtl
arpl
fadds
mov
sub
mov
pushf
cmp
add
dec
icebp
daa
fdiv
scas
stos
jo
pop
pop
push
add
lds
lods
in
dec
mov
loopne
ljmp
pop
outsl
ja
rolb
xchg
cs
lcall
xor
mov
cmp
scas
incl
repnz
pop
xchg
xlat
jno
push
cmp
int
and
jg
pop
push
adc
mov
mov
add
dec
add
fwait
cwtl
repz
sub
add
popf
mov
jb
in
pop
scas
mov
push
subb
mov
or
mull
push
ret
push
mov
push
cli
pop
cwtl
add
int3
or
add
dec
repnz
or
lcall
jo
arpl
and
cmp
cmp
inc
orb
dec
test
add
les
lret
add
pusha
add
add
frstor
or
dec
je
std
jmp
adc
rorb
aam
pushl
jo
test
shll
fildl
mov
stos
rclb
jno
lcall
add
leave
bound
data16
jnp
aad
jmp
push
xchg
xlat
mov
sub
pop
sbb
adc
incl
add
jp
fimull
lret
xor
cld
xchg
add
push
push
mov
add
fsubl
add
adc
fiadds
stos
add
xor
jne
add
repz
pop
sbb
cmpsl
pop
mov
insl
push
mov
loop
push
mov
jne
jmp
dec
aas
adc
fmull
fnsave
fistps
pop
inc
imul
mov
add
stc
xchg
push
aad
cmpsb
dec
add
xchg
mov
aas
add
push
pop
xchg
arpl
inc
dec
xchg
jmp
sbb
repz
mov
mov
je
sbb
add
rorl
fmulp
push
fisttpl
add
gs
ljmp
ficompl
test
out
call
add
cwtl
lods
dec
mov
repnz
mov
xor
mov
add
int3
leave
out
sbb
jns
rclb
add
imul
add
inc
mov
push
push
mov
xchg
adc
insb
hlt
sbb
pop
add
lahf
jmp
push
add
push
je
enter
pop
add
mov
pop
dec
lock
mov
lds
test
lahf
mov
dec
pop
or
ss
adc
push
or
and
ja
xchg
add
mov
std
add
ror
mov
add
pusha
mov
push
leave
inc
xchg
adc
lret
mov
add
push
xchg
mulb
cmc
test
in
sbb
loopne
lret
sbb
insb
out
data16
sbb
adc
int3
repnz
add
loopne
cmc
add
and
out
pop
dec
pop
test
push
test
jnp
mov
or
adc
lods
fldenv
leave
add
lret
jae
cmp
stc
bt
sbb
mov
int
bound
sbb
lret
jge
repnz
add
xlat
aad
popa
enter
fistpll
dec
add
je
mov
add
inc
xor
nop
shrl
fs
xor
enter
out
sub
add
dec
xor
fs
lds
adc
adc
sbb
jo
xchg
fwait
mov
in
inc
fistpl
imul
mov
mov
icebp
in
sub
sub
std
pop
pop
adc
pop
cmpb
idiv
adc
insb
sub
scas
push
test
aam
add
add
sub
mov
inc
inc
mov
pop
add
jl
add
clc
rclb
pop
push
popf
pop
jmp
xchg
xor
add
inc
pop
inc
fldt
add
es
stc
add
xchg
push
mov
orl
cmpsl
movsl
jnp
pop
adc
rclb
mov
aad
mov
loopne
xchg
push
repnz
negl
mov
add
mov
cmp
in
mov
andb
sbb
add
cmc
les
pop
mov
rorb
addr16
loop
and
add
push
inc
test
sub
add
sahf
cmp
pop
cmp
cmp
dec
scas
andb
pop
lock
adc
sbb
jo
add
lods
push
dec
int
loope
inc
cmpsl
mulsd
adc
add
outsl
in
sti
add
addb
stos
jns
test
xor
das
outsb
in
pop
push
fisttpl
jp
adc
mov
movb
arpl
rcrl
jbe
inc
les
fdivr
dec
sub
cmp
mov
pop
mov
push
sub
and
fsts
dec
push
and
gs
mov
decl
mov
idiv
mov
and
movsb
rcll
or
daa
cmp
loopne
fadd
xchg
or
enter
fwait
testb
fstl
incl
adc
sbb
xchg
add
mov
cmc
xor
test
sub
inc
sti
dec
push
stos
push
out
mov
loope
or
cmp
push
bnd
and
mov
pop
mov
sbb
push
and
ficomps
jne
push
add
add
and
imul
pop
test
call
addr16
gs
pop
je
xchg
sarb
enter
jns
sbb
incb
cli
les
dec
or
loop
shlb
lods
cld
es
add
dec
add
arpl
pop
sbb
push
and
lea
mov
loopne
pop
jge
adc
push
jp
pop
xchg
sub
or
sbb
rorb
fidivrs
add
loop
rcr
jg
cmp
imul
adc
dec
jl
loop
mov
int3
mov
test
xchg
xchg
jmp
insl
fadds
lods
pop
pop
adc
cli
xchg
aam
sbb
outsl
out
scas
stos
xchg
add
lea
fsubs
mov
add
add
cmc
mov
scas
cmpl
mov
or
testb
add
xorb
aaa
lods
dec
xlat
test
mov
roll
sub
push
mov
in
negb
sub
loopne
jno
mov
pushf
xor
add
es
lea
cltd
fldl
and
in
int
cmp
or
inc
test
sub
jo
xor
push
add
shlb
inc
mov
mov
xchg
ret
cmc
add
adc
fisubs
stos
jp
lcall
lahf
add
lea
or
add
jnp
and
push
pusha
jo
mov
mov
aam
enter
adcl
lds
mov
add
fdivl
cmpsl
mov
or
pop
stos
cli
nop
add
in
inc
inc
pop
cltd
enter
iret
dec
dec
mov
adc
addb
xorb
mov
dec
mov
outsl
push
jno
add
scas
mov
push
std
inc
test
fptan
sbb
into
add
add
push
cmc
sahf
and
add
mov
daa
add
mov
fxch
add
cwtl
insl
loopne
fmuls
aas
push
pusha
add
push
dec
dec
setl
mov
loopne
es
add
xchg
call
lahf
jns
pop
sbb
pushf
xchg
pushf
add
or
xchg
pop
or
cmp
cmp
adc
and
jmp
loopne
pop
aas
mov
fwait
push
cli
iret
pop
int
pop
xlat
xchg
arpl
inc
and
cmp
inc
bound
inc
add
jl
or
roll
aaa
dec
push
add
call
adc
cmp
aad
pop
add
mov
dec
jge
leave
jns
ja
mov
add
out
jge
add
das
nop
pop
mov
dec
in
out
mov
aaa
hlt
sahf
push
dec
sub
lret
ds
pop
outsl
xor
lods
jae
loopne
ret
sbb
fmull
stos
mov
sub
add
inc
repnz
mov
js
adc
stos
adcb
movsl
cmp
mov
aad
sar
xchg
loop
inc
pop
adc
inc
popf
adc
cmp
add
pop
rcr
sbb
lahf
je
sbb
inc
or
dec
push
rcrb
ljmp
idivb
add
sub
dec
and
mov
or
push
add
shl
dec
push
into
out
add
cwtl
imul
add
adc
mov
xor
inc
sahf
inc
adc
xor
or
pop
outsl
inc
push
enter
xchg
xchg
test
or
lock
rorb
add
inc
test
mov
xor
inc
out
jbe
cmp
aam
cmp
adc
inc
or
mov
mov
sbbb
jp
decb
sar
sti
add
adc
stc
push
pop
in
cli
mov
dec
sub
nop
add
push
and
fisubl
or
push
jae
lahf
sub
add
sub
test
add
mov
imul
out
mov
pop
enter
adc
add
lea
dec
rcl
or
cmp
adc
xchg
add
imul
fists
jno
in
xlat
mov
or
lock
in
fadds
aas
aas
fisttpll
cmp
dec
or
cmp
add
xor
lds
into
inc
xchg
mov
xor
movsl
and
outsl
inc
mov
out
add
stos
cmpsl
push
add
pop
push
jns
inc
pop
add
inc
mov
mov
push
add
xor
add
sbb
mov
in
jo
mov
xchg
lods
or
add
cmc
adc
sub
adc
add
add
loope
aam
in
jp
dec
cmpb
xchg
jp
in
rolb
jg
mov
xor
pop
cwtl
adc
loope
rcrb
inc
jns
add
cmp
gs
push
pmullw
mov
add
jb
flds
sti
push
push
push
leave
jg
ljmp
xor
inc
push
mov
xor
jo
cmp
fs
dec
and
ljmp
andb
loope
ud0
sub
or
add
push
push
sbb
lock
push
add
add
add
filds
xorb
je
push
test
rorb
jecxz
add
inc
and
cmp
sbbb
xor
fisubrs
addl
sbb
rcrb
push
jno
xor
pop
lock
xor
cmpb
scas
or
ljmp
popf
sub
jne
js
cld
add
adc
lret
leave
or
jmp
nop
and
jne
js
fldl
in
jge
pop
pushf
je
cmp
jg
test
int3
pusha
pop
sbb
enter
mov
dec
add
cld
mov
mov
fisubrs
int
push
mov
je
mov
sbb
pop
pusha
adc
pop
dec
add
or
add
push
into
lret
bound
add
lods
in
dec
mov
clc
ret
xchg
mov
sbb
mov
call
xorb
sbb
push
inc
int
js
adc
nop
test
mov
in
adc
cmp
jbe
mov
mov
lock
std
dec
jb
ds
iret
cli
shrb
mov
ja
cmp
jo
popa
aad
lea
stos
add
xor
movsb
sub
add
ret
or
aas
mov
aas
fnstcw
inc
test
or
roll
add
divl
scas
add
inc
outsb
orl
test
add
inc
movsl
and
push
lahf
jp
push
pop
fwait
gs
and
orb
pop
or
loopne
add
sub
mov
out
add
ret
std
xchg
sub
add
call
popf
mov
dec
out
sahf
lds
pushf
and
in
out
xor
imul
add
jnp
push
mov
pop
fwait
inc
js
sbb
mov
mov
fildl
orb
repnz
pop
loopne
jl
adc
cwtl
sbb
jmp
and
movsb
push
push
pushf
nop
push
mov
and
stos
lcall
add
sub
mov
jge
add
or
mov
movl
std
push
and
add
stc
jae
cmc
xor
xor
jo
cmp
je
movsl
jnp
mov
pop
js
add
loopne
ss
cmp
int3
add
andl
cld
push
push
shll
push
gs
mov
ficoms
add
imul
add
jae
dec
test
jbe
add
enter
out
mov
cli
imul
push
lcall
or
cli
inc
push
dec
mov
psubusw
cmp
add
bound
lock
or
cli
sbb
insb
movl
cmp
mov
popa
lret
sub
ljmp
sbb
unpckhps
pop
or
push
pop
cmp
das
mov
ljmp
mov
cmpsl
mov
lds
aad
repz
xchg
add
arpl
rcl
nop
mov
dec
insb
jecxz
xor
mov
jno
inc
fucomip
add
pop
mov
dec
in
clc
insb
aas
and
adcb
sub
cmp
mov
sbbb
xor
xchg
and
xchg
mov
icebp
push
sbb
add
xor
movsb
jg
imul
loopne
add
xchg
subl
gs
add
dec
and
and
lahf
add
insb
call
arpl
cmpsl
punpcklwd
or
cltd
add
fdivrl
dec
fistpll
fisubrs
add
mov
sbb
cmpl
loope
test
add
lahf
mov
pop
stos
jl
fmull
jp
js
fmul
loope
add
mov
inc
sarb
adc
sbb
test
movsl
iret
pusha
adc
mov
add
and
inc
mov
scas
movsl
in
fistps
nop/reserved
xchg
aam
enter
xchg
push
bnd
add
sbb
aam
pop
add
insl
bound
dec
ret
xchg
loopne
aaa
mov
out
fidivrl
cmpl
sub
test
iret
imul
push
in
bound
test
lahf
lcall
pop
test
js
xor
inc
or
add
insb
in
pusha
add
rolb
xor
push
jl
jmp
xor
jmp
pop
push
xor
loopne
push
out
mov
loopne
jg
add
enter
jne
and
mov
inc
bound
add
inc
fadds
cwtl
addl
sbb
pop
push
cmp
inc
mov
xor
push
iret
adc
cmp
add
sub
xorb
dec
pop
inc
jmp
push
fldcw
dec
inc
dec
add
mov
mov
mov
ss
sbb
add
sarl
stos
and
aaa
add
loopne
std
cmp
sti
xorb
sbb
adc
fdivl
sub
pop
aaa
jnp
imul
xchg
and
xchg
sub
cs
jl
mov
cmp
pop
add
addl
mov
cld
hlt
xchg
pop
out
fsubrl
movsb
pop
adc
adc
mov
jns
xchg
mov
js
and
enter
stc
and
out
push
push
cvtps2pi
pusha
mov
push
mov
jno
rol
pop
popa
clc
or
push
ret
shl
xchg
testl
push
jle
leave
rcrb
push
repnz
inc
test
cmp
pushw
push
out
ret
and
inc
adc
mov
imul
orb
popf
jnp
repnz
push
stos
push
jle
sarb
jp
nop
aam
imul
aas
sahf
xchg
cwtl
mov
aad
das
fs
pop
cs
out
insb
sub
xor
cld
inc
mov
push
pop
iret
mov
jno
sbb
test
popa
dec
movsl
cmp
xchg
add
cs
sti
orl
xchg
sub
enter
ficoms
lds
dec
mov
lahf
mov
std
xlat
mov
test
add
adc
imul
adc
or
sarl
mov
rorl
xor
xchg
xorl
mov
sub
jbe
mov
rorl
es
add
pop
mov
add
and
dec
inc
sar
loope
add
push
enter
mov
dec
cmc
fistl
rcrl
mov
iret
push
xchg
and
mov
add
in
ret
mov
add
in
and
sbb
push
cmpb
push
xor
push
add
sbb
cmovg
sbb
inc
fsubp
sub
leave
push
add
jns
inc
pop
sbb
lods
aas
ja
inc
orb
sub
je
ret
fdivr
pusha
sub
bound
js
or
cmp
add
shlb
xor
xchg
jbe
pusha
and
add
int
icebp
insb
pushf
ffreep
push
popf
xchg
fimuls
stc
dec
andb
sbb
push
add
popa
lods
adc
sahf
les
push
sbb
cmp
popa
adc
inc
out
mov
dec
icebp
push
aaa
scas
cltd
add
cmp
pminsw
imul
shlb
orb
enter
ja
cmp
outsb
fistpl
add
or
cmc
add
int3
roll
inc
lds
xchg
nop
mov
loop
and
pop
mov
add
lahf
jno
add
pop
inc
xchg
nop
add
dec
mov
push
movsl
fs
icebp
add
mov
jb
push
xchg
imul
jmp
dec
xor
and
pop
arpl
add
call
and
xor
cmp
incl
add
push
mov
je
and
add
mov
jle
out
push
pop
mov
std
jmp
lods
cmp
aaa
adc
fcompl
push
imul
cli
or
repnz
aaa
push
add
cs
dec
cmc
add
mull
jg
adcl
shlb
pop
ret
outsl
out
in
jg
imul
push
cmp
rolb
push
xchg
scas
push
sti
sbb
and
js
lods
loop
test
call
pop
add
xor
or
fwait
pop
mov
jns
jp
cmp
mov
push
xor
cmp
add
xchg
gs
and
add
cmp
je
ret
inc
fidivl
add
scas
test
add
pop
outsb
mov
cmc
enter
iret
and
jnp
push
add
sarb
mov
adc
add
xor
lock
test
add
out
sbb
xor
faddl
adc
and
outsl
in
jo
stc
imul
fs
jl
add
sbb
popf
ret
push
bnd
add
sub
add
dec
aam
subb
sub
inc
add
lods
call
pop
addr16
test
jno
adc
daa
das
add
mov
push
lods
push
mov
fbstp
divl
cmpsb
sub
testb
mov
testl
mov
in
cmpsb
jecxz
sbbl
aaa
mov
in
imul
jnp
cmpb
iret
dec
pusha
add
aad
sbb
add
imul
inc
fsubrp
imul
sub
fbld
cmp
inc
dec
push
add
or
sbb
cmp
add
sub
sbb
cmc
fistpll
out
inc
ficomps
les
fsubl
aas
dec
mov
xchg
push
rolb
pop
xor
sub
int3
pop
sub
imul
xlat
sbb
inc
movsb
sbb
into
insl
imul
mov
outsb
ds
cwtl
push
add
add
jmp
stos
cwtl
popa
xorb
cmp
ds
ljmp
nop
adc
jo
jae
outsl
pop
add
xchg
adc
dec
cmc
or
decl
imul
data16
mov
inc
leave
dec
in
aam
int
push
add
flds
aad
out
add
cld
pushf
add
dec
add
adc
rcrb
sub
add
inc
addr16
fs
jbe
pop
test
push
cld
adc
jne
and
adc
and
stos
add
push
dec
mov
sarl
outsl
mov
dec
mov
jns
stos
lahf
pop
fadds
mov
cmp
dec
out
mov
xchg
ljmp
out
jmp
and
std
add
test
push
xor
enter
fmuls
mov
push
mov
add
cmp
pop
add
sub
stos
mov
dec
jl
pop
mov
xor
addr16
ffree
call
loope
stc
iret
pop
sahf
xchg
and
sbb
jns
or
fisubl
pop
add
stos
adc
addl
push
lldt
xor
add
icebp
inc
addr16
lret
xorb
rorl
mov
push
jecxz
std
mov
or
jp
cmp
xor
aam
xchg
das
popa
jmp
adc
push
pop
add
or
stc
sti
xchg
add
in
cmp
inc
cli
movsb
mov
loop
cmp
sub
out
or
inc
lahf
das
sub
hlt
jle
xchg
dec
dec
sub
in
pushf
cmpsb
push
icebp
lcall
rorb
es
mov
jne
and
add
sbb
xchg
out
sbbb
xor
dec
push
xchg
or
add
add
add
add
test
fsubs
out
test
and
or
or
push
add
hlt
add
mov
cmpl
mov
cltd
add
push
out
add
std
imul
or
scas
xchg
gs
loopne
divb
loopne
add
jbe
push
cli
or
fucomi
lahf
jl
pop
hlt
mov
push
into
add
out
xchg
fdivrs
icebp
add
fwait
xchg
cmpsb
jl
repnz
jb
add
insb
hlt
cltd
xlat
loopne
jnp
add
imul
stos
sub
xor
lea
push
adc
popa
scas
in
xor
xor
jnp
mulps
mov
pop
rcl
add
fbld
imul
pop
inc
popf
mov
add
mov
xchg
movb
neg
adc
jecxz
enter
push
push
xor
dec
jecxz
inc
insb
add
mov
mov
push
pop
add
out
imul
adc
xor
fidivl
xchg
lgs
lock
ljmp
add
mov
or
mov
add
imul
int3
jmp
adc
cmp
testl
andb
add
push
inc
ficompl
cli
add
icebp
push
mov
cmp
and
pop
rolb
sarl
cmp
std
sub
bound
sti
mov
das
in
in
nop
pop
shrb
sbbb
add
and
jae
jbe
pmuludq
pop
mov
fisubs
pop
fwait
or
mov
lcall
mov
mov
in
fbld
sub
push
addl
out
sub
loopne
popf
adc
cmpsl
mov
pop
imulb
ror
sub
icebp
gs
jle
adc
pop
fwait
inc
dec
push
add
or
loop
out
outsb
jg
fxsave
cwtd
rclb
pop
outsl
xchg
dec
fs
loopne
pop
mov
aas
jge
mov
call
mov
mov
xchg
pop
cs
cmp
jae
pusha
in
inc
mov
rcrb
or
ds
call
add
dec
lea
outsl
mov
add
dec
insl
mov
add
jge
mov
jle
mov
lods
xchg
jmp
aaa
pop
xchg
lcall
subb
or
imul
aam
negb
mulb
xor
inc
add
adc
lea
add
dec
xlat
lret
stos
incl
add
mov
rcr
mov
and
dec
mov
push
jbe
add
jb
cmc
mov
data16
adc
ljmp
jp
js
push
out
sarb
dec
in
jae
and
and
add
jle
clc
test
add
push
inc
add
push
adcb
xchg
sarb
repnz
add
fnstsw
mov
xchg
test
decl
mull
xchg
add
pop
jne
xchg
faddl
imul
inc
mov
pop
dec
or
je
sub
in
pusha
push
nop
lock
outsl
cmp
ljmp
je
jb
push
push
or
add
fisubs
in
mov
and
mov
flds
repz
cmpsb
adc
add
popf
cmpb
xchg
xor
shl
jmp
test
fsubrl
pop
jg
sub
fisubrl
sahf
loope
dec
jle
inc
add
leave
pop
repnz
add
mov
sub
clc
adc
add
sahf
add
sbb
jp
mov
add
dec
leave
add
sub
jno
add
push
add
cmp
pop
xor
stos
gs
mov
out
lds
and
mov
add
xchg
dec
cs
sub
fadds
mov
lock
xor
inc
cmp
xchg
sbb
mov
jo
mov
hlt
xchg
add
rol
cmp
lret
inc
arpl
or
testl
sahf
mov
test
pusha
xor
fiaddl
or
shlw
jne
add
subb
inc
mov
cmp
pop
movsb
or
aad
out
mov
lahf
sub
pushf
addl
test
fnstenv
adc
push
pop
xor
xor
xor
jmp
aam
shrb
aas
fidivs
in
notl
ljmp
dec
fadd
cmpsb
lahf
add
and
sbb
ja
xchg
sbb
pop
dec
sbb
jp
mov
cwtl
loope
dec
jo
out
repz
adc
lret
scas
dec
mov
dec
pop
fdivrl
sub
add
imul
ljmp
xchg
cmp
push
push
popa
fcomps
das
call
aad
sbb
rol
cmp
mov
or
add
and
pop
push
add
stc
sbbb
in
fwait
add
in
mov
fdivs
call
mov
mov
mov
clc
jp
dec
jle
cmpsl
enter
stos
dec
add
pusha
jb
push
cltd
pop
ds
jp
push
mov
icebp
cmp
or
movb
xlat
bound
sbb
ret
dec
sub
shll
push
sub
jl
inc
inc
sbb
push
repz
cmc
push
pop
lock
outsl
pop
mov
cltd
dec
jmp
add
test
pop
icebp
fs
js
jo
std
push
pop
add
push
mov
hlt
add
cmpsb
cmpsl
add
int3
nop
xor
push
mov
repz
mov
push
outsb
add
pop
enter
jns
xchg
js
jo
add
inc
shlb
aas
jbe
ja
push
push
inc
scas
and
or
push
mov
mov
pusha
das
outsb
mov
or
addb
ss
out
jp
add
cltd
aas
data16
xchg
mov
sbb
pop
les
mov
mov
push
dec
pushf
push
rclb
push
ljmp
xor
xor
pop
test
imul
xchg
xchg
aas
clc
push
push
and
scas
insb
div
cmp
jg
sub
add
and
subb
test
add
sbb
repz
clc
cmpb
enter
mov
fsubrs
insb
pop
movhps
lock
daa
les
inc
dec
jnp
push
sbb
aam
pop
sahf
les
inc
daa
cmp
lods
mov
fistpll
add
push
dec
mov
in
xor
jge
push
loopne
gs
add
rclb
cmp
incb
and
stc
imul
movb
ret
outsl
xchg
mov
cmp
xchg
mov
xchg
in
jnp
pop
loopne
dec
add
and
lods
push
fwait
push
loop
mov
mov
cmpsb
fdivrl
cmp
mov
lahf
ret
mov
sub
pop
fs
movsl
pop
jb
add
fnstenv
popa
pop
adc
push
into
pushf
cmp
pop
jae
xor
int
lock
lcall
loope
lock
outsb
sbb
nop
cmp
clc
cmp
adc
icebp
jne
jo
cmp
lahf
pushf
push
pop
jmp
dec
sbb
das
fsubl
nop
aad
add
es
adc
add
loope
pusha
fiadds
inc
int3
lea
imul
popa
pop
stos
mov
push
nop
add
push
jns
ds
or
dec
add
testb
add
ret
loopne
pop
sub
sar
pop
xchg
mov
add
adc
incl
add
jne
cld
repnz
fidivl
jnp
push
inc
cmp
add
or
jmp
jbe
cwtl
mov
pop
imul
cmp
divl
stc
push
mov
jnp
xchg
add
mov
lcall
inc
xor
xchg
jnp
jb
in
xor
pop
gs
cmp
not
pop
cmpsl
popf
add
lahf
adc
js
sti
add
xchg
je
das
mov
xor
xchg
in
adc
cmovne
pop
ljmp
aas
loop
cmpb
push
mov
fs
and
sub
inc
mov
push
leave
push
push
add
sub
ficoms
pop
jae
dec
sub
sbb
mov
or
mov
pop
add
jl
nop
cmp
mov
mov
cltd
inc
mov
push
push
pusha
cmpsb
das
add
pop
mov
stos
mov
loopne
jle
in
add
cmp
jne
ljmp
or
dec
je
add
pop
mov
or
inc
mov
sbb
mov
adc
sahf
ja
add
inc
int3
cmp
inc
add
jo
push
fs
popf
xor
sete
mov
and
xchg
test
push
aam
push
add
sbb
adc
fwait
ds
mov
add
btsl
negb
jnp
rolb
stc
call
cmp
or
xor
jge
repz
clc
cld
imul
mov
cmp
lcall
xor
inc
add
mov
push
imul
jp
add
fisubrs
cwtl
arpl
lds
sarl
push
mov
in
add
call
xchg
or
stos
add
sahf
and
test
cmp
insl
jns
leave
test
adcb
pushf
add
push
sub
jae
in
or
repnz
xor
orb
pusha
cmp
push
xor
push
call
rolb
jl
mov
scas
push
jle
adc
ret
push
pusha
hlt
xchg
pop
jle
mov
repnz
push
push
pop
outsb
push
or
roll
push
jnp
ret
call
dec
outsl
ss
add
das
int
repz
bnd
or
add
ds
pop
and
scas
loop
add
mov
je
bound
sub
data16
sbb
mov
jbe
pop
add
inc
lods
mov
inc
les
push
xchg
push
mov
imul
popa
sbb
bound
jmp
jbe
add
xorb
sub
pop
aam
sbb
nop
cmp
push
inc
aam
loopne
subl
lret
add
add
mov
push
mul
cmp
jbe
mov
or
fnstsw
push
jge
lret
cmc
in
or
add
cmp
aam
jo
add
stc
jge
add
fcomps
mov
add
std
div
enter
repnz
ds
add
jae
sub
xor
jne
sbb
mov
int3
jle
xorl
lea
sub
sahf
lods
pushf
pop
push
mov
sub
inc
nop
mov
cmpsb
adc
add
xor
fldenv
sbb
mov
incb
aad
scas
cmpsl
push
mov
call
rcll
add
pusha
mov
rcll
inc
pop
add
xlat
dec
comiss
and
ficompl
xorl
nop
add
in
not
loop
dec
sbb
bound
scas
jmp
inc
inc
sub
out
nop
add
or
in
aas
or
add
sbb
sarl
dec
dec
jbe
add
out
cmp
dec
pop
in
aam
aas
dec
xchg
test
popf
add
lahf
cmpsl
movsl
push
cmp
lock
js
ret
dec
xchg
sbb
fstpl
jl
pop
inc
xchg
je
ja
sbb
lock
sbb
scas
ret
psllq
push
in
mov
lret
add
popa
pop
jl
xor
push
mov
sub
cmp
nop
mov
out
pop
xchg
psubw
sub
mov
in
jecxz
cmp
inc
push
dec
lret
loopne
mov
sub
gs
sub
push
sub
sbb
add
push
xchg
inc
jo
daa
gs
subb
es
xlat
js
ja
dec
xchg
ljmp
push
mov
adc
mov
xchg
sbbb
push
xor
push
enter
lock
add
rorb
lods
sbb
hlt
or
not
push
imul
mov
loope
mov
andb
mov
add
stos
testb
out
cmpb
in
mov
add
ljmp
jecxz
xchg
dec
test
add
cmp
inc
pop
xor
and
adc
outsb
addr16
jbe
stos
push
inc
lods
repz
inc
dec
pop
mov
add
cmp
adc
xor
push
pop
rorb
mov
jecxz
in
aaa
inc
rcrb
add
xor
xchg
add
pop
scas
adc
add
out
sarb
sarb
repz
pop
cmp
repnz
out
add
icebp
fistl
add
fsts
mov
fdivs
cmc
jb
insl
lods
dec
loopne
cmp
fdivrs
and
inc
leave
mov
mov
lds
xor
mov
xlat
jae
mov
push
add
test
addl
adc
pushf
push
lret
cmpb
adc
add
cwtl
pop
cmp
stos
add
mov
stos
mov
push
mov
mov
vmread
xchg
cmpsl
sbb
dec
cmp
adc
int
lock
addr16
hlt
push
xchg
mov
clc
sub
daa
outsl
jno
push
dec
sub
jge
or
pusha
aaa
mov
mov
in
xor
call
pop
lea
fcmovnb
add
dec
mov
negl
xor
or
add
push
add
sbbb
push
add
xchg
jg
lock
ss
pop
xlat
mov
add
nop
pop
movsbl
or
mov
loope
sub
sbb
pop
adc
imul
loop
orb
add
cmpsb
dec
incl
icebp
inc
leave
sbb
sbb
and
mov
add
push
or
push
cmp
cmp
dec
addl
adc
fsub
aaa
sub
xchg
aad
test
xchg
add
mov
js
add
out
scas
nop
rolb
sbb
inc
jp
call
sahf
mov
sub
cs
lahf
and
dec
add
jl
shrb
dec
add
and
roll
pop
mov
and
pop
mov
adc
mov
addb
sbb
test
mov
lcall
add
loopne
xchg
lods
mov
std
aaa
mov
outsl
clc
adc
scas
inc
sub
pop
and
lods
sbb
jb
test
jno
sbb
cmpb
inc
in
int3
sahf
push
dec
fisttpll
xor
stos
sbb
enter
leave
add
loop
push
pusha
sti
ficoms
mov
sub
jo
mov
fcomps
pop
jno
imul
inc
xor
gs
xor
js
push
or
fcoml
out
add
mov
sbb
enter
xor
pop
femms
xchg
add
dec
dec
or
das
dec
jae
mov
push
data16
in
xchg
fistpll
adc
das
mov
add
fsubrs
push
add
ja
dec
test
or
icebp
xchg
loop
in
test
test
outsl
stos
pop
add
push
dec
mov
and
sub
push
shrl
xor
outsl
ror
pop
mov
inc
inc
loope
ds
sub
or
cmpsb
push
push
loopne
rcrb
or
add
arpl
clc
sub
ds
and
add
mov
rclb
sbb
shlb
cltd
mov
jecxz
pop
filds
and
push
jnp
scas
dec
pop
imul
rorl
into
jg
bound
pop
cmpsb
or
lock
or
sbb
mov
sarl
and
fstpl
into
push
dec
adc
or
sarl
mov
out
jnp
ret
pop
scas
inc
or
mov
arpl
xor
push
in
or
lock
add
xlat
and
jge
or
pop
movsb
bound
sbb
jmp
adc
test
shlb
and
repnz
dec
js
mov
cmpsb
pushf
shlb
popf
sbb
sbb
mov
icebp
and
add
inc
movsb
jns
repnz
mov
es
xchg
insl
add
inc
mov
add
sbb
js
pop
mov
cli
pop
sub
sbb
sbb
addb
and
pusha
orb
nop
outsb
adc
stos
repz
push
inc
mov
jo
je
in
movsb
syscall
decb
ret
jbe
sub
andb
jae
mov
cmp
or
addr16
ret
pop
or
orb
int
sbb
xchg
mov
pop
pop
pop
xchg
add
pop
xor
sbb
es
mov
loop
push
adc
rol
dec
mov
pop
cmp
push
mov
daa
inc
pop
subl
adc
sub
dec
ja
pop
xlat
inc
call
ljmp
mov
and
mov
push
sub
adcb
movsb
add
aaa
fisttpl
push
push
dec
cmp
inc
mov
test
mov
mov
add
in
fldenv
sti
aad
repz
cmp
int
pushf
or
daa
add
test
aas
sbb
pop
mov
push
push
adc
leave
xchg
inc
pop
ret
cs
jge
mov
scas
dec
cmp
es
enter
xor
and
popa
sub
dec
cmp
ret
and
cmp
pop
add
mov
in
andl
xchg
sbb
push
fistps
test
xchg
out
sub
and
xchg
inc
xchg
pop
es
push
loopne
sub
clc
mov
sbb
jmp
xor
push
incb
outsl
sti
push
inc
shlb
fdivs
sbb
push
dec
sub
mov
cmp
sbb
adc
lock
pop
xchg
imul
push
sbb
xchg
add
xchg
shlb
fs
inc
adc
fwait
cmp
dec
icebp
add
jecxz
call
jp
xchg
ljmp
xor
jo
xchg
add
daa
lahf
dec
inc
add
scas
scas
add
inc
xchg
jb
mov
lret
add
hlt
adc
enter
push
icebp
leave
lea
push
xlat
lods
fwait
lret
lock
cmc
push
push
test
jecxz
push
iret
add
pushf
adc
cmpb
xchg
and
loope
roll
dec
mov
adc
jnp
push
adcb
mov
nop
mov
inc
adc
pushl
rcrb
addb
jbe
das
data16
orl
add
nop
in
inc
lods
testl
inc
hlt
decb
sbb
shlb
add
sub
mov
test
xor
ljmp
data16
add
movb
lcall
addl
push
std
xchg
dec
lock
and
in
adc
mov
and
and
mov
push
data16
gs
popl
popa
sub
inc
loopne
adc
outsb
test
pushl
fs
push
aas
pop
loope
dec
pop
aam
cmpb
push
test
jle
out
add
rorl
rcll
push
test
dec
daa
out
add
mov
adc
jle
add
mov
jmp
ss
mov
sbb
jns
add
adc
add
pop
movsl
push
mov
loopne
dec
lcall
push
fisubrs
ret
mov
mov
mov
sub
scas
push
push
inc
into
push
add
insb
lea
mov
add
ret
pop
nop
int3
mov
js
add
lods
push
jmp
leave
inc
mov
dec
fsubp
enter
les
dec
jae
fsubrs
add
lock
shlb
push
ds
push
xor
mov
into
sti
cmp
add
test
fcomps
sarl
cmpsb
daa
pop
add
sbb
add
mov
les
add
push
aad
xchg
iret
sub
add
cld
inc
insl
cmc
out
dec
fs
clc
add
push
pop
mov
in
inc
or
in
arpl
into
dec
sets
pop
add
scas
imul
sbb
pop
lret
jne
xchg
jno
repz
gs
idivb
push
pusha
scas
call
xchg
push
sbb
aaa
and
fidivrl
lret
cltd
loopne
mov
sbb
and
and
addr16
movsl
or
pop
js
xor
jbe
add
adc
test
and
dec
xchg
pop
adc
lods
and
xchg
fstp
inc
xlat
outsb
aad
in
mov
fiadds
mov
dec
loope
lret
fadds
cs
sbb
and
out
jb
pop
jg
loopne
pusha
dec
add
in
inc
sbb
movsl
call
add
shlb
leave
push
pop
data16
mov
cmpsb
mov
orl
jmp
add
flds
mov
or
and
aaa
cmp
adc
shll
mov
mov
ds
pop
add
ret
push
mov
add
outsb
dec
es
sahf
test
loopne
mov
pop
xchg
fadds
jb
cmpsb
scas
lods
mov
jb
add
ret
sbb
cwtl
jmp
push
pop
loopne
negb
sub
mov
sbb
pop
test
movsl
out
inc
mov
or
push
mov
jecxz
pushf
xchg
jo
and
pop
pop
sbb
fdivrl
dec
ss
insl
sbb
cmpsb
dec
shl
sbb
iret
dec
xchg
jno
pop
xchg
sbb
mov
outsb
aam
inc
jae
add
out
mov
stos
ja
cmp
fcomi
push
addl
jmp
into
xchg
mov
cltd
in
incb
mov
adc
outsl
xor
adc
in
push
fimuls
lahf
add
test
inc
je
aas
mov
xor
add
mov
or
fmul
xor
add
sbb
add
add
scas
sahf
cltd
bound
mov
push
and
mov
aad
popf
mov
lds
pushf
cltd
in
mov
pop
add
and
mov
imul
adc
xor
rorl
add
pop
lds
pop
pushf
dec
cmc
add
ss
out
cmp
lods
sbb
or
call
jge
outsl
xor
and
insl
imul
rcrl
push
jno
mov
pop
add
lock
jge
cmp
std
and
fucomp
in
jl
sub
add
lods
cmp
adc
cmp
cmpsb
xchg
and
out
lock
repz
jmp
sbb
sub
jecxz
xor
loopne
out
push
add
lret
push
jl
inc
sahf
cmp
jle
mov
stos
jmp
xchg
adcb
mov
dec
mov
pop
inc
push
std
mov
dec
mov
aad
in
inc
leave
lock
fdivl
xchg
lds
mov
sub
and
jl
int3
inc
popf
clc
cmp
add
pop
inc
push
mov
jo
pop
or
loopne
adc
jb
add
jle
or
aam
popf
pop
mov
add
pop
and
test
add
push
cmp
jo
call
sub
mov
add
mov
mov
sub
dec
mov
imulb
mov
lods
jp
ja
cld
add
lock
mov
mov
sbb
ljmp
out
sbb
mov
daa
or
jle
rclb
pushf
add
pop
or
fsubl
cmp
push
lock
fwait
xchg
add
ffree
jp
pusha
in
adc
jecxz
mov
fisubrs
sbb
xor
add
xchg
inc
pop
cmc
jle
es
add
fbld
enter
add
pop
setl
and
pop
adc
push
addl
or
popa
cltd
push
lahf
mov
in
adc
push
add
mov
and
aad
add
inc
mov
pop
dec
adc
ror
testl
int
std
imul
sub
fcoml
add
gs
add
add
imul
xchg
jbe
iret
pop
mov
cwtl
push
in
and
jne
lret
andb
dec
loope
mov
lcall
cmp
add
cmp
in
repz
int
pop
mov
jecxz
pop
pop
leave
pop
loop
jae
imul
jecxz
add
ret
jne
gs
xchg
enter
pop
mov
mov
dec
xor
test
pop
arpl
negb
pusha
sbb
adc
add
add
shrl
ss
xchg
lret
fdivp
jp
cmovp
hlt
cs
push
add
rcl
jns
and
sbb
popa
xor
aaa
add
or
xor
mov
mov
roll
push
add
sbb
mov
pusha
xlat
std
fiaddl
mov
enter
or
add
insb
pop
add
inc
cmp
addb
imul
adc
push
xor
je
aas
xchg
and
add
rcll
loope
mov
fdivrl
mov
ds
cmp
dec
cmp
push
mov
aad
add
decb
sub
xchg
icebp
push
add
jge
movsl
add
pop
sub
insb
dec
pop
roll
repz
bnd
xor
popw
movsb
ret
scas
jmp
sti
add
dec
divl
aad
adc
cmpsl
scas
lcall
in
dec
xor
insb
in
xchg
xor
outsb
jae
dec
cmp
test
push
aas
xchg
cmp
lea
sahf
sub
add
add
gs
sub
jl
mov
stc
and
mov
jg
jbe
jno
js
sub
sbb
addr16
add
mov
test
enter
fisttpl
xor
stos
mov
mov
push
sub
or
test
ds
popa
cmp
or
lock
inc
mov
xor
push
subps
adc
mov
aam
std
lret
push
push
xchg
xor
add
loope
in
mov
dec
fcomps
clc
ret
lds
jns
xor
popf
sbb
push
cwtl
adc
xchg
or
pushf
in
sub
push
or
loopne
cmp
pusha
jne
add
jns
xchg
add
popf
cmp
push
and
add
pop
add
pmaxsw
fs
pushf
ret
data16
and
and
jnp
adc
xchg
sbb
stos
add
lods
fs
push
mov
jb
adc
xchg
pop
scas
add
out
push
cmp
push
jno
push
push
sub
mov
mov
sbb
add
inc
sub
outsb
cmp
cmp
or
adc
cmp
fiaddl
or
decb
fscale
inc
or
add
or
into
mov
outsb
js
inc
jne
cmpsl
scas
add
add
sub
mov
xchg
dec
push
hlt
add
cmp
and
ja
test
push
add
jno
and
das
add
pop
jne
add
push
or
sub
movsb
sub
pop
rcll
ja
add
mov
jns
pusha
add
or
cmpsl
jmp
sub
sub
mov
out
lods
inc
out
pop
aaa
sbbl
xchg
clc
pop
push
call
fwait
adc
mov
adc
pop
add
xor
ja
add
arpl
push
add
and
jecxz
jae
mov
pop
fnsave
mov
jo
repz
std
add
cld
xchg
add
and
jecxz
mov
js
mov
fcoms
cmpb
ljmp
add
orb
mov
jp
leave
rorb
je
add
pop
add
sbb
rcr
inc
in
adc
jae
pop
adc
jmp
std
movl
mov
sbb
test
mov
add
fldt
lea
rcrl
fptan
dec
push
jle
sbb
jp
into
xlat
rcrl
dec
mov
outsb
aam
cs
popa
sub
inc
push
scas
xor
adcb
push
sbb
pusha
add
cmp
dec
pop
sbb
leave
xchg
mov
rcrb
add
sti
test
arpl
loopne
xor
jb
movlps
push
sarb
jb
pop
xor
sub
mov
and
or
cmpb
ret
or
inc
add
dec
or
mov
ret
push
bnd
or
add
js
stos
sbb
aad
pop
ja
inc
add
cmp
inc
push
add
stc
dec
data16
call
xor
cwtl
mov
add
in
stos
add
mov
popa
outsl
cli
scas
add
testl
pusha
dec
dec
adc
and
inc
cmpsb
mov
loopne
icebp
xchg
pop
into
and
or
add
pop
and
dec
aaa
rolb
sbb
or
xor
je
pop
imul
jmp
mov
adc
add
fdivrl
pop
sahf
pop
inc
jge
add
xor
add
lock
out
std
pop
mov
xor
inc
inc
add
inc
dec
stos
push
rcr
add
inc
and
fldenv
xchg
add
psubusb
repnz
int3
inc
in
nop
xchg
pop
cmp
cmp
pop
cmp
cmp
xchg
repz
lcall
xchg
xor
inc
push
stos
add
cmp
jg
xchg
pop
add
push
pop
push
xor
xchg
iret
push
pop
dec
pop
and
out
js
adc
imul
add
enter
pushf
gs
scas
ret
js
loopne
sti
cmp
mov
xorps
rolb
push
scas
sub
add
push
adc
jae
mov
cvtdq2ps
or
cmpsb
add
aas
and
or
scas
mov
and
push
lods
cs
sub
add
outsl
scas
out
lret
out
inc
add
inc
and
xchg
dec
mov
add
fildl
repz
mov
or
test
ljmp
jmp
mov
inc
inc
and
add
mov
and
and
add
add
int
pop
repnz
cli
js
cmpsl
mov
sbb
mov
or
sub
enter
dec
mov
nop
arpl
pop
popa
and
or
push
fcomps
add
and
mov
lods
inc
dec
mov
call
mov
mov
gs
js
add
aaa
sbb
cmp
out
xor
pop
jbe
cmp
hlt
push
cmpsb
add
fstl
in
lea
mov
pop
cld
orb
sub
test
cmp
xchg
mov
inc
hlt
in
pop
fimull
mov
adc
mov
das
sbb
mov
add
rolb
add
adc
mov
cs
jnp
add
lret
out
push
add
hlt
add
mov
stos
or
stc
cmp
and
xchg
mov
ljmp
push
add
lds
push
adc
into
mov
inc
adc
imul
xchg
loop
aas
pop
xchg
es
pop
jp
add
cmpsb
int
pop
jl
enter
pop
jg
dec
popa
jns
pop
dec
insb
xor
int3
xchg
aam
ja
shrb
dec
inc
out
adc
rolb
adc
dec
mov
popa
imul
stos
int3
sbb
push
add
sub
js
movswl
test
in
add
mov
fsubrs
push
xlat
aad
out
add
cmp
fisttpll
cmp
imul
mov
sbb
pop
int3
inc
pop
in
fs
pop
mov
imul
and
add
push
popa
fwait
add
xchg
add
jae
inc
mov
data16
pushf
sub
mov
mov
insb
mov
bound
rcrb
or
and
adc
jne
mov
outsl
xchg
aas
jno
mov
pop
mov
push
mov
jge
movsl
aam
mov
addr16
rolb
fcom
aas
add
lret
lahf
mov
add
movsb
add
ret
add
sub
dec
lahf
arpl
addr16
xchg
sahf
loopne
add
call
cmovae
shll
push
popl
xchg
cmp
subb
mov
ss
jo
pop
adc
sub
adc
add
xchg
mov
fadd
clc
fsubrs
enter
insl
dec
sub
aas
mov
push
aad
add
ljmp
add
xchg
mov
sub
test
mov
testl
pop
test
stos
out
add
push
mov
cmp
push
out
add
daa
push
nop
movsb
or
fdivrs
add
std
cmc
xchg
and
sub
es
mov
dec
push
push
leave
sub
pop
dec
push
iret
pcmpeqd
pop
subb
and
or
mov
mov
dec
cmpsl
movsb
rolb
and
repnz
pop
ss
xor
xor
sbb
pop
pop
cmp
sahf
mov
ficomps
std
rorb
adc
out
enter
hlt
rcrl
inc
dec
rcl
push
stc
dec
inc
add
scas
call
cld
pop
pop
add
shrd
mov
add
xchg
adc
sub
mov
std
jmp
hlt
jl
inc
in
and
jnp
jne
ret
inc
cs
jg
mov
popf
ljmp
mov
dec
mov
sub
shlb
jbe
lock
int3
or
cmp
and
divb
pop
call
dec
mov
cmp
lahf
ret
cmpsl
inc
cmpsl
mov
push
inc
popa
inc
movsl
sti
dec
rcrb
notl
fwait
mov
loop
adc
xchg
xchg
add
pop
xor
fsubrs
subl
ret
std
xchg
jne
divb
imul
or
loopne
dec
cmp
aad
mov
add
cltd
jge
sub
cmc
mov
jmp
add
xchg
es
nop
push
cmp
fcompl
in
dec
vmovlps
call
nop
out
pop
mov
sub
test
mov
call
jno
and
aaa
ljmp
jb
lock
jo
subl
xchg
inc
sbb
loopne
mov
add
adc
add
insb
cltd
sub
scas
inc
add
inc
enter
outsl
cli
or
sti
push
cwtl
add
push
cmpsl
pop
sahf
adc
xchg
int3
test
divb
add
mov
add
cwtl
sbb
clc
ficompl
loopne
add
jnp
jo
cmp
jge
rolb
add
xchg
xchg
sbb
incl
adc
jnp
paddusb
les
rdpmc
add
push
shll
leave
push
clc
cmpsl
outsb
cmp
push
dec
arpl
adc
cs
adc
sub
subb
push
out
flds
adc
pop
int3
mov
movsb
cmpsb
add
ret
jb
add
insl
lods
jne
or
add
pop
cmp
popa
jae
mov
add
xchg
mov
dec
add
mov
add
lret
inc
arpl
pop
js
sbb
call
add
cmp
xchg
outsl
pop
mov
add
jo
les
movsb
int
jp
adc
out
and
dec
mov
mov
roll
jmp
call
pop
jecxz
xchg
push
add
mov
in
data16
sub
mov
loopne
pop
sti
sbb
mov
popa
divb
jge
int3
jg
orb
mov
or
stos
mov
cld
stos
add
and
or
pop
cli
add
cmp
xorl
scas
sti
cli
pushf
out
faddl
cmp
jecxz
cmp
add
pusha
inc
lds
dec
add
das
mov
cltd
es
or
push
add
insl
xor
push
sub
mov
inc
xorl
std
mov
cmpsl
gs
inc
pop
add
add
xchg
addb
mov
adc
inc
out
pushf
cld
fidivl
in
aad
fstpt
mov
xchg
add
cmpsb
call
add
push
ds
jae
xlat
add
jno
mov
je
dec
out
mov
pop
pop
popa
int3
sbbl
jb
lock
out
push
nop
ud1
add
jnp
push
psllw
ret
enter
out
mov
inc
and
lahf
pop
pop
subb
inc
push
loopne
xchg
push
in
fisubrl
arpl
add
inc
mov
mov
cmp
add
jae
dec
push
jl
roll
jp
aas
shll
fcoms
cmp
or
in
dec
push
inc
push
test
mov
sub
add
jo
jp
lods
pop
xchg
xchg
sbbl
fs
jp,pn
xchg
or
mov
cmpsb
pop
push
add
jg,pn
popf
mov
inc
in
loopne
jo
jae
cwtl
pop
adc
test
sbb
add
sbbl
jae
rcrl
mov
mov
inc
sub
mov
mov
cli
sbb
cs
mov
out
pop
dec
sbb
push
mov
jo
add
je
cmpsb
aas
imul
or
xor
add
or
push
lea
pop
add
xchg
mov
icebp
in
xchg
add
inc
mov
call
incb
sub
sarl
push
add
daa
and
jo
add
mov
mov
orl
xchg
and
mov
in
jge
sbb
and
in
das
ljmp
add
pusha
push
clc
add
in
int3
fisubl
sub
dec
mov
xor
push
pop
push
cmc
cmp
xor
arpl
add
bound
aad
add
mov
add
inc
adc
jo
sbb
dec
sbb
sbbl
icebp
sbb
add
add
pop
dec
add
inc
mov
pop
sbb
fbld
adc
pushf
idivl
pusha
popf
adc
add
pusha
outsl
push
sub
push
aaa
stos
xor
addr16
cmpsl
push
add
out
insb
inc
xlat
adc
add
push
movsb
int3
sahf
cmp
cmp
adc
or
push
arpl
fisttpll
pusha
fisubs
incl
shl
mov
cmp
stc
mov
sub
sti
mov
cmp
outsl
cmp
and
insb
add
pushf
and
dec
mov
gs
test
and
aaa
mov
sbb
or
lea
or
and
inc
xor
dec
and
repnz
add
add
mov
aas
fisttpll
fnstenv
adc
push
mov
push
mov
add
sub
mov
jnp
cld
and
scas
testb
test
add
inc
push
pop
dec
sbbb
xor
mov
fidivl
adcl
add
cmp
mov
pop
aad
shlb
xor
add
bound
fidivrs
sar
jecxz
add
icebp
cmpsl
add
or
insb
aas
stos
xchg
test
and
mov
add
out
pop
dec
mov
sar
mov
add
mov
addr16
dec
pop
xor
mov
out
inc
shll
mov
push
xchg
mov
movsl
xchg
ror
nop
loop
jb
add
das
dec
ljmp
fs
or
pop
call
addr16
adc
test
in
dec
inc
add
dec
dec
sahf
pop
cmpsb
mov
pop
decb
push
pop
push
adc
add
mov
popa
push
inc
mov
mov
inc
xor
jecxz
add
sbb
add
mov
call
add
ja
hlt
jl
add
insl
xlat
cli
or
es
stos
cmpsb
and
sub
test
add
dec
pop
mov
subb
test
icebp
mov
xchg
call
inc
pop
push
sbb
sbb
rolb
clc
or
ficompl
scas
add
xorl
adc
inc
ret
icebp
jle
in
jnp
imul
call
into
fisubl
inc
out
sbb
shlb
adc
push
inc
inc
pop
pusha
js
dec
push
sarl
add
push
addl
and
jl
adc
stos
add
mov
xchg
push
xchg
js
add
mov
fsts
dec
sbb
sub
mov
pushf
push
stos
leave
jo
add
fcomi
cmp
pop
dec
mov
fisubrs
add
pop
pop
stc
mov
sub
add
in
pop
out
fwait
fwait
mov
lock
inc
mov
add
jge
mov
push
inc
les
jns
nop
cmp
in
mov
pop
jg
and
lds
ljmp
mov
jbe
push
or
dec
out
add
pop
shl
cmp
int3
mov
repnz
inc
dec
sbb
test
stos
add
fs
push
push
sub
faddl
sub
jne
add
hlt
jb
call
adc
xchg
lahf
sub
mov
mov
imul
ja
sbbb
xchg
subl
jg
mov
scas
and
icebp
mov
cmp
xchg
les
pop
idivl
insb
jecxz
fs
inc
aas
mov
mov
bnd
stos
sub
xchg
or
jle
test
fwait
or
add
mov
mov
pop
sub
out
push
add
mov
push
inc
mov
add
sbb
sub
cli
lods
outsl
xchg
cwtl
shlb
dec
mov
lret
inc
push
dec
add
or
gs
rclb
popf
cmpsb
scas
sbb
pop
push
and
sbb
push
jne
mov
mov
in
dec
jb
mov
jle
add
aad
je
mov
add
mov
sahf
add
push
dec
add
icebp
loopne
fs
jns
je
cmp
stos
hlt
das
pop
xchg
mov
mov
movsl
es
cmp
scas
test
add
sub
xlat
pop
movlps
pop
inc
mov
jb
pop
add
aaa
adc
mov
add
js
mov
adc
cli
enter
inc
inc
bound
sub
pop
add
xor
loopne
lods
push
adc
and
jmp
fbstp
stos
xor
loop
sbb
adc
inc
call
mov
pop
sbb
inc
pop
std
xchg
mov
test
jae,pn
out
fnstcw
add
and
push
movhlps
in
orb
int
addr16
loop
mov
jl
paddw
subl
ficomps
push
jbe
mov
mov
stos
movsb
jbe
add
loop
xchg
sbb
mov
ljmp
inc
adc
icebp
and
xchg
insl
sbb
push
inc
aad
fadds
jge
cltd
dec
daa
pop
dec
xchg
insl
fs
fcompl
sbb
shll
cmp
lds
add
test
fisttpl
sub
insb
cmp
xor
jbe
scas
or
jecxz
sbb
cmpsl
les
pop
jae
jo
jl
cmp
hlt
dec
js
test
sbb
cwtl
cmpsb
jb
push
xchg
and
mov
inc
das
sbb
mov
pop
js
mov
test
and
lahf
cmp
mov
xor
les
and
mov
ljmp
dec
mov
ret
mov
fstps
stos
cwtl
and
push
adc
push
adc
insb
and
sbb
ljmp
sbb
xorl
repz
or
fnstenv
hlt
out
xor
and
add
test
shrb
mov
cld
adc
call
sub
jmp
fwait
sub
sub
adcl
mov
pop
leave
into
movl
adc
fnstsw
jne
sbb
fisubs
pop
mov
pushf
adc
push
mov
ljmp
or
test
insb
inc
push
js
scas
and
lock
nop
dec
repz
mov
aaa
and
pop
clc
rcrl
pop
and
push
out
rcr
xchg
xchg
pop
out
pushf
mov
push
push
push
and
mov
popa
pop
inc
and
out
ret
push
mov
add
adc
aad
push
test
bound
rolb
repnz
or
adc
jecxz
shll
or
and
pusha
add
test
push
cmc
mov
cld
mov
jmp
add
mov
jecxz
and
rorb
aam
mov
inc
leave
mov
ja
icebp
repnz
jns
mov
jecxz
inc
push
into
and
mov
jl
fldl
inc
adc
and
fnsave
and
adc
and
mov
xor
add
rolb
or
add
pop
mov
test
jl
cs
cmp
cld
cvtdq2ps
ds
fs
and
popa
and
adc
adc
push
jb
sarl
push
pusha
adc
xlat
dec
dec
stc
and
add
cmp
mov
adcl
add
inc
out
jle
imul
jl
or
call
inc
shlb
xchg
add
inc
pop
inc
sti
adc
add
cmpsl
das
cs
nop
push
add
je
in
sahf
xor
and
imulb
decb
loope
xchg
sub
pop
sti
jg
loopne
pop
lcall
out
aas
cmp
xorb
jo
loop
jl
decl
daa
fsubr
cmp
repz
daa
and
imul
in
cmp
adc
mov
cwtl
cmpsl
jp
enter
sbbb
mov
lahf
sub
sbb
add
iret
cmp
ficompl
rcrl
add
inc
mov
and
and
in
add
or
push
inc
sbb
jnp
test
or
and
sub
iret
mov
stc
sub
push
pop
daa
aad
inc
loop
push
add
repz
pop
mov
mov
stc
pop
or
mov
inc
clc
cmp
mov
xor
test
push
adc
mov
add
ret
add
fstps
push
adc
pusha
inc
lcall
cmp
adc
inc
or
xor
mov
sbbb
out
data16
fsubrl
in
jp
mov
pcmpgtw
aaa
lcall
jns
mov
adc
add
pusha
mov
pop
push
inc
iret
lret
push
jg
and
fistl
pop
add
sub
and
cmpsl
ror
pop
lcall
movsb
sbb
jp
ss
cmpsb
nop
lea
xor
push
hlt
movsb
das
fldl
lds
mov
in
mov
adc
cld
faddl
or
and
mov
or
stos
js
jno
and
xor
cs
test
add
sbb
pop
repz
sbb
add
dec
adc
js
pusha
inc
jp
test
xor
inc
sbb
jno
fcmove
add
add
jb
in
cmp
mov
sbb
or
inc
pusha
mov
ret
cmp
das
push
or
jle
push
add
add
adc
jg
pop
ljmp
stos
daa
push
mov
inc
inc
imul
test
or
add
mov
cmpsl
and
jle
in
aaa
mov
test
sub
dec
add
sbb
ds
xor
imul
fsubrl
adc
or
scas
aaa
push
fmull
jne
xor
loope
add
push
lahf
sub
xor
icebp
mov
scas
dec
not
add
xchg
mov
lds
dec
push
jmp
sub
mov
inc
mov
sbbl
std
jo
cwtl
sub
enter
cmp
jns
mov
xorl
in
movsb
mov
cmc
mov
adc
pusha
cmp
fs
and
popf
sub
nop
dec
sbb
movsl
pop
fadds
add
test
and
cmpb
jo
cmp
lret
jnp
or
or
mov
cmpb
mov
movsb
les
adc
mov
xor
sahf
loope
stos
js
add
ret
xor
add
pushf
or
and
stc
in
lret
dec
pop
xchg
push
or
jl
push
sbb
cmp
call
push
jmp
adc
sahf
dec
les
mov
ret
shl
jecxz
ficoml
and
adc
adc
push
popa
test
fmuls
loopne
add
fistpl
adc
or
pop
test
nop
xchg
insb
dec
stos
add
sbb
jb
inc
inc
out
lock
mov
dec
sub
add
push
out
jp
je
cmp
loop
add
xchg
and
cmp
popa
pusha
push
ljmp
out
cltd
mov
add
dec
test
sub
or
sarl
and
data16
shl
and
ficoml
rol
divb
outsl
jno
jb
cmp
ds
cmp
clc
push
mov
mov
je
pop
push
cmpl
repz
in
test
dec
jl
pop
and
pop
add
fistpll
mov
push
aam
leave
repnz
or
inc
inc
xchg
pushf
pop
add
and
xor
inc
add
lahf
test
adcb
out
scas
ja
test
cmp
sbb
clc
mov
nop
movsb
add
cmp
out
or
pop
xchg
dec
cwtl
push
dec
cli
call
sti
testb
cwtl
xor
adc
mov
push
or
in
adc
pop
cmpsl
push
inc
inc
inc
or
or
fstpt
lahf
imul
sbb
jecxz
rorb
clc
adc
jb
insb
sub
add
sub
dec
mov
fbld
push
lahf
sbb
enter
fildl
ljmp
inc
fsts
jl
and
lods
je
or
stos
inc
addb
lock
jae
mov
enter
adc
or
pop
icebp
into
dec
push
add
mov
sub
push
add
inc
pusha
rclb
sbb
pushf
fcmovnu
adc
sub
sahf
jecxz
adc
or
pushf
ja
dec
lahf
enter
cmp
cmp
nop
lock
mov
inc
repz
out
xor
jae
adc
dec
cwtl
frstor
fimull
adc
inc
push
mov
sbb
mov
xchg
adc
mov
xchg
and
mov
push
mov
test
repz
inc
jne
adc
fisttpl
aaa
mov
xchg
or
inc
sbb
push
xchg
mov
jae
cmp
mov
loop
sbb
push
dec
dec
adc
pop
lret
js
xor
or
or
jnp
sbb
adc
push
push
or
das
inc
inc
test
pop
fdivrs
fldl
push
sbb
loope
ret
adc
adc
popf
mov
std
data16
jno
and
mov
fs
and
or
inc
xchg
cs
push
and
xor
mov
or
xchg
xor
and
dec
push
mov
in
mov
int3
xchg
inc
mov
js
sub
xchg
sbb
xchg
or
cmp
inc
mov
test
test
mov
xchg
xchg
mov
fisubl
faddl
and
xchg
mov
repnz
and
ret
sbb
inc
movsl
sbb
bound
xchg
jg
int3
ret
sbb
and
pop
inc
leave
cmp
inc
pop
adc
inc
hlt
fdivs
stc
xor
dec
cmp
pop
in
cltd
xor
mov
dec
jb
push
int
ds
inc
jle
push
in
loop
sub
adc
pop
inc
xchg
lds
adc
jl
stc
or
inc
push
and
lock
cmpsl
clc
pop
dec
inc
sbb
inc
popa
or
in
dec
sub
add
push
cmpsl
xchg
push
fsts
inc
push
lds
add
sub
push
nop
movsb
inc
js
add
add
cmp
sub
testb
cmp
loope
fsub
jle
add
inc
ret
repnz
mov
push
orb
lahf
cmpsb
movsb
and
add
pop
jnp
mov
push
fiaddl
icebp
insb
adc
or
add
sub
les
xorl
jae
pop
inc
push
and
dec
dec
push
in
hlt
cmp
add
decb
add
cmp
movsb
pop
dec
add
loopne
jecxz
pusha
es
and
jl
shrb
pop
xchg
fcomip
es
xor
add
fcoml
jcxz
pshufw
stc
out
inc
dec
push
inc
mov
mov
xchg
rcrl
and
clc
push
inc
xchg
mov
mov
lock
aad
enter
mov
movsb
dec
mov
mov
add
adc
out
popa
cmpsl
push
pop
xor
xchg
movsb
mov
lods
pop
nop
push
scas
push
inc
cmp
out
dec
pop
add
sbb
cwtl
adcb
pushf
push
pop
or
cmp
xor
push
sub
mov
xchg
ficomps
mov
scas
inc
call
test
addb
fcompl
aaa
popf
adc
lret
jb
lods
in
icebp
lea
inc
fs
cmpsb
push
cwtl
enter
out
inc
cmc
inc
aaa
sbb
push
cwtl
pushf
lret
push
mov
repnz
nop
into
outsb
add
aam
adc
push
inc
add
rclb
dec
loopne
add
fistpl
mov
inc
mov
lock
xchg
dec
hlt
sbb
aad
popf
in
jge
enter
pusha
inc
loop
dec
sbb
inc
dec
jo
push
xor
test
cmp
jae
stos
xchg
push
pop
repz
push
nop
sbb
fsubrl
pop
out
xor
adcl
xchg
int
imul
push
sahf
sub
pop
fadd
sub
fadds
int3
inc
mov
call
sbb
sub
lods
inc
dec
add
or
push
xor
mov
jp
xor
addl
xchg
jbe
and
repnz
cwtl
popa
js
adc
adc
mov
pmulhw
dec
and
and
call
out
popf
movsl
nop
push
movsb
mov
imul
andl
fdivs
xor
or
int
or
add
inc
jno
ljmp
push
addb
int3
jae
and
add
add
incb
arpl
add
jl
or
inc
outsl
push
sub
orl
test
inc
mov
and
aam
je
test
pop
daa
pop
out
jl
push
push
jno
jo
push
ja
jmp
int
cmp
cmp
pushf
cmp
outsl
pop
mov
xor
jae
cltd
and
in
int3
test
or
xor
cwtl
push
adc
mov
movsb
adc
jmp
cmc
enter
mov
je
mov
dec
popf
add
movsl
adc
sub
mov
nop
push
test
sbbl
xor
icebp
cmpsb
dec
popl
mov
push
sub
jg
add
test
pusha
and
pushf
adc
xchg
dec
psrad
mov
ljmp
les
push
jns
sbbl
add
lea
dec
insb
cmpb
aam
jle
and
mov
add
in
loop
test
andl
imul
xorb
mov
rcrl
int
jmp
icebp
sub
fldt
rcr
mov
cmp
jno
mov
sbb
test
lock
fisubl
rorl
insb
xchg
pop
add
lods
shlb
push
and
es
inc
mov
push
sahf
shr
and
fbld
das
mov
lea
in
sbb
int
adcb
and
outsb
shlb
lds
push
mov
and
lds
mov
mov
or
loopne
sbb
cvtpi2ps
or
add
sub
ds
add
and
add
push
xchg
add
dec
test
int3
es
insb
adc
nop
sbb
icebp
mov
hlt
jl
ret
cmp
inc
or
jge
hlt
imul
xchg
adc
test
mov
xor
mov
push
test
out
cmc
loop
dec
lods
cmpsl
and
adc
mov
jo
sbbl
inc
sub
cmpl
adc
add
hlt
dec
push
adc
adc
push
div
andb
mov
mov
popa
dec
or
jmp
cmp
loopne
fistpll
stos
mov
jo
hlt
pop
lahf
sub
pushf
stos
xchg
hlt
rcl
xor
cwtl
icebp
orl
hlt
je
das
or
mov
les
fldt
mov
bound
jnp
pop
sbb
and
dec
adc
push
les
loope
add
filds
inc
icebp
and
jb
loopne
push
data16
mov
js
push
and
nop
add
int3
adc
dec
add
jecxz
dec
mov
add
adc
jo
fcomp
cs
fs
sbb
cmc
nop
leave
not
add
pop
pop
xor
enter
test
das
mov
adc
mov
test
pusha
lock
dec
fists
pusha
add
push
inc
add
push
fsubs
addr16
add
jae
xchg
jb
and
pop
repnz
movsl
mov
cli
adcl
jno
jg
movsb
and
mov
mov
jmp
pop
push
les
mov
and
sub
test
fisubrl
daa
fimuls
sub
pop
call
stc
xchg
sub
lock
push
jl
xchg
inc
or
add
loopne
fsubs
pop
jp
jecxz
nop
pusha
jbe
xor
inc
and
xor
stos
add
xchg
xchg
mov
add
pop
cmc
adc
mov
mov
mov
sub
test
es
mov
fs
xchg
push
mov
loopne
paddusw
pusha
xchg
movsb
jecxz
jbe
pop
inc
or
xor
ds
test
testb
and
add
adc
lock
and
daa
push
jne
add
out
mov
pop
dec
lret
rcrl
or
add
dec
xchg
mov
shl
je
stc
mov
inc
mov
mov
inc
ss
pushl
lock
inc
aad
cltd
and
mov
in
out
fisubs
mov
insb
enter
cmpl
iret
fsubrs
inc
lods
je
imul
repz
xor
pop
or
adc
lea
loope
fsts
int3
fisttpl
sarl
enter
inc
pusha
sbb
lods
jns
xor
sbb
mov
vpmaddubsw
sub
call
sub
lods
cs
bound
ret
mov
pop
sbb
mov
cmovg
or
rclb
call
or
push
subb
jp
mov
cmp
repz
leave
adc
inc
in
popa
in
pop
xor
add
iret
sahf
nop
inc
add
jno
inc
dec
andb
bound
fldcw
cwtl
or
adc
xchg
les
sub
or
cmp
das
scas
xor
stos
push
inc
out
pop
dec
pop
xchg
rclb
adc
add
fs
sbb
sub
sub
push
jb
add
out
scas
popf
mov
stos
mov
inc
test
ret
add
xor
mov
jmp
ss
push
lret
rolb
adc
out
mov
int
out
les
or
aam
dec
push
mov
cmpsb
sbb
sub
push
jo
loope
jle
jecxz
call
lods
int3
push
mov
cmp
test
mov
jge
nop
jne
pop
ja,pn
fnstenv
clc
test
and
jne
sbb
cmpsl
fisubrl
lcall
pop
push
jne
and
lds
inc
dec
inc
ficompl
mov
sahf
mov
inc
lods
enter
jecxz
stc
mov
add
adc
push
push
fstpl
sbb
sbb
test
mov
imul
sub
fisubs
nop
rclb
imul
bound
add
sahf
icebp
je
mov
jg
and
push
xchg
and
mov
lcall
fstpl
fimuls
repz
ror
and
adc
lds
ds
out
and
or
xchg
je
pusha
pop
and
daa
ds
push
push
insl
mov
or
sub
jle
dec
push
rcll
inc
add
mov
aad
mov
lods
js
push
mov
mov
lods
push
or
or
pop
test
call
or
andb
clc
test
jecxz
add
pop
scas
sub
ss
xchg
pop
inc
sti
add
test
jmp
mov
or
mov
add
mov
test
add
call
aam
repz
dec
push
mov
pusha
ret
mov
xor
imul
hlt
out
add
adc
wbinvd
fmull
loopne
add
adc
inc
js
pushf
jns
add
jecxz
in
jae
popf
sbb
test
cmpb
inc
add
adcb
cmp
or
xchg
push
add
pop
or
mov
mov
lods
popf
in
xor
push
sub
mov
and
mov
int
and
xchg
jnp
add
pop
pusha
pop
and
notl
or
push
stc
mov
xor
daa
push
pop
push
in
push
push
or
rorb
xchg
div
sbb
repz
add
pop
fsubl
cmpsb
xor
pusha
push
sbb
inc
mov
jge
mov
popl
lods
pop
mov
push
and
pop
in
adc
push
inc
add
and
out
adc
daa
or
icebp
cmp
dec
roll
xchg
sbb
add
leave
inc
test
inc
cmp
std
add
filds
xchg
adc
pop
add
lods
psubw
xor
js
fcoml
add
or
jb
adc
popa
push
xor
dec
sub
mov
ljmp
jg
fstpl
loop
add
fdivrl
add
nop
sub
clc
sbb
add
push
cmp
flds
sub
stos
mov
xchg
inc
shrl
jle
add
test
pop
mov
and
mov
xor
jns
push
aas
xchg
push
insb
push
mov
jbe
dec
and
or
push
les
into
pop
dec
clc
in
loopne
sub
jle
sbb
cvttps2pi
subl
cli
insl
fs
test
notl
sbb
push
mov
jbe
pop
out
or
arpl
adc
add
sbb
outsb
rclb
xchg
add
jae
add
inc
sbb
and
dec
in
and
mov
mov
sbb
dec
cmp
stos
mov
jecxz
adc
jle
bsf
imul
push
or
movsl
mov
add
js
mov
pop
repz
or
fidivrs
pushf
icebp
xorb
jmp
jmp
outsl
mov
popa
fldl2e
cmc
add
push
push
sbb
movsb
mov
arpl
pop
cli
fcom
sahf
adc
filds
cmp
mov
mov
mov
icebp
xor
sub
jl
out
gs
shlb
hlt
sbb
scas
mov
pop
bound
stos
daa
dec
arpl
push
or
pop
js
icebp
cli
xchg
xor
xchg
adc
jno
push
and
sub
fisttpl
mov
rcrb
inc
add
add
dec
repz
test
shrb
add
jno
testl
sbb
popa
cmp
xchg
fnstenv
mov
into
add
push
shlb
push
add
pop
xor
out
adc
xor
mov
add
aas
outsb
mov
adc
test
fs
mov
xor
push
pusha
pop
xor
stos
clc
or
push
jno
sarb
rclb
lods
sub
push
sbb
fst
call
add
pop
stos
pop
mov
out
fisubs
sub
repz
cld
fcoms
lods
loope
lods
sub
test
in
popa
fwait
and
movsb
push
push
shlb
fdiv
add
add
push
jb
sub
adcb
adc
mov
fildll
in
lods
mull
xor
sti
sbb
mov
ja
add
jmp
test
mov
add
popa
into
adc
hlt
pop
rcrb
add
lahf
pop
ss
lods
sbb
push
push
stos
sub
mov
adc
push
sub
sbb
stos
dec
aam
add
addr16
push
ret
and
pop
mov
mov
pop
aas
cmpsb
xor
cmp
aam
fcmovnb
mov
inc
andl
cld
test
add
xchg
mov
cmpsb
push
xor
out
add
mov
pop
jecxz
rcll
nop
loopne
dec
aaa
cld
add
js
scas
mov
or
lahf
dec
adc
mov
add
cmpsl
ss
mov
add
aas
shlb
sub
xchg
xchg
add
mov
std
fcoms
mov
dec
add
and
loopne
and
lds
push
or
add
sbb
bound
add
sbbl
add
lods
inc
sbb
je
adc
lods
adc
aaa
inc
pop
add
cmp
sub
call
sub
pop
jp
repnz
movsb
sbb
push
ja
clc
add
rcll
cmpb
mov
push
or
mov
les
or
jno
js
sub
insb
lcall
mov
add
xor
rolb
filds
lcall
adc
mov
test
in
push
andb
and
imul
movsl
add
pushf
je
rorl
adcl
mov
jle
jecxz
cmpsl
add
or
cmp
mov
jae
or
pop
pop
dec
fs
loop
and
sbb
shlb
mov
mov
add
in
int3
subb
sbb
mov
mov
jg
sbb
rcrb
jl
addr16
out
add
scas
lret
add
mov
fldl
pushf
ds
sti
stos
pusha
mov
sbb
rorl
outsb
lods
rorb
call
stc
dec
jmp
monitor
xlat
pop
daa
cmpsl
inc
shll
call
xchg
loopne
movsl
mov
or
fbstp
add
sbb
cmp
pop
sub
cli
and
xchg
cmp
repnz
push
notl
jnp
sbb
jno
push
and
adc
sar
add
or
fisubrl
sub
xor
test
into
jns
add
and
jbe
in
add
das
loope
ds
mov
push
mov
and
lea
je
filds
out
out
shr
push
adc
inc
jno
not
add
pusha
pop
xor
mov
sbb
mov
daa
sbb
incl
add
dec
jl
lods
add
movsb
mov
jp
rcl
adc
orl
and
mov
aaa
sbb
fldln2
stos
jo
pop
add
inc
inc
mov
add
aaa
in
add
test
cmp
dec
outsb
cmp
fs
jae
notb
pusha
xchg
pop
add
in
repnz
cmp
fwait
dec
lret
popa
or
and
ret
pop
insb
enter
stos
popa
into
int3
mov
ds
and
out
popf
add
mov
add
jle
or
popa
xor
test
push
outsl
pop
jb
ror
sbb
push
daa
add
imul
and
sbb
test
cmp
test
add
out
mov
pmuludq
jae
xchg
fnstenv
in
mov
push
add
test
adc
loop
dec
add
xor
shll
add
in
movsb
test
add
mov
aas
pop
insl
sub
icebp
std
and
es
add
push
or
ret
inc
push
int
scas
lock
call
pop
sti
dec
lret
jb
lods
sbb
lret
loop
and
mov
inc
cld
insb
loopne
stc
shlb
imul
ja
pop
mov
test
push
iret
cmc
xor
mov
in
add
inc
mov
bound
in
rclb
inc
movsl
out
dec
mov
sbbb
mov
pop
cld
icebp
into
adc
cwtl
add
sahf
sub
sub
leave
push
hlt
fnsave
cmpsl
pop
cmp
pop
inc
in
pop
push
stos
test
xchg
je
test
adc
pop
scas
add
sbb
fs
inc
daa
add
add
xchg
stos
shlb
cmp
cmp
nop
scas
incl
pop
adc
add
jmp
cmpsl
test
iret
adc
mulb
push
pop
mov
push
sbb
adc
mov
push
cwtl
test
add
addr16
loop
dec
out
sub
adc
bound
dec
mov
add
lds
std
add
sub
sarl
out
xchg
fsubrs
lret
mov
push
loop
jns
add
cmp
adc
mov
lret
popf
sbb
sbb
add
add
xor
add
sub
mov
add
xstore-rng
cmpsl
stos
mov
pusha
and
lret
fldl
gs
inc
jne
mov
add
push
sbb
cmpsb
cmp
lods
sub
add
hlt
or
add
test
add
loopne
flds
es
pop
pop
jg
pop
add
push
aas
mov
icebp
mov
mov
mov
cmp
xchg
rclb
cmpsl
sbb
and
stc
int
jne
hlt
mov
xchg
cmp
js
push
mov
jg
cmp
mov
add
cltd
xor
shlb
in
mov
cli
cmpsl
sbb
shrl
cmpsb
pop
leave
loopne
cmp
int3
in
iret
rclb
jl
negl
and
or
jb
push
fdivrl
mov
jbe
ljmp
mov
cmp
pop
or
and
jp
mov
in
add
xor
lahf
adcb
push
movsl
hlt
sub
int3
test
cmpsl
outsb
push
inc
jb
sub
xchg
mov
cltd
out
and
add
xchg
stos
xor
add
lret
jbe
sbbb
movsl
add
jmp
hlt
cmpsb
or
xor
andl
shlb
or
push
push
repz
or
sbb
inc
mov
add
aas
push
sbb
out
ficomps
imul
cmp
inc
mov
popa
pop
push
les
out
dec
jb
sub
push
pop
inc
and
inc
loopne
xor
mov
mov
aad
mov
adc
iret
adc
cmp
or
ss
mov
fldl
cmp
dec
or
cmp
fwait
push
imul
pop
aam
adc
inc
adc
sbbl
jecxz
enter
add
mov
jl
test
and
shr
call
int
mov
add
jp
mov
jge
add
movsl
sahf
add
loopne
stos
daa
bndldx
test
dec
add
hlt
dec
icebp
sbb
enter
xor
syscall
jbe
das
roll
dec
pushf
es
dec
xchg
sub
sbb
mov
es
add
cwtl
cmp
xor
jae
cmp
in
mov
adc
add
inc
rcl
dec
dec
outsl
add
mov
cmp
popl
pop
xlat
pop
xchg
adc
les
jno
insb
add
xchg
repnz
cld
sbb
fidivs
fistpl
mov
dec
cli
xor
jnp
gs
xor
cmp
out
pop
ret
add
cmpsb
cmc
loopne
data16
add
mov
mov
add
push
push
dec
sti
mov
idivb
jo,pn
test
mov
mov
lea
pop
subb
dec
add
adc
insl
xchg
fwait
push
lods
push
cltd
cli
shl
rolb
add
mov
or
xor
adc
gs
pop
xor
add
mov
pop
sbb
arpl
int3
nop
lcall
cmpb
dec
out
cwtl
jg
mov
add
int3
xchg
jmp
add
cwtl
cmp
pop
or
add
add
loopne
test
add
dec
data16
aas
inc
and
les
xorl
jl
dec
sbb
adc
je
ffreep
lock
add
mov
sub
in
sub
xorb
push
add
ja
hlt
std
push
rcr
xchg
shrl
or
lcall
push
cwtl
les
movsl
rclb
xchg
call
adc
popl
mov
je
push
lds
pushf
fiaddl
mov
jbe
cwtl
rcl
mov
je
dec
test
rol
in
xor
outsb
mov
jne
or
addb
and
sub
or
les
ret
inc
cmpsb
mov
add
stos
icebp
sbb
call
insb
add
pusha
shl
leave
fstp
and
add
insb
test
sahf
stos
or
add
xchg
jge
mov
mov
iret
sbb
leave
push
out
add
push
into
lods
cmovnp
mov
minps
rcrb
outsb
cmpb
fwait
add
adc
or
mov
push
and
adc
mov
fdivl
add
stos
rorl
jnp
push
repz
mov
and
lcall
cmp
add
pop
dec
les
inc
mov
testl
add
pop
lock
ret
add
out
stos
lds
sbb
mov
inc
repz
xor
icebp
sub
mov
add
arpl
in
faddl
cli
push
mov
jbe
ret
inc
hlt
mov
das
leave
jecxz
inc
out
jnp
push
fidivl
js
dec
movsl
xor
popa
iret
sub
test
call
cmp
push
imul
sarl
daa
sarb
xor
mov
sbb
xor
pop
cwtl
pmullw
add
sub
in
add
insb
jl
push
leave
and
fidivrs
xchg
mov
cs
icebp
imul
push
pop
push
push
xor
xchg
or
sbb
mov
xchg
fcmovnu
mov
mov
aam
sbb
fstl
push
mov
lret
mov
pop
mov
jno
mov
and
sbb
add
inc
test
out
dec
lea
loope
mov
sbb
mov
mov
add
cmp
sub
hlt
int
lods
jecxz
pop
pop
add
cld
push
jmp
push
or
clc
loopne
mov
mov
aaa
nop
or
out
in
nopl
sub
add
filds
fstpt
add
mov
push
ljmp
loope
add
pop
outsb
fadds
stos
imul
add
xor
adc
xchg
getsec
xchg
add
rcrb
pop
and
add
test
shrb
pop
sub
mov
scas
loopne
loopne
jae
add
jb
dec
ret
into
pop
imul
fisubrl
pop
cmpb
repz
sub
lahf
inc
fwait
xorb
add
insl
push
data16
add
aas
fs
lods
mov
ror
dec
scas
push
mov
fwait
dec
mov
dec
pusha
add
jmp
divb
sarb
shl
or
xchg
push
add
mov
jl
mov
in
loop
xorl
pop
icebp
fisttpll
add
dec
int
cmp
push
je
out
insb
sub
popf
add
jg
std
add
hlt
sahf
out
adc
enter
jb,pt
fists
mov
loope
or
push
in
mov
xor
dec
add
and
mov
add
mov
sbb
out
sub
cmp
dec
and
addr16
cmp
mov
push
dec
mov
inc
add
pop
lock
mov
adc
mov
mov
movl
cmp
mov
xchg
and
cli
outsb
lds
xchg
rolb
jno
rsqrtps
jb
inc
enter
and
cli
ret
sub
sub
in
aas
adc
scas
jp
add
rep
jne
sub
inc
loope
pop
scas
sahf
sub
cmp
mov
mov
push
add
pusha
xchg
xchg
add
xor
cmpb
add
adc
adc
loope
bswap
std
or
pop
subl
test
add
push
jae
cmp
stos
adc
push
add
jmp
arpl
add
jbe
jecxz
clc
add
mov
mov
aaa
add
imul
aas
mov
ja
test
bound
fnstsw
and
xchg
push
fsubr
add
nop
add
sahf
sbb
push
xor
sbb
insl
push
mov
inc
into
into
and
and
jo
cmpsb
divl
sbb
inc
push
icebp
nop
lods
push
and
jnp
cwtl
jo
dec
repnz
bnd
dec
out
push
in
or
loope
add
or
fucomi
mov
fimuls
add
lods
ret
add
loopne
cmc
pcmpeqd
pop
sbb
fcoms
adc
sub
out
cmp
dec
sahf
xchg
and
inc
into
aam
dec
repnz
hlt
leave
aas
cmp
sbb
pop
notl
mov
and
out
ret
cmc
adc
dec
xorb
sub
add
leave
shlb
repnz
je
mov
add
jecxz
mov
clc
adc
mov
gs
sbb
int
inc
adc
sbb
push
or
dec
cmp
hlt
sti
jl
bound
or
idivb
addb
enter
lret
popa
add
int3
xchg
xchg
ja
dec
mov
inc
inc
lock
sahf
mov
or
loopne
dec
sbbb
iret
mov
inc
push
add
imul
sti
sbb
addb
xchg
scas
lret
cwtl
stos
or
cltd
push
mov
das
cmp
pop
and
pushf
xchg
cltd
pop
add
mov
inc
movups
mov
loopne
popa
add
hlt
pop
xorl
sub
orl
pop
pop
popa
ds
sbb
into
incl
sbb
sarb
dec
xor
bound
adc
addr16
sahf
and
inc
call
or
call
push
test
or
rclb
je
jmp
je
enter
dec
std
sbb
jp
mov
out
or
sbb
pop
data16
aas
mov
adc
rclb
dec
mov
add
insl
jnp
nop
ret
push
cmp
das
pushf
mov
aas
call
je
hlt
stos
into
scas
das
sbbl
pop
inc
cmc
mov
clc
dec
xchg
mov
int
or
add
sub
aad
mov
or
loopne
xchg
fucomi
mov
push
outsb
mov
pop
xchg
sub
in
inc
mov
pop
add
in
dec
adc
jecxz
popf
add
jae
lcall
pop
and
inc
cmp
adc
ljmp
xchg
add
inc
sahf
or
insb
sti
mov
push
mov
sub
bound
push
dec
scas
es
pop
push
cmp
shll
xchg
xor
mov
and
adc
ljmp
call
andb
xchg
cmpsl
sub
bound
hlt
inc
mov
addl
xchg
or
and
push
inc
mov
add
inc
push
jns
jmp
xor
lret
and
leave
call
icebp
clc
ret
jge
mov
mull
mov
push
mov
out
in
js
jo
add
adc
cmp
dec
addb
out
pop
test
in
jns
cld
mov
cmp
ficompl
pop
sti
add
or
xor
ret
mov
int
or
xlat
push
mov
push
in
or
adc
sbb
mov
push
adc
mov
xor
insb
insl
xchg
clc
pushf
pop
sbb
repnz
jnp
pop
testl
inc
ja
sub
jne
jno
mov
sub
jmp
inc
pop
fs
pop
cmp
push
pop
sbb
insl
stos
pop
jl
test
sbb
sub
add
sbb
inc
dec
mov
dec
addr16
mov
add
jo
sub
mov
add
stc
jge
adc
out
dec
push
and
movsl
inc
inc
cmpsb
add
inc
movl
fwait
into
jp
add
pop
clc
pop
xchg
js
out
int
gs
sti
insb
adc
in
loope
inc
in
mov
loopne
cs
dec
cmp
push
pop
int
xchg
fsubl
jmp
daa
lods
adc
leave
cmp
cmp
gs
jmp
add
lods
sbb
jmp
aam
sbb
cmp
subb
xrelease
add
enter
add
adc
out
mov
add
movsl
faddp
jmp
popl
test
lds
and
add
fstl
test
mov
js
shrl
adc
outsb
add
pop
or
sub
rolb
lods
mov
xchg
rcll
push
mov
ljmp
pop
mov
in
add
jae
je
outsb
and
jp
out
fsubl
mov
cltd
imul
mov
ljmp
movsb
les
push
add
add
lret
mov
ja
cmpsl
mov
cmp
sub
jle
jecxz
test
icebp
push
add
clc
lret
fstp
or
ds
jo
dec
xchg
std
lock
add
orb
cmp
fwait
cmp
out
js
and
mov
add
lods
add
mov
lock
add
mov
ret
pop
dec
add
jecxz
pop
add
jmp
or
sub
sbb
in
cmp
adc
pop
cmp
xor
mov
add
cmp
jo
imul
shlb
and
jnp
push
out
cmp
popf
xchg
or
jae
dec
mov
xor
scas
pop
dec
outsb
xor
adc
and
adcb
je
lds
add
lock
jle
inc
push
push
out
jae
jg
hlt
push
stc
add
in
push
test
test
call
pop
ja
add
mov
inc
ss
int
into
push
sbb
fadds
rcrb
rorb
inc
add
add
nop
js
adc
xor
add
pushf
mov
cmpsb
fdivrl
xor
lret
fdivrs
inc
in
sarb
vmwrite
or
jb
xchg
xbegin
add
cmpsl
adc
jae
mov
push
mov
sbb
or
lods
or
data16
add
inc
call
push
push
popf
jmp
adc
and
test
rcr
and
adc
add
adc
sbb
call
aas
xor
add
adc
in
xchg
and
dec
push
int3
sub
cwtl
cwtl
jp
add
add
mov
jne
negb
mov
outsl
and
jg
mov
mov
add
stos
or
aad
add
ds
jg
mov
jns
loope
fdivl
push
mov
std
inc
push
aam
jne
arpl
subb
rorb
loopne
cmp
xchg
sbbb
fsts
xchg
lock
adcb
sub
or
push
xor
sbb
sub
or
and
or
add
cmc
xchg
xor
mov
pop
sbb
movq
out
cmp
xchg
or
ds
insb
jmp
inc
adc
push
mov
adc
xchg
xchg
inc
push
sahf
in
cltd
cmpsl
add
fidivs
cmp
pop
adc
jb
es
leave
sub
mov
loopne
inc
data16
add
cli
mov
hlt
add
into
cmp
add
sbb
fidivs
in
and
cmpsb
inc
xlat
mov
dec
or
loopne
in
rol
add
pop
es
in
roll
push
iret
or
add
fmull
add
or
fwait
in
xchg
add
or
add
jmp
add
cli
cwtl
pop
mov
jb
stos
push
adc
jo
or
dec
sti
movb
xor
xchg
les
out
frndint
shlb
cs
pusha
xchg
subb
out
add
call
pop
out
add
pop
cmp
div
and
push
add
pop
inc
or
cmp
cmp
push
add
push
push
push
dec
hlt
jno
ja
push
jo
jp
push
and
push
xchg
adc
sarl
shrl
sbb
mov
jnp
or
add
sar
movsl
mov
sub
add
int
divb
pop
out
jae
sub
arpl
or
cmp
test
pop
mov
push
mov
pop
add
jp
mov
ret
movsb
aas
mov
ljmp
lds
and
loopne
enter
pop
push
test
xor
std
jae
mov
adc
hlt
inc
mov
jg
imul
mov
daa
rcll
andl
add
movl
cmp
add
shrl
add
mov
xchg
pusha
fs
filds
fwait
xor
cmp
sbb
shlb
sub
add
or
fistps
xchg
decb
add
mov
scas
inc
mov
loopne
pop
dec
add
popf
pop
lods
add
sub
gs
idivl
faddl
sti
popf
loop
dec
pop
xor
cmp
mov
jge
jne
out
sarl
inc
inc
push
add
dec
mov
pop
xor
hlt
popa
jo
xchg
stc
stos
cld
dec
repz
jge
or
or
inc
jo
nop
inc
test
mov
add
push
outsl
iret
mov
push
jne
adc
add
in
sarb
add
jp
mov
xchg
add
dec
cmpsl
or
xchg
fildl
xor
push
fstps
add
out
pop
out
ja
in
insl
aas
leave
jg
push
inc
les
cs
addb
in
cld
mov
rorb
mov
cmp
rcll
mov
ror
mov
add
mov
cmp
adc
cli
xchg
leave
sbb
mov
ljmp
xchg
cmp
inc
insb
sbb
mov
add
jo
xor
mov
add
push
mov
or
scas
imul
xlat
add
jnp
movl
jo
xorb
push
adc
fldl
add
push
push
mov
repnz
dec
sub
jp
sub
aas
mov
dec
movsl
cmp
mov
add
popf
and
xchg
cld
inc
jl
mov
rorb
jns
or
data16
inc
sbb
dec
add
pusha
sbb
and
add
es
mov
add
cld
cmp
nop
daa
stos
and
fists
add
dec
inc
jge
or
fwait
subl
dec
add
jmp
adc
add
lock
push
hlt
xchg
mov
inc
sbb
shr
jge
add
pop
sub
cmp
or
pop
mov
outsl
add
pushl
add
ficoml
cmp
add
mov
and
pop
jns
aas
add
sub
jae
pop
adcb
push
adc
and
cmp
and
stos
mov
xor
xchg
adc
popa
sub
cmp
cmp
sbb
add
push
insb
roll
sbb
je
push
add
repz
cmova
dec
ret
add
fdivs
jmp
inc
and
xor
dec
add
insb
icebp
addr16
mov
sub
mov
es
cwtl
add
and
and
jne
push
test
add
cmp
ds
or
or
fiadds
add
ret
xchg
inc
bound
cmp
and
mov
cmp
inc
es
jnp
aam
dec
pop
fwait
cs
aaa
add
cwtl
sbb
int
add
int3
fsub
add
add
insb
add
xor
imul
jo
test
imul
shlb
mov
nop
ss
jns
rorl
sbb
cmpsb
pop
imul
xchg
add
out
das
andnps
test
pop
xor
jno
add
cmp
mov
and
aad
adc
add
and
and
addr16
fdivr
sbb
ss
jp
dec
fnsave
and
outsl
mov
mov
fildl
adc
rorl
inc
dec
cmp
add
insb
scas
popa
jnp
pop
mov
and
sub
mov
inc
loop
sbb
bound
mov
jo
add
inc
sbb
inc
xchg
loop
add
out
jo
xor
add
lret
iret
movl
sbb
xorl
mov
clc
and
dec
iret
and
pop
inc
add
fcmovu
hlt
in
rclb
popf
pop
sbb
iret
bound
cltd
add
push
dec
cmp
add
fdivrp
inc
add
push
es
inc
in
pop
leave
push
int
add
filds
pop
pusha
xorb
loope
mov
push
push
stos
fsts
inc
mov
ret
iret
pusha
int3
pop
push
orl
pop
add
es
lock
jp
clc
add
mov
adc
xchg
mov
xor
jle
lret
add
jo
sub
cmc
sahf
sbb
jae
iret
mov
pushf
call
or
dec
mov
out
jl
cwtl
enter
add
mov
rclb
pop
inc
lock
cmpsb
or
inc
dec
outsl
add
and
lods
mov
movsl
mov
xchg
pop
in
mov
xchg
add
or
push
sub
inc
sub
add
pop
fisubs
mov
jnp
movl
je
cwtl
int
ljmp
cmpsl
add
cmpl
lcall
push
jp
jge
xor
inc
fucom
neg
jbe
xor
add
and
clc
enter
in
or
add
imul
lret
adc
push
add
stc
and
xor
aas
sbb
cmpsb
cmpb
aas
lds
inc
mov
daa
add
data16
xchg
lret
in
shlb
pop
out
mov
shlb
sub
xchg
call
adc
aam
or
cld
mov
arpl
sbb
add
add
mov
push
rcr
jo
push
sbb
imul
fcomip
js
adc
cld
inc
adc
add
jge
and
add
out
xor
or
mov
jge
mov
dec
sarb
outsl
out
add
cmpsl
inc
fs
sbb
in
adc
xchg
setno
fidivrl
fcompl
adc
idiv
sbb
xor
mov
push
mov
cmpl
cmp
push
adc
test
jo
sarl
ret
add
in
movsb
lret
pop
jl
push
loop
es
push
adc
and
repz
push
push
aad
cmpb
sbb
rolb
dec
xchg
mulb
enter
push
fists
push
sarb
lea
and
cmp
cwtl
pop
aad
pop
mov
dec
add
dec
jle
xchg
out
in
aad
push
stos
adcb
add
sub
daa
add
insb
pop
int
jnp
add
into
jle
add
shrl
or
adc
pop
jnp
mov
pop
into
pop
fsubl
rcl
in
imul
sub
popf
cmp
inc
fdivs
mov
adc
leave
cmp
jl
add
cmc
test
fnstsw
pop
push
call
inc
jbe
jl
add
stos
xor
mov
and
dec
xor
add
ret
or
adc
or
lahf
jne
fld
lods
call
ljmp
sbb
sub
push
cmpsl
out
xchg
incl
push
int3
add
xchg
daa
je
sbb
add
sahf
jne
sarl
faddl
subl
and
fcoms
insb
add
decb
insl
rcrl
and
jae
enter
add
and
out
aam
pop
adc
mov
dec
addr16
loopne
inc
aad
add
testl
push
cltd
fadds
std
lods
or
call
js
cmp
lcall
pop
xchg
jge
ret
push
sbb
pop
int
fptan
push
or
pop
dec
lret
cmp
int
push
ret
jmp
mov
add
inc
lahf
movsl
cwtl
imulb
dec
stos
jbe
cmp
adc
pop
sub
popf
cmp
mov
pop
in
push
std
dec
inc
sub
loop
mov
fs
cltd
psubusw
aas
ret
xor
rclb
insl
dec
test
add
fldl
xchg
pop
pop
jns
push
sub
xchg
jae
push
inc
sub
inc
xor
xchg
cli
push
add
aas
fnstcw
jl
add
jnp
pop
inc
or
mov
xchg
ljmp
sbb
lods
add
stc
adc
dec
sarl
dec
clc
sbbb
dec
pop
add
int
fwait
mov
xchg
push
adc
cli
mov
dec
in
or
loopne
mulb
or
loopne
lock
adc
js
pusha
faddl
jmp
adc
out
xchg
add
call
mov
adc
inc
sbbb
add
xor
inc
adc
adc
jnp
ss
shl
lock
adc
leave
cli
sbb
inc
dec
sar
mov
pop
xchg
pop
mov
add
insb
or
fmulp
sub
xor
jmp
pop
mov
add
pop
aas
cmp
cltd
jno
and
xchg
jp
xlat
adc
dec
loopne
jae
add
inc
fs
int3
adc
mov
les
dec
dec
jle
and
insb
pop
cmp
adc
bound
add
cmp
jmp
sbb
mov
loop
repz
adc
xchg
dec
mov
imul
jle
add
jmp
out
loopne
sbb
stos
insb
mov
addl
outsb
lock
int
outsl
add
pop
test
add
sub
cmp
push
int3
mov
jae
mov
out
and
std
call
pop
test
inc
and
cmpsl
cwtl
addb
inc
pop
lods
shr
out
pop
xchg
push
ficoms
and
jo
out
popf
sub
stos
push
add
lcall
into
sarb
push
and
inc
ret
xor
inc
mov
add
add
fcmovbe
inc
add
cmp
mov
push
mov
or
or
mov
lahf
jo
fcoml
or
aad
lds
xchg
jecxz
dec
dec
mov
faddl
sub
sahf
imul
push
add
sbb
ljmp
or
xchg
stc
inc
pushf
sbb
mov
fsubr
push
nop
jae
jbe
sub
add
imul
dec
and
mov
movsb
pop
jp
and
add
inc
sti
inc
aad
sbb
jns
cmp
sub
cmpsb
ljmp
aas
push
out
daa
stos
bound
inc
mov
rorb
add
mov
jmp
push
xchg
jne
inc
ret
xor
scas
repnz
or
jbe
push
outsb
les
lods
sub
cmp
rcl
jno
es
cs
icebp
mov
sahf
rcl
sbb
mov
pop
test
dec
mov
jbe
stos
pop
or
je
mov
mov
mov
enter
or
pop
arpl
add
or
sbb
xor
js
inc
daa
adc
stc
adc
pop
out
das
or
mov
mull
sub
add
fisttpll
add
push
fwait
mov
adc
and
add
sbb
mov
jae
popa
pushf
call
movsl
mov
add
rcrb
outsb
scas
setl
lods
mov
outsl
and
les
fbstp
push
cwtl
inc
add
fdivr
inc
mov
test
mov
xchg
loopne
inc
sbb
orl
imulb
add
mov
mov
enter
mov
in
out
lahf
add
fdivrl
test
mov
push
daa
add
stc
push
out
add
sub
inc
add
aaa
sti
pop
lret
dec
and
inc
loop
add
lods
ljmp
insb
je
outsl
push
data16
pusha
adc
stc
mov
jg
add
push
addr16
pop
jmp
add
fcmove
out
mov
leave
je
sti
sub
add
add
adc
inc
mov
arpl
cmp
dec
outsl
adc
xlat
cmp
xchg
jo
or
push
mov
mov
adc
test
push
push
daa
mov
popa
and
cli
lods
pop
ljmp
aaa
mov
lret
icebp
clc
sub
xchg
jne
adc
movsl
add
aas
imul
push
add
icebp
push
cli
mov
inc
mov
mov
dec
rolb
mull
cmpl
or
cld
xchg
jmp
add
dec
addb
in
loope
mov
cmp
ficoml
sub
ret
push
push
mov
and
mov
pop
pop
loope
add
rcrl
lret
loopne
add
jmp
and
cwtl
add
fwait
mov
xchg
lret
dec
cmpsb
add
call
or
add
adc
sub
mov
nop
hlt
cmp
pop
and
mov
repz
cmp
add
xor
lea
fldenv
movsl
in
sbb
mov
cmp
mov
mov
rcl
xchg
xlat
pop
clc
int3
leave
shlb
sub
rolb
lds
or
push
dec
dec
inc
inc
mov
clc
mov
lret
pop
jbe
add
xor
dec
fs
dec
xchg
repnz
shlb
adc
pushf
sbb
mov
pop
add
pop
pop
add
cmp
ljmp
pushf
xchg
sti
pop
icebp
mov
adc
jge
and
mov
sbb
mov
add
gs
jo
add
and
add
push
mov
loope
add
aas
loopne
add
scas
sbb
jp
mov
pop
pop
test
into
ret
mov
lret
inc
add
scas
jno,pn
xchg
xchg
jmp
fimuls
add
mov
out
inc
cmpl
dec
xor
or
sub
sub
jbe
mov
repz
xor
ljmp
cld
cmc
and
lahf
xchg
fiadds
cmpsb
lea
mov
and
add
push
pusha
icebp
movl
push
lret
in
add
mov
or
das
mov
xorb
and
add
loopne
lcall
sbb
xchg
sub
jle
pop
pop
arpl
clc
push
fidivrl
lods
or
jbe
mov
rclb
dec
lahf
xor
mov
pusha
mov
add
test
flds
fdivrs
in
aad
call
mov
rcrb
or
jg
sarl
xor
es
icebp
lock
jbe
out
stos
je
add
push
inc
negb
loope
add
pop
xor
aaa
lahf
cmpsb
mov
ljmp
out
pop
dec
cmpsl
push
cmp
jnp
pop
jle
jbe
add
xor
es
adc
or
jg
sbb
sub
pop
inc
setns
push
out
testl
mov
sbb
cmp
sahf
shlb
ret
add
in
popf
push
mov
inc
mov
mov
mov
outsb
in
add
cmpsl
mov
add
sub
fcomi
xor
test
lods
inc
enter
or
out
sbb
sti
inc
push
add
add
subps
popf
ret
shlb
add
and
mov
fdivrs
cmpsb
cmp
mov
jb
add
mov
fldl
mov
and
stos
and
mov
pop
shrb
and
loopne
add
push
push
pop
jno
enter
in
aas
stc
icebp
xchg
sub
and
sti
xor
clc
inc
add
pop
sub
add
outsb
das
dec
and
add
adc
cmp
out
push
call
cltd
scas
xor
test
push
mov
xchg
and
mov
add
or
lahf
sub
popa
push
xor
bswap
xor
xchg
clc
lods
sub
iret
movsb
add
mov
mov
repnz
mov
jg
arpl
ja
add
sub
ret
sbb
je
cmp
iret
add
enter
clc
inc
incb
lea
jne
sbb
cmp
cld
mov
test
fs
xlat
push
add
xor
jecxz
fnstsw
loope
orb
fnstcw
add
aas
inc
or
cmpl
cmp
aam
sbb
mov
sbb
inc
test
jmp
xchg
pushf
add
lods
insl
push
cli
mov
cmp
sbb
inc
lret
jno
sbb
add
pusha
jb
add
lea
fstl
ret
jg
rol
cmp
jns
outsb
push
add
push
adc
xchg
xchg
in
in
addl
popf
test
push
stos
sbb
adc
mov
rcrb
adc
mov
push
repnz
fdivrl
pop
push
adc
pushf
cld
adc
repnz
sub
iret
sub
add
jnp
rolb
repz
jns,pn
fiaddl
movsl
std
mov
add
push
jns
cmp
andb
mov
test
push
cmp
pop
lods
cwtl
add
loope
jecxz
jle
mov
sbb
xor
cld
ds
lret
push
lock
cmp
test
sbb
add
xor
clc
dec
ljmp
xchg
or
sarb
imull
stc
xor
add
insl
lea
xor
dec
xchg
pop
add
int
shlb
insb
ds
mov
xor
or
add
push
ljmp
mov
xchg
dec
mov
cmc
or
inc
pop
jp
and
add
sub
xor
push
lret
sbb
and
into
movsl
and
add
sub
dec
mov
dec
lock
push
in
fstpt
nop
mov
data16
mov
and
dec
jmp
shlb
push
sbb
repnz
pop
cmpsl
jmp
mov
mov
mov
sub
mov
push
cmp
ret
lea
outsl
iret
testl
jno
fwait
sub
or
test
push
add
dec
lds
adc
nop
inc
add
sbb
and
dec
test
sbb
mov
jge
add
jns
pop
xlat
mov
lahf
add
out
inc
pop
mov
sub
jg
xchg
mov
push
mov
out
ljmp
cmp
push
pop
cld
jp
inc
jno
pusha
lock
jnp
add
xchg
xor
mov
push
repz
lods
call
xchg
pop
cmp
push
add
push
sbb
xor
jno
jnp
pop
lahf
push
xor
inc
icebp
add
repz
add
mov
dec
aam
inc
dec
push
in
add
jne
movsl
test
cli
xor
xor
and
lods
mov
mov
sub
dec
mov
pop
movsl
daa
mov
xchg
dec
outsl
push
pop
pop
scas
cmpsb
xor
pusha
sbb
or
testb
fs
std
sbb
aam
push
mov
or
add
dec
adc
push
mov
je
addb
int3
xlat
lock
jae
ret
jb
cmp
inc
add
in
inc
sub
enter
add
xchg
testb
add
lods
dec
cwtl
and
insb
add
fcomps
mov
inc
pop
fildl
push
cmp
fidivl
sbb
rorb
rorb
push
movsl
je
pop
push
mov
add
mov
or
cmp
and
imul
sub
adc
push
subb
aam
fildl
in
addl
ds
lret
adc
pop
push
mov
test
jge
adc
les
mov
cltd
in
ljmp
je
add
dec
push
popf
das
into
push
sub
cmp
add
pushf
daa
scas
jne
push
ret
add
in
jo
mov
repz
add
fldl
push
jg
add
inc
notl
add
push
fdivrs
push
add
loop
enter
outsl
xor
dec
jbe
add
push
mov
fldcw
mov
incl
add
fcmovu
test
add
pop
pop
popa
inc
js
adcb
es
inc
adc
mov
add
or
fmuls
fmull
add
sub
add
adcl
shrb
jnp
mov
xor
mov
add
or
popa
mov
or
icebp
and
mov
std
addb
movl
mov
inc
xor
jle
cmp
pop
mov
es
sahf
es
or
insl
push
shlb
jg
movsb
add
and
fcomps
sub
lea
xchg
jl
or
sub
mov
imul
or
bound
dec
sbb
fcompl
xor
xchg
lods
lcall
pop
out
mov
fcoms
lret
push
xor
nop
pop
clc
cli
push
xor
cwtl
stos
jo
sti
jge
lock
push
xchg
loope
les
pop
add
aad
and
aam
add
pop
dec
jnp
rcrl
add
jg
mov
push
mov
cmp
dec
add
fwait
in
scas
dec
sbb
cmp
sahf
pushf
xchg
out
add
mov
rcr
add
mov
push
mov
cmc
mov
add
push
mov
jnp
add
das
lret
popf
lahf
shrl
daa
mov
and
pushf
jg
idivl
add
sub
dec
add
lds
add
adc
inc
mov
xchg
cmp
ret
add
les
cwtl
add
xchg
add
lret
add
fwait
les
je
enter
sbb
pop
push
insl
add
test
cli
push
or
adc
shlb
adc
mov
and
fcomip
ja
add
pop
int3
in
aam
cmp
movb
stos
xchg
call
adcb
jnp
in
and
xor
add
lahf
push
mov
or
sarl
cs
add
imul
repnz
mov
dec
pop
pop
jae
xchg
les
mov
mov
rorb
fs
xorb
xor
adc
cmp
adc
adc
call
imul
dec
and
mov
sbb
shlb
movsb
add
pushf
jecxz
popf
sbb
fs
cli
fucom
add
stos
pop
mulb
fists
sub
xchg
sbb
mov
lea
sahf
add
into
and
add
lret
mov
decl
mov
pop
out
repnz
aam
add
ss
mov
outsl
add
aaa
adc
cmp
add
insb
scas
dec
dec
stos
push
repz
add
dec
cwtl
pop
and
icebp
pop
add
and
push
scas
inc
jae
add
push
sbbl
cmp
pop
aad
test
dec
inc
add
lret
push
inc
insb
jecxz
aas
fldt
pop
adc
inc
inc
cwtl
jo
sub
in
or
sti
sbb
cmp
dec
xchg
loope
sub
movl
cltd
fisubrs
add
push
cmp
push
or
mov
sbb
repnz
mov
push
inc
ds
sub
lods
arpl
sub
xchg
inc
dec
inc
and
js
ss
aad
pop
xor
and
add
fmull
and
adc
inc
inc
add
jno
lret
sbb
mov
testl
js
lock
add
test
mov
nop
and
mov
das
pop
movl
loope
repz
mov
sbb
cmp
inc
xor
inc
call
adc
sub
add
lods
adc
jg
add
stos
inc
mov
mov
and
cli
pop
or
repnz
mov
jo
mov
xorl
ror
addl
adcb
fdivs
cli
into
add
dec
mov
or
hlt
clc
and
xor
add
bound
sub
add
jbe
and
mov
andb
cmc
sar
mov
mov
jp
xchg
js
cwtl
jnp
aam
addl
mov
jl
add
mov
lcall
mov
add
imul
call
daa
cmp
pop
gs
jo
cmp
xor
sti
mov
outsb
roll
incl
or
cmc
push
bound
int3
bnd
test
insl
or
adc
add
mov
cli
add
jmp
shrb
xor
inc
lods
add
adcl
insb
xchg
sub
popf
out
add
je
cli
out
roll
mov
out
cwtl
bound
sub
sahf
adc
or
push
shll
or
and
lds
pushf
in
ret
adc
hlt
sub
das
inc
aam
sbb
mov
add
pop
or
xchg
incb
loope
mov
verw
mov
movsl
stos
orb
pop
sbb
and
xlat
aad
and
adc
xchg
sub
add
jg
clc
add
lods
dec
xchg
les
lret
mov
adc
cmp
scas
mov
arpl
push
jno
insb
add
fwait
shll
shl
add
repz
pop
cltd
mov
dec
test
push
add
xlat
sub
adc
fisttps
mov
sub
int
loop
loope
insb
popl
add
cmpsl
test
push
adc
or
loopne
outsl
add
xchg
add
ljmp
dec
xchg
dec
or
push
or
add
adc
imul
je
sar
pusha
adc
pop
in
rorb
mov
add
sbb
dec
mov
insb
mov
repz
repnz
adc
add
rcll
jmp
les
and
push
add
sbb
push
add
fadd
jns
xchg
push
mov
sbb
aam
add
jle
out
rolb
cmpsb
sub
push
mov
sbb
dec
lret
jp
pop
mov
pusha
xor
xchg
pop
push
cmpsl
dec
fs
add
dec
adc
shll
jnp
push
mov
or
add
xor
insb
loopne
rol
add
icebp
cmpl
jp
lahf
add
or
pop
lea
xchg
fadds
push
es
cli
adc
jmp
outsl
loope
sub
mov
lret
pushf
xorb
mov
dec
stc
addb
jmp
xchg
test
cmp
or
sbb
dec
push
aam
dec
call
negb
je
jmp
in
pop
inc
push
xchg
or
mov
js
sbb
cmp
fs
cwtl
xchg
adc
jae
add
xchg
mov
adc
enter
add
loopne
xchg
aam
add
xchg
sbb
ret
shrl
loopne
mov
xchg
jg
ja
cmc
outsl
aad
fsubs
dec
in
lds
sbbb
lods
lret
add
push
nop
stc
mov
pop
adc
push
jp
in
cld
inc
add
loope
int3
popa
pushf
cld
pop
add
push
lret
dec
enter
cmp
flds
xchg
aam
pop
mov
hlt
add
ja
or
scas
lahf
pusha
xchg
enter
mov
rorb
dec
cmc
push
jle
bswap
sti
mov
lahf
and
add
lret
sbb
jno
aas
sub
jmp
pop
jmp
loope
or
sbb
addr16
mov
test
xlat
inc
call
stos
or
cmp
scas
adc
inc
add
cs
ljmp
cmp
clc
repz
mov
mov
fisubrl
add
fsubrl
mov
aas
xchg
lods
iret
int
pop
dec
jmp
rcrb
push
mov
sti
sub
adc
push
movsb
mov
incb
aad
push
insb
subb
mov
repz
add
test
push
roll
aas
cwtl
ds
add
fbld
imul
fsubs
adc
add
das
adc
inc
roll
inc
add
xchg
mov
pop
rorl
and
add
psubusb
cmp
add
mov
xor
rcll
push
xor
popf
lods
add
mov
sbb
dec
or
add
repnz
pop
insl
aaa
push
sets
add
xor
inc
ljmp
addb
stc
add
insl
mov
mov
inc
movsb
pop
pop
add
xchg
sub
xor
add
push
movb
add
add
sub
fs
or
xchg
or
outsb
mov
mov
shlb
adc
jge
pushf
add
or
jno
mov
add
add
lock
das
sub
sub
lea
cwtl
xchg
jg
push
add
mov
mov
xor
inc
mov
pusha
icebp
sbb
bswap
cmp
mov
aaa
add
movsl
iret
push
repz
fisubrl
dec
pop
lods
mov
test
or
mov
sti
dec
pop
add
repnz
add
add
sub
push
aad
pushf
sub
mov
sbb
cmp
pop
adc
divl
add
jle
add
aad
dec
hlt
adc
add
mov
xor
jp
sub
pop
add
scas
in
or
aam
icebp
push
add
mov
xlat
mov
lock
mov
inc
adc
cmp
in
repnz
and
add
dec
jmp
mov
sub
add
jg
xchg
clc
ret
ret
mov
jo
icebp
mov
add
sbb
mov
fildl
mov
aad
std
sbb
sarb
cmp
and
add
outsb
sbb
dec
inc
jge
mov
add
out
pop
adc
enter
icebp
jmp
mov
std
jp
test
add
pushf
cltd
adc
enter
xchg
lods
add
adc
lret
stc
in
push
call
fmull
fs
shl
stos
inc
in
add
mov
ja
mov
daa
push
es
shl
cwtl
rolb
mov
mov
inc
mov
es
decb
orb
and
aam
add
add
fmuls
add
int
aaa
pop
ret
int3
adc
mov
ret
jle
cld
filds
add
daa
add
ds
add
aaa
inc
dec
cmp
mov
pop
pushf
push
jmp
lock
push
loopne
jp
and
stos
xchg
xor
mov
push
push
jne
dec
mov
mov
jge
lahf
mov
testl
mov
lods
xor
xchg
out
add
fstpl
push
ds
sub
push
lods
jne
subb
std
inc
jle
dec
aas
and
hlt
hlt
sbb
int
rolb
add
mov
adc
inc
cmp
jmp
int3
dec
jne
mov
ffree
add
stos
mov
xchg
es
addr16
std
sbb
aam
add
jp
sub
nop
xor
into
cltd
xchg
imul
adc
sbb
dec
stos
out
add
add
push
in
pop
je
add
fsts
push
xchg
adc
pop
xchg
add
addr16
adc
aas
repnz
add
mov
pop
in
add
pop
cld
shlb
push
dec
or
ret
or
adc
sbbb
incl
jl
mov
xchg
rcrb
mov
daa
or
jae
push
call
icebp
fwait
jnp
pop
xor
and
push
fsubl
rorl
pop
idivb
and
push
or
scas
dec
orb
push
mov
mov
out
fwait
push
cmp
mov
push
xchg
stos
sub
adc
ss
push
jmp
popa
xchg
cmp
xor
xor
rcrl
rolb
adc
jae
add
stc
out
or
rdmsr
mov
xor
mov
adc
pop
ss
repz
ja
and
inc
ret
or
push
sub
dec
add
mov
xchg
pop
stos
bound
cmp
dec
adc
int
xchg
add
rcr
dec
loop
add
frstor
xchg
sub
aaa
fsubl
adc
rclb
mov
pop
jno,pt
movsl
test
cld
inc
insb
pop
jo
data16
sbb
ds
cmp
lret
push
sub
call
dec
lret
add
testb
push
sub
sub
rolb
mov
ljmp
push
mov
adc
pop
or
sbb
sahf
aas
and
cmp
jb
scas
cld
cmpsl
xchg
push
mov
aas
push
xor
into
sbb
or
sub
and
rcrb
cmp
dec
add
and
mov
xor
cwtl
orb
cmp
inc
je
es
enter
push
cltd
or
mov
inc
cmc
add
mov
lods
out
cmpb
pop
lea
add
xor
in
jg
jno
les
lret
add
and
out
jg
adc
xchg
notb
add
in
pop
add
mov
cwtl
enter
jb
test
jp
jne
cs
mov
push
mov
ret
fdivp
popf
pushf
xor
jmp
test
andl
fidivrl
arpl
dec
mov
cld
lods
add
sub
jae
push
push
xchg
sub
or
cmp
adc
test
pop
mov
sbb
jno
andb
sbb
mov
pop
pop
les
adc
mov
pusha
pop
push
sbb
or
rcr
in
or
xchg
loop
push
add
dec
cmp
push
xlat
filds
adc
add
loopne
push
push
inc
mov
fidivrl
ss
jecxz
mov
test
push
out
sub
dec
xlat
xor
adc
add
adc
add
rcll
ja
std
cmpsl
sbb
fmuls
add
sub
adc
mov
sti
sub
push
movb
and
lea
loope
pop
inc
bound
pop
adc
sti
in
cmp
mov
cld
in
cmp
fs
mov
add
push
fistpl
dec
in
mov
pop
xchg
fmull
inc
push
xor
add
jl
sbb
gs
add
in
push
jge
inc
mov
pop
bound
and
negl
aaa
sbb
lds
enter
test
cmp
push
xorl
aad
test
add
lods
sub
mov
imul
push
out
add
imul
mov
addb
pop
cmpsb
sbbl
jae
xor
xor
and
pop
dec
dec
add
cmp
mov
pop
hlt
stos
push
enter
ret
inc
mov
in
adc
mov
call
push
adc
add
and
push
fucomi
lock
pop
sub
push
test
pop
or
sbbl
insl
push
pusha
pop
xor
shl
add
xchg
sbb
test
dec
add
jae
rcrl
test
flds
out
enter
cltd
scas
jae
je
pop
cmp
dec
jns
movb
imul
xchg
lret
mov
and
mov
pop
rclb
push
cmc
int3
dec
outsl
rcll
mov
cld
and
pop
cmp
pop
mov
aas
add
imul
cmp
les
xchg
lret
pop
inc
sub
cld
add
mov
and
loop
xorb
mov
jns
cltd
push
push
ds
push
subb
bswap
lahf
mov
cmp
fs
shl
test
rorl
sub
lods
add
and
lahf
add
push
dec
push
and
add
sbb
cmp
jecxz
bound
out
push
pop
push
call
mov
jmp
andb
pusha
dec
cwtl
aam
and
add
int
ret
xchg
push
add
dec
jg
sbb
test
inc
pusha
mov
rorb
sahf
sub
mov
cli
add
mov
bound
out
fbld
dec
out
arpl
sarl
pop
add
je
push
dec
out
imul
push
lods
or
sbb
add
hlt
pop
pop
push
mov
mov
iret
je
sarb
lods
fstl
lahf
inc
jge
js
jo
add
test
cmp
push
pop
add
les
add
push
dec
mov
hlt
ljmp
test
icebp
incb
mov
inc
std
loope
f2xm1
add
outsl
sbb
ret
xchg
and
mov
dec
xchg
add
lock
mov
shll
or
pusha
in
int3
inc
mov
cmp
mov
js
bound
mov
add
xchg
push
imul
jp
rcll
cmp
sarb
ds
mov
push
pop
add
mov
push
jne
inc
add
and
nop
mov
xchg
in
cmp
mov
jge
in
add
rcrl
mov
mov
xchg
jl
fwait
mov
mov
add
shrl
xorb
out
dec
aas
sahf
inc
sub
push
add
sub
mov
add
sub
mov
fstps
pop
movsb
call
jecxz
test
dec
mov
xor
shl
repnz
jae
cld
int3
push
cmp
xcrypt-ctr
cmpsl
pop
fnsave
fistpl
add
out
test
inc
iret
dec
add
fs
lret
add
adc
pop
sbb
enter
cs
push
add
add
fstpt
mov
push
int
repz
sub
and
xchg
scas
rcl
test
pop
bound
test
add
dec
pop
dec
rolb
dec
xchg
pop
imul
lods
cmp
push
mov
add
sub
or
xchg
les
insb
add
cmp
mov
mov
sbb
fildll
jbe
in
out
add
icebp
rcll
cmp
cwtl
pop
sub
mov
add
into
clc
mov
add
fldpi
inc
add
inc
loopne
sub
sub
and
push
pop
daa
mov
xchg
push
pop
push
ljmp
mov
or
cmp
push
flds
dec
repz
int3
adc
and
cmp
andl
stc
add
pop
shll
or
add
into
les
sbb
call
sbb
mov
add
mov
push
jle
pop
push
sarl
mov
imul
jmp
add
mov
int
rcll
xchg
or
push
xchg
push
jecxz
out
and
ja
push
add
sub
or
or
stos
cld
xor
stos
jne
popl
pop
jno
sbb
push
test
popf
add
cmp
mov
sbbl
xchg
mov
rcrl
mov
test
mov
xchg
nop
add
and
jbe
loopne
roll
mov
xor
pop
ds
add
or
or
je
add
dec
loope
dec
inc
pusha
inc
mov
in
test
inc
xrelease
pop
xor
sbb
scas
pop
sti
jmp
test
mov
add
xor
jmp
mov
jno
or
mov
imul
nop
mov
adc
dec
movsl
ss
push
hlt
sbb
cwtl
add
sbb
subb
dec
add
jno
sbb
cmp
jbe
xor
cmp
inc
sbb
lock
push
add
mov
fisubrl
mov
inc
add
mov
hlt
cmpsl
aam
xchg
xchg
pusha
sarb
rolb
js
lds
jg
mov
loopne
mov
xchg
pop
notb
cmc
pop
xchg
add
dec
adc
sbb
ljmp
dec
mov
jp
mov
fcoml
add
mov
popl
pop
mov
daa
js
add
pop
ret
mov
sarl
pusha
mov
pusha
xchg
push
aas
sbb
pop
in
push
pop
add
push
adc
add
cmp
dec
ds
xchg
dec
push
xchg
push
add
add
pop
stos
daa
add
scas
xor
hlt
fwait
enter
dec
xchg
sub
mov
add
lahf
icebp
cmp
in
mov
std
ret
xor
add
or
push
add
jno
pop
repz
ljmp
out
mov
pop
mov
lds
mov
add
sbbl
mov
cmpsb
jl
mov
enter
push
js
add
lret
out
xor
xchg
xchg
pop
mov
mov
add
or
adc
adc
sub
or
and
nop
xchg
add
popf
mov
jb
jbe
jle
push
idivb
fld
sbb
or
pop
sahf
imul
in
rorl
dec
outsl
add
clc
xor
ja
jnp
add
movsl
cmp
nop
icebp
xor
jns
fisubs
pop
aaa
out
sbb
lods
dec
mov
movsl
xor
sti
and
pop
add
nop
inc
stc
adc
inc
lret
lret
mov
adc
sub
pusha
fwait
inc
cwtl
add
and
push
pop
fidivs
imul
fisttpl
mov
ret
and
sbb
pop
mov
and
into
xchg
push
adc
insl
xor
xchg
inc
hlt
stos
push
xchg
lea
fucom
add
lock
add
enter
mov
pop
outsb
int
pop
xchg
lods
inc
mov
jecxz
or
sahf
adc
push
gs
sbb
movsb
ja
js
sub
mov
jno
push
dec
and
call
and
aas
xchg
xor
stos
sub
xor
pop
cli
sbb
ret
out
add
xlat
filds
mov
stos
or
rcrb
mov
stos
movsb
pop
in
push
adc
mov
push
push
popa
insl
mov
roll
aas
adc
jne
lcall
lea
adc
andb
cli
push
inc
testb
add
movsb
mov
mov
cwtl
js
sub
cmp
add
jle
or
add
daa
clc
lar
mov
dec
jl
push
adcb
loop
push
add
orl
dec
in
stos
xchg
mov
aam
jbe
cli
and
add
mov
push
andb
jno
add
rcrb
sub
add
cltd
fisubs
mov
fldenv
sti
cld
mov
push
add
pusha
stos
out
xchg
xorb
mov
jne
jnp
inc
dec
out
repnz
pop
add
sarb
jl
inc
clc
cmp
jo
aas
add
test
stos
dec
dec
mov
or
lcall
xor
shll
mov
outsb
mov
sbb
adcl
mov
into
jae
fistpl
leave
fs
cli
cmp
int3
xchg
or
mov
pop
inc
cwtl
orb
mov
sub
cmpl
aam
sub
aaa
add
jmp
lea
inc
mov
rclb
mov
mov
enter
sbb
jg
mov
add
gs
rolb
ja
inc
and
fistpl
add
or
popf
je
pop
or
rcrb
add
insl
xchg
rol
pop
jge
punpckhwd
push
dec
lret
fadds
cmpsb
cmc
lods
cmp
add
repnz
lds
jbe
mov
xor
movsb
xor
inc
add
push
aad
push
in
in
xchg
insb
addr16
rolb
in
ja
movsl
cs
mov
push
cs
scas
sbb
addr16
mov
aam
add
add
popl
xchg
jp
sti
or
or
test
clc
jle
test
cmp
cmpsb
push
mov
mov
add
or
fcomps
inc
adc
arpl
xchg
mov
roll
jb
sbb
jecxz
push
pop
cmpsl
or
add
into
xchg
dec
call
and
pop
mov
fcmovb
add
jl
addr16
pop
adc
add
mov
jg
nop
add
sbb
and
cmp
mov
xor
popa
cmpb
push
add
mov
or
addb
ja
and
or
inc
add
mov
int
xchg
hlt
cmp
mov
add
mov
sub
adc
inc
fldl
xor
test
pusha
mov
and
xchg
jnp
je
mov
pop
arpl
jno
movb
adc
dec
jg
push
cmpsb
xorb
jns
leave
fidivrs
sahf
movsb
adc
pop
adc
push
lock
pop
call
jnp
add
in
add
in
add
inc
xchg
lock
fcoms
cli
pop
jb
pusha
out
mov
sti
add
xchg
inc
sub
xor
cltd
cld
or
mov
scas
jb
cmpsb
arpl
sub
xchg
arpl
mov
and
fmull
sbb
jge
and
add
gs
mov
jnp
sti
adc
add
subl
popf
add
out
push
add
ljmp
out
pusha
lods
mov
add
sub
mov
mov
pusha
and
test
add
push
sbb
rcr
jns
xchg
add
mov
and
add
in
cmp
stos
repz
je
cmpsl
sti
jl
mov
xor
jbe
mov
call
rorl
pop
sbb
xor
iret
dec
ret
mov
mov
jns
add
lock
popf
pop
outsb
inc
mov
inc
pop
mov
in
pop
test
mov
xor
push
push
inc
push
pop
pop
cmp
test
fldl
mov
cwtl
mov
pop
inc
fsubrs
pop
sbb
sub
sbb
adc
and
mov
in
add
fs
cmpsb
mov
dec
stos
les
add
scas
mov
push
mov
aaa
jo
ljmp
and
shrb
adc
adc
les
fdivl
or
fildl
out
ret
pop
js
adc
xchg
add
out
aaa
jo
data16
out
lret
enter
add
fwait
mov
mov
clts
dec
mov
mov
ret
loopne
lds
and
pop
add
cmp
mov
in
imull
pop
mov
xchg
and
jae
stc
in
test
orb
ja
pop
mov
mov
pop
add
lods
or
ret
cs
mov
sub
je
popf
cmpsl
xchg
repnz
icebp
outsb
aam
mov
pop
ja
add
bound
add
mov
and
add
sub
inc
jo
enter
jmp
jo
rcrb
repz
pop
call
mov
jb
pusha
add
inc
nop
add
add
sahf
pusha
jle
rorl
and
cmp
stc
cmp
movsl
mov
pop
ds
add
leave
in
mov
std
push
fdivl
test
xlat
loopne
stos
adc
call
lods
add
and
ror
fdivrs
test
add
xchg
jg
mov
jecxz
add
cmpb
bound
sub
adc
sbb
jo
xor
mov
mov
std
or
testb
jb
clc
inc
mov
cmp
roll
ds
ljmp
lea
ss
add
ja
sub
shl
sbb
adc
aas
sub
addb
stc
aaa
pop
lret
sbb
mov
mov
fnsave
push
stos
aaa
sbb
iret
loop
fbstp
cmc
or
jno
mov
cmp
stos
test
imul
testl
and
fs
xchg
cld
pusha
loop
inc
add
xchg
rorb
sti
ja
add
mov
jle
es
sbb
sldt
push
mov
mov
cmp
mov
loop
inc
lock
add
cmp
fs
inc
push
and
and
je
sub
out
xor
int3
lds
filds
sbb
std
add
aaa
jbe
les
push
int3
or
sbb
clc
mov
dec
sbb
jo
lock
lret
lds
xchg
ss
stos
cli
stos
push
addb
mov
mov
inc
ja
inc
lahf
inc
data16
call
xchg
cmp
and
push
add
push
mov
xor
mov
add
push
stc
icebp
into
notl
dec
add
mov
xchg
aas
adcl
mov
add
jo
inc
sbb
mov
push
mov
inc
sub
aam
xchg
lods
xchg
jp
outsl
inc
cmpsl
xchg
sti
jbe
or
fxch
add
adc
lock
adc
out
sub
jge
or
and
ds
pop
add
xlat
add
mull
add
mov
in
add
or
dec
cmc
popa
jno
inc
sub
jle
and
add
fdivrs
bound
push
pushf
popa
add
icebp
sahf
sub
test
call
je
or
adc
mov
xorb
pop
repnz
xor
mov
add
pop
jmp
push
fldenv
add
sbb
or
popf
in
pop
pushf
or
sbb
sub
pusha
mov
in
fistpl
out
add
das
push
cwtl
push
mov
add
mov
out
push
dec
enter
cmc
jle
push
pushf
pop
mov
push
and
dec
fucomi
xlat
and
stc
nop
sbb
add
cmp
mov
add
mov
gs
mov
add
loope
sbb
aaa
push
shl
shll
fiaddl
in
add
xlat
jl
or
stos
stos
jg
addl
pop
stc
push
push
add
sub
inc
aas
mov
sub
cmovb
mov
add
sub
jp
add
pop
js
cmp
mov
and
dec
sub
or
ss
test
stc
loope
jl
cltd
sub
add
out
dec
mov
movl
cmp
jp
add
push
inc
push
pop
rcl
nop
ja
or
lods
jmp
jno
add
mov
imul
jbe
ja
leave
xor
or
adc
mov
pop
mov
lea
data16
mov
cmpsl
sbb
rol
lds
nop
adc
dec
dec
sahf
std
mov
inc
add
mov
jbe
arpl
rcrb
jns
out
lods
inc
sub
frstor
in
aad
mov
add
arpl
jecxz
add
sub
xchg
fbld
lods
in
add
movsl
jne
jle
adc
mov
cs
ret
stos
and
sbb
push
mov
aad
cmc
sbb
and
or
sub
call
and
aas
add
gs
push
shll
add
inc
jb
sub
idivb
sahf
jl
pop
pop
out
push
in
add
test
pop
add
push
pop
xchg
adc
cwtl
add
pop
add
das
mov
jnp
es
and
sarl
jmp
mov
pop
cmp
jno
dec
add
repz
push
add
or
mov
add
out
sub
add
xchg
inc
lods
pop
sbb
movsb
add
sahf
jg
add
ds
cmpsl
out
fildll
add
sbb
adc
cmc
cmp
stc
jae
pop
jg
and
jmp
pop
call
mov
scas
js
xchg
push
xchg
dec
out
push
rcrb
testl
add
mov
aam
sbb
stos
add
scas
imul
add
fbstp
xchg
add
cld
or
xor
mov
shll
xor
jg
pop
jne
add
es
dec
loop
call
cmp
add
and
mov
add
xchg
and
mov
sahf
add
aaa
xor
push
jp
add
mov
lds
int3
test
leave
fsubrp
ret
cmp
nop
iret
js
outsb
mov
dec
je
xrelease
jbe
or
hlt
mov
dec
outsl
push
lret
mov
sub
pop
ljmp
sub
test
mov
mov
inc
movsb
pop
pop
or
push
mov
or
jo
sub
add
fs
inc
pop
jl
cmp
aad
cmp
mov
jne
push
mov
mov
dec
add
in
sti
clc
push
loope
and
add
lret
cmp
in
fmuls
add
adc
fiadds
cmp
lea
rorl
les
push
inc
fwait
pop
dec
nop
loopne
push
in
mov
and
pop
fdivl
sub
add
out
fs
mov
lods
xchg
push
mov
fadds
sbb
inc
sbb
test
mov
rcr
data16
push
inc
mov
call
jge
push
shlb
pop
or
sbbb
push
add
faddl
loopne
clc
sbb
jae
sub
add
adc
sti
add
cmpl
inc
adc
or
xorl
and
fs
cmp
arpl
sbb
cmc
movsl
or
add
sbbl
push
mov
sub
adc
jae
add
xchg
rsm
hlt
cmp
fiadds
jle
and
shll
ret
push
int
sub
add
push
xor
xorl
and
or
adc
mov
push
stos
or
sar
pop
std
push
inc
add
fimull
call
popf
pop
in
pop
mov
rol
xchg
in
divb
xor
test
popl
add
in
mov
orl
out
lock
push
add
dec
adc
pop
inc
sbb
in
bound
pop
add
mov
xchg
add
aam
movl
roll
fildl
aam
jg
in
adc
mov
dec
daa
add
loop
popa
std
sarb
xor
adc
addr16
sub
mov
add
mov
mov
cltd
insl
add
mov
lods
add
sbb
inc
pop
mov
fsubrs
subb
nop
add
push
icebp
jns
and
jl
add
sub
jo
fs
push
outsb
add
lret
jecxz
shll
bnd
or
adc
and
neg
push
frstor
xor
lods
insl
out
or
lock
pop
add
popl
ljmp
mov
cmp
insb
inc
sbb
or
fldcw
mov
add
in
pop
add
pushf
xorb
jno
cli
mov
inc
push
fnstenv
add
repnz
xor
test
mov
sbb
add
ret
pusha
xchg
je
jge
dec
rclb
add
add
cmpsl
cmp
pop
dec
scas
ja
sub
dec
ret
push
push
sbb
sti
mov
jne
icebp
aaa
rcr
mov
punpckhdq
movl
cmp
xor
outsl
jecxz
add
ret
pop
stos
fldcw
iret
pop
cwtl
jnp
sarb
dec
loopne
leave
push
int3
idivl
push
ror
add
outsl
fs
mov
rorb
pop
dec
outsb
xchg
add
cmpl
movsb
jo
inc
insl
add
rolb
push
mov
add
dec
dec
hlt
addr16
inc
or
xchg
repnz
movsb
insb
sub
fstpl
rcrl
xchg
cmp
push
add
or
mov
call
mov
xor
xor
stos
loope
jbe
dec
jg
jb
test
jno
push
sub
loopne
mov
hlt
sub
or
inc
in
mov
scas
mov
fnstcw
mov
xorl
cmpb
es
add
mov
sbb
inc
add
mov
push
pusha
or
xor
add
jge
xor
dec
orb
mov
jno
outsl
or
dec
push
in
sbb
dec
shrl
je
xchg
sub
add
sahf
pop
int3
xchg
push
pop
fnsave
loopne
add
or
cmp
add
dec
bound
movsb
out
pusha
xor
jmp
sbb
loope
or
cmp
ss
add
outsl
int
add
add
mov
jmp
pop
pop
lret
and
cli
xor
or
xor
cld
xchg
in
loopne
nop
mov
push
xor
lret
and
sbb
fiadds
add
in
popf
pop
mov
push
sub
cmpsb
or
cwtl
imulb
add
jmp
hlt
add
jb
pop
jl
mov
mov
stc
stos
or
cli
mov
sub
dec
inc
add
das
cld
push
ja
pop
add
ljmp
stos
jno
popa
incb
mov
cwtl
rcrl
xor
call
mov
dec
xor
in
les
mov
aaa
mov
test
bound
sti
lock
sbb
repnz
icebp
xchg
pop
mov
pop
out
xchg
jge
push
add
cmp
repnz
imul
sti
sub
or
jle
hlt
mov
add
aas
fnsave
inc
repnz
xor
pusha
adc
xor
out
in
test
stos
mov
cmpsl
sbb
dec
mov
clc
pop
dec
negl
orl
dec
mov
inc
rcl
and
hlt
mov
cmp
dec
push
xchg
adc
cltd
subb
loope
push
fwait
aas
add
sbb
add
mov
mov
loop
ret
rorl
add
movsb
cwtl
pop
dec
xchg
rclb
in
add
and
add
dec
mov
call
negb
cmpsb
fildll
and
sub
sbbb
dec
mov
add
xchg
jmp
addr16
sbb
xchg
sub
add
pop
xchg
imul
sub
fdiv
cltd
mov
lods
incb
outsb
sub
test
pop
lds
add
mov
cmp
add
testb
mov
push
pop
lods
mov
orb
pushf
push
shlb
cmp
pop
mov
dec
subb
mov
mul
or
ljmp
bnd
adcb
mov
inc
cmpb
cs
and
cmpsl
push
mov
mov
jno
test
lods
fwait
gs
test
add
mov
mov
pusha
jo
add
lds
dec
mov
push
add
sti
cmpsl
cmp
int
adc
add
adc
cmp
jb
add
lds
mov
add
cmp
jae
cmp
mov
and
test
loop
add
cmp
sahf
lods
es
pusha
adc
sbb
adc
lea
je
mov
mov
xchg
add
jp
jmp
fcomps
mov
add
push
nop
add
or
in
dec
repnz
add
mov
lahf
cmp
rcl
fdivp
cwtl
ja
push
les
cmp
dec
xor
jg
cmp
sbb
cwtl
sbb
sbb
out
pop
adc
lcall
mov
and
imulb
fs
sbb
sbb
minps
jmp
loopne
mov
xchg
nop
lea
and
je
add
lcall
mov
add
xor
mov
ds
cmp
jb
or
xchg
xchg
or
cmpsb
int3
add
loop
jle
repnz
subl
loope
pop
dec
das
rorb
cmp
cmpsl
jg
cmpsb
or
out
xchg
inc
test
xchg
add
xchg
shl
or
mov
adc
mov
xor
ror
push
out
inc
fsubs
orl
es
jp
add
adc
daa
testb
pop
cmp
addb
fldenv
ljmp
pop
jmp
inc
and
push
inc
loope
mov
xchg
loopne
or
adc
pushf
and
pop
inc
pushf
sbb
xchg
adc
xor
jae
mov
imul
sub
xchg
jbe
mov
add
add
arpl
and
sbb
cmpsb
mov
or
mov
movsb
add
and
cmp
imul
xor
stos
and
outsl
adc
add
orb
inc
mov
jo
push
or
fwait
scas
out
mov
pop
mov
or
mov
aaa
add
push
scas
jmp
cli
jne
mov
fiadds
inc
jae
add
mov
push
lret
add
dec
xchg
rcll
into
orl
cltd
hlt
mov
movsb
fwait
ja
dec
xor
test
pop
pop
mov
add
dec
out
outsl
scas
sbb
outsb
pushf
push
lock
mov
sti
shlb
jp
add
into
insl
xchg
sbb
adc
jmp
inc
add
mov
add
sub
js
inc
add
jbe
push
mov
in
xor
jo
mov
verw
jae
cwtl
xor
xchg
add
ss
sbb
rolb
jne
pop
mov
push
fs
pusha
mov
dec
push
orl
mov
jno
loope
cmpb
xchg
or
mov
and
stos
xorb
cmc
div
popf
scas
add
inc
xchg
jmp
scas
insw
jmp
sbb
push
mov
add
in
sbb
or
repz
leave
or
push
add
cwtl
add
lods
cmpsb
inc
lock
cli
out
and
sarb
in
pop
lret
sub
lods
xlat
enter
add
cmpsl
sub
hlt
scas
xor
cmpb
lods
movsb
mov
add
and
pusha
shrl
dec
add
xchg
mov
pop
cmp
imul
jae
ds
sbb
push
jo
cmovbe
aad
pop
subb
leave
dec
push
je
pop
mov
pop
mov
cmp
fbstp
cld
ds
add
jo
fcmovbe
cwtl
ds
jmp
jo
add
lahf
in
mov
and
pop
aas
pop
nop
into
add
arpl
leave
xor
divb
add
add
mov
repz
dec
je
rcrb
outsl
mov
add
jnp
or
add
jbe
shll
enter
es
js
sbb
jno
adc
mov
loopne
insl
add
fbld
call
incb
cmp
sub
bswap
or
cmpsb
sbb
mov
mov
jb
add
adc
cmp
inc
xor
lret
inc
or
pop
aam
and
bound
movsl
pop
test
inc
adc
cmp
pop
mov
pusha
lock
push
mov
inc
inc
int3
xor
push
sub
inc
or
jne
mov
lcall
inc
pop
ret
dec
scas
mov
fs
movsl
add
int3
or
xor
add
dec
sub
or
arpl
sti
mov
aam
movlps
add
cld
adc
pop
jmp
adc
lahf
add
or
pop
or
movsl
pop
sbb
fwait
pop
mov
push
mov
jmp
sub
pop
sub
xchg
jne
mov
test
jnp
cmpsb
enter
mov
int
ss
mov
or
pop
outsl
adcb
leave
and
out
dec
ret
add
sti
jo
cli
mov
mov
xor
popa
jg
add
ss
pop
mov
jecxz
jo
add
or
sbb
sbb
mov
jle
push
cmp
add
pop
pop
add
adc
xchg
jecxz
repz
aaa
push
jge
lret
jg
and
add
andb
lahf
rclb
out
clc
mov
dec
loop
cmp
pop
push
add
into
or
xchg
fldt
jb
dec
xchg
jbe
dec
adcb
adc
mov
ss
add
add
sti
imul
cmpsl
pop
pop
add
jbe
cmp
pop
add
lret
jmp
add
loopne
in
pop
mov
dec
jo
test
xor
les
pop
or
mov
test
push
in
adc
pusha
sbb
call
and
push
ficompl
lods
out
outsb
jmp
inc
pop
jbe
xor
mov
cmc
xchg
or
jbe
xchg
add
fldenv
nop
add
testb
jne
xor
add
je
fsubs
sub
mov
out
add
and
movb
pop
test
jmp
cmp
jge
outsb
ss
fadds
xchg
in
add
lods
inc
pushf
or
add
dec
pmulhuw
or
add
int3
add
jl
loopne
shlb
add
jp
sbb
testl
arpl
and
movsb
pop
jne
pusha
inc
loopne
mov
jne
or
popa
stc
xorl
pusha
xchg
jnp
pop
stos
inc
pusha
xor
mov
push
inc
ror
push
sbb
push
jge
sub
jle
test
xchg
scas
shlb
inc
filds
rclb
in
shrb
fs
cld
fisubl
mov
or
add
mov
adc
xchg
push
sti
add
mov
shr
mov
jo
xchg
mov
pop
jo
jns
bsr
dec
add
add
jmp
rcr
ljmp
jmp
mov
jb
pop
adc
sbb
int
add
push
push
data16
dec
mov
and
push
adc
adc
rorl
add
adc
icebp
jbe
pop
mov
popa
rcll
inc
fldenv
inc
movsb
mov
push
sub
loopne
jno
push
sahf
ja
mov
xchg
xchg
sbb
pop
daa
lock
das
shl
inc
aam
cmp
add
pop
pop
iret
push
push
nop
or
imul
into
mov
push
scas
cmp
pop
xor
adc
adc
cmovle
clc
in
mov
sub
mov
mov
sahf
push
jbe
cmp
iret
pop
mov
rorl
je
xor
fisubrl
mov
mov
adc
loope
push
adc
jle
js,pt
jl
jns
pusha
xor
push
enter
fcmovb
out
pop
jle
add
add
addb
ss
imull
test
jge
cmp
les
out
lock
xor
les
push
pop
mov
movsb
call
add
mov
sti
pop
jnp
or
xchg
mov
push
xchg
rolb
pop
push
xchg
jbe
xchg
or
iret
imul
stos
dec
xor
mov
adc
pop
cmp
push
insb
insl
icebp
pusha
and
push
mov
sub
fldl
push
cmpsb
sbbl
sub
jb
add
add
imul
cmp
mov
mov
and
mov
inc
xchg
dec
cmc
mov
and
add
shl
add
dec
mov
xor
dec
add
push
sahf
int3
mov
sbb
inc
andb
jno
sbb
shrb
and
mov
popa
dec
scas
addb
mov
pop
enter
add
ljmp
sbb
or
mov
test
sub
add
rolb
fldl
mov
fmuls
ljmp
stos
lods
pop
add
leave
or
sbb
and
ret
xor
sub
orl
test
xor
pusha
xchg
aas
addb
loopne
push
sbb
xchg
cs
in
push
int3
or
inc
insb
mov
sahf
pop
cmp
add
jmp
add
add
jl
mov
imul
add
pop
mulb
mov
add
ret
add
or
call
fidivl
sarb
jecxz
popl
icebp
int3
iret
mov
and
push
dec
ds
push
or
cwtl
sbb
int
add
dec
ljmp
nop
adc
int
cld
push
dec
add
push
enter
jp
shl
test
add
mov
fsubrp
inc
stos
cmp
cmp
add
jnp
xchg
add
cmp
sar
bound
or
into
shlb
adc
ficompl
sub
rcll
js
out
out
push
jp
stos
hlt
rolb
adc
loop
jno
push
mov
or
cmp
stos
xchg
in
and
or
sbb
or
testl
pop
mov
or
and
add
popf
les
jno
pushf
icebp
stos
dec
cmp
mov
add
or
dec
popf
and
sub
mov
lcall
sbb
popf
ss
xor
mov
daa
mov
cmp
loope
lcall
mov
mov
js
pusha
das
lcall
and
negb
movsl
push
lcall
push
add
cmp
push
ret
push
shll
or
dec
lea
adcb
push
rcrb
and
inc
dec
ficoml
add
or
test
pop
pop
push
or
andb
push
movsb
jl
push
add
sbb
arpl
lock
xchg
add
mov
lods
call
pop
mov
les
loopne
lcall
push
push
in
sub
sti
cmp
mov
jl
or
jnp
or
ret
hlt
popf
sarb
stos
and
mov
js
adc
subb
jp
mov
dec
repz
push
pop
or
aad
in
add
push
and
inc
jae
adc
shlb
jns
cltd
add
push
leave
imulb
push
or
adc
dec
in
sub
adc
and
or
mov
pusha
sub
push
test
adc
add
cmp
pusha
inc
cltd
stos
mov
fldenv
idivb
out
dec
loopne
cmp
rolb
pop
add
lock
movb
add
dec
mov
adc
xor
dec
push
hlt
popa
cwtl
mov
jmp
xorl
push
cmp
inc
lret
jno
sub
mov
add
outsl
cmpb
inc
dec
mulb
loope
cmp
xor
test
xchg
sbb
add
mov
ja
mov
sbb
fs
pushf
mov
hlt
daa
pop
add
cmp
lret
mov
pop
lock
jg
and
adc
out
pop
loope
inc
fadds
rorb
pop
inc
xor
xlat
xlat
stos
add
movl
mov
loopne
ja
sub
sub
mov
lret
gs
aas
mov
mov
jnp
inc
shrb
lcall
add
pop
xor
loop
inc
adc
rcrl
xchg
and
adc
cmpsl
or
ljmp
jecxz
xchg
or
rorb
aad
sub
out
xor
aam
add
rorb
iret
sbb
ficomps
sub
sbb
sbb
ss
ret
sub
xchg
shlb
shlb
and
push
or
dec
mov
xchg
js
xchg
jl
sbb
movsb
jae
les
and
movsb
sub
jp
repz
push
or
cmp
popf
pop
xchg
in
xor
adc
lds
mov
les
fdivrs
adc
in
sub
mov
xchg
adc
lods
push
mov
xorb
pop
or
mov
dec
gs
xchg
fmul
xchg
sub
mov
nop
sti
pop
inc
jne
mov
frstor
pop
xor
adc
mov
mov
sub
xchg
mov
sbb
push
or
add
fsub
roll
decb
inc
enter
or
popf
dec
call
arpl
xchg
iret
jns
stos
das
pop
mov
push
add
jns
shlb
pop
add
data16
es
jg
mov
adc
or
or
sub
sbb
jno
les
repz
in
shlb
add
push
insl
sbb
adc
fisttps
movsb
sbbb
adc
jl
mov
lea
add
fwait
cmp
adc
sbb
pop
ss
mov
mov
movsl
jnp
or
add
and
mov
in
xchg
add
imul
pop
xor
outsl
or
inc
clc
jp
xor
sarb
lret
sbb
mov
add
ds
filds
nop
inc
or
and
push
pop
and
hlt
jne
and
sub
mov
jmp
js
or
sbb
add
out
cltd
mov
sbbl
push
push
mov
lret
pop
xor
sub
dec
sahf
and
add
adc
into
inc
mov
popf
stos
jne
add
loope
cmc
mov
jae
xchg
ret
sbb
pop
movsb
orl
pop
add
pop
push
cmpsb
mov
add
popa
fwait
pop
jp
add
jg
dec
fs
mov
sbb
aam
adc
cmp
inc
jae
aas
xchg
adcb
xchg
sbb
jp
and
insb
push
mov
daa
mov
xchg
sub
mov
out
loope
clts
cs
in
or
mov
mov
or
push
or
test
inc
test
sub
jmp
mov
cmp
popf
orb
adc
and
add
jne
pop
sbb
sbb
add
dec
or
or
and
add
scas
push
addr16
mov
inc
es
cmp
add
mov
xchg
loope
or
xlat
daa
shlb
cld
and
or
stc
pusha
cmpsl
cmp
imul
in
mov
xor
fadds
sbb
sbb
into
inc
bound
and
push
cmp
in
sbb
rcll
jmp
sbb
jp
cmp
xor
push
sub
adc
lods
bound
mov
out
xchg
sbb
mov
lret
adc
pushf
pushl
and
add
jb
cli
sbbb
push
dec
sub
adc
push
cwtl
cs
lock
sub
je
in
inc
lea
pop
xchg
lea
adc
lods
push
das
cld
fimuls
sbb
lock
in
mov
and
dec
jbe
insb
adc
sbb
mov
psubusw
xchg
adc
add
or
in
clc
daa
enter
mov
add
scas
mov
out
sbbl
pop
jae
leave
fsubrs
rcrb
int
add
in
add
mov
ja
adc
or
das
add
mov
sti
orl
xchg
push
xorl
pop
lods
push
xchg
popl
int3
add
hlt
fadds
mov
imul
lods
dec
xchg
sub
push
sub
mov
mov
dec
adc
lock
out
pop
cmp
cmpb
int
push
cmp
ret
push
cwtl
pop
mov
add
jae
xor
insb
dec
jno
add
imul
pop
and
add
popf
and
and
popf
adc
std
mov
addr16
cmp
push
rclb
adc
sub
repnz
xchg
pushw
out
xchg
mov
addb
pop
addb
inc
in
rclb
adc
js
xor
inc
loope
ret
nop
iret
js
adc
jge
test
xor
jbe
lock
ljmp
jmp
push
push
hlt
and
xchg
jae
loope
dec
into
jb
repnz
ja
or
or
or
push
or
mov
ljmp
test
movsb
mov
push
stc
sub
jbe
and
js
add
and
mov
popf
pop
xchg
int3
and
jmp
push
jbe
add
mov
rcll
call
xor
nop
sbb
sbb
and
add
sbb
loope
xchg
arpl
popa
addr16
or
js
stc
xchg
jbe
clc
lahf
cltd
aaa
jno
sbb
ret
xlat
cwtl
fsubrs
dec
stos
out
sbb
mov
int
adc
inc
int3
sub
pop
loopne
add
jge
repnz
add
xlat
jno
incl
adc
add
dec
ss
xchg
mov
xchg
js
add
stos
loop
sub
adc
cmpsl
add
fs
loopne
clc
lods
add
jns
jl
icebp
pop
cmp
js
jno
ret
push
mov
jg
hlt
sbb
std
mov
stos
pop
xor
sub
out
popf
mov
mov
jecxz
add
ds
mov
add
ret
daa
ja
nop
mov
hlt
mov
shlb
mov
scas
cmp
pop
cmpb
js
loope
cltd
adc
add
in
mov
shlb
jno
mov
jae
add
dec
lock
cwtl
add
sub
cmp
cmp
iret
mov
cmpsb
add
inc
imul
add
xor
arpl
and
lret
rorl
mov
ss
mov
push
or
leave
and
sub
adc
lock
add
std
shrb
outsl
jbe
scas
push
enter
test
in
inc
push
stos
lret
and
dec
sbb
sub
movsb
add
loope
ret
dec
roll
out
or
nop
push
cwtl
fsubs
push
xor
popa
inc
xorb
bound
mov
add
jl
loope
fisttpll
imul
add
mov
cmp
popl
xchg
adc
loop
pop
imulb
stos
add
in
push
mov
dec
mov
add
stos
imul
pusha
or
mov
xor
jo
sub
add
mov
jmp
cmp
fsubr
jo
sbb
xorl
outsb
call
cs
adc
std
outsl
and
add
cmp
jle
xchg
mov
lods
inc
repz
aam
jmp
repnz
ret
mov
lret
xchg
pusha
push
jnp
roll
cmp
loope
mov
je
push
cmp
adc
pusha
or
pop
int3
das
xchg
mov
fsubr
push
movsb
daa
pop
fiaddl
mov
jno
add
out
sbb
sbb
psrad
sbb
std
jl
add
stos
je
movl
adc
pop
jae
xor
push
out
sbb
sub
pop
mov
add
out
stc
orb
add
stos
in
addr16
leave
lds
fst
lock
or
xchg
push
divl
lcall
pop
pop
cmp
mov
jl
scas
sub
icebp
pushw
rcl
mov
pop
popa
jno
sub
clc
lods
pop
loop
std
xor
dec
int
add
ds
jg
das
ljmp
sub
imul
push
add
jbe
xchg
insl
mov
nop
shll
popa
lock
sarb
pop
mov
add
inc
xchg
add
push
test
rcr
add
xor
cmp
in
or
and
clc
add
or
cmpl
or
add
pop
mov
cmpsl
jnp
add
outsl
rolb
ja
in
pop
and
fwait
cmp
cmp
popf
xor
push
and
adc
popa
add
xor
or
je
mov
push
xor
adc
add
cli
jg
pop
cmp
and
les
mov
repnz
ret
out
inc
in
or
cld
ficoml
jo
or
repnz
out
cltd
inc
insb
xor
aas
push
jne
mov
and
mov
add
jo
mov
pop
pop
jne
jbe
and
cmp
xchg
mov
lcall
mov
into
loop
inc
jg
cwtl
adc
outsb
imul
add
inc
int3
fidivs
inc
enter
loopne
ret
pushf
jl
fists
add
shlb
cmpsl
push
sub
pop
and
test
cli
arpl
mov
shrb
adc
add
mov
loope
sbb
scas
or
cmpsl
xor
sub
addb
adc
std
pop
movsl
pop
rolb
fsub
repnz
push
popa
mov
dec
ret
lret
add
aas
daa
mov
fstpt
add
cmp
pop
sbb
popf
pop
repnz
cli
addl
jae
pop
mov
sbbb
shl
add
dec
mov
lock
jle
in
pop
daa
inc
mov
sbb
popf
aam
or
call
shl
xor
mov
das
xor
in
iret
fwait
push
xchg
aas
insb
sub
clc
cmp
pop
std
xor
add
cmp
mov
and
sbb
add
comiss
push
mov
adc
sti
sbb
movb
mov
mov
pop
jb
gs
push
add
sbb
or
adc
pop
adc
cmp
out
outsl
push
subb
insl
ret
enter
dec
lds
out
pusha
mov
mov
popf
xor
cmpsl
call
adc
in
into
lds
popf
cmp
out
faddl
mov
pop
mov
push
adc
js
mov
and
mov
lret
shrl
jp
pop
and
inc
jg
or
or
cmovs
mov
jp
add
clc
add
pop
loope
cmpsb
sti
jnp
in
out
adc
cmpsl
lock
adc
jp
es
xchg
add
xor
out
les
in
loope
adc
push
pop
test
sbb
scas
xchg
dec
mov
pop
ljmp
adc
cmp
imul
xchg
dec
xor
jmp
sub
cmp
push
shrl
les
movsl
jp
dec
jbe
psubw
pusha
imul
adc
xchg
stos
add
jns
or
mov
or
inc
add
out
dec
mov
push
iret
test
inc
push
fisubrs
inc
daa
xchg
insb
pushf
ss
add
addr16
es
jge
sahf
add
adc
xlat
dec
xor
xchg
add
cld
mov
aad
or
jmp
jnp
and
sub
aaa
xchg
orb
insb
cwtl
rorb
cmp
pop
push
in
jne
in
loopne
xchg
cmc
loopne
add
fsub
jns
data16
das
dec
es
fisubs
jnp
sahf
push
jno
js
mov
add
jge
fldenv
in
push
ja
shlb
add
mov
test
sub
inc
cmc
sub
jo
add
popw
mov
out
add
int3
sub
pop
sarb
mov
dec
add
add
xor
repnz
cmpsl
test
addr16
nop
inc
call
in
imul
xchg
mov
dec
fildl
add
inc
mov
adc
add
in
sub
ljmp
xchg
lcall
mov
sbb
data16
cs
pop
sub
cltd
and
je
jns
mov
ror
jle
mov
rcll
into
ss
dec
add
xchg
mov
sub
clc
mov
les
dec
aaa
movsb
lsl
iret
sarb
test
mov
pop
mov
lcall
popf
pop
or
mov
add
leave
int3
add
mov
test
mov
out
jnp
add
jne
lcall
jp
fdivl
inc
adc
int
dec
call
push
std
add
and
into
push
pop
adc
jmp
idiv
cmp
pop
dec
adc
lahf
sbb
push
outsb
je
push
mov
dec
cmp
push
dec
add
scas
ret
cld
mov
xchg
mov
and
push
mov
or
add
icebp
scas
sbb
jno
dec
movsb
xchg
stos
sahf
jae
add
mov
sub
mov
stos
bound
in
aas
push
mov
fistpl
adc
ljmp
pusha
repnz
aam
push
dec
add
sub
fcom
pop
add
jns
and
add
popa
ljmp
add
movsb
push
out
loopne
das
sarl
sahf
ljmp
jmp
mov
outsl
or
jb
mov
out
ss
ucomiss
mov
add
inc
pop
in
xor
fwait
call
adc
inc
cmp
push
les
ret
pop
or
int
add
pop
psrld
hlt
adc
xor
fmuls
add
jmp
add
imul
pop
inc
add
and
push
sbb
les
ret
add
cmp
dec
ss
xlat
cwtl
fwait
mov
daa
push
es
lahf
inc
mov
push
sub
bts
rcrb
add
jae
mov
ja
push
add
mov
sbbb
mov
push
jle
test
and
mov
imul
push
ds
enter
adc
sti
and
jbe
mov
push
stos
push
aam
andl
push
adc
and
mov
add
jge
jg
add
pop
add
cmpb
rolb
stos
fwait
mov
add
cli
or
aad
leave
xor
sub
or
add
jne
or
leave
fnstsw
mov
outsl
in
je
add
and
or
adcb
adc
add
dec
push
xor
cld
push
add
gs
mov
add
shl
sub
sbb
and
sbb
bound
inc
fimuls
mov
mov
dec
adc
pop
inc
mov
inc
add
dec
push
xor
les
jp
sub
add
add
clc
out
mov
push
add
mov
push
les
sub
outsl
sbb
imulb
xor
jg
lret
shll
xchg
repnz
add
out
filds
mov
mov
out
sbb
orb
mov
loope
call
inc
pop
filds
mov
ljmp
add
sarl
mov
aad
and
movsl
hlt
fbstp
add
inc
adc
daa
lret
add
adc
pop
cmp
pop
xor
pop
pop
push
add
cltd
in
mov
push
sbb
adc
es
cmc
dec
xor
cmpsb
lock
or
lret
and
add
into
nop
mov
add
cli
mov
ds
push
clc
or
in
sahf
int3
inc
shrb
pushf
add
dec
mov
adc
and
or
dec
hlt
cld
push
ror
rcr
mov
mov
dec
add
and
pop
dec
enter
xchg
jnp
cmp
mov
outsl
add
push
adc
or
fildl
sub
xchg
test
jb
mov
loopne
fildll
mov
cmp
call
pushf
xchg
inc
jg
inc
repz
pushf
lods
out
xor
fistpl
mov
js
gs
in
add
push
subl
pop
cmpsl
jg
roll
mov
fstpt
add
shl
xchg
jb
add
ret
xchg
in
adc
lea
cltd
lret
out
popa
sbbb
dec
cmp
andb
or
sbb
adcb
adc
loop
jae
jecxz
add
cmc
push
negl
mov
orb
std
jae
pop
movsb
scas
shl
rolb
xchg
xchg
stc
add
xchg
lret
pop
dec
cmc
xchg
cli
add
push
je
dec
sbb
adc
mov
xor
dec
jle
add
mov
sub
mov
inc
cmc
mov
fwait
stc
pop
repz
mov
xchg
pop
cmp
idiv
push
in
decb
test
push
dec
loopne
push
xor
mov
dec
jo
pop
cli
inc
mov
dec
and
push
jnp
adc
cs
andb
sub
adcb
mov
in
mov
add
adc
inc
mov
adc
outsb
mov
jle
cmc
test
xchg
repz
cmp
push
into
add
sahf
push
push
xchg
jae
popf
and
add
int3
jmp
ds
sub
xor
mov
pop
pop
shlb
test
orl
jle
dec
add
pop
in
mov
add
mov
jecxz
add
dec
les
ret
bound
hlt
and
mov
push
push
into
lret
jbe
add
pushf
xchg
adc
fidivs
dec
pop
sbbb
xchg
gs
add
das
jno
pop
pushf
scas
inc
and
push
xchg
inc
pop
fcompl
pop
lock
dec
add
dec
add
in
jle
push
je
rol
cli
cmp
add
sbb
sbb
and
push
loop
imul
cmp
pop
es
pop
xchg
xchg
dec
scas
cli
loopne
pop
call
lret
ja
xor
aad
inc
or
add
mov
iret
pusha
cmc
sbb
out
sub
inc
imul
jp
popa
push
mov
push
add
shll
sbb
dec
add
icebp
jecxz
popa
fsts
add
pop
sub
mov
jb
add
out
pop
cmp
popa
mov
inc
je
mov
scas
repz
in
add
leave
sbb
lds
pop
adc
loope
popa
add
pop
cld
sub
adc
add
sub
fnsave
pop
push
adc
mov
inc
ss
clc
out
dec
pavgb
test
inc
lods
add
mov
mov
mov
outsb
add
pop
jecxz
pusha
xor
add
test
push
xchg
or
insb
inc
sarb
inc
push
pop
data16
add
sbb
fadd
jbe
add
fs
je
add
subb
sarb
int3
push
dec
je
imul
insl
or
cs
std
loope
out
push
push
jg
add
fcomi
popa
and
push
sub
aas
jbe
cltd
add
adc
pop
add
dec
mov
inc
push
outsl
popf
add
ljmp
and
movsl
push
xorb
add
stos
ret
or
inc
add
mov
cmp
hlt
inc
add
cli
stos
cmpsb
gs
add
xchg
out
mov
adcl
jge
mov
add
pop
pop
fwait
adc
pop
add
inc
lods
and
xorl
adc
push
jecxz
jne
xchg
add
xor
faddl
add
imul
jmp
cwtl
punpckhbw
int3
test
adc
std
xchg
pop
adc
nop
filds
mov
cmpsb
daa
loope
push
stc
pop
inc
popf
sbb
lds
call
fdivrl
sub
outsl
fs
loopne
out
add
dec
rcrb
lds
testl
fwait
insb
pop
sbb
sbb
aas
call
xchg
add
das
add
shlb
mov
dec
fcomp
jne
add
mov
andb
mov
test
mov
and
add
repz
jbe
xchg
je
adc
fsubl
and
addl
push
xchg
or
mov
subb
dec
cld
pusha
nop
iret
pop
popl
mov
sbb
push
sbb
stc
ficomps
push
dec
popf
in
add
push
out
js
pavgb
mov
popa
flds
mov
pop
sbb
jle
add
xor
adc
in
stos
ficompl
hlt
arpl
jmp
add
or
icebp
cmp
pop
sbbb
clc
std
and
inc
add
xchg
sub
mov
xor
aam
rclb
push
mov
dec
nop
pusha
mov
nop
lock
push
dec
int3
movsl
scas
inc
add
sub
gs
aam
add
mov
bound
std
sar
ret
jo
add
movsb
lock
sub
push
pop
das
jg
imulb
inc
data16
icebp
mov
inc
cmp
nop
iret
loopne
loopne
and
ljmp
cmp
das
iret
in
leave
lea
push
movsb
scas
pop
addb
out
jecxz
fnstsw
outsb
stc
push
jmp
dec
dec
xchg
add
gs
mov
stos
mov
dec
arpl
pmulhuw
cmp
rcrb
cmp
mov
xchg
xor
add
dec
inc
movl
scas
push
in
add
add
dec
inc
outsl
out
lock
add
fwait
and
stos
outsb
pop
mov
add
dec
and
enter
mov
sbb
push
add
inc
mov
stos
cmc
ret
mov
pop
pop
sub
dec
cmp
mov
or
add
add
pop
lods
xchg
xchg
mov
mov
adc
movsl
adc
fsubl
inc
outsl
cltd
inc
inc
call
scas
or
jge
mov
in
out
mov
sbb
je
test
popl
push
dec
adc
mov
fldl
jmp
and
mov
and
mov
sbb
add
inc
mov
add
sbb
push
pop
sub
mov
es
add
stos
lock
jb
insb
clc
call
int
and
loop
cli
mov
pop
cmp
loope
xchg
add
testb
sbb
arpl
add
inc
cwtl
rcrl
gs
js
mov
pop
idivb
inc
push
mov
jge
inc
jmp
rorb
mov
xchg
dec
andb
hlt
lds
xchg
and
pop
insb
mov
add
fiadds
push
in
enter
repz
and
sub
add
lock
and
fistl
inc
add
xor
aam
lods
mov
enter
xor
cmp
testb
les
jge
xchg
pop
cmc
and
mov
sti
push
sahf
repnz
int3
add
add
pop
gs
fcmove
dec
rcrb
xor
sbb
je
xchg
adc
and
rorb
xor
loope
lods
or
add
nop
add
mov
or
ret
or
out
jns
incl
or
xchg
jmp
andb
daa
add
cltd
pop
loopne
in
sbbb
add
rclb
int3
fcoms
inc
add
ret
sbb
mov
jge
cmpb
loope
loopne
les
mov
nop
int3
push
enter
andb
dec
pop
mov
xchg
lret
push
push
pop
add
xlat
inc
xor
ret
out
imulb
bound
nop
cmp
out
pop
dec
pusha
push
xchg
scas
ljmp
mov
add
int3
cmp
in
in
add
movsl
cmp
push
ss
out
int
sbb
cld
sbb
pusha
inc
add
aas
push
mov
pop
rol
mov
sub
incb
add
stos
xor
test
jno
push
mov
or
xchg
add
add
jnp
lret
fnstcw
gs
int3
out
sarb
enter
cmp
mov
or
inc
pop
inc
hlt
adc
cmc
or
mov
out
sti
or
lcall
sbb
shlb
sahf
xor
clc
adc
and
aaa
jns
xor
pop
push
xlat
cmp
mov
pushf
and
dec
js
in
cmp
test
xor
sub
sti
jmp
movl
fstpt
add
push
adc
in
mov
outsl
dec
xchg
mov
std
shr
cmp
inc
jecxz
sbb
imul
jmp
ficoml
push
cmp
cmp
and
lea
adc
movsb
aam
mov
popa
in
push
mov
jno
jp
sbb
sahf
movsl
sub
adc
add
mov
popf
push
loopne
mov
xor
lods
inc
xchg
shlb
add
shlb
add
shll
pushf
popa
xchg
inc
pop
aaa
stc
sahf
mov
jge
add
out
mov
add
xchg
fisttpl
mov
lock
pop
cli
sub
push
jb
andl
aad
in
lock
ds
jecxz
aaa
sarl
xor
negl
iret
scas
lods
les
or
cmpsb
pmulhw
jecxz
lock
pusha
ljmp
sbb
popa
inc
push
fisttpl
jbe
pushl
and
in
mov
cmpsb
add
ljmp
add
sbb
jg
add
hlt
add
mov
jmp
push
mov
sbb
add
inc
scas
sbb
mov
cmpb
fs
pusha
adc
repnz
and
push
pop
imul
pop
incl
or
add
cmpsb
ret
enter
cltd
mov
subb
dec
cmpsb
or
jns
dec
mov
adc
cmpb
add
add
push
aas
adc
mov
pop
mov
mov
xchg
jae
orb
lahf
and
mov
loop
jl
or
hlt
jmp
add
shlb
push
aam
ret
dec
xchg
out
jg
or
stos
ljmp
aas
outsb
jg
xchg
lahf
and
dec
lret
mov
mov
jl
push
jge
pusha
add
xchg
cwtl
cmp
lea
test
daa
xorb
xchg
or
pop
dec
testb
lds
lods
mov
mov
ljmp
pop
add
mov
lahf
add
jmp
nop
pusha
jecxz
arpl
push
mov
std
clc
jl
cmp
inc
call
add
or
fisubrl
mov
les
subb
lock
xchg
faddl
lds
icebp
and
adc
out
jge
lret
enter
loope
jmp
popa
jl
add
pop
and
mov
pop
mov
ja
jno
push
jg
mov
icebp
or
fsubrl
sbb
out
jge
fistpll
pop
adc
xchg
sub
xchg
lock
arpl
or
repz
jg
sbb
push
sbb
jns
add
mov
mov
push
addl
fcompl
fs
xorb
mov
pop
pop
movsb
int3
add
inc
cmp
stos
push
in
nop
pusha
pop
lods
pop
push
mov
test
push
add
js
lods
test
mov
push
add
pop
add
mov
in
cmpsl
fsts
add
jmp
cmp
in
cmp
cwtl
inc
mov
mov
add
test
add
addl
xor
popa
lds
push
nop
sar
sub
filds
mov
inc
and
pop
xor
pop
jns
or
roll
outsb
insl
out
loopne
pop
jb
add
and
or
out
add
mov
adc
in
ss
out
incl
jmp
add
rolb
sbb
loop
nop
cli
add
cmc
adc
dec
mov
popa
xchg
xchg
sub
or
push
cmp
pusha
cmp
mov
movsl
mov
and
in
cmp
jecxz
xchg
mov
add
dec
pop
or
and
jecxz
mov
mov
stc
shlb
scas
or
in
nop
jb
mov
pop
nop
je
inc
or
fstpt
cmp
cld
fldcw
scas
fstpl
xchg
in
and
sahf
sbb
rcrl
movsb
xor
add
sarb
iret
adc
cmp
add
popa
jl
add
pop
inc
cmpl
fsubs
dec
mov
add
cmc
xor
jle
mov
add
cwtl
in
mov
nop
or
dec
hlt
andl
inc
xor
outsl
dec
dec
cli
faddl
arpl
mov
mov
pushf
add
fisubrl
shll
cmovl
add
nop
xchg
add
sub
and
je
xchg
das
es
jp
push
repnz
add
mov
outsl
lock
ret
pusha
shlb
cmp
dec
pmaxub
add
xchg
subb
lods
mov
gs
jbe
add
mov
add
cmpsb
into
test
mov
or
sub
cltd
xor
sbb
orb
addr16
sub
andl
jns
pop
jle
add
pusha
out
jmp
movsb
add
xor
gs
sbb
jp
mov
push
shll
shll
add
xor
mov
fcompl
subb
and
mov
movsl
aad
push
data16
xchg
adc
popf
stos
pop
arpl
adc
adc
fiaddl
rcrb
inc
add
faddl
mov
cmp
ljmp
mov
outsl
add
test
rolb
orb
hlt
cmp
sub
sbb
mov
sub
mov
xor
fwait
or
dec
add
sub
repz
out
insb
add
call
dec
jo
cmpsl
add
pop
clc
nop
fs
lock
jl
mov
sbb
lahf
or
jo
pushf
js
push
fistpll
test
mov
cmpsb
hlt
add
xchg
xor
and
cwtl
add
xchg
repnz
add
sub
dec
cmpsl
jl
add
pushf
jmp
mov
js
sarb
xor
lods
adc
mov
add
out
xor
jmp
ret
xor
add
inc
subl
sbb
jle
and
add
fildl
add
add
pop
add
ret
subl
pushf
push
sub
rolb
fistps
shr
cmp
dec
in
or
cmp
sub
add
cmp
dec
jmp
push
add
or
movb
ljmp
popa
push
pop
movsl
push
pop
pop
cltd
add
push
shll
sub
inc
cmp
push
popa
pop
cltd
mov
test
fstl
sub
inc
push
inc
cmp
add
mov
js
and
aam
xor
xchg
add
pop
sub
adc
cli
test
popa
mov
fisttpl
fcmove
jge
push
jb
hlt
or
das
iret
sub
inc
enter
into
mov
add
in
mov
xchg
fisubl
jp
je
add
add
cmc
cwtl
adc
jno
nop
js
add
mov
in
jnp
pop
outsl
into
in
dec
pop
lret
sub
movsb
mov
dec
inc
pop
mov
add
jl
mov
das
and
fsubl
add
sbb
in
stos
jge
adc
bound
mov
hlt
jmp
cmp
add
shl
xlat
cmpb
pop
mov
pop
add
es
aaa
jmp
push
xchg
bound
lock
mov
add
jle
cmp
movsb
es
rolb
pop
fidivl
mov
std
addb
add
sbb
jmp
or
inc
cs
and
std
push
push
xchg
jae
pop
outsb
scas
add
add
lock
scas
add
adc
je
ss
jae
cltd
mov
and
or
sub
xchg
dec
push
add
push
cmp
pop
push
jge
pop
pusha
mov
clc
rcrl
or
inc
inc
add
clc
sbb
inc
dec
and
enter
add
arpl
pop
jp
in
adc
leave
pushf
movsl
ds
cmp
mov
inc
inc
pop
xchg
lods
lods
swapgs
movb
add
out
ljmp
or
xchg
pop
push
in
cwtl
adc
pop
cltd
mov
stc
xor
lock
clc
arpl
add
cltd
add
sub
inc
jg
xor
inc
aaa
dec
lahf
adc
imul
dec
test
pop
sub
fdivr
xchg
ret
add
movsl
loopne
dec
lods
sbb
outsl
and
aas
sbb
add
xchg
into
cmp
dec
inc
cwtl
and
into
push
mov
adc
add
cmpb
negb
adc
outsl
ret
or
cltd
push
add
or
in
scas
hlt
add
stc
outsl
pop
inc
inc
xor
dec
repz
sub
mov
xor
call
fimull
sbb
xchg
adcl
mov
mov
jb
cmpb
push
es
std
into
cmpl
and
and
cmp
ds
add
adc
jbe
push
cmpb
add
scas
imul
arpl
xchg
cmc
jge
loop
xchg
loope
add
fwait
sbb
popl
add
cmp
mov
sub
mov
pop
inc
fmuls
mov
int3
push
aas
and
mov
mov
pusha
jne
cmp
jnp
gs
imul
nop
add
mov
int
pusha
add
imul
xchg
jl
xor
add
mov
bound
pop
pusha
inc
inc
jb
decb
xor
aad
shll
popa
imul
lea
inc
sarl
out
mov
push
movsb
add
pusha
push
xchg
push
das
add
movsl
jmp
cmc
test
and
pusha
pop
push
add
inc
cmpsb
cmp
inc
add
cmp
pop
push
loope
jae
add
aaa
gs
sbb
xlat
jle
pusha
inc
sbb
xchg
je
or
pop
fists
xor
test
imul
add
popf
add
jg
mov
lods
bnd
mov
pop
aas
sub
xor
ffree
loope
push
faddl
loopne
inc
xchg
nop
lea
cltd
pop
mov
js
and
and
or
mov
push
push
push
mov
addr16
pushf
add
out
fisubs
repnz
mov
cmp
aas
push
out
push
mov
aam
or
lods
push
adc
add
clc
es
or
popa
cmpsb
int3
dec
cmp
hlt
cmc
outsb
and
push
add
pop
mov
xchg
xchg
add
mov
adc
dec
adc
int3
mov
stos
or
cld
mov
pop
sti
jmp
sbb
add
jmp
inc
jle
adc
aaa
nop
adc
push
and
adc
xchg
jecxz
add
push
clc
test
pop
and
cmp
cmp
loop
subb
enter
cwtl
jae
or
loopne
popa
loop
addr16
ret
fsts
or
adc
pop
stos
fildll
enter
cli
cmp
sahf
adc
orl
cmp
je
mov
cmpsb
cltd
sbb
shl
mov
mov
je
rorb
pusha
scas
cmp
or
shr
add
and
mov
mov
sub
xchg
leave
push
cmpb
and
push
xor
cwtl
and
adc
and
cmc
xchg
add
or
out
push
orb
inc
push
mov
sub
pop
arpl
push
cli
lcall
cmpsl
mov
mov
sub
inc
filds
cmp
stos
jge
add
mov
add
stc
dec
pop
jo
inc
shld
mov
mov
and
cmp
push
mov
xorl
mov
push
das
pop
pop
and
add
mov
mov
add
lahf
pop
repnz
add
dec
jnp
or
and
bound
mov
aas
int
sbb
test
or
cld
daa
jecxz
test
pushf
cld
inc
repnz
adc
pusha
addr16
int3
pop
std
jmp
and
gs
mov
and
mov
inc
mov
inc
add
sub
daa
cmp
xor
sub
lds
mov
pop
push
jmp
pop
mov
fwait
pop
cmp
add
pop
sbb
out
inc
add
cmp
and
or
clc
or
lret
out
jg
out
daa
stos
fildl
in
pusha
sub
les
mov
stc
ds
inc
outsl
jge
out
adc
hlt
bound
shl
xchg
imul
cmp
mov
lock
enter
mov
int3
in
xchg
loope
mov
ja
rcrb
lods
mov
sbb
push
push
or
inc
addl
jns
shll
add
stos
sub
mov
dec
cmp
fsubl
push
andl
inc
add
pop
flds
push
out
jo
arpl
pushf
jge
sub
mov
add
dec
pop
cwtl
and
test
in
loope
xchg
rorb
pop
add
pop
sar
pushf
pop
mov
out
jg
mov
loopne
ds
test
pop
add
push
push
repnz
or
lock
add
cmc
mov
mov
jp
push
sbb
popf
sub
out
push
jo
adc
jbe
mov
mov
mov
es
or
popf
inc
push
nop
and
adc
lock
sbbb
mov
sub
clc
jle
and
xor
sbb
push
and
add
sub
fdivs
cli
popa
pusha
or
xchg
add
dec
testl
pushf
js
es
cli
adc
sahf
out
or
scas
fnstenv
push
add
adc
ss
rcl
aas
sbb
push
mov
ljmp
sarb
fsubs
nop
movsb
in
pop
in
call
jle
mov
push
cwtl
into
add
xchg
mov
add
aam
jns
je
leave
jnp
and
in
aad
xor
sub
sarl
das
imul
mov
or
sub
add
sub
ds
sbb
in
inc
xor
fimuls
inc
sub
icebp
out
cmpsl
adc
mov
adc
mov
je
std
stos
add
jge
stc
into
xor
cmc
pop
popf
inc
sub
fwait
pop
fildl
adc
repnz
pop
orb
mov
hlt
popf
mov
or
fsubr
sbbb
push
jp
add
cmpl
inc
add
lahf
pushf
and
or
outsb
rolb
pop
sahf
mov
clc
not
add
sbb
test
mov
jmp
stos
ljmp
fs
fldenv
adc
out
and
movsb
inc
mov
rcrb
sar
push
mov
cmp
jg
add
div
arpl
ss
adc
adc
dec
or
mov
dec
outsl
push
and
jae
lock
fidivrl
sbb
and
test
push
fisubrs
dec
jb
pop
out
inc
mov
jnp
inc
mov
mov
sub
addl
push
jb
sbb
xor
mov
or
in
adc
enter
inc
add
mov
iret
jno
push
inc
and
fidivrl
add
adc
in
cmp
mov
sbb
lock
add
mov
and
inc
mov
lods
or
cmp
leave
fdivl
or
mov
lea
mov
xchg
xchg
dec
cmpb
sub
cwtl
cltd
add
pop
dec
sbb
mov
mov
arpl
cli
or
sbbb
pop
adc
cld
sub
hlt
cmp
dec
and
movsb
lret
movsb
pop
shlb
shll
and
mov
dec
xchg
mov
jo
ljmp
cmp
fmull
cmp
loope
movsb
fadds
in
clc
gs
nop
lods
js
cmp
sub
fidivl
inc
and
sbbl
or
out
daa
pusha
pop
lods
dec
stos
adc
ret
lcall
cmp
jp
mov
and
push
in
add
outsl
out
popa
movsl
ss
cs
push
sbb
leave
iret
sub
movsb
adc
mov
lcall
pusha
add
add
cmpsl
jbe
jmp
add
xor
movsb
movsb
mov
movsb
ljmp
je
push
aam
lods
enter
out
add
in
sub
cwtl
dec
lds
decb
xchg
aam
faddl
out
jge
mov
jmp
push
subl
sbb
divl
and
pop
into
arpl
adc
jno
lahf
aas
inc
cwtl
and
add
das
adc
pop
xor
dec
scas
and
jnp
add
dec
into
sub
dec
cwtl
push
mov
sub
ss
ja,pn
push
roll
subl
les
add
rclb
in
mov
push
fdivl
repnz
sub
nop
push
add
dec
fdivrp
sbb
inc
inc
mov
cs
test
mov
sbb
roll
add
add
cld
test
xor
mov
sbb
and
cmp
jbe
dec
loope
hlt
hlt
lahf
add
out
jp
or
adc
push
fistps
out
sbb
or
ljmp
int3
mov
sti
pop
iret
and
and
sbb
inc
into
mov
mov
js
add
in
movsl
lea
mov
das
mov
not
adc
inc
cmp
cmp
sub
jb
inc
sbb
aaa
xchg
int3
add
mov
or
lods
ret
call
pop
test
roll
int
inc
bound
xlat
loope
lahf
in
sub
andb
or
test
inc
es
add
jp
push
and
sti
les
loope
sbb
outsl
cmc
popa
cmp
xchg
adc
fs
gs
ret
cmpsl
adcl
pop
mov
data16
and
lods
inc
push
xchg
adc
int3
dec
orb
clc
mov
and
pop
push
decb
arpl
add
scas
mov
es
xchg
mov
cli
inc
xchg
sbb
mov
repz
orl
cmpsl
sub
cld
cld
push
dec
stos
ds
mov
sub
movsl
stc
xor
cmpsl
scas
lcall
icebp
loop
pop
mov
add
sbb
pop
cwtl
ljmp
shl
mov
rolb
sbb
aas
inc
add
repz
adc
pop
sahf
daa
shll
test
adcb
inc
inc
xor
cs
mov
mov
push
add
out
and
scas
ret
add
and
sub
out
inc
sub
jne
ss
addb
mov
cli
outsl
mov
add
popf
add
inc
imul
add
out
push
jno
pop
mov
inc
xor
mov
cmp
and
adc
loopne
cmpsl
inc
fs
mov
clc
scas
in
mov
andl
xchg
or
push
xor
les
push
pushf
ret
adc
xor
inc
cs
add
jmp
in
loope
pusha
repz
mov
cmpsl
add
out
mov
subb
out
xor
aaa
cmp
std
pop
xor
adc
push
mov
test
outsl
cwtl
push
or
mov
mov
lcall
push
mov
jo
add
jmp
push
pop
fbstp
mov
push
add
push
loope
cmp
int
xchg
inc
cmp
les
rcrb
imul
into
loopne
add
push
push
cmpsb
sub
add
cld
repz
popf
or
scas
sahf
sbb
andl
rolb
sub
lea
sub
cltd
adc
mov
inc
lahf
xchg
push
mov
xor
sti
push
fldl
arpl
or
mov
add
xchg
fimuls
add
jae
rclb
inc
ret
sbb
xor
inc
loopne
push
cld
add
mov
rolb
jmp
add
inc
mov
mov
stos
mov
hlt
inc
adc
add
sub
push
adc
add
mov
or
sti
adc
add
jecxz
jle
cli
adc
pop
xchg
pop
cltd
lds
push
add
idivb
xchg
jbe
mov
pop
jo
add
ror
sbb
cli
mov
int
fimuls
dec
sbb
mov
xchg
inc
shrb
aam
movsl
cmp
cli
icebp
fldcw
cmp
push
adc
inc
pop
push
mov
icebp
jmp
dec
lds
dec
sti
push
pushf
inc
lcall
in
pop
mov
inc
cli
or
jo
ss
inc
loopne
mov
in
repnz
daa
insb
out
vmwrite
in
pop
cmp
rolb
lret
pop
dec
repnz
out
mov
mov
add
leave
je
dec
xchg
insb
jmp
ret
pop
adc
sbb
call
inc
dec
setge
pop
jle
mov
add
mov
add
xor
rcll
clc
mov
cmp
mov
adc
mov
bound
shlb
add
add
mov
mov
loopne
fidivl
iret
icebp
mov
dec
push
jmp
and
in
adc
jns
jbe
add
lods
insb
dec
orb
cmp
add
pop
scas
gs
clc
inc
fs
pop
loope
mov
xor
and
dec
add
lods
or
add
cli
jl
push
lea
inc
inc
stos
fdivrs
mov
inc
adc
jge
mov
arpl
sub
or
jbe
dec
subl
add
leave
or
push
inc
sbb
sti
repnz
icebp
nop
into
or
es
loope
pop
add
adc
popl
sub
mov
add
ljmp
push
add
cmp
add
sbbb
dec
andb
and
jmp
inc
or
push
add
add
cmpsb
adc
iret
add
ret
movsb
cmp
mov
icebp
dec
push
pushf
inc
jl
mov
and
mov
adc
add
cltd
push
jl
jnp
pusha
cs
out
add
dec
test
jnp
mov
adc
add
mov
scas
jmp
and
fiadds
xchg
rep
addl
maskmovq
idivl
nop
add
add
fadd
insb
jb
dec
ret
cmp
push
sbb
aas
mov
ret
xor
inc
ds
add
push
mov
les
xor
lahf
cltd
sbb
lods
add
mov
adc
and
push
shrb
imul
loopne
mov
xchg
or
in
pop
adc
lret
mov
or
imul
xchg
sub
add
clc
sbb
call
sub
es
scas
gs
shl
mov
cli
movsb
movsb
add
ja
rcrb
jb
push
inc
pop
push
fldl
out
xor
scas
rclb
cmp
mov
stos
call
ret
orl
xor
repnz
clc
push
add
inc
lods
inc
cmp
outsl
mov
add
popf
test
push
cmp
mov
sbb
cmpsl
inc
call
icebp
add
je
sbb
idivb
add
pop
add
or
addb
inc
cli
scas
xor
inc
nop
add
repz
in
loopne
pop
add
ret
or
push
pop
sbb
and
clc
je
cs
cld
xor
xorb
push
cli
push
imul
and
aas
and
lret
jo
and
mov
inc
or
xchg
jno
sub
xchg
out
loop
adc
jecxz
les
cmp
jge
js
daa
or
adc
aaa
push
mov
sub
jmp
or
pop
in
cmc
pop
push
bound
or
xchg
push
in
enter
dec
and
pop
xchg
add
mov
adc
add
pop
bound
in
or
sbb
pop
aam
notl
or
por
add
mov
mov
les
je
dec
fs
add
add
mov
pop
and
jbe
roll
cmp
jmp
add
mov
dec
jno
hlt
or
orl
sub
add
sbb
add
fisubrs
mov
test
mov
cli
mov
jnp
hlt
mov
push
cmpsl
push
out
xchg
and
sbb
ss
mov
aad
shrb
inc
stc
and
mov
scas
add
ror
js
test
mov
cmp
push
inc
jns
or
adc
mov
xor
arpl
clc
add
cmp
test
push
ret
or
loopne
sbb
pop
stc
cltd
js
scas
cwtl
imul
subl
std
dec
loopne
fldt
lea
push
loop
lods
stc
xchg
push
add
fiadds
cli
outsl
movnti
push
sub
adc
add
inc
sub
bound
and
push
clc
rolb
in
add
add
pop
inc
nop
lods
jno
add
cmpsb
shll
mov
popa
repz
fstps
pop
loopne
test
and
ret
xor
adc
xchg
popa
inc
push
push
daa
pusha
sbb
jae
pop
push
or
nop
lock
pop
lods
mov
aam
xchg
mov
sub
add
xchg
adc
cmp
mov
and
fcoms
adc
add
pop
stos
inc
cli
push
sbb
and
adc
mov
push
mov
std
rorb
dec
and
adc
sti
nop
dec
add
in
and
sahf
xchg
pop
inc
dec
jmp
mov
int3
adc
scas
mov
ja
mov
inc
addr16
repnz
push
subl
mov
in
decb
jno
lods
inc
adc
adc
jo
lock
pop
add
rolb
or
aad
lock
add
add
bsr
or
add
and
cmp
add
sub
jge
xchg
mov
pop
xor
pusha
mov
stc
sub
push
xchg
loopne
push
test
jecxz
fimull
iret
mov
adc
jno
insl
add
flds
repz
dec
popa
cmpl
and
call
mov
xor
aaa
and
aam
mov
xor
jo
mov
xchg
push
xchg
add
inc
subl
cmc
inc
or
movsb
or
or
cmp
test
jg
pop
add
nop
mov
popa
pop
clc
pop
or
jecxz
mov
pop
les
test
decb
lahf
mov
test
cmpsl
jmp
inc
xor
jg
mov
cwtl
sahf
add
pusha
push
sbb
or
pop
sbb
or
movsb
inc
xor
mov
andb
dec
rcrb
in
or
sti
mov
sub
cmp
pushf
adc
imul
jge
sub
popl
xor
iret
push
add
mov
sub
out
js
shrl
add
pushf
add
mov
in
fadd
add
and
test
inc
mov
pop
adc
inc
int
mov
add
xchg
je
dec
inc
pop
lock
adc
out
or
push
sbb
add
scas
les
leave
dec
xchg
mov
add
cmp
lahf
add
lret
add
add
fs
jp
mov
daa
push
inc
ret
pushf
lret
push
cmp
dec
inc
jno
xchg
out
out
aam
imul
clc
cwtl
enter
mov
push
imul
jg
mov
fs
add
ja
dec
inc
pop
stos
or
clc
pop
cmp
add
ret
jnp
pop
add
jecxz
inc
pop
in
cmp
adc
xchg
jns
dec
bound
sub
pop
inc
dec
add
adc
nop
loopne
jp
sbb
ja
sbb
setnp
jne
xchg
sub
bound
xchg
pop
jns
add
cmc
adcb
inc
cmp
mov
fsubrl
mov
aas
xor
rcrb
stos
xchg
subb
push
lods
or
adc
inc
dec
adc
clc
ljmp
rclb
or
add
push
mov
adc
lock
sti
xchg
jl
xchg
fstps
je
jne
es
insb
add
mov
js
push
inc
mov
cmp
jae
test
stos
subb
int
shl
jbe
or
inc
lock
dec
pop
add
out
inc
int
fisttpll
stos
je
xchg
add
in
add
lods
shlb
inc
js
ret
ror
jbe
and
pop
mov
js
push
cmp
fldl
xor
push
inc
stos
xchg
dec
sub
add
cmp
iret
pop
cli
and
lds
dec
aam
cmp
shrb
xor
flds
jb
cld
jbe
aam
sbb
jp
hlt
inc
inc
dec
loop
adc
pop
jge
add
push
fsubl
pop
add
mov
sub
jge
hlt
fcmovne
dec
cmpb
jno
mov
pop
pop
pushf
subb
sarl
repz
hlt
add
jb
test
int
inc
and
out
pmaxsw
clc
nop
call
leave
mov
popa
adc
xor
jno
or
push
cwtl
adcl
subb
push
sub
jne
xor
add
test
add
repz
xlat
lds
loopne
push
and
add
adc
push
cmp
pop
push
leave
mov
jle
adc
sbbb
dec
lea
sti
out
add
push
test
into
push
mov
ret
inc
imul
sub
cmp
test
das
insb
or
dec
and
and
shlb
cli
push
push
lcall
ss
arpl
mov
pop
jle
dec
outsl
sub
sbb
dec
xor
jo
shl
sub
and
rcll
and
clc
xchg
or
mov
hlt
add
movl
jge
push
adc
mov
mov
int3
xlat
std
lahf
cli
inc
jmp
mov
jno
lcall
aaa
rol
out
lahf
int
cmp
cmp
call
jo
adc
daa
xor
ret
pop
and
jno
pop
lret
aam
push
aaa
sbb
hlt
fs
js
cmp
mov
add
cld
jl
sub
enter
dec
mov
aaa
out
xor
push
jge
inc
sahf
xor
pusha
out
xor
fcompl
cmp
sbb
adc
movsb
pop
es
inc
pop
out
mov
int
hlt
mov
shrb
mov
pushf
inc
jle
pop
xchg
inc
js
into
jl
pop
adc
jle
mov
push
enter
andb
lcall
add
or
sti
fs
jmp
repnz
popa
xor
sub
add
cli
lcall
jmp
int3
int3
add
call
lea
add
xchg
and
cmpsb
adc
mov
and
cmp
testb
push
inc
cmp
adc
popf
dec
bound
insb
mov
add
or
insl
cmp
push
jo
fcoms
pop
test
dec
nop
add
out
xor
adc
jo
mov
js
sar
xlat
ss
mov
add
add
xlat
adc
es
add
shrl
nop
mov
out
jle
and
sub
push
cmpsl
insl
adc
jp
and
add
adcb
mov
jnp
call
cmp
andb
cmpsb
lcall
pop
loop
pop
mov
pusha
bound
add
jp
pushf
add
jae
mov
or
inc
push
aas
mov
add
repnz
push
mov
adc
mov
cmc
lea
xchg
push
arpl
cmp
inc
cmp
stos
rol
test
mov
into
push
adc
and
add
cs
jge
aas
testb
jg
jmp
sbb
adc
ret
mov
push
out
stc
aas
sub
arpl
inc
jo
xchg
cs
subb
enter
in
jle
push
pop
sbb
adc
out
nop
pop
push
inc
in
loopne
cld
cmp
xchg
cs
cmp
sub
sbb
je
mov
aam
adcl
xor
push
add
pop
fdiv
shrl
add
mov
push
cmp
ret
pop
xchg
popa
push
sub
mov
sahf
pop
loopne
add
pop
mov
pushf
and
or
add
dec
xchg
or
outsl
add
sbb
lods
push
cmp
add
call
movsb
add
mov
scas
arpl
pop
push
add
mov
dec
fsubs
push
aaa
cltd
dec
ret
inc
notl
test
mov
add
push
mov
pop
xchg
das
pop
cld
cli
inc
pop
push
lock
mov
mov
xchg
and
dec
add
jge
add
aad
dec
sub
fdivp
or
out
in
sbbb
cmp
or
repz
leave
adc
sub
jo
sbb
mov
add
add
dec
aaa
loop
in
xor
rcrl
jp
popf
adc
cmp
xor
or
or
xchg
inc
call
scas
jo
shr
cs
out
cmp
pop
jg
pop
lret
icebp
sbb
lea
add
fs
or
inc
cwtl
nop
add
mov
add
add
and
imulb
xchg
stos
incl
fadds
sub
iret
fcomps
fimull
decl
int3
add
xchg
cltd
arpl
ss
jg
jge
dec
bswap
xor
and
out
or
cmp
add
pop
or
dec
push
xor
mov
je
xor
cmpb
notl
pop
hlt
and
sbb
xchg
add
xchg
add
mov
insb
mov
jmp
fnsave
dec
add
dec
push
rcll
aad
dec
cmpsl
sub
xchg
stc
add
les
and
inc
dec
mov
add
bound
hlt
dec
int3
push
shlb
push
push
jo
mov
dec
clc
shl
repz
mov
out
jae
pop
andb
jmp
dec
xchg
inc
jl
dec
call
add
ljmp
push
out
loopne
hlt
add
lret
mov
dec
lahf
and
or
dec
add
inc
push
xor
pusha
add
jl
jg
cmp
subb
mov
out
cwtl
pushf
add
xor
push
test
inc
sub
cmp
insl
addb
das
cli
mov
xor
add
cmpsb
jbe
cmp
adc
fists
jg
mov
divl
or
push
cmc
cmpsl
cmp
xor
dec
adc
js
iret
cmp
clc
mov
inc
sbb
dec
les
in
insl
pop
cmpsb
aad
add
cwtl
cs
clc
imul
cmp
pop
xchg
pop
jbe
mov
arpl
xchg
ja
movsb
jno
mov
sub
jg
cmp
sbb
sbb
movsb
mov
popf
xchg
out
sub
dec
mov
add
sbb
scas
js
out
or
push
add
movsl
mov
push
sub
inc
cwtl
add
mov
mov
rcr
adc
js
imul
pop
cwtl
test
push
dec
push
mov
dec
and
or
and
sbb
popa
and
xor
pop
dec
jne
sbb
sbb
outsl
mov
push
loop
and
pusha
rolb
cmpsb
push
outsb
or
or
lods
test
cmp
mov
mov
ja
fs
jo
pusha
sub
mul
icebp
add
push
mov
add
jno
push
dec
xor
lret
mov
pop
pop
or
or
push
jmp
clc
push
in
push
jmp
test
jp
add
test
xlat
outsl
cmovns
enter
lret
add
cltd
lock
add
jmp
inc
clc
mov
xlat
pusha
sbb
outsb
aaa
lods
imul
lock
or
mov
adc
ret
je
add
cmp
pop
sub
push
aaa
mov
cmpb
dec
or
pop
addr16
sub
call
mov
pop
sbb
jae
inc
es
shlb
lcall
dec
data16
xchg
add
add
sub
jo
cmp
ja
testl
cmc
mov
fs
cmp
sub
loop
rorb
xor
sub
push
jmp
idivl
pop
loope
cld
out
add
push
fsts
inc
add
mov
cld
inc
imul
pusha
cmp
add
inc
ret
mov
dec
add
or
out
sahf
orb
fs
ret
add
jmp
sahf
xchg
adc
cmpsl
shr
cs
pop
add
sub
pop
fcomp
call
imul
sarb
mov
xchg
add
or
add
xor
add
adc
es
sub
add
scas
jo
mov
mov
inc
clc
mov
shrb
xor
or
cmp
xchg
dec
fwait
inc
fistpll
fstpl
push
les
loopne
sub
and
sub
ret
dec
add
les
rcrb
sbb
dec
fmuls
stos
jae
pop
enter
mov
orb
shlb
repnz
pop
mov
pop
cld
jp
dec
ret
push
popf
cmp
addr16
out
inc
add
mov
add
sbb
rcrb
jo
adc
fsubrl
outsb
mov
scas
daa
fstpt
fistps
rol
fsubr
addr16
inc
jb
mov
pop
add
adc
push
add
mov
push
ret
inc
lods
fs
shll
and
mov
xchg
add
repnz
add
sub
testl
sub
stos
add
pop
test
pcmpeqw
outsl
or
sub
sbb
test
daa
shrb
sub
jge
add
and
ror
lea
insb
xchg
add
xor
cmp
sbbb
mov
fdivrs
mov
sbb
adc
sarb
adc
fiadds
adc
inc
jns
xor
xchg
sub
adc
push
cld
xchg
pop
or
sti
mov
push
dec
or
push
sbb
stos
add
xor
or
jl
sbb
adc
outsb
add
push
daa
push
add
pop
icebp
mov
push
mov
hlt
add
sub
mov
ret
add
into
roll
mov
stos
jmp
nop
add
cmp
dec
fwait
inc
inc
fistpll
add
fs
dec
mov
xor
mov
sbb
cmp
std
fcompl
mov
roll
in
cld
lret
popf
popa
mov
pop
sub
add
icebp
ret
cld
dec
adc
ja
xchg
ss
push
push
xor
add
mov
or
mov
push
pusha
mov
subl
adc
mov
pushf
xchg
adc
pop
movsb
enter
xchg
sbb
jl
dec
mov
mov
test
or
or
addr16
sbb
xor
int3
inc
jecxz
jle
aad
or
xor
add
rolb
jge
addr16
add
pop
incb
add
bound
xchg
movsb
call
mov
aas
xchg
xor
clc
and
and
push
sub
shlb
and
mov
fsubl
fneni(8087
lods
mov
imul
dec
insl
mov
iret
or
ret
cmp
xchg
lcall
jns
push
adcb
inc
push
enter
addb
sub
sbb
pushl
sbb
fs
js
dec
jp
and
js
cmp
push
mov
rclb
imul
sahf
add
call
fldcw
sub
int3
push
rcrl
and
mov
add
ret
sti
inc
shlb
rorb
xchg
jns
push
xchg
adc
stc
inc
aad
push
mov
or
daa
sarb
dec
cltd
add
shll
mov
daa
mov
add
xchg
in
scas
fs
nop
loopne
jo
cmpl
or
popa
jno
mov
movsl
iret
loope
mov
push
xor
negl
xchg
xor
rcll
jl
rclb
ds
xor
addr16
aam
inc
fbstp
cmp
inc
add
jg
inc
leave
mov
add
or
pop
fucom
test
jno
rolb
xchg
or
push
data16
inc
out
es
test
cmpsl
or
inc
lock
add
inc
push
in
push
call
jl
xor
and
add
dec
or
imul
rclb
test
loopne
rclb
imul
push
cmp
xlat
adc
dec
incl
xor
rclb
rcrb
daa
out
xchg
leave
jns
add
cli
mov
daa
or
or
and
adc
pushf
and
fisubs
add
sub
mov
dec
add
cmpsb
je,pn
test
jnp
mov
movsb
pop
bound
imul
sbb
sub
ret
scas
jecxz
add
mov
sbbb
adc
in
cmpb
ds
mov
call
push
and
inc
jns
clc
mov
xlat
adc
ljmp
push
xchg
test
xchg
and
subb
les
ljmp
xor
dec
mov
bnd
push
out
lcall
les
les
xchg
mov
enter
aas
mov
add
sbbl
faddl
pop
cld
inc
sbb
xor
and
add
fldcw
cmp
and
sub
cli
mov
lcall
or
sub
test
jge
or
jbe
sbb
addb
jl
cltd
mov
js
push
add
jne
sub
jecxz
add
adc
scas
cmp
out
les
jl
sbb
sbb
ja
push
xchg
inc
xor
xor
cwtl
xor
or
push
inc
mov
pop
jmp
int
xor
jbe
push
mov
cmp
adc
adc
dec
shll
xorb
cmp
bsf
push
and
mov
ret
test
call
pusha
jo
je
and
cmp
xor
es
das
dec
add
aas
xchg
pop
outsb
xor
add
pop
sub
and
xorl
sbb
sub
jne
add
pop
pushf
in
rorl
jl
jns
inc
imul
adc
push
mov
lock
and
cltd
add
gs
leave
les
aaa
test
jne
fsubr
mov
or
cmpsb
adc
add
mov
sub
andl
das
out
insl
add
sbb
pop
xchg
dec
clc
mov
add
and
fwait
je
fcomip
jmp
cmp
lahf
or
sub
icebp
cmp
xchg
jns
and
add
jae
popf
or
fs
add
popf
in
add
jge
mov
xor
and
cld
push
and
sbb
loope
adc
adc
push
push
testl
rorb
push
and
or
out
or
les
lods
sbb
lock
cwtl
mov
ret
and
jne
dec
jb
add
jp
push
dec
mov
mov
sbb
sub
mov
verw
jnp
inc
cltd
sbbb
cld
add
pop
shl
cld
dec
aas
push
mov
fisttpll
inc
test
pop
in
add
mov
jns
add
adc
mov
rol
sub
dec
or
and
inc
insl
mov
fisttpl
cmc
or
fcmovb
lret
out
jmp
add
je
adc
add
movsl
inc
mov
add
dec
pop
and
loop
sarb
or
mov
into
dec
test
add
lods
mov
adc
mov
out
popf
xchg
scas
or
sbb
addr16
xor
add
sbb
or
and
stc
add
pop
push
add
jmp
js
fdivrl
cmp
jl
scas
push
mov
inc
rcll
leave
cld
cmp
jne
push
enter
add
int3
add
test
xchg
adc
mov
out
add
xchg
jns
inc
popa
pop
stos
xor
out
iret
cld
mov
or
cmp
jo
cmp
adc
mov
jmp
int3
test
test
fdivl
mov
mov
or
dec
jns
test
mov
leave
stos
js
mov
ljmp
loop
pop
jae
pop
inc
lret
xchg
and
add
in
outsb
testb
mov
mov
add
ret
push
shlb
out
clc
push
testb
lods
pop
cmp
enter
inc
popf
scas
iret
rorb
adcb
and
fcoml
es
mov
adc
cmpsb
cmp
roll
xor
test
cmp
mov
mov
movsl
jns
movsb
inc
sub
shl
bound
sbb
scas
mov
aam
sub
adc
faddp
xchg
mov
lods
aaa
out
sbb
add
fildl
or
orb
call
pop
int
inc
filds
xor
hlt
popf
popa
sub
repnz
push
movsb
in
push
sub
test
sub
mov
enter
pop
cmp
add
sub
pop
idivb
adc
push
or
icebp
add
clc
mov
out
jae
sbb
pushf
add
inc
xchg
testb
mov
cmp
mov
ret
fdivrl
cs
stos
rol
adc
popa
imul
cld
ret
pop
scas
or
jb
pop
pusha
jnp
out
adc
loope
out
loopne
orb
pushf
pop
and
test
cwtl
jmp
scas
jo
in
cmp
mov
add
xlat
faddl
inc
jns
and
sub
movsb
pusha
in
add
cmp
rcrb
js
jecxz
mov
fsubrs
in
add
or
pop
sbbl
clc
and
add
push
push
repnz
rcll
stc
mov
out
sub
dec
in
scas
jns
repnz
or
mov
add
mov
adc
stos
xor
faddl
mov
jge
mov
lret
fcoms
cmp
add
mov
jmp
push
js
jnp
add
insb
sbb
and
ljmp
xor
inc
in
jmp
xor
pop
add
xchg
adc
loopne
sti
mov
and
repnz
enter
sarl
in
fdiv
pop
in
mov
push
jo
dec
dec
jp
shrb
adc
gs
push
test
outsb
pusha
jb
add
mov
in
mov
mov
aam
out
js
or
mov
sub
sbb
or
lcall
xchg
sbb
sub
add
inc
js
cmp
add
adcb
pop
jae
rcl
and
imul
xchg
mov
push
push
mov
inc
and
mov
aaa
push
or
mov
sub
adc
test
out
rcrb
shll
inc
popa
jecxz
loopne
cmp
lock
xorb
ret
fiaddl
xor
dec
inc
in
add
in
fwait
dec
into
push
dec
insb
add
push
push
pop
in
lahf
roll
cmp
ret
int
mov
add
jbe
outsb
lods
inc
lods
add
dec
lds
invd
data16
loopne
test
pop
sub
test
lea
mov
add
jns
xchg
faddl
dec
or
cwtl
int3
add
sbb
lcall
cs
paddsb
or
mov
adc
add
adc
jmp
nop
add
cmpsl
xor
lret
jns
cwtl
shlb
mov
out
adc
and
aam
insl
scas
sub
mov
pop
or
call
xchg
pop
add
cli
mov
mov
cld
cmp
clc
out
adc
sub
shl
mov
mov
cmp
sarl
je
or
ret
push
dec
int3
mov
mov
in
jmp
or
pop
sub
pop
mov
fdivrl
pop
cmp
data16
loope
pusha
test
adc
fidivrs
and
shlb
push
rorl
in
or
cmp
add
push
add
jo
aaa
add
mov
subb
ja
sbb
outsl
dec
sar
mov
cmpsb
mov
pop
int3
inc
jno
dec
mov
inc
or
sbb
dec
sarl
cwtl
push
ret
dec
add
mov
lods
test
insl
add
mov
mov
push
sbb
jns
jbe
icebp
outsb
out
cmp
jae
call
pop
add
push
jno
movsl
int3
xchg
add
fildl
add
add
add
add
add
addb
add
add
add
add
add
inc
add
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
cld
cld
cld
std
cld
cld
cld
sti
sti
sti
std
cli
cli
cli
cli
cli
cli
std
cli
cli
cli
stc
stc
stc
std
stc
stc
stc
stc
stc
stc
std
stc
stc
stc
stc
stc
stc
std
cli
cli
cli
cli
cli
cli
std
cli
cli
cli
sti
sti
sti
std
cld
cld
cld
cld
cld
cld
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
cld
cld
cld
sti
sti
sti
cli
cli
cli
stc
stc
stc
push
div
push
div
push
cmc
cmc
push
hlt
hlt
push
repz
repnz
repnz
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
repnz
repz
hlt
hlt
push
cmc
cmc
push
div
push
div
clc
clc
clc
cli
cli
cli
sti
sti
sti
cld
cld
cld
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
cld
cld
cld
std
cli
cli
cli
stc
stc
stc
std
div
idiv
cmc
cmc
cmc
std
repz
lock
out
out
out
in
in
in
std
jmp
jmp
jmp
call
out
out
out
in
in
in
in
in
in
in
in
in
in
out
out
out
out
out
out
jmp
ljmp
out
out
out
push
lock
repnz
hlt
hlt
std
div
idiv
clc
clc
clc
std
cli
cli
cli
sti
sti
sti
std
std
std
std
cld
cld
cld
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
cli
cli
cli
cli
cli
cli
push
div
push
cmc
cmc
push
repnz
out
out
out
jmp
jmp
call
in
jmp
loop
fdivr
fcmovu
fcomp
fdivr
xlat
xlat
xlat
call
call
aad
call
aam
call
aam
call
aam
call
aad
call
aad
call
xlat
xlat
fcomp
fdivr
fcmovu
fdivr
fdivrp
loope
loope
in
in
out
out
jmp
jmp
out
out
out
push
icebp
icebp
push
hlt
hlt
push
div
stc
stc
stc
sti
sti
sti
std
std
std
cld
cld
cld
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
cld
cld
cld
std
cli
cli
cli
clc
clc
clc
std
cmc
cmc
cmc
push
icebp
icebp
std
in
in
in
call
jecxz
fdivrp
fcos
aad
aad
rcl
sar
int
int
lret
inc
mov
inc
ret
ret
std
ret
inc
rol
rol
inc
rol
rol
inc
rol
ret
inc
ret
ret
std
inc
mov
dec
int
std
rcl
sar
aam
aam
fcomp
fdivr
fstp
loop
loop
out
out
in
in
in
push
lock
hlt
hlt
hlt
push
div
std
cli
cli
cli
cld
cld
cld
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
cld
cld
cld
cli
cli
cli
push
div
push
repz
out
out
out
call
loop
fcmovnu
aam
aam
int
int
mov
sar
mov
mov
pushl
scas
scas
ljmp
stos
ljmp
test
ljmp
test
ljmp
stos
stos
ljmp
scas
pushl
mov
pushl
mov
sar
mov
int3
int3
int3
call
rcl
fcmovu
loopne
loopne
out
out
in
in
in
push
repnz
div
stc
stc
stc
cld
cld
cld
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
sti
sti
sti
push
div
std
repz
in
in
in
std
out
out
fstp
aam
aam
lret
lret
lret
std
ret
mov
mov
ljmp
movsb
movsb
lcall
lcall
xchg
xchg
xchg
call
decl
mov
mov
std
mov
nop
std
xchg
xchg
xchg
call
cltd
cltd
lcall
mov
test
mov
rol
leave
leave
leave
std
rcl
sar
fcmovnu
in
in
in
in
in
std
repnz
div
std
cli
cli
cli
cld
cld
cld
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
cld
cld
cld
stc
stc
stc
push
hlt
hlt
out
out
out
jmp
out
fdivr
rcl
sar
mov
lods
lods
jmp
xchg
xchg
decl
xchg
jl
jl
js
js
je
je
jb
jb
jo
jo
outsb
outsb
outsb
ljmp
insl
ljmp
insl
ljmp
insl
ljmp
outsb
ljmp
outsl
pushl
jno
je
je
ja
ja
jnp
jnp
addb
decl
xchg
xchg
lcall
stos
stos
pushl
ret
ret
dec
iret
iret
fcmovu
in
in
in
in
in
push
repz
clc
clc
clc
sti
sti
sti
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
sti
sti
sti
std
div
idiv
icebp
icebp
icebp
std
jmp
std
rcl
sar
ret
ret
ret
std
mov
mov
movsl
movsl
movsl
std
xchg
xchg
xchg
decl
jle
pushl
std
push
push
gs
pop
pop
pop
lcall
pop
std
pop
pop
pop
call
push
std
push
push
push
call
push
std
push
push
push
call
push
std
push
push
push
call
push
std
push
push
push
call
push
std
push
push
push
lcall
pop
std
pop
pop
pop
jmp
std
imul
std
jl
jl
xchg
xchg
jmp
mov
inc
rol
rcl
sar
fstp
out
out
lock
div
idiv
cli
cli
cli
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
cli
cli
cli
push
cmc
cmc
out
out
out
jmp
in
call
xlat
xlat
dec
lret
mov
cmpsb
cmpsb
call
test
ljmp
push
call
decl
dec
decl
dec
incl
inc
cmp
pushl
xor
inc
ljmp
das
inc
jmp
sub
jmp
sub
ljmp
sub
ljmp
cs
ljmp
xor
xor
inc
incl
inc
decl
dec
decl
call
push
lcall
pop
jmp
pushl
jb
addb
jmp
mov
inc
mov
jmp
loop
in
in
in
push
hlt
hlt
stc
stc
stc
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
stc
stc
stc
std
hlt
hlt
hlt
ljmp
call
rcl
std
ret
ret
ret
ljmp
pushf
pushf
decl
jbe
jmp
data16
pop
pop
pop
decl
dec
std
inc
inc
inc
pushl
inc
std
sub
xor
jbe
and
std
ret
sahf
pop
fldt
adc
in
mov
adc
fisubrl
pop
lcall
pusha
and
std
daa
sub
pushl
ss
std
inc
inc
inc
decl
dec
std
push
push
push
jmp
arpl
jae
jae
test
ljmp
rol
iret
iret
iret
std
fdivrp
ljmp
stc
stc
stc
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
stc
stc
stc
push
repz
ljmp
dec
iret
iret
mov
stos
stos
call
addl
pusha
pusha
pusha
call
push
cmp
dec
cmp
cmp
call
movsl
adc
out
mov
adc
out
adc
jmp
mov
sbb
in
sbb
in
sbb
out
sbb
out
sbb
call
mov
adc
int
adc
mov
cmp
cmp
decl
push
lcall
ljmp
jle
jle
xchg
xchg
xchg
jmp
mov
int3
fdivr
call
repnz
clc
clc
clc
cld
cld
cld
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
stc
stc
stc
std
repz
ljmp
dec
iret
iret
std
mov
stos
stos
std
xchg
xchg
xchg
incl
jo
call
gs
dec
push
push
jmp
push
jmp
mov
jmp
mov
std
out
sbb
std
ljmp
std
jmp
daa
jmp
daa
std
jmp
es
jmp
mov
and
out
push
ljmp
mov
cmpsb
ud0
push
call
std
insb
insb
insb
jg
jg
xchg
xchg
xchg
jmp
mov
int
fdivr
call
icebp
icebp
clc
clc
clc
std
cld
cld
cld
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
stc
stc
stc
push
hlt
hlt
ljmp
call
rcl
inc
rol
scas
scas
scas
lcall
xchg
lcall
cmpsl
or
out
adc
in
sbb
out
sbb
in
mov
sub
out
shll
out
ret
xor
icebp
xor
push
aaa
push
cmp
icebp
xor
out
ret
out
mov
daa
jmp
dec
pop
decl
outsb
adc
call
jge
jmp
cmp
addl
stos
stos
stos
mov
rcl
fdivrp
ljmp
stc
stc
stc
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
cli
cli
cli
std
cmc
cmc
cmc
out
out
out
std
in
in
fcomp
fdivr
leave
leave
leave
pushl
cmpsb
lods
call
xchg
sbb
call
cmpsl
pop
jmp
lods
sbb
in
mov
xor
bnd
hlt
cmp
std
test
dec
std
clc
iret
dec
clc
rorb
iret
dec
push
into
dec
std
test
cli
iret
inc
std
cli
int3
cmp
cld
into
ss
pushf
pusha
xor
cwtl
pop
sub
xchg
push
and
std
dec
sbb
roll
push
decl
movsl
pushl
mov
aad
aad
loop
loop
in
in
in
std
hlt
hlt
hlt
stc
stc
stc
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
sti
sti
sti
push
div
push
icebp
icebp
jmp
call
rcl
inc
mov
cmpsb
call
xchg
add
jecxz
or
in
sbb
jmp
mov
push
mov
cmp
hlt
movb
lret
dec
cli
iret
push
sti
rclb
cld
aam
std
pop
std
xlat
pop
std
xlat
pusha
std
xlat
pop
fstps
clc
rcrl
leave
sahf
push
dec
sahf
push
pushl
push
jmp
pusha
xor
cltd
pop
sub
xchg
push
and
mov
dec
mov
call
xchg
pop
pushl
rol
int
int
fdivr
out
out
out
out
out
push
div
cli
cli
cli
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
cld
cld
cld
std
div
idiv
hlt
hlt
hlt
std
in
in
in
jmp
in
std
in
int3
mov
ficompl
adc
jmp
and
out
mov
push
mov
inc
push
dec
std
sti
int
cld
rcrl
aad
fsubrs
fldcw
std
fisubrl
fisubrl
jmp
outsl
call
lea
mov
addr16
mov
arpl
mov
pop
std
scas
jl
ljmp
insb
inc
lcall
pop
call
dec
sbb
fistpl
add
lret
std
fcmovu
loope
jecxz
jecxz
in
in
in
push
repz
clc
clc
clc
sti
sti
sti
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
cli
cli
cli
push
div
push
repnz
in
out
repz
fcompp
inc
addl
rclb
adc
call
mov
push
mov
dec
cli
enter
into
pop
shlb
aad
fdivs
fdivs
fstpt
fstpt
fdivrl
jmp
jp
shrb
jns
mov
xchg
jne
mov
lea
mov
mov
pop
ljmp
jb
jmp
pop
xor
xchg
push
ljmp
xchg
add
jmp
loop
ljmp
push
div
cli
cli
cli
cld
cld
cld
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
cld
cld
cld
std
cld
cld
cld
cli
cli
cli
std
div
clc
push
stc
std
mov
mov
std
xlat
lcall
jmp
mov
inc
cld
enter
into
std
shrl
call
jno
std
xlat
jne
call
jns
std
fidivrl
fstpt
std
fstpt
fstpt
cmc
sarl
mov
lcall
rcrb
mov
xchg
jno
mov
test
scas
jge
std
test
imul
into
xchg
ud0
xchg
std
mov
adc
idiv
std
div
idiv
stc
stc
stc
std
cld
cld
cld
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
cld
cld
cld
inc
fwait
inc
mov
xchg
adc
ficompl
daa
in
mov
push
mov
push
dec
pusha
call
push
call
jb
call
ja
call
jp
fdivrs
xlat
jge
fnstcw
fidivrl
fidivrl
fistpll
loopne
jg
mov
fwait
jle
rcrl
inc
cwtl
jp
mov
xchg
jae
mov
xchg
scas
jge
ljmp
cmp
cwtl
pop
sub
inc
mov
pushl
mov
cld
cld
cld
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
in
mov
std
ret
dec
xchg
push
std
fsubl
xor
out
mov
push
std
cli
leave
pop
std
into
data16
shrl
std
shll
call
ja
aad
std
call
jp
xlat
jp
fnstsw
cld
aad
std
sti
aad
jmp
jnp
shrb
jnp
rcrb
std
rcrb
std
mov
xchg
jbe
mov
mov
mov
popa
ljmp
outsl
inc
lcall
push
sub
stos
insl
pop
std
mov
fs
jmp
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
jmp
jge
inc
lea
call
cwtl
sbb
fisubs
cmp
lock
pop
clc
leave
cld
iret
imul
call
outsb
call
jo
shlb
std
shll
stc
into
jbe
mov
lret
int3
movsb
jbe
iret
test
mov
xchg
ja
mov
xchg
ja
mov
xchg
ja
mov
xchg
je
mov
outsb
pushl
sbbl
push
lcall
pop
and
rorl
popf
jno
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
call
les
pushl
push
call
pushf
and
fildll
inc
std
lock
pop
std
cli
int3
jmp
mov
insl
inc
pushf
outsb
std
mov
mov
mov
jno
lods
xorl
call
insl
std
call
outsb
fisubrl
lret
pushl
nop
jno
mov
nop
jno
mov
xchg
jno
mov
nop
outsl
mov
mov
mov
pusha
std
scas
jp
jmp
pop
xor
mov
mov
ljmp
pop
add
fcmove
mov
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
call
jb
pushl
sbb
aam
daa
fildll
inc
push
rcll
mov
pushl
test
mov
mov
mov
mov
shlb
in
mov
fs
dec
fs
dec
fs
dec
fs
ret
fisubrl
imul
mov
mov
imul
mov
mov
imul
mov
mov
push
mov
mov
mov
pusha
ljmp
jb
lcall
pop
sub
les
or
fwait
imul
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
in
lret
decl
jbe
mov
xchg
sbb
aam
sub
loopne
cmp
in
mov
push
pushl
andl
andb
mov
pop
std
out
rcrb
test
int
sti
leave
pop
std
stc
leave
pop
cli
leave
pop
std
cli
leave
pop
cli
leave
pop
std
sti
lret
dec
pop
std
std
int3
pop
cld
int3
pop
std
shlb
fs
mov
fwait
std
cwtl
pushl
jg
dec
mov
push
jmp
arpl
call
jp
pushl
outsl
add
jns
add
in
jmp
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
pushl
pusha
add
test
or
mov
xchg
sbb
aam
sub
xlat
cmpsb
cmp
lret
ljmp
jl
ljmp
xchg
pop
push
push
push
rcll
ret
push
out
mov
push
push
les
clc
push
push
ret
push
push
les
les
push
push
les
ret
push
push
ret
push
clc
lds
test
push
push
lds
cmc
les
mov
push
in
mov
dec
jmp
mov
pushl
push
sub
cmpsl
imul
lcall
push
add
mov
je
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
sbbb
xchg
add
cmpsl
je
pushl
nop
sbb
fldenv
cmp
popf
outsb
inc
std
stos
je
ljmp
jne
call
popf
dec
std
out
mov
dec
std
out
mov
dec
std
repnz
dec
std
fisubrs
dec
std
fsubrl
dec
std
lret
push
rorb
mov
dec
std
icebp
mov
dec
std
out
mov
dec
std
jmp
dec
jmp
mov
jmp
mov
std
loop
inc
sub
std
mov
jnp
std
lahf
outsl
pop
decl
pusha
adc
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
push
div
pushl
add
xchg
imul
mov
push
inc
nop
sbb
mov
jge
jmp
jne
ljmp
jne
pushl
mov
jmp
inc
ljmp
out
mov
inc
push
mov
inc
push
mov
inc
push
mov
inc
in
mov
inc
jmp
dec
ljmp
call
mov
jmp
mov
jmp
mov
jmp
scas
inc
fisubrs
call
pushf
daa
dec
xchg
sbb
ljmp
outsb
add
ljmp
add
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
call
iret
mov
call
pop
pushl
nop
adc
movsl
imul
mov
outsl
jmp
fcmovne
in
fmul
std
out
fmul
jmp
rol
std
loop
lret
xlat
mov
push
leave
outsb
std
std
ljmp
in
mov
std
cmc
push
roll
jmp
std
in
shll
into
jle
stc
lret
jecxz
std
out
dec
jmp
repz
ljmp
repz
xchg
std
push
lret
lret
cmp
popf
sub
push
std
mov
js
std
pushf
insl
push
decl
inc
add
loopne
iret
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
mov
dec
add
xchg
add
jno
pushl
jae
call
mov
inc
push
add
inc
adc
incl
add
cmp
add
mov
lcall
call
or
in
loope
out
loope
incl
add
imul
das
add
lods
jmp
int3
mov
xor
add
ja
xor
jmp
shrb
call
iret
jns
sti
in
incl
add
push
cli
sar
scas
xchg
je
xor
add
leave
mov
call
cmpsl
inc
inc
mov
pushl
jbe
lcall
pop
add
insb
inc
add
les
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
ljmp
dec
add
nop
fs
sahf
insl
add
std
lea
lcall
leave
mov
std
jle
cmp
xlat
ret
mov
int
cmpsb
fcmovnb
mov
decl
add
dec
adc
decl
add
dec
pop
add
enter
mov
jbe
inc
or
std
repz
pushl
and
dec
adc
push
fbstp
jmp
shrb
jmp
int
cli
out
std
push
pop
add
std
out
mov
or
dec
mov
aas
mov
jge
jmp
imul
pushl
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
jmp
dec
add
lea
lcall
jbe
decl
push
and
fadd
mov
push
sbb
jmp
pop
incl
xor
scas
lahf
jmp
leave
incl
add
mov
jge
xchg
jb
decl
add
clc
ljmp
sbb
jmp
adc
inc
or
push
push
sar
mov
jmp
shrl
lcall
leave
jne
mul
stos
call
or
pop
sub
pushl
sub
addr16
sbb
dec
adc
cwtl
dec
sahf
aaa
pushl
jp
jmp
addr16
ljmp
add
test
je
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
jmp
dec
add
mov
std
xchg
imul
call
mov
push
sbb
std
jb
sub
scas
mov
mov
mov
ret
pushl
cs
jns
xor
bound
adc
test
imul
iret
std
scas
mov
inc
or
mov
mov
or
pushl
clc
lret
in
std
inc
or
jmp
std
sar
push
int
push
and
std
popf
jns
jge
xor
dec
adc
dec
mov
std
enter
mov
add
stos
jbe
lcall
fs
sbbl
jmp
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
jmp
dec
add
xchg
call
jb
decl
push
daa
mov
dec
adc
lcall
adc
test
jnp
xor
mov
cmp
test
mov
inc
or
incl
add
scas
mov
ljmp
or
incl
sub
aas
pop
add
lds
and
pop
sub
dec
sbb
call
push
call
add
test
ljmp
and
call
cmp
add
leave
mov
dec
fwait
cmp
scas
js
jmp
imul
jle
add
fs
add
scas
lahf
jg
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
pushl
inc
add
sbbb
arpl
sahf
outsb
add
mov
lcall
lods
xchg
jmp
xorl
jle
std
popf
jnp
mov
mov
fstpt
insl
jmp
scas
lcall
mov
outsb
std
movsb
test
mov
cmpsb
mov
push
sar
stos
mov
cmpsb
xchg
stos
mov
test
outsl
std
mov
fidivrl
pushl
nop
dec
mov
std
lahf
jg
call
mov
xor
stos
jbe
std
lahf
outsb
add
xchg
push
add
jnp
add
pusha
cmp
mov
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
dec
ret
mov
fs
jle
add
mov
call
bound
lcall
imul
mov
xchg
jo
mov
jge
jmp
cmpb
leave
movsb
gs
mov
imul
cltd
pop
cs
test
imul
loope
data16
fisubrl
cmp
fnsave
push
loope
imul
fistpll
push
push
inc
xchg
das
dec
mov
gs
pushf
inc
pushl
jp
lcall
fs
sbbb
je
add
pop
xor
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
out
in
call
js
add
test
call
pop
pop
lcall
pop
xor
lcall
lcall
pop
sub
pushf
popa
sub
mov
jne
std
pushf
bound
lcall
xor
lcall
dec
xchg
and
xchg
and
enter
xchg
and
xchg
and
xchg
and
lds
and
les
and
rcll
inc
mov
std
mov
mov
std
mov
mov
ljmp
push
add
call
xor
stc
cli
stc
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
jmp
add
jae
add
sbbl
lcall
addr16
jmp
cmp
sahf
imul
jmp
arpl
lcall
fs
mov
cmp
lahf
fs
lods
je
dec
pushf
das
dec
cltd
xor
cltd
xor
enter
cltd
xor
cltd
xor
lds
xor
les
xor
les
xor
rcll
mov
xor
mov
xor
mov
xor
stos
test
decl
inc
adc
mov
incl
inc
or
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
jp
ljmp
add
jnp
add
std
xchg
pop
sub
std
movsl
insl
inc
jmp
insb
inc
jmp
insb
inc
jmp
push
ljmp
jb
jmp
inc
ljmp
jo
mov
cltd
cmp
lcall
lcall
lcall
lds
cmp
ret
xchg
cmp
ret
inc
xchg
cmp
mov
xchg
cmp
mov
aaa
std
mov
cmp
stos
mov
std
mov
decl
inc
adc
jbe
add
xchg
xchg
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
call
enter
aaa
add
jbe
add
jnp
add
xchg
pop
sub
stos
je
ljmp
jb
ljmp
jno
jmp
outsb
inc
ljmp
xchg
ljmp
jo
jmp
jne
inc
xchg
inc
dec
lahf
aas
inc
sahf
aas
inc
sahf
aas
inc
pushf
inc
inc
lcall
lds
inc
inc
cltd
inc
inc
cwtl
inc
inc
cltd
ds
cwtl
ds
mov
xchg
ds
mov
xchg
pushl
lea
ljmp
ds
lea
lcall
xor
int
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
lcall
add
outsb
dec
add
js
add
push
sbb
scas
jp
std
stos
ja
ljmp
jne
ljmp
orl
cwtl
inc
std
ret
inc
popf
inc
std
mov
dec
ljmp
jne
ljmp
jl
inc
popf
inc
std
mov
dec
pushl
sahf
inc
inc
popf
inc
std
lds
inc
std
les
std
ret
inc
lcall
mov
xchg
inc
mov
xchg
inc
pushl
inc
jmp
inc
or
lea
std
orl
pop
inc
pop
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
ljmp
add
jge
or
mov
ljmp
jnp
ljmp
jnp
ljmp
mov
mov
fwait
dec
inc
popf
dec
pushl
js
ljmp
jns
ljmp
jge
inc
popf
dec
inc
popf
dec
inc
sahf
dec
inc
sahf
dec
inc
sahf
dec
inc
pushf
dec
inc
popf
dec
inc
fwait
dec
inc
pushf
dec
mov
lcall
mov
xchg
dec
pushl
xchg
dec
pushl
popa
xor
call
cmp
pushl
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
push
cmp
jle
or
mov
jmp
sbbb
push
std
mov
pop
pushl
jl
mov
pushf
dec
mov
jnp
pushl
sbbb
xchg
mov
xchg
push
std
ret
inc
lahf
push
std
ret
lahf
push
inc
popf
push
std
ret
inc
sahf
push
std
rcrl
rcrb
std
mov
lcall
mov
push
std
mov
push
ljmp
mov
xchg
dec
sbb
lea
test
std
push
cmp
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
mov
xor
incl
dec
adc
mov
push
ljmp
sbbb
pop
pushl
xchg
pop
mov
xchg
push
inc
mov
push
inc
mov
push
inc
lahf
push
inc
lahf
push
inc
sahf
push
inc
sahf
push
inc
lahf
push
inc
lahf
push
inc
lahf
push
inc
lahf
push
mov
sahf
push
mov
pushf
push
mov
cltd
push
pushl
xchg
push
ljmp
push
decl
dec
adc
push
xor
dec
mov
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
pushl
sbb
pop
cmp
incl
imul
std
lods
xchg
push
pushl
xchg
pop
pushl
xchg
pop
mov
mov
mov
pop
std
mov
mov
pop
inc
mov
pop
inc
mov
pop
mov
mov
pop
std
mov
lahf
pop
std
mov
popf
pop
std
mov
cltd
pop
std
mov
pop
pushl
xchg
pop
mov
push
and
nop
inc
push
std
outsb
inc
add
ja
xor
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
sti
sti
sti
lcall
add
popa
aas
add
jge
add
mov
lea
lods
pusha
pushl
xchg
pop
pushl
mov
mov
pushl
mov
pop
mov
fwait
pop
mov
mov
pop
mov
lahf
pop
mov
lahf
pop
mov
pushf
pop
mov
pushf
pop
pushl
cwtl
pop
pushl
xchg
push
decl
push
call
add
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
lret
call
std
imul
std
test
cltd
fs
mov
pusha
pushl
xchg
arpl
mov
arpl
mov
mov
pop
pushl
mov
mov
imul
mov
lahf
popa
mov
mov
popa
std
mov
lahf
popa
std
mov
popf
popa
std
mov
popa
pushl
xchg
data16
mov
mov
lea
std
orl
dec
sub
std
call
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
dec
les
jmp
add
jb
add
cmpsl
nop
pop
pushl
xchg
pushl
arpl
mov
pushl
mov
mov
mov
lcall
mov
mov
fs
mov
mov
pushl
popf
pushl
lcall
mov
mov
addl
addb
dec
cs
fcom
ret
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
ror
mov
std
gs
add
insb
dec
add
cltd
jg
pushl
pushl
std
mov
insl
mov
mov
mov
mov
mov
push
mov
mov
addr16
mov
sahf
addr16
mov
pushw
pushf
ljmpw
xchg
push
std
lahf
adcl
dec
add
fs
add
dec
das
add
fcmovnbe
lret
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
ljmp
lcall
ljmp
add
jle
sbb
test
fwait
jae
ret
mov
nop
jo
mov
xchg
outsb
pushl
sahf
push
mov
xchg
imul
sahf
push
pushl
fwait
push
mov
imul
cwtl
imul
xchg
ja
mov
bound
arpl
pop
cmp
jmp
add
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
decl
xor
jmp
add
imul
std
mov
cltd
jae
mov
jno
mov
outsb
std
mov
push
mov
push
mov
push
mov
imul
mov
push
mov
push
mov
outsl
std
mov
jno
mov
jb
mov
imul
push
push
pushl
add
dec
sub
pop
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
jmp
pushl
pop
call
add
pop
ds
addr16
add
jae
or
lcall
xchg
ljmp
fwait
insl
ljmp
fwait
outsl
pushl
nop
imul
mov
mov
call
inc
push
ljmp
add
dec
das
add
jne
daa
jmp
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
int3
decl
xor
add
pop
cmp
jmp
add
push
add
outsb
push
or
xchg
decl
push
sbb
jnp
adc
jo
add
std
pop
cmp
lcall
add
push
ss
mov
std
in
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
dec
les
pushl
sbb
push
cmp
call
call
add
push
xor
call
add
push
xor
lcall
add
jae
pop
lcall
mov
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
cld
std
repz
in
jmp
std
repz
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
sub
add
xor
add
pusha
add
add
add
add
add
add
add
add
std
std
std
std
std
std
sti
sti
sti
cld
cld
cld
cld
cld
cld
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
cld
cld
cld
cld
cld
cld
std
std
std
std
std
std
std
std
std
std
std
std
cli
cli
cli
cli
cli
cli
clc
clc
clc
push
div
push
repz
repz
repnz
icebp
icebp
push
lock
lock
lock
lock
icebp
icebp
push
repnz
hlt
hlt
push
hlt
hlt
push
div
stc
stc
stc
sti
sti
sti
sti
sti
sti
cld
cld
cld
std
std
std
std
std
std
std
std
std
cld
cld
cld
cli
cli
cli
push
div
push
hlt
hlt
push
repnz
in
in
in
jmp
jmp
out
out
in
in
loope
loope
fdivrp
fdivrp
fdivrp
fstp
loopne
loopne
loope
loope
loop
loop
out
out
call
in
in
out
out
out
push
hlt
hlt
push
div
stc
stc
stc
sti
sti
sti
std
std
std
std
std
std
std
std
std
cli
cli
cli
push
div
push
hlt
hlt
in
in
in
jmp
out
jmp
loop
fcmovnu
xlat
xlat
xlat
call
rcl
dec
into
into
dec
lret
lret
dec
enter
mov
inc
ret
ret
inc
mov
inc
mov
enter
lret
lret
lret
call
rcl
call
aad
fcmovu
loopne
loopne
out
out
in
in
in
push
repnz
cmc
cmc
stc
stc
stc
cld
cld
cld
std
std
std
std
std
std
std
std
std
cli
cli
cli
push
cmc
cmc
out
out
out
jmp
out
fdivrp
dec
lret
lret
inc
mov
mov
ljmp
stos
stos
ljmp
movsl
movsl
jmp
mov
movsl
jmp
test
ljmp
scas
scas
pushl
mov
mov
call
rcl
fcmovu
in
in
in
in
in
push
repz
clc
clc
clc
cld
cld
cld
sti
sti
sti
push
div
out
out
out
jmp
in
fcos
lret
lret
lret
mov
mov
jmp
lcall
mov
incl
jle
jle
jle
jl
jl
jl
jl
jg
jg
addb
decl
call
mov
stos
mov
rcl
sar
loope
loope
in
in
in
push
hlt
hlt
stc
stc
stc
std
std
std
std
std
std
std
std
std
stc
stc
stc
push
hlt
hlt
call
fcmovu
dec
leave
leave
pushl
mov
jg
jg
jae
jae
push
arpl
pop
pop
pop
lcall
pop
call
pop
call
push
call
pop
call
push
call
pop
lcall
pop
lcall
jmp
popa
jmp
ljmp
outsl
jp
jp
mov
cltd
ljmp
rol
aam
aam
jecxz
jecxz
out
out
out
push
div
cld
cld
cld
std
std
std
clc
clc
clc
out
out
out
jmp
loop
call
rcl
mov
mov
mov
jne
jne
bound
call
incl
dec
cmp
ljmp
das
inc
jmp
sub
pushl
inc
xor
push
dec
xor
dec
inc
xor
cmp
aaa
jmp
notrack
sub
inc
incl
inc
call
push
lcall
ljmp
incl
xchg
xchg
pushl
mov
ljmp
sti
sti
sti
cld
cld
cld
clc
clc
clc
in
in
in
fstp
enter
mov
mov
xchg
xchg
xchg
jp
jp
fs
push
ljmp
ss
pushl
xor
js
and
ljmp
push
ret
adc
hlt
les
push
ret
adc
test
out
mov
adc
mov
incl
xor
incl
dec
lcall
pushl
jno
mov
movsb
mov
jmp
out
push
repz
cld
cld
cld
cld
cld
cld
push
div
jmp
jmp
fdivr
enter
lods
lods
lods
call
ja
call
decl
dec
ljmp
or
in
mov
push
jmp
mov
and
jmp
mov
sbb
lret
dec
test
inc
xchg
pop
lcall
inc
incl
ljmp
jo
xchg
mov
call
aad
jmp
out
push
repz
cli
cli
cli
std
std
std
push
div
in
in
in
int3
int3
int3
pushl
cwtl
fwait
pushl
xchg
jmp
scas
push
in
mov
jmp
mov
jmp
and
out
mov
xor
icebp
ss
enter
leave
cmp
repz
lds
push
xor
cmc
cs
fsubs
and
xchg
dec
sbb
roll
ljmp
test
mov
cmpsl
inc
ret
ret
fcomp
fdivr
call
hlt
hlt
sti
sti
sti
std
std
std
clc
clc
clc
push
lock
in
call
aam
mov
stos
mov
in
cmpsb
pop
call
mov
out
mov
cmp
test
clc
into
dec
stc
rcll
cli
rcll
cli
aad
sti
aam
fsts
repnz
dec
push
enter
jle
lcall
pop
sub
mov
lcall
lahf
add
mov
mov
lret
fdivrp
in
in
in
push
div
cld
cld
cld
cli
cli
cli
push
hlt
hlt
jmp
jmp
loopne
out
into
rcr
call
mov
jmp
pushf
push
ljmp
push
mov
dec
cli
int3
push
cld
rcrl
call
gs
fsubrs
fldt
fldt
jmp
insl
ljmp
js
ljmp
imul
jmp
add
mov
call
push
icebp
icebp
clc
clc
clc
cld
cld
cld
cld
cld
cld
clc
clc
clc
push
hlt
idiv
out
cmc
inc
test
call
xchg
push
jmp
movsl
sbb
lock
push
mov
push
dec
pop
aam
fdivs
fnstcw
fstpt
fnstsw
jmp
jl
mov
nop
jp
mov
xchg
je
mov
xchg
lods
jl
jmp
popa
xor
dec
daa
dec
or
sarb
jecxz
push
hlt
stc
push
div
cli
cli
cli
std
std
std
std
std
std
std
std
std
sti
sti
cld
mov
xchg
ficompl
push
mov
push
dec
fs
call
jo
call
ja
call
jp
fnstcw
fidivrl
faddl
dec
mov
jg
rcrl
mov
xchg
jb
mov
push
jmp
pop
xor
cwtl
pop
and
int3
xchg
add
lods
je
sti
sti
std
std
std
std
fmul
mov
dec
xchg
adc
fbld
cmp
hlt
rorl
lret
call
push
shll
js
fidivrl
fstpt
fnstsw
sti
jl
jmp
jl
iret
stos
jl
mov
cltd
jnp
rcrb
mov
xchg
jo
mov
ljmp
jmp
push
jmp
jl
mov
lcall
test
call
cwtl
sbb
loopne
cs
in
mov
pop
std
into
gs
call
insb
call
insl
stc
into
jo
call
mov
jne
in
ret
jne
xlat
scas
jne
mov
jbe
mov
xchg
jbe
mov
xchg
ja
mov
xchg
jb
mov
test
stos
jbe
lcall
push
and
ret
decl
repnz
dec
mov
lcall
mov
call
fwait
and
loop
cmp
out
mov
pop
call
stos
pushl
pushl
jo
rclb
push
imul
fldt
into
mov
outsl
pushl
mov
mov
lea
mov
outsb
mov
andl
push
jmp
pusha
sub
lds
add
movsb
test
decl
jne
mov
pushf
and
push
lds
rclb
inc
xchg
fs
fcomps
aam
fisubrl
pop
std
int
std
int3
pop
sti
lret
call
pop
sti
lret
icebp
ret
rcll
inc
xchg
fs
mov
jg
inc
xchg
pop
pushl
inc
call
adcl
test
add
ljmp
ljmp
mov
inc
xchg
cmp
mov
ja
ljmp
mov
push
push
rcll
les
out
mov
push
jmp
scas
push
clc
lds
in
mov
push
push
les
sti
enter
push
clc
push
push
les
in
mov
push
in
mov
cmp
movsl
sub
lods
jno
ljmp
push
add
ret
mov
mov
pop
add
test
mov
rcrb
lcall
insl
inc
lcall
scas
cmp
in
mov
inc
out
mov
cmp
out
cmp
in
mov
jmp
stos
cmp
out
mov
in
mov
in
mov
call
mov
jmp
mov
jmp
scas
cmp
fisubl
mov
jne
decl
jbe
call
add
cmpsl
jne
mov
ja
mov
aad
call
rol
fadd
mov
repnz
jmp
nop
in
mov
jmp
jo
sti
sar
iret
jl
lock
sti
out
lds
out
dec
push
mov
out
lret
jp
push
mov
dec
xchg
push
pushl
jae
decl
add
js
add
mov
jmp
pop
call
test
cmp
add
aas
push
add
xor
add
lcall
dec
mov
dec
lcall
adc
nop
imul
inc
cs
out
call
add
loopne
cltd
push
fisubrs
out
fwait
jmp
ljmp
add
call
mov
pushf
ljmp
add
clc
loopne
mov
jge
jmp
popa
add
pop
xor
jmp
add
mov
jmp
fs
xchg
dec
and
lds
add
in
call
shll
inc
or
incl
or
dec
mov
lcall
dec
sub
pop
sub
jmp
fdivs
out
aam
pushl
add
jmp
int3
xchg
jecxz
incl
add
lods
mov
lods
mov
inc
push
frstor
ljmp
insl
add
mov
lcall
add
stc
stc
stc
jmp
add
xchg
popf
outsl
add
xchg
pop
or
xchg
dec
sbb
les
add
xchg
imul
cmp
clc
ljmp
xchg
outsb
push
aas
push
add
sti
out
xchg
insb
dec
ljmp
pushl
add
push
ret
clc
into
pushl
add
cld
in
call
decl
add
outsb
inc
and
outsb
inc
and
dec
pop
add
lock
ljmp
push
add
pop
xor
push
hlt
lock
jmp
add
sbbl
call
dec
and
ret
cmp
add
jo
sub
popa
xor
call
mov
dec
mov
ljmp
add
sbbl
in
shlb
decl
add
push
and
dec
adc
inc
cmpsl
mov
cmp
or
cmp
mov
add
ret
ret
xor
add
out
fisubl
jmp
add
sbbb
push
sub
pushl
jns
add
xchg
gs
xchg
fs
xchg
push
and
call
mov
movsl
call
mov
pushl
cwtl
push
fcmovnb
lods
dec
lods
lcall
rorl
jmp
into
mov
jmp
lret
call
cmpsl
jmp
shlb
jmp
shll
fdivrs
test
enter
lods
jns
lcall
popa
add
ja
add
dec
sub
call
dec
add
mov
call
pop
aaa
lcall
pop
sub
fwait
pop
sub
lcall
pushl
data16
sahf
pop
sub
xchg
push
cs
xchg
and
lret
cwtl
and
leave
xchg
and
xchg
sbb
xchg
push
dec
xchg
and
xchg
and
xchg
and
ret
inc
xchg
pop
mov
mov
mov
xchg
ljmp
push
or
mov
jmp
push
mov
cmp
incl
pop
push
jmp
addr16
mov
insb
cmp
mov
data16
sahf
bound
jmp
arpl
scas
js
inc
xchg
xor
enter
cwtl
xor
cwtl
xor
lds
xor
les
xor
rcll
mov
mov
pushl
mov
mov
decl
aas
add
mov
decl
add
jnp
add
orl
jmp
outsl
inc
jmp
insb
inc
jmp
addb
js
jmp
inc
mov
lcall
lds
cmp
cltd
cmp
lds
cmp
inc
xchg
cmp
mov
xchg
cmp
mov
cmp
lods
mov
decl
inc
adc
imul
dec
enter
pushl
and
insb
dec
add
jl
add
mov
pop
ljmp
jbe
ljmp
test
mov
mov
dec
ljmp
jb
mov
lcall
lahf
inc
inc
fwait
inc
inc
pushf
inc
inc
pushf
inc
inc
fwait
inc
inc
lcall
mov
xchg
inc
pushl
xchg
inc
ljmp
ds
xchg
inc
ud0
add
call
rol
call
add
xchg
or
test
dec
ljmp
jp
ljmp
xchg
dec
inc
sahf
dec
inc
popf
dec
ljmp
js
ljmp
pop
mov
lahf
dec
inc
sahf
dec
inc
sahf
dec
inc
sahf
dec
inc
popf
dec
inc
pushf
dec
mov
lcall
mov
xchg
dec
ljmp
push
or
jno
add
mov
ljmp
adc
jge
add
xchg
push
pop
pushl
pop
pushl
jge
mov
cltd
push
pushl
push
mov
mov
push
inc
lahf
push
inc
lahf
push
inc
lahf
push
inc
popf
push
inc
sahf
push
mov
pushf
push
mov
lcall
scas
xchg
push
pushl
dec
push
call
das
add
push
hlt
repnz
add
cmpl
pushl
xchg
pusha
pushl
mov
mov
pop
mov
pop
mov
mov
pop
inc
mov
pop
inc
mov
pop
inc
mov
pop
mov
popf
pop
mov
lcall
mov
pop
pushl
cmp
lcall
add
mov
mov
and
add
lods
xchg
imul
mov
pop
pushl
mov
mov
arpl
mov
mov
popa
mov
mov
pop
mov
mov
pop
mov
popf
pop
mov
lcall
mov
dec
pop
pushl
add
jg
inc
call
sub
pushl
push
pushl
pushf
push
pushl
mov
popa
pushl
xchg
fwait
arpl
mov
lahf
arpl
mov
mov
popa
mov
pushf
arpl
mov
mov
cltd
jnp
cwtl
pop
daa
pushl
jmp
adc
call
es
outsb
dec
add
test
mov
imul
mov
mov
mov
mov
gs
mov
lahf
data16
mov
sahf
pushl
pushl
fwait
insl
mov
pop
pop
lcall
add
push
sbb
mov
and
lcall
add
mov
pushl
fwait
jle
mov
xchg
jno
mov
insb
pushl
insl
pushl
push
pushl
popf
jb
mov
jl
pushl
add
inc
and
call
cli
sti
sti
pushl
sbb
dec
and
lcall
add
andb
lahf
mov
mov
jb
mov
js
mov
jbe
mov
je
mov
jne
mov
ja
mov
jnp
cmpsl
xchg
ljmp
inc
or
pop
sub
lcall
add
loope
aam
sar
andb
dec
and
add
pop
cmp
ljmp
incl
pusha
sub
xchg
pop
daa
incl
ds
push
cs
dec
and
ljmp
adc
enter
dec
shrl
pusha
daa
jmp
pop
lcall
add
pusha
inc
add
jb
push
call
mov
cli
sti
cld
incl
add
add
add
add
add
and
sub
add
add
xor
add
add
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
mov
hlt
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
rolb
add
add
xor
xor
xor
xor
xor
xor
bound
xor
add
pop
add
add
add
outsl
add
insl
add
outsb
add
add
add
add
imul
jb
and
data16
jb
and
push
add
popa
add
insb
add
outsb
add
add
push
add
add
outsb
add
add
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
inc
add
imul
add
imul
add
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
popa
add
outsb
add
jb
and
data16
jb
and
push
add
popa
add
insb
add
outsb
add
add
push
add
add
outsb
add
add
add
add
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
adc
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
push
add
add
outsb
add
add
insb
add
add
add
js
add
add
adc
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
test
add
add
add
add
add
add
adc
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
inc
add
outsl
add
je
inc
add
outsb
add
add
insb
add
add
add
js
add
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
inc
add
outsl
add
je
and
inc
add
outsb
add
add
insb
add
add
add
add
xor
or
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
add
add
jae
jae
add
bound
insb
add
and
push
add
jb
jae
imul
add
xor
add
add
add
add
add
