cld
sub
mov
add
jnp
mov
out
add
mov
sbb
sub
movsl
cli
inc
jnp
mov
inc
add
mov
out
add
jnp
mov
add
fadds
sbb
cld
cli
cmpl
adc
inc
sbb
sbb
gs
add
mov
inc
rcrb
loopne
add
xchg
arpl
sbb
fidivrl
add
out
cmc
js
add
mov
testl
cmp
out
out
loopne
mov
inc
cltd
push
je
add
mov
jmp
add
jle
inc
cwtl
add
add
mov
jns
into
nop
cld
cli
cmpl
mov
mov
into
mov
add
ss
sbb
inc
cltd
adc
repz
arpl
adc
shl
icebp
add
add
mov
orb
adc
shlb
adc
add
adc
mov
mov
add
lcall
mov
sbb
lahf
js
add
and
js
add
adc
into
popa
adc
testl
add
add
popf
shlb
xchg
cmp
cltd
fsts
cmc
inc
inc
into
xor
cmp
mull
inc
lds
cmc
inc
inc
cld
push
mov
add
scas
push
adc
inc
sub
xchg
je
js
add
adc
sbb
pop
sahf
jns
nop
clc
in
add
ss
sbb
jnp
mov
sub
add
lahf
xor
lcall
add
movsl
sub
push
sub
mov
mov
subl
add
movsl
out
lcall
repz
add
fadds
sbb
pop
js
add
sub
add
out
push
shlb
add
idivl
add
inc
cmp
cltd
mov
std
fadds
mov
sub
fadds
in
sub
mov
sbb
mov
sbb
sub
xor
xchg
subl
loopne
mov
decl
pusha
aas
sub
add
mov
sbb
sub
movsl
cli
inc
xor
sbb
add
adc
xchg
adc
push
adc
adc
add
adc
xchg
and
push
adc
inc
sbb
clc
mov
pusha
shrb
add
mov
push
js
fldl
add
inc
jecxz
xchg
adc
pop
mov
mov
adc
fadds
ljmp
xchg
cmpl
subl
xchg
xchg
idiv
aam
rolb
add
in
in
add
push
sub
pusha
or
fadds
mov
cwtl
sub
add
add
mov
add
add
in
in
add
cpuid
sub
add
inc
in
jo
int3
or
ret
push
mov
mov
cltd
cltd
mov
cltd
cltd
cltd
mov
negb
inc
cltd
cltd
insl
movsl
push
pop
mov
stos
sti
cltd
int3
mov
cltd
cltd
mov
mov
stos
cmc
cltd
int3
lea
insl
mov
fwait
test
scas
fwait
test
insl
fmulp
outsl
int3
cmp
mov
mov
cltd
mov
fwait
int3
xor
sub
ss
out
daa
insl
sub
mov
shl
cltd
cltd
mov
int3
mov
stos
arpl
fiadds
or
push
cltd
fwait
test
scas
fwait
test
mov
or
mov
cltd
cltd
mov
int3
xchg
adc
test
ficoms
cltd
cltd
or
push
inc
xchg
mov
xor
sub
in
insl
mov
mov
jo
lds
add
mov
cltd
cltd
cltd
insl
push
mov
insl
scas
mov
mov
fwait
ret
and
mov
fmull
or
cs
push
enter
out
insl
hlt
mov
mov
pop
add
call
xor
mov
mov
cltd
cltd
cltd
jo
push
mov
adc
pop
fwait
fwait
fwait
push
hlt
adc
ret
and
ficoms
fwait
fwait
mov
leave
dec
mov
fwait
mov
mov
fidivs
cltd
cltd
adc
jo
inc
jo
ficompl
cltd
adc
xchg
lock
fcmove
fisubs
cltd
cltd
adc
loop
jo
fisubrl
fiadds
out
cltd
adc
mov
fiadds
pop
daa
push
cld
fiadds
ret
mov
fiadds
out
cltd
adc
lods
fidivrl
cltd
mov
stc
adc
push
adc
cltd
adc
jbe
xchg
jo
fcmovu
fsubp
out
cltd
adc
int3
jo
fidivl
cltd
adc
push
push
and
fisubl
cltd
adc
lods
fidivrl
mov
cltd
cltd
adc
fisubl
cltd
mov
add
leave
pop
fwait
fwait
fwait
push
cmp
fwait
in
movsl
ret
ficompl
mov
mov
sub
leave
add
sub
sub
fwait
in
mov
int3
sub
ficompl
fwait
in
add
mov
xor
subl
arpl
xchg
leave
fildl
fwait
lods
scas
xchg
jno
insl
mull
fildl
fwait
lods
scas
arpl
ret
insl
cmpsb
mov
aas
lods
scas
out
lods
cmpsb
mov
xchg
pop
cltd
cltd
cltd
insl
scas
out
push
inc
insl
in
mov
scas
out
insl
outsb
or
xchg
sub
mov
jo
inc
xor
fiaddl
scas
fwait
jno
fiadds
leave
add
int3
iret
insl
fiaddl
fcomi
in
fiaddl
scas
fwait
jno
ficoms
fwait
fwait
or
add
int3
cmpsb
mov
sti
mov
cmpsb
insl
fidivrl
xor
sub
mov
mov
insl
fisubl
push
out
mov
in
out
push
mov
jecxz
insl
pop
xchg
leave
lods
in
mov
pop
and
jno
lods
enter
fcompl
leave
pop
lods
jecxz
mov
cltd
insl
enter
fidivl
fidivrl
ficomps
push
fwait
fwait
or
add
mov
enter
mov
fcompl
scas
fcmovnu
stc
scas
fidivrs
fwait
fwait
or
add
mov
enter
mov
cltd
cltd
cltd
fcmovnu
mov
scas
fidivrs
fwait
fwait
or
add
mov
enter
jno
lea
fcmovnu
mov
scas
ficoms
push
fwait
fwait
or
add
mov
fidivrl
arpl
lods
fisubl
int3
mov
and
xor
cltd
insl
jecxz
fwait
jecxz
leave
mov
jecxz
insl
js
sub
repz
mov
fwait
jecxz
leave
add
cltd
insl
fidivl
fidivl
cltd
insl
fcmovu
fwait
jecxz
leave
add
cltd
insl
push
inc
xor
stc
insl
inc
add
rol
pop
lods
ficoml
ret
in
and
sbb
cltd
push
fisubl
cltd
cltd
daa
fisubl
insl
fidivl
cmpsb
gs
cmpsb
fidivl
mov
or
jno
insl
enter
inc
cltd
cltd
fcmovnu
cmpsb
scas
fcmovnu
stc
scas
fimuls
leave
add
mov
dec
jno
mov
xchg
fcmovnu
xchg
lods
enter
scas
fisubs
leave
add
mov
adc
and
push
pop
cltd
cltd
cltd
insl
ficoml
push
std
cltd
cltd
cltd
daa
fisubl
sahf
cltd
cltd
cltd
insl
fidivl
cmpsb
gs
cmpsb
fidivl
mov
mov
cltd
cltd
mov
arpl
fcmovu
fwait
jecxz
leave
add
cltd
insl
inc
lea
inc
fisubl
ficoml
scas
fmulp
pop
fwait
fwait
or
add
mov
fisubl
cltd
scas
or
ficoml
cltd
scas
or
ficoml
cltd
aaa
arpl
add
jecxz
push
inc
sbb
and
and
insl
fidivl
cmpsb
gs
cmpsb
fidivl
mov
enter
xor
fwait
jecxz
leave
add
sbb
jecxz
leave
add
or
stc
insl
jecxz
gs
repz
fidivl
dec
mov
mov
fidivl
or
lcall
in
insl
mov
add
out
mov
insl
mull
cltd
lods
jecxz
mov
notl
cltd
fcmovne
inc
mov
enter
out
fstpl
xchg
cltd
jno
insl
fidivrl
lods
ficoml
inc
scas
insl
mov
or
movsl
scas
fwait
test
push
cltd
lods
mov
fwait
jno
scas
fwait
test
mov
push
arpl
movsl
inc
fwait
or
sub
jecxz
lods
ficoml
lock
ficoml
fiaddl
mov
mov
sar
fiaddl
xchg
icebp
test
insl
mov
mov
insl
fisubl
inc
mov
cld
inc
cltd
cltd
cltd
insl
cltd
mov
adc
cltd
cltd
cltd
mov
mov
mov
stc
arpl
notl
cltd
mov
fsubrp
cltd
cltd
cltd
mov
mov
cltd
cltd
cltd
mov
and
mov
jg
cltd
cltd
cltd
inc
mov
cltd
jo
mov
insl
push
insl
popa
inc
pop
mov
add
mov
inc
dec
rorl
int3
je
fidivrl
fwait
aaa
mov
aaa
stc
fwait
scas
out
mov
mov
cltd
cltd
arpl
mov
cld
int3
sti
inc
jmp
insl
aaa
mov
popa
leave
ss
dec
sub
int3
cmc
insl
test
adc
stos
insl
testl
fcmovnu
movsl
scas
insl
fidivrl
fwait
scas
xchg
insl
fisubl
andl
sti
mov
scas
fwait
fwait
fwait
test
adc
mov
fisubl
insl
cltd
cmc
push
cltd
cltd
mov
adc
insl
cmpsb
leave
ss
lea
insl
mull
scas
cmpsb
mov
push
fwait
fwait
fwait
cmp
insl
mov
mov
insl
enter
fwait
mov
mov
fisubl
js
cwtl
mov
or
arpl
leave
sbb
adc
insl
mov
add
fidivrl
insl
jno
scas
fwait
jo
scas
fwait
jo
ret
add
mov
out
scas
fwait
jo
scas
fwait
jo
mov
insl
jno
scas
fwait
jo
scas
fwait
jo
xor
in
insl
mov
mov
inc
insl
pop
cmpsb
jo
insl
or
aaa
arpl
adc
add
cltd
cltd
lods
jno
mov
lahf
adc
cltd
cltd
insl
sub
mov
test
scas
mov
mov
cltd
cltd
mov
insl
push
mov
cltd
cltd
cltd
or
scas
insl
fidivrl
lods
fidivrl
mov
sarl
leave
arpl
aaa
cmpsb
fisubrs
fwait
fwait
mov
cmpsb
leave
add
push
insl
insb
mov
xchg
repz
sarl
rorl
sbb
or
movsl
lods
fisubl
out
or
lods
jno
insl
fisubl
int3
ret
cltd
cltd
adc
pop
nop
fwait
fwait
cltd
cltd
mov
or
mov
fidivrl
arpl
add
fisubl
mov
cltd
mov
dec
insl
fidivrl
test
scas
mov
aas
fwait
fwait
fwait
mov
cltd
insl
fiaddl
test
adc
mov
jo
jno
ret
or
mov
insl
sub
arpl
insl
mov
fwait
js
xor
mov
enter
mov
cmpsb
stos
mov
mov
insl
jecxz
insl
arpl
mov
scas
fwait
test
fisubl
mov
xchg
cmp
cmp
or
mov
push
or
adc
scas
fwait
test
jo
fwait
test
scas
fwait
test
test
adc
mov
mov
fcompl
inc
jo
jnp
mov
jecxz
cltd
cltd
insl
aas
and
lods
fiaddl
inc
sub
leave
mov
xlat
fnsave
dec
rcrb
cltd
ficomps
subl
fs
cltd
insl
jno
jmp
out
rcrb
lods
leave
mov
fwait
fwait
insl
mov
leave
and
fwait
jo
insl
pop
add
iret
cltd
cltd
push
arpl
aaa
lock
jo
leave
add
push
arpl
fwait
jo
leave
add
sbbl
cltd
fwait
jo
scas
fwait
jo
insl
movsl
insl
fidivrl
cltd
out
cltd
cltd
lods
push
lods
lret
lret
aaa
scas
scas
fwait
jo
push
arpl
cltd
out
cltd
cltd
fwait
aaa
bound
mov
insl
fisubl
scas
fwait
jno
fwait
jo
insl
jecxz
insl
in
out
jo
insl
aas
and
sub
mov
scas
lock
fidivrl
lock
out
test
in
add
test
or
fwait
or
add
int3
jmp
test
xrstors
or
mov
insl
jecxz
or
leave
add
hlt
fildl
ficomps
fwait
push
push
inc
adc
leave
add
jo
fimuls
fwait
or
ret
cmc
lods
test
insl
mov
xor
or
add
mov
int3
xor
inc
mov
or
cwtl
mov
in
insl
mov
insl
fisubl
mull
insl
int3
inc
sbb
inc
xchg
leave
ss
mov
cmpsl
sti
mov
mov
or
iret
insl
xor
mov
movsl
or
leave
ss
fisubl
add
xlat
fwait
fwait
fwait
mov
fiaddl
mov
add
rcll
mov
xor
or
movsl
fwait
int3
std
push
mov
sbb
arpl
jecxz
insl
arpl
insl
outsb
or
xor
jno
insl
outsb
or
pop
sub
cltd
inc
and
insl
cld
insl
outsb
or
or
insl
outsb
or
adc
in
jo
int3
or
test
cltd
insl
int
adc
cltd
fwait
cmp
fwait
fwait
push
cltd
adc
je
cltd
push
cltd
insl
movsl
fwait
or
fwait
fwait
fwait
push
cltd
adc
movsl
push
cltd
in
je
fisubrs
cltd
adc
cmc
cltd
cltd
push
cltd
or
fwait
cmp
int3
fwait
fwait
fwait
or
insl
mov
je
ret
movsl
insl
mov
lods
mov
insl
sti
je
lods
mov
lods
xchg
insl
mov
int
lods
xor
test
pop
adc
arpl
sbb
fimuls
arpl
or
add
ficomps
mov
std
jo
je
fwait
int3
or
sub
sub
mov
mov
inc
ret
pop
cmpsb
int3
aaa
mov
jo
ret
enter
jae
jno
jae
fcmovnu
mov
mov
scas
fiadds
lods
pop
out
or
fwait
ret
arpl
mov
scas
ficomps
arpl
shll
cld
xchg
mov
jecxz
fldt
fcmovnu
mov
faddp
fwait
fwait
fwait
rorb
insl
or
mov
fwait
out
xchg
mulb
xor
addl
cs
test
rclb
inc
jnp
inc
cmp
jp
mov
or
sub
stc
xor
pop
xlat
sub
sub
pop
jp
inc
ja
lods
stc
inc
push
or
push
add
leave
filds
shlb
adc
adc
out
mov
imul
sub
negb
fwait
inc
int
pushf
dec
mov
pop
dec
push
dec
xchg
xchg
call
and
inc
dec
mov
lock
inc
jle
pop
cwtl
pop
in
inc
jecxz
sbb
or
mov
pop
mov
inc
fisubs
ret
rcrb
adc
or
sbb
movsb
inc
popa
loopne
xchg
or
movsl
jmp
cmc
xchg
rcrl
mov
adc
and
sub
mov
pop
mov
push
or
mov
push
lds
sub
test
sbbb
pusha
movsb
nop
and
pop
inc
enter
out
inc
cmp
cmpsl
testl
dec
and
mov
or
and
test
push
stos
xor
sub
mov
aaa
push
sarb
shll
ljmp
inc
loop
insb
or
faddl
stc
pop
mov
lock
sbb
mulb
jbe
fs
xor
and
ret
mov
sbb
sub
push
sub
enter
jbe
or
push
jecxz
imul
or
lods
mov
xor
test
or
or
jne
xchg
dec
sub
xchg
leave
sub
or
orb
xchg
rcrl
push
fcomip
outsb
xchg
outsl
in
inc
push
or
jecxz
enter
xchg
xchg
xchg
std
jp
fistpl
push
push
jmp
movb
imull
nop
outsl
mov
sbb
sub
mov
dec
pop
xchg
push
clc
and
mov
jnp
aad
xchg
int
int3
dec
pusha
pop
sbb
xor
mov
and
test
xor
lea
stc
je
dec
stos
and
xchg
es
xchg
mov
fstps
mov
push
cli
test
andl
push
nop
lret
lods
jle
ds
adc
mov
shrb
jnp
ret
stc
cmpsb
dec
nop
adc
inc
data16
pop
push
push
imul
and
push
add
sub
mov
xchg
jmp
sub
jbe
push
push
or
nop
into
shll
cmp
xor
add
lret
xchg
inc
mov
adc
roll
inc
push
xchg
dec
and
jae
aam
mov
mov
shl
sbb
rolb
xor
sarb
shrl
fimuls
mov
cli
rol
jnp
je
test
and
pop
mov
pop
test
sub
test
mov
xchg
mov
mov
xor
and
lret
test
push
mov
mov
inc
in
pop
outsb
mov
xor
loopne
mov
inc
movsb
imul
cmp
in
jb
or
dec
test
out
in
iret
mov
fmulp
scas
adc
cmpsb
jb
push
std
out
insl
push
adc
mov
mov
loope
cmp
dec
adc
sbb
sarb
jmp
int3
inc
mov
aad
mov
or
push
cmp
pop
lret
cmc
int3
pop
inc
sbb
add
je
neg
sbb
imul
push
gs
stos
addr16
test
stc
cmp
int3
push
mov
std
decl
cmpb
xor
into
push
add
into
fdivp
mov
push
repnz
mov
in
xchg
mov
fisubl
je
test
xchg
hlt
inc
mov
mov
adc
mov
call
push
jmp
jecxz
push
xor
aaa
int
out
jbe
test
cmpsb
pop
xor
jo
mov
add
sub
sarb
je
dec
js
mov
mov
call
jo
mov
mov
out
cmp
xchg
and
mov
je
xchg
popl
rcrl
lahf
pop
iret
bound
or
call
dec
jmp
dec
mov
addr16
inc
mov
mov
and
repz
loopne
scas
inc
mov
shrb
fmul
jno
js
rclb
stc
js
or
in
sbb
and
cmp
adc
fldt
orl
enter
mov
sbb
ss
addr16
jge
aaa
aam
mov
loop
pop
cld
adc
mov
rorb
outsb
jbe
aaa
fcoms
pop
mov
cmpsl
lahf
xchg
jmp
mov
popf
loop
lret
pop
push
sub
fldl
inc
jne
div
loope
inc
jb
fnsave
jge
sub
push
clc
stos
or
popa
pusha
push
enter
test
push
pop
das
mov
mov
std
and
jl
push
aad
xchg
push
fs
lods
adc
rolb
scas
dec
adc
sub
mov
sbbl
cmpsl
cmc
loope
sub
scas
or
dec
fdivrl
push
xchg
mov
ljmp
inc
repz
jge
in
mov
jo
jmp
dec
sub
inc
cwtl
xor
mov
sbb
shr
adc
jb
insl
loopne
push
pusha
fisubl
movsl
mov
push
push
cmpsb
adc
push
jp
fs
inc
xor
rcrl
xor
or
mov
inc
xor
sbb
out
fdiv
push
frstor
or
stos
rcr
adc
cli
hlt
add
pop
cmp
pop
add
aam
xor
pop
cli
negl
xlat
xchg
scas
mov
cmpsl
mov
clc
ds
aaa
pop
mov
cmp
jecxz
stos
xchg
xor
mov
stc
ss
xchg
mov
pop
fisubrl
daa
dec
push
mov
mov
loopne
add
sti
cmc
iret
pop
inc
cld
jmp
enter
addl
pop
into
sarl
adc
aas
nop
xor
dec
and
dec
pop
mov
mov
outsl
fiadds
out
arpl
dec
xlat
pop
std
adcb
cmovne
bound
in
negl
in
sbb
cmp
jl
lods
fnstcw
pop
daa
dec
fldl
pop
dec
pop
push
in
mov
sti
aaa
int
iret
pop
mov
lcall
cmp
add
in
push
jnp
push
pop
out
xchg
lods
dec
popa
jl
stos
pop
adc
mov
push
push
adc
xor
leave
ret
pop
mov
dec
jge
cmpsb
neg
in
leave
mov
test
mov
inc
cli
mov
icebp
fs
push
push
sti
xor
jg
mov
test
cs
filds
fxch
stc
mov
sti
adc
add
or
pop
cmpsl
adc
and
and
daa
push
imul
sub
push
out
in
cmp
push
lea
in
fwait
sbb
cmp
mov
popf
or
mov
fs
cld
push
dec
or
xor
xchg
add
test
push
mov
fistl
mov
pop
and
dec
jb
sbb
mov
xchg
test
mov
and
mov
mov
fxch
sub
call
scas
test
fisubrs
daa
imul
add
inc
add
out
aam
add
pop
cltd
rcrl
jp
dec
mov
cs
cmp
call
inc
test
push
aas
or
xchg
iret
notl
add
out
pop
mov
mov
cmp
or
pop
xor
cmp
dec
sub
cmp
mov
push
jo
and
sbb
pushf
lahf
and
into
test
dec
mov
mov
or
adc
pop
cmpsl
mov
sub
leave
fwait
xlat
push
xor
stos
jge
or
push
mov
fwait
mov
inc
lods
xor
inc
inc
xor
out
mov
test
inc
add
push
stos
aad
das
pusha
std
movsl
insl
ficoml
pop
inc
cmc
fsubl
ss
jbe
push
lcall
outsb
dec
loope
ja
jle
jb
adc
push
rclb
leave
je
stc
cmp
mov
movsb
les
cld
dec
xchg
fsubr
in
pop
hlt
push
dec
mov
pop
mov
sub
rcll
lods
pushf
and
fs
jbe
mov
cld
push
popf
pop
push
mov
mov
jle
scas
sbb
in
lock
icebp
pop
inc
loopne
push
cmc
icebp
jo
lods
addr16
and
mov
in
stc
sub
adc
mov
out
jno
xchg
mov
or
push
push
sbbb
lret
or
addb
rorl
or
push
sub
mov
pop
mov
sub
jbe
mov
push
xchg
icebp
loope
push
subb
sub
loope
andb
cli
jnp
push
call
mov
popa
mov
xchg
jge
jo
stos
xchg
sbb
mov
gs
iret
xor
dec
leave
outsl
xchg
xor
push
leave
test
jmp
pop
lds
and
sub
xor
test
aam
jmp
sti
cmp
mov
and
arpl
nop
or
in
fbld
xor
std
mov
adc
mov
mov
xchg
mov
rclb
sbb
cs
into
inc
adc
sub
out
mov
ret
adc
push
fldl
jne
sbb
jmp
test
jnp
push
lret
int
cld
xchg
push
flds
jle
lods
xchg
mov
pop
add
and
popa
jo
xor
jp
and
outsb
je
xlat
setge
aaa
xlat
stc
movsl
jo
fwait
push
aad
cwtl
jl
mov
rcll
arpl
pop
data16
int
add
inc
mov
push
xchg
xor
xchg
add
jmp
inc
mov
push
xor
dec
aaa
das
jmp
adc
inc
sub
movsl
es
fwait
push
scas
pcmpeqw
fnsave
roll
push
push
pop
movsb
out
movsl
inc
fisubs
and
int3
mov
jg
stc
mov
mov
scas
push
adc
ret
fs
mov
mov
ficompl
fnstcw
mov
xchg
out
movzwl
inc
aaa
cmp
fwait
aad
and
cmp
sbb
stc
push
daa
add
hlt
xchg
scas
jmp
mov
dec
aaa
cwtl
aad
clc
arpl
lock
xchg
xchg
lds
dec
popa
or
mov
xchg
sub
cmc
cwtl
sbb
mov
xorl
call
xlat
fnstenv
movsb
ljmp
or
xchg
sub
xchg
in
inc
mull
jo
xchg
int3
sub
pop
cmp
das
push
out
negb
cmpsl
xchg
xor
sub
jns
in
shll
adc
inc
stc
push
add
pusha
push
pop
test
stos
cld
mov
xlat
test
cmpb
or
out
mov
jbe
stc
inc
push
and
push
insb
mov
rcr
cmp
iret
call
hlt
in
pop
dec
xor
xlat
jp
xchg
or
add
mov
cs
iret
add
shlb
pop
fnsave
and
inc
sbb
ret
jmp
dec
push
insl
cld
je
dec
mov
loope
sub
cmc
popa
mov
dec
cli
jg
cmp
fs
mov
inc
add
pop
popf
sbb
out
les
insl
int
dec
lret
mov
imul
sbb
dec
sub
js
pop
aaa
jo
andl
and
pop
fsubrp
lret
or
mov
jecxz
push
stc
pop
scas
push
sub
cs
jo
sub
ret
shrb
jge
movsl
cmpsl
lds
aaa
jns
addr16
or
sub
addl
call
fs
and
or
and
pop
xor
and
or
movsl
and
arpl
jecxz
lret
ja
bound
je
xor
xchg
sbb
xchg
in
xchg
sub
subl
pop
test
push
nop
icebp
fwait
jne
sub
leave
and
cli
xchg
stc
push
stos
notb
and
xchg
js
rcll
jl
andb
pop
out
test
adc
or
xor
fcoms
pop
loope
mov
xchg
jne
mov
mov
mov
test
pop
imul
mov
mov
ret
in
mov
mov
rorl
loope
push
mov
lods
adc
lods
inc
xchg
xor
jge
sahf
pushf
mov
sbb
lea
aaa
sub
sar
mov
sub
movsl
cmp
jmp
and
cmc
push
sub
jbe
pop
mov
fnstsw
in
lret
hlt
les
fiadds
push
imul
fcmovnu
neg
loope
add
pop
call
mov
iret
or
inc
jns
pop
add
xor
pop
addr16
pop
js
add
ds
adc
mov
fdivs
lret
ja
lods
xchg
pushfw
ja
insl
mov
dec
pop
cmovle
adc
jl
or
adc
mov
cld
test
jno
cmp
cs
sbb
cwtl
ret
les
loope
jmp
adc
bound
cmpsb
cmpsl
imul
push
ret
loop
cmpsb
and
inc
jne
pop
hlt
ficoms
enter
ret
iret
lds
stc
movsl
testb
sub
push
pop
bsf
cld
cmp
out
subb
push
lret
jl
jns
loop
sbb
jne
and
adc
call
rorl
push
aaa
cmp
out
fbstp
xchg
dec
sub
cmp
sbb
mov
jnp
mov
ret
std
mov
test
cmp
jmp
aad
ljmp
inc
mov
sub
fnstsw
lock
sub
scas
aas
arpl
cmp
subl
adc
jecxz
fs
shrb
xchg
jo,pn
xchg
imul
add
insb
idivb
mov
mov
xor
idivl
add
sbb
int
xor
mov
adc
push
popa
lods
popa
push
flds
pop
push
repz
mov
cmpsl
ret
test
sbb
jnp
in
and
add
cmp
jbe
or
loopne
push
cmp
int3
dec
push
mov
test
mov
lods
stos
mov
je
dec
add
pop
lcall
cmp
add
push
push
fsub
jnp
xchg
rol
fists
rorb
push
pop
incl
pop
dec
loop
int
imul
push
out
scas
hlt
ss
in
ljmp
pop
cmc
mov
lods
imul
dec
cmp
lret
pop
or
sbb
outsb
and
and
lods
pop
mov
dec
pushf
cmp
mov
arpl
ljmp
cmpsb
mov
ds
stc
inc
cmp
cmp
mov
inc
in
ljmp
xor
pop
mov
and
mov
jmp
enter
inc
js
and
mov
scas
aam
push
jne
push
fwait
pop
pop
mov
inc
addl
imul
dec
int3
pop
scas
icebp
fidivrs
cmp
add
test
push
mov
subb
cli
lods
dec
iret
aad
aas
std
push
and
xchg
repz
not
cld
xchg
mov
in
xchg
pop
push
inc
cmc
daa
cmp
jns
or
adc
inc
fsub
sti
cmp
push
pop
cmp
movsl
xchg
aam
clc
jne
rorb
dec
sahf
xor
stos
adc
xor
ficompl
or
mov
icebp
std
push
adc
mov
fcmovne
imul
pushf
dec
repz
lds
outsl
sbb
pop
mov
cmpsb
outsb
scas
repz
and
shrb
add
rcll
cmp
je
xchg
add
push
jp
dec
cmpsl
dec
xor
pushf
ss
cmp
cmp
inc
out
outsl
bound
fcmovu
cli
mov
pop
cmp
mov
sub
sbb
push
stos
sub
or
mov
cltd
imul
es
mov
pop
mov
inc
xor
dec
loope
add
sub
ja
and
movsl
imul
in
ja
lcall
fwait
jae
sub
push
ret
push
pop
aam
or
test
stc
dec
lret
jmp
xorb
inc
add
sub
mov
lret
test
pop
loope
pop
cmp
dec
daa
lea
ret
aam
aas
movsl
push
int3
sbb
jmp
popl
mov
inc
es
inc
sahf
fsubl
dec
frstor
outsb
dec
fs
scas
pop
pop
ljmp
add
mov
mov
push
in
inc
cmp
mov
jnp
std
mov
inc
ljmp
mov
test
sub
push
rorb
sarb
sub
int
adc
jno
sbb
popf
cmpsb
popa
or
xor
adc
pushf
or
sbb
and
mov
imul
xor
mov
push
ficompl
pop
cmpsl
cmc
mov
neg
sbb
inc
rorl
or
popa
xchg
sbb
cmp
movsb
shll
xor
aas
ret
pop
aas
mov
xor
add
cmp
inc
fwait
sbb
add
rclb
pop
sub
movb
outsl
decl
add
jo
push
adc
adc
and
mov
bound
push
cs
and
adcb
or
adc
mov
loop
jle
je
aam
testl
out
jl
ljmp
jmp
ja
push
mov
gs
movsl
and
add
lret
rcr
sbb
sbb
xchg
hlt
jecxz
aaa
inc
push
imul
ror
lahf
lea
mov
flds
hlt
dec
xlat
test
inc
imul
mov
sub
jns
inc
fbld
call
xor
mov
add
push
or
shl
imul
fmuls
pop
add
push
stos
mov
loope
pop
pop
pushf
jmp
clc
mov
push
xchg
or
lods
loop
and
add
sbb
and
dec
and
shlb
push
or
mov
cmpsb
pop
mov
cmp
lods
add
mov
pavgw
adc
fisubrl
fnstsw
ret
and
push
pop
adc
sbb
aam
fs
daa
pop
mov
cmp
xchg
int
dec
repnz
aas
rcrb
push
ds
xchg
popa
and
shll
dec
inc
sub
sbb
bswap
dec
aas
dec
adc
mov
imul
fidivl
jle
neg
pusha
in
xor
sbb
in
push
lods
test
add
sbb
dec
mov
insb
fistl
cmp
sbb
cmp
fstps
jmp
sub
loope
out
adc
and
dec
mov
jns
fs
mov
flds
mov
pusha
pop
ja
mov
roll
mov
out
inc
rolb
pusha
pop
jb
loope
gs
test
insl
mov
mov
add
adc
inc
outsl
push
cmpsl
inc
insl
aam
cmp
sbb
cmp
scas
sbb
mov
xchg
nop
leave
inc
pop
aaa
inc
out
sub
ljmp
insl
aaa
inc
enter
lea
addr16
stos
pop
out
xchg
fsub
xchg
jne
pop
jecxz
adc
pushf
pop
loop
imul
xchg
mov
arpl
outsb
adcl
loopne
inc
xor
imul
std
sbb
xor
and
inc
orb
mov
jae
mov
sbb
lea
add
addr16
and
outsb
inc
jae
push
add
test
jo
call
out
and
dec
xchg
sub
cmp
ss
hlt
daa
mov
mov
adc
jge
sbb
mov
in
mov
sub
sbb
int
std
cs
mov
test
add
icebp
and
testl
mov
or
hlt
sbb
push
or
enter
push
mov
int
jl
and
sahf
daa
mov
sub
xlat
and
mov
mov
mov
roll
mov
and
cmp
aad
adc
mov
push
cmpsb
cmpsl
push
test
jns
pop
lret
fdivr
dec
mov
fcompl
mov
add
pop
and
jl
xchg
ret
pop
outsb
ds
fildl
rclb
rclb
jmp
cmp
cmp
mov
sbb
sub
dec
sbb
or
out
stc
push
cwtl
inc
jb
mov
std
xchg
jbe
sbb
movsb
sub
pop
fimull
stos
cmp
imul
mov
pop
leave
sub
addr16
xor
insl
popa
int3
mov
push
test
jge
jmp
je
cmp
mov
icebp
fisubrl
outsl
xchg
inc
loop
push
scas
mov
adc
mov
in
dec
shll
fcoml
movsl
sahf
sti
add
push
cli
sahf
aam
in
sahf
pusha
mov
jbe
push
sarl
bound
lock
sbb
inc
mov
xchg
aad
lret
cmp
sbb
lods
inc
cmc
fcompl
mov
popa
loope
mov
push
adc
and
xchg
loopne
inc
or
and
cs
mov
cmp
push
xor
scas
imul
andb
and
loopne
inc
lret
inc
cmp
xchg
popf
sub
cmpb
mov
xor
adc
test
pop
fmul
pop
adc
and
dec
add
cmp
pushf
leave
addr16
cmc
add
adc
jno
inc
mov
add
dec
mov
xchg
into
notl
popf
mov
pop
push
movb
xor
push
adc
mov
data16
dec
xchg
jnp
int3
hlt
fstps
sti
pop
int3
hlt
mov
push
pop
mov
push
js
xchg
jae
mov
lahf
mov
mov
lods
aaa
mov
fstpt
sbb
push
mov
xchg
movsl
dec
insb
push
test
adc
call
leave
movsl
and
outsb
sbb
mov
aam
js
clc
inc
mov
in
outsl
out
bound
pop
inc
push
mov
data16
loop
popa
lock
rclb
inc
les
pop
sbb
daa
es
pusha
adc
mov
mov
pop
jge
es
and
loopne
mov
push
movsl
jb
pushf
pop
stc
xchg
pop
rcr
popf
scas
jge
int3
adc
lods
dec
inc
cmp
insb
subb
adc
fs
mov
negb
in
xchg
jo
xchg
mov
xchg
sub
and
dec
xchg
dec
ror
push
xor
in
push
sbb
inc
push
pop
sbb
fs
fbstp
mov
push
lds
cmc
dec
mov
mov
in
jmp
and
lock
mov
xor
or
int
push
clc
xchg
and
mov
dec
stos
sbb
lret
int3
adc
popf
mov
outsl
and
add
loope
pop
add
push
stc
cmpsb
adc
inc
xlat
rorb
andl
repnz
pop
push
frstor
pushf
sahf
lock
jmp
mov
dec
stos
test
icebp
mov
cmpsb
or
mov
inc
add
or
scas
pushf
cmc
adc
push
sub
cmpsl
fbld
inc
mov
pop
push
xor
fcmove
in
lahf
cmc
pop
movsl
mov
dec
mov
into
jge
push
dec
xchg
push
xor
jmp
lahf
hlt
mov
xor
sbb
cmp
mov
popa
repnz
ss
dec
ret
and
movsb
push
xchg
and
dec
cmp
iret
adc
clc
stos
mov
jmp
jno
test
psllq
add
cmp
sbb
scas
and
mov
into
xorl
enter
cmpsb
repz
es
cltd
add
add
stos
aad
mov
adc
das
ror
sahf
jo
fwait
adc
dec
mov
sbb
leave
xchg
xchg
cltd
and
inc
punpcklwd
mov
mov
lds
call
fsts
loope
outsb
movl
sub
xor
sbb
push
cmp
jae
es
gs
out
mov
fwait
mov
ss
jmp
lods
std
loopne
and
scas
or
xchg
and
ret
mov
pop
into
mov
mov
mov
jnp
xor
push
dec
mov
ja
out
adc
dec
imul
sahf
lods
push
test
xchg
pop
lods
or
mov
jne
inc
pop
xchg
push
pushf
add
call
insl
inc
push
add
jne
mov
icebp
push
and
out
gs
cmp
inc
push
dec
in
loope
or
sub
push
pop
jle
jle
pop
and
jl
push
repnz
pop
add
gs
or
cmp
and
addb
out
cmpb
pushf
jns
dec
add
bound
gs
jnp
dec
or
ja
fistl
pop
gs
dec
xlat
ret
and
rol
dec
inc
adc
out
iret
insb
or
pop
push
ret
pop
fiaddl
out
stos
cltd
loopne
outsb
lret
or
sub
and
xchg
fistpl
mov
je
loop
xchg
pop
dec
jae
and
out
xchg
stos
xor
dec
sbb
xor
aad
sbb
loope
mov
repz
in
into
mov
xchg
or
outsl
std
jb
push
orl
dec
loop
mov
fistps
aas
call
sub
add
sahf
stos
in
adc
fistpl
sub
pop
test
lahf
add
add
xor
inc
daa
inc
adc
cli
or
in
test
pop
inc
cmpsb
popf
mov
pop
push
ss
mov
loope
xchg
pop
dec
or
int3
pushf
imul
cmp
into
fstps
inc
aam
ret
and
xor
mov
mov
mov
dec
mov
lahf
adc
dec
mov
inc
in
daa
movsb
jmp
mov
cltd
lcall
cmpsb
xchg
mov
mov
jp
inc
sbb
pop
adc
ljmp
or
aaa
pop
push
push
push
sbb
fsubrs
nop
scas
sub
pop
push
jns
scas
mov
scas
adc
rcl
jle
leave
loopne
xchg
xchg
test
dec
jbe
jnp
and
xor
sbb
popf
sub
ret
and
cmpsb
push
fcmovu
std
jle
mov
sub
movsb
pop
test
mov
test
inc
pushl
ret
sbb
lods
xchg
pop
mov
cmpl
addr16
dec
ja
fdivrl
add
inc
dec
out
pop
jl
lret
cmp
sarl
dec
icebp
sub
sub
icebp
cmp
ror
insl
pop
xlat
mov
mov
mov
inc
xchg
jb
sbb
cs
jecxz
aam
imul
mov
addr16
hlt
fsub
sub
push
cld
jae
fdivr
push
xor
lods
lods
push
inc
add
int3
arpl
test
stos
cmpsl
and
pop
sbb
dec
lds
mov
cli
dec
cmpsl
cmpsb
cli
push
leave
in
and
inc
outsb
int3
aaa
mov
movb
pop
dec
sub
or
mov
cmp
mov
int3
push
add
mov
repnz
loope
pop
pusha
and
ret
jns
cmp
aad
jp
subb
in
mov
clc
pusha
cmpsb
sbb
shr
movsl
cwtl
jecxz
sub
xor
and
or
inc
mov
insl
or
cli
outsb
rcrl
addr16
mov
mov
aaa
pop
mov
lea
int
ret
push
sub
dec
and
in
cmpb
loop
pop
shl
imul
mov
mov
cmpsb
in
pop
adc
dec
into
das
shlb
roll
lahf
inc
jge
les
cmp
aas
push
and
outsb
mov
in
je
lock
jae
cs
mov
fsubrl
jle
mov
add
jo
popf
jmp
or
imul
jae
xchg
ret
aam
inc
cmpsb
mov
lret
inc
and
sbb
arpl
mov
arpl
ret
je
xchg
enter
jns
xor
int3
dec
orb
pushf
jle
arpl
adc
out
std
ficompl
dec
cmp
jb
add
inc
adc
lcall
test
popl
and
jg
jns
ja
ss
call
pop
inc
push
in
fs
xor
cwtl
dec
pushf
cmp
or
inc
sub
sub
sub
and
sub
pop
push
push
xor
js
aas
aam
cmc
lods
stos
call
test
xchg
inc
or
sbb
push
cmp
mov
mov
lret
orb
dec
add
dec
std
mov
ljmp
cmp
rcrl
sub
popf
leave
pop
movsl
cmpl
lock
fisttps
inc
cwtl
adc
pop
es
sbb
cmpsb
add
jnp
lock
jl
stos
xchg
lock
arpl
jo
int
fsubl
cmp
out
cmpsl
sub
pushf
mov
cmp
sti
jne
fmull
lods
push
arpl
cmp
sahf
add
pop
xchg
fdiv
rcr
repnz
add
ret
ret
ss
in
das
cltd
jle
mov
lods
ror
fnstsw
aaa
jle
fstpl
stc
pop
jge
addb
mov
insb
js
mov
loope
sahf
fmul
sub
mov
inc
sbb
out
fistpl
pushf
cli
mov
mov
dec
in
or
fsubs
cmpsb
or
scas
inc
into
push
out
xor
fs
ljmp
loop
mov
fists
adc
and
cmpsl
loopne
sub
or
daa
scas
sub
push
popa
mov
aad
inc
and
scas
loop
dec
jb
jg
loope
mov
pop
mov
fadd
jno
inc
jl
inc
mov
xor
and
loopne
insl
shlb
pop
int3
push
mov
jno
dec
adc
sub
cmpsb
mov
sahf
xor
bound
movsl
push
pop
mov
inc
es
std
fstpt
xchg
cmp
arpl
or
loopne
mov
push
call
and
sbb
dec
xchg
sbb
inc
popf
mov
adc
cmpb
cltd
add
in
dec
or
add
addr16
std
inc
loope
mov
mov
mov
xor
test
scas
cli
daa
mov
mov
mov
mov
scas
aaa
fsts
rcrb
xor
add
xchg
mov
lret
sar
stc
das
sbb
fldl
dec
xor
push
adc
jl
mov
xchg
iret
popa
call
movsl
setno
sbb
push
mov
sbb
shll
fdivs
dec
pop
dec
or
ljmp
fs
xchg
sahf
fdivrs
sbb
jns
cmp
jne
rorl
xor
nop
sub
clc
dec
aas
jbe
das
fs
addr16
inc
and
rorb
mov
cwtl
xchg
mov
jae
cmp
decb
movl
xorl
imul
push
mov
daa
xor
xchg
std
aad
jmp
addb
jno
ret
es
ficompl
adc
out
fnstsw
adc
cwtl
sub
pop
cmpsb
movsl
jp
jnp
mov
mov
jno
test
inc
sbb
test
inc
inc
jne,pt
pop
shrb
pop
cmc
jo
clc
xchg
enter
mov
jmp
imul
jl
adc
fs
mov
or
je
in
out
sub
mov
mov
subb
xchg
loope
pop
sub
lock
and
arpl
mov
int
or
jg
bound
sub
das
das
dec
inc
imul
clc
cmpsb
out
mov
push
inc
xor
push
out
fdiv
and
cmp
hlt
es
lock
xchg
lret
xor
inc
sbb
cmovnp
lock
dec
adc
lds
ja
sarb
fsubs
sub
push
sub
pop
imul
xor
push
inc
sub
ficompl
inc
inc
jae
add
push
sti
sub
loopne
add
pop
pushf
dec
xchg
push
jno
fldl
pop
jns
loop
mov
sbb
and
jae
push
cwtl
add
inc
andl
loope
pop
movsl
cmpsb
jno
add
js
jnp
pop
dec
in
add
xchg
into
adc
mov
stos
insl
mov
or
pop
and
in
mov
out
xor
sbb
out
ret
stos
sub
das
clc
sub
pop
gs
subl
mov
js
aas
imull
ss
xchg
pop
dec
cmp
pop
addl
pusha
dec
cmpsb
rorl
dec
pop
and
pop
and
mov
je
subb
push
insb
or
cmc
xorl
fldt
out
das
inc
lds
mov
xor
cmpsl
mov
cmpsl
ljmp
or
lods
or
cmp
xor
in
add
call
std
adc
adc
push
sahf
or
or
fnstsw
push
pop
sub
inc
fimull
daa
rorb
pop
out
adc
lahf
sub
popf
les
jne
les
test
jbe
cmp
inc
movl
clc
cmpsb
pop
stos
test
pop
inc
mov
dec
lret
pushl
mov
push
pop
or
ret
hlt
or
iret
mov
push
jno
unpckhps
mov
pusha
leave
dec
adc
sub
sbb
cmp
std
pop
add
and
jne
rclb
lahf
sub
push
clc
sub
push
mov
sbb
sbb
decl
inc
lcall
cmp
stos
xor
lea
rclb
mov
out
sub
icebp
xor
icebp
cli
adc
imul
add
enter
scas
adcl
cmp
fs
jae
push
iret
fcoms
pop
incb
sbb
adc
xor
es
inc
xchg
or
mov
scas
dec
sub
push
xchg
and
lds
mov
push
mov
fucomp
jge
and
sahf
mov
jmp
cwtl
fs
inc
das
fwait
lret
sub
nop
xchg
subl
dec
fadds
clc
inc
ss
insl
mov
pop
dec
stos
push
mov
jge
add
or
xchg
add
push
pop
testb
sub
or
lret
shlb
xor
iret
mov
fnsave
xor
hlt
and
pop
scas
xor
fsubr
mov
dec
pop
stos
repnz
call
add
pusha
sbb
pop
cmpsl
dec
sti
stos
xor
leave
fcoml
pop
pop
iret
pop
add
inc
outsb
sub
mov
xchg
adc
push
in
fwait
xor
insl
ret
mov
jno
fdivrl
cmp
mov
mov
sub
cli
idivb
aaa
sub
xor
xchg
repnz
nop
repnz
inc
cmp
sub
mov
dec
rclb
mov
and
mov
bound
adcl
movsl
xchg
xchg
sub
lret
adc
mov
aaa
cmovg
jp
lret
in
inc
sar
sahf
movsl
jp
pop
call
and
ds
sti
insb
and
sub
sbb
cmpsl
popa
jo,pt
lret
push
icebp
and
lods
mov
pop
xchg
mov
test
cmp
inc
and
jmp
mov
adc
jo
add
mov
loopne
aad
call
cmp
adc
mov
and
movsb
push
out
cmp
xlat
adc
ljmp
or
xchg
sarl
imul
push
xchg
or
pushf
or
xlat
sub
test
xchg
lods
enter
adc
arpl
bound
out
scas
adc
sbb
nop
or
dec
ja
nop
movsb
repnz
not
popf
fcomps
test
rcrb
ljmp
mov
push
stos
pop
dec
gs
rcll
insl
and
mov
mull
or
adc
mov
shll
jb
into
or
jg
rcrb
adc
mov
sub
sbb
push
mov
sub
pop
in
out
mov
popf
out
pop
cld
mov
jno
sbb
xor
pop
adc
loopne
pop
jnp
leave
loope
in
mov
pop
dec
orb
loop
mov
hlt
call
jle
mov
cltd
aas
jp
xchg
xchg
lret
scas
adc
jle
pushf
xor
add
repnz
cmp
in
and
mov
pop
popf
mov
add
pop
inc
adc
bound
popa
dec
sbb
xorl
lods
std
sbb
mov
data16
fsubrs
mov
into
in
dec
pop
inc
add
xor
ja
inc
jno
xor
test
mov
push
les
xor
lcall
ficomps
out
dec
orl
pop
in
pop
addl
in
and
jbe
jmp
inc
arpl
mov
jnp
negb
into
test
ret
aam
sbb
mov
lea
push
mov
and
ret
mov
adc
movsb
movsl
je
enter
jbe
out
out
arpl
subl
mov
out
jl
mov
mov
adc
adc
sarl
xchg
jmp
icebp
outsb
imul
lahf
sbb
dec
xor
add
aaa
roll
ljmp
or
inc
inc
scas
imull
inc
adc
mov
or
inc
clc
push
stos
mov
push
call
pop
test
mov
pop
lods
mov
mov
push
sub
xchg
jbe
jle
mov
lds
push
jbe
or
cmp
or
sbb
lcall
xchg
lahf
or
mov
adc
sar
xor
mov
gs
jp
popa
loopne
stc
cli
jne
mov
jl
in
mov
mov
and
jo
fwait
sub
ja
hlt
call
les
mov
push
les
sbb
mov
incb
adc
xlat
push
shlb
mov
mov
in
adc
inc
mov
mov
outsb
mov
out
inc
push
add
mov
sti
pop
xchg
jmp
and
in
ds
push
pop
push
fwait
xor
test
ja
mov
fnsave
mov
add
pop
fists
jnp
add
repz
and
loopne
testl
in
fists
insl
addl
fs
cmp
loopne
pop
insl
orb
sub
loope
pop
notl
and
data16
lret
jo
mov
ffree
or
rorb
push
daa
arpl
push
sub
rcl
and
jo
cmpsb
sub
icebp
mov
rol
popf
or
test
mov
cld
cmpsl
cmp
mov
mov
pop
aad
bound
lret
sbb
in
jo
loop
test
cmp
and
clc
cltd
dec
scas
jne
jae
test
les
jns
or
call
lods
lret
shlb
je
or
aaa
sbb
xor
sbb
out
and
jle
imul
push
jns
jne
test
mov
ds
sbb
pop
mov
mov
jo
xor
js
mov
jb
out
and
mov
cmp
scas
andl
or
leave
js
lcall
call
push
ja
out
dec
movsl
lock
cwtl
pop
mov
mov
lret
ret
into
add
adc
jle
inc
imul
mov
enter
mov
rorb
fidivl
sbb
or
enter
xor
es
push
cmp
pop
sub
enter
or
repz
push
sub
cmpsl
popa
xchg
mov
and
outsb
xchg
mov
gs
pusha
ja
mov
leave
inc
dec
xor
cmc
push
loopne
sub
xor
fldenv
mov
out
mov
stos
inc
pusha
es
insl
pop
mov
leave
and
in
clc
cwtl
repnz
xor
sbb
push
push
mov
out
and
sbb
pop
pushf
and
fld
nop
lcall
xor
decl
mov
cmpsb
leave
fcoml
push
and
push
jbe
jmp
cs
sbb
cmp
xor
dec
loop
inc
and
add
xor
sbb
add
ret
pop
out
adc
leave
mov
psllq
pop
dec
xchg
pop
addr16
pusha
lret
jbe
xchg
xchg
jo
xchg
imul
daa
daa
loop
xor
pop
sbb
or
pushf
cmpsb
add
aas
int
hlt
inc
dec
repnz
sub
jb
addr16
adc
aaa
push
into
lcall
mov
in
stos
xor
jg
loopne
xchg
mov
lods
sub
push
add
cltd
clc
push
sub
scas
int3
sbb
jmp
mov
out
out
sub
mov
les
dec
sti
add
outsb
pop
pop
dec
sub
jl
mov
pop
adc
and
sbb
fnstsw
cmc
movsl
jge
jle
test
inc
cmpsb
iret
shll
into
push
dec
shll
push
mov
pop
xor
mov
cmp
adc
mov
mov
push
enter
jbe
xor
aaa
jl
filds
and
int
lods
xchg
icebp
adc
aas
in
adc
push
test
lods
std
mov
popl
adc
enter
xchg
cmp
aam
es
iret
pusha
sahf
ljmp
jnp
xchg
or
cltd
sub
xor
adc
cli
mov
in
ret
jnp
inc
push
in
pop
sub
xor
movsl
cmp
xlat
dec
ffree
mov
cmp
sub
dec
sbb
testb
cltd
ret
call
push
std
les
inc
mov
loop
insl
push
xchg
mov
arpl
cmc
popf
mov
in
lds
lret
push
aam
das
xchg
or
push
xor
je
mov
cmp
arpl
jle
cli
mov
pop
hlt
gs
cmp
test
insb
sahf
jl
mov
imul
jle
sub
es
divb
ja
out
cli
sbb
ret
out
and
out
sbb
mov
mov
and
rcr
cs
push
mov
lcall
mov
cmp
les
and
rclb
mov
ds
mov
into
into
hlt
sub
sti
aad
fwait
push
add
mulb
mov
mov
jb
lret
jle
adc
fisttps
push
fldenv
jmp
je
loopne
lods
cmp
lods
and
mov
lahf
mov
out
sub
iret
xchg
cmpsb
test
pushf
bound
mov
loop
div
cmp
fisubrl
sub
fdivs
pop
mov
push
xchg
sub
sbb
pop
aaa
jmp
outsb
sbb
xchg
mov
xchg
xchg
and
scas
pusha
sub
cmp
loop
in
insl
mov
mov
repz
cmpl
cld
pusha
dec
in
test
sbb
or
rcll
or
push
notl
xor
adc
xchg
outsb
fisttps
lock
xchg
pop
jmp
std
rcl
push
xchg
jle
sub
sub
mov
jge
cmp
mov
xor
in
add
jle
add
inc
add
inc
pop
rorb
test
aad
push
inc
stos
arpl
gs
lods
xor
ds
pusha
dec
push
mov
pop
jecxz
inc
push
icebp
inc
mov
xor
lret
jg
xchg
ss
aaa
xor
jae
xor
insb
mov
loope
sbb
nop
ds
mov
xchg
push
xchg
gs
and
insl
outsb
out
fs
dec
arpl
in
outsl
sub
xchg
adc
cwtl
movsb
bound
jg
lret
push
pop
test
push
clc
sub
adc
out
mov
popf
cmc
sbb
sbb
push
sub
xchg
pop
mov
pop
aaa
xchg
ss
call
data16
les
ror
mul
fnsave
sub
mov
mov
out
pop
mov
xchg
jb
sub
fidivl
adc
pushf
mov
bound
test
lds
adc
ljmp
sarb
repz
pusha
shrb
adc
jno
pop
test
and
cltd
xor
jmp
cld
mov
cmc
aam
fmuls
lea
or
cwtl
and
jp
daa
dec
push
out
mov
cmc
ret
mov
es
pop
push
js
dec
cmp
sbb
icebp
insb
les
xchg
ds
push
hlt
cmp
cltd
out
cmpsb
aaa
push
test
sbb
xchg
aaa
xor
inc
scas
bound
call
xor
cwtl
mov
aas
xchg
in
mov
or
dec
popa
mov
sete
cmpsl
push
mov
movsb
les
cltd
pop
xor
pop
pop
jnp
pop
addr16
xor
mov
cmpsl
divl
negl
jbe
pop
dec
sbbb
fldcw
imul
std
in
xor
stos
add
in
dec
adc
adc
fsqrt
cmp
and
icebp
or
add
lock
adc
push
sti
sub
loope
mov
stos
inc
test
xchg
sbb
pmaxsw
pop
mov
hlt
push
and
outsl
addl
or
pushf
call
flds
xchg
frstor
adc
in
in
mov
popa
xchg
mov
repz
mov
int
fsubs
sbb
mov
adc
jmp
xchg
fwait
pop
dec
icebp
inc
icebp
lahf
lret
add
push
and
inc
loopne
jae
frstor
xchg
dec
or
lcall
jl
add
cmpsb
mov
sub
dec
push
sbb
or
popa
inc
push
stos
push
pop
stc
jbe
inc
add
aas
dec
push
dec
xchg
inc
stc
pop
xor
adc
not
test
add
add
jl
inc
sahf
das
in
xor
leave
loop
repnz
scas
cwtl
xor
mov
stos
in
xchg
test
cmp
in
sub
andb
mov
pop
jge
jl
aas
inc
dec
loope
or
imulb
mov
daa
call
unpckhps
mov
fs
jo
push
rcrb
sbb
and
sub
xchg
xchg
jecxz
cmp
inc
cltd
and
and
add
inc
test
xchg
xchg
jns
mov
mov
outsb
insb
mov
daa
insb
mov
nop
gs
jne
cli
dec
clc
xchg
adc
jns
push
sub
mov
push
sbbb
addb
inc
mov
test
jno
inc
icebp
push
fs
xchg
ss
mov
clc
insb
shrb
mov
mov
sbb
push
adc
xchg
sbb
or
ret
mov
dec
mov
mov
nop
mov
push
sub
mov
ja
pushf
push
cld
adc
add
ss
pop
sarb
xor
sbb
mov
pop
je
cs
shl
sub
movsb
daa
xchg
push
cld
call
mull
mov
cli
in
push
and
test
test
push
xor
pushl
cmp
cmp
fnstenv
insl
push
jp
bound
arpl
scas
out
and
push
sarb
mov
and
inc
je
test
in
xor
and
sbb
xor
scas
dec
xchg
nop
in
xchg
aad
jns
aaa
or
sbb
fisubrl
scas
xchg
jp
xchg
push
xor
adc
sbb
jl
mov
mov
in
icebp
adc
das
addl
int
cmp
adc
mov
mov
pushl
jecxz
jp
fisttps
lock
stos
jae
push
and
mov
xchg
adc
and
rolb
inc
aad
imul
cwtl
outsl
sbb
mov
push
out
insb
jg
nop
and
sbb
xchg
mov
mov
xchg
xchg
lahf
fmul
movsl
mov
rcrl
add
decb
mov
stos
ficoml
ja
jg
cltd
imul
daa
cwtl
dec
rcll
into
je
or
sbbb
idivb
hlt
int3
cmp
xchg
mov
stc
aaa
cmp
lock
push
pushf
pop
dec
pop
clc
lock
or
or
fadds
mov
test
mov
lcall
lods
push
fstps
xor
lcall
fsts
cmp
mov
cltd
pusha
add
and
in
frstor
rorb
dec
fucomi
test
push
mov
test
xor
add
ret
pop
xor
rclb
push
jge
sbb
push
jno
int3
imul
lcall
inc
stos
shl
lret
test
xor
jnp
stc
out
rorb
data16
mov
idivl
push
lds
out
xor
loopne
xchg
cmpsl
pop
fxch
std
sbb
ja
dec
push
sbb
push
std
rcl
ds
mov
jge
jge
lret
icebp
xchg
fbstp
push
pushf
clc
mov
mov
fisubl
lock
or
xchg
adc
and
inc
pop
mov
mov
fdiv
pop
clc
push
imul
push
shlb
ljmp
out
filds
or
les
mov
pop
adc
dec
add
mov
mov
scas
mov
rolb
and
fwait
stc
into
scas
ja
push
and
jae
or
mov
shrl
je
jno
leave
in
nop
pop
xorl
adc
push
lds
int3
lds
loopne
jmp
jg
push
xor
cli
or
mov
xor
dec
mov
push
scas
mov
pop
sarb
pop
jbe
iret
andl
sti
das
rclb
stos
pop
dec
imul
mov
stc
cmc
les
pextrw
mov
jg
push
dec
jmp
test
andb
cmc
nop
std
popf
jg
in
push
dec
cmp
jl
out
mov
setnp
sbb
push
ja
adc
inc
ja
sub
xchg
cmpsb
clc
mov
xchg
fs
xor
in
jl
adc
push
pusha
add
inc
mov
add
mov
ficoms
mov
push
mov
xor
std
cmp
fwait
and
lret
mov
mov
dec
mov
jmp
fists
xchg
pop
xchg
pusha
mov
jns
arpl
nop
scas
jae
mov
mov
imul
fwait
out
mov
mov
test
iret
dec
sbb
scas
out
jns
mov
daa
cmc
imul
fwait
mov
ja
in
or
in
push
in
mov
outsl
stos
add
lods
enter
inc
mov
ret
test
push
xchg
stos
clc
data16
mov
adc
cmp
in
mov
ret
ljmp
mov
shrl
or
sahf
and
sub
pop
lret
cmpsb
iret
lds
inc
scas
inc
push
enter
call
pop
ficomps
pop
out
xchg
dec
mov
aad
sahf
xchg
adc
mov
fildll
sbb
aas
leave
xchg
ljmp
rorb
insl
notl
outsb
add
jp
fcmovnb
mov
loop
adc
push
cmp
xchg
cmc
cmp
outsl
pop
loope
xchg
ficompl
cs
clc
fst
fidivrs
sub
fs
mov
mov
shrl
adc
sub
dec
pop
cs
fisttps
adc
repnz
loope
test
dec
mov
scas
subb
out
push
jmp
adc
cld
mov
sub
js
xchg
test
push
fldl
and
outsl
add
inc
push
cs
movsb
pop
loop
push
std
dec
xor
xor
mov
in
fldcw
test
scas
inc
push
inc
leave
shlb
sub
es
popf
popf
xor
jbe
bound
dec
jno
push
sub
pop
mov
mov
pop
bswap
sbb
int3
in
call
adcb
cmc
dec
inc
dec
xchg
scas
xchg
cmp
fldcw
cs
out
push
icebp
enter
scas
aad
cmpsb
fsubl
jnp
shll
xor
mov
mov
dec
or
inc
decl
add
fwait
and
sbbl
out
push
outsb
jl
outsl
pop
lea
in
pop
jmp
add
in
jl
xor
push
fcmovb
mov
in
rolb
sbb
lea
adc
cmc
jne
xor
mov
repnz
push
pop
mov
aad
mov
or
in
push
pop
sub
mov
push
mov
xchg
jmp
mov
dec
jbe
fimull
xor
mov
sbb
inc
aad
mov
and
jl
cltd
ror
mov
aad
mov
mov
lret
xchg
lds
mov
fs
hlt
movsl
mov
and
add
mov
mov
movl
rorl
imul
fld
loope
mov
sub
out
or
stos
cmp
and
into
cmp
ljmp
inc
mov
or
les
outsb
sbb
dec
push
incb
xor
outsb
hlt
adc
sub
lret
mov
inc
int
push
popa
cli
xor
out
and
pusha
or
out
push
add
enter
sbb
sub
and
adcb
shlb
aam
mov
add
cltd
xlat
xorl
loopne
adc
lret
idivl
cs
jle
cmp
push
inc
jge
fwait
dec
dec
push
xchg
or
inc
imul
stos
nop
out
inc
add
mov
gs
jbe
sahf
pop
leave
push
pop
fldenv
inc
lret
add
lock
mov
mov
sbb
insb
dec
xor
sbb
pop
shlb
in
fsubrs
jns
ja
dec
fldenv
fistpl
mov
xchg
fisubrs
push
xor
cltd
jmp
icebp
fwait
or
rcl
imul
push
push
and
and
notb
insl
pop
mov
push
push
stos
and
jmp
cmp
cmp
fnstcw
sub
andl
jle
push
test
or
lds
push
mov
lret
std
pop
decl
jno
negl
lret
inc
and
mov
cmp
mov
pop
add
cmp
in
lret
pushf
cld
mov
dec
sahf
lahf
dec
pop
push
mov
adc
pusha
in
sub
sub
cltd
aad
pop
cmp
cmc
xchg
or
js
in
cmp
test
or
xor
lret
mov
mov
add
dec
mov
push
fmuls
pop
cmpb
mov
xchg
leave
mov
sbb
ja
ret
pop
imul
mov
jmp
daa
pop
mov
pop
xor
bound
stos
notb
sti
cltd
cwtl
pop
jnp
jbe
nop
jo
jae
pop
in
outsb
movsl
sub
arpl
notb
sbb
dec
ret
sub
xor
loop
jp
clc
fcmovbe
leave
pop
sahf
leave
push
mov
push
sarl
out
sbb
in
fcom
out
xor
lock
xor
push
mov
xchg
push
pushw
jg
jne
mov
add
dec
into
and
adc
mov
fcoml
pop
or
jb
mov
lahf
push
lods
test
cwtl
jae
xchg
out
cmpsl
jg
mov
or
jmp
sbb
mov
fsubrl
xchg
push
icebp
xor
ret
pop
ret
pop
outsl
pusha
jecxz
push
lods
mov
ret
lods
xor
aas
test
push
fnstsw
dec
lahf
and
cmc
or
jp
pop
mov
pop
ja
nop
inc
movsb
stc
cmpsb
mov
lods
out
ss
add
dec
mov
and
or
jge
mov
or
inc
into
aaa
jge
jecxz
adc
fistpl
cmp
scas
xchg
dec
movsb
cmp
js
and
ljmp
outsb
inc
scas
into
imul
jle
pushf
adc
xor
arpl
sub
mov
fucomp
mov
ss
cmp
es
call
lods
int3
push
push
ja
outsl
movsb
lds
sbbl
sarb
pusha
and
ret
push
sti
push
lret
jg
mov
dec
mov
pop
pop
pop
push
out
xchg
pop
dec
inc
sub
sub
fcompl
and
inc
xor
ljmp
in
std
imul
movsl
rolb
pushf
inc
mov
mov
mov
aas
insl
mov
dec
stc
int3
mov
call
lcall
loopne
loop
mov
call
push
mov
test
sbb
sub
repz
mov
sbb
and
adc
outsb
mov
sbb
cwtl
push
movsb
mov
aad
add
test
dec
into
les
jmp
les
loop
push
flds
adc
or
loop
lret
clc
adc
inc
cmp
push
shrb
xchg
sbb
pop
std
push
out
pop
sbb
clc
add
cltd
jb
daa
jae
add
je
popl
add
ja
push
cli
xchg
sbb
imul
sbb
clc
daa
jmp
inc
mov
shlb
dec
test
mov
push
ret
int
push
mov
jg
aas
or
aam
into
sub
aad
push
popl
sbbl
mov
enter
jno
add
insb
sbb
divl
test
xchg
test
mov
dec
jae
push
add
mov
inc
push
sarb
mov
cmp
sbb
xchg
pop
mov
lods
test
mov
shrl
xchg
dec
fninit
mov
push
jge
aam
jmp
inc
mov
inc
mov
add
daa
pop
flds
xlat
pop
push
pusha
cwtl
dec
adc
sahf
ficompl
dec
push
jl
ret
out
movsb
stos
sub
pop
mov
insl
data16
sbb
outsb
push
and
adc
jle
jnp
cltd
inc
sub
fstpl
fcompl
adc
cs
adc
push
sbb
pop
inc
call
dec
pop
test
pop
out
sti
cld
push
rcrb
inc
int
ljmp
cld
out
pop
cmp
pop
sub
xor
jecxz
ljmp
stos
dec
cltd
movb
pop
jnp
fwait
dec
cmp
shll
or
push
rolb
or
xchg
lods
in
mov
sbb
or
addb
pop
push
lock
jl
xor
sub
xchg
leave
pushf
mov
xchg
imul
repz
sarl
dec
pop
inc
xchg
je
or
in
insl
sbb
enter
push
dec
stc
pusha
jl
push
sbb
sub
pop
inc
push
lock
cld
insb
pop
imul
movsb
inc
dec
pusha
in
icebp
pop
jle
mov
in
mov
cmpb
push
mov
insb
shl
xlat
push
sbb
mov
cltd
addb
push
shrl
xchg
cmp
push
movsl
rcrl
adc
hlt
fiadds
rcll
cmp
rcpps
or
jne
jno
xchg
insb
and
mov
jmp
cmp
add
enter
notb
mov
pop
sbb
sbb
mov
mov
xor
push
sbb
inc
sub
mov
adc
push
cmp
movsl
outsb
in
cmpb
jbe
adc
xor
dec
push
xor
push
push
mov
inc
into
call
out
sbb
xchg
xor
xchg
outsl
jne
sub
sbb
xor
cli
xchg
ja
inc
adc
insl
sub
lock
mov
fs
aaa
xchg
mov
push
cltd
mov
mov
fcmovnbe
and
addr16
push
int3
pop
sbb
test
jnp
orl
gs
and
repnz
mov
insl
push
imul
outsl
jae
loope
sbb
adc
bound
mov
mul
in
fisubs
xchg
jl
iret
add
mov
ljmp
mov
sbb
fmul
jbe
test
pop
pushf
orb
push
inc
bound
sub
mov
or
pop
xchg
es
xchg
xor
gs
mov
push
inc
subl
jno
pop
mov
inc
xchg
sbb
pop
push
xchg
sti
inc
jmp
pop
cmpsl
push
sahf
mov
loopne
sahf
pop
imul
or
push
dec
xor
ret
adc
int3
inc
jg
xor
ja
sarl
scas
stos
dec
push
jne
call
fidivrl
out
aas
iret
inc
scas
imul
cmp
inc
rcl
lea
mov
orl
xchg
xchg
sbb
jne
push
outsl
loope
ret
fsubrl
cmpl
icebp
adc
int
aad
outsb
push
and
insb
les
sahf
push
cs
lret
add
adc
adc
pop
sbb
push
xor
dec
cld
ljmp
push
cmpsb
push
lods
sbbl
mov
int
pop
movsb
pop
xchg
bnd
jmp
test
mov
jnp
into
adc
loope
mov
dec
shl
stos
pushl
shll
nop
mov
inc
out
jbe
mov
jle
std
pop
mov
enter
in
and
test
cmp
pop
inc
aas
and
std
sbb
mov
cmp
test
adc
sbb
scas
xor
jmp
out
stc
inc
and
lods
fidivs
daa
andb
add
addr16
mov
test
aas
sahf
idivl
shlb
repz
add
lret
std
lea
in
sti
enter
les
rorl
int
fisubs
xchg
sbb
add
data16
sbb
hlt
pop
add
adc
inc
ja
add
dec
jns
pop
ret
outsb
enter
jmp
xor
call
ds
in
mov
pop
sbb
jb
mov
sbb
pop
mov
cwtl
mov
mov
lret
add
loope
jle
or
loope
sub
movsb
jo
jne
scas
in
cmp
mov
jo
lea
cmpsl
cmp
xchg
and
sub
std
sub
jl
cmpsl
mov
cmp
and
sbb
and
test
clc
xchg
stos
push
mov
add
int3
cld
xor
fs
push
push
push
fstps
jg
xchg
inc
cwtl
xchg
lcall
jg
xor
mov
sub
scas
mov
fsubp
cld
lock
cld
mov
data16
nop
add
sub
jnp
jnp
sub
test
push
dec
mov
pop
je
mov
mov
notl
test
sub
jg
mov
add
pop
push
mov
sub
dec
and
jne
test
enter
into
add
clc
insl
cltd
sbb
jmp
lahf
stos
mov
xchg
jae
pusha
mov
push
cltd
dec
xor
add
into
dec
mov
in
jecxz
xchg
add
push
mov
roll
jbe
xlat
sub
add
arpl
mov
cmc
inc
rorl
out
dec
mov
xchg
ljmp
ret
cmp
cld
stc
addr16
les
mov
sti
lret
sub
movsl
mov
sbb
stc
loopne
cwtl
dec
dec
dec
test
dec
xchg
loopne
dec
fwait
xlat
inc
jle
es
pop
test
jns
call
adc
mov
pop
sbb
mov
or
out
insl
cmc
sub
inc
js
sbb
pop
hlt
wbinvd
and
sub
int3
inc
adc
fidivl
or
inc
xlat
mov
dec
pop
movsl
insb
les
add
cmp
popa
xor
adc
cwtl
and
je
iret
les
daa
inc
xchg
popa
jmp
cld
hlt
sub
enter
mov
mov
adc
dec
lds
aad
jo
scas
and
lods
div
fidivrs
inc
xchg
hlt
mov
pop
iret
lods
cwtl
test
ret
jo
insb
lods
pop
aaa
pop
cwtl
shrb
ret
adc
xor
sub
cld
loope
aas
pop
rcrb
sti
sbb
out
test
xchg
mov
fs
adc
xchg
mov
leave
xor
shrb
or
and
cltd
cmp
push
dec
jbe
xchg
jl
mov
push
fildl
push
add
hlt
stos
mov
mov
lret
stos
adcl
sarb
inc
cmp
push
mov
daa
call
add
testl
sub
and
push
and
mov
fwait
inc
repnz
xchg
push
orb
and
in
orb
mov
inc
fnstcw
sbbl
gs
sub
repnz
cmp
roll
xor
out
dec
jbe
dec
cmp
pop
fcomi
push
push
push
push
dec
jle
aas
sub
mov
or
adc
scas
jecxz
add
out
popa
xor
js
xchg
add
mov
mov
mov
lock
push
push
out
pop
mov
jmp
imul
mov
data16
dec
dec
jp
jae
mov
inc
fstl
idivl
xchg
and
fcoml
das
push
push
jbe
inc
in
fmul
loop
or
sbb
in
push
inc
js
push
push
mov
mov
push
xchg
or
push
in
std
push
subb
mov
push
lds
out
enter
sbb
dec
data16
jne
ss
lret
jb
into
jecxz
ss
dec
subl
and
out
pop
xlat
xor
cmpsl
les
lock
jbe
std
xor
dec
int3
shr
mov
mov
or
jo
cmp
mov
ja
cmp
mov
ja
ja
cmp
mov
jae
in
pop
lods
ja
cmp
cwtl
cmp
inc
dec
mov
loope
inc
cld
jg
stc
jns
or
dec
out
out
in
mov
mov
aas
pop
mov
pop
sbb
jb
push
sub
ret
jg
cwtl
mov
and
iret
pop
stos
pusha
shll
lods
adc
cltd
add
fwait
mov
mov
inc
jb
push
xchg
mov
lea
cli
xor
xchg
pop
test
mov
sbb
js
out
push
mov
mov
mov
enter
ficoms
mov
in
stc
lret
inc
mov
mov
fdiv
ds
pop
jno
mov
in
xchg
in
sub
jbe
xchg
out
cmp
lret
ret
dec
inc
outsb
stc
fcompl
inc
imul
decl
mov
sub
ljmp
dec
or
jp
mov
jns
jl
das
mov
test
rsm
clc
movsb
xchg
lods
sbb
sub
cmp
or
add
sub
stos
add
test
push
int
test
ret
mov
cli
mov
xchg
jne
mov
xor
cmpsb
jle
cmp
sti
hlt
sub
dec
dec
fdivs
jno
xchg
dec
mov
or
cmpsl
inc
rol
pop
nop
jne
xor
xor
outsl
and
cmp
ficomps
pop
fcoms
xor
aad
stc
mov
mov
and
les
aam
cmp
and
mov
dec
push
xchg
insl
test
jle
adc
push
daa
rorb
in
mov
pop
je
cltd
ljmp
rolb
fnstenv
ret
add
inc
jne
cli
xchg
ljmp
mov
aad
and
inc
imul
mov
xchg
push
or
pop
les
out
lea
sbb
cmc
ljmp
inc
and
pop
inc
pop
or
fiaddl
pusha
push
rcrl
jno
repz
mov
das
lods
pop
and
xor
outsl
sub
je
cmpsl
js
std
int
lret
stc
cwtl
pop
scas
shrb
push
das
insl
pop
or
jnp
ja
push
dec
push
mov
sbb
sbb
aas
movl
mov
js
arpl
push
add
xor
inc
jno
mov
in
fldt
stos
add
stos
es
or
dec
sbb
enter
testl
fbstp
jo
mov
jne
and
ret
jg,pt
fisttps
ret
or
dec
pop
enter
inc
test
inc
testl
xor
cmp
or
aas
je
inc
in
jecxz
mov
dec
push
xchg
fwait
hlt
mov
pop
rcr
cltd
pusha
mov
test
pop
sbb
and
sub
jge
xor
sub
lahf
xchg
jno
leave
mov
mov
sahf
push
call
xor
in
cmp
pop
lock
in
jne
and
fcmovbe
hlt
add
xchg
pop
out
adc
dec
mov
push
data16
cltd
sub
test
ja
fiadds
fs
xchg
xchg
rclb
jp
out
test
jae
or
sbbl
sbb
jmp
movsl
in
push
xchg
andl
dec
cmp
or
xor
in
fcmovnbe
jmp
sti
ret
pop
rclb
mov
jbe
inc
mov
rolb
mov
pop
or
xor
jnp
push
imul
mov
in
inc
add
iret
fisubrs
push
out
int3
ret
leave
in
mov
ret
sahf
loopne
mov
jne
stos
cli
or
push
xor
je
and
popa
push
lock
aam
fxch
mov
je
in
test
dec
fimull
fiaddl
mov
mov
sub
dec
les
neg
push
cli
ret
sbb
into
out
sbb
or
fs
imul
push
cmpsl
fmul
push
sub
fcomps
or
imul
inc
adc
in
stc
cmpsb
imul
lods
dec
in
les
lods
in
push
mov
sbb
test
or
xchg
test
ss
scas
lods
int3
xchg
out
fwait
xor
fwait
mov
pop
insl
lea
or
leave
jmp
sbb
sbb
inc
cmpsb
ss
inc
dec
mov
add
dec
inc
bnd
ljmp
lcall
les
daa
aas
fdivl
testl
push
xchg
rclb
mov
incl
adc
mov
sub
dec
outsl
into
ja
adc
clc
mov
mov
or
enter
mov
pop
add
xor
jle
gs
mov
sbb
jg
outsb
xchg
push
lret
icebp
xor
pusha
sahf
sbb
mov
roll
jbe
fs
sbb
xor
xor
xchg
roll
lret
mov
mov
xchg
mov
fiadds
or
mov
xchg
mov
fsubp
in
mov
sbb
inc
fcomi
sbb
push
xchg
push
out
mov
icebp
mov
and
push
movsb
outsl
loop
or
jbe
fists
cmpl
hlt
out
addl
stos
sub
loop
mov
xchg
sub
sbb
inc
mov
andb
mov
push
pusha
daa
stos
mov
jae
push
gs
fs
jbe
sbb
adc
pop
jnp
int
test
pop
jmp
popa
mov
leave
cmp
push
cld
in
addr16
test
inc
das
cmpsb
mov
int
mov
jmp
and
xor
lahf
or
jb
adc
inc
test
dec
and
inc
enter
cs
pop
pop
cmpsb
xchg
xchg
sbb
cld
popf
faddl
addb
mov
sbb
imul
cmp
lock
inc
and
fistpl
mov
dec
popa
sbb
insb
or
lret
leave
cmp
into
popa
push
ja
test
or
imul
inc
scas
mov
mov
iret
rcrl
cmpsb
repz
imul
xor
imul
fimuls
andl
cld
add
bound
dec
inc
arpl
jmp
pushf
stc
sub
mov
gs
popa
lea
or
rolb
sbb
adcl
push
call
dec
jb
fwait
bound
in
lds
pop
sarb
stos
ss
or
iret
je
aas
das
inc
xor
dec
xchg
loopne
and
ret
mov
pop
shlb
and
stos
pop
into
popa
fwait
mov
scas
mov
loope
mov
xor
jo
push
aad
mull
cmp
push
popa
arpl
lret
lds
aam
push
cld
shll
rsm
adc
lahf
mov
rol
insl
pop
push
and
shrl
or
adc
inc
sub
insb
xor
lds
sbb
or
clc
ljmp
jl
cmp
stos
popa
inc
cmp
xor
data16
inc
fstl
negb
or
rolb
aad
xchg
or
or
pop
mov
popf
fcoms
or
jecxz
push
fidivl
push
dec
jecxz
xchg
test
add
movsl
test
and
sbb
loop
mov
sub
cmp
cmpsb
dec
stc
pop
icebp
jg
inc
in
shrb
dec
ficoms
xorb
into
pop
insl
push
ss
aaa
sbb
xor
sub
das
or
in
adc
and
push
cld
cmpsl
icebp
mov
aaa
repnz
out
fs
adc
mov
fcomps
mov
jns
mov
rolb
shrb
ja
adc
pop
arpl
xchg
xchg
repz
jno
inc
imul
push
push
shll
mov
sub
sub
mov
jp
rcrl
je
jecxz
ss
mov
jl
and
pop
imul
imul
imul
fnstenv
ret
and
scas
vdivsd
inc
enter
pop
dec
add
xchg
ljmp
daa
stc
and
sub
bound
xchg
clc
cmpsl
sub
push
in
lret
push
sahf
sub
add
stc
xor
pop
pop
pop
setg
jnp
sub
jl
rolb
div
imul
ret
push
pop
xor
lods
and
loop
repz
mov
mov
push
mov
jmp
lds
mov
leave
cmc
mov
js
loopne
mov
sbb
jl
pusha
pop
pop
mov
mov
aaa
aaa
aaa
adc
sub
aaa
jae
jb
pop
cmp
push
out
icebp
sbb
jno
mov
xchg
push
add
cmp
dec
inc
and
fsubrp
jbe
jno
add
jl
xchg
jle
mov
aas
sub
ljmp
sbb
inc
jg
lods
mov
ret
jge
movl
aas
push
push
test
cli
js
fistps
rorb
std
mov
das
ja
push
hlt
lret
lret
packuswb
mov
sbb
ret
sub
lret
cwtl
xchg
push
js
sti
hlt
cmc
arpl
das
jno
or
xchg
xlat
fisubs
or
or
dec
or
std
lods
jno
sti
sub
push
adc
inc
stos
ffree
mov
test
xchg
mov
mov
into
dec
in
dec
and
add
cmp
jmp
es
add
hlt
sbb
adcl
pop
push
xor
jnp
loope
in
int3
imul
jnp
repnz
fildll
clc
inc
cld
clc
daa
jg
xor
subl
mov
aam
push
cmp
adcb
jecxz
mov
push
pop
pop
dec
and
outsb
out
in
adc
mov
js
jl
mov
insl
and
mov
ret
cltd
pop
test
jmp
lea
icebp
add
out
into
xchg
daa
and
or
pavgb
fs
or
andl
add
iret
push
test
push
lods
fstps
fs
cmc
push
rclb
sti
lea
adc
movsb
add
xchg
pop
inc
imul
push
repnz
mov
jns
rol
sbb
cmp
add
cmp
les
out
or
rcr
dec
mov
mov
loop
lds
add
scas
les
outsl
int
stc
xchg
fsubrl
xor
push
inc
mov
gs
cmpl
or
call
aas
stos
fwait
or
sub
test
iret
and
inc
int
push
and
push
xchg
addr16
jo
cs
cwtl
sahf
xchg
pop
xor
cmpsl
xchg
xlat
aad
xor
xchg
jmp
daa
call
lods
sub
addr16
leave
lods
xchg
and
iret
mov
gs
push
lods
hlt
mov
mov
lds
add
incb
bound
xor
lods
xlat
sub
push
sub
data16
jnp
lds
stc
test
push
inc
adc
pop
imul
andb
pop
es
fs
inc
loopne
leave
jmp
add
pop
clc
outsl
ljmp
out
mov
lea
inc
cwtl
out
adc
jmp
mov
pop
or
mov
adc
jecxz
outsb
int
mov
fcomp
xchg
rcrb
push
test
push
data16
xchg
bswap
call
fs
pop
or
cs
test
or
add
mov
sbb
loop
negb
sti
sbb
fcomps
faddp
rorl
and
lock
xchg
aad
and
mov
sbb
push
jecxz
mov
int
rcrl
push
mov
jnp
je
dec
hlt
icebp
jb
pop
and
mov
dec
or
imul
sub
sub
pop
sahf
cld
pop
mov
add
mov
loopne
adc
lret
mov
mov
pop
mov
mov
ret
push
mov
jmp
ffreep
dec
dec
mov
sahf
pop
push
lret
jg
neg
push
lcall
nop
loopne
xchg
adc
lods
pop
out
dec
mov
fildll
pop
sti
stos
call
scas
or
je
push
andb
add
sbb
mov
jp
push
xchg
outsl
lahf
xchg
bound
inc
je
add
xor
shrb
mov
int3
or
imul
and
and
rcr
adc
push
jno
pusha
jnp
mov
xor
in
jge
in
clc
psrlw
jl
mov
jns
cld
into
in
xchg
push
xor
mov
fucomi
push
cwtl
xchg
mov
mov
in
pop
loopne
mov
iret
ret
dec
xor
cmp
in
cmpl
pusha
pusha
mov
mov
dec
out
xor
cmp
and
and
dec
mulb
cmp
sub
mov
out
dec
cmp
cmpsl
hlt
sub
push
mov
jbe
dec
outsb
out
pop
mov
sub
cmpsb
sub
cli
inc
popf
inc
popf
push
mov
clc
xchg
mov
fimull
je
xchg
sbb
sbb
pop
lret
adcb
jmp
push
std
fnstsw
or
enter
add
into
mov
sbb
xchg
rclb
inc
lods
out
mov
pop
dec
cmp
xor
popa
jae
cli
mov
pop
pand
push
pop
inc
mov
mov
jle
cmpsl
sbb
pop
subb
or
push
pop
dec
jb
mov
or
repz
push
add
add
push
push
lret
orl
pop
adc
int3
out
pop
and
cmp
mov
aas
mov
lret
inc
subl
jbe
ret
mov
adc
xor
seta
rolb
dec
mov
or
aad
leave
xor
and
inc
outsl
adc
sbb
aas
ret
mov
mov
push
call
and
cmc
push
cmpsl
pop
jge
shr
arpl
icebp
sbbb
mov
cmp
jae
jecxz
mov
aam
push
cmp
adc
mov
stos
or
das
scas
scas
inc
inc
outsl
cmp
adc
test
sbb
fwait
sub
cmpsl
cmp
shr
fs
xchg
push
test
ss
ds
push
push
inc
stos
jb
cmpsl
and
pop
bound
adc
inc
push
dec
repnz
scas
jb
dec
dec
push
pop
andb
jo
into
aad
clc
mov
aaa
cwtl
pop
fdivl
add
popf
mov
arpl
and
or
imul
lret
push
lcall
out
adc
mov
xor
or
mov
nop
ljmp
scas
push
sarl
nop
andl
xchg
shl
inc
dec
or
lock
shlb
mov
loop
push
jns
push
add
sbb
ljmp
push
jmp
add
push
cli
lahf
popa
jo
and
inc
dec
incb
jno
loopne
out
lea
inc
or
or
push
mov
repz
mov
sbb
or
leave
xor
int
push
arpl
sub
repnz
push
mov
je
adc
jno
push
sbb
mov
mov
out
dec
daa
xchg
loopne
sub
sbb
negl
lods
insb
in
in
arpl
xchg
lret
and
inc
decb
sub
aaa
push
loope
push
fsts
sbbb
mov
aam
sbb
or
std
sub
add
mov
sbb
and
fnstsw
js
out
addb
and
stos
lds
pop
outsl
mov
sbbl
inc
xor
pop
cltd
das
push
push
and
pop
mov
jmp
int3
gs
push
sbb
ror
cmp
rcrb
shl
sti
hlt
shrd
pop
pop
cld
jecxz
push
cmp
fisttpll
push
xchg
lea
int
rorl
inc
lret
mov
fdivr
sar
iret
scas
and
fmuls
inc
jne
lahf
pop
push
pusha
incl
imul
out
clc
inc
inc
and
cmpsl
mov
xchg
pop
jns
sub
subb
test
or
adc
jge
test
aad
ds
repz
mov
aam
or
outsb
and
push
cmp
push
mov
fcmovu
inc
or
xchg
mov
xor
mov
call
pop
dec
mov
movsb
in
popa
and
ss
jb
mov
divb
jmp
mov
push
or
push
loopne
and
cmp
cld
jo
rep
jb
add
mov
test
xchg
jnp
fs
fnstenv
int
popf
adc
xor
scas
xchg
rol
pop
sub
cmp
cltd
sub
pop
cmp
mov
mov
scas
sbb
mov
xchg
inc
test
test
filds
mov
fdivr
fnsave
loop
pop
out
out
lds
adc
adc
mov
cmpsb
addr16
fdivs
xor
fimuls
or
in
testl
out
cmp
xor
mov
and
jo
mov
inc
pop
dec
mov
dec
frstor
xor
jne
lret
and
mov
and
lret
cmp
aas
add
xchg
adc
ds
jne
mov
mov
aam
jg
sub
mov
jge
jp
addr16
cmpsl
insb
lcall
aad
mov
repnz
loope
scas
adc
sub
fidivrl
mov
mov
mov
cmpb
and
leave
xor
in
fdivrl
or
sbb
data16
add
in
sub
mov
ret
and
mov
popa
mov
out
push
lods
jns
dec
push
push
insb
cmc
xor
cmp
shll
dec
std
int
jne
xor
xchg
sub
lock
add
cs
jmp
pusha
or
bound
inc
adc
addr16
push
popf
mov
ds
cli
sub
pop
das
aaa
mov
loope
xchg
adc
inc
sahf
and
jae
xchg
xlat
dec
push
inc
mov
popa
scas
jp
jmp
or
mov
adc
aaa
xor
lret
cmpsb
cld
shlb
outsl
mov
imul
pop
jbe
insb
rcrl
fdivrp
dec
das
xchg
jns
pushf
xor
scas
int3
pop
loop
fisubs
fcomi
xchg
out
sub
ja
mov
ret
push
dec
adc
rclb
nop
test
lea
cmpl
insb
faddl
jbe
xor
in
cmpsl
xor
dec
movsb
sti
rclb
and
push
jp
adc
ret
push
fwait
rclb
rcl
ljmp
call
int3
or
aaa
lods
lds
test
jle
xor
ja
and
clc
popa
inc
jb
xchg
test
sbb
fstps
mov
dec
stos
out
cmpsl
mov
das
mov
arpl
push
inc
rcrl
dec
test
dec
jb
sbb
push
mov
ja
mov
add
xchg
nopl
pop
repz
cmp
sub
xor
lock
or
xor
outsl
fisubs
dec
jnp
shlb
dec
mov
xchg
outsl
xchg
int3
ret
pop
scas
daa
imul
jg
sub
shll
out
xchg
ret
mov
jbe
and
lret
xor
mov
add
mov
andb
jo
push
hlt
call
or
lds
and
mov
lea
sbbl
scas
pop
sti
push
lret
test
jns
pop
leave
cmc
xor
jno
and
add
push
pusha
scas
mov
xchg
outsb
jge
cmp
ljmp
daa
dec
out
test
xchg
jno
ret
xchg
push
test
dec
shlb
and
arpl
mov
cs
xor
jns
in
dec
sbb
sahf
dec
cmp
xchg
or
popf
and
popa
out
xchg
sbb
xlat
std
out
pop
cmpsb
loope
ret
std
cli
adc
sahf
sbb
push
push
enter
push
sahf
pop
mov
add
or
xor
jmp
loopne
test
jp
add
ret
push
push
sbb
dec
mov
cmp
setl
add
ljmp
inc
adc
jne
jmp
jbe
jge
cmp
call
jle
mov
data16
inc
sti
cmpsl
test
jge
jle
push
daa
inc
push
cmc
adc
aas
or
jo
imulb
sub
fdivr
fs
fs
mov
adc
jo
sbb
scas
xchg
lcall
aad
lock
hlt
insl
push
lret
sub
xchg
cmp
std
lret
fxch
or
push
out
ret
sub
inc
gs
mov
cmc
xchg
aas
sub
cwtl
test
out
sbb
test
fildl
popa
mov
add
stos
and
cltd
cmc
sub
filds
scas
outsl
mov
pop
inc
loop
adc
pusha
jp
pusha
in
mov
sbbb
xchg
pop
lret
xlat
iret
test
fisubl
pushfw
mov
mov
out
out
dec
xchg
lock
in
pop
int
jbe
popa
pop
or
cmp
push
jmp
jl
loopne
xchg
pop
mov
xchg
xchg
sbb
shl
adc
xchg
cmp
or
inc
mov
cmc
jmp
push
add
push
xchg
dec
xchg
sbb
xchg
iret
and
jg
pop
int3
das
and
fcompl
aaa
push
sbb
fisubl
les
ljmp
aad
out
outsl
fisubs
sub
jmp
ljmp
out
and
movsb
sbb
push
mov
ret
int3
dec
scas
repnz
pop
inc
test
sbbl
mov
and
pushf
add
push
mov
int
push
pop
pop
xchg
sbb
cmpsb
es
popf
out
push
sbb
ds
mov
popf
jmp
xchg
enter
jmp
inc
fidivs
gs
cmp
das
imul
faddl
pushf
push
mov
mov
xor
stc
mov
add
or
pop
inc
xchg
xchg
cli
cltd
inc
daa
cmc
and
dec
test
add
aas
inc
das
and
xor
mov
test
or
data16
in
cltd
jae
gs
test
cmp
pop
fwait
clc
mov
repz
jae
xchg
leave
fldl
add
sbb
sbb
ds
mov
repnz
add
dec
shrl
cmp
fistl
cwtl
shll
jp
xchg
mov
clc
aam
mov
aad
jp
pop
hlt
ds
push
rcll
jmp
cltd
push
cs
cs
loop
andl
mov
add
mov
mov
pushf
jp
mov
sbb
notl
mov
sbb
cs
push
stos
mov
and
les
sbb
sbb
imul
jp
scas
jae
jno
push
and
cmpsl
or
pusha
xchg
lds
mov
inc
int3
mov
loope
mov
mov
mov
or
icebp
mov
fwait
jo
aam
sbb
sbb
cmp
aam
cmp
imul
dec
rolb
aad
mov
shll
in
jecxz
pop
mov
mov
std
jne
dec
mov
inc
lret
fsubs
mov
leave
leave
out
xchg
aaa
enter
sub
adc
add
cmp
repz
push
sbb
push
mov
orb
sti
dec
je
insb
fadd
push
jmp
rcll
int3
lret
mov
dec
jo
sub
xor
fdivl
adc
arpl
push
dec
int
lret
add
mov
cltd
xchg
ljmp
insb
sub
es
inc
fs
out
fsubp
cmpb
cltd
adc
mov
or
insl
scas
dec
mov
and
mov
jne
das
push
sub
pop
or
mov
jl
or
pop
loope
jle
je
incb
test
push
sub
pop
adc
adc
xchg
std
adc
mov
lods
pop
movsl
stc
test
jmp
and
cmp
cmp
xchg
mov
xor
cmp
pushf
pop
jae
or
rolb
sub
pop
xchg
out
fcom
xchg
mov
push
xchg
les
push
out
fisubrs
xchg
add
aad
xor
and
xchg
mov
mov
adc
mov
xchg
scas
sub
out
sub
das
inc
sbb
mov
xchg
ret
push
gs
loope
adc
dec
int3
adc
pop
ret
pop
push
push
insb
inc
mov
into
jno
gs
sbb
add
mov
mov
cmp
mov
dec
pop
add
mov
loope
int3
jmp
mull
mov
fimuls
xchg
je
out
aas
adc
shll
std
inc
dec
scas
mov
and
cwtl
push
jecxz
dec
sbb
test
xchg
icebp
icebp
cmp
or
inc
cmp
and
testl
push
pop
jb
mov
lret
aas
out
arpl
mov
mov
push
dec
jno
pop
loope
mov
pop
das
fidivrl
dec
stos
loopne
int
ds
jb
cmp
inc
xlat
push
daa
cmp
or
loope
test
jmp
jg
pop
cmc
rorl
in
sti
mov
int
sbb
xlat
and
je
inc
sbbb
adc
sbb
jle
test
adc
cmp
add
je
jne,pn
mov
add
fdivs
cld
push
jae
je
adc
sub
movsb
mov
mov
sub
nop
mov
in
cmc
leave
mov
dec
push
enter
mov
clc
add
inc
rcr
repnz
gs
and
add
or
sub
ss
sti
arpl
xor
cmp
mov
or
fists
les
imul
aam
iret
shrl
mov
xchg
out
dec
push
fdivrp
dec
xchg
ss
js
mov
mov
icebp
push
outsb
pushf
rcll
fs
je
rcrb
and
div
or
mov
dec
add
out
mov
or
push
mov
iret
sar
lret
and
pop
jmp
std
inc
mov
mov
jmp
cmpb
jp
dec
imul
jp
mov
pop
dec
movsb
loopne
popf
leave
sub
mov
mov
and
dec
jb
mov
mov
mov
xchg
lds
int
mov
fidivl
jbe
xchg
adc
icebp
outsl
jl
out
dec
xor
xchg
push
jo
out
push
cmp
jmp
mov
int3
inc
sahf
mov
test
out
test
nop
movsl
push
fcompl
mov
xchg
das
test
push
inc
test
sbb
xchg
lods
imulb
add
sti
inc
xlat
mov
sar
scas
mov
pop
mov
dec
aad
ss
dec
mull
fidivl
call
jnp
mov
push
xchg
cltd
xchg
mov
fldenv
rorb
xor
jnp
xchg
cmp
pcmpgtw
add
popf
ds
pusha
xchg
test
xor
pop
dec
aad
pop
stos
sub
or
mov
scas
inc
cmp
fisttpl
pop
or
mov
jle
movsl
ret
xlat
sarb
mov
mov
mov
adc
pop
jmp
test
sub
test
jo
in
sarl
dec
sbb
insl
stc
or
les
push
push
push
adc
cmp
sbb
xchg
dec
jns
outsb
sarl
or
cmpsl
push
insl
ljmp
push
pop
sti
or
ds
lock
push
in
dec
mov
adc
stos
jns
sbb
shll
insb
int3
dec
push
ds
add
sbbb
mov
and
insb
adc
add
push
js
inc
lahf
adc
test
dec
push
out
scas
pop
dec
inc
hlt
xor
das
xor
addr16
sub
popa
xchg
aam
mov
lret
fildl
scas
and
enter
sbb
adcb
jp
in
xchg
jns
cmp
cmpsb
int
outsl
scas
jbe
lret
cmc
mov
je
pushf
cmpsb
or
insb
jne
mov
stos
xchg
ja
js
and
movsb
mov
pop
push
adc
jp
and
addr16
adc
or
adc
out
sub
loope
test
dec
insl
ficompl
mov
xor
pop
pop
mov
aam
cltd
xchg
dec
sbb
xchg
bound
or
dec
inc
pop
jecxz
mov
inc
scas
or
jcxz
xor
pop
cmp
cltd
add
ljmp
int3
mov
add
gs
outsl
push
push
jle
enter
daa
lret
outsl
xor
scas
aad
daa
pop
mov
outsb
pop
es
jecxz
cwtl
push
pop
inc
and
outsb
inc
xchg
fs
inc
jmp
lods
push
out
shrl
sbb
imul
dec
sbb
and
inc
mov
rorl
add
mov
mov
sbb
repnz
lods
aad
ret
push
mov
pop
xor
cmp
mov
insl
loop
jne
fs
mov
inc
aas
lea
mov
jmp
pushf
lcall
fwait
jecxz
push
add
loop
or
ror
xchg
leave
adcb
xor
xor
mov
icebp
push
xchg
int3
fsts
adc
dec
bound
test
xor
hlt
jmp
das
xchg
inc
lcall
int3
cmp
xor
jne
popf
ljmpw
test
add
push
jmp
cld
nop
push
jg
xor
xchg
xchg
mov
sub
xchg
add
aas
decl
or
mov
jecxz
jns
jae
xlat
cmp
aad
and
mov
enter
out
stc
sub
sti
fucomip
test
and
fiaddl
stos
cmp
jmp
lds
xor
fisubrs
cwtl
hlt
rcl
push
xlat
adc
popa
loope
add
pop
push
pop
push
into
jns
push
outsb
cmp
lahf
orw
sbb
sahf
fdivrp
lret
lock
cmp
xor
jb
into
jnp
jl
add
xor
push
stos
jae
xor
dec
xchg
aas
or
jo
jl
arpl
mov
adcb
push
push
or
add
jmp
push
add
fldcw
outsl
push
cmp
push
aam
movsb
xor
out
cmc
sbb
in
mov
xor
into
xchg
shll
mov
jnp
mov
fisttpll
adc
aam
push
cwtl
cmp
sbb
pop
push
test
fsts
lret
je
leave
pop
push
outsl
pop
ret
xor
shlb
pop
jmp
stc
sqrtps
arpl
mov
and
push
rcrl
dec
andl
sub
je
and
lock
xchg
subb
ja
sub
mov
dec
xchg
and
or
mov
mov
std
divb
dec
repnz
or
repz
in
inc
mov
je
inc
cmp
ja
xor
jl
cli
in
std
sub
adc
addr16
mov
gs
inc
ja
cltd
xor
bound
into
xor
cmp
dec
or
loop
push
enter
xchg
popa
divb
loope
xchg
negb
add
lock
jl
pop
adc
fldl
adc
ror
mov
push
das
decb
int3
mov
mov
insl
push
int
pop
ficoml
mov
mov
jle
insb
mov
pop
add
mov
dec
xlat
sahf
cmpsb
push
sbb
repz
xchg
stc
repz
enter
inc
popf
clc
test
imul
les
xchg
cs
or
cmp
dec
jp
mov
aas
arpl
cmp
push
push
movb
xchg
push
imul
cwtl
ret
or
mov
shr
pushf
or
dec
sub
stos
jo
stos
inc
int
add
cmpsb
cs
xchg
and
xor
pushf
and
insl
mov
dec
pop
inc
clc
bound
icebp
jb
xchg
loop
into
cmp
sbb
mov
mov
push
sti
xor
jo
lahf
xchg
mov
das
or
outsl
in
add
push
ss
and
repnz
push
mov
inc
insl
sbb
filds
mov
icebp
leave
jl
scas
or
movsb
add
adc
in
in
and
lock
pop
lods
pop
das
jp
ss
dec
add
sub
jp
int3
lea
push
fwait
mov
lcall
jns
xor
lret
outsl
push
cli
pop
inc
adc
mov
push
push
pusha
dec
pop
mov
mov
mov
arpl
sub
fiaddl
mov
pop
ss
xchg
insb
sbbb
dec
push
shl
cs
int
dec
push
aas
gs
push
jne
imul
sbb
cltd
and
pop
sub
xchg
in
inc
or
dec
fimull
stc
fprem1
push
ss
ljmp
stos
loop
fcmovb
sub
ss
rcll
popf
ret
cmpsb
out
or
mov
and
fstps
jae
psllq
mov
lock
or
sbb
cltd
movsb
inc
xlat
or
loope
mov
pop
fwait
and
ljmpw
add
je
mov
ds
mov
ficoms
xor
lret
loope,pn
inc
inc
inc
jl
cmp
seta
mov
stc
call
fbld
lret
mov
xor
sub
sbb
pop
scas
out
mov
pop
insl
roll
dec
dec
int
push
add
mov
test
dec
jle
call
jns
sub
mov
cmp
cmp
push
loopne
imul
jns
das
xor
sub
cmp
insl
mov
cltd
shl
mov
inc
test
cld
push
lods
js
lock
repnz
cwtl
cmp
adc
dec
in
icebp
add
add
icebp
mov
dec
out
cmp
in
int
adc
sbb
test
xchg
mov
pop
repnz
mov
sbb
imull
ret
fcoml
jle
dec
dec
xchg
stos
mov
test
cltd
mov
xchg
mov
data16
jl
in
aad
cmpsb
mov
adc
or
iret
ljmp
xchg
lock
adc
std
sub
mov
pushf
js
sbb
aaa
leave
add
aaa
jg
xor
cmpsb
pushfw
sbb
movsl
fdivp
and
stos
call
push
inc
inc
mov
popf
dec
cmp
xor
fs
mov
inc
sbb
dec
int
xchg
lods
adc
mov
sbb
mov
cwtl
pop
xchg
push
jne
icebp
sti
arpl
inc
loope
popa
fildll
aas
pop
push
arpl
inc
push
dec
jg
push
cmp
and
cmp
mov
lods
stc
jge
movsb
mov
fisubrs
inc
and
lods
int3
add
xor
or
mov
popa
popa
inc
lods
movsb
sub
int3
mov
sbb
mov
add
pusha
lahf
pop
dec
cli
fistpl
js
in
outsb
rcrb
test
sub
std
add
push
mov
iret
lcall
jb
int
in
xchg
dec
push
jae
xor
test
iret
lods
scas
or
out
out
fwait
inc
out
dec
in
xchg
xor
out
sub
mov
sbb
mov
movsb
gs
aad
outsb
or
or
xor
mov
pop
jg
xchg
test
mov
xor
and
cmp
mov
mov
cmpsl
sbb
mov
dec
push
xchg
scas
gs
test
jecxz
cmp
jo
push
mov
mov
outsb
shlb
arpl
mov
jb
popa
out
cmp
int
mull
adc
test
mov
lds
out
push
fsubrs
jb
mov
icebp
les
in
adc
jb
add
divb
pop
jo
push
out
hlt
add
cld
lahf
push
add
shrl
daa
add
dec
cld
jg
push
daa
push
cmpsl
std
cmp
jecxz
imul
dec
iret
inc
aaa
xor
clc
shll
xor
stos
mov
rcl
int3
cmp
mov
aaa
xor
jnp
sarl
jp
rolb
jo
cmp
mov
xor
xchg
rolb
cmp
and
mov
cmp
adc
mov
outsb
data16
xchg
in
loop
cmpsl
xchg
mov
je
xchg
aas
shll
lcall
roll
pop
mov
ds
in
adc
dec
xchg
or
outsb
and
jecxz
cltd
iret
movsb
insl
inc
lcall
flds
lock
data16
js
int
push
dec
in
sbb
aam
cmpb
out
push
push
xor
es
cwtl
popf
les
fs
les
mov
cmpsl
ljmp
inc
hlt
mov
jns
bound
push
pop
xchg
cmp
inc
mov
push
movsl
push
jecxz
mov
jne
arpl
test
ret
out
mov
or
dec
loop
ret
movsb
pop
out
addb
ror
inc
xchg
inc
jecxz
and
into
enter
cmp
xor
icebp
insb
cmc
inc
push
xor
ret
jns
mov
xchg
movsb
xor
mov
jmp
cmp
or
mov
pop
mov
push
popf
xor
dec
les
sub
cmp
pop
or
and
icebp
loopne
cmp
cmp
sti
fimull
jg
in
cmc
jp
rcrl
adc
rcll
or
adc
pop
and
bound
sbb
sbb
stc
aas
sub
xchg
insb
push
out
adc
imul
popa
test
outsb
inc
lods
jmp
push
lret
mov
mov
shrb
outsb
xorb
insl
pop
mov
add
mov
inc
sti
hlt
mov
xchg
outsb
jo
inc
mov
lret
dec
add
aaa
push
mov
xor
and
sarl
std
loope
add
jno
stos
insb
je
outsb
cmpsl
mov
ror
rcll
ja
imul
and
scas
inc
pop
out
mov
xor
or
adc
aaa
lcall
test
jecxz
sbb
pop
inc
int
dec
in
jecxz
call
loop
xor
sbb
adc
adc
and
mov
mov
inc
push
pop
pop
mov
pop
or
roll
xchg
mov
es
xor
sbb
xchg
sub
outsl
cmp
lods
jp
scas
xchg
loop
pop
aaa
push
mov
int3
jns
pusha
sub
out
sub
ja
repnz
out
sbb
mov
xchg
pop
jo
ja
rcr
mov
sbb
jge
inc
out
aas
jo
xchg
in
movsb
addl
pop
inc
gs
clc
negl
ljmp
addb
ljmp
jmp
or
cmp
movsl
add
lahf
and
sahf
mov
mov
shl
jge
test
mov
std
pop
scas
ja
jge
pop
xchg
inc
adc
inc
test
add
xor
push
dec
jg
pusha
test
cmc
popf
lods
je
lods
mov
adc
testb
bound
xor
or
jmp
fwait
sbb
sub
sub
pop
dec
jge
jno
gs
and
push
or
repz
js
pop
cmp
push
imul
xlat
aas
shll
inc
movl
mov
je
inc
enter
scas
mov
into
sub
fwait
xchg
ljmp
lahf
in
insb
cs
and
call
stc
insl
cmpsl
adc
call
sarb
sub
lock
and
push
jl
imul
sub
mov
sbb
icebp
into
je
out
mov
fistpl
xchg
pop
mov
les
ret
fcmovu
pop
mov
fwait
repz
xchg
push
fwait
dec
pop
add
push
imul
ret
les
punpckhbw
mov
shr
dec
jb
push
mov
sahf
jns
jb
and
xlat
js
pop
jle
into
imul
fs
mov
cmp
popa
ss
adcl
or
ss
scas
mov
shlb
or
int3
mov
icebp
cmp
out
sub
sti
push
icebp
dec
icebp
mov
in
cmp
aas
mov
out
pop
adc
mov
js
and
push
or
xor
adc
sbb
pop
or
inc
cmp
push
fdivrs
mov
stos
gs
mov
repz
adc
jg
or
add
and
jl
add
mov
cltd
cmp
shrl
adc
ret
lahf
gs
aas
or
lret
push
gs
lret
ds
sub
mov
xchg
and
pop
testl
loopne
xchg
in
xor
and
out
inc
lods
ljmp
cli
mov
fucom
sbb
pop
xchg
push
inc
jge
addr16
add
fsubrs
call
aad
dec
mov
add
lea
xchg
sarl
pop
pop
out
mov
adc
dec
pusha
sbbb
dec
dec
dec
call
mov
pop
fstpt
lock
sbb
jp
subl
sbb
xchg
arpl
repnz
rorl
pop
push
dec
adc
ds
mov
xor
es
push
jecxz
mov
adc
adc
clc
sub
hlt
ret
cwtl
in
adc
lea
js
iret
imul
mov
sahf
aas
xor
xor
fs
test
ret
adc
das
cs
sbb
ljmp
test
add
popa
pop
in
or
jle
and
and
and
push
or
and
rcrb
jnp
lods
out
js
xchg
jle
icebp
mov
mov
and
inc
mov
push
sahf
adc
and
and
xor
jmp
pop
dec
fwait
ljmp
cmc
ss
jecxz
shl
sub
pushf
jae
mov
push
inc
sbb
cltd
sub
rorb
outsl
nop
jge
dec
mov
push
add
jmp
cmc
xor
jle
and
das
jge
cltd
jbe
dec
sahf
mov
mov
pusha
jge
cmp
cltd
sub
sbb
aas
jecxz
fwait
xchg
xor
or
add
and
mov
cmp
jge
pop
or
push
add
hlt
mov
cli
sbb
pop
loopne
shlb
sbb
dec
push
into
and
repnz
loop
jmp
pop
push
xchg
loopne
jg
loop
or
adc
mov
sbb
mov
add
jae
cwtl
test
jbe
outsl
das
pop
inc
sbb
shl
leave
xor
push
ljmp
and
cmp
inc
sbb
xchg
insb
call
add
pop
icebp
mov
dec
cmc
jecxz
mov
xor
push
ss
arpl
mov
lods
lds
std
adc
clc
jns
push
insb
push
rorb
add
pop
xchg
push
fists
cmp
ficomps
fcomip
sbb
mov
jg
call
adc
data16
mov
outsb
inc
out
pop
dec
iret
test
fstl
test
sysexit
aam
sti
pushl
outsb
cmp
jl
inc
sahf
dec
add
insl
shl
ja
nop
arpl
mov
jmp
negl
imul
notl
movsl
and
call
xlat
imul
cltd
std
lock
inc
jp
ficompl
and
inc
fsub
or
mov
fs
pushf
and
adc
jne
int
mov
pop
adcl
ret
cwtl
fcompl
lea
xor
pop
or
loop
xor
mov
mov
add
mov
xor
jb
inc
push
xor
popa
jecxz
push
cmp
data16
pop
mov
pop
jecxz
cli
les
and
lret
adc
sub
jb
inc
sub
subb
jecxz
mov
and
cmp
and
fwait
call
loop
iret
xchg
dec
lds
aam
dec
aaa
xchg
das
add
cmp
or
mov
stos
test
out
arpl
xchg
jmp
mov
xchg
cmp
inc
iret
push
push
repz
stos
ja
or
or
jl
xchg
inc
jmp
push
push
or
pop
rolb
mov
jo
shlb
test
repnz
aam
sar
dec
sbb
aas
popa
mov
outsb
cld
lret
gs
inc
mov
cmp
inc
fldenv
sub
or
sub
xchg
repz
pop
pop
test
fisubs
adc
jp
ret
je
aam
into
outsl
rcrb
dec
xchg
push
adcb
xchg
sub
mov
add
xchg
in
jns
or
lds
outsl
mov
les
xchg
adc
cmp
inc
or
xor
mov
loope
and
sbb
xchg
xorb
shlb
jg
in
lods
in
ljmp
rcl
int
out
add
dec
dec
int3
pop
popa
stos
cli
ja
adc
movsl
xchg
sbb
xchg
lret
jmp
into
lahf
mov
and
cmp
les
call
icebp
ss
mov
push
mov
cmp
mov
ja
add
adc
in
sbb
int
mov
jno
lods
inc
mov
jbe
or
faddp
jl
imul
and
dec
out
fidivl
aaa
xchg
sbb
nop
into
mov
jp
bound
sub
dec
jo
mov
stc
ret
inc
nop
push
inc
cmc
adc
push
enter
popa
ret
sti
cltd
xor
pusha
test
stos
es
filds
push
add
xlat
xchg
cltd
stos
and
jle
xor
scas
outsb
les
jnp
push
repz
out
jae
adc
ja
pop
push
shll
and
xchg
hlt
lret
mov
fldt
mov
inc
or
cmpsl
jg
in
jae
ds
mov
pop
pop
not
test
jno
loopne
mov
sub
aad
mov
arpl
inc
mov
pop
fwait
xor
xchg
orb
and
inc
and
mov
clc
inc
add
or
fwait
test
add
bound
adc
fldl
pop
mov
loope
sbb
insb
icebp
sahf
jbe
push
push
jecxz
jne
leave
adc
sbb
jl
shlb
popa
xchg
pop
cli
mov
out
fcomps
mov
out
inc
xor
imul
mov
aam
cmpsl
jmp
adc
adcb
push
ret
call
hlt
loopne
sti
fistps
inc
fbld
hlt
xor
mov
std
sub
pop
push
mov
pop
or
cwtl
insl
add
ror
aaa
cmp
pop
testl
mov
js
mov
pushf
outsl
call
mov
or
les
out
inc
subb
sbb
pusha
push
inc
sub
xor
stos
mov
lahf
inc
scas
sbbb
xor
inc
scas
add
popf
sbb
in
imul
out
xor
or
cltd
loopne
inc
icebp
je
stos
out
mov
and
mov
repz
lea
test
out
je
mov
in
mov
fnsave
sti
adc
je
int
ret
test
jg
dec
or
xor
int
mov
jne
dec
lds
xchg
je
js
push
lea
mov
sbb
sbb
iret
scas
js
sbb
push
aam
mov
add
inc
aaa
sarl
scas
dec
fldenv
roll
movsb
test
in
aaa
in
xor
test
xor
push
sbb
stos
xchg
std
enter
sub
jl
dec
imul
and
mov
cmp
sbb
outsl
in
mov
int3
dec
push
jno
pusha
les
pop
mov
dec
mov
jbe
outsl
movsb
aaa
les
ja
mov
ljmp
fsts
xor
sbb
xchg
in
imul
dec
cmpsb
subl
test
test
lcall
cmpsl
imul
jae
lret
aas
ret
std
test
clc
clc
inc
adc
and
es
lret
xchg
cwtl
push
data16
enter
lret
dec
adc
add
cli
stos
cmp
adc
push
push
imul
inc
daa
lods
inc
pop
test
mov
sub
lcall
cmp
push
xchg
cld
xchg
jns
sbb
cmp
rorl
lds
imulb
jp
fisttps
and
je
push
add
jp
ljmp
pop
ffreep
stos
sbbb
scas
fmull
pusha
add
test
mov
cmpb
mov
call
mov
mov
aas
divb
cmc
pop
mov
pop
rcrb
fdivl
sbb
adc
or
xor
xor
dec
lods
add
popl
icebp
or
add
xchg
adc
test
mov
sub
pusha
das
and
cmpsl
mov
dec
cmpsb
push
outsb
dec
mov
cmpsb
fisubs
dec
insb
fwait
mov
push
dec
adc
lds
jg
sbb
movsb
jns
dec
push
icebp
mov
mov
lret
xchg
insb
jnp
xchg
sti
test
fmull
inc
dec
jl
insb
js
jbe
rcll
push
out
xor
adc
decb
rclb
popf
adc
cs
mov
lret
cli
inc
mov
cld
jns
shll
sbb
add
xchg
jnp
repz
repnz
mov
cwtl
sbb
ret
jne
mull
adc
jg
movb
cmp
push
in
pop
dec
or
mov
lahf
dec
mov
inc
fcoms
std
cs
hlt
adc
adc
outsb
push
shlb
faddl
sbb
add
imul
shl
and
sbb
xor
xchg
inc
xor
xor
push
mov
pop
pop
mov
push
aaa
lods
inc
jae
cmc
enter
jle
mov
pop
pop
jmp
out
scas
mov
add
out
mov
xor
inc
sbb
ljmp
insl
pop
sbb
and
push
daa
fs
outsl
imul
lods
inc
adc
repz
cli
rorl
cli
sbb
sti
and
xor
and
dec
push
lcall
mov
outsb
dec
leave
push
cmp
or
clc
jmp
xchg
in
mov
sub
jno
cli
js
sub
sub
scas
rcll
jg
push
in
out
cmp
dec
jmp
sbbb
rorb
lds
pusha
adc
shrb
mov
jnp
jmp
rcrl
repz
in
jbe
ss
add
add
fimull
inc
inc
fstl
dec
mov
pushf
xchg
stos
xlat
vhaddps
mov
cmp
xor
aas
inc
jae
lahf
cmp
cmp
test
push
xlat
ret
or
popa
icebp
pop
aad
push
mov
push
icebp
or
pop
pop
cmp
insb
dec
fsubrp
pop
in
adc
lods
jmp
dec
mov
dec
sbb
jmp
mov
xchg
cs
mov
sub
push
inc
cmp
pop
dec
mov
insb
xor
add
cmp
cltd
imul
clc
lcall
negl
pop
testb
ret
jmp
push
push
jp
and
and
pop
push
jge
test
pop
cmp
loopne
jecxz
es
fdivrl
dec
cmp
inc
ljmp
ret
push
cmp
xchg
addr16
negl
movsb
bnd
sbb
test
and
xorb
jecxz
ret
stos
xchg
xchg
cld
in
push
xchg
lds
shll
cmp
shl
mov
es
shrl
sbb
jg
popa
dec
rcrl
mov
out
sub
mov
out
iret
vucomisd
adc
mul
cs
lods
jge
test
and
pop
outsb
sbb
jb
mov
jle
lods
jne
into
in
jno
cmp
sub
ficoms
push
aad
and
or
shrb
adc
and
push
cmpsb
lcall
cmp
rclb
cmc
jnp
mov
xor
cmp
rclb
shrl
repz
sahf
jle
fldl
outsl
xor
xchg
push
mov
ds
or
stc
call
push
sbb
sbb
mov
pop
imul
add
pop
and
and
inc
push
arpl
aam
add
pop
mov
fistpl
mov
mov
int
pop
lock
das
out
insb
stc
enter
push
jp
test
jmp
shr
dec
das
je
dec
test
sub
aad
stc
sub
shlb
ljmp
lahf
sbb
inc
int
mov
and
adc
jae
mov
filds
addr16
push
dec
xchg
xor
sbb
xchg
sbb
aam
sarb
add
push
cmp
xor
dec
popf
pop
pop
loop
les
xlat
lret
inc
lods
xor
add
clc
mov
mov
pop
out
inc
sbb
ljmp
scas
inc
jne
cmpsl
jns
mov
jne
pop
mov
xlat
pop
sbb
add
mov
add
xchg
mov
pop
test
lea
push
mov
dec
repz
add
daa
push
fst
jge
adc
imul
sub
cs
mov
mov
sbb
xor
hlt
pop
cwtl
mov
and
roll
hlt
inc
add
xor
dec
lods
repz
sbb
mov
test
mov
dec
mov
out
inc
out
lock
movsl
cmp
lock
xchg
mov
jl
sub
pusha
mov
ret
sahf
in
lods
xchg
es
sub
xchg
fisttpl
pop
xchg
lret
pushf
mov
add
cmp
subb
test
sahf
sbb
and
test
xchg
mov
jo
xchg
repz
cmp
sub
test
sub
jae
mov
pop
jnp
jne
pop
jp
or
mov
inc
int3
lcall
adcl
pop
cmp
scas
ret
push
roll
mov
cmp
dec
mov
rep
stos
cli
test
fstp
rcr
pop
pop
add
push
sbb
dec
pop
add
cwtl
pop
sbb
outsl
jb
xor
out
jp
scas
sub
xor
jno
cmp
mov
test
lock
adc
lcall
insb
imul
loopne
mov
dec
push
inc
movsb
cmp
cmp
shlb
sarl
dec
mov
imul
movsl
mov
and
mov
dec
in
setle
or
and
add
sbb
in
lahf
sbb
nop
pushf
and
push
repz
test
das
cmp
in
ficompl
enter
lret
rclb
fs
mov
jecxz
push
xor
loope
mov
leave
fxtract
stos
pushf
filds
jns
in
pop
or
mov
sarb
clc
mov
jno
dec
dec
jb
outsb
dec
jno
inc
and
fwait
dec
jg
imulb
repz
mov
cmp
testl
je
mov
icebp
push
push
pop
cltd
inc
add
or
bound
std
js
mov
add
fnstcw
int
add
in
adc
int3
push
sbb
mov
popa
push
in
cmp
push
mov
outsl
cmp
and
dec
clc
enter
in
mov
jl
movsb
adc
lret
mov
jge
dec
mov
lret
cli
movsl
sub
sahf
int
xchg
in
out
dec
sub
test
shr
sbb
enter
std
mov
stos
inc
movsl
arpl
dec
adc
and
push
lahf
pop
xchg
lahf
out
cmpb
mov
adc
jae
or
cs
mov
dec
testl
popa
test
fisubs
mulps
scas
pop
sub
xchg
cmpsb
inc
je
push
fwait
inc
push
cltd
int
fsubrs
adc
sbb
in
ss
pop
mov
push
or
test
jne
push
xor
add
add
jnp
faddl
adc
roll
jns
in
add
adc
xor
daa
jne
cld
dec
in
push
mov
es
jnp
test
sahf
sbb
inc
leave
pop
sub
test
sbb
scas
cmp
testb
push
data16
lahf
lods
mov
cmp
divb
int
mov
xlat
inc
hlt
fldenv
cmp
das
add
xlat
mov
cmp
mov
sub
scas
and
jmp
das
cs
or
jg
cmp
subb
out
fistpl
mov
mov
outsb
sbbb
xor
xchg
jno
jne
int
loop
mov
jg
mov
xchg
mov
je
push
adc
jne
pop
cmp
mov
into
xchg
mov
dec
fisubs
shlb
test
pop
in
push
jecxz
scas
jl
dec
ljmp
cld
dec
sub
xchg
test
jnp
mov
push
pop
incb
jp
mov
pop
push
popf
dec
xchg
out
imul
ljmp
test
pop
and
aam
shll
sahf
xor
je
pop
dec
lods
adc
lods
test
stos
bound
fldenv
mov
jo
iret
imul
mov
xor
cli
sub
xchg
lock
into
jmp
dec
pop
out
push
out
pop
fisubl
sub
ss
outsb
nop
popf
dec
jl
xchg
pop
mov
xchg
ja
push
rep
aad
pop
and
push
stos
rcr
cmp
pop
mov
jno
adc
dec
sbb
pop
in
xchg
inc
enter
mov
sub
push
push
rorl
push
xor
cmp
jp
outsl
in
ret
push
bnd
sbb
mov
lock
jmp
push
push
stos
push
leave
add
pop
roll
ret
notl
xchg
push
add
and
jae
hlt
aaa
leave
call
movsb
fdivrl
cmp
cmp
adc
enter
into
test
movsb
inc
cmp
jae
js
int
pushf
pop
xchg
xchg
jbe
bound
sbb
xor
sarb
xchg
push
loopne
inc
push
jbe
out
push
pop
cmpb
sub
or
clc
push
xor
hlt
dec
xchg
jecxz
mov
inc
loop
jp
pop
sahf
stc
mov
xchg
clc
nop
in
fcoms
inc
rcr
mov
sbb
lea
fisubrs
push
cs
inc
sub
addr16
scas
imul
imul
push
dec
sub
and
shrl
sub
pop
ror
stc
or
outsb
nop
jo
scas
mov
sarl
jmp
jae
mov
jecxz
loop
inc
imul
jbe
movsb
cmp
data16
or
jb
lcall
cmp
shl
xor
lds
sbb
mov
jno
jb
lods
out
sahf
sub
aam
repz
rcrl
push
cmp
lahf
mov
fdivl
ljmp
cmp
cmp
mov
inc
fs
mov
add
dec
xchg
sub
cmp
inc
leave
gs
je
sub
test
push
or
subl
inc
cmp
push
xor
call
test
loopne
sbb
dec
xor
repnz
inc
das
aaa
in
xchg
adc
pop
in
xchg
nop
pop
push
aas
and
inc
cmp
and
xor
add
lahf
out
cmpsb
or
std
and
lcall
inc
orl
jne
scas
mov
out
andl
js
dec
mov
shlb
in
mov
faddl
inc
insl
push
stos
fistl
push
push
sbb
inc
jp
cmp
mov
mov
repnz
and
fdivl
sbb
dec
lahf
pop
cmp
fadds
pop
jmp
lret
negb
cli
shl
lret
mov
call
pop
shll
adc
push
rcll
je
dec
sub
push
mov
arpl
sarl
dec
stos
mov
cmp
orl
inc
mov
jbe
test
pop
xchg
not
xor
cli
xor
or
cmc
sahf
movsb
aam
lea
popf
xorb
ljmp
cwtl
pop
bnd
shlb
push
or
repz
inc
pavgw
in
lret
push
aas
int3
cmpsl
test
and
inc
and
repnz
addb
stc
mov
jge
hlt
outsb
idivl
movsl
or
popl
stos
mov
mov
mov
xchg
ss
pop
scas
cld
shll
loop
push
ret
mov
arpl
jne
ja
rol
bound
jae
in
dec
mov
ret
jno
add
ja
pop
test
push
pop
ficomps
mov
mov
mov
bswap
aaa
pop
and
cmp
mov
divb
mov
mov
sbb
inc
aaa
lds
insl
mov
jne
int
scas
push
fwait
sbb
xor
cmpsl
cwtl
fildl
pusha
leave
or
jp
daa
cmp
stc
test
cmp
out
nop
jae
aad
pop
pushf
mov
jmp
pop
and
int3
sub
outsb
out
loopne
cld
cmpsb
jno
data16
sub
jae
pop
push
or
pop
lea
sub
imulb
xor
push
jl
dec
inc
mov
stc
cld
or
jle
jecxz
stc
xchg
pop
adc
aaa
mov
repnz
pusha
cmp
rcll
popa
imul
mov
or
xlat
fdivrp
sahf
cmp
jae
and
arpl
adc
dec
cwtl
inc
icebp
jmp
lods
mov
stos
inc
movsb
mov
lahf
lds
jb
out
add
sti
mov
hlt
lcall
shll
sbb
outsb
mov
fs
xor
pushf
in
sti
jge
or
jg
mov
ja
cmpb
and
inc
inc
test
pop
mov
cmp
push
sti
pop
fwait
push
mov
and
rclb
xlat
into
adc
dec
mov
fcmovb
adc
scas
inc
or
adc
sbb
int
pop
shll
movsl
xchg
xchg
clc
jnp
sbb
sahf
sub
lea
shlb
push
sub
or
sti
call
icebp
xchg
sbb
shlb
dec
jl
add
xchg
outsl
lods
mov
mov
adc
and
add
push
imul
std
sbb
leave
jge
jnp
cmp
mov
aam
push
sub
pop
pop
fmull
imul
out
mov
mov
js
add
cmp
ja
shlb
sbb
out
mov
imul
insl
jge
or
pushf
fdivs
inc
andnps
push
pop
push
mov
mov
cmc
call
and
fstps
sbb
cltd
inc
mov
and
scas
cmc
push
push
dec
rcrb
popa
std
lock
cli
aad
fisubrl
out
insb
loopne
mov
adc
or
outsb
jno
mov
jb
lret
pop
jnp
stc
mov
stc
and
sahf
imul
popl
aas
outsb
sarb
add
std
dec
daa
in
in
jmp
inc
adc
push
xchg
insl
scas
jecxz
xchg
sub
jmp
std
cmp
jge
xchg
push
test
jnp
dec
mov
mov
cmpsb
mul
rcrb
int3
or
adc
xchg
dec
test
sub
cmpb
ja
add
mov
push
mov
mov
mov
sub
icebp
sub
push
pop
xchg
insb
mov
add
outsl
shl
hlt
xor
dec
jp
pop
pop
notb
arpl
fdivr
in
lahf
movsb
jno
add
inc
leave
or
cs
and
mov
cltd
fdivs
jmp
push
out
and
jo
mov
es
andb
xor
out
and
push
cmp
mov
dec
js
mov
fisttps
ss
pop
pop
ret
pop
mov
loope
push
lock
add
add
lcall
push
or
clc
shr
cmp
and
xor
xorl
mov
je
out
shlb
orb
xchg
mov
dec
inc
sub
pop
hlt
stos
mov
sar
mov
cli
adcl
loopne
cmpsl
in
cmpsl
or
xor
cmp
das
aaa
jae
or
ja
xchg
push
mov
out
call
fnsave
mov
daa
jg
mov
sbb
lret
lods
je
in
movsb
sahf
jp
xor
mov
pop
ja
cmp
xor
scas
dec
comiss
xchg
fistl
xor
jmp
push
into
or
push
je
loopne
or
pop
cmp
movsl
fidivrl
icebp
mull
loop
ret
adc
jae
cmp
xchg
daa
sbb
stos
fwait
push
dec
mov
adc
fmull
insl
sub
cmp
sbb
jge
les
enter
push
add
out
pop
xchg
mov
adcl
jne
pop
in
mov
mov
or
inc
lret
pop
ret
neg
sbb
outsb
mov
xchg
adc
jmp
jb
inc
dec
rclb
movsb
sarl
add
jno
out
cmp
dec
push
push
loop
push
ret
push
lods
aaa
arpl
push
rcr
movsb
ja
je
xchg
inc
in
push
cmp
data16
ljmp
cmp
mov
pop
mov
inc
call
xchg
movsl
mov
adc
lods
and
int
lahf
mov
fcmovu
fiaddl
and
stos
sarl
cmp
lret
mov
lahf
sub
xchg
sbb
mov
jmp
shlb
aaa
imul
repz
cmp
inc
ret
xorb
test
or
sbb
push
xchg
jecxz
adc
pop
iret
push
dec
nop
lods
mov
cmpsl
decl
ljmp
clc
adc
roll
int3
and
popf
or
mov
mov
jmp
movsl
mov
inc
sbb
insl
pop
cmp
sbb
sbb
movsb
inc
cli
lea
sbb
lret
cmp
push
mov
xchg
add
and
and
fs
mov
cmp
cmp
pushf
jnp
sub
movsl
ja,pt
dec
dec
mov
jne
cmp
mov
js
enter
add
xor
mov
mulb
push
lods
pop
cmp
dec
mov
and
pop
mov
fcompl
data16
xlat
dec
sbb
jmp
mov
in
aam
test
adc
inc
xlat
pop
dec
sahf
jmp
sbb
add
outsb
cmc
repnz
lea
xor
addr16
cmp
testl
cmc
sbb
pushf
and
dec
pop
loope
pop
push
push
out
test
stos
pushf
cmp
or
pop
fwait
mov
sbb
adc
and
xchg
push
inc
arpl
xchg
and
or
in
out
cmp
aas
fs
mov
lods
filds
xor
or
push
fiadds
ret
xor
es
pusha
push
dec
mov
push
in
shrb
ljmp
andl
and
lahf
cmpb
aad
mov
and
and
cld
sub
pushf
jno,pt
iret
add
int3
mov
push
subb
lock
cmpsb
cmp
shll
repz
push
mov
dec
inc
cs
jb
sar
sbb
clc
or
mov
pushf
outsl
rclb
push
push
popa
idivb
scas
sbb
shl
fistps
mov
mov
outsb
in
fcmovnu
inc
xlat
stos
out
ds
data16
cmpsl
pop
dec
outsl
repnz
jne
inc
push
aad
sbb
dec
loopne
xor
xchg
inc
mov
stos
std
movsl
and
or
adc
js
aaa
mov
mov
out
lret
outsl
fdivrs
fisttps
or
test
and
cld
cwtl
gs
and
stos
adc
jne
lods
stos
frstor
call
or
inc
scas
dec
and
or
stc
int
and
push
test
test
cmpsl
sarl
bswap
mov
or
mov
lods
les
icebp
in
xchg
in
mov
and
xchg
ds
push
sub
sarl
mov
xchg
jecxz
xorb
sbb
es
jno
in
ror
sub
lea
dec
adc
inc
aaa
add
push
sub
push
jno
mov
and
pop
jno
test
orl
and
mov
xchg
lea
in
gs
xor
cld
call
jbe
mov
sub
mov
sti
inc
fbstp
test
add
cmp
aad
push
lret
fistpl
addr16
imul
sub
mov
movsl
out
sbb
in
aaa
and
xor
inc
cmp
push
arpl
js
movsb
sub
fstpt
out
xchg
fnstsw
xor
cmpsl
sub
adc
inc
mov
mov
in
mov
cmc
addl
test
fsubrp
add
or
lret
nop
jns
mov
rcl
mov
cli
in
test
aaa
rorl
pop
aas
dec
xchg
or
xchg
dec
dec
imul
inc
or
or
mov
sub
pop
loop
push
int3
cli
and
add
and
out
mov
jne
inc
dec
xchg
pop
lods
ss
add
push
imul
decl
xor
dec
aad
jmp
fldt
cmp
insl
push
data16
jno
mov
adc
jge
add
movsb
ret
xchg
rcl
and
xchg
outsl
mov
jmp
mov
inc
pusha
cmp
in
std
bound
outsl
jno
inc
mov
sbb
cmp
pop
pushf
bound
pop
jp
jnp
push
mov
dec
into
xchg
inc
pop
out
xchg
fstp
cmp
sbb
hlt
ljmp
lds
push
lret
inc
enter
push
int3
ljmp
push
dec
scas
dec
jge
fimull
insl
fwait
lods
mov
adc
jmp
and
pop
fcomps
cmpsl
cwtl
in
jecxz
movsb
inc
imulb
lret
cli
or
in
mov
int3
pop
es
mov
cmp
mov
popf
sub
sbbb
in
cmp
mov
and
mov
cli
pop
test
notl
xor
xchg
xchg
jno
out
nop
in
cli
out
add
adc
inc
mov
xchg
cmpsb
push
loopne
inc
jmp
lret
aas
sbb
enter
sbb
xchg
popa
or
aam
mov
stos
mov
and
add
mov
pop
cmp
call
fwait
dec
insb
stc
xor
pop
xor
sub
xlat
fsubr
loope
pop
xchg
test
and
leave
push
or
pop
xor
push
push
adc
sbb
rorl
add
addr16
jnp
push
outsl
pop
movsl
jg
pop
ljmp
sub
adc
push
mov
fsubrl
push
mov
lcall
arpl
xor
mov
outsb
fimuls
and
aas
push
adc
mov
mov
pop
shlb
mov
xchg
xor
xor
fnstcw
test
movsb
aam
mov
add
pop
xchg
shl
cs
lds
dec
int3
add
sbb
inc
in
xor
pop
in
insb
repz
pop
test
pop
insb
jmp
cmp
in
jl
sbb
sbb
add
dec
popa
test
push
jp
shll
add
push
call
ret
cmpsl
add
aaa
iret
lahf
fs
nop
dec
or
xchg
mov
push
push
cmc
push
sbb
add
clc
mov
add
int3
inc
push
ja
or
push
addb
jg
or
mov
add
nop
iret
xchg
lock
into
rolb
nop
inc
xor
imul
inc
push
icebp
lods
sub
fnsave
std
xchg
xchg
push
arpl
in
outsb
pop
iret
shlb
jg
mov
roll
xchg
xlat
fwait
xchg
shlb
ss
mov
xchg
push
insb
push
mov
mov
jecxz
ja
and
mov
push
mov
mov
push
mov
push
mov
sub
mov
adc
adc
mov
das
push
pop
jb
stos
scas
js
pop
xchg
movsl
jge
and
cmpsb
inc
xor
je
in
jg
xchg
mov
xor
bnd
xchg
js
dec
pop
add
xlat
cmp
rol
outsl
bound
iret
mov
sbb
xchg
outsb
xchg
xchg
inc
xor
aaa
xchg
aad
das
frstor
hlt
test
mov
js
jp
cmpsb
das
das
xchg
scas
dec
js
and
xor
pop
jnp
xchg
clc
sbb
mov
or
push
loop
sub
add
pop
mov
pop
mov
push
dec
inc
pop
negl
scas
cmpsl
mov
push
adc
xchg
mov
push
cli
cltd
fst
insb
out
adc
outsb
push
out
aad
and
push
mov
jmp
std
xchg
inc
xchg
js
je
mov
lock
jnp
rorl
push
pop
lea
fdivrl
push
lea
addl
fdiv
add
xor
and
out
clc
mov
push
ret
and
cmp
pop
test
add
loopne
or
mov
push
jb
xchg
aam
pop
jle
inc
add
in
aad
scas
lahf
push
push
xchg
ffree
xchg
in
cmp
fdivs
enter
dec
gs
mov
fwait
enter
stos
addr16
int
inc
sub
push
mov
insb
jp
adc
bound
xchg
xchg
test
leave
aaa
push
adc
mov
sqrtps
out
out
ja
orl
and
bound
test
lahf
insb
arpl
sbb
xchg
cmp
cld
fdivrs
cmp
jmp
dec
movsb
cmp
or
fsub
pop
mov
adc
subl
data16
fcompl
adc
imul
xor
jns
mov
jbe
pushl
push
dec
adc
xchg
call
mov
jns
adc
cmp
stc
dec
sub
rorb
jg
outsl
mov
adc
jo
mov
push
lahf
lret
aam
add
pop
jge
sbb
test
bound
or
cmp
lret
hlt
out
inc
and
roll
dec
dec
sti
sbb
cmp
out
dec
popf
addr16
into
ds
pop
mov
shrl
insb
lea
sub
shrl
and
aad
pop
icebp
cmp
and
sbb
cmpsl
cmpl
mov
shll
imul
das
mov
mov
jne
ret
mov
loop
fistl
in
jmp
lea
or
jb
inc
sub
mov
inc
xchg
out
xchg
pop
mov
cmc
jbe
jmp
cmp
jmp
xchg
pushf
lea
scas
ds
pop
mov
test
and
push
stos
push
jl
insl
add
setl
lcall
add
xor
in
or
jp
and
sarb
aam
xor
movl
out
mov
xchg
shrb
dec
repz
pusha
jg
cmpb
or
jmp
mov
add
cmp
fildll
insb
or
addl
repz
push
fsubrp
xchg
orl
hlt
add
lods
push
cmpsb
dec
xchg
push
jecxz
adc
sti
ja
inc
inc
and
push
repnz
mov
test
add
sbb
xor
and
std
outsl
ja
enter
lahf
jo
imul
daa
sbb
pop
or
mov
lcall
push
out
jg
pop
test
faddl
mov
pop
or
jge
fwait
jecxz
outsl
aad
sub
sbb
scas
jo
enter
stc
gs
lods
in
dec
int3
adc
jge
lcall
xlat
repnz
jle
pushf
in
adc
outsl
cli
mov
push
stos
pop
repnz
loop
mov
cmp
dec
and
push
out
rcl
inc
imulb
flds
in
test
mull
lahf
mov
sbb
dec
dec
sbb
sub
add
sbb
idivl
pusha
inc
sbb
and
scas
xor
daa
insb
into
inc
push
jo
push
dec
adc
adc
mov
cmp
test
or
jb
pop
dec
rorl
add
loopnew
shlb
outsl
lds
stos
mov
insl
jnp
faddl
fidivl
xor
cwtl
sub
push
pop
lds
lret
insl
sbb
pop
ret
icebp
push
sbb
std
test
pop
cs
jae
jns
fcomps
or
loopne
inc
xchg
pop
neg
stos
popa
cmp
pop
add
mov
mov
jp
jne
shlb
push
shr
inc
leave
out
sti
icebp
pop
add
popa
push
sbb
jmp
fs
and
pop
xchg
imul
imulb
lods
into
jle
je
push
push
mov
mov
or
shlb
or
mov
sarl
jecxz
into
orb
jne
testl
or
scas
mov
mov
std
push
add
mov
sub
subb
xor
cmp
imul
xchg
jg
pushf
in
lods
outsl
jb
and
sti
cmp
cmp
sahf
jmp
adc
fwait
sub
mov
and
call
add
sarb
jo
sbb
push
mov
xor
push
aaa
xchg
cld
mov
jmp
push
xorl
mov
scas
or
ds
icebp
lds
xchg
and
ja
divl
jecxz
inc
xor
pop
or
hlt
dec
dec
fdivl
test
fisubrs
data16
cmc
imul
jecxz
push
jmp
push
sub
movsl
lock
pop
push
hlt
pop
lock
decl
pop
es
adc
imul
mov
fs
addb
fsubrl
fs
das
jmp
jnp
cmp
jb
jo
or
outsb
xchg
cmp
adc
sbb
mov
adc
loop
pop
imul
mov
pop
fmull
in
adc
decl
push
pushf
xchg
jecxz
fbld
cwtl
and
fcoml
xor
aaa
dec
xchg
xchg
bound
sbb
mov
in
bound
lahf
insl
sbbl
imul
cld
pop
cmp
inc
inc
mov
fdivrl
ja
testb
push
popa
jne
cmp
arpl
dec
rcr
in
mov
and
rcrl
pushf
loopne
bound
notb
loope
push
test
ret
xchg
or
mov
xchg
aad
mov
fst
push
ss
or
jbe
xor
std
mov
pop
inc
dec
pop
jno
shll
movsb
jmp
xor
xor
sti
jbe
sub
adcl
mov
cmp
mov
xchg
xchg
ret
and
gs
loopne
loopne
daa
add
adc
xor
sub
add
ret
call
and
fldcw
push
xlat
and
ret
dec
add
xor
jne
sbb
pop
cmc
pop
les
pop
and
test
rorl
loopne
or
add
dec
jne
decb
sbb
in
xchg
xor
lock
ljmp
sbb
das
cmc
insb
mov
push
cmp
cld
stos
testb
leave
inc
or
mov
mov
or
jle
fsubrl
iret
mov
lods
enter
shr
ds
mov
fs
movsl
insl
fdivs
mov
out
mov
cld
notb
cmp
pop
fsub
mov
jbe
repnz
mov
lock
hlt
sbb
movsb
pop
sbb
mov
into
cmc
add
mov
push
jmp
mov
pop
popa
xor
cmp
jecxz
inc
and
je
mov
andb
or
adc
sub
or
or
into
or
jnp
adc
cmpsl
dec
fs
mov
pop
int
insb
and
add
pop
fcomi
lods
sub
pop
out
loop
adc
inc
push
test
sub
hlt
lods
lods
jne
int3
pop
pop
jbe
push
dec
rcl
sti
mov
lret
neg
cmp
adcl
into
jge
dec
sub
pop
jle
pop
sbb
xor
sti
repz
jne
pop
xchg
rclb
pushf
cs
popa
xor
mov
popa
repz
xchg
inc
rorl
std
dec
push
out
push
inc
xchg
fsubrs
dec
add
mov
inc
ret
stc
fisubrs
sub
cmc
rcll
cmpl
decl
rcl
test
pop
inc
sarb
gs
xorb
jge
or
mov
popa
dec
icebp
ljmp
in
pop
loope
push
shrl
stos
or
or
add
xchg
in
push
leave
decl
xchg
es
and
aam
cmp
cmp
xchg
cs
lds
loope
mov
mov
int
push
sbb
xor
jg
stos
mov
arpl
jp
add
lea
sbbl
xchg
mov
stc
xorl
pop
test
mov
jecxz
mov
cld
cwtl
repz
adc
xchg
fistl
ja
inc
ret
pusha
add
shlb
insl
or
fstpt
cmp
mov
test
bound
mov
popa
ror
sub
xlat
bound
pop
sub
sbb
or
xor
lds
xorb
sbbb
sub
leave
aad
fistl
push
cmp
mov
es
push
clc
push
add
push
fsub
jmp
call
subb
cmp
add
inc
xchg
dec
aaa
push
or
popf
xchg
cmp
jnp
jl
mov
sub
add
mov
scas
jg
inc
iret
test
xchg
pop
sbb
dec
xorl
push
xor
jp
shrl
xlat
mov
iret
sbb
lods
jo
cltd
adc
js
shr
jns
test
cwtl
adc
add
or
xor
add
cli
jbe
push
and
nop
add
mov
xchg
and
fldenv
out
stc
outsl
mov
dec
cli
paddusw
mov
add
pop
push
jecxz
jg
nop
cs
sbb
mov
shll
test
nop
sbb
daa
pushf
push
add
clc
mov
dec
vandnps
xchg
dec
xor
and
mov
iret
xor
lds
xor
xchg
add
in
jge
aas
push
push
push
outsl
pop
pop
push
xchg
push
cmp
mov
pop
mov
and
call
fs
push
nop
jle
das
adc
out
pop
mov
push
mov
scas
add
xchg
jns
xchg
jmp
mov
inc
add
jae
dec
dec
inc
push
cmp
insb
mov
rclb
fcomps
jmp
adc
ja
or
push
and
dec
sub
enter
dec
jp
jmp
insl
sub
mov
xlat
sbb
bound
gs
dec
pop
ljmp
cld
mov
aam
xchg
pop
sub
cmp
adc
jmp
mov
jle
xchg
hlt
mov
or
mov
add
mov
mov
xchg
adc
ds
lea
cmp
and
sub
jle
shll
sub
cltd
cmp
mov
sbb
xor
pop
aas
mov
cmpsl
sahf
mov
or
mov
lods
or
subl
jecxz
dec
push
inc
or
or
in
int
hlt
mov
mov
sub
fcmovne
nop
aam
scas
retw
popa
cmp
or
and
and
add
aaa
sbb
inc
aas
xchg
dec
les
xchg
xchg
pop
lds
inc
or
out
enter
and
pop
jns
icebp
pop
popa
mov
dec
sbb
pop
inc
and
mov
cmp
sub
push
push
in
divl
mov
enter
sbb
incb
lds
fdivl
les
imul
aaa
sub
adc
xchg
jl
mov
fists
cmpsb
fsubr
sub
cld
mov
lods
sub
aam
pop
lahf
shl
xor
stos
leave
mov
mov
xchg
das
cs
ljmp
popl
jg
test
xor
into
imulb
rorb
sub
test
shlb
rcrb
into
fistl
push
push
pop
icebp
xchg
mov
xor
std
iret
xchg
std
jns
sub
add
icebp
daa
sbb
test
test
rcrb
or
dec
rclb
enter
xchg
mov
daa
push
mov
mov
mov
mov
and
popa
push
adc
sub
imul
adcl
adc
cmp
push
std
out
loop
mov
and
test
xchg
fsubs
xchg
add
jle
testb
sub
ret
jbe
pusha
mov
stos
ds
mov
daa
shrl
mov
fimuls
and
mov
mov
imul
movsl
push
push
push
icebp
std
sarb
leave
mov
mov
jo
out
scas
pop
jge
push
shufps
mov
and
mov
fsubrl
nop
xor
xchg
jecxz
xchg
fidivs
int3
js
cmc
push
dec
jae
add
push
and
mov
outsl
and
push
es
pop
lea
lcall
les
add
cmp
pop
mov
notb
into
mov
aad
xchg
adc
cs
jecxz
xor
or
pop
cmpsl
std
insb
aad
sahf
mov
lret
popa
xchg
jae
outsl
or
sub
push
jp
cld
es
mov
add
cmc
pop
xor
stos
sbb
es
mov
sbb
jecxz
mov
inc
gs
mov
xor
fiadds
mov
js
xor
xor
mov
ffree
sarl
jo
cmc
mov
les
scas
sub
inc
lock
adc
jge
mov
push
je
inc
dec
or
aad
aas
mov
adc
add
cmp
lcall
xchg
dec
roll
pushf
mov
xchg
push
mov
jmp
aas
js
bound
ljmp
or
ret
xlat
sub
filds
dec
xchg
dec
adc
jb
bound
cwtl
into
lcall
xor
pop
adc
sub
sub
out
out
xor
jns
and
sub
out
bound
out
xchg
jg
maxps
mov
mov
or
lea
sub
push
jno
leave
lahf
insl
int
jnp
stos
sti
out
cmc
jecxz
dec
out
and
enter
scas
insl
or
push
add
or
jge
loop
jns
sbb
mov
sbb
push
mov
vpshld
push
outsb
push
andl
inc
lods
push
in
sbb
ljmp
aas
lds
dec
nop
in
insl
stos
aad
aas
mov
shl
jae
test
or
xchg
aas
cs
inc
rcr
pop
test
fsubrl
dec
lahf
dec
divl
mov
and
mov
lcall
sub
adc
fst
in
and
mov
iret
imulb
xor
cwtl
or
cli
jo
pop
int3
pop
clc
sbb
ja
or
movmskps
stos
mov
inc
cwtl
add
sbb
cmp
adc
adc
fmuls
or
ret
push
lea
push
dec
or
inc
cmpsb
mov
in
movsl
inc
mov
xchg
cmp
push
jo
lahf
rcrb
and
imul
mov
jnp
mov
mov
shll
aad
inc
mov
and
test
test
mov
mov
repz
xor
fisubs
jno
dec
mov
addb
mov
iret
fstpt
test
push
outsb
filds
lock
and
gs
ror
or
mov
jle
insb
mov
pop
aaa
das
das
in
add
insb
mov
mov
sahf
and
scas
inc
jno
outsb
jg
roll
mov
popa
mov
inc
fdivrs
popa
jle
roll
pop
inc
dec
addl
mov
xlat
inc
pop
push
push
jmp
jp
or
mov
lods
adc
xchg
pop
add
lea
imul
repnz
xlat
mov
mov
mov
scas
or
pop
inc
mov
xchg
in
and
jns
or
jbe
mov
dec
leave
sub
jae
ret
cmp
ffree
int
push
jno
aaa
push
stc
sbb
add
xchg
pop
push
jne
gs
mov
add
sbb
pop
jb
stos
sbb
test
aas
ja
sbb
out
pop
out
shlb
popf
push
lret
popa
shl
mov
lds
cmp
loopne
adc
rep
dec
out
imul
mov
out
mov
jle
xlat
das
cwtl
sub
mov
mov
orb
sub
cmpsl
dec
mov
add
mov
sub
fs
cmp
push
push
and
insl
mov
scas
frstpm(287
mov
inc
add
mov
cli
shrl
out
adc
adc
sub
test
and
or
mov
adc
push
adc
ret
mov
lods
mov
cli
outsl
dec
push
mov
inc
cmpsl
scas
or
inc
cmp
mov
shl
pusha
mov
mov
inc
dec
mov
stc
jne
xchg
ficoml
jae
cmp
fadd
int
mov
and
in
adc
mov
cmpsb
adc
sbb
hlt
adc
outsl
frstor
inc
shlb
mov
adc
scas
and
arpl
sub
sbb
mov
inc
add
and
ds
mov
push
add
dec
mov
fcmovb
repz
lods
je
mov
dec
xor
dec
shlb
adc
mov
gs
add
sbb
mov
inc
push
push
int3
ret
sbb
out
enter
test
imul
or
push
mov
ja
dec
mov
dec
push
xor
xchg
bound
out
movsl
ret
outsb
mov
repz
push
stos
and
xchg
push
mov
xor
jle
jg
lret
inc
pop
sbb
jmp
in
xchg
sub
mov
movsb
lds
outsb
sub
pop
lahf
sub
dec
loope
loop
mov
test
sub
mov
cmp
inc
orb
xor
jge
lods
or
push
rcrb
cmp
inc
mov
dec
mov
subl
out
pop
mov
sub
or
shll
cmc
das
divl
xchg
mov
in
xor
or
jns
dec
test
add
jge
dec
ret
xchg
jb
push
loopne
sbb
mov
inc
push
push
mov
xor
cmp
fsts
inc
jae
out
imul
js
xchg
adc
jno
xchg
pop
iret
fstpl
mov
test
lcall
sbb
nop
daa
loopne
lods
adc
inc
push
idivl
pop
jno
aas
lods
pop
and
cs
loopne
out
shlb
cltd
xor
mov
bound
call
js
mov
mov
jns
mov
and
fisubs
repnz
mov
int3
rcr
fcmovnbe
ss
xor
xchg
dec
or
imul
xchg
mov
insb
jmp
notl
mov
sbb
and
aam
sbb
jae
sub
mov
xchg
lret
cs
mov
xchg
les
push
cmpsb
mov
pusha
fdivrs
ds
mov
bound
mov
xchg
push
pop
call
les
xchg
inc
cmpl
mov
dec
repz
ret
jge
outsb
inc
sub
mov
push
jecxz
scas
loopne
or
jae
sti
ljmp
daa
in
sbb
lcall
sbb
out
clc
push
cmpsl
add
cltd
cmp
inc
cmp
cwtl
subb
cmpsl
cs
aam
in
lret
stc
nop
and
or
sbb
mov
sbb
adc
loop
gs
xor
xchg
jecxz
sbb
add
cmp
insl
pop
adc
adc
or
iret
test
push
jge
jbe
aaa
ret
dec
lret
cli
adc
mov
fcoms
leave
aad
adc
cvttps2pi
mov
jecxz
movsl
mov
pop
mov
xor
xlat
add
popa
rorb
loop
inc
xchg
ljmp
mov
inc
inc
pop
dec
mov
ds
jp
idivl
add
clc
mov
je
shrl
or
cmc
cmpsb
cs
sub
inc
add
adc
decl
sub
cwtl
imul
sti
sbb
ljmp
inc
outsb
sub
shrb
and
jg
aam
jns
jbe
lods
mov
divl
or
cmp
dec
mov
fdivs
dec
fsubr
xor
imulb
push
stos
clc
das
je
mov
add
jle
dec
lret
sbb
outsl
addr16
loop
in
sbb
adc
jp
mov
or
xchg
push
xor
rcrl
sbb
sarl
mov
data16
rorb
sub
push
mov
es
dec
cmp
add
stc
jle
xchg
les
ss
push
pop
mov
pop
scas
test
cmc
popa
xchg
jecxz
cwtl
int
xor
outsb
loope
subl
jns
mov
mov
lods
and
sbb
pop
or
pop
aad
and
mov
adc
mov
cmpsl
mov
cmpsb
aad
push
icebp
cmpsb
ret
lahf
jo
insl
movsb
mov
xor
sbb
stos
jnp
leave
lods
fdivs
xchg
mov
cmp
adc
das
push
in
lret
sbb
iret
les
mov
xchg
test
xchg
dec
adc
js
fistpl
xchg
addr16
repnz
inc
mov
xlat
loopne
mov
inc
or
pop
xchg
mov
inc
sahf
and
or
arpl
pop
rcll
icebp
dec
push
and
and
iret
lret
mov
stos
jp
lds
xchg
leave
dec
pop
xchg
push
lret
inc
xor
stos
jne
lds
add
mov
sub
mov
in
out
enter
push
or
inc
sbb
add
lret
add
bound
sbb
es
mov
mov
aad
cwtl
testl
addr16
mov
fldl
inc
popf
mov
xorb
lock
stos
dec
pop
fcmove
xor
xchg
hlt
mov
das
or
add
sub
or
int3
mov
mov
bound
jbe
icebp
inc
xchg
push
mov
lods
push
clc
js
bound
mov
mov
ret
arpl
movsb
popa
jno
mov
ror
or
cmc
daa
loopne
in
sbb
loope
mov
or
push
sbb
test
test
push
sahf
mov
mov
mov
mov
popf
jmp
mov
out
shlb
rclb
or
push
sub
push
pushf
ljmp
out
stos
jle
subb
rcl
mov
jl
outsb
stos
push
in
cli
jge
stc
xchg
fst
mov
push
xchg
xor
jb
jmp
negl
ret
inc
aam
pushf
pop
push
mov
mov
push
dec
sti
lock
pop
or
mov
mov
jp
push
outsb
adc
add
rcl
pop
xchg
lock
xor
dec
fwait
push
add
pop
or
dec
cmp
or
leave
cltd
call
xor
test
mov
dec
sub
cmpsl
xchg
mov
mov
or
push
pop
fucomip
int3
xchg
push
scas
out
mov
sub
xor
push
xchg
jp
add
or
out
fldenv
mov
push
dec
out
movhps
mov
xorb
outsb
lcall
test
lock
cmp
scas
mov
cmpsl
loop
sahf
iret
fdiv
mov
sti
inc
movsb
sub
or
or
fists
add
cmp
loopne
cld
sub
rclb
push
jle
mov
sbb
lret
mov
sub
push
mov
insl
mov
inc
mov
mov
imul
adc
jne
inc
jg
cli
test
ljmp
lcall
pop
movb
loope
xor
cmp
sub
lahf
ds
jbe
adc
jne
xchg
aas
insl
push
daa
out
xor
negb
adc
dec
push
scas
cltd
add
pop
testl
dec
fdiv
bound
loop
push
add
icebp
push
mov
push
mov
loop
and
cmp
shr
sub
mov
insl
movsl
enter
ja
mov
dec
push
lods
std
push
cld
leave
out
inc
lret
mov
cvtpi2ps
mov
daa
cmp
lcall
mov
xor
or
call
scas
xchg
je
push
int3
push
mov
sub
out
orl
sbb
movsl
sahf
es
repz
sti
sub
or
aam
xor
cld
test
mov
sbb
enter
shll
push
pop
and
mov
aas
fs
dec
les
arpl
pop
fsubrl
loopne
inc
mov
out
jge
in
arpl
xchg
lock
mov
dec
aam
lcall
fmul
or
aas
adc
mov
sub
sbb
add
fcmovnu
push
adc
cmp
xchg
jmp
sbb
es
sti
stos
outsb
mov
and
push
ficompl
and
push
push
adc
or
mov
inc
mov
cs
pop
je
cmp
cmpsl
sub
lret
mov
lret
rolb
add
cld
jno
lahf
int
minps
rorl
mov
mov
mov
shrl
orb
das
and
xor
insb
stos
insb
cmp
imul
fisttpl
cmc
aas
add
cli
ret
adc
aam
int
jecxz
adc
mov
cmp
dec
leave
aam
cmp
mov
dec
ljmp
or
jg
cltd
popa
mov
sbbl
popl
fstpt
jae
aaa
jmp
inc
mov
add
push
movsb
fdivl
adc
loopne
and
pusha
push
xorl
addb
adcb
dec
or
adc
inc
sbb
insl
cmpsl
or
loop
iret
or
inc
jecxz
sbb
pop
ret
mov
inc
cwtl
faddl
popa
sub
loop
jno
lcall
pop
ds
and
dec
dec
lcall
mov
sub
dec
fisubrl
shlb
into
fisttpl
movsl
cmp
or
or
dec
push
jp
mov
rclb
arpl
mov
test
xchg
xor
insb
in
sbb
mov
cmp
aam
bndstx
test
or
scas
hlt
mov
aad
fnstcw
xchg
nop
ret
roll
es
repz
dec
lds
and
and
int
call
jl
jp
sub
fldenv
adc
sub
cltd
fsub
sbb
jle
enter
mov
fnstcw
loope
pop
shll
adc
cli
sub
cwtl
push
aas
loopne
xor
jnp
cld
sbbb
dec
push
int
mov
mov
and
mov
mov
cwtl
mov
popa
ja
mov
imulb
mov
mov
insl
push
loop
adc
xchg
ficoms
call
lret
rorb
inc
testb
popf
repz
lods
lods
adc
in
pop
sbb
and
paddb
clc
stos
lods
iret
mov
cs
test
xchg
iret
test
adcl
mov
lods
aas
sarb
inc
mov
cmpsb
sub
das
ljmp
jg
jne
lods
jg
jnp
ficomps
testb
andb
jne
jne
mov
mov
mov
lret
inc
add
shr
and
test
push
popa
xor
or
data16
int
jbe
mov
sub
and
scas
out
gs
add
cmp
xchg
out
jmp
push
inc
js
scas
out
cmp
mov
jg
shll
jmp
or
or
mov
aad
or
and
inc
loope
daa
mov
xchg
test
mov
dec
shlb
arpl
inc
dec
test
daa
int
jmp
lock
mov
nop
and
and
cli
push
cmc
pop
popf
add
mov
aas
ljmp
fisubs
xchg
push
mov
lods
push
mov
inc
or
pop
push
fdivrs
test
scas
push
mov
jno
icebp
idivb
shlb
int
notb
jl
xor
test
pop
mov
mov
movb
mov
popf
call
sub
sbb
mov
outsb
xchg
lock
outsb
stc
dec
mov
jb
popa
in
mov
notl
mov
jns
std
ret
loop
xchg
lcall
data16
repz
notb
sbb
add
push
and
cmp
test
sahf
push
incl
addr16
lcall
rolb
and
imul
push
push
out
jns
sahf
mov
xchg
mov
fwait
mov
or
mov
mov
jecxz
dec
rcrl
divb
ret
arpl
pop
xchg
mov
jb
mov
aam
lds
int
xor
cwtl
mov
cmpsb
pop
daa
adc
jns
cltd
cmpsb
pop
fidivl
popl
dec
into
iret
loop
push
adc
ljmp
xor
pop
shlb
gs
add
and
stc
inc
jle
sbbb
and
sbb
xorl
fistl
dec
xor
push
sbb
and
jbe
mov
cmc
mov
div
imul
cld
push
and
lock
pop
cmp
outsl
pop
cmp
cs
push
iret
xchg
xchg
cmc
sbb
test
pop
loopne
loope
std
cmp
mov
js
inc
sarl
sub
iret
pop
in
cmc
jmp
sbb
cld
jbe
cmp
fcomps
mov
in
xchg
pop
cs
xor
out
fcomps
mov
out
sbb
in
xor
dec
mov
xchg
mov
sub
inc
dec
call
scas
dec
lds
cltd
pop
cltd
push
testl
aam
xchg
das
cmpsl
cmp
push
cmp
into
imul
sbb
lahf
cmp
iret
push
in
aaa
test
sti
pop
push
xor
shrl
push
insb
leave
mov
divb
adc
and
xor
notl
jo
fsubl
movsl
cltd
add
lods
in
lods
mov
data16
cmp
jbe
xor
lock
mov
or
outsb
inc
ja
mov
outsb
adc
rolb
cwtl
lret
scas
mov
xlat
xchg
je
mov
stos
cwtl
jne
js
jae
lret
cmc
xchg
into
push
sub
pushw
mov
ficoms
add
xlat
imulb
fldt
inc
jg
loop
mov
mov
setno
add
les
jns
enter
and
push
fmull
je
lret
je
jno
dec
lret
jne
shll
cltd
scas
fimull
pop
jb
out
xor
je
cmc
lods
inc
jae
call
cs
xchg
or
adc
dec
in
dec
sbb
fldenv
enter
hlt
outsl
jmp
xor
sbb
pop
cwtl
jns
fs
in
adc
arpl
jbe
jne
stos
in
fs
enter
mov
popf
ret
cmp
enter
jo
jb
cmp
test
sti
pop
mov
mov
scas
cltd
popf
jl
fwait
mov
cmp
or
and
stos
fdivrs
pop
adc
adc
jb
mov
mov
ret
movsl
adc
jnp
mov
pop
pop
xchg
push
xchg
mov
jbe
fnstsw
movsb
cli
jg
scas
cltd
sbb
dec
imul
xlat
cmp
fisubl
sarl
and
lcall
adc
dec
add
pop
cmp
add
std
in
popf
push
xor
sub
in
mov
adc
add
sbb
cwtl
call
inc
setne
inc
cmp
cmp
outsl
sbb
xor
push
mov
lcall
mov
idivl
cmp
xor
shll
push
addr16
lret
lret
ja
xchg
rcl
cltd
cmp
arpl
pop
data16
or
sub
scas
push
rcr
sub
sbbl
movsb
mov
add
xor
mov
or
mov
cmpsb
inc
cltd
icebp
test
call
push
push
loop
movsb
xchg
jne
mov
add
shrb
bound
jmp
mov
lcall
mov
or
sub
es
gs
enter
lcall
and
into
pop
sti
std
xchg
es
ret
mov
dec
cld
int
or
push
jle
jge
push
shrl
aad
lret
jecxz
test
jmp
mov
adcb
std
pop
xor
add
ret
cli
shrl
das
sub
dec
hlt
sbb
mov
mov
ds
cli
mov
cmp
imul
cmp
test
stos
pop
mov
jmp
xor
sbb
lcall
mov
push
in
sub
add
fsubl
mov
mov
les
or
jl
jle
pop
jge
push
outsb
sbb
sahf
stos
roll
dec
hlt
sti
push
cmp
jg
inc
or
ss
xor
pop
push
cmp
push
jns
out
or
repz
xor
add
xor
pop
pop
jne
jne
in
or
ret
adc
push
pop
int
outsb
cmp
or
rorl
fdiv
ds
out
sbb
adc
and
into
std
loop
adc
out
jmp
enter
sbb
adc
dec
mov
sub
ss
vfrczpd
out
hlt
enter
dec
xlat
out
in
loop
adc
loop
pop
mov
xchg
xor
loop
xor
jb
push
pushf
rcrb
mov
cmpsl
fisubrs
xchg
add
in
mov
lods
inc
aad
shlb
fiaddl
mov
fidivrs
jg
rep
xchg
mulb
jno
mov
xor
dec
rclb
fwait
sbb
fsubr
mov
inc
or
sub
cwtl
pop
pop
pop
mov
jmp
lock
xchg
hlt
add
je
popf
insb
dec
dec
mov
push
sbb
fwait
xor
mov
je
pusha
shl
add
and
or
jmp
and
push
hlt
adc
gs
fwait
jno
mov
ret
xor
xor
jp
dec
cmp
mov
adc
mov
pop
pop
mov
jmp
lods
aam
jge
and
xlat
sub
shlb
inc
sub
gs
inc
pop
push
and
subb
fldenv
pop
jae
add
mov
fs
or
pushf
sub
lfs
jnp
pop
jg
js
and
mov
inc
xchg
inc
jno
int
rorl
ja
movsl
mov
addr16
jge
ret
and
aas
sub
test
mov
mov
jo
mov
sub
inc
add
inc
shl
add
pop
out
cmp
xchg
shlb
dec
test
popa
mov
fldt
mov
or
popf
jae
nop
das
dec
loopne
push
das
mov
outsl
mov
or
daa
xchg
pop
push
mov
movsl
jnp
or
dec
sbb
dec
push
and
mov
and
jge
dec
cli
int
xchg
or
cmp
and
daa
std
rcll
addr16
xchg
push
mov
mov
or
insl
and
loopne
jbe
add
xchg
bnd
xor
in
ret
insb
inc
mov
mov
pusha
mov
jg
mov
sti
idiv
cmp
cmpsb
xor
out
push
cmp
fwait
xor
dec
jbe
fstl
stc
pop
outsb
jno
xlat
imul
cmp
xlat
mov
mov
loop
sbb
iret
fdivr
jl
sti
xlat
sub
add
repz
sbb
cltd
test
int3
test
rcrl
mov
cmp
rcpps
ret
test
mov
aaa
cmp
insl
into
sub
cmp
xlat
mov
adc
int3
cli
cld
mov
mov
push
adc
inc
outsl
scas
je
xchg
dec
pop
stc
es
push
and
in
lcall
insl
pop
loop
xchg
loopne
sub
add
push
lods
sbb
out
mov
mov
inc
jg
xlat
pop
icebp
xchg
mov
je
ljmp
xchg
divb
mov
gs
fdivs
jp
and
xor
addr16
es
shlb
fwait
or
push
repz
pop
push
out
mov
inc
push
ljmp
icebp
clc
testl
push
cmp
fldln2
xchg
lods
jns
in
push
push
xchg
xchg
adc
pop
mov
int
repz
ror
xlat
dec
fwait
je
mov
inc
pop
lea
int
sbb
aam
jne
and
cli
cmpsb
pop
mov
lods
push
movsl
mov
sbb
cmp
je
push
jb
mov
dec
sbb
cli
sub
lret
js
les
cmp
test
clc
lret
pop
inc
xchg
mov
into
pop
cmc
mov
inc
loopne
pop
imul
push
divb
mov
popf
jo
inc
push
add
mov
dec
pop
lret
or
ror
andb
fcoml
in
inc
add
mov
mov
pusha
scas
loopne
outsb
sbb
pop
push
lods
out
mov
imul
push
fcompl
pop
iret
adc
pop
xchg
inc
and
add
or
mov
std
cmp
popf
sbb
insb
jg
pop
inc
cmpsb
aad
jmp
pop
stc
xor
outsb
sub
and
in
jg
arpl
push
and
mov
xchg
mov
cmp
out
push
int
push
sbb
mov
repz
pop
push
cmp
es
adc
outsl
insb
push
in
jl
or
xor
and
jle
negl
fsubs
cmp
je
pop
sub
inc
jbe
subb
sub
pop
fstps
mov
push
inc
or
scas
scas
jmp
popf
bound
ret
lret
bound
scas
cmp
adc
mov
inc
rcl
jno
pop
mov
cs
xor
add
aas
pop
mov
xchg
inc
or
push
inc
inc
cwtl
xchg
push
jl
call
int
fisubs
loopne
mov
repnz
fldt
mov
andb
notb
jg
shll
fs
mov
cli
das
jge
xorb
nop
sbb
or
shl
mov
mov
adc
pop
sbb
stos
inc
mov
popf
and
cli
or
push
cmpsl
add
js
push
aad
dec
adc
mov
imul
and
sbb
mov
jge
std
fnstcw
jp
xchg
or
dec
andl
sub
lahf
std
call
cmpsb
shrb
mov
dec
addr16
outsb
mov
lock
cli
jnp
popf
out
and
dec
xchg
cmc
es
push
jmp
inc
inc
mov
adc
gs
inc
xchg
mov
incb
andl
loope
add
aas
push
mov
and
cmp
xor
jp
lahf
inc
movsl
sub
sar
push
mov
sbb
jnp
int3
test
ljmp
ljmp
repnz
dec
icebp
aas
push
push
xchg
sbb
scas
lcall
xchg
lea
jns
xor
fs
repnz
mov
xor
cld
mov
ja
push
mov
cmpsb
stos
mov
stc
and
pop
in
pop
cmpsl
into
jbe
popf
jp
scas
and
inc
int3
jne
jo
loop
xorb
test
daa
pop
and
in
dec
jg
ljmp
cltd
mov
les
inc
clc
push
sahf
push
pop
mov
push
int
mov
pop
mov
cwtl
push
sbb
and
cld
aam
push
jnp
pop
mov
fimuls
mov
insl
add
enter
jb
outsb
push
repnz
aam
inc
sub
out
cmc
ret
push
lods
aam
rclb
and
cltd
inc
pop
leave
mov
push
in
add
or
or
fcomps
loope
and
outsb
fucomp
mov
xorl
sbb
inc
or
xchg
and
inc
fwait
push
mov
xchg
or
push
inc
gs
jp
inc
dec
mov
sbb
shlb
mov
movb
in
dec
sbbl
scas
sbb
push
mov
or
or
or
pop
outsl
sti
fs
testb
sub
das
pop
mov
lret
test
mov
or
adc
out
add
dec
pop
pop
roll
and
aam
cmp
pushf
movsl
pop
mov
mov
jecxz
ja
test
int
stc
stos
push
jns
jl
push
inc
hlt
fcomp
xchg
push
movsl
enter
repz
sub
or
push
pop
inc
dec
dec
js
in
xor
inc
and
fucomi
xor
mov
pop
outsb
cmp
mov
lret
add
xor
xor
push
iret
xlat
add
mov
inc
jmp
test
jns
loopne
mov
out
push
adc
imul
mov
pop
adc
jbe
call
ja
sub
scas
dec
ds
push
adc
mov
cltd
mov
pop
sbb
dec
icebp
dec
and
cwtl
outsb
or
stc
cmc
sub
mov
push
in
aam
push
xor
mov
pusha
mov
orl
mov
rcrb
push
mov
fwait
dec
clc
outsl
jae,pn
arpl
pop
sahf
outsb
jnp
jne
jo
adc
imull
mov
lret
inc
sub
ret
scas
jae
xor
enter
adc
jle
mov
flds
popa
push
add
pop
mov
push
pop
fdivrs
imul
pop
and
call
pop
jg
je
sub
aad
pop
stc
mov
push
insl
out
push
sbb
pop
lds
pop
push
push
push
sub
fdivl
adc
cld
or
mov
jp
mov
mov
ret
mov
fs
int3
sahf
ret
lret
cmp
cli
ja
or
jno
inc
dec
xor
pop
xlat
xchg
cli
out
lea
mov
icebp
leave
pop
cmpsb
popa
pop
repz
jp
out
stos
push
xchg
jg
test
pop
int3
cltd
cmpsl
ja
ljmp
icebp
push
fs
mov
fcmovne
rcrl
ret
sbb
repnz
mov
test
nop
popf
roll
add
out
test
or
cld
jbe
xchg
icebp
mov
in
dec
sbb
cmp
es
push
lret
enter
sbb
cmp
xchg
fstpl
jo
add
xor
and
mov
dec
ljmp
mov
cmpsl
js
mov
mov
sbb
mov
xchg
adcb
dec
mov
dec
xor
adc
mov
sahf
mov
test
inc
add
cwtl
jmp
xor
xchg
mov
pop
jmp
das
inc
push
into
addr16
je
dec
imul
inc
repz
jo
jge
ficompl
scas
jmp
jo
jo
mov
sbb
andb
pop
in
dec
or
daa
leave
adc
cld
ljmp
sbb
or
dec
mov
xchg
daa
add
aas
outsb
adc
clc
push
negb
lret
pop
xor
sub
pop
scas
mov
jno
addr16
jp
mov
or
jno
fiadds
sahf
sbb
sbb
in
cmp
aad
mov
jb
loopne
leave
cmc
stos
xor
push
xchg
ljmp
jmp
in
adc
ja
test
inc
orl
es
jno
cmc
or
dec
popf
fmulp
int3
jns
and
out
mov
rcrl
xor
pushf
leave
jnp
mov
pop
test
xchg
jbe
ss
mov
mov
ret
mov
sub
seta
xchg
hlt
mov
xlat
jbe
sbb
mov
adcl
sbb
cmpsb
nop
stc
pop
xor
mov
leave
scas
sub
repnz
outsl
jmp
imull
popa
inc
and
inc
dec
icebp
adc
in
or
mov
and
aas
xchg
js
test
outsb
mov
sub
out
mov
mov
push
push
dec
adcl
push
sti
lret
mov
mov
ljmp
insl
mov
pop
jl
out
call
enter
inc
sbb
pop
adc
js
dec
fldt
pop
clc
in
les
pop
in
xchg
cmpsb
rorb
flds
outsb
dec
es
std
int3
mov
cltd
fsubl
pop
and
data16
xor
add
add
add
test
add
add
lea
jmp
jns
sub
jb
inc
cmp
jnp
sub
mov
cmp
inc
xor
add
push
pop
jmp
and
xor
cmp
mov
ja
jb
push
pop
mov
lea
not
push
pop
mov
jne
jl
cmp
not
mov
sub
mov
push
pop
mov
lea
jne
push
pop
push
pop
test
lea
mov
mov
mov
call
jg
sub
mov
pop
cmp
jmp
sub
sub
and
mov
xor
push
pop
cmp
pop
lea
mov
lea
mov
jg
dec
sub
mov
mov
add
cmp
push
pop
test
push
mov
add
jbe
push
pop
jmp
cmp
cmp
mov
jno
push
pop
mov
jmp
lea
mov
push
pop
push
pop
jne
push
pop
xor
xor
push
pop
sub
xor
mov
test
jnp
jge
push
pop
jmp
push
pop
and
jae
sub
cmp
lea
test
jmp
add
dec
push
mov
add
sub
mov
pop
sub
mov
mov
add
push
pop
push
pop
push
pop
push
add
not
add
mov
jo
mov
push
pop
push
pop
push
pop
not
push
pop
inc
mov
sub
inc
cmp
push
pop
mov
mov
jbe
xor
add
not
not
xor
cmp
lea
push
pop
add
xor
sub
sub
mov
pop
sub
lea
jle
je
push
jmp
cmp
mov
je
push
pop
not
cmp
push
pop
cmp
cmp
not
inc
lea
push
pop
add
not
mov
jmp
jmp
cmp
mov
mov
push
pop
xor
sub
not
cmp
not
cmp
push
pop
add
push
pop
mov
push
pop
test
xor
jg
push
pop
and
mov
cmp
push
mov
add
lea
mov
mov
mov
not
push
pop
sub
mov
pop
sub
mov
mov
jmp
mov
push
pop
mov
push
pop
push
pop
mov
jo
mov
jne
mov
xor
add
push
pop
push
xor
mov
push
pop
cmp
push
pop
ret
jmp
push
mov
add
push
pop
mov
je
cmp
xor
jo
mov
push
pop
push
pop
mov
xor
push
pop
lea
mov
add
jmp
dec
jno
push
pop
xor
jb
mov
mov
xor
push
mov
add
sub
xor
cmp
sub
mov
push
pop
mov
cmp
lea
push
pop
cmp
test
lea
xor
cmp
xor
cmp
push
pop
lea
lea
dec
lea
cmp
xor
xor
sub
jmp
pop
cmp
ja
push
pop
jne
mov
xor
add
mov
cmp
mov
test
sub
mov
pop
mov
push
pop
cmp
jns
cmp
add
mov
push
pop
mov
sub
not
jb
add
jae
mov
push
pop
pop
lea
jmp
sub
cmp
pop
not
lea
push
pop
lea
not
and
mov
cmp
dec
sub
mov
mov
add
sub
ror
add
mov
jo
push
pop
xor
cmp
jmp
lods
xchg
sbb
adc
push
jnp
add
mov
add
add
or
add
cmpsb
jg
dec
stos
xor
test
jg
push
lds
add
push
fldl
lock
jge
add
and
idivb
add
call
incl
add
mov
adc
sbb
xchg
or
inc
sbb
and
pop
rol
add
add
sbb
add
add
incl
mov
int
nop
icebp
inc
add
loopne
add
add
add
lcall
add
cli
inc
jo
and
cld
pop
out
add
cmpl
mov
fisubrl
pop
leave
xchg
testb
outsb
loopne
mov
sbb
xchg
jl
cmpsl
mov
popa
nop
lret
cmp
adc
xor
or
mov
and
stos
pop
adc
xchg
data16
jns
push
push
mov
inc
xlat
sub
and
shll
cmp
add
push
dec
xor
stos
pop
push
sti
pop
repnz
scas
iret
lcall
mov
mov
inc
out
xor
jae
stos
mov
jns
mov
adcb
das
xchg
movsb
mov
push
push
orl
je
fstpt
jno
sub
int3
rcrl
arpl
mov
dec
inc
sbb
sbb
jp
inc
ficomps
in
push
jle
aas
lea
mov
jae
or
dec
jne
test
lods
sarl
ret
jg
mov
push
mov
add
dec
and
add
lods
movsl
std
and
pushf
in
shr
movsb
sub
add
jnp
cld
test
test
add
jge
add
cmpsb
jge
pop
xchg
add
add
jge
cmpsb
jge
add
add
add
rol
jp
mov
int
or
xor
js
add
add
adc
js
add
add
add
mov
dec
add
add
pop
cmpl
sbb
or
add
pop
xor
movsl
jge
inc
or
xchg
movsl
lds
test
inc
int3
test
mov
mov
add
rol
rol
roll
mov
add
lret
mov
cmpsb
stos
test
test
inc
jnp
in
std
sub
ret
scas
pop
inc
mov
and
mov
ud1
mov
mov
push
push
mov
ud1
mov
mov
addl
test
mov
xchg
mov
imul
push
mov
ud1
nop
mov
pop
xor
push
mov
ud1
pushf
mov
cmp
rolb
push
int
ud1
cwtl
mov
and
dec
test
test
mov
aam
ud1
push
sbb
push
mov
ud1
enter
dec
dec
sarb
mov
ud1
int3
mov
fmuls
test
push
and
add
ud1
cmpsb
ja
add
mov
mov
scas
xchg
and
scas
sbb
sahf
xor
sub
ljmp
or
xor
add
mov
jne
push
mov
push
mov
cmp
mov
ud1
xchg
push
mov
push
mov
inc
cmp
ud1
orb
ja
pcmpeqw
mov
mov
ud1
es
mov
push
mov
add
scas
jge
and
mov
sbb
dec
incb
add
test
mov
pop
je
add
test
add
add
add
add
data16
test
ud1
xchg
lods
mov
ud1
mov
jnp
or
ret
add
add
and
mov
push
mov
ud1
cmpl
add
add
add
add
in
movsb
mov
jge
add
movsl
aam
psllq
add
add
add
jo
add
xchg
cmp
psllq
add
add
add
add
jns
cmp
and
ret
push
jnp
in
movsb
mov
jge
add
test
push
mov
dec
xor
sub
xchg
nop
mov
in
cmpsb
jge
xor
inc
xorl
in
inc
jge
or
mov
scas
xor
xchg
push
mov
add
in
cmp
jnp
push
mov
add
add
ds
std
lds
xchg
or
mov
test
mov
push
lcall
xchg
cwtl
mov
mov
xor
roll
add
add
push
mov
add
mov
dec
push
mov
mov
cs
push
setae
mov
jns
ud1
push
mov
push
mov
add
jnp
fistpl
test
push
mov
push
mov
push
mov
sub
add
add
mov
add
add
paddw
push
mov
push
mov
sub
add
add
mov
jnp
or
test
cmp
jnp
add
inc
or
testl
and
subl
mov
sbb
mov
add
add
add
cmc
das
xor
pop
mov
add
pop
jnp
fcmovnbe
lret
xchg
test
mov
mov
jnp
jl
ud1
mov
ud1
fwait
js
ud1
sbb
jnp
mov
ljmp
std
jge
push
mov
push
mov
sub
add
push
mov
jnp
dec
mov
dec
mov
dec
mov
lret
xlat
xchg
sbb
lret
fwait
inc
mov
lret
xlat
xchg
sbb
mov
add
psrlw
inc
mov
incl
add
dec
cmpl
mov
fadds
sbb
ud1
mov
lea
ud1
xor
ud1
add
add
push
mov
jnp
pop
mov
or
push
mov
lret
iret
lea
test
out
test
xchg
jnp
jnp
or
adc
or
cmp
xor
inc
sbb
push
mov
test
xchg
loopne
jbe
sbb
add
movsl
push
std
lds
mov
setae
sbb
stos
jge
adc
pusha
stos
push
push
add
test
add
add
mov
dec
add
add
lods
fs
cmpl
call
mov
or
add
fwait
fs
or
inc
add
inc
inc
add
movsb
rdpmc
sbb
adc
lea
in
test
push
mov
mov
lea
in
test
push
mov
mov
push
and
mov
mov
mov
mov
or
sbb
push
add
incl
add
push
add
aaa
add
ljmp
add
fldt
add
lcall
decl
xor
add
xor
add
dec
xor
add
xor
add
pushl
xor
add
gs
xor
fs
insb
add
add
add
add
push
add
add
add
add
ja
jo
imul
gs
gs
xor
cs
insb
add
add
lea
add
pushf
das
add
mov
add
shrb
add
out
add
imull
add
add
xor
add
xor
add
add
add
push
xor
add
xor
add
add
in
xor
add
add
sbb
add
xor
add
dec
xor
add
add
push
xor
add
add
xchg
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
pop
xor
add
add
add
add
jg
add
lea
add
pushf
das
add
mov
add
shrb
add
out
add
imull
add
add
xor
add
xor
add
add
add
push
xor
add
xor
add
add
in
xor
add
add
sbb
add
xor
add
dec
xor
add
add
push
xor
add
add
xchg
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
pop
xor
add
add
add
add
add
inc
insb
outsl
jae
dec
popa
outsb
fs
add
add
gs
je
inc
jbe
outsb
je
add
add
gs
inc
jb
je
arpl
push
arpl
outsb
add
inc
imul
push
dec
imul
popa
insb
insb
jae
add
gs
jb
je
arpl
push
arpl
outsb
add
add
outsb
fs
gs
jne
arpl
add
add
gs
imul
or
inc
gs
jne
jb
outsb
je
jb
arpl
jae
or
inc
gs
jne
jb
outsb
je
jb
arpl
jae
add
add
je
jne
jb
outsb
je
push
dec
add
add
je
popa
jae
inc
jb
outsl
jb
or
inc
gs
outsl
fs
gs
imul
add
dec
outsl
fs
gs
popa
outsb
fs
gs
add
add
je
jns
je
insl
push
imul
insb
gs
imul
gs
imul
je
adc
inc
gs
gs
imul
adc
dec
outsb
imul
inc
jb
je
arpl
push
arpl
outsb
add
add
je
jb
outsl
arpl
fs
outsl
insl
jo
jb
inc
js
push
add
add
je
jb
outsl
arpl
fs
arpl
insl
outsb
je
adc
dec
outsb
je
jb
outsl
arpl
fs
js
push
add
gs
outsl
arpl
fs
outsb
arpl
insl
outsb
je
push
add
jbe
inc
jb
je
arpl
push
arpl
outsb
add
add
fs
imul
js
add
add
fs
gs
jne
arpl
sbb
insb
jae
jb
insl
jo
push
add
add
jb
outsb
push
add
add
insb
je
inc
jns
gs
outsl
push
imul
sbb
dec
jne
jo
je
bound
push
je
imul
push
jne
jb
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
push
add
imul
jo
imul
gs
je
jbe
outsb
je
and
push
je
push
outsb
ja
outsb
add
add
je
jbe
outsb
je
and
push
gs
outsb
push
gs
js
gs
imul
gs
and
push
imul
jae
jne
arpl
and
push
insb
gs
and
insl
imul
outsl
arpl
jae
add
push
gs
js
gs
imul
gs
daa
add
imul
je
jo
gs
bound
arpl
sub
push
popa
imul
insb
gs
bound
arpl
fs
jo
xor
cs
insb
add
xor
add
xor
add
add
add
popa
xor
add
add
xorl
add
test
add
mov
add
add
xor
add
xor
add
add
add
popa
xor
add
add
xorl
add
test
add
mov
add
add
add
insb
outsl
arpl
gs
outsb
fs
outsb
imul
push
imul
arpl
outsl
imul
gs
bound
jae
imul
jb
imul
outsb
je
outsl
jne
arpl
sub
inc
jb
gs
imul
outsb
push
jb
arpl
jae
outsl
imul
add
outsb
push
push
push
outsl
imul
das
add
addr16
insb
outsl
jae
dec
gs
xor
push
imul
outsb
je
outsl
jne
arpl
add
add
addr16
jo
outsb
dec
gs
js
add
add
addr16
jne
jb
push
popa
insb
jne
inc
js
add
add
jo
jb
inc
jbe
outsb
je
add
gs
insb
xor
cs
insb
add
xor
add
xor
add
xor
add
add
jae
add
mov
add
add
add
xor
add
xor
add
xor
add
add
jae
add
mov
add
add
add
push
dec
inc
push
dec
outsl
je
data16
xor
insb
insb
inc
bound
je
add
add
gs
insb
inc
js
arpl
gs
js
add
add
gs
insb
inc
js
arpl
gs
add
add
gs
insb
pop
dec
outsl
je
data16
arpl
push
add
add
inc
gs
gs
je
jo
outsl
insb
fs
cmp
push
dec
inc
gs
popa
insb
insb
outsl
arpl
cmp
push
dec
inc
gs
jo
arpl
insb
inc
outsl
insb
fs
outsl
arpl
imul
xor
cs
insb
add
xor
add
cmp
add
pop
xor
add
xchg
add
add
xor
add
cmp
add
pop
xor
add
xchg
add
cmp
inc
outsl
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
cmp
outsb
imul
inc
js
add
push
popa
jae
dec
gs
inc
insb
insb
outsl
arpl
aas
add
push
popa
jae
dec
gs
inc
jb
add
inc
outsl
push
popa
jae
dec
gs
push
gs
insb
insb
outsl
arpl
inc
add
push
outsb
imul
imul
jb
popa
je
push
je
gs
insl
dec
outsb
dec
inc
insb
outsl
bound
add
push
je
imul
inc
push
dec
inc
xor
